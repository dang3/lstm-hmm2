nop
nop
push
nop
nop
nop
nop
ret
ja
push
pop
mov
addr16
sahf
push
mov
add
or
and
dec
ret
sbb
jle
ljmp
add
int
js
dec
fdivrl
add
insl
mov
push
inc
enter
mov
pusha
call
cltd
mov
push
les
cs
dec
stc
xchg
insl
jns
jle
mov
pusha
mov
int
adc
dec
fs
and
daa
adc
mov
xor
stc
pop
mov
int3
inc
jge
data16
lahf
outsl
ret
ja
mov
mov
aam
jnp
and
les
jnp
sbb
jp
push
push
popa
fcompl
and
xchg
aaa
jge
mov
les
inc
xor
in
adc
fs
decb
cmp
into
mov
inc
mov
notb
fsub
lods
adc
push
mov
aaa
pop
sub
xchg
pop
imul
movsb
das
icebp
lcall
js
inc
fstl
jl
cmp
popf
cmp
fistpl
lahf
adc
das
and
sub
pop
and
lcall
mov
mov
enter
dec
xchg
stos
jl
sahf
push
adc
bound
loope
inc
dec
jmpw
mov
inc
push
lret
test
dec
ficoms
inc
shll
or
jae
push
stos
aas
or
add
adc
inc
push
pop
insb
inc
xchg
sub
push
xor
push
fwait
icebp
ret
stos
mov
push
dec
jmp
xchg
inc
in
ss
imul
lcall
imul
push
sbb
shlb
dec
and
push
mov
scas
enter
sbb
lahf
aad
jbe
pop
xchg
add
jne
sbb
jg
repnz
and
lods
jmp
leave
or
notl
xchg
mov
xchg
aas
rclb
jle
incb
pop
sbb
div
inc
outsb
ss
sbb
jne
repz
sbb
sbb
lods
mov
jno
pop
pop
shrb
mov
mov
dec
inc
jo
repnz
test
out
mov
jno
mov
jno
xor
loop
shrl
adcb
cmpsb
ja
push
jmp
fiadds
shlb
dec
push
add
lret
adc
mov
lock
mov
add
dec
xor
or
sub
adc
add
mov
sub
ljmp
jno
les
pop
mov
inc
stos
push
pop
insl
jbe
cmp
jo
jb
jp
push
inc
pop
cmp
movb
cmpsb
dec
mov
shrb
lods
inc
fisubrl
mov
sbb
mov
jecxz
popf
push
add
add
hlt
lret
jb
xchg
or
mov
pop
sub
repnz
in
inc
cmp
ljmp
iret
mov
cmp
pop
in
or
xchg
mov
push
cld
lcall
mov
mov
cmc
jmp
xor
pop
cmp
iret
mov
sarl
int3
push
xchg
jb
xor
inc
outsb
insl
imul
xchg
fs
into
add
xchg
fidivl
xchg
pop
dec
or
and
arpl
push
add
or
fld
test
mov
idivl
das
add
jmp
call
fldt
cmp
jo
cmp
lret
adc
dec
cmp
inc
xor
add
fstl
dec
rclb
incl
rorb
cltd
out
in
mov
imul
into
stc
mov
cwtl
ljmp
xchg
push
push
fstpt
adc
bound
in
or
xor
gs
adc
stos
divb
popf
pop
push
out
jno
cmpsl
sti
pop
push
adc
stc
lret
xchg
and
ror
fcomps
dec
int3
sbb
push
add
inc
adc
cli
mov
rorl
or
mov
test
xchg
pop
scas
pop
xor
xor
xlat
test
mov
push
jp
ret
int
cld
out
sbb
add
pop
pop
push
push
js
and
jns
dec
xchg
add
imul
call
fs
fbld
jb
inc
mov
stc
push
mov
arpl
ljmp
xchg
and
sub
lret
pop
arpl
into
outsb
sbb
dec
mov
mov
fimuls
xor
out
push
scas
int
add
sahf
out
inc
push
dec
cmp
mov
psllq
mov
cld
repz
mov
orb
cwtl
in
sub
rcll
out
jns
dec
or
adc
cwtl
outsl
push
cmp
fldenv
push
add
imul
xchg
stc
enter
leavew
fsubs
xchg
and
pop
hlt
cltd
jle
inc
rcrl
add
sub
push
mov
sub
push
scas
cltd
je
add
mov
imul
aas
jb
mov
aad
vcvtps2pd
sbb
mov
jg
cmp
fnsave
jne
arpl
dec
fdiv
dec
int
fmuls
pop
sub
inc
inc
mov
push
cltd
pop
fildll
dec
push
inc
pop
testb
or
fcompl
jmp
push
sbb
enter
inc
cltd
inc
out
in
mov
push
ret
ret
sub
insb
test
jbe
mov
flds
xor
out
lods
and
pop
cwtl
sub
cmp
mov
ds
inc
adc
cmp
push
mov
ljmp
inc
mov
lret
push
into
aad
jg
jmp
ret
std
int
lret
mov
ficoms
call
xchg
inc
inc
xchg
loop
js
add
inc
rcrb
inc
lea
aad
adc
jae
push
cmpl
fwait
xchg
sbb
sub
and
xchg
xchg
xor
iret
pusha
fcomps
out
cltd
in
and
stos
jp
outsl
mov
das
xlat
xor
int
cmp
sub
lret
das
adc
jle
and
jns
mov
mov
inc
adc
xlat
mov
js
aad
notl
push
es
mov
add
aaa
mov
xor
or
lds
loop
cs
sub
inc
ljmp
daa
out
inc
mov
mov
inc
sbb
mov
adc
ret
and
je
pop
mov
js
mov
insl
dec
fwait
js
adc
push
mov
jl
sarb
push
mov
aas
nop
sbb
repnz
add
icebp
lea
testl
dec
lcall
xor
pop
add
add
xor
ds
sbb
add
and
push
out
mov
daa
mov
pop
jg
xor
mov
addr16
ljmp
adc
mov
repnz
fisubl
popa
mov
insb
jno
xchg
cmpsl
mov
xchg
into
shrd
into
cmpb
sahf
push
mulb
popa
fcomps
mov
out
ss
mulb
mov
cmp
enter
or
cltd
xor
xor
lds
or
jo
fnstenv
gs
sbb
push
jle
cmp
in
inc
in
lret
call
std
mov
test
sub
add
sub
mov
push
sarb
cmp
mov
test
jp
mov
sahf
xor
xor
into
adc
data16
xchg
aas
out
adc
push
mov
jle
lret
test
xor
in
mov
lahf
rcll
sahf
test
aam
in
jmp
lods
iret
rcl
inc
xchg
inc
es
bound
pop
pop
mov
dec
fnstcw
jmp
loop
clc
push
test
insb
push
ja
popa
inc
inc
stos
cmp
inc
sub
pop
iret
icebp
inc
mov
iret
fisubrs
push
add
hlt
jecxz
fsubs
stc
rorb
es
dec
or
mov
add
adc
xchg
or
mov
xor
xor
xchg
push
jae
aad
sbb
sti
lea
add
mov
push
cmp
into
in
call
in
pop
daa
push
addb
mov
aaa
es
adc
roll
mov
add
out
bound
ds
pop
scas
add
dec
xchg
mov
cld
add
jl
adc
popf
xchg
cltd
cli
mov
test
sub
mov
mov
nop
add
cs
insl
daa
in
adc
ficomps
movsb
dec
pop
inc
adc
filds
pushf
push
dec
sub
sbb
popa
dec
hlt
int3
je
lret
sub
mov
push
dec
xor
ret
outsb
lods
repnz
rcrl
push
and
inc
dec
jo
fstps
mov
fisubrl
aaa
imul
jbe
pusha
aad
test
add
adc
mov
fdivs
or
dec
dec
rclb
in
pop
out
inc
dec
pop
nop
jle
rol
test
sbb
adc
fcoml
lds
add
loope
in
imul
pop
divl
push
fsts
adc
cmp
rcrb
sub
or
adc
das
cld
pop
pop
mov
hlt
inc
imul
add
or
or
repnz
inc
push
or
mov
and
xor
fs
xor
pop
sbb
call
imul
rolb
lcall
mov
push
cltd
fdivl
jb
test
andl
xchg
pop
pushf
in
pop
push
clc
sbb
aad
push
sahf
gs
sbb
ret
add
arpl
test
mov
adc
sti
sbb
sti
dec
imul
fs
push
inc
cmp
pop
iret
jge
dec
mov
mov
movsb
xchg
adc
sub
inc
dec
mov
dec
push
lcall
out
xor
aas
insb
cmp
pop
add
cli
movsb
sub
push
dec
inc
shlb
popf
push
hlt
mov
pop
and
test
imul
cmp
pop
idivl
xor
inc
adc
rorb
or
mov
out
faddp
and
or
jecxz
dec
jg
in
push
cli
mov
cmp
scas
add
cli
pop
decl
and
push
lock
pop
mov
call
test
ja
lahf
clc
push
iret
insl
cli
sub
adc
xchg
dec
andl
fdivrl
mov
dec
jne
sbb
jae
xchg
pop
repz
sbb
mov
lret
lock
adc
popf
mov
das
jo
repz
fwait
pop
repz
jne
daa
adc
out
mov
movsl
enter
xor
call
rcrl
shufps
aad
pop
aad
mov
xchg
mov
sbb
xchg
inc
outsb
add
xchg
stos
dec
mov
inc
into
sbb
adc
inc
mov
and
ret
dec
mov
push
xor
xor
mov
xchg
and
and
inc
in
dec
out
ret
pop
cs
or
add
inc
sbb
pop
cwtl
sub
adc
inc
xor
dec
leave
mov
repnz
adc
xorb
jg
and
lds
and
leave
cmp
pop
mov
and
mov
outsb
in
fdivr
and
mov
xchg
fistpl
push
cmc
aaa
xor
aaa
aam
inc
addr16
and
dec
fcomps
pushl
mov
std
test
test
push
mov
mov
lea
aas
dec
sub
stc
test
stos
inc
cltd
push
sbb
mov
mov
stos
add
stc
or
sbb
mov
cmpsl
les
jge
popf
xchg
xchg
xchg
mov
insb
incb
mov
fadd
xor
test
push
lods
mov
addr16
insl
mov
xchg
xchg
cmp
int3
inc
pop
int3
lods
xor
stos
rcr
jns
push
into
stos
aam
jb
inc
test
ja
insb
mov
fdivs
add
pop
pop
movsl
jmp
jnp
mov
jmp
cmp
pop
daa
and
xor
cmpsl
sub
add
shrl
push
movsl
call
push
add
pop
and
clc
mov
in
push
shrb
inc
fsubr
pusha
or
inc
gs
aad
jp
xor
push
xor
xchg
shlb
ja
stos
movsb
mov
cli
mov
out
mov
rclb
push
pop
iret
adc
arpl
mov
sub
push
xor
clc
dec
push
mov
sub
ret
idivl
pop
push
cmp
push
inc
adc
jge
popa
jne
push
jmp
xchg
xor
adc
pop
shll
push
xor
mov
adc
dec
xchg
test
jl
push
push
inc
xchg
loop
iret
sahf
mov
jnp
int3
xchg
pop
stos
xlat
xchg
push
pop
mov
idivb
cmp
push
xlat
push
or
dec
cwtl
sti
cmp
in
lahf
cmp
xor
std
or
cmpsl
int3
jmp
je
mov
mov
movsl
orb
sub
add
pop
ret
bound
loop
mov
arpl
ss
test
rcll
add
leave
daa
xor
jmp
aaa
repz
rolb
and
mov
sbb
mov
cli
loopne
jg
insl
pop
outsl
xchg
int
mov
pop
and
test
pop
pop
sbb
cmpsb
jmp
push
aam
jb
cmp
pop
xor
mov
into
jle,pn
fisttpll
mov
pop
daa
leave
ret
mov
inc
mov
sbb
push
orb
out
sahf
js
lea
sbbb
fdivrs
xchg
jnp
lods
rcl
aas
jno
mov
jmp
cmpl
lea
cmpsl
lea
jle
enter
cmpl
cmp
sbb
jp
into
das
mov
jb
scas
cmpsl
sbb
mov
int
mov
lds
insb
stos
fadds
aaa
movb
sbb
push
ja
aas
fstpt
pop
popf
cld
fwait
scas
aas
int
shr
gs
enter
mov
inc
cltd
mov
fildll
cmp
or
add
or
cmp
mov
inc
enter
dec
xor
cmp
call
push
sub
and
out
out
stc
in
sub
fmul
cld
xor
dec
cs
jnp
lahf
xor
cmpsb
sbb
jae
ja
incb
es
and
jno
xor
push
sbb
mov
test
pop
jl
sar
cmp
inc
orl
das
or
dec
sti
ja
jno
mov
int3
mov
enter
jg
pop
pop
mov
or
pop
test
jno
push
fsqrt
stos
mov
loope
sbb
sub
fdivrs
cmp
sub
lock
aam
push
ljmp
inc
cmp
enter
add
push
adc
xor
mov
and
imul
sahf
jnp
fwait
insb
stc
push
sti
add
imul
cmpb
inc
add
mov
outsb
fsubrs
xchg
cld
inc
in
and
xchg
std
aas
pop
into
jmp
lods
call
bound
lahf
sbb
fcmove
ljmp
jns
jns
cmpsb
in
out
cmpsl
cmp
inc
rorl
fdivrs
ja
js
xchg
test
addr16
loope
adc
mov
inc
jp
sbb
mov
into
jle
cltd
push
loopne
sbb
mov
int3
loopne
cmc
or
fnstenv
mov
cli
fstps
icebp
mov
add
push
jne
sarb
loopne
test
push
or
fs
sub
fsts
push
neg
push
pop
xor
mov
iret
mov
scas
fcoml
jnp
js
pop
adc
js
add
inc
mov
mov
cs
hlt
mov
outsl
fcoml
and
into
popa
jne
jb
mov
or
lret
insl
lahf
jle
imul
fwait
shll
mov
es
negl
xor
into
ja
popf
xchg
shlb
add
mov
fcomps
inc
aas
push
fbstp
sbb
shl
sub
rcll
loopne
sbbb
js
adc
xchg
js
lods
pop
lods
xchg
ret
pop
fucomip
mov
out
repz
push
xchg
xchg
mov
add
pop
mov
xchg
sbb
add
jns
or
or
aam
ret
sbb
out
cwtl
gs
int
testb
cmpsb
lcall
adc
jno
jp
add
cmp
xor
ret
jle
out
adc
cltd
out
and
mov
cli
inc
movsl
mov
xor
pushf
jbe
sub
xchg
in
aas
adc
xor
jb
leave
pop
xchg
fs
aaa
stc
stos
out
mov
cmp
testb
adc
adc
movsb
dec
int3
add
sbbl
mov
jmp
scas
jno
add
jg
fwait
aam
and
lret
mov
mov
movsb
pusha
clc
mov
mov
add
cmc
fdivs
lock
inc
mov
jne
push
push
push
sar
jo
push
xchg
dec
dec
js
sahf
mov
xor
mov
xor
cwtl
lods
push
mov
outsb
push
insl
scas
push
mov
rclb
out
pop
cmpsb
jb
adc
push
das
ja
add
mov
pop
outsb
mov
es
sub
cmpsb
sub
jg
call
popa
sub
pop
sbb
das
int
mov
add
push
cmpsl
jns
mov
inc
repz
shrl
addb
out
pop
lock
cmp
sub
scas
pop
dec
pop
add
mul
test
mov
in
mov
insb
cmc
ficomps
and
mov
movsl
stc
xchg
pusha
cmp
xchg
cmc
mov
adc
mov
mov
jo
stos
add
pop
sub
aad
ficomps
loopne
cmpsl
jne
testb
cmp
add
cli
fdivl
and
inc
xchg
mov
mov
shrb
jecxz
fnstenv
sbb
cld
inc
pop
and
into
lea
push
hlt
cmpsl
jns
daa
lods
fistpl
fisubs
adcb
mull
and
inc
mov
call
adc
pop
jecxz
cwtl
sahf
inc
xchg
das
add
mov
sbb
adc
pop
pop
into
insb
mov
inc
cs
cld
loopne
je
adc
xchg
xor
dec
dec
das
test
dec
inc
push
int
lret
xchg
pusha
cmp
xorl
call
and
fisttps
call
mov
and
push
pop
inc
stc
andb
sub
mov
push
or
inc
mov
lock
sbb
outsl
in
ljmp
xor
popf
add
and
or
shlb
mov
bound
xchg
fnstenv
mov
and
push
mov
push
lods
mov
cmp
and
or
in
sub
push
pop
and
data16
shll
pop
xchg
inc
pop
jb
sub
sbb
xchg
les
dec
and
clc
mov
jo
pop
and
push
stc
cmc
testl
mov
or
sbb
xchg
and
sahf
or
imul
push
or
fiadds
jle
in
in
inc
sbb
fs
jae
sub
sub
jecxz
adc
insb
fdivrs
push
and
mov
into
or
je
cmp
pop
test
and
je
xchg
and
mov
test
loopne
fcom
popa
out
pop
lahf
cld
insl
andps
xchg
jb
pushf
xchg
pop
pushf
lea
fldcw
mov
pop
push
test
jle
sbb
repz
push
sarb
jmp
xchg
movsl
sbb
jne
xlat
ja
popa
xchg
ja
outsl
and
jmp
js
sti
push
dec
and
push
js
push
mov
dec
xchg
sbb
xchg
das
push
push
fidivl
enter
jbe
imul
shll
xchg
push
and
sub
jg
push
jecxz
inc
mov
fiadds
cs
les
insl
mov
add
xor
dec
mov
jno
clc
pusha
fstp
adc
inc
enter
out
jno
push
mov
stc
fstl
sub
xor
xchg
out
or
push
mov
arpl
outsl
out
loopne
stc
out
mov
leave
jmp
pop
push
scas
xchg
adc
adc
popf
imul
ja
pop
aas
mov
sub
iret
sti
mov
push
xchg
fisttps
jns
aas
jo
mov
or
xchg
lock
adc
out
rcll
in
sbb
xor
push
scas
mov
mov
sbbl
push
jbe
aas
popa
pushf
push
gs
or
push
out
sub
push
outsb
shll
hlt
and
dec
lret
cmpb
sbb
das
rol
femms
sub
or
cli
jle
fnstsw
pop
scas
mov
lahf
adc
cmp
jle
xlat
cmpsb
ss
sarl
rcrb
mov
sub
in
jp
mov
push
cltd
sub
pop
sbb
bound
mov
cmpsb
pop
pusha
aam
fisubrs
mov
enter
pop
ljmp
lods
jmp
inc
xor
fildl
repnz
hlt
mov
sti
sti
pop
push
stos
fs
xor
emms
loope,pt
inc
scas
sahf
mov
call
mov
pop
cmpsb
add
sahf
shrb
faddl
ljmp
push
fistpl
out
xlat
adc
insb
add
data16
fiadds
popf
xchg
sub
add
or
es
scas
js
jns
dec
jo
repnz
loopne,pn
pusha
rorb
mov
in
and
or
or
lret
dec
popl
repnz
cwtl
dec
add
mov
test
jno
test
pop
mov
popf
push
jbe,pt
jne
mov
push
mov
fs
xchg
and
and
pop
xchg
lds
popf
es
insl
and
xchg
or
cmc
movsl
jge
mov
enter
jno
or
sarb
dec
ss
aam
mov
sub
ficompl
push
fisttpll
sub
mov
mov
shlb
gs
sub
aad
lret
sarl
ret
scas
jge
in
mov
jae
fs
mov
repnz
sarl
cli
rolb
pop
dec
in
insb
dec
ljmp
add
sub
jno,pt
xchg
lds
adc
pop
stc
push
popa
fs
lock
arpl
mov
scas
jp
pop
dec
mov
rol
adcb
cvtps2pi
and
aas
push
ret
cmc
mov
rorl
repnz
repz
daa
enter
mov
or
out
addb
pusha
and
xchg
rclb
mov
hlt
mov
lea
and
xchg
rcr
xchg
inc
or
enter
pusha
aaa
xlat
loope
mov
xchg
dec
add
cmp
mov
bound
scas
pop
test
cmpsb
repz
enter
call
push
add
lahf
jb
pusha
mov
jge
divb
mov
in
clc
dec
push
pop
popa
in
dec
sub
stos
pop
daa
adc
aad
push
jecxz
adc
lods
mov
lods
stos
in
ja
shll
pop
fidivrl
xor
mov
hlt
pop
add
adc
aad
jecxz
outsl
scas
sarl
sbb
shr
sub
arpl
jne
incb
mov
mov
adc
stos
inc
aam
fwait
push
xor
pop
es
addr16
cwtl
mov
sbb
movsl
ror
mov
test
loop
dec
mov
popa
dec
sti
jne
sub
pusha
outsb
mov
aaa
pop
pop
stc
push
or
inc
sub
imul
shrl
mov
flds
ficompl
sbb
xlat
pop
cmp
mov
push
fnstenv
jb
sar
fistpl
fimull
pop
repnz
mov
mov
dec
pushl
nop
rorb
stc
lods
add
cltd
movsb
mov
loop
into
scas
fistl
push
adcb
or
dec
push
shll
jg
cwtl
outsl
and
mov
inc
mov
or
xorb
jb
jg
imul
push
pop
fstl
out
jp
xor
jecxz
out
xchg
jno
or
push
mov
xor
and
mov
rcll
mov
xor
popa
imul
ds
cmp
jno
or
adc
imulb
lods
mov
fs
decl
mov
cmp
js
adc
shlb
mov
stos
jp
ret
push
jg
dec
lds
xchg
lock
imul
pop
jmp
cmp
jmp
jbe
xor
dec
pop
popa
pusha
ret
lods
jns
or
mov
push
push
sbb
shlb
push
mov
mov
dec
mov
rcll
jns
push
xchg
cmp
inc
mov
and
push
lock
rcrb
mov
int3
enter
sub
pop
mov
fistl
out
mov
stos
jno
or
icebp
call
xchg
cwtl
cmp
mov
outsl
or
xchg
xor
xchg
and
shr
cli
cli
xchg
mov
les
rcl
inc
lods
xor
mov
nop
arpl
push
sbb
filds
jbe
out
shll
popl
pop
add
jae
jg
out
cwtl
xchg
push
lahf
add
pusha
inc
outsb
and
add
popf
lahf
fbld
mov
std
lods
lret
jbe
subb
das
icebp
push
aad
xor
sub
xchg
out
sub
test
mov
std
pop
movsl
in
fiaddl
mov
add
int3
orl
sub
shrl
pop
dec
in
jg
mov
fdivs
cmp
sbb
cmpsb
mov
imul
add
lret
pop
pop
decb
fs
les
xor
xchg
pop
adc
loope
push
mov
ljmp
in
pop
xchg
inc
enter
rcll
js
fidivrs
in
sahf
shrb
shr
std
or
push
xor
cld
push
je
and
cli
pusha
sub
mov
and
push
and
jp
push
shrb
jecxz
popa
clc
ja
sbb
mov
sbb
cmp
sbb
mov
lret
fildl
mov
add
data16
sub
and
mov
or
lods
adc
and
mov
cmpsl
mov
add
cwtl
aaa
es
fildll
movsl
gs
or
cmp
addr16
jne
movsl
jnp
outsl
loope
add
jne
ljmp
pop
push
add
cmp
outsl
out
inc
stos
or
inc
sbb
loope
mov
inc
sbb
cmp
cmp
insb
xchg
gs
mov
mov
sub
in
jnp
or
add
pop
fdivs
push
xchg
in
push
mov
lret
lret
arpl
inc
mov
mov
dec
or
jo
or
dec
mov
nop
movsl
out
dec
outsl
lcall
sbb
mov
jne
pop
imul
gs
popa
lahf
cs
das
xchg
je
dec
pop
jnp
mov
mov
pop
sbb
ret
lret
lods
xor
jbe
hlt
mov
cmp
ret
jne,pn
imul
sub
mov
scas
and
cwtl
jb
stos
sbb
inc
mov
ds
mov
jle
test
in
roll
ja
insb
adc
cmpsb
jnp
cmp
mov
or
notl
push
jbe
adc
lds
stos
cmp
dec
jo
fs
mov
daa
int
mov
into
ss
stos
jp
jle
inc
sub
inc
je
int
xor
cld
jo
fsubrs
es
push
sub
lret
or
rcl
mov
mov
xchg
outsl
adc
addr16
xchg
lret
iret
movsl
sub
xchg
pop
lods
and
jecxz
pop
push
sbb
repnz
inc
ror
ret
in
ret
jbe
push
test
std
or
and
sbb
add
cmpb
iret
push
add
bndldx
movsl
pusha
enter
aad
sahf
mov
mov
mov
imul
ja
mov
push
loope
and
push
or
gs
jae
jnp,pn
xchg
sti
adc
sbb
shll
add
cmp
sbb
mov
fdivrl
inc
adc
xchg
in
adc
ljmp
subb
lea
enter
and
cmp
scas
xchg
xchg
mov
mov
push
neg
dec
xor
xor
inc
jno,pn
pop
in
or
fs
pop
jmp
notb
jecxz
adc
ss
out
mov
lock
xchg
imul
loope
pop
in
push
or
rcrb
cli
push
ja
mov
aaa
mov
xlat
cmp
push
xchg
jbe
dec
iret
aam
xchg
std
or
jg
jge
sub
sbb
push
movsb
sbb
clc
enter
push
nop
in
inc
adc
pop
aas
mov
icebp
lahf
jbe
sysenter
jnp
and
idivb
dec
mov
mov
arpl
mov
pop
sub
mov
pop
pop
push
imul
cli
xchg
test
int
xor
lods
data16
test
rcll
lcall
loope
lock
in
jl
and
xor
cs
inc
popf
daa
fisubrs
jmp
js
inc
cmp
sbb
subb
aas
jmp
and
cmp
int
push
iret
xchg
cmovle
pop
sbbb
pop
fwait
cmp
inc
push
scas
inc
inc
add
inc
leave
aas
in
stos
loop
roll
xchg
into
out
cmpsb
mov
mov
inc
in
adc
inc
pop
mov
inc
pusha
test
inc
jmp
dec
mov
mov
inc
pop
sub
add
lcall
cltd
into
les
je
arpl
aaa
push
jae
fimull
fidivrs
mov
mov
orl
xor
hlt
jge
fs
rcrl
lret
cmpsb
frstor
jmp
fmull
xor
pop
push
push
iret
minps
push
jo
lcall
mov
dec
out
sti
push
adc
xchg
sbb
jb
enter
fsts
shlb
adc
push
imul
xor
ret
out
mov
xchg
add
mov
pop
xchg
in
nop
call
aas
push
fucomp
and
xchg
xchg
repnz
inc
adc
add
xchg
xor
mov
dec
jmp
inc
xchg
outsl
fsubl
les
sti
dec
jecxz
jne
in
add
into
cs
lret
mov
out
xchg
fsubp
dec
pop
fwait
jmp
dec
imul
adc
mov
jb
stos
in
sbb
dec
dec
push
xor
in
pop
pop
cmp
es
popa
sub
lods
dec
ss
test
sub
jg
cmpsb
mov
scas
int3
scas
jae
cmp
mov
pusha
lret
pusha
xchg
popa
shll
sbb
lret
sbb
cld
mov
dec
cwtl
pop
mov
cmp
sbb
xchg
or
and
inc
daa
inc
add
adc
or
dec
jl
ror
jge
pop
and
push
int
fsts
fistps
daa
mov
mov
xor
adc
lods
dec
jmp
pushf
pop
vmovntps
sub
jecxz
or
pop
imul
dec
enter
mov
jb
and
xor
sub
pusha
jbe
sub
movsl
scas
mov
pop
mov
ret
aaa
sbb
fldl
pop
jmp
xlat
fsts
push
inc
popf
mov
mov
stos
les
push
idivb
mov
pop
sbb
pop
dec
orb
loopne
mov
cli
mov
mov
leave
mov
nop
mov
dec
imul
jl
mov
imul
bound
subb
lret
cmp
jbe
push
xchg
cmp
cmp
inc
pop
arpl
daa
scas
mov
ret
cmp
enter
aaa
jecxz
int
inc
test
lock
nop
out
cli
pop
mov
fcmove
jns
es
lea
outsl
mov
lea
stos
jns
dec
clc
clc
inc
mov
cltd
push
sti
test
cmp
dec
out
insb
mov
mov
jl
loope
mov
cwtl
add
or
addr16
mov
cmpsb
popf
mov
inc
call
mov
cld
shlb
jnp
loope
ljmp
loopne
ds
ret
xlat
hlt
xchg
inc
and
xor
insb
aad
jmp
xor
std
mov
dec
xchg
negb
push
les
jle
mov
repz
ja
mov
out
imul
in
mov
out
push
add
js
out
jle
pop
pusha
sarl
or
inc
aas
push
xor
nop
dec
leave
int3
test
imul
sbb
sub
mov
push
dec
push
ficomps
into
int3
mov
shl
xor
adc
mov
jmp
or
outsb
std
xchg
jp
es
decb
in
mov
stc
aaa
add
push
shlb
xor
out
std
xchg
ret
sbb
jbe
insb
sub
add
push
jg
push
or
add
popf
lds
adc
mov
ret
clc
in
cmc
pusha
clc
mov
cltd
and
insl
movsl
addr16
jb
cltd
cmp
test
inc
fadds
out
dec
push
popa
pop
cmpsb
in
sbb
ljmp
mov
pop
sbb
data16
xchg
shl
mov
mov
pushf
add
mov
cmpsb
adc
sbbl
pop
xchg
out
sub
mov
sbb
dec
adc
pop
sub
sbb
xor
and
add
inc
sahf
in
in
rcrb
in
jb
repz
inc
dec
mov
pop
lcall
lds
or
inc
jl
pop
or
les
xor
push
loope
lret
addr16
test
ds
pop
fimull
xchg
push
dec
lds
test
mov
sbb
jmp
sub
xor
mov
jno
cs
daa
fiadds
mov
filds
loopne
jge
clc
imul
jne
in
rol
lret
das
or
mov
push
push
or
pop
jb
dec
test
sbb
add
jo
popa
jne
add
in
dec
add
mov
push
jge
js
jne
adc
sub
sbb
leave
adc
gs
aad
ret
sbb
mov
sub
pushf
or
cwtl
fadds
movsl
leave
xchg
cwtl
inc
or
dec
addl
xor
push
push
jmp
orl
mov
int
mov
sbb
jo
inc
cmpsl
iret
inc
mov
shll
ja
lods
testl
int3
ret
adc
call
cmp
jge
adc
sbb
xchg
pop
pushf
cmp
lcall
cmp
jno
ret
jbe
push
push
pop
xchg
jmp
in
popf
mov
jge
mov
insl
inc
cmp
jno
mov
and
and
in
sahf
in
cmpl
mov
jecxz
std
cwtl
arpl
testb
mov
test
push
fwait
cmp
push
ret
inc
in
pop
jb
adc
mov
test
lock
and
dec
lea
mov
sbb
sarb
push
divl
mov
loopne
or
lea
pusha
mov
outsb
neg
mov
jecxz
xor
lret
hlt
stc
inc
jbe
push
xchg
sub
pop
and
push
push
orb
xlat
loop
mov
mov
cmp
int3
scas
mov
out
pop
inc
movsl
dec
cmp
mov
inc
sarb
shrb
inc
stos
psubusb
lds
dec
pop
pop
sub
nop
pop
pop
rorl
sub
sbb
enter
shll
mov
inc
and
lock
fstps
push
add
add
lret
sahf
clc
gs
mov
pop
sub
out
bound
push
jmp
fs
insl
loope
popf
cmpsb
jno
xchg
mov
and
stc
leave
lods
js
adc
jo
push
mov
inc
out
imul
not
pop
push
cwtl
test
fucomip
jecxz
mov
dec
adc
call
lret
and
mov
repz
mov
cs
pop
cmp
cmp
sub
hlt
pop
movsb
mov
sbb
sbb
mov
xorl
cmpsb
lahf
mov
mov
bound
cmp
sub
aaa
in
inc
inc
jbe
or
bound
mov
lcall
in
add
jbe
pop
ljmp
jle
outsb
movsl
arpl
dec
pop
mov
dec
add
adcl
cltd
jns
xor
xchg
clc
iret
ss
pop
int3
fs
and
mov
cwtl
push
outsl
js
pop
sbb
xchg
leave
xor
lret
ss
lret
xchg
mov
push
cld
scas
sub
popf
xor
mov
mov
movq
push
neg
jp
jp
cmp
lcall
xchg
testb
add
in
scas
push
nop
cmp
cmp
add
filds
orb
inc
movsl
xchg
imul
jge
shl
testb
subl
mov
dec
int
stos
outsl
das
test
push
and
mov
xorb
sbb
into
movsb
cmc
mov
push
cmc
sti
adc
inc
into
fadds
in
cwtl
subb
push
add
pop
jns
add
sub
mov
and
add
dec
in
sub
sbbb
bound
and
jge
dec
cmp
pop
adc
loopne
push
sub
test
sub
cmpsl
cmp
call
leave
xchg
loopne
push
sub
pop
int
repz
out
dec
mov
adc
call
imul
repz
or
adc
into
ret
test
insb
jbe
xchg
aas
and
jne
outsl
cmp
gs
into
nop
pinsrw
mov
mov
add
sbb
xlat
xlat
outsl
push
shll
cmpsb
int
mov
fistps
mov
push
jo
sbb
mov
ja
fdivs
dec
fnsave
subb
mov
inc
out
ret
xchg
clc
push
cs
into
out
push
pop
pop
xor
xchg
imul
jnp
sbb
push
cmp
sub
out
jmp
adc
idivb
inc
repz
stos
jge
push
sbb
push
jnp
stos
xor
cmp
repz
cld
shl
cs
stc
lret
loop
mov
test
sbb
jge
out
xchg
rcl
fcmovnbe
les
mov
sub
sbb
insl
and
inc
aam
in
inc
mov
sub
aad
push
enter
ja
jmp
xchg
jnp
scas
out
dec
inc
hlt
xor
dec
cltd
sub
pop
out
or
add
gs
in
fmul
xlat
add
inc
and
pop
inc
sbbl
loop
daa
xchg
imul
lret
mov
pusha
push
lods
add
fsubl
inc
and
pushf
hlt
dec
out
mov
mov
std
sti
lea
into
dec
into
std
cwtl
mov
hlt
cmc
push
inc
pop
rcr
mov
testl
pop
in
add
xchg
gs
push
xor
daa
repnz
loop
arpl
iret
sub
jp
add
dec
repz
adc
test
popf
and
int3
int3
add
jns
sbb
sub
pop
andl
inc
push
out
cmp
in
cmp
dec
in
loope
pusha
or
lea
inc
cmpsb
iret
and
nopl
test
lret
mov
mov
es
leave
icebp
repz
mov
leave
outsl
lcall
pop
or
iret
lods
push
jp
outsb
cs
adc
das
xchg
mov
add
jne
divb
ror
shll
mov
ret
insl
mov
xchg
or
iret
movsl
fistpl
divb
rolb
orl
in
out
fld1
inc
xor
lock
das
gs
mov
addr16
ds
call
stos
jns
mov
cmc
pop
push
mov
dec
lock
pop
lods
add
sbb
sbbl
ja
or
mov
outsl
mov
popf
testl
movsb
cmp
insl
leave
pop
scas
stc
jae
mov
bound
push
pusha
dec
xorb
push
sahf
add
fisubl
es
int
inc
jae
push
sub
cwtl
add
out
jle
sub
sahf
and
pop
xor
add
mov
lcall
cmp
push
sbb
push
ret
in
repnz
inc
mov
jmp
clc
sti
out
or
dec
inc
or
pop
cmpsl
add
push
pushf
push
and
lods
push
int
mov
mov
je
jg
pop
add
pop
mov
mov
and
jno
lret
xchg
cmp
jg
cwtl
xor
pop
mov
mov
daa
push
cmp
imul
addr16
sti
mov
stos
inc
inc
subb
mov
jbe
push
and
adc
fs
clc
xor
mov
repz
dec
jae
cltd
and
sti
mov
adc
bound
add
inc
test
jl
cmpl
fprem
movsl
iret
stos
cmp
fimuls
xor
stos
or
lock
mov
push
test
add
icebp
mov
mov
divb
jge
movb
inc
mov
xor
mov
inc
xchg
mov
cmpsl
sub
cmp
icebp
jbe
in
or
push
fldenv
cld
push
mov
xchg
mov
cli
add
xchg
sbb
cmp
sti
inc
inc
loopne
xchg
inc
and
push
mov
imul
sahf
je
loop
pushf
and
dec
sbb
mov
popa
push
add
cmp
popa
inc
jb
out
repz
and
mov
dec
std
cli
adc
sbb
imul
iret
popf
push
jnp
inc
movsb
in
pop
inc
inc
mov
pop
scas
push
dec
into
lods
inc
enter
dec
shrl
outsb
xchg
jl
mov
int
sbb
in
ja
sbbl
repz
push
and
cmp
push
jmp
loope
cmpsb
in
clc
call
sub
jecxz
movsb
out
cmp
push
shrb
dec
adcl
inc
loopne
fisttpll
shll
imul
int
movsl
add
cmp
push
scas
push
das
push
int
adc
lcall
push
adc
jnp
hlt
add
sub
cmp
inc
jne
or
inc
push
sbb
mov
lahf
ss
decl
jmp
les
daa
out
pusha
jne
sbb
add
jg
or
add
add
lock
mov
ror
or
sahf
mov
roll
mov
testb
btc
or
insb
inc
imul
pop
pop
cmp
inc
testl
jmp
lods
mov
icebp
mov
bndldx
hlt
cltd
sti
into
jbe
sbb
push
pop
push
outsl
or
test
and
sbb
lods
jge
addr16
sahf
icebp
hlt
cltd
mov
pusha
popa
jmp
mov
retw
sbb
push
shll
aaa
xor
push
mov
sub
adc
imul
daa
cmc
cmp
ficomps
mov
add
add
or
xchg
add
add
push
jle
and
sub
or
xor
mov
mov
cli
lahf
cmp
lahf
mov
fwait
jle
sbb
cmp
das
mov
cmp
gs
push
push
les
outsl
and
sahf
gs
gs
cmpsl
out
dec
dec
xor
movl
ja
jbe
push
sbb
jge
mov
push
xor
testl
mov
scas
test
or
xchg
and
aad
icebp
aam
mov
call
xchg
xor
push
pop
stc
mov
ret
jl
pop
shl
mov
les
pop
lret
test
mov
mov
imul
and
aaa
cltd
lods
add
out
xchg
in
pop
xchg
mov
sahf
insb
mov
stos
pusha
push
or
out
pop
in
ljmp
imul
jae
movsl
mov
into
inc
mov
js
push
jnp
das
inc
push
arpl
mov
push
fcmovnb
sub
ftst
rcl
mov
das
sub
lods
dec
adc
jl
mov
sete
fdiv
idivl
pusha
fistpll
scas
xchg
mov
and
clc
idivb
pop
sbb
fisubrs
adc
popf
imul
cmp
and
add
repnz
cmp
mov
icebp
sub
pop
mov
mov
fwait
cmp
pusha
inc
jns
js
movsb
lret
push
leave
imul
xchg
je
test
jbe
dec
lea
pop
ret
sbb
testl
push
mov
pusha
cmc
jo
addl
movsl
mov
mov
cmp
cmc
dec
sub
jecxz
js
or
jl
pop
enter
jmp
shlb
dec
pop
push
mov
mov
sti
lods
pop
push
pop
cmp
in
xchg
push
repnz
or
push
int3
mov
and
dec
or
jmp
inc
lcall
test
loopne
jae
add
pop
dec
daa
or
jge
push
xchg
push
clc
adc
imul
mov
inc
in
sbbl
add
je
icebp
ljmp
in
fdivrs
lods
mov
sub
fildll
into
data16
adc
inc
and
mov
jae
inc
dec
pop
in
fildl
pop
hlt
dec
sbb
and
pop
mov
add
push
loopne
add
gs
stc
imul
stc
pop
divl
test
dec
and
js
adc
loopne
daa
hlt
rorl
rcrb
jle
mov
adc
push
push
xor
imul
sub
push
cmp
fcmovb
mov
in
mov
ja
fimull
xor
pop
insb
and
rclb
xchg
adc
enter
xchg
frstor
jmp
cld
mov
js
pusha
add
sub
mov
and
inc
mov
loopne
insl
push
xchg
xor
sahf
sub
int3
fldenv
test
add
out
dec
aaa
mov
fisubs
mov
fwait
jbe
out
dec
lret
or
imul
adc
push
fidivl
jmp
mov
xor
popa
sar
and
test
insl
mov
or
fsubrl
fsubs
jmp
popa
call
sbb
sub
pushf
aaa
cmp
xor
adc
mov
ds
jmp
mov
xchg
add
mov
push
test
and
sarb
stos
push
push
jle
inc
mov
out
mov
push
movsl
in
jae
aad
test
in
bound
push
adc
int
cmc
or
mov
movsl
xchg
push
fists
mov
mov
mov
into
fdivs
call
adc
mov
addr16
jne
aaa
mov
push
sub
and
sbb
pushf
aam
sub
rorb
adc
in
test
and
jbe
lock
or
sbb
mov
sub
xlat
jp
sub
rcr
shlb
ret
ss
jecxz
lret
lods
call
arpl
jle
dec
test
push
pop
or
dec
dec
stc
aad
xor
mov
rol
arpl
out
mov
outsb
dec
push
jbe
jle
jb
sub
icebp
iret
loope
clc
push
inc
mov
mov
jle
rcr
int3
test
mov
out
jb
fisttpl
push
popa
mov
movsb
inc
std
stc
out
add
fwait
lahf
pop
sub
xchg
push
clc
fcoml
add
sub
mov
xchg
lcall
dec
mov
rorl
sbb
scas
pcmpeqb
mov
sub
pop
rorl
mov
fwait
orb
cmp
sbbl
push
pop
mov
sub
lcall
pusha
mov
sub
adc
out
cmp
push
jg
repnz
aaa
cwtl
push
pop
mov
mov
jb
pop
jb,pn
mov
js
inc
inc
ds
jno
fs
cli
mov
rcrl
pop
rcl
mov
sbb
adc
fwait
das
push
xlat
fwait
loope
pop
fstpl
jl
jg
jbe
pushf
sbb
iret
cmp
pop
inc
mov
popf
mov
push
rcll
imul
jecxz
lret
in
inc
adc
mov
rclb
repz
inc
jno
jge
dec
loopne
in
inc
adc
ljmp
xor
pop
mov
gs
std
lcall
rorl
hlt
adc
sbb
sbb
adc
push
mov
add
jmp
jle
xchg
mov
and
sub
xchg
cmp
shl
pop
or
out
cmpsl
jb
rcll
into
aaa
mov
mov
sub
mov
sarb
testl
out
enter
push
push
xchg
test
pusha
ret
test
jae
fwait
jae
xor
sub
fwait
push
dec
push
xor
jge
xchg
cmp
in
adc
ja
ljmp
sub
or
xlat
mov
jbe
and
push
popf
dec
test
fld1
scas
cli
fistps
mov
jecxz
scas
addr16
adc
and
jp
jp
jnp
in
push
add
insb
iret
loopne
outsl
mov
add
mov
cs
cmp
add
rep
leave
cli
sbb
shll
xchg
mov
arpl
push
movsl
pusha
adc
aad
pushf
rolb
push
addr16
js
inc
aaa
aaa
and
scas
out
loop
sub
cltd
fs
adc
mov
dec
mov
fwait
inc
push
jb
mov
in
ret
cmp
lock
inc
mov
mov
in
xor
add
sbb
mov
sbb
jo
jne
inc
dec
cmc
xchg
jo
mov
mov
inc
xchg
lock
xor
dec
gs
cmpsl
out
mov
and
add
sbb
mov
mov
jns
xor
out
adc
ds
inc
in
fistps
enter
jg
mov
aad
inc
lret
sub
mov
outsb
mov
fsub
xor
jmp
push
imul
push
xchg
push
popf
jns
stos
daa
lahf
sbb
fmull
cmpsb
sbb
sbb
mov
ret
jg
popa
sub
pop
ja
cmp
lock
rorl
sbb
add
xor
cmpsl
sbb
clc
dec
mov
cwtl
fucompp
xor
mov
mov
sti
cmpsb
subb
or
dec
xor
and
ret
sub
xor
cmp
pushf
push
xor
fmul
aas
rcrl
pop
js
and
sub
sbb
sub
mov
iret
or
test
in
bound
add
sti
xchg
sub
push
jb
add
pop
push
sub
pop
sub
popf
icebp
nop
add
lret
pop
aas
jecxz
in
inc
sub
imul
mov
leave
into
pop
popa
push
inc
sbb
mov
and
sbb
loopne
sub
lret
dec
cmc
test
mov
int
mov
sub
fchs
or
or
in
imul
cmp
cmp
loop
pop
push
pop
or
sub
daa
sbb
mov
popf
xchg
pop
popf
enter
imul
jmp
jge
les
out
rcrb
sbb
sbb
ret
push
push
jne
add
lcall
fiaddl
pop
pop
sub
insl
mov
loopne
jmp
mov
daa
iret
iretw
xchg
cwtl
sub
fwait
pop
cmp
xor
popa
mov
push
inc
nop
in
bsr
xchg
mov
subb
sub
shlb
and
icebp
sub
ret
lcall
push
xchg
lock
movsl
jno
lods
into
xor
jge
les
in
aas
stos
xchg
aas
cmp
pop
jl
mov
divb
xor
jle
sub
sbbb
stc
adc
push
loop
lods
pop
and
sub
arpl
sbb
mov
jno
out
std
ljmp
jae
jecxz
xchg
jp
dec
mov
rorb
cwtl
pop
mov
pusha
aam
fisttpll
cltd
sbb
lods
out
imul
jecxz
pusha
push
pop
ficomps
mov
repnz
sbb
or
jno
and
jmp
lock
sub
fwait
outsl
mov
enter
dec
arpl
sub
nop
mov
and
push
inc
cmc
sbb
pop
into
js
fs
xor
movsl
ss
inc
push
lods
lods
push
fadds
lret
jns
dec
xchg
dec
add
mov
loopne
pusha
jge
and
mov
mov
pop
jae
scas
popf
pop
lret
mov
lods
jno
aaa
cld
dec
sbb
std
test
sahf
mov
inc
dec
mov
adc
xor
movsl
push
xor
xchg
sti
out
xchg
inc
out
jl
mov
xchg
mov
and
imul
cmp
pusha
inc
fisubl
das
inc
push
push
xor
int3
adc
js
ljmp
push
jae
or
test
loopne
scas
jl
mov
scas
scas
clc
cmp
mov
insb
loopne
inc
inc
pusha
data16
add
mov
inc
cmpsl
sbb
pop
rcll
push
dec
dec
mov
cmpsb
aas
sbb
in
sar
std
rcrl
scas
jecxz
mov
in
cmp
fsubrl
ja
xor
sub
std
jae
cmp
xchg
ss
mov
ss
and
mov
mov
and
mov
jge
test
xchg
or
mov
sahf
sbb
xchg
pop
mov
mov
dec
mov
inc
andl
cmp
or
aaa
fbld
or
mov
sbb
lods
cmp
pop
fadds
es
adc
push
xchg
xchg
test
incb
dec
xchg
enter
mov
adc
and
outsb
cmp
arpl
push
roll
ret
xrelease
and
xchg
push
fwait
cmpsl
leave
jmp
stos
pop
jnp
iret
dec
int
and
cmp
test
shll
mov
push
sbb
cwtl
cmc
insb
pushf
cli
or
dec
xchg
pushf
push
dec
cmp
pop
enter
cmpsl
test
jge
out
lea
in
lcall
mov
jns
mov
or
subl
jbe
outsb
test
rcrl
in
sbb
pop
inc
xor
dec
sahf
jbe
mov
dec
fcmovnb
inc
paddsw
leave
out
pop
jecxz
or
js
pop
dec
cmp
jns
inc
push
push
orl
out
stos
addr16
call
pop
cmp
fcomps
sbb
std
add
loopne
and
pop
es
out
xchg
ljmp
jmp
and
mov
dec
mov
push
leave
sub
rolb
adc
enter
je
testb
popa
mov
push
iret
int
xlat
push
addl
addr16
es
add
test
push
sub
lods
movsl
movq
jecxz
jae
adc
fld
jmp
and
push
fs
test
push
xchg
push
jne
shlb
mov
xchg
jle
xor
in
outsb
es
cwtl
mov
insl
rorl
adc
sbb
lock
imul
adc
popf
sub
or
pusha
int3
je
mov
iret
je
out
aam
ficoml
xor
push
pop
pop
push
leave
adc
stc
mov
sbb
mov
pop
dec
ds
pop
push
cmp
mov
out
cmp
sbb
jl
std
or
cmpsb
mov
pusha
or
icebp
clc
pop
adc
mov
inc
repnz
adc
decl
fsub
mov
dec
rcrl
add
inc
stos
sbbl
dec
insb
adc
mov
rclb
xchg
add
leave
jecxz
into
jbe
mov
mov
insl
xor
xchg
in
push
jmp
stc
push
ficompl
std
xchg
mov
push
fscale
lock
mov
jns
mov
notl
hlt
jno
test
cmpl
cmp
jae
lods
ljmp
mov
movsl
cmpsl
sub
sbb
mov
dec
sbb
pop
sbb
push
mov
and
iret
or
cltd
pop
aad
jmp
mov
imul
jo
mov
sub
push
cltd
sti
xchg
mov
cmpsl
cltd
dec
mov
lsl
push
inc
cmp
mov
in
jns
or
les
jbe
and
or
pop
pop
aam
push
inc
mov
sub
pop
pop
popf
popf
test
xor
aaa
cmp
into
outsb
add
test
ret
jne
rclb
shlb
test
pop
imul
lds
insb
or
pop
mov
xor
xor
mov
add
dec
incb
mov
dec
ret
push
fsubr
sarb
jge
shrb
or
or
sub
lret
jne
in
ljmp
mov
jne
test
sbb
lcall
adc
idivb
sub
mov
pop
jnp
xor
clc
adc
lret
jae
lret
imul
hlt
push
imul
and
cmp
jp
dec
mov
xchg
adc
adc
out
pop
out
adc
aam
xchg
push
jns
add
shll
add
ret
inc
aad
jle
shlb
cmp
mov
test
aam
repz
inc
out
bound
adc
adc
fdivl
dec
inc
sbb
sub
cmp
jecxz
sbb
and
mov
lcall
insb
outsb
rcl
push
pushf
lock
aas
inc
leave
ret
fs
xor
in
mov
mov
dec
add
push
pop
stc
arpl
cmpsl
mov
jne
inc
add
mov
or
jle
in
xchg
fwait
insl
xor
pop
sub
push
add
fsts
loope
mov
xchg
cmp
xor
jo
pop
xor
lods
xor
in
inc
lock
xor
aam
movsl
pop
pop
movsb
int3
xchg
fcmovne
xorl
aas
test
js
sub
jmp
lcall
pushf
mov
xor
add
stos
mov
outsb
adc
mov
xor
out
cmpsb
xchg
mov
ret
sbb
pop
arpl
repz
loopne
lock
dec
cld
in
mov
mov
add
icebp
xor
cmp
push
imul
and
cld
push
jmp
cs
sbb
enter
or
pop
loope
aaa
outsl
std
fs
mov
pushf
fistpl
inc
dec
dec
jnp
xchg
aam
dec
inc
call
inc
xor
jl
push
lcall
or
push
mov
mov
jecxz
std
das
inc
cmp
ret
pop
sub
adc
inc
leave
mov
sahf
and
jl
dec
inc
fcmovne
movsb
mov
roll
lea
inc
daa
jge
ljmp
lods
push
cmp
dec
jnp
out
jb
insb
pop
inc
inc
push
loopne
xchg
xchg
fbld
lret
or
cs
cs
lret
fsubrs
nop
pushf
sti
add
test
mov
jnp
sbb
pushf
or
xor
popa
scas
cmp
insl
adc
inc
sub
cltd
jb
out
and
int3
shl
leave
jo
pop
pop
jne
faddp
and
sub
test
xor
sarb
lret
push
sti
scas
adc
and
lret
dec
jb
and
int3
ret
jns
gs
pushf
ret
cwtl
in
fwait
push
adc
cmp
jmp
inc
leave
clc
fidivl
shll
xlat
dec
cmc
and
mov
jmp
xchg
mov
sahf
push
out
mov
adc
and
xchg
pop
fildll
push
cs
push
or
sbb
xor
dec
adc
jp
aad
stos
jne
aas
insl
or
in
jle
test
xor
mov
and
jmp
push
sahf
xchg
jmp
jae
sbb
lods
mov
fistpll
fildll
jmp
jmp
cld
icebp
sbb
push
jne
push
lret
pop
mov
dec
pop
pushf
lock
fistl
lds
mov
fbstp
push
in
mov
subb
ja
or
imul
sbb
je
push
sub
mov
addb
jae
cld
jmp
push
adc
mov
sbb
jl
pop
xchg
pop
aas
mov
dec
mov
lds
add
movsl
dec
cmp
jne
dec
ret
repz
jmp
shlb
push
fsubp
xor
pushf
bound
cmp
pop
mov
adc
inc
stc
pusha
mov
jns
repnz
add
mov
lcall
add
movsb
in
mov
pop
imul
fimull
movsl
mov
popa
ja
mov
xlat
in
testb
lds
stos
and
sbb
xchg
adcl
fcomi
sbb
lea
push
cwtl
and
pop
in
test
cmpsb
sarl
movmskps
sbb
sub
cmp
sbb
cwtl
pop
ss
mov
sbb
fbld
cmc
je
not
insb
xchg
push
scas
and
mov
mov
imul
mov
and
rorl
fnstcw
push
clc
cltd
pusha
fmull
mov
aad
shlb
jnp
out
jb
or
inc
inc
xchg
cmp
lret
lds
mov
pop
int3
lret
mov
inc
sbb
cmp
test
or
sbbl
fdivs
lods
insb
push
addr16
mov
jae
adc
bswap
add
dec
mov
adc
int
mov
jmp
orl
mov
je
jmp
cwtl
sbb
xchg
cmpsl
cmpsl
mov
mov
xor
movsb
mov
ja
leave
mov
xchg
mov
lock
cmp
mov
pop
out
xor
in
mov
cmp
dec
ret
vhaddps
sbb
add
shrb
inc
mov
dec
fwait
mov
fbstp
out
add
push
lret
jbe
scas
jecxz
jle
sub
clc
push
dec
xchg
les
aam
dec
cs
dec
dec
pusha
shll
lds
push
pop
add
ds
lock
push
or
add
daa
mov
mov
or
push
sbb
and
in
outsl
or
fldl
mov
sub
push
fmul
mov
arpl
add
cld
pop
pop
out
mov
arpl
decb
dec
clc
xchg
repnz
pop
sub
add
cmp
mov
int3
cltd
xchg
lods
mov
pop
sbb
aam
inc
jge
sbb
xor
pushf
fdivr
mov
pop
in
cmpsb
loope
jmp
int3
icebp
call
aas
in
int
inc
jle
aaa
xlat
mov
cs
in
outsb
into
push
pop
jns
mov
int3
daa
push
lods
add
jno
jmp
jae
jbe
add
or
xor
pop
cltd
mov
xor
outsl
mov
fadds
fwait
cltd
loope
aaa
stos
mov
xor
push
or
sbb
mov
inc
and
daa
stos
pop
push
jg
jg
lods
gs
add
jle
pop
push
outsl
add
push
sub
mov
lods
imul
mov
jb
ds
call
or
out
fimuls
or
sbb
jno
push
sti
lahf
mov
xchg
xchg
pusha
mov
sbb
xor
nop
data16
pushf
or
or
clc
mov
vpshlb
xchg
les
cmc
lods
imul
pushf
cld
outsl
imul
xlat
ret
inc
gs
adc
jae
pop
shrb
cmp
and
cmp
outsb
loop
ss
xlat
cli
call
pop
nop
fstpl
inc
arpl
add
repnz
imul
jp
cmp
push
jg,pn
jo
aad
adc
xchg
cmp
dec
or
jl
jne
into
jne
xor
insb
arpl
sub
stc
mov
bts
pop
pusha
rcl
leave
sbb
into
fmuls
mov
les
sahf
push
pop
push
pop
mov
pop
std
inc
jno
and
repnz
popf
lods
jno
shl
cmp
loop
nop
out
mov
out
cmp
or
jns
lea
cld
pusha
sub
jno
fildll
ficoms
nop
adc
ds
pushf
cmp
pop
rsqrtps
sbb
and
ja
out
sub
mov
inc
stos
mov
sub
inc
stos
pusha
in
mov
pop
popa
lock
mov
shll
xchg
test
lret
repz
lds
inc
fcmovbe
cmp
mov
sti
cmc
and
dec
cmpb
shr
aaa
ja
fmuls
mov
ja
iret
mov
add
jae
or
cmpsl
inc
aad
sbbl
push
pop
sbb
dec
int
cmp
mov
pop
pusha
shll
shll
adc
movsb
test
cmp
sarl
or
cmpsl
xchg
and
arpl
pop
push
push
mov
dec
test
jmp
nop
sti
and
mov
leave
aad
cmp
pop
nop
ret
popa
popf
clc
mov
iret
sahf
insb
mov
ljmp
pop
mov
sub
and
addr16
xchg
jecxz
insb
xchg
cmp
adc
clc
ss
fcoms
repz
fnstenv
pop
jle
in
popf
dec
dec
add
out
jb
addl
inc
sti
mov
push
in
in
and
mov
cmp
adc
insl
and
aam
and
rcll
xor
aaa
sbb
pop
mov
push
loop
jnp
lods
in
inc
jmp
cmp
ret
repnz
loopne
orl
movsl
sub
and
adc
out
mov
cmpb
and
sub
je
les
and
lcall
rcr
aad
or
rol
or
mov
push
xchg
cwtl
scas
pop
lea
stos
pop
mov
and
add
pop
mov
repz
push
negl
jg
adc
ret
fsts
jae
mov
bnd
dec
aas
adc
cmp
sbb
aaa
pop
push
out
movsb
push
imull
bound
pushw
inc
jp
mov
inc
mov
pop
mov
cmpsb
mov
sub
xchg
arpl
es
icebp
sti
jbe
mov
fildll
sub
and
lret
or
ss
jg
pop
addr16
aad
dec
jmp
mull
cmovno
jg
pop
scas
xchg
mov
mov
and
mov
or
loop
mov
mov
imul
dec
scas
cltd
and
xchg
jg
iret
xchg
inc
mov
and
mov
test
xor
mov
cld
jo
push
repnz
sbbb
movsl
mov
mov
aas
ds
add
fs
jecxz
aaa
sub
cs
lret
arpl
fs
or
call
stc
mov
scas
inc
ret
popf
jne
les
popa
adc
xchg
xor
ror
mov
stos
adcl
in
aad
mov
cwtl
test
push
repz
enter
or
ss
fwait
xchg
adc
mov
or
pushf
jl
out
cmpl
mov
stos
sub
jae
mov
mov
loop
xchg
ja
addr16
jbe
pop
sbb
adc
mov
fidivrs
mov
daa
cmovs
inc
enter
and
mov
and
mov
js
orl
ret
sub
xor
fisubrl
cld
outsl
inc
inc
fildll
cmp
mov
dec
adc
mov
outsl
int3
das
cs
ss
mov
ljmp
cmp
mov
cwtl
enter
rolb
pop
imul
or
xchg
adc
scas
and
adc
pop
orl
xor
pop
cmp
dec
out
push
pop
sahf
cltd
loopne
popf
add
inc
loop
loopne
daa
sub
mov
dec
cmp
mov
icebp
sbb
aam
int3
cmpsl
test
jl
xchg
pop
aad
xlat
xor
jle
jmp
fcoms
adc
inc
cmpsl
dec
push
cmp
daa
addr16
aad
mov
mov
lock
cmpsb
lahf
jnp
cwtl
sub
dec
jbe
mov
cmp
inc
pop
lods
pop
add
push
stc
inc
or
sbb
mov
push
pop
nop
inc
enter
mov
loope
mov
sbbl
out
stos
inc
mov
adc
mov
add
inc
cld
mov
lods
xor
jp
out
shll
xchg
inc
in
in
sbb
mov
or
inc
mov
pop
test
repnz
test
cwtl
inc
add
pop
loop
cltd
fwait
test
imull
arpl
loope
dec
cmp
pop
add
dec
ret
repnz
xchg
add
mov
bt
add
sub
mov
xor
inc
pop
jbe
ljmp
mov
int3
inc
add
cmc
stos
shr
cmp
icebp
js
jb
out
inc
jno
aad
dec
shrb
jae
cld
unpcklps
jl
aam
fstp
mov
sbb
lock
sub
dec
dec
xchg
test
mov
std
fidivl
mov
aad
sbb
pusha
lock
jns
fwait
cld
in
pop
adc
xchg
jo
cmp
mov
loope
je
or
fs
nop
out
lahf
sbb
mov
loopne
movsb
xor
scas
xor
je
mov
pop
push
mov
cmp
pop
xchg
testb
dec
jno
or
ljmp
popa
push
jbe
ljmp
mov
lock
or
ds
fisttpll
ja
movsl
out
and
repz
cli
test
pop
movsb
ret
push
mov
cld
cmp
add
dec
in
sbb
popa
imul
cmp
repnz
notb
xchg
lcall
mov
cli
mov
dec
dec
push
xlat
call
and
mov
ljmp
push
cwtl
lret
popa
dec
cmpsl
std
popa
int
fdivrl
jne
push
sbb
fdivs
pushf
sub
mov
aad
int
outsb
xchg
movsb
into
mov
xchg
rcrb
xor
ss
mov
inc
imul
mov
mov
push
dec
sbb
inc
aad
insb
and
insl
push
movsl
mov
lods
hlt
out
pop
or
mov
nop
mov
xchg
out
inc
cmp
adc
jge
ss
pop
pop
sahf
pop
and
dec
adc
adc
aaa
sbb
inc
fadds
pop
or
cmp
repnz
mov
add
cmp
into
sub
xchg
lods
clc
ja
rcrl
ret
subl
fsubrl
push
in
mov
mov
repz
mov
lcall
adc
shlb
cmp
mov
aaa
or
mov
out
sub
dec
out
fs
add
clc
push
js
or
jl
js
pop
out
sbb
push
pop
push
addr16
cmpsb
addr16
xchg
movsb
and
add
add
cmc
jae
xchg
sbb
out
mov
inc
pop
mov
mov
data16
or
sub
movsb
and
sbb
test
mov
das
jg
pop
jbe
xchg
std
xor
movl
in
popl
pop
dec
dec
jl
adc
add
inc
shrb
pop
pop
sti
push
and
pop
jo
sti
or
fcoms
push
inc
pusha
jae
mov
cmp
outsl
mov
es
mov
into
adc
fidivs
push
cmp
popf
mov
pop
or
xor
imul
stc
rcrl
jl
inc
xor
subl
jg
push
test
pusha
push
into
aam
dec
test
pop
xchg
dec
fcompl
gs
adc
cmp
sub
adc
dec
std
das
int3
je
xchg
lcall
cmpsl
and
push
xlat
arpl
push
push
push
pop
sahf
cwtl
cli
call
mov
std
ficompl
sti
cmp
ds
sub
stos
sbb
jp
and
dec
mov
xchg
mov
ja
mov
adc
shll
sub
jecxz
loopne
mov
mov
sbb
jecxz
jns
cmpsl
mov
call
inc
mov
popf
jmp
scas
sti
jl
cmpl
std
pop
int3
mov
imul
xor
ret
loop
dec
push
mov
mov
loope
inc
sub
data16
sbb
mov
pusha
pop
sar
cmc
aam
sbb
and
and
add
sbb
pop
stos
out
pop
mov
pop
mov
cmp
sbb
cs
fisubrs
jmp
cmp
or
je
pop
dec
or
fwait
lea
adc
dec
add
jne
icebp
pop
pop
inc
mov
and
hlt
xchg
les
clc
adc
cli
in
mov
jne
or
mov
adc
pop
fiadds
sub
shrl
stc
adc
mov
xor
into
mov
cmp
into
test
sub
push
add
int
add
rol
jbe
mul
xchg
xor
fistps
cwtl
sbb
popf
in
inc
sub
jae
pop
xor
xchg
frstor
pusha
inc
dec
mov
sti
test
mov
daa
mov
rcrb
ret
pop
xchg
jge
xchg
xor
jp
outsl
jbe
incb
and
push
jle
jp
mov
sahf
mov
lahf
in
icebp
cmc
repnz
popf
sahf
mov
sbb
push
jmp
adc
subl
sti
fwait
inc
mov
sbb
mov
xor
fldenv
iret
xchg
outsl
xchg
nop
sbb
inc
fst
outsb
pop
popf
add
out
pop
push
popf
mov
and
je
call
daa
and
stc
and
inc
hlt
push
mov
inc
stos
mov
cmp
xchg
xchg
inc
jne
pop
jo
ret
cmp
sahf
xor
lock
jns
mov
pop
jnp
sub
scas
and
dec
ja
sub
xor
inc
out
add
mulb
sarl
aas
dec
add
dec
pop
adc
xchg
adc
xor
push
rorl
fsts
mov
stc
jecxz
xchg
mov
cld
ss
stc
stc
jnp
pop
adc
jg
pop
xor
call
movsl
stc
pop
jb
xchg
arpl
lods
push
push
roll
test
pop
cli
adc
cmp
mov
mov
pop
pop
xchg
push
sbb
jnp
pop
mov
ret
aaa
aas
aas
das
mov
repnz
jl
sub
dec
ret
inc
aam
and
stc
rcrl
dec
jne
or
pusha
leave
pop
jnp
xchg
ret
lock
lds
mov
adc
fiaddl
fdiv
stos
mov
outsl
sbb
fcoms
pop
add
or
or
aad
push
movl
xor
push
mov
add
aaa
dec
sbb
hlt
or
repz
dec
fs
out
pop
loopne
xchg
mov
add
mov
movsb
xchg
rep
scas
popf
xor
mov
mov
aaa
inc
sbb
les
or
fnstenv
rcl
mov
lahf
test
rorb
adc
inc
cmp
mov
pop
insl
xchg
sahf
dec
sub
pushf
dec
out
in
es
cmp
aad
sub
or
sbbl
cmp
add
or
sti
pop
loope
cmpl
ljmp
popa
lahf
cmc
sub
cmp
movsb
xchg
jg
test
ljmp
mov
pop
cmp
add
repz
leave
sub
sub
jbe
mov
xchg
or
dec
and
leave
mov
xor
in
adcb
mulb
push
and
aam
adc
es
aaa
xchg
fiadds
das
int3
cwtl
outsl
xchg
lahf
insb
insb
jo
gs
call
cmp
outsb
adc
iret
or
movsb
cmp
sbb
push
cmp
add
hlt
popf
inc
inc
jle
dec
and
lock
pop
sbb
or
fistpll
mov
mov
mov
ret
jmp
or
mov
fucomip
ja
out
sbb
add
iret
sbb
add
popf
imul
outsl
sub
divl
mov
cmp
pop
shrb
out
mov
mov
icebp
lock
add
jl
lret
mov
lret
push
push
push
sbb
mov
and
into
mov
popf
xchg
sub
pop
dec
popf
int
mov
mov
pop
jo
faddl
jae
movsb
imul
add
mov
lods
clc
add
std
xor
cld
mov
jne
js
outsb
cmpsl
js
xchg
jl
push
and
out
sub
sbb
push
aas
xchg
sub
mov
adc
sti
xchg
pushf
and
pop
push
ss
jo
push
and
mov
aam
or
fisubrl
cmp
fidivrs
sub
mov
cli
push
sbb
cli
xor
je
push
ret
hlt
mov
mov
ret
mov
adc
ss
xlat
fadds
ret
pop
xor
aam
lahf
test
out
adc
outsl
mov
mov
cmp
and
fdivs
test
scas
cmpl
sbb
les
xor
repz
testl
xor
sti
xor
rorb
mov
pop
sub
dec
cmpsl
xchg
mov
andb
cmpsb
cld
ljmp
les
mov
pushf
stos
mov
mov
ds
mov
and
dec
sti
stc
mov
add
pushf
scas
push
jle
mov
sbb
mov
and
xor
cmc
push
or
mov
rorl
pop
xor
inc
popf
es
aas
mov
add
cmp
mov
test
pushf
movsl
aas
cmp
xor
loope
lret
popa
push
clc
in
mov
rorb
aas
stos
cmp
dec
ds
add
mov
adc
sub
add
imul
decl
push
outsl
adc
dec
ret
loopne
in
pop
pop
fsubrl
movsl
sub
cmp
xor
and
cmp
mov
mov
iret
xchg
scas
mov
inc
mov
pop
push
call
or
out
mov
popf
fst
mov
mov
jae
rcll
lods
cmpsb
pop
pop
mov
sub
in
mov
push
xor
and
xchg
inc
dec
decb
cli
addl
cmp
push
mov
dec
pop
mov
int3
jnp
aam
cltd
inc
ss
stc
and
add
xchg
movsb
xchg
orl
mov
pushf
push
inc
testb
fbld
push
jns
inc
call
adc
and
iret
sbb
addr16
js
daa
outsb
and
xlat
sbb
inc
aas
dec
and
subb
scas
inc
inc
dec
or
inc
jl
xor
sbb
pop
cli
clc
adc
push
push
cmp
push
push
cmc
test
sar
push
mov
mov
mov
js
ljmp
lods
aad
stc
cmp
pop
cli
push
xor
inc
or
adc
gs
push
es
cmp
mov
push
dec
pop
rolb
cmpb
inc
in
sbb
or
inc
jg
out
and
cmpl
push
and
jecxz
cmova
lea
jmp
addr16
sbb
xor
ds
movsb
push
jp
sbb
mov
into
push
mov
inc
dec
jecxz
pop
jnp
in
jp
or
push
mov
icebp
andb
fisubrl
nop
scas
sbb
arpl
and
insl
ficoms
or
lret
xchg
fstp
mov
mov
test
lods
push
mov
pusha
lahf
movsb
cs
shlb
push
jae
mov
ss
add
mov
and
leave
push
xchg
clc
jo
adc
je
enter
ljmp
xchg
cmp
scas
jne
adc
pop
push
mov
in
mov
jmp
sbb
bound
mov
jb
loopne
test
lret
loopne
sbb
inc
js
sub
jg
dec
out
int3
and
xor
sub
mov
dec
jg
aam
xor
ret
adc
sub
sahf
jg
inc
xchg
xchg
les
popa
xchg
cld
and
pusha
loopne
aad
cltd
and
cmp
cmp
cli
mov
test
dec
aad
icebp
inc
jmp
das
and
clc
add
mov
jb
and
repnz
inc
xor
addr16
and
sbb
push
push
lock
loop
mulb
jecxz
pop
leave
lods
and
fidivrl
jmp
jns
sub
arpl
ret
pushl
sbb
dec
or
and
adc
inc
outsl
sub
sub
push
jb
or
in
nop
out
out
adc
xchg
outsl
mov
lret
adc
outsl
loop
inc
scas
adc
vpsubq
aam
jp
push
pop
inc
int3
push
movsb
sti
mov
shlb
shl
pop
cmp
or
jp
push
xor
sbb
xchg
adc
ljmp
or
and
rorl
xchg
mov
push
sbb
popa
xchg
in
sub
mov
add
ds
mov
arpl
xor
cmp
ret
adc
arpl
adc
bound
aas
test
mov
push
hlt
in
xchg
into
mov
lret
daa
dec
jns
xchg
addr16
cld
cld
mov
or
jmp
xchg
aad
cmpsb
push
or
and
cmc
push
jae
inc
leave
push
inc
pop
inc
fsubl
cld
cmp
inc
add
adc
dec
or
lea
pop
lock
add
fildll
ficoms
shll
adcb
jne
xor
mov
push
xchg
mov
xchg
insb
and
adc
mov
mov
push
in
lea
add
lcall
or
push
mov
scas
lcall
dec
mov
mov
popa
out
cmpsb
cli
and
jecxz
into
fdivrl
adc
fidivl
xor
cs
std
push
ss
aad
fstl
lret
es
jl
sbb
jecxz
xor
sub
dec
fimull
lret
mov
and
fsts
add
mov
ss
cmp
sbbl
mov
gs
scas
jge
xor
rclb
jbe
dec
jp
data16
faddl
aaa
mov
dec
inc
add
pop
repnz
lea
mov
xchg
sbb
ret
mov
jns
jmp
xchg
subb
in
push
mov
mov
fisttpl
mov
fs
movsb
jmp
loope
jae
repz
xlat
inc
movl
xchg
pop
int3
outsb
insb
adc
call
mov
in
loopne
sub
scas
mov
in
inc
ja
dec
pushf
sub
jmp
cli
test
and
int3
repz
push
or
push
sub
cmc
xchg
subb
ret
stos
rcrl
test
pop
pop
push
nop
cmp
cmp
add
pop
pushf
sarb
or
lret
push
xor
mov
or
push
outsb
ss
fildl
lods
xchg
xor
mov
test
push
test
js
es
or
fwait
enter
lds
push
pop
mov
xor
sub
in
add
push
jg
cmp
push
das
mov
lret
leave
loope
adc
loopne
xchg
push
btcl
ret
mov
ljmp
jle
or
inc
in
js
imul
jge
data16
xlat
pop
mov
insl
loop
mov
xor
jl
add
adc
in
les
push
push
cmpsl
popa
fisubrl
push
pop
mov
movsl
push
jge
sbbl
mov
scas
or
pop
mov
push
imul
jg
mov
stos
imul
mov
cmp
das
push
inc
push
xchg
inc
into
mov
cld
cwtl
stos
mov
lret
repnz
in
jne
dec
jge
mov
rcrb
mov
ds
mov
push
orl
ficoms
cmpb
mov
out
test
add
rcr
int
dec
jmp
fnstcw
jae
loopne
cmp
std
fcomip
pop
in
inc
leave
jle
shll
sbb
lret
jnp
shll
jecxz
adc
out
scas
push
int
std
jge
call
dec
xor
xchg
jp
and
xor
mov
test
outsb
movsb
sub
sbb
push
xor
out
dec
cmp
mov
push
lret
and
orb
cld
lret
vhaddps
dec
pop
sub
loopne
ja
xchg
notl
mov
or
outsl
addr16
xchg
xor
dec
sub
fidivrs
gs
out
faddl
inc
insb
xor
mov
rcrb
ds
adc
leave
stc
movl
and
test
in
jnp
mov
sbb
dec
mov
and
insb
imul
adc
pop
mov
mov
cmpsl
shrd
push
push
out
adc
mov
test
push
aas
test
cmp
push
add
pusha
movsl
addr16
or
lret
loopne
push
add
stos
adc
pop
ficompl
loopne
mov
sbb
cld
add
popf
cmpsl
push
enter
cmp
cltd
movsb
das
popa
out
mov
mov
push
orb
stc
and
mov
test
cmp
adc
sbbb
pusha
jnp
pop
cwtl
lods
pop
xchg
sub
in
hlt
fbld
dec
xor
fwait
jno
xor
mov
in
cmpsl
hlt
pcmpgtw
dec
mov
test
pop
pop
xchg
gs
jns
jne
cmp
sbb
dec
sti
mov
push
int
and
nop
call
inc
cmp
and
xor
jmp
ja
cltd
cmpsl
xchg
sub
inc
cmpsl
int
fcomps
imul
sub
push
popa
push
inc
inc
jno
jle
fwait
testb
adc
jle
sbb
movsb
popa
nop
add
xchg
fmuls
push
pushf
mov
add
add
cmpsb
pop
sahf
pop
stos
xor
mov
out
shlb
and
imul
mov
push
out
cmp
mov
fstps
or
shll
mov
push
idiv
xchg
sbb
nop
push
push
stc
mov
cmpsb
rorb
mov
ficompl
pop
push
inc
gs
adc
decb
dec
shl
xchg
iret
pop
add
in
into
mov
mov
dec
jl
push
aas
imul
and
lods
inc
out
lret
clc
out
into
mov
mov
add
add
orb
jge
xor
push
nop
jno
or
bsr
mov
mov
ss
popw
shl
lret
and
add
mov
cltd
aaa
test
stos
add
add
leave
pop
pop
cld
movsb
ret
in
push
jge
cmpsl
pop
sub
fwait
add
mov
js
aas
fbstp
jno
popa
xchg
adc
outsl
sarl
inc
data16
sahf
xor
mov
sbb
sub
pop
pushf
pop
push
inc
daa
cmp
clc
dec
scas
mov
fnstenv
inc
insl
icebp
into
clc
clc
ret
mov
std
mov
xor
icebp
or
pop
jle
loop
and
inc
pop
ror
xchg
lods
dec
insl
scas
fldenv
mov
iret
jle
cs
inc
push
lahf
cmp
shl
or
popa
push
cmp
insb
test
notl
or
push
xchg
icebp
mov
lods
mov
out
xor
inc
mov
and
jae
sub
or
adc
inc
divl
mov
xchg
adc
sbb
les
scas
pop
iret
sar
adc
sbb
mov
test
outsl
leave
pop
cmpsb
jg,pt
adc
adc
outsb
adc
push
adc
dec
fwait
jae
mov
jbe
lret
push
std
mov
xchg
hlt
hlt
mov
push
lea
lcall
aas
cmc
jp
and
dec
loope
testl
sub
sbbl
popa
or
mov
dec
inc
call
xchg
imul
lods
pop
adc
pushf
and
mov
pushf
jne
xor
iret
gs
icebp
mov
xchg
adc
inc
jle
mov
hlt
mov
cmp
push
fsub
ljmp
mov
mov
xor
testl
lea
jecxz
in
call
sbb
jnp
mov
dec
test
lahf
or
cmp
int
rorb
stos
jl
sub
mov
inc
cmp
insl
fidivrl
fstpl
insl
sub
pop
int3
pop
inc
movsb
sub
sbb
dec
push
js
in
and
cltd
popf
push
out
and
ret
ret
test
sbb
call
outsl
fistps
dec
sub
cmpsb
fwait
fwait
xlat
test
lcall
mov
int
mov
cwtl
mov
or
imul
call
ds
outsl
inc
call
push
fnstenv
popa
and
out
call
test
xchg
mov
aaa
sbb
or
jno
adc
js
xor
mov
jge
sub
mov
mov
out
pop
jge
adc
icebp
sub
cs
inc
dec
push
out
lret
jns
lret
pushf
jl
adcb
inc
out
lcall
pop
xor
adc
cmc
pop
je
sub
dec
inc
cltd
xchg
jp
lods
in
adc
dec
inc
and
mov
push
lock
mov
mov
mov
out
jp
mov
mov
inc
test
shrl
test
sbb
pushf
ljmp
pusha
test
out
pop
add
lock
cmp
lea
or
xchg
pop
adc
lahf
js
inc
sub
push
pop
dec
lds
adc
test
add
add
xor
add
addr16
push
xchg
mov
and
inc
negl
push
into
push
pop
sub
inc
jecxz
aad
std
xchg
jp
mov
nop
cmp
mov
inc
mov
mov
adc
push
filds
lret
inc
mov
imul
and
mov
push
addb
shl
push
in
in
das
movsb
out
jnp
jge
sub
sub
dec
and
shlb
mov
movsl
xchg
aam
sbb
lret
das
jmp
fsts
push
adcb
add
cmp
sub
das
sbb
loope
jbe
jmp
aad
xchg
fs
mov
jp
loop
jge
call
cmp
in
scas
cmp
scas
mov
out
mov
lds
in
adc
das
push
xchg
pop
not
cmp
add
fstp
shll
push
jnp
mov
mov
ror
jmp
dec
xor
negl
jmp
jae
scas
push
inc
mov
xchg
movsl
fcmovnb
cld
xchg
insl
fldt
ljmp
sub
fnstcw
out
xchg
orb
lods
or
push
gs
sahf
mov
jns
cmpsl
push
mov
bound
xor
inc
stos
inc
and
aaa
lret
shll
lcall
xchg
lea
cld
insl
push
es
lcall
out
or
cmp
sub
or
push
lods
adc
mov
lcall
aas
ja
cmp
xor
add
push
dec
sti
leave
mov
push
jo
cltd
xchg
mov
sbb
xlat
pop
add
push
sbb
int3
cltd
add
dec
mov
imul
arpl
nop
dec
pop
xor
pop
or
mov
or
inc
stc
movsl
mov
and
mov
out
add
fldcw
and
pop
pop
push
imul
or
enter
jae
in
insb
push
pop
sbb
hlt
fsts
or
pushf
cld
push
cmp
mov
mov
mov
movsb
push
dec
xor
adc
repz
mov
pop
lret
std
jnp
jb
fsubrl
dec
add
shl
pop
mov
jmp
loopne
mov
lods
cmp
push
out
mov
sub
orl
jle
repnz
mov
add
fisubl
aaa
mov
loopne
push
xchg
adc
add
mov
xor
mov
insb
or
pop
mov
cmp
jae
stc
shlb
push
es
inc
pushf
jmp
cs
and
mov
std
push
leave
pop
xor
xor
adc
negl
push
push
mov
icebp
cli
jge
push
sahf
xchg
lret
aad
outsl
cmp
add
lahf
push
adc
xchg
shll
xchg
xchg
jb
orb
and
cmp
into
xor
scas
sub
ljmp
mov
dec
push
addb
jbe
jne
add
sbb
mov
push
push
arpl
add
outsb
popf
jne
cmp
je
shlb
push
ds
mov
sbb
jg
cmp
mov
aam
lret
adc
fwait
and
and
sub
add
insb
inc
scas
cmp
ds
fistl
cmc
jne
inc
xchg
adc
pop
mov
subl
rolb
arpl
cmp
xchg
in
notl
cltd
and
inc
or
jge
pop
testb
cltd
pop
push
mov
adc
adc
pop
mov
lea
sti
sbb
je
enter
out
xchg
sub
and
js
sub
and
mov
jae
loope
fiadds
mov
fsubs
fimull
jl
jecxz
add
push
pop
add
insb
mov
pop
and
test
das
leave
sbb
fwait
mov
sub
xchg
shll
repnz
cld
in
test
sbb
lret
cmp
mov
sbb
mov
jmp
and
lock
movsb
cmc
push
inc
pop
sbb
or
xor
scas
xchg
add
xor
repnz
test
fistpl
xor
mov
aad
aas
hlt
fisubrs
inc
loope
jmp
sbb
insl
pop
xor
sub
icebp
jmp
adc
jle
sub
out
stos
sub
jno
lahf
and
xor
lock
fwait
enter
push
cmc
push
xor
xchg
int3
push
out
push
outsb
les
mov
mov
sbb
adc
cmp
adc
rcrl
lcall
cmpsl
dec
rorl
xchg
push
cmp
mov
fwait
mov
fistps
outsl
add
mov
hlt
call
adc
xor
sbb
sub
adc
rcrb
adcl
jge
outsl
test
jle
sbb
shlb
or
jle
pop
scas
fidivl
xchg
movsl
push
xor
jo
mov
xor
mov
and
pushf
add
add
mov
mov
add
divl
gs
push
pop
fadds
cmpsl
in
mov
ss
xchg
fidivrl
inc
sti
lret
jnp
inc
pop
jecxz
popf
mov
lahf
jbe
push
outsl
sbb
fadds
jne
mov
ss
mov
sub
cmp
or
mov
sbb
mov
stos
mov
xchg
hlt
fsubrl
add
cmp
pop
call
jmp
stos
xlat
insl
push
mov
js
adc
mov
dec
add
dec
and
push
xor
pop
pop
ds
adc
leave
popf
and
movsl
sub
mov
add
test
fisttpll
int
lods
or
jno
stos
fldt
jnp
mov
das
andl
rcrl
xorl
ja
jnp
pop
jbe
and
mov
jp
scas
dec
imul
lock
shlb
xchg
jg
nop
push
in
sbb
cltd
scas
cmpsl
aaa
sub
jg
jg
mov
ret
pop
inc
decl
mov
imul
jp
shll
xchg
mov
push
inc
insb
sub
ret
out
shlb
icebp
outsb
ret
mov
adc
scas
pop
daa
mov
or
bound
pop
mov
popa
out
movsb
add
test
xor
push
push
mov
mov
adc
or
mov
push
call
fcmove
xor
ficomps
dec
xchg
addr16
cmp
test
jne
cmp
pop
push
mov
inc
cmp
mov
sub
in
rorl
xor
rorb
mov
jo
mov
idivb
cmp
add
sbb
or
cmp
cmc
imul
xchg
mov
stos
and
xchg
pop
movsl
ljmp
cld
pop
insl
sub
inc
iret
lahf
jg
jg
add
and
mov
ljmp
adc
dec
and
or
jbe
push
mov
xlat
stos
aaa
addr16
std
mov
les
jp
popf
stos
dec
jbe
adc
andl
add
sub
mov
ljmp
jbe
aas
push
dec
xchg
lret
notb
pop
mov
xor
ret
jge
inc
and
pop
fisttpll
bound
es
push
in
mov
std
jo
mov
dec
std
imul
sbb
inc
mov
in
adc
ss
cmp
ret
lret
out
gs
mov
cwtl
movsb
clc
test
mov
cld
scas
jne
add
push
inc
pop
adc
push
xchg
leave
shrl
inc
insl
aad
jb
fs
out
dec
aad
mov
test
out
daa
mov
mov
push
adc
push
inc
xor
xchg
subl
fsubs
loop
addr16
jnp
imul
vpmadcsswd
adc
push
fdivl
dec
add
xchg
cltd
mov
pop
outsb
pop
mov
js
dec
adc
xchg
cmp
push
mov
in
andl
mov
insb
push
mov
das
pop
lahf
mov
sub
shld
popa
fcmovu
xlat
lcall
jb
std
es
xchg
dec
in
dec
pop
mov
jle
jo
and
mov
cltd
mov
outsb
mov
mov
shr
inc
inc
call
and
xchg
fdivs
es
jbe,pt
scas
push
cltd
adc
iret
mov
and
push
iret
dec
arpl
pop
push
inc
sub
lods
and
xchg
loope
mov
popf
pop
leave
cmpsl
int
rolb
ljmp
jne
or
and
sub
dec
cmp
ja
pop
int3
lods
das
das
cwtl
sbb
cmpsb
mov
hlt
mov
lock
mov
xchg
xorb
mov
mov
je
aaa
pop
stc
lock
fsubl
aam
nop
jmp
xor
dec
test
dec
icebp
sub
dec
push
add
cmp
xor
mov
xchg
adc
cli
filds
fwait
lcall
cmpsl
inc
stos
outsl
push
in
aam
add
fwait
repz
cmp
movsb
addb
stc
push
or
lcall
sbb
mov
xchg
mov
jle
imul
inc
jg
xlat
or
or
ljmp
cli
jno
inc
loop
js
jae
pop
sbb
xchg
adc
mov
jmp
arpl
add
shl
out
movsb
loope
dec
lea
inc
popa
push
lods
roll
lahf
iret
lea
and
xchg
pop
subl
xchg
stos
pusha
les
mov
push
lock
lock
ss
test
outsl
mov
subl
ja
imul
xchg
dec
and
sub
jne
enter
ret
push
ret
rorl
jno
sbb
cmp
or
pop
addr16
bound
and
adc
hlt
mov
repnz
mov
mov
xchg
repnz
pop
out
in
addr16
xor
cmpl
add
sub
pop
mov
adc
test
es
cli
test
adc
adc
mov
aam
push
sbb
push
gs
fcomip
fisttpll
movsl
jge
jmp
pop
clc
ja
imul
scas
pop
mov
imul
pcmpeqd
cwtl
sar
pusha
xchg
or
fldenv
add
test
dec
sub
lret
lahf
scas
inc
jmp
adcl
cmp
out
int3
repz
dec
daa
and
int3
cmp
push
add
mov
cli
sbb
loope
adc
push
xor
sbb
rclb
popl
adc
and
push
std
out
add
ss
push
pop
sbb
xchg
insl
push
pusha
mull
mov
rcr
std
and
cld
adc
ret
shlb
mov
mov
stos
dec
lea
push
push
jp
sbb
imul
test
repz
pop
mov
divl
dec
adc
mov
sbb
lahf
lahf
jp
or
xchg
lcall
pop
mov
loop
xor
jmp
add
cmpsb
sub
or
inc
inc
sahf
out
dec
ret
cltd
ss
fs
jl
cmpsl
imul
sbb
int3
imul
jne
je
aaa
ficomps
sbb
xor
test
aad
fwait
inc
xor
jnp
shlb
jbe
arpl
push
movsb
test
es
sub
stos
inc
add
xchg
hlt
push
les
pop
movd
add
xchg
shrl
sarl
mov
dec
fdivrl
sbb
ja
cwtl
mov
sahf
ss
pop
push
testl
sti
or
shlb
das
jl
rcrl
jno
test
mov
jmp
fld
sbb
push
dec
xchg
mov
and
mov
scas
les
aas
pop
pop
xchg
pop
cwtl
push
mov
ret
xor
cmp
xor
mov
push
cmp
lea
movsl
outsl
rcrl
in
imul
pusha
fsubrs
stos
clc
fiadds
leave
sbb
jno
pop
pushf
daa
dec
jge
jmp
ret
adc
icebp
cmp
pushf
push
or
hlt
mov
and
add
out
fisubrl
mov
lcall
mov
cmp
bound
mov
movsl
out
cmpsb
xchg
scas
or
jae
xchg
add
popf
loopne
shrl
pop
les
add
pop
pop
inc
cmp
aam
adc
mov
sub
lods
mov
mov
notb
loope
pop
mov
stos
mov
push
movsb
mov
cmp
jmp
adc
jecxz
mov
pop
in
sti
dec
int3
sbb
jo
sub
imul
mov
stos
gs
jmp
fdivl
cli
ret
jp
rol
test
cmp
inc
shrb
mov
int
lods
cmp
mov
push
or
cmp
xor
push
mov
mov
orl
popa
insb
jnp
dec
add
push
sub
push
sub
mov
mov
xorl
scas
adc
cmpsl
stos
data16
dec
jb
sbb
arpl
lods
adc
add
mov
outsl
clc
ja
sbb
mov
dec
cmp
jle
cmp
int3
stos
addb
mov
negl
aas
lods
dec
and
idivl
cwtl
sbb
pop
fimuls
jp
loop
mov
pop
jns
jge
popa
sub
or
cmp
int3
add
lods
sbb
jl
rorl
push
pusha
jg
mov
or
mov
fadds
pop
mov
mov
sub
fwait
clc
inc
lds
add
or
lds
ficoml
lret
shll
and
sti
push
fucomi
leave
push
or
cld
fldenv
pushf
addr16
pop
adc
sbb
inc
sub
cs
lods
adc
lock
das
jbe
or
popa
mov
push
mov
mov
lret
add
imulb
arpl
call
scas
mov
popf
nop
loope
or
pop
outsb
mov
loopne
cmp
mov
mov
stos
mov
fdivp
mov
les
int
dec
popl
jp
or
xchg
push
fwait
pop
lods
inc
pusha
mov
sahf
adc
dec
jo
popa
loope
sub
mov
pop
pop
out
inc
in
int
lret
psllq
cltd
in
ret
add
mov
aad
inc
sahf
and
mov
insb
les
aas
outsl
dec
and
pop
xchg
out
jmp
pop
in
jo
fcmove
popf
cmpsl
test
sbb
scas
mov
je
pop
loope
cs
mov
pop
dec
or
leave
pop
sub
push
in
pop
cmp
insl
imul
cld
arpl
int3
mov
push
xor
daa
ljmp
pop
mov
inc
mul
out
mov
mov
sub
mov
cmp
xchg
mov
fstpl
or
cmp
and
nop
pop
out
mov
aad
mov
testl
insl
or
and
outsb
mov
testl
pop
outsl
rcrb
cmp
cmp
out
add
por
xchg
nop
in
lret
xchg
daa
lcall
push
lea
mov
cwtl
pop
repz
push
sub
mov
mov
cmpb
popf
insb
push
dec
int3
push
dec
dec
sahf
pop
aaa
shlb
dec
add
and
enter
stos
mull
inc
stos
test
inc
int
or
je
jns
sub
inc
mov
jecxz
cmp
mov
push
adc
aaa
dec
fiaddl
mov
mov
adc
sub
scas
jb
or
sub
pop
data16
jb
mov
loopne
pop
xchg
mov
lcall
movsl
sbb
xchg
in
popa
adc
jl
pop
lahf
or
jbe
and
shrl
push
mov
ljmp
jg
call
mov
outsb
repnz
mov
addl
test
loop
fstpl
pop
addl
mov
sub
pop
movsl
xor
push
mov
and
inc
movsl
or
and
add
repnz
orl
es
loope
mov
loope
pop
fimuls
rcrb
xlat
inc
aas
inc
or
fsubp
arpl
scas
mov
sahf
lret
push
nop
dec
or
pop
into
pop
jno
mov
jno
add
xorl
outsb
push
cmp
push
push
out
xchg
inc
xchg
outsl
cmp
fists
movsb
push
and
jne
adc
inc
lret
stos
enter
sahf
jne
pop
sbb
mov
in
inc
cmp
pop
popa
enter
bound
inc
mov
arpl
outsb
arpl
inc
fwait
xor
xchg
adc
or
cs
int
fimuls
pop
jb
rcll
push
pusha
sbb
push
gs
sti
stc
lods
cmpsb
leave
cmp
lods
sub
stos
sbb
xlat
cmpsb
jmp
dec
inc
dec
enter
mov
inc
shlb
loope
xchg
ss
sbb
push
imul
mov
imul
insb
lret
les
dec
xchg
lcall
aam
cmp
sub
xchg
inc
sbb
fstl
clc
jl
cs
jle
out
add
mov
xchg
out
mov
xor
xchg
dec
mov
repnz
shr
test
or
pop
mov
test
mov
scas
icebp
xchg
jne
call
or
mov
ret
dec
xchg
daa
mov
fisubrs
jae
iret
push
es
sahf
push
push
push
scas
daa
mov
inc
repz
fcompl
mov
int3
and
pop
imul
jle
push
mov
push
or
jmp
and
subb
scas
cwtl
xor
add
in
sbb
xchg
movsb
or
loope
jmp
sbb
xchg
mov
movsl
rclb
adc
pop
adc
jbe
jmp
sub
fmul
or
and
xchg
inc
std
pop
push
repnz
mov
lea
adc
inc
jne
jae
mov
fistpll
mov
lea
jns
aad
xchg
add
mov
fs
jmp
xchg
je
mov
roll
inc
add
jp
pop
call
mov
push
data16
jge
push
or
add
push
into
in
jle
jl
adc
push
in
sbb
test
dec
outsl
fidivs
fwait
adc
popl
rolb
lahf
cltd
cwtl
mov
std
in
cmp
out
roll
jmp
mov
sahf
bound
jecxz
ss
lds
xchg
inc
dec
mov
test
xchg
adc
sub
mov
mov
sarl
test
sub
adc
pushf
enter
test
pop
pop
adc
jmp
icebp
loope
push
and
pop
jne
xchg
adc
lahf
jmp
adc
das
cmp
in
mov
dec
repnz
inc
movsl
mov
mov
test
xchg
lea
inc
sub
pop
mov
bound
or
jno
test
loope
mov
add
fwait
pop
inc
iret
adc
ret
xor
pop
dec
mov
jae
and
cmp
or
ljmp
les
or
iret
mov
out
adc
hlt
clc
popf
aam
outsl
mov
dec
adc
adc
dec
pop
cmp
mov
mov
imul
inc
popf
arpl
into
pop
cmc
les
aas
and
lcall
push
lcall
pop
xchg
cltd
inc
pushf
incb
cmpsl
lahf
test
incl
daa
icebp
fimull
arpl
ds
mov
dec
inc
ret
sub
sub
addb
mov
pop
mov
mov
test
in
popf
fs
mov
mov
addb
mov
imul
dec
test
movsb
inc
push
je
rol
xor
mov
xor
insb
imul
daa
cmc
xor
aam
sbb
xor
popa
rcl
add
push
jg
lock
shrb
repz
fucomip
cmp
xor
cwtl
movsl
add
stos
and
sbb
adc
enter
lret
inc
inc
out
stc
not
pop
sub
mov
imul
sub
push
aaa
jg
out
inc
scas
sbb
add
imul
sbb
mulb
fucom
sub
sub
rolb
enter
repnz
dec
add
mov
mov
jnp
daa
xchg
dec
out
aaa
test
in
adc
pop
hlt
sbb
and
pop
outsl
mov
cmp
mov
cmp
sub
pop
pop
mov
rclb
ja
arpl
xchg
xchg
cmp
push
or
ret
or
call
aam
sbb
out
mov
jnp
in
mov
or
push
in
aas
icebp
inc
frstor
or
pop
pop
nop
jmp
hlt
fcompl
popf
push
cmp
sbb
mov
cmpsb
sub
mov
mov
test
in
sbb
out
dec
mov
dec
sbb
das
cwtl
subl
ss
xchg
scas
cli
sub
ret
jb
lcall
cmpsl
scas
mov
xor
lock
pushf
sbb
pushf
jecxz
mov
scas
imul
sub
cmp
mov
nop
jl
and
xchg
cmp
imul
sysret
inc
mov
icebp
outsb
or
inc
dec
inc
out
xchg
std
mov
inc
xlat
gs
in
mov
call
dec
idiv
fldcw
repz
jmp
jmp
xchg
xlat
loope
popa
xchg
ss
lock
andl
das
lods
in
jg
in
xchg
nop
or
sbb
pop
in
aaa
mov
lock
mov
mov
mov
jo
xor
fisubl
and
or
loop
sbb
cld
and
gs
hlt
aad
shlb
xor
sahf
and
in
ret
mov
xchg
xorb
cmp
or
lahf
xor
fmuls
mov
pop
push
push
cli
adc
dec
clc
mov
leave
orl
outsl
in
loope
add
jmp
test
push
ljmp
gs
xchg
xchg
call
js
ss
add
xchg
mov
leave
in
ss
xchg
xor
lods
std
mov
jns
sbb
inc
test
movsb
leave
imul
push
jecxz
sbb
jo
fisttpll
sbb
lods
fdivrl
jmp
dec
outsb
sub
es
cmc
ficomps
stc
mov
cmp
popa
icebp
aam
mov
adc
pop
push
sbb
mov
stos
and
sbb
dec
cwtl
or
or
fnstenv
iret
inc
jmp
jle
xchg
jl
mov
outsb
dec
and
icebp
push
jb
push
lea
dec
aam
fstps
jge
xchg
std
adc
sub
jecxz
push
fbld
push
cmp
bound
lret
jno
cmpsb
sub
add
xor
in
outsb
adc
popf
test
sbb
jmp
das
xchg
dec
jmp
ret
jne
push
sub
loop
pop
cltd
jp
imul
incb
movb
stos
fdivrs
int3
stos
mov
fwait
popl
les
test
xchg
or
lahf
gs
mov
and
cmpsb
and
push
adc
ret
jo
ret
xor
lcall
jb
aaa
cld
movsl
inc
add
stos
ds
push
jle
call
mov
push
push
out
dec
sub
mov
xchg
sub
mov
fildl
pop
call
outsb
aas
cmp
inc
xlat
xchg
pop
fsubrl
cwtl
scas
xor
scas
and
sbbb
push
pop
call
lods
mov
lea
insl
fcmovu
inc
js
out
aas
ljmp
adc
cld
push
ret
xchg
repz
inc
jo
cwtl
mov
lods
int3
cli
push
ret
pusha
xchg
pop
inc
push
mov
pop
mov
imul
pushf
pop
jecxz
aam
test
jl
xorl
out
or
out
adc
out
dec
add
xor
sub
je
xchg
push
fsubrs
insl
xor
test
push
dec
lods
sbb
imul
adcl
mov
imul
sbb
xor
cmpsl
addl
outsb
lea
adc
loop
fnstcw
mov
mov
mov
cmp
mov
into
xchg
sub
cmpsl
dec
sub
xlat
adc
inc
xor
jp
cmp
js
xor
cmp
cmp
pushf
clc
out
shlb
lods
movsb
lods
pop
arpl
and
pop
popa
jno
test
movsb
fcompl
xchg
mov
popa
in
jae
fldt
push
popf
call
into
jo
test
jecxz
sbb
cmp
lahf
fstps
jno
in
sub
mov
adc
pop
xchg
lods
lret
ficoms
or
mov
test
mov
insl
inc
push
cmpsb
call
mov
popf
bound
icebp
push
leave
xor
adc
mov
pushf
leave
and
stos
mov
or
dec
adc
repz
sarl
sbb
sti
xchg
fistps
or
xchg
incl
out
daa
les
cmpsb
dec
add
xchg
enter
pop
mov
pop
scas
jmp
sub
bound
imul
jns
mov
cmp
xchg
les
cmpsl
add
jnp
pop
repz
pop
jno
or
push
sbb
lea
cmpsb
push
cmp
pop
xchg
scas
mov
push
nop
jbe
mov
movsb
xchg
push
jle
jecxz
push
dec
jg
adc
shrl
dec
jae
push
push
shlb
dec
ss
jnp
std
or
imulb
cmpsb
pusha
gs
enter
xor
lret
je
mov
inc
mov
jl
push
sbb
pop
jae
fstl
stos
dec
adc
jmp
pop
ror
add
shrl
mov
push
inc
ficoms
sti
add
int
aaa
stos
aam
jmp
repnz
rorl
dec
aas
jne
in
sbb
stos
popf
sub
push
fdivs
pop
and
pop
add
in
lods
or
dec
add
mov
sbb
xor
daa
cld
push
push
and
inc
mov
push
test
adc
add
movsl
aaa
cmp
mov
hlt
sub
dec
jbe
lds
pushf
jbe
xchg
jg
leave
pop
in
mov
mov
in
int3
xor
fidivrs
mov
and
lods
cmpsl
sbb
mov
jp
clc
nop
inc
pusha
call
add
rorb
mov
xor
lods
es
push
je
ss
jle
mov
subl
or
cmp
repnz
stos
xchg
xor
cmp
cmp
cmp
xchg
call
cs
cwtl
jp
icebp
mov
push
imul
fldl
repz
mov
mov
pop
xchg
mov
in
mov
sub
rcll
mov
pusha
jmp
sarb
lds
cmc
pop
les
popa
jl
pop
sbb
jns
mov
pop
fs
movsl
pop
sub
jecxz
mov
adc
and
dec
sub
andb
ja
fidivrs
inc
test
and
mov
sbb
push
sbb
divb
jle
inc
neg
out
mov
xor
jb
sbb
xor
lret
aaa
sub
add
and
dec
sbb
mov
or
js
adc
pushf
xor
push
lea
adc
shr
in
xchg
hlt
push
xor
popf
jns
mov
pop
test
dec
scas
adc
mov
jbe
add
lahf
or
mov
cmp
dec
inc
ljmp
lret
aam
decl
push
lods
loop
dec
cmp
pusha
cmp
and
mov
adcl
sub
ret
mov
into
imul
dec
sbb
lea
inc
dec
loopne
nop
and
gs
test
ficomps
fnstenv
hlt
mov
push
imul
leave
dec
call
adc
shrb
lds
es
or
test
xor
or
lods
pop
pushf
mov
push
jne
lea
lahf
iret
push
xor
insb
mov
jmp
mov
insb
sarb
mov
test
imul
test
mov
jmp
andb
xchg
aas
ret
lods
orl
into
sub
test
push
clc
inc
xchg
movsl
outsl
push
mov
movsl
in
in
hlt
cld
inc
push
sub
cmpsb
dec
adc
loopne
movsl
inc
fwait
rorb
jmp
nop
jbe
or
cmc
adcl
stos
mov
mov
inc
cmc
popf
cmp
lret
ds
pop
daa
out
divl
int3
xor
shl
pop
mov
ret
int
mov
push
mov
cmp
or
or
sahf
jg
add
js
clc
and
popa
jno
mov
int3
pusha
fdivrs
mov
mov
adc
sub
pushf
dec
loope
lea
and
pop
in
push
mov
jmp
xlat
out
add
mov
push
xchg
loopne
pusha
int3
out
mov
mov
lods
ficomps
loopne
xchg
imul
push
sub
fistpl
or
jl
inc
shr
std
cmc
andl
mov
mull
dec
push
adc
lret
popf
xor
mov
pop
xor
inc
data16
es
adcl
loop
pop
xor
test
loopne
jno
in
add
mov
mov
enter
jecxz
push
xor
jp
sub
sbb
int
aaa
mov
pop
imul
out
repz
push
push
jmp
dec
xchg
cmp
pusha
aas
adc
xchg
cwtl
push
out
dec
lret
pop
inc
inc
push
mov
mov
out
test
push
movsl
or
and
dec
lods
mov
ljmp
lea
int3
inc
out
test
pusha
pop
js
push
outsl
jnp
jbe
mov
or
lea
das
out
mov
fwait
scas
adc
mov
xchg
imul
mov
fisubrl
mov
scas
xor
or
or
mov
push
fisttpll
mov
dec
ljmp
or
pop
push
xchg
dec
mov
test
aam
rcl
push
outsb
adc
testb
cld
dec
cld
imul
pop
jae
loopne
jg
repz
cmp
mov
cmp
and
sbb
mov
add
outsb
jae
orb
in
aaa
test
lods
jbe
xchg
sbb
nop
shll
inc
add
gs
ficomps
roll
loopne
inc
jl
pop
shrl
push
push
add
aaa
rorl
dec
cmpl
sar
das
insl
add
ret
and
inc
nop
pop
or
mov
and
xchg
les
cmp
adc
popa
push
repz
push
inc
push
push
js
shlb
das
jle
loopne
addl
mov
dec
xchg
push
push
sub
femms
xchg
sti
mull
pop
lret
jp
cmpsb
test
sahf
call
mov
push
aaa
mov
cmpsl
cmpsb
sub
xchg
jecxz
sub
xlat
mov
sahf
push
aaa
or
ja
jge
cwtl
jbe
xor
js
ret
mov
movsl
jmp
imul
mov
and
add
in
icebp
sub
dec
sub
mov
push
mov
pop
jnp
rorl
cwtl
dec
jg
jns
scas
cltd
mov
push
jmp
test
cmpsb
ret
pushf
cmpsb
or
mov
and
sub
push
cmp
jo
push
scas
jne
dec
sub
sbb
dec
sub
push
not
sbb
outsl
arpl
or
mov
or
add
shlb
cltd
dec
or
inc
mov
sbb
in
mov
mov
aad
pushl
jp
ret
mov
daa
pushf
pop
cwtl
imul
arpl
out
mov
hlt
adc
pushf
sub
adc
sbb
out
aaa
clc
add
push
adc
or
movsl
inc
mov
push
mov
sarb
jge
sbb
test
je
lods
subb
std
xchg
pop
mov
or
sub
xor
repnz
outsb
dec
ja
test
leave
cltd
mov
outsb
jnp
push
aam
dec
movsb
pop
sbb
cmp
std
mov
pop
popf
push
sti
cmpsb
shll
jmp
lea
mov
cmp
push
mov
aad
or
jmp
fucomi
inc
dec
dec
popa
pop
fwait
cmp
dec
sbbl
xchg
ds
outsl
jle
jle
leave
pop
test
je
pop
lahf
sahf
lods
add
pusha
sbb
pushf
or
lea
add
mov
movsb
divb
inc
jb
or
xorb
lret
mov
push
lods
adc
push
xor
sahf
push
int
push
or
loope
xchg
ljmp
rcll
rorb
cmp
or
add
cmp
fdivrs
cmp
frstor
repnz
pop
fisttpl
outsb
dec
sbb
js
in
mov
mov
push
xor
inc
daa
xchg
daa
sbb
mov
add
lret
mov
mov
daa
addb
jae
dec
push
hlt
mov
xchg
xchg
adc
iret
sarb
outsl
mov
out
and
outsl
pop
and
outsb
icebp
adc
test
imul
roll
jb
bound
pop
inc
sarb
aas
mov
lret
and
inc
and
in
mov
in
neg
sarl
adc
xlat
leave
shrl
xor
shlb
negb
adc
scas
js
dec
dec
addl
popa
cmpsl
jg
pop
cmpb
sub
jo
and
jae
xchg
pop
inc
test
xor
jg
cmp
pop
mov
dec
mov
fnstenv
inc
mov
and
mov
sub
adc
cmp
mov
inc
cmp
je
mov
or
divl
cmp
or
and
mov
out
adc
mov
cmpsb
xlat
outsl
cltd
movsb
dec
push
fsubrs
cmp
push
sub
dec
mov
sahf
sahf
xor
add
fstpl
out
je
push
sub
lods
or
rdtsc
aaa
fstl
out
pushf
push
mov
out
loop
mov
arpl
push
inc
or
test
jle
pop
xchg
lods
sahf
mov
sub
cmp
jnp
sbb
jb
test
or
out
mov
dec
adc
enter
lea
insl
mov
insl
dec
sbb
je
jo
ja
stc
mov
xchg
xlat
mov
pop
add
out
sub
repz
in
lahf
jmp
and
in
push
xchg
sub
fs
ret
inc
int3
push
jmp
popf
jge
mov
lret
adc
dec
xchg
and
lock
sbb
loopne
jecxz
dec
mov
dec
push
and
rolb
out
mov
add
dec
inc
cmp
jle
out
sbb
mov
scas
push
and
hlt
lock
stos
out
test
mov
pop
mov
sbb
mov
add
pop
inc
inc
scas
add
cmc
idivl
dec
add
ss
and
pop
mov
mov
fstpl
mov
cltd
into
int
into
cmc
sbb
es
xchg
sub
inc
aas
and
call
jbe
cmp
cmp
int3
sti
inc
cmp
adc
daa
insb
inc
pop
test
fbstp
fwait
cmpsl
int3
dec
cmpsb
xor
mov
out
arpl
sti
push
test
mov
pop
mov
inc
int
xchg
rol
add
pop
cltd
sahf
clc
or
push
mov
orl
rclb
mov
or
mov
aas
pusha
mov
adc
and
scas
mov
outsl
repnz
fwait
test
jne
mov
les
xlat
les
and
cmc
sbb
rcll
outsl
mov
pop
push
movsb
dec
call
stos
je
pushf
inc
lcall
lods
pushf
dec
decb
filds
xor
addb
into
lods
sub
jmp
add
out
sbb
stos
push
das
test
stc
data16
daa
jns
aas
cmc
jmp
loopne
jno
inc
ret
xor
pushf
xchg
hlt
adc
out
jnp
pop
pop
stos
cmp
cmp
sub
insb
add
fwait
cmpl
lcall
cmc
adc
insl
pop
fidivl
mov
int3
mov
or
push
xor
popf
loop
jecxz
inc
xchg
imul
or
daa
jmp
cli
cwtl
sarl
pop
add
lret
push
inc
cmp
xor
cwtl
push
jmp
je
cli
lock
mov
rcrb
or
xchg
xor
dec
sub
mov
xchg
lahf
int
add
clc
dec
dec
ljmp
out
cmpsb
mov
mov
dec
fs
dec
test
inc
cld
adc
mov
test
leave
or
cmp
mov
jno
or
xchg
add
mov
push
pop
mov
fistpll
mov
daa
fdivrp
push
cmp
jge
js
jns
je
mov
outsl
mov
mov
sbb
mov
jae
inc
mov
popa
push
dec
aad
xlat
movsl
jg
scas
mov
adc
inc
out
dec
sarb
call
sbb
xor
mov
push
les
in
xchg
inc
xchg
mov
hlt
xor
leave
xor
xchg
jnp
xchg
dec
fsubr
lcall
xor
movsb
dec
adc
mov
leave
pop
mov
aad
pop
xchg
ret
pushf
push
leave
in
or
xchg
es
mov
ret
mov
xor
mov
mov
int3
inc
shl
lcall
push
dec
jl
sbb
or
mov
cs
or
arpl
add
popf
push
mov
cmp
fildll
add
int
mov
push
into
mov
lods
inc
xchg
push
fstl
mov
mov
cmp
fisttpll
ljmp
jb
rolb
cld
in
popa
test
or
sub
scas
icebp
mov
je
push
imul
dec
cmpsl
daa
sbb
sub
out
adc
test
mov
and
inc
jmp
xchg
jp
sbb
push
xorb
lods
loopne
cmp
ret
jno
test
test
or
or
outsl
fstpl
lret
imul
sub
mov
push
test
push
ret
inc
jns
je
xchg
mov
loop
jo
sub
mov
test
insl
jbe
fcoms
xchg
fwait
adcb
mov
and
imul
dec
subb
inc
arpl
or
dec
push
out
std
dec
loopne
xchg
rolb
mov
rcrl
jo
call
sbb
cltd
jp
lea
or
jle
cld
adc
ja
scas
pushf
mov
mov
pop
and
repz
mov
cli
mov
cmp
insb
test
mov
push
ds
push
push
xor
xlat
push
ja
imul
xrelease
mov
ret
int
iret
sti
dec
out
fistps
cmp
xor
adc
push
xchg
jg
adc
mov
stc
or
hlt
rclb
inc
aad
adc
push
adc
adcl
movsl
mov
mov
xor
cmpsb
adc
test
pop
repnz
add
aad
inc
sbb
stos
adc
mov
out
in
sub
js
repnz
dec
insb
in
xor
ljmp
cld
cltd
mov
mov
in
xchg
mov
or
enter
leave
xor
call
xor
dec
inc
lock
fisttpll
pop
dec
pop
mov
stos
xchg
or
outsl
push
data16
mov
xor
sbb
xor
ret
push
je
das
jecxz
cmpsb
lds
push
lret
test
std
in
inc
jae
pusha
cmp
aaa
aad
jae
mov
scas
pop
out
xor
data16
sub
in
mov
push
shll
and
or
iret
leave
adc
aam
fstps
into
jl
add
roll
sbb
xor
aad
sbb
inc
test
fst
jl
xor
cmpsb
add
pop
jle
femms
push
push
leave
jge
call
outsb
daa
push
lret
push
pop
or
out
xchg
mov
push
or
imul
js
push
mov
stos
fldl
and
jl
xchg
xor
int3
sbb
add
test
adcl
xchg
xchg
hlt
test
jae
sbb
scas
subl
cld
push
sarl
cmc
fisttpll
xor
xor
xchg
push
inc
jg
mov
shlb
dec
and
int3
fnstsw
xchg
adc
jg
dec
mov
push
test
push
push
mov
push
les
inc
clc
int
insl
lcall
idivb
mov
scas
jp
sbb
mov
lea
shrl
adc
enter
lcall
aad
push
dec
scas
push
fcomps
daa
test
push
mov
daa
lods
xchg
xchg
cmc
arpl
mull
pop
shll
insl
adc
scas
aaa
cltd
es
dec
int3
cmpsl
mov
popa
sbb
mov
jae
add
push
pop
fiaddl
repz
sub
sbb
cmpsl
xchg
push
jns
cmp
xorl
mov
xlat
pop
mov
dec
movb
push
insl
xor
pop
pop
and
in
stc
dec
fs
out
fs
fldenv
jl
addb
add
or
inc
imul
and
push
sahf
leave
mov
sbb
setno
lea
shll
or
ss
xchg
jmp
adc
cmpsl
xchg
sbb
dec
rcrl
push
sbb
lods
loope
mov
dec
das
or
stc
inc
cwtl
sbb
dec
pop
inc
daa
outsl
jge
mov
sub
test
push
repz
inc
lds
dec
ss
push
push
and
adc
and
rcll
cmp
pusha
jg
in
je
pop
dec
int
add
mov
mov
jnp
push
mov
in
aas
push
sub
out
leave
mov
fs
and
sbb
xchg
push
aaa
xlat
xlat
in
mov
xor
xor
sbb
sahf
in
push
ficoml
sub
pop
pusha
jno
jmp
lock
rclb
or
mov
pop
out
xchg
lods
inc
loopne
mov
sub
sbb
inc
xor
adc
jb
jbe
xchg
pop
aaa
xchg
sbb
add
jmp
or
in
mov
and
inc
pop
lods
jmp
call
jnp
cmpsl
xchg
jge
movsb
mov
pushf
bound
xor
jnp
pop
sbb
mov
jl
mov
nop
jp
shrl
cli
cmp
lcall
shlb
xchg
repnz
sbb
xor
mov
cmp
sbb
sbb
sub
jne
add
sbb
imul
addr16
inc
or
testl
aas
loopne
mov
sub
push
aaa
cltd
enter
mov
adc
xchg
cmc
sub
mov
ja
outsl
jne
mov
mov
jge
adc
pop
push
mov
cld
xchg
inc
jmp
xchg
sbb
xchg
and
push
pop
mov
ret
mov
ret
gs
repnz
out
push
mov
pushf
mov
int3
pop
mov
jae
hlt
data16
scas
outsl
pop
stc
inc
and
out
jo
repnz
cli
mov
push
mov
mov
dec
xor
enter
xor
adc
mov
sub
dec
sub
gs
je
into
call
cmpsb
sbb
repz
mov
repz
stos
loopne
fldcw
imul
iret
mov
fadds
subl
popa
test
xor
roll
mov
test
mov
orb
ds
outsl
cmp
mov
sti
loopne
cmc
fnsave
xor
xchg
ret
stc
xchg
cld
xor
sahf
mov
adc
jmp
xor
and
test
mov
jno
mov
and
mov
inc
dec
aas
mov
hlt
mov
ds
cmpsb
adc
rol
cmp
cmp
pop
pop
inc
lcall
jge
sbb
adc
pop
sarb
mov
push
inc
rol
test
fcmovne
jmp
push
into
mov
lock
pop
cmc
mov
mull
pop
dec
sbb
add
sub
iret
jno
add
arpl
enter
jo
pop
mov
sbb
push
or
or
mov
sub
sahf
jl
iret
int
jbe
scas
pop
adc
adc
push
xlat
sbb
and
mov
cltd
adc
in
pop
or
add
or
ficoms
push
mov
add
pop
push
dec
insb
jbe
jns
dec
xchg
sub
ret
pusha
push
movsb
int3
xor
mov
inc
sbb
pop
mov
adc
mov
mov
inc
dec
mov
ret
insb
xor
cmc
xlat
addl
clc
cwtl
scas
subb
data16
jae
mov
data16
adc
sub
add
pop
xchg
xor
movsl
je
roll
xor
fs
mov
out
mov
jo
cmp
loope
movsl
push
pcmpeqb
sbbb
lock
and
in
ret
pusha
adcl
dec
rol
xchg
ret
pop
dec
aas
lds
or
ljmp
cld
loopne
xchg
fbstp
xor
mov
push
push
lods
jmp
in
nop
sbbl
pop
dec
mov
insl
mov
loopne
add
push
dec
aas
sub
je
insb
inc
or
fstpl
xlat
data16
fildll
push
cmp
cmpsl
addr16
jp
sbb
subl
in
fsubrl
jb
fucomip
addb
shll
adc
outsb
lret
je
dec
xchg
cmp
or
andl
out
jae
hlt
fistpll
pop
push
adc
dec
pop
mov
mov
mov
push
and
aam
xchg
cmp
add
sbb
lods
shrl
xchg
cmp
mov
or
pop
adc
loopne
mov
mov
jl
das
sbb
lock
fsubrl
adc
dec
sub
push
jmp
mov
shrb
ja
shl
inc
andl
shl
mov
push
mov
inc
mov
push
dec
mov
dec
addb
add
fs
add
xchg
xor
xchg
xchg
cmpsb
jge
shrb
jg
js
mov
movsl
push
pop
in
mov
xchg
mov
xor
hlt
fxch
push
daa
push
cmpb
jg
scas
jne
inc
push
loopne
enter
pop
mov
out
cltd
jl
push
addr16
cli
cmp
es
push
jmp
sbb
mov
push
int3
push
jnp
xor
push
add
shlb
dec
push
popf
cmc
clc
roll
outsl
cmp
mov
xor
loopne
cmpsl
jmp
jne
or
repnz
sub
dec
imul
psubw
fcmovnb
loope
stos
or
fs
std
xor
jp
sarl
sbb
add
outsl
lea
in
not
jg
ja
xor
xchg
add
cmp
inc
push
jecxz
cmp
xchg
in
lods
movups
add
into
imul
lods
outsb
mov
lods
xor
jbe
shrl
xlat
cmpsb
xchg
cmc
xor
fstl
pop
arpl
pop
and
into
iret
push
mov
xor
jge
mov
or
lret
push
xlat
insl
ss
xchg
subb
inc
jo
ret
sub
pop
daa
or
jl
lods
arpl
pop
out
hlt
mov
in
mov
xchg
lods
scas
nop
pop
lds
testb
add
or
scas
flds
push
add
or
outsl
in
sub
pop
push
cmp
add
add
mov
nop
push
push
fistpll
sbb
mov
or
jle
sbb
movsb
dec
dec
popf
cmpsl
cmp
adc
test
jns
jg
xchg
call
or
cmp
xor
imul
ret
aaa
negl
lret
lahf
fbld
lcall
cmp
addr16
out
xor
cs
dec
push
or
inc
push
push
mov
lret
xchg
mov
adc
mov
loopne
lret
mov
ljmp
xlat
cld
mov
addr16
jecxz
jnp
inc
rol
subb
jae
cmp
and
movsl
pop
test
xor
and
sub
movsl
les
mov
and
xchg
inc
lock
std
aaa
or
sahf
in
sub
sub
push
shll
aas
std
sarl
mull
addb
mov
icebp
sub
cs
out
fs
jle
jge
mov
out
xor
cwtl
push
in
std
movl
and
sbb
iret
pop
popa
cli
jmp
jno
jae
in
pop
adc
pop
out
xchg
mov
mov
or
xlat
cmp
adc
scas
adc
mov
xor
cmp
test
icebp
popa
in
sbb
xchg
notb
dec
xor
push
inc
cmp
rcll
mov
mov
adc
sti
popf
xor
scas
adc
sub
and
dec
push
ljmp
imul
subb
insl
movsl
mov
mov
pusha
inc
jmp
push
add
mov
lods
shrb
push
mov
push
test
into
and
test
xchg
mov
mov
int
add
int3
stos
adc
fucomi
test
rorl
subb
cwtl
les
or
or
cmp
outsl
xlat
xchg
inc
xchg
push
outsb
jns
jne
inc
push
mov
test
jne
call
cmp
xchg
out
pop
xchg
sbb
stos
movsb
xchg
push
xchg
sub
cmp
jmp
and
sbb
mov
inc
pop
and
add
stc
in
fisubl
xchg
cmp
mov
push
insl
adc
loope
inc
call
push
repnz
aad
sbb
and
xchg
addl
mov
jno
xchg
mov
mov
daa
jnp
xchg
ss
imul
pushf
sub
dec
loop
mov
adc
inc
in
je
and
pop
xor
out
cmc
movsl
mov
enter
inc
or
mov
daa
adc
dec
push
cmpsl
jg
fdivrl
jl
jnp
xor
add
fidivs
addb
adc
cmpsb
sub
roll
add
inc
mov
dec
loope
push
xor
es
xor
jp
lret
mov
test
push
shll
movsb
and
pop
jmp
or
stos
inc
or
adc
push
or
cmp
sbb
mov
inc
cmp
dec
dec
cltd
in
lock
js
test
jb
jmp
cmp
bound
lret
in
cmp
dec
jmp
insb
push
imul
and
leave
jb
cmp
out
cmp
lea
es
mov
dec
dec
xchg
stos
push
mov
sub
stos
jbe
test
out
daa
cmp
dec
add
popa
shrl
dec
cmpsb
adc
jns
add
xlat
jne
add
and
inc
mov
xchg
dec
imul
mov
in
jnp
clc
popf
lock
or
push
jno
push
or
fdivl
mov
ljmp
push
fcoml
out
adc
mov
inc
lar
iret
push
or
lret
mov
add
push
test
mov
lea
call
out
sub
inc
gs
addr16
cld
sub
jno
testl
and
adc
mov
in
jmp
sbb
mov
cwtl
fsubrp
push
in
add
push
ret
ror
popa
fimuls
and
xchg
fsubrs
jnp
dec
dec
inc
sub
or
scas
daa
ret
xchg
jmp
sub
push
mov
dec
jnp
sub
push
fucomi
mov
testb
fldenv
fstpt
fdivrs
push
sar
mov
xchg
aas
clc
xor
mov
out
xchg
jmp
push
fpatan
xchg
mov
jle
pop
jg
fisubl
dec
icebp
ja
xor
fsubrs
sub
stos
pop
enter
jbe
dec
mov
repnz
and
mov
pop
dec
and
test
add
dec
adc
arpl
jg
call
lods
or
xor
dec
push
push
xor
push
call
fcoms
push
jne
dec
es
lock
mov
xor
cmpsb
jo
repz
mov
pop
arpl
imul
push
movsl
mov
es
jnp
jle
fiaddl
pop
lret
inc
sti
jecxz
pop
jp
es
mov
cmc
cmp
push
stos
xchg
cmc
mov
mov
rcrl
sti
mov
sub
inc
xor
mov
mov
lahf
jmp
scas
sub
mov
filds
std
push
mov
js
pop
mov
xchg
adc
rcrb
stos
inc
je
shrb
cmp
imul
pop
dec
cmp
cmp
push
push
push
mov
mov
adc
or
call
xchg
push
mov
outsl
imul
addr16
lret
push
aam
cmp
jle
cld
ret
lock
rcll
xlat
mov
ffreep
leave
mov
xchg
ss
in
and
in
shrb
xchg
add
push
and
fmul
pop
pop
pop
pop
sahf
pop
scas
jno
insl
xchg
cmp
daa
pop
shr
ss
jl
xchg
mov
jbe
sbb
test
insb
test
push
into
lds
fwait
or
mov
lret
mov
pop
filds
mov
add
dec
nop
out
adc
ds
mov
incb
adc
xor
insb
mov
fadds
mov
adc
aam
fstl
pop
xor
das
mov
inc
mov
imulb
std
inc
add
int
jb
add
sub
mulb
mov
data16
lcall
mov
jg
mov
loope
mov
fidivl
ret
icebp
and
adc
fidivrs
rcll
test
push
fimull
ret
stos
stc
xor
push
imul
sbbb
inc
sbb
lea
aaa
add
sub
xor
fwait
daa
add
jb
lea
xor
lret
fsts
sub
dec
push
das
ret
push
or
jae
mov
mov
imul
mov
in
cltd
sbb
inc
jmp
xor
fdivr
adc
sub
push
fcoml
cld
notl
out
movsb
jno
fisubs
xor
dec
fnstsw
rorb
jecxz
shlb
dec
adc
xchg
insb
aad
mov
dec
rol
hlt
sub
xchg
or
xor
adc
movsb
cltd
jl
adc
mov
mov
shr
push
add
xor
mov
aaa
jnp
cmp
mov
out
sub
pop
jmp
mov
insl
and
incb
mov
data16
and
sbb
gs
lea
mov
cmpsb
cmc
jb
lock
lock
rorb
paddsb
xor
mov
xor
cmpsb
pop
add
add
je
xor
mov
push
jo
daa
out
lea
das
mov
or
iret
mov
push
std
sti
inc
imul
xchg
cmp
clc
in
pop
imul
dec
xchg
iret
out
and
fs
lret
cmc
push
adc
mov
out
mov
xchg
cli
sbb
out
cmp
xor
add
fsubl
mov
pop
sub
pop
inc
pop
int
cmpl
jmp
mov
jp
aas
incl
and
test
add
pop
loopne
adc
pusha
cmp
aas
cs
mov
in
pop
jnp
pop
jecxz
pop
mov
loop
xchg
adc
cmc
sub
outsb
sub
pop
nop
xchg
mov
lock
andb
mov
fmull
jo
sbb
sub
lret
loopne
out
dec
sti
lods
nop
add
sub
std
mov
ljmp
test
xor
mov
push
lret
xchg
imul
xlat
subb
dec
adc
mov
mov
movsb
jae
lret
call
lahf
jle
xchg
adc
outsl
adc
mov
test
ret
sbb
imul
hlt
jmp
imul
xchg
dec
cmp
add
jnp
div
push
jmp
mov
sbb
aaa
aas
lret
inc
or
mov
lret
fucomp
outsl
shrb
inc
jne
dec
pop
push
out
jns
push
jl
aad
sbbb
or
inc
jg
mov
lret
jg
jne
xchg
or
cltd
xchg
pcmpgtw
std
das
addr16
faddl
sbb
ficoms
dec
sahf
sbb
xchg
dec
lds
jne
notl
xchg
inc
jns
pop
sub
inc
repnz
add
jo
gs
push
mov
insl
xor
test
sub
imul
mov
lock
push
pop
sub
pusha
fwait
sub
test
call
por
inc
cmp
imul
lods
add
add
leave
add
faddl
push
jge
insb
loope
int
cmp
inc
mov
cmp
arpl
jno
dec
push
or
outsl
fcmovne
lds
cmp
xor
ja
inc
and
and
inc
cwtl
cmp
popa
mov
aam
and
pushf
cmpsb
xchg
pop
shr
mov
adc
popf
mov
cmp
out
dec
and
ficoml
cmp
scas
subl
mov
mov
push
in
push
and
ds
cmc
add
ss
xor
pop
ret
push
or
arpl
jl
jno
in
lret
lods
sbb
and
mov
dec
dec
sti
inc
push
mov
gs
push
push
clc
ret
push
dec
fldt
jge
adc
adc
xchg
push
rorb
cmpl
pusha
ret
adc
mov
mov
and
ja
cs
push
jg
cs
sbb
jne
dec
ror
ret
sub
cmp
stc
pop
test
pop
test
scas
enter
lret
inc
lock
dec
loope
movsl
rcll
or
ss
outsl
jne
add
testb
sbb
adc
cmp
sbb
jne
jo
rcll
xchg
les
jle
pop
xchg
mov
jmp
pop
shlb
jg
adc
xor
pusha
cmp
mov
push
jnp
jne
popf
jno
xchg
mov
mov
jge
gs
sub
cld
das
push
jnp
enter
xchg
ljmp
add
js
fstpl
decl
pop
aad
dec
mov
clc
adc
inc
dec
fidivl
inc
dec
sub
xlat
ljmp
aaa
lds
inc
clc
sahf
dec
xlat
add
ja
pushf
es
lcall
xor
imul
mov
or
inc
pop
in
xor
mov
xchg
jae
jecxz
dec
inc
mov
xchg
js
pop
movsl
stc
ja
ret
dec
enter
mov
sbb
stc
ja
jae
outsb
dec
pop
cmc
loope
push
pop
or
repnz
push
xor
movsl
xchg
sbb
les
sbb
inc
inc
jp
mov
adc
inc
das
and
aam
add
ficomps
jnp
xchg
int3
lret
cli
add
pusha
aas
pushf
or
loope
out
xchg
in
lcall
push
cmp
add
nop
aam
int
rcrl
lock
cmp
mov
and
test
gs
sarl
mov
negl
push
pop
cmc
sahf
sub
dec
loope
mov
ret
mov
lods
cld
dec
jae
js
dec
imulb
inc
sbb
fisubl
cmp
dec
jae
xor
xchg
lods
mov
daa
cli
mov
xor
addl
icebp
mov
mov
jae
shlb
dec
add
jp
mov
loop
mov
xor
sbb
lock
push
cmp
lds
bound
sub
and
popf
sti
cmpsl
mov
xchg
iret
mov
xor
aas
aas
iret
repz
jle
addr16
and
sbb
dec
mov
lahf
lds
and
les
jae
mov
inc
dec
ret
lret
dec
es
lock
mov
mov
addl
mov
mov
xchg
inc
scas
cmp
xor
jb
xchg
dec
mov
hlt
rcrl
rcrb
test
adc
jno
push
push
arpl
xchg
sbb
sti
jmp
test
mov
xchg
test
ds
dec
repnz
sbb
jns
push
shll
sahf
test
clc
fstpt
lsl
push
ja
push
adc
daa
add
or
cmp
sahf
mov
repnz
aas
xchg
inc
das
inc
or
xchg
lea
aad
ss
out
xor
es
dec
ret
shll
ds
mov
pop
sbb
fstpt
cmp
lock
mov
pop
fwait
push
xchg
pop
cltd
and
test
unpckhps
loope
pop
or
dec
lock
jecxz
divb
aad
xchg
cwtl
enter
das
inc
paddq
inc
std
into
jae
test
push
fldcw
ja
jle,pt
mov
add
xchg
ja
scas
gs
mov
pop
pushf
cmp
out
negb
test
imul
cmp
in
test
lock
jmp
lods
jmp
pop
div
and
je
push
sub
pop
adc
lea
int
movsb
fs
mov
data16
shll
sub
mov
lods
lahf
cmp
insl
and
or
insl
mov
xchg
call
xchg
aad
mov
stc
sub
js
sbb
push
dec
pop
push
mov
inc
cmpl
jbe
ds
fcmovbe
sub
rcrb
sbb
xorb
hlt
loop
lods
push
xchg
adc
pop
and
jmp
jmp
mov
cmp
movsb
mov
push
or
add
insb
add
push
shl
push
jbe
sub
cmpsl
adc
push
xchg
xor
jns
push
stos
ss
clc
loopne
mov
stos
jae
and
mov
adc
cs
imul
push
and
mov
aam
sti
enter
pand
adc
lcall
or
jns,pn
jno
pop
adc
xchg
push
sub
adc
or
add
and
test
dec
mov
xorb
mov
push
mov
push
push
aas
aaa
gs
addb
and
test
nop
jp
push
xor
sub
int
mov
push
fstps
addr16
in
inc
jae
adc
xchg
xchg
push
ljmp
jb
and
ss
sbb
push
push
jbe
mov
xor
sub
fdivrl
or
jecxz
arpl
into
je
xor
push
mov
pop
adc
and
inc
scas
cmc
stos
pop
xchg
in
sbb
fiadds
jg
mov
cmp
push
jne
leave
stc
shrb
jl
push
mov
out
xchg
push
sbb
outsl
nop
xor
or
adc
lcall
mov
cmc
sbb
push
lods
dec
mov
out
xchg
test
push
push
repz
lods
push
inc
imul
leave
xor
mov
xlat
push
inc
mov
lcall
push
lods
es
mov
in
mov
or
scas
notl
rorl
in
jmp
dec
test
enter
mov
cmp
pop
test
stos
test
pop
mov
mov
outsl
and
mov
mov
add
cwtl
adc
mov
push
push
dec
call
arpl
mov
xchg
mov
dec
movsb
insl
aam
add
fsubrs
enter
mov
xor
sti
sub
dec
fwait
jb
mov
test
jg
fcoms
sub
push
sbb
mov
cmp
jmp
add
mov
dec
and
and
stos
pop
jle
jmp
mov
inc
scas
or
sub
xor
daa
mov
into
mov
mov
insb
pop
sbb
loopne
orb
leave
lea
popa
nop
hlt
aaa
ds
xor
sub
adc
cmpsb
mov
pminsw
mov
and
and
int
daa
jbe
jno
iret
rcll
lret
sub
add
out
push
stos
in
jecxz
imul
test
gs
andl
rcr
adc
push
dec
add
inc
rcll
sbb
xor
and
in
cwtl
test
fdivrs
sbb
das
dec
dec
rclb
das
jg
inc
push
pop
lock
sti
pop
mov
mov
mov
sub
andb
pushf
sbb
hlt
dec
insl
int3
or
out
shlb
scas
js
fwait
adc
lods
fsts
jo
nop
lock
fmul
enter
iret
loopne
jno
rcrl
fcomps
fnsave
mov
aam
dec
imul
test
mov
stos
sub
pop
iret
mov
mov
fisttpl
and
or
sbb
jno
cmp
sahf
or
hlt
xchg
inc
popf
in
push
xchg
loopne
sbb
xor
movsb
mov
imul
fwait
jmp
sbb
int3
add
pop
outsl
daa
xor
mov
mov
pop
loop
mov
scas
jb
jno
test
ret
idivb
sbb
pop
or
or
sub
cmp
fwait
jg
pop
gs
lea
sarb
and
xchg
mov
xchg
jo
lds
frstor
imul
mov
mov
push
pop
std
push
repnz
stc
add
lea
adc
fisubrl
dec
jbe
leave
inc
mov
push
imul
mov
loop
lods
sub
arpl
mov
jle
xchg
inc
sub
lahf
stos
mov
in
mov
stc
ljmp
push
and
je
mov
cmpb
cmp
js
dec
pop
ss
dec
bswap
mov
sarl
cld
inc
add
cmc
jb
outsl
shl
xchg
sub
pop
sbb
imul
test
add
lods
addl
sub
lcall
stc
mov
pop
int3
sbb
cltd
fimull
movsb
outsb
xchg
cmp
add
add
imul
iret
mov
movsl
xor
pop
xor
pop
jbe
sub
jae
push
inc
cmp
pop
loopne
int3
addb
mov
jb
mov
js
inc
mov
pop
divl
mov
sarb
mov
aad
imull
insl
popf
data16
mov
loope
push
mov
mov
mov
jge
addr16
pop
cmp
imul
loope
add
or
leave
sbb
hlt
adc
add
enter
jl
test
jnp
addr16
cld
lcall
lods
adc
gs
mov
sahf
mov
leave
fistpl
sbb
pop
movsl
mov
lret
sbb
jle
movsl
dec
lock
addr16
notb
cs
xor
xor
ds
mov
out
cmp
push
mov
shr
retw
adc
aaa
jge
inc
xchg
icebp
pop
or
loope
xlat
mov
ret
int3
lods
xor
xlat
in
in
loop
or
or
repz
ficoml
or
sbb
and
mov
repnz
ret
lock
jmp
pop
mov
sub
clc
in
pop
mov
sbb
lods
nop
mov
lcall
sbb
jle
rorb
push
into
pop
dec
and
addr16
lea
out
jno
xchg
add
cmp
pop
cmc
popa
rorb
stc
cmpl
cmp
and
lock
mov
jp
xlat
enter
mov
sti
sahf
sub
add
mov
cmp
push
mov
inc
aam
adc
shlb
mov
and
clc
adc
xchg
push
rcll
mov
aaa
xor
xor
cltd
cmc
jno
cli
and
inc
inc
jo
push
test
incb
clc
mov
inc
jns
aas
dec
adc
out
jno
mov
mov
ss
fnstenv
add
mov
test
dec
lods
outsl
js
hlt
xchg
cwtl
and
shll
mov
sub
sbb
outsb
pop
mov
dec
imul
adc
dec
out
sub
movb
adc
sbb
or
or
cli
mov
mov
jnp
pop
adc
sbb
dec
jns
or
addr16
loop
adc
jne
out
leave
rcr
xor
or
ds
sbb
call
dec
and
sub
clc
adc
mov
fsts
pop
pop
in
xor
inc
out
push
movsl
fisubrl
pop
mov
inc
cwtl
pop
sbb
std
ds
jge
xchg
mov
adcl
sub
mov
lcall
xor
sub
enter
inc
lds
mov
mov
fcmovbe
jle
lret
data16
call
aaa
repnz
outsl
mov
sbb
lfs
or
xor
fs
jae
push
or
outsb
subb
loop
mov
loopne
add
sti
aam
mov
cli
movsl
xor
data16
rcr
adc
mov
push
adc
add
xchg
lock
push
scas
jp
fwait
mov
inc
mov
cs
shll
pop
and
lahf
outsb
and
adc
cmp
xchg
addl
fisubrl
mov
and
cmc
and
xor
push
les
or
sbb
mov
push
sahf
fwait
jl
into
push
dec
or
fcmovnu
and
into
movsb
adc
cltd
sbb
aaa
js
add
test
ficoml
mov
cwtl
or
xor
xor
pop
loope
or
push
dec
dec
cmpb
xor
hlt
xchg
push
fisubrs
int3
dec
dec
cmpsl
jbe
mov
mov
dec
ss
imul
lock
test
jmp
sbb
adc
cld
fcom
mov
cmpsl
mov
jne
jge
test
pop
push
in
outsb
jl
pop
mov
cmp
sbb
cli
aaa
addr16
popa
enter
cmp
mov
jnp
jecxz
sub
ja
push
push
decb
or
loop
adc
xor
mov
imul
and
rolb
mov
loop
out
data16
push
loope
jmp
inc
aaa
sub
adc
bound
sub
es
push
and
jb
int3
dec
add
in
xchg
adc
pusha
mov
insl
scas
mov
xchg
lret
bound
out
mov
sti
pop
js
adc
daa
int
jg
mov
sbb
cmp
xchg
xlat
test
js
cld
mov
fldcw
push
push
movb
call
xchg
sahf
addr16
xchg
insl
scas
sub
dec
cmpsb
push
jb
or
ds
imul
popa
das
stc
fisubrs
push
fwait
xlat
cli
ss
arpl
dec
rcrb
hlt
insl
mov
dec
jmp
inc
pushf
fnstcw
out
jl
js
inc
pop
insb
hlt
add
jo
clc
mov
pushf
into
push
jge,pn
mov
stos
mov
jp
hlt
mov
pop
dec
outsb
repz
pusha
and
pop
mov
sbb
les
or
inc
pop
push
test
add
xchg
cld
ds
ja
pop
mov
mov
inc
xchg
jmp
mov
adc
mov
add
aad
adcl
mov
sub
aam
dec
and
rcrl
sub
cltd
dec
push
mov
adc
and
and
rclb
fwait
nop
gs
sbb
sti
jecxz
rol
ja
test
mov
outsl
add
cmpsl
js
xor
sahf
data16
movsb
lret
movsl
jo
das
xor
or
mov
rclb
sar
push
jne
add
pop
and
aas
fwait
push
mov
lahf
adc
in
xchg
jecxz
cmpsb
lcall
inc
pop
cwtl
xchg
inc
push
les
jl
call
out
xchg
xchg
sub
icebp
mov
or
in
stos
mov
fs
push
sbb
aas
dec
cmpsb
out
xchg
xor
sub
push
popa
dec
pop
cld
aaa
cmp
pop
and
mov
cmp
fcoml
adc
jno
fwait
push
int3
mov
daa
imul
push
into
mov
iret
mov
mov
dec
cs
hlt
int3
jbe
out
xchg
movl
in
add
jae
xor
out
outsl
in
add
out
fistpll
or
mov
mov
mov
cli
mov
nop
lcall
fstpl
aam
xchg
dec
xor
xchg
pop
and
inc
xor
fcom
xchg
repz
inc
in
mov
fisubrs
mov
dec
or
mov
pop
mov
or
mov
imul
fwait
shll
fsubr
loopne
mov
fdivl
add
dec
fcomps
pop
cmp
xor
lods
daa
addr16
push
lahf
mov
mov
xchg
mov
loope
mov
repnz
jnp
stos
out
pop
cmpsl
mov
fs
pushf
jp
movsb
fsubrl
ja
and
movsb
mov
xchg
int
subl
sub
lds
pop
push
push
jae
insb
adc
xchg
addr16
in
pop
movsb
outsb
sub
add
jnp
jmp
scas
imul
cmp
stc
push
outsb
cmp
ss
jg
cwtl
in
mov
lods
mov
call
test
test
daa
idiv
aas
aam
dec
subl
add
push
pop
and
pop
sbb
or
adc
and
hlt
lret
lods
cmpb
mov
mov
ja
in
cs
jmp
xor
inc
lahf
adc
sbb
les
sub
push
sbbl
cltd
out
clc
inc
adc
push
push
mov
fnstcw
outsl
mov
mov
cltd
cmc
jmp
ret
cmp
inc
push
inc
mov
xor
rolb
arpl
clc
mov
jb
mov
stos
sbb
fmuls
movsb
adc
orb
or
out
push
leave
pop
xchg
xchg
xor
inc
mov
mov
sub
in
je
and
icebp
jnp
addr16
sar
test
pop
xor
xorb
pushl
rorl
sbb
imulb
dec
or
lods
repnz
aaa
call
pop
ljmp
push
frstor
dec
cltd
fwait
pop
imul
rol
arpl
jnp
stos
ret
lcall
or
sarb
cmc
xor
push
jmp
sub
lret
fxtract
insl
js
adc
in
sub
sbb
loope
aas
bound
and
test
inc
mov
or
enter
movb
mov
or
jle
lods
das
pop
mov
call
dec
sub
sub
mov
jmp
dec
xchg
mov
or
cld
and
add
sbbb
add
jle
popa
dec
xchg
inc
and
call
inc
popf
sbb
popa
outsl
sbb
sub
rcrl
outsb
nop
push
push
pop
dec
movsl
aaa
mov
fimull
loope
dec
xchg
add
jae
out
rclb
cmp
mov
or
jo
jb
adc
mov
push
pushf
scas
xchg
pop
lods
cmpl
xchg
push
mov
jne
je
adc
mov
movsl
scas
lods
data16
mul
xchg
sbb
cmp
mov
dec
pop
fscale
pusha
xchg
push
lahf
not
jo
pop
loopne
enter
mov
xor
mov
xchg
jp
sub
or
mov
mov
dec
int
add
dec
ret
aaa
in
jmp
popl
cmp
cmpsl
sahf
mov
sbb
lods
mov
das
and
and
or
inc
mov
add
push
mov
or
xor
cli
mov
shll
movsb
popf
pop
mov
and
rclb
push
xchg
shlb
out
jae
jge
rcr
hlt
dec
dec
scas
lret
push
push
pushf
inc
outsb
mov
gs
pop
out
shll
inc
sbb
dec
or
cwtl
in
mov
loope
test
cmc
xlat
loope
into
repz
cld
jmp
es
dec
sahf
cmp
std
rcll
aas
and
adc
loop
jl
cmp
gs
jb
jecxz
in
cltd
jo
test
and
or
fs
insl
jne
fisttps
mov
push
push
cmpsl
mov
ret
push
xor
dec
inc
lahf
mov
out
bound
sub
xchg
sahf
push
repnz
out
xor
nop
shl
shl
push
xchg
fs
adc
pop
pop
hlt
ja
icebp
mov
nop
sti
cld
fld
push
mov
inc
inc
bound
loop
sub
dec
rolb
sbbb
push
loop
lea
sti
xor
or
das
mov
mov
mov
mov
imul
mov
fdivr
inc
inc
ljmp
test
mov
push
push
xchg
sarb
stos
pop
sbb
xchg
adc
mov
push
xchg
stos
stc
test
sbb
insl
inc
cmp
sahf
inc
roll
sbb
aam
mov
daa
push
push
add
xchg
fidivrl
adc
xor
xor
mov
sbb
cmp
fs
aad
std
inc
mov
adc
pop
jecxz
popa
pop
or
mov
lret
pop
pop
loopne
jno
fwait
jecxz
loope
test
iret
gs
mov
rcl
adc
mov
in
xchg
das
cli
shlb
out
addl
jp
adc
mov
cwtl
ret
cmpsl
jnp
lea
fcompl
jnp
repz
das
cmpsb
sbb
adc
aad
mov
xchg
or
in
add
fsubrl
ljmp
push
call
stc
xchg
mov
cwtl
fmull
or
shl
mov
xor
das
cmc
or
jne
mov
cwtl
pop
rcrb
repz
xor
and
lods
je
push
subb
add
adc
xchg
test
imul
sbb
add
mov
ss
push
ljmp
aam
mov
out
push
lret
push
mov
outsb
jmp
inc
pop
lahf
outsb
loope
imul
fcmove
pop
pusha
xor
sub
xchg
fdivp
rorl
out
mov
ret
jnp
hlt
das
loop
dec
xor
pop
xchg
clc
mov
lahf
lcall
mov
sbb
repnz
mov
mov
adc
aam
fcomps
jle
sarl
inc
into
push
ljmp
testb
adc
es
das
xor
and
mov
leave
jae
jne
aas
sti
fstpl
movntq
dec
in
xchg
and
pop
insb
mov
push
cs
sbbl
jmp
inc
xchg
aas
inc
lods
xor
sbb
sub
cmpsb
mov
fwait
xchg
and
add
push
lret
mov
movsb
addb
rcrb
jmp
mov
addr16
std
shlb
push
lcall
insl
ret
test
cltd
push
xchg
xchg
jne
popf
stc
pop
pop
es
inc
add
and
or
mov
daa
shlb
aas
imul
inc
out
sbb
clc
adc
or
sbb
orl
adc
add
mov
ljmp
sbb
jl
rorl
jnp
pop
inc
xchg
gs
cmp
push
inc
sub
inc
call
dec
movsb
nop
xchg
sub
dec
sbb
or
pop
imul
xor
cmc
sbb
movsb
inc
ss
fs
enter
fisubs
xor
and
stc
push
out
fdivrl
js
pop
sbb
rorb
or
jl
nop
adc
cmp
jecxz
push
xor
mov
push
ljmp
sarb
fisubs
dec
cmovl
inc
mov
lahf
pop
adc
ljmp
jne
mov
je
sbb
fmull
sub
pop
jecxz
xor
or
and
mov
scas
inc
loope
pop
push
push
pop
xchg
fsubs
or
jno
addr16
push
push
addl
mov
xor
pop
adc
test
cmpsl
push
std
repz
xchg
dec
add
push
les
xchg
pop
mov
sbb
pop
push
js
repz
pop
push
lods
adc
out
adc
mov
jle
outsl
fisubrs
jg
std
sarb
lea
int3
xchg
add
cld
and
pop
imul
mov
js
adc
sbb
xor
xor
aas
loope
out
jge
fnstcw
push
xor
adc
cmp
jmp
fidivl
loope
mov
or
pushf
sbb
fisubrs
lock
xor
int3
inc
push
jnp
mov
and
sbb
jg
stos
cmpsb
or
sbb
cli
arpl
and
inc
outsl
int3
lods
leave
fcoml
ficompl
cmpsb
mov
mov
enter
mov
inc
call
xor
push
fdivrp
insl
dec
cli
push
stc
sbb
outsl
test
dec
daa
xchg
fcoms
out
test
inc
mov
xchg
xchg
shll
push
and
xlat
cmp
and
jecxz
dec
pushf
jle
sub
mov
dec
cmpl
stos
push
add
lods
ret
fistpl
inc
mov
dec
ret
pushf
and
mov
stc
push
xchg
sbb
cltd
mov
movsl
adc
jge
adc
fists
inc
or
xchg
in
mov
sub
inc
ss
jmp
les
out
xor
test
pushl
loope
mov
jne
jl
cltd
lret
outsl
jecxz
insl
jo
aaa
bound
add
and
jg
addr16
outsb
out
xor
les
jle
mov
cld
shll
sbb
das
inc
inc
les
dec
cs
push
js
inc
test
fwait
sti
push
cmc
ds
jl
push
cli
clc
cmpsl
je
jle
cld
ret
fs
jle
ficomps
sbb
xor
sbb
sub
or
jg
pop
mov
ds
sbb
pop
vxorps
je
jno
xor
and
sbb
lds
sub
fcoms
jl
mov
jae
mov
jg
je
mov
in
push
sarl
stc
std
jge
sar
arpl
xchg
ljmp
aaa
jo
mov
imul
sbb
jne
pop
pop
sbb
imul
out
mov
cmc
and
or
cmp
mov
pop
test
movsl
or
in
add
inc
mov
push
fimull
xchg
lds
push
mov
leave
mov
cmp
cmp
ds
lock
pop
into
iret
push
movsb
mov
fcmovne
push
add
dec
orb
xor
rolb
in
jl
leave
jl
les
jge
rdmsr
xor
dec
push
loope
add
lds
inc
ret
jle
rcrl
inc
xor
aaa
xchg
pop
pop
movsb
pop
sbb
into
insb
scas
repz
push
sub
sub
xchg
stos
fwait
push
aad
ret
popa
stc
cmp
adc
pusha
in
xor
insl
lods
xchg
push
mov
adc
aam
push
pop
nop
pop
jnp
lods
mov
jecxz
ljmp
mov
mov
ret
hlt
push
das
xor
xchg
insl
daa
adc
cmp
pop
imul
ja
das
stos
jecxz
xchg
loopne
mov
mov
or
adc
mov
out
in
or
sbb
xchg
sub
push
dec
mov
into
mov
icebp
ret
subb
pshufw
xor
shrb
aas
dec
leave
pop
roll
xchg
jg
dec
add
pusha
shrb
or
xorl
clc
pusha
stc
pop
hlt
fnstsw
mov
push
mov
imul
jno
test
outsl
cmp
jnp
xor
mov
in
scas
lret
mov
sbb
cs
test
mov
daa
fstps
mov
sub
ret
mov
cld
lret
outsl
mov
cs
mov
pop
rcl
out
push
dec
repz
fnstcw
and
dec
ret
mov
push
aas
jns
mov
cmc
sti
cwtl
jno
jbe
or
jns
fwait
mov
test
cltd
mov
fimull
push
xchg
daa
fs
mov
mov
leave
and
sbb
or
in
inc
clc
mov
sbb
xlat
lcall
add
int3
in
cmpsb
mov
mov
xchg
adcl
adc
xlat
int
jge
cmp
jnp
cmp
mov
movsl
in
xor
and
push
lret
aam
dec
enter
inc
adc
push
xor
shlb
or
cmp
and
add
nop
and
sarl
scas
leave
jb
ror
je
mov
movsb
jmp
cwtl
push
adc
fadds
push
outsl
adc
xor
data16
fistl
add
xchg
dec
lcall
hlt
inc
dec
test
rcll
xchg
add
scas
pop
int
lcall
pop
jge
pop
call
mov
add
push
mov
jmp
and
mov
dec
mov
jl
stos
lods
andb
or
in
cwtl
dec
mov
push
mov
xor
dec
cmp
stos
jno
mov
scas
stos
mov
insl
mov
iret
pushf
xor
push
xchg
xchg
jb
xlat
out
mov
adc
jns
and
out
fcoml
xchg
pop
xor
xor
inc
orl
sub
mov
xchg
icebp
fninit
sub
mov
fisubrs
jae
rclb
roll
nop
and
push
outsl
data16
fidivrs
jno
inc
fldl
mov
push
insl
sarl
jge
repz
add
cmp
sbb
lods
sbb
popa
jg
int3
sbb
icebp
lcall
enter
lahf
ds
push
add
std
mov
cmp
mov
arpl
jecxz
or
sub
xchg
mov
xchg
jmp
repz
ret
inc
ds
sub
sahf
iret
xlat
add
push
loopne
mov
pop
fdivrp
or
hlt
xchg
mov
xor
loop
jmp
mov
xor
sub
xor
mov
cltd
test
pop
aam
or
sbb
or
cmc
int
pop
cmp
int
fs
out
sahf
mov
and
pop
int
sub
dec
imul
dec
sbb
fistpll
cmp
test
nop
jge
pop
and
aaa
xor
add
mov
inc
outsl
and
and
sbb
stos
mov
fimuls
push
mov
mov
sbb
jne
pop
xlat
scas
sbb
imul
dec
movsl
push
or
mov
loop
dec
stc
lret
in
shrl
in
aam
loop
lods
mov
mov
and
jp
inc
popa
roll
push
cmpsb
jle
arpl
test
sbb
push
or
fcmovne
mov
pop
inc
fcoml
adc
pusha
das
jo
add
mov
jnp
push
mov
adc
pop
fisubl
gs
jle
add
mov
mov
mov
or
in
sbb
ss
sti
cmp
sti
lea
cmpsb
inc
pop
mov
and
pushf
jo
inc
cmp
lahf
lds
cmpsb
fisubrl
inc
pop
sbb
mov
int
cmp
jnp
cltd
pop
sti
dec
push
push
push
xlat
xor
or
cmp
xlat
insb
fsubs
jb
orl
dec
dec
jno
loopne
in
sub
lcall
arpl
mov
and
pop
xchg
pop
sub
into
xchg
or
int
loop
lds
jl
cmpsb
cmp
jo
jns
pop
mov
pusha
push
dec
int3
sub
mov
out
mov
movsb
and
mov
scas
sub
fucomi
inc
sbb
xor
xchg
and
pop
push
das
mov
mov
aaa
imul
xor
in
xor
in
push
and
xchg
into
in
es
inc
fs
jg
repnz
push
or
pop
femms
adc
and
inc
jno
insb
movsb
xchg
addr16
dec
or
popa
mov
add
cltd
or
cltd
addb
iret
shlb
sub
mov
loope
inc
out
xchg
jge
dec
pop
xor
sahf
add
xrelease
pushf
into
jmp
sbb
push
iret
call
pop
test
and
cmp
addr16
sbb
push
leave
test
cld
repnz
mov
or
fs
sub
sbb
inc
cs
imul
push
mov
arpl
aam
push
cmp
sub
xchg
push
mov
jne
stos
cli
push
mov
in
xchg
inc
and
mov
mov
sti
ret
lret
leave
jbe
dec
pushf
xchg
xchg
mov
or
mov
sbb
jle
pop
fwait
xor
add
mov
stos
sbb
pop
pop
cwtl
and
loope
orl
loope
in
ljmp
dec
out
sbb
call
xlat
dec
xor
fstpt
pop
in
xchg
fwait
mov
and
shll
inc
stc
dec
fs
push
push
sahf
adc
xor
mov
mov
movsl
int
sbb
jb
aaa
inc
out
addl
cmp
pop
out
adc
clc
lds
in
mov
sub
stos
insb
ljmp
push
xchg
cmpsl
fildll
add
imul
adc
clc
mov
out
pop
pop
xor
adc
in
xchg
aad
cli
dec
dec
arpl
imul
int3
inc
dec
stos
into
pop
push
xchg
mov
and
cmpsb
sub
out
mov
xchg
loopne
icebp
aad
imul
xor
ficoml
xchg
add
xlat
icebp
jae
cmpsb
xor
int
pop
imull
and
fldt
xor
fisttpll
mulb
xchg
lret
mov
pop
mov
aad
pop
daa
testb
int3
dec
loop
aas
stos
jmp
sbb
push
sti
inc
jle
sub
push
jb
jae
xchg
cmc
sub
jmp
push
inc
add
mulps
xor
loopne
sbb
aad
fisubs
xor
out
lahf
das
ss
das
aad
call
ret
mov
loope
push
fs
pusha
mov
mov
or
nop
sbb
cld
and
es
inc
imul
dec
cwtl
lret
xchg
shr
xchg
sub
or
xor
bswap
ret
in
ss
adc
loop,pn
flds
int3
jecxz
inc
jg
pop
fsub
gs
es
sbb
aaa
lods
cmp
andb
sub
pop
jg
dec
out
fdivrs
stos
cld
adc
mov
cli
pop
and
inc
xchg
dec
shlb
je
subl
aaa
loopne
rolb
mov
sbb
pushf
jbe
mov
ds
scas
gs
add
add
jo
popf
jns
cmp
in
out
add
inc
in
icebp
mov
push
stos
lock
stc
xchg
movw
hlt
sub
xchg
stos
cli
or
push
pop
sbb
mulb
jg
mov
popa
add
in
in
jl
mov
stos
cltd
stos
loopne
cmp
inc
pop
mov
mov
jmp
and
sub
adc
jmp
add
jne
loope
mov
sahf
cmp
dec
stos
ficompl
sub
mov
sub
les
adc
jno
cs
in
mov
xor
sub
sbb
loop
imul
mov
addr16
jo
pop
push
add
pop
pop
stos
rcrb
inc
fdiv
rcrl
aam
cmpsb
mov
xor
stos
push
scas
jnp
stos
repz
xchg
xor
sbb
add
adc
notb
call
test
faddl
mov
pop
les
lods
addr16
shll
dec
orl
js
enter
adc
push
lea
ds
subb
mov
push
sbb
mov
movl
outsl
fnstenv
jl
jl
sub
sbb
pop
icebp
add
sub
in
xlat
adc
pop
inc
jmp
xchg
xchg
dec
pop
ljmp
xchg
mov
addr16
rclb
scas
and
int
dec
aas
fwait
push
pushf
aad
popf
sbb
mov
and
mov
daa
sbb
jb
ljmp
rcrl
jns
sbb
pop
push
stos
insb
fmuls
push
mov
adc
aaa
add
mov
fimull
sub
test
cmpsl
repnz
in
lar
ss
fnop
scas
pusha
inc
mov
insb
ds
and
and
mov
sbb
or
lods
stos
mov
and
cmpsb
gs
adc
subb
sbb
mov
or
call
ret
inc
push
lret
aaa
test
ret
xor
fcoml
out
movsb
and
xchg
and
sbb
jl
pop
inc
ss
jae
or
mov
or
xchg
jp
jb
aam
cmp
mov
mov
inc
mov
mov
fidivrs
add
jmp
fsts
mov
cmp
or
ret
fdivrl
pop
dec
cmpsb
push
xor
in
cli
sar
sub
push
std
shlb
sub
inc
xor
xchg
inc
test
add
into
mov
pop
jg
mov
dec
test
xor
cwtl
data16
outsb
cmpl
and
push
pop
fildl
cld
andb
sbb
dec
inc
pop
xchg
inc
test
loop
xor
add
addl
pop
stc
shrl
mov
mov
cmpsl
and
cmp
add
mov
mov
imul
and
pop
dec
sub
stos
push
cmp
xchg
cmp
lahf
cmp
outsb
or
pop
adc
xor
push
and
lods
lret
testb
add
push
cltd
or
mov
cs
inc
out
pusha
outsb
mov
cmp
iret
in
ja
mov
add
jg
adc
stc
push
xchg
add
inc
aas
add
sahf
dec
xor
adc
and
push
ljmp
enter
cmp
mov
push
scas
lcall
ror
fmul
in
or
cmpsb
mov
fisubl
insb
pop
addl
jo
movsb
popa
popa
aas
mov
inc
bound
ja
cli
cmp
scas
add
rcrb
cmpsb
sub
in
mov
fidivrl
aam
shl
movsl
outsb
mov
js
add
hlt
clc
sbbl
iret
mov
cmpsb
lea
fwait
sub
shr
bound
call
inc
inc
jl
inc
andb
dec
lds
mov
gs
ss
lea
pushf
push
sub
repnz
adc
inc
add
xor
jmp
push
push
cmp
cmpsb
xor
iret
pop
repz
in
pop
stos
pop
mov
fsts
sbb
and
jmp
int
test
sub
pop
daa
mov
int
in
std
add
xchg
cmp
divl
sub
cmp
or
into
adcl
or
jp
std
xchg
dec
mov
sbb
aaa
je
mov
pop
pusha
mov
jp
xchg
mov
xchg
aad
or
sbb
stos
mov
and
sub
loop
ja
cltd
loop
xchg
xchg
lods
push
out
jae
or
inc
sbb
or
sbb
fsubrs
stos
int3
ret
mov
lret
cltd
cld
push
popa
arpl
add
mov
mov
ret
hlt
fcoms
lea
mov
insb
fildl
sub
imulb
cmpsl
loopne
fstpl
push
repnz
mov
aad
sub
cltd
fidivl
enter
popa
cmpsl
testl
mov
fistpll
jl
ret
mov
sbb
jmp
mov
sbb
add
insb
push
rolb
xchg
mull
pop
push
push
bound
test
lcall
mov
insl
sub
movsl
in
xchg
ret
cwtl
out
adc
ret
pop
out
adc
xchg
cmp
push
jle
adc
xor
push
dec
test
pop
ja
insl
sar
cltd
shlb
pop
cmpxchg
scas
push
scas
xchg
imul
pop
shl
jge
enter
xchg
icebp
jl
ret
push
mov
xchg
test
xchg
jb
scas
in
sub
bound
dec
call
cmovg
popf
push
dec
cli
shr
jno
loopne
sbb
xor
jge
jae
loope
or
sbb
cmp
addb
xchg
es
outsb
cmpl
hlt
test
or
pop
popa
enter
in
mov
push
in
and
sti
clc
stos
sbb
dec
mov
adc
mov
leave
dec
bswap
or
loop
in
scas
mov
fdivrs
add
mov
fs
cmp
popf
adc
sbb
sub
sub
in
jb
out
jmp
mov
loope
repz
repnz
aam
leave
int
inc
lock
int
mov
push
jg
sahf
mov
idivb
mov
sarb
stc
mov
add
xor
outsb
ljmp
push
ret
mov
in
lcall
cld
sbb
mov
pop
sbb
inc
clc
push
dec
les
pop
pop
pop
loopne
movsb
xor
not
jle
cmpsb
outsl
or
test
lahf
test
xor
insl
inc
mov
and
lret
out
sti
xchg
std
sub
ret
and
lods
popf
and
cmp
cld
push
andl
ljmp
push
xchg
aas
xchg
clc
sub
std
inc
jp
xchg
lret
cs
icebp
sub
dec
xchg
fisttps
push
and
lcall
inc
imul
enter
ret
fs
xor
pusha
jns
outsl
shll
jno
push
jle
jns
lea
push
mull
movb
repnz
sbb
mov
repz
je
and
lock
lods
daa
ret
ret
orl
in
roll
add
sbb
test
ss
mov
stos
and
rorb
push
mov
ficompl
mov
arpl
adc
cltd
and
dec
fldl2e
movsl
idivl
push
jnp
jmp
addr16
xor
test
decb
aad
jmp
mov
stos
insb
subl
loopne
add
cmp
push
imul
xchg
stc
std
lods
push
mov
out
outsl
jle
push
in
fld
mov
pop
shrb
scas
out
push
in
ljmp
adc
sbb
adc
pop
sub
outsl
or
adc
es
enter
cltd
imul
mov
mov
push
jb
jo
pop
cmp
jmp
push
jmp
clc
sar
mov
test
addr16
inc
out
lods
xchg
adc
fsubrs
arpl
mov
xchg
push
negl
pop
sbb
push
xorb
lods
mov
dec
jno
pop
in
mov
test
push
xor
lds
imul
sahf
adc
lock
push
mov
dec
sub
jb
inc
lret
fsubrs
push
addr16
sbb
jae
jbe
push
add
sbb
lret
sar
add
icebp
push
and
adc
inc
cmp
sub
repnz
sub
dec
push
and
call
cltd
dec
sbb
mov
pop
stos
xor
adc
adc
aam
push
jmp
sti
xchg
push
inc
and
inc
cmp
mov
popf
aam
cld
sahf
jbe
or
icebp
dec
out
insl
lds
idiv
je
sub
cmp
js
call
hlt
inc
pop
lea
jne
pop
pop
adc
dec
jge
in
add
or
sbb
inc
out
xor
std
faddl
pop
iret
rclb
xchg
inc
fdivrl
stc
add
pop
mov
cli
enter
add
sti
xchg
fdivrp
mov
or
aad
out
lret
xchg
jns
adc
mov
int
lock
pop
aas
and
leave
out
call
cmp
jae
inc
add
aam
xchg
movsb
fld
imul
pop
xor
loopne
dec
dec
imul
sbb
pop
adc
lahf
call
sbb
inc
sub
je
jbe
loopne
mov
mov
adc
xor
jge
scas
iret
push
insl
sti
mov
jge
imul
xlat
cmp
sbb
cmc
imull
ljmp
jg
dec
aas
mov
adc
push
cltd
xchg
and
mov
leave
xlat
sub
pop
or
mov
fsub
ret
imul
imulb
xor
xchg
inc
push
mov
inc
sub
inc
test
int3
xchg
dec
call
xchg
pop
xor
dec
inc
and
jnp
xor
mov
or
outsb
fimull
inc
pop
shrb
nop
and
mov
add
std
inc
mov
jne
xchg
xchg
jmp
xorl
adc
adc
jae
lock
outsl
mov
jmp
sbb
jp
dec
ss
shlb
ja
jb
push
bound
push
mov
mov
add
add
imul
push
lahf
mov
inc
sbb
ljmp
hlt
jno
jbe
out
out
outsl
out
stos
xchg
fwait
mov
inc
cmp
jo
sub
xor
pop
push
push
ljmp
ret
in
xchg
push
shl
arpl
aam
dec
loopne
add
push
out
clc
mov
dec
mov
in
or
jecxz
lock
cmc
jns
pop
mov
jge
pop
filds
fs
movsb
mov
outsl
and
jge
mov
push
out
in
jbe
stc
push
dec
dec
inc
sti
cs
xchg
sbb
xchg
aaa
and
inc
lea
test
inc
mov
dec
out
pop
cltd
sbb
xorb
je
mov
call
mov
divb
or
pop
xchg
ret
inc
leave
push
sbb
adc
jg
xor
or
out
stc
lods
jp
aaa
jo
roll
gs
out
inc
repz
imul
call
lcall
mov
addr16
sbb
rorl
cltd
scas
push
outsb
mov
jnp
cmp
jp
pop
xchg
jno
ja
adc
xchg
enter
movsl
sti
xor
ja
cmp
fwait
jns
mov
in
insb
sti
dec
lahf
jle
and
sbb
pop
and
andb
mov
fsts
sbb
mov
cmp
out
xchg
imul
shll
mov
xor
pop
jl
std
dec
mov
dec
leave
pushf
and
xchg
int
mov
adc
sahf
movsb
jl
cmp
loop
push
pop
fiadds
adc
add
in
dec
fwait
xchg
cli
add
popf
cmpsl
das
xchg
jbe
mov
mov
push
xor
stc
loopne
and
inc
ds
jb
push
dec
gs
imul
dec
xchg
scas
stos
lret
dec
xor
adc
ljmp
add
cmp
fistpl
test
cmp
sarl
adc
push
out
or
pop
popf
xor
pop
jne
rcll
lds
mov
xchg
push
inc
je
arpl
mov
lcall
and
sub
cmp
xlat
fstps
into
jae
je
push
pop
jg
and
adc
push
sub
add
sarl
enter
mov
pushl
jne
jge
bound
movsb
lret
mov
pop
dec
lock
jns
cmp
ret
xchg
cmp
or
stos
lods
insl
clc
mov
roll
test
add
test
test
or
scas
pmullw
mov
adc
pop
pop
mov
out
cmpsb
adc
imul
cwtl
ljmp
jno
loope
bound
arpl
lds
xor
or
xor
pop
sub
jae
iret
add
shrl
sbb
add
mov
lods
sub
push
mov
push
mov
stos
push
lds
sub
mov
outsb
push
jmp
push
movlps
mov
inc
loop
lods
pusha
xlat
pop
mov
add
pop
ss
mov
stos
lds
jbe
or
aam
shlb
jbe
fbld
mov
maxps
push
fmulp
push
mov
pop
adc
add
fsubs
sbb
jle
sbb
cmp
sbb
sar
mov
ljmp
fwait
out
or
fiaddl
or
mov
sbb
clc
xchg
add
bound
cmp
scas
mov
and
sub
cli
es
mov
and
xchg
ret
in
jo
sub
sarb
mov
cwtl
xor
sub
out
adc
leavew
cmp
pop
inc
repz
repz
push
mov
jne
or
das
or
scas
xchg
repnz
jecxz
pop
jl
fdivrs
movsb
std
mov
hlt
add
aas
push
fistpll
cmp
sbb
push
cmp
icebp
xchg
add
pop
fnsave
jmp
mov
pop
dec
cmp
jmp
cmp
lret
mov
fwait
pop
enter
lret
push
ret
pop
pushf
cmc
xor
imul
push
mov
rcrl
les
cmc
ret
cwtl
cmp
or
push
stc
inc
fimuls
cs
pop
out
jmp
int3
xchg
fistl
out
jmp
in
mov
mov
dec
dec
xchg
int3
repz
ss
jecxz
scas
mov
add
fsubrp
dec
fucom
popf
lret
push
dec
push
fldl
cmp
into
aas
dec
dec
sbb
es
mov
xchg
mov
dec
insl
pop
jge
fsubrs
test
pop
xchg
mov
mov
call
sbb
shlb
shll
push
cwtl
xor
jb
add
mov
test
std
insl
cmpb
popa
cmp
sbb
pop
adc
dec
cmpps
in
xchg
lcall
cli
or
fwait
pop
stc
or
loope
enter
out
das
syscall
scas
adcl
inc
or
jb
xchg
out
rol
mov
lret
mov
cli
mov
fdivrl
int
lock
fidivrs
and
or
jp
sbb
ds
pop
in
or
xchg
push
scas
cmp
aas
push
out
outsl
fidivrs
insb
jo
inc
test
dec
insb
mov
jg
adc
shl
jmp
adc
mov
int
jmp
mov
mov
clc
sub
xlat
cld
orl
push
sarl
push
xor
mov
orl
sbb
out
cmp
cld
or
in
dec
lock
push
adc
fcompl
hlt
add
rcrb
xlat
or
xor
into
adc
sti
or
leave
and
jns
js
push
cs
lret
jns
mov
andb
sti
jp
ret
aas
pop
test
add
dec
mov
add
xchg
negl
pop
shlb
pushf
xorl
xorb
push
add
sbb
or
mov
movsl
clc
hlt
mov
in
jae
mov
sti
std
and
sub
ljmp
test
ljmp
inc
out
pop
pop
icebp
sbb
cmpsb
and
shlb
cmp
push
mov
push
inc
mov
push
inc
rol
cmp
movsb
repz
test
nop
stos
std
push
addr16
test
out
mov
mov
imul
outsb
push
lods
cmp
jbe
stos
inc
fldenv
xor
dec
jne
idiv
sub
push
cmc
sti
mov
lcall
add
xor
jg
loop
push
sti
push
add
popa
pop
sbbl
mov
popf
add
fcomp
sbb
ret
pop
xchg
sbb
fiaddl
pop
and
cli
cld
mov
adc
das
jae
scas
xor
or
adc
insl
dec
sub
inc
push
add
out
or
xchg
fisubrl
bound
cmpsb
in
jno
les
andb
jb
mov
insl
add
mov
push
jge
iret
xchg
add
sbb
mov
mov
pop
xchg
negb
lds
rcrb
push
or
push
jp
jo
jp
sbb
lahf
mov
push
shlb
cld
jne
cmp
out
sbb
xchg
jmp
pop
mov
cmp
nop
cmc
fimull
clc
repnz
dec
xchg
xor
add
mov
mov
out
inc
sbb
xor
push
cwtl
rcl
je
pop
loop
inc
ja
loopne
js
in
lods
mov
hlt
fst
leave
js
push
cmp
lock
xor
jmp
fcomp
pop
sub
cmp
mov
cmpsl
addr16
add
mov
in
or
and
ljmp
mov
test
mov
outsb
or
push
dec
jnp
and
pop
lahf
loopne
xor
sbb
mov
mov
hlt
sbb
fwait
add
andl
aam
lcall
push
dec
add
divb
pop
xor
mov
cmp
push
inc
xor
or
dec
aad
and
pop
stos
out
pop
roll
and
mov
inc
mov
leave
imul
shlb
pop
es
cltd
mov
arpl
daa
in
rcpps
add
mov
popf
jno
push
insl
stos
xlat
inc
mov
mov
orb
cs
mov
fmuls
cwtl
imul
push
mov
xor
or
rcll
push
cmp
divb
adc
and
das
mov
and
les
cmc
xorl
sub
in
mov
xor
or
or
xchg
cmpsb
push
push
pop
out
in
lds
add
std
and
std
jmp
leave
sbb
rcrl
push
aad
arpl
shl
pop
inc
lods
lods
ror
mov
dec
push
fildll
loope
imul
sahf
es
mov
jbe
xor
mov
pop
lret
jb
push
test
pop
ret
ret
sbb
aas
cmpsb
mov
mov
mov
pop
in
pop
cwtl
push
add
sbb
inc
push
out
inc
lock
pop
insb
cld
stos
add
jmp
and
push
mov
jnp
lahf
inc
inc
int3
jnp
sub
test
mov
iret
pop
adc
xchg
sub
inc
xor
mov
cltd
movsb
sub
aas
in
mov
cld
rcll
jae
inc
ljmp
into
incl
sbb
mov
jge
fbld
outsl
pop
and
and
icebp
jl
fidivrs
cmp
sub
adc
int
addl
in
lret
cltd
pop
movsl
pop
lods
test
cmp
adc
push
jg
out
jmp
mov
dec
scas
mov
int3
inc
xorl
out
nop
add
adcl
dec
mov
mov
dec
push
cmp
or
jp
pop
lea
je
js
call
mov
lock
repnz
xchg
or
push
in
daa
or
movsb
cmp
and
push
lea
loop
rcrb
mov
int3
rcrl
pop
xchg
mov
les
pop
lds
pop
mov
movsl
and
or
mov
ficoml
scas
jl
pop
adc
fs
lods
cmp
dec
mov
cltd
jmp
imul
mov
into
jp
es
aas
pop
xchg
inc
cmpsb
xchg
push
mov
cmpsl
shll
add
jbe
into
nop
mov
jbe
jg
cmpsb
cmp
in
enter
mov
push
and
js
add
mov
ljmp
test
inc
sbb
fmull
push
out
push
repz
pusha
test
adc
sbb
clc
scas
xchg
mov
inc
ret
and
push
lret
ficomps
dec
lock
mov
fidivrl
adc
out
fucomp
outsl
xor
fcmovne
adc
or
stos
jae
dec
pop
flds
iret
inc
add
mov
push
shlb
pop
int3
sub
lock
dec
jmp
or
les
into
jae
test
sahf
or
stc
insb
ljmp
adc
jns
lret
sbb
mov
leave
push
and
and
push
bound
in
xchg
dec
dec
pop
ds
stos
cmp
mov
out
call
stc
sub
ljmp
pusha
pop
lods
dec
or
insl
or
dec
push
xchg
mulb
pop
pop
xor
cmpsb
shl
cli
xchg
ljmp
jno
inc
mov
push
ds
xchg
and
insb
mov
data16
cwtl
das
shrl
jmp
dec
lret
into
mov
mov
mov
adc
mov
cld
pop
lods
xchg
lcall
movsb
sub
out
xchg
scas
jne
pop
es
mov
xchg
stos
addb
add
jmp
test
lea
test
js
and
jle
imul
test
xchg
push
fmull
popa
or
jb
sbb
ss
popa
xor
pop
out
cmc
push
xor
mov
pop
adc
mov
and
in
mov
xchg
rorl
scas
mov
xor
add
test
mov
adc
xchg
cwtl
call
sub
xorb
dec
ret
cld
aad
push
test
jecxz
adc
lahf
push
stc
xor
xor
or
pusha
addr16
sub
xlat
cmpb
or
jns
push
cmp
popf
lret
cmp
xor
push
jnp
ja
adc
imul
cli
ja
push
inc
jnp
pop
orb
dec
xchg
and
xor
in
je
pop
xor
mov
in
nop
test
out
pop
out
fildl
test
mov
int3
push
mov
jns
sbb
add
fdivs
jne
fcomps
flds
jne
ret
mov
out
or
int3
and
fstl
pop
mov
mov
cmp
cwtl
push
xor
add
imul
addl
dec
fcmovne
cltd
add
test
in
mov
int3
dec
jp
or
mov
orb
gs
cmp
movsl
fcomip
cmp
xchg
inc
and
cs
push
ret
jge
mov
insb
in
add
mov
mov
divl
jg
inc
xchg
cs
push
cmp
jbe
mov
lds
xor
mov
shll
outsb
dec
aad
js
xchg
nop
decl
fstpl
orl
add
test
pop
fidivrl
mov
pop
setnp
test
ror
xor
adc
addr16
mov
mov
cmp
or
insl
and
cmpsl
pop
push
sub
mov
add
fildl
mov
loopne
test
pop
adc
pusha
sbb
inc
dec
enter
es
or
inc
mov
enter
sub
lds
out
jg
sbbb
popf
mov
insl
xchg
push
lcall
scas
xchg
cmpsb
adc
ret
cltd
mov
jmp
mov
jne
jle
int
aad
xchg
in
inc
dec
cwtl
mov
fs
mov
ja
jns
push
inc
movsb
addr16
inc
fadds
cmpsl
xor
push
mov
popa
cmp
jne
xchg
imul
popa
insl
mov
sbb
shlb
mov
jle
hlt
mov
in
cmpsb
out
push
icebp
imul
inc
pop
shlb
ja
cmp
out
pop
mov
and
test
mov
sbb
popf
int3
ss
les
dec
pop
rol
inc
push
shrl
cmp
test
cmp
xor
arpl
mov
lret
loop
fldt
hlt
cmp
aas
out
inc
dec
mov
push
lret
shlb
or
xchg
cmc
repz
push
mov
mov
sbb
push
xor
xor
aas
ja
rcrb
bound
mov
cmpsb
dec
js
out
lcall
scas
sarb
iret
into
xor
int3
jge
enter
adc
mov
add
addr16
adc
xor
es
xchg
mov
lods
adc
cld
jecxz
inc
pop
aaa
shr
pop
and
leave
aas
jp
pop
lods
arpl
aam
mov
scas
sub
pushf
in
ret
xchg
jmp
fwait
movsl
push
icebp
fwait
push
xchg
loope
out
fsub
jae
scas
aad
fcmovne
aad
push
push
fs
xchg
das
dec
in
scas
popf
or
push
int
out
adc
cmc
push
push
inc
mov
push
sub
mov
or
hlt
lods
mov
sbb
dec
or
xchg
jp
jp
jge
shrl
rcrl
inc
cmp
ja
test
xor
push
or
fwait
adc
lods
outsl
xchg
adc
sbb
xor
scas
sbb
xor
inc
int3
jecxz
out
fistpl
xchg
fnsave
push
cmp
push
jo
mov
sbb
mov
mov
adc
test
sub
add
jnp
adc
push
or
or
out
jbe
pop
mov
fmulp
jbe
xchg
xchg
mov
xor
hlt
adc
aas
push
mov
aam
adc
movd
or
test
out
mov
inc
xchg
or
outsb
loop
jnp
out
mov
ljmp
xchg
mov
in
arpl
stos
sarl
test
sub
test
loopne
push
cmp
addr16
dec
int
in
dec
add
mov
adc
mov
stc
push
cmp
inc
ljmp
mov
cmp
out
jg
out
mov
sub
push
cmp
int3
rorb
xchg
adc
xchg
insb
popf
arpl
in
jae
int
dec
mov
adc
sahf
sub
jmp
jp
jb
dec
push
push
fcmovbe
sbb
push
mov
test
cmp
cmpsb
xor
jg
mov
les
repnz
scas
ja
in
popa
clc
add
sbb
rolb
setno
int3
popa
sbb
pop
test
insl
mov
jge
push
pop
add
inc
mov
clc
fcomp
mov
lods
lods
adc
sub
inc
faddl
cs
mov
sub
cld
mov
inc
mov
out
pop
jge
or
push
stos
lcall
and
out
mov
js
push
insl
xor
sub
lahf
adc
cmp
sbb
ret
adc
and
outsl
pop
enter
repnz
pusha
fidivs
lcall
iret
sbb
mov
lret
push
adc
mov
cmpsl
mov
stc
addr16
insl
jge
popa
add
lds
pop
xchg
mov
loope
pop
or
or
repz
aas
push
data16
mov
repz
mov
mov
mov
inc
adc
fs
add
negl
pusha
mov
push
aas
push
subl
adc
lcall
adc
jecxz
xchg
les
roll
mov
ja
leave
insb
cmp
xchg
push
jb
jmp
es
icebp
scas
jb
pop
lea
inc
mov
cmpsl
xchg
daa
push
rcrb
xchg
pop
sub
fiaddl
xlat
xchg
cld
pushf
out
mov
clts
movl
lock
mov
mov
repz
lock
and
shrb
fs
cmpsb
fsubr
push
cwtl
cmp
jae
and
add
inc
inc
pop
jge
jb
adc
cmp
pushf
and
add
sub
repz
jnp
cmp
or
inc
adc
ja
push
adc
push
fsubrl
rorb
xchg
inc
jns,pn
pop
mov
pop
popf
and
or
aad
sub
or
stos
int
mov
xor
mov
loopne
sarb
and
adc
pop
push
jp
sub
xchg
jo
push
repnz
leave
dec
mov
adc
in
push
mov
xor
adc
jecxz
test
sbb
lds
mov
shrl
repnz
incl
adcl
jnp
repz
loop
add
dec
inc
pop
cmp
and
aas
jp
shlb
mov
inc
mov
pop
xchg
negl
lcall
outsb
xchg
pop
sbb
cmp
lds
adc
jl
adc
xchg
fdivrs
pop
jae
js
popa
sbb
dec
cmpsl
je
pop
loop
push
xor
pop
lret
jnp
pop
lods
and
int
dec
xchg
call
stc
stos
mov
xor
test
mulb
jb
mov
subb
fisttps
lahf
cmp
pop
sahf
add
jmp
sar
pusha
xor
cmpsb
sbb
xor
fsubs
cmp
ficomps
fcmovnu
movsb
call
or
dec
sti
adc
imul
sub
loope
cs
add
stos
push
arpl
ss
pushf
call
in
inc
xchg
inc
dec
addr16
inc
mov
dec
les
cli
dec
fcoms
vpsubb
inc
addr16
jge
push
pop
cmp
movsl
pop
sbb
push
pushf
js
dec
ret
mov
push
mov
xchg
nop
test
mov
dec
lds
mov
mov
in
add
mov
lret
fisubrl
sbb
ja
cmp
cmp
and
jmp
or
sub
push
cld
sti
bound
cmpsb
fmuls
cltd
add
xchg
mov
test
xlat
shl
les
stos
xchg
stos
aam
fsubl
shlb
shr
rcl
andl
repnz
dec
popa
adc
pop
pop
push
out
ficoms
test
dec
xchg
adc
pop
lock
cld
movsb
push
bound
std
pop
and
and
push
mov
dec
in
add
cltd
aad
mov
mov
or
fsts
or
and
adc
cld
and
fucomp
cmpsb
mov
lds
inc
mov
and
push
cwtl
push
dec
loopne
scas
add
inc
jbe
xchg
movsb
popf
addr16
jl
inc
jp
arpl
xlat
loop
in
scas
adc
iret
add
imulb
and
movsl
jo
int
jle
lock
das
stos
mov
loopne
dec
aam
enter
jno
scas
jae
sbb
fsubl
in
mov
inc
or
mov
pop
arpl
mov
dec
andb
lods
pop
fbstp
sub
fistl
jmp
enter
stos
cli
in
data16
push
iret
js
scas
xchg
dec
pop
push
mov
ror
mov
xor
sahf
mov
mov
call
in
xor
mov
mov
jne
lock
sbb
lods
inc
test
sub
mov
ret
int3
shll
mov
lods
ret
out
xchg
mov
mov
out
pop
jns
repz
adcl
outsb
jo
out
mov
push
rorl
inc
push
sub
cmp
mov
sub
and
mov
stos
lcall
test
dec
jp
sbbl
clc
or
fs
or
jb
inc
nop
fs
sbbl
dec
ja
jns
adcl
rcrb
or
sub
pusha
jns
ret
cmp
ficoms
xchg
outsb
lahf
dec
das
xor
inc
mov
rorb
cmp
lahf
mov
fiadds
sahf
sub
addr16
sub
popl
cmpsb
hlt
shl
loope
add
push
arpl
inc
lahf
xchg
push
cmc
xor
pop
xor
imul
js
jecxz
mov
mov
xchg
push
outsl
and
sarl
jbe
xlat
xor
mov
mov
pop
lret
add
in
roll
or
push
daa
imulb
jnp
sbb
mov
xor
fdivl
andl
jno
imul
pop
mov
out
inc
inc
ja
fdivrl
cmp
xor
adc
add
pop
dec
inc
enter
stos
or
or
jns
mov
and
data16
pop
or
call
stc
pop
mov
addl
adc
jg
push
enter
xor
flds
inc
iret
dec
je
xchg
jmp
add
xchg
loop
ret
inc
test
mov
hlt
pop
pop
inc
aad
dec
and
jl
popf
and
inc
add
cwtl
divl
and
cmp
ja
mov
mov
pop
or
jecxz
or
into
sub
dec
fisubrs
mov
sbb
and
xor
xor
mov
hlt
adc
adc
iret
movsl
mov
pop
adcl
add
stc
adcl
sbb
cmpsb
hlt
and
dec
outsl
xor
push
adc
aas
jno
lods
sbb
adc
lock
dec
add
push
inc
dec
rorb
pop
lret
mov
and
movsb
jecxz
xor
cmp
xor
inc
and
or
mov
outsl
xchg
mov
lret
stc
iret
fistpl
mov
ret
fldl
mov
cmp
add
aas
imul
jp
push
out
gs
ret
loope
lods
loope
icebp
popf
mov
jnp
adc
adc
fmuls
xor
jns
loop
idivb
aas
push
ljmp
mov
pop
je
xor
or
mov
push
xor
cmp
push
mov
mov
add
or
lea
sub
je
jne
cs
cmp
imul
in
add
loop
call
push
and
add
xor
jp
jbe
es
and
aas
lods
in
movsl
add
lcall
jge
icebp
dec
sarb
jl
jmp
sbb
std
jne
pop
in
xchg
xchg
add
jb
stos
dec
adc
mov
sub
movsb
sbb
jnp
popa
cmp
faddl
ret
scas
mov
pop
aad
scas
push
sub
mov
jg
or
mov
lds
mov
das
cmpb
xchg
addl
cli
lcall
push
jp
mov
cli
pop
inc
mov
or
push
clc
idivb
ss
xor
aam
ror
push
js
lret
daa
in
loope
in
cmp
in
add
lock
add
in
sbb
sbb
sbb
push
out
lahf
pop
cmp
aas
bound
jl
adc
sbb
arpl
lret
fsubrl
push
mov
stos
mov
rsm
pop
scas
loope
sti
adc
jae
mov
fcoml
je
adc
addr16
movsl
lock
rorl
push
mov
insb
pop
adc
xchg
loop
sbb
jl
mov
push
push
xor
mov
icebp
pop
lret
stc
sbb
jo
arpl
or
lahf
jmp
cmp
pusha
popa
inc
mov
sub
mov
icebp
int
pop
clc
mov
sahf
pop
std
adc
mov
addl
stos
sbb
mov
popl
xlat
cltd
mov
adc
icebp
outsl
movsl
jmp
add
mov
mov
imul
adc
mov
idivb
xor
daa
or
fstl
pop
push
cld
mov
jl
jmp
inc
mov
push
fs
dec
cld
rolb
rorb
adc
or
pop
inc
jno
ljmp
testb
xchg
lods
daa
mov
sbb
imul
call
aas
push
aaa
pop
mov
scas
cmp
call
adc
or
xchg
out
inc
xor
call
pop
jge
pushf
mov
and
add
es
decb
out
loop
lock
xor
xchg
push
movsb
jl
xor
scas
notl
push
and
cltd
cmp
xor
cmp
not
jmp
jae
push
pop
icebp
shrb
dec
adc
cmc
adc
dec
rep
jle
adc
hlt
hlt
push
repnz
jp
sub
leave
cli
cmp
imul
dec
mull
pop
loope
hlt
nop
pop
inc
push
or
out
ret
ficompl
call
push
mov
rol
dec
in
inc
negl
hlt
pushf
or
jno
xchg
jg
sbb
dec
clc
rcrl
sarl
testl
das
nop
xchg
imul
ret
pop
xchg
bound
dec
clc
add
das
mov
or
dec
pop
mov
push
cmpb
xor
les
mov
cwtl
xchg
or
sahf
cmpsb
cmpsb
mov
mov
and
push
sub
shl
jl
pusha
inc
addb
outsl
test
mov
jb
adc
jb
sub
call
sub
sbb
test
aad
sahf
or
mov
js
popf
push
dec
fldt
push
loop
and
ja
cmpsl
in
imul
insl
mov
mov
adc
sbb
mov
das
pop
xchg
adcl
and
mov
insb
push
mov
mov
mov
push
xlat
leave
imul
mov
ljmp
push
gs
popa
mov
repz
push
cltd
popa
fistpl
outsl
mov
insb
mov
mov
mov
lds
addps
sub
scas
push
lret
movsb
sbb
pop
pusha
lcall
stos
add
mov
loop
cld
mov
jo
or
lea
loope
dec
ret
jae
rol
fisubl
jmp
lods
aaa
test
pminub
outsb
sub
mov
cmp
adc
test
ficompl
fiadds
jle
mov
aaa
xchg
sub
hlt
mov
loope
gs
pop
dec
cli
shrb
sbb
ret
sbb
adc
movsl
into
mov
daa
push
jl
fidivs
push
mov
jmp
fs
mov
sbb
lds
das
cmp
or
js
popl
and
enter
xchg
or
pop
add
test
add
das
mov
dec
xor
mov
cmp
pop
inc
adc
stos
lret
das
or
shrb
dec
enter
jmp
clc
das
shlb
adc
push
adc
cmp
scas
lock
cli
inc
sub
inc
ficoms
dec
jle
fldenv
cwtl
aad
add
fldenv
scas
call
loop
jnp
dec
pop
add
adc
cmp
mov
jnp
adc
adc
xchg
call
lret
xor
fildll
adc
jb
je
repz
xchg
in
xor
dec
xor
inc
sub
push
or
pusha
mov
fs
cmp
mov
dec
adc
decl
cs
ja
je
mov
xor
mov
mov
repz
sbb
dec
fdivrl
lods
mov
ljmp
ja
cmc
sti
sbb
push
lods
prefetch
pop
out
inc
jg
inc
std
pushw
cmp
sbb
lahf
mov
mov
jp
aas
pop
xor
test
outsb
fneni(8087
xchg
aam
xchg
sbb
stc
jl
test
fldenv
and
roll
scas
es
push
xchg
xchg
xor
adc
jo
pop
pop
sub
insl
mov
jne
test
stos
andl
mov
jbe
cli
inc
pop
jl
mov
stos
fs
add
dec
mov
lahf
outsl
sahf
pushf
and
sub
fiaddl
out
jg
nop
mov
mov
xchg
jmp
sub
add
iret
je
or
mov
ficoms
xchg
sbb
or
dec
leave
xchg
pushf
lods
inc
lret
xchg
dec
sub
jmp
xchg
push
test
and
adc
cwtl
xchg
imul
pop
pop
mov
fwait
lcall
into
inc
push
pop
inc
fwait
gs
pop
xchg
pop
dec
cmpb
mov
ret
in
mov
dec
mov
xor
sbb
sbb
dec
add
es
les
xchg
sbb
rep
std
xchg
in
dec
nop
rorl
adc
out
dec
sti
cmp
in
mov
push
cmp
outsb
test
push
mov
subb
clc
mov
sbb
lds
lcall
mov
jno
stos
push
jmp
fsts
and
cli
sbb
mov
loop
icebp
sub
repz
pusha
gs
xchg
xchg
jge
push
insb
cld
call
xlat
imul
push
push
jbe
decb
mov
vcvtsi2sdl
mov
fcmovne
into
popf
sbb
xchg
nopl
decl
sbb
cmp
jne
inc
xchg
push
jp
mov
add
loope
pop
mov
adcb
daa
sub
mov
gs
sbb
lds
aaa
adc
lods
aas
fisttpll
push
dec
xorb
dec
adc
imul
outsb
and
ret
add
cmp
push
jns
out
stos
jmp
push
jmp
push
inc
cmp
mov
cmp
push
stos
idivb
push
loop
add
or
push
pavgb
pinsrw
lods
mov
call
outsb
mov
es
aas
jb
in
sub
lgs
lock
mov
push
ljmp
andb
lret
popa
out
xchg
xchg
inc
jb
push
dec
je
packsswb
mov
arpl
pusha
xchg
leave
jnp
inc
dec
dec
cmp
mov
shrl
add
pop
out
mov
fwait
sbb
leave
jecxz
dec
cmp
shlb
and
mov
icebp
ds
adc
sub
call
std
mov
xor
fcomps
shrb
sub
xlat
lds
iret
add
mov
or
pop
repnz
xorb
add
pop
jmp
sub
jo
cli
scas
inc
incl
lods
and
sub
inc
fwait
mov
push
bound
push
adc
inc
mov
out
scas
ss
test
lds
pop
in
int
cld
and
lea
inc
mov
pop
inc
in
jg
je
test
mov
mov
mov
mov
divb
js
jmp
rcrl
xlat
mov
and
sar
das
pop
std
sub
and
xor
loope
jp
or
lds
mov
xchg
es
aad
mov
ror
push
das
pop
fimuls
popf
movsl
dec
inc
in
stos
jb
ljmp
clc
daa
xchg
jb
mov
add
shrl
arpl
aad
lods
jecxz
aas
push
fcomp
push
inc
cmp
ljmp
xchg
arpl
repz
push
push
in
aaa
xchg
sbbl
scas
or
insb
add
pop
rorl
popf
cmpl
xchg
das
out
in
xor
cmp
std
out
fsubrp
xor
movsb
insl
loopne
gs
jge
fadds
adc
inc
cltd
adcb
sbb
sti
inc
jo
add
je
jp
les
test
add
lods
ret
movsb
sub
jg
or
shlb
lahf
pusha
mov
push
je
jge
xor
pop
mov
mov
pushf
cli
hlt
fisubl
insl
or
adc
dec
xchg
fldt
sbb
cmp
popa
sti
rcrb
mov
je
push
mov
xchg
and
ljmp
or
out
pop
mov
bound
push
push
pop
jecxz
rcl
jge
mov
add
mov
imul
push
push
inc
aam
pop
sbb
out
out
cmpl
imul
mov
in
mov
xor
scas
aaa
xchg
into
test
cmc
pop
push
dec
in
mov
dec
xchg
in
push
outsb
neg
call
cmpsb
inc
fs
ds
push
jg
sti
inc
and
xor
icebp
inc
ret
adcb
push
push
xor
cli
sbb
insl
xchg
insl
pop
jmp
xchg
pop
adc
and
xchg
lods
or
daa
andb
pushf
testl
sub
sbb
clc
das
jno,pt
xor
in
push
sarb
adc
jge
jge
lock
fisubl
lds
notb
sub
mov
cs
add
ljmp
stos
and
aad
push
daa
lods
jmp
stos
outsb
pop
sub
outsb
lds
and
cmpsb
xchg
scas
lods
rorl
pop
les
sub
cmp
outsl
mov
in
aam
test
aaa
xchg
inc
jne
xor
out
cmp
push
gs
and
sbb
and
stos
je
in
mov
lock
pushf
leave
addr16
shl
xchg
js
push
andl
lret
fldcw
rcl
enter
or
les
jl
inc
sbb
mov
insl
fisubrl
fbstp
jecxz
shll
mov
fadd
or
daa
pop
outsl
jmp
fisttps
sbb
mov
sbb
stos
lds
out
jb
xchg
mov
scas
sub
fstl
in
xchg
cmpsb
jno
dec
vpmaxub
mov
mov
mov
pop
push
adc
insb
les
js
subl
jp
xchg
xor
dec
addr16
mov
int
hlt
rcll
fst
fnstcw
cltd
leave
cmpb
cmp
jle
adc
or
into
mov
inc
leave
mov
jnp
stc
sub
mov
les
and
stc
lret
jl
inc
ljmp
dec
jno
inc
and
scas
mov
cs
cmpsl
dec
cmpsl
in
testl
cmpsl
xlat
loope
lcall
insl
add
imul
pop
int3
mulb
fiadds
daa
adc
hlt
pop
jnp
in
dec
mov
leave
int3
bound
mov
cwtl
cvtps2pd
cltd
mov
icebp
lahf
enter
ja
loopne
lds
xchg
inc
dec
loopne
jo
cmc
sub
pop
mov
roll
lds
repz
pop
dec
outsl
xor
mov
xchg
dec
dec
rclb
into
in
jmp
aas
inc
inc
xor
and
mov
cmp
sbb
push
cmp
ljmp
insl
sub
adc
les
loopne
sbb
cmc
clc
mov
and
aaa
and
in
or
fdivr
pop
stc
push
sub
cmc
shrb
adc
push
inc
loopne
cld
inc
and
push
dec
cwtl
sbb
pop
js
and
repz
loopne
lret
add
test
or
ret
insb
push
mov
pop
mov
jb
jge
ljmp
loop
add
repz
loop
pop
ret
movsb
inc
pop
sub
sbb
data16
in
inc
sub
cs
sbb
stc
movsb
and
pop
dec
lret
and
cmp
mov
adc
cmp
imul
mov
pushf
jne
lods
inc
daa
mov
xor
mov
xchg
or
sahf
enter
enter
pop
push
dec
fisttpl
cld
mov
fcmovbe
outsl
mov
mov
xor
das
mov
inc
call
xor
sahf
mov
push
cmp
call
insb
vpmuludq
inc
clc
iret
cmp
push
jmp
inc
popf
cmc
inc
loopne
pop
test
js
sub
aas
xchg
not
idivb
dec
mov
pop
mov
jns
push
xchg
cmp
jge
xor
cmp
scas
out
jmp
add
add
insb
negb
cmp
inc
xchg
call
push
sahf
jo
lods
rolb
jle
sahf
fwait
lods
sbb
mov
negl
sbb
jle
pop
daa
lret
mov
mov
push
std
jle
fistpll
or
ljmp
faddl
push
push
ficoms
iret
rcrb
outsb
xchg
sub
mulb
fdivl
mov
aad
jl
in
mov
cltd
sbb
pop
roll
in
decb
fildll
mov
clc
sub
push
mov
push
or
xchg
call
out
shll
sub
test
xor
push
insl
call
test
stos
sub
adc
in
dec
sbb
sbb
lahf
scas
js
subb
scas
clc
or
jne
cmpsb
mov
cmp
mov
push
loope
push
sub
cmp
inc
pop
pop
push
lret
xchg
imul
xchg
jge
mov
rorb
jecxz
jo
loopne
mov
inc
push
es
inc
mov
or
sbb
loopne
lods
test
das
int
xabort
pop
lock
test
jns
or
ds
aaa
xor
xchg
push
xchg
icebp
xchg
cmp
push
xor
mov
cld
mov
jmp
imul
hlt
mov
jp
fnsave
xchg
stc
outsb
test
outsl
imul
dec
dec
cli
jne
mov
cmp
outsb
fwait
push
rcrl
out
mov
adcb
and
mov
and
xor
negb
mov
xorb
xchg
sbb
cltd
fidivs
sub
push
mov
and
mov
adc
cmp
dec
jmp
lock
loopne
adc
jmp
cmp
mov
or
inc
das
add
ja
mov
or
sub
pop
cs
hlt
in
test
adc
into
xchg
adc
push
fs
sub
dec
mov
jb
mov
cmp
inc
dec
popf
adc
clc
dec
and
push
push
shlb
xor
pushf
int3
fisubl
xchg
cmpsl
iret
xorl
inc
sarl
or
out
mov
sbb
or
addr16
xorb
cmpsl
sahf
adc
in
daa
xchg
or
adc
jmp
pop
test
cmp
mov
add
push
ss
pop
rorb
mov
inc
jne
and
cmc
fnstsw
jmp
inc
lret
xor
jb
pop
push
into
clc
stos
push
xlat
xlat
ret
sbb
pop
add
stos
stos
cmp
mov
inc
xchg
mov
cmpsl
ljmp
mov
out
push
cmpsl
cld
cmp
inc
mov
xchg
adc
outsb
jle
jae
adc
and
lods
adc
les
push
jae
cmpsb
jmp
push
fiaddl
sbbb
adcl
popf
adc
rorl
popf
add
push
cmp
push
fiaddl
in
je
movsl
clc
adc
jge
jne
in
int
sub
nop
sub
adc
mov
in
push
add
sbb
push
pop
inc
mov
or
xorl
jmp
push
ret
jno
subb
cmp
out
cltd
xor
xchg
jae
add
das
push
and
mov
adc
sub
dec
orl
filds
jo
cmp
rclb
mov
push
mov
dec
stc
repnz
dec
push
rclb
test
jo
lret
sub
xor
xor
lea
test
not
sbb
xchg
mov
mov
jo
xor
cmp
mov
mov
mov
adc
jmp
mov
mov
pop
add
add
push
lret
out
cs
jmp
outsl
lret
dec
orb
bnd
sbb
shrb
sahf
clc
pop
and
mov
in
pop
arpl
push
clc
mov
pop
sti
push
jle
mov
fnstenv
xor
lcall
sbb
push
cld
pushf
shlb
aad
mov
call
pop
dec
sbb
pop
fidivs
sub
push
push
in
push
inc
jns
sub
push
mov
aad
jp
and
filds
inc
das
out
or
mov
repz
aaa
push
ret
scas
xor
xchg
pop
iret
rcrb
iret
mov
daa
inc
outsb
in
pop
lret
lret
cmpsb
pslld
inc
shlb
sub
xor
inc
xchg
pop
loopne
cmp
fucomp
repnz
add
gs
arpl
sti
pop
stos
pushf
xchg
mov
adc
inc
loop
mov
sbb
out
or
clc
mov
out
mov
inc
push
push
push
stos
xchg
jns
sahf
adc
mov
jae
dec
dec
pop
sub
mov
xchg
aaa
and
mov
sub
mov
and
xchg
add
sbb
push
lret
scas
push
fcomps
fnstenv
jae
and
fmull
xchg
cmpsl
fbld
cmp
in
jmp
fstpt
mov
ret
movsb
test
test
push
pop
xor
testb
mov
arpl
or
testb
lret
pop
mov
dec
add
mov
jno
hlt
pusha
jne
sub
sub
dec
sub
outsb
or
insb
xor
lock
mov
push
es
xchg
or
pop
mov
mov
jb
hlt
rclb
rcl
add
inc
dec
mov
pop
mov
icebp
es
rcrl
popf
jo
push
popf
inc
xchg
add
dec
sbb
es
loop
cmp
int3
pop
dec
fsin
mov
adc
sbb
call
std
mov
movsb
pop
cmpsl
or
add
xor
test
shl
icebp
cld
cmp
scas
inc
cmp
or
sub
or
popf
test
fisttpll
frstor
out
sub
push
out
inc
out
lds
mov
inc
test
push
jg
jg
test
adc
adc
insl
sub
cltd
es
mov
lock
sub
jg
inc
jno
add
or
mov
xchg
lret
inc
stc
xchg
mov
cmpsl
ret
pop
xor
insl
insl
add
ja
push
adc
xor
cmpsb
sbb
ja
mov
aaa
lret
jno
leave
jns
sub
dec
and
dec
aaa
shll
movsl
add
mov
sub
loope
je
push
dec
pusha
in
leave
loopne
ffreep
xor
pusha
addb
or
xchg
cltd
mov
cmp
iret
sbb
mov
roll
stos
mov
imul
sti
lods
shl
mov
push
in
jg
aam
xchg
jno
add
les
fildl
lret
dec
mov
jns
jmp
mov
mov
cmp
inc
lret
xor
out
js
cmp
add
pop
in
push
inc
ja
fisubrl
ljmp
push
fcmovbe
stc
jne
cmp
or
rcrb
jo
aas
pop
and
inc
mov
mov
push
adc
iret
pusha
sub
loope
imul
inc
jmp
cld
out
andb
leave
xchg
cld
dec
lods
lea
mov
add
mov
sbb
jle
insl
or
xchg
loope
test
repnz
hlt
inc
adc
popa
ja
and
dec
cld
push
out
in
fs
lds
out
insl
inc
push
fdivp
jne
adc
pushf
lahf
sbb
call
push
xchg
adc
mov
insl
xchg
mov
sbb
arpl
rorl
cs
setb
add
inc
rclb
repz
cmpsb
mov
pop
mov
cmpsl
jle
adc
pushf
push
or
loopne,pn
cmp
jmp
xchg
repnz
mov
fsubl
stc
dec
mov
sub
xchg
testb
jbe
ds
jo
fisttpll
jnp
sub
cmp
insb
xor
pop
adcl
xlat
lcall
mov
sbb
dec
mov
mov
pop
les
sahf
inc
or
andb
mov
stos
jne
shrb
dec
iret
repz
adc
into
mov
push
repnz
ret
addb
fs
movzbl
enter
lret
aad
jns
test
mov
in
cmc
xor
lds
inc
add
rcll
xor
mov
lret
gs
xchg
jns
inc
or
sbb
jns
xchg
mov
pop
xor
orb
mov
fwait
or
push
repnz
ja
cltd
insl
test
decb
pop
jl
jp
xchg
mov
cs
pop
pop
mov
in
outsb
xor
or
push
sbb
pop
fistps
aas
ret
shrb
out
fiaddl
lahf
push
pop
add
xor
pop
cmpxchg
pusha
cltd
sahf
or
nop
mov
hlt
xchg
aaa
mov
test
push
xor
neg
fsubs
jo
je
fstl
sbb
cmp
sub
rorb
sub
adc
bound
pop
or
cmp
mov
popa
mov
mov
dec
flds
jg
in
roll
rorl
pop
lret
insl
mov
dec
inc
aad
or
scas
add
fsubrp
mov
lret
pop
pop
dec
loopne
mov
test
pushf
mov
bound
mov
shll
loop
add
xor
fsubs
iret
xor
js
aaa
inc
pusha
sti
bound
and
out
fmuls
std
pop
and
lea
lock
int3
jp
sub
push
push
shlb
mulb
xor
jbe
out
stos
sbb
push
add
and
mov
ror
outsb
movsl
repnz
lret
push
dec
call
inc
cmp
cmp
imul
mov
loopne
out
cli
push
xor
addr16
pop
pop
pop
jno
pop
mov
stos
rcrb
lret
lods
or
xchg
or
test
adc
lods
pop
roll
idivb
add
cmp
outsl
notb
sbb
call
pop
arpl
lea
cmp
int
push
add
and
push
xchg
pop
fldl
dec
push
movsb
lods
add
fdivrl
jge
scas
insl
hlt
push
int3
ja
cmp
cld
inc
iret
mov
pusha
loop
das
jle
xor
notb
jp
lds
push
add
sbb
sbb
imul
mov
mov
loopne
xor
adc
repnz
ret
dec
inc
push
rcll
cmp
inc
fcmovnu
jmp
clc
and
xchg
into
xor
push
sub
sbb
mov
push
test
adc
dec
jp
push
push
xchg
cmpsl
jmp
inc
add
lds
addr16
inc
add
push
shl
mov
fisttps
jno
add
daa
or
jae
mov
idivl
lds
mov
lahf
inc
cmp
mov
cmp
jae
push
dec
jno
pop
cmc
loop
mov
pop
das
mov
cmp
mul
jle
pop
pop
dec
js
cmp
pop
mov
sbb
rcl
das
jne
shll
and
daa
xlat
in
cmp
in
add
in
push
add
daa
adc
sub
sub
mov
inc
cmp
pop
pop
orb
je
lods
cmp
mov
fiadds
in
ljmp
fwait
cmpsb
mov
xchg
add
aad
out
ficoms
mov
xlat
jl
arpl
jns
rorl
nop
cwtl
out
cwtl
aam
adc
cmpsb
iret
jne
fldt
stos
or
dec
ds
je
cmpsl
xchg
or
push
mov
mov
das
daa
mov
test
lock
fwait
jecxz
jp
out
push
shlb
pop
outsl
aad
clc
sahf
inc
aaa
outsb
dec
xchg
scas
or
push
dec
jmp
rcll
dec
dec
mov
push
shll
pushl
sub
mov
push
scas
dec
sub
xchg
jo
scas
je
andb
lods
mov
or
cmpsb
add
jle
cmp
dec
data16
lods
das
sahf
loope
sub
sbb
aas
scas
fcoms
add
mov
pop
in
jno
jge
mov
cltd
ret
sub
fisttpll
std
pop
cs
outsl
test
fwait
js
mov
mov
mov
outsb
sbb
mov
sbb
std
popa
push
ds
add
mov
push
fistpl
or
xchg
xchg
nop
adc
xchg
xlat
mov
mov
jne
test
xor
mov
and
clc
mov
fwait
sti
les
inc
sbb
imul
mov
mov
jns
sub
dec
jno
test
and
cmp
lahf
aaa
insb
lods
pop
mov
aam
sbb
mov
int
adc
andb
test
jmp
add
sahf
dec
push
nop
push
lods
and
adc
mov
jmp
sahf
mov
fbstp
inc
xchg
xchg
and
adc
xchg
xor
insl
imul
mul
dec
cli
push
or
cmpsb
adc
out
adc
and
enter
cmp
aad
jnp
cmp
and
and
mov
mov
sbb
jecxz
xor
std
jmp
aam
inc
jbe
cmp
push
mov
jmp
pop
in
lods
jno
in
jmp
and
js
add
xchg
mov
dec
fcompl
cmp
cmpsl
adc
pop
rcrl
pop
lahf
xchg
aad
cmp
mov
dec
xchg
mov
dec
enter
lea
xor
jae
outsb
data16
sbb
push
mov
sub
pop
pushl
jne
xor
sub
mov
dec
xor
inc
mov
add
push
stos
scas
test
mov
loope
inc
adc
sub
jmp
cltd
cmp
mov
jnp
hlt
dec
movsl
lahf
mov
xchg
or
sub
mov
dec
lods
loope
inc
adc
pusha
out
or
and
mov
in
aam
shll
sti
mov
cmp
popa
jle
cmp
mov
xchg
lea
imul
cs
cmp
mov
pop
clc
scas
mov
movsb
repnz
out
jl
jecxz
clc
and
xchg
pop
daa
mov
sahf
loop
xor
sbb
pop
fs
stos
pop
jb
pop
insb
jmp
mov
imul
and
lock
jae
adc
pop
jmp
bnd
push
add
and
adc
push
es
and
push
bound
or
bnd
xor
push
push
outsb
jecxz
call
orl
aaa
xchg
dec
cmp
push
cmp
pop
inc
call
test
iret
jns
cmp
sub
arpl
pop
pushf
loop
lret
aas
push
xor
fidivs
jne
mov
adc
loopne
push
call
mov
sbb
jb
sbb
gs
mov
in
add
jnp
xor
fucomip
jp
loopne
push
aad
push
jne
push
shr
inc
and
hlt
mov
push
in
mov
sbb
in
push
push
xchg
push
inc
inc
mov
rolb
cmp
fcomps
sub
movsb
pop
iret
daa
xor
pop
dec
cli
push
jp
push
stos
lret
ficoms
aaa
leave
pop
pusha
add
stos
movsl
push
hlt
jmp
xchg
loope
movsl
and
adc
dec
daa
xor
daa
mov
push
xor
neg
fbld
add
int3
scas
mov
ret
out
outsl
pop
popf
in
stos
cmp
add
pop
gs
xor
xchg
xor
les
and
in
jmp
and
pop
cmp
loopne
adc
cmp
add
mov
cwtl
setle
stc
sarb
out
pop
popa
lret
or
mov
push
jmp
xchg
faddl
dec
dec
pop
jb
adc
jb
movsb
ret
add
lock
insb
jmp
adc
daa
nop
sbb
and
ret
sarb
jl
mov
mov
repnz
cmpsb
xchg
insl
inc
sub
lret
stos
pusha
push
fists
and
mov
cld
mov
xor
and
mov
in
or
test
push
xchg
mov
in
dec
push
and
dec
pop
fdiv
and
adc
cmp
dec
or
jnp
or
mov
out
xor
insb
inc
adc
adcb
and
loopne
rclb
cmp
lea
sbb
out
jo
mov
pop
pop
pop
push
mov
int3
pop
mov
ljmp
fcoms
jno
dec
aaa
or
mov
aad
mov
std
adcb
inc
inc
and
movsl
movsb
filds
adc
fstpl
pop
pop
pop
and
mov
adc
test
cmp
into
test
adc
call
add
push
imulb
mov
mov
cmc
sbb
sbb
sbb
int3
daa
or
xor
xor
push
pushf
mov
bound
lea
addr16
pop
aad
ret
xchg
test
and
jb
insl
jp
pop
rorb
pop
mov
ljmp
dec
insl
cmp
scas
sub
xor
je
or
push
cmp
xchg
pop
fcomi
das
inc
loope
fistpl
jo
enter
addl
xor
in
or
inc
movd
shrb
push
jb
out
addr16
in
divl
sbb
xorl
fimuls
bound
cmpsl
inc
icebp
std
add
out
or
adc
and
dec
in
xchg
pop
push
jg
cmp
ss
mov
insb
push
rcll
das
pop
insb
stos
and
lods
cmp
sub
and
add
cmpsl
dec
flds
or
rclb
xlat
test
popa
cmp
dec
stos
push
js
pop
imul
mov
cmc
std
dec
insb
jle
and
xchg
push
and
mov
sbb
mov
sbb
xchg
mov
add
dec
mov
addl
sbb
xor
xchg
andl
dec
cwtl
sbb
insl
roll
dec
lds
dec
xchg
rcrl
add
rorl
lds
mov
movl
pop
lret
push
jmp
mov
ret
in
inc
jbe
and
jne
sahf
xchg
dec
or
mov
lret
lea
test
push
jno
fldl
std
pop
xor
jnp
inc
sbb
lock
adc
syscall
push
outsl
xlat
or
mov
jle
shl
fs
ret
cmpsl
jl
and
fnsave
sub
cli
out
and
sub
les
xchg
adc
push
mov
cltd
int
sub
add
push
scas
push
push
dec
mov
mov
jge
orl
and
sub
pop
or
call
outsb
lret
cmpsl
cli
mov
sub
shrb
xor
push
in
pusha
inc
adc
sbb
cmp
add
sbb
push
xchg
js
lods
icebp
loop
jmp
adc
push
adc
adc
xchg
pusha
cmp
adc
push
arpl
and
mov
sarl
mov
adc
cmp
sbb
fucomi
sub
lods
mov
push
and
and
popa
mov
out
dec
jecxz
ss
or
movsl
sub
fisubrl
jb
movsl
into
cmc
and
or
inc
jecxz
test
pop
and
fcoms
mov
mov
adcl
mov
adc
jb
mov
dec
popf
push
adc
dec
fdivrl
push
bswap
xor
ja
or
popf
jmp
clc
or
mov
les
xor
rclb
shrl
mov
mov
cmpsl
adc
jecxz
in
jns
xchg
lea
mov
xchg
rol
push
daa
cli
xor
push
frstor
cmc
movl
xor
inc
ljmp
inc
mov
fldenv
jle
popf
sbb
push
lret
inc
cs
pop
jae
sbb
mov
lret
mov
in
pop
and
sub
sub
ret
cmc
loop
scas
ja
mov
mov
popa
adc
mov
lock
cmp
mov
repz
or
jae
pusha
pushf
pop
xchg
add
ja
and
xchg
push
sbb
js
push
aaa
ja
xchg
ret
cmp
mov
ret
lahf
in
and
sub
hlt
cmp
test
xchg
push
dec
pop
jle
call
mov
call
js
cmp
mov
ja
mov
and
ret
or
sub
outsl
ja
adc
cltd
push
ja
fstl
jmp
mov
fdivp
sti
repnz
mov
mov
jle
mov
rcll
in
clc
scas
cmp
adc
sub
std
insl
sbb
jae
jp
xchg
xchg
sbb
leave
xchg
or
and
mov
cltd
push
jns
and
outsb
push
xlat
pop
cmpsb
mov
sub
jecxz
jge
fsubs
mov
mov
xor
clc
pop
inc
int3
or
icebp
es
es
loopne
adc
cltd
cmp
mov
mov
mov
mov
mov
cmp
mov
sub
neg
fisttps
adc
inc
cmp
mov
jecxz
inc
flds
cltd
xlat
stos
push
mov
shll
test
inc
dec
pusha
bnd
pop
add
hlt
repz
pop
lock
cmp
mov
out
into
mov
adc
lret
stos
push
lahf
xlat
adc
dec
jecxz
gs
xor
pusha
jl
xchg
jge
xor
xor
dec
cmp
pop
repnz
les
sbb
pop
push
mov
sbb
repz
xchg
dec
shl
sub
push
pop
mov
lea
int3
stos
es
mov
pop
mov
sbb
dec
fucomi
inc
test
adc
mov
les
fsubrl
notl
push
xor
sahf
push
ja
push
mov
in
lock
das
adc
pop
ds
iret
push
ret
frstor
test
inc
xor
push
stc
pop
leave
mov
leave
inc
mov
out
push
sbbl
cli
pop
xchg
push
in
inc
sub
outsb
xor
jo
jl
insl
cmpsl
mov
cli
loope
fwait
addr16
jg
pushl
nop
mov
xchg
jg
or
pushf
mov
movsl
es
xchg
inc
mov
mov
cmpsb
xchg
loopne
dec
fs
sahf
and
add
pop
pop
lock
jl
xchg
mov
sbb
mov
or
add
pusha
shl
aam
or
lock
js
popf
mov
adc
sub
addr16
pushf
and
pop
mov
pop
xchg
xchg
inc
add
out
lret
lods
outsb
fnstenv
push
popf
cld
sbb
inc
sbb
je
cltd
movsb
adc
rcll
mov
lods
fwait
mov
cmpsl
out
xor
dec
aaa
ret
jmp
imul
xor
bnd
mov
mov
fs
jbe
cwtl
xor
mov
sub
cmp
pop
ficomps
dec
cmp
add
mov
iret
int
ds
outsb
in
movsb
jmp
loope
jecxz
iret
jnp
mov
push
js
mov
dec
adcl
leave
lods
decl
mul
ljmp
mov
pop
outsl
and
dec
jnp
inc
mov
jge
aam
rcl
push
in
mov
clc
cmp
mov
jg
in
cmp
sarl
jl
arpl
mov
push
inc
or
jo
push
adc
sti
pop
push
iret
loop
rorl
xor
lcall
jae
jmp
or
or
push
leave
ss
adc
pop
repnz
mov
mov
rolb
xorl
mov
push
out
mov
int
or
mov
fdivp
in
push
rcrb
lock
icebp
mov
cmp
iret
and
pushl
cmp
test
je
ds
mov
in
push
jp,pt
pop
and
inc
scas
fldenv
cld
jecxz
and
aas
or
in
mov
jge
enter
push
xchg
ja
cmpsl
dec
push
repz
inc
fs
xor
lahf
push
popf
outsl
pop
lods
stos
mov
cs
lcall
or
in
loop
mov
cmpsl
mov
dec
jmp
daa
cmp
popa
xchg
pop
pop
mov
je
or
out
xchg
mov
mov
pusha
xchg
ljmp
push
test
jge
push
sbb
cmp
out
cmp
stos
mov
or
iret
or
add
jns
adc
push
xor
test
xchg
cltd
subb
mov
jp
mov
shll
je
fdivs
fstpl
loop
bound
pop
aam
inc
sub
jp
mov
js
gs
mov
and
movsl
lea
arpl
ret
xor
cmp
or
cmc
xchg
adc
push
adc
es
sub
stos
sub
icebp
inc
jge
adc
pop
sbb
jo,pt
sbb
gs
cmp
sub
sti
jp
lods
cmp
inc
jmp
mov
push
mov
xor
cmp
andl
xor
or
mov
inc
mov
bswap
sahf
insb
mov
or
pop
scas
add
int
mov
push
push
aad
add
jbe
stos
or
inc
jl
xorb
mov
cmpsl
xchg
fbstp
insl
cmp
lods
jno
dec
mov
xchg
cli
fildll
inc
mov
orl
mov
clc
stos
adcl
out
sub
popf
test
or
dec
cmp
push
fwait
xlat
fstpl
pop
fnstsw
pop
stc
scas
je
lods
mov
cmc
push
jns
mov
shlb
std
sbb
pop
and
and
adc
cld
push
or
xlat
lret
jmp
add
lea
dec
scas
sbb
jno
leave
rorl
and
push
imul
test
xorb
lds
pop
jle
xchg
subl
stc
sbb
sbb
pusha
movsl
adc
and
mov
data16
jb
mov
mov
mov
adc
mov
cltd
pop
inc
icebp
call
out
inc
repnz
out
mov
mov
arpl
pusha
jmp
lea
dec
ljmp
int3
dec
jae
fwait
jge
mov
or
out
inc
mov
mov
push
adc
insl
pop
and
in
adc
jl
mov
mov
inc
adc
inc
sti
pop
cmpsb
xchg
loope
or
push
adc
lods
pop
or
sub
lds
mov
enter
xchg
out
mov
pop
adc
outsl
lods
sbb
mov
adcl
add
or
and
ljmp
loope
push
pop
mov
pushf
adc
dec
mov
lret
fdiv
js
adc
add
jnp
mov
test
cmc
cmpb
shlb
jge
mov
iret
ret
mov
aad
hlt
push
add
imul
loope
stos
adc
rcrl
lret
xchg
cmp
mov
dec
repz
and
outsb
clc
out
xor
cmpsl
rorb
arpl
scas
cmp
cld
insl
stc
dec
nop
out
fmull
lods
xchg
mov
mov
push
xchg
jp
sub
mov
fbstp
xor
inc
inc
mov
or
test
dec
je
pusha
out
movsb
out
sub
push
mov
pop
sub
inc
dec
sahf
or
ficomps
sahf
insl
lods
fisubrl
call
dec
test
arpl
sahf
shll
mov
jge
roll
xchg
and
mull
outsb
sub
pop
out
sbb
pop
sbb
mov
mov
les
lcall
inc
cmp
sahf
and
mov
int
mov
js
sahf
stc
in
mov
adc
mov
loopne
push
stc
mov
push
xchg
jge
test
xchg
nop
mov
incl
and
dec
in
pop
ds
imul
dec
rorb
stos
addr16
inc
dec
sbb
mov
dec
sub
jmp
cmp
lret
idivb
cmp
cmp
pusha
xor
int3
cmpsl
mov
pop
xor
cmp
dec
jmp
or
mov
xor
arpl
mov
rcr
test
jae
insl
pop
cmp
loopne
stos
sub
into
adc
pop
inc
ret
sbb
nop
dec
test
movsb
fidivrs
sub
or
pop
push
daa
jne
xchg
xlat
sbb
pushf
testb
lret
lret
cmp
jo
cmpsb
jbe
int3
or
mov
inc
jmp
stos
ret
xor
das
pop
fimuls
jl
inc
xchg
add
outsb
iret
in
xor
gs
push
in
ror
adc
js
pop
fwait
adc
insb
jp
ds
sub
je
mov
pop
ss
out
lldt
jno
add
pop
xchg
mov
cli
mov
xchg
pusha
insb
imul
lcall
aas
pop
ss
push
lret
ljmp
xchg
aad
adc
fnstenv
lahf
dec
clc
lds
and
aas
cld
xchg
negl
xor
test
sahf
mov
fwait
xor
lret
ljmp
test
inc
fcomps
xchg
sub
add
xor
in
mov
mov
aam
popf
testb
add
dec
std
jb
or
fistpll
out
mov
jmp
xor
jae
sbb
jne
or
dec
dec
xor
dec
xor
push
inc
adc
js
int3
and
iret
adc
adc
jnp
subl
xchg
mov
movsb
shrb
xchg
data16
mov
movsb
and
and
adc
mov
sub
sbb
popf
cltd
push
repz
repnz
outsl
add
addr16
push
and
sub
jb
mov
sub
mov
les
xchg
dec
movsl
fcomp
or
mov
pop
adc
fmull
arpl
stc
jle
das
movsb
inc
stos
icebp
data16
test
les
or
push
cmp
fcmovb
xor
push
jecxz
push
inc
sbbl
pop
inc
scas
out
jno
pop
in
out
cmc
add
pop
sbb
xor
imul
mov
ds
dec
push
lods
out
or
aas
mov
and
das
xor
lret
inc
into
in
add
loop
sub
xchg
sbbb
pop
xchg
sbb
mov
test
mov
outsb
loop
fbld
add
scas
add
jecxz
mov
adc
pusha
in
rol
cmp
inc
shll
jg
cmc
sbb
push
or
xchg
lret
and
es
xchg
inc
adc
mov
ret
cmp
sub
add
add
and
fcmovu
testb
loopne
adc
aad
xchg
bound
insl
and
cli
out
pop
scas
iret
mov
pop
push
pop
add
sub
es
push
jecxz
test
dec
cmp
sub
jnp
fdivr
pop
jl
ja
mov
dec
push
int3
jmp
ds
arpl
inc
cmp
mov
icebp
loop
sbb
dec
je
cmpb
pop
push
jne
in
out
loop
scas
jecxz
out
cld
pop
int
pop
lods
dec
std
pop
or
or
xchg
push
sti
mov
or
jb
jmp
lahf
pop
cmc
dec
mov
scas
nop
int3
jo
cmp
loop
xchg
in
orb
fmuls
mov
fwait
jmp
mov
outsb
cmp
mov
dec
je
jbe
add
add
inc
stc
jl
xchg
mov
test
fdivp
lods
xchg
popa
xchg
rorb
jne
nop
inc
mov
rorl
ds
icebp
cmpsl
loope
out
push
xor
xchg
lahf
and
test
pop
sub
mov
cli
pop
out
pop
fsubrp
cmpsl
aas
scas
push
sbb
in
je
sbb
dec
popf
aad
mov
mov
push
fsubp
adc
push
or
imul
mov
popa
lret
push
mov
or
aas
ficoms
arpl
rolb
stos
adc
cmp
call
pop
dec
test
insb
into
jno
inc
ret
jno
jb
push
adc
mov
std
mov
jae
ja
repz
sbb
adc
add
into
mov
mov
pusha
xor
sub
cli
push
mov
sub
mov
dec
out
mov
mov
into
cmpsl
test
inc
pop
cmp
std
sub
and
out
sarl
xlat
or
cltd
sti
fsub
add
aaa
scas
into
dec
push
jl
mov
add
sqrtps
std
mov
or
mov
inc
or
fsts
hlt
lcall
gs
mov
mov
ljmp
ljmp
pop
rcrl
inc
mov
lea
repz
pop
jmp
pop
insl
lods
adc
and
stos
in
add
imul
mov
scas
cmp
mov
cmpsb
lea
lods
sub
notb
movsl
decl
ret
gs
int
out
repnz
sahf
ljmp
shrb
inc
in
mov
xchg
ja
clc
inc
mov
pop
cmp
fwait
sub
clc
mov
fwait
pop
cmp
aas
and
data16
add
push
fs
pusha
and
xchg
aam
add
jo
hlt
mov
push
nop
push
xor
loope
adc
dec
sbb
xchg
stos
repz
push
in
inc
sub
push
stos
mov
sub
inc
dec
cmpsb
push
pop
or
add
pop
xchg
pop
mov
xor
mov
cld
mov
cmp
inc
mov
mov
out
sbb
dec
add
int
mov
inc
or
xchg
push
mov
testl
mov
add
outsl
scas
rcrl
jbe
gs
cmp
testb
mov
hlt
add
lods
jo
orl
loope
lcall
and
out
jae
std
std
or
rcrb
insb
or
dec
mov
mov
jno
xor
mov
jl
sbb
pop
loope
out
mov
pop
adc
push
cmpsl
jmp
minps
mov
and
fwait
dec
out
gs
inc
jbe
enter
outsb
mov
adc
push
jno
mov
daa
aaa
shrb
in
insb
ror
stc
js
out
xor
and
addr16
out
and
rorb
add
out
xlat
xchg
mov
pusha
lods
pop
pop
bound
leave
in
sbb
test
nop
outsl
lock
scas
fmul
xor
mov
xor
xchg
jne
sti
fisubrl
jno
jae
dec
pop
je
mov
test
sub
lds
mov
lahf
and
push
andl
outsl
push
or
or
mov
jmp
add
cmpl
push
pop
inc
jmp
arpl
add
lret
sub
mov
dec
mov
sbbl
pop
add
rorb
popf
arpl
cwtl
pop
out
loope
loopne
push
push
pop
out
dec
lret
sbb
or
jl
add
clc
xor
cmpsl
int
pop
and
jbe
or
jne
mov
xchg
andb
sbb
sarb
xchg
pop
jmp
sbb
adc
pop
popa
xlat
adc
leave
mov
mov
int3
lea
sub
sub
fbstp
push
adc
and
adc
out
rcl
add
cmp
lock
fldcw
xlat
jnp
mov
lods
shll
insl
push
leave
fisubl
fs
push
jae
xor
inc
or
jno
xchg
lds
xor
add
imul
outsl
dec
jge
test
dec
adc
add
negl
mov
or
adc
pop
in
pop
add
inc
cmp
and
and
call
mov
and
sbbb
push
leave
add
movsb
pop
stc
pop
ret
fst
push
in
mov
aaa
cltd
iret
sub
adc
mov
cli
aam
dec
and
lock
enter
inc
or
mov
pop
shrb
ficompl
aad
jbe
loopne
cmpsl
mov
push
imul
jle
mov
push
loop
das
add
lds
dec
aas
scas
arpl
daa
jnp
jo
daa
testl
inc
inc
repnz
dec
add
mov
mov
pusha
loopne
lret
popf
cwtl
ss
ret
not
adc
movsb
iret
ss
pop
jg
loopne
jno
loopne
push
pushf
xor
mov
call
fldcw
push
bound
jae
add
add
jle
add
dec
jnp
insl
es
xchg
ljmp
test
dec
out
neg
fidivrl
popf
xchg
aad
pop
pop
cli
out
mov
pusha
fbld
xor
cmp
push
dec
pop
pushf
or
mov
inc
xorl
mov
jbe
jne
cmc
mov
pop
push
jg
mov
pop
push
addl
sbb
cmc
cmp
ret
push
mov
add
rol
fnsave
loope
pop
push
lock
jbe
cmp
cmp
inc
cmp
push
les
adc
test
fnsave
pop
sub
cmc
sbb
mov
jecxz
cmp
inc
lret
sub
fmuls
lock
lods
ja
fadds
mov
decl
xchg
jmp
in
add
mov
inc
xchg
data16
push
inc
outsl
sahf
popa
cmp
aas
movsb
cs
sahf
add
dec
mov
lods
fidivs
out
mov
sbb
or
fwait
push
and
shr
cmp
sahf
call
cld
add
mov
cmpsl
aam
out
loope
adc
push
push
rol
push
lcall
cmp
fcmovu
pop
mov
inc
or
push
or
push
sahf
fcmovu
lock
in
test
leave
pop
xchg
dec
bound
cmpsb
push
popa
mov
das
data16
imul
scas
add
cmp
daa
sbb
or
jp
shlb
pop
push
and
ret
insb
loop
lods
clc
xor
mov
and
push
adc
push
mov
cmp
jo
lea
addl
loopne
aaa
push
mov
arpl
es
popf
insb
out
sub
data16
jg
fistpl
push
xor
or
jnp
test
test
gs
lret
jp
in
insb
shlb
loope
loope
xchg
fbld
pop
xor
mov
xchg
hlt
xlat
fsubrs
jnp
outsl
jmp
adc
pop
adc
imul
in
add
add
xchg
add
in
shlb
lret
mov
xchg
dec
inc
pop
mov
mov
xorl
cmp
les
adc
fwait
mov
jne
pop
dec
rclb
mov
mov
fwait
lods
mov
jmp
incl
loop
or
cs
loope
out
dec
push
idivb
adc
iret
jmp
sub
fdiv
clc
dec
fwait
sub
je
push
mov
adc
push
cmc
out
mov
outsb
subl
pop
or
rclb
fdivrl
pop
pop
adc
cld
adc
pop
jnp
mov
loope
data16
movsl
pop
iret
pop
xchg
std
xchg
mov
sub
test
mov
xlat
mov
enter
and
push
pusha
add
loop
dec
mov
push
cmpsb
imul
mov
divl
cmc
jmp
sbb
mov
sbb
cmp
enter
xchg
jbe
shlb
mov
ds
inc
pop
sub
lret
xchg
mov
push
cmp
je
ret
notb
dec
push
xor
inc
lods
sbbb
pop
mov
mov
icebp
aaa
jmp
popa
mov
incl
and
repnz
cmp
insb
dec
cmp
outsb
sahf
or
push
arpl
sbb
cmp
adc
xor
xchg
mov
mov
sbb
xchg
loopne
fldenv
test
xchg
test
fnstenv
cmp
pop
dec
cmp
std
lds
pop
sbb
mov
pop
cmp
mov
in
sti
mov
cmp
adc
and
inc
es
jge
cmc
adc
mov
push
mov
jb
push
xchg
fnstcw
cli
mov
or
test
loope
cmp
or
inc
mov
dec
pushf
shlb
xor
mov
lret
lds
adc
pop
sub
adc
fmull
int
out
movsl
clc
jle
mov
xchg
ret
shl
shlb
scas
sbb
xchg
test
inc
cltd
pop
aas
push
xchg
mov
xchg
add
jge
jge
or
mov
jnp
cld
xchg
ret
incb
pop
out
add
test
test
repnz
mov
inc
mov
stos
jnp
loope
mov
mov
fnstenv
sbb
or
idiv
sti
cwtl
pop
push
test
dec
enter
add
aad
jae
pop
dec
mov
inc
or
sub
ret
add
test
sbb
ds
mov
mov
aaa
jp
xchg
jp
in
mov
lahf
out
outsl
xchg
popf
xor
mov
xor
sar
insb
cmp
sbb
inc
test
or
mov
xor
pop
sti
mov
mov
lret
or
push
mov
sub
mov
gs
adc
or
pop
xchg
hlt
pop
jp
addr16
or
push
in
pop
loop
mull
test
adc
jb
shll
fdivl
and
jb
lods
xchg
iret
test
jl
add
xchg
push
in
and
pop
pop
fsubrs
pavgw
push
jp
cli
push
or
mov
add
push
movsl
and
xchg
xchg
rorb
push
bound
mov
and
or
repnz
pushf
notl
xchg
jg
pop
sub
rcr
or
inc
jnp
push
fsubrl
jle
inc
xor
and
xlat
pop
rcl
or
mov
orl
jg
mov
sbb
jns
cmpsl
repz
outsl
push
sbb
inc
icebp
dec
or
and
sbb
cmpsb
pop
shll
jne
fimuls
jle
pop
pushl
adc
jns
or
sbb
and
inc
fcmovne
test
xchg
icebp
js
ss
pop
sub
xlat
cmp
cmp
xchg
mov
loopne
push
std
stos
ss
mov
test
stos
jmp
dec
mov
dec
shlb
cmp
cmpsb
lahf
popa
leave
mov
rorb
dec
jno
mov
push
cs
addr16
ja,pt
aad
addr16
fmuls
imul
jno
ja
push
push
push
out
mov
mov
mov
adc
jae
xor
sti
pop
repz
bound
and
cmpb
jge
scas
dec
stos
lret
push
adc
rcrl
add
push
movsl
adc
fiadds
lea
clc
dec
xor
stc
data16
ja
and
inc
movsb
push
lods
rcll
jbe
mov
repz
jle
cmc
test
cmp
out
sbb
pop
sbb
dec
dec
sub
clc
pop
add
adc
int
cmp
sub
movsl
shrl
cmpsl
sub
bound
aas
push
fstps
cmp
lds
jbe
repz
pop
mov
sahf
inc
shrl
mov
loop
shl
xchg
xchg
mov
jle
ds
imul
mov
rolb
out
sbb
cmp
sbb
jg
mov
cmc
sar
mov
adc
cmp
sub
shll
sbbl
in
div
mov
sbb
test
cltd
pop
ficomps
jae
insl
push
pop
cmpsb
sti
push
cld
in
popf
shlb
mov
mov
nop
les
sbb
fbld
test
sahf
jne
repnz
lods
mov
sbb
mov
jge
in
fs
fisttpl
or
jmp
je
stos
enter
testl
pop
fisubl
pop
mov
mov
movsb
bound
inc
leave
pop
jg
stc
xorb
je
or
mov
out
or
ja
adc
jp
jns
or
ret
jne
or
pushf
add
rol
lods
and
rcrb
sbb
dec
ret
pusha
mov
loop
repz
pop
jo
push
pusha
jg
push
cmpl
sub
orb
icebp
pop
or
in
mov
scas
and
sbb
out
sbbl
xor
leave
push
jb
lahf
mov
int3
jmp
stos
sub
fidivs
adc
mov
addl
je
and
fmull
jecxz
je
mov
inc
iret
mov
or
insb
repz
jle
mov
out
jne
fcomi
pop
roll
aaa
mov
lock
lock
insb
lret
in
jle
lods
les
jg
pop
push
mov
xchg
lahf
jb
sub
sbb
xchg
mov
cmpsl
je
cld
sub
popf
into
ret
xorl
jnp
cmp
out
bound
lahf
mov
add
outsb
jge
pushf
adc
push
sub
jb
jge
in
add
mov
push
push
pop
xchg
cmc
psraw
push
lcall
xchg
inc
fisubs
shlb
sbb
fimuls
std
insb
sub
xor
aad
ret
jb
movsl
jle
mov
sbb
or
xchg
sub
push
and
push
xlat
rorb
sub
fisubrs
call
insb
inc
aam
cmpsb
fucomp
push
pop
int3
pop
ja
pop
pop
lahf
xchg
enter
dec
xlat
push
idiv
cmp
xchg
popa
sbb
mov
dec
adc
sbb
sahf
add
and
jge
push
in
fimull
pop
loopne
add
cmp
pop
jp
pop
nop
fwait
push
cld
movsl
dec
push
clc
xor
or
add
fisubs
xchg
sti
and
addl
int3
adc
mov
lea
enter
rcl
xchg
shrb
sahf
pushl
push
popa
out
ljmp
pop
xchg
push
stos
pop
mov
mov
vmwrite
adcl
les
jmp
fs
sub
notl
or
lds
fdivrp
cwtl
addr16
and
inc
pop
and
movsb
test
in
inc
xlat
stos
xor
push
mov
sub
inc
fmull
out
aam
test
lock
sub
icebp
and
push
push
mov
fisubs
fistps
fincstp
mov
in
test
lahf
sti
jg
pop
mov
xchg
loope
stos
mov
pop
sub
rcr
arpl
cltd
lods
fisubl
lret
and
loopne
inc
aas
ret
pusha
adc
mov
sbb
in
call
jno
or
push
jns
jecxz
xchg
fstpl
cmp
lods
adc
inc
fsub
inc
callw
xchg
pop
rcrb
inc
lods
pop
movsl
cmp
mov
xchg
push
fs
aas
jae
shll
add
lds
insb
pop
sub
xorl
in
mov
mov
dec
es
sub
push
pop
outsl
lret
bound
fs
jecxz
inc
sti
pop
iret
mov
stc
push
jb
mov
xchg
pop
jo
mov
loop
cmc
ds
mov
fistps
fdivl
icebp
mov
pop
xor
lret
push
stc
adc
movsb
sahf
mov
or
dec
mov
inc
jns
mov
enter
xchg
test
push
sbb
stc
pop
in
sbb
mov
push
push
sub
jns
jno
pop
dec
scas
dec
sub
scas
sar
mov
inc
mov
fstpl
sti
test
cmpsb
lds
lods
aam
in
nop
inc
and
sub
push
push
mov
pop
mov
push
xchg
cmp
rcr
mov
dec
loop
cltd
inc
js
sbb
lds
fidivrs
cwtl
aaa
test
aam
out
movsb
adc
divl
imul
fs
mov
dec
in
roll
mov
xor
jb
icebp
xchg
inc
jnp
xchg
or
jp
mov
xchg
lahf
jl
jne
sti
jno
sbbl
xchg
js
mov
adc
adc
add
rolb
sub
inc
adcl
or
rcrb
inc
cwtl
lret
je
and
idiv
filds
adcb
data16
jo
sbb
test
shrb
xor
mov
out
mov
sar
adc
mov
pop
ret
sub
idiv
mov
ficompl
call
pushf
pop
fistl
cmp
xchg
cmpsb
jle
out
mov
add
and
mov
dec
push
ds
jl
jne
push
jmp
inc
and
iret
xorb
cmp
cltd
adc
dec
fidivrs
adc
pop
test
outsl
scas
mov
rorb
mov
mov
jae
push
or
mov
adc
push
fldcw
jp
test
cmp
les
jecxz,pn
mov
adc
adc
test
cmp
xlat
inc
pop
lret
sub
adc
cmp
push
movsl
sbb
add
fidivs
outsl
orb
adc
mov
lret
sbb
mov
pop
enter
adc
test
stos
fwait
mov
mov
loopne
mov
sub
std
orb
imul
pop
xor
rcrb
jno
xchg
lods
aad
sahf
inc
push
mov
and
xchg
sub
int
arpl
pop
inc
psllq
jnp
xor
int
les
cld
rcrl
inc
or
pop
mov
cmp
test
ret
xor
stc
jge
outsl
inc
jb
pop
and
jmp
imul
add
faddp
std
adc
addr16
gs
jmp
cli
dec
jl
pop
mov
into
test
mov
and
into
dec
stos
cltd
push
jecxz
aaa
js
push
mov
and
xor
pop
inc
out
movsl
jge
or
les
inc
sbb
cwtl
xor
je
mov
cmp
or
divb
cwtl
notl
pusha
inc
adc
inc
sub
mov
adc
movsb
pop
xchg
cmp
popl
adc
data16
push
enter
rclb
into
das
push
pop
pushf
mov
ret
push
test
pop
lcall
push
enter
or
push
test
hlt
loope
pop
dec
mov
lret
stc
frstor
xchg
pop
dec
orb
push
pop
pop
pop
push
inc
in
mov
cmp
ds
sbb
xchg
rcrb
xchg
out
and
lea
stos
dec
shll
adc
rcrl
ja
scas
mov
xor
mov
rclb
sub
pop
mov
xlat
addr16
pop
lods
andl
pop
loope
in
pop
ret
fidivl
pop
repz
adc
and
js
xorb
popa
and
dec
add
fwait
mov
je
or
inc
pop
mov
cmp
and
adc
pop
sub
or
hlt
mov
sti
lret
bound
adc
cmp
idivl
and
dec
cmp
mov
sub
divps
xor
jnp
dec
cltd
dec
inc
pop
pop
mov
xchg
add
push
icebp
pop
call
inc
movsb
nop
imul
scas
push
fstps
addr16
imul
sahf
out
mov
jne
in
into
lea
das
cmp
leave
inc
sbb
xor
out
cmpsb
adc
fcomps
test
and
outsl
cs
fbld
mov
and
xlat
mov
cmp
mov
lcall
add
test
imul
data16
ja
xchg
pusha
out
shl
push
mov
loopne
std
pop
hlt
test
in
xchg
es
or
inc
lods
mov
jl
sub
imul
popa
adc
int3
test
sub
inc
ret
out
les
popa
xlat
gs
out
lcall
xor
pop
cmp
mov
in
pop
mov
adc
cmp
insb
loope
enter
mov
and
mov
ds
pop
inc
jbe
andl
push
xor
sbb
cmp
xchg
aad
sub
mov
sub
out
cmp
jae
jg
push
mov
push
mov
mov
jg
cmp
sub
pusha
xchg
loopne
addr16
aam
cmpl
cltd
das
shlb
orb
cltd
jno
mov
filds
xchg
cmp
mov
insb
add
dec
mov
sbb
and
mov
push
jns
or
pop
sti
or
cmp
add
lea
mov
lret
gs
push
mov
out
es
xor
mov
ret
std
fimuls
sbb
ret
sbb
cld
cmp
push
les
add
fcomp
add
push
fs
adc
pop
jge
pop
mov
pushf
and
in
mov
mov
addr16
cmp
ss
cmp
jb
ret
cmpsl
and
inc
push
xor
mov
inc
mov
in
sub
adc
lret
lret
fs
jecxz
lock
add
fwait
cltd
insl
cwtl
dec
push
cmp
inc
pop
lcall
push
out
pop
fimuls
repz
scas
xchg
adc
jg
mov
push
rcrb
dec
popa
xchg
sbb
insb
out
in
pop
cld
ja
mov
push
mov
ret
mov
inc
push
fwait
jg
loop
rol
push
xchg
and
xor
pop
xchg
jl
or
cmp
push
dec
movsl
and
insb
sub
aas
hlt
mov
imul
push
sbb
dec
sub
lods
or
jnp
and
or
ds
stc
mov
sub
in
sbb
mov
jne
push
mov
sbb
pop
cmp
adc
push
push
test
xchg
pop
mov
mov
sahf
fdivrl
push
or
adc
in
xchg
daa
shll
fcmovu
or
dec
repnz
dec
jmp
pop
inc
stc
cwtl
outsl
inc
in
mov
arpl
hlt
and
or
sbb
loopne
push
bound
mov
and
rcrb
out
in
pusha
mov
mov
sbb
inc
ds
mov
clc
inc
adc
ret
jp
clc
push
mov
lret
sbb
mov
xchg
test
add
sub
inc
pop
and
mov
xchg
cmp
leave
pop
push
dec
mov
and
mov
cmpb
scas
in
fnstsw
dec
out
push
inc
push
jne
rorl
adc
mov
add
icebp
xchg
out
push
vpsraw
sbb
ja
fisttpl
dec
push
cltd
lock
push
add
mov
jne
xchg
or
mov
sbb
mov
inc
and
scas
and
stos
imul
loopne
jle
fiaddl
mov
inc
xchg
outsb
mov
lret
mov
sub
mov
pop
and
sbb
ss
and
addb
fs
xchg
or
rcrb
jp
in
subl
xchg
sbb
in
mov
jne
testl
fdivrl
jg
movsb
ret
xchg
cmpsb
aam
push
push
div
jne
fcomp
sti
lcall
test
jo
scas
scas
sahf
subb
test
add
inc
xor
add
ss
pop
mov
adc
jb
mov
lds
lea
adc
sbb
sub
cmp
jno
inc
pushf
fldenv
inc
lods
leave
ja
jl
mov
aaa
loopne
je
push
pusha
imull
fnsave
mov
cmp
popf
addl
cmp
or
je
loop
testb
sti
movsl
cmp
mov
in
rolb
rorb
xchg
movsb
fidivrl
jnp
lods
xor
jnp
test
cld
pop
xor
adc
hlt
jl
mov
sub
cmp
out
orl
mov
add
lcall
sbb
aam
or
inc
sti
dec
fsubs
in
add
jns
add
inc
jl
int3
in
dec
stos
outsb
pop
push
cli
cwtl
pushf
mov
jae
sub
insl
test
subb
add
adc
fsts
fwait
out
push
inc
cmpsl
sub
aam
mov
out
sbb
jp
sarb
sbb
xor
loop
push
test
stc
sbb
mov
arpl
test
mov
or
popf
shl
lea
repnz
into
fcmovbe
push
mull
int3
ss
insb
insl
clc
fnsave
mov
cld
dec
sbb
mov
jp
cmp
ret
cld
or
es
fwait
shlb
in
in
movl
xchg
les
and
jbe
icebp
insb
into
push
inc
mov
xorps
add
subl
fwait
xor
in
xchg
mov
jo
push
inc
icebp
imul
insl
adc
cmpsl
sbb
pop
bound
cltd
mov
js
mov
fistpl
mov
push
ljmpw
inc
sub
sahf
xor
mov
mov
sbb
out
push
dec
xor
lahf
mov
sbb
push
push
push
nop
push
data16
in
in
hlt
in
inc
and
aam
sub
mov
shll
lods
pop
cmp
xchg
mov
or
and
sbb
jns
adc
lods
inc
xchg
lret
shlb
test
and
test
or
ja
push
add
pop
inc
shrl
fidivs
subb
sbb
sbb
xor
fwait
jbe
loopne
pop
mov
xchg
sbb
add
iret
xor
fs
test
rorl
or
jecxz
mov
sub
loop
adc
iret
cmovbe
lahf
in
aad
push
into
mov
or
mov
dec
enter
cwtl
clc
lret
sub
mov
cmp
repz
arpl
adcl
add
fwait
repnz
cmp
cmp
adc
mov
stos
fildl
mov
int
push
sub
sbb
jbe
dec
lods
dec
fsts
mov
lods
xor
outsl
insl
or
in
out
popf
in
sarl
hlt
cmp
add
popf
ss
lds
ss
icebp
std
xchg
shll
iret
xor
fwait
pop
je
cmp
shll
xchg
stos
lea
call
add
push
sub
pop
es
mov
sahf
addr16
sub
xor
mov
mov
adc
sub
aam
sub
addl
lods
jno
js
dec
jmp
bnd
repnz
iret
mov
xor
xchg
mov
std
out
lretw
out
fiadds
repz
fiadds
ss
adc
sbb
and
add
and
loop
push
adc
pop
push
int
lcall
pushf
lea
and
idivl
sti
add
cwtl
shrb
fdivl
sti
loop
sbbl
arpl
add
mov
jg
pop
je
inc
pop
sub
insl
jbe
movsb
popf
stos
sub
mov
movsl
in
stc
dec
cltd
loope
inc
es
push
movsl
lock
xor
and
xlat
in
cli
loope
lock
enter
loopne
fidivrl
jo
cmp
stos
mov
cmp
frstor
xor
jg
loopne
and
in
aam
xchg
dec
int3
jmp
dec
test
cmc
jmp
jae
les
push
pop
cltd
leave
cmpsb
sbb
sbb
les
jnp
enter
aad
jo
xor
hlt
daa
jecxz
cmc
sbb
lret
mov
arpl
mov
ret
imul
sub
dec
add
pop
pop
andl
pop
dec
out
insl
jle
pop
jg
in
popf
cmpsl
xor
add
sub
cmpsb
jle
std
in
cmp
mov
xlat
rorb
dec
daa
flds
and
jp
int3
sbb
sub
repz
dec
cltd
adcb
fimuls
push
fcompl
out
jge
orb
pusha
jge
jo
ret
push
jmp
lret
cs
jb
pop
out
add
fildl
inc
in
fnstcw
sub
out
jae,pt
dec
les
les
pop
xlat
cwtl
mov
jmp
inc
and
mov
sub
loopne
dec
sti
push
mov
or
cmp
ss
xchg
imul
mov
in
bound
xchg
dec
daa
pop
mov
movsl
cmp
mov
and
jmp
xchg
xchg
xchg
ret
insl
out
jno
nop
pusha
or
sbb
mov
cmpsb
xchg
push
shlb
js
pop
xlat
iret
stos
adc
push
fisubrl
scas
loopne
loope
fldl
jge
shll
push
push
divl
push
data16
bound
cltd
testb
nop
gs
xor
and
add
mov
insb
dec
push
adc
cmpl
xchg
mov
add
out
lods
in
push
test
pop
sub
je
jle
mov
mov
test
ret
rclb
mov
lcall
jnp
insb
xchg
mov
add
dec
pop
xlat
mov
inc
cmp
and
add
pop
cli
mov
out
into
loope
bnd
cmpsb
aaa
adc
pushl
out
mov
jae
xchg
loope
xlat
pop
aam
mov
imul
stos
aam
pop
insl
sbb
and
mov
xchg
divl
and
xchg
lods
cmp
aam
dec
rclb
pop
aaa
rcl
and
mov
arpl
ds
jl
adc
movsb
pop
je
adc
adc
mov
push
and
outsl
cmp
xchg
sbb
aaa
mov
test
pop
adc
loopne
mov
mov
rorb
icebp
dec
mov
std
cld
xor
orl
dec
mov
mov
mov
in
xchg
ss
lea
fidivrs
test
ds
adc
fwait
inc
cltd
inc
adc
es
jecxz
sbb
or
xchg
jne
lcall
in
push
fs
bound
das
jns
decb
mov
pop
sub
adc
scas
mov
sbb
xchg
push
hlt
ljmp
mov
xchg
add
mov
xor
sub
and
movsb
ficoms
cwtl
es
mov
lret
sub
jl
cmp
inc
pop
stc
rcl
into
sub
call
scas
and
push
cmpsl
andb
loopne
jo
push
out
xor
add
movsl
mov
lods
clc
leave
add
popf
jb
rcrb
iret
mov
inc
mov
stos
lock
jns
imul
sti
rcl
jbe
pusha
xchg
test
xchg
lahf
roll
aam
xor
out
xor
xor
sbb
cmp
jecxz
push
or
add
pop
pop
mov
lds
push
loope
and
cmp
pop
sub
dec
mov
sbb
dec
fadd
movsb
push
cmpsl
xchg
push
and
daa
pop
daa
out
xchg
pop
ds
mov
in
flds
sbb
test
mov
mov
scas
clc
adc
outsb
ror
pop
out
jb
jae
fs
sbb
xchg
inc
and
push
pop
pop
imul
rcll
mov
jnp
and
jae
orl
insb
notl
pop
je
and
sarb
jmp
jl
xor
add
jnp
xor
xchg
push
into
lret
mov
dec
jnp
or
add
loop
pop
movsb
xor
ds
test
sub
popl
jmp
xchg
xchg
mov
lods
cmp
xor
jb
test
das
mov
mov
mov
lds
adc
andl
or
push
push
cli
lahf
int3
in
loopne
jmp
push
into
nop
pop
es
cmp
movsl
jge
popf
mov
lods
ja
addb
std
cmpsb
xor
mov
pusha
push
imul
cli
daa
lds
out
lret
repnz
lea
lods
mov
sahf
out
popa
test
test
iret
rcrl
pop
bound
imul
dec
mov
outsl
xor
mov
dec
mov
or
jo
movb
pop
pop
adc
or
out
and
ror
lds
push
bound
scas
aaa
movsl
or
gs
out
adc
and
push
icebp
dec
xchg
cmpl
ud1
aam
xchg
clc
cwtl
outsb
xor
xchg
lods
pop
inc
jo
insb
cltd
scas
pop
loopne
cmpsl
mov
out
and
mov
js
les
sub
sarb
out
and
or
addr16
jecxz
stc
int3
ficoml
mov
test
push
mov
fisubs
test
aam
add
xor
and
or
jge
mov
mov
movsb
xchg
mov
jne
jl
inc
push
add
adc
mov
cmp
fldcw
daa
clc
mov
jg,pt
mov
sahf
push
or
fimull
mov
roll
cmp
ficomps
insb
lock
int3
sahf
dec
dec
adc
and
mov
repnz
push
sarb
stos
mov
jne
jl
fldcw
in
xor
xor
cmp
sub
fildll
iret
dec
rclb
dec
jns
aam
dec
nop
in
shlb
sub
cmp
scas
addr16
movsl
icebp
xor
adc
sbb
jbe
arpl
xchg
insl
push
mov
push
xor
xor
mov
pusha
arpl
mov
push
mov
jmp
lahf
mov
les
mov
pop
inc
pop
mov
dec
ret
pop
mov
fcompl
jle,pn
outsl
adc
fidivrs
and
push
sbbb
adc
loope
mov
dec
test
push
xchg
je
pop
sub
inc
xchg
cmp
sbb
fld
aad
iret
adc
push
out
aam
fwait
inc
test
pop
out
mov
pop
sub
xlat
pop
add
enter
iret
imul
pusha
cltd
popf
repnz
inc
sub
push
mov
call
pusha
lods
aam
test
push
jge
sub
fldt
inc
sbb
push
popf
sbb
data16
movsb
scas
hlt
orl
cmc
sub
mul
jns
pop
cmp
or
pop
push
rcrb
cmp
dec
scas
in
fisubrs
mov
jno
sbb
in
fidivrl
inc
inc
arpl
push
in
jne
rclb
mov
push
xor
cli
cwtl
xor
loopne
sub
mov
cmp
push
and
fsts
imul
cltd
jbe
shl
lret
inc
pop
testb
dec
mov
mov
push
mov
jne
adc
jnp
leave
inc
jle
mov
sub
pusha
loop
shlb
add
test
jns
repz
lods
fs
aas
out
aam
xor
xchg
add
jno
cld
jns
jge
inc
aam
out
dec
xchg
je
mov
xor
or
shrl
mov
sbb
clc
jb
sbb
ret
lea
in
add
insl
mov
lods
mov
and
test
sarb
sbb
and
jno
subl
test
inc
pushf
jl
in
mov
or
sbb
aad
orb
ja
mov
shr
js
pushf
es
sbb
insb
imul
jp
lahf
xor
mov
ljmp
fildl
mov
xchg
pop
stos
xorb
xor
push
pop
xor
addr16
mov
daa
test
and
rorl
out
fidivrl
xchg
stos
out
dec
or
stc
sti
fstps
cmp
rcl
mov
test
and
inc
push
mov
in
ja
test
sub
jne
and
inc
jmp
xchg
into
sub
pop
outsb
addr16
movsb
jmp
int
sub
ds
and
mov
in
lret
sbb
gs
into
sbb
inc
cmpsl
loope
rcrb
push
push
in
mov
call
je
aad
xor
or
add
shrl
and
rcrb
int3
sbb
sbb
adc
or
nop
cmp
xchg
movsl
cmp
out
cmp
cld
mov
jns
lock
jmp
outsl
fmuls
jl
outsb
mov
int
mov
dec
insb
repz
insl
in
push
or
loope
adc
or
push
loope
mov
xchg
cmp
push
xchg
cmpsl
scas
mov
dec
int3
mov
mov
lret
xchg
out
cli
mov
cmc
test
mov
dec
divl
out
xor
out
xor
ret
addb
xchg
cld
insl
mov
or
jmp
test
adc
repz
out
loopne
scas
jl
cmpsb
loop
mov
bound
sub
adc
push
jbe
lret
inc
jmp
nop
pop
push
mov
xor
xor
pop
das
loop
ror
mov
clc
xor
cwtl
cwtl
enter
ljmp
xchg
js
test
jge
es
mov
mov
jno
aam
jno
xor
mov
mov
adc
dec
cli
mov
int3
addr16
gs
adc
dec
cli
sbb
cmp
push
mov
add
inc
out
or
int3
inc
sbbl
inc
pop
into
jecxz
out
ja
in
hlt
xchg
in
jecxz
mull
xlat
push
in
filds
hlt
lock
rcrl
cmp
in
pop
enter
inc
inc
dec
and
mov
push
cld
add
sub
xor
int3
mov
call
pop
rcll
and
in
rclb
push
pop
adcb
xchg
loopne
ljmp
cmc
jmp
jno
icebp
xor
push
xor
rcll
add
adc
sub
mov
jmp
xor
mov
unpckhps
mov
stc
dec
test
adc
jl
or
inc
xchg
out
scas
push
mov
je
mov
aaa
popf
mov
xchg
lret
mov
data16
cwtl
jp
int3
in
cwtl
sub
mov
outsl
sbb
cli
lods
and
pop
sub
or
jle
xor
jp
out
loop
mov
mov
scas
jbe
imul
mov
xor
fdivrl
lock
xor
xchg
popf
add
cmp
sub
outsb
pushf
icebp
pop
adc
adc
pop
push
lea
sbb
push
push
cmpsl
jo
sbb
jmp
pop
adc
cltd
pop
sub
push
adc
loope
mov
dec
add
shll
adc
inc
mov
xchg
sub
xchg
dec
rcr
les
lods
xchg
pop
fidivl
js
mov
mov
shrb
sub
rcrb
dec
call
ja
jle
stc
in
test
inc
push
stos
sbb
cmp
cmp
sbb
lcall
fnstsw
xor
and
add
test
dec
jo
cwtl
push
jne
sub
push
paddd
fiaddl
mov
add
dec
ror
mov
rolb
inc
leave
push
loopne
jle
mov
or
dec
test
xor
mov
xor
mov
push
jl
push
hlt
pusha
push
xchg
ja
push
push
cmp
aam
cltd
hlt
or
fiaddl
insb
stos
mov
push
clc
xor
cwtl
shll
jmp
subl
add
popa
xor
pop
aam
xor
popa
loop
mov
test
push
and
and
xchg
cmpsb
mov
dec
roll
push
mov
mov
jbe
dec
sub
push
cltd
es
xchg
leave
loop
lods
addr16
cld
xor
fsubl
jl
cli
jp
jp
stos
js
lea
xchg
lret
push
sbb
mov
gs
xchg
mov
loope
cmp
dec
mov
into
cmp
jno
add
lret
adc
sbb
aas
pop
aas
and
pushf
ret
hlt
sbb
xlat
pop
xchg
cld
out
and
sti
aas
loope
iret
ja
mov
and
jns
jge
fmuls
xchg
pop
mov
xchg
pop
out
mov
add
icebp
cltd
xchg
inc
jno
xchg
frstor
sbb
test
add
mov
call
sub
cmp
mov
sub
or
mov
jbe
mov
sbb
repz
and
aas
cld
and
cwtl
mov
jno
aam
dec
jmp
sub
clc
test
enter
mov
lds
mov
xchg
jle
lcall
sub
jns
adc
sti
aas
call
cmp
push
mov
mov
mov
and
adc
leave
lds
add
jle,pt
mov
jae
dec
add
je
int3
jnp
or
out
repnz
orb
fidivs
sahf
push
mov
fmull
fucom
imul
aas
xchg
sub
mov
add
pop
rorl
subb
loopne
inc
and
sub
pop
test
inc
inc
mov
rolb
mov
loop
clc
fwait
stos
mov
test
cmp
mov
addb
cmpsb
and
sub
sub
popa
mov
shll
je
sbb
dec
jno
dec
fildl
cmp
jae
in
test
and
mov
xlat
imull
add
fwait
mov
sbb
inc
push
ret
sbb
ret
dec
sbb
cmpsb
fidivs
cli
popf
push
rcll
xchg
sbbb
popa
mulb
add
mov
in
push
popf
aas
xchg
aaa
cli
lcall
jb
jecxz
jae
mov
leave
inc
movsb
inc
in
pusha
in
push
shlb
jge
add
sub
sub
jns
movsl
jns
push
lret
push
dec
push
push
clc
jmp
lret
mov
jl
adc
inc
lcall
sub
test
loope
stc
das
dec
sub
in
int3
and
mov
inc
lcall
mov
xlat
xor
js
scas
inc
ja
arpl
or
fnstsw
loope
mov
xchg
mov
or
outsb
out
lds
leave
jg
leave
xchg
jae
stos
jns
mov
dec
mov
andl
aam
pusha
mov
add
test
in
inc
jle
lock
jle
mov
xor
jae
testb
inc
not
mov
add
jecxz
or
jno
es
mov
icebp
mov
mov
test
ret
sbb
scas
push
andb
cmp
mov
dec
mov
fwait
movsl
jmp
lcall
xchg
xlat
pop
xchg
shlb
or
adc
push
pop
add
pop
pop
xor
mov
pop
rcl
xor
push
cmpsl
movsl
xchg
dec
popa
pop
dec
lods
xchg
push
aad
shlb
jbe
mov
mov
and
movsl
dec
mov
imul
lods
xchg
out
push
sbb
inc
add
pushf
xorb
mov
sti
leave
andb
inc
dec
dec
pusha
je
insl
jo
jbe
test
mov
arpl
or
imulb
filds
insb
jl
mov
sub
int
xor
in
fistpll
dec
les
jmp
out
mov
xchg
repz
inc
sbb
push
lods
cmovno
adc
addr16
and
add
mov
outsl
popf
dec
mov
hlt
repz
fdivl
xor
push
neg
inc
jecxz
mov
dec
enter
lcall
sbb
inc
mov
jmp
xchg
dec
shrl
pop
repnz
mov
jge
inc
mov
cmpsl
ret
sbb
test
scas
push
sti
jno
rolb
jbe
xchg
push
adc
test
mov
cmp
sub
clc
mov
pop
xchg
pushf
sub
or
inc
adc
inc
add
scas
sti
int
cmpsb
std
or
adc
adc
call
push
fs
outsb
aas
jb
ficompl
lret
sbb
add
cmp
jmp
dec
pop
mov
mov
pop
jo
sahf
aad
icebp
lds
pop
lods
stos
hlt
inc
mov
outsb
iret
sarb
inc
cmp
ljmp
fdivrs
movsb
adc
daa
inc
jb
cmc
jle
mov
cmpsb
sbbl
fsubs
test
loop
mov
ret
jge
cmpsb
xchg
out
sahf
xor
clc
in
js
bndldx
jb
movsb
xchg
fisttps
aaa
in
clc
and
mov
repz
mov
push
sub
adc
daa
xchg
mov
notl
pop
ljmp
ds
adc
outsl
dec
imul
rcll
popa
xor
inc
aas
dec
insl
test
sub
mov
dec
enter
fisubrs
pop
aaa
pop
enter
and
lods
mov
mov
add
outsl
mov
cmp
test
push
hlt
fiaddl
push
daa
out
xchg
fldcw
xor
dec
in
or
jb
and
data16
lods
jmp
lcall
jge
xor
sbb
stos
and
pop
mov
lahf
push
jecxz
mov
dec
cld
xor
and
xchg
or
arpl
ds
push
stc
test
add
or
pop
imulb
inc
pop
add
andl
into
ljmp
sti
je
jno
dec
push
mov
arpl
dec
clc
ror
lds
stos
push
xor
or
pop
and
inc
bound
sbb
add
cli
push
mov
je
add
push
aam
sub
mov
inc
push
jnp
mov
int
adc
sub
sbb
cmpsl
mov
mov
or
fs
insl
xchg
pop
jo
cmp
add
xor
clc
out
aam
or
mov
adc
cmpsl
pushf
mov
adc
jne
int3
and
cltd
js
int
jo
push
xor
push
mov
inc
std
mov
cmc
test
push
xchg
sahf
sub
jne
jle
sbb
call
icebp
dec
inc
cmpl
dec
dec
inc
cwtl
fcmovnbe
scas
rorl
addl
shrb
fistl
sbb
addl
cltd
xor
jno
mov
dec
loopne
arpl
xchg
push
popa
rcr
dec
cmp
repz
out
sarl
mov
inc
jg
sbb
xchg
pop
sub
dec
and
or
add
dec
dec
and
push
sub
icebp
xchg
pop
pop
xor
mov
jns
gs
imul
sbb
dec
pop
cmp
movb
mov
in
ljmp
popa
scas
xlat
aaa
xchg
or
inc
push
fs
ficompl
in
push
push
mov
push
cmp
in
mov
test
and
dec
out
xchg
fldcw
out
clc
jno
stos
mov
outsl
jg
adc
shlb
test
pop
mov
int
push
push
fidivl
cmp
jl
shll
xchg
and
mov
test
add
scas
fnstenv
add
daa
imul
sahf
xchg
int
jecxz
adc
mov
stos
ljmp
ljmp
xor
and
sidtl
fs
scas
pushf
roll
insb
jns
test
cltd
lahf
and
pop
add
inc
xchg
dec
test
into
rorl
notrack
sti
jbe
xor
lods
and
jo
js
rcrb
xchg
and
cmp
lock
popf
sbb
aaa
outsb
enter
jb
inc
inc
lea
mov
ja
test
mov
repnz
and
or
jae
sub
sbb
pushf
push
jns
dec
jo
fs
inc
mov
sbb
ret
push
push
inc
xor
and
jmp
loop
nop
lret
xchg
or
sarb
cltd
sarl
mov
adc
pop
scas
pop
xchg
dec
cmp
inc
lods
cltd
out
pop
mov
sbb
push
insl
add
fmuls
mov
pushf
xchg
movsl
push
insb
dec
pop
sarb
ret
pop
add
jge
mov
dec
and
xor
pop
insl
dec
inc
pop
push
popa
jp
mov
pop
xor
mov
pop
movups
xchg
pop
dec
into
arpl
inc
sbb
xor
adc
data16
add
rol
popa
addl
cwtl
cmp
push
in
mov
int3
jl
fwait
insb
adc
cmp
push
inc
repz
popa
jae
mov
adc
inc
inc
addl
adc
dec
mov
jl
push
add
cli
iret
cmc
mov
hlt
pop
xor
lods
inc
jns
cmp
and
lods
pop
ja
imul
sahf
sub
mov
mov
jns
or
xchg
inc
or
test
xor
sub
stos
mov
xchg
push
test
mov
ljmp
cmp
fsubp
out
jo
adc
push
test
lret
insb
push
hlt
fwait
xchg
lret
xor
test
movsl
ret
jmp
mov
mov
push
stos
xchg
pop
js
sbb
or
mov
std
jle
xchg
sbb
es
and
clc
jne
pushf
fnstcw
popa
test
cli
xor
xor
sbb
arpl
outsb
in
mov
mov
lcall
mov
fwait
jns
inc
jmp
mov
push
outsb
lcall
shr
ficompl
ds
mov
pop
cli
stc
dec
jo
addr16
je
pop
sarb
mov
cmp
orl
ds
fldt
hlt
shll
pop
test
adc
test
cmc
out
sbb
jmp
sbb
nop
pushf
fmull
xchg
fstl
dec
mov
cmp
lods
mov
xchg
mov
movsl
arpl
jle
cmp
push
cmp
push
test
int
and
lods
dec
cmpsb
test
shr
xor
les
xchg
adc
bound
add
lcall
mov
inc
dec
push
dec
xor
pop
jnp
xlat
jmp
das
push
push
sub
lods
and
sbb
sbb
xorl
pop
movsl
jne
lret
mov
inc
and
inc
or
bound
je
add
and
cltd
rcrl
inc
sahf
int
popa
mov
dec
cli
xchg
inc
in
pop
sbb
cmpsl
xor
xor
or
cli
jb
or
cld
jo
lods
mov
in
mov
lret
loop
push
ret
in
sbb
jge
push
in
mov
inc
and
and
push
test
push
push
add
std
mov
pop
pcmpgtw
arpl
or
cmp
fcomps
mov
shr
hlt
idiv
fadd
and
and
push
or
call
in
cltd
adc
aam
and
mov
fwait
out
shlb
inc
cmpl
pop
outsl
push
mov
loop
lods
lods
xor
outsb
call
jmp
cmp
fmulp
push
dec
call
lods
lock
aas
loop
mov
jge
and
mov
jns
xchg
xchg
jb
aad
popa
sahf
push
enter
mov
push
out
in
xor
jo
xchg
pop
cmp
int
das
mov
scas
movsb
bound
add
clc
jo
stos
clc
push
sbbl
mov
frstor
jmp
or
outsb
aad
mov
jmp
xorb
enter
cmp
jns
dec
ret
scas
or
fdiv
roll
sbb
fistl
sbb
aam
mov
inc
cmp
pushf
ja
lods
fsub
call
jge
movsl
das
cmp
jno
lock
xchg
xchg
test
stos
std
rcr
or
and
push
daa
lock
aam
and
enter
xchg
lods
xor
rcl
leave
popl
call
ja
pop
mov
pop
and
out
loope
data16
push
sbb
out
clc
add
jecxz
jge
popf
lahf
je
jbe
mov
push
push
jae
inc
iret
popf
int3
sbbb
cmp
scas
mov
iret
movsl
cwtl
loop
pop
adc
stc
pop
mov
cmp
faddp
in
xchg
push
ret
cmc
pop
push
xchg
adc
jmp
js
adc
test
sub
mov
mov
sub
rcrl
sbb
addr16
adc
mov
aam
jp
sbb
xor
inc
aaa
lret
int
mov
test
fcomp
push
pop
jno
dec
and
cmp
inc
insl
insl
mov
pop
movsb
cmpsb
xchg
xor
leave
add
xchg
lea
std
mov
lahf
dec
pop
dec
movsl
enter
jb
push
pop
and
cmp
int
rcll
ret
cmp
mov
sahf
fistl
mov
dec
rcpps
popa
push
mov
dec
mov
int3
insl
cmp
cwtl
arpl
ud1
xor
xchg
out
mov
sub
movsl
and
rcr
mov
dec
jle
push
jno
fstpt
sbb
imul
out
sbb
rcr
incl
xchg
push
dec
scas
pop
pop
cwtl
sbb
fsubrl
nop
hlt
push
mov
mov
pop
ljmp
dec
and
xor
adc
xor
and
cli
sbb
loopne
arpl
push
push
cld
xchg
jnp
stc
fnstcw
leave
mov
mov
sbb
ss
scas
gs
out
xor
lahf
cmp
mov
pop
in
stos
lahf
std
out
dec
fisubrl
add
lock
sub
push
shll
outsb
xchg
fldcw
into
fstps
xchg
in
adc
addr16
adc
push
arpl
push
movsb
mov
sbb
rcll
pop
out
mov
mov
cmc
add
daa
push
inc
subb
je
test
ds
cmp
call
fnstcw
inc
loope
mov
push
xchg
cmp
jns
das
pop
out
and
scas
and
ror
pop
adc
mov
xchg
add
into
sbb
inc
stos
xor
ja
xor
icebp
repz
pop
cmp
out
sub
cmp
lds
add
arpl
sti
out
push
xlat
cwtl
imul
sub
cmp
adc
pop
adc
daa
push
subl
mov
jg
add
xchg
sbb
xor
lret
iret
inc
pop
test
or
mov
xchg
repz
mov
mov
and
xor
mov
xchg
movsb
aad
cmpl
sahf
fwait
adc
xchg
adc
iret
daa
sbb
iret
out
push
pushf
subb
push
shll
subl
add
subl
insb
enter
sub
scas
jecxz
xlat
addl
adcb
push
dec
ss
fs
icebp
rorl
push
test
sbb
and
cld
sbb
outsb
pop
mov
fwait
scas
or
cmp
les
mov
mov
xor
or
arpl
add
xadd
inc
cmc
push
fistl
mov
int3
mov
sbb
ss
test
pusha
pop
outsl
fisttps
aam
push
mov
stos
shlb
or
mov
pop
rorl
pushf
dec
jg
cmc
mov
sub
dec
inc
jg
sbb
jnp
push
push
mov
aam
int3
shrb
cwtl
mov
test
or
mov
or
shll
mov
pop
xor
addr16
aaa
xlat
hlt
into
xchg
insb
fstpt
dec
adc
or
test
hlt
iret
outsl
insl
scas
mov
ja
xchg
pop
inc
mov
std
jbe
int
outsl
and
or
popf
lock
out
lock
jle
aam
or
cmp
mov
and
add
idivl
int3
pop
cld
mov
lret
outsb
mov
fldl
jns
push
mov
into
pop
test
xchg
dec
std
cmp
sti
icebp
cmp
mov
ss
push
mov
hlt
leave
cmp
int3
scas
and
adcl
mov
adc
lods
mov
adc
push
or
mov
test
addr16
js
sub
pop
inc
outsb
inc
inc
imul
mov
in
mov
lret
aam
cmp
into
sub
bnd
mov
pushf
lcall
lods
mov
testb
lds
popf
js
jge
sub
movb
jnp
les
push
xor
adc
shlb
dec
cli
sar
cmp
and
or
pop
mov
test
mov
stos
test
ud0
sub
imul
add
adc
les
dec
push
loop
decl
in
add
push
mov
or
mov
dec
sarb
and
popf
incb
mov
sub
inc
jnp
aaa
leave
mov
clc
imul
int3
add
xchg
xchg
pop
xor
clc
sub
xlat
sbb
cmp
add
sbb
rcl
or
xchg
cmpsl
mov
pop
mov
dec
mov
stos
cs
mov
data16
sub
pop
out
shll
or
ret
pop
adc
push
sahf
nop
and
idivl
pop
pop
dec
inc
sub
and
add
sub
bnd
xor
mov
jns
xchg
push
jle
sti
sbb
cmp
dec
push
jo
and
std
dec
lahf
jae
lods
es
adc
lcall
cmpsl
adc
pop
neg
lea
cmp
pop
adc
sub
mov
push
xchg
inc
dec
add
iret
test
push
mov
cmp
mov
idivb
pop
push
cmp
or
push
hlt
adc
pop
push
push
mov
push
sbb
jge
rcr
pusha
in
sbb
dec
dec
cmp
xlat
ret
daa
fadds
push
jnp,pt
pop
lahf
sbb
test
adc
ret
out
cmp
xor
adc
cmp
adc
das
lods
cmp
sbb
repnz
pop
daa
out
adc
jnp
inc
pop
cmp
pusha
sbbl
inc
imul
adc
mov
push
shlb
xor
sbb
sub
js
sub
lock
pop
mov
mov
adc
jmp
fldl
in
mov
sub
std
std
or
int3
push
aad
or
lods
mov
sbb
mov
and
test
jge
lcall
cmpsb
dec
push
push
xor
outsl
icebp
jl
stos
ret
hlt
xchg
inc
in
push
xor
dec
jne
xchg
fmull
xchg
mov
movl
or
sbb
shrb
sub
mov
jecxz
push
sti
inc
ljmp
xor
push
dec
jnp
mulb
cwtl
pop
mov
dec
out
or
ret
or
jnp
out
adc
xor
cmpsb
in
pusha
pop
jno
jne
fstps
dec
adc
fmuls
mov
adc
icebp
cmp
mov
es
mov
mov
push
andl
mov
mov
pop
ja
scas
mov
adcl
arpl
jb
sub
notb
adc
stc
shl
cmp
int3
int
xchg
fisttpll
in
add
and
pop
xchg
or
xchg
push
xchg
movsl
nop
xor
test
out
cmp
jle
dec
adc
ds
xor
adc
out
rolb
movd
mov
jle
cli
aas
cmp
ljmp
das
loop
aaa
jmp
dec
xchg
mov
imul
insl
cmp
xor
jl
mov
insw
mov
mov
pop
xchg
push
dec
stc
sbbb
or
mov
test
rep
pushf
jle
cmp
mov
les
jmp
dec
mov
ja
mov
js
inc
inc
pop
into
and
pop
mov
fisttps
xor
inc
lahf
test
mov
test
insl
scas
mov
mov
or
adc
in
jecxz
rcl
inc
cli
mov
mov
and
push
jmp
leave
fdivs
mov
stos
fstpl
mov
nop
clc
lock
jge
mov
cmc
mov
jo
xchg
in
add
inc
xor
cmp
jns
pusha
loope
jge
add
mov
enter
test
xchg
push
pushf
push
sti
movsb
pop
icebp
inc
pusha
test
in
std
pop
jecxz
xchg
icebp
incb
dec
cs
add
ss
popf
and
add
cmp
add
aas
sub
in
push
aad
xor
jmp
sub
rcl
jle
inc
mov
ds
fsts
pop
jne
pop
sbb
pop
rcll
or
adc
inc
in
int3
dec
sub
lock
js
mov
dec
mov
fidivrs
js
lods
jb
mov
leave
cmp
cmp
pop
inc
stc
stos
push
add
xor
mov
out
add
loop
jnp
fsts
sub
inc
clc
push
jns
out
popaw
ja
js
jmp
mov
ror
xchg
enter
or
movsl
sti
push
sbb
ret
sti
dec
cmp
lret
inc
mov
push
xchg
outsb
decb
jbe
sub
jmp
lods
xchg
adc
dec
pop
mov
jae
sub
or
pop
lcall
enter
xchg
popa
jb
dec
mov
and
mov
xor
in
push
dec
or
popa
sbb
and
lret
divl
sbb
xor
fs
aad
mov
add
inc
cltd
xor
inc
jmp
int
adc
pop
out
cmpl
ret
sbb
sbb
in
cmc
aam
jno
lods
insb
loop
jne
mov
lock
stos
push
mov
jo
sahf
pop
or
mov
pop
or
jbe
sbb
and
mov
mov
push
push
xchg
cmp
or
push
mov
out
pushf
sbb
adc
dec
jge
adc
sbb
enter
jnp
xchg
dec
jecxz
mov
out
clc
pop
lcall
je
mov
inc
pop
pop
xchg
jno
dec
aaa
insb
push
sub
mov
xchg
push
mov
push
mov
inc
loop
insl
notb
movsl
inc
pop
xor
mov
andl
push
sbb
in
jo
xchg
lret
push
das
and
adc
and
mov
mull
push
xchg
and
ds
or
imul
adc
jp
mov
or
pop
pop
push
iret
dec
fidivl
hlt
stos
clc
or
sub
mov
insl
push
hlt
fstl
mov
jne
cmpb
sub
sbb
out
sbb
arpl
pop
and
sub
mov
fisttpl
dec
push
ud1
and
repnz
xchg
out
inc
mov
push
bound
hlt
lret
repz
xchg
dec
sbb
stos
test
mov
shl
rcl
int3
pop
sbb
push
or
or
gs
pop
sub
stc
aas
aaa
ss
push
mov
jnp
adcb
mov
cwtl
into
movsl
xchg
aaa
daa
dec
xchg
sbbl
push
popf
fistpl
jno
push
ds
and
roll
ds
cmpxchg
xor
into
jge
dec
rolb
std
push
lcall
jno
push
pop
push
cmp
xor
pop
imul
jmp
mov
xchg
sub
xor
sub
movsl
cli
sub
xor
sbb
inc
lea
in
inc
mov
fcmovnu
mov
test
enter
cmp
mov
cmp
inc
fcoms
mov
pop
xchg
jmp
pop
cmpb
sbb
insl
stc
mov
cli
adc
mov
and
xchg
xchg
sub
pushf
mov
fs
ja
or
xchg
out
add
es
icebp
inc
mov
fldl
out
fldl
dec
sti
mov
mov
into
mov
ret
jno
or
aas
cmpl
fistl
inc
dec
sub
aaa
jno
xor
fisttps
mov
int
dec
cmpl
divl
sub
jb
xor
jmp
nop
in
sub
scas
or
lahf
or
in
pop
mov
cmp
test
or
mov
daa
jecxz
xchg
fs
jnp
stc
adcb
mov
mov
cmp
push
sub
fistl
cmp
jp
pop
push
icebp
adc
lret
adc
incl
sbb
or
push
addb
cltd
add
pop
xor
mov
insl
or
lret
inc
push
mull
cmp
les
ja
ja
shrb
dec
cmc
lods
insl
out
lahf
jae
sub
xor
arpl
stos
cmp
add
stos
or
icebp
in
cmpsb
loop
mov
hlt
jge
jnp
inc
daa
xchg
out
outsl
aam
sub
or
xor
push
das
fstp
cmc
mov
cli
jmp
push
cli
in
stos
xchg
nop
rcrl
add
jecxz
imul
stos
les
movsb
stos
push
pop
sahf
sbb
xchg
scas
xlat
push
ja
mov
add
pop
adcb
les
pop
jb
adc
sti
int
mov
sarb
bnd
mov
fwait
inc
mov
cwtl
js
xor
jmp
mov
dec
sub
adc
outsl
add
mov
cmp
sbb
cltd
mov
rorl
mov
rcr
mov
sub
jl
jg
sbb
mov
in
leave
sub
xchg
xor
mov
push
test
pop
dec
negl
std
xchg
cmc
pop
cmp
and
cmp
inc
xchg
mov
loopne
clc
dec
xchg
mov
imul
movsl
cld
push
push
xchg
jns
aas
pop
sub
xchg
std
sbb
push
and
xlat
imul
pop
sahf
loopne
jo
mov
pop
xlat
jmp
pop
fstps
in
dec
mov
imul
jae
jecxz
mov
scas
iret
ret
add
push
xor
loope
dec
lods
push
dec
test
lods
add
popf
xchg
dec
fidivrs
ljmp
test
inc
mul
sub
push
inc
sub
fdivl
je
inc
dec
add
pop
cltd
push
or
pop
pop
ds
cmp
ret
xchg
ss
iret
and
push
sub
mov
adc
es
leave
sub
pop
inc
push
test
cld
in
cmp
movsb
aam
mov
imul
push
add
fmuls
jb
in
cmp
push
cld
cmp
push
lret
call
adc
xchg
scas
frstor
push
sub
insb
mov
or
cmp
sub
test
addr16
pop
out
cmpsb
push
pop
mov
ljmp
push
sub
std
icebp
jle
push
adc
mov
xchg
ds
movsb
cltd
jmp
inc
sbb
call
aaa
push
mov
shlb
sub
cmpsb
bound
je
jl
fs
cmp
outsb
cmp
jb
jg
arpl
mov
mov
sub
pop
clc
shl
sub
mov
dec
stos
cmp
cmpsl
inc
inc
adc
dec
out
cmpb
fmuls
jno
mov
mov
jbe
fsts
inc
cmp
add
call
loopne
pop
filds
cmc
int
adcl
xchg
insb
and
pushf
xchg
aas
rcrl
mov
pop
jno
xchg
arpl
pop
inc
sub
movsb
inc
outsl
daa
jp
sbb
cld
insb
mov
mov
xlat
imul
xchg
push
popf
adc
xchg
mov
out
sub
subl
mov
jle
lock
pop
das
popf
mov
push
xchg
arpl
enter
sbb
or
cmpsl
test
sbb
xor
testl
das
mov
mov
imul
aad
aaa
hlt
jg
and
negl
xchg
pop
scas
xchg
ja
cld
mov
fprem1
xchg
inc
scas
mov
movsb
std
add
ss
xor
pop
mov
in
lds
out
and
xchg
insb
bound
cmp
fcoms
xchg
int3
aas
adc
lahf
mov
or
xlat
jns
ret
aas
jns
insl
jge
pop
push
movsb
cmp
cmpsb
aam
inc
inc
lcall
sub
inc
lea
stc
mov
fnstsw
jecxz
push
mov
mov
clc
mov
imul
cmp
mov
xor
cld
inc
in
enter
xchg
roll
icebp
loope
xlat
dec
aad
pop
orl
fwait
xchg
fcoml
xchg
cmc
out
out
adc
push
sub
lea
fcoms
cltd
jg
ret
adc
sbb
push
cltd
das
repnz
testb
push
cmp
fisttps
arpl
in
cmp
lock
insl
daa
lods
stc
cltd
in
call
js
out
ficoms
mov
pop
cmc
xlat
and
xor
sbb
sahf
leave
cmp
xchg
sub
jp,pn
mov
add
fcom
mov
fmull
shrl
clc
pop
addr16
adcb
stc
ja
jg
push
push
dec
pop
mov
cli
bound
cmp
popf
sub
lahf
icebp
shl
stc
divl
sahf
shr
das
test
pop
sti
into
jg
mov
and
mov
mov
popf
mov
cwtl
icebp
std
pop
roll
xor
and
inc
xchg
mov
jl
and
and
xchg
ret
mov
xchg
inc
ljmp
mov
mov
pop
or
inc
mov
xor
jmp
scas
inc
rclb
mov
cmpsb
cmpsl
xchg
lret
push
insb
mov
out
lods
add
pop
repnz
xlat
sbb
stos
gs
sbb
fs
ss
out
or
cli
xchg
mov
in
jno
jp
mov
aas
jns
sahf
leave
push
or
sbbl
ljmp
xor
mov
out
ja
clc
xor
fcompl
fs
addr16
xor
or
int3
incb
adc
inc
inc
cwtl
inc
xor
popf
test
cmp
outsl
push
jno
insb
add
sbb
hlt
arpl
pop
xchg
push
hlt
jbe
push
not
int
xor
mov
cld
loope
scas
add
add
ret
dec
add
jne
mov
int
movsl
push
xchg
adc
stos
mov
jo
adc
dec
mov
lods
fistpl
sbb
sbb
inc
mov
roll
nop
xor
int3
sub
sub
popf
jmp
loop
rclb
ja
push
inc
out
jmp
fadd
andb
cmp
out
adc
sbb
leave
loopne
imul
dec
pop
mov
popf
movsl
or
cmp
pop
add
add
lds
cmc
aam
fldt
jne
add
stc
sahf
insb
cmp
pop
es
adc
add
je
mov
adc
add
mov
iret
inc
xchg
aam
loopne
cmc
dec
jne
sbb
mov
xchg
hlt
push
popa
push
in
imul
inc
push
mov
pop
add
jbe
add
pop
dec
ljmp
push
bound
mov
out
mov
enter
into
push
jecxz
test
out
mov
icebp
inc
bound
jecxz
dec
outsl
cmp
push
and
data16
push
push
pop
add
rol
adc
testl
aaa
push
nop
cwtl
daa
xchg
cltd
inc
cmp
nop
in
adc
lock
rorl
cmp
fdivrs
movsb
mov
xchg
jp
or
fninit
mov
sub
pop
sub
cltd
in
sub
popf
sub
fmuls
and
cmpsl
rcr
cmp
or
push
push
dec
dec
popf
mov
push
jmp
test
das
jle
outsb
lock
cmpsl
sbb
into
mov
loop
sar
dec
fcmovnu
data16
push
xchg
cmp
sbb
xor
pop
popf
mov
cmc
pop
test
das
lahf
rorl
testb
pop
jne
adc
push
sub
adc
mov
jno
inc
rcrb
scas
push
push
mov
imul
data16
insb
jae
subb
cmpsl
fs
aas
dec
xchg
cmc
rcrl
xchg
adc
and
hlt
cmc
sub
and
pop
mov
ss
pop
mov
pop
ljmp
fisubrl
sbb
mov
add
push
lcall
scas
jl
out
pop
add
iret
adc
jge
jmp
aam
outsb
xor
push
mov
push
xchg
or
loop
sub
mov
xchg
jnp
jl
gs
sbb
add
insl
mov
lods
xchg
and
push
daa
push
pop
push
xor
dec
vcvtss2sd
es
pop
ds
movsb
or
mov
sahf
fsubl
add
inc
outsl
pop
scas
or
sbb
pop
fwait
and
xor
cmc
push
cmpsb
mov
inc
pop
shrb
sub
outsl
inc
daa
int
test
adc
ret
repz
mov
push
and
test
jp
lret
pushf
xchg
fsubl
cmpsl
inc
dec
and
fiaddl
js
pop
xchg
inc
scas
sub
pusha
and
jle
mov
sub
fdivrs
pop
cltd
cmc
repz
imul
sub
or
inc
push
testb
mov
out
pop
cmp
pop
aaa
cltd
push
lds
loop
xorl
pop
jmp
push
mov
xor
stos
push
push
add
loopne
test
adc
mov
aam
inc
jns
adc
or
mov
leave
inc
das
mov
jmp
cs
mov
push
mov
call
xchg
sbb
popa
sti
rol
sti
fisubrl
jp
lret
xchg
loopne
adc
xor
inc
xlat
adc
rcl
pop
loope
jmp
nop
cmpsb
xorb
fcomp
pop
dec
mov
or
scas
sbb
mov
adc
jg
mov
and
ret
mov
lahf
cmp
addr16
stos
ret
ret
inc
in
add
add
cwtl
stos
adc
sub
movsb
xlat
push
push
orb
mov
xchg
mov
pop
jl
enter
lret
sub
dec
sub
scas
in
ljmp
jo
outsl
in
or
dec
stc
mov
sbb
int
cli
je
shrb
aas
mov
adc
mov
ret
test
cltd
fistpll
pop
or
sbb
arpl
in
lds
pop
mov
or
js
mov
inc
iret
in
lods
sub
rcrl
les
push
mov
mov
xchg
lods
mov
push
std
out
test
mov
push
out
movsb
aam
out
inc
lods
js
ljmp
push
mov
pop
hlt
in
jl
jnp
jno
sbb
flds
pop
loope
mov
enter
js
mov
xor
movsb
movl
pop
in
test
sbb
mov
iret
iret
or
mov
mov
shrb
xchg
add
into
add
test
cmp
cmp
das
mov
stc
cmpsb
xchg
dec
imul
sbb
in
jp
fdivp
decl
sub
push
xchg
or
testl
inc
jle
jno
aas
cmpsb
push
rclb
pusha
jecxz
call
inc
mov
jp
cmp
xchg
xor
cli
xor
cld
sbb
out
push
cmp
cmp
add
mov
out
add
sub
cld
adc
mov
and
or
push
push
mov
mov
sub
pop
shrb
pop
and
pop
not
sbb
cs
mov
mov
lock
adc
lret
xor
scas
or
inc
inc
add
add
push
dec
sti
jo
std
inc
xchg
pop
mov
cli
aas
test
jo
mov
jg
mov
mov
ret
mov
cmc
sub
faddl
leave
loope
int3
loopne
das
std
daa
jmp
and
push
fildll
push
xchg
scas
lds
imul
dec
pop
jns
push
ljmp
sub
dec
cmpsl
leave
std
ret
in
jbe
mov
cs
cld
addb
mov
dec
sbb
fidivrs
fldenv
jecxz
and
mov
mov
ret
leave
test
dec
cmpsl
stos
ss
fimuls
imul
jns
lea
cltd
mov
iret
ror
ja
jo
add
adc
sbb
or
and
shlb
mov
mov
shrb
sbb
dec
fsubp
sbb
imul
es
mov
mov
xor
gs
cld
cwtl
cli
out
in
sub
shr
lret
mov
divl
fmul
lods
mov
sub
aaa
dec
pop
jp
sub
fcmove
or
int
shll
or
loopne
in
jo
imul
stc
js
in
jne
scas
adc
cmp
sbb
jae
push
fwait
gs
in
outsb
xchg
add
jmp
subl
cmp
fsub
aaa
jnp
jno
push
push
pop
add
add
or
les
in
std
mov
push
sub
mov
and
xor
and
mov
mov
outsb
mov
loope
push
rcll
xor
inc
outsb
push
outsl
std
sbb
sbb
adc
cmp
adc
xchg
push
and
push
prefetcht1
scas
push
mov
xchg
cmc
stos
push
jp
les
dec
xor
nop
push
cmpsb
into
push
jp
xor
or
ss
fiadds
fs
push
imul
jns
pop
add
push
mov
aas
flds
in
notb
loop
jbe
xchg
stos
lods
dec
aad
test
sub
or
div
add
add
sbb
or
push
jo
cltd
sub
or
mov
or
xor
pop
imul
lret
loopne
mov
push
xor
xor
push
and
insb
divl
cmp
inc
mov
xor
stos
lock
es
mov
and
out
test
mov
dec
jmp
jbe
and
enter
sub
cmp
call
jge
jo
jns
lock
push
cmc
xor
addl
mov
mov
aad
push
xchg
test
imul
nop
mov
mov
sbb
jbe
bound
adc
and
or
and
cmp
mov
xor
movhps
fimuls
mov
sti
sbb
imul
fwait
test
setns
inc
cmpsl
adc
pop
bound
repz
mov
mov
jo
push
mov
and
sbb
push
xchg
int3
xchg
nop
or
mov
sub
xorb
mov
ja
cltd
movsl
ds
adc
nop
jae
adc
push
lods
das
out
sub
pop
pop
loope
cs
cmc
ret
mov
inc
mov
icebp
jle
repz
adc
f2xm1
subb
fisubrs
nop
jbe
push
mov
jg
into
pop
testb
dec
jecxz
out
jp
jne
nop
mov
add
xor
bound
lahf
pop
outsb
test
loope
inc
add
loopne
xor
inc
int
scas
cmp
les
inc
mov
cld
movsl
ficoms
sub
adc
jae
dec
mov
inc
lcall
xchg
ficoml
or
sub
mov
sbb
xor
mov
cwtl
sbb
scas
in
jno
data16
cmp
dec
mov
cmp
stos
fistpll
js
inc
enter
push
pmaxsw
scas
jmp
or
add
stos
xchg
or
xlat
sub
ret
inc
lret
mov
jnp
mov
fidivl
mov
pop
repz
push
subl
xor
mov
push
fstpt
daa
cltd
jl
shrb
arpl
pop
stos
dec
bound
cmp
or
loopne
popa
xchg
pop
cmovge
loop
inc
test
cmp
sarb
push
movsb
cli
xlat
inc
push
test
push
lret
xchg
imul
dec
sub
cli
mov
cs
cmc
mov
add
fistl
pop
outsb
stc
repz
cmp
fwait
jmp
stos
int
in
daa
cli
adc
xchg
filds
mov
inc
loop
dec
scas
sub
je
mov
or
inc
fistpl
in
fwait
arpl
js
and
fs
je
jle
mov
inc
sub
pop
in
pop
xlat
outsl
cmp
xor
add
fscale
mov
xor
out
sbb
stos
add
popf
lret
addr16
in
dec
sbb
lods
ljmp
fldt
cwtl
jnp
sbb
dec
lods
mov
push
iret
stos
jge
fsts
push
pop
cmp
xchg
aaa
insb
push
xchg
add
lea
xor
ds
adc
xchg
xchg
insb
dec
jmp
xlat
and
into
lods
mov
nop
pusha
xchg
lds
xchg
add
outsb
jne
or
xor
test
mov
cmp
mov
cmp
lods
push
lret
mov
mov
shll
pop
rorb
and
clc
dec
cmp
add
sahf
adc
stc
jg
data16
stos
nop
add
or
shr
cmp
pushf
mulb
loopne
es
clc
pop
pusha
inc
sbb
pop
lock
stos
jmp
adc
sbbl
bound
xchg
dec
pop
mov
xor
or
int
mov
cs
xor
je
sbb
shll
lods
jbe
inc
xchg
in
dec
sti
push
mov
fwait
fwait
mov
push
mov
dec
mov
arpl
mov
into
push
dec
mov
bound
cltd
mov
pop
push
add
or
inc
inc
jp
cmpsb
adc
fildl
mov
or
inc
xor
push
adc
clc
inc
stc
out
mov
pop
je
sbb
dec
popa
add
push
mov
push
mov
jne
xchg
xlat
mov
test
mov
adc
out
popf
fs
in
pop
into
jb
adc
xlat
repz
stc
test
inc
es
mov
cmp
add
fiadds
into
push
mov
ss
js
xchg
mov
cmp
cwtl
cmpsl
outsl
popa
scas
fs
mov
xchg
repnz
sub
popf
mov
lahf
rclb
cs
aad
rol
gs
xor
push
aam
hlt
mov
jns
pop
sub
shrl
or
ss
jle
ds
insl
push
aad
or
push
sbb
bnd
jbe
dec
loop
es
in
mov
repz
mov
push
negl
mov
sub
movsb
dec
pushf
cmp
or
jge
data16
mov
mov
addl
shlb
add
inc
push
and
scas
mov
adc
cs
push
pop
rol
pop
cmp
fimuls
push
out
xorl
fdivl
testb
call
sti
mov
js
jb
inc
xchg
dec
sub
stc
jle
cmp
imul
mov
call
mov
xchg
cltd
mov
cld
orb
and
mov
cwtl
mov
mov
inc
sub
inc
aas
xchg
xchg
mov
shlb
fdivr
movsl
pop
mov
or
dec
test
xchg
jle
cmp
sbb
addr16
pop
and
jp
scas
sti
cmpsl
ja
pushf
fsubrs
pop
xchg
lods
and
gs
sbb
dec
push
fsubl
sbb
mov
adc
out
cmpsb
scas
jae
shlb
or
lret
loopne
imul
arpl
mov
pop
sbb
push
lret
or
lret
imul
xor
shll
inc
and
bound
jle
adcb
adc
cmp
xchg
lret
jbe
js
push
sbb
xchg
mov
rorb
sbb
pop
iret
out
jmp
in
mov
mov
pop
lea
pop
and
data16
xor
jnp
sbb
mov
aad
int
and
lds
xor
or
add
popf
ja
ss
add
mov
repz
jle
fcompl
fdivrl
and
jne
inc
xchg
enter
cli
bound
or
in
cmp
add
sub
sub
xchg
vsubps
and
jp
fidivs
out
in
es
das
jg
push
mov
pop
or
or
xor
test
movl
imull
lock
mov
lods
loope
scas
dec
out
out
sahf
mov
rclb
insl
jne
pop
es
insl
inc
in
xor
adc
ds
iret
sahf
mov
outsb
or
adc
movaps
out
test
add
dec
std
mov
xchg
xchg
hlt
inc
or
and
dec
mov
inc
jo
add
mov
xlat
sahf
shl
imul
mov
dec
outsb
push
jp
jno
add
sbb
fwait
movsl
jae
inc
aam
push
mov
jg
pop
mov
js
inc
lods
push
jne
negb
adc
cmpsl
and
sbb
mov
dec
sbb
push
lcall
adc
mov
lds
mov
xlat
orl
adc
bound
fstl
out
mov
in
adc
inc
lahf
scas
push
adc
xchg
ja
dec
jecxz
jp,pt
dec
jle
sbb
or
test
xchg
mov
not
imul
xor
mov
xchg
sub
dec
xchg
mov
mov
or
iret
jl
ds
jno
int3
push
out
push
push
dec
pushf
imul
dec
pop
dec
in
dec
outsl
sub
add
movsb
out
fsubrp
sbb
rcll
mov
enter
lcall
mov
data16
inc
or
mov
dec
add
jge
sbb
mov
fldl
mov
mov
fdivrp
cwtl
lds
sarl
out
lcall
insb
jns
pop
xor
cmp
paddsb
xchg
rclb
jns
xchg
rclb
dec
sbb
ss
out
xchg
or
cmp
data16
push
mov
fdivr
xchg
mov
jl
fistps
add
sub
mov
add
in
stc
push
out
outsb
cli
lret
push
repnz
adc
sbb
adc
dec
test
sbbb
xor
adc
xchg
std
in
or
push
mov
xorl
stos
sub
dec
fucomi
sbb
enter
add
pop
test
adc
imul
jb
out
mov
stos
in
push
mov
push
mov
es
loopne
rorb
cmpsb
adc
nop
xor
adc
and
fiadds
mov
fs
iret
ljmp
pop
rcll
movb
es
sub
mov
loope
loopne
add
mov
mov
ret
cmpb
lea
mov
adc
push
imul
jns
aas
in
inc
push
jne
sbb
push
mov
pop
or
jg
nop
ja
je
ds
hlt
push
adc
sub
inc
sbb
sub
mov
mov
adc
cwtl
scas
cs
add
data16
shlb
lea
outsb
sub
scas
jle
or
lea
jb
mov
push
xchg
testl
cmp
mov
jle
pop
add
lret
repz
das
inc
xorb
or
icebp
xlat
std
scas
test
lea
popa
sbb
cmp
xchg
sub
gs
sub
xor
xchg
rorl
iret
xchg
mov
loope
test
ljmp
les
sti
jle
inc
in
std
pop
es
lahf
repz
int3
cs
sbb
dec
xchg
shlb
push
pop
js
jbe
mov
test
rcll
jnp
pusha
dec
std
pop
lods
mov
scas
daa
mov
aaa
cmp
lcall
sbb
in
dec
movsb
add
das
jo
gs
adc
loop
xor
cwtl
mov
je
jecxz
fcmovnb
mov
cltd
test
mov
push
mov
mov
jo
aas
out
xor
adc
iret
xchg
loopne
test
xchg
inc
jb
mov
mov
mov
lahf
subl
mov
adc
push
mov
xor
fcomps
mov
inc
int3
inc
data16
adcl
inc
pop
ret
dec
or
and
shrl
inc
jmp
aam
loopne
sbb
call
mov
inc
std
sub
inc
jno
push
js
outsl
hlt
adc
dec
iret
in
daa
sub
inc
ja
xor
sbb
adc
xlat
icebp
call
xor
add
push
test
mov
mov
mov
jo
mov
sbb
and
loop
sub
test
dec
std
dec
xchg
hlt
int
sub
in
xchg
mov
add
push
mov
stc
mov
push
fs
lcall
and
lods
cmpsl
inc
stc
pop
mov
loop
lods
popf
lods
mov
inc
pop
dec
dec
lods
adc
shlb
inc
int3
sub
pop
jg
add
sbb
frstor
sbb
arpl
in
mov
push
lea
loop
call
mov
push
lods
test
inc
loopne
push
and
jns
sbb
jb
gs
outsb
popf
mov
stos
aas
je
pop
mov
inc
insl
fisubrl
fisttpl
mov
fwait
and
popf
cs
test
lret
pop
les
sub
adc
pop
rolb
lahf
out
xchg
insl
lahf
icebp
sub
in
xor
int3
rcl
pop
mov
mov
mov
loop
cmp
push
xchg
xchg
into
aam
push
mov
inc
loopne
pop
sub
inc
int3
sahf
outsl
xor
or
and
fimuls
ja
push
push
fisubl
sub
loopne
stos
stos
aam
mov
movsl
jmp
push
cltd
mov
pop
lods
mov
bound
popa
jb
jno
fisttpll
push
fwait
jne
push
ds
xor
mov
inc
enter
data16
and
push
into
fwait
cmc
call
push
call
dec
fcompl
inc
push
test
testb
pusha
lods
xchg
test
jno
pop
call
sbb
cli
xchg
movsb
or
cmp
push
sarl
mov
js
movb
adcb
dec
pop
fidivl
adc
add
dec
mov
cmpsb
jne
insl
cltd
xor
repnz
movsl
xor
lods
pop
clc
repz
inc
or
mov
and
fwait
push
ds
pop
lods
mov
daa
inc
sub
testb
daa
sti
loope
fstpl
adc
scas
push
cltd
insb
outsb
and
idiv
js
xchg
mov
vshufps
sub
cmp
mov
dec
or
test
jb
mov
jnp
jmp
push
cmovge
pop
dec
mov
ret
fstpt
scas
xor
mov
dec
stos
mov
dec
xor
and
mov
jns
inc
sbb
cmp
mov
push
leave
mov
adc
iret
insb
sbb
fs
dec
jecxz
mov
popf
aam
cmc
pop
cmpb
jo
sub
addr16
nop
jno
adc
push
mov
icebp
nop
and
xor
inc
adc
pop
jg
pop
xchg
stc
loop
lahf
outsl
mov
mov
les
mov
loop
jecxz
cli
sub
fstpt
out
and
je
inc
fidivrl
outsl
imul
mov
scas
aas
mov
jle
sbb
lahf
cmp
push
arpl
cltd
jne
dec
mov
dec
jbe
jne
dec
rol
mov
xor
negb
push
dec
mov
ret
jne
mov
cmp
stos
bound
cltd
shlb
movsl
xchg
mov
pop
pushf
push
push
push
xlat
pop
or
fidivrl
jb
ljmp
inc
js
push
bound
loope
sbb
push
xor
test
lret
ljmp
js
and
mov
xor
xchg
int3
mov
fisubrs
jmp
test
sbb
cmpsb
jge
mov
pop
hlt
xchg
pop
insb
jp
add
leave
fwait
inc
push
xor
mov
cmpsl
bound
cmp
cs
sbb
call
and
lcall
mov
push
pop
dec
cmp
and
sbb
cli
and
xlat
cs
pop
pushf
stc
sbb
es
sub
xchg
push
jl
loopw
add
jle
test
and
adc
out
ret
xchg
mov
sub
xchg
mov
mov
inc
out
xor
aam
paddb
mov
sub
int
inc
inc
mov
mov
xor
dec
fdivrs
test
cmp
clc
pusha
dec
sub
mov
jno
mov
add
inc
push
mov
push
mov
add
push
adc
test
pop
mov
jae
sbbl
pop
shlb
and
mov
test
std
sbb
xor
adc
mov
cmpsb
shlb
xor
aam
icebp
js
mov
pop
push
leave
xchg
dec
das
gs
xchg
aaa
pop
add
cmpsl
shll
js
sbb
or
xor
sahf
pop
mov
mov
cmpsb
imul
jg
gs
mov
popf
lahf
addr16
sarb
pop
aas
mov
sti
shl
or
cmp
pop
decb
test
lods
xor
xchg
dec
sbb
dec
pop
xchg
pusha
jae
lcall
pushf
or
stc
inc
int
add
xchg
push
ss
cs
into
cmp
cld
xlat
pop
ficomps
dec
pop
loop
out
test
push
sbb
pop
lods
ja
jns
loopne
dec
lcall
aas
hlt
push
fsts
xor
and
cmpsl
jo
adc
in
mov
and
mov
in
inc
mov
loopne
lahf
push
pop
lcall
popf
lcall
add
loope
ja
xchg
ss
fildl
xor
cmp
stc
mov
pop
leave
adc
sti
dec
sbb
jno
mov
cld
out
dec
xor
xor
sbb
pop
sbb
pop
jnp
fldl
cwtl
sbb
or
shrb
push
repz
inc
jno
adc
mov
lods
adc
inc
mov
sbb
es
jle
sbb
repz
jbe
gs
xchg
lods
jne
andl
add
xchg
sub
std
push
mov
insl
xchg
sbb
adc
mov
inc
and
and
mov
cmpsb
mov
mov
movsl
nop
rcr
xorl
mov
mov
repz
cwtl
mov
into
ret
xchg
dec
dec
stos
fcompl
add
enter
cltd
sub
cmp
inc
pop
fistps
xchg
js
mov
xchg
dec
cmpsb
and
in
cli
lods
xor
test
sbbl
fisttpl
int
mov
and
dec
cmc
mov
lea
lds
xchg
arpl
ljmp
or
push
or
arpl
icebp
jnp
sarb
pop
ret
pop
mov
cmpb
xor
pop
imul
scas
stos
mov
xchg
push
call
push
dec
adc
jno
sub
jg
xchg
sub
shrb
dec
dec
push
sbb
and
movsb
testl
xchg
or
mov
pop
clc
ret
inc
icebp
cmp
add
bound
bound
sub
dec
in
pop
mov
gs
mov
dec
and
int
out
cld
cmp
bound
icebp
test
cwtl
fcompl
xchg
jo
dec
aad
cmp
mov
mov
fistpl
fs
xorl
aad
inc
sub
rorb
test
jbe
push
arpl
pop
fmull
mov
xchg
rcr
cli
bound
ljmp
mov
ret
add
pusha
sub
int3
fs
jns
xlat
mov
cs
mov
mov
dec
adc
sub
sub
ja
test
lods
insb
mov
and
out
out
cli
add
mov
scas
std
xchg
xchg
pop
in
cwtl
shll
xchg
iret
dec
dec
pop
fbstp
inc
fcompl
jge
push
jnp
sub
rol
adc
pop
push
js
mov
je
movsb
daa
cmovs
and
sahf
in
outsl
imul
push
test
dec
cmpsl
pop
repnz
mov
in
aaa
pop
data16
stos
addr16
mov
lret
mov
or
cmp
add
jmp
sbb
push
inc
mov
or
xchg
adc
mov
bound
xor
mov
lods
mov
mov
add
clc
xlat
stc
xlat
lret
xchg
inc
and
lods
xor
jg
adc
xor
dec
notb
movsl
lea
push
and
jl
es
bound
xchg
xchg
jp
xchg
dec
adcl
mov
into
iret
xor
insl
scas
adc
fwait
scas
add
jbe
xor
aam
fists
xor
mov
std
js
add
fimull
out
mov
push
aam
adc
mov
repnz
xchg
orl
fdivp
mov
jp
outsl
add
dec
jmp
ljmp
and
ja
inc
aad
sub
repz
cmp
mov
push
lahf
addl
fisubs
js
repz
decl
call
cmp
sub
fistl
and
inc
scas
mov
xchg
sti
xor
in
sarl
in
cmp
jnp
push
jnp
mov
out
jmp
cs
cmpsb
xchg
fisubl
pop
out
jne
lahf
mov
push
data16
movsl
cmpsl
mov
outsb
bound
mulb
daa
adc
dec
fs
stos
and
aam
enter
push
and
pop
push
sub
cmp
mov
popf
and
pop
ror
push
add
jmp
addr16
xchg
push
clc
sbb
in
push
addb
test
and
lods
arpl
xor
jns
add
mov
push
xchg
xchg
jp
repz
xchg
fiaddl
sub
xor
pop
adc
outsl
ret
pop
adc
or
lahf
mov
adc
mov
jbe
shr
rol
inc
sub
sbb
mov
mov
push
rclb
sbb
push
add
mov
bound
jle
ret
sub
mov
js
jmp
enter
add
dec
lods
mov
daa
mov
xlat
push
je
pusha
es
je
cmp
popa
cltd
adc
movsb
sahf
push
mov
jb
dec
lds
das
push
int3
in
sbb
fcomps
pop
scas
inc
fildll
lds
push
sarb
push
or
dec
pop
mov
push
fsubl
pop
mov
mov
stos
mov
arpl
int3
pop
xchg
in
xor
inc
push
pop
das
dec
cmpsb
imul
int3
fidivl
sub
fsubp
mov
pop
je
out
lcall
jno
stos
mov
mov
movsb
pop
cmp
add
lods
in
ds
test
and
push
mov
jmp
jbe
fisttps
dec
adc
enter
or
in
iret
and
adc
xchg
je
and
xchg
adc
rol
mov
mov
pop
cwtl
adc
mov
neg
push
js
push
orps
and
mov
dec
shlb
add
mov
jne
sub
cmp
test
lods
lods
test
in
aad
and
mov
xchg
mov
stos
shlb
mov
daa
outsl
or
push
stos
pop
roll
jno
mov
js
jmp
repz
push
sub
lea
mov
adc
decl
aad
setg
inc
jmp
inc
dec
sbb
push
icebp
stc
mov
gs
push
sbb
jnp
sbb
pop
enter
dec
jmp
sub
movw
mov
pop
pop
jle
push
in
pop
scas
mov
jmp
cltd
pop
punpckhwd
jno
mov
mov
loopne
xchg
push
adc
inc
mov
sub
xchg
icebp
in
popa
adc
inc
xor
daa
pop
in
ror
jmp
sbb
lahf
push
pop
fisubs
test
cmpsb
ret
scas
mov
jne
cmpsl
jmp
mov
bound
ret
inc
outsb
iret
outsb
xchg
aas
push
fs
push
xchg
popf
jno
shll
jnp
cmp
mov
push
scas
out
xchg
adc
fstpl
mov
add
or
fisubrl
mov
mov
cmpsl
repnz
iret
xchg
ss
or
testb
or
gs
mov
or
xchg
out
dec
or
repnz
xor
pop
jno
xor
out
std
sarl
add
adc
and
pop
cli
jbe
out
repnz
shll
outsb
push
inc
loop
jecxz
or
xchg
scas
sbb
sahf
ret
repnz
insb
mov
cmp
lods
xor
imul
add
jle
mov
adc
inc
das
mov
sub
mov
mov
iret
inc
fwait
outsb
pop
fadds
aaa
aam
cmp
and
icebp
std
add
popa
pop
pushf
popa
in
push
xchg
enter
call
fisttpll
mov
xor
jno
mov
sbb
inc
hlt
inc
pop
xorl
out
push
sub
or
std
lret
mov
addb
int
cmc
ja
cltd
lods
pop
imul
pop
hlt
xchg
cmpsb
mov
or
ds
es
mov
lods
arpl
ja
or
jmp
add
cmp
and
pop
jo
and
mov
dec
push
adc
pop
fwait
xchg
dec
lret
movsb
pusha
test
mov
or
mov
das
rorb
loope
mov
xchg
mov
xchg
fwait
out
cwtl
sbb
ret
stos
sahf
gs
inc
or
xor
popf
fistpl
adc
mov
dec
popa
je
rol
jmp
dec
data16
xchg
int
je
out
push
adcl
xor
mov
test
pop
inc
push
mov
mov
mov
sahf
shlb
or
mov
or
dec
adc
cmc
test
push
cmp
sub
xor
mov
negb
xor
loop
jno
lods
cmp
or
mov
add
sub
test
add
mov
mov
je
mov
pusha
xchg
js
popf
push
dec
jg
jbe
xor
fwait
or
mov
stos
xor
jns
out
imul
and
mov
push
cs
repz
aad
sbb
popf
iret
call
xor
xchg
iret
sbb
sub
sub
cmpsb
dec
add
push
test
repnz
nop
push
in
push
aam
icebp
sub
or
push
mov
test
jecxz
fwait
aam
xchg
push
xor
push
fs
dec
push
adc
mov
lods
test
inc
xorb
cmp
mov
push
or
insb
mov
loop
pop
pop
movsb
cmc
fwait
inc
push
push
sub
mov
mov
xchg
adc
push
add
mov
and
jo
and
or
inc
iret
in
dec
sub
jge
cmp
insb
push
jmp
mov
fsubrl
fsts
lods
hlt
lcall
fisubrs
pop
jmp
imul
leave
mov
push
jmp
mov
mov
in
loop
inc
push
adc
je
dec
mov
in
sub
mov
lods
pop
cmp
mov
adc
outsb
ficomps
pusha
dec
inc
in
push
pop
mov
pop
jo
in
mov
cmp
cs
cmp
popl
sub
shr
cmp
adc
daa
jle
xor
je
sbb
addl
mov
add
insl
dec
call
movsb
mov
jbe
fsubp
jo
test
push
inc
cmp
lahf
out
xchg
pop
mov
mov
imul
or
insb
rsm
pushf
cmpsl
push
dec
cmc
ja
cs
and
daa
or
pop
fnstcw
push
lods
outsb
popa
test
aaa
stos
mov
cmp
dec
or
inc
sahf
push
out
mov
xchg
cmp
xlat
rcr
out
dec
into
scas
movsl
es
pop
mov
or
sub
cmp
add
test
sub
stc
es
fbld
test
jmp
popa
cmc
int3
imul
mov
push
jg
in
jg
arpl
stos
lds
jmp
or
cmp
or
xlat
bound
shll
pusha
or
int3
scas
fiaddl
cmc
ss
adc
lcall
cli
popl
sbb
outsb
clc
icebp
mov
push
push
bnd
inc
rcl
stos
sti
test
cwtl
xchg
sbb
push
rorb
lock
push
jecxz,pn
dec
xchg
shr
mov
pop
sub
and
push
pop
lods
outsb
push
scas
out
lahf
or
jmp
mov
mov
pop
decl
adc
sbb
sub
push
add
sbb
movsl
push
test
push
push
mov
ffreep
sbb
push
cli
xchg
inc
inc
jnp
lods
imul
ljmp
bound
or
addr16
jne
das
pop
fisubl
sti
lds
pop
inc
test
repz
stos
add
not
push
test
xchg
scas
mov
inc
popa
dec
outsl
jmp
in
push
or
dec
xor
dec
rorb
fs
in
js
cmp
xchg
gs
mov
pusha
lds
dec
sbb
pop
lds
pop
fs
add
imul
shll
movb
mov
popa
cmp
xchg
out
fsubl
and
inc
mull
xchg
dec
push
mov
xor
sti
push
js
inc
cmc
aas
xchg
lock
stos
xor
mov
cs
dec
jo
push
sub
mov
add
sub
cwtl
mov
cmc
fstps
push
shrl
aas
repnz
insl
aas
jo
mov
cmc
sahf
dec
xorb
jns
sbb
xchg
pop
pusha
les
das
adc
icebp
mov
in
xlat
pop
mov
mov
std
dec
mov
add
out
xchg
push
inc
cmp
inc
sahf
mov
std
ret
test
ret
stos
jp
stc
pop
cmp
cld
ljmp
sbb
dec
ljmp
cmp
adc
push
arpl
mov
movsl
add
sub
dec
xchg
out
divb
bound
or
loop
mov
clc
cmp
adc
mov
clc
repz
push
dec
xor
xchg
cmp
jno
or
aam
jo
dec
jno
leave
add
pop
mov
lea
mov
and
movsl
xchg
add
and
faddl
inc
inc
cmp
add
inc
add
fldl2t
add
dec
jae
dec
and
mov
cmp
lretw
inc
add
xchg
dec
das
mov
cltd
icebp
lret
mov
mov
ljmp
testb
testb
xchg
xchg
xchg
inc
pop
push
rorl
loope
mov
xchg
gs
clc
lcall
ret
out
xorl
jne
xchg
push
rcrb
shlb
in
in
push
mov
xor
push
pop
push
cmp
mov
dec
hlt
add
mov
inc
cli
mov
loopne
xchg
jno
push
jb
inc
mov
mov
stos
clc
stos
mov
iret
jp
stos
inc
sbb
sub
ret
xchg
cmpsl
repnz
inc
cltd
movsb
cmp
lret
dec
ljmp
movsl
div
rol
adc
aam
lock
pusha
cli
mov
cmpl
loope
dec
or
stos
inc
jae
dec
loopne
out
data16
fidivl
xor
es
mov
in
jns
mov
add
xchg
fwait
dec
dec
je
lock
inc
pop
in
add
sbb
inc
push
test
mov
xor
xchg
dec
call
xchg
mov
mov
dec
dec
je
cmpsl
mov
test
mov
lahf
push
pop
lods
jno
test
jb
xchg
jnp
rclb
dec
cs
idivb
ljmp
and
pop
fisttpl
popa
shll
jle
test
adc
filds
ja
cwtl
bound
push
dec
cwtl
sbb
test
daa
xchg
dec
fcomps
mov
mov
outsl
sbb
adc
dec
push
std
add
push
or
push
xor
mov
imul
pop
mov
push
movsl
scas
std
and
pop
mov
xor
mov
int3
xor
cmpsl
mov
rolb
lcall
bnd
pop
cmp
imul
mov
mov
pushf
xor
icebp
scas
fs
mov
cmpsb
js
adc
pop
and
pop
mov
out
or
js
mov
repz
jno
nop
call
mov
or
push
pcmpeqw
pushf
mov
ret
xchg
clc
inc
std
xchg
push
cmp
dec
in
pop
xchg
inc
in
inc
mov
flds
pop
pusha
gs
push
mov
mov
leave
push
imull
xor
sti
sbb
push
xchg
lahf
xchg
mov
js
mov
or
pop
sub
inc
int3
jbe
sahf
jno
xor
mov
imul
add
jo
pop
mov
aad
inc
cmp
insb
mov
sub
popf
fstps
and
mov
lcall
jmp
fwait
jbe
ss
sbb
sub
inc
in
xor
jbe
mov
push
xchg
lds
mov
repnz
dec
xchg
fdivs
mov
fs
jo
sub
mov
adc
icebp
addr16
cmp
pusha
xchg
cmc
stc
xchg
outsb
mov
mov
repz
dec
cwtl
inc
add
jbe
jmp
mov
into
add
jg
cmp
dec
xlat
push
rorl
cmp
cmp
mov
cmp
ljmp
mov
pop
iret
into
cmp
aam
popf
inc
je
in
popaw
dec
je
cmpsl
dec
jns
sbb
xor
pop
add
mov
in
mov
mov
adc
into
xchg
dec
ret
sub
shrb
shl
imul
les
jmp
jnp
data16
adc
jnp
adc
int3
popf
out
movsl
jge
mov
xchg
adc
mov
push
jne
test
fmuls
push
mov
pusha
sbb
mov
sub
and
in
adc
mov
jecxz
mov
js
cmpsl
push
aad
push
int3
loope
outsl
push
fisttpll
sbb
adc
inc
pop
and
loop
cmp
lods
or
iret
jbe,pn
mov
xchg
fildll
negb
mov
clc
adc
stc
inc
mov
mull
push
insb
cmp
lds
mov
out
fucomi
mov
and
sbb
pushf
or
mov
hlt
shl
mov
cmp
leave
push
xor
mov
jbe
cli
pop
mov
les
nop
out
iret
scas
andb
dec
mov
xchg
imull
out
cmpsb
push
popa
lret
mov
fldenv
push
jle
push
cmc
and
adc
scas
test
data16
mov
mov
inc
ret
repz
rolb
jbe
push
imul
jl
aad
or
jmp
pop
jmp
xchg
dec
cmp
loopne
movsb
pop
enter
pop
out
in
sahf
ret
mov
je
pop
mull
testb
in
and
cmp
and
scas
ret
jecxz
dec
push
jle
jl
push
fstpl
stc
mov
cmpsb
mov
std
lods
mov
pushf
ss
fldl
jl
jne
pusha
dec
mov
cmp
popa
mov
cld
hlt
test
aaa
ret
fs
mov
jnp
jl
fcmovu
cld
dec
pop
int
or
lret
fisttpll
mov
xor
and
call
adc
lods
or
jmp
jno
cld
in
mov
mov
push
xorb
jl
xor
loop
jno
mov
std
xchg
scas
cmp
push
add
inc
imul
inc
ljmp
mov
mov
movsb
lods
mov
fisubs
stos
cli
hlt
cmp
dec
inc
andb
fsub
mov
mov
inc
ret
clc
iret
inc
cmp
jl
or
or
push
movb
mov
aam
mov
push
and
testl
push
dec
pushf
mov
adc
stos
pop
call
aaa
cmp
je
add
pop
and
and
jae
pop
fisubrs
maskmovq
divl
jno
shll
pop
daa
inc
test
insb
jnp
lds
gs
data16
jmp
sub
pushf
mov
and
fwait
mov
stos
lea
mov
shlb
scas
shrb
in
xchg
movsb
and
cld
rcr
scas
dec
inc
stos
fldt
fnsave
int
fsubl
mov
adc
xor
add
adc
cld
add
and
mov
jae
leave
mov
div
push
lock
dec
cmp
or
mov
jl
push
or
mov
sbb
mov
fistpl
jo
sub
repz
jbe
inc
aaa
lret
faddl
xchg
jmp
xchg
leave
rclb
xchg
test
xchg
clc
cwtl
sbb
outsb
shll
pop
mov
add
cmc
lcall
pop
sub
cmpsb
mov
or
data16
push
hlt
mov
dec
stos
fbld
add
mov
aam
loope
jp
cmp
ret
mov
push
mov
jbe
pop
sahf
adc
fdivrp
nop
stos
test
jle
ret
push
pop
dec
call
adc
imul
xchg
imul
inc
inc
mov
sub
repz
jne
inc
jae
or
into
cmp
cwtl
lods
mov
and
mov
icebp
fistpl
push
nop
aaa
or
mov
jnp
xor
stos
jns
idivl
aam
mov
push
jns
sahf
or
jne
cmp
stc
pop
jle
adc
stos
pop
rcrl
enter
xorl
mov
lahf
fstpt
mov
jbe
dec
xor
pusha
test
inc
movsl
add
inc
lods
push
out
inc
jne
imul
pop
xorb
arpl
jo
pop
jmp
adcb
in
test
into
pop
scas
mov
or
and
add
fdivrl
inc
pop
cli
jmp
mov
sub
and
flds
inc
xchg
bound
out
lret
loopne
call
pusha
lret
std
loopne
cmpsb
sti
mov
loop
imul
mov
loop
mov
hlt
jo
mov
inc
jnp
jns
and
imul
xchg
adcb
std
sbb
shl
jbe
in
dec
mov
scas
sbb
in
inc
orb
xchg
test
nop
add
fbstp
in
arpl
ja
pusha
shll
inc
inc
xchg
xor
and
inc
cltd
pop
out
cmp
dec
adc
xchg
or
push
xchg
lea
mov
and
mov
push
adc
ret
in
add
rcrl
sahf
lret
push
aas
ss
pop
jle
or
fbstp
mov
test
mul
aam
ss
push
les
sub
orl
dec
inc
hlt
sub
stc
jo
in
jle
adc
or
out
push
fsubs
jbe
popf
fmuls
or
push
sti
repnz
jecxz
mov
push
popa
out
ss
mov
mov
stc
push
lods
int3
pcmpgtd
adc
std
ds
fs
arpl
xchg
pop
pop
xor
cmp
mov
xchg
and
jecxz
mov
cmp
inc
test
and
xorl
enter
stos
jl
pop
testb
cmp
ds
call
pop
cmpl
adc
call
adc
mov
add
sub
sub
xor
mov
cmpsb
inc
cmp
xchg
push
subb
cld
lcall
dec
loop
add
mov
pop
shlb
shll
fstpl
icebp
jecxz
push
push
arpl
xchg
cli
adc
lahf
adc
popa
out
mov
sarb
inc
push
ret
andl
jno
into
leave
inc
jle
dec
sbbl
bound
test
sbb
pop
and
xchg
push
pop
sbb
or
inc
adcl
test
cli
mov
xor
sbb
push
mov
lret
call
lds
dec
iret
cwtl
mov
add
pop
bound
test
int
mov
out
out
adc
jmp
scas
in
sarb
jg
aas
mov
add
loop
in
push
mov
xchg
cwtl
sbb
gs
and
inc
in
dec
dec
push
ja
fstpl
es
xor
lods
and
mov
pop
xchg
pusha
loope
ds
mov
iret
jns
vmovdqu
mov
sub
sbb
mov
xor
jecxz
xor
pop
mov
inc
mov
cmp
xchg
mov
test
shlb
pushf
dec
push
cmp
pop
lods
cmp
gs
and
fcoml
adc
cmp
repz
inc
pusha
xor
cmp
inc
addr16
outsl
xor
push
sub
lret
lock
sub
arpl
dec
add
repnz
cmp
repnz
aas
mulb
or
mov
inc
pop
sbb
lahf
jne
rcrb
lret
rcr
andl
movsl
cmp
jle
jp
cmpsb
notl
negb
stos
xchg
cmp
addb
sub
mov
jecxz
pop
add
jge
cs
add
inc
inc
cmp
jp
xor
jecxz
fs
inc
add
pusha
stos
or
mov
les
stc
dec
loopne
push
and
les
idivl
sbb
popf
ds
sbb
les
out
sub
popa
cmp
bound
or
aam
and
push
test
or
out
shlb
sbb
jecxz
mov
jno
dec
gs
cmpsb
test
cltd
test
es
xchg
cs
cmp
cmpl
mov
mov
inc
pop
or
aam
nop
or
jne
insl
mov
sub
fdivrl
lods
arpl
mov
enter
sbb
test
jecxz
loopne
lretw
mov
mov
out
imul
lahf
sbb
rcr
mov
test
inc
das
or
mov
scas
pop
std
je
cmpsl
std
pop
test
into
xchg
xor
insl
push
xchg
mov
push
sbb
test
lock
pop
add
vsqrtsd
cmp
fucomp
cltd
and
xor
cli
mov
aaa
and
cmp
xlat
es
mov
stos
add
into
clc
dec
push
std
into
loope
inc
mov
lods
cmp
sbb
lds
cmp
xorl
mov
xchg
cmpsl
shr
sbb
pop
cmp
pusha
cmpsl
push
or
xorl
sahf
xor
push
out
sub
or
and
cltd
dec
in
pop
aas
sbb
pop
sbb
push
cli
cmp
scas
inc
xchg
movsl
adc
fdivs
add
lds
std
shll
cmp
or
out
add
push
fimull
jb
in
fstpt
inc
iret
xlat
lahf
addl
incb
cld
sar
lods
xchg
cld
ret
pop
xlat
jp
adcb
mov
push
pop
orl
pop
add
sarl
test
pop
add
in
push
lds
mov
jmp
into
pop
rorb
or
data16
loope
data16
jnp
add
popf
xor
ds
outsl
sub
js
and
and
ret
lods
pop
cmpsl
pop
sbb
and
and
cmp
imul
imul
sub
jno
pop
loop
es
jl
movsb
dec
test
fiaddl
popa
inc
das
addr16
jo
and
add
mov
out
dec
jb
and
out
out
mov
pop
in
push
fsubr
adc
aad
pop
inc
pop
mov
ss
adc
test
cmc
imul
pop
mov
push
insb
add
pop
mov
mov
lcall
jbe
mov
inc
add
pop
sub
fsubr
mov
call
cltd
sti
lahf
or
push
pop
lahf
or
int3
mov
mov
cmpsb
cmp
aad
push
xor
jno
fnsave
cmp
loop
cli
sub
adc
imul
call
sbb
pop
jp
and
call
test
lret
and
jle
movsl
int
std
inc
pop
push
dec
aad
or
adc
inc
xor
add
sbb
jns
in
mov
sub
pop
loope
nop
outsb
std
adc
mov
sub
sbb
xor
shl
inc
inc
mov
scas
jb
or
cmc
bnd
mov
scas
leave
push
insl
inc
sbb
mov
insb
into
cld
adc
jno
mov
or
jb
cmpsb
pop
pop
or
pop
pop
xor
gs
daa
lock
insl
xchg
shlw
test
xchg
pop
out
bound
leave
jmp
add
imul
or
mov
xlat
and
mov
dec
mov
push
ret
jb
mov
sbb
mov
and
xchg
cmp
cmp
cs
mov
xor
xor
sbbl
sub
daa
in
fxch
pop
cltd
pop
repz
xchg
data16
std
xor
sub
dec
mov
clc
and
lea
in
popl
gs
mov
and
dec
sbb
fcoms
and
inc
xchg
cltd
gs
test
aad
pop
xor
dec
or
or
ficoml
push
sbb
test
mov
imul
push
pop
outsl
jb
push
in
add
or
outsl
movsb
xchg
out
push
mov
mov
push
imul
pushf
movsb
mov
mov
jmp
mov
out
jecxz
test
dec
lret
call
out
cmp
pop
lret
fistpl
fisubrs
fs
in
test
jns
xchg
mov
in
in
push
mov
sub
ficoml
sbbl
jno
fucomp
lret
jl
add
scas
mov
adc
jae
insb
pop
or
pop
mov
sub
xchg
lahf
xor
fisttpl
mov
cmp
rorl
je
jns
outsl
mov
testl
xor
xor
cld
out
mov
fsubs
cmp
xor
repz
dec
insl
pop
movsl
mov
insb
in
pop
and
iret
sub
mov
repnz
inc
mov
adcb
or
enter
icebp
leave
mov
jnp
push
xchg
pop
loop
lea
adc
aam
inc
jl
dec
aas
adc
shrb
in
movsl
adc
jnp
clc
testb
insb
sub
loope
inc
dec
jb
push
cmp
insb
adcl
xchg
inc
jb
les
xchg
sti
mov
mov
cli
or
mov
cmp
lock
bound
gs
xor
sbb
and
push
lahf
pop
pop
jo
out
inc
mov
cmp
dec
add
sub
orl
rclb
mov
repnz
dec
leave
test
cmpsb
rcrl
lock
xor
pop
or
dec
xchg
movb
and
loop
sbb
fisubl
sahf
mov
mov
jp
clc
test
aad
mov
jp
fwait
insl
pop
push
inc
fdivr
fildll
mov
add
mov
scas
mov
test
mov
inc
cmc
push
daa
int
scas
pusha
sahf
jg
add
ja
mov
push
loope
push
sti
adc
stc
xchg
jns
mov
fsubrl
cmp
enter
ret
jne
clc
sbbb
or
dec
push
sbb
daa
loop
xor
ljmp
sbb
je
sub
adc
addr16
fisubrs
and
aaa
jns
lods
dec
mov
cld
jmp
scas
cwtl
push
repnz
xchg
scas
pop
and
push
mov
cli
loopne
fwait
xor
dec
cltd
dec
mov
mov
xor
or
fwait
and
fwait
xlat
mov
pop
ret
repnz
add
in
fnsave
mov
adc
pop
sahf
jns
bound
jbe
lret
xchg
xchg
push
add
leave
and
cltd
mov
mov
pop
fs
mov
sub
jle
pop
dec
dec
loopne
pop
hlt
push
sahf
pop
stos
pop
cwtl
xor
sbb
push
gs
jae
jl
mov
ss
xor
and
adc
cld
loopne
testb
daa
sbb
lds
repnz
push
dec
stos
xchg
hlt
les
dec
push
and
push
stos
std
push
or
popa
mov
xchg
push
xchg
lcall
mov
lret
jp
sbb
icebp
dec
popa
mov
scas
sub
sub
or
daa
cmc
jnp
dec
scas
loop
loopne
and
imul
and
cmp
sbb
xor
mov
sub
mov
bnd
popa
ja
call
jg
loopne
or
divl
scas
mov
lahf
or
imul
lods
addr16
mov
stos
or
xchg
push
dec
imul
push
mov
incb
jg
cmp
add
or
fcomps
cmpsl
sub
jl
mov
sahf
add
jmp
adc
mov
cmp
push
xchg
push
mov
addl
sysret
push
stos
sub
xchg
mov
adc
addl
add
fidivrl
add
js
xor
adc
test
pop
in
leave
mov
xor
xor
in
rcll
xchg
div
rorb
jecxz
adc
lock
in
inc
mov
jp
dec
mov
lock
test
rcll
or
mov
aas
gs
dec
push
lret
sub
aaa
adc
inc
outsb
daa
inc
ja
push
dec
cld
std
mov
dec
cmpb
outsl
cmp
fists
in
push
and
and
int3
ljmp
mov
scas
or
dec
xor
icebp
jg,pt
loop
sbb
mov
push
rcrl
js
and
aas
add
push
inc
inc
xlat
sbb
cwtl
test
dec
fadds
int
mov
mov
add
and
pop
notl
inc
xchg
pop
add
aas
jbe
addr16
stos
mov
cmp
adc
cmp
push
jae
rolb
outsb
mov
jmp
and
repz
jno
fldcw
push
inc
fdivrl
outsl
sahf
pop
icebp
cmp
daa
sti
pop
sbbl
fldl
je
or
sbb
fcomps
add
inc
loope
xchg
lahf
mov
outsb
fs
xchg
jo
sbb
fsubrl
xchg
push
jp
mov
xchg
and
jns
sti
jno
orb
dec
rcl
jl
pop
push
loop
js
inc
fidivrs
and
loopne
add
leave
sar
fsub
mov
or
add
addr16
into
leave
add
jl
aas
push
xchg
mov
into
jl
xor
jmp
out
scas
push
insl
and
mov
and
mov
add
divps
das
and
cmp
or
stc
jl
jbe
cmpsl
dec
stos
push
shl
cmp
ljmp
add
lock
in
and
daa
nop
movsb
jno
xor
jecxz
in
ja
divb
aas
sahf
je
add
mov
add
es
mov
mov
cmp
stos
jb
or
dec
sub
inc
sub
cmc
sbb
push
dec
mov
pop
push
cmp
and
mov
lret
cld
ror
inc
sbb
pop
fxch
or
es
in
sbbb
xchg
cld
jecxz
lods
mov
cld
lahf
xchg
adc
xor
popaw
roll
mov
xor
scas
xchg
pop
aas
ljmp
pushf
stos
push
dec
xlat
stc
push
rolb
xchg
mov
icebp
pop
out
or
cs
sti
test
das
cmc
jnp
pushf
out
pop
cmpsb
push
xor
lods
js
xchg
mov
stos
std
sub
and
push
cmp
in
dec
test
add
imul
sub
xchg
xchg
push
pop
jle
mov
jp
xlat
inc
pop
out
sbb
lods
xor
adc
add
pop
sahf
rcr
mov
pop
popa
or
or
arpl
testb
fstl
repnz
sbb
call
sbb
aam
fildl
mov
or
jns
mov
mov
add
mov
xor
jecxz
out
and
sarl
and
mov
aam
mov
pop
ds
cmp
adc
xchg
ljmp
push
hlt
push
push
and
stos
call
cmpsl
clc
sbb
jnp
sub
fcomp
popf
and
out
add
lcall
dec
imul
fnstenv
scas
mov
sub
sub
nop
mov
orb
xchg
in
ljmp
stos
outsb
negl
add
jns
and
jbe
or
les
in
mov
insl
testl
test
lds
adc
or
ja
jnp
rolb
add
loope
pop
mov
xchg
repz
jmp
aas
ds
push
xchg
xchg
dec
pop
test
test
inc
xor
pop
or
push
jne
sub
dec
dec
or
bound
int3
repz
add
pusha
ds
mov
cmpsl
pop
ret
add
out
xchg
jb
mov
xchg
jmp
or
mov
jne
xor
fcomps
cld
mov
mov
mov
out
sti
mov
mov
sarb
neg
mov
mov
cmpsl
add
loope
andl
lcall
pop
fisttpl
pop
mov
bound
and
cwtl
popf
push
xor
and
test
push
or
push
ljmp
and
loop
mov
jo
cmpsl
cmp
aas
pop
mov
ja
cmp
sbb
cwtl
pop
push
sub
and
enter
mov
inc
mov
aaa
insl
loop
xor
jne
repnz
jb
outsl
hlt
jae
mov
mov
mov
sbb
or
cltd
lods
sarl
sbb
into
cmpsb
movsb
mov
jb
sarb
mov
ss
and
and
mov
jb
cs
aam
push
fidivrs
mov
push
push
int
rolb
cmp
outsl
or
push
add
or
je
jnp
sub
cld
icebp
daa
cs
test
sub
xor
xor
into
sbb
popl
shlb
mov
xchg
cpuid
sbb
mov
pop
mov
inc
xchg
das
push
mov
lods
aam
xlat
push
mov
call
out
test
adc
loope
sti
mov
inc
xchg
and
daa
jg
decb
mov
push
cmpsb
cmpsb
aad
mov
imul
push
mov
in
rorl
inc
test
ss
pop
or
lret
addr16
iret
pop
mov
repz
push
cmp
flds
lds
jle
mov
mov
ret
repnz
pop
fisubrl
sub
dec
imul
ret
insb
jmp
stc
sbb
loope
sub
loopne
repnz
xor
out
sti
cmc
mov
stos
shrw
add
pusha
cld
adc
xlat
lret
fsubrl
sub
xchg
gs
jnp,pt
mov
jp
mov
insl
adc
repz
int
mov
out
pop
sbb
les
jp
cmp
test
and
rolb
into
dec
xchg
xchg
mull
cld
pop
por
mov
push
std
call
mov
stos
cli
lock
dec
and
cmp
sti
mov
mov
cltd
arpl
pop
mov
inc
sub
pop
aam
xor
repnz
fstpl
pop
xor
pop
push
gs
test
dec
mov
add
loopne
xor
fimull
enter
cmp
movsb
in
push
fmuls
divl
or
sbb
int3
insb
ja
and
in
leave
xor
xchg
insl
mov
mov
mov
add
lods
sbb
sub
dec
enter
cmp
lret
mov
xor
cmp
mov
sub
call
es
sti
pop
filds
cmovbe
mov
test
dec
ficoms
mov
cmpb
mov
nop
stc
push
sbb
jmp
push
push
push
jge
fstpl
call
push
add
nop
lret
out
sarl
jae
iret
ja
push
nop
mov
dec
jge
inc
jns
dec
neg
cmp
sub
lret
in
popa
call
and
mov
mov
lds
push
rclb
push
addr16
mov
rcr
cmp
lock
nop
or
and
xor
jbe
cwtl
mov
in
in
xlat
and
lock
dec
dec
add
mov
adc
mov
fildll
aad
in
cmp
cltd
lods
ja
sahf
push
mov
popa
mov
mov
outsb
daa
pusha
pop
push
adc
push
push
dec
sub
mov
out
mov
in
mov
jo
or
fcoms
push
mov
in
fstpl
test
imul
lods
gs
jno
ja,pn
add
xor
ret
orl
je
repnz
aad
jmp
pusha
push
pop
sbb
push
jns
clc
jmp
add
jbe
push
push
sub
sbb
xchg
mov
repz
dec
push
sahf
mov
bound
loope
or
dec
movsb
xchg
sbb
fidivs
or
mov
rcll
dec
pop
in
jp
dec
dec
and
push
shll
je,pt
and
int
xorl
and
adc
push
pop
cmc
or
mov
in
xchg
mov
sbb
popa
jo
icebp
ds
out
aaa
xchg
and
jmp
mov
mov
or
dec
scas
pop
into
mov
loopne
into
insb
mov
jmp
cmp
fildl
sub
xor
in
int3
push
test
dec
pop
push
test
scas
mov
push
rolb
sar
xor
jmp
add
stos
sbb
add
movsl
insb
rol
out
pusha
sub
sub
mov
xchg
mov
in
loope
rolb
fs
sub
mov
xchg
add
add
pop
icebp
clc
adcl
cmp
lret
dec
lret
shrl
xor
lcall
daa
cli
imul
xor
xor
imulb
out
enter
cmp
cmc
loopne
jecxz
add
ror
pop
xchg
xchg
aad
testl
xchg
test
ljmp
scas
sub
jmp
icebp
popa
ret
in
push
push
add
jne
sti
subl
inc
fsubrl
loopw
cwtl
mov
xor
std
nop
aam
test
mov
roll
dec
gs
in
das
pop
mov
lds
sub
leave
add
xchg
stos
jmp
sbb
mov
ret
je
sub
icebp
pop
sbb
inc
imul
dec
test
adc
ja
imul
inc
insl
fdivrl
js
dec
mov
and
int
cli
data16
jmp
int3
js
pop
into
loop
push
lods
testb
aad
push
scas
push
and
mov
outsb
push
pushf
adc
and
pop
call
jnp
daa
daa
jle
pop
flds
les
sub
adc
fs
adc
adc
dec
gs
jne
cmpl
fdivl
cltd
pop
int3
sub
pushf
add
int3
and
jg
jp
and
stos
inc
pop
test
sub
sbb
enter
mov
imul
dec
dec
inc
into
jge
stos
fisttpll
iret
loop
push
mov
sbb
fsts
xor
ret
lea
lahf
push
or
out
popf
dec
add
nop
das
or
adc
sti
clc
and
iret
inc
lods
pop
mov
lds
repz
pop
idivb
repz
pop
insb
movsl
les
sahf
adc
dec
iret
outsl
mov
mov
aaa
ljmp
test
gs
ror
dec
xor
dec
cmp
sbb
mov
jecxz
stos
push
test
cwtl
rolb
repz
push
test
mov
jp
stc
pushf
test
addr16
in
mov
arpl
xchg
mov
inc
in
and
push
sub
loopne
push
adc
jecxz
cmp
adc
sar
add
lret
sbb
lds
push
out
dec
pop
sbb
push
xor
adc
xor
sub
or
ljmp
mov
xor
insl
mov
mov
pop
sbb
cmp
or
cmp
adcl
sbb
xchg
es
lods
jmp
jns
adc
mov
call
pop
call
jb
aas
dec
dec
shrb
in
inc
inc
das
sarl
sarl
loop
push
cmp
in
test
add
sbb
scas
xchg
ficompl
mov
sub
dec
adc
popf
sub
or
and
fisttpl
and
loop
mov
and
or
mov
dec
sbb
repz
sbb
xor
mov
rcrl
sbb
imul
mov
and
aaa
adc
xor
pop
xor
js
js
cmpsb
inc
test
xchg
out
ret
adc
inc
fiaddl
in
rcl
xor
fs
lahf
mov
pop
adc
ja
mov
scas
shlb
ss
xchg
xchg
out
sub
je
mov
dec
cmp
add
and
or
inc
int
cmc
fnstenv
subb
xor
loopne
xor
xorl
ror
jp
mov
push
jp
sar
pop
out
repnz
jne
testl
aaa
lret
sub
sub
dec
call
and
dec
xchg
push
or
loopne
push
jge
out
scas
js
jecxz
sbb
mov
mov
mov
xchg
xchg
cmc
jne
mov
xor
xlat
mov
in
adc
push
mov
xchg
iret
inc
or
mov
push
push
daa
aam
ss
std
inc
fdivrp
ret
pop
mov
jno
or
cmp
adc
roll
push
xorl
dec
repz
fstpt
xchg
inc
cmpsl
or
popf
dec
fwait
mov
lahf
sbb
fs
jb
or
call
mov
jg
sti
mov
cmp
fistl
test
stos
sbb
mov
clc
pop
out
ret
mov
cmp
mov
incb
mov
js
xor
mov
in
xor
add
xchg
ficompl
adc
loop
mov
mov
push
arpl
and
leave
gs
push
dec
fs
stos
mov
pop
repz
sub
adc
rcrl
cld
cmpsl
fisubrs
mov
dec
insb
sahf
mov
rol
test
mov
fiadds
xchg
push
in
mov
or
into
hlt
fistps
adc
lret
add
push
mov
fnstsw
mov
jne
stc
xchg
popa
in
jns
mov
imul
push
ret
jl
sahf
pop
test
mov
xor
dec
mov
in
jbe
sarl
fsts
movsb
mov
pop
and
ss
or
mov
in
sti
xor
addl
call
dec
add
dec
cmpsb
cmp
lods
sbb
xor
mov
sbb
dec
cmp
or
jne
ds
cmp
xchg
cmp
inc
aaa
add
stos
insb
imul
ret
outsl
mov
imul
mov
andl
xchg
push
sub
xor
andl
inc
mov
movsl
imul
mov
iret
jae
jnp
push
mov
fadds
pop
clc
les
lret
and
jne
xchg
mov
outsb
js
jle
out
jl
cli
mov
sub
dec
je
cmp
sbb
add
sub
lret
lcall
out
leave
inc
dec
loopne
jne
jb
sti
lds
cmp
mov
mov
dec
adcl
jmp
movsb
cld
shrb
dec
jge
repnz
test
stos
sti
fbld
nop
push
shll
push
adc
data16
adc
xor
in
mov
imul
dec
or
not
xor
sbb
sbb
ret
xlat
cmp
add
outsl
mov
fimuls
bnd
notl
jo
xchg
mov
lahf
sti
or
xchg
lods
mov
xor
xchg
mov
cld
push
cwtl
cmpl
hlt
mov
aas
outsb
xchg
inc
mov
int
pop
mov
cs
ret
inc
jmp
jne
xor
lret
ret
cmpsb
sti
adc
pop
popa
std
cld
jp
xchg
mov
mov
stc
cltd
pop
pop
adc
mov
jb
cltd
cwtl
outsb
jg
aas
stos
push
mov
mov
push
out
mov
xlat
cmpl
xchg
arpl
add
jne
xchg
dec
fstpl
jo
popf
push
jns
push
mov
jp
dec
inc
sub
cmp
xor
mov
push
test
sbb
xchg
add
pop
in
int3
mov
cmp
cmp
movsb
dec
insb
cmpsl
aaa
call
jae
in
cmp
adc
aas
mov
fldl
js
mov
andb
repz
je
push
call
and
sahf
js
pop
sub
mov
dec
xchg
cwtl
cld
adc
rcrb
cmp
outsb
dec
ds
jne
mov
mov
cmp
sbb
mov
es
loope
push
ss
sbb
inc
fisubl
ficoml
pop
ret
add
cmp
inc
sub
out
add
jge
xor
enter
inc
jo
jnp
imul
push
lock
push
sbb
inc
movaps
sub
cmpsb
hlt
adc
pushf
das
fcomps
cmp
add
dec
sbb
add
ret
jle
jnp
pop
lret
jl
sarl
test
ret
repnz
pop
or
aam
insl
mov
aad
mull
outsb
jbe
mov
dec
pcmpeqb
pushf
ret
inc
rcrb
mov
push
pop
mov
sub
xchg
add
shufps
mov
lds
subl
and
popf
test
push
xchg
dec
lcall
decl
mov
or
stc
roll
jle
daa
dec
inc
aas
idivb
out
je
lods
filds
push
push
fxch
inc
rcr
mov
and
dec
jmp
sbb
pop
mov
pop
or
nop
mov
testb
push
aas
scas
add
fisttps
aam
fisttpl
mov
mov
mov
fmuls
xchg
push
or
and
dec
cmpsb
gs
gs
jnp
enter
mov
xchg
mov
mov
mov
xlat
ja
xlat
stos
push
negb
or
bound
aam
xchg
das
dec
jnp
lods
inc
and
sbb
mov
loop
push
push
test
mov
sbb
push
ret
rcr
lcall
mov
cs
call
insb
out
pop
mov
mov
pop
and
paddsb
sub
insl
and
cmpb
icebp
sar
out
and
push
and
pop
xchg
and
push
push
lock
sti
cwtl
add
jne
test
cmp
movsl
in
inc
leave
sub
neg
js
out
push
shrb
pop
adc
sbb
sbb
mov
popf
jecxz
jnp
jo
cmpsl
add
iret
mov
repz
push
inc
repnz
dec
lret
lret
psubsw
push
negb
cmp
fcmovnu
dec
and
popf
stos
test
ffree
mov
cs
lahf
sub
in
add
rcrl
loop
fimull
out
pop
xor
jl
inc
xchg
stc
xor
add
adc
pop
add
cmp
dec
fiadds
stc
arpl
fwait
jb
mov
in
out
testb
mov
xor
inc
inc
movsl
scas
and
dec
outsl
imul
or
imull
fwait
imul
sub
aad
sbb
pop
icebp
add
leave
push
pop
rclb
test
fmulp
popa
cs
mov
jle
jns
repz
rdpmc
aad
repz
sbb
xor
push
mov
and
inc
cmp
add
mov
push
js
sbb
movsl
mov
popa
push
dec
push
or
adc
aad
fmul
nop
or
addr16
sbb
inc
fdivrp
bnd
lcall
and
mov
inc
dec
xchg
lret
in
pop
mov
das
mov
lahf
adc
fwait
dec
lret
and
push
xchg
addr16
int
dec
ja
mov
jl
popa
sbb
lods
aas
xchg
xor
and
insl
jns
fucomp
cmpsb
loope
icebp
clc
cmp
add
add
dec
enter
stos
inc
add
jle
dec
push
pop
insl
int3
fisubs
mov
fwait
cs
js
push
out
jmp
cmp
mov
add
aaa
jp
pop
sahf
jnp
cmpsl
jae
add
jl
cltd
in
mov
xor
outsb
add
mov
push
push
jge
in
push
jno
out
xor
pop
testb
arpl
cltd
lock
sbb
out
add
push
imul
mov
in
loop
repz
adc
mov
xor
push
or
test
lea
mov
aaa
daa
cmp
movsl
outsl
xchg
pop
outsl
imul
or
adc
idivb
cmpsb
addr16
jge
dec
out
push
ret
lahf
sub
add
push
add
movsb
aaa
stos
shll
or
outsl
lods
stc
btr
lahf
popf
inc
test
aad
xchg
cmp
pop
xor
icebp
sub
fcomps
push
inc
mov
js
mov
lcall
mov
lcall
or
fnstcw
sbb
loop
lcall
mov
in
loope
push
fiadds
jno
cmp
out
mov
stc
inc
pop
out
xor
add
rcll
cli
mov
pushf
pop
jmp
and
push
xor
movsl
mov
inc
cmpb
mov
dec
mov
jae
dec
add
imul
sbb
mov
pop
dec
ret
in
lcall
adc
scas
xor
dec
jo
xchg
pusha
sub
inc
push
ret
lods
pop
sbb
xchg
jle
mov
and
dec
aas
xlat
ljmp
scas
rorl
sahf
repnz
mov
mov
inc
lock
add
xor
sbb
xchg
hlt
jecxz
push
or
out
js
lock
xor
jno
xchg
mov
cmp
jb
add
fnstenv
or
lret
pusha
sub
repz
push
lods
loopne
inc
out
adc
jmp
orl
cld
sub
xchg
es
dec
sahf
xchg
cmp
push
jmp
jg
fnstsw
in
mov
je
mov
gs
xchg
dec
pop
shrl
cmpsb
xchg
enter
jg
fidivl
pusha
int3
aas
pop
test
push
test
mov
loope
cmp
sbb
adc
pop
daa
loope
dec
push
pop
incw
mov
fidivl
setge
je
add
jmp
jmp
sarl
lods
out
rcll
xchg
insl
inc
jl
mov
int
fdivrs
mov
bound
xor
mov
aas
inc
lock
shrb
xor
or
and
pop
je
aad
inc
loopne
lcall
jge
push
int
stc
adc
sub
in
cli
out
mov
call
cmp
jle
lret
or
and
neg
std
sub
xchg
insl
fildll
xchg
xchg
jae
jge
cmp
and
lcall
outsl
fdivp
bndstx
rorb
adc
ss
lds
push
mov
push
lcall
sub
cmpsb
cmp
test
out
mov
icebp
test
jne
roll
clc
pop
xor
cli
ds
in
dec
push
repz
jmp
sbb
ficoml
mov
xchg
push
push
mov
mov
or
xchg
iret
push
je
push
mov
stc
out
lds
sbb
xlat
mov
add
lret
fwait
cltd
imulb
lcall
mov
jle
stos
sbb
ret
dec
test
test
cmp
mov
scas
adc
cmp
in
fstp
insl
cmpsl
adc
and
xchg
jecxz
adc
xor
negl
xacquire
adc
adc
lret
and
and
mov
push
addr16
jmp
xor
outsb
jle
movsl
data16
mov
fidivrs
test
andb
and
sbb
xchg
out
lret
add
ljmp
dec
and
loop
push
sbb
shll
lock
cmc
insl
push
adc
pop
fcomps
dec
shrl
test
jno
in
mov
inc
popf
mov
inc
sbb
lret
scas
std
addr16
xor
shrb
cmp
paddusb
cmpsb
pop
cmp
cmp
or
or
in
dec
lcall
mov
pop
mov
insl
mov
xor
xor
sbb
dec
or
or
xchg
pop
lea
dec
aad
push
add
bound
sbbb
sbb
inc
mov
or
iret
sub
and
leave
and
loope
cmc
std
rorb
mov
push
adc
leave
push
mov
test
mov
sti
imul
fs
shlb
mov
test
pusha
cmc
lahf
fidivrs
pushf
je
jmp
mov
das
push
dec
mov
jmp
cmp
cld
bound
je
jns
arpl
sbbb
push
mov
xlat
clc
test
sub
inc
sahf
es
adc
call
mov
mov
scas
hlt
stos
test
arpl
fiaddl
shll
enter
das
cltd
ds
les
ds
fwait
jmp
mov
mov
inc
enter
in
es
xchg
mov
dec
cmpsl
sbb
sub
or
and
mov
xchg
mov
and
imul
leave
jae
mov
sub
orl
pop
and
push
jge
adc
add
popf
add
mov
test
lock
daa
adc
test
outsb
and
in
sti
inc
into
push
stos
shll
sarl
imulb
shrb
mov
hlt
int
fisttpll
aas
mov
or
pop
in
pop
call
mov
lcall
test
cwtl
xchg
aam
addr16
sbb
out
add
in
xchg
inc
xlat
repz
sbb
cmp
and
imul
push
mov
sbb
negl
negl
enter
adc
mov
or
adc
xchg
aad
mov
push
addr16
sbb
cmp
sbb
mov
xlat
mov
test
pushf
testl
lods
out
idivl
add
sbb
sub
fwait
and
cmp
decb
repz
fcompl
sar
subl
out
ljmp
and
lods
or
jns
xor
inc
les
xlat
je
pop
lea
mov
inc
push
data16
aam
shlb
data16
push
cmp
inc
pop
mov
jge
stos
pop
add
xchg
xchg
pop
dec
jmp
adc
ret
sbb
mov
pop
lret
dec
fsubrs
faddp
pop
jmp
scas
pop
mov
jmp
lahf
fwait
mov
push
fwait
inc
mov
rclb
dec
aas
inc
in
das
pop
jo
xor
cmp
pop
sub
out
push
je
popa
sub
icebp
push
mov
out
dec
clc
adc
loopne
sbb
pusha
jmp
mov
out
pushf
adc
aad
adc
xchg
or
repz
pop
in
pop
pop
fildll
mov
aas
popa
lfs
cs
push
in
jns
mov
inc
adc
jbe
aas
cmpsl
ret
dec
dec
sbb
mov
push
cltd
sub
mov
sub
daa
jae
inc
sbb
call
and
add
pushf
aaa
and
jl
push
ljmp
push
mov
cld
call
outsb
insb
gs
cmp
pop
jno
fmull
sub
adc
mov
sbb
in
push
data16
out
inc
ret
rolb
int3
repnz
test
dec
cmpsb
in
cmp
and
aaa
mov
divb
out
or
fstl
ret
mov
mov
movsl
cmp
push
or
mov
test
xor
push
rolb
outsb
pop
add
inc
shl
out
and
inc
ljmp
imul
movsl
inc
jns
call
xor
popa
pop
fstpt
cmp
fldcw
test
mov
repz
call
mov
jne
lret
sub
pop
call
or
xchg
ficompl
fcoms
rorl
mov
nop
popa
outsl
jecxz
call
mov
sub
inc
in
xchg
pusha
enter
xor
mov
sub
jle
lcall
popa
addr16
ret
add
pop
ja
std
sar
jnp
es
pop
mov
push
das
sbb
sbb
aaa
pop
fidivrs
mov
movsb
inc
out
or
fdivr
mov
pop
mov
mov
movsb
sub
mov
enter
stos
popa
and
push
jl
pop
sbb
lds
jp
adc
push
lock
inc
out
inc
inc
sub
dec
pop
in
cmc
into
jmp
jge
loope
xchg
xchg
add
adc
sarl
popf
fbstp
jl
bound
mov
pop
popf
loop
push
mov
idivb
xor
fdivrs
push
push
mov
out
mov
incl
ja
es
mov
out
jae
jle
ljmp
sub
push
mov
mov
ss
es
dec
xlat
ds
adc
jmp
push
jno
leave
jg
flds
scas
push
jg
pushf
iret
imul
jge
sub
jo
sbbb
xchg
jp
dec
mov
jnp
dec
ja
rcll
popa
dec
push
sarb
and
jmp
and
mov
mov
xchg
adc
sti
mov
not
fisttpll
gs
inc
mov
xor
je
jecxz
in
push
fistpll
das
loopne
sub
fwait
pop
push
fldenv
filds
xchg
divb
fwait
lret
inc
int3
ret
lret
adc
out
clc
test
jbe
or
jl
adc
aaa
les
and
mov
orb
pop
iret
xor
ljmp
mov
mov
mov
xchg
mov
adc
aaa
cwtl
pop
xor
sbb
int
out
lcall
repz
push
loope
insl
jns
inc
jb
call
ss
xor
pusha
lds
call
pop
lea
dec
dec
and
cmpsl
fidivrl
push
adc
xchg
mov
test
addr16
adc
and
nop
rorb
shl
icebp
xchg
stos
cmp
hlt
data16
popa
mov
mov
pop
cmpsb
clc
cmp
cmp
add
mov
xchg
push
and
push
js
repz
pop
mov
or
sub
xor
ficomps
and
mov
push
daa
pop
inc
add
push
sub
jne
mov
loop
jmp
pop
enter
inc
xchg
push
xchg
jle
mov
repz
xlat
clc
fwait
mov
pop
inc
jecxz
insb
dec
popf
lods
mov
cmc
cs
mov
push
aam
pop
add
cmp
pusha
loopne
mov
sbb
dec
mov
dec
popf
pop
repnz
jo
fwait
cmp
mov
cmp
dec
cs
pop
pop
sbb
adc
adc
sbb
scas
pop
data16
mov
mov
mov
inc
ljmp
pop
popf
xor
ja
into
jp
or
pop
movsb
sub
mov
xor
mov
lods
xchg
lds
stos
insb
test
adc
rclb
mov
cltd
mov
daa
adc
loopne
jae
sbb
adc
jle
es
mov
cmp
roll
pop
mov
in
test
pop
sbb
xchg
outsb
mov
jg
jbe
movsl
ja
sbb
jle
daa
inc
scas
or
add
mov
xor
outsb
mov
scas
in
mov
or
andl
cmp
inc
imul
jmp
add
jmp
stos
sub
push
fdivrs
jo
pop
fistl
dec
sbb
lea
jbe
adc
cld
mov
sbb
outsl
mov
adc
mov
imul
dec
and
push
mov
mov
shlb
popa
std
js
lods
mov
mov
aam
push
jnp
jg
adc
push
cmp
ja
out
adc
mov
cmp
xor
adc
mov
shll
xor
mov
mov
lea
pop
push
push
sbbb
cld
pop
les
je
mov
xor
mov
adc
outsl
sbb
push
cmp
or
lds
repz
dec
cmp
les
push
test
xchg
sbb
jp
addr16
movsb
pop
mov
sahf
mov
cwtl
faddl
adc
xchg
leave
or
push
andb
or
inc
enter
je
mov
jnp
pop
imul
loope
cmp
and
outsl
out
cmpsl
jno
js
stos
add
jp
pop
mov
in
mov
int3
fwait
or
and
add
push
cld
adc
les
xchg
insl
bound
jp
stos
inc
and
into
pop
popa
in
dec
xor
mov
and
add
mov
mov
adc
mov
push
lods
loop
aaa
dec
das
and
jbe
mov
xor
fwait
jo
pop
mov
mov
cmp
xchg
mov
fisubrs
jg
push
ret
hlt
sti
lods
test
scas
dec
inc
aas
hlt
and
addr16
mov
sbb
adc
in
xchg
ret
mov
inc
xchg
std
fmuls
adc
cltd
sub
leave
cli
jbe
loop
adc
sub
xchg
fdivr
mov
adc
push
sub
dec
sahf
dec
rcrl
stos
mov
shll
test
mov
adc
scas
out
ds
scas
les
mov
push
xchg
bswap
pop
jno
dec
jl
movsl
push
aam
fs
add
pop
stc
push
mov
cmp
or
inc
insb
cwtl
and
mov
pop
push
rcl
fs
mov
add
repnz
lods
xchg
shll
push
mov
fistl
xchg
jns
les
ss
addl
loopne
cli
jg
jl
sub
jnp
scas
pop
or
std
dec
mov
cltd
pop
adc
xor
pop
sub
lods
int
scas
sbb
adcb
dec
sub
add
clc
out
cmpsl
pop
mov
arpl
dec
lret
test
out
cs
loop
inc
sarl
outsb
jne
xchg
insb
repnz
cmp
mov
call
das
mov
fistl
sti
cmp
cmp
inc
std
repnz
dec
and
inc
movsl
inc
xchg
rol
adc
punpckldq
fbld
mov
aaa
dec
ret
mov
fcmove
test
jp
mulb
inc
je
dec
push
xchg
and
sub
cmc
and
in
stc
nop
xor
xlat
repz
frstor
inc
outsb
push
mov
in
push
mov
inc
mov
jb
mov
imul
inc
cmp
bnd
adc
xchg
mov
pop
push
addr16
xchg
std
xchg
sbb
xchg
mov
xchg
clc
mov
mov
push
enter
sarl
xor
int
pop
push
jbe
mov
lahf
imul
pop
flds
loop
sbb
or
adc
or
jns
inc
ret
add
push
dec
jl
jns
cmpsb
lods
fstl
push
sub
lret
xor
xchg
mov
and
rcrb
jmp
daa
aas
adc
cmp
sub
cld
lcall
pop
stos
mulb
mov
inc
pop
jnp
xor
or
subb
jle
addr16
sub
sbb
in
movsb
xchg
add
mov
stc
add
lea
or
test
pop
fiaddl
and
aaa
insl
sub
push
add
arpl
push
sub
cmc
cmp
mov
in
test
xchg
sub
insl
sbb
cmp
insl
sub
fsubrl
iret
pop
divb
inc
inc
mov
cwtl
xchg
xor
add
sbb
clc
iret
jg
nop
dec
sub
into
adc
subl
mov
add
andl
test
fwait
repz
mov
mov
and
out
xor
cmp
xchg
add
shll
jns
fdivrs
sarl
add
mov
push
mov
in
dec
sbb
push
out
mov
xchg
fidivrs
and
or
shll
jne
push
sub
insl
dec
cmp
pop
mov
loope
dec
cmc
mov
inc
enter
notb
mov
xor
loop
pushf
into
push
cmc
sbb
sbb
cmovo
call
pop
mov
int
push
jle
lret
daa
jl
ror
lcall
jp
pop
jno
pop
mov
aam
push
hlt
xchg
add
cs
loop
das
pop
sbb
popa
xchg
cmpl
dec
cs
insb
mov
cmp
sti
add
push
loopne
mov
mov
idivl
push
cmpsb
pop
mov
mov
xor
push
fimull
outsb
testb
cmp
pop
lcall
pop
into
dec
cmpsl
aam
ret
rolb
mov
fwait
enter
mov
push
add
xchg
mov
fldt
mov
add
lods
mov
inc
jmp
hlt
sub
aad
movsl
fmuls
xor
adc
andb
cmp
jle
daa
lahf
and
ljmp
cmp
cmp
mov
outsl
in
out
mov
es
jl
mov
mov
push
lods
cwtl
ds
adcl
pop
mov
scas
cld
adc
add
or
and
cmp
pop
push
scas
cmpsb
push
xor
rcrb
stc
popf
sti
stc
jne
out
jmp
adc
ds
pop
clc
sub
imul
cmpsb
and
mov
loopne
adc
mov
mov
adc
lret
data16
rclb
sarl
mov
scas
sbb
rolb
movsl
int3
xor
mov
inc
test
inc
inc
add
addb
pop
imul
sub
outsb
push
dec
inc
xchg
aaa
mov
adc
push
adcl
mov
ds
dec
lcall
pusha
fstpl
shll
and
pusha
cwtl
cltd
mov
adcl
mov
inc
mov
push
call
xor
stc
lods
enter
mov
pop
out
mov
call
aaa
pop
aaa
out
lcall
call
sub
pop
mov
fs
je
ss
xchg
mov
movsl
or
push
push
lret
push
addr16
movl
push
pusha
fistps
adc
int
pop
push
add
sub
fdivl
in
adc
pushf
and
mov
loop
or
xchg
out
jmp
ret
rorl
pop
ljmp
jae
pushf
inc
mov
fwait
and
pop
mov
inc
add
into
jno
sbb
push
adc
mov
and
mov
mov
mov
push
jp
enter
popa
mov
mov
inc
ret
mov
sub
sub
and
or
mov
adc
jg
jb
jle
inc
cmc
xchg
loopne
leave
sub
test
jb
jmp
sub
cmpsl
test
xchg
jp
fsubl
lods
cvtps2pi
and
cmpsb
xchg
in
push
mov
xchg
cmp
movsb
dec
je
insl
dec
add
mov
add
test
test
stc
nop
cmc
push
mov
sbb
aad
aaa
cmp
jo
mov
enter
cmp
cld
in
pop
mov
test
jp
addr16
mov
out
push
sub
xchg
test
fildl
out
inc
jg
jg
aaa
jg
iret
out
cmc
jle
repz
xchg
dec
xor
xor
lahf
addl
sub
iret
pop
jb
cwtl
outsb
outsl
push
loope
imul
mov
stos
push
les
andl
pop
and
add
inc
xor
mov
shrb
pop
or
and
or
and
sub
and
jle
test
jmp
cwtl
fdivs
jmp
inc
outsl
mov
sub
cltd
push
sbb
xor
mov
movsl
scas
pop
decl
outsl
aas
int
sbb
inc
jno
pop
scas
inc
mov
es
lock
jle
scas
cmp
cmpsl
movsb
cmpsb
pop
and
mov
push
insb
out
pop
lock
sti
cmp
and
mov
xor
js
lahf
fwait
icebp
push
test
mov
jo
leave
insb
loop
push
dec
push
push
push
jge
sub
cmc
mov
addr16
mov
mov
shrb
lahf
movsb
in
adc
cmp
jne
cmc
dec
out
or
imul
enter
les
call
cwtl
ret
aaa
pop
dec
pusha
xchg
mov
dec
pop
sti
ficomps
arpl
lock
and
or
adc
movsb
and
mov
sbb
pusha
sub
lahf
mov
mov
rcr
jae
sub
jmp
roll
dec
push
pop
mov
jle
fs
jp
dec
cmp
cs
movsl
mov
loop
sub
pop
cmp
ficomps
movsl
orl
or
ret
or
addr16
addr16
int
pop
mov
test
or
aas
shl
sbb
push
bound
scas
add
sbb
cmp
pusha
lcall
leave
pop
jb
pop
shr
cmp
ljmp
mov
cmc
imulb
ja
inc
sbb
or
cmp
into
cltd
mov
jno
pushf
or
xchg
test
pop
mov
adc
add
xchg
xor
jae
in
stc
mov
mov
mov
sbb
adc
inc
aad
push
ret
inc
sti
and
into
and
out
add
fidivl
dec
das
jmp
hlt
jp
enter
pop
and
mov
jp
ds
sbb
imul
adc
test
sbb
scas
mov
inc
xchg
xchg
es
rorl
xor
cmp
xchg
cmp
jmp
bound
in
ja
ds
test
jge
sbb
ja
lds
adc
nop
inc
iret
mov
mov
cmp
stos
lods
xor
and
pop
sub
ja
jo
stos
dec
cmpsb
push
cmp
inc
call
dec
mov
sub
das
in
push
add
pop
sti
andl
cmc
rol
xchg
shl
test
jno
iret
sub
adc
jg
out
pand
xchg
add
out
inc
imul
mov
inc
subl
cmpsb
lea
sub
cwtl
js
fnstcw
mov
jl
popa
pop
and
fisttpll
cld
cmc
or
decb
mov
idivb
mov
xchg
lock
add
mov
sbb
pusha
push
mov
add
js
scas
mov
fwait
pop
mov
cmpsb
ret
loope
rcr
cmp
lret
jae
mov
data16
movsb
pop
dec
mov
les
cmp
push
cmp
jno
adc
or
jne
lock
inc
imul
and
lret
dec
push
and
out
ret
arpl
int3
pop
dec
lods
fldl
mov
fnstsw
mov
or
jp
jmp
fwait
push
inc
lea
pushf
xor
jbe
lds
inc
inc
ss
mov
jo
fidivrs
xchg
sub
jae
cwtl
stos
inc
fmuls
es
cmpsb
aaa
and
xlat
add
lods
into
push
decb
in
inc
jge
lret
loop
pop
aaa
mov
inc
popa
fcoml
scas
mov
negl
mov
fnstsw
sti
jge
push
clc
es
jmp
stos
stc
les
cmp
cld
xlat
out
inc
mov
repnz
sbb
mov
cwtl
imul
fcomps
xorl
cli
dec
mov
movsb
dec
push
inc
cltd
scas
jg
stos
lods
jns
mov
shll
sub
inc
jmp
repz
push
movsl
push
fdivs
cmp
mov
inc
push
sbb
mov
dec
lods
nop
inc
adc
sbb
rcrl
sbb
inc
ss
sbb
add
fwait
mov
dec
xchg
inc
cld
inc
sbb
loopne
movsl
adc
xor
add
cmovo
mov
fstl
mov
ret
push
sti
mov
jmp
cmc
cmpsl
jmp
repnz
jno
andl
fchs
sub
mov
cmp
xchg
push
sbb
nop
jmp
pop
lock
out
mov
adc
mulw
popf
inc
stos
xor
dec
addl
scas
aam
fwait
rcr
popf
lds
push
push
sub
xor
sub
cmp
dec
mov
in
jns
xlat
xchg
jecxz
jp
cmpsl
xchg
les
int
scas
testl
xchg
inc
shrb
mov
rcrl
lds
lret
inc
and
ret
pop
jo
sub
inc
stc
push
outsb
xchg
pusha
in
pop
push
mov
jno
jle
int3
push
pusha
in
in
roll
jo
push
pop
orl
inc
xor
sub
aam
lds
testl
lods
sbb
call
cmp
sub
loopne
mov
ja
pop
cmp
mov
xchg
and
daa
cmp
ja
ss
pop
push
pop
stos
dec
icebp
dec
fstl
dec
xchg
es
xchg
cmp
pop
cmp
or
enter
mov
xchg
mov
inc
stos
mov
add
push
and
and
jle
arpl
and
xchg
jmp
in
pop
inc
sbb
sub
mov
rcrl
loopne
pop
mov
subb
mov
shlb
inc
ror
cmpsl
fistps
add
lahf
add
pop
nop
ja
stos
stos
stos
jmp
cs
mov
or
mov
sar
dec
pop
or
cmp
pop
xchg
xor
mov
fisttpll
jo
mov
push
dec
add
xor
jp
jnp
call
jle
test
dec
xor
jns
int3
xor
xchg
inc
sub
cmpsl
insb
jo
xchg
add
jne
pusha
dec
push
mov
aad
mov
out
xchg
xor
in
repnz
paddusw
fnsave
adc
ljmp
xor
pop
push
nop
popf
xchg
stos
negl
push
or
xchg
push
ja
subl
dec
mov
clc
xchg
dec
dec
scas
adc
sbb
repz
clc
add
negl
cmp
or
xchg
push
pop
in
adc
push
lds
hlt
lea
iret
loopne
cmp
pop
adc
mov
stos
inc
in
xor
in
mov
jmp
mov
cmpsl
mov
mov
jo
enter
ret
adc
lds
lea
lahf
fidivl
scas
jg
or
dec
inc
fiadds
sub
ret
stos
fbld
inc
inc
xchg
lea
mov
adc
jbe
mov
rcll
push
inc
inc
fndisi(8087
adc
lods
jecxz
fwait
es
outsb
mov
incl
mov
and
jnp
cld
mov
pop
cmp
push
adc
aaa
fldenv
iret
rep
in
mov
pushf
imul
push
pop
push
std
hlt
setg
mov
outsb
add
adc
inc
xlat
jno
aaa
adc
jl
xchg
je
sub
gs
scas
cltd
push
cmp
or
es
jecxz
sarl
shlb
xchg
test
je
aas
into
mov
or
adc
pop
mov
scas
sbb
and
jg
adc
pop
fwait
xchg
push
es
int3
testl
dec
dec
dec
lret
ret
icebp
lea
and
cltd
pushf
pop
mov
inc
sub
mov
jns
adc
jnp
ficompl
sub
push
cmpsl
adc
mov
lock
mov
and
test
xchg
lea
and
inc
scas
mov
or
dec
stos
dec
mov
xor
daa
fs
or
negl
cmp
lret
lds
sbb
in
add
scas
out
sti
xor
outsl
icebp
aam
push
lods
repnz
loop
mov
or
cmp
mov
mov
and
push
pushf
cld
pusha
hlt
loop
mov
fbld
mov
mov
dec
push
insl
xor
cmp
push
je
pop
jecxz
pusha
xor
dec
xchg
stc
or
mov
icebp
mov
aam
ret
ficomps
fstps
or
mov
imul
testl
mov
rcrl
mov
mov
mov
cmp
lahf
push
cmpsl
ret
xor
push
dec
or
je
leave
sub
mov
jl
jbe
add
xchg
xor
stos
cmpsl
shrb
hlt
mov
scas
jae
outsb
sbb
or
jb
in
mov
ljmp
push
pop
scas
xor
mov
sbb
jle
in
loope
xor
mov
jecxz
scas
inc
lret
push
or
gs
decb
or
mov
test
imul
out
pop
sub
fsub
shl
dec
add
je
mov
add
cmpsl
xchg
cmp
jecxz
xchg
decl
inc
fwait
push
hlt
mov
or
and
or
adc
js
dec
push
jmp
cmp
xchg
jg
add
mov
xor
mov
loope
push
jp
hlt
dec
sub
repz
outsb
inc
mov
dec
pop
mov
in
and
ds
rclb
pop
add
add
sbb
mov
mov
sbb
cmp
jmp
lea
cmp
mov
test
fisubl
sub
fldcw
push
inc
hlt
ja
cmp
in
inc
mov
pop
adc
mov
movsb
int
xchg
cltd
cmpsl
sub
inc
int3
shrb
cmpsb
test
xor
loope
imul
jp
movsl
xor
lds
lea
es
cmpsl
addr16
mov
test
sub
add
mov
pop
repz
push
pop
inc
mov
sbb
nop
clc
mov
out
test
out
sbbb
add
popf
mov
sub
cmp
movsb
ret
stos
add
hlt
and
mov
pop
mov
mov
xchg
sahf
jg
sub
sub
icebp
and
xchg
insl
nop
loop
movsb
push
js
imul
and
push
popf
sub
mov
mov
jg
dec
add
sti
loopne
push
add
pop
jo
mov
mov
mov
cmc
inc
aas
adc
push
pop
xor
ficompl
ljmp
mov
inc
jge
cmp
into
dec
stos
or
arpl
push
jp
mov
fwait
inc
pop
hlt
cmp
mov
lods
aas
lret
cmc
add
cmp
lea
xlat
fs
xchg
sti
cmp
call
sub
sub
loope
lods
es
scas
cmp
imul
aas
push
pop
sbb
pop
jo
ds
cmp
xchg
pop
mov
mov
jge
popaw
mov
sub
in
dec
cmp
pop
test
test
loopne
mov
mov
in
sub
add
push
dec
mov
pop
fistpl
xchg
or
addr16
and
dec
jp
outsb
gs
sub
push
jmp
xlat
lock
jl
insb
jo
cmp
loope
jg
or
add
dec
test
inc
xchg
inc
mov
imul
aad
bound
or
enter
lea
xchg
dec
xchg
sub
scas
mov
pop
mov
sub
lret
pop
loope
or
adc
pusha
test
in
shr
lcall
rcrl
xor
xchg
pop
rolb
jg
mov
sbb
test
jmp
fcomip
sysexit
add
cmp
shlb
push
push
jge
pop
mov
xor
push
insb
bound
mov
mov
adcb
test
sarl
lcall
mov
push
stos
mov
mov
daa
dec
aam
add
mov
sub
shlb
aaa
ljmp
cmp
inc
out
push
push
and
out
pop
pop
jns
arpl
insb
cmp
add
xlat
mulb
sbb
shll
jnp
cmp
or
add
cmp
pusha
mov
jl
aaa
out
ficoml
arpl
push
jns
xorl
or
sbb
ljmp
and
sarb
loopne
jecxz
fnstcw
adc
ficompl
shll
icebp
or
mov
cwtl
inc
mov
into
sbbb
add
repnz
mov
xchg
lahf
jne
jo
add
leave
mov
xchg
mov
push
filds
lock
xor
into
mov
and
dec
sub
mov
adc
fstpt
mov
xchg
jbe
ja
enter
inc
call
in
pop
aad
cltd
or
mov
aad
dec
mov
hlt
add
sbb
fdivs
dec
xchg
add
and
sar
xchg
xchg
sti
dec
dec
jnp
jp
jno
xchg
clc
or
adc
sub
cli
cmp
mov
or
add
fs
mov
sub
int3
xchg
pop
mov
xchg
lret
sub
or
lret
std
sti
mov
mov
fcompl
fnsave
adc
fiaddl
pop
dec
push
push
fnstsw
fcomi
push
pop
mov
add
cvtpi2ps
out
push
cwtl
mov
aas
xchg
fsub
mov
jne
es
aaa
cwtl
test
xchg
sbb
sub
mov
mov
add
cwtl
sar
stos
cwtl
push
loope
jo
cmp
or
inc
mov
int3
jl
nop
pop
std
mov
jge
sub
arpl
mov
dec
pop
jnp
jecxz
fdivrl
xchg
add
sbb
int
in
lcall
cmp
addb
ret
iret
out
imul
sub
out
add
sbbl
xchg
shlb
sub
cwtl
stos
mov
xor
lods
pop
pop
insb
push
cmp
cmpsl
enter
pop
xor
add
clc
jnp
in
fcmovne
and
or
pop
fs
out
addr16
adcl
or
je
fcmove
mov
sub
dec
sub
adc
or
inc
popf
xchg
jmp
dec
neg
pop
mov
cltd
mov
and
in
mov
pop
sub
or
rorb
out
or
jle
call
idivb
ja
xchg
out
loop
mov
mov
or
pop
dec
arpl
pop
mov
push
out
cmp
and
sub
mov
mov
out
int3
push
xchg
jle
cmpsb
push
dec
inc
sahf
int3
pop
hlt
or
pop
out
xor
mov
adc
rolb
outsb
movsl
inc
fnsave
popf
add
mov
adc
pop
f2xm1
call
xor
jb
jmp
add
dec
popf
lock
fstpl
or
xchg
add
movsb
dec
dec
insl
push
pop
icebp
jecxz
push
loope
jns
xlat
idiv
jb
out
call
or
adc
in
xor
inc
sbb
in
xor
jns
clc
mov
xchg
imul
mov
rclb
cmpb
and
sbb
arpl
daa
pop
pop
cwtl
int
and
inc
call
lods
aaa
repz
or
lret
inc
popa
add
scas
or
ret
dec
bound
add
or
jge
or
ret
inc
or
sahf
aam
cmc
sbb
hlt
les
xor
lods
out
imul
sbb
fs
adc
test
or
cld
into
and
mov
insl
and
cmp
jns
jg
cmpsl
sub
sub
mov
je
dec
mov
in
and
xor
pop
dec
jno
jp
add
fmul
lret
fwait
add
jne
aad
orl
jmp
sbb
mov
int3
push
fistpl
decl
fsubr
pop
scas
outsb
icebp
lret
jns
jmp
scas
xor
pop
movsl
lcall
shll
cltd
dec
rcll
mov
enter
push
shrl
push
mov
cmp
mov
pop
mov
add
inc
repz
push
sub
mov
fidivrs
cli
xchg
lods
pop
loopne
cmp
sub
aas
gs
adc
idivb
and
sti
xor
ds
add
mov
rcrl
out
mov
and
jnp
xchg
xchg
test
int
ss
sub
adc
stos
int3
repnz
stc
dec
xor
mov
fstpl
cwtl
loope
cmp
pushf
sub
in
nop
mov
sbb
and
jmp
loop
jp
pop
mov
into
insb
movsl
adc
sbb
dec
ror
repz
imul
push
pop
and
mov
popf
inc
movsb
mov
sub
cwtl
adc
subb
adc
pushf
sbb
sbb
xchg
add
imul
sub
push
jg
cmp
ret
jg
jbe
and
jno
lock
mov
pop
push
and
lock
cltd
pusha
scas
mov
or
xor
in
and
or
sbb
lcall
stos
pop
leave
outsb
jnp
fnstenv
push
fimull
les
pop
sbb
adc
push
loope
push
loope
or
jne
cwtl
arpl
int
cmc
testb
cmp
cltd
xor
shrl
movsl
and
or
fsubl
push
test
mov
mov
or
out
pop
test
xchg
sbb
in
mov
and
das
leave
faddl
jbe
in
mov
gs
xor
adc
popa
fcmove
test
cmpsl
mov
out
aaa
cmp
clc
mov
loopne
sub
std
pop
incl
mov
and
leave
insl
nop
ret
sbb
lock
dec
xchg
mov
test
stos
sarb
or
jb
out
dec
jl
in
cld
cmp
add
sahf
div
mov
xchg
pop
rcr
mov
shl
mov
ficoml
dec
add
cltd
dec
pop
mov
mov
cltd
orb
jecxz
inc
fucomip
xorb
scas
mov
xor
pop
icebp
sti
outsb
inc
dec
outsb
mov
lods
into
push
pop
cmp
cmp
jb
bound
sub
stos
cmp
mov
jbe
out
push
sbb
mov
sbb
mov
aaa
push
and
inc
inc
sbb
sbb
jb
daa
push
dec
enter
adc
mov
aam
push
testl
sub
xchg
fwait
xchg
or
mov
std
jge
bound
insl
in
fs
mov
ret
inc
out
cmc
jno
jg
add
mov
punpckhbw
mull
rcrb
cld
aas
adc
movsb
clc
cmp
test
xchg
jno
leave
loopne
push
xchg
aad
pusha
and
ljmp
and
inc
mov
cs
jl
cmp
int3
divl
mov
push
pop
stc
cmp
jo
lock
sbb
inc
push
imul
les
ja
inc
movsb
sub
movsl
in
dec
enter
xchg
rcrb
xchg
cmpsl
dec
out
aam
in
lahf
fwait
xchg
add
mov
jnp
xchg
movsl
addr16
jp
ds
jmp
jp
outsb
jo
xchg
in
outsb
insl
or
pop
inc
xchg
lock
iret
outsb
stc
fcmovnb
out
scas
or
and
ficoml
test
fs
stos
add
mov
push
lahf
int
fidivrl
imul
jp
jns
add
out
bound
idivb
test
xor
mov
jp
and
fsubs
inc
inc
adc
iret
push
inc
adc
and
xor
pop
dec
push
mov
xor
cmpsb
in
es
ljmp
pop
pop
xor
mov
sub
cmp
lods
jne
cmpsl
sub
cmp
dec
cltd
stos
sub
jno
jmp
push
push
xorb
or
scas
mov
xchg
mov
add
jns
jg
push
int3
push
imul
inc
imul
jmp
and
or
or
leave
jge
mov
imul
inc
mov
test
adc
mov
push
scas
addr16
or
mov
and
and
xor
cmp
pop
aad
inc
fimull
pop
insl
xchg
es
or
cmp
push
push
nop
out
imul
and
mov
xor
xchg
cmp
push
xor
das
xchg
add
lds
insb
arpl
lea
lock
adc
ss
lods
add
js
dec
testb
push
stos
sahf
dec
sub
int3
stc
xorl
jle
mov
sub
dec
and
ljmp
mov
and
dec
dec
pushf
rorb
xchg
repz
stos
popa
mov
xchg
fsubrs
xor
rorb
addl
jbe
out
pushf
add
sub
cmp
aad
and
int3
sahf
insb
pop
sahf
adcb
outsb
mov
mov
and
mov
and
test
stc
or
bound
addr16
bound
lahf
adc
add
xchg
call
cmpsb
inc
mov
in
inc
lea
xor
aam
iret
in
stos
cmp
sub
sub
sub
mov
push
shrb
test
push
addb
mull
lcall
and
shl
or
test
roll
lcall
fcoms
cmp
mov
imul
scas
cmpsb
ret
jo
or
inc
in
push
cmpsl
lea
xchg
out
pop
push
shll
cs
lods
aaa
xchg
lods
adc
and
cmp
out
fmull
cmp
outsb
pop
dec
push
fdivs
jne
fucomip
test
push
das
pop
addr16
jno
sahf
gs
aam
xchg
out
imulb
out
into
xorl
bound
mov
subl
mov
imul
mov
xchg
mov
xchg
outsb
daa
cmp
lods
sub
sbb
fs
mov
sub
loop
cmp
out
bound
loopne
fwait
cmp
negb
and
mov
or
or
idivl
mov
je
cli
push
jle
and
push
js
adc
out
es
lret
movsb
lahf
pop
add
dec
dec
xor
push
jle
xchg
sub
push
sbb
sbb
fcomps
test
sbb
in
call
arpl
mov
add
sub
jne
shrb
adc
imul
mov
adc
shrb
lahf
pop
or
jmp
dec
fcoml
mov
out
inc
out
pop
jbe
jecxz
and
incb
dec
sub
nop
mov
jb
jno
jnp
sub
lods
xchg
ja
jo
sarl
mov
pop
xlat
cmp
sub
iret
inc
mov
testl
ss
ja
cli
lcall
adc
push
and
bound
mov
inc
or
sbb
cmpsl
xchg
mov
and
mov
test
stos
jb
and
aas
cli
sbb
pop
fidivrs
dec
sbb
mov
sub
mov
mov
pop
mov
pop
scas
inc
xor
mov
cmp
cmp
add
xchg
sti
inc
cmp
lds
inc
stos
mov
shl
fimull
pop
mov
dec
xor
mov
pop
fs
mov
insb
mov
pop
out
out
jle
out
lods
test
aad
and
pusha
mov
pop
imul
jno
lea
sbb
cmpsl
mov
daa
xor
mov
int
sbb
mov
jne
add
imul
push
jae
dec
iret
in
mov
xor
cmp
push
mov
jbe
inc
mov
mov
sahf
ljmp
adc
add
cmpl
jae
sahf
xor
in
in
cmpsl
and
sub
mov
jmp
cs
dec
sub
sub
aad
out
in
movsb
inc
jl
mov
jg
stos
sbb
cld
adc
cs
out
daa
imul
aam
xchg
imul
xchg
mov
dec
filds
repnz
mov
stos
mov
and
inc
mov
mov
push
inc
sub
in
movsl
adcb
adc
mov
aad
repnz
dec
fdivrs
mov
sbb
xor
jmp
jbe
add
push
flds
xlat
stos
xor
sub
pop
xchg
outsb
inc
cmp
shll
cmp
test
mov
dec
sbb
pop
mov
jnp
test
mov
addr16
mov
mov
inc
add
xor
mov
cltd
mov
xchg
mov
mov
pop
adc
scas
cmp
and
outsb
jmp
outsb
int
cld
or
fisubl
sub
dec
xor
or
popf
ret
fcmovb
push
aaa
sub
mov
insb
pop
enter
rcl
std
pop
cmp
xchg
jcxz
repz
mulb
outsl
jns
sub
sub
xor
push
ror
jns
clc
out
push
fwait
aas
dec
push
shl
inc
mov
scas
sbb
jns
dec
and
mov
bound
push
je
hlt
std
jae
and
mov
mov
xor
ret
roll
jno
or
lcall
xor
testb
cld
sahf
and
and
mov
mov
rorb
mov
call
sbb
stos
sub
adc
or
push
test
mov
stos
cltd
out
or
ret
cmpxchg
cmp
push
popf
mov
pop
push
mov
mov
ja
lret
ljmp
push
adc
test
and
sub
mov
add
fisubs
in
or
data16
in
dec
pop
cmp
in
push
adc
push
inc
mov
je
cmp
mull
xchg
in
mov
or
sub
fs
cmp
push
sbb
xchg
test
fidivrl
jne
mov
and
jmp
shrl
adc
jns,pt
pop
scas
fs
pop
mov
mov
push
pop
stc
sub
ficompl
in
aas
aaa
addr16
fimull
sbb
sbb
jns
fdivrs
fstl
mov
mov
lret
mov
and
cs
in
mov
mov
xor
stc
pop
push
mov
lret
insl
or
pop
lea
cld
lea
xchg
lret
or
mov
lcall
pop
fnsave
into
arpl
inc
push
cmpsl
loope
xrelease
adc
aad
pop
jg
xlat
fisubrl
fstl
inc
loop
int
mov
push
outsl
mov
mull
inc
mov
inc
mov
mov
mov
inc
ret
cmpsb
je
sbb
push
or
sbb
mov
out
cmp
inc
push
jmp
mov
mov
xchg
pop
test
sub
adc
repnz
outsb
dec
int3
lahf
addr16
test
popf
shrl
imul
pushf
pop
fcomps
jo
xlat
fidivs
lock
lahf
in
or
call
sbb
sti
jne
mov
jge
add
adc
pop
outsl
insl
loopne
pusha
fmuls
cld
std
lods
dec
outsb
popf
adcl
clc
push
add
fs
lret
mov
int3
enter
xchg
dec
stc
xor
into
addr16
mov
jl
ljmp
mov
das
cltd
decb
xchg
mov
cmpsl
cmp
cmpl
push
mov
scas
idiv
and
dec
mov
pop
push
in
movsl
gs
pop
mov
pushf
xchg
std
ljmp
push
and
sub
in
mov
or
inc
pushf
push
inc
ja
hlt
xor
push
dec
pop
nop
mov
nop
mov
xor
xor
test
rorl
jns
or
out
add
jbe
mov
mov
adcl
sbb
pushf
xor
aaa
shrw
mov
lock
into
mov
mov
sbb
jp
mov
jg
repz
stos
cmp
xor
and
mov
mov
test
hlt
push
idivl
enter
mov
nop
lods
jne
inc
sub
test
cld
mov
std
movsl
cmp
and
inc
xchg
xor
and
arpl
xor
and
xchg
adc
test
add
jnp
xchg
cli
fdiv
xchg
addb
dec
add
push
ja
jns
test
pop
xchg
mov
lret
jmp
out
adc
mov
movsl
mov
jae
mov
and
fucomp
dec
bound
jb
push
daa
lea
sub
scas
dec
adc
das
and
jp
pop
push
xchg
inc
jb
in
out
or
sbb
jae
xchg
add
fldl
mov
jnp
pushf
das
mov
or
add
out
pusha
daa
int
test
dec
push
lds
sbb
xor
js
jb
mov
dec
cwtl
or
mov
imul
xchg
addr16
pop
cmp
add
sti
xlat
pusha
and
cmpsl
les
xlat
mov
loopne
fistps
cmpsl
jnp
fidivs
test
fs
push
and
push
or
cmp
and
cmc
stos
pushl
dec
jno
lret
out
mov
pusha
in
mov
xor
inc
cmpsl
inc
enter
sahf
call
jns
inc
stc
ds
pusha
test
iret
adc
sub
dec
lds
leave
sbb
and
lds
jp
shl
movsb
xchg
repnz
xor
xor
popf
adc
cmp
xchg
bound
sub
in
xor
dec
mov
enter
fsubs
pop
mov
jmp
insb
jns
out
dec
fwait
push
fwait
dec
push
add
adcb
jg
or
lods
sbb
xorl
lea
pop
insl
adc
xchg
das
int3
jle
cmp
mov
jb
cmpsl
or
add
lret
and
inc
je
dec
add
adc
aaa
xchg
jo
xchg
lods
push
xor
add
ret
sub
es
mov
inc
push
addr16
dec
add
mov
or
imul
jb
das
jg
mov
and
fcomp
out
adc
cmp
push
mov
rcll
lods
cmpsb
loop
stos
or
inc
mov
popa
call
mov
pop
into
scas
jl
fwait
scas
pop
push
roll
in
pop
sarl
addl
je
lret
mov
pop
fsub
shl
loop
jo
imul
sub
mov
push
mov
mov
sbb
and
push
push
jnp
pop
xor
mov
sbb
test
mov
pushf
hlt
ss
sti
or
or
sbb
das
sub
in
lea
popf
xorl
push
enter
jle
inc
add
in
mov
xchg
out
sbb
push
ss
inc
or
scas
sahf
sbb
mov
int
dec
leave
mov
ret
fsubrl
lea
adc
mov
mov
adc
movsb
ljmp
add
pushf
mov
xorb
push
aas
xor
or
icebp
and
pushf
inc
jne
xorl
lcall
push
rcl
lret
and
cmpl
dec
adc
mov
or
shlb
dec
sub
cmp
jle
aas
xchg
icebp
jae
pop
adc
dec
loop
test
aaa
jp
push
cmp
iret
mov
cmp
jbe
sti
jno
dec
int3
enter
rorb
daa
popf
cmp
test
cmp
jno
scas
aas
hlt
in
dec
cmp
in
movsl
mov
mov
add
mov
insb
in
or
daa
idivl
arpl
jo
or
mov
or
dec
sbb
mov
lahf
notl
dec
sub
or
in
ja
sub
in
call
mov
xchg
mov
aam
vpunpcklbw
pop
adc
push
into
leave
pushl
rclb
sbb
and
lahf
cmp
test
jno
lods
and
mov
xor
stc
in
sbb
lea
cmpl
cmpsb
mov
sub
clc
inc
ror
mov
mov
xchg
mov
aad
jp
dec
adc
test
cli
jo
popf
pop
xor
pop
shlb
fisubl
lock
inc
sub
xor
push
mov
hlt
pop
pop
adc
cmp
xlat
jp
mov
xchg
jp
mov
out
add
test
and
pop
push
cmp
xor
xor
aas
jmp
add
sbb
bound
fistps
sahf
outsb
mov
cmp
test
xchg
mov
leave
add
xchg
fsubrl
pop
dec
fcompl
sub
inc
jbe
sbbb
push
push
testl
pop
cs
sbb
cs
lret
jnp
cmpsl
sbb
cli
insl
jo
int
insb
push
test
inc
fldt
xor
jo
inc
xchg
ret
fst
pop
fs
sub
mov
xchg
loop
out
lds
push
lock
icebp
inc
loopne
jno
cltd
push
stos
lea
lret
mov
pop
test
sbb
jle
popa
add
sbb
xchg
jne
xchg
jle
imul
sbb
imul
or
out
jnp
cmp
addr16
fiaddl
inc
roll
fsub
cmp
sub
leave
fnsave
popa
add
ss
movsl
dec
fisubl
inc
addr16
mov
rsm
movsl
rcll
leave
xor
jb
js
call
in
popf
fwait
inc
sbb
mov
and
popl
inc
inc
cmp
lahf
movsl
xchg
pop
jae
adc
pop
std
call
push
pop
jle
pop
stc
dec
in
in
or
movsl
sub
sub
or
in
lods
and
imul
jne
xlat
cmp
lock
ret
and
jae
int3
aaa
sti
sbb
iret
mov
aad
out
sub
daa
inc
dec
sbb
loopne
adc
cs
lcall
adc
mov
mov
je
popa
popa
pop
cmp
enter
adc
mov
jne
inc
pop
sub
jb
roll
lock
fistpll
sete
inc
inc
add
mov
or
push
xchg
jl
cs
inc
hlt
repnz
aaa
mov
mov
cwtl
movsl
push
rolb
jnp
cmp
add
adc
mov
or
ljmp
cmp
mov
sub
aaa
add
jnp
or
inc
xchg
mov
dec
mov
lcall
mov
insl
pop
jne
std
pusha
add
add
je
shlb
inc
push
mov
and
adc
jb
das
lret
addr16
pop
pop
dec
test
nop
int
and
adc
push
mov
out
icebp
pop
sbb
xor
mov
movsl
cmp
dec
mov
and
jl
clc
les
mov
ja
mov
lcall
or
jmp
xor
add
dec
cmp
ret
in
out
insl
cmp
arpl
or
rclb
fcomps
add
cmp
test
mov
out
or
inc
dec
add
pop
sub
xchg
jg
sbb
inc
decl
out
inc
clc
movsb
xchg
icebp
mov
push
pushl
lods
push
movsl
dec
inc
mov
dec
std
cli
inc
clc
mov
adc
jecxz
loop
sub
mov
leave
jecxz
xlat
sbb
mov
imul
outsl
adc
mov
and
sub
mov
hlt
bound
call
arpl
dec
ds
mov
push
fmull
and
adc
aam
scas
mov
sti
cmpsb
lea
dec
ljmp
scas
and
outsb
push
push
scas
mov
sub
jecxz
lods
add
mov
jmp
pop
xorb
aad
testl
ret
rcrl
jnp
inc
call
call
mov
imull
out
pop
mov
jns
das
mov
xor
pop
leave
scas
stos
pop
hlt
daa
fimull
lock
repnz
xchg
lock
addl
sub
mov
adc
jo
jbe
mov
lods
pop
movsl
repz
jbe
push
aas
mov
dec
daa
in
pop
xchg
push
sub
lods
pop
ja
mov
add
mov
mov
rolb
jg
ljmp
std
pop
fidivrl
js
bound
dec
cmp
adc
movsb
scas
mov
cmpsb
mov
arpl
test
je
lods
mov
dec
test
jb
int3
cmc
mov
dec
xchg
scas
cmc
add
jno
mov
mov
dec
and
push
ss
xchg
scas
jbe
int
mov
push
push
fwait
adc
inc
mov
call
xor
pusha
out
xor
adc
jl
push
sub
push
ret
hlt
push
xchg
pop
popa
xchg
jbe
lret
ljmp
scas
xor
bound
mov
lret
int
mov
sahf
aaa
sarl
mov
mov
cmp
out
push
lock
dec
insl
stc
jo
xchg
fwait
shlb
gs
sub
ljmp
nop
cwtl
fcmovb
scas
call
rcl
stos
mov
sbb
cli
cmp
mov
or
daa
cmpsl
cmpsl
insl
scas
pop
cli
inc
pop
mov
das
popa
fimull
cmp
mov
fstpl
jmp
xor
push
add
in
incb
or
sarb
jle
xor
cwtl
mov
lock
out
aam
pushf
push
push
cmc
aam
bound
shll
adc
jbe
jno
mov
cmp
aad
sarb
sub
ret
jnp
pop
push
fisubs
sub
cmp
movb
out
ret
test
movsb
fcom
dec
sub
jge
sbb
xor
cmpb
cltd
icebp
push
aad
movb
sbb
cmp
pop
mov
call
rcrl
orl
mov
cmpsl
mov
rcr
movsb
jl
jmp
mov
gs
fdivr
inc
add
dec
and
int3
cld
testl
enter
and
insb
adc
inc
dec
mov
dec
mov
das
push
jae
push
mov
cmp
les
xchg
xor
mov
cmp
iret
aam
arpl
mov
loop
fadds
or
nop
pusha
xchg
mov
xor
hlt
push
call
outsb
jle
hlt
sarl
fadd
data16
lds
sub
dec
cld
andb
ja
or
sbbl
cmp
popa
nop
shrl
repnz
popa
repz
jecxz
inc
mov
jo
sti
xchg
and
out
mov
mov
adc
rcll
inc
jno
mov
mov
imul
cmp
adc
jmp
dec
jl
popa
jns
fildll
and
mov
imul
rcrl
stc
out
lds
cwtl
pop
popf
adc
movsb
dec
cmpsl
popf
lahf
orl
push
hlt
sti
mov
imul
repz
repnz
hlt
xchg
mov
and
and
push
push
test
push
sahf
xor
lret
leave
mov
mov
mov
pop
push
mov
cmpl
in
cmpl
mov
ficompl
stc
mov
aas
push
add
inc
or
pop
aad
js
xchg
inc
cltd
or
bound
pop
mov
cmp
sub
sbb
jge
fiaddl
jnp
xor
hlt
stc
xor
add
dec
pop
cmpsb
add
neg
inc
cmpsb
inc
sbb
loope
sarb
xor
ja
jle
inc
sbb
movsb
pop
call
stc
push
sub
insl
mov
sbb
lret
or
test
movsb
add
xlat
mull
push
in
xchg
pop
popf
shl
jl
cmp
lods
dec
lcall
aad
jo
aas
ffreep
push
aas
push
jo
jge
jns
add
lcall
mov
xchg
fdivrs
lcall
int
call
xor
in
dec
fwait
mov
mov
mov
rol
mov
and
shll
daa
dec
fbld
mov
lods
insb
mov
addb
pop
and
and
das
call
push
enter
sub
pop
adcb
push
mov
push
repz
mov
cmpsb
xchg
es
lahf
cmp
dec
fwait
call
mov
dec
jno
andl
push
call
into
inc
in
addr16
sub
sbb
pop
add
mov
jne
mov
addr16
ds
repz
xchg
mov
jp
fimull
insb
inc
fbstp
lods
pop
lahf
pop
mov
and
cmc
add
or
push
aam
mov
or
jnp
push
ret
pop
inc
gs
lahf
pop
adcl
push
sbb
fimuls
cmp
pop
cmp
or
clc
cmpsl
jmp
add
lea
xor
std
xor
jle
adc
xor
shl
sbb
mov
int3
mov
jmp
cmc
inc
aaa
xchg
adc
or
scas
stos
push
mov
icebp
jle
pop
sub
loopne
cmp
xor
pop
cmp
jmp
repnz
pop
outsb
mov
outsb
xor
sub
mov
adc
repz
jge
pushl
xor
aam
sub
inc
pop
inc
data16
add
adc
mov
pop
jle
pop
cmpsl
mov
fs
rorl
xchg
mov
hlt
nop
imul
lahf
mov
push
pushl
and
pop
cmp
pop
xchg
pusha
lahf
mov
adc
popa
jge
ret
popl
sub
rorl
sbb
into
rclb
and
cmpsl
mov
mov
or
fsubrs
add
push
aas
inc
jg
mov
jne
insl
pop
adc
mov
jns
push
xor
add
aas
popf
imul
cmp
xchg
jnp
loope
push
jnp
rorb
loope
mov
sbb
fs
popa
repnz
pushl
aad
imul
mov
inc
or
pusha
or
mov
xor
dec
cmp
rcrb
pop
jmp
xor
xorl
sbb
or
jge
add
mov
ljmp
mov
or
cwtl
push
jns
mov
xchg
sbb
and
sub
fstl
push
pop
les
addl
lahf
add
fstpt
fwait
adc
add
lods
fadds
fwait
push
stos
adc
loop
jl
push
hlt
sarl
xor
popa
out
xor
adc
pusha
push
and
cltd
jno
xchg
xlat
jmp
or
ret
cmp
mov
mov
test
das
push
inc
jp
add
out
inc
test
arpl
pop
xor
pusha
mov
loope
xor
jns
mov
lahf
scas
ja
cs
sarb
loopne
xor
call
rorl
inc
dec
out
xchg
jl
gs
rcll
clc
jl
es
stc
inc
xchg
frndint
das
jp
ret
fsubr
iret
mov
mov
lcall
jle
in
or
mov
xor
cmp
lods
adc
mov
add
int3
jmp
mov
mov
lock
cmc
lret
or
sbb
aam
jmp
fsubrp
pop
pop
pop
jle
adcb
cli
sbb
push
mov
push
ret
pop
imul
inc
dec
fsts
xlat
pusha
scas
insb
mov
fildl
movsb
add
fldt
outsl
add
aad
icebp
or
js
fmuls
stos
stos
aas
and
leave
inc
popa
paddusb
out
mov
out
fcomi
push
mov
mov
lods
into
inc
and
inc
xor
aaa
cmp
pop
mov
inc
int3
inc
and
push
push
shrl
aas
mov
jns
sbb
daa
jo
pop
jns
and
lds
es
int3
xchg
pop
pop
sub
xchg
xrelease
pop
rolb
ret
dec
cltd
pop
push
imul
enter
mov
lods
enter
push
icebp
jns
shlb
sbbl
mov
lret
jo
subl
push
jle
ss
insb
dec
sub
mov
pushl
xorl
orl
leave
mov
xor
hlt
sbb
repz
sub
daa
cmp
jecxz
out
js,pn
pop
adc
ret
in
outsb
push
das
into
mov
test
icebp
mov
ds
cmp
xchg
xchg
add
sbbb
cld
in
and
pop
mov
in
adc
fisttpl
scas
mov
rcl
stos
pop
jns
jns
sbb
xor
jl
or
mov
jo
ret
and
arpl
pop
inc
sbb
pop
inc
jmp
dec
sbb
hlt
das
rorl
lock
dec
imul
movsb
stc
scas
add
xchg
test
xchg
lea
insb
hlt
mov
in
and
xorb
push
pushw
adc
push
xchg
push
inc
shrb
lret
fdivs
jg
ds
xlat
insb
inc
pop
fdivs
jge
push
enter
jl
scas
mov
sti
dec
dec
lret
mov
cltd
or
fdivl
or
push
pop
notl
push
or
stos
jmp
push
out
jle
inc
push
cwtl
icebp
or
xchg
cmp
shr
mov
jge
push
xchg
ret
push
sahf
fwait
push
jno
mov
sbb
push
xchg
xchg
test
pop
fistpll
movntq
mov
rcr
fiadds
stos
push
cwtl
push
iret
and
jno
je
mov
sbb
and
repnz
inc
mov
fcom
rol
insl
jbe
lods
xchg
xor
lea
or
push
fmull
pop
ret
inc
inc
je
xchg
imul
inc
inc
aam
and
mov
and
fsts
inc
push
enter
sbb
adc
xchg
and
and
daa
or
cltd
test
in
push
neg
dec
out
stos
adc
mov
xor
sbb
mov
push
arpl
ret
mov
mov
push
and
les
xlat
sub
jae,pn
mov
add
aam
lods
ret
mov
sbb
sbb
pusha
and
mov
daa
mov
call
sbb
aas
arpl
je
imul
sahf
inc
hlt
pop
jp
loop
push
pop
rcrl
pop
add
sub
cmp
rcl
adc
aad
jno
add
je
shrl
aaa
fisubrs
fcoms
rolw
cwtl
inc
call
jl
fcmovu
sub
stc
frstor
lods
push
repz
sub
scas
fnstcw
mov
push
fwait
leave
ret
out
cwtl
mov
shl
insb
stos
jg
pop
pusha
outsb
push
adc
gs
insb
lahf
mov
pop
inc
jle
cmp
in
inc
sahf
mov
negb
mov
mov
jecxz
inc
popf
jb
mov
jo
push
out
sbb
cmp
add
push
decb
cld
fsubrl
stos
xchg
popf
push
popf
insl
les
lahf
mov
ja
lea
pop
cs
cmc
test
dec
inc
je
cmp
sub
je
dec
cmp
push
pushf
je
push
cs
add
mov
pushf
dec
mov
loopne
adc
adc
mov
inc
imulb
out
jl
jno
push
outsb
fisubl
popf
cmp
daa
aaa
cmp
sub
ficoml
xchg
frstor
sub
in
adc
int
mov
pavgb
das
fnsave
leave
inc
cwtl
insl
add
mov
mov
loop
mov
insl
xchg
test
fnstenv
mov
inc
ret
out
aad
cltd
cmpsl
repnz
inc
and
inc
adc
mov
adc
adc
lret
inc
jno
add
dec
mov
mov
test
stc
add
sbb
mov
pop
addb
fcomip
pxor
popf
adc
cmc
aas
pop
xchg
sti
aam
mov
jo
movsb
test
dec
cmc
scas
and
aas
in
xor
jl
inc
movsl
dec
dec
call
out
iret
xchg
test
mov
mulb
sub
and
call
sub
mov
and
and
jne
sub
out
dec
adc
sbb
insl
movsl
mov
aam
fcmovne
dec
test
push
loope
aad
xchg
and
jp
outsl
mov
push
xor
jg
pop
and
xchg
jmp
adc
sub
push
push
xlat
pop
call
popa
mov
and
shrb
out
imul
inc
repz
out
lret
xchg
in
ja
push
pop
in
sahf
je
pop
and
movb
inc
mov
adc
adc
lods
out
xchg
ja
jne
xlat
mov
dec
lods
roll
inc
loopne
xchg
inc
xor
or
pop
jp
bound
repz
int3
jae
mov
pushf
enter
loopne
dec
outsb
repnz
dec
ret
int
loop
or
gs
add
imul
gs
jge
mov
lock
repnz
mov
sbb
je
nop
xorb
jne
js
adc
xlat
push
dec
sbb
dec
jmp
sub
mov
bound
lods
shll
cltd
jmp
add
divl
insl
mov
mov
adc
in
add
hlt
out
int3
add
ja
idivl
xor
sahf
jb
push
lds
dec
fidivrl
dec
jo
sahf
mov
xchg
addb
xor
xchg
inc
repz
repz
inc
es
mov
push
sub
adc
jnp
gs
adc
cmpsl
scas
movsb
fcomp
add
or
icebp
adc
xchg
push
pop
lret
sub
dec
xchg
movsl
adc
add
adc
pop
daa
or
mov
stos
lods
push
cltd
or
bound
xchg
cmc
imul
in
xchg
lret
negl
ret
in
aam
clc
fsub
incl
adc
inc
xor
add
dec
mov
stos
pop
push
pop
stc
idivb
adc
sbb
jne
sbb
dec
xchg
mov
jno
sbb
pop
movsb
call
inc
cmp
sub
out
aas
jnp
nop
xor
scas
xchg
xchg
je
jb
push
mov
dec
dec
rorb
add
gs
sbb
pop
add
cmp
mov
pusha
sbb
mov
cmp
cmp
add
inc
inc
mov
xor
xchg
scas
mov
xchg
mov
pop
addr16
and
notl
pause
pop
cli
cmpsb
dec
and
in
addr16
fs
adc
iret
cmc
xor
jge
cmpsb
lahf
dec
clc
mov
mov
aas
popf
gs
xor
mov
mov
jg
out
cmp
and
dec
mov
cmp
adc
cwtl
mov
push
js
or
into
mov
outsl
jne
mov
jno
push
add
pop
lods
add
fndisi(8087
loope
xor
jle
sbb
mov
out
clc
push
inc
lock
xchg
orb
in
dec
adc
out
fbld
ret
and
movsb
sarl
jno
dec
sub
push
and
xchg
idivb
popa
inc
add
sub
mov
xchg
mov
fiaddl
rclb
add
mov
aas
or
add
sarl
outsb
hlt
xchg
pop
xchg
xchg
sbb
std
std
sbb
and
adc
or
call
insb
rclb
lea
lahf
pop
cmpsl
out
xchg
dec
push
mov
je
outsb
fstl
arpl
or
aam
mov
xchg
lret
out
fldt
and
bound
and
sub
ljmp
mov
lock
sub
or
jmp
mov
neg
or
fldenv
xor
call
jmp
jno
cmp
or
addr16
insl
mov
out
pop
adc
loopne
nop
jecxz
xchg
shll
cmp
dec
dec
cmp
rcll
lret
inc
mov
arpl
aam
jecxz
sbb
mov
arpl
cltd
std
shll
loope
ret
jb
aaa
pop
mov
push
sbb
test
dec
mov
sub
pop
adc
pop
jecxz
arpl
jne
add
into
add
movsb
mov
mov
ss
xor
rcrb
xorb
gs
or
loope
ret
mov
pop
xchg
xchg
cmp
jbe
dec
subl
rcrb
cmpsl
sub
cs
mov
push
dec
pop
xor
mov
mov
xor
movsb
sarl
inc
xchg
test
pop
outsl
jecxz
pop
xchg
cmp
int
or
xlat
cmpsb
or
popf
lcall
or
sub
mov
popa
inc
test
xchg
lret
sahf
jbe
and
adc
out
mov
jle
add
mov
clc
imul
sub
xchg
adc
rcl
jecxz
push
leave
cli
stc
cmp
push
test
ja
push
jle
rcrl
sub
fdiv
xor
pop
mov
imul
je
jp
lret
cmpsb
fstps
jnp
push
jae
jle
pop
clc
shll
scas
add
pusha
jb
mull
or
inc
sahf
imul
enter
cltd
fld
mov
aaa
xchg
aad
lcall
in
cwtl
and
sub
insl
or
adc
xor
adc
mov
jae
and
cmp
lds
sbb
pop
cmp
jg
xchg
imul
jb
enter
arpl
xchg
mov
xchg
movl
out
pop
and
jns
cwtl
lods
loop
pop
add
cld
ss
subl
sbb
mov
in
sub
inc
adc
mov
out
add
jl
pop
jge
inc
push
call
fists
fsub
scas
fs
mov
int
fs
ficompl
add
xchg
fadds
popa
mov
mov
jecxz
das
insl
push
das
add
sbb
dec
mov
sbb
and
xchg
outsb
aam
push
mov
xor
stos
mov
mov
lret
scas
pop
int
or
pusha
cmp
mov
pop
mov
push
add
cmp
xchg
aad
push
sahf
insl
jae
fldenv
cs
shlb
xor
insb
fdivrs
sbb
xchg
push
adc
pusha
lock
mov
ja
pop
fimuls
and
icebp
mov
out
pop
dec
arpl
lods
add
push
push
sbb
dec
and
aas
aaa
test
push
pop
aad
pusha
sub
mov
sahf
adc
cmpsb
add
rclb
aas
dec
fwait
rorl
stc
mov
nop
sub
popl
mov
mov
add
ss
push
adc
jnp
mov
jg
clc
aas
dec
add
ss
in
sub
xchg
fldt
and
dec
push
adc
inc
add
roll
mov
aam
and
adc
xchg
xchg
lock
adc
mov
movsb
fsubrs
push
test
or
in
cltd
and
sbb
test
psubd
es
movsl
testl
lahf
fdivs
iret
adc
cmpsb
loopne
dec
add
ret
xor
push
adc
mov
outsb
cmpsb
shrl
negb
mov
ja
dec
fstl
jno
jns
lret
js
lcall
test
push
in
jp
lds
pop
pop
inc
push
push
mov
cmp
jmp
dec
jecxz
ss
mov
mov
fstpl
push
cli
pop
inc
cld
sbb
xor
inc
inc
loop
gs
pop
leave
in
mov
cltd
xor
lret
add
xor
push
mov
and
push
jecxz
fwait
jg
mov
aaa
sbbb
mov
xchg
js
aad
push
adc
and
imul
lret
imul
add
and
jp
pushf
in
mov
sub
or
or
pop
mov
mov
add
imul
add
mov
cmp
popa
xor
inc
jo
add
xchg
into
or
push
mov
pop
adc
cltd
sarl
lea
insb
into
sbb
shll
mov
sbb
cmp
shr
insl
mov
inc
push
sub
aad
push
sti
sbb
ljmp
insl
cmc
out
xor
push
jno
and
pop
lcall
or
push
repnz
cltd
and
add
roll
out
xchg
cmpsl
cwtl
fs
mov
ror
fwait
rorb
int
aas
mull
dec
push
out
dec
lcall
loopne
mov
neg
jl
pop
nop
jl
jnp
cmp
cmp
jge
addb
clc
mov
jns
pop
pop
ficoms
into
out
sarl
cmp
repnz
lret
xor
stos
fs
aaa
imul
mov
enter
movsl
popl
fbstp
cs
pop
dec
mov
inc
ja
test
xor
pop
aas
test
pushf
stos
or
or
lret
jns
jp
fnstsw
stos
in
je
push
jg
in
pop
mov
icebp
mov
jns
xchg
mov
daa
and
div
cmp
imul
mov
aas
int3
stos
aam
jp
push
mov
xor
leave
ljmp
jo
push
aaa
scas
fwait
pop
xchg
xor
xor
sub
mov
xchg
push
add
call
inc
test
lret
in
xchg
mov
pop
pop
out
scas
sub
test
adc
jae
pusha
mov
cmp
push
out
out
add
sbb
sbbb
cmp
dec
js
xchg
rorb
mov
jo
mov
xor
sbb
or
mov
mov
imul
sbb
cmp
xor
mov
loope
es
dec
sbb
push
fwait
lds
sbb
lret
adc
imul
testb
or
inc
xor
mov
fwait
imul
push
movsb
test
jmp
xor
mov
lret
lds
cmp
mov
stos
andl
stos
fcoml
mov
pop
les
shll
cli
adc
pusha
add
jmp
arpl
fnstcw
or
hlt
pop
lcall
adc
sub
mov
push
out
subl
inc
not
stos
enter
adc
xchg
sti
xchg
add
pop
jmp
cmp
ret
mov
ret
cli
rorb
xor
jmp
xor
cmp
mov
out
pop
inc
lcall
inc
data16
icebp
xor
or
inc
jecxz
pop
dec
mov
sub
outsl
jmp
aaa
jo
and
pop
inc
xor
loopne
pop
jnp
or
inc
test
cmp
cmpsl
inc
lcall
cmp
pusha
inc
mov
sahf
pop
jle
sub
mov
mov
out
ss
xor
pop
add
mov
ret
xor
int3
fmuls
cmpb
lods
mov
lret
jo
xchg
inc
bound
jp
dec
enter
jb
push
jnp
outsl
mov
mov
mov
cmp
aad
xchg
mov
jecxz
add
ret
push
push
sub
loop
out
out
xchg
pop
insb
data16
daa
mov
mov
push
jae
loop
andl
or
test
sub
push
xor
push
or
adc
mov
jnp
and
hlt
ret
jnp
jecxz
into
add
mov
adc
in
aam
les
xor
daa
push
decl
inc
ret
mov
sbb
pop
push
mov
and
stos
icebp
aad
mov
mov
mov
icebp
adc
mov
dec
cmp
jo
mov
adc
je
sbb
hlt
pop
and
fidivl
or
push
mov
into
enter
addr16
adc
inc
scas
insl
out
clc
inc
nop
adc
daa
or
in
xchg
cmp
lahf
es
cmp
push
scas
mov
ss
es
mov
xchg
jb
add
shl
xor
adc
push
add
lcall
cmp
dec
xchg
push
fadd
je
loopne
xor
test
aas
sbb
adc
jne
mov
scas
jno
int
xlat
bound
pminub
jnp
cmp
lcall
sub
rorl
fnsetpm(287
xchg
or
iret
lret
xor
cmpsb
in
mov
movl
out
xchg
notb
adc
sbb
jne
cmp
adcb
cmp
cmp
cmp
inc
sbb
sbb
in
dec
aam
cmp
push
xchg
jg
jnp
xor
std
sbb
in
xor
push
jg
test
pop
push
decl
dec
xor
std
fs
jmp
hlt
inc
sub
dec
das
mov
adc
add
jge
push
icebp
xchg
sbbb
out
xchg
lds
rorl
xor
mull
scas
pop
mov
aas
xchg
icebp
loopne
fldl
sti
test
mov
jne
push
xchg
shr
loop
inc
xchg
stc
mov
push
sbb
fwait
adc
fldenv
xchg
ds
dec
and
cli
movl
push
adcb
mov
in
xlat
shrl
das
sub
insl
ret
sub
fildl
sahf
rep
scas
not
sahf
push
popf
and
sub
lea
add
mov
add
xchg
lcall
push
pop
push
leave
xchg
roll
push
das
dec
cmp
in
jae
daa
lods
sub
pop
notb
je
mov
sbb
xchg
xchg
dec
jecxz,pn
movsb
sahf
pop
cmp
cmpsb
sub
inc
loope
pop
jae
insl
or
mov
xchg
inc
cli
adc
fisubs
add
adc
mov
xor
movsb
adc
stc
or
mov
xor
fisttpl
scas
repnz
push
push
mov
push
in
sub
xchg
lret
jecxz
cmc
dec
rcrl
sbb
jbe
ficoml
push
aaa
mov
dec
jecxz
mov
push
sub
lock
sub
jl
jo
fldt
lret
jne
adcb
rcl
jb
dec
mov
ja
jnp,pn
cld
cmp
adc
jne
popa
mov
sbb
lret
fisttps
loope
sahf
sub
jle
push
test
pop
add
fstl
mov
adc
push
jno
scas
xchg
cmpsb
sarb
adc
ds
lcall
inc
test
lret
push
sub
std
in
mov
sub
in
ja
push
adc
jle
mov
sbb
dec
pop
jno
aam
cmpl
mov
call
xchg
push
fs
fisubrs
jb
orl
push
xor
sbb
pop
push
imul
mov
into
and
aaa
ret
icebp
fsubs
call
sub
mull
pushf
and
out
movsl
test
test
in
mov
or
adc
fcmovnu
jbe
adc
movsb
xchg
mov
repnz
sub
adc
mov
fstl
out
aas
add
xchg
mov
jmp
xor
jo
lea
mov
dec
sub
xor
out
add
lcall
xchg
je
push
aaa
dec
ret
push
sub
leave
jecxz
mov
xchg
and
dec
clc
out
insb
mov
mov
fldt
mov
and
adcl
in
adcl
pop
imul
and
js
scas
popa
insb
fcoms
cmp
or
xchg
xchg
out
std
jo
fidivl
in
dec
xlat
ret
in
out
lret
jg
xor
loopne
fistpl
pop
stos
inc
cmp
sti
testb
dec
jne
gs
inc
fcompl
sbb
sbb
addr16
lds
mulb
insb
addr16
xor
sub
std
lret
dec
mov
adc
ja
mov
mov
cli
push
jns
and
add
or
enter
insl
jbe
xchg
fdivrl
movsl
mov
sub
inc
jle
fistl
jnp
fildll
aaa
cmp
inc
pop
lret
push
cltd
jmp
sub
push
xchg
add
add
cmp
aas
int3
jg
test
push
arpl
push
mov
xchg
fadd
lock
cmpsl
testb
mov
outsl
inc
cmpsb
loopne
aam
cltd
jbe
ror
insb
movsb
sub
jg
sbb
sbb
inc
jnp,pt
loopne
ret
push
movsl
fs
daa
add
xor
pushf
dec
lods
pop
cld
test
jle
mov
repz
cmp
cwtl
dec
ds
loope
push
push
push
sub
out
in
in
fcmovnbe
cli
xchg
cmp
into
out
pop
push
bound
and
push
sbb
rolb
clc
pop
movsl
scas
enter
insb
push
mov
lds
xlat
ret
inc
and
mov
repz
in
or
dec
les
mov
repz
popf
adc
sub
pop
jbe
jmp
pushf
jecxz
xor
mov
pusha
add
adc
daa
or
mov
out
out
add
jecxz
movsb
xlat
decl
popa
jecxz
in
decl
scas
cmp
and
xor
mov
aam
ljmp
fstps
sbb
dec
stos
insb
fists
orb
mov
ds
and
inc
xlat
lret
fcmovnu
mov
push
daa
subl
xchg
test
pushf
inc
pop
or
fisttps
sub
idiv
mov
jnp
scas
and
push
dec
xlat
fldl
sarl
andl
sarb
push
inc
xchg
dec
leave
cmp
mov
loopne
mov
dec
popf
add
adc
je
mov
lahf
jnp
cld
cmp
ja
push
push
push
jbe
add
push
pop
int3
xchg
push
test
pop
dec
push
push
jnp
mov
add
loop
scas
add
inc
push
arpl
jge
ds
xchg
inc
mov
mov
add
test
cwtl
adc
je
sub
popf
mov
or
shlb
popf
pop
fbstp
bnd
in
xlat
adc
pop
icebp
sbb
adc
ds
push
xchg
pop
mov
test
and
in
xchg
xchg
sti
mov
sub
addb
add
and
pop
cmpsl
stos
xchg
repz
pop
inc
leave
testb
jb
fcmovnu
repnz
stc
and
adc
std
xor
adc
imul
mov
mov
jmp
jmp
inc
pop
popa
outsl
mov
in
shrb
sti
dec
and
sbb
add
cmpsb
sbb
and
aad
and
fldenv
das
ds
scas
fmulp
fs
scas
mov
xchg
xorb
imul
add
and
dec
out
leave
cs
pusha
addr16
jns
mov
inc
enter
sar
scas
lahf
cli
mov
adc
cmp
pop
ja
jne
aad
xlat
jecxz
ret
dec
xor
leave
cmp
daa
jl
add
jne
or
incl
or
adc
aad
mov
insb
add
cwtl
lahf
mov
inc
xchg
pop
add
ret
fs
ficoml
pop
and
imul
das
mov
fldl
cltd
push
inc
data16
iret
cmp
rcrb
aam
adcb
sbb
jge
inc
subl
pop
mov
sbb
or
and
fldenv
ja
rorl
insb
push
sbb
imul
xchg
xlat
int3
add
xchg
ss
xor
xor
push
cld
xor
adc
scas
js
aas
adc
cld
sahf
leave
xchg
notl
dec
add
mov
into
leave
vmovss
cwtl
jne
pop
add
dec
xchg
or
js
imul
or
sub
xlat
jp
sbb
add
xchg
xor
daa
popf
ja
xchg
aam
ficomps
cmpsl
xlat
sub
int
sub
lret
into
pop
jbe
dec
ljmp
cltd
out
rolb
nop
and
and
imul
mov
adc
jae
sub
mov
ss
jb
jae
lahf
mov
pushf
sbb
cmc
pusha
xor
mov
not
sahf
inc
pop
mov
fcoms
cltd
aas
jno
in
icebp
pop
adc
sahf
ss
les
call
dec
movb
test
xchg
push
mov
push
int3
ja
es
leave
in
cld
jns
mov
inc
adc
add
fidivrs
xchg
popa
stc
sti
sbb
xlat
push
push
jle
add
jle
xchg
test
mov
or
add
dec
imul
test
fsubr
dec
je
les
neg
ret
sub
cmp
fmuls
loope
mov
inc
fdivs
and
lret
and
movsl
or
gs
xor
jo
out
fistpll
leave
or
std
xor
jecxz
in
mov
pop
lock
rolb
out
or
loop
idivb
inc
sub
add
pop
and
shll
cmp
je
gs
push
addl
stos
xchg
mov
dec
xchg
push
ljmp
xor
mov
shll
push
adc
inc
lahf
push
cmpsl
xlat
subl
push
pop
outsl
mov
pop
test
adc
div
jb
sahf
mov
mov
shrl
call
xor
in
inc
ljmp
fs
xchg
xchg
pop
sbb
fwait
cmpsl
add
scas
imul
inc
xor
inc
loope
cmp
outsl
xchg
pop
int
in
pop
sbb
lods
in
adc
pop
jns
pusha
dec
or
jmp
sar
push
push
add
stos
in
pusha
syscall
adcb
add
sub
xchg
push
inc
xchg
and
dec
xchg
dec
call
aaa
outsb
hlt
loopne
fwait
stos
gs
sbb
ficomps
sbb
dec
inc
out
jbe
movsl
out
sub
or
mov
ret
pusha
push
mov
rcrl
jmp
sub
xlat
pop
mov
xor
jo
inc
jp
inc
sbb
sub
sbb
test
push
or
fidivrl
out
sub
dec
xor
movsb
jle
mov
push
fwait
lahf
loop
mov
lret
xchg
jne
mov
rorl
pop
test
pop
int3
scas
inc
push
arpl
pushf
xchg
lea
aad
imul
xchg
push
push
lock
jl
test
enter
xchg
ss
inc
loop
adc
push
mov
adc
sub
jae
pop
push
mov
xchg
or
xor
rolb
sbb
or
outsl
sbb
nop
icebp
popa
mov
rcrl
push
lods
int3
xchg
shrb
push
or
stos
cli
lea
adc
xchg
popa
test
dec
lods
jns
sbb
cwtl
sub
jns
mov
dec
jge
cmp
dec
movsb
pop
iret
icebp
or
cmp
xchg
mov
rclb
jb
sub
adc
test
mov
mov
jns
in
xlat
aas
popa
push
movsb
das
and
repnz
inc
ficompl
ja
sub
mov
adc
pushf
insl
mov
or
jno
loop
xchg
cmp
mov
adcl
xchg
in
arpl
mov
and
push
ret
lods
and
sti
aam
imull
test
mov
mov
mov
push
adc
rorb
mov
jle
cmp
out
sti
fdivs
cmpsl
sub
fnsave
fstps
mov
test
sbb
je
in
mov
pop
aaa
out
push
inc
lods
add
lret
lret
cmp
fs
lock
fsubl
pushf
dec
and
jo
add
xchg
cmp
pop
shrl
pop
mov
adc
xchg
adc
scas
or
jmp
nop
mov
sbb
mov
sub
ljmp
xchg
leave
pop
push
xchg
lods
and
in
in
add
lods
xor
not
mov
push
ss
push
inc
iret
xchg
sbb
rcr
jge
mov
sbb
in
sub
out
cs
popl
pusha
push
dec
and
adc
xchg
xchg
pop
mov
mov
jmp
sub
pop
loope
movsb
jae
fstpl
mov
out
jecxz
jge
leave
arpl
mov
add
and
repz
mov
jb
or
adc
lcall
push
jge
punpcklwd
dec
jl
and
fsub
movb
push
or
lds
jp
adc
enter
dec
bound
dec
xchg
fcoml
int
xchg
scas
lret
dec
mov
mov
lds
lahf
push
rolb
cli
rolb
stos
cs
mov
pop
popa
and
js
mov
add
add
aam
jmp
in
cmp
fldl
loop
pushf
mov
adc
inc
fsubp
incb
shlb
mov
inc
out
outsl
mov
out
mov
stos
sti
and
dec
jne
enter
inc
mov
aam
shlb
mov
inc
jle
int3
nop
jo
fcomps
test
or
dec
adc
testl
test
adc
add
xor
cli
gs
push
jg
pop
ljmp
cs
pop
cmc
lods
stc
sub
inc
adc
dec
cmp
and
lret
test
shll
cli
cwtl
orl
mov
rcll
jle
fwait
and
fwait
in
push
in
dec
fildll
pusha
cltd
dec
mov
stc
fildll
shlb
pushf
jae
das
push
xchg
movsl
and
test
leave
clc
xchg
jle
into
push
pop
test
dec
in
jns
aad
xor
adc
inc
stc
sbb
push
lcall
pop
shlb
arpl
push
sbb
cltd
lret
repz
sbb
inc
or
jmp
cltd
adc
imul
jns
ret
imul
jns
add
jno
jle
ss
sbb
dec
pop
cmpsb
pop
pop
unpckhps
dec
push
andl
push
xchg
mov
xchg
test
pop
stos
inc
push
or
imul
aam
add
fwait
sbb
jne
inc
and
mov
adc
movsb
pop
cmp
adc
arpl
sbb
jmp
fcmovnbe
mov
iret
inc
bound
sbb
mov
aad
inc
add
mov
test
push
pop
mov
arpl
loop
push
cmp
xor
call
fwait
mov
inc
lea
xor
jae
loop
xchg
pop
mov
lret
ss
movsl
pushf
or
dec
lods
xchg
imul
aam
fidivl
mov
xchg
subl
enter
push
jmp
jae
xchg
roll
shll
mov
ljmp
sub
test
aas
push
scas
xchg
jmp
mov
adc
push
jbe
pop
shrl
sub
push
add
insl
cli
ljmp
push
or
stos
xchg
shrl
add
mov
bound
cmp
xlat
adc
pop
in
mov
pusha
cmpsb
xor
lods
xchg
push
jne
outsl
lods
pop
push
cmp
inc
xor
aaa
mov
frstor
inc
test
dec
outsb
loopne
fisttpl
pushf
or
inc
mov
pop
jmp
sbb
sbb
sub
in
dec
es
cmpsb
pusha
fcoml
sub
dec
and
jo
fsubl
popf
cld
loop
fisttpll
daa
inc
sub
ja
cld
adcb
jg
movl
jnp
push
sbb
pop
inc
inc
sti
daa
dec
hlt
mov
sbb
and
incb
js
inc
das
andl
or
mov
jo
ffree
and
fbld
lcall
daa
arpl
xchg
adc
outsb
sub
and
pop
jmp
mov
xchg
push
loop
pop
jno
xor
xor
iret
push
inc
insb
mov
pop
ret
adc
frstor
mov
jl
nop
andb
lcall
sbb
iret
inc
sub
push
fisttpll
rolb
pop
imul
ret
push
in
mov
movsl
sbb
pop
das
xchg
aaa
test
je
lock
mov
sub
loop
ss
xchg
xor
xchg
shll
in
or
lahf
repnz
ja
mov
push
aam
mov
bound
std
adc
inc
mov
pushw
lock
pop
aam
js
das
stos
and
lea
or
mov
sub
mov
push
scas
add
mov
fisubs
inc
push
cwtl
adc
ss
fmul
sti
ds
in
push
stos
call
lock
dec
sub
adc
pop
xchg
sbb
mov
mov
dec
cmp
xor
pop
push
inc
push
test
stos
dec
xchg
mov
ljmp
mov
jecxz
inc
push
in
call
ficoms
nop
std
push
add
fucomip
jb
insb
test
inc
divb
push
push
cs
fmull
add
fistps
imul
test
pop
les
jge
les
cli
scas
add
jl
mov
xor
xchg
push
pop
inc
or
pop
add
ret
mov
and
ret
imulb
sbb
dec
add
call
lds
out
jns
mov
popa
push
int3
mov
sub
jecxz
sub
outsb
addr16
sub
pop
insb
enter
sub
into
adc
movsl
jae
mov
sahf
and
mov
mov
call
push
push
pop
daa
ror
mov
lret
loope
push
movsl
sahf
mov
insb
pop
negl
sbb
and
jle
jae
push
lods
dec
dec
jle
push
cmp
cli
int3
add
adcb
popf
dec
jge
lahf
cmpsl
adc
mov
or
sub
pop
lcall
mov
xor
xor
mov
lds
cld
icebp
popa
xchg
pop
or
jmp
push
gs
fbld
aas
push
pop
faddl
sbbb
sub
adc
cmp
in
pusha
and
and
jge
mov
push
hlt
sub
push
lcall
fsts
jp
popa
xor
inc
mov
gs
enter
mov
in
fistps
cmp
outsl
imul
std
mov
in
adc
shlb
and
and
ss
mov
mov
cwtl
mov
cltd
add
or
roll
jg
push
js
insb
lahf
inc
dec
lcall
adc
dec
adc
cltd
xchg
dec
jge
cmp
inc
pusha
xchg
je,pn
std
or
add
mov
dec
fidivs
sub
mov
adc
je
orb
movsb
jl
pop
add
cwtl
pop
mov
les
int
adc
dec
push
pusha
aaa
xor
jg
add
xchg
mov
xchg
inc
mov
pop
jmp
jae
mov
inc
jg
add
jge
jecxz
js
insw
mov
cmc
push
iret
mov
out
rolb
xor
jmp
repz
mov
cmp
push
scas
and
sub
push
or
pop
stos
imulb
out
or
jge
or
push
rol
adc
and
lret
jl
push
insb
pop
fwait
cmovp
xor
jmp
pop
aam
push
add
lods
mov
not
and
cmpsb
dec
arpl
ljmp
cmc
cmp
push
adc
jns
stc
dec
iret
fisubl
push
daa
shll
aas
mov
push
cmpb
inc
push
pushf
lds
push
or
adcb
lahf
faddl
std
in
pop
add
xor
sub
push
inc
loope
ss
xor
enter
adc
cwtl
dec
pop
push
clc
pop
clc
mov
mov
push
adc
pusha
out
mov
sbb
movb
outsl
xchg
mov
out
mov
xchg
sbb
lret
sahf
roll
add
xor
fwait
inc
mov
and
in
mov
dec
xor
add
into
or
cmpsl
lret
push
in
and
xor
scas
scas
sbb
in
xchg
iret
lret
jb
ud2
icebp
ficompl
xchg
push
add
lahf
lahf
and
mov
lods
pop
jecxz
das
pop
inc
imul
not
sbb
or
add
sbb
jecxz
add
pusha
xchg
fildll
lods
imul
pusha
cmp
and
mov
in
and
jl
adc
data16
xchg
insl
mov
adc
adc
xchg
lods
xchg
jle
cmpsl
pusha
xor
aas
mov
pushf
dec
cmpsl
js
cld
cmp
pop
mov
jp
aam
mov
sahf
mov
mov
mov
movsb
lahf
shll
pop
inc
ds
and
and
dec
inc
push
jge
cltd
shlb
fsub
mov
loopne
jmp
fistps
movsb
cmp
mov
cwtl
ret
roll
pop
sti
xor
addr16
test
mov
inc
sub
cmc
cmpsb
std
imul
sub
mov
pop
jmp
add
ficoml
sub
lods
mov
std
jne
popa
inc
mov
out
cmc
jnp
jecxz
xchg
in
inc
scas
push
movsb
aaa
incl
pavgw
mull
push
stos
xor
cmp
scas
jp
jns
jmp
ss
xchg
cmpsb
xor
ss
push
lds
lret
std
insb
sub
sti
xchg
rcr
cmp
mov
nop
adc
xchg
mov
mov
gs
mov
test
xor
insl
sub
test
xlat
sar
dec
mov
testb
add
inc
pop
hlt
popf
mov
shlb
cmpsb
xchg
push
pusha
lret
adc
and
flds
push
xchg
jl
lds
pop
sti
stos
push
pop
dec
sbb
jns
xchg
mov
inc
call
cmp
jns
scas
es
into
shrb
icebp
cmc
cmp
loopne
add
sub
pusha
cmp
inc
or
in
fisttpll
jo
sbb
fucomi
inc
mov
and
push
cmc
popa
xchg
mov
hlt
fmull
cmp
mov
faddl
xchg
ror
pop
sbb
push
pop
dec
pushf
jb
cs
fildl
or
sbb
add
pop
fcmove
fisubl
fisttps
js
mov
ficompl
mov
sbb
adc
mov
out
mov
testb
jecxz
gs
push
or
ror
sbb
xlat
out
cld
or
add
enter
stc
lods
je
pop
or
inc
fsubr
inc
loop
scas
js
push
cwtl
xchg
push
mov
lods
outsb
mov
das
test
test
add
lds
cmp
xlat
push
test
rol
mov
jne
into
push
inc
addr16
lret
hlt
push
sbb
movsl
gs
mov
insb
sbb
fs
lcall
cs
mov
in
xchg
mov
pop
xchg
xchg
and
ljmp
xor
pop
adc
pusha
jb
cmove
xchg
cmp
pop
js
push
lods
imulb
outsb
insl
jne
mov
lret
or
add
and
adc
sub
sub
aam
test
dec
inc
add
jg
iret
cmp
fidivrs
xchg
aas
cmp
inc
jae
ret
pop
mov
rolb
push
sub
dec
cs
and
je
inc
frstor
shld
or
dec
push
jne
loope
mov
dec
xor
sub
jb
loop
push
lea
mov
xchg
ja
sub
jae
cli
pop
fsubr
jp
jb
pop
mov
dec
adc
add
mov
cmp
jno
dec
cmpsb
inc
ret
xchg
push
lret
adc
outsl
inc
fisubs
fistpl
cmpsb
sbb
xor
cmp
inc
in
mov
loop
movsl
add
repnz
cltd
jns
dec
push
mov
jmp
popf
in
mov
sbb
add
mov
jl
imul
cwtl
outsb
xchg
cmp
leave
cmp
jne
jg
jge
hlt
pop
mov
std
pop
into
sbb
inc
loope
dec
out
int3
movsl
in
loop
xlat
pop
es
test
add
and
or
nop
imul
adc
pop
test
inc
xchg
stos
xchg
xor
push
pop
pop
push
inc
inc
sbb
sti
sbb
push
mov
or
shrl
shrb
adc
in
ficoms
movsl
mov
call
sbb
add
mov
push
movsl
out
movsb
andl
out
sbb
mov
ret
xor
inc
and
inc
or
std
xchg
push
xchg
orl
push
cli
mov
lock
pop
subl
fdivl
shll
sbb
jp
jbe
jl
insl
popf
pushf
imul
insl
fcompl
js
xchg
jnp
mov
push
and
cwtl
push
jmp
jne
add
dec
js
adcb
mov
andb
add
popf
jae
cmp
xor
add
or
sbb
cmp
mov
fnstsw
adcb
sub
movsl
add
inc
loope
add
in
aad
cmp
sbb
popa
out
cmp
pop
jge
je
arpl
mov
aaa
add
mov
adc
lret
and
adc
xor
jl
jnp
test
shr
fcompl
push
jo
mov
ret
sbb
call
sub
in
stos
adc
mov
insl
cmp
sub
frstor
imul
xor
fsubrl
not
hlt
mov
add
mov
das
xchg
dec
shlb
mov
and
jbe
and
xchg
and
xor
push
sub
sub
xor
pop
and
cs
pop
xchg
mov
xlat
int
cs
cmpsb
jecxz
jbe
jmp
lahf
mov
movsl
popa
jae
add
xor
push
xchg
dec
add
fsubl
push
sub
cli
mov
add
lds
andl
inc
mov
je
cli
les
mov
mov
cld
jmp
inc
xor
pop
rol
mov
cmc
xchg
mov
cmpl
mov
jl
int
pop
shll
add
inc
ljmp
in
mov
xchg
out
jmp
inc
xchg
mov
push
pop
jmp
popf
add
into
push
popa
dec
imul
cmpsl
push
jne
out
mov
ret
lret
lret
loop
mulb
lock
cmp
mull
push
xchg
add
movsl
cld
sti
mov
push
pop
repnz
xchg
sbb
mov
jo
xchg
shrl
mov
cmp
lea
xor
dec
cmp
pop
test
out
outsl
aam
sub
mov
jno
sbb
mov
inc
sub
add
adc
push
or
pop
mov
into
push
int3
shlb
enter
lock
out
add
movsb
sub
out
out
sbb
jl
std
sbb
jno
subl
out
adc
or
in
fdivl
and
or
test
push
inc
rclb
mov
int
mov
aad
leave
rcrb
dec
scas
lods
xlat
iret
cmp
arpl
xchg
mov
xchg
mov
mov
fmuls
test
lret
cltd
out
sbb
les
jp
cmp
add
and
fnstsw
sbb
dec
sbb
pop
jns
mov
mov
subl
dec
jp
mov
fcoml
in
cmpsl
cmp
out
dec
add
ds
sbb
fs
fs
xchg
or
jge
out
mov
xor
scas
lds
jg
jnp
sahf
lret
inc
sub
sbb
mov
dec
sub
push
pop
push
ss
lock
movsb
scas
popf
pop
add
lods
xor
push
insl
adc
std
push
stos
xor
or
call
cmp
loopne
clc
push
or
hlt
push
sti
pop
mov
xchg
push
popa
pop
imul
out
lahf
push
das
adc
xlat
xchg
push
data16
mov
and
push
jno
mov
mov
inc
cmpsb
lods
rcrb
sbb
sbb
add
adc
pop
xor
add
or
sti
ja
push
test
xor
mov
int
or
xor
lods
and
pushf
cmp
movb
popf
je
mov
dec
xor
or
sub
es
ret
sbb
sqrtps
in
int
ret
pushf
inc
scas
stc
sub
popfw
popf
cld
je
ss
inc
xor
divb
shll
add
xor
sub
addr16
pop
pop
in
xor
sti
lahf
lret
into
dec
lcall
fists
aad
clc
dec
xor
inc
lret
sbb
stos
fidivs
clc
mov
or
popf
sub
fwait
jl
dec
movsb
ds
push
mul
pop
loopne
xor
mov
ss
or
ret
fcoms
push
enter
jns
aas
pmulhw
sbb
loopne
xchg
pop
mov
cmp
in
jmp
jg
jmp
test
inc
jecxz
sahf
sub
clc
mov
lds
dec
daa
test
sub
out
scas
dec
hlt
dec
pop
add
hlt
pop
je
lds
scas
add
insb
pop
inc
xor
pop
jmp
mov
xor
jmp
xrelease
xor
inc
pop
mov
aaa
sbb
cwtl
lods
popf
mov
jp
mov
inc
icebp
pop
mov
cmpsl
pop
lds
xchg
and
push
dec
icebp
icebp
lea
int3
incb
jno
jns
ret
jle
sub
pop
push
ja
add
or
leave
test
test
out
jno
inc
cmp
jae
xchg
mov
in
loope
xchg
int3
testl
shrl
roll
imull
dec
in
adc
xlat
xor
out
fdivrp
jge
faddl
mov
dec
lcall
lods
es
xor
jmp
xchg
nop
mull
int3
cmpsl
dec
iret
jno
pop
mov
pop
adc
ret
into
dec
mov
push
xchg
dec
push
dec
outsb
sub
rorl
vmovddup
xchg
jno
repz
mov
loopne
mov
add
adc
mov
pop
mov
je
mov
mov
push
test
idiv
or
loopne
cs
gs
cmp
pop
or
lock
pop
dec
add
mov
ret
xor
aam
or
pop
jo
pop
out
cwtl
lret
cmp
cmpsl
insb
push
arpl
aam
scas
inc
mov
lods
loope
pop
xor
jo
xor
mov
aaa
add
add
in
mov
mov
inc
mov
jmp
cmpsb
pop
cmp
mov
fs
rolb
push
fcompl
sbb
pop
cmc
adc
pushf
enter
push
imul
out
inc
cmp
mov
or
inc
and
movsl
mov
xchg
add
jnp
fcomps
cmp
ret
rorb
push
data16
out
and
xor
mov
jmp
jp
add
lret
jge
cmp
push
shlb
push
ja
hlt
int
js
es
mov
fildl
int3
lods
dec
xor
xor
fcomip
test
ret
fcomip
mov
inc
les
ficomps
movsb
pop
es
lret
out
ret
in
scas
add
in
cmp
js
jo
cltd
cld
sti
ds
mov
cmpsl
pop
ret
iret
mov
dec
jg,pn
push
scas
movsb
in
rcl
inc
das
mov
lahf
pop
xchg
scas
insl
lds
mov
xchg
fwait
and
sub
jb
and
xchg
jg
push
sarl
popf
bound
lock
mov
nop
lcall
aad
cmp
cli
jle
test
jmp
mov
push
xchg
xchg
in
sub
xor
inc
xor
xchg
daa
push
adc
jl
xchg
push
out
ss
fcoml
jb
ret
jge
mov
adc
in
out
leave
and
sarb
xchg
test
xor
mov
dec
add
stos
movb
sub
jno
adc
and
add
mov
push
jecxz
pusha
fyl2x
leave
mov
cld
sbb
xchg
out
outsb
in
fbld
xchg
lea
xor
push
or
leave
pusha
lahf
jb
aas
dec
sbb
shl
cmp
stos
mov
jp
add
test
mov
addb
in
test
push
shll
dec
mov
les
add
jne
fcmovnu
cmp
movsl
mov
lock
imul
lock
and
sahf
adc
dec
add
mov
mov
enter
imul
je
clc
inc
ret
test
add
push
mov
dec
xor
int3
ljmp
and
insb
cli
dec
cli
mov
sbb
test
pop
int3
imul
imull
bound
and
js
mov
jmp
xchg
mov
mov
insb
cmp
jl
in
push
cmp
pop
adc
int3
sbb
mov
jne
in
jns
mov
sub
call
jnp
movsl
out
jl
inc
or
xchg
movsb
dec
loope
pushl
das
inc
rolb
dec
pusha
ss
jl
stos
pop
xor
loopne
aas
pop
ds
push
xor
push
notl
lock
xor
loop
push
mov
push
jns
sub
or
mov
iret
into
mov
jl
jae
add
popf
leave
gs
add
rcll
add
sti
push
sub
xchg
out
lods
lahf
jle
push
enter
mov
mov
xor
leave
das
js
mov
hlt
fcmovnu
in
mov
ret
dec
in
sbb
mov
pop
jp
outsl
xchg
sub
cmp
pop
inc
cmp
push
mov
out
jle
or
cmpsb
outsl
dec
push
jge
jnp
pop
leave
dec
mov
push
jmp
xor
mov
lods
jno
cli
idiv
shll
push
mov
pushl
xchg
add
sahf
shl
or
sub
jge
inc
inc
into
jp
or
in
iret
sbb
xchg
cmp
sbb
int3
push
loop
lds
outsl
rorl
movsb
push
dec
test
cmpsl
outsl
sti
push
inc
push
rcll
push
cmp
aad
shll
xchg
sbb
lahf
mov
sbb
enter
inc
push
fcoms
sahf
dec
test
repz
adc
jg
scas
fsubl
nop
das
and
cmpsb
test
ds
stos
dec
push
dec
lods
int
ss
popa
mov
jne
add
aas
fldt
xor
inc
cwtd
push
or
jne
push
fdivrs
fldenv
lea
xor
cmc
adcl
bnd
sbb
out
test
lds
lods
rcrl
mov
inc
pop
in
push
das
inc
stos
movsb
std
mov
stc
fnstcw
aaa
xor
gs
adc
pop
xchg
push
stos
rcrb
or
xor
lcall
jnp
fldenv
pushf
jnp
dec
push
mov
ss
sbb
or
fwait
xor
cmpsb
jmp
jg
cwtl
inc
cmp
mov
xlat
in
jmp
push
pop
test
add
mov
push
and
mov
jns
dec
ret
ljmp
sub
ror
adc
loope
sahf
pop
jo
leave
cmc
in
adc
and
dec
and
pop
fistpll
xchg
bound
fs
cmpsl
bnd
mov
pop
xor
test
add
adc
sahf
ds
arpl
inc
repz
in
jle
adc
aas
gs
mov
sub
add
je
xchg
mov
lahf
xor
cs
shl
cmp
cld
mov
iret
mov
fsubrl
or
jb
push
or
jo
and
jno
lea
jnp
mov
add
sbb
push
or
dec
call
fucomi
cmp
mov
add
adc
fwait
lret
das
rcrl
sbb
cmp
in
dec
mov
aas
shll
mov
gs
leave
or
jge
lea
add
hlt
xchg
push
inc
popa
imul
popf
je
mov
push
lret
aaa
fwait
mov
faddp
das
xor
push
mov
scas
and
jo
cmpsl
hlt
ss
dec
mov
fnsave
pop
xchg
divb
aaa
loope
or
fwait
and
in
jmp
xchg
adcl
jne
sbb
xchg
jg
xchg
dec
mov
dec
xchg
imul
sbb
aam
jno
push
sbb
fidivs
jp
cwtl
loop
arpl
sti
mov
pop
inc
mov
cld
sub
push
pcmpeqw
pop
leave
sbb
test
aam
frstor
or
test
cmpsl
jmp
mov
fwait
add
jno
push
mov
test
clc
fnstsw
mov
push
les
dec
xlat
out
or
xlat
or
add
cwtl
out
enter
adc
mov
into
ret
xor
inc
mov
jl
addr16
out
pop
hlt
mov
fs
mov
lds
loop
cmp
fmull
mov
jbe
pop
and
insb
adc
pusha
in
push
nopl
std
aas
rcl
cmpsb
repnz
adcb
push
mov
imul
and
xchg
push
jno
dec
adc
rcl
adc
rorb
sub
sbb
in
and
adc
adc
sub
xchg
int3
lea
aas
or
subl
push
xlat
xchg
pop
lea
cmp
pop
pop
fstps
mov
jne
push
scas
lret
push
push
and
lret
mov
ret
dec
inc
mov
repz
aas
addl
stc
inc
pushf
mov
js
jmp
imul
dec
or
leave
mov
test
fimull
pop
adc
pop
out
jb
mov
shrb
jp
adc
cmp
sub
adc
fistl
aaa
ljmp
ja
imul
add
test
add
cli
lods
mov
push
push
dec
add
sub
mov
ds
jb
xlat
and
fildl
pop
mov
dec
mov
test
imul
fcom
addr16
cmp
in
or
cs
int3
sub
sub
rorl
pop
mov
cltd
rcr
cmc
sti
in
inc
sbb
and
mov
jae
orl
sti
mov
arpl
int
mov
sub
or
adc
jp
and
cmp
mov
mov
dec
imul
out
fisubs
cmp
and
cli
iret
xchg
frstor
or
int
inc
add
pop
incl
cmp
loop
loop
loope
cmc
add
push
aad
lea
mov
in
xchg
cmp
sbb
daa
mov
mov
leave
test
scas
mov
inc
jne
sbb
mov
push
testl
aas
inc
mov
mov
lret
push
or
outsb
mov
add
push
pop
adc
mov
mov
into
pop
jp
mov
mov
in
xor
xchg
out
dec
adc
pop
sarl
into
push
add
pop
cltd
push
scas
mov
push
icebp
popa
fsubrl
icebp
pop
mull
add
jge
push
jnp
nop
jmp
mov
pop
incl
lret
pop
pop
mov
out
popa
shrb
mov
or
push
push
push
nop
xchg
mov
repnz
jmp
in
sbb
mov
or
push
xchg
sarl
leave
pop
xchg
out
inc
sub
mov
stos
outsb
sahf
mov
cltd
push
sub
aad
ja
jne
stc
testl
add
loopne
add
das
jecxz
and
pop
inc
int
push
jmp
lret
rolb
jle
adc
outsl
dec
aaa
xchg
add
cmp
shl
xor
scas
movsb
stc
add
jbe
gs
imul
adc
cld
jnp
loope
and
jno
cld
aad
rep
push
and
jp
or
movsl
adc
imul
inc
or
push
mov
insb
push
inc
gs
mov
and
iret
pop
sub
and
mov
inc
iret
movsb
mov
xor
sub
xchg
jmp
in
and
jg
xor
jle
insb
mov
shll
xchg
movsl
adc
gs
dec
arpl
inc
dec
add
jne
cwtl
test
ja
dec
xchg
adc
out
sub
repz
and
sbb
mov
jge
test
cs
stc
test
scas
hlt
nop
lock
pop
inc
pop
in
mov
cmp
push
mov
mov
cs
lcall
and
lods
aad
hlt
ss
ljmp
outsb
mov
xchg
and
xchg
mov
std
inc
faddp
and
xor
iret
lea
and
or
lea
daa
lock
cmp
mov
mov
cmpsb
mov
notb
inc
mov
jns
jecxz
es
jmp
out
mov
movl
mov
ds
test
orb
test
sbb
push
and
ss
aam
pop
cli
sti
loopne
stos
dec
shlb
dec
and
lods
xorl
test
lahf
movsl
and
lret
mov
cli
imul
loop
mov
add
jp
cld
in
icebp
push
imull
jge
xor
inc
sub
insl
add
mov
cmp
fistpll
repz
lods
dec
call
out
jg
mov
pushf
pop
fcoml
mov
addr16
push
inc
fistps
mov
cli
lock
fs
jl
jns
xor
pusha
mov
push
push
test
fsubrl
stos
ficoms
jno
jns
daa
sahf
pushf
imul
loop
add
or
sbb
lea
pop
ret
popa
sbb
dec
cmp
mov
jae
sbb
xor
addr16
dec
out
jl
icebp
cmp
inc
dec
mov
push
pop
out
xchg
arpl
mov
sbb
ss
push
sub
cmp
fdivr
fcmovnu
rorb
mov
scas
mov
stc
xchg
pop
sub
fwait
int3
adc
push
sub
dec
lods
fsubrl
das
aaa
mov
or
aam
js
add
in
aaa
mov
lods
hlt
sti
repnz
out
and
cmc
mov
or
cmp
lcall
xor
mov
mov
cmp
orl
out
mull
leave
jle
xor
rcrb
ret
or
jmp
dec
ret
adc
pop
inc
cli
stc
fistps
adc
ficoml
dec
cmp
cmpsl
adc
insl
subl
pushf
inc
and
jle
notl
movsl
les
daa
insb
pop
ret
fisubrl
jb
or
mov
adc
add
xchg
popa
dec
mov
xor
fsubl
sub
sahf
loope
jnp
loop
hlt
cmp
gs
add
adc
mov
leave
gs
enter
mov
mov
or
adcb
adc
push
sub
mov
test
pop
mov
out
std
and
inc
xor
mov
jae
hlt
pop
pop
gs
jnp
xchg
sub
test
pop
jns
mov
jle
inc
cmpsb
cmp
leave
iret
xchg
mov
icebp
mov
mov
test
ds
lret
dec
adc
nop
std
mov
sbb
push
lods
cmp
push
inc
jge
ret
xchg
into
sub
xor
pop
adc
jae
pop
and
idivl
sbb
mov
lea
aad
int3
xor
add
sub
push
dec
insl
out
lahf
fldenv
cld
dec
std
inc
push
xchg
and
rcrb
ret
mov
jmp
push
inc
cmc
sbb
test
ret
cmp
and
icebp
cmpsl
jno
out
sbb
cmpl
shlb
jmp
enter
dec
test
scas
add
adc
cli
out
pushf
test
pop
test
aam
outsl
push
mov
fnstenv
ret
and
mov
inc
insb
jge
push
xor
imul
mov
pop
inc
adc
aam
mov
ret
mov
sahf
sub
and
xchg
add
or
sub
test
dec
aad
inc
fisubl
nop
ss
movsb
or
jo
cmpsl
cmp
mov
fwait
jns
lret
shlb
nop
sub
jae
lahf
pusha
cltd
addr16
jp
lock
dec
test
push
pop
fdivrs
cmp
sbb
jge
call
test
mov
popa
popf
popa
iret
nop
aas
cwtl
mov
push
lret
or
xchg
sbb
rorl
movsb
out
xor
dec
das
xor
notl
insl
fs
push
stos
repz
push
xchg
push
jno
jne
nop
cld
jecxz
ss
mov
xlat
shlb
pop
sub
adc
bound
xchg
loope
aaa
mov
imul
push
jl
int3
xchg
lods
add
jl
loop
jl
jp
dec
cmp
mov
fidivrl
clc
sub
dec
out
adc
lock
sub
or
jl
xor
mov
push
cmp
dec
cld
inc
dec
dec
lcall
stc
xor
xchg
sub
mov
cmp
and
mov
stos
cmp
inc
cmp
call
pop
in
pop
lahf
out
dec
in
dec
sub
andb
and
clc
ss
unpckhps
div
push
xor
cmc
sti
cmp
inc
shl
xchg
mov
inc
dec
push
pop
mov
sbb
mov
jge
sub
sub
icebp
sub
push
dec
lods
mov
dec
xchg
test
push
push
xchg
movsb
insb
fidivs
mov
imul
or
mov
orb
shll
test
xor
movsb
out
mov
or
mov
mov
pushf
loop
jmp
insl
push
or
and
xor
fnstsw
insb
pop
and
cmp
fwait
and
xchg
xchg
sahf
ja
repnz
push
xor
sub
enter
fs
scas
cmp
int
in
adc
lret
jns
or
cmp
sub
or
lods
cwtl
mov
and
movsb
xor
icebp
jbe
ljmp
xchg
push
push
mov
rolb
pop
out
xlat
pop
mov
inc
push
xor
jecxz
lcall
mov
stos
xor
xchg
lahf
and
push
add
xlat
popf
and
sahf
and
lock
js
gs
mov
in
int3
sbb
cmp
or
mov
aad
or
leave
push
and
adc
std
jl
and
iret
jb
inc
and
mov
jb
dec
ret
dec
sbb
pushf
xor
repz
mov
inc
add
xchg
jns
or
inc
pusha
inc
jo
mov
or
add
sbb
xor
negb
pusha
mov
outsl
and
push
cmc
push
xchg
fs
aas
mov
in
xlat
inc
cmp
mov
in
aaa
xchg
std
mov
fucomip
movsl
cmpsb
mov
les
gs
insb
stos
push
pop
lret
stos
repnz
out
and
add
or
dec
and
test
leave
daa
scas
fsubs
fmulp
push
mov
cmp
sbb
paddsw
cmpb
pop
inc
add
push
jo
mov
das
negb
xchg
outsb
dec
sbbl
pop
addr16
int
lds
fcomps
fs
bound
je
leave
es
mov
inc
stos
mov
jb
jle
fadd
sbb
pop
pop
cld
jl
mov
mov
jl
add
roll
je
jne
divps
aam
add
faddp
xlat
es
and
loop
inc
pop
pop
stos
test
push
sub
or
mov
push
push
adcl
push
ja
orl
mov
sarb
test
sarb
adc
xchg
mov
movsl
test
sbb
out
out
nop
fdivrl
or
daa
and
cmp
int
jmp
adc
xchg
repnz
repnz
mov
stos
testl
pop
sbb
cmc
hlt
ja
insb
adc
in
out
stc
mov
imul
adc
cmp
cmp
mov
mov
addl
out
jo
jmp
push
pop
loope
mov
mov
xchg
cmp
add
mov
lds
jle
jbe
cmpsb
and
xchg
ds
inc
movsl
sbb
roll
outsb
or
dec
inc
ja
inc
sahf
and
shl
sub
jae
mov
mov
xchg
or
and
in
jl
pop
jecxz
idivl
lock
inc
and
bound
cmpsb
inc
hlt
mov
fidivrl
cltd
xchg
jae
loopne
mov
aaa
call
mov
inc
jmp
dec
mov
xchg
sarl
mov
mov
and
add
fcoms
add
data16
int3
out
push
cmpsl
subb
cmpsb
lock
xchg
mov
dec
ret
movsl
rcrl
xchg
insb
mov
insb
stc
jo
rcl
jns
mov
push
mov
out
bnd
call
dec
insb
lea
mov
loope
adc
and
into
into
fidivrs
inc
das
mov
scas
xor
lods
cmp
xor
lcall
add
daa
cmp
enter
mov
fcoms
jb
pop
jne
mov
jnp
stc
or
arpl
xor
ja
push
push
sbb
repz
insl
mov
movsl
fcomi
rcrb
dec
lahf
push
popf
push
cwtl
xor
mov
add
mov
mov
in
rclb
movsl
rol
inc
sbb
or
cmpsl
sbb
xor
sub
xor
lods
loope
push
scas
xchg
outsb
adc
dec
adc
orb
shrl
push
cwtl
xor
popf
scas
repnz
or
or
pushf
in
mov
cmp
ds
clc
or
decl
dec
ljmp
jg
xchg
scas
fbld
in
sbb
dec
cwtl
sub
into
out
fs
lods
fistpl
sub
aad
cli
shlb
adc
push
pop
adc
cmpb
jb
cmc
cld
test
fiaddl
jbe
repz
inc
div
jo
xor
mov
movsl
push
mov
in
xchg
inc
faddp
sbb
or
popf
cmp
aam
sbb
in
push
jo
scas
out
ds
mov
adc
roll
mov
aam
jl
or
sbb
and
or
jp
xor
xor
out
sti
sti
pop
scas
jae
xchg
js
int3
out
and
mov
fldt
push
and
and
cli
pop
shll
fldcw
pop
lds
push
rcl
mov
mov
xchg
arpl
mov
roll
push
cmpb
pop
jae
scas
and
into
neg
xor
mov
sbbl
pop
dec
inc
cmp
aad
sbb
push
aad
inc
add
lds
sbb
adc
push
pop
rorl
sub
movsb
dec
mov
add
mov
enter
clc
cmpsb
add
sbb
jno
ja
cld
jg
dec
mov
in
imul
rcr
scas
and
jle
adc
xchg
dec
je
xor
mov
enter
xor
xlat
lahf
mov
repz
out
jo
mov
insb
repz
jo
and
addr16
push
dec
and
inc
and
cmp
mov
push
cmp
cld
in
mov
inc
mov
or
imul
dec
or
in
scas
add
out
lea
sbb
js
dec
negb
push
jne
scas
pop
cmp
xorl
pushf
sub
fwait
sbb
pushw
xchg
and
pop
fmull
mov
clc
adc
outsb
sbb
push
jns
jmp
int
cmp
sbb
jmp
sub
mov
sti
pushf
push
ljmp
jae
pop
jg
ret
push
jb
push
mov
test
mov
push
sbb
inc
xchg
xor
addb
fdivs
popf
shl
movsb
ret
push
cmp
lds
aad
mov
stc
dec
pop
jmp
push
mov
cmpsb
sbb
dec
out
fldl2t
jecxz
sbb
xchg
in
mov
xchg
ds
loopne
mov
ss
pop
hlt
nop
dec
fs
xlat
ljmp
and
dec
mov
xor
leave
mov
cmpsb
fbstp
shlb
movntps
stos
loope
enter
mov
data16
sti
inc
push
sti
shlb
mov
leave
push
sbb
pop
sar
cld
leave
jns
test
jp
sub
xor
jbe
xchg
sahf
mov
jbe
mov
xor
cmc
pop
xchg
outsb
jg
lods
push
sbb
movsl
sbb
jecxz
xor
jecxz
or
pop
jno
push
ljmp
out
addr16
cmp
ficoms
sub
mov
sub
aad
sbb
cmpsb
jl
dec
mov
in
repz
gs
mov
jae
test
xor
pop
arpl
xlat
xchg
lds
mov
dec
call
and
xchg
flds
jne
or
mov
xor
shll
add
jo
test
pop
lods
inc
ljmp
mov
div
mov
int
sub
popa
push
lret
pop
xchg
jae
and
out
jmp
fnstsw
adc
pop
push
ja
out
jg
mov
and
in
das
outsb
loop
pop
push
and
out
push
push
cli
jecxz
pop
in
fildll
mov
inc
pop
dec
bound
shl
sbb
push
mov
inc
dec
ret
pop
mov
mov
pusha
test
insb
xor
dec
jmp
inc
cmp
or
nopl
inc
cs
ss
add
pop
dec
push
das
insl
xchg
xchg
dec
mov
dec
pop
test
sub
sbb
bound
mov
or
test
cmc
shlb
dec
cltd
adcl
jmp
adc
inc
push
aad
add
adcl
pop
aad
insl
repz
mov
mov
divl
mov
in
mov
arpl
mov
in
pop
repnz
rol
pop
stc
push
test
mov
push
cmp
in
je
shrb
add
mov
mov
cmp
push
cwtl
ret
cld
pop
jne
dec
xchg
mov
movsb
out
mov
aad
mov
sbb
sub
mov
rorb
sub
push
lcall
cmpsb
dec
cmpsb
call
mov
xchg
je
mov
add
cmp
iret
jne
dec
xor
roll
test
mov
xchg
sti
dec
sahf
aad
les
or
push
and
sub
negl
lret
mov
and
dec
adc
push
pop
add
add
idivb
or
xchg
mov
cmpsb
mov
cmpsl
pop
out
sbb
dec
and
lcall
jge
sti
inc
fisttps
testb
jg
imull
inc
movsb
movsl
lock
mov
lahf
aaa
ret
fstpt
or
int3
xchg
mov
daa
xchg
fwait
pop
faddl
cli
and
aaa
mov
mov
pop
ret
pop
jmp
mov
rcrb
mov
clc
push
and
mov
add
push
cmp
inc
xchg
loope
sub
cmp
div
mov
cmp
shl
mov
sbb
mov
xor
mov
shrl
push
mov
std
xor
mov
and
sahf
adc
xchg
notl
in
cmp
shrl
xchg
mov
cmp
stos
cmp
pop
test
inc
pop
jne
sbb
xchg
out
jge
cmp
pop
cmpsl
xchg
insb
pop
jnp
push
jno
xor
loope
jno
test
shlb
in
jp
loop
jbe
stos
add
leave
fistpl
test
xor
je
fldt
mov
xor
data16
stos
and
das
pop
cs
jg
mov
shrl
data16
inc
ret
outsl
cltd
pop
jns
jp
dec
imul
push
mov
imul
fisttpll
xchg
cmpl
pop
or
sub
cmp
and
lret
push
inc
enter
cmp
push
inc
pop
mov
fisubrs
ds
or
sahf
fxch
sbb
mov
push
mov
cmp
mov
sahf
mov
inc
inc
push
cld
inc
sti
sbb
lea
insb
dec
inc
pop
sub
push
dec
inc
mov
cwtl
pop
dec
and
jnp
stos
pop
push
ficoml
mov
cmp
roll
test
sbbb
jnp
je
psubusb
hlt
or
push
lock
in
test
loope
mov
or
imul
loope
enter
into
mov
cmp
call
add
jbe
and
mov
mov
pop
leave
int
jb
icebp
lea
movsl
add
sbbl
xor
cmpsb
into
pop
int
imul
out
and
data16
jne
or
ret
inc
jns
xchg
cmp
lock
jle
pop
jmp
xchg
mov
dec
inc
adc
jne
int3
jmp
cmpl
lds
in
dec
js
jae
fstpl
loopne
push
not
jno
lahf
adcl
or
mov
mov
pusha
loop
iret
mov
inc
add
test
mov
push
push
fldz
cmc
mov
test
pop
pop
sub
pop
mov
in
repz
jns
xchg
pop
dec
mov
jae
push
addr16
mov
lret
dec
enter
lret
fadds
dec
aad
leave
sbb
sub
aas
push
lods
lods
imul
push
mov
es
jmp
mov
push
aam
adc
sub
jl
cli
call
pop
and
data16
imul
xor
inc
mov
sub
loopne
mov
xor
adc
lret
pop
lock
sahf
pop
mov
adc
and
xchg
mov
inc
fildll
das
aad
fidivrs
mov
repz
popf
xor
inc
inc
jae
cmp
lret
mov
jnp
pop
jns
pop
shl
pusha
fstpt
pop
xor
xor
cmp
lods
sub
pop
mov
pop
dec
and
cmp
icebp
add
pusha
mov
mov
jbe
sbb
dec
cltd
outsb
pushf
push
int3
fdivrs
mov
pop
lods
es
std
int
xchg
sbb
xchg
xlat
fsub
or
mov
sub
in
shlb
add
ret
ljmp
dec
test
std
push
in
lahf
enter
sti
and
out
cmp
xchg
dec
mov
shlb
push
jne
pop
arpl
dec
mov
push
xor
jbe
lret
enter
movsb
insl
das
xor
xor
inc
lcallw
mov
mov
mov
add
pusha
push
jbe
jge
mov
insb
xor
pop
mov
aas
addb
test
shr
loopne,pt
sub
jl
mov
jmpw
sub
leave
arpl
or
sub
shl
or
jge
leave
test
xor
js
adcb
xchg
pop
sti
jns
add
and
push
ja
cmp
xchg
pop
bndstx
ja,pn
hlt
and
int
std
aaa
stos
xor
scas
out
ret
push
pop
popf
ljmp
mov
mov
ljmp
adc
out
test
or
in
dec
jns
ret
xchg
rcrb
jno
sahf
sub
pop
dec
xchg
xchg
fidivl
jle
xor
out
pop
adc
outsb
pop
mov
test
cmp
mov
jge
mov
aad
lret
mov
imul
xchg
jp
je
cmp
mov
cmp
jmp
fdiv
jnp
sub
push
push
jnp
ljmp
das
aad
push
sbb
fsubs
xor
sbb
cmp
jle
push
mov
sub
lock
xchg
sbb
ret
sub
inc
aaa
pushf
jnp
adc
lds
add
aas
bound
pop
inc
test
jns
adc
xchg
in
add
sti
pop
sub
ret
pop
add
xchg
xchg
dec
incl
popf
inc
dec
sar
dec
xchg
test
mov
imul
mov
dec
repnz
add
mov
pop
cli
ret
cmpsb
iret
and
leave
cs
or
or
dec
inc
lock
fcomip
sbb
ret
pop
push
mull
push
gs
sub
mov
shrl
out
jle
fldenv
mov
test
adc
cld
out
add
xor
sub
mov
aaa
pusha
fistl
cmpsl
adc
add
out
adcb
imulb
outsl
cltd
arpl
iret
cld
cmp
pop
ds
cmc
xchg
rclb
push
dec
into
lret
ret
imul
inc
jbe
pop
cwtl
sub
or
daa
push
mov
dec
sahf
push
xlat
iret
inc
mov
into
jmp
mov
in
lret
inc
rcl
ja
popa
outsl
sbb
mov
xchg
loope
xor
push
out
push
in
repnz
adc
sbb
push
cmp
ljmp
negb
es
push
arpl
pusha
repnz
outsb
int3
movsb
rcll
es
sub
cltd
movsb
xchg
cwtl
xchg
mov
jp
testl
and
push
pusha
repnz
pop
push
repnz
sbb
xor
xlat
adc
mov
jmp
hlt
dec
out
mov
sbb
rcrl
push
in
push
push
sbb
jl
cmp
jns
jecxz
and
or
jl
lahf
hlt
cmpsb
dec
adc
in
ljmp
lock
sub
cwtl
out
cld
add
scas
psrad
fistpll
test
shrb
lods
push
xor
jmp
mov
jb
xchg
sbb
xor
pop
leave
rcrb
pop
adc
mov
add
cmc
inc
mov
outsl
iret
outsl
xchg
jle
fsubrl
pop
test
fs
std
push
outsb
xor
aad
fwait
pop
lods
rcll
push
mov
repnz
es
shrb
mov
rcll
fildll
mov
mov
jmp
xor
in
xor
fcmovb
ss
fcoml
lock
push
dec
cltd
xor
push
loope
and
in
ficomps
iret
fwait
leave
sti
and
test
push
jns
out
cmp
arpl
mov
mov
jb
and
jl
fisttpl
dec
and
xchg
leave
xlat
jne
jae
rol
sbb
inc
fsubs
push
aaa
sbb
lods
fimull
leave
mov
das
rcrb
daa
data16
call
test
aam
popa
leave
sub
int
divb
rorb
scas
leave
ja
mov
fwait
aas
inc
xchg
adc
repz
jmp
lock
add
stos
cmp
gs
fdivr
dec
sbb
lcall
arpl
in
cmp
icebp
test
jno
push
out
push
call
out
mov
pop
adcb
or
mov
mov
dec
imulb
xchg
hlt
or
or
add
mov
xchg
xor
sub
mov
dec
mov
push
mov
sbb
in
sbb
fmuls
ja
cwtl
or
inc
sti
fwait
ds
fisttpll
inc
xchg
inc
pop
xlat
es
pop
mov
mov
in
and
xchg
scas
scas
jno
test
hlt
mov
lods
hlt
pusha
mov
or
jg
cmp
sbbb
pop
sub
mov
test
push
dec
xchg
sub
pushf
leave
and
adc
in
stc
mov
sub
mov
divb
add
push
hlt
inc
and
mov
andb
xor
and
mov
xor
scas
leave
fists
mov
call
xor
mov
jne
and
jle
data16
sbb
xchg
lods
mov
mov
push
out
in
fnsave
add
adc
imul
mov
or
mov
jge
in
fwait
jl
mov
hlt
and
inc
lret
leave
or
in
adc
adc
jne
or
outsb
das
aam
inc
test
inc
je
inc
test
mov
xor
dec
mov
xlat
or
mov
cmpsb
dec
js
in
pop
loopne
lods
in
hlt
sub
dec
mov
add
lock
sbb
loop
imul
in
mov
in
push
cmp
jo
cmpl
cmp
xlat
outsl
mov
mov
mov
fcomps
push
jbe
movsb
cmc
pop
or
mov
andl
mov
xor
pop
mov
nop
and
popf
jo
add
jmp
aad
lahf
xor
xchg
mov
jo
mov
adc
sub
ds
xchg
bound
xchg
jle
jae
push
push
fcoms
ror
sahf
inc
jo
or
in
pop
daa
fidivl
mov
xchg
pop
arpl
mov
xor
mov
inc
ljmp
sub
sub
shll
sub
fists
or
adc
add
cs
shll
cmp
push
push
xor
into
ror
sub
mov
fiadds
rcrl
in
jmp
pop
mov
outsl
ret
inc
pop
xchg
push
in
or
pop
mov
int3
xor
push
lret
mov
outsb
inc
ficompl
sub
xchg
add
jne
mov
mov
mov
xchg
mov
dec
mov
sub
pop
sbb
xlat
loope
js
sahf
add
inc
lods
movsl
sub
iret
ljmp
jg
cmp
stos
xchg
outsb
push
add
and
mov
out
mov
push
mov
push
loope
outsb
imul
push
push
xorl
addr16
pushf
ljmp
cmc
mov
dec
jge
jecxz
mov
xor
mov
cmp
test
adcl
push
stos
popf
ds
mov
test
stc
test
sbb
mov
dec
sbb
pop
jbe
rolb
fbld
sub
sbb
jecxz
ret
scas
dec
lret
mov
or
scas
out
mov
enter
push
mov
cld
repz
xchg
sbbl
inc
leave
cmp
outsb
sti
push
js
xor
in
sbb
insl
mov
pushf
mov
rcrb
aaa
xchg
dec
movsb
dec
into
pop
sub
and
int3
push
sub
pusha
mov
mov
dec
mov
ja
mov
aam
jecxz
push
push
or
cmp
xchg
les
cmp
nop
and
pop
mov
mov
aad
dec
cwtl
push
or
sub
stc
xchg
mov
clc
mov
sub
dec
xchg
fwait
cmc
hlt
mov
add
mov
orl
jo
pop
and
add
mov
movsl
add
cmp
dec
inc
inc
call
idiv
push
adc
rclb
inc
ja
adc
inc
sti
inc
shlb
xchg
mov
and
test
adc
xchg
jge
xor
pop
cwtl
jnp
addr16
fstps
enter
dec
iret
xor
mov
xlat
repz
sbb
or
and
cmp
nop
xchg
xchg
xchg
lods
push
fnstsw
ficomps
sbb
xchg
cmp
or
inc
mov
sub
mov
jno
fs
jbe
jg
xchg
out
jle
mov
cmpsl
arpl
ss
fildll
loopne
mov
subl
jmp
cld
xchg
cmpsb
aad
in
test
imul
mov
sub
push
cmp
mov
pop
xchg
loope
xchg
adc
push
and
xchg
add
adc
cltd
lea
inc
mov
inc
mov
mov
loop
aas
cld
or
sti
in
jle
or
dec
add
jbe
jno
and
jle
dec
pop
pop
jno
xor
out
or
lods
ret
mov
dec
pop
add
push
rcrl
push
mov
xlat
fcompp
mov
mov
sub
inc
lret
orb
inc
push
gs
out
outsb
and
jno
fisttpll
dec
fldt
xchg
push
xchg
inc
repz
lods
and
les
and
fildl
jbe
daa
lea
sti
pop
and
mov
mov
clc
loope
sbb
cmp
arpl
leave
pop
xor
xchg
dec
xchg
jne
mov
mov
add
adc
cli
xor
pop
xchg
dec
mov
dec
push
mov
push
testb
loop
in
xor
cs
mov
push
in
mov
pop
add
test
push
in
mov
aas
sbb
insb
stos
add
xlat
lret
adc
and
xchg
mov
out
pop
or
and
mov
std
orb
stos
cmp
dec
adc
outsb
mov
and
jnp
mov
clc
dec
adc
pop
aas
loope
inc
mov
pop
mov
xchg
movsl
mov
lea
add
into
mov
call
pop
out
mov
lock
shlb
mov
dec
clc
mov
cmpsb
cmpsb
faddl
push
push
scas
sbb
add
adc
dec
mov
scas
or
inc
or
mov
sub
fsubl
xchg
xor
test
fbstp
pushf
sbbl
push
xchg
pop
arpl
jge
insl
test
push
jb
cltd
pushf
int3
clc
pop
and
dec
fwait
rcrl
sti
cli
dec
cs
ja
loop
pop
push
arpl
outsl
mov
or
xchg
scas
inc
aaa
sbb
jae
outsl
inc
popf
mov
filds
imul
mov
inc
sbb
lock
loop
push
gs
jle
stos
bound
data16
mov
das
cs
mov
lods
xchg
xchg
pop
fwait
sub
gs
mov
cmc
add
imul
std
mov
pushf
je
mov
push
pusha
add
inc
jmp
add
sti
fbld
inc
dec
enter
or
stc
cmp
cld
sub
mov
loop
jecxz
or
jp
scas
imulb
in
inc
scas
push
mov
int3
in
out
js
fucom
or
cmp
scas
ja
or
inc
ja
leave
test
xchg
orb
pop
test
into
inc
das
mov
pusha
sahf
mov
lcall
stc
or
xchg
shll
cld
push
into
pop
push
xchg
and
js
push
push
mov
xchg
and
adc
jmp
mov
loop
scas
adc
lock
sahf
mov
jae
cmc
xor
inc
push
cmp
fprem1
js
aam
mov
inc
movsl
cltd
cmp
ljmp
sbb
adcl
or
arpl
inc
xor
outsl
push
loop
test
pushf
testb
imul
jbe
jae
fbld
cmp
pop
mov
repz
lret
jp
iret
lods
add
pop
mov
pop
inc
insl
cmpsb
adc
sbb
lcall
scas
dec
sbb
cmp
inc
dec
aas
cwtl
push
lea
sub
fwait
movsl
icebp
inc
test
inc
mov
clc
add
rcrl
stos
addr16
fsubp
rcrl
mov
push
jp
lcall
mov
ret
fsubp
adc
push
lahf
out
xor
sti
inc
dec
fistps
leave
jg
xor
sub
adc
shrl
test
push
add
mov
xor
test
je
jl
push
pop
pop
data16
cmp
out
mov
adc
inc
xlat
mov
addr16
shrl
push
idivl
mov
aas
xchg
rcll
in
lahf
lock
ja
add
rclb
sub
xor
lds
into
jbe
mov
clc
out
sub
sahf
imul
clc
mov
mov
mov
arpl
mov
and
nop
sbb
cmc
arpl
pcmpeqb
jg
pushf
bound
xor
mov
push
pop
and
lret
mov
enter
test
mov
and
and
sub
aam
cmp
push
jae
orl
xchg
cmpsb
and
out
ret
mov
ret
arpl
fbld
push
mov
and
outsb
push
js
sub
inc
ret
jmp
mov
or
fcmovnbe
cmp
mov
adc
lret
stos
in
insl
xchg
movsb
cli
add
add
shll
loop
jbe
pushf
icebp
scas
aaa
push
rcr
scas
aas
sub
mov
imul
popf
fsts
idivb
cmp
int3
movsb
xchg
pop
dec
jmp
out
lock
stos
pop
adc
dec
ret
push
xor
hlt
outsl
mov
sbb
cmpsl
pop
inc
add
jmp
mov
scas
shll
test
mov
xchg
or
sahf
das
inc
fs
cmp
fistpll
push
mov
cltd
xchg
push
push
hlt
lret
lods
sbb
loope
hlt
enter
and
data16
and
lcall
dec
pushf
inc
mov
jo
loope
cmp
rcll
lcall
hlt
push
adc
add
mov
lret
leave
jo
and
fiaddl
fcoms
push
push
ret
adc
xor
popa
in
cld
mov
stc
ja
cmp
push
je
sbb
jb
js
xor
lret
cltd
adc
xchg
repz
lret
int
xor
mov
jne
es
mov
imul
mov
scas
addr16
dec
or
stc
jnp
mov
push
je
mov
dec
adc
pop
call
daa
ret
sub
rcr
rcll
dec
gs
data16
imul
jl
xchg
aas
sbb
inc
push
imul
xor
orb
xor
and
mov
add
test
mov
test
es
in
in
out
loopne
add
outsb
outsb
lcall
jae
repnz
mov
cltd
aas
movsb
mov
lods
dec
shll
insb
mov
inc
dec
cmp
nop
inc
fidivrs
les
mov
jle
mov
ficoml
xchg
sbb
adc
cld
lcall
repnz
sub
scas
sub
cli
mov
icebp
repz
clc
dec
out
ucomiss
inc
sti
insb
fwait
jne
pop
or
fsubs
adc
inc
xchg
push
ret
fisubl
mov
xlat
cmp
xorl
popf
push
mov
pop
xchg
push
int
xchg
xchg
sbb
mov
lea
push
and
add
or
nop
out
cmpb
jg
xchg
pop
subl
leave
in
mov
loope
lds
pop
sbb
lahf
lret
add
push
bound
loope
adc
test
jno
inc
mov
loope
or
fsincos
ja
mov
mov
out
dec
je
jns
xchg
sub
or
xchg
inc
jno
and
lea
rclb
or
inc
aam
dec
dec
in
mov
aad
xchg
jb
repz
or
xor
fistl
inc
loop
fstl
test
or
lcall
icebp
xchg
adc
jecxz
stos
insb
mov
pusha
push
or
or
xchg
xchg
loop
dec
imul
inc
rcrb
sti
inc
in
movsb
dec
and
xchg
sarb
cmp
push
dec
dec
xchg
mov
dec
mov
xor
sbb
pop
pop
imul
mov
in
rolb
divl
outsb
push
aaa
gs
int3
and
test
lcall
inc
mov
arpl
ds
sahf
arpl
stos
outsb
stc
roll
adc
jno
xchg
jo
sbb
mov
fdivrs
dec
rolb
outsl
in
mov
out
lret
out
leave
inc
js
sbb
pop
and
ds
adc
fs
ret
rorl
bound
and
fildll
scas
aaa
dec
add
popa
in
clts
adc
dec
dec
cmp
call
pop
dec
jns
out
call
addb
mov
cld
sbb
popf
xor
out
adc
in
mov
push
jae
mov
out
andb
arpl
xchg
push
inc
adcb
mov
mov
jmp
stos
jmp
sub
mov
iret
jne
mov
sbb
xor
rorb
jns
scas
add
or
sti
cmc
mov
nop
sub
dec
add
pushf
jp
stos
pop
push
mov
xor
mov
daa
icebp
dec
rorb
xor
cmpsl
push
and
data16
aaa
jecxz
mov
push
mov
sub
loope
sbb
mov
rol
sbb
inc
lods
iret
add
jno
xlat
jmp
mov
adc
insl
imul
int3
or
out
adc
xor
push
xor
lcall
or
cmp
fidivrl
pop
push
push
call
sarb
inc
dec
dec
in
xor
stos
mov
inc
std
lahf
outsl
scas
add
cmpsb
test
inc
pop
repz
mov
mov
loopne
bswap
xchg
sub
adc
inc
stos
inc
jo
pop
andb
xor
outsl
js
jno
push
adc
and
inc
sbb
add
push
xor
scas
pop
pop
sub
pop
arpl
stc
mov
mov
fcoms
subps
jmp
or
mov
push
mov
repz
inc
in
or
enter
je
jg
jnp
push
pop
into
pop
outsl
xlat
fidivrs
pop
add
jmp
mov
stos
push
sub
inc
xor
in
push
mov
out
loope
lret
mov
stc
je
mov
or
mov
decb
les
dec
inc
cli
in
aam
rcll
adc
mov
outsb
jae
xchg
dec
in
orb
jo
sbb
fisubrl
sarb
xor
xchg
adc
data16
jle
or
pop
stos
add
shll
xor
incb
vmovdqa
subl
das
mov
jae
mov
js
cmpsl
hlt
in
imul
adc
das
add
test
cwtl
xlat
int
mov
mov
cwtl
pop
dec
mov
add
pop
jae
mov
insb
dec
jg
mov
pop
imul
aaa
mov
lcall
ss
sti
sub
test
sti
ret
fisubrl
add
imul
aam
es
inc
inc
out
in
sbb
dec
stc
int3
push
cs
cmp
push
jns
jne,pt
inc
push
lcall
imul
popf
sbb
out
mov
mov
mov
pushf
lcall
stc
daa
psubd
mov
add
jmp
jns
push
loope
adc
out
imul
imul
push
mov
outsb
outsl
aad
js
repnz
mov
jae
and
xor
dec
sahf
mov
je
scas
lea
popa
sbb
xor
sbb
ror
push
push
dec
test
mov
xlat
pop
or
lods
lahf
test
cmp
and
in
dec
insl
aas
ret
sti
or
sub
pushf
mov
xchg
xchg
sbb
sbb
or
stos
enter
ds
jae
and
addr16
xor
test
imul
ret
sahf
mov
lods
add
add
pushf
mov
push
xrelease
inc
cmpsl
rolb
lahf
add
test
and
loope
jb
sub
repnz
loopne
sarl
lea
aaa
popf
push
pop
leave
das
lret
fcomps
pushf
negl
push
add
mov
jecxz
aaa
mov
testl
mov
loopne
shlb
es
adc
leave
push
push
call
pop
outsb
std
jmp
inc
out
lods
or
jg
movsl
dec
aaa
lock
lods
or
lds
adc
imul
enter
sub
sbb
and
es
mov
cld
sti
push
popa
pop
inc
pop
ljmp
xlat
ret
mov
fbstp
in
in
loop
outsb
outsb
aas
roll
jne
push
inc
lods
js
ficomps
xor
mov
addr16
in
jge
jno
out
mov
xor
mov
cld
adc
sbb
es
hlt
ret
mov
mov
jnp
or
jo
stos
dec
out
pop
sbb
cwtl
cmp
inc
aad
in
loope
push
sbb
imul
cmpl
jne
insl
push
std
out
ja
add
push
xor
sbb
stos
test
fistpll
push
xchg
inc
out
sti
imul
inc
shlb
stos
test
mov
negb
jae
call
test
data16
push
xor
or
mov
dec
push
es
rcl
or
push
lock
jle
lods
in
jmp
mov
mov
xchg
xchg
adc
addr16
popa
cmp
pusha
mov
pop
test
jbe
or
push
sbb
std
push
mov
pop
mov
icebp
pop
xchg
jmp
orl
hlt
fnsave
and
mov
dec
dec
aam
test
mov
ss
dec
inc
test
sarb
mov
xchg
jecxz
push
lds
outsl
add
imul
jnp
jae
andb
sarl
cs
mov
pop
leave
fisubrl
sbb
cmpsl
mov
mov
into
lock
add
mov
leave
fs
adc
ret
stc
jl
mov
adc
or
and
outsl
test
add
mov
dec
push
xor
pop
jge
lds
in
lret
mov
fistpl
inc
cltd
sahf
cmpsb
hlt
cmp
js
insb
clc
fcmovne
pop
lret
out
push
dec
mov
out
pop
jbe
adc
mov
cmp
push
dec
jno
shlb
fsubl
cmp
scas
insb
add
dec
push
into
jmp
in
inc
inc
pop
popa
pop
data16
stc
and
cmp
call
jnp
adc
mov
test
add
arpl
jbe
insl
loopne
push
stos
outsl
add
push
inc
sbb
cmpsb
ja
lret
aas
inc
stos
mov
es
outsl
icebp
jbe
dec
sbb
jmp
cmc
cmp
dec
clc
fs
dec
adc
dec
mov
pop
xor
push
mov
mov
test
rclw
mov
lock
push
xchg
xor
push
pushf
call
or
rcr
mov
xchg
and
test
cmp
sbb
cltd
test
loop
cld
push
mov
and
popf
fisttpl
stos
or
xchg
xlat
pusha
mov
call
insb
adc
mov
and
push
xor
or
mov
cmp
xchg
xor
pop
cmpsb
pop
mov
gs
es
fcmovb
faddl
add
ss
cmp
adc
pop
xchg
xor
sub
addr16
pushl
stos
pop
add
push
dec
jge
dec
addr16
int3
jecxz
into
les
std
xor
xor
xchg
out
dec
or
xor
mov
pop
mov
jne
mov
jo
cmp
sbb
js
out
mov
dec
shlb
jb
inc
dec
cmpsl
test
xchg
push
clc
hlt
cmp
clc
nop
xor
mov
cmpl
inc
xchg
push
add
pop
mov
ds
add
insb
push
insl
into
mov
std
mov
aam
push
fdivs
jg
int
push
inc
jecxz
lret
ja
mov
test
test
mov
popa
repz
push
rolb
rcll
jnp
mov
sarb
lods
popa
incl
popf
dec
ror
dec
cmc
sbb
add
pushf
pop
lret
pusha
or
cmp
or
jns
dec
jp
int
incl
mov
in
mov
mov
int3
xchg
adcl
inc
mov
or
xchg
dec
stos
arpl
push
cltd
push
inc
lret
mov
test
dec
stos
imul
jmp
mov
pop
mov
out
push
jns
jl
xlat
test
popf
sbb
jae
fiaddl
sahf
fldl
cmp
sbb
jge
mov
ds
pop
and
in
push
outsb
pusha
mov
testb
push
shrd
pop
and
mov
in
je
stc
adc
std
iret
adc
fbstp
jle
add
fyl2x
and
adc
mov
aas
push
movsb
fsts
mov
sbb
xlat
sbb
int3
xor
stos
inc
pushf
fs
js
and
mov
sub
push
xchg
pop
fs
and
adc
mov
xchg
pop
xlat
xor
lea
adcl
or
stos
and
add
aaa
out
js
in
popf
push
cmp
and
fidivl
mov
rcrb
les
mov
cld
rorl
push
push
ja
inc
sbb
push
cmp
and
fucomip
aaa
imul
inc
push
push
movsb
outsb
push
inc
and
mov
lods
xor
imul
jne
jno
push
cmp
pop
jnp
adc
loope
arpl
in
out
inc
lods
dec
mov
ja
daa
call
dec
dec
adc
cwtl
mov
push
cmp
stc
push
push
pop
mov
cmp
cmp
cmp
fwait
push
fdiv
subl
cmp
pushf
push
add
or
and
test
sti
ret
sarl
jnp
xchg
dec
jmp
cmp
mov
dec
mov
xor
pusha
rcll
sbb
sbb
test
inc
in
jmp
sbb
mov
repz
xchg
push
push
xchg
das
loopne
cmp
inc
dec
xor
sbb
fnstsw
popa
stos
or
inc
clc
mov
push
sbb
xchg
mov
mov
cmp
leave
or
test
jmp
pop
movsb
clc
add
push
shlb
inc
mov
cltd
mov
mov
ja
nop
aaa
outsl
repz
addb
sub
arpl
les
shrl
inc
loopne
jne
popf
js
inc
pop
loope,pn
mov
stc
aad
fwait
stos
or
adc
dec
or
into
mov
cmp
jne
sahf
lock
in
aam
adc
dec
out
fxtract
fdivs
sub
es
or
jno
pop
cli
mov
lods
lea
rorb
lods
out
into
in
pop
jmp
jmp
or
fimull
sub
or
aas
test
jnp
pop
adc
sub
jmp
in
arpl
cmp
jecxz
loopne
mov
cs
fs
hlt
mov
notl
cmpl
pop
mov
inc
ret
rcll
adc
movsl
cld
mov
addr16
insl
adc
inc
adc
mov
mov
push
inc
sarb
arpl
push
out
sarl
push
jns
mov
xchg
cmc
sub
cwtl
xchg
mov
dec
clc
mov
movsl
lea
lea
xor
dec
lcall
in
fwait
xor
mov
pusha
xor
addb
jp
data16
push
jb
dec
fwait
mov
lcall
cmpsl
inc
lret
ljmp
repnz
les
loopne
loopne
fldenv
add
in
and
dec
add
jo
roll
jg
mov
push
loop
inc
jl,pt
dec
mov
push
movsl
sti
ficoml
popa
bound
and
inc
aam
adc
sbb
add
adc
call
orl
call
pop
pop
lret
insb
cmp
add
mov
out
dec
bound
test
enter
dec
dec
jg
and
xchg
dec
push
add
leave
push
cmpl
js
fs
cmp
lods
cmp
sub
out
sbbl
scas
jno
loopne
add
lods
js
clc
insl
push
icebp
sbb
push
or
in
or
sbb
dec
xchg
or
movsl
pop
jl
aad
shlb
andb
inc
call
loop
fcompl
and
scas
loope
in
loope
mov
test
rcrl
lea
jge
push
shll
pop
mov
xchg
pop
lock
xorb
adc
mov
mov
punpckldq
sbb
push
jbe
inc
cmp
fisttpl
mov
loopw
insb
mov
sbb
or
call
push
clc
das
loopne
or
les
pushf
add
dec
shrb
loope
mov
or
jnp
and
aaa
xor
divb
xchg
push
cmp
in
ret
lods
dec
lock
pop
gs
aas
cmp
out
xor
std
mov
fdivrl
int
sarl
in
test
cmp
fstl
pushf
jle
repnz
sub
sarb
push
js
popf
and
enter
mov
insb
out
test
lret
pop
jb
scas
push
fidivrs
les
mov
mov
out
bound
xchg
test
xchg
shrl
leave
add
mov
cmp
sbb
repnz
push
cmpsl
pop
jne
mov
adc
mov
in
arpl
iret
je
mov
sub
dec
mov
leave
lret
pop
jb
or
sub
jne
mov
jb
movsl
mov
cmp
inc
std
push
enter
xchg
das
and
sbb
jae
push
jne
pushf
testl
xor
lock
pop
push
arpl
mov
xchg
cmp
jl
pop
dec
in
cmc
dec
or
xchg
jg,pn
xor
sub
xchg
add
pop
gs
mov
std
mov
stos
inc
cs
fldt
stc
add
sub
inc
jns
inc
loopne
inc
popf
insb
outsb
leave
into
in
push
xor
in
in
leave
lock
jecxz
jcxz
mov
test
dec
ret
aam
and
lods
sbb
mov
ja
jne
cmp
pop
divb
cld
push
ljmp
fisubs
add
leave
jl
dec
xchg
fistpll
movsb
mov
popf
dec
dec
or
movsb
mov
mov
add
jle
jno
xor
data16
mov
clc
xchg
sbb
popa
imul
pop
mov
pop
push
adc
das
xlat
jae
sbb
and
add
outsl
test
mov
mov
loopne
inc
xor
addl
xor
mov
into
jle
jp
xchg
mov
fstpt
bound
ret
in
lods
pop
popf
out
push
leave
es
mov
push
dec
lods
xchg
jecxz
fstps
iret
scas
std
cwtl
mov
xor
adc
mov
aad
dec
ficoml
add
test
xor
mov
jns
je
push
jne
jle
mov
xor
mov
gs
icebp
movsb
and
push
leave
outsl
fildll
push
add
imul
mov
pop
insb
pop
cmp
loop
xchg
outsl
aad
jl
mov
lods
sbb
int3
xchg
in
xchg
mov
xor
stos
mov
adc
movsl
movl
paddsb
das
mov
pushl
in
mov
add
dec
int3
jbe
cmp
stos
js
dec
cmp
mov
data16
and
fimuls
mov
sbb
imul
dec
movsb
shlb
or
cmp
lcall
lret
iret
jnp
jno
repnz
xchg
dec
movsb
mov
cmp
xchg
mov
xor
add
cmpb
mov
mov
mov
stos
scas
hlt
fnstsw
pop
ljmp
imul
push
pop
fnstcw
jg
js
mov
pop
jno
cli
inc
xor
pusha
std
popa
roll
in
add
outsb
push
mov
or
push
sub
pop
xor
jp
mov
loopne
lahf
or
bound
push
push
xor
scas
cld
sub
mov
repnz
sbbl
shll
lret
mov
xchg
mov
jb
mov
adc
dec
gs
lds
popa
inc
adc
push
arpl
lods
cmp
jmp
lods
jge
add
shr
movsl
in
xchg
lea
wrmsr
push
and
popa
jbe
repnz
bound
imul
movsl
aaa
xchg
or
enter
add
inc
push
das
mov
cld
or
dec
lret
stos
test
lcall
sbb
fdivrp
dec
outsl
mov
es
outsl
adc
inc
pusha
xchg
xor
push
xchg
sti
mov
shl
push
push
xchg
stos
xchg
inc
jle
je
cmc
cmp
fistpl
mov
scas
sub
sub
or
adc
push
jge
mov
imul
mov
pop
aad
sub
leave
popa
insl
fstpl
mov
mov
pop
cmpsl
pop
scas
sub
test
iret
sbb
cmp
add
mov
enter
outsl
pop
rcll
jo
lods
sub
fmuls
and
stc
sub
jo
inc
cs
fsub
data16
sbb
cs
and
test
aaa
mov
adc
fcoms
das
adc
fwait
xor
fsubrl
sbb
sub
in
sub
lock
fimull
mov
jo
aad
sbb
push
sbb
xchg
fstpt
lcall
cmp
mov
pop
cmp
enter
dec
xor
pop
push
rorl
adc
xchg
ja
mov
add
shll
mov
xor
add
sub
mov
arpl
outsl
cmp
fbstp
test
decl
shlb
shrl
ret
push
subl
filds
in
dec
imul
mov
aam
std
xor
push
sbb
jno
cmpsb
movsb
arpl
mov
mov
stc
in
cmp
sbb
cmp
xor
es
dec
jl
sbb
xchg
enter
repz
pusha
cs
inc
xor
push
jge
and
inc
pop
mov
mov
xchg
mov
stos
pop
and
stos
pop
inc
sbb
inc
cmpsl
mov
pop
inc
movups
lea
fisttps
dec
xchg
lret
cwtl
mov
adc
test
test
fnstsw
mov
gs
sub
jg
or
xlat
insb
or
rcl
add
inc
dec
sbb
jae
scas
add
mov
xor
ja
mov
push
aam
lods
ds
xchg
and
dec
dec
xchg
mov
mov
inc
insl
sarb
cmp
test
shll
push
adc
dec
xlat
rol
inc
clc
lods
mov
adc
hlt
adc
lcall
test
ljmp
and
jns
rcrb
jecxz
push
push
fcoms
jne
inc
add
mov
fisubl
xchg
dec
mov
scas
xchg
xchg
dec
addr16
loop
iret
shl
jmp
sbb
jle
cwtl
adc
mov
push
imul
ss
cmp
mov
or
dec
xchg
pusha
rcrl
jae
mov
jbe
loope
pushf
mov
cwtl
lret
push
stos
lea
adc
aaa
stc
cmp
pop
mov
jae
outsb
xchg
push
pop
sub
addr16
sub
and
mov
cmpsl
push
inc
decb
xchg
lods
out
test
in
pop
sub
dec
divb
mov
adc
rorb
jp
mov
cwtl
subl
fbstp
iret
int
cmp
mov
pushf
push
add
jae
mov
inc
pop
push
add
popf
in
push
sub
or
cmpsb
or
push
mov
push
sti
mov
push
mov
jl
jmp
sbb
out
cmp
pusha
dec
dec
pop
xchg
mov
maskmovq
testl
rclb
cli
add
inc
aas
sti
adc
mov
js
sti
fs
and
adc
sub
or
mov
cltd
add
jp
cmp
jmp
and
fstl
cmp
mov
adc
and
jp
jb
and
div
fsts
cmp
or
cli
push
vdivss
adc
fdivrs
orb
in
aas
rcrl
sbb
call
call
mov
ror
xchg
into
mov
sbb
push
mov
push
scas
flds
lahf
or
push
xchg
sahf
and
movsl
jne
jno
daa
dec
lea
pusha
xor
jg
cld
xchg
jo
fwait
xor
inc
sbb
fisubrl
pop
pop
pop
ror
jns
mov
sarl
pop
and
jne
sub
std
mov
cmp
leave
add
scas
out
ret
or
cmp
jle
sbb
mov
cwtl
jne
jge
cld
imul
outsl
add
and
aad
push
xlat
dec
mov
jae
test
movsl
xchg
push
lds
add
nop
mov
push
loope
shl
push
cs
js
in
push
mov
xchg
push
out
mov
xor
dec
push
inc
mov
movsl
pusha
cmc
sti
das
jge
cmpsl
jno
push
push
dec
sbb
mov
cwtl
jbe
in
stos
dec
mov
hlt
divl
jnp
sti
or
push
mov
fistps
outsb
enter
shlb
lock
movsb
push
scas
mov
push
mov
mov
into
insl
mov
aad
add
xor
in
jbe
inc
lahf
mov
dec
adc
and
sbb
mov
icebp
sub
cmpsb
rcr
imul
repnz
pop
out
xchg
fwait
ret
pop
jl
leave
ds
add
xlat
nop
vandnps
pop
rcl
mov
iret
pop
nop
push
mov
scas
adcb
jns
jno
loop
lods
push
push
pop
les
add
aas
inc
inc
sub
enter
cli
jb
and
dec
ret
push
out
jmp
popa
scas
loopne
push
gs
mov
arpl
mov
ljmp
out
mov
mov
sahf
stos
xor
or
inc
arpl
xchg
sbb
dec
pop
hlt
out
inc
jns
fiaddl
push
cmc
add
xor
lcall
rcrb
and
pop
test
sub
push
inc
out
movsl
ja
add
mov
cli
jne
mov
push
fistl
inc
xchg
push
jecxz
mov
std
mov
adc
push
lret
add
push
mov
in
ljmp
cmp
lldt
lods
mov
dec
add
leave
movsl
adc
xlat
jl
mov
scas
std
outsb
and
or
xor
sbb
jecxz
stos
push
pop
loope
dec
cld
mov
push
lcall
pushf
loop,pt
mov
inc
ret
push
movsb
movsl
xor
cmc
iret
jg
adc
cmp
xlat
push
push
add
pop
hlt
pop
xchg
pop
add
daa
inc
and
pop
dec
mov
dec
ljmp
ljmp
imul
adc
sahf
nop
gs
sub
out
adc
jns
nop
test
pop
je
dec
xor
mov
push
cmp
ret
rcl
sub
test
push
push
sub
jl
int
int
jo
mov
and
dec
inc
mov
xchg
mov
pushf
or
jbe
inc
mov
shrb
dec
inc
push
inc
push
int
mov
lret
adcb
lods
jmp
scas
icebp
mov
int
fistl
dec
fisttps
not
inc
push
es
push
loope
out
sbb
or
cmpb
repz
add
aam
mov
ret
sub
daa
xchg
xchg
pop
insl
adc
sahf
pop
mov
xchg
sbb
mov
and
ja
mov
sbb
fcoms
push
arpl
roll
and
aaa
or
in
jnp
aaa
mov
mov
mov
shll
mov
sub
outsb
sub
das
mov
repnz
sbb
lock
in
or
jnp
adc
dec
push
icebp
mov
out
popa
or
gs
pop
sub
shll
vpperm
push
cmpl
in
cmp
popa
mov
push
test
dec
rcrb
cmp
addr16
dec
imul
into
jo
xchg
fs
push
or
stos
stos
add
cmpsl
sti
popf
push
xor
lret
and
ljmp
jge
andl
xlat
clc
cwtl
pop
cmp
out
stc
jecxz
cli
add
jbe
sub
mov
enter
divb
sbb
clc
or
jge
scas
jl
pop
cmpsb
hlt
addr16
fmulp
aas
and
sbb
in
mov
shlb
cmp
inc
iret
xor
add
sbb
js
add
fildll
shl
push
push
andb
push
fistpl
lods
call
inc
idiv
sub
cltd
sub
or
rorb
hlt
and
out
test
into
cmpsb
enter
xor
jg
mov
and
or
jp
adc
or
mov
add
scas
je
cmp
movsb
jne
js
push
push
mov
dec
jae
inc
pop
sub
sub
pop
pop
dec
sbb
sub
add
fcmovu
fistpl
pop
sub
push
sbb
je
aam
mov
in
mov
or
pop
sbb
aam
fiaddl
notl
daa
pcmpeqb
std
fwait
cmp
out
mov
call
mov
dec
xlat
xor
and
mov
push
cwtl
test
repz
hlt
sub
push
jmp
sbb
sub
test
ret
mov
cmp
in
or
sbb
dec
cmpsb
lret
mov
sub
aaa
push
ljmp
push
add
sub
jg
sub
sbb
fsts
fiadds
and
fs
or
jecxz
jmp
add
mov
mov
xchg
lods
icebp
icebp
leave
divb
fwait
enter
sub
add
addr16
adc
je
mov
idivb
bound
sbb
stos
mov
lret
mov
in
pop
insl
mov
shlb
pop
in
sub
nop
jbe
andb
out
leave
fadds
jno
loopne
js
jp
sbb
addr16
mov
inc
dec
cmp
ret
mov
cwtl
sbb
sub
push
je
jae
hlt
add
adc
fbstp
xor
fldenv
inc
inc
push
pusha
daa
psubb
mov
mov
sbb
push
sub
mov
mov
xchg
xchg
scas
movsl
mov
scas
pop
push
js
mov
data16
xor
outsb
pusha
je
mov
mov
jp
ret
scas
xchg
xor
and
xor
xor
ficomps
dec
data16
pop
icebp
and
lret
test
lret
xchg
add
js
mov
and
mov
and
clc
pop
js
jg
push
in
sbb
int
dec
ljmp
jno
dec
hlt
shrl
or
int3
enter
daa
push
mov
cmpb
ja
nop
stos
adc
mov
pop
inc
int3
imul
jle
hlt
icebp
and
mov
jl
or
loopne
ja
iret
mov
in
xor
sbb
xchg
test
lret
leave
push
in
mov
and
sub
jl
jae
in
mov
mov
pop
out
lods
push
ficomps
enter
adc
xor
cmpsl
sub
daa
arpl
ret
mov
lods
out
inc
jle
scas
movsb
test
les
std
sub
or
imul
cltd
inc
mov
push
push
add
out
pop
jae
insb
mulb
inc
and
scas
xor
push
cmp
inc
int3
or
mov
adc
mov
out
pop
stc
fs
shll
cmpsb
pop
or
pop
sbb
pop
dec
ljmp
in
adc
stos
test
cld
ja
mov
pushf
xlat
test
aas
mov
imul
test
inc
sub
or
iret
int
andb
iret
jo
cmp
jno
adc
jb
test
cld
mov
aas
jo
sub
mov
scas
ja
adc
insl
adc
xchg
pop
sarl
aam
mov
ja
push
nop
pushf
jbe
pop
push
xlat
xchg
ds
xchg
jecxz
push
ud0
inc
pushf
cmpsl
imul
dec
das
int3
mov
repnz
or
fimull
or
fildll
in
imul
push
ja
sarl
les
fcmovb
pop
repnz
std
jo
flds
test
xchg
mov
int
mov
push
int
insb
xlat
lea
mov
xchg
test
xor
push
testl
test
pop
nop
cmpsl
negl
arpl
shrl
lods
loop
adc
js
fldt
movsl
sub
ds
mov
fcmovu
adc
mov
mov
cwtl
mov
je
jge
rcl
fistpll
in
and
out
clc
ds
mov
js
in
lods
fdiv
ud1
insl
fwait
xchg
fucom
sarb
push
scas
mov
pop
fsubrl
jo
push
inc
repnz
out
xchg
sbb
jecxz
fcoml
es
fbstp
jp
cmp
cmp
sbb
leave
sbb
dec
adc
cli
xor
jbe
inc
pusha
cmp
repnz
lods
lahf
xor
lcall
das
sbb
repnz
dec
stc
jmp
sbb
and
mov
sarb
mov
mov
mov
cwtl
or
and
push
push
mov
jno
fcoml
pushf
and
jg
addr16
xor
mov
dec
mov
jge
ljmp
push
xchg
ljmp
je
jle
sbb
stos
push
mov
sbb
sbb
pop
movsb
lahf
sub
fisubrl
fdivs
rorl
lret
sbb
pop
adc
cmpsl
and
inc
dec
aas
jns
sbb
fbld
dec
mov
fwait
sti
mov
fisttps
loopne
das
and
push
push
sbb
scas
rcll
xor
ljmp
mov
out
xor
stos
add
test
sub
adc
rol
lret
pop
cmp
mov
inc
pop
mov
sub
mov
cld
cwtl
xorb
cmp
xor
pop
lds
mov
or
scas
hlt
mov
jbe
mov
shll
test
out
scas
cs
aam
jg
sbb
push
lahf
push
mov
mov
bound
ja
popa
call
cmc
sbb
or
shr
inc
loope
dec
cs
push
inc
mov
mov
mov
rorb
mulb
aas
pop
and
cli
jg
mov
outsb
and
mov
dec
sub
xchg
or
rolb
ljmp
scas
lods
cmp
call
lcall
add
gs
imul
outsb
iret
mov
daa
add
sti
das
sbb
jecxz
ficomps
sahf
cli
and
ja
movsl
xor
scas
mov
test
pop
xchg
es
jg
cwtl
mov
in
xor
jp
pop
push
mov
mov
push
notb
push
dec
rclb
dec
xchg
imul
mov
loopne
enter
jae
out
add
mov
jbe
leave
mov
xlat
dec
les
pop
pop
cs
sbb
rol
xor
adc
inc
pop
jge
push
dec
dec
mov
sub
sahf
in
out
mov
or
or
jge
sub
add
jnp
lcall
jbe
mov
mov
mov
andb
jge
out
fwait
roll
in
pop
into
repnz
mov
inc
arpl
add
pushl
push
xchg
pop
stos
stos
pusha
cmp
scas
mov
pop
stos
stc
cltd
sarl
cmp
lahf
pusha
mov
js
adcb
repnz
imul
mov
movsl
add
lret
mov
inc
rcrb
add
ret
lds
pop
or
in
jmp
arpl
cwtl
popf
and
pop
dec
sub
mov
stc
cmp
idivl
cmpsl
cmp
push
mov
mov
int3
cmp
test
jo
inc
mov
clc
adc
loope
sbb
shll
sub
push
call
lods
add
inc
pusha
stc
mov
and
inc
imul
inc
push
and
sahf
xchg
xor
cmp
mov
ret
dec
cmc
pop
xor
lock
andl
call
inc
mov
fs
jmp
or
fdivrl
stos
mov
adc
je
movsl
or
pop
inc
cmp
in
pop
sbb
xchg
icebp
outsb
push
mov
hlt
xchg
ret
xchg
dec
jns
imul
test
add
movsl
stos
lods
push
rclb
adc
add
in
inc
mov
xor
and
dec
sub
call
cmpsb
inc
adc
jae
cmp
es
shrb
mov
push
push
stc
testl
cltd
sbb
pop
inc
lret
dec
cmp
das
bound
cmp
push
in
xor
int
mov
jge
aad
mov
sub
push
ret
aaa
push
pop
pop
iret
xor
in
xor
add
in
cmp
insl
aam
sbb
jno
mov
enter
mov
sbb
adc
in
xor
jl
adcb
pop
mov
mov
movsb
inc
data16
xor
xchg
cmp
add
push
pusha
lock
jae
in
lock
xorb
pop
arpl
mov
je
jg
fwait
repz
and
inc
rol
add
add
aad
lds
and
dec
push
xchg
or
outsb
or
mov
ds
cmp
sti
fsubl
or
push
or
jge
aam
in
cs
addr16
lcall
shll
inc
mov
aad
push
or
repnz
add
mov
cmp
cmp
mov
lret
sub
adc
imul
stos
add
and
jbe
or
dec
int
jb
repnz
cmp
jge
sub
out
mov
push
int3
bnd
mov
or
sbb
pop
mov
clc
lahf
mov
jb
pop
xchg
xor
ja
loopne
mov
sarb
cmp
out
pop
mov
and
sub
test
movsb
or
dec
adc
bound
xchg
sbb
cli
mov
les
jne
movsb
jne
test
mov
jnp
icebp
inc
aas
out
pop
dec
jp
ficoms
push
jg
inc
xchg
dec
push
mov
iret
pop
lcall
mov
movsl
sahf
mov
push
cld
xor
fldenv
imul
lahf
xlat
mov
fidivl
inc
cmc
repnz
push
jle
mov
push
sub
fucomp
push
jmp
mov
sar
lock
leave
inc
jg
ret
fnsave
xlat
adc
inc
outsb
clc
lock
je
inc
iret
jne
or
rcrl
in
mov
inc
fs
jns
hlt
sbb
add
ja
xor
jno
fsubrl
bound
inc
fdivr
fwait
mov
dec
dec
in
mov
inc
das
idivl
hlt
popa
repnz
add
cltd
pop
orl
repz
inc
lret
mov
mov
cmp
imul
insl
aas
bound
ret
or
cmp
lods
ja
jnp
int
adc
aas
pop
pop
xchg
or
fldcw
xor
test
mov
rol
loop
push
insl
out
add
sti
mov
xor
mov
mov
adc
and
mov
jecxz
mov
repz
adc
xchg
push
cmpl
clc
mov
pusha
fldenv
ja
pushf
scas
dec
arpl
cmpsl
outsb
or
fs
add
push
aas
pop
xor
jnp
xchg
lea
pop
aaa
sbb
aad
icebp
subb
pop
push
xchg
popl
inc
xchg
inc
out
cwtl
or
and
ret
cmp
cmp
cmpb
imul
mov
iret
cmp
mov
xor
divl
pop
dec
rol
xor
pop
std
xchg
out
iret
stos
mov
insl
xor
int
loopne
jge
dec
jno
cmp
inc
aam
cwtl
ret
mov
jo
mov
inc
sub
add
add
ljmp
or
pop
in
nop
aad
mov
cwtl
pusha
cmp
jo
push
and
out
jle
mov
add
mov
mov
sbb
lahf
pusha
pop
aam
pop
sub
or
push
add
popa
cmp
push
pop
xchg
mov
mov
mov
pop
mov
mov
in
sahf
sbb
jns
out
std
mov
jne
mov
adc
and
xchg
mov
pop
mov
shrl
push
orl
in
jle
adc
xor
stc
xchg
je
daa
push
cmpsb
aam
adc
pushf
aaa
sub
dec
mov
mov
add
mov
pop
xchg
or
mov
or
add
jl
rcr
les
mov
fs
add
pop
dec
aam
pop
sub
push
out
ret
lea
jecxz
add
push
loop
pop
pop
adc
lock
pop
xor
sbb
shll
std
sub
xchg
or
shlb
fs
scas
cmc
sub
lods
scas
in
jecxz
jle
ja
mov
enter
add
adc
lds
filds
enter
imul
dec
adc
lods
ffreep
mov
outsl
mov
hlt
mov
in
mov
lea
xchg
xchg
scas
add
pop
cmp
mov
lahf
in
stos
sbb
pop
les
daa
pop
sbbb
mov
xchg
cmp
dec
pop
sbb
mov
mov
in
xor
iret
xchg
clc
jmpw
ret
cmp
mov
cltd
inc
and
in
inc
adc
hlt
mov
sbb
xor
jle
mov
dec
jae
inc
mov
cmp
lcall
sti
mov
xor
gs
test
push
cmp
adc
xlat
cmc
jle
scas
addr16
mov
mov
xchg
sub
push
pop
dec
xchg
mov
xchg
mov
or
mov
sub
inc
jl
xor
adc
mov
xchg
inc
xor
in
mov
push
scas
add
adc
repnz
mov
jmp
hlt
mov
in
imul
test
pop
or
ds
mov
mov
cmp
cmc
aaa
mov
jl
push
mov
popf
mov
dec
adc
in
mov
jge
dec
pslld
roll
sti
mov
dec
add
push
push
and
add
leave
mov
pusha
lods
fldenv
or
dec
sub
and
scas
lods
inc
sub
outsl
lret
cwtl
dec
fdivrl
cmp
cmpb
mov
push
adc
stc
and
jle
xor
popf
mov
inc
inc
stos
scas
cmpsb
in
mov
into
inc
addl
xor
sub
xor
loopne
cmpsl
sbb
sarl
lds
les
mov
icebp
repz
subl
enter
and
shrb
push
test
into
movsl
std
inc
dec
xchg
mov
push
or
mov
jnp
lret
cmp
es
aad
das
cli
roll
fsub
stos
adcl
stos
mov
cmp
roll
or
movsl
and
push
fs
in
movl
fstps
int3
test
mov
pop
mov
hlt
xchg
ljmp
std
dec
xlat
enter
outsl
fmull
orb
push
add
add
int
mov
push
in
leavew
xchg
fcmovnb
adc
scas
jl
mov
mov
aad
cmp
shll
push
fcomps
mov
jae
cmp
fistl
jnp
out
lds
nop
in
sbb
pop
aas
mov
aaa
out
int3
lock
ljmp
or
jne
test
jge
xor
fwait
push
xchg
fildll
pop
jmp
mov
fsub
insl
arpl
enter
cmc
push
imul
fcmovnu
pushf
js
push
xchg
shrl
sahf
cld
movsb
out
push
iret
cmp
xchg
lds
in
add
roll
mov
dec
ja
fisubs
daa
out
pusha
outsl
punpcklwd
jp
scas
inc
hlt
cmp
inc
imul
mov
out
mov
fs
jne
inc
fldenv
pop
mov
enter
mov
adc
imul
mov
scas
sbb
lret
dec
popf
push
jle
cli
lcall
call
repz
xor
ret
data16
fsubl
push
pusha
mov
jne
hlt
or
inc
icebp
jb
mov
pop
mov
jmp
fisttpl
and
or
in
and
insb
cmp
int3
loope
lahf
jle
movsl
dec
ret
bound
inc
sub
mov
push
std
push
sub
mov
cmp
fisubrs
sub
cmp
inc
mov
push
mov
popf
outsl
xchg
int
dec
mov
pop
cmp
sbb
aas
call
jle
lcall
fists
shrl
jnp
inc
pop
aaa
xchg
push
and
and
mov
mov
push
cmp
adc
sub
jbe
adc
push
xchg
leave
mov
and
xor
fdivl
cmp
repnz
fiaddl
mov
cmp
je
add
mov
sub
js
stos
dec
push
pop
xchg
xor
icebp
mov
fwait
popf
sub
jb
cli
or
sub
jne
mov
lahf
dec
jno
and
fldcw
pop
or
hlt
sub
xchg
cs
nop
fsubp
les
loop
mov
adc
xor
or
mov
inc
enter
daa
mov
jns
gs
lahf
jp
je
mov
repz
push
imul
std
js
out
cmpsl
push
es
dec
dec
or
jb
pop
stc
out
scas
test
movsl
push
loope
cltd
jb
out
sti
pop
mov
insl
mov
xlat
push
pop
and
aam
ret
add
cld
mov
mov
popa
pop
jno
push
and
aam
dec
stc
daa
sahf
dec
mov
mov
fucomp
iret
in
stos
test
mov
cmp
mov
dec
sarb
xchg
mov
lcall
sbb
mov
add
rcl
pop
or
lret
lock
xchg
sbb
xchg
push
sti
movsb
out
test
out
sbb
popf
or
insb
sub
mov
fisubrl
test
stos
popf
sub
insb
aaa
dec
xchg
jno
inc
aad
push
aas
push
pop
mov
stc
jnp
out
dec
mov
lock
mov
lcall
mov
push
cmp
mov
jge
cmp
scas
add
das
pop
jnp
mov
sub
mov
mov
jg
and
mov
hlt
and
push
push
rclb
insl
jae
fdivrp
jge
test
pop
and
ljmp
jb
dec
or
ss
aas
in
push
inc
sub
push
inc
cwtl
mov
mov
mov
dec
movb
insb
push
fst
fildl
xchg
and
arpl
stc
shl
fisubrs
sub
xlat
sarl
pushf
cwtl
insb
icebp
sbb
mov
repnz
lret
sbb
mov
arpl
jns
dec
push
cmp
out
cmc
iret
mov
push
fildll
lcall
xchg
dec
pushl
xchg
or
rcl
adc
adc
inc
hlt
loope
shrl
add
popf
push
xor
jge
sub
aaa
push
cli
push
outsl
jns
mov
movsb
xor
jp
mov
insl
stos
in
pop
lods
jns
inc
dec
xchg
addb
lods
rcrb
jp
jne
pop
or
mov
sbb
cmpsl
inc
lock
fidivs
mov
push
out
lret
push
divb
sub
outsl
bound
cwtl
inc
test
inc
mov
in
mov
push
cltd
add
mov
stc
ljmp
xorb
push
mov
mov
push
xchg
or
xchg
fdivrl
movsl
xor
enter
mov
dec
fstpl
ret
jge
mov
sbb
mov
cmp
out
xchg
mov
loopne
dec
sub
out
ret
frstor
icebp
sbb
push
jo
jne
add
adc
push
mov
mov
push
dec
jge
sbb
outsb
out
test
mov
xchg
jp
enter
pop
xchg
in
test
pushf
or
addb
notl
mov
mov
mov
cmp
pop
ret
std
in
dec
xor
sub
adcl
inc
mov
pop
stos
shr
cmp
xor
cpuid
ss
stc
fdivl
add
leave
or
add
add
stos
in
cmc
lock
pop
out
insb
lock
repnz
cmc
aas
cmp
pop
andl
jno
iret
jne
mov
mov
out
cmp
cmpsb
mov
jl
mov
aam
imul
mov
sub
pop
adcb
sar
jns
imull
icebp
fdivs
lret
loope
lea
out
cmp
loope
and
xor
cmpsb
push
in
test
mov
pop
or
stos
repnz
mov
lret
and
scas
repz
mov
je
adc
jmp
jnp
inc
lret
aad
roll
pop
test
cmp
fnsave
lods
pusha
imul
repz
cmp
gs
cld
mov
aam
enter
adc
test
pop
and
icebp
rorl
scas
movsb
fnstcw
shr
repnz
push
dec
xor
test
dec
push
fmull
xchg
or
jecxz
pop
cmp
inc
sahf
lahf
ds
cmp
inc
push
adc
push
push
addr16
xor
aam
push
inc
mov
pop
jmp
mov
xor
mov
movsl
aam
cwtl
aaa
push
fs
in
mov
or
xchg
sbb
dec
xorl
mov
adc
ja
push
sbb
imul
push
xchg
test
dec
sub
adc
push
or
mov
push
xor
pop
mov
and
dec
add
dec
pop
sarl
jp
ljmp
outsb
mov
push
in
dec
pop
das
popa
sti
inc
add
dec
movsb
add
ljmp
push
bound
pop
mov
iret
jg
mov
pop
repnz
fstps
add
sub
mov
call
push
insb
cmp
sarb
jo
shrl
fidivrs
cmc
bound
jmp
sbb
pop
add
mov
leave
pop
push
and
mov
shrb
push
mov
xchg
push
enter
ret
jnp
imul
xchg
mov
fwait
inc
cli
sub
cmp
mov
loopne
pushf
add
movsb
adc
mov
jl
or
int3
mov
xchg
xor
jno
push
mov
ja
out
xlat
or
ljmp
mov
cmp
sbb
xchg
and
mov
xor
enter
push
mov
sub
scas
adc
insl
pop
int
shll
dec
dec
enter
fwait
dec
subl
ds
push
clc
xchg
jne
cmp
inc
lcall
daa
mov
mov
push
in
pop
repz
dec
cmp
jle
je
out
out
mov
fistl
ja
in
roll
insl
pop
add
push
into
ss
rorl
and
lods
jge
pop
repnz
popa
mov
jae
stos
stc
mov
xor
mov
out
mov
push
sbb
mov
out
stos
or
popf
sbb
clc
inc
fstl
xchg
data16
in
add
into
addr16
mov
cmpb
cmp
mov
shr
dec
or
or
cld
xor
loope
loop
rorl
mov
xchg
push
mov
icebp
push
faddl
adcb
adc
and
sbb
xchg
cmp
mov
xchg
add
pop
push
je
inc
or
insb
pusha
subb
mov
test
push
cwtl
mov
mov
rcrl
sub
jae
iret
cmc
pop
idivl
or
insl
test
lock
std
and
lahf
mov
and
dec
mov
lea
xor
cwtl
daa
aad
and
out
cmp
push
aas
ds
xor
lahf
mov
pop
test
xor
mov
loope
xchg
jmp
sub
xlat
dec
cmp
dec
cmpsb
orl
cli
test
pop
out
sbb
cmp
pop
push
inc
das
insb
in
cmp
add
sub
push
mov
orl
mov
xchg
mov
sub
dec
jne
inc
mov
jne
mov
shrb
lea
jno
packuswb
bswap
mov
pop
pop
inc
test
pop
popf
push
add
mov
jg
mov
mov
daa
xor
xor
push
add
cmp
jmp
inc
sbb
in
fs
inc
enter
out
push
cmp
inc
push
ljmp
sbb
adc
mov
stc
fsubrl
mov
adc
sti
scas
sbb
out
loopne
scas
lock
push
int
fisttpl
dec
mov
ret
jge
sub
std
stc
xor
and
decl
pop
lahf
mov
inc
popf
and
add
cmpsb
or
and
in
pop
or
push
cmp
fistpll
xchg
dec
int
sbb
fwait
rorb
mov
inc
mov
mov
add
pushf
shl
test
leave
mov
pushf
dec
pushl
stc
loop,pt
pop
notb
mov
fldl
jnp
inc
loope
lea
jne
cmp
scas
test
sbb
mov
pop
pop
nop
test
in
cld
out
imul
xor
sahf
xchg
leave
cs
push
fsubrl
lret
pop
sbb
aas
je
subb
daa
cmp
add
pop
pop
negb
mov
pop
dec
cmp
ret
loopne
in
and
push
and
arpl
daa
pop
fwait
cmp
fisttpll
push
mov
mov
ror
loop
adc
sahf
inc
popf
cmp
aam
imul
jle
push
push
cwtl
jo
add
cs
leave
push
dec
jno
xor
sbb
sub
mov
addr16
pop
sub
pusha
loop
dec
aad
cltd
adc
cltd
dec
cltd
aaa
rolb
in
mov
mov
xor
mov
cmpsb
xchg
sub
testl
mov
mov
pushf
inc
ret
or
jp
aam
adc
jne
jp
shlb
mov
sahf
push
push
sbb
add
insb
jle
adc
adc
rclb
ja
cmpsl
mov
and
inc
arpl
in
pop
add
dec
ja
mov
jo
je
repnz
mov
fsts
push
out
lcall
add
dec
iret
sbb
lea
jecxz
ret
add
jns
lcall
xor
push
or
xchg
cmpsl
les
stc
ss
inc
ljmp
mov
aad
add
std
notb
mov
subl
sub
out
les
jmp
mov
ljmp
into
es
mov
fcompl
fnstenv
push
out
and
and
mov
xchg
push
pop
cmpsb
push
mov
inc
js
dec
faddl
pop
cmpsl
dec
push
movb
add
and
cs
xchg
les
mov
popf
jnp
sbb
outsb
cwtl
adc
push
mov
jmp
subb
lret
add
inc
pop
sub
or
and
addb
xchg
push
scas
mov
xchg
xlat
sbbl
dec
stos
pusha
outsb
rcrl
push
add
cmc
mov
sbb
or
out
lods
pop
outsb
xchg
xchg
dec
addr16
cmp
mull
popf
fcmovnbe
inc
pop
aas
sub
aas
pushf
sub
xor
mov
fdiv
pop
mov
leave
push
popf
adc
or
daa
fnstenv
xchg
mov
and
clc
fmuls
icebp
sbb
jne
sbb
vunpckhps
mov
mov
shl
fcmovbe
arpl
mov
enter
jmp
sbb
es
sbb
jge
inc
adc
fsts
cmp
popa
pop
and
int
cmpsb
sub
insb
sub
test
push
in
sub
push
cmp
orb
mov
mov
lret
aam
pop
cli
sub
dec
mov
decb
add
or
xchg
ret
rcrl
cmp
lcall
out
pop
push
movsb
mulb
inc
sbb
cwtl
push
xor
nop
das
in
push
or
fildl
jmp
mov
movsb
into
loop
stos
jne
mov
xor
and
repnz
adc
adc
lahf
call
popf
pop
and
mov
notb
decb
sbb
mov
pop
and
add
push
or
pushf
push
push
inc
cltd
rclb
lds
scas
xchg
aam
dec
push
shlb
jmp
imul
push
das
xchg
mov
or
pop
mov
push
fisubrs
sbb
outsl
aas
inc
push
loop
mov
jecxz
jmp
sti
js
push
pop
in
cmp
jecxz
pusha
and
mov
icebp
shlb
jae
mov
dec
add
int
ss
pusha
inc
pop
xor
ret
jno
and
jae
xchg
sbb
push
lock
xor
mov
cmp
jl
lcall
jns
mov
sub
push
xchg
es
jp
and
jns
push
jno
cld
mov
push
xor
pop
sub
xchg
mov
jle
cmpsl
xor
pop
dec
das
aaa
cmp
add
sbbb
les
xchg
sbb
jge
scas
push
stos
daa
pop
push
roll
fxch
ljmp
mov
std
aaa
push
push
pop
and
enter
ja
mov
xchg
aam
mov
lret
fnsave
nop
scas
popa
inc
outsb
and
pop
xchg
data16
and
xor
pop
testb
cmp
insl
in
jnp
scas
lret
imul
mov
gs
xchg
int
pop
inc
hlt
fimuls
xchg
mull
lret
fsubrl
inc
je
or
ret
fs
js
dec
cltd
insl
insl
or
mov
mov
imul
fildl
pop
and
inc
push
and
enter
jno
jmp
sbb
jo
lods
pop
dec
xor
adc
sbb
dec
pushf
test
inc
mov
mov
pop
mov
sbb
imul
hlt
pop
mov
fs
jle
enter
repnz
js
shr
sub
imul
lahf
and
inc
dec
in
mov
jnp
add
mov
call
sbb
out
orb
adc
mull
push
leave
pushf
cmp
lea
xlat
rorl
std
add
mov
mov
rolb
gs
xor
pop
sbb
or
inc
lds
cli
mov
enter
js
ret
jl
xor
sub
jge
stos
sbb
imul
push
and
and
ret
aaa
mov
cmc
jbe
repz
mov
xor
cmpsb
sti
fsubl
cmp
adc
sti
icebp
fwait
das
dec
push
push
adc
fmull
jle
or
leave
pop
fmuls
cmp
imul
jp
fsubrp
ficompl
cmp
push
je
xchg
les
cmpsb
int3
lcall
aas
int3
xor
cld
outsl
inc
ret
sub
mov
gs
mov
xchg
jl
out
pop
cltd
sub
testb
rcrl
loope
repnz
clc
in
movsl
push
and
xchg
ret
aas
pop
jge
adc
mov
fsts
out
mov
adc
stos
xchg
mov
ret
pop
mov
cmp
lods
mov
and
cmc
jb
mov
jmp
sbb
push
lret
sub
rep
inc
jmp
pushf
aas
cmp
push
faddl
fwait
push
lahf
flds
jnp
adc
cmp
mov
imull
icebp
push
sbbb
enter
xor
gs
iret
das
gs
scas
or
xchg
stos
arpl
inc
arpl
and
fiaddl
adc
pop
mov
fwait
xor
mov
pusha
mov
and
rcl
push
pusha
add
pop
inc
push
jp
ss
int
jns
faddl
aas
popa
add
xor
xor
and
aad
add
arpl
xchg
dec
popa
es
mov
sbb
mov
inc
idiv
fiadds
daa
pop
pusha
mov
mov
push
sbb
or
rcrb
sub
jp
adc
popf
add
call
sub
int3
mov
xor
dec
adc
sbb
lods
roll
push
mov
mov
add
jl
arpl
dec
xchg
mov
aam
inc
mov
adc
and
inc
xor
addb
mov
outsb
pusha
aam
jb
scas
adc
pop
xor
pop
xor
inc
xchg
out
popa
into
adc
popa
int
or
js
fldcw
insb
add
xor
push
pop
aaa
ss
fabs
xlat
cmc
shrl
sub
nopl
test
mov
int3
mov
loop
add
adcl
es
insl
loop
xchg
aad
push
clc
scas
mov
or
es
or
lret
je,pt
pop
pushf
fs
int
push
roll
xchg
dec
push
mov
sahf
sub
bound
pusha
mov
lret
adc
test
ja
jmp
xchg
mov
les
push
in
scas
fsubrs
mov
ljmp
bound
push
lods
lret
cmp
cmp
adc
out
cltd
int
and
orb
mov
mov
les
movb
add
xchg
addr16
mov
add
dec
inc
fldl
out
dec
mov
aas
pop
mov
loope
push
fs
fcmovnu
push
call
cltd
out
xchg
adc
mov
sub
arpl
cmc
into
es
pop
mov
mov
in
mov
xchg
xorl
clc
std
lods
cmp
mov
enter
mov
xchg
mov
xchg
mov
mov
lret
cmp
into
adc
fmuls
repz
int3
inc
jns
cmc
fdivrs
testl
ljmp
xchg
sbb
aaa
and
cmp
movsb
scas
pop
out
inc
sbb
call
jecxz
push
push
inc
cmpsl
push
shrb
dec
in
int
xchg
lods
pusha
stos
cwtl
mov
ret
push
mov
loop
fisubs
les
pop
inc
sti
lods
inc
pop
pop
popf
mov
mov
arpl
xor
lret
movsl
cmp
lock
les
inc
subb
sbb
aaa
adc
pop
shlb
jle
push
pushf
ss
mov
cmp
inc
out
dec
mov
xchg
adc
jmp
push
mov
xchg
add
arpl
adc
mov
push
pop
lds
mov
jp
pop
cmp
daa
shll
or
loope
and
xchg
dec
xor
imul
sti
mov
xor
mov
fcmovb
cmp
dec
outsb
orl
or
inc
fndisi(8087
xchg
inc
inc
icebp
notl
rcll
dec
sub
out
leave
shrb
sbb
mov
loop
dec
sti
ret
sahf
jb
jp
out
lods
inc
insl
mov
cli
mov
xchg
mov
mov
les
and
push
cld
mov
push
xor
jae
mov
dec
xor
and
dec
xor
int
aaa
push
mov
push
cmp
mov
arpl
adc
pop
cs
test
insb
mov
mov
jno
test
divl
mov
data16
loope
jl
mov
test
inc
repnz
fs
mov
cmc
pushf
add
dec
stc
push
jae
pop
cmc
push
lods
mov
outsb
enter
xor
mov
mov
insl
mov
dec
out
sub
sub
inc
sbbl
daa
out
xchg
subl
mov
xchg
ja
fdivrl
mov
orl
jp
ja
jb
or
mov
ja
jno
test
mov
cmpsl
movsb
ljmp
loope
popf
insb
mov
cmpsl
cmc
cmp
shrb
jmp
mov
or
addl
jl
jbe
psubsw
loope
das
xor
scas
scas
or
xchg
daa
or
pusha
lods
adc
sbbl
xor
hlt
pop
xchg
sbb
in
pop
xor
fcmovb
mov
imul
cmc
aaa
test
cmp
mov
out
push
lea
je
paddb
fcomip
pop
out
fwait
xchg
mov
test
sub
loopne
push
out
cmpsl
mov
cltd
sti
sarl
push
cmp
mov
cmp
in
mov
sub
movsl
pause
pushf
xchg
call
out
xchg
add
lds
jne
mov
adc
ret
sti
enter
jbe
mov
pop
cli
or
and
mov
stos
pop
or
xor
sarb
movsb
stos
icebp
dec
scas
stos
inc
test
fstps
pushf
cli
mov
cmpsl
push
rcll
xchg
dec
mov
cmpsb
gs
stc
or
xor
lcall
leave
out
jmp
cli
out
cmp
push
cmp
mov
imul
push
sahf
sar
push
cli
das
adcl
jns
sub
icebp
mov
push
add
adc
mov
pop
push
inc
mov
ficomps
pop
rorb
pop
jb
bound
je
les
hlt
cmp
jg
insb
sub
pop
out
xor
mov
pop
les
add
inc
addr16
pop
sbb
pop
jne
lds
add
mov
push
imul
push
inc
je
push
inc
arpl
jg
lock
xchg
xchg
ret
ds
fists
leave
cmp
nop
negl
add
loop
std
xor
dec
out
movl
fldl
or
outsb
iret
pop
jns
loope
rcll
icebp
jecxz
jne
fucomp
adc
jle
jg
fwait
test
fbstp
cld
jecxz
add
mov
test
pop
push
inc
push
fsubrs
mov
mov
lahf
jnp
pushf
int3
dec
mov
xchg
mov
xor
push
xchg
negb
imul
or
inc
xor
pop
movsl
ja
push
test
pop
dec
rclb
iret
mov
cli
movl
cwtl
loopne
dec
dec
push
ds
jns
ret
rcl
xor
imul
mov
into
pop
ret
mov
aas
pusha
xor
xchg
stos
mov
cwtl
or
lcall
xchg
lods
imul
or
jno
sarb
movsl
cmc
cmp
lods
jmp
jle
rcll
hlt
jp
popa
insl
ljmp
cmp
mov
into
xor
mov
add
mov
cwtl
pushf
pop
pop
pop
bound
sub
inc
dec
movsl
sbb
xchg
popf
push
shl
in
aaa
arpl
leave
sub
fnstenv
xorb
mov
push
ljmp
fnstenv
mov
mov
pop
mov
rcrl
lods
into
into
dec
xchg
test
sub
mov
or
xchg
das
jb
mov
and
notb
mov
fmull
test
inc
xchg
sub
int
arpl
mov
lods
adc
jecxz
dec
call
xchg
daa
outsl
lods
xchg
or
adc
jns
sub
cmp
xchg
aad
ucomiss
mov
push
gs
std
stos
stc
test
jmp
add
mov
lds
xchg
movsb
adc
lods
sbb
adc
add
dec
imul
dec
pop
push
pop
fs
sbb
clc
out
rcrl
mov
test
push
xchg
xchg
fisubs
dec
adc
and
sub
test
lcall
pop
std
mov
mov
jl
xor
int
mov
pop
cmp
dec
lgs
cwtl
das
test
jl
addr16
or
adc
push
jb
dec
mov
stos
pop
lods
les
mov
sub
and
test
pusha
push
js
in
hlt
rcrl
mov
fdivrl
mov
mov
test
aam
dec
and
loop
mov
pop
mov
and
dec
sub
mov
iret
icebp
mov
add
and
mov
sbb
sub
jge
mov
mov
sbb
mov
pop
daa
in
ret
or
stos
or
aas
daa
sbb
mov
mov
adc
push
dec
jno
les
add
cmp
and
gs
xor
shr
push
fwait
into
ss
pop
sub
xchg
or
inc
push
repz
cmp
test
and
sub
ficompl
cld
pusha
shlb
xor
inc
push
xor
dec
fwait
nop
movsl
lods
sbb
push
loop
mov
in
cmp
or
ret
xlat
jnp
xor
pop
pop
push
nop
sub
sarb
std
xor
jns
das
push
or
test
test
test
cmp
leave
jns
sub
out
ret
and
aaa
mov
sbbb
or
mov
mov
cli
loopne
dec
das
push
lock
mov
mov
bound
shl
lcall
setns
xor
or
cvttps2pi
jno
dec
adc
into
stc
dec
mov
mov
pop
xor
es
data16
scas
nop
stc
pop
pop
loop
pop
daa
jbe
test
jbe
adc
insb
mov
repz
xor
pop
cltd
fiaddl
jl
das
std
test
movsl
fbstp
ss
sbb
popa
sbb
mov
push
mov
jo
cmpsb
sub
leave
xchg
fsubl
cwtl
clc
rorb
adc
cld
ja
mov
into
out
es
add
hlt
mov
jo
jmp
xor
xchg
pop
xchg
cmp
push
out
xchg
sti
cltd
add
jb
jp
inc
or
ret
inc
add
xchg
xor
imul
sbb
dec
loopne
push
jae
xchg
mov
aam
xchg
pop
pop
into
push
sub
push
arpl
jecxz
fisttpll
inc
mov
mov
adc
sub
xor
hlt
in
iret
icebp
pusha
jae
jge
pop
pop
cmp
xor
mov
add
ret
aas
push
in
subb
and
incb
ljmp
lret
dec
aaa
lahf
imul
sti
mov
iret
nop
addr16
jne
mov
movsl
int3
adc
mov
movsl
inc
into
lock
hlt
cmp
call
stc
leave
xchg
add
pop
ret
aaa
sub
sbb
sub
xchg
and
imul
jne
test
xor
loop
push
mul
rorb
sub
sub
scas
cmp
mov
ret
ds
je
mov
xor
mov
call
pop
xor
popa
mov
shl
pop
loopne
xchg
inc
jecxz
or
shlb
adc
mov
lods
cmp
mov
in
out
ficoms
fldenv
test
popa
jbe
mov
or
sbb
aas
cmc
fdivr
pop
adc
or
addl
stos
and
fadds
cmc
ds
push
ret
push
add
sbb
push
orb
or
mov
dec
push
mov
out
sub
lds
pop
xchg
dec
mov
lahf
sbb
lods
nop
jge
mov
jle
flds
jno
rorb
inc
call
add
jle
sub
mov
xor
mov
aad
ret
fsts
movsl
inc
les
leave
adc
fidivl
popa
push
pushf
push
add
dec
notb
rol
jle
mov
or
insl
loope
and
repnz
notb
pop
out
into
mov
lcall
mov
repnz
jb
dec
roll
in
aas
pop
test
int3
clc
adc
repz
cmp
add
sub
inc
mov
jg
mov
pushf
add
es
jb
xchg
cmp
ret
shll
mov
mov
sub
pusha
outsl
push
push
push
out
inc
je
mov
rcr
loop
shll
sub
mov
add
pop
lar
inc
sarb
out
inc
xlat
ficoms
mov
mov
jo
mov
and
call
in
enter
pop
pop
jecxz
jmp
aam
inc
xchg
inc
std
mov
cmp
dec
pop
popa
lock
test
adc
add
pop
mov
jg
lret
mov
imul
cwtl
mov
inc
lods
out
jnp
orb
pop
sbb
sub
fwait
push
xchg
lahf
into
cmpsl
sarb
stos
jbe
vpmuludq
cmc
in
push
mov
cmpsl
cld
loop
in
rcl
mov
push
or
out
mov
sti
mov
jns
rcrb
int
std
shlb
sbb
inc
mov
ja
pop
outsb
pop
std
pop
iret
call
stos
dec
sub
je
scas
bound
cmp
and
sarb
xor
loop
js
and
mov
sub
adc
pop
xchg
push
cli
popa
bound
loop
inc
es
mov
fisubrl
rorb
dec
in
test
fistpl
iret
pop
sbb
push
out
cmp
ljmp
inc
mov
mull
push
pop
fs
dec
ret
sahf
jbe
sub
negb
and
cmp
inc
shlb
ljmp
shl
mov
out
outsb
test
stc
cmp
jp
adc
icebp
sub
push
sbb
jb
push
push
mov
mov
dec
or
inc
ds
stc
adc
adcb
lret
dec
lock
or
xchg
inc
cmp
push
xor
in
test
push
pop
das
aaa
movb
inc
jecxz
lea
aaa
ljmp
iret
pusha
loopne
add
sbb
sarb
test
push
pushf
pop
xor
imul
call
popf
aam
ds
addb
add
lods
in
les
cvtps2pd
mov
sbb
sub
scas
dec
popf
popf
sub
sbb
or
fs
arpl
mov
or
pop
or
sbb
mov
in
mov
int3
xchg
mov
xlat
add
add
cwtl
das
mov
test
inc
repnz
xchg
lock
jnp
pushf
imul
mov
mov
mov
adc
in
and
js
scas
xor
pop
ds
in
insb
push
in
fisubrs
mov
pop
sbb
addl
bound
inc
pop
aam
cmc
jns
mov
bound
pop
jne
or
mov
dec
sbb
imul
mov
jle
jae
push
cld
ljmp
adcl
repz
lds
rorb
repnz
or
push
movsl
ja
out
inc
sub
sub
nop
pop
popa
in
jecxz
inc
lret
inc
fstl
cmp
fs
movsb
outsb
mov
data16
push
stos
add
fcomps
mov
ja
push
xchg
mov
sub
nop
push
push
sarl
inc
or
dec
mov
adc
sub
orb
pop
mov
sub
xor
dec
mov
inc
rorl
repz
add
add
dec
cmp
dec
notb
push
stos
push
popa
pop
mov
rcll
jl
sub
fwait
lret
fidivrl
sbb
add
jle
xchg
push
gs
xor
call
push
out
aas
arpl
inc
repz
xchg
out
xchg
ds
mov
mov
add
sbb
jno
mov
jmp
and
add
mov
insb
inc
bound
pop
push
sub
mov
fldz
inc
decl
sarb
in
inc
stos
jbe
add
xor
mov
fwait
sbb
ja
xlat
negl
xor
mov
test
sub
pop
push
adc
repz
push
dec
push
sbb
xor
cmp
call
shlb
mov
cli
ja
pop
adc
push
mov
push
repz
fwait
les
sti
outsb
mov
xor
fdivs
dec
jp
add
push
inc
pop
call
jmp
push
cmpsb
xor
stc
rolb
xchg
test
nop
in
sti
test
mov
push
fisubrl
mov
and
push
sbb
mov
popa
stos
push
push
fwait
in
sbb
ds
lds
fs
sub
lods
movsl
lahf
sbb
lret
push
dec
repz
mov
cli
shlb
jnp
testb
mov
mov
sub
inc
or
out
push
dec
xor
cmp
fs
jmp
or
jp
mov
adc
sub
nop
jge
sbb
and
ss
fidivrl
sub
push
repnz
cmp
rorl
andl
sbb
fs
cmpl
pushf
and
adc
pushw
fcomp
add
aas
jne
sbb
inc
test
mov
divl
enter
jle
ljmp
inc
adc
mov
mov
push
cmp
inc
jl
push
pop
add
cmpsl
fwait
divl
int
mov
incb
adc
clc
inc
ss
xor
push
sbb
out
ss
jecxz
sbb
call
pop
lahf
call
or
push
mov
or
push
dec
std
push
rorb
jno
jl
xlat
mov
or
mov
in
xchg
arpl
nop
test
lds
fadds
movsl
ja
vmread
push
stos
mov
rorl
lock
popf
pusha
inc
xchg
or
jno
jmp
les
cwtl
pop
aam
jl
imul
lret
hlt
scas
mov
fdiv
mov
xchg
loope
jb
add
cmp
sbb
iret
mov
cmpl
pop
jp
cmpb
pop
cmp
dec
adc
mov
in
cmp
out
bound
inc
and
mov
mov
xchg
stc
sbb
cmp
mov
sbb
pop
ret
jecxz
fldt
jp
and
inc
xchg
lret
loop
aam
jo
lods
jns
repnz
ljmp
jmp
lret
cmpsl
dec
clc
and
push
pop
push
push
or
ljmp
loop
repz
adcl
sbb
mov
outsl
sbb
pop
dec
xchg
scas
dec
jne
pop
inc
movsl
in
xor
arpl
mov
jb
aam
fiaddl
xor
sub
jno
jbe
mov
mov
push
mov
pop
imul
or
dec
pop
fs
in
lock
pop
cmp
mov
ret
add
xor
cmp
movsb
dec
lock
inc
stos
or
xor
and
mov
inc
adc
add
fisubs
shlb
into
lods
xlat
stos
mov
pop
test
idiv
jl
xchg
push
jmp
mov
sub
sbb
aas
and
fmull
xor
mov
mov
mov
mov
sub
add
sbb
and
jge
push
insl
outsl
xor
cmpsb
lock
inc
add
inc
cmp
pop
mov
adc
lcall
xor
jl
test
push
ret
push
mov
pop
xchg
adc
dec
add
ss
mov
jg
pusha
dec
out
hlt
fs
int3
push
dec
dec
jg
push
jns
in
mul
into
enter
ljmp
arpl
adc
test
cwtl
xor
cld
movb
out
out
xor
iret
dec
leave
and
outsl
push
nop
xor
cli
movd
xchg
and
js
pop
cmp
cmp
and
dec
stos
scas
pushf
xchg
dec
mov
mov
scas
imul
out
nop
fimuls
mov
cmpsb
push
clc
sbb
insb
mov
scas
into
inc
lea
cs
or
mov
shlb
push
add
add
mov
punpcklbw
std
and
push
sub
jnp
std
rorb
shl
pop
and
jo
in
dec
add
xchg
jg
mov
or
xchg
fiaddl
cmp
pop
negl
fld
dec
adc
xchg
mov
ss
sbb
fsubrs
outsb
outsb
jne
test
xchg
adc
cmpsl
mull
roll
aas
push
inc
cs
stos
inc
jae
orl
xchg
mov
lds
decl
jmp
fstp
sti
jo
mov
test
lcall
mov
mov
pop
dec
clc
popa
jb
push
bswap
ja
pop
std
aam
adc
pop
adc
test
std
jne
imul
push
das
out
or
dec
jl
repnz
mov
mull
fsubrl
popf
xchg
mov
pop
pop
sub
inc
or
pop
jmp
xor
sbb
sbb
inc
add
xor
inc
cltd
insb
xchg
mov
int
incb
jg
cmp
and
movsl
les
ljmp
out
ljmp
sarb
jle
inc
jno
aam
cmp
ss
bound
sbb
sbb
and
push
test
ja
push
pop
jecxz
push
add
mov
popf
sub
int
and
lods
jecxz
in
mov
mov
or
pop
lods
pusha
sahf
dec
dec
dec
out
jne
push
dec
adc
jae
push
bound
bound
ffreep
ja
xor
dec
jbe
daa
fcomps
mov
jnp
das
outsb
sub
and
jecxz
inc
adc
les
jle
inc
mov
popf
movsl
sub
pop
jp
add
rcll
inc
or
push
outsl
push
push
xchg
xlat
sti
loop
inc
pop
sub
mov
fidivrl
mov
cmp
xor
pop
pop
data16
mov
cmp
enter
int3
lcall
es
mov
push
xchg
push
imul
sub
xor
jg
pop
dec
lret
mov
std
push
jno
sbb
cmc
fldl
push
ja
cmp
jae
xor
push
popa
mov
sbb
rcrl
and
sub
inc
push
mov
fnstcw
sahf
mov
adc
les
xchg
push
sub
stos
sub
jge
loop
xor
xor
test
push
sub
add
sbb
jl
ror
out
ret
movsl
mov
hlt
pushf
loop
xchg
lods
add
rclb
adc
lret
xchg
hlt
or
lret
adc
loopne
xor
jae
int
enter
ss
push
push
sbb
push
jo
mov
push
or
out
or
mov
push
pop
push
mov
jmp
mov
push
call
scas
inc
je
sub
xchg
pop
scas
pop
mov
sub
pop
xchg
dec
and
cmp
xchg
stos
inc
mov
pop
int3
stos
insb
xchg
clc
dec
cs
push
lock
dec
dec
fsub
mov
leavew
sbb
out
sub
pop
fs
lock
jbe
lret
xchg
pushf
shrb
subb
jae
jno
and
pop
enter
hlt
jp
movsb
fistps
and
mov
mov
jg
dec
insb
les
ljmp
jne
mov
out
pop
fs
dec
enter
jo
jae
push
cld
cmpsl
js
sub
loopne
daa
lret
xor
mov
jnp
cmp
jnp
call
daa
mov
add
aam
cmp
aad
jae
pop
xchg
lods
jg
repnz
daa
xor
jne
or
mov
sbb
cmc
insb
aad
xor
enter
das
jnp
rolb
outsb
xlat
and
mov
lock
xor
pop
stos
sbb
xor
stos
fsubr
push
mov
dec
pusha
ficoml
es
and
push
jle
pop
icebp
stos
adc
xchg
testb
mov
je
ret
gs
mov
jecxz
out
mov
sub
dec
jmp
pop
rorb
pop
daa
test
adc
mov
mov
inc
xor
push
fsts
mov
mov
fsubs
cli
xchg
add
dec
add
mov
mov
jnp
repnz
in
bound
push
adc
andl
dec
xlat
shrb
test
jns
xor
dec
lods
pop
inc
and
lock
cltd
add
add
or
and
sub
mov
mov
into
adc
inc
push
stc
jge
mov
mov
dec
cmp
dec
aas
mov
cmp
pop
stos
jb
lret
dec
cmpl
or
addr16
xor
mov
or
jl
xchg
sbb
mov
mov
lods
and
inc
ud0
fs
mov
out
mov
push
pop
cmc
cli
sar
pop
test
and
xor
jle
xchg
clc
mov
stos
inc
mov
imul
notb
mov
sub
shlb
pop
mov
frstor
cwtl
push
call
ret
std
add
sub
lea
sub
fstl
or
and
divl
sub
or
pop
pop
push
outsl
insb
fiaddl
rclb
mov
xor
clc
inc
cmc
scas
xor
lea
mov
pop
jmp
scas
mov
mov
mov
cmc
nop
xchg
cli
fnstcw
push
inc
test
out
in
push
scas
pop
enter
test
insl
or
sarl
add
jmp
pop
adc
rcr
adc
fnstsw
push
dec
fwait
jne
xchg
std
mov
adc
fmull
pop
fiadds
xor
sar
xchg
sub
and
fdivrl
movsl
cld
lcall
ret
fisubs
and
lahf
outsl
push
sub
or
pop
fwait
popf
push
sbb
xor
shrb
test
or
xor
jp
xchg
sub
pushf
jne
in
or
or
inc
dec
or
or
sbb
sti
orl
ds
add
pop
repnz
lahf
adc
out
pop
ljmp
push
enter
or
dec
pop
notl
sbb
pop
imul
cmpsb
pop
scas
mov
fsincos
das
insb
ljmp
test
jge
fists
stc
arpl
lds
pushf
and
movsb
popa
and
pusha
addl
xchg
mov
pop
xchg
sti
scas
cmpsl
out
dec
mov
xor
gs
adc
mov
cmp
mov
push
fldt
aaa
xchg
mov
daa
fcmovnu
xor
loop
push
mov
lahf
lods
idivl
inc
mov
mov
sub
mov
hlt
dec
and
xchg
xor
mov
fmul
popf
lret
cmpsb
sbb
ljmp
imul
aaa
sub
loope
jge
addr16
test
adc
jno
outsb
sub
xor
dec
enter
clc
movsb
pop
xlat
and
cmpsl
push
test
xchg
out
daa
inc
sub
arpl
nop
mov
xor
and
xor
inc
dec
dec
mov
decb
std
cmc
lods
test
mov
add
jae
into
and
xor
popa
dec
shr
cmpsb
push
xor
cmp
sahf
testl
lahf
aaa
xchg
movsb
xlat
xchg
xchg
sbb
jno
pop
lret
lea
xor
inc
inc
in
in
insb
xor
fldenv
dec
xlat
mov
adc
xchg
or
aam
adc
call
out
push
xchg
fimull
aaa
pop
sub
loope
adc
sub
mov
pusha
stos
bound
xchg
shl
inc
in
pop
lret
fwait
pop
shlb
sbb
mov
sti
jge
insl
mov
push
cmc
or
pop
imull
das
jo
dec
xor
icebp
shlb
lcall
aam
xchg
sub
fmull
popa
idivb
pop
pop
cmc
cmp
push
push
or
sbb
xchg
cmc
std
in
mov
sbb
mulb
in
xor
mov
xlat
test
pop
ja
into
aaa
hlt
ret
adcl
mov
ret
and
pop
dec
and
pop
mov
ljmp
stc
sti
add
jmp
mov
jae
add
loop
xchg
popf
jecxz
add
imul
pop
xchg
cmpsl
sub
out
rorl
rorl
outsb
sbb
mov
sub
pushf
or
push
in
or
cmp
push
inc
pusha
mov
mov
mov
scas
sbb
push
xchg
sub
mov
call
xor
push
cmpsb
mov
and
adc
loop
inc
rcll
rorl
adc
inc
xchg
or
fisubrs
mov
icebp
cpuid
inc
add
mov
pop
mov
push
inc
xchg
iret
pop
test
cmp
fs
sbb
ja
loopne
test
xchg
mov
mov
iret
aaa
and
xchg
lret
mov
sbb
push
aad
and
enter
xchg
sub
sub
ja
push
jecxz
shlb
data16
fwait
out
or
mov
stc
xchg
sbb
nop
icebp
into
jmp
sub
test
xor
sub
out
xchg
pop
xchg
push
insl
int3
push
pop
sbb
or
or
sub
dec
xor
add
xchg
xor
xlat
add
ror
imul
and
jbe
scas
push
dec
mov
pop
mov
add
ficoms
pushf
mov
cmp
call
bound
fs
inc
mov
insb
je
mov
mov
jnp
xchg
lods
jge
jle
pop
sarb
or
imul
inc
lret
jns
aaa
lret
arpl
ret
leave
in
mov
stos
in
int
ficoms
mov
mov
cmp
subb
xchg
sbb
xlat
pop
and
adc
jae
in
or
mov
dec
movl
cmp
jle
iret
imul
pop
test
cwtl
pop
insb
sub
daa
mov
imull
xor
cmp
pop
out
xchg
repz
mov
pop
fidivrs
xor
jno
in
daa
xchg
mov
jo
popa
xchg
mov
jae
mov
stos
int3
mov
out
mov
aas
pop
push
xor
in
outsb
fcmovnbe
jmp
fmull
dec
mov
push
insb
mov
mov
nop
repz
repnz
cs
adcb
aam
pop
mov
dec
pop
mov
xchg
dec
cmpsb
mov
daa
inc
sub
or
test
gs
push
lea
mov
jae
xorb
lods
arpl
popa
aas
out
inc
movsb
mov
iret
bound
adc
aad
jb
repz
fbstp
stos
xchg
or
push
es
dec
xor
int
cmpsl
out
mov
add
jle
dec
dec
andb
cli
jno
iret
addl
cmpsl
popa
push
cmovp
jecxz
std
dec
scas
mov
ret
cmp
into
ljmp
push
add
orb
or
inc
or
xacquire
jp
cmp
out
add
lret
jae
daa
in
mov
lea
cmpsl
push
repnz
pushf
sbb
inc
fucomip
outsb
push
pusha
push
adcb
add
popf
leave
loop
nop
mov
xchg
mov
fnsave
cmp
sbb
cmp
into
rorb
push
addl
mov
in
or
enter
mov
xchg
daa
mov
fstpl
inc
testb
inc
and
mov
cltd
xchg
jnp
fs
insb
inc
outsl
push
cwtl
push
pushf
sub
ret
cltd
dec
cmp
outsb
fcomp
xlat
ret
in
xchg
inc
ljmp
daa
push
add
push
loop
mov
movsb
je
add
adc
sub
repnz
jle
jno
loopne
shrb
shlb
pop
sub
push
test
push
mov
cmpsb
jle
inc
cmc
int3
sbb
fistpll
push
push
in
icebp
or
adc
xchg
pop
sti
sbb
jae
jae
test
inc
xchg
cmp
jge
mov
push
jb
adc
subb
loopne
mov
adc
mov
sbb
repz
aam
jmp
daa
data16
enter
jle
sub
outsb
cmp
pop
cld
mov
mov
mov
int3
out
lods
inc
xor
jno
dec
insl
xor
mov
mov
lods
adcb
jp
pop
cld
jle
add
std
inc
bound
lods
jmp
les
std
inc
pop
cmp
add
inc
or
hlt
xlat
stc
fmul
jb
insl
jle
push
or
pop
and
dec
movsb
or
mov
mov
xor
inc
clc
mov
push
cmp
or
jle
ljmp
adc
pusha
lods
xor
sbb
cmpsb
js
mov
es
hlt
fwait
mov
push
sub
jecxz
aam
add
cmp
test
arpl
xor
lcall
sbb
sbb
push
shlb
xor
subl
push
fnsave
xor
jp
sarb
aad
shrl
mov
ja
ja
lods
mov
aam
push
sub
iret
mov
fs
xor
cld
je
repnz
adc
jno
mov
add
sub
popf
inc
mov
push
pop
scas
and
hlt
imul
out
call
out
dec
mov
fmul
repnz
jecxz
or
inc
out
in
lret
into
jae
add
xchg
and
cmp
fsubl
scas
inc
mov
mov
sub
dec
test
rcl
aaa
cmovb
fstps
nop
push
mov
test
imul
je
cmpb
or
push
shl
jg
sbb
fistl
jg
push
arpl
jl
ljmp
push
js
or
sbb
add
adc
xor
inc
int3
sarb
outsl
cmp
mov
cmp
or
mov
pop
jg
pusha
sub
mov
popf
imul
push
xor
mov
mov
iret
ficoml
pop
aad
out
sub
enter
ja
or
push
push
sahf
xor
cmp
shll
cmpsl
add
push
inc
xor
or
add
inc
and
ljmpw
pusha
pop
in
mov
mov
imul
inc
mov
lods
xchg
and
and
test
xor
add
repz
ds
in
movsb
adc
clc
inc
pop
push
jne
fstps
sub
stc
cmp
stos
mov
ss
push
mov
pop
or
dec
into
arpl
outsl
mov
ret
xchg
push
and
jne
xor
popf
push
rcll
test
jle
jmp
dec
lret
mov
aaa
cmp
mov
outsl
push
xor
and
pop
lock
notb
out
inc
push
enter
insb
mov
fwait
scas
jecxz
and
popf
test
js
xchg
xor
loop
sbb
cmp
sbb
fiaddl
push
xchg
iret
sbb
adcb
stos
imul
lock
inc
ljmp
xchg
loopne
scas
ss
push
cmc
mov
push
cli
int
ret
sbb
xchg
nop
mov
call
jbe
jg
xchg
cmp
sbb
imul
lock
sub
test
in
add
and
aam
ss
push
mov
xor
pop
mov
mov
add
outsb
add
and
ret
jb
bound
sub
mov
fdivrl
xchg
sbb
pop
sarl
sarb
insl
lea
arpl
lock
lods
xor
or
popa
xlat
rorl
fiadds
clc
es
mov
jbe
frstor
and
mov
xchg
scas
aaa
push
pop
dec
dec
mov
jp
mov
dec
out
mov
sti
into
bound
sbb
pop
push
fcoms
lahf
sub
cmpsb
enter
fiadds
jae
xlat
xchg
jbe
dec
gs
cs
and
and
mov
fists
lret
cmpsb
add
outsb
insb
ss
and
xorl
xor
aam
push
xchg
inc
cwtl
aas
pushf
mov
outsb
jecxz
and
and
stc
popa
inc
xor
dec
jmp
add
sub
jnp
add
insl
sub
outsb
push
pushf
daa
inc
jns
cmp
hlt
lret
adc
or
pop
ret
insb
mov
seta
insb
rcll
icebp
push
mov
mov
jecxz
inc
push
cmp
insl
js
pop
inc
jmp
rcrl
pop
mov
sbb
pop
lgs
out
fcoms
pop
push
and
dec
lock
neg
mov
cmp
orl
xor
mov
mov
inc
sbb
xchg
jb
loopne
or
push
shl
stos
lods
cli
rorl
cmpsl
add
sub
mov
add
or
xchg
add
outsb
cmpsl
jb
pop
fldl
sahf
cmc
in
movaps
dec
insb
push
push
sub
hlt
fdivs
mov
lds
cmc
stos
fcmovnb
scas
add
inc
sub
test
jb
adc
es
and
std
cmovge
clc
dec
repz
lds
inc
pop
inc
shrl
scas
stos
shrl
push
cs
xchg
std
or
dec
pop
mov
lret
cwtl
out
hlt
mov
popa
lock
aam
insb
push
mov
into
out
into
jmp
pop
pop
divl
mov
movsl
enter
xchg
push
testb
sbb
dec
sti
stos
subb
jle
xchg
fildl
cmp
test
movsb
dec
mov
out
jne
or
push
mov
dec
stos
fst
and
mov
das
fs
lods
push
xor
xchg
dec
dec
test
in
sub
pop
jge
mov
test
mov
or
dec
roll
and
enter
push
out
mov
dec
and
lea
push
aad
jb
mov
adc
orb
adc
jnp
call
and
xor
inc
pop
lds
xchg
das
jecxz
rcpps
xchg
cmp
cld
cmpsl
push
inc
push
mov
mov
jae
mov
mov
repz
jge
fisttps
es
xchg
insb
jbe
stos
or
push
pop
mov
stos
fs
xor
or
out
leave
xor
inc
les
subb
and
lea
jp
pop
mov
push
mov
addb
jnp
enter
mov
add
cwtl
mov
imul
inc
andb
pop
js
test
fimuls
xchg
test
pop
jo
xchg
inc
in
dec
out
xchg
jp
inc
sbb
and
mov
data16
mov
mov
add
shlb
dec
push
mov
dec
lods
adc
inc
dec
and
sti
scas
inc
and
ret
push
mov
negl
sti
pusha
rclb
fidivrs
cltd
pop
fisubrs
mov
mov
dec
sbb
inc
mov
add
call
xchg
jge
sub
bound
add
jl
jle
pop
inc
sarb
mov
scas
shlb
xchg
cmp
push
dec
stos
xor
cmc
imul
movsb
es
sbbb
sub
dec
out
fbstp
cmp
dec
inc
ret
frstor
pop
and
pop
mov
enter
js
mov
jnp
cmpsb
shll
popa
ret
les
push
ljmp
jnp
dec
or
fmull
mov
test
mov
addl
push
shrb
adc
les
lea
sbb
scas
dec
rolb
lods
aam
push
dec
aas
xchg
push
or
mov
or
pop
pop
sub
pop
daa
push
cmpsb
int
popa
lock
xchg
popa
cmp
mov
fldl
lret
movsl
xor
push
adc
cld
js
pop
push
neg
xlat
andw
pop
and
pusha
adc
mov
int
add
and
mov
push
cmp
in
pop
mov
fcomip
sarl
out
pop
fistl
test
xor
fsubl
xor
dec
jnp
adc
stos
icebp
js
shlb
jmp
test
sbb
adcb
fxch
inc
mov
addr16
movl
mov
dec
push
repz
and
or
sahf
mov
mov
mov
mov
pop
test
inc
mov
cmc
xor
mov
cltd
loopne
sub
sbb
cmp
das
dec
and
stos
add
aad
xlat
xchg
xchg
pop
mov
sbb
out
pop
mov
je
jno
mov
cmp
cmp
inc
and
xor
xor
xchg
add
jmp
jp
cmpb
loopne
mov
add
sub
inc
xchg
icebp
adc
or
repnz
mov
sbb
mov
cmp
ret
cld
jecxz
fstpt
mull
adc
cld
pop
jge
andl
daa
pop
jb
outsl
add
aad
mov
fwait
adc
out
iret
outsb
lods
mov
add
pop
push
mov
test
aad
or
sbbl
jb
sarl
adc
or
cmc
or
mov
dec
dec
and
xor
movsl
xchg
and
push
sbb
lret
mov
rcrb
outsl
fcomip
mov
stc
or
divl
adc
jge
mov
in
inc
mov
push
lods
in
adc
pop
mov
ja
hlt
xlat
std
fs
iret
push
inc
gs
adc
jmp
js
lret
aas
jne
scas
jmp
push
adc
data16
inc
ds
jmp
cs
pop
cmp
das
ficoms
pop
and
call
jmp
push
mov
adc
sub
cmp
push
push
pop
jo
pop
dec
and
push
dec
ret
dec
adcb
adc
or
sub
outsl
push
outsl
inc
push
xchg
in
pop
and
pop
jo
push
jns
xchg
mov
sti
test
cmp
mov
cmp
movsb
lret
in
jbe
cltd
pop
cs
inc
xor
aas
pop
inc
loopne
and
popf
xchg
rcr
jb
fnstsw
lahf
movsb
or
icebp
andb
into
mov
add
sti
mov
sar
xchg
pushf
mov
scas
movsb
adc
movsl
mov
mov
data16
sahf
mov
cmp
push
imul
mov
shrb
mov
lods
hlt
xor
imulb
ret
outsl
add
sbbb
cmp
mov
mov
gs
fmull
fldenv
fs
cmc
daa
xor
fs
lods
mov
rcrb
add
js
dec
icebp
out
orl
add
xor
pop
pop
mov
popf
test
imul
roll
adc
mov
lea
sbb
cwtl
sub
and
insb
lea
sbb
jecxz
cmc
cmpsl
adc
or
dec
and
dec
jmp
test
int3
sub
xlat
or
fidivrs
and
inc
enter
sbb
shll
mov
fs
pop
push
cmpl
mov
lock
into
or
scas
js
shlb
lret
jecxz
mov
xor
mov
ficompl
xor
cmpsl
sbb
mov
lods
jb
cmp
mov
insl
pop
dec
inc
sbb
inc
and
clc
imul
push
stos
fsubrp
ret
nop
dec
dec
jge
jbe
cmp
sbb
xchg
or
and
or
fcoms
sbb
adc
jns
mov
add
addl
clc
fptan
icebp
mov
imul
pop
xchg
lods
dec
dec
das
dec
inc
xchg
cmp
pusha
mov
std
lret
push
cwtl
lock
jbe
stos
mov
ret
cmp
fsubr
idivb
pushf
xlat
jnp
xchg
or
pop
cmp
xchg
and
push
xchg
xchg
sbb
cmc
ror
cmp
adc
mov
addr16
loop
xchg
xchg
xchg
lahf
mov
mov
js
out
imul
dec
stc
inc
pop
dec
mov
mov
xchg
cmpb
xor
ss
jnp
fucomi
dec
push
inc
loopne
lea
cmpsb
jno
xchg
fwait
push
fwait
enter
mov
mov
adc
pop
mov
add
inc
cld
lret
or
repnz
xor
push
lcall
add
pop
test
pop
lret
add
mov
les
cs
ss
sbb
fs
jge
leave
mov
ret
nop
mov
sub
mov
push
outsb
in
inc
sub
in
jge
mov
vorpd
orl
adc
clc
mov
mov
dec
mov
je,pn
jp
jge
int
mov
mov
lea
xor
lods
cltd
mov
jle
lcall
aad
jmp
fdivrs
imul
sti
sub
push
adc
enter
in
pushf
outsb
adc
mov
adc
cmp
mov
cmp
stos
and
fdiv
popa
xchg
test
or
mov
push
jne
sbb
jmp
pop
push
add
lcall
jns
adc
lcall
jae
fwait
rclb
cmp
xor
gs
push
push
test
ret
jmp
push
push
xlat
loope
push
clc
fsts
popa
and
or
cwtl
inc
cli
sbb
cmp
mov
sbb
mov
mov
or
bound
push
push
into
imul
frstor
incb
sbb
sub
sbb
add
dec
and
push
sub
fldl
adc
arpl
jmp
cli
movsl
rolb
stos
ds
pop
adc
adc
pop
rol
xor
jns
outsl
dec
mov
inc
cmpb
jb
mov
xlat
mov
cmp
mov
hlt
scas
jmp
mov
nop
cmpl
mov
daa
loope
jp
adc
lock
add
xchg
pushf
aad
mov
xchg
mov
jo
inc
loop
push
cmp
sub
ss
jnp
xchg
sbb
stos
push
lahf
pop
mov
enter
fldt
cs
push
cmpsb
sbbl
ret
cmp
jo
jmp
push
testl
mov
sbb
xor
mov
ret
adc
movsb
adc
fwait
sbb
out
mov
cs
add
jns
stos
add
mov
cmp
outsl
ds
pop
add
xor
scas
push
lcall
aaa
pop
mov
popf
fdivrl
and
das
sbb
arpl
jecxz
sbb
xchg
xor
dec
fwait
rcll
jbe
pop
mov
jno
ror
mov
lea
jne
in
ds
dec
insb
nop
xchg
pop
cmp
int3
mov
cwtl
test
out
mov
push
aad
enter
pop
sub
scas
pop
jp
loope
push
add
xchg
xor
scas
out
or
in
cmp
gs
loopne
arpl
inc
mov
fsubs
lret
rcrb
dec
cld
inc
mov
inc
adc
cmpsl
ja
fucomp
ficoms
ljmp
mov
ret
pop
loopne
or
ss
cmc
out
sub
push
notb
adc
cmpsb
lahf
stc
aas
jg
cs
mov
dec
xrelease
repnz
out
dec
inc
dec
dec
jmp
inc
pop
mov
add
and
addr16
mov
lret
mov
pop
xor
inc
cwtl
and
rcrb
jno
cld
push
enter
adc
fbstp
paddq
xor
lret
lods
scas
mov
lcall
loopne
adc
je
inc
adc
mov
insl
pop
push
cmp
icebp
notl
pop
pop
or
jne
loope
pop
aam
sub
rcrl
sahf
sbb
cmc
inc
pop
loope
stc
into
pop
flds
scas
call
add
adc
mov
and
cmc
lahf
adc
int
call
cld
adc
pop
outsl
mov
ljmp
jb
shl
je
pusha
cmp
sbb
mov
xchg
mov
clc
dec
mov
cmpsb
fadd
sub
sbb
rol
pushf
jl
comiss
dec
mov
mov
nop
lret
outsb
push
js
jp
cmpsl
dec
int3
push
jge
push
rcr
mov
mov
loopne
test
fiaddl
aaa
jmp
xchg
ds
scas
mov
mov
push
fistl
xorl
inc
push
push
imul
outsb
push
dec
or
js
xchg
add
decl
pop
sub
aad
mov
mov
inc
loope
sub
idivl
cltd
mov
rcrb
shrl
cmc
dec
inc
pop
jbe
pushf
bound
imul
push
popf
cld
and
int
out
xor
outsl
xor
lahf
push
fwait
sbb
data16
fcomps
and
dec
test
push
mov
xor
lret
ds
inc
and
and
cmp
testl
lahf
test
mov
sbb
dec
push
ja
xor
jne
fs
xlat
test
jno
push
add
insl
adc
sub
fmull
and
mov
decb
fistpll
fs
jl
rolb
sbbl
cs
xor
mov
sub
xor
sub
xchg
inc
mov
push
inc
repz
outsb
pop
dec
popa
adc
or
or
xchg
shl
push
ja
xor
lahf
stos
loope
mov
insl
mov
orl
cltd
sub
ficoms
and
xor
in
mov
xchg
push
xchg
push
mov
and
cmp
and
mov
adc
xor
fisubrl
push
adc
aam
push
les
jl
adc
or
fcompl
dec
xor
addr16
xchg
test
xor
push
data16
sub
inc
pop
orb
push
pop
mov
jnp
fcomi
icebp
nop
add
jle
adc
or
leave
sbb
push
lods
cmc
jns
lods
sub
mov
cltd
outsb
xor
js
lods
cs
fidivs
sbbb
adc
sub
sbb
sbb
mov
pop
mov
shll
or
out
loop
test
jnp
cmp
cmc
je
mov
fdiv
ret
inc
cmpsb
imul
jecxz
jo
cwtl
fcomps
xchg
iret
fcmovnbe
adc
jecxz
call
pushf
adc
xchg
inc
leave
sub
mov
add
cwtl
jge
sbb
mov
pop
cmp
fwait
adc
rclb
movsl
test
imul
pop
push
cmp
cltd
push
inc
mov
adc
add
js
mov
mov
xchg
imul
add
add
in
and
cmpb
out
in
cmp
ficompl
mov
jbe
pop
loopne
outsl
lds
cmp
enter
dec
test
sub
jge
shll
mov
addr16
or
jecxz
inc
or
imul
mov
icebp
or
enter
jg
sbb
push
mov
cwtl
std
leave
stos
sbb
lock
rcrb
jnp
adc
jp
rorl
push
aam
sahf
in
adc
pusha
pop
jmp
sub
sub
add
testb
addl
shll
xor
xlat
push
test
xchg
and
xor
sbb
cmp
aam
int3
filds
sbb
andb
lret
popa
enter
jae
cli
add
inc
sbb
outsl
data16
adc
aad
or
inc
cltd
mov
loopne
lods
cmpsl
push
nop
jge
and
pop
xchg
fidivs
lahf
in
mov
inc
arpl
sbb
int3
leave
insb
inc
out
shl
lods
out
fstl
pop
add
xor
sub
mov
push
and
mov
push
mov
mov
imul
sub
scas
movl
lods
jle
jle
test
lsl
loopne
mov
popf
and
lods
cmc
ret
cmpsl
xlat
dec
mov
es
adc
push
pop
xor
mov
or
sahf
sub
inc
or
enter
inc
ret
jl
ds
push
and
insl
enter
mov
mov
stos
stos
fnsave
push
rorl
call
and
cmp
xchg
lahf
cmpsl
jle
mov
adc
push
out
push
ret
or
inc
jge
or
add
out
into
adc
add
mov
js
jge
cmp
js
sub
pushw
pusha
sahf
adc
dec
or
stos
test
bound
subl
or
call
sbb
or
bound
jmp
jns
inc
mov
jnp
pusha
int
movsl
pop
sbb
xchg
dec
les
adc
cwtl
or
lahf
inc
pop
inc
mov
mov
cmc
stos
ret
adc
or
sti
rcr
jge
push
mov
cs
xor
jg
jg,pt
pop
das
lods
xor
pop
push
jg
ret
popa
jecxz
jle
shll
push
jne
jp
inc
jo
mov
fldt
xchg
rcrl
nop
mov
sub
cld
pop
sub
ror
push
cltd
push
dec
rclb
mov
push
dec
push
cmp
add
repnz
add
pop
xchg
mov
imul
sub
inc
sub
and
outsb
sarb
inc
xchg
movsb
jecxz
xor
jecxz
mov
cmpsb
adcl
mov
aas
and
mov
push
insl
push
scas
test
rcl
scas
mov
and
sti
jo
call
loop
xchg
in
int
rcr
sbb
leave
in
mov
sbb
mov
sub
ljmp
jp
bswap
jo
inc
nop
pop
lods
popa
idiv
movsl
movsb
aad
not
mov
fadds
jo
cwtl
icebp
pop
cmp
push
mov
fcompl
and
subb
mov
call
popf
arpl
mov
insl
sahf
or
out
ficoml
inc
insl
imul
jne
enter
cmpl
in
pop
jle
cmp
xchg
iret
sub
jnp
mov
loope
in
ficompl
dec
mov
add
cmp
repnz
adc
or
dec
in
pop
aaa
popf
add
xchg
test
stc
xor
push
das
testb
fsubrl
cmp
lods
decl
mov
adc
insb
jae
enter
xchg
insb
dec
mov
push
cmp
mov
icebp
jp
repnz
pop
outsl
adc
adc
ss
repnz
sbb
push
out
sbb
xlat
add
or
mov
orl
cwtl
cmpsb
xchg
dec
repnz
mov
jae
imul
mulb
dec
dec
icebp
adc
jg
outsb
rorl
mov
loope
movsb
jb
xchg
mov
and
popf
or
pop
sbb
fnstenv
add
cmp
dec
sub
in
iret
incl
hlt
dec
mov
pop
bound
push
mov
add
adc
sbb
movsl
inc
add
push
call
mov
fwait
sti
dec
out
jnp
vminps
inc
push
inc
mov
mov
sbb
xor
mov
mov
test
fisubrs
xchg
ja
xlat
pop
mov
gs
mov
jmp
cmp
pop
enter
push
into
cli
lock
adc
incl
mov
lods
xchg
movl
out
or
or
dec
sub
xchg
xchg
pop
out
pushf
imul
sbb
in
push
insb
jns
mov
jns
cmp
pushf
jae
mov
test
cli
mov
pop
lds
mov
fisttpll
aam
cli
outsl
rcr
adc
dec
add
mov
xor
sbb
mov
mov
pop
fdiv
push
sub
fs
jg
inc
add
ret
add
fs
xorl
bound
jmp
or
rcl
ss
mov
dec
pop
shlb
sub
jg
adc
sub
popf
jg
rcrl
xorb
or
push
cld
mov
pop
pop
xor
ja
jo
rclb
cmp
and
imul
push
mov
or
jae
push
mov
add
and
lcall
lods
mov
ss
adc
push
add
xor
lods
xlat
movl
test
mov
inc
fistpl
insl
rorl
and
orl
aaa
shrb
lea
mov
push
mov
cmpsb
or
lcall
xchg
jmp
jmp
mov
add
sbb
dec
dec
xchg
das
mov
addb
pop
orb
pop
outsb
cmp
lret
pop
xchg
fisubrl
xchg
dec
loope
add
jne
mov
fsubrs
aas
lret
jge
jo
or
addr16
repz
pop
ja
xor
lods
ret
sub
mov
add
mov
cmp
out
sub
dec
adc
aam
inc
test
push
ja
push
pop
in
cltd
test
sub
lds
or
push
hlt
sbb
lahf
jle
mov
addl
js
sub
cld
je
mov
rorb
mov
mov
in
notb
pop
inc
mov
in
push
inc
jae
mov
hlt
jo
test
out
xchg
ds
pop
mov
xchg
inc
repnz
sbbb
xor
pop
xchg
imul
and
mov
ja
mov
pushf
push
xchg
and
pop
or
add
lret
push
repz
sbb
inc
sar
jl
adc
xchg
mov
mov
das
cmp
sbbb
out
mov
lds
lret
add
out
int
mov
inc
outsl
sub
and
sub
ss
lcall
out
stos
clc
push
and
add
inc
scas
xchg
push
cmpsl
and
notb
shrb
outsb
repnz
cmp
pop
dec
xor
out
rorl
and
dec
gs
mov
or
ret
adc
xor
cltd
cmp
dec
jb
jne
rcrb
in
pop
dec
or
and
push
fcmovnb
fwait
mov
insl
jno
mov
fmuls
add
xchg
inc
cmp
or
mov
lcall
pop
push
notl
sub
cmpsl
adc
aad
jp
ja
scas
mov
clc
sub
xchg
push
sbb
push
pushf
aam
dec
mov
inc
std
rorl
setg
and
cli
xchg
pop
mov
int3
rcrl
xchg
sbbb
jl
movsl
outsb
pushf
xor
inc
fs
movsb
int3
xor
stos
stc
push
or
repnz
inc
add
inc
insb
fnop
scas
sahf
dec
inc
ret
dec
sub
test
daa
aad
push
inc
push
dec
add
stos
mov
xchg
dec
dec
mov
mov
insb
mov
lock
sbb
jmp
rolb
pop
mov
push
push
fidivl
mov
fiaddl
sub
cmp
sub
pop
pushf
pop
div
aam
mov
xchg
mov
or
movsl
jnp
cmp
xchg
je
mov
inc
pop
sbb
inc
mov
add
push
sub
test
jae
cmp
gs
xor
fs
adc
push
arpl
fsts
sbb
cli
add
fwait
inc
or
cmc
mov
jns
jo
and
hlt
mov
push
dec
nop
push
in
adc
mov
stos
push
sbb
das
sub
pushf
mov
or
sbb
pushf
movsb
aam
pop
xor
clc
int
ljmp
fistpl
movsl
pop
cld
jne
inc
rcl
lcall
dec
inc
mov
cmp
mov
sbb
fisttpll
mov
mov
add
out
gs
mov
jns
into
outsl
mov
pop
push
leave
or
inc
pushf
repnz
cltd
je
fldl
fs
data16
add
add
xchg
imul
ret
cmp
rcrl
mov
adc
push
cmc
add
in
mov
addr16
xchg
jecxz
subl
cmc
adc
sbb
xchg
push
jp
shrl
dec
fisttps
xchg
les
jne
add
mov
lods
sahf
faddp
mov
daa
mov
popa
mov
push
movsl
cwtl
js
lret
xchg
ljmp
pop
les
xchg
lcall
enter
lahf
in
inc
das
popf
cmp
enter
in
push
jmp
aaa
lahf
push
loopne
jb
ja
inc
mov
in
mov
in
pop
or
push
scas
fisubs
fidivs
fpatan
xchg
sub
sar
adc
mov
ljmp
rolb
sbb
jne
data16
ja
adc
pusha
sub
ds
jl
jb
arpl
sbb
mov
mov
ds
fwait
addr16
imul
rclb
dec
add
lock
jge
mov
jmp
lret
and
movsb
rorl
inc
std
dec
out
cmpb
sbb
mul
mov
hlt
mov
int
jae
sub
push
daa
pop
sbb
pop
sub
ss
je
or
in
xchg
or
or
loope
repnz
lods
and
dec
repnz
mov
test
and
imulb
mov
and
les
inc
scas
push
sbb
adcl
imul
dec
inc
outsb
mov
dec
dec
xchg
call
push
stos
dec
scas
xchg
in
roll
dec
and
mov
mov
push
dec
xchg
arpl
lock
enter
and
inc
xchg
shlb
jb
mov
xor
outsb
cmp
lea
test
das
dec
into
sub
push
adc
nop
sub
mov
and
outsb
ss
and
into
adc
dec
out
adc
jle
and
mov
mov
pop
pop
push
cmp
jae
into
adc
jge
test
adc
subb
or
fdiv
mov
imul
mov
mov
xor
mov
ds
idivb
std
lods
sbb
cwtl
test
fidivrl
jp
push
fidivrs
sbb
add
xchg
push
mov
scas
or
sub
out
pop
jmp
inc
pop
and
xor
into
inc
aaa
xor
call
mov
fsubrs
mov
pop
lahf
fs
jae
lds
xchg
or
loop
ljmp
push
popf
sub
mov
cwtl
xlat
jp
nop
mov
mov
dec
insl
ficoms
pop
fs
shl
stc
outsl
jmp
add
jle
pop
mov
add
adcb
cmpsl
rolb
push
sub
mov
lahf
test
push
pushf
jge
sbb
jns
aaa
mov
push
adc
push
dec
andb
mov
fidivl
push
cs
mov
in
sbb
cmc
lods
test
je
scas
in
jns
pop
pop
pop
icebp
push
stos
sub
bnd
add
rcrb
in
lods
scas
ret
xor
inc
fsub
add
cs
dec
mov
les
cmp
ja
mov
jne
clc
pop
lock
xchg
fmuls
imull
xchg
ja
xor
xor
inc
lcall
loop
push
add
adc
cwtl
pop
inc
xchg
lds
xchg
aam
pop
push
ret
outsb
out
or
push
out
mov
pop
and
jmp
jmp
pop
into
inc
and
lret
dec
add
mov
and
stos
sbb
cmp
out
repz
dec
ret
xchg
add
mov
xchg
mov
shll
repnz
lods
or
ret
dec
test
mov
add
jle
loop
test
fisubrl
ljmp
pop
ljmp
jmp
testl
inc
and
sbb
xor
push
jne
imulb
and
in
repnz
insl
or
mov
mov
dec
rcll
mov
fstpl
aam
mov
jns
sub
gs
std
sahf
mov
mov
insb
adc
push
repnz
aad
cmp
push
cmp
or
pop
ret
aaa
fsub
hlt
sbb
adc
sbb
mov
clc
and
sub
jbe
push
pop
mov
lcall
das
jmp
int
repz
jmp
xchg
das
fsts
or
sbb
add
cltd
push
push
mov
inc
sub
mov
lods
cmp
cwtl
dec
xor
test
mov
inc
nop
and
sub
dec
mov
cli
enter
xor
jne
jbe
iret
jle
inc
jmp
inc
mov
je
pop
mov
mov
cmp
push
push
mov
xor
and
shlb
and
in
dec
cld
jp
in
adc
cmp
cmpsb
jle
popf
notl
icebp
dec
mov
push
lds
pop
popa
lods
sbb
ds
in
sti
jmp
inc
test
dec
mov
or
push
xor
jnp
bnd
out
cmc
jne
mov
lock
mov
push
and
inc
xchg
cmp
shll
pushf
pop
jg
mov
leave
inc
scas
lea
popf
push
add
sti
mov
stos
arpl
pop
pusha
insb
into
les
sub
push
and
sub
int
mov
dec
out
xor
sar
inc
jb
jns
in
addr16
jmp
xor
std
jnp
in
xchg
fcmovb
jnp
jg
adc
shlb
jo
xchg
ds
inc
xor
mov
movsb
lahf
arpl
lret
or
inc
mov
sbb
shll
int3
inc
jecxz
push
cmpsb
sbb
or
xchg
mov
add
sbbb
cwtl
and
cmpsb
add
adc
sahf
xchg
clc
dec
mov
pop
jno
loopne
jmp
sub
inc
or
adc
cmp
js
adc
sub
addl
sbb
call
cmp
mov
mov
hlt
mov
cmpsb
in
xchg
adc
rolb
inc
ja
imul
push
jl
add
adc
mov
push
pop
add
fsubl
js
cmc
ja
icebp
lcall
xor
ftst
pop
hlt
out
add
mov
mov
sub
xor
mov
rorb
sub
imul
insl
call
fnsave
pop
push
repz
add
fwait
pop
pop
inc
ficomps
ror
ds
cwtl
mov
mov
mov
inc
inc
lods
fwait
mov
mov
mov
jae
add
cmpsb
into
jecxz
add
cmpsb
inc
popf
sub
pop
data16
rcr
lcall
cmpb
mov
cmp
sub
jne
imul
sub
movsb
aam
jo
jmp
mov
aam
push
ret
push
mov
int3
hlt
dec
xor
mov
inc
out
push
cs
das
ret
dec
fs
sbb
fisubs
test
hlt
xchg
pop
or
std
sub
and
jl
cmp
loopne
inc
xchg
adc
sbbb
cmc
je
push
out
popa
cld
xchg
mov
popf
js
mov
dec
pop
stc
fistpll
loope
sbb
scas
lds
jbe
add
imul
xorl
imul
ret
negl
rep
pushf
mov
shlb
movsl
ljmp
dec
jge
pop
sub
sbb
test
cmp
jmp
decb
dec
test
psrlw
push
pop
insb
jecxz
movsl
mov
mov
test
mov
mov
dec
jbe
mov
add
cld
xchg
inc
pop
lods
or
cmp
pop
decl
clc
rcrb
loop
push
dec
outsb
ret
jge
fildll
popf
ret
push
push
sub
adc
mov
mov
imul
es
mov
ss
dec
mov
jns
mov
fs
jl
sbb
lahf
inc
test
sub
push
shrb
in
scas
mov
movsb
fadds
push
ljmp
jo
int3
mov
pop
jge
pop
sbb
xchg
and
fs
mov
insl
fwait
sahf
sahf
adc
cmpsb
dec
fldcw
int3
mov
add
jg
push
jae
test
sbb
add
fs
sbb
cmp
mov
cwtl
push
xor
dec
stos
push
cmc
hlt
push
leave
push
outsl
inc
pop
cmpsb
xchg
jp
jge
pop
inc
jp
push
jae
bnd
mov
push
in
cli
jecxz
jmp
xchg
data16
adcb
shll
adc
mov
cld
add
ljmp
sbb
push
cmp
lret
sub
das
mov
mov
sbb
gs
les
cmpsb
ds
mov
imull
xor
cmp
or
push
shll
outsb
mov
or
out
adc
push
ret
arpl
cmp
xor
inc
lock
movsb
lock
inc
jg
in
or
fadds
mov
xor
add
xchg
ds
out
clc
std
arpl
push
iret
dec
or
scas
and
loope
mov
and
in
jmp
stos
xorb
stc
add
lds
repnz
filds
lods
pop
push
cmc
in
mov
sbb
into
rcrl
lea
imul
int3
xor
dec
popa
rsqrtps
sbb
scas
shl
sahf
lods
or
pop
sub
ret
jp
mov
dec
mov
cmc
jns
fwait
shll
in
jo
push
add
pop
fdivrl
mov
add
sub
call
lea
shlb
xchg
sahf
lods
jle
dec
out
jp
ljmp
in
out
push
lea
sub
push
dec
jecxz
outsl
push
or
adc
testl
jmp
icebp
xchg
subl
mov
jle
pop
mov
fmul
and
enter
and
mov
rolb
scas
dec
dec
jp
in
divb
add
mov
adc
push
xchg
into
adc
loop
int3
out
push
mov
fsubp
lcall
xor
push
ljmp
adc
jg
nop
mov
mov
iret
ret
push
add
inc
add
das
nop
mov
pop
cmp
mov
mov
popa
push
adc
repnz
es
and
or
xor
in
rolb
imul
call
or
ret
jnp
or
jp
nop
movsl
xchg
lret
mov
dec
int
je
pop
sbb
imul
sti
pop
or
adcl
add
out
fwait
movsl
mov
xor
xchg
push
dec
jmp
push
or
ss
data16
dec
mov
pusha
adc
sub
pop
inc
sbb
or
or
push
mov
shrb
ficoms
mov
stos
fisubl
push
bound
cmp
std
movsb
pop
cwtl
push
dec
out
mov
lock
pop
mov
push
adc
fdivs
mov
sub
lds
stos
adc
punpcklbw
pop
or
xchg
into
jmp
pop
push
mov
ja
sbb
xlat
into
mov
pop
stc
pop
pop
fdivs
and
shll
push
mov
fisubrs
xchg
add
fbld
push
jle
lahf
out
or
or
outsl
mov
subl
rcl
rcll
and
cmc
and
or
sbb
mov
cmpsl
lcall
push
pop
inc
sti
repz
cmp
mov
jmp
jbe
addr16
fmuls
repnz
dec
push
fidivrs
xchg
fisubrl
cmpb
push
jecxz
and
lods
shll
les
lods
mov
sub
in
shl
sbbb
je
dec
or
inc
push
stos
dec
test
mov
lret
mov
fadd
add
test
sbb
js
mov
iret
adc
xor
mov
sub
fwait
je
test
das
fimull
cltd
sub
xor
push
rcl
push
dec
xchg
xchg
cwtl
movsb
adc
test
adc
andl
enter
mov
data16
std
mov
jnp
adc
xchg
mov
pop
mov
inc
stos
inc
inc
pushf
loop
inc
repnz
lret
and
je
cmp
lahf
pop
enter
orl
xor
pop
stos
in
enter
fbld
or
push
mull
add
in
fwait
nop
mov
mov
sbb
add
jmp
cltd
aam
lret
or
or
cmpsl
xchg
shrb
subl
pop
xchg
nop
jnp
cmp
push
adc
js
jns
sub
mov
rcl
xchg
inc
mov
fs
mov
faddp
mov
mov
push
pop
lcall
mov
les
outsb
pop
fstl
and
xchg
jle
fisubl
xchg
popf
je
cs
sbb
call
jnp
sbb
popa
add
xor
outsb
push
aad
mov
inc
outsb
xchg
mov
imul
jbe
jecxz
inc
data16
pop
push
xchg
and
fcmovnb
mov
frndint
out
inc
push
push
cmp
sbb
js
inc
es
mov
ja
dec
or
sarb
popl
pop
popf
mov
add
push
rcr
movsb
rolb
loopne
jg
inc
mov
cmp
insb
xor
test
cmp
sub
dec
or
flds
push
flds
sub
sub
mov
jp
inc
imull
imulb
dec
dec
pushf
sahf
push
orl
sub
jmp
mov
xor
movsb
arpl
mov
jno
fadds
cmp
inc
and
in
xor
leave
pslld
add
mov
data16
in
fisttpll
push
push
inc
sub
test
jge
into
xor
or
cli
inc
sub
cwtl
sti
xlat
leave
push
mov
lods
or
in
inc
je
repz
xlat
ret
and
into
ret
rorw
popf
sub
scas
cmp
jecxz
xchg
stos
lea
jp
xchg
in
scas
inc
das
mov
jl
cmp
xchg
or
pusha
xor
enter
adc
addr16
iret
int3
xor
adc
lods
ds
frstor
lock
imul
stos
jecxz
daa
iret
xor
aam
imul
mul
aaa
lret
adc
dec
mov
lret
sub
fisubl
jnp
xlat
xorb
in
pop
int
fiadds
mov
aad
pop
jb
sub
repz
mov
cmpsl
sub
push
cmp
inc
and
ljmp
movsl
int3
mov
das
xor
xor
pop
cli
push
sbb
mov
pop
push
cmc
lcall
adc
mov
scas
inc
xor
hlt
mov
xorb
clc
or
movsl
mov
lahf
test
xchg
sub
mov
jnp
mov
dec
les
xor
cmp
dec
and
add
imul
scas
xchg
push
xor
in
clc
movsl
pushf
divl
mov
and
cmp
arpl
add
fs
leave
push
shrl
into
insb
xlat
add
testl
shl
add
dec
fs
test
in
push
jle
fcoml
lds
mov
lock
mov
jge
inc
sarl
sub
mov
jae
mov
xor
inc
out
out
iret
inc
vpunpcklbw
xchg
pop
jne
mov
out
dec
scas
in
xchg
xor
fnstcw
rol
inc
cmpsl
insb
test
out
outsl
loopne
jl
lds
inc
sbb
adc
scas
mov
mov
inc
mov
pop
jbe
popa
jmp
mov
ljmp
dec
stc
xchg
insb
mov
and
jmp
and
dec
rcrb
xchg
cmp
and
pushf
adc
sbb
xor
cmp
xchg
rcrl
test
hlt
sub
jo
dec
jnp
div
lret
mov
test
mov
dec
push
sarb
out
dec
and
mov
pop
or
jo
xchg
mov
sub
sbb
xor
ret
nop
ss
xlat
into
pop
sbb
mov
jmp
gs
cmpsl
mov
pusha
mov
inc
pop
adc
mov
ficoms
lret
pushf
fxtract
popa
cmp
ljmp
movsl
cmp
fs
cmp
mov
loope
pop
mov
jns
je
push
shlb
mov
es
mov
jge
nop
xchg
adc
push
fidivs
jno
into
aam
xchg
or
pop
sbb
fwait
jg
jo
es
jecxz
jbe
jne
xor
add
je
fstps
mov
into
rclb
push
dec
push
push
out
aas
pusha
xchg
xchg
pop
cmp
scas
mov
push
mov
movsl
push
loope
fstp
fistl
inc
pop
pop
inc
imul
adc
inc
add
sbb
inc
arpl
aas
ficoml
lds
cmc
pop
insb
shl
cmp
mov
int3
cmp
lods
inc
mov
mov
shrb
dec
mov
idivl
push
movsl
sub
sbb
movsb
mov
lahf
add
mov
test
push
pop
jae
dec
das
iret
in
pop
lods
jp
aas
jmp
stos
dec
and
bound
lea
iret
sbb
push
addr16
cs
push
iret
shlb
out
or
mov
in
sbb
pusha
mov
add
sbb
std
les
push
mov
mov
aam
jmp
cmp
push
mov
adc
xchg
sub
dec
adc
fwait
out
movsl
xorl
mov
mov
push
test
mov
lcall
push
push
mov
add
enter
pop
adc
and
test
adc
xor
dec
lea
pop
mov
pushf
cmp
xchg
insb
jbe
push
inc
lcall
aad
xor
lods
dec
pop
mov
xchg
stos
dec
mov
inc
jecxz
add
pop
mov
scas
insb
ret
and
rolb
pop
push
push
push
jl
fmull
rorb
lea
incb
pop
jge
inc
mov
jno
test
push
loope
movsb
mov
bound
push
sub
movsb
sub
xchg
jle
jg
loopne
aaa
incb
cmpsb
fwait
sub
push
push
stos
es
jnp
add
xchg
fdiv
lahf
xchg
lds
mov
jmp
outsb
hlt
adc
loope
test
loop
aas
add
std
push
push
stos
sahf
inc
rcrl
out
pusha
and
rcr
scas
and
inc
xlat
and
jae
mov
faddp
adc
jns
push
sbb
incl
push
or
ja
jmp
adc
ret
jg
xchg
mov
das
pop
sbb
cmpsl
xor
xor
cmpsb
stc
test
mov
adc
jmp
repz
mov
dec
mov
dec
or
inc
shll
push
sar
sbb
push
pushf
pushf
pusha
cmp
or
mov
adc
fidivrl
aas
or
fwait
jg
mov
xor
and
mov
aad
ss
icebp
movsb
aam
push
ds
test
pushf
xor
mov
inc
mov
adc
mov
mov
jl
imul
leave
and
xor
leave
ret
sarb
ret
mov
jne
je
icebp
xchg
inc
pop
sahf
pusha
popf
push
cs
or
or
jmp
mov
sti
in
in
sarb
mov
jmp
dec
nop
les
sti
sbb
pusha
push
aad
lds
xchg
xchg
jo
enter
dec
add
and
xor
test
mov
ljmp
imul
jbe
jnp
lods
lds
addr16
and
mov
bound
test
mov
fldenv
sti
add
xchg
jl
mov
jle
or
lds
sbb
ret
add
xlat
jne
scas
notl
mov
or
inc
repz
clc
pop
outsl
xchg
inc
les
mov
pop
pop
jnp
and
push
pop
cmp
mov
sti
mov
inc
mov
adc
cmp
cmpsl
jp
xor
movb
ljmp
repnz
mov
or
les
xchg
or
inc
or
mov
jno
xor
xchg
ret
mov
pushf
syscall
inc
testb
push
test
add
xchg
dec
and
or
ficomps
aaa
mov
xor
adc
pop
dec
dec
jns
fistps
adc
shlb
negb
mov
sbb
lahf
mov
jge
addr16
sbb
lock
outsl
pop
les
insl
aaa
lret
sahf
cmc
mov
clc
lret
notl
lcall
mov
jnp
int3
xlat
sub
sbb
jmp
sub
cmp
imul
adc
enter
xchg
jne
adc
std
sub
cmpsl
into
pop
add
cmp
addb
push
mov
sbbb
repz
pop
or
mov
jne
mov
or
mov
sbb
mov
aaa
mov
sub
jecxz
out
push
test
pop
outsb
inc
xor
pop
int3
in
scas
bound
ja
jge
test
mov
mov
out
pop
and
stc
inc
pop
ljmp
fists
xchg
cmpl
sbb
nop
add
mov
das
jge
dec
pop
loopne
mov
cmp
pop
cmp
xor
cld
pop
sub
repz
mov
jl
add
sub
cmpsl
sbb
negb
mov
dec
in
or
xor
sub
stos
repnz
cmpsl
loope
pop
sbb
cli
loopne
cmp
fisttps
fcomps
sbb
and
fs
sbb
into
jno
adc
xchg
inc
xor
push
push
out
nop
shr
ss
repz
in
mov
mov
and
push
ficoml
into
fs
xor
je
add
lret
xchg
add
out
pop
xorl
inc
testl
faddl
lods
pop
mov
mov
loopne
jle
push
icebp
push
pop
lahf
fistl
fsubrl
mov
mov
jns
xchg
jmp
jl
sbb
arpl
jns
in
cmp
push
dec
loope
push
out
dec
xor
add
and
es
push
xor
fisubl
out
int
lret
mov
in
sub
jg
mov
cmp
xor
outsl
xlat
add
fbstp
add
jns
add
das
lcall
fwait
into
pop
imul
mov
cmpsl
lods
mov
adc
xchg
cltd
xchg
idiv
cwtl
mov
adc
dec
enter
mov
xchg
roll
js
push
lret
xchg
inc
push
cmpsl
stos
xor
xchg
out
cmp
add
inc
js
andb
pop
inc
cmc
sub
inc
xor
shrb
out
mov
sub
pop
jbe
push
and
movsl
and
aad
out
rcll
int
shr
test
cld
pop
jge
into
push
pop
push
ja
aas
in
sub
push
pusha
jecxz
sbb
das
add
hlt
cmp
repnz
insb
cmp
push
push
sarl
test
inc
add
xchg
jg
test
test
inc
add
ljmp
scas
stc
out
stc
and
cmpsl
imul
mov
repz
fcom
sbb
push
cmp
lret
in
je
sub
mov
jmp
in
idivb
dec
popa
ficomps
pop
arpl
mov
jns
fcomps
test
adc
xchg
xor
rcr
jne
jnp
rorb
jns
arpl
rorl
and
je
inc
mov
dec
jb
inc
aas
pusha
cmp
mov
cs
adc
test
inc
push
outsw
mov
sti
lcall
in
cmpsl
jle
ss
xor
outsb
aaa
rcrl
push
mov
repz
fmul
jo
jle
sbb
push
fdivrs
pushf
loope
cmp
cmp
and
ret
mov
rcrb
or
fists
xchg
outsl
sbb
pop
xchg
jb
sub
arpl
and
nop
pop
push
inc
or
jb,pt
cltd
or
xor
pop
or
out
push
xchg
pop
leave
xchg
adc
jl
dec
in
and
and
xlat
mov
adc
stos
idivb
cmc
sub
xchg
xchg
fucom
xor
in
jl
cs
push
call
sbb
sbb
push
out
lea
sbb
push
arpl
adc
test
and
stos
inc
adc
sub
cmp
popf
mov
push
insb
jae
insl
aam
in
sbb
pop
xor
iret
out
shl
adc
inc
jo
and
jns
adc
dec
jecxz
not
xchg
fildll
adc
addr16
mov
sahf
inc
fistpll
push
sub
xchg
jmp
jecxz
pop
sub
or
mov
adc
xchg
add
lret
movsb
aam
int3
mov
jecxz
mov
imul
mov
sahf
lods
jecxz
xor
gs
es
shll
xor
loope
inc
xchg
cmp
pop
lds
and
call
fwait
xlat
push
jno
jnp
repz
rclb
fisubrs
adc
xor
jmp
test
addr16
jmp
add
jo
in
jecxz
push
jo
inc
iret
push
mov
xor
outsl
hlt
jp
hlt
test
and
cmpsb
aam
cmp
mov
push
rcr
pusha
test
rcll
fisubs
mov
lock
xor
xor
sub
mov
dec
mov
or
sbb
and
dec
push
fstpl
stos
xchg
shlb
jp
or
lret
std
out
cmp
jb
movsb
dec
and
in
imul
pop
mov
pusha
push
filds
cld
mov
jno
add
sbbb
mov
xor
pop
int
bound
pop
cmpsl
lret
sub
jbe
push
mov
or
je
jns
xchg
test
xchg
idivw
inc
inc
in
cli
adc
mov
pop
outsl
fsubrl
lea
outsl
jge
inc
mov
sub
mov
ffreep
ret
mov
push
dec
rcr
popa
aas
and
loope
lret
mov
fwait
scas
lods
das
stos
xor
sub
pop
sbb
pextrw
in
xchg
ret
testb
xlat
ret
dec
stc
subb
fxtract
loope
fcoms
mov
sbb
mov
fidivrs
stos
test
loope
rorl
add
inc
lret
stos
mov
lret
stos
xchg
cmpsb
sbb
mov
sbb
lahf
and
rcl
dec
add
adc
cmpsl
adc
repnz
enter
insl
adc
arpl
adc
cmovae
arpl
cmpsb
pushf
movsb
sub
sub
inc
lods
mov
lods
popa
cs
call
stc
push
dec
xor
jecxz
cmp
or
dec
outsb
lods
out
sub
push
cmp
jg
sub
inc
sbb
mov
stos
add
cmp
popa
test
mov
aam
add
mov
adc
mov
adc
mov
mov
mov
outsb
jecxz
or
jg
sub
pop
jl
fdivrl
ret
fdivrl
sar
inc
xor
sub
fisttpl
stos
faddl
cwtl
clc
add
in
dec
ja
push
rolb
xchg
sbb
adc
xchg
mov
xchg
push
push
addr16
leave
in
data16
dec
jne
mov
mov
or
dec
call
push
out
cmp
mov
pop
sti
cmp
xor
push
scas
and
imul
dec
cltd
testl
inc
lock
rorl
ljmp
pusha
mov
test
mov
mov
xchg
lret
inc
movl
xchg
lea
loope
dec
sbb
jns
add
inc
jp
mov
es
mov
mov
ds
add
pop
xchg
imul
adc
dec
sub
fists
outsb
fisubrs
mov
push
sbb
inc
fstpl
pop
add
bound
loopne
or
in
mov
sub
sti
mov
std
jno
jbe
shll
imul
in
ss
and
in
xchg
nop
stos
cmc
adc
scas
pop
fwait
push
mov
jmp
adc
imul
fisubrs
and
jp
dec
stc
cmpsl
pop
clc
add
leave
mov
cmp
aam
pop
ja
rclb
xchg
ss
outsb
or
sub
fists
pop
xchg
js
lahf
imul
ret
jns
addr16
cld
test
xchg
or
pop
inc
xor
out
rclb
cltd
add
fsubr
out
push
bound
out
loop
push
xlat
das
jo
mov
scas
je
lret
iret
lods
jne
bound
cli
imull
mov
rorb
nop
jg
mov
mov
inc
aam
rcrb
cltd
sub
je
fiadds
cmp
mov
in
add
push
lods
aam
loopne
enter
jns
jno
pop
mov
lret
or
add
and
adc
dec
lds
mov
adc
fwait
rorl
or
fcompl
push
adc
insb
xchg
inc
mov
sub
scas
shll
fidivs
fistpll
mov
aam
loope
iret
sub
adc
stc
nop
xchg
inc
dec
or
fimuls
lcall
mov
stos
cmp
insb
sbb
mov
push
cmp
daa
sub
addb
push
xchg
inc
pop
incl
cli
sub
pushf
addr16
sahf
jb
into
push
mov
sub
cmc
push
in
mov
clc
out
xor
scas
repnz
sub
stos
adc
lock
jl
fwait
les
xchg
les
dec
xchg
cli
int
shll
jg
jae
add
mov
cmc
and
insl
xchg
test
cwtl
jmp
mov
inc
lret
arpl
xorl
add
jg
dec
jne
sbb
cmp
mov
cmp
dec
xchg
jno
xor
inc
repnz
push
out
jne
les
mov
sub
imul
imul
lahf
sbb
out
mov
push
in
add
sbb
cld
repz
xor
arpl
das
lods
popa
inc
pop
sar
ja
popf
add
inc
xlat
jne
hlt
aad
jae
mov
adc
push
sub
aad
cmp
shll
push
pop
out
pop
je
es
cwtl
les
xchg
sahf
mov
push
or
enter
hlt
mov
xor
out
pop
int
mov
test
js
jp
dec
adc
stc
fldenv
push
out
add
fwait
icebp
mov
xlat
xor
mov
cmp
sub
add
mov
fwait
adc
aam
std
sub
std
cmp
fnstcw
sbb
add
andb
icebp
xchg
mov
sbb
aaa
movl
nop
and
cmpsl
aas
dec
adc
mov
es
inc
dec
jbe
sahf
loopne
cmc
dec
xchg
repnz
push
mov
sub
mov
lods
popa
popf
push
jbe
xchg
mov
loope
and
xlat
hlt
movsb
dec
fwait
pushl
lods
jns
mov
pop
es
and
shrl
out
dec
jp
sbb
lds
out
lods
push
pop
jb
cmpsl
imul
std
inc
pop
stos
sbb
out
pop
xlat
add
gs
fiaddl
mov
cld
mov
jo
imul
mov
push
int3
das
cmp
rcrl
sbb
sbb
push
fcoms
ret
cli
add
add
push
and
ret
lret
ja
push
xor
or
int3
cmp
inc
int3
ret
sub
lds
cltd
jb
rcll
ljmp
fsubp
negl
xor
mov
xchg
jno
loopne
aad
gs
insb
mov
lahf
xor
cs
mov
xchg
push
push
add
pop
ror
test
add
lret
cltd
inc
cmpb
ljmp
xchg
ds
push
jbe
shrl
mov
push
add
sub
jae
sbb
pop
dec
rcll
push
outsl
push
and
inc
jecxz
ja
inc
dec
sti
sahf
xchg
and
mov
sbb
and
sbb
hlt
push
dec
xchg
xor
lahf
lock
xor
mov
dec
push
push
out
in
pop
das
lahf
adc
adc
je
fistps
sahf
xchg
cmp
movsb
jle
lock
scas
cld
cmp
cmp
push
adc
int3
das
push
dec
sahf
cltd
cld
pusha
rorb
out
xor
push
in
fistl
es
clc
cmpsl
lock
insl
jnp
sbb
or
jecxz
out
daa
pushf
mov
add
dec
int3
jb
add
mov
in
sbb
pop
imul
je
hlt
pop
jecxz
and
je
das
cld
sbb
imul
dec
out
in
daa
mov
sbb
cli
cmp
mov
push
subl
std
sub
rolb
xor
icebp
add
sbb
sbb
adc
in
pusha
mov
xchg
imul
icebp
mov
cwtl
sbb
cmp
sbb
stos
test
imul
int
pop
inc
sub
add
push
sub
loop
insb
outsb
outsl
out
shrb
xchg
cwtl
add
mov
jmp
scas
imull
push
mov
mov
and
sbb
fadd
shll
dec
jl,pt
fsts
imul
cli
imul
mov
test
loope
jg
into
adcb
movsl
loope
sub
xchg
cmc
xor
imul
call
sbb
lods
mov
ficoml
clc
dec
cmp
mov
in
incb
sbb
gs
data16
mov
loop
loope
xchg
xor
mov
jmp
push
insl
xchg
and
ret
mov
pusha
jecxz
xor
cwtl
cmc
js
int
rcl
or
out
outsl
jne
movsl
sar
xchg
mov
adc
lods
jno
pop
ret
add
fldt
dec
les
xchg
pop
pop
dec
aas
cltd
xchg
in
inc
pop
push
mov
ret
xor
xchg
shll
add
mov
dec
fcoms
andb
add
mov
jecxz
inc
js
sbb
jno
fs
xor
les
xchg
cmp
popf
push
jae
sub
pop
imul
sbb
cld
xchg
and
cmp
sub
ljmp
sbb
das
mov
sbb
add
addr16
sub
adc
jno
mov
pop
out
jle
clc
adc
mov
cwtl
inc
repnz
shrb
cmp
je
push
inc
or
pop
cmpl
int
and
xor
cltd
push
or
lock
js
jnp
push
pop
add
movsl
loope
sub
push
jo
lds
or
and
sahf
rorl
lret
pop
rcll
test
sti
insl
sbb
add
push
daa
mov
lock
out
push
shlb
push
xor
add
sub
shll
add
stc
push
adc
and
jb
std
adc
mov
xor
das
imul
and
sbb
mov
leave
xor
cld
push
push
mov
arpl
jle
cmp
push
cmc
movsb
jne
push
xor
cmpl
mov
fldt
insb
or
and
popf
imul
ljmp
dec
mov
fisubrs
or
out
pop
lock
fsubr
aas
sti
clc
lods
or
pop
sbb
es
mov
sarb
sti
iret
mov
xchg
mov
mov
stos
mov
mov
fadd
int
dec
inc
or
sub
mov
movsl
mov
jb
jnp
inc
pop
lcall
fs
pop
lcall
scas
lock
push
fsubr
jle
dec
ds
mov
push
loope
sarl
inc
mov
push
mov
add
push
fcoms
jnp
shll
stc
xor
fbstp
loopne
cltd
dec
popa
jne
mov
cmp
cli
aam
push
lret
cmpsl
push
bound
xor
sbb
and
cmpl
jmp
cmpsl
inc
jb
push
daa
pop
ffree
sbb
mov
add
call
mov
ret
sbb
xchg
popf
jns
fildl
loope
mov
hlt
xor
inc
cmpsb
nop
inc
repz
ja
push
mov
push
mov
addl
mov
push
outsb
lret
das
shrl
xor
jp
and
mov
sub
je
cmp
xor
push
xchg
subb
pusha
cwtl
test
cmp
xchg
cltd
jge
jl
xor
and
xchg
adc
adc
xchg
outsl
add
shrl
mov
sbb
test
test
out
pop
mov
sub
cld
jno
and
addr16
push
fs
push
clc
iret
ret
clc
adc
push
enter
mov
imul
movsb
fisubl
fcmovu
pop
ljmp
cltd
insb
outsb
repnz
adc
jnp
lret
fwait
rol
xchg
jp
or
lret
inc
loope
mov
stc
filds
cmp
pop
rorb
test
fadds
pusha
jo
jge
sub
rcrl
mov
mov
xor
add
loope
add
adc
lock
aad
les
cmovns
push
xlat
in
cmp
scas
mov
inc
and
inc
push
push
icebp
icebp
mov
stos
push
pop
iret
shll
inc
arpl
cld
xor
xchg
test
cltd
xchg
out
mov
jge
mov
inc
jle
imul
shl
mov
sub
sub
ss
test
jecxz
adc
pop
mov
cmp
loop
dec
sub
ja
das
jg
inc
cmp
mov
iret
shl
adc
pop
fisubs
ds
pusha
test
outsb
and
sar
addr16
dec
pop
ja
out
add
mov
xor
xchg
mov
xchg
pop
insl
ds
roll
mov
push
or
imul
sti
jo
pop
rol
arpl
add
push
mov
sbb
cmp
push
stos
mov
cmp
fdivs
push
xchg
lock
aad
inc
cmp
icebp
jg
add
or
fisttps
ds
push
xchg
nop
push
adc
insb
push
dec
jmp
pop
lcall
cmp
rol
repnz
xor
stos
dec
ds
xor
or
clc
mov
sbb
pop
repnz
pop
jae
push
mov
test
xor
aaa
test
mov
into
and
pop
push
add
xchg
cwtl
loope
popa
xchg
cmpb
inc
stos
xchg
pop
fcmovnbe
jmp
mov
mov
push
mov
ss
rclb
in
aas
dec
int
and
cmp
leave
aam
fidivrs
cs
pushf
nop
stos
in
decl
and
ds
sub
lock
xchg
push
sbb
inc
negl
sbb
mov
or
jo
stos
push
and
push
mov
or
xchg
fisubs
and
gs
pop
push
ja
clc
daa
cmp
add
xchg
fmull
add
dec
pop
sbb
int3
cmp
adc
add
into
mov
lret
push
mov
sti
push
xchg
shll
ss
gs
mov
mov
inc
jmp
pslld
int3
pop
mov
mov
sub
cmpb
sahf
inc
fnstsw
stos
mov
inc
loopne
lcall
scas
stos
enter
jb
and
inc
pop
xchg
push
pusha
xlat
popf
xlat
movsb
xor
or
mov
out
inc
cmpsl
cli
jp
iret
pusha
dec
sub
sbb
das
lahf
sbb
add
test
jmp
in
mov
push
xor
mov
lods
inc
sti
inc
sahf
imul
push
xlat
jbe
push
xchg
push
scas
jl
sub
mov
in
push
cmp
ror
jle
comiss
pop
dec
enter
mov
les
outsl
xor
leave
mov
scas
mov
movsl
mov
mov
jne
lcall
gs
inc
sub
pop
jb
add
cltd
adc
and
test
or
or
aas
pop
cwtl
mov
adc
out
std
das
sti
inc
stc
mov
mov
pop
pushf
mov
popl
nop
lea
pop
mov
push
mov
in
sbb
rcl
loop
lret
in
pop
pop
sbb
push
and
aad
fldenv
xchg
cmpsb
addr16
bound
and
repnz
lret
pop
cltd
repnz
andb
and
xchg
jle
xchg
jecxz
sbb
popa
scas
test
cltd
or
aaa
xor
iret
aad
jmp
out
stc
jb
movsb
and
pop
cli
repnz
fimuls
push
mov
fisubl
cmp
xor
lret
pop
pop
push
xchg
movsb
dec
mov
or
jge
mov
xchg
mov
into
push
inc
out
cmp
add
sti
mov
xchg
imul
mov
mov
std
adc
sub
negl
jg
inc
icebp
ds
push
and
pop
arpl
and
adc
pusha
sbb
jg
and
outsb
jp
inc
call
sub
pop
andl
and
sbb
jecxz
xchg
inc
lock
adc
and
xor
mov
adc
mov
outsb
cmp
aam
test
mov
lret
std
and
add
cltd
data16
icebp
jnp
jge
test
mov
cwtl
xor
into
fstpl
daa
cmc
ljmp
out
or
or
mov
push
or
mov
iret
mov
loop
xor
ljmp
mov
rcr
mov
daa
mov
cwtl
push
and
test
mov
hlt
add
xchg
mov
cmpsl
and
jle
sub
jmp
addr16
mov
pop
mov
mov
jne
or
xor
aam
inc
adc
lods
addr16
cmp
cmpl
xchg
mov
or
jo
fdiv
inc
jbe
scas
cmpsb
mov
stc
mov
add
pop
dec
sub
add
xchg
jne
sub
in
hlt
mov
repnz
lods
add
mov
dec
int3
xchg
push
cs
and
mov
jp
or
cmpsb
lods
call
data16
popf
mov
out
in
sarl
nop
loope
add
fwait
lock
dec
adc
mov
cmc
mov
add
pop
jne
jae
pop
and
pusha
loopne
mov
jnp
and
movsl
ficoml
xor
cmp
sbb
push
add
int
insl
ds
sub
out
movsb
lods
pop
mov
push
mov
cmp
add
cltd
test
pushl
lret
sti
sub
inc
aam
jge
icebp
pop
fcmovb
sub
into
mov
pusha
enter
cwtl
pop
loope
fiaddl
loop
out
and
fildll
push
movsb
arpl
fbld
aaa
jb
out
icebp
jbe,pt
in
rclb
and
shll
fnstsw
pop
ljmp
std
cs
xchg
cmp
push
subl
lret
test
or
push
ja
call
cmpsl
sbb
and
or
addr16
push
sarl
xchg
pusha
sbb
pop
in
addr16
sti
sbb
and
jp
cli
push
xchg
lock
loop
push
fwait
subl
cmp
test
jae
enter
sbb
rclb
mov
es
pusha
dec
mov
xor
or
sbb
mov
xor
push
cmpsl
pop
xchg
adc
sub
sbb
xor
subb
mov
pop
sbb
iret
fildl
fs
adc
cmpsl
bound
add
imul
ret
or
jo
out
xchg
je
and
ret
sbb
xlat
and
xor
mov
cli
mov
or
inc
iret
xchg
pushf
mov
addr16
push
into
loop
xor
pop
sbb
mov
xchg
aam
jge
hlt
ret
imull
mov
xlat
and
popf
ret
mov
aaa
cmp
test
out
lret
push
std
ret
pop
mov
cmp
jge
rolb
in
dec
add
stc
std
inc
adc
xchg
jmp
call
mov
fbld
fimuls
cli
mov
jns
cmp
sbb
imul
jns
sbb
add
mov
cld
and
inc
and
sarl
jnp
lods
inc
inc
or
push
mov
and
movl
lods
ja
mov
mov
daa
sbb
hlt
mov
add
lret
mov
arpl
xchg
mov
mov
lcall
mov
ret
out
lods
mov
cs
jmp
adc
outsl
cs
inc
or
or
mov
jle
ret
lock
std
es
into
stos
pop
push
icebp
out
rol
jne
ret
and
movl
outsb
jb
ja
mov
cmpsl
sbb
pop
repz
mov
test
int
ja
incb
mov
imul
inc
bound
cmp
jno
push
mov
cmp
test
sub
sbb
pushf
push
dec
push
mov
cmp
dec
sarl
xor
inc
sbb
cmp
cmp
cwtl
xchg
les
inc
das
sbb
jl
sub
fisubl
jnp
fcmovbe
push
divb
jne
mov
mov
sub
fiadds
inc
icebp
jmp
rcrl
xor
clc
pop
mov
cmpsb
cmp
pop
shlb
mov
repnz
daa
xchg
cmp
and
pop
pop
pop
xor
xchg
cmp
dec
out
inc
dec
or
mov
aam
fcompp
lcall
pop
fiaddl
inc
out
adc
cmp
adcl
xchg
add
mov
aam
lret
je
insl
add
and
pop
rcr
add
adcl
mov
leave
repz
lock
or
popa
sub
lcall
jg
leave
fisttps
ljmp
mov
xor
mov
sub
out
and
xchg
idivb
pop
mov
mov
rcrl
pop
js
cmp
lcall
push
dec
adc
push
cltd
mov
cld
xor
pop
outsl
ja
add
scas
test
or
ja
ss
iret
and
jo
iret
stc
or
jno
sub
mov
lods
mov
movsb
add
xchg
scas
mov
vpsubusb
and
shl
hlt
xor
aaa
and
xor
or
aas
ficomps
movsl
divl
sub
rorb
out
mov
or
shrl
xchg
inc
pop
add
pop
leave
andb
jp
ret
mov
and
aas
mov
jns
cmp
dec
inc
xchg
mov
fmull
jnp
mov
pop
aaa
mov
sbb
hlt
pop
repnz
js
popa
aam
jmp
xorb
loope
fstpt
cmpb
xor
es
in
fwait
mov
popf
mov
push
test
fiaddl
mov
sub
notb
outsb
cltd
cmp
out
fucomp
shr
cmpsl
sub
cmpl
xor
jmp
xchg
pop
enter
cmp
mov
insl
cli
sarb
fcoml
mov
scas
mov
or
xor
push
gs
pop
add
repz
mov
repnz
and
lahf
xchg
jge
in
pop
cmpl
push
cmp
adc
gs
dec
add
fs
and
outsb
pop
jo
nop
pop
enter
xchg
xor
out
test
mov
mov
push
in
jmp
xor
aam
add
insw
subb
fimull
mov
mov
lods
stos
mov
std
nop
movsl
cmp
push
repz
mov
sbb
testb
cmc
fsubrs
outsb
or
jne
pop
cmpb
xchg
mulb
pop
lret
add
inc
pop
cmovo
bound
fdivrl
sbb
sub
mov
sti
pop
pushl
pop
lret
add
jno
das
mov
mov
stos
push
or
mov
xlat
repnz
and
sbbb
pop
jae
mov
and
or
mov
adc
mov
or
hlt
inc
loope
fs
frstor
pop
xlat
test
rcll
cs
inc
dec
pop
or
push
rol
mov
cmpsb
rcr
fwait
mov
jl
pop
cmp
adc
adc
push
test
sbb
stos
inc
sahf
aad
adc
lea
nop
add
enter
jp
cmp
cmpl
stc
jb
push
scas
mov
sbb
and
push
roll
and
pop
roll
and
test
mov
sub
nop
lea
mov
lock
adc
ja
jmp
mov
sahf
jg
lret
jo
mov
inc
mov
sbb
popa
js
jle
stos
int3
and
faddl
pop
push
ss
or
rcrl
and
out
jns
repz
int3
jmp
mov
push
cld
mov
sarl
mov
xrstors
or
or
add
ret
xchg
scas
arpl
jns
xchg
sbb
rol
push
pop
dec
jmp
nop
and
pop
outsl
pop
lahf
xor
clc
xchg
mov
push
scas
jns
mov
clc
jbe
dec
outsl
mov
movsb
dec
int3
push
stos
adc
lds
dec
jno
sbb
das
mov
sbb
jmp
inc
mov
js
jecxz
cmpsb
and
jmp
test
push
aas
lods
jecxz
or
out
adc
mov
xchg
sbb
sub
lret
mov
sub
in
enter
sbb
mov
imul
into
mul
sbb
testb
dec
clc
stc
bound
adc
cld
add
lods
lds
movsb
adc
sbb
and
inc
andl
imul
jg
andb
push
mov
sbb
cmp
test
add
adc
hlt
fisubrs
pop
xchg
mov
ss
jno
jl
dec
int3
mov
jne
loope
in
xor
daa
sti
mov
lcall
pop
push
mov
imul
les
adc
pop
xchg
imul
mov
sub
icebp
xchg
in
imul
and
and
ret
repnz
sub
jne
imul
leave
inc
mov
cvtdq2ps
ljmp
dec
add
xlat
dec
pop
test
xor
or
lods
loope
mov
xchg
cmp
jp
cmpsl
rcll
xchg
mov
cltd
fldcw
push
dec
dec
ficoms
cmp
test
inc
or
xor
or
lds
inc
in
pusha
cmpsb
lods
ljmp
jg
pusha
sbb
mov
fbstp
xlat
loope
xor
test
sub
cmp
dec
pop
sbb
or
call
frstor
daa
xchg
mov
adc
inc
cmp
enter
and
stos
in
bound
push
pop
add
lret
xlat
fsts
push
leave
push
mov
fcmovbe
mov
xlat
cmp
cmpsb
outsl
lcall
in
and
dec
jg
adc
cmp
repz
loop
mov
push
xor
pop
aas
out
fnstsw
dec
add
mov
loope
jo
shll
xor
lea
out
sbb
in
jl
cmpl
cmpsb
call
mov
addr16
push
pop
xchg
ret
pushf
aam
push
fidivs
dec
popa
or
ret
pop
xchg
inc
pop
cmc
mov
out
lret
xchg
dec
test
aaa
insb
sbb
xor
sub
aaa
dec
leave
aaa
pop
jo
dec
cld
xchg
int3
movsl
fldt
enter
fstpt
mov
sub
xlat
mov
ficomps
aad
push
das
and
movsl
dec
repz
sbb
cmp
and
les
pop
sub
sbb
cld
xchg
ja
push
xchg
out
push
mov
inc
inc
add
sbb
and
out
push
repz
out
and
aas
adc
sbb
daa
loopne
in
jns
fdivrl
lock
loop
dec
pop
sbb
mov
lods
scas
push
cli
sahf
and
sub
jo
cmp
enter
mov
sbb
fs
ss
rep
xchg
ljmp
add
js
mov
outsl
sub
stos
pop
mov
or
pop
icebp
ja
fcomi
ja
xor
jle
mov
and
pop
inc
add
mov
ss
push
lea
scas
gs
loopne
sti
push
stos
std
sarb
inc
and
data16
outsb
into
adc
or
pop
push
pushl
cmp
decl
or
pop
inc
lock
sti
dec
mov
sar
and
and
mov
ja
or
sbb
jo
or
cltd
or
push
or
lock
mov
sbb
push
mov
sub
stos
jp
movsl
and
and
mov
arpl
sbb
mov
ss
sahf
in
lea
iret
jb
lds
inc
orb
sub
jmp
out
dec
cmpsb
dec
dec
cwtl
icebp
pop
jg
popl
add
mov
cmp
cmp
ljmp
push
mov
imul
addr16
inc
and
das
daa
stos
movsl
cli
xchg
fdivrl
scas
das
inc
scas
or
js
stos
shrb
adc
pop
push
inc
cmpb
mov
imul
nop
pop
mov
clc
xchg
push
adc
into
mov
mov
gs
outsl
pop
orl
pop
mov
xchg
shrl
xchg
push
out
ret
xor
cmp
push
jge
jne
push
lock
adc
cmp
dec
lock
sti
xor
and
xor
xchg
outsb
push
push
and
iret
ja
xchg
inc
adc
mov
popf
movsb
test
lea
sub
jne
ret
int3
xchg
out
insb
push
adc
arpl
and
jae
shl
movsb
lds
enter
pushf
or
mov
pop
adc
aam
aas
fucomp
mov
xchg
pop
enter
mov
push
mov
sub
add
mov
sub
fwait
pushf
or
in
sub
ret
std
in
daa
test
mov
push
dec
cld
xchg
aaa
or
push
push
mov
call
xchg
lret
sbbl
jno
repz
out
movsb
cs
push
iret
adc
ds
lcall
je
push
mov
cwtl
add
cltd
xchg
fnsave
clc
les
mov
cmp
inc
adc
lods
sub
out
pushf
repnz
sub
ret
sbb
mov
fisubs
push
and
repz
cmp
adc
das
mov
mov
mov
incb
dec
jne
stos
stos
pop
shrl
add
xor
push
push
shll
mov
pop
mov
cmp
jae
cmp
orb
jo
cmp
mov
adc
xor
loopne
or
pop
nop
mov
out
or
repz
mov
pop
mov
push
outsb
mov
gs
cmpl
sub
movsb
and
lock
cmpsb
sub
rcrl
in
sahf
xlat
and
mov
lret
je
lret
push
xlat
dec
or
mov
cs
fwait
test
icebp
pushf
icebp
outsb
sets
xchg
fcoml
inc
and
dec
push
mov
sub
push
cmc
and
sti
jae
iret
test
fwait
shl
daa
jmp
fcomp
push
roll
mov
or
adc
add
inc
cmpsl
inc
hlt
lcall
adc
dec
scas
dec
mov
rorb
adc
mov
cmp
call
or
mov
jbe
enter
adcl
dec
and
sarb
les
imul
xchg
int
lods
loop
sbb
cmpsl
pop
xchg
addb
ret
push
aam
enter
mov
jb
ret
mov
or
mull
add
in
cs
add
sbb
or
mov
jp
mull
mov
aad
js
xchg
sbb
dec
cmpsb
xor
int3
icebp
cmp
adc
sbb
mov
imul
pop
mov
test
stos
mov
testl
arpl
lret
xchg
jnp
movsl
and
adc
xor
xchg
cltd
orl
popf
pop
or
sbb
pop
fadds
sub
notb
js
xchg
les
bound
xor
sbb
jp
shrl
mov
dec
ss
jns
add
add
lcall
add
stc
sub
cmpb
rorl
test
dec
lahf
lahf
xchg
lret
outsb
pop
adc
enter
nop
jmp
cmp
pavgw
adc
sbb
cmp
pop
rclb
sar
nop
call
dec
sbb
cmp
jbe
ss
pop
cmp
fsubs
add
popa
stos
imul
ret
movsb
aam
and
adc
xchg
fnstenv
inc
push
mov
mov
mov
movsl
jno
cmpsl
in
jb
lock
ret
stos
jbe
aas
push
inc
jbe
add
add
push
ficomps
jmp
add
mov
push
inc
stos
gs
orb
dec
daa
addr16
into
cmpsl
push
mov
scas
scas
or
in
popa
cmp
insb
cmpsl
add
sbb
mov
and
cmc
nop
jb
pushf
fcoms
repz
pop
mov
imul
lods
call
lds
daa
in
sbb
jnp
lods
xchg
and
add
aad
xor
ds
test
lea
or
ds
scas
pusha
or
add
jne
adc
in
xor
sahf
or
mov
decl
mov
ljmp
out
repz
adc
mov
jns
ja
cmp
jnp
xor
hlt
and
lds
adc
es
push
dec
aam
lret
dec
push
dec
adc
ss
inc
lahf
call
sti
outsl
lcall
sbb
adc
and
fs
loop
add
sub
inc
popf
dec
lahf
out
pop
xchg
ficoms
cli
sub
xchg
sbb
push
outsl
dec
leave
fdivl
js
loope
dec
call
add
xchg
sar
and
cwtl
pop
sbb
xor
mov
cmp
sarl
enter
iret
sarl
cli
flds
sbb
jne
aad
pop
das
cwtl
testl
fld
add
test
imul
cvttps2pi
pop
mov
xor
or
out
dec
add
jno
loopne
stc
and
popf
test
sbb
pop
aam
dec
les
mov
nop
fsubrs
insl
ret
int
in
lcall
pop
adc
dec
mov
jb
popa
xchg
xor
ds
inc
es
push
xchg
add
je
push
sub
sti
pop
jae
rol
loope
cmp
xchg
push
addr16
inc
or
call
jecxz
mov
cmp
fdivrl
enter
das
add
ficompl
dec
es
inc
movsb
jnp
test
hlt
pop
cmp
add
popf
iret
xchg
das
jle
lea
js
bnd
orb
mov
in
mov
xchg
jl
add
xor
movsl
stos
add
lea
testb
xchg
roll
pop
daa
cmpsb
imul
in
repnz
mov
sarl
outsl
fidivl
add
jmp
add
adc
pop
jbe
movsl
sub
add
jns
test
add
inc
ss
lret
xchg
push
cmpsl
mov
cbtw
cld
ret
imul
into
jo
cli
push
pop
push
push
mov
inc
and
cmc
fstl
xchg
adc
mov
pop
ljmp
imul
add
rcrb
mov
mov
pop
arpl
xor
jo
push
mov
in
mov
mov
call
out
mov
xor
jo
xchg
popa
xchg
xor
int
out
js
sbb
jae
out
fldenv
lret
dec
cli
stos
xchg
sub
scas
xchg
mov
lock
ja
lds
shlb
inc
imul
aad
lret
xor
cli
add
push
jno
inc
in
fsub
je
les
lock
cmovnp
shr
mov
pusha
and
pop
sbb
stc
jno
sbb
aad
jo
lret
adc
scas
fisubrl
xchg
jl
sbb
xchg
jb
pop
stos
xchg
fs
cwtl
jns
adc
xlat
cltd
dec
jo
push
nop
insl
lret
dec
test
dec
out
mov
sub
cmpsl
jg
mov
inc
and
int
scas
arpl
adc
outsb
jb
dec
adc
fwait
cmpb
sbb
aas
mov
xor
mov
cmp
stos
pop
push
mov
xchg
push
mov
fsubr
xchg
stc
enter
aam
push
xorb
mov
push
mov
gs
and
dec
hlt
shlb
movsl
cmpsl
loop
lods
push
dec
inc
inc
imul
push
dec
sub
test
xchg
mov
cmpsl
pop
movsb
push
aaa
push
insb
rorb
mov
scas
mov
outsl
mov
add
push
out
dec
or
jecxz
cmpsl
lahf
adc
mov
fcmovne
inc
pop
jbe
insl
daa
lcall
pop
mov
xlat
add
test
pop
js
sbb
js
lret
jno
nop
ffreep
mov
mov
inc
repnz
inc
cltd
movsb
push
sub
into
fadd
mov
pop
das
arpl
stos
sub
in
pushf
add
popa
and
imul
mov
and
ret
pop
and
xchg
xchg
dec
mov
xchg
lea
fcmovnb
cmp
jmp
sbb
inc
inc
cmc
roll
data16
sub
mov
loop
or
mov
repnz
push
push
jnp
aad
jge
js
mov
int3
push
fidivl
nop
lds
popf
jbe
fnstcw
mov
movsb
pop
xor
stc
fcomp
and
cs
xor
cmpl
xchg
jno
cmp
outsl
add
outsl
scas
dec
mov
dec
mov
outsb
jb
lcall
arpl
inc
cs
insl
out
cld
pusha
ja
jb
pop
and
decl
sbb
mov
lods
sub
mov
xchg
jge
or
or
mov
je
push
scas
jno
push
adc
lcall
xor
push
fdivrl
cmpsb
sbb
fwait
les
inc
vmread
adc
fs
lods
int
adc
pop
sub
sub
sbb
lret
or
jne
movsl
sbb
stc
xchg
sbb
fwait
push
and
movsl
xorb
cmp
in
jmp
test
cmpb
rcll
pop
jmp
push
add
add
mov
fldenv
cmp
jg
stc
sub
call
test
cltd
fistpl
mov
cmp
jb
call
cmp
sbb
out
xor
loope
pop
pop
adc
push
and
pushf
call
sub
add
arpl
sub
mov
jg
mov
push
jb
iret
sub
lock
jl
xor
loopne
std
test
xchg
stos
xchg
outsl
adc
loop
mov
orl
insb
sbb
pop
xchg
les
fimull
daa
push
lcall
push
cmp
enter
sub
popa
lahf
cwtl
inc
out
mov
inc
pop
cmpb
cmp
add
imul
outsb
ds
push
femms
mov
sbb
out
push
cli
nop
test
imul
je
cmpsl
sub
test
mov
inc
xchg
push
loop
fwait
inc
fsubr
mov
cmp
pop
mov
mov
xor
mov
icebp
js
xor
push
inc
data16
movsl
rclb
fmuls
jbe
nopl
sahf
push
mov
jge
pop
mul
mov
arpl
inc
popa
push
loope
mov
pop
add
das
leave
repnz
jmp
sahf
inc
fwait
mov
aas
iret
inc
and
in
inc
xchg
pop
inc
sbb
fdivl
enter
fsubl
repnz
inc
bound
je
push
pop
xchg
xchg
clc
inc
jne
pop
pop
pushf
mov
push
icebp
add
in
jns
in
or
xor
mov
sub
enter
int3
in
cmp
mov
leave
fidivs
pop
or
mov
cltd
xchg
ja
jmp
lods
fimuls
sub
pop
xor
fsubrs
stos
and
adc
adc
rcrb
fcoms
sub
mov
shl
mov
scas
mov
int3
imul
cmp
cmpsb
lods
fsubs
push
rorb
jmp
movsl
call
arpl
mov
std
cld
push
ss
fists
aas
mov
loop
shrb
inc
mov
popf
maxps
test
xor
jmp
dec
mov
repnz
dec
push
and
ds
aam
sub
inc
sarl
or
pop
jno
les
add
cmpsl
jmp
xchg
and
pop
jne
xor
jnp
or
cmp
and
add
pop
mov
lahf
in
loop
mov
jg
sbb
outsl
lcall
or
push
cli
adc
push
inc
aaa
push
mov
loop
xor
add
dec
clc
in
mov
imul
les
add
dec
mov
mov
or
decb
pmuludq
cs
shrb
pop
incb
mov
mov
jecxz
mov
scas
mov
test
test
jno
and
sub
outsb
cld
popf
outsb
pop
inc
cltd
mov
adcl
sub
mov
jle
mov
xor
popa
cmp
push
mov
pop
or
and
test
mov
ret
imul
adc
jns
xchg
ljmp
pop
push
aad
or
pop
inc
adc
mov
pop
adc
mov
js
aad
xchg
xor
lea
daa
pop
xor
sub
sub
out
sbb
faddp
insl
mov
adc
outsb
test
or
cmp
pop
je
sbb
aam
rorl
rolb
mov
sbb
test
int3
adc
jp
jne
xor
fildl
mov
rclb
scas
mov
pusha
pop
mov
data16
sbb
jno
or
cmp
xor
mov
out
push
addr16
shl
jle
rol
fadds
xchg
sub
lds
inc
es
and
adc
test
stc
popa
adc
jp
bound
sub
fldt
pop
cmpsl
jl
mov
dec
cs
sti
cmp
and
les
mov
jecxz
mov
jo
fwait
cmp
xor
stc
iret
sbb
or
push
iret
cmp
mov
loopne
imul
rorl
adc
and
test
xor
sbb
lahf
out
mov
push
and
mov
xor
into
inc
adc
dec
pop
pop
rcrl
insb
inc
xchg
aad
cs
test
sti
xchg
xchg
sarb
js
sti
lahf
out
out
push
cmp
cmc
es
loopne
fdivr
cmpsb
mov
and
sbb
fsubrl
inc
cmp
push
push
xchg
test
inc
pop
mov
outsb
shlb
in
xor
xor
mov
daa
sub
mov
jg
push
leave
xchg
test
fidivrl
inc
mov
hlt
push
stos
cmp
push
andnps
xchg
mov
sub
add
xlat
cmpsb
or
mov
xchg
xchg
rol
gs
pop
jmp
cmpsb
fisttpll
enter
fists
test
xor
sbb
add
dec
sahf
enter
lret
pop
xchg
or
data16
test
xchg
cmp
dec
scas
sahf
xchg
and
jl
aad
pusha
sub
hlt
in
insl
push
fwait
dec
testl
icebp
fistl
je
in
sbb
xchg
mov
aaa
adc
inc
scas
shrl
adc
mov
je
ret
scas
leave
cltd
xchg
push
cwtl
popa
into
movsl
lods
adc
test
nop
mov
loopne
in
xor
jmp
mov
mov
jb
mov
dec
sub
pop
sbb
cmp
shll
scas
sbb
sub
enter
addr16
xchg
dec
pop
push
in
and
inc
int
sbb
rcrl
lods
push
aaa
into
loop
testb
jp
rorb
push
jl,pt
inc
sbb
movsl
clc
pushf
jo
dec
scas
pop
das
push
pop
xchg
fisttps
or
rclb
xchg
out
push
sbbb
mov
xchg
lret
popf
sbb
cld
imull
xchg
and
xchg
in
lcall
cmpsl
lea
xchg
pusha
jae
inc
inc
clc
nop
push
fstl
roll
in
subl
test
mov
xchg
push
sub
jmp
mov
je
les
mov
popf
xlat
cmp
dec
int3
add
lahf
insb
push
lcall
ret
rcr
nop
mov
or
aad
sbb
into
sbb
jo
in
ret
adc
mov
mov
mov
es
sub
xchg
sti
or
dec
xchg
and
pop
pusha
sbb
rcrl
dec
dec
ss
adc
push
movsb
xchg
inc
mov
push
mov
lods
aam
pushf
sbb
jp
stos
sti
pop
loop
scas
add
les
in
lret
xor
or
pop
pushf
jae
in
outsb
xchg
fdiv
pop
int3
sub
lahf
jge
pusha
shll
mov
dec
test
andb
lret
add
push
pop
loop
adc
xor
xchg
mov
daa
add
in
xchg
sti
and
and
and
data16
and
cmp
inc
pop
test
mov
xor
iret
sbb
sub
add
and
ljmp
scas
out
adc
and
lret
sti
xor
xchg
iret
mov
ret
xchg
cltd
and
xor
push
mov
pop
inc
jle
or
xchg
jmp
mov
inc
fisubl
or
andb
xor
push
andnps
push
int3
fneni(8087
out
ret
mov
pop
sahf
pop
cli
cwtl
leave
es
cltd
mov
dec
fadds
les
pushf
jl
cmpsl
movb
inc
roll
cmpsb
mov
lds
inc
pop
aaa
pop
inc
imul
and
pop
aam
cmp
xchg
fstpl
imull
outsl
jo
hlt
add
fldl2t
movl
or
stos
inc
and
aad
out
icebp
or
xor
inc
lock
jnp,pn
lahf
sub
mov
sahf
sbb
lock
or
ljmp
sub
mov
iret
hlt
shll
cs
addb
leave
lods
mov
adc
mov
enter
dec
sub
xchg
andl
inc
and
cmp
outsl
loope
jmp
xlat
xor
shr
mov
pop
and
popf
notl
lret
stos
cmp
leave
sbb
ds
mov
xchg
loop
xchg
and
hlt
push
scas
addr16
seto
jnp
sti
imul
push
adc
pop
sub
bound
jp
inc
jmp
mov
shll
or
jnp
arpl
ljmp
test
stc
ljmp
lods
pop
repz
sbb
xchg
pop
mov
adc
sti
lret
push
ds
les
mov
sbb
lds
sub
mov
and
adc
imul
lret
push
stc
adc
and
pusha
divb
rclb
das
leave
mov
mov
data16
lods
shrb
mov
xor
cmp
fsubs
pop
cmp
lods
push
jb
adc
gs
and
pop
adc
lret
xor
insl
and
push
jo
pop
inc
fldenv
stc
hlt
push
add
adc
push
lahf
jp
mov
adc
cwtl
mov
test
mov
in
inc
jbe
sarb
repz
pusha
jae
daa
aad
xor
fwait
lret
sarl
xchg
imull
mov
and
sub
into
push
popf
sub
mov
movsb
xor
cmp
hlt
std
push
clc
xor
or
and
add
cmpsl
inc
fwait
xor
iret
dec
mov
or
mov
mov
pop
loopne
sbb
out
inc
jb
int
popf
out
ss
and
xchg
push
mov
mov
int
repnz
stc
push
and
arpl
punpckhbw
xchg
test
xchg
hlt
mov
cmp
sarb
adc
daa
pop
fmuls
setnp
jno
pop
cmp
ds
push
les
mov
inc
xlat
insl
xchg
xchg
mov
sbb
inc
cmp
in
out
mov
dec
in
mov
xor
and
gs
dec
aaa
dec
imul
cmp
sbb
pop
mov
aam
adc
mov
dec
mov
push
mov
mov
or
xor
movups
data16
sub
push
push
push
shl
xchg
pop
aas
jecxz
sub
xor
fstpl
addl
pop
sbb
lock
adc
pop
lret
pop
xlat
sub
add
das
xchg
push
leave
inc
dec
cmp
adc
cmp
inc
shll
pop
sub
stc
mov
cmp
lahf
jne
inc
lahf
add
mov
mov
push
jns
push
aas
xchg
and
jp
pop
dec
es
adc
inc
cmp
mov
es
sbb
bound
test
aam
cmp
imul
or
jo
fwait
adc
shl
xor
gs
adc
jmp
dec
scas
jecxz
sti
or
push
or
and
jg
dec
and
dec
add
out
arpl
add
xor
pop
cmp
cmpsb
cmpsl
jl
dec
out
ror
idivb
inc
adc
add
orb
sub
mov
dec
add
and
lret
pop
sbb
test
dec
or
pushf
inc
inc
pop
out
stc
mov
lods
mov
stos
nop
out
adc
pop
push
fwait
insb
xor
xchg
jne
aad
subl
push
add
adc
cmpsb
loopne
negb
test
fwait
xchg
imul
lea
jl
outsb
adc
cmc
xor
push
popf
adc
sbb
jne
xor
dec
rorl
mov
sar
push
mov
repz
cltd
cli
in
inc
outsb
xor
dec
xchg
inc
cld
js
xchg
popf
push
push
push
sub
arpl
sub
mov
aad
imul
das
cmp
getsec
or
cmp
sahf
pop
mov
mov
or
inc
dec
sub
scas
lods
aas
mov
repnz
in
xchg
fsubr
jae
repnz
and
in
clc
das
pop
pop
imul
notb
test
dec
icebp
dec
adc
pop
mov
rcll
push
pushf
jge
fs
ss
fdivr
xor
xor
sti
jmp
add
fcmovu
into
ljmp
xor
test
cwtl
pop
sub
popa
cs
cmp
ljmp
or
pop
jge
push
call
iret
repz
sub
sub
shrb
ret
pop
ret
sub
out
jnp
ret
jae
mov
pop
sub
mov
mov
sbbb
sub
or
loope
repnz
addr16
sbb
insl
pop
adc
xchg
adc
movsb
sbb
fildl
stc
rorb
and
mov
cmpl
lret
mov
sbb
les
or
xor
xchg
cld
sub
lods
inc
sub
xor
sarl
cmpsb
lea
jno
clc
shl
inc
addb
aas
inc
inc
stos
adc
hlt
push
clc
mov
ljmp
push
ffree
adc
dec
jbe
movsb
mov
lods
xor
sbb
dec
push
and
into
shl
or
mov
jmp
and
incl
ds
pop
and
dec
das
aam
ret
inc
test
xchg
into
add
or
mov
jp
sub
pop
clc
mov
test
adc
out
add
mov
sub
sub
dec
mov
mov
ret
ret
je
xchg
inc
or
mov
pop
dec
adc
and
jo
stos
movsb
jle
cld
adc
cmpsb
xor
das
xchg
xchg
ret
cmpsb
and
pop
nop
push
cmp
sub
cmp
sub
xchg
inc
and
sbb
mov
pop
out
dec
jo
jns
fiaddl
sub
jb
pop
paddq
pop
popf
sbb
aaa
out
pop
aam
mov
cmpsl
adc
mul
fwait
scas
mov
fwait
xchg
pop
aas
jmpw
stos
cmp
add
mov
test
shl
shr
aam
add
mov
rol
mov
out
data16
xlat
arpl
clc
aam
ja
sbb
stos
inc
icebp
out
sahf
or
and
xchg
shrb
pop
arpl
lds
xor
inc
pop
push
adc
xchg
cmpsl
push
ljmp
adc
cld
xor
xchg
xor
sbb
imul
mov
mov
inc
mov
push
dec
stos
adc
clc
insb
ss
or
mov
lret
mov
cmp
jne
aaa
mov
sbb
outsl
fistpl
inc
push
xchg
cmc
fsubs
sbb
push
ja
orb
sbb
rcl
mov
repnz
adc
xor
inc
and
adc
inc
cs
fistpl
and
sbb
pop
int
inc
inc
popa
xchg
lods
out
or
xchg
cmc
and
push
iret
mov
push
sti
xchg
pop
cltd
lret
inc
pop
insl
iret
lcall
fimuls
xor
fldt
insl
adc
jne
outsb
pop
mov
shll
cmp
xchg
in
xor
fistps
enter
fs
and
movsb
mov
addb
xor
scas
insb
or
pop
pop
cltd
xchg
imul
leave
popa
xor
in
inc
fcomps
mov
sub
pop
cmp
imul
js
shl
xchg
movsb
adc
das
in
repz
pop
pop
sbb
adc
push
repz
push
outsl
dec
sub
xchg
jbe
cmp
and
lahf
sbb
int
inc
xchg
ljmp
lds
lods
notl
jmp
sbbl
xchg
out
aad
in
gs
inc
cltd
pop
sbb
nop
pop
es
push
jl
mov
movsb
jae
sub
jmp
int
adc
adcl
je
in
mov
xor
adcl
ficomps
mov
popa
lods
test
mov
inc
mov
icebp
or
outsb
xor
sub
ds
cli
nop
add
out
jnp
inc
jo
out
mov
and
repnz
jle
rolb
xchg
and
push
pop
imull
sub
xlat
ret
mov
mov
pop
and
dec
pop
cmp
adc
fcoml
gs
cmc
jg
push
adc
sahf
ljmp
cli
fmull
xor
sbb
stos
ja
sahf
outsb
mov
push
fwait
imul
test
jge
push
rcll
jecxz
fmull
inc
inc
mov
test
sbb
std
out
add
adc
jle
add
inc
inc
clc
sub
mov
dec
mov
xchg
cltd
mov
aad
mov
test
sbb
mov
test
iret
iret
enter
cmc
dec
js
in
push
bound
mov
mov
push
or
aam
arpl
arpl
mov
cmp
add
cmp
xchg
pusha
xchg
in
iret
sub
mov
lret
xchg
inc
sbb
mov
aad
mov
sbb
jo
daa
and
in
in
movl
jb
test
inc
imul
lods
jo
shlb
xchg
jae
push
xchg
sub
pop
push
aas
loop
xor
mov
jb
xchg
dec
je
cmp
scas
pop
data16
jns
sbb
mov
adc
xor
adc
pop
cmp
add
int3
jl
sbb
out
ss
dec
cld
addr16
pushf
ficomps
sub
jae
lock
mov
movsl
inc
mov
cmp
fdivl
mov
cld
push
and
rcrl
scas
push
mov
dec
in
or
leave
dec
mov
dec
xchg
enter
mov
lea
xor
sub
xchg
or
or
ret
jg
insb
mov
mov
imul
push
dec
fldl
push
leave
sti
mov
loop
push
bound
aad
lahf
int
push
das
jb
repnz
movsl
or
add
jno
add
xor
cs
pop
mov
xor
push
pusha
or
or
or
ret
cwtl
pushf
and
fsubl
enter
push
and
mov
mov
cmp
loop
daa
dec
pop
addr16
fiaddl
arpl
pop
adc
sub
stc
cmp
std
data16
or
mov
mov
lret
in
mov
dec
xchg
loopne
test
fcompl
jmp
mov
fadds
out
fstpt
mov
lret
out
push
mov
mov
add
stos
insl
dec
pop
sub
or
and
into
sbb
and
ret
xorl
es
jmp
jae
sbb
in
jne
rcl
gs
and
jns
mov
sarb
mov
mull
cmp
add
inc
cli
fsubrs
mov
pop
push
imul
dec
or
lods
es
xor
inc
pop
clc
dec
jp
xchg
je
add
out
sub
jmp
cmpsl
adc
adc
mov
jnp
cmp
sub
pop
test
aam
jecxz
out
add
cmp
push
jb
pushw
xor
cltd
jns
aas
lret
iret
xor
cmp
in
loope
push
ja
mov
pop
arpl
xchg
fidivrs
push
adc
fildll
and
fdivp
outsl
cltd
scas
out
inc
cwtl
push
shr
ss
rorl
aaa
rcrl
add
and
ljmp
and
xchg
aaa
int3
sub
jae
subb
cltd
lock
mov
div
jl
hlt
fwait
in
das
inc
cmp
pop
or
mov
and
addr16
into
add
bound
xor
dec
or
xorb
leave
test
pop
fists
lret
std
and
pop
fldenv
mov
cmp
pop
les
add
cmc
push
sbb
pop
daa
push
xchg
cmpsb
push
imul
cli
add
call
mov
dec
pop
sbb
adcl
loop
mov
sarb
dec
enter
dec
test
mov
add
push
leave
xor
lcall
movsl
mov
popa
sub
outsl
cli
mov
push
or
bswap
loop
fwait
mov
jae
js
imul
and
rcr
aad
loopne
icebp
add
cmpsb
mov
sbb
and
jb
mov
pop
jg
repnz
pop
fbstp
and
fwait
mov
sub
mov
int3
cld
xorb
mov
jle
cmp
lock
fbstp
or
jp
sbb
out
jnp
lods
and
or
pop
scas
js
jne
mov
nop
add
ds
add
mov
jo
sbb
out
enter
hlt
xor
mov
push
mov
stos
cmc
xchg
adc
cmpsl
sub
stos
mov
repnz
mov
or
xchg
fdivl
mov
je
cli
test
adc
add
call
dec
xchg
adc
iret
shrb
ss
add
stos
push
mov
cs
sbb
fildl
aad
jle
ret
mov
aam
jle
mov
xchg
int
inc
mov
jnp
mov
mov
inc
lcall
out
mov
xor
mov
clc
sbb
cmp
clc
adc
mov
push
xor
sbb
lahf
push
jnp
lahf
pusha
and
and
ret
mov
lea
pop
outsb
std
xor
sub
sub
cmp
jmp
push
fs
out
fisubs
movl
sbb
mov
adc
push
cmp
cmp
push
cld
jae
inc
fdivrl
stos
jmp
xor
push
insl
pusha
std
pop
lret
push
les
das
xor
je
lea
pop
sbb
insb
jmp
add
mov
jl
test
and
or
mov
mov
pop
mov
cmpsl
out
repnz
push
dec
inc
jg
inc
sub
aam
xor
push
sub
in
xchg
jmp
rcl
ret
enter
jo
sub
adc
fwait
mulb
sbb
daa
adc
jnp
lock
fsubl
pop
mov
mov
mov
test
jg
jae
dec
leave
sbb
out
sub
inc
stos
xchg
mov
in
xor
xchg
cmpsb
push
pop
xchg
pop
js
add
dec
pushf
push
test
push
inc
jecxz
pop
iret
ja
jle
movsb
in
cmp
xor
jl
adc
shrl
stos
inc
and
cmp
pop
stos
xchg
insb
sbb
cmp
cld
sbbl
or
and
pop
sub
loop
or
mov
rcrl
sbb
enter
fidivrl
enter
push
dec
add
std
rorl
cmc
loope
push
lahf
push
fs
jae
push
iret
je
aad
xchg
pop
jno
pop
mov
pop
jo
dec
sbb
lods
ficompl
push
sbb
push
fsubrl
and
fimuls
shrl
push
cmp
fwait
pop
push
repz
push
or
out
test
xor
std
arpl
push
adc
push
loop
push
jae
mov
mov
enter
mov
and
cmpsb
xchg
arpl
sub
mov
rcll
je
lea
mov
xor
and
dec
shl
aas
jmp
cmp
mov
lcall
sub
data16
adc
push
and
adc
xchg
xor
and
mov
pop
pop
cmp
hlt
push
push
add
hlt
dec
and
icebp
fmuls
test
insb
dec
and
mov
mov
dec
and
mov
ret
daa
insl
lret
ret
mov
xchg
dec
int
sub
jecxz
lock
add
or
in
xchg
pop
xchg
or
pop
and
sbb
js
mov
mov
mov
cmp
jno
es
inc
inc
mov
xchg
mov
daa
xchg
popa
or
roll
mov
and
loope
arpl
push
dec
fs
insb
dec
push
sub
or
adc
je
jle
cmpsl
mov
mov
mov
jo
cmc
lret
pop
and
out
xor
test
ja
scas
push
xchg
inc
jl
push
dec
mov
sbb
xchg
out
jae
leave
cmp
cli
sbb
xchg
ret
sub
and
xor
shrl
sub
xchg
icebp
cmpl
push
mov
xlat
push
xchg
out
xchg
dec
addr16
sub
adc
ret
add
fwait
scas
gs
lret
in
pop
icebp
roll
test
cltd
jl
ljmp
pop
dec
jae
xchg
rcrl
je
test
test
cmp
jl
insl
movsb
jae
pop
sarl
notb
jno
movsl
loopne
dec
sub
popa
fs
insl
mov
and
fdivr
nop
cmp
adc
fimuls
int
int3
add
cmp
mov
xchg
xchg
pop
adc
dec
sbb
dec
add
adc
test
test
sub
sahf
movsb
jnp
sarb
or
pop
je
fidivrs
mov
invd
mov
lock
cmpsl
adc
cmp
repnz
cmp
js
hlt
push
pushf
outsl
mov
es
and
lret
cmp
sub
ja
push
add
movsl
mov
mov
roll
aad
aaa
inc
mov
mov
movsb
sbbb
or
fcoml
pop
movsb
lret
jae
jl
out
inc
fdivrl
push
movsl
daa
xor
iret
fs
sbb
insb
cmp
adc
adc
jecxz
shrl
loop
xchg
loop
lods
lods
push
ret
pusha
leave
xchg
ret
xor
fcompl
arpl
or
and
push
mov
xchg
imul
pop
mull
out
je
mov
bound
aam
and
fdiv
loope
imul
clc
call
sub
shll
icebp
cltd
lea
jl
out
into
filds
stc
xchg
movsb
or
shld
jb
xchg
enter
and
lahf
fnstenv
jmp
insb
ds
ja
and
test
jle
lret
jnp
push
xchg
call
pushf
fdivp
pop
lret
cmp
mov
push
cli
sub
loopne
mov
inc
gs
sub
sub
test
ds
xor
push
xor
mov
mov
in
cmp
insb
cmpl
push
data16
cld
pop
data16
or
dec
repnz
xlat
add
cld
dec
cmp
dec
jle
ss
insl
lds
rcll
stc
aad
mov
aaa
out
rorb
enter
xlat
xchg
out
cmp
outsl
outsb
or
enter
jae
lods
xchg
gs
cmp
std
xlat
sarl
add
pop
hlt
pop
repnz
jae
icebp
push
nop
mov
jecxz
cmp
pop
test
add
jae,pt
xor
cs
push
adc
and
mulb
push
decl
in
inc
lcall
mov
or
mov
movsb
lahf
ljmp
divb
xor
sub
shrl
cs
and
ret
xor
das
mov
std
or
mov
mov
sbb
repnz
sub
mov
movsl
sub
jae
add
lret
aad
mov
inc
dec
loope
pop
sbb
push
fidivrs
pusha
int3
mov
cs
pop
pop
js
in
dec
ljmp
cmp
stos
nop
stos
mov
dec
jo
cmp
mov
pop
in
jns
rcrb
lea
into
adc
hlt
push
and
sub
inc
add
mov
inc
or
inc
pop
mov
cmpsl
and
sub
cli
fisubrs
xchg
pop
aam
in
ss
xchg
sub
cmp
jmp
jecxz
std
movsl
nop
and
pop
jge
inc
fisttpl
sbb
sub
aaa
scas
cmp
lds
adc
and
push
jecxz
sub
addr16
xlat
sbb
and
rolb
mov
sub
add
inc
fs
ja
inc
mov
xor
ret
loop
out
stos
dec
adc
dec
fst
mov
lahf
outsl
out
pop
lock
xchg
aam
add
dec
dec
daa
sub
cwtl
push
mov
std
movsl
jo
popl
in
and
push
xor
and
mov
outsl
movsl
dec
cmp
jl
inc
pop
adc
stc
inc
xchg
loop
subl
cmpb
jne
mov
xchg
cmpsl
jno
xorps
xchg
cld
test
popf
mov
mov
inc
sub
rcrl
mov
scas
lret
ljmp
push
fcomps
mov
lahf
int
testb
je
arpl
mulb
pushf
lods
pop
bound
pop
and
cwtl
scas
ret
mov
insb
cs
cs
mov
and
push
sbb
jno
mov
gs
cli
hlt
sbb
cmp
sbb
jns
pop
pop
cmpb
or
aam
push
in
jnp
in
loopne
iret
xchg
adc
out
jg
jno
imul
sub
xor
adc
lret
fildll
jno
aas
fisttps
nop
fdivs
ret
push
js
fildll
subl
jp
lock
mov
sahf
jmp
or
pop
popf
fs
rol
int
arpl
into
imul
add
out
xchg
dec
sub
adcb
pop
loopne
stos
fldt
inc
mov
int3
fistpll
lea
cmpsb
or
xchg
cmp
xchg
jb
outsl
nop
inc
outsl
dec
fnstsw
inc
pop
fwait
les
lods
jle
pop
int
popa
outsl
sbb
xchg
in
push
add
add
add
loop
push
sub
pop
mov
ja
inc
in
push
jnp
icebp
mov
cli
gs
insb
lds
adc
ret
scas
das
pop
cmp
test
mov
into
dec
mov
fs
sbb
gs
mov
mov
dec
iret
push
mov
dec
push
xlat
pushf
push
popf
dec
jmp
sbb
and
cmpsb
inc
in
jg
cmp
or
mov
mov
inc
fucomip
and
fsubs
add
xor
and
mov
imul
shlb
sar
pop
push
cmp
inc
mov
pop
popf
jne
imul
add
lock
je
mov
inc
jo
pop
lcall
xchg
and
mov
stc
test
out
dec
dec
pusha
js
mov
in
mov
and
je
or
stos
imul
call
xchg
mov
jmp
lcall
mov
ret
leave
mul
ljmp
gs
rcl
js
xchg
loope
out
xchg
inc
int3
cltd
push
xchg
sbb
sbbl
div
es
popf
cmp
fucomp
jae
or
movsl
cmp
arpl
push
dec
or
iret
enter
incb
fistpl
push
outsb
xor
jo
cs
xor
jnp
cmp
adc
out
push
es
cltd
test
lahf
jecxz
or
scas
sbb
sub
in
adc
repnz
enter
in
dec
mov
test
loopne
cmp
xor
fists
and
pop
xchg
xor
inc
in
hlt
repz
roll
pop
enter
sbb
lods
push
out
pop
addl
fiadds
test
adc
jge
std
inc
popa
jbe
and
outsb
ret
leave
fmul
pushf
lods
push
in
pop
enter
cli
repz
mov
sbb
push
mov
jl
inc
cmp
test
dec
test
jnp
andb
iret
loop
aaa
xchg
leave
popf
repz
xchg
push
iret
adc
and
enter
mov
mov
mov
mov
loopne
imul
lret
adc
std
and
xchg
mov
imull
inc
pop
add
jnp
and
add
stc
clc
sub
nop
mov
inc
cmpsb
jo
repnz
repnz
dec
clc
imulb
xchg
add
flds
outsb
dec
std
popa
adc
mov
mov
xor
pusha
xor
outsl
mov
pop
jb
stos
mov
push
mov
or
in
test
into
loop
xor
adc
inc
cmp
lds
mov
inc
pop
xor
cmp
mov
hlt
gs
inc
out
insb
ja
or
mov
pop
test
dec
loopne
push
xorl
pusha
push
movsb
jb
repnz
cwtl
mov
inc
sahf
lods
jp
movsl
ret
mov
lods
imul
sbbb
push
mov
sti
pop
mov
mov
push
mov
ret
xchg
cmp
in
mov
daa
or
mov
popf
sbb
sbb
inc
out
sub
jmp
cmp
enter
ss
mov
mov
loop
test
mov
stos
xchg
cmp
pushf
inc
mov
roll
pop
or
dec
xchg
dec
fcomi
ss
fnstsw
bound
jb
das
jge
mov
pop
cli
pop
sub
rcll
dec
jmp
movsl
mov
or
ljmp
jg
cli
daa
repnz
pushf
test
lods
xchg
sub
ss
addb
or
push
nop
aam
xchg
arpl
in
and
push
lods
pop
mov
insb
mov
xor
lock
add
mov
cmc
aad
jle
movsb
push
xchg
xor
std
lret
int3
loop
cwtl
sahf
fildll
mov
push
lcall
xchg
and
jg
mov
outsb
pop
pop
jae
sub
addl
adc
add
mov
leave
pusha
into
adc
ds
push
mov
add
in
push
mov
iret
and
subl
es
out
shrb
mov
arpl
hlt
out
movsb
pusha
fmuls
insb
mov
pop
and
jo,pn
mov
dec
push
lock
loopne
mov
pop
fldenv
je
add
neg
jnp
xor
push
mov
push
jmp
pop
rcll
sub
loop
test
mov
icebp
mov
lcall
mov
push
mulb
pop
push
adc
xchg
jmp
pop
cmp
fwait
nop
mov
inc
add
jnp
into
das
or
push
add
in
push
mov
xor
clc
mov
ret
out
xchg
pop
lret
lods
in
xchg
jle
fimull
push
push
or
inc
mov
in
xor
sub
lret
out
or
movsb
jl
addr16
aad
mov
push
mov
add
imul
pop
out
sbb
imul
lods
in
fs
lea
cmp
sbb
sar
inc
pop
push
call
leave
popa
cmp
cmpsl
fnstcw
hlt
enter
jecxz
jb
pop
inc
or
xor
pop
adc
push
int3
cld
sub
push
adc
pop
or
ss
out
js
mov
xor
ret
in
cmp
sahf
jg
out
movsb
inc
xlat
dec
add
jge
sbb
adc
rcrl
cmpsb
mov
mov
mov
jg
xchg
push
mov
sbb
or
xchg
stos
fwait
xor
mov
into
pop
repnz
repz
add
scas
mov
je
ret
mov
adc
mov
pop
or
jg
aad
mov
jmp
add
pop
nop
push
testb
in
out
or
sbb
rorl
or
sbb
sub
in
cltd
push
dec
ret
add
imul
jns
pop
out
int3
fistps
cmp
lods
dec
bound
xchg
sub
loope
and
mov
psubb
pop
lcall
sbb
inc
lret
pop
xchg
mov
mulb
and
into
jmp
jo
mov
or
mov
add
adc
scas
arpl
out
push
xchg
loope
mov
mov
dec
testb
cmpsl
jae
cmpsl
xchg
mov
or
jg
push
adc
push
or
cld
adc
push
aas
dec
in
lahf
cmp
or
addr16
mov
push
and
sbbl
pop
xchg
push
sahf
repnz
pop
cmp
and
mov
cmp
sub
push
pop
lcall
dec
ds
mov
icebp
jle
sbb
jae
fstpl
lods
dec
xchg
mov
js
ss
mov
mov
out
jns
or
push
xlat
shll
cwtl
add
pop
shl
xorb
shrb
sbb
inc
insb
addb
or
pop
xor
cmp
cmp
lea
cs
jbe
add
adc
scas
jne
aaa
inc
std
pop
mov
mov
addb
xor
lock
or
addr16
data16
xchg
loopne
in
jmp
ror
in
inc
bound
test
dec
rclb
jmp
fimull
movsb
push
sub
pop
push
dec
rcrb
cmp
inc
cmp
jmp
mov
js
aaa
into
nop
in
jno
xchg
cmpb
push
xchg
cmp
dec
cmpsb
mov
cmpl
cltd
out
pop
pop
cltd
std
pop
inc
cmp
mov
addb
scas
test
adc
rcr
dec
or
clc
xchg
mov
test
fiaddl
jmp
imul
jl
rcll
jg
mov
andl
popa
aad
addl
cwtl
fucomip
or
push
xor
sub
aam
das
lret
sar
xor
pop
sub
or
push
imul
xchg
pop
jb
imul
adc
data16
lods
and
push
rclb
test
cmp
push
insl
lret
xchg
repnz
lahf
test
lret
jecxz
ss
mov
adc
lret
mov
fisttpll
push
jo
cld
lahf
lea
lods
rolb
in
sub
cmp
cmp
jns
push
mov
cmpl
xchg
adc
enter
dec
jp
jecxz
gs
pop
repz
fisttps
fwait
xchg
repz
insb
sbb
popf
dec
inc
das
pop
dec
std
inc
add
sub
push
and
add
dec
out
mov
sbb
fists
imul
jmp
insl
mov
addr16
jns
pop
mov
add
mov
add
mov
in
addr16
or
fsubs
pop
andl
cmpsl
add
sbb
loope
ds
adc
leave
xorl
fwait
insb
mov
and
xor
cmp
and
inc
dec
push
dec
dec
push
or
pop
add
dec
dec
pop
call
and
mov
hlt
adc
lahf
inc
call
in
adc
jmp
mov
mov
shlb
sahf
mov
repnz
xchg
push
cmc
or
addr16
repz
or
into
sbb
test
lods
sub
pop
out
xchg
or
and
es
and
enter
addb
pop
xor
incb
jmp
dec
inc
xor
jge
das
add
or
addb
xchg
cmp
int3
adc
dec
dec
inc
popf
iret
aaa
and
xadd
and
xchg
mov
cmc
dec
test
or
mov
divl
arpl
push
pop
stos
rcl
es
fisubs
insb
jp
add
mov
adc
xor
sub
push
jl
xchg
jmp
xchg
into
jg
pushf
ss
or
testb
jmp
scas
or
jmp
repz
cmpsl
jle
cli
mov
out
mov
push
xor
mov
loop
pop
add
mov
mov
pop
pop
jge,pn
fsubs
je
hlt
inc
mov
repnz
add
mov
nop
xchg
push
cwtl
and
repz
mov
int3
shrb
push
push
xorl
adc
testb
xchg
mov
push
pop
out
das
ljmp
testl
sub
inc
loop
fs
dec
into
pop
addl
and
addr16
int
sbb
mov
in
lods
jno
dec
inc
add
add
jbe
lods
lcall
sbb
aad
dec
loope
push
mov
gs
cmp
mov
jb
dec
cld
and
addb
into
push
add
sub
je
push
jnp
movsl
mov
mov
or
dec
pop
in
adc
cmp
mov
xchg
sbb
loope
or
ja
push
lret
lods
mov
adc
dec
fnstsw
jp
mov
das
push
mov
xchg
sar
in
push
clc
mov
fcmovu
xor
sub
aad
subb
rcrl
iret
xchg
mov
inc
rorl
inc
aas
punpcklwd
dec
pop
xlat
and
jnp
jne
cltd
ret
pop
daa
jmp
cmp
sub
or
divl
fbld
loope
mov
mov
or
or
sub
and
and
sub
movsl
lcall
mov
fistl
pop
scas
push
mov
xor
sahf
add
xor
xchg
aad
adc
stos
dec
movsl
xchg
test
pop
fs
xchg
xorl
iret
mov
repnz
lret
sub
pop
xchg
pop
inc
mov
lcall
xor
pop
or
mov
push
cwtl
ss
loope
mov
imul
and
pusha
loop
fucomip
out
in
xchg
cli
sub
dec
ds
or
xchg
cmp
cs
enter
inc
fldenv
push
bswap
jns
xchg
mov
add
pop
jp
push
adc
dec
int3
stos
pop
mov
or
addr16
pop
sub
and
lea
xchg
mov
mov
in
and
push
popf
push
cmp
dec
dec
pop
ljmp
pop
xchg
idiv
popa
add
les
or
inc
push
cmp
xor
test
xor
icebp
inc
pop
aam
jmp
inc
jne
out
ret
out
dec
movsb
or
pop
pop
inc
mov
arpl
sbb
xchg
mov
dec
push
mov
mul
xchg
fdivs
aad
adc
pop
push
enter
push
push
ds
aam
scas
loope
gs
jmp
rep
cmpl
and
mov
shll
mov
ljmp
xchg
dec
sbb
fs
repnz
mov
cmpsl
cwtl
xor
cmp
cmp
xor
loopne
mov
cmpsl
clc
jae
pop
dec
sub
cli
jmp
pop
in
pop
insb
pop
or
mov
ljmp
cmp
lods
pusha
cmp
pop
sbb
fisubrs
adc
popf
sub
frstor
xor
lds
es
jl
jecxz
test
filds
arpl
sarb
repnz
jp
dec
and
mov
imul
loopne
repnz
adc
mov
inc
repz
dec
cbtw
inc
inc
push
jno
mov
adc
mov
je
xchg
sub
ljmp
xchg
jg
or
inc
and
cmp
sbb
mov
add
clc
jbe
pop
mov
enter
into
jle
cmp
xchg
jmp
stc
mov
dec
xchg
push
xor
shlb
adc
adc
movsb
shr
push
jg
xchg
in
jge
or
pop
xchg
in
cmp
or
mov
sbb
lods
mov
mov
sub
cmp
enterw
lds
cmovge
dec
jge
data16
xor
arpl
pushf
dec
mov
xor
lods
and
push
push
das
adc
add
test
stos
cs
std
or
dec
mov
cmp
push
dec
fcmovne
mov
mov
mov
and
jb
mov
test
repnz
mov
xlat
lods
ss
hlt
xchg
adc
push
push
push
sbb
dec
imul
or
cmpsl
xchg
rol
push
mov
or
loope,pt
inc
xor
mov
push
adc
xchg
jns
daa
cli
fsubl
gs
pop
jg
dec
mov
dec
fnstenv
mov
mov
inc
mov
add
scas
lret
inc
loop
in
sbb
imul
mov
addb
mov
mov
bt
sub
lods
adcl
lock
push
cs
loopne
loop
outsl
std
hlt
andl
and
xor
rep
xchg
jno
cld
scas
sub
lods
gs
dec
mov
mov
sub
popa
pop
mov
push
cmp
sub
mov
and
mov
out
mov
mov
or
idiv
mov
cltd
ljmp
sbb
out
sbb
jno
or
inc
pop
sbb
xor
adc
push
aam
mov
ss
js
movsl
test
das
inc
or
rcll
xchg
xchg
cld
inc
jbe
out
or
adc
out
stos
out
and
push
sub
jnp
pop
jb
call
ret
xor
pop
fdivrs
dec
cltd
xchg
dec
pop
mov
icebp
pop
jne
dec
push
fwait
lahf
pop
idivb
cmpsb
sub
jno
push
stc
adc
fildll
test
jl
jno
insb
inc
cmp
inc
jbe
mov
test
fstpt
aad
mov
int
out
or
mov
and
mov
scas
jo
nop
jge
mov
into
shll
add
ds
fs
ret
mov
dec
lods
push
jp
mov
clc
repz
lods
mov
outsl
das
mov
shrb
mov
addb
lcall
aam
jbe
inc
stos
mov
jb
inc
dec
jg
ret
enter
sub
push
ljmp
pusha
pop
iret
aad
pop
jmp
xchg
into
mov
or
outsl
jp
mov
or
aaa
std
xor
shlb
fs
adcb
mov
sahf
aam
lahf
mov
in
test
andl
sbb
int
push
les
lret
movsb
pop
inc
ret
lea
frstor
pop
adc
nop
cmp
pop
bound
je
jge
rcrl
dec
insb
int
stos
cmp
jbe
dec
adc
stos
add
pop
push
jecxz
sub
mov
mov
loopne
or
or
test
out
jns
rorb
or
xor
or
or
xchg
xor
xchg
stos
jg
pop
rorb
mov
xchg
aam
movsl
adc
imul
jns
xchg
stos
lock
jmp
data16
sbb
xor
sbb
push
imul
sub
arpl
cmpsl
bound
xchg
ds
cld
popa
xchg
sub
sbb
add
ds
aad
jne
cmpsl
xchg
std
pop
gs
sti
out
aaa
ret
adc
add
test
mov
loopne
mov
pop
push
xor
xchg
mov
dec
pop
test
jmp
jno
imul
aas
insb
adcb
out
inc
pop
inc
xor
cli
cmpsb
aad
inc
ret
push
jg
and
xor
mov
scas
shrl
cltd
xchg
jne
movsl
testl
xchg
mov
push
mov
sahf
jnp
dec
or
sub
jg
pusha
cmp
pop
ds
fsubrs
add
xchg
mov
clc
rcrl
cli
sub
enter
push
inc
xchg
cmp
hlt
mov
push
pop
mov
and
cmc
inc
stos
nopl
xchg
sbb
jo
and
andl
lods
idivl
xor
sbb
add
out
mov
stos
clc
or
mov
fnsave
sub
cmp
push
test
push
adc
xor
pop
push
arpl
dec
bound
push
cmp
dec
adc
lea
addl
cld
dec
dec
cmp
sbb
xor
mov
or
lods
mov
out
ljmp
inc
dec
and
cmpsb
cmp
jg
jno
mov
xchg
stc
lret
fcomps
and
stos
mov
dec
or
sub
or
les
and
roll
cmp
out
sbb
sbb
fcmovbe
sbb
dec
out
cmc
pop
fbld
movsl
add
jmp
mov
out
movsb
in
inc
mov
fdivl
push
lds
sub
ja
mov
pop
xchg
cmp
sub
aaa
orb
or
out
jno
xor
hlt
popa
in
into
mov
scas
pop
shl
cmp
mov
mov
mov
gs
sub
cltd
xorl
pop
mov
outsl
out
out
and
notl
adc
rcrb
mov
adcl
xchg
lahf
fs
push
leave
inc
scas
rclb
sbb
adc
call
mov
add
mov
hlt
fistpl
adc
mov
ret
push
and
sub
inc
or
ljmp
dec
xor
push
inc
or
jb
xor
lods
add
rolb
loope
or
int
mov
pmullw
and
cmp
rorb
movsb
aas
push
lahf
ret
mov
pop
inc
pop
push
dec
adc
xchg
icebp
shlb
rcr
mov
out
aam
mov
cmp
push
leave
shlb
and
daa
scas
cld
pusha
jmp
ficomps
sbb
or
jns
dec
shll
popf
imul
mov
and
add
repnz
cld
add
xor
dec
sub
sbb
cmovs
cwtl
push
in
sbb
mov
or
pop
icebp
mov
mov
aam
test
aas
gs
mov
das
test
cmp
adcl
ss
or
or
mov
sub
ror
iret
scas
cmpsl
pop
movsl
jge
fidivrl
incl
repnz
pop
dec
movsb
mov
jb
xchg
std
or
test
pop
cld
sub
dec
xchg
ror
jg
push
cwtl
cmp
cld
cmp
lock
sbb
imul
fsubrs
cmp
ds
imul
push
ret
dec
inc
int
xchg
adc
call
pop
dec
lea
xor
xor
ja
adc
lahf
stos
xor
mov
sub
sbb
xchg
pop
dec
cs
test
mov
or
inc
cmpsb
mov
pop
mov
pop
int3
adc
fists
mov
les
iret
sub
shll
and
xchg
insl
push
js
das
push
push
shl
mov
js
push
and
repz
out
mov
fs
mov
sub
xchg
mov
jle
loope
imul
frstor
pop
pop
mov
lcall
xchg
outsb
scas
sbb
repnz
cltd
pop
out
lahf
jmp
arpl
push
dec
dec
iret
add
movsl
add
mov
inc
sbb
dec
sbb
js
inc
sub
out
cmpsl
addl
xor
mov
and
cs
in
test
loop
or
cmp
push
xor
mov
lods
lds
pop
add
push
and
xchg
adc
test
subb
ficoml
dec
mov
lcall
sti
pop
push
push
insb
xchg
outsb
adc
out
loope
inc
jge
cld
aas
push
int
push
push
hlt
stos
mov
fidivrs
or
movsb
dec
loopne
xor
lods
push
and
mov
and
movl
xor
and
sub
pop
loope
and
cmpsl
or
fincstp
popa
dec
scas
in
mov
or
xchg
dec
nop
mov
les
std
push
mov
sbb
cmpsb
es
hlt
or
jmp
pop
addr16
jae
outsb
push
xchg
and
pop
adcb
test
add
inc
mov
pop
sbb
push
or
add
leave
ficomps
mov
fdivs
sub
out
xchg
mov
push
outsl
xchg
cmp
test
push
cmp
cmc
mov
mov
loope
enter
cmp
sbb
hlt
and
sbb
adc
push
sub
sbb
imul
out
jl
addr16
ret
leave
push
mov
mov
es
pcmpeqd
xchg
pop
mov
mov
sbb
pop
xor
pop
and
sub
xchg
jl
sbb
or
out
fistl
movsl
jns
inc
xorl
rcr
gs
lret
jmp
xor
xor
mov
jo
xor
mov
or
lods
pop
rorl
neg
mov
fistl
xlat
mov
clc
xchg
addr16
int3
fistps
fidivrl
aaa
or
mov
push
imulb
shll
into
fildll
repz
daa
js
pop
rcl
adc
xor
pop
aaa
push
call
lret
xlat
dec
negb
fnstcw
lret
nop
mov
shlb
xor
ret
adc
out
ret
push
xchg
add
mov
das
mov
inc
daa
popa
sub
cmovae
mov
sub
pop
ljmp
sub
cmpsb
or
jl
lcall
outsl
dec
pop
jno
mov
mov
mov
test
or
cmp
movb
jp
popa
sbbl
adc
jae
lcall
out
daa
lds
mov
add
mov
imulb
push
loope
push
int3
rorl
cs
call
aas
mov
iret
addr16
sub
rclb
or
out
add
jnp
pop
lods
sub
mov
popa
sub
mov
fs
xchg
jnp
dec
inc
jle
push
dec
mov
pop
and
inc
jo
ds
mov
pop
into
adc
in
push
sbbl
dec
mov
push
jbe
fwait
jae
outsb
pop
adc
add
outsb
inc
mov
lods
inc
rcll
bound
leave
aad
pop
dec
cwtl
adc
and
data16
mov
enter
jno
int3
outsl
push
out
sbb
mov
jg
xor
mov
sub
fs
cld
stc
xlat
lods
pusha
push
daa
mov
inc
inc
jmp
cli
adc
jo
xchg
dec
decb
fists
adc
repz
shll
pop
fdivrs
pop
inc
cmp
mov
int3
or
jne
add
jg
lock
push
daa
jl
mov
lods
sub
nop
cmpsl
or
add
jg
ret
cmp
mov
xor
cmp
scas
int
ficoml
or
mov
cli
ja
int3
cli
out
stc
sbb
fisubrl
add
add
jecxz
std
pop
or
and
sub
ja
and
sbb
fs
pop
adc
aam
pusha
add
loop
je
fs
arpl
sbb
add
pop
xchg
mov
aam
cmp
arpl
dec
rorb
dec
outsl
xchg
shl
fwait
xchg
ja
mov
stos
sar
dec
pop
cmp
xchg
pop
aam
xor
call
daa
sahf
shl
xchg
xchg
sahf
xor
cmp
cwtl
sub
adc
testb
or
xor
rorl
ret
xlat
cmp
push
jp
adc
push
aaa
jo
aam
in
xchg
inc
les
repz
inc
std
mov
sbb
mov
pop
daa
loop
imul
sbb
outsl
iret
lds
add
lods
sub
pop
and
shrl
push
mov
pop
adc
xlat
test
mov
insl
fwait
jecxz
mov
mov
inc
dec
sbb
jmp
mov
jecxz
das
or
pop
and
add
gs
mov
sub
push
and
mov
jns
and
add
add
push
popf
int3
idivb
icebp
mov
push
or
sub
jae
out
dec
loop
inc
mov
in
into
fcompl
shr
cmp
int
stos
aas
xchg
push
or
push
nop
sbb
dec
add
outsb
pop
sbbl
lahf
jp
xor
mov
jo
popf
loop
adc
fcompp
fnstsw
mov
daa
mov
jl
std
sbbl
adc
lahf
cs
lds
xchg
in
mov
andb
lret
push
cltd
repz
or
loop
in
or
and
test
cld
mov
xor
cmp
xor
fstpt
je
cwtl
jnp
push
add
paddsb
sub
outsl
mov
pop
scas
lods
aaa
xchg
mov
inc
push
negl
nop
insb
pop
cld
rolb
mov
shl
dec
imul
dec
adc
mov
xor
mov
pushf
xchg
mov
push
jle
and
or
mov
jns
pop
sub
pop
jl
inc
push
cmp
lods
leave
push
das
sub
push
lret
mov
mov
add
cli
into
pop
jne
add
adc
push
push
inc
xor
add
xchg
test
and
pop
mov
loope
lea
adc
xchg
mov
incl
and
into
test
and
int
int
xor
adc
add
xor
sbb
jecxz
jl
notb
sbb
lds
shl
ret
sub
leave
pop
out
aam
sbb
icebp
out
into
out
xor
cld
and
jecxz
fnstenv
add
in
add
cmp
dec
sbb
jmp
cmp
pop
push
sbb
push
inc
mov
mov
fimull
xor
add
cmpb
push
sahf
shrb
mov
lods
cmpsb
sub
xor
mov
dec
or
outsl
in
fstl
lods
cmc
icebp
xor
stos
test
into
outsl
test
sub
testb
jg
xor
cmc
cld
test
std
loopne
push
cwtl
mov
inc
mov
add
fists
cmpsb
es
je
fsub
or
movsl
sbb
pop
dec
lds
lock
pop
xchg
loop
movsb
pop
add
sub
ljmp
and
mov
jge
pop
push
fsubs
push
or
sti
gs
stc
push
bound
jg
and
rcrb
lods
mov
mov
adcl
pop
testl
jno
ret
cmp
jbe
pusha
push
enter
adc
daa
pop
gs
add
cs
cmp
add
mov
xlat
cs
push
sbb
xor
stos
or
xor
movsl
xlat
fs
pop
in
push
nop
xchg
push
pop
cs
in
or
adc
and
mov
jl
adc
pop
cld
call
inc
arpl
enter
xchg
sub
mov
ret
in
sti
mov
shrl
add
add
xor
lods
adc
ficoms
push
scas
iret
lods
pop
ret
xchg
add
aaa
sbb
cmp
mov
cmp
fucomp
fidivs
push
mov
cmpsb
jge
mov
cmp
xchg
sbb
sbb
lods
cs
test
cmpsl
lods
push
pop
dec
in
sbb
stos
sbbb
dec
inc
inc
or
push
daa
ror
imul
sub
data16
shlb
cltd
lods
push
cmpsl
jle
and
rcr
xchg
push
ds
pop
xor
sub
push
ss
xor
mov
sbb
clc
fldt
xor
inc
mov
mov
std
cmc
mov
int3
fcoml
mov
push
pushf
xchg
push
cmpsb
sahf
mov
or
js
mov
arpl
and
fld
cmp
loope
testl
and
stos
and
cmp
shll
push
inc
fwait
pop
repnz
xchg
pop
shll
ljmp
movl
and
dec
pusha
leave
jae
mov
aam
adc
jns
sbb
jg
ljmp
dec
and
cmp
fdivrl
out
inc
pop
mov
cs
sub
dec
cltd
enter
cmp
and
push
jno
cmp
scas
push
repz
jnp
fbstp
dec
insb
push
xor
pop
shll
test
in
mov
aas
ja
mulb
inc
les
sub
push
adc
or
pop
sbb
mov
call
adc
jns
loope
xchg
lcall
enter
inc
lock
int3
fsubr
fdivl
movsb
cmp
xchg
mov
mov
push
xor
xchg
mov
sub
inc
pop
and
add
cs
pop
fdivp
arpl
out
and
mov
adc
scas
repnz
test
aas
xchg
xor
test
xor
cs
sti
repz
push
lcall
sbbl
repz
leave
aaa
rcll
cmp
jbe
out
sbb
gs
push
mov
notb
cwtl
jno
dec
dec
sub
fisubrs
cmpl
ret
arpl
jp
addb
into
sbb
mov
dec
ret
xchg
xor
ja
jmp
push
jg
testl
inc
and
xor
inc
xchg
pusha
in
and
mov
popa
arpl
data16
xchg
push
mov
or
cmpsb
or
mov
mov
fstl
daa
scas
out
out
push
adc
pop
sub
test
mov
jecxz
push
popf
in
arpl
cmp
das
xchg
sub
testb
movl
push
and
mov
mov
mov
int3
fs
fidivrs
in
mov
stc
push
cmp
mov
movsb
mov
std
les
mov
xor
jmp
aad
push
xchg
add
sti
mov
dec
jbe
sbb
mov
sbb
scas
jg
leave
push
out
iret
ds
xlat
xlat
xor
cmpb
cmp
xchg
loopne
or
xor
add
loope
xor
clc
push
cmp
or
negb
std
xor
shlb
add
dec
ljmp
es
mov
das
mov
adc
xor
fldcw
dec
mov
xlat
push
jge
mov
lahf
xchg
mov
inc
imul
cmpsb
cs
jnp
test
lahf
push
std
pop
and
or
add
lods
dec
in
stos
inc
sub
dec
and
lea
outsl
pop
popf
sub
enter
fcomps
sub
dec
mov
jbe
insl
jecxz
ret
sbb
stc
xor
xchg
mov
dec
or
mov
pop
push
das
inc
sbb
push
testl
or
add
dec
lret
cwtl
insb
fwait
out
lret
xchg
fmull
dec
xchg
std
in
das
pop
mov
mov
dec
inc
cs
ja
mov
sub
inc
dec
pushl
sbb
and
pop
mov
push
arpl
sub
pop
jno
push
push
je
enter
push
lcall
mov
mov
inc
xchg
mov
add
dec
inc
pop
daa
push
shrl
in
xchg
jecxz
out
hlt
sbb
aas
jnp
stc
and
cmpsl
cmpsl
push
add
mov
mov
scas
mov
into
push
popa
movsl
push
jl
mov
mov
daa
jg
sahf
test
loope
sarl
js
add
push
mov
pop
cs
push
in
lods
cmpsb
sarl
imul
insb
add
pop
scas
das
push
push
xor
inc
mov
aam
std
in
pushf
aaa
dec
mov
daa
loope
xchg
or
loopne
mov
adc
js
dec
xor
mov
repz
stc
ds
sbb
dec
je
andl
aaa
push
push
incb
jp
mov
adc
mov
fisttps
js
xor
addl
sahf
sbb
loopne
xchg
testl
sub
mov
mov
insb
lock
mov
lret
inc
or
cmp
stos
sbb
xor
mov
and
jns
outsl
sbb
xchg
addr16
inc
cmp
in
mov
int3
mov
jne
shrb
jle
cmpsl
and
adcl
add
xor
leave
push
shrl
jnp
das
jmp
mov
push
shl
adc
mov
rolb
jge
lea
sbb
jae
mov
jmp
jne
push
push
cmp
dec
mov
mov
test
mov
mov
sub
inc
xor
int
push
sub
pushw
jb
rolb
mov
sbb
jecxz
mov
mov
add
cmpsl
lcall
dec
xor
adc
mov
inc
jo
repnz
std
insl
rorb
cmpb
mov
je
add
sbb
jge
adc
add
shlb
sarb
call
adc
scas
stos
sahf
enter
xchg
loop
fcomip
test
out
push
std
mov
daa
and
xchg
or
add
sub
sbb
mov
or
mov
pop
shll
fidivrl
mov
stos
sti
cmp
mov
push
mov
insb
ds
sbb
mov
cmp
add
pop
test
aas
imul
cmp
xor
aam
ret
ja
and
mov
push
aaa
add
or
dec
cmc
jno
sbb
jnp
and
lock
xor
arpl
sbb
and
sbb
mov
inc
dec
mov
add
or
mov
mov
test
pop
and
mov
or
jns
xor
aaa
pop
fwait
jecxz
enter
push
xor
enter
movsb
xor
or
scas
jge
out
les
lock
pop
mov
adc
jb
test
leave
sub
pop
call
xor
test
dec
lea
sbb
push
cwtl
mov
aam
arpl
fbld
adc
lcall
and
adc
adc
or
push
stc
push
mov
lret
dec
cmp
xor
xchg
cmp
adc
lods
insb
dec
mov
pop
jmp
mov
jg
xor
xor
xchg
jg
mov
fmul
xchg
push
jl
inc
push
icebp
inc
cmp
or
pop
dec
cmc
sti
inc
rcrl
pop
idivb
pop
sub
mov
sbb
sbb
lret
cmp
ja
dec
lea
daa
push
mov
es
test
stos
clc
int3
out
cmp
jbe
sbb
fidivrs
add
jecxz
imul
xor
cmpb
stos
pop
out
in
adc
jnp
mov
push
pop
orl
mov
lods
stos
sub
mov
inc
inc
lock
cmc
lret
dec
pop
pop
add
cmp
call
aad
mov
stc
fbld
das
stos
xchg
arpl
in
call
and
xor
dec
fadd
jo
mov
pop
pop
lds
add
test
mov
ret
dec
mov
roll
cmc
adc
xchg
push
sahf
lods
inc
outsb
bound
xchg
cltd
dec
js
call
rorl
add
mov
ja
cltd
repnz
xor
out
add
pop
test
adc
cmp
adc
mov
xchg
es
ds
adc
xor
mov
stos
je
push
add
repnz
pop
ret
into
jo
mov
add
mov
or
mov
sbb
mov
in
rolb
cmp
rorb
mov
cmp
xchg
popa
xchg
stos
cmp
cli
in
and
adc
cmp
bound
push
cmp
cltd
ret
adc
pop
cld
inc
mov
outsl
in
sub
mov
push
xchg
clc
or
dec
gs
daa
into
dec
fdivs
mov
lock
push
les
pop
pop
inc
inc
in
fdivrl
mov
ja
mov
push
sub
sub
test
inc
loopne
sub
fiaddl
add
aaa
dec
push
popa
scas
ja
clc
xor
in
ljmp
jb
or
into
xchg
ds
add
sub
das
jno
mov
enter
mov
inc
fs
cs
add
call
push
iret
sarl
sahf
sbb
mov
insb
xor
push
jg
mov
mov
imul
dec
and
cmp
inc
sub
mov
mov
inc
xlat
pusha
jg
mov
mov
sbb
or
cmc
mov
push
fcomi
mov
mov
mov
insb
xor
insb
mov
in
mov
jno
or
or
fs
fnstenv
sub
mov
mov
adc
mov
sub
push
jge
pop
fisttpl
js
pushf
lahf
push
mov
cmp
ds
and
sbb
xor
xchg
pop
jnp
out
mov
mov
lret
mov
mov
adcl
andb
arpl
and
jl
scas
sbb
jne
or
mov
test
adc
mov
xchg
push
insb
nop
ficompl
push
fidivl
test
dec
adcl
into
arpl
lcall
test
fs
mov
or
cmpsl
movsb
fwait
cmp
in
ret
pop
out
sub
pop
cmp
mov
hlt
push
ljmp
dec
inc
ret
rol
adc
data16
cmpsb
mov
sub
loope
dec
push
inc
jl
push
sahf
or
in
jns
test
lods
add
stos
sub
andl
mov
or
mov
aaa
int3
or
jmp
es
ret
roll
xchg
xchg
js
push
mov
push
rcrb
jl
ret
mov
sbb
in
in
jnp
nop
gs
add
in
dec
mov
flds
xor
jbe
jmp
jle
movsb
scas
jp
mov
cmp
push
ds
dec
mov
pusha
hlt
nop
test
mov
adc
push
lea
shll
leave
divb
and
test
push
or
sbb
fisubrs
addr16
xlat
lret
dec
or
push
mov
sub
add
xchg
jne
dec
sbb
adc
or
shlb
inc
scas
ja
xchg
inc
hlt
jnp
sbb
push
and
mov
ret
test
cmp
inc
jbe
sub
dec
sub
xor
add
cltd
and
mov
aaa
leave
movsb
orl
ficoms
mov
lea
jo
sti
shrl
imul
test
push
mov
push
xor
sbb
pushf
xor
dec
sub
sarl
rcll
lds
dec
fwait
pop
push
leave
lea
jnp
mov
jo
mov
out
lods
sarl
mov
xchg
add
pusha
ss
mov
adc
outsl
shlb
pop
mov
int
loope
int3
lea
mov
fcomps
sbb
xorl
or
pop
adc
ljmp
cwtl
inc
pop
lret
sub
sti
enter
or
test
hlt
jne
ljmp
push
mov
sub
es
rcl
fcmovne
mov
inc
cld
movsl
pop
sub
jp
cmc
push
loope
repnz
push
and
movsb
sub
jnp
movsl
inc
shll
xchg
add
cmp
xor
pop
aaa
jg
sti
push
mov
pop
insb
mov
add
sub
fmull
inc
mov
mov
jnp
jo
cmp
jo
arpl
aaa
aas
outsb
pop
and
mov
cmc
ret
jae
aam
xor
xor
add
rcpps
popf
fs
jbe
ret
insl
lret
sbb
and
in
pop
pop
xchg
mov
jecxz
gs
inc
lods
ror
pop
repz
dec
push
cmp
jbe
into
push
fsubr
adc
ficoml
or
and
mov
ja
je
stos
cmp
xchg
out
clc
pop
faddl
push
adc
and
in
dec
incl
cmp
sub
loope
loopne
sub
cmp
mov
push
and
mov
cmpsl
repnz
lret
vcvtdq2pd
mov
fs
cmp
mov
dec
xor
cmp
push
imul
mov
cltd
and
or
xchg
push
icebp
pop
xor
cwtl
cwtl
lds
fimull
out
outsl
jle
jns
add
popa
mov
ret
adc
push
lcall
lret
ljmp
add
loope
and
int3
xorl
cmpsb
repnz
push
push
sub
mov
mov
mov
in
movsl
or
add
out
and
mov
mov
pusha
arpl
dec
dec
sbb
imul
pop
pop
repz
cmp
jecxz
jae
icebp
aas
and
ds
bound
mov
xor
rolb
jp
add
fs
hlt
out
push
mov
inc
ror
fs
jge
ret
adcb
in
dec
push
outsl
cltd
popa
mov
out
or
pushf
imulb
aam
or
adc
sahf
add
or
cmpsb
xor
or
fdivr
cwtl
dec
mov
and
jnp
js
push
inc
cwtl
mov
xchg
push
ret
mov
imul
cmp
dec
in
sarl
mov
data16
sbb
push
orb
xchg
xchg
xor
pop
imul
nop
xor
lret
stos
push
test
mov
insl
and
mov
scas
pop
jnp
mov
add
divl
inc
dec
int3
gs
push
push
pusha
jns
imulb
and
mov
push
test
lods
stc
repz
jmp
sbb
jmp
andl
bound
subb
pushf
cmp
cli
sbb
add
mov
inc
stos
orb
out
adc
push
mov
gs
xor
jp
adc
push
mov
jns
pop
shrb
loope
mov
in
xor
insl
pop
jo
mov
sub
pop
jge
fbstp
clc
fmull
clc
push
mov
mov
jle
outsl
hlt
lret
lock
andb
sbb
ljmp
xchg
notl
and
push
pop
daa
and
lret
push
dec
xchg
imul
cmp
xor
mov
pop
push
comiss
or
stc
scas
mov
cmpsl
mov
xchg
loop
nop
pop
mov
push
addr16
repz
dec
sbb
mov
cmp
mov
fsubs
fs
stos
jo
aaa
outsl
call
popa
stc
cs
mov
mov
lret
sbb
hlt
sub
shrl
sub
fmull
jne
fs
std
push
sub
fs
cs
ret
jg
lcall
mov
xchg
mov
cmp
cmpsl
inc
leave
adc
pop
jl
and
push
mov
or
and
and
je
cmpsl
inc
sahf
mov
aad
lret
test
out
dec
xchg
icebp
jecxz
in
cmp
mov
jmp
jne
in
and
sahf
fsubs
cmpb
sub
or
and
rcl
fsubl
loop
push
push
cmpb
xorl
sbb
or
mov
lret
xor
out
imul
dec
inc
mov
mov
addr16
xchg
out
lods
xor
inc
movups
add
jb
lods
outsb
xchg
out
push
push
into
fs
sub
icebp
push
scas
inc
inc
xor
cmpsb
pop
mov
test
or
icebp
push
mov
sarb
push
pop
lret
jne
sarb
mov
test
lret
imul
sub
jns
mov
push
xor
xor
sub
in
ja
sbb
jl
mul
aaa
testl
cmc
rorb
xlat
mov
aad
lcall
cmp
je
xchg
add
add
push
movsl
dec
mov
xor
jns
pop
fs
sbb
les
nop
cltd
mov
inc
jp
jecxz
lods
ja
jmp
leave
cwtl
mov
cmp
in
sub
lds
aad
scas
sbb
mov
sub
adc
daa
roll
cld
int
fcmovbe
pop
adc
cmp
jmp
lock
in
add
pop
lea
push
and
pop
insb
push
dec
sar
xorb
sahf
mov
leave
imul
sbb
dec
aas
movsb
add
jne
mov
and
push
ljmp
or
push
mov
mov
jp
loope
push
mov
iret
fisttpl
test
imul
das
js
stos
add
inc
and
je
int
aas
push
jge
das
std
xchg
mov
push
sub
test
push
jp
arpl
jne
sub
inc
popf
mov
fisubs
or
in
cwtl
pusha
cld
jb
insl
lea
into
cmp
jl
push
jae
mov
inc
lret
dec
xchg
fidivl
aaa
push
pusha
lcall
repnz
pop
cmp
sbb
inc
lock
mov
stc
stos
ret
cli
cs
outsl
sub
push
push
cmp
sahf
test
inc
out
js
pop
int
pop
lds
jl
jbe
push
pop
into
push
rcrb
mov
sbb
xor
js
sbbl
aam
out
sbb
gs
outsl
and
test
les
xor
mov
and
fstpl
xchg
mov
adc
mov
iret
int
jmp
mov
test
enter
icebp
enter
decl
out
push
mov
ss
mov
out
jecxz
lahf
sub
loope
loopne
adc
out
outsl
ret
cs
pusha
jb
inc
xor
xor
ds
xor
out
inc
int
mov
ds
idiv
sbb
push
add
cmpsl
push
aad
ret
dec
loop
enter
js
pop
cwtl
sub
xchg
insl
in
mov
pop
aaa
mov
mov
add
mov
stos
push
jecxz
js
mov
xor
mov
adc
imul
xorl
cmp
or
push
mov
call
loopne
push
dec
ret
xchg
jp
pop
aas
inc
cwtl
int
cmp
jmp
mov
push
and
inc
mov
outsb
pusha
popl
lret
adc
push
out
je
and
sub
jnp
adc
aaa
scas
popf
roll
push
sub
ret
xor
xchg
daa
mov
pop
sub
jl
xor
and
outsl
das
aas
xchg
xchg
sbb
sub
js
rcl
iret
cmp
inc
lret
lcall
lods
adc
sbb
gs
aaa
lret
pop
add
push
cmc
push
call
pusha
mov
jle
or
mov
aad
nop
test
pop
sub
in
int3
jo
mov
xchg
or
scas
adc
sbb
arpl
fcomi
out
mov
xor
mov
xor
sub
insb
fdivrp
sub
push
lret
push
cmc
popf
sub
inc
mov
sbb
bound
mov
sbb
sub
xor
or
mov
sbb
or
mov
das
cwtl
loope
jle
push
push
lds
sbb
scas
inc
jge
daa
int3
and
out
sbb
adc
xchg
iret
aam
and
mov
pop
sbb
push
cld
push
mov
xor
push
add
bnd
aaa
mov
push
jno
insb
xchg
aas
loopne
clc
or
mov
ljmp
mov
xor
dec
mov
or
jae
in
int3
mov
stc
mov
ja
dec
lods
scas
add
push
xchg
sub
sub
clc
insb
mov
jns
call
adc
add
scas
ja
xchg
sub
jae
ljmp
ja
bound
jae
mov
mov
push
mov
cmc
inc
test
cmp
xchg
xchg
cmp
test
xor
push
push
shr
inc
inc
test
push
sbb
adc
xchg
fs
dec
ss
and
arpl
pop
arpl
ret
lcall
xor
je
xchg
test
push
sub
inc
inc
mov
cli
adc
mov
jg
jb
mov
std
fwait
pop
or
mov
nop
fwait
test
mov
int
sbb
es
pop
xchg
in
sahf
js
mov
mov
lea
leave
mov
adc
dec
mov
push
and
inc
add
pop
sub
in
mov
push
je
and
push
cmp
pop
lcall
out
mov
je
push
mov
mov
mov
popf
sbb
sti
fidivl
rcrl
and
add
popa
mov
add
mov
xor
dec
sbb
in
cmp
popf
or
cmpl
mov
pushf
loop
pusha
push
dec
rcr
out
adc
xor
repz
adc
push
aas
xchg
push
scas
lahf
dec
push
pop
movsb
loope
fisubrl
into
pusha
call
stc
inc
xchg
aaa
jae
adc
pop
enter
lcall
push
sbb
popf
xor
and
cmpsl
outsb
lret
cmp
ljmp
test
mov
cmpsl
out
mov
adc
jne
test
ljmp
loopne
cmp
arpl
sub
inc
aaa
mov
stos
mov
mov
xchg
pop
push
jge
sbb
call
cmp
jno,pn
mov
inc
adc
push
and
in
jbe
pop
rorb
leave
xchg
out
dec
leave
mov
sub
pop
xchg
ljmp
jge
sti
mov
push
repz
js
sbb
or
push
dec
das
test
jno
outsb
pop
pop
sub
aad
addr16
gs
mov
nop
push
inc
or
sti
sarb
mov
std
es
out
cmp
add
inc
adcl
adc
imul
in
push
mov
push
rclb
inc
xorl
stc
xor
jo
daa
pop
xchg
scas
in
xor
pop
aad
movsb
hlt
jo
xchg
shlb
jnp
sub
pop
push
bound
cmp
and
sbb
mov
mov
mov
dec
add
xchg
mov
test
xor
mov
pop
fsubrs
mov
mov
out
shll
adc
es
dec
xchg
add
jmp
push
jecxz
fs
jo
fdivr
pop
jne
fldcw
jecxz
lret
cmp
filds
into
xchg
mov
sbb
test
push
cwtd
out
jb
out
movsb
jae
imull
fs
addr16
ja
sub
mov
sbb
jp
push
and
dec
jbe
sbb
test
cwtl
jnp
negb
jge
mov
sub
mov
shl
mov
and
xor
mov
mov
aas
mov
lock
cwtl
test
lds
ror
out
aaa
pop
pusha
adc
ret
ret
daa
adc
inc
jo
roll
lock
bound
xchg
push
add
movhps
ljmpw
repz
je
add
jle
scas
inc
int
inc
popa
cmc
sbb
push
ret
add
ljmp
les
shrb
int3
insb
mov
or
or
inc
les
dec
push
cmpsl
add
xchg
mov
out
imul
mov
jl
dec
inc
imul
mov
gs
iret
mov
inc
jbe
xchg
ror
adcb
outsb
adc
cmp
addr16
add
push
xor
repz
sub
ja
cmp
ljmp
push
pop
ret
xor
add
gs
das
mov
xor
jbe
xchg
test
cmp
jnp
adc
xor
cltd
daa
push
xchg
sbb
sti
mov
idivl
shll
or
and
xchg
sub
sbb
out
dec
mov
mov
and
cmp
push
xchg
mov
push
in
mov
js
dec
xchg
mov
or
filds
shll
jae
pop
pop
mov
test
fisttpl
cmp
leave
jmp
cmpsl
pop
sbb
push
cwtl
xor
jo
pusha
sbb
imul
cmp
in
xchg
mov
iret
fucomi
jmp
sbb
test
aas
or
inc
xchg
loopne
outsl
stos
in
es
or
jg
adc
mov
fisttpl
maxps
nop
and
int3
mov
sahf
icebp
popa
jp
mov
or
mov
ljmp
mov
repz
lods
and
outsl
push
or
or
inc
push
mov
loop
jns
insb
jns
mov
and
mov
lods
pushf
jp
push
dec
jmp
fs
mov
cmc
inc
ffreep
cmp
mov
push
fcompl
mov
cmp
das
jb
cmovae
xchg
scas
in
mov
outsl
pop
bound
pop
xor
movsb
adc
mov
insl
push
add
out
push
mov
loope
std
aaa
dec
pop
test
inc
mov
push
mov
stc
and
push
dec
or
and
pushf
rolb
into
lea
scas
mov
jmp
sti
pop
cmp
gs
dec
jle
stc
andb
push
ja
fs
jno
pop
mov
mov
mov
imul
and
add
add
mov
xchg
sti
clgi
fdivrl
mov
dec
das
fdivrs
or
fisttpll
pop
mov
mov
or
shlb
sub
jmp
or
add
pop
mov
scas
out
cmp
xor
loope
repz
loopne
loop
outsl
shlb
mov
testb
andb
mov
hlt
sub
mov
sbb
mov
lods
cmp
cmp
inc
inc
fists
xlat
adc
push
push
dec
xlat
xchg
out
mov
lock
cmp
mov
icebp
jne
inc
fdivrs
shr
jb
leave
aas
jne
push
loope
aad
add
jge
xor
dec
loope
mov
insl
call
jno
pop
jle
mov
fldl
test
fsts
sti
mov
inc
dec
cmp
bound
inc
imul
push
mov
inc
shlb
mov
mov
loop
jl
clc
sahf
int3
cmp
xor
dec
imul
ret
std
cmpsl
or
faddp
dec
push
mul
push
out
mov
sti
xor
test
aad
lock
push
rorb
push
clc
mov
pop
xor
testb
jmp
adc
xor
sbb
push
insl
inc
pop
dec
jge
pop
xchg
addr16
mov
push
inc
xor
add
jno
xchg
xchg
fstl
roll
repnz
push
adc
push
shlb
sbb
jnp
sbb
daa
inc
sbb
out
vcvtpd2psy
mov
out
cmp
fwait
cmp
into
xchg
sub
out
adc
xchg
ret
xor
out
dec
scas
xor
test
xchg
sti
jmp
pop
outsb
push
adc
xchg
sub
mov
orl
xor
mov
loopne
cltd
scas
sub
mov
lret
hlt
push
sbb
xchg
jbe
mov
sbb
xchg
sub
into
sbb
pop
ret
jg
fwait
and
xor
loope
dec
stos
mov
mov
fcmovnu
adc
movsb
xchg
jns
push
lahf
sbb
movsb
cltd
pop
gs
xchg
jns
iret
lahf
fistps
sbb
sbb
mov
shlb
fs
push
gs
cmpl
xchg
fstps
int
pusha
sbb
add
repnz
xor
pop
dec
sub
lahf
dec
jo
jle
sbb
jns
mov
repz
rcrb
add
push
fisttps
jp
dec
out
xchg
mov
jle
addb
mov
cmc
xor
clc
mov
das
push
push
jge
es
mov
inc
mov
pop
ja
std
mov
fistps
mov
loop
es
cli
dec
mov
int3
lds
jp
pop
shl
pop
outsl
sbb
orb
pusha
popa
addl
dec
cmp
test
loopne
push
xchg
je
arpl
outsb
cld
xchg
jbe
gs
lret
cmp
cmp
xchg
and
sub
sub
xchg
stos
adc
adc
leave
jne
subl
jle
dec
sub
sahf
lods
es
push
dec
int3
sub
xchg
sbbl
negb
loopne
sub
adc
adc
xorb
mov
cmp
push
call
pusha
fwait
lahf
adc
out
lret
mov
loope
dec
sahf
inc
add
sub
cmp
sbb
cltd
mov
and
xor
scas
data16
push
xor
cli
mov
mov
fldenv
dec
jno
stos
pop
repz
or
daa
push
dec
pop
or
xchg
adc
int
loop
pop
mov
pop
repnz
shr
cli
jp
mov
ret
cmc
lea
pop
cltd
jle
icebp
pop
out
cmc
lds
push
movsb
frstor
jo
divl
xchg
lcall
je
or
pop
push
push
insb
mov
pop
shlb
add
out
pusha
jl
jge
shrl
jne
sbb
mov
lea
pop
mov
inc
ret
popf
push
je
sti
addr16
inc
mov
jl
push
pop
and
hlt
pop
imul
fxtract
mov
aas
mov
push
sub
pop
add
jg
push
ljmp
pushf
pop
fisttps
dec
out
outsl
ss
and
cwtl
icebp
sbb
mov
dec
std
sub
sarl
js
pop
push
popf
mov
push
pop
and
lods
test
sbbb
cmpsb
dec
sbb
cld
sarl
sub
cmp
mov
daa
lds
xchg
pop
pop
mov
cli
leave
ljmp
pop
rcrl
test
xor
in
jbe
fwait
or
push
and
sbb
and
fdivs
in
sahf
xor
les
pop
testl
mov
mov
loopne
leave
lock
and
je
and
push
push
insb
sub
dec
mov
popa
jecxz
fdivl
scas
push
push
xchg
shrb
jge
ljmp
scas
dec
dec
sub
xchg
mov
scas
outsl
js
in
xchg
push
inc
adc
aad
pop
aam
ret
mov
pop
loopne
btc
js
in
enter
and
dec
scas
sbb
scas
jmp
xchg
hlt
repnz
push
dec
mov
in
mov
fs
repz
sub
dec
in
mov
daa
push
iret
mov
pop
lcall
xor
lahf
dec
in
push
push
in
dec
jo
mov
mov
test
pushf
adc
or
mov
mov
stc
andb
in
cltd
dec
test
cmp
enter
xlat
jb
mov
cltd
lods
add
mov
cmp
jae
test
out
dec
fcoml
ret
mov
mov
stos
adc
in
cmpb
dec
adc
out
clc
call
nop
lods
xchg
push
mov
test
or
xchg
push
xor
mov
fistpll
scas
adc
in
jmp
push
sbb
push
mov
dec
inc
sub
jl
lret
mov
push
mov
pop
imul
das
leave
xchg
lds
jl
jae
mov
xchg
shl
push
icebp
imul
pop
ss
mov
sbb
mov
daa
dec
sub
jl
pushf
mov
movsl
movsb
ss
faddl
jns
shlb
pop
add
inc
fildll
jl
dec
mov
mov
cmp
bound
js
and
ret
mov
add
sbb
nop
dec
lcall
arpl
push
fstl
test
call
mov
stc
fnop
sub
push
dec
push
call
push
sub
fwait
mov
insb
test
pop
inc
mov
cmc
xchg
in
mov
add
jnp
stc
xchg
lods
and
cmc
lods
xchg
in
pop
lret
imul
and
jns
cmpsb
negb
out
cmp
dec
sbbl
je
movsl
out
xchg
fs
int3
cmp
fistpll
popa
jmp
lods
or
pop
cltd
push
stc
pop
mov
out
mov
inc
pop
fucomip
mov
cmc
cmp
mov
fs
sbbl
push
out
mov
cmp
ss
arpl
arpl
or
push
in
movsl
in
stos
cmp
loopne
ja
cli
lcall
testl
mov
xchg
mov
mov
lahf
dec
push
cmpsl
push
and
out
insb
push
mov
xchg
jnp
inc
jg
xchg
mov
xlat
pusha
mov
icebp
mov
cmp
and
iret
es
xor
or
push
push
adc
outsl
movsl
cs
xor
scas
ret
add
repnz
or
fnsave
inc
data16
mov
jbe
sbb
fmull
xchg
push
iret
adcb
lret
jmp
repnz
cmpsb
addb
mov
addl
lods
sbb
mov
add
iret
dec
push
ljmp
fucom
decb
xor
cli
dec
out
push
outsb
mov
mov
stos
clc
push
ljmp
mov
stos
jnp
mov
lods
clc
jne
push
icebp
adc
pop
push
out
cmp
sbb
mov
adc
call
int
or
cli
aaa
mov
out
mov
xlat
insl
lret
mov
pop
inc
and
mov
je
xchg
int
push
mov
pop
mov
and
cli
cmp
jge
or
xchg
mov
push
std
add
sahf
loopne
mov
push
cmc
insb
gs
inc
mov
and
clc
inc
pop
lock
fs
aaa
xchg
pushf
outsl
and
popa
push
cmp
push
rcrl
test
and
imul
mov
mov
cltd
push
cmp
push
aas
lods
fdivr
sub
sub
cmpsl
cmp
out
out
cltd
mov
add
xchg
imul
aad
hlt
fisubrs
sbb
int3
dec
xchg
ljmp
ljmp
mov
fsubs
jmp
imul
push
inc
dec
xchg
rcrb
rorb
ja
pop
out
in
pop
loopne
and
jg
mov
mov
mov
outsb
cltd
arpl
mov
ljmp
mov
fstps
sarl
bswap
cld
push
dec
inc
mov
and
adc
adc
aaa
adc
int
jne
je
lret
jbe
popf
xor
test
data16
out
cmp
push
inc
aas
sarb
ds
test
cmpsl
xchg
ss
xor
xor
cwtl
shrb
sub
ret
scas
in
mov
movsb
push
shrl
sub
iret
out
inc
mov
mov
mov
xchg
test
cld
xchg
jno
in
ljmp
sbb
cli
negl
lods
mov
xchg
repnz
or
bound
jbe
jg
aaa
and
ds
js
sub
and
out
mov
inc
in
or
test
roll
xchg
je
adc
jge
pop
cli
out
mov
xor
mov
xor
and
negl
fistpl
push
fmulp
cmp
pop
mov
loope
mov
addr16
aad
mov
jge
push
pop
dec
mov
rcll
xor
pop
dec
rorb
pushf
nop
mov
fdivrp
loop
sbb
mov
sub
cmp
push
test
mov
pop
pop
ds
dec
lea
in
test
mov
rcll
xchg
xchg
adc
mov
sbbb
xchg
sbb
test
sti
jns
inc
dec
mov
fucomp
addl
add
insl
ss
mov
sbb
and
push
or
pop
cmpl
into
dec
mov
sub
xor
loope
mov
or
je
movsl
movl
cmp
mov
sbb
ss
add
jecxz
cli
xor
mov
mov
xchg
outsb
push
repz
sub
repnz
push
sub
push
mov
adc
cmp
stc
jb
xchg
jg
aas
pushf
dec
sbb
aaa
inc
out
inc
inc
or
jmp
rcrl
sbb
mov
ja
dec
aas
inc
push
repz
fnstenv
add
out
inc
outsl
lret
xchg
ljmp
addb
sub
jp
bound
fidivrs
shlb
loopne
inc
fstpl
in
scas
push
xor
pop
leave
movsb
push
mov
lahf
mov
insl
sub
xlat
cmp
sub
xchg
js
push
jns
dec
movsb
aaa
movsl
mov
xor
sub
and
jmp
pop
fldl
sti
jns
mov
aam
and
xchg
jns
fprem1
loop
out
mov
adc
sbb
stc
scas
inc
outsb
cmc
pop
ret
add
mov
push
push
push
scas
pop
mov
sarb
and
xor
jno
or
xor
divl
adc
inc
pop
dec
xchg
flds
push
in
ja
imul
mov
cwtl
lret
loop
stos
pop
xchg
push
cmpsl
into
xchg
lea
pop
je
dec
and
inc
mov
xchg
cmpb
dec
sahf
dec
test
dec
lahf
xchg
inc
jbe
mov
aam
or
add
hlt
ret
js
cmp
cmpxchg
mov
inc
sahf
rcr
jp
test
and
xor
shr
lods
lds
loop
out
jne
sbb
and
popf
out
in
and
mov
outsb
sub
negb
jae
cld
xchg
jne
push
jmp
pop
ljmp
insb
cmp
xchg
mov
cmpsb
and
lods
idiv
sarb
adc
and
push
jb
inc
rcrb
pop
insl
icebp
test
loop
fdivrs
and
sub
inc
testb
addps
cld
insb
and
push
adc
mov
movsb
rcrl
out
ret
jecxz
mov
xlat
loop
push
ds
ds
lret
and
in
inc
outsl
bnd
mov
adc
mov
sbb
pop
mov
pushf
push
adc
dec
mov
jns
pop
rclb
sub
outsl
mov
rclb
mov
mov
jle
std
call
jg
or
xor
in
cmp
lds
pop
push
sbb
jp
dec
push
pop
sub
or
and
sbbl
and
dec
sarb
adc
mov
pop
fcoml
ss
push
pop
push
pushf
das
add
mov
sbb
mov
jne
xchg
push
cmp
mov
push
ss
xor
mov
test
and
or
push
roll
pop
test
in
call
push
insl
out
mov
sub
pop
push
imul
push
orb
pop
inc
add
loope
mov
push
lds
xor
push
lds
push
or
sub
mov
push
out
outsl
jg
jge
pop
addr16
mov
test
insb
sarl
imul
das
imul
es
popa
imul
mov
push
ja
and
inc
das
std
xchg
mov
jge
cmp
cmpsb
lahf
fcomps
call
data16
and
in
imul
push
mov
cld
xchg
mov
out
jnp
sbb
fldcw
imul
jp
out
pop
pop
js
jecxz
test
pop
fstsw
cmpsl
outsl
cmpsb
psubb
call
mov
or
inc
cwtl
jle
xor
test
jle
enter
cmp
cmpb
cmpl
shlb
cmp
jbe
mov
orps
inc
fcomps
rcrb
enter
stos
stos
icebp
push
outsl
repz
pop
add
mov
cwtl
jge
dec
in
js
adc
sbb
adc
jns
cmp
or
pop
mov
in
push
shlb
mov
jno
mov
into
mov
cmpl
std
shr
jae
shrl
sbb
xchg
rcrb
inc
les
das
xchg
adc
cmp
popa
leave
cmpsb
insl
mov
mov
xor
fistpl
or
cmc
push
or
dec
fwait
into
sub
sub
adc
cmp
cmc
das
test
mov
das
dec
ret
or
push
jp
shrl
clc
push
mov
ja
push
lock
addr16
add
sbb
and
mov
lret
lods
lds
push
pop
sbb
fwait
dec
mov
hlt
mov
cmpsb
pop
add
lods
jmp
jne
aaa
add
daa
sub
out
inc
test
mov
int3
inc
pop
jmp
pop
and
xor
and
adc
inc
and
mov
imul
jecxz
lods
lock
adc
fwait
lock
aam
and
lret
into
cmp
cld
jge
cmp
inc
pop
mov
push
xchg
jae
aam
mov
sbb
das
pop
jbe
mov
jle
mov
xchg
sbb
cmp
cld
mov
sub
mov
dec
ficomps
test
cmpl
test
fisubs
adc
outsl
or
fdivrs
mov
cld
pop
movsb
adc
hlt
testl
pop
jp
sbb
mov
push
repnz
mov
roll
stos
mov
ja
pop
mov
inc
jne
call
cld
es
cmp
lcall
in
jbe
mov
rcrb
stos
or
jp
fcompp
testl
js
sub
call
jp
aad
jbe
imul
iret
push
jge
test
adc
movsl
inc
dec
jne
fucomp
sub
pop
mov
rol
xchg
dec
and
mov
add
or
mov
sub
aam
leave
jbe
loop
and
mov
test
mov
and
mov
mov
adc
sub
xchg
cmpsb
pop
cld
jle
inc
lea
dec
mulb
push
notb
imul
mov
jg
shr
in
movsb
clc
inc
inc
xor
push
jns
push
add
xchg
dec
insb
xchg
jg
add
outsl
pop
jge
sbb
sti
lock
jo
std
jbe
push
dec
test
mov
test
mov
adc
add
cmp
movsl
out
ss
dec
std
xchg
test
sbb
ficomps
xor
fwait
out
xor
push
jne
ficoml
aam
loope
add
dec
aaa
xchg
fisubl
out
cmpsb
or
sbb
dec
std
insb
arpl
mov
and
loopne
lock
jae
lar
sbb
xor
sbb
in
pop
in
ss
fldt
out
inc
int
mov
into
or
addr16
mov
ret
shlb
add
push
mov
lods
in
push
mov
rcrb
sub
push
and
sbb
das
cmpsb
jmp
add
mov
cmp
lcall
les
mov
xchg
hlt
xchg
xchg
adc
filds
insl
add
jl
ror
push
sahf
das
pushl
sbb
add
lock
sbb
arpl
fistps
fcompl
xchg
pop
out
push
sbb
jae
ret
push
into
jns
out
adc
cmc
imul
cmp
dec
jle
pop
ja
out
or
ret
movsl
out
iret
mov
cs
cmp
test
scas
pop
jbe
xor
or
mov
dec
arpl
jge
out
arpl
mov
insl
adcl
mov
ficoms
cli
das
je
and
loop
mov
jnp
mov
xchg
and
inc
sub
movl
pushf
add
jl
stc
scas
es
or
test
stos
jecxz
les
sbb
notl
aas
cli
sub
aaa
add
jo
jbe,pn
loopne
pop
call
mov
mov
adc
or
and
stos
bnd
xchg
loop
sub
das
mov
xchg
outsb
jl
sbb
adc
inc
and
sbb
test
pop
fldt
sbb
push
adc
pop
popf
insl
mov
int3
xchg
mov
mov
loop
push
ret
jecxz
push
stos
rcrl
dec
dec
nop
mov
push
push
fstpt
iret
and
xlat
ljmp
jnp
dec
mov
add
push
mov
test
mov
fists
mov
xchg
mov
es
and
es
adc
inc
push
or
push
in
ret
inc
stos
inc
arpl
repz
lahf
push
xlat
pop
repnz
mov
aas
loope
sbbl
push
pop
fimuls
rclb
dec
ror
pop
jge
inc
loop
ret
aas
cld
inc
inc
jge
jnp
xlat
fdivs
adc
addr16
clc
cwtl
repz
std
jbe
add
xor
icebp
dec
pop
aaa
pop
jge
jg
mov
aas
push
or
pop
push
shll
movsl
scas
mov
add
cmp
pop
stc
lcall
push
gs
lds
push
and
add
shll
pushf
mov
data16
mov
cld
inc
cmp
mov
mov
push
pop
adc
and
sarl
dec
popf
mov
call
xor
leave
arpl
sahf
push
jp
adc
insl
int3
or
aad
or
push
or
pop
inc
mov
stos
and
ja
lret
popa
and
inc
and
mov
lret
push
iret
cmp
pop
sub
inc
push
call
and
jne
xchg
pop
enter
xchg
or
scas
push
mov
pop
mov
and
dec
jmp
push
dec
sub
pop
mov
lret
scas
dec
sbb
sbbb
or
mov
lret
add
popf
mov
stos
je
loop
inc
sbb
mov
or
outsb
adc
sbb
das
sbb
push
lea
add
out
test
shrb
push
out
ss
mov
cli
mov
lret
mov
mov
ret
or
and
fsubrl
ror
adc
or
cmp
scas
bound
movsl
and
enter
xor
push
dec
cmpsb
adcb
ljmp
scas
in
daa
std
subb
adc
repnz
xchg
sub
fdivrl
test
stc
popf
in
pop
nop
aas
cmp
neg
mov
movsl
out
xor
inc
jnp
sub
das
nop
cmp
adcb
and
nop
fimuls
aam
fcompl
adc
sbb
mov
test
movsb
xchg
dec
movsl
pop
idivl
adc
mov
in
push
xor
cld
cmp
jle
mov
stc
mov
fildl
push
push
int
xor
je
or
stos
testb
and
jl
dec
adcl
xor
push
js
rcll
dec
dec
rorl
pushf
sub
sbb
sbb
sbbl
ret
sbb
cmpsl
adc
sbb
pop
lret
mov
call
and
mov
scas
push
sahf
mulb
pop
mov
sub
xor
inc
test
je
in
into
ss
daa
cld
sub
shrl
lea
or
dec
sub
cmp
and
cltd
xor
push
jge
lret
bound
and
fucomi
inc
push
mov
jno
adc
cltd
mov
enter
es
sub
xchg
and
lret
cmc
cmp
push
pop
test
dec
fwait
xchg
lahf
jp
aaa
orl
das
push
rolb
add
ret
data16
decl
jle
inc
push
ja
mov
and
pop
scas
cmp
mov
in
clc
fcmovne
push
adcl
sbb
inc
and
repz
out
cmp
jle
jbe
addl
js
gs
push
stos
sub
mov
jae
hlt
repz
in
mov
aad
adc
inc
clc
jg
cmc
jnp
jmp
sbbb
pop
test
aam
daa
push
aam
xchg
mov
jb
mov
in
fsubs
jae
mov
adc
add
xlat
lock
sahf
lods
sub
xchg
sub
cli
scas
mov
adc
xor
jne
and
xor
mul
daa
test
xchg
push
rcrb
fdivrs
test
mov
imul
leave
xchg
mov
stos
cmp
loop
add
inc
insb
cwtl
dec
mov
imulb
lods
mov
adc
adc
pop
xlat
dec
in
ljmp
shlb
dec
fnstenv
shll
mov
mov
pop
adc
frndint
test
jmp
or
sbb
pop
or
aad
or
lds
add
fwait
pop
or
adc
inc
out
jge
mov
jne
pop
lea
pop
inc
addl
push
mov
aas
mov
xchg
js
jecxz
mov
inc
mov
inc
mov
sbb
xlat
mov
test
leave
cmp
lock
clc
and
sahf
pop
insb
je
pop
mov
test
and
orb
pop
pop
lea
jb
xchg
cmp
int
mov
es
pop
mov
jp
int3
cld
lds
aam
mov
into
add
into
daa
subb
es
dec
pop
lock
in
cld
shrl
push
adc
imul
mov
dec
jne
xor
shrl
inc
repz
jp
mov
lcall
arpl
inc
stos
add
jmp
out
inc
jl
mov
aaa
shll
fadds
mov
fimuls
push
add
push
or
lahf
std
popf
fcmovb
mov
fadds
mov
cltd
or
push
sti
xor
dec
and
movsl
fwait
andb
lock
in
jb
shll
lahf
dec
sub
push
sbb
sahf
adc
or
push
push
scas
dec
scas
add
nop
pop
lahf
mov
jp
sahf
push
div
fistpll
mov
jg
push
pop
jl
fildl
sub
stc
sar
out
sub
icebp
mov
fwait
xchg
jecxz
es
mov
repz
adc
outsl
negl
orb
or
jno
sub
jo
mov
adc
push
mov
jl
pushf
adc
popa
inc
push
outsb
lea
mov
ds
dec
cli
jns
addr16
mov
pushl
ret
push
pusha
insl
inc
out
mov
mov
mov
rcrb
in
xchg
push
cmp
lret
scas
ds
jecxz
cmp
and
pop
test
fstps
in
inc
cmp
sub
into
mov
pop
mov
sti
es
movsl
or
hlt
sbb
out
mov
jl
outsl
jbe
sar
inc
pop
fdiv
aam
lret
imul
push
add
leave
pop
shlb
push
in
push
sbb
addr16
adc
loop
xchg
test
jne
jns
adc
int3
std
add
loope
adc
loope
aad
adc
xchg
repnz
xor
jl
add
gs
push
mov
insl
ret
into
or
cmp
xor
repnz
rcr
adc
push
stc
into
pop
mov
outsb
mov
cmp
call
pusha
push
arpl
push
fcomp
mov
xor
addr16
adc
imul
imul
mov
mov
shr
lret
dec
jp
icebp
and
cmpsl
jecxz
sbb
cmp
into
pop
jno
js
aam
fstl
frstor
imul
ret
fnsave
mov
std
mov
les
shl
xchg
in
dec
jg
shr
xor
mov
push
push
outsb
fdivl
mov
jbe
inc
push
jg
lahf
icebp
pop
pop
inc
addb
push
adc
sahf
loop
cmpsl
pop
mov
roll
xchg
sub
test
ljmp
mov
inc
fwait
jno
or
cwtl
adc
dec
dec
cltd
call
sarb
xchg
leave
sbb
imul
lods
xor
push
shll
in
and
out
aaa
xor
xchg
dec
ficoml
dec
repz
adc
inc
adc
mov
xchg
shl
sti
outsb
stc
ds
cmp
into
rol
add
movsb
xchg
jmp
sbb
sub
cmpsb
jp
adc
cli
sarb
xor
cmp
scas
jg
sbb
aad
sahf
pop
loope
test
mov
movups
adc
mov
int
xchg
push
loope
mov
push
jmp
leave
cli
fnstsw
jnp
jb
jmp
xchg
daa
and
in
add
lahf
int3
outsb
lds
push
repz
bnd
mov
fdivl
pop
and
cltd
and
int3
mov
loop
jns
int3
adc
and
jo
movsl
adc
out
loop
test
cmp
jnp
sub
repnz
mov
repz
ds
dec
out
push
cmp
mov
push
lods
dec
pop
mov
dec
daa
mov
push
sbb
push
adc
push
imul
insb
push
fxch
cs
clc
ljmp
cli
in
das
femms
test
xchg
arpl
test
popa
mov
ret
lods
dec
cmpsl
jbe
mov
add
mov
stos
rorl
jbe
in
jl
gs
sub
or
push
das
push
xchg
loope
adcl
pcmpeqw
dec
repnz
sarl
xor
shrb
icebp
pop
inc
inc
mov
jb
jno
push
xchg
sub
jns
loop
int3
pop
cmp
mov
lea
rclb
lea
fists
mov
in
xchg
sahf
add
inc
and
pop
inc
into
repz
push
pop
cli
pusha
ret
pop
ljmp
xchg
hlt
mov
div
pop
add
aaa
push
or
mov
fidivrl
std
cmpsb
mov
mov
push
ss
inc
rcll
xor
ret
push
cwtl
test
out
cmp
dec
push
mov
add
mov
lret
dec
push
pop
inc
push
int
xchg
inc
lock
jmp
ja
push
inc
pop
jecxz
das
dec
loope
sbb
inc
movsb
daa
xor
dec
inc
pop
xor
cmpsl
xchg
insb
or
ficoml
mov
lds
ds
pop
mov
out
and
cmp
in
stos
cmp
std
xchg
rcrb
aam
jns
fsubrp
out
jns
lods
sti
jp
aad
js
push
inc
and
movsl
jno
jl
movsl
icebp
icebp
xor
lods
je
and
jns
shlb
adc
push
jns
xor
scas
bound
pushf
in
or
xchg
lcall
jbe
ds
cmp
pop
or
cs
nop
cmp
idivl
stos
cs
pop
cmp
out
push
ffree
iret
dec
cli
and
pop
cld
inc
pusha
jbe
inc
cmc
mov
ss
or
stos
cs
enter
fsts
adc
mov
ret
cld
fldenv
fidivrl
dec
sub
add
inc
xor
scas
mov
adc
and
test
xchg
or
adcl
sbb
push
aad
xchg
add
jno
xor
mov
cli
sbb
hlt
mov
inc
repz
jmp
jp
icebp
pop
jg
and
jp
xor
inc
adc
fistps
popf
ljmp
jbe
push
call
xchg
inc
cli
rorb
xchg
iret
in
mov
pop
add
cmp
cmpb
test
in
ds
cmp
in
int
xorb
mov
sbb
aam
xchg
xchg
faddl
mov
or
int3
pusha
cli
les
enter
dec
cmp
std
jno
stos
xor
jecxz
addr16
into
fildll
push
xchg
push
cmp
push
mov
push
sub
xchg
pushf
sbbb
adc
shll
xorb
xor
iret
ds
daa
and
sub
stos
mov
cmpsl
in
mov
add
aas
imul
dec
xor
stos
xchg
rol
sub
sub
shlb
outsl
pop
call
sub
lock
fs
rep
cwtl
xchg
icebp
in
ret
sbb
insl
xlat
jae
lock
ret
fisttpll
fldt
mov
mov
jmp
mov
push
adc
pop
adc
xchg
ss
test
push
out
and
pop
das
cwtl
dec
jno
mov
aad
sub
xchg
aas
popf
jbe
in
lock
lret
les
push
gs
cmp
test
aad
jo
test
mov
push
pop
jbe
ss
ret
icebp
not
arpl
push
mov
js
ficompl
int3
xchg
stos
fldenv
decb
jae
lods
and
jl
sbb
imul
sub
sub
movsb
mov
push
push
add
stc
test
imul
mov
rol
or
movsb
or
or
bound
add
popa
jmp
out
or
imul
ret
adc
cmpsb
sub
int
push
jns
call
lods
rclb
cmp
insb
pop
pop
fisubs
shr
xchg
and
mov
push
mov
rorb
add
ret
rcrl
loope
and
lock
pop
mov
pop
shlb
jns
jbe
ja
mov
icebp
jl
inc
cmpsl
mov
std
das
adc
mov
jb
add
jae
call
mov
push
outsl
push
ljmp
pop
mov
pop
and
imul
lret
pop
cmpsb
mov
or
mov
je
jge
mov
jno
mov
faddl
push
adc
sbb
aam
bound
xlat
shll
leave
mov
dec
icebp
out
lret
add
push
std
iret
and
pop
imul
mov
test
push
sub
lds
mov
adc
mov
insl
inc
mov
cs
pop
adc
mov
nop
mov
mov
add
or
jle
lods
flds
sub
push
or
or
and
add
das
iret
add
jbe
gs
hlt
mov
repz
dec
push
dec
test
sbb
rorb
out
mov
fwait
add
inc
pop
cmp
inc
push
call
push
les
loop
cmp
mov
imul
adc
or
push
adc
cwtl
lds
sbb
stos
dec
in
fldt
jmp
bound
push
les
inc
adc
push
loop
lret
sbb
or
jno
test
inc
pop
lea
test
jno
or
pop
push
in
pop
call
xchg
xchg
cwtl
mov
jmp
xchg
call
scas
test
mov
adc
jge
xchg
pop
lret
or
pop
cwtl
mov
pop
pop
inc
jne
dec
or
movd
dec
push
addb
fidivs
lea
fnsave
test
inc
sub
mov
pop
test
push
mov
inc
icebp
pop
insb
sbb
adc
ffree
adc
mov
pop
add
lahf
lods
pop
push
in
push
or
add
ret
imul
pop
mov
xor
dec
xchg
sbb
push
stos
or
cmp
pusha
mov
sub
ds
lahf
push
xchg
adc
inc
imul
iret
cltd
pop
mov
arpl
add
ret
fistpll
lods
insb
jecxz
test
xor
ja
lahf
jge
ss
stos
out
xchg
sbb
lret
mov
pop
push
xchg
xor
xchg
add
lahf
out
jne
jl
bound
mov
mov
insl
lcall
scas
insl
outsb
and
push
js
mov
mov
out
inc
sti
ret
jecxz
push
aam
cld
mov
mov
add
lods
hlt
jne
imul
push
out
mov
leave
ds
or
push
fists
mov
and
mov
ss
ja
inc
add
xor
loop
movsl
or
mov
mov
inc
add
jge
sahf
nop
xor
mov
dec
push
cli
mov
sar
mov
lods
adc
jns
dec
sbb
mov
xor
mov
and
sbb
mov
and
dec
jg
call
js
aaa
and
fs
in
and
mov
xchg
faddl
mov
or
mov
add
pop
hlt
notb
daa
dec
hlt
mov
sbb
xchg
js
adc
adc
ljmp
movsl
lcall
sub
cld
mov
fcomps
push
aam
adc
shl
in
loop
cmpsl
sbbl
insb
mov
add
adcl
sub
ret
adc
iret
test
push
scas
mov
mov
sub
ret
adc
fidivl
cs
in
jle
xor
mov
and
or
nop
addl
or
lods
cmp
call
clc
adc
add
jne
in
sub
aad
adc
pop
push
mov
nop
jge
push
aam
push
or
int
xchg
in
imul
dec
dec
clc
sbb
mov
icebp
nop
sbb
roll
imul
pop
mov
mov
bound
bound
pop
mov
loop
push
in
cli
sub
push
out
jge
das
xchg
add
pusha
jno
stos
repnz
and
mov
cltd
fnstenv
xchg
fwait
cld
add
xchg
and
mov
and
rclb
mov
mov
loope
stc
mov
pushf
pushf
ficoml
fs
arpl
in
loop
lods
mov
int3
jne
jge
sub
mov
into
inc
int
test
cmp
outsl
cltd
dec
sarb
aas
stos
jo
inc
mov
arpl
and
ljmp
xor
sub
jmp
xor
inc
push
shlb
cmp
sarb
inc
loopne
xchg
sbb
loopne
lret
xor
popf
cwtl
pop
jge
push
mov
jne
fsubs
jbe
xchg
jge
stc
add
jp
test
hlt
cld
cmp
rcrb
xor
jne
jno
xlat
lret
mov
outsb
and
les
cmpsl
sbb
cltd
cmp
xor
clc
pop
les
mov
fldl
jne
sbbb
jnp
fidivrs
arpl
addl
xchg
push
mov
hlt
cmp
out
xchg
lods
push
cmp
xor
nop
adc
daa
dec
stos
pop
sti
mov
mov
xchg
js
xlat
sbb
imul
in
out
subl
pop
inc
sbb
stos
popf
jg
or
mov
cs
xchg
mov
ds
jne
mov
add
jb
and
pop
jne
mov
jl
push
mov
rolb
mov
repnz
stos
xchg
and
jno
sti
push
and
xchg
ljmp
mov
pusha
inc
dec
test
in
adc
enter
sub
insb
cltd
or
jne
rclb
imul
sahf
or
add
stc
add
sub
xchg
shl
sar
les
dec
lock
addl
mov
xlat
lahf
xchg
jns
mov
xor
adc
and
call
xor
mov
out
shll
test
ret
rorb
stos
pusha
mov
std
mov
push
lock
test
mov
ss
loopne
and
push
xor
and
dec
and
mov
mov
add
movsl
cmp
insl
je
mov
xchg
sti
das
inc
arpl
mov
aad
xchg
dec
pop
mov
add
test
ljmp
cmc
dec
test
dec
pop
fstps
xchg
adc
add
mov
pusha
mov
xor
in
sub
xchg
and
jp
push
add
mov
int
clc
or
aam
iret
mov
xchg
fcmovbe
pop
bswap
nop
mov
jecxz
or
out
pop
sbb
fildll
sbb
js
bound
in
adcb
rorl
testb
leave
mov
and
mov
fwait
jns
mov
sub
pusha
add
test
scas
mov
cmp
dec
mov
sarl
sbb
enter
adc
lret
dec
dec
loop
out
scas
les
imul
rclb
cld
dec
cmp
ja
sar
mov
outsl
push
mov
fcomps
inc
mov
fdivs
ljmp
or
enter
push
push
jo
and
adc
in
lock
pop
popa
push
ret
jbe
adc
lea
pushf
xor
daa
rcll
outsl
data16
shlb
sub
pop
ja
jmp
int
cwtl
std
fwait
mov
fbstp
lahf
out
mov
or
sbb
and
enter
cmp
insb
cld
pop
frstor
dec
cmp
ret
xlat
enter
es
xlat
ljmp
mov
sti
in
mov
sarb
test
xlat
test
sbb
pop
inc
sub
push
es
test
xor
lahf
clc
data16
pushf
and
sbb
dec
cmpsb
fsub
mov
push
adc
dec
stos
cmc
pushf
sbb
pop
cli
pop
jge
lock
fidivl
cld
mov
jnp
inc
mov
aaa
aam
int3
cmp
push
shr
sbb
scas
clc
test
loope
jne
imul
stos
jmp
test
and
or
dec
xor
mov
iret
xor
imul
test
lret
adc
inc
mov
je
cmpsb
cmp
push
inc
or
push
or
mov
jecxz
xor
arpl
cmp
push
xlat
test
cs
jmp
pusha
mov
jg
and
movsb
repnz
pop
js
sar
lcall
push
push
and
lcall
jb
div
pop
mov
jmp
and
jns
data16
shl
mov
dec
mov
popf
cmp
pop
fdivr
mov
out
jns
pushf
lahf
lds
shll
sti
ficoml
fldl
fcoml
arpl
out
xchg
jge
mov
cmpsl
into
std
adc
call
jno
inc
adcl
jb
ret
out
add
xchg
int3
jle
cmp
xchg
lods
dec
lcall
cmp
xor
fisubrl
mov
stos
movsb
sub
jg
push
call
sub
dec
adc
jg
mov
cmc
dec
xor
lea
mov
outsb
inc
pushf
test
das
sbb
sbb
movl
repnz
jg
cmp
scas
nop
adc
sub
sub
and
leave
sub
push
imul
rcrb
test
lahf
test
and
js
dec
and
xor
iret
cmc
iret
xor
popf
std
cwtl
sub
inc
mov
cmp
lods
mov
cltd
ficoml
jnp
test
xlat
xchg
push
ds
xchg
mov
jg
jno
adc
lock
bound
hlt
hlt
push
nop
inc
xchg
aad
insb
inc
pop
cmpsb
inc
lahf
cmp
popf
lods
popf
call
pop
lret
rorl
xchg
add
pusha
inc
unpcklps
cmp
mov
mov
jb
xchg
out
dec
add
mov
mov
xchg
aas
add
negb
inc
jge
nop
dec
rorl
shr
ss
mov
jmp
adc
shrl
pop
dec
sbb
push
mov
jbe
fldl
fildl
jb
icebp
lods
xlat
test
or
dec
cmc
mov
pop
sub
push
loopne
and
repnz
pop
cmp
and
dec
dec
clc
cmpsl
xlat
jbe
imul
add
mov
mov
dec
xchg
pusha
addr16
adc
out
xlat
sub
lret
movsl
ret
cwtl
out
pop
fnsave
xor
pushf
sbb
cwtl
dec
jne
mov
outsb
cld
stos
xlat
dec
addr16
rcl
cmc
cmc
pop
lds
ret
mov
mov
test
sbb
pop
push
mov
sub
mov
xlat
ss
mov
fstl
pop
lahf
out
sbbl
loopne
pop
mov
sub
xor
out
pop
dec
mov
loope
jnp
out
add
sti
shl
lods
dec
inc
lock
data16
xchg
jo
push
jecxz
pop
popf
imul
cmp
cmp
rorl
inc
test
dec
xchg
or
sbb
div
and
cld
mov
pusha
adc
cmp
imul
cld
fsubrs
movsl
and
in
jns
loopne
jb
cmpsb
mov
inc
mov
dec
inc
xchg
mov
jbe
jg
adc
je
pop
mov
add
mov
jne
or
pushf
mov
jp
call
jl
arpl
mov
cmovge
push
add
lret
or
pop
mov
mov
loopne
mov
cwtl
fidivrl
pop
js
dec
mov
cli
mov
dec
mov
jge
adc
test
xor
outsl
bound
push
jge
scas
bnd
xchg
imul
out
or
pop
ret
ss
test
loop
sti
fisttpl
add
ja
sbb
loop
and
lcall
sbb
lods
stos
sub
mov
pop
xor
mov
int
and
or
sbb
lock
dec
mov
push
xor
mov
xchg
aaa
and
xchg
adc
or
mov
jle
popa
out
or
mov
outsl
popf
outsl
push
xor
push
test
gs
jecxz
out
ja
jb
rorl
mov
push
inc
shlb
outsl
dec
inc
dec
mov
movsl
aaa
scas
or
jle
enter
icebp
pop
push
movsl
stos
insb
jns
xchg
js
lods
pop
sub
mov
xchg
inc
or
outsl
lret
add
aam
xchg
mov
mov
jg
insl
mov
insb
andb
xchg
push
dec
xor
aam
mov
push
mov
shlb
sub
cmpsl
cltd
push
lahf
mov
sbb
test
mov
je
cmp
bound
hlt
leave
push
sub
lods
and
mov
jle
scas
inc
in
adcl
and
adc
call
pusha
mov
inc
sub
sub
sti
inc
insb
nop
lds
push
lahf
repz
daa
es
jns
sbb
adc
iret
cwtl
sbbl
push
or
negl
lds
je
add
push
cld
int
sub
mov
pop
ret
icebp
pop
and
pop
push
push
pop
leave
mov
fidivrl
mov
sub
outsl
sbb
mov
imul
fsts
add
jbe
add
lea
mov
sbb
dec
sbb
add
pushf
out
jmp
sbbb
test
pop
fnstsw
lock
sbb
js
sub
arpl
shrl
pop
in
cmp
testl
sbb
sbb
sub
push
enter
lcall
mov
push
insb
mov
push
hlt
test
mov
aaa
iret
addb
mov
push
or
pop
jae
jne
mov
jb
into
bound
mov
mov
fstps
in
dec
scas
es
jge
iret
stc
ret
outsl
out
push
mov
dec
aam
mov
inc
add
inc
sbb
in
xchg
call
dec
xchg
cwtl
xorl
xlat
mov
sar
std
jg
arpl
ljmp
std
mov
jl
and
fwait
loop
cltd
inc
ficomps
test
out
mov
inc
xor
adcl
testl
loop
or
fcoml
mov
cltd
xchg
or
cmc
mov
int
loopne
push
lret
push
in
push
mov
push
cmp
or
xchg
adc
mov
dec
sub
inc
outsb
xchg
mov
out
bound
in
dec
mov
gs
out
or
cld
jnp
xor
xorb
shl
popa
dec
lds
mov
lret
jns
jp
incb
hlt
aam
mov
cltd
jb
fdivs
sbb
jnp
aas
pop
xor
push
xchg
loope
push
out
xchg
mov
divb
inc
sbb
or
adc
or
xor
push
lock
ret
test
sub
cwtl
ds
shll
or
std
dec
lret
clc
mov
jg
xchg
xchg
dec
data16
mov
aam
cmp
fimull
lock
orl
xchg
mov
pop
inc
in
jno
inc
mov
in
xor
push
mov
ficoms
ret
movsb
inc
mov
stc
or
mov
ss
push
cmp
lret
push
rorb
cltd
stc
dec
sub
test
popf
jae
pop
ret
lahf
mov
mull
pop
imul
cmp
inc
jp
xor
stc
sbb
jns
icebp
lods
out
mov
cmpl
rclb
sbb
cmp
inc
mov
fmul
sbb
add
jg
inc
add
rcrl
jae
pop
roll
pop
mov
sub
je
les
jae
xor
jg
lret
mov
fdivs
adc
mov
shr
xlat
insl
cltd
xchg
dec
xorb
sub
lock
xchg
loopne
enter
add
and
cmp
dec
push
std
aas
jg
push
lock
int
es
and
and
aaa
hlt
addl
lds
cli
and
fdivl
cmpsb
enter
fiaddl
ja
sub
mov
add
stos
lret
repnz
sub
in
stc
test
scas
mov
inc
mov
push
xor
push
out
xchg
out
adc
movsb
inc
and
xchg
mov
mul
in
lea
cmp
fdiv
loop
mov
mov
loope
ljmp
daa
jbe
jmp
xchg
cwtl
push
inc
stos
adc
inc
dec
mov
pop
push
stos
andl
and
or
push
repz
imul
xchg
testl
xchg
sahf
cmp
push
mov
add
inc
pop
jbe
mov
dec
aam
push
inc
jbe
pop
xor
jb
or
rcrb
insl
dec
in
sbb
sub
and
cmc
dec
pop
dec
cmp
xor
daa
mov
xchg
cmp
sub
sub
jecxz
test
in
outsl
movsl
cmp
xchg
pushf
aas
data16
fisttps
add
lret
jg
shl
mov
stos
push
cmpsl
jno
aad
xor
xchg
cmpsl
hlt
cmpsb
mov
jmp
sbb
ss
lds
push
hlt
movsbl
mov
sbb
sub
mov
lock
inc
daa
test
sahf
push
lret
shl
sbb
pop
push
fdivrl
fwait
push
xchg
mov
shrl
mov
inc
sbb
inc
mov
arpl
stc
ret
mov
and
pusha
jnp
movsb
mov
or
cmp
lods
pop
in
xchg
loopne
sti
adc
ljmp
inc
mov
leave
stc
mov
scas
shrb
cwtl
daa
mov
sub
inc
stos
lret
jl
adc
sbb
fisubrs
mov
or
ds
xlat
cmp
ja
leave
xchg
notb
xor
mov
adc
shufps
outsl
and
leave
pop
sbb
push
aas
imul
mov
aas
push
movsb
mov
mov
dec
push
adc
loop
inc
sub
pop
pushf
bound
mov
mov
lods
add
hlt
popl
dec
mov
scas
push
pop
lods
test
stos
subl
mov
outsb
imul
shl
pop
in
xchg
movsl
and
cmp
or
popf
loopne
pop
repnz
ffree
mov
pop
pop
movsb
stos
ja
sbb
cmp
orb
sarb
xrelease
push
daa
jb
mov
das
fsts
mov
and
iret
inc
jno
mov
push
in
sbb
sbb
imul
push
xchg
in
aaa
out
and
or
jmp
pop
in
add
xor
or
flds
fucomip
mov
pop
mov
or
jb
pop
dec
push
pop
pop
jne
xchg
cwtl
cmpsl
repnz
pushf
loope
jno
jmp
fcmovb
add
cli
scas
and
and
adc
shll
sub
jp
mov
dec
adc
loopne
loop
sbb
pop
jp
pop
and
jne
cli
mov
adc
xor
mov
mov
fdiv
mov
cmp
xchg
addr16
or
movsb
insl
out
mov
and
mov
mov
push
xor
xchg
pop
lret
xchg
sbb
pop
das
add
jle
push
and
or
addr16
mov
je
dec
dec
enter
push
inc
cli
mov
sub
mov
fldenv
sbb
pop
movsl
shll
and
or
mov
jbe
ror
cmpsb
jno,pn
or
mov
add
mov
push
pop
in
mov
xchg
adc
out
js
rep
subb
and
imul
shrb
nop
cli
push
ja
sbb
sbb
xchg
repnz
movsl
loopne
popa
jb
movsl
ret
dec
mov
or
push
scas
jnp
mov
or
mov
rol
jbe
pop
or
xor
xchg
pop
jb
push
int3
adc
test
test
in
sbb
std
xor
pop
adc
jl
lahf
sti
inc
paddusw
push
sbb
inc
mov
jnp
in
push
lcall
adc
movl
stc
lods
call
dec
int3
leave
xchg
in
jle
pop
repz
mov
mov
xor
sahf
sbb
enter
fwait
insl
cwtl
movb
xor
aam
ss
xchg
cmp
cld
jl
mov
bound
xor
es
leave
or
mov
sbb
xorb
push
xchg
clc
lahf
mov
xchg
pop
mov
int
aam
adc
mov
sarb
mov
loop
imulb
push
ret
xor
pop
js
jecxz
cli
sub
test
enter
mov
pop
fmull
xor
pop
cmp
imulb
js
pop
out
mov
pop
cmpl
inc
push
mov
int
adc
add
iret
jnp
inc
fs
jmp
lahf
jl
pushf
push
idiv
mov
lret
xlat
test
sbb
jle
cmp
nop
leave
cmc
pushf
lock
inc
lret
sbb
mov
out
mov
dec
mov
loope
push
adc
daa
inc
les
push
sub
inc
push
aaa
pusha
jl
mov
std
js
xchg
pop
lret
out
mov
push
ret
adc
repnz
out
loope
addr16
aas
cmc
jo
lea
pop
jecxz
pop
jns
sub
xchg
pusha
or
jp
stos
lods
pop
adc
lcallw
rcrl
mov
add
enter
stos
lock
xchg
mov
sbb
aam
push
in
jb
add
mov
and
js
stos
bound
pushf
stc
pop
enter
xchg
rcrl
xchg
lods
lret
sub
pop
inc
mov
sub
aas
push
mov
fwait
jmp
push
jmp
add
rolb
lret
jg
xor
mov
xlat
sbb
xor
jbe
mov
mov
pop
in
out
mov
dec
mov
jo
or
in
push
xor
mov
pop
pop
daa
push
test
nop
and
out
jbe
adc
cmpsl
lret
ret
ss
pop
inc
jecxz
imul
leave
into
sbb
mov
cmp
push
adcl
or
sarb
push
mov
pushf
xchg
rcl
mov
pop
movsb
sahf
pop
idivl
andl
aad
jae
aas
aad
ror
adc
jns
test
loopne
push
test
xor
imul
dec
pop
pushl
stc
jbe
inc
pop
pusha
aaa
cmp
push
push
xor
fldl
and
sbb
inc
xor
test
fadd
dec
ret
push
push
xor
test
subl
test
jle
aas
inc
inc
data16
cld
repz
scas
xchg
addr16
test
or
mov
insb
ret
inc
cmp
jbe
add
or
jl
pop
jg
mov
fmul
pop
or
flds
loop
rol
rorb
rorl
movsb
movsbl
push
pop
lods
sub
pushl
ret
or
das
cs
stos
mov
imul
adc
and
sti
aad
sub
stos
popf
ja
cmpl
cmp
sti
sub
mov
enter
add
fwait
inc
push
jl
pop
into
test
into
fsts
repnz
mov
test
lods
std
xchg
nop
jae
loop
call
mov
fwait
shrl
cwtl
insb
jge
adc
push
ret
scas
or
mov
push
fnstsw
out
xor
les
jns
pop
add
jle
pop
es
mov
lcall
xchg
loopne
xchg
cmpsb
or
mov
inc
popa
add
fisttpl
lock
repz
mov
je
test
cli
adc
cwtl
clc
push
loop
sti
pop
add
leave
push
sub
dec
popa
mov
testb
mov
xor
dec
dec
sbb
push
ss
fcmovbe
shrl
outsb
push
into
xchg
sbb
and
and
lcall
mov
call
fcoml
divl
ljmp
mov
or
push
sbb
jbe
mov
pushf
mov
cld
xlat
and
fs
das
pop
pop
cwtl
imulb
out
addl
jno
sub
push
stos
ja
jae
mov
xchg
stos
js
xchg
or
xor
aad
pop
stc
imull
lret
mov
mov
icebp
pusha
pop
cli
pusha
out
aam
lret
cli
in
je
stos
add
andl
sub
into
scas
inc
inc
push
loop
or
incb
fistps
push
cmpsb
shrb
in
jbe
test
ljmp
mov
jb
loope
ss
outsb
push
sahf
pop
inc
in
je
adc
cmpsb
cmp
int3
arpl
nop
add
ret
sub
fdivrl
icebp
xchg
cmpsb
jecxz
idivb
inc
dec
adc
out
scas
dec
mov
add
in
mov
pop
mov
mov
decl
test
sahf
sbb
mov
jle
push
cmc
cld
add
arpl
movsl
scas
ss
mov
aas
xor
in
mov
add
mov
js
push
or
lahf
addr16
ret
pop
and
scas
pop
adc
add
test
xor
inc
imul
clc
rep
data16
mov
hlt
or
push
mov
mov
jle
popf
dec
xor
mov
jecxz
fdiv
jns
pop
outsl
pop
sbb
lods
cmpsl
mov
pop
test
fidivrs
xchg
sub
ficoms
inc
sub
sbb
sub
jnp
out
sahf
xchg
mov
mov
jmp
lahf
fs
sbb
ret
jnp
mov
loopne
cmpsb
das
cs
add
xorl
enter
stc
popa
xchg
and
or
out
cmp
add
jge
pop
lods
pop
and
jp
pop
sbb
es
add
cmp
sbbb
fs
mov
mov
ds
mov
adc
xchg
sti
pop
mov
lret
xchg
push
outsl
mov
popf
pop
mov
sbb
pop
xchg
sub
inc
lret
pop
sbb
add
adc
dec
cwtl
aas
jle
cltd
cmp
arpl
dec
pop
push
jno
mov
mov
or
fsubs
jmp
ss
xchg
sbb
cmp
jecxz
sti
pushf
mov
adc
psrlq
popa
loop
int
nop
ret
mov
cmp
cmc
mov
lcall
je
aam
xacquire
in
popf
jo
xlat
lret
and
js
lods
mov
mov
inc
subl
push
mov
in
addb
pushf
pop
mov
jmp
das
rcr
adc
lock
push
popfw
imul
popa
xchg
fs
ret
addl
xor
inc
xor
icebp
inc
shl
jno
xchg
and
xchg
cmp
cmp
dec
aas
popl
push
add
hlt
sbb
pop
sahf
jle
mov
pop
xorl
hlt
repnz
jnp
mov
cli
dec
cmp
pop
rcrl
cmc
or
sub
mov
loop
movsl
movsb
stos
repnz
outsl
add
movsl
in
pop
icebp
add
cltd
jb
lret
shll
jmp
mov
inc
sbb
add
push
mov
dec
lahf
ror
dec
scas
outsl
aas
dec
mov
daa
andb
xchg
xchg
xor
mov
cmp
cwtl
dec
jg
cmpsl
aas
and
stos
or
cmp
sbb
ds
inc
aaa
cmc
fwait
xchg
int
sub
insl
jae
jge
mov
cmpsl
inc
adc
icebp
push
adc
add
mov
inc
pop
sub
pop
je
ja
repz
andl
jle
clc
pushf
and
xor
pushf
js
mov
inc
ret
addr16
or
mov
mov
loopne
xchg
rclb
and
mov
jnp
jmp
dec
int3
stos
mov
pop
push
sbb
jbe
sub
xchg
push
sbb
lock
icebp
and
adc
outsb
mov
repnz
push
decb
mov
dec
idiv
je
push
pushf
mov
push
mov
mov
std
jg
js
int
inc
stc
cmp
sub
ja
rcll
ss
out
js
push
rorb
lock
insb
mov
inc
stos
and
inc
and
inc
mov
pop
xchg
setbe
adc
sbb
and
pushl
popa
ss
lahf
ret
jne
mov
cs
cmp
mov
stc
xor
ja
pop
xchg
and
negl
clc
xchg
and
gs
subl
add
sti
sti
addr16
inc
jmp
mov
jbe
dec
fdivrs
or
push
xchg
std
jle
hlt
mov
pop
out
bound
inc
xor
ja
pop
dec
out
sbbl
sub
cmp
adc
mov
dec
mov
cmp
clc
test
loopne
inc
jl
jp
mov
xor
mov
lcall
aaa
sbb
notl
lds
pop
fisubrl
testb
and
roll
test
sub
cmp
cmp
mov
push
sti
stos
and
push
pop
jecxz
mov
mov
movl
pop
enter
mov
mov
in
inc
mov
std
xor
ret
movsl
push
xor
inc
aam
out
bound
mov
pop
pop
adc
stos
push
mov
add
add
adc
add
jecxz
adc
and
gs
lret
enter
mov
shlb
fcomps
cltd
loope
clc
in
push
lcall
popl
hlt
int3
push
arpl
jmp
out
mov
inc
fistpl
std
testl
cmp
mov
dec
add
rorl
jp
adc
leave
scas
frstor
and
pop
sbb
bound
add
or
mov
dec
sbb
pop
stc
mov
sub
and
inc
xor
cmp
cmp
mov
xchg
data16
out
int3
push
xchg
xchg
sbb
cli
imul
jl
lahf
jbe
daa
popl
xor
jb
cli
push
aas
insl
dec
xchg
and
sub
mov
filds
add
adc
js
es
aam
lods
dec
in
mov
mov
lock
ss
bound
jbe
mov
nop
or
pop
sub
fimuls
cld
push
sbb
push
jb
in
lods
div
push
mov
std
jb
divl
add
mov
outsb
inc
in
push
inc
inc
inc
mov
call
xchg
mov
loope
lods
lahf
inc
cmp
fcomps
pushf
inc
test
mov
xor
xchg
ret
pop
into
out
cmp
lock
and
pop
xor
cltd
or
fwait
dec
scas
pop
cmp
cmp
adc
lock
cmp
jns
mov
adc
loope
adc
movsb
sti
aas
inc
xchg
outsb
push
popa
add
jle
test
js
xlat
lcall
dec
jae
xchg
and
mov
out
aas
loope
ficomps
pop
add
es
ljmp
decl
enter
lret
scas
adc
push
adc
mov
push
popa
cli
orl
js
daa
or
mov
mov
jl
adc
jecxz
iret
push
and
cld
mov
sti
es
sbb
cmp
and
cmp
lcall
mov
mov
test
scas
jg
ror
sbbb
cmp
sarl
mov
pop
xchg
outsl
jmp
mov
lret
int
addr16
or
scas
adc
add
and
daa
popf
es
cltd
mov
mov
dec
cwtl
pushf
shrl
cmp
out
or
adc
loope
popa
add
notl
and
sarb
sub
ljmp
sahf
popa
jno
in
xchg
movsl
cmc
dec
pop
inc
jns
hlt
inc
cmp
rcrl
ds
push
sub
push
xor
sub
dec
jbe
jns
lea
adc
fmull
lret
jnp
movsl
insb
mov
lcall
mov
cmp
in
sti
aas
scas
mov
pop
rcr
insl
push
xlat
dec
mov
add
adc
jne
in
cmp
pop
ss
loop,pn
mov
jecxz
or
add
sub
imull
mov
dec
lds
dec
loope
pushl
lret
and
xchg
push
stos
push
mov
mov
and
fisubl
push
arpl
mov
sub
xchg
leave
sub
cld
cmp
mov
icebp
es
adc
ljmp
stos
out
cmp
pop
adc
mov
test
fsubl
lods
add
movsb
lahf
sti
mov
jbe
and
pop
out
xor
out
sub
push
xor
lds
push
and
mov
imul
mov
ljmp
pop
inc
add
popa
and
fwait
out
and
inc
mov
mov
bound
mov
jp
sub
pop
push
sbb
mov
cmp
ficoml
in
fiadds
adc
loope
sbb
push
cltd
adc
xchg
mov
adc
mov
pop
jb
jns
fs
test
loopne
push
int
mov
fucompp
imul
lds
loopne
jnp
and
add
mov
jle
jg
lds
or
cmp
or
popf
stos
dec
mov
lea
mov
jnp
mov
fldt
test
imul
push
subb
push
jge
pop
out
push
cmpsl
push
call
pop
sahf
fidivl
loop
adc
imul
adc
call
add
bound
xchg
loopne
roll
mov
jo
loop
add
cmpl
dec
shl
fmull
xchg
mov
aad
cltd
rcr
andb
ss
mov
cli
test
pop
rolb
or
mov
jl
push
mov
roll
push
cs
fcomps
jmp
mov
mov
outsb
je
popf
sbb
push
xlat
imul
inc
push
xlat
cmp
inc
cmpsl
frstor
cmpsl
push
stc
pop
pop
sbb
pop
jp
mov
sahf
js
adc
mov
mov
call
das
fdivr
std
call
bound
mov
fwait
xor
inc
mov
inc
and
cmp
idivb
xchg
loopne
loop
jg
push
mov
dec
sub
dec
dec
std
mov
dec
push
mov
repnz
stos
or
or
adc
cltd
jnp
cmc
or
push
sti
fadds
adc
dec
xor
pop
mov
cmp
mov
push
dec
dec
leave
mov
xor
add
jp
into
addr16
dec
aas
cs
out
je
cmp
cmp
dec
inc
stos
dec
loop
inc
nop
sbb
pop
clc
iret
divl
test
and
add
push
ljmp
pop
insl
cmpl
lock
icebp
cs
shr
loopne
int
adc
rol
jbe
dec
mov
outsb
cld
bound
pop
lret
loop
orl
jnp
sbb
out
xor
fbstp
sub
pop
sbb
pop
pop
xchg
and
loopne
mov
inc
jmp
rcrb
or
pop
enter
js
js
rorb
dec
push
sbbl
lcall
xchg
mov
mov
xchg
in
jg
mov
sbb
mov
fists
xchg
fwait
lahf
loop
push
fwait
in
daa
mov
test
dec
stos
sbb
adc
pop
out
adc
jae
shlb
outsl
sbbb
sbb
inc
test
adc
adc
loope
sbb
mov
popf
fistl
push
add
lahf
push
and
sub
jle
push
sbb
add
xor
ret
frstor
mov
repz
adc
bound
pop
mov
xorl
fadd
and
jmp
mov
lods
mov
repnz
cmc
xchg
mov
xlat
xchg
icebp
cmc
fildll
jmp
sub
and
jle
psubusw
loope
mov
push
xchg
lods
in
imul
popf
xor
imul
inc
inc
fsubrs
xor
mov
xor
sarl
jge
mov
jmp
std
fs
add
fsubs
dec
mov
mov
xor
ja
pop
pop
movsl
and
stc
mov
push
dec
andl
ja
and
cmp
adc
or
icebp
inc
out
add
int
inc
mov
add
icebp
dec
jl
aam
xor
mov
push
xlat
pop
fisubl
pop
into
push
jmp
lret
cmp
mov
mov
pop
mov
ficoms
sbb
add
inc
mov
popf
mov
push
stc
out
fisubl
out
icebp
xorl
fwait
inc
and
sub
inc
mov
dec
jl
and
sbb
xor
mov
repz
bound
daa
out
jne
call
adc
xor
nop
jp
lods
cld
push
xor
enter
daa
aam
cmp
call
stos
in
jns
and
jg
fneni(8087
js
or
aas
rcrb
cmc
loope
call
push
inc
and
xchg
shrl
shll
inc
mov
cmp
fwait
pop
sub
fwait
daa
fs
imul
mov
sbb
jmp
jg
leave
jo
iret
rcl
imul
loope
mov
bound
in
push
cltd
or
add
cmp
imulb
fisttpl
push
sub
addb
scas
test
xchg
adc
inc
aad
and
adc
pop
and
mov
pop
sub
inc
shll
gs
insb
outsb
pop
cmpsl
movsl
addl
mov
scas
jno
ret
shrl
arpl
jae
mov
ss
dec
mov
add
cli
fidivs
push
cmp
adc
cmp
inc
jne
adc
insb
lea
mov
sub
add
push
cltd
and
in
mov
and
in
sbb
mov
push
xor
mov
jb
pop
loope
inc
paddusw
push
repnz
in
movsl
pop
test
or
fwait
test
sub
mov
cltd
sti
imulb
sub
rcll
pop
sbb
and
repnz
scas
cmpsl
cmpl
sbb
xor
jbe
inc
scas
mov
cmpsb
ss
sub
stc
ja
test
mov
jnp
jne
enter
push
lds
aaa
nop
sahf
pop
dec
movsb
cli
xor
dec
cmpl
cmp
xor
jmp
lds
mov
mov
jne
pushf
cmpsl
loopne
sbb
outsb
add
and
js
call
mov
jge
jno
push
dec
cmp
vmptrst
and
rol
mov
rorb
data16
sub
inc
mov
inc
mov
insb
dec
xor
xor
mov
inc
out
jne
push
loope
int
mov
in
sub
dec
and
or
into
lds
repnz
xor
xor
dec
js
lcall
aad
fnsave
or
jle
loope
pop
and
test
cli
and
bound
int
mov
scas
loope
rclb
rcl
mov
rcrl
mov
cmp
push
sbb
imul
jno
mov
sub
leave
add
xchg
xchg
push
aam
cli
push
adc
cmp
adcb
sbbl
or
mov
xchg
fsts
mov
sub
outsb
add
xchg
jg
sub
sarl
jecxz
aad
mov
lds
leave
add
stc
cmpl
mov
aas
in
outsb
scas
pop
je
ret
add
adc
nop
jns
lret
jl
adc
adc
cmp
imul
into
adc
jle
xorl
fimuls
add
xorl
pop
mov
adc
testb
dec
adc
sub
pop
mov
mov
mov
and
insb
out
xchg
xchg
imul
jnp
das
movsl
lock
in
notl
shlb
subb
cmp
int
lds
jl
and
or
insb
ffreep
inc
leave
inc
xchg
pop
mov
cwtl
mov
ljmp
pop
out
lods
pop
psubusb
cmp
js
ss
ds
call
rol
mov
loopne
aas
sub
push
xchg
je
rcrl
fdivs
inc
loope
lea
sarb
jge
cmp
sbb
out
loopne
out
mov
sti
push
das
xor
push
sub
inc
pop
cmp
out
pop
push
sub
data16
mov
xor
leave
dec
push
pop
shll
rorb
les
cltd
or
sub
sub
nop
in
dec
aas
sub
and
lock
and
pushf
cmc
sub
stc
inc
adc
call
in
and
mov
mov
shr
inc
dec
ror
mov
xchg
jge
js
notl
inc
mov
mov
sbb
mov
push
pushl
in
popf
mov
push
fdivrs
mov
xor
adc
imul
sarl
sub
sbb
cmp
roll
ja
lods
mov
ror
mov
dec
call
push
jecxz
sbb
fsubrl
mov
aas
jmp
mov
gs
clc
dec
ljmp
push
jp
std
sahf
dec
jle
mov
push
test
in
lods
pop
mov
aam
into
nop
repnz
add
jo
xchg
in
loope
mov
test
push
sub
mov
xor
in
sbb
jne
clc
lock
lcall
pop
adc
lods
sti
push
sub
adc
cmp
popa
outsb
inc
inc
iret
inc
fstp
add
or
xor
pop
rorl
push
push
cmpsl
aas
dec
sbbl
call
repz
mov
sahf
add
mov
stos
mov
lods
mov
or
fidivrs
dec
fistl
sahf
outsb
or
lcall
and
pop
pop
js
pop
fsubrl
lret
dec
or
fidivl
sub
insl
dec
loop
xor
scas
xchg
sarl
in
iret
sbb
in
mov
and
sti
xchg
xor
test
fadds
hlt
test
cmc
stos
sub
popf
std
stc
cmp
jne
and
xor
push
sub
mov
in
dec
addb
cmc
popf
or
mov
stc
jp
jno
xor
out
loope
js
outsb
and
fwait
and
std
insl
dec
mov
sbb
add
loopne
jbe
xor
inc
in
loop
pop
cmp
mov
sub
sbb
cs
arpl
shr
inc
jb
mov
add
adc
ljmp
push
cmc
mov
cmpsl
sub
fs
dec
fdivs
jne
pop
dec
mov
pop
inc
sbb
test
lret
gs
dec
dec
clc
out
outsl
cmp
lods
bound
and
call
ss
je
and
insl
test
lcall
bound
clc
jno
bnd
and
pop
imul
dec
push
sbb
dec
jge
jle
adc
push
add
in
out
cltd
pop
frstor
or
inc
or
fucomi
pop
ja
jge
loope
inc
cmp
popa
jnp
cmpsb
sti
in
sahf
nop
inc
inc
pop
arpl
mov
xchg
adc
pop
push
push
sub
lds
jae
popf
fwait
sub
mov
push
lock
mov
inc
push
lret
mov
stc
mov
lods
or
push
movsb
dec
into
mov
dec
adc
mov
lret
movsb
xchg
repnz
stos
sub
push
and
fs
cs
push
mov
mov
xchg
jl
jne
adc
xchg
test
in
je
ficoms
fldcw
pushf
daa
cmpsl
and
push
dec
cmp
and
and
imul
popf
fs
pusha
pop
cs
aam
in
outsb
jnp
mov
ret
sub
push
push
test
leave
jbe
or
or
ja
clc
xlat
lret
jle
jne
push
push
xchg
mov
xchg
sarl
rorl
sbb
xor
mov
js
push
sbb
test
xor
jg
cmc
hlt
cmp
test
and
frstor
or
cmp
shll
mov
dec
jp
jge
into
and
in
mov
mov
hlt
or
je
je
fimuls
jecxz
dec
movsl
sub
cmpsl
in
and
cltd
xor
cwtl
sub
xorb
cld
ss
xchg
add
inc
out
add
dec
in
dec
adc
lahf
mov
icebp
mulb
push
jo
push
shlb
imul
les
popf
and
cmp
fistl
inc
repnz
in
cmp
leave
cld
push
xor
add
jle
push
stos
mov
stc
ret
imul
es
repz
shl
or
mov
out
jb
pop
xchg
push
mov
mov
sub
je
repnz
stos
out
pop
push
in
inc
mov
push
lods
loop
and
scas
lock
push
xchg
push
cld
inc
jp
insl
push
push
popa
neg
add
cld
movsb
aam
sub
dec
daa
notl
add
xor
jns
pop
xchg
in
aam
mov
adc
jecxz
mov
fsubrl
cmpb
loope
js
cmp
jge
test
pop
repz
inc
jmp
enter
push
adc
jle
call
push
enter
push
add
pop
adcb
and
mov
xor
cld
add
pop
movhps
mov
filds
leave
sbb
nop
mov
insl
push
ja
aam
mov
addr16
dec
lret
adc
pusha
mov
int
test
cmpb
nop
jmp
arpl
out
xchg
ret
addr16
and
aad
outsl
jmp
cmp
mov
push
mov
fs
mov
mov
pop
push
add
adc
xor
fimuls
mov
adc
test
loop
sahf
pop
imul
dec
mulb
xor
pop
rcrb
sbb
mov
scas
lea
pop
sbb
sub
imul
mov
dec
stos
scas
adc
or
je
mov
cmpl
hlt
hlt
cli
mov
jl
stc
mov
cmp
repnz
xor
push
push
lods
mov
cmc
test
and
inc
mov
daa
test
daa
shll
scas
dec
jp
mov
mov
pusha
fs
xlat
cli
push
aad
out
pop
push
fdivrl
std
dec
pop
xlat
push
jne
xor
pop
popf
adc
iret
add
nop
and
js
sbb
inc
lock
setp
call
test
push
lret
and
pop
out
clc
push
add
stos
push
in
mov
mov
outsl
fstl
stos
jae
mov
js
and
cmp
mov
lods
jl
push
mov
dec
adc
lds
sub
rorb
xchg
jmp
or
mov
lods
out
stos
rcrb
clc
hlt
test
mov
frstor
js
or
jns
lret
pop
in
aam
movb
pop
scas
sub
jmp
inc
cmp
ret
pop
lret
add
outsl
and
sub
and
jns
jmp
pop
xor
imul
cld
dec
push
pop
xor
push
mov
mov
xchg
ds
mov
add
lds
adc
rcrb
mov
and
cmp
insb
in
push
inc
adc
fmul
and
cmp
sub
cmc
xchg
jne
mov
test
loope
mov
sub
and
push
inc
sbb
inc
jno
stc
push
push
or
into
inc
lahf
mov
jb
xchg
jae
stos
xor
rcrl
lret
arpl
jns
shlb
lcall
mov
dec
xchg
pop
lock
adc
fdivs
stos
outsl
jno
sbb
enter
jb
loop
les
adc
fsave
cmp
cs
ret
jne
je
and
lcall
lods
cmp
cwtl
and
mov
loop
test
rcrb
xchg
fdivrl
add
pop
mov
icebp
jg
and
sub
xor
sti
in
push
cmp
push
faddl
or
into
pop
mov
jb
fs
mov
rep
mov
testb
cmpsb
dec
test
or
ljmp
imul
dec
adc
repz
scas
push
xor
dec
cli
or
mov
mov
mov
push
shll
flds
jae
addr16
push
push
xchg
hlt
push
ret
outsl
cmpsl
xor
fbstp
js
add
sub
or
sbb
pop
inc
ret
je
xchg
xchg
call
repnz
push
inc
rclb
push
fwait
gs
adc
jge
mov
sub
or
jns
cmp
notb
enter
stos
out
jl
inc
jmp
mov
sub
ficoms
shlb
push
bound
and
sbb
mov
out
lahf
das
lods
pop
les
pop
mov
add
push
dec
rol
data16
xor
sahf
nop
xlat
sahf
cmp
in
mov
int3
or
xchg
mov
adc
mov
loop
aam
cmpsl
or
call
mov
testl
jo
cli
jmp
aam
pop
jno
lods
in
fcomi
imul
cmpsl
pop
sub
fwait
call
gs
mov
or
mov
fimull
lock
cltd
adc
jmp
jecxz
xchg
and
sbb
xchg
enter
aad
sbb
out
lret
testl
outsl
std
inc
push
aam
jne
push
enter
xchg
jne
mov
push
push
sbb
loop
mov
stc
add
rol
ficompl
xor
xchg
aas
adcb
mov
inc
lock
in
and
jl
call
ljmp
xchg
fwait
push
in
data16
cmp
lods
daa
pop
orb
dec
nop
push
ds
jp
call
ljmp
repz
inc
lahf
adc
icebp
icebp
imul
pop
leave
inc
mov
dec
test
mov
nop
mov
add
mov
addr16
iret
sub
out
cmpsl
pop
inc
movsb
mov
loop
pop
mov
mov
not
movsl
jnp
jo
mov
mov
inc
pop
rcrl
push
in
push
fsubl
sbb
xchg
dec
jp
push
arpl
jnp
lahf
mov
jne
aas
push
sar
lcall
dec
or
in
ret
add
xor
out
cltd
jmp
in
dec
mov
mov
jge
mov
cmp
fiadds
hlt
cmp
mov
push
or
imul
testw
mov
xchg
xor
int3
adc
push
ret
xor
jecxz
repz
repnz
data16
sub
pop
pop
ret
clc
imul
mov
dec
test
flds
jmp
push
dec
jno
xrelease
or
rcl
out
int
lds
inc
push
insl
xchg
lcall
popf
pushf
stc
stos
ret
in
out
stos
loopne
test
inc
xchg
cmp
push
sub
les
rorb
xor
movsb
out
xor
and
pop
fldl
xchg
or
enter
mov
mov
in
inc
pop
and
or
mov
lret
and
cmp
repnz
jno
int3
push
xchg
fs
and
mov
out
clc
in
adc
repz
inc
dec
adc
repnz
dec
sbb
imul
or
sti
cmpb
xorl
addb
mov
sub
fistpl
pop
popf
inc
std
push
mov
imul
xor
arpl
cwtl
in
and
das
adcb
jecxz
std
outsl
pop
sub
mov
cs
dec
clc
cmpsl
aas
sbb
or
sbb
in
push
xchg
out
jg
repnz
enter
push
cmp
repnz
je
xor
rcrb
lea
shlb
push
mov
enter
mov
lods
stc
imul
lret
fcomip
out
pop
xchg
adc
test
icebp
inc
jb
in
movsl
ret
std
xchg
nop
pop
movsl
iret
mov
sti
sbb
pop
pop
xchg
dec
mov
cmp
dec
sbb
sub
fwait
pushf
aam
mov
xor
aas
cwtl
jne
jb
movswl
jae
push
adc
xchg
mov
pop
mov
jmp
push
mov
push
xchg
insl
loope
mov
cld
pop
inc
jbe
cld
data16
mov
pop
mov
ljmp
pop
inc
ja
and
js
lds
xchg
xor
setns
sub
or
inc
push
pop
lret
mov
cli
dec
aaa
inc
js
jns
cmp
push
roll
push
mov
inc
sbb
mov
cmpl
fcmove
cli
inc
xchg
stc
cmpsl
inc
cmp
mov
hlt
insb
xor
addl
push
mov
prefetcht2
xchg
and
pop
arpl
mov
cmp
dec
jge
push
adc
pushl
dec
repz
add
mov
sbb
icebp
outsl
inc
mov
lods
nop
pop
xchg
aad
and
int
lret
pop
jnp
enter
push
inc
xlat
or
pop
add
fsubr
ljmp
cltd
mov
mov
repz
rsqrtps
imul
pop
cmovle
mov
pop
aaa
jecxz
jmp
mulb
xlat
ss
mov
inc
js
test
dec
sbb
lods
and
js
inc
jb
decl
cmp
icebp
call
je
dec
cmp
push
in
bound
fdivr
je
sbb
cmp
sti
mov
xor
push
stos
and
hlt
mov
cwtl
jno
jmp
mov
mov
ss
pslld
sbb
and
test
mov
cmc
jo
push
inc
jbe
repz
rcrl
dec
inc
out
push
or
jge
sub
daa
mov
mov
pop
push
inc
iret
inc
mov
lea
ja
jl
sub
or
jo
insb
add
pop
mov
cmp
mov
mov
add
repnz
jns
scas
sub
lret
xor
icebp
xchg
jle
xchg
int3
cld
inc
lea
lods
lret
mov
aad
ljmp
xchg
cmpsb
xor
push
push
shll
js,pt
pop
imul
aaa
mov
and
adc
adc
mov
lahf
and
xor
icebp
inc
pop
decl
xor
xor
jbe
xchg
jmp
fsubrs
xchg
mov
adc
pop
out
movsb
pop
sub
test
iret
xchg
and
push
insl
fisubrl
pop
mov
inc
pop
pushf
mov
mov
outsl
jecxz
xchg
shlb
cmp
das
subl
inc
jg
inc
rolb
cmp
les
scas
cmp
stos
insl
jnp
mov
add
fdiv
and
clc
fs
pop
in
sub
mov
mov
lret
icebp
cmp
and
dec
hlt
mov
mov
push
mov
xor
daa
jbe
mov
push
fidivrs
add
pop
mov
jbe
ljmp
jl
inc
loop
test
sbb
shr
mov
or
movl
into
jle
adc
nop
pusha
mov
mov
icebp
add
out
inc
insb
mov
cmpb
mov
in
aad
add
cmp
cmp
fisttpl
pop
ret
lods
aaa
add
rcrl
inc
sbb
xor
loop,pn
jbe
rcrb
mov
sub
movsb
addr16
sbb
jmp
popa
out
inc
inc
lds
mov
lret
push
jb
pop
sub
int3
cmpsl
dec
cmc
ds
adc
and
cmp
jbe
mov
loop
fdivrs
and
dec
adc
fyl2x
bt
push
cli
dec
fnstcw
xor
xchg
leave
xchg
xchg
and
stc
jae
mov
push
addr16
pop
sub
jmp
xor
add
out
jbe
inc
lods
test
lods
dec
add
loopne
mov
repz
fnsave
out
or
xchg
mov
and
or
loopne
push
jecxz
xchg
jbe
pushf
xchg
test
mov
ja
adcb
sarb
mov
push
jmp
push
mov
orps
test
in
xlat
push
adc
cmp
or
lret
inc
and
jno
dec
and
out
jecxz
gs
movsb
loop
push
imul
imull
imul
data16
addr16
sbb
incb
aaa
cmp
jmp
mov
jae
adc
push
iret
ss
repnz
loopne
cmp
lds
jecxz
fimuls
xchg
mov
test
jmp
add
lods
mov
push
xor
sub
push
sub
jle
out
adc
mov
fwait
push
ret
sar
stos
addr16
mov
xchg
outsb
subl
stos
mov
insl
ss
dec
mov
verr
pop
mov
inc
stos
xchg
scas
xchg
cmpsl
js
movsl
cwtl
xor
xor
stos
mov
xchg
lock
stos
cwtl
xchg
inc
jnp
push
sbb
xor
loop
ss
and
mov
and
pop
data16
xchg
or
add
mov
or
jne
jmp
pop
out
pusha
and
ss
es
pop
xchg
sti
popa
cmp
fs
ss
shr
add
rcrb
add
mov
loopne
out
pushf
add
or
test
imul
jmp
push
scas
xor
adc
fimull
dec
mov
in
in
inc
sahf
or
pushf
sti
insb
lahf
sub
mov
imul
mov
xchg
imulb
inc
jo
sub
aas
es
mov
aad
daa
stos
vcvtsd2ss
inc
pop
ss
pop
sbb
sub
push
dec
loope
and
mov
test
fistps
aam
in
push
cli
dec
jmp
cmpsl
xchg
shlb
xchg
xchg
les
or
pushf
imul
mov
jg
mov
movsl
movsl
pop
shl
mov
out
shl
mov
stos
push
cli
xlat
jo
cmpsl
orl
add
imul
push
lods
or
xor
ss
pop
out
lods
clc
sbb
push
sti
jno
adc
dec
pop
mov
jmp
sub
popa
test
stos
stc
xor
push
push
nop
inc
sub
lret
adc
jecxz
xchg
pushf
xchg
cmp
pop
jnp
lods
adc
inc
in
add
loop
adcb
xchg
add
mov
scas
aad
sub
cld
and
cmp
pop
cmp
inc
adc
pop
mov
insl
iret
lods
jne
fwait
mov
out
mov
add
pop
dec
dec
or
shlb
sbb
mov
and
jmp
aad
xchg
adc
mov
jbe
js
inc
sub
adc
xchg
js
pushf
mov
stos
push
pop
adc
out
sub
dec
test
enter
fstp
sub
xor
arpl
pop
sbb
sbb
shlb
push
shrb
sub
out
call
jno
sub
into
xchg
cmp
sbb
stos
or
sub
jo
icebp
adc
jo
or
mov
mov
fisubl
loope
enter
pop
les
imul
pop
cmc
daa
or
lods
scas
or
push
sub
jno
pop
inc
or
aaa
aad
movsb
and
adc
sbbb
sub
lret
sub
adcb
push
fimuls
jmp
aas
out
in
fwait
out
out
cmp
mov
cwtl
dec
nop
lea
xchg
frstor
adc
jno
add
dec
or
dec
fmuls
pop
in
int
es
lods
cmp
in
cs
push
inc
cmp
outsl
inc
inc
dec
adc
lods
add
fisttpll
add
inc
out
daa
push
fdivs
jne,pt
out
sub
sub
ja
aad
push
add
shll
inc
aaa
jmp
jle
or
mov
int3
adc
sbb
mov
popa
inc
aam
cli
adc
pop
mov
push
loope
inc
enter
jbe
mov
adc
les
sub
fldt
movsb
dec
pop
jnp
xchg
cmp
jae
push
xchg
fsubrs
int3
jmp
dec
mov
pop
sbb
mov
faddp
test
jl
mov
fisttpl
daa
mov
dec
adc
add
imul
daa
mov
jl
fcmovnbe
scas
adc
ljmp
adcb
data16
cld
outsl
popa
cmp
xchg
repz
andb
sbb
sub
add
cmp
jmp
pusha
in
mov
popa
mov
test
lods
cmp
push
int3
inc
cli
inc
mov
pop
idivl
data16
mov
adc
frstor
cs
pushf
insb
arpl
and
mov
out
pop
lret
popf
push
lret
sbb
pop
sti
push
ja
mov
dec
mov
outsl
xor
in
pushf
lds
icebp
mov
cmp
out
xor
xor
sub
out
and
mov
pop
cli
scas
insb
inc
xchg
shrl
or
cs
pushf
in
mov
add
fiadds
mov
ja
ja
lock
push
jae
mov
dec
mov
or
arpl
pushf
fcompl
out
dec
sbb
gs
jnp
stos
cmpsl
pop
mov
rcrl
stos
shrl
jmp
xchg
js
faddl
mov
jbe
aas
adc
lcall
sbb
scas
mov
mov
int3
add
xchg
test
stos
add
test
lock
pusha
mull
pop
shr
jo
cmp
jmp
lahf
jp
int
cmp
out
mov
inc
or
jno
rolb
test
stos
or
jmp
mov
lret
or
and
scas
xor
inc
sahf
test
popa
movsl
dec
mov
xlat
ret
dec
decl
xlat
sbb
xchg
mov
pop
cld
adc
rcll
mov
xlat
mov
fucom
gs
xchg
mov
jp
in
xchg
bound
inc
in
into
int3
fistps
or
ret
out
inc
or
dec
rcll
inc
out
jne
stos
lahf
in
add
aas
enter
in
ja
pop
jmp
dec
in
xchg
cld
out
lods
cmp
leave
mov
sbb
and
ror
mov
lods
mov
lea
mov
call
popa
pop
cmc
dec
push
idivb
xchg
add
shl
jbe
push
xchg
outsb
jle
test
sub
dec
int
xor
pop
push
cmp
pop
cmp
out
dec
add
cli
popf
mov
pop
or
pop
xlat
shr
fidivrs
lds
aam
xor
sub
push
mov
pusha
test
dec
jns
push
jno
decb
in
icebp
push
pop
pop
insl
lret
fwait
jge
in
aam
inc
out
repnz
cli
push
and
sbb
mov
je
adc
fmul
jnp
lds
insb
xchg
push
mov
cltd
mov
scas
pop
mov
out
aas
sbb
xchg
scas
outsb
nop
sbb
popf
or
and
jmp
std
incb
icebp
jbe
test
mov
enter
sbb
int
or
enter
add
jmp
jns
cmpsl
push
mov
out
dec
lar
sbb
mov
sbb
mov
or
mov
imul
outsl
js
lcall
and
repz
daa
repnz
out
in
cltd
aas
lret
mov
ss
pop
push
rcrb
pop
adc
mov
xchg
ret
nop
jecxz
xor
rorb
shl
sbb
jmp
pop
add
shll
pushf
stos
je
pop
or
stos
push
jnp
xor
jle
sub
mov
xorb
pop
and
ds
leave
add
inc
add
or
lods
bound
into
movsb
push
not
pop
iret
loope
inc
xchg
add
or
fisubl
or
mov
pop
fwait
adc
xchg
loopne
lods
xchg
jo
fmuls
mov
in
dec
mov
jecxz
add
jle
push
std
idiv
mov
add
dec
mov
xchg
inc
mov
jmp
scas
test
adc
lods
and
mov
dec
add
adc
lock
dec
sub
loopne
xor
ficompl
and
cmp
shl
jno
xor
mov
mov
pop
notl
push
shll
cmp
jns
add
idivl
popa
iret
pop
sahf
negl
push
mov
push
sahf
mov
rcrl
add
dec
sub
repnz
aas
dec
mov
test
data16
adc
loopne
mov
or
dec
dec
or
jmp
stos
insb
lret
dec
daa
xlat
pop
aaa
xchg
add
ret
jl
sub
fstps
in
outsb
andb
pop
stos
cmp
ror
sahf
jg
orl
out
std
pop
inc
fcompl
mov
sbb
popf
imul
mov
lahf
jg
push
divb
adc
mov
inc
sarl
sub
pop
inc
pushf
and
mov
and
ja
mov
data16
adc
mov
and
sbb
mov
mov
enter
arpl
je
movsb
push
pop
xchg
inc
leave
mov
fwait
dec
les
outsb
jnp
sahf
ss
cmp
cmpsb
dec
std
sbbl
xor
filds
or
mov
je
rsqrtps
jle
sbb
fisubrs
sub
push
lret
and
es
test
sbb
mov
adc
or
ret
mov
stc
sbb
out
adc
jmp
cld
in
int
mov
cmp
mov
test
inc
inc
arpl
xor
xchg
mov
dec
inc
in
cld
lds
xor
jge
mov
out
fwait
mov
and
js
push
mov
das
fsts
xchg
ds
cmpb
mov
pop
fdivs
jmp
mov
sub
mov
mov
mov
adc
mov
loope
lock
cmpsl
lret
movsb
sub
pop
add
insb
push
jl
popf
cmp
sub
ret
arpl
add
mov
aad
idivl
adc
xchg
xchg
inc
and
fdivs
pop
jg
gs
add
cmpsl
pop
je
pop
adc
push
cmp
or
dec
mov
addr16
or
dec
std
iret
mov
repnz
xchg
outsl
sbb
lret
js
lea
cld
lcall
and
adc
call
pop
stc
fdivs
std
push
rcrb
and
jae
aas
xchg
pop
add
sahf
push
sti
push
jns
adc
clc
cmpl
mov
inc
sbb
stc
xchg
ja
sbb
mov
popa
in
cmp
mov
xorb
jl
call
popa
andl
jmp
in
add
jns
add
mov
push
cli
insl
dec
mov
outsl
jecxz
out
pop
sbb
push
jl
or
cmc
aas
test
ja
rcrl
lds
push
sahf
mov
repz
sub
push
inc
es
fs
movsb
push
jmp
sti
push
xlat
mov
addr16
fidivl
mov
std
jecxz
jbe
xor
inc
sub
je
push
or
xor
shlb
nop
stos
mov
rolb
ss
pop
aas
repnz
mov
rorb
xchg
fs
cltd
mov
test
cld
dec
testl
stos
std
icebp
test
mov
xchg
xor
sbb
int3
cmc
mov
xlat
mov
mov
test
popa
cmc
cmpsl
push
sbb
aas
mov
adc
jae
xor
roll
add
cmpsl
cmp
mov
or
pop
cltd
cmp
mov
jecxz
out
lds
aam
orl
repnz
mov
sub
add
cli
mov
dec
mov
mov
pop
push
sbb
es
inc
loop
push
hlt
mov
decl
and
lcall
leave
push
es
pop
xchg
pop
hlt
sub
jbe
mov
ljmp
mov
inc
xor
mov
les
ficoml
sbb
dec
push
xchg
cmpl
sti
add
sbbl
sbb
mov
lds
in
add
adc
and
shr
scas
adc
call
push
dec
xchg
cmpsl
cs
push
lahf
add
mull
les
xchg
mov
rol
insb
popa
test
sbb
or
loopne
inc
xchg
mov
sub
adc
dec
dec
sbb
repz
cmp
cmpsl
movsb
ret
fldcw
cmp
fbstp
jecxz
or
enter
fwait
jmp
mov
stos
xor
lret
jnp
ds
xor
outsl
mov
lcall
mov
xor
push
mov
mov
mov
ljmp
push
aad
jge
sbb
xchg
faddp
mov
imul
xor
xor
adc
xor
mov
insb
mov
xchg
mov
cmp
imulb
adc
addr16
cmp
lcall
cmp
fldenv
sub
xor
mov
testb
shrl
mov
jg
cwtl
scas
dec
out
xor
fsubrp
in
adc
add
xor
fistl
movsl
rol
xchg
out
fcomps
out
jns
pop
ror
mov
mov
xor
adc
addl
ficoms
sub
lret
or
rcr
movsb
fisubrs
jge
mov
push
xchg
mov
dec
cmpsb
xor
and
cld
js
icebp
xor
pushf
inc
cmp
lea
test
iret
enter
or
mov
dec
stos
mov
jecxz
mov
jne
pushf
inc
dec
icebp
verr
scas
scas
sub
mov
mov
lcall
jne
jb
push
call
xlat
ret
cmc
call
cmp
int
mov
xlat
cs
push
rolb
and
pushw
popf
xor
cmp
push
cmp
jge
ja
xchg
push
faddl
cmpsb
popa
roll
push
mov
addr16
int3
ds
jb
dec
loope
imul
mov
movsl
ret
clc
imul
ja
cwtl
out
xchg
les
adc
popw
ds
jmp
js
aas
test
ret
scas
int3
ja
rclb
inc
cmp
stc
shl
shr
or
and
cmp
add
shr
aaa
and
dec
or
xor
jae
xchg
ret
lea
shrb
test
xor
jg
int
in
mov
sub
hlt
xchg
mov
inc
and
mov
adc
dec
imul
pop
add
push
lahf
sbb
fs
add
cmpsl
or
outsb
jecxz
iret
mov
jmp
out
jno
dec
ja
add
fidivs
add
out
insl
add
movsl
adc
std
dec
xor
stos
.byte
or
push
movsl
sbb
mov
add
xchg
in
movsl
xor
ret
lcall
pusha
or
inc
sub
inc
testb
push
xchg
in
jmp
fwait
pushf
movsb
mov
xlat
ss
fistpl
decb
sbb
or
pop
mov
mov
ljmp
or
pop
out
adcl
cmpsl
sub
sub
out
stos
adc
adc
sub
sub
mov
pusha
sarb
loop
pop
jl
loopne
jp
or
cmc
pop
mov
ret
xchg
test
sub
dec
jb
lock
mov
into
lret
pop
pop
lcall
pop
cmp
sbb
mov
fnstenv
nop
lock
add
lods
call
sahf
aas
or
rol
aam
ss
xor
sahf
adcb
pop
add
mov
or
loopne
sti
and
add
movsb
in
push
pusha
negl
test
ret
jmp
dec
shrd
dec
movsb
push
dec
hlt
dec
ret
in
mov
xor
or
push
jne
imul
mov
sbb
in
ljmp
ja
enter
sahf
cmc
jmp
or
pushl
call
add
into
cld
inc
jne
fs
int
jl
movsl
pop
and
xor
rcrb
xor
cli
xor
or
sarb
jnp
sbb
mov
pushf
js
mov
pop
rcl
xchg
push
pand
cs
in
xchg
pop
jbe
jmp
jbe
pop
and
negl
mov
jb
add
test
xor
sub
and
flds
mov
clc
nop
scas
in
sbb
mov
jo
into
icebp
jb
jo
orb
jo
adc
je
jp
inc
clc
xor
add
xor
sub
and
icebp
push
sub
ja
mov
cmp
jne
xor
inc
fbld
aad
into
sub
push
jae
push
hlt
cmp
xchg
push
addr16
cwtl
int
jge
pop
mov
pop
dec
negl
or
add
mov
mov
sub
mov
imul
bnd
out
fsubrs
out
sub
xchg
into
push
mov
add
add
nop
or
enter
sub
adcl
push
js
ja
jnp
push
shrb
mov
adc
fisttps
push
push
pop
rclb
aam
ljmp
sbb
imul
cmpsl
sbb
imul
sub
cmp
daa
dec
das
dec
les
lods
jae
pushf
add
jle
pop
insl
mov
xchg
test
pop
cs
jp
xor
outsb
mov
mov
lea
mov
dec
xchg
pop
jmp
dec
push
pop
cmpxchg
inc
or
inc
call
inc
loope
jne
dec
fwait
jg
push
mov
in
rcrl
mov
hlt
ss
mov
pop
add
jle
xorb
fsubl
push
pop
pop
popf
mov
and
cltd
aaa
pop
sbb
jle
loopne
loopne
and
mov
insb
adc
outsl
and
in
pop
cmpsb
dec
mov
gs
xchg
jb
in
sarb
rolb
mov
dec
enter
adc
nop
add
mov
push
clc
bound
xchg
movl
xchg
dec
sub
pushf
popf
sub
mov
xrelease
pop
cli
inc
mov
xor
add
sbb
jge
inc
lds
ds
mov
dec
mov
sub
xchg
lods
sti
push
push
ror
mov
shll
dec
sbb
sarl
cli
xor
pop
sbb
rcrb
ds
loopne
hlt
jo
fidivrs
stos
popl
scas
dec
sarb
imul
call
push
inc
rcl
jp
je
push
inc
dec
xchg
aaa
push
xor
pop
mov
add
pop
imul
das
xchg
sarb
loop
ret
data16
dec
movsb
xchg
inc
xor
out
jns
and
inc
cltd
and
out
rclb
repz
movsl
movsb
js
jnp
test
mov
dec
lahf
cld
mov
mov
push
mov
sbb
pop
cmp
jne
aaa
xchg
push
xchg
arpl
scas
mov
insl
popa
xchg
test
loop
jnp
or
psubw
xor
arpl
aam
stos
or
call
into
dec
pop
fstl
loope
and
repz
popa
fidivl
or
sbbb
dec
pushf
in
mov
dec
orl
sarl
push
cmp
aad
test
jnp
int3
add
cmp
lods
lods
push
lea
dec
mov
sbb
mov
int
jg
inc
fsts
pop
cmc
lods
dec
sub
dec
cli
out
je
push
adc
inc
mov
ss
sub
sub
outsl
add
xor
idivl
ret
dec
jmp
xchg
xor
sbb
mov
daa
xor
icebp
sti
cld
aad
dec
push
mov
cwtl
push
xchg
adc
dec
fucomi
push
xor
mov
adc
fdivl
movsl
shrl
rorl
into
popf
sub
pop
dec
daa
mov
ret
cs
loopne
popf
outsb
and
scas
das
ljmp
popf
mov
dec
push
aaa
loop
pop
xchg
mov
and
sbb
je
sbb
cli
jle
subl
stos
jns
mov
mov
gs
mov
or
mov
jbe
lea
aaa
dec
dec
mov
xchg
dec
hlt
fs
test
cmpsl
mov
stc
mov
lds
int3
testl
jle
xchg
inc
xor
jno
dec
sub
rorl
popf
clc
das
leave
test
dec
mov
pop
pop
es
and
lcall
push
ljmp
push
addr16
inc
adc
add
sub
mov
mov
mov
and
jnp
xor
rorl
std
imul
shl
out
testb
aaa
sbb
mov
je
adc
and
mov
add
adc
movsb
inc
mov
adc
and
xchg
cltd
and
xchg
dec
xchg
sub
push
insl
mov
xchg
mov
inc
add
in
fwait
mov
push
lock
cmp
push
cmp
decl
lret
pop
das
ja
jle
shrl
cwtl
xor
adcb
pop
rorb
cli
mov
cmp
sti
xchg
jb
inc
out
and
mov
aad
call
adc
jne
or
inc
dec
hlt
xor
cmpsb
int
pop
xor
or
jae,pn
popf
or
sub
inc
jnp
mov
icebp
push
jle
out
xchg
xchg
xchg
mov
sbb
mov
add
push
inc
cmpsb
and
mov
inc
insb
adc
mov
aam
dec
mov
out
adc
ret
and
lret
xor
inc
pop
xor
add
pusha
pop
push
mov
lock
in
lds
clc
dec
mov
popf
movsb
jnp
sub
clc
popa
test
cwtl
ljmp
fmull
mov
hlt
jmp
int
push
cmp
imul
adc
sbb
inc
out
or
clc
repz
xor
int
and
cmp
jp
xchg
xchg
into
xor
jmp
lret
jle
fwait
repnz
push
xchg
test
push
leave
mov
mov
pop
je
loopne
jo
in
push
stos
xchg
push
je
fldcw
sbb
push
or
fs
lret
jbe
loopne
mov
ret
xor
push
push
adc
pop
lds
fidivs
mov
or
rdtsc
ret
push
dec
rcl
push
adc
cmp
fcomps
push
xor
jl
sbb
cmp
clc
sub
mov
pop
popf
and
mov
xor
jbe
xchg
std
mov
lods
arpl
push
pop
ljmp
jbe
mov
lods
adc
lret
je
sbb
inc
out
or
cwtd
dec
shr
sbb
jmp
cmc
outsl
repnz
cmp
push
shl
repz
dec
dec
xchg
flds
mov
fsubs
popa
mov
cs
xchg
aad
cmc
push
or
and
and
popa
cmpsb
jo
lock
les
leave
xchg
bnd
ret
xchg
mov
sti
push
out
icebp
leave
daa
sbb
je
rdmsr
rorb
nop
mov
mov
pop
sub
and
or
dec
arpl
cli
or
lods
mov
dec
xorb
andb
push
roll
shrb
sarb
xchg
std
mov
imul
xor
mov
lods
ja
ljmp
aaa
mov
int3
mov
cs
mov
dec
sbb
push
movsl
xor
aam
hlt
mov
inc
iret
mov
xor
mov
cmc
cmc
inc
mov
in
rolb
popa
jno
shll
inc
push
insl
pusha
scas
inc
xchg
mov
bound
inc
add
pop
shlb
stc
and
ljmp
xchg
xor
sarl
test
inc
jne
cmc
sti
mov
call
hlt
bswap
mov
notl
dec
push
fcomi
xor
repnz
pop
sub
or
enter
mov
adc
imul
jo
in
out
mov
dec
int
aaa
orb
add
xadd
xchg
cld
and
pushf
lret
rorl
sub
sbb
int
cmp
mov
out
jbe
mov
mov
and
rcll
mov
out
sub
mov
push
mov
and
data16
push
adc
cld
mov
dec
jl
xchg
push
test
adc
adc
rorb
mov
mov
popa
fcompl
test
xor
ret
lods
or
ss
ja
mov
cltd
cld
mov
mov
notb
insb
ss
outsl
fisttps
shll
mov
mov
pop
push
xor
imul
mov
and
stos
push
and
lret
cmp
jno
dec
int
sbbb
push
xor
testl
sbb
cmp
jl
scas
jne
fs
xchg
imul
jmp
mov
popa
mov
insb
adc
fs
outsb
xor
sbb
loop
aad
cli
xlat
mov
mov
push
lahf
add
outsl
cmpsl
cmp
mov
push
cmc
sub
xor
mul
loop
add
xchg
xchg
mov
mov
aam
jno
mov
inc
dec
pop
jl
cmp
iret
sub
push
push
adc
int
adc
pop
xchg
inc
imul
lods
xor
jno
cmp
push
push
enter
jge
sbb
ret
adc
and
sbb
inc
imull
sub
xlat
push
adc
cmp
clc
shll
push
hlt
inc
mov
in
ficoms
stos
xchg
stos
test
dec
andb
nop
cltd
divl
ja
push
and
gs
push
int
enter
cmp
push
push
sub
or
cwtl
push
xor
leave
in
out
or
jle
stos
xor
push
xchg
pop
pop
jmp
mov
pop
je
pop
clc
shll
ret
shlb
cmp
lock
ss
fcmovne
xchg
pop
mov
in
or
loope
and
out
ret
test
jl
idivl
and
and
test
jge
daa
push
mov
in
call
jg
test
or
fnsave
lahf
mov
fcoml
lea
adc
aam
lret
mov
call
loopne
mov
cmp
addr16
jne
shl
pop
ret
jns
loop
xchg
mov
fildl
xor
sub
jb
lret
push
mov
jge
nop
mov
push
add
fidivl
jb
jno
test
inc
and
inc
insl
xorb
pop
push
insb
xchg
mov
ljmp
ss
mov
mov
inc
jns
scas
sub
or
xor
pushf
data16
push
xor
or
add
or
jle
cmpsl
sub
sbb
adc
pop
adc
inc
inc
mov
mov
cmpsl
in
pusha
dec
cmpsb
mov
jb
xor
xor
orb
mov
ja
fsubr
es
jecxz
jns
stc
jnp
popf
lea
pop
push
in
enter
xlat
cmpsb
fmul
mov
cmp
pop
outsb
jno
inc
mov
jne
add
fistpl
scas
xchg
xor
pusha
mov
xchg
mov
cmp
inc
adc
pushl
sbb
mov
out
jno
push
aaa
cmp
jecxz
xchg
xchg
cmc
outsl
rorb
mov
dec
jg
inc
adc
repz
fcmovne
in
in
mov
mov
dec
fcomi
mov
setno
and
call
call
mov
adc
idivb
pop
fstpt
int3
sbb
das
out
sbb
aam
aaa
movsb
or
inc
or
jae
inc
sarl
pop
mov
mov
stos
std
push
loopne
outsb
add
inc
inc
mov
sbb
xlat
fs
mov
imul
push
inc
icebp
pop
pop
cli
add
pop
and
loop
pop
call
pop
cmp
loop
inc
lods
aaa
or
mov
test
push
imul
xchg
ret
movsb
push
inc
adc
mov
lcall
es
fs
inc
cmp
das
into
clc
test
and
cmc
dec
mov
pop
stos
inc
ret
test
faddl
movsb
sbb
hlt
fisubrl
je
je
adc
pop
in
sub
and
sub
jp
jl
push
pop
ret
cmp
ffreep
cmp
jnp
pop
std
out
out
loopne
stc
dec
movsl
sbb
shlb
push
cli
xchg
cmpb
mov
lock
jno
mov
jecxz
fistl
inc
inc
test
cli
mov
or
mov
mov
add
xor
xchg
iret
ret
inc
mov
sub
fimuls
mov
mov
sub
push
lea
add
imul
mov
inc
jno
stos
push
rol
xchg
mov
xchg
xchg
mov
daa
jmp
call
inc
xor
inc
aam
lret
sbb
push
es
in
xlat
in
mov
rorl
sarb
les
clc
rolb
dec
xor
popl
vrcpss
mov
outsb
shlb
outsb
add
xor
in
xor
nop
inc
jle
dec
mov
insl
subb
pop
jge
nop
aaa
mov
xchg
mov
icebp
cmc
icebp
dec
or
lea
dec
stos
push
ret
jle
dec
cli
push
popf
pop
sub
dec
insl
scas
in
xlat
dec
int3
jo
inc
imul
pop
xchg
and
xchg
fisubs
movsl
cmc
out
or
mov
sbb
lock
test
jmp
data16
jbe
dec
pop
sbb
sti
add
scas
mov
push
inc
sub
leave
sahf
sahf
add
aad
inc
add
mov
jp
stos
xor
sub
jne
xor
hlt
xchg
sbb
xchg
insl
pop
or
or
pop
ds
sbb
arpl
in
pop
test
jg
es
push
pop
js
test
popa
xor
push
adc
bound
ja
mov
outsb
add
and
xchg
and
test
adc
movsl
lcall
jae
in
cld
ficomps
xchg
arpl
push
aaa
stos
orb
loopne
adc
pop
in
add
jg
push
add
mov
mov
mov
aaa
fcomps
pop
cld
pop
fnstsw
rol
xchg
xchg
sbb
iret
xchg
and
pop
lgs
addr16
fidivrs
sub
add
daa
sbb
and
or
out
lcall
pop
xor
cmc
push
and
and
andb
leave
sbb
js
push
jmp
mov
mov
push
cld
outsl
and
inc
or
cltd
rorb
jg
popa
dec
jg
sbb
mov
aas
cmpsl
mov
les
ret
jb
loope
outsb
xchg
sub
adc
sbb
add
dec
lea
pop
pop
lret
idiv
js
sbb
xchg
loop
test
int3
or
in
data16
stc
jecxz
rcrl
imul
pop
mov
mov
push
loop
mov
lock
or
mov
in
cmc
call
push
mov
repnz
pop
mov
xor
dec
cmp
dec
movsb
cmp
inc
arpl
ds
push
xor
insb
mov
push
insb
or
push
icebp
repz
pushf
xor
mov
mov
adc
out
or
das
xor
adc
pop
xchg
and
fisubrs
mov
sub
arpl
cmp
jbe
jns
repz
push
jae
sub
or
leave
lahf
loop
dec
mov
movb
lock
mov
adc
mov
dec
and
test
sub
aad
mov
jl
xchg
js
adcl
rolb
loop
repnz
and
xlat
icebp
xor
dec
shrb
pop
adc
mov
dec
subl
pop
pushf
call
shl
imul
add
add
clc
loop
push
add
inc
adc
jns
adc
shr
dec
shlb
sub
lock
repnz
push
add
and
mov
adc
sub
xchg
mov
cmp
mov
adc
jl
popa
jno
sub
mov
das
shll
and
adc
add
add
pop
cmp
nop
mov
pop
or
rorl
xor
outsl
insb
mov
lods
pop
dec
jbe
into
insb
rcl
jmp
and
jp
adc
adc
jo
gs
mov
cmp
popf
addr16
popa
mov
cwtl
adc
test
add
dec
lret
ja
pop
aad
sbb
mov
inc
pop
cmpl
ret
cmp
mov
enter
outsb
dec
push
das
adc
sbbl
aas
movups
push
or
or
cmp
pop
iret
inc
jp
mov
sub
and
lods
or
movsb
pop
loop
add
or
loope
shll
fisttpl
js
push
outsb
xor
sbb
imul
lahf
outsb
adc
cld
scas
dec
hlt
in
stos
rcr
mov
psubq
or
stos
mov
mov
xchg
adc
xor
adc
push
addb
pop
jge
jo
xchg
test
pop
mov
push
cmp
fbstp
push
cld
cmp
xchg
inc
push
inc
sbb
jl,pn
out
fwait
std
idivb
int3
cli
rcrb
pop
inc
cmp
xchg
mov
insl
xor
les
aaa
subl
sbb
or
cmp
mov
push
xor
lods
adc
lcall
inc
pusha
into
jb
fnstenv
push
pop
inc
stc
test
stos
xchg
or
pop
and
lea
fs
ret
sarl
lret
cld
adcb
lcall
cmp
pop
jno
add
jnp
sbb
jmp
aas
andb
ret
xchg
in
jge
ret
lea
jecxz
sbb
jae
sti
mov
jnp
pop
jg
adc
insl
jb
mov
rcl
jb
xchg
sub
sub
pushf
xor
out
lret
mov
cmp
in
outsl
inc
ds
inc
push
pop
push
jnp
repnz
repz
inc
cmp
cli
adc
cmp
push
ja
dec
and
xchg
dec
stos
cmpb
sbb
mov
mov
add
push
call
fsts
dec
mov
frstor
test
adc
mov
cmp
repnz
inc
mov
out
ficoml
mov
dec
add
enter
or
mov
sub
call
jbe
mov
rcrb
mov
leave
xchg
pop
jg
jg
push
or
popa
add
out
sahf
jb
ja
adc
lahf
mov
xchg
jge
bt
sarb
jns
pop
push
test
inc
std
sbb
mov
sub
or
test
test
mov
jnp
cmp
or
xchg
pop
pop
cli
xor
jmp
mov
mov
das
lods
dec
je
jmp
cmp
test
dec
lock
sti
mov
pop
inc
clc
rcl
mov
test
mov
es
stos
int
aas
leave
rorb
dec
repnz
push
dec
dec
cltd
push
cmp
inc
inc
js
xchg
dec
or
xchg
xor
and
or
andl
out
mov
pop
adc
cmc
out
cmc
pop
movsb
ljmp
dec
int3
sbb
stos
mov
je
adc
dec
jmp
push
jecxz
add
mov
sbb
and
mov
cmp
test
mov
lods
outsb
pop
cmpsl
jle
data16
.byte
and
add
mov
xchg
mov
iret
add
outsl
adc
aad
repnz
mov
or
call
addr16
in
mov
push
jmp
jge
jns,pn
lods
xchg
ja
test
add
mov
and
pop
cmp
and
jne
dec
fs
sbb
or
mov
sub
xchg
repz
aad
jle
sub
in
sub
add
sub
pop
movsb
jle
in
dec
out
aaa
inc
clc
outsl
daa
push
push
xchg
mov
pop
inc
popf
bnd
popf
xchg
xor
loop
pop
jmp
fs
push
cs
sarl
inc
adc
xchg
cs
or
xchg
xor
pop
push
int3
cmp
add
lret
cmp
imul
adc
mov
add
mov
push
filds
iret
call
das
jp
sub
rcl
into
adc
push
fwait
add
test
add
xchg
xor
pop
adc
imul
in
repz
out
movsl
dec
xchg
xor
adc
xor
jl
xor
adcl
test
adc
jge
xchg
mov
xlat
cmpsl
sahf
add
pop
push
sub
sub
pop
dec
ljmp
lock
mov
clc
fcompl
lret
dec
lcall
lcall
repnz
pop
dec
xor
clc
adc
push
sub
and
dec
daa
sub
hlt
xchg
xor
and
push
adc
jnp
cmp
outsl
in
pop
pop
ds
neg
mov
mov
sbb
or
outsl
xor
rorb
cmp
hlt
xor
xchg
dec
aaa
sub
jnp
push
add
cmpsl
addb
add
mov
icebp
mov
rcrl
bound
pop
jl
sahf
in
gs
mov
popf
rclb
mov
mov
jbe
pop
cmpsb
das
out
or
jno
add
sub
loop
mov
pushf
insb
pop
sub
dec
sarb
rcll
mov
rorb
sub
loope
inc
stos
lahf
outsl
push
cmp
push
pop
in
ja
mov
mov
mov
jns
mov
push
and
movsl
sub
ss
fbld
nop
iret
pop
jae
mov
movl
icebp
push
stos
sub
cmp
jg
pusha
jmp
add
pop
xor
jmp
or
stos
pushf
fcoms
sbb
shrl
ret
mov
xor
das
stos
xchg
add
or
jle
pushf
dec
jo
mov
leave
pop
sbb
mov
je
xor
aam
mov
sub
xchg
pop
enter
dec
cmc
or
mov
cmpsb
hlt
jmp
mov
mov
sub
xor
sub
scas
nop
scas
pop
out
mov
cmp
sub
ds
dec
sub
clc
mov
dec
sub
popa
mov
or
sub
aaa
mov
cmp
test
jne
cmc
cwtl
out
shrb
sahf
add
mov
lret
fnstcw
push
dec
in
and
fistps
lea
cs
add
js
cwtl
fdivr
sbb
insb
sub
pop
mov
adc
out
repnz
leave
popl
out
adc
adcl
xchg
push
and
or
xorl
ss
adc
push
imul
fcoms
push
iret
xchg
andl
into
mov
xchg
or
imulb
mov
adc
or
adc
fldenv
add
xchg
test
inc
and
cmc
sub
pop
fiaddl
call
ds
fs
shrl
popf
das
cmp
les
pop
sub
mov
mov
lea
je
mov
ss
pop
je
mov
sub
adc
jae
or
arpl
xor
xchg
ret
out
pop
arpl
std
pop
dec
push
jne
je
dec
dec
dec
cmp
jecxz
scas
sbb
and
sti
cmp
inc
pop
dec
mov
push
gs
data16
mov
fcom
in
and
mov
std
mov
ret
add
out
lds
pop
adc
lret
loop
rcl
scas
xchg
popf
dec
in
lds
mov
sub
cmpsl
addr16
push
ret
sub
pop
lds
fmul
fmull
sbb
jl,pn
sub
mov
cmp
mov
mov
cmp
loopne
mov
popa
test
insl
ljmp
jmp
mov
fistl
cmp
js
jg
dec
and
arpl
rolb
cld
cmpsl
loopne
lock
rcrb
mov
aad
fs
mov
fsubl
lret
lahf
dec
mov
std
xor
mov
adc
cld
loope
push
and
add
fiaddl
out
xor
imul
gs
add
adc
daa
xchg
bndldx
cmpsl
pop
mov
adc
mov
sbb
daa
outsb
lcall
pop
repnz
addr16
fadds
jp
out
dec
js
fsubs
out
adc
repz
andl
clc
imul
cmp
sub
xchg
test
pop
imul
lret
dec
adc
sbb
out
mov
mov
js
test
jb
dec
int3
cmpsl
and
mov
cmp
pop
xor
fldt
mov
sub
dec
sbb
sbb
push
pop
rcrl
mov
adcb
lods
jb
and
or
add
out
jmp
adc
mov
stos
test
daa
jne
lcall
and
xor
insl
dec
adc
cmpsb
fstl
sbbb
adc
sarl
push
stos
pop
cmp
push
out
loop
dec
clc
leave
lret
push
hlt
and
jne
cs
cmc
mov
test
cli
pop
lahf
push
and
dec
cmpsl
out
push
mov
les
cmpsl
rorl
and
cmp
sahf
stos
push
or
insb
jo
je
push
mov
js
icebp
pop
test
lock
jp
sub
sub
in
adc
movsl
xor
data16
xlat
cmpsb
jecxz
ljmp
mov
push
repnz
movsb
es
rolb
fs
mov
jge
jae
mov
dec
cmpsb
pop
jmp
adc
mov
dec
out
mov
pushf
mov
ljmp
mov
sbb
or
sar
sub
dec
sub
insl
xchg
js
sub
stos
sub
ret
popa
jl
cmpb
xchg
pop
js
adc
pop
dec
and
sub
mov
pusha
and
pop
push
xchg
iret
repz
adc
mov
push
cli
mov
mov
mov
lock
mov
jp
loope
mov
adc
sbb
sbb
jmp
hlt
aad
cmp
addr16
dec
jb
push
cmp
rcll
pop
mov
rolb
push
ret
push
push
fmuls
push
enter
pop
jg,pn
xor
xchg
adcb
jne
or
pop
aam
adc
imul
sbb
jle
dec
mov
test
sarb
jne
negb
pop
mov
adc
jne
cs
push
sbb
add
sbb
add
adc
cmpb
mov
test
adc
enter
imul
push
or
xchg
pop
add
addr16
outsl
ret
lcall
mov
test
xor
mov
push
lods
jo
lea
mov
enter
fwait
inc
dec
push
cs
aas
out
lods
popf
sbb
jle
push
mov
xor
mov
jp
cmp
mov
or
ja
cmp
add
ljmp
xchg
push
shll
sub
pop
adc
shll
std
out
mov
adc
in
dec
cli
inc
mov
mov
sti
in
mov
leave
cmp
jmp
fimuls
adc
loop,pt
out
scas
lock
or
xor
fsts
mov
in
or
or
mov
mov
dec
and
sbb
shll
shll
adc
sub
mov
repz
jns
dec
sbb
lods
and
sbb
mov
fldz
xor
add
cmc
rolb
xchg
fdivrp
inc
sub
mov
inc
mov
adc
sub
out
jmp
adc
fimull
lods
loope
jmp
fsts
sub
stos
sar
nop
pop
sbb
mov
test
ja
mov
icebp
adc
sbb
inc
adc
ffreep
inc
lret
stos
cld
nop
cmc
loope
in
adc
pop
fwait
mov
push
xor
sbb
xor
xor
ss
ljmp
or
out
into
push
cmpl
mov
mov
adc
out
ds
fsubp
ljmp
mov
mov
in
xorl
sub
scas
xor
cmp
lret
movsb
out
pusha
fmuls
mov
pop
lcall
mov
aaa
scas
jmp
fld
iret
fidivs
lret
popa
out
mov
jg
leave
sub
pop
jb
pop
lahf
mov
jmp
rorl
xor
mov
push
xchg
rcll
ja
js
pop
hlt
push
dec
pop
inc
divl
stos
jle
add
loopne
sbb
cmpl
pop
fnstenv
pop
lds
stc
dec
push
dec
iret
lods
push
outsb
loop
cltd
inc
pop
lcall
icebp
lcall
mov
mov
jecxz
cs
int
sti
or
scas
fld
lret
jmp
lods
addr16
insl
adc
bound
push
int3
mov
xchg
xchg
add
ret
and
sbb
sbb
inc
bound
loopne
mov
adc
scas
addr16
cld
push
jg
enter
jbe
ja
movb
aad
jmp
cwtl
lret
jl
sbb
roll
push
pop
jbe
insb
cmp
hlt
xlat
ljmp
ficoml
inc
xchg
stc
lods
testl
dec
inc
and
imul
inc
cmp
push
or
xchg
aaa
stos
add
imul
push
mov
fcoms
roll
outsl
movsb
fdivrp
loope
aas
imul
inc
adc
pop
push
test
or
insl
jnp
.byte
add
dec
add
dec
add
jo
add
and
add
add
adc
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
adc
add
add
add
add
or
xorb
add
dec
add
cmpb
andb
orb
cmpb
sbbb
adcb
add
jle
add
mov
add
xchg
or
xor
add
or
subb
add
add
add
add
add
cmp
addb
add
adc
add
add
add
add
or
adcb
addb
add
adc
add
add
add
add
sldt
push
sldt
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
adc
outsl
insl
add
add
loopne
add
out
or
add
add
fadds
add
adc
add
add
add
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
pop
in
or
xor
add
nop
out
or
xor
add
out
or
xor
add
clc
lock
xor
add
sub
or
xor
add
pusha
repz
xor
add
xchg
hlt
or
rolb
add
testb
in
add
dec
clc
or
rolb
add
sbb
or
rolb
add
call
add
add
add
add
add
add
or
rolb
add
sub
or
rolb
add
clc
add
add
add
add
push
or
call
add
add
add
add
or
add
or
push
add
add
add
xchg
push
or
in
add
add
add
add
add
mov
or
fadds
add
pusha
and
add
add
add
add
sbb
or
adc
add
xor
or
enter
clc
sub
call
add
add
add
add
sub
add
add
add
xor
aam
add
xchg
xor
faddl
add
jo
or
xor
add
mov
add
add
aaa
or
or
add
adc
or
test
add
cwtl
ds
mov
add
dec
inc
or
sbb
add
or
cmp
add
cwtl
inc
or
in
add
add
add
lods
dec
or
mov
add
add
add
add
add
add
add
add
lock
or
les
add
mov
or
mov
add
add
add
add
add
add
aam
or
inc
push
add
adc
or
adc
add
sub
add
add
cmp
or
adc
add
push
popa
or
adc
add
fs
or
adc
add
js
or
adc
add
mov
add
add
mov
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
inc
add
dec
add
add
push
add
inc
add
dec
add
or
movsb
jg
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
add
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
add
add
popa
add
add
add
add
and
jae
imul
popa
add
add
add
add
outsb
add
popa
add
add
add
dec
add
inc
add
add
imul
popa
add
add
add
add
popa
add
add
add
imul
outsl
add
jae
and
dec
add
popa
add
add
add
outsb
add
add
and
add
arpl
add
add
and
add
je
popa
add
add
add
je
imul
popa
add
jns
and
arpl
outsl
add
outsb
add
add
outsb
add
jne
jo
jo
outsl
add
je
add
add
outsl
add
sub
add
add
add
and
insb
add
outsb
add
jne
popa
add
add
add
inc
add
add
outsb
add
add
add
outsl
add
jb
arpl
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsl
add
add
add
add
add
jae
outsb
add
add
add
jne
jo
jo
outsl
add
je
and
jae
je
jb
add
insl
add
outsb
add
or
push
add
jns
and
inc
add
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
xor
inc
push
dec
inc
pop
dec
add
xor
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
or
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
insl
outsl
je
inc
outsl
outsb
je
outsl
insb
or
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
xor
xor
inc
xor
xor
cmp
inc
inc
xor
inc
cmp
xor
inc
xor
xor
inc
cmp
xor
xor
cmp
ss
xor
aaa
inc
cmp
inc
cmp
inc
cmp
aaa
inc
inc
ss
xor
inc
inc
xor
cmp
aaa
inc
aaa
inc
inc
inc
xor
xor
xor
aaa
cmp
inc
xor
inc
inc
inc
ss
xor
cmp
aaa
cmp
aaa
inc
cmp
cmp
inc
aaa
ss
cmp
inc
xor
ss
aaa
xor
ss
xor
inc
inc
inc
inc
inc
ss
inc
xor
aaa
inc
xor
xor
inc
xor
aaa
inc
inc
inc
inc
xor
cmp
inc
cmp
inc
inc
xor
inc
inc
inc
inc
inc
xor
cmp
xor
inc
xor
inc
xor
inc
inc
xor
inc
inc
xor
inc
xor
xor
aaa
xor
xor
inc
inc
cmp
xor
cmp
inc
xor
xor
inc
xor
xor
cmp
inc
xor
aaa
inc
aaa
xor
inc
inc
xor
xor
cmp
ss
inc
xor
cmp
aaa
xor
inc
cmp
inc
xor
cmp
cmp
xor
cmp
xor
inc
cmp
xor
inc
cmp
xor
inc
inc
inc
inc
inc
xor
aaa
inc
xor
xor
add
int3
add
add
mov
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
jne
popa
push
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
jne
popa
push
jns
gs
sbb
push
insb
dec
gs
jo
xor
adc
outsb
popa
dec
push
push
popa
jb
gs
adc
outsb
popa
inc
insb
popa
jae
gs
sbb
dec
dec
push
jns
je
insl
add
xorl
dec
jae
arpl
push
dec
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
popa
jbe
add
push
jne
popa
push
dec
inc
inc
add
push
imul
adc
jne
popa
push
outsl
arpl
je
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsb
imul
add
and
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
cmp
push
gs
insb
jbe
jb
adc
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
xor
mov
iret
js
jg
loope
out
incl
sub
pop
cwtl
sahf
pop
pop
daa
jge
jecxz
inc
rcr
scas
int
nop
jle
pop
loop
mov
bound
pop
push
insb
xchg
adc
lcall
cmc
loop
mov
jmp
lds
xchg
imul
div
int3
mov
adc
dec
bound
add
inc
out
pusha
lret
cld
mov
xchg
cmp
mov
imul
jb
or
pop
bound
xor
pop
ficoml
mov
pop
mov
iret
hlt
jne
or
push
fistps
mov
das
fisubl
inc
xchg
pop
xchg
adc
sbb
clc
xor
leave
pop
cmpl
sbb
mov
pop
add
jno
in
cmp
and
imul
mov
mov
inc
in
or
outsb
js
fcmove
lea
aad
mov
or
xor
push
mov
decl
sar
sbb
xchg
fcomp
leave
jge
xor
xchg
adc
sti
jnp
cmpl
jmp
mov
call
add
in
fdivp
incl
fucomip
dec
push
sbb
and
cmp
bound
push
es
sbb
data16
add
mov
pop
sub
sarl
daa
pop
mov
cmp
sbb
lahf
test
push
arpl
sbb
repz
xchg
gs
pop
cmp
xchg
rcrl
add
aaa
sbbl
pop
mov
out
dec
aad
add
arpl
ljmp
adc
test
sub
inc
loope
dec
stos
mov
in
out
aad
cli
leave
jmp
push
test
and
std
popa
hlt
loop
inc
xor
push
add
outsl
push
nop
pop
cmp
testl
pop
sbbl
ret
sbb
hlt
lds
inc
test
mov
aad
and
cwtl
insl
push
test
adc
jo
pusha
add
insb
sbb
push
sub
fdiv
xchg
push
cmp
jg
in
ret
lods
pusha
lds
jbe
andb
push
sbb
jno
aad
lret
xchg
stc
fldcw
mov
in
adc
inc
lods
adc
aas
bound
jge,pt
hlt
sbb
push
ficoms
pop
mov
mov
lret
stc
mov
insb
lock
jno
xchg
sbb
mov
lret
adc
push
ds
lcall
stos
pop
mov
inc
push
xchg
cmp
and
scas
mov
lds
leave
shrb
lds
jnp
dec
jge
lret
jmp
push
aam
jne
stos
dec
jp
jnp
mov
mov
ja
addr16
sub
popa
pop
fwait
jmp
inc
scas
mov
mov
xorl
pop
sub
cmp
pop
sbb
rclb
jle
xchg
add
out
decl
dec
out
sbb
les
inc
jne
dec
cmpsb
pop
jecxz
jo
enter
insb
andl
mov
clc
pop
je
jne
movsb
lahf
lcall
adc
mov
sbb
nop
aad
mov
mov
cmpsl
fildll
mov
xchg
iret
adc
jecxz
push
adc
xchg
or
xor
or
jae
or
gs
sub
mov
movsl
adc
cmp
lcall
ljmp
leave
adcl
push
inc
or
xor
sub
jg
push
inc
cmp
and
push
fldt
jne
sbb
vmovupd
stos
push
mov
mov
xorb
lcall
and
cmp
inc
mov
scas
dec
notb
jno
loop
mov
je
shl
inc
out
pop
mov
sbbb
dec
jp
clc
fbstp
repnz
lods
cmc
movsl
or
gs
fwait
mov
daa
mov
push
jge
cld
pop
xchg
clc
call
subl
mov
sub
jnp
lock
or
xchg
inc
mov
mov
mov
loop
adc
jmp
aad
add
mov
and
add
xchg
cltd
cmpsl
test
xchg
mov
dec
pop
mov
jp
out
or
and
in
out
sahf
dec
cmp
dec
cmp
xchg
mov
test
xor
xor
mov
adc
aaa
mov
loopne
fisubrl
xchg
adc
repnz
pusha
fsubs
push
and
es
add
push
es
xor
int
pusha
testl
lcall
push
stos
movb
out
lret
mov
in
movsl
call
cs
test
lock
adc
mov
pop
imul
ds
test
mov
lea
xchg
sub
fchs
dec
or
xor
hlt
lcall
inc
dec
sbb
jl
in
shlb
adc
lods
outsl
fwait
dec
add
lea
xchg
pop
mov
scas
and
out
loop
jl
in
in
pop
out
mov
cmp
fmuls
aaa
loope
xor
push
push
scas
push
sbb
gs
outsb
xchg
icebp
xchg
add
push
mov
and
testb
xchg
mov
or
add
jg
stos
fstpt
push
mov
inc
nop
and
clc
push
test
add
mov
cwtl
es
push
sub
xchg
or
outsl
shl
push
addr16
cmp
in
into
bound
dec
mov
push
push
and
cld
in
mov
fstps
xor
sub
insb
or
push
xor
in
adc
inc
in
dec
and
les
fs
mov
mov
or
loope
dec
jne
push
sub
and
sub
cwtl
andnps
add
sub
xor
ret
adc
cmpsl
dec
test
fstps
lret
test
cli
and
int3
add
mov
lahf
push
fwait
sbb
call
iret
adc
out
and
ja
inc
jmp
and
lods
sahf
shll
xchg
in
int
inc
cmpsl
aad
test
adc
and
xchg
mov
daa
jb
cmp
lds
sub
sub
sub
xlat
jmp
aad
nop
cmp
jecxz
xchg
push
pcmpgtd
hlt
jae
push
inc
xor
push
mov
lahf
notb
fnstenv
pop
cmp
das
push
arpl
cmc
xor
pop
std
jp
push
push
adc
jle
xor
jno
pop
sbb
jmp
imul
jmp
sub
pop
push
das
out
sub
jecxz
xchg
arpl
xchg
cmp
fldcw
push
pop
dec
call
mov
stc
inc
fmulp
cmp
add
add
loop
jae
insl
cmc
sbb
cmp
test
or
rclb
sub
adc
add
outsb
pop
fcom
sub
cmp
add
and
rclb
mov
jb
in
fs
adc
loopne
jo
xor
fmul
mov
and
bound
jbe
dec
dec
and
hlt
add
lahf
js
shll
push
inc
and
jno
mov
adc
sahf
jae
fistpl
xchg
sbb
loopne
ret
stos
dec
xchg
cmp
and
and
rcl
jno
or
cld
xchg
jnp
cmp
pushf
adc
mov
shlb
mov
xor
xor
jno
out
imul
popa
sub
faddl
cs
mov
popa
movsb
ss
jg
outsl
cld
fbld
jno
clc
push
mov
jge
dec
test
aaa
pop
and
cmp
ret
ljmp
mov
or
dec
popa
jne
loop
push
scas
repnz
in
add
mov
xlat
fnclex
mov
je
xor
sbb
push
lret
fwait
and
push
fwait
in
push
lahf
ret
sbb
out
jae
xchg
insb
fidivs
and
push
pop
adc
in
pop
jno
sbb
inc
inc
mov
sub
jo
cmp
push
adc
dec
mov
mov
and
mov
inc
xor
adc
sbb
negl
mov
push
pop
or
inc
xchg
pop
pop
mov
mov
pop
cmc
ret
mov
adc
test
xchg
push
jns
test
lods
mov
sbb
cmp
data16
xchg
pop
adc
scas
push
lods
ja
xchg
sub
and
push
rcrl
test
inc
jno
and
or
mov
mov
xchg
jnp
ret
aam
push
sub
add
out
mov
jge
cwtl
clc
inc
mov
mov
lock
push
lds
cmp
jmp
or
add
xchg
xor
test
sbb
fwait
jge
mov
test
icebp
shl
jecxz
xchg
in
fstpt
pop
or
adc
and
push
and
popa
pop
push
push
leave
cmpsl
int
ljmp
jno
push
add
mov
cmpsl
leave
lods
jne
sbb
pop
fildll
aad
xchg
lds
xlat
lea
pop
xorb
imul
push
xchg
sub
pushf
lret
jle
subb
push
sub
ret
repz
mov
pop
xor
cmp
ret
cmpsl
sbb
push
mov
pop
jg
loop
add
pusha
xchg
sbb
mov
ficoms
jb
test
aaa
les
lea
cmp
jb
dec
lea
arpl
out
jbe
nop
sbb
lods
cwtl
ret
pop
imul
mov
loopne
and
dec
push
xchg
andl
jb
insb
and
imul
cmp
mov
jg
adc
mov
fsubs
and
mov
repnz
sbb
sbb
push
adc
cwtl
mov
mov
jae
mov
sahf
or
sbb
lret
in
clc
mov
or
std
xchg
je
or
fcoml
in
jle
adc
cld
xchg
imulb
pop
roll
cltd
pop
or
push
add
outsb
lods
sub
outsl
cmove
xor
push
xor
int
mov
lcall
mov
adc
mov
cmpsl
pop
cs
sub
leave
mov
mov
rolb
mov
test
fwait
rolb
add
mov
pop
pop
arpl
jbe
adc
jmp
xor
sahf
pop
add
mov
push
jo
and
cltd
stos
fst
sbb
mov
pop
icebp
popa
in
fdiv
icebp
xchg
push
mov
xchg
out
shl
jne
in
add
fnstenv
pop
xchg
in
dec
scas
mov
movsb
mov
fisttpl
mov
dec
sbb
dec
xor
repnz
gs
or
lret
lock
out
inc
pushf
mov
xchg
pop
or
fsub
mov
adc
filds
iret
or
mov
sti
shl
inc
push
test
push
or
aam
cmp
cmp
jns
add
pop
and
test
gs
pop
mov
adcb
loop
cmp
js
mov
aas
jl
add
icebp
icebp
hlt
mov
clc
pusha
inc
push
xchg
lcall
call
cmp
rclb
fdivs
in
pop
ljmp
or
push
sbb
call
or
cmp
mov
leave
jg
cmp
xchg
ja
adc
or
cmp
pop
and
adc
dec
mov
cmp
mov
inc
pop
rol
arpl
flds
add
ss
lret
add
or
iret
inc
repz
in
outsl
into
pop
xor
mov
mov
popa
and
sbbl
imul
lock
cmpl
cmpsl
fmuls
fld
cmc
push
sbb
or
cmpsb
pop
stc
leave
mov
inc
sbb
out
popf
cli
call
mov
nop
mov
cwtl
test
sarb
imul
gs
shll
ficoml
ja
popa
mov
sbb
inc
pop
xchg
stos
ljmp
xlat
and
mov
out
push
lock
loopne
and
cli
pop
into
sbb
mov
cmp
mov
push
push
mov
xor
mov
pop
fcmovnb
shrb
daa
cmp
mov
xor
and
mov
and
cmp
xchg
xchg
ret
inc
lods
add
ja
ror
sub
dec
sbb
iret
int3
or
cmpsl
mov
mov
or
xchg
inc
push
cld
stos
leave
sub
imul
xchg
mov
jg
and
sub
shlb
and
mov
dec
ret
push
in
push
outsl
and
jg
addr16
rol
cmp
mov
loopne
dec
gs
add
out
cmpsb
cmp
inc
and
cld
dec
vmovss
mov
into
pop
sti
cwtl
jns
mov
inc
sti
xchg
or
cmp
test
or
jb
repnz
mov
arpl
mov
inc
outsb
faddl
data16
jno
addr16
loopne
addr16
pusha
sub
gs
pop
insb
in
aam
stos
xlat
pop
sub
inc
leave
adc
jbe
inc
xor
sub
push
push
xor
xchg
inc
imul
dec
jg
fisubrl
sbb
inc
psubsw
out
mov
pop
jle
or
insb
jmp
rclb
aad
hlt
or
push
xchg
xor
pop
and
mov
mov
mov
push
daa
push
or
jle
sarl
and
pop
sbb
fs
shll
mov
cs
mov
adc
lds
arpl
sub
jae
xchg
jl
inc
cs
fcoml
mov
and
aam
fwait
sbb
sti
out
sbb
es
jecxz
lods
cmpsl
stos
addl
cmc
and
rorb
loopne
fsub
pop
mov
fisubl
jle
and
lea
jo
adc
dec
add
mov
gs
mov
or
jbe
loopne
and
aad
loopne
pop
xchg
push
dec
mov
mov
inc
subl
fldcw
lcall
lret
cltd
clc
das
xchg
mov
jo
mov
dec
or
int
stos
xchg
or
call
and
pop
adc
or
sahf
mov
ds
cmpsb
jp
insl
and
push
jecxz
mov
xchg
js
fmuls
movsb
push
cmp
adcl
daa
es
inc
xor
sbb
call
dec
mov
test
imul
aam
imul
gs
xchg
jae
movl
xchg
lock
int
sub
cmpsl
sub
mov
mov
repnz
mov
fs
in
jns
test
jbe
arpl
cmc
sbb
xchg
adc
sbb
les
mov
pop
cmpsl
mull
jne
inc
rcll
adc
imul
pop
out
lock
daa
lds
pop
push
mov
push
dec
ss
clc
imul
mov
pop
dec
dec
mov
xchg
pop
jo
mov
or
sub
or
cmp
pop
mov
sti
and
dec
int3
and
lds
sbb
pmulhw
jecxz
in
cmpl
in
in
test
scas
ljmp
sahf
jg
cwtl
xchg
scas
mov
lods
in
movsb
pusha
jg
inc
into
shl
mov
jne
pop
lds
clc
cmpsb
lret
cmp
mov
outsl
and
sahf
and
sti
add
in
aad
jp
xor
cld
stos
loopne
add
jno
pop
pop
dec
cmp
push
mov
data16
ret
xor
add
inc
repz
scas
inc
fwait
aam
test
jo
loope
lock
rolb
test
fidivrl
sbb
fdivs
insb
push
stc
push
cmc
dec
cwtl
shll
scas
xor
notb
ret
push
stos
xor
or
add
pop
pushf
stc
outsl
mov
outsl
cli
hlt
sti
xor
shll
int3
sub
ret
imul
fs
jb
jp
xor
sarb
negl
in
jne
sub
js
cmc
adc
lods
cmp
shll
js
jge
test
ja
testb
xchg
sahf
ret
enter
fisubl
stos
sbb
in
cmpsb
dec
jnp
jnp
fst
mov
lea
add
test
sbb
add
push
xchg
xchg
int
push
aam
and
pop
arpl
movsb
movsl
in
pusha
pop
gs
mov
mov
mov
notl
fisubrl
repz
shlb
dec
xor
dec
into
fwait
sarl
leave
inc
mov
mov
dec
pop
pop
je
inc
cld
loopne
push
loope
sbb
imul
aam
dec
pop
imul
lods
sbb
sub
rorl
jns
mov
sbb
adc
aas
or
or
ret
mov
ss
sbb
aam
fsubrl
enter
mov
scas
divps
sbb
ljmp
js
mov
popf
leave
mov
and
sub
cmp
fld1
push
enter
cs
fisubs
lods
push
sbb
nop
and
jecxz
ss
mov
adc
fs
test
sahf
ds
scas
mov
fldz
cmp
mov
je
push
pop
adc
push
movb
inc
repz
xor
dec
jne
cli
mov
gs
in
pop
lea
cltd
scas
push
pushf
push
pop
lahf
mov
fmull
xor
push
lahf
xor
arpl
and
iret
push
jle
and
hlt
int
mov
xchg
add
add
std
cli
and
push
sbb
push
out
or
push
push
or
inc
dec
jg
out
lock
aad
lret
mov
fwait
jbe
ds
inc
mov
rep
movsb
out
xchg
insl
dec
hlt
mov
xchg
mov
sub
leave
sbb
repz
nop
mov
inc
adc
or
call
nop
push
movsl
or
enter
cmp
xchg
xchg
cmpb
leave
push
pop
arpl
mov
mov
mov
jbe
mov
rol
fisttps
scas
in
shrb
and
mov
stos
or
stos
in
js
jbe
aas
in
testb
sbb
jb
stos
push
popa
stc
xor
cmp
dec
repz
dec
add
in
adc
ret
scas
jmp
pop
jle
cs
xor
mov
dec
xor
adc
das
jge
cli
bound
sbb
xchg
sbb
push
icebp
mov
push
mov
mov
or
in
xchg
jbe
or
fiaddl
daa
icebp
push
shrl
cmp
fistl
pop
or
xchg
lock
mov
and
js
cld
inc
dec
jg
imul
daa
dec
mov
mov
test
mov
cmp
out
sbb
xchg
xlat
mov
js
test
mov
call
mov
sub
inc
loopne
mov
pop
jle
add
adc
jno
dec
movsl
dec
jmp
icebp
jb
sbb
into
push
mov
test
shl
leave
sti
pop
dec
pop
out
xchg
mov
dec
pop
push
xchg
push
aaa
int3
loop
lret
sub
fdivr
mov
xchg
into
sub
mov
insl
hlt
scas
or
or
jecxz
push
jge
xor
loopne
xchg
arpl
dec
test
and
cmp
xchg
decb
scas
cltd
das
jbe
jne
pop
pop
mov
adc
pusha
cli
add
fisubl
push
sub
dec
and
jnp
jb
adc
mov
mov
pop
icebp
std
or
das
mov
mov
cld
lcall
mov
in
sub
jns
jp
xchg
gs
push
push
gs
hlt
imul
ljmp
mov
xlat
mov
ret
mov
daa
jmp
cmp
dec
pop
and
addr16
inc
mov
out
push
imul
pop
pusha
daa
or
jb
sub
mov
imul
cmp
mov
sub
fcomps
xor
movsb
jge
cmpsb
std
jne
in
cmp
punpckhbw
ja
push
int
and
xchg
popf
out
or
es
popa
xor
aaa
adc
sbb
sub
xchg
lahf
ss
pop
jns,pt
movsl
adc
out
insb
inc
in
or
jns
inc
in
cmp
nop
sbb
sub
mov
imul
add
adc
fildll
lock
or
cmp
push
mov
mov
dec
and
jno
popl
pushf
jno
movsl
mov
out
rorl
inc
mov
dec
mov
push
push
lahf
mov
or
push
scas
xchg
jp
pop
into
pop
adc
roll
xor
inc
fidivl
aad
rcr
mov
scas
jb
pushf
jbe
or
fidivs
fwait
repz
inc
gs
adc
mov
lds
sbb
insl
cmp
jno
int3
mov
fcmovb
in
sub
mov
inc
movb
sbb
xchg
aam
iret
movl
sbb
add
call
fs
dec
jb
leave
inc
push
insl
js
inc
mov
test
lcall
jne
cltd
add
das
sbb
lret
cmp
loope
jg
setle
test
mov
pop
jo
fwait
inc
cs
orb
mov
into
sbb
std
jecxz
sti
in
mov
xchg
sub
xor
repz
mov
ds
les
rclb
mov
xor
cmpsl
call
dec
add
std
dec
xchg
xchg
out
jbe
xor
arpl
sbb
fcmovnb
lret
push
loop
xor
imul
popf
fwait
xor
hlt
je
scas
cmpl
jmp
daa
cmc
fcomp
ret
adc
mov
in
adcb
mov
adc
sti
or
mov
add
andb
scas
movsb
js
aaa
cmpsl
mov
mov
fnsave
pop
mov
xchg
xchg
xchg
adc
mov
xchg
repnz
loopne
push
movsl
fnsetpm(287
sti
in
inc
rorl
scas
cmp
push
or
rorb
mov
leave
popf
fistpl
jnp
xor
pusha
push
fstpt
cmp
inc
pop
mov
jmp
sbb
je
and
cmc
inc
jg
push
inc
mov
xor
xor
fwait
mov
cmc
call
sbb
std
sarl
sub
hlt
out
fdivr
ficompl
xor
prefetch
pusha
dec
mov
adc
xchg
enter
test
add
repz
lret
mov
push
xchg
sub
push
cmpsl
push
in
inc
orl
aaa
xor
lahf
jecxz
add
es
xor
mov
pop
sub
decb
arpl
movsb
xor
pop
cmp
xor
add
mov
push
xor
inc
mov
scas
xor
and
push
popf
dec
daa
scas
arpl
mov
mov
push
lods
stos
sub
ljmp
mov
inc
jnp
test
call
sub
in
gs
ds
loope
flds
rolb
mov
les
ret
in
outsl
mov
fcmovnbe
or
mov
mov
test
scas
sub
popf
out
sbb
hlt
sub
je
shrb
mov
inc
enter
mov
aaa
insl
test
or
lret
or
and
jns
sub
dec
add
js
mov
xchg
incl
mov
std
pop
bound
push
ja
add
fdivrl
mov
pop
cmp
imul
xlat
out
xor
test
sbb
sub
movsl
push
outsl
mov
aam
adc
in
ss
xor
or
bound
jno
ret
inc
icebp
out
mov
pop
pusha
js
cmc
and
cmpb
or
push
jecxz
andl
mov
and
call
jmp
addb
sub
add
or
dec
sbb
nop
jmp
jns
push
sub
insb
nop
sub
cmp
js
inc
lods
mov
jns
xchg
js
push
fwait
push
cmc
pop
mov
mov
inc
cmp
mov
xor
inc
cmpsl
stos
mov
xchg
ljmp
jne
lods
add
inc
mov
jns
xchg
cmp
scas
pop
mov
imul
or
int3
in
xchg
sub
test
adc
and
xlat
mov
adc
into
push
cld
lods
shl
xor
scas
xchg
xchg
sub
add
or
in
mov
call
data16
fldcw
movsb
xchg
or
pusha
jg
out
lcall
add
xchg
add
shlb
dec
push
inc
xor
xchg
pusha
pop
inc
push
aad
addb
push
sub
inc
lds
jnp
lret
mov
sub
push
movb
call
and
subb
xchg
stos
rorb
pushf
xor
cwtl
push
push
out
push
add
and
lea
jae
mov
pop
dec
js
cmpsl
cmp
sub
je
push
ret
outsb
jmp
lds
ds
mov
jne
dec
mov
mov
or
xor
xchg
rclb
repnz
sbb
insb
pop
outsb
nop
jbe
sbb
push
arpl
gs
sub
push
add
mov
and
lahf
mov
sbb
fucom
push
pop
movsl
push
add
jle
push
cmpsl
je
mov
inc
mov
add
mov
das
ror
sbb
jmp
inc
cmp
dec
xor
mov
fldl
pusha
inc
in
mov
pop
adc
dec
cmp
sub
mov
mov
js
fisubl
sbb
imull
mov
xchg
xchg
jge
popa
call
pop
repz
jg
repz
addr16
mov
mov
inc
aas
inc
ss
xchg
js
loopne
icebp
test
cmp
dec
hlt
mov
sarl
dec
leave
sbb
cmp
and
and
lcall
in
add
loop
insb
sub
orb
fstpl
test
mov
sti
adc
stos
repnz
aam
into
sbb
mulb
jle
in
pop
push
sbb
pop
adc
lahf
in
out
ret
mov
adcl
ss
pusha
notb
mov
and
ja
rcrb
inc
cmp
subl
cmp
mov
rolb
imul
iret
leave
mov
mulb
dec
fbld
stos
add
inc
in
fidivl
sbb
int
cmp
push
mov
inc
fadd
std
ja
or
mov
pushf
jp
adc
mov
popf
or
stos
or
lcall
stc
cmp
or
xorl
sbb
lahf
imul
divl
dec
es
fidivl
rorb
std
or
pop
push
pmovmskb
push
loope
test
lods
int
leave
sub
in
sbb
insb
fiadds
lds
dec
les
arpl
testl
mov
lods
mov
dec
jl
dec
jo
inc
xor
int3
ret
aam
jo
sahf
insb
jg
mov
fstp
loopne
jns
ljmp
xor
pop
cmp
mov
sbb
mov
xchg
imul
pop
je
mov
cld
pushf
insb
das
pop
sahf
push
mov
dec
stos
out
sbb
inc
arpl
rorb
js
and
mov
pop
xor
adc
or
jnp
icebp
ret
and
pushf
pop
mov
inc
cmp
or
sub
sub
inc
push
pop
xchg
divl
int
lods
adc
inc
xchg
gs
jns
xchg
cmp
jmp
push
pop
pushf
pop
ljmp
sahf
inc
mov
dec
sarl
ss
scas
or
pusha
push
lds
mov
inc
cmp
sub
stos
xchg
out
inc
mov
ja
mov
into
jae
lret
xchg
jp
mov
iret
aas
xor
jns
push
add
scas
xchg
sbb
in
ds
and
movsl
and
cmp
stos
ret
sbb
inc
adc
iret
filds
mov
xlat
addr16
mov
leave
loop
pop
mov
jp
shlb
aad
bound
test
push
fimuls
jns
adc
pop
jle
imul
out
push
repnz
std
fisubrs
xor
cmp
cli
repnz
or
sub
loopne
imull
cmp
and
sbb
jne
add
pop
sub
lods
mov
sbb
jo
add
iret
add
ss
push
ret
pop
shr
out
jl
xchg
jmp
or
cmp
rcll
adc
imul
sub
dec
mov
movb
add
jb
pusha
and
push
pop
pop
fs
mov
sub
xor
cmc
lret
call
inc
aad
je
mov
dec
aas
push
gs
cmp
adc
popa
sub
xchg
mov
mov
sub
rcl
add
orl
mov
jg
sub
bound
enter
popa
xchg
stos
dec
fnstsw
xlat
int
ret
data16
cwtl
call
sbb
and
pop
into
outsl
sti
mov
pop
popf
mov
xchg
enter
pop
cmpsb
jns
leave
xor
insl
insb
mov
cmp
js
mov
fisubrl
je
pop
add
bnd
mov
mov
nop
mov
mov
addl
fsubp
dec
mov
aam
pushaw
loopne
fstps
roll
xor
shrb
dec
repz
mov
inc
out
jle
pop
adc
ds
enter
or
loop
into
flds
cs
jl
in
jge
inc
dec
ret
jbe
push
in
jge
push
adc
inc
test
pop
or
adc
adc
mov
dec
dec
mov
xor
inc
fldl
or
mov
pop
pop
pop
push
pop
mov
push
out
mov
into
lahf
jne
out
push
sbb
lahf
cltd
lea
seta
mov
pop
mov
push
cmp
xor
outsl
mov
xchg
or
cwtl
icebp
sarl
cmc
jmp
push
pop
sub
test
mov
sub
aas
enter
jne
rorl
push
loop
ds
or
mov
xor
cli
jmp
xor
cmp
cmpsl
cmp
pop
cmp
add
mov
mov
pop
loope
mov
lcall
dec
test
jecxz
cs
inc
push
pop
and
or
jbe
ja
xchg
dec
mov
xor
add
push
out
inc
dec
sub
xor
loope
xchg
addr16
stc
mov
pop
or
pushf
leave
xor
rorl
xchg
mov
push
das
aam
inc
clc
xor
std
dec
lret
jb
ret
leave
scas
dec
popa
lahf
mov
sbb
sarl
in
mov
insl
dec
sbb
inc
ss
sbb
iret
cmc
inc
sub
test
mov
mov
insl
jl
scas
jl
mov
fnsave
mov
dec
addl
adc
mov
and
mov
xchg
out
cmpb
or
jmp
out
xlat
xchg
mov
cmp
jmp
pop
rcr
sub
or
les
push
cmp
xchg
fsubs
mov
test
mov
in
jo
shr
inc
fwait
cltd
pop
pusha
inc
mov
sbb
in
mov
pop
sub
fs
xor
rorb
jg
sbb
mov
test
je
jne
iret
add
out
scas
xor
cmp
lea
test
or
les
push
iretw
ret
cld
ja
insl
sti
dec
or
mov
and
and
and
mov
add
push
int
test
push
fildll
sub
sbb
jge
daa
mov
pop
xor
fldt
adc
add
fwait
inc
mov
push
sahf
mov
or
fwait
or
jbe
divl
ljmp
dec
imul
xor
fdivr
shll
das
icebp
add
pop
mov
pop
push
and
add
jecxz
push
pop
icebp
inc
ja
push
adc
sub
stos
inc
fimull
and
xchg
xor
pop
mov
mov
push
popa
jbe
rcll
inc
mov
xor
jecxz
pusha
inc
hlt
xlat
aad
data16
lods
js
jo
in
pop
loopne
and
pop
daa
xchg
aad
jecxz
aas
gs
xchg
cmp
cwtl
in
adc
int3
sbb
jne
or
push
loope
sahf
push
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
sbb
int
xchg
ror
into
out
cld
test
mov
mov
add
push
and
pop
mov
xor
mov
jbe
jmp
fstpt
mov
and
inc
push
nop
mov
jmp
cli
sbb
mov
xor
mov
xor
mov
mov
sub
jnp
mov
add
and
sub
jne
mov
ljmp
sbb
add
and
adc
xchg
mov
pushf
xchg
cwtl
add
fs
out
xlat
fldl
sbb
mov
in
insl
mov
inc
sub
fwait
js
aad
andl
xchg
and
sbb
mov
hlt
leave
xor
pop
xchg
mov
mov
inc
frstor
mov
fidivrl
aaa
inc
cltd
adc
imul
push
cmp
int
scas
ror
je
adc
cltd
cs
pop
cltd
sub
fidivl
inc
inc
inc
cltd
adc
inc
jae
insl
nop
push
dec
jo
gs
out
fisttpl
popf
fisttpl
rcrb
sbb
lock
sbb
xor
mov
xchg
sbb
dec
cmp
fisubrl
lods
notb
mov
sbb
cmp
popa
jo
sbb
mov
xadd
xchg
xor
mov
pop
jnp
or
xor
pop
cmpsb
wrmsr
popa
pop
cmp
sbb
popf
add
push
cmpsl
test
push
or
cmp
push
mov
inc
xchg
sub
cmp
movsb
pop
inc
inc
dec
cmpsl
cmpb
jecxz
in
sbb
jns
lds
add
jnp
ret
out
push
cmp
dec
sbb
scas
aas
add
jae
das
jbe
mov
push
adc
movsb
mov
jnp
aam
insl
add
cmp
adc
arpl
jae
sub
insb
movsl
call
imul
pop
jnp
arpl
mov
stos
mov
pop
outsb
iret
or
mov
dec
add
jae
and
adc
jnp
mov
repz
ffreep
jg
xchg
and
mov
daa
add
inc
cmp
mov
fidivl
push
sub
or
cld
jp
lcall
and
sub
daa
pop
dec
sbb
nop
xchg
or
pop
jp
or
and
or
cmpsb
fs
push
mov
mov
stos
stos
xchg
jbe
pop
dec
inc
and
mov
cmc
pushf
and
shrb
movsb
sub
sub
movb
adc
lods
jmp
push
cltd
sub
shrl
fiadds
or
movsl
jbe
fisttps
cmp
fwait
movsb
push
and
pop
mov
and
popf
pop
stos
or
xchg
ret
adc
push
nop
xchg
push
test
xchg
pusha
jmp
push
in
cltd
and
shll
lret
adc
jno
and
jb
sub
loopne
dec
xlat
call
lea
inc
cs
jge
xchg
out
sub
into
jecxz
or
pop
mov
into
mov
int
lock
pop
add
lcall
negl
int3
mov
mov
pop
mov
mov
and
jle
icebp
jne
push
mov
je
dec
dec
pop
xchg
sbb
fiadds
pop
fildl
pop
pop
ljmp
out
xor
test
xor
add
xchg
or
inc
add
add
inc
fists
ja
cmpsl
or
imul
and
clc
mov
and
adc
sbb
cmpsl
or
sbb
and
pop
or
jl
cmpsl
mov
or
push
rorb
stc
fadds
sub
or
iret
sub
lret
or
sub
ret
stos
mov
add
into
arpl
cmpsb
lds
inc
dec
xchg
mov
jo
movsl
push
dec
sbb
pop
mov
add
mov
or
mov
jae
push
addb
cld
add
mov
add
xchg
jg
cmpsl
add
jl
mov
aam
xlat
mov
std
ret
add
mov
mov
sbb
mov
xor
lret
cmpsl
mov
jg
scas
jl
sub
mov
xor
je
xor
xor
sub
mov
les
xor
sub
push
add
sub
mov
roll
push
or
pop
stos
lods
inc
or
lods
mov
xor
mov
imul
iret
or
jge
imul
add
jl
popa
sub
add
mov
jae
sub
mov
mov
jg
mov
add
cmc
je
adc
test
jg
mov
add
pushl
add
sbb
cs
pop
clc
cmpsb
mov
or
add
jle
mov
add
mov
cmpsl
mov
add
mov
inc
cmpsl
mov
add
mov
add
sub
and
sub
in
sub
or
lds
shrb
loope
je
and
es
sub
inc
test
shrb
cmpsl
mov
add
sahf
je
and
es
and
xor
mov
icebp
data16
lss
sbb
and
test
shrb
popf
add
mov
insb
lods
lock
iret
mov
add
cmpsl
lss
sbb
and
test
shrb
fsubl
jl
cmpsl
cmpsl
lss
sbb
and
test
shrb
sub
sbb
adc
mov
mov
imul
mov
xor
mov
icebp
inc
movsb
lss
sbb
and
cmp
jge
cmpsb
scas
jl
sbbl
repnz
scas
or
xor
enter
mov
dec
ss
inc
std
xor
jmp
mov
movsb
cli
mov
push
dec
ss
adc
xor
and
stos
sbb
rolb
mov
add
sub
pop
push
dec
addb
jbe
cmpsl
mov
inc
cmpsb
mov
add
xor
lods
sbb
push
add
push
les
mov
cld
add
pop
add
mov
add
pusha
add
add
mov
leave
xor
cmpl
jmp
sbb
cmp
cli
mov
cmpsb
mov
cmp
cmp
pushl
jae
mov
mov
jo
mov
and
push
adc
in
test
subb
aad
pop
mov
xor
lods
mov
aam
subb
xor
aas
lahf
add
inc
int3
add
shlb
dec
cmp
pop
cmpsl
call
or
int3
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
popf
je
and
add
out
jbe
cmpsl
cmc
jne
cmpsl
mov
add
mov
les
pop
les
cmpsb
mov
ljmp
jl
cmpsl
mov
add
mov
add
push
xchg
mov
cmp
les
jmp
popa
push
enter
xor
add
int3
xchg
mov
or
or
pushf
push
sub
dec
pushf
inc
mov
jp
add
lcall
jmp
clc
stos
shrl
loope
cmp
cmp
lret
hlt
pop
mov
inc
inc
test
adc
dec
dec
enter
movsl
xlat
jecxz
and
arpl
sbb
adc
mov
push
dec
orl
insl
rcrb
leave
xchg
std
fdivs
test
xor
jns
and
cmp
es
jp
pop
lds
cltd
adc
clc
lret
add
push
les
les
aaa
sub
jb
jl
sub
add
or
inc
jl
push
jb
add
xchg
lods
test
push
mov
mov
jle
pop
push
jne
xchg
adc
or
push
lea
or
in
andl
pop
push
aas
pop
cltd
mov
mov
test
and
sub
mov
mov
dec
mov
push
jmp
add
adc
shrb
or
popa
shll
jne
mov
dec
mov
jp
rcrb
loope
nop
int3
daa
daa
jp
and
pusha
in
cmp
pusha
inc
repnz
pop
popf
mov
mov
loopne
movsl
jae
out
sub
pop
lea
cmp
dec
outsl
inc
sti
mov
addl
cmp
stc
mov
into
jmp
adc
inc
xchg
aas
add
dec
out
movsb
cs
add
mov
adc
mov
sub
movsl
loop
scas
or
fchs
dec
out
sbb
fmuls
xor
pop
dec
syscall
pop
adc
xchg
dec
mov
adc
pop
pop
enter
add
cmp
mov
jbe
mov
lcall
dec
cmp
pop
popa
mov
pushf
stos
push
pop
adc
std
in
aas
xchg
je
lock
jecxz
add
and
pop
lock
mov
imul
cmp
fstpt
push
and
and
fbld
and
cmp
adc
cltd
xchg
lea
roll
shrl
daa
inc
mov
mov
or
sbb
or
repz
or
movsb
jge
xchg
mov
fs
xchg
push
cli
rolb
cmp
mov
or
pusha
xorl
imul
mov
cmp
orb
jl
inc
fldl
loop
popa
popa
pop
mov
push
jp
stos
xadd
in
xor
lret
cmpsb
imul
add
add
or
add
add
dec
add
dec
add
jo
add
and
adc
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
sub
or
xor
or
cmp
add
inc
scas
or
inc
scas
or
dec
scas
or
dec
scas
or
push
scas
or
push
scas
or
arpl
or
outsl
scas
or
pusha
scas
or
jnp
or
push
add
add
scas
or
xchg
scas
or
js
or
sahf
scas
or
subb
add
scas
or
mov
or
nop
scas
or
ret
add
add
add
scas
or
mov
add
add
scas
or
test
or
in
or
mov
or
icebp
scas
or
mov
add
add
scas
or
shrb
add
scas
or
enter
push
scas
or
shrb
add
and
or
ja
outsb
imul
insb
add
gs
jne
xor
cs
insb
add
jb
fs
insb
add
insl
arpl
xor
fs
insb
add
imul
fs
insb
add
gs
insb
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
popa
addr16
insb
insb
add
outsb
insl
insl
cs
insb
add
outsl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
jb
imul
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
scas
or
add
add
repz
or
add
add
add
add
adc
add
sub
add
inc
mov
add
add
add
or
add
add
insb
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
add
cmp
add
dec
mov
add
add
add
or
add
add
add
dec
outsb
je
jb
gs
gs
fs
imul
jae
jb
gs
je
imul
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
popa
addr16
imul
dec
arpl
push
imul
popa
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
push
dec
outsl
je
data16
arpl
inc
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
arpl
jne
dec
popa
jo
gs
imul
jbe
dec
jne
push
jb
je
add
add
inc
inc
insb
gs
outsb
jne
add
add
gs
je
push
imul
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
je
arpl
imul
add
push
outsb
jb
popa
insb
imul
arpl
add
je
gs
outsl
popa
jb
push
jns
add
add
popa
jb
push
gs
imul
push
push
inc
dec
outsl
arpl
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
gs
jb
inc
jbe
outsb
je
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
sbb
inc
mov
and
add
add
add
xor
fnsave
jnp
or
out
shll
popf
iret
jp
scas
adc
rcrl
push
mov
enter
insl
aaa
inc
movsb
pop
repnz
arpl
fwait
stc
mov
add
jo
in
cmp
xor
loop
cmp
and
cltd
imulb
sub
cmp
xchg
idivb
icebp
xchg
dec
xor
aam
or
adc
es
jo
bound
jno
adc
sbb
lock
mov
jmp
mov
jnp
daa
cli
in
insb
xchg
imul
fs
fldenv
nop
push
or
mov
sbb
xor
aaa
into
push
adc
jge
or
pop
shrb
loopne
in
cmp
sbb
out
mov
push
jb
popf
jp
dec
xlat
inc
gs
mov
aam
lret
and
push
xchg
pusha
js
in
rolb
add
sbb
in
xchg
inc
lods
and
cmp
in
adc
cmp
call
lcall
pushf
mov
sub
pop
mov
pminub
fwait
jno
xchg
mov
test
pop
orl
jmp
flds
xchg
add
xchg
leave
mov
sub
push
cld
mov
inc
popf
fnstsw
sub
sbb
fcomps
ja
dec
dec
cmp
mov
push
pusha
mov
mov
mov
std
lret
add
outsb
out
fnstsw
shll
mov
test
test
ficoms
out
inc
xchg
mov
cmc
dec
jge
add
mov
mov
idivb
and
xlat
jmp
add
aas
pop
in
icebp
jne
xchg
sbb
mov
sbb
cmc
movsb
jae
adc
je
mov
xchg
cltd
xchg
pop
stos
and
aas
jae
repz
xchg
cltd
out
fldcw
xor
xor
push
xlat
ficoms
fisubrl
stc
lret
incb
enter
and
aad
or
loopne
jecxz
xor
push
fbstp
pop
shrl
divb
xor
jecxz
xor
fstps
xchg
aaa
inc
or
xor
in
mov
repnz
xchg
popf
lahf
adcb
mov
xchg
xor
addr16
insb
jbe
mov
sub
jnp
aas
into
mov
adc
loopne
add
adc
sahf
inc
insb
ss
xchg
inc
out
js
orl
push
jle
dec
test
popf
mov
sbb
mov
lret
mov
cmpsb
insb
mov
pusha
frstor
imul
imul
fistl
cmpsl
call
imul
test
cmp
js
dec
xor
sub
test
mov
ja
inc
cmc
sub
loopne
inc
inc
pop
mov
jge
enter
idiv
add
js
push
pop
fwait
data16
js
enter
add
mov
and
xchg
jo
xchg
cmp
pop
shrl
pop
inc
shl
movl
or
insl
push
dec
mov
cmp
das
rcll
cmp
jmp
aam
or
lret
xchg
mov
outsb
sbb
cld
jo
ja
scas
mov
movsl
sub
sti
int3
adc
and
add
ret
and
sbb
mov
andl
pop
xchg
rcrb
inc
out
xchg
adc
adc
xchg
lock
jne
cmp
daa
das
into
add
cwtl
push
mov
jge
pop
js
and
popa
popa
int
ja
pop
arpl
call
js
inc
lds
std
and
push
mov
rcrl
mov
add
lahf
sub
sbb
and
jmp
gs
clc
push
xchg
adc
sbb
hlt
adc
arpl
lods
subb
sbb
mov
or
bnd
icebp
jmp
repz
xchg
mov
scas
bound
cmp
les
mov
xor
sbb
je
push
cmp
and
or
stc
pop
dec
dec
mov
in
mov
icebp
gs
jle
sarb
pop
mov
fistpl
insb
inc
fdiv
jbe
add
sti
loope
jo
inc
pop
fsts
adc
pop
inc
nop
mov
jnp
mov
push
pop
lods
add
test
jnp
and
or
movsb
cwtl
pushf
push
jbe
popa
push
mov
push
sahf
pop
andl
in
inc
mov
fildl
cmp
js,pn
fstpl
orl
sbbb
inc
push
sbb
call
cmp
mov
movsb
mov
xchg
scas
in
andl
or
mov
mov
add
or
add
mov
or
xchg
pop
cli
sub
dec
pop
ja
mov
mov
lock
and
sbb
xor
jae
cmp
jns
cmc
aaa
dec
xchg
fmuls
pop
sbb
loope
lret
ror
pop
dec
pop
dec
pushf
fidivs
aas
add
add
ja
xor
loop
imul
sbb
cmp
mov
jno
cmp
jmp
in
das
scas
jmp
push
xor
jle
in
inc
sub
mov
jns,pn
sub
xchg
loop
iret
out
lahf
xchg
imul
xchg
jg
nop
mov
arpl
ds
imul
pop
mov
leave
push
nop
pop
loope
out
sub
ret
xchg
push
cmpsl
dec
mov
jns
test
push
jnp
push
jo
lock
movsl
sbb
ret
inc
add
mov
repnz
aaa
pop
xchg
shll
ljmp
sub
dec
stos
dec
jecxz
dec
cmpb
mov
xchg
adc
test
cli
lahf
and
jle
loopne
pop
std
lahf
cwtl
cmp
in
sub
fildl
jge
cld
imul
cmp
pop
add
jmp
aas
jns
jnp
cs
cmp
push
pop
mov
arpl
pusha
cmpsl
mov
out
push
push
fbld
jge
push
pop
out
fisttpll
jle
sysret
mov
xchg
xchg
data16
dec
idivb
movsl
mov
pusha
in
in
js
movsl
loope
jmp
jne
outsl
jae
je
xchg
popf
sarl
lea
in
jb
cmp
cmp
mov
gs
add
push
std
int3
movsl
push
jno
adc
mov
sti
dec
pop
cmp
sub
jne
adc
fsubs
mov
adcl
sbb
xor
and
xchg
sbb
jno
lret
loop
xchg
sbb
aad
dec
ja
aad
push
adc
cltd
scas
test
push
sbb
das
fldt
mov
inc
bound
nop
lea
inc
xchg
sbb
hlt
push
sbb
scas
out
cmc
inc
sbb
movsl
push
push
clc
sub
insb
xchg
jge
or
stc
or
rcrl
scas
xchg
adc
addr16
and
inc
loopne
and
lea
xchg
xor
mov
jno
cmc
or
sbb
in
test
jge
pop
jmp
sar
lcall
test
mov
and
push
pop
into
add
xor
mov
mov
jae
ror
lods
clc
and
mov
testb
push
shl
jbe
test
mov
pop
scas
xor
lods
dec
inc
roll
mov
mov
pop
push
xchg
pop
sub
xlat
cmp
dec
das
adc
xor
inc
sbb
add
xchg
lahf
push
adc
fstpt
and
or
insb
rcl
xchg
fcmovb
scas
int
in
clc
xor
int3
lahf
jae
xchg
push
inc
sbb
cltd
sub
rorb
out
mov
in
sbb
cmp
lods
stos
sarb
pop
out
adc
repz
dec
or
inc
js
cmpsl
push
jecxz
dec
int
lock
js
js
pop
xchg
pop
jae
dec
popf
sub
ja
mov
cmp
cmp
inc
jmp
lcall
movsb
cwtl
shll
fisttpl
jg
setns
out
jmp
and
jge
inc
push
inc
lea
push
insb
cmpsb
or
imul
dec
or
into
int3
imul
je
mov
imul
addl
jne
roll
cmp
jmp
xor
xor
add
insb
shll
sbb
gs
jnp
xchg
fs
adc
inc
aad
push
leave
dec
sti
push
or
cmpsb
cmp
add
push
jecxz
sbb
add
mov
jbe
push
arpl
inc
fcomi
mov
repnz
clc
movsl
enter
xchg
add
inc
and
and
xchg
and
nop
iret
push
std
lea
push
aaa
addr16
leave
into
xchg
cld
push
fnsave
or
mov
and
mov
or
cmpsl
aas
loopne
push
pop
sahf
add
cmp
jp
xor
push
popa
sub
sti
stos
sbb
and
jbe
sbbl
mov
and
bound
push
ss
or
cmpsb
loopne
lea
sbb
ss
sarl
adc
adc
xchg
stos
jne
add
sbb
lret
fwait
out
mov
push
jl
pop
inc
xor
mov
mov
add
outsl
dec
out
or
xor
mov
mov
movsl
sbb
add
sti
sbb
mov
pop
popf
js
imul
pop
rolb
imul
test
add
jae
mov
test
pop
cmpl
sub
test
push
sub
add
mov
mov
loopne
jno
mov
cmp
mov
pop
adc
push
jle
inc
and
addr16
pop
repnz
outsl
repnz
and
fiaddl
leave
in
arpl
pop
dec
fldcw
adc
fcoml
rcr
pop
into
mov
aaa
cmp
neg
and
push
in
or
inc
bound
cmpsl
or
int3
cwtl
xchg
ret
sbb
sbb
cmc
mov
jmp
cmp
pop
addr16
mov
and
jmp
jle
insl
gs
pop
dec
pop
insl
jae
pop
es
dec
leave
add
test
ret
xchg
cmp
xor
icebp
cmp
mov
pop
and
cmp
rcrl
and
jg
stos
into
or
mov
sti
jmp
es
movsl
mov
mov
pop
je
xchg
daa
aas
push
or
mov
xor
scas
jp
and
loop
icebp
scas
xchg
and
dec
sub
lret
sar
sahf
xor
push
imul
push
pop
fimuls
je
jne
sbb
dec
adc
cli
cld
or
jns
cwtl
pop
sub
es
rcll
xor
lahf
inc
push
cmp
add
jmp
jns
icebp
mov
pop
mov
scas
int3
scas
pop
outsb
stos
scas
sbb
mov
mov
rcrb
push
or
icebp
dec
enter
mov
movsl
hlt
nop
ss
mov
jmp
bound
repnz
icebp
pop
test
add
xor
ss
mov
mov
push
out
es
mov
or
roll
mov
outsl
leave
nop
repnz
ret
mov
shl
sbb
mov
scas
mov
mov
cs
push
aas
insb
adc
mov
pop
xchg
int
xor
sbb
jnp
add
clc
rorb
mov
mov
push
aas
xor
add
insl
fidivs
popa
fs
ja
popa
sbb
stos
fmulp
test
out
cltd
or
cltd
mov
add
push
popf
lods
xor
hlt
sub
std
add
lods
mov
add
into
repnz
mov
mov
and
push
push
adc
add
sti
mov
dec
mov
xchg
into
xchg
xchg
mov
mov
popa
movsl
nop
mov
bswap
fildl
call
std
or
push
enter
inc
enter
loop
inc
mov
cli
arpl
scas
out
pop
xor
lea
ret
movsl
xor
and
jb
pop
jp
dec
xchg
pop
cmp
pop
rcrb
mov
inc
repz
mov
adc
inc
cmpsl
scas
push
shrl
and
add
in
int3
jae
sbb
inc
pop
inc
add
mov
mov
sub
arpl
mov
out
push
xor
push
mov
jecxz
cld
aad
test
mov
mov
insb
xchg
in
es
inc
dec
mov
inc
int
xchg
sbb
call
push
fstl
jb
push
pop
cmp
dec
and
ficompl
sarl
in
mov
dec
mov
insb
cld
jl
jecxz
pusha
cmp
dec
mov
jno
pop
xchg
xor
popa
outsb
mov
std
xchg
xchg
jns
inc
or
daa
xlat
pop
xchg
in
fnstcw
call
std
stc
mov
aaa
pop
or
rcrl
movsb
xchg
or
cld
mov
loope
nop
sub
pop
scas
jle
fidivrl
pop
movsl
cmp
rorb
push
cmpsl
lea
mov
idivb
addb
pop
testl
in
mov
pop
movsl
jl
push
ss
into
call
sbb
cltd
mov
adc
xlat
push
cs
test
in
xchg
cmp
mov
dec
push
and
xchg
mov
shr
bound
xchg
sti
adcb
mov
add
xor
addr16
hlt
cs
jb
int3
fadds
into
inc
pop
inc
outsb
imul
mov
leave
jne
sbb
xchg
jbe
push
pop
andl
xor
out
pop
dec
add
adc
xor
and
enter
mov
pop
lret
mov
mov
xor
in
mov
test
cmc
lods
sbb
add
insb
mov
inc
push
mov
push
ljmp
jo
lret
jge
in
pop
lret
inc
xchg
mov
mov
push
mov
fstl
cmpsl
push
jno
push
sub
sbb
or
jo
int3
out
xchg
hlt
mov
scas
fmul
sub
xchg
mov
push
call
push
aaa
insb
icebp
gs
ret
out
sub
pop
or
call
pop
cwtl
inc
fistpl
fs
mov
xor
mov
stc
movsl
outsl
adc
mov
cmp
leave
ss
std
outsb
iret
stos
pop
lds
jae
and
leave
in
test
daa
out
dec
cs
fdivs
sbb
clc
outsl
jnp
pop
popf
or
inc
inc
inc
aas
push
push
jecxz
js
lods
add
aam
inc
push
dec
mov
test
rolb
lds
adc
cmp
add
push
inc
sub
stc
in
add
xchg
aaa
test
lret
xchg
nop
mov
mov
aas
stos
inc
or
sub
and
mov
jne
ss
shlb
adc
sti
pop
pop
in
pop
or
inc
push
out
outsb
popa
imull
stc
repz
or
cmp
movsl
daa
pop
sarb
cs
push
sahf
inc
in
sbb
dec
push
cmp
jae
shl
dec
scas
jg,pn
xchg
sub
scas
ret
outsl
fdivrl
clc
ss
in
loope
sub
fists
out
push
ja
push
mov
cmp
aam
shl
jno
lods
inc
cmp
mov
stos
rorb
es
lods
cmp
ret
bound
lock
mov
push
mov
and
jle
mov
pop
lret
and
pop
pop
in
push
mov
cmp
cmpsb
sub
or
adcb
inc
inc
mov
fwait
mov
scas
cwtl
shll
mov
xchg
mov
arpl
lret
mov
andl
icebp
shll
mov
adc
out
inc
les
bound
nop
leave
ds
add
inc
or
outsl
test
adc
jbe
push
lretw
hlt
push
das
leave
mov
push
mov
jg
and
mov
pop
das
adc
aas
xlat
or
jbe
add
lret
inc
adc
icebp
adc
bound
bound
adc
adc
or
gs
dec
ret
ja
cmc
add
xor
jmp
xchg
inc
push
sbb
push
in
push
aas
scas
hlt
vfrczps
in
adc
adc
call
adc
inc
jg
in
inc
es
das
jge
xchg
out
or
cmp
sub
mov
sub
push
in
jo
sbbb
stos
sub
pop
fcomip
mov
dec
push
pop
pusha
std
jmp
out
repnz
mov
ds
es
dec
jmp
inc
fimull
insl
mov
sub
std
mov
sti
mov
push
add
inc
call
fimull
mov
loopne
int
adcl
inc
hlt
xor
aad
shlb
lods
iret
pop
test
mov
test
outsl
or
call
dec
mov
xchg
test
es
xchg
mov
and
mov
iret
je
xchg
stos
aam
inc
test
loop
mov
jmp
ficoml
sub
fadds
xchg
mov
repz
cmpsl
sbbb
cltd
outsb
cmp
xchg
pop
mov
xor
cld
sbb
mov
inc
imul
dec
lods
pop
xchg
mov
jmp
push
push
jecxz
pop
movsb
cwtl
cmpsb
movsb
xchg
enter
mov
jmp
or
dec
fs
outsb
and
or
aad
stos
in
loope
mov
daa
mov
xlat
xchg
mov
xor
mov
shll
mov
push
sbb
xchg
ret
and
rol
or
scas
add
pop
movsl
lods
pop
jle,pn
add
in
iret
and
xor
sarb
sti
or
sbb
dec
out
mov
movsb
movsb
or
add
enter
or
cld
adc
push
sbb
and
in
jl
adc
sbb
jb
rcll
out
shll
mov
insb
push
cmp
xor
cwtl
jge
pushf
iret
add
call
sub
jnp
popf
insl
call
ret
pop
mov
idivb
movsl
jbe
lret
notb
fsubrs
dec
or
sub
popa
pop
cmp
call
and
lock
add
mov
push
mov
rcrl
imul
sub
add
cmp
jae
xor
mov
nop
xor
jae
and
adc
adc
mov
add
lods
lods
add
mov
call
push
jl
and
out
pop
add
mov
test
and
inc
pop
lds
aad
mov
leave
and
dec
jbe
aad
inc
stos
sub
lock
mov
gs
sahf
mov
int
lock
into
push
test
xchg
mov
lahf
scas
lods
pop
inc
loopne,pt
addb
and
cmpsl
movsb
aaa
push
movsb
pop
sbb
and
adc
cltd
adc
rcll
pop
das
push
call
pop
fisubrl
jnp
fldl
sub
cmp
mov
divb
xor
inc
sub
jmp
hlt
clc
cmp
mov
dec
xor
mov
or
xor
push
sbb
mov
xorl
ljmp
out
xor
outsl
int3
inc
add
dec
cmp
xor
in
mov
imul
jg
dec
ret
mov
aam
sub
aad
or
das
fcom
pushf
movsl
jmp
fidivrl
rcll
inc
mov
sbb
je
imul
push
mov
sub
jo
loopne
push
jo
dec
addr16
fildll
repnz
pop
adc
out
jbe
dec
bound
jl
mov
and
sub
insb
or
cwtl
test
xor
jle
ficomps
push
cs
xlat
and
call
out
pop
mov
or
fs
fstps
jno
sub
and
xor
faddl
push
aam
push
xchg
and
push
sbb
call
rorb
xor
enter
dec
push
mov
cld
test
add
mov
pushf
insb
cmp
add
dec
sbb
icebp
mov
xchg
imul
aam
pop
data16
out
xor
pop
inc
and
clc
xchg
loope
sbb
pop
xor
in
jb
xchg
and
add
sbb
js
lcall
call
ljmp
inc
fnstsw
jmp
jnp
frstor
inc
lahf
jecxz
or
pop
rcll
rep
push
shlb
jl
or
push
and
scas
repnz
pop
pop
imul
dec
xchg
pop
mov
xchg
xchg
sbb
xchg
pop
repnz
dec
and
mov
jb
mov
xor
push
add
repz
push
daa
push
mov
jo
call
pop
jno
imul
push
leave
imul
movl
sbb
jp
lahf
inc
xchg
xchg
sbb
lds
rolb
sarl
jo
in
xor
inc
and
push
outsl
cld
cmpsl
add
dec
es
inc
rcl
lcall
fnstenv
jae
adc
xchg
shrl
mov
stc
lods
sub
add
sub
xlat
or
bound
stos
daa
mov
lret
add
test
inc
push
mov
jae
mov
xchg
pushf
jp
pop
test
pop
inc
push
leave
xor
push
out
mov
jge
movsl
icebp
push
ljmp
shl
mov
mov
in
stc
add
mov
jnp
call
mov
or
popf
fmul
jb
adc
lcall
xlat
and
jne
fnstenv
test
push
pop
icebp
mov
sbb
aad
add
lods
lcall
pop
and
jb
and
movsb
dec
push
pop
cmc
repnz
ret
out
or
adc
xchg
mov
outsl
cltd
or
daa
dec
xchg
mov
out
hlt
pop
es
insb
in
mov
shrl
adc
xchg
int3
push
out
call
inc
pushf
sub
sub
pop
xchg
andl
js
mov
dec
out
sub
jg
mov
cmp
inc
add
sbb
dec
out
shll
scas
shrl
push
aad
data16
mov
dec
andb
inc
cli
xchg
gs
rclb
lods
sub
lods
cmp
mov
loop
ret
mov
imul
ret
mov
add
jnp
pop
cmpsb
jns
js
or
movsb
xchg
pop
xchg
data16
xlat
jns
add
fucom
inc
std
lods
shll
je
add
hlt
jp
and
stc
out
sbb
test
ja
movsl
fucomip
jo
sbb
aad
stc
or
movlps
add
mov
outsb
inc
shrb
inc
xchg
bound
dec
outsl
cld
fsubrl
scas
inc
fiaddl
adc
push
jae
jl
div
add
pop
jns
frstor
shll
xchg
pop
xchg
mov
cltd
mov
repz
test
cmp
sbb
call
cmpsl
mov
outsl
aaa
sub
add
jg
lods
out
push
jmp
test
int3
xor
add
or
cltd
mov
shll
mov
and
sbb
jns
add
mov
fwait
and
in
sub
lods
test
sbb
jmp
add
test
pushf
cld
ss
adc
pop
addr16
mov
and
cmp
mov
fwait
push
xchg
scas
jecxz
mov
adc
out
sub
hlt
jno
fadd
into
xor
push
and
popl
imul
mov
fimull
mov
jnp
jle
inc
jl
sbb
pushf
xor
scas
ljmp
lret
in
jmp
ret
fs
xor
cltd
pop
or
lea
in
lret
cvtps2pi
sub
sbb
ja
lret
cmp
and
int3
adc
scas
lahf
push
in
or
je
adcb
jmp
arpl
cmpsl
adcl
jno
cmp
aaa
jb
cmp
ljmp
jb
stos
insb
popf
sbb
and
push
int3
fidivrs
rolb
pop
imul
jge
inc
sub
movsb
mov
lea
mov
mov
arpl
add
xor
jo
fsub
hlt
test
cmp
xchg
sbb
push
rcll
xchg
push
mov
push
mov
sbb
push
and
push
in
dec
hlt
jo
xchg
lret
loop
fs
je
cmp
movsl
fsubrl
mov
dec
dec
and
xchg
jg
cld
push
out
mov
pop
sbb
int
fldt
fsubs
jecxz
mov
ljmp
cmp
ret
stc
pop
cmp
adc
std
dec
jae
xorb
push
lret
aad
xchg
arpl
mov
fs
dec
sub
cs
xchg
in
mov
cmpb
xchg
xchg
mov
mov
dec
sbb
jbe
mov
mov
mov
mov
outsb
adc
scas
das
pusha
xchg
bound
sub
out
jb
mov
adc
jl
and
jb
jb
add
js
dec
mov
stos
in
pop
push
outsl
push
sbb
cld
jns
add
mov
sti
in
icebp
dec
push
sub
jne
xchg
pop
inc
cmp
jp
and
mov
jb
mov
sub
out
aam
movsl
adc
mov
mov
adc
jl
and
or
pusha
xor
jp
sbb
pusha
jmp
push
inc
insb
lcall
xlat
fbstp
ss
mov
dec
pop
sbbl
xor
sub
inc
push
mov
and
pop
sub
rcrb
int
cmovp
xchg
iret
movsb
add
or
or
pop
sub
jp
cwtl
mov
mov
test
and
mov
mov
sti
push
xchg
push
inc
fldl
dec
out
or
pop
mov
test
mov
sbb
shrl
fisubrs
aad
inc
sbbl
jne
aad
loope
cwtl
hlt
sahf
push
lods
bound
enter
inc
sub
cmp
sahf
sbb
sahf
imul
xchg
jne
fisttpll
xchg
fs
fldt
push
dec
xor
in
push
sbb
sbb
lock
add
out
cld
or
mov
or
je
or
test
sub
jne
sbb
roll
ret
mov
adc
xlat
dec
aaa
decb
ja
aas
mov
mov
jno
lahf
push
add
repnz
leave
lret
dec
je
fs
out
inc
cmp
cmp
mov
flds
push
insb
fs
inc
mov
inc
mov
or
insl
rol
cld
cmp
pop
dec
cmp
lock
pop
ds
sbbb
xor
mov
inc
cs
mov
ljmp
rolb
ss
sti
mov
add
mul
test
and
mov
aad
das
inc
lahf
inc
sbb
mov
mov
loopne
cwtl
into
cmpsb
stos
sbb
insl
cwtl
dec
negl
leave
or
addr16
pop
dec
cli
sub
and
fadd
pushf
xchg
push
shl
popl
mov
pop
fiaddl
stc
xchg
pop
rorb
mov
lods
add
test
mov
imul
add
data16
fwait
mov
xchg
mov
and
pop
arpl
xchg
in
cmp
lret
pusha
ja
and
cmp
pop
bound
aad
adc
mov
out
inc
add
lods
adc
push
mov
and
jp
adcb
inc
jns
adcb
mov
popf
and
cmp
mov
mov
add
cli
jecxz
pop
jg
scas
ret
scas
pop
lcall
or
icebp
inc
in
inc
lahf
imul
sbb
test
jne
xchg
je
jb
inc
push
and
add
incl
enter
push
add
iret
mov
jns
ljmp
cld
dec
in
stos
push
and
mov
stos
xor
inc
mov
push
jl
or
mov
mov
data16
jle
or
aas
test
add
pop
jle
cmp
or
mov
add
fimuls
stos
aaa
ds
jmp
mov
push
fs
das
mov
aad
dec
pop
pop
and
and
mov
lahf
outsl
dec
fisubs
shlb
and
arpl
in
pop
cmp
xchg
in
cmpl
inc
js
into
addr16
int3
lods
insb
xor
inc
adcb
pusha
mov
lea
push
sub
push
adc
jae
stos
ja
cmpsb
sbb
hlt
pop
pushf
jbe
lcall
dec
push
dec
pop
insb
insl
aaa
sub
sub
push
faddl
nop
push
sbbl
out
test
xlat
jae
adc
cmp
sub
scas
pop
test
popl
jp
ss
fsubs
das
pop
jle
mov
dec
add
sbb
rcl
jg,pt
inc
cli
rcl
sarl
in
fisubs
cwtl
mov
ret
sub
clc
adc
push
das
sub
push
xchg
lret
out
in
inc
push
add
notb
iret
pop
xchg
into
or
dec
jbe
lea
xchg
dec
stos
mov
cmp
sahf
cmpsb
mov
mov
fisubrl
push
fmuls
enter
xorb
int3
rolb
dec
fistl
xor
shlb
sarb
xchg
mov
sbb
pop
int3
sub
aas
xor
adc
cmp
jl
push
cmp
inc
sahf
xchg
addr16
mov
in
add
xor
fstl
test
mov
pop
cmpsb
enter
lret
outsl
testb
nop
andb
outsl
adc
pop
adc
out
mov
sub
jb
aam
push
mov
dec
testb
cli
inc
cmp
rcrb
mov
arpl
in
cmp
ss
popa
sahf
mov
mov
cmp
les
push
int
mov
mov
xor
and
or
inc
pop
jae
pop
lcall
cmp
es
jecxz
mov
lds
sti
xor
xor
es
cmp
repz
push
insl
sub
rol
sub
push
shl
outsl
cs
sti
mov
pop
nop
arpl
mov
mov
cmp
adc
mov
dec
scas
inc
jmp
loope
je
mov
sti
fcmovu
js
daa
push
je
lods
xchg
test
arpl
xor
hlt
out
xchg
bound
sub
mov
fdivs
decb
dec
jge
rcrb
push
sbb
ret
loopne
in
mov
call
stc
lods
testl
jae
push
adc
les
push
and
aaa
mov
inc
ljmp
mov
imull
fmuls
popf
gs
clc
jns
cld
dec
jp
push
push
adc
jg
xor
sub
ja
sub
insl
sub
rol
and
pop
jmp
push
movsb
mul
inc
repz
mov
out
cld
and
imul
fnstenv
mov
iret
addr16
gs
shrl
and
out
sbb
sbb
out
cmpl
insl
outsb
cs
and
insl
ja
mov
jne
std
loope
mov
out
pop
mov
mov
iret
mov
mov
mov
cltd
push
cwtl
test
adc
movsb
push
mov
mov
xchg
imul
vmovdqa
icebp
roll
pop
lret
add
ss
add
jae
pop
test
and
sub
nop
fldt
or
dec
filds
mov
jns
jmp
sub
inc
cmp
xchg
sub
jecxz
leave
xor
mov
call
nop
push
int
adc
test
mov
rolb
push
ret
test
adc
push
mov
xchg
or
inc
mov
and
xlat
xchg
movsb
pop
or
mov
mov
inc
sbb
inc
pop
scas
stos
xor
and
pop
icebp
or
mulb
adc
imul
cli
jge
xchg
sub
inc
ljmp
ds
fscale
popa
out
rcrb
push
call
mov
jle
fdiv
shll
lcall
dec
insb
push
shl
aas
mov
inc
mov
out
and
ss
xor
cli
pushf
add
add
jb
push
mov
jp
add
data16
xlat
ret
addr16
push
bound
mov
pushf
xlat
add
in
lret
stos
mov
or
push
adc
xor
push
sub
lds
int
mov
mov
cli
dec
jbe
das
jbe
jl
jp
inc
pop
sub
sbb
jg
movsl
sbb
shll
push
xor
xorl
mov
jo
iret
les
sub
sahf
pop
dec
push
and
decl
jb
mov
sbb
in
dec
or
adc
rcrb
lods
pop
repz
leave
std
aas
sbb
bound
mov
xor
loopne
cmpsb
mov
cmp
sub
push
imul
negb
cmp
mov
lods
jecxz
add
cmp
inc
cmp
jecxz
fwait
icebp
or
les
leave
mov
aaa
popf
nop
push
sbb
lods
sbb
xlat
imul
out
aam
leave
jge
pop
sub
mov
add
fcompl
pop
outsl
mov
and
popf
inc
in
rcrb
nop
data16
ffree
cld
push
std
adc
pop
mov
xor
cmpb
mov
add
mov
daa
pop
das
shlb
and
fs
jge
pop
dec
mov
test
mov
mov
bound
into
pop
jge
insb
push
and
clc
insb
mov
and
mov
fwait
out
push
pop
aam
push
xchg
scas
gs
or
scas
xchg
nop
or
add
sti
dec
or
adc
push
sbb
ja
inc
mov
mov
loop
ds
mov
mov
lods
mov
push
stos
int3
jbe
push
xchg
es
add
jmp
aaa
cmp
jmp
enter
pop
icebp
int
fnstenv
xor
fucomip
shl
xchg
sahf
cmp
in
add
push
jg
xor
popf
lods
adc
fstps
xchg
stos
push
xchg
popa
cmpsl
into
ret
test
mov
push
outsl
std
loopne
sbb
shrb
movsb
xchg
dec
fwait
inc
cmp
jae
int
popf
jmp
ret
pop
lahf
cwtl
jecxz
lahf
roll
shrl
cltd
into
enter
jne
loope
inc
jle
lds
or
jbe
fistpl
xor
sub
int
mov
aas
mov
lahf
adc
fidivrs
xchg
cld
pushf
bound
leave
pop
sbb
std
dec
adc
xor
sahf
stos
xchg
ljmp
add
xor
movsb
xchg
pop
adc
outsl
movsl
lahf
rclb
bound
sub
fnstenv
outsb
xchg
lcall
ret
cmc
loop
fstpl
test
test
test
cld
dec
push
sbb
loope
movsb
pop
pushl
cli
daa
xor
or
leave
loop
jle
test
int
or
inc
aaa
mov
outsb
insb
out
add
lcall
int3
insl
lcall
outsb
outsl
fdivr
shr
cmpsl
aaa
adc
out
outsl
pop
xor
test
mov
adc
fs
jecxz
mov
js
mov
ja
sbb
mov
dec
cmp
and
ja,pn
stos
jo
ljmp
rcrb
loope
pop
clc
xor
lock
mov
cld
test
add
push
push
and
push
scas
mov
mov
ja
repz
jle
data16
lcall
adc
repz
cld
scas
shl
sub
pop
nop
lcall
jmp
fildll
je
pop
cld
bound
push
shrl
lret
jne
jnp
gs
mov
add
mov
shr
fucomi
xor
repz
imul
jmp
fldt
xor
sarb
cmp
adc
sahf
ficoml
aad
push
rcrb
outsl
fimuls
pushf
iret
xlat
lret
mov
sbb
push
ljmp
into
dec
outsl
cmp
mov
into
outsb
stos
aad
cmp
adc
and
aam
popf
arpl
inc
jg
rclb
mov
in
popf
xchg
push
out
push
mov
add
push
push
and
fnstcw
dec
jl
testb
inc
cmp
jle
lods
jno
or
and
jmp
mov
cmpsb
out
or
sbb
mov
push
jns
cmp
popf
enter
pop
pop
movsl
xchg
repnz
push
in
jmp
cmp
xorl
int3
pop
stc
gs
cmp
je
lods
aad
and
enter
xchg
cmpsb
xor
mov
inc
loop
jge
inc
adc
xchg
xor
inc
stos
and
scas
out
iret
fildll
mov
dec
das
cld
cmpsb
movsb
lahf
sbb
mov
ffreep
mov
cmpsb
outsb
ror
cmp
adc
std
lods
test
or
pop
push
incb
dec
call
cmp
xchg
loope
pop
ss
jb
das
loope
xchg
add
cmp
cmp
mov
xchg
lcall
call
popa
pop
mov
pop
enter
in
ljmp
stc
stos
sub
mov
repz
scas
cmovp
sbb
pop
nop
orb
repz
sbb
das
mov
xor
mov
ljmp
mov
les
test
cmpsb
jp
in
orb
loope
fbstp
xchg
leave
inc
call
testl
push
pop
ja
pop
inc
add
frstor
outsb
add
pop
mov
dec
vmwrite
and
popa
mov
stc
dec
int
inc
sub
ja
gs
inc
jge
pop
pop
cmp
cmpsb
mov
mov
inc
flds
inc
ja
hlt
sahf
cmp
ja
dec
push
xlat
ja
jbe
insl
push
mov
insl
adc
mov
out
push
fisubrs
shll
ljmp
xchg
sub
movsb
xchg
shll
std
xchg
xor
sub
xchg
mov
je
in
arpl
mov
movsl
nop
rclb
cs
clc
adc
aaa
cwtl
push
insb
push
jo
test
sti
add
dec
sub
stos
mov
cmpsb
cmp
pop
push
inc
xor
ljmp
xchg
in
jne
sbb
adcb
jmp
jae
sbb
das
xor
out
js
xchg
popa
insb
mov
xor
inc
xor
dec
in
cmp
xchg
out
sub
aam
inc
in
xchg
repnz
pop
or
cs
xchg
pop
inc
adc
sbb
and
out
je
push
dec
push
jno
pusha
out
mov
push
cmp
inc
es
xor
adc
ljmp
mov
movsl
sbb
jnp
jns
xchg
pop
cmp
jmp
in
sub
push
add
loopne
in
push
pop
push
adc
popf
fs
cld
imul
scas
ja
inc
pop
outsb
dec
sub
stos
sub
cli
int3
lcall
ret
xchg
push
cmpsl
insb
dec
dec
jg
cmp
and
xchg
mov
out
fidivrl
mov
mov
test
and
dec
push
push
std
outsb
in
aam
movsb
add
enter
or
mov
dec
jbe
or
sbb
jle
addr16
jno
dec
pop
ret
mov
mov
fnstenv
icebp
xlat
jbe
outsl
mov
push
inc
popa
ja
xor
mov
jl
xchg
daa
xor
mov
mov
out
and
sub
or
or
pusha
hlt
ret
pusha
scas
push
ret
das
sub
cmp
out
push
js
lahf
sub
lret
mov
fldcw
jb
jae
xchg
add
movsb
dec
xor
jle
inc
testb
out
clc
and
or
insl
mov
cmpsl
sub
lea
cmp
adc
cmp
icebp
fwait
pop
inc
scas
fstps
mov
xor
bound
fwait
push
fsubl
inc
xchg
ds
mov
stc
sbb
or
jnp
push
das
cs
sbb
cmp
dec
cmc
mov
int3
jb
popa
push
mov
pop
mov
dec
jecxz
scas
push
xchg
and
xchg
push
int
or
inc
jne
je
mov
mov
js
outsb
fxtract
paddb
dec
data16
cmpsb
jne
scas
xchg
test
push
jle
ret
mov
arpl
and
imul
dec
jge
sbbb
lret
fsubl
add
es
mov
cmp
test
cmp
pop
pop
cmp
mov
mov
mov
sub
cmc
add
push
sub
inc
push
aas
imul
xchg
and
and
sbbb
adc
sub
xor
xchg
std
fs
loope
les
dec
js
jecxz
mov
call
jne
aas
out
xchg
jp
mov
push
aas
and
stos
in
data16
xchg
and
loope
sub
cwtl
cmc
push
nop
in
jae
sahf
cmp
xchg
sub
push
in
mov
xchg
ret
cs
stos
stc
faddl
and
cmp
cmp
ljmp
mov
lods
xor
xor
pop
mov
cmc
push
cltd
xchg
clc
or
fbstp
nop
ss
pusha
cmp
lods
xor
or
push
pop
popa
loopne
add
or
cmp
in
inc
mov
cld
icebp
stos
stc
cmp
and
xchg
aaa
rcrl
rorl
mov
jns
and
push
xor
jae
push
fs
add
xor
mov
mov
fwait
sarl
cmpl
enter
adc
push
sahf
pop
fsubs
stos
and
lods
mov
mov
sbb
scas
je
cs
dec
sbb
clc
lods
push
mov
adc
xlat
ss
and
lret
test
jnp
out
xlat
ror
mov
repnz
jb
fs
jb
push
cmp
pushf
jl
cli
or
lret
imul
xor
xchg
mull
jmp
in
cmp
xor
and
xor
fdivr
inc
or
movsl
out
aaa
push
in
fistpll
add
in
add
in
nop
and
sub
jge
cmpsb
outsl
ljmp
fisubl
scas
negl
or
ficoms
arpl
adc
in
loopne
dec
pop
shr
mov
jge
test
and
mov
add
mov
and
outsb
aas
je
test
pop
icebp
ja
and
mov
mov
mov
pop
repnz
sbb
int
outsb
shl
test
push
jle
aad
sub
xlat
jae
mov
aaa
lret
pop
fildll
cmpl
test
insl
shl
lods
sahf
inc
bound
xchg
xorl
pop
dec
addr16
shr
nop
dec
repz
pop
imulb
mov
jns
xor
mov
cmp
out
mov
cltd
cwtl
mov
add
enter
or
imul
xor
mov
push
pop
and
out
jge
cltd
sub
cmp
stos
and
add
xchg
cmp
sahf
jno
pushf
leave
mov
dec
pop
and
push
jmp
out
cmp
sub
mov
mov
cmp
sbb
sbb
daa
stos
jno
scas
mov
mov
xor
add
cmp
push
fdivrs
adc
jbe
lahf
stc
fwait
dec
and
fldenv
jle
repnz
std
dec
sub
sahf
mov
lock
xor
sub
scas
in
push
in
addr16
adc
pop
out
test
ret
xchg
push
jle
dec
jne
dec
dec
adc
mov
add
imul
imul
and
in
mov
fwait
sarb
push
jp
pushl
and
mov
fwait
xor
cmp
shrb
cmp
scas
cltd
push
scas
fdivrp
jo
decb
sub
aaa
std
rcrb
std
es
nop
cmp
cld
hlt
mov
sub
or
and
clc
call
fs
jmp
pop
iret
jb
cmpsb
roll
movsb
or
sbb
insb
jecxz
or
cltd
push
push
mov
lods
shl
and
xor
mov
loope
cmp
push
cld
scas
out
adcl
lret
push
mov
cmp
and
or
add
or
loop
call
pop
rorl
add
bound
out
imul
imul
fsubs
cwtl
mov
sbb
pop
mov
test
call
jge
mov
minps
xorl
outsl
shrb
jle
sbb
jbe
sbb
cwtl
cli
push
push
xor
push
bound
ficoml
out
xorps
mov
pop
jecxz
inc
mov
push
ror
testb
in
shl
shrl
mov
cmp
or
push
clc
mov
xchg
cs
sbb
push
jno
mov
and
test
sbb
mov
sub
xchg
cld
xchg
xor
ror
hlt
incl
in
iret
arpl
cmp
js
int
xor
inc
or
call
mov
aad
popf
fcoml
sti
mov
ds
dec
in
mov
sub
lahf
mov
pop
in
call
lcall
es
sub
insl
xchg
sbb
icebp
aad
mov
cs
xchg
insl
pop
and
xorb
push
xchg
frstor
sub
mov
add
lea
das
xchg
fisubrl
idivb
sbb
ss
dec
pop
in
insb
push
adc
out
shrd
ret
sahf
jl
jb
mov
enter
xlat
or
push
outsb
mov
mov
lds
push
dec
xchg
outsb
popa
movb
shlb
add
int3
mov
addr16
mov
jl
int3
push
repnz
cwtl
dec
jmp
ljmp
cmpsl
sbb
insl
push
xor
inc
inc
mov
adc
sahf
cli
mov
and
dec
dec
mull
push
les
or
xchg
aam
call
movsl
stc
mov
test
call
xlat
cmp
sbb
jecxz
test
inc
pop
mov
cmp
jg
cs
shrb
dec
popa
cli
imul
adc
jecxz
jo
data16
inc
jnp
add
inc
cltd
lea
jmp
data16
xor
mov
and
cwtl
movsl
inc
jl
dec
mov
ljmp
aam
into
dec
inc
mov
push
pop
aaa
mov
ja
adc
aad
mov
scas
pop
mov
incl
mov
cs
mov
xor
rep
adc
ret
fsubrl
push
push
js
sbb
cmp
outsb
xchg
xor
das
shlb
iret
cmp
cs
nop
jns
xor
dec
in
mov
add
scas
popa
adc
lods
add
outsl
pushf
out
push
in
cmpsl
jno
mov
es
mov
fwait
mov
icebp
fstpt
ljmp
and
mov
inc
test
ljmp
rorl
push
js
out
fisubs
add
notb
ljmp
mov
or
push
inc
notl
rcr
adc
popa
or
fwait
and
ja
jns
cmp
dec
out
decl
movsl
shll
lret
mov
bound
stos
sahf
hlt
xor
popf
cmp
xchg
fwait
sub
fwait
ret
inc
jle
andl
out
insl
cmp
fidivrs
sbb
dec
sub
std
or
je
std
jnp
and
jo
mov
fs
xchg
sbb
mov
mov
xchg
in
ficompl
popf
stos
aas
mov
adc
andl
shll
adc
in
repz
pop
and
stos
or
pop
xor
mov
imul
pop
arpl
shrl
mov
pop
sbb
push
lret
cmpl
outsl
sbb
gs
cmp
add
mov
sti
sbb
jno
inc
mov
sbb
xlat
insb
jp
fisttpll
lds
dec
negl
out
bound
sub
bound
inc
sbb
dec
rcrl
gs
xor
fisttps
xor
lds
add
sarl
xchg
jae
int3
fidivrs
xor
sub
out
xchg
xor
mov
mov
xchg
cmovs
adc
mov
jecxz
mov
inc
xlat
and
push
imull
movsl
and
sub
push
jo
xchg
std
add
xchg
setns
repnz
jl
hlt
out
lods
sbb
pop
xor
scas
lods
out
inc
cltd
sahf
pop
movsl
push
mov
push
mov
push
xor
cld
aam
push
scas
mov
xlat
aas
int
and
adc
addb
and
rep
cs
xor
enter
mov
aam
xchg
aad
jl
sub
leave
arpl
rorl
xchg
inc
jle
data16
add
enter
scas
xchg
and
repz
mov
or
xor
in
adc
pop
mov
xchg
dec
dec
in
sub
xchg
dec
xor
outsl
xchg
ret
xor
rcll
out
mov
cmpsb
hlt
adc
xchg
push
push
in
imul
call
insl
aas
mov
or
out
fwait
push
mov
cwtl
sbb
xchg
cmp
data16
push
pop
fiadds
cwtl
orb
gs
outsb
lds
cmp
add
add
or
mov
jg,pt
jno
clc
inc
cmpb
push
fwait
jbe
movsl
jle
cmp
mov
out
push
inc
cld
sub
fistpl
pop
mov
pop
imul
pop
mov
je
push
xchg
into
insb
mov
jae
inc
mov
mov
lcall
scas
dec
lcall
mov
leave
sbb
mov
and
dec
mov
sti
pushf
adc
scas
lret
pop
mov
dec
add
lods
shlb
subb
test
fstpl
aam
scas
scas
pop
lea
ljmp
or
jmp
xor
mov
adc
div
mov
jle
outsb
push
and
xchg
mov
negb
leave
mov
xchg
adc
mov
add
lods
sub
or
pop
orl
in
ss
inc
data16
pop
aam
mov
in
push
push
cmp
or
mov
lds
sub
addb
adc
and
xor
dec
rcll
mov
mov
dec
inc
fdivs
push
xor
out
cs
stos
dec
and
cli
in
aas
popf
neg
in
mov
xor
mov
out
int3
fs
addb
fidivrs
pushf
fstpl
xchg
movsb
push
daa
xor
je
or
mov
xchg
leave
jle
mov
cmp
fimull
subb
jnp
lock
push
xor
dec
sahf
cltd
inc
xchg
pop
dec
sahf
pop
and
imul
mov
or
mov
or
pop
cmp
mov
push
add
movsl
mov
in
frstor
xor
cld
jno
inc
es
rcr
mov
ds
add
xchg
mov
ljmp
sub
in
add
pop
cltd
add
frstor
jg
sub
xchg
ja
inc
jle
pop
inc
pop
out
mov
imul
imul
iret
inc
or
and
iret
inc
pop
xchg
fwait
pop
lret
or
dec
dec
push
fs
repz
lar
popf
dec
xchg
cwtl
adc
fstpl
out
fcmovbe
sbb
rcrl
testb
inc
fcomps
adc
adc
in
pop
call
mov
cmp
sub
cmp
bound
jo
push
ret
add
iret
mov
xchg
mov
cmovs
daa
movsb
adc
inc
push
fistpll
movsl
cld
add
sub
sub
pop
iret
cmpsl
xchg
fwait
jnp
cmpsl
icebp
pmaxsw
sbb
out
popf
or
mov
push
lods
ret
imul
push
sub
int
mov
add
pop
enter
js
outsb
icebp
icebp
cmpsb
jnp
cmp
aam
outsl
bound
shrl
rcr
ret
push
jne
sahf
xchg
dec
movsb
mov
and
dec
adc
mov
stos
pop
cs
sub
push
xchg
std
test
jbe
cltd
shll
jmp
mov
adc
fwait
push
int3
xchg
pop
adc
aas
popf
xchg
and
int3
xor
shl
jne
push
sbb
inc
sbb
sbb
sub
add
xchg
sub
jno
xchg
push
xor
xchg
ljmp
xlat
mov
pop
sub
adc
lock
jmp
lock
fnstcw
push
popf
popf
insl
jo
imul
jmp
inc
mov
sbb
clc
sbb
mov
push
cmp
pop
mov
je
ss
cmpsl
rorb
jmp
jge
popf
pop
notb
test
jl
jae
xor
outsb
push
out
pop
pop
push
pop
loope
push
ljmp
test
lahf
imul
arpl
aaa
adc
fdivr
sbb
and
popa
mov
sub
xchg
popf
fs
mov
push
movsb
stos
dec
jno
imul
xchg
pop
in
pop
loope
xor
add
iret
aam
mov
popf
sub
dec
mov
mov
mov
jae
fistl
dec
test
jg
xchg
cmp
mov
inc
loop
sub
out
aad
push
push
faddp
pop
rolb
inc
sub
shl
stos
ja
sahf
jne
sub
es
aaa
insl
enter
xchg
mov
xchg
insl
xor
inc
cmp
insl
jno
dec
in
push
daa
ret
add
lret
pop
lea
jno
call
hlt
loopne
jo
std
dec
pop
stos
pop
imul
std
or
ficompl
gs
push
pop
movsl
adcl
push
imul
leave
or
insl
and
shlb
push
cmp
or
xchg
fstl
xor
jmp
imul
popf
sbb
adc
outsb
pop
les
lods
dec
xchg
lcall
xchg
inc
cmpsb
sbb
into
sub
les
shl
sbb
cmc
mov
lods
and
xor
mov
add
ss
andb
scas
inc
fwait
mov
repnz
dec
dec
js
or
pop
mov
testb
movsl
add
dec
pop
aas
mov
insb
or
xchg
xor
out
mov
cmp
inc
adc
push
into
mov
ja
or
inc
shrl
fisttpl
orl
adcb
dec
pop
lret
test
cmpsl
mov
loope
inc
pop
push
inc
fiadds
jecxz
scas
cmpsb
mov
xchg
or
loopne
add
fwait
and
cs
pusha
lods
dec
push
mov
lods
add
cmp
in
shl
cmp
pop
popa
xchg
lret
xor
sbb
sbb
or
pop
xor
cmpsl
add
fmull
fucomip
inc
xor
sub
test
mov
movsb
leave
add
inc
jo
sarb
cmpsl
mov
mov
inc
sub
out
in
stc
add
mov
push
jae
jns
movsl
mov
xor
cmpps
sub
xorl
loop
adc
int
orl
jge
js
sti
or
out
cmp
jne
daa
inc
ss
push
mov
bound
mov
je
lods
cld
cwtl
pushl
add
xchg
test
push
mov
out
jl
inc
push
mov
push
fidivrs
pop
adc
inc
add
xchg
repz
sub
test
cmpsl
fadds
xor
mov
std
mov
push
insl
jae
rcr
adc
and
inc
js
mov
add
cmp
mov
adc
cmpb
movsb
push
int3
imul
int
mov
rorl
and
outsl
repz
in
add
jp
jp
shll
stos
mov
rcrl
sbb
jb
sbb
test
iret
fstps
jecxz
pop
mov
mov
or
int3
gs
cs
pusha
pop
lea
outsl
stos
lods
adc
roll
pusha
mov
or
imul
push
xchg
or
push
xchg
mov
push
or
dec
js
cs
adc
bound
jae
lret
hlt
xorb
and
aaa
xor
mov
loop
mov
push
pop
xchg
arpl
scas
idivl
xlat
sub
adc
imull
mov
gs
fs
cmp
pushl
jbe
jae
fidivrl
inc
mov
and
push
add
mov
jno
cmp
dec
cwtl
loop
push
loop
das
movsb
loopne
sbb
or
mov
fisttpl
xchg
mov
xchg
xlat
in
bnd
cmp
rcll
inc
mov
cli
fsubs
ja
rolb
ja
lock
lods
inc
sbb
cmpb
pusha
cwtl
int3
push
pop
repnz
in
mov
rcll
mov
and
pusha
jecxz
in
out
xor
ja
mov
div
idiv
push
sub
mov
ret
push
sub
mov
and
flds
xor
add
inc
jge
std
push
jmp
jg
sbb
dec
add
push
std
jp
cli
xorb
lods
jnp
inc
out
cmp
sub
lods
movsl
loop
shl
pop
sbb
or
jo
mov
fwait
jae
popf
fisubl
lcall
repnz
test
jno
sbb
xor
pop
or
aam
cmp
sub
dec
pop
ja
pusha
push
or
or
pop
jp
sub
cmp
fwait
jmp
inc
test
sbb
jmp
insb
lods
mov
sub
push
clc
inc
push
add
xor
es
fcoml
jbe
std
loop
xchg
in
mov
add
icebp
cli
jmp
fwait
inc
pop
pop
jge
jnp
test
cmp
push
je
icebp
mov
cmpsl
inc
test
or
add
pop
xchg
cltd
cli
dec
test
add
pop
mov
inc
loope
movsb
jne
pop
inc
test
xchg
xor
mov
bound
je
xor
add
or
jns
cli
cmp
sub
inc
leave
fs
fldt
and
adcl
outsb
repz
fcoms
push
jge
push
test
and
ss
repnz
pop
fsubrs
xchg
sub
xor
stos
and
orl
in
or
into
pop
xchg
repnz
pop
xor
out
cwtl
mov
loop
repnz
rcrl
mov
push
lods
mov
sar
enter
test
cmp
and
mov
pop
sbb
fisubl
xorb
pop
cmp
mov
mov
shrb
add
fs
or
inc
fidivl
mov
inc
mov
add
lcall
pop
cs
es
mov
push
inc
or
das
jmp
push
das
into
fld
xchg
mov
lods
lcall
dec
mov
mov
mov
mov
dec
adc
push
ror
cli
das
rclb
pop
pushf
clc
ss
test
pop
clts
dec
or
mov
adc
dec
test
shlb
sarb
sub
xchg
mov
scas
insb
icebp
dec
push
mov
xchg
call
in
movsb
movsl
or
fiadds
pushf
pop
jns
icebp
sub
fldt
popf
push
sub
popa
je
arpl
xchg
les
in
cmpsl
dec
cmpb
aas
xchg
push
adc
pop
aas
iret
jno
fwait
jne
and
shll
pop
mov
mov
imul
and
ljmp
pop
cmpsb
and
movsl
jb
stos
mov
dec
cmp
lahf
jge
shll
pop
xor
mov
jp
dec
push
mov
imul
sbb
add
dec
xor
add
inc
dec
or
shrl
cmp
jb
inc
jg
repz
dec
movsb
jmp
fldt
add
xor
sub
push
xchg
sub
and
pop
les
out
jecxz
es
push
ret
add
xlat
dec
cmp
mov
dec
pop
sbb
rorl
cmc
dec
jb
out
das
cmp
push
pop
loop
fwait
cmp
mov
sti
inc
pop
sub
mov
fdivrl
mov
sub
xor
dec
cltd
mov
and
fwait
cmp
test
nopl
mov
cmp
push
adc
movsl
shrb
mov
insl
mov
push
xor
out
add
dec
stos
cs
pop
scas
das
mov
or
jle
repz
fisubrl
push
pop
xor
push
add
shlb
stos
or
fdivrp
in
in
cmpsb
ss
loop
and
cmp
mov
std
loope
fisubrl
loopne
dec
xor
pop
pop
mov
lret
xor
pushf
pop
xchg
fadds
pop
arpl
mov
loope
fsubr
insl
in
arpl
adc
mov
in
fisubrl
jmp
jnp
lahf
pop
insl
push
adc
cmpl
xchg
mov
inc
test
les
pop
sub
push
adc
adc
es
scas
sbb
outsl
hlt
xchg
in
cwtl
imul
mov
mov
stos
int
arpl
push
push
cltd
sub
pop
lcall
and
xchg
enter
mov
imul
push
or
push
jg
mov
push
cmp
andb
in
mov
mov
sbb
sub
xchg
ljmp
ds
andb
push
sub
sub
or
pop
mov
cmove
add
jae
xor
push
sbb
mov
cmp
daa
sbb
lock
mov
jge
lods
mov
arpl
cltd
call
inc
in
inc
adc
adc
adc
add
ds
in
or
rclb
xorl
xchg
mov
mov
sbb
add
pop
cmpsl
scas
xor
jl
inc
mov
sub
mov
arpl
jo
mulb
pop
popf
push
outsb
popa
rcrl
lods
pop
aas
pop
push
lahf
fisttpll
ja
out
jecxz
add
xor
addr16
shrb
pusha
lahf
ljmp
and
ljmp
call
adc
dec
mov
and
xchg
iret
xchg
pop
lock
sbb
rorb
xchg
jmp
xchg
fstpt
inc
pop
aas
out
fistpl
or
add
sbb
sub
and
inc
sub
mov
ret
xchg
in
xchg
sub
mov
iret
stc
lods
test
outsl
mov
imul
ret
dec
sub
gs
sub
and
cmpsl
out
stos
push
inc
sbb
cmpsl
push
xchg
xor
xchg
xchg
ret
jmp
testl
lock
dec
lods
jp
lock
adc
dec
or
ss
jle
fst
mov
sbb
popa
out
addr16
add
inc
or
pop
jno
pop
mov
push
mov
mov
cmp
mov
jne
sbb
out
cmp
mov
dec
xchg
sbb
call
inc
sbb
js
shrl
adc
dec
xchg
xchg
jb
jb
fwait
sbb
aad
inc
mov
push
sahf
jecxz
daa
test
mov
mov
daa
sbbb
or
dec
cld
movsb
aas
lcall
jl
roll
mov
js
arpl
inc
xor
rcrl
pop
or
fnstenv
fs
sub
push
jg
jle
push
arpl
pop
and
mov
cmp
jbe
mov
mov
jmp
xchg
or
mov
or
pop
sub
xchg
andl
dec
aam
inc
inc
add
adc
mov
shr
lcall
push
andl
add
xchg
lret
js
mov
mov
cmpsb
jo
fstp
lcall
outsl
psrad
push
hlt
stc
jle
andb
mov
adc
add
es
mov
arpl
loope
or
pop
adc
idivb
sbb
cmpsb
sub
xor
ss
push
jo
jo
dec
add
es
pop
or
aam
dec
push
jne
or
fsubrs
in
sub
adc
inc
cmpsl
insb
stc
rolb
pop
inc
iret
pusha
and
enter
mov
push
fildll
arpl
jns
or
shll
into
push
int3
cmp
icebp
cld
sub
dec
push
out
popf
stos
sub
repnz
out
fistpll
je
dec
sub
push
pop
es
cmpsl
or
push
pusha
add
rcrb
dec
mov
cld
aam
test
sbb
fwait
decb
dec
addr16
push
int3
es
jg
xchg
cmpsb
push
xchg
out
testb
xchg
mov
push
stos
cwtl
pop
pop
cli
sbb
inc
sar
xchg
dec
lock
jmp
inc
repnz
sbb
sub
icebp
mov
jbe
ja
imulb
hlt
int3
jae
pop
xor
add
subl
arpl
inc
lods
add
or
inc
inc
int3
mov
aam
pop
dec
mov
and
jecxz
scas
cwtl
jbe
dec
idivl
push
mov
mov
mov
mov
arpl
mov
lea
popf
les
mov
xor
or
in
fs
and
ss
mov
shlb
pusha
mov
pop
push
sbb
stos
inc
xchg
mov
push
loop
in
scas
pop
pop
lcall
js
xlat
mov
iret
cmpsb
xor
inc
stos
inc
xchg
nop
rorl
cmp
hlt
les
inc
pop
sub
xchg
mov
lahf
push
add
jl
mov
adc
outsb
shll
outsl
push
aas
mov
push
fcmovbe
and
sahf
xor
lahf
xchg
lods
mov
std
cmc
in
dec
cmp
and
pushf
sbb
sbb
jbe
inc
xor
xor
push
jb
into
mov
dec
aad
inc
dec
fbstp
jg
adc
movsl
lea
inc
ja
scas
mov
xor
xorb
or
cs
into
int3
vmovdqu
and
es
mull
add
loopne
notl
adc
cmpsl
les
in
mov
mov
push
xor
pop
mov
dec
add
cld
dec
popa
push
mov
int
fnsave
and
add
cmp
and
pop
xchg
pop
and
mov
cmp
fidivl
sarl
loopne
lea
mov
fldenv
ss
insb
pushf
push
fwait
cli
dec
dec
sbb
push
jb
cmp
into
stos
push
lahf
mov
sarb
sarl
and
jnp
lret
mov
push
outsl
push
jns
out
or
mov
or
sar
pop
fisttpll
out
lcall
sbb
and
ljmp
lea
jg
loopne
push
addr16
add
loop
inc
lea
inc
notl
jb
cli
push
cld
pop
in
test
faddl
mov
les
xchg
mov
pop
cmpb
repz
mov
mov
out
mov
cwtl
mov
dec
dec
lock
add
lods
inc
lret
inc
sub
mov
out
inc
pop
and
mov
out
dec
repnz
loopne
fs
mov
mov
push
jmp
dec
jo
pop
rorb
mov
cmp
inc
stos
sbb
sbb
jmp
push
jge
int
mov
fdivs
pop
sti
inc
add
ja
scas
inc
loope
ljmp
das
fsts
dec
xchg
les
out
xor
pop
andb
imul
adc
xchg
movsb
xchg
xchg
jnp
sub
filds
out
outsl
loop
call
xchg
icebp
stos
cmp
jns
add
ja
jp
xor
rol
sti
sti
in
xor
mov
adc
inc
shrb
mov
and
leave
cld
dec
xchg
fistpl
lds
pop
fldl
leave
std
push
xlat
and
adc
jmp
mov
xor
adc
inc
push
mov
aas
inc
stc
jmp
ss
pop
out
mov
or
xor
mov
mov
lock
pop
sarl
or
mov
fs
test
outsb
outsl
popa
lds
add
out
fsubp
push
pop
push
xchg
lcall
mov
pop
lods
addb
pop
sti
cld
in
repnz
xor
gs
mov
in
lock
call
repz
push
inc
test
daa
mov
pop
xor
mov
ds
sub
mov
enter
sub
imul
mov
push
xlat
js
mov
test
inc
mov
adc
pop
punpcklbw
fs
loope
leave
stc
mov
gs
pop
inc
jne
cli
cmpsl
cmpsl
dec
inc
xchg
data16
ret
test
ds
ss
hlt
aaa
inc
mov
add
ljmp
jl
cmp
test
mov
and
mov
mov
loope
xor
je
xchg
jp
loopne
cmp
sbbl
lret
xor
mov
xchg
imul
jmp
sarl
mov
icebp
pop
mov
icebp
test
push
jo
or
inc
dec
add
xchg
adc
cmp
lds
out
int3
imul
jbe
mov
out
cmp
push
sahf
ss
cmpsb
xchg
into
mov
pop
rolb
cmp
out
push
sbb
aas
fisubrs
adcl
push
pop
mov
cld
push
jnp
aas
es
jle
pop
into
pop
je
js
loop
out
xor
push
adc
mov
add
ja
in
jae
mov
lods
repz
fstps
subb
and
dec
sahf
sbb
lret
and
test
inc
into
add
sub
lret
repnz
insl
or
jo
dec
xchg
insb
or
outsb
test
cmp
mov
jbe
test
xchg
icebp
in
lds
add
inc
push
dec
xor
adc
and
or
leave
xchg
test
mov
xor
push
push
in
and
mov
pop
jo
mov
pusha
lods
in
or
lcall
push
test
mov
mov
and
outsb
adc
clc
out
ja
lahf
movsl
inc
lret
xor
out
mov
push
cli
inc
sahf
cli
xchg
adc
aas
imull
popa
enter
out
sub
test
ret
pop
jb
push
ds
inc
sbb
and
cltd
sub
inc
in
sub
aas
jnp
addr16
xchg
repnz
data16
test
jns
mov
mov
adc
in
fwait
out
mov
jle
int
bound
loopne
adc
rorb
cmp
jmp
scas
jmp
lahf
xlat
inc
repz
sub
gs
outsl
fistl
ret
insl
lods
lods
std
shlb
mov
jmp
push
mov
push
mov
vpavgb
js
cmp
stos
jl
sub
insb
sbb
push
scas
push
ja
sbb
add
jns
les
xor
pop
pop
dec
jp
wrmsr
push
loopne
xchg
lock
stc
dec
and
jbe
or
mov
sub
adc
in
pop
add
xlat
sbb
mov
inc
pusha
test
notl
daa
popf
test
daa
cmp
xor
pop
push
mov
pop
fwait
out
vmwrite
ret
mov
or
cmpl
xor
push
pop
or
out
sbb
insb
mov
leave
mov
mov
sub
loope
mov
and
clc
cmpsl
jecxz
movsb
pop
or
out
insb
inc
xor
int3
out
std
and
pop
test
fdivrs
insb
adc
dec
movsl
scas
daa
test
xchg
and
std
sbbl
and
mov
loope
movsl
cmp
inc
xchg
cmp
sahf
popf
lods
outsb
jb
xor
push
bound
lods
ljmp
pop
sarl
mov
adc
pop
rorl
loope
enter
out
mov
int
push
and
in
pop
aad
data16
and
mov
insl
xor
in
or
sti
jb
aad
es
ss
xchg
in
xchg
add
test
addr16
insl
and
cmp
lods
out
cmp
sbb
and
lods
cmp
jb
insl
pop
punpckhbw
cwtl
cli
jp
dec
mov
aas
out
adc
mov
stc
test
cwtl
dec
and
scas
mov
jae
addb
mov
jge
jg
rcrb
pushf
push
and
mov
notl
jp
push
lds
pop
xor
mov
aam
mov
xchg
cld
enter
jmp
lret
push
or
jp
addr16
adc
push
jp
mov
pop
cmp
outsb
ret
inc
add
mov
loope
lock
xor
sbb
enter
test
and
adc
addr16
jmp
in
xchg
xlat
pop
push
or
inc
lcall
out
bound
mov
std
mov
xchg
mov
arpl
fiaddl
ljmp
testl
lods
adc
adc
sub
ja
lret
jnp
adc
ret
or
sbb
cmpsl
pop
xor
or
and
mov
out
je
flds
mov
jae
push
or
repnz
fsts
or
xchg
sbb
sahf
test
fcoml
cmp
lock
fnsetpm(287
cmpsb
adc
pop
cmp
lds
xchg
fsub
xchg
jae
in
in
inc
shlb
jnp
repnz
inc
xor
fidivrs
fistpl
adc
loop
mov
jne
xchg
in
pop
mov
repz
cwtl
mov
lea
rcr
mov
xor
jne
enter
leave
in
aaa
mov
cli
xlat
xchg
or
xchg
inc
mov
xchg
inc
mov
mov
jnp
sarl
insb
push
push
hlt
xchg
std
xchg
mov
mov
push
add
sbb
bound
sbb
jo
pushf
push
and
movsb
dec
xchg
mov
cmp
dec
mov
dec
dec
aas
out
adc
addr16
jp,pn
mov
inc
sahf
dec
lods
out
and
fstpl
insb
and
pop
fsubr
pop
cmp
rcrl
hlt
pop
sub
jbe
xchg
mov
inc
cwtl
xchg
pop
lret
xor
mov
mov
into
stos
popf
cld
gs
daa
dec
jg
cmpsb
mov
sbb
jno
mov
dec
mov
sub
lea
mov
scas
loopne
cmp
pop
gs
lret
cmp
pop
mov
fs
dec
xchg
scas
cmpsb
int
sar
clc
int
idiv
xchg
pop
lahf
ja
sarb
push
sahf
xor
jge
adc
pop
mov
lods
xchg
testl
loop
push
cmp
mov
ret
insl
mov
cmp
inc
xor
loope
and
cmpsb
repnz
mov
mov
push
xor
iret
push
add
fistl
dec
test
sub
loopne
aaa
stc
xchg
loopne
push
int3
into
cmp
mov
ret
test
dec
push
push
push
jae
push
out
or
sti
aaa
push
out
pop
inc
inc
in
mov
stos
addr16
dec
cmp
sbb
sub
in
push
sbb
fsts
pusha
dec
cltd
mov
sbb
sbb
inc
sbb
scas
sbb
push
sub
or
push
dec
jecxz
inc
and
sbb
add
sbb
stos
cmp
inc
insl
inc
push
in
mov
xor
rcll
fs
pop
or
or
int3
sbb
xlat
pop
pop
mov
sub
push
pop
jl
sub
sbb
xchg
or
lcall
mov
pushf
fmuls
pop
jo
adc
movsb
test
insl
pop
sbbb
mov
into
mov
inc
je
cmpsb
pop
push
sti
xchg
mov
add
aam
push
mov
fwait
xor
xor
out
xchg
dec
dec
push
lret
or
sbb
rorl
cmp
push
push
scas
subb
loop
loope
hlt
shll
sarb
std
jnp
loope
dec
mov
jnp
test
adc
aas
dec
ds
mov
popf
movsb
dec
cli
sub
shrl
and
lret
arpl
adc
mov
mov
sub
inc
push
cmc
inc
ja
sbb
push
addb
xor
int3
dec
push
pop
and
push
jmp
add
into
add
jp
cs
push
push
and
sub
xchg
push
shll
loopne
push
cmp
insb
push
sub
lret
xchg
pop
jns
pusha
lea
dec
sub
pop
mov
jo
outsb
push
jecxz
jge
mov
push
test
mov
je
lds
movsb
push
std
lock
jp
flds
ds
daa
mov
int3
dec
and
dec
push
jle
adc
jle
out
mov
pop
push
out
mov
mov
cmp
je
pop
minps
dec
sti
int
or
or
or
pop
or
sub
push
inc
or
fdivl
add
pop
mov
sbb
cmpsb
in
and
jno
int
cmpsb
mov
mov
pop
scas
or
xor
sbb
inc
push
push
cmp
test
ficoml
mov
lods
pop
sbb
mov
cmc
addr16
adc
insb
stos
pop
mov
imul
in
sub
lret
xchg
dec
mov
int3
jl
xlat
out
loopne
out
dec
pop
pop
cli
pop
stc
lahf
sbb
adc
sub
xchg
sbb
rcr
adc
fdivp
lahf
mov
ret
mov
lret
das
pop
jl
in
sbb
sti
cld
fsubr
sbb
or
jne
pop
lods
adcb
out
in
cmp
sub
addr16
outsb
and
and
jb
mov
xor
arpl
aas
push
cs
rcrb
cmp
fstp
add
ficomps
sbb
imul
scas
sti
pop
xchg
push
pop
mov
mov
add
add
lret
test
jl
std
cmpsb
mov
sub
fcmovu
inc
add
imul
pop
sahf
scas
xchg
xchg
call
int3
enter
adc
dec
mov
stos
add
cmp
out
cmpsl
test
mov
call
cmpsl
jns
loope
jbe
add
cli
lds
jne
mov
fsubrl
and
mov
stos
pop
rorl
lcall
adc
test
es
sbb
dec
mov
jno
mov
or
loopne
cmp
lock
push
pop
or
and
xchg
cld
lea
push
xchg
sub
jbe
stc
in
lret
les
fcom
insb
sub
shr
addr16
mov
mov
aad
mov
ds
sub
test
or
mov
out
xchg
pop
sbb
sbb
pop
into
outsb
pushf
fidivs
cwtl
or
xor
call
stc
add
add
mov
fcoms
lods
sub
push
sbb
sbb
enter
inc
add
or
jge
in
sub
adc
addb
das
int
fdivr
jne
insb
or
stos
xor
push
pop
lock
je
or
push
sub
xchg
or
or
lea
jge
and
sub
mov
dec
xchg
mov
xchg
fidivrs
or
idiv
stc
shl
daa
adc
ficomps
mov
inc
mov
hlt
notb
test
es
mov
fistps
push
adc
pop
arpl
lcall
add
stos
fwait
mov
test
or
jne
sub
dec
inc
sbb
shr
dec
clc
sub
inc
mov
aam
pusha
pop
jne
cmp
xchg
dec
mov
or
fiaddl
xchg
mov
or
enter
test
leave
or
movl
cld
mov
insb
test
lea
out
adcb
or
in
rclb
lock
lods
xchg
mov
and
iret
mov
jle
mov
cmp
ja
xor
iret
mov
lret
adc
repnz
xchg
les
aad
out
shl
das
std
jo
sbb
mov
and
fucomi
adc
mov
popa
out
mov
ficoml
add
mov
ret
mov
es
mov
inc
dec
push
sbb
jge
dec
in
ds
lods
jno
fcoml
shlb
cmpsl
ja
mov
scas
repz
adc
push
pop
pop
pop
stos
fnstenv
arpl
mov
sub
xchg
adc
adc
pusha
pop
xchg
into
push
setae
in
repnz
or
out
push
lret
add
and
and
sbb
leave
push
arpl
push
push
pop
lea
jns
cli
push
int3
push
in
int3
and
and
fldt
dec
dec
rclb
mov
in
mov
dec
in
push
insb
adc
rcrl
or
mov
iret
or
aaa
mov
mov
addr16
in
mov
loope
inc
sti
cmp
aam
sub
in
mov
cmp
sub
or
sbb
popf
lds
sbb
inc
sub
loopne
xor
negb
mov
xchg
push
sbb
sbb
sbbb
ret
sbb
lock
daa
sub
pop
hlt
rcl
mov
lahf
fdiv
push
mov
dec
rolb
mov
xchg
or
ss
cmc
jmp
cli
ret
fstpl
hlt
mov
mov
test
pop
inc
xchg
xchg
ud1
mov
insl
add
sarl
push
roll
imul
cmpsl
orb
jae
mov
daa
aas
adc
addb
je
insb
mov
cmovbe
add
or
addr16
mov
add
dec
sub
push
push
js
out
fnstsw
xchg
or
mov
adc
jmp
or
sbb
into
movsl
and
add
push
rcl
mov
bswap
int3
daa
sub
add
add
push
inc
es
sub
lods
lods
fs
stc
scas
fstpl
xchg
pop
fs
jge
xor
rcrb
shlb
cmp
cmp
mov
je
pop
mov
in
cmp
ljmp
into
rcll
inc
bound
test
mov
ljmp
loope
sub
or
push
xchg
xorb
icebp
adc
lock
xor
sub
adc
add
into
lret
rcll
cltd
imul
dec
in
dec
dec
cld
xor
dec
dec
not
push
cld
pop
jge
cmpl
inc
jl
sub
aam
pop
rorb
pop
push
add
fildll
cmpsb
in
int
jmp
push
sbb
mov
xor
inc
push
sub
out
push
in
movsb
jae
xor
sub
jo
mov
nop
insb
in
loope
clc
dec
push
testb
in
push
cs
adc
ret
fmuls
divb
mov
adc
bound
sub
sub
lret
sbb
or
mov
fistps
cmp
into
push
mov
mov
sti
or
lea
cmp
cmc
es
nop
add
mov
inc
test
push
fnsave
mov
xor
mov
fs
mov
daa
and
sub
inc
fnstcw
cmp
push
push
xchg
fcompl
sti
test
mov
adc
dec
fnstsw
dec
sarl
lea
mov
add
rorb
pop
cmpsb
mov
fwait
xor
xchg
and
ljmp
mov
iret
dec
rcrb
jnp
cmp
leave
sar
in
cmpsl
lods
lcall
add
sub
cmp
adc
cmp
stc
aad
pop
mov
shlb
mov
mov
icebp
push
pop
xor
std
pop
je
cmp
and
jb
push
in
mov
sbb
imul
mov
jb
bound
cld
je
gs
xchg
imul
imul
push
pop
jge
dec
or
addb
fisttps
sbb
or
inc
in
in
shlb
dec
add
insl
sub
dec
or
sub
mov
scas
jg
dec
cmpsb
scas
stc
lahf
orl
add
clc
push
aam
xor
xchg
cmp
leave
movsl
daa
xor
stos
sar
bswap
sbb
add
scas
or
sbb
xchg
sarb
mov
sbb
pusha
lcall
push
xchg
inc
push
mov
sbb
sar
pop
iret
test
loope
fdivl
mov
mov
xchg
cmp
add
xor
mov
sub
fmul
out
loopne
jl
pusha
mov
ret
and
jmp
rolb
lret
jg
rcl
daa
push
sbb
xlat
loopne
cmp
clc
fists
and
add
lahf
xchg
cmc
xchg
stos
sub
push
pop
sbb
inc
and
dec
cld
fs
cmp
ljmp
sub
mov
xor
stos
dec
popa
cmc
adc
jmp
sbb
fnstenv
mov
stos
mov
or
mov
mov
bound
fistpll
rcrl
and
adc
cmp
push
test
dec
out
push
lods
popf
movsl
aad
push
xchg
sub
pop
fdivl
adc
outsl
sub
cli
int3
test
leave
xchg
sub
sub
pop
inc
mov
nop
mov
insl
or
push
jns
sahf
dec
xchg
inc
notb
fldcw
test
loop
les
test
and
nop
sbb
fs
out
cmp
int3
add
ret
sbb
push
and
dec
les
or
clc
mov
iret
ret
jns
scas
jb
in
dec
xchg
xor
not
aaa
mov
rolb
ret
loopne
sub
insl
arpl
dec
insb
fcmovnu
jne
roll
pop
sub
cs
push
dec
inc
mov
mov
mov
push
js
jbe
xchg
in
mov
es
mov
mov
div
sbbl
jecxz
sbb
adc
sub
sub
lcall
popf
aas
clc
filds
inc
repnz
es
and
dec
shll
jecxz
push
test
cmpl
in
pop
push
xchg
ljmp
cmpsl
xchg
fisubrs
aas
push
sub
in
rorl
dec
rclb
mov
cs
outsb
int
lcall
adc
or
mov
mov
movsl
adcl
shll
mov
out
lcallw
mov
xor
xchg
and
xchg
fs
outsl
mov
adc
fxch
dec
cltd
lods
pop
mov
and
cwtl
mov
sub
cmp
and
fstpt
xor
leave
ja
adc
lret
cmc
orb
jg
lcall
pusha
jle
loopne
fldt
icebp
mov
pop
popa
outsb
mov
inc
sbb
int3
xor
aad
dec
mov
jae
mov
adc
or
jp
fchs
loop
sbb
mov
add
popf
and
mov
fldcw
sbb
loop
adc
lock
xchg
bound
adc
mov
jg
repz
jmp
je
outsb
push
dec
lods
dec
xchg
jno
popa
les
add
jns
jl
dec
push
mov
ja
push
clc
in
jp
cmpsl
pop
mov
push
sub
dec
jcxz
adc
aad
pop
mov
xchg
jmp
mov
mov
ror
cs
mov
inc
pop
nop
adc
add
mov
pop
xchg
mov
lret
arpl
xchg
sahf
movsb
rorl
inc
sbb
lock
jb
dec
or
and
insl
mov
clc
scas
rcll
lret
cmp
inc
mov
cmpsl
dec
sub
insb
fisubrs
stos
es
dec
mov
xor
dec
fmull
fs
lahf
or
lea
fs
fmul
inc
jp
pushf
test
add
xchg
dec
xchg
addl
int
cs
rclb
insl
sbb
add
movsl
lock
jecxz
jge
arpl
mov
inc
sbb
pop
push
mov
jne
int
sub
or
mov
stos
lret
xor
lds
dec
inc
insb
pop
lods
cmpsl
sbb
pop
stc
add
sbb
inc
mov
or
or
repnz
std
adc
pusha
cwtl
mov
mov
sbb
mov
stc
ret
push
inc
lahf
sarb
inc
leave
out
cmp
xor
mov
jae
fidivrl
popf
stos
ljmp
sahf
push
adc
aam
sbb
jbe
inc
ficoms
dec
adc
jno
and
add
mov
sbbl
icebp
aaa
jbe
aaa
scas
test
lret
aaa
sbb
mov
sahf
or
pop
cmc
mov
out
and
cmpsb
cmp
stc
mov
xor
inc
sahf
nop
das
add
mov
aam
push
jmp
iret
lock
imul
sbb
test
adc
lods
or
cld
stc
xchg
jmp
adc
out
sub
imulb
mov
cld
mov
movsb
imul
cmp
or
rcrb
adc
xchg
xchg
jno
mov
inc
and
fisttpll
or
stos
add
les
sub
cwtl
je
icebp
sub
mov
push
push
lods
xor
movsb
scas
jmp
mov
cmp
test
jae
or
stos
xlat
js
stos
jg
fists
inc
mov
pop
mov
mov
nop
pop
sbb
scas
mov
jno
test
add
ds
push
repz
out
sub
xchg
pop
out
fldt
xor
nop
or
pop
jge
cli
adc
pushl
loop
cmc
pop
call
jmp
jbe
adc
adc
in
pushf
pop
lret
ljmp
lret
ljmp
dec
sbb
gs
xor
imull
pop
jmp
inc
pop
mov
lahf
pop
in
pop
enter
fcoms
imul
push
jne
data16
aaa
in
push
ret
fisttpll
jbe
xchg
stc
inc
lret
dec
push
sub
xchg
repz
in
movlps
adc
les
in
add
dec
lock
aam
leave
pop
leave
lcall
sbb
mov
shr
mov
out
adcl
je
xchg
xchg
xorl
test
fcomps
pop
icebp
rol
or
int
out
dec
cld
fldcw
jmp
enter
cmc
cmpsl
mov
xor
mov
jmp
mov
mov
popf
scas
adc
xor
or
and
sub
lods
test
fsubrl
dec
sbb
xor
pop
fnstenv
loopne
loope
movsl
or
mov
je
frstor
lods
push
jnp
dec
mov
jp
push
stos
out
pop
mov
dec
into
pusha
sub
ret
idivb
mov
icebp
xor
mov
push
mov
cmp
lret
xchg
cltd
mov
sbb
cmpsb
lods
add
fisttpll
outsb
inc
rcll
adc
push
adc
push
aaa
ljmp
sub
es
mov
sbb
cmpsb
outsl
test
ret
mov
xchg
insb
jb
sbb
pop
fiaddl
ljmp
fidivs
es
cltd
int3
in
xlat
cmc
or
aas
mov
or
scas
pop
xor
sahf
jg
loope
aas
xchg
cmpb
rorl
test
adc
test
jno
mov
mov
jb
xchg
pop
push
push
pop
dec
pop
pop
jle
push
jecxz
int3
xor
stos
scas
xchg
xchg
inc
dec
mov
push
xlat
shl
cmp
xor
lret
mov
es
sbb
mov
gs
xchg
in
shrb
fdiv
mov
iret
aaa
fbstp
cltd
cmp
cwtl
sar
cmpsl
or
sbb
test
xor
inc
pop
fnstsw
mov
jmp
in
mov
outsb
sub
xchg
icebp
push
mov
mov
es
push
dec
icebp
pop
sub
xor
push
mov
js
into
push
scas
xor
hlt
jnp
data16
add
add
cltd
js
mov
sub
call
lds
and
push
xor
push
in
faddp
ljmp
je
jno
sub
aad
js
subb
jae
ds
or
dec
test
test
mov
push
add
dec
xchg
outsl
sub
insl
lahf
xor
and
and
cmp
or
xchg
call
mov
outsb
mov
pushl
pop
hlt
popa
cmp
sub
add
xchg
rclb
addr16
mov
sbb
sub
fmul
shrb
je
mov
aad
jb
sbb
dec
jo
cs
pusha
dec
xor
shl
inc
adc
in
out
jl
out
decb
mov
cli
mov
call
std
pop
cld
mov
cmp
aas
cmp
adc
adc
or
xchg
dec
leave
or
shlb
aas
ss
shrb
sbb
sarb
jge
inc
out
lds
push
int3
mov
int
and
dec
scas
mov
dec
fiadds
pop
shrl
adc
pop
outsl
shlb
mov
in
xor
push
int
push
add
aaa
jecxz
push
push
movsl
lds
sbb
mov
std
int3
mov
cmp
lods
and
sbb
add
sub
mov
sub
icebp
loopne
in
aad
js
imul
inc
pop
cmp
adcl
lret
xor
movsl
dec
mov
push
dec
mov
dec
test
xor
scas
push
sub
lock
ljmp
push
aad
int3
fdivrl
mov
mov
into
clc
aas
hlt
mov
fistps
aas
shl
sbb
ljmp
call
inc
mov
ss
lcall
lret
and
aam
jb
icebp
cld
mov
fsubs
cmpsl
or
ja
les
jecxz
push
xchg
or
mov
fidivrl
int
fsubrl
das
mulb
jne
push
hlt
lods
sbb
adc
test
cmp
ret
shld
and
pop
or
cmp
frstor
xchg
cmpsb
fldl
mov
addl
jle
je
push
sahf
add
adc
pop
mov
mov
xor
xchg
pop
cmp
adc
jns
movl
jne
or
push
cmpsl
dec
xor
push
js
cmp
xchg
mov
push
leave
arpl
fsub
push
push
mov
jle
loop
pushf
in
jmp
push
rolb
cmp
ds
ljmp
fistl
adc
adc
and
clc
inc
push
imul
xchg
xchg
jo
or
std
sbb
add
call
cmp
sti
flds
cltd
popa
or
in
fiadds
jno
dec
sbb
testl
sbb
adc
jo
mov
mov
xor
js
outsl
sub
xchg
add
push
cmp
pop
dec
jecxz
iret
call
cmpw
and
aaa
jo
repz
push
inc
stos
xchg
cmp
xchg
inc
ret
js
mov
dec
outsb
xchg
cs
in
cmc
adc
repnz
daa
jmp
and
adc
or
xor
mov
and
jl
add
dec
clc
lods
push
fidivl
out
xchg
in
cmc
or
xchg
loop
pop
pop
mov
push
dec
into
xlat
repz
filds
sbb
in
mov
sub
inc
stos
sub
popf
sarl
sbb
pop
xor
and
cmp
dec
mov
adc
cmp
jo
cmp
xchg
in
cmc
insb
daa
es
pusha
nop
and
mov
int3
rorl
shrl
test
inc
lret
adc
mov
push
je
mov
xchg
pop
imul
test
aam
pop
daa
or
cmpsl
ja
and
or
mov
cwtl
ds
or
mov
xor
push
rcrl
push
aam
add
sub
mov
scas
pop
xchg
or
xlat
pop
scas
or
pop
xchg
outsb
mov
andb
test
mov
inc
call
push
arpl
ja
dec
jb
sub
test
fistl
cli
roll
jae
in
bound
adc
jge
xor
addr16
add
jne
call
mov
dec
push
dec
scas
push
xchg
cs
loope
pop
and
lock
xchg
mov
inc
scas
lock
fs
lahf
test
xchg
jg
test
jge
jns
xor
xorb
cmp
leave
dec
pop
sbb
dec
pminsw
or
testl
ljmp
or
dec
dec
aad
in
ja
inc
movl
jb
and
lock
ljmp
shr
lea
sbb
addr16
jecxz
jecxz
outsl
jge
scas
cmp
les
data16
sbb
lods
or
push
daa
jp
mov
sbbb
xchg
adc
xor
imull
mov
cmp
push
push
jg
divl
mov
xchg
orl
call
stos
arpl
or
ds
mov
xor
xor
mov
adc
insb
test
pop
fsts
dec
int3
fstpl
add
shrb
shrb
dec
pop
aad
rclb
cmp
push
sub
xor
pop
fnstenv
or
test
and
dec
enter
mov
iret
sub
rclb
popl
and
dec
mov
cwtl
mov
cmc
xor
xor
or
adc
sahf
sbbb
in
std
jns
xchg
or
jle
popa
stos
mov
cmc
jb
xchg
cwtl
ds
jl
dec
call
mov
les
lahf
adc
es
add
pop
sub
cmp
aam
aaa
cld
adc
sbb
test
push
aam
and
aas
mov
sub
and
mov
sub
mov
adc
push
pushf
xchg
testl
inc
stos
and
mov
sbb
lret
cmp
xor
and
pusha
sub
in
in
ljmp
mov
add
in
imul
mov
or
insb
dec
adc
jmp
push
push
popf
cs
ljmp
push
and
lahf
sbb
clc
pop
sbb
mov
push
inc
loope
mov
jae
scas
cmp
notb
popf
mov
popf
inc
xor
cmp
scas
dec
sub
push
mov
push
int
or
leave
mov
andb
addr16
flds
xchg
xchg
xor
dec
lret
call
aas
mov
cld
test
push
cmp
sbb
add
xor
dec
jmp
or
dec
mov
lods
mov
mov
jns
inc
mov
ja
addl
sti
cmpsb
lds
cmp
popa
mov
mul
push
or
adc
mov
xchg
divl
pop
cld
stc
xor
cwtl
rcrl
sbb
sub
int3
mov
mov
or
cmpl
and
rcrl
lahf
lea
subl
or
shll
shrb
mov
push
rol
jp
pop
gs
push
aam
lret
push
push
jg
dec
inc
or
or
scas
fisubrl
fnstsw
jmp
inc
xchg
cmp
fidivl
fcomp
aam
roll
lret
dec
jb
pop
stos
cmp
mov
pusha
add
jecxz
mov
call
ss
mov
push
je
cmpsl
jmp
test
jae
sarl
fldl
pop
rcrb
sbb
popf
inc
sbb
imul
adc
test
cli
sbb
mov
pop
sbb
push
ljmp
jmp
jecxz
and
mov
xor
add
xchg
pusha
popaw
out
jmp
lret
add
cmc
cmp
and
fisttpll
xchg
orb
aas
in
push
xchg
xchg
fs
nop
adcl
hlt
adc
aaa
inc
sub
aas
jne
and
sub
shl
fildll
subb
or
mov
enter
and
pop
xchg
sbb
sub
adc
push
sub
jo
daa
jne
aas
xchg
xlat
mov
pop
adc
lds
lock
inc
jno
sub
add
or
add
adc
sub
sbb
mov
fldenv
mov
aaa
jmp
or
outsl
mov
scas
inc
into
jbe
pop
xlat
lea
mov
mov
pop
mov
push
inc
jae
sbb
and
add
or
push
addr16
fbstp
adc
or
inc
jo
xchg
das
movsl
mov
js
mov
out
lcall
pop
hlt
fs
inc
arpl
aam
jnp
inc
iret
shlb
inc
and
xchg
movsl
push
aam
sbb
adc
xor
into
mov
cld
mov
mov
xor
rcrl
test
xchg
lahf
ja
ss
mov
mov
out
pop
lret
mov
dec
xor
xchg
pop
in
pop
pop
push
and
insb
and
pushf
enter
dec
arpl
mov
fimull
sti
or
mov
mov
xor
xor
xor
push
jg
aaa
and
les
mov
or
gs
xchg
pop
sub
cli
xchg
push
mov
pop
int
add
or
xchg
jp
nop
pop
xchg
dec
inc
cmpsb
outsb
cmc
outsl
lods
jbe
clc
insb
ds
insb
xor
test
cmp
jmp
hlt
pop
push
add
pop
dec
repnz
jle
xorb
dec
xor
or
xor
pop
mov
lret
stc
das
push
push
sub
pop
sar
rcl
push
and
jmp
movsl
out
sbb
mov
xchg
mov
push
movsl
jmp
mov
testl
js
pusha
push
cwtl
icebp
mov
push
lock
sub
jnp
cmp
adc
outsl
repnz
mov
mov
jo
push
lahf
mov
sbb
inc
int3
sbb
dec
or
mov
je
and
adc
cli
sub
and
call
ss
push
or
inc
jecxz
dec
daa
sbbl
pop
push
cmp
and
inc
cmp
sub
push
sub
pop
test
xchg
jbe
mov
or
shll
fs
insb
inc
pop
xchg
in
add
flds
sub
hlt
insb
cmp
mov
fdivs
push
xlat
jecxz
sub
sub
mov
cld
popf
das
out
pusha
es
and
mov
and
cmpsb
jo
inc
cmpsb
cmp
cmpsb
outsb
lds
fidivl
pushf
pop
repz
dec
shlb
test
icebp
ficomps
scas
sub
shll
clc
adc
jo
xchg
hlt
rorb
dec
or
jge
cmp
xlat
movq
lahf
mov
subl
adc
test
mov
pop
test
add
mov
repnz
int3
fs
mov
mov
ret
cmp
push
jg
data16
lods
sub
fs
push
cld
aam
jns
xchg
lods
je
push
dec
iret
fsubrs
dec
jg
out
stos
xchg
push
es
xchg
sub
in
jae
push
lock
xchg
ret
jnp
adc
aam
xor
inc
mov
cmp
lods
negl
push
aad
outsb
shl
and
daa
enter
test
xor
or
ss
jecxz
push
cmpsl
add
or
sbb
sub
mov
pslld
in
push
cltd
add
notb
xchg
cwtl
fsts
cmp
sub
aam
test
je
xor
rolb
push
push
xor
mov
and
add
rorb
sbb
cmp
xchg
iret
xor
dec
sub
lods
xchg
jo
test
xchg
dec
jns
neg
mov
sbb
jo
les
xor
jle
into
push
cltd
gs
outsb
mov
push
xchg
xor
cmpsl
call
add
inc
insl
jnp
rorl
popf
fistl
or
repnz
xchg
jb
mov
mov
ret
adc
es
out
in
push
jp
jbe
repz
sbb
iret
push
inc
scas
jmp
push
in
sub
out
daa
popf
pop
int3
shll
mov
test
mov
testb
aam
sub
mov
add
insb
jmp
inc
sbb
imul
pop
mov
jecxz
xchg
lods
xchg
jle
and
inc
sti
xlat
sbb
lret
jnp
test
or
mov
sti
xor
ret
mov
repnz
sti
mov
cmpsb
adc
mov
imul
lds
adc
imul
movsb
fcmovu
mov
jne
imul
je
imul
and
sbb
and
pop
jle
fstpl
std
inc
xchg
nop
stos
xchg
pusha
cmpl
push
cs
xor
dec
inc
ds
int
popa
ljmp
dec
subl
xchg
mov
xchg
cmpb
sub
inc
fs
push
or
mov
and
out
pop
dec
std
mov
push
mov
xorl
push
xchg
mov
adc
fiaddl
sub
rcrb
test
testl
mov
jno
pop
sub
inc
mov
pop
addl
pop
scas
outsl
sbb
lcall
jbe
adc
mov
fwait
sub
out
xor
pop
and
sti
fistps
or
adc
lds
mov
jle
enter
testl
cmpsl
fwait
inc
loop
push
loope
xlat
inc
je
std
in
roll
jnp
aaa
in
ficomps
or
push
add
dec
or
lock
push
inc
jb
lds
mov
inc
cmpsb
data16
insl
mov
lcallw
pop
gs
sub
enter
js
push
mov
fs
fcmovnbe
lahf
dec
mov
jp
push
and
dec
dec
or
mov
mov
mov
pop
rorl
mov
orb
mov
repnz
std
push
cmp
jmp
dec
xchg
cmpsl
frstor
dec
inc
aad
pop
add
movsl
cmp
cmp
mov
fnsave
idivb
xchg
jp
inc
cli
fwait
or
add
sbb
xor
ljmp
dec
call
aaa
xchg
enter
fwait
fwait
xor
and
outsl
sbb
icebp
std
int3
push
mov
add
cmp
and
stos
scas
dec
mov
gs
adc
imul
lret
std
insl
faddl
and
pop
mov
xchg
lea
xchg
pavgb
adc
and
int
pusha
xlat
mov
scas
aad
push
inc
cmp
and
push
stos
cld
cld
mov
and
js
call
sub
orb
jo
aas
mov
jo
jl
jb
inc
out
pop
popa
jmp
divb
xorl
cs
popf
div
add
aaa
cmp
stos
sub
lock
and
add
mov
int3
out
inc
mov
out
sub
sbb
or
es
jo
inc
mov
xchg
pop
pop
test
sbb
es
and
pusha
sbb
dec
pushf
les
mov
sub
jb
rorl
adc
leave
sahf
bound
loope
jmp
out
aas
pop
adc
xor
je
inc
iret
lret
push
fsubrs
inc
test
xchg
sub
push
cmp
pop
rorb
add
mov
push
sahf
hlt
xor
pop
test
stos
jno
lahf
fs
jl
icebp
xor
lods
in
rorb
movsb
ret
jne
addr16
ljmp
arpl
sbb
imul
dec
lods
imull
std
push
pop
cmp
add
sbbb
pop
jae
and
xor
xchg
cmp
loopne
push
addr16
fstpt
pop
adc
idivb
popf
adc
push
les
cmpsw
out
fdivrl
stos
jb
in
push
mov
and
and
data16
lret
push
mov
pop
jge
mov
xor
pop
jmp
jbe
dec
sbb
les
subb
lods
es
adc
out
loopne
aam
xchg
into
fsts
mov
or
adc
pop
xor
push
push
push
mov
nop
ds
shrb
sbb
gs
sbb
mov
push
lcall
jb
inc
cmp
mov
adc
inc
out
mov
cmp
imul
push
pop
mov
add
mov
xor
loop
xchg
push
pop
xor
pop
int3
jmp
ficompl
popf
insl
les
std
fcomps
testb
sbb
mov
aad
xchg
cld
and
test
cmp
cmpsb
adc
sbb
dec
ffreep
cli
iret
movsl
cli
or
stos
mov
loop
cmp
and
and
js
das
mov
jnp
frstor
cmp
inc
or
add
int
xchg
por
ja
cmpsl
arpl
mov
jl
jl
dec
outsb
cmp
lods
ret
xchg
push
dec
dec
mov
ss
aam
loopne
jae
movsb
scas
enter
lahf
mov
add
mull
imul
dec
mov
pop
psubb
and
xchg
pop
add
push
inc
inc
es
mov
pop
arpl
repnz
mov
push
bound
lds
repz
scas
icebp
push
in
arpl
in
scas
mov
lahf
cmp
ja
add
mov
mov
inc
inc
cld
add
popa
fcompl
push
out
pop
adc
aas
inc
test
iret
cmp
das
je
shll
sbb
int
add
imul
cmp
pop
xchg
inc
pop
mov
pop
int3
adc
push
sbb
or
cwtl
xor
adc
sbb
je
les
jns
push
icebp
insl
cmp
lea
test
inc
clc
add
jno
aas
iret
movsl
jb
jge
jno
xor
push
cmp
cmp
cmp
adc
dec
push
sbbl
cltd
add
aas
xchg
add
les
loopne
enter
mov
filds
pop
jns
push
mov
add
idivl
call
inc
fldcw
cld
pop
sub
xchg
mov
mov
scas
mov
adc
sub
jne
sahf
xchg
cmp
ret
push
mov
loope
shll
enter
sbb
push
jl
add
sbb
lret
push
adc
xchg
mov
insl
push
cmc
std
add
or
sbb
adc
fistps
outsl
and
movsl
lea
int
popf
flds
stc
adc
and
mov
pop
testb
mov
aaa
mov
and
and
cmp
sbb
cld
and
ja
lods
or
aad
sbb
nop
jnp
mov
adcl
adc
sub
jb
sbb
sarl
loopne
sub
or
sub
sub
sbb
cmp
or
inc
lahf
jg
in
mov
dec
push
add
shrb
jne
push
and
push
mov
rcrb
add
out
shll
std
sub
call
or
jl
pop
cmp
pop
push
pushf
ret
out
or
mov
cmp
nop
or
ror
popa
or
xchg
in
imul
cmp
dec
fdivrs
xor
jmp
das
pop
mov
pop
mov
imull
lock
and
test
jbe
andl
call
sbb
test
loope
rclb
or
hlt
or
sub
insb
pop
push
cmp
inc
ds
movsb
cli
lock
js
insl
orb
je
insb
mov
cmp
jg
add
or
adc
jns
pop
push
movsl
inc
jno
in
hlt
lcall
inc
in
sbb
imul
push
je
lds
dec
inc
mov
ja
repnz
xchg
dec
inc
push
inc
push
fcompl
xchg
mov
or
test
and
int3
shll
add
pop
sbb
pop
shrl
sbb
int
subl
dec
lret
jl
mov
and
cwtl
leave
lods
inc
fstl
xor
adc
and
daa
fdiv
xlat
pop
xor
mov
add
in
cmp
out
mov
cmp
xchg
fs
mov
push
fstps
push
jo
and
hlt
dec
mov
push
jnp
or
and
daa
and
add
xchg
xor
push
and
in
movsb
lods
lock
fistl
mov
jecxz
xor
mov
xor
and
call
loope
insl
arpl
sub
dec
sub
and
sbb
inc
je
rcrb
jnp
mov
xor
or
and
xor
push
pop
mov
insb
mov
sbb
sbb
cmp
lahf
sbb
mov
ss
stc
xchg
pop
bound
in
xchg
sahf
call
test
xchg
movsl
je
lcall
inc
add
jmp
sti
inc
push
xor
stos
test
jno
aas
dec
test
imul
lahf
xor
hlt
lret
jmp
cli
add
insl
and
ljmp
fadds
pop
dec
shl
jne
shll
and
add
fcoml
daa
aas
pushf
mov
xor
shrl
inc
mov
fstpt
dec
push
out
mov
sub
jo
pushf
iret
cli
std
rcl
out
sbb
add
mov
cmp
jg
fmull
xchg
sbb
js
stos
in
jnp
mov
lret
popa
sub
mov
mov
out
out
add
adcl
in
sti
repnz
pop
test
pusha
enter
mov
js
adc
pop
jg
fcompl
cmpsb
les
scas
xchg
push
sub
jae
in
inc
mov
ds
popa
fst
sub
sub
push
mov
sbb
test
push
imul
in
ja
sahf
pop
pop
shl
sbbb
imul
xlat
xor
loopne
jb
jb
mov
nop
jo
cmc
mov
lcall
mov
push
push
dec
subb
dec
xchg
outsb
daa
mov
mov
cmp
pop
addl
mov
sub
xchg
mov
test
push
add
mov
push
add
adc
imul
dec
mov
dec
push
or
and
lret
mov
mov
or
mov
je
bnd
out
cmp
std
inc
movsb
ds
mov
mov
inc
pushl
shlb
pop
inc
mov
sub
adc
cmp
subb
or
out
shll
cmp
pusha
hlt
lods
jl
inc
jp,pt
add
repz
ficompl
das
das
lcall
and
add
lret
mov
fbstp
stos
lock
xchg
push
adc
sbb
mov
cli
shlb
sub
mov
or
insl
jp
or
xchg
in
mov
cmp
out
testl
movsl
sub
imul
sub
pop
je
in
jb
add
pushf
arpl
adc
xor
sub
lret
push
js
xor
out
xchg
cmp
and
xchg
sahf
rorl
ds
jnp
sub
lret
fdiv
inc
lret
xchg
pop
ret
and
ret
shlb
mov
fisttps
cmp
int
cmpsb
mov
into
orb
cmp
dec
pushf
sub
stos
neg
jne
loop
sahf
add
pop
cltd
in
mov
mov
adc
cmpsb
push
or
sahf
jnp
xchg
ret
xor
pusha
call
mov
test
int
jge
mov
push
lods
mov
out
sbb
pop
pop
sti
movl
leave
pop
add
insl
cmpsl
dec
lret
test
push
mov
add
aad
xor
mov
sbb
lahf
jge
push
xlat
dec
inc
pop
repnz
in
lcall
in
popf
dec
adc
test
fsubs
inc
and
or
cmpsl
push
xor
lods
jne
out
push
ret
mov
dec
pop
jo
cld
cltd
and
test
push
pop
stos
lock
fsub
sti
dec
fs
dec
ljmp
jo
jl
outsb
sbb
jb
jbe
or
ds
sbb
leave
xchg
mov
orb
hlt
pop
push
out
arpl
andb
sub
or
dec
fldl
xchg
imul
jbe
lret
out
bnd
fs
mov
scas
loope
or
out
popf
je
mov
cmc
xor
sbb
call
shll
fsubs
jb
dec
pop
call
mov
and
push
mov
movb
adc
mov
movsb
aaa
mov
or
fs
and
enter
xor
call
lcall
xchg
fwait
xor
add
cmp
idivl
test
jmp
mov
std
dec
js
sbb
in
ja
push
push
mov
adc
jmp
lods
std
shr
jmp
clc
imul
inc
pop
jae
mov
jmp
or
out
push
mov
sarl
or
sub
lcall
adcb
xor
psubd
xor
add
aam
repnz
insl
in
les
les
xchg
inc
into
mov
xchg
mov
cli
imul
mov
stos
pushf
mov
js
mov
fucom
dec
adc
dec
or
xor
nop
pop
pop
loopne
insl
push
leave
or
ljmp
sbb
addr16
adc
mov
call
sbb
pop
sub
iret
mov
imul
movsl
in
mov
jmp
loope
xchg
sti
repz
sub
jle
ljmp
xchg
jmp
icebp
cmpsl
jb
mov
fisubrs
int
and
test
movsb
push
insl
cmp
cmpsb
iret
push
fimull
cmc
adc
mov
fwait
mov
inc
jnp
push
jp
adc
push
or
adcl
aad
aaa
pop
inc
les
aad
cs
xchg
push
or
in
test
cmpsl
gs
dec
or
fs
pop
sbb
cli
inc
dec
in
inc
pop
jp
movzbl
addr16
xchg
xchg
fstps
xchg
pop
addr16
and
je
lret
cmp
cwtl
in
aad
sub
mov
dec
pusha
dec
xlat
push
pop
sti
adc
in
cmpsb
sbb
fwait
mov
idivl
idiv
xchg
ds
ret
sbb
push
jp
nop
hlt
or
push
and
xchg
enter
push
dec
dec
sub
call
loope
jnp
jo
jo
xchg
cmp
das
repnz
rcrb
loope
insb
scas
mov
in
jb
movsl
jle
xchg
adc
jle
cltd
cltd
mov
jb
adc
lret
jo
decb
cmp
xchg
xorl
push
addr16
stos
cmp
adc
adc
jmp
sub
sub
mov
xchg
push
loop
mov
notl
shr
xor
loop
and
insb
ror
ret
ret
push
add
mov
jb
inc
lahf
xor
mov
insb
inc
push
lahf
cmc
inc
xchg
adcl
sbb
jo
popa
mov
mov
fnsave
cli
js
jl
push
pop
pop
movsl
or
dec
dec
push
or
xchg
pop
inc
mov
out
adc
cmp
inc
aam
in
cmp
mov
bound
inc
push
cmp
das
sub
scas
and
jg
cli
inc
popf
test
fadds
ja
sub
or
sbb
mov
icebp
pop
ljmp
cmp
jno
sub
pop
sbb
cmpsb
adc
popf
or
int3
cmpsl
cmp
adc
fwait
sbb
je
push
repz
jbe
mov
rcrb
adc
mov
shlb
imul
pop
cmp
clc
scas
or
scas
mov
mov
push
jl
out
testb
aam
sub
clc
ficoms
push
or
push
inc
popf
enter
scas
jne
lret
dec
test
adc
data16
shrl
adc
sarb
arpl
xchg
int
pop
ss
test
jb
shll
es
sub
scas
loope
pop
popf
arpl
dec
movsb
mov
das
inc
xchg
rolb
or
imull
inc
adc
sbbb
push
mov
out
stos
add
push
nop
adc
cmp
fimuls
pop
xor
sbb
gs
push
jb
icebp
mov
test
and
mov
dec
or
sbb
rorb
inc
out
inc
sbb
test
nop
aad
aaa
push
mov
rorb
in
push
test
lea
rcrl
fdivrl
or
jno
fwait
inc
movsb
inc
dec
andl
cmp
push
pop
mov
movsl
arpl
dec
push
pushf
mov
pop
call
sub
loop
das
cmp
sub
fdivl
sbb
or
mov
bound
repnz
arpl
rorl
insb
push
or
sub
jns
cmp
or
in
mov
mov
ds
loop
jno
in
iret
push
rcrl
pushf
add
test
xchg
addr16
xchg
movsl
cld
pushf
out
bound
sahf
inc
push
aad
push
fisttps
dec
dec
pop
pop
xchg
mov
xchg
mov
bound
sub
leave
leave
or
push
dec
outsl
pop
dec
int3
xor
sbb
jae
mov
sti
pop
and
and
stos
push
mov
inc
adc
or
cmp
stos
ret
push
pop
rcl
in
ret
mov
xchg
lods
mov
nop
or
push
and
push
mov
inc
in
repz
add
sbb
insl
mov
pop
je
loope
pop
popf
mov
leave
test
fstpt
out
jle
pop
or
pop
test
fstl
pop
je
adcl
xorl
vpmullw
mov
jo
dec
xlat
aad
sbb
pop
mov
xor
sbb
jo
mov
mov
sahf
pop
cmp
inc
mov
mov
mov
andl
pop
jns
orb
push
loop
das
push
mov
or
test
in
xor
cmp
push
cmp
fnstsw
repnz
xchg
in
inc
rol
sub
xor
sbb
pop
int
addb
ret
loop
xor
fildl
cmp
mov
test
push
dec
repz
jg
mov
and
push
sbb
sbbl
les
inc
push
int
jge
fistl
mov
cmp
lea
lahf
jo
lret
xor
mov
out
fldl
sbb
popa
mov
xor
repnz
les
jg
push
push
xor
data16
ljmp
pop
daa
sbb
push
in
mov
jge
or
jp
imul
mov
pop
mov
mov
cmp
fs
cld
xchg
sub
repz
ja
out
mov
dec
mov
pop
push
add
add
das
jbe
popa
mov
das
pushf
sbb
test
jno,pt
mov
mov
ret
movsb
into
push
adc
pmaxub
aad
inc
xor
push
iret
or
sub
sti
das
xor
fdivrl
lods
imul
mov
imul
lret
jb
aam
and
cmc
sbb
sub
les
mov
out
push
dec
lods
sbb
xchg
pop
insb
dec
adc
push
iret
push
sbb
push
daa
loopne
xchg
loope
mov
mov
out
jle
mov
addl
jge
or
lret
sbb
int
js
ficomps
div
cwtl
jo
push
dec
sbb
xor
hlt
dec
pop
or
enter
arpl
fistl
test
arpl
add
neg
fildll
stos
sbbb
shrl
push
xor
adc
mov
cmp
mov
lcall
roll
mov
stc
add
sbb
sub
pop
in
dec
mov
jg
or
stc
imul
hlt
int3
pop
xchg
mov
inc
dec
popf
mov
mov
inc
cmp
mov
pop
mov
ret
popa
adc
fcoml
fwait
insl
push
sbb
xchg
push
push
or
cmp
pop
scas
inc
pop
xlat
mov
inc
leave
cmpsl
cwtl
rcll
sub
mov
int
data16
fsub
push
insl
mov
jmp
push
dec
das
xor
loopne
mov
in
andl
mov
inc
call
xor
es
iret
nop
clc
fimull
sub
shr
xor
rorl
pop
xor
xor
repz
test
sbb
mov
call
outsb
or
fbld
mov
lret
mov
sbb
test
pop
inc
repz
outsl
xlat
push
cmc
jmp
das
das
mov
insb
ljmp
loop
lea
cmp
xchg
scas
sbb
or
add
incb
jae
sub
js
mov
test
mov
xor
cli
or
inc
in
repnz
insl
cltd
je
xchg
and
pop
sbb
jle
jb
jo
in
test
and
inc
inc
xor
mov
lcall
mov
mov
bound
mov
xor
add
int
enter
mov
cmp
or
iret
push
cmp
hlt
mov
add
sub
xchg
jb
xchg
loope
cmp
add
call
sbb
outsb
or
pop
sub
dec
popa
in
pop
fdivs
in
icebp
push
ret
mov
in
inc
sub
pop
inc
mov
clc
out
decb
xchg
in
test
lret
loope
stos
cmp
cmp
cmp
pop
pop
push
orl
in
mov
aas
test
and
adc
in
loop
mov
incb
fnsave
pop
xor
gs
loope
mov
loop
int
into
dec
call
bswap
add
sbb
xor
mov
incl
fnstenv
mov
je
stos
mov
fdivl
lahf
cwtl
fmull
add
rcr
cmc
sub
scas
adc
and
xchg
cmp
cmpb
stos
int3
push
gs
stc
adc
add
popf
and
and
in
outsb
and
mov
ds
adc
mov
add
add
sbb
mov
scas
lea
inc
mov
iret
mov
lcall
jp
inc
lock
iret
xor
scas
mov
mov
fimuls
cmpsl
pop
stc
mov
lret
mov
clc
jecxz
xchg
cmp
stos
sub
push
dec
rorl
xor
sub
cmp
pop
repz
push
inc
cwtl
ret
pop
mov
jg
mov
aaa
push
push
bound
pop
adc
lahf
jecxz
jae
mov
aas
sub
ror
push
cmp
outsb
in
mov
xchg
push
or
mov
popf
add
insb
jp
ja
pop
sarb
mov
ss
mov
lods
mov
dec
hlt
pop
add
dec
nop
lock
lock
movsb
mov
jae
lods
subl
pop
aam
xchg
popa
mov
pop
in
sbb
ret
push
cmc
ret
inc
jmp
popa
xchg
sqrtps
pop
test
notl
lods
aad
icebp
xchg
pop
mov
xchg
push
or
mov
imul
add
ror
mov
mov
adc
xchg
inc
or
push
mov
pop
xor
out
data16
inc
pop
mov
push
shl
pop
jecxz
adc
sarb
push
mov
dec
or
movsl
jecxz
gs
fcomps
scas
inc
in
std
inc
sahf
push
lods
fistps
sub
mov
jp
xchg
cmp
mov
lret
div
push
mov
aas
les
stos
add
mov
mov
pop
cmovae
mov
jp
mov
cmc
sub
push
fiadds
mov
mov
jo
fbld
in
lds
mov
push
inc
movb
or
cmp
push
push
mov
adc
fldcw
ror
cmc
mov
ret
mov
dec
add
insl
sbb
es
rcrb
xor
and
xlat
push
xchg
push
xor
fs
mov
sbb
gs
sbb
inc
ljmp
popa
cwtl
lods
cmp
inc
push
mov
adc
jne
mov
mov
fcoms
test
shlb
lea
push
mov
add
test
in
or
xor
xlat
push
dec
popa
jne
sahf
and
pop
inc
data16
push
pop
xchg
andl
mov
clc
xchg
rcll
and
aam
push
mov
repnz
rorl
push
xchg
hlt
popf
pushw
add
shlb
or
hlt
pusha
push
adc
stc
mov
pusha
ja
lcall
jne
sub
mov
jecxz
mov
push
insb
sbb
adc
xlat
shll
hlt
pop
data16
out
xchg
mov
pop
jo
aad
and
push
popa
arpl
pop
cmp
icebp
xor
mov
lcall
jno
push
sub
insl
adc
and
sub
loop
push
pop
push
cmpsb
or
idivb
sub
mov
sub
cltd
sbb
mov
xchg
mov
add
jne
lret
sbb
add
data16
daa
mov
push
hlt
ror
stc
push
pushf
aad
mov
ljmp
outsb
and
pop
cmp
push
fdivrs
in
or
jns
mov
imul
in
add
into
sbbb
jp
sub
push
fidivl
and
add
jmp
or
cmp
push
xchg
inc
je
aam
pop
sti
add
mov
test
dec
fcmovnu
cmp
into
dec
loopne
sub
test
mov
dec
into
cmpsb
cmp
data16
inc
lds
movsl
xor
loope
subb
imul
or
add
addr16
bound
fldcw
into
out
mulb
out
xor
call
sub
jle
mov
lret
add
add
imulb
std
loopne
clc
adc
mov
ja
or
inc
push
push
jnp
add
sub
dec
pop
iret
loopne
mov
in
mov
add
xor
pop
movsl
imul
fstpl
das
xchg
fstl
cltd
clc
in
jg
dec
mov
adc
or
in
das
divl
dec
xchg
leave
out
popf
jno
lret
jns
sbb
sub
mov
mov
inc
jg
push
or
sbb
sbb
and
subb
and
lret
mov
cltd
gs
xchg
cmc
push
dec
cmp
loop
in
enter
cmp
cltd
fstpl
jl
iret
and
and
shlb
pop
mov
stos
cmp
push
loope
mov
ret
ljmp
fildl
outsl
or
jno
out
xchg
mov
adc
or
out
lahf
pop
jns
pop
lock
aam
push
mov
push
add
sbb
cmpsb
sbb
cltd
sub
xchg
fwait
sbb
and
push
sbb
stos
mov
pop
mov
jns
fucom
in
movsb
pushl
xchg
and
pop
fwait
sbb
cmc
push
ds
std
dec
lock
dec
ds
sbb
and
jo
sub
dec
push
addr16
pop
hlt
or
sbb
xchg
popl
mov
cmp
inc
aad
xorl
lods
test
jmp
lods
gs
out
shr
mov
loopne
ljmp
xor
sub
testl
jb
sbb
repnz
lds
or
lock
leave
jae
dec
mov
lds
insl
into
mov
mov
xchg
xchg
testl
mov
mov
and
adc
test
scas
mov
mov
jp
repz
call
rclb
sbb
jecxz
or
sub
popf
dec
adc
cmp
cwtl
xchg
out
cmpsl
and
mov
adcl
jl
mov
int3
mov
std
test
andl
pop
adcl
adc
jb
mov
pop
outsb
xor
xchg
nop
xchg
inc
rorb
mov
mov
jl
cld
movsb
fadds
mov
ret
lcall
xchg
lds
pop
jo
sub
mov
sbb
mov
repz
loop
and
mov
mov
and
mov
xchg
pop
out
jp
out
jae
xor
jns
sub
jge
and
dec
ss
mov
fisubs
cltd
sbb
sub
or
xchg
incl
pushw
inc
es
and
das
mov
inc
xor
dec
cs
aam
sbb
push
add
jbe
nop
cmc
sahf
sbb
xor
movsl
scas
lret
popa
push
pop
mov
aaa
stc
sbb
xorl
pop
mov
jmp
in
jmp
testb
scas
mov
add
dec
dec
nop
jo
ret
into
test
adc
push
in
add
movl
lock
sub
cmpsl
pop
cmp
adc
mov
mov
es
scas
pushf
jae
pop
sub
ss
lods
cmc
dec
pop
or
cld
test
cli
adc
push
dec
pop
mov
repnz
jb
mov
inc
or
dec
shrl
xchg
loopne
jno
jmp
into
faddp
stos
cmpsb
int
cmp
orb
sbb
outsl
push
test
push
mov
inc
stc
mov
lods
push
out
pop
push
mov
xorl
imul
popa
and
sbb
jg
rclb
pop
xor
add
and
ret
mov
insb
mov
fs
cmp
jnp
lret
jns
push
rcl
inc
push
add
inc
cmc
xchg
insb
mov
push
popf
mov
push
ret
jno
cltd
sub
or
ret
xor
cwtl
mov
xor
pop
xlat
stos
push
jno
mov
cmp
sbb
jns
scas
movsb
fcoml
add
jmp
sbb
outsb
add
and
iret
aad
mov
movsb
jbe
add
repnz
test
jnp
fdivrs
lret
jbe
stc
data16
imul
out
xor
mov
cwtl
decb
cmp
push
gs
outsb
fdivrl
mov
addl
pop
inc
in
pusha
dec
insl
cmp
loopne
add
jle
pop
bound
cmp
clc
cmp
mov
ss
iret
into
inc
mov
shl
xchg
test
push
sub
lock
arpl
mov
jnp
sarb
or
dec
push
popa
cmc
lcall
xor
xchg
mov
popf
gs
mov
roll
pushf
mov
popf
xor
ss
jmp
xchg
es
inc
std
sub
mov
mov
fwait
leave
test
loop
es
cltd
dec
sahf
adc
and
jb
mov
cmp
cmp
cmpsb
arpl
or
xchg
jne
pop
int
ret
mov
add
popl
push
dec
dec
add
xchg
mov
in
adc
jo
jg
mov
jae
dec
sub
xor
mov
gs
or
repz
dec
mov
pushf
dec
mov
repz
push
mov
sbb
call
sub
mov
out
add
lret
aaa
xchg
add
xchg
mov
pop
jb
je
in
jbe
or
in
pop
fcmovu
dec
mov
inc
dec
mov
rorb
add
dec
jge
pop
add
data16
or
test
add
insb
ret
scas
repnz
out
mov
je
mov
shll
pop
enter
cmpsb
and
jno
insl
push
and
mov
jp
out
repz
xchg
lret
rcll
mov
mov
stc
adc
lret
fstpl
mov
push
dec
xchg
data16
xchg
adc
inc
xor
sub
push
push
add
jmp
iret
jmp
dec
adc
in
out
adc
cltd
xor
jns
jle
loope
adc
and
andb
out
rorl
or
std
mov
ja
incb
fcomps
sbb
dec
lahf
sahf
loope
testl
inc
sub
stos
mov
xchg
jle
and
adc
out
std
xchg
cmp
popf
dec
aas
dec
or
lret
fs
push
push
jl
das
popa
push
pop
fs
out
psadbw
add
and
jb
ret
xchg
mov
jno
xor
or
mov
pop
ds
repz
mov
in
inc
adc
pop
aas
mov
mov
push
or
pusha
xchg
lcall
fld
orb
mov
fsubp
pop
imul
jecxz
cmpb
test
inc
xor
out
cmc
pusha
test
lahf
jbe
jno
cmp
cli
adc
outsl
push
outsl
lds
xor
or
je
jmp
pop
mov
push
stc
popf
out
mov
add
std
jg
add
push
jg
shl
push
ds
mov
sbb
dec
out
xchg
int3
xchg
ficoml
pop
xchg
adcl
mov
outsl
mov
pop
jns
push
data16
mov
jae
dec
mov
ja
imul
cli
ret
push
jae
mov
jmp
cmc
in
pop
inc
imul
push
mov
out
xchg
test
jmp
push
cmp
sbb
das
icebp
sub
stos
mov
mov
or
addl
in
xchg
cmp
jmp
fsubl
sbb
stc
xchg
es
popf
inc
mov
int
and
into
sbb
inc
rorb
mov
out
pop
aad
je
call
das
rol
mov
mov
pop
pop
xorb
mov
daa
mov
pushf
ljmp
or
test
add
out
pshufw
sub
jne
aam
adc
in
push
shrl
jmp
inc
mov
popf
jo
repz
daa
aas
inc
test
in
xlat
adc
in
mov
mov
mov
cmp
dec
mov
mov
scas
ss
sbb
imul
fistps
fistl
jns
xchg
cmpsl
or
fistpl
int
nop
and
jbe
jl
push
inc
cmpsb
out
stc
dec
pop
dec
ss
test
xor
jg
in
push
mov
insl
mov
push
mov
lret
iret
out
adc
sbb
repz
sub
fsubl
pop
insb
add
les
add
mov
int3
and
sub
out
add
lods
mov
jg
pop
ror
xchg
mov
call
es
dec
lret
leave
pusha
jp
ja
sbb
dec
outsl
int3
jge
mov
add
jge
clc
or
push
and
adc
pusha
sub
xor
sbb
pop
and
dec
ret
aaa
xor
mov
inc
jp
loop
cmp
js
sbb
cmc
daa
repnz
stos
sub
mov
nop
loope
mov
subps
ja
push
push
sub
gs
daa
addr16
loopne
aaa
test
pop
pop
xchg
idivb
andb
sbb
xchg
fidivrs
jbe
shr
jns
outsl
mov
and
aam
lds
pop
sti
add
add
sahf
xor
and
add
jle
iret
jnp
sub
pop
out
lret
hlt
push
int
jb
stos
fcoms
push
sub
js
aaa
pop
ss
rcrl
sbb
pop
ret
ja
jnp
and
lods
in
adc
jne
mov
mov
fwait
mov
inc
cltd
les
push
fnstcw
and
jmp
lret
mov
cmp
xchg
xchg
mov
rcr
out
addl
dec
sub
pop
jnp
adc
sub
xor
lret
mov
sarl
mov
cmp
dec
xchg
sbbl
cmp
or
out
pusha
cltd
adc
int
sub
ficoml
push
rcll
sub
xlat
adc
lea
ja
adc
xchg
out
dec
fadds
lock
pop
cmc
mov
adc
pop
js
add
sbb
in
movsb
fbld
inc
push
sbb
call
pop
jns
pop
pushf
pusha
in
inc
mov
push
imul
sbb
inc
rorl
or
mov
sub
pop
movsl
lods
stc
adc
cltd
xor
mov
jmp
jb
and
fs
daa
mov
xchg
out
pop
mov
mov
sahf
push
aad
inc
adc
and
das
or
adc
test
into
nop
or
fisttpl
cli
inc
mov
imul
sarb
and
add
fnsave
mov
and
jl
mov
lret
jne
sbb
mov
jmp
aam
mov
ret
lahf
pop
cmp
cltd
lret
and
mov
push
push
loope
mov
std
cmpsl
cmp
mov
dec
jmp
mov
pop
imul
xor
lret
shl
arpl
inc
andl
pop
pop
mov
and
lods
mov
mov
cmc
mov
pop
pop
sub
sbb
lds
adc
mov
lahf
aad
xchg
inc
mov
fldl
jae
les
mov
add
roll
mov
and
ja
lcall
in
inc
lods
mov
cltd
sarl
xchg
add
inc
sbb
fwait
and
ss
pop
push
sub
out
jge
bound
jge
sub
loope
sbb
jg
jbe
or
sub
mov
mov
fmull
push
popf
mov
cwtl
mov
in
faddp
push
iret
rcrl
jno
jne
movsl
mov
inc
push
push
test
jge
popa
in
outsb
rcl
movb
decb
pop
out
and
push
mov
ljmp
mov
sbb
mov
xchg
mov
mov
outsb
subb
scas
ds
push
sbb
add
loopne
nop
repz
mov
sub
mov
push
scas
xchg
xor
iret
sbb
push
dec
pop
aas
jg
cmp
addr16
mov
sub
xchg
add
add
iret
pop
add
cmpsl
dec
fstpt
lret
addl
push
xor
cmp
cltd
xchg
ret
lahf
mov
das
testl
cltd
rcl
mov
out
jecxz
xchg
je
inc
adc
lods
push
enter
xlat
dec
dec
or
push
or
jo
inc
fnstsw
movsl
mov
fsts
xlat
shll
push
pop
jge
aad
stos
add
movsl
mov
adc
jg
or
push
mov
loop
stos
mov
inc
push
mov
ja
inc
rorl
sbb
pusha
add
in
fisubl
in
call
mov
fwait
decl
ds
arpl
mov
or
je
mov
mov
pop
imul
dec
and
es
ljmp
jae
sub
rol
mov
pop
arpl
jbe
rcl
sub
int
push
cmpsl
std
nop
lds
xchg
addb
cmpsb
pop
sub
or
mov
xchg
int3
ja
pop
scas
xor
ss
test
cwtl
mov
clc
lods
sub
lahf
mov
les
test
stc
loop
xchg
mov
push
roll
xor
lock
push
lcall
repnz
enter
ljmp
scas
cld
lods
inc
inc
pop
jp
inc
push
or
std
mov
rol
mov
xchg
jl
je
push
and
mov
cld
outsb
test
rcrb
jb
add
test
rcll
out
in
inc
mov
out
in
dec
jg
cld
push
in
adc
sub
setno
xchg
cmp
jo
cmp
pop
cmp
arpl
cmp
mov
shlb
mov
outsb
inc
sub
lret
lock
pop
int3
out
mov
adc
ret
loope
mov
jb
je
lds
and
movsb
jl
adc
push
inc
sub
ret
cmp
aam
xor
lahf
pop
pop
lret
sarb
loop
ss
adc
nop
mov
cmp
mov
inc
out
adc
repnz
and
hlt
ljmp
push
dec
fmul
jecxz
xor
xlat
adc
and
fldenv
loopne
dec
stos
pop
dec
or
adc
push
rcll
xchg
add
inc
mov
and
stos
mov
or
fs
sbb
mov
adc
add
in
fcmovu
xor
cmp
cmc
or
fsts
inc
pop
mov
lahf
add
test
mov
sbb
addb
repnz
test
gs
dec
fsubrl
mov
leave
loop
cwtl
lds
xchg
adc
test
push
xor
push
push
pop
icebp
mov
push
cltd
je
and
cwtl
pop
int
jl
rol
jb
xor
imul
test
test
inc
push
and
movsb
push
repz
adc
daa
adc
aad
inc
add
or
loopne
dec
rorl
or
lds
out
popa
jnp
ss
xchg
sets
jb
mov
pop
pop
mov
mov
push
inc
ficomps
jl
jecxz
inc
and
or
sub
std
mov
es
out
inc
push
imul
mov
inc
fdivrl
sub
adc
push
jno
pop
inc
leave
add
iret
fistps
cmp
jbe
sbb
cmp
jl
daa
stos
and
push
in
rcll
pushf
data16
iret
add
cmp
xor
pop
adc
mov
xchg
test
mov
clc
add
mov
or
subb
cmp
xchg
jecxz
js
adc
jbe
cmp
inc
push
test
sbb
out
inc
iret
loop
icebp
ror
cmp
inc
lret
mov
movsl
xor
movsb
rcll
insb
pop
lret
test
cmpsl
into
sub
sbbl
dec
xchg
pop
loope
insb
add
in
std
jno
push
rolb
inc
cmc
pop
mov
das
sarb
adc
xor
fiaddl
sub
jns
in
test
lods
mov
cmp
orb
pushf
sub
xor
or
decb
fsubl
fcmovu
pop
inc
sbb
cli
adc
jl
divb
pmullw
in
dec
daa
adc
lds
stos
add
lcall
ljmp
pop
dec
icebp
pop
pop
push
leave
stos
popa
fstl
adc
xor
scas
testl
ja
dec
jo
data16
sub
jge
scas
mov
daa
pop
mov
and
mov
jge
and
lods
cmc
mov
icebp
mov
adc
and
sbb
cmp
lret
xor
enter
mov
test
jb
out
cmp
dec
mov
xor
mov
es
in
js
leave
rcl
pop
mov
sbb
mov
jo
gs
cmp
inc
daa
cmp
sub
dec
cmpsl
push
pop
adcb
or
dec
rclb
lea
lcall
mov
cmp
inc
lods
dec
sarl
hlt
or
in
stos
loope
loope
mov
inc
xchg
ret
cwtl
and
fisubs
arpl
sbb
cmp
sub
fs
push
jne
daa
fnstcw
add
add
mov
pop
insb
cwtl
or
mov
aad
mov
cmp
adc
xor
sti
mov
js
inc
int3
mov
xchg
sub
sarb
add
push
xchg
fistps
mov
push
push
ss
insl
xlat
movsl
pmullw
jecxz
push
sub
mov
push
pop
div
dec
mov
insb
aam
push
sbb
dec
push
fimuls
pop
add
movsb
data16
arpl
jge
repnz
fcoml
jno
mov
adc
jmp
hlt
sbb
jno
cld
shr
cmp
fidivl
sbb
aas
xor
push
mov
jb
adc
and
sub
inc
or
mov
mov
inc
jae
out
fldcw
sbb
mov
xor
stos
pop
aaa
jno
push
insl
push
jg
aad
cmp
loopne
fmuls
add
mov
adc
xor
or
js
mov
push
lods
adc
arpl
cmp
test
dec
mov
pushf
sbb
jecxz
or
lret
mov
and
jge
in
test
insl
rcll
mov
pop
mov
call
mov
jne
enter
adc
mov
repz
xor
cmp
pushl
mov
mov
cmc
cmp
fldenv
xor
xor
leave
sahf
lret
xchg
ficoml
inc
imull
ljmp
mov
sar
sbb
sti
pop
ss
icebp
enter
fsubp
inc
adcb
lahf
mov
cmp
ret
int
adc
ds
das
cmp
sti
loopne
adc
add
and
mov
in
sahf
sbb
jmp
cld
rdtsc
arpl
add
sub
or
scas
dec
addr16
ds
adc
xchg
jle
mov
push
xor
mov
ret
fdivs
adc
xlat
or
mov
dec
js
imul
testb
mov
addl
cwtl
push
inc
sbb
ret
loop
xchg
sbb
add
jmp
mov
test
jne
mov
adc
cwtl
lea
push
inc
shrb
push
and
outsb
fdivl
in
out
xor
movsl
lea
sub
cmp
aad
fists
push
ror
cmp
jae
addl
mov
mov
fwait
daa
lret
les
or
cmovs
mov
inc
pop
cmp
fldl
mov
test
add
mov
xor
push
xor
mov
es
negl
push
cmpsl
into
dec
inc
or
fdivrl
mov
addr16
mov
std
enter
lods
fimull
jbe
jmp
nop
mov
outsb
rorb
clc
sub
testl
ret
popf
movsl
xchg
aaa
add
dec
cmp
movsb
mov
test
movsb
dec
es
call
je
push
cltd
inc
add
cld
adc
push
dec
imul
ja
hlt
cmp
mov
aam
jbe
push
push
out
je
adc
cmpl
mov
jne
pop
sbb
shrb
xchg
pop
cmp
push
push
mov
out
mov
or
fs
push
outsb
test
add
adc
shl
and
outsb
pusha
clc
mov
call
xlat
in
dec
cmp
xchg
lcall
mov
mov
inc
sbb
dec
cltd
sub
push
idivl
sahf
std
lret
inc
ja
push
sbb
jg
ret
inc
xchg
pop
fst
inc
cmp
push
push
js
out
dec
sbb
add
pusha
mov
repz
sub
jns
lcall
mov
dec
rolb
inc
adc
nop
roll
fists
testb
or
lcall
cmp
pop
mov
push
daa
adcb
cmp
xchg
pop
popa
rolb
and
icebp
sbb
std
leave
mov
out
movsb
mov
adc
inc
xchg
test
sbb
sbbb
mov
es
push
adc
mov
jne
out
mov
adc
xchg
addl
jg
fwait
inc
loop
jge
mov
adc
xor
dec
lock
nop
lods
decb
imul
jns
repnz
int
jns
dec
ds
cmp
fistl
dec
pushf
mov
shrb
xor
movsb
popl
jmp
cmp
mov
fs
lea
jle
lods
in
sub
aad
mov
push
shlb
in
and
call
adc
add
out
jne
pop
ja
xchg
pop
push
fldt
data16
clc
scas
lods
data16
fcoml
sbb
mov
ja
out
in
aad
aaa
jecxz
xor
cld
sbb
out
shrl
fwait
in
fdiv
sbb
add
jbe
fists
out
call
cmp
scas
mov
enter
mov
jae
shl
je
in
xchg
cmp
jbe
mov
mov
or
and
mov
addb
je
mov
scas
les
jg
imul
add
or
std
xlat
rcrl
daa
push
inc
dec
hlt
pop
push
cs
scas
xor
shrl
fdivp
xchg
inc
cmp
ljmp
sarl
sbb
shlb
dec
rorl
es
scas
cmp
dec
xchg
sub
push
pop
sub
gs
cld
out
mov
jp
fsubrs
or
out
fwait
sbb
mov
in
mulb
sahf
or
pop
or
jno
sub
inc
sahf
sbb
cmp
loope
pusha
xchg
arpl
cwtl
loope
jno
pop
in
lret
stos
mov
aas
or
and
xlat
insl
aaa
icebp
ret
test
mov
mov
lret
jg
imul
push
lds
fstpl
test
or
sub
jge
pushf
mov
mov
xchg
sbb
push
mov
arpl
loop
repnz
add
seto
lret
js
out
mov
mov
mov
pop
or
stos
test
jne
call
xchg
push
jno
outsl
pop
xorb
dec
js
pop
pop
xchg
xchg
jno
sbb
jl
adc
inc
into
pop
loop
enter
pop
lock
jnp
cmp
sbb
in
loope
pop
sub
loop
push
sbb
mov
cwtl
xchg
push
add
sub
in
jns
mov
pop
pop
icebp
fmul
call
aam
push
test
mov
fsts
inc
mov
outsb
popa
arpl
imul
or
dec
xor
sbb
add
mov
add
das
int3
sarb
pop
sti
push
cwtl
adc
pop
mov
aad
movsb
push
add
test
aas
xchg
js
in
inc
mov
aad
mov
jge
cmpsb
mov
xchg
movsl
int
add
enter
push
mull
ret
xor
out
sti
bound
pop
adc
test
loop
lods
rcrb
mov
mov
xor
cwtl
xchg
lods
repz
out
jns
lea
mov
lods
enter
adcl
mov
mov
cmp
out
mov
sub
fs
insb
inc
hlt
addr16
mov
pop
imul
es
lret
xchg
pushf
dec
push
cmp
jl
mov
inc
push
or
mov
mov
in
cmpsb
outsb
jp
mov
fildll
andl
pop
movsb
jg
outsb
int
popf
outsl
adc
xchg
push
popf
rclb
dec
xchg
mov
cmp
lea
into
ss
push
jae
push
sub
stos
cmc
ret
sub
into
xlat
mov
mov
incb
cli
cmp
xchg
lods
sti
mov
sbb
cmp
int3
loopne
out
cs
bnd
mov
mov
cltd
ds
std
fistl
push
inc
mov
sub
data16
mov
dec
jmp
mov
xchg
dec
rsqrtps
popf
shr
pop
addr16
adc
sti
cmp
daa
cmp
and
push
repnz
test
loopne
xchg
jmp
fldt
mov
subl
mov
jle
cmp
cmp
inc
fwait
jne
mov
or
push
push
cmp
pop
xor
in
mov
push
sub
mov
mov
cld
cld
mov
stos
sub
or
push
in
cmp
stos
fisubl
mov
xchg
rcr
test
ja
std
mov
cld
and
lahf
fxch
bound
bound
push
jl
and
dec
sub
sbb
pushf
pop
cmpsl
jb
ds
adc
loop
sbb
std
or
pushf
test
outsb
iret
lods
xorb
pop
fs
or
jne
xchg
bound
sar
sub
cld
in
stc
gs
pop
insl
xchg
inc
adc
lret
leave
lock
xchg
inc
cmp
pop
and
leave
lds
clc
push
scas
outsl
hlt
mov
xchg
fstps
adc
xor
data16
stos
aaa
mov
repnz
stos
test
daa
sbb
jno
pop
fldenv
dec
fstl
sub
fnsave
fnstenv
xchg
lods
adc
rorb
mov
js
jns
out
push
push
mov
repz
mov
cmpsb
jbe
xor
andb
mov
dec
mov
add
pop
les
pusha
andl
movsb
push
inc
push
aam
push
sub
push
inc
cmp
inc
push
loop
adc
xchg
inc
dec
dec
inc
jl
les
fisttpll
mov
mov
and
mov
ds
mov
in
lea
repnz
push
inc
mov
stos
and
orl
jmp
jp
pop
je
movsb
clc
push
cmp
rcrl
lcall
sub
sti
outsb
int
adc
cld
jmp
out
sbb
leave
inc
mov
pop
icebp
mov
xchg
lcall
pusha
cmc
sbb
mov
adc
and
lods
enter
sahf
mov
insb
jae
push
lcall
cld
inc
or
negl
dec
movb
je
push
push
and
jns
jg
jp
in
movsl
lea
pop
xor
ss
test
or
xchg
xlat
mov
jecxz
popw
in
dec
xor
pshufw
add
dec
scas
and
sbb
jb
inc
cs
ja
dec
mov
push
lahf
push
cmp
cmp
adc
and
test
jle
push
mov
daa
sub
es
or
fistl
mov
xor
ror
adc
lret
adc
cmp
mov
out
sub
scas
mov
or
dec
fdivrp
cmpsl
repnz
addr16
hlt
rcll
fwait
or
in
jmp
or
push
sbb
dec
lcall
addl
xchg
xchg
lahf
repnz
in
lret
pop
xchg
repnz
xchg
test
in
xchg
in
popf
mov
mov
les
dec
pop
sub
push
in
inc
push
in
xor
fmuls
cmp
inc
das
cmc
inc
sbb
loop
pop
or
inc
or
ljmp
cmpsl
add
jo
cwtl
lods
dec
pop
add
push
or
inc
loop
xchg
mov
pop
sbb
fs
mov
stc
xchg
cmp
arpl
xchg
sub
test
and
cmpsb
cmp
iret
and
test
adc
ss
inc
movsb
mov
scas
inc
pop
stos
in
add
repz
jnp
mov
sbb
imul
fcmovbe
mov
imul
xchg
mov
mov
fstps
sti
sub
or
stos
inc
fdivs
mov
lods
mov
and
std
bound
clc
scas
adc
adc
sbb
int3
mov
adc
add
cmp
ret
xor
out
div
xor
fwait
mov
add
lock
rcr
lea
rcrl
rcrl
pop
int
cmp
adc
sbb
mov
xor
jno
lret
test
dec
mov
add
mov
mov
mov
movsl
dec
dec
jmp
xor
test
mov
sbb
fnstenv
or
js
adc
inc
xchg
fucomp
lret
aam
xchg
cmp
cmp
out
fistl
push
push
ds
arpl
rorl
mov
into
js
loop
mov
jnp
test
aas
es
pusha
jnp
addr16
mov
xchg
inc
lock
pop
and
int3
xchg
aas
cmp
int3
loop
cli
pop
push
sub
dec
sub
and
or
stc
sahf
pop
cs
lock
add
icebp
xor
aad
imul
cmpsb
pop
into
mov
iret
into
jl
sbb
sub
push
nop
aam
insb
lret
xchg
lock
xor
pop
sbb
notb
jmp
xchg
sub
xchg
lea
out
mov
inc
lea
pusha
inc
and
push
lcall
insb
into
push
pop
in
jnp
xchg
xor
mov
mov
mov
out
jb
jle
sbb
adc
std
jle
push
or
and
inc
push
pop
dec
filds
les
fcmovnu
cli
sti
push
push
test
inc
xor
dec
loope
cmc
cmp
popa
sbb
fdivrl
jl
jno
mov
mov
add
ja
enter
sbb
into
mov
jmp
push
dec
jp
or
je
cmpsl
inc
das
mov
push
dec
nop
das
lahf
call
pop
xlat
xchg
insb
adc
inc
add
pusha
xchg
data16
sub
cmc
je
loope
ret
mov
xchg
push
or
and
pushf
dec
jmp
mov
insb
mov
jp
sarb
cmp
pop
imul
fiaddl
pusha
and
inc
add
lea
dec
fimuls
mov
addr16
jne
dec
xor
add
aam
lock
fistl
movsl
lcall
and
lahf
mov
mov
fiadds
jb
add
repnz
test
cld
adc
cmp
xor
adcb
or
mov
xor
clc
and
inc
cli
ss
jb
ds
jecxz
imul
test
stos
inc
add
fwait
ss
mov
inc
pop
pop
xorl
xchg
roll
leave
popa
add
mov
xchg
call
stos
loopne
jle
mov
cmc
fiaddl
imul
mov
pop
aas
dec
dec
jae
add
addl
cmpl
mov
outsb
adc
sbb
sbb
into
pop
stc
jl
lods
push
inc
dec
xchg
push
in
mov
pop
jno
sbb
mov
mov
lods
xor
iret
adc
out
movsl
insl
xchg
and
or
or
out
imul
outsb
push
sub
jmp
mov
loop
adc
xchg
insl
cmp
je
fcmove
and
adcb
cmp
stc
ljmp
aam
dec
mov
push
subb
and
popf
scas
cmp
frstor
jo
dec
push
cli
mov
rolb
nop
push
jl
mov
leave
and
and
dec
outsl
aaa
and
lds
xchg
shlb
int
mov
gs
push
sbb
cmpsb
mov
ret
push
ja
xor
jae
add
mov
dec
xchg
or
fnstenv
movsb
mov
cmpsl
imul
mov
mov
imul
out
cmp
shlb
pusha
jo
cwtl
lods
jns
add
mov
mov
xor
and
imul
push
test
adc
je
lea
mov
inc
int
push
lock
dec
pop
mov
adc
mov
inc
stc
jb
fs
les
dec
ret
lock
xchg
adc
jno
inc
inc
dec
fucomp
movsb
push
sbb
imul
cmc
arpl
aas
cmp
adc
mov
or
insb
sbb
cmp
int3
mov
mov
jg
int3
push
ljmp
vpmovusqw
rorb
adc
pop
outsl
add
mov
pop
cli
add
pop
mov
ret
les
mov
xchg
sbb
test
mov
int3
cli
sbb
arpl
cltd
jbe
loopne
dec
divb
add
adc
push
xchg
add
stc
mov
mov
fdivrl
fsubs
lods
mov
cmpsl
nop
scas
add
inc
and
pop
cmpb
mov
in
sbb
cld
mov
loope
adc
cmpsb
shl
xchg
xor
insb
adc
mov
dec
jae
inc
clc
pop
and
cmpb
pop
and
jns
mull
adc
mov
fsubrs
data16
and
iret
jp
data16
icebp
mov
adc
dec
xor
imul
inc
inc
dec
xor
pop
push
mov
mov
or
cmp
adc
dec
pop
jb
mov
les
inc
push
pop
das
cmp
sti
push
imul
pop
fcomps
lds
repnz
pop
pop
adc
sbb
gs
lahf
fildll
push
cmpb
lret
in
or
insb
jne
je
push
in
pop
les
aam
jb
add
pop
outsl
jmp
mov
xchg
xchg
daa
out
ja
imul
pop
sub
cmp
xor
sbb
mov
xor
aad
scas
rorb
jp
mov
dec
xchg
cmp
xchg
popf
jo
xchg
sbb
out
sub
or
fbstp
jbe
jg
data16
loop
cli
sub
mov
pop
push
jmp
inc
add
sub
adc
cmp
or
test
sub
inc
sbb
popf
or
popf
xchg
or
ror
jns
aad
lcall
in
mov
sub
xchg
imul
add
pop
shr
adc
pop
stc
shl
shufps
mov
mov
mov
inc
push
jmp
sub
and
insb
mov
push
add
fcmovnbe
pop
push
xlat
sbbb
adc
jno
sbb
iret
sbb
mov
stc
cs
pop
mov
mov
scas
out
filds
push
fwait
inc
aaa
rcrl
in
push
inc
push
push
dec
pop
out
or
mov
sahf
and
rcr
mov
testb
push
mov
cmp
or
sub
fisubs
insb
dec
daa
aaa
jnp
mov
adc
fiaddl
push
es
inc
cmpsb
cmp
sub
mov
movb
fidivs
pop
inc
inc
pop
dec
cmp
fdivl
loop
sbb
and
xor
and
xor
addr16
cmp
xor
fdivs
xchg
outsb
jns
add
int3
mov
jge
or
cmpsb
sbb
cli
mov
loopne
pop
test
dec
mov
mov
inc
pop
inc
ret
iret
sarb
mov
inc
mov
in
xchg
mov
xor
outsb
hlt
xchg
and
sub
fs
loop
cmpsl
sbb
lds
xchg
xchg
push
push
mov
hlt
aaa
xlat
in
in
lret
out
push
mov
cld
test
jns
adc
lret
inc
pop
and
or
iret
adc
xchg
in
dec
shll
xchg
add
cmp
push
mov
dec
stos
mov
jne
adc
fstpl
inc
imul
in
xchg
cmp
ffree
and
dec
mov
add
sar
rorl
pop
jge
push
pop
mov
or
sbb
mov
jp
inc
notl
push
jp
add
gs
ljmp
rcrl
cmp
jns
or
add
mov
xchg
ljmp
adc
push
inc
sub
or
aas
push
loop
mov
incb
daa
inc
push
insb
cli
nop
loop
mov
pop
out
movsb
adc
movsb
frstor
notb
xor
aas
xchg
pop
mov
jno
int
inc
lret
pop
jle
cs
mov
xor
push
loope
mov
pusha
out
sub
push
and
sbb
push
adc
iret
adc
cmpb
fstpt
xor
xor
jb
jge
int
pop
xchg
dec
push
std
xchg
xor
xlat
dec
outsl
inc
jecxz
ret
outsl
mov
enter
pushf
pop
cmp
pop
insl
xlat
sub
xrelease
mov
pop
fisubl
testb
sar
jg
sbb
adc
jno
call
out
jne
mov
mov
lcall
push
jne
int
jbe
in
out
inc
out
test
outsl
adc
imul
mov
mov
sti
ret
jae
les
sub
lret
fidivrs
mov
jp
add
and
clc
mov
fsubrp
imul
popa
call
and
dec
in
or
pushf
xor
mov
mov
in
lock
mov
sub
and
iret
mov
insl
add
cmpsl
sub
adc
std
pusha
push
push
enter
aaa
dec
arpl
sbb
hlt
arpl
mov
pusha
sahf
inc
mov
pop
xchg
dec
adc
call
jno
jle
xchg
dec
mov
push
sub
shlb
or
add
push
movsl
pop
xor
xor
push
xor
addr16
pusha
xchg
jl
cmp
scas
hlt
dec
adc
inc
int3
movsb
shlb
mov
dec
ljmp
add
inc
mov
fmull
lret
mov
xchg
sbb
lods
cli
xorl
scas
mov
sub
mov
out
std
in
mov
in
or
pop
aaa
imul
pop
pop
cld
gs
adc
cwtl
lds
push
std
mov
add
pop
inc
cmp
mov
das
in
or
sub
jle
xchg
add
and
aas
daa
adc
int3
or
sbb
cs
cmpsb
sub
jmp
mov
add
pop
mov
jns
add
or
mov
pop
into
jbe
push
mov
test
and
sub
scas
mov
mov
jmp
jns
inc
sub
and
adc
jns
lahf
fsubrs
jne
jp
or
ss
cli
sarl
insb
jmp
mov
data16
cmc
adc
xchg
pop
pop
mov
jge
cmp
loop
jb
lret
sbb
cmp
mov
adc
jmp
mov
loop
add
out
mov
daa
insb
push
ds
cmp
and
mov
and
push
inc
xchg
cmp
imul
jle
mov
repz
or
mov
andb
scas
add
outsb
aam
iret
popf
popf
loope
je
jmp
insl
inc
pop
pop
daa
fstps
in
aad
xchg
jecxz
jp
jae
repnz
jae
mov
daa
push
inc
fbld
fistpll
mov
outsl
ljmp
push
lahf
adc
mov
loop
je
repnz
inc
xor
fsubrs
insl
jle
out
sub
pop
fstpt
adc
jp
add
test
sub
scas
mov
sti
ds
dec
lea
int3
mov
iret
imul
jl
push
and
jb
and
movsb
mov
and
mov
inc
inc
mov
inc
mov
je
pop
aaa
adcl
aas
stos
dec
outsb
js
mov
icebp
scas
xor
xchg
push
daa
adc
push
es
mov
cmp
xlat
push
cmpb
mov
adc
bound
in
dec
pop
shlb
into
test
gs
xchg
mov
xor
pop
mov
sub
push
sbb
xchg
push
jmp
cmp
mov
imul
jb
das
repz
pop
leave
add
jp
mov
rolb
orl
adc
scas
and
decb
mov
mov
loope
inc
mov
ficompl
xchg
xchg
out
pop
ljmp
ja
push
fmul
icebp
xchg
fs
fcomi
jno
dec
or
xor
pop
sub
cmp
xchg
mov
and
mov
push
les
xor
cmp
aas
xlat
cmp
jmp
pop
jle
xchg
mov
mov
addl
and
fwait
or
mov
clc
inc
mov
outsb
repz
mov
or
mov
adc
pop
xchg
loope
repnz
out
push
lock
mov
push
out
jle
mov
in
pop
mov
push
dec
inc
gs
mov
and
enter
movsl
sar
sub
push
mov
dec
dec
lahf
fiadds
je
mov
xchg
cmpsl
push
imul
xchg
pop
ljmp
decl
nop
ret
shlb
xor
mov
or
push
fsubrp
pop
jecxz
and
inc
pop
repnz
ljmp
add
mov
add
xor
jge
stos
cltd
jbe
outsl
imul
jecxz
inc
mov
mov
popa
add
in
push
adc
fadds
rolb
inc
fstpl
pop
mov
or
cmp
cmp
inc
mov
xchg
insb
mov
lret
xor
cmp
mov
movl
dec
pop
push
mov
je
pop
add
fs
fs
inc
inc
inc
xor
lods
enter
add
cmp
outsb
clc
jle
cmp
cmp
fwait
inc
mov
movsb
xchg
les
out
or
xchg
push
pop
mov
jo
xor
sbb
mov
sbb
nop
xchg
daa
dec
cli
push
add
sbb
fxch
inc
add
shlb
or
in
in
pop
and
movsl
push
lret
insl
andl
xchg
test
pop
add
popa
jle
pop
insl
popa
aaa
enter
ds
pop
adc
sbb
cmc
jle
mov
mov
jge
inc
pop
inc
or
popf
jg
stos
outsl
xor
xor
sbb
das
shlb
leave
repnz
popf
jo
pop
mov
repz
mov
inc
inc
inc
mov
stc
push
dec
pop
shl
outsb
fnstsw
push
push
adc
xchg
cmp
push
xchg
cmp
call
pop
stc
mov
imull
orb
mov
scas
dec
jae
add
mov
sub
sub
xchg
mov
mov
sbb
dec
popf
pop
mov
loop
lea
in
shrb
test
mov
pop
addl
repnz
and
mov
outsl
mov
mov
or
es
cmp
pop
adcl
dec
fs
or
adc
bound
dec
sbb
mov
cmp
add
shll
js
push
sbbl
mov
xor
notl
push
shlb
jl
repz
xchg
rcrb
arpl
ja
xchg
xor
sarb
push
mov
leave
mov
mov
jecxz
in
popf
and
fwait
jecxz
daa
pop
cmpsl
sti
popf
mov
sub
int3
fists
rorb
shlb
mov
mov
leave
jg
inc
cs
nop
adc
cmp
jp
push
mov
mov
into
xchg
xchg
nop
mov
dec
jmp
jl
cld
add
inc
push
push
sti
inc
lods
or
clc
divl
sbb
cmpsb
xchg
jmp
dec
mov
jbe
idivb
jg
mov
add
pop
mov
xchg
pushf
fsts
rclb
adc
aas
pop
mov
mov
pusha
lret
ret
dec
jge
dec
mov
cwtl
inc
xchg
xchg
sub
insb
lods
test
dec
pop
pop
das
into
lahf
or
clc
arpl
adc
cmp
repnz
or
cmpsb
mov
dec
in
dec
add
jge
inc
gs
lea
fcompp
or
push
stos
stos
pop
sub
popf
popa
shlb
ljmp
adc
cmc
mov
in
sub
and
packssdw
mov
addl
lea
and
mov
pop
mov
addb
jne
jne
push
xor
rcll
lret
add
pop
jmp
mov
in
cltd
lret
fdivrp
xchg
cwtl
scas
dec
nop
aad
lds
rclb
and
outsl
pop
sbb
jp,pt
add
add
aam
jge
leave
js
jg
adc
outsb
adc
fs
adc
add
shlb
sbb
out
jle
and
xchg
pop
je
insl
sbb
push
imul
inc
xchg
in
lock
orl
adc
out
or
ds
in
imul
nop
sub
popf
cli
enter
mov
stos
pushf
pop
sub
in
sbb
add
lock
imul
xchg
insl
lahf
add
or
fadds
lret
mov
mov
iret
outsl
cmp
shl
dec
lcall
sbb
jno
mov
scas
pop
loope
adc
jl
xlat
jle
addr16
mov
push
jmp
push
jbe
add
in
test
xchg
xchg
lods
mov
rcll
mov
pushf
mov
mov
arpl
icebp
mov
sbb
mov
mov
fs
and
mov
jbe
leave
popa
nop
xchg
xchg
jp
ja
mov
out
call
xchg
cmp
gs
xorl
mov
sub
xor
negl
mov
decb
xchg
pop
inc
dec
into
xchg
aad
test
data16
cmc
call
or
xor
add
stos
inc
in
jb
push
mov
int3
repnz
shll
mov
icebp
dec
scas
xor
cmpsl
in
loopne
loopne
repnz
sub
filds
pop
jnp
hlt
loopne
in
jns
jp
cmp
loop
in
int
pop
imul
nop
ljmp
js
mov
lret
popa
and
sbb
sbb
in
jl
and
cmpl
mov
test
mov
cmp
mov
mov
ret
xor
in
mov
adc
inc
xor
es
mov
mov
cmp
xorb
or
jp
lds
call
mov
sbb
push
fsubr
ljmp
and
mov
icebp
popa
push
and
lods
adc
or
xor
xchg
dec
aad
addl
roll
into
sub
jle
xor
mov
sub
inc
sub
add
divl
int3
lahf
into
rcrl
out
ljmp
scas
add
push
adc
dec
int
adc
add
cld
and
sub
mov
jae,pn
inc
adc
jns
fstl
lret
jle
rcr
adc
mov
mov
outsb
inc
daa
push
push
pop
call
pop
aas
cvttps2pi
adc
ret
xchg
pop
mov
mov
out
ret
aad
pop
jno
mov
inc
call
mov
pop
cmc
inc
pop
adc
push
jmp
mov
sbb
adc
cmp
stos
sahf
and
sbb
cmp
xlat
ss
mov
push
add
fucomip
imul
lods
loopne
or
jnp
sarl
loop
pop
js
pop
incb
movsl
fmull
dec
movsb
fimull
jle
test
ret
scas
xchg
xchg
add
cmp
push
stc
xor
jp
daa
into
push
push
adc
push
mov
xchg
add
xlat
dec
sbb
daa
push
xor
jg
repnz
xor
cmp
mov
clc
dec
dec
or
inc
mov
adc
sub
jp
and
call
pop
loop
jae
aas
dec
ljmp
clc
inc
pop
scas
or
outsb
dec
aam
arpl
cmp
fwait
push
push
gs
shrb
push
pusha
int3
or
push
mov
adc
popa
inc
mov
out
sarl
mov
push
sarb
popa
mov
int3
arpl
rorl
cmc
mov
arpl
icebp
and
popf
lea
push
xor
xor
loopne
push
inc
lret
mov
mov
sahf
xchg
sbb
fsubs
add
lock
push
mov
mov
dec
xchg
mov
jno
leave
pop
push
mov
mov
mov
and
push
cltd
cltd
and
cmp
xchg
outsb
orl
fwait
xor
xchg
je
test
scas
leave
fidivrs
addb
lret
cmpsb
fwait
iret
shr
jmp
adc
fstps
push
push
inc
dec
cmp
mov
adc
fldt
adc
test
mov
hlt
sbb
lock
insb
cmpsl
adc
mov
xchg
loope
out
loop
and
je
fidivl
push
adc
inc
inc
sub
sub
xchg
cmp
lret
dec
dec
insb
stc
dec
stc
inc
jmp
call
adc
flds
enter
pop
scas
inc
std
daa
stos
jecxz
xor
xor
dec
push
das
sbb
jg
rorb
or
lcall
mov
sbb
int3
out
call
addr16
stos
mov
adc
adc
pop
testb
leave
push
movsb
imul
mov
xchg
stos
fstps
adc
rcrl
push
mov
pushf
or
out
cmpsb
or
daa
sbb
inc
std
int
adc
imul
out
mov
imul
shll
xchg
cmp
cmc
loop
les
sbb
jecxz
jecxz
dec
mov
push
lock
cwtl
mov
out
mov
sahf
mov
mov
ss
cmp
popa
adc
cltd
clc
inc
mov
xchg
rcll
in
adc
jo
jne
ds
repz
scas
out
inc
mov
sub
dec
jl
mov
int3
imul
and
push
xor
and
jb
fcompl
icebp
js
xchg
dec
dec
mov
sub
cmpsl
in
lea
ret
mov
aad
out
mov
inc
sbb
std
push
popa
mov
mov
sub
rcll
fisubs
test
push
pop
test
push
or
insl
sub
mov
xchg
aaa
mov
pop
mov
mov
mov
std
in
jg
mov
adc
jmp
pop
adc
adc
movsb
test
mov
das
mov
push
mov
mov
mov
test
in
imul
pop
rcr
test
xor
movsl
mov
mov
mov
xor
push
mov
clc
push
xor
incl
stos
jg
icebp
shlb
pusha
filds
mov
psraw
sti
lret
fcomip
not
out
iret
mov
inc
jmp
mov
or
mov
ret
lods
lahf
mov
fwait
pop
adc
popa
mov
repnz
pop
hlt
scas
and
out
jbe
xchg
in
sbbb
sbb
adc
jg
leave
aam
pop
sub
xlat
scas
push
xchg
push
and
mov
cmp
imul
push
repz
scas
xchg
mov
sbb
xchg
xor
fists
sar
jb
or
add
sbb
pusha
xchg
aas
outsl
mov
sub
rcll
jecxz
xchg
jle
or
dec
or
pushf
sub
arpl
push
rcrl
dec
fnstenv
hlt
mov
fs
cmp
push
daa
mov
iret
add
pop
lods
in
inc
scas
sub
add
les
fisttpl
fdiv
adc
dec
jae
aam
nop
popf
pop
iret
lcall
xchg
and
cmpl
adc
mov
or
repnz
fimuls
xchg
into
jo
dec
pop
fisubl
pop
fldcw
mov
pop
mov
nop
xchg
dec
in
xchg
xor
lods
repz
sbb
push
sbb
or
xchg
inc
jae
cmp
mov
xchg
fistpll
mov
ror
cmp
push
mov
fisttpll
xor
popa
sub
cmp
imul
jmp
in
cmpsl
sub
aas
fisubrl
adc
cmp
xor
iret
lods
mov
mov
push
sub
push
das
js
js
or
mov
pop
mov
in
daa
pusha
jae
jecxz
outsl
add
shrl
dec
pop
push
nop
add
push
xor
sbb
cmpsl
pop
outsl
mov
pop
sub
mov
mov
dec
out
cmp
jge
dec
lods
sbb
bnd
scas
fwait
push
add
push
iret
fs
or
and
push
repz
clc
sbb
mov
add
daa
scas
dec
sub
nop
in
addr16
xlat
aas
jae
fisubs
lret
jmp
insl
gs
inc
data16
into
inc
inc
sbb
cmp
ss
dec
inc
xlat
cld
xchg
mov
jle
xchg
jne
lret
dec
ljmp
push
pushf
xchg
cli
lret
xabort
fs
pop
cld
jne
jno
push
or
std
inc
shlb
xchg
inc
cmp
cld
or
ss
inc
add
inc
mov
jge
in
mov
sahf
sub
int
add
in
mov
in
loopne
imul
mov
lods
popa
jmp
xor
mov
cmovbe
enter
stc
out
in
dec
out
aad
xor
test
jo
inc
push
mov
gs
xor
sub
fidivs
out
lret
jp
js
in
cmp
jl
dec
adc
nop
add
mov
rclb
sub
mov
cmp
sub
push
mov
mov
push
mov
out
pop
jne
jge
sub
jae
mov
pop
inc
clc
cltd
pop
and
iret
mov
pop
fsts
jmp
cld
mov
jmp
flds
mov
jb
movsl
cmp
enter
out
hlt
repnz
fcompl
les
add
popa
shlb
jbe
sbb
jg
loope
loopne
or
mov
dec
or
int
add
pop
in
lds
push
pop
jge
in
dec
and
int3
mov
adc
dec
jp
out
scas
xchg
push
and
push
xchg
xor
or
pop
and
sti
fisubl
jecxz
movsb
shl
scas
jb
and
cmp
orl
or
mov
shll
jae
adc
mov
or
inc
jmp
dec
mov
xor
xchg
shlb
xor
fs
out
in
xor
adc
addl
dec
or
leave
push
and
push
loope
mov
mov
push
fmulp
mov
imul
sarl
aaa
add
int3
cmp
ljmp
sarb
xchg
popf
push
std
adc
shlb
dec
mov
push
lods
sahf
mov
sbb
movsl
dec
in
in
xor
mov
outsl
mov
adcl
pop
xchg
lahf
pusha
xor
cmp
add
scas
dec
adc
dec
frstor
xorb
fsubl
fcompp
ja
and
pop
and
dec
dec
sub
cmpsl
jb
dec
sub
xor
push
jbe
scas
dec
sub
jbe
adc
dec
pop
std
push
js
cmp
jae
add
xchg
pop
jae
sbb
xchg
ficoml
idivb
ljmp
int3
cli
fisttps
xchg
stc
pusha
adc
jmp
lods
xor
pop
dec
mov
xor
in
xchg
sbb
loop
xchg
mov
and
push
lahf
in
push
xchg
callw
sub
push
cmpsl
xchg
or
jl
xchg
insl
xlat
sbbb
jae
ss
icebp
enter
int
testl
dec
add
loopne
add
sti
imulb
fnstsw
cmpsl
jns
outsl
or
push
fyl2x
and
shrd
aaa
sti
int3
shlb
jns
inc
and
and
fsubp
xor
pusha
fldl
adc
push
fsubrs
cli
arpl
sahf
add
mov
les
mov
or
pop
pop
cld
jo
sbb
xchg
ljmp
jb
pop
jne
push
scas
sub
push
mov
test
ja
or
inc
loopne
xchg
pop
push
push
and
movsb
ss
dec
sahf
mov
push
pushf
jns
test
sbb
ret
roll
cmp
in
mov
jnp
jns
lret
test
mov
dec
pop
dec
out
mov
adc
jg
xchg
sub
sbb
push
ljmp
outsb
dec
fdivp
jae
mov
and
add
icebp
cld
mov
mov
inc
sbb
sbb
inc
mov
into
dec
push
aam
in
fnstcw
jb
jp
xchg
rcll
nop
nop
xchg
out
push
sbb
movsb
push
pop
add
inc
daa
adc
push
popa
mov
lahf
pop
dec
andl
sub
into
fmulp
popf
inc
and
icebp
adc
and
xchg
loope
icebp
int3
fwait
scas
xchg
dec
mov
push
test
sbb
imul
dec
sbb
or
adc
test
pop
icebp
nop
cld
push
pop
mov
loopne
or
sub
sahf
repz
push
negl
dec
jmp
outsl
pop
arpl
stc
sub
es
iret
mov
aaa
adc
pop
sbb
cli
mov
add
pop
fwait
das
pop
in
pop
jns
pop
loopne
movsl
hlt
pop
rclb
jnp
pop
gs
jecxz
inc
dec
insb
mulb
adc
mov
lret
std
jbe
mov
std
sub
xor
stos
adc
insb
cld
scas
fisttps
out
add
xchg
push
shlb
add
in
loop
or
jbe
push
sub
mov
mov
xor
jp
ljmp
fdivs
cmp
vmulss
push
call
rorl
mov
scas
rcrb
dec
cmp
fs
adc
dec
ja
dec
popa
outsb
jae
or
lcall
mov
cmpsl
inc
iret
dec
pmullw
leave
dec
adc
jmp
in
jno
jnp
adc
clc
push
mov
xchg
fmuls
cmp
leave
mov
dec
je
inc
sbb
hlt
out
xchg
adc
xor
inc
mov
jnp
adc
and
scas
shl
mov
arpl
cmpb
lea
leave
and
mov
test
pop
add
or
sub
and
mov
mull
xchg
fstpt
and
dec
lods
jb
cmp
sbb
loope
movsb
jnp
mov
dec
fwait
jp
add
pop
mov
add
and
bound
mov
lods
sub
xchg
enter
icebp
decb
pop
dec
outsb
mov
push
je
andb
filds
cwtl
mov
pop
push
stos
jecxz
adc
test
cli
addr16
cwtl
fbstp
sub
std
add
pop
in
outsl
idivl
mov
test
fsubr
jg
ret
mov
jns
inc
clc
dec
gs
push
std
popf
sub
sti
ss
mov
inc
dec
sub
cli
add
fadd
loope
mov
popf
in
and
int3
out
jo
aaa
fwait
jns
pop
mov
les
mov
pop
outsl
test
sbb
inc
aas
and
int
pop
push
inc
add
fpatan
stos
push
out
leave
adc
push
fistps
loope
mov
out
xchg
lock
pop
dec
idiv
xlat
cwtl
into
mov
dec
jmp
lahf
inc
xchg
pop
mov
jg
fidivrl
inc
xlat
cwtl
mov
cmp
push
mov
sbb
hlt
or
dec
cmp
cs
pop
les
xchg
adc
leave
adc
shrl
cmp
sbb
sbb
pop
hlt
push
aad
and
sbb
cmp
out
push
popa
stc
cmpsl
lahf
inc
sbb
lcall
inc
adc
xor
xchg
push
ljmp
cltd
adc
dec
rcrb
add
sub
clc
pop
loop
cwtl
mov
inc
xchg
dec
push
lahf
scas
outsl
xlat
mov
cmpsb
loope
lods
push
or
lret
ja
inc
int3
jae
stos
loopne
sub
pushf
sbb
outsl
mov
mov
sub
mov
adc
outsl
or
ds
or
leave
imul
test
push
jle
xchg
bound
lcall
or
inc
jo
jge
xlat
jmp
ja
inc
pushf
dec
mov
pop
stc
ffreep
pop
shrl
add
lea
fcompl
mov
and
and
repnz
mov
loopne
lds
repz
mov
or
add
fdivp
push
mov
ljmp
in
cmc
jnp
mov
push
out
add
and
insl
sub
and
hlt
loop
insb
scas
mov
jae
push
inc
mov
test
repz
inc
into
mov
mov
insl
mov
cmp
filds
add
loopne
pop
xor
lahf
leave
dec
cmp
mov
fwait
in
pop
gs
mov
movl
mov
gs
sti
xor
fcomip
xchg
sar
jno
fwait
pop
or
negl
popa
rcl
out
arpl
xor
fwait
pop
jno
ret
jno
cmp
dec
inc
sbb
mov
iret
mov
or
lret
lea
rcrl
in
dec
aaa
and
in
sub
imul
rcl
sbb
cmpsl
in
jne
cmp
mov
mov
and
icebp
fs
mov
in
push
pop
cmp
lock
adc
testb
aam
loope
mov
in
rcrl
add
ficoms
mov
imul
into
inc
sub
sub
jg
std
je
or
xchg
loop
ds
scas
bound
in
sahf
mov
cwtl
sarl
mov
inc
lods
test
cmpsb
inc
dec
shll
inc
and
dec
inc
and
cmp
insb
cmovs
and
loopne
out
repnz
icebp
push
jne
out
dec
dec
cmp
test
or
sahf
pop
call
inc
push
mov
jp
push
call
and
loop
push
sbb
outsl
adc
imul
movsb
sub
repnz
mov
sub
adc
cmp
jbe
sbb
xlat
add
jne
movsl
mov
or
add
imul
cmp
sbb
outsl
leave
sbb
ss
mov
pop
and
lock
push
ss
add
data16
cmp
sbb
inc
sbb
inc
das
aad
push
cld
arpl
push
movsl
mov
inc
sub
cmp
push
and
jge
push
inc
stos
dec
add
dec
and
jge
cmp
mov
adcl
out
jecxz
xchg
jmp
pop
fisttpl
cmp
and
mov
xor
test
shlb
adc
cmpsl
mov
add
imul
push
pushl
movsb
rcll
insl
fstps
rcrl
xor
mov
in
cmp
inc
test
je
push
sub
add
mov
test
mov
lahf
divb
adc
inc
loop
cli
sbb
scas
ljmp
cli
icebp
pop
pop
aas
xchg
out
shlb
mov
jmp
lds
xchg
int
js
imul
or
push
in
cmp
xchg
scas
shlb
pop
pop
sub
mov
orl
cltd
push
dec
cmp
xor
clc
icebp
push
cmpsb
not
arpl
jl
push
in
cwtl
cmp
sub
adc
cmp
out
in
les
rcrl
in
add
lods
stos
dec
mov
leave
bound
dec
add
daa
dec
das
pop
dec
dec
rolb
popf
mov
pop
cmp
sbb
sti
or
jno
outsl
daa
in
js
rorl
sub
test
enter
jg
lahf
outsb
pushf
xchg
shr
fwait
lock
dec
bound
outsl
and
mov
add
cld
mov
movsl
jno
cmp
outsl
sbb
push
hlt
push
sub
add
add
cmc
xchg
push
jne
push
sub
pusha
cmc
out
jge
lret
mov
xor
mov
dec
fildll
xor
iret
pusha
push
cltd
stc
cmpsb
sub
outsl
iret
into
lods
push
and
les
in
mov
ljmp
mov
call
jnp
or
dec
fisubrl
and
jbe
mov
fcmovne
imull
das
bt
inc
or
test
cmp
pop
jmp
jno
adc
pop
fs
add
cmp
inc
cld
repnz
insl
sub
dec
sbb
jg
push
adc
jne
frstor
xchg
mov
sbb
into
adc
and
insb
les
jo
mov
lahf
das
ss
std
add
dec
lret
ds
xchg
xchg
xchg
mov
inc
add
add
jns
or
mov
or
jg
scas
sbb
or
push
jo
test
addr16
add
push
inc
push
lahf
das
sti
sbb
sahf
stos
inc
cmp
rorb
test
popa
icebp
adc
pop
out
sbb
in
xchg
sbb
mov
or
pushf
shl
push
clc
test
cmp
fmuls
xor
out
pop
inc
dec
fisubl
lds
mov
xchg
rolb
pop
enter
je
nop
sub
or
testl
cmp
rolb
push
stos
push
es
push
mov
pop
inc
pop
mov
out
push
jge
scas
shrl
negl
xor
fmulp
std
fiadds
adc
sbb
mov
inc
and
mov
dec
xchg
scas
js
adc
hlt
cltd
jo
pop
cmp
and
xchg
cld
adc
test
sub
leave
iret
sbb
call
dec
in
sub
xchg
sbb
xchg
cmp
in
sbb
lods
and
ficoms
stc
cli
loope
and
sahf
int3
xchg
push
push
cld
mov
lcall
dec
cmp
repz
lods
enter
jmp
xor
ljmp
add
js
lods
iret
lock
ljmp
es
mov
cltd
pop
das
mov
pusha
arpl
test
cmp
cwtl
push
push
push
inc
imul
mov
jmp
lock
dec
ret
inc
mov
cmp
xchg
in
fmul
and
dec
xor
enter
add
or
mov
sub
ret
mov
xor
xchg
fcoml
mov
mov
mov
add
or
nop
in
adc
stos
and
bound
cltd
mov
lds
neg
mov
mov
lds
push
cld
xchg
rolb
push
jns
sbb
jle
out
test
cmp
cmp
mov
das
sets
inc
std
rcll
and
inc
and
dec
jbe
mov
xlat
or
mov
xchg
cli
push
test
ret
movsl
lds
mov
mov
jae
leave
dec
push
shl
cmp
dec
xchg
mov
aas
xor
stos
push
xlat
pop
fsubr
cmp
mov
ds
mov
push
or
inc
mov
les
cld
aaa
fsubp
mov
mov
inc
add
and
cmp
push
stc
push
add
sub
jp
pop
out
pop
out
out
adc
fwait
imulb
cmpsl
and
inc
mov
jo
lock
sub
jg
lea
cmp
clc
or
mov
mov
pop
cwtl
stc
sbb
roll
movl
arpl
aad
subb
and
cltd
xchg
mov
icebp
out
pop
sbb
jg
out
adc
addb
sbb
aam
je
push
cmp
repz
or
lret
mov
xor
scas
jge
ret
mov
les
sub
bound
dec
cwtl
inc
loopne
inc
xchg
shrl
add
test
or
loopne
sub
push
xchg
int3
adc
xor
or
inc
fimull
orl
inc
dec
pop
mov
int3
repz
ror
add
push
arpl
dec
jle
sbb
dec
and
ja
out
push
jmp
cmpsl
and
fbld
or
cld
push
daa
jle
inc
push
pop
push
imul
push
or
icebp
mov
ss
sarb
mov
and
fbld
icebp
repnz
push
xchg
cmp
xchg
std
ss
dec
or
shlb
mov
test
push
adcl
daa
adc
sub
xlat
out
outsl
nop
std
add
lods
addr16
rcll
enter
dec
xchg
cli
je
adc
arpl
ret
push
loopne
jecxz
mov
imul
fs
scas
jmp
int
sbbl
inc
out
popf
cmp
enter
in
imul
mov
call
mov
push
push
repz
adc
mov
adc
pop
sbb
inc
insb
inc
outsb
xor
jmp
dec
mov
lcall
popf
outsb
hlt
mov
loope
push
in
movsl
sbb
aad
aas
and
cmc
je
das
les
jo
decl
div
add
sub
out
xchg
push
jmp
mov
loop
test
push
inc
xchg
int3
mov
out
mov
jns
movsb
push
lret
out
into
dec
test
lds
inc
pop
jno
mov
hlt
cmp
mov
cmp
or
xchg
lahf
out
clc
mov
out
push
je
adc
xchg
imul
xor
addl
mov
cmpsl
fsubr
mov
lret
out
xorl
pop
pop
dec
inc
adc
cmpl
pop
mov
cwtl
scas
xchg
and
sub
lcall
cmp
cmp
xchg
pop
loope
xchg
fdivrs
xorl
std
jae
repnz
test
in
inc
sub
xor
fwait
je
imulb
mov
or
data16
pop
jb
int3
loop
negl
mov
ret
xchg
inc
jl
jmp
add
das
cmc
and
int
jb
in
and
mov
mov
movsb
pop
std
inc
popf
cmp
add
pop
mov
pop
xchg
pop
test
in
add
xor
sbb
push
test
jge
jne
and
int3
clc
lea
imul
daa
mov
dec
rol
adcl
insl
ret
int3
xchg
daa
js
imul
pextrw
inc
fnstcw
xchg
lcall
jle
add
sbb
adc
adc
repz
push
cmp
pop
push
or
ja
mov
icebp
aas
adc
xchg
push
in
and
sbb
mov
inc
sbb
pop
add
aad
xor
xlat
sub
aaa
std
outsl
icebp
fcomps
sbb
pop
ds
cmp
jb
push
sub
loope
xor
push
shlb
aam
push
or
or
add
jecxz
push
mov
cwtl
iret
repnz
xchg
subb
sbb
xorl
cmp
mov
xor
mov
inc
lret
scas
data16
add
test
adcb
rclb
out
and
lcall
cld
mov
xor
ret
xchg
pop
daa
push
std
jmp
sbbl
mov
pop
std
mov
pop
insl
ret
mull
sbb
mov
lahf
sub
or
in
outsb
push
lsl
and
mov
jle
jno
imul
dec
pop
lods
shr
xchg
sub
ret
jbe
xchg
xor
push
sbb
dec
lahf
cmpsl
pop
cmp
lods
ret
clc
add
cmp
aad
fidivrs
mov
pop
sbb
sarb
stos
sub
push
insl
arpl
cmp
je
adc
fstl
push
or
iret
clc
mov
lods
data16
sub
mov
sub
xor
fcmove
ds
out
fstpl
dec
arpl
xchg
loope
dec
ret
cmp
push
sub
mov
test
les
mov
mov
jb
sbb
mov
out
add
mov
in
cmp
sub
comiss
lret
in
sub
add
or
lcall
je
ljmp
xchg
push
add
dec
je
sub
mov
sub
movsl
cmp
mov
jno
adc
push
mov
and
xlat
insb
cmc
popf
push
addl
idivb
test
mov
push
push
mov
imul
cwtl
out
arpl
adc
cmp
mov
or
testb
xor
inc
fadd
pop
add
xor
cltd
push
pop
sbb
imul
pop
push
pop
into
dec
sbb
inc
stc
nop
xor
xchg
sub
inc
ret
mov
ror
cmp
fs
adc
add
pop
xor
jb
bound
pop
xor
lds
cld
push
mov
lock
push
inc
xchg
inc
mov
xor
gs
and
cltd
mov
fwait
or
and
mov
mov
push
cmp
mov
pushf
mov
incb
test
xor
pusha
pop
rcl
leave
inc
icebp
loop
cwtl
push
or
pop
addl
jno
jge
add
jg
idivb
push
in
aad
sub
arpl
jne
pop
pop
rcll
aam
mov
int
cmpsl
pushf
hlt
add
test
cli
sbb
jp
cmpsl
jns
jb
mov
sub
stos
xor
mov
mov
sub
outsl
cltd
call
cmc
out
scas
insb
sub
adc
mov
or
lods
sbb
cmp
les
mov
ffree
movl
jg
mov
sub
mov
mov
and
xchg
pop
xor
pop
in
push
into
icebp
cmp
cmpsb
or
lcall
push
rcl
pop
dec
push
mov
jl
mov
push
hlt
pop
rcll
std
bound
sbb
lcall
mov
jne
inc
mov
outsl
jnp
pop
outsl
inc
cmpsl
mov
cmpl
dec
and
cli
cmpsl
gs
ljmp
mov
cmp
lods
pop
sbb
nop
in
and
sbb
push
add
fwait
call
sbb
adc
and
pop
and
es
leave
xchg
mov
jl
adcl
jge
cmp
cmpsl
sbb
pop
repz
or
inc
sub
sti
xor
or
mov
movsb
push
adc
lods
mov
or
lods
jecxz
xchg
or
daa
dec
dec
pop
push
pop
mov
stos
mov
dec
js
scas
xchg
mov
xor
mov
shrb
jp
or
fstps
jecxz
aas
lahf
add
sti
clc
xor
adc
aaa
addr16
iret
rcll
inc
sub
in
inc
stos
fidivs
jns
dec
test
pop
jno
pop
jmp
cmp
clc
int3
fcmovne
jo
cwtl
pusha
ss
push
cmp
sub
loope
adc
cli
jge
sbb
or
jle
pop
or
push
repz
into
cmpsb
fldenv
jno
jg
jne
add
xor
cltd
pop
cmp
mov
aas
dec
jl
lahf
push
popf
data16
insl
xor
stos
add
xor
addb
or
iret
push
jle
add
pop
jae
add
fimull
outsl
popa
insb
cmp
into
adc
out
jl
es
pusha
imul
cmc
in
add
popa
fwait
fwait
pop
mov
sub
jg
pop
push
inc
fimull
sbb
loop
ljmp
xchg
xor
jg
cmp
mov
xchg
and
fs
out
pop
mov
pop
xchg
xchg
pop
mov
daa
xchg
in
adc
jl
push
cmpl
movd
xchg
nop
jmp
sub
mov
insl
mov
lods
outsb
mov
xchg
mov
mov
es
cmpsl
sbb
add
ljmp
mov
lock
xchg
dec
adc
daa
mov
xchg
nop
xor
fs
xor
cmp
insl
fs
xlat
je
aas
and
dec
cmp
dec
imul
outsl
cmp
insl
xchg
fsubl
pop
pop
fwait
out
rcr
jns
cmc
bound
rcr
repz
rolb
in
add
xchg
std
cwtl
cmpsl
js
nop
lods
int
fsts
loop
xor
dec
pop
aam
in
ljmp
cmpb
lock
cmp
cmp
mov
in
outsl
cmp
sbb
rcrb
stc
in
sti
cmp
jo
adc
je
mov
pop
or
cltd
pop
insl
addr16
bound
ret
neg
data16
sub
int3
pusha
xor
mov
mov
adc
loopw
cmp
aad
jb
jg
hlt
mov
sub
cwtl
clc
sbb
mov
xlat
jecxz
mov
sub
inc
cmp
sub
dec
testb
outsl
inc
into
or
mov
push
mov
or
and
push
pop
inc
loope
inc
inc
mov
testl
add
aas
stc
sbb
frstor
in
mov
jo
dec
movsb
aaa
cmp
cwtl
into
loope
loope
leave
mov
faddl
inc
cmc
mov
push
mov
jb
rcrl
stc
mov
push
and
rol
adc
push
sub
mov
lret
cwtl
fstpl
test
mov
dec
pop
sub
arpl
cmp
sbb
push
aad
testl
int3
xlat
xchg
dec
aas
xchg
xorl
loopne
push
mov
push
lahf
arpl
jmp
jne
sub
and
dec
adc
lret
enter
jge
je
add
jecxz
sbb
movsb
pop
test
mov
daa
ret
dec
ljmp
push
adc
lds
int
cmpb
push
and
add
and
sbb
out
in
popa
dec
dec
idivb
push
cmp
and
jge
sub
lcall
xor
bound
mov
mov
mov
es
fistpl
push
mov
in
jnp
add
push
cmpsl
fneni(8087
cmpsl
inc
outsl
lea
fwait
lods
into
mov
xor
lcall
mov
test
lods
out
mov
daa
scas
notb
xchg
in
out
add
daa
add
ljmp
scas
mov
outsl
mov
lcall
push
sbb
cmp
push
enter
inc
jecxz
sub
int3
stos
dec
push
aad
inc
cmpb
xchg
mov
mov
sarl
push
repz
dec
pop
aaa
in
loop
mov
mov
push
cmpsb
sti
or
js
mov
mov
test
stos
sti
cwtl
mov
xchg
es
mov
and
dec
sbb
stc
popf
insl
cmc
push
cld
ret
pop
mov
iret
roll
mov
std
and
ss
repnz
and
cmpsb
or
ljmp
jne
inc
fdivs
nop
jl
xchg
int3
ljmp
adc
mov
cs
loopne
fwait
stos
movsl
and
cmp
inc
pop
fs
sbb
sub
add
xorb
pop
mov
mov
lret
jne
pop
jnp
sub
mov
cmp
in
mov
fistpll
sahf
mov
and
push
pop
call
test
popa
mov
cmovae
mov
fsubs
sub
pop
xchg
dec
aaa
int3
cli
mov
inc
cs
and
xchg
push
imul
lods
out
lahf
out
pop
cmp
adc
fldl
cmp
inc
xchg
push
jbe
into
popf
repnz
mov
bound
push
push
stos
mov
ret
dec
xor
ja
push
inc
push
shll
jno
fbstp
imul
decb
fcmovu
scas
andb
pop
xor
ret
dec
dec
xchg
pop
cltd
inc
dec
push
dec
adc
or
jle
add
jecxz
and
sbb
andb
push
inc
iret
lds
cli
fcmovu
mov
sub
leave
cmp
and
add
or
iret
stos
mov
pop
xchg
sbb
das
cmp
xor
fisttps
and
cli
jbe
verr
cltd
lahf
cld
negl
pusha
add
push
out
xchg
xchg
testb
xor
or
add
and
aas
cmp
pushf
inc
inc
scas
fstps
lahf
out
inc
and
mov
inc
out
stos
xchg
ss
mov
xchg
push
aam
mov
imul
adc
lds
test
adc
mov
pop
les
mov
push
add
stc
cmp
aaa
inc
jmp
xchg
inc
sbb
fwait
xchg
rcrb
call
push
in
sbb
div
push
xor
loope
xchg
testl
lret
insl
js
in
cmc
mov
sbb
adc
fdivp
lahf
cmp
in
stc
adc
and
add
loope
out
jle
or
push
dec
sub
pop
mov
fldenv
jb
call
and
sti
les
adc
ss
mov
dec
lcall
out
sub
dec
outsl
enter
mov
pop
and
addl
pop
movsl
inc
nop
jae
cmp
mov
jmp
iret
popf
nop
pop
in
dec
cmpsb
outsb
push
lods
xchg
sahf
dec
jns
rcrl
into
sub
mov
loopne
or
xchg
push
dec
adc
fwait
insb
sub
sti
loop
inc
jg
outsl
mov
js
das
fs
dec
aam
dec
xor
shl
icebp
cmp
mov
lds
fdivrs
mov
nop
data16
lret
cmp
call
sub
ss
xor
jae
paddsw
fnstsw
pop
das
add
hlt
lret
jb
gs
sub
insl
xchg
shl
mov
fcompl
add
xchg
cmp
into
push
mov
mov
lcall
outsl
insl
sbb
pop
add
lcall
aaa
mov
jl
xchg
pop
and
inc
iret
dec
aad
lods
decb
sbb
xchg
lea
fcomp
inc
repnz
aas
outsl
fisttpll
pop
jno
pop
mov
or
add
dec
sbb
pop
jp
cli
or
adc
mov
inc
mov
mov
cld
sub
adc
int3
and
hlt
lods
xchg
inc
lahf
dec
jnp
insb
jg
dec
cmp
mov
xor
mov
or
in
pop
inc
push
inc
ret
sbb
gs
dec
jnp
mov
or
dec
lahf
test
fadds
sub
ficomps
stos
pop
enter
inc
incb
sub
xchg
inc
pop
ret
data16
jne
dec
pop
in
insb
xorl
adc
nop
js
fstpl
scas
cltd
add
xor
jle
fstpl
mov
sbb
or
push
loop
mov
dec
stc
adcb
aad
xchg
cmp
movb
mov
sbb
outsl
imul
sub
ds
or
jp
cmpsl
mov
jmp
add
lret
mov
lret
lds
jl
inc
ja
add
bound
jge
xor
lahf
push
lret
or
push
mov
aad
in
add
nop
out
wbinvd
mov
mov
mov
pushf
sahf
ja
ret
mov
cmp
test
push
pop
mov
cmp
ret
sbb
shll
sub
adc
sub
jb
shll
cmp
sub
and
push
cmpsl
sub
sahf
leave
mov
inc
push
jecxz
dec
enter
inc
mov
insl
lahf
push
sub
lods
daa
aam
test
adc
lcall
rcrb
or
test
xor
mov
shlb
pushf
sub
push
mov
les
pop
dec
inc
imul
pusha
mov
or
rcrb
sbb
insl
imul
scas
xchg
ror
mov
adc
loopne
daa
les
dec
mov
cwtl
imul
dec
dec
mov
icebp
cs
jle
sarb
sti
fisubs
sub
pop
xchg
cmp
mov
stc
ret
stos
lock
pop
sti
jno
mov
fisubrl
ljmp
mov
and
inc
push
sub
jmp
aam
adcb
das
icebp
scas
dec
out
es
or
outsl
pusha
cmp
fs
fadds
std
inc
pop
sub
inc
arpl
sub
xor
push
mov
out
je
sti
mov
xchg
iret
push
cmp
push
adc
jne
cltd
adc
mov
mov
lock
ret
mov
repz
xor
sbb
or
cmpb
inc
cmpsl
popa
mov
cmc
mov
mov
or
jp
std
ja
sub
in
es
iret
scas
fsub
jne
xchg
pop
inc
out
xchg
movsl
cltd
mov
mov
out
adc
or
sbb
push
dec
ret
mov
test
jbe
iret
mov
stc
pop
adc
pop
stos
jle
sar
daa
ret
icebp
sbb
sti
or
xor
push
mov
sub
adc
xor
movsb
push
stc
pop
aad
pop
mov
sbb
movsb
aam
or
cmp
mov
leave
rcl
lods
out
add
push
adc
add
push
andb
out
mov
je
rcr
js
push
stos
lcall
mov
mov
jle
add
jle
hlt
inc
add
mov
popf
cmpsl
lock
or
aam
ja
mov
jo
cmpsl
movsl
das
jecxz
inc
jmp
push
stos
repnz
dec
mov
scas
movsb
push
inc
cmp
movsl
sub
movsb
test
repnz
sbbl
je
xor
inc
dec
lods
jns
inc
inc
std
std
out
or
lret
inc
mov
cmp
inc
push
mov
lods
andl
add
xor
cwtl
out
cmpsl
fcoms
popf
out
hlt
pop
in
das
mov
mov
jbe
mov
xor
ror
and
insb
sbb
xor
cmc
adc
shl
scas
add
ret
fidivrs
jnp
dec
push
xchg
stos
out
or
lret
push
shl
lret
out
xor
and
fstpt
sbb
shl
xchg
inc
push
push
stos
mov
in
pop
push
push
mov
xchg
aad
cltd
pop
daa
jmp
sub
sbb
aaa
mov
adc
add
xchg
fs
mov
xor
pushf
sbb
aas
mov
jnp
arpl
jg
cmp
cwtl
cmp
push
test
lods
lahf
jl
rcll
push
xor
ss
dec
repnz
cltd
pminsw
jle
push
mov
mov
fwait
push
fisubrs
pop
pop
pusha
jmp
pusha
push
jmp
scas
iret
mov
repnz
pop
add
std
mov
movlps
sbb
test
fcoms
jmp
and
xchg
sbb
cli
addb
shlb
jb
in
push
xchg
push
in
mov
jg
mov
cmc
or
repz
mov
or
aad
jg
mov
push
jp
jmp
mov
loopne
fisttpll
ficomps
int3
sahf
mov
cmpsl
adc
xchg
std
lret
sub
in
pop
popa
mov
das
pop
flds
push
inc
aas
out
dec
lahf
out
xor
insb
data16
pop
add
jb
pop
inc
call
xchg
inc
and
cld
pop
lret
push
xchg
test
outsl
dec
push
mov
pop
dec
push
incb
call
pop
notb
cltd
mov
cmc
pop
mov
cmp
lea
adc
mov
dec
js
dec
xor
scas
inc
stc
cmpsb
xchg
fnsave
push
ds
lret
mov
jecxz
outsb
adc
mov
sub
call
push
std
sub
push
in
xchg
insb
inc
nop
outsl
mov
cmp
pusha
pop
adc
jns
das
jns
pop
pop
ss
sbb
out
cmpsl
mov
jle
inc
sub
cli
pushf
pop
pushf
out
xorb
xchg
sbb
jae
cmp
arpl
pushl
shll
enter
es
mov
shll
fistpll
lcall
pop
adc
loope
sbb
out
cmpsb
mov
les
or
adcb
clc
cs
shll
pop
mov
fwait
sub
cmp
cmp
dec
xchg
mov
cmp
lods
lds
jbe
sub
sub
shlb
in
add
dec
add
push
cmp
test
mov
cld
cltd
push
imul
push
inc
fs
dec
cmp
xchg
xchg
lret
jmp
lds
push
clc
sub
test
aad
xchg
mov
xor
jmp
clc
xchg
cmp
jbe
sbb
mov
push
adc
and
mov
arpl
or
jne
arpl
xchg
cmpsb
iret
into
mov
fistps
dec
fisttpll
sub
ret
and
test
je
stc
push
jecxz
ja
xlat
and
das
cmpsl
bnd
cmp
imul
lret
aam
mov
jg
push
pop
add
out
add
fcom
cli
push
xor
and
test
arpl
stc
mov
jl
inc
or
push
cs
sbb
push
xchg
test
inc
sti
scas
scas
xchg
lret
idivb
mov
lea
mov
xchg
out
adc
mov
jecxz
insb
shr
mov
shrb
dec
cmp
loopne
mov
sbb
or
repnz
xchg
mov
sub
test
insb
xor
into
add
addb
lods
cmp
inc
inc
jbe
mov
or
leave
xchg
jns
cmp
jbe
in
xchg
lds
jns
cwtl
mov
mov
cmp
les
xchg
sub
sbb
sub
sub
in
scas
sbb
jne
out
lcall
mov
jmp
test
jmp
add
ret
fsub
je
mov
or
dec
xchg
rcll
sbb
pushf
sbbb
lahf
mov
jns
inc
cmp
pop
xchg
fwait
clc
jno
lods
aad
or
xor
lret
in
fistpll
out
fdivs
cwtl
cmpsb
hlt
jg
cli
xor
adc
out
dec
mov
cltd
aaa
push
fwait
addl
in
mov
xchg
mov
pop
xchg
pop
mov
add
scas
cs
call
jbe
repz
jg
xchg
in
jne
js
cltd
push
inc
xchg
arpl
es
xchg
movsb
movsb
ffree
nop
bound
push
das
loopne
jns
jge
js
cmp
adc
rorl
and
insb
notb
push
daa
stos
loopne
leave
xor
rorl
inc
inc
int3
xor
mov
mov
push
inc
jae
cmpsb
in
fs
mov
sub
js
pop
call
or
jb
inc
out
xchg
movsb
adc
es
cmp
negb
lret
mov
adc
push
stos
test
sbb
or
xor
cmp
adc
fwait
mov
dec
insl
mov
sbb
add
mov
push
sub
jb
dec
hlt
add
and
push
sbb
push
xor
aad
test
lds
shl
xchg
stos
lods
add
mov
cmp
rcrb
in
arpl
loope
enter
adc
push
call
pop
inc
outsl
jle
sti
jmp
icebp
or
jl
sti
xchg
sahf
pop
and
fxch
aaa
mov
pop
fcompl
adc
jae
and
mov
and
out
push
and
mov
dec
imul
add
add
hlt
adc
ror
mov
shr
jmp
push
inc
mov
inc
aaa
mov
add
add
shrl
and
clc
popf
dec
pop
arpl
jbe
ret
subl
out
push
jg
inc
push
addb
in
jno
pop
dec
push
pop
xchg
adc
add
ret
aam
movsl
push
push
stos
shrl
inc
movsl
pop
sbb
or
and
popa
dec
dec
push
jo
aam
cwtl
add
push
push
inc
rorb
movsl
adc
inc
mov
adc
jle
outsl
mov
pop
sub
push
dec
and
test
mov
and
inc
pop
cmc
leave
into
scas
adc
div
mov
lods
sbbl
and
cmp
gs
pop
rcrl
int3
test
lods
ret
clc
inc
pop
popf
out
leave
imul
push
std
or
push
call
repnz
jg
pusha
aas
pusha
icebp
sub
lret
add
out
mov
mov
lock
jg
inc
or
fbld
jp
xor
lcall
in
shlb
cmpsl
xchg
jne
aam
mov
lds
shrl
fisubl
cwtl
xor
adc
cmp
lcall
mov
filds
out
push
jne
shrl
stos
add
out
push
jb
sub
cmp
pop
mov
mov
sub
cmc
mull
xor
jnp
adc
push
jp
xor
jl
dec
mov
push
add
sti
js
fsts
repnz
cmpb
push
push
scas
daa
or
or
loopne
adc
or
out
or
lods
dec
cmp
xchg
push
subb
lahf
cmc
pop
inc
mov
out
fimull
jmp
nop
or
pop
mov
dec
repnz
xlat
and
xorb
or
xchg
dec
in
pop
or
sub
sti
imul
dec
dec
popf
loope
dec
jo
fimull
and
pop
in
or
and
stc
in
pop
fists
shll
cltd
mov
in
dec
mov
push
push
cmp
outsb
push
pushf
mov
and
push
xor
in
hlt
test
imul
dec
sub
mov
pop
push
mov
add
aaa
lret
into
aaa
adc
cmp
stos
in
pop
mov
shlb
xor
or
pusha
ja
dec
or
cmp
lahf
and
sbb
fisttpl
jmp
xchg
in
mov
push
rcrl
jne
dec
lret
icebp
pop
push
cmpsb
imul
out
call
pop
hlt
mov
iret
mov
xchg
test
pop
jns
adc
jle
cli
ja
lds
sbb
xchg
xchg
jge
aam
dec
je
and
es
xchg
push
xchg
or
pop
mov
hlt
fdivs
push
lret
mov
mov
fmul
aam
and
out
insb
test
stc
xor
dec
insb
or
scas
xor
dec
mov
xchg
outsb
mov
pop
sarl
sub
leave
pusha
sub
in
inc
cmp
cmp
sbb
rol
das
ss
aam
or
jnp
mov
xchg
sub
and
lret
mov
and
out
rorl
and
shrb
cmpsb
pop
cmc
aaa
push
int3
subl
int3
cmp
int
pop
dec
push
jp
dec
pop
jl
xchg
xor
push
push
xchg
jmp
out
cmpsb
sbb
movsl
mov
or
inc
scas
int3
lret
add
aad
add
mov
sbb
mov
mov
movsb
xchg
dec
add
bound
adc
jae
cmp
sbb
mov
jno
pop
sub
xchg
dec
lods
inc
stos
xchg
lods
sahf
mov
call
xor
jecxz
into
mov
mov
lcall
rol
in
jle
ss
mov
pop
mov
test
add
lds
jl
dec
inc
lret
mov
shlb
mov
mov
in
dec
sbb
mov
sub
push
xchg
out
ret
shrb
push
and
or
xor
mov
mov
cmp
pop
xor
ljmp
int3
and
xor
in
pop
aas
shrl
xlat
mov
popf
pop
cli
or
ljmp
push
sub
pop
sbb
cmpl
mov
add
or
mov
in
lcall
xor
mov
loop
fs
cmp
scas
sarb
ja
mov
insb
fs
or
add
xor
or
ret
rdtsc
fiaddl
pop
push
xchg
or
pop
dec
mov
ss
mov
mov
cwtl
mov
xor
dec
dec
xorb
sbb
lods
xchg
scas
in
xchg
lds
repz
das
adc
int3
inc
dec
mov
lahf
aam
jecxz
mov
je
fwait
cmp
out
sbb
or
outsl
push
js
mov
or
scas
or
or
mov
test
pop
add
or
xchg
dec
and
jge
fiadds
cmp
fs
outsl
dec
or
rcrb
ret
addb
lret
cmc
cmp
fwait
enter
push
cltd
or
loope
fldenv
sub
push
or
popa
in
push
scas
hlt
or
mov
fucomi
outsl
pop
jp
mov
stos
mov
jne
gs
aaa
mov
enter
imul
push
imul
cmpsl
push
sbb
ds
in
cmp
pop
sbb
jp
dec
test
sbb
stc
pop
loope
dec
out
mov
sub
pop
popa
pop
out
inc
mov
fsubs
prefetchnta
adc
push
jge
or
and
pop
jge
std
in
insl
cmp
or
jg
scas
aaa
push
mov
jle
mulb
pusha
stos
mov
sbb
repnz
jne
in
and
stos
int
sub
sbb
add
mov
imul
xchg
in
pop
scas
pop
shl
fldl
aad
addl
inc
inc
fstpl
sahf
pop
testb
retw
lea
sub
push
mov
loopne
dec
roll
out
nop
mov
les
cmp
das
jp
iret
jecxz
lret
ss
shr
das
cmp
loopne
adc
sete
adc
repz
pop
subl
sbb
push
mov
pop
mov
rcl
iret
cmpsl
mov
out
sbb
cmp
xchg
mov
popf
xor
jnp
mov
or
and
jl
xor
jecxz
fstpl
data16
mov
mov
andl
mov
xlat
push
sub
scas
jecxz
push
jl
pusha
lods
lcall
cli
xor
test
sub
push
pushf
dec
xchg
jo
mov
pop
dec
mov
and
cld
sbb
popa
push
and
xchg
cmpsb
mov
loopne
sbb
pushf
je
aaa
mov
cmp
or
mov
or
movsl
ljmp
scas
stos
or
push
jmp
rcll
jp
lds
pop
lock
xor
pop
test
pop
notb
sbb
ja
dec
ret
adc
filds
leave
mov
bound
decb
stc
xor
outsb
mov
mov
shr
cmp
mov
in
sub
fistl
xchg
pop
xchg
movsl
and
mov
out
xlat
out
pop
jmp
mov
dec
inc
outsb
fisttpl
shr
jbe
imul
jmp
xchg
aaa
sbb
inc
aaa
dec
and
in
dec
sar
out
pop
pusha
loope
sub
addr16
imul
jp
cmpl
xor
hlt
out
mov
inc
inc
sbb
fucomp
xlat
shl
mov
addr16
or
cmpsl
jmp
lret
movsl
or
out
in
idiv
sti
jl
inc
xlat
aam
gs
int3
mov
mov
call
inc
lods
xchg
jnp
mov
cli
lds
ds
xor
dec
jns
mov
dec
enter
shrb
sbb
push
jo
cli
sbb
pop
ds
sub
jnp
ljmp
add
or
xor
pop
mov
sub
mov
push
out
stc
in
pop
inc
ljmp
jnp
out
mov
sub
repnz
inc
and
push
mov
testl
std
cltd
lret
sbb
push
cmpsb
add
jbe
rclb
mov
xor
lods
adc
mov
jp
lds
out
jmp
jmp
cmp
inc
mov
dec
dec
push
and
mov
pop
push
ror
test
mov
add
popf
sbb
pushf
mov
into
int3
mov
pop
pop
mov
ret
pop
xor
stc
aam
mov
mov
add
movsl
mov
out
dec
stos
in
and
xchg
push
es
and
sub
lods
fs
dec
imul
xchg
mov
xorb
shr
scas
mov
stos
inc
mov
outsb
mov
mov
and
and
fwait
subl
add
dec
xchg
push
das
ss
mov
inc
pop
out
sub
adc
ret
sti
inc
cmpsb
aam
ret
aad
int3
lods
push
xlat
mov
daa
popf
call
scas
add
cld
test
inc
testb
jp
xor
ja
pop
cmp
mov
mov
add
cmc
sub
insb
imul
jl
in
pop
pop
push
mov
mov
call
inc
push
inc
addr16
mov
insl
push
fcoms
xchg
push
shll
addr16
divb
xchg
cld
pop
add
test
adc
cmp
ret
pop
dec
push
pop
addr16
adc
adc
stos
mov
cltd
jae
adc
test
and
mov
inc
and
add
cmc
mov
xchg
jbe
inc
rep
push
ss
out
mov
jge
jl
dec
aas
push
filds
xor
bound
lock
add
and
or
sub
imul
cmp
or
imul
pop
push
jns
repz
mov
xlat
outsb
cmp
lea
jmp
pop
xchg
xchg
mov
add
mov
das
lret
jbe
arpl
sbb
push
stc
stc
roll
add
imul
xlat
dec
jecxz
dec
pop
dec
cmp
xor
aaa
mov
rcll
sti
inc
jp
cwtl
and
adc
shll
mov
lcall
dec
loopne
fidivrs
cmp
roll
dec
lock
pop
in
shll
scas
mov
pop
mov
stos
mov
and
cmp
dec
and
xor
xchg
pushf
or
dec
add
mov
cmp
mov
pop
shrb
adc
cmpsb
mov
out
call
push
adc
xor
es
push
jb
mov
cli
dec
sub
dec
fwait
lea
jb
jl
mov
push
rol
repz
lea
nop
jno
jnp
pop
mov
add
out
dec
cli
mov
jns
cmc
mov
iret
inc
loope
filds
add
and
cmp
xor
xchg
push
in
cwtl
es
std
mov
inc
sti
or
enter
jge
sbb
lret
ret
sbb
aam
jmp
hlt
xor
movsb
dec
xor
mov
lea
cmp
mov
mov
add
test
dec
add
adc
add
outsb
xchg
int
pusha
xlat
aam
jl
adc
or
and
cmp
mov
push
movsb
pushf
and
rorl
mov
xchg
aaa
cmpsl
xor
mov
lods
aas
jae
out
int
cwtl
dec
in
jl
fcmovu
inc
cmp
lcall
push
negb
andb
jl
xchg
stc
icebp
mov
jle
imul
data16
frstor
mov
mov
out
mov
mov
mov
jecxz
and
jne
fs
pop
mov
jg
pop
jmp
sub
stos
xor
fiadds
icebp
cmpl
in
and
or
int
mov
cmpsb
daa
add
outsl
mov
push
int
das
pop
imul
xchg
es
pop
cmp
mov
mov
cmp
jmp
aaa
sub
xchg
scas
fs
fiadds
mov
cmp
jmp
cmp
repz
ficoms
mov
sub
sbb
outsb
iret
ret
mov
mov
pop
dec
popa
cmp
sub
mov
sbb
in
sbb
fisubs
movsl
xchg
mov
mov
xor
inc
imul
xchg
imul
rcrl
sbb
inc
imul
int3
scas
mull
lret
dec
xchg
divl
pop
jg
xlat
push
mov
add
jp
add
pop
pop
inc
scas
and
shll
add
inc
mov
loope
leave
mov
inc
jne
jl
imul
ret
push
push
pop
mov
test
inc
out
mov
inc
out
fbstp
fadd
jb
jno
jo
xchg
xor
mov
hlt
jnp
clc
xchg
aam
inc
jbe
or
adc
scas
clc
pop
enter
mov
and
add
cmc
data16
and
cmp
out
test
ss
pop
sarb
fdivrs
jo
push
cmc
pop
cmp
les
rol
sbb
movsb
aad
in
cmp
movb
aad
sub
fstpl
push
rclb
jle
loop
sbb
movsl
push
js
cmpsl
dec
and
lods
push
dec
cmp
aas
jbe
insb
pop
inc
scas
lahf
movsl
jg
ljmp
sbb
rclb
shl
scas
lds
push
int3
cmp
stos
xor
xchg
sub
test
push
adc
loop
pinsrw
leave
in
in
pop
or
insb
dec
dec
in
lret
mov
push
push
mov
add
stos
and
sbb
dec
dec
xor
fisubrl
fisubl
jbe
jne
jo
shlb
in
xchg
mov
divl
cmpsl
pushf
hlt
or
dec
in
rclb
iret
ret
scas
sbb
xchg
into
movsl
mov
inc
and
call
in
mov
cmp
pop
and
popf
xchg
fsubrl
cli
xor
mov
out
jbe
pop
dec
sbb
inc
mov
sub
mov
movb
xlat
jne
pushf
mov
es
pop
dec
push
sub
loopne
mov
sub
shlb
push
adc
cwtl
lahf
push
std
xor
mov
push
jne
xor
cmp
in
call
das
in
rol
xchg
push
mov
cwtl
cmp
scas
pop
pop
daa
insb
pop
aam
mov
inc
sbb
aas
out
das
jmp
pop
popa
int
sti
xchg
or
scas
cmp
scas
adc
in
insb
xchg
sub
pop
hlt
test
mov
subb
jbe
out
mov
scas
or
pop
xor
fsubrs
jne
icebp
push
sub
lds
cmp
stc
push
push
inc
js
jbe
inc
inc
mov
and
sub
rorl
and
mov
push
inc
jns
ret
scas
bound
mov
je
rcr
or
out
sbb
mov
outsl
out
jns
test
mov
scas
stos
and
inc
pop
xchg
pop
xor
int3
inc
data16
pop
mov
dec
outsb
out
lahf
mov
cs
stc
fisubl
lea
pop
in
pop
push
clc
cmp
mov
movsl
aas
rcll
inc
inc
xchg
jmp
notb
outsb
stos
repnz
adc
adc
or
stc
std
xchg
cmp
popf
out
popa
push
stc
xor
mov
and
xor
jg
push
inc
mov
add
lcall
movsl
dec
scas
clc
rorl
scas
outsl
shll
pop
jge
rcl
js
push
sbb
mov
mov
push
pusha
push
out
mov
mov
sti
and
xorb
mov
xchg
mov
rcr
push
fisttpll
jl
fcoml
push
inc
jb
shll
pop
shrl
cwtl
cli
int
aaa
xlat
add
test
and
push
dec
mov
pop
mov
pop
cli
insl
xchg
lret
hlt
add
or
fdivl
insb
mov
or
aad
mov
sbb
inc
sub
mov
pop
cmpsl
cwtl
dec
int3
ds
clc
imul
leave
outsb
daa
clc
fildl
jo
xchg
and
push
pop
nop
push
xor
or
cmpsb
inc
push
sbb
icebp
jns
add
xor
hlt
sub
mov
fsubr
insb
cs
pop
inc
pop
mov
push
repz
adc
xchg
adc
sbb
loope
inc
fidivrs
mov
repnz
lcall
out
add
dec
mov
movsb
xchg
test
mov
pop
daa
and
int
sub
xor
dec
xor
out
xchg
je
or
jmp
jge
adc
add
insb
and
mov
pop
andl
add
arpl
xchg
xor
pushf
inc
or
daa
les
sbbl
out
dec
lret
orb
add
ret
shrb
ds
mov
fsubrp
out
and
cld
lods
jb
shlb
icebp
jnp
stos
add
xor
mov
mov
xchg
cltd
movsl
mov
push
adc
fwait
pop
add
out
lret
xchg
cmp
add
shll
pusha
sbb
xchg
mov
mov
sbb
loop
dec
or
jl
insl
fisubl
popa
jmp
test
ljmp
fldl
cmpsb
jbe
cmpsl
in
sub
mov
cld
mov
lods
jg
enter
pmuludq
cmp
movb
fstpl
es
or
or
pusha
inc
sarb
jne
loopne
call
scas
cmpsb
pop
dec
enter
jbe
lods
es
push
pop
jnp
aas
jbe
add
int
mov
pop
out
mov
lds
ret
push
fs
lods
out
xchg
scas
stos
add
or
cli
mov
clc
adc
fs
xchg
jbe
std
outsb
loop
fs
aas
test
iret
insl
in
dec
and
fisubl
inc
jle
push
or
lods
add
jbe
mov
ds
vmaxsd
dec
adc
dec
jge
nop
es
mov
popa
or
icebp
dec
subb
enter
sub
or
fldt
cmp
mov
pushf
subl
jl
cmp
sub
xor
sub
push
rep
mov
fwait
xor
xchg
and
push
pop
cmp
sub
lock
pop
arpl
dec
mov
jne
les
lea
xlat
loop
iret
add
sbb
icebp
xchg
cmp
test
out
pusha
lahf
or
les
cmp
iret
lcall
sub
outsl
sti
xor
jecxz
out
stos
ret
fdivrp
in
inc
push
sub
mov
cmp
fistpl
scas
push
push
dec
cs
xchg
jo
ss
pop
movsl
outsb
pop
add
lcall
pop
cs
fcomps
fs
push
mov
aad
imul
fstpt
loopne
fwait
scas
aaa
sbb
or
pop
inc
call
imul
sub
mov
in
push
xchg
add
mov
outsb
inc
movl
pushf
mov
or
pop
push
enter
sub
mov
jmp
cmpsb
push
out
pop
test
adc
jne
in
jmp
sbb
in
mov
sbb
clc
dec
add
out
ds
jns
stos
outsb
sti
mov
mov
enter
push
cmp
pop
std
jno
and
je
dec
mov
std
xor
xchg
xlat
push
cmp
push
dec
inc
xchg
xor
outsl
clc
enter
gs
enter
jecxz
leave
sub
mov
fidivs
lods
sbb
cmpsb
scas
repnz
xchg
pop
hlt
imul
jne
scas
fwait
inc
pop
je
dec
dec
push
ret
inc
dec
mov
mov
lods
jno
loop
rcrb
push
daa
sbb
xchg
sub
inc
and
testb
mov
sbb
push
std
movsl
xorl
and
aas
clc
dec
pop
jge
sti
sbb
push
cmp
cmc
jecxz
cltd
shlb
xor
cmc
xchg
adc
sbbl
daa
out
cld
jmp
dec
jae
xor
add
pop
mov
scas
xor
dec
jno
inc
into
lock
cltd
adc
jno
cmp
daa
and
push
mov
sub
or
dec
xchg
mov
mov
mov
push
mov
and
mov
icebp
sbb
icebp
pop
andl
mov
dec
mov
push
push
out
shrl
std
xchg
fldt
subl
adc
inc
insb
pop
xchg
loopne
mov
addr16
add
push
or
fbld
lret
es
xchg
cli
lret
add
sbb
popf
inc
sbb
cmp
pop
cltd
clc
nop
inc
stos
lea
push
mov
mov
adc
or
push
lds
ljmp
int
loop
or
pop
loop
int
fcoml
adc
insl
push
cmp
dec
push
sbb
inc
mov
add
sarl
cmpsl
leave
mov
sbb
dec
int3
insb
mov
xor
and
lock
popa
imul
gs
and
xchg
dec
jns
leave
jae
gs
arpl
dec
fldl
lea
xor
fstps
inc
and
insl
jne
into
mov
mov
dec
movsl
cli
vhsubps
push
add
insl
test
addr16
popf
or
lret
popf
mov
add
jecxz
jecxz
sbb
outsb
shr
jecxz
out
xchg
in
das
adc
dec
ja
push
sub
jmp
out
inc
sbb
push
insb
into
add
lcall
mov
sbb
ret
das
in
pop
incb
pop
push
lods
sbb
fstl
scas
popa
mov
pop
das
mov
popa
adc
out
inc
data16
mov
lock
sub
cmp
clc
mov
ret
pop
fadd
js
outsb
mov
xor
aad
xor
mov
aas
sub
push
mov
loope
xchg
repz
or
movsb
fstpl
ds
mov
lock
lock
jg
jge
cmovs
push
scas
push
or
inc
sbb
jae
push
jnp
aas
dec
adc
aaa
dec
mov
push
add
cs
mov
or
cld
shll
leave
fmull
push
mov
sub
out
shll
lahf
dec
xchg
lock
push
push
jo
iret
sbb
mov
xor
lahf
jnp
int
lcall
fadd
sbb
mov
popl
xchg
clc
mov
jae
scas
movsb
sbb
push
xorl
jp
xlat
pop
push
mov
inc
mov
es
cli
add
xchg
cmpl
aad
test
push
pop
xchg
or
jp
jno
and
call
push
mov
je
add
cmpsl
or
out
xchg
ljmp
mov
pop
sub
lcall
mov
mov
mov
addl
cmpsb
gs
dec
dec
clc
push
push
jecxz
push
pop
std
mov
ret
mov
xor
shr
sbb
mov
or
mov
out
loop
cmpsb
mov
dec
shll
jno
ja
subb
mov
xor
mov
push
aas
data16
enter
push
sarb
pop
xor
jnp
outsb
adc
arpl
push
and
daa
dec
or
inc
pop
popl
jecxz
dec
out
push
aad
or
mov
cmc
cmp
lods
dec
xor
sti
pop
add
dec
les
push
stos
rcll
lret
pop
xchg
inc
mov
fwait
shlb
outsl
outsl
repnz
add
sub
mov
adc
jnp
aas
sub
ret
lret
sbb
mov
addr16
mov
stc
push
scas
into
fistps
inc
popa
das
dec
xor
or
fsubl
mov
mov
into
aaa
pop
pop
xor
or
sbb
sub
sbbb
out
imul
mov
loop
roll
sub
sbb
repnz
enter
cld
sbb
loopne
nop
cmpsl
imul
lock
mov
adc
push
fisubrl
or
ljmp
pop
cmp
mov
jecxz
xor
sahf
jb
out
add
mov
pop
ss
loop
jecxz
cmp
out
out
cmp
add
insb
mov
je
rep
pop
rcrb
ss
jmp
sub
lret
pop
mov
es
xchg
cli
cld
mov
xor
movsb
iret
js
xor
dec
imul
pop
pop
cmp
xchg
and
mov
mov
mov
jbe
adc
call
mov
jbe
mov
push
fisttps
movaps
fdivr
inc
push
mov
in
repnz
cmpsl
into
movsl
repnz
daa
or
div
fistpl
xorl
xchg
jb
lea
cmpsb
cmc
enter
pop
dec
in
daa
push
push
mov
out
mov
adc
xchg
cmpsb
shlb
mov
sti
xor
mov
repz
pop
in
inc
call
cltd
repnz
jmp
mov
adc
repz
mov
iret
lahf
rol
inc
mov
jmp
or
push
sbb
hlt
pop
sarl
mov
mov
mov
or
sarl
dec
addr16
pop
sti
push
xchg
inc
call
or
in
fildl
push
test
call
movsb
xor
cmp
nop
cmp
sbb
pushaw
pop
daa
insb
pop
inc
adc
push
cli
stos
pop
xchg
cmp
jg
pop
adc
aas
mov
mov
and
cmp
lods
or
cmp
loopne
lods
das
cmc
aas
roll
mov
andl
inc
mov
inc
and
dec
ljmp
jl
jle
push
outsb
aam
mov
mov
or
fimull
jl
cli
inc
mov
jne
or
add
jl
int
daa
loope
xchg
mov
jb
cmp
sub
outsb
mov
insl
mov
out
adc
jns
mov
movsl
pop
mov
inc
cmp
orb
or
push
loopne
mov
push
push
int3
popf
inc
cmp
cld
or
out
and
and
daa
mov
jge
jbe
xchg
jge
stc
pusha
push
repnz
outsl
sub
js
jg
ss
sti
dec
and
jb
add
cmp
gs
and
inc
movsl
pop
inc
sahf
mov
mov
sbb
xor
mov
pop
xchg
leave
loope
call
ja
lods
mov
xchg
popf
jp
imul
sbb
add
push
sahf
dec
push
jmp
jmp
pop
fstpl
mov
xlat
fucomip
mov
icebp
xlat
ret
ja
imul
xchg
fs
insb
lahf
je
test
dec
jmp
lds
dec
adc
shl
and
mov
add
xor
popa
xchg
jge
mov
lods
imul
ret
xor
add
outsl
and
orl
pop
mov
mov
inc
ljmp
ja
xchg
stos
shlb
mov
das
mov
cmp
add
dec
xor
or
xchg
jmp
jns
hlt
das
dec
cmpsb
mov
dec
cmp
adc
jg
daa
xlat
dec
cs
sahf
cmpsb
jle
mov
lcall
shrb
xchg
mov
sbb
popf
dec
notb
out
push
mov
jb
inc
jno
cli
mov
cmp
bsr
int3
adcb
ror
cmpb
in
lahf
mov
data16
inc
out
pushf
push
in
jnp
pop
inc
jae
and
aam
inc
pop
dec
add
push
jno
fistl
ret
sub
pop
daa
sub
jns
pusha
jb
sub
bound
push
cmp
sahf
xor
orl
fcompl
in
mov
jns
mov
pop
out
test
push
cmpsl
enter
scas
pop
push
loope
ljmp
jp
and
icebp
lahf
jmp
jle
mov
xchg
test
mov
dec
aad
xchg
cltd
xchg
arpl
xchg
aad
daa
cmc
bound
lods
stos
xor
or
or
daa
test
cmpsl
idiv
mov
int
mov
add
ret
and
shrb
pop
lahf
inc
sbb
and
xchg
sub
adc
daa
dec
push
xchg
pop
fadd
or
fs
sbb
nop
pop
xor
orl
mov
and
movsb
push
jg
mov
push
les
or
iret
dec
orl
filds
insl
and
notb
insb
lods
cmpsb
push
insl
shlb
ficoms
sahf
cmp
and
push
adc
adc
or
ret
int3
mov
movsl
xlat
into
lds
add
enter
inc
ss
xchg
loopne
cmp
lcall
add
mov
xchg
lcall
inc
shl
push
in
fidivrl
xor
test
adc
les
push
inc
rcrb
ret
push
fisttps
aas
pushf
push
xor
insb
ja
inc
dec
dec
cmpsl
mov
or
mov
fs
dec
push
xchg
mov
into
sub
mov
cmp
and
es
pop
push
cmp
lods
shlb
sbb
sub
push
enter
mov
out
and
in
cmp
je
neg
cmp
in
cs
adc
and
adc
add
mov
and
and
fidivrs
xchg
jl
push
add
out
popf
stc
movsl
push
sbb
bnd
sbb
pop
xchg
ds
jnp
sub
dec
dec
mov
bnd
sbb
test
and
loope
jge
mov
fs
mov
xchg
mov
daa
loopne
add
fidivl
sub
shlb
add
xor
int
adc
stos
jp
push
adc
xorl
ds
adc
or
cmp
enter
shlb
iret
std
movsb
pop
fnstcw
ficomps
mov
mov
popf
bound
ret
push
inc
stc
sub
mov
push
sbb
pop
push
in
and
and
data16
push
ds
cwtl
and
dec
leave
outsl
int3
fbld
mov
cmp
inc
jo
push
or
push
fld
fisubl
or
out
mov
hlt
mov
insb
inc
jns
out
and
mov
mov
push
xchg
clc
clc
repz
adc
daa
ror
stos
pop
cli
mov
mov
xor
cmpsb
daa
fcoms
fadd
inc
test
in
pop
sbb
movsb
lds
pop
std
loope
push
add
jl
mov
lods
dec
out
call
cmpsl
in
in
imul
scas
cmp
pop
repnz
mov
orl
aas
jg
xor
xchg
pop
push
in
fdivrs
loopne
jecxz
xor
fnstsw
sub
adc
add
inc
mov
dec
enter
scas
je
mov
xchg
roll
imul
aad
pop
adc
inc
shl
scas
push
sbb
cmp
push
or
inc
call
jle
lahf
fdivs
mov
mov
sbb
jno
mov
lea
adc
movb
ret
mov
sarl
cmp
mov
insl
xor
iret
mov
rorl
into
leave
lahf
or
fcomps
adc
pop
adc
js
imul
fmul
insl
jmp
sub
inc
jns
jmp
jnp
push
loopne
and
ret
loope
sar
mov
and
faddl
repz
and
mov
mov
les
fstps
dec
mov
cmpb
add
jle
mov
imul
pop
cmp
mov
stos
inc
outsl
div
out
xchg
jbe
jbe
add
loopne
mov
mov
push
adc
dec
andb
adc
scas
mov
xor
push
jb
mov
and
cwtl
addr16
sysenter
fs
test
jne
lds
push
xchg
cwtl
xchg
popf
int3
fdivr
dec
mov
inc
lods
mov
sti
push
cmp
lahf
outsl
movsl
popf
lahf
inc
pop
dec
push
dec
enter
xchg
mov
dec
pop
movsb
pop
pop
cwtl
ret
sbb
xchg
stc
push
xlat
xor
andb
xchg
mov
xor
std
add
std
popf
or
dec
mov
pop
aad
fwait
inc
mov
adc
jnp
mov
rcll
pushf
pop
sahf
sub
loope
mov
rcrl
movsb
dec
adc
clc
movsl
add
pop
push
and
js
mov
xchg
mov
sub
xor
mov
jmp
add
pop
jne
in
xchg
xchg
shr
inc
sbb
inc
jmp
pop
clc
out
inc
rcrb
cwtl
adc
mov
mov
push
insl
sbb
cs
mov
or
aad
sub
xchg
dec
fnstenv
popa
test
fisttpll
push
push
popf
das
cmpsb
mov
pop
xchg
and
sarb
and
pop
sub
pop
mov
jecxz
dec
cwtl
add
push
mov
dec
pop
fs
xchg
fistps
je
out
jmp
cmp
dec
addl
cli
dec
xor
inc
ss
xchg
pop
outsb
daa
cmp
stc
dec
test
push
sarb
int
mov
xchg
adc
bound
dec
scas
je
js
xchg
insb
out
nop
push
shlb
add
push
push
testl
loope
aam
xor
movzwl
dec
push
popf
cmpsb
pushf
and
jb
xor
jns
dec
inc
mov
cmp
mov
cmp
pop
ret
inc
push
cli
in
mov
cmpsl
mov
scas
xchg
xchg
or
repnz
pop
mov
leave
fisubl
adc
test
mov
inc
push
push
mov
std
mov
xlat
shlb
xor
xlat
xor
cltd
pop
mov
pop
sbb
jo
xchg
sbb
addl
negl
in
enter
add
pop
jns
pop
outsb
mov
imul
mov
dec
push
push
jo
push
int
fidivrl
push
add
addr16
insl
scas
pop
jae
js
inc
add
mov
jl
mov
jecxz
sub
mov
xchg
sahf
jge
stos
jp
sub
loope
jmp
rorl
inc
mov
dec
repz
insl
inc
jnp
mov
imul
xor
lcall
aam
pop
xchg
sti
arpl
test
add
xchg
cltd
divl
scas
in
mov
int
add
mov
imul
mov
push
arpl
jnp
aas
ds
loop
jge
cmp
test
repnz
mov
data16
in
cld
mov
jbe
cmc
test
pop
pop
xchg
mov
pop
icebp
lods
jmp
andl
pop
xchg
dec
add
and
es
lret
cmp
subl
sbb
and
ss
pusha
lahf
pop
mov
pop
sbb
arpl
jne
jns
inc
dec
mov
adc
mov
inc
bsr
xor
cmp
xchg
jnp
xchg
sub
shlb
lods
xchg
add
mov
rorl
inc
insl
orb
shlb
and
or
cmp
jo
mov
scas
inc
sub
mov
pop
cmpsb
add
fidivrl
sbb
sahf
adc
mov
pop
cmp
pop
dec
rcrl
mov
mov
add
lods
sub
add
setbe
popl
out
decl
mov
mov
decl
std
or
cmp
pushl
leave
push
mov
lret
pop
bound
mov
dec
mov
pop
cmpsl
sub
or
dec
mov
sbb
jmp
rorl
fiadds
xchg
jle
ljmp
push
or
js
inc
outsb
fwait
imul
jmp
jbe
in
ljmp
jnp
sbb
jmp
dec
lods
add
lret
icebp
cli
add
pop
or
mov
xchg
aas
das
adc
jae
pop
sbb
mov
in
iret
pop
xor
sbb
cmp
movsb
mov
xor
repz
cmp
pusha
push
xchg
arpl
xlat
and
sub
decl
cs
inc
sahf
cmpl
inc
dec
xchg
add
xor
sbb
xor
mov
cmp
pop
shrb
pop
shl
sbb
stc
jp
mov
mov
scas
in
shl
xorl
inc
sti
add
cmpsl
loop
dec
mov
pop
fsubl
sub
adc
int3
rcll
pop
xchg
call
mov
pop
aad
dec
xchg
sub
jecxz
mov
out
pop
int
imul
adc
fists
dec
test
jmp
dec
xchg
push
popa
imul
and
lcall
mov
xchg
into
cmp
pusha
pop
mov
or
pop
fcmovnu
or
add
inc
sahf
popl
cltd
lret
repnz
mov
inc
pop
sub
xchg
pop
mov
cld
jae
inc
mov
fcoml
xchg
sbb
std
sub
add
sub
and
daa
mov
jb
aad
fdivrl
adc
lea
popf
inc
mov
into
pop
aas
adc
adc
or
inc
movsl
xor
out
sti
mov
sbb
aad
out
jmp
je
push
jle
cmp
dec
lods
rep
inc
dec
dec
dec
repnz
hlt
pop
ror
xor
push
dec
popf
push
pop
mov
cs
gs
pop
aam
pop
stos
cwtl
outsb
jecxz
cltd
push
pop
lret
out
fxch
inc
inc
dec
mov
mov
out
xor
xlat
aaa
and
lods
jb
jmp
daa
rclb
mov
add
inc
ficompl
jle
rclb
push
pop
stos
push
js
jnp
sub
sub
jg
pop
outsb
fsubl
mov
push
imul
rolb
cs
cmp
sbb
xor
clc
mov
mov
inc
ljmp
fnsave
cwtl
lods
pop
data16
cmc
fwait
lods
sub
mov
loop
cli
cmc
clc
dec
sahf
insb
jl
add
test
xchg
adc
loopne
addl
iret
jne
xor
add
push
idivl
ss
inc
jns
pop
in
inc
insl
mov
dec
stc
mov
fs
aaa
mov
adc
and
and
jnp
test
in
add
and
jne
add
pop
icebp
popa
mov
nop
lods
out
or
dec
mov
sbb
clc
mov
outsb
push
movsl
pop
clc
mov
mov
mov
sbbb
jnp
jno
in
jbe
mov
loopne
lods
or
ja
xor
outsb
xorl
test
mov
es
lock
adc
incl
mov
mov
int3
in
iret
sbb
xchg
jle
mov
cmp
movl
mov
fs
xor
mov
dec
and
adc
push
arpl
cmpsl
add
or
xchg
ss
out
or
inc
jmp
stos
add
sbb
pusha
sub
mov
xor
or
dec
adcl
enter
inc
arpl
mov
mov
stos
cmpsl
cmp
lods
es
stc
sbb
jp
addr16
xchg
std
pop
or
xor
nop
scas
shll
jo
push
test
inc
jne
xor
mov
sub
jns,pt
xchg
sbb
inc
push
dec
repz
sub
sbb
repz
cmovnp
push
inc
xlat
mov
push
shrl
out
xchg
dec
lea
aas
scas
mov
or
into
lcall
push
inc
jl
leave
mov
cmp
xchg
xchg
and
movsb
xchg
dec
fsubrs
lds
cmp
lret
and
mov
in
jo
fcomip
test
test
xor
call
sub
arpl
pop
test
mov
lea
jp
hlt
xorl
cli
sub
mov
aaa
fsub
add
sub
adc
pop
and
dec
push
addr16
jle
bswap
insl
push
ret
and
and
popa
dec
dec
sbb
leave
aam
stc
movsl
rorl
call
jo
rcl
pushw
ret
gs
cmpsl
lcall
in
sub
mov
rcrl
or
fwait
cmp
leave
jp
push
pop
nop
jb
sbb
testb
pop
clc
lret
fistl
scas
pop
sub
stc
mov
jnp
in
aam
jbe
inc
jb
fstp
xor
ljmp
in
push
pop
add
les
pop
sbb
sbb
adc
test
scas
in
out
cmp
adc
jb
stc
movsb
cmp
xor
xlat
mov
out
add
mov
fldcw
xchg
aam
jmp
cwtl
lea
lea
lahf
ret
xor
push
inc
ret
ss
cmp
mov
rorb
jo
mov
in
and
mov
sub
cmp
cmc
mov
push
outsb
inc
in
mov
sub
lahf
xor
das
shlb
push
movsl
scas
xchg
addr16
in
ret
stos
mov
movsl
and
std
adc
xchg
rorl
imul
pusha
sub
test
je,pt
cmp
rorb
cs
push
or
push
mov
mov
out
mov
push
jg
cmp
cwtl
test
sub
dec
jl
or
addr16
jo
scas
adc
add
shll
fs
sar
jg
aam
sub
push
pop
pop
fstps
xor
xchg
pop
outsb
popf
jge
push
jp
add
sarl
or
fisubl
stos
xor
mov
ja
daa
idiv
imul
in
sbb
call
into
mov
dec
xor
fwait
mov
xor
mov
test
inc
icebp
stos
push
xlat
push
mov
xlat
cmp
pop
aad
inc
sahf
fdivs
fld
cmc
push
cs
cmp
pusha
cwtl
push
dec
dec
faddl
dec
mov
xchg
adc
pop
repz
insl
mov
loope
bound
mov
pop
les
aad
xlat
hlt
movsb
inc
popa
cs
adc
xor
xchg
pop
in
and
mov
push
sub
jnp
pop
pop
insb
xor
adc
imul
scas
and
xor
lcall
mov
push
inc
xor
loopne
shlb
inc
and
movsl
insl
mov
loopne
adc
sbb
and
dec
cli
adc
xor
ret
jmp
or
lds
iret
xor
addr16
lahf
mov
mov
sbb
xchg
shrb
mov
loop
daa
mov
pop
fcmovbe
or
xchg
add
insl
adcl
sub
fcmovnbe
push
bnd
and
sbb
sbb
push
sub
mov
loope
mov
adc
jle
imul
lods
jge
subl
out
enter
bound
xor
inc
int
cmp
sar
push
sti
int3
test
cli
cmp
jge
pop
jge
jbe
xchg
adc
negl
fstps
in
lds
cmpsl
cmpsl
loope
iret
scas
mov
mov
jne
pop
cmpl
adc
add
dec
add
or
ljmp
notl
pusha
je
adc
lea
mov
stc
data16
push
adc
mov
add
jbe
fmul
pusha
sub
loopne
add
pop
add
std
shlb
and
aaa
inc
rcr
je
cld
test
loop
or
decl
aam
pushf
popa
mulb
sti
addb
cmpl
lahf
inc
cwtl
dec
xlat
push
sbb
mov
pop
and
shr
inc
jo
test
mov
lcall
xchg
sbb
and
sbb
add
cmp
jmp
and
ss
and
bound
test
add
jns
hlt
and
sub
bound
adc
sbb
push
leave
nop
js
inc
push
pushf
pusha
add
sahf
mov
movsb
dec
mov
sbb
mov
mov
aas
fnsave
mov
sbb
ja
jne
repz
int
jne
mov
sub
jg
fxch
je
test
mov
and
in
lea
inc
mov
insl
pop
jmp
xchg
sbb
xor
sbb
xchg
add
rcll
popa
rcrb
sti
ja
adc
cwtl
out
movsl
jmp
dec
sbb
push
sub
inc
mov
outsl
js
adc
mov
test
in
bound
ffree
cmp
xlat
mov
mov
lea
cmp
add
dec
stos
ds
xor
stc
lahf
in
jo
and
and
stos
andl
fcmovu
cmp
hlt
push
cld
lcall
xor
popf
dec
clc
dec
push
cmpsl
push
push
sub
mull
outsb
aam
cmp
lret
inc
ds
cmp
xor
xchg
sub
or
cmpsl
orl
push
insl
xorb
sub
cmc
push
xor
aad
push
lds
ja
push
pop
dec
in
in
fsts
push
data16
test
jl,pt
icebp
popf
sub
je
xchg
jmp
insl
mov
jle
dec
shll
loop
lea
shr
mov
lock
repz
neg
rcl
mov
jne
cmp
cwtl
add
shlb
adc
cmc
jno
lcall
sbb
hlt
push
push
ja
add
pop
std
push
sub
push
jle
pop
out
lea
lods
adc
pop
cld
cmpsb
int
dec
out
push
ret
sub
inc
xchg
shrb
out
ficoml
pop
adc
xchg
bound
add
mov
and
rsqrtps
adc
xchg
cmp
call
cld
andb
mov
hlt
adc
mov
xchg
hlt
decl
dec
dec
mov
jl
dec
inc
cmp
adc
dec
pop
movsb
test
pusha
pop
stc
adc
xor
popf
jg
stc
addl
jno
mov
push
ret
loop
mov
sub
gs
out
adc
lcall
pop
std
popa
push
inc
ret
xor
test
mov
cmp
js
add
hlt
jp
sarb
push
push
pop
mov
or
ret
mov
cmp
push
outsl
mov
cmpb
and
mov
jno
rcl
sub
rorb
ret
shll
mov
in
leave
jmp
push
mov
jg
pop
outsl
xchg
jg
sbb
hlt
push
std
add
ret
arpl
daa
sahf
sti
xchg
inc
inc
lock
leave
mov
rcll
add
xor
mov
inc
or
add
dec
push
adc
fwait
mov
into
xor
pop
fisubl
in
jae
mov
dec
lcall
mov
push
mov
enter
movsl
mov
fsubrs
dec
addr16
stos
sar
dec
pop
mov
mov
aam
or
cmp
xchg
mov
xor
rorb
fnstsw
sub
or
sub
xchg
jnp
inc
pop
jp
sbb
mov
xor
cmp
jle
lret
ret
push
xchg
mov
mov
pusha
aam
lods
and
xchg
mov
ds
push
dec
mov
cmc
aam
bound
pusha
scas
cmpsl
push
cmp
ret
xchg
adc
in
mov
and
sarb
pop
push
jp
stos
mov
xchg
sbb
inc
pop
mov
mov
dec
std
push
jle
inc
and
sbb
sub
and
aad
add
jnp
and
mov
ret
rorb
xor
or
test
push
mov
pushf
cwtl
sahf
fwait
and
aas
xchg
sbb
and
movsb
pop
cs
pop
cld
movsl
sarb
dec
dec
into
cwtl
dec
push
mov
cltd
repz
aam
jne
push
mov
dec
cmpsl
and
add
xchg
mov
lret
add
push
pop
dec
inc
or
adc
stos
lea
out
xor
and
push
jmp
mov
jns
enter
leave
fsubrl
cmp
push
mov
bound
sbb
jecxz
pop
leave
or
adcl
and
negl
jle
fsubrs
ja
shrl
and
stos
js
or
cmpsl
sub
dec
negb
or
mov
repnz
adc
shl
pop
dec
mov
cmp
jb
pop
mov
js
add
xchg
scas
add
inc
inc
dec
sbb
mov
push
add
fwait
rclb
cmp
sahf
hlt
idiv
pop
inc
cmpsb
inc
and
sahf
mov
mov
cmp
mov
add
xor
jge
test
dec
mov
icebp
js
lock
sub
and
pop
sub
sahf
mov
hlt
mov
mull
fcoms
cli
xor
xchg
lahf
mov
dec
pop
out
or
out
jle
in
ljmp
sub
adc
int
add
movsb
sbb
mov
push
and
fmull
mov
and
mov
faddl
add
mov
pop
inc
dec
ficompl
pop
add
in
mov
xchg
mov
sub
mov
push
cmp
mov
xor
ss
stos
mov
cmpsl
mov
sti
div
mov
mov
jo
mov
les
cli
and
and
into
sbb
inc
adc
test
add
scas
int
in
or
push
pop
subps
cwtl
pop
lods
push
ret
mov
cmp
lcall
jl
out
pop
nop
aam
subl
fisttps
mov
comiss
js
xor
lods
rorl
gs
test
or
jp
add
pop
aam
shrb
mov
mov
in
lock
xchg
inc
test
xor
sub
fildl
pusha
pop
and
adc
push
add
roll
es
rorb
sahf
ljmp
hlt
fdivrs
out
imul
filds
neg
shlb
xchg
jl
ja
mov
sub
imul
fs
daa
lods
dec
leave
popa
push
imul
jne
mov
lret
xchg
fiadds
out
loope
xor
adcl
pop
adc
dec
cmp
scas
mov
mov
cwtl
in
mov
sub
jne
das
mov
pop
add
stc
sbb
pop
push
loopne
leave
mov
in
xchg
clc
inc
nop
clc
inc
lods
pop
or
xchg
push
es
enter
sub
fistpll
adc
or
add
out
rcr
imul
fcoml
mov
std
cmp
int3
cld
imul
daa
mov
fwait
mov
pop
push
xchg
fsubrl
sbb
in
xchg
jecxz
fisttps
sbb
ret
ljmp
or
pop
add
stos
mov
nop
shrb
orl
jbe
filds
fwait
outsl
sub
rolb
mov
shlb
lods
aas
mov
mov
scas
push
mov
rcrb
jecxz
jbe
enter
into
adc
call
sbb
fdiv
sbb
cli
cmpsl
jmp
xchg
bound
jb
mov
insl
jge
push
or
ja
jge
adc
rcrb
push
fs
lods
or
dec
mov
out
xor
pop
popf
fdivrl
sbb
inc
and
or
pop
jle
and
repnz
dec
hlt
mov
dec
and
jp
or
aaa
inc
pop
mov
jle
mov
mov
scas
cmp
jae
int
arpl
xchg
cltd
lock
mov
scas
insl
xchg
aaa
movsl
jge
adc
insb
add
push
inc
push
xlat
icebp
outsb
pop
jnp
lea
mov
insl
fwait
add
mov
outsl
out
popa
sbb
sub
cs
arpl
scas
sbb
gs
jbe
dec
xchg
inc
sub
pop
xchg
test
cld
in
jl
xchg
cmpsb
mov
hlt
pop
mov
xchg
call
psubusb
add
es
sbb
push
inc
mov
lcall
jp
ja
and
mov
push
pop
cmp
or
adcl
cmp
adc
mov
pop
ret
insb
cmp
dec
pop
fbstp
dec
inc
imul
call
rorb
decb
outsl
pushf
leave
leave
js
or
sub
inc
sub
pop
adc
mov
les
mov
out
inc
lret
testl
or
mov
push
daa
push
idiv
rcl
pop
outsl
pop
iret
cmp
js
mov
dec
mov
push
cmp
sbb
mov
xor
dec
clc
jmp
inc
jg
or
lods
push
pop
fldcw
insl
lcall
repz
das
and
push
fiaddl
dec
cmpl
adc
or
mov
or
jo
adc
test
adc
sbb
pop
in
jnp
xor
cli
and
lret
or
adc
in
fistps
cs
mov
mov
cmp
cmp
ja
fbstp
add
imul
popf
xchg
punpckhdq
cmp
adc
sub
fs
in
test
jg,pn
lock
shll
xorb
push
lea
cmp
pusha
pop
push
out
test
cmp
and
inc
adc
popf
push
sub
bound
stos
fistl
sbb
in
inc
push
push
dec
push
repnz
pushf
fs
lcall
repnz
daa
mov
outsl
dec
lods
loop
and
push
cmp
addr16
stc
mov
jmp
dec
lods
mov
in
inc
iret
aam
cmp
test
xor
dec
sub
aad
ds
mov
or
push
fwait
loope
cld
loope
fidivs
jns
lret
lock
pusha
sbb
inc
mov
pop
and
pop
adc
xor
jns
jge
and
loope
call
pop
xchg
ret
pop
in
adc
out
out
shlb
jmp
mov
add
xor
jmp
mov
insb
fdivrp
lock
dec
dec
sbb
jg
push
mov
xchg
cmp
int
xchg
stos
push
imul
push
das
pop
out
pushf
jecxz
and
daa
jmp
sbb
mov
xchg
jg
sub
subb
dec
fwait
push
shlb
test
push
sbb
push
fcmovnu
mov
cmp
scas
cmp
call
fiadds
or
icebp
push
lret
in
and
insb
xor
js
add
jae
pop
mov
in
je
xor
shl
dec
lods
addl
enter
inc
add
xor
xchg
mov
outsb
mov
or
in
pop
mov
shrb
insb
mov
fdivs
jo
test
jl
add
gs
push
jge
ds
adc
into
mov
shll
mov
fcoml
ret
inc
notl
in
adc
adc
loope
pop
xchg
into
mov
fcomp
inc
jg,pn
push
ret
repnz
sbb
lds
cld
mov
jb
mov
fdivr
mov
pop
xlat
adc
jns
adc
aad
mov
loop
jno
mull
xchg
enter
mov
xchg
jno
roll
cltd
jp
ss
mov
dec
scas
sbb
leave
mov
cs
lods
push
aad
or
xor
rcll
or
xor
les
mov
mov
push
adc
cmc
sbb
jecxz
push
data16
jge
jb
pop
sbb
movsb
sbb
orb
sbb
jecxz
push
mov
loope
sbb
icebp
or
lahf
out
jbe
adc
loopne
or
cltd
out
dec
das
push
ja
sub
cmp
ds
cwtl
mov
cli
les
ljmp
call
data16
add
cltd
mov
and
jmp
aad
mov
cmc
shr
fisubrs
fcmovbe
add
repnz
pop
push
outsl
mov
out
sbb
mov
lcall
leave
cld
stos
push
fwait
out
dec
loope
mov
mov
cs
lret
cmpsb
adc
jbe
fmuls
pop
pop
lahf
paddw
mov
jb
rolb
cmp
lock
mov
jo
cmp
sbb
push
ljmp
out
cli
mov
roll
dec
jmp
jnp
push
jmp
xor
jo
jecxz
test
iret
add
mov
jg
push
or
daa
popa
cmc
mov
and
inc
ret
mov
mov
pop
jae
jg
std
hlt
add
aas
and
xchg
sar
xchg
or
xor
inc
jmp
sti
add
test
ljmp
adc
adc
lahf
push
or
loop
dec
add
mov
xchg
sub
xchg
fdivrs
js
repz
movsl
stc
aaa
sub
repz
sbb
scas
loopne
adc
dec
outsl
pop
stc
push
dec
push
inc
test
int3
sub
dec
adcb
sbb
cmp
out
scas
imul
js
lods
cmp
lds
lcall
seto
pushf
or
sbb
fs
movsb
xchg
das
rcl
daa
popl
popf
stc
shll
and
xchg
out
mov
fadds
add
inc
fcmovnu
mov
xor
or
mov
arpl
xchg
aam
mov
dec
stc
adc
imul
inc
ss
stos
jne
repnz
push
in
rorl
in
push
repnz
mov
pop
inc
lock
into
repnz
xor
mov
inc
adc
cmpb
and
stos
cmpsl
mov
mov
lods
js
dec
sahf
cmp
mov
inc
mov
and
scas
jmp
mov
dec
push
mov
mov
in
nop
addr16
cmp
loope
leave
scas
sbb
jb
rcl
jae
sbb
bound
stos
pop
test
pop
and
lcall
dec
lcall
popf
inc
js
xlat
adc
sub
and
sub
arpl
int3
dec
sar
jns
cmp
out
mov
or
pushf
test
inc
in
ret
sub
push
sub
dec
fidivrl
icebp
jae
push
dec
or
adc
and
adc
cmp
outsb
sbb
lret
shlb
insl
add
and
je
xor
in
sub
repz
pop
mov
adcl
sbb
inc
loopne
xchg
jge
xchg
push
inc
leave
cltd
push
in
repnz
sbb
or
sub
cmp
mov
mov
push
fisubs
sub
sti
cmpsb
xchg
js
sbb
cmc
add
push
aam
push
cmpsb
scas
inc
adc
add
dec
int
add
aaa
lret
adc
shrl
sub
cmpl
jnp
outsb
adc
push
aaa
or
test
add
mov
les
jp
fdivrp
fcomps
jecxz
push
mov
hlt
in
xchg
clc
xor
add
xchg
out
gs
sub
pop
inc
into
dec
sub
fidivrl
push
pushf
leave
gs
int
inc
addl
mov
ss
jbe
addr16
lea
adc
jbe
ljmp
cs
call
xchg
out
jle
mov
jge
xchg
fxch
cmp
js
mov
cmp
ret
lret
push
data16
or
and
or
shll
std
fisttps
daa
mov
fadds
loope
adc
dec
inc
repz
iret
icebp
sub
jbe
pop
insl
je
shr
in
xlat
pop
sub
mov
rdpmc
in
popa
movsb
das
rcrb
xor
inc
dec
jge
rcr
xchg
aas
js
lcall
andl
xor
mov
test
imul
fiadds
and
sub
loope
ja
pusha
mov
enter
cmc
adc
imul
lock
shl
inc
es
shlb
mov
add
rcrb
aad
xor
insb
mov
int3
mov
adc
popa
jno
mov
hlt
mov
in
jns
add
jmp
outsl
inc
sbb
loope
in
mov
add
sti
mov
cmp
mov
cmp
inc
jb
push
loope
or
jl
rcll
push
and
je
mov
and
mov
inc
cwtl
unpcklps
in
rorl
stc
dec
add
jle
cmp
test
daa
cli
mov
pushf
pop
cld
mov
flds
or
inc
push
jg
into
xchg
movsb
mov
xchg
ret
xor
pop
test
inc
pop
inc
pop
jl
add
andb
addr16
cli
lcall
xor
movsb
mov
leave
jbe
addr16
cli
and
andb
insb
add
or
and
dec
hlt
pop
scas
aas
sub
inc
loop
push
outsb
fxch
pop
mov
popa
ret
call
addb
xchg
pushf
jb
call
push
scas
test
les
fldln2
sbb
movd
shr
insb
in
inc
xchg
xchg
sbb
sbb
adc
cmpsl
adc
xchg
fucomi
xchg
out
adc
add
call
std
add
mov
mov
push
add
in
call
xor
inc
in
in
test
cld
cltd
xchg
add
sub
push
ja
lahf
mov
arpl
xor
mov
xor
movsl
fcompl
lods
cmpsb
enter
pop
in
movsb
ret
push
call
and
or
cmp
aad
dec
adc
dec
or
jo
ljmp
loopne
call
lock
scas
xor
xchg
push
rcrb
xor
int3
adc
popa
clc
add
mov
dec
adc
nop
sub
rclb
pop
test
out
cmpsb
mov
repnz
inc
scas
xchg
loopne
pop
imul
orb
popf
sub
fistpll
lahf
iret
loope
mull
xchg
loop
mov
ficompl
je
pop
inc
icebp
sub
xchg
call
test
jns
inc
clc
xor
jmp
les
fsubrl
into
adc
mov
testb
cmp
xor
fbstp
arpl
mov
pop
outsl
shll
fildll
sbb
or
inc
adc
lock
sahf
mov
xor
pop
aad
adc
or
xchg
in
adc
dec
sub
dec
fisttps
cld
sbb
and
lock
cmp
cmc
in
mov
dec
call
cwtl
xchg
jge
shlb
or
xchg
jno
push
adc
xchg
ds
xchg
push
lods
xchg
lret
mov
mov
add
outsl
xor
mov
data16
cli
xchg
cmc
loope
jle
lcall
add
rcr
jne
pop
pushf
idivb
or
pop
sbb
sbb
aad
xor
xchg
sbb
and
arpl
lock
dec
and
movsb
sub
jg
out
add
add
cmp
dec
push
in
lea
cmp
je
xor
leave
rorl
jp
jns
aas
push
movsb
jge
pop
icebp
enter
je
xor
xlat
jg
add
in
mov
inc
pop
pushf
test
xchg
push
mov
mov
hlt
mov
sub
mov
sub
cmp
xor
nop
bound
call
fisubrs
and
mov
push
xor
and
sub
pop
in
and
add
or
dec
lods
jl
jno
adc
push
cli
loopne
ja
inc
lock
aad
sbb
lea
xlat
sub
mov
jno
mov
je
jae
dec
xorb
fisttpl
in
pop
cmc
rcrl
ljmp
addl
push
xlat
lret
jp
and
jne
mov
fistpll
push
out
lahf
xchg
rolb
sbb
dec
call
lcall
xlat
stc
adc
push
sub
sti
in
imull
adc
or
add
or
loopne
mov
out
mov
icebp
in
or
xchg
pop
xor
sti
dec
sti
inc
jecxz
mov
dec
clc
add
mov
push
lds
int
ds
add
xchg
call
push
fsubs
jne
xchg
data16
pop
xchg
jp
pop
xchg
push
pop
xchg
fidivl
mov
pop
imul
stc
add
sub
xchg
dec
notl
inc
inc
and
mov
int3
stc
pop
in
cltd
xchg
popf
mov
rcll
mov
sti
icebp
dec
and
and
or
mov
fimull
std
std
inc
sub
loope
mov
mov
xor
sub
loopne
es
mov
cmp
inc
lret
dec
jae
push
jo
and
adc
fidivl
fcom
jnp
pop
jns
sbb
adc
in
mov
sbb
push
es
fdivr
sub
and
inc
popf
popf
je
mov
clc
push
js
cs
sbbl
mov
ret
and
xchg
mov
movsl
in
push
xchg
push
jo
cwtl
mov
jle
xor
mov
aam
arpl
sbb
jo
out
or
je
xchg
jecxz
dec
jno
jmp
push
mov
shll
push
and
mov
or
xor
ret
xchg
mov
icebp
push
out
adc
out
xchg
jmp
negb
fwait
pop
cwtl
fwait
out
adc
pushf
xchg
push
insb
insb
je
into
enter
out
lock
jne
mov
in
pop
inc
push
aaa
pushf
dec
xor
fimuls
insl
add
mov
push
pop
ja
out
push
notb
or
add
jns
xchg
or
mov
mov
lcall
dec
xor
jecxz
push
rol
inc
sahf
add
fisttps
arpl
xchg
mov
xor
pop
outsl
shlb
sti
fcmovnu
and
sbb
andl
and
jecxz
cmc
push
mov
mov
es
mov
push
imul
negb
mov
das
push
jg
mov
cmp
daa
and
ret
adc
lods
and
and
jg
fldcw
rcrl
fabs
scas
aam
test
pop
daa
dec
pop
ja
loopne
dec
mov
sbb
mov
pusha
jne
fbstp
mov
push
jb
mov
and
pop
push
js
jmp
jmp
jae
push
nop
jnp
inc
add
pop
outsb
xchg
sbb
jmp
mov
jne
insl
push
cmp
jo
mov
std
ficoml
iret
jne
mov
adc
sbb
jne
xchg
insl
pop
push
sbb
dec
pop
rcr
imul
fucomip
mov
fldt
xor
cmpsb
int3
mov
js
jae
cmp
sub
pop
test
sub
jmp
insl
push
xor
add
fcoms
je
insl
pop
ds
mov
mov
mov
push
fidivl
cmpsl
stos
call
mov
or
sahf
cs
cwtl
in
mov
in
dec
push
xor
add
cmp
fsubs
pop
pop
sub
xorb
jns
xchg
and
dec
shlb
sub
jmp
ret
cmp
out
fs
or
movsb
test
lods
in
jp
pop
inc
insb
rclb
mov
ret
rorl
sub
mov
out
setb
maskmovq
testl
xlat
imul
cs
mov
addr16
cmp
popa
nop
enter
imul
xchg
es
jbe
imul
xchg
mov
xchg
add
sahf
cmpsl
cwtl
add
push
jo
sbb
push
iret
cmp
insb
sub
fwait
add
inc
xchg
loop
dec
push
lods
pop
cltd
int
aaa
mov
inc
in
lock
add
cmpsb
or
ret
xchg
xchg
sbb
push
adc
icebp
jnp
enter
lahf
or
and
pop
mov
in
mov
pushf
dec
push
mov
cltd
aaa
push
test
mov
mov
test
mov
xchg
push
inc
inc
icebp
add
test
push
jnp
cmp
sub
cmp
pop
xchg
sub
xchg
dec
arpl
lods
mov
inc
sti
fists
and
insb
mov
jge
push
mov
mov
fadd
mulb
cld
jmp
inc
lret
sbb
push
inc
sbb
xchg
ffreep
xor
or
add
sarb
dec
or
ljmp
add
jl
jmp
inc
add
jmp
or
xchg
test
insb
mov
mov
inc
scas
mov
jle
jne
mov
mov
dec
call
pop
ds
icebp
jns
add
lods
scas
mov
add
lahf
lret
cli
popa
mov
out
cli
add
inc
movsb
mov
mov
aam
push
cld
bound
inc
jns
mov
mov
cmp
out
cmp
jo
insl
dec
inc
mov
sub
dec
aam
or
inc
cmp
push
ds
sub
in
mov
mov
adc
push
mov
cmpsb
shlb
std
aaa
or
or
clc
cld
sti
xchg
push
and
cmp
mov
nop
pop
filds
push
incl
adc
cmpsb
insl
in
inc
cltd
lock
jle
push
mov
cmpsb
shlb
pop
sarl
jne
aaa
sub
mov
jmp
fnstsw
and
and
mov
or
push
rcll
add
mov
cmpsb
sbb
xchg
jmp
addb
pop
sbb
mov
xchg
mov
push
cmpl
test
xor
push
arpl
xorl
mov
adc
imul
xchg
push
test
adc
inc
aaa
in
ss
xchg
pop
pop
cmp
mov
mov
stc
mov
adc
aaa
stc
sbb
dec
jo
sub
jns
les
insl
das
es
mov
loop
push
pop
lea
inc
mov
mov
mov
pop
addr16
and
adc
and
push
ss
xchg
stos
in
rolb
ds
addr16
push
lock
inc
insl
in
dec
movsb
mov
das
mov
ja
xor
int3
inc
jns
ret
aaa
imul
cmp
popf
popf
ret
push
push
stc
dec
and
cli
push
jle
sbb
lahf
in
es
imull
out
mov
mov
ja
inc
mov
cmp
incb
mov
cmp
cltd
and
add
outsl
adc
arpl
xor
inc
xchg
inc
aaa
fdivrl
add
push
jg
divl
adc
arpl
aas
mov
inc
out
dec
inc
or
inc
leave
jg
lret
mov
je
or
and
mull
int3
ret
out
mov
jge
mov
stos
jb
es
xor
shlb
xor
sbb
repz
shl
adc
mov
mov
add
fs
sbb
mov
xchg
pushf
fldt
loopne
in
scas
xchg
jo
stos
xchg
aas
outsl
lods
xor
aad
imul
inc
jl
jg
xchg
and
pop
fadd
adc
jp
outsl
add
mov
ljmp
push
imul
lods
popf
sub
hlt
mov
fisubrs
sbb
rolb
dec
mov
pusha
cmp
xchg
mov
push
push
dec
imul
xchg
push
mov
dec
and
das
or
int3
test
xor
call
in
xor
sti
dec
stos
sub
lahf
push
lock
scas
test
popf
fmulp
or
sub
imul
fadds
xor
adc
mov
ja
jle
push
jo
mov
jae
add
cmp
sub
shr
cmp
or
faddl
jns
sarb
out
add
test
test
lret
outsl
add
mov
ficomps
push
mov
cs
xchg
adc
mov
inc
jbe
jbe
push
lds
pushf
mov
lret
mov
sarl
fistpl
rcrb
add
push
pusha
sbbb
or
xlat
xor
mov
jp
test
push
push
dec
adc
jle
inc
lds
add
xchg
mov
int
mov
test
adc
push
mov
jns
flds
iret
lds
pop
negb
mov
jno
xchg
mov
pop
cmp
adc
push
mov
add
add
loope
in
lcall
push
add
mov
insb
cltd
dec
loope
mov
jge
xchg
lods
lock
clc
loopne
test
mov
ljmp
jne
hlt
data16
push
inc
fdivs
mov
repnz
and
jne
or
xor
sub
xchg
inc
adc
adc
hlt
negb
das
js
inc
imul
nop
or
cmp
jae
out
sbb
pushf
insl
jae
mov
or
test
test
xor
add
push
adc
rolb
popf
ja
sbb
xchg
push
sub
inc
push
movsb
aaa
jge
dec
push
daa
mov
mov
fnstenv
ds
idiv
inc
cltd
nop
iret
and
pop
sbb
test
fwait
mov
repz
push
ret
push
inc
and
mov
lahf
cmpsb
cmc
mov
add
cmc
sahf
iret
xlat
push
add
xor
mov
jg
das
mov
pop
pop
mov
push
lret
lret
movsb
das
loope
rorl
ss
xchg
repz
mov
mov
or
fidivrl
mov
mov
jg
and
mov
std
in
mov
aaa
bound
fisttpl
mov
sub
adc
fs
mov
into
add
pop
cld
dec
sub
loopne
inc
lods
aas
add
add
leave
lods
insb
int3
adc
cmp
add
sbb
jmp
arpl
add
jne
test
xor
enterw
push
inc
mov
jbe
mov
jb
push
pop
lea
mov
mov
pop
adc
push
push
sbb
in
mov
sbb
bound
xor
ja
adc
loope
adc
jp
xor
xchg
sbb
pop
cmp
es
jle
pop
pop
mov
scas
xchg
scas
mov
add
ss
sub
fs
cmp
mov
inc
pop
test
fstpt
add
mov
sbb
cmc
mov
out
add
and
or
das
xlat
xor
test
or
loop
jmp
xorl
cmp
xchg
add
int3
mov
xlat
mov
int
mov
mov
jge
push
shll
and
pop
in
out
ficomps
sti
pop
jnp
ljmp
push
inc
pusha
hlt
push
leave
sub
jecxz
jl
cmp
or
test
push
lahf
inc
sarl
fstps
xchg
add
mov
std
outsl
fildll
mov
sub
push
fadds
insl
leave
pop
inc
test
and
inc
in
roll
in
js
aaa
movsl
movsl
inc
out
cld
pop
es
adc
hlt
gs
sbb
js
add
adc
cmp
xchg
cmpsb
gs
mov
xor
call
mov
xor
mov
daa
loopne
cs
lods
or
xchg
and
or
repnz
mov
lods
mov
and
ret
das
pop
pop
jbe
ss
aaa
xlat
rol
lods
xor
jo
aaa
cwtl
push
sbb
enter
nop
xchg
cmp
test
lea
cld
cmp
fwait
movsb
popf
flds
dec
lret
adc
in
dec
mov
inc
jmp
lds
or
add
shrb
add
enter
test
lret
lods
add
loope
pop
mov
outsb
adc
in
dec
jnp
test
pop
dec
stos
repz
fcoms
push
xor
jns
fidivrl
out
adc
push
dec
sbb
outsb
fisttpll
cli
jmp
gs
mov
orb
repnz
jae
push
push
inc
add
out
movsl
sub
stc
adc
jo
inc
fbstp
push
mov
add
mov
push
inc
inc
test
sbb
das
pop
cld
xchg
add
jnp
and
push
call
push
adc
fcmove
add
movsl
xor
pop
lods
jle
push
cmp
fmull
loopne
sbb
movsb
push
dec
shrl
fsubl
jb
dec
add
cli
dec
enter
in
notb
cmp
xchg
movl
dec
sub
push
jne
pop
cmp
imul
sbb
in
xchg
add
out
dec
lahf
outsb
ret
push
pop
push
xchg
cs
jg
xor
jae
pop
mov
cmp
xchg
lock
cmp
movsb
in
imul
lods
lods
in
shll
sbb
sub
test
and
add
pop
mov
xchg
out
dec
jecxz
arpl
out
lea
stos
pop
xchg
jmp
push
pop
cltd
xchg
into
mov
sub
cmp
sbb
cmp
nop
or
shr
sub
pop
sbbb
dec
adc
jmp
shrb
icebp
ljmp
jnp
adc
pop
cmc
int
sbbb
adc
or
push
dec
dec
push
mov
rorl
ret
insl
cli
fldl
or
add
leave
xchg
dec
xor
and
xor
mov
dec
xor
and
in
ret
or
xor
xchg
xorl
dec
push
inc
jl
pop
into
leave
aam
add
mov
or
add
inc
push
cltd
pop
sahf
add
subl
mov
sub
xor
pop
sbb
mov
daa
mov
out
cmp
cmp
jbe
pop
push
mov
popa
pushf
fcoml
dec
out
sbb
mov
sahf
xchg
jl
test
xor
test
daa
into
mov
sbb
lds
jo
es
xor
sahf
jo
adc
or
je
jnp
es
mov
adc
dec
xor
mov
pusha
sti
sbb
mov
and
das
insl
addr16
je
out
mov
pop
mov
test
mov
hlt
ret
add
push
fmull
pop
mov
push
mov
push
test
cmp
mov
call
jle
cmp
inc
shlb
sub
mov
hlt
loope
cmp
lds
loop
cmc
mov
sar
mov
jno
fs
sahf
nop
jno
adc
lret
das
mov
dec
add
cld
mov
je
ret
je
daa
nop
xchg
adc
mov
nop
push
std
jmp
call
mov
loope
pop
push
sub
es
and
pop
out
pop
jo
out
cmp
addl
shlb
sub
insb
mov
and
xor
icebp
pop
cmpsl
and
adc
in
push
mov
jg
cmp
sub
or
aas
push
cltd
pop
fs
jb
mov
js
popa
xchg
push
mov
mov
mov
sub
jb
sti
dec
sbb
xchg
cltd
xor
sbb
sub
mov
jno
pop
pushf
fisttpl
xchg
push
rcll
sbb
add
or
negl
add
arpl
pushf
jnp
js
push
and
xor
sbbl
lods
bound
add
in
test
push
outsl
lock
xchg
xchg
movsl
xchg
aad
push
mov
cmp
and
push
cmp
and
leave
mov
data16
and
loopne
xor
push
add
repz
and
sbb
test
repz
dec
pushf
mov
jae
dec
ds
mov
dec
push
add
cld
fwait
mov
sbb
pop
xchg
add
jl
dec
test
mov
ds
pandn
aad
sub
adc
popa
sti
dec
jae
lea
pop
lds
mov
mov
jbe
mov
inc
sub
sahf
xorb
and
out
jne
xor
popf
and
test
inc
pushf
cmp
rolb
mov
sub
insb
mov
push
fs
icebp
imull
pusha
cmp
incl
mov
je
inc
jmp
pop
popl
dec
add
or
sbb
lds
out
push
cld
fcmovu
pop
mov
bound
insl
cmp
popf
mov
aas
ds
out
pop
xchg
testl
std
pop
fs
fbstp
test
dec
pop
mov
inc
dec
rcrl
out
sbb
xchg
lret
mov
push
pop
inc
mov
inc
es
daa
mov
mov
aaa
inc
dec
notl
mov
in
aad
test
pop
inc
adc
das
fidivrs
sarb
pushf
cltd
movhps
test
hlt
imul
pop
repz
aas
sub
bound
pop
ljmp
cmpsl
andnps
mov
pop
lcall
xchg
rcrb
add
xor
stos
movsl
add
arpl
or
in
lret
out
xchg
sbb
nop
dec
shrl
sbb
mov
out
inc
sbb
into
pop
push
insl
out
jmp
in
mov
sub
push
sub
les
stc
jp
jmp
jo
lods
mov
jge
mov
sahf
adc
adc
mov
xor
and
push
jecxz
subl
popa
jnp
sub
adc
daa
push
mov
jnp
jge
fwait
insl
or
in
add
lds
mov
jp
or
dec
mov
or
outsl
subl
aam
in
aam
ss
bnd
pop
movsl
xabort
sub
dec
mov
push
jle
cmp
lods
das
push
cmpsb
mov
pop
or
pop
and
mov
push
fnstsw
popf
adc
cmpsb
cmp
imul
mov
push
xchg
xchg
fdivl
pop
mov
push
mov
cmp
xorl
into
xor
inc
pusha
cmp
push
aad
mov
add
sti
lea
xlat
add
push
mov
into
push
aad
adc
data16
xchg
and
lcallw
ljmp
lods
hlt
jge
ljmp
xchg
or
rcrb
cmp
lahf
sar
sub
jnp
pusha
xchg
in
pop
jg
jmp
push
sbb
test
xorb
or
add
mov
sbb
or
ljmp
ja
mov
jecxz
adc
movsl
and
aaa
add
push
xchg
lea
add
adcl
xchg
dec
adc
vpsubsw
shlb
and
push
stos
imul
fimuls
xchg
or
mov
lret
xchg
inc
popf
mov
pushl
js
loop
popa
addl
call
mov
fistpll
test
mov
jbe
dec
pushf
xor
scas
push
inc
lret
test
lock
cmp
stos
mov
sbb
and
xor
adc
sahf
fstp
and
test
pop
ret
adcb
xor
mov
inc
in
popa
cmp
test
xchg
arpl
fisubrl
in
insb
bound
adc
fidivs
jecxz
xchg
dec
ret
mov
fisubl
lock
jp
loopne
xchg
lea
aas
xor
imul
in
push
aas
loop
enter
pop
loope
scas
push
push
adc
fdivl
movsb
jno
xchg
fbstp
cltd
push
aas
push
ja
loopne
jecxz
filds
xchg
pushf
add
xchg
pushf
adc
xchg
pop
cwtl
jmp
xor
sub
mov
dec
adc
test
xor
ja
dec
out
mov
mov
sub
mov
xchg
push
inc
sub
lds
lea
cmpsb
test
mov
xchg
fmuls
js
xchg
jmp
mov
dec
lcall
adcb
cmp
mov
in
jnp
into
insb
fdiv
add
scas
popa
mov
fdivrl
mov
and
insl
xor
mov
cmp
inc
cmpsb
jp
int
lea
and
std
testb
jle
pop
sbb
into
jbe
cmp
cltd
mov
enter
sbb
into
loope
add
ds
out
sub
cli
or
push
rcrb
sbb
into
push
icebp
jg
push
and
xchg
scas
orb
jne
jle
outsb
push
mov
mov
scas
xchg
icebp
cmc
in
mov
stos
pop
jl
xchg
xchg
mov
fdivs
mov
clc
fstpt
stc
enter
into
jle
xor
adc
fcmovnu
orl
into
cmp
das
fists
dec
add
mov
mov
push
mov
test
cmp
es
shlb
int
and
cli
mov
cmp
movsb
cmp
out
scas
das
mov
aas
cmp
dec
sbb
sbb
fcoms
fs
dec
daa
mov
lods
int3
mov
hlt
fisttpl
mov
add
das
cmpsb
jno
andb
outsl
adc
dec
popf
or
add
mov
xorb
rcr
xchg
rolb
icebp
xchg
into
push
mov
adc
cmpl
pop
data16
lods
adc
or
jl
stos
cmpsb
cmpxchg
loope
subl
roll
int
add
daa
add
sbb
and
inc
iret
mov
pop
les
adc
xchg
lret
xchg
adc
sub
or
orb
ror
testb
ljmp
cmpsl
pop
out
jbe
imul
jne
adc
repz
enter
aam
ljmp
in
dec
mov
xchg
repz
stc
sbb
sbb
ljmp
cmc
negl
rcl
and
xor
push
lea
mov
jecxz
addr16
push
std
lcall
es
xchg
lea
out
pop
test
jnp
xchg
lods
repnz
cltd
pop
repnz
dec
pop
outsl
test
aad
es
hlt
inc
push
mov
mov
sbb
or
das
fcomp
ss
adcb
lea
outsl
jo
push
xlat
push
movsb
popa
fsub
mov
sub
sbbl
mov
xor
dec
ret
add
adc
mov
inc
loope
fsubrl
pop
jle
cltd
mov
inc
leave
pop
and
stos
pop
jge
das
inc
pusha
iret
cmp
mov
ret
in
movsl
jle
call
add
and
push
rorb
popa
xchg
mov
outsb
push
pop
add
mov
mov
jmp
xchg
movsb
js
sub
mov
dec
notl
xor
jecxz
negl
lea
enter
repnz
out
cld
pusha
mov
mov
mov
sub
jl
cmp
push
xchg
popf
mov
mov
imul
dec
adc
movsb
xor
inc
or
sbb
fcmovnb
or
jae
enter
adc
stos
inc
call
xchg
push
les
pop
push
cmp
ljmp
lcall
scas
test
adc
icebp
mov
in
sbb
jg
cmpsl
mov
cli
dec
dec
pop
sbb
out
mov
xchg
popf
push
xchg
add
gs
loope
fdivrs
adc
xchg
clc
out
jb
jmp
es
ret
add
sbb
fucompp
or
jecxz
xor
cmp
jae
xlat
aaa
faddp
std
mov
fsubl
lahf
andl
dec
xor
mov
push
call
jge
loope
std
into
pop
inc
movsl
sub
mov
imul
dec
cmpl
adc
xor
xlat
xchg
sti
mov
push
movsl
mov
aad
mov
pop
sbb
ficompl
xchg
dec
xorb
scas
dec
jne
enter
aas
or
pop
inc
aas
test
xchg
orb
sub
xor
loopne
push
jb
dec
int3
adc
ja,pn
in
xchg
mov
div
jo
push
aas
dec
scas
mov
jp,pn
imul
loopne
lock
xchg
mov
js
xchg
jmp
cmp
inc
mov
gs
sbb
gs
lret
push
mov
cmp
dec
pop
lods
ret
les
fisubrl
pop
push
mov
add
dec
pop
data16
dec
xchg
out
mov
or
imul
push
cmp
idivb
les
mov
inc
xor
sbb
adc
sarl
fldl
cld
shlb
shl
ret
loope
ja
fmull
mov
push
pop
test
out
and
lret
inc
mov
dec
or
out
and
pop
leave
cli
push
mov
lahf
or
hlt
hlt
enter
rcll
cmp
dec
lock
fmuls
fwait
xor
in
adc
jle
cmp
jns
push
pop
xchg
fsubrs
mov
add
inc
cmp
cwtl
ret
mov
mov
sub
lock
icebp
clc
insl
sub
insl
mov
adc
fsubrs
sub
mov
pop
cmp
sbb
cli
add
filds
sbb
loopne
mov
jns
cs
and
add
das
inc
repz
mov
imul
mov
imul
insl
xor
add
push
pop
jns
pop
loope
outsb
push
mov
jns
cmp
aaa
ss
pop
mov
mov
mov
jbe
out
jecxz
test
adc
test
bound
pop
dec
in
imul
mov
adc
xchg
lods
or
jmp
cmpsl
int3
out
sahf
adc
pusha
std
les
push
clc
enter
addl
jp
cmp
dec
pop
dec
mov
and
cmp
idivb
push
stos
cmpsl
pop
or
mov
mov
adc
lods
out
lds
jg
scas
in
jp
cwtl
mov
and
insl
bound
mov
adc
sub
inc
jle
sbbb
in
out
cli
fmul
std
dec
pushf
popf
div
xorl
lahf
and
push
add
mov
push
loop
xor
and
ljmp
sti
pop
add
int
mov
mov
jl
jae
xor
jno
mov
or
ja
jns
and
into
or
imul
ret
ss
xchg
outsb
addr16
xor
push
pop
and
mov
fwait
mov
jne
stos
adc
jecxz
popa
mov
add
xchg
mov
and
dec
mov
test
cmp
sbb
xor
xchg
pop
mov
or
and
xchg
add
int3
adc
jl
fmull
fsts
jnp
iret
adc
dec
and
and
aas
mov
add
cltd
lods
mov
bswap
mov
jle
rorl
test
cmp
adc
ret
repnz
into
cmp
mov
sbb
ljmp
push
sub
cmp
lahf
add
gs
add
hlt
out
aas
test
mov
and
xchg
lods
sbb
dec
jle
pop
xchg
iret
cmp
and
mov
arpl
inc
fcmovu
xor
ds
testb
fnstenv
arpl
in
pop
les
mov
dec
mov
push
push
mov
push
movsb
mov
in
jo
mov
imul
adc
mov
ss
and
pop
mov
sub
js
add
add
sbb
mov
or
ret
jge
aaa
pop
push
lds
repnz
shll
jo
add
loope
inc
jbe
fisubl
mov
outsl
xchg
push
push
mov
and
ret
dec
cmp
jmp
fsts
mov
and
adc
jle
pop
sub
test
ss
xor
xchg
xchg
dec
out
inc
icebp
mov
fcomps
daa
dec
xchg
push
inc
loopne
jne
or
xchg
add
pcmpeqw
out
aas
push
sahf
int3
dec
ljmp
and
sub
rcrb
push
sbb
movsl
das
fld1
push
ja
lcall
rcll
add
inc
jo
sbb
cli
loopne
jns
jb
push
adc
ret
jle
fimull
movsb
in
push
xchg
lcall
les
aam
outsl
jge
dec
pop
add
cmp
leave
lret
xchg
repz
mov
ficoms
gs
outsl
cmpsl
push
inc
adc
sbb
fsubr
shll
inc
or
andb
and
out
in
fstl
dec
ret
fisubrl
pop
mov
aam
pusha
xchg
inc
push
mov
push
int
pusha
setge
movsb
inc
mov
pop
loopne
iret
icebp
adc
and
xchg
xor
sbb
mov
popf
xchg
fcoml
movb
push
dec
ror
into
lahf
inc
nop
add
jle
cmp
adc
fdivs
jae
inc
lret
xor
adc
idiv
ljmp
pop
leave
mov
mov
dec
lds
fcmovnbe
shr
sub
sub
dec
adc
mov
pop
xchg
js
push
and
inc
sub
enter
mov
xchg
dec
sbb
lods
movsl
jl
jb
cmp
lcall
mov
and
fistps
mov
in
rcll
jns
mov
xlat
in
mov
pop
jecxz
sti
test
and
pop
shll
mov
gs
fwait
lret
push
roll
xchg
stc
cli
hlt
dec
push
in
and
or
pop
daa
cmpb
push
jecxz
or
addb
pop
loopne
mov
cli
inc
and
loope
sbb
jecxz
xsaves
sub
mov
or
or
push
or
cs
rcll
popf
gs
lods
push
adc
pop
push
cmp
adc
cmc
pop
rorl
mov
mov
or
xlat
cmp
mov
adc
mov
inc
mov
jo
shll
mov
mov
jbe
pop
cwtl
dec
add
pop
mov
dec
jl
outsb
test
das
pusha
daa
xchg
rcrl
pop
and
je
adc
mov
sub
in
pop
or
pop
mov
dec
add
mov
ficompl
into
call
rcrl
xchg
inc
push
loop
jbe
push
faddl
rorb
scas
test
xchg
call
jg
cmp
cmp
cltd
mov
push
sbb
jb
mov
dec
mov
pop
in
pop
mov
xchg
and
scas
das
popf
xchg
xor
adc
dec
repz
aad
sbb
jnp
shlb
outsb
xchg
inc
cltd
imul
mulb
fdivp
call
pop
mov
add
enter
int
mov
mov
xchg
xchg
or
lret
push
mov
or
mov
jne
sbb
stc
xlat
lds
and
cmc
adc
loop
cwtl
pop
cmp
fistl
or
fimull
inc
fildl
fsubr
fisubl
inc
mov
in
test
cld
mov
call
nop
sti
enter
jmp
xchg
mov
push
cs
dec
jne
sub
shll
dec
add
icebp
mov
dec
push
jecxz
push
out
push
adc
inc
mov
aad
add
leave
loopne
mov
in
stc
in
adc
or
in
insl
mov
movl
adcl
cli
pop
cmp
subl
sti
and
xchg
out
and
adc
out
fisubl
dec
setno
loopne
dec
cmpsl
rcrl
mov
xor
lret
inc
add
data16
fimuls
fcompl
push
cli
fwait
adc
nop
pop
cmp
mov
xchg
hlt
das
and
add
inc
aaa
and
pusha
stos
dec
and
into
icebp
dec
jns
int3
jb
jmp
stos
push
mov
xchg
sti
dec
fmull
sub
jb
push
stc
push
push
xchg
jne
push
dec
cmc
cmp
enter
pop
dec
jge
jmp
xlat
or
iret
shl
in
or
jmp
mov
inc
insb
and
cmp
out
dec
pop
lea
dec
pop
push
popa
fcomps
paddq
arpl
mov
call
loop
push
xchg
sub
cmp
mov
push
mov
in
stos
insb
mov
stos
mov
sub
cld
lahf
jle
adc
and
inc
enter
sub
mov
or
or
popl
iret
sub
in
sti
movsl
iret
shrl
ja
push
sub
aaa
inc
jae
pop
imull
les
cli
jge
mov
sbb
out
out
int3
lcall
in
and
loop
ret
mov
add
or
mov
xor
xor
jecxz
seto
jmp
sub
jnp
int3
stos
inc
sub
cmp
xchg
cmpsl
jecxz
xchg
xchg
sub
test
test
mov
jb
jecxz
inc
mov
pop
dec
idiv
pop
xchg
and
jno
std
ret
or
insl
stos
iret
stc
sbb
add
mov
dec
inc
addl
orb
pop
into
jbe
cmc
mov
inc
lock
sarl
pusha
movsbl
psllq
hlt
sbb
add
dec
rcrl
xor
lahf
movsb
add
ds
repz
sahf
dec
xchg
jge
stos
loop
nop
xchg
jbe
sub
jp
mov
lcall
adc
lods
mov
aaa
mov
dec
insb
and
xor
fldt
push
adc
pop
ds
in
xor
cmpl
repnz
jg
arpl
lods
imul
out
fs
xchg
aad
lret
in
outsl
lcall
sub
or
andl
xlat
and
fbstp
repnz
call
xor
sub
xchg
shll
fstpt
xor
in
stc
test
mov
dec
inc
mov
pop
xchg
in
add
loopne
movl
dec
out
pop
mov
dec
cmp
push
sbb
lock
jge
sub
jge
cs
jb
ja
outsb
add
lea
add
into
xchg
and
cmp
or
or
sub
mov
loop
add
jp
xchg
inc
push
and
sahf
mov
pmulhrw
mov
out
rolb
sub
cmp
cmp
push
mov
cmpsb
adc
pop
dec
div
jo
je
adc
in
aaa
pop
lods
and
dec
testb
mov
add
or
sbb
mov
loope
decl
stc
or
enter
lahf
fnstenv
inc
mov
xor
out
cs
imul
repnz
daa
pop
mov
lahf
cmpsl
insb
mov
subb
data16
mov
sub
iret
push
cltd
pushf
add
lock
aam
or
shlb
inc
xchg
jno
add
movsl
dec
mov
stos
stc
enter
pop
nop
and
cmpsb
call
bound
xor
incl
push
mov
jmp
popf
insb
jo
dec
aad
cmpsb
and
out
adc
mov
and
cmc
lret
enter
sub
sahf
mov
popa
in
loope
daa
xlat
or
stos
jp
fsubl
fists
flds
outsl
imul
dec
ficoms
mov
adc
add
xchg
cs
lcall
test
loopne
add
and
pop
jae
repnz
mov
bound
movups
cmpsl
add
cmp
pop
adc
jp
add
dec
faddl
xor
and
scas
mov
xchg
test
ds
mov
imul
ret
inc
xchg
mov
lret
dec
rcll
iret
xor
inc
movsb
or
mov
outsl
pop
dec
rcll
or
jmp
xchg
cmp
push
in
fidivrs
jg
dec
inc
push
and
lret
ja
stc
lods
aaa
xor
xor
rolb
and
pop
fcomps
push
xor
test
mov
sarl
mov
pop
repnz
cwtl
jle
or
cmc
and
and
xor
fstl
mov
fldenv
std
lods
dec
test
in
mull
aaa
sbb
push
push
pusha
outsl
sub
push
jl
mov
repnz
outsb
xchg
imul
test
xchg
mov
mov
and
cmp
jo
sub
filds
out
scas
dec
push
add
hlt
lods
imul
lret
test
dec
mov
icebp
cmp
and
fsts
hlt
outsb
push
adc
popf
push
das
ret
and
pushf
xor
and
push
sub
or
data16
daa
dec
mov
mov
inc
adc
les
mov
push
push
mov
jge
test
adc
aam
mov
out
mov
mov
adc
mov
mov
add
push
lods
inc
rorl
push
cmc
or
mov
cmp
and
and
fdivrs
gs
cmc
jae
push
dec
std
lahf
es
adc
jmp
into
mov
sti
dec
jbe
into
cmp
pmullw
lock
aas
sub
mov
lock
adc
cmp
js
mov
adc
imul
pop
dec
addb
cs
out
pop
dec
push
fdivrs
adc
call
shlb
pop
repnz
sub
push
and
shlb
mov
dec
aaa
loop
inc
jae
in
xor
fwait
cmp
jne
std
cs
shr
arpl
xor
inc
mov
mov
and
push
pop
sub
push
and
stc
dec
xchg
pop
fstps
push
lret
out
adc
adc
test
xchg
dec
mov
stos
pusha
loop
add
pop
xlat
call
cmp
xchg
sbb
push
roll
pop
addr16
mov
fcoms
pop
sub
aad
lcall
mull
cs
sub
inc
cmp
sub
ret
out
xlat
outsb
fwait
mov
or
test
push
push
int3
and
xor
rorb
push
xchg
ret
jnp
mov
ja
sbb
in
inc
jb
sbb
sbb
inc
mov
setno
push
push
stos
shrb
mov
pop
jl
mov
sub
int3
mov
mov
adcb
into
jne
jae
lret
pop
repnz
adc
adc
loop
mov
fcomi
sbb
mov
fwait
ja
sbb
pop
jle
pop
xchg
lret
lret
les
cmp
notl
cli
add
jmp
adc
jge
movsl
jns
in
imul
pop
in
cmp
sarl
test
aad
sub
test
outsl
push
and
out
mov
cli
shl
xchg
push
repz
pop
dec
and
xacquire
inc
outsl
or
adc
xor
pusha
aam
dec
je
mov
xor
cmpsb
ret
cmp
aaa
imul
fsubs
movsl
inc
repz
mov
call
orl
imul
inc
jae
jne
repnz
jl
cmc
push
sbb
enter
or
mulb
pop
or
jg
ret
adc
bound
enter
cli
cmp
add
clc
adc
idivb
shlb
dec
cmp
lret
inc
xchg
popw
mov
mov
dec
jnp
repnz
sahf
loope
aaa
jg
mov
popf
mov
jge
adc
outsl
cmpsl
adc
shr
fisubrl
hlt
cmp
xchg
aad
out
in
cwtl
jl
dec
lahf
add
out
pop
sbb
jne
xor
shll
cmp
shll
rclb
inc
daa
or
cltd
xor
adc
sub
xlat
jns
mov
lods
pop
pop
add
scas
xchg
mov
sbb
lret
das
and
or
cmc
mov
push
xchg
or
rorb
push
pop
sbb
fucom
cmpsl
push
mov
call
mov
sahf
nop
lret
adc
xor
push
fildl
cmpsb
push
push
and
push
or
lock
push
sbb
mov
xorb
das
js
ss
ja
or
sbb
sub
cmp
pop
jl
int3
mov
lods
fincstp
aam
mov
pop
mov
jae
push
xchg
clc
test
and
or
mov
or
adc
cltd
mov
js
pop
ljmp
out
loop
data16
dec
scas
sbb
jp
sbb
xchg
xor
push
je
and
sbb
lods
xor
movsl
outsl
push
shl
xchg
mov
push
and
cmp
mov
addr16
push
add
mov
inc
pop
ret
les
cmp
sbb
mov
xor
icebp
aad
hlt
es
scas
dec
jle
mov
aad
shr
pop
xor
xchg
cltd
aam
mov
aam
mov
pop
adc
pop
sub
mov
inc
aam
or
scas
pop
fs
pop
xor
cmpsb
cli
mov
pop
sub
mov
mov
sbb
test
fcoms
lcall
jb
add
shr
pop
push
les
sahf
sub
mov
stos
mov
fwait
push
std
mov
xchg
mov
pop
pop
adc
inc
rcrb
enter
int3
inc
cwtl
scas
mov
mov
jl
cmpsb
jnp
adc
fwait
nop
mov
pop
icebp
ja
aam
add
in
xchg
sbb
xchg
int3
repnz
sub
and
jbe
add
popa
roll
bound
clc
push
push
inc
icebp
jecxz
fs
sbb
or
mov
push
in
ret
xlat
push
xchg
adc
popw
int3
jle
inc
cmp
jle
push
cmpsb
adc
mov
jmp
repnz
xchg
mov
jg
jl
call
outsl
fldt
clc
insl
or
adc
push
push
pusha
inc
aad
xor
sbb
xchg
loope
xor
cli
cltd
in
jns
push
mov
dec
mov
adcl
ficoms
xor
mov
mov
shr
adc
add
out
xor
pop
lahf
add
sti
add
inc
rcrb
xchg
movsb
pop
stc
xchg
fdivrs
pushf
les
xor
jmp
sbb
and
outsl
ljmp
push
movsl
mov
mov
add
scas
aaa
lods
pusha
xchg
or
stos
outsb
pmullw
dec
movsb
fmull
lock
and
push
inc
lcall
cmp
hlt
ja
push
sbb
cld
inc
shl
out
jmp
xchg
jl
ret
popf
aam
adc
cmpsl
bound
sbb
fimuls
mov
adc
paddq
cltd
cs
dec
sub
cmp
imul
hlt
stc
scas
xchg
loop
and
inc
repz
data16
jl
mov
dec
stc
sub
xchg
mov
mov
mov
pop
mov
filds
xor
sbb
call
mov
push
dec
mov
stos
roll
mov
sbb
push
and
jne
pop
jb
dec
fisubs
jo
xchg
xorb
mov
fistpl
fiaddl
sbb
add
inc
data16
sarl
inc
repnz
aas
mov
in
imul
std
ljmp
pop
and
mov
and
shl
mov
mov
add
sbb
cmp
add
sbb
fwait
mov
fmuls
or
pop
cltd
cs
imul
pusha
push
out
jmp
push
imul
mov
loop
das
xchg
inc
stc
or
or
xchg
or
mov
xchg
negb
outsl
cwtl
cmp
inc
insb
dec
dec
out
cmp
dec
and
and
shl
icebp
jecxz
test
cmp
or
nop
inc
xchg
adc
enter
lock
aaa
inc
loopne
ret
xor
pop
test
sbb
xchg
leave
fwait
inc
lret
sbb
push
fwait
lcall
and
push
pop
mov
adc
cmpsb
mov
fstl
pop
in
adc
into
leave
lcall
dec
out
or
rcr
pusha
mov
mov
out
mov
lahf
push
test
mov
shr
loopne
jo
es
sub
scas
scas
in
insl
mov
inc
mov
xchg
fninit
in
adc
aas
dec
test
repnz
lea
ja
movb
aam
hlt
and
push
or
leave
push
les
mov
mov
shr
add
pop
cmp
mov
enter
je
sub
sub
cltd
cmc
xlat
pop
mov
pushf
sub
pop
std
out
jle
mov
or
cmp
inc
mov
push
and
scas
daa
dec
sti
xchg
mov
mov
xchg
cwtl
jge
or
sub
mov
cltd
mov
gs
cwtl
add
inc
hlt
mov
add
sbb
adc
movsb
clc
dec
xor
pop
bound
mov
fildll
add
scas
xchg
out
pushf
stos
mov
repz
rcrb
adc
jne
out
inc
xchg
mov
xor
les
hlt
cmc
mov
imul
lcall
fisubs
jg
repz
inc
push
cmp
test
sbb
outsb
fbstp
mov
xchg
aam
fwait
out
hlt
jmp
jbe
add
in
and
inc
ss
push
imul
and
out
xchg
mov
push
ljmp
jecxz
repnz
mov
adc
mov
push
fwait
mov
stos
pop
or
fdiv
mov
and
hlt
and
fcmovnb
jmp
cli
adc
push
fisttpll
mov
lcall
add
popf
fisubrl
cmc
cmp
fdivrs
xchg
push
pusha
les
fsubrs
adc
xchg
sahf
sub
xor
scas
addr16
test
add
hlt
hlt
scas
cmp
sub
and
sbb
push
mov
and
mov
aam
mov
or
mov
sub
xchg
aas
adc
dec
out
or
or
cmp
sub
cmpsl
movsl
aaa
shrl
mov
pop
outsb
insb
push
rcrl
or
pusha
loopne
dec
jb
pop
std
sbb
rclb
fdivs
push
dec
xchg
inc
cld
fwait
or
or
enter
xor
xchg
xchg
imul
sbb
lods
jl
mull
inc
shl
push
sbb
int
or
cmp
iret
lods
jne
bnd
roll
sub
jnp
xchg
jg
mov
movsl
nop
stos
mov
stc
icebp
sub
cwtl
out
inc
mov
rclb
mov
movsl
dec
mov
jne
adc
out
mov
and
insb
push
clc
roll
push
jo
insl
inc
lret
insl
sbbb
adc
sahf
xchg
test
cltd
adc
and
sub
add
sub
cmpsl
mov
push
xor
xor
call
push
xor
xchg
mov
xchg
setle
clc
push
jle
out
jmp
sub
xchg
loope
daa
pop
das
daa
mov
loop
push
addr16
sti
stos
sbb
pop
arpl
addl
pop
or
xchg
imul
test
inc
xor
lret
mov
call
leave
push
mov
enter
sub
aam
inc
aad
and
call
fistpll
xchg
mov
ret
loop
ret
int3
je
cltd
imul
xor
fadds
xor
ret
sbb
shrl
cmp
mov
pop
cmp
inc
sub
xchg
push
out
outsl
inc
or
push
out
jmp
ds
or
sbb
mov
sub
inc
cmc
leave
xlat
or
xchg
repz
test
repnz
mov
or
repz
insb
imul
aas
pusha
mov
lret
xor
sbb
add
stos
xor
xchg
inc
push
ja
imul
push
int3
in
fdivrl
cwtl
fadds
aad
outsb
pop
stos
pop
or
scas
mov
ja
mov
inc
int
fidivs
cmp
fsubrl
mov
lock
aad
cmp
or
ret
mov
popa
add
xchg
lahf
mov
ss
inc
insl
or
jns
insb
push
xchg
inc
ret
jb
roll
dec
jecxz
mov
ret
xchg
mov
fs
jp
das
pop
xchg
enter
xlat
mov
xchg
incl
mov
fcmovnb
stc
lahf
pusha
fstpl
or
loopne
rorl
mov
pusha
es
push
jecxz
inc
inc
pop
and
mov
mov
fdivl
int
dec
cmp
cmp
outsl
xchg
fidivrl
jne
inc
jge
or
mov
daa
test
and
sbb
repnz
in
cmp
lods
xchg
cmp
inc
in
or
outsb
das
jp
xchg
sti
dec
in
rorb
stc
into
call
push
into
inc
jge
adc
inc
push
andl
mov
or
jnp
clc
mov
int
add
jl
jmp
jbe
push
mov
fisubl
loopne
jnp
out
lcall
ja
push
jne
push
sahf
push
xchg
inc
pusha
push
imul
push
push
cltd
sbb
fwait
lods
movsl
xchg
loopne
push
dec
jae
jmp
fistl
xchg
scas
pusha
mov
mov
ds
mov
mov
inc
sarb
sub
adc
aad
jecxz
aaa
lods
fnstcw
in
and
sub
test
pop
pop
out
pop
mov
and
pop
xchg
ret
jbe
cmp
cmp
lret
xor
xchg
cmc
notb
mov
xchg
add
inc
jne
orl
and
jo
pop
lahf
push
mov
repz
xor
dec
sar
jle
icebp
pop
repz
and
lea
xchg
jp
outsl
lahf
mov
push
push
push
xor
pop
adc
inc
adc
leave
test
mov
add
jmp
cwtl
clc
add
push
scas
fs
in
mov
lods
xchg
mov
nop
and
push
cmp
or
add
cld
xchg
ja
push
xchg
lret
dec
ljmp
adc
add
cwtl
outsb
sbb
adc
dec
cmp
xchg
pop
mov
jmp
mov
out
data16
popf
sub
arpl
mov
push
aam
push
fmuls
loopne
dec
ds
inc
adc
add
outsl
daa
mov
jo
adc
sbb
iret
mov
jno
outsl
aad
sub
popa
mov
adc
cltd
xor
cmp
push
fimull
inc
lret
hlt
cmpsl
jp
mov
push
fs
aam
xor
insl
int
test
into
fisubl
stos
call
lea
push
or
xchg
std
jae
pop
jne
push
add
ds
push
xchg
pop
das
in
add
repnz
lret
js
mov
sbb
ss
adc
pop
pop
cwtl
cmc
out
push
das
test
movsl
enter
xlat
or
sub
imul
test
jmp
jns
cmpsb
add
int
lcall
mov
and
pop
pop
mov
imul
insl
scas
mov
xchg
jp
mov
adc
ds
into
or
and
xor
pusha
stc
mov
xor
fs
cmp
mov
sub
aad
adc
mov
aam
stc
mull
mov
popa
and
sub
push
jge
lock
fs
pop
mov
adc
xor
sbb
adc
push
inc
xor
mov
fdivs
pusha
lahf
push
jp
sbb
aam
adc
dec
xchg
sub
icebp
mov
and
sub
fiaddl
mov
or
out
jp
out
jbe
mov
bound
mov
push
mov
cmp
in
popa
pop
fiadds
xchg
rolb
les
test
adc
mov
mulb
setg
dec
out
jle
and
mov
push
jno
mov
fidivrs
and
or
and
fldt
xchg
xchg
iret
mov
aas
push
add
add
ds
jmpw
fdivl
jo
nop
loope
and
push
sti
dec
shlb
push
jecxz
fdivrs
cmpsl
xor
jg
mov
in
adc
adc
out
out
adc
dec
loop
hlt
inc
push
fwait
subl
mov
iret
repz
push
adc
pop
flds
outsb
xchg
jge
lcall
sbb
mov
sub
mov
jo
sub
leave
loop
and
jp
stos
insb
orl
fstp
rcrl
jmp
inc
out
pop
and
or
pop
in
repz
mov
or
out
into
cli
out
sub
mov
pop
mov
loope
fistpll
ljmp
or
iret
jbe
or
mov
push
out
testb
stos
idivl
jns
pop
mov
aas
mov
shrl
nop
enter
mov
aaa
sbb
arpl
flds
and
inc
dec
pop
adc
xchg
jns
sbb
stos
and
mov
mov
data16
cmp
jecxz
xchg
and
aas
push
repnz
dec
mov
add
add
fs
icebp
push
push
push
jo
cli
pop
inc
outsb
and
jle
jmp
inc
push
or
sbb
sbb
in
and
lahf
xor
stc
inc
inc
jg
dec
iret
push
sbb
xor
push
rcr
not
add
pop
insl
int
imulb
in
ja
adc
daa
insb
or
and
lret
xchg
scas
cmp
dec
out
xchg
pop
das
mov
pop
fs
nop
je
sbb
cld
dec
mov
adc
jno
jne
adc
lret
or
sbb
cmp
xchg
imul
dec
ret
fsubrs
mov
cld
cmp
jp
pop
loope
add
lahf
xor
loopne
push
jmp
adc
sub
sub
enter
mov
addr16
push
insl
ds
adc
mov
icebp
sbb
cmp
mov
pop
daa
inc
insl
outsl
xchg
mov
lret
fisubs
pop
in
inc
or
cmp
fstpt
mov
or
testb
les
push
cmp
mov
adc
test
mov
pop
fcom
jae
pop
add
cld
xchg
jnp
inc
cmp
loop
int3
outsl
jno
jb
outsl
pop
int
jle
leave
cmpsb
hlt
fsubrl
adc
push
fwait
push
adc
cmpl
push
pop
les
push
mov
loopne
fsubp
mov
pop
imull
mov
mov
adc
aaa
in
icebp
jmp
adc
notl
ljmp
test
vmwrite
add
scas
scas
out
inc
addb
inc
lods
sbb
cmc
fnsave
push
cltd
hlt
fldenv
sbb
outsl
shlb
arpl
mov
pop
rcrb
clc
mov
and
pop
leave
push
and
jmp
push
stos
cwtl
in
test
adc
gs
inc
or
push
xchg
jl
jbe
dec
ret
lock
inc
lret
sub
loopne
xchg
fwait
inc
add
push
xchg
cmpl
mov
sub
adc
dec
add
iret
xchg
loope
roll
sub
repnz
stc
adc
or
ljmp
sub
push
stc
sub
rorl
inc
cmp
inc
mov
pop
sti
mov
and
xor
xchg
in
fiaddl
add
sub
out
pushf
shll
mov
shrb
std
jno
hlt
cmpsl
xor
sub
outsb
xor
push
aam
ret
insb
jecxz
popf
xor
sub
shlb
out
mov
dec
cwtl
push
cld
add
in
mov
or
sbb
xchg
jmp
aas
nop
test
lods
lods
xchg
mov
dec
lock
add
lahf
xchg
sbb
cmp
jnp
mov
or
call
jp
mov
in
jno
sbb
in
push
loopne
cwtl
popf
out
pop
cmp
cmp
and
test
in
jmp
jae
cmp
xor
loop
inc
xchg
ljmp
adcb
popf
or
xor
mov
jle
mov
inc
sarb
pop
ss
jl
xor
mov
xchg
dec
pushf
xchg
jg
out
lods
testl
sub
int3
bound
cld
adc
dec
dec
mov
and
inc
and
pop
inc
push
mov
cltd
outsb
xor
icebp
dec
je
sbb
ja
xor
cli
mov
rorb
push
xor
cld
js
or
push
fwait
xchg
int3
mov
icebp
mov
loopne
lret
subl
rol
dec
mov
into
mov
xor
inc
in
jge
fldl2e
sbb
rcll
insb
leave
xor
push
lods
jo
fs
cmp
dec
insb
sbb
mov
fdivrl
mov
pop
or
scas
shrl
std
movl
loope
ss
mov
add
add
lcall
xchg
shrl
scas
fidivs
push
ficoml
push
bswap
mov
or
cmc
mov
dec
jae
mov
xchg
fisubl
outsl
jnp
push
negl
jo
mov
clc
cmp
xor
jg
cli
push
sti
popa
lcall
movsb
rorb
sub
adc
cld
sbb
je
andb
fistl
push
mov
push
xchg
movsb
pusha
xor
mov
mov
enter
push
testl
cmp
cltd
push
aas
mov
add
rcll
mov
mov
add
nop
inc
imul
lahf
and
loope
dec
sub
shlb
out
les
lret
rol
sbbb
rorl
jg
int3
mov
repz
js
dec
cld
and
mov
push
stos
mov
mov
jno
push
arpl
xchg
push
jge
test
mov
dec
outsl
or
inc
inc
xchg
cld
out
add
fsubs
jge
pop
adc
xchg
cwtl
mov
dec
and
inc
out
pusha
stc
lret
das
nop
inc
icebp
imul
push
xchg
lds
adc
jmp
push
mov
stc
add
fbstp
adc
xchg
mov
mov
cmpsl
jnp
arpl
std
insb
dec
insl
cmp
pop
or
lcall
sub
jo
xchg
mov
fwait
pop
clc
pusha
outsl
rorb
iret
or
inc
iret
ss
cltd
test
call
test
xor
int
in
push
adc
js
add
scas
imul
mov
stos
or
mov
push
movsl
fldt
test
mov
pusha
adc
ret
stc
sbb
in
lret
mov
ret
and
pusha
sub
orb
sbb
das
xor
mov
mov
mov
cmpsb
pop
clc
shll
clc
push
jle
arpl
jne
pop
and
adc
xchg
in
imul
divl
add
data16
sbbb
aam
sti
clc
cwtl
mov
push
jmp
imul
insl
and
cli
cltd
fistpll
push
cli
fdivs
fs
xchg
rol
loop
addr16
das
mov
out
out
loop
or
jno
orl
outsl
or
adc
jo
lock
xchg
orb
inc
mov
out
push
push
push
or
test
ljmp
shr
iret
imull
mov
loope
mov
lock
cmpsl
aam
xchg
nop
out
icebp
pop
push
out
subl
stos
test
xlat
fdivrl
xor
std
push
mov
fildll
ljmp
push
fisttpll
jmp
push
aam
js
popf
sarl
xor
adc
std
leave
dec
jmp
mov
cmp
fiaddl
add
out
fildl
neg
and
dec
pop
in
adc
sub
jp
leave
not
daa
and
ret
and
mov
cltd
xchg
ljmp
lahf
pop
pushf
mov
jle
adc
xor
test
mov
push
sub
dec
je
fs
lahf
mov
adc
aad
jge
xchg
dec
sahf
aad
mov
int
sti
stos
jp
sarb
mov
in
filds
test
jo
lock
mov
rolb
pop
lcall
gs
cmp
fsubr
ljmp
dec
push
fdivp
pop
notb
inc
dec
jle
xchg
loop
and
pop
mov
leave
test
out
mov
xchg
push
xor
sbb
lcall
xor
aad
roll
sub
call
jecxz
andb
or
pop
mov
sbb
test
mov
mov
ret
outsl
inc
mov
add
cltd
push
add
pop
pop
aaa
mov
dec
rorb
push
add
test
add
cmp
jg
or
mov
push
push
popa
ret
shrb
adc
shlb
cmp
adc
hlt
test
xchg
jg
dec
push
mov
fistpl
lock
inc
xor
xlat
shl
inc
push
dec
or
stos
lea
add
push
das
or
loope
cltd
sub
push
rol
adc
neg
add
js
imul
mov
in
aaa
sbb
mov
xchg
repnz
adc
lret
clc
xchg
test
cmp
push
sub
or
xor
push
inc
sahf
jmpw
xchg
cmpsb
dec
dec
bound
jbe
jg
vdivsd
sar
lcall
jecxz
sahf
sub
xor
insl
push
inc
ss
inc
in
jmp
pop
push
addr16
in
pop
aad
push
arpl
sub
dec
out
cmp
iret
adc
jns
jle
pusha
and
mov
rcll
imull
jnp
addb
xorb
cmp
push
sbb
sbb
lahf
ljmp
mov
into
lock
mov
stc
mov
add
inc
inc
jecxz
imul
cltd
sar
sahf
xchg
mov
sub
push
add
sub
fwait
mov
push
out
xchg
mov
jnp
adc
lods
hlt
push
xchg
mov
ss
iret
sub
insl
fisubl
inc
jae
xor
sub
add
jae
das
cli
mov
mov
and
push
lock
pushf
or
lea
or
in
fnstcw
enter
xchg
lcall
daa
mov
push
xlat
movsl
sahf
push
mov
cmp
stc
cmp
jecxz
inc
in
cmp
jg
cltd
mov
subl
pop
jmp
mov
inc
push
enter
sbb
subl
push
mov
out
loope
sub
aam
test
jmp
mov
and
addr16
and
test
outsb
jp
ret
ljmp
les
add
stos
inc
inc
add
jge
dec
dec
push
mov
fwait
cmp
gs
pusha
scas
fmuls
pop
ljmp
pop
out
fwait
mov
xor
inc
push
cmp
jmp
push
cld
pop
pandn
jo
mov
sbb
push
sbb
cmp
call
and
test
mov
push
mov
in
stc
sub
jb
orb
fs
add
cmp
pushf
out
pop
scas
in
and
fadds
xchg
fidivs
loopne
rorb
lock
mov
add
jg
mov
inc
out
je
movb
mov
cmp
push
push
dec
cmpsl
inc
daa
jno
push
fnsetpm(287
and
pop
dec
or
and
sbb
sbb
mov
ret
and
cmp
and
cmp
loop
xorb
dec
mov
push
mov
fldt
push
xchg
jmp
pop
pop
pop
out
mov
cmp
lret
push
adc
inc
js
mov
or
dec
adc
popa
pop
cmp
jg
or
popf
mov
mov
out
imul
mov
sub
pop
push
inc
cmp
push
sub
in
mov
pop
jmp
sub
inc
lds
addl
test
jno
push
popf
scas
inc
fucomp
pop
clc
data16
cmp
pop
test
sbb
insb
lds
mov
test
xchg
adc
sbbb
lock
fdivl
scas
adc
aam
cwtl
sbb
icebp
push
nop
cmp
push
mov
jbe
lcall
sbb
push
mov
mov
test
adc
in
leave
adc
push
pop
in
insb
push
pop
ljmp
stc
inc
cltd
out
lds
xor
sbb
push
xor
mov
into
or
pop
shlb
fisubl
call
xchg
fildl
int3
pop
add
int3
pop
push
or
jg
lcall
popa
inc
or
mov
sub
sub
testl
inc
test
jbe
in
pop
out
iret
jne
mov
inc
ret
pop
pop
in
andl
shrb
pop
cltd
mov
shll
mov
sub
xlat
pusha
xchg
cmp
mov
scas
ss
dec
jne
fwait
je
bound
pop
or
in
hlt
push
pop
lahf
adc
mov
cmc
ljmp
cltd
mov
pushf
dec
xchg
jo
or
adc
lcall
daa
pop
lret
jne
add
mov
andl
push
cld
xor
testl
sub
lret
xchg
and
jecxz
push
fs
outsl
pop
or
xor
mov
pop
idivb
add
adc
lret
jae
xor
or
add
cltd
mov
pop
inc
mov
lods
stc
inc
add
repnz
inc
mov
test
xchg
push
pop
imul
sbb
xor
and
and
addr16
lea
sub
sub
scas
jbe
push
adc
pop
sbb
add
call
out
sub
dec
fisubl
push
mov
scas
xchg
adc
sub
sbb
cmpsl
or
pushf
and
pop
addr16
jl
loop
lret
rolb
inc
dec
inc
push
or
inc
loopne
adc
rolb
push
jo
in
adc
push
lock
xorl
negb
fmull
shll
jl
mov
xor
mov
nop
in
pop
xchg
in
fdivrl
pusha
mov
inc
hlt
adcb
add
push
push
test
arpl
pop
pop
sub
xchg
sub
repz
cmp
loopne
sar
aam
lcall
cmp
mov
iret
sbb
loop
shlb
xchg
push
jnp
adc
push
sub
xchg
js
js
jp
sbb
div
jb
mov
mull
push
pushf
push
push
sub
sub
sbb
add
stc
insb
push
aaa
and
in
sahf
mov
iret
rclb
cld
pop
outsb
clc
lea
push
sbb
sti
out
leave
cs
subl
jns
daa
fisttpll
shrl
jns
ss
call
leave
daa
cmp
mov
call
add
xor
mov
fcoml
xchg
out
leave
aas
cmpb
aas
sub
fcmovnu
daa
inc
cmpsl
mov
dec
jg
mov
insb
cltd
push
es
adcl
out
and
mov
sbb
mov
outsl
in
fistps
addr16
leave
lret
imul
jle
xchg
jge
sub
adc
mov
jecxz
lods
clc
stos
dec
fadds
rcrl
push
cmpb
add
or
adc
jmp
dec
test
push
lds
ficomps
adc
daa
inc
push
mov
add
sti
es
dec
dec
sbb
sbb
inc
add
mov
jle
xchg
add
int3
xchg
bound
hlt
roll
shll
pop
or
cmpsb
adc
je
int3
xor
dec
mov
outsl
xchg
mov
fimull
cmp
cmc
dec
es
into
xor
mov
sbb
aaa
xor
icebp
mov
sbb
sub
sar
mull
inc
or
mov
cmpsl
scas
cli
xor
mov
dec
mov
aaa
cld
mov
adc
xor
xlat
jecxz
insb
fcmovnb
push
shlb
ja
adc
ret
rcll
lea
shlb
xchg
push
inc
push
dec
xchg
xchg
jne
xor
fwait
mov
mov
add
in
mov
add
in
mov
loop
xor
faddl
not
iret
in
xchg
push
xor
sbb
lret
xchg
adc
out
inc
sub
sub
testl
loope
je
sub
push
data16
shrl
ret
sbb
xor
mov
ja
scas
jne
lods
sar
popa
push
lds
jnp
loopne
rcl
add
adc
xchg
pop
ds
push
stos
cmc
pop
inc
in
and
mov
mov
jne
add
fstl
in
pop
mov
pop
test
jae
test
pop
adc
xchg
jbe
out
dec
cmp
orl
and
cld
dec
in
stos
imul
adc
loope
adc
sbb
lcall
or
push
jecxz
push
xchg
mov
shrl
add
xor
inc
inc
in
lret
push
scas
ljmp
and
add
mov
xchg
mov
sub
push
or
fs
xchg
cmp
imull
pop
aad
das
xlat
jmp
push
ja
sub
int
sub
test
loop
mov
add
outsw
push
xor
fdivr
popf
or
xor
jl
cli
mov
mov
lret
fwait
out
imull
and
add
imul
sub
mov
std
mov
lret
push
clc
jnp
lret
adc
mov
loop
in
mov
jp
and
int3
test
add
mov
sub
and
lods
pushf
test
cmp
sahf
int3
arpl
shr
int
pop
loope
les
pop
out
mov
pop
fwait
xchg
jnp
add
jmp
mov
pop
add
xor
sbb
add
dec
arpl
mov
cmp
call
pusha
mov
sub
les
cmp
sahf
xchg
arpl
mov
and
xor
ror
insb
lods
push
mov
xchg
lret
mov
dec
xchg
jbe
and
int
push
mov
mov
vmovapd
stc
bound
sbb
gs
out
lods
and
add
xor
pop
in
in
pop
xor
mov
pop
test
pop
jmp
pop
icebp
mov
mov
les
clc
push
mov
push
or
lea
xlat
mov
shlb
xor
rorl
cmp
jno
cs
inc
sub
and
imul
mov
lcall
cmp
pop
les
dec
mov
xchg
gs
shr
inc
testb
or
push
ret
int
pop
ret
pop
cmpsl
add
dec
mov
mov
ret
pop
dec
sub
std
cs
sub
inc
lcall
sub
dec
adc
or
aaa
cmp
dec
mov
out
aas
mov
ss
aad
dec
mov
cmp
lea
scas
adc
mov
mov
in
sub
xor
cltd
loop
jnp
mov
pop
mov
cli
js
imul
jecxz
xchg
push
ljmp
mov
pop
mov
out
cli
out
jae
mov
lock
out
lds
lods
mov
loopne
je
iret
inc
mov
call
repz
imul
sahf
fldenv
data16
outsb
lea
scas
pop
mov
iret
loope
or
push
cmp
int
jmp
xor
and
xor
mov
xchg
std
scas
ja
push
sbb
faddl
popf
lods
imul
fdivl
jbe
in
stc
rolb
and
xor
fwait
inc
cmp
dec
outsl
cmp
mov
inc
call
inc
mov
pop
mov
inc
lods
out
gs
loope
push
dec
test
fs
lods
lahf
lret
pop
xorl
jnp
in
lcall
andb
jp
and
mov
adc
stos
cmc
mov
jne
fsubrl
and
and
adc
adc
out
into
jg
mulb
or
ds
es
jne
mov
sub
nop
popf
enter
pop
dec
mov
xor
push
fisubl
incb
jle
mov
mov
data16
sbb
int3
sbb
xchg
pop
mov
sbb
jb
addl
xchg
push
xor
xor
fs
dec
shlb
nop
adc
or
or
imul
repnz
std
dec
jmp
adc
and
cmpb
mov
pop
stos
xchg
bound
rcrb
mov
test
stc
push
mov
inc
inc
inc
sub
shrb
leave
push
xor
lret
mov
call
dec
movsl
ljmp
dec
sub
push
enter
hlt
ret
jo
mov
pushf
enter
fldcw
out
cmp
cs
mov
enter
loope
cmpsl
les
jbe
out
insl
inc
jne
sub
inc
cld
xor
lret
ja
and
cld
xchg
jge
daa
in
icebp
push
cltd
jge
mov
jnp
lea
je
cs
add
aam
push
lahf
dec
lds
cmp
sahf
out
scas
or
adc
and
mov
push
pop
inc
mov
repz
gs
test
mov
in
out
lds
dec
lods
cwtl
scas
imul
data16
sub
adc
lods
test
mov
pop
inc
add
fnstsw
das
loop
pusha
daa
in
jp
mov
dec
and
aaa
jp
fidivrl
js
inc
push
and
in
ss
std
or
or
xchg
mov
clc
int3
sub
inc
lret
xchg
add
mov
sub
push
repz
in
mov
push
xor
push
insb
add
fstpl
stos
push
aam
les
add
xchg
push
inc
es
addb
das
sbb
imul
mov
fdivp
mov
data16
loopne
inc
call
out
inc
in
cmp
arpl
loope
mov
sbb
lea
bound
and
ljmp
clc
popa
lea
add
xor
dec
sbb
stos
push
sub
sahf
dec
pushw
or
cmp
cmp
xor
xchg
dec
fldcw
rolb
cmpsl
nop
into
mov
movsl
cmpsl
inc
call
fcoml
pop
mov
out
repnz
add
and
aas
js
testl
and
call
andl
inc
push
or
sti
scas
call
adc
and
cmp
dec
push
cmpsb
outsl
lock
jnp
inc
mov
push
mov
jl
fisttpl
popf
decl
adc
shrb
enter
es
sbb
aaa
adc
stos
pop
sarl
push
xchg
sarl
in
stc
adc
jecxz
ret
daa
add
cmpsb
mov
in
lcall
xchg
xchg
xlat
push
jns
js
jo
xor
or
fs
xlat
out
mov
sub
mov
pop
sahf
mov
cli
adc
cmp
loopne
lods
or
sbb
ret
idivb
lock
cmp
fwait
pop
pushf
adc
inc
push
test
dec
cmp
push
push
or
cmp
jbe
fsubrp
and
adc
test
xchg
out
hlt
xchg
sbb
dec
ja
stc
mov
fldenv
xchg
icebp
add
push
dec
int
adc
inc
cmp
or
push
mov
cwtl
pop
xor
cmp
arpl
dec
push
fldl
out
mov
hlt
imul
add
scas
cmc
hlt
movsb
cwtl
fwait
cs
mov
clc
push
repz
push
xlat
mov
daa
loopne
dec
insl
pop
out
cmp
mov
scas
stc
aas
sahf
arpl
fsubs
inc
orl
int3
pop
scas
fists
jg
sub
test
gs
sub
lods
mov
xchg
outsl
out
jle
gs
sbb
xchg
and
or
jecxz
sub
and
cs
sub
scas
pusha
ja
push
ja
cmc
xor
dec
push
out
in
cmova
push
test
xor
dec
lods
lods
adc
shll
decb
push
in
or
adc
aad
xchg
ret
pop
add
push
sub
outsb
xchg
mov
dec
mov
xor
mov
out
pop
repnz
insl
push
jns
call
fwait
das
xchg
jmp
cmp
sub
sbb
fiadds
sahf
cs
cmp
jb
and
sbb
xchg
sub
sub
inc
xor
jns
pop
push
ja
mov
std
arpl
xchg
out
pop
lcall
enter
sbb
cld
sbb
imull
daa
dec
mov
mov
sbbb
imul
xor
cmpsb
mov
ficoml
rcr
and
mov
cld
and
mov
mov
pop
mov
rclb
xchg
sbb
loopne
sbb
imul
xchg
sysexit
int3
add
or
add
jb
lea
repz
push
andl
aaa
cwtl
sub
roll
imull
or
mov
adc
jns
xchg
insb
addr16
leave
push
cmpsl
sbb
xchg
inc
ret
pop
rcr
in
jbe
adc
and
shll
and
lret
jmp
jmp
jmp
clc
pushf
cmpl
xor
jecxz
adc
dec
fs
sahf
test
sbb
push
gs
ret
cli
mov
pop
sbb
xor
loope
sbb
xchg
add
into
cmp
cli
insb
mov
adc
and
fs
cmp
adc
xor
repnz
into
cmp
xchg
jnp
fldl
roll
cmpsb
rclb
xchg
mov
jae
jmp
rcl
mov
mov
sub
popf
mov
sub
push
mov
xchg
jecxz
mov
push
mov
test
mov
fcomps
cmp
pusha
shr
xor
shr
xchg
movsl
inc
pop
or
jmp
inc
idiv
and
fcomip
mov
stos
lahf
cmp
lret
je
xlat
xor
orl
fnstenv
sbb
callw
mov
xor
and
mov
push
add
mov
pop
shrb
sbb
iret
xchg
push
rcll
insb
lret
jmp
jns
movsl
in
jnp
out
nop
fcmove
leave
jns
sub
sbb
lock
sarb
xchg
pop
pop
inc
push
leave
gs
imul
sub
insb
push
xchg
or
inc
mov
mov
test
enter
mov
test
or
les
stos
cmp
sub
jae
dec
add
imul
adc
jae
mov
dec
adc
xor
in
outsb
and
notb
loope
pusha
out
and
sarl
jno
dec
mov
insl
subl
mov
xor
stos
int
jns
stos
movsb
fsubs
gs
mov
scas
out
mov
loop
fwait
mov
inc
daa
mov
iret
ljmp
shll
mov
les
mov
mov
jo
rcl
xchg
pusha
push
arpl
jecxz
mov
and
or
xor
sub
mov
outsl
lret
xchg
movsb
and
pop
mov
xchg
nop
subb
std
sbb
jle,pt
dec
fiaddl
and
sub
fs
push
ret
inc
mov
inc
and
fs
fldl2t
mov
inc
cltd
ret
loop
je
add
mov
mov
pop
movsl
insl
xlat
orps
jecxz
inc
loop
imul
sub
test
fs
mov
jne
insl
cmp
aas
lods
pop
adc
add
inc
adc
mov
inc
dec
push
js
jno
cltd
dec
cmp
sub
xor
lods
sub
popa
inc
jmp
test
pop
je
xchg
out
out
mov
fdivrl
outsl
and
xor
or
test
addr16
cwtl
pop
fiadds
lods
shrl
push
pusha
jbe
fstp
int
decb
push
cmpsb
aaa
jle
jo
fisubrs
pusha
inc
sbb
sub
xchg
mov
or
or
stos
test
pop
in
jle
pop
fistpl
mov
xorl
mov
scas
push
jnp
fistps
jae
mov
adc
mov
sub
jne
dec
mov
xor
sbb
dec
add
inc
push
shrl
fsub
mov
fadds
out
cmp
out
add
ficoml
call
inc
jle
mov
mov
das
xchg
sbb
mov
sbb
shr
xlat
cmp
es
fldenv
add
out
test
push
stc
mov
pmullw
icebp
mov
ds
repz
lcall
sbb
adc
xlat
call
stos
pushf
jno
rolb
add
ljmp
test
inc
pop
lea
out
in
je
jnp
inc
mov
sbb
adc
mov
fs
mov
mov
aam
rorl
push
mov
mov
imul
and
xchg
cmc
lock
mov
sbb
stc
cmp
jo
out
daa
xchg
xchg
pop
rorb
jb
mov
fs
xor
stos
cmp
aas
push
data16
sahf
movsl
bound
fisttpll
int3
fcmovb
add
sbb
adc
jns
out
fists
data16
fdivr
cmp
xchg
jl
movsb
arpl
and
ss
mov
fldt
pop
imul
pop
mov
push
lret
cmp
imul
rcll
pop
xor
mov
jns
sub
jmp
inc
das
int
sub
mov
and
xchg
fistpll
cmp
outsb
rcrl
repz
nop
out
jo
dec
call
nop
aas
sti
add
mov
mov
push
ffreep
mov
mov
pop
push
clc
sbb
mov
inc
das
lcall
outsl
sub
mov
out
jb
cmp
scas
mov
mov
rol
mov
sub
jp
push
ljmp
or
fistpl
xchg
xor
jecxz
repz
jmp
rorl
mov
mov
fwait
inc
cs
sbb
mov
lret
mov
out
out
cmp
push
inc
in
inc
aaa
nop
pop
adc
iret
aad
mov
lock
push
ret
jl
push
jmp
sbb
aam
mov
sub
lahf
dec
cli
mov
adc
in
xlat
mov
sub
pusha
mov
xchg
arpl
or
jne
mov
punpckhdq
or
jecxz
xor
rcr
adc
fisubrs
or
inc
mov
aam
inc
dec
lea
cmp
mov
iret
adc
add
jle
fwait
fwait
scas
popf
mov
cwtl
lcall
jno
sub
mov
enter
or
mov
dec
jbe
jle
hlt
inc
popf
cwtl
xchg
dec
in
and
jp
xlat
sbb
lds
xchg
mov
popa
inc
xchg
lahf
movsb
loope
or
mov
fs
jl
int
mov
mov
mov
xchg
push
xorl
xlat
inc
arpl
cmpsb
repnz
mov
addl
test
xor
inc
pusha
lcall
dec
cmp
lea
das
cmp
sub
inc
jnp
stc
sti
leave
loope
scas
aad
xchg
sub
cmp
or
lcall
in
mov
rorb
push
and
jmp
jne
sub
xlat
pop
in
lahf
push
xor
lcall
ja
cmpsl
or
lds
clc
stos
adc
adc
popf
or
xor
int
or
dec
ret
push
lcall
pop
and
xchg
cltd
pushf
sbb
mov
inc
fstpt
mov
xor
adc
adc
in
and
mov
in
sub
jb
icebp
popf
push
cmpsb
cli
movsl
cmp
cmp
sarb
pusha
addr16
push
imul
shll
adc
ret
inc
andb
leave
inc
testb
xor
mov
add
inc
sub
lret
mov
mov
push
idivl
es
xchg
fstpt
ljmp
hlt
std
and
inc
paddb
mov
mov
testl
push
dec
packsswb
lods
in
add
es
push
andb
test
lahf
pop
add
jne
sub
popl
enter
pop
inc
aam
mov
test
xlat
push
mov
test
mov
xchg
sub
inc
iret
ja
lods
incb
xchg
fwait
xchg
fldl
mov
sti
cmp
push
xchg
mov
xchg
mov
scas
push
divb
jb
daa
popa
xchg
and
cltd
test
lret
loopne
outsb
push
dec
movsl
xchg
inc
aam
pop
data16
push
shlb
clc
sub
mov
cmp
adcb
adc
add
or
push
imul
ficomps
out
pop
out
ud0
pop
stos
test
fcmovnb
xor
loop
shll
xchg
ret
xchg
mov
dec
fnstsw
mov
mov
cli
ljmp
shr
rclb
and
sbb
sub
je
mov
push
sbb
pop
sbb
push
in
pop
and
sbb
test
fwait
test
push
enter
int
mov
pop
jg
jb
ss
repnz
ret
cmpsl
movsb
in
add
inc
push
jp
insl
cmp
cs
inc
sbb
sub
out
push
mov
aam
rorl
pop
jle
test
jb
es
xchg
sub
pop
jne
pop
push
xchg
int
mov
sub
mov
fcmovu
pop
jmp
dec
dec
call
xor
out
jb
or
ds
stc
mov
jnp
pop
add
pop
dec
ja
cmp
mov
mov
daa
pusha
xchg
stos
jge
rcll
pop
mov
xchg
push
insl
xchg
fldcw
lods
sbb
fcoml
int3
jnp
movsb
jns
ja
and
int3
aad
iret
cmp
push
adc
or
or
mov
push
dec
add
mov
xchg
clc
lahf
sub
mov
mov
js
mov
pop
ss
loop
std
push
mov
and
cld
inc
sbb
add
imul
lret
out
nop
fisttpll
in
sahf
mov
ret
jno
push
addb
cmpl
or
jns
or
xchg
stos
cmpsb
loopne
xor
xchg
xor
xchg
repnz
jg
mov
jno
jno
fldt
imul
pop
adc
xor
stc
dec
fs
jecxz
push
sbb
dec
xchg
inc
scas
and
adc
jmp
cltd
and
and
jp
repnz
jnp
in
and
sub
leave
xor
push
push
jnp
scas
pop
fsts
std
lea
or
fldenv
xchg
xor
mov
cmp
jns
xor
jl
loop
pop
mov
pop
repnz
gs
inc
into
lods
adc
fs
insb
mov
jne
scas
cld
ret
mov
fadds
out
mov
push
pop
fldenv
ret
jno
pusha
into
in
es
jb
ljmp
std
icebp
dec
repnz
mov
in
sti
mov
jbe
pop
add
xor
out
jns
aad
push
popa
mov
mov
dec
pushf
inc
sbbb
enter
mulb
xor
lret
xchg
mov
mov
sahf
movsb
and
fisttps
xchg
lcall
mov
iret
sub
sub
lea
outsl
push
and
pop
mov
mov
cmp
loop
xor
jns
dec
stos
clc
push
adc
icebp
hlt
push
fucomip
xchg
mov
fisubs
int
adc
mov
popa
inc
es
xchg
shl
mov
cmp
mov
cmc
ret
jmp
loope
sti
loop
pop
xor
mov
mov
mov
pop
mov
jb
mov
xor
dec
pop
xchg
inc
lret
imul
cmp
mov
into
shrb
aam
ret
ret
sbb
movsl
and
movsb
sbb
andl
mov
mov
inc
cs
pop
mov
das
adcb
mov
inc
addl
ret
lds
mov
lods
push
cwtl
hlt
sbb
pop
outsl
jmp
stc
push
push
jmp
gs
push
arpl
nop
mov
mov
push
sub
fwait
push
nop
jne
ret
aam
mov
daa
sub
es
mov
cmp
mov
inc
xor
or
cwtl
mov
jnp
je
sub
cmpsb
add
xchg
mov
out
dec
push
jnp
popa
rol
xchg
test
inc
mov
jecxz
and
add
mov
iret
mov
inc
fisubs
mov
stos
imul
lods
scas
push
inc
jmp
push
fdivrp
mov
sbb
lock
stos
int
jnp
dec
jge
sbb
mov
imul
in
repz
repnz
jnp
pop
fsts
add
dec
aas
dec
shrb
icebp
jnp
outsb
shlb
sbb
subb
shrb
sbb
jae
lahf
test
fisubs
adc
sbb
ss
push
sub
push
gs
xchg
rcl
repz
rep
sub
xchg
movsl
jae
std
sub
dec
and
stos
shll
fucomi
js
cmpsl
xchg
fwait
push
cmc
xor
jmp
xor
cs
pop
fildl
push
aaa
mov
dec
pop
dec
shl
sub
push
mov
mov
jge
push
inc
pop
jno
and
mov
mov
popa
into
push
js
imul
aaa
jg
xchg
sub
test
call
es
mulb
pop
cld
rorb
lods
xor
scas
and
out
inc
add
push
outsb
xchg
pop
sbb
push
push
ret
xor
mov
sub
or
lret
pop
andl
out
jae
cmpsb
jns
sub
sti
cmpsb
mov
cld
mov
das
fldpi
push
xor
cmpb
dec
adc
pop
ret
test
pop
addb
cmp
jae
insl
xchg
or
jo
jo
adc
jnp
outsl
adc
push
aad
ja
in
dec
sub
arpl
call
vrsqrtss
popa
jnp
inc
pop
scas
sbb
push
mov
jbe
and
stc
mov
stos
inc
mov
js
hlt
jno
jns
enter
cmp
call
and
jno
popf
js
and
jne
jns
cmp
mov
mov
pop
jge
pusha
adc
mov
lret
xlat
ficomps
lcall
in
mov
pop
pcmpeqw
pop
movsb
jp
popf
xchg
ljmp
adcb
xchg
das
mov
ds
dec
lahf
sbb
push
mov
test
cltd
add
ficompl
lods
sub
xchg
out
xor
popa
pushf
or
nop
or
and
adc
and
mov
jecxz
test
je
pop
enter
leave
mov
imul
adcb
clc
aad
lahf
or
repnz
ret
orl
and
adc
adc
out
in
inc
repnz
fbld
sbb
and
jbe
inc
and
jb
inc
jno
enter
mov
cmpsb
jge
push
dec
js
add
stc
adc
out
arpl
jbe
cmpb
mov
or
sub
sbb
fsub
pop
push
lods
js
loope
add
je
mov
inc
outsb
jne
outsb
stos
sahf
seta
cmc
dec
cmp
cmp
std
inc
dec
jb
sbb
test
mov
cmpsl
daa
mov
das
jmp
push
jo
je
aaa
pop
pop
sarb
push
dec
addr16
xchg
je
imul
or
enter
ja
or
dec
out
dec
outsl
scas
movsl
mov
jg
jmp
bound
iret
pop
sti
repz
xchg
push
mov
xchg
mov
xlat
push
addr16
and
hlt
sbb
xlat
mov
fistpl
test
sbb
nop
imul
ret
in
add
mov
leave
and
rclb
loopne
cli
lret
inc
sahf
test
xchg
or
sub
cwtl
pop
pushf
and
dec
cltd
fistl
insl
aaa
cmp
cmpb
pop
cld
js
inc
add
xor
inc
std
jl
mov
add
push
iret
fstp
imul
arpl
mov
push
sbbl
xor
or
fcmovb
ficoml
cmp
in
out
jl
mov
jbe
dec
mov
mov
aad
addr16
nop
pop
insb
mov
cltd
in
pusha
add
adc
adc
xor
rolb
add
invd
cmp
cltd
push
add
pop
aad
pop
in
jno
inc
xchg
add
xchg
and
mov
xchg
pop
test
lret
mov
aas
cs
adc
inc
xlat
mov
adc
out
ret
dec
xchg
inc
out
mov
and
es
xchg
outsl
arpl
sub
testb
jmp
into
and
jnp
and
mov
mov
mov
xchg
dec
cmp
dec
stos
pop
idivl
push
xor
lea
pop
cs
arpl
popa
mov
lret
jae
aam
or
test
mov
cmp
push
jo
push
lds
jecxz
fs
pop
pusha
inc
push
mov
xor
push
rol
in
shll
inc
daa
adc
rclb
inc
xlat
push
fs
hlt
cmpsl
dec
mov
shrl
pop
inc
sbb
sbb
lea
push
cld
addr16
mov
adc
dec
push
or
xor
test
loopne
push
cmp
loop
mov
leave
daa
lds
gs
and
enter
lds
sub
xchg
movsb
adc
fdivrs
aam
xchg
pop
push
gs
mov
scas
sbb
addl
addl
mov
sub
xlat
jmp
mov
or
jno
inc
inc
sbb
jecxz
arpl
loop
or
dec
mov
imul
xchg
dec
xchg
pop
xlat
fmull
push
xor
daa
dec
mov
xchg
imul
je
imul
mov
sub
ret
shll
add
arpl
das
or
ljmp
add
in
pop
jo
mov
into
mov
rorb
lods
sbb
or
sbb
cs
add
movsb
add
adcl
mov
loope
mov
ja
mov
out
sbb
adc
aas
mov
lods
or
minps
lock
in
adc
fmul
repnz
lret
pop
push
pop
je
sub
inc
mov
jle
mov
xchg
fwait
lret
leave
cwtl
mov
insb
ja
pop
addl
jmp
or
push
mov
je
dec
add
notb
push
leave
mov
pop
sub
inc
imul
jns
popf
pusha
cmp
inc
adc
inc
dec
mov
repnz
mov
inc
ret
adc
jmp
repnz
pushf
cwtl
int
cwtl
aam
gs
loopne
outsl
cli
scas
or
adc
aaa
aaa
orb
dec
mov
sub
aas
inc
or
cmp
mov
fwait
xor
es
mov
lret
dec
and
lods
jb
jmp
loop
ret
jge
dec
cmp
out
fst
jg
jbe
cmc
jnp
add
xor
push
imul
shlb
fwait
in
test
push
pop
addr16
mov
fdivs
test
cltd
jns
je
add
aam
cmp
jle
sub
mov
out
sbb
jnp
xchg
xorl
not
push
rol
xchg
pop
daa
push
push
ja
inc
out
out
inc
leave
mov
xor
in
push
lods
pop
xchg
aad
leave
push
in
mov
pop
js
nop
mov
mov
aad
pushf
dec
mov
addl
movb
pop
fimuls
jae
in
out
mov
mov
adc
pop
cltd
jne
jne
lods
aaa
push
mov
mov
lret
or
xrelease
sbb
subl
pop
ja
mov
jo
jb
and
or
cli
xchg
add
icebp
sbb
push
lret
push
jae
psrad
mov
lcall
inc
xor
imul
sbb
int
arpl
adc
data16
sub
pop
mov
mov
and
adc
push
je
mov
dec
lcall
fcompl
xor
stos
fistps
pop
fiadds
inc
push
imul
adc
xorb
xor
loopne
xorl
push
inc
and
std
movsb
clc
pop
enter
loop
fs
hlt
popf
mov
fs
cmovne
fistpl
fld
xor
or
rol
sbb
push
cltd
imul
push
pop
dec
inc
sub
lcall
jg
mov
shrl
ret
rcrb
imul
stos
xchg
lahf
jecxz
daa
push
sarb
fdivrl
adc
mov
das
push
push
sarb
pop
jb
insb
dec
sub
cmpnleps
jne
stc
imul
push
cli
popf
mov
bound
mov
mov
and
dec
aad
enter
jnp
rorb
stc
mov
adc
daa
rorb
call
push
clc
xor
dec
jnp
into
inc
test
cmp
jbe
pop
lods
ljmp
and
adcl
stc
and
push
sub
dec
ficoml
cmp
jo
pop
or
cmp
dec
hlt
sbb
sbbb
jle
stos
lcall
add
xchg
cmp
movsb
push
or
inc
or
cwtl
test
fiadds
fsts
insl
push
iret
filds
xlat
cltd
fwait
mov
ror
cs
adc
sbb
lods
pusha
pusha
aaa
sbb
test
aaa
push
aas
repz
push
jae
inc
gs
decb
int
enter
push
gs
and
sahf
inc
popf
sub
jne
mov
in
aas
mov
hlt
sbb
data16
mov
mov
add
sub
aam
sbb
add
sarl
and
cmp
sub
or
arpl
xchg
fcmovnbe
cld
dec
das
ss
cmp
and
pop
add
adcl
inc
add
xchg
ja
mov
icebp
stc
fstl
imul
les
push
push
dec
xchg
cmpsb
mov
ret
int3
fbld
sbb
jmp
subb
push
insl
cmp
aaa
lods
roll
push
test
add
push
jne
out
sub
movsb
pop
dec
daa
shrb
pushl
pop
insl
les
fisubs
mov
push
pop
pop
jmp
xchg
fisttpl
sbb
pop
sbb
push
push
lock
push
xchg
sbb
out
inc
dec
mov
pushl
push
movsl
nop
or
test
outsl
repnz
loopne
lds
inc
or
adc
adc
jbe
or
mov
adc
add
outsb
shr
clc
jns
and
lock
dec
push
int3
xor
lea
stos
lods
pop
pop
pop
mov
sub
xchg
xor
repnz
stc
fstpt
cmp
inc
push
mov
dec
xchg
popl
adc
adc
jnp
adc
mov
clc
xchg
sub
mov
push
mov
out
lock
and
mov
icebp
cli
imul
push
dec
sbb
rorb
fldcw
sbb
mov
imul
lret
sbb
xchg
les
aas
mov
call
sarb
roll
jp
mov
gs
push
fistpll
imul
pop
mov
mov
movsb
inc
popf
gs
and
cmpsl
bndstx
jne
and
pop
fs
cmp
les
sbb
loope
jecxz
inc
cmp
xor
pop
push
or
bound
addr16
add
shrl
rclb
jno
aas
fstpl
mov
mov
cmp
dec
test
stc
and
adc
jnp
mov
or
xor
mov
js
in
inc
and
add
pop
add
mov
sbb
pop
repz
insl
sbb
sbb
pop
out
or
cltd
cmpsb
mov
leave
ret
jmp
mov
jp
dec
mov
xor
fmul
sub
sbb
sub
js
stos
lcall
cmp
ficoml
es
jle
adc
jle
aam
cmpsl
aam
adc
mov
lcall
imul
mov
rol
mov
dec
data16
in
aam
daa
sub
das
pushf
push
and
pop
ret
test
dec
dec
mov
inc
insb
add
scas
push
es
aad
add
mov
mov
push
cmp
lods
inc
ja
push
and
jle
jg
add
lods
jle
xchg
inc
mov
js
stc
sbb
jge
jmp
iret
xlat
inc
xor
jae,pt
fs
jecxz
mov
movl
dec
adc
sub
mov
lods
sub
idivb
scas
mov
inc
xchg
test
mov
jge
testb
nop
std
add
in
fadd
lahf
sub
mov
flds
rcrl
jle
andb
loopne
pop
cmp
xchg
inc
rclb
cmp
test
pop
ds
mov
push
pmulhw
jno
pop
mov
and
cld
push
jmp
sub
sub
ror
cmp
pushf
mov
dec
aad
popa
pop
pop
ret
pop
mov
inc
and
mov
iret
or
popa
push
loopne
fstps
jae
fldenv
mov
gs
mov
xchg
lcall
stos
pop
cmpsl
lahf
stos
push
cmc
sub
clc
stos
in
add
addr16
je
mov
jo
jo
clc
lds
fdivr
push
shrl
adc
testl
test
subl
call
pop
aaa
push
aaa
data16
lahf
mov
arpl
dec
notb
inc
lods
and
mov
movsl
inc
sbb
mov
push
xchg
mov
sub
hlt
lods
int
mov
cmp
loop
lret
mov
push
les
test
decl
xchg
mov
pop
push
inc
push
push
call
or
ljmp
sub
mov
je
popf
ret
and
push
sbb
ds
mov
icebp
sbb
test
hlt
and
cmp
jl
dec
movsb
iret
xchg
jnp
or
cld
mov
stc
push
xchg
aam
data16
pop
enter
cmp
and
outsl
test
inc
int
or
sbb
dec
cmp
frstor
inc
or
mov
comiss
scas
xchg
or
fwait
cmpsl
mov
mov
outsb
negb
push
addr16
in
sbb
jnp
mov
outsb
dec
dec
push
mov
inc
dec
push
lods
mov
cld
imul
sqrtps
xchg
and
mov
aaa
or
mov
add
jle
inc
enter
popf
pusha
jno
dec
repz
jp
dec
xchg
sub
scas
ds
das
fstl
orl
sbb
stos
mov
das
cmp
xor
lods
roll
add
jbe
fnstsw
dec
int3
pop
stos
lret
loopne
test
xor
movsb
subb
mov
mov
sahf
cmp
fidivl
out
inc
dec
addr16
pop
or
leave
fistpll
repnz
xor
fcmovnbe
scas
mov
mov
cs
push
pop
lret
or
cmp
mov
clc
sub
shr
xchg
push
hlt
fucompp
add
sub
insb
jae
add
mov
xchg
ljmp
mov
add
push
jo
adc
cmc
sbb
pop
fcmovb
lahf
pop
lahf
add
jl
outsl
in
cmc
pop
adc
cmp
and
sbbb
cmp
cwtl
pop
mov
pop
into
movsl
sti
inc
imul
pop
out
sub
adc
sbb
inc
jb
pop
test
xchg
mov
push
idivb
and
or
add
cmpsl
daa
mov
mov
jbe
lods
pop
mov
push
lods
xchg
adc
jns
adc
fs
aam
xchg
jns
pop
add
adc
aam
adc
pop
icebp
repnz
leave
sti
jmp
aam
mov
aam
stos
xor
inc
dec
lods
sahf
cltd
iret
sbb
sub
push
push
ss
mov
cmp
fcmove
cmp
ljmp
testb
sbb
int3
fnstcw
test
and
sub
push
dec
adc
test
fcompl
cmpb
loope
arpl
insl
pop
testl
ljmp
test
add
das
xchg
cmpsl
jge
fs
pop
shrb
xchg
push
cmp
aas
std
cmp
aad
enter
aaa
sbb
xlat
xor
aaa
dec
sbb
cmp
data16
inc
mov
lods
enter
mov
dec
cmp
dec
stos
sub
cwtl
hlt
movsb
mov
mov
inc
pop
mov
icebp
imul
mov
sub
cli
mov
addr16
xlat
notl
mov
mov
sub
mov
adc
mov
and
js
test
jnp
loop
cmp
xchg
dec
hlt
fldln2
loop
pop
outsb
je
pusha
mov
jl
inc
fsubs
lock
jg
dec
xor
gs
push
std
inc
jl
icebp
out
xchg
jnp
add
popf
sbb
adc
adc
push
sub
lea
push
add
xchg
or
or
mov
shll
jp
cmp
push
addr16
xor
push
dec
xlat
xlat
mov
in
mov
inc
pop
sbb
xchg
inc
js
aad
fimull
push
ljmp
mov
ret
dec
loopne
or
mov
sub
repz
jno
rcrl
imul
test
adc
xchg
mov
sub
in
and
mov
mov
jne
imul
cmp
push
int3
cmp
mov
mov
out
pop
shl
outsl
rorl
cltd
cmp
jecxz
sub
mov
scas
pop
cs
mov
out
cs
xor
je
aaa
mov
in
jb
and
or
arpl
push
add
out
movb
dec
fsts
mov
mov
je
ljmp
aad
je
mov
dec
cmp
cmp
andl
and
call
or
inc
in
out
icebp
pop
push
jnp
dec
arpl
ss
mov
mov
push
add
sub
sub
xor
stos
dec
pop
sbb
jle
push
inc
call
cmp
fstps
ds
or
arpl
stos
push
flds
roll
sahf
xchg
insl
jb
gs
adc
pushl
outsb
adc
jmp
and
jg
clc
adc
pusha
aam
rclb
mov
mov
push
cld
sub
ret
push
push
jl
add
cltd
mov
shrb
outsl
adc
movsl
pop
cs
aas
lea
cld
and
xchg
out
inc
and
lods
data16
in
scas
adc
jp
jo
into
mov
es
outsb
pop
pop
fmuls
lcall
xor
montmul
cmpsb
push
and
call
leave
rorb
pop
aaa
adc
mov
pop
ret
fidivrs
push
jo
stos
mov
adc
inc
iret
inc
aam
std
jge
gs
inc
and
mov
fxch
fistl
lods
mov
les
mov
pop
or
neg
scas
push
dec
pop
cmc
lds
ss
or
les
sub
lahf
aaa
xor
popf
mov
pop
xor
cli
lret
jbe
lea
jl
cwtl
pushf
scas
clc
fs
sbb
sti
mov
pop
repz
cmp
mov
in
inc
dec
aam
clc
sbb
jmp
std
test
cmp
cmpsb
add
xlat
xor
add
or
rclb
sarb
mov
in
mov
pmuludq
sub
ret
push
mov
stos
js
aaa
cmp
mov
inc
ss
rcrl
mov
aam
xor
xchg
std
push
jl
cmpsb
fnstsw
loope
add
and
and
mov
daa
arpl
jp
mov
out
sbb
aas
sub
jbe
iret
mov
xor
mov
pop
lret
adc
mov
mov
outsb
lods
xor
aas
in
lcall
ret
fstl
xchg
xchg
jp
loop
mov
mov
pop
les
pop
aad
inc
dec
imul
mov
std
test
je
jge
push
jo
jle
sub
dec
xor
cmp
or
ja
mov
push
iret
loope
jg
mov
pop
cmc
in
jle
testb
sbb
cmp
je
add
pop
sub
cmp
in
cltd
outsb
cltd
cmp
and
pushf
stos
ljmp
push
shll
js
push
fsin
xchg
test
ret
add
push
pop
add
nop
dec
and
sub
aaa
psllw
sti
icebp
pop
stos
imul
mov
loopne
xchg
pusha
push
jae
adc
jmp
cmc
daa
push
sti
mov
xor
cwtl
scas
sbb
test
add
xlat
fnsave
jae
ljmp
push
mov
jo
test
push
dec
xlat
leave
mov
pop
and
or
or
jecxz
xchg
in
mov
jmp
loopne
sti
jbe
mov
sti
xchg
jno
lods
jbe
inc
push
jo
daa
xor
aas
js
cmp
push
cmpsb
scas
dec
mov
mov
adc
mov
and
or
rcr
cmpsl
outsl
sbb
hlt
xor
outsl
in
imul
les
std
stc
pop
test
sub
dec
push
cmp
push
stos
repnz
sub
mov
lock
push
lret
pop
push
and
xchg
aaa
cmp
push
outsb
jp
out
xchg
loop
mov
mov
std
dec
insl
scas
xchg
jae
add
sahf
mov
repz
or
cmpsb
push
pop
push
xor
adc
jnp
cs
pop
jg
aad
mov
sbb
jmp
insb
movsb
out
xchg
jne
lods
shr
and
movsbl
push
inc
scas
dec
loop
fwait
cmp
sbb
lock
fsts
fstpt
gs
loopne
iret
mov
iret
int
pop
sub
inc
mov
and
sti
cmp
stos
movsl
dec
loope
xchg
lock
mov
pop
jae
mov
lret
leave
frstpm(287
adcl
pop
mov
scas
sbb
inc
sub
fldt
call
and
imul
sub
cmp
lods
fcomp
into
mov
test
adc
add
cmc
and
lods
jno
pop
sub
mov
dec
or
jno
add
xchg
lret
stos
popf
add
scas
fs
mov
add
insl
lahf
or
adcl
test
mov
outsl
bnd
test
xchg
mov
add
push
adc
and
pop
sbb
fs
in
icebp
fwait
negb
enter
leave
xlat
mov
ret
outsb
pop
push
xchg
out
dec
sub
push
inc
mov
in
movsb
xor
loopne
and
pop
push
sbb
push
lahf
sub
jo
xchg
pop
sub
bnd
iret
inc
cli
test
dec
and
adcb
dec
mov
dec
jno
mov
mov
fldt
mov
movsl
and
loop
push
or
jbe
dec
lcall
adc
adc
clc
mov
mov
movsbl
add
sbb
xor
in
mov
sbb
adc
mov
paddq
pop
subl
pop
mov
aad
mov
in
negb
arpl
push
mov
or
inc
int
aam
cwtl
mov
popf
or
fisubrl
movsl
pushf
cmp
pop
mov
popa
sbb
mov
outsl
lea
inc
scas
ss
lret
mov
mov
dec
dec
in
or
fucomp
data16
popa
filds
mov
out
jnp
aad
loopne
stc
mov
rorl
fwait
mov
xchg
inc
add
mov
cmp
mov
js
pushf
jbe
jae
mov
cs
push
cmp
xchg
pusha
fsubr
cwtl
sbb
xchg
iret
sahf
cmp
cmp
adc
mov
push
mov
or
push
jnp
mov
lock
into
les
data16
gs
xchg
fstps
dec
add
inc
into
inc
cmc
cmp
aad
xor
jns
push
das
jo
ror
cmp
arpl
movnti
sbb
daa
lock
jae
popf
pop
nop
mov
lock
inc
xchg
mov
inc
jo
enter
sbb
pushfw
jo
rolb
pop
jb
push
fstpl
push
ss
sar
push
out
mov
dec
sub
lock
filds
loope
lods
push
subl
outsb
pop
sub
xor
in
ljmp
mov
jb
add
dec
mov
in
sub
cltd
lods
movsb
fidivrs
bound
fwait
ss
xchg
push
lret
sub
sbb
jmp
movb
jbe
xchg
pop
lret
push
add
and
ljmp
out
inc
dec
stos
sbb
loop
aaa
push
jnp
inc
leave
shll
adc
fbstp
sub
jbe
and
jnp
test
xchg
rcr
aam
pop
xchg
arpl
jge
dec
stos
jbe
inc
stc
rorl
nop
in
mov
cmp
add
sub
les
ss
cmp
cmpsb
cmp
shll
mov
jmp
mov
mov
mov
ret
jl
lds
notb
in
dec
and
sbb
xchg
mov
and
adc
adc
add
sbbb
push
dec
outsl
inc
pop
imul
and
int3
inc
aaa
data16
inc
add
jle
pop
out
mov
and
dec
xchg
in
inc
dec
sbb
into
fcomps
inc
outsl
mov
ret
dec
idivl
stc
xor
jmp
pop
fdivrl
jge
sahf
dec
and
clc
fwait
pusha
mov
jle
inc
popf
pop
jp
mov
lock
out
add
or
push
cmc
inc
cmp
and
cmp
inc
mov
cmpl
aaa
mov
rcll
adcl
lock
sbb
adc
mov
jmp
add
mov
jo
int
sub
xor
lods
pop
xchg
stos
jp
sub
mov
aad
push
mov
sub
or
mov
hlt
xchg
sub
sub
cwtl
fmull
xlat
hlt
setne
imul
int
sbb
cmp
jno
add
jl
fbld
leave
shld
jae
lahf
test
arpl
push
sbb
scas
mov
insl
jb
and
call
add
push
dec
cmp
pop
mov
insb
add
inc
and
lret
cmp
jnp
clc
fisubrs
cmp
adc
insb
lcall
mov
sbb
mov
jbe
inc
jb
dec
jp
mov
aam
xor
mov
lret
adc
mov
pop
mov
repnz
mov
mov
pop
adc
sub
outsb
ljmp
adc
ficomps
mov
outsb
adc
rolb
sbb
sbb
push
adcb
pusha
mov
sub
dec
pop
inc
shr
xorb
dec
mov
mov
adc
data16
mov
push
rorl
shl
cmp
cltd
mov
movsl
or
cmp
xchg
mov
mov
pop
inc
sti
dec
xor
daa
stos
sub
mov
lea
xchg
pop
je
jnp
fwait
mov
xchg
jmp
loope
mov
jecxz
pop
mov
fs
lods
gs
lahf
xchg
xchg
scas
aam
fstpl
cltd
mov
lock
pushf
cltd
adc
in
out
out
imulb
jns
insb
dec
repz
jl
dec
cmp
push
inc
lods
sub
adcb
iret
cmp
pop
xchg
nop
pop
fs
fisubs
fmuls
xchg
dec
int3
push
fs
aaa
jbe
push
into
in
sti
mov
pop
xorl
jmp
xor
call
test
imul
lods
xchg
pop
xor
mov
test
daa
enter
mov
jns
test
int3
mov
je
sbb
push
xor
insb
xchg
and
jb
jo
xchg
loop
popf
pop
pop
in
js
fisubrl
mov
les
push
xor
jl
bound
scas
mov
sbb
into
push
mov
shrl
stos
jp
shrb
xor
cld
cmpsl
enter
jbe
sbb
xchg
xor
jne
out
insb
lea
push
or
mov
push
cmpsb
outsb
je
stos
mov
mov
in
pop
inc
adc
lret
loop
lods
aam
mov
movsb
and
cld
jp
jno
cmp
or
inc
mov
test
xor
mov
jbe
adc
insb
mov
insl
jns
cld
testb
sarb
aaa
fsubrs
mov
loop
xor
sbbb
xchg
push
xchg
pop
mov
add
cmp
ret
jns
pop
xlat
movsl
hlt
and
rcrb
xchg
mov
jle
xchg
mov
movsb
or
insb
jg
mov
jb
mov
in
pop
in
dec
jp
xchg
int
das
push
mov
adc
dec
pop
aas
insb
dec
jno
cmp
aas
loope
shlb
dec
orb
andl
adc
in
sbb
mov
repnz
into
outsl
test
lods
and
das
bnd
mov
insb
cmpb
xchg
mov
adc
pop
xchg
add
popf
scas
loopne
jo
fstpl
mov
stos
pushf
arpl
and
inc
push
bound
sub
loop
inc
dec
pop
inc
mov
nop
inc
mov
inc
shlb
xchg
lret
push
out
out
push
js
jns
inc
mov
and
push
mov
shll
sbb
iret
lods
frstor
mov
xor
leave
cli
lea
pop
xchg
out
cs
clc
leave
cmp
mov
dec
xchg
xchg
cmc
in
leave
repz
loope
loope
stos
jno
or
pop
jle
lahf
rorl
mov
imul
hlt
shrb
sub
cwtl
lcall
imul
lret
mov
mov
xchg
rolb
sbb
out
jmp
mov
icebp
mov
and
pop
imul
mov
mov
pop
hlt
lret
xchg
pop
sbb
lret
xchg
mov
mov
inc
add
test
jno
sub
xchg
outsb
fimull
repz
mov
shlb
icebp
nop
loopne
dec
add
shrb
sub
lods
sbb
aam
jle
mov
xchg
stos
rol
and
mov
pop
enter
loop
pop
sub
and
fstps
out
stc
mov
and
dec
push
pop
inc
pushl
sbb
dec
aad
fsubs
das
add
dec
stos
mov
sbb
sbb
dec
lds
stos
arpl
sbb
mov
ficompl
jo
notl
mov
jbe
cld
mov
adc
cltd
mov
call
fcoms
mov
push
rcll
cmp
inc
mov
mov
cmp
adcl
fcomip
mov
xchg
pop
mov
and
and
jle
inc
in
fsubrs
test
push
and
and
idiv
lods
ror
scas
cmp
into
mov
pop
cmpsb
pop
add
imul
rcrb
pop
call
mov
pop
pop
pop
nop
sbb
mov
xor
cs
int
sbb
sub
inc
inc
into
ret
jp
mov
aaa
add
xchg
adc
jne
sahf
insl
pop
push
bound
fwait
cmpsb
sbb
cmp
inc
sbb
out
divl
sub
lahf
call
aad
inc
int3
aas
je
loopne
dec
das
xor
out
add
das
daa
arpl
lds
jbe
xor
bound
ljmp
dec
imul
hlt
pop
call
sti
out
scas
inc
repnz
movsb
loope
cld
push
mov
ss
lret
iret
lret
lahf
sub
mov
add
ret
mov
leave
loop
pop
or
in
mov
fistpll
jns
sub
scas
stos
inc
cmpsl
pop
mov
decb
js
shll
cmp
mov
mov
test
std
iret
sbb
pop
int
adcl
and
dec
les
xchg
cs
cmp
insl
push
add
call
mov
addr16
or
and
pop
or
aam
jae
loopne
lds
add
ljmp
mov
mov
movsl
lock
push
enter
or
dec
mov
cmpsb
les
cmp
sub
popa
cmp
mov
push
xchg
jne
jns
cs
lret
push
and
in
cmp
dec
dec
xchg
sub
cmp
es
xor
arpl
sbb
inc
imul
lea
fnsave
rcl
popf
loop
push
repnz
hlt
adc
xorl
push
ficoms
adc
scas
in
sbb
into
popa
mov
inc
push
mov
shrl
xchg
mov
rcr
in
sarb
mov
dec
test
sahf
sbb
fadds
add
imul
mov
xor
pop
inc
mov
loope
adc
fisubrs
mov
mov
push
into
clc
mov
add
inc
cmc
inc
jae
dec
cltd
movsl
popf
int3
adc
iret
das
scas
shrl
push
mov
outsb
sahf
test
add
jecxz
sbbl
test
cmp
add
out
and
ret
jns
xchg
hlt
and
in
jno
and
fildl
fwait
cmp
xchg
cmp
bound
cld
cld
jns
stos
mov
out
repz
push
inc
mov
push
pop
popf
mov
pop
or
out
test
sahf
pop
in
inc
jle
cmp
mov
into
inc
ljmp
clc
fcmovb
test
xchg
fldenv
aaa
sub
jns
daa
ja
adc
inc
stc
ljmp
pushf
inc
movsb
lcall
insl
push
xchg
shrb
mov
xlat
cltd
into
repnz
xchg
xchg
xchg
outsb
es
jl
jne
mov
jbe
test
pusha
and
enter
inc
or
push
xchg
pusha
movsl
shll
es
jbe
push
popf
adc
mov
xchg
jne
push
adc
sub
add
add
push
or
ds
pushf
push
pop
mov
dec
int3
sbb
out
cmp
dec
sbb
leave
int3
cmpsl
adc
fwait
jecxz
aaa
mov
push
push
xchg
adc
xchg
fbld
sub
movsl
push
sbb
loop
adc
sub
jmp
xor
mov
shrl
or
pop
sbb
mov
push
push
cmp
sub
sub
in
out
pop
sbb
jecxz
push
cltd
and
lcall
add
xchg
jno
xchg
sbb
xchg
cmpsb
xor
fimull
jns
pop
enter
dec
xor
lret
sbb
imul
jne
or
icebp
mov
aas
in
sub
bt
cmpl
jge
jne
pop
subl
cmp
stc
lea
lock
lcall
jo
outsb
aad
push
sub
push
fwait
mov
imul
xchg
mov
out
hlt
js
mov
and
cmpsb
jno
mov
mov
ret
leave
xchg
ja
aad
ret
bound
repz
push
jne
mov
inc
mov
adc
xchg
sbb
cmpsb
xlat
xchg
sbb
cmpsl
inc
sbb
dec
mov
in
fcmovbe
clc
xchg
aam
or
repz
mov
outsb
fcmovnb
sub
aad
jecxz
test
ficoms
add
xor
adc
mov
stos
loopne
enter
shll
adc
sub
lea
negl
je
jbe
jno
iret
outsb
xchg
sbb
repnz
dec
push
in
mov
mov
adc
fstps
mov
mov
ljmp
lret
aam
aad
shlb
nop
int
and
movsl
rcll
fs
sbb
clc
mov
mov
cmc
xchg
pop
in
lds
repnz
shr
or
mov
xchg
xchg
mov
lods
mov
pop
imul
sub
push
mov
std
inc
mov
cltd
inc
popf
push
jae
mov
pop
xchg
ljmp
int
les
dec
mov
push
imul
and
ret
dec
pop
xor
add
std
lods
pop
mov
pop
outsb
in
cli
mov
mov
shll
icebp
push
mov
cmp
shrl
mov
dec
nop
sbb
jmp
rorb
mov
iret
adc
jne
inc
test
push
xchg
mov
sbbb
in
out
movsb
add
pop
adc
inc
push
pushf
sbb
push
mov
scas
xor
das
cli
sbb
ja
notl
shl
stos
add
xchg
sub
cmpb
jmp
jl
xor
mov
mov
inc
fisttpl
sahf
push
iret
xchg
stos
jecxz
dec
and
test
pop
sbb
sub
or
in
fistpl
pushf
dec
ss
adc
pushf
pop
cs
dec
jns
repnz
shrl
in
push
fsubrp
shlb
daa
push
popf
stc
xor
cli
lahf
pop
repnz
sbb
push
jge
out
dec
cli
mov
mov
mov
lods
aaa
lcall
xchg
in
add
adc
xchg
and
push
cmpsb
xchg
leave
and
inc
das
stos
inc
and
popa
sub
mov
cs
mov
lahf
inc
or
cmp
jnp
and
mov
pop
adc
pushl
subl
pop
jbe
ficoml
sbb
fidivl
aaa
mov
cmc
fwait
gs
lds
fbstp
jno
dec
jl
push
repnz
add
jl
mov
fs
jb
inc
jns
mov
sub
fs
add
add
xchg
adc
lahf
sbb
enter
push
sub
shr
add
je
sahf
push
dec
or
andb
or
sbbb
sbb
test
ljmp
cwtl
mov
add
mov
jl
push
rol
rcrb
fsubl
mov
pop
mov
leave
jl
das
jb
popf
dec
mov
into
sahf
in
ss
js
outsb
out
ds
pushf
add
jp
stos
mov
addb
iret
test
inc
cmpsb
jbe
aaa
pop
mov
loopne
mov
int3
std
pop
dec
mov
push
mov
jmp
xchg
adc
sub
mov
jg
sub
ds
and
out
or
clc
and
inc
in
mov
shlb
out
mov
test
inc
inc
xchg
and
fidivl
dec
xchg
loop
mov
mov
mov
sub
inc
cmp
leave
jmp
nop
enter
add
and
cwtl
push
pop
pop
repz
inc
push
mov
sub
mov
add
pop
dec
dec
push
scas
adc
xchg
ja
icebp
add
in
push
mov
ret
cmp
std
fistpl
dec
mov
and
popf
sub
call
dec
movsb
mov
loopne
xor
xchg
mov
mov
packuswb
xor
pop
aam
push
hlt
sbb
mov
shll
out
je
ret
sub
scas
lcall
fistpl
or
leave
xor
arpl
sti
lcall
fstpt
idivb
in
enter
cwtl
adc
test
add
pusha
js
daa
daa
and
sub
sbb
xchg
xchg
lea
push
test
lods
or
rol
daa
insl
mov
pop
fs
lods
jle
lea
mov
sub
pop
inc
push
pop
mov
loopne
in
lea
xor
pusha
pop
dec
popa
roll
jo
xchg
mov
mov
xor
add
cmp
dec
sub
insl
mov
in
sarl
jbe
cwtl
loop
or
sub
rclb
pop
stc
aam
scas
std
inc
lret
gs
xchg
imulb
mov
inc
mov
push
clc
and
lcall
mov
sarb
cmp
dec
or
pop
mov
loopne
mov
mov
sub
pop
mov
loope
sub
je
or
ss
lock
int3
lds
and
adc
sbb
dec
sub
cwtl
rcr
jl
dec
out
js
mov
lock
add
loop
xor
xlat
mov
xchg
aas
dec
loope
aad
xor
mov
push
adc
jns
mov
fisttpll
sahf
jno
insl
lret
popa
addr16
lret
sub
jle
push
shl
lock
sub
cs
aad
lret
push
cmpsl
movsb
add
fisttps
pop
jp
jge
push
ljmp
dec
pop
or
shll
jl
jns
add
or
mov
dec
test
lock
mov
pop
popf
jns
push
scas
mov
cmp
mov
mov
pop
mov
jae
and
dec
into
not
add
mov
jno
push
aaa
jl,pn
and
xchg
std
into
pop
push
xchg
inc
or
and
sub
xor
test
sbb
mov
sbb
pop
pop
fnstenv
jae
jbe
imul
lock
rep
push
fidivs
outsb
loopne
or
in
cmp
inc
shll
ret
lods
and
and
jo
ret
popf
mov
push
inc
sub
and
daa
xchg
inc
popa
cmpsl
mov
sbb
and
cltd
sti
jmp
sbb
call
inc
push
push
repnz
inc
aaa
cmp
cmp
and
push
jle
cwtl
push
xor
jnp
mov
sbb
fdivl
mov
mov
pop
mov
jns
xchg
cmp
repz
daa
jp
outsl
int
or
cmp
into
cmpsl
inc
pushf
xor
hlt
scas
pop
out
mov
dec
aaa
mov
xchg
xchg
mov
lock
push
pop
enter
jl
ljmp
xor
cmp
popf
in
and
jbe
cmp
push
add
hlt
aad
ficomps
cmp
in
pop
outsb
cmp
xlat
xor
insb
or
sub
xor
fildl
mov
pop
mov
inc
inc
push
mov
cwtl
js
rcl
and
mov
insb
push
fimull
jno
push
sbb
xchg
je
shrl
lods
pop
mov
inc
andb
pop
push
cmp
sbb
les
push
sahf
fimull
scas
ja
out
xor
xor
scas
inc
pop
pop
adcl
mov
push
cmp
out
push
test
aam
pop
mov
sub
cmc
data16
push
cld
and
stc
lret
fistps
xchg
enter
push
lahf
xchg
loop
push
int3
xchg
nop
imul
push
pop
in
mov
sbb
lods
fs
mov
cld
cltd
stos
filds
xchg
imul
mov
shlb
mov
imul
lock
mov
add
js
cwtl
push
mul
int
xlat
call
xor
loop
cmp
dec
negb
sub
mov
leave
lods
imul
cmpsb
sbb
push
mov
ja
jecxz
xchg
outsb
jbe
lock
mov
xchg
jecxz
pop
jle
xchg
jae
mov
and
lret
push
jo
in
xchg
imul
outsl
pop
loop
cmp
pop
scas
fmuls
addr16
stos
mov
xor
test
inc
dec
movsb
pop
mov
ret
dec
popa
mov
and
xor
add
cmc
data16
mov
mov
adc
das
stos
sti
mov
add
cmp
adcl
adc
in
popf
push
in
pop
sahf
sub
add
mov
fs
push
iret
ja
xor
mov
adc
int3
inc
sub
shrl
sarb
inc
daa
testb
push
mov
dec
aad
or
ja
loop
dec
pop
or
mov
mov
loopne
mov
xlat
sar
es
push
hlt
in
cmp
cmp
out
mov
lods
cmp
pop
sti
sbb
in
stos
test
mov
aam
mov
push
lock
and
mov
jge
sub
scas
rorb
addr16
lahf
insb
mov
add
pop
lea
lock
out
or
lds
test
mov
cmpsb
sub
mov
inc
fscale
hlt
inc
into
out
insb
jbe
clc
cmp
ljmp
cmp
lods
push
dec
xor
rolb
sub
test
dec
fdivrl
gs
xor
incb
sarb
xlat
sub
mov
mov
add
mov
minps
roll
push
gs
xor
add
pop
cli
lock
add
inc
sahf
shlb
jge
xchg
cwtl
shl
ds
dec
test
and
inc
mov
int
xchg
jg
loopne
enter
push
push
inc
lret
sbb
push
and
mov
mov
pop
ljmp
mov
iret
shrl
pop
xor
xchg
lcall
dec
jno
lock
movsl
in
and
mov
out
adc
sbb
and
cmp
and
scas
mov
or
or
ss
add
mov
lock
les
jp
push
xchg
clc
xchg
mov
pop
cmp
mov
xor
xor
insb
add
cs
or
xor
jg
repnz
inc
mov
repnz
jge
inc
das
subb
imul
test
jp
stos
leave
pop
mov
iret
cs
add
pop
sub
dec
sbb
cmc
xchg
adc
sbb
jmp
mov
adc
incb
xchg
pop
out
repnz
call
dec
fwait
dec
xor
cmp
inc
ljmp
stc
icebp
loopnew
xlat
testl
sbb
xchg
pusha
loope
bnd
negb
pushf
and
xor
lods
sbb
rolb
adc
jo
dec
out
or
pop
enter
inc
nop
pop
sub
sbb
and
cwtl
mov
mov
andb
cmp
sub
mov
mov
insb
lret
jmp
xchg
out
jg
add
cmp
out
les
pop
pushf
cmp
les
xchg
push
in
and
lea
mov
mov
jae
inc
xor
insl
mov
cmp
fsubr
dec
cmpl
jge
sub
xchg
into
imul
xchg
or
adc
push
mov
repz
mov
test
aad
inc
jbe
jp
cwtl
xchg
lods
mov
decb
mov
sbbl
andb
je
or
xchg
sbb
popf
mov
mov
adc
adc
jne
popa
mov
pop
adc
dec
int3
inc
push
fiadds
sbb
in
cmp
faddp
lods
push
add
cmp
jp
cmc
mov
jl
mov
iret
inc
lock
mov
inc
hlt
and
repz
test
out
jmp
scas
jae
add
push
addr16
sti
lock
sbb
incb
cmp
adc
xchg
sbb
loopne
je
outsb
aas
jns
jne
into
ret
xchg
push
adc
xchg
cmpsb
cmpb
push
push
sti
sub
xchg
in
jp
and
outsb
or
xchg
and
hlt
out
jae
dec
sti
lds
outsl
incl
out
ljmp
mov
lret
or
or
sub
add
sub
insb
sbb
ds
and
icebp
call
jo
int3
or
jge
lds
mov
inc
dec
fyl2xp1
sbb
mov
mov
cmp
inc
jecxz
outsb
cwtl
das
pushf
xchg
lret
fildll
xor
inc
push
and
shll
or
arpl
pop
popl
lret
mov
dec
or
jb
movl
loopne
popa
dec
les
sub
orb
je
out
pop
xor
mov
mov
mov
cmp
push
comiss
adc
and
xchg
pop
jge
add
inc
dec
pop
xor
inc
or
mov
je
sbb
cmp
in
insb
lods
sahf
imul
inc
cli
inc
pusha
cmp
pushaw
jge
jae
lock
mov
sbb
mov
sub
push
pop
jle
and
aad
jbe
dec
push
lods
shr
shlb
adc
stc
or
rcll
popa
xchg
data16
inc
jle
sbb
popf
add
dec
pop
xor
add
repz
adc
in
xchg
shrb
out
imul
xchg
pop
inc
scas
mov
pushf
frstor
ret
inc
pop
fwait
repz
adc
pop
in
test
xchg
push
fists
push
mov
xchg
insl
invlpg
data16
jb
mov
sti
or
insb
cmpsb
cmp
sbb
pop
xchg
mov
mov
xchg
pushf
dec
xchg
push
sub
lcall
roll
or
in
cmc
popa
jg
push
fidivrl
dec
lcall
arpl
mov
add
in
popf
movsl
jp
pop
add
adc
mov
xorl
pushf
dec
loopne
lods
xchg
daa
hlt
pushl
pusha
sub
repz
dec
inc
dec
data16
xchg
xchg
int
iret
lea
mov
sbb
or
mov
mov
mov
ja
sti
js
xor
stos
mov
leave
push
aam
mov
lock
mov
mov
loopne
mov
sub
cmp
push
popa
sahf
push
out
lahf
sub
sbb
lret
inc
or
lock
dec
pop
push
add
push
test
out
mov
sbb
inc
mov
fldcw
enter
ljmp
out
loopnew
xor
sbb
inc
cmp
jecxz
mov
in
mov
pushf
sub
adcl
mov
pop
push
xchg
add
xchg
daa
lcall
mov
mov
mov
and
inc
lea
sbb
out
xchg
and
mov
mov
inc
mov
push
push
out
ss
cmpsb
pop
imul
mov
inc
pushf
mov
gs
or
test
mov
cld
popf
pop
jnp
cmp
sbb
addb
cmp
sbbl
mov
daa
lret
push
mov
fldenv
data16
stos
call
lret
cmpsl
movsb
fstpl
xchg
cmc
cs
sbb
stc
inc
movsl
jns
loopw
test
xchg
jo
mov
add
rcll
cmp
jno
flds
mov
int
fimull
cmp
lret
arpl
cmp
movsl
jle
pop
orl
mov
lret
xchg
adc
sub
cmp
into
xor
lcall
xor
xchg
xor
pop
imul
jbe
dec
lods
lahf
in
in
insl
and
push
mov
out
fs
shl
jae
in
sub
negb
cmp
adc
into
sbb
xchg
and
jl
ja
addr16
add
push
aaa
fld
sbb
nop
push
movsb
cwtl
dec
xchg
sub
push
cwtl
push
lret
adc
lods
shlb
lret
lds
mov
loope
and
push
repz
mov
mov
mov
orb
aad
jne
jbe
subb
bswap
pop
add
xor
adc
lock
mov
or
inc
movb
outsl
cmpl
in
cmpsb
mov
adc
jp
das
cli
out
cld
fabs
add
enter
add
inc
js
pop
adc
aaa
and
inc
jno
rol
mov
adc
jecxz
push
inc
jge
insb
push
sub
sub
jge
in
xor
push
and
jo
sbb
sbb
gs
push
imul
nop
ret
sub
pop
inc
adc
aas
push
push
outsb
adc
movsl
sbb
jmp
std
or
inc
andb
sbb
xchg
stos
cmp
dec
cmp
mov
rolb
loopne
es
aam
or
fwait
xor
aam
nop
lods
inc
into
mov
inc
xchg
pcmpgtb
xorl
cltd
aam
cltd
addb
inc
push
cltd
xchg
pushf
or
iret
mov
pushf
loopne
push
pop
jno
jno
insl
mov
loope
mov
add
addl
inc
mov
sti
mov
lea
ret
retw
cmp
cmp
mov
shlw
ftst
adc
lcall
push
jl
xchg
dec
fs
jne
clc
xor
add
ficoms
ret
in
shl
pop
ds
push
lret
cs
xor
cmp
inc
or
add
push
mov
test
in
xor
dec
cmpsl
movsb
or
cmpsb
add
dec
and
cli
aad
jp
in
popf
insb
xchg
sub
or
xor
xchg
push
repz
mov
inc
cmp
insl
push
icebp
gs
ficomps
xor
cwtl
adc
add
pop
dec
in
xchg
and
jo
sub
mov
inc
sarb
sub
inc
shll
iret
xorl
loopne
rclb
ljmp
fistps
push
jae
movsb
int3
sub
ja
xchg
jge
insl
push
data16
lea
push
je
insl
xchg
pop
sub
xchg
pop
arpl
jae
add
lock
stc
fstpl
std
arpl
mov
mov
loop
mov
and
cmp
bound
mov
js
loop
cmp
out
insl
sbb
sbb
push
jae
or
andb
push
popa
push
add
mov
arpl
dec
arpl
pop
push
fxch
xchg
sti
movsb
outsl
inc
inc
test
push
ror
dec
and
jb
loopne
inc
jnp
les
push
cmp
xchg
insb
jle
fcoms
pop
adc
adc
sbb
mov
test
clc
lods
add
cltd
out
lahf
or
sbb
inc
int
mov
aaa
std
jge
jmp
dec
sbb
ret
cs
aaa
and
adc
add
es
mov
jb
ja
in
mov
clc
in
popf
test
xor
xchg
icebp
in
sbb
sti
and
loop
dec
or
outsl
cmc
adc
in
jle
sub
in
rcr
pop
aas
jg
and
mov
lods
add
jae
xchg
jg
mov
rorb
adc
lahf
mov
mov
leave
test
dec
clc
js
cmpsl
frstor
jmp
stc
or
sbb
xor
jo
lret
push
outsb
outsb
add
inc
shrl
or
push
in
jg
lret
sbb
cwtl
jge
insb
jl
addr16
push
pop
xor
rclb
xorl
rcll
mov
mov
add
xchg
xchg
lcall
cmp
pusha
xor
mov
rorl
adc
push
jae
outsb
adc
pop
xchg
dec
outsb
sbb
cmp
mov
sti
ja
cltd
cwtl
lret
jmp
lock
movsb
sub
push
popf
jp
lret
imul
sub
pop
xchg
pop
sub
mov
fists
sti
inc
loopne
imul
xor
mov
push
cltd
adc
cmp
cld
add
mov
cltd
int
outsb
push
iret
or
mov
fnstsw
dec
out
adc
pop
jbe
std
push
dec
pop
test
scas
cwtl
fsub
cmp
fdivrl
fucomp
cmp
les
sbb
dec
aad
popa
jo
adc
popa
fld1
jo
mov
mov
dec
sub
adc
sar
in
ret
xor
out
jle
imul
jnp
add
rorl
jle
mov
jecxz
dec
inc
sbb
ja
cmc
popf
xor
cmpsl
adc
sub
fdivrl
xchg
sub
push
inc
ja
addr16
xchg
out
fdiv
sub
jg
sub
sub
xorl
dec
sti
mov
push
and
sub
insl
inc
adc
scas
call
pop
sub
sti
mov
push
sbb
loope
push
das
and
pop
out
into
pop
jmp
imul
loopne
or
outsb
into
jecxz
mov
dec
das
in
aas
push
sub
daa
dec
std
add
mov
test
mov
and
adc
nop
test
cmp
pop
icebp
pop
pop
inc
ficoms
mov
adc
jmp
jp
add
jmp
push
scas
mov
aaa
gs
cmp
imul
int3
out
cwtl
imul
fs
sbb
scas
jno
sbb
out
pop
out
xchg
dec
test
mov
inc
mov
stos
fnstsw
jo
jnp
insb
adc
and
loope
adc
xor
stos
daa
out
mov
mov
aad
adcb
imull
sahf
and
cwtl
out
repz
scas
push
rcrl
ret
add
aas
in
ja
and
out
pop
hlt
scas
insl
adc
rolb
dec
es
sbb
mov
mov
push
ud0
sahf
xor
test
ret
gs
dec
xchg
cmp
shlb
outsl
push
stos
js
cli
and
dec
xor
stc
mov
sub
xchg
aas
push
scas
jo
fwait
insl
pop
mov
or
clc
int3
dec
bnd
imul
loope
in
call
sub
sub
data16
sahf
fbstp
fs
lret
adc
and
scas
ret
sti
sub
mov
lahf
push
sub
out
push
in
jmp
lret
sti
test
add
cmp
rclb
fldl
jne
fdiv
cmpb
sub
sbb
inc
pop
ljmp
sti
in
mov
stc
and
jp
jge
sbbb
mov
push
jbe
ljmp
stc
push
pop
dec
push
mov
in
pop
mov
cmovnp
ljmp
jge
lods
jl
mov
sbb
mov
scas
add
dec
loope
negb
xchg
ss
xchg
or
and
mov
mov
loop
or
je
out
das
sub
xor
mov
outsl
fimull
fisubrl
dec
imul
push
rcll
push
and
rorl
stc
xchg
jne
cmp
mov
inc
sti
movsb
inc
or
stos
or
adc
or
mov
and
loope
mov
in
sarb
lahf
test
cmp
push
adc
inc
cmp
in
cmovns
fistpl
mov
sbb
mov
test
in
sbb
outsl
mov
lods
xchg
mov
xlat
add
inc
push
sti
cmp
daa
repnz
xchg
xchg
int3
mov
cmp
jle
inc
cmpsl
popa
lock
out
clc
out
sub
jmp
insl
jbe
sub
in
icebp
sub
adc
loop
mov
lods
fwait
sbb
sbb
das
gs
icebp
jp
js
lea
stos
movsl
mov
pop
lea
in
add
xchg
lods
insl
test
fnstenv
push
inc
xchg
or
dec
mov
pop
mov
mov
repnz
clc
mov
icebp
pop
jmp
cmp
pop
mov
clc
cmc
sub
pushl
jmp
stc
es
imulb
push
dec
xchg
jb
outsb
adc
adc
movsl
add
ret
imul
xlat
aaa
mov
mov
xchg
dec
push
into
xchg
and
loopne
mov
jno
into
cs
lock
stos
fwait
cwtl
add
mov
icebp
inc
das
xchg
mov
int3
pop
mov
push
lea
test
mov
inc
sahf
test
sbb
add
xor
ljmp
jmp
inc
dec
xchg
test
dec
and
cmpsb
pop
aad
ja
addr16
loop
pop
mov
mov
push
mov
js
inc
adc
push
add
outsb
adc
dec
adc
xor
mov
cmp
jecxz
lea
scas
lret
mov
pop
inc
mov
xchg
sbb
mov
push
int3
lret
loop
jnp
mov
or
and
ret
enter
in
add
sub
lahf
test
shll
mov
aaa
xlat
and
imul
sbb
add
sti
xor
pop
gs
sbb
push
stos
mov
lret
sbb
aaa
mov
cld
lcall
inc
xchg
inc
insl
mov
fsubs
enter
pop
or
push
inc
and
lds
aad
outsb
lock
mov
add
pop
cwtl
mov
arpl
jp
dec
addl
lret
and
into
gs
cmp
insl
or
xor
aaa
pop
mov
fcomps
or
push
lods
dec
jp
pop
in
ja
cmpsl
sbb
push
dec
cmp
sub
mov
test
cli
xor
jnp
pusha
cmpsl
mov
iret
cld
mov
repnz
inc
cwtl
fnstcw
das
xchg
or
push
or
mov
test
jecxz
pop
jns
xchg
sbb
mov
or
dec
das
fsubl
push
fwait
aam
arpl
out
aad
and
enter
jns
xlat
dec
cmpsl
push
mov
fidivrs
into
add
xchg
iret
push
dec
movsl
addr16
push
mov
lea
mov
int
inc
xor
inc
cli
adc
mov
push
cmp
and
push
ffreep
incb
sti
pop
push
cmp
fistpll
rorl
out
pop
mov
nop
mov
mov
arpl
rorb
mov
jl
rol
lds
inc
imul
cli
mov
pop
or
rorb
push
or
mov
in
push
cmc
mov
push
pop
inc
and
inc
ss
pop
mov
push
xor
aaa
or
adc
repz
inc
push
pusha
js
pop
negl
aad
or
mul
les
les
dec
stc
jae
scas
mov
dec
stos
call
ja
sbb
lahf
mov
sbb
scas
mov
insl
cmp
mov
and
add
mov
aaa
fwait
lret
scas
icebp
mov
and
frstor
popa
adc
jae
jno
jmp
cmp
test
mov
or
inc
or
lods
jp
fs
dec
stos
xchg
aad
mov
rcll
cmp
mov
push
call
mov
adc
es
ret
dec
js
and
add
or
lret
lods
arpl
outsb
cmpsb
jb
loopne
xor
xchg
xchg
movsb
enter
cmpsl
push
adc
je
cltd
mov
test
add
into
iret
sahf
xchg
loopne
out
hlt
add
stc
push
cmp
pop
pop
cmpsb
sub
push
mov
pop
ror
lea
cmpsl
xchg
jae
xlat
insb
and
xchg
pop
jb
xor
cld
repnz
ja
outsb
inc
xlat
dec
adc
insl
xor
mov
xor
jbe
sbb
out
cli
pusha
cmc
xlat
pop
sbb
lds
in
adc
fnstcw
cltd
iret
add
fsubs
mov
addb
mov
xchg
leave
jno
push
cmpb
mov
inc
cmp
pop
sbb
sarl
stos
loopne
and
mov
pushl
addl
sbb
sbb
rcll
ret
jne
test
jbe
fadds
pop
int3
add
push
and
movsb
fs
mov
mov
or
in
fdivl
adc
inc
rcrl
dec
andl
xor
xor
jge
xchg
leave
and
cmp
mov
push
mov
scas
shll
sbb
shl
cmp
mov
insl
fs
mov
mov
gs
outsl
adc
jnp
mov
ret
aas
inc
jno
mov
sub
scas
mov
or
insl
add
xorb
inc
cmp
and
mov
out
ret
aaa
dec
pop
lret
mov
mov
or
dec
aas
adc
and
pop
aaa
jnp
nop
mov
sub
iret
cmp
aam
mov
dec
mov
in
fcompl
pop
xchg
mov
orb
jle
xchg
data16
cld
movsl
and
and
dec
hlt
pop
shrb
nop
int3
cmp
jl
mov
shlb
scas
push
sbb
js
add
pop
pop
dec
aam
addr16
insb
xchg
imul
cwtl
cmpsl
pushf
jmp
shll
inc
imul
dec
imul
frstor
sbb
sub
cmp
lret
adc
fs
stos
add
sub
xlat
mov
iret
mov
sub
add
fdivl
aas
sbb
or
repnz
cmp
mov
nop
fildl
int3
fildl
mov
insb
ja
imul
shr
xchg
sbb
repnz
leave
rorb
stos
in
arpl
dec
xchg
add
ret
lea
mov
dec
sub
ss
daa
adc
or
push
jae
cmp
lds
lcall
jnp
jo
mov
subl
lock
push
daa
in
dec
mov
lcall
leave
dec
sti
loopne
cmp
sub
insb
xchg
in
lds
mov
sub
adc
mov
into
push
sbb
lock
pop
stc
fdiv
push
cs
mov
lods
loope
idivl
push
movsb
rcll
inc
popf
movsl
dec
imul
mov
push
pop
loop
push
popa
xchg
and
sbb
pusha
push
xchg
sub
cwtl
incl
mov
jge
xor
cmp
lds
pop
sbb
fsubrl
add
cltd
sahf
enter
cmp
pop
fwait
xlat
fnstsw
adc
mov
dec
movsl
push
push
popl
loop
lea
sub
js
andl
cmp
jb
mov
sub
add
cltd
nop
xchg
inc
dec
js
add
lds
push
push
scas
ja
shr
mov
mov
sbb
fdivs
stos
lea
stos
and
xchg
mov
jno
pop
pop
dec
jg
sub
mov
or
cmp
xor
jo
cmp
pop
push
out
adcb
je
ss
inc
sub
fwait
and
sub
fisubs
inc
ds
jae
sub
push
insb
imul
sbbb
mov
ljmp
cmp
sbb
out
movsb
stos
call
cmp
xchg
fbstp
repnz
or
aam
or
mov
loop
inc
pop
xchg
pop
adc
movsb
mov
mov
mov
scas
test
and
hlt
mov
push
imul
mov
mov
aad
jns
inc
call
lock
cmp
mov
pop
loope
arpl
add
mov
jle
popl
scas
leave
jae
icebp
sub
jecxz
fs
jne
inc
jne
push
add
adc
loope
push
mov
fldt
lea
std
xor
sti
or
pop
mov
pop
xlat
ret
addb
xchg
or
push
add
xchg
arpl
pushf
popf
sub
pop
cmp
mov
loope
or
jmp
sti
or
sub
int
xchg
inc
test
cli
cwtl
jne
jmp
cmp
insb
jg
and
shlb
xchg
xor
pop
rcl
test
mov
xchg
xchg
repnz
add
pop
sbb
pop
adc
movsb
in
insb
mov
testb
insb
inc
in
insb
js
and
push
or
mov
and
ja
testb
cmp
and
dec
mov
loop
adc
sub
jmp
sarb
mov
cmpsl
mov
loop
mov
out
mov
repz
cli
ljmp
xchg
arpl
cwtl
bound
add
aam
mov
into
xorb
push
sub
lods
scas
dec
inc
pop
mov
es
out
int3
adc
popa
xor
stos
andb
xchg
xchg
sbb
fstl
int
icebp
in
jl
push
pop
test
stos
xor
call
insl
xor
mov
jns
push
lock
xchg
nop
sbb
dec
push
mov
pop
jbe
cmpsl
pop
icebp
out
loope
loopne
mov
mov
daa
push
fdivl
cmp
push
ss
decb
std
pop
imul
mov
lcall
dec
jle
adc
sbb
cmc
push
mov
mov
lahf
jmp
pop
lahf
pop
pop
dec
or
jl
out
loop
xor
jl
jae
shll
mov
lock
popa
mov
mov
cld
sti
stc
xchg
push
outsb
fidivs
cmp
jbe
into
icebp
sub
out
scas
mov
mov
in
in
push
les
sbb
sub
cmp
lcall
lock
jno
or
fidivs
and
daa
or
lock
xor
arpl
out
dec
out
aaa
xchg
jp
insl
ret
in
adc
insb
mov
pusha
xor
and
cli
movsl
shlb
pop
and
dec
scas
xchg
fimull
aam
sub
xlat
mov
pop
dec
sbb
int3
jns
add
insb
ss
mov
arpl
and
and
out
stos
sbb
lds
adc
adc
add
ja
imul
enter
mov
add
xlat
ret
outsl
or
push
bound
bnd
aas
loopne
shlb
cmpsb
lds
cmp
cmp
into
or
cltd
xchg
ret
jmp
mov
jbe
out
add
dec
stc
insb
icebp
pop
push
mov
outsb
jno
mov
dec
xor
clc
dec
stc
shll
pop
lret
pop
les
sub
sbb
push
shl
sub
or
xchg
push
adc
xor
test
cltd
pop
pop
in
addr16
or
jle
shl
leave
mov
lahf
push
outsb
shlb
data16
sbb
lahf
jo
loope
scas
ljmp
adc
popa
xchg
dec
ja
in
negl
into
test
cmp
dec
jb
mov
cmp
pushf
inc
xchg
bound
jbe
sti
bound
adc
mov
nop
pushf
sub
cltd
push
pop
cmp
or
push
fisttps
fcoms
idiv
aad
rclb
clc
jne
mov
jns
rolb
insb
pop
sbb
mov
jp
notb
sbb
cmpsb
out
aas
dec
mov
fiaddl
nop
push
into
or
add
dec
xor
fdivrl
lcall
stc
push
mov
adc
and
dec
adc
add
jnp
sub
xor
filds
adc
aaa
shrb
fdivp
sahf
int3
jne
ds
or
jbe
outsl
mov
mov
subb
xchg
or
cmpsl
and
outsl
xor
fildll
ljmp
insl
fisttps
jge
hlt
dec
adc
in
jnp
sbb
fcmovnu
lea
inc
mov
sbb
cmp
dec
pop
jb
add
add
pop
popa
lcall
lods
sbb
add
or
mov
mov
insb
stos
jbe
pop
test
jg
insl
fildll
mov
xor
addl
leave
and
aas
mov
out
jne
or
and
inc
push
dec
xor
lret
mov
sub
lret
decb
cwtl
mov
pop
mov
lea
mov
out
addr16
mov
shll
mov
daa
jno
int
clc
sbb
sbb
inc
cwtl
mov
or
andb
mov
dec
shrl
add
ds
in
scas
addr16
outsl
xor
cmp
jmp
push
mov
pop
add
push
rcrl
dec
or
dec
sub
ds
jg
imul
cwtl
ret
aam
adc
jns
lea
repnz
rclb
ja
sub
in
gs
jge
xor
push
push
xchg
call
push
mov
adc
lret
aam
xor
lock
movsl
lret
pop
adc
fcomps
xor
inc
adc
mov
mov
ljmp
pop
ret
sbb
xchg
cmc
out
jle
and
scas
dec
jns
or
pop
stc
mov
and
sbb
out
popl
pop
aas
test
pop
outsl
insl
fiaddl
mov
fists
ljmp
add
out
repnz
shr
in
sub
outsb
out
scas
sub
cmp
sub
push
mov
cmp
fs
int
jg
ss
cld
cmp
sbb
push
test
mov
xchg
pop
das
mov
inc
xchg
xchg
xchg
xchg
push
mov
arpl
das
ljmp
outsl
pop
mov
jae
sub
and
subl
lea
push
adc
xchg
push
in
nop
shr
loopne
sbb
mov
ret
sub
test
dec
arpl
and
in
xchg
dec
mov
jbe
mov
adc
fwait
aas
xchg
cmpsb
lods
mov
in
jle
push
orl
add
mov
sub
mov
daa
or
fsubrl
pop
pop
cmpsb
fistpl
mov
enter
ds
into
movsl
mov
sub
into
shll
mov
shrb
pop
sbb
mov
addr16
gs
push
addr16
and
add
lds
jecxz
push
adc
rcll
shlb
test
xor
mov
mov
jmp
xchg
adc
lret
ficompl
stos
movsl
xor
cwtl
jo
call
out
pop
and
push
ljmp
add
enter
aad
nop
mov
push
sti
shl
outsl
inc
stc
mov
xorb
rclb
cmp
push
or
push
test
cmp
cmp
cmpsb
fbld
or
into
icebp
loopne
bound
jge
les
dec
jo
dec
push
jb
test
and
test
xor
lcall
shrl
xchg
xchg
pop
in
add
nop
push
dec
jnp
sub
lds
roll
in
mov
negl
aam
push
std
cmp
pop
repnz
aam
adcl
and
cmc
mov
xchg
shlb
lods
aad
cmp
imul
out
mov
cmp
ja
es
jns
imul
pop
or
arpl
daa
sahf
andl
add
mov
je
jl
and
fbld
lock
dec
xor
or
push
aad
or
aas
call
push
das
sub
add
and
std
repz
popf
imulb
out
push
fwait
das
mov
sub
rclb
mov
add
dec
cmc
jecxz
inc
stos
icebp
xchg
ret
clc
rorl
rorl
mov
stos
mov
leave
stos
mov
or
push
test
dec
in
xchg
adc
add
jns
imul
push
repz
xor
sbb
inc
or
push
mov
lock
pop
enter
add
movsb
ljmp
xchg
jne
sub
rcrb
sbb
lahf
fdivp
cmp
andl
imul
xor
jbe
call
rcll
cltd
cwtl
stos
push
cld
aad
jle
cvttps2pi
cmp
andb
stos
sar
mov
dec
data16
movsb
mov
imul
jecxz
add
lcall
push
sti
iret
jle
outsl
fildl
test
mov
and
or
cmp
adc
xor
add
or
mov
xchg
fldcw
add
jae
int
mov
lret
sub
xchg
inc
jns
out
mov
adc
mov
adc
jmp
mov
dec
iret
out
out
push
js
and
jmp
pushf
fcom
jne
jp
loopne
movsb
sub
adc
sahf
pushf
ja
push
gs
inc
mov
mov
and
add
shlb
repz
dec
ljmp
and
pop
lods
jbe
imul
jg,pt
insl
mov
mov
scas
loop
and
mov
in
pop
shll
push
jae
inc
negb
bound
xchg
dec
mov
arpl
mov
push
mov
xchg
ret
inc
inc
jg
push
lods
in
lea
push
adc
xchg
pop
add
add
sub
mov
xchg
xor
insl
jne
fs
sbb
mov
jmp
or
movsb
cmpsb
shrl
imul
mov
das
lcall
jp
xor
arpl
xchg
xor
mov
idiv
test
movl
cmp
pop
xor
das
iret
mov
pop
dec
data16
add
xchg
es
push
fs
xchg
mov
bnd
cltd
dec
pushw
subl
out
in
mov
or
cmp
pop
and
push
xchg
push
cmp
test
hlt
jmp
jecxz
inc
jmp
mov
cmp
mov
pop
xchg
sub
xor
and
sub
and
lahf
arpl
cmpsb
js
push
ja
push
in
dec
cmp
add
mov
and
mov
or
jnp
xchg
lahf
sbb
in
mov
inc
mov
xor
sbb
insl
outsb
xlat
sti
add
mov
in
ret
or
fwait
aad
lahf
push
dec
movsl
xor
lret
mov
cmp
scas
in
jl
fnsave
cmp
xchg
mov
add
inc
outsl
mov
sub
das
dec
into
stc
jo
jle
and
sti
jo
and
sbbb
mov
scas
inc
adc
cmp
and
pop
pop
mov
addl
dec
pop
xchg
or
and
aas
push
icebp
sub
out
xor
imul
nop
sarb
imul
int3
push
sbb
or
sub
jmp
lret
inc
pop
push
stos
movsl
push
pushf
sub
jbe
insb
leave
jbe
push
and
nop
cmp
inc
push
in
loopne
bnd
test
adc
lret
sub
cmp
pop
add
icebp
in
lods
mov
xor
out
out
sbb
xor
in
xchg
inc
mov
div
jge
leave
nop
sbb
mov
arpl
xor
push
mov
push
repnz
push
cli
jmp
mov
push
mov
addl
mov
loope
and
mov
or
idivl
inc
pop
mov
sbb
aas
lahf
sbb
and
es
push
dec
lea
dec
pop
pop
push
fstl
sub
ficomps
call
or
jnp
pop
dec
xchg
push
out
adc
fldt
mov
outsl
aas
insb
mov
popf
hlt
out
imul
sub
shll
in
ret
push
adc
inc
jo
test
sub
cwtl
fdivs
pushl
ds
mov
fwait
jl
gs
and
pop
addr16
xlat
pusha
push
cmpsb
jbe
flds
xacquire
fbld
icebp
cmp
fisttpll
add
scas
loopne
or
mov
das
jecxz
sub
pop
jb
add
ficoml
inc
pop
test
cmp
add
xor
inc
push
adc
jmp
mov
and
inc
and
imul
add
mov
cmp
lock
jns
loop
push
or
stos
cmpsl
aam
sarb
cmpsb
xchg
dec
and
mov
fmuls
sub
notb
out
mov
in
loopne
jno
imul
xor
sub
out
xchg
dec
pop
inc
sbb
jg
push
sbb
sub
cld
ds
add
aas
mov
or
rcl
pop
sbb
nop
dec
mov
push
xchg
cld
jp
out
jbe
mov
xchg
sarb
scas
iret
mov
movsl
dec
sarl
ds
and
mov
test
pop
js
cmpsl
bound
arpl
pop
mov
je
push
xor
lret
xchg
inc
inc
dec
pop
push
adc
mov
sbb
xor
clc
int
inc
pop
mov
repnz
andl
rcl
nop
lahf
sub
xchg
lea
repz
mov
pop
scas
xchg
mov
sbb
mov
sbb
cli
fidivrs
jmp
pop
cmp
popa
shlb
orl
jno
jbe
fcmovu
xor
mov
jmp
xchg
scas
pcmpgtb
loop
clc
dec
gs
jp
jg
outsb
aaa
lea
add
push
push
inc
stos
push
mov
and
sbb
pushf
call
scas
push
sti
and
cmp
push
jmp
mov
fs
jp
fists
add
in
cmp
out
dec
or
xchg
adc
adc
push
pop
adc
xchg
mov
jne
xorb
adc
rol
inc
xlat
sti
adc
jns
xchg
xchg
adc
cmp
mov
dec
das
push
inc
frstor
aas
mov
popf
sbb
std
jp
xor
int3
negb
jbe
enter
enter
adc
sti
stc
pop
jp
jno
jle
mov
icebp
addr16
pop
loopne
mov
pop
mov
mov
dec
stos
rol
test
inc
lahf
lahf
rcrb
sub
pop
sbb
jg
add
adc
push
mov
xor
outsl
inc
sub
jbe
insb
jl
jg
sub
pop
pop
inc
jp
daa
xchg
enter
ror
fldenv
xor
xor
push
push
inc
cmpsl
adc
das
jb
lock
divb
pop
test
jmp
in
or
outsb
mov
push
mov
adc
push
mov
cmpsl
inc
insb
mov
arpl
or
sbb
call
mov
xchg
or
pop
ss
adc
xor
addl
cli
inc
aam
les
stos
into
jb
add
push
pop
xchg
fwait
jle
mov
add
and
push
pushl
dec
repz
arpl
mov
mov
adc
lds
cld
sbb
mov
dec
int
xchg
mov
cs
in
insl
jmp
and
ljmp
add
and
and
movsl
ds
scas
repnz
cld
sarl
bound
jo
nop
mov
lock
insl
pop
mov
fidivrs
sahf
fs
addl
loop
mov
jmp
xor
sbb
stos
jge
pop
fs
mov
xchg
pop
lcall
dec
inc
pop
dec
jl
ljmp
mov
mov
xchg
bswap
outsb
mov
out
mov
je
jg
movb
test
mov
leave
xchg
loope
jno
test
aaa
rcrl
pop
insb
es
cmp
incl
lret
or
inc
fsubr
pop
adc
mov
or
mov
daa
xchg
mov
gs
arpl
xor
ljmp
inc
cltd
add
push
sub
push
fdivrl
incb
cmp
sbb
fs
and
jmp
pop
mov
push
divb
cmp
inc
addl
jno
sub
shll
out
sbb
jno
sub
mov
icebp
dec
push
pusha
movsl
pop
adc
fidivrl
subb
pusha
sub
nop
inc
mov
icebp
mov
rcr
lods
ss
cmpsb
push
js
sub
mulb
cmpsl
jne
inc
dec
add
push
ja
fbld
dec
or
jne
mov
aad
dec
xchg
insb
out
sbb
aaa
push
leave
pop
out
popf
xor
call
ret
test
mull
or
ljmp
add
mov
xchg
mov
mov
mov
dec
mov
out
pop
aad
iret
and
test
push
pop
jl
cltd
push
pop
je
lods
jnp
insb
mov
jmp
int
lahf
arpl
enter
iret
sub
mov
in
sub
decl
subb
lock
fimuls
jl
push
push
shl
daa
jmp
jecxz
or
push
push
bound
push
fwait
cmp
jbe
test
clc
iret
cltd
adc
out
mov
lods
and
stos
cmpsl
das
clc
std
add
sbb
jnp
and
cld
stos
and
mov
pop
and
out
daa
fisttpll
inc
out
mov
in
xor
sbb
or
and
cmp
loope
je
mov
repnz
mov
lock
ret
mov
pop
mov
jae
or
testb
mov
lret
cmp
xchg
sbb
pop
and
jnp
cmp
and
repz
lahf
imul
mov
cs
push
daa
sbbb
ret
adc
push
sub
push
subl
pusha
sbb
ficoms
scas
dec
xchg
mov
jp
xchg
cmp
nop
mov
lea
shlb
mov
mov
cmpsb
pusha
shlb
dec
andb
push
and
jmp
inc
fwait
addb
pop
movsl
jne
adc
movsl
or
mov
dec
fmull
mov
or
mov
inc
mov
loop
and
xchg
inc
test
or
mov
mov
lea
jae
lahf
dec
adc
gs
insl
fwait
inc
cwtl
outsb
xchg
mov
mov
repnz
push
and
and
mov
push
js
and
imul
jo
scas
and
push
dec
lcall
ftst
stos
dec
or
fwait
ret
sbb
imul
push
call
scas
mov
sub
ljmp
cli
mov
mov
inc
mov
popa
dec
fwait
hlt
sbb
dec
push
punpckhwd
lods
mov
cmc
pop
cmc
xor
pop
jo
pop
inc
mov
aad
pushf
sbb
push
hlt
mov
jg
cltd
notl
xchg
negb
mov
test
mov
cmp
xor
int
stc
jle
test
sub
mov
cmp
inc
push
rorb
mov
test
push
xchg
xchg
push
stos
stos
hlt
aaa
movsl
jne
inc
sub
and
or
idivb
xor
jns
mov
cmp
cmpsb
shl
cld
test
enter
adcl
cmp
jnp
mov
outsb
cmp
push
enter
pop
dec
push
out
popl
imul
cmc
fldcw
add
lock
xchg
jmp
jl
mov
inc
dec
rcl
cld
xorb
insl
test
repnz
mov
dec
xlat
das
jae
cli
sub
jge
mov
pop
das
jmp
std
xchg
and
pusha
ret
notb
outsb
sub
cmp
sbbb
mov
xchg
dec
mov
movsl
test
lret
addr16
push
or
dec
mov
xlat
insl
mov
loopne
xchg
pop
idivb
ret
pop
xor
and
imul
sahf
and
cmpl
rep
pop
push
mov
dec
pop
lahf
or
imul
and
jmp
xor
aad
out
lea
invd
test
gs
lcall
pop
fldcw
imul
add
fildl
jl
hlt
sub
lahf
loopne
divb
fildll
addr16
nop
in
or
sti
dec
sar
xchg
in
je
cmpl
lods
sub
loop
xchg
cmp
and
icebp
inc
dec
sbb
sti
icebp
pop
fstpl
mov
bound
rolb
mov
fwait
repnz
jp
push
fs
das
jbe
into
jb
dec
push
fwait
shll
ss
mov
sbb
xchg
xor
ret
mov
mov
sbb
and
fwait
pop
lods
jmp
mov
mov
xor
mov
pop
xor
aaa
outsl
mov
mov
arpl
jp
inc
pop
fbld
lods
ljmp
js
ja
sub
or
fldz
add
pusha
cmp
sub
mov
add
adc
xchg
cwtl
in
loop
aad
inc
aad
in
pusha
and
insb
push
test
rcrb
bnd
sub
jle
add
inc
xor
std
and
add
mov
inc
mov
data16
sbb
stos
or
fwait
push
inc
hlt
xchg
jecxz
movsl
inc
adc
mov
imul
cld
daa
and
cmp
mov
cs
sub
gs
cmp
pusha
aas
cmp
xchg
lock
fucomp
or
mov
cmp
dec
adc
test
cmc
jge
push
mov
inc
jbe
sub
fsubl
adc
mov
gs
mov
stc
sahf
adc
filds
int
movsb
pop
outsb
xlat
mov
jne
nop
adcl
fcomps
or
cld
test
in
mov
shr
push
push
call
hlt
inc
cmp
imul
xchg
sub
xlat
dec
subb
fsubs
or
fcmovnu
fcomi
sti
shl
aad
xchg
dec
addb
push
pushf
call
or
ss
notb
dec
fs
ret
mov
nop
loopew
adc
cmp
mov
daa
mov
neg
ds
sub
outsb
jecxz
repnz
mov
inc
daa
test
xchg
xchg
adc
movsb
fdivrl
adc
nop
test
pusha
adc
dec
call
push
ds
add
pop
enter
lahf
out
loope
or
sbb
scas
lret
mov
loop
add
jns
mov
jb
shl
sub
or
stos
and
sbb
test
jbe
test
push
inc
xchg
mov
mov
in
call
call
xchg
dec
call
jnp
call
xchg
mov
dec
mull
or
add
data16
xchg
in
mov
jb
jns
inc
dec
pop
out
and
mov
pop
cmp
mov
xchg
adc
gs
pop
lahf
popf
xchg
ffreep
popa
sub
dec
loopne
lcall
mov
nop
call
in
scas
rorb
in
nop
std
or
scas
xchg
push
jle
inc
jmp
xchg
stos
lret
jecxz
sbb
das
jae
inc
mov
fildl
clc
frstor
push
jo
nop
movsl
sub
lods
sub
pop
jnp
divb
mov
or
mov
add
xchg
pop
fwait
je
sbb
inc
dec
sbb
push
rorb
in
xor
fsubl
inc
iret
mov
adc
fcoms
pop
pop
jl
mov
xchg
cld
in
and
lods
loop
cmpsb
sbb
jmp
jns
pushf
dec
add
sahf
fidivrs
shlb
loop
pop
mov
lahf
mov
shll
mov
rcrl
xchg
mov
stc
push
out
push
inc
mov
dec
mov
and
adc
add
pushf
jns
add
shll
sbbb
xchg
cs
loope
icebp
mov
loopne
sub
jb
test
xchg
push
sub
jg
pop
data16
mov
fwait
popf
gs
addr16
shll
cmp
out
jl
int
xchg
ret
inc
sbb
cli
push
scas
clc
push
xchg
adc
pop
mov
lods
cmpb
jnp
mov
adc
or
push
test
imul
jge
loop
jge
cmp
mulb
je
push
jge
aaa
dec
adc
cs
aaa
mov
mov
scas
mov
mov
ret
outsb
je
test
mov
imul
arpl
xchg
imulb
pop
in
mov
inc
or
add
pop
fldcw
mov
subl
pushf
loop
mov
lret
rol
jns
dec
std
push
inc
add
in
jecxz
xchg
sbbb
lods
daa
into
int3
aad
shlb
loopne
fdivrs
mov
jp
in
movsb
outsb
adc
add
iret
mov
jne
cmpsl
jne
shrl
inc
dec
inc
ret
mov
decb
jge
movsb
sbb
dec
mov
js
mov
dec
fs
xchg
fwait
pop
orl
xor
pop
mov
mov
leave
or
dec
int3
jp
adc
xchg
sub
push
xchg
pop
in
fcmovnb
pop
and
and
out
jp
cmpb
repnz
adc
aam
stos
jae
ret
push
push
jecxz
mov
aam
stos
frstor
sti
shll
in
mov
push
dec
movsl
xor
add
cmp
xor
ret
mov
es
int3
cmovb
je
pop
cmpb
push
pop
and
xchg
cmpsl
arpl
push
mov
push
jmp
push
or
loope
mov
mov
mov
into
pop
push
dec
mov
shr
ss
mov
pop
sahf
out
or
and
add
mov
popf
mov
das
and
cmp
icebp
aaa
jno
jmp
loope
sub
lret
sbb
and
repz
or
or
test
cmp
test
pop
sti
dec
in
or
cmpsb
icebp
je
pushf
inc
repnz
ss
je
inc
insl
sub
mov
dec
mov
sub
push
jg
adc
mov
pop
je
jo
mov
pop
dec
imul
mov
mov
adc
mov
cmp
add
fsubrp
jae
add
pop
jl
cmc
jns
bound
sbb
sbb
mov
jle
mov
mov
imul
mov
pop
cmp
fldenv
ret
or
ret
out
ficoms
out
jecxz
xchg
xchg
cmp
cmp
xor
mov
cmp
stos
cwtl
or
sbb
decb
lret
scas
jmp
cmpsl
sbb
cmpsb
in
dec
call
adc
push
push
adc
cld
int3
sarl
andb
adc
shll
nop
jg
ja
jne
pop
xchg
in
pushf
xor
xor
xchg
pop
popf
fimull
aam
jo
subl
out
add
mov
stc
xor
push
mov
xor
loopne
mov
inc
cwtl
pop
mov
rorl
and
gs
out
pop
xlat
nop
mov
orl
pushf
or
insl
arpl
or
leave
lea
fstpt
sub
xorb
jnp
inc
roll
inc
push
jp
cs
cld
add
aaa
sub
xchg
fsts
xchg
mov
lock
cld
andl
sub
js
int3
push
jg
popa
pusha
mov
push
imul
mov
fwait
je
pop
insl
fmuls
rclb
je,pt
jae
adc
add
inc
negb
inc
rorl
lret
push
test
mov
sub
out
adc
xor
pushf
xchg
rclb
cs
and
dec
jo
es
jne
enter
lcall
pop
jnp
rcrb
rolb
xor
xchg
fnstcw
mov
aad
shl
push
das
scas
ror
movsl
scas
adc
ror
dec
ret
aam
push
in
push
push
shlb
pop
rorl
in
ret
add
xor
loope
pop
dec
nop
ja
ljmp
lcall
in
xchg
push
jmp
cmp
cmp
push
and
test
das
and
jl
jae
sub
shll
lea
adc
daa
mov
adc
cmp
lods
cmpsb
loope
aam
lcall
pop
sbbb
dec
shlb
mov
or
ljmp
xor
pusha
inc
add
in
mov
pop
mov
sbb
fbld
sbb
movsb
das
push
shlb
stos
in
rcll
or
jnp
in
insb
out
pop
mov
lock
lods
sarl
sti
fcomip
leave
pop
or
lds
push
jg
arpl
stos
xor
stos
faddl
jmp
test
cmpsl
cli
and
mov
pop
mov
enter
call
sbb
rcrb
jecxz
mov
lods
mov
mov
loope
outsl
ds
lea
arpl
cmp
popa
dec
imul
mov
out
rcrl
pusha
inc
clc
or
ljmp
cmp
push
sub
cmc
jno
jns
cmp
js
pop
add
lret
scas
test
fidivl
xor
and
ret
rorb
push
xor
sbbb
rcrb
sub
fcom
inc
jne,pn
in
pop
cld
xor
dec
adc
mov
add
pushf
outsl
decb
push
les
call
jno
cmpl
leave
insb
jl
iret
adc
inc
dec
cmp
mov
sub
loopne
xor
and
fisttpll
daa
stos
insl
repnz
or
pusha
push
loope
mov
lods
dec
mov
pop
xor
pop
lods
add
push
inc
sbb
push
and
sbb
sub
insl
push
int
or
loopne
mov
or
push
clts
pop
inc
adc
and
mov
out
jmp
cmp
jge
in
cmc
sub
imul
mov
mov
ds
das
cmpsb
or
scas
dec
scas
aas
call
fld
sar
jns
call
pop
stos
pusha
lods
push
out
dec
daa
jmp
aaa
mov
sub
cld
cwtl
jne
xor
inc
adc
test
mov
negb
mov
push
divb
sti
lahf
mov
enter
out
push
cmp
or
int
pop
ds
mov
sub
mov
loopne
xor
xchg
in
mov
inc
lods
sbb
or
mov
add
insl
and
mov
lcall
loop
inc
xchg
and
mov
iret
or
sub
add
pop
je
ss
fwait
adcb
push
scas
subl
mov
cli
lahf
in
enter
pushf
fiaddl
push
aam
filds
mov
dec
inc
ret
sahf
mov
loope
xor
rcll
out
xor
jne
cltd
jae
out
aaa
mov
daa
and
stos
and
inc
cld
in
push
lahf
pop
push
hlt
or
cmp
lret
in
out
xor
xlat
jb
xor
adc
mov
int3
mov
mov
or
nop
lret
xchg
add
jb
mov
push
in
pop
inc
call
and
data16
jo
ret
sbb
and
out
and
int3
inc
pop
testb
sbb
push
and
addr16
insl
faddp
sub
test
or
dec
shlb
fbstp
mov
imul
adc
push
pop
inc
repnz
cli
xor
sub
inc
es
inc
mov
insb
mov
gs
out
or
leave
or
or
xchg
pop
xchg
or
das
rcrb
jg
outsl
test
fistpl
shll
out
inc
inc
pop
cs
mov
in
rorb
xchg
cmc
out
mov
shll
or
inc
dec
pusha
xor
cmc
cli
sub
sbbb
insl
mov
adc
lcall
loop
push
mov
xchg
or
xlat
push
mov
ja
xor
mov
mov
add
adc
in
jo
push
in
xor
pop
mov
pop
and
repnz
je
and
sbb
cmp
add
mov
hlt
inc
mov
push
in
sub
mov
push
lahf
push
inc
aad
push
jb
lea
out
aas
mov
jo
lret
mov
pop
fstl
mov
pop
sbb
dec
shlb
and
roll
ficoml
sbb
add
and
repz
jb
in
xchg
or
movsb
or
xchg
mov
push
lds
inc
aam
adc
mov
dec
es
mov
mov
daa
stc
ss
sub
jno
mov
xchg
inc
xchg
xchg
dec
dec
cmp
dec
jno
mov
iret
cmp
dec
outsl
in
cmc
ret
imul
lret
lret
testl
lods
xchg
int
lret
xorl
sahf
xorb
icebp
push
adc
shll
mov
mov
rcrl
or
sbbl
lret
shr
adc
dec
adcl
iret
or
mov
fsubl
cwtl
aas
cmp
cwtl
mov
jo
lret
xor
cmp
inc
jmp
test
cmpsl
fadds
lds
xor
lock
xabort
or
add
adc
inc
mov
rcrb
dec
jle
es
imul
push
push
insb
sahf
sbb
lahf
inc
jmp
jg
lods
loop
mov
dec
out
sub
cltd
sahf
adc
cmp
daa
movsb
inc
stc
xor
or
xor
or
test
ret
adc
xor
lock
inc
cmpsl
and
xor
sbb
dec
mov
and
xchg
dec
jg
clc
fsubs
int3
loopne
add
stos
mov
stos
xor
mov
xchg
cltd
lds
sub
clc
jecxz
or
out
sarb
mov
test
adc
int3
cmp
insl
mov
sub
mov
push
mov
je
cs
popa
cltd
xor
mov
in
sub
fnstenv
adc
jno
mov
ss
jbe
inc
dec
in
loopne
push
xor
cmp
mov
mov
add
pop
xor
test
cmp
lods
add
pop
xchg
cmp
xchg
cmp
jge
push
push
ss
xchg
and
lcall
push
mov
xchg
jmp
mov
adc
push
mov
pop
and
jb
lock
sar
mov
xchg
in
jge
fsts
dec
push
jnp
and
icebp
add
cmp
cmp
and
push
sub
clc
aaa
pop
and
cmp
cltd
mov
jnp
adc
pop
negb
aam
dec
jge
lock
xchg
cmpsl
in
jne
dec
arpl
lods
mov
iret
add
mov
lret
ret
sbb
dec
xor
fsubr
xchg
or
xor
pusha
xor
cmp
jg
js
addr16
outsl
mov
cmp
addr16
mov
cmp
inc
cmp
fdivl
aas
jmp
mov
jle
jecxz
ds
ja
cmp
dec
and
xor
imul
insb
loope
push
fucom
lds
push
stc
mov
repz
sbb
pop
push
pop
cmc
lds
stc
lea
aas
into
sub
dec
mov
lret
into
test
hlt
outsb
and
jo
or
inc
adc
cltd
and
xchg
ljmp
js
pop
or
mov
pushf
icebp
mov
mov
in
sti
cmp
or
cmpsl
and
dec
jo
sub
mov
out
xor
jmp
inc
es
data16
sub
mov
sti
out
or
hlt
mov
mov
jo
cs
pop
push
jb
cli
mov
mov
jo
or
mov
xchg
movsl
adc
out
lcall
iret
cmp
lcall
in
ds
mov
cmpsb
std
es
jg
aas
adc
and
movsl
pop
dec
jno
pop
jae
cmpsb
in
sbb
dec
cli
aad
movsb
fildll
jo
aam
jne
sti
push
enter
add
fwait
sub
aad
aam
or
mov
adc
scas
nop
and
push
shrb
jecxz
call
jbe
jge
imul
push
push
rclb
inc
add
ljmp
enter
jno
jo
adc
cmp
popa
rdpmc
mov
xor
mov
push
xor
or
fists
inc
sbb
call
rolb
or
test
je
and
lock
jne
mov
popa
add
dec
testl
sub
dec
jg
pop
mov
mov
adc
das
sub
mov
pop
insb
inc
push
ljmp
and
mov
cmpsb
out
adc
pop
xor
stc
and
leave
scas
stos
mov
lods
push
pop
imul
sti
pop
je
jne
rorb
push
dec
lahf
or
inc
les
ds
aam
fsubl
pushf
test
adc
adc
test
shll
sbb
js
and
ljmp
push
mov
sbb
lods
faddl
shl
fmull
shll
enter
dec
scas
scas
and
iret
int
jle
movsl
jmp
pop
pop
mov
lock
xor
std
push
inc
pushf
int3
cmp
push
shrl
mov
push
insb
adc
mov
pop
into
or
ja
das
push
push
pushf
sbb
lret
jl
sahf
ljmp
xchg
push
std
lods
pop
shll
cltd
mov
std
fcompl
subb
gs
loopne
cmpsl
inc
fnstenv
and
sub
test
fcoms
mov
cmp
imul
scas
or
cmpsl
in
pop
mov
scas
jp
cmp
mov
leave
fxch
push
int
and
aas
mov
fnstenv
pop
cmp
cmp
and
inc
push
adc
jno
or
mov
mov
push
insl
push
scas
dec
stc
lret
cmp
mov
dec
and
sbb
sub
in
adc
jmp
mov
lds
pop
push
pop
inc
adc
jmp
fsubp
shrb
jmp
jnp
and
jmp
mov
push
cmp
xchg
xor
push
lods
imul
mov
dec
movsl
test
or
test
mov
cltd
mov
mov
mov
and
jecxz
testb
or
ljmp
cmp
mov
ds
bound
mov
cli
jno
mov
sbb
mov
mov
xlat
push
lea
sub
insb
rcrl
mov
rcr
xor
push
rolb
inc
pop
ljmp
push
fwait
mov
cmp
pop
sahf
cltd
pop
shlb
xlat
dec
js
int3
hlt
mov
mov
dec
xchg
orl
add
add
mov
je
in
popf
add
je
pop
sub
aas
aad
adc
xor
jecxz
dec
mov
cmc
push
cmp
into
pop
bound
xor
push
cmp
fldl
fildll
adc
jne
jl
popf
cmpsl
pop
xor
decb
jnp
sub
or
fisttpl
out
mov
lods
adc
je
or
push
mov
xchg
ja
aad
jb
dec
test
out
enter
cld
imul
jmp
lcall
mov
nop
xor
xchg
lods
xchg
inc
subb
and
adc
enter
cmp
push
jge
out
shll
popf
add
xor
sarb
pop
jb
and
cmp
pop
jmp
xchg
xor
push
sbb
mov
mov
lods
inc
shlb
test
pop
icebp
fldenv
cmpsl
inc
inc
mov
rolb
in
fdivs
xor
adc
aam
lcall
imul
push
push
jecxz
xchg
sub
or
cmpsl
push
inc
enter
les
fisubrs
shll
mov
push
mov
es
fcompl
jo
stos
fnsave
xchg
cmp
dec
aam
xchg
cmc
sbb
in
sbb
fwait
movsb
add
inc
aam
std
lds
push
cltd
addr16
dec
imul
and
mov
push
fbld
mov
movb
repnz
ljmp
jl
out
orl
shll
adc
dec
sbb
outsb
cmpsb
loop
stc
in
mov
xlat
push
ds
dec
jl
mov
add
and
inc
push
fisttpll
in
inc
mov
imul
xlat
push
aaa
test
mov
sbb
icebp
scas
inc
push
inc
sub
push
roll
fsubs
pop
int3
mov
sbb
dec
imul
les
mov
ljmp
sbb
call
sub
or
shrb
loope
mov
pushf
cltd
out
movsl
int3
adc
inc
cs
cld
xchg
testl
out
stc
outsl
and
or
or
popa
mov
jl
ret
addl
sbb
imul
xchg
mov
adc
ss
stos
lds
das
xor
iret
and
fimuls
xor
fwait
mov
sbb
das
push
inc
sarl
mov
stos
movsb
lea
mov
and
in
lret
inc
sbb
mov
scas
rcrb
std
loopne
fnsave
cmc
enter
in
fs
jns
pop
jecxz
es
cmpsb
mov
cmp
inc
movsl
mov
xor
mov
ljmp
out
add
std
cmp
std
or
mov
dec
test
loop
mov
add
dec
sbb
lock
mov
dec
les
incb
popa
lahf
fstl
pop
or
incl
je
jno
cmp
jge
dec
lret
jne
and
jae
lahf
push
dec
stos
push
daa
loopne
jns
lods
loop
mov
das
cld
xor
sbb
movsl
pop
xchg
in
jg
inc
dec
into
and
mov
add
imul
fstl
or
and
fisttps
mov
fimuls
das
es
inc
cwtl
inc
cwtl
int
add
and
cmp
inc
movsb
cs
aaa
sarb
cltd
and
push
jb
sbb
xchg
out
fbld
fisttpll
fsubrl
cmp
stc
ja
inc
mov
inc
lcall
or
rclb
xor
cltd
aaa
pop
les
or
and
xchg
push
insb
inc
out
xor
xor
sahf
xchg
sub
aam
pop
inc
int3
push
mov
push
dec
ret
shlb
insl
xchg
push
jle
lahf
icebp
and
dec
popf
xor
sbb
dec
push
pop
pop
les
es
push
enter
mov
mov
inc
xor
arpl
scas
clc
in
xchg
loop
insb
stc
imul
imul
xchg
fninit
add
scas
out
ss
lcall
adc
aad
lcall
mov
inc
enter
loope
add
cmp
ficoml
outsl
out
jecxz
mov
xchg
jle
inc
movsl
pop
test
push
adc
fldt
mov
pop
mov
in
fisubrs
iret
test
shlb
adc
sub
xor
lret
xchg
cmp
out
mov
scas
int3
sbb
ds
xlat
ret
movsb
xchg
pop
dec
shl
push
jecxz
jno
popf
jbe
mov
pop
and
sub
add
sbb
and
pop
aad
jmp
imul
insl
push
fldl2t
and
cltd
loopne
repz
call
cmp
mov
outsl
dec
ss
stc
repz
sub
mov
test
mov
xor
aaa
ja
loope
xor
arpl
sub
jnp
xor
pop
insl
pop
pop
cmpsl
test
dec
xchg
rdtsc
lods
scas
mov
cli
inc
test
mov
jnp
xchg
jl
inc
dec
jle
fdivrp
dec
test
lret
rcrb
push
or
lea
sbb
das
push
inc
cmp
mov
pop
mov
or
push
lods
fsubrl
jns
loopne
es
sbb
fs
inc
ficoml
leave
xor
test
mov
push
cmp
int
pushf
and
cmpsl
or
fnstsw
fdiv
nop
shll
mov
fisubl
scas
mov
outsl
daa
jno
bound
push
hlt
sahf
pop
jno
jns
stc
pop
sbb
outsl
xor
test
adc
jp
addb
gs
add
popf
roll
nop
cs
and
icebp
loope
mull
fyl2xp1
rolb
jge
pop
jmp
decl
inc
mov
or
mov
lds
iret
sbb
arpl
dec
xlat
or
test
test
mov
push
je
arpl
push
xchg
lods
add
in
mov
inc
push
inc
push
hlt
mov
pop
xchg
orl
pop
pop
xchg
mov
outsl
push
je
lock
dec
in
out
lahf
sub
sbbb
jmp
int3
and
fisttpl
stos
cmp
dec
shll
xchg
andl
stos
icebp
inc
add
add
clc
add
hlt
scas
imul
add
popf
or
mov
or
pop
mov
push
lods
jb
das
add
scas
stos
mov
mov
arpl
adc
orb
div
or
popa
jg
orb
addr16
mov
idivl
test
test
popa
mov
in
scas
or
jle
cmp
scas
mov
cmpsl
dec
dec
call
xchg
dec
data16
negl
idivb
sbb
cmp
add
jl
lods
xor
pop
and
jp
popa
push
pop
scas
cmp
mov
pop
push
push
push
add
out
or
mov
aas
adc
sbb
pusha
push
jge
loop
xchg
pop
xchg
pop
rcl
mov
or
or
mov
inc
loop
sbbl
mov
jns
mov
and
sbb
mov
sbb
add
sbb
xchg
xchg
sti
xchg
xor
and
jmp
out
jmp
jne
push
fistpl
sti
mov
inc
insl
add
fcoms
movsb
ret
icebp
dec
clc
pusha
test
mov
pop
pop
les
imul
or
fstpl
ljmp
cmpl
and
push
testw
in
clc
cmpsl
cltd
jns
sahf
popa
test
push
mov
mov
xor
adc
pop
push
dec
and
or
stc
mov
sbb
mov
jae
hlt
inc
xchg
movsl
bound
add
adc
jp
sti
pushf
sub
loope
dec
fucomip
and
loopne
inc
jge
int
push
adc
popf
jo
sbb
leave
cmc
mov
movsb
cmp
xor
cmp
cli
lahf
xchg
adc
push
rcll
mov
std
or
sahf
fldt
cs
fwait
cwtl
pop
dec
cmpsl
xchg
add
stos
hlt
xchg
push
fwait
repz
frstor
dec
mov
push
popa
movsb
fidivrl
outsb
jnp
cmpsl
clc
mov
and
push
mov
scas
push
inc
fidivrs
sbb
sub
loope
xchg
push
sahf
mov
push
mov
imul
dec
cwtl
mov
push
movsl
outsb
pop
inc
aad
clc
xchg
cmp
in
imul
xor
and
cmp
mov
pushl
jecxz
add
mov
push
dec
mov
das
jns
sub
or
loopne
and
negb
das
xchg
jg
dec
push
adc
lret
aam
mov
dec
xchg
add
aam
dec
orb
lcall
mov
shll
push
es
hlt
movsb
call
popa
dec
pop
dec
rcrb
pop
add
lcall
pop
std
sub
sbb
push
rol
sbb
clc
pop
shlb
les
mov
out
lahf
fisttpll
aaa
mov
add
test
ficoml
pop
jbe
and
adc
xchg
add
dec
out
mov
sub
iret
jg
push
adc
roll
pop
cmp
lcall
loop
rcrb
fstl
mov
adc
movsb
adc
jl
dec
jmp
and
dec
xchg
aad
cwtl
jmp
in
faddl
xchg
int
xor
flds
movsb
rolb
je
test
push
stos
ds
push
sbb
cmpsl
or
push
cmp
and
mov
popf
sub
mov
dec
push
call
sbb
jbe
xchg
jmp
mov
std
add
mov
ret
dec
lcall
mov
dec
xor
inc
jne
aad
inc
adc
repz
cli
lods
test
mov
adc
ss
adc
mov
xor
cmpsl
bound
and
nop
mov
jo
int
jno
xchg
cmpsl
shll
popa
fistl
xchg
out
leave
sbb
dec
iret
outsl
push
sti
sub
add
push
popf
mov
adc
push
xchg
dec
mov
sbb
leave
and
loopne
repz
les
icebp
int3
loope
shr
out
sub
push
in
outsl
mov
xlat
push
or
loopne
inc
or
or
xor
push
mov
and
loope
add
cmp
xchg
adc
xor
mov
int
imul
stos
push
or
or
jl
cmpsb
lret
testb
gs
in
fwait
roll
mov
repnz
push
loopne
xor
dec
pop
stc
les
lret
mull
idivb
movsl
xor
dec
movsb
mov
ret
cmp
or
icebp
sub
icebp
ljmp
popf
ficompl
ljmp
inc
push
roll
in
scas
xor
push
sbb
xor
test
mov
sbb
incb
adc
pusha
cmpsb
gs
call
jb
imulb
jge
or
xlat
pop
arpl
mov
aad
ret
mov
aas
cmpb
andb
mov
testb
pop
pop
insb
lret
ja
adc
test
pop
icebp
xor
mov
jb
popf
mov
aas
pop
jp
popa
jno
ljmp
int
sub
out
je
bound
je
xor
mov
mov
inc
fsubr
push
out
inc
je
ss
add
mov
ret
call
push
orb
idiv
out
arpl
fcoms
sarl
dec
daa
inc
adc
jp
jmp
mov
pop
jae
push
cwtl
pop
inc
fwait
nop
enter
cmpsb
test
jecxz
cwtl
cmp
sbbl
test
xor
or
iret
mov
cmp
mov
push
je
fists
outsb
add
dec
dec
mov
jbe
mov
jecxz
sbb
mov
bound
lea
and
lahf
mov
jle
lods
or
jle
fildl
xor
outsb
and
jbe
fisubrs
in
pop
mov
mov
push
loop
push
cltd
fdivr
jae
shrl
inc
stc
and
bound
jl
out
shll
mov
jle
lock
mov
lret
dec
pop
sbb
inc
xchg
xor
mov
jns
in
xor
xorb
insl
mov
in
ror
add
shlb
xor
mov
notl
push
cmp
dec
mov
xor
aas
add
push
jge
inc
shrb
rorb
and
in
in
lock
sbb
jo
mov
mov
popa
inc
gs
insl
test
jle
add
push
sbb
rolb
int
in
inc
dec
mov
sub
push
ror
and
add
xor
mov
add
movsl
je
mov
mov
pusha
dec
cmp
imul
jo
fdivrs
popa
movsb
mov
cmp
enter
mov
add
fildl
out
scas
in
jae
mov
jg
or
add
sub
nop
aad
cmp
mov
test
add
dec
mov
xchg
jp
and
lret
mov
xor
mov
cmc
sub
lea
jae
and
add
pop
jg
push
daa
cmp
push
jle
and
push
mov
pop
push
mov
cli
mulb
mov
jg
lea
jns
mov
ds
int3
or
icebp
add
sub
or
mov
popa
push
fnstsw
fwait
pop
imul
adc
les
popa
mov
mov
pop
and
mov
or
adc
cli
sub
and
push
mov
test
rolb
add
push
call
sub
push
xchg
xor
and
or
jns
sub
pop
test
call
pop
jmp
cmp
aaa
in
arpl
leave
loope
jno
push
xor
inc
test
and
aas
or
xchg
sbb
pop
pop
xor
lahf
and
xchg
loopne
int3
xor
int
jno
push
mov
fnstcw
jno
push
mov
adc
aaa
lods
sti
cmp
rorl
hlt
add
in
jae
mov
ss
leave
pop
inc
loopne
push
lock
mov
mov
mov
inc
stc
sub
cmpsl
lret
rorb
or
pop
movsb
and
lods
in
xlat
or
arpl
add
xor
jp
mov
add
xor
test
int3
das
ffree
xor
jo
fidivl
and
lods
in
dec
xor
mov
outsb
jp
aad
inc
cmp
jmp
mov
divb
adc
cmp
mov
sub
test
scas
idiv
test
aas
loopne
bound
jae
and
jp
mov
cs
jb,pt
stc
pop
add
fimull
clc
pop
roll
sbb
loopne
mov
mov
sbb
adc
jno
pushl
sub
xlat
jp
or
pop
adc
icebp
push
insl
push
iret
xor
jg
jb
std
leave
and
sti
sbb
or
loope
ja
imul
stos
dec
fldenv
pop
enter
dec
inc
xorl
shrb
ds
mov
jecxz
mov
cmp
movsb
sar
mov
imulb
ret
adc
xchg
or
push
test
shr
enter
jns
jecxz
mov
mull
jae
es
popa
sub
ficompl
fcoms
stos
sbb
mov
mov
dec
mov
jbe
aam
inc
push
push
cmp
and
and
repnz
outsl
inc
fnstcw
jmp
loope
sub
scas
mov
push
sti
aas
lds
mov
movsl
clc
outsb
xor
mov
lahf
cmp
jle
push
pop
inc
push
pop
or
push
insb
mov
push
mov
test
call
inc
pop
fs
jle
inc
jbe
popf
lods
imul
mov
cmp
cld
mov
stos
js
fisttpll
jmp
adc
cltd
cmp
lret
add
inc
pop
mov
jmp
pop
repnz
or
and
jg
jecxz
icebp
aas
cmp
lods
adc
mov
cli
jbe
daa
aad
push
mov
imul
xchg
jns
pop
pop
repnz
cmpsl
xchg
push
jle
cmc
jge
jge
inc
cld
movsb
icebp
mov
sahf
stos
das
sarl
sub
push
mov
add
aam
mov
dec
sub
lock
addr16
or
loopne
mov
mov
in
out
stos
fcompl
add
popa
jmp
nop
adc
mov
roll
cmp
jne
test
ret
daa
test
inc
cmp
addl
sbb
push
adc
push
inc
leave
xchg
cltd
sub
cwtl
mov
adc
and
push
xchg
push
loop
mov
in
xor
cmpsb
xor
std
jge
adc
sbb
dec
jnp,pt
mov
mov
inc
sbb
mov
sub
mov
mov
adc
outsl
push
jge,pt
adc
push
add
cwtl
push
icebp
aas
popa
xor
ljmp
adc
jle
push
or
outsb
leave
push
testb
pop
cli
mov
push
dec
jb
out
adc
mov
sete
loope
mov
push
fists
dec
stos
sbb
negb
pop
ret
and
ret
icebp
aad
jecxz
arpl
xchg
adc
mov
inc
push
loope
fsubl
dec
popa
cltd
push
fstl
inc
sub
out
add
out
mov
fsubrl
je
stos
adc
pop
xor
sub
mov
dec
nopl
inc
inc
jge
lret
cmpsb
dec
xchg
test
mov
jns
das
loopne
add
mov
in
ja
pop
and
cmp
lret
mov
nop
mov
and
shll
jp
add
lock
lods
push
lods
inc
adc
pop
lea
cmpsl
cmpb
and
mov
mov
fwait
insl
dec
nop
fnstsw
js
ret
addb
fldl
jns
ljmp
sub
or
xorb
and
push
mov
out
pushf
ret
push
push
test
jo
xchg
mov
cwtl
faddp
jg
pushf
jnp
loop
cmc
aad
xchg
mov
repz
test
or
mov
aaa
xlat
add
test
sbb
ss
mov
inc
pop
test
fxch
jo
ficoml
test
fimull
push
lcall
int3
ret
mov
test
cmp
sub
lock
or
push
in
adc
dec
iret
into
cli
xchg
in
sbb
add
and
inc
push
jp
cmpsb
gs
inc
xchg
lret
imul
pop
js
mov
movsb
sub
push
into
adc
or
in
test
sahf
into
mov
adc
jp
hlt
fdivs
test
cs
jmp
pop
cmpsb
xor
add
scas
mov
sarl
jb
scas
in
test
pop
rcrb
dec
jbe
dec
cltd
pop
sub
or
jae
subb
incb
and
xchg
mov
scas
xchg
movsb
push
cmp
cmp
nop
inc
fnsave
mov
insb
fmulp
xor
dec
and
mov
in
mov
in
add
data16
or
repnz
push
cmp
jle
sbb
adc
mov
xchg
adc
add
add
test
movsb
insl
sub
outsl
push
pop
xchg
add
pop
adc
and
jle
lret
cmp
cmp
sbb
push
out
xchg
or
jmp
push
jle
sub
xchg
sbb
fdivr
pop
xchg
movsb
ja
lret
cwtl
and
dec
adcl
nop
jle
xchg
insb
in
iret
or
lcall
jns
xchg
lods
jae
leave
jno
inc
adc
test
sbb
insb
xor
fstps
stos
pushf
jmp
shrl
hlt
jns
jl
sub
xchg
inc
xor
mov
and
lcall
sahf
ljmp
cltd
in
jns
movb
xor
jg
jmp
add
lock
lods
scas
push
mov
frstor
shll
ror
popa
lods
or
xor
or
insb
jle
lods
lret
mov
xor
and
pop
mov
fcmovnu
insb
push
xor
pusha
lcall
bound
sbb
gs
shl
jb
push
lret
sbb
hlt
psrld
rcr
jge
roll
rolb
lret
and
pop
insb
std
out
dec
jbe
xor
addr16
rolb
insb
insl
adc
lods
push
dec
mov
dec
pop
push
jb
fsubr
aam
xchg
pop
hlt
sbb
sbb
popa
xchg
or
jge
xchg
mov
push
pushf
in
stos
xorl
loop
imul
hlt
test
xor
add
bound
cwtl
out
mov
or
and
sbb
add
push
dec
cmp
push
movsb
in
push
push
imul
jge
les
aas
xchg
adc
or
fsubr
movsl
jb
push
mov
and
lds
mov
push
sbb
push
subb
scas
inc
sbb
ja
popa
sub
and
cmpsb
lea
movsl
sub
jle
xchg
inc
imul
aad
into
sbb
out
cmp
or
ss
adc
lcall
xchg
jne
enter
test
jg
lret
xor
xor
dec
dec
and
xchg
test
sbb
gs
cmp
push
in
adc
adc
sbb
mov
push
sbb
xchg
mulb
or
fisttpl
outsl
test
jmp
add
fsubr
gs
mov
out
outsb
adc
out
shll
dec
fists
fs
je
shrl
push
call
imul
jge
sub
gs
rorl
adc
cmp
xchg
jmp
cmp
xchg
mov
fsubrs
int3
cld
pusha
lds
jmp
andb
adc
adc
jmp
dec
jnp
inc
push
jmp
pop
iret
sub
imul
sub
mov
cmpsl
pop
aaa
add
aaa
cmp
insl
out
cmp
imul
jne
std
je
xor
jae
test
out
enter
jbe
pop
cmp
scas
push
jne
xchg
les
jge
lds
leave
xor
fistpll
out
das
test
jns
rcll
in
push
mov
jb
jb
fisttpll
xor
in
or
neg
mov
ss
pushf
push
and
fs
mov
fistps
pop
pusha
xchg
mov
mov
mov
ficomps
loopne
push
cmc
push
fbld
and
roll
rcrb
cmpsb
cmp
sub
sbb
jge
pop
sbbb
mov
daa
in
outsl
mov
sbb
mov
lret
out
or
addr16
mov
fwait
dec
pop
pop
jb
adc
shll
inc
daa
jbe
mov
add
divl
pop
lock
dec
jmp
mov
adc
sbb
cmc
jns
push
xchg
jmp
xchg
out
jmp
lcall
mov
fsubrp
adc
dec
dec
push
shll
xor
sub
dec
cmp
aad
and
mov
xchg
xlat
sbb
add
ret
cmc
inc
sbb
mov
sub
pushf
shl
add
divl
xchg
jns
jb
jg
pop
dec
jmp
mov
mov
mov
outsb
stos
stos
inc
jns
push
in
dec
pop
jge
pop
cli
stos
subb
pop
xor
xchg
dec
jg
movsl
add
push
mov
shlb
in
push
das
add
shlb
push
arpl
cld
test
mov
ljmp
mov
sbb
test
imul
imul
popa
push
mov
lea
lahf
popf
mov
pop
sbb
stos
and
xchg
mov
call
jbe
dec
iret
aad
ljmp
test
mov
xor
adcl
lea
jge
sbb
popf
les
aad
test
mov
sbb
pop
aas
push
stos
add
pusha
pushf
inc
adc
rclb
faddp
sub
and
xcrypt-ofb
cmpsl
sub
push
je
inc
jmp
mov
jg
mov
cmp
and
xor
lahf
push
xchg
cmp
fcmovbe
outsl
dec
mov
mov
cltd
cmp
lods
jl
mov
int3
push
cmp
insb
and
dec
cmp
dec
lods
xor
ss
sbb
pop
mov
xchg
pop
pop
lahf
lds
mov
shll
push
xchg
mov
nop
movsl
xor
icebp
sub
imul
dec
pop
pop
sahf
pop
pop
cmp
fdivl
lea
mov
adc
adc
lea
nop
pop
cmp
xchg
xchg
daa
dec
jae
or
push
loope
loope
repz
jg
cwtl
dec
adc
aad
hlt
in
mov
pop
xchg
idivl
arpl
test
insb
jo
sbbl
mov
dec
lahf
imulb
mov
icebp
dec
shl
test
mov
sbb
sbb
pop
or
cmp
mov
lret
mov
mov
iret
or
and
cli
xlat
xchg
push
inc
pop
scas
movsl
or
rcrb
les
or
and
subb
mul
loope
je
push
pop
lcall
add
add
push
pop
addr16
rorb
mov
lcall
push
out
mov
xchg
daa
orb
push
and
in
stos
fidivrs
aad
paddusb
mov
jmp
pusha
or
dec
mov
push
push
popa
jle
leave
pop
push
pop
rclb
roll
mov
mov
push
lahf
fbstp
mov
xchg
mov
pop
pop
inc
test
mov
adc
mov
sahf
es
and
sub
pop
lahf
jmp
jae
jmp
mov
cmp
xchg
cld
mov
jg
gs
and
andb
seta
jle
ds
dec
fstl
out
lea
call
in
pushf
xlat
outsl
lahf
nop
fcomi
int
push
cmp
lret
sbb
xlat
pop
mov
dec
pushf
pop
cmpsb
test
sbb
jl
jnp
xchg
daa
aam
addr16
in
in
out
mov
andb
mov
sub
inc
unpcklps
mov
fs
cmpsb
outsb
adc
mov
fldenv
dec
adc
xchg
xchg
ss
das
jle
scas
xor
xor
mov
inc
lahf
xor
out
sbb
cld
int3
xor
lcall
jbe
xor
addr16
pop
sub
cli
lea
test
xchg
pop
sti
mov
add
data16
imul
or
adc
aas
sub
dec
out
loop
inc
add
fdivrs
fwait
imul
cli
imul
cli
mov
pushf
jecxz
mov
stc
push
vcvtss2sd
cwtl
adc
in
mov
mov
rolb
out
sub
sub
mov
dec
shrl
pop
push
pop
fs
fwait
push
scas
push
push
sbb
sbb
inc
add
xor
movsb
dec
dec
mov
pop
rcrl
cld
mov
cmp
int3
and
insl
aas
push
mov
cmpsb
fstpt
das
les
mov
sahf
into
pop
lods
lret
push
leave
xor
mov
das
idiv
xor
xchg
add
nop
mov
mov
mov
iret
js
adc
jo
call
scas
dec
loop
scas
pop
jge
inc
test
xchg
addr16
stc
xorb
clc
fadds
jle
cmp
jle
xchg
sbb
pop
inc
sbb
mov
xor
and
stc
es
aad
dec
bound
movsl
xor
in
lea
push
pop
xchg
fisubl
movsl
push
shll
pop
and
jne
pop
int
add
fidivrl
lods
pop
arpl
xor
sub
outsl
cmc
shll
daa
cmp
sti
or
push
mov
mov
fwait
and
mov
or
lock
jae
and
fst
es
jp
aas
fidivrs
pop
hlt
jno
cld
dec
fsts
data16
cwtl
adc
shrl
mov
and
fcmove
jno
xor
iret
rclb
or
push
mov
pop
rcrl
mov
sbb
mov
mov
or
push
outsb
call
aas
aam
inc
sub
jne
std
les
pop
sbb
ds
iret
in
lret
mov
negb
jle
pop
ja
cs
jmp
iret
bnd
dec
cmpsl
inc
xchg
push
pop
mov
cld
lock
mov
mov
mov
stos
bound
arpl
std
pop
add
out
pop
push
cwtl
inc
xchg
push
ja
loopne
xchg
and
pop
nop
iret
aad
fldl
nop
or
push
pop
inc
icebp
and
aas
inc
mov
cmp
mov
push
in
lock
or
or
sbb
enter
popf
dec
out
jmp
loop
in
clc
in
les
imul
ret
pop
nop
dec
testl
ret
int3
inc
loopne
popf
mov
add
fadd
test
or
cwtl
std
imul
push
mov
inc
imul
dec
mov
jns
in
xchg
outsb
sbb
lret
lcallw
and
jge
arpl
push
jae
stc
xlat
push
mov
mull
jp
push
pop
mov
and
or
sub
imul
imul
xor
dec
test
mov
hlt
and
and
jne
push
jg
out
je
xchg
lret
movsl
push
jnp
mov
rcrb
gs
roll
adc
add
loopne
mov
test
popa
outsb
cmp
rolb
mov
mov
push
mov
int3
sbb
vmovss
sbb
or
sbb
push
jb
fcmovnu
mov
fisubs
push
fs
mov
les
mov
jns
mov
into
scas
add
inc
xlat
loope
inc
inc
xchg
pop
push
push
ret
inc
xchg
dec
loope
cmp
mov
jb
je
mov
loop
mov
jecxz
xchg
icebp
andb
and
pop
test
or
push
hlt
xchg
cmp
lods
imul
arpl
cmpsb
cmp
jg
mov
inc
aaa
sti
pop
dec
add
mov
std
jmp
jle
aas
mov
iret
dec
push
out
xchg
shll
leave
in
ja
popa
gs
stos
mov
push
mov
outsl
pop
cmp
jmp
cmpsl
aas
shlb
lret
movsb
push
cmp
inc
lcall
sbb
test
jnp
cli
mov
outsb
lds
lret
or
sbb
inc
mov
sbb
inc
scas
aas
add
imul
fcoml
jbe
mov
xchg
xchg
jge
and
ljmp
pusha
or
mov
je
fwait
inc
and
sti
mov
mov
loope
xchg
aad
mov
cmp
inc
jge
in
int3
sti
push
fsubl
xchg
outsb
jne
jmp
dec
jmp
insl
push
mov
lret
xor
data16
cmp
in
or
add
out
mov
shll
push
adc
rcrl
lahf
sub
sub
jle
lods
push
or
mov
pop
scas
jb
int3
fldt
call
cltd
cmp
iret
pop
adc
inc
xlat
stos
lock
rorb
add
xlat
leave
lahf
ret
fstpt
adc
cmpsl
pop
xor
aaa
lret
js
mov
repnz
les
dec
pop
and
js
mov
fnstcw
dec
jno
call
or
mov
push
nop
lahf
or
push
pop
popf
or
pushf
push
sub
jmp
sub
je
dec
add
push
add
iret
fs
loopnew
add
test
or
sbb
sub
push
imul
fisttps
dec
sbb
or
lock
pop
pop
mov
adc
mov
mov
cmp
add
mov
jge
hlt
pop
push
mov
sub
out
xor
test
xchg
adcl
cwtl
xlat
fcoml
sbb
je
mov
sti
push
or
mov
iret
mov
mov
and
inc
imul
xchg
repz
lea
pushl
mov
push
rolb
sub
in
jmp
jp
repnz
pop
cli
adc
xchg
sbb
inc
in
mov
sub
mov
xchg
adc
pop
in
into
in
lods
inc
mov
fldcw
jge
push
daa
adc
push
stos
outsb
push
lds
ljmp
mov
and
stos
mov
sub
push
insb
stos
mov
daa
pop
mov
jnp
jnp
mov
fisttpl
mov
cmp
ljmp
push
scas
and
ss
mov
repz
push
push
inc
dec
or
adc
dec
int3
fbld
adc
pop
icebp
or
inc
scas
adc
adc
sbb
xchg
mov
xchg
inc
js
imul
stos
sub
addr16
dec
and
mov
fsubrs
push
gs
inc
pop
enter
int
cmp
mov
fucomip
push
movsl
xlat
pop
xchg
xchg
jns
xor
mov
je
cmpsl
push
and
roll
repz
push
xchg
sbb
jecxz
sub
rcll
pop
clc
cmp
stos
in
sub
pop
mov
les
lret
mov
shl
in
sub
sbb
mov
mov
xor
push
ja
fistl
sbb
push
xor
iret
jmp
je
pusha
or
loop
cmp
dec
sbb
dec
cwtl
jo
pop
int
pop
test
mov
and
mov
test
insb
pop
insb
mov
cmp
cmp
sub
xchg
fadds
jp
lcall
ss
pop
jge
jg
fbld
std
dec
aad
sti
push
nop
or
out
stos
clc
add
mov
cmp
mov
and
loope
sbbl
outsb
aas
fdivrs
sub
mov
subb
jnp
jmp
mov
fcmove
sbb
xlat
popf
leave
dec
or
ss
iret
jnp
rcll
fnstsw
add
lahf
cltd
pop
sub
mov
aam
add
loopne
dec
out
rorb
test
mov
into
jo
lods
shrl
ds
adc
popl
push
pop
mov
cli
jne
lea
and
iret
xchg
mov
scas
or
movsl
int3
lahf
cmp
jo
or
sub
jp
nop
mov
mov
outsb
jg
mov
add
mov
jp
fldt
js
push
repz
rcll
andl
add
scas
cld
and
inc
stos
test
cmpsl
xchg
aad
cmp
pop
jo
xor
pop
cmp
jno
sub
adc
mov
out
inc
push
dec
push
xchg
addr16
cmpsl
sarb
push
in
sub
std
sub
jnp
mov
push
cmp
cmpsb
dec
mov
jle
mov
js
shll
pop
push
xchg
sbb
mov
pop
push
jl
inc
sbb
popf
mov
lods
add
adc
or
push
or
stos
mov
jne
rcrl
lods
out
loopne
clc
lahf
cmc
rcll
dec
xchg
lods
pop
mov
and
mov
repz
mov
rcl
inc
add
or
sub
movsl
mov
push
test
xchg
inc
sub
mov
xchg
pop
push
xor
nop
shl
inc
pop
js
pop
daa
jne
push
fiaddl
cmp
ss
and
fcomps
aas
aaa
cmp
xor
mov
or
scas
xchg
std
arpl
pop
add
pop
aas
cmp
jl
dec
mov
cmp
push
loopne
inc
push
push
or
inc
std
adcb
pop
pop
mov
inc
mov
inc
sub
lods
cmpsb
das
mov
aas
nop
cwtl
jecxz
cmp
scas
or
pop
cmpsl
fmull
fisttps
mov
jbe
das
stos
icebp
divb
mov
shrb
leave
pop
jne
adc
outsb
mov
std
mov
xchg
mov
inc
pusha
xchg
fs
int
xor
jmp
pop
cmp
mov
xor
daa
lahf
cmpsb
out
ljmp
ja
scas
loopne
and
iret
out
fdivs
inc
jl
testl
stos
dec
pop
jl
pop
or
xchg
mov
jnp
sbb
mov
ja
icebp
fsubs
jbe
mov
cli
scas
sbb
push
mov
push
push
xorl
add
jecxz
in
pushl
insl
in
mov
cmpsl
iret
insb
ja
mov
jne
mov
push
mov
popf
and
frstor
aaa
mov
add
push
cmpsb
and
icebp
dec
mov
stc
jmp
fimuls
repz
dec
cmp
int3
xlat
add
jo
gs
ret
push
mov
dec
mov
pushf
pop
push
sub
sarb
sub
ljmp
mov
inc
loopne
cltd
cmp
pop
sbb
aad
divb
adc
xchg
fildl
xor
mov
adc
lret
out
stos
fsts
pop
jne
lret
leave
mov
sub
lahf
sarl
lcall
mov
sub
jle
hlt
inc
pushf
nop
add
pushf
dec
sub
int
je
sub
push
out
lock
pop
cmp
dec
pushf
sub
lds
lret
fcompl
dec
sub
mov
or
test
xlat
lret
shrl
int
cltd
xchg
scas
xchg
jge
adc
shll
cmc
jnp
std
dec
jmp
push
repnz
mov
ds
int
jecxz
mov
pop
push
push
jge
je
sub
js
clc
jg
jno
insb
xor
das
ss
rcrl
arpl
xchg
xlat
ss
in
ficoml
push
dec
outsl
mov
clc
ret
pop
adc
daa
jb
inc
pop
out
lock
pop
scas
cmp
fs
pop
clc
mov
inc
ud0
xchg
lcall
fs
es
cmp
xchg
adc
mov
add
and
xchg
sbb
test
xchg
or
push
idiv
insb
inc
int3
push
mov
stc
scas
cli
fld
cmp
movsl
jb
cs
shrb
inc
sbb
push
mov
rcll
scas
incl
stos
lret
sub
imul
or
inc
aas
subl
xchg
and
fwait
mov
mov
and
negl
rcr
cltd
loope
imul
insl
popa
aaa
inc
dec
jg
ror
mov
mov
daa
lcall
mov
xor
sbb
subb
enter
sub
sahf
jne
mov
cmp
and
xchg
inc
dec
cmc
xchg
mov
push
cmpb
sbb
dec
mov
rcr
ss
out
xchg
icebp
mov
sub
sahf
aam
sub
and
xlat
aaa
test
divb
dec
jmp
pop
jg
cmp
xor
inc
push
cmp
inc
pop
aas
cmpsl
push
ret
lods
cmp
jp
or
inc
jne
and
shlb
dec
inc
push
sbbb
mov
xor
popf
test
jecxz
mov
mov
fdivs
imul
or
or
ds
lahf
add
out
fcoms
cld
cmpsb
or
push
mov
int3
mov
cli
inc
data16
and
cltd
lcall
xlat
mov
pop
adcb
outsb
sbb
push
or
and
and
outsb
mov
sti
sbb
js
pushf
repz
sbbb
cmovl
inc
dec
jge
ljmp
insb
in
pushf
fs
movsb
sbbb
scas
jle
mov
push
and
out
xchg
pop
js
sub
int
pop
cld
mov
and
fwait
add
insl
ret
jno
xchg
mov
das
inc
sbb
push
cmp
xor
call
inc
test
imul
or
xorb
pop
jmp
add
dec
test
and
shlb
inc
addl
std
sbb
push
add
inc
xor
adc
inc
rcll
outsl
ljmp
add
ret
or
movsl
cmp
sbb
push
mov
int3
leave
mov
cmp
outsb
and
stos
scas
lock
iret
iret
xchg
mov
in
imul
jo
adc
and
shrl
ja
repnz
out
xorl
inc
cmp
or
xchg
mov
adc
fisttpll
lods
shrl
out
xchg
ficompl
ja
lret
rcll
scas
rolb
xor
rcll
fiadds
or
or
pop
mov
xchg
clc
ss
je
mov
fcomps
lret
repz
mov
cmp
sbb
cltd
xor
or
aaa
test
push
adc
mov
inc
insb
sbb
sahf
cltd
xchg
inc
pop
or
xor
cmc
inc
xlat
sar
jb
or
stos
sub
or
loope
jne
std
popa
cli
xchg
out
fdiv
adc
mov
stos
cmp
mov
push
add
fisubl
and
into
into
mov
idivl
loopne
clc
popf
outsb
adc
sti
sub
mov
push
cwtl
ss
add
and
jl
dec
rclb
stos
fcmovb
lds
les
or
xor
mov
js
fistpll
inc
lret
add
jbe
mov
xchg
fdivrs
push
pop
daa
roll
bound
inc
lock
sub
xchg
add
cmp
leave
fisubrs
xor
mov
scas
ds
popl
pop
or
and
addl
leave
cmp
stos
or
pop
sub
sahf
enter
repnz
loope
jo
cmp
dec
bound
repnz
or
xchg
mov
xlat
inc
cmp
inc
es
adc
sub
jbe
stos
fwait
mov
push
jg
and
xchg
out
sub
je
clc
ret
dec
mov
pop
or
sub
shll
push
add
mov
fs
jno
sti
jp
popa
push
hlt
int
add
and
les
loope
stos
jle
push
scas
push
dec
in
mov
in
and
jae
push
push
xor
add
jb
mov
inc
sbb
mov
shrb
cmp
les
mov
and
sub
add
mov
push
xor
xchg
mov
and
lcall
inc
xchg
pop
cmp
or
inc
pop
lods
cld
sbb
pop
rcrl
sbb
pusha
push
repz
xor
test
sub
sub
push
pop
ffreep
daa
out
dec
js
cmpsl
in
not
mov
lods
jg
je
lods
inc
inc
xchg
es
imul
es
enter
mov
inc
pop
iret
xor
test
pushf
orb
xchg
out
icebp
cmpsl
inc
aad
or
push
lods
icebp
and
dec
aas
push
mov
jl
imul
popf
adc
cli
inc
hlt
and
pop
std
mov
inc
lcall
or
addr16
jns
xchg
lcall
mov
and
test
icebp
repz
jp
cmp
out
int
mov
ret
xchg
pop
lret
sbb
mov
stos
cmpsl
cmp
cmpsl
mov
dec
int
jp
int
jo
jnp
adc
add
jl
repnz
mov
lds
sbb
lcall
test
push
or
jg
imul
sub
sti
xchg
clc
in
cld
movsb
mov
push
add
adc
lock
mov
iret
test
fwait
sbb
or
jne
xor
loop
sbb
fbld
or
aas
add
loopne
gs
mov
adc
adcl
mov
int3
ror
sbb
adc
sahf
sbb
pop
repz
int
mov
cmc
mov
setg
bound
xchg
adc
mov
adc
pop
jge
xchg
iret
out
lret
mov
pop
test
das
cli
mov
pushf
shl
mov
sahf
dec
loop
jmp
pop
in
jno
cltd
out
es
add
shl
clc
bound
jns
loopne
popf
repz
insb
aas
movsl
push
push
mov
mov
cwtl
lods
mov
scas
mov
mov
cmpsb
jnp
mov
lods
inc
push
sub
div
xor
dec
sub
mov
mov
xorl
xor
movsb
adc
push
push
pop
mov
push
cwtl
shll
dec
into
pop
cmpsl
mov
cli
and
xchg
mov
test
xchg
cld
test
push
lret
hlt
jmp
es
mov
xor
into
jae
dec
insl
jbe
mov
pop
orl
insl
adc
mov
jns
and
mov
test
loop
fldcw
cmp
dec
cmp
mov
add
in
push
fnstenv
icebp
sub
fcmovnbe
fs
loop
cmp
aas
fmull
mov
mov
test
jae
shl
sahf
mov
bound
pop
mov
sahf
mov
sub
stos
cli
fwait
dec
sbbb
adc
xchg
cwtl
ret
mov
les
fisubl
xor
cmp
jle
xor
cmp
sub
sahf
sbb
mov
and
mov
pop
sub
mov
daa
sbb
in
out
arpl
cmp
and
sub
or
out
and
lret
sbb
out
iret
insl
insb
insb
dec
scas
xlat
pop
adc
movsl
cwtl
fildl
sbb
push
test
mov
cmp
icebp
lcall
push
test
in
cmp
iret
sbb
ds
pop
jbe
aaa
hlt
leave
mov
movsb
mov
adc
in
xchg
sbb
xchg
aas
arpl
pop
cmc
leave
aad
jp
inc
jae
scas
cmp
pop
xor
loope
inc
ljmp
je
rorl
out
movsb
mov
mov
mov
adc
fwait
out
outsb
jmp
mov
fs
xchg
icebp
inc
sub
mov
jo
sti
rcrl
adc
lret
pop
pop
and
lds
push
es
in
jmp
rclb
sbb
iret
mov
ret
dec
out
test
xor
mov
loopne
xchg
dec
int3
adc
push
rolb
ret
mov
sbb
add
rorb
ret
scas
jns
aaa
scas
aaa
jno
ss
push
add
xchg
jp
adc
cmpb
mov
stos
jnp
ja
test
inc
xchg
insb
out
xchg
add
jg
sub
js
or
dec
call
inc
push
inc
adc
in
ljmp
adc
cltd
mov
faddl
adc
dec
stc
mov
fs
test
dec
outsl
sbb
mov
jg
jmp
aam
pop
mov
mov
pop
sbb
repnz
scas
mov
lret
or
cwtl
arpl
and
cmp
popa
test
dec
add
push
out
sbb
in
cmp
adc
test
add
lret
xor
dec
pop
lock
inc
push
jae
loopne,pt
jo
leave
aad
sbb
and
pop
jl
movsl
lret
xchg
sub
out
in
loop
mov
sub
or
pop
out
dec
or
data16
pop
fisttpll
adc
cs
ret
cmp
in
cmp
inc
test
fldt
test
jl,pn
iret
int
stos
test
jecxz
in
shrb
jae
imul
push
scas
lahf
ret
jns
mov
es
movsl
fdivs
hlt
sub
adc
push
mov
sar
mov
fnstsw
stc
push
jle
push
sub
aaa
imul
pop
sub
jb
push
sti
xchg
pop
cmp
push
outsb
mov
push
int
and
addr16
jecxz
std
jmp
push
je
mov
lret
and
stos
push
jl
jno
ljmp
loope
pop
mov
push
mov
imul
inc
pop
add
shll
cs
inc
fidivs
cmp
sbb
mov
inc
popf
lret
data16
xchg
and
ss
adc
add
mov
cld
pop
push
punpckldq
std
mov
or
sbb
adc
add
enter
decl
in
mov
sbb
mov
call
stos
mov
lret
andl
ss
cmp
enter
fstps
mov
cmp
fdivp
nop
mov
out
dec
mov
push
lret
loope
push
dec
out
and
push
pop
clc
imul
mov
fdivrl
lret
ljmp
addr16
addl
add
test
aam
mov
push
dec
je
arpl
dec
jb
scas
js
or
xchg
int
mov
in
stos
jg
xchg
sbb
cmp
xchg
inc
inc
lods
push
cmp
xchg
mov
push
or
adc
movsl
mov
je
mov
jmp
insl
xor
ret
rcll
sti
shll
ret
adc
sub
mov
mov
xchg
int
xchg
xchg
aas
iret
roll
cld
mov
cmp
fbstp
outsl
int3
lods
jne
fmull
xchg
add
or
jnp
scas
fisubrs
jl
fcoms
xor
test
sub
xchg
dec
js
addl
sub
add
cltd
outsl
test
push
fs
ficomps
or
jg
jb
iret
mov
out
psubsw
and
test
fsts
jnp
loopne
notb
sub
or
jae
jle
and
inc
sbb
mov
ret
lds
mov
sub
mov
inc
lea
push
pop
imul
out
sub
cmp
or
xlat
xchg
adc
cmp
cmp
xchg
adc
test
xlat
xor
ret
in
clc
sub
outsb
js
lea
jecxz
repnz
dec
and
pushf
push
push
movsb
and
mov
inc
int3
sub
adc
jb
outsb
notl
push
je
xchg
sbb
pusha
je
sub
je
or
dec
cmp
xor
clc
test
xor
lcall
pop
dec
int3
stc
aad
stos
cmpsl
xor
cmp
imul
inc
mov
xchg
cmp
mov
jns
enter
mov
ds
es
jo
sbb
push
push
arpl
loopne
pusha
int3
mov
mov
sahf
or
cmp
hlt
add
test
mov
addl
mov
out
sbb
in
shrb
dec
movsl
cs
jecxz
lods
adc
push
or
jnp
inc
cmp
xchg
fstpl
mov
adc
sahf
fstpl
dec
inc
rcrl
lcall
add
test
fidivs
scas
mov
fbld
ret
dec
add
rcll
jbe
subl
or
cmp
and
xchg
call
sbb
pusha
je
cmpb
fdivrl
xchg
imul
shrb
adc
mov
pop
xchg
in
jb
test
pop
adc
into
das
test
call
imul
or
cmpsb
notl
ficomps
add
jne
in
ljmp
sbb
mov
fstl
sti
mov
push
std
jnp
addr16
dec
mov
add
incl
in
mov
rclb
cmpsb
out
push
pop
mov
jl
xor
sub
adc
lods
out
xor
aaa
adc
inc
inc
inc
pop
pushf
repnz
sub
push
xchg
loop
jbe
lret
jecxz
js
xchg
dec
loop
and
inc
inc
icebp
into
add
jnp
aad
push
sub
xchg
xchg
fiaddl
push
imul
fwait
outsl
leave
lds
or
xor
xor
or
mov
mov
push
ficoml
pushf
lcall
popf
cmc
mov
in
andl
xor
jmp
stos
lds
cmp
pusha
pusha
cmp
sbb
add
insl
pop
xor
jo
testl
pop
xchg
mov
repz
mov
cmc
push
fsubs
bound
jo
cmp
pop
dec
cmp
jns
pop
mov
ja
and
fstpl
mulb
xchg
dec
sbbb
sub
xchg
dec
cwtl
pop
imul
jmp
nop
push
cmpsb
sub
repz
mov
push
pushf
dec
scas
test
sbb
sbb
adc
inc
pop
push
push
cmp
adc
pop
push
pop
negb
xor
dec
sub
imul
xchg
and
mov
flds
rol
outsb
jns
jnp
mov
push
mov
lcall
mov
mov
and
jb
or
insl
loope
push
xor
cmp
cmpl
sbb
or
mov
outsl
loope
add
cli
push
outsb
mov
lahf
stc
in
pusha
jl
stos
movsb
jo
rcrb
fistpll
outsb
xchg
xlat
cmp
cmc
outsb
mov
sbb
aas
xchg
rcr
das
xchg
jge
adc
jmp
jge
aas
dec
in
scas
adc
adc
mov
xchg
enter
ret
nop
popa
jns
es
mov
aad
jbe
dec
ds
je
out
and
xchg
or
or
cwtl
mov
fistl
addl
sti
jg
subl
mov
cmpsb
xor
mov
movsl
loopne
pop
jge
push
fisttpl
aad
in
jno
test
popf
filds
mov
popf
lea
inc
cmp
cltd
cmp
fstl
jle
sub
xchg
mov
or
sub
mov
sub
push
div
xchg
add
loop
loope
jg
jle
and
outsl
mov
add
dec
pop
xor
jb
sub
nop
cmc
jne
mov
sub
loope
subl
loopne
jbe
lcall
and
clc
cmc
test
in
mov
xor
lcall
out
sub
cmpsl
cltd
fidivrl
jns
pop
lret
clc
adc
jecxz
adc
xor
pop
enter
add
shrl
inc
mov
mov
std
idiv
mov
jo
int
arpl
pop
cltd
mov
xor
cmp
shr
xchg
into
pop
stos
jle
xlat
test
sub
sahf
loop
cmp
lahf
mov
enter
popf
push
xorl
jecxz
daa
bound
cmp
jno
and
ret
aad
insb
push
inc
aaa
inc
adc
das
scas
xchg
sub
inc
lea
movsl
xor
jae
shl
enter
push
in
sbb
xchg
and
dec
jmp
ja
adc
insl
push
outsl
pop
xchg
rorb
inc
push
fldcw
lock
pop
jb
rcll
sbb
mov
xchg
mov
fdivrl
xchg
inc
mov
negl
xchg
mov
addr16
pop
jne
cmpsb
jecxz
sub
outsl
jae
out
xchg
test
xchg
aaa
sbb
mov
pop
and
idiv
mov
popa
adc
xorl
xchg
mov
mov
rorb
test
sahf
sbb
out
or
movsl
mov
inc
movsl
xor
inc
push
jne
into
repnz
sbb
inc
test
sub
call
mov
stos
mov
jnp
dec
and
loope
cs
mov
inc
fnstcw
jne
stos
movsl
sub
cmpsb
call
fidivrs
fcmovbe
jo
movsl
loopne
jecxz
fucomp
scas
repz
xchg
cmp
repnz
mov
cmp
mov
push
adc
jnp
gs
and
push
pop
sbb
and
mov
push
cmp
sub
pop
dec
clc
push
or
pop
lret
xchg
fwait
push
cmp
xor
test
push
movsl
xlat
hlt
push
ss
in
sbb
cmc
in
arpl
xchg
and
hlt
jnp
sbb
pusha
movsl
sbb
sub
jo
loopne
sbb
sub
cmp
imul
pop
icebp
icebp
xchg
cs
mov
fisttpl
sbb
or
cwtl
cld
jecxz
xorb
in
fdivl
mov
in
push
mov
xor
or
outsl
sub
ljmp
and
subl
cld
jb
cmpsb
inc
fisttpl
shlb
call
nop
and
test
iret
out
hlt
push
adc
add
imul
roll
iret
add
ds
push
adc
outsl
pop
imul
cli
sbb
test
xor
jbe
cmovge
cwtl
icebp
or
sbb
jge
pop
jns
mov
jmp
xchg
pop
stos
loop
lods
jecxz
cli
mov
mov
cmc
or
push
popfw
mov
je
jnp
movsl
jp
cmp
bound
mov
or
fs
and
pusha
lcall
outsl
mov
shrl
out
sub
jmp
push
sahf
test
repz
jnp
push
callw
mov
clc
das
cld
xchg
sub
ror
je
into
inc
mov
out
nop
jnp
jns
inc
repz
loope
jmp
cmp
shll
jb
out
ljmp
add
mov
xchg
or
rolb
xchg
jg
movsl
pop
test
pop
jbe
push
or
inc
dec
lods
call
cmp
or
ret
push
pop
add
fbstp
fs
xor
mov
add
ljmp
cmp
sbb
pop
mov
int3
frstor
shld
push
jb
mov
xlat
enter
mov
jne
push
push
mov
aam
fstp
sub
jne
and
sub
pop
aad
inc
popa
sti
xchg
sahf
fistl
outsl
dec
je
in
lock
outsb
nop
lret
clc
push
int
cmp
xor
push
push
xchg
cli
lcall
stos
mov
pushf
add
sub
out
cmpsb
xchg
fsubrs
dec
push
out
inc
adcb
ret
fdivrs
loope
gs
cs
in
xlat
jg
mov
nop
test
out
roll
push
or
jp
sahf
xor
sbb
xor
outsl
enter
add
xchg
shll
push
les
mov
mov
xor
pusha
push
mov
mov
adc
sub
or
rcrb
mov
and
mov
insb
fmull
push
loop
sub
or
pop
shll
sbb
mov
lahf
enter
adc
lea
sbb
inc
outsl
inc
aam
je
mov
rcrl
ret
cmp
iret
pop
dec
pusha
mov
pop
sub
test
enter
and
mov
jl
dec
scas
jns
mov
stc
iret
insb
negb
push
cwtl
jp
pushf
or
inc
mov
inc
in
inc
test
das
jl
int
cmp
imul
and
inc
aad
lds
shl
xchg
lods
mov
jae
jbe
cmp
jbe
subb
adc
and
pushf
mov
sub
call
jbe
ret
call
sub
xor
jo
imull
push
std
scas
and
sbb
ret
mov
ror
push
jp
ret
adc
sbb
push
outsb
adc
hlt
adc
sti
cmp
jl
nop
push
imul
push
inc
dec
arpl
dec
pop
inc
loop
cmpsl
jg
sub
xorl
push
push
cli
fcompl
jmp
andl
jmp
and
nop
mov
mov
rol
ljmp
or
jl
inc
fdivrs
decb
loopne
jnp
sahf
lcall
jmp
sub
or
mov
arpl
push
fs
aaa
lea
inc
enter
daa
pop
cmp
pop
push
cld
rolb
or
lods
adc
cmp
cmp
je
idiv
mov
mov
adc
pop
fisubs
adc
push
adc
mov
jecxz
dec
ds
mov
test
and
notl
xchg
mov
adc
sbb
mulb
lret
add
sbb
push
xchg
shll
adc
pop
pop
cltd
and
or
ljmp
push
scas
sub
adc
repz
inc
scas
add
sarl
dec
inc
out
xchg
sub
shll
enterw
test
cld
mov
sbb
pop
jmp
das
xchg
dec
mov
jp
mov
mov
sti
mov
lcall
in
test
xchg
inc
test
aad
cmpsb
mov
push
cmc
popf
pop
test
popf
test
hlt
xchg
push
add
mov
pop
sub
add
shrb
icebp
sub
addr16
clc
adc
jnp
orl
filds
in
sbb
pop
mov
cmp
dec
inc
out
mov
lret
mov
call
and
leave
xor
imul
mov
out
lret
ror
push
lods
incb
sbb
outsb
lret
xor
dec
pop
xor
inc
jno
push
lds
nop
aad
mov
push
dec
push
lea
xor
iret
fisttpl
mov
inc
mov
fistpl
test
out
std
dec
jno
stos
es
lret
push
xchg
mov
inc
mov
push
jnp
sbb
mov
cld
loope
cwtl
aaa
inc
fwait
iret
repz
fnstsw
sbb
pop
pop
push
adc
addl
enter
shlb
mov
ret
lds
xchg
mov
pushf
cmpsb
lods
xor
into
lods
mov
mov
adc
jae
jp
sar
add
dec
sbb
and
push
mov
dec
push
sbb
test
enter
lock
adc
or
and
fists
add
pusha
adc
shr
push
push
roll
stc
pop
shr
loope
sbb
push
cmp
or
cmp
ss
pop
ljmp
mov
mov
aas
lds
cmpsl
test
adc
loopne
and
psubb
enter
adc
repz
cld
xchg
pop
shlb
insl
int
sbb
mov
bound
cld
stc
roll
shll
xor
testl
aad
cwtl
cmpsl
outsl
test
out
std
out
fwait
into
or
out
pusha
or
cmp
hlt
dec
rcr
sub
mov
roll
mov
and
sbb
in
bound
mov
push
push
xchg
in
cmp
push
fsubl
das
add
gs
pop
and
xchg
jge
cmp
int
outsb
xchg
movsb
mov
sbb
mov
and
pop
fidivs
das
idivb
dec
jbe
jg
xchg
and
cli
mov
mov
lds
out
orl
rclb
addr16
pop
call
xchg
mov
push
cwtl
lcall
push
es
sbb
inc
bound
pushl
adc
inc
mov
push
sbb
mov
out
jne
add
add
xchg
push
in
add
cmpb
jbe
neg
push
fiaddl
xor
es
push
add
xchg
push
push
lahf
xchg
or
mov
add
arpl
push
test
lock
je
sarl
adc
push
shl
fucom
hlt
cmpsb
add
xchg
mov
xchg
and
push
insb
xorb
adc
push
fdivs
ds
in
movsb
push
push
imul
adc
sahf
sti
es
outsb
in
push
movsb
repz
push
mov
pop
jnp
xor
dec
sbb
xor
mov
cwtl
dec
push
outsl
push
dec
mov
std
mov
pusha
mov
mov
xchg
mov
addl
mov
cmpsb
out
cltd
add
mov
inc
xchg
jg
dec
xchg
pop
nop
xchg
out
ret
xchg
pop
pop
sbb
inc
mov
test
and
inc
xchg
outsl
repz
stc
jp
in
ss
add
cli
xchg
cltd
lret
push
filds
cmpsl
mov
push
call
sub
hlt
popa
mov
stos
arpl
jo
push
shrl
sbb
gs
lret
xor
push
add
push
insb
and
pop
fwait
push
xchg
push
jbe
loop
ljmp
les
rclb
mov
inc
cs
and
ja
int
cli
and
aaa
fstps
sahf
rorl
ret
jge
pop
ja
movsb
arpl
mov
sti
mov
call
daa
xchg
jg
jno
mov
in
sbb
pop
ret
xor
mov
loopne
add
daa
xchg
mov
fwait
mov
movsb
xchg
push
in
gs
inc
sub
pop
imul
gs
aad
in
sti
mov
cwtl
pop
jmp
cwtl
fs
clc
xchg
call
arpl
mov
push
xor
jecxz
pop
cmpsb
insl
adc
cmp
inc
pop
jb
mov
inc
inc
stos
push
aam
inc
cmp
sub
add
push
rclb
pop
lahf
jl
arpl
lea
xchg
sub
repz
fstps
add
push
neg
xchg
xor
cmp
rcll
imul
fwait
stos
inc
mov
push
push
test
xchg
jb
loop
xor
ss
jbe
sub
ret
les
inc
push
jl
lret
negl
out
jle
sbbb
xlat
outsb
notb
aad
sub
fists
sbb
add
sub
dec
cmc
in
scas
xor
pop
or
into
lock
pop
icebp
jmp
inc
insb
mov
cpuid
data16
lods
lcall
test
push
andl
mov
cmpsb
inc
test
bound
out
sbb
jno
rcl
sbb
mov
pop
clc
and
pop
into
in
jns
loopne
sbb
cmp
pop
push
xchg
xor
lock
mov
and
sbb
repnz
or
adc
and
scas
mov
lcall
pop
out
adc
pop
push
mov
mov
push
mov
rcll
pusha
jl
jb
ret
fimull
push
lock
out
fcompl
jmp
insb
mov
dec
ja
lock
out
fs
jae
xor
icebp
xor
pusha
push
sub
push
ja
mov
ss
sub
mov
loope
pop
push
movsb
cs
les
or
xchg
push
insb
add
lret
push
push
out
cmp
jae
mov
jge
insl
fildl
bnd
nop
in
push
js
pop
clc
inc
adc
jns
and
popl
dec
enter
mov
add
pop
xor
arpl
ret
sbb
cli
mov
or
sbb
subb
insl
add
cmp
test
addr16
adc
cmp
div
push
jbe
mov
cmp
out
icebp
pop
pop
cli
xchg
insb
lods
fstps
sub
and
jns
out
pop
jg
jbe
int3
sarl
mov
inc
out
adc
scas
je
mov
xor
cmp
sub
mov
push
bound
pop
aas
out
inc
test
int3
mov
mov
cmp
je
lcall
xchg
dec
sbb
movsb
mov
inc
sub
xor
mov
lods
loope
or
xlat
rolb
xor
sbb
or
fsub
in
cwtl
sbb
movsl
mov
pop
in
pop
or
or
in
push
pop
in
mov
fstps
adc
or
push
sub
ja
cmpsb
push
mov
xor
inc
and
jmp
rclb
test
es
insb
pop
pop
xor
inc
ret
push
xor
addl
push
or
cmp
add
sbb
mov
shrb
push
rcr
lds
adc
push
or
xchg
add
shll
and
mov
lret
andl
rorl
inc
inc
and
mov
or
sti
rcrb
cmpsl
leave
pop
test
sbb
std
jae
out
xchg
vandps
pop
pop
fcomi
ficomps
cli
loop
iret
stos
fld
push
aad
and
insb
mov
lods
mov
mov
or
mov
popf
int3
adc
adc
mov
sti
imul
or
imul
or
sub
mov
xor
mov
adc
ja
ficompl
pop
mov
ljmp
in
mov
repnz
dec
movsl
adc
push
mov
xchg
adc
jmp
daa
jecxz
mov
daa
mov
ret
xor
or
push
idivl
test
sarb
nop
push
iret
out
dec
mov
or
enter
push
aad
adc
mov
mov
lds
adc
mov
sub
mov
xor
loop
and
push
imul
mov
arpl
cmp
sub
mov
outsb
mov
cmc
lds
inc
fstpl
cld
cmp
push
mov
subl
cmp
mov
or
cmp
clc
xchg
loopne
or
ret
or
pop
xchg
and
mov
push
dec
psubusw
and
aam
sub
push
add
or
jns
mov
and
int3
mov
jp
decl
in
xlat
sub
imul
inc
sub
jb
mov
fimuls
pop
testb
mov
call
sbb
clc
fdivs
faddl
repz
fistps
jo
das
aam
jb,pt
daa
test
scas
decl
push
movsb
mov
mov
and
jno
mov
sub
ja
cwtl
pop
inc
stc
roll
dec
jne
addr16
ret
sbb
popa
in
fbld
popa
scas
daa
cltd
not
aaa
jl
jge
and
add
outsb
ficompl
das
stos
pop
jmp
jp
sbb
inc
push
jmp
imul
in
pop
test
je,pt
clc
leave
sbb
sub
sub
add
divl
fs
push
pushf
sbb
mov
fwait
adc
cltd
ffree
in
inc
push
jo
js
xor
pop
rorl
xchg
outsl
add
push
add
pop
adc
sbb
inc
mov
aad
cmp
or
stc
insl
dec
dec
dec
mov
adcb
ss
or
std
dec
pusha
jne
sbb
mov
dec
add
add
sub
xchg
ds
push
shl
lret
rcl
call
sahf
enter
lods
repnz
sub
and
cmp
cmpsl
jae
sub
adc
enter
inc
bound
das
xchg
scas
push
sub
aam
shlb
xchg
cli
repnz
and
jge
rorl
sub
mov
add
pop
mov
ja
xor
jne
and
scas
adc
jne
sti
int3
pop
imul
xchg
out
cmp
dec
sub
sbb
push
or
insl
sub
xchg
sbb
or
sahf
fld1
xchg
repz
icebp
mull
ret
lret
int3
mov
loopne
sti
pop
jl
or
lret
add
mov
adc
int
cltd
cmpsb
movsl
push
mov
test
jb
cwtl
pop
les
idivb
fdivrs
aam
dec
xor
dec
or
out
arpl
cmp
lahf
dec
push
or
jnp
dec
xorb
jmp
xchg
gs
mov
mov
or
sbb
xor
cli
out
pop
pop
inc
xor
inc
pop
rcll
frstor
xlat
imul
ret
jl
or
add
inc
inc
or
cltd
movsl
lahf
mov
lea
mov
and
out
out
xchg
rorb
mov
les
aam
lret
int
xor
xchg
mov
add
xor
notl
push
aad
jg
dec
pop
mov
cmp
lods
pop
cmp
dec
sbbb
ss
inc
pop
jns
test
out
mov
popf
int3
repz
push
dec
outsl
jecxz
xor
fs
jae
andb
enter
cmp
mov
outsb
cltd
mov
mov
je
mov
add
push
inc
xchg
cmp
fisubs
into
push
cmc
faddl
jmp
lods
stc
cmpl
les
test
mov
jo
cmpsl
xchg
orb
aad
cltd
stos
fistpll
or
jne
jmp
pop
push
pushf
enter
out
adc
mov
xchg
jp
lods
cmp
dec
push
pop
jecxz
pop
mov
lds
popa
mov
int3
xor
stc
xchg
mov
imul
pop
xchg
lods
jmp
adc
fs
sar
in
inc
sub
lea
or
mov
mov
scas
ljmp
pop
inc
cmp
jo
mov
in
jo
out
jo
mov
dec
or
ja
adc
xor
cltd
adc
mov
add
fcompl
mov
pop
mov
pop
jae
negl
bound
sbb
mov
push
sti
sub
les
in
sub
imul
std
add
fistps
mov
inc
dec
mov
and
jb
lahf
add
in
sub
iret
cwtl
mov
mov
mov
int
ja
stc
fwait
inc
movsb
mov
add
test
mov
dec
push
lcall
pop
push
div
lcall
fst
pop
sub
mov
dec
cmp
fisubs
sub
xchg
lahf
fsubr
add
push
dec
xor
sbbl
in
std
xorl
mov
nop
dec
mov
int3
iret
mov
or
fsubr
shlb
mov
in
std
xchg
pop
lcall
sub
and
mov
cmp
frstor
rcpps
or
dec
xchg
jb
adc
loop
sbbl
lds
jae
nop
mov
popf
mov
pop
mov
cltd
push
jl
lret
xchg
push
jp
mov
sbbb
or
dec
xor
mov
scas
inc
dec
shrb
repz
insb
test
adc
mov
sbb
inc
mov
jne
inc
sbb
and
ja
gs
xor
inc
mov
jne
sbb
cmc
shll
ret
lock
inc
repnz
xchg
imul
mov
subb
int
movsb
inc
push
ds
jnp
in
loopne
fldt
inc
loop
pop
adc
push
cli
fistpll
js
lock
sub
xchg
adc
je
std
add
xchg
mov
mov
das
fwait
mov
enter
mov
jns
loop
sub
push
mov
aam
sbb
jge
push
out
sub
ret
adc
cmp
dec
aam
inc
dec
mov
inc
fldt
subb
adc
sbb
xchg
lahf
cli
mov
out
jbe
inc
xchg
insb
or
pop
sbb
mov
pop
pusha
fldl
sbb
add
pushf
xor
push
ss
repnz
or
pushf
mov
inc
roll
fmulp
lahf
mov
outsb
push
cmp
scas
hlt
rcrb
xor
adc
jbe
aas
sbb
sbb
pop
push
xchg
mov
xchg
xchg
dec
sub
dec
cmp
pop
loop
mov
dec
loope
fcompl
mov
sbb
lea
ja
dec
outsl
ss
call
popf
adc
xor
push
xchg
mov
jle
cld
out
fimull
ss
sub
pusha
adc
std
enter
test
rcrl
les
adc
mov
bound
adc
xor
cli
lds
imul
shll
push
cli
rorl
mov
push
sarl
popf
adc
xor
in
sbb
notb
cld
or
cmc
test
and
test
addl
int
loope
cwtl
sbb
jge
jnp
repz
xchg
cmp
loopne
push
inc
mov
pop
push
lds
sub
inc
xchg
movsb
in
dec
cmp
inc
xor
push
and
in
push
xchg
pusha
xor
out
adc
mov
mov
dec
out
outsl
test
mov
mov
es
xlat
imul
int3
push
mov
add
add
jns
push
test
out
arpl
ficoml
mulb
rorb
fidivrl
push
xor
cmp
test
xchg
rcll
pusha
das
ss
inc
das
pop
fsubr
mov
stc
xchg
jg
shlb
pop
mov
aad
shr
mov
in
daa
sbb
aas
out
dec
jo
dec
ret
pushf
add
jnp
into
repz
add
xchg
mov
jb
xor
and
push
inc
add
fwait
dec
hlt
mov
add
sbb
rolb
adc
jmp
xor
pop
xchg
aaa
adc
add
std
mov
cmp
test
ds
scas
dec
out
fwait
mov
xor
pop
mov
push
inc
jmp
imul
sub
xchg
dec
in
dec
add
pop
fnsave
mov
icebp
jl
ss
ss
iret
jbe
mov
mov
push
bnd
dec
imul
aad
insb
cltd
sub
jno
pop
insl
pop
imul
data16
and
mov
cld
inc
jmp
mov
lret
mov
push
pop
jge
adc
sbb
pusha
cmp
mov
sarl
sub
pandn
cmp
dec
sbb
dec
negb
sbb
sub
add
sbbl
push
mov
pop
push
mov
daa
test
inc
cmp
or
ja
adcl
insb
imul
call
or
cmp
push
jnp
aad
mov
mov
xor
pop
cmp
push
inc
adc
lods
lods
fs
mov
lahf
adc
xchg
fwait
pushf
inc
push
adc
or
in
mov
add
cmp
out
stos
lods
add
rcrl
mov
push
fidivs
imul
ss
lahf
pop
inc
sbb
aad
mov
push
in
add
add
lahf
xor
stos
jne
jmp
je
hlt
and
lea
stc
std
lret
sub
pop
pop
cmp
lock
bound
je
cmpsb
mov
and
fisttps
xchg
sbb
cmp
jo
jle
mov
jmp
add
mov
jne
subl
outsl
cld
ret
xchg
fmuls
mov
pop
into
xchg
mov
pop
popf
lret
scas
je
popf
fdivrs
imul
in
bound
andl
test
xor
cmpb
pop
xor
push
push
ja
pop
xorb
or
and
pop
or
je
xlat
mov
sbb
fcmovb
jecxz
movaps
adc
push
add
pop
aas
imul
jecxz
cld
mov
push
ret
int3
inc
push
in
movsl
or
mov
repnz
sarb
popf
mov
push
mov
ds
daa
out
mov
addl
cltd
jnp
insb
mov
mov
adc
pop
movsl
das
push
pushf
les
dec
adc
les
stos
prefetch
or
out
stos
stos
xor
mov
cmc
lods
add
popf
add
pop
and
loop
cmp
inc
movsl
pop
shll
mov
push
sub
call
sbb
lret
inc
mov
popa
cli
push
cmp
xchg
ss
popa
jp
or
ss
and
mov
aam
push
stos
xor
sbb
add
push
rolb
lret
call
inc
inc
pcmpeqd
movsb
mov
inc
rorl
outsb
mov
sbb
shl
push
lock
test
mov
cli
into
decl
jnp
jbe
lret
sub
clc
and
mov
mov
pop
mov
xor
outsb
jno
clc
add
ja
push
lret
arpl
pop
out
jnp
jne
je
pop
pop
sub
aad
dec
dec
push
into
jnp
fs
shlb
xor
jbe
mov
mov
add
enter
add
nop
pop
mov
incl
sub
jo
sub
es
pusha
or
mov
shlb
xlat
imul
jle
xchg
push
in
fldenv
sahf
and
mov
or
aad
addr16
jp
sub
jae
pop
sahf
mov
cld
ret
lcall
inc
or
les
push
jge
data16
lods
or
sbb
insb
mov
int
pop
add
cmpl
rorl
stc
pop
sub
cmpsl
imul
ljmp
mov
jmp
movb
pop
dec
push
cs
jg
mov
or
xchg
sub
push
pop
fildl
jle
xor
sbb
mov
push
xor
ja
ss
shr
sub
add
and
out
jno
fwait
test
mov
scas
cmp
nop
loopne
add
mov
sar
xchg
test
ja
mov
int
ficoms
lret
pop
pop
mov
in
mov
dec
and
xchg
cwtl
push
es
mov
sar
fmull
clc
gs
add
in
mov
jge
imul
lret
idivl
lods
inc
dec
mov
sub
ret
xor
ret
mov
adc
aad
mov
cmp
rorb
fcmovb
dec
and
xor
lods
lret
mov
jo
popa
inc
push
cmpsl
sbbl
jno
dec
or
cmp
pop
ret
fwait
jl
test
pop
fbld
das
mov
pop
lods
scas
add
insb
xchg
jmp
jmp
pushf
insb
imul
outsl
add
sbb
mov
stos
lcall
arpl
arpl
lret
xchg
and
add
aam
lock
fcomps
pop
and
cmp
sbb
jle
mov
nop
adc
or
fs
bound
aad
jnp
icebp
popa
xchg
push
test
adc
lret
imul
ljmp
mov
sub
dec
push
xchg
lret
icebp
lds
out
pop
push
fcmovne
lds
sub
ret
std
into
bsr
push
sbb
sarl
adc
movsb
mov
les
dec
lods
mov
loopne
and
lret
sahf
lea
push
cmp
mov
sbb
pop
mov
imul
inc
andb
mov
jno
scas
cmp
sbb
mov
movsb
xchg
and
mov
xchg
jne
test
push
push
lret
lock
push
gs
lea
lcall
loopne
pushf
or
jge
das
xchg
or
cmpb
sub
in
bsf
in
stos
jmp
sti
lods
sti
mov
jecxz
test
mov
dec
sahf
xchg
lods
das
mov
inc
jmp
leave
pusha
shrb
xchg
nop
ficomps
rorl
mov
xlat
or
push
and
jge
fldt
add
jb
mov
push
lods
inc
inc
lock
pop
jnp
cmp
int3
mov
imul
insl
iretw
sub
sub
icebp
mov
sub
sub
push
push
cld
iret
in
lods
icebp
cmp
cli
ss
push
lcall
mov
divl
rcll
das
lods
mov
mov
add
xor
or
pop
sub
sub
nop
icebp
fcoml
lods
mov
cvtps2pi
fdivrl
xchg
sub
cwtl
ret
sub
out
inc
arpl
insb
adc
lods
xchg
sub
fucomip
jecxz
dec
jge
je
mov
pop
into
adc
int3
repz
adc
rorl
leave
insb
mov
sub
push
pop
jno
jae
cmp
cltd
jb
popa
push
int
rorb
mov
cmp
push
or
mov
iret
and
push
rorb
add
jle
loope
stos
sub
movb
inc
push
ljmp
int
xor
add
cmpsb
xchg
int3
pop
dec
fsubl
xor
push
aam
arpl
popl
lcall
lahf
adc
inc
pop
jb
pop
in
dec
adc
or
xor
dec
pop
push
cmp
mov
stc
sbb
pop
rclb
fwait
push
mov
xchg
jae
dec
sbb
in
in
adc
jo
data16
push
pop
sbb
stos
lea
xchg
and
cmpsl
push
xchg
scas
ljmp
dec
test
jge
sub
addb
mov
mov
adc
mov
xchg
mov
stos
pusha
insl
and
jbe
cld
test
in
mov
in
aam
dec
cmp
xchg
iret
adc
and
add
out
js
push
sub
xchg
pop
mov
dec
in
mov
mov
sti
rol
and
pop
bound
fisubl
dec
pop
leave
popa
mov
mov
mov
mov
sbb
ss
out
dec
fistpll
gs
or
jne
or
jns
mov
xlat
cmp
mov
push
scas
faddl
rorl
mov
jno
jne
movsb
inc
add
adc
jl
push
shll
push
imul
js
insb
jle
enter
pop
test
stos
inc
movsb
das
jecxz
icebp
push
sbb
jge
jl
inc
push
dec
add
add
rclb
mov
lds
popa
ss
or
inc
sti
pop
mov
or
jnp
in
xchg
out
jns
stos
imul
pop
sbb
test
lods
push
mov
sbb
jnp
movsb
adc
push
adc
lods
adc
and
dec
lea
push
in
addr16
cmpsl
lret
and
mov
mov
sub
les
jb
push
testb
jmp
mov
sbbb
jne
sub
repz
repnz
es
push
sbb
xor
imul
adc
push
sbb
sub
jo
add
stos
sbb
rcrb
mov
sbb
mov
popf
sti
lret
jne
les
xchg
stos
sbb
dec
pop
jmp
sub
addr16
mov
sbb
sub
je
push
and
clc
lcall
stc
inc
out
and
sbb
call
ret
les
jae
mov
add
aas
adcl
pop
lret
push
scas
pop
add
test
mov
push
and
fwait
into
sarb
mov
mov
stc
pop
je
xchg
and
lcall
sub
sub
pop
push
mov
arpl
and
lods
lods
jmp
testb
adc
sub
xchg
jb
add
push
push
pop
fldt
lahf
in
push
and
sub
adc
mov
test
xor
mov
jge
or
loop
test
jbe
mov
cmpsl
subb
cltd
mov
shrl
fdivrs
pop
loope
add
lcall
adc
sub
add
xchg
push
test
shrb
push
scas
ja
outsl
inc
aad
xchg
dec
fcomip
push
fisubl
mov
rolb
into
aaa
mov
pop
xor
jg
mov
sbb
and
dec
int
data16
mov
test
arpl
lds
inc
mov
mov
sbbl
add
popa
out
push
out
jmp
mov
aam
iret
mov
dec
imul
ljmp
ds
mov
and
lcall
inc
and
mov
push
out
inc
scas
fcoms
cmp
mov
jne
popa
iret
xor
inc
mov
in
inc
shl
push
dec
lods
fsubs
jg
jle
insl
mov
pop
cs
inc
mov
xchg
inc
dec
sbb
gs
dec
or
dec
push
adc
scas
std
subb
jge
fadds
mov
daa
in
lret
sbb
pop
mov
roll
ret
add
rcr
scas
cld
jp
incl
push
push
movl
fwait
cmp
dec
lds
cmp
xor
mov
ret
aam
pop
mov
insl
jmp
daa
pop
and
push
lahf
pushf
fs
pop
push
adcb
mulb
or
pusha
mov
ja
sbb
scas
dec
jecxz
sub
gs
outsl
fs
inc
mov
jb
subl
sbb
cmp
and
lahf
je
and
jno
mov
in
testl
fnstcw
aam
push
dec
sbb
sbb
fsubs
mov
ja
adcl
sub
movsl
fnstenv
orb
repz
bound
jg
cltd
lahf
lahf
jbe
sbb
fistpl
pop
test
call
mov
or
roll
cmpsb
std
jns
adc
insb
cld
mov
xchg
repz
out
pop
aas
ret
xor
xor
mov
ret
adc
das
rcr
mov
fs
iret
movsl
dec
or
popa
lods
scas
movsb
or
movsb
mov
mov
fistpll
mov
cld
pop
jge
xchg
cld
and
test
mov
cwtl
xor
lret
push
sub
outsl
pop
and
dec
adc
push
fimuls
ret
add
hlt
std
and
insl
fs
daa
imul
repz
pop
test
pop
and
ss
add
test
sub
pop
push
scas
cmp
or
loopne
test
or
jno
cmp
xchg
addr16
sub
inc
fstp
daa
mov
mov
inc
mov
repz
fistl
loop
xchg
xor
call
add
clc
cli
adc
pop
enter
inc
call
or
add
lret
push
mov
mov
out
push
xchg
jnp
fists
or
xor
dec
sahf
xchg
cmp
sub
adc
mov
sbb
lods
xorb
lret
add
addr16
push
mov
inc
into
aaa
xchg
pop
dec
and
xchg
pop
lods
mov
adc
clc
xor
cmc
cmp
les
dec
test
mov
mov
stc
imul
leave
add
pop
mov
shll
sahf
lea
xchg
js
xor
repz
add
arpl
sub
mov
add
pusha
negb
cmp
fdivrl
sbb
push
push
daa
stos
test
jno
cltd
dec
xor
xchg
int
into
stos
or
sub
or
jg
xchg
lds
xchg
and
aad
pusha
or
jbe
scas
cmp
jno
stos
fsubs
push
fcomi
sbbl
or
dec
rorb
stc
repz
orb
pop
sbb
dec
call
push
out
rcr
dec
xchg
clc
test
cmp
je
push
sbbb
mov
stc
cld
repz
and
negb
or
dec
je
insb
rolb
es
adc
pop
mov
adc
xor
inc
push
repz
das
adcb
fcomps
mov
fsts
and
xchg
filds
inc
xor
mov
xor
inc
sbb
push
sbb
cltd
sbb
push
pop
xor
repnz
rorl
mov
test
imulb
mov
jge
test
popa
push
cmp
jne
mov
rcll
mov
js
mov
xor
push
stos
insl
pop
and
cltd
push
inc
push
in
jg
pop
pop
push
xchg
xchg
je
fstps
ficoml
fimull
xchg
cmp
fdivs
add
dec
cmpsb
sbb
add
popf
jmp
out
jmp
fildl
adc
mov
es
pop
inc
jb
mov
adc
cmp
ret
push
loop
cltd
inc
repnz
xchg
lods
aam
pop
aas
ret
inc
lcall
dec
arpl
and
cmc
sbb
and
push
scas
lret
mov
cwtl
les
sbbl
lds
ja
and
cmp
or
stos
cli
cmpsb
rol
out
outsl
enter
pop
jne
pop
adc
inc
cld
mov
pop
or
lea
fcoms
std
mov
fisubs
test
mov
out
add
inc
or
jmp
fiaddl
sbb
fnstenv
bndstx
imul
mov
test
xchg
in
enter
pop
mov
sarl
add
sbb
loopne
mul
out
insl
clc
addr16
xchg
in
lds
popa
inc
push
mov
xor
stos
mov
mov
sbb
lds
fwait
dec
addb
jno
sbb
sbb
xor
inc
ret
and
cli
mov
and
outsb
push
mov
and
pop
subl
add
repz
imul
push
mov
repz
push
mov
or
cli
inc
cmc
adcl
nop
frstor
cmp
add
inc
xor
pop
pop
xor
jnp
ret
mov
jmp
jle
stc
loopne
aam
test
pop
xor
dec
scas
and
stos
push
dec
cltd
mov
pop
rclb
fisttpl
mov
fistpll
ficomps
fsubs
sbb
push
in
jmp
jg
mov
pop
push
and
jne
pop
mov
loopne
lods
loop
push
sbb
lcall
and
rclb
addr16
bound
rcrl
aam
mov
mov
cmp
inc
pop
in
adc
and
xchg
fsts
pop
push
aam
nop
pop
push
mov
sub
imul
jmp
cmp
stos
outsl
mov
iret
pop
scas
push
mov
ret
pop
hlt
jg
push
fcomps
pop
aam
add
jo
xchg
cs
sub
lahf
xlat
dec
mov
test
or
stos
push
cwtl
sbb
adc
and
stc
jp
add
rolb
call
repnz
cmp
pushf
inc
dec
lods
lret
popf
cmp
mov
insl
sub
inc
leave
cmp
jne
cmc
pusha
jg
xchg
mov
cmp
mov
or
adc
pop
subb
xor
pop
scas
cs
adc
and
fcmovnb
and
dec
dec
filds
loope
xor
cmc
mov
xchg
sbb
fwait
stos
rcll
mov
aaa
push
lahf
lea
cmp
pop
frstor
cmp
ja
lea
xchg
cmpps
lea
pushf
push
ss
push
and
ds
je
lret
dec
andnps
xchg
xor
add
addr16
xchg
imul
fdiv
cmpsl
data16
fsubrs
scas
inc
push
xor
mov
xchg
lret
loopne
xchg
jmp
pop
add
xor
jo
pop
cmp
push
mov
push
sub
mov
pop
dec
xor
and
sbb
mov
pop
lods
dec
mov
xchg
inc
jle
not
cs
cmc
push
pusha
jo
mov
jbe
sbb
jns
or
xor
jp
sub
lret
or
jb
shll
dec
daa
and
lcall
sbb
nop
test
lret
ret
pop
gs
loopne
popl
mov
jp
adcl
mov
xlat
dec
aas
repnz
adc
lcall
mov
dec
add
pop
idivb
pop
xlat
inc
adc
inc
cmp
inc
pop
out
jae
push
mov
cli
imul
xor
jl
or
outsb
jb
push
scas
fcompl
sbb
cli
mov
push
jno
push
mov
pusha
sub
mov
push
cmp
das
gs
mov
push
inc
inc
xor
int
ret
js
and
ja
push
inc
xorl
jnp
inc
mov
dec
lea
mov
sub
cmp
js
pop
lcall
push
cmp
pop
out
or
pop
push
test
nop
push
sbbb
and
mov
adc
and
jnp
fnstenv
ss
push
jmp
dec
sub
pusha
movsl
push
or
mov
jb
mov
mov
dec
js
inc
std
jns
add
add
xchg
add
bound
lock
sbb
test
and
inc
mov
bound
daa
test
outsl
loopne
cmpsb
dec
movsl
dec
iret
mov
jp
frstor
sbb
mov
les
ja
dec
fldl
jno
cld
clc
dec
sub
jbe
push
subl
or
sub
xor
push
sub
fadd
adc
ss
pop
mov
rorb
rcrb
adc
rcrl
icebp
out
lahf
and
in
call
in
push
add
or
pop
jp
in
mov
adc
stc
inc
xorl
jbe
lret
clc
mov
mov
cld
popa
outsb
stos
fmull
jle
lahf
test
mov
imul
fldenv
and
or
arpl
adc
and
pop
adc
mov
xor
mov
mov
mov
icebp
addl
push
outsb
repnz
aas
imul
or
sub
ljmp
ret
pop
mov
ds
inc
cmpsb
mov
imul
andl
xor
popf
mov
push
xchg
in
test
mov
js
pop
nop
pop
xor
ja
call
decb
pop
cli
mov
cmpb
nop
ret
lret
mov
cmp
push
jae
stos
frstor
dec
aaa
movsl
mov
pop
adc
sub
jp
sbb
sti
cmpsl
repnz
xchg
idiv
inc
cmpl
test
data16
sbb
jp
sti
xor
femms
jecxz
push
aam
ljmp
jno
dec
outsb
push
hlt
lods
icebp
mov
mov
cmp
jle
leave
loop
jecxz
rcl
sbb
clc
aad
lock
push
adc
in
rorb
repnz
int
adcl
in
and
adc
scas
adc
nop
jmp
xor
sbb
mov
hlt
mov
or
mov
lret
xchg
rol
lea
aam
mov
sub
lret
into
pusha
in
push
jp
sarb
cmp
aas
arpl
aaa
xchg
mov
loope
sbb
jo
and
or
dec
loop
out
add
mov
mov
ljmp
sub
cltd
or
inc
in
push
rclb
aam
sub
jg
cmp
mov
adc
add
shll
cltd
bound
sub
ss
xchg
jne
mov
iret
test
roll
dec
sub
mov
push
aas
inc
js
xchg
outsl
icebp
int3
ret
xor
insb
xchg
jl
mov
jge
adc
fnstcw
dec
inc
mov
pop
lret
aas
mulb
int
xchg
sub
leave
mov
sub
pusha
cmpsb
and
push
inc
int
nop
repnz
mov
popa
repz
add
sub
shr
ret
adc
cwtl
or
adc
imul
cmpl
dec
lcall
jmp
inc
xor
outsb
repnz
outsb
add
and
mov
cld
divb
adc
pop
pop
ss
sub
popf
out
rolb
icebp
pop
fistpl
inc
jmp
stc
neg
push
cmp
mov
jge
jge
fs
dec
dec
ret
fwait
ss
dec
pusha
lods
popa
fisubrs
fld
xor
adc
fwait
lea
mov
clc
out
sub
or
dec
repnz
adc
inc
add
adc
and
dec
in
lret
pop
out
mov
into
cld
add
mov
lahf
or
mov
subb
fsubrs
dec
cs
or
adc
lds
xchg
std
orl
jae
push
jmp
jnp
stc
shlb
mov
dec
jne
mov
mov
xor
leave
pushf
or
mov
addr16
push
fisubrl
push
dec
aad
fnsave
popa
in
pop
ss
test
test
frndint
mov
movsl
or
repz
xchg
jp
mov
pop
mov
jmp
inc
add
les
pop
imul
call
jo
in
cwtl
cld
adc
fs
mov
fdivrl
pop
push
push
add
mov
lret
call
mov
jbe
fadds
repnz
cmp
add
mov
mov
inc
iret
and
dec
xchg
jl
loopne
popa
sbbl
xchg
scas
flds
jnp
jl
xor
push
xlat
cmc
inc
mov
enter
mov
inc
adc
sub
mov
popf
outsb
int3
ljmp
lock
mov
cltd
dec
or
out
orb
fadd
outsl
inc
mov
jns
adc
or
dec
jnp
repz
push
push
pop
jecxz
sub
das
jg
cmp
mov
cs
iret
int3
out
pusha
imulb
cmpsl
sub
add
jb
out
das
outsl
addr16
sub
dec
adc
push
fwait
psubusb
push
mov
sub
stc
mov
rolb
xchg
dec
adc
jne
or
mov
or
pop
bound
xchg
cmp
inc
sub
shlb
xchg
cmp
aam
sbb
int
lods
xor
or
fdivrs
lods
nop
cmc
and
rcr
adc
lret
xor
sbb
ficompl
imul
in
faddl
push
std
pop
xor
lods
outsl
jo
xor
lahf
jmp
iret
push
imul
in
xchg
scas
add
adc
ljmp
mov
and
sahf
pushf
sub
sbb
add
js
jge
push
push
pop
push
lea
divb
dec
push
add
pop
mov
ja
data16
sub
sbb
adc
jg
xor
loope
pop
cmp
mov
fnstenv
gs
mov
addr16
xchg
cmp
xchg
insb
int3
lcall
push
sahf
lods
xchg
fsts
push
jecxz
add
in
cmpsl
xorl
repnz
jmp
adc
aam
push
and
fistps
add
xor
popf
cmpsl
pushf
ret
add
or
mov
mov
arpl
fisubrl
aas
xor
xor
xlat
mov
sbb
cmp
cli
shll
xchg
out
mov
stos
add
jno
mov
inc
scas
sub
and
ljmp
add
ja
or
in
jp
lret
xor
adc
pop
lret
pusha
jne
xchg
icebp
adc
int3
sbb
insl
mov
push
lods
xor
aas
icebp
in
ds
addr16
sub
jae
ds
in
add
fldcw
mov
cmp
jl
in
and
loope
rcll
inc
fisubl
mov
jb
gs
aam
cmp
dec
jns
jb
sbb
cmpsb
mov
xor
scas
push
cs
mov
xor
imul
mov
nop
test
pop
add
add
add
inc
or
add
or
mov
or
ja,pt
xchg
mov
inc
pop
test
les
push
jb
pop
rclb
dec
mov
je
ficoms
mov
pop
insb
test
push
sbb
scas
pushf
sub
cmp
pop
popa
pop
and
and
out
data16
mov
pop
and
lret
dec
inc
loopne
mov
jp
jo
mov
jecxz
out
addl
xor
outsl
in
or
xor
xchg
notl
inc
mov
and
sub
shll
fimuls
popa
push
stos
push
push
push
xchg
mov
int3
ss
jo
lea
or
shl
add
fistpll
push
das
jb
xchg
adc
pop
xchg
into
jg
adc
js
jns
ja
mov
push
in
sub
mov
xor
lods
ja
pop
xor
lcall
inc
jne
lahf
add
mov
ret
sbb
inc
xchg
xchg
js
cwtl
stc
mov
popf
mov
pusha
and
xchg
addl
je
aaa
fmuls
jp
push
sti
rcl
inc
push
sub
jecxz
cltd
inc
cwtl
and
push
mov
sub
mov
lahf
gs
jge
xchg
nop
aaa
or
mov
xorb
jp
ljmp
test
idivl
or
js
xchg
mov
sub
cmpsb
or
push
fsubl
lds
pop
lds
mov
shlb
das
lret
sub
cmp
add
hlt
lret
push
jae
imul
pop
test
jle
push
or
fmull
cli
pushf
scas
sbb
xor
add
and
scas
jo
xor
test
xor
sub
popl
pusha
orb
sub
xchg
sbb
sub
sbb
imulb
out
imul
movsb
sbb
adc
test
xorl
jp
pop
or
out
add
test
pop
or
rcrl
xchg
inc
mov
pop
ret
mov
test
push
xlat
leave
sbb
roll
std
pop
or
dec
jg
dec
popf
insl
pushf
dec
cmp
mov
les
dec
sub
ds
mov
add
ja
std
lods
or
lds
lret
enter
out
mov
cltd
and
lds
popa
sbb
jnp
mov
dec
in
and
xchg
nop
shll
jp
ljmp
cltd
leave
add
adc
sahf
loop
and
and
test
iret
repnz
lret
in
adc
les
cmpsb
mov
jnp
ret
cmp
mov
or
sarb
dec
test
inc
and
dec
fistps
xor
fsubr
fldenv
in
pushf
jae,pt
xchg
pop
addr16
addr16
push
sub
sbbl
fsubs
push
in
cmp
insb
ret
leave
lock
movsb
fs
or
rol
mov
or
mov
pop
repz
or
mov
outsl
inc
push
cltd
xor
pmulhw
xorb
pop
sbb
and
ja
imul
sbbl
sub
dec
inc
mov
push
xchg
das
loope
lahf
addb
mov
or
ret
cld
xlat
mov
shl
out
add
loop
mov
or
das
and
arpl
mov
out
xor
imul
stc
cmp
sub
mov
adcb
cmpsb
xchg
stos
arpl
mov
sar
dec
push
and
mov
or
mov
sbb
xor
and
xor
jge
hlt
in
cmpsl
cmpsl
mov
insb
inc
sbb
nop
inc
adc
iret
in
push
fwait
push
out
adc
jge
pusha
jge
jae
xchg
hlt
lahf
mov
nop
xchg
test
scas
dec
jnp
xlat
inc
jnp
push
and
in
add
das
into
insl
add
aad
mov
xchg
out
pop
mov
sub
push
inc
mov
sbb
test
out
pop
lret
lds
add
xor
mov
nop
ljmp
movsb
inc
jns
fadd
lahf
dec
mov
pop
cmpsl
mov
jp
repnz
mov
cwtl
aaa
jo
adc
cmp
mul
cmp
mov
cmp
and
fcoms
inc
push
xor
add
add
mov
mov
sti
aas
fs
mov
roll
pushf
gs
inc
outsb
daa
leave
cs
xor
pop
lock
test
scas
pop
pop
mov
pop
insb
adc
mov
imul
mov
mov
mov
andb
jl
pop
lock
pop
ljmp
testl
es
mov
les
rorb
loope
or
mov
jbe
mov
xor
int3
aaa
xchg
xor
inc
jmp
fdivrp
push
mov
ror
push
xchg
in
inc
lea
mov
out
adc
or
mov
lds
iret
stc
sub
stc
and
mov
cwtl
jle
cmp
repnz
shrl
movsb
lret
jno
xor
xchg
mov
mov
sub
inc
inc
add
xor
adc
test
push
cmpsl
leave
loopne
call
cmpsb
rcll
xchg
jl
and
push
sub
pushf
ret
lahf
popa
mov
cmp
xchg
sete
jl
orl
les
mov
cmp
pop
adc
jmp
mov
pop
jo
xor
add
mov
jge
dec
addr16
sub
aad
movsl
pushf
and
adc
fstpl
dec
lds
mov
stos
rcll
test
xchg
xor
in
fimuls
stos
mov
repnz
sbb
pop
xor
mov
clc
and
jle
shlb
fst
inc
mov
popa
jecxz
xor
jl
outsb
leave
sbb
icebp
scas
cmp
aam
pop
mov
dec
jge
jecxz
pop
lcall
int
ret
insb
push
dec
inc
push
imull
movsb
mov
rol
sbb
insb
mov
loopne
dec
or
repz
pop
test
int3
fwait
or
insl
mov
xchg
lahf
cmp
add
movb
bound
sti
scas
icebp
mov
test
jo
leave
pop
or
fnstenv
jns
les
xchg
inc
loope
add
xchg
loope
iret
push
test
mov
xor
test
mov
outsl
aam
das
xchg
lcall
call
push
and
lahf
test
std
cmp
insb
inc
popf
pop
mov
dec
cwtl
xor
jp
pop
sbb
push
shlb
fmull
fidivl
out
sub
lods
cld
mov
xchg
jle
jl
inc
or
push
dec
mov
pop
iret
pop
mov
dec
pop
decb
repnz
add
xor
test
jnp
pop
shl
js
jbe
inc
or
or
lea
or
in
lahf
int3
rolb
imul
mov
fdivr
pushf
adc
scas
pop
push
dec
jns
inc
or
sbb
mov
pop
cmp
aas
jg
fisubl
cmpsl
cmp
call
jmp
stos
nop
insb
push
sbbl
pop
jno
outsl
and
jp
cmp
ljmp
dec
lret
icebp
mov
jg
cmpsl
mov
mov
cld
push
fmul
subl
xchg
jge
inc
adc
mov
mov
inc
out
enter
adc
test
dec
xchg
adc
popf
push
iret
push
lds
push
idivl
orl
mov
pop
cmpsl
jmp
pop
cwtd
xor
xchg
mov
push
ret
cmpsb
dec
pop
fisubrs
nop
mov
enter
in
dec
data16
cmp
adc
xchg
dec
call
mov
loop
gs
cmp
adc
loopne
lock
mov
cli
push
jno
stos
cmp
lock
cmp
loope
xor
fidivs
ja
imul
dec
pushf
ljmp
mov
push
js
test
insb
ss
ret
fs
enter
je
adc
mov
jno
aaa
cmp
popa
cmp
in
jg
mov
mov
cli
repnz
repnz
add
popa
mov
shrl
and
in
cmpsl
xchg
decl
mov
into
cwtl
mov
jnp
push
or
mov
push
and
ja
inc
mulb
adc
dec
inc
divb
sub
ljmp
jp
jecxz
imul
jae
jae
idivb
dec
in
inc
shlb
and
jmp
adc
shlb
adc
test
xchg
xor
aaa
xchg
jge
lahf
xchg
roll
and
in
mov
mov
hlt
stos
push
insl
sahf
test
in
lods
add
xor
negl
push
push
pop
fldl
sub
mov
adc
and
clc
mov
div
fdivp
xchg
adc
dec
jns
insb
ljmp
mov
ds
xchg
mov
push
pop
aas
sub
shr
mov
lds
cs
sbb
fs
cmc
xacquire
push
stos
sbb
sbb
rcl
pushf
dec
push
cmc
mov
test
add
jo
cmp
xor
jne
bound
fnstenv
sbb
and
out
int3
in
adc
ret
out
loopne
push
outsl
int3
sti
mov
stos
cltd
pusha
push
pop
jl
stc
jecxz
jno
push
push
inc
jecxz
mov
pop
loop
add
in
das
add
inc
jg
addl
scas
je
fbld
ret
imul
cmp
ror
ja
cmpsb
pop
cmp
add
in
roll
repnz
jae
movsl
xchg
cmpsl
lret
xlat
aam
lds
cwtl
inc
mov
loopne
popf
in
mov
mov
xchg
test
pusha
ljmp
loope
popf
sub
les
cmc
sarb
push
push
or
sub
jbe
cld
iret
das
aas
and
inc
bound
mov
and
sub
aad
or
jb
mov
mov
shlb
xor
mov
jge
mov
popa
mov
test
movsb
cmpsl
mov
xchg
mov
xchg
dec
push
ljmp
cli
pop
ss
mov
movsl
loopne
in
jns
pop
inc
pop
xor
add
dec
or
jmp
lahf
shr
ret
mov
cmpsb
mov
or
push
ss
fsubrl
in
into
js
fsubrs
sti
stos
sub
lcall
mov
xchg
into
gs
ret
ja
and
jge
or
mulb
xor
lock
lahf
cmpsb
mov
dec
push
pop
imul
fisubrs
cmp
add
lods
mov
dec
sbb
orb
test
ss
adc
scas
imulb
hlt
pop
ficoml
inc
adc
jne
test
out
notl
adc
rcll
je
mov
xchg
sbb
xchg
test
scas
ror
push
std
lea
sub
pop
mov
and
cld
arpl
xor
sbb
jmp
jle
pusha
jp
pusha
push
jge
xchg
fiadds
dec
test
imul
adc
fnstcw
out
mov
cmp
leave
mov
ss
mov
add
aam
pop
push
dec
mov
aaa
lods
cmp
jb
and
ljmp
sub
or
movsl
inc
mov
lock
nop
xchg
pop
cmp
shrb
sub
xor
mov
lds
mov
jae
gs
popf
mov
jno
test
fcmovne
lods
fidivs
scas
sub
cmc
dec
in
loopne
loop
cs
or
pop
fs
or
mov
sbb
mov
and
cltd
cmp
ret
ds
fcmove
iret
xchg
stc
les
addb
mov
imul
add
sub
idivl
cltd
push
and
push
sub
push
paddq
dec
push
xor
fs
add
shrb
dec
arpl
inc
xlat
cmp
mov
or
push
jo
iret
xchg
and
lock
pop
inc
pop
sahf
dec
rol
and
sti
roll
mov
stos
mov
push
lock
lcall
or
and
sbb
xchg
bound
jge
sbb
jp
mov
cmp
les
inc
aaa
inc
mov
fnstenv
cmpl
cli
fstp
xchg
mov
push
xlat
loopne
jbe
out
cli
and
rorb
cmp
mov
clc
sbb
and
add
xlat
into
add
arpl
int3
cmp
add
sub
dec
in
and
outsb
sbb
pop
fcmovne
inc
jbe
cmpsb
popf
fcompl
loopne
stos
pop
dec
or
in
test
gs
mov
dec
mov
fisubrs
imul
out
sub
dec
lret
stos
inc
popf
cs
or
push
push
pop
leave
jg
cld
aaa
leave
add
jne
cmp
inc
scas
jne
and
rcrb
cmp
add
ret
lods
push
outsb
mov
fcoml
adc
pop
sub
cmc
and
es
dec
push
add
jmp
das
xchg
push
adc
repz
mov
mov
inc
mov
push
dec
addb
sbb
rep
mov
mov
and
push
mov
clc
xchg
push
sarl
lods
add
pop
pushf
sub
inc
jge
push
test
aas
pop
ja
loopne
sbb
xor
xlat
in
or
jns
js
adc
add
mov
setnp
inc
insl
ja
scas
addr16
addr16
or
push
pop
cld
outsl
aad
push
push
xchg
ret
pop
jp
mov
sahf
sub
mov
mov
cmp
notl
jnp
lret
xor
pop
sub
or
xor
mov
les
leave
into
cmp
lods
lods
and
lret
fsts
in
out
cli
lret
call
repnz
adc
adc
or
jns
jne
mov
jecxz
sub
and
sub
or
bndldx
sub
aaa
fsubp
mov
inc
add
inc
shlb
xlat
rcr
sbb
loope
stos
mov
xchg
pop
out
adc
out
xor
in
orl
inc
add
pop
cmpsb
mov
aam
sbb
sub
shr
ja
jg
mov
scas
je
sub
jp
hlt
cwtl
popf
call
aam
daa
fsubs
xchg
mov
dec
xchg
fisttpll
xchg
rolb
out
jecxz
clc
pop
sbb
mov
das
imul
or
les
xor
popa
cs
aam
addb
ret
sbb
fstp
out
les
sahf
mov
arpl
out
leave
sub
jnp
xor
scas
cmpsb
lahf
lock
lds
scas
xor
push
push
in
jecxz
jns
sahf
stc
dec
mov
roll
bound
aaa
pop
mov
xchg
mov
out
inc
loopne
pop
dec
mov
sbb
jmp
and
outsl
scas
fwait
repz
stos
push
pop
arpl
jne
push
dec
mov
std
lahf
inc
in
xchg
add
mov
jo
push
cltd
cmp
mov
mov
popa
lcall
adc
cld
inc
addps
adc
pop
sbb
mov
mov
pusha
mov
add
movsb
xchg
fs
cmp
and
out
jne
movsl
cmp
mov
stos
adc
xchg
mov
cmpsl
cwtl
test
sahf
hlt
xor
cltd
fstl
aad
inc
and
and
lods
cmp
add
outsl
or
cmpsb
sbb
scas
addr16
aas
mov
push
mov
mov
pop
cmpsl
test
dec
decl
dec
adc
loopne
or
dec
out
scas
or
out
sbbl
and
jb
sbb
int3
xchg
xchg
insb
fistl
sbb
cld
sbb
std
lahf
cli
call
mov
xor
js
stc
add
mov
call
arpl
add
popa
jb
outsb
ret
sbb
ret
mov
cmp
mov
pop
xor
pop
mov
fidivrs
stos
xlat
jne
hlt
andb
scas
xchg
fldenvs
dec
cli
mov
movsl
popa
lahf
out
mov
out
in
mov
ja
or
pop
rorb
inc
arpl
xor
pop
xlat
movsl
or
mov
dec
shl
xor
mov
repz
scas
ss
aaa
sbb
rol
ficompl
in
test
hlt
popa
lret
dec
cmp
mov
jns
gs
ja
pop
or
outsb
dec
data16
mov
push
scas
aaa
xchg
ss
clc
stos
add
xchg
mov
aas
and
and
fmull
add
out
iret
and
in
ficoms
mov
arpl
gs
inc
sbb
or
cmp
push
loop
mov
pop
inc
loopne
xor
xchg
loopne
mov
popf
mov
out
add
in
mov
cmpsb
stos
mov
mov
xchg
mov
push
jno
iret
push
xor
dec
xor
fs
jno
ret
cmp
gs
mov
fsubl
xchg
inc
xchg
or
push
jge
sarl
shlb
and
jns
fucomip
rcrb
xor
out
mov
stos
xchg
movsl
add
cmp
movsb
insl
aas
mov
lcall
icebp
sub
lret
xor
and
movsl
jl
test
idivl
add
push
cld
and
movsl
xlat
jae
test
out
int3
shll
sub
std
push
call
xchg
popf
xor
mov
filds
xor
and
or
jo
daa
push
fisubs
adcl
ret
cmp
and
leave
mov
loope
fidivs
or
and
push
rolb
jl
out
daa
xchg
ss
mov
add
lea
shl
add
out
and
jae
lret
daa
test
lret
sti
push
pop
mov
aam
mov
pop
decb
xchg
pop
xor
inc
push
dec
adc
cwtl
dec
dec
xlat
sub
xchg
popa
pop
mov
mov
int
or
ljmp
lock
or
popl
hlt
cmp
fdivrp
sub
orb
clc
jge
push
mov
mov
adc
data16
popa
jb
mov
xor
pop
pop
cmp
push
jns
lcall
getsec
aas
mov
jmp
mov
mov
pop
mov
fisubrs
ret
cltd
in
adc
movsl
xchg
mov
fisttpl
icebp
popa
mov
icebp
ds
lods
mov
pop
lahf
aas
dec
mov
clc
mov
jbe
and
push
testb
pusha
popa
rolb
sub
pop
mov
outsl
pop
ret
xor
fstpt
data16
cmpsb
imulb
xchg
xchg
jg
stos
mov
jle
mov
fcomps
sti
stc
stc
int3
add
in
sub
jg
xchg
subl
mov
pop
push
mov
aam
add
add
das
mov
push
out
es
test
jge
mov
and
or
cmp
lods
jp
ss
mov
mov
addr16
sahf
movsl
add
xlat
dec
aas
loopne
sbb
fcmovnb
inc
lea
cwtl
mov
pop
repz
xor
cmpsb
inc
ret
xchg
mov
inc
push
push
in
mov
jge
int
movsb
push
sub
xlat
pop
dec
popf
inc
xchg
adc
xor
testb
call
movsb
call
mov
xchg
nop
jg
wrmsr
xchg
mov
inc
pop
cltd
fisttpll
shrl
jmp
xor
xor
cmp
ljmp
or
xor
leave
push
pop
cwtl
ljmp
sbb
daa
fists
jl
jp
jae
ljmp
xor
jmp
pop
xor
es
xchg
xor
sub
fisubrs
jp
aam
mov
loope
in
add
add
inc
mov
ss
push
sbbb
inc
repnz
and
jmp
xchg
mov
in
and
inc
add
jp
push
mov
or
rcrl
dec
iret
adc
test
test
dec
in
into
push
lods
mov
pop
fiadds
mov
dec
insl
dec
pop
mov
add
jmp
jmp
js
sub
gs
push
jmp
ret
or
pop
dec
testl
nop
xor
cmpsb
dec
fmul
sbb
sub
enter
lods
or
and
jns
aaa
iret
push
inc
in
and
dec
add
call
dec
mov
lret
inc
dec
mov
das
and
in
xor
sub
int
dec
fisubrl
inc
lock
dec
in
daa
mov
sub
and
mov
repz
lods
mov
inc
push
sbb
ficoml
adc
mov
into
ljmp
call
sbb
xchg
pop
into
ss
mov
pop
paddd
stos
imul
daa
sahf
mov
xchg
filds
cmp
in
std
daa
movsl
sub
fwait
out
orl
jecxz
and
dec
push
sbb
sti
mov
outsb
pop
sbb
or
mov
push
rorl
cmc
rcl
filds
shrl
aam
icebp
test
push
jnp
fldl
aam
jae
pop
scas
ret
adc
jg
cwtl
cmp
mov
movb
cmp
jne
xchg
mov
int
mov
mov
into
rcrb
frstor
cmp
fwait
mov
orb
in
push
push
aaa
in
mov
imul
cmc
repnz
or
cmp
dec
push
jmp
ror
sbb
pop
xor
popa
ljmp
jl
sub
outsl
or
adc
mov
jbe
fisubs
rolb
les
out
imul
xchg
xor
pusha
negl
std
xchg
push
dec
mov
jecxz
xor
scas
sub
push
stos
ljmp
push
fcoms
in
stos
filds
jbe
sbb
sbb
lods
andl
lahf
into
mov
adc
scas
insb
ljmp
cmpsl
loop
push
movsl
in
cmpsl
sub
cmpsb
popa
outsl
sbb
add
inc
xchg
push
sub
int
push
dec
loope
lock
jo
cltd
sub
insb
cwtl
cmpsb
adc
jae
push
pop
cmpps
mov
gs
mov
inc
fucomi
xchg
pop
pop
in
mov
or
in
incl
lcall
cld
or
mov
mov
xchg
push
xchg
cmp
imul
inc
xorl
and
jo
add
lcall
or
shll
mov
dec
movsb
ret
subb
call
shr
mov
in
and
sub
in
hlt
cwtl
push
pop
xor
cmp
sarl
xchg
shr
push
push
fs
in
sbbl
xlat
mov
rclb
sbb
jo
lods
lcall
jl
loop
std
sub
inc
push
mov
jp
fucomp
movsb
leave
popl
popa
pop
xchg
ljmp
mov
pop
outsl
test
push
pop
add
push
lret
mov
mov
add
int
scas
push
add
pop
js
ljmp
xor
xchg
jmp
das
repz
outsb
xchg
cmp
sbbb
and
fs
jb
cld
mov
mov
pusha
stos
pop
xchg
inc
fsubl
rorl
adc
xchg
loopne
roll
xchg
push
pop
pop
mov
xor
pop
xchg
std
out
xor
jle
filds
inc
sub
pop
push
cmp
push
bound
icebp
outsl
and
loop
mov
jno
imul
lods
movups
dec
mov
das
adc
into
mov
ret
push
lcall
cs
push
rclb
fisubl
in
push
add
mov
nop
push
push
shll
enter
dec
in
mov
push
mov
rorl
cltd
lods
mov
call
jg
pop
das
jno
jmp
mov
jo
ds
xchg
movsl
cmc
loopne
mov
pop
add
mov
sbb
fcoml
andb
clc
ljmp
adc
inc
into
fnstcw
xchg
push
cmp
fucomip
and
mov
sub
dec
idivb
mov
sub
or
in
jge
mov
mov
leave
push
sub
lods
jmp
ret
add
inc
xchg
cmp
mov
push
popf
hlt
mov
mov
dec
pop
hlt
xchg
ret
iret
pop
inc
fs
ja
sahf
sbb
mov
dec
dec
pop
sub
inc
push
xchg
pop
dec
and
or
jne
or
stos
lods
push
or
pusha
lea
xor
out
int3
aam
inc
dec
push
pop
ljmp
sub
imul
fadds
sub
leave
repnz
lea
ffreep
dec
les
adc
push
jecxz
dec
sbb
add
leave
in
lock
pop
bound
mov
ljmp
xor
call
pop
ret
lcall
pop
fsubrl
inc
dec
call
sub
jmp
outsb
mov
sbb
mov
mov
cltd
jge
js
aas
ret
sub
inc
dec
xchg
ret
sbb
push
xor
adc
test
incl
pmaddwd
pop
ficomps
shrb
push
dec
sahf
pop
imul
cmp
testb
dec
popa
push
add
orl
test
or
outsl
sub
adc
cmpsl
daa
sbb
pusha
imul
pop
in
call
ds
mov
add
inc
cld
mov
js
sub
in
and
pop
push
dec
mov
mov
test
scas
adc
cmp
sub
inc
xchg
pop
scas
out
sbb
jge
scas
jo
inc
into
adc
negl
pop
sbb
xchg
sub
jecxz
add
enter
fildl
fs
bound
cmp
outsb
pop
sbb
dec
lock
mov
lcall
sahf
sub
xlat
iret
mov
jne
jbe
mov
push
mov
data16
daa
or
aam
xor
inc
rcrb
mov
jo
xchg
cmp
int3
add
cmpsb
sti
jle
inc
fldt
fildll
ljmp
orl
or
cmpsl
sahf
ljmp
imul
xchg
enter
fildll
sar
je
insl
rcrl
lret
mov
or
in
sub
ror
adc
push
sbb
pop
movb
adc
sub
imul
jns
insb
sbb
cmc
push
lret
or
mov
xchg
je
pop
call
or
rcrb
insb
xor
xor
testb
imul
pop
orl
or
pushf
gs
mov
or
fwait
inc
cs
pop
dec
push
pop
or
psllq
test
outsb
mov
jb
dec
pop
pop
les
pop
jmp
es
dec
ror
ss
xchg
loope
cli
shll
ret
out
mov
jecxz
mov
subb
mov
inc
push
dec
lds
sub
fsubp
mov
pop
lods
push
ljmp
insl
mov
stc
stos
fs
mov
enter
mov
sub
cmp
rol
roll
sub
add
push
mov
fdiv
sbb
loop
sbb
out
ret
test
cmp
cwtl
sahf
call
popf
pop
mov
cmp
mov
out
push
addr16
scas
add
ret
int
in
mov
daa
dec
push
xor
pop
push
mov
mov
mov
mov
cld
inc
sbb
lret
cmp
cld
xchg
es
in
jo
aaa
ja
aaa
dec
jns
sahf
mov
mov
mov
sub
pop
dec
push
push
pop
stos
add
add
in
cmp
add
iret
hlt
sbb
test
sbb
mov
lcall
mov
mov
xbegin
push
lock
and
xchg
cmp
cmp
pop
inc
jbe
mov
shrl
inc
int3
in
lods
sbbb
mov
in
jbe
rcr
rcl
js
rclb
push
addb
orl
mov
mov
lea
aam
sbb
bnd
or
js
enter
xchg
mov
or
nop
mov
dec
inc
mov
divl
jp
xlat
iret
cwtl
jno
mov
xchg
pop
lods
arpl
mov
neg
and
jmp
push
or
mov
or
pusha
sti
push
pop
bound
push
jb
cmpsb
lahf
rorl
gs
mov
daa
adc
adc
pushf
rcrl
insl
sahf
in
xchg
cmp
cmp
lds
fcompl
cmp
std
adc
loop
call
pop
mov
or
out
sahf
adc
push
frstor
sbb
insb
xchg
sbb
ret
jge
jmp
jno
jbe
jne
out
lods
and
jle
cmp
dec
insb
mov
dec
jb
push
int3
mov
ret
add
cld
push
iret
sbb
add
cmp
repnz
shl
je
push
pop
pop
rcr
and
sub
repz
scas
sub
ljmp
divl
adc
lods
mov
mov
fincstp
lcall
inc
shll
sahf
push
leave
clc
xor
addl
ljmp
push
inc
dec
ja
addr16
fst
out
das
lods
lea
and
sub
pop
xor
es
pop
call
cmp
lea
xchg
fldcw
ret
rcrb
js
add
cld
sub
pushf
inc
outsl
ror
test
sub
adc
loop
leave
cmp
jge
inc
rolb
dec
addl
or
cltd
or
cmpsl
mov
pop
divb
aad
icebp
cli
push
pop
orb
xchg
adc
add
add
jg
fidivrl
or
icebp
fnstcw
fiaddl
lahf
pextrw
xchg
dec
jnp
ja
es
loopne
ret
nop
mov
js
add
mov
lret
cmpsl
mov
icebp
and
mov
sub
sbb
lods
add
aas
inc
movsl
mov
mov
cmp
int3
in
rcll
stc
mov
xchg
scas
add
push
daa
cld
hlt
xor
out
mov
and
sahf
push
jno
push
ljmp
add
pop
push
ljmp
and
pusha
stc
sub
cmp
dec
cld
push
test
mov
xor
fcompl
je
xchg
lods
adc
fiaddl
push
sub
test
xor
pop
movsl
fmul
pop
std
xchg
adc
filds
pop
add
jo
cmp
cmpsl
std
test
das
aas
aas
aaa
jae
mov
mov
dec
idivl
or
insb
shll
and
pushf
push
std
and
fiaddl
push
mov
or
gs
mov
sbb
push
adcb
jmp
mov
movb
ds
mov
mov
insb
fiaddl
or
push
outsl
stc
clc
cltd
enter
lods
mov
js
inc
mov
mov
mov
shl
or
lds
lahf
mov
cmpsb
fwait
inc
push
sub
ds
cs
xor
or
push
mov
xor
stos
mov
jns
inc
mov
jmp
stos
sbb
sbb
lea
push
push
jmp
rol
test
scas
lods
mov
fs
popfw
xchg
sbb
jb
push
and
cmc
cmp
mov
shlb
inc
sbb
pop
mov
sbb
mov
jae
add
inc
xor
xchg
xor
clc
popf
mov
or
movsl
inc
mov
jle
mov
scas
es
ror
repnz
roll
push
inc
push
add
sub
test
xor
sbb
adc
add
sahf
and
xchg
inc
and
fistps
push
dec
fs
fmuls
mov
fsave
inc
ss
insb
inc
nop
adc
lret
in
xchg
or
and
pop
int
je
int
xchg
decl
dec
pop
out
xchg
mov
stos
cmpsl
cld
jle
clc
leave
sbb
jnp
push
push
xor
in
out
jge
inc
sbb
mov
aaa
pushf
out
in
pop
and
loopne
outsb
push
imul
shll
pop
inc
add
in
lds
shlb
push
push
jg
pusha
sti
push
sahf
gs
outsb
mov
out
pop
dec
addr16
xor
sub
out
mov
rol
inc
dec
and
add
sub
push
mov
cmp
adc
popa
mov
dec
ljmp
out
leave
xchg
lahf
push
lds
jle
sub
pop
js
mov
into
sahf
jnp
shll
ret
pop
out
ja
fcom
je
out
sbb
test
repnz
dec
xchg
mov
pop
sub
aad
mov
cld
xor
cmc
dec
mov
mov
insb
movsb
addb
js
fdiv
dec
mov
rolb
aad
shll
dec
xor
int3
push
fcmovb
or
mov
shlb
jo
sahf
sahf
ds
jbe
adc
jns
mov
sti
add
ja
cs
xchg
out
jne
push
out
fisttps
mov
or
jecxz
incl
test
xchg
push
or
inc
roll
push
xchg
or
jmp
rcrl
lcall
sub
jle
adc
mov
dec
add
xchg
bound
xchg
in
add
cmp
jg
mov
int
popf
cli
data16
call
movsb
and
cmp
aad
cltd
mov
loope
mulb
adc
push
js
lods
jle
sub
mov
adc
or
jg
mov
ljmp
rcrl
inc
sbb
pop
aam
mov
pop
push
or
sub
cmp
stc
pushl
adc
daa
fst
adc
call
or
cltd
aad
and
sub
out
lret
push
mov
xchg
mov
push
shrb
xchg
add
mov
nop
pushf
or
pop
rclb
dec
mov
in
adc
pop
add
mov
out
lret
jo
add
pop
out
or
adc
arpl
ret
dec
je
mov
jmp
scas
hlt
rcll
andb
int
sbb
clc
push
out
xchg
inc
enter
inc
pushf
fimuls
fcmovbe
xchg
dec
dec
fisttpll
std
push
pop
xchg
adc
jns
push
pop
add
cmp
test
arpl
mov
pop
cmpsl
rcl
mov
das
push
jne
hlt
ds
jg
repz
shrl
adc
push
dec
hlt
mov
lahf
jle
es
aas
push
mov
test
mov
cmpsl
mov
bound
dec
mov
gs
shr
mov
test
mov
insl
pusha
ret
jg
rclb
add
mov
push
scas
sbb
push
test
pop
add
insb
push
inc
fdivl
rcrl
je
pop
cmp
pop
dec
cmp
loopne
aam
sub
xor
sbb
cmp
sbb
loopne
xchg
sub
and
sub
push
pop
cmpb
mov
or
je
loop
mov
test
mov
jb
jno
adc
add
orl
pusha
or
out
xor
cmc
sbb
adcb
xchg
push
sub
outsl
out
sbb
in
testb
jnp
dec
mov
inc
push
hlt
pop
push
push
xlat
inc
adc
test
add
pop
add
mov
inc
mov
adc
icebp
imul
rcrl
jnp
jno
sbb
adc
aad
cli
dec
cmpsb
add
jnp
ljmp
scas
push
cmp
jae
or
sbb
aad
sub
mov
xchg
add
cmp
call
in
popa
jbe
xchg
push
idiv
mov
ljmp
jae
jb,pn
adc
shrb
lea
jno
fadd
jns
clc
add
or
std
mov
pop
hlt
xchg
xlat
int3
inc
sub
pop
lret
movsl
loopne
lahf
pop
xor
mov
loop
mov
ja
push
jno
pop
cmp
aad
repnz
test
dec
cmpb
mov
jnp
sbb
in
push
cmp
fcoml
arpl
ds
notl
cmp
jo
push
orl
add
push
dec
pop
push
test
aas
pop
mov
rcrw
movsl
mov
or
stos
addr16
ret
cmc
bnd
jecxz
rol
push
sub
mov
cltd
out
fsts
xlat
push
daa
addr16
enter
in
xor
ficompl
sub
pop
imul
sub
mov
sub
push
mov
or
loope
adc
bound
shll
pusha
pop
or
and
sub
ss
xchg
push
xchg
out
cmp
int
popa
and
mov
sub
add
pop
jmp
arpl
arpl
out
push
jne
xchg
inc
roll
test
rolb
jmp
popf
cmp
in
jle
inc
incb
lds
arpl
in
push
out
testb
fcmovnbe
and
fprem
mov
jns
jmp
into
xor
cltd
adc
dec
fisubrl
sub
cmp
add
movsb
dec
loope
popf
scas
mov
inc
rcrb
push
jl
out
dec
cmpsl
mov
movsl
out
and
lret
pop
sbb
cmp
pop
add
fcoms
mov
notb
shll
xchg
fcmovbe
test
jno
ret
fcoml
dec
jbe
stos
adc
or
mov
ds
test
pop
in
add
jg
cmp
lock
add
sbb
or
je
fidivs
cmpsb
mov
rorl
mov
xchg
push
insb
sbb
push
adc
std
xor
add
pop
mov
je
adc
lret
fistl
mov
cli
mov
xchg
push
outsl
adc
pop
push
iret
rcr
nop
daa
sub
sbb
cltd
push
daa
xor
stc
push
mov
xchg
mov
test
aas
pop
outsb
mov
mov
mov
fsubrs
jb
add
out
cmp
and
roll
or
cmpsl
mov
push
dec
testb
adc
repz
cmp
jb
orl
popf
xchg
call
sbb
push
daa
mov
pop
xor
test
mov
jae
push
scas
jge
jmp
add
aad
push
scas
int
scas
push
add
lret
pop
movsl
xchg
pop
outsb
or
jl
mov
hlt
mov
or
hlt
jb
sub
movsb
lea
daa
clc
inc
sahf
mov
clc
in
mov
mov
mov
push
in
loope
jae
adc
lcall
dec
xchg
ljmp
aas
dec
ljmp
cwtl
pop
push
push
jbe
das
fldl
stos
xchg
loope
clc
ja
xchg
cmp
inc
ljmp
push
xor
add
lock
inc
push
fwait
and
add
jge
lret
incl
xchg
std
loop
jnp
inc
loopne,pt
add
xchg
add
mov
inc
jle
and
sbb
mov
add
aad
int3
pop
adc
and
stos
fldt
stos
jae
xchg
ss
and
xor
mov
or
stos
cs
dec
inc
jbe
jecxz
outsl
popa
add
or
jecxz
lret
sbb
sbb
insl
xchg
add
js
daa
and
outsb
adc
xchg
sub
and
push
les
cmp
dec
mov
jmp
les
or
jae
lea
popa
sub
daa
dec
xor
call
movsl
lcall
push
xorl
filds
push
call
lea
loope
addr16
adc
xchg
and
rolb
hlt
sbb
and
add
rcrl
in
xchg
loop
adc
add
push
pop
mov
xlat
popf
lds
fnstenv
and
inc
jbe
and
cwtl
mov
add
int3
mov
cmp
mov
movsb
or
scas
fmull
test
or
sbb
and
stc
in
inc
sbb
lcall
bound
pop
popa
xchg
jo
jl
sar
jmp
add
push
adc
lock
test
cld
mov
dec
cmp
daa
pop
pop
sbb
insl
sbb
lret
jmp
in
or
dec
dec
ret
mov
adc
or
push
jg
xlat
dec
cwtl
add
xor
hlt
or
faddl
and
push
inc
dec
outsl
movsl
jl
movsl
std
dec
adc
sub
into
pop
sbb
xchg
je
repz
fmul
test
lea
in
test
ret
mov
out
mov
mov
lock
jge
pop
fnstenv
mov
mov
pop
cmp
fwait
or
xchg
pop
js
sti
ss
clc
mov
in
hlt
adcb
xor
js
out
in
ret
movsl
and
mov
fcomps
sahf
cmp
inc
sub
push
mov
jecxz
inc
pusha
rclb
iret
jmp
xor
mov
inc
pop
push
rorb
in
push
fistl
add
mov
iret
xor
popf
dec
pusha
cltd
fidivrl
xchg
nop
aaa
cwtl
push
adc
sub
pop
lahf
xchg
xlat
cmpsl
jnp
inc
cmp
push
mov
std
or
and
out
or
inc
mov
xor
dec
cmp
sbb
inc
sbb
out
mov
push
cmp
adc
cmpb
xchg
or
out
mov
mov
jmp
cld
imul
insb
out
scas
iret
popf
or
sbbb
or
repz
ss
mov
mov
icebp
je
and
scas
adc
adcb
mov
imul
jl
add
hlt
fidivrs
jb
add
cwtl
pop
push
jne
loope
orl
inc
mov
insl
test
dec
adc
push
in
call
add
movsb
ss
xchg
adc
jp
addr16
jb
pop
idiv
cmp
push
into
xchg
push
xchg
ja
cld
xchg
mov
jecxz
sub
dec
clc
aas
or
xor
cmp
int3
sbb
jecxz
cmp
cmp
fists
pop
sbb
mov
xchg
outsl
stos
call
lds
ror
cli
pop
add
and
fdivp
adc
add
daa
mov
inc
test
stc
pushf
jne
lea
out
or
pop
scas
ljmp
add
sti
cwtl
fmuls
adc
jecxz
or
subb
loope
das
mov
inc
in
lods
pop
hlt
scas
dec
out
in
xor
or
cld
mov
lods
test
insl
lods
lahf
inc
and
mov
dec
and
add
in
sbb
repnz
and
into
dec
jns
loop
push
rorl
or
add
pop
nop
dec
or
cld
add
divps
lret
ret
mov
cmc
cmp
orb
fwait
leave
mov
subb
adc
cltd
or
jnp
stos
movsl
add
repz
sarb
test
clc
or
adc
xor
pop
mov
pop
vmwrite
fprem
sti
or
push
sbb
dec
les
shlb
or
mov
sub
lahf
jno
mov
inc
divl
ret
addr16
pop
sbb
data16
je
out
ret
mov
loop
dec
fidivrl
jl
inc
mov
insb
daa
fnstcw
xor
xchg
add
jbe
in
sahf
sbb
jge
ret
or
sti
inc
pop
int
test
xchg
pop
sub
in
aam
dec
aas
vpcomb
addr16
pop
clc
xchg
fs
bound
and
fiaddl
sub
add
pop
pop
clc
mov
sub
mov
inc
mov
adc
jne
insl
add
cmp
xor
shlb
std
stos
jbe
inc
stos
mov
int3
call
pop
insb
sbb
inc
or
sarb
or
adc
dec
pop
sahf
add
fstpl
jnp
mov
push
stc
pop
repz
shlb
cs
cwtl
push
adc
mov
push
aad
lods
scas
xchg
dec
repnz
push
int3
sub
lcall
cltd
adc
xchg
pushf
xorl
push
cmp
mov
je
push
sti
cmp
or
lea
pop
sbb
xlat
aad
cmp
xchg
sahf
sbb
dec
addr16
jle
mov
dec
dec
inc
pop
xor
mull
das
xchg
xor
jae
insl
push
leave
hlt
inc
adc
cld
jne
pop
push
jmp
mov
inc
test
adc
cld
mov
sub
mov
or
test
leave
cmp
mov
loop
cli
out
dec
ret
xchg
outsl
dec
and
hlt
cli
inc
jecxz
ss
incl
or
mov
and
int
jo
divl
pop
adc
pusha
fnstenv
les
xor
cmp
loopne
jnp
mov
fcomp
cmc
add
or
in
xor
inc
test
dec
pushf
shlb
add
pop
or
cmc
add
mov
mov
add
incl
mov
cmpsl
xor
dec
ret
mov
rcll
aam
xchg
repz
shll
sbb
aas
adcl
mov
outsb
or
inc
adc
cli
sbb
cs
sub
or
sahf
mov
jbe
and
sbb
xor
in
sbb
leave
jae
xchg
xor
shl
loopne
sbb
in
cltd
sti
mov
fidivs
lret
sub
push
aad
loopne
dec
in
mov
pop
push
jecxz
sub
sbb
iret
push
pop
scas
and
add
push
jb
cmp
out
push
rol
repz
arpl
fs
and
dec
jecxz
jo
ja
inc
sub
pop
pop
xchg
nop
inc
push
and
jmp
push
testb
inc
leave
daa
jecxz
jbe
aam
push
push
movsb
in
adc
inc
mov
gs
cmpsl
and
test
pop
cmp
pcmpgtd
scas
xchg
cwtl
addr16
int3
xor
adc
dec
jl
cmp
outsl
sub
popf
into
outsb
fs
je
inc
mov
loop
mov
jl
jp
or
push
int
or
inc
add
loop
imul
es
lods
inc
jno
cs
inc
roll
add
push
and
in
movsl
sub
fildll
movsb
imul
and
into
aad
dec
stos
push
xchg
adc
pop
ljmp
xor
or
mov
sub
rcll
or
popf
add
mov
dec
repnz
dec
inc
mov
push
jecxz
pop
push
push
ds
push
outsl
test
clc
cltd
and
adc
rol
cltd
xor
and
mov
add
add
int
mov
adc
and
lcall
out
ja
stos
inc
sub
xor
call
ret
out
push
jb
out
pop
mov
or
adc
xor
repz
stos
lods
jae
add
in
sbb
mov
pop
sub
stos
or
mov
push
into
cmp
js
cmp
in
pop
lods
arpl
cmp
push
jno
aam
xor
cmp
add
inc
mov
push
nop
cs
cld
js
xlat
xchg
xchg
xor
test
into
lds
xor
rcll
mov
arpl
jne
into
frstor
test
ficoms
out
sti
hlt
sti
ret
jecxz
icebp
cmc
xchg
sbb
add
movsl
mov
addb
cwtl
stos
push
mov
xchg
adc
push
sub
andb
adc
fs
cmp
inc
addb
dec
sbb
rolb
cmpsl
lfs
cs
movsb
xlat
fs
push
test
dec
aam
repnz
or
inc
sbb
sbb
loopne
sub
jnp
push
mov
add
clc
or
or
push
mov
fcompp
mov
sub
stos
mov
add
mov
push
push
cli
inc
scas
mov
inc
js
fdivl
js
mov
fsubrs
pop
pushf
ficomps
fisubl
xchg
cmp
cwtl
cmp
mov
push
xor
outsb
xor
sub
and
idivb
stos
dec
sub
and
inc
pop
jb
mov
xchg
sub
inc
in
adc
push
jae
xor
insb
lahf
in
pushf
inc
xchg
sbb
adc
out
pop
xchg
test
add
or
xor
adc
out
fs
inc
mov
lods
push
mov
sbb
and
mov
leave
cmpl
push
loop
pop
cmp
xchg
ret
or
xchg
lea
mov
push
dec
mov
mov
bound
subl
sub
dec
pop
in
mov
insl
ds
sbb
xlat
dec
xchg
std
call
lods
push
or
add
icebp
add
movsb
add
jmp
and
inc
inc
rdpmc
in
mov
imul
mov
or
mov
pusha
fsubrl
xor
jb
push
fldt
call
jbe
and
notl
adc
inc
ljmp
mov
mov
jge
aam
cmpsl
adc
xchg
adc
popa
out
incb
pop
mov
aas
insl
sub
frstor
adc
dec
je
aas
xor
inc
stos
xchg
inc
cmp
xchg
dec
dec
mov
scas
cmp
xchg
aam
insb
jl
test
adc
or
sub
out
gs
popf
in
or
xchg
fnsave
leave
adc
andl
adc
mov
and
sub
test
push
pop
sbb
jge
ss
sub
adc
aas
stc
lea
lods
jnp
in
inc
negl
pop
scas
mov
and
push
mov
add
dec
out
loop
cmpsl
es
fwait
cmp
cmpsl
sub
push
mov
mov
ljmp
dec
mov
daa
inc
rol
add
leave
xchg
pop
push
inc
mov
aas
in
push
dec
hlt
jae
adc
mov
into
jbe
scas
jne
outsb
jge
jo
lea
push
jmp
sub
fmul
cmp
das
sti
loop
dec
push
and
dec
loope
sub
fisttpll
pop
int
fdivrs
movsb
lods
or
scas
add
out
jae
add
lcall
pop
js
sub
std
dec
add
push
fcmovne
or
sbb
das
insb
ja
lds
gs
gs
and
sub
pushf
add
cmp
rorl
adc
insl
add
sti
push
push
mov
enter
mov
mov
and
mov
fdivl
jmp
nop
inc
mov
jns
xor
sti
pop
fdivl
push
jb
add
xor
sub
xchg
mov
fst
insl
into
int
jae
movsl
pop
stos
gs
mov
adc
or
das
mov
pop
jecxz
orl
daa
shll
mov
or
mov
arpl
xorl
int
addl
xchg
insb
jecxz
rcll
js,pt
stos
cmc
mov
push
test
call
scas
ret
pop
pop
lea
aaa
les
jg
adc
pop
je
mov
push
pop
js
adc
push
inc
mov
stos
imul
xor
mov
mov
inc
ds
stc
mov
mov
push
and
scas
sti
sub
fsubrs
sub
add
add
pop
ds
inc
jne
and
push
outsl
and
int
sbb
cmpsl
cltd
dec
jbe
mov
sbb
xchg
mov
inc
lret
dec
roll
setle
dec
cmp
sarl
out
popa
cli
mov
adc
mov
sub
and
add
add
xchg
add
cmp
jnp
daa
andl
jo
pop
das
sub
mov
sub
int
shrb
mov
or
repz
sti
cld
xor
mov
push
aaa
add
and
lret
push
sub
insb
jle
repnz
in
stos
cld
scas
jnp
imul
xor
hlt
add
repz
sbb
out
rcrb
sub
xor
dec
lea
fldl
mov
ret
pop
jle
pop
xchg
gs
add
loop
sti
or
xor
mov
cmp
clc
dec
inc
sbb
jecxz
mov
mov
cld
mov
es
loope
jmp
xchg
xchg
mov
int
sub
jns
ficoml
sub
mov
lahf
out
sbb
or
rcpps
faddl
dec
jg
xchg
dec
imul
and
jge
xchg
jbe
shrb
pop
or
out
add
cmp
repz
add
cmc
xchg
lea
sub
pop
out
cmp
add
inc
ret
je,pt
mov
shlb
ror
stos
mov
mov
push
int3
lcall
mov
or
push
sub
mov
push
lds
js
adc
out
and
sub
pop
cmp
jo
dec
ss
fldl
dec
imul
outsl
sub
repnz
mov
out
in
cld
int
xchg
inc
fdivrp
pop
cmp
pop
lret
fistps
fistpl
scas
cld
xchg
jle
cmp
jmp
and
adc
movsl
imul
cmpsb
mov
push
mov
roll
ret
adc
mov
sbbl
movsb
cmp
push
and
jae
lods
jbe
adc
sub
mov
mov
dec
test
lea
cmp
das
or
cs
aam
xor
add
shl
jbe,pt
sar
xchg
gs
stc
sub
into
cltd
push
sub
test
cld
pop
popf
push
inc
test
xchg
loop
daa
sti
adc
nop
adc
xchg
inc
and
dec
mov
imul
mov
push
andb
sub
sub
loope
in
std
xor
mov
push
and
aam
xor
jae
aad
or
enter
mov
pop
jbe
pop
jge
xchg
in
fisttpl
xor
je
mov
lcall
and
out
fs
xchg
cwtl
and
xchg
es
insl
outsb
jp
cmpsl
rol
xchg
push
je
addr16
and
or
dec
jecxz
xchg
in
cmp
dec
in
and
movsl
insb
mov
dec
add
pop
ljmp
hlt
repnz
les
mov
loop
mov
xor
dec
add
sbb
shr
push
sbb
xor
xor
movsl
lahf
pop
sub
scas
popa
lea
jbe,pt
pop
shll
pop
andl
das
out
sarl
sub
dec
cwtl
xchg
jbe
jecxz
sbb
jg
dec
stos
rorl
mov
or
sbb
xor
jl
adc
fsub
sub
sub
push
pop
sbbb
and
sbbl
je
mov
adc
and
mov
sbb
fxrstor
jmp
inc
push
xchg
loop
jmp
dec
and
fsubl
push
xchg
or
stos
mov
aas
bound
in
bnd
adc
xor
xchg
pop
fldcw
fimull
das
adc
push
movsl
cmp
add
test
push
cmp
xchg
xor
sub
xchg
xchg
insb
xorl
stos
stos
sbb
cmp
repnz
cmp
cmp
aam
es
cli
mov
pop
ret
push
out
das
mov
movsl
cmpsl
add
mov
je
rcrl
add
or
add
dec
adc
xlat
sbb
repnz
call
dec
outsb
or
xchg
xor
iret
lret
dec
xchg
fidivrl
outsb
loope
push
lods
lcall
dec
and
fucomi
jne
pop
pop
les
int3
jl
mov
arpl
js
dec
aam
and
int3
fidivl
push
icebp
int3
pop
cmp
fwait
xorl
enter
push
jae
mov
int
lahf
out
sti
rclb
cmp
jbe
mov
or
add
pop
xor
mov
push
ljmp
mov
pop
cs
ds
addb
jne
pop
repnz
mov
adc
inc
push
test
inc
andb
addb
shlb
lea
dec
lahf
sbb
push
mov
cmp
jno
in
xchg
test
loop
fadds
sbb
jne
dec
dec
fcmovnbe
add
lods
pop
dec
in
movsb
test
loope
test
rol
ja
movsl
and
rorl
idivl
lcall
fwait
in
addr16
sti
or
mov
popa
inc
ret
sti
shlb
loopne
or
mov
fwait
mov
jmp
rorb
fwait
xchg
push
mov
inc
movsb
in
pop
and
les
jg
xor
adc
pop
xlat
pop
xchg
js
lock
in
mov
lcall
ror
or
jno
jnp
xor
or
rorl
xchg
inc
mov
das
es
or
and
sahf
bound
pop
mov
out
dec
jnp
or
mov
mov
sbb
mov
shlb
imul
cmpsb
enter
sub
ds
pusha
mov
fwait
xchg
mov
and
fwait
mov
mov
clc
cmpsl
adc
das
jge
jl
je
fadds
inc
xor
inc
jge
jecxz
sti
stos
mov
mov
xor
movsb
xlat
ss
mov
mov
inc
or
cmpsl
push
stos
stc
cmpl
xchg
es
call
add
jp
outsb
ljmp
jge
xchg
and
lea
mov
push
and
movsl
filds
pop
lods
das
jle
cs
call
rcrl
adc
jle
mov
fmul
jns
adc
jp
mov
xor
bound
jp
pop
insb
stc
call
inc
cmpsl
pop
ficoml
mov
repz
repnz
out
xlat
jecxz
or
cmp
or
push
or
pusha
rclb
call
mov
data16
arpl
mov
pop
scas
shrl
movsb
or
mov
dec
dec
push
dec
cmp
shl
pop
jge
scas
aad
aad
fs
es
push
shrl
leave
cmpsb
mov
stc
adc
or
shrl
cmp
lods
mov
adc
fildll
push
call
cli
cld
and
xchg
cs
cmpsl
sbb
jne
or
push
jl
sbb
int
jle
add
mov
xchg
xor
add
dec
push
out
ret
in
fwait
data16
xchg
pusha
dec
mov
pop
fistps
lret
push
adc
push
mov
or
ret
push
add
pop
jmp
test
cmp
inc
mov
sahf
add
mov
jecxz
xor
sbbb
ljmp
lahf
push
ss
