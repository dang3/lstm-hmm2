or
sbb
mov
push
outsl
outsb
jp
in
cld
mov
fildll
inc
cmp
mov
lods
scas
push
lret
push
push
pop
mov
mov
ret
lahf
inc
mov
lahf
dec
cmp
adc
call
lahf
mov
mov
push
dec
fs
vpunpckhwd
push
sub
xchg
jle
fistps
jo
mov
jb
sbb
outsl
cmpsb
insl
out
push
out
adc
and
mov
fcmovnb
testb
test
xchg
jge
ja
push
dec
faddp
jbe
movsb
sub
jo
dec
clc
stos
pop
and
subb
add
leave
xor
out
or
add
mov
fs
sahf
movsb
ds
or
xchg
inc
lock
fwait
mov
lret
iret
jle
lds
cmp
loop
ljmp
mov
les
sub
setne
hlt
fiaddl
adc
add
bts
clc
xor
mov
shl
mov
test
push
repnz
pushl
lea
jne
lahf
movsbw
setl
movb
bswap
push
push
lea
lea
call
pushf
pusha
pushf
lea
call
push
pusha
lea
jmp
stc
shl
mov
arpl
jo,pn
cmp
push
bound
pop
jbe
dec
lock
xor
dec
movsl
dec
pop
in
xor
arpl
jle
cld
inc
faddl
imul
jno
mov
movsb
jge
xchg
bound
cmp
jl
jl
pushf
shlb
mov
cmp
or
push
js
mov
shll
push
daa
stos
sbb
insb
xor
mov
sbb
mov
test
jne
or
nop
xlat
insl
fcoml
out
inc
push
mov
xor
in
sbb
fs
dec
pop
inc
incl
scas
sbb
jmp
push
cmc
arpl
fsts
leave
jg
inc
adc
and
insb
mov
fsubl
mov
repz
fs
jge
flds
scas
xchg
inc
lock
ja
std
lods
dec
lahf
fstps
cltd
mov
adc
add
push
les
mov
test
inc
nop
into
jl
js
out
inc
adc
neg
jl
mov
lea
mov
outsb
push
les
jo
sub
loopne
fcoms
xor
cmp
prefetchw
sub
mov
or
out
es
jecxz
insb
call
cmpsl
pop
mov
mov
xor
and
mov
add
xlat
cwtl
add
insb
outsl
jae
push
jb
outsb
je
jb
cmp
pushf
mov
lea
jp
ja
bt
pusha
stc
imul
cmc
movl
cmc
add
pushf
push
movw
lea
jmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
inc
outsl
std
inc
cmp
loopne
hlt
out
test
cli
loopne
sarb
rolb
jmp
test
in
sub
mov
out
dec
negl
inc
add
sub
imul
bound
dec
out
cs
mov
stc
jmp
gs
mov
test
xlat
cmc
xlat
inc
out
out
pop
rorl
insl
dec
repz
out
inc
adc
pop
std
std
test
and
ret
ja
aam
into
shr
daa
fs
pushf
mov
pop
pop
ss
jle
jl
jge
sub
inc
mov
mov
pop
push
ret
add
loope
and
test
and
les
xchg
push
cmpsw
inc
jne
xor
mov
js
shrb
sbb
dec
pop
dec
push
add
jb
sbb
and
sbb
or
sub
adc
subb
aas
js
xor
add
test
mov
jge
sbb
mov
fwait
iret
addr16
enter
dec
call
mov
lret
pop
fisttpll
pusha
std
lret
sub
test
dec
jns
push
lret
jne
mov
aad
push
mov
stos
sub
clc
push
in
stc
jae
sti
pushf
insb
sub
nop
into
je
push
out
mov
pusha
out
inc
adc
into
fiaddl
cmp
pusha
pushf
lea
jmp
rcrl
aaa
stos
addr16
iret
shl
xlat
int
loope
shl
mov
sub
stos
pop
outsl
shll
dec
sub
cld
js
push
fs
int3
mov
sti
int3
orb
ret
inc
repz
jno
xchg
aam
adc
inc
jp
lods
inc
ss
and
cmp
cmpsl
xchg
jmp
into
mov
ja
xor
in
inc
daa
mov
movsl
and
jl
mov
cli
cmp
cmc
jo
push
out
mov
pop
sahf
sbb
lea
test
mov
test
mov
inc
adc
xchg
cwtl
xchg
sub
adc
xlat
cmc
out
sti
in
or
arpl
jae
lea
es
adc
rcrl
test
add
jne
mov
loopne
push
test
sub
xchg
ss
cmpsb
es
pop
aam
push
ljmp
mov
clc
mov
dec
push
jb
add
push
adc
mov
std
xlat
push
jno
inc
xlat
jno
imul
inc
adc
jbe
sbb
movsbl
jmp
lea
jne
bswap
xor
movsbw
add
mov
mov
rol
neg
ror
test
add
jmp
mov
movsbw
bswap
mov
pushf
movw
mov
pushf
pushf
pushl
ret
jmp
or
add
xchg
sub
jno
push
imul
imul
pop
test
scas
mul
lcall
fisttpl
dec
jne
lock
jb
scas
lea
dec
ret
movsb
lahf
fldt
mov
in
add
push
mov
fucomip
lods
aam
aad
xchg
scas
adc
sbb
pop
lds
aad
rcrl
inc
jmp
mov
xchg
sbbb
cs
add
in
mov
mov
test
pushf
mov
adc
cwtl
mov
xchg
and
xor
ss
mov
jb
xor
js
xchg
sbb
inc
daa
or
push
sbb
in
push
add
pop
mov
xchg
inc
jo
jbe
inc
cli
js
rcrb
lcall
cmp
adc
jbe
mov
push
xchg
fcomps
lock
sbb
insl
xor
lods
pusha
sbb
std
pop
rclb
cmp
mov
jge
jbe
leave
daa
jae
lcall
lds
mov
lods
and
sub
cmp
or
add
pusha
lahf
add
mov
test
mov
in
mov
cmpsb
jo
mov
mov
add
mov
outsl
insl
mov
cmp
xchg
pop
dec
fsts
in
enter
jle
movsl
sub
dec
les
je
jge
xchg
scas
cwtl
enter
jo
push
movsl
stos
insl
cltd
xchg
mov
xorb
mov
push
pop
jns
or
mov
xor
mov
xchg
add
inc
sbb
insl
fs
xor
cs
insb
add
or
sbb
pmaxub
cld
ret
aam
fsubr
clc
pop
clc
mov
fldt
rep
lret
fists
pop
push
pop
popa
testl
xchg
push
inc
sub
push
inc
push
inc
lcall
and
ret
fwait
jne
jbe
inc
and
xor
jmp
leave
mov
popf
push
inc
add
inc
cmpsl
sub
cwtl
or
adcl
inc
inc
enter
rclb
hlt
pop
int3
jle
out
inc
sbb
out
mov
sti
cltd
pop
out
xchg
inc
cmp
sub
cmp
or
add
adc
jmp
xchg
mov
or
mov
orb
test
and
int
mov
xlat
sbb
mov
mov
andb
pop
xor
lahf
mov
int
call
lahf
pop
push
pop
jecxz
aam
repz
fdiv
sub
dec
outsl
dec
inc
es
xor
lock
jo
jl
pusha
fiaddl
fs
js
inc
sbb
ja
out
mov
adcb
das
jo
push
dec
push
inc
pop
outsb
enter
and
push
out
movsb
inc
lods
mov
dec
dec
dec
fcompl
lcall
jmp
addl
push
pop
popf
andb
std
lret
data16
push
and
add
push
std
pop
aad
add
addr16
rcll
test
mov
cmp
ss
sbb
add
jnp
imul
outsl
mov
mov
mov
xor
pmuludq
rorb
sub
ret
or
mov
icebp
jns
dec
mov
or
out
mov
jmp
mov
push
nop
xorb
insl
and
out
inc
xorb
and
stos
inc
mov
fbstp
sub
add
in
mov
xorb
add
push
inc
into
inc
jl
js
out
inc
sbb
andb
lea
jbe
pushf
pushf
pushw
popfw
pushf
inc
pusha
movb
call
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
inc
dec
aam
insl
lods
test
mov
mov
pop
and
sub
jae
mov
stos
enter
push
add
fsts
adc
ret
pop
jle
mov
mov
pop
pop
sbb
call
add
push
cwtl
xlat
ret
hlt
cwtl
push
call
cmpsb
and
pop
clc
mov
xchg
lods
xor
inc
arpl
sub
stc
cwtl
mov
or
roll
pop
dec
dec
into
push
mov
xor
mov
cwtl
dec
orb
inc
sbb
movsb
fildl
push
push
pushl
stc
and
call
lea
ja
bt
push
cmc
imul
pushf
clc
add
pusha
pushf
push
lea
jmp
jae
cmp
data16
dec
add
pop
pushf
mov
scas
lods
scas
pushf
xor
sbb
fucomip
imul
push
movsl
cmp
pop
inc
push
add
not
rcll
and
into
ret
xchg
pop
inc
gs
sub
shlb
xchg
test
mov
add
mov
loope
push
insl
push
inc
pop
mov
jno
mov
lret
int
mov
or
mov
mov
in
test
mov
add
out
inc
sbb
lea
and
push
movb
mov
mov
pushf
push
not
setg
lods
pushl
pusha
pushf
inc
test
xor
mov
clc
rol
lea
jg
jb
inc
clc
call
dec
bound
fsubs
mov
add
cmp
and
pop
movsb
xchg
sub
into
inc
mov
sub
pop
add
cmc
dec
aad
out
insl
mov
test
cmp
or
adc
arpl
jb
sti
rcrb
sub
adc
xchg
je
cmp
test
jns
fildll
xchg
xchg
jnp
test
xor
sub
lods
lahf
add
add
call
inc
pop
push
pop
inc
dec
jl
dec
push
jl
push
movsb
adc
sub
xor
cmpsl
sub
int
hlt
ljmp
mov
mov
cmp
cmp
jns
mov
test
enter
and
and
lock
lcall
xchg
hlt
mov
adc
shll
sbb
adc
insl
outsb
xor
and
jae
cmp
sub
xor
xchg
stos
out
fdiv
outsl
xor
mov
add
or
in
or
mov
lea
call
pusha
pusha
lea
jae
pusha
not
mov
push
inc
jmp
mov
pushl
movl
call
call
push
inc
pop
incl
lret
movsl
xchg
in
mov
out
int
in
xor
pop
sub
lods
pop
dec
ficoml
mov
in
rcll
pusha
bound
stos
pop
jnp
xchg
add
fistpll
xchg
xorl
mov
lcall
xor
pop
addr16
push
test
mov
xor
repnz
aam
pop
cli
fidivrs
adc
mov
outsb
in
pop
xchg
cmp
add
push
in
imul
shr
inc
push
fstpl
sub
xchg
push
add
sar
test
sub
cmc
rol
movzbw
sbb
add
not
bt
or
mov
setg
add
mov
test
repnz
pushf
pushf
mov
pushl
lea
jne
movzbw
movb
pushf
movsbl
bswap
not
mov
setp
pushf
movzbw
lea
push
call
dec
sub
movsb
incb
inc
sbb
pop
push
pop
dec
pop
jb
xchg
shrb
rorb
pmuludq
dec
icebp
inc
loop
adc
lods
sbb
hlt
clc
lret
cmpsb
adc
sbb
and
orl
jno
xor
fs
xchg
test
pop
or
jecxz
cwtl
mov
aaa
stc
hlt
fidivrs
mov
js
xchg
inc
dec
pop
js
dec
sbb
daa
daa
mov
push
out
cli
inc
dec
lret
bound
cli
mov
cmpsl
or
add
and
or
call
cltd
leave
lret
in
imul
fwait
insb
push
pusha
push
jno
jne
pop
imul
jnp
ret
jno
mov
adc
out
fmulp
nop
test
jo
jl
jnp
jp
insb
mov
xor
jl
andnps
ret
jmp
lock
mov
adc
dec
insb
das
imul
xchg
sbb
sbb
sti
add
xchg
sbb
adc
adc
pop
fcmovb
inc
int3
outsb
fcoms
data16
dec
clc
dec
out
inc
pop
pop
movsb
scas
mov
fadd
dec
sbb
test
ljmp
mov
je
loopne
inc
mov
scas
popf
aas
xlat
aad
push
jg
fstl
movsl
cmp
jle
mov
sbb
pop
add
sub
sbb
pusha
out
sbb
inc
inc
rorl
popf
add
fistpll
addb
inc
jmp
pop
mov
or
les
dec
inc
dec
dec
xor
cs
insb
add
div
push
xchg
loopne
fdivr
int3
aam
call
mov
test
pop
adc
lret
lahf
addl
push
and
test
daa
rol
pop
adc
mov
jl
push
lock
je
cmp
mov
mov
ds
cmp
daa
xchg
addr16
sahf
test
leave
push
stc
pop
leave
imul
and
adc
pushl
xchg
push
pop
ja
and
mov
jmp
repz
test
dec
jae
jo,pt
div
dec
push
sub
pop
sbb
xlat
loope
sbb
xchg
cmovo
xchg
push
sarb
jle
sbb
sbb
cmp
push
fcoms
sar
pop
out
std
dec
adc
fidivrs
in
in
cmc
dec
fldenv
add
jne
testb
outsl
and
xchg
add
call
das
pop
jae
jmp
xchg
and
fists
mov
loop
shr
inc
and
pushl
pop
bound
or
lods
arpl
loope
adc
imul
daa
sub
xor
push
xchg
xchg
sbb
lds
movsl
cs
ficoms
mov
mov
add
insl
test
ds
in
jmp
ljmp
jge
test
xor
add
sub
jecxz
test
les
je
push
pop
jle
int3
jb
into
pop
add
js
lock
fisttps
push
loope
pop
sub
mov
dec
xorb
out
pop
sbb
or
adcb
push
movsb
pop
rcr
sbb
scas
xchg
inc
adc
add
lods
mov
pop
daa
outsl
xchg
mov
sub
cmp
adc
shrl
es
mov
sar
sbb
jne
les
inc
es
lahf
xchg
fstpt
fsub
pusha
aad
fcoms
mov
sub
sub
jmp
and
xor
pop
sub
outsl
js
lods
call
and
push
xlat
jmp
lret
and
or
jno
ja
add
sahf
aaa
fiaddl
sahf
or
data16
pop
push
test
addr16
fiaddl
rcll
ret
pop
repnz
mov
xchg
shrl
movsb
std
mov
mov
and
push
rdmsr
mov
dec
pushl
enter
fdivrs
out
inc
and
push
inc
push
dec
xor
cs
insb
add
in
xor
shr
movb
lea
jno
je
call
movb
movw
mov
call
out
icebp
out
inc
js
push
dec
dec
add
or
add
hlt
fdivrp
into
aam
fcoms
inc
mov
cmp
out
mov
cmp
shlb
addb
cli
mov
push
sti
dec
scas
cwtl
js
sahf
jge
js
cmc
addr16
xor
hlt
adc
mov
push
sti
mov
outsl
push
into
mov
repz
sub
mov
adc
or
outsl
aad
out
inc
and
mov
out
cmc
jmp
mov
mov
jmp
clc
push
bt
rol
cmc
call
and
push
clc
sahf
stos
pop
leave
mov
lods
sahf
mov
sahf
test
rcll
jl
sbb
mov
push
and
sahf
leave
jp
pop
mov
push
jbe
add
jae
rclb
ljmp
add
xchg
scas
jns
inc
int
stc
int
pop
jns
stos
push
xrelease
mov
or
sbb
xlat
cmp
push
call
pop
push
pop
bswap
call
lea
bswap
mov
push
jmp
pushl
jmp
mov
call
cli
sbbb
xorb
ja
sti
cmp
xchg
fsubr
popa
pop
pop
cmp
lods
mov
push
hlt
or
mov
and
jns
int3
lds
out
int
icebp
jg
rol
sbb
loop
and
mov
xlat
repnz
add
dec
js
mov
outsl
jae
ja
inc
gs
adc
jns
stc
cmp
mov
cmp
cmp
mov
movsb
add
inc
and
adc
hlt
out
lock
stos
xchg
mov
push
popa
jae
imul
or
in
and
xor
stos
in
dec
add
test
sub
aas
add
popf
int
jae
movsb
cld
test
cmpsl
test
and
out
or
and
outsl
or
jmp
adc
popf
andnps
xor
xchg
lds
lahf
fucomp
push
dec
imulb
loope
mov
jnp
loopew
xchg
pop
add
cmpsl
out
inc
and
movzbl
lea
dec
shr
mov
jmp
ror
cmc
cmp
bt
xor
push
pusha
rol
call
movl
call
arpl
dec
push
testl
jl
je
push
ds
inc
loop
jne
sbb
stos
or
in
daa
fadds
inc
push
cmp
mov
mov
lods
and
enter
mov
adc
xchg
mov
cli
or
adc
mov
xor
inc
and
fldenv
lea
call
adc
pushl
lea
jae
jmp
movzbw
shl
mov
rcr
adc
inc
and
add
shrd
shrd
seta
pusha
mov
pushl
clc
test
pushl
jmp
movzbw
lea
add
xor
call
not
mov
sub
btr
shr
movzbl
shld
add
add
bt
cmp
mov
add
mov
cmc
cmc
bt
bt
repnz
push
pusha
pushf
lea
jne
movsbw
movb
cwtl
cwtl
not
movsbl
push
bswap
lea
pusha
movl
pusha
pushf
pushf
mov
mov
push
pushl
ret
mov
hlt
pop
stos
xor
push
pusha
jbe
dec
je
test
xorb
sub
and
xor
shr
loopne
jp
mov
jmp
aaa
xchg
rcl
push
ds
mov
sbb
jmp
divb
shlb
jge
xchg
jecxz
jp
pop
mov
adc
out
jp
call
aam
jb
xor
popf
pop
leave
xchg
sub
mov
mov
jno
in
test
push
in
mov
push
xor
jno
jns
mov
cmpsl
jno
leave
inc
or
sub
out
lds
jecxz
movsl
sub
pop
rol
cmp
inc
fnsave
popf
outsb
jo
fwait
iret
out
mov
and
sub
and
icebp
sbb
mov
stos
mov
ret
mov
xchg
cmp
mov
mov
test
push
add
and
cmp
out
inc
sub
mov
or
add
jl
rclb
mov
imul
mov
insl
mov
mov
adc
push
xor
outsb
movsb
xchg
icebp
cmp
bound
cwtl
cmpsb
stos
mov
adc
mov
call
jns
inc
mov
cmp
mov
and
inc
outsl
lret
test
mov
mov
icebp
nop
adcb
sbb
daa
push
or
or
jnp
push
out
dec
dec
repz
push
pop
in
dec
fmuls
pop
in
sbb
fcomps
fs
jne
sar
shl
sub
sub
sub
rcl
mov
ror
add
mov
setnp
pushf
mov
pusha
mov
pushf
lea
jmp
loopne
fs
xchg
and
xor
sbb
cmp
hlt
not
out
testb
xor
xchg
pop
and
loop
movsb
cmp
fstl
les
mov
mov
mov
dec
or
sbb
add
mov
xchg
lods
out
ret
cmp
xchg
pop
arpl
pusha
jbe
outsb
mov
mov
pop
adc
sub
cmp
pop
jne
out
cmp
dec
push
loop
movsb
ja
add
insl
fbstp
outsl
data16
mov
pusha
sbb
fsubr
mov
mov
jnp
shll
xchg
sub
into
nop
adc
and
add
in
stos
test
push
cmpsl
mov
pop
lret
jns
popa
repz
jne
jno
out
inc
sub
xor
ret
push
loopne
rcr
inc
cmp
add
or
loopne
lock
in
shlb
adc
sub
mov
mov
push
adc
lock
data16
cld
inc
out
in
push
lods
jmp
call
pop
das
push
jl
xor
inc
dec
decl
dec
ljmp
popa
ret
aaa
mov
xor
repz
dec
in
mov
dec
cmp
in
fnsave
cmc
outsl
loope
notb
sub
push
pop
lret
cmc
mov
fs
dec
hlt
push
shlb
sub
repnz
jl
inc
fcomp
popf
cmpsl
mov
pop
dec
jae
jnp
imul
jae
hlt
test
mov
mov
out
mov
addl
jp
movsb
repnz
dec
jns
pop
inc
addr16
xchg
push
add
xor
fwait
cmp
or
out
inc
sub
aaa
sub
rcrb
and
add
cmc
bt
pushf
cmp
call
outsb
inc
pop
jne
dec
fs
adc
ljmp
and
mov
into
jle
lods
mov
xchg
jg
shrl
and
mov
lods
xchg
ds
test
mov
int3
xchg
ror
sbb
inc
dec
pop
xlat
push
pop
sbb
xchg
cmpl
xchg
add
aam
sbb
xchg
test
jbe
pusha
popa
inc
jns
popa
sub
jae
aas
fiadds
orb
mov
jle
test
xadd
add
push
loopne
xorl
jmp
push
adc
pop
int
test
jecxz
jg
xchg
lea
adc
sbb
mov
sbb
imul
call
cwtl
hlt
cmp
dec
dec
imul
rclb
or
lret
xchg
int3
mov
setns
mov
xor
aad
inc
adc
rol
push
int3
subl
jmp
fisttps
int3
imul
sahf
xor
adc
mov
inc
cli
add
test
popf
adc
inc
dec
fs
adc
xchg
push
ret
cltd
adc
test
mov
lea
mov
movsl
cmp
cwtl
mov
imul
std
out
lock
adc
pop
pop
insl
jg
imul
mov
rclb
data16
adc
mov
sub
xchg
or
dec
pop
sarl
add
imul
push
fbld
dec
out
jge
lods
repz
inc
sub
dec
jl
in
jp
dec
jb
pop
push
addr16
dec
jge
jns
inc
pop
jno
pop
sbb
nop
jne
cltd
lea
mov
mov
and
jbe
dec
adc
daa
xchg
leave
call
movb
hlt
call
add
add
rorl
sahf
dec
loop
and
stc
dec
lret
mov
mov
and
scas
mov
jp
dec
addb
ja
and
adc
fs
xchg
das
call
mov
adc
adc
loop
push
loopne
das
cmpsl
adc
pushf
jnp
mov
and
aas
cmpl
scas
xor
mov
cmp
dec
xchg
mov
mov
pop
push
cmp
inc
adc
mov
movsb
push
cwtl
lods
xor
push
divb
inc
cs
pop
inc
call
movsl
cmc
stc
push
inc
inc
imul
insl
pop
dec
outsl
push
dec
pop
pop
pop
inc
dec
push
pop
sti
jno
pop
adc
and
fnstcw
xchg
xor
out
loopne
bound
lods
sub
and
sbb
push
inc
and
test
xchg
and
add
sub
int
fcoml
push
mov
push
xor
ss
mov
pop
push
mov
negl
and
inc
into
xchg
mov
lods
adc
jb
and
jle
sarb
in
out
inc
cs
call
and
or
cmp
and
or
sub
pop
or
in
pop
or
or
movsb
and
push
into
xor
call
ljmp
rorb
xor
ja
or
ss
jbe
test
rcrl
fucomip
data16
adc
fisubrs
xchg
pop
movsl
add
jmp
inc
das
mov
dec
mov
pop
xchg
jmp
iret
in
in
or
lcall
aaa
jno
push
inc
dec
jg
jnp
jae
xchg
fcmovbe
mov
in
push
test
jmp
and
push
pop
sbb
movsl
popf
adc
in
daa
mov
jne
addr16
std
jnp
jg
adc
pop
pop
or
xchg
and
ret
in
inc
lock
movsb
enter
les
out
inc
das
pop
cmc
pushf
int3
out
faddl
repz
xor
sbb
sbb
fcom
add
cli
pop
jae
mov
lods
push
cmp
inc
cwtl
mov
sahf
lods
aaa
jl
push
ljmp
cli
shlb
js
mov
mov
int3
imul
mov
cmp
in
inc
divl
aad
mov
mov
mov
in
out
pop
hlt
mov
dec
insl
and
adc
nop
dec
mov
mov
test
dec
push
in
fwait
lock
xchg
lret
fxch
push
aaa
mov
popf
pop
mov
loop
push
push
cmp
and
xchg
xchg
inc
dec
jmp
stos
test
bound
push
jecxz
pop
or
roll
push
test
std
out
jo
out
dec
and
in
call
outsb
jae
mov
pop
cmp
and
mov
sbb
das
popf
sbb
inc
push
inc
pop
pop
inc
push
sbb
addr16
xor
add
or
test
orb
sub
pop
into
pop
pop
repnz
out
inc
xor
xchg
sub
inc
fwait
inc
and
popf
loop
ret
ror
out
in
fsubrl
lahf
sub
jp
xchg
jae
aad
jb
sub
jp
and
insl
rorl
fsubs
ljmp
fxch
push
fldt
push
xadd
popf
into
enter
cltd
mov
mul
ja
jns
cmpsl
mov
add
xchg
das
xchg
loope
and
leave
mov
cltd
lret
mov
jle
flds
scas
rolb
add
test
mov
loopne
mov
inc
xor
or
pop
inc
push
dec
adc
cmp
and
add
sub
ss
pop
cs
je
data16
loope
cwtl
mov
jge
je
jp
or
insl
rcrl
inc
roll
fcompl
mov
jp
mov
stc
jnp
push
fcomp
movb
mov
sbb
fadds
inc
xor
shl
out
pop
out
pushf
movsl
popf
xor
outsl
insl
pop
jge
cltd
mov
lret
mov
aas
out
cmc
jnp
ja
cmp
test
xchg
cmp
mov
dec
inc
or
les
or
roll
pusha
jecxz
popa
movsl
data16
cmp
out
in
dec
hlt
stos
mov
sarl
jnp,pt
rcll
and
out
sub
neg
push
mov
cmp
mov
movsb
testb
or
fsubrs
pop
in
inc
aam
cmp
inc
xor
repnz
add
cmp
inc
and
and
addr16
add
adc
xor
push
mov
mov
pushf
pushf
pushf
pushl
ret
inc
inc
dec
xor
cs
insb
add
mov
mov
add
adc
sti
rcl
in
mov
out
push
dec
fs
add
dec
inc
sahf
mov
xor
xor
mov
mov
inc
in
mov
mov
mov
lea
or
shrl
sarl
test
ret
and
out
and
push
add
or
movsb
inc
orb
repnz
lret
pop
lret
xor
and
add
inc
imul
outsl
push
jns
je
insl
push
imul
adc
int
xchg
test
dec
bound
ljmp
xchg
bound
inc
jns
inc
clc
mov
stos
sbb
pop
cmpsl
leave
mov
lods
adc
les
loopne
pop
xchg
cmp
cmpsl
jecxz
fistpl
add
stos
push
fistps
mov
mov
js
fidivs
jne
or
sbb
sub
and
xor
xor
movzbw
lea
pushf
movl
jmp
movsb
mov
cmp
data16
jns
pop
jg
fwait
cltd
mov
inc
fsubrs
insl
notl
data16
sub
xlat
add
lcall
jge
iret
sbb
mov
xor
hlt
pushf
daa
sti
in
push
loopne
dec
push
and
inc
daa
pusha
ficompl
sub
or
sub
push
in
out
mov
or
dec
pop
leave
aad
out
mov
or
stos
sbb
dec
mov
jl
pop
scas
push
push
nop
out
inc
xor
mov
add
bt
movzwl
add
rcr
dec
shl
mov
jmp
movb
cmc
cmp
pusha
pusha
pushf
lea
jae
pushf
cmp
mov
jmp
jecxz
push
sbb
mov
daa
xor
xor
sub
pop
or
jne
popf
aas
jne
rep
imul
sub
imul
loopne
inc
test
pusha
adc
lahf
test
inc
in
xor
sub
xor
and
or
lods
stos
push
adc
jg
or
sub
push
lds
dec
je
dec
cld
outsb
xor
push
mov
dec
loopne
in
hlt
jle
dec
in
push
out
inc
xor
lea
ja
push
pushf
mov
lea
jb
call
jmp
movl
pushf
jmp
push
jbe
dec
fmull
or
andl
add
xor
cltd
and
imul
jnp
xor
in
sub
arpl
add
es
aam
xchg
mov
jl
mov
data16
cmp
xchg
jo
aam
xor
pop
sub
aam
jo
add
lea
mov
mov
mov
test
movsl
jg
adc
jg
push
lea
call
call
lea
jne
cwtl
movzbw
movb
pusha
cwtl
movzbw
movzbw
mov
cwtl
lea
push
mov
call
iret
xchg
mov
pusha
and
and
and
ror
pop
test
xchg
adc
or
mov
xorb
fcoms
jmp
filds
int
lret
pusha
out
fsts
jns
jmp
xchg
dec
jne
jg
jl
push
or
cs
ljmp
insl
mov
dec
mov
in
mov
or
pop
inc
enter
pop
rorb
add
les
push
pushf
pop
out
inc
ss
stos
inc
dec
adc
mov
mov
cwtl
mov
jo
insb
pop
adc
jl
mov
and
nop
pop
js
mov
aaa
xchg
ficoms
insl
jmp
cmp
movsb
push
mov
push
xor
xchg
enter
push
sbb
das
repnz
push
sub
dec
jg
push
ljmp
notb
inc
inc
popf
aas
stc
aas
mov
rcrl
jne
out
inc
aaa
out
sbb
sbb
ror
adc
mov
jmp
call
pusha
lea
jne
bswap
lahf
lahf
movb
pusha
not
cwtl
mov
bswap
not
push
pop
lea
pushl
movl
jmp
pushf
call
jnp
pop
cmp
idiv
cmpsl
xchg
lret
lea
jge
mov
filds
int3
pop
nop
inc
sti
jg
xchg
xchg
fstpl
push
xchg
lods
xchg
test
dec
pop
cmp
push
insb
xor
ljmp
xchg
inc
push
mov
and
mov
or
in
sub
sub
cwtl
and
insb
repnz
jl
inc
cmp
fs
jae
shr
bsr
not
rcl
mov
btc
mov
shrd
cmc
sub
mov
pushf
movb
xor
cmc
pushf
repnz
mov
pusha
lea
jne
sbb
not
dec
mov
sub
bts
sub
pushf
test
jmp
jne
shld
neg
not
btc
mov
pusha
cmp
bt
push
add
pusha
test
bt
call
xor
insl
popf
loop
bound
std
xlat
mov
sar
dec
cmc
ds
jecxz
xor
into
iret
push
jl
inc
stc
mov
mov
mov
pop
cmc
xor
push
inc
jo,pn
cmp
and
dec
pushf
xorl
jl
jl
movsl
mov
add
fxch
pop
push
push
cli
cmp
mov
and
fildll
clc
cmpsb
mov
cmp
mov
out
inc
cmp
shlb
out
fiadds
adc
or
addr16
dec
inc
jnp
arpl
cltd
pop
rcrb
cmp
mov
adc
imul
and
sub
xor
outsb
cmp
adc
adc
out
sbb
jecxz
or
cmp
cmp
out
fs
push
jb
inc
je
sbb
enter
pop
fisttps
subl
sbb
gs
lds
fwait
or
adc
sub
and
adc
xor
jle
push
cld
inc
out
inc
cmp
xchg
sub
not
jmp
push
jg
dec
adc
dec
arpl
iret
rcl
ret
icebp
leave
lret
popa
jmp
adc
jle
mov
ja
icebp
loop
pop
pop
adcb
xchg
sub
inc
inc
push
push
pop
fdivrl
jno
dec
cli
push
mov
jo
outsb
mov
in
mov
adcb
fstpl
mov
jns
adc
frstor
pop
shr
inc
cmp
pop
or
xor
adc
mov
mov
mov
inc
nop
cld
sti
push
outsb
xchg
subl
outsb
inc
in
cmpsl
xor
rolb
lcall
and
ret
into
lcall
mov
addr16
dec
pop
je
push
ficompl
mov
mov
mov
jo
xor
test
lea
std
inc
ret
xlat
pop
cmp
jmp
jne
inc
push
sarb
mov
fwait
pop
lahf
adc
scas
or
inc
cmp
sti
add
mov
pusha
call
mov
movsb
inc
adc
mov
lahf
rol
fstps
adc
movsl
adc
xchg
leave
dec
mov
sbb
pop
jne
cmp
pushl
mov
loope
push
call
insl
jno
push
mov
inc
dec
call
cmp
jbe
inc
orb
xchg
sahf
leave
inc
cli
dec
lret
ljmp
push
imull
stos
xchg
adcl
mov
ljmp
push
out
inc
cmp
fs
jae
pusha
xchg
call
mov
mov
movzbw
bswap
movsbw
mov
lea
movzbw
call
inc
xor
sbb
dec
add
add
sbb
sbb
scas
adc
mov
cwtl
cmpsl
jae
dec
or
out
inc
pop
jns
outsl
cmp
sub
push
push
mov
cmp
bound
sbb
lea
bt
sub
movb
test
test
clc
pushl
popl
pusha
stc
pushf
cmp
pushf
call
pusha
pusha
mov
push
pushl
lea
jmp
lea
ja
call
call
add
mov
cmc
cmc
clc
cmpb
call
fiadds
std
adc
rol
out
into
fcom
notb
and
test
mov
mov
enter
mov
addr16
dec
call
mov
sbb
mov
jae
lcall
subl
es
rorl
dec
jecxz
fstl
push
in
shlb
int3
dec
je
xor
fimuls
inc
jp
mov
xchg
or
ja
stos
in
mov
xchg
aaa
mov
ljmp
add
xor
stos
dec
push
jne
cmp
adc
adc
dec
sahf
enter
test
lock
pop
inc
jbe
pop
insb
jp
jle
sub
mov
push
pop
lret
dec
adc
aas
mov
scas
lret
dec
clc
sub
xorl
xchg
lods
icebp
sbb
cmp
aad
mov
xor
mov
pop
test
pop
mov
sbb
sbb
sbb
sbb
mulb
ret
bts
shld
bt
mov
bt
bt
cmpb
jmp
das
push
shld
rol
mov
sub
movsbw
mov
aad
sub
daa
push
movzbw
movzbw
push
clc
push
aas
daa
mov
dec
cmc
aas
push
cmp
mov
push
mov
jmp
sbb
adc
shrl
xchg
movsl
lahf
movsl
xchg
test
mov
jnp
repnz
sub
aad
xchg
fstps
xchg
xor
data16
daa
adc
fldt
sbb
pop
testl
daa
test
cmp
xchg
or
pop
repnz
xchg
in
mov
add
adc
mov
in
xchg
je
push
lods
ss
fisubs
loop
fidivl
out
inc
ds
rol
mov
cmc
xor
push
sbb
fimuls
repnz
scas
add
addb
jae
dec
ficoml
sub
mov
imull
cs
clc
push
aad
sbb
aas
or
jne,pn
aad
repz
mov
loopne
add
jg
jno
xchg
cmp
test
jne
xor
xchg
adc
fucomi
jmp
arpl
or
xor
mov
xor
mov
jp
sub
pop
int3
lcall
out
inc
aas
mov
push
sub
jae
dec
jae
fwait
mov
test
stos
cmp
testl
sbbl
sub
cmp
inc
movsb
xchg
add
insl
mov
cmpsb
fidivrs
nopl
pop
mov
pop
insl
call
push
cmpsl
mov
add
sarb
or
or
push
iret
xor
dec
lock
mov
xlat
rcrl
data16
sbb
incb
inc
jmp
test
ja
inc
aas
aas
mov
pushf
mov
mov
mov
test
jmp
add
push
cmp
sahf
xchg
fsub
lods
stos
je
jl
je
inc
jbe
dec
add
xor
stc
addr16
ds
cltd
cmp
mov
stc
inc
into
fcomi
or
sbb
lea
das
lea
sub
ret
sub
jb
out
cmpl
jmp
outsl
and
repnz
xchg
and
and
pop
ret
xchg
sub
inc
dec
xlat
inc
push
push
mov
icebp
jg
pop
add
or
inc
inc
xchg
insl
or
test
mov
sbb
bsr
sub
sub
jmp
hlt
mov
sbb
ret
in
leave
repz
stc
pop
sbb
sbb
jo
or
xchg
mov
loope
mov
scas
sub
inc
std
mov
sbb
lcall
faddl
and
js
sub
cmp
pushf
cmp
xchg
xchg
fcomps
imul
hlt
pop
cmp
sub
fcmovnu
fdivs
nop
stos
sub
nop
ds
xchg
lret
inc
mov
lret
inc
inc
test
inc
fildll
xchg
out
mov
fsub
int3
out
hlt
into
loopne
adc
xor
adc
sub
rcrl
xchg
divl
scas
jne
nop
cmpsb
sub
xor
rorl
shl
fadds
and
add
jbe
hlt
rolb
inc
xchg
pop
sbb
dec
imul
cmc
ja
outsl
stc
pop
cmc
mov
inc
inc
loopne
adc
and
sbb
loope
mov
mov
pop
push
dec
inc
jl
jl
lods
jbe
fistl
pop
inc
cmc
xchg
or
call
pop
sbb
pop
cmp
inc
mov
jmp
push
pop
enter
stos
or
add
jno
xchg
pop
test
push
fs
test
pop
or
loope
sti
xor
in
lock
pop
enter
pop
call
bound
out
clc
xchg
adc
mov
in
fcoms
mov
scas
or
sbb
cmp
out
inc
inc
test
outsl
or
push
dec
in
loop
scas
int3
shr
cld
ds
xor
adc
or
add
mov
push
mov
add
outsb
outsl
insb
xor
xchg
roll
xor
out
cwtl
xchg
add
shll
arpl
out
mov
scas
mov
movsb
es
out
pop
loop
js
out
inc
inc
adc
mov
add
stos
rorb
pop
sbb
push
xor
and
or
or
add
mov
xchg
sub
jne
aad
jl
out
aas
sbb
in
icebp
inc
and
cmc
mov
mov
pop
insl
pop
push
test
enter
xchg
inc
xchg
dec
fidivl
mov
sub
shl
lret
pop
in
shll
test
cmp
je
xor
mov
int
inc
out
gs
push
fldt
idivl
jge
inc
inc
mov
pusha
stc
ror
stc
pushl
pushl
bt
xor
call
mov
lea
je
bt
add
bt
stc
cmp
jmp
xchg
sbb
jmp
loop
repnz
into
adc
sub
test
dec
jecxz
in
lock
call
imul
aad
jmp
fidivrl
sbb
pusha
nop
cltd
inc
mov
call
lret
cmp
aas
cmp
add
sahf
stc
mov
xchg
jge
test
push
sti
lahf
cmp
inc
or
mov
mov
mov
inc
inc
aam
push
mov
sbb
xchg
imul
shrl
inc
jmp
mov
out
inc
inc
gs
test
mov
addr16
jp
adc
add
xor
cmp
or
loopne
faddl
push
iret
cwtl
jae
jmp
jge
fistl
scas
in
lock
sub
repz
js
outsl
jg
test
in
pop
jbe
movsl
jge
add
and
pop
push
xorl
mov
xchg
shl
loop
and
int3
jle
push
add
je
inc
mulb
mov
outsl
sbb
popa
push
roll
mov
fwait
or
ja
out
inc
inc
and
loop
ljmp
outsb
add
pop
push
xchg
sbbl
and
loopne
insl
and
dec
pop
mov
push
mov
and
mov
push
mov
fmuls
clc
mov
ljmp
leave
gs
pop
cltd
cmp
or
lret
inc
negb
in
pushf
dec
pop
pop
fisubl
pop
push
psubw
orb
les
jp
push
jp
jle
inc
inc
movsl
push
inc
pusha
stc
jmp
xchg
or
pop
inc
pop
test
pushf
mov
nop
pop
sub
movsl
dec
xor
mov
imul
std
loop
adc
inc
mov
and
fucomp
in
add
shrb
mov
push
push
orl
imul
mov
mov
adc
loop
lret
mov
or
imul
imul
add
inc
inc
or
stc
mov
push
push
loopne
mov
mull
daa
add
cmp
and
mov
adc
ret
inc
ja
or
cmp
insb
bnd
mov
jo
inc
das
aas
jae
mov
lds
fld
bound
push
pop
movsl
idivl
pop
jmp
xor
movl
xor
and
dec
fldl
xlat
rorl
xlat
fdivp
in
sbb
or
sahf
nop
mov
pushf
push
mov
sahf
push
fsubrp
inc
inc
call
out
dec
jecxz
cmpsl
sbb
push
ja
push
jne
inc
outsl
jns
push
pop
imul
das
adc
cs
or
aas
movsl
sub
xlat
lret
xchg
dec
std
or
pop
loopne
aad
or
out
mov
out
lods
fcom
mov
cltd
mov
inc
add
fldl
add
xchg
rolb
dec
repnz
jl
adc
jo
xor
dec
sbb
mov
mov
decl
std
adc
dec
clc
pop
cmp
rcll
cmp
cmp
mov
test
cmc
out
dec
fnsave
cltd
and
fs
pop
out
jnp
imul
cmp
gs
xchg
iret
sub
pushf
in
iret
out
mov
out
les
inc
lock
les
inc
or
mov
fadds
xchg
xchg
scas
insl
movsb
mov
cmp
addr16
xor
jns
insl
out
inc
inc
xchg
imul
ja
mov
cwtl
lcall
push
outsb
pop
lcall
push
rorb
mov
jne
jmp
outsl
ret
orb
cwtl
mov
push
out
dec
push
pusha
insl
adc
movsl
mov
cmpl
mov
xchg
push
out
jb
jmp
and
cltd
test
push
andnps
ja
dec
jmp
popf
or
repz
xchg
pop
mov
pop
cmc
outsl
aad
aad
out
inc
inc
jb
sahf
bt
mov
jmp
jmp
nop
mov
fcompl
test
push
xor
and
sub
xor
loopne
sub
icebp
mov
xchg
dec
add
std
arpl
loopne
into
stos
cmp
mov
inc
jg
rcrl
or
call
mov
cmp
imul
lds
sarb
mov
movsl
setge
jns
dec
mov
mull
jne
out
inc
dec
and
jae
jb
fidivrl
je
mov
xchg
sahf
pushf
xchg
lods
jb
push
lock
adc
fisubs
mov
pop
or
or
push
inc
leave
imul
leave
push
xrelease
add
jbe,pt
xor
xlat
dec
fnstcw
pop
cmp
sbb
std
movb
mov
jns
ja
mov
test
push
fimull
jo
mov
dec
pop
cltd
mov
outsl
push
xor
lret
mov
test
mov
cmpsb
js
pusha
lret
arpl
xchg
in
jo
enter
inc
mov
ret
xor
mov
shl
push
fdivr
out
ja
dec
je
sti
hlt
pop
and
idivb
rclb
jmp
fcoms
in
out
jg
data16
lods
jmp
mov
std
or
js
or
mov
test
adc
inc
dec
lret
sub
leave
cltd
mov
cmpsl
xlat
sti
aad
add
aaa
xor
jle
xchg
adc
scas
push
inc
loop
or
sbb
mov
cwtl
into
mov
xchg
cwtl
xchg
into
fisttps
xor
ja
and
and
xchg
cmp
sbb
push
add
cwtl
cs
mov
frstor
dec
jmp
in
test
or
mov
cmc
filds
imul
xchg
pop
in
mov
cltd
cmp
dec
fs
mov
lods
das
sub
or
sbb
call
ret
enter
arpl
and
ljmp
lock
dec
movl
mov
cmc
testb
jge
jns
mov
popa
jno
xchg
and
adc
mov
mov
push
pop
clc
mov
std
inc
jns
data16
jp
fidivrl
mov
sub
mov
jnp
iret
fwait
lcall
test
pusha
inc
repnz
sub
inc
dec
sbb
lahf
pushf
sub
setbe
mov
pushf
test
jmp
pop
push
sub
mov
and
pop
jae
pop
jne
dec
insl
inc
inc
out
add
imul
addr16
sbb
testl
test
outsb
jg
or
lahf
xor
out
mov
and
rorb
shrl
cli
sub
scas
or
into
in
inc
sbb
in
out
insb
fimull
mov
addr16
jmp
jg
pop
icebp
jg
dec
adc
inc
dec
mov
bound
sbbl
call
adcb
or
rolb
inc
inc
mov
mov
pusha
pop
xor
stos
pushf
enter
adc
and
push
roll
add
pusha
inc
add
jle
into
incl
sbb
pop
and
pusha
adc
loop
mov
pop
mov
xchg
lds
popa
stos
das
cmp
iret
jns
jne
jno
jns
push
out
inc
dec
popa
fwait
xchg
sub
push
mov
mov
xchg
mov
loop
sti
test
loop
push
cmp
sbb
mov
or
mov
out
and
fcoml
out
sub
fwait
cmp
rorl
sti
pop
les
out
mov
push
push
sbb
push
sbb
xor
and
mov
popf
sub
int3
insl
and
pop
repnz
rcl
out
add
sub
test
sti
jne
jge
out
inc
dec
icebp
or
sub
pusha
pop
movzbw
mov
lea
bswap
call
clc
pushf
cmp
cmp
pusha
call
push
lea
jne
bts
aaa
xor
add
aas
aam
das
mov
test
cmc
add
push
movb
pusha
lea
jmp
and
call
inc
inc
inc
dec
call
pop
push
imul
or
jecxz
push
dec
jmp
cmc
and
pop
imul
mov
pop
mov
jo
dec
jae
add
jbe
push
or
in
mov
xor
test
xor
pop
mov
out
inc
dec
cltd
pop
pop
bt
clc
cmp
pushf
pusha
pusha
pushf
lea
jae
push
bt
cmp
pushl
lea
jae
test
cmp
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
or
mov
mov
test
test
jl
mov
push
mov
in
cmc
scas
out
xor
ficoml
bound
sbb
dec
leave
std
lods
movsb
xor
std
jns
pop
in
repz
and
adc
jp
mov
insl
or
scas
fsub
loope
jmp
aaa
push
jl
cmpb
ret
ja
adc
xchg
cmpsl
sbb
lahf
xor
addr16
dec
shll
js
insb
push
dec
adc
add
or
push
or
or
sbb
dec
jle
mov
ja
inc
mov
mov
sub
out
sbb
movb
add
cli
push
xchg
xor
mov
pop
bound
pop
outsb
and
les
sahf
mov
lcall
and
and
scas
adc
in
out
inc
dec
aaa
shrl
sub
or
jmp
ret
add
mov
btr
bts
mov
movzbl
shld
mov
je
xor
push
test
repnz
call
lods
xlat
xor
ja
jno
jnp
lahf
popf
mov
fwait
or
testl
lcall
xchg
dec
xor
pop
push
pop
pop
xor
and
xchg
mov
enter
fsubr
ret
imul
orb
mov
loopne
scas
mov
cs
cmpsl
cmp
mov
lcall
in
cmpsb
orb
pop
inc
adc
imul
cmc
pop
jmp
dec
jmp
and
add
push
adc
add
cmp
test
add
pushf
dec
lea
jo
pusha
pusha
pushf
lea
jne
pusha
movsbw
clc
shld
mov
pushf
test
stc
cmp
lea
je
ja
not
lea
jmp
add
jmp
gs
das
sbb
cmp
add
sbb
cmp
xor
sub
insb
push
pop
scas
in
sub
insb
js
enter
outsb
pop
pop
and
and
ss
fisubl
dec
ficomps
scas
in
mov
test
pop
cmp
aam
adc
dec
fcomps
fsubl
xsha256
cmpsb
xchg
scas
inc
xchg
xor
sub
out
inc
push
jmp
cmp
les
dec
xchg
out
out
shlb
ss
test
dec
pusha
dec
pop
dec
fs
outsb
mov
leave
jnp
push
inc
mov
arpl
mov
mov
mov
or
loope
add
xchg
insl
outsl
ss
shrb
push
fsubrl
and
pop
dec
std
ljmp
sarl
repz
imul
cmp
cmp
mov
testl
std
ja
inc
icebp
pop
aad
mov
xchg
mov
popf
cmp
mov
cmpsl
cltd
mov
in
mov
idiv
or
test
add
cmp
cmp
leave
fsts
push
fcmovb
mov
lret
leave
fadds
jnp
popa
push
sub
or
mov
insb
bound
xor
rcl
ljmp
sbbb
int
shrl
in
and
push
leave
push
fldz
inc
push
in
add
fs
int3
jo
out
xor
fcmovbe
mov
loop
sub
or
xor
pop
dec
out
and
mov
inc
cld
adc
fsts
rorl
cmpsb
int3
out
cwtl
lcall
loopne
scas
sti
hlt
icebp
add
jnp
cmp
push
mov
sbb
push
push
clc
int3
fistpll
popf
or
loop
sbbl
mov
aaa
adc
inc
adc
dec
mov
out
mov
jmp
daa
jns
inc
push
inc
mov
stos
sti
stc
daa
movsl
sahf
xchg
into
adc
push
push
jle
dec
pop
push
push
push
pop
rclb
mov
sbb
cld
jbe
mov
rcrb
and
push
fstpt
in
fimull
pop
jnp
fwait
popa
popf
movsb
mov
icebp
jnp
cmovae
push
xor
leave
loope
aaa
ds
or
dec
bound
movsb
add
call
sbb
ljmp
jg
out
jns
dec
testl
popa
jmp
inc
push
sbb
fcompl
xchg
add
into
xchg
pushf
mov
jmp
cmp
pushf
call
pusha
jmp
gs
jl
clc
js
lret
mov
dec
sqrtps
arpl
popa
push
fstps
xchg
rcrl
addb
xor
dec
iret
mov
adc
xchg
mov
scas
in
jl
mov
outsb
and
je
movsl
mov
xchg
loope
in
jg
push
sub
add
xor
pop
pop
push
sbb
lds
jae
jno
mov
push
aam
cld
or
add
push
or
fisubrs
stos
mov
popf
push
popf
adc
and
leave
xor
pop
inc
sbb
adc
mov
xchg
pushf
scas
mov
mov
shll
push
loopne
cmp
fdiv
jmp
push
addb
cmp
lcall
mov
push
aaa
xchg
std
xor
sub
cmp
outsl
scas
shl
pop
cmpb
xchg
fiaddl
cltd
add
fisubl
push
pusha
insl
and
and
mov
sarb
cmp
jle
pop
call
scas
out
inc
push
js
scas
jge
push
dec
lock
mov
mov
pop
push
pop
insb
js,pt
pop
xorb
lock
mov
cld
test
aaa
popf
push
outsb
lods
sub
lcall
dec
into
stc
lea
xchg
pop
xchg
pushf
outsl
loop
xchg
lock
sbb
adc
lea
cmp
daa
loope
push
cmp
sbb
dec
jecxz
int3
rol
pop
mov
or
pushf
mov
in
test
or
sub
clc
push
call
push
ret
pushf
pusha
lea
jne
push
movl
pushl
stos
pushf
movb
pushf
lea
jmp
sbb
add
js
jo
mov
mov
call
sub
mov
pop
clc
mov
push
fstl
in
aam
hlt
sti
lods
mov
ss
sub
adc
add
mov
xlat
gs
adc
test
cmp
sub
ds
int3
andb
fildll
jo
inc
jg
or
ljmp
shlb
pop
mov
lock
sbb
add
and
call
cmp
inc
pushf
bt
pushf
clc
neg
cmc
test
clc
cmp
not
lea
lea
lahf
push
mov
mov
pushf
call
push
mov
bswap
call
cmpsl
test
jle
enter
es
xor
cmp
adc
add
cmp
aad
sbb
jb
lret
or
dec
inc
sti
mov
movsl
pop
mov
insl
js
out
js
mov
sbb
rolb
mov
aad
dec
loope
jecxz
in
pop
jecxz
fnstcw
insb
or
push
dec
adcb
ret
lds
mov
fidivl
add
add
mov
iret
xchg
xchg
jno
das
loope
fstpl
ja
xchg
inc
push
inc
lret
inc
cmp
mov
or
popa
arpl
xchg
stos
xchg
lahf
mov
iret
or
jbe
out
adc
xorb
or
aam
int3
and
mov
xlat
xor
inc
fcompl
cmpsb
fidivl
shll
lods
mov
sbb
fcmovne
cmpsl
add
les
ja
cmp
pop
adc
pop
cltd
xchg
mov
loop
adc
addl
ficoms
dec
fstl
dec
mov
outsl
std
out
inc
push
leave
dec
xor
dec
add
test
dec
push
jl
inc
divb
out
lret
rcr
adc
xchg
push
in
int3
mov
xlat
ret
push
sbb
mov
mov
mov
push
push
xchg
das
ja
mov
test
sti
cmp
lods
out
mov
insl
pop
xchg
lret
jg
scas
jns
pop
in
outsl
sub
fcoml
xchg
xor
push
push
fidivrs
mov
int3
sbb
loopne
repnz
cmc
pop
mov
and
ss
and
push
push
dec
fmull
xchg
sahf
xor
mov
hlt
lret
mov
push
cmp
push
pusha
jp
jp
mov
add
xchg
lea
jbe
mov
mov
stc
jge
lretw
outsb
les
divl
cmpsb
stos
mov
insl
add
cli
jp
mov
arpl
jo
sbb
inc
push
out
mov
jmp
dec
pop
cwtl
pop
mov
ret
popa
ja
movsl
mov
loopne
lods
push
jle
push
lock
enter
inc
push
sti
std
loope
jge
push
repz
mov
xchg
xchg
push
outsb
inc
out
push
xor
fsubrl
stos
cmp
sar
inc
outsb
decl
sub
jecxz
cmp
jp
cmpsl
cmpsl
sub
ja
movsb
jae
push
jl
mov
mov
xlat
fwait
shrb
xor
ret
popa
ret
mov
push
movsb
adc
lea
iret
icebp
aaa
lods
call
push
repz
inc
dec
xchg
adc
sub
cmpsb
pusha
rorb
insb
cli
out
inc
pop
les
xchg
mov
pop
and
or
sti
in
lret
jmp
lret
adc
imul
xchg
adc
fisttpl
cmp
jl
jbe
in
imul
cltd
mov
addr16
or
aas
xchg
push
add
xor
fildl
in
and
push
mov
xchg
sbb
inc
push
enter
adc
mov
and
adc
xlat
scas
inc
inc
imul
and
in
shll
lahf
sub
out
inc
pop
sbb
mov
jae
aas
gs
adc
cs
pop
pop
je
dec
outsb
pusha
inc
push
push
pop
or
cwtl
push
xchg
and
shrb
jmp
xor
stc
jge
out
ljmp
dec
pop
xor
cmpsb
test
mov
jae
popa
aas
adc
pop
pop
mov
lahf
xor
icebp
adc
jo
xor
or
sub
inc
pop
psubsw
xor
cmp
popf
decb
cmp
add
adc
cmp
in
shr
repnz
int3
jp
mov
sub
xor
and
pop
push
and
pushf
lcall
rcll
jl
inc
imul
push
xor
int
fildl
cmp
addr16
lcall
shlb
xchg
inc
sbb
sub
fisttps
jns
dec
out
out
out
inc
pop
push
ljmp
and
jmp
cmp
jae
fisttpl
jl
test
loope
xor
sbb
cmpsl
sub
adc
cli
ja
shl
push
sbb
jno
fistl
jle
sbb
adc
adc
mov
xchg
add
cwtl
xchg
mov
pop
push
int3
push
mov
or
inc
enter
in
stos
xchg
jp
mov
in
idivl
mov
sbb
movsb
out
imul
shl
lret
pop
jecxz
sub
push
push
rcrb
call
mov
mov
jb
nop
cs
fimuls
rorl
lcall
test
mov
test
scas
sub
push
or
and
cld
cmp
pushf
and
lods
adc
outsl
add
add
shl
loop
mov
test
loope
gs
cltd
adc
mov
mov
in
lea
pop
popf
add
add
mov
sbb
jbe
push
push
mov
jl
inc
adc
jne
add
notb
and
sahf
push
sub
inc
iret
jp
stos
jle
mov
inc
imul
and
sbb
dec
fcmovnb
jnp
addb
add
push
inc
rorl
call
xor
sbb
pop
jge
lret
stc
ds
mov
and
pop
outsb
sub
pop
dec
lods
nop
sub
cmpl
mov
mov
jbe
xchg
mov
pop
data16
jns
dec
jg
outsb
mov
inc
js
rolb
test
test
dec
inc
pop
shl
int
pop
in
jmp
bnd
fucom
in
in
push
jb
xlat
jge
mov
lar
pop
dec
pop
out
and
jge
push
aaa
gs
or
jb
popa
or
pop
sbb
push
and
sub
push
mov
xor
shrb
call
dec
int3
pop
repnz
mov
int
or
scas
xchg
in
std
jmp
adc
jmp
dec
sub
int
sub
mov
scas
shrl
ja
lods
lock
lcall
call
jmp
fistps
jl
jnp
popa
lcall
dec
fdivl
adc
aam
xchg
mov
xchg
push
xchg
lcall
inc
xor
fndisi(8087
cmc
out
lret
dec
stc
rcl
pop
insl
fistpl
push
cli
jnp
and
or
push
inc
jge
jns
xlat
rorb
dec
pop
push
mov
pop
adc
aam
les
push
and
sub
sub
pop
dec
les
addl
mov
icebp
ret
jns
and
hlt
jns
cmp
add
jle
push
inc
faddl
push
test
sub
mov
inc
leave
mov
dec
push
fidivrl
loop
sbb
jae
dec
ret
pop
ljmp
icebp
xor
out
pop
std
inc
scas
clc
inc
movsb
xchg
test
mov
mov
test
and
xor
xchg
fidivl
or
test
dec
std
or
mov
xor
jbe
push
inc
clc
js
mov
cmp
xchg
lret
inc
xchg
arpl
cmp
incb
mov
adc
cmc
mov
mov
xchg
dec
push
jle
pusha
int3
int3
mov
xchg
pop
jo
adc
scas
sbb
inc
cmc
mov
xor
orb
sub
jb
je
add
pop
and
js
xchg
xchg
sbb
sbb
mov
fbld
fcoms
leave
aad
icebp
jnp
cli
stc
mov
mov
icebp
dec
les
sbb
jl
dec
jg
fsubr
loope
jmp
inc
jbe
bnd
insb
cltd
sub
lods
mov
xchg
pop
test
xlat
in
pusha
loopne
loop
in
sbb
add
int
xor
mov
xchg
pop
sub
xchg
popf
and
pop
ficoms
jge
rcr
insb
lret
loop
in
ret
adc
cs
jmp
popa
ret
jg
cmp
into
lea
add
pop
jl
adc
mov
mov
push
dec
leave
inc
imulb
sub
push
sub
sbb
mov
jae
push
loopne
repz
ret
dec
std
or
jmp
jmp
imul
sub
in
pop
fimull
movb
and
xor
and
movsb
push
dec
xchg
and
push
dec
outsl
das
fiaddl
fxch
xchg
mov
pop
test
xchg
xorb
loopne
jge
jae
jbe
push
nop
stos
mov
jbe
jmp
mov
aaa
rorb
out
cmc
adc
jne
push
fistl
push
cltd
push
xor
jl
pop
scas
pop
pop
and
popaw
push
and
pop
insb
data16
data16
xor
push
pusha
push
lds
xorl
xor
sbb
stc
jae
jp
dec
cwtl
jl
xor
cmp
push
push
scas
or
dec
je
inc
or
xor
mov
mov
mov
call
lret
mov
inc
dec
mov
jl
push
dec
lock
mov
std
xchg
int3
rorl
int
pop
add
xor
lods
jno
fs
in
add
pop
stc
xchg
cmp
out
xor
imul
fldenv
nop
xor
sub
in
xor
push
jns
mov
enter
rcl
push
shlb
outsb
cwtl
sbb
push
add
dec
pusha
push
pop
inc
push
mov
mov
or
lret
stos
xor
add
adc
sti
in
iret
inc
test
stc
inc
adc
and
ja
xor
sbb
push
mov
mov
inc
xchg
iret
sub
outsl
jnp
sti
dec
icebp
push
jl
scas
fcmovne
pop
aam
add
cmp
xchg
push
cwtl
sub
repz
ljmp
enter
or
xor
xchg
push
out
cmc
dec
sbb
jecxz
imul
rorl
dec
push
jg
decl
push
push
cmpsl
sub
adc
adc
fsub
pop
lret
mov
loop
fadds
pop
shlb
inc
outsb
jl
je
jne
lret
mov
cmp
aas
test
inc
out
cli
sarb
test
or
sbb
data16
jo
stos
pop
lcall
push
mov
nop
mov
lock
cli
in
jecxz
arpl
in
outsb
mov
inc
push
inc
int
int3
jo
call
or
jo
stos
cld
call
sahf
shlb
dec
ret
jl
mov
jbe
push
ds
jl
push
movsl
cmp
sub
insb
and
cmp
mov
xchg
aaa
ret
pop
in
repz
sbb
inc
shll
rcll
pushf
fidivs
test
lcall
call
sub
test
xchg
lods
rclb
push
insb
cli
jb
inc
pop
movl
mov
or
jmp
inc
inc
sub
mov
push
cli
enter
and
mov
mov
pop
stos
repz
and
jg
movsl
sahf
mov
xor
into
std
idivl
or
lock
push
inc
pop
in
jmp
popf
sbb
add
scas
cld
stos
jb
cmp
rcr
out
and
pop
aam
imull
sahf
or
sbb
call
sub
out
rorb
enter
data16
insb
ds
ret
push
inc
jb
pop
add
in
out
sub
lea
sbb
inc
adc
dec
jae
push
aad
fidivl
add
mov
pusha
fadd
inc
data16
ljmp
aaa
nop
xlat
in
push
ficoms
push
cmp
cli
insb
fnstcw
ret
fnstsw
dec
and
cwtl
adc
add
mov
sahf
adc
dec
lods
dec
xor
and
iret
xchg
mov
jnp
pop
insb
fs
lret
jns
xor
inc
dec
lds
outsl
mov
pop
add
pusha
fs
shll
fsubrs
xlat
pop
loope
clc
cld
rcpps
scas
sbb
fucomip
rcrl
pop
pop
add
xchg
mov
or
or
in
cwtl
or
pushf
es
sub
scas
and
decl
push
out
repnz
pop
out
mov
jns
inc
movsb
jns
mov
adc
mov
sahf
and
dec
lods
notl
aam
and
mov
inc
or
in
cmp
mov
push
mov
mov
xor
lahf
mov
adc
xchg
pop
lods
idivl
sbbl
insb
data16
and
or
or
pop
ds
cmpsl
mov
jle
stos
push
arpl
xor
data16
push
mov
int3
orb
jle
inc
sbbl
push
loopne
sbb
jb
or
pop
repz
shl
test
outsb
cmp
adc
and
call
cltd
sbb
inc
int
sbb
xor
insl
dec
orb
nop
test
push
lods
jp
mov
cwtl
sbb
inc
fimull
pop
jae
mov
and
repnz
dec
movl
mov
mov
xchg
data16
test
mov
lods
mov
add
sub
or
push
mov
pushf
or
or
mov
mov
inc
dec
push
in
xchg
in
dec
push
fstpl
xchg
rolb
stos
or
imul
jnp
xor
push
jb
dec
lds
inc
fwait
mov
add
add
in
mov
cmp
je
test
bound
pop
add
stos
aas
and
adc
jo
pop
or
js
sub
cmp
es
xor
and
sahf
push
lods
sti
mov
or
testb
shlb
call
stos
mov
jg
mov
mov
das
pop
add
pop
push
in
inc
lcall
pop
fisubrs
jno
mov
lds
leave
cmp
inc
mov
mov
lods
cmp
sbb
jo
pop
dec
adc
sub
mov
fidivl
hlt
out
rcrb
inc
outsb
cld
xchg
xchg
pop
lods
iret
dec
inc
mov
sbb
mov
push
daa
test
inc
cmp
lret
mov
ret
orl
lcall
les
push
adcb
les
rcrb
gs
movsb
ret
fnstsw
dec
adc
mov
je
dec
sbb
fnsave
pop
pop
shrb
out
arpl
sub
popa
stos
sub
gs
mov
push
mov
data16
push
cli
sahf
adc
pop
fnstenv
shll
xchg
dec
cmp
test
cmpsb
sbb
aas
leave
dec
add
call
pop
std
fiadds
fists
pop
sub
leave
out
mov
mov
js
jns
inc
and
cmpsl
add
inc
out
leave
xchg
aaa
call
xchg
outsl
dec
push
clc
shlb
jo,pt
sbb
jbe
xor
adcb
fmul
push
inc
mulb
xchg
mov
jae
push
in
add
pop
mov
xchg
mov
xchg
sbb
enter
lcall
sbb
cmp
xor
pop
xor
loope
testl
xchg
rol
mov
and
sbb
adc
jo
filds
leave
leave
aaa
insl
jno
push
fildll
cmp
mov
or
out
jns
mov
or
add
mov
lret
imul
push
outsb
push
icebp
pop
cmp
mov
sti
imul
or
js
adc
xor
ss
pop
mov
hlt
rorl
lea
pop
inc
jno
or
pop
sbb
bound
outsl
mov
add
mov
inc
ror
fadd
push
mov
mov
xchg
in
jno
imul
idivl
outsb
out
or
gs
fwait
sub
test
dec
sahf
and
push
data16
xchg
push
or
sub
test
jecxz
jmp
mov
int3
aaa
movsl
xor
shlb
cltd
mov
dec
leave
pop
add
sbb
stos
out
pop
jecxz
push
insb
dec
dec
ret
mov
dec
les
cli
adc
lock
sbb
jno
cmc
jo
mov
mov
mov
xor
add
je
enter
rclb
pop
and
fcom
pop
out
mov
and
cmpsb
es
inc
lcall
in
das
cltd
mov
or
movsb
out
fistl
pop
out
in
push
pushf
clc
cmpb
jbe
dec
rcrb
pop
sbbl
bound
pusha
inc
mov
mov
push
lds
adc
push
call
aaa
rorl
push
test
sti
cltd
loop
cltd
mov
popa
ret
inc
aad
scas
pop
lock
mov
pop
ja
sub
xchg
mov
adc
mov
ret
jge
pop
ss
mov
inc
push
cli
adc
les
imul
mov
mov
inc
sbb
insl
imul
fildl
cmp
imul
clc
cmpsl
xchg
daa
xchg
adc
pop
pop
lret
jl
add
inc
sbb
std
cltd
cwtl
test
xor
mov
xchg
pop
pop
or
rdmsr
mov
cmp
adc
push
fsubrs
jns,pt
ja
lahf
mov
mov
por
rol
shrb
in
mov
adc
rorb
outsl
lock
loope
pushf
pop
sbb
mov
jnp
fadds
lea
adcl
pop
inc
iret
dec
std
cmpsl
outsl
js
adc
jle
cmp
jp
dec
jecxz
int3
nop
das
jo
hlt
insl
out
xchg
jns
enter
dec
or
inc
mov
stos
imul
mov
sbb
mov
sub
lods
push
inc
inc
xchg
int3
xchg
sub
xchg
ja
outsl
rorl
mov
enter
pop
out
jne
mov
cmpsb
add
jle
fcoml
leave
xor
adc
mov
scas
jnp
popa
jmp
loope
sub
addr16
or
mov
lods
adcl
sbb
push
fsts
xor
pop
jp
movsb
idiv
xchg
call
pushf
test
cmc
jo
sbb
outsb
xor
loop
jge
and
inc
push
ljmp
xor
xor
jmp
push
mov
mov
sub
test
jns
adc
jle
imul
sti
leave
jae
dec
out
aad
int
jecxz
fstl
mov
add
mov
into
out
js
sbb
xor
xchg
pop
clc
inc
pop
outsb
lahf
xor
xchg
icebp
popf
sbb
hlt
inc
out
adc
movsl
xor
mov
sbbb
fcomip
ret
jno
lds
jmp
add
fadds
hlt
jp
and
loopne
in
push
loopne
mov
sub
es
pusha
add
push
jo
cmpsb
andb
xor
add
jo
fdivs
and
xor
test
mov
imul
cwtl
in
in
stc
ret
jge
jp
inc
fnstenv
push
cmp
cmpsb
adc
es
and
inc
cmp
mov
xchg
mov
push
jge
mov
push
jecxz
pop
les
jne
sub
cwtl
insl
xlat
lea
orb
push
xchg
cld
ljmp
push
cmp
mov
mov
divb
pop
out
mov
in
scas
sbb
int
xchg
and
mov
or
shr
repz
jnp
stos
push
push
push
push
popf
mov
xchg
sub
jb
xor
and
adc
cltd
pop
jne
and
insl
xor
mov
ss
enter
iret
out
vmaskmovdqu
ja
xchg
jl
adc
mov
dec
or
mov
push
add
out
jo
lock
loopne
enter
xchg
xor
add
mov
sahf
mov
or
pop
dec
pop
into
dec
faddl
or
push
add
lods
push
pop
push
out
push
clc
inc
ret
or
push
dec
sahf
gs
cli
mov
mov
inc
ret
leave
inc
jmp
loope
xchg
xor
adc
pop
popf
lcall
fidivl
imul
xchg
xchg
cmpb
jns
icebp
fldt
lea
jle
cmp
push
dec
insb
or
rolb
and
rcrb
push
and
add
cmp
xchg
insl
jno
fildll
xchg
rcr
mov
scas
notb
std
ja
and
stc
in
rorl
mov
cmc
fld
gs
jbe
lds
add
or
add
push
sbb
add
fs
jmp
popa
out
mov
out
jg
pop
inc
sbb
stc
out
ret
jle
cmpb
adc
shll
ss
xor
adc
xorl
mov
mov
mov
repz
addr16
mov
sub
das
xor
xchg
mov
adc
mov
push
nop
insb
movsl
out
fsubl
fs
cmp
movb
pusha
jle
pop
rcrb
lods
push
or
jp
mov
iret
pop
mov
sub
cmp
test
sbb
mov
movsl
stc
fistps
sbb
lcall
rcrb
int3
push
mov
adc
mov
mov
out
insb
into
jb
fimull
xor
cmp
out
mov
fsubs
out
arpl
sbb
cmp
and
sbb
arpl
jge
aas
arpl
addr16
dec
push
movsl
mov
or
fdivl
lahf
rcrl
fistps
sti
dec
sbb
aas
xor
or
outsl
lahf
sbb
pop
xchg
lods
mov
lea
xchg
lods
filds
ret
xchg
ss
test
lretw
popl
push
out
mov
cmp
sbb
dec
sti
add
fucom
xchg
dec
push
inc
pop
cld
outsb
dec
pop
lret
mov
add
sbb
int
adc
and
dec
adc
std
sub
inc
push
in
popa
out
push
cli
lds
imul
cltd
and
xchg
push
scas
popf
and
adc
fsubs
mov
mov
into
movsl
sbb
sbb
add
cltd
in
push
jg
jle
pop
in
mov
inc
roll
adc
jge
pop
popf
fisttpll
adc
sbb
jl
dec
pop
int
fiaddl
addr16
or
adc
adc
push
jmp
sbb
pop
and
or
stos
decl
cmpsb
or
or
push
dec
mov
cwtl
lret
jno
cmpb
cmpsl
daa
dec
shrl
xchg
leave
xchg
out
data16
add
outsl
xchg
adcb
xchg
iret
jmp
mov
movsb
push
lcall
or
jge
imul
push
sbb
cmp
repnz
clc
mov
mov
mov
js
jb
dec
or
lret
dec
inc
sub
xor
inc
lret
push
movsb
push
adc
and
je
jg
dec
sbb
mov
aas
mov
loope
pop
mov
push
bound
and
cmc
jg
fs
adc
cmpsb
ret
and
xor
aaa
jo
imul
popa
loope
fcmovnu
xor
pop
mov
scas
adc
std
cmc
jns
inc
into
pop
loope
mov
subb
std
dec
notl
out
subb
xchg
sbb
jo
arpl
mov
inc
loop
int
and
fcompl
push
aaa
adc
aas
popf
sbb
sbb
push
mov
mov
push
pushf
jnp
adc
push
test
enter
push
cmp
cltd
sahf
fxch
push
fistpl
and
jnp
pusha
adc
mov
cmp
icebp
lret
pop
cli
mov
les
inc
rcll
pusha
mov
dec
mov
sub
mov
and
in
gs
les
out
fwait
cmp
pop
jno
stc
ja
movsb
dec
jg
lret
fildll
imul
divb
xor
xchg
fxch
testl
sub
cmp
test
into
leave
inc
push
xchg
outsl
jbe
xlat
jno
dec
dec
ret
push
sbb
loop
int
in
jbe
enter
iret
mov
dec
fistps
pop
ret
add
sub
rorl
mov
idivl
push
and
inc
ret
push
cmpsl
fs
mulb
push
xor
adc
stos
pushf
lea
and
into
cmp
push
leave
add
aad
fwait
jp
mov
add
addb
mov
mov
stos
cmpsl
mov
hlt
je
rcl
jecxz
or
insl
xor
ds
mov
cld
cmpsb
xchg
filds
stos
sbb
xchg
cmp
jle
add
inc
je
dec
dec
je
icebp
dec
enter
ret
inc
shl
cmp
jle
sub
mov
sti
aad
push
adc
push
jp
dec
es
inc
sbb
les
sarb
icebp
mov
mov
mov
mov
sti
mov
bound
jnp
pop
fdivr
jbe
int
jle
dec
jl
clc
js
in
stos
add
jns
outsb
cli
leave
ret
jno
clc
xchg
ret
clc
ret
jnp
mov
cmp
or
mov
jl
je
push
aam
loop
ja
push
rorb
cmp
mov
sbbl
sti
jne
stos
jbe
mov
sub
sbb
pop
xlat
inc
pop
sbb
xchg
lcall
ja
jle
shl
andl
pop
jo
lock
lret
xor
xor
cmp
mov
mov
sbb
pop
loop
add
xor
cmp
jl
scas
lods
arpl
pop
or
push
sbb
out
jmp
add
push
jno
mov
mov
add
stc
dec
pop
dec
fistl
or
aam
scas
lret
mov
xchg
mov
pop
je
pop
rorb
call
jo
call
jns
mov
inc
mov
iret
xchg
stos
loopne
sbb
mov
dec
test
pushf
es
out
push
call
mov
scas
and
subl
mov
mov
stos
jmp
popf
dec
push
jl
cld
inc
jns
daa
adc
mov
in
push
mov
or
sub
rorl
sub
sub
call
icebp
cmp
push
add
mov
out
js
in
jb
dec
shlb
pop
jbe
arpl
jl
or
sbb
xchg
jmp
ds
xor
iret
cld
lds
je
dec
cld
inc
cli
adc
jg
mov
cmp
out
stc
mov
movsb
sbb
pushf
pop
popa
movsb
and
sbb
adc
sbb
mov
adcl
movsl
adc
inc
je
inc
pop
mov
call
jmp
ljmp
push
std
add
dec
jl
mov
mov
or
nop
ja
push
out
xchg
mov
and
mov
shr
cs
cmp
pop
dec
push
xchg
lcall
xor
dec
fstpl
xchg
lahf
dec
push
pop
pop
insb
adc
call
mov
xor
jb
jbe
scas
or
cmp
or
inc
je
out
ljmp
in
es
or
cmp
and
cmp
add
adc
pushf
add
pushf
adc
sub
mov
mulb
in
cmp
hlt
inc
jb
inc
rclb
fwait
iret
sar
in
mov
je
adc
rcl
ret
jle
jl
loope
bound
dec
dec
es
rdtsc
xor
jnp
ja
pop
std
outsl
aad
int
shrl
sub
inc
jne
and
pushf
pusha
lea
jne
add
clc
bt
and
mov
pusha
rcl
pusha
pushf
sub
cmc
cmc
neg
lea
add
bt
stc
push
sub
bt
pushf
cmc
jmp
cmp
push
push
clc
ret
test
mov
ret
sub
cmp
test
mov
es
aad
inc
repnz
in
rcrl
dec
loop
jecxz
and
dec
ja
pop
jns
sub
outsb
sub
xor
jb
dec
stc
je
push
syscall
rcrl
dec
leave
jae
push
shll
jne
mov
add
mov
lret
lcall
cmp
dec
and
es
or
sbb
loopne
cmp
sbb
stc
scas
arpl
fcoms
push
addb
sbb
mov
lods
ss
pusha
imul
jp
push
jg
or
jmp
pop
and
lods
les
xor
movsb
add
rorb
mov
lods
xchg
mov
or
inc
je
push
es
and
jbe
cs
clc
pushf
cmp
lea
jnp
ja
stc
jmp
shlb
mov
jmp
out
stc
adc
adc
xlat
jnp
stos
movl
push
shll
pop
cmp
dec
push
repz
push
dec
enter
push
xlat
dec
int
mov
sub
xchg
xchg
mov
ds
in
push
dec
add
lcall
inc
es
fstpt
push
adc
rcpps
addb
inc
iret
lods
mov
mov
call
xchg
bound
leave
arpl
jae
addr16
aad
cmp
push
inc
push
dec
dec
dec
dec
inc
push
cs
insb
add
cld
out
data16
addr16
jle
pop
and
repz
xchg
repz
mov
imul
and
lods
sahf
adc
fistl
jl
inc
outsl
mov
aam
incb
je
mov
shlb
filds
or
stos
arpl
inc
clc
jmp
cmp
jo
das
test
adc
movsl
mov
jo
mov
or
mov
dec
dec
ret
popa
xor
xchg
jne
lahf
xor
mov
sub
cmp
clc
test
pusha
push
push
call
sub
push
pushl
popl
jae
stc
clc
cmp
jmp
push
sub
repnz
cmpsl
lods
mov
scas
lods
mov
cwtl
bound
lret
sub
scas
xchg
pop
adc
sbb
xchg
adc
aad
or
loop
or
cmp
xchg
lahf
mov
inc
sarb
rcr
push
mov
je
out
adc
mov
inc
iret
subb
mul
mov
mov
add
cmp
imul
push
inc
jo
pusha
cmc
mov
inc
aaa
es
popf
pmulhw
xchg
or
pop
mov
out
inc
ja
test
movw
call
mov
enter
mov
cld
adcb
push
js
je
cmp
lock
cltd
das
xchg
push
in
je
hlt
dec
daa
fimuls
dec
dec
dec
mov
fs
push
repnz
aas
imul
inc
pop
hlt
add
divb
shl
mov
imul
add
pop
or
mov
hlt
ror
push
fadd
push
ret
mov
pop
test
mov
lret
fs
push
mov
out
inc
jns
and
jmp
fcoms
pop
pop
sub
pop
push
dec
loope
xor
add
push
sub
lea
mov
and
cmp
jge
xor
and
dec
out
bound
inc
push
add
jecxz
icebp
adc
xlat
in
dec
push
cwtl
std
and
push
adc
imul
inc
repz
test
leave
cli
adc
js
je
fs
jo
push
out
inc
jns
xor
gs
mov
in
push
inc
pop
imul
mov
cmpl
scas
xorb
lea
rclb
sbb
movsb
out
sub
adc
stc
jmp
cwtl
into
fidivs
sub
cmc
insl
fcomps
inc
or
fmuls
inc
mov
mov
push
sbb
xchg
pop
btrl
and
lret
mov
mov
sub
adc
push
repnz
push
movsb
es
inc
jp
or
shlb
fs
jb
cmc
bt
cmp
cmp
push
push
push
push
lea
jae
neg
mov
btr
xadd
pushf
movl
mov
bswap
movsbw
neg
sub
js
mov
stc
call
rcrl
dec
cltd
loope
in
iret
movsl
jmp
sti
jmp
mov
jae
mov
imul
insb
jo
cltd
xchg
sbb
pop
xlat
mov
adc
add
add
mov
sahf
into
sub
je
bound
inc
stos
fdivrs
pop
xorl
shlb
gs
movsb
mov
lods
mov
in
in
cmc
push
fldenv
jg
arpl
inc
jnp
imul
push
add
mov
mov
int3
into
fdiv
int3
or
clc
dec
call
aas
mov
cmp
sub
mov
mov
ljmp
lock
sub
test
fnstcw
push
lret
push
push
pop
imul
sbb
out
mov
xchg
ret
subl
sub
jns
pop
hlt
ficompl
jb
xor
icebp
aas
xchg
add
imul
inc
jnp
ffreep
ljmp
jne
push
sub
xor
xlat
xchg
xlat
std
fstpt
cwtl
or
popa
sti
sub
jge
mov
xor
push
popf
test
cmp
cltd
adc
pop
inc
push
or
andb
gs
imul
jp
push
push
dec
enter
movsb
xor
stc
mov
xor
test
inc
mov
in
nop
movsb
pop
rorb
dec
add
shl
inc
js
jo
push
loop
out
loopne
test
out
inc
jl
pop
sbb
xor
push
rcpps
sbb
sbb
xor
int3
sahf
fcomp
cld
fisubrl
sub
call
mov
and
in
jno
js
xchg
and
sub
jo
xchg
or
jb,pt
push
inc
ja
jne
scas
cmp
jmp
mov
aaa
mov
jl
mov
loop
mov
jno
jge
imul
test
out
inc
jl
in
stos
cmc
frstor
sbb
sub
and
add
sbb
lock
sahf
push
fiadds
or
cmpb
out
loopne
xor
repz
lods
jmp
lods
iret
clc
lods
cmp
push
sti
mov
push
out
sbb
xor
or
shlb
lods
ds
outsb
dec
inc
pop
leave
xchg
std
push
in
imul
cmpsl
sbb
mov
lods
dec
arpl
outsb
and
sub
shl
hlt
into
call
mov
pop
jnp
cld
dec
loopne
int3
dec
loopne
mov
stos
xchg
jae
adc
hlt
mov
adc
add
mov
jge
inc
stc
cmpsl
sbb
jge
pop
and
xchg
mov
or
lret
leave
out
out
jecxz
rcr
lret
imul
sbb
std
jbe
mov
mov
jae
ret
inc
xchg
and
loope
fidivs
enter
jo
push
mov
xchg
pushf
fcomps
imul
cmc
test
sub
mov
in
sbb
jl
cmc
in
lcall
in
rol
bound
movsb
add
icebp
inc
dec
jbe
leave
shl
jg
xchg
xor
xchg
adc
jle
push
data16
push
pop
sahf
lods
mov
cmp
sub
cmp
mov
ja
imul
mov
pop
adc
adc
into
fs
sub
sub
mov
xchg
mov
mov
cmp
fwait
adc
rol
movsb
push
and
dec
test
add
int3
mov
mov
mov
cltd
sub
push
inc
sub
movsb
subb
fucompp
rep
dec
jmp
pop
pop
fwait
test
je
xor
outsl
jno
inc
lret
push
fistps
rorl
cltd
xor
psubsw
call
jp
ja
filds
pop
decb
out
fcos
sub
cmp
push
cmc
push
test
into
dec
out
inc
mov
mov
in
push
mov
jbe
stos
out
int3
hlt
cmc
in
loope
cmp
and
out
dec
adc
mov
js
pop
push
lret
gs
inc
inc
bound
jno
stc
push
ljmp
push
ss
int
test
cwtl
jo
cli
inc
scas
pusha
into
push
fisubs
loop
ficoms
jg
jge
push
jle
push
lock
ljmp
lock
ljmp
popa
sti
out
push
or
cmp
push
mov
mov
enter
es
lret
lcall
in
ds
incl
lcall
mov
rol
lods
and
repnz
cmp
inc
insl
jb
push
dec
dec
ret
mov
int3
dec
loop
jbe
dec
sbb
inc
loope
cmc
pop
loope
icebp
imul
out
inc
jg
mov
pushf
mov
push
pushf
pusha
lea
jmp
ds
and
add
add
push
pop
sub
add
add
adc
add
inc
xor
add
add
add
add
add
idivb
add
add
rcrb
add
ljmp
add
add
add
add
nop
sub
add
add
movsb
addr16
add
add
add
add
addb
add
or
add
stos
stos
cmp
add
add
push
lock
add
add
add
and
push
xlat
cmp
and
add
mov
cmp
add
add
add
add
pop
dec
ljmp
loop
lret
lret
fdivr
int3
pop
rcrb
lret
dec
in
lods
jge
mov
add
jae
pop
xchg
mov
xchg
mov
test
inc
in
and
cmp
add
mov
xchg
mov
mov
sbb
les
inc
adc
jmp
ja
pop
in
icebp
jnp
dec
mov
inc
xorb
sub
jge
dec
inc
popa
jae
pop
cmp
jg
repz
sub
sbb
inc
push
gs
cwtl
push
ret
inc
out
daa
sbb
lret
sti
gs
inc
or
or
repz
or
dec
mov
ja
jg
mov
xchg
adc
or
pop
jmp
cmp
mov
ss
add
ret
cwtl
cmpsb
sbb
mov
push
add
cmp
xor
int3
in
pop
jmp
push
dec
or
mov
jo
fmulp
fsubs
test
mov
vmptrld
enter
scas
and
movsb
mov
dec
out
shlb
pop
sbb
adc
ss
xlat
lods
jl
fcom
inc
or
or
out
inc
subl
add
in
imul
inc
cmp
jne
dec
outsl
popa
imul
stos
addl
fnstenv
ret
repnz
cmp
clc
js
push
mov
xor
aad
sub
addr16
mov
ds
int3
adc
sub
js
call
jbe
aam
push
dec
xor
jns
dec
or
dec
cli
inc
inc
insb
ja
mov
mov
and
xchg
mov
pop
adc
movsb
mov
mov
into
push
out
push
out
inc
sub
dec
jmp
cmp
pushf
call
les
pop
cmp
stos
in
faddp
out
cmp
sbb
sub
call
or
jmp
cmp
inc
mov
mov
add
inc
fsubl
xchg
nop
lods
sbb
es
jb
xchg
mov
out
pushw
rorl
fiaddl
popf
rcrl
fdiv
mov
repnz
xchg
xor
dec
mov
push
out
mov
add
aam
hlt
push
in
clc
pop
loopne
inc
subl
xorb
or
mov
loope
stc
sti
icebp
out
jmp
sbb
cmp
xchg
sub
inc
in
mov
dec
call
sahf
jmp
mov
notb
adc
scas
test
cmp
push
movsb
and
xchg
xor
xchg
fcomi
popf
cmp
insb
shrb
xchg
mov
mov
pop
scas
icebp
movsl
mov
jo
mov
push
rclb
clc
movsb
mov
or
orb
inc
sbbl
iret
mov
dec
arpl
gs
imul
sub
inc
adc
sbb
nop
ss
sahf
jb
les
inc
mov
out
sahf
repz
adc
and
add
cmpsb
ret
jecxz
jle
pushf
movsb
imull
mov
lods
add
pop
pop
dec
out
jl
scas
mov
inc
cld
dec
in
outsb
in
aam
clc
pop
cld
outsb
out
inc
test
and
jae
clc
jmp
lea
jb
call
mov
add
popa
cs
in
lock
int3
push
call
mov
jmp
xor
loope
dec
mov
push
mov
nopl
and
jle
mov
adcb
dec
rolb
add
inc
push
mov
test
mov
shll
dec
pop
add
sbb
mov
clc
xor
push
ret
inc
imul
add
in
cs
std
push
out
jae
js
mov
xor
aam
int3
jp
jb
inc
test
test
and
sbb
or
push
ljmp
outsl
dec
jae
aaa
jno
inc
push
rcll
clc
lsl
icebp
out
mov
je
je
leave
jno
mov
jg
push
and
mov
std
cld
sbb
xor
xor
mov
test
stc
imul
push
inc
push
shr
inc
mov
fildl
push
jno
or
mov
mov
xchg
shlb
call
xchg
and
sub
inc
test
jae
add
jnp
decb
push
sub
and
mov
xchg
popf
mov
dec
rol
movsb
mov
push
movsb
add
es
cmp
popa
sub
push
inc
sub
mov
incb
mov
insl
sarl
jns
inc
test
mov
xor
call
dec
bound
cld
fidivrs
push
jge
inc
pop
insl
pop
jns
push
ja
out
cs
jbe
pop
fisubl
xchg
or
out
sbb
je
cmc
dec
inc
push
cmp
jp
and
ja
cmc
inc
push
add
fbstp
xlat
push
jl
sub
sarl
stos
cld
loopne
pop
inc
adc
divb
testb
xchg
iret
movsl
int
outsb
pushf
mov
ss
xor
cmc
cltd
aad
fbld
loope
lds
mov
push
mov
inc
daa
lea
mov
es
inc
les
icebp
dec
lds
push
icebp
jnp
mov
cmp
inc
xchg
pop
jb
xchg
cmp
rcpps
push
sub
and
cmp
add
cmp
mov
call
xorb
pop
int3
loop
xor
cvtdq2ps
aad
pushl
mov
mull
push
pop
repnz
mov
dec
popf
sub
cltd
ret
xchg
outsb
push
add
pop
mov
mov
mov
xchg
add
cmp
xchg
pushf
inc
dec
push
jmp
sub
add
pushl
mov
push
pusha
pushf
pushf
lea
jmp
lea
je
jmp
pusha
setle
mov
push
pushf
mov
push
mov
movzbw
pop
pushf
pushl
ret
jmp
pushf
cli
in
incb
je
icebp
repnz
test
enter
enter
es
imul
mov
in
divl
lods
push
sub
scas
out
mov
inc
pop
jbe
adc
je
aas
cs
mov
in
sti
mov
movsl
cmp
sbb
inc
jmp
js
cld
fs
push
pop
mov
adc
xchg
ja
or
movsb
and
and
clc
jbe
inc
mov
mov
cmpsb
add
repnz
lcall
mov
add
and
jne
loopne
jo
mov
add
inc
int
shl
repz
int
sub
insb
push
xorl
mov
arpl
jno
les
test
inc
pop
xchg
int
inc
mov
lret
push
xor
mov
or
inc
dec
sbb
lcall
popa
mov
sub
out
lret
or
mov
test
jl
inc
push
cli
push
loop
inc
mov
repnz
jle
sub
test
lods
adc
push
jp
bound
jb
mov
add
dec
pop
mov
mov
insl
in
push
rorl
mov
dec
aad
aam
inc
test
push
stos
in
negb
insb
push
out
insb
sbb
pop
mov
dec
mov
sub
insl
jne
xchg
call
cmp
loopne
enter
fs
mov
push
push
ret
fistl
ja
xchg
mov
cmp
movsl
sbb
lds
repz
inc
ja
jecxz
aas
into
sub
movsl
mov
sub
mov
in
js
jl
sbb
pop
pop
jmp
stos
mov
insl
xlat
mov
or
dec
push
icebp
loopne
sbb
pusha
nop
cltd
inc
lahf
mov
sub
mov
lea
jnp
ja
hlt
pop
adc
frstor
sub
lods
popa
rorl
and
mov
out
mov
inc
ret
push
loope
cli
mov
mov
lock
fisttpl
into
inc
mov
push
push
test
jno
mov
outsb
inc
sub
hlt
scas
adc
pop
dec
repz
sub
jae
xchg
pop
icebp
mov
orb
add
lods
add
dec
cld
fiaddl
and
clc
ds
jge
fists
lock
mov
cli
dec
cli
cwtl
ds
xchg
sub
push
pop
cmc
movsb
mov
push
shll
insl
fldt
aad
adc
mov
xchg
sub
sub
loopne
js
js
lret
into
mov
mov
sbbb
or
lahf
mov
xlat
lods
mov
rcrb
mov
mov
js
pop
cli
in
fcoms
fcoms
mov
cli
mov
movsb
jg
inc
and
into
insb
xchg
popf
mov
mov
mov
jne
lret
pop
inc
loop
stos
adc
lahf
test
mov
push
xchg
fcmovnu
pop
pop
int3
data16
mov
sub
mov
ljmp
push
adc
jbe
sbb
sbb
add
and
cmp
adc
xor
mov
dec
adc
mov
mov
test
call
neg
es
test
or
jae
mov
mov
or
or
adc
mov
jmp
daa
add
or
push
iret
sbb
fbstp
xchg
mov
dec
clc
jmp
addr16
jecxz
and
aad
int
fnstcw
pop
fstps
cmc
pop
imul
lea
ja
cmc
jl
pusha
imul
pusha
cmp
jmp
push
not
cmpsl
call
daa
popa
inc
push
push
imul
sarb
frstor
pop
mov
adc
in
or
dec
iret
dec
and
mov
mov
dec
push
mov
or
out
inc
mov
xchg
movb
pusha
movb
pop
pusha
lea
mov
mov
mov
movsbw
lea
movb
mov
call
movw
lea
jne
cmp
rol
shr
mov
cmc
not
bsf
sub
sbb
mov
pushf
clc
clc
sub
pushf
test
call
stos
mov
mov
fld
leave
mul
leave
jmp
popa
aaa
js
mov
movsb
lods
jle
mov
and
adc
mov
add
mov
lret
test
imul
ret
test
xor
jmp
imul
sar
pop
sti
mov
mov
or
ret
push
push
in
jo
inc
sbb
mov
mov
test
sbb
mov
mov
or
movzbl
jmp
push
stc
call
adc
movb
pushf
mov
pushl
ret
stc
pusha
or
pushf
jmp
pop
sub
rcrb
inc
push
sub
push
push
inc
bound
cmpsb
cwtl
xor
inc
pusha
cmpsl
ja
mov
clc
mov
inc
outsb
inc
and
lahf
xchg
clc
aam
out
loop
add
cmp
cs
sub
inc
mov
dec
stos
push
test
cld
mov
sub
sar
out
push
ljmp
js
inc
lea
fincstp
cmpsl
test
or
aaa
sbb
add
outsl
sub
sub
and
add
mov
scas
mov
clc
xor
pop
enter
mov
loope
and
popf
lds
jp
lds
or
sub
and
outsb
shlb
pop
loop
mov
js
mov
pop
loopne
in
cltd
aas
movsb
nop
push
push
cltd
lea
cmpsl
test
loope
test
mov
dec
jnp
pop
cli
lock
jbe
pushf
xor
jmp
fstpt
jno
push
xlat
pop
out
inc
mov
push
shll
jge
hlt
loop
cli
aam
int3
in
repnz
dec
rcll
jg
push
fidivs
mov
scas
adc
jge
adc
mov
jl
orl
push
pop
imul
sub
orl
push
pop
fcompl
aam
fmuls
sahf
sbb
sub
sbb
inc
mov
call
xor
popf
cmp
rcl
fucomip
jmp
roll
pop
in
cmpsl
sbb
xor
int3
mov
movsb
push
inc
rorl
push
jle
test
lret
cld
mov
pop
ss
popf
mov
mov
cmp
adc
push
addr16
imul
add
lods
ds
jmp
lret
push
sti
inc
ret
adc
lret
dec
jecxz
out
inc
push
stos
mov
fs
repnz
mov
pop
sbb
and
je
adc
or
xor
adc
add
dec
call
fisttpll
mov
push
lcall
movsb
push
mov
out
and
es
pop
cwtl
loop
jmp
stos
in
repz
dec
rcrl
orl
pop
push
lock
lds
test
dec
mov
or
rcll
fistpl
rcrb
cmp
push
hlt
xorb
push
ss
fwait
test
ret
imul
movsl
sub
sub
push
shr
call
mov
or
push
dec
xchg
aaa
xchg
xor
and
push
out
inc
popa
lahf
lods
cmp
add
movb
lea
jmp
call
sete
push
mov
lea
call
repz
jg
mov
mov
loope
push
or
and
int3
bnd
mov
test
rolb
jge
cmp
cmp
pop
ficoml
fcompl
rolb
jnp
pop
lret
imul
add
inc
or
lea
out
cltd
mov
push
xchg
test
sub
sub
push
inc
fs
in
jle
pop
inc
mov
mov
mov
and
fs
ficomps
ds
push
pop
incb
js
dec
cli
out
inc
nop
sub
pusha
movl
lea
je
cmp
xor
shld
sub
shld
rcr
mov
aad
mov
call
lea
ja
setp
jmp
mov
pusha
lea
je
clc
test
sub
test
push
pusha
movb
cmp
lea
jl
pusha
mov
pushl
lea
ja
pusha
imul
cmc
add
push
pusha
pushf
pushf
lea
jmp
add
add
mov
xorl
mov
add
pop
adc
leave
out
push
cmp
stos
and
xchg
and
xor
in
in
loopne
nop
mov
mov
mov
lds
pop
divb
and
bound
fisubl
cmpsl
sbb
nop
sub
or
cli
push
out
inc
xchg
pop
loop
pusha
lea
jb
bt
cmp
cmp
cmp
pusha
pushf
jmp
lea
jne
neg
not
test
mov
call
jae
test
stc
call
mov
sarl
adc
movq
imul
xchg
or
and
loope,pt
inc
or
lock
push
pop
mov
push
bound
add
popa
bound
mov
push
out
out
inc
push
sub
ret
xchg
outsb
addr16
pop
add
xor
stc
mov
jp
sbb
cmp
in
sahf
fadds
jp
push
movsb
fsubrs
jle
out
inc
xchg
cld
cld
call
push
jmp
movl
push
pusha
jmp
lea
jne
jmp
add
pushf
pusha
push
movb
lea
jmp
neg
cwtl
sbb
rcl
imul
int
mov
fstl
ficomps
mov
or
mov
mov
lahf
enter
insl
jge
aad
testl
mov
xchg
ja
subb
push
mov
loop
xchg
push
and
cmp
push
jecxz
in
repz
dec
mov
aad
loope
shll
icebp
scas
cmp
inc
xchg
mov
mov
movb
call
cld
xlat
cmc
roll
mov
xchg
xchg
mov
dec
arpl
jno
dec
pop
rorl
imul
push
addr16
mov
cmp
orl
je
and
or
in
into
pop
xchg
xor
jp
mov
int3
xorb
xchg
xchg
aam
push
push
cwtl
scas
aaa
mov
mov
jge
nop
sbb
mov
fcomi
int3
xchg
or
dec
jae
mov
ret
popf
aas
movsl
jle
push
fsubl
bound
movsl
adc
sahf
aas
xor
and
test
inc
xchg
insl
mov
inc
aam
cwtl
out
mov
dec
pop
dec
nop
xchg
movsb
lcall
jecxz
in
sbb
rcr
jg
addr16
nop
adcb
dec
jmp
pop
sub
sti
mov
push
fwait
mov
outsl
dec
adc
fistpl
add
stos
xchg
and
movsl
rol
xchg
shr
arpl
aaa
cmp
negl
dec
test
sbb
or
sbb
sbb
mov
lahf
sbb
xlat
fwait
adc
mov
cwtl
sub
jmp
out
push
mov
sub
aaa
xchg
iret
inc
fisttps
inc
fucomip
inc
xchg
push
repnz
dec
std
push
mov
movsl
mov
mov
sbb
rcl
push
in
sbb
mul
push
pop
xor
scas
test
dec
add
push
jg
out
mov
shrb
inc
loope
mov
test
jne
std
aam
lcall
jae
dec
mov
sahf
das
cmp
addr16
xchg
movl
cltd
aaa
mov
test
sub
inc
xchg
lahf
and
inc
and
cmp
clc
cmp
stc
cmp
pushf
push
call
dec
dec
pop
inc
testb
aaa
movsl
sar
in
mov
out
cli
int3
into
in
rclb
sbb
les
out
test
ficoml
pop
repnz
jmp
adc
mov
adc
ja
fsub
mov
repnz
push
or
fcmovne
or
sub
js
notl
and
iret
or
icebp
sbb
insl
sti
sbb
dec
push
addr16
cmpsb
xchg
hlt
stos
sbb
divb
mov
movsl
xor
ss
and
mov
stos
cmp
add
test
jbe
clc
js
jbe
mov
pop
cltd
add
fildll
jne
jne
inc
xchg
pushf
and
mov
sbb
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
cmp
adc
xchg
incl
pop
jb
push
inc
inc
dec
pusha
push
mov
data16
adcb
sbb
stos
cmc
mov
xchg
mov
push
jge
out
stos
lock
mov
mov
dec
inc
jnp
cmp
xchg
rcll
aas
xchg
push
mov
cmp
xor
sub
or
out
or
pop
inc
pop
test
cmp
sbb
inc
xchg
and
lcall
sub
fwait
movsl
popl
mov
xchg
mov
xchg
ret
cmc
test
xchg
int
mov
push
pop
outsl
aad
lods
push
or
fldl2e
aam
and
cmp
adc
shrb
mov
fwait
or
clc
dec
xlat
lds
es
adc
pop
lcall
xchg
je
mov
jnp
mov
and
adc
sub
cmp
mov
mov
jl
outsl
adc
les
mov
scas
and
fistpl
clc
lret
dec
jnp
xchg
cmpsl
fcmovne
or
repz
aam
loop
pop
pop
mov
loop
jmp
repz
leave
jge
mov
mov
in
int3
xchg
xor
inc
xchg
inc
xchg
cs
in
bswap
lea
pop
push
movb
pusha
pushl
ret
jle,pn
pop
enter
cltd
popf
fcmove
loop
scas
call
push
and
mov
dec
sti
xchg
movsl
xchg
pop
stos
cmpsl
test
test
mov
dec
push
pusha
enter
insl
mov
push
push
jbe
cmp
mov
iret
clc
mov
sub
pop
sub
add
aam
mov
pxor
xor
xor
xchg
and
imul
jg
out
pushl
push
pushf
sub
mov
call
mov
mov
mov
pop
out
ret
cwtl
icebp
ja
stc
mov
mov
sbb
mov
jne
adc
adc
jnp
mov
jge
and
add
xor
cltd
xchg
add
ret
fwait
scas
inc
adc
xor
jns
dec
int
es
loop
xchg
inc
lds
mov
in
mov
dec
add
mov
push
scas
scas
mov
lcall
dec
pop
jnp
gs
scas
pop
repnz
and
push
cmpsb
or
and
cwtl
ds
dec
adc
jge
repz
ret
mov
pushf
stos
mov
cmp
pop
lea
rorb
sbb
and
cltd
lea
pop
lods
sub
mov
push
movsb
addl
sbb
sbb
or
or
sub
aas
pop
shlb
adc
sbb
nop
push
icebp
repnz
mov
or
cmp
fisubl
insl
jmp
sub
pop
int3
push
out
in
into
int3
shr
fdivrp
rorb
add
sbb
ljmp
push
jecxz
fwait
xor
xchg
fstps
push
xlat
in
xchg
mov
clc
push
cmc
lahf
rcll
push
adc
mov
loope
cmc
sub
xchg
lcall
das
pop
mov
xor
gs
push
jmp
jecxz
out
inc
cltd
push
cmpsl
mov
add
or
dec
loope
scas
movsb
mov
dec
js
pusha
shrb
mov
hlt
loopne
xor
mov
dec
or
leave
aam
mov
imul
or
test
inc
mov
mov
lea
rcl
ret
cmpsl
sbb
push
mul
rcll
or
mov
mov
pop
inc
mov
int3
ljmp
sub
jae
jae
inc
cmc
out
inc
lcall
sub
call
sti
sar
aam
fldt
cmp
cmp
jecxz
jmp
push
jecxz
arpl
cmpb
cmpsb
lahf
xchg
cwtl
outsl
jnp
cwtl
inc
pop
mov
pop
dec
pop
or
sti
outsb
mov
or
movb
bound
bound
pop
movsb
lcall
mov
pushf
or
mov
ficomps
inc
mov
jbe
pusha
cli
pop
out
dec
ljmp
dec
out
inc
lcall
mov
add
mov
in
clc
clc
xor
stc
rol
jmp
push
bound
pop
lods
mov
fucomip
xor
push
adc
daa
xor
lahf
mov
add
mov
mov
pop
push
or
dec
jmp
lret
loopne
sbb
mov
inc
ljmp
xorb
inc
fwait
loope
sub
xlat
pop
into
std
and
jnp
push
inc
imul
jno
fnsave
and
in
daa
rorb
mov
xor
mov
fldt
js
xlat
loopne
fwait
cmp
pop
inc
rcl
sub
jg
pop
aaa
outsl
push
aaa
lods
fsubr
ficoms
mov
mov
in
cltd
arpl
xor
in
int
ja
inc
jle
xlat
in
std
jg
pop
flds
jg
dec
stc
push
out
inc
fwait
pop
cltd
stos
pushf
call
lea
jne
add
cwtl
xor
add
shld
bsf
mov
cmc
pushf
cmc
jmp
das
jg
push
jmp
lods
in
dec
or
adc
or
cmp
cltd
daa
lcall
add
xor
or
adc
xor
cmp
data16
and
jnp
out
or
dec
cwtl
test
fsubrs
sub
ja
lahf
ljmp
nop
lcall
insb
pusha
push
jl
dec
inc
and
mov
push
test
arpl
inc
sbb
mov
cwtl
or
dec
fs
inc
pushf
xor
outsb
cld
cmpsb
jb
cmp
cmp
add
add
int3
mov
inc
fimuls
sub
mov
outsl
hlt
dec
jmp
outsl
jg
mov
dec
daa
imul
dec
xchg
ss
jg
dec
push
dec
pop
lods
dec
pop
adc
mov
pusha
jp
sub
and
or
lret
xchg
out
inc
popf
mov
cwtl
ljmp
pop
das
xchg
fwait
cltd
lahf
pop
ja
push
inc
jae
pop
mov
fsub
arpl
mov
sub
dec
out
xchg
sub
cmp
mov
mov
pushf
mov
jbe
repnz
insl
ja
cmp
sub
je
mov
sub
cmp
out
dec
jp
or
and
sarb
cli
xor
pop
rcrl
cltd
fnsave
xor
inc
cmp
mov
out
or
mov
out
fdivrp
mov
fwait
and
push
push
lods
stos
insl
or
inc
iret
lea
push
imull
rorl
cwtl
test
xchg
push
mov
ss
inc
popf
push
mov
push
xchg
cmpsl
rolb
sub
cmp
and
sub
xor
js
addb
repz
mov
pop
mov
mov
dec
rcrl
mov
dec
fisubl
bound
pushf
xchg
sbb
adc
sub
sub
inc
sahf
les
addr16
xchg
push
ja
ret
mov
dec
out
loope
adc
mov
inc
divl
lock
lahf
lods
xchg
lods
cli
mov
insl
jge
in
std
mov
dec
test
mov
test
push
fldl
adc
aas
cltd
lret
popf
int
fistpll
jecxz
jnp
lods
sbb
sbb
adcb
jmp
std
mov
sub
data16
sbb
mov
dec
jmp
fsubs
push
mov
add
xor
or
xor
and
out
inc
sahf
mov
lahf
lods
mov
aas
mov
mov
xchg
mov
xchg
andl
push
mov
push
push
test
dec
push
add
pop
iret
pop
adc
pop
jnp
ret
fiadds
mov
xor
aad
test
ror
in
clc
inc
ja
push
sbb
test
push
mov
std
xlat
mull
neg
xor
push
outsb
shrb
jle
push
les
inc
lahf
jle
inc
add
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
loop
pop
sub
call
add
pusha
cmp
call
enter
testb
ret
mov
mov
mov
xor
and
cwtl
inc
mov
inc
clc
clc
fsubrs
icebp
inc
dec
and
out
in
inc
int3
bound
dec
out
stos
sbb
jmp
inc
or
fiadds
add
xchg
or
adc
out
loopne
movsl
daa
popf
fisttps
pop
xchg
mov
jl
roll
dec
leave
arpl
ja
inc
sbb
sbb
and
lock
rorb
lahf
jns
xchg
pushf
pushf
pushf
lea
jne
sub
bts
mov
pushf
pushf
cmp
jmp
mov
xor
mov
mov
mov
test
aad
imulb
jmpw
or
jns
sbb
out
push
dec
out
data16
jns
clc
add
mov
lahf
pop
lea
mov
bound
mov
out
pop
hlt
stos
dec
call
jge
sbb
adc
sbb
outsl
fisttpll
mov
fildl
dec
pop
xchg
loopne
xlat
jne
scas
mov
adc
pop
inc
lahf
pop
ret
dec
xchg
aaa
subl
out
inc
lahf
sti
std
loope
inc
pop
and
pop
movsb
mov
xchg
scas
nop
cmpsb
js
push
push
pop
push
enter
loopne
pop
dec
push
cltd
cmpsb
fs
lock
popa
cmp
pop
ret
jnp
jae
mov
adc
out
fimuls
mov
push
inc
jae
test
jae
push
add
enter
dec
loop
adc
pop
fistpll
sub
pop
dec
repz
dec
mov
mov
fisubl
pop
ret
jl
nop
sbb
fsubs
push
xchg
sub
and
push
adc
and
push
bt
push
sbb
mov
setl
shl
mov
pushf
mov
inc
sub
lea
pusha
call
scas
lods
cmpsb
xor
cmc
fisttps
or
sar
lock
lea
rcll
mov
dec
jne
loop
xor
incl
mov
mov
js
inc
mov
popf
dec
pop
ret
inc
stc
cmpsl
shl
mov
stc
mov
addr16
inc
xor
test
imul
push
dec
shll
lea
adc
mov
imul
test
subb
enter
in
dec
enter
out
inc
mov
jecxz
sldt
cmc
add
push
pushf
pushl
pushl
lea
jmp
mov
sub
mov
mov
inc
xchg
push
decl
jnp
incl
pop
push
cltd
mov
jmp
lods
mov
add
repz
push
and
dec
jmp
mov
xchg
cld
pushl
loopne
mov
push
lcall
pop
dec
xchg
push
pushl
mov
fcomps
push
ljmp
xchg
inc
mov
pop
pushl
push
mov
xchg
push
lcall
mov
mov
cmp
push
decl
int3
push
sti
cmp
fstpt
mov
call
cmp
push
incl
pop
jle
fstl
push
call
or
mov
inc
fwait
incl
testb
xor
call
cmp
sti
cmp
fstpt
mov
inc
xchg
push
lcall
sub
mov
cli
cltd
sub
push
lock
stos
je
mov
mov
xchg
push
lcall
mov
mov
imul
incl
pop
pop
xchg
push
pushl
imul
pushf
pushl
push
pushl
cmp
incl
and
jmp
jnp
mov
pop
cmpsb
and
push
fimuls
jo
sbb
negl
insl
mov
inc
inc
and
aad
popf
pop
ljmp
lods
mov
stc
inc
in
fldt
inc
xor
sbb
ljmp
test
lcall
push
ljmp
cmp
pop
push
xchg
push
ljmp
cmp
mov
shlb
lret
inc
decl
mov
and
jmp
hlt
mov
cltd
pop
out
jmp
lcall
cmc
fldt
mov
or
test
fisttpll
push
out
mov
jo
or
scas
push
rorb
sti
cmp
fstpt
mov
cwtl
inc
mov
pop
jb
mov
jae
mov
daa
lcall
mov
xchg
push
jmp
or
sti
cmp
fldt
add
mov
push
pop
jno
dec
inc
dec
jnp
arpl
pop
outsl
and
cli
out
jo
fstps
lret
clc
data16
push
fstpt
int
jno
dec
lea
enter
pop
add
push
pop
daa
xchg
cmp
mov
fistps
sbb
cld
and
cli
arpl
mov
xchg
or
movsb
cmp
orb
loopne
int
jecxz
stc
pop
sarb
imul
jecxz
xlat
mov
mov
imul
inc
movsl
mov
movsl
inc
add
sbb
sbb
in
mov
jns
gs
xchg
hlt
dec
stc
dec
sub
push
sbb
addr16
mov
enter
inc
jbe
out
jecxz
push
cmp
pop
add
cmpsb
mov
mov
or
cmp
push
in
jbe
push
jge
mov
out
inc
stos
daa
in
jns
mov
mov
mov
aaa
repz
xor
movsb
mov
push
xchg
call
out
dec
pop
sub
aaa
addr16
jns
cmp
ja
je
test
inc
test
scas
stc
call
sub
test
iret
mov
cmc
inc
ss
fnop
xor
pop
jns
xorb
inc
mov
loopne
loopne
cmp
or
xlat
mov
daa
iret
inc
popa
imul
jmp
pop
ja
imul
imul
xchg
mov
jmp
aaa
sti
cmpsb
jp
movsb
daa
jb
mov
loopne
cmpsb
sti
popa
imul
data16
pop
xor
das
test
xchg
jecxz
pop
adc
add
mov
xor
hlt
jecxz
pop
jne
jno
mov
pop
sbb
in
pop
insb
add
insl
or
add
or
mov
sub
sti
mov
imul
mov
inc
cli
lcall
clc
add
ds
or
ljmp
out
jmp
bound
pop
or
fwait
outsl
mov
popa
imul
insb
pop
mov
or
mov
dec
sbb
dec
and
jmp
pop
mov
mov
imul
in
imul
insl
mov
gs
jmp
or
inc
sub
out
inc
mov
js
dec
insl
mov
ljmp
outsl
add
das
xchg
jmp
jecxz
pop
jp
mov
imul
mov
xchg
pop
ljmp
sbb
dec
or
imul
jb
out
sti
insb
pop
pop
pop
jns
std
cmp
ja
jbe
sub
xchg
aas
cmpb
pushl
imul
sbb
xor
mov
out
fbstp
loope
hlt
push
das
push
imul
arpl
imul
pop
jb
xor
jno
enter
jns
mov
fsubr
imul
push
data16
sub
or
mov
shll
insl
popf
or
mov
pop
cmpsl
jae
pop
add
mov
xchg
dec
outsl
pop
outsb
jp
addr16
mov
jb
xor
in
xchg
imul
sti
lods
outsb
hlt
out
mov
imul
xchg
push
je
stos
out
mov
lahf
imulb
add
pop
add
jp
jl
jp
ja
inc
jp
sarl
je
insb
lahf
in
jmp
or
xchg
roll
or
sti
jp
or
push
loop
sti
cmp
addb
sub
inc
push
sti
shlb
add
js
inc
hlt
leave
push
and
inc
arpl
addr16
imul
adcl
out
cmc
add
sti
push
loop
sti
shl
cld
sti
bound
stc
ret
lret
cmp
cs
sbb
dec
and
push
fildl
ja
insb
inc
jns
ljmp
or
mov
dec
sti
cs
mov
mov
dec
mov
xor
arpl
mov
clc
clc
test
popf
push
mov
mov
jmp
out
lods
mov
mov
stos
mov
test
ja
testl
pusha
jae
imul
les
clc
test
cli
lods
sub
notl
adc
dec
cmp
ficompl
cli
sbb
sahf
push
cmp
sbb
sbb
into
fimull
pushf
fdecstp
shl
test
push
in
push
push
in
push
into
mov
not
add
scas
insl
sti
add
mov
cmc
testl
jo
jge
aad
es
mov
leave
mulb
cmp
insb
out
idivl
scas
mov
iret
mulb
stos
cmp
testb
mov
jmp
mov
stos
jge
mov
pop
cmpsl
add
test
sbb
mov
repz
insb
xchg
hlt
not
into
divl
push
inc
sbb
jecxz
andl
loop
rorb
jl
add
cmp
insb
cmp
dec
imull
ret
dec
dec
sbb
dec
repnz
cwtl
jb
pop
negl
xor
rep
pop
sub
hlt
pop
arpl
popa
or
insb
ds
cmp
in
je
adc
and
lret
inc
insb
xchg
negl
add
nop
fcmovne
lds
cs
negl
mov
iret
mov
out
mov
cmp
arpl
xlat
jns
sbb
jns
aas
pop
rcl
imul
xchg
mov
sbb
fcoms
push
cmpsb
test
mov
xchg
mov
jno
mov
inc
test
pop
jns
lock
dec
xor
fwait
push
orl
testb
mov
test
mov
jns
jmp
sub
or
or
mov
aam
mov
or
jl
sub
mov
out
cmc
cmpsb
push
sbb
mov
dec
jb
aaa
hlt
sbb
add
sbb
or
mov
xor
mov
stc
rcrl
orl
and
mov
adc
mov
pop
imul
mov
push
sub
pop
mov
jg
cmp
xor
mov
neg
sub
mov
aas
mov
jp
mov
cmpsb
cmc
lret
xor
xchg
cmc
sbb
jb
jae
fcmovb
ja
sbb
sti
clc
jb
popf
push
mov
add
jns
jecxz
je
jns
mov
ljmp
insl
in
lret
mov
shl
lods
cmp
sbb
ss
pop
fcoml
daa
cld
dec
push
add
push
mov
sti
xor
sub
into
adc
movsb
out
imul
or
adc
data16
imul
mov
cmp
push
insb
mov
into
xlat
stos
cmp
into
aaa
mov
stc
add
lods
leave
hlt
inc
jno
and
lea
add
repz
insb
rorb
mov
lock
or
hlt
and
mov
mov
hlt
and
mov
stc
mov
mov
hlt
mov
lods
sub
out
mov
push
cltd
mov
sbb
ret
cmpsb
push
pop
dec
out
mov
xchg
addr16
xchg
loop
mov
mov
push
cmp
sbb
sti
je
sbb
inc
aaa
push
ss
mov
add
loope
fwait
pop
jbe
fistl
cmp
mov
inc
stos
pop
cmpsl
pop
push
lret
dec
inc
ljmp
repnz
jmp
push
jmp
mov
push
addr16
jae
lods
xchg
lock
rol
cmc
scas
xchg
lcall
jae
sti
mov
mov
fcmovnu
pop
push
cmp
movsl
cmpsl
sbb
inc
scas
mov
cltd
inc
pop
cmc
pop
in
xchg
push
out
mov
push
push
push
das
jae
sbb
imul
mov
push
mov
stos
test
fucomi
lcall
adc
jns
loopne
push
imul
fs
inc
pop
iret
stos
fdivs
movsl
out
inc
outsl
hlt
mov
nop
push
imul
repz
cmp
mov
stos
jne
mov
push
jmp
stc
shl
inc
ss
push
out
sub
xor
lcall
out
pop
sbbb
xchg
push
jne
ret
movb
mov
mov
mov
push
loop
push
arpl
cmp
jbe
jae
fstpl
arpl
cmp
mov
stos
lods
call
cmp
stos
fcmovu
fs
cmp
bnd
mov
cmc
xchg
mov
xchg
push
mov
mov
jp
cmp
dec
je
je
out
divb
mov
stc
fistpl
negl
call
jbe
lds
repz
jbe
je
insl
stc
out
out
aad
idiv
jp
xor
inc
dec
mov
pop
out
bound
out
mov
lcall
int3
cli
push
pop
cltd
test
imul
loop,pn
pop
cmp
push
inc
lcall
sub
imul
add
xor
imul
clc
push
test
cli
stc
jl
cltd
inc
jne
add
or
repz
push
sti
dec
add
mov
sti
add
xor
je
mov
fdivl
dec
mov
jno
cmp
lds
sub
and
xlat
mov
xor
je
adc
cmp
popf
mov
sbb
sub
dec
sti
inc
scas
jns
subl
xchg
mov
and
mov
clc
popf
stc
lret
js
clc
mov
data16
dec
jno
cmp
in
lods
aas
xlat
push
inc
mov
adc
mov
subl
sub
je
aas
dec
inc
push
je
adc
adc
push
lahf
xchg
cmc
mov
sti
xor
pop
insb
mov
js
test
lcall
fs
cltd
or
mov
test
addr16
xor
inc
mov
inc
cmp
pop
addr16
jae
js
mov
fadds
aaa
aaa
loope
sub
shll
xor
or
mov
mov
movsb
das
and
mov
fwait
cmpsb
inc
daa
pop
das
mov
jmp
mov
stos
sub
je
dec
out
dec
mov
sbb
jo
je
xlat
inc
cmp
xor
je
mov
jns
hlt
pop
inc
adc
push
lret
lret
out
daa
mov
or
negl
sbb
repz
ss
inc
out
xlat
mov
scas
cmp
sbb
jb
xor
aaa
sbb
jns
add
jo
add
movsl
mov
push
xor
jbe
ss
cs
lock
mov
jae
push
out
js
out
jne
ja
push
ret
inc
outsb
ss
out
push
jmp
rol
out
in
sbb
push
jp
mov
xchg
fwait
push
scas
lds
jle
aam
out
mov
xor
out
jne
sub
push
subl
mov
xor
inc
lods
xchg
push
icebp
aaa
hlt
clc
mov
js
testb
mov
cmp
cmpsl
lret
push
loope
rcll
dec
jp
mov
out
mov
notl
fsubrs
and
mov
mov
out
xor
popa
xlat
imul
sti
test
mov
leave
mov
mov
jmp
data16
mov
push
sub
jae
outsb
out
sbb
adc
test
sub
out
mov
adc
mov
fdiv
cmpsb
aam
xchg
sbb
mov
jb
je
xlat
mov
sub
mov
xchg
push
pop
push
roll
mov
mov
mov
fldenv
daa
pop
adc
outsb
jae
sbb
dec
ja
sarb
xchg
or
inc
js
cmc
inc
jmp
xchg
imul
out
cmc
add
rcrb
push
lods
jnp
push
pop
bound
out
cmc
jb
sub
mulb
aam
and
dec
nop
mov
xchg
push
mov
repz
jecxz
test
call
pop
stc
stos
cs
js
fdivrs
stos
insb
lods
jmp
fmull
stos
mov
or
stos
xchg
lret
imull
bound
inc
lret
mov
icebp
ficoms
inc
mov
sti
jae
push
subb
mov
iret
jno
out
mov
dec
lods
pop
adc
mov
jbe
fldcw
mov
rol
sbb
push
stc
popa
mov
inc
dec
clc
insl
imul
cmp
jl
sub
ljmp
subb
daa
outsb
mov
sub
push
lds
mov
dec
cmp
lret
movzbl
xor
mov
mov
movsl
imul
lcall
sbb
mov
je
push
clc
sbb
clc
jae
arpl
sbb
out
adc
lods
sbb
dec
sbb
scas
dec
push
inc
adcb
lcall
inc
daa
out
jns
or
movsl
lret
dec
cli
mov
test
cmp
jne
pop
mov
mov
stc
test
mov
leave
cmpsb
inc
outsb
jecxz
fbstp
scas
pop
ja
fcmovu
mov
jns
leave
cmp
push
loope
pop
mov
lcall
fistpl
or
push
push
movsl
mov
mov
cmc
arpl
pop
or
push
stc
test
ss
ficoml
sub
cmc
insb
clc
mov
xor
cmp
cmc
mov
es
dec
xlat
mov
mov
cmc
aaa
mov
outsb
scas
out
dec
cmpxchg
xchg
jo
jo
data16
and
or
out
fs
aam
mov
cmp
dec
cmp
xlat
cmp
mov
test
fcoms
push
mov
adc
mov
mov
mov
insl
movsl
mov
repnz
pop
test
jp
cltd
pop
mov
xchg
mov
sub
sarl
push
sub
js
int3
imul
pop
pop
add
jnp
ret
or
cltd
test
dec
mov
clc
or
pop
mov
scas
jno
xor
sub
cmp
shlb
jno
mov
inc
xchg
jno
popf
test
icebp
std
ret
hlt
mov
mov
popf
popa
mov
jns
fbstp
mov
push
jp
sbb
jp
icebp
ss
stc
icebp
push
lcall
xor
cld
push
push
mov
stc
leave
fistpl
ret
mov
fnstenv
mov
testb
jmp
cmp
or
mov
jp
cmp
in
cmp
adc
lret
aam
mov
pop
jmp
addr16
lods
pop
out
jne
popa
divl
sbb
lock
cli
mov
xor
bnd
rcr
jae
xchg
xchg
push
mov
xor
cmp
out
and
sti
fwait
cld
xchg
out
repnz
jmp
push
add
adc
aad
xchg
int3
daa
jne
aaa
push
negb
cmc
sbb
cltd
jne
jo
outsb
repz
xlat
push
repnz
js
lds
push
push
arpl
aaa
xlat
test
ja
cli
push
das
mov
bound
push
mov
testb
or
fadds
mov
jae
xlat
aad
sbb
xor
loopne
pop
notl
mov
cmp
jnp
sbb
mov
dec
jae
push
pop
sti
jp
cmp
jns
lds
nop
xor
cmp
cwtl
stos
sub
aaa
xchg
stc
jp
mov
xor
out
mov
ja
cltd
repz
ja
jb
push
mov
inc
jmp
js
pusha
xor
lret
fiadds
pusha
cli
jp
enter
test
je
push
aam
lahf
xor
jbe
fsubrs
mov
cmp
clc
xor
repnz
jns
push
aaa
fidivl
mov
lea
dec
ficoms
jb
mov
and
push
cs
cltd
jno
adc
pop
pop
fucomp
out
fs
adc
ja
pop
adc
ret
fadd
dec
fisubl
cmp
adc
inc
jecxz
call
cwtl
xchg
data16
push
rolb
mov
xchg
data16
lret
fldt
cmc
or
test
lret
adc
inc
or
dec
push
fwait
push
pop
pop
loop
or
jmp
outsb
addr16
mov
mov
push
mov
pop
sarb
pop
pop
pop
fs
lcall
jb
cltd
sbb
pop
insl
lods
inc
scas
xor
outsb
ret
lahf
pop
push
push
push
aam
pop
pop
jb
imulb
movsb
stc
sbb
and
out
mov
stos
in
and
dec
mov
out
mov
js
repnz
js
stos
pop
inc
leave
mov
mov
xchg
jmp
lock
push
xchg
xchg
shl
mov
inc
div
hlt
cli
mov
dec
push
jns
adc
push
adc
repz
jnp
inc
data16
pop
out
divb
sbb
jbe
rcrl
lahf
sbb
push
lret
push
xor
or
popf
insl
ss
push
dec
xchg
pop
sbb
mov
jecxz
int
push
xchg
scas
xchg
mov
jae
mov
xchg
js
mov
rclw
test
sbb
jns
imul
mov
sbb
shll
jg
xchg
mov
jmp
aam
into
mov
out
sar
jne
pop
xor
xor
mov
xor
lods
or
xchg
in
loop
pop
mov
stc
pusha
jae
shlb
fucomip
jmp
mov
scas
cmc
xor
xchg
jmp
and
aad
pop
mov
jns
adc
loop
sub
fstpt
mov
push
sbb
push
out
aam
js
sti
repnz
icebp
pop
lcall
jnp
movb
push
bts
lea
btr
mov
btc
ror
push
btr
push
bt
call
lea
call
jmp
push
sub
in
fsubl
xchg
mov
test
cmp
sbb
leave
and
jg
inc
jb
popl
inc
lock
fistpl
pop
shl
lea
dec
mov
push
test
push
pop
jge
pop
dec
and
aam
jl
jo
and
cmpsb
lock
jb
jo
daa
cmp
jnp
xor
jae
inc
rcll
pop
lds
jnp
out
inc
mov
ja
outsl
cmc
pop
or
pop
jl
nop
mov
pushf
mov
fldt
cmp
bound
xor
mov
jns
stc
movl
or
pushf
int3
fnsave
sbbb
icebp
popf
adc
ja
and
fidivrs
push
pop
cli
jecxz
ja
js
ret
nop
mov
cmp
insb
test
aaa
mov
jae
adc
repz
pop
xlat
and
dec
int
fsts
pop
sbb
cmp
jns
jne
popa
aas
lea
mov
xchg
and
inc
mov
shl
call
sarl
fisubs
or
xor
sidtl
xchg
aaa
mov
mov
inc
pusha
repnz
nop
dec
sbb
cmpsl
add
fstpt
gs
lock
sbb
pop
mov
jne
mov
lret
cmc
adc
rolb
push
sbb
push
dec
xor
add
push
sahf
fs
jmp
arpl
leave
inc
movntq
and
adc
mov
lock
push
push
call
enterw
out
inc
mov
out
imulb
nop
xchg
test
xchg
xchg
pop
test
inc
cli
or
div
aam
enter
test
mov
jb
pop
xchg
xchg
sbb
pop
sub
mov
in
fisttps
or
push
jno
iret
clc
xchg
mov
xchg
xor
ret
xlat
lea
imul
push
jno
push
out
fildl
out
inc
mov
mov
movb
movb
mov
pusha
movb
pushl
ret
pushf
adc
lea
pushf
pushl
ret
rcl
setl
sub
bt
cmp
xor
sar
sub
add
xor
test
sub
bsr
mov
cmp
dec
or
shl
mov
cmp
bt
repnz
call
mov
stc
mov
rol
mov
cmc
test
or
jmp
add
mov
inc
dec
jge
sub
jbe
push
jo
sbb
sbb
dec
add
sbb
sub
fldl
pop
sub
jecxz
sti
aas
mov
movsb
adc
xor
mov
mov
pop
or
aaa
mov
in
test
push
dec
clc
inc
add
sub
dec
lds
insl
xor
add
sbb
frstor
inc
mov
fwait
xchg
cld
mov
xor
out
adc
xor
push
push
sbb
hlt
mov
or
inc
mov
popa
dec
popa
not
xchg
mov
inc
pop
jnp
pop
xchg
sahf
jle
lret
dec
pop
lods
test
orl
adc
jge
mov
pop
mov
in
jp
cmp
push
les
pop
in
push
andb
sub
xor
out
inc
mov
movsb
bswap
pop
movzbw
bswap
pop
pushf
pusha
pushl
push
lea
jmp
mov
push
push
jmp
inc
out
xchg
xchg
shl
int3
repnz
in
or
cmp
push
sbb
jbe
adc
aaa
jo
mov
lds
cmc
pop
nop
pop
and
sbb
repnz
xchg
test
out
push
push
mov
mov
mov
or
jmp
int3
fucomp
mov
loop
ss
ds
dec
cli
out
mov
ss
mov
out
je
jl
inc
ljmp
insb
loop
inc
mov
xor
sbb
into
lods
mov
mov
test
mov
scas
mov
jne
xor
fildll
mov
sbbl
aad
out
loopne
lahf
lret
xlat
js
pusha
add
cld
cmp
dec
mov
add
dec
jge
jmp
sub
cwtl
leave
sub
mov
push
fcoms
add
or
in
dec
data16
dec
call
outsb
and
in
imul
jmp
gs
cmp
iret
out
inc
mov
int3
out
outsb
push
mov
inc
pop
mov
mov
cwtl
scas
mov
pop
adc
jnp
repnz
push
fldcw
lcall
jp
in
mov
cmpsb
or
fistl
fsubrp
jecxz
and
mov
imul
sbb
and
dec
pop
faddl
insb
dec
fs
fnstcw
mov
popf
cltd
or
outsb
jmp
negl
or
pop
xchg
out
inc
mov
push
push
sub
rcrb
jb
push
test
push
outsb
sbb
inc
push
mov
ror
push
push
cmp
push
pop
push
lret
and
mov
cmp
ret
in
xor
jb
sbb
adc
adc
or
dec
mov
testl
pop
lods
adc
cld
push
scas
or
loope
in
push
loope
cmc
pop
int
mov
subl
jge
loope
leave
aad
stc
mov
xlat
shr
inc
in
std
xor
rolb
pop
out
fnsave
ret
or
stos
mov
cmpsb
in
lret
nop
or
mov
cltd
cmc
sub
lahf
popl
mov
pushf
fmuls
rolb
add
mov
movsl
mov
test
push
insb
xchg
mov
enter
adc
jb
hlt
addr16
jnp
fnstenv
xchg
jbe
sbb
adc
cmp
adc
add
out
inc
mov
and
inc
adc
daa
popa
push
jns
pop
jae
jnp
push
cmp
outsl
loopne
add
pop
or
mov
ljmp
cwtl
lcall
or
adc
fidivrs
jnp
rol
mov
mov
orb
mov
pusha
cmp
cmp
mov
and
fs
push
adc
adc
test
popa
inc
popa
pop
adc
fwait
test
stos
aaa
test
stos
out
mov
add
xchg
inc
lds
fisubrl
xchg
adc
xorl
mov
jae
out
inc
mov
pop
pop
jg
cmp
or
adc
cmp
or
xor
or
cmp
add
add
mov
stc
in
jg
movsb
sub
mov
fistpl
jmp
in
iret
popa
xchg
inc
add
dec
adc
xchg
mov
mov
push
add
std
jg
sub
imul
mov
nop
clc
in
int3
inc
pop
fsubs
lds
or
cwtl
jo
jnp
outsl
leave
arpl
push
leave
xchg
adc
inc
rcrb
jb
mov
jbe
push
or
adc
pop
sbb
mov
jbe
xchg
jle
retw
inc
outsl
fstps
xor
ss
adc
test
push
xchg
lahf
xlat
xchg
pusha
outsb
js
xlat
insl
wbinvd
xor
pop
jae
cmc
and
inc
pop
cmp
sub
insb
outsb
shrb
rorb
add
jbe
inc
fsubr
inc
rorb
ret
add
adc
movsl
decl
cmpb
jb
inc
pop
jp
inc
je
fs
push
adc
lock
xor
and
or
lret
inc
cmp
outsl
fdivp
cltd
ss
in
test
jb
scas
popf
test
ljmp
sub
imul
ja
pusha
sub
rcll
in
clc
push
fdivs
jae
in
cmp
cmp
test
pop
mov
xchg
xor
inc
shl
dec
das
push
jae
repz
xlat
jb
popa
adc
adc
and
xor
jl
xor
test
push
or
mov
pop
jno
iret
mov
mov
pop
cmpsl
pop
sbbl
bound
xor
scas
in
xchg
and
pop
lcall
or
sbb
test
repz
nop
std
test
sub
out
dec
sbb
movsl
pop
jne
dec
push
lret
push
imul
sub
cwtl
cmp
mov
das
insl
jmp
push
test
mov
xchg
cs
out
inc
shll
test
lret
sub
btc
mov
test
cmpb
call
ret
leave
dec
jl
movsl
cmc
test
mov
xchg
cltd
pop
mov
aam
pop
pop
arpl
inc
cltd
fisttpl
pop
inc
roll
xlat
repnz
int
jnp
aaa
dec
pop
test
mov
fwait
pop
pop
andl
leave
pop
ljmp
jne
mov
insb
pusha
fsubrp
xlat
jmp
add
inc
ret
ss
mov
stc
movl
cmpl
mov
mov
dec
inc
iret
popa
out
add
mov
mov
xchg
mov
push
test
std
in
mov
and
int
pop
dec
or
dec
in
adc
roll
and
mov
std
rcll
mov
lahf
lods
mov
leave
repz
imul
aad
in
lds
inc
ret
scas
push
sub
fwait
leave
cmp
or
aas
loope
rcrl
mov
outsb
aam
xlat
or
push
and
fs
test
cmpsl
test
or
dec
fnstsw
xchg
arpl
daa
aaa
jae
imul
test
ss
push
dec
inc
imull
and
mov
mov
ss
stc
leave
les
lods
adc
sbb
loop
push
lret
and
push
inc
pop
shll
sbb
inc
sbb
fbstp
dec
out
repz
out
inc
ret
jae
scas
data16
and
gs
hlt
mov
sbbl
imul
fildll
lods
sahf
xor
jge
lahf
push
xchg
cmp
lcall
push
xor
cmpb
mov
sub
sbb
cmp
cmp
js
test
test
enter
stos
pop
popa
int3
add
cwtl
push
sub
and
inc
movsl
push
out
cmp
add
dec
shlb
lret
jne
xorb
imul
push
mov
push
pushf
cmp
inc
les
jns
icebp
scas
pop
xor
add
idiv
ret
icebp
xchg
sti
int
mov
add
and
adc
fcomps
cli
loopne
dec
frstpm(287
cmp
jmp
jmp
push
inc
and
lock
data16
sbb
incl
js
fiaddl
cwtl
scas
cmp
sub
xchg
sub
xchg
int
out
inc
les
leave
lds
add
fldenv
add
jg
add
daa
add
pushf
sub
loopne
and
or
daa
add
out
cmp
call
fisubl
add
jg
add
daa
add
pushf
sub
clc
jg
add
daa
add
andb
sub
daa
add
cmp
or
daa
add
mov
and
cmp
daa
add
pop
sub
sbb
daa
add
and
and
daa
add
and
push
fisubl
add
adc
add
andb
pop
fisubl
add
add
andb
fisubl
add
cmp
inc
andb
insb
fisubl
add
ja
add
and
je
daa
add
and
push
andb
jl
daa
add
andb
add
sti
test
rcl
add
sub
shr
mov
test
xor
mov
bt
bt
bt
repnz
push
movb
pushf
pushf
lea
jne
mov
movb
pusha
lea
bswap
mov
lea
lea
jmp
inc
dec
movb
rcr
call
pop
or
sub
jecxz
jmp
ret
ror
jmp
xchg
sub
out
js
add
movsb
mov
rcrl
xchg
fcoms
iret
sarl
pop
xchg
mov
movsl
rol
push
pop
push
in
stc
outsl
in
lds
addr16
mov
enter
out
adc
adc
and
imul
shl
shlb
mov
sbb
pop
jecxz
adc
sbb
push
cmpsl
cltd
cmp
ja
neg
mov
lahf
cmp
rcr
xchg
and
data16
shrl
arpl
push
mov
nop
push
loopne
add
or
and
inc
enter
cmc
xlat
loope
xlat
scas
gs
inc
outsb
pop
push
push
dec
jle
pop
mov
pop
in
jp
rcrb
xchg
test
int3
inc
xor
pushf
stos
cli
inc
mov
icebp
mov
dec
loope
fs
push
mov
ljmp
mov
pop
shll
mov
cmp
jp
add
inc
outsb
enter
fcmovne
outsb
enter
add
fs
pop
cli
xor
jo
mov
lods
out
inc
jp
sahf
sub
daa
icebp
jnp
ficoms
add
adc
or
sbb
sbb
xchg
ss
cmp
inc
pop
out
or
jb
push
mov
mov
mov
mov
mov
rclb
jbe
rcll
mov
add
mov
fists
inc
inc
imul
and
data16
movsl
mov
inc
outsb
or
lcall
lret
imul
jno
jns
gs
gs
inc
enter
lahf
mov
lock
out
aad
cmc
fcomi
iret
adc
sbb
aaa
movsl
adc
test
rorb
lret
add
or
mov
lods
jbe
cmpsb
rorb
add
adc
lock
inc
mov
fcoml
dec
push
sahf
mov
pop
inc
add
adc
mov
enter
lea
ja
push
shl
ror
shl
sub
bts
sar
stc
lea
add
mov
or
test
mov
shl
neg
mov
test
cmc
repnz
call
cmp
push
add
xor
dec
pop
pop
mov
mov
inc
or
cli
testb
and
push
ret
pop
cmp
mov
gs
jle
fmul
scas
and
cmp
mov
inc
mov
push
pop
shrb
adc
test
lret
jno
insl
out
push
addl
inc
leave
dec
adc
imul
das
rorb
mov
mov
js
and
cmpsb
sub
cmp
cmpb
cld
mov
push
jns
jl
or
imul
sub
cmc
addr16
xchg
call
nop
push
xor
cli
inc
mov
jp
jno
in
outsl
cmp
fwait
mov
data16
rcrb
cld
test
lods
je
mov
js
pushf
loop
push
pop
jle
cmp
aas
dec
add
das
ret
cmpsl
insl
fsubr
cmpsb
fdivrs
lahf
sti
jne
jp
xor
outsl
ja
outsb
cmc
out
cmpsl
mov
cwtl
jns
dec
mov
xchg
cmp
push
inc
orb
scas
iret
ret
mov
es
push
lret
cmp
pushf
insl
fstpt
pushf
arpl
dec
outsl
jecxz
mov
rclb
xor
rcrl
add
outsl
jbe
mov
jg
jae
lds
mov
fmuls
int3
push
out
adc
sarb
sub
xor
sahf
cmc
out
jp
dec
js
jne
sub
cmp
mov
pop
out
sub
or
pushf
frstor
lret
and
sub
cwtl
pop
in
xlat
lea
fstl
sub
out
pushf
xchg
adc
fsubrl
sahf
pushf
add
jne
jmp
inc
jns
push
or
outsl
ja
or
shll
mov
xor
inc
sbb
in
mov
imul
push
orl
jmp
xchg
sub
jae
mov
cmp
xchg
icebp
xor
out
imul
out
jae
push
push
pop
pushf
shll
jbe
cld
jnp
dec
mov
adc
jns
cmp
xchg
xchg
cld
out
push
int
dec
xchg
jp
cmpsb
sub
out
pop
in
aaa
add
adc
leave
cli
sub
mov
pop
mov
sub
out
fstp
data16
pushf
popa
fists
push
xchg
mov
mov
add
dec
xor
clc
addb
mov
addr16
sahf
mov
mov
add
notb
iret
outsl
mov
push
mov
lods
imul
xlat
hlt
mov
cltd
add
jnp
cmp
aam
mov
sbb
dec
mov
or
xor
movsl
add
pop
sub
cmp
jg
lcall
testb
jbe
cmpb
clc
fucom
mov
pop
cmp
outsl
mov
scas
out
jp
sbb
mov
lea
fcmovne
jbe
dec
or
outsl
sarl
pop
jb
in
mov
fwait
pop
sbb
inc
add
in
out
pop
sub
clc
inc
jbe
cmc
dec
mov
xor
popa
cwtl
cli
in
push
jbe
mov
cmc
jnp
mov
push
fsubrl
fs
sti
pushf
mov
out
jecxz
flds
call
mov
popa
inc
pop
test
js
outsl
lret
jb
push
jns
dec
das
mov
and
pop
ljmp
int3
sub
fistpll
dec
in
mov
mov
pop
push
sbb
push
pop
int3
repz
pop
pop
jne
push
xor
cmp
cmpsb
sbb
cwtl
repz
addr16
neg
jns
addr16
imull
imull
jp
repz
insb
cmp
adc
jae
movsb
pop
dec
sti
in
in
sbb
pop
sbb
lret
outsb
dec
sub
ret
mov
into
dec
inc
jbe
scas
mov
test
jmp
xchg
sti
or
jbe
fucom
lret
outsb
jmp
pop
out
fidivrs
scas
add
movsl
sahf
ljmp
jbe
lds
xor
stc
dec
aaa
jge
outsb
shrd
in
enter
mov
cmp
in
jno
je
and
dec
ljmp
scas
mov
cmp
xchg
and
xor
rcr
icebp
out
fldl
push
lahf
stos
inc
add
daa
ja
les
std
shr
ds
out
idivl
fisttpll
aaa
popf
ret
repz
jecxz
push
and
lea
mov
mov
cmc
and
sbb
xchg
xchg
in
lcall
aas
out
and
adc
jns
push
out
cld
cmp
cmc
dec
int
ss
jae
jecxz
adc
add
sub
jo
mov
xchg
frstor
mov
mov
or
adc
dec
push
jne
aaa
cwtl
int
jns
cli
loop
adc
mov
and
mov
sti
push
stos
dec
hlt
jb
cltd
lret
fstpt
push
es
jmp
jns
int3
mulb
mov
pushf
push
call
mull
fstl
leave
push
xchg
jne
cmp
pop
arpl
push
jecxz
jno
lret
sub
loope
mov
inc
div
cld
jno
sbb
movsb
mov
mov
lds
stos
pop
push
push
repnz
mov
testb
scas
divb
mov
subb
xchg
loop
xor
mov
push
repz
imul
sarl
fwait
xor
jl
push
fcoml
stos
sahf
test
fsubr
dec
cmp
fwait
mov
sarl
cs
in
test
ficoms
push
fistpll
inc
jmp
jne
iret
lret
in
subb
push
fwait
cs
ret
daa
sub
ficoms
xor
test
mov
sub
arpl
pop
pushf
stc
aas
call
jle
dec
imul
dec
fldln2
and
cmp
inc
inc
out
sti
movsb
cmp
outsl
jns
sub
pop
cmp
pop
and
xchg
out
frstor
jp
xchg
mov
fdivrs
mov
fnstsw
adc
mov
insl
xor
cmp
ljmp
scas
xor
cli
dec
pop
xchg
cld
testb
lahf
xor
das
out
pop
cmc
loopne
jno
mov
psadbw
push
push
mov
subb
add
mov
mov
jmp
jg
inc
sub
loopne
cmp
in
and
dec
or
in
sub
push
stc
fdivrl
mul
gs
dec
or
test
jne
and
xor
ds
add
xor
pop
js
fldl
out
mov
push
scas
jmp
pop
gs
jecxz
data16
lcall
fstpl
sub
outsb
add
mov
cltd
in
push
lahf
cmp
sbb
mov
dec
in
jo
jne
jp
push
shlb
or
push
pusha
inc
adc
push
gs
or
data16
xchg
pop
mov
ja
or
jns
in
jle
mov
adc
stos
cmp
imull
sbb
xchg
jle
jns
or
cmp
add
xlat
cmc
or
sbb
pop
out
push
iret
jnp
std
mov
stos
jae
xlat
jmp
shrl
jecxz
int
scas
popa
sarb
into
cmc
pop
stc
js
int
cli
fldl
mov
or
je
shrb
mov
fidivrl
dec
jnp
or
cmc
pop
int
inc
fdivrl
pop
in
rorb
icebp
popa
mov
mov
and
ja
into
xchg
pop
lds
subl
mov
jl
sbb
in
notb
int3
mov
jae
scas
mov
jg
imul
fsub
jns
sbb
out
int3
es
xlat
cmp
repnz
pop
mov
dec
sbb
and
xor
mov
pop
cmp
jo
dec
mov
or
outsl
ds
fsub
pushf
repz
daa
xchg
mov
mov
imul
push
andl
cmp
xchg
jmp
faddl
adc
arpl
cwtl
jne
mov
cmp
shr
mov
mov
dec
aas
aaa
out
adc
xor
and
lock
jle
outsl
xor
or
sar
mov
xor
enter
aas
arpl
mov
adc
add
sub
lret
aaa
xlat
ret
dec
mov
int3
xchg
sub
pop
int
ds
mov
cli
or
out
mov
pop
ret
test
fnsave
mov
push
cmpsl
fisttps
cmp
lea
cli
pop
cmp
ljmp
and
sub
lds
fwait
imul
int
loope
push
add
scas
mov
xlat
sti
jne
in
push
dec
loop
ret
int3
lret
jns
push
fimuls
or
mov
in
movsb
fidivl
and
clc
lods
inc
scas
cmp
repz
test
cmpsl
daa
inc
jae
xchg
movsb
dec
inc
in
stc
lods
ret
pop
jl
jns
pop
test
in
les
xchg
in
dec
xchg
mov
sbb
fdivrl
pop
testl
hlt
and
mov
jp
push
mov
sub
push
ret
stos
leave
mov
adc
mov
movsb
notl
mov
daa
cmp
insl
inc
or
out
cmpsl
imul
mov
and
adc
push
jmp
mov
fucomp
stos
push
xor
sahf
dec
aas
repz
in
jg
push
pop
je
sbb
push
adcl
fists
roll
mov
or
mov
repnz
pop
insb
dec
xchg
mov
push
mov
out
push
inc
cmp
movsb
sub
call
imul
scas
lds
aaa
pop
add
cli
aas
jo
jae
mov
orl
push
mov
jne
dec
or
mov
inc
or
jmp
mov
sti
in
cmp
imul
push
mov
add
ret
xchg
jmp
dec
dec
or
ret
adc
idiv
outsl
sbb
inc
cmp
push
in
xor
adc
lds
mov
pop
pusha
and
xor
cmp
std
ja
dec
arpl
scas
pop
push
iret
push
xchg
mov
enter
mov
mov
sti
sub
pop
nop
out
dec
pcmpgtw
xchg
pushf
in
sbb
fstp
ds
xorl
in
pop
push
pushf
jg
repz
lretw
outsl
fbstp
mov
in
pop
mov
inc
mov
jbe
cltd
push
in
inc
xor
scas
test
inc
repz
xor
mov
mov
stos
sahf
das
int3
xchg
jl
jle
clc
cmp
mov
fucomp
mov
or
jp
or
jmp
ja
fnstsw
cmc
addr16
ret
pop
sti
ds
jb
scas
jmp
lcall
inc
ds
push
mov
lods
mov
or
cld
sub
jo
sub
xchg
sub
test
in
fsub
stc
out
data16
cmp
or
mov
jnp
aas
orb
sub
jg
push
stc
add
mov
arpl
mov
hlt
stos
push
mov
adc
mov
pop
mov
les
or
push
popf
mov
fdivl
dec
dec
rorb
rorl
fcomps
xor
into
jbe
dec
in
xor
jmp
lcall
xchg
popa
stos
or
cmc
rcrl
push
mov
push
arpl
clc
lods
in
and
ds
or
insl
xlat
or
test
inc
stc
shll
pop
push
cli
cmp
scas
xchg
lock
loope
add
and
movsl
stos
sti
bnd
mov
fidivs
mov
arpl
jne
das
jp
mov
stos
in
out
mov
xor
insb
dec
sti
outsl
psubsb
outsb
xchg
or
and
out
int
jo
ds
into
cmpsl
jge
ss
fdivrl
mov
xor
fwait
in
mov
cmc
push
xor
ficoml
stos
repz
lret
xor
es
inc
mov
jns
daa
test
in
aaa
jl
pop
pushf
add
jg
dec
sti
dec
xor
push
xchg
insb
lret
cmpsb
in
push
cs
add
jnp
out
cmc
mov
fwait
lret
iret
lods
pop
stos
lret
pushf
insb
lahf
fwait
scas
movsb
or
dec
jns
test
mov
pop
mov
or
pop
sbb
cmp
sbb
cmp
popf
das
je
fnsave
push
imul
jmp
pushf
ljmp
xchg
xchg
stos
jmp
xchg
movsb
out
dec
or
ds
icebp
leave
test
pop
int
cmp
or
repz
push
fbstp
xchg
cmc
stos
lret
mov
dec
xchg
rcrl
mov
fsubrl
lret
mov
outsb
adc
inc
jae
ds
and
pop
push
pushf
fidivrl
mov
and
cmp
cmp
pop
pushf
xchg
adc
pop
cmp
aam
mov
cmc
fists
in
mov
jl
ja
insb
jp
ret
fndisi(8087
jnp
xor
nop
dec
cmp
jne
in
lcall
and
push
in
jno
cmc
mov
rcrl
or
stos
mov
xchg
and
stc
mov
in
push
ret
bound
push
jecxz
mov
lret
pusha
imul
sbb
mov
mov
mov
sub
pop
inc
rorl
sahf
mov
sub
xchg
pop
in
fsub
dec
jno
push
jg
sbb
and
out
dec
mov
jne
fucomip
and
popf
jb
ljmp
insb
ror
ret
ss
out
stos
dec
fnstenv
inc
fnstcw
test
call
or
out
xor
sbb
cmpsl
mov
jmp
js
jecxz
dec
mov
imul
ja
jae
jle
pop
mov
scas
std
out
ljmp
jae
sub
jge
sub
dec
movsl
pop
imul
cmp
out
sarb
int3
dec
sbb
stos
repz
jecxz
scas
fnstsw
push
into
movsb
pop
loope
mov
loop
lcall
push
clc
and
mov
xor
fidivrl
ja
pushf
push
lods
imul
shl
add
data16
cwtl
jmp
data16
dec
add
xor
int
int
cmp
xor
movsb
cmp
push
adc
pusha
add
int3
scas
lods
scas
in
out
pop
xlat
mov
mov
das
rcrl
ret
mov
pop
and
out
outsl
ficomps
enter
pushf
mov
imul
in
stos
jecxz
insb
ret
and
hlt
cmp
lahf
cld
jmp
or
fcoml
cltd
mov
add
dec
cmp
pop
jp
cmpb
sbb
es
and
jns
jno
rol
jns
mov
sti
adc
sti
dec
adc
push
dec
je
sti
js
test
sti
jp
and
sbb
ja
adc
sti
cmp
jp
and
push
cmpb
push
pop
inc
pop
fistl
jne
xor
cmp
int
jp
rcll
div
imul
fisubs
jbe
xchg
mov
xor
mov
mov
outsb
inc
outsl
jb
cmc
cmc
js
pop
cmp
pusha
jb
insb
fidivl
mov
repnz
stos
repnz
jb
push
cmc
cmc
hlt
lods
out
mov
aad
mov
jmp
loop
cmp
and
and
aad
mov
popf
cltd
jne
mov
jae
dec
loop
je
fistl
jp
je
js
ja
imul
jne
mov
cmp
mov
sti
pop
mov
je
mov
jp
js
mov
xor
jo
js
push
dec
in
xchg
jns
data16
mov
pushf
jmp
scas
stos
scas
cmp
inc
cs
fsub
jae
mov
mov
insb
dec
xor
jns
lock
jns
out
cmpsl
inc
cwtl
imul
mov
push
cmp
mov
daa
outsb
out
mov
stc
jne
out
div
inc
mov
leave
hlt
mov
jne
jns
insb
pop
je
insb
sahf
cli
mov
jbe
cmp
icebp
mov
push
mov
jb
xchg
divl
repz
in
call
stc
jo
aaa
push
xor
repz
daa
cli
out
imul
inc
out
push
insb
out
stos
lock
ja
mov
outsl
je
repz
cmp
ja
mov
divb
cmpsl
lds
subb
in
mov
sbbl
rcrb
jo
ret
lock
mov
jne
xor
lcall
pop
lcall
inc
arpl
rorl
call
pushf
mov
lock
cmpsl
xor
imul
in
in
daa
jge
jne
xchg
cli
cmp
adc
sub
pop
jne
cmc
psubusw
arpl
int
push
lea
mov
add
fs
dec
sbb
push
je
sti
adc
xor
sub
add
push
pop
adc
jmp
pop
mov
push
mov
mov
lahf
jne
sahf
stos
xchg
push
jecxz
push
push
test
jnp
pushf
jae
outsb
jl
push
cmpsl
loope
xor
cmc
dec
jle
or
stos
stos
in
rcrl
dec
ja
js
repz
cmc
lret
addr16
fmul
jge
lods
repnz
outsb
pop
cmc
data16
jmp
jae
sahf
pop
dec
lods
orb
mov
cmp
bound
test
mov
int
sbb
repz
mov
stos
mov
xor
or
clc
iret
daa
mov
arpl
inc
push
mov
cmc
jne
ret
addr16
in
cmpb
and
sarl
or
das
mov
xchg
pop
ret
fisttpll
xor
out
or
stc
in
jns
movsl
cmp
mov
insb
xor
jne
lret
push
add
jmp
xlat
jmp
mov
ret
data16
cmp
pop
repnz
mov
fsubp
sbb
jnp
imul
dec
insl
pop
fs
cmc
test
mov
scas
fildl
mov
push
fnstsw
shrl
jge
call
mov
mov
add
pop
jecxz
add
inc
dec
sub
add
data16
fs
mov
imul
dec
mov
xor
jb
lcall
mov
fs
xchg
cltd
ljmp
rorb
testl
pusha
xor
push
sarb
test
push
cmp
in
jne
inc
mov
cmpsl
mov
sub
jb
push
jmp
ds
xor
push
push
mov
push
push
sbb
push
pop
data16
imul
roll
xchg
mov
in
lock
fisttpl
sub
jne
out
into
icebp
out
pop
pop
or
addr16
outsl
clc
jno
out
pusha
mov
nop
pop
push
rcrb
test
mov
aad
mov
cli
push
jbe
jne
xchg
mov
idiv
in
push
and
mov
and
imul
jae
ljmp
sbb
ret
in
push
pop
lods
pop
rorb
popf
jbe
mov
out
push
mov
mov
mov
call
mov
std
je
dec
dec
dec
mov
ds
outsl
fstpl
repz
mov
mov
call
outsl
ret
cmc
lret
and
lret
pushf
push
cli
cmp
sub
cltd
jecxz
jp
xchg
mov
dec
loopne
jge
mov
or
jge
dec
stos
pop
xchg
and
sbb
mov
pop
ret
mov
test
pop
es
pop
mov
dec
and
clc
gs
out
push
push
decl
ret
or
faddl
pop
jmp
imul
int
scas
jns
sub
and
dec
loope
fnstsw
sbb
push
sbb
sub
pop
and
cli
dec
push
cmp
mov
jb
lds
cmp
sub
lret
jae
out
cmc
xlat
push
sbb
adc
dec
cmp
adc
out
add
in
cwtl
sbb
out
jle
sub
fwait
cmc
mov
lock
ret
in
jecxz
mov
loopne
pop
push
jae
and
push
add
sbb
inc
stos
mov
pop
sbb
dec
pop
pushf
push
fnop
icebp
sbb
fcompl
mov
sub
jo
data16
nop
cli
xor
xor
xchg
push
add
enter
mov
mov
leave
fisttpll
fs
fdivrl
int
cmc
or
jle
in
or
dec
push
xchg
ficomps
xchg
pusha
imul
mov
sub
arpl
imul
mov
into
movsl
outsl
aas
inc
test
cmp
jl
outsb
dec
js
dec
movsb
xchg
pop
cltd
jp
cmp
out
mov
jnp
outsl
and
jmp
in
lea
sub
sub
xor
xor
repz
lret
lods
jnp
inc
cmc
mov
mov
push
push
fstl
imul
stos
mov
push
mov
jno
addb
mov
gs
outsb
iret
idivl
ja
push
and
xchg
pop
out
iret
je
out
pop
call
mov
fistpll
dec
sbb
iret
stc
aas
or
adc
jp
cwtl
xor
and
pusha
outsb
jno
out
push
adc
push
lret
xchg
mov
mov
push
popa
add
fstps
cmp
sub
inc
mov
insb
pop
add
mov
ljmp
cmp
out
cmp
in
test
roll
lods
inc
cmp
cmp
stc
fdivrs
jae
mov
mov
lahf
aad
dec
sbb
sbb
in
stc
add
mov
cmc
mov
pop
add
and
sbbl
jmp
inc
jb
loope
push
dec
pop
fcmovb
fidivrl
jle
in
inc
sbb
push
lret
sti
lock
sar
ret
cmp
ja
push
jno
dec
scas
outsl
aaa
jbe
repz
out
test
mov
mov
loopne
addb
pop
outsl
dec
mov
cmp
dec
pop
in
imul
xchg
outsl
rorl
cmp
mov
lahf
pop
add
js
pushf
bound
fnstcw
movsl
fnstenv
inc
lods
fnstcw
mov
clc
ja
jmp
push
and
dec
push
popl
and
les
mov
dec
movsb
stos
enter
fs
imul
in
roll
mov
fnstsw
stos
xor
push
cltd
outsb
push
jp
xchg
cmp
dec
in
jbe
imul
pushf
sbb
jl
and
xor
inc
pop
xchg
leave
fwait
stos
cld
mov
jae
jge
aaa
or
adc
out
pop
fwait
outsl
mov
pop
mov
dec
mov
fdivr
gs
adc
mov
dec
mov
aaa
jmp
test
inc
mov
jecxz
in
pop
mov
stc
mov
popf
loop
or
pop
jae
in
mov
mov
int
jp
cmp
lret
in
ja
repnz
fcoms
adc
stos
mov
and
and
fnstenv
dec
xor
jne
stos
sbbl
pusha
in
or
sbb
int
pop
lods
adc
dec
fcomp
das
das
or
jbe
in
adc
jb,pn
hlt
inc
mov
adc
loopne
jecxz
dec
faddl
mov
add
push
insl
push
fdivrl
testl
nop
mov
fnsave
pop
out
cmc
xchg
xlat
or
cmpsb
jae
pop
stos
clc
jl
pop
in
scas
mov
sub
inc
sbb
pop
out
js
rcl
imul
roll
mov
mov
fldcw
pop
or
mov
sub
fwait
test
xor
add
lret
jecxz
in
mov
in
xor
xchg
ds
xor
lcall
sub
jns
xchg
addr16
pop
jae
cmp
ret
push
mov
mov
fmull
mov
or
std
aam
cmpsl
adc
dec
test
dec
pop
jae
movsb
jg
push
in
adc
adc
arpl
cmc
lock
lds
mov
jb
jp
fldenv
jne
fmuls
iret
out
cmc
cmp
int3
cmpsb
arpl
in
xor
addr16
shrb
lods
sbb
insb
fwait
rcl
jae
sub
test
mov
push
imul
lock
push
dec
sahf
dec
sbbl
ret
mov
jecxz
frstor
aad
lock
xchg
scas
mov
ret
and
pop
cmp
pop
inc
mov
pop
or
dec
insb
mov
out
xor
into
sbb
js
add
test
adc
movsb
push
scas
and
inc
inc
jno
mov
pushf
or
pop
or
mov
push
in
out
pop
pop
push
lret
cmpsb
pop
mov
lahf
sub
fdiv
std
ja
out
pop
mov
in
mov
fisttpll
push
fdiv
sub
incl
subl
int
cld
scas
pop
mov
lea
mov
dec
xlat
insb
sbb
inc
pop
jmp
pushf
jns
mov
icebp
sahf
mov
lea
mov
push
pop
sbb
shl
loop
xor
jg
popf
jne
bound
mov
cli
push
fsubrl
or
jae
cmc
enter
inc
mov
lcall
test
lret
insl
ja
xor
lahf
movb
je
insl
mov
in
push
into
mov
mov
jb
dec
or
dec
in
fistpl
sub
aam
mov
mov
dec
or
fcomip
pop
jo
xchg
mov
pop
or
dec
idivb
stc
cmpl
pop
xor
cmp
rcr
dec
test
repnz
jb
ja
xor
mov
xlat
decb
sbb
sbb
insb
cmpsb
mov
pop
pop
cmp
mov
jg
jns
imul
dec
inc
aad
out
and
pop
mov
add
or
mov
in
push
cmpsb
pop
aaa
inc
cmp
ret
jmp
mov
push
xor
mov
std
hlt
sbb
in
fxch
adc
or
jno
pop
cmc
dec
xor
jl
addr16
xchg
lret
mov
addr16
adc
jg
nop
dec
dec
in
in
xchg
ss
scas
jo
fldenv
push
push
cmp
adc
popf
stc
in
test
sub
lea
jns
mov
sub
mov
jecxz
pop
mov
jnp
jmp
mov
pop
mov
or
sbb
loope
mov
xchg
out
pop
push
and
inc
into
adc
ss
xchg
out
bound
cmp
shrl
mov
je
push
xor
inc
jecxz
push
pop
cltd
stos
ljmp
js
ret
push
sti
in
lcall
cli
fisubs
cmp
mov
lcall
and
mov
pushf
mov
lcall
adc
xorl
jnp
insl
pop
adc
cmc
fstps
sahf
mov
cmp
cmp
xchg
jle
rorl
les
sbb
and
and
cli
mov
mov
imul
jg
jb
push
test
add
mov
jp
xchg
mov
lret
jmp
push
sub
idiv
clc
pop
ja
mov
push
pop
ljmp
out
dec
shlb
lods
xor
fwait
and
and
pop
ja
in
mov
stc
xchg
iret
ret
mov
das
test
cmpb
sub
pop
paddusw
jno
push
push
and
jno
fldl
mov
idiv
cmpsl
cmp
mul
cmc
push
dec
jg
ret
xchg
push
neg
icebp
jae
sbb
and
jmp
jnp
mov
pop
and
cmp
outsb
xchg
in
cmpsl
sub
jnp
push
shll
jecxz
dec
mov
adcl
mov
mov
mov
jb
mov
mov
call
out
dec
imulb
cli
in
inc
mov
cmp
icebp
popf
jae
jmp
or
rcrl
test
es
lea
enter
mov
popa
cmp
ret
in
movsl
push
mov
jb
in
hlt
xor
repnz
das
icebp
cli
sbb
push
push
fidivrl
shrl
int
jne
int
fwait
cmpsl
ret
cmp
mov
outsl
cmp
in
fisubrl
push
je
out
pop
shll
push
iret
sub
cmp
mov
in
gs
jne
or
cmc
mov
stos
sbb
rcrl
ret
or
jne
sti
jns
xchg
call
pop
negb
add
jo
xchg
stc
das
aas
add
push
cmp
add
inc
test
sbb
repz
xor
arpl
stos
sub
insb
cmp
faddp
mov
sub
push
jle
mov
jno
mov
sbb
jmp
mov
xchg
cmpsl
cmp
ret
nop
add
mov
or
mov
pop
mov
mov
into
dec
fwait
sub
lret
roll
fstpt
xor
rolb
inc
imul
jbe
mov
sub
cmc
dec
add
mov
mov
jo
push
lds
sub
and
mov
sbbl
shr
push
repz
jae
stos
sbb
jne
mov
cmpsl
bound
mov
jae
jb
adc
inc
jecxz
dec
imul
xlat
sti
lods
inc
in
int3
jns
iret
cmc
dec
int3
cmp
push
sbbl
fisubs
jmp
or
sbb
xchg
and
or
pop
fisubl
pop
cmp
dec
push
cmpsb
rclb
jmp
orl
sti
mov
sbb
add
testb
test
adc
pop
sub
cwtl
sub
xchg
bound
xor
repnz
andb
enter
lret
icebp
and
jecxz
add
ja
and
fwait
jbe
pop
das
ret
cmp
fwait
pop
and
pop
fwait
cld
inc
fstpl
sbb
jb
test
test
mov
mov
push
mov
jbe
stc
and
je
test
mov
enter
popf
cmc
pop
mov
push
lock
jp
mov
imul
jnp
push
sbb
fstpl
add
stos
dec
adc
lcall
addr16
pop
mov
sbb
stc
out
add
xor
adc
fstp
ret
sarb
xchg
ret
push
out
xor
dec
push
sbb
push
je
sti
add
pop
cmp
sub
icebp
dec
mov
call
mov
push
jecxz
repz
jnp
shlb
or
nop
ja
leave
imul
clc
lock
ja
ss
and
pop
sbbl
ja
loopne
push
and
xchg
jbe
push
loopne
jecxz
adc
inc
push
outsl
lods
xor
adcl
mov
mov
fisttps
out
cmp
cmc
popf
lcall
sbb
or
aas
cmc
push
rcrl
repz
and
sti
js
jno
sub
push
fnsave
out
test
js
fimuls
fs
add
add
mov
stos
xlat
mov
pop
out
xchg
in
ror
dec
sub
dec
lret
scas
inc
stc
je
fldcw
mov
in
add
clc
cmc
sbb
mov
cmc
lret
out
mov
rorl
in
xchg
push
out
pop
pop
pop
fstl
int
das
push
jecxz
push
pop
add
sbb
adc
or
shll
cmp
push
mov
ret
mov
jmp
xchg
mov
mov
ret
lock
ja
data16
in
mov
cmpsb
push
push
jl
rcrb
in
mov
aam
lock
or
jnp
test
sub
cmpsb
shrb
dec
pop
or
das
pop
push
push
pop
add
adc
imul
cmc
add
xchg
mov
mov
repz
xchg
lret
mov
fwait
neg
adc
add
add
popa
adc
lods
add
movsl
out
and
push
cmp
div
aad
xor
push
mov
ja
sbb
mov
xchg
dec
gs
jmp
ret
jecxz
ds
sbb
data16
cmp
cmp
add
cli
in
jne
cmp
js
notl
sbb
negb
outsl
jnp
cmp
mov
pushf
pop
jb
mov
es
xchg
popf
fs
pop
out
mov
fmuls
dec
mov
stc
mov
shlb
je
jb
out
push
jmp
subb
cs
jno
mov
in
xor
xchg
push
test
cmpsl
mov
clc
shrl
pop
mov
jmp
stos
stos
out
xor
sbb
test
sbbl
in
cmc
mov
mov
sbb
add
das
inc
mov
cltd
jbe
in
cmc
or
mov
push
sub
jecxz
dec
adc
jp
clc
test
lods
mov
push
jmp
icebp
mov
lods
lds
sub
jb
adc
mov
inc
popf
ret
aaa
out
jns
jecxz
push
sub
dec
aas
adc
cltd
xor
in
cld
push
dec
cmp
ds
outsl
cmpsl
xor
neg
stos
imul
ret
cmpsb
sub
sti
imul
sub
and
jmp
repnz
xlat
pop
scas
xor
jb
in
ljmp
ret
push
scas
cmpsb
jp
mov
lock
repz
lods
inc
mov
in
cmpsb
add
popl
sub
icebp
mov
lcall
and
fbstp
iret
xchg
mov
bound
les
sub
andb
or
mov
inc
cld
mov
hlt
push
into
scas
xchg
xchg
mov
in
stc
loope
dec
ja
mov
mov
xchg
mov
data16
lret
test
mov
inc
pop
cmp
bnd
js
imul
cmp
dec
int3
cmc
cmp
jae
dec
or
lods
cmpsb
movsb
jns
jbe
xor
and
std
adc
mov
clc
pop
sub
and
xchg
stc
cmpl
es
pop
xchg
and
and
or
shrb
jbe
stos
out
daa
adc
jmp
test
andl
cmp
mov
out
stos
jge
mov
aam
adc
fdivrs
iret
idivl
sub
mov
fwait
mov
xor
cmp
movsl
mov
mov
xlat
mov
shl
cli
pop
call
xchg
mov
mov
je
dec
jnp
cmc
out
inc
sbb
jne
jp
add
jmp
das
in
inc
mov
out
mov
push
sarb
jp
jbe
cmc
adc
pop
loope
ret
fs
jge
dec
mov
mov
jne
fs
in
adcl
xchg
loopne
dec
testb
inc
lcall
xchg
dec
xchg
jecxz
inc
repz
push
loop
cmp
sub
rcrl
inc
mov
jmp
ret
mov
mov
jmp
or
xor
cmc
lea
jecxz
dec
ret
ficoms
fists
pop
cmpsb
loope
or
jno
and
or
notl
call
mov
dec
shl
cmp
cmc
mov
push
inc
jo
cltd
lret
jae
jnp
and
mov
je
int
and
test
loopne
imul
stos
lods
inc
dec
out
imul
mov
jp
in
ja
mov
xchg
stos
std
lcall
push
aas
daa
out
push
frstor
inc
sbb
sub
std
mov
mov
sbb
add
push
lahf
aam
mov
in
push
mov
adc
push
arpl
out
adc
adc
into
dec
mov
sarl
add
rep
push
lock
jp
xchg
mov
cld
fwait
inc
divl
xor
in
shll
sahf
jge
insl
dec
or
jb
add
mov
cmc
scas
fsubl
push
jno
mov
sbb
fistl
aaa
jae
mov
and
xchg
out
push
push
mov
inc
ljmp
movsl
jl
dec
subb
and
jo
xlat
cmc
nop
movsb
fsubs
and
mov
test
repnz
movsb
cmc
out
lahf
ret
jecxz
orb
sahf
dec
mov
mov
clc
xor
aas
push
mov
jg
add
pop
push
fistpll
dec
push
imul
or
sub
stos
mov
int
cmc
mov
jae
dec
clc
lcall
mov
xchg
jb
nop
jb
sbb
mov
mov
xchg
andb
push
js
jecxz
adc
mov
jmp
loopne
inc
sahf
push
push
inc
inc
in
xchg
jne
adc
cltd
jne
mov
add
push
jno
ja
fnstsw
inc
out
in
xchg
jmp
xor
scas
adc
sub
mov
hlt
cmpsl
ret
in
fsubrs
iret
pop
mov
shl
sbb
outsl
mov
dec
movsb
repnz
mov
loope
div
adc
mov
lods
repnz
jbe
mov
mov
pop
std
xchg
imul
or
scas
mov
scas
sub
xchg
mov
mov
xchg
int3
ret
jbe
push
bound
mov
jb
cli
mov
dec
cmp
fistl
fwait
mov
out
pop
xor
inc
mov
xchg
sub
dec
push
cli
jns
cltd
dec
pop
push
jb
and
dec
pop
mov
and
mov
mov
rcr
daa
sbb
bnd
lods
add
cltd
repz
into
xchg
fisttps
fwait
sub
xor
pop
push
jne
je
jo
leave
lock
ja
push
mov
mov
mov
cli
inc
push
stos
frstor
testb
lods
jecxz
pop
cwtl
popa
jb
and
xor
mov
cmp
std
shll
push
xchg
pushf
flds
xchg
cmpsb
test
sbbl
jb
push
mov
xchg
xchg
pop
mov
cmp
repz
mov
outsl
pop
adc
cmpsb
aas
aas
adc
les
ret
nop
mov
std
insl
pop
test
xchg
aaa
mov
jl
insl
xchg
cmp
arpl
add
cwtl
pop
adc
fcomp
or
jnp
loopne
mov
fldt
add
jmp
arpl
xchg
sub
mov
aas
ror
aas
sub
pop
movsl
and
cs
mov
cmpsl
stc
cmp
repnz
imul
loope
loopne
jne
jecxz
adc
popf
cmp
movb
fisttpll
mov
mov
xchg
pop
in
cmpsl
or
rol
adcl
jl
and
push
mov
mov
pmaddwd
push
mov
push
ja
xor
loop
cld
addr16
mov
fwait
push
or
push
popa
lret
ret
jns
jne
fnsave
mov
hlt
movsb
jo
jae
in
and
mov
repz
mov
dec
sub
into
nop
cld
dec
push
and
shlb
jb
xchg
dec
pop
je
cmp
loop
aam
ja
and
mov
cli
fisttpll
sbb
xor
pop
cltd
popa
or
jb
out
sub
pop
or
rol
push
dec
xchg
dec
push
dec
ret
cmc
aam
cmp
data16
jbe
sbb
mulb
dec
movsb
popa
daa
arpl
sub
cmp
pop
xchg
sti
adcl
or
iret
repz
mov
ja
repnz
xor
lcall
fs
cli
fstpl
rcrb
mov
cwtl
movsb
mov
xor
pop
dec
jne
jecxz
pop
inc
adc
fstl
push
sub
in
mov
pop
cmp
stc
jmp
sbb
ja
popf
pop
mov
cmp
mov
mov
aas
dec
push
ficompl
inc
jb
dec
stos
cmp
lock
out
ret
sti
ss
inc
test
cmc
lret
into
xor
jne
mov
dec
add
jno
rcrl
mov
dec
inc
sbb
push
pop
lea
jl
sbb
dec
cmp
fwait
sti
frstor
jmp
clc
out
stos
shlb
stc
and
mov
pop
and
pop
rcrb
hlt
cmp
or
sbb
and
xchg
test
and
lock
xchg
or
sbb
in
inc
jne
in
out
lret
in
mov
idivl
jbe
movsb
cmc
mov
xchg
andl
mov
pop
out
insl
in
mov
popa
aam
jns
shll
lret
mov
or
pop
mov
jmp
pop
sbb
daa
mov
cmpsl
jecxz
mov
fimuls
mov
sub
add
push
inc
push
repnz
and
add
mov
cmp
pop
sbb
add
shrb
xlat
enter
pop
fcomps
cmp
xchg
push
inc
in
mov
mov
shr
test
jb
or
mov
adc
insb
lcall
lds
ret
dec
bound
cmc
push
add
jb
faddl
mov
inc
nop
sub
ja
lock
pop
mov
imul
xchg
dec
inc
pusha
leave
test
push
mov
sub
push
lds
jo
jmp
imul
rcr
sbb
js
or
fldl
cli
pop
ret
mov
ljmp
stc
jp
sbb
cmp
lcall
enter
gs
sub
testl
loopne
xchg
or
sbb
data16
xchg
enter
jmp
jae
sti
in
mov
fcoml
pusha
xchg
xorb
pop
test
in
mov
add
cld
jno
in
sahf
sub
repz
leave
out
scas
xor
cwtl
les
scas
cltd
scas
out
cmc
orl
in
jb
cmpsl
jmp
fistpll
shrl
stos
dec
sub
sbb
sarl
pop
aas
imul
sti
lcall
xor
and
jecxz
mov
jae
push
sub
or
test
xlat
push
loop
stos
fnstsw
pop
push
pop
and
mov
sub
mulb
or
lock
pop
testl
fwait
push
jge
push
test
lods
popf
cmp
xor
inc
push
dec
aam
mov
xor
inc
mov
dec
daa
js
and
inc
push
iret
mov
mov
imulb
fbstp
into
push
push
dec
inc
jp
out
xchg
push
inc
and
dec
pop
jno
mov
or
flds
sti
shrb
lcall
rolb
cmp
push
mov
and
jecxz
ret
push
jne
fstp
es
repnz
cmc
adc
or
or
push
pop
es
or
cli
test
add
cltd
frstor
cmpsb
xchg
sti
lcall
or
aaa
stos
mov
movsb
pop
pop
repnz
sub
test
aas
dec
in
add
fdivrl
cltd
movsb
imul
xor
cltd
jbe
xor
enter
push
stos
data16
stc
push
jp
insl
sbb
shll
pop
data16
into
or
ja
insb
scas
push
inc
cmpsl
ja
add
fisttpll
int
lahf
xor
jp
adc
mov
fbld
sbb
xchg
loope
inc
push
enter
frstor
jno
jns
cmp
sub
pop
in
push
adc
dec
lahf
mov
js
mov
adc
shl
sbb
cmc
xorl
pushf
ja
sbb
jl
add
out
cmpsb
xchg
cmp
cli
sub
dec
outsb
fs
or
jg
jb
mov
sahf
out
popf
mov
fisttps
xor
in
add
fucomp
out
inc
dec
inc
cmpsb
imul
or
faddl
and
les
cmp
sub
xchg
add
inc
add
xor
lcall
ficomps
sahf
sbb
jo
xchg
dec
cmpsb
mov
mov
xchg
lret
mov
dec
sub
lds
mov
clc
jmp
les
fisttpll
lcall
sarb
jae
pop
mov
push
js
ret
push
shrl
jne
jb
xchg
movl
cmc
push
jne
jecxz
mov
iret
xlat
inc
mov
out
mov
lods
xchg
jns
not
mov
push
in
cs
jno
test
xchg
jp
push
outsl
fcmovnb
or
and
adc
sbbl
cmp
repz
pop
add
jmp
pop
nop
loopne
fs
mov
xchg
in
push
sbb
pop
data16
out
and
mov
inc
sub
pop
inc
lahf
lret
mov
enter
in
ljmp
add
mov
pop
adc
dec
dec
push
push
lahf
pop
jb
add
or
iret
xor
popa
insb
daa
mov
pop
xor
cmc
aas
sub
ljmp
stos
adc
jecxz
inc
loopne
ja
mov
add
lds
cmp
jns
xchg
loopne
xor
jp
jnp
add
rorl
mov
mov
in
mov
dec
push
cs
iret
in
push
adc
xchg
mov
mov
negl
sub
jnp
xchg
xor
je
repnz
push
or
lahf
ret
pushf
loop
jno
fcmovnbe
daa
mov
jecxz
scas
nop
loopne
mov
pushf
mov
jmp
loopne
in
jg
push
dec
scas
add
fwait
xchg
lods
jg
int3
inc
jae
sub
or
inc
fnsave
stos
dec
idivl
mov
icebp
xchg
dec
push
lahf
addr16
add
cmp
push
rcrb
popf
push
jmp
adc
in
mov
insb
lock
out
mov
mov
push
xchg
mov
or
add
dec
xchg
testb
dec
es
cli
cmc
sub
daa
push
testl
repnz
dec
jne
xchg
cmc
mov
jae,pn
fstl
psllq
lahf
std
in
push
in
insb
cmp
xor
mov
cmp
push
sarb
rcll
mov
in
dec
in
daa
xlat
mov
out
cmp
testl
mov
rorl
jno
cmc
or
xor
out
jne
pop
mov
repz
pop
pop
sub
sbb
dec
test
cmc
inc
out
fstps
jp
into
sub
xor
pop
mov
arpl
push
aam
dec
adc
xchg
loop
leave
imul
xchg
loopne
pop
lea
mov
bound
test
cmpsl
jo
xlat
dec
fstpl
into
mov
mov
adc
push
mov
repnz
in
js
xor
rolb
mov
and
jns
push
adc
jbe
push
addr16
xor
test
and
inc
stos
add
cvttps2pi
cmpsb
lcall
push
mov
rcrb
xchg
mov
daa
in
sub
push
cs
jmp
das
dec
enter
idivb
rorl
ret
xchg
pushw
lahf
mov
adc
sbb
sub
scas
mov
push
jp
and
push
xchg
push
loopne,pn
or
xchg
sbb
xchg
or
adc
nop
arpl
outsl
add
jno
aam
mov
cmpsl
clc
out
or
bound
out
fdivrs
cs
mov
or
mov
andl
mov
adc
dec
dec
pop
sub
fimuls
out
lods
shll
cli
push
mov
xor
in
stos
pop
fnstcw
lahf
jnp
repnz
fnstsw
jne
cltd
mov
pop
in
stos
cmp
insb
pop
loopne
jb
ss
pusha
outsl
lods
cmp
loopne
sub
mov
adc
add
in
add
mov
or
fstpl
insb
sbb
adcl
xchg
frstor
stos
sbb
dec
jbe
jge
cmp
in
push
jne
out
push
sbb
push
mov
xchg
insl
cmp
add
popf
inc
sub
xor
inc
ret
jae
adc
insb
push
incl
mov
inc
jbe
pop
xor
in
pusha
jbe
pop
cltd
hlt
mov
scas
xchg
xchg
xlat
mov
std
xchg
pop
jmp
fwait
jae
insb
and
fisubl
push
xor
jecxz
mov
push
test
push
lcall
fbstp
aad
adc
mov
inc
in
jne
bound
dec
stos
mov
stos
ret
jno
ficoml
push
divl
add
pop
dec
or
inc
pushf
movsb
int3
out
outsl
insb
loop
lret
in
add
faddl
jns
fcmovu
mov
jb
push
push
ja
cmp
mov
dec
mov
push
sahf
lods
fisubl
xor
das
pop
xor
cmpsl
test
sti
sub
push
pop
pushf
lods
ja
jp
sub
fdivl
xor
in
push
and
mov
push
in
adcl
ja
ret
cmpsb
dec
jb
mov
in
adc
repnz
cli
xchg
nop
fcmovbe
mov
rol
mov
push
pop
jp
inc
or
lds
or
jmp
mov
and
or
sub
mov
test
dec
sbb
fsubs
pop
jae
js
jmp
loopne
sti
push
jg
mov
imul
stos
jb
testl
sbb
ljmp
fucomp
push
and
fcmovbe
pop
dec
in
mov
sbb
fs
push
sub
fcompl
cmc
and
cmp
bound
and
cmp
sbb
push
sbb
pop
repz
adc
jecxz
sbb
xor
std
cmp
push
jecxz
cs
negl
imul
mov
pop
and
repz
shll
xor
xor
ss
cmc
mov
or
jecxz
inc
pop
sub
mov
faddl
xlat
aas
or
xchg
das
fstps
mov
and
andb
stc
in
sbb
clc
mov
bnd
in
pop
or
cli
cmpsb
fldcw
mov
inc
sub
js
dec
test
scas
pusha
xchg
sahf
and
add
insl
xchg
in
lock
mov
mov
in
jnp
xchg
outsl
sbb
in
cltd
jb
or
loopne
ret
cmp
sar
sub
jle
xchg
pop
adc
mov
and
imul
jae
imul
sbb
mov
je
adc
divb
bound
out
test
jne
lcall
mov
xchg
mov
shll
inc
mov
inc
xor
imul
cs
insl
mov
leave
xorb
ja
cmp
pop
in
addr16
pop
mov
jb
bound
aaa
rorl
jnp
sti
cmc
dec
ss
insb
out
dec
stos
mov
out
sbb
mov
push
sahf
jb
jnp
adc
fimuls
popf
mov
dec
test
push
aas
cs
enter
or
loop
pop
jns
xchg
loopne
shll
scas
jle
loop
and
lahf
mov
addr16
push
pop
sub
cmp
pop
cmp
mov
cmc
ficomps
fmull
fcmovnu
popa
and
aad
repnz
rorl
scas
rorb
xor
aam
mov
add
and
arpl
pop
ja
pusha
lods
mov
jo
rolb
sbb
cmpsb
pop
inc
jmp
shrb
scas
sbb
lods
xchg
sbb
imul
dec
lret
xchg
fcoml
cmpsb
aaa
xor
dec
in
mov
sub
pop
es
int
and
wbinvd
adc
gs
fimuls
mov
push
mov
mov
jge
xorb
or
bound
clc
fistpll
dec
push
insb
push
loopne
jae
push
mov
outsb
inc
mov
jp
adcb
mov
jae
fwait
popa
sbb
adc
frstor
adc
xor
mov
in
push
xchg
push
pop
sbb
stos
and
sub
add
sub
jecxz
imul
int3
mov
xlat
mov
nop
aas
mov
cmp
lock
or
push
mov
dec
and
idivl
cli
sbb
add
clc
int3
loopne
ret
lods
fwait
clc
frstor
mov
lock
jns
pop
add
dec
cmp
ficoml
push
sub
pop
and
pop
inc
outsb
in
sti
jae
pop
mov
arpl
inc
adc
mov
fiadds
in
dec
mov
call
jne
scas
dec
rclb
test
pop
stc
stos
insb
pop
int3
repz
xchg
mov
adc
cmpsb
pop
aam
das
ja
cltd
adc
bound
and
mov
addr16
add
in
jns
pop
fcmovnb
repnz
lock
pop
push
imul
inc
push
mov
fwait
sub
imul
jae
insb
sbb
imul
xchg
sub
inc
fs
cmpsl
adc
in
out
push
jb
mov
pop
xchg
mov
push
jle
sbb
gs
sbb
mov
add
nop
fs
mov
test
mov
add
mov
out
adc
lahf
sti
out
cmp
add
pop
pop
scas
push
ss
push
jo
fsubs
add
and
xchg
in
xlat
cmp
loope
in
nop
cmpb
mov
sbb
dec
mov
xlat
xor
loope
out
push
xor
lret
adc
xchg
cmc
or
in
xchg
xchg
or
adc
sbb
and
add
pop
or
mov
mov
xchg
mov
fdivp
jne
pop
gs
popf
xchg
jae
jns
bnd
sbb
insl
pushf
mov
imul
jmp
cmc
dec
and
xor
pop
fldl
aam
fistps
shrb
das
push
clc
cld
das
fidivl
ss
mov
and
lahf
fistpl
mov
test
ljmp
cmp
scas
mov
test
jnp
xchg
loope
jmp
dec
sbb
mov
dec
and
mov
ljmp
mov
xchg
int
daa
rcll
lret
cmc
jne
sahf
jmp
pop
gs
xchg
xor
into
mov
test
mov
mov
shll
jecxz
xchg
jb
adc
or
and
scas
lret
sub
in
mov
dec
data16
mov
mov
arpl
ss
hlt
xor
std
iret
cmp
lcall
mov
arpl
jecxz
repnz
add
out
negb
jae
pop
inc
pop
cmc
jmp
mov
jb
sarl
int
outsb
pop
sbb
ja
and
sub
adc
pop
std
in
and
outsb
pop
aam
imul
sarl
mov
mov
push
pop
daa
imul
jge
pusha
add
leavew
lods
insb
or
in
mov
inc
int3
cmp
stos
sar
push
mov
jmp
mov
xor
xchg
hlt
inc
aaa
or
neg
mov
cld
dec
inc
shll
xor
mov
out
addr16
scas
inc
cmp
shll
jae
xor
dec
fldt
lock
pop
mov
repnz
xchg
jo
fstpl
hlt
pop
xchg
fistps
and
push
pop
pop
cmpsb
inc
mov
mov
jmp
xor
rclb
add
insb
ret
test
stos
jp
rcll
xchg
cwtl
in
adc
xor
cmc
push
out
sarl
adc
orl
fiadds
jae
ja
mov
or
nop
xchg
incl
lahf
push
stos
movsb
cmc
pop
cmp
jmp
push
cmc
sub
ljmp
or
lcall
mov
nop
ret
jns
lret
pop
outsb
fwait
jge
cmp
jns
cwtl
in
mov
xchg
mov
jns
insl
loopne
repnz
pop
jecxz
xchg
cltd
sbb
ss
jmp
sbb
call
push
pop
cmp
or
mov
fdivl
hlt
mov
add
push
cmpsb
inc
push
sub
es
js
dec
sub
imul
inc
mov
arpl
mov
sarb
pop
xor
pop
sub
mov
insb
sbb
inc
fcoml
repnz
mov
out
jns
dec
pop
repz
push
jmp
mov
call
stc
leave
popf
and
mov
popa
rorl
pop
cmp
das
dec
jae
lret
in
or
cmc
sub
fildll
and
mov
lcall
xchg
adc
sub
mov
cmc
decl
xor
xchg
fsubl
xlat
or
stos
test
in
sbb
clc
fisttpll
jne
push
cmc
leave
push
jne
push
xor
orl
xchg
out
push
push
lock
aaa
jmp
add
movsl
les
mov
mov
ja
push
addb
jne
dec
stc
or
mov
loopne
fistl
lahf
mov
aam
negl
jmp
sti
scas
mov
lcall
out
jp
adc
xor
pop
outsb
je
out
es
push
cli
push
pop
fld
push
mov
repnz
jp
sbb
cmpsl
ficoml
push
dec
push
es
fdivs
test
mov
bound
test
sub
addl
test
adc
mov
testl
in
out
stos
sub
cltd
shl
shlb
cltd
adc
pop
xor
add
jne
mov
mov
adc
xor
dec
jae
iret
rclb
adcb
mov
xchg
in
pop
lcall
hlt
sbb
ror
out
ds
ljmp
mov
cmp
das
mov
pusha
jmp
adc
cmp
pop
pop
and
sahf
mov
mov
movsl
sbb
fidivs
ret
fprem1
mov
fnstsw
inc
test
ret
nop
les
sub
jnp
js
xchg
cltd
repnz
test
sarb
mull
add
or
cwtl
outsl
scas
fstpl
ja
push
cmp
gs
loopne
cli
or
mov
push
outsl
mov
in
lea
scas
or
sub
xor
lods
ret
test
lret
aam
cmp
jb
mul
or
mov
pop
pop
movsl
in
repnz
cmp
mov
adc
sub
ficomps
xchg
lret
xchg
addb
lcall
add
xlat
cld
outsb
fldl
sub
dec
xor
notb
add
cmp
inc
mov
pop
xor
lret
sbb
ja
arpl
cmc
popa
unpckhps
add
xor
les
cmpb
int3
lock
in
iret
insb
adc
dec
pop
xchg
mov
xchg
mov
xchg
loopne
test
lret
mov
sbbl
or
daa
mov
xor
sbb
mov
add
out
insb
inc
jmp
mov
push
lahf
adc
outsb
repz
in
pop
jbe
sub
inc
aaa
imul
mov
or
xor
scas
mov
cmpsl
adc
out
ja
leave
leave
pop
lock
je
cmpb
cmc
fildl
ret
inc
mov
cld
ja
es
xlat
cmp
jae
adc
sub
lret
push
addr16
stos
mov
cmp
pop
and
in
cmp
add
push
pop
jg
mov
push
sbb
js
pop
rcrl
rorb
subb
push
push
loope
jnp
push
es
clc
mov
out
xor
pop
or
xor
outsl
mov
mov
xchg
mov
sbb
enter
jp
in
mov
jnp,pn
cmp
mov
xor
popa
mov
in
aaa
xor
repz
cltd
fisttpl
ljmp
adc
or
daa
sti
mov
cmc
outsb
or
mov
inc
pusha
jb
sbb
mov
mov
dec
push
sbb
lea
xorl
jno
lock
jae
popa
push
les
mov
adc
mov
sub
rep
cmpl
jae
inc
push
imull
jmp
mov
in
xor
call
mov
dec
jns
fdivp
popa
xchg
push
out
sbb
jmp
cld
fidivs
repz
and
lock
add
mov
xchg
cmp
hlt
or
mov
sub
jge
mov
mov
cmp
arpl
ljmp
push
adc
xchg
pusha
jno
push
rol
imul
enter
xor
mov
or
insb
cmc
test
mov
mov
sbb
or
mov
mov
pop
fimuls
ja
xor
fstl
lcall
and
outsb
xchg
add
out
imul
lret
leave
mov
jecxz
aad
fsts
insl
xchg
fdivl
push
addr16
add
test
stc
out
mov
bound
icebp
nop
dec
xchg
cmp
push
jp
mov
loopne
and
push
cmc
jecxz
jle
in
popf
and
push
push
jne
cli
xor
shll
aam
outsl
fldcw
dec
mov
in
jmp
subl
sbb
jnp
add
scas
xchg
mov
fwait
cmc
icebp
lcall
inc
add
loopne
outsb
sub
js
cmp
mov
popa
push
dec
dec
bound
js
iret
in
cmp
cmc
dec
je
jae
fnstenv
dec
jne
xchg
scas
pop
test
repnz
xchg
add
inc
cmp
mov
xor
addb
fidivl
pop
sub
outsb
add
dec
icebp
das
fst
out
sub
cmc
push
mov
js
cmp
push
sub
xlat
roll
iret
outsb
xchg
jae
cmp
sub
pop
xchg
pop
mov
xchg
mov
mov
mov
notb
mov
enter
out
cmp
lcall
adc
out
jecxz
dec
jne
sahf
shlb
pop
jb
or
mov
cmp
out
mov
jp
stos
jbe
out
jo
les
rolb
add
jo
fsubl
pop
adc
mov
jnp
repz
repnz
imull
cltd
lcall
into
pusha
add
pop
inc
pop
push
push
and
xor
fbstp
lods
in
mov
aas
jnp
and
and
and
nop
inc
cmpsb
cs
out
jle
stos
mov
jae
adc
sub
sbb
dec
push
imul
pop
js
pop
jo
pushf
mov
dec
mov
in
fisttpll
xlat
fwait
idivl
out
pop
frstor
xchg
mov
es
mov
jecxz
clc
notl
aam
in
sub
gs
fstl
fmul
pop
arpl
adc
inc
imul
jae
push
loopne
idivb
xor
push
ss
add
js
loope
fldl
fistps
xchg
jno
rcrb
inc
lods
mov
test
inc
add
cmp
mov
fbstp
clc
in
movsb
pushf
pop
stc
rolb
test
rol
jb
pop
cmpsb
imul
ret
cmp
mov
push
fstpt
mov
cmp
xor
sub
jl,pn
ss
ljmp
loop
sub
mov
xor
xor
push
movsb
jmp
fistpl
mov
xchg
jp
and
or
xchg
mov
jne
ficompl
mov
arpl
mov
xchg
pushf
mov
adc
mov
clc
jae
cmc
adc
daa
push
movhps
jae
cmc
in
scas
pop
add
shl
sub
push
in
pop
movsb
jns
and
pop
sti
pop
add
cltd
testl
lock
xor
inc
outsl
jne
fcompl
xchg
add
push
ss
arpl
cmp
ja
and
insl
mov
mov
mov
imul
pop
and
push
fldt
stc
pop
insl
scas
test
mov
in
int
mov
push
iret
in
ljmp
and
dec
mov
nop
in
arpl
dec
and
cmp
push
pop
fmuls
iret
sbb
icebp
out
mov
mov
add
pop
xchg
fdivs
lock
ss
sbb
data16
repnz
lret
push
inc
mov
inc
mov
mov
and
or
push
lods
pop
xor
or
jb
mov
jecxz
mov
in
testl
sbb
xchg
jl
inc
jbe
mov
sub
mov
aaa
cmp
and
jbe
insb
in
jo
cld
icebp
dec
jae
xor
and
movl
mov
fstpl
xorb
scas
or
mov
add
push
ds
lods
fstpl
cmp
or
jae
jno
mov
dec
push
xchg
jb
cmpsl
inc
mov
inc
lock
fimuls
jnp
and
push
pop
test
or
jmp
mov
ficoms
xchg
sbb
in
cmp
out
push
mov
out
js
mov
stos
lret
enter
addr16
out
sub
scas
ss
std
cmp
and
lret
out
inc
andb
mov
mov
mov
xchg
hlt
or
jnp
push
outsl
jl
in
in
outsb
xor
jmp
or
adc
arpl
mov
mov
xchg
icebp
sub
pop
sbb
stos
aaa
lds
jbe
rorl
in
cs
add
pop
cmpsl
and
jbe
add
push
push
loopne
aad
push
inc
jno
pusha
scas
push
mov
mov
push
jae
bound
jo
jns
and
in
scas
out
jae
aaa
sbb
inc
sbb
pop
sahf
mov
cltd
test
xor
cmp
xor
mov
mov
test
insl
hlt
mov
xlat
pop
xchg
in
cmpsb
xchg
jp
cmp
fistl
jbe
cwtl
cmp
or
int3
fisubl
pop
mov
push
sub
aaa
fnsave
push
push
sbb
nop
xor
scas
jl
ret
ftst
jns
push
dec
jae
mov
fwait
mov
jp
cmp
ret
xor
pop
sti
jne
insl
cld
out
in
iret
inc
mov
mov
dec
adc
lods
js
dec
insl
pop
add
sbb
in
or
div
int3
fs
mov
push
jb
mov
pop
stos
aad
bound
ret
xchg
jns
sub
mov
push
mov
push
pop
in
addr16
popa
xchg
jecxz
and
fcompl
outsl
pop
push
pop
xor
popa
loop
idivl
outsb
adc
daa
stc
xorb
lods
cmp
sbb
and
movsb
outsl
mov
push
loop
adcb
fiadds
orl
mov
je
fsubl
add
dec
xchg
mov
inc
aas
frstor
mov
mov
dec
push
mov
mov
ljmp
jne
jmp
loopne
sbb
jecxz
mov
mov
xor
icebp
mov
dec
push
pop
push
push
out
cs
imul
cli
dec
mov
fidivl
orb
dec
insl
js
mov
insl
add
fcmovu
leave
push
sbb
or
fldcw
or
aad
in
dec
push
cmpsb
push
test
dec
ficomps
in
jb
cmc
int3
push
lcall
cmp
loopne
pop
jb
sbb
dec
outsb
sub
xor
pop
push
and
adc
adc
mov
mov
aad
mov
lret
push
pop
dec
loope
notl
xchg
jno
cmp
dec
mov
shr
bound
popa
push
inc
dec
add
into
loope
jecxz
jp
jb
cltd
push
in
xchg
mov
jp
not
out
out
mov
jg
ljmp
push
bound
cmc
push
mov
in
and
sub
dec
cmp
mov
pop
xchg
xor
sbb
enter
leave
cmp
sub
mov
test
stos
add
mov
repz
out
jo
add
test
jne
lcall
test
adc
cwtl
xlat
cmp
pop
and
outsb
pop
pushf
or
adc
add
add
mov
xchg
add
inc
cwtl
in
cli
insb
dec
xchg
sub
fmul
cmp
xor
push
and
jg
stos
fucomp
cmpsl
pop
mov
xchg
cmp
push
push
mov
push
push
testl
push
aam
mov
sub
and
and
in
outsl
push
rcrl
add
push
xchg
mov
in
mov
sahf
in
or
cmpsb
stos
cmp
stc
or
cmpsl
imul
adc
inc
cmc
mov
and
incl
adc
xor
jbe
jecxz
adc
mov
in
push
orb
pop
jns,pt
ret
push
out
lret
jle
lret
rorl
jno
in
pusha
lods
outsb
and
out
movb
mov
lcall
inc
fsubs
xor
jg
lds
and
sbb
repnz
jne
xor
in
testl
cmp
or
ja
mov
loope
sub
lds
push
out
jg
xlat
mov
imul
lahf
cmp
rcrl
out
aad
sub
fwait
in
add
or
outsl
cmp
dec
lea
popf
mov
push
insb
adc
addr16
jb
pop
push
jecxz
jae
lock
cmpsl
jno
arpl
sub
fs
mov
inc
xchg
adc
dec
in
pop
mov
xor
sub
mov
lock
or
subl
jle
mov
cmp
and
mov
xchg
jge
xchg
iret
outsb
lret
xchg
dec
scas
insb
xchg
cli
jns
fidivl
fwait
adc
in
in
inc
in
sarl
outsl
cmp
sub
mov
in
cmp
icebp
lret
cmpsb
add
mov
sbb
stos
fsubl
add
mov
adc
add
outsl
mov
int
sub
js
stc
cmc
je
push
lock
xchg
cwtl
lahf
or
mov
mov
enter
dec
or
xor
xchg
les
adc
or
out
xchg
aad
int3
shll
js
and
mov
lret
inc
sub
add
daa
jbe
loop
push
mov
pop
mov
lods
and
in
adc
imul
pop
loopne
roll
lcall
mov
repnz
fldt
add
lret
out
mov
inc
aaa
or
and
add
daa
push
mov
outsb
fst
or
jnp
and
insb
stos
movsl
xor
mov
sarb
loopne
jl
jle
push
mov
arpl
mov
lds
jl
mov
add
in
dec
jae
mov
fwait
and
inc
pop
outsb
setle
outsb
andb
adc
mov
test
rolb
jns
mov
sbb
lcall
popa
ljmp
clc
test
loope
sarl
push
mov
xchg
repnz
mov
lea
push
shrb
jmp
sti
push
ja
call
clc
sahf
fisttpll
push
xor
in
xchg
jge
rorb
cli
mov
imul
ljmp
jno
nop
aad
mov
fstps
insb
or
dec
movsb
xor
mov
insl
cld
pusha
fstl
daa
mov
mov
pushf
mov
pop
and
adcl
mov
shlb
jno
pop
and
lcall
fsubs
fsubl
ficoml
and
xchg
sbb
loop
js
lods
adc
negl
push
rclb
mov
add
push
sbb
jmpw
and
ficoml
jp
std
adc
ja
push
dec
push
lret
idiv
incb
xchg
lret
xchg
and
xchg
jl
mov
fistl
mov
jne
pop
shlb
mov
mov
mov
xor
push
inc
aam
xorb
dec
jmp
mov
dec
lcall
aam
mov
jno
pop
data16
push
mov
shll
addr16
outsb
push
xorb
dec
cmpsb
jb
xor
sbb
add
mov
js
in
or
jg
mov
lret
fistpll
mov
jne
frstor
dec
and
popa
fs
loop
and
lcall
aam
inc
imul
fldl
iret
dec
xchg
push
pop
in
push
xchg
and
jne
cmp
jae
js
mov
mov
push
mov
pop
insl
frstor
mov
jmp
mov
mov
pop
lods
fmuls
jns
sarl
and
cmc
enter
fisttpll
jb
xchg
fisubs
movsl
jle
jne
call
push
cmp
mov
icebp
cmc
jp
sbb
pop
mov
mov
fistpll
fnstenv
lods
cmp
xor
push
mov
mov
pop
out
pop
cmp
out
cmpsb
inc
cs
sub
je
mov
cld
outsl
dec
cmc
jno
scas
push
cmp
lods
lret
xchg
cli
insl
mov
or
fnstsw
mov
in
dec
andl
repnz
pop
push
sbb
fstp
icebp
enter
push
xrelease
int
xchg
js
pop
push
movsb
rcr
notb
dec
mull
out
cmpsb
out
lea
negl
jmp
mov
arpl
pop
sub
aaa
mov
mov
mov
in
dec
lds
adc
adcl
mov
jecxz
xor
in
iret
mov
out
stos
push
adc
mov
and
and
ds
or
clc
repnz
arpl
outsl
mov
popa
lcall
fdivrl
push
sbb
pushf
stc
add
ret
and
dec
lret
fnsave
shlb
push
loope
push
movsl
je
jle
jns
ret
adc
jns
jge
in
push
jbe
adc
mov
scas
mov
or
xorb
mov
divl
xchg
leave
push
popa
fdivs
dec
or
data16
add
dec
ss
sti
outsb
xor
jmp
outsl
mov
mov
jecxz
les
and
sbb
jp
sbbl
test
adc
mov
sub
or
pop
mov
dec
mov
mov
cmp
xchg
gs
js
jle
inc
xchg
jb
bound
mov
ret
jmp
or
or
add
out
mov
cmp
shl
push
lea
int
fstp
mov
adc
aam
jns
ret
aas
ret
in
nop
sub
jns
jg
iret
rorb
xor
adc
test
cmpsb
mov
repz
leave
dec
imul
les
mov
jnp
stos
and
stos
push
adc
inc
push
mov
add
out
inc
in
in
je
jns
iret
fildll
dec
ja
add
xor
cmp
xchg
jae
push
xchg
push
jne
cwtl
jl
shrb
mov
sbb
mov
cmp
in
nop
mov
jb
dec
ljmp
add
cmc
push
cli
lcall
add
icebp
adc
rcrl
stc
insb
fsts
dec
cmp
cld
pop
dec
mov
out
pushf
out
repz
xlat
sub
imul
in
ljmp
push
fadd
sti
pop
outsb
jl
sbb
mov
out
repz
lret
scas
or
xor
mov
in
fcoms
and
push
sub
adc
arpl
pop
cmp
fistps
in
lds
mov
imul
mov
mov
out
jecxz
cmpb
inc
dec
push
ljmp
rorb
xor
fwait
outsl
or
pop
add
js
sbbb
cmp
fstpl
sarb
sahf
and
cli
push
ljmp
ss
xchg
gs
mov
lock
sbb
xchg
dec
jnp
mov
test
cltd
movsl
rcr
ret
cmp
dec
cld
lcall
jno
jb
fistpl
outsl
pop
cmc
divl
lea
xor
jp
xchg
or
pop
xor
mov
lods
push
sahf
dec
push
mov
aam
add
sti
xor
adc
icebp
int3
jns
test
xchg
dec
pop
fs
pop
gs
data16
iret
dec
fnstsw
inc
rcr
sub
dec
cltd
jns
mov
push
aad
jle
pusha
jmp
loopne
subl
faddl
ja
cmc
adc
pop
sbb
icebp
das
jne
ds
dec
push
adc
sub
mov
jnp
movsb
pop
push
ja
sbb
cmp
sarb
xor
xor
pop
push
xor
test
rcll
add
daa
adcb
loopne
mov
daa
insb
mov
cmp
sbb
mov
adc
mov
fucom
das
scas
push
add
stos
push
aaa
lods
xorb
xchg
fwait
aad
out
push
and
aad
insl
xor
aaa
and
icebp
lods
add
lds
out
fdivrs
mov
xchg
in
xor
jl
cmc
in
and
sar
int3
negl
scas
insl
add
xor
stos
mov
das
inc
mov
xchg
into
sti
stos
lds
or
mov
bound
mov
xchg
cs
add
jmp
lock
out
jne
pop
cmp
sub
in
adcb
es
rcl
ficoms
xlat
jl
xor
roll
loope
loopne
and
decl
sahf
loop
xchg
out
pop
out
fldl
or
mov
jecxz
les
sti
jbe
jl
fistpll
push
daa
js
in
sbb
adc
out
jecxz
xchg
das
cli
in
test
cwtl
out
or
stos
push
ror
pop
pop
cmpsl
sub
out
mov
int3
and
xchg
sbb
ror
push
push
sbb
lsl
jl
je
jle
mov
lods
and
push
xchg
jl
test
cmp
push
jns
xchg
iret
test
fisttps
outsl
mov
jle
loope
adc
scas
flds
outsl
sarb
push
subl
pop
cmc
push
adc
add
pop
ds
loopne
pop
dec
dec
popa
negl
or
cmc
mov
aam
xor
push
adcb
or
xchg
fmull
mov
fstpl
mov
daa
and
jae
jmp
sub
std
lods
or
jb
fsts
ds
insl
pop
pop
or
jne
mov
aaa
adc
pop
xor
in
and
clc
jo
movsb
push
shrb
pop
popa
loope
inc
gs
cwtl
aaa
outsb
xor
jmp
dec
jmp
fst
data16
and
or
pop
sub
in
jg
add
push
mov
inc
dec
xor
xlat
mov
inc
jae
mov
stos
jecxz
jb
repz
pop
test
in
sub
mov
add
loop
js
repz
movsl
imul
enter
in
sub
loop
pop
mov
jb
ds
lcall
xchg
jg
or
xor
push
jg
push
rcrb
arpl
xor
es
lds
jl
test
aam
pop
adc
sbb
or
shlb
or
mov
mov
ret
ret
je
int3
in
lret
cmc
xchg
jmp
add
je
negl
jb
push
repnz
cmc
rorl
jmp
mov
push
inc
cmpsb
add
loop
jmp
push
dec
aaa
frstor
cwtl
cmp
jl
int
dec
xchg
adc
outsb
aad
scas
fwait
sbb
imul
cmp
pop
call
adc
dec
jp
repnz
xor
lock
aas
aam
inc
mov
subb
gs
pop
lds
lea
and
push
and
rcrb
mov
cmc
ret
cwtl
frstor
rcrb
adc
mov
insb
fldenv
rep
in
aam
shrb
cmpb
inc
loope
xor
cmp
xchg
sbb
or
insb
jbe
aad
cs
sub
int3
pop
pusha
imul
mov
arpl
pop
cmp
inc
aad
add
arpl
nop
xchg
and
fucom
xor
push
divps
lock
fcomps
pop
pop
push
arpl
mov
jl
ss
popf
rorl
int
lcall
adc
jp
push
cmpb
mov
dec
or
jnp
subb
and
push
repnz
mov
cmp
bound
xor
repz
jb
add
gs
gs
imul
or
out
into
pop
int
ljmp
xlat
inc
add
dec
repz
lea
mov
loop
mov
repz
jb
mov
fldenv
mov
fisttpl
ja
fnstsw
addr16
cmc
pop
js
pop
scas
push
dec
cli
mov
addr16
and
mov
mov
mov
stos
and
loopne
stos
rorb
lods
cli
inc
in
xor
and
dec
shr
mov
aaa
push
shll
cmp
sub
fimuls
xchg
dec
nop
dec
sub
icebp
jbe
das
jb
cltd
idivb
arpl
pop
and
jmp
icebp
mov
xchg
stc
fildl
sub
es
std
fsubl
mov
sbb
loopne
mov
dec
mov
jne
dec
ljmp
shlb
inc
push
cli
dec
loopne
and
jecxz
in
jbe
or
mov
fsubs
cmc
mov
dec
or
cs
pop
sbb
mov
mov
fiadds
fcoms
jno
loope
pop
pop
push
mov
stos
iret
xor
inc
mov
cmp
push
cmp
mov
or
lods
dec
outsl
sub
arpl
shrl
lods
std
jbe
inc
movsb
mov
dec
mov
push
mov
xchg
mov
jae
adcl
sbb
jne
xor
jae
out
push
or
adc
iret
and
ret
lds
mov
repz
fstpl
lcall
stc
dec
leave
idiv
push
xlat
imul
stc
or
adc
jbe
sub
cmp
mov
nop
jmp
subl
pop
push
jne
lea
pushf
sub
movsl
mov
pop
push
inc
or
fs
xchg
mov
js
add
push
jno
in
das
add
mov
scas
cmp
jae
pop
movsl
push
adc
sbb
jne,pn
movsl
sub
inc
test
int
test
fstp
cmp
in
sahf
je
pop
notb
fisubrl
jno
loopne
cmpsb
dec
mov
mov
ror
jl
fisubs
pop
fisubrl
sahf
sbb
imul
mov
in
mov
sbb
sbbl
inc
jmp
mov
sub
dec
lds
outsb
addl
mov
push
or
push
jb
in
jno
pop
xchg
scas
mov
jns
pop
shr
repnz
cmpl
fldl
adc
imul
mov
sub
jp
and
cmp
repz
lret
mov
movsb
mov
jb
xor
sub
and
lea
cmp
test
mov
imul
cmpsb
xchg
xchg
cmp
int3
mov
cmp
xlat
data16
popf
mov
pop
pop
repnz
call
and
adc
cmp
test
dec
push
cmp
jo
sbb
rclb
mov
out
cwtl
mov
mov
pop
js
mov
pop
imul
jge
mov
rcrb
pop
pop
mov
fsqrt
and
jnp
and
xchg
dec
rcl
out
clc
add
dec
pop
stc
test
scas
or
rcr
or
imul
mov
frstor
popf
rcl
mov
lret
shlb
push
push
repz
lds
and
lahf
jle
xor
cmp
sahf
aaa
mov
scas
push
loopne
arpl
or
in
dec
int3
int3
call
sub
mov
cwtl
or
lahf
jne
xchg
nop
mov
in
js
jo
in
pop
rcrl
pop
cmp
push
mov
jo
icebp
ljmp
pop
bnd
fstps
pop
mov
inc
dec
mov
xor
ret
lret
ret
mov
jecxz
and
dec
push
add
arpl
adc
test
popf
add
pop
push
inc
mov
or
fldt
and
cmp
cmpsl
push
das
xor
sti
pop
inc
sub
cmp
jnp
mov
lock
xor
push
insb
adc
sub
and
mov
cmp
push
and
xor
mov
xor
mov
int
mov
inc
push
pop
jno
sbb
pop
dec
fiaddl
aas
sub
adc
jp
push
cmpsl
lret
iret
fldt
sub
jb,pt
arpl
push
dec
bound
leave
aad
mov
fsubl
cmc
fldlg2
int3
test
rcll
dec
jmp
negb
clc
adc
jne
in
cmc
dec
movsb
orb
xchg
jmp
clc
cmc
lret
ret
pop
frstor
ja
inc
dec
out
loopne
sub
scas
out
lods
sub
jle
int
pop
xchg
xor
ja
adc
loope
jae
ret
push
cmpb
shll
call
shlb
xchg
inc
or
mov
mov
sbb
cmpsb
call
push
pushf
jecxz
das
and
mov
dec
xchg
and
nop
jno
sub
jb
lret
and
nop
sbb
inc
fistps
out
test
not
inc
aaa
ljmp
loop
shlb
xchg
icebp
les
dec
add
pushf
in
movl
mov
mov
push
les
loope
push
stos
push
ja
jno
fldl
pop
mov
cmp
sub
repnz
enter
neg
ficoml
dec
mov
sar
sbb
leave
pusha
jne
je
dec
push
push
sbb
jecxz
xchg
mov
mov
leave
jno
jb
je
data16
mov
or
in
cmc
mov
pop
jge
jp
and
icebp
push
ljmp
rolb
or
out
mov
leave
xchg
jle
dec
lret
adc
inc
negb
fiadds
jne
jb
sub
xchg
jp
repnz
pop
add
pop
push
jno
rorl
loopne
loopne
dec
sti
repz
in
out
sub
enter
jns
push
or
in
fs
sahf
je
xchg
cmp
sbb
push
push
cmp
jl
ss
and
dec
push
xchg
xchg
les
dec
mov
sub
jmp
xor
inc
mov
pop
mov
pop
push
daa
in
jge
imul
inc
inc
pop
lods
mov
cmp
std
movsl
and
mov
dec
mov
ja
adc
jns
cmp
cmpsb
mov
xor
out
pop
mov
outsb
xor
sub
lea
imul
mov
cmc
fwait
in
and
cmpsl
mov
pop
cmc
imul
mov
test
imull
pop
lahf
jge
lcall
enter
cmc
int
mov
je
cltd
filds
inc
jo
in
mov
xor
push
mov
adc
add
mov
pop
sub
mov
iret
mov
cmp
jno
mov
and
xchg
outsb
outsl
into
mov
fxch
iret
adc
testl
adc
mov
or
inc
dec
in
loopne
js
jbe
insl
mov
dec
in
mov
cmc
arpl
xchg
pop
jecxz
loopne
sbb
fcmovu
clc
or
inc
mov
xchg
and
mov
push
gs
mov
lret
mov
in
lock
push
in
lods
filds
xchg
sub
sub
jmp
mov
imulb
es
jl
outsl
mov
and
stos
pusha
jns
push
int3
test
repz
cmp
outsb
into
out
mov
mov
mov
cmp
arpl
sbb
mov
fstpl
xor
inc
outsb
shr
clc
in
push
or
rorl
es
xchg
sub
cmpsl
js
repz
movsl
icebp
mov
mov
ja
loope
les
in
and
jp
and
cmp
xchg
mov
ss
xchg
jno
cwtl
jne
icebp
sub
sbb
push
les
mov
sub
ret
sbb
out
je
icebp
mov
xlat
adc
mov
cmp
outsb
pop
mov
in
rcl
ja
fstpl
nop
cmp
cmc
cli
out
into
pop
mov
mov
movsb
pushf
cmp
jge
pop
repz
sub
lret
lods
mov
adc
dec
mov
push
clc
jl
mov
xor
and
sahf
imul
int3
stos
outsl
pop
cmc
fildll
adc
jns
insb
in
outsl
push
stc
test
in
dec
decl
push
or
mov
and
addr16
aad
imul
jecxz
sbb
mov
loopne
aaa
out
sub
test
add
cltd
mov
mov
add
pop
outsb
sbb
in
jecxz
iret
movsb
sbb
scas
push
dec
fmulp
divl
clc
fst
xchg
imul
aas
popf
xchg
cmovb
clc
jbe
lcall
jb
adc
or
lret
nop
int
mov
mov
fistl
cmp
cmpsb
shr
jae
xor
aas
xchg
mov
sbb
and
pop
push
outsl
test
pusha
fisttpll
hlt
push
or
aas
pop
mov
stos
push
imul
ret
les
jp
xchg
jno
xchg
aas
add
fisubs
cmp
decb
inc
xor
rorb
cmp
orb
pop
mov
insl
test
loop
int3
popf
add
or
loope
in
xchg
fs
push
cmp
xchg
lahf
sub
cmp
cmp
je
test
fisttpll
sbb
ja
xor
jno
shr
int3
mov
adc
lret
xor
scas
push
insl
repz
lods
dec
das
push
test
in
pusha
mov
mov
pop
jmp
dec
rol
ss
pop
jnp
cmp
fsubs
jbe
insb
and
mov
pop
loopne
xlat
pushf
dec
push
mov
cmp
xor
add
and
xchg
cmc
andb
mov
int
adc
and
cmp
and
pop
add
mov
test
xor
fcompl
dec
or
push
les
shll
sbb
pop
and
fistps
rcrb
jbe
sub
sbb
mov
gs
mov
addr16
lods
ljmp
push
mov
mov
sbbl
and
in
mov
mov
ja
in
cli
outsb
xor
out
idiv
test
jmp
in
rclb
out
sbb
cmc
adc
lret
push
dec
or
test
jmp
out
jne
add
loopne
in
xchg
inc
mov
fadd
test
ja
cmc
cltd
gs
scas
shrb
push
or
pop
mov
inc
jae
cmc
iret
loope
ss
aas
push
stc
pusha
push
inc
push
mov
fs
xchg
aam
mov
push
lret
xor
sub
les
movsl
jp
out
ljmp
scas
push
push
jbe
pop
scas
stos
xlat
push
mov
sahf
push
sub
cmp
mov
cmp
sbb
lods
sti
not
dec
cmp
pop
mov
inc
in
or
jno
mov
pop
cmp
and
stos
pop
and
inc
xchg
mov
in
dec
sub
insl
idivl
lods
xchg
adcb
push
adc
mov
inc
jle
in
push
or
int
lea
cmp
in
or
divb
inc
movsl
adc
mov
push
or
lods
test
repz
and
xchg
orb
cltd
push
push
jmp
outsl
insb
imul
cwtl
cwtl
cmc
push
inc
jecxz
lret
rcrb
in
out
fwait
mov
mov
mov
ja
data16
cmc
push
ret
xchg
icebp
mov
xlat
add
sbb
fimull
or
pop
and
mov
imul
cmp
mov
xchg
jge
cmp
mov
das
in
sub
dec
and
fucom
shrl
into
lds
push
bound
sbb
pop
xchg
push
pusha
lcall
push
movsl
fisubl
cmp
sbb
mov
in
add
rcr
out
notb
fistpll
loopne
jl
or
and
aas
xchg
cmc
cmpsb
lods
cmp
lret
push
jae
inc
setp
or
scas
mov
jmp
cmp
pop
sti
test
div
gs
mov
mov
mov
enter
mov
push
and
imul
mov
pop
addb
inc
jns
sub
sbb
sub
or
cmp
int
in
dec
mov
push
lret
aas
test
sar
sub
inc
adc
add
scas
hlt
mulb
push
insl
push
in
sbb
cmc
sub
jg
ficomps
sbb
push
sub
out
test
sbb
jmp
fs
or
inc
idiv
mov
in
lods
imul
je
add
shlb
roll
mov
inc
mov
pop
aad
insb
cmc
pop
push
fnstcw
ss
xchg
or
leave
push
sbb
sbb
inc
jne
adc
cmp
int3
bnd
cmp
sbb
insl
repz
in
mov
ljmp
inc
add
test
fistl
mov
int3
push
dec
out
sbb
stos
xchg
push
xor
adc
lret
out
in
mov
mov
int
les
popa
push
cmpsl
jecxz
movsl
dec
pop
mov
dec
ljmp
rcr
jl
xchg
jb
mov
mov
jbe
das
mov
mov
push
ss
gs
clc
push
pop
jb
xor
stos
mov
push
imul
mov
add
mov
sbb
fsubrp
fsave
jbe
movsl
ret
pop
mov
fidivrs
cmc
pop
jo
push
out
add
fcmove
ja
repz
fadd
in
pop
lahf
and
cmp
imul
adc
insb
or
lcall
and
add
inc
sub
syscall
inc
sbbb
push
fnstsw
sbb
scas
cmc
sbb
jb
out
mov
jns
imul
dec
cmp
adc
pop
mov
add
push
push
and
pop
fnstsw
mov
inc
or
adc
in
xchg
cmc
and
mov
push
mov
push
filds
cmp
mov
out
cmp
cmp
std
hlt
fists
add
mov
and
inc
pop
dec
lock
pop
mov
pop
in
fwait
jb
es
inc
mov
lcall
add
dec
jnp
fcmovnbe
adc
adc
inc
dec
jp
fwait
pop
mov
call
sub
or
dec
jns
xchg
mov
pop
add
lahf
mov
xchg
fistpll
dec
jne
fwait
or
jbe
ror
and
mov
or
lods
push
pop
lds
mov
rcr
xchg
inc
out
xchg
into
popa
dec
insb
test
clc
push
mov
mov
js
cmc
mov
mov
inc
pop
shl
in
jae
xor
mov
ja
mov
xlat
sub
aaa
mov
stos
shr
stc
insb
xor
lea
adc
push
insb
out
test
mov
out
pusha
enter
mov
cmpb
dec
xor
jb
stos
in
inc
pop
dec
in
ret
mov
sbb
jns
inc
cmc
mov
js
jo
cmp
mov
mov
lea
imul
fnstsw
pop
lea
imul
xchg
arpl
dec
inc
pushw
push
aam
mov
mov
mov
jmp
lcall
xor
fucom
adc
js
testb
or
pop
push
push
addr16
mov
dec
hlt
sti
and
xchg
cli
in
fbstp
fstp
cltd
fs
cmp
jns
inc
cld
pop
sbb
xchg
pop
repz
jecxz
repz
xchg
fildl
push
test
sbb
push
push
inc
add
xor
cmp
inc
push
and
popf
cmp
mov
sti
pop
push
sbb
and
dec
test
loopne
inc
out
adc
es
push
jecxz
int
jns
bound
inc
or
ret
and
pop
jp
and
dec
push
mov
pusha
push
lret
or
mov
ja
ja
cmc
jmp
fsubr
stos
mov
aaa
hlt
cmp
sub
mov
scas
mov
or
cltd
xchg
nop
push
sub
mov
xchg
mov
cmp
jmp
pop
es
lock
inc
fcmove
in
bound
in
hlt
ffree
neg
mov
push
jae
jecxz
mov
cwtl
fmull
ret
jmp
jns
add
jmp
mov
lock
mov
insl
push
mov
or
sbb
test
pop
jo
mov
ljmp
push
das
cwtl
pop
push
out
aaa
pop
push
or
iret
cli
xor
scas
aaa
xchg
and
and
xor
inc
cmp
icebp
mov
lods
adc
sbbb
push
mov
mov
jmp
or
shll
mov
popa
rclb
das
sub
mov
push
popa
lock
sub
jno
or
cmp
xchg
xchg
mov
movsl
sbb
pop
movsb
adc
push
mov
push
inc
pop
jbe
lods
inc
xchg
cmc
add
adc
in
xor
sahf
inc
ja
stc
js
insb
jns
aam
push
call
mov
aaa
jmp
dec
mov
stos
jb
inc
scas
dec
jae
or
or
mov
or
js
inc
jle
in
std
and
and
out
mov
ljmp
pop
fwait
rclb
xchg
inc
dec
dec
cmp
mov
mov
test
aaa
pop
sbb
mov
mov
dec
pop
sub
mov
fists
fiaddl
jmp
popf
add
pop
shlb
sub
mov
aaa
and
in
aas
ret
mov
movsb
mov
cmc
and
testl
add
idiv
jae
and
mov
sbb
iret
fisubrl
add
xorl
cmc
inc
rcll
shlb
pop
out
rcr
repnz
push
das
lds
mov
sub
inc
cli
cmp
jno
pop
in
addr16
push
faddl
fimuls
sbb
out
cmpsb
fisttpll
shll
lods
cmp
sub
fnsave
lods
outsl
in
repnz
and
xchg
repnz
jmp
lock
mov
outsb
dec
ljmp
dec
js
stos
push
jmp
mov
shlb
enter
imul
ja
fisubs
das
popa
cmc
lret
repz
mov
sbb
push
xor
js
pop
mov
sbb
xor
sbb
cmp
mov
stos
cmc
stos
movb
xrelease
xor
ret
lea
xor
mov
test
and
cli
insb
test
dec
fstl
push
jecxz
aas
lcall
xor
pop
jp
lret
add
nop
int
inc
pop
mov
pop
fdivrs
mov
test
mov
or
enter
bound
movsb
push
push
fst
pop
ss
fwait
cli
cmp
jo
pop
push
in
add
add
adc
lods
cmpsb
data16
enter
out
les
mull
mov
test
lds
jae
push
xor
bound
aad
test
test
enter
push
inc
mov
pop
daa
fsubl
push
idiv
dec
orb
ds
je
fs
in
cld
sbb
fldl
or
cmc
lret
lcall
cmp
faddl
inc
jg
fdivl
aas
xor
dec
lcall
out
mov
stos
faddp
hlt
pop
fldcw
mov
dec
sbb
mov
das
jne
mov
aas
pop
lock
jnp
cmc
sub
lods
pop
jb
sub
and
mov
notb
movsb
ja
cmpsb
jle
js
cld
sbb
cmpsb
xor
pop
jne
in
aaa
int
sub
ret
lret
cmpsl
sub
sub
sti
loope,pn
push
push
jmp
hlt
cmc
push
lds
rorb
or
lock
sub
daa
pop
push
cmp
push
push
pop
add
shlb
mov
or
nop
cmp
sbb
cmc
mov
push
xor
push
fldt
jl
jl
iret
jb
push
inc
orl
mov
mov
pop
popw
jmp
mov
cmc
lcall
jae
sub
cld
dec
dec
sbb
push
push
inc
add
addr16
sub
cld
push
pop
jge
jbe
dec
sbbb
stos
sti
outsl
movsb
sub
sahf
pop
mov
leave
xor
sti
sbb
pop
sahf
mov
dec
sahf
jne
push
sbbb
push
mov
dec
xor
mov
mov
mov
dec
adc
jo
repnz
mov
add
adc
jbe
lock
cmp
push
std
iret
dec
xchg
int
loop
dec
adc
movsb
xchg
inc
mov
mov
push
adc
mov
cli
into
bound
mov
pop
add
dec
cli
lret
test
adc
imul
dec
jns
dec
pop
adc
and
shl
mov
mov
ja
mov
mov
and
shr
adcb
jg
mov
scas
loop
pop
push
repnz
dec
cs
nop
fimull
das
outsl
and
dec
pop
test
arpl
inc
mov
rorl
repz
inc
mov
add
xchg
fisubl
fnstenv
cmc
notl
push
and
lret
push
fidivl
cld
xchg
push
xchg
into
pop
add
jl
pop
out
inc
inc
jns
imul
xor
mov
rorl
scas
or
jbe
fidivl
mov
push
in
mov
sub
out
xor
fisttps
and
push
inc
scas
and
fdivl
lahf
sub
sahf
mov
xchg
xchg
fdivs
aad
enter
xchg
cmpsl
mov
outsb
clc
test
push
and
frstor
cmp
sbb
dec
dec
fnstsw
test
mov
dec
fisubrl
sub
aam
mov
in
imul
ss
inc
cmpb
cmp
idivl
mov
mov
addb
aad
jle
jecxz
das
and
movsb
icebp
mov
mov
mov
int
jns
push
sub
cmc
add
or
xor
andb
and
jne
sarl
mov
ja
push
lea
mov
jecxz
sub
lret
das
and
push
cmc
sbb
lock
mov
out
xlat
cmpl
dec
inc
xchg
stos
jmp
lods
xor
mov
fstp
cmp
mov
imull
test
push
dec
loopne
add
addr16
enter
cmpsl
jmp
push
dec
push
test
mov
sub
dec
pop
push
jne
jmp
dec
in
and
mov
add
xor
push
dec
add
dec
adc
mov
mov
cltd
xchg
inc
inc
inc
ret
stos
mov
cmpsb
lock
ret
inc
mov
jmp
push
mov
enter
xlat
push
fmull
lret
mov
test
mov
arpl
dec
into
xorl
in
mov
repz
fisttpll
sub
pop
xor
mov
add
insb
and
push
imul
jbe
in
pushf
repnz
jecxz
paddusw
sbb
fstl
adc
mov
jecxz
pop
xor
jbe
stc
ljmp
sub
mov
int
jecxz
inc
mov
push
test
test
and
add
push
pop
sbb
shlb
flds
sub
jo
jo
out
fnstcw
mov
ss
cltd
mov
sahf
xchg
fmul
or
repz
movsb
ljmp
cli
xlat
in
push
pop
push
neg
fisttpl
inc
lock
xor
jbe
es
mov
sub
push
cld
fistl
mov
and
add
mov
pop
ljmp
addr16
rol
jecxz
jp
add
inc
and
lods
push
sub
out
insb
idiv
and
icebp
test
mov
jmp
mov
lods
in
fwait
mov
push
fistpll
dec
les
scas
cmp
loop
pop
dec
testb
lret
push
dec
mov
idivb
jb
dec
jl
dec
ret
pop
mov
outsb
es
cs
ja
sbb
repnz
or
xor
mov
cmp
das
in
inc
xchg
rcl
in
mov
add
push
and
mov
cmpsb
jb
xchg
cltd
icebp
mov
ja
dec
mov
xchg
in
dec
adc
mov
dec
and
out
in
fists
dec
adc
in
add
fcmovb
scas
js
mov
and
lcall
loop
cmpsb
ret
jne
dec
ffree
mov
loop
int
jne
test
xchg
or
js
in
jne
mov
mov
dec
scas
bound
repnz
and
or
insb
jge
stos
dec
fs
cmpsl
loope
test
mov
xlat
mov
outsl
xchg
loopne
dec
pop
xchg
jecxz
add
pop
test
adcl
push
xor
insl
push
dec
pop
paddsw
push
cmpsb
jp
cmp
lock
lods
xchg
add
jp
sbb
neg
jp
out
shlb
mov
std
lods
and
and
jb
inc
cli
pop
cmpsl
adc
mov
negb
push
call
aas
xchg
sub
jecxz
scas
add
mov
sbb
and
mov
or
outsl
movsl
add
mov
sub
mov
sbbb
pop
add
hlt
jne
fisttpll
sahf
int3
pop
sub
dec
enter
nop
or
cmpsb
jecxz
adc
inc
cltd
mov
in
rep
fs
adc
in
js
mov
ret
fstp
pop
loopne
pop
mov
pop
hlt
aaa
dec
mov
push
cmp
cmp
lods
sub
mov
repz
jne
jae
xor
cmp
jo
outsb
jns
sti
outsl
mov
xchg
mov
sbb
in
aad
fcompp
and
enter
movl
pop
jmp
adc
or
inc
test
adc
mov
scas
fwait
jp
movl
xor
mov
mov
in
in
in
xorb
inc
aaa
xlat
mov
add
cmc
into
mov
mov
mov
cmp
sub
popf
rcr
jp
nop
mov
and
pop
addb
iret
dec
das
mov
adc
ret
jno
fsubs
out
jno
into
adc
cli
pop
fstp
iret
xor
jae
push
jecxz
cmc
lret
inc
aam
xlat
push
out
inc
test
movsl
fdivr
pop
lahf
and
in
les
and
rorl
ljmp
cmc
xchg
lahf
fwait
leave
mov
dec
popf
xor
andl
sbb
inc
or
leave
aaa
mov
in
xlat
or
push
outsb
scas
sub
or
es
mov
mov
mov
shl
lret
mov
loop
push
das
and
hlt
fldl
cmp
lods
stc
fisubrl
fimull
shll
scas
out
xor
cltd
mov
or
push
hlt
mov
xor
cmp
jo
rcll
xor
dec
dec
pop
enter
push
xor
mov
outsl
sbb
cmc
mov
nop
add
jg
mov
cmpsl
dec
or
pushf
scas
sub
xchg
jo
frstor
sbbb
rcrl
adc
adc
mov
xor
cmp
push
or
pop
daa
xor
pop
scas
iret
pop
inc
outsl
sub
push
inc
jmp
jecxz
out
add
jecxz
in
mov
mov
or
aam
jae
xchg
xor
jno
jl
mov
stc
into
jo
mov
mov
jg
mov
xchg
fists
xor
gs
repz
pusha
outsl
stos
or
sbb
aas
nop
add
js
cs
sti
rolb
insb
dec
sbbl
mov
push
aaa
in
jp
mov
int3
ret
sbbb
lds
and
ss
out
cli
aam
add
xchg
mov
mov
add
add
movsb
push
imul
mov
adc
loopne
aaa
xchg
jp
xchg
pusha
lods
pop
sub
loop
mov
fcmovbe
test
add
popa
inc
in
inc
ds
cmpsb
rcll
hlt
xchg
scas
lock
mov
adc
into
xchg
dec
out
fldcw
push
scas
jns
xchg
jmp
and
mov
int3
fs
dec
xorl
mov
cmp
fdivp
fwait
in
shrb
aaa
mov
adc
aad
pop
hlt
std
sub
cmp
inc
mov
jp
icebp
shrb
mov
dec
jg
cli
jne
mov
cli
lret
sub
test
int3
xor
jl
loop
in
inc
rcr
xchg
xchg
pop
pushf
sbb
adc
loop
ss
aad
repz
push
cmc
sbb
ffree
out
and
pop
fmulp
test
mov
dec
pop
in
xchg
inc
gs
inc
cmc
loopne
xorl
iret
ss
dec
loope
and
sub
bound
in
or
push
sbb
shr
cmpsl
lret
enter
jae
imul
jge
out
cwtl
cmp
bound
xchg
mov
push
cmovp
pop
or
mov
scas
mov
xor
loopne
mov
shll
mov
data16
or
addr16
lcall
mov
lock
pop
xchg
sub
dec
mov
cmpsb
push
pop
xor
sub
loope
push
pushf
jnp
sub
loopne
out
inc
xlat
fbstp
sbb
cmc
pop
fstpl
xchg
je
out
mov
push
mov
xchg
lods
pop
shrl
dec
or
lret
sub
or
outsl
lock
pop
insb
repz
gs
jne
data16
aad
lock
xchg
or
xor
cmpsl
arpl
sti
sub
cmc
scas
mov
cmpsb
int
pop
lods
dec
js
inc
mov
jns
ljmp
pop
in
pop
stos
sub
scas
adc
aam
fcmovne
in
test
test
or
lret
xchg
pop
mov
imul
mov
and
sbb
and
aad
clc
movsb
daa
sub
pop
mov
mov
sbb
outsb
pop
dec
sub
repz
push
inc
movsb
xchg
jb
ret
jae
xchg
in
cmpsl
imul
mov
sar
stc
in
out
lret
pop
mov
cmp
ljmp
adc
xor
mov
jno
and
cltd
mov
aaa
fiaddl
scas
jmp
scas
rcl
cmpsl
sahf
ja
dec
pop
mov
mov
andl
mov
pop
das
pop
in
adc
adc
cltd
dec
fs
xchg
popf
and
stos
pop
dec
loopne
icebp
out
lret
notb
in
sub
loope
repz
mov
lods
aam
dec
sahf
lods
jno
pop
sub
xor
cmp
fcoml
frstor
mov
sbb
mov
rcr
mov
jge
in
inc
leave
xchg
bound
jb
mov
or
inc
sbb
or
jle
movsb
repz
sahf
cli
into
cld
mov
push
lahf
testl
xchg
in
ljmp
cmp
mov
sub
lcall
jp
mov
enter
div
scas
cli
in
enter
add
pop
leave
lcall
mov
in
lock
std
add
xor
out
shlb
jnp
and
fldl
jp
pop
mov
jo
sub
jg
fistpl
bound
imul
push
fisubrs
outsb
popf
jbe
scas
dec
add
lret
fldt
and
jecxz
ja
nop
lea
or
and
dec
ss
xchg
jmp
or
xchg
jne
xchg
dec
adcl
nop
divl
popa
add
xchg
pusha
add
jns
and
xlat
sbb
repz
mov
xor
mov
jmp
stos
out
dec
test
or
cmp
ds
fiaddl
in
popl
or
mov
add
dec
int3
je
ffree
sbb
push
in
out
in
xchg
dec
xor
in
sub
jecxz
xchg
mov
orb
lret
and
dec
mov
mov
cmpsl
xor
and
icebp
imul
daa
sub
mov
inc
inc
jbe
dec
mov
lahf
loopne
mov
xchg
stos
push
shrb
push
int3
movsb
push
or
jae
cmc
jmp
push
das
dec
inc
in
in
arpl
movsl
jmp
pusha
mov
call
push
dec
push
xchg
xlat
insb
cmp
mov
or
lret
icebp
adc
jb
in
dec
sbb
popa
int
lahf
dec
adc
int3
fbstp
scas
dec
inc
push
cld
jle
inc
mov
xchg
pop
mov
add
repnz
out
cmp
adc
xor
push
fwait
push
addr16
mov
jne
arpl
inc
cmp
push
or
sbb
cmp
dec
mov
stc
pop
in
push
lea
jbe
adc
mov
push
loopne
out
mov
inc
cmp
cmp
push
push
xchg
stos
and
xchg
xor
lock
in
stos
arpl
xacquire
adc
and
scas
lods
and
jno
daa
stos
lock
popa
lock
or
push
lret
repz
mov
cli
mov
jns
push
rorl
inc
outsb
xor
mov
testl
cmp
or
jnp
mov
mov
ds
push
movsl
mov
or
repnz
jo
test
mov
inc
push
or
shl
imul
sbb
or
bound
fnsave
popf
push
jbe
stos
popf
ds
into
gs
adc
mov
stos
leave
add
mov
fs
xchg
sbb
sbb
and
jmp
loopne
push
xchg
mov
imul
jno
hlt
mov
sbb
adc
fldl
ja
stos
push
out
adc
scas
lcall
jno
mov
pop
push
jmp
das
dec
in
inc
ja
jge
pop
scas
loopne
xchg
inc
daa
not
pop
xor
std
mov
push
jnp
and
stos
or
or
bnd
mov
add
arpl
mov
repnz
psubq
push
cmc
add
dec
mov
pop
push
outsb
sbb
inc
dec
mov
push
fisttpll
adc
push
ss
pop
jmp
push
js
jecxz
in
adc
xchg
outsl
loopne
in
lret
push
jmp
aam
or
mov
push
ret
in
mov
pop
sti
lock
jb
jecxz
ror
jne
insb
cmc
add
cmp
gs
cli
fs
and
movsl
sub
xchg
cmc
xchg
jns
popa
jecxz
mov
mov
in
cmp
add
push
mov
call
jb
inc
xchg
sbb
lds
cmpsb
mov
push
mov
ljmp
lahf
mov
int
adcl
push
enter
xor
ja
fnsave
mov
push
sub
sbb
arpl
xchg
xor
mov
mov
mov
jnp
frstor
sbb
cmp
jl
movsb
cmpsb
jb
dec
jnp
and
call
vmwrite
mov
test
cltd
push
push
vmulps
je
cmc
fiadds
sub
lret
sub
jle
lret
jmp
lock
mov
jae
movsl
or
pop
je
and
push
adc
adc
sbb
adc
xor
popf
jne
repnz
cmp
lret
cmc
inc
xlat
sub
imul
and
dec
mov
rolb
int
out
imul
xchg
push
push
decb
inc
test
test
sub
imul
add
loopne
dec
idiv
outsl
mov
bound
sti
xchg
adc
out
adc
ficoms
loope
stc
cmc
mov
mov
outsl
fisttpll
es
or
push
icebp
rolb
repnz
cs
adc
dec
out
sar
pusha
cmpsb
cli
stos
inc
rcl
mov
sahf
es
inc
xlat
jnp
mov
xlat
repnz
mov
xor
adc
in
add
push
pop
cmpxchg
and
int
push
frstor
movsb
dec
rorb
sub
or
dec
or
pop
mov
shlb
lahf
cli
xor
add
xchg
cli
mov
in
mov
outsb
add
push
xchg
fisubrs
cmc
adc
divb
loop
stos
mov
push
inc
sti
pop
mov
jno
movsb
push
sub
rcll
in
das
push
stc
scas
jle
jnp
xor
testl
test
mov
push
xlat
and
frstor
sbb
lret
inc
cmpsb
int
jb
js
mov
fsubrl
mov
sub
mov
lahf
or
jb
subl
ret
in
pop
cwtl
stos
and
jae
addr16
mov
out
out
xchg
xchg
in
pop
xchg
loope
repz
js
mov
icebp
push
je
pop
cmp
pop
jns
jle
push
int
js
xchg
cmp
sub
testb
jmp
jmp
icebp
call
pop
xchg
pop
add
mov
ret
lods
cmp
lea
negb
dec
or
push
fdiv
push
fbstp
outsb
divl
pop
lea
fisttpll
xchg
sbb
js
xchg
ds
xchg
shlb
push
and
sti
xor
cltd
hlt
in
shlb
inc
jb
incb
xchg
mov
jne
ret
movsb
popa
sub
jmp
lcall
mov
repnz
arpl
mov
test
sub
out
sbb
lock
cmc
sbb
fabs
fnsave
enter
add
push
int3
fucomip
clc
push
cs
or
scas
lcall
jbe
and
ja
ret
lods
fwait
outsb
icebp
or
hlt
or
mov
movsl
jbe
nop
lcall
sub
mov
icebp
ret
scas
jno
sti
das
imul
jb
pop
pushf
cld
mov
adc
shr
clc
shll
jecxz
in
jge
shr
push
xor
cmp
lds
jbe
test
dec
fiadds
hlt
xchg
pop
shrb
mov
push
adc
in
imul
enter
repz
xor
or
jbe
rcl
pop
jo
iret
cmp
outsb
jecxz
stos
lods
out
mov
inc
in
inc
and
mov
sahf
pop
mov
ja
add
xor
arpl
ret
jg
les
in
and
xor
mov
xchg
scas
test
jmp
fcoml
jge
cmc
fisttpll
sub
push
sahf
cmp
into
mov
dec
push
mov
cli
adc
int
ja
movsl
enter
fnsave
adc
and
inc
nop
xlat
lret
adc
jg
or
jbe
xor
fistl
lret
idivb
add
mov
add
dec
rcr
out
out
push
mov
pop
mov
dec
sub
add
fisttpll
test
fucomip
pop
mov
ja
rcrb
sub
popa
xchg
in
add
lea
ficompl
jmp
or
xor
mov
fisttpll
jae
pop
adc
daa
sbb
ds
mov
cli
or
mov
cmp
cmc
jno,pt
imul
in
stc
lods
add
cmc
or
xchg
jbe
cld
jnp
repz
mov
add
test
mov
fnstsw
sub
jle
int3
push
fnsave
cltd
dec
pop
mov
test
dec
stos
mov
or
sarl
jb
mov
jecxz
cltd
cltd
fldcw
pop
pop
fstl
push
jne
or
and
faddl
jmp
out
xchg
sub
mov
and
jecxz,pt
push
jp
rolb
jne
pop
pushl
aas
jbe
es
cmc
in
lret
and
push
setp
imulb
jg
inc
jecxz
in
and
rcl
aam
mov
jmp
push
jns
daa
mov
xor
adc
xchg
fdiv
imul
call
jb
or
mov
pop
in
and
loopne
lcall
clc
ljmp
mov
add
test
sub
fldl
dec
push
out
inc
pop
pop
sub
pop
fs
rclb
imul
notl
call
sub
cmpsb
addr16
and
jb
jle
fadds
mov
pop
push
push
fucomp
test
xchg
in
jbe
iret
dec
repz
sub
lcall
repz
out
cli
jecxz
in
push
and
xchg
or
cmp
push
sub
or
aas
sub
jae
xor
push
sbb
cmp
add
stos
dec
pop
js
insl
xchg
fwait
mov
aad
push
add
mov
or
inc
pop
shl
mov
cmp
movb
adc
xchg
push
scas
insl
xchg
stc
js
stos
int3
rep
and
notl
cltd
pop
int3
jnp
movlps
and
jne
data16
sbb
jae
dec
je
iret
push
add
test
push
inc
inc
outsl
sbb
arpl
xchg
cmc
sarb
push
mov
mov
dec
cmp
fwait
mov
dec
dec
sub
clc
xor
scas
pop
std
mov
fisttpll
and
xor
sub
imul
xor
sbbl
test
jne
sbb
or
in
lsl
loope
mov
pop
mov
test
sub
jns
lock
dec
sbb
or
outsb
shl
aas
add
lret
mov
jmp
push
sbb
adc
jecxz
pop
fnstsw
sbb
jmp
xchg
or
pop
mov
mov
cmc
lret
add
mov
pop
test
aad
pop
xor
or
scas
bound
loopne
ja
aam
inc
add
pop
mov
add
fnstsw
push
pop
cmpsl
add
sub
adc
pop
or
aam
setbe
xchg
roll
fs
or
lret
jbe
repz
add
mov
orb
inc
pushf
inc
push
sub
xor
arpl
fstl
adcb
add
cmp
in
dec
int
cld
cli
jbe
repnz
inc
mov
in
xchg
jne
add
out
add
pop
dec
cmc
mov
xor
lods
xchg
pop
xor
cmc
js
test
call
pop
inc
mov
push
dec
pop
jmp
cli
out
cltd
jp
mov
push
or
test
adc
orb
mov
and
inc
imul
or
aad
repz
inc
movsb
sbb
ficomps
aaa
or
inc
pop
mov
fisttpll
push
fisubs
xchg
inc
push
cmc
jmp
shrb
jmp
in
rol
xor
loop
mov
mov
mov
mov
cmpsl
in
test
fldl
lahf
push
popa
stc
pop
insb
sbb
fmuls
fldl
loop
mov
das
inc
insb
push
jg
outsl
xchg
adc
jmp
jp
in
int3
negb
jbe
or
mov
push
add
cmp
cmc
mov
mov
push
pop
xchg
ficoml
mov
xor
mov
arpl
adc
mov
stos
jno
cmp
cmc
enter
aam
rcr
ja
ss
add
aam
pop
xlat
popf
jb
mov
shrl
and
and
cmc
sahf
mov
int
sbb
fsubs
insl
add
jecxz
inc
pop
push
jb
cmc
inc
mov
mov
loope
arpl
imul
adc
xchg
cmc
bound
or
movsb
pop
pop
daa
mov
sarl
cmp
lret
inc
xchg
jo
push
fiadds
lahf
icebp
dec
pop
shrb
jae
daa
or
push
cmp
push
jne
jecxz
arpl
xchg
rcr
in
in
ljmp
fiadds
dec
and
rol
xlat
xor
div
ret
leave
in
ror
in
dec
mov
es
push
fsubrs
mov
mov
fimuls
lret
lods
xchg
jge
pop
push
cld
lret
sbb
mov
daa
mov
in
dec
add
pop
lock
in
cwtl
out
pop
fnstsw
shll
sbb
jb
inc
mov
add
add
xlat
cmpsb
sahf
pop
fistps
add
add
ret
lret
pop
in
out
jae
push
repnz
sub
mov
xor
shll
mov
aas
dec
cld
dec
jmp
enter
mov
push
cmpsb
f2xm1
sbb
jo
pop
ret
jmp
jecxz
inc
and
cmc
std
sub
inc
add
pop
adc
cmp
iret
in
or
and
pop
cmp
jne
fsubrl
test
lock
xchg
or
ficoms
jle
cmp
pushf
loope
repnz
xchg
aad
add
and
xor
fldl
pop
pop
stc
pushf
ljmp
pop
scas
cmpsb
in
pop
aaa
mov
pushf
loope
and
sahf
xchg
and
lcall
xchg
aas
push
lock
mov
cli
inc
xchg
jns
dec
pusha
inc
jmp
adc
test
je
in
aam
dec
fstpl
push
cmc
jmp
out
sub
das
mov
push
mov
xor
push
adc
iret
push
xchg
mov
aaa
xchg
inc
xor
mov
rorb
repz
ret
cmpsl
inc
xchg
jbe
adc
mov
stos
pop
push
or
xor
or
jmp
rcrl
xchg
mov
das
fs
or
jecxz
mov
sbb
mov
jno
test
or
outsb
out
xor
aad
out
test
lcall
xchg
mov
cmp
arpl
loop
pop
dec
jb
add
mov
sbb
pushf
stos
dec
pop
stos
insb
loope
xchg
pop
and
jae
test
sub
aaa
jecxz
movsb
cli
into
adc
pop
mov
je
in
push
daa
je
add
mov
inc
xor
shlb
fcmovu
daa
imul
or
sub
and
rorl
dec
cmpsb
lock
xor
xchg
je
adc
and
push
pop
cmp
inc
jmp
inc
pushf
ljmp
sti
dec
in
cld
dec
fucomp
js
test
popf
xlat
fdivs
loop
sub
push
out
stos
movsb
xlat
xchg
cld
cmpsl
lahf
adc
incl
out
push
lret
frstor
outsb
or
mov
sarb
sbb
in
add
cli
loopne
cmc
lret
lret
dec
movl
inc
sbb
test
dec
inc
add
imul
add
jne
push
ja
in
stos
enter
xor
jmp
pop
lcall
outsl
lcall
ficoms
add
in
xchg
call
insl
mov
movsb
rcrl
mov
push
lods
pop
cmc
stc
dec
or
fnsave
outsb
dec
sub
xchg
push
addr16
stc
imul
lock
out
cmp
int3
inc
lds
int
mov
mov
fstpt
aaa
or
add
push
movsl
out
stos
inc
xchg
shlb
shr
xor
mov
mov
clc
js
xlat
push
push
rcrl
aad
lcall
movsl
imul
das
dec
and
andb
sbb
gs
cwtl
fnstsw
xlat
jns
in
xlat
push
pop
fwait
jl
in
pop
inc
adc
pop
sbb
int
xchg
jmp
xor
fcmovu
scas
sub
cmpsb
cmc
sub
mov
mov
divl
js
lret
jb
mov
shlb
cmc
cltd
xlat
push
dec
rorb
cwtl
out
xchg
ss
jne
and
push
pop
cli
out
idiv
push
xor
subl
pop
sbb
inc
xorb
jae
adc
jecxz
inc
jmp
fucom
dec
pop
push
cmpsb
mov
xor
sbb
or
dec
cmp
dec
aam
mov
xchg
shrb
scas
cmp
jp
jae
dec
pop
fdivrl
fstp
push
mov
adc
dec
xlat
xchg
mov
or
in
mov
mov
mov
or
fsubp
adc
and
mov
cmpsl
imul
jecxz
fidivs
cmp
mov
sub
push
jge
mov
or
cmpsl
sbb
xorb
jne
mov
loop
or
sub
mov
out
xor
cmp
out
fstpl
sbb
mov
pop
or
sub
ljmp
loopne
xchg
mov
mov
sbb
scas
jecxz
in
es
add
and
push
dec
ljmp
ja
fisttpll
mov
cmc
xchg
mov
cwtl
push
testl
notb
fnstsw
pop
in
adc
ret
xchg
fucomip
pop
ficompl
int
fucomp
lock
jle
ret
add
inc
jne
xchg
imul
lcall
pusha
mov
adc
jl
pop
negl
fisttpll
mov
insb
fwait
cmpb
out
jge
jp
stc
negl
push
ret
ret
leave
mov
push
fnsave
push
xchg
in
pop
pop
mov
ja
jecxz
ficomps
rcl
shll
cli
pop
dec
sub
sahf
jecxz
hlt
daa
sbb
cmp
jmp
jp
shlb
push
fs
dec
gs
lock
push
mov
xor
addl
push
cmp
xor
mov
jne
es
dec
fidivrs
inc
pop
mov
push
cmp
je
insb
adc
inc
sub
xchg
lret
pop
or
pop
xor
mul
mov
sti
jp
or
inc
fnstsw
lahf
push
dec
jmp
cli
stos
fiadds
mov
mov
sarb
fs
push
cmp
mov
ret
push
arpl
lret
pop
fwait
pop
imul
ret
xor
aam
mov
psubb
mov
pushf
pop
push
es
pop
lock
hlt
mov
fwait
in
out
push
fnstsw
jge
push
movsb
int3
pop
subb
and
xchg
rcr
jae
add
arpl
adc
iret
dec
mov
xchg
data16
iret
out
fstl
lahf
and
or
jecxz
jl
pop
and
jbe
imul
div
inc
xorb
adc
cmp
test
repnz
jge
sub
in
pop
cmc
pop
mov
cmp
daa
xchg
es
cwtl
push
mov
lods
je
adc
and
idivl
leave
rorl
cmp
inc
icebp
test
les
test
pop
mov
mov
sub
and
adc
lret
xchg
or
and
pop
pop
cmpsb
sub
pop
fidivrs
sti
xor
movsl
repz
sbb
push
shlb
leave
stc
cmpsb
lods
pop
jmp
sbb
jp
ret
inc
xor
and
cld
cmp
movsb
cltd
dec
ss
pop
outsb
xor
in
adc
inc
add
add
xchg
lret
jne
scas
and
inc
pusha
je
into
or
adc
cmp
mov
ja
jmp
lods
ret
mov
inc
pop
rolb
scas
cld
jmp
sahf
dec
pop
sub
lret
es
jae
mov
and
fs
dec
add
fnstsw
add
outsw
lock
adc
das
cmp
js
mov
or
aas
dec
stc
or
add
mov
pop
out
or
lock
sub
mov
mov
add
cwtl
mov
sub
adc
inc
stc
in
lods
sub
cmc
outsb
rcrb
mov
mov
jb
pop
lods
repz
or
out
and
jp
or
adc
push
mov
or
dec
push
addr16
jb
jmp
fists
test
mov
bound
or
jae
pop
and
inc
adc
push
fldl
jno
repnz
lahf
mov
push
dec
icebp
push
femms
test
imul
mov
call
test
xlat
stc
sub
xorb
xor
mov
push
dec
fidivl
push
and
push
xor
jecxz
lock
xchg
adc
push
mov
pop
fistl
xor
fisttpll
sti
notl
mov
jp
nop
mov
or
lock
pop
test
xorb
addr16
in
adc
mov
testl
jmp
rorl
push
mov
dec
mov
sarb
push
sahf
xlat
ds
test
fwait
in
scas
paddsb
stc
sub
dec
jle
jo
mov
fcmovnbe
sarb
jo
push
pop
clc
call
repnz
jb
aas
mov
jp
movsb
xchg
push
adc
jno
push
dec
lcall
les
dec
ja
and
fistpl
push
subl
dec
mov
cmc
jbe
iret
push
jns
add
and
jno
and
mov
add
js
mov
shrl
jb
jge
pusha
fisubs
sbb
cmc
insl
sub
nop
in
mov
or
push
ja
outsl
dec
mov
jmp
div
sbbb
daa
or
fnsave
mov
adc
gs
jbe
mov
repz
inc
push
mov
push
bound
shlb
stos
push
popf
out
loop
ret
fs
adc
sub
xchg
add
cmp
jmp
dec
pop
ret
push
jp
adc
bound
sub
and
out
insb
pop
ds
push
adc
push
inc
icebp
ja
jne
and
movsl
out
mov
mov
rcll
or
aas
fisttpll
mov
mov
dec
add
in
fstps
sarl
xchg
negb
aam
mov
adc
ret
das
add
jo
dec
iret
push
mov
sbb
shrl
int3
gs
repz
xlat
mov
arpl
loope
push
mov
hlt
sti
mov
addb
add
or
inc
mov
sub
mov
js
repnz
arpl
xor
clc
push
or
mov
insb
cmpsb
jp
fmull
icebp
push
xorb
sti
in
icebp
sbb
jb
jne
or
in
pop
shlb
in
jae
ret
nop
xchg
cmp
lea
mov
sub
mov
popa
xchg
xor
lret
fisttpll
fstps
pop
sbb
mov
jle
ljmp
ss
inc
pop
xor
and
push
repnz
out
int
xchg
cmpsb
jns
sbb
movsl
bound
repz
out
mov
xchg
fnsave
dec
mov
data16
mov
lods
aam
cmp
ds
rorl
gs
jo
inc
out
outsl
stc
and
inc
jmp
mov
dec
push
out
xchg
test
add
into
pushf
push
sbb
testb
inc
in
jecxz
cmp
and
cmp
fnstsw
mov
mov
cmp
in
jmp
fisubs
add
mov
call
ds
jecxz
push
xor
inc
sub
mov
fdivr
shrl
pushf
mov
xchg
pusha
xchg
out
ret
fstpl
shll
mov
push
inc
cld
jae
les
mov
xor
mov
loop
repnz
cmp
lret
or
cmp
lret
fstpl
pop
push
repnz
or
pushf
and
daa
push
repnz
arpl
hlt
xor
cmp
imull
in
or
lahf
push
inc
push
inc
jle
push
ret
jne
shlb
cmp
add
cmp
sbb
lcall
mov
inc
sti
pusha
or
rcrb
repz
int
push
pop
xchg
fstsw
clc
push
add
or
movsl
mov
pop
jno
loop
test
xor
xchg
loopne
cwtl
jbe
cmovp
test
test
js
mov
lret
addl
jb
shll
ret
and
push
fiaddl
loope
jmp
add
xchg
movsl
or
dec
jg
in
xchg
repnz
aaa
or
cmp
pop
xlat
mov
xchg
adc
dec
ffree
cmpsb
pop
fadds
jl
enter
mov
add
cwtl
cmpsl
cmp
and
lcall
mov
cld
xlat
xchg
xchg
leave
ja
pop
sub
test
clc
cmc
ret
sti
dec
and
xchg
pop
sbbl
or
jb
pop
stc
loopne
mov
pop
mov
cld
mov
inc
out
dec
mov
jbe
xchg
jae
pop
mov
int
fidivrl
test
es
push
loopne
test
and
out
jne
movb
cmp
push
pop
dec
nop
mov
inc
lret
xor
pop
je
sub
dec
stos
mov
in
push
shll
jle
push
sub
enter
mov
fdivs
insb
push
xchg
in
adc
mov
sahf
cmp
pop
or
mov
or
js
sahf
stos
lahf
jbe
call
js
dec
stc
jno
ret
cmp
clc
xor
adc
lock
dec
dec
pop
mov
pop
pusha
lret
jmp
iret
xor
mov
push
sbb
cmp
adc
ljmp
push
dec
mov
sti
test
mov
xor
sub
insb
imul
shrl
dec
and
in
jno
inc
mov
jbe
xchg
add
pusha
mov
jne
pop
xor
jmp
movsb
sub
sbb
cmp
mov
cmp
sahf
jns
stos
pop
jne
in
insl
inc
xor
xor
shrb
pushf
xor
push
mov
rolb
aaa
dec
js
arpl
push
lret
pop
adc
ds
add
fisttps
mov
lods
jo
push
inc
cmpsb
movsl
incb
fisubs
jge
lret
repnz
xorb
pop
insb
stc
ds
and
sub
je
mov
stos
andb
inc
fucom
jne
into
inc
or
lar
sub
adc
adc
mov
lret
fnsave
notl
mov
xor
and
pop
push
out
shlb
sbb
jmp
sub
test
cmc
adc
jns
jae
scas
aaa
pop
sbb
cli
inc
xchg
pop
dec
lret
sti
inc
rcl
mov
outsb
xchg
imul
shlb
aad
mov
mov
pop
push
mov
out
movsb
dec
jle
xchg
loope
jbe
cmp
addl
mov
test
sub
lahf
fistl
imul
and
sub
ljmp
fistpl
addr16
stos
mov
cs
roll
jne
repnz
lret
and
outsl
divl
cmpsl
fwait
and
pop
add
cmp
je
ss
xchg
neg
insb
pop
fstp
add
push
fwait
in
dec
or
xor
dec
in
out
add
inc
pop
jl
mov
movsl
movsb
jecxz
mov
ret
negb
shll
adcl
lret
xor
rcrl
mov
frstor
cmp
ret
cmp
or
mov
sarb
adc
pop
xor
xchg
int
jo
lahf
mov
cmp
in
fwait
cmp
dec
mov
or
ja
xor
add
pop
push
cmpsl
push
or
cmc
repnz
cmpsb
sbb
jns
cs
mov
fnstsw
and
shl
xor
push
dec
and
dec
xor
mov
fsubr
fisubrs
xor
lcall
mov
cmp
adc
popf
jle
add
pop
jecxz
and
pop
pop
lods
popa
test
test
fstp
push
mov
fs
jmp
xor
push
pop
dec
adc
sti
clc
repz
aaa
and
mov
inc
inc
add
inc
shrb
sti
fisttpll
inc
pop
jecxz
and
jne
stc
push
cmc
push
adc
pop
mov
push
daa
ja
fldl
in
mov
dec
cltd
movsb
in
inc
stc
in
mov
push
mov
frstor
sbb
mov
out
jecxz
out
mov
jmp
hlt
sub
out
in
cltd
mov
mov
mul
mov
fwait
sub
push
in
mov
scas
cmc
loopne
sub
push
add
jecxz
shlb
or
mov
push
mov
shlb
pop
inc
cmc
pop
fildll
sbb
mov
insl
in
fstps
pop
jmp
fnsave
xor
jae
mov
pushf
in
or
add
jle
inc
test
clc
test
push
cmc
jl
std
hlt
fdivs
pop
repz
in
icebp
lock
clc
fcoml
sub
xchg
fldl
dec
push
add
test
sahf
insl
icebp
adc
in
pop
jae
adc
xor
sbb
mov
push
cld
je
xor
jne
jmp
sbb
lret
push
add
cli
jne
cmpsb
fs
pop
adc
fldl
mov
xchg
dec
rclb
mov
jge
lods
popa
inc
and
enter
ja
inc
mov
push
std
xor
sub
xchg
jbe
sbb
insl
jae
push
xchg
sub
push
lods
cltd
outsl
aad
or
rol
test
repnz
scas
add
and
jl
les
fcoms
cmpsb
fimuls
movsb
call
imulb
out
fldl
je
fldpi
mul
ss
mov
mov
outsb
mov
cld
cs
pushf
repnz
je
shlb
jmp
mov
sbb
mov
lea
cmp
jae
push
in
loope
movsb
lock
cmc
sahf
xor
rcll
push
movsb
mov
add
xchg
xchg
pop
aad
fs
add
lock
loope
jp,pt
mov
lods
dec
in
lea
scas
lret
enter
jae
gs
ficompl
adc
jne
jns
or
bound
hlt
dec
lds
pmaddwd
movsb
inc
shll
push
push
jb
rcll
out
inc
sub
jne
xchg
jmp
arpl
mov
mov
mov
jmp
test
cli
fucom
inc
pusha
int3
cs
sub
sahf
adcb
shr
mov
and
ret
jecxz
pop
insl
and
sbbl
jbe
mov
mov
mov
aaa
rcpps
pop
test
cmpsb
mov
jmp
and
push
ret
mov
mov
test
ja
ds
push
scas
mov
mov
fdivp
test
inc
aaa
mov
outsl
cmc
in
imul
lods
lret
push
mov
xor
lea
and
imul
leave
in
sub
stos
in
std
ja
mov
stc
rcll
lret
push
and
stc
push
sbb
xor
cmp
pop
and
bnd
mov
mov
inc
scas
lret
shrb
das
sub
mov
dec
scas
scas
mov
push
mov
lods
rorb
mov
or
arpl
pop
imull
daa
mov
jmp
idiv
inc
pop
adc
mov
dec
ja
and
sub
push
imul
pop
sti
adc
xor
and
lret
in
pushf
icebp
push
repnz
xchg
mov
mov
lock
ss
jl
jl
icebp
mov
arpl
xor
sbb
shlb
popa
or
sub
push
cmpb
fidivrs
mov
adc
std
out
stos
rclb
jle
push
or
imul
fs
cltd
add
dec
or
fstps
ret
ret
nop
repnz
cmpb
push
movsb
mov
out
pop
scas
mov
cmp
jno
repz
push
pop
in
nop
les
push
mov
lds
pushf
mov
aas
sub
mov
xchg
sub
cmp
aaa
jae
cmp
int3
in
aad
mov
pop
push
enter
add
xor
addr16
bound
jne
dec
inc
test
jmp
or
xchg
mov
mov
adc
pop
mov
divl
push
enter
push
mov
roll
or
fdivrs
push
lods
push
mov
add
int
repz
loopne
jle
lret
pop
mov
imul
lcall
mov
imul
gs
stos
xorl
popa
inc
mov
cmp
sub
cltd
jb
jno
jbe
mov
jmp
arpl
js
gs
xor
and
shll
les
add
in
pop
jbe
jb
mov
out
ret
jo
sarl
jns
call
or
repnz
lret
mov
sbb
gs
inc
aaa
jne
and
pop
jmp
and
dec
mov
sub
jns
push
in
adc
inc
and
or
push
cmp
fadd
mov
in
add
sti
add
jmp
xchg
cmp
nop
cs
add
add
sub
mov
mov
mov
and
inc
mov
push
orl
push
and
insb
xchg
fstpl
add
cmp
std
xor
loop
mov
leave
test
js
call
xchg
mov
out
les
lcall
scas
fwait
ja
lock
cmp
mov
repz
jl
repnz
xchg
adc
aam
mov
add
pop
or
jae
mov
sub
out
arpl
pop
cwtl
ror
cmp
imul
scas
js
push
cltd
in
popf
mov
repz
cmp
cmc
cmp
cmp
sbb
xchg
mulb
sub
jbe
ret
and
into
mov
adc
std
test
mulb
xlat
jno
lock
xlat
pop
int3
negl
mov
shl
divl
jne
jb
in
test
stc
pop
dec
sbb
es
sbb
and
inc
and
lock
je
neg
mov
jbe
data16
rcrb
cmp
cmc
push
sbb
mov
mov
fidivs
das
adc
inc
push
add
pusha
dec
push
mov
insl
mov
imulb
test
cmp
ret
lret
enter
jns
fisttps
or
jb
sub
push
xlat
test
jecxz
loope
incb
loope
dec
mov
fbstp
cmp
out
mov
in
mov
mov
xchg
lret
pushf
aam
pop
shlb
adc
insl
mov
mov
mov
mov
jne
xor
mov
pop
xor
pop
mov
push
sbb
in
pop
push
jl
pop
xchg
adc
mov
inc
jns
dec
mov
jne
jp
pop
xor
push
mov
inc
test
jns
sbb
push
inc
icebp
jne
lods
jmp
test
cmc
pop
push
fmuls
cmc
add
xor
lds
sti
mov
mov
outsb
in
or
ja
lods
jmp
jecxz
pop
pop
mov
imul
test
cwtl
xchg
stos
dec
adc
jnp
imul
cmp
mov
jecxz
jno
packssdw
ret
add
mov
rcll
shlb
add
sub
stos
cmc
mov
ds
cmpsb
insb
sub
daa
jno,pn
and
push
cli
push
ds
add
adc
aad
push
lea
jnp
movsl
icebp
mov
dec
fcoml
mov
in
js
dec
or
or
xor
ret
cmp
jo
leave
insl
push
imul
push
mov
repz
push
in
mov
cmpsl
jne
das
xor
push
mov
int
jg
cmp
xor
mov
ret
dec
outsb
push
inc
mov
sarl
movsl
leave
mov
sbbl
ret
push
pushf
inc
mov
lret
mov
push
and
push
sbbb
jnp
sub
push
test
cli
sbb
aad
arpl
arpl
test
add
push
jmp
cli
sti
push
mov
mov
out
pop
pop
jnp
cmc
cltd
inc
into
das
in
cld
outsl
jb
iret
push
lcall
or
xor
enter
xchg
decb
mov
inc
cmp
sbb
lret
or
xor
iret
xor
dec
jmp
add
mov
jb
ffree
icebp
adc
xor
push
xlat
sub
cltd
test
xor
adc
mov
inc
or
cmpsb
rol
add
mov
add
jmp
pop
jo
sbb
mov
fwait
mov
xchg
xchg
js
mov
scas
pop
subb
repnz
test
imul
cmpsb
int3
sub
jecxz
push
mov
cld
mov
or
push
lret
and
fnstsw
dec
imul
add
fidivs
jns
inc
lea
mov
pop
mov
bound
adc
or
add
shrl
repnz
punpckhdq
cli
jbe
out
push
xor
out
stos
es
inc
or
add
pop
or
in
lcall
lock
mov
iret
xchg
push
pop
jmp
fucomp
insl
ja
repnz
subb
cs
imul
mov
inc
test
inc
sarb
cli
add
inc
gs
bound
push
push
cmp
in
inc
or
add
xor
mov
in
arpl
push
inc
data16
lret
jae
and
cmp
sub
ljmp
xchg
push
add
adc
mov
pushf
jp
adc
push
mov
sbb
push
pop
or
idivb
or
data16
jb
frstor
mov
in
lahf
cwtl
scas
mov
or
shll
fadds
jp
xor
mov
mov
int
das
divl
inc
into
mov
add
pop
jmp
mov
jecxz
xchg
cmp
test
mov
cmpsb
mov
insb
sbb
mov
daa
cwtl
mov
add
enter
repz
push
fcomi
xlat
test
in
mov
arpl
push
int
inc
cld
and
das
xor
test
scas
rcll
jns
imul
or
dec
xor
cmpsb
adc
jne
sarl
cmp
adc
pop
sbb
fs
or
sti
insl
pop
ja
cmc
addr16
cwtl
add
in
mov
xor
cmpsl
sti
push
out
nop
or
xchg
nop
jbe
xlat
pop
ja
test
xor
data16
dec
add
lock
je
fisttpll
add
jcxz
xchg
sbb
cmp
jp
or
cmc
push
popf
cli
gs
sub
or
ja
adc
adc
inc
jecxz
xchg
push
test
es
and
add
mov
adc
cld
mov
jne
fld
loop
jl
mov
sub
cmp
mov
test
movsl
pop
push
neg
sahf
cmp
daa
mov
xchg
sub
adc
sbbb
or
and
fldl
sbbb
ss
lcall
scas
out
data16
push
das
fs
sti
mov
sub
stc
imul
and
inc
sbb
repz
jge
aas
ret
cmp
mov
mov
cld
jp
stc
in
test
repnz
mov
or
dec
rcll
cmp
mov
leave
jecxz
jl
clc
mov
inc
sbb
in
pusha
xchg
cld
pop
pop
test
addb
pop
jecxz
push
push
add
jg
outsb
dec
mov
pop
icebp
mov
sub
push
push
cmpsb
pop
push
jmp
add
dec
add
pslld
jp
sub
push
push
ret
inc
xchg
mov
or
and
dec
fwait
loopne
lock
cmp
and
pop
mov
push
and
mov
stc
repnz
mov
idivb
fimull
lea
idivl
inc
mov
repz
rcr
insl
movsb
adc
mov
or
jae
pop
pushf
enter
mov
jns
cmp
xor
push
ret
push
and
xlat
imul
mov
stos
lds
or
mov
jb
pop
add
call
scas
rclb
gs
lds
and
mov
popf
test
and
push
lahf
div
test
shlb
imul
mov
das
sbb
ret
mov
popf
inc
mov
scas
mov
fdivr
or
mov
mov
icebp
xchg
mov
in
dec
cmp
loope
lcall
adc
cmp
enter
in
xchg
enter
outsb
dec
fdivl
dec
adc
or
lock
mov
icebp
cmp
data16
dec
enter
xor
xlat
jne
jle
mov
pop
pusha
sti
rcrb
adc
das
push
andl
imul
mov
aam
xchg
xorb
int3
mov
xchg
mov
cmpsl
icebp
add
addr16
lcall
outsb
test
jb
rcrl
inc
xor
cmp
fdivrl
mov
test
ja
clc
fcoms
fprem
aas
mov
stos
mov
xchg
mov
stos
ret
fisubl
push
jl
cltd
stos
push
sbb
insb
dec
addl
push
jo
in
pop
popf
adc
movsb
mov
mov
lea
or
rcll
movsb
mov
loop
cmc
jne
fistps
inc
pop
ret
in
pop
arpl
xlat
rorb
inc
mov
fucom
jge
sub
int3
lret
pop
inc
push
sbb
stos
xchg
mov
dec
jnp
test
cs
loopne
xchg
jbe
orb
mov
pop
fisubl
sbb
cmc
addr16
sbb
push
jae
sub
jb
ss
ja
cmc
aad
ljmp
push
mov
push
std
out
ss
mov
jb
dec
rol
or
sbb
cmpl
out
adc
lret
sbb
mov
push
lret
int3
js
in
sahf
add
ds
into
repz
test
cmp
movsb
test
fsub
inc
das
adc
fstl
inc
divl
cmp
mov
mov
mov
imul
xchg
or
fwait
or
xchg
mov
outsb
push
movaps
cmc
out
cmpsl
sbb
mov
fistpl
sbbb
jp
cmc
out
mov
shrb
dec
cli
jecxz
push
push
ljmp
cmc
sub
inc
bound
mov
mov
dec
push
shrb
lahf
pop
imul
scas
mov
sbb
mov
mov
lods
insl
aam
nop
pop
dec
and
sbb
outsb
xor
ret
loop
dec
fstpl
shl
sbb
cld
jge
xchg
jmp
xrelease
mov
ja
sti
lea
lea
add
outsb
dec
pop
push
jp
in
push
es
push
dec
mov
jmp
shl
dec
jae
push
or
mov
push
lods
inc
push
lcall
pop
push
push
push
stc
loope
sti
jl
mov
mov
repnz
scas
out
mov
shll
je
push
or
movsl
icebp
jecxz
test
xlat
jae
dec
fucom
mov
or
push
aam
mov
sub
ja
sub
cld
fwait
in
or
lds
scas
stc
add
int
and
mov
nop
jp
stc
or
cltd
jb
fisttpll
cltd
cmp
insl
stos
mov
jo
inc
push
sub
cmp
pop
cli
movsb
stc
and
jmp
sahf
sbb
data16
fstl
push
mov
inc
mov
in
jno
mov
loopne
jle
push
dec
frstor
es
mov
in
sbb
dec
jne
popf
sahf
sbb
sar
outsl
cli
mov
cmp
frstor
stos
fcomi
jmp
stc
ljmp
pop
push
jmp
mov
sbb
shrl
xchg
fwait
mov
subl
pushf
fcomp
jl
je
in
test
out
clc
and
outsb
jns
popa
fisttpll
inc
pop
cmp
bnd
sbb
dec
sbb
cmp
out
iret
rcll
lods
ret
ror
mov
pop
cmp
jb
sub
and
test
loope
sbb
push
mov
data16
test
std
fsubp
scas
mov
lret
jo
push
cli
stc
xor
ja
mov
fimuls
push
and
cmp
or
push
pop
into
xlat
cwtl
stos
jne
xlat
or
sbb
xor
mov
scas
jmp
in
add
mov
mov
pop
mov
ja
mov
push
dec
jmp
dec
push
out
sarb
adc
dec
std
lea
ficompl
add
and
out
xchg
cmp
xchg
jl
movsb
pop
or
addr16
jns
jae
pop
push
enter
mov
ljmp
and
fisttpl
pop
push
in
adc
dec
movsb
scas
xor
js
mov
cmp
in
mov
movsb
fsubrs
pusha
push
xchg
sbb
xchg
div
movb
inc
jne
inc
push
jecxz
movsb
movsb
lea
cmc
jmp
jl
jmp
sti
and
adc
jne
push
negl
int3
or
dec
insb
cs
frstor
pop
test
dec
and
pop
xchg
xchg
sti
xchg
add
mov
fcomp
rorl
mov
or
jnp
jne
cwtl
idivl
jb
jbe
out
lock
pushf
mov
jns
rcrb
outsl
ret
xor
dec
loopne
cmp
jnp
outsl
punpckldq
inc
or
lods
in
sbb
rorl
xor
stos
rclb
xor
pop
int
adc
mov
push
mov
or
pusha
fldl
insb
neg
bound
push
xor
lock
test
add
leave
aam
cld
cmp
xchg
lcall
lret
mov
sbb
mov
fcmovu
out
cmp
mov
lea
add
pop
push
enter
aaa
mov
and
xor
mov
pop
cmc
and
mov
fwait
in
les
testb
xchg
es
mov
xor
mov
or
or
push
jae
ficoms
repz
in
out
jb
fstpl
rorl
addr16
cltd
mov
dec
lock
and
mov
mov
xchg
pop
cmp
in
inc
in
push
mov
jns
daa
pop
cmp
mov
adc
stos
je
icebp
lret
cmc
mov
outsl
cwtl
mov
sar
call
jb
and
jae
divl
mov
idivl
test
inc
out
shrb
pop
adcb
imul
mov
imul
push
insl
push
mov
sub
push
mov
cmp
inc
mov
mov
dec
push
pop
lea
test
push
scas
popf
xor
mov
mov
orl
mov
xlat
testl
mov
adc
cmp
cltd
stos
lock
xchg
jno
lods
je
and
push
into
inc
cltd
jnp
push
cmc
cmp
imul
enter
jbe
push
imul
mov
mov
cmp
inc
and
lahf
fisttpl
cmpsb
adc
outsl
lods
out
daa
cmp
fucomp
fdivrs
std
push
stc
mov
idiv
repz
popf
inc
mull
lods
jecxz
xor
cmc
dec
sub
aas
mov
sub
ffreep
sbb
jne
xchg
jecxz
add
dec
aam
mov
mov
push
sub
test
cmc
mull
aas
dec
pop
out
push
dec
push
xchg
add
cmpsl
jne
dec
jns
jo
std
mov
iret
or
mov
xchg
int3
jmp
and
pop
jecxz
xor
xor
jmp
jno
in
xor
xchg
dec
lret
ficomps
ja
pop
push
test
shll
adc
das
mov
in
xor
mov
ret
add
pop
xchg
or
movsl
shlb
jne
fidivl
add
add
fstl
jae
ret
nop
cmpsl
and
cld
inc
push
and
loop
lret
div
movsb
sub
outsl
stc
fdivl
xor
mov
arpl
das
mov
cmp
int3
scas
imul
mov
clc
mov
imul
rcrw
mov
mov
aam
xchg
mov
stos
inc
inc
pop
movsb
je
adc
lret
je
sub
jnp
push
shll
divb
jecxz
pop
mov
push
mov
sub
mov
ds
mov
js
xchg
and
imul
mov
aad
xchg
pop
jmp
ret
mov
sahf
in
adcb
in
test
ret
jle,pt
not
mov
fwait
lock
lods
cmpsl
xchg
jns
testl
loop
sbb
hlt
jmp
out
pop
sub
clc
push
fidivl
popf
mov
orb
xchg
add
jp
lcall
mov
imul
popa
jl
cmpsb
je
cmp
sbb
test
ljmp
mov
add
xchg
or
dec
mov
rolb
xor
in
xor
pop
mov
fisttpll
pop
sub
inc
movsl
cmpb
data16
ret
stc
cld
pushf
clc
out
test
push
xor
fidivl
pop
ja
testb
fdivs
stos
push
jae
lds
in
xchg
js
sub
test
push
scas
jns
sub
insl
fdivrs
mov
cmp
mul
mov
or
cwtl
ljmp
les
fsubrl
mov
push
jecxz
mov
es
mov
clc
xorb
sbb
fcoms
lods
dec
fisttpll
sbb
hlt
cmpsb
lock
xlat
jb
js
sub
cmp
loope
adc
lods
cs
mov
push
inc
cmpsb
dec
jo
inc
xorl
lds
mov
aaa
test
loopne
jge
lods
mov
ljmp
jbe
or
cmp
les
pop
push
lea
inc
jne
stc
ss
cmp
iret
lods
push
and
or
stos
mov
push
cmpb
iret
and
fs
test
add
ljmp
fisttpll
rcll
jne
xchg
cmp
lods
cmp
xor
or
dec
in
ss
repz
xlat
push
xchg
data16
cmp
push
in
xlat
push
sub
fsubl
lahf
pop
ja
int3
lods
lea
cmp
ljmp
fisttpll
scas
cmp
push
inc
push
adc
cs
or
sub
mov
fcompl
pushf
movsl
aam
push
js
lahf
les
stos
repz
adc
cli
loopne
test
mov
addb
repz
lcall
fnstsw
jecxz
idiv
mov
int3
fwait
push
or
fstl
cwtl
and
and
mov
cmc
sub
clc
xchg
lods
or
test
xchg
nop
scas
mov
sbb
pop
sbb
imulb
jb
idivl
pop
mov
or
xor
mov
testb
or
mov
inc
lock
mov
lea
loop
cmp
adcl
adc
and
mov
xor
or
sbb
shr
or
jno
repz
ror
mov
mov
cmp
inc
mov
and
dec
shll
xor
call
stos
push
ret
jle
mov
add
popa
stos
mov
in
fwait
test
add
cmp
xchg
mov
or
iret
mov
adc
push
and
shlb
pushf
jb
cmp
pop
fneni(8087
stc
stc
repz
stos
push
jne
xchg
cltd
repnz
pop
test
clc
fmuls
add
or
in
in
mov
in
cmpsb
mov
mov
cld
push
movsb
in
inc
sub
ret
add
arpl
repnz
pushf
movsl
dec
rclb
xor
mov
ja
out
jb
pop
les
jbe
push
jecxz
dec
jnp
dec
fcmovne
enter
jge
outsl
in
mov
xchg
and
int3
shl
push
addr16
add
loope
jnp
xor
in
movsl
pop
lcall
mov
stos
mov
sub
idiv
sub
iret
add
cmc
mov
outsb
das
mov
ret
adc
mov
fldl
cmp
push
shlb
outsb
rclb
mov
popl
shll
jbe
lock
dec
es
cmp
dec
repz
movsb
pop
mov
stc
stos
sti
mov
mov
sub
or
inc
mov
outsl
stc
mov
jns
fadds
mov
and
xlat
sub
pushw
mov
neg
push
jp
fisubrs
aad
rorb
mov
add
sti
jb
into
jno
xor
inc
rorb
bound
divb
stc
and
js
mov
lods
mov
push
outsb
or
mov
cli
sbb
dec
jne
inc
mov
cs
stos
dec
scas
xlat
xchg
pushf
xor
cmc
mov
lea
iret
sbb
ret
int
scas
aas
imul
testl
cmp
mov
jno
mov
jb
hlt
icebp
shlb
mov
pop
mov
fsubl
mov
push
pop
in
inc
in
nop
or
fstp
imul
mov
pushf
clc
mov
cmc
fistl
xlat
ret
aam
jne
jecxz
imul
push
push
das
mov
or
sub
mov
push
fstl
mov
test
ss
ja
adc
and
mov
popf
pop
sbb
cmc
stos
lock
pusha
testb
jl
js
ds
add
scas
mov
sbb
sbb
stc
mov
jno
fnstsw
push
int3
jb
inc
sbb
cmpsb
pop
lcall
pop
adc
inc
testl
xchg
mov
into
movsb
lods
fadds
int3
notl
aaa
jp
rcll
repnz
dec
test
fnsave
stc
and
loopne
pop
mov
xchg
fst
cmp
andb
or
std
imul
jb
mov
xchg
pushl
jae
mov
in
lods
dec
js
adcl
hlt
mov
jns
fcoml
or
pop
lahf
ss
leave
popa
int
mov
pop
jns
cmpsw
jmp
gs
inc
bound
dec
xor
cmc
and
jmp
dec
addb
xor
push
jbe
adc
cmpsb
iret
adcl
jmp
and
lret
fstl
in
fstpt
jne
sbbb
lcall
ficoms
mov
das
xchg
cmpsl
cmp
negb
sub
das
fldenv
fsub
vhsubpd
and
outsl
jl
cmc
fadds
mov
lds
lret
outsl
into
and
sbb
xchg
pop
loopne
mov
jecxz
jns
into
or
outsb
add
enter
iret
mov
xlat
and
cmc
pushf
mov
dec
les
pop
add
cmpsb
movsb
loope
loope
mov
std
pop
jecxz
les
fsubl
clc
xor
ret
xor
in
cltd
jmp
mov
call
mov
adc
jnp
test
cmpsl
in
jp
movl
imul
mov
inc
jbe
push
fdivl
mov
pop
lcall
mov
movsl
xor
xchg
mov
inc
xchg
clc
test
dec
outsl
add
cld
dec
jb
ja
jae
push
pop
outsl
mov
sbb
popa
aam
xchg
pop
pop
add
repnz
sub
xchg
or
pop
or
jg
jne
fcmovne
jb
ret
add
inc
popa
xorb
xchg
mov
cmc
sbb
mov
cmp
push
xor
cmc
into
lods
or
pop
out
xlat
test
jae
pop
stos
push
fisttpll
adc
cmpsb
push
mov
in
je
push
rolb
repnz
cmp
insb
jns
in
cmp
xchg
sti
ret
add
push
jae
bound
imul
sub
add
movsl
jne
stos
enter
dec
dec
stos
in
sbbb
xchg
or
xor
jbe
jbe
jnp
and
test
lock
into
xchg
adc
inc
dec
mov
adc
jae
push
fst
aas
shl
cmp
pushl
mov
xchg
xorl
jns
pushf
pop
dec
push
add
push
inc
scas
adc
mov
inc
call
in
push
push
jne
ret
ljmp
dec
out
mov
jb
adc
sub
push
shrb
sar
sub
jl
repnz
cld
pop
xlat
fdivr
pop
sub
dec
fisubrs
jns
ud2
cmc
cmp
test
ja
adc
lret
push
dec
in
sbb
jns
jae
bound
cld
sub
cmpsb
dec
lock
or
imul
xchg
stc
lret
add
gs
cli
das
sahf
mov
das
xchg
lcall
shll
push
data16
mov
xor
pop
sub
popa
jne
fwait
add
push
imul
inc
sub
not
mov
xlat
jne
xor
or
mov
xchg
cli
js
mov
ss
in
repz
mov
pop
cmpsl
mov
test
rcll
out
sub
dec
mov
mov
pusha
fcoms
jle
mov
cmpsb
loope
in
addr16
in
adc
jb
xor
test
mulb
push
xor
mov
jp
push
outsl
mov
ds
cltd
iret
pop
dec
lods
in
pop
jno
cmpsb
jmp
or
xchg
adc
push
aaa
inc
sbb
and
dec
out
into
in
mov
int
subb
aam
mov
xchg
mov
add
arpl
in
pop
jecxz
xor
inc
nop
xchg
push
ss
out
sub
or
inc
test
add
pxor
leave
push
mov
jns
outsb
inc
loope
add
sti
bnd
mov
cmpsb
dec
fistpll
push
inc
lcall
fstp
push
xor
push
add
mov
out
pusha
jbe
repnz
or
dec
jle
pusha
roll
jecxz
xor
add
shr
mov
test
mov
in
lret
ret
push
push
rcrl
mov
frstor
mov
inc
jb
pop
fldenv
adc
inc
sbb
aam
pop
nop
lret
jp
scas
shl
rep
lret
mov
mov
push
xor
sub
ja
lea
sub
mov
inc
and
js
adc
fucomp
and
jp
rclb
fisubl
test
cmp
dec
mov
mov
dec
sahf
pop
out
cmp
dec
fmulp
dec
aad
pop
pop
repnz
or
ret
xor
push
clc
divl
insl
in
cli
xchg
rclb
jns
inc
lret
mov
fildll
mov
enter
xchg
xor
and
mov
pushf
aas
sub
std
repnz
mov
mov
inc
aam
fisubrl
mov
inc
jbe
pop
cli
mov
clc
mov
mov
out
push
jecxz
xor
xrelease
test
pop
in
lea
fs
or
ficoml
les
mov
test
push
xchg
stc
xchg
pop
sarb
sbb
push
pop
mov
sub
push
and
jecxz
mov
dec
inc
cmpsl
push
lret
ret
or
divb
cmp
out
xor
subl
jne
jns
je
lret
in
insb
or
jl
dec
add
jg
aam
or
adcb
and
dec
jns
mov
push
rcr
jnp
or
adc
inc
mov
add
lret
push
xor
inc
cmovnp
cld
out
aam
jecxz
adc
sti
nop
fdivl
adc
enter
lods
dec
pop
jb
mov
dec
es
and
push
pshufw
outsl
and
icebp
je
or
pop
sbb
cltd
mov
lret
xor
arpl
fstp
inc
mov
sti
pushl
pushl
xor
lods
dec
jmp
dec
jmp
mov
sbb
dec
popa
jns
loopne
jecxz
cmp
shr
nop
in
leave
mov
ret
cmp
xor
xchg
pop
es
shl
xor
mov
fnstsw
pop
push
cltd
inc
or
sub
jg
jmp
fsubr
addr16
cmp
or
scas
lock
lock
jecxz
stos
add
cwtl
pop
pop
mov
lret
arpl
test
mov
cli
sub
adc
jnp
stos
movsl
mov
dec
mov
or
scas
xor
sub
jp
in
cmp
enter
push
inc
fistl
dec
pop
jle
aam
inc
mov
cmp
nop
testl
int
movsl
cmp
xor
sahf
ret
and
imul
fcoms
mov
jmp
repz
int
cmc
dec
fstl
lcall
xlat
xor
jo
and
fsubrp
push
xchg
jmp
lea
dec
mov
pop
inc
aaa
sahf
outsb
push
fstpl
mov
or
icebp
xchg
dec
lds
filds
cmp
lea
out
lock
repnz
sub
scas
test
add
xlat
addr16
dec
pop
leave
xchg
mov
lods
xchg
mov
imul
add
fstpt
leave
fidivrl
sbb
adc
je
jb
ljmp
lret
lods
xor
mov
out
push
in
test
xchg
popf
mov
aad
insl
in
jns
adcb
fwait
or
lods
mov
mov
mov
cltd
inc
mov
cmpsl
insl
xchg
sub
sub
mov
xchg
scas
enter
lea
cs
cmp
int3
xor
std
outsl
mov
jb
repnz
xchg
mov
xlat
ret
adc
sahf
data16
ljmp
xchg
and
dec
dec
in
js
push
dec
movl
cmp
push
jne
shll
jns
xor
data16
pop
inc
fistps
mov
pop
jo
divl
xchg
cmp
cmp
add
cmp
xor
jno
xchg
jle
jbe
inc
jne
call
xchg
out
mov
jno
dec
mov
jmp
mov
fwait
iret
pop
imul
rol
flds
mov
scas
popf
sub
adc
ret
sti
rol
mov
ret
pop
cmp
std
repnz
xor
xchg
or
testb
sbb
jnp
mov
outsl
call
inc
pusha
dec
out
sbbl
and
sub
jae
xor
insl
movsl
fidivl
dec
adc
and
add
cmp
stos
push
sub
mov
cmp
and
mulb
jecxz
mov
dec
div
mov
mov
adcl
adc
adc
lock
mov
xchg
cld
fdivrl
cli
sbb
lods
loope
xchg
shl
add
ret
ret
test
sbb
mov
cmp
jg
insl
hlt
mov
dec
lret
ret
sbb
mov
cmp
jno
mov
or
test
mov
or
aas
sub
add
sarl
imul
adc
iret
arpl
jbe
pop
in
adc
xor
push
pop
add
jne
ljmp
mov
sbb
faddl
sbb
mov
xor
mov
inc
adc
mov
push
addr16
imul
or
mov
sub
stc
jle
mov
pop
or
adc
dec
insl
xor
adc
add
adc
int3
pop
or
jns
xchg
cmp
push
out
aaa
adc
pop
xor
mov
push
fsubl
xor
add
jns
ds
movsb
out
cltd
mov
sub
jg
data16
ljmp
lret
rorb
jnp
xchg
in
test
test
loope
fs
cmc
fcmovnbe
mov
fidivrs
fstpl
jns
mov
sub
ds
or
js
mov
sbb
fwait
mov
lea
cld
add
inc
mov
cmp
sub
push
xor
xchg
mov
pop
aaa
shl
pop
jne
in
test
pushf
mov
jl
pop
fildll
dec
jp
adc
cli
push
adc
stc
jno
dec
out
mov
pop
xchg
dec
xlat
mov
in
jns
icebp
stc
push
jecxz
sub
movsb
mov
dec
cmp
fcmovbe
sub
repz
sbb
mov
test
inc
flds
jp
cld
cli
lock
in
js
icebp
sbb
mov
int3
add
push
fwait
push
in
out
cmp
push
jno
pushf
movsb
sti
and
ret
pop
push
fildll
jl
mov
pop
xlat
stos
in
mov
popa
mov
dec
add
dec
or
jg
icebp
mov
pop
and
rcrb
aam
xor
inc
movsl
sti
ja
lea
sti
lcall
inc
loope
repnz
sub
fstl
xchg
fstpt
jo,pn
push
daa
ret
push
mov
out
cltd
cmc
lcall
pusha
movsl
in
cli
mov
dec
xchg
add
es
inc
and
mov
ret
mov
aam
jp
inc
ja
fisttpll
xchg
int
add
insl
or
sbb
mov
sub
push
xchg
lcall
mov
cli
out
mov
lods
ror
lea
dec
push
mov
pop
sub
mov
sbb
out
push
fs
xor
pop
dec
sub
scas
das
or
mov
icebp
lret
dec
in
jno
int
cld
mov
jg
mov
mov
test
pop
mov
push
ret
stos
or
xor
mov
push
imul
lds
inc
fcom
xor
insb
fbstp
nop
sbb
inc
jmp
ror
xchg
jne
fs
pusha
test
push
inc
lahf
mov
addr16
mov
push
or
stc
ret
xchg
insl
loope
add
pop
mov
jp
cmp
test
push
adc
jns
test
xor
mov
nop
aas
mov
sarl
es
cltd
pop
pop
sub
pushf
push
adc
cwtl
xchg
sbb
test
pop
shlb
popa
data16
or
divl
sub
in
sti
adc
push
imul
push
pop
mov
mov
xor
cmpsl
add
dec
jp
and
jp
push
aas
sub
jle
repnz
push
mov
pop
jno
out
mov
sarb
data16
je
lods
dec
pop
jo
dec
push
sbb
jp
mov
add
cltd
add
repz
sub
xchg
adc
cmpl
mov
and
loop
adc
clc
fistl
push
lock
mov
in
cmpsl
jge
stos
cmp
inc
sbb
int3
lret
cmc
pop
test
mov
ficompl
fwait
cmp
cltd
sbb
data16
adc
leave
mov
adcb
stos
ja
fstpl
inc
shlb
pusha
js
cmp
mov
xor
out
jae
jecxz
pusha
jne
sub
push
movsb
sbbb
lret
fdivrp
adc
mov
imul
sbb
out
pop
mov
or
xchg
lods
lahf
pop
lds
sbb
mov
xorb
lcall
or
cmc
add
mov
inc
fsubl
mov
mull
jbe
xor
fcomip
fldt
bound
icebp
andb
repnz
insl
fbstp
mov
adc
in
sub
imul
cli
test
cmp
frstor
loope
mov
ja
pop
popf
loopne
mov
test
pop
movsl
and
scas
jae
movsb
repnz
push
frstor
lds
dec
push
ret
ds
mov
stos
xchg
mov
lcall
pop
in
mov
push
aad
xor
pop
cli
in
jmp
sbb
testl
or
ret
mov
inc
pop
xchg
ret
lcall
push
cmpsb
in
das
adc
jmp
shrb
cmc
mov
not
popf
add
loopne
loope,pn
mov
dec
xor
mov
lock
mov
scas
push
or
inc
aas
call
fwait
xor
pop
pop
test
insb
mov
insl
xchg
xlat
and
ret
jno
imull
call
xor
repnz
dec
rcrb
cmp
sbb
mov
jbe
push
es
jp
add
andl
aam
hlt
cli
or
push
xchg
leave
insb
or
jo
sahf
cmp
cmp
sub
cmp
mov
ss
mov
push
cmp
push
in
or
xor
mov
xchg
cmp
mov
dec
jae
pop
ja
jne
cs
cmpsl
ds
jae
lock
jle
loope
ljmp
push
push
divl
jecxz
clc
pop
fldl
cmpsb
push
rclb
pop
fldcw
xor
jl
push
mov
lret
imul
mov
sti
je
orb
fnsave
cmp
and
aaa
frstor
or
setg
xor
xchg
mov
or
incb
sarl
int
es
cmp
lret
popl
andb
in
lods
data16
inc
mov
in
movsl
in
int
lods
cmpsb
adc
lock
fcomp
mov
dec
pushf
out
xor
xlat
and
test
push
push
imul
outsl
out
cs
stos
lods
jecxz
insb
dec
shlb
dec
out
adc
sub
push
mov
jbe
adc
aaa
adc
pop
in
sahf
mov
int3
arpl
or
mov
rcrl
pop
aas
and
loopne
xor
gs
dec
imul
les
outsl
sbb
add
sbb
jne
ret
nop
test
out
xor
pop
out
jecxz
jns
mov
or
in
orl
mov
inc
pushf
mov
sti
imul
and
aaa
rcll
femms
push
add
sbb
pop
in
rclb
fmull
pop
fsubrs
jmp
and
pop
mov
fadds
add
jge
push
inc
movsb
cmp
fisubl
jo
jne
adc
push
leave
jb
das
ljmp
fstpl
je
mov
jno
fldenv
dec
fdivl
sub
mov
movsl
call
bound
pop
je
inc
in
and
addr16
xchg
jne
test
fwait
loopne
repnz
mov
dec
iret
sub
push
pop
ja
jns
mov
scas
mov
adc
test
aas
sbb
push
ja
sbb
ss
jmp
inc
into
in
es
or
js
out
cmp
das
adc
pushf
cmpsb
imul
cmp
and
add
xchg
in
mov
mov
lods
sub
repnz
jb
xchg
std
or
push
jle
add
sub
cmpsb
outsl
jl
xor
dec
add
in
subb
sahf
add
cmpsb
outsl
pop
push
mov
xchg
icebp
jge
adc
stc
inc
jnp
dec
xor
stc
fldcw
in
mov
jae
sbb
div
movsb
cmp
mov
outsb
add
pop
mov
scas
xor
out
cmc
pop
adc
sbb
fisubrl
sbb
inc
pop
idiv
jns
dec
in
dec
push
sub
jg
scas
mov
repnz
jbe
repnz
xor
sti
xlat
jne
pop
cmp
dec
shll
pop
aam
pop
sbb
xchg
add
mov
jecxz
jmp
cmp
jecxz
aam
add
out
inc
xorl
les
das
mov
jmp
push
xchg
xchg
xor
inc
push
jp
cltd
sub
ret
and
loopne
xchg
add
int3
cmp
js
jecxz
or
dec
ljmp
sbb
jecxz
or
cmpsl
jecxz
dec
dec
sbb
inc
arpl
or
int3
xor
lods
in
jmp
sbb
mov
pop
and
sti
mov
mov
inc
xorl
mov
in
call
or
out
jle
ds
mov
cmpsb
pop
jmp
mov
or
add
jmp
xchg
notl
jne
data16
pop
mov
jns
mov
cwtl
jne
mov
sub
rcrl
out
leave
pop
mov
jns
cmc
push
dec
test
mov
cmp
imul
pop
sub
mov
cmp
ss
out
jae
inc
push
int
js
sub
shl
xlat
cs
xchg
pushf
mov
pusha
es
push
cwtl
push
adc
jns
ljmp
xchg
lret
dec
push
and
mov
push
adc
cmp
data16
mov
ljmp
arpl
mov
mov
push
mov
xchg
xchg
std
js
arpl
pop
jns
jecxz
das
inc
jne
xor
cli
add
push
fists
clc
movsb
jne
pusha
test
xor
ficoml
int
loope
push
adc
pusha
ret
or
fidivs
int3
into
xor
ja
pusha
bound
mov
in
roll
stos
popf
mov
jecxz
cmp
or
aas
mov
call
insb
jge
pop
les
inc
mov
js
decb
jb
loop
aas
jns
ljmp
pop
mov
and
inc
push
into
ret
lahf
jne
iret
loopne
xchg
cmc
cmp
xchg
and
addl
in
mov
adc
mov
cmpsl
mov
cli
jl
jmp
push
es
cmp
das
adc
incl
data16
inc
js
iret
imul
js
hlt
jle
test
negb
mov
add
or
xor
jne
dec
mov
aas
fstl
dec
movl
aas
loopne
movsb
mov
sarl
in
mov
fldcw
in
cmp
jno
mov
add
in
pop
in
dec
jle
out
dec
fisttpl
shlb
sti
mov
push
lea
rep
data16
jbe
imul
loop
xor
or
push
mov
sti
lock
xchg
out
addr16
aam
mov
mov
push
bound
sub
jmp
jge
or
adc
movsb
lea
lock
in
mov
adc
inc
mov
xor
lret
lock
xchg
mov
lcall
add
jl
mov
les
lock
data16
fwait
dec
sub
mov
xlat
xor
jg
and
dec
in
push
es
dec
jae
mov
mov
insb
gs
sbb
sbb
pop
in
sbb
cmp
in
add
mov
in
stos
mov
jg
orl
stc
mov
shrl
cld
aam
clc
xchg
add
mov
in
in
cs
lods
cmpsl
mov
in
xor
js
ret
push
push
fwait
jle
data16
fbstp
pushf
push
mov
mov
mov
push
pop
pop
jp
imul
push
mov
mov
shll
sti
mov
in
mov
frstor
mov
xchg
inc
sahf
lret
jns
mov
loop
xchg
push
adc
cmp
cmp
push
jp
sahf
lcall
xchg
out
jns
xchg
aaa
pop
mov
xor
lock
cmpsl
and
xchg
jns
sub
mov
xchg
repnz
sbbl
jl
push
jbe
fcmovb
pop
fucomi
in
int
por
mov
aam
sbb
jne
aad
jb
imul
loope
and
or
jl
leave
enter
xlat
out
pop
lock
dec
adc
loop
mov
mov
dec
inc
loope
cmp
cmp
push
rdmsr
scas
idivl
inc
test
mov
fisubrs
and
rcll
fildll
insb
jle
imul
jl
fstpl
hlt
popf
sbb
jp
pop
pop
adc
mov
in
dec
into
popf
addr16
xchg
rolb
loop
cmp
sbb
enter
adc
sub
xor
fnstsw
ds
int
jecxz
push
jae
push
inc
cmp
aad
int
movsb
mov
cmpsb
or
jl
pop
fcompl
jle
jb
mov
and
mov
xlat
loope
mov
addr16
ffree
sub
sbb
imul
inc
adc
mov
pop
xlat
ret
add
fimull
cmp
fimull
movl
arpl
mov
lock
out
stos
iret
dec
add
push
gs
mov
and
stos
iret
hlt
add
jns
sub
mov
xor
pop
in
std
iret
repnz
or
xor
test
cmc
cmpsl
adc
and
rclb
push
xchg
stos
sbb
mov
xchg
xchg
inc
cmpsb
inc
cmpl
scas
in
fnstsw
and
sub
xor
push
jbe
sub
jmp
xor
fldl
mov
mov
fsub
fimull
out
sahf
stc
jb
pop
fldl2e
imul
repz
jecxz
das
and
cld
inc
mov
jg
imul
call
mov
aas
sbb
or
int
xchg
stos
cmp
cld
pop
cmpsl
sar
sub
int3
in
jae
cmc
sarb
sbbb
mov
in
addr16
pop
imul
enter
mov
jp
or
mov
xor
jl
js
xor
pop
add
cs
jbe
or
bound
push
lcall
jle
aad
push
pop
rorl
jo
add
mov
divl
and
xor
les
pop
sbbl
mov
repz
in
jbe
xor
sti
lea
add
int
mov
push
jb
loopne
movsb
aad
mov
test
jecxz
push
cmp
sub
mov
ret
pushf
push
roll
add
mov
sub
push
mov
or
push
xchg
sbb
inc
jnp
dec
dec
sub
sbb
movsl
loop
sti
and
mov
sub
push
jne
repz
loop
xchg
pushf
loope
cld
sbb
and
out
or
xchg
mov
in
jb
mov
jg
cmp
inc
inc
mov
outsb
sub
iret
jnp
in
add
push
icebp
lods
mov
subb
mov
cmc
push
cwtl
lods
add
inc
inc
mov
sub
pop
cmpsl
sbb
push
adc
xor
jmp
insb
mov
jb
jns
sub
add
lret
neg
lods
jp
inc
out
xor
fs
lea
shrl
mov
pushf
test
rorl
sub
xor
out
ja
sub
outsb
out
arpl
paddusw
dec
addr16
dec
jae
push
pop
xchg
jns
jae
lds
pop
stos
mov
lock
mov
pop
inc
pop
addr16
insb
adc
nop
lret
jne
xchg
in
mov
pop
and
and
insl
fmuls
mov
fnsave
pushf
and
pop
js
push
cmc
loop
sub
sbb
stos
xor
mov
out
sub
loopne
dec
sub
in
nop
push
jo
frstor
lahf
pop
jbe
mov
jae
adc
push
insl
push
cmp
sti
and
ficoml
lcall
jb
inc
in
call
jg
daa
add
mov
fwait
push
icebp
push
nop
jl
frstor
lret
inc
cltd
shrb
xlat
insb
xchg
cmp
lea
push
mov
nop
fbstp
cmpsb
icebp
in
fldenv
scas
pop
sarl
test
jp
pusha
lret
jno
xchg
add
inc
cmp
push
xchg
iret
cmpb
jmp
push
leave
xlat
cld
fimull
test
rclb
jae
and
dec
aad
sub
insl
and
and
sub
psubw
mov
orl
xor
daa
scas
jmp
int
pop
iret
ljmp
stos
sub
xchg
mov
fisttpl
cmp
enter
inc
popfw
mov
loopne
jmp
sahf
aaa
xlat
mov
fucom
xchg
pop
fisttps
adc
add
lods
aad
lcall
add
sbb
sub
cld
dec
fcmovnu
or
cmp
pop
xchg
or
push
and
movsl
lds
or
loop
jecxz
mov
cmp
cmp
into
jne
stos
and
add
repz
xchg
aas
sub
sub
mov
je
shrl
adc
pop
fstpl
lcall
cltd
push
out
ret
out
jae
loope
mov
daa
inc
jge
mov
aas
or
fstpl
mov
imul
loopne
shlb
into
sbb
ret
or
in
pop
sub
ljmp
loopne
repz
push
fcmovnu
push
je
jg
cmp
repz
jmp
fldl
fisttpll
xor
das
int3
clc
lock
stos
pop
imul
mov
shll
add
push
xchg
hlt
jo
stos
div
push
xchg
insl
xchg
xor
jb
imul
push
out
pusha
push
repz
js
dec
in
mov
in
cmp
loopne
xor
test
lahf
mov
mov
in
mov
jp
mov
ror
cmp
pop
rcrl
xor
mov
add
pop
mov
cmpsb
fldl
jle
cmp
repnz
adcb
inc
cmpsb
scas
mov
xchg
sbb
jne
fdivrl
cmp
out
negl
mov
ffree
in
jae
mov
mov
jae
or
add
sub
sbb
test
push
sar
inc
pop
xor
lcall
lahf
add
mov
sarl
mov
cmc
jno
aad
push
js
fstp
adc
inc
sub
int
mov
cmpsl
movsb
adc
jb
imul
push
jns
mov
std
cs
push
and
xor
inc
mov
xor
stc
nop
mov
push
dec
shr
jns
ja
cmpsb
jecxz
call
mov
adc
rclb
ret
and
and
dec
jmp
stos
pop
int
loopne
push
js
jo
imul
jae
test
pop
lock
mov
jl
or
cmp
or
push
xlat
cmp
les
xchg
push
inc
jne
jmp
xchg
stc
push
test
sbb
mov
gs
js
cltd
cmpsl
jbe
js
scas
lods
lock
xchg
mov
test
xor
pop
int
das
adc
cmp
add
xchg
fldl
push
cmp
sub
imul
idivb
mov
pop
call
adc
icebp
stos
lock
jmp
insb
enter
es
push
jb
cltd
outsl
push
ret
pop
add
stos
sbb
xorb
inc
jo
mov
lods
cmp
mov
jmp
clc
cli
out
icebp
xchg
daa
sub
popl
pop
addr16
imul
pop
pop
je
cmc
test
js
inc
lods
repz
lahf
sub
addr16
mov
cmp
loope
sbb
test
dec
jb
mov
dec
shlb
icebp
frstor
repnz
jb
popf
icebp
outsl
popl
fs
pop
xor
or
clc
jb
jmp
xor
mov
or
jle
xlat
mov
mov
inc
dec
and
inc
rol
lods
push
push
jns
add
mov
xchg
in
out
ljmp
lods
popa
mov
jle
fwait
xor
in
in
xchg
imul
leave
ret
stc
push
jl
mov
aaa
lds
xchg
jg
dec
test
cmp
lret
or
jbe
orb
inc
arpl
cltd
push
dec
xchg
and
push
imul
stc
adc
adc
ss
jne
adc
loop
jg
andl
cmp
add
inc
popl
and
repnz
lock
addr16
add
inc
jbe
or
dec
adc
dec
cmc
lods
xchg
imul
push
push
mov
clc
mov
fst
inc
add
addr16
xor
insl
push
jne
mov
ror
pop
addr16
jns
ret
push
inc
sub
mov
jae
jns
mov
inc
loopne
incl
lret
out
lds
stc
cmp
fwait
adc
imul
repz
fistl
sub
xor
inc
cmp
mov
dec
push
ja
movsl
iret
lods
mov
repz
xor
rclb
shlb
jns
mov
push
mov
push
insl
adc
lods
and
mov
insb
xor
jnp
cs
ja
lcall
pop
or
test
clc
xor
xlat
xor
add
in
add
fcomps
mov
push
mov
push
jbe
in
pop
add
pop
mov
xchg
getsec
sar
loopne
mov
outsb
mov
sub
push
in
jns
pop
mov
jns
cmc
ret
int
std
or
stc
inc
jns
mulb
xlat
imulb
sub
push
mov
or
push
mov
push
jnp
push
dec
cli
jl
add
pop
mov
test
jg
ficompl
cmc
lds
xchg
dec
adc
pop
pop
ljmp
rcrb
mov
xor
nop
imul
push
insb
xchg
push
das
jne
jo
inc
inc
sub
inc
cmp
ret
nop
mov
cmc
popf
pop
jl
cmp
in
enter
test
ret
pop
mov
loope
lock
cld
and
sub
jnp
inc
add
jns
rorb
jp
fsubr
push
sahf
scas
push
dec
sub
bound
mov
jne
mov
dec
int
aam
icebp
call
outsl
into
and
outsb
sub
jecxz
mov
jmp
cmc
pop
pop
mov
fmul
adc
jl
mov
mov
fdivrs
mov
jne
pop
les
cmp
lahf
repz
pop
in
or
popf
sub
ret
sbb
add
ficompl
jne
fstl
in
mov
popf
aad
scas
mov
and
dec
lods
jne
cmc
mov
add
lods
push
dec
into
mov
ss
pop
mov
inc
jmp
arpl
adc
and
cmc
arpl
pop
pusha
mov
icebp
lcall
nop
jno
repz
sub
mov
and
aas
aad
jmp
jle
imul
inc
test
mov
subb
pop
jp
lret
shr
push
test
mov
ret
add
sbb
jne
aam
jle
std
or
mov
mov
mov
icebp
jb
jns
mov
ja
loop
pop
jo
xchg
fstps
sub
xor
gs
fiaddl
mov
ljmp
push
lds
pop
lods
fdiv
mov
addr16
or
pop
jnp
shlb
cmp
dec
fiadds
jecxz
outsb
leave
jo
jne
xchg
sahf
jb
loop
sbb
add
push
ret
or
xor
movsl
clc
aad
add
ror
enter
pop
adc
jno
mov
int
out
mov
out
push
and
cltd
stos
nop
cmp
cmc
mov
nop
fisubl
push
imul
mov
ror
dec
scas
adc
int
jecxz
jne
xor
sub
sub
rcrl
fxch
fstpt
sbb
inc
mov
mov
sbb
sbb
xchg
jbe
and
adc
hlt
repnz
jmp
test
fstp
dec
or
cmp
les
xchg
dec
mov
and
jp
pop
xor
sahf
xchg
cmp
into
cltd
std
mov
and
push
int3
cmp
push
push
iret
neg
cmp
data16
cli
jg
fnstcw
subb
dec
aas
mov
ret
es
hlt
fists
push
mov
jp
pushf
repnz
rcll
mov
ja
mov
lods
flds
scas
dec
add
cwtl
jne
test
cmp
jecxz
shlb
pop
outsl
xchg
pop
push
ficoml
js
cmp
push
iret
jne
xor
js
cmp
fwait
add
mov
sti
jle
lds
lahf
imul
jns
adc
clc
jmp
incl
aam
inc
sub
cmp
xor
inc
sbb
insl
dec
push
mov
mov
add
dec
mov
aad
adc
and
lret
xchg
and
lret
pop
loopne
lods
fcomip
ja
sbb
popf
mov
aaa
mov
inc
movsb
xchg
nop
or
test
jb
stos
push
mov
fdivrp
jp
mulb
mov
insl
xchg
mov
dec
sub
fnsave
int3
dec
pop
addb
add
aam
sbb
sbb
arpl
dec
add
out
or
pop
imulb
jns
lock
pop
rorb
inc
scas
sub
push
sub
inc
pop
jne
outsb
mov
cmpsl
subb
sbb
pusha
jo
or
or
and
adc
lods
daa
push
clc
stos
mov
not
jns
mov
sbb
sbbb
push
push
sub
loopne
mov
mov
pop
in
stos
ret
aaa
xor
dec
push
arpl
andl
jg
fstpl
loope
mov
jmp
in
cmp
neg
jo
out
mov
dec
cmp
mov
mov
jae
popf
jns
sub
mov
xor
mov
pop
pop
cmpsb
xor
mov
rorb
push
and
lea
aas
aaa
out
imul
mov
adc
adc
pop
jns
and
mov
test
ja
nop
jnp
cmc
hlt
enter
fisttpll
mov
or
into
lds
mov
sbb
insb
rcrb
push
in
nop
sbb
aad
icebp
jecxz
jno
call
data16
ja
lods
in
les
js
sub
push
pop
js
cld
add
mov
mov
cmc
mov
push
into
dec
mov
or
cwtl
mov
and
stos
mov
dec
mov
inc
mov
shlb
cltd
movsb
les
jecxz
ljmp
ret
adc
dec
mov
mov
mov
rcll
cmp
and
xor
out
cli
test
sti
push
inc
in
push
aaa
in
test
xchg
push
inc
notl
hlt
jecxz
shlb
mov
hlt
and
mov
push
dec
in
mov
pop
jmp
jbe
loopne
leavew
fdiv
pop
loopne
cmp
push
mov
jecxz
fsts
and
hlt
jmp
mov
dec
pop
mov
inc
mov
push
cmp
and
sub
movsb
push
adc
out
xor
clc
cmpsl
sbb
test
sbb
cmp
std
cmp
loope
in
cmp
fsub
dec
fbld
outsl
jmp
cmp
arpl
add
je
xchg
es
inc
sbb
mov
mov
lock
mov
cmpsl
fwait
pop
sbb
cmc
pop
lock
pop
fisttpl
xor
in
insb
pop
in
mov
pop
add
pop
cmp
lds
jmp
movsb
mov
inc
js
add
test
dec
out
addr16
scas
inc
arpl
mov
xchg
test
pop
xor
scas
or
dec
mov
fiadds
cmpb
mov
lret
inc
jo
pushf
shrl
int
dec
add
lret
inc
and
iret
sub
repz
cmc
insl
out
out
ljmp
pop
in
pop
icebp
sub
fiaddl
xchg
cli
cltd
iret
cmp
jl
and
fsubrp
sbb
test
stos
cs
cmp
lcall
clc
push
mov
pop
dec
or
outsl
pushf
xchg
out
imul
pop
clc
jns
jbe
push
mov
pop
inc
addr16
jns
mov
cmpsb
sbb
mov
in
loope
sbb
scas
sbb
shlb
jge
sbb
js
int3
lcall
bound
add
test
xor
ficomps
inc
add
inc
repnz
mov
jnp
nop
out
loopne
out
insl
push
mov
aaa
cmp
lcall
loopne
fs
jbe
jecxz
inc
je
fwait
inc
xchg
mov
psubq
nop
xchg
pop
xchg
or
je
in
int
xchg
lock
aas
popf
add
shll
mov
xor
incl
or
inc
push
dec
cli
imul
cmc
jno
mov
ret
ret
imul
out
fwait
cmp
push
mov
mov
cmp
repz
push
add
movsb
pop
sbb
es
sub
sahf
push
sbb
frstor
lock
movsb
test
adc
add
aas
js
jg
jne
push
mov
sahf
in
les
pop
or
jb
and
aaa
out
fsubrs
arpl
mov
stc
push
les
out
arpl
jno
mov
push
cmc
or
push
mov
dec
rcrb
mov
dec
fwait
push
movsl
inc
mov
xor
cmp
jecxz
lcall
sti
sbb
sub
fstpl
mov
cmpsb
push
mov
push
mov
sbb
andl
mov
ret
mov
adc
into
add
ret
mov
push
xor
mov
or
sbb
and
sti
imul
pop
inc
ja
mov
pop
push
arpl
lret
mov
int
mov
mov
xchg
adc
cmp
mov
outsl
push
push
dec
or
cmpsb
sub
loope,pn
jne
cltd
inc
xchg
push
test
jno
adc
jno
mov
scas
jo
mov
in
and
testb
movsl
mov
dec
popa
movsb
jmp
outsb
ss
mov
js
mov
jns
xchg
or
fldcw
or
jne
repz
cli
bound
ror
or
cli
std
mov
ficomps
cmpsl
jmp
loopne
mov
adc
out
mov
cmpsb
inc
nop
jae
pop
arpl
clc
add
dec
adc
sbb
mul
test
les
in
mov
lods
fwait
in
sbb
ret
jecxz
js
insl
mov
out
push
test
push
ss
cmc
stos
ja
adc
loopne
pusha
inc
daa
xchg
cs
lock
sbb
jecxz
jns
add
out
jae
mov
outsl
sub
cmpsl
or
adc
mov
nop
pushf
imul
fbstp
fisttps
outsb
in
and
cmpsb
stos
cmc
outsl
mov
lret
mov
ljmp
pop
aas
pop
popa
add
mov
test
mov
pop
rorb
lahf
push
or
aam
stc
fisubrs
lahf
mov
mov
gs
xchg
je
or
jae
rorb
fisttpl
and
sbb
mov
ret
call
pop
and
xlat
xchg
jb
cmc
fmul
in
loope
mov
mov
cmpsb
lods
aad
out
jecxz
adc
subb
sub
in
mov
add
into
jecxz
xchg
fdivl
enter
sti
inc
xchg
mov
mov
sbbb
adc
cld
movb
repz
shlb
xchg
fdiv
repz
dec
jnp
cmc
icebp
xchg
cmp
cmc
mov
mov
cltd
fcomps
imul
enter
mov
in
pop
pusha
test
fsts
outsl
pop
push
insb
rclb
or
scas
sub
dec
dec
add
sbb
xchg
addb
mov
ja
pop
push
and
push
push
adc
mov
adc
arpl
mov
mov
lock
and
cld
lcall
xchg
jb
test
std
jecxz
test
mov
jns
and
xchg
lcall
inc
dec
push
cmc
leave
cmc
push
mov
inc
fistpll
pop
mov
mov
pop
inc
inc
xchg
or
mov
cmc
xor
imul
imulb
sahf
cmp
sbb
jp
movsl
mov
or
adc
in
and
in
sub
jmp
sahf
cmp
repz
lods
jne
pop
sbb
out
imul
mov
pop
in
pop
clc
out
test
sbb
dec
mov
out
out
xlat
adc
push
mov
testl
fucom
xor
jmp
scas
cmp
or
insl
sahf
adc
sub
aam
or
cmp
rcr
es
addl
imul
xor
data16
inc
xlat
das
dec
add
xchg
dec
fstl
pop
xor
mov
push
adc
in
fwait
lcall
inc
rcrl
xchg
xor
adc
or
push
cmpsb
popf
inc
ds
dec
xor
xor
mov
push
push
clc
jbe
fs
jmp
std
shrl
in
insl
jle
mov
hlt
push
mov
and
cmp
test
nop
pop
cmc
pop
cmp
xor
sub
in
pop
push
lahf
pop
int
mov
cmp
jbe
fldl
outsl
push
mov
xlat
test
sbb
and
xchg
inc
fwait
stos
inc
jae
or
sbbl
rclb
pop
pop
cmp
lahf
inc
mov
pop
shlb
in
inc
es
and
mov
jl
sub
xor
fsubl
imul
nop
imul
or
sbb
adc
or
dec
inc
test
aas
or
insl
mov
pushf
jmp
fdivrl
jg
shrb
push
div
in
ds
jmp
dec
loope
nop
jmp
lret
sbbl
jbe
fsubrs
mov
push
ss
sub
in
setns
mov
call
push
pop
cmp
jno
jbe
inc
pop
fstpl
pop
adc
cmp
stos
xchg
outsl
add
in
push
mov
dec
jecxz
into
aad
ss
xor
fistpll
lds
xor
inc
fs
pop
add
loopne
or
sub
xor
dec
rorl
loope
mov
xchg
mov
lahf
in
jecxz
or
out
scas
push
or
sub
lods
and
dec
shl
clc
mov
adc
mov
movsb
fcompl
jecxz
dec
mov
in
cmp
mov
insl
sub
push
add
hlt
iret
popa
aad
cmp
movsl
push
cmpsb
mov
lods
mov
and
stos
inc
popf
lahf
insb
in
adc
xor
xor
mov
ret
fldenv
or
mov
xchg
xchg
jne
cmc
sbb
icebp
push
sbb
push
mov
insb
adc
test
lds
in
test
pushf
cmp
sarb
inc
jne
inc
aam
subl
ljmp
cmc
and
notb
or
sub
dec
out
mov
imul
addl
xor
cmpsb
jl
xchg
out
xchg
scas
in
ss
js
inc
add
cmp
out
jecxz
and
jg
sbb
push
repz
xor
lds
inc
mov
pop
jnp
fildl
int3
sub
and
rclb
inc
in
sub
sti
cmp
cmp
adc
jb
dec
jl
mov
jecxz
and
push
adc
jae
fistpll
ret
pop
aam
jne
bnd
push
int
fstpl
cld
pop
adc
rcrb
push
cmpsb
lods
stos
repz
mov
scas
dec
add
ret
pop
mov
mov
fs
in
sub
add
stc
inc
imul
lret
nop
outsl
in
out
pop
mov
mov
or
test
push
icebp
xor
and
inc
xchg
xor
out
pop
sbb
sbbl
mov
fucomip
loopne
jns
jne
mov
test
enter
cmc
lret
ljmp
test
xchg
rol
fcomps
cmpsb
int3
xchg
pop
rol
push
adc
xchg
out
data16
fnstsw
rclb
fidivrs
imul
adc
or
jg
mov
mov
lods
xor
push
ret
xlat
mov
dec
aam
pop
cmc
enter
hlt
aas
lret
shl
data16
lcall
push
in
loopne
imul
icebp
inc
sbb
add
daa
xchg
mov
fwait
cmc
fwait
xor
mov
and
addr16
fidivl
sti
pop
insl
jbe
xchg
mov
imul
cmp
ret
and
lds
je
repnz
pop
fldl
xor
add
or
cltd
lret
fstpl
mov
in
pop
sub
shll
jl
xchg
scas
sarb
std
jne
mov
bound
add
repz
in
jmp
push
mov
pop
and
mov
lock
mov
int
jno
lahf
cs
push
sub
jmp
jns
push
loope
and
inc
and
notl
les
mov
fdivs
adc
pusha
fdivrl
aam
mov
push
and
outsb
lods
mov
loope
cmp
lds
jno
in
mov
jns
fs
shlb
sarb
inc
ret
lods
imulb
and
in
sahf
mov
insb
mov
jno
mov
or
cs
sti
mov
scas
mov
mov
pop
bound
pop
mov
imul
pop
jno
adc
fisubl
cmp
test
movsl
sbb
dec
mov
xchg
dec
jmp
lcall
and
outsl
mov
fst
jb
xchg
push
imul
add
cld
cmc
inc
push
loopne
pop
cmc
jge
jl
fisubl
movsl
jmp
insl
test
mov
mov
pusha
xchg
nop
sbb
push
lock
dec
data16
xor
test
cltd
rorl
push
sbb
push
cmp
push
fisttpll
mov
xor
and
inc
sbbl
push
movsl
sbb
rolb
fs
mov
dec
stc
fs
bnd
jge
bound
mov
and
xchg
std
and
xorb
decl
jnp
sbbb
adc
imul
es
jns
and
pop
dec
in
mov
in
dec
lret
or
jae
dec
inc
xor
mov
ret
mov
xlat
push
fwait
int
mov
xchg
or
xor
sbb
lcall
and
push
xchg
mulb
jbe
mov
test
lds
jne
push
cmpsl
out
in
mov
xchg
push
jns
xlat
stos
fnstsw
cmc
shl
clc
test
lret
mov
sub
stos
push
xchg
bound
cmp
shlb
jb
clc
or
popa
test
aam
fnstcw
adc
int
add
repnz
jmp
cmpsb
xchg
add
and
jb
xlat
or
jp
ret
repnz
stc
test
loope
je
mov
mov
dec
add
repz
fisubs
cmc
fs
mov
fnop
pop
fistps
mov
jp
lock
sbb
xorb
sub
insb
push
pop
je
jge
cmc
and
sahf
aam
daa
xchg
loop
ret
ret
sub
fst
jne
or
jecxz
mov
std
jg
mov
pop
add
jne
adc
cmpsl
mov
jmp
dec
inc
sbbb
loopne
pop
mov
cmp
mov
xchg
or
rcrb
add
mov
push
xchg
scas
mov
mov
pusha
pop
pop
pop
test
outsb
inc
jecxz
push
leave
fwait
movsb
fstl
push
addr16
adc
push
orl
stos
andl
sarl
stos
repnz
fwait
daa
cmpsl
xor
js
movsl
sub
xor
cmp
xor
jbe
movsb
lock
mov
clc
insl
push
lock
test
jb
mov
cmp
arpl
pop
mov
or
lods
cmc
sbb
xor
add
push
jae
jne
sbb
adc
mov
mov
sbb
ficompl
or
xchg
sbb
dec
pop
push
sarl
push
xor
push
xchg
xchg
mov
ja
push
dec
and
das
int3
dec
adc
lret
pushf
loope
jle
push
in
dec
lret
mov
subb
fisttpll
dec
dec
ret
xchg
stos
fildl
mov
test
mov
push
pop
mov
addr16
outsl
popf
dec
or
repz
rorl
pushw
cmp
xlat
push
std
mov
stos
mov
aad
xlat
add
icebp
testb
fidivrs
pop
xlat
fdivr
fsubrp
dec
cmc
dec
call
addr16
push
mov
jne
loope,pn
scas
aam
xor
jb
js
aaa
xchg
es
jmp
push
scas
in
test
repnz
cmp
pusha
in
pop
or
jp
bound
test
mov
sbb
adc
jnp
pop
mov
lahf
xor
adc
shll
lcall
insb
push
paddsb
adc
loop
dec
cmp
xchg
xlat
cli
pop
fstpl
ljmp
pop
stos
or
rcl
fidivl
or
icebp
sbb
sub
cs
mov
mov
lock
movsl
xor
xchg
jle
cmpsb
mov
out
jnp
mov
jecxz
mov
or
inc
jecxz
mov
arpl
stos
inc
jae
daa
sub
push
jle
lret
in
jns
jmp
jmp
leave
xchg
enter
cmpsb
jnp
adc
adc
mov
mov
jmp
dec
mov
dec
fwait
cmpsb
push
movswl
out
xor
push
fwait
scas
adc
cmpsl
sbb
push
clc
mov
jl
xchg
ret
dec
rcrb
add
movsl
loop
jecxz
push
or
jl
xchg
and
inc
cld
test
jge
jle
rcrb
imull
jae
in
rolb
repnz
mov
test
dec
or
in
fstl
fmull
outsl
outsl
pop
decl
push
cld
scas
xchg
pop
lret
push
mov
mov
sti
lcall
fsubr
xchg
xlat
and
cmc
insb
mov
lret
push
mov
scas
jle
inc
adc
pusha
add
xchg
fwait
jp
pop
pop
add
jne
sbb
push
jae
or
cmp
lcall
scas
movsl
loopne
xlat
mov
xchg
test
fs
rolb
lods
inc
mov
dec
dec
fnsave
stos
cmp
aas
xor
in
sub
push
fildl
rorl
in
daa
and
clc
icebp
loop
jecxz
outsl
out
in
cmp
fstl
movl
loopne
xchg
sti
sbb
test
mov
mov
in
cmp
push
mov
mov
and
lret
das
jmp
mov
jecxz
mov
jge
aam
mov
jmp
inc
add
in
push
xor
movaps
outsl
push
in
cmp
push
shlb
arpl
jecxz
sti
fnsave
lret
fmul
or
xchg
stos
push
jns
call
sub
aaa
sub
imul
mov
outsl
and
in
mov
jecxz
hlt
cmpsb
rclb
filds
in
fnstenv
cmp
or
sub
and
xor
mov
sbb
inc
inc
jne
sub
xchg
scas
add
push
stos
and
ret
and
outsb
push
js
inc
push
sub
push
aad
rcl
es
in
dec
and
movsl
dec
jmp
imul
cwtl
push
jns
ffree
cli
push
push
in
xor
cmpsb
bound
int
xchg
call
or
pop
ja
dec
xor
jecxz
dec
pop
adc
sub
jns,pt
dec
in
mull
push
cmp
mov
jge
pop
test
sub
rcr
gs
mov
mov
pop
fiadds
jg
add
inc
lret
mov
push
popl
jmp
or
add
and
ja
lret
shl
or
mov
mov
insl
shr
ljmp
xor
arpl
fisttpll
ror
xor
add
push
repz
pop
xchg
fwait
gs
adc
mov
adc
xchg
repz
dec
in
ljmp
int3
pop
sub
adc
adc
mov
mov
adc
mov
scas
cmc
adc
test
dec
inc
ret
cmp
xor
das
aam
pop
nop
cmc
xor
ret
mov
mov
ljmp
or
loope
jno
lods
nop
dec
push
adc
pop
dec
and
dec
adc
pop
mov
in
fsubl
mov
xchg
mull
out
adc
daa
xchg
popf
jno
fucomi
push
jecxz
repnz
jecxz
div
push
ret
mov
jge
jl
idivl
pop
pop
lods
stc
mov
sub
pop
inc
clc
fcmovnu
mov
cmp
pop
and
lds
imull
sbb
test
imul
and
imul
rcll
add
into
mov
loope
in
adc
rcrl
jo
or
int3
xlat
iret
mov
sub
sbb
mov
sti
cmp
ret
aad
or
xor
or
dec
cmp
out
or
mov
rolb
pop
ffree
xor
stos
int
jp
cmpsb
mov
or
mov
mov
pop
repz
jbe
arpl
pop
jnp
jae
adc
mov
outsb
xlat
dec
sbb
and
sti
cmp
add
jecxz
cmp
ret
sub
or
cltd
dec
nop
pop
add
lret
or
lahf
ficoms
jmp
adc
mov
loope
call
jle
lret
movb
jp
push
jmp
add
gs
in
or
or
sbb
mov
fwait
xor
int
adc
daa
xor
add
jne
and
mov
repz
dec
std
das
inc
arpl
mov
mov
mov
scas
and
aas
jecxz
sbb
cmc
mov
mov
cmp
cmc
xor
addb
jns
clc
std
mov
icebp
lods
and
mov
mul
out
xlat
push
lea
mov
aaa
mov
in
mov
imul
mov
movl
and
pop
ljmp
add
insl
lods
test
rcrl
sbb
adc
add
jbe
stos
add
scas
jb
cmp
imul
lret
pop
aam
cmpsb
sahf
xlat
pop
out
jns
ds
loopne
arpl
movl
enter
bound
lcall
andb
jnp
sub
faddp
pop
cmp
dec
add
pop
mov
test
fcmovne
cmc
outsl
adc
call
les
dec
dec
mov
repz
jbe
or
mov
add
mov
cmp
adc
xor
jbe
sub
dec
mov
jns
cvtdq2ps
pop
or
pop
lret
cmp
add
mov
sub
dec
insl
inc
push
cwtl
cli
jp
scas
rcll
out
rolb
mov
outsb
jae
pop
mov
push
mov
push
fldt
loope
dec
pushw
jmp
sbb
insl
jb
jmp
push
push
jb
in
mov
jl
mov
fdivrl
jb
cmc
fdivrl
cs
xor
mov
sbb
xorl
mov
adc
mov
mov
sub
leave
push
and
into
jmp
es
push
in
clc
stc
adc
xor
stc
movsl
loopne
lret
leave
mov
shrb
dec
cmc
add
enter
cmp
xor
pop
js
repnz
fwait
adc
pop
xor
sub
mov
lds
fs
es
adc
pop
add
leave
in
addl
mov
add
cmp
jmp
inc
addb
stc
mov
stos
or
pop
xor
push
in
jo
xchg
js
xor
rcll
mov
xchg
sar
push
test
cmp
and
test
push
xor
divb
add
idivl
in
mov
pop
xchg
lods
scas
push
enter
aas
lods
mov
sub
jne
and
gs
inc
fnsetpm(287
push
fsub
cmp
movsb
pop
xor
mov
xlat
pop
xor
jl
sub
jmp
jg
mov
dec
aaa
iret
lret
cs
jmp
aam
mov
dec
xchg
mov
nop
mov
pop
sub
fstp
jbe
ss
add
imul
adc
scas
mov
cmp
lods
sahf
lods
xor
call
cwtl
in
loope
imul
or
pop
xor
cmp
pop
and
rcrb
movsl
add
jne
cmc
xchg
push
dec
testl
or
push
jge
jne
jnp
outsl
push
push
add
rcrl
mov
js
sti
xor
and
mov
pushf
popf
mov
jl
bnd
sub
fwait
daa
mov
xor
stos
pop
dec
fdivp
push
je
outsl
lock
cmpsl
mov
jmp
jge
clc
push
cmp
cmpsb
in
dec
jae
outsl
sub
dec
and
xor
ret
sarb
aas
or
jns
sti
xor
hlt
or
fsubp
sub
xor
mov
mov
les
scas
xchg
fists
push
xchg
fldcw
mov
rcrb
push
stos
push
repz
loop
lods
orb
lods
add
mov
in
cmp
mov
adcl
or
ljmp
in
push
jno
and
jnp
and
add
rclb
push
lea
nop
adc
data16
movsl
or
in
decb
pusha
lret
jmp
adc
scas
in
sub
cmp
aaa
fdivrp
popa
fxch
imul
xchg
inc
test
ja
aad
push
pop
cld
xchg
sarl
gs
jne
jno
mov
repz
mov
push
pop
cmp
imul
mov
push
jle
in
ljmp
pop
sbb
sahf
xchg
cwtl
jns
sbb
pop
lret
aaa
into
cmp
jns
mov
test
aaa
jb
lahf
dec
cmp
adc
dec
aam
mov
daa
dec
call
jb
push
mov
lcall
cmpsl
cmp
clc
add
ljmp
call
sub
nop
cmpsb
sub
fwait
lcall
pop
xor
in
xchg
call
mov
int
push
inc
jb
jp
icebp
mov
jb
repnz
jb
sub
mov
cltd
jb
pop
fnstcw
cltd
lcall
lds
in
arpl
pop
jle
sbb
and
sbb
imul
adc
movsb
imulb
push
xchg
ret
outsb
push
outsl
cmp
sub
jmp
pusha
clc
lret
inc
mov
mov
aaa
jno
pop
insl
jne
das
cltd
pop
js
or
xor
jle
push
mov
scas
mov
cmp
mov
int3
jbe
mov
int3
ja
jne
lock
inc
cmp
pop
rcll
lock
stos
test
xchg
in
or
insb
mov
test
fisubl
rcrl
or
pop
stos
rcr
add
xchg
xchg
data16
pop
and
jno
nop
mov
pop
lret
sbb
aaa
mov
gs
lcall
mov
adc
push
ret
push
jmp
inc
inc
popa
xchg
seto
xor
xchg
orl
je
rol
mov
arpl
jecxz
cmp
sar
ja
xchg
and
mulb
data16
xlat
jbe
cmc
sbb
in
jne
lea
fisttpll
cmpsl
movsl
mov
mov
add
imul
lret
sti
fnstsw
dec
data16
sub
fdivrl
int
cltd
rcll
jecxz
add
xchg
in
cltd
lcall
mov
addr16
mov
test
push
mov
inc
lret
loopne
imul
rolb
idiv
cld
lcall
pop
mov
and
cmp
and
mov
and
mov
cli
jae
repnz
sbb
les
iret
outsl
out
and
es
jp
adc
in
dec
sbbl
and
dec
frstor
lea
pop
mov
fdivrs
inc
scas
lahf
jmp
add
ds
or
and
or
int
insl
loop
xor
xorl
xchg
stos
add
xchg
push
rcr
push
imul
lock
test
cmp
or
cmpsb
jb
xchg
adc
mov
dec
sahf
xchg
xor
push
push
fisttpll
out
push
test
xchg
jno
sbb
cwtl
push
cld
dec
in
xor
pop
insl
cmp
ljmp
sbb
sahf
add
loopne
adc
xlat
daa
mov
push
jne
rolb
push
xchg
ret
jecxz
mov
xchg
scas
and
out
mov
mov
testl
xlat
mov
mov
ja
test
imul
fisttpl
lcall
lcall
push
pop
imul
pop
clc
cmc
pop
shlb
mov
sub
fisttpll
xor
imul
jl
dec
stos
push
dec
xchg
xchg
xor
fsubs
lock
lods
xchg
mov
out
sub
mov
cmp
loopne
xor
ljmp
rcrl
sbb
jo
aaa
dec
dec
xor
sbb
lods
repnz
jnp
cltd
loopne
jbe
mov
pop
orb
adc
xor
das
arpl
lret
push
pop
jecxz
xchg
dec
pop
frstor
fwait
add
les
sub
fs
pop
sbb
scas
adcb
or
pop
insl
pop
test
fimuls
ret
jle
mov
jb
rcrb
xchg
xor
adc
xchg
mov
or
imul
into
push
mov
add
data16
movsb
sub
push
sbb
inc
dec
pop
or
and
pop
and
pushf
mov
mov
pop
cmpsb
in
ds
frstor
xor
or
faddl
sbb
enter
rorb
adc
xchg
xchg
fstps
xchg
mov
adc
jbe
mov
jmp
insb
rclb
in
jns
cmpsl
cmpb
mov
in
mov
pop
lret
and
push
push
mov
lret
adc
out
cmc
aas
pop
fcomi
inc
hlt
divl
data16
stos
es
mov
xorl
popa
xlat
fldl
call
sti
fmull
fstpl
xor
fcmovnbe
jbe
push
pop
mov
mov
sbb
outsl
cmc
ss
push
mov
xor
dec
and
mov
sub
and
sbb
in
dec
int
xchg
scas
pop
popf
and
test
sti
in
or
cmc
xor
jae
push
pop
lcall
push
xchg
add
aaa
add
and
lds
ret
or
lods
orb
mov
js
inc
jbe
pop
xchg
push
lds
push
repnz
push
dec
cli
les
push
test
fisttpll
div
rolb
mov
loope
sbb
inc
sub
out
dec
adc
dec
sub
ds
prefetcht0
cmpsb
scas
rcl
mov
mov
jns
and
jae
cmc
xlat
dec
lahf
sbb
lret
or
pop
push
sub
jecxz
dec
in
or
mov
movsb
movsl
cmp
shlb
sbb
jne
imul
outsb
push
popa
sbb
or
xor
repz
mov
stc
or
dec
lock
arpl
in
clc
or
stc
xorl
imul
in
mov
fistps
lods
das
or
mov
mov
inc
cmc
jo
outsb
out
mov
xchg
inc
cmpsl
push
imul
dec
mov
test
mov
mov
mov
mov
in
xor
lods
sbb
movb
jmp
mov
fisttpll
xlat
aaa
cmp
lcall
xchg
or
jecxz
xchg
loop
ja
insl
stos
dec
push
insl
jmp
fldenv
loope
aas
jno
and
adc
or
out
or
fists
adc
inc
ret
cmp
fwait
pushf
inc
rcrb
repz
jns
push
data16
sti
push
adc
push
repz
fisttpll
add
cmp
push
mov
adcb
mov
addb
sbb
cs
jmp
idivb
push
pop
inc
mov
pop
fld
mov
roll
stos
in
mov
fistpll
jp
testb
lock
mov
subb
js
outsl
fst
mov
lahf
cli
add
cmp
mov
push
push
push
adc
push
push
inc
xlat
outsb
xchg
and
loopne
mov
into
push
cli
shrb
pop
pop
cmp
lret
lds
and
jb
and
add
dec
fucomip
mov
jbe
leave
mov
mov
sub
pop
shl
push
imul
push
cmp
mov
add
nop
cli
xchg
fists
loopne
cmpsb
enter
rep
inc
imul
iret
push
cmpsb
popf
mov
mov
fnstsw
xor
loop
add
mov
stc
dec
mov
mov
out
mov
es
jbe
add
mov
imull
push
pop
pop
push
mov
cmpsl
aaa
inc
dec
test
mov
adc
or
popa
fs
rcrl
mov
mov
int3
data16
mov
jl
nop
jle
sarl
xchg
es
ljmp
mov
and
mov
and
sub
ds
sbb
fnsave
jne
push
xor
adc
dec
xchg
lahf
cmp
sbb
ss
aaa
test
iret
mov
xchg
test
mov
xchg
cmp
pop
scas
mov
pop
outsb
or
cmc
adc
je
hlt
scas
xor
sub
push
mov
dec
pop
mov
cmc
in
mov
and
push
test
mov
mov
js
mov
sub
daa
imul
int3
xor
cmp
pusha
scas
jecxz
add
dec
sub
rorl
hlt
add
test
addb
es
mov
cmpsl
shrl
stos
mov
ficoml
lret
popa
push
dec
push
addr16
jle
loope
mov
jae
sub
xchg
in
lret
dec
xchg
test
fstp
or
inc
cld
push
or
cld
xor
insb
jae
mov
loopne
or
add
in
inc
hlt
jle
xor
stc
or
scas
mov
in
rcrb
xchg
sub
fwait
or
ljmp
fs
es
bound
xchg
mov
ds
sub
lcall
mov
std
fstps
in
xor
adc
mov
testb
mov
scas
xchg
mov
enter
mov
xlat
je
lret
out
jmp
dec
mov
mov
xor
mov
insb
out
sbb
xchg
sbb
fldenv
xor
lret
adc
sub
mov
xchg
xchg
mov
or
sarb
push
in
jae
push
std
out
scas
jle
jb
push
rcl
scas
or
mov
cmp
loop
xchg
rcl
inc
pop
jnp
xor
cmc
dec
or
add
data16
test
mov
mov
pop
push
dec
arpl
outsl
mov
subb
js
clc
cmc
mov
lods
fsubp
icebp
xor
jmp
dec
mov
nop
int
test
cmpw
call
inc
dec
mov
mov
xor
mov
jp
xlat
movsb
ss
jo
js
push
insb
jbe
add
daa
je
leave
or
push
mov
push
cmc
enter
shl
inc
xchg
push
xchg
dec
jmp
mov
ret
repnz
push
or
outsb
jnp
or
sbbl
or
add
insb
sub
fimuls
outsl
mov
mov
sub
mov
das
mov
mov
jnp
push
mov
addr16
out
cmp
lahf
in
imul
jecxz
mov
jnp
pusha
popa
adc
mov
xor
mov
jg
jecxz
je
jne
mov
lods
lock
cltd
and
jecxz
add
pop
sbb
loope
sub
xlat
push
cmp
push
mov
pusha
std
adc
js
mov
arpl
fnsave
mov
in
jl
pop
jnp
cmc
pop
and
adc
push
out
adc
mov
and
xchg
push
lock
xchg
fstl
in
push
jne
repnz
jl
sub
pop
negl
cltd
mov
int3
lds
cmc
mov
arpl
mov
jne
adc
cmpsl
push
out
in
add
jmp
push
or
adc
outsl
jne
add
dec
mov
out
add
stc
frstor
testb
into
outsb
fisttps
mov
filds
ljmp
jns
in
test
jmp
sbb
adc
cmp
pop
xor
inc
aaa
dec
pusha
ss
xor
jbe
jb
fmuls
and
loope
dec
mov
jg
mov
shl
push
pop
jbe
rclb
lret
in
icebp
push
dec
dec
test
sub
xor
mov
and
pop
aaa
repnz
stos
push
jp
hlt
mulb
daa
sub
push
pusha
out
stc
push
arpl
or
pop
cs
imul
fstp
jl
mov
jle
or
ljmp
dec
mov
push
push
pop
xor
adc
out
push
jbe
add
repz
push
xor
xorl
mov
mov
enter
jle
ja
sbb
lea
insl
mov
mov
repz
pop
repz
mov
mov
adc
push
jmp
and
or
and
xor
jno
in
fwait
je
xchg
scas
mov
fwait
or
xchg
scas
lock
gs
icebp
in
cmpsl
fldl
cmp
pop
inc
xorl
clc
dec
mov
insl
arpl
loop
jno
loopne
sub
add
sub
les
or
scas
push
arpl
mov
dec
pop
sub
jno
mov
jg
mov
jmp
mov
das
ja
shll
xchg
mov
mov
idivb
push
add
add
inc
repnz
adc
das
pop
xchg
movsl
decb
mov
jne
mov
xorl
jp
shll
xchg
or
jge
push
pusha
enter
daa
scas
lret
sti
and
sub
jp
lret
xchg
pop
mov
xchg
xor
add
test
int3
jmp
loopne
stc
sarb
cmp
mov
jecxz
data16
jnp
cmc
pop
clc
mov
pop
lahf
outsl
movsl
or
jbe
into
push
fmull
test
cld
mov
das
mov
das
popf
sbb
int3
xlat
push
je
aas
hlt
or
addl
shl
daa
sub
mov
scas
and
push
inc
mov
cli
popf
push
call
out
cli
push
popf
xchg
cmpsl
inc
jnp
cmc
cltd
and
aad
cmpsb
or
add
sbb
cmp
lods
and
jmp
xchg
jo
jne
inc
jle
sti
xchg
and
lcall
push
in
inc
ret
cs
pop
inc
sbb
repz
adc
jl
xchg
lahf
inc
add
jbe
dec
cli
adc
addr16
pop
fstpl
mov
outsb
adc
test
test
into
pushf
sbb
jl
cmp
ljmp
push
jecxz
cmpsb
or
jp
jb
and
adc
in
jmp
or
or
dec
add
nop
insl
loopne
mov
push
dec
test
mov
rorb
jecxz
aad
pop
hlt
add
in
jae
dec
in
sbb
xor
cmpsl
jmp
push
sti
pushf
pop
aaa
stc
in
mov
inc
pop
adc
call
mov
dec
scas
cli
ja
test
rcll
divl
cli
xchg
push
inc
dec
data16
das
jns
xlat
das
stos
insl
sbb
mov
cld
jecxz
dec
ret
mov
std
dec
test
test
jecxz
into
in
cmp
mov
xchg
pop
sbb
bnd
aam
xor
mov
rcrb
jns,pt
fucomp
xor
lock
out
xor
std
div
jmp
stos
lods
ficompl
mov
je
shlb
pop
push
inc
jp
andb
xor
cli
std
cmc
ret
lds
in
sub
sahf
jbe
mov
push
ficoms
in
push
and
inc
rcrb
xchg
rorl
loope
jl
insb
jg
adc
mov
xor
ret
outsl
mov
daa
aaa
jg,pt
or
pop
movsb
dec
jne
mov
mov
jnp
shr
ffree
pop
add
ds
shlb
inc
inc
push
jns
fdivs
loope
jmp
adc
jecxz
mov
or
inc
push
fisubrl
fcoml
aas
pop
or
dec
mov
jae
dec
cli
or
popf
mov
cmp
fdivrl
push
or
fistpl
stos
lret
fcmovu
test
roll
int3
je
aaa
lea
in
bound
dec
pop
shll
in
mov
fcomi
cwtl
or
or
cmc
lret
mov
ljmp
xor
shrb
mov
add
push
pop
xor
or
mov
das
aas
in
scas
getsec
cmp
pop
es
jle
popa
or
fidivrl
in
mov
sub
fs
cmpsl
mov
loop
insl
inc
or
shlb
repz
insb
fmull
or
mov
mov
repnz
add
int
out
in
arpl
les
sarl
repz
sub
paddb
cmpsb
xlat
cmp
sbb
outsl
movsb
cmp
lods
sti
insl
pop
arpl
std
int3
add
shrb
andl
cmc
sub
icebp
xorb
mov
loope
jo
fwait
in
mov
sti
add
pop
dec
lock
mov
dec
fisubs
fstl
push
std
jmp
fs
andb
pushf
pop
and
shr
fnsave
xchg
or
outsl
pop
and
jl
cmc
mov
in
out
mov
cwtl
push
imul
xchg
jbe
outsb
and
lock
dec
testl
les
fcoms
das
pop
xorb
cmp
xlat
push
add
push
icebp
sbb
jns
ret
mov
cmp
iret
push
repz
xchg
cwtl
fcos
std
xchg
sub
mov
repz
sub
add
rcll
and
push
imul
jae
cmc
out
sahf
test
push
int3
pop
sbb
jae
add
mov
int
aas
jmp
js
push
and
aas
add
or
xor
mov
jae
outsl
and
lods
inc
sub
xchg
adc
pop
rorl
fcoml
xchg
jns
xchg
gs
sub
cmpsb
mov
cld
push
into
ficompl
jne
mov
in
rol
repz
add
stos
insb
in
pop
push
mov
add
pop
sub
pop
and
addb
push
xchg
subl
dec
dec
dec
mov
jns
mov
stos
pop
dec
loopne
fisubs
mov
cwtl
mov
mov
aaa
shlb
hlt
popa
pop
push
push
mov
jecxz
je
cmc
cmp
jns
out
cmp
sub
pop
jmp
in
std
rcll
fsubr
cld
data16
loope
cmp
jl
xlat
xor
push
push
addr16
repnz
inc
lcall
jp
mov
in
mov
mov
or
mov
and
or
sbb
aaa
loop
and
pop
xor
popa
mov
inc
in
pop
xchg
mov
mov
add
sub
pop
adc
cltd
mov
lods
out
decl
adc
fwait
mov
sub
mov
imul
jl
jbe
fst
imul
cli
mov
mov
imul
cmp
or
loopne
lahf
pop
int
imul
popf
inc
jle
or
iret
pop
cmp
rolb
addr16
jnp
jo
mov
mov
push
push
jmp
pop
jmp
in
add
fldenv
xchg
inc
mov
movsl
push
lret
mov
aaa
and
inc
mov
or
lcall
xor
test
push
es
in
sub
jnp
and
adc
pop
cmpsb
repz
inc
mov
imul
push
movsb
cli
jbe
sbb
push
icebp
adc
lock
jo
mov
add
icebp
push
mov
repz
pop
or
mov
jg
adc
orl
movsb
addr16
jb
mov
sub
ds
pop
xor
cmp
jmp
mov
xchg
sub
sbb
push
push
popf
push
aaa
call
scas
mov
push
dec
pop
push
xor
testl
cmp
inc
repnz
and
shrb
pop
outsb
inc
add
stos
sti
stos
pop
lret
in
insl
imul
mov
jb
jp
add
sub
cmc
jb
mov
mov
lret
lret
cwtl
in
dec
inc
loope
cmp
add
stos
sbb
test
fsubrl
xchg
divb
inc
cmpsl
and
jmp
dec
mov
jcxz
imul
cmpsb
xchg
mov
data16
xchg
xchg
fcmove
mov
out
cld
das
push
jae
int3
push
outsl
push
or
inc
insl
cld
gs
outsb
sub
push
shrl
push
xchg
pop
sub
or
xchg
enter
mov
add
loopne
repnz
jmp
sbb
lret
mov
push
das
and
add
mov
cld
pop
jo
xor
ss
xchg
xor
xchg
inc
fisttpll
lret
js
jmp
pusha
mov
inc
popa
ret
clc
cld
mov
negl
scas
scas
hlt
es
jecxz
cld
adc
pop
or
sbb
fldl
add
dec
lcall
mov
mov
sti
fwait
inc
pop
lcall
pusha
pop
out
or
mov
add
and
sbb
in
mov
ret
mov
xor
sub
push
outsl
das
jmp
pop
fcompl
cmc
aaa
mov
scas
or
xor
mov
dec
dec
movsb
data16
fidivrs
cmc
in
xor
shrl
shll
jp
sar
jbe
ds
repz
mov
xor
or
adc
pop
xchg
mov
aad
mov
lret
or
push
addr16
fsts
jmp
addr16
mov
cmp
xor
dec
icebp
sahf
jb
xor
xchg
jge
loope
sbb
insl
mov
mov
inc
js
in
test
pop
repz
les
cmc
mov
arpl
lods
frndint
pop
enter
adc
fs
aad
aam
jmp
icebp
shll
sbb
adc
fstl
push
xlat
mov
in
into
stos
sub
cmp
or
sbb
inc
loopne
pop
lds
pop
pop
in
sub
scas
xchg
loopne
repnz
imul
xchg
div
sub
mov
inc
push
adc
jnp
xchg
call
stos
add
aad
outsb
rcll
xchg
in
push
xor
shrb
scas
idivl
add
lea
dec
rorb
fstp
sub
xchg
add
xchg
jne
shlb
insl
movsb
push
xlat
adc
sub
pop
adc
adc
xor
push
fisubrs
outsl
icebp
and
je
ds
and
jns
shl
cli
test
jbe
fistpll
add
movsb
aas
rolb
or
mov
mov
sbb
mov
pushf
pop
shr
adc
mov
dec
xchg
xchg
push
or
cmpsb
pop
jmp
lret
repnz
shl
fstp
cld
lcall
testl
lahf
cmc
mov
lock
cmp
add
cmp
and
mov
jne
fcoml
daa
or
push
filds
push
adc
dec
lret
fidivrs
sbb
sub
jmp
jmp
sbb
lea
mov
jo
add
movsl
aas
add
mov
or
push
xor
mov
xchg
jne
cmp
cmpl
xchg
xchg
outsl
mov
test
dec
fisttpll
enter
mov
cs
mov
pop
insl
popl
int3
mov
lods
jno
pusha
push
sbb
pop
mov
rorb
jae
push
cltd
or
scas
adc
int3
inc
or
xlat
mov
fnstsw
bound
testl
mov
scas
ja
cmc
jmp
xor
dec
shrl
fs
adc
movsb
mov
xor
movups
jb
sbb
pop
cmp
in
scas
jne
lret
repz
pop
mov
inc
cld
dec
fwait
jb
ret
cmpsb
jns
jns
enter
and
aaa
xlat
loop
xor
mov
fstp
and
inc
cli
mov
into
test
imul
popf
shlb
enter
inc
jp
jbe
popa
pop
sbb
negl
arpl
push
sub
loopne
or
mov
pop
ficoml
aam
push
jbe
jmp
pop
or
mov
adc
subb
mov
xchg
fcmovnbe
std
pop
ret
js
stos
push
subb
lahf
push
cmp
add
and
and
mov
in
mov
mov
pop
mov
frstor
jle
dec
fisttpll
dec
sbb
sub
test
inc
mov
ret
add
les
pop
lcall
dec
stos
pop
aas
adc
push
jnp
cmp
ss
inc
repz
jmp
jb
mov
or
stos
and
sbb
lret
cld
dec
repz
dec
mov
mov
loop
mov
jns
sbb
push
dec
jle
dec
xchg
jg
aad
push
jmp
sarl
adc
and
enter
or
fbld
cld
dec
mov
cmc
cmpsb
mov
aad
and
jle
pop
dec
rcrb
add
rcl
sub
push
dec
cmp
mov
outsb
rclb
mov
cmp
in
movsb
imul
call
pop
test
and
stc
aas
and
jp
push
sub
inc
cmc
adc
int
arpl
xor
xlat
cld
scas
pushl
test
lods
xor
adc
inc
pusha
lock
or
cmpsl
scas
mov
sti
fldl
cs
dec
rcll
repz
data16
int
add
push
lock
xchg
cmp
mov
orb
and
fisttps
jecxz
scas
out
jle
mov
lret
and
not
rcrb
test
push
mov
xor
dec
sbb
jb
lcall
cltd
pop
jbe
jmp
or
pop
test
bound
mov
mov
cmp
xchg
add
enter
das
pop
in
cltd
dec
xchg
add
mov
ds
fcmovnbe
or
pushf
shl
mov
cltd
les
jecxz
xor
ds
cmpsl
mov
lret
jecxz
lock
mov
loope
sub
push
cmc
scas
outsl
scas
jle
pushf
jae
daa
adc
adc
jmp
mov
xlat
fwait
lcall
mov
in
test
sbb
and
push
jge
cmp
ja
in
stc
insb
loope
cmp
sbb
mov
das
ret
ljmp
cmpsl
sti
add
adc
jp
leave
in
sub
icebp
or
jp
mov
and
sbb
icebp
pop
mov
daa
inc
ds
jl
xlat
add
jb
fcom
mov
add
bound
inc
mov
sti
lods
add
push
and
mov
in
push
mov
out
lret
xor
flds
jmp
mov
push
and
imul
xor
or
dec
sub
jge
mov
pop
xor
push
inc
stos
fnsave
xchg
inc
add
fnsave
loopne
jmp
pushf
rorb
jnp
shlb
sbb
fucom
fwait
pop
orb
fmulp
or
jne
cltd
js
movb
lds
cmpsb
popa
repz
push
outsl
inc
xor
pushf
mov
push
fstpl
enter
adc
cmc
xor
inc
and
stc
lods
rorl
loopne
lcall
cmpsb
push
pop
int
test
fldcw
ds
cmp
xchg
push
jmp
fst
xchg
outsb
lock
xorl
call
in
jp
imull
ljmp
movsb
pop
sbb
adc
jne
xor
into
mov
in
scas
xchg
push
lret
repz
jecxz
add
jp
push
clc
filds
cld
jo
rorl
loopne
xchg
jecxz
pushf
lock
fstp
sbb
jns
dec
jnp
fstpt
xchg
xlat
xor
add
pop
fucom
push
pop
xor
call
add
dec
ficoml
jb
cltd
mov
clc
shrl
insl
sbb
repz
daa
pop
and
dec
dec
movsb
imul
fisubl
inc
cmp
loope
sahf
faddp
sub
mov
cs
fildll
mov
das
pop
rep
cmp
cld
addl
mov
repnz
mov
pop
dec
mov
out
insl
jo
in
imul
mov
cs
jb
call
lret
lret
out
push
rorl
or
repnz
in
rcr
and
pop
nop
movsb
je
xchg
add
rorl
lcall
out
xor
sub
cmpsl
adc
mov
jae
mov
mov
adc
test
out
xchg
aaa
in
mov
std
mov
into
xchg
fs
add
jbe
push
lea
out
test
mov
dec
lods
stos
fcmovu
adc
imul
pushf
fiadds
jle
ja
int
int
pop
push
movsb
out
mov
mov
pop
jo
in
shrd
scas
outsb
sub
add
mov
faddl
pop
daa
cmp
jp
xor
popa
outsb
fstpl
mov
fisubl
pop
jb
mov
push
pop
roll
adc
cmpsb
in
push
xchg
fcompl
sbb
cmp
jmp
lods
or
test
jb
je
mov
dec
ret
push
add
daa
cli
xchg
sub
jns
sub
sti
pop
lret
test
jp
popf
jmp
ljmp
aam
jbe
push
iret
inc
pop
mov
lods
lds
das
pusha
pop
leave
imul
pushf
fstpl
loop
mov
jl
movsl
cmp
pop
sbb
mov
dec
xor
sti
xchg
pop
shrl
out
jp
aad
lock
pop
test
mov
lcall
jbe
mov
or
push
scas
jb
sub
shrl
mov
dec
add
or
fprem
in
cli
jne
xchg
cmc
xlat
adc
pushf
mov
pusha
mov
pop
inc
push
pop
scas
fnsave
lret
push
pop
stos
loopne
mov
pop
fmull
pop
mov
stc
test
stos
pop
xlat
dec
mov
mov
xchg
mov
fistps
fmul
mov
push
loopne
pushf
adc
jl
lret
cli
rol
rol
pushf
arpl
cmc
jp
sbb
jns
sub
ljmp
pop
js
inc
mov
add
ficoms
lcall
mov
ret
cmp
sub
stc
add
jecxz
xchg
jb
fidivs
aam
cmc
divb
xor
bound
jecxz
push
xchg
jge
cmp
out
sbb
mov
test
push
jbe
push
es
cmc
xchg
idiv
test
mov
mov
shr
adc
std
ja
neg
or
pop
cmp
andb
cld
fisttpll
sbb
cld
sti
frndint
test
sti
mov
pop
sbbl
std
arpl
inc
in
pop
cmc
add
aam
test
pop
sub
lahf
cmp
outsb
pop
xchg
cmc
lret
inc
mov
loope
push
out
dec
mov
jle
arpl
dec
in
push
cmp
shlb
xchg
cmp
scas
icebp
ja
and
pop
mov
cwtl
inc
cmpsl
rolb
cli
es
in
addb
cmpsb
push
lods
mov
fcmovbe
jo
mov
fists
dec
insl
sti
jg
in
pop
out
xlat
jno
in
test
mov
lret
fnsave
mov
xchg
mov
jbe
push
cmc
add
add
or
pop
and
jg
and
insb
in
stos
imul
pop
adc
lods
test
pop
test
or
inc
sub
stos
push
or
repnz
data16
imul
inc
dec
pop
fsubrs
lcall
pop
imul
and
lods
fdivl
repnz
dec
or
push
int
dec
out
insb
stc
pop
sub
imul
fnstsw
adc
add
dec
mov
cmp
or
push
push
mov
ja
in
bound
sbb
jl
insl
bound
sbb
pop
fsubrl
mov
dec
mov
lcall
pop
sarl
pop
push
cmpsb
push
or
dec
in
cmpsl
sub
pop
adc
outsl
ret
xorb
sbb
or
cli
stos
mov
aad
hlt
jp
or
ret
mov
inc
aad
sub
shr
mov
pop
aaa
dec
in
sbb
mov
mov
pop
xchg
dec
addr16
out
mov
push
ficoml
mov
mov
stos
pop
sarb
jb
or
pop
cmp
mov
add
ret
cmp
cmp
fdivr
xor
add
jb
jne
sbb
ret
pop
sbb
jecxz
cltd
sbb
pop
and
mov
or
or
les
jecxz
push
and
pop
push
push
out
mov
push
cmp
xor
pop
push
inc
xchg
mov
jecxz
imul
mov
cmpsl
cwtl
inc
mov
in
mov
sub
sti
xor
stos
mov
daa
or
ja
xchg
fnsave
nop
in
xlat
int3
enter
jne
ficoml
xchg
push
jns
push
pop
xchg
xor
test
fnstcw
add
lahf
cmp
in
xor
mov
cmp
or
xchg
push
and
fstp
push
sbb
mov
push
stc
fwait
cmc
movsl
mov
adc
adc
negl
ficoms
nop
imul
inc
push
in
les
xor
push
popf
add
fst
lods
cld
rcrb
test
lret
in
div
lret
mov
out
fbld
data16
jne
inc
xchg
roll
pop
cmp
scas
pop
mov
xor
int3
jecxz
das
fdiv
xlat
cmc
fs
loopne
jg
outsl
pop
fisttpll
pop
jne
loop
xchg
jmp
xor
xor
movsb
pop
add
mov
adc
imul
push
pop
cwtl
les
dec
dec
cmc
aad
aas
in
and
pop
xor
xor
ja
mov
adc
dec
sub
add
movsb
ret
lret
xchg
mov
loop
rol
std
jae
cmc
cmp
mov
cmp
sub
andb
je
or
mov
inc
push
mov
mov
testb
mov
scas
sti
repz
push
int3
jmp
mov
in
inc
ds
les
je
jb
leave
fnsave
or
dec
lods
xchg
popa
movsl
sbb
push
popa
sub
pushf
notl
push
push
add
je
mov
in
iret
in
outsb
hlt
pusha
popa
repnz
mov
and
int3
pop
or
mov
jmp
sbb
out
sbb
ficoml
mov
loopne
mov
aaa
lcall
mov
dec
leave
test
insl
adc
xchg
nop
mov
cltd
or
mov
mov
pop
bound
push
fiaddl
push
ss
xchg
inc
outsl
cmpsb
mov
mov
out
push
ds
mov
jns
jp
inc
cmpb
cli
xor
jnp
mov
mov
xchg
mov
lret
or
jmp
and
push
scas
arpl
mov
jp
mov
mov
xchg
and
sub
rol
lods
das
xor
jecxz
sbb
ds
mov
jae
test
std
mov
xor
mov
push
stos
mov
pop
dec
mov
fldcw
in
cmp
push
mov
mov
xor
cmp
cmp
sbb
push
outsl
cmc
out
ret
xchg
sbb
jns
or
notb
sti
add
jo
fdivrs
push
fisubs
mov
push
imul
mov
jns
inc
jge
jae
adc
sbb
sbb
adc
pop
add
inc
jle
inc
std
frstor
dec
jns
in
jo
in
lahf
stc
pop
sbb
adc
out
xchg
or
cmpsb
fadd
jae
push
sti
sbb
mov
inc
dec
xchg
pop
xor
cwtl
adc
xchg
rclb
adc
arpl
lret
ljmp
fnstcw
pop
idivb
inc
xchg
shr
popf
aas
rcll
lods
je,pn
fnsave
enter
in
imul
mov
xchg
push
add
mov
adc
sub
imul
addb
fstl
ffreep
cmp
mov
add
mov
hlt
icebp
add
inc
adc
imul
loope
jae
out
cmpsb
jecxz
sub
cmp
out
mov
cmpsl
aas
nop
insb
shll
push
out
repnz
add
jns
cs
xchg
cmp
dec
ficomps
and
fisttpl
pop
jae
cmc
xor
fmul
pop
inc
insb
daa
call
fisubl
sub
addr16
cmc
xor
fadds
enter
xlat
dec
push
lret
mov
adc
mov
pop
cld
stc
test
div
lcall
mov
jne
bound
pop
pop
cld
inc
jo
xchg
jg
cli
dec
out
shll
xchg
imul
stc
xor
je
sahf
or
les
gs
or
fnsave
rolb
lret
mov
std
add
xor
in
repnz
cltd
push
sub
stc
cmp
pop
repnz
mov
inc
and
or
jl
ja
paddusw
pusha
cld
xor
shrb
mov
faddl
mov
mov
inc
nop
inc
sub
cmp
stos
outsb
push
in
push
adc
cmp
mov
subb
push
fdivp
js
je
sbb
ja
cmp
data16
pop
in
or
pop
push
cld
ja
cmp
add
movsb
lods
stos
lods
pop
popa
repz
mov
ret
cmp
adc
cmpsb
into
lock
or
outsl
and
xchg
mul
mov
fwait
adc
fisttpll
in
jp
mov
mov
fstp
jecxz
inc
cvtdq2ps
icebp
insb
pop
sub
push
icebp
inc
pop
inc
adc
in
sub
loope
and
imul
aad
add
adc
cmpsl
nop
cmp
add
pop
or
jbe
fcmovnu
jns
movsb
mov
ja
cmp
pop
and
mov
sahf
sti
mov
movl
jmp
dec
lcall
ss
mov
jbe
mov
sti
push
sub
out
adc
mov
fistl
iret
dec
out
jp
mov
insl
xor
cmpsb
or
scas
in
fildll
pop
inc
mov
mov
or
roll
mov
aaa
mov
arpl
and
div
inc
repz
xchg
stc
xchg
jmp
adc
sub
push
mov
push
and
in
adc
test
dec
imul
aaa
pop
shll
mov
jae
or
push
data16
cmc
pop
cwtl
mov
lock
jmp
mov
add
mov
hlt
int
or
dec
sbb
xor
fidivrs
sti
inc
in
push
popf
scas
push
inc
leave
xchg
das
xor
mov
jne
movsb
push
jmp
loopne
filds
cmp
pusha
ret
jne
lods
xacquire
cmpsb
sbb
gs
out
push
xchg
mov
push
sti
fldl
mov
mov
mov
xor
xor
in
loop
aad
and
or
and
xor
in
ss
push
cwtl
rcll
testl
outsb
push
and
push
jae
jl
lea
out
inc
cld
fprem
and
mov
mov
adc
mov
pop
adc
cmpsl
sub
mov
push
repz
mov
mov
fisubl
rcr
inc
fldenv
inc
mov
pop
daa
daa
iret
lcall
pop
mov
outsb
mov
mov
inc
sti
loope
sbb
in
lods
scas
mov
push
pop
loopne
xor
cli
in
stc
outsb
popf
imul
mov
mov
cwtl
and
movsb
das
push
jl
or
pop
ret
and
out
cmpb
fwait
pop
mov
lret
fsubl
push
sahf
lods
pop
cli
jecxz
push
xor
cltd
cltd
out
push
xlat
in
test
or
movhps
mov
jl
fstpl
pushf
outsl
xor
and
mov
loope
mov
adc
outsl
cmc
in
mov
lods
test
dec
fstpl
push
ja
adc
fsubrl
scas
lret
sti
into
push
mov
cmc
sbb
nop
jp
push
dec
fstpl
ss
sub
fdivrs
fstpl
out
cmp
int
sub
mov
in
gs
jns
and
jge
lahf
lret
es
cld
fidivrl
jecxz
std
mov
lods
push
xor
cmp
xorb
mov
mov
popa
push
and
les
inc
dec
stc
jnp
ja
pusha
sti
repnz
or
cmpb
mov
jne
xchg
flds
cld
pop
cld
mov
stc
inc
stos
adcb
mov
stos
fdivrs
icebp
dec
push
std
repz
mov
shrb
pop
popa
jno
pop
outsb
sub
push
ss
popf
lahf
mov
ffree
stc
into
xchg
mov
push
add
test
shll
sbb
adc
or
hlt
dec
shrl
loope
dec
and
jmp
mov
jnp
imull
mov
imul
lods
mov
pop
es
lahf
daa
dec
outsl
popf
or
int3
dec
add
mov
mov
jmp
in
jne
jb
aam
inc
cmp
cmp
pop
or
xchg
hlt
mov
repz
adc
lods
movsl
mov
jmp
in
mov
iret
jmp
mov
and
xchg
out
sub
movb
sub
mov
mov
push
jecxz
lds
mov
adc
fcompl
push
inc
mov
sbb
sbb
jmp
inc
pop
dec
fisttpl
pop
jb
idivl
cmp
cmp
lret
and
ja
insl
jne
xchg
ret
push
mov
jl
lret
in
les
test
mov
sub
mov
movsl
mov
mov
adc
mov
imul
pop
jne
xchg
push
push
pop
mov
sahf
pop
fsubp
add
jmp
sbb
xor
mov
div
mov
lock
shlb
mov
mov
aam
adc
push
pop
jg
test
push
in
cmpsl
xor
sub
stos
jbe
pop
or
mov
push
mov
lea
outsl
push
mov
and
sbb
mov
fs
pop
adc
and
ret
jp
mov
mov
in
pop
xchg
ja
sti
or
hlt
loope
ss
jbe
xchg
addr16
push
jecxz
cmpsb
and
pop
adc
inc
dec
adc
mov
or
scas
jne
lcall
shl
loope
dec
jge
insl
or
cmp
in
popf
insl
fldl
rol
xchg
outsb
or
xlat
aaa
adc
pop
mov
fbld
sub
and
in
add
repnz
sub
jo
mov
int3
pop
out
cmp
dec
cmp
and
jb
leave
and
mov
pop
or
test
sarb
sub
jecxz,pt
cmpl
xchg
jne
outsb
repnz
adc
mov
inc
stc
cmpb
mov
sub
inc
pop
jno
dec
int
stos
imul
stos
mov
popa
out
aam
adc
in
xor
push
or
push
outsb
out
jno
pop
rorl
in
xor
fstl
imul
push
push
push
or
movsb
pop
data16
test
mov
lods
mov
xchg
in
mov
cmp
fstp
dec
jecxz
jl
cld
leave
sub
addb
jbe
push
test
inc
mov
jbe
xor
adc
rolb
in
dec
outsb
roll
push
jl
les
lahf
and
mov
and
stos
stc
cmpsl
mov
fwait
ret
lcall
pop
dec
lods
lock
jle
jb
lds
icebp
jo
cmc
adc
mov
jg
mov
pop
jb
and
and
repz
scas
jb
in
imul
pop
jmp
sub
xchg
dec
popf
mov
fisttpll
lret
jmp
jne
mov
lea
sub
adc
dec
in
mov
mov
push
xor
push
mov
dec
cli
fistpll
mov
mov
cwtl
lret
stc
fisubs
inc
mov
mov
lcall
outsl
data16
cmp
adc
dec
bound
out
iret
jbe
jae
pop
jmp
mov
cmc
or
mov
and
push
jl
xchg
das
sbb
add
push
movsb
adc
jne
in
jb
add
mov
add
lock
clc
ja
les
add
in
jle
in
cli
add
cwtl
fstp
mov
push
push
sbb
xlat
pop
dec
ret
dec
and
push
mov
xor
push
clc
shrl
movl
mov
arpl
jg
aad
or
or
lods
je
shrl
sarl
xchg
out
inc
mov
test
or
aad
arpl
xor
lahf
inc
les
cmpsb
pop
wrmsr
xchg
fs
cmp
inc
xor
movsl
inc
scas
cld
xor
or
pop
int3
imul
loope
sahf
testl
mov
mov
outsl
clc
dec
in
inc
idivl
dec
fidivl
pop
js
cmc
aas
pop
repz
rclb
out
jnp
into
divb
or
lds
mov
mov
or
daa
push
xor
movsl
inc
cld
pop
addr16
cmp
repnz
sbb
mov
lahf
adc
lock
fiadds
or
addl
jnp
xor
fwait
arpl
xchg
push
fisubl
imul
sub
pop
test
sbb
inc
jnp
xchg
push
pushf
dec
lock
mov
stos
jbe
dec
jmp
stos
jne
ret
mov
xchg
fmuls
fbld
sbb
int3
sub
jmp
push
ja
add
fsub
lahf
icebp
add
sub
dec
fnstcw
bound
cmp
or
into
out
aas
jecxz
and
mov
stos
ja
mov
dec
mov
dec
ja
add
addr16
jns
cmc
jmp
mov
mov
rorl
out
mov
mov
inc
push
pop
jecxz
in
std
fwait
inc
in
inc
loope
notl
scas
dec
shll
xchg
sub
es
cld
xor
inc
push
and
inc
mov
icebp
inc
test
pop
push
push
in
aas
jo
and
cmp
inc
jmp
or
out
pop
lock
addr16
adc
ret
int
xor
dec
push
or
sbb
loop
mov
pushf
add
jg
jp
adcb
mov
call
in
or
or
divb
inc
scas
xchg
mov
mov
jns
jns
testb
jecxz
dec
repz
sub
pop
lahf
jne
dec
mov
xchg
rorl
jnp
es
and
push
fmull
adc
xchg
negl
int
outsb
stos
lahf
push
dec
mov
cmp
out
arpl
xchg
inc
mov
popf
or
test
pop
cmpsl
lahf
mov
negb
push
cmp
jne
aaa
jo
cli
push
cmpsb
or
and
dec
lret
lock
xchg
mov
mov
ret
daa
push
pop
cmp
test
ret
xchg
addr16
cmc
stos
dec
pop
outsl
xchg
test
inc
rcll
jbe
jne
movsb
lahf
jo
scas
popf
pop
cmp
test
cmpsl
pop
or
enter
lods
xor
cld
rclb
roll
inc
adc
ja
adc
mov
push
pop
pop
dec
icebp
lret
xor
scas
xchg
pop
daa
cmp
popa
lods
in
mov
jnp
shlb
sub
xor
out
cmc
in
mov
fstpl
imul
push
jb
in
mov
in
sbb
lret
adc
xchg
cmp
pop
pop
pop
xchg
cmp
cmpsl
ja
fimull
scas
add
ret
jne
imul
xorb
mov
jg
xlat
lods
push
sbb
sub
push
popa
push
or
sub
out
adc
or
xlat
ret
into
mov
xchg
mov
addr16
push
push
push
mov
ficoml
insl
mov
lcall
mov
xor
cmc
push
dec
stos
loopne
sub
js
push
jo
leave
mov
leave
pop
pop
mov
jmp
cli
shll
pop
cmp
push
in
pop
or
stos
cvtps2pd
pop
in
cwtl
push
movsb
xlat
cli
subl
ja
pop
mov
sub
and
sub
pop
movsb
add
pop
jecxz
out
mov
mov
add
sub
mov
or
into
sarb
pop
rolb
jnp
popf
stos
pusha
jns
or
out
or
jb
inc
imul
dec
andb
in
das
scas
sbb
std
sahf
sub
xor
jns
xchg
pop
in
test
stc
inc
stos
push
bound
ljmp
lock
jp
fcompl
popa
xchg
repz
sbb
aad
lcall
aad
test
stos
das
mov
push
ret
test
out
and
xchg
xor
mov
ret
and
js
jp
mov
inc
jbe
mov
lds
cmp
jns
out
in
or
dec
lret
sbb
cmpsb
rorl
repz
pop
lods
push
scas
hlt
testl
push
and
and
cmp
sqrtps
cmc
pop
rcr
rcrb
jbe
ss
adc
add
outsb
mov
jecxz
rcrl
popa
mov
sub
dec
test
jns
lret
clc
adc
outsl
add
dec
daa
enter
test
mov
and
test
insl
cmpsl
and
mov
pusha
xchg
push
push
sub
jle
jne
mov
clc
in
cli
lret
shll
jns
adc
cmc
enter
push
sbb
int3
in
lock
mov
idivl
mov
iret
dec
fists
ljmp
in
and
cli
xor
dec
std
mov
sahf
xchg
shrl
in
mov
rol
xor
lret
jbe
push
dec
fldcw
cs
in
ds
push
push
mov
aaa
fldl
jl
ret
sbb
in
pushf
lea
lods
addr16
add
inc
testl
xchg
std
jne
sub
push
push
and
push
inc
ja
sbb
outsl
lcall
xor
fdivs
sbb
push
sub
movb
adc
adc
dec
xchg
mov
imul
ret
jae
mov
inc
add
outsl
xor
jge
cmpsb
test
mov
lods
xor
rol
int3
jmp
test
scas
jge
mov
mov
mov
adc
lcall
pop
or
into
or
aaa
add
jle
rolb
mov
sti
outsl
jl
push
nop
sbb
or
cs
jae
sbb
mov
cmpsb
inc
cmpsb
repz
cmp
cmc
add
adc
hlt
fbstp
int
mov
cli
sbbl
jle
dec
pushf
mov
mov
lock
jge
addr16
xor
jmp
push
ret
insl
iret
cwtl
in
insb
cmp
cs
xor
xchg
clc
jno
push
pusha
mov
or
outsb
xchg
jge
fsubl
fbld
aaa
in
mov
jecxz
xor
sahf
es
in
fdivrs
dec
js
mov
mov
es
inc
push
mov
inc
cmp
jnp
cmc
add
nop
subb
fstps
mov
ret
mov
inc
ljmp
mov
cmpsl
pop
lcall
test
jb
pop
dec
cltd
pop
std
sbb
pop
add
cmpsb
repnz
dec
mov
adc
inc
and
out
pop
repnz
outsb
sti
dec
fidivrs
imul
dec
cmpsl
sbb
mov
xchg
repz
cmp
ffree
fcoms
xor
push
jb
shlb
je
fbstp
add
inc
mov
outsb
sub
std
sbb
jne
cmc
xchg
in
lds
jecxz
and
pop
jns
mov
mov
repz
sbb
cmp
jb
xor
sahf
xor
filds
jmp
pop
push
gs
mov
or
pop
ja
fidivs
jmp
out
in
cmp
mov
js
insb
notb
mov
inc
scas
jge
inc
sti
push
mov
stc
fcomi
cmp
sti
js
in
cmp
or
fcmovbe
and
rcll
dec
lods
mov
or
lods
out
jae
cmp
push
pop
xchg
sbb
fsubrs
imul
pop
jb
adc
push
cmpl
fucomi
pop
ljmp
lds
fidivrs
push
sbb
inc
jae
xchg
popf
jns
and
inc
dec
pop
test
mov
xor
pop
dec
int3
xchg
jl
cmc
adc
stc
mov
pushf
loop
push
fbld
dec
lea
testl
int
push
roll
mov
xor
xchg
outsl
inc
rcr
loopne
div
cli
fwait
dec
aad
int3
daa
adc
mov
fwait
jecxz
mov
jns
add
es
adc
cmp
out
cmp
sub
rolb
lea
test
cmp
push
jge
bound
cld
mov
cli
addr16
mov
in
or
push
push
dec
cmp
int
jo
cmpsb
pop
and
bound
mov
xor
mov
pop
xchg
ret
mov
mov
mov
jp
jne
repz
fdiv
xchg
cli
or
in
call
sub
fsubrs
insb
cmp
loopne
inc
sub
mov
push
mov
pop
cwtl
sub
in
and
lds
lods
add
push
repz
jl
daa
jo
push
jle
xchg
jmp
in
inc
push
dec
sbb
das
aam
pop
push
test
sbb
outsb
mov
int
xor
gs
jns
shrb
movsb
lea
mov
je
rorb
or
mov
loopne
sbb
andl
dec
test
dec
fucomi
ficoms
ret
ja
cmp
lret
scas
js
xchg
in
xchg
jae
push
and
hlt
jb
scas
jbe
mov
jns
fisttpll
push
jne
ljmp
into
and
jnp
and
cmp
aaa
add
pop
bound
or
push
insb
dec
and
or
stos
aam
pop
jge
adc
push
jge
adc
sbb
aad
sarb
and
adc
jge
cmc
xchg
pushf
testb
dec
cwtl
jne
aad
cltd
dec
lock
jae
xor
outsl
pop
je
xorb
sbb
cld
xor
jecxz
pop
xlat
loop
loopne
jmp
insb
lock
sbb
xchg
insl
in
sahf
lods
mov
loop
pop
std
dec
cltd
push
data16
fnsave
outsb
mov
and
sub
shlb
xor
fistpl
lret
in
dec
or
dec
jno
idivl
ficompl
mov
fs
or
add
das
cmpsb
fnstsw
dec
or
and
add
call
mov
mov
out
cli
in
push
sbb
cmc
jnp
stc
int3
mov
pop
pop
jb
jecxz
add
cli
fst
adc
outsb
and
dec
sbb
xor
xorb
cmc
pop
pushf
sbb
pop
jmp
icebp
add
test
lock
ljmp
xlat
daa
iret
sub
mov
fcmovbe
dec
lret
jne
mov
push
cmp
dec
out
jae
cmc
mov
loope
xor
fildll
in
and
dec
push
dec
out
add
mull
jecxz
mov
movsl
jne
dec
sub
fnstsw
cs
jae
lahf
fs
cmc
push
cs
jp
in
pop
mov
fldenv
jge
cltd
dec
outsb
fwait
loopne
popf
shrb
push
xor
dec
sub
fistl
out
lret
inc
add
jecxz
in
pop
dec
fdivrs
mov
add
arpl
xchg
std
outsb
lret
add
pop
pop
lds
cmc
add
sub
add
sbb
out
movsb
push
loopne
ds
insl
outsl
test
aaa
js
jg
gs
imul
push
jne
test
jecxz
jecxz
pop
mov
frstor
and
adc
pushf
xchg
pushl
movsb
pusha
and
xchg
shll
mov
cmp
mov
es
mov
pop
fdiv
push
orl
jne
in
in
mov
sbb
jl
das
mov
rolb
out
in
mov
pop
outsb
in
pop
lcall
insl
cld
cmc
mov
out
cmp
sub
cmpsb
lods
adc
jl
jb
mov
js
push
imul
iret
add
imul
sbb
arpl
js
shr
lods
sbb
dec
pusha
movsl
cmp
movsl
sbb
mov
adc
fsts
mov
pop
loopne
in
inc
in
cmp
fildll
adc
rorb
pop
mov
aad
mov
and
dec
xchg
dec
push
lods
push
roll
fisttpll
push
idivl
push
xchg
mov
mov
lock
jo
jmp
sahf
popf
dec
mov
and
out
loopne
xlat
sub
mov
in
adc
rorb
lods
jp
aas
jp
lods
push
std
cmp
mov
frstor
jbe
or
mov
outsl
push
cmc
icebp
imul
pop
push
aad
and
test
inc
push
push
data16
push
dec
pop
and
les
mov
aaa
inc
cmc
jmp
iret
push
adc
jl
lret
incl
sbb
xchg
fsts
xorb
ret
repz
jl
mov
sub
xor
sbb
jo
rorb
sbb
loopne
in
andl
shrl
sbb
test
lock
sbb
inc
lods
mov
das
rcrl
cmp
adcl
fists
sub
jne
jae
pop
mov
fldcw
insb
stos
xor
scas
cmc
add
lods
and
sub
cmp
fmull
cmp
enter
xor
out
mul
mov
nop
jmp
jl
sbb
loope
push
or
inc
push
pusha
pusha
inc
test
push
insl
fldt
repz
mov
lahf
rcrb
mov
popa
fnsave
test
orl
stc
jecxz
enter
adc
icebp
push
sbb
addr16
cmc
push
jae
cmp
adcb
cmc
push
popa
sbb
inc
lret
push
in
push
insb
mov
inc
test
mov
mov
ret
xor
xchg
rcrl
fsts
es
inc
adc
jbe
jl
test
push
pop
lahf
push
int3
scas
jmp
cmp
sub
jp
stc
sbb
jecxz
rorb
push
sbb
movsb
in
inc
adc
jge
xor
xor
inc
cmc
clc
jecxz
lret
lret
mov
mov
rorl
int3
or
inc
ljmp
ja
adc
jne
out
mov
push
sbb
test
add
pop
jno
pop
js
lret
in
insl
mov
scas
ret
sub
repz
aam
stos
cmc
imul
ret
jns
dec
bnd
fstl
aas
fimuls
insb
add
loopne
jge
cld
xchg
popf
xor
ret
lods
mov
mov
and
add
mov
imul
mov
test
dec
loope
in
and
clc
cmc
repnz
out
sbb
mov
add
mov
js
sarb
pop
fistl
test
mov
loop
and
cli
in
das
fyl2xp1
xchg
pop
mov
add
mov
ja
aam
jne
xchg
fnstsw
sahf
xlat
cltd
int
jmp
ret
sbb
into
mov
sbb
es
outsb
lock
push
and
mov
xchg
mov
jmp
in
adc
mov
ss
and
or
jmp
add
and
mov
stc
xor
jmp
aaa
or
inc
shlb
cmpsl
fstpl
int
inc
leave
cmpsl
aaa
cmp
rclb
jae
cmc
outsl
cmpsl
orl
andb
xor
push
lret
adc
inc
fmull
sbb
inc
jecxz
mov
subl
mov
mov
lods
adc
ja
loope
xchg
xor
in
xor
push
inc
dec
pop
sub
push
inc
cmc
out
xchg
xor
sbb
cltd
in
je
shrl
or
push
into
xlat
mov
rorl
imul
sub
xchg
pop
push
inc
fs
jmp
fcoms
mov
cmpsl
rep
mov
sbb
lahf
sbb
mov
inc
mov
adc
or
jae
lods
xchg
sub
pushf
lcall
dec
sarb
inc
sub
pop
dec
sub
lret
jae
xchg
pop
in
dec
jbe
test
push
in
sub
add
push
jp
dec
aaa
pop
cmc
cmp
sub
push
or
jl
and
mov
lret
xor
mov
mov
inc
xchg
stos
frstor
imul
push
in
push
rcll
add
sbb
mov
jnp
ret
and
add
popf
scas
cmp
dec
lcall
divl
cmpsb
sbb
mov
cmc
das
mov
lahf
clc
fucomi
data16
mov
or
xor
nop
push
mov
mov
push
xor
pop
andb
jns
pop
shlb
in
js
hlt
fcmovnb
push
test
or
test
inc
repz
dec
pop
iret
shlb
xor
adc
leave
sub
push
stc
xchg
dec
xchg
and
inc
sub
jno
pop
jns
fnstsw
add
sbb
mov
push
lods
mov
sbb
sub
mov
test
cmp
mov
movsb
or
sbb
jl
je
push
dec
es
fs
mov
mov
pushf
or
add
rcr
lds
fwait
cmc
imul
scas
ljmp
and
andb
sbb
cmpsl
in
fsubrs
cmp
ja
jae
inc
pop
or
push
xor
jge
scas
movsb
out
dec
pop
add
jp
cmp
sub
push
mov
sbb
or
lods
and
mov
add
mov
les
cli
inc
xor
jnp
pop
out
lock
movsl
testl
sahf
sub
jb
push
mov
pop
xor
mov
jl
inc
stc
scas
xchg
rcrb
inc
xor
pushf
arpl
in
inc
lds
mov
sub
jo
jnp
mov
sub
adc
clc
sub
pushf
mov
cld
sbb
and
js
mov
daa
dec
cmp
outsl
lea
lods
div
fldl
in
push
hlt
out
jnp
mov
subl
loop
mov
sti
pushf
xor
or
dec
adc
orl
jnp
in
popa
xlat
jecxz
aas
nop
cmc
imul
or
mov
repz
jp
out
test
push
mov
sub
imul
in
stos
das
out
pop
xor
inc
lock
pop
and
mov
cmp
les
aaa
adc
mov
xor
sti
repz
into
scas
mov
push
xor
dec
jns
out
cltd
xlat
cmp
fsubrp
or
outsl
in
scas
pop
lock
mov
mov
mov
jb
adc
loop
js
call
dec
add
pop
mov
and
xlat
sarl
push
jno
ret
ja
and
jb
mov
mov
stos
lret
ret
add
add
nop
arpl
mov
in
push
loop
mov
mov
stc
or
sub
push
leave
pop
jb
das
les
mov
daa
int
xlat
cmp
in
imul
mov
mov
int
or
stos
in
mov
mov
or
lea
test
push
data16
cwtl
leave
orl
add
mov
xor
xchg
sbb
mov
or
mov
cmp
imul
dec
mov
pop
test
mov
cmp
jmp
leave
pop
test
or
aam
test
cmpsl
dec
sbb
and
test
sub
cmp
or
jns
jecxz
ficomps
cmpsb
xorw
inc
loopne
sub
and
push
lods
mov
fcmovnu
dec
fimuls
cmp
repnz
in
aaa
fucom
and
push
adcb
and
mov
rorl
repz
in
dec
clc
test
fbstp
xchg
push
and
jle
in
push
xor
cmp
xlat
jns
pop
lock
sub
push
cmp
cmp
out
mov
sahf
jne
fnsave
pop
aaa
sbb
mov
faddl
fs
xchg
push
sub
cmp
cli
iret
mov
xor
lret
mov
sub
or
pop
xchg
push
mov
arpl
mov
outsb
jnp
roll
xor
fucomi
lret
out
mov
shl
or
es
sub
jecxz
push
mull
pop
pop
loopne
ss
das
es
sub
cwtl
mov
les
cmp
arpl
mov
mov
in
sub
sub
adc
sbb
jne
cmpsb
xchg
arpl
push
add
negl
fistpll
sbbb
lcall
scas
sbb
dec
or
dec
cmpsl
inc
dec
cmp
loopne
xor
mov
test
cmpsb
mov
push
and
xlat
pop
sarb
pop
cmp
push
repnz
shlb
xchg
imul
insb
data16
sub
or
js
dec
fldl
in
jge
sub
cmpsl
cmp
mov
das
in
test
mov
cmp
xor
je
jae
push
mov
xchg
subl
lds
ror
out
mov
pop
mov
and
or
lahf
scas
and
dec
pop
jb
mov
mov
jb
out
repz
idivb
mov
lock
leave
cmp
push
xchg
lret
bound
repnz
dec
fisubrl
test
and
jge
lock
addr16
lret
mov
inc
loope
cs
lahf
notl
jno
adc
cmp
push
jo
stos
xchg
add
or
push
jo
add
or
pop
cmp
repnz
imul
or
fstpl
cmp
cmp
aaa
push
push
rcrb
mov
push
lahf
or
xchg
push
ficompl
mov
pushf
push
push
adcl
sbb
inc
into
dec
aam
fisttpll
add
xchg
xchg
je
xchg
xchg
addr16
mov
xor
sti
cmp
orb
push
popf
or
repz
imul
push
lret
fst
push
dec
sub
in
stos
imul
mov
js
sub
sub
jno
frstor
imul
push
xchg
test
push
ljmp
movsl
sub
mov
adcb
imul
mov
hlt
xor
mov
and
inc
cmp
xor
adc
mov
mov
faddl
jp
movsl
rclb
and
push
enter
ja
inc
push
ljmp
xchg
cli
sub
add
loopne
xor
das
jge
or
enter
xchg
ret
sti
pop
xlat
imul
in
int
mov
out
loope
clc
mov
js
fs
loopne
adc
sub
shrl
cmc
lods
pop
or
adc
test
mov
clc
insl
insl
movsb
sahf
test
lcall
jmp
je
push
cmpsb
mov
pop
fldl
adc
jecxz
adc
inc
in
mov
jge
jmp
jl
int
mov
pop
test
push
sub
nop
sub
mov
push
mov
cmpl
js
cmp
fucomi
fisttpll
call
ret
sahf
cli
sub
pop
xlat
lret
pop
xchg
mov
das
xchg
psubw
jb
and
stos
lret
sub
pop
mov
jle
pop
ds
clc
xchg
xchg
dec
cmp
add
fstpl
out
pop
cmp
mov
mov
jmp
shll
int
out
les
xchg
pop
lret
call
dec
push
xlat
push
pop
or
bound
mov
cmc
jne
add
mov
in
inc
addr16
mov
cld
inc
xchg
lret
repz
ss
mov
fnstenv
xor
repnz
sub
movsb
adc
mov
add
and
mov
test
jmp
fidivl
aas
jb
push
ret
push
cmpsb
xchg
dec
xor
loop
push
les
dec
push
jge
ja
cmc
scas
test
lret
lock
mov
adc
jae
rcl
fidivrl
aaa
out
icebp
scas
fidivrs
sbb
lds
or
dec
add
sar
arpl
or
push
jl
dec
mov
push
mov
iret
int
pop
push
pop
mov
and
arpl
loopne
mov
ds
imul
or
test
or
lcall
pop
inc
addr16
xchg
jb
cltd
jl
dec
cmc
xchg
jne
and
sarb
mov
stos
cmc
push
sbb
loop
shlb
xchg
fldl
rol
jb
xorb
push
loope
out
pushf
repnz
fstpl
jns
mov
dec
imul
fnstcw
pusha
hlt
mov
jae
jno
test
gs
jmp
mov
test
idivl
and
test
lods
mov
mov
mov
and
fdivrs
loopne
scas
movsl
jp
push
mov
jb
pop
jecxz
test
jo
jne
in
scas
into
mov
mov
mov
inc
mov
clc
std
leave
out
mov
xchg
mov
jecxz
das
add
sbb
jge
aaa
and
rcll
mov
mov
xchg
bound
and
imul
rorb
fucomp
popf
fdivrs
gs
adc
adc
fisttpll
cld
mov
jecxz
fdivr
imul
mov
pop
or
inc
mov
call
cwtl
cmc
push
hlt
mov
in
out
lret
push
imul
sahf
nop
rol
push
movsb
xor
inc
mov
decl
movsl
mov
add
nop
dec
jge
ds
roll
int3
mov
jae
and
sti
sub
mov
or
in
not
xchg
sbb
cmpsb
rcrb
fnsave
and
dec
jae
sbb
popf
movsl
xchg
jno
mov
xchg
jp
loopne
int3
push
jo
pop
push
cwtl
mov
mov
shlb
xchg
mov
and
addr16
loope
lea
inc
lahf
fadd
mov
in
ja
test
pop
lock
sbb
int3
sub
pop
dec
and
dec
sbbb
push
dec
jbe
mov
adc
stos
in
xchg
rcll
cmp
cmp
cmp
sbb
mov
popf
mov
pop
in
xor
int
or
int3
in
outsb
inc
fcomp
jb
popf
jbe
addb
gs
fwait
inc
add
ret
mov
es
lahf
int3
fnsave
aaa
cmc
pop
fadd
movsb
cmp
sub
jmp
jns
jo
aaa
aad
push
arpl
loope
push
jno
cmc
jecxz
or
sbb
lock
fdivrl
jbe
mov
mov
out
pop
jmp
and
jge
jecxz
cmp
push
aaa
loop
sub
mov
mov
frstor
pop
push
sub
xlat
mov
mov
xor
jbe
test
cmp
jle
mov
ret
mov
movsb
ret
push
push
xchg
jg
push
jno
lret
bnd
loopne
xchg
lods
gs
iret
dec
cmc
orb
icebp
sub
mov
movsl
sti
in
and
add
lock
push
dec
jnp
mov
fisttpll
push
stos
dec
pop
cmp
inc
jp
int3
addr16
fisttpll
ja
xor
pop
cmp
js
idivl
lods
sbb
xor
pop
nop
add
lods
addr16
pop
fstpl
mov
add
jnp
mov
dec
sbb
loope
xchg
dec
push
cmp
dec
out
adc
in
scas
mov
pushaw
adc
cmp
ja
shr
test
fadd
sarb
pop
mov
mov
movsb
adc
jmp
add
and
ret
andl
mov
cmp
loopne
mov
and
ret
push
ljmp
dec
sbb
movsb
xlat
test
fiaddl
xor
in
jnp
xchg
in
jge
sbbb
aas
jmp
in
fisubrs
push
adc
shlb
loop
jmp
sbb
sub
rol
dec
scas
mov
add
xchg
das
sti
jmp
pop
mov
cmp
movsb
push
dec
xlat
mov
xchg
dec
sub
add
in
xor
and
and
fstl
hlt
int
rcrl
test
push
xchg
jmp
incl
pop
andl
xlat
pop
ss
outsl
cmc
pop
scas
sbb
mov
xor
push
and
dec
cmp
push
ds
es
jne
mov
jmp
and
jecxz
pop
add
bound
fimull
jbe
shrb
out
jae
push
inc
xchg
gs
mov
imul
arpl
mov
loopne
adc
aas
sbb
xor
dec
mov
data16
jg
jno
jl
jg
dec
and
fisttps
loop
jmp
in
std
mov
jne
or
adc
xor
xchg
xchg
mov
imulb
dec
ja
cld
and
sbb
mov
mov
mov
jecxz
movsl
pop
jmp
int
xor
loopne
inc
xor
or
mov
ficomps
cmp
fs
push
das
aas
dec
frstor
sub
mov
lods
xchg
xorb
and
sbb
ret
push
not
movsb
rorb
xlat
push
movsb
sti
popa
ffreep
clc
xor
mov
xchg
pop
sub
jb
xchg
imul
in
test
push
das
cmpsb
jnp
add
and
xor
mov
mov
jg
test
sbb
add
lods
xchg
mov
inc
stos
ret
fimuls
lcall
andl
cmc
dec
jp
sub
xor
jp
jg
and
sub
imul
sbb
ret
mov
and
sub
pushf
clc
xchg
adc
lods
jle
push
mov
scas
sahf
pop
pop
icebp
mov
mov
ret
nop
shll
popa
xor
repz
mov
sub
xorb
adc
push
notb
sbb
std
push
mov
jne
pop
jp
jp
outsb
cmp
xor
pop
andb
push
jb
lahf
loopne
icebp
cmp
sbb
push
and
lcall
cmp
mov
rdpmc
and
mov
mov
clc
cs
movsb
sub
fisttpll
mov
gs
in
pop
mov
inc
dec
lcall
mov
push
jb
mov
ja
frstor
push
clc
pusha
aaa
cmp
es
xchg
jb
cmp
dec
daa
repz
dec
cmc
mov
cmp
mov
cmpl
mov
lcall
sbb
cmpsb
fbld
sbbl
rolb
mov
gs
cmp
movsl
xchg
jmp
push
out
mov
lds
inc
pop
sub
xor
loop
ss
adc
pop
loop
mov
data16
push
add
mov
hlt
ror
add
or
xchg
add
mov
push
push
or
fisttpll
mov
scas
sub
push
test
sahf
and
xchg
mov
jle
mov
test
cmc
push
push
fmuls
pushf
shl
cmp
arpl
jns
pushf
ja
fisttpll
pop
loop
and
cmpsl
jne
or
xchg
fwait
push
inc
jb
in
out
fistpll
dec
hlt
ja
fildll
loopne,pn
movb
imul
inc
sti
mov
push
iret
out
xor
mov
mov
rorl
or
iret
sbb
fmull
push
fidivrs
mov
cli
leave
and
fucom
sbb
outsb
sarw
jb
xchg
add
or
je
negl
scas
jp
jmp
inc
mov
arpl
out
pop
and
loope
cmc
adc
add
lret
jbe
cmc
mov
jp
inc
cmp
sub
jmp
jb
ret
sbb
enter
fucomp
jg
ljmp
stos
jne
pop
cmc
inc
sub
test
nop
in
push
mov
jns
pop
fs
push
xchg
mov
idivb
pop
cmp
push
fdivs
out
test
rcll
fiaddl
push
jecxz
in
and
in
mov
mov
inc
pop
out
mov
lods
adc
mov
imul
movsl
ret
xlat
das
inc
or
adc
cmp
push
imul
pop
int
aam
pop
mov
sub
mov
or
sub
das
scas
xor
pop
jae
mov
mov
lcall
add
js
data16
jle
dec
jmp
adc
add
xor
pop
sbb
lock
test
cmpsl
inc
sub
mov
subl
loopne
cwtl
cmc
aas
ss
add
es
ja
and
xchg
mov
fs
cmp
insl
pop
cmc
call
jmp
pushw
cmp
sti
shlb
jne
add
icebp
movsl
mov
scas
loop
or
in
cmp
push
mov
call
dec
cmp
rcr
or
mov
mov
jle
in
outsb
clc
dec
out
mov
int
js
fmuls
in
adc
sub
testl
xor
mov
fstpl
adcb
mov
orl
out
cmp
jmp
fisttpll
popa
stos
ds
dec
iret
sbbl
movsb
sbb
jae
loop
ds
push
and
pop
repnz
adc
push
inc
fists
data16
dec
inc
movsb
sub
xchg
in
push
xchg
jae
xor
mulb
fiadds
iret
mov
fidivrl
aas
lahf
jmp
xlat
cmpsb
shl
adc
imul
xchg
les
cmpsb
jno
popf
pop
and
pop
ret
mov
repz
test
int
mov
mov
mov
ret
mov
xlat
imul
sub
mov
int
add
jmp
and
jmp
clc
mov
movsb
scas
std
outsl
cmc
ja
icebp
aam
mov
das
dec
mov
push
push
mov
lock
xchg
aad
and
pop
mov
shll
stos
popf
jmp
mov
fucom
int3
or
adc
adc
jbe
test
dec
lcall
jge
xor
in
add
mov
push
sub
add
mov
arpl
ret
push
repz
inc
test
push
or
sarb
jo
push
and
cmp
sbb
test
push
mov
ja
xlat
jno
iret
mov
add
mov
iret
add
mov
test
insl
jge
std
cmp
rcrb
jecxz
xchg
popf
inc
and
mov
inc
jne
mov
int
lcall
pusha
pop
jg
rolb
shr
adc
jmp
or
cmc
jmp
sbb
je
jae
lock
into
insb
pop
sub
int3
in
mov
xorb
cmp
xor
and
dec
fnstsw
ds
mov
xor
xlat
xor
cmp
push
pop
outsb
pop
test
ret
out
insl
arpl
loopne
adc
adc
movsb
jno
cmc
ljmp
inc
cmp
adc
inc
into
xor
fs
roll
imul
add
or
dec
mov
aas
or
add
jae
jp
in
test
fwait
push
jnp
add
or
jecxz
push
sti
repz
cmp
jecxz
mov
inc
jmp
movsl
in
mov
mov
mov
xchg
scas
xor
jecxz
dec
jne
bound
imul
add
pop
mov
test
or
scas
mov
pop
cmc
sarb
jb
fistpll
jbe
add
rcr
xchg
imul
jecxz
outsb
ret
into
mov
push
push
push
push
inc
nop
push
pop
lret
jp
xchg
leave
jecxz
movsl
adc
cld
cmp
push
adc
nop
push
ret
in
ss
fnstsw
les
or
rcrb
mov
jne
arpl
pusha
hlt
push
jae
jnp
mov
inc
shll
mov
sahf
loopne
push
ret
rcl
ds
dec
in
sbb
insb
out
cmpsl
outsl
push
rorl
fst
sbb
add
jnp
scas
and
mov
cmc
cmp
rclb
add
mov
pusha
test
fs
jg
lret
pushf
pop
rcrl
jp
xchg
sahf
pop
jno
test
mov
and
sbb
inc
arpl
or
ds
pushf
add
negb
inc
or
jb
mov
push
sub
jbe
test
xchg
push
cli
adcb
push
clc
add
scas
add
and
in
andb
addr16
xchg
cmpsl
add
adc
pop
cmp
pop
mov
pop
ljmp
xor
in
lds
push
shr
cmc
sub
and
cwtl
adcb
mov
mov
out
movl
jmp
jno
xor
jmp
ret
push
pop
xchg
mov
in
sbb
or
jb
lods
cmp
jo
inc
std
rorl
imul
outsl
stos
les
jo
dec
ds
pop
xchg
pop
sub
mov
leave
das
out
xchg
frstor
jbe
and
cmp
mov
push
push
pop
add
sahf
repz
cmpsb
and
push
in
icebp
jmp
and
repz
das
sbb
xor
std
adc
shlb
cltd
mov
int3
iret
add
sub
mov
out
jno
adc
add
xor
dec
jnp
cmp
sub
xor
mov
outsb
call
sbb
int3
push
jecxz
mov
and
mov
jmp
shlb
es
mov
stos
fildll
jnp
test
loop
jg
fucomip
ret
mov
jge
sbb
and
out
dec
cmp
out
mov
fbld
das
pop
in
pop
xor
rol
ret
or
test
in
cmc
jmp
cmpsb
ret
add
enter
push
outsb
lret
add
or
add
add
mov
insl
cmc
xchg
pop
mov
sub
mov
xchg
xchg
jns
pop
fs
sbb
jmp
fadds
xchg
in
push
and
or
cmp
mov
xor
sub
pop
jbe
stos
xchg
dec
sarb
bound
or
cs
mov
jbe
adc
std
insl
out
out
cmpsb
in
movb
test
cs
dec
cltd
scas
inc
lds
xchg
packssdw
roll
fstl
jmp
insl
cmpsb
xchg
in
pop
and
pop
imul
enter
mov
adc
sti
pop
ja
sub
push
or
faddp
xor
xchg
cmpsb
aam
cmp
mov
ja
ror
enter
sub
imul
xlat
push
loope
cwtl
sbb
push
add
fnstsw
pop
fisubrs
jae
adc
push
mov
sbb
pop
lahf
notb
addr16
sbb
and
outsb
insb
shr
mov
lret
push
mov
and
sbb
rcrl
jecxz
push
out
xchg
arpl
in
cmc
jmp
xor
mov
cmp
add
lcall
in
jo
push
jmp
sub
xchg
mov
divb
cmpb
jb
mov
stc
call
dec
and
push
xchg
dec
outsl
jae
mov
fldl
lock
sub
or
jb
test
fisttps
and
cld
in
cld
push
shl
sahf
xchg
cmc
clc
jae
push
test
xor
int3
push
shr
jns
cmpsb
loope
les
push
mov
mov
imul
out
pop
lea
adc
dec
push
das
in
xchg
cs
lods
int
cli
bound
clc
adc
inc
add
push
hlt
xor
addr16
icebp
cmp
addr16
dec
sub
mov
jns
ret
movsl
stc
fnstsw
jp
fwait
dec
lret
in
movsl
ret
loope
mov
sub
inc
test
nop
xor
push
arpl
or
sbb
mov
in
lock
dec
leave
loopne
jb,pt
jecxz
adc
inc
jge
shll
sar
les
cli
lret
xor
in
lcall
repnz
inc
addb
dec
cmp
xor
mov
mov
fcmove
out
or
adc
push
adcl
fnstsw
push
mov
sbb
popf
jle
mov
test
lods
lcall
movsl
cmpsb
loop
jne
in
jmp
fnstsw
add
cmpsb
xor
pop
imul
sbb
cmp
cltd
cltd
lock
sub
xor
push
add
shrb
jno
ja
aaa
lret
jecxz
dec
ljmp
lds
mov
aam
int3
or
mov
dec
bound
sbb
mov
push
add
mov
decb
into
enter
jne
repz
popaw
jmp
dec
insl
sub
push
out
out
aam
addb
xchg
and
jmp
mov
adc
sarb
cs
xchg
jb
cmpsl
addl
push
mov
das
jnp
inc
cmc
stos
or
jmp
mov
les
ret
add
fstpl
jae
push
mov
repz
int3
clc
scas
fisttpll
mov
sub
in
mov
inc
mov
jge
ret
jne
mov
adc
adc
ja
lods
sub
lods
sub
fucom
and
sub
ja
sarl
pop
mov
out
cmpsb
push
or
testl
push
shlb
inc
pop
cld
imul
test
sub
add
fdivs
outsl
cmc
push
cmpl
mov
push
mov
out
xor
xchg
movsb
loop
aas
jecxz
jecxz
jmp
cmc
add
sar
pop
stc
dec
iret
jne
cmovs
in
pop
insl
dec
jno
push
and
mov
cwtl
ds
fsts
sarl
in
and
shrb
pop
icebp
adc
mov
or
insb
sbb
sbb
xor
rorb
add
adcl
clc
mov
sub
mov
fs
pusha
ret
push
push
mov
scas
add
cmp
in
adc
mov
arpl
dec
fldenv
fnsave
cmp
xchg
inc
and
ja
cld
out
xchg
pop
pop
addl
jmp
jp
fwait
cmc
in
xchg
xchg
mov
pop
cmp
adc
js
cmc
pop
add
mov
daa
pop
sub
int
aad
mov
std
test
int3
bnd
jo
test
cltd
sti
in
test
add
pushf
or
cmp
sub
rcr
mov
idivl
mov
mov
pop
sbb
xchg
and
fimuls
ror
aad
dec
lods
inc
sbb
movsl
daa
xchg
mov
mov
cld
inc
xchg
sub
ja
sbbl
mov
sub
cmp
push
pop
push
mov
mov
loopne
aad
es
test
mov
mov
je
add
cmp
pmaddwd
mov
mov
lret
sub
inc
inc
add
pop
add
sub
aad
sarl
dec
cld
mov
js
pop
xor
loopne
mov
mov
pop
lds
ret
jbe
adc
jbe
jmp
icebp
mov
arpl
xor
push
bound
mov
xor
pop
sub
pop
out
scas
loopne
jecxz
xor
dec
add
pushf
jne
fs
or
pushf
push
sbb
out
jg
shll
add
mov
bound
in
mov
inc
stos
loopne
out
outsl
and
jnp
mov
leave
or
inc
xor
bound
jae
mov
negl
mov
sahf
out
cltd
cmc
fcmovnu
xchg
pop
mov
leave
xchg
stos
in
jno
and
xor
mov
fildl
out
mov
xor
test
in
ficomps
or
mov
mov
xor
or
insb
mov
jae
inc
lcall
dec
cmp
mov
shll
mov
scas
rol
fiaddl
lahf
mov
lds
push
xchg
ja
aad
cs
push
scas
loop
vmovdqa
sarl
filds
pop
test
jp
and
cmpsb
into
movsb
xchg
xchg
jae
in
aaa
in
cmc
hlt
orb
xlat
in
jno
jae
pop
jbe
mov
lcall
es
movsb
call
sbb
xchg
aaa
pop
cmp
dec
in
mov
cmc
pop
lcall
lret
outsb
lods
iret
pop
push
scas
push
add
mov
mov
dec
dec
fidivrs
jns
sub
mov
lock
mov
loop
bound
jns
inc
mov
mov
lret
pop
fstpl
xchg
or
push
xchg
jns
adc
jmp
aam
and
mov
mov
cmp
push
or
xor
in
mov
lret
cli
or
cmp
sub
sub
dec
push
mov
adc
shlb
lock
mov
jae
fmull
dec
cmp
mov
jmp
in
mov
in
pusha
xchg
mov
pop
roll
pop
add
or
imul
cmp
xor
lea
addr16
dec
out
dec
aaa
jecxz
dec
adc
lahf
mov
int3
xor
and
loopne
adc
pop
mov
test
xlat
call
vsubpd
fnsave
xor
adc
divl
cmp
push
call
pop
mov
aad
inc
mov
add
mov
cmc
cs
hlt
pop
jne
shrb
push
mov
xor
data16
adc
and
clc
mov
fs
jp
jae
jb
jmp
fisttps
adc
adc
or
pop
popa
lcall
scas
iret
xor
test
cld
sub
lock
frstor
dec
loopne
and
fisttpll
mov
push
filds
and
rolb
sub
adc
adc
test
jae
pusha
nop
repnz
outsl
sub
test
fmull
lock
and
out
cmp
fsubl
or
push
addl
lcall
cli
push
or
ja
scas
inc
int
sub
cmp
xchg
sub
test
mov
cmc
mov
in
lcall
adc
add
nop
mov
cmp
shll
pop
add
popl
push
popf
mov
fstpl
cld
dec
out
clc
fnstsw
or
sbbl
arpl
push
xchg
push
and
movsb
adc
pushf
mov
or
lock
cmpsl
mov
inc
mov
icebp
arpl
idiv
popa
jg
push
adc
outsl
or
cmc
xchg
sub
mov
stos
dec
ret
xchg
leave
jmp
inc
jb
push
xor
in
jle
mov
aaa
xor
aas
outsl
xor
mov
add
movsb
pop
ds
cmpsb
ss
in
or
sub
les
jl
repz
lcall
sub
push
xchg
test
sub
fidivs
fwait
jno
jl
scas
pop
mov
orb
scas
shrl
inc
movsb
sub
cmp
test
sarb
pop
das
repz
mov
mov
xor
icebp
xchg
dec
stc
in
mov
outsl
jecxz
sub
xor
and
pop
rclb
add
ret
fcoml
xchg
lret
sub
lcall
fs
and
pcmpeqw
ret
add
mov
cmp
cmp
cmpsb
and
imul
sbb
iret
xchg
xchg
clc
mov
rorl
mov
xchg
push
or
sti
insb
cld
dec
stos
add
jecxz
stos
aas
in
gs
mov
mov
dec
xchg
int
popf
cmp
push
push
negl
add
xchg
es
jae
fmull
test
js
mov
stos
popf
js
mov
cmc
sub
iret
jns
imul
leave
shll
cmp
xchg
cmpsb
pop
push
loop
cmp
mov
jae
outsb
rcll
mov
push
movsb
sti
xor
sbb
sub
in
mov
dec
fdivrs
ja
push
mov
jae
and
test
es
testl
mov
mov
fisubrs
in
pop
xlat
fiaddl
cmc
and
or
ss
std
je
add
cld
cmp
in
sbb
pop
fildll
ret
repz
inc
divl
add
scas
cmpsl
in
add
sbbl
pop
ja
xchg
fisubrs
int
int
test
push
mov
insb
jecxz
and
lret
push
clc
loope
add
mov
pop
mov
xchg
jno
and
repz
add
mov
push
cmc
fcmovnu
ja
arpl
lcall
cld
in
loop
mov
loopne
inc
imul
xchg
or
push
test
xchg
loopne
lcall
push
xchg
idiv
dec
jnp
sahf
pushf
cmc
add
fnstsw
xchg
aas
rcrb
jecxz
outsl
outsb
loopne
push
das
shl
adc
adc
scas
or
or
js
insl
aad
lret
int
dec
xchg
in
int3
scas
lret
jns
int
push
mov
jp
out
jbe
pop
mov
ja
pop
fldl
push
add
cmp
imul
iret
std
sbb
mov
xchg
mov
cld
adc
int
cltd
ret
loope
dec
js
mov
shl
mov
fstps
or
clc
mov
in
in
shlb
cmp
jmp
push
fisubl
pop
imul
insl
aad
push
cmpsb
js
mov
lret
xchg
addr16
shr
adc
aaa
bound
jmp
mov
in
test
jb
lret
fcmovnu
mov
cmp
call
scas
frstor
or
imul
mov
arpl
pop
jno
fchs
inc
fwait
js
aam
mov
in
cmp
add
scas
inc
push
mov
dec
mov
ss
fwait
add
pop
fstpl
popf
adc
mov
mov
loope
and
mov
cld
mov
cmp
jne
enter
adc
cmp
fsubr
mov
ret
lcall
daa
inc
sub
and
lock
ror
cmc
dec
btc
cmp
push
jns
das
fwait
mov
popa
dec
jo
inc
sbb
lods
int
jp
clc
adc
xchg
push
xchg
jl
das
loop
movb
rolb
sbb
mov
loopne
das
push
xchg
jns
or
sub
add
ja
cwtl
push
negb
pop
mov
push
int
in
lock
mov
fs
mov
add
mov
aaa
mov
sub
sbb
icebp
mov
push
arpl
into
xor
mov
cmp
push
xor
filds
add
push
les
aam
js
incl
or
inc
cmp
dec
out
jb
jb
jge
cwtl
addb
adc
or
push
loop
xchg
pop
push
enter
dec
lods
add
aam
mov
dec
lret
cmp
imul
shr
fisttpll
mov
jns
push
imul
jns
cmc
pop
push
pop
or
mov
mov
in
test
lret
push
mov
mov
mov
cmp
inc
sub
std
in
ret
cld
add
sarl
lods
scas
push
cmp
decl
push
sub
xlat
andl
sub
or
cmp
and
push
and
neg
or
out
jns
mov
repz
add
scas
dec
jnp
push
imul
sbb
pop
pop
loopne
xchg
js
push
adc
pushl
push
shlb
inc
cli
test
stos
or
fld
mov
scas
test
lods
xor
loop
xor
adc
std
lcall
xchg
or
je
and
es
xor
adc
fstl
inc
add
add
or
pop
push
enter
mov
jecxz
xchg
nop
pop
jne
ds
add
clc
bound
jno
cmpsb
arpl
sub
popa
iret
xchg
loopne
repnz
movsb
fwait
aad
mov
rclb
es
imul
or
xchg
mov
inc
cltd
add
inc
outsb
stos
mov
ret
dec
pop
mov
aaa
pop
inc
jbe
and
push
xchg
sub
or
and
pop
lea
daa
jbe
stos
mov
add
add
sub
in
jae
loop
lock
push
insb
in
daa
and
push
dec
cld
push
sbb
xchg
fstp
jnp
and
pop
frstor
push
sbb
sbb
rcrb
xchg
aaa
je
cltd
dec
adc
sub
add
pop
dec
pop
loope
out
cs
push
cmpsl
mov
sub
jbe
mov
pushf
in
pop
mov
icebp
mov
in
push
addl
loope
mov
dec
xchg
cmp
outsl
mov
aam
ljmp
xor
mov
mov
push
std
add
cld
int
push
pop
inc
loopw
pop
jo
loop
outsl
outsl
repnz
jb
sbb
mov
fiadds
stos
dec
test
xchg
insl
scas
pusha
pop
and
cmp
pop
icebp
pop
ret
sub
in
dec
push
popa
jnp
inc
movsl
cmpsl
sbb
stc
popa
xor
lret
push
push
mov
xchg
test
xchg
inc
out
cmp
push
shll
cmpsb
lcall
in
fisttps
enter
mov
aaa
dec
daa
jne
hlt
loopne
mov
xchg
ret
jg
inc
fs
mulb
mov
insb
loope
mov
or
sbb
jne
and
outsl
cmp
repnz
pop
mov
xor
mov
idivb
push
xchg
stc
push
mov
jnp
in
in
mov
or
aas
xchg
and
inc
lret
cmp
popf
in
ja
lret
iret
lea
mov
mov
push
cmp
xor
sbb
int3
sbbl
fidivrs
push
outsl
sti
jecxz
mov
xchg
test
or
lock
mov
xlat
lahf
add
out
jne
lcallw
mov
push
and
inc
jae
cmc
push
pop
fldlg2
pop
arpl
aam
mov
pop
in
sub
mov
fidivs
cwtl
aad
shlb
loopne
adc
pushf
mov
push
out
les
ficoml
mov
cmp
push
sbb
and
adc
mov
or
and
and
adc
lock
adcb
mov
xchg
jle
lea
testb
xor
in
mov
xlat
mov
push
pop
push
lea
jmp
in
rorb
and
mov
bound
stc
fnstcw
rolb
imul
jne
lds
loope
or
mov
addr16
call
test
subb
mov
mov
pop
pop
lods
fdivl
imul
aam
cli
mov
in
jbe
test
lock
mov
dec
bound
pop
clc
loope
pop
int
lret
and
mov
fldl
fstl
lret
add
out
repz
pop
insl
mov
pop
test
aaa
push
pushf
stos
cmp
add
das
xchg
lcall
or
jne
or
mov
sub
xor
cld
out
xor
push
mov
cmpsb
adc
flds
sbbb
shlb
pop
cmp
or
xorl
ja
ret
mov
lds
dec
dec
scas
outsb
sbb
fwait
ret
jg
lods
dec
dec
and
sub
cmp
pop
sbbb
adc
push
mov
xchg
mov
in
mov
jae
push
cmp
cmpsb
shl
loop
adc
jns
stc
push
xor
dec
push
lock
dec
adc
cmc
jns
adc
mov
or
mov
dec
popf
jb
arpl
adc
cmp
sbb
cli
mov
das
leave
cmp
sbb
cmpsl
movl
loopne
jns
cli
mov
int3
mov
icebp
out
mov
jne
stos
jg
sahf
jp
xchg
mov
push
js
shrb
mov
cld
outsb
pop
push
mov
mov
ret
inc
push
insb
ret
xchg
cs
fldcw
in
add
sahf
iret
or
in
or
and
inc
clc
and
outsb
push
mov
rolb
std
inc
dec
lret
mov
or
xchg
xor
test
jg
inc
ficomps
fnstsw
or
mov
aam
push
test
lock
in
mov
aad
sbb
leave
inc
lods
aam
or
jnp
cmc
out
repnz
mov
dec
xor
jmp
mov
mov
mov
sahf
push
lods
mov
lock
aaa
mov
add
dec
pusha
pop
insl
in
int3
fdivrs
inc
loop
fwait
xor
inc
mov
js
jne
or
dec
add
or
iret
xor
out
out
mov
imul
push
xor
ret
mov
push
adc
jb
inc
js
cmc
push
and
ret
test
xor
jecxz
stos
mov
and
outsl
push
sbb
aam
repz
jns
lret
xchg
mov
js
cwtl
adc
or
scas
add
adc
imull
mov
arpl
adc
outsl
jne
fwait
adc
in
sub
jmp
xor
test
test
inc
and
pop
fninit
add
mov
pusha
sbb
jg
outsb
inc
pop
add
cmc
fcomip
pop
std
in
addr16
sbb
sarl
mov
jmp
inc
imul
inc
sbb
inc
es
das
inc
repz
bound
lcall
in
imul
sub
mov
ljmp
sub
sub
or
push
jno
testl
cmp
push
stos
or
lods
int
lahf
mov
stos
mov
daa
ret
mov
cmp
mov
mov
sbb
or
cmc
jmp
adc
mov
push
mov
and
fbstp
lea
add
inc
sub
and
dec
dec
pop
sbb
into
lock
jmp
mov
or
and
test
popf
mov
jecxz
cmc
scas
fs
shlb
and
loop
aam
jle
scas
cld
out
inc
dec
ret
mov
sbb
xlat
mov
jno
lcall
jle
and
stos
jns
mov
xor
icebp
dec
es
loopne
ret
dec
jmp
arpl
pop
jmp
jl
pop
mov
adc
jb
adc
add
shl
test
fisubrs
jmp
jb
fstpl
push
dec
negl
rorb
add
rorb
movsb
mov
sbb
push
test
lahf
jle
push
jne
jp
pop
jge
xchg
xchg
lret
movsb
inc
xchg
out
in
test
mul
jmp
cld
jo
cmp
push
ja
lds
jb
in
cli
test
jae
in
les
mov
pushfw
dec
leave
mov
fimull
xchg
cmp
mov
int3
loope
mov
ret
fs
or
fisubs
in
call
dec
imull
push
adc
imul
mov
dec
add
and
or
shl
inc
outsb
mov
push
fstl
lret
mov
pop
mov
je
int3
pop
pop
or
mov
pop
cmp
mov
imul
inc
outsl
ja
scas
testb
dec
jae
adc
push
and
jnp
ret
ficoms
repz
xor
xchg
adc
xchg
mov
mov
dec
movsl
mov
movsb
lock
push
adc
jecxz
push
push
fucomip
loopne
xlat
negl
xchg
es
ds
mov
ret
cmp
jb
mov
aaa
mov
mov
jle
cltd
and
mov
in
mov
mov
and
add
mov
aaa
jno
std
push
mov
xchg
lods
arpl
iret
xchg
mov
ret
xor
xchg
stc
adc
pusha
ds
or
xor
repnz
mov
and
mov
bound
nop
lods
xchg
fbld
imul
inc
dec
push
enter
loope
push
push
pushf
addr16
dec
cmp
sub
sub
sbb
dec
imul
jp
subb
pop
add
in
jge
pop
dec
jp
and
mov
or
movb
sub
test
in
lock
cld
jl
jecxz
xchg
movsb
mov
stos
xchg
adc
sub
neg
insb
push
fstp
mov
pop
push
es
sub
mov
and
push
fdivrs
sti
rcl
lds
jecxz
mov
ficompl
rclb
shrb
inc
out
or
pop
cmpsb
add
cs
insb
xor
imul
lock
pop
sub
jp
icebp
push
aaa
cmp
pop
jb
fiadds
mov
les
out
fstl
mov
loop
mov
in
movsb
ret
mov
mov
repnz
loop
xchg
pop
stc
pop
dec
fucomp
adc
cmpsl
xor
adc
test
or
and
and
negl
xor
cwtl
pusha
sub
sub
jmp
leave
adc
add
rolb
mov
ror
or
lods
and
mov
pop
pop
cs
jmp
pushf
call
nop
and
adc
mov
in
insb
sbb
or
xchg
jne
aaa
int
pop
xchg
mov
hlt
por
jl
fcmovu
xchg
adc
insl
ljmp
addr16
push
lahf
sbb
xlat
inc
in
dec
bnd
cmc
or
negb
jle
ja
cmp
jbe
pop
stos
jne
push
out
push
mov
movsl
fwait
or
clc
push
mov
and
cmc
sub
and
adc
hlt
adc
cmp
jecxz
cmp
or
push
loopne
sub
lock
sbb
or
shll
cmp
jnp
mov
ret
mov
lahf
das
cmp
xlat
cmpsl
jae
dec
mov
mov
add
dec
xchg
cmp
jns
and
pushf
adc
mov
popa
sahf
lods
xor
jecxz
pushf
or
sub
jg
sub
jle
sub
xchg
pop
loope
sub
out
cmpsl
imul
mov
ffree
push
sub
das
mov
mov
jmp
int3
pop
jne
cmp
fidivrl
pop
push
add
cmc
aas
jmp
xor
int3
es
push
mov
pop
outsb
xlat
sahf
dec
imul
out
movsl
je
in
jne
xchg
loope
dec
jecxz
sub
pop
fiaddl
and
pop
sti
ds
iret
and
pavgb
lcall
lock
mov
sub
stos
mov
mov
jo
js
dec
testl
or
repz
xor
ret
js
inc
lds
pop
ret
dec
insl
push
aas
sahf
xchg
and
xchg
icebp
push
or
pop
xor
push
mov
push
pop
mov
movsl
adc
jnp
div
jmp
xor
das
cmpsb
adc
adc
mov
push
pop
mov
jb
cltd
xchg
adc
stos
or
aam
stos
lret
inc
mov
mov
dec
dec
sub
xchg
jle
fdivrp
add
out
loopne
lods
idiv
sbb
dec
arpl
sub
jb
pop
xorl
dec
leave
int
inc
loope
and
jae
outsb
sbb
adc
push
xchg
jmp
sub
mov
pop
fcmovne
sub
mov
arpl
sti
inc
rcrb
fists
lods
mov
or
sbb
loop
insl
push
or
imul
frstor
jp
addl
cld
stc
lahf
pop
in
scas
jle
pop
xorl
hlt
in
mov
loope
pushf
dec
pop
mov
or
dec
lock
mov
in
test
inc
mov
jp
add
in
in
mov
mov
fistpl
xor
arpl
mov
popa
inc
test
or
stos
lock
ja
cmp
sbb
fwait
cmp
popf
cmc
ja
lcall
or
inc
push
mov
jp
fisubs
xor
mov
xor
push
push
mov
jl
daa
incl
mov
jp
inc
cmp
outsl
mov
scas
loope
hlt
mov
cmp
es
gs
mov
add
jne
dec
jbe
ds
out
cmc
xchg
sbb
mov
xor
mov
mov
in
sub
std
lcall
sbb
stos
xchg
jns
jl
jae
imul
add
lea
pop
ret
in
out
dec
cli
push
add
cmp
or
mov
pop
jg
sti
shrb
pop
lds
sti
or
dec
push
cmp
mov
dec
mov
mov
idivl
mov
insl
mov
jmp
mov
sub
xchg
and
lahf
cmp
outsl
add
xchg
adc
mov
in
int3
adc
faddl
mov
hlt
inc
push
jne
sbb
mov
jb
lds
aad
jmp
lret
ss
jnp
and
add
pop
fwait
cmc
loope,pn
jle
cmp
sbb
into
daa
icebp
push
in
and
mov
adc
dec
in
loop
cmc
pusha
or
mov
outsl
fcoms
maskmovq
imull
xor
sbb
subl
repnz
jb
scas
mov
adc
lds
les
or
add
loope
xchg
cld
pop
jo
mov
fidivs
rclb
add
fstpt
pop
in
mov
jmp
sub
je
add
pop
arpl
dec
aad
and
xlat
cmp
sti
xor
inc
fistps
or
sub
aaa
jne
sbb
lods
or
sbb
push
xlat
ja
push
add
test
jle
or
aad
push
sbb
jmp
std
add
dec
fistps
cwtl
cmp
dec
pop
sbb
lock
pop
leave
pop
ror
jns
inc
fnstsw
xchg
mov
shll
dec
and
insb
and
gs
jo
and
xlat
pop
mov
mov
pushl
shll
ds
and
xchg
in
jno
icebp
xor
lds
mov
add
cmc
xchg
aam
mov
cmp
or
and
ljmp
sub
in
xlat
add
add
sub
pusha
xlat
xchg
imul
sahf
adc
test
sarb
mov
mov
imul
in
pop
stc
mov
mov
xchg
cs
mov
jns
pop
and
imul
aaa
repz
cmp
fcompl
jecxz
push
fisubrs
mov
dec
jo
pop
scas
cmc
sub
and
rcll
and
xorb
jmp
xchg
mov
sub
fstp
in
enter
std
nop
mov
pop
pop
push
fsubrs
dec
pushf
push
out
out
loopne
dec
insl
xlat
jbe
mov
adc
out
insl
ret
jmp
aam
lret
loope
push
fs
in
sbb
ljmp
scas
add
div
test
dec
adc
xor
fdivs
repnz
out
js
cmp
fidivl
mov
push
in
outsl
in
jo
lods
cmp
stos
lods
andl
cmc
pop
jmp
xor
jg
sub
ret
cmc
mov
and
mov
push
loop
push
cmpsb
and
fisttpll
out
push
jbe
adc
ret
mov
es
mov
stos
push
lock
mov
ljmp
dec
sbb
and
pop
int
aad
cli
mov
mov
jne
lock
imul
jg
adc
mov
test
push
stc
jecxz
les
xchg
push
les
adc
int3
sub
push
aam
jle
ds
les
std
push
sti
and
sbb
jae
xor
test
scas
xor
jge
and
cmpsb
pop
sub
xchg
enter
push
add
pop
lds
mov
and
push
enter
std
lahf
fists
dec
sub
dec
cmp
lahf
ds
or
ljmp
lods
and
mov
sub
stos
push
mov
mov
push
xchg
or
mov
cmp
or
test
cltd
cmc
jmp
icebp
shr
or
xchg
in
jp
cmc
bound
mov
lea
xlat
lods
pop
adc
push
sub
scas
fstpt
jne
je
or
fstpl
push
scas
dec
push
cmc
or
int3
push
jmp
push
addb
repnz
or
fcmovu
or
push
imul
cs
fldl
imul
xchg
aad
cmc
mov
lock
rcll
inc
dec
mov
mov
xor
inc
loop
ljmp
or
cmpsl
fisttpll
dec
xor
or
pop
dec
adc
xor
int
jnp
xchg
add
fldl
push
xor
sub
ljmp
in
pop
mov
cmpsb
push
dec
dec
mov
ffreep
enter
add
xchg
add
mov
pusha
sub
and
divb
sbb
push
inc
sub
jl
sub
sbb
jnp
mov
mov
and
or
imul
je
xor
mov
or
sub
or
inc
dec
outsb
mov
mulb
into
dec
push
sbb
jg
rorl
jbe
jmp
imul
mov
dec
inc
jae
sub
pop
xchg
fistpll
mov
and
cmpsb
xchg
cmp
sub
jns
lcall
or
mov
jae
cmc
stos
jbe
test
lcall
push
dec
dec
sahf
cmpsb
sbb
or
enter
push
mov
notl
cmc
add
sahf
arpl
hlt
inc
add
stos
push
xor
mov
into
push
aad
mov
ja
mov
push
sbb
out
sti
xchg
pusha
aad
push
adc
rorl
pop
and
insl
outsb
filds
mov
out
xchg
in
lret
and
test
push
adcl
int
cmpsb
lcall
mov
ja
rol
jns
sub
ja
outsb
lock
lcall
jbe
inc
rcr
or
mov
arpl
in
push
mov
jae
mov
ds
push
dec
cmc
jl
lret
pop
sbb
xchg
aas
std
jb
in
push
lret
repz
fldenv
push
mov
testl
xlat
test
xor
mov
sbb
xchg
enter
mov
add
daa
in
ret
xorb
loopne
xchg
insl
pop
faddl
repnz
fisubl
or
fistps
in
dec
xchg
sub
cmc
mov
int
mov
iret
sbb
cmpsl
pusha
das
cmc
enter
outsl
xor
sub
pop
icebp
mov
sub
sbb
sbb
push
ss
arpl
and
adc
push
negl
in
test
xchg
pop
cmp
ret
aaa
and
mov
jle
ss
push
dec
pusha
add
sbb
jns
pop
pop
pop
xor
jne
in
or
sbb
ffree
push
push
je
jns
push
aaa
sbb
cmp
push
lds
dec
inc
sbb
mov
mov
sub
cmpsl
mov
dec
push
push
xor
popf
lret
in
pop
jns
inc
jmp
scas
testb
and
movsl
push
inc
out
jecxz
jne
sbb
mov
xchg
or
in
add
dec
push
push
out
shl
mov
cmp
fldt
int3
jae
adc
fisttpl
pushf
xor
push
fcompl
ss
lcall
adc
stc
int
mov
jmp
inc
or
xlat
pop
ret
sub
pop
cmp
int3
stos
int
jo
dec
xor
inc
in
mov
inc
push
in
shll
sbb
pop
mov
xor
dec
in
out
mov
lret
frstor
xchg
into
iret
or
mov
call
dec
push
enter
popa
sub
sbb
cmc
fisubl
pop
push
insb
repz
sub
mov
icebp
scas
aas
jp
push
lahf
inc
ss
jne
inc
mov
pop
aam
loope
fstl
or
cmp
jnp
cmc
das
adc
mov
mov
stos
xchg
aaa
mov
jns
and
fisttps
in
mov
sbb
jne
nop
jmp
inc
lock
and
jbe
nop
or
lcall
add
lret
lds
lret
js
repnz
push
fsubl
cmp
cmc
test
jns
imull
mov
jb
xchg
cmp
sbb
push
fldl
mov
ds
jmp
mov
push
fs
test
test
cwtl
sub
aam
loope
and
sbb
or
push
xchg
mov
sub
dec
imul
push
in
stc
lea
cld
dec
xor
int3
mov
scas
in
push
inc
aam
jp
test
xor
mov
add
repnz
jecxz
xchg
push
push
mov
mov
rcrl
mov
mov
mov
mov
xor
push
divb
out
sbbl
xor
fnsave
gs
mov
xchg
push
inc
popf
jmp
jbe
lahf
test
mov
xor
test
inc
sbb
lcall
and
jge
bound
sbb
jb
and
into
cmpsb
inc
sub
imul
subb
std
mov
in
rorb
cmc
xor
fsubs
push
jmp
sbb
clc
cmp
mov
dec
jne
cmc
mov
fnstsw
pop
cwtl
ja
in
xchg
adc
cmp
mov
in
mov
stos
pop
mov
push
jne
cmc
lret
jp
mov
pop
add
iret
push
sub
lret
adc
test
lock
cmpsl
and
xor
mov
pop
mov
arpl
es
pop
divl
push
adc
ror
sub
in
pop
mov
inc
int
fstp
add
icebp
adc
push
add
out
jae
pop
pop
push
mov
bound
pop
daa
push
cmp
test
imul
pop
rcrb
js
push
rorb
mov
xor
ljmp
es
loopne
fstpl
adc
inc
int3
int
outsl
or
sbb
mov
pop
movl
rolb
out
ret
xor
jne
movsb
mov
mov
mov
push
mov
rclb
add
inc
lahf
sub
mov
test
cmpb
in
cmpsl
jne
or
cmp
xchg
jne
shll
and
outsl
je
outsb
ret
insb
cwtl
rcl
cwtl
pop
addr16
imul
push
sbb
mov
sub
sahf
pop
popf
imul
mov
or
xchg
dec
pop
push
jnp
stc
push
lods
mov
sub
jecxz
mov
or
xor
sarl
cmp
add
ljmp
add
das
jo
in
out
mov
jecxz
das
insb
sbb
add
or
adc
jmp
leave
jecxz
mov
bound
movntps
cmpsl
add
pop
cmp
mov
call
sbb
pop
or
or
lret
adc
mov
or
jo
repnz
jmp
cmc
dec
add
xor
sahf
or
adc
icebp
sub
mov
dec
cwtl
and
rorl
pop
xchg
push
js
ja
and
add
and
out
jbe
jno
fwait
int3
popf
fstpl
or
in
push
xchg
push
int
je
and
rol
movups
pop
pusha
lods
xor
arpl
fstpl
xchg
test
and
cmc
insb
or
fsubs
sub
sbb
mov
jecxz
add
andl
sbb
dec
jo
sub
mov
xchg
cmp
imul
dec
jne
mov
adc
std
into
xor
sbbl
in
aam
nop
jns
sbb
or
mov
inc
lods
data16
adc
add
mov
push
adc
jns,pt
xchg
mov
push
aaa
push
mov
or
fsubs
cmp
or
push
enter
and
push
mov
aam
fldcw
mov
rcll
lret
lock
dec
or
sbb
mov
setae
and
imul
pop
div
fwait
and
mov
sub
add
push
push
push
test
sub
lea
mov
lcall
push
movsb
push
sbb
pushf
outsb
mov
push
xor
mov
xchg
and
icebp
pop
aam
rolb
jns
jo
popa
movsl
outsb
jb
xor
jg
mov
mov
cld
push
push
or
pushf
mov
cli
fisttpll
and
outsb
dec
lret
mov
sahf
in
inc
adc
mov
mov
jne
call
push
cmp
push
xchg
fdiv
sarb
mov
pop
cmp
xchg
jns
or
loope
pushf
js
and
imul
insb
ljmp
add
add
stos
fdivrs
ja
inc
js
fdivrl
push
stos
push
test
pop
sub
mov
sbb
push
mov
divl
gs
imul
mov
inc
jbe
negl
in
push
push
js
jne
bound
push
lret
push
arpl
insb
imul
sub
add
popa
scas
push
fmull
xchg
dec
xor
lcall
cmpl
test
sti
pop
jnp
pop
pop
fdivr
fisttpl
xor
insb
icebp
adc
enter
sub
and
or
push
mov
dec
test
and
insb
arpl
jnp
sbb
aam
xor
pop
xchg
dec
mov
cmp
pop
mov
xchg
stc
push
adc
add
cmp
in
out
xor
cltd
or
push
sti
cmp
adc
sti
inc
mov
aas
mov
cmp
mov
mov
xchg
dec
push
mov
outsl
jne
jle
sbb
leave
mov
jge
js
clc
push
outsl
pushf
insb
inc
aaa
or
sti
jmp
ret
pop
mov
orl
pop
loopne
jp
int
or
in
jle
jne
stos
icebp
pop
idivb
push
jno
test
jmp
sbb
fdivrs
lahf
adc
sub
inc
mov
jge
push
mov
mov
out
lret
hlt
loope
lahf
insb
pop
mov
subl
imul
loopne
sahf
push
insb
push
dec
imul
insb
ficomps
jno
jp
jnp
cmp
jmp
lret
add
push
repz
cmpb
xor
sbb
push
jae
test
iret
out
and
push
cmp
js
or
test
std
sbb
xor
lcall
adc
pop
aam
lods
jne
fwait
inc
int3
pop
mov
loope
jns
pop
xor
push
inc
cltd
xchg
jmp
cmp
add
mov
lds
ja
lcall
mov
rclb
push
repz
cmp
adc
js
cld
in
insb
and
mov
xchg
jg
in
inc
orl
mov
dec
scas
pop
stos
mov
xor
push
inc
shll
out
dec
js
div
jecxz
shll
imul
or
jb
sub
js
cli
clc
mov
js
jns
sub
sbb
jge
and
pop
mov
add
add
hlt
aaa
xlat
jno
pop
push
jb
jge
dec
jne
dec
test
cmp
pop
dec
and
sti
popf
push
pop
fcoml
inc
sbb
ret
sti
es
pop
sub
inc
sub
repnz
lods
test
in
rcl
jae
test
sub
adc
or
into
and
in
or
or
or
jp
mov
into
push
inc
mov
pop
pushf
jae
test
in
gs
push
sbb
dec
jnp
dec
cmpsl
pop
imul
and
cs
mov
add
mov
dec
jns
sti
lret
cld
cmp
push
and
cmp
insb
int3
imul
push
inc
clc
mov
mov
arpl
loop
jbe
sti
add
lahf
icebp
xlat
xor
push
call
or
pop
call
adc
sbb
pop
cmp
divl
fnstcw
or
dec
sti
mov
loopne
in
push
jmp
add
pop
cli
jae
mov
sti
hlt
add
add
inc
sbb
mov
xchg
movsl
mov
stos
xor
sbb
mov
mov
out
dec
addr16
sbb
lret
or
repz
insl
mov
or
out
dec
call
fbstp
insb
cli
mov
cli
test
sbb
js
or
pop
xchg
je
jo
mov
xchg
cmpsl
push
jo
jns
stos
xchg
pop
pop
jmp
cld
cmc
ret
push
outsl
cmp
jbe
das
jne
mov
out
mov
xor
icebp
mov
inc
cmp
out
out
xor
pop
or
in
bound
sub
pop
jnp
mov
jb
addb
dec
lahf
stos
mov
jp
lcall
and
adc
pop
lret
out
leave
mov
xchg
inc
imul
rolb
cmc
into
jae
lcall
pop
clc
xchg
mov
lahf
sahf
outsl
inc
stos
cs
inc
mov
cli
mov
dec
out
jmp
gs
jo
scas
jo
sbb
adc
mov
sub
pop
inc
jbe
jo
rcr
jo
mov
dec
sub
mov
subl
in
mov
dec
repnz
jmp
mov
inc
xor
mov
and
je
sti
in
icebp
jns
fmul
imul
sub
jnp
nop
out
scas
pop
push
mov
mov
call
dec
pusha
cltd
or
dec
ja
clc
mov
pop
ret
stos
mov
fldenv
test
lods
lret
out
repnz
iret
sbb
jg
mov
sbb
mov
pop
mov
sbb
sbb
scas
mov
std
js
sub
pop
inc
loopne
pop
cli
stos
xchg
ret
push
jb
inc
leave
mov
or
insl
adc
pushf
jbe
cli
je
sbb
xchg
cld
add
pop
mov
int
arpl
repnz
push
cmp
mov
xchg
or
mov
adc
lods
arpl
popf
cltd
test
mov
loopne
repnz
xor
jb
bound
pop
test
sub
xor
imul
xchg
arpl
ss
mov
xchg
aaa
outsl
mov
ja
psubq
jae
push
adc
jae
xor
js
or
jge
jo
enter
out
push
ret
jle
mov
sbb
lock
hlt
jmp
xchg
repnz
push
popa
cmp
or
mov
shr
insl
out
test
inc
lds
or
rdmsr
jo
outsl
and
pop
push
mov
arpl
stos
pop
mov
push
je
adc
xchg
or
fnsave
inc
mov
clc
test
lods
xor
pop
adc
das
push
js
mov
jno
mov
or
fidivrs
and
sub
inc
repnz
call
jecxz
pop
dec
repz
lcall
sub
ret
adc
mov
std
xor
fs
mulb
mov
pop
stos
js
pcmpeqw
outsl
mov
imul
aaa
stc
mov
add
jp
ja
pop
or
add
out
or
xor
stc
loop
orl
mov
int3
ja
sub
push
aaa
ja
movsl
adc
enter
ja
cld
popa
imul
mov
in
mov
test
ja
sbb
bnd
xor
scas
cmpl
insl
scas
test
shlb
mov
mov
jne
fiadds
je
add
mov
push
xor
pop
and
jmp
jb
in
mov
or
stos
mov
xchg
and
pop
jge
movsl
add
sub
jg
fisttpll
movsb
mov
add
pop
subl
jnp
prefetch
push
insl
sbb
or
je
dec
pop
out
lock
in
jb
jne
mull
jge
out
es
je
xor
xchg
subl
mov
inc
lock
js
pop
mov
jp
pop
insl
das
cmp
enter
sub
idivl
pop
push
dec
xorl
lods
mov
cmp
stos
xor
stc
ret
and
cmp
add
add
in
repnz
jae
test
arpl
sti
push
mov
jg
sbb
add
mov
sbb
push
orb
mov
enter
sub
xchg
out
mov
push
sbb
mov
into
inc
add
mov
out
cs
pop
push
pop
ja
jp
sbb
iret
jb
hlt
add
mov
out
ja
faddl
js
jno
bound
mov
pop
jp
jp
sbb
test
jae
dec
mov
das
mov
xchg
mov
sub
mov
xor
incl
loop
insb
or
lcall
pop
jae
sbb
popa
push
in
fdivrs
neg
xor
enter
mov
test
add
sub
out
or
sti
jge
jnp
sbb
out
inc
testl
push
stos
sbb
mov
std
imul
mov
push
stos
xor
mov
imul
inc
cmp
jns
jl
sub
lock
fcomi
aam
imul
icebp
rorl
sbb
jnp
imulb
dec
pop
mov
sub
cmp
xchg
sub
or
cmp
imul
push
aaa
stc
jp
data16
dec
mov
jne
push
or
rolb
push
outsl
sti
arpl
jae
mov
repnz
cmpsl
cmpsl
insb
mov
dec
sub
adc
cmp
push
add
insb
loope
jnp
mov
insb
movsb
mov
hlt
xchg
jns
jns
cmp
add
pop
cli
js
cmp
vpshaw
and
pushf
loope
pop
and
jb
inc
cmp
or
dec
stos
mov
lahf
sbb
pop
ficomps
jg
js
fildll
dec
stos
push
outsl
jbe
cli
int3
or
or
shl
in
lods
sbb
cmpsb
aam
mov
jne
xchg
negb
jnp
pop
popf
jns
or
leave
sub
scas
test
cmp
fwait
mov
test
xor
xor
arpl
insb
push
adc
lcall
out
mov
insb
les
mov
das
mov
lret
cmp
add
pop
mov
push
xor
or
add
pop
jo
aaa
jp
sti
pop
mov
pop
shrb
arpl
repnz
mov
imul
pop
in
mov
push
ja
mov
sbb
cmpsl
dec
xor
sub
subl
cltd
lret
pop
repz
jno
inc
out
jb
adc
pop
xor
mov
outsl
in
inc
xchg
pushf
jne
jmp
cmp
mov
and
pop
xor
sub
mov
stos
out
xor
notl
inc
xor
aas
pop
gs
push
in
and
call
stos
and
negb
mov
arpl
fmull
dec
outsl
dec
sbb
push
std
dec
subb
outsl
inc
jb
push
mov
mov
js
repz
sub
pop
sti
pushl
push
add
sub
sbbb
fldcw
or
jmp
ja
loope
dec
inc
aaa
sbb
or
push
dec
test
pop
push
mov
sbb
outsl
stos
mov
dec
ja
sbb
inc
xchg
in
icebp
jge
fldl
xor
mov
adc
test
lock
or
xor
out
inc
scas
mov
das
arpl
rorl
sbbb
cmp
dec
outsb
inc
add
mov
mov
mov
std
mov
addr16
xorl
insl
dec
jbe
shll
loop
loop
push
int
or
xchg
flds
ss
pop
nop
xchg
or
popa
push
xrelease
jmp
inc
inc
in
clc
daa
jns
and
in
popa
out
sbb
hlt
or
outsb
fimull
test
push
or
mov
idivb
sub
jo
into
js
div
fdivs
jo
pop
mov
add
mov
add
jae
pusha
test
pop
ja
lret
fimull
push
mov
xor
loop
lock
ljmp
mov
ja
stos
jmp
jne
adc
hlt
cmp
sub
dec
add
jnp
cmp
mov
sub
jp
pushf
out
sbb
push
mov
xlat
or
sub
enter
xor
in
ja
lret
mov
jbe
mov
jge
xor
sbb
js
pushf
outsl
lret
test
pop
pop
test
bnd
fcoms
out
or
sbb
gs
sti
shlb
ja
jae
add
test
negl
xchg
fnstcw
stos
adc
xchg
inc
lods
mov
adc
bound
sbb
arpl
bound
jo
cli
ret
jbe
mov
data16
xor
lods
ret
push
and
or
mov
inc
fst
push
sti
mov
and
jp
dec
loope
ja
fmull
pushf
xchg
push
out
jo
sub
cmp
arpl
fnstsw
jae
lea
adc
in
inc
mov
jg
or
inc
ljmp
cltd
push
xor
pop
negl
clc
hlt
fcompl
mov
dec
cmp
mov
sbb
add
rcrl
or
ss
movsl
iret
lock
lcall
pop
lock
adc
mov
adc
lret
sbb
icebp
mov
lea
dec
out
jns
push
and
xlat
jbe
jmp
dec
jge
fdivl
popf
lock
mov
or
movsl
push
add
orb
jne
or
jmp
stc
outsb
lcall
mov
imul
out
lock
mov
jge
jmp
cmp
or
lret
imul
xor
das
cmp
bound
xor
pop
jb
imul
outsb
jne
xchg
repz
lret
lret
loop
jno
in
sti
mov
inc
test
rolb
outsb
adc
xor
std
dec
test
lods
aad
mulb
pop
sti
icebp
jae
dec
mov
cmp
dec
push
sbb
outsl
lahf
adc
cmp
pop
xor
pop
jp
and
stc
ret
inc
mov
cwtl
leave
jle
cmp
jp
stos
fistpl
das
lods
mov
lret
jmp
scas
pop
out
jnp
stos
inc
xor
jbe
adc
sbb
add
pop
repz
jmp
mov
stos
insl
xor
push
mov
clc
je
xor
jmp
dec
outsl
sbb
fcoms
mov
mov
mov
insb
xchg
mov
test
jecxz
insb
add
sbb
push
fcmovu
out
ljmp
jb
pop
mov
mov
dec
test
jae
adc
xor
jg
jmp
mov
ja
out
arpl
stos
sub
sti
insb
ret
mov
jg
cmp
and
mov
decl
mov
in
imul
xchg
xor
cmp
mov
mov
icebp
lods
pop
and
push
add
clc
ljmp
mov
subl
sbbb
out
leave
jae
jp
movsb
mov
andb
adc
jbe
mov
lods
inc
cltd
insl
mov
mov
mov
std
imul
mov
inc
pop
mov
leave
arpl
jg
cld
pop
insb
shrl
xor
repz
das
pop
jno
inc
ss
bnd
out
lret
push
mov
sub
pop
insb
lods
les
gs
test
dec
xor
jmp
jl
xor
ljmp
push
aad
add
mov
shll
repz
shrb
cli
insb
xchg
adc
push
dec
jge
add
jl
add
mov
mov
mov
or
and
imul
mov
out
icebp
int3
jns
or
arpl
shl
or
cmp
pop
ja
mov
or
in
sub
ja
mov
icebp
inc
imull
ss
mov
test
cmp
cli
mov
xchg
sarl
xor
or
mov
test
mov
movsl
arpl
add
sbb
jmp
xchg
scas
clc
call
lret
out
fcoml
cli
push
divl
xchg
popl
dec
sbb
jp
imul
bnd
jg
lcall
data16
cmc
out
inc
popa
pop
fldt
js
cmp
adc
sbb
cmpsl
pop
int
mov
mov
cli
shl
ss
mov
mov
push
scas
mov
push
jne
or
dec
je
cmp
inc
cmc
dec
lcall
scas
hlt
inc
mov
mov
jns
dec
aam
lcall
je
cmp
adcl
mov
or
scas
mov
arpl
repnz
cmpl
mov
imul
scas
dec
xchg
mov
xchg
xor
mov
jne
add
xor
fcmovnu
adc
mov
inc
hlt
mov
je
jecxz
ret
mov
insl
pop
insb
cld
inc
repnz
push
sbb
fs
lods
or
mov
cli
sti
aas
mov
sahf
mov
sbbl
lods
add
sbb
xor
or
ret
or
mov
andl
test
cmp
dec
xor
jne
loope
sbb
insb
mov
repz
mov
cmp
push
mov
cmc
ja
fmull
xchg
xor
cltd
rcrl
and
shrl
dec
adc
fs
insl
sahf
pop
repz
fst
lods
or
add
mov
cmc
xor
dec
int3
lock
xchg
mov
adc
rclb
and
inc
pop
pop
cmp
jp
jae
ret
out
clc
in
mov
dec
cmp
fildll
lock
loope
sbb
sub
jae
imul
mov
ret
mov
imul
dec
jns
ss
dec
add
or
into
mov
in
mov
jbe
test
pop
or
jge
cmp
jmp
bnd
mov
cli
add
push
and
push
out
imul
arpl
jmp
js
mov
add
in
nop
subl
mov
in
and
adc
ret
and
pop
jns
jne
xor
xor
dec
mov
sahf
das
inc
push
pop
mov
jae
xlat
xor
test
mov
dec
sbbl
fisttpll
insl
aad
in
imul
and
or
in
repz
enter
pop
shr
sub
pop
in
lock
ret
push
sub
lret
shll
and
mov
inc
sub
add
imull
or
adc
iret
int
xor
cmp
jl
mov
test
jle
and
xchg
mov
mov
fldl
in
pop
loop
fucomip
push
pop
and
adc
and
test
sub
and
adcb
mov
add
stos
mov
dec
jmp
xor
add
outsb
imul
cmpsl
ret
pop
daa
sbb
lock
aad
or
arpl
mov
test
cmovb
stos
add
cmp
xor
test
imul
in
test
sbbb
push
xchg
mov
ja
insl
xchg
cs
clc
mov
data16
push
mov
movsb
mov
add
xchg
fldt
add
movsb
dec
mov
push
int
test
iret
mov
adc
jbe
cmovl
sub
lret
popf
ss
or
lea
adc
scas
fnsave
cs
and
cmpb
sbb
mov
jb
mov
fnstcw
jmp
call
pop
sbb
mov
mov
mov
add
jmp
jne
xchg
outsb
mov
xor
push
inc
rorl
repz
jae
cli
movsb
mov
das
repz
pop
jne
cli
sahf
cli
dec
cmc
in
stc
ror
xchg
and
cmpsb
xor
add
jecxz
lds
adc
lock
sub
xchg
icebp
daa
and
jp
pushf
aad
jecxz
mov
frstor
xchg
pop
dec
shrb
mov
mov
ror
js
jns
scas
aaa
xchg
in
push
push
imul
test
cmc
mov
dec
outsl
iret
and
jmp
pusha
inc
movsb
add
xor
sahf
and
jno
mov
pop
fstpl
jns
inc
and
dec
mov
mov
cmpb
push
and
clc
pop
mov
ja
sub
xchg
mov
dec
rorb
push
mov
xchg
fbstp
inc
shr
xor
out
mov
jne
outsl
loope
imul
or
xor
jne
sbb
lock
fs
scas
mov
xor
jne
test
shrl
pop
xchg
sbb
mov
bound
divl
fucomip
rolb
mov
into
cvtps2pd
fsubrl
xor
sbb
xor
out
test
test
jne
mov
test
add
aas
push
sbb
adc
popa
mov
and
aam
jp
xor
cmp
jle
cmpsb
pop
push
fsts
mov
call
dec
add
jl
bound
xchg
leave
movsb
outsl
add
scas
rcrl
mov
cmpsb
or
aas
addl
mov
scas
or
test
pushf
push
stos
mov
fidivrs
test
sbb
cmc
fwait
in
movsb
push
lahf
pop
out
loope
aad
movsb
xor
rol
cli
cli
cmp
fst
push
inc
mov
movsb
jp
xor
cmp
mov
nop
jle
in
add
mov
xor
in
mov
repz
fiadds
jns
jecxz
int3
jmp
mov
cmp
inc
jmp
ja
mov
andl
xchg
or
test
mov
jmp
shrb
push
push
outsl
cmc
cmpsb
lds
dec
and
loopne
lcall
imul
les
test
js
cmp
lcall
and
inc
sbb
push
movsb
dec
or
push
in
scas
in
pop
sbb
roll
dec
pop
sti
js
lods
cmp
mov
cmc
cmp
jl
fisttpll
test
inc
sbb
cwtl
jno
jecxz
cmpsb
mov
scas
outsb
sarl
arpl
cmc
xor
cmp
out
scas
pop
jp
pop
pop
pusha
add
jne
ja
cmc
push
mov
std
fs
cmpb
inc
mov
das
xor
cld
lods
xorl
pop
popl
mov
push
sarl
mov
jne
mov
mov
outsl
je
sub
mov
dec
sti
jnp
lock
sub
scas
and
inc
fwait
add
mov
or
cmp
stc
push
out
push
out
add
fldenv
fimull
idivb
out
fiaddl
dec
stc
jae
cmp
test
mov
in
jne
and
push
push
insl
aam
dec
mov
pop
or
add
in
cltd
fcmovne
mov
leave
lock
lahf
shlb
sahf
cmc
cmp
loop
movl
jne
out
cmpsb
sbb
cmp
fldenv
clc
test
adc
addr16
rep
jmp
idiv
mov
jb
test
lods
push
jne
in
test
test
hlt
xor
adc
inc
mov
lds
adc
xchg
cmp
hlt
test
js
pop
push
daa
ja
push
cmpsb
pop
out
repnz
inc
cmp
xor
ja
jb
movsl
xchg
or
push
mov
scas
jo
push
jne
and
sub
xchg
in
out
sub
fs
shlb
jae
sahf
jnp
ljmp
popa
ret
ret
fiaddl
or
dec
sbb
pop
scas
jg
insl
scas
jle
jae
push
aad
pop
lds
push
out
sbb
aaa
mov
jb
cmc
cli
sbb
in
into
ja
das
push
jne
outsl
add
pop
mov
cmp
outsl
sub
cmp
int3
inc
test
cmp
or
gs
call
aad
and
jp
out
data16
adc
movl
add
mov
add
in
pusha
xchg
sahf
adc
push
aad
add
mov
pushf
fstl
hlt
jg
rep
loope
jl
call
mov
ficoms
or
mulb
inc
lods
jmp
lret
sub
lea
dec
leave
jge
push
imul
mov
lods
in
mov
addr16
xchg
push
pop
leave
cltd
fwait
jmp
imul
or
in
push
cmc
aaa
aam
and
lds
and
mov
inc
push
pusha
cmp
sub
jl
popf
jb
pop
push
sub
dec
mov
mov
fstps
add
addl
pop
sub
iret
sahf
scas
xor
add
sub
push
jge
mov
sbb
jecxz
cld
pop
mov
bnd
add
sbb
insb
dec
xor
cltd
add
jle
lods
sub
pop
xchg
jae
into
int3
add
pushf
xor
mov
in
arpl
pop
rcr
xor
mov
fneni(8087
mov
xchg
stos
aaa
notl
fstpt
fldl
jno
and
mov
dec
lcall
es
ds
jo
and
cmp
cmp
stc
push
cmp
in
jl
mov
repnz
jae
js
pop
repz
push
or
loope
mov
sbb
int3
jp
loope
outsl
test
out
insl
pop
or
out
mov
out
mov
std
nop
dec
pop
jmp
lock
clc
add
int3
mov
mov
repnz
dec
popa
jae
movsl
mov
das
mov
add
push
mov
and
push
cmp
cmp
pop
test
nop
mov
push
fnstcw
rorb
in
int
cmp
xchg
xchg
sbb
or
mov
jns
arpl
jno
insb
insl
insb
push
jb
insl
stos
xchg
jle
sbb
jns
add
sbb
shlb
cli
orb
in
dec
fcomip
add
ret
aam
iret
sti
cmp
mov
jne
repz
or
add
xor
xor
scas
xchg
dec
or
pop
pop
cmc
jmp
mov
sbb
cmpl
in
int
sub
dec
xor
movsl
mov
adc
or
mov
and
mov
cmpb
or
or
cmpsb
push
adc
leave
and
sbb
lds
ret
int
repz
je
pop
cmpsb
out
inc
mov
or
xchg
sub
cmp
jp
add
jno
and
stos
fnstsw
push
adc
xchg
lahf
out
stc
xchg
loope
incl
jl
or
aad
imul
jb
pop
adc
jb
dec
inc
int
xchg
in
mov
jne
push
mov
adc
xor
sbb
in
or
subl
ja
ret
inc
jns
loop
xchg
push
and
gs
fstl
ret
jo
leave
and
lahf
test
pop
lock
sbb
xchg
notl
sbb
jmp
jl
bnd
lock
push
addr16
clc
cmp
xchg
jo
sahf
jns
repnz
jg
inc
adc
loop
cmp
cmpsb
call
and
lock
mov
cmc
sar
sub
fisubrs
shrl
inc
cli
bound
cmp
jae
dec
push
push
fsubs
jecxz
jmp
lcall
fsubrl
mov
xchg
sub
jb
or
cmpsb
jnp
jge
iret
jno
in
sbb
and
inc
jae
mov
pop
cmp
je
lret
dec
or
scas
xchg
test
dec
adc
xchg
shlb
stos
clc
and
jno
mov
loop
push
scas
shlb
add
pop
aaa
adc
xor
xlat
pop
rclb
stos
xchg
adc
dec
and
adc
xchg
or
xor
shl
mov
dec
cmp
cmp
jo
xor
shll
aas
fstpl
adc
bound
imul
mov
or
cld
nop
adc
ja
fdivrs
aaa
or
fstps
jbe
pusha
popf
cmp
jne
jne
jg
cmc
xor
ret
push
iret
xchg
popa
push
lock
sbb
movsl
call
jb
push
jg
cli
repnz
sbb
xor
mov
mov
dec
lahf
cltd
cmc
test
xchg
pop
add
pop
cli
scas
lret
add
imul
cwtl
xchg
das
adc
movsb
and
inc
in
or
mov
adc
mov
repz
sbb
insl
dec
aad
fdivl
mov
mov
adc
inc
sti
in
pop
jl
jns
dec
mov
xchg
orb
sub
cmc
xchg
add
scas
decl
incl
imulb
es
pop
push
clc
jbe
ds
mov
mov
sahf
fs
fldl
jmp
push
push
mov
jl
pop
push
cmp
sbb
pop
add
in
or
mov
lods
push
in
lahf
divl
pop
jns
sti
fldl
inc
and
sahf
xchg
ret
imul
stc
jbe
xchg
pop
rcll
xchg
call
xchg
pushf
or
daa
test
mov
std
imul
inc
outsb
fnsave
mov
loope
ljmp
dec
or
push
push
inc
outsb
mov
xor
xchg
cmpb
in
pop
cwtl
cmpsl
mov
mov
pop
lods
out
cmp
mov
mov
jle
xchg
and
in
dec
mov
sub
inc
jl
arpl
mov
xor
jno
pop
pop
stos
je
scas
push
mov
es
xchg
mov
test
les
mov
jp
ficomps
jo
push
sbb
pop
dec
adc
xchg
cmp
daa
xor
push
inc
cltd
sub
mov
cmp
cmp
lock
or
xbegin
push
divb
test
jp
sti
adc
inc
ret
lcall
mov
lods
jne
cmc
ljmp
mov
out
jbe
cmp
mov
inc
lcall
negb
or
mov
or
mov
lret
add
cmpsl
xchg
pop
and
out
fidivrl
cmc
dec
mov
movsl
xchg
sahf
cvtpi2ps
xor
mov
clc
arpl
pop
loop
mov
fcmovb
jge
mov
test
mov
arpl
add
jge
jnp
add
cmpsl
mov
in
loop
lds
rolb
or
push
leave
or
jge
xchg
cmc
or
jns
icebp
cld
fistps
mov
and
std
add
cmp
mov
into
adc
sbb
imul
lret
mov
repz
call
xchg
repz
cmc
xchg
xchg
cld
aam
fwait
sarl
and
and
es
call
sbb
loopne
fsubs
pop
inc
mov
mov
mov
mov
pop
daa
and
lcall
aad
mov
push
adc
cmp
cltd
in
mov
mov
test
jle
xor
shr
jns
aad
pop
js
xchg
pusha
dec
sarb
stos
icebp
rolb
cmp
cld
scas
mov
imul
push
cmp
sbbb
fistpl
pop
sbb
dec
xchg
aaa
xchg
mov
rolb
jns
stc
iret
cld
mov
jg
stc
and
shl
or
and
fucom
pop
mov
xchg
and
mov
mov
shll
push
std
fldl
sub
btc
out
in
lock
jbe
addl
sbb
ss
sbb
cmc
out
es
add
in
mov
and
outsl
arpl
xor
dec
es
mov
insb
mul
jne
lods
imul
mov
adc
fiadds
dec
ss
xchg
insb
mov
xor
lea
jp
shll
adc
insb
ret
sbb
push
cmp
mov
test
imul
je
pop
or
out
jo
arpl
adc
pop
decl
dec
in
adc
fisubs
push
clc
sub
addl
or
int
push
cmc
fcmovb
iret
pop
adc
pop
push
dec
mov
in
repnz
dec
in
jbe
js
leave
imul
sarl
jbe
pop
in
add
pop
and
lss
jo
dec
jle
jb
and
imul
cmpsb
scas
adc
cmp
adc
inc
jmp
add
inc
jne
ret
xor
push
das
add
int3
scas
jb
mov
roll
mov
mov
or
in
jno
sahf
div
div
dec
inc
repz
mov
add
cmp
notl
into
xchg
sti
xor
cmc
dec
inc
lea
dec
sarb
and
pop
xor
jg
aad
sbb
ljmp
mov
shr
data16
sarb
push
dec
outsl
enter
negb
and
cld
mov
test
outsb
lcall
jecxz
jne
fnsave
into
lock
or
shrb
js
pusha
leave
notb
xor
mov
or
dec
ret
data16
push
jae
daa
lcall
js
mov
in
xchg
push
and
mov
push
adc
mov
xor
pushf
pop
test
push
xor
pop
out
xchg
neg
push
fucomp
xchg
repz
xchg
xchg
mov
and
sarl
mov
adcl
mov
icebp
sub
sbb
lods
xchg
mov
popa
cmc
lock
push
pop
frstor
ret
inc
fstpl
cmp
repnz
inc
clc
inc
inc
gs
sti
in
pushf
or
jecxz
sub
or
mov
dec
daa
bound
ja
xchg
icebp
mov
jmp
xchg
push
xlat
and
or
aam
cli
in
xorb
dec
jne
fneni(8087
dec
adc
xchg
sbb
adc
mov
loope
lcall
cmp
push
aad
sbb
jns
ret
and
out
pop
dec
cmp
xchg
sarl
ret
mov
mov
xor
jne
pusha
lds
shrl
js
cmp
ss
or
mov
cld
bound
ss
int3
sbb
outsl
jle
mov
scas
movb
and
inc
mov
icebp
lea
and
int3
inc
xchg
dec
ficoml
jno
in
daa
mov
lahf
jcxz
mov
sub
icebp
cmp
cmp
dec
or
repz
dec
add
mov
sbb
add
mov
jp
push
jge
stos
push
inc
push
xlat
mov
mov
out
idiv
xchg
sti
add
rcl
or
cld
sbb
je
cmc
add
dec
cmp
sub
add
push
sbb
jecxz
ret
jp
mov
pop
and
into
in
scas
popa
dec
in
mov
and
mov
sbb
xchg
jp
sbb
jmp
pop
or
fstl
mov
cmp
jno
sbb
adc
mov
outsb
jle
mov
xor
sub
or
test
pop
hlt
mov
shld
xor
push
pop
incl
in
mov
cmp
in
aad
iret
cmp
icebp
shrb
fstp
aad
mov
mov
stos
lock
ret
cmp
or
pop
lcall
push
jmp
loopne
lcall
int
and
xchg
add
loop
cmpsb
cmp
pop
fstl
pushf
popf
rcrb
sub
jns
sbb
inc
divb
js
xor
sub
inc
and
cs
and
mov
stc
mov
insl
fdiv
lret
or
jmp
xchg
push
popf
in
out
jns
push
and
cwtl
ficoms
dec
out
cmpsl
ss
sti
mov
push
xchg
jge
and
mov
dec
push
loopew
cmp
lds
js
in
push
rcrb
push
cmp
mov
cld
sbb
call
sub
xlat
mov
call
fstpl
adc
js
mov
imul
popa
bswap
in
mov
jae
sub
in
mov
push
jbe
push
pop
and
inc
adc
xor
ret
arpl
or
ds
vpmacssww
imul
jb
scas
cmp
test
jmp
cwtl
scas
push
test
es
gs
ret
sub
loop
mov
xor
jmp
adc
mov
mov
push
cmp
and
insl
es
ret
xchg
lea
pop
in
ret
shl
arpl
dec
loopne
rcll
iret
add
push
les
out
lods
out
or
aad
jnp
mov
out
loopne
push
out
insl
jbe
je
and
repz
je
sbbb
push
cwtl
inc
in
push
jns
cmpsb
filds
stc
jl
xchg
and
out
dec
cmc
jmp
pop
push
jp
out
mov
repnz
mov
mov
or
enter
push
xchg
aad
adcl
cs
ret
lock
mov
aad
frstor
sbb
int
rorl
adc
inc
xorb
lcall
inc
sbbl
jp
jmp
mov
mov
stos
arpl
sub
xchg
mov
test
dec
sti
jl
enter
jns
jb
cs
and
cwtl
ds
cmp
jns
push
ds
cs
mov
sti
in
xor
dec
adc
popf
das
loope
ret
nop
in
inc
fidivl
test
in
shl
push
fnstcw
push
mov
dec
xchg
stos
ja
frstor
pop
dec
in
mov
leave
pop
xchg
mov
in
sbb
or
xchg
mov
aaa
icebp
dec
arpl
cmc
out
mov
scas
int
call
jge
jbe
sub
lock
ret
mov
dec
pop
xor
cmp
fdivl
jbe
notb
mov
pop
cmp
out
inc
movsb
or
mov
movd
cmc
out
in
xlat
sbbb
jge
pop
je
xor
jb
out
mov
fcoms
sub
lcall
pop
fnsave
int3
jns
xchg
pop
jne
inc
mov
aas
sub
pop
jmp
inc
aaa
repz
xchg
inc
push
or
shrb
pop
repz
adcl
mov
jmp
mov
cld
ret
lods
jecxz
jp
xchg
scas
cmp
cmp
cmp
mov
or
inc
add
jecxz
in
adc
xchg
mov
jp
fildl
jl
sahf
stos
in
aas
jo
pop
mov
and
test
lret
dec
cltd
adc
mov
jne
push
adc
test
arpl
pop
sub
ret
or
push
cs
jp
jbe
cli
mov
sbb
or
scas
hlt
or
jne
loope
xor
lock
movb
popf
push
fadds
jp
fisttpll
movsb
pop
ss
jb
lret
imull
les
jecxz
les
popf
fnstenv
frstor
test
ret
pop
pop
pop
xor
shrl
cmpsb
xor
pop
and
arpl
enter
cmc
aaa
adc
jp
jne
sbb
push
push
and
mov
sarb
in
ljmp
xchg
jns
ret
enter
jmp
xlat
or
lds
mov
add
jae
mov
imul
ds
rcr
scas
mov
ret
sub
xor
xor
xor
sub
out
cmp
in
js
test
movsl
mov
jmp
fwait
inc
jge
clc
fisttpl
iret
sub
jmp
dec
push
call
dec
add
cli
out
add
lcall
jb
lock
insb
clc
push
divb
mov
enter
sbb
mov
push
sub
dec
cmp
cmpsl
mov
fldl
mov
addr16
shlb
mov
jmp
fwait
int
push
pop
jno
cmc
push
lcall
repz
fstsw
int3
or
rcll
loopne
pop
aam
inc
stos
jae
leave
sbb
icebp
xor
pop
jg
xor
loope
push
mov
jp
test
mov
sub
push
fcomps
adc
cmp
xchg
fnstsw
in
shll
repz
add
das
push
gs
push
cmp
or
inc
jmp
leave
dec
sbb
adc
jbe
int3
xchg
mov
flds
in
out
fstpt
push
mov
pop
push
pop
add
inc
in
dec
jmp
insb
scas
loope
dec
mov
add
mov
ret
adc
cmpsl
pop
dec
subb
orb
xor
mov
push
sbb
dec
shrd
adc
jbe
mov
xor
lret
or
push
test
addr16
out
jmp
pop
sbb
clc
inc
cmp
ja
repz
repz
cmc
mov
pop
mov
jbe
xchg
fadds
popa
xchg
mov
add
cld
test
repz
pop
add
xchg
xchg
arpl
push
cs
jne
inc
xchg
lods
call
fsubrp
adc
std
dec
repz
push
pop
xor
fdivl
rcrl
lds
mov
sbb
fmull
mov
nop
jmp
lea
mov
mov
roll
lea
and
fisttpll
ret
ds
fstpt
adc
adc
sub
cmp
or
cmpsl
in
loopne
in
xchg
addl
dec
xchg
cmc
xchg
fld
mov
ret
test
pushf
out
mov
enter
jae
fstpl
sbbb
bound
std
inc
shrl
fdivs
mov
jo
dec
lahf
xchg
mov
pop
dec
es
adcl
pop
loopne
push
rorl
push
imul
iretw
or
sub
js
sub
mov
fnstsw
stc
and
jb
jg
rorb
mov
add
or
jp
and
ja
movl
mov
xor
test
xchg
fwait
cmc
pop
call
sti
subb
mov
fistpll
into
pop
xchg
scas
aaa
mov
test
adc
nop
loope
cmpsl
roll
test
repz
sbb
repz
fnsave
inc
and
xor
xchg
adc
popf
ja
xchg
xchg
jne
cmc
fwait
test
sbb
sahf
xor
mov
xor
cmpsl
aaa
aas
push
xchg
cmpsb
movsl
scas
cmp
cmp
pop
in
sub
jns
jnp
pop
loopne
mov
ja
addr16
jmp
aad
sub
push
test
mov
in
lock
inc
xlat
inc
jecxz
or
push
jge
fs
inc
add
inc
loop
push
xchg
pusha
add
lods
jne
popf
pop
mov
inc
movsb
rcrl
mov
mov
lcall
jp
sub
dec
lock
or
lods
divb
pop
or
jnp
cmc
iret
add
dec
loop
dec
icebp
xor
int
stc
ds
cmpsb
ret
arpl
js
outsl
sbb
andb
inc
movsl
cmc
shll
sub
inc
inc
fcompl
cltd
and
push
adc
bound
mov
add
pop
lret
jge
xchg
cwtl
stc
xchg
sub
insb
mov
jno
cmc
mov
frstor
jecxz
push
adc
repnz
hlt
stos
pop
fwait
test
fnsave
push
mov
cmp
mov
jns
movsl
push
je
jb
mov
mov
ja
sub
and
dec
sub
mov
jae
mov
shl
mov
out
xchg
sub
mov
adc
or
adc
xchg
add
nop
call
and
adc
pusha
xor
cli
in
cmpsb
lret
inc
dec
test
test
dec
cmp
and
stos
cmp
or
jb
out
shll
and
jl
jno
jecxz
lods
lahf
jnp
scas
and
xor
bound
fstl
cmp
xchg
adc
stos
in
pop
arpl
sbb
mov
pusha
adc
push
fidivs
in
sahf
fstp
out
movsb
js
cmp
add
cltd
fidivrs
xchg
repz
mov
lcall
outsb
addr16
scas
gs
aas
cwtl
and
shl
ljmp
jp
cmp
adc
add
test
cwtl
adc
cmc
jmp
and
mov
in
push
fcoms
fpatan
mov
pop
pop
sbbb
jns
stos
adc
sbb
loop
out
test
popf
loopne
enter
dec
adc
pop
push
jo
fucom
pop
cmp
mov
xchg
add
ret
test
pop
pop
jp
aas
sti
lods
push
imul
sti
jb
pop
jne
fldenv
mov
xor
outsl
xor
testb
or
push
in
fldl
push
cs
sahf
lods
sub
sub
movsb
mov
fisttpll
scas
add
or
push
add
andl
xchg
jnp
mov
in
push
xchg
pop
ja
jmp
gs
popa
and
aad
lods
mov
xchg
rorl
push
mov
ja
and
jg
add
xor
mov
orl
out
and
mov
ss
cmp
out
loopne
mov
addr16
outsb
fisttpl
in
cmpsl
hlt
lcall
addr16
in
add
mov
push
adc
addr16
in
outsl
outsl
mov
push
adc
pop
mov
sahf
ret
mov
adc
pop
or
imulb
xor
iret
adc
cmpsb
pop
sbb
arpl
lcall
sub
inc
mov
sarl
lods
lea
movsl
mov
xor
xchg
mov
mov
jp
cmp
jns
sbb
sar
rcrb
mov
sbb
gs
mov
shrb
test
shrb
dec
test
repz
sbbb
adc
inc
shrb
dec
xchg
adc
out
in
imul
sbbl
aam
and
pop
and
pop
or
jle
jae
enter
adc
jecxz
pop
rcrb
adc
jne
cmc
jp
mov
outsb
in
push
push
push
out
aam
sbb
repz
jg
into
push
dec
sti
sub
jo
imul
sub
add
pop
cmc
pop
rcr
jns
cmp
push
mov
xor
out
jne
and
sub
imul
fs
sbb
xchg
mov
outsb
in
out
add
push
movsb
xchg
scas
jae
or
imul
pop
dec
data16
aaa
aaa
test
pop
mov
ficomps
faddl
jb
mov
addr16
pop
aad
jae
pop
les
push
pop
mov
cmpsb
sub
filds
test
xchg
aas
add
lea
xor
loope
out
shlb
dec
or
xchg
pop
and
jnp
movsb
inc
mov
insl
imul
clc
xchg
cltd
leave
outsb
and
out
sbb
mov
or
sbb
cmp
pushf
adc
js
test
aaa
push
adc
pop
inc
outsb
and
cli
mov
adc
adc
xor
or
hlt
cli
andb
leave
mov
mov
add
lock
add
out
cs
adc
mov
mov
fstl
jnp
pushaw
pop
iret
cmc
push
out
lcall
jo
pop
push
pop
sbb
test
dec
test
jae
scas
xchg
mov
or
icebp
outsl
insl
incl
and
jp
pop
cmp
push
pop
leave
lock
xchg
int
push
rcrb
sti
mov
stos
mov
in
out
cld
js
cmc
rcrb
pop
push
sub
jns
and
outsl
ja
xchg
bound
shufps
in
push
imul
loop
cmc
int
test
aas
inc
sbbb
xor
insb
or
jl
xor
sahf
jecxz
in
pop
or
lahf
dec
int3
dec
xlat
pop
sub
inc
mov
nop
sbb
cmc
dec
jae
xor
repz
aaa
int3
xlat
or
jle
cmp
push
add
jbe
cmp
cmp
push
insb
or
les
pop
mov
out
cmpsb
jns
inc
scas
jns
push
or
mov
xlat
adc
pop
xlat
add
lret
mov
push
cmpsb
add
mov
or
repz
cmp
adc
push
jae
bound
or
aaa
sub
ds
xchg
in
stos
stos
scas
frstor
clc
bound
sub
aaa
cmp
lds
push
in
testl
cmp
push
addr16
push
jno
cmc
inc
data16
jmp
pop
jb
shrl
inc
jp
lock
and
push
aam
in
cld
mov
xor
jle
out
sbb
lock
cmc
or
test
push
icebp
inc
push
test
jg
int3
and
fmulp
jns
dec
cwtl
adc
xor
jne
stos
outsb
mov
imul
mov
adc
or
mov
xchg
pop
mov
sub
jbe
mov
push
jecxz
in
jne
shlb
in
lds
inc
add
fistpll
cld
out
cmp
mov
and
mov
pop
sbbl
push
adc
sub
daa
cld
jb
cmc
fistpl
add
jbe
loope
add
ljmp
frstor
rcll
lods
cmp
xorl
inc
inc
cmp
add
xor
imul
mov
in
inc
jne
sbb
mov
in
sub
enter
popf
mov
xchg
addr16
dec
sbb
imul
pop
lret
adc
rorl
dec
pop
pop
or
das
out
pop
sahf
mov
aad
push
repz
leave
loope
xchg
int3
jecxz
mov
popf
fnsave
imul
outsl
jne
mov
push
push
and
es
gs
adc
and
sub
fstpl
imul
cmp
mov
adc
or
movsb
cmp
adc
dec
negb
cmp
inc
jbe
ret
dec
push
out
aad
sub
into
mov
add
dec
push
out
adc
mov
pop
call
pop
jo
loop
jb
inc
pop
pop
movsb
in
pop
nop
shll
inc
in
mov
lcall
arpl
in
stos
mov
js
addr16
jns
mov
int
test
mov
mov
stc
loop
clc
test
jae
jns
sbb
dec
xchg
cmc
sbb
movsb
test
cld
out
jae
add
dec
imul
movsl
dec
sti
or
mov
and
jmp
out
push
add
sbb
rcr
and
clc
testl
fstl
ja
mov
jne
out
cmpsb
xor
jp
fldl
pop
mov
test
or
enter
push
jmp
aam
dec
mov
in
and
and
xlat
inc
inc
xor
arpl
cwtl
lock
mov
xor
push
jmp
fs
jmp
ffree
jo
mov
jl
jle
add
xchg
mov
in
mov
and
cmc
out
les
add
aad
pop
mov
and
in
scas
and
mov
pop
mov
xor
sub
lock
sti
es
sbb
in
bnd
ret
or
mov
popa
fcomps
xchg
mov
lock
xor
out
data16
jb
sbbb
mov
jp
jbe
clc
mov
roll
dec
outsl
pop
inc
icebp
das
pop
jp
lds
jnp
xor
cmp
push
pop
aaa
in
aam
repnz
pop
add
int
pushf
jbe
xorb
sub
cmp
push
or
xchg
mov
jg
ret
stos
loopne
xor
mov
or
dec
in
pop
test
out
sbb
sbb
jge
mov
sbb
pusha
xlat
mov
inc
icebp
xchg
fimuls
popa
jl
xor
mov
outsb
ret
rorl
pop
cld
pop
jmp
call
jmp
pusha
nop
lret
mov
add
pop
push
xor
add
lret
add
dec
out
in
cli
inc
lds
sti
mov
scas
mov
lods
testl
xor
add
xor
fsubs
and
daa
lods
ss
aam
mov
push
sub
sub
xchg
mov
mov
jle
dec
in
jp
out
mov
jmp
xchg
out
inc
mov
cmp
mov
rcrl
jmp
ljmp
dec
sbb
sahf
mov
loopne
xor
mov
ss
sahf
sub
div
mov
repz
pop
sbbl
mov
mov
and
and
js
nop
pop
fnstsw
add
ljmp
frstor
cld
cmp
lock
push
ljmp
in
pop
adc
jecxz
xor
icebp
jg
mov
adc
adc
xorl
dec
mov
jns
xor
add
fiadds
fistpl
sbb
add
fldln2
sbb
sub
testl
jno
mov
dec
pop
iret
daa
inc
scas
int
cmpsb
in
fdiv
test
mov
ds
jmp
das
ja
and
mov
mov
lahf
xor
push
addr16
in
inc
loopne
pop
gs
xchg
ja
xor
sbb
lods
cmp
das
fstpl
fadd
out
add
jbe
jbe
scas
jae
movsl
ret
cld
out
pusha
cmp
lock
cli
mov
mov
push
push
mov
jl
push
mov
leave
push
in
sahf
mov
sbb
add
adc
push
lods
fists
inc
jg
xorl
icebp
sub
stos
sub
add
into
pop
add
push
mov
aaa
xchg
mov
cli
xchg
nop
repz
adc
fsubrs
and
cwtl
loopne
jns
ret
daa
sbb
repnz
jl
push
pop
sbb
ljmp
aam
push
mov
hlt
sbbb
fstps
fbstp
jb
fldl
mov
test
and
xchg
imul
in
imul
push
enter
movsb
pop
fsubr
sbb
xchg
imulb
push
int3
mov
mov
nop
add
mov
cwtl
mov
pop
xor
std
xchg
leave
jle
jne
jns
mov
add
nop
mov
push
push
mov
pop
cmp
leave
and
dec
js
sub
and
jo
add
push
fiadds
push
jmp
bnd
cmc
jmp
iret
mov
sbb
test
stc
lahf
push
jmp
xlat
mov
xchg
cmp
push
add
loop
mov
add
dec
cs
lock
xor
xchg
cmp
sbbb
jp
inc
arpl
das
push
data16
sub
mov
mov
mov
push
adc
mov
pop
sbb
inc
fs
fisttpll
repnz
and
pop
push
shlb
rcl
pop
jne
je
jl
xorl
adc
loopne
mov
in
and
push
fdivrs
cmc
lods
enter
aas
or
jb
incb
jae
in
cltd
cmp
mov
adc
add
lret
out
jo
popf
or
out
jbe
xchg
add
arpl
xlat
mov
add
pop
jl
ja
mov
out
xor
xor
or
push
pop
sbb
loop
dec
stc
jbe
icebp
push
arpl
ja
jmp
pop
insb
test
pop
mull
xchg
jmp
hlt
notb
and
adc
rclb
bound
cmpl
inc
stc
dec
xor
sbb
popf
ss
lea
sub
xchg
je
js
sub
xchg
fnsave
push
sbb
pop
imul
dec
rcrb
leave
fsubl
add
fldl
arpl
sbb
jl
lods
scas
xorb
sub
dec
push
fldenv
enter
pop
leave
sub
mov
xchg
cmp
imul
sub
mov
lock
in
push
in
push
inc
pushf
mov
mov
jae
xor
push
lret
inc
jle
mov
pop
jo
cwtl
ljmp
fdivp
mov
in
mov
scas
xlat
push
mov
in
sub
loopne
sbb
push
fbld
pop
push
iret
sub
jo
fucomp
mov
pop
adc
mov
mov
mov
mov
mov
jge
clc
push
cmc
ss
pusha
lods
ds
add
outsl
dec
mov
jb
and
arpl
lods
jl
add
ret
in
pop
jne
repnz
cli
ja
xchg
lods
rcrl
xchg
mov
fsub
cmc
inc
in
in
push
or
nop
in
mov
mov
pop
jb
or
pop
stos
mov
rcll
ja
xor
xchg
aaa
jecxz
sbb
inc
loope
notl
push
jp
cmc
insl
jmp
pop
push
xchg
std
jmp
xor
in
dec
sbb
push
popf
test
adc
mov
cwtl
fmulp
jb
frstor
xor
stos
nop
adcl
pop
mov
pop
leave
mov
mov
mov
clc
mov
ds
rorl
mov
sub
sbb
fisubrs
or
sahf
push
cs
mov
mov
push
popf
adc
int
inc
xchg
lock
pop
jb
mov
cmp
jge
data16
xlat
in
jae
daa
mov
lahf
inc
sbb
push
fimull
pop
or
testl
in
sub
in
add
mov
ret
iret
xchg
or
cmp
imul
cmp
movsb
adc
and
popa
and
xchg
movsb
pop
sbb
push
stc
push
icebp
loop
xor
inc
into
dec
push
mov
pop
hlt
xorb
outsl
cmp
and
mov
repz
sarb
lahf
fwait
jns
add
test
ljmp
jb
sarl
mov
push
pop
fdivrs
sub
jne
outsb
inc
repnz
out
shlb
cs
scas
jmp
nop
mov
aaa
cmc
sub
cmpsb
mov
jmp
pop
jp
cmovs
cmp
sbb
mov
mov
jp
pop
adc
adc
mov
fstpl
int
lahf
mov
or
out
out
out
lock
push
sbb
pop
aam
mov
enter
sub
out
xor
sbb
loopne
gs
cmc
push
mov
xchg
xor
sub
lahf
push
push
push
dec
sub
push
jne
sbb
ja
xlat
mov
xchg
ret
mov
pop
mov
xorl
cltd
or
cmp
push
cmp
fisttpl
lock
int3
test
adc
mov
fwait
testb
xchg
xchg
stos
jnp
xchg
dec
sub
in
mov
loopne
inc
mov
stc
push
jp
in
jge
adc
xchg
pop
or
add
in
jle
cmpsb
lret
and
xchg
xor
jns
cmc
imul
fdivr
js
sti
fstp
push
cmp
idivb
jecxz
sbb
je
inc
pop
push
jno
xchg
mov
or
loopne
nop
inc
movsb
sahf
xchg
push
pop
std
bnd
js
adc
or
xor
jmp
pop
pop
dec
xchg
sbb
adc
add
stc
push
mov
fnstsw
push
in
adc
bnd
and
popf
xchg
js
inc
xchg
push
xchg
sbb
inc
push
xchg
das
mov
gs
mov
add
fidivs
icebp
add
xchg
adc
lods
inc
sub
bound
adc
sbb
pop
sub
outsb
jge
xchg
fisttpll
cmpsb
mov
in
test
lea
pop
push
jl
pop
stos
paddusw
fnstcw
mov
sbb
sub
push
or
pushf
inc
std
cld
data16
push
leave
push
fwait
fwait
or
and
out
add
scas
js
dec
fcmovnb
and
jge
ja
xchg
jmp
daa
mov
daa
cmpsb
add
pop
ret
add
imul
xchg
xchg
mov
js
jno
add
ds
sub
jg
inc
mov
cmp
pop
bnd
je
mov
mov
js
xchg
or
out
shlb
test
cli
arpl
fcmovne
ret
mov
adc
xchg
outsb
sub
inc
pop
outsl
in
cmc
xchg
pop
push
jb,pn
in
xor
jbe
pop
jb
push
and
sbb
sbb
jbe
ljmp
int3
jns
js
xchg
std
xor
mov
loop
jp
loope
mov
xchg
insl
cmc
xlat
xchg
test
fistl
jb
aaa
std
jb
jmp
pop
cmp
pop
xchg
xor
or
jge
push
ret
in
mov
add
xorb
and
imul
mov
test
inc
jl
lahf
fnsave
scas
imul
out
cli
xchg
pushl
xlat
test
loop
aam
leave
sub
jb
jecxz
and
inc
inc
int3
adc
add
and
lods
jb
jecxz
imul
je
or
leave
in
dec
adc
ret
push
std
jb
lock
cltd
pop
cmp
decl
mov
out
pop
jl
inc
dec
jmp
stc
mov
in
nop
into
lods
push
divb
dec
in
test
es
xchg
fnsave
jno
mov
jp
cmpsb
leave
std
sahf
test
out
sub
cwtl
divb
lock
jg
push
shll
addr16
jns
pshufw
xor
scas
dec
cmc
insl
jns
jmp
and
push
dec
leave
ret
ja
sub
daa
push
insl
int3
sub
nop
outsb
das
add
in
stc
rcrb
push
shll
push
scas
lds
notb
mov
stos
cmp
aas
fisttpll
dec
sub
inc
mov
stos
shrl
dec
sub
fisttps
adc
repnz
cmp
pop
jmp
inc
in
pop
es
mov
dec
lods
mov
cmpsb
mov
movsl
in
insl
mov
pop
mov
cmpsl
ja
repz
popf
and
jmp
or
inc
jb
in
xor
jecxz
shl
rcrb
jne
filds
enter
fcmovne
adc
sbb
push
jns
ds
push
jo
inc
push
jb
in
mov
scas
pop
mov
in
mov
mov
out
cli
fstl
push
xchg
mov
pop
dec
stos
jns
xor
popf
and
or
cmc
cmpsb
cmpsl
xchg
js
js
fisttpll
xor
mov
es
xor
mov
pop
and
xchg
sbb
mov
int
mov
test
mov
icebp
mov
negl
in
lods
and
mov
add
sbb
push
cli
lea
test
in
sti
in
sub
xchg
lret
or
lock
sarl
mov
push
fcompl
inc
fwait
divb
xchg
je
mov
adc
sbb
push
xchg
cmpsb
into
inc
loope
inc
sbb
push
sahf
shlb
push
pushl
data16
push
shll
sbb
fstp
aam
decb
push
jae
push
mov
pop
stc
subb
stos
sbb
xor
dec
nop
cmp
pop
jb
imul
jbe
inc
or
xchg
add
mov
dec
iret
out
aaa
jnp
and
int3
adc
add
sbb
push
mov
leave
or
cmpsb
jns
jae
sub
jno
imul
push
xor
aas
ja
nop
cmc
stos
sub
push
ljmp
mov
daa
jl
and
loop
icebp
stc
dec
jp
aad
addr16
aas
scas
pop
insl
daa
dec
or
bound
cltd
push
fildl
cmc
sbb
add
push
sub
mov
mov
arpl
ss
rorb
push
sub
mov
or
or
sub
pop
and
and
iret
aam
or
int
mov
and
aas
sti
popa
mov
cmp
jne
fcoms
stos
and
ja
stos
adc
iret
stos
arpl
pop
dec
xchg
out
mov
flds
inc
mov
jb
pop
pop
jae
inc
push
pop
adc
push
lahf
mov
mov
ss
cmc
or
mov
xlat
pop
ja
push
movb
jecxz
mov
dec
xlat
lods
jne
push
insb
outsb
scas
pop
dec
xchg
and
fmuls
inc
dec
push
call
test
and
int3
sbb
mov
repz
mov
adc
dec
cmpsb
jp
shrb
sbb
and
les
data16
adc
icebp
std
repz
sub
fstp
pop
addl
pop
cmp
hlt
cmc
jo
test
and
sub
in
out
in
les
fiadds
xchg
pop
xchg
ficoml
jl
cmp
in
sub
jne
sbb
iret
inc
repz
imul
in
pushf
inc
sub
shr
std
push
test
cmc
mov
jno
pop
push
movsb
xchg
sbb
pop
lods
push
jmp
pusha
in
rolb
fstl
dec
fstpt
jbe
mov
std
sbb
jbe
outsb
shlb
jecxz
fs
adc
addr16
sbb
or
add
ret
lock
js
sti
negb
push
cmc
dec
and
lcall
cmp
mov
push
or
jb
pop
test
in
test
js
nop
mov
ret
mov
dec
lock
sub
push
and
push
mov
lea
out
sbb
jb
jp
or
inc
inc
mov
out
pop
lds
mov
outsl
ret
xchg
cwtl
dec
jecxz
push
xlat
mov
push
ljmp
lret
xlat
int3
sahf
dec
cmp
add
aam
in
or
scas
xor
add
mov
repz
lods
mov
mov
daa
js
sub
loop
mov
loope
pop
and
ror
fistl
xor
cmp
cmc
mov
dec
ljmp
xchg
lea
mov
aaa
cmp
out
test
pop
push
mov
jge
fs
das
add
gs
dec
mov
add
dec
pushf
push
cmc
lret
popf
sbb
xchg
aaa
and
fstl
push
cmp
scas
loopne
jmp
cmp
fldl
jae
jle
add
int
fcoms
push
jecxz
je
ljmp
pop
mov
adc
lods
pop
pushf
sahf
fs
cmp
jb
jbe
jns
jno
mov
mov
in
nop
pop
jbe
sti
leave
negl
dec
mov
mov
dec
fstpt
dec
jb
in
mov
mov
add
cmc
mov
jp
stc
mov
lahf
jb
imul
fwait
in
arpl
mov
je
push
insl
es
cmp
rorb
sti
or
fs
in
sti
addb
pop
pushf
in
enter
sti
icebp
movsb
pop
div
sub
lea
push
incl
sbb
jge
mov
or
mov
mov
and
jno
icebp
scas
pop
inc
adc
shll
pop
bound
in
dec
adc
mov
int3
push
mov
jmp
jbe
push
cmpsb
cmpsl
mov
sbb
adc
pop
inc
imull
or
aas
into
push
jno
xchg
hlt
aas
jmp
into
add
mov
out
cmp
push
add
mov
mov
pop
mov
test
add
inc
jmp
and
ja
shrd
in
jnp
mov
insl
cmp
sub
pop
mov
cmpsl
imulb
dec
push
int3
and
pop
add
sbb
push
mov
mov
jno
pop
in
bound
pop
stos
inc
inc
or
dec
mov
xchg
sbb
cmc
push
mov
fstpl
aam
aad
hlt
scas
xor
fiadds
iret
aaa
jle
mov
shr
fwait
jl
pop
icebp
ja
int3
xor
and
daa
out
cli
testb
aas
lock
cli
jne
notb
cmp
cmp
adc
mov
mov
in
push
mov
push
jae
movsb
jns
mov
mov
inc
add
in
scas
in
mov
sub
fld
cld
pop
pop
lds
jp
cmp
cmp
arpl
rcll
mov
and
cmp
jbe
dec
mov
sbb
or
lea
pop
cmc
mov
test
int3
inc
lret
loopne
mov
lea
fstl
repz
xlat
icebp
push
xchg
xchg
std
mov
lcall
les
dec
inc
mov
ret
inc
xlat
mov
inc
movsb
les
mov
xor
or
pop
daa
fstpl
pop
sbb
cmp
mov
sbb
add
sbb
and
push
pop
call
addr16
lcall
mul
ja
jb
lahf
sub
push
js
iret
loopne
pop
mov
dec
sub
push
ljmp
mov
cmc
data16
push
std
push
sbb
jb
lds
lods
ret
add
push
pop
push
sti
xchg
rcll
inc
mov
stos
dec
sbb
xor
xor
stos
cld
pop
jne
test
mov
xor
mov
add
jmp
sub
mov
dec
insl
rcr
xor
mov
leave
xchg
inc
fstpl
pop
cs
insb
outsl
repz
mov
bnd
xlat
or
orl
loope,pt
verr
mov
mov
sub
pushf
sbb
loopne
jg
fwait
jmp
mov
adc
xorb
fstl
test
cmp
sahf
mov
in
in
cmp
in
xchg
adc
xlat
rcr
adc
test
insb
pop
mov
sbb
sbb
add
push
subl
imul
pop
xor
jne
inc
in
lret
test
idivl
inc
in
scas
out
inc
hlt
mov
pop
pop
push
cld
out
loop
push
in
fwait
js
or
xchg
dec
test
lret
inc
in
and
insl
incl
scas
pop
lahf
xchg
mov
and
sbb
fcmovnu
dec
dec
scas
repz
into
pop
ror
scas
mov
cmp
jno
insb
stos
repz
ficomps
xor
jb
cmp
int
test
clc
jmp
cmp
loope
stos
sbb
pop
jns
in
inc
sub
pop
cmpsb
cli
repnz
dec
cmpsl
jne
cmp
cwtl
pop
ja
fstl
cld
loop
xor
xchg
or
mov
mulb
xchg
scas
and
xchg
ja
and
insb
sti
and
cmpsl
loop
sbb
in
mov
pop
pop
adc
adc
mov
rorb
ja
repz
dec
fwait
in
xchg
mov
nop
pop
dec
or
sub
int
mov
xchg
mov
push
lods
imul
lea
jge
aam
pop
ljmp
sti
lea
or
add
fwait
jne
test
pop
xlat
outsb
cmp
sub
push
or
push
push
add
in
pop
push
pop
and
fucom
sarb
loope
ret
cmpsl
or
mov
or
lcall
arpl
adc
subb
ljmp
mov
push
cmp
out
dec
in
adc
add
lock
bnd
add
outsl
mov
movsl
jbe
xor
and
js
cmc
sub
add
push
repz
data16
subb
push
mov
mov
push
stos
sbb
inc
sub
sub
insl
imul
loope
jae
icebp
cmp
cmp
cmp
add
adc
sub
xchg
dec
lods
leave
stc
mov
mov
rcrl
int
jb
mov
inc
adc
pop
bound
mov
cmc
adc
dec
ds
js
ja
repz
mov
push
adc
dec
fwait
lret
jo
jne
xchg
ret
stos
cmc
leave
in
dec
int
sbb
addl
imul
mov
lods
cmp
or
mov
add
adc
es
add
mov
mov
movsb
cmc
sub
call
f2xm1
or
mov
inc
shlb
cmc
sub
cmp
cmc
out
in
ljmp
sbb
mov
aas
xchg
in
outsl
and
out
mov
in
nop
fwait
pop
ljmp
fmul
jmp
jle
jbe
mov
fsubrl
fstpt
ret
mov
cmpsl
cmpsb
xchg
pop
lahf
jne
js
mov
fst
outsb
push
dec
jb
xlat
dec
adc
mov
push
sub
movsl
jmp
clc
sbb
mov
jecxz
mov
push
push
dec
adc
add
ret
mov
pop
or
inc
js
push
jbe
aad
mov
inc
in
test
shlb
mov
push
or
jecxz
call
imul
mov
enter
shlb
fucomp
mov
int3
nop
mov
rcll
aam
xchg
call
pop
inc
fucom
in
sbb
adc
sub
mov
mov
arpl
sbb
sbbb
mov
sub
xchg
jle
pop
int
jecxz
shl
mov
push
pop
jns
fmull
inc
lods
push
cmp
jmp
insl
jge
mov
stc
int
cltd
or
push
cli
jne
xchg
dec
dec
inc
outsl
aad
inc
je
cmpsl
fcomps
ret
and
faddl
push
push
pop
or
in
pop
add
mov
and
cmpsl
adc
jnp
lret
cmc
and
cwtl
in
cltd
and
mov
scas
jmp
adc
jge
sub
mov
xchg
jne
shr
mov
pop
jecxz
ja
push
add
popa
xchg
jmp
adc
movsb
mov
push
pop
stos
in
test
xchg
mov
xchg
jb
mov
jns
add
pushf
in
dec
xor
mov
sub
cmpb
push
xchg
stos
scas
imul
pop
push
xchg
jbe
outsb
fildl
repz
movsl
mov
dec
in
mov
sub
sub
or
scas
lock
xchg
je
aaa
xchg
cmp
mov
mov
push
aas
repz
in
xchg
jle
jb
ja
je
mov
push
enter
jns
mov
leave
sbb
sub
push
leave
cmp
cmpsb
sbb
aam
xchg
adc
orb
jb
and
push
js
xor
mov
push
mov
fistpll
into
ror
add
repnz
mov
lock
lret
test
rclb
outsl
xchg
add
push
jb
mov
ret
int3
sbb
pop
mov
adc
clc
xor
pop
mov
out
out
mov
bound
mov
cli
inc
stc
in
sub
cmp
push
xor
and
out
mov
lret
sbb
mov
fwait
jo
adc
jb
fidivrl
in
xlat
je
fs
lods
icebp
sbb
out
stos
or
xor
fstpl
lahf
sub
insb
or
cmp
popa
or
dec
leave
aas
xor
mov
out
imul
outsl
cld
or
inc
int
push
cmp
fstpl
fists
push
sub
push
arpl
xlat
mov
mov
fsubl
cwtl
inc
data16
in
adc
or
ds
jbe
mov
data16
test
inc
ss
pop
sbb
sahf
cmp
lret
inc
jo
mov
ret
rcll
adc
mov
lahf
mov
pop
in
add
in
scas
daa
cmpsb
mov
pop
sbb
mov
and
add
popa
insb
pop
subl
shlb
rcll
mov
int
push
jmp
jnp
sbb
push
ss
xor
xor
add
fstpl
std
shl
cmp
in
fldl2t
pop
nop
mov
iret
imull
xchg
mov
cmpsb
js
mov
xlat
rcrl
adc
cwtl
xlat
out
loop
fsts
sub
loopne
and
cmpsl
les
imul
jne
and
jl
mov
dec
into
jb
mov
cmp
fistps
mov
sub
xor
xchg
push
pop
sub
mov
xor
push
leave
cmp
out
xor
ret
je
imul
repz
arpl
jne
xchg
imul
sbb
rcrl
and
xor
jae
lahf
xchg
cmp
xlat
repz
dec
inc
push
jo
repnz
pop
cmpsb
out
pop
push
push
push
mov
in
inc
fstl
jae
inc
xchg
mov
outsb
mov
mov
pop
push
insb
mov
in
lds
xorb
fnstsw
outsl
cmp
icebp
push
cld
aaa
xor
xor
push
mov
and
mov
out
sbb
test
mov
pusha
les
mov
cmc
sbb
test
xchg
xchg
sbbl
scas
mov
xor
iret
sbb
mov
push
repz
xor
mov
jno
js
lret
aam
push
out
dec
push
aad
xchg
aas
adc
dec
push
lods
xchg
idiv
push
push
push
es
and
shr
add
jno
pop
dec
decl
mov
mov
sarb
sbb
and
shrl
mov
outsl
mov
faddl
sub
scas
mov
xchg
inc
dec
jmp
pop
cmpsl
movsl
insl
stc
cmpsb
lcall
mov
sti
scas
popa
or
shll
rcrb
mov
in
jmp
fnstsw
hlt
fisubs
je
lods
loop
jne
cmp
gs
icebp
sbb
movsl
pop
add
dec
xchg
jb
fidivrs
jmp
pop
in
cmp
rcll
and
inc
mov
sbb
jb
stos
data16
movsl
jb
mov
ss
roll
test
notb
jns
sub
push
or
push
lahf
mov
in
lret
sti
push
jmp
lea
scas
push
lret
jmp
and
cmpsl
sbb
ljmp
jno
shll
xor
addr16
out
lds
mov
push
js
jne
xchg
push
sbb
std
pop
dec
pop
shr
cmp
and
std
mov
bound
sbb
sub
mov
and
ja
pop
outsl
and
imul
push
jbe
lods
in
arpl
and
in
pop
aad
cli
insl
enter
mov
daa
test
and
inc
lahf
jmp
in
cmc
mov
adc
and
loopne
jge
outsl
cmpsl
fstl
bound
jae
mov
sbb
cmpsb
xor
push
sti
inc
movsl
sbb
mov
cmp
mov
mov
add
mov
ret
int3
xor
lret
imul
jl
lea
adc
imul
in
imul
cltd
mov
addr16
pop
mov
repnz
addr16
int3
cmpsb
mov
adc
cmp
in
push
scas
clc
clc
push
lods
fs
pop
jne
push
jp
cwtl
test
lret
in
mov
icebp
mov
push
fsub
jmp
jp
cld
push
mov
jnp
fidivs
push
iret
fst
stos
add
push
fimuls
mov
xchg
dec
test
xlat
jne
test
mull
lret
fisttpll
aam
cwtl
or
push
rcl
sbb
cmpsb
sub
clc
divb
mov
mov
cmc
cmc
dec
xorb
add
insl
or
sbb
jbe
aam
mov
int
test
or
xchg
aad
repz
or
stos
fwait
push
wrmsr
or
fwait
push
mov
gs
mov
dec
cmp
in
inc
xor
push
jecxz
in
cmp
mov
inc
or
repnz
push
sbb
jno
cmpsb
adc
in
stos
or
cmc
cmp
jbe
jb
pop
push
dec
adc
imul
inc
sti
enter
xor
cmp
and
mulb
xchg
fwait
js
lea
dec
pop
repnz
lcall
pusha
xchg
divl
in
xor
adc
iret
jne
push
enter
inc
cs
xor
xor
cwtl
add
cmp
cmp
and
cmp
popf
mov
aad
popf
or
ret
or
call
lret
inc
xchg
push
int
ds
lods
jns
scas
loop
ja
cmp
or
sub
mov
leave
dec
sbb
mov
cmp
stc
inc
fidivs
xchg
add
cli
xchg
in
fs
jecxz
pop
dec
out
pop
dec
jno
rolb
mov
add
outsl
into
iret
jl
jnp
cmc
out
cwtl
cli
scas
fnsave
aas
mov
cld
pop
enter
jne
push
sbbl
or
jae
push
sbbb
pop
lods
dec
mov
push
mov
mov
jbe
pop
push
push
jmp
sub
repz
xor
cmp
sbb
xchg
fnsave
add
out
inc
notl
stc
mov
mov
push
adc
jne
clc
and
fcmovnbe
orps
mov
sarb
jecxz
jecxz
mov
pop
jae
loopne
into
push
xor
add
and
repnz
xlat
int
sbbl
add
scas
filds
xor
inc
or
xchg
scas
mov
inc
cltd
cmp
out
add
cmp
inc
fdivrs
cmc
lds
aas
xchg
xor
dec
ja
adc
mov
movsl
mov
mov
sub
in
adc
jge
adc
xchg
pop
dec
out
mov
add
and
jnp
push
pop
or
xchg
mov
fiaddl
ja
imul
mov
sub
fnstsw
and
imul
xlat
push
rolb
mov
daa
mov
jb
cltd
adc
lret
mov
pop
ret
pop
lahf
or
cmpsb
clc
imul
daa
mov
jb
xchg
and
mov
in
sub
cmpsb
movaps
and
shrl
xor
push
nop
aam
fwait
sbb
jne
push
jnp
lock
in
popa
rcll
mov
repnz
cmc
cvtdq2ps
popl
mov
mov
pop
mov
mov
out
cmp
in
mov
jb
dec
int3
mov
jle
mov
stos
mov
or
inc
out
sub
mov
or
xchg
aaa
sbb
xor
jnp
pop
cmpsb
jecxz
bound
push
and
push
jb
inc
sti
mov
ds
movsb
hlt
jae
or
lahf
lock
repnz
jmp
cmp
jne
mov
aaa
pop
enter
mov
stc
add
outsb
rcl
test
and
fnsaves
or
cmpsl
inc
orb
jg
pop
lcall
sbbb
push
insl
iret
repz
insb
mov
daa
cmp
sbb
in
sahf
aam
inc
jns
cmpsl
out
stos
in
icebp
lcall
ret
jb
sbb
sub
cli
out
ja
rcrl
call
and
inc
and
or
inc
popa
fyl2xp1
testb
outsb
jnp
and
or
addr16
mov
xor
xchg
cwtl
pop
cmc
dec
sbb
imul
in
jecxz
mov
lods
pop
xlat
push
mov
sbb
ja,pn
sub
sbb
ret
jbe
adc
xor
cmp
push
push
cmp
cmc
xor
mov
imul
dec
clc
shll
mov
test
mov
sbb
insl
jbe
inc
mov
scas
sar
jne
aas
add
mov
mov
dec
sbb
pop
scas
xor
cmc
mov
lcall
cltd
movsb
jbe
daa
stc
sbb
inc
lahf
xchg
in
clc
pop
xchg
addb
cmc
xor
sub
jl
sarl
fstpl
aad
sbb
dec
mov
dec
dec
cmpsl
sti
into
fs
jno
ss
mov
rorl
insb
jae
fisubrs
movsb
sbb
js
jecxz
adc
pusha
push
xor
push
clc
es
add
jp
jmp
in
push
push
lahf
ja
rcr
sub
lcall
in
jmp
shrl
or
mov
sub
mov
into
int3
dec
mov
pop
rcrb
push
mov
cmp
sti
pop
inc
and
fucom
mov
vmovdqa
jns
xorl
mov
cmc
jnp
add
push
inc
pop
test
test
push
fucomip
ds
mov
rcrl
loope
jne
iret
test
in
sbb
test
inc
push
addr16
and
roll
mov
sti
lret
notl
adc
xor
mov
stc
push
ja
mov
repz
testl
adc
xlat
sar
jecxz
lods
loopne
push
inc
lods
sub
ja
and
aaa
lea
sub
xchg
js
fcompl
xchg
imul
and
ret
ja
push
cmp
and
jb
cli
mov
sbb
testb
pop
jnp
xor
scas
inc
out
push
out
loop
inc
scas
cmp
xor
push
sub
pop
ss
arpl
adc
dec
incl
and
or
xor
xchg
mov
push
lret
pop
mov
inc
out
lret
repz
sub
testb
rcrb
daa
mov
xor
ret
in
inc
ja
sbb
add
decl
xchg
lcall
rcr
push
sbb
cmp
and
in
push
lock
pop
cmpsl
fdivr
jbe
cwtl
test
add
sti
enter
mov
xor
add
sbb
loope
add
test
adc
jae
sub
in
xchg
js
jns
jo
add
sbb
and
mov
fadd
mov
ret
das
leave
ss
faddl
int
lret
sub
pop
inc
popa
add
jbe
loope
mov
mov
shlb
roll
xchg
lahf
loopne
int3
lcall
imul
aaa
jecxz
enter
js
push
xchg
dec
es
mov
test
scas
and
push
stos
andb
dec
push
xor
and
add
adc
in
jbe
push
xchg
jb
jns
pop
sbb
xor
dec
pop
mov
jge
sahf
adc
cmpsl
lahf
push
test
mov
adc
push
sti
fadd
mov
aam
jge
adc
scas
inc
pushf
out
inc
mov
xor
xchg
bound
and
dec
xor
cmp
in
mov
add
push
mov
imull
jb
add
ds
jns
push
data16
pop
repz
shlb
and
jae
ret
and
mov
imul
fcoms
pop
aad
adc
mov
mov
stc
mull
jp
imul
push
jmp
push
in
inc
fisttpll
cmpsb
jp
out
ss
mov
mov
clc
mov
mov
push
cld
push
inc
jbe
mov
mov
push
loope
fiaddl
push
std
jno
pop
addr16
lea
je
or
repz
pop
cmp
pop
rdtsc
rol
or
rol
sbb
adc
fisubrs
repnz
jnp
jno
aam
loopne
lods
fistl
shlb
cmp
fists
add
pop
aam
mov
mov
pop
cli
jns
enter
sub
and
pop
fsubrs
add
inc
mov
sbb
jl
pop
xlat
int
sbb
inc
mov
xor
sub
adc
call
mov
mov
sbb
sbb
mov
rcl
sub
test
pop
mov
stc
in
push
jo
ja
cmc
lret
cmp
lahf
mov
fisubs
bound
pop
mov
icebp
pop
push
sti
inc
test
sarb
sarb
insl
inc
dec
in
sub
push
push
in
dec
lret
inc
xchg
mov
pop
lcall
repnz
mov
je
jmp
or
ret
cwtl
sbb
xor
mov
adc
shll
loope
xchg
aam
dec
adc
push
sbb
std
jnp
mov
ss
fldl
test
and
cmp
mov
jnp
mov
adc
cmc
push
in
cmp
mov
jl
xlat
imul
xchg
xor
pop
fsubrs
sbb
fucom
inc
in
shlb
and
lds
pop
stos
jmp
xlat
push
push
adc
mov
adc
lock
and
jmp
jle
jne
or
push
dec
test
aaa
lods
in
jmp
es
mov
mov
add
lahf
lret
aaa
imul
mov
out
push
ljmp
mov
mov
subl
out
out
jl
xchg
out
inc
jne
mov
ds
out
mov
mov
popa
add
cmp
xlat
test
std
pop
inc
repz
jp
fnsave
push
loop
in
aad
fwait
jns
cmpsl
cmc
repnz
xchg
jecxz
lcall
ss
lds
sbbb
mov
mov
cmp
outsb
pop
cmc
inc
mov
sub
scas
sbb
sbb
imul
dec
xlat
inc
in
in
dec
js
sub
loope
jecxz
jl
mov
fistpll
pop
jns
jmp
mov
xlat
push
out
mov
testb
pushw
sbb
xlat
or
movhps
stos
jmp
imul
mov
ja
cmc
mov
mov
into
xor
inc
mov
lret
cmp
mov
cmc
fmul
shlb
push
jmp
lods
leave
imul
cmc
pop
jmp
mov
pop
xadd
jmp
pop
adc
fs
shrb
cmp
mov
inc
lret
cmp
flds
mov
xchg
int
dec
ss
sub
data16
and
pop
jmp
add
aad
mov
and
cmpsl
in
je
sbb
ja
scas
add
jo
bound
xchg
fcomps
addr16
sbb
scas
mov
pop
sbb
lds
dec
arpl
jne
outsb
inc
fcompl
stos
cmp
xor
xchg
xor
test
jl
rcr
adc
jle
inc
sbbb
repz
dec
and
adc
insl
leave
mov
xor
imul
shrl
aad
hlt
cli
xor
nop
loope
out
fdivs
rclb
push
pop
dec
mov
mov
ret
and
adc
push
fadds
inc
hlt
movsl
mov
aam
push
popf
or
repnz
and
cmp
lret
insb
mov
xchg
jbe
jp
in
shll
lock
rolb
pop
arpl
lea
ja
or
push
xor
xchg
push
xchg
xchg
adc
mov
in
pmulhw
cmp
xchg
pushf
cmp
cmp
outsl
dec
inc
add
arpl
out
les
lods
and
push
xchg
dec
mov
pop
imul
ret
lock
mov
push
call
pop
sbb
push
pop
fstpl
cmp
xchg
into
mov
jmp
xor
xchg
fwait
or
data16
leave
ss
mov
fldl
sbb
roll
add
jmp
xor
loop
loopne
xor
sub
ret
jno
adc
dec
sub
pop
in
inc
mov
test
jl
push
push
add
or
test
jmp
mov
sub
push
arpl
cli
cmc
cmp
pop
pop
inc
add
pop
add
adcl
jl
int3
mov
mov
iret
pop
mov
pop
lcall
test
fucomp
cvtdq2ps
insl
dec
das
cli
aas
idivb
sub
xchg
push
movsl
or
icebp
mov
in
int
lods
add
aas
jne
fdivs
ficompl
sub
ja
mov
or
mov
iret
inc
mov
mov
pop
sub
jae
popa
icebp
lret
push
or
imul
mov
clc
decl
adcb
out
jbe
insb
mov
lret
sbb
and
and
out
sub
int3
js
shll
cmc
push
sahf
sbb
push
xorl
add
or
fstpl
aad
not
inc
insb
mov
jg
fldl
ljmp
in
push
test
dec
inc
and
mov
js
arpl
in
jb
pop
push
jbe
and
sub
and
arpl
mov
or
add
cmpsl
pop
loopne
push
and
mov
xor
cmp
out
cli
idivl
xor
cmpsl
adc
cmp
pop
and
push
pop
stos
out
mov
filds
addl
std
movsb
mov
dec
xor
push
pop
xchg
push
push
dec
icebp
cld
jns
push
daa
mov
lcall
xor
gs
test
cmc
rclb
jmp
jle
imul
jne
pusha
shll
pop
fucom
and
int
call
outsb
inc
pushl
decl
jne
movsb
in
js
data16
lea
stc
mov
jle
mov
sbb
popf
inc
xor
test
cmp
add
inc
xchg
scas
ret
or
jge
pop
fldl
jae
addr16
adc
push
cwtl
decb
cmp
xor
pop
rep
int
loope
push
rolb
cld
js
in
and
jo
imul
gs
cmp
xchg
in
sbb
incb
in
rcrb
inc
les
mov
scas
sbb
adcl
js
es
mov
xchg
std
mov
mov
jae
gs
incb
orb
je
out
pushf
dec
fnstenv
aas
pop
rclb
mov
jecxz
mov
cltd
push
sbb
gs
cltd
jno
sbb
aad
lods
pushf
mov
xorb
cmc
jmp
ds
dec
int
lret
mov
ja
cmpsb
in
rcr
jns
sbb
jl
sub
push
pop
rcll
popa
cmp
leave
mov
call
sar
sbb
inc
fisubrl
cmc
push
negb
pop
orl
xor
in
repz
mov
jecxz
mov
ljmp
lock
test
and
aam
popf
test
cmpsb
cld
inc
sub
stos
xchg
inc
idivb
mov
in
sti
fisttpl
mov
shr
orl
in
out
cmc
push
xor
mov
jne
mov
jo
stc
xchg
aam
in
aaa
pushf
mov
adc
ss
mov
inc
ficompl
inc
mov
std
dec
xchg
aaa
into
adc
mov
mov
stc
stos
sub
xor
jnp
xchg
clc
mov
mov
push
mov
xchg
jecxz
xchg
lds
pop
mov
jbe
and
push
push
shrd
cmp
fcomi
ja
subb
outsb
lods
enter
xorl
outsb
sub
push
mov
insl
and
je
ret
adc
mov
gs
jg
mov
inc
fs
pop
mov
outsl
cmp
fdivs
nop
and
xchg
pop
dec
testb
xchg
int3
push
push
mov
shll
sub
push
inc
mov
in
rcll
in
ja
inc
or
fwait
lret
pop
je
arpl
add
lods
test
push
push
in
inc
adc
es
mov
int
cs
inc
mov
jecxz
fists
popf
cmp
pop
xor
push
xchg
mov
sbb
and
jecxz
dec
ret
jmp
pop
in
push
cmp
xchg
dec
mov
outsl
test
inc
cmp
or
jl
mov
inc
cmp
push
arpl
ljmp
cmp
lock
in
imul
mov
fstpl
inc
lahf
iret
loope
inc
jp
cmpsb
pop
mov
lahf
in
test
push
lret
in
std
sbb
inc
push
aaa
outsb
out
jle
popa
cld
mov
mov
push
enter
das
or
push
push
stos
fldl
push
adc
repnz
ret
mov
pop
mov
and
movsb
ja
jmpw
shll
mov
dec
xchg
adc
push
jp
in
pushf
push
push
xor
stos
pop
xor
mov
xor
xchg
mov
leave
pop
adc
cmpsb
push
fs
es
in
push
cli
in
shl
repz
lods
dec
jl
mov
push
mov
jne
out
and
and
pop
enter
lock
mov
outsl
cli
mov
scas
je
sbb
adc
loopne
pop
and
xchg
aas
inc
pop
scas
jg
dec
aam
lods
push
mov
jb
mov
mov
jge
jp
out
jecxz
clc
xlat
push
es
mov
jg
repnz
in
sub
inc
mov
mov
pop
ret
add
push
mov
or
les
lret
push
aas
mov
ja
int
mov
mov
push
and
in
add
ja
jno
lret
xchg
xchg
push
fcom
mov
fcmovnb
push
ret
jb
out
stos
inc
dec
fstp
aam
pop
push
mov
sub
jb
imul
or
out
xor
cwtl
ds
xor
xchg
sbb
pop
mov
ja
pushf
mov
mov
pop
and
jmp
mov
inc
xor
mov
cmp
sub
mov
jle
xlat
or
pop
shlb
pop
xchg
jne
lods
jbe
add
jl
sub
outsb
mov
fisubl
mov
scas
cmp
insb
and
fidivs
sub
adc
ficomps
roll
cmp
cli
and
cli
stos
repz
adc
push
lds
popf
movsb
mov
popl
jne
lds
jp
shlb
test
xor
loope
mulb
xchg
mov
pop
jnp
addr16
pop
lds
adc
push
push
leave
push
lret
mov
mov
jecxz
push
and
xchg
leave
mov
or
dec
inc
addb
nop
iret
mov
bound
pop
loop
rorb
jae
in
push
push
and
pop
cwtl
mov
pusha
incl
mov
aaa
mov
in
test
push
mov
leave
pop
js
pop
mov
out
push
pop
add
es
pop
pop
daa
xchg
dec
mov
xchg
push
dec
xchg
aam
lock
xor
xchg
sarb
loop
aad
fnsave
sbb
or
push
xor
es
lods
shlb
stc
test
movsb
adc
push
nop
cmp
scas
xor
xor
and
or
mov
fucomip
data16
mov
push
pop
test
cmp
pop
enter
enter
insl
scas
fadds
add
hlt
ss
jl
mov
sub
lret
pop
xor
inc
xorb
icebp
jne
loopne
std
xorb
pop
inc
mov
inc
or
jge
test
push
lcall
xor
push
push
ljmp
xor
jns
js
sahf
add
das
jae
or
push
or
cmp
pop
cli
and
pop
and
add
push
mov
imul
loop
call
mov
push
push
leave
mov
or
dec
mov
pop
mov
gs
test
int
dec
jne
js
test
xor
add
imul
pop
aaa
xor
add
add
outsl
dec
sbb
mov
xor
mov
pop
cmpb
and
adc
xlat
xor
mov
lock
pop
lret
xchg
push
or
xor
mov
repz
lods
push
frstor
jecxz
test
push
cmp
cmpsl
pop
addr16
push
and
cmpsl
mov
pop
pop
out
fdivp
pop
mov
xchg
add
out
push
jecxz
test
shl
jmp
aam
loop
fwait
imul
popa
sbb
adc
cmp
jg
cli
add
data16
cld
arpl
jmp
mov
adc
icebp
sub
lcall
shll
imul
fnstenv
leave
cmp
test
ja
inc
cld
enter
out
lret
xchg
out
dec
jnp
cmpsl
add
lcall
sbb
jecxz
push
iret
mov
cmp
and
push
cs
fucomi
xchg
jmp
mov
xchg
mov
and
xchg
shll
and
sbb
sub
mov
fists
mov
lea
ficoml
bound
jno
sub
and
data16
sub
addr16
or
sub
xor
andb
cmp
pop
mov
or
push
xchg
leave
es
or
fnstsw
pop
shlb
mov
int
orb
fnsave
lds
dec
add
jb
outsb
ret
mov
sbb
ljmp
pop
pop
gs
mov
dec
cmp
xchg
js
test
test
lock
inc
sbb
pop
jp
dec
push
test
ret
inc
mov
push
dec
inc
stos
cmc
hlt
or
ljmp
xor
inc
enter
fildll
cld
aad
xchg
pop
push
push
push
imull
test
imul
xchg
aaa
and
inc
pop
test
clc
pop
repnz
in
jp
sbb
push
pusha
sub
mov
jecxz
push
mov
sbb
in
xor
mov
push
or
adc
add
punpcklbw
mov
lret
inc
add
fucomip
hlt
jno
jmp
loopne
sub
sbbl
stos
pop
xor
lcall
cmp
or
into
push
les
dec
test
pusha
cltd
fdivr
push
push
mov
lods
inc
stos
loopne
wrmsr
adc
mul
fldenv
mov
je
sub
pop
rcr
sarb
int3
or
dec
push
jp
dec
pusha
dec
fstpl
or
xchg
stc
cmpsb
popa
es
fwait
pop
jo
mov
push
push
clc
pop
pop
int3
ret
out
out
cmp
xchg
fwait
xor
mov
jb
aaa
cltd
xor
mov
ja
call
lods
mov
xchg
lea
mov
ljmp
inc
adc
stc
xchg
sbb
div
dec
pcmpgtb
jecxz
jg
jnp
jns
movsb
addr16
jb
jg
mul
dec
mov
adc
mov
mov
testl
test
popa
cmp
mov
jb
stos
or
and
inc
xor
roll
xchg
add
loopne
into
inc
pop
fisubl
dec
icebp
sub
call
ljmp
insl
roll
inc
addr16
sahf
pop
or
or
xlat
push
push
sub
and
in
pop
outsl
dec
mov
add
in
out
add
xor
scas
cld
jo
in
push
dec
scas
roll
jp
fisttpl
fildl
sub
xor
mov
dec
cmp
filds
addb
push
in
pop
shlb
inc
data16
sbbl
cmpb
jmp
sub
xchg
push
adc
pusha
fcmovnb
lock
lods
mov
push
lods
iret
cmp
loopne
les
pop
into
xchg
sub
cs
sub
lock
sbb
and
mov
push
ja
jns
push
xorl
jle
mov
or
adc
lds
xlat
mov
dec
mov
xor
push
sbb
mov
xor
push
imul
test
jnp
std
push
out
inc
cmp
add
out
in
xchg
jns
sbb
mov
dec
cmpsb
sub
loope
cmp
xor
fadds
imul
icebp
sarl
mov
mov
cmpsb
push
lock
repz
sqrtps
xorl
mov
ja
scas
lods
fnstsw
xchg
xchg
in
dec
add
jmp
xchg
inc
xor
or
mov
lea
mov
popa
push
sbb
mov
xchg
cltd
xor
dec
rol
or
sarl
push
in
adc
mov
mov
jno
or
xchg
dec
movsl
push
xchg
shrb
cmp
xchg
inc
sub
jae
cmc
ret
adc
push
in
push
ds
cmp
jle
mov
mov
mov
jns
push
mov
xor
adc
jbe
cmpsb
inc
adc
fimull
jae
jmp
xchg
in
xor
inc
pop
mov
test
pop
mov
loop
lods
xchg
loopne
hlt
test
jo
jno
stc
lret
cmc
jne
xor
sti
das
clc
xor
adc
and
push
fstl
dec
sarl
shll
int3
incl
sbb
scas
jo
cmp
pushf
jp
out
repz
icebp
addl
xchg
xor
ret
push
arpl
jo
push
dec
js
mov
inc
cmp
imul
dec
mov
push
scas
dec
aam
int
cmc
stos
cmpb
fldcw
movsb
xlat
jp
das
cld
mov
inc
aaa
jg
lds
xchg
sbb
and
jb
pop
pop
push
jl
add
hlt
push
mov
adc
mov
cli
pushf
rol
mov
sbb
jmp
rcr
jmp
cmpsb
jbe
fsubr
movq
bound
sub
push
push
mov
imul
adc
mov
call
or
jae
test
xchg
outsl
pop
ds
and
mov
sub
mov
cmpsl
pusha
xor
pop
adc
jbe
aaa
pushf
inc
cltd
mov
pushf
js
icebp
dec
jecxz
jno
jne
adc
jmp
jns
jb
fs
frstor
fldenv
xor
push
push
aam
mov
sbb
mov
in
in
pop
mov
test
sub
push
mov
push
pop
inc
adc
fisubs
fdivrs
pop
enter
adc
repnz
roll
jae
cmp
pop
out
jne
scas
js
fucomp
mov
jne
push
mov
pop
mov
add
loop
pop
test
mov
dec
mov
pushf
push
push
fisubrs
sbb
jno
cmp
sbb
insl
mov
in
mov
mov
mov
ds
dec
addl
jge
xchg
scas
leave
lahf
lret
int3
push
dec
ja
bound
ret
in
lods
lcall
insl
fbstp
lods
in
lcall
out
jae
lods
test
or
ret
inc
sub
cwtl
sub
or
mov
ret
imul
shlb
rorb
ljmp
stos
loop
pop
out
stos
mov
dec
adc
hlt
clc
jo
pop
lret
in
test
xor
jl
outsb
cmc
es
mov
sub
in
sbb
inc
lret
dec
jb
mov
into
pop
in
xchg
mov
ja
xor
dec
aas
pop
rol
or
jne
push
enter
sahf
push
jo
jbe
fbstp
ret
sbb
aaa
shlb
fs
pop
addl
mov
cmp
cli
cmp
scas
mov
xchg
jle
mov
pop
mov
rcrb
jbe
mov
test
push
rorb
cmp
cmp
les
data16
jg
cmpsb
and
les
jns
scas
outsb
push
sub
test
mov
cmc
pop
or
pop
insb
cmp
push
xchg
mov
xor
mov
dec
or
cmc
out
dec
xor
dec
cmp
shlb
push
cmp
outsb
jge
in
inc
cmpb
xor
loopne
adc
add
add
cmp
mov
inc
in
addr16
stc
jmp
or
mov
ds
arpl
mov
push
js
sbb
aam
mov
std
sub
cld
jae
jmp
fstl
push
mov
inc
scas
data16
bound
push
ret
mov
mov
mov
cld
shr
lock
fstpl
add
mov
pop
adc
ljmp
mov
jb
test
pop
lds
mov
jecxz
test
mov
mov
dec
xchg
pop
stos
xchg
adc
push
daa
and
in
push
loop
shrb
push
push
ret
push
movsl
addr16
fmuls
insl
movsl
xchg
into
aam
or
mov
or
add
je
aaa
and
pop
push
push
dec
cmp
subb
mov
int3
mov
sar
pop
and
dec
dec
sub
or
mov
xor
pop
jecxz
add
aad
sti
mov
sti
scas
mov
notb
repz
testb
mov
in
mov
mov
mov
xchg
call
lahf
loopne
cmp
cmp
jmp
jne
push
xchg
out
cmp
sub
mov
loope
lea
xchg
shlb
rclb
mov
xchg
xchg
cmc
lret
pop
pop
xor
mov
mov
das
iret
cmc
stos
pop
inc
lea
inc
mov
mov
mov
mov
test
int
mov
ret
out
shl
inc
dec
xorb
mov
push
ja
and
lret
aaa
xchg
mov
mov
xlat
cmp
inc
lahf
mov
int
inc
dec
push
outsl
daa
mov
ret
fst
ficompl
data16
or
enter
cmc
imul
mov
lcall
in
pop
inc
std
icebp
cmpb
ficompl
and
ljmp
pop
nop
cmpsl
pop
movsb
je
cltd
inc
in
add
inc
aam
leave
cmc
in
hlt
add
cltd
and
mov
mov
lret
jecxz
fs
inc
out
pop
fdivs
pop
add
mov
fdivrl
lret
and
in
rcrb
insb
sarl
jg
xchg
push
std
imul
in
mov
bound
fnstcw
dec
sarb
mov
ret
push
jecxz
sub
pop
jns
adc
add
bound
aam
fsubp
mov
jp
ret
aam
dec
sub
rcll
jno
mov
sub
cltd
xchg
xchg
lock
mov
fisttpll
mov
test
or
andb
cmpsl
mov
fstpl
int3
dec
cli
in
shlb
pop
into
out
mull
jmp
mov
push
inc
sbb
scas
sub
adc
popf
idivb
xor
dec
and
sub
clc
icebp
adcl
mov
push
xlat
das
mov
and
clc
dec
jb
push
pop
shrb
mov
push
out
jns
mov
das
xchg
lret
dec
out
jae
mov
sbb
subb
sti
xorb
and
pushf
xlat
xchg
scas
lds
ret
jae
or
rcrb
ja
stos
ret
sbb
insl
bound
cmc
hlt
mov
scas
or
mov
scas
psubusw
mov
push
loop
enter
xlat
out
shlb
mov
pop
add
or
lahf
mov
xor
xchg
xchg
fisttpll
xor
stos
std
xlat
sub
insl
xor
pusha
jg
xchg
outsb
mov
out
and
outsl
cmpsl
mov
cld
aad
ja
and
mov
xor
in
jge
insl
fbstp
fisubrs
xchg
imul
fdivrl
das
test
das
add
xlat
fiaddl
stos
in
jmp
repnz
mov
fdivr
in
fidivs
inc
jno
push
pop
bound
mov
jns
cmp
int3
mov
ss
mov
mov
xchg
add
popf
and
mov
ljmp
mov
outsl
fnsave
xlat
dec
mov
jo
and
les
hlt
pop
mov
aam
cltd
imul
arpl
jbe
add
mov
out
fstpl
sbb
or
repz
dec
ret
inc
jecxz
fstps
jg
cmc
daa
in
cld
and
inc
mov
stos
and
pop
xchg
cltd
pop
jb
cmc
scas
imul
xchg
xchg
aas
mov
das
xorl
scas
xor
fsts
fcmovbe
jmp
bound
pop
pop
pop
pop
in
mov
subl
test
push
mov
mov
or
cmp
notl
hlt
push
jo
pop
mov
fwait
out
jmp
jnp
pop
cwtl
inc
mov
data16
xor
inc
mov
jb
sbb
push
in
imul
frstor
xor
cmp
stos
inc
cmp
xor
iret
xchg
pop
jb
lods
pop
subb
fiaddl
mov
mov
jne
jns
fwait
xchg
inc
push
adc
dec
divl
call
in
repnz
movsb
sub
lahf
push
mov
or
inc
and
and
mov
and
cmc
arpl
xor
mov
outsb
mov
gs
xor
pop
add
push
imul
bound
jnp
jecxz
or
inc
xor
fsubl
es
fiadds
dec
enter
and
and
sarb
mov
scas
push
jl
cmc
movsb
cmp
cmpsb
inc
bnd
test
iret
loop
repnz
mov
pop
repnz
xchg
add
test
xchg
gs
repz
addr16
xor
in
and
sarl
pop
sarb
push
cmpsl
mov
adc
pop
in
mov
mov
cld
dec
xchg
test
pop
pop
jl
mov
popf
fs
in
lods
or
xchg
mov
fisttpll
sub
pop
sar
das
out
cmc
mov
push
mov
aaa
jb
jne
ret
nop
mov
stos
xor
cmp
int
call
jp
xchg
insl
pop
mov
aad
xor
inc
xchg
lock
push
mov
jnp
out
adc
mov
xor
in
std
xchg
xchg
clc
scas
lret
xor
xchg
leave
push
clc
pop
jne
adc
mov
arpl
test
std
cmpsl
ljmp
xor
mov
sbb
mov
or
je
lret
pop
mov
addr16
adcl
lcall
cli
cmp
inc
jae
jns
jns
test
fsubrl
decl
push
popf
pop
xor
aaa
pop
sbb
sub
mov
cmpsl
xor
fstp
inc
dec
sbb
cmp
dec
or
or
jbe
pop
aam
push
rorb
or
ja
sti
out
jb
fmull
push
test
mov
mov
pop
fstp
push
shrl
pop
push
int3
inc
out
dec
pop
mov
pop
jmp
mov
add
lret
inc
es
pop
mov
dec
dec
cltd
cmp
xor
push
inc
daa
mov
ljmp
pop
xchg
push
lods
nop
inc
je
pusha
and
repz
mov
or
push
adc
add
xchg
or
jno
and
jp
test
push
leave
es
sbb
jle
in
repnz
outsb
dec
jl
jl
outsb
dec
push
mov
movsb
roll
fsts
outsl
jns
inc
xchg
or
testl
xlat
fdiv
pusha
mov
xchg
bound
fistl
mov
push
jp
out
pop
mov
push
in
push
xor
add
inc
fidivrl
mov
jmp
xchg
push
inc
out
mov
repnz
hlt
add
es
fidivrl
adcb
lods
xchg
mov
adcl
xor
fistpl
ljmp
fucom
xor
mov
mov
cmpsb
mov
outsl
shll
lock
mov
dec
idivl
nop
dec
xor
or
pop
mov
mov
jg
outsb
add
loop
stc
ja
andb
int3
data16
mov
and
daa
mov
in
sti
jbe
cmp
and
sbb
jnp
repz
in
push
mov
lret
jmp
push
out
dec
mov
xchg
push
testb
xchg
mov
shrb
cmc
mov
sbbl
pop
and
in
cmc
addl
mov
xlat
mov
repz
dec
mov
fildll
lcall
lret
add
fnsave
stc
int
test
int
push
cmc
xor
stos
pop
pop
add
fst
jp
push
xor
dec
dec
test
mov
pop
enter
xor
hlt
adc
pop
sbb
xlat
adc
sarl
cmc
stos
loope
mov
jne
mull
cmp
mov
frstor
lods
cli
xlat
repz
imul
mov
out
loop
and
cmp
enter
sti
leave
mov
mov
push
imul
mov
mov
fcmovnu
jle
jle
xchg
adc
out
insb
jmp
iret
sub
push
lcall
sbbb
mov
push
xor
loop
jp
xlat
dec
ret
call
pop
xchg
jne
pop
xlat
enter
mov
sbb
ja
inc
repz
fnstsw
and
in
insl
jb
push
aas
dec
in
dec
out
xchg
sbb
scas
add
xor
pushf
jno
mov
mov
push
sbb
fisubs
sub
movsb
das
sbb
push
sbb
cmp
aaa
adc
jns
lcall
cmp
std
pop
xlat
sbb
subb
mov
lcall
and
jp
repnz
repnz
pop
xchg
sti
sub
addl
jle
clc
pop
dec
cs
push
pop
psubb
and
jecxz
ss
pop
sbb
push
jbe
pop
pop
push
ret
cmpsb
sub
outsl
cmc
and
insb
xchg
aad
in
lods
shlb
fs
orl
hlt
lret
imul
mov
subb
mov
and
xor
arpl
and
ljmp
fucom
aaa
mov
sarb
lock
pop
fwait
inc
ret
lea
mov
das
and
pop
mov
daa
pop
dec
mov
test
adc
xchg
rclb
xor
dec
push
mov
lods
jo
and
cmp
popf
ficomps
bnd
xchg
or
roll
fbstp
pop
cwtl
dec
repz
xor
push
xchg
addr16
sub
loopne
jo
xchg
ss
push
inc
jecxz
xchg
aas
or
lock
loopne
and
cmp
orl
fstps
cmc
lret
dec
jno
fistpll
pop
in
mov
pop
imulb
xchg
xor
jnp
jb
xchg
scas
jne
xorb
mov
cmc
or
push
out
popf
mov
xchg
lods
mov
inc
push
je
cmpsb
scas
dec
rolb
dec
sti
rcl
mov
ss
xchg
dec
int3
sar
add
loopne
clc
arpl
shrl
test
sub
imul
jmp
daa
add
push
mov
inc
lret
cmp
push
push
clc
jb
jbe
in
out
jae
xor
daa
adc
cmpsb
jb
mov
mov
and
fwait
out
adc
dec
or
cs
lret
mov
add
mov
test
sub
movb
add
xor
inc
cli
pop
jo
mov
loopne
add
jnp
xchg
outsb
stos
cmc
lods
inc
add
xchg
imul
ret
xchg
loopne
pusha
sub
cmc
jns
out
mov
sbb
pop
xchg
sbb
push
sub
popf
and
insb
mov
or
outsl
jo
mov
xorb
pop
inc
adc
push
pop
xor
xor
pop
addb
iret
xchg
cmpsl
addl
ror
addr16
data16
jae
xchg
push
mov
call
mov
xchg
ficompl
mov
pusha
lcall
mov
rcrb
sub
jb
fadds
xchg
and
or
push
push
push
cmp
pushf
sub
movsb
pop
dec
pop
popa
xchg
jne
js
or
mov
cs
ret
inc
pop
enter
out
test
out
bound
test
lret
les
mov
cmp
loopne
ret
out
adc
push
repnz
cltd
insb
mov
xor
aas
mov
hlt
sbb
mov
mov
int3
cmp
cmp
outsl
mov
lods
mov
xlat
sbb
stc
mov
lds
pop
scas
shrb
mov
in
push
dec
aam
ds
xor
xchg
sub
int
addb
sub
cld
sbb
insl
test
pop
add
sub
daa
mov
xchg
sahf
ror
aas
call
push
repnz
xchg
cmp
sbb
cmp
scas
sub
fstl
cmp
dec
push
sti
out
cmc
pop
inc
cmp
jl
int3
jmp
xchg
and
sub
xor
dec
or
roll
push
es
mov
jae
cwtl
in
sahf
ret
stos
lret
clc
rep
mov
mov
mov
rcrl
out
sub
pusha
dec
or
rcll
push
in
jecxz
xchg
nop
adc
and
inc
pop
insb
adc
lds
cli
jl
adc
repnz
cltd
decb
xchg
sub
loop
fldt
lcall
sub
ss
ret
mov
subb
icebp
mov
jno
cmc
lret
add
ss
int3
mov
mov
cmp
sub
pop
js
cmc
mov
fistl
repnz
push
mul
sub
fistpll
leave
ja
fdivp
hlt
ret
imul
xor
adc
cs
push
and
and
cmp
mov
fnstsw
adc
add
cli
cmp
push
imul
and
dec
add
movsl
push
shlb
pop
aad
in
inc
and
dec
inc
jnp
idivb
sub
xor
test
xchg
mov
fldcw
mov
ja
loope
push
dec
imul
je
das
pop
adc
lods
stc
push
sub
dec
loop
mov
loop
clc
cld
js
cmc
push
mov
mov
hlt
icebp
loope
sub
in
jne
lahf
add
dec
out
das
lret
jne
stc
stos
cmc
cmp
dec
fidivrl
or
mov
shrb
ss
jmp
ret
cmpsb
xor
fwait
sbb
jbe
sbb
in
mov
push
sub
popa
or
stos
mov
stos
xchg
mov
insl
lcall
ss
push
lret
adc
movsl
push
mov
popa
cli
xor
jno
push
cmp
jb
adc
scas
cmc
in
mov
leave
sbb
mov
xchg
and
lea
cli
fldl
jae
adc
xchg
nop
jae
shll
mov
scas
repz
pop
fwait
mov
mov
xchg
pop
pop
insb
mov
and
mov
xor
pop
cmp
push
imul
mov
jp
xchg
mov
cmpsb
mov
dec
fstl
and
jb
xchg
loopne
clc
mov
ret
stos
mov
mov
sbb
mov
mov
enter
jb
in
or
xchg
cmc
cmp
or
jg
dec
xorl
mov
adc
lahf
stc
or
jae
lock
dec
movsb
ficompl
mov
sub
lock
push
mov
cmpb
or
xchg
push
in
and
and
out
mov
adc
cmpsb
cmpl
inc
dec
mov
sub
shrl
adc
push
leave
mov
nop
sbb
and
push
sbb
cltd
lock
add
dec
cmp
ficompl
pop
sub
addr16
mov
push
mov
jo
sub
dec
mov
repz
out
js
inc
xor
and
popa
ljmp
dec
mov
mov
lret
mov
rol
xchg
sbb
or
pushf
lods
pop
mov
in
out
sub
movsl
mov
stc
iret
adc
in
xchg
loope
jmp
es
inc
cmp
out
fwait
sub
fisttps
xor
loopne
pop
jo
sub
negb
and
in
adc
jmp
jbe
subb
mov
add
in
into
out
dec
ficompl
cmp
sub
jbe
xchg
filds
push
jp
adc
or
add
mov
rcrb
jno
push
jne
sbb
ret
int
loopne
push
stos
lcall
nop
in
dec
cmp
sbb
dec
js
lret
inc
cltd
and
insl
cmp
cmp
data16
in
dec
clc
mov
int
mov
mov
mov
jl
scas
fisttpll
pop
fsubl
in
push
push
xor
jmp
call
xor
fwait
in
jp
mov
insl
push
cmp
jp
iret
sbb
cmc
xor
out
mov
mov
je
cmc
scas
cmp
xor
mov
aam
negb
es
daa
pop
imul
test
popf
lret
jns
in
cmp
in
jns
cmp
jge
cli
nop
out
movsb
fidivs
pop
mov
pop
iret
add
sub
or
aas
sbb
adc
xor
sti
pop
xchg
cli
xor
gs
add
cmp
orl
dec
jecxz
or
xorl
loope
js
and
mov
jo
outsl
andl
fdivrl
loopew
fidivl
lret
cmc
or
lods
or
mov
lods
loopne
mov
in
cmp
test
arpl
repnz
lods
mov
popa
cmc
mov
ret
jge
xchg
in
js
scas
mov
or
sarb
xorb
aas
and
ret
dec
sbbl
pop
fsubs
sbb
lret
push
sbb
xchg
cmp
cmp
arpl
fstl
jge
int3
push
aaa
or
aam
or
mov
movsl
mov
or
mov
push
cltd
pop
push
loopne
xor
jb
jns
and
jg
sbb
adc
push
cltd
aam
and
rolb
jb
push
adc
push
aam
sbb
repnz
fucomp
orl
push
mov
pop
inc
inc
sub
sub
pop
adc
jo
cmpsl
imul
sahf
lds
popf
fstps
fcom
jmp
mov
in
push
xchg
dec
jne
insl
push
enter
and
cmc
pusha
ret
jo
sub
sub
ret
cmc
ja
bound
sarb
pop
adc
fldl
dec
shll
iret
lcall
cmc
push
int
push
dec
pop
xor
divb
sub
mov
sbb
int3
movsb
flds
leave
adc
rolb
mov
jne
pop
mov
xor
sub
test
jns
loop
das
popa
cmp
mov
sub
xchg
dec
pop
or
fisttpll
ficoml
lret
roll
imul
jecxz
and
sub
inc
cmpsl
rcr
in
gs
and
mov
loop
sub
popf
lret
or
push
cmp
push
or
lods
sub
pop
inc
cmpsb
fmull
ja
pop
scas
sbb
in
mov
cmp
cmpsb
ds
enter
cmpsb
icebp
in
sub
outsb
jne
aam
dec
sbb
add
in
pop
xchg
mov
rolb
adc
repnz
insl
addr16
xlat
push
dec
mov
stos
nop
cld
enter
fsubrl
or
aad
js
fcmovnu
jg
mov
mov
pop
or
stc
es
sub
push
adc
jb
repz
mov
and
std
out
mov
out
loop
mov
pop
jecxz
push
imul
push
lods
lock
xchg
popf
int3
dec
jns
pop
loopne
in
pop
sbb
rcr
js
push
repnz
gs
pop
ljmp
push
lret
jne
ja
xchg
shrb
in
jae
adc
clc
and
hlt
cmc
stos
in
outsl
sub
mov
add
push
lock
gs
mov
jbe
push
lcall
jns
and
movsl
lods
pop
insb
lahf
jb
out
std
out
in
test
pushf
add
into
scas
jp
shrb
inc
hlt
or
mov
inc
icebp
pop
jno
jne
mov
push
daa
shrb
push
in
out
inc
pop
push
mov
les
cmp
pop
adc
pop
xchg
mov
rcr
xor
out
lea
sahf
fs
out
cmp
push
push
subl
pop
cvtps2pd
or
ficoml
xchg
inc
xchg
mov
lcall
cmp
aad
int
mov
repnz
addr16
xor
lock
lods
pusha
jae
icebp
or
out
mov
loopne
dec
jae
shl
jnp
test
inc
loope
mov
aad
cmp
xchg
ja
inc
or
mov
sbb
sarl
je
test
fwait
add
mov
jp
outsb
arpl
frstor
pop
dec
dec
leave
test
insb
jl
pop
sbb
add
pop
jno
scas
or
cmp
mov
in
and
and
fmuls
jne
shrl
divl
in
mov
in
xchg
vcomisd
jp
add
shl
sub
cmp
aam
cmp
cmc
lret
insb
pop
sub
mov
jne
and
lret
cwtl
adcl
add
nop
and
add
out
xchg
inc
pop
sbbb
les
aad
sbb
mov
mov
paddb
mov
in
pop
jne
sarb
xchg
mov
aaa
cmp
pop
outsl
inc
or
xchg
add
orl
popa
or
test
lcall
push
ja
in
dec
lcall
andl
aas
mov
dec
cld
pop
icebp
xchg
push
dec
insb
in
nop
scas
test
mov
or
mov
arpl
negl
imul
cmp
lods
cld
in
insb
dec
and
loop
push
shr
sbb
add
cmp
and
xorl
sub
mov
add
cs
enter
leave
jae
xor
icebp
fs
mov
inc
push
jo
ljmp
mov
sahf
je
addr16
incl
leave
push
add
mov
shlb
push
rcrb
rol
test
sbb
aam
out
out
leave
test
or
adc
stc
lods
push
loop
mov
mov
cmp
dec
push
xor
icebp
les
push
aas
fs
ljmp
scas
fadd
ja
cmc
sbb
mov
std
mov
cmp
pusha
lret
xchg
lds
jae
fldt
inc
or
or
and
fidivrs
pop
jns
pop
lret
or
or
in
mov
fbstp
lock
imul
xchg
jb
cltd
jp
ret
imul
nop
loopne
ja
icebp
lret
sbb
mov
jmp
sub
stc
scas
push
mov
outsl
jbe
ret
ret
adc
int
mov
lods
xor
push
lods
fs
fwait
daa
pop
sub
sbb
ss
js
movsb
repz
jns
es
add
mov
adc
sbbb
int3
and
dec
outsl
sbb
pop
jae
mov
add
sbb
in
int
inc
add
adc
sub
mov
in
dec
js
or
push
and
and
ror
imul
cmc
sarl
jmp
jne
fiadds
mov
sarl
insb
movsl
popf
shrl
mov
mov
push
cli
jmp
mov
xor
cmp
ret
and
mov
sti
inc
or
jecxz
push
call
nop
and
push
jb
push
mov
cli
stc
fsubrl
pop
in
inc
popa
xchg
ljmp
add
repz
data16
sbb
adc
fs
lods
mov
mull
mov
call
jmp
js
pushl
and
fldl
add
and
jno
sub
push
ss
mov
arpl
out
xlat
ds
int
out
roll
clc
or
push
xchg
rorb
or
rcr
jnp
fidivrs
xlat
pusha
pop
les
fsubs
sbb
in
ret
loopne
mov
lret
or
pop
repnz
and
clc
and
or
fists
loopne
js
or
scas
mov
aas
push
sub
cmpsb
push
pop
test
cmp
int
leave
cmp
pop
in
xchg
xchg
xchg
addr16
pop
ja
mov
mov
add
out
jo
popf
dec
dec
inc
int3
in
stc
aas
pop
out
cmc
xchg
je
cmpsb
jl
movsl
int
push
pushf
push
push
or
xchg
cmpsb
mov
imul
ror
scas
mov
mov
xor
lret
mov
push
jecxz
pop
ret
ss
xorb
rolb
cmc
jns
hlt
data16
mov
jecxz
sub
pop
and
pop
movsl
insb
pushf
adc
add
adc
icebp
arpl
cltd
fisubrs
in
ret
jno
lahf
cmp
push
rol
jmp
movsb
cmp
in
movsb
popl
jne
stos
cmc
and
iret
or
cmp
lock
jo
lret
or
movsb
mov
repz
aas
xchg
mov
mov
in
shll
std
loop
nop
ja
into
mov
xor
daa
pusha
sti
sbb
fbstp
xchg
cmpsb
adc
adc
cmp
dec
arpl
mov
or
push
jb
or
pop
fcomp
add
pop
push
jecxz
push
or
lods
jo
cwtl
inc
cmp
xchg
inc
xor
dec
xchg
outsl
xor
mov
fdivrl
cwtl
adc
shll
lock
stc
inc
jp
or
cmc
ret
out
sbb
jb
adc
shl
aad
jle
push
mov
inc
sub
test
inc
adc
call
push
cli
das
sub
adc
out
lods
aam
and
mov
subb
mov
not
out
mov
ss
pop
lods
sub
sbb
push
lret
pop
pop
mov
mov
add
mov
push
icebp
movsb
jno
nop
lock
stos
xor
pop
and
sti
cmpsb
das
inc
sub
add
jae
cmc
add
cmp
inc
sub
scas
lds
cli
and
mov
aam
mov
add
mov
in
dec
sub
sub
rcll
lret
add
frstor
dec
jp
add
fists
call
lods
loop
sarl
push
arpl
lock
clc
xchg
dec
fildll
popa
fmulp
js
cmc
shlb
gs
add
int
xor
stos
and
xchg
lds
out
pusha
scas
cmpsb
pop
pop
push
ja
xor
xchg
cs
jns
aaa
test
cmpsb
push
aaa
stc
sbb
dec
adc
lock
xchg
pop
imul
adc
loope
pop
pop
push
test
les
fldcw
adc
sub
out
jo
hlt
pushf
jmp
sub
cmc
scas
fnsave
pop
add
xchg
loop
mov
jmp
add
out
or
adc
xchg
or
enter
xchg
mov
jb
jmp
pop
adcl
jns
cmp
mov
pop
add
inc
pop
daa
xchg
mov
mov
std
mov
pusha
push
sub
sbb
adc
mov
sbb
in
movsb
out
cmpsb
shlb
rclb
out
movsl
or
data16
fidivrs
stos
mov
dec
lret
jge
add
dec
jmp
or
ret
test
es
push
out
and
rcrl
das
adc
fwait
inc
scas
stos
mov
and
jne
cmpb
jns
mov
loopne
in
mov
mov
mov
out
loopne
mov
dec
arpl
in
sbb
and
push
adc
loopne
push
insb
inc
cld
mov
fnstsw
sbb
pop
xor
ljmp
push
iret
jb
jmp
pop
ljmp
rcr
addr16
out
add
xor
jmp
jmp
adc
pop
sbb
push
mov
and
xor
ja
inc
and
sar
add
pop
pop
sbb
incl
sbb
sub
cmpsb
out
inc
adc
cld
rorb
jae
mov
sbb
shl
test
xor
dec
adc
push
xchg
out
jmp
jmp
scas
pop
sub
lret
jae
daa
lcall
stos
jnp
or
jb
adc
into
pop
adc
mov
add
pop
jmp
scas
jb
test
mov
mov
cltd
shr
cmp
inc
fidivs
mov
push
push
pop
iret
dec
ret
cmp
outsb
icebp
ds
ret
mov
cmp
jns
jl
cmpsb
mov
notl
mov
xlat
mov
or
pop
mov
std
sahf
mov
mov
cmp
mov
pop
imul
call
hlt
cmc
mov
and
ret
mov
loop
sahf
in
adc
ss
shlb
xchg
jle
xlat
dec
add
stos
mov
call
jmp
movl
ret
aam
loopne
cmp
jne
scas
jp
inc
sahf
aam
mov
pop
jmp
loopne
inc
inc
je
mov
and
push
xor
testl
cmc
call
xchg
daa
xchg
or
js
test
es
jge
fsubl
ljmp
or
xchg
mov
and
or
push
mov
xchg
and
adc
fists
in
dec
xor
jne
arpl
dec
xor
mov
pop
jne
mov
xchg
loopne,pn
mov
notl
mov
aad
hlt
lret
cs
jle
adc
mov
add
rol
pop
push
flds
cltd
mov
sub
fs
cmp
adc
sti
addr16
mov
sub
adcl
jns
cld
test
in
insl
in
jmp
cmpsb
xchg
in
pop
mov
pop
imul
or
pop
insl
pop
ljmp
lret
adc
addr16
mov
cs
dec
push
dec
jle
scas
insb
mov
orl
jecxz
cmp
sub
aas
test
push
sub
ss
cmp
scas
mov
ffree
sub
xor
and
lcall
inc
je
push
mov
js
es
xchg
je
aas
inc
pop
rol
sbb
jb
push
popf
mov
cld
and
lock
dec
add
cmp
push
leave
imul
test
dec
push
xchg
imul
frstor
orb
scas
pop
aad
mov
jo
jbe
mov
fstps
leave
and
data16
cmp
sub
sbb
arpl
or
les
mov
push
icebp
dec
adc
cs
sub
xchg
mov
mov
ds
jb
and
ja
and
dec
and
int
movsb
push
sbb
stc
repz
mov
dec
sub
loopne
and
stos
xchg
imul
cmpsb
or
stos
outsl
xchg
movsl
mov
js
mov
out
push
aas
lock
loop
mov
sbb
fisubs
addr16
lods
cmp
mov
out
loope
mov
mov
lea
pop
cmp
jne
ja
pop
push
or
scas
jg
push
lcall
pop
ss
fbstp
loope
outsl
mov
dec
and
xchg
add
sti
sbb
lret
push
xorb
js
mov
into
enter
scas
or
adc
fstps
jmp
mov
cmpsb
movlps
mov
cld
aam
mov
rcrl
ja
mov
daa
sar
je
subl
es
sub
mov
inc
imul
mov
and
sbb
push
sub
adc
in
shrb
fidivs
leave
jns
cmp
adc
rep
es
push
aaa
mov
or
faddl
mov
shlb
out
rclb
dec
in
filds
movsb
loop
jne
shll
jne
loopne
daa
jno
cmp
jl
js
mov
scas
cli
dec
sahf
xorl
cmpsl
mov
loop
mov
repz
add
mov
rorb
cmp
pop
jb
ljmp
adc
cmpsl
dec
cmc
into
inc
fdecstp
jle
ljmp
popa
lcall
xlat
movb
daa
xlat
cld
xchg
cmp
mov
sub
lea
jno
mov
mov
fisubs
iret
jns
jg
int
cmpsb
xchg
sbb
mov
jbe
scas
sbb
or
push
sti
xchg
scas
mov
out
insl
xchg
jo
jnp
mov
int3
test
cmpsl
inc
faddl
in
and
jge
sti
clc
pop
cmp
sarl
jecxz
sbb
xlat
push
jne
push
mov
cli
fwait
mov
popa
and
mov
pop
push
gs
adc
mov
ja
pushf
lahf
loopne
mov
cld
arpl
jmp
mov
fs
pop
and
pushf
or
loopne
ret
cmp
sbb
or
xor
out
into
pusha
shll
sti
divb
cmc
and
mul
xchg
fdivs
pop
setnp
cwtl
add
xor
lock
xor
cmp
mov
out
shll
lcall
mov
popa
jmp
in
outsl
xchg
sbb
adc
jne
pop
xor
push
jge
mov
push
pop
add
lret
je
sbb
arpl
jb
jecxz
call
fdivl
in
push
sub
or
arpl
ja
cld
xchg
sti
add
pop
rclb
negl
cmp
cmc
clc
enter
jne
sub
push
cltd
or
dec
mul
pop
fidivl
dec
imul
jno
lods
out
inc
jae
sahf
in
jp
add
cmp
jmp
dec
stos
call
leave
add
or
loopew
clc
iret
in
jmp
cmc
inc
adc
addb
mov
ret
xor
mov
pop
cli
neg
jno
imul
jns
cmp
pushf
enter
lcall
cmc
aaa
pop
je
add
push
shrb
fadds
fstp
jb
xchg
mov
arpl
dec
jne
jns
mov
gs
pop
ficomps
mov
mov
adcl
pop
es
dec
jp
push
mov
ds
sti
xor
jmp
mov
mov
pop
push
jae
in
push
outsl
add
fidivl
cmp
cs
repnz
and
push
push
jp
stos
or
out
sti
fnsave
sahf
mov
push
sub
sbbl
inc
fmull
lods
mov
mov
std
push
push
xchg
es
cmp
inc
fnsave
mov
mov
pop
dec
mov
push
pop
icebp
xchg
push
insb
leave
out
adc
xchg
sbb
leave
shrb
outsb
jecxz
scas
popa
std
inc
ljmp
ret
jns
in
cmc
pop
xor
cmp
pushf
in
sub
lahf
ud1
cld
pop
dec
outsl
pop
hlt
jbe
pop
fwait
scas
add
leave
cmc
test
ret
out
cmc
xor
iret
pop
jmp
jae
lock
jmp
leave
push
lret
testb
aaa
mov
xchg
sub
lcall
push
sub
jmp
orl
sbb
pusha
mov
xorl
push
xor
dec
and
and
mov
ljmp
mov
aaa
and
dec
pop
push
xor
xchg
inc
ja
lcall
pop
dec
xlat
pop
into
mov
lods
jns
sbb
sar
cmpl
xchg
xchg
xor
inc
pop
jne
cmp
xor
xor
and
push
mov
pop
push
stc
fwait
xor
mov
mov
jg
sarb
bound
xchg
sbb
int3
popf
fst
repz
jbe
int
es
outsb
stos
sub
imul
in
mov
jmp
cmpsb
lods
fadds
pop
imul
push
popa
cmp
stos
mov
outsb
test
rcrb
mov
mov
sub
fstpl
test
adc
js
cwtl
in
mov
dec
lock
cmp
jl
or
push
outsl
sbb
and
icebp
pop
lcall
insl
stos
cmc
xor
loopne
loope
mov
push
cmp
test
lea
das
sub
push
inc
jb
and
sbb
ret
fwait
pop
fimuls
mov
mov
or
hlt
mov
fnstcw
jg
fldl
cmp
lock
adcb
das
in
inc
push
inc
fwait
nop
mov
jb
xorl
push
ljmp
jmp
cld
jmp
pop
mov
adc
push
mov
push
inc
cmp
adc
mov
fistl
movsl
mov
xorb
lret
sub
xor
xchg
mov
xor
ja
movsb
daa
jl
imul
jl
xor
stos
cmpsb
fdivrs
dec
dec
sbb
out
xchg
mov
pusha
push
xor
mov
pop
cmp
int3
xor
mov
out
pop
cld
sub
jge
dec
xor
jb
mov
pop
xlat
adc
aas
mov
sub
jle
fst
push
sub
jg
js
into
fnstsw
mov
sbb
push
jle
push
push
mov
cmp
dec
lcall
adc
cld
test
or
pop
dec
js
std
pop
loope
pop
insb
inc
lret
sysenter
mov
scas
arpl
out
jb
js
pop
add
and
popa
jl
movsl
or
das
cli
lea
ds
pop
lcall
mov
or
push
push
push
mov
push
icebp
je
shrb
fidivs
fnstcw
add
outsb
push
out
add
dec
push
push
mov
notb
rcl
add
cmpsb
fmulp
mov
xor
leave
add
insl
test
jne
sbb
mov
test
sbb
adc
in
push
scas
xor
dec
fstl
sub
cli
repnz
jp
fld
shlb
sub
in
and
mov
and
and
icebp
shrl
out
shlb
add
xchg
mov
push
ret
lret
mov
clc
mov
jecxz
pop
lods
sub
add
or
orl
pop
data16
popa
pop
mov
fldl
jecxz
sbb
or
fstpl
mov
sar
mov
pop
push
lock
xchg
cmpsb
dec
xchg
test
in
xchg
hlt
shrb
cmc
lods
adc
cwtl
les
xchg
scas
sbb
lock
aam
test
lock
pop
test
test
mov
popa
dec
mov
and
mov
pop
and
push
movsl
and
mov
mov
add
aas
cmp
push
xor
out
jo
lock
pop
or
cmp
xor
cli
outsl
pop
adc
shlb
cs
daa
fnstenv
xor
sub
arpl
fnstsw
push
fstpt
xchg
hlt
cmp
out
je
out
out
or
adc
mov
xor
inc
pop
jne
pop
push
shr
lods
mov
frstor
pop
shlb
mov
mov
adc
push
mov
jmp
cmpsb
lcall
or
xchg
jecxz
sub
push
imul
push
add
jmp
and
scas
out
pop
cli
shl
sti
xlat
imul
stos
fnsave
ja
sti
cmc
cmp
jmp
inc
mov
dec
jmp
xor
sub
pop
ret
icebp
sarl
cmc
cmp
les
mov
fdivrp
repz
cmp
int
adc
cmc
imul
fcomp
adcl
push
add
xor
sbb
or
fisttpll
mov
push
or
mov
mov
cmpb
xlat
sti
cli
pop
mov
push
repz
or
mov
jns
ficompl
and
mov
push
mov
push
xlat
jno
shlb
xorb
mov
mov
test
pop
inc
pop
dec
ljmp
bound
cli
dec
pusha
pop
bnd
scas
pop
add
xchg
pop
sub
test
xor
cmp
ss
mov
inc
fistps
jge
lds
sarl
jmp
ss
and
mov
add
test
and
inc
test
mov
out
adc
shlb
das
xor
mov
inc
pop
das
int
fistl
ret
pushl
mov
dec
dec
adc
cmp
and
out
sub
mov
enter
cmc
dec
into
mov
adcl
sub
js
out
adc
jmp
add
xchg
dec
xor
out
sarl
inc
aam
cmp
faddp
ret
das
pop
jmp
jle
or
xlat
fisttpll
jbe
cmpsl
insl
jcxz
push
sub
test
or
enter
rorl
outsb
push
pop
mov
cs
xor
pop
clc
and
cmpsl
jnp
cmp
ljmp
jle
adc
jle
adc
inc
cld
or
push
mov
in
pop
cs
stos
pop
ficomps
jne
inc
pop
dec
cmp
rcrb
lock
jmp
clc
adcb
loopne
xor
mov
aad
cmp
or
pop
pop
aam
faddp
add
in
xchg
outsb
cmc
inc
iret
arpl
mov
ret
adc
adc
int
inc
mov
rcrl
icebp
adcl
mov
les
jb
mov
dec
mov
mov
xor
adc
ret
repz
std
or
shl
test
mov
adc
daa
xchg
es
lock
lret
stos
xchg
add
out
jb
sbb
adc
or
not
jb
fcoml
sub
mov
cmpsb
in
sbb
add
sbbl
add
mov
sbb
rolb
or
xor
std
aaa
in
mov
jp
jns
jne
cmpsb
sub
fs
fstpl
or
xor
adc
das
stc
lret
fimuls
imul
or
mov
xchg
fldl
or
cmc
sbb
outsl
add
xchg
out
mov
repz
xchg
adc
pop
mov
mov
loopne
test
jae
shll
cmpsl
mov
push
pop
sahf
or
push
mov
dec
scas
cmp
jne
loop
mov
pop
xor
outsl
jmp
sbb
mov
mov
dec
gs
add
test
fst
push
shll
stos
pop
cmpsl
push
aad
repnz
aas
fcomi
mov
lock
pop
fisubs
inc
cmp
xlat
inc
loope
int3
inc
add
and
inc
or
jge
pop
repz
ret
sub
mov
cmc
sub
jg
in
sbb
cltd
pop
xchg
sub
cmp
or
mov
jecxz
gs
mov
or
mov
insb
xor
sub
popf
pop
mov
adc
pop
xchg
dec
mov
loop
mov
jo
out
adc
xchg
pop
fsts
int
mov
push
cmpsl
lea
add
in
adc
repz
push
mov
cmp
subl
test
pusha
lock
adc
sarb
jne
jno
dec
movl
sahf
xor
cmc
mov
orb
sbb
and
shr
ljmp
xor
xchg
dec
mov
addr16
in
cmp
mov
adc
aas
xlat
shr
and
jbe
xchg
push
or
xor
mov
add
pop
cmp
mov
cmpsb
lret
lock
and
push
pop
ret
stc
outsl
pop
add
or
xorb
or
mov
adc
inc
cmp
adc
cmc
inc
test
mov
or
in
push
das
dec
stos
mov
dec
and
loope
xchg
xchg
push
mov
sub
mov
mov
arpl
push
pop
fistpl
push
cld
mov
neg
add
dec
mov
sbb
ret
sbbb
inc
push
arpl
nop
sub
hlt
sbb
incl
inc
sub
sahf
or
repnz
fisubrs
jmp
push
adcb
jae
in
adc
pop
pop
movsl
jecxz
mov
imul
and
push
jb
adc
mov
dec
clc
jnp
loopne
add
pop
mov
jmp
outsl
jb
jb
clc
cmc
imul
push
rorb
bound
mov
mov
std
dec
fldl
and
je
jecxz
sbb
xor
add
fisubl
rcll
push
mov
jb
arpl
divl
jno
scas
stos
pop
sti
in
and
je
mov
cmpsl
ja
or
out
leave
movsb
or
mov
sahf
fwait
clc
mov
lcall
fisubrs
mov
jp
pushf
xor
sahf
lret
dec
xor
insl
push
or
clc
sbb
xchg
pop
pop
xlat
addr16
int3
dec
cmpb
or
test
push
inc
jne
fisttpll
icebp
jecxz
fldcw
rcll
repnz
jae
adc
jg
imul
mov
jno
data16
xchg
mov
dec
xor
mov
xchg
mov
or
dec
mov
jb
aaa
cmp
jns
loope
mov
jmp
cmp
adc
sbb
out
mov
xor
nop
in
sbb
dec
mov
jo
push
dec
mov
push
out
pop
jbe
lods
push
call
adc
shrl
dec
insb
inc
test
cmp
stos
xor
hlt
push
inc
pop
scas
push
sbbl
loop
in
inc
dec
test
cli
xchg
shlb
cmp
mov
negl
mov
rcrb
mov
enter
sbb
xor
in
xchg
insb
xchg
xorb
jmp
mov
xlat
bound
dec
pop
inc
adcb
jne
sub
ja
out
adcl
in
repnz
jns
rorl
lret
sbbl
cmp
ret
shl
cmc
in
cmpsl
xchg
cmp
jmp
fisubs
push
push
ljmp
mov
or
out
jns
ret
cld
xlat
mov
icebp
cmpsl
subl
outsl
cmc
fbstp
out
loopne
ret
push
xchg
stos
pop
sahf
int3
les
mov
int3
fists
cltd
dec
ljmp
sbb
mov
jecxz
dec
and
fisttpll
push
insl
out
add
mov
leave
jle
lds
cltd
pushf
icebp
out
cltd
dec
or
push
pop
lahf
cltd
jnp
xchg
push
addr16
shll
fiadds
repz
jecxz
stc
pop
aaa
js
add
call
in
and
jmp
aaa
fsubrs
jns
movsb
mov
aam
movl
mov
xlat
lds
xlat
mov
sub
les
mov
call
jp,pt
mov
scas
jns
adc
insl
lods
shll
jmp
push
xor
pop
dec
inc
aas
xchg
rcll
cli
cmc
dec
lret
int3
pushf
icebp
xor
xor
repnz
or
adc
sbb
sub
cld
mov
subb
ja
cmc
push
mov
add
mov
pop
xor
movsb
scas
dec
jbe
add
lock
jo
cmc
lret
shl
push
mov
or
div
mov
push
in
pushf
mov
mov
int
scas
add
adc
xchg
loop
insl
cmpsb
push
int3
add
insl
imull
jne
cwtl
dec
mov
loopne
or
xchg
mov
jne
mov
fst
lock
push
dec
call
push
mov
and
in
test
in
stos
inc
addr16
data16
inc
fstpl
jb
dec
pop
or
dec
mov
aam
cli
and
imull
sub
push
fstl
dec
outsb
nop
jb
cmpsb
mov
scas
sti
jecxz
pop
push
leave
rorl
jne
dec
push
cmpsb
mov
cmp
lcall
sub
inc
in
push
inc
push
in
subb
jecxz
je
pop
fcoml
mov
mov
and
mov
sbb
jmp
cmc
adc
mov
pop
xlat
das
data16
mov
sbb
fisttpl
popf
popa
jbe
jp
hlt
push
int3
test
push
jns
xor
cltd
adc
in
inc
jae
mov
enter
push
lea
and
out
xchg
fisttpll
in
adc
pop
pop
ljmp
mov
jg
jno
in
ret
add
sbb
xchg
int3
dec
jl
mov
mov
orb
jp
cli
movsb
push
inc
sub
orb
ret
xor
inc
xchg
fucomi
js
xor
xor
push
jmp
cmp
pop
lock
icebp
push
jp
or
pop
adc
cmc
or
sahf
lahf
mov
out
js
and
mov
mov
ja
mov
icebp
mov
sub
cmp
ret
mov
pop
xchg
mov
mov
cmpsb
cmp
sti
jbe
cld
mov
adc
adc
cmp
pop
mov
push
in
mov
add
mov
nop
lea
or
jecxz
pop
mov
mov
adc
shl
arpl
hlt
inc
enter
jmp
lods
jmp
jmp
in
jmp
xchg
int
adc
lods
xorb
test
and
pop
clc
aam
orb
mov
pop
xchg
dec
lret
push
xorl
into
push
or
jle
mov
les
push
lret
mov
and
push
add
shll
and
and
bound
movsb
pop
outsb
jbe
xchg
cmp
inc
pop
ja
arpl
adc
pushf
fs
bound
in
pop
xorb
shl
pop
cmp
or
add
cmc
and
sbb
push
imul
sbb
push
addl
movl
stc
jmp
cs
mov
jae
lahf
shll
add
in
mov
fisttpll
dec
pop
lret
cli
or
sub
fs
jb
adc
mov
int3
pop
rcrl
adc
jp
sahf
movb
inc
dec
in
push
xor
push
jns
repz
cmp
inc
fistpll
add
jb
sbbl
add
pop
repnz
shlb
xor
and
add
into
out
adc
enter
push
pop
xchg
cmc
fidivrs
push
leave
sarl
pusha
mov
or
js
test
cmp
push
jns
stos
push
outsl
lock
aaa
jl
loope
push
popf
mov
cmp
pop
xchg
pushw
push
push
inc
in
popa
pop
mov
into
jmp
es
call
stos
push
mov
jle
push
movsb
dec
xor
inc
loopne
jbe
std
mov
call
dec
sbb
scas
loopne
pop
mov
out
pop
cmp
pop
cltd
insb
imul
or
cmp
rorb
fdivp
inc
jne
or
dec
adc
negl
jecxz
pop
inc
int
test
jecxz
cli
scas
scas
mov
outsb
rcl
mov
mov
mov
sbb
pusha
fsubr
mov
sbb
out
addr16
mov
into
cmp
cmp
ret
movsl
sti
dec
lret
outsl
or
rcrb
out
inc
mov
pop
enter
mov
push
das
jns
mov
jbe
je
cmp
dec
es
iret
sub
push
daa
mov
adc
dec
notb
mov
scas
mov
pushl
in
fwait
dec
outsb
mov
test
jp
dec
xchg
out
dec
sbb
adc
js
imul
and
jle
cmpsl
jb
xor
divb
loopne
repz
movsl
js
outsl
arpl
sbbb
pop
ja
rolb
mov
push
in
pop
or
sahf
popa
mov
out
nop
push
pop
pop
push
mov
inc
jp
push
imul
data16
inc
jg
out
mov
aaa
push
mov
repnz
inc
sub
pop
in
pop
fldl
cmpsb
pop
sub
or
sub
fwait
add
jge
adc
std
movsl
pusha
sahf
add
mov
and
aas
lock
and
dec
fucom
sbb
mov
cmpsb
mov
mov
xchg
push
sbb
jge
jb
repnz
cmpsb
sbb
jmp
sbb
fs
arpl
int3
jmp
push
in
xchg
loop
jno
in
mov
push
jecxz
mov
fwait
adc
mov
jnp
push
loop
in
mov
cltd
lahf
mov
xchg
mov
mov
das
or
push
cli
inc
pusha
xchg
xchg
inc
push
js
movsl
test
mov
scas
cmc
xlat
pop
enter
sub
jno
into
shl
cmpb
mov
and
cwtl
xchg
push
js
lods
jl
fidivrl
mov
scas
in
in
sbb
test
test
sub
ret
dec
xor
cmpsl
xchg
test
or
jae
sbbb
andb
xchg
imul
rcrb
jp
jo
xor
push
push
std
jp
dec
adcb
push
mov
pop
test
xor
xlat
shll
push
inc
add
ret
add
loope
aam
adc
mov
sub
cmc
mov
addr16
rorl
adc
push
lods
mov
out
je
or
push
lock
out
lret
sub
and
add
cmc
fidivrl
push
cmpb
jnp
jp
loope
fwait
test
add
in
sbb
js
test
scas
xchg
pop
sbb
outsl
jns
fldenv
jmp
and
add
sbb
sti
add
insb
jb
data16
pop
xchg
pminub
cwtl
push
js
adc
cli
dec
add
push
sub
add
mov
jl
mov
or
ret
lcall
mov
ljmp
jmp
stos
vmulpd
jge
mov
sbb
lret
testl
sar
js
cmp
push
in
mov
fs
stc
inc
pop
jne
das
jle
nop
mov
int
sub
jmp
cmc
test
dec
lock
pop
jbe
lcall
inc
lcall
in
imul
pop
mov
mov
sub
jb
stc
ja
ss
mov
js
shl
lods
xlat
std
cltd
jmp
neg
jecxz
cmp
adc
cmp
pop
mov
stos
adc
loope
stos
cmp
test
in
push
inc
mov
xchg
lret
cmp
add
pop
mov
xor
cli
jnp
cmc
xchg
adc
mov
lods
fs
ja
cmp
pushf
push
xchg
jl
ljmp
mov
test
mov
pop
stc
inc
mov
and
mov
dec
push
mov
repz
pop
pop
add
pushf
xor
or
scas
enter
xor
push
or
stc
data16
mov
dec
cmp
test
cmc
push
inc
pop
ret
jae
iret
ficoml
adc
and
shrb
push
cmc
lret
push
dec
pop
jg
mov
jg
clc
dec
testl
ffree
fnsave
lds
mov
dec
mov
lret
inc
jns
dec
push
adc
in
cmp
imul
fiaddl
pop
dec
xor
iret
pop
cmc
jae
and
inc
or
adc
mov
xor
mov
popf
into
adc
jge
pop
in
inc
fdiv
data16
jne
cmpsl
mov
out
or
mov
shlb
sbbb
push
js
xchg
dec
cmc
or
push
movsb
bound
jne
cmp
cmc
fbstp
iret
sbb
mov
insl
std
pop
mov
jo
and
mov
push
or
rol
add
mov
fiaddl
aad
movl
adc
dec
push
xchg
cmp
sti
lahf
syscall
insl
and
xchg
mov
fists
ja
jp
xchg
cltd
sub
int
cmc
clc
inc
and
jl
mov
jb
in
xor
in
shl
sti
dec
or
lret
addr16
cmp
nop
xlat
int3
stos
sahf
mov
pop
punpckhbw
imul
inc
into
repz
pop
test
std
fists
mov
aam
mov
jg
jecxz
ja
mulb
mov
sbb
stos
mov
jns
lahf
in
mov
sub
aaa
and
data16
fsubrl
pop
dec
or
insl
mov
pop
dec
push
imulb
and
sbb
mov
or
arpl
xchg
xor
jg
test
pop
jnp
push
xchg
and
out
mov
push
iret
ret
jge
fnsave
std
imul
mov
push
cwtl
mov
cld
das
inc
js
data16
sub
push
mov
mov
loopne
sbb
ljmp
js
mov
push
adc
in
es
xorb
in
mov
push
out
sti
sahf
inc
xchg
in
out
arpl
clc
sbb
mov
sahf
push
add
cltd
xor
popa
add
push
adcb
push
mov
std
jecxz
data16
arpl
insb
cmpsl
or
test
divb
arpl
mov
or
add
mov
pop
nop
cmp
mov
arpl
mov
fcos
inc
or
xor
repnz
dec
stos
dec
cmpsb
xor
fwait
clc
in
xchg
jns
push
fmull
cli
inc
pop
and
faddl
lock
push
jbe
test
and
pusha
test
sub
xor
sbb
test
int3
mov
cmc
jmp
and
scas
pushf
mov
adc
mov
pop
in
mov
pushf
dec
sub
or
push
fildl
cmp
imul
mov
test
and
mov
into
nop
fstps
cmp
mov
dec
fsts
jl
shlb
shll
scas
fdivrl
xor
sub
pop
xor
jae
dec
sub
lock
mov
or
push
or
push
xor
jp
dec
shl
fucomi
mov
jmp
push
add
push
nop
fsubl
gs
cmp
push
repz
and
and
jns
push
add
js
fdivr
pop
sahf
cmp
js
pop
xchg
mov
lock
shlb
add
or
mov
and
inc
pop
fstl
xor
cmpsb
or
les
inc
jecxz
adc
pop
stc
enter
out
jl
cmp
subb
or
add
sbb
scas
subl
push
push
pusha
in
and
int
mov
js
mov
je
rcr
icebp
dec
lret
lret
ljmp
xchg
cwtl
dec
shl
adc
or
insb
jo
loopne
gs
push
in
or
incl
lods
sub
mov
mov
mov
pop
jg
lods
mov
jns
je
mov
cld
leave
sbbl
jb
cmpsb
add
out
fimuls
xchg
mov
int
sub
jmp
lcall
int
std
push
enter
adc
dec
divl
cmc
push
dec
or
jne
xchg
sbb
fnstsw
xchg
jns
push
or
cmp
inc
popf
in
out
pop
sbb
fidivl
mov
insl
fcom
cmp
mov
jge
popa
shl
or
sub
icebp
pop
sbb
mov
cmp
mov
fbstp
mov
aaa
jmp
pop
mov
fcoml
pop
mov
mov
cmp
or
xchg
test
mov
pop
jecxz
inc
in
mov
stos
in
mov
mov
push
lock
mov
push
es
in
aaa
gs
shlb
jno
fldl
movsl
inc
cwtl
xor
xor
sahf
push
arpl
int3
xorl
xchg
subb
out
movsl
xchg
pop
lret
xchg
ja
cmp
xchg
movsb
test
push
jmp
fsts
or
jno
lock
or
inc
iret
shl
pushf
inc
loop
dec
ret
cmp
movsl
inc
mov
sbb
in
jmp
rclb
jns
in
fisttpll
mov
pushf
mov
push
xchg
das
xor
or
out
push
notb
pop
mov
rcrl
fldln2
les
push
sub
insl
add
loop
sbb
adcl
fcoms
xor
mov
jp
adc
rcrb
sbb
jge
ret
inc
mov
out
mov
add
in
pop
int3
adc
shlb
push
loope
push
pop
or
fucom
testb
pop
or
ret
jnp
xchg
and
push
sbb
jb
das
push
push
icebp
roll
sbb
rclb
cmp
sub
push
iret
pop
xlat
inc
xor
mov
cli
addr16
mov
movsl
or
dec
xor
lock
mov
mov
pop
jo
fisttpll
mul
dec
repz
cmp
jb
lods
xor
mov
pushf
push
push
mov
out
push
xor
push
xchg
xchg
mov
or
ss
adc
jae
cmpsb
mov
sub
add
mov
addr16
imul
fadds
dec
fidivs
lods
test
and
ficomps
push
push
dec
dec
cmp
dec
push
enter
bound
xchg
sarl
mov
cmpsb
xor
cli
and
mov
and
xor
jecxz
inc
sbb
push
jae
sub
lret
xchg
fsubrs
xchg
push
repz
push
ja
test
std
pop
jmp
jb
fwait
cmp
jae
wrmsr
xchg
push
mov
dec
push
fistl
sti
popa
mov
inc
lods
pushf
xlat
push
mov
dec
leave
add
fdivl
in
sub
dec
frstor
dec
push
dec
jb
cmc
dec
or
mov
test
lds
lea
repnz
rcrb
xchg
sti
call
xchg
sub
dec
push
inc
cmpsb
add
jg
into
xchg
mov
dec
orl
xchg
ret
jg
mov
fnstsw
mov
loopne
dec
xor
fcomi
xor
jbe
mov
pop
arpl
jecxz
cmp
in
testl
xor
scas
jb
pop
add
sarl
push
xor
sarb
jne
jl
rcrb
pop
or
int
cmp
imul
pop
outsb
mov
sti
or
inc
ret
stos
pop
jo
cmp
int
les
mov
pop
sbb
dec
lcall
jle
jns
scas
popa
pop
jmp
stos
dec
das
lcall
mov
cmpsb
pop
mov
pop
das
jecxz
xor
dec
in
aad
push
lock
dec
mov
or
je
mov
insl
xchg
popf
cltd
sbb
add
pop
addr16
enter
ljmp
inc
lods
or
lahf
pop
rorb
mov
sbb
xor
lret
mov
cmpl
or
mov
xchg
rcll
sub
fistl
mov
pop
or
cmp
stc
test
in
jne
lea
adc
xchg
dec
pushf
mov
sub
inc
and
mov
pop
mov
je
fisttpll
nop
pusha
inc
orb
jmp
push
pop
scas
push
lret
movsl
or
dec
jnp
cmpsb
cmc
popf
cmp
int
lcall
aaa
jns
adc
push
notb
or
test
stos
sti
outsl
rolb
cmp
push
sahf
sbb
int
dec
xor
cmc
mov
ret
pop
test
int
cmp
jmp
out
cmp
aaa
jl
in
sahf
jns
or
mov
xor
lahf
mov
mov
jbe
mov
xor
decl
inc
mov
cmp
pop
xor
xor
out
xor
imul
add
mov
add
lods
out
jb
fldl
ficomps
cmc
and
pop
sub
movsb
push
xchg
mov
adc
orl
and
jmp
push
mov
and
pop
pop
aam
mov
mov
adc
mov
lahf
adc
iret
lock
sub
lret
mov
sarl
mov
inc
pop
xchg
mov
add
cmp
xchg
mov
mov
xchg
aas
mov
mov
push
shl
aas
insl
jmp
xorb
xchg
cli
pop
fucomp
hlt
int
stc
mov
xchg
clc
stc
cmc
jmp
leave
dec
xchg
mov
mov
rcrb
mov
pop
shll
mov
adc
dec
popf
ljmp
subb
loop
fwait
add
lret
push
repz
and
outsb
je
jmp
in
repz
pop
mov
imul
cmpsb
dec
cmp
shl
into
push
hlt
bnd
scas
out
mov
pop
mov
out
mull
jle
jne
mov
addr16
cmp
repz
xor
sub
dec
fst
scas
pop
jns
jp
movsb
mov
arpl
stos
mov
sub
mov
sub
dec
outsl
xorl
jne
es
xor
mov
mov
push
fstl
ja
fnsave
outsb
mov
mov
adc
xor
or
push
xor
rorl
in
adc
push
xor
out
cli
mov
repz
cltd
jb
pop
cmp
cmp
lcall
fucomip
cli
push
stos
cmp
fists
gs
fmuls
shlb
aaa
or
sub
add
push
lcall
ljmp
cmp
dec
xor
insl
gs
test
faddl
rol
fisttpll
pop
inc
xchg
cmp
fcmovne
stos
pusha
cmpsl
dec
fldl
pop
xor
xor
and
in
movsb
mov
pop
js
in
fnstenv
or
dec
fldl
add
movsl
cwtl
add
cli
push
rclb
insl
jbe
pop
sbb
leave
or
xor
das
sbb
in
addr16
or
ds
filds
sbb
xor
jg
fst
repz
xchg
stos
jb
adc
or
push
lahf
popa
fldl
pusha
cmp
xor
es
push
xchg
push
jns
cmc
pusha
pop
js
add
inc
mov
pop
pop
jecxz
cltd
push
pop
test
push
mov
scas
dec
out
fsts
into
movsl
add
fdivrp
pushf
cli
cmpb
leave
and
jl
pop
mov
pop
test
sbb
in
jl
sub
leave
pop
es
inc
fs
retw
pop
mov
push
xchg
mov
fstpl
push
lods
insb
mov
inc
ljmp
xor
or
jbe
into
fisubrl
xchg
test
iret
pop
aas
leave
sahf
xor
add
push
jno
dec
xor
and
sahf
jns
sarl
fwait
sbb
jne
je
jecxz
repz
hlt
into
frstor
add
adc
popa
adc
inc
jle
fs
cmc
cwtl
jmp
js
push
sahf
mov
jb
scas
fsubr
scas
out
pop
inc
dec
rcll
cld
pop
push
mov
lcall
mov
mov
push
shlb
dec
lock
pushf
push
push
cwtl
sub
inc
jecxz
adc
sti
test
dec
pop
push
rolb
adc
sub
in
js
data16
cmp
ret
out
pop
sub
mov
jnp
xor
sub
stos
xor
std
push
int
push
and
xchg
inc
insl
mov
cmc
jmp
xchg
loop
jl
repnz
sbb
lret
sbb
sbb
inc
imulb
add
mov
repnz
adc
fadds
fs
test
nop
xchg
mov
xchg
sbbb
pop
punpckldq
jbe
cmp
lcall
adc
mov
push
cmc
and
jo
fnsave
je
sbb
mov
insl
xchg
jns
lret
ficomps
sub
aam
push
rolb
test
ja
gs
jne
mov
push
mov
pop
outsl
pop
mov
pop
rcr
test
xor
cli
rorb
jp
jne
xchg
xorb
imul
and
lock
in
xor
mov
bound
mov
jecxz
lahf
repz
xchg
mov
mov
lods
fcoms
shlb
add
xchg
jns
in
subb
out
fnstenv
movsb
ret
jmp
mov
lret
loop
mov
mov
xchg
out
repnz
jno
ss
pop
and
adc
cmpsb
cmp
mov
ss
mov
aam
sbb
bound
iret
dec
pushf
lahf
clc
sub
xor
xlat
push
scas
cltd
or
add
or
scas
fstpl
icebp
cmp
mov
popf
push
stc
and
or
outsb
outsb
adc
mov
scas
push
div
rcrb
or
dec
pop
pop
dec
rolb
mov
jo
in
inc
out
push
ficoml
jle
popa
aaa
lds
ret
dec
mov
fstl
jne
sub
fcoms
fsts
xchg
mov
mov
inc
fmull
sbb
push
rcrb
outsl
stc
xor
jae
xchg
popa
dec
js
jge
mov
mov
cmpsb
arpl
int3
xor
xor
mov
shrl
rclb
rcrb
je
add
push
adc
out
jns
movsl
data16
das
cmc
mov
jecxz
mulb
mov
aas
pop
add
and
mov
cmc
mov
inc
insl
mov
mov
faddl
jecxz
movsb
mov
add
jg
mov
jbe
aas
dec
rcrb
addr16
fnsave
cmp
or
mov
xor
push
xor
ja
cmc
mov
mov
jbe
pop
out
ret
aaa
and
daa
out
pop
jbe
aas
insb
fst
cmp
sti
inc
push
cltd
jns
cmpb
cs
mov
loope
into
inc
fwait
jecxz
push
fidivl
test
and
pop
mov
push
leave
sahf
pushf
mov
mov
fxch
insl
fidivs
cmpb
jp
or
mov
and
std
mov
out
inc
xchg
add
stc
jns
pop
push
push
sub
add
push
xchg
repz
add
jge
test
repnz
lcall
xor
push
mov
test
data16
leave
add
shlb
aad
sahf
adc
ret
imul
aas
lahf
pop
mov
mov
sub
stc
or
jnp
jb
in
add
xchg
cmp
xchg
nop
ret
fnstenv
mov
pop
or
cmc
jnp
or
sbb
jns
repnz
push
xor
or
xlat
xchg
jbe
push
loope
insl
adc
sub
or
stc
clc
stc
std
shrl
add
sarl
sbb
sbb
mov
mov
mov
or
push
xor
dec
adc
pop
lret
sbb
jns
fstpt
xor
out
jno
js
outsl
jnp
dec
jns
mov
stos
fisubrl
sub
int3
jecxz
cmc
stc
jle
sbb
adc
hlt
add
pop
loope
mov
lods
adc
push
mov
cmp
cmpsl
in
cmp
cld
mov
adc
pushf
jae
outsl
cmpsl
dec
imul
pop
mov
dec
fnsave
mov
inc
jbe
push
push
cmpsb
sbb
and
jecxz
insl
call
andb
fdiv
push
lock
adc
xchg
dec
scas
ret
mov
lds
sarb
xlat
mov
pop
inc
rorb
push
xor
or
bound
mov
int
in
popa
sub
leave
sub
fidivs
int3
out
mov
jmp
jl
or
pop
inc
or
xchg
test
stc
scas
jno
cmc
stos
dec
cmpsl
mov
jns
push
notl
imul
cltd
or
xchg
mov
sub
lods
sbb
test
test
mov
pop
or
popa
loope
mov
filds
or
mov
pop
insb
in
xor
gs
icebp
outsl
mov
repz
fdivl
fstp
pop
mov
lret
mov
mov
sti
call
pop
mov
mov
frstor
in
mov
or
fsts
dec
mov
xchg
gs
jb
leave
jbe
cmp
mov
mov
dec
stc
int3
imul
or
or
int
lods
adc
adc
sbb
nop
aam
sti
jae
and
mov
rclb
ret
ror
sahf
insl
mov
lret
mov
and
mov
jp
mov
fisttpll
dec
jb
movsb
dec
pusha
push
mov
stos
loopne
imul
mov
gs
popf
jb
neg
xchg
push
dec
inc
xchg
mov
push
mov
push
xor
sarb
test
sarb
sbb
outsb
shll
fucomp
inc
fistpll
add
inc
xchg
xorb
sti
xlat
setle
cmpsb
pop
in
jo
andl
push
cmpsb
pop
in
jmp
int3
xor
push
xlat
jnp
mov
das
ror
inc
aaa
add
mov
cmpsl
movsb
iret
cmp
fnstcw
cmpsl
xor
bnd
xchg
imul
ja
cmc
imul
movsl
cli
aam
or
sbb
in
or
xor
sub
push
cmp
adc
movl
loopne
cmp
ds
in
aas
dec
pop
cmpsb
mov
outsl
sbb
dec
js
mov
pop
and
aaa
dec
cmc
rcr
imul
cmpsl
sahf
ja
add
or
shlb
inc
pop
cmc
scas
lock
xor
mov
pop
inc
cmpsb
fs
fst
insl
loope
insb
jnp
aaa
push
ret
push
jb
and
add
and
mov
pop
pop
in
repz
in
js
insl
sbb
dec
mov
rep
cmc
out
leave
pop
adc
movsl
push
mov
and
fsubl
pop
jae
cmc
in
mov
cmp
inc
jne
pop
cmp
lret
popa
and
imull
stc
push
xchg
inc
mov
mov
out
es
jb
add
or
mov
fcompl
mov
jns
ja
add
arpl
dec
out
jbe
lahf
daa
jne
dec
mov
inc
clc
aaa
loope
scas
add
push
jp
loop
ret
stc
xchg
push
pop
shlb
in
pop
push
push
lcall
loopne
leave
lods
mov
cmp
push
lcall
pop
test
cmp
cmc
les
adcl
fwait
push
sub
mov
pop
pop
fidivs
and
jo
add
add
sbb
adc
push
jp
pusha
stos
jp
scas
add
sbb
push
xchg
cld
pop
sbb
xchg
scas
in
pop
aaa
jle
xor
dec
mov
push
xor
adc
push
in
packuswb
jbe
in
adc
sub
hlt
addb
stos
lcall
and
fucomi
push
lahf
xchg
lea
loope
clc
aam
cmc
mov
cmp
add
cmp
mov
icebp
xchg
mov
jecxz
faddl
inc
int
out
lret
ret
cmp
jb
pop
bound
shr
ljmp
and
sub
dec
xchg
fistpl
cmc
mov
mov
mov
cmp
cmp
or
mov
std
sub
fistpll
sbb
add
fsubs
xchg
mov
aaa
and
lods
cmc
ffreep
mov
cmp
xor
push
repnz
lcall
dec
lock
test
cmp
test
aaa
adc
repnz
sbb
stos
push
aad
movsb
jno
adc
ja
cmc
je
mov
ja
xlat
imul
and
and
mov
inc
pop
cld
jo
mov
lods
and
ss
inc
popa
dec
and
mov
inc
dec
push
xor
xchg
mov
std
or
stos
mov
inc
cmp
adc
pop
sti
shll
adc
fsubrl
stos
loope
mov
in
cmp
pop
ret
jecxz
mov
fildll
int
push
jne
rcll
mov
cmp
adc
fs
xor
mov
jp
adc
ret
sbb
cld
cmpsw
out
lret
fucomi
mov
mov
ja
xchg
pop
jmp
jecxz
push
int
add
lods
dec
cwtl
out
lret
xlat
xchg
mov
sub
push
sub
add
push
push
add
cmp
add
cmp
in
dec
in
out
jae
add
rorb
jmp
dec
mov
fistps
cmp
mov
xchg
sbb
dec
mov
add
mov
sti
sub
xor
sub
addr16
pop
sbbb
and
jo
mov
adcl
cmp
ljmp
push
sub
cmp
lret
xor
and
lret
cmc
subb
mov
xor
dec
lods
or
jne
pop
xchg
idivl
leave
stos
jne
dec
and
jb
push
cwtl
jecxz
mov
bound
pop
mov
das
mov
xchg
out
xchg
sub
clc
and
mov
add
cld
push
inc
jge
cmp
cmpsb
xor
cwtl
call
add
cmc
popa
push
daa
rolb
jno
imul
in
nop
les
pusha
add
cwtl
lcall
xor
hlt
lret
jo
cmpsl
jmp
repnz
lock
outsb
iret
cmpsl
mov
dec
pop
pop
mov
jae
idivl
loop
cmp
aaa
push
repz
imul
lock
inc
pushf
rclb
icebp
rclb
xchg
jno
dec
cmc
mov
lret
lds
mov
xor
fcomps
out
pop
cmc
add
sbb
push
insl
nop
int3
add
negb
mov
fcoml
mov
pop
mov
jb
fucom
xchg
arpl
mov
cmp
in
cmpsb
push
pop
outsl
rolb
cmp
pop
xor
xor
xlat
fs
pop
sbb
push
in
loopne
stos
cmc
mov
or
xor
cltd
add
out
jmp
xchg
xchg
mov
int
jbe
adc
cmc
sub
cmp
out
loope
cs
xchg
cmc
mov
std
adc
or
divb
aaa
xor
insl
arpl
xchg
imul
insl
jg
and
sbb
fsubr
sbb
fiadds
lods
cmp
out
adc
in
jo
push
dec
mov
or
sbb
imul
fwait
push
fwait
mov
and
cmpsb
pop
fst
mov
xchg
mov
pop
ficomps
pushf
push
sbb
int
stos
sub
in
xor
sbb
aam
gs
push
xor
movsb
popa
pop
loop
or
bnd
cmp
xorb
cmc
or
sub
dec
aam
lsl
dec
push
lods
xor
shll
and
pop
retw
aaa
sarl
stos
daa
mov
cmpl
cmp
inc
insl
lret
mov
punpckhdq
dec
in
fisttpll
xor
xchg
mov
jecxz
pop
add
xor
ficoms
and
or
pop
out
je
fstps
sub
or
mov
fsubl
xor
lea
jp
xchg
jg
adc
jns
push
cs
sbb
aaa
mov
int3
jecxz
not
push
mov
dec
xor
data16
xorb
and
sar
imul
roll
pop
lock
mov
sahf
jb
mull
iret
aaa
push
insl
ret
sub
inc
inc
jecxz
dec
ljmp
enter
lcall
xlat
sub
js
insl
mov
push
test
sbb
mov
stc
int
fldt
mov
in
popa
or
cwtl
ss
sbb
push
mov
push
lret
les
fadd
mov
imul
test
mov
lret
xchg
xor
dec
ss
outsb
and
rcrb
in
jle
setae
int
adc
ja
push
fstp
out
xor
call
jae
cmc
xor
mov
pusha
cld
stc
inc
xchg
and
cmpsb
pop
dec
jmp
movsb
jmp
ret
aaa
jo
loop
sti
add
add
lea
mov
movb
jl
fmull
mov
sbb
xchg
push
ret
fiaddl
cmc
jecxz
or
xor
sbbl
xchg
jo
push
jne
out
pop
jbe
pop
pusha
push
aas
fldl
xchg
mov
out
bound
rolb
cmpsl
xor
push
xchg
push
sub
cmp
stos
int3
mov
mov
push
mov
daa
mov
cmp
mov
sub
test
push
mov
cmpsb
ret
in
jg
fs
fstl
lcall
dec
add
sarb
fwait
sbb
push
jp
sbb
pop
nop
inc
xor
mov
jbe
stos
xchg
sbbl
ja
and
dec
push
fs
sub
add
nop
cmp
movsb
inc
out
sar
jmp
dec
in
xor
or
test
fnsave
and
imul
std
rcrb
and
or
cmp
jle
cmp
adc
mov
ret
dec
add
into
mov
mov
jl
adc
adc
mov
fnstcw
mov
jmp
out
pop
loope
test
jge
mov
stc
data16
insl
sbb
js
xchg
inc
mov
inc
cmc
sub
cmp
test
mov
call
in
pusha
inc
or
dec
ret
sbb
push
divb
repnz
ljmp
mov
mov
enter
fdivl
movb
dec
pop
arpl
bound
dec
push
es
and
jno
frstor
repz
or
jecxz
ffreep
sbb
mov
xor
jo
sbb
loopne
or
arpl
cli
int3
sub
dec
leave
sub
push
push
gs
imul
push
jmp
ja
es
in
push
mov
mov
xchg
jns
pop
push
inc
in
shl
mov
mov
mov
jno
imul
ja
popa
add
add
mov
lret
cmpsb
repnz
add
jecxz
sub
push
imul
cmp
pop
data16
cmp
mov
mov
mov
sbb
dec
fnstsw
icebp
mov
inc
shll
lds
enter
je
ss
in
cmp
adc
adc
jbe
fisubl
pop
and
lcall
mov
mov
pop
and
mov
ja
xor
stos
decb
int3
test
shlb
mov
popa
and
sub
sbb
jb
lcall
mov
jno
ja
in
test
xor
aas
or
jne
adc
mov
sub
jge
xor
jecxz
push
cmc
lock
scas
arpl
add
and
or
xor
in
sbb
fstps
outsl
int
dec
aaa
notb
or
lahf
movsb
dec
push
mov
sbb
or
mov
popa
xor
imul
call
movsl
pop
inc
sub
fstl
sti
cmp
mov
sbb
mov
push
int
or
add
shl
push
outsl
andb
pop
iret
and
negl
ja
jp
pop
jmp
int3
in
cltd
shlb
and
gs
pop
dec
notb
cmp
test
insb
les
sub
scas
and
xchg
dec
xchg
cmp
cli
loop
cmp
imul
mov
insl
lahf
lods
push
xor
icebp
jbe
mov
pop
pop
jg
negl
mov
xchg
pop
loope
lea
xor
loopne
js
push
icebp
aas
ficompl
lock
xor
sbb
frstor
cli
sbb
enter
and
icebp
and
lock
add
js
filds
scas
jne
lock
sarl
lcall
leave
mov
push
data16
mov
push
mov
lods
xchg
add
or
cltd
cmpsl
cmp
add
fistps
mov
ret
xor
bound
bound
sbbb
test
dec
es
test
dec
outsl
push
jecxz
repnz
xrelease
cmp
out
inc
mov
in
pop
mov
xor
lods
lods
aad
jne
ds
xchg
bound
dec
sub
jne
aaa
pop
lods
push
xchg
cltd
jle
add
sbbl
cmc
loop
iret
shl
mov
jle
mov
ja
not
mov
push
mov
sub
mov
and
fidivs
stos
loop
xor
icebp
ds
add
arpl
push
repz
ljmp
shl
mov
sti
sarl
stc
cmp
scas
mov
sahf
push
in
cld
pop
push
lock
or
test
shlb
mov
in
cmpsb
mov
test
call
test
pop
mov
jecxz
mov
xor
push
push
std
and
iret
shlb
pop
fs
xchg
pop
jae
in
sub
adc
popa
mov
or
arpl
cmc
mov
es
cmp
pop
in
pushf
cli
jo
jbe
or
jmp
xlat
or
and
mov
int3
lds
and
lods
test
subl
adc
adc
mov
fildl
imul
shrb
test
push
cmp
jmp
inc
inc
in
sbb
in
xchg
imul
fldl
mov
pop
in
add
or
arpl
xchg
loop
or
xchg
cmp
lret
insb
jne
in
pop
shlb
xor
add
ret
xorb
into
inc
mov
pop
iret
cmp
int3
jne
mov
push
mov
pop
lds
mov
sbbl
push
mov
int3
nop
mov
jg
cmpsl
cmp
xor
fisubs
mov
and
mov
sbb
inc
or
fwait
and
fstp
scas
insl
in
xor
adc
cld
mov
ret
loope
out
fists
dec
in
cmc
rolb
mov
jmp
repz
xor
push
jb
in
lret
and
and
ljmp
mov
rcrl
in
sub
imul
ss
mov
mov
pop
leave
mov
xor
loopne
dec
ja
repz
mov
es
gs
sub
out
jb
popa
scas
pop
xor
jle
jp
xchg
data16
xchg
js
rorl
ds
sbb
xchg
mov
inc
stos
mov
cmp
ret
imul
push
fs
outsl
cld
inc
add
in
gs
pushl
inc
test
lods
inc
fstpl
fmul
sub
mov
cmc
push
or
adc
dec
push
mov
adc
stos
notl
add
mov
clc
mov
int3
fldenv
push
imul
in
addr16
mov
sub
dec
dec
fstpl
fdivl
cltd
push
out
and
jbe
nop
data16
lods
jmp
xchg
inc
stos
xor
nop
and
xor
data16
loope
push
push
mov
movsb
mov
arpl
leave
insl
in
jp
cmp
int
int
js
inc
sbb
cmp
repz
add
cmpsb
fsubs
icebp
cld
dec
hlt
adc
dec
pop
pop
shlb
nop
sbb
xchg
add
hlt
rorl
push
enter
cmp
add
mov
aas
outsb
or
push
cld
fimuls
xor
xchg
pop
jne
jo
jne
dec
mov
ja
jp
icebp
xlat
sbb
addl
adc
dec
sbb
cmc
and
lret
mov
frstor
stos
je
dec
mov
mull
mov
adc
inc
out
mov
cmp
mov
shrb
jp
jns
cmpsl
jns
ja
sub
inc
cltd
mov
push
push
mov
mov
pop
mov
cmc
loope
flds
subb
xchg
pop
add
cmp
sti
pop
add
imul
loope
lods
mov
cmpsl
push
xchg
decl
xorl
clc
inc
popa
push
in
gs
add
imul
js
sbb
adc
stos
sub
cld
xlat
xor
inc
fadd
xchg
loope
xchg
pop
jle
pop
test
jne
mov
sbb
clc
stc
addb
sub
hlt
sub
mov
fdivrl
pop
inc
mov
pop
fists
pop
adc
iret
cmpsl
or
sbb
jecxz
inc
pop
fsts
fs
mov
mov
sub
xchg
xor
jnp
cmc
bound
sbb
loopne
popa
sbb
rcr
sti
incl
or
sub
xchg
jb
push
js
jb
jnp
and
iret
mov
add
mov
and
insl
aas
in
inc
popf
roll
in
ds
jmp
cmp
mov
mov
std
xor
shr
sti
sbb
cmp
push
or
std
inc
mov
push
add
mov
mov
popf
mov
in
or
in
lcall
xchg
inc
fnsave
iret
loop
int
cmpsb
xor
test
ja
jp
jb
addr16
mov
and
sub
movl
pop
mov
filds
wbinvd
pop
in
mov
outsb
std
and
int3
sub
fisubrl
xor
arpl
cmp
push
xor
and
or
push
je
repnz
les
xlat
jns
xchg
pop
mov
sbbb
iret
cmp
test
pop
mov
ret
scas
sbb
push
xchg
pop
in
cmpsb
ret
test
pop
jb
xchg
cmp
fstpl
lds
pop
shll
pop
out
insl
fsts
pop
lods
jb
lcall
insl
in
scas
jmp
leave
fisubl
fs
aaa
movsl
push
cmp
repnz
cmc
xchg
lcall
mov
insl
mov
out
call
gs
test
orb
cmc
sub
test
pcmpgtb
ds
mov
aaa
data16
in
mov
in
mull
pop
mov
mov
fs
push
into
jb
ljmp
and
in
imul
popa
rorl
enter
push
pop
mov
mov
aaa
cmc
mov
add
xchg
cmp
xchg
ret
insb
mov
in
and
and
push
fistl
mov
bound
leave
shrl
dec
adc
cwtl
lcall
mov
icebp
mov
mov
mov
inc
testl
and
add
lret
pop
cmp
ds
outsb
test
dec
sbb
lret
test
dec
lea
pop
pop
dec
add
mov
xchg
mov
mov
cli
fadd
iret
pop
push
xchg
aad
mov
cmpsb
and
jmp
push
pop
adc
mov
test
int
out
repz
cmpsb
push
dec
pop
add
pop
jne
roll
fucomi
xor
out
xor
mov
xor
push
mov
xchg
mov
insl
mov
lods
ret
repz
lea
or
arpl
outsb
push
sarb
cmp
ljmp
and
pop
loope
mov
insb
adc
xchg
push
faddp
mov
std
fwait
mov
out
adc
ja
addr16
or
fsubrl
push
div
jno
push
inc
sub
push
rorb
insl
fisubs
xor
sub
mov
mov
lods
into
idivb
dec
mov
xchg
das
imul
icebp
mov
lret
testb
daa
cmpsb
ljmp
dec
fstpl
xchg
arpl
into
js
cmpb
shrb
fnstenv
dec
test
aas
jae
ret
xlat
or
imul
push
add
jbe
arpl
shl
lea
cltd
dec
in
mov
cmpsl
add
adc
push
cld
stos
lock
out
mov
popa
imul
stc
pop
arpl
aas
pop
andb
xchg
and
inc
or
mov
fwait
sbb
jns
inc
dec
add
jno
mov
jmp
ss
add
lock
or
les
push
std
mov
pop
adc
pop
aas
adc
cmpsb
in
mov
mov
in
data16
mov
add
imul
mov
or
xor
outsl
add
mov
shrb
xchg
xor
dec
jae
cmc
add
cltd
shlb
cmpsl
cmp
pop
fwait
hlt
xchg
lcall
je
in
lahf
xchg
mov
cmp
sub
outsb
enter
push
fwait
jle
out
outsb
mov
lcall
cmp
and
push
push
dec
cwtl
sub
clc
insl
pop
xchg
xchg
or
scas
or
ret
adc
faddl
decl
mov
js
test
and
cmp
lea
cmp
add
jbe
imulb
outsl
divb
frstor
jae
lock
insl
xchg
mov
push
out
jmp
dec
outsl
inc
in
push
repz
or
test
mov
pop
add
mov
dec
mov
cmc
nop
jbe
xor
push
mov
repz
aas
pop
out
jne
xor
jp
addr16
fistl
sub
push
mov
jmp
mov
fbstp
xor
cmpsb
jmp
cmc
push
lcall
test
mov
test
mov
fs
push
pop
and
dec
in
ficoml
add
push
jecxz
jecxz
and
cmp
jnp
sbb
repnz
xorb
dec
ja
or
push
xchg
mov
lds
fsubrl
js
out
daa
imul
dec
push
mov
arpl
cmc
movsb
into
hlt
in
push
in
sub
ljmp
lds
dec
jo
add
cld
repz
testb
jmp
fistpll
out
loop
stos
cmc
bound
xchg
outsl
xchg
loopne
lock
push
ja
adc
or
lock
jle
loopne
add
inc
mov
jecxz
cs
xchg
cmpb
pop
sub
cld
mov
es
push
bound
xlat
cld
dec
es
ljmp
and
adc
sub
mov
and
and
ss
popf
and
ficoml
pop
roll
fs
cmc
adc
mov
es
fstl
mov
cltd
pop
xchg
mov
mov
in
lods
dec
or
loop
add
cmpb
nop
and
shr
jns
in
lcall
push
dec
mov
lock
iret
inc
adc
leave
sahf
lods
int3
repz
push
jle
sub
loop
mov
cmpb
repz
cwtl
jl
cld
das
cmpsl
cmp
push
in
in
cmp
ss
sub
jecxz
jbe
pusha
dec
rcll
or
popl
dec
cmp
add
push
aaa
cld
mov
mov
mov
sub
sti
xor
fldl
jns
fdivr
sbb
shl
xor
cmp
inc
repz
pop
fwait
in
add
add
out
negb
pop
inc
pop
dec
int
rorl
inc
sbb
jo
mov
pop
testl
into
insb
sbb
pop
pop
lret
icebp
in
int
mov
fisttpll
jo
das
lods
push
sbb
outsb
mov
push
fistl
test
jb
and
sbb
pop
cltd
push
cs
enter
nop
fbld
mov
mov
dec
jno
pop
mov
cltd
jl
mov
jb
cmp
inc
push
int
repz
cld
adc
iret
arpl
push
mov
jmp
pop
sub
insl
pop
pop
push
push
cmpsl
adc
mov
xchg
mov
movsl
dec
outsb
sub
fstp
add
loop
ss
sti
enter
and
movsl
xchg
mov
movsl
lret
jb
and
push
adc
in
loope
out
adc
jmp
cmc
enter
adc
and
or
xor
lcall
out
mov
and
out
popa
adc
push
ret
jecxz
divb
jp
movsb
shll
push
mov
dec
data16
mov
xchg
subb
xor
aam
cmp
sbb
ja
mov
outsl
out
lahf
jae
test
cli
jle
fstl
lea
int
push
push
sub
mov
xchg
jecxz
fsubrs
ljmp
scas
imul
sahf
ja
mov
popa
jmp
push
jg
jns
out
dec
push
push
subb
or
xchg
adc
fstl
dec
fdivrp
arpl
aas
rolb
mov
sbb
mov
xchg
stc
dec
xor
push
add
sub
call
push
xor
testb
cld
inc
cmp
xchg
frstor
lods
loop
mov
addr16
mov
lock
ret
jne
xor
inc
inc
cmpsb
mov
cmp
lock
cld
pop
sbb
cmpb
test
mov
subl
jne
nop
xchg
fwait
mov
push
je
jbe
das
ret
pop
xchg
add
imulb
or
add
sarl
std
insb
scas
adc
mov
mov
inc
lcall
gs
in
ret
inc
cmp
pop
cmp
xchg
cmc
xor
lock
dec
push
mov
push
sub
lret
call
sti
lret
jge
dec
cltd
fs
jnp
insl
jae
jle
xchg
cmp
and
add
sub
push
mov
mov
test
sbb
adc
adcb
xchg
aam
mov
shlb
test
cmpsl
mov
jp
mov
lock
jp
test
push
jns
mov
sbb
cmpsl
lret
or
mov
add
outsl
imul
adcb
pop
hlt
inc
fstpl
mov
mov
fistpl
nop
jp
out
mov
loopne
push
xor
insb
movsl
test
lcall
test
push
aas
pop
cmp
mov
jne
jo
std
add
shrb
jns
fwait
jne
hlt
push
adc
inc
out
sub
cltd
mov
insl
pop
mov
ret
jecxz
scas
fidivrl
pop
push
sahf
jbe
inc
and
jg
ja
mov
sbb
inc
rorb
mov
and
mov
dec
mov
adc
jmp
data16
push
in
popa
lahf
cmc
les
js
das
outsb
enter
push
pop
sbb
cmpsl
fwait
shrb
xchg
int3
pop
sub
xlat
and
push
push
or
mov
les
lret
negl
sub
fldl
frstor
sub
or
dec
gs
jno
aaa
rorl
pop
jne
loopne
xchg
and
and
mov
mov
mov
add
mov
adc
and
ljmp
cmc
adc
sbb
out
fwait
loopne
xor
fisttpll
aas
pop
or
lret
in
js
inc
cli
cmpsb
cmp
loopne
pop
jp
mov
mov
cltd
int3
lock
pop
mov
ja
ja
or
add
push
lock
stos
call
shrl
xchg
and
add
xor
fwait
loope
pop
mov
sbb
push
mov
xchg
jecxz
and
movsb
loopne
out
add
add
adc
pushf
push
repz
mov
cld
test
fnsave
fs
clc
cmc
dec
ret
scas
sub
pop
sbb
mov
popf
inc
mov
lock
mov
addr16
lods
test
arpl
aam
push
push
push
in
mov
jecxz
imul
icebp
lea
frstor
xchg
inc
in
jmp
stc
int3
fwait
int
or
mov
xlat
mov
call
mov
cmp
mov
inc
cmpsl
adc
and
jnp
mov
scas
mov
dec
mov
fcmovbe
jb
cli
shrl
mov
push
dec
je
imul
sbb
test
sub
subl
sbb
sbb
jp
xchg
mov
aas
mov
mov
sarb
sbb
repnz
pop
pop
xlat
xchg
ret
and
ljmp
dec
iret
jge
rcll
push
movsl
cmp
jmp
adc
or
test
adc
rorl
push
shlb
stos
arpl
lods
aad
in
adc
addb
stos
mov
cmc
ljmp
ret
xor
sbb
mov
out
sub
push
imul
fwait
mov
xchg
and
fidivl
add
in
mov
scas
mov
jns
xchg
divb
jbe
cmp
je
fstl
adcb
adc
xchg
xor
enter
adc
sbb
mov
jb
jp
add
cmpl
repz
cmc
push
jne
lret
cli
js
xchg
or
xlat
dec
mov
scas
mov
aam
add
movsl
test
sbb
inc
test
es
bound
test
mov
jae
shl
std
or
jne
jge
or
push
inc
frstor
push
fimuls
cwtl
aad
scas
add
popa
push
data16
iret
push
loope
push
push
fucom
push
push
dec
inc
icebp
int
and
movb
out
fstl
jne
dec
adc
add
sbb
add
enter
sbb
lds
jne
js
stos
cmp
mov
orl
xchg
jle
sub
push
ljmp
dec
je
mov
xchg
dec
in
pop
or
xchg
adc
push
imul
int
pushf
sarl
icebp
xlat
pop
jb
in
lock
andl
lcall
leave
lods
aad
out
cvtps2pd
inc
adc
idivl
inc
pop
inc
or
pop
imul
test
and
popf
insb
jb
cli
in
xchg
adc
sbb
cmc
mov
push
adc
and
add
shll
jo
push
and
mov
fstpl
outsb
jb
mov
mov
shrb
clc
dec
out
sub
lods
int3
repz
jp
negb
jecxz
pop
sub
js
xchg
lock
mov
push
loope
pop
xor
jne
fs
push
in
ds
cld
xchg
lock
add
mov
aam
mov
add
in
cmpsb
push
out
daa
lods
push
inc
fmull
inc
jne
insl
adcb
bound
cmpsl
jb
loopne
das
out
add
jecxz
mov
in
push
push
mov
xchg
in
sti
int3
adc
push
and
push
adc
mov
int3
movsb
mov
lods
pop
push
fwait
jp
shlb
cmc
outsb
pop
sub
leave
dec
bound
jge
jae
cmc
dec
aam
sub
rcrb
inc
popf
cli
into
add
shr
push
repz
pop
mov
aaa
lods
inc
jmp
push
jmp
lahf
fldl
rclb
xlat
jne
adc
mov
mov
out
dec
incl
mov
stos
pop
cli
fcoms
fldl
out
lock
cmc
jb
add
stc
imull
shll
mov
inc
adc
lahf
loop
addl
outsl
popf
loopne
push
and
add
call
dec
pop
fcmovu
pop
sub
push
sub
jns
cmp
inc
ss
mov
push
pop
sbb
mov
clc
ret
mov
sarb
jo
push
inc
gs
jecxz
out
imul
les
nop
int3
repz
pop
xorl
pushl
and
mov
xchg
daa
mov
cltd
mov
popf
je
faddl
insl
lcall
jb
add
frstor
xchg
call
pushf
mov
cmp
rcl
mov
mov
cmp
insl
lcall
lods
leave
verr
lods
add
inc
and
int3
lahf
or
lret
mov
cmpsl
or
jno
xor
mov
mov
popl
negb
stos
lods
fisttpll
pop
xchg
stc
push
sub
into
sahf
pop
int3
mov
jp
gs
jne
jmp
pop
outsl
xchg
aad
stos
jo
push
dec
in
xchg
cmc
dec
cmp
pop
arpl
jp
repz
inc
sub
pusha
loopne
dec
inc
adc
popf
out
sti
fildll
xor
repnz
and
inc
testb
andl
jp
addl
dec
inc
mov
fstp
ret
fisubs
pop
in
mov
jecxz
test
aaa
adc
mov
int3
xor
dec
mov
dec
lea
and
cmc
or
js
jne
xor
sbb
icebp
lds
add
push
cmp
or
add
sub
mov
add
push
and
int
out
dec
cmp
push
in
jp
dec
xchg
fnstsw
sarb
test
test
lds
jb
adc
inc
xor
push
sti
and
in
jle
add
jns
nop
cltd
js
gs
clc
mov
clc
cmc
popa
xchg
out
repz
jle
inc
jne
in
loope
lcall
mov
test
pop
mov
into
js
inc
add
sub
sub
push
push
push
pop
es
xchg
cmp
jne
cmp
nop
mov
cwtl
push
sub
mov
cmc
les
mov
sbb
rcll
xor
inc
stc
mov
and
add
repz
push
jl
inc
pop
lret
in
mov
mov
aas
cmp
mov
mov
std
jne
xchg
out
jl
add
jecxz
adc
test
into
lcall
sub
mov
cmp
add
lods
in
jmp
popf
loop
jmp
and
mov
jbe
adc
adc
test
lret
mov
repz
pop
xchg
jmp
push
add
xor
mov
push
sub
pop
je
in
mov
jo
add
xchg
loope
mov
orl
and
xor
sub
pop
dec
sub
cli
push
gs
sub
sub
jne
ret
leave
rolb
cmp
mov
lahf
or
pop
push
pop
mov
push
fnstenv
je
xor
sub
xor
test
mov
std
sbb
in
add
jmp
jb
rclb
sbb
rcll
xor
xor
pop
jecxz
push
or
jb
pop
add
xor
and
sbb
push
or
pop
xor
mov
rclb
or
ljmp
cwtl
push
xor
sahf
ffree
je
clc
push
movsb
jns
pop
jg
mov
jl
push
sub
and
imul
or
shrl
inc
jnp
adc
push
lret
loop
and
push
xor
inc
mov
mov
push
sub
pop
ret
lods
or
adc
inc
adc
mov
pushf
inc
lock
scas
addr16
popa
jg
mov
shlb
arpl
mov
in
push
push
das
lcall
push
push
jecxz
sbb
fsubrl
pop
mov
outsb
mov
outsl
inc
mov
mov
and
nop
dec
mov
jne
mov
inc
cmp
lock
xchg
push
int
std
stos
jae
mov
pop
sbb
inc
add
dec
imul
inc
hlt
jp
dec
movsl
and
int3
movd
sub
pop
xchg
std
mov
fmul
sub
inc
mov
sti
roll
cmc
mov
sbb
jnp
inc
jnp
movsb
das
mov
in
sahf
jb
jns
mov
mov
jge
mov
addr16
hlt
vldmxcsr
shlb
call
inc
push
movl
adc
movsb
jmp
mov
jge
sbb
nop
test
loope
jp
out
cmp
and
jne
notl
or
and
cmp
push
cmpb
scas
outsl
dec
mov
pop
fstpl
ja
cmp
ret
xlat
mov
xchg
sbb
jmp
ja
cmpsb
jp
xlat
test
or
inc
mov
ja
mov
lods
jecxz
lret
push
fsubrs
push
cld
jns
sub
pop
fdivs
and
inc
sti
mov
xchg
sbb
std
sub
inc
cltd
adc
add
ret
cmp
jo
jae
push
fstl
pop
orb
push
fwait
ja
cmc
lea
mov
outsl
sbb
loopne
adc
mov
sarl
pusha
add
cmc
mov
dec
xor
outsl
jbe
jg
push
fimull
lock
xchg
in
sub
adc
mov
sub
push
push
in
jmp
shrb
repz
ffree
test
jl
push
xor
out
ficompl
lods
jle
mov
mov
add
xor
mov
iret
out
cmp
cltd
and
jmp
mov
popf
xlat
es
loopne
xor
push
xor
es
push
mov
jg
push
popa
pop
movsb
sti
pusha
mov
iret
data16
ja
ret
mov
add
dec
sbbl
notb
imul
jo
pop
jbe
cmc
stos
xlat
push
loope
cmpsb
stc
mov
test
dec
add
in
in
or
jne
fnstsw
jl
leave
je
mov
or
fmul
adc
pushf
rclb
repz
pop
loopw
mov
sbb
jns
sub
and
lret
inc
mov
jb
lahf
xor
push
push
xlat
ds
arpl
call
sbb
les
loopne
pop
adc
arpl
push
sbb
push
cmpsb
shll
jbe
test
jns
fiaddl
mov
mov
mov
test
lods
mov
out
sub
popa
sti
loope
jne
in
jle
aad
dec
shlb
dec
dec
jbe
rcl
mov
fsubrs
in
sbb
mov
push
cmp
xor
out
sbb
dec
orl
mov
pop
std
ficomps
add
das
jne
shrb
daa
mov
jg
jns
ljmp
mov
fistl
sbb
sbb
cmp
or
in
std
in
stos
pushf
jle
dec
mov
and
std
or
out
fstl
adcl
dec
test
push
shll
lock
mov
mov
mov
repnz
push
dec
lcall
pop
in
aad
inc
sub
lahf
loopne
shr
and
sub
jmp
cmpsb
pop
fs
jo
out
sub
js
lret
nop
dec
sar
cmpsb
ja
shlb
and
dec
mov
push
inc
mov
or
fstl
mov
sbb
fnstsw
ss
mov
arpl
adc
loop
ljmp
jne
out
push
iret
in
cmpsl
into
aad
cmp
cmc
test
inc
push
and
daa
movsb
clc
int3
xchg
je
stos
push
dec
jl
sbbb
stos
push
xor
out
jle
jns
mov
ja
fnstsw
add
fs
sub
inc
leave
hlt
xchg
xor
pop
lods
inc
inc
call
mov
jns
xchg
mov
js
jmp
in
dec
sub
pop
mov
cmp
mov
jmp
add
cmpsb
mov
push
out
cld
fcmovnbe
sub
sbb
lcall
loope
mov
faddl
xchg
inc
xchg
inc
xor
jbe
jne
inc
mov
pop
mov
push
movsb
cmpsl
adc
int
mov
cmc
lret
addr16
bound
test
mov
repz
mov
mov
and
sbb
sahf
imul
jbe
lahf
pop
bound
mov
jno
pop
mov
repz
sub
mov
pop
ret
push
fstl
fdivrl
mov
push
and
jmp
mov
xor
pop
scas
imul
fdivrs
jbe
sub
add
sbb
pop
in
dec
cmp
cld
push
mov
xor
pop
cmp
lahf
dec
rclb
xor
pop
lcall
bound
xchg
pop
les
pop
add
sbb
les
arpl
pop
int3
sub
pop
mov
jecxz
rdtsc
mov
repz
pop
in
std
or
bound
outsl
daa
pop
xchg
stos
jl
mov
stos
cmp
ret
and
add
xlat
or
sbb
lret
cltd
mov
sub
adc
mov
test
xchg
push
repnz
jp
and
imul
xchg
jp
imul
mov
jae
cmpsb
and
les
jle
xor
int
dec
loop
repnz
and
adc
jmp
movsb
xor
in
adc
arpl
dec
test
lcall
push
mov
repnz
xor
mov
lret
xor
in
lods
cltd
jp
sti
subb
mov
add
pop
mov
sub
xor
pop
orl
mov
mov
xor
pop
pop
fmuls
pop
mov
inc
and
mov
push
fldl
addr16
cmp
out
cs
xor
jbe
pusha
pop
lret
adc
or
nop
daa
push
and
dec
sub
repz
lock
mov
dec
test
xchg
mov
mov
lcall
mov
pop
pop
mov
int
sbb
fs
jbe
mov
push
loopne
push
pop
or
push
in
cmpsl
int
jne
icebp
int3
sub
and
push
push
mov
xchg
aaa
lret
fidivs
ja
xor
mov
sub
mov
cmpsl
cmp
mov
repz
jo
adc
pop
push
and
les
pop
jo
cmpsb
fcoml
fnstcw
xor
stos
cwtl
hlt
popa
push
mov
fcompl
test
lret
pop
roll
test
lcall
inc
sti
hlt
pop
dec
adc
adc
fucomp
pop
insl
add
sbb
cltd
mov
mov
test
fs
mov
pop
jge
test
adc
sub
mov
xorb
and
stc
and
mov
inc
arpl
insb
xchg
inc
not
jne
cli
xchg
xchg
std
imulb
jbe
mov
imul
cmc
push
outsl
repnz
xchg
pop
aad
push
push
imul
ljmp
shrb
pop
btc
in
dec
adc
sbb
shlb
call
aam
js
push
xor
add
flds
test
cmp
dec
add
mov
in
jle
fisubs
frstor
and
cmc
imul
jo
cmp
push
pop
outsl
jb
call
pop
jbe
nop
and
or
cmp
ds
rorb
scas
add
add
push
xchg
aaa
stos
sub
jb
aam
adc
dec
mov
sub
stos
in
out
pop
cmp
push
cmp
test
inc
sahf
ds
add
cmp
movsl
mov
push
lds
jb
adc
adc
and
loop
in
imul
icebp
xor
movsl
pop
push
cmpb
imul
cmc
stc
lahf
add
mov
clc
in
push
sbb
add
arpl
sbb
inc
fst
ss
mov
pop
xchg
sbb
dec
xorl
mov
jo
pushf
pop
and
out
sbb
dec
gs
jb
add
shll
push
add
mov
lcall
jmp
sub
cmpsl
mov
out
fs
inc
invd
and
jp
or
in
shl
mov
lret
testl
jae
add
imul
inc
rcrb
jecxz
leave
fcomip
enter
cmp
movsb
inc
mov
inc
jne
jb
xchg
lock
fimull
ffree
popf
sub
dec
push
in
push
lods
xchg
cmp
pop
ja
sub
outsl
and
add
fsubl
cmpsl
sub
pop
sub
cli
inc
sbb
jp
cmp
sub
push
mov
aaa
push
aam
adcb
dec
mov
test
iret
xchg
jns
or
push
or
and
mov
shlb
fldenv
jecxz
ljmp
scas
lret
sahf
jmp
test
iret
jns
arpl
lret
push
cmp
into
xor
cmc
bnd
pop
loopne
mov
sub
insl
jecxz
ja
in
mov
xchg
loop
decb
lods
ss
test
je
add
mov
or
xorb
out
or
and
lahf
mov
mov
push
push
stos
push
int
and
insl
or
lret
push
mov
xchg
fcompl
stc
adc
cmp
add
test
dec
subb
or
dec
out
xor
or
jb
xor
jns
lods
push
fnsave
and
or
sub
fcoml
adcb
dec
push
decl
addr16
jp
or
ja
mov
mov
test
nop
lods
dec
lahf
mov
fisttps
jns
dec
es
sbb
and
mov
and
mov
cmp
lahf
pop
push
ret
bound
lcall
add
inc
and
aas
jbe
repz
fldl
mov
lcall
shlb
clc
sbb
dec
roll
addr16
xor
dec
sti
popa
cmp
js
push
arpl
out
xchg
inc
mov
shll
fcoms
mov
stos
sub
pusha
ja
flds
push
hlt
fwait
cmp
dec
sarl
sbb
insl
sbb
cmp
xor
push
mov
imul
icebp
pop
or
or
ret
insb
aad
mov
mov
test
push
mov
dec
xor
inc
fmull
loopne
lret
pop
je
aas
outsl
jnp
daa
sti
in
and
rcrb
subb
xor
or
fldl
loop
jmp
repnz
and
repnz
inc
hlt
lret
testl
shll
xchg
inc
ss
mov
xchg
enter
rolb
push
jl
push
movsl
or
outsb
inc
fbld
jp
out
bound
ret
and
test
lret
push
jmp
testl
aaa
xor
mov
push
cs
dec
cmp
orl
push
rcll
or
pop
mov
mov
mul
pop
lret
out
add
xor
pop
cmc
insb
mull
outsb
inc
adcb
imul
push
out
cmp
mov
dec
lods
sbb
mov
mulb
inc
mov
inc
mov
dec
scas
inc
mov
mov
mov
mov
adc
cmp
pop
xchg
adc
cmpsb
hlt
add
clc
sub
pop
dec
jnp
repnz
sub
pop
jo
push
and
jmp
fcoml
inc
or
imul
mov
popf
jne
push
arpl
call
imul
jg
xchg
mov
mov
mov
xor
repnz
enter
jl
mov
ret
mov
jns
in
cmc
hlt
dec
inc
push
test
push
in
ftst
lret
dec
fildll
bnd
pop
inc
mov
fcompl
jo
sub
fdivrl
mov
cmc
mov
mov
mov
fwait
jge
mov
mov
mulb
jne
jecxz
xlat
xchg
dec
in
gs
xor
mov
imul
pusha
and
push
pop
repz
rcrl
js
mov
nop
push
arpl
push
cmp
xor
push
mov
or
sbb
add
push
aaa
popf
inc
jle
xor
in
inc
cmpsb
out
sub
xorb
inc
iret
in
and
dec
sbb
aad
inc
cmp
sub
push
push
dec
sbb
out
aas
dec
test
xchg
add
push
lahf
push
adc
jbe
cmp
aaa
cmpsl
test
test
mov
jb
and
insb
mov
shlb
idivb
pop
jo
push
imul
ud0
add
adc
and
xchg
lods
int3
push
jecxz
aam
and
div
cltd
in
push
shrb
scas
int
out
aad
aas
lcall
or
repz
gs
and
lret
in
jl
sbb
dec
cmp
mov
dec
and
adc
mov
in
push
mov
adc
mov
push
adc
jbe
xor
pop
in
lcall
jne
sub
je
xchg
mov
lea
imul
cmc
andl
push
jns
ja
int3
dec
and
push
daa
mov
and
decb
mov
lods
push
sbb
pop
cmpsb
dec
repz
stc
inc
test
push
sbb
xchg
inc
jle
push
cmc
outsl
aas
bound
ret
aaa
mov
fistpll
mov
bound
adc
shrl
or
mov
adc
mov
pop
mov
rol
gs
push
test
popa
sub
popa
je
lahf
hlt
outsl
fsubs
fs
lock
or
out
push
movsb
push
in
negb
stc
sbb
mov
outsl
imul
sub
mov
mov
mov
sub
popa
add
mov
mov
data16
ljmp
jb
fstl
imul
negb
outsb
sub
cmpsb
xchg
push
push
jecxz
fadds
dec
mov
push
cli
or
sbb
xchg
mov
sti
shll
int
subb
imul
rol
sub
and
pop
xor
xorb
xchg
in
inc
sbb
push
insb
imul
aas
xchg
inc
xorl
sub
pushf
cmp
mov
iret
add
and
xlat
shlb
into
push
sbb
xchg
shll
dec
shlb
imul
fisttpl
cmp
cmp
xchg
inc
pop
push
jne
loope
testl
push
mov
std
mov
or
mov
dec
mov
in
lahf
jl
xchg
pop
nop
call
mov
in
push
cmp
in
inc
mov
mov
jne
aad
xor
push
nop
dec
and
lock
cmpl
ret
cs
fildll
flds
cltd
pop
pop
aaa
cwtl
faddp
jno
jne
mov
data16
sub
dec
insb
sbb
xor
fisttpll
pop
jle
lret
xor
adc
idiv
push
mov
cmc
insb
test
inc
mov
push
rcrb
pop
jmp
cli
mov
jae
out
fwait
sub
jecxz
inc
jae
lods
in
mov
mov
loop
jecxz
cmp
jae
mov
filds
fyl2x
lcall
int3
js
rcrb
inc
ja
mov
and
fnop
pop
xchg
into
sbbb
int3
call
add
push
les
mov
jg
push
loopne
testl
dec
shrb
mov
or
inc
mov
add
mov
fstl
ljmp
in
sub
jo
jb
fwait
xor
pop
jp
jbe
loop
lock
xchg
sbb
adc
repnz
xlat
xor
mov
es
jge
sti
and
cmp
dec
das
sub
mov
xor
sahf
in
imul
adc
mov
mull
push
jne
fs
jne
push
bound
cmp
stos
mov
fidivs
adc
addl
arpl
into
jb
insb
jmp
stos
cwtl
push
in
lcall
xor
inc
cwtl
pop
cli
push
clc
or
jmp
cmp
loope
scas
xchg
jns
in
shll
jne
ret
lods
imul
fs
add
jo
pop
xlat
xor
jecxz
jle
aam
aaa
mov
xlat
jns
jne
loop
jecxz
test
fs
imul
movsl
sbb
pop
jecxz
sub
in
pop
incb
cmp
inc
frstor
in
movsb
lock
and
xchg
out
pop
imul
lock
dec
add
or
lcall
daa
push
cmpsl
adc
lret
adc
push
ret
mov
adc
fbstp
or
sbb
shll
cltd
push
xor
xor
nop
ljmp
rorb
jb
mov
pusha
ss
loopne
or
imul
fsubr
inc
cmc
fnstsw
cmpsb
shr
mov
or
movb
icebp
pop
movb
xchg
jne
sbbb
xchg
jmp
addr16
es
and
jg
mov
int3
fdivrl
mov
jp
push
mov
mov
xor
imul
mov
loopne
lahf
sub
xchg
cwtl
xchg
loopne
pop
or
ja
mov
and
push
jns
cli
cwtl
pop
xor
in
nop
shrb
jmp
pushl
cmc
lcall
arpl
stos
call
adc
pop
cmpsb
mov
fstl
cmc
bound
hlt
inc
add
lea
sarl
in
test
in
into
pop
and
lds
repnz
movsb
cltd
push
sti
sbbb
js
mov
and
sub
repz
sti
mov
shr
fs
dec
jno
fisttpll
pop
and
or
push
push
int
cltd
rolb
inc
nop
push
iret
dec
frstor
sub
xchg
clc
mov
jae
testb
mov
repnz
cld
lods
enter
leave
mov
add
cmpsl
sub
pop
push
mov
cld
out
cmc
sbbb
out
test
in
loope
test
or
pop
stc
mov
testl
shl
and
pop
int3
jle
pop
adc
lea
cs
jge
inc
enter
cmp
das
jo
fs
cmp
xchg
loop
xor
ja
stos
stc
xor
jnp
pop
mov
in
inc
lea
mov
lret
xor
sub
jle
loop
push
dec
es
mov
jnp
cmp
xchg
cmp
aaa
sbb
adcb
cltd
adc
or
lret
jge
or
jp
sbbl
insl
jecxz
pushf
cmp
lock
out
mov
gs
push
add
leave
add
add
push
jp
jno
jae
call
fs
xchg
push
pop
jne
lods
xchg
out
out
or
mov
das
rorl
xlat
shr
cs
inc
icebp
inc
in
insl
pop
movsb
rorb
stc
faddl
cld
xchg
ds
mov
outsl
in
pushf
inc
pushf
xor
ja
push
addl
aas
push
aaa
in
push
pushf
das
gs
orb
mov
pop
into
in
push
jle
add
or
out
xor
or
or
sub
aad
pop
dec
add
in
jmp
mov
test
fwait
adc
xor
and
lock
add
jo
dec
aad
clc
or
mov
jnp
pop
daa
imul
mov
dec
popa
fnsave
cmpsb
jecxz
shll
jae
loop
js
data16
cmp
push
mov
pop
pop
xchg
sarl
fnstsw
shll
das
jno
icebp
mov
aas
loop
adc
inc
and
jp
inc
xchg
cmp
stc
cmp
pop
dec
in
mov
test
or
jo
fdiv
test
xor
or
mov
add
mov
jmp
frstor
jmp
and
andb
and
sub
cld
jmp
dec
pop
jp
lods
sbb
cmp
in
in
ljmp
sbb
lock
and
enter
inc
jne
fnsave
xlat
scas
pop
mov
or
mov
cmc
fimuls
aad
test
xchg
add
rcrb
sub
mov
xor
js
dec
lret
out
mov
xor
sub
push
cmc
outsl
xchg
pop
xchg
jnp
inc
stos
inc
sarl
push
loope
cmp
movsb
push
cmp
cmp
lret
jmp
bound
ja
mov
mov
jne
jecxz
ret
nop
out
adc
xchg
in
push
loopne
or
movsl
mov
imul
push
aas
lret
rclb
ret
sbb
xchg
shr
pop
cmc
fucomi
sbb
jecxz
xchg
mov
dec
orl
xchg
sub
popf
jbe
xor
pushf
sub
sti
dec
data16
gs
repnz
in
cmc
nop
xor
cmp
and
popf
inc
in
push
mov
cmc
hlt
jns
lods
push
xchg
push
xor
addr16
in
xlat
mov
jl
dec
jecxz
movsb
pop
sub
jns
stos
les
test
arpl
shlb
cmp
mov
insl
mov
sahf
pop
insb
fcoms
adc
shll
mov
cld
mov
arpl
bound
xor
incb
jge
push
popf
sub
mov
dec
adc
mov
jge
sbb
mov
incl
dec
stos
in
dec
dec
lret
loop
xchg
cmpl
and
cltd
mov
in
mov
jne
repz
cli
andl
pop
fstpl
mov
sbb
add
cmpsb
outsb
mov
jo
pop
mov
hlt
jp
std
subb
xor
into
popf
lock
popa
mov
and
data16
lahf
or
rcrl
fucomp
jmp
or
lret
je
insl
push
sub
popl
cmp
sbb
mov
sub
test
ljmp
push
or
dec
jae
or
jb
in
test
push
into
jp
cmp
push
pop
jmp
adc
ret
cmp
xor
xor
rep
add
stc
add
frstor
cmp
dec
fsubrs
shll
xchg
sti
pop
mov
mov
push
popf
sub
xor
lds
cmc
shll
mov
fldcw
shl
push
xor
add
jl
add
xchg
mov
push
inc
aaa
push
imul
decb
jecxz
pop
dec
mov
mov
ja
ljmp
cmc
lcall
pop
inc
popf
add
cmp
js
mov
lock
jbe
pop
sub
imul
push
mov
gs
or
in
leave
mov
sbb
pop
lods
push
or
mov
ret
add
jns
loopne
adc
and
aad
or
out
mov
dec
fistps
sahf
mov
xchg
fcompl
lods
dec
xlat
mov
jmp
adcb
sbb
jb
dec
popa
mov
lahf
sbb
push
xor
jmp
rclb
push
add
iret
aad
xor
sub
adc
fstl
sub
jg
mov
es
xor
jns
cld
ja
lock
cld
ficoms
push
push
pop
pop
stc
bnd
push
push
adcl
mov
sbb
jbe
es
sbb
neg
rcll
lcall
fptan
mov
xchg
stos
cmp
inc
jae
jbe
movsb
repz
fwait
dec
sub
fs
ljmp
and
out
fsts
jmp
mov
dec
or
push
es
hlt
out
sbb
xchg
push
bound
jbe
rcrl
lcall
adc
cmp
jmp
sti
or
xchg
repnz
in
lock
test
jae
stc
fisttpll
mov
shll
pop
and
movsl
loopne
subb
xchg
negb
sbb
into
mov
cmp
je
or
pop
loope
cmpsb
inc
stos
stos
cli
ss
jmp
mov
cmp
pop
mov
and
jmp
enter
test
out
push
xorb
mov
push
sti
cmp
cmp
xchg
lret
mov
outsb
mov
cmpsb
mov
add
xor
push
imul
arpl
and
or
adc
jbe
and
xchg
mov
add
mov
push
pushfw
jmp
cmp
xlat
ss
dec
scas
jecxz
ljmp
cmp
leave
jno
in
mov
call
test
loop
sbb
das
pusha
shrl
cmp
aam
jecxz
dec
mov
jbe
lcall
or
mov
ja
ja
frstor
or
sub
inc
aam
test
jnp
mov
lea
push
out
leave
fsubrp
rcll
movsl
pop
adc
push
mov
or
pushf
add
pop
or
je
and
in
jb
pop
add
cltd
stos
lret
dec
mov
js
andl
repnz
pop
xchg
xchg
ret
lds
mov
out
int3
lock
adc
addr16
jns
or
lods
loope
xchg
loope
js
rorb
inc
mov
xchg
gs
cld
adc
es
in
lea
lods
mov
fmul
pop
rcl
and
fs
ds
and
jmp
mov
push
sub
stos
push
stos
bound
dec
sbb
adc
int3
movsb
jmp
popa
subb
test
lock
dec
dec
push
push
dec
ret
je
dec
xor
in
dec
xor
ror
sub
push
mov
sub
jmp
jbe
sbb
xor
push
fcomi
lret
push
push
idiv
push
sbb
inc
add
adc
inc
mov
mov
jbe
lret
push
add
in
sbb
fcomps
mov
das
xorb
bound
rclb
imull
mov
lret
fst
mov
mov
adcl
outsb
movsb
js
mov
adc
xor
adc
outsl
dec
clc
loop
pop
sub
aam
loopne
jno
cltd
les
sbb
push
test
mov
pop
sub
popl
add
fldcw
fistpll
mov
jecxz
mov
xlat
into
xorb
out
fadds
jmp
mov
stc
ss
inc
ret
push
loop
jmp
add
mov
mov
push
adcl
inc
mov
dec
lods
or
cmc
les
sbb
xor
fwait
jecxz
jl
lock
jae
je
jb
cltd
insl
cmp
mov
xchg
and
jmp
fimuls
adc
mov
lahf
insl
or
insb
mov
fs
scas
rclb
int
adc
pop
xchg
shrb
andl
mov
dec
mov
mov
loopne
xchg
jmp
ret
push
fnstsw
ss
aas
in
out
mov
dec
mov
ja
ret
add
dec
mov
xchg
push
repz
shrb
push
mov
adc
or
in
mov
les
dec
int
out
mov
jns
sub
jno
fstpt
dec
shlb
ds
fidivrl
push
mov
jb
mov
fdivr
int
or
imul
xchg
aaa
pop
popa
xor
xor
repz
ss
pop
aaa
in
cmp
push
iret
fnsave
jae
xor
mov
mov
pop
add
lret
mov
jno
mov
in
cmp
sub
or
mov
shlb
aaa
mov
pop
adc
cltd
sbb
sarl
loopne
sub
in
cwtl
push
mov
jl
add
out
mov
insl
push
adcb
add
cld
jb
push
scas
je
mov
inc
pop
roll
mov
push
inc
jge
jbe
xchg
mov
in
cmp
jl
sub
js
jns
flds
inc
sbb
dec
xlat
mov
jae
rcrl
leave
shrl
adc
sub
data16
push
push
out
out
aaa
pop
push
and
scas
jp
mov
jb
cli
in
rol
ss
loop
xchg
push
push
inc
inc
outsl
mov
dec
inc
repnz
ror
test
inc
mov
sbb
mov
cwtl
mov
xor
mov
divl
cmpsl
testb
pop
mov
dec
fisttpll
roll
add
cmp
popa
sub
pop
insb
lock
xchg
push
sub
push
js
mov
lds
pop
sub
sbbl
div
ret
int3
stos
push
shlb
mov
cmp
and
test
mov
cmc
cmp
dec
xchg
pushf
repnz
mov
scas
movsl
xor
dec
dec
ret
add
xchg
mov
insb
inc
jecxz
add
mov
sti
cmc
pop
andl
pop
cmp
in
aad
cmp
dec
xor
xchg
pusha
add
out
test
fstpt
adc
sti
testb
nop
pop
test
lds
fdivrl
addr16
je
mov
xchg
xor
repz
fisttpll
add
cmpsb
cld
out
add
cld
jnp
cmc
push
add
divb
es
pop
xchg
in
pop
mov
cld
jle
xchg
repz
in
push
cld
dec
out
mov
xor
fimull
pop
divl
cli
pop
sbb
cmp
fisttpll
pop
jg
addr16
inc
and
mov
in
ret
out
add
cmp
les
fisttpll
lret
fwait
je,pn
sbbb
sbb
mov
mov
div
or
incl
pushf
insl
aaa
cmc
bnd
push
subl
mov
push
push
lret
in
push
pop
das
push
es
mov
jnp
rcl
adc
repz
nop
roll
pop
test
and
ffree
in
jmp
mul
xlat
mov
mov
add
jns
in
je
push
jne
jg
mov
pushw
imul
dec
mov
into
and
jmp
push
daa
mov
inc
add
sti
lret
or
stc
and
shr
pop
stc
sbb
sub
ret
lret
int
jecxz
test
and
xchg
jo
adc
mov
inc
inc
rcrb
pop
inc
repz
pushf
mov
shl
lret
rcll
jb
repnz
pop
mov
clc
pop
add
inc
and
mov
mov
add
outsl
sbb
mov
xchg
and
stos
inc
jae
imul
andb
mov
or
stos
xchg
aas
imul
out
adc
or
jecxz
mov
cmc
movl
cmpsb
scas
jne
mov
inc
in
and
push
pop
test
sbb
mov
mov
sub
les
jecxz
vcvttsd2si
dec
mov
lret
adc
pusha
pop
aam
daa
lock
out
repnz
addb
sbb
xchg
jmp
inc
push
test
sbb
xchg
cmc
mov
inc
mov
movb
pushf
lods
xor
insl
sbbl
lret
cmpsl
sbb
jae
push
dec
test
push
mov
leave
dec
scas
xchg
in
add
xchg
dec
fldl
lcall
pop
subb
fucomp
pop
sahf
out
mov
mov
into
cmc
inc
ljmp
outsb
inc
test
push
fwait
int3
test
js
lods
push
mov
idivl
jmp
push
mov
fdivs
stos
jb
or
push
mov
and
jae
rolb
and
and
inc
mov
lahf
sahf
mov
int3
xchg
in
and
loopne
addr16
je
mov
sbb
xchg
or
jl
xor
xlat
add
jmp
adc
xchg
xor
loopne
adc
push
loopne
inc
xchg
insb
lret
mov
scas
add
out
mov
ljmp
inc
cwtl
and
xor
divl
lret
cmp
rclb
mov
push
mov
ret
dec
es
xlat
inc
jb
std
jecxz
add
js
fsts
adc
jo
hlt
add
int3
gs
insl
ret
out
or
xchg
xor
adc
jne
dec
rcll
push
lods
repz
xchg
or
sub
stos
xchg
sub
sti
in
mov
in
dec
nop
sbb
pusha
and
shrl
testb
mov
push
or
and
cmc
sub
sub
lret
int3
test
xchg
divl
jb
test
push
into
cmp
repz
push
cmp
addl
jno
jl
bound
in
mov
add
mov
jns
repz
jp
out
inc
mov
lock
sbb
jne
in
insb
test
sub
lcall
jo
cmp
push
popa
lds
stc
sahf
in
int
rorb
fmulp
out
clc
ret
dec
ret
mov
add
add
je
cmc
lock
add
dec
mov
cli
xchg
lcall
clc
inc
sbbl
push
dec
add
enter
in
dec
xlat
push
lahf
mov
rcrb
call
pop
mov
out
into
or
bound
mov
clc
ret
inc
mov
test
add
fnstcw
icebp
inc
ret
xor
pushf
and
sub
mov
or
fadds
outsl
mov
je
ficoml
jae
adc
roll
dec
test
ffreep
imul
std
dec
movsl
hlt
ds
push
sbb
jle
daa
in
adc
or
jns
notl
mov
mov
repnz
ds
in
xor
add
push
mov
or
inc
mov
data16
add
jns
aas
adc
in
divl
divl
fstl
sbb
mov
outsb
dec
xchg
jmp
int3
mov
sbb
fwait
mov
rorb
xchg
pop
adc
sbb
jbe
jo
loopne
repnz
rclb
mov
add
js
adc
jne
xchg
jbe
enter
pop
in
cmp
mov
mov
mov
jl
addr16
imul
push
adc
cld
push
xor
pop
mov
rcrl
idivl
cmp
add
jge
icebp
fcoml
xor
pop
leave
push
pusha
adcb
cmp
inc
jecxz
mov
mov
stc
adc
fs
mov
dec
jecxz
es
in
fst
mov
adc
data16
pop
jp
pushf
jno
push
out
add
push
stos
rcrl
fists
shll
imul
mov
mov
dec
xor
pop
lcall
je
cmpsl
fs
jne
push
jmp
inc
ficoms
fwait
mov
cli
outsl
pop
jno
xor
in
sub
test
xor
push
aad
cs
mov
addl
push
mov
dec
adcl
cli
lcall
lret
in
pop
xlat
ret
out
dec
push
pop
jge
sbb
push
lret
flds
mov
mov
xchg
stc
mov
sub
cli
cwtl
orl
sbb
pusha
pusha
test
pop
test
movsl
jp
int3
rcrb
cmc
jle
sbb
push
js
push
push
lock
sbbb
fisttpll
outsb
shll
in
fwait
lock
adc
pop
frstor
insl
outsb
cmc
lret
or
out
sbbb
test
psubusb
test
cli
fisttpll
icebp
addr16
fldl2t
out
mov
add
pop
mov
inc
test
out
push
jl
cmp
mov
cmpsl
mov
stos
xor
jnp
adc
inc
mov
cmc
imul
jo
ret
push
fmuls
mov
adc
fcomip
test
lret
pop
mov
aad
in
xchg
orb
fsubl
stos
divb
stc
in
sub
testl
mov
enter
dec
je
xchg
movsl
andl
add
push
hlt
mov
icebp
aaa
mov
loope
dec
int3
sub
lret
sub
push
jp
xchg
sahf
outsb
or
in
mov
jb
fdivs
mov
add
fcmovnb
das
xchg
dec
xor
pop
test
inc
jge
inc
inc
fs
adc
mov
movsb
lods
rolb
mov
loope
or
hlt
xor
add
clc
je
in
cmp
repz
mov
mov
ret
int3
aaa
testl
fiadds
insl
repnz
fwait
xor
mov
xchg
and
push
mov
cli
mov
dec
jb
mov
mov
shrb
pop
jmp
or
fdivl
movsb
loop
sti
js
shr
xchg
in
dec
dec
jp
add
in
lcall
fistl
mov
insl
in
aas
outsb
sub
cmc
jno
mov
mov
fsubrl
fstpl
or
lods
pop
aaa
sub
or
cs
pushf
testl
je
in
push
xchg
push
sbb
stos
push
mov
int3
cmp
outsl
pusha
mov
push
and
sbb
bound
jne
mov
popl
cmpsb
push
popa
fimuls
add
and
mov
xchg
faddl
fldenv
add
in
push
jb
xor
into
cmp
dec
aad
cwtl
push
sub
add
pop
lock
inc
adc
imul
in
lcall
add
sub
inc
pop
ja
cmpsl
orb
xor
sbb
dec
xchg
mov
jbe
sbb
repnz
mov
push
mov
inc
nop
mov
imul
repz
test
pop
cmp
push
jns
cmp
mov
idivl
jbe
push
nop
pop
xorb
cs
mov
ja
loop
and
outsb
mov
inc
and
ret
fiaddl
mov
popf
ja
cmp
pop
out
mov
out
or
rcrb
arpl
xchg
dec
hlt
les
inc
mov
imul
pop
gs
pop
and
sar
add
cld
jecxz
inc
sbb
inc
inc
xchg
divl
add
andl
inc
lods
outsb
jp
out
rorl
xor
add
enter
cmc
jno
shrb
push
ja
mov
fisttpl
sarb
pop
sub
cwtl
mov
shlb
jnp
xchg
add
add
xchg
push
jle
test
rorb
insl
dec
dec
mov
and
aad
jmp
in
cmpsb
xchg
mov
mov
lea
pop
jbe
cld
fs
lds
jb
int
sub
mov
repz
mov
or
loop
fsts
dec
mov
add
xchg
in
mov
push
sub
js
cmc
sbb
xchg
rcll
outsl
cmpsb
jae
jo
sbb
pop
lods
mov
push
call
pop
mov
ja
fucomp
orb
nop
enter
inc
les
dec
push
fstl
jb
ja
fxch
jg
and
pop
lret
daa
iret
jb
mov
cmc
or
pusha
mov
ret
filds
dec
pop
push
int
lods
cmp
mov
cmp
mov
push
shlb
cltd
dec
test
push
inc
lock
push
outsb
lret
mov
mov
mov
mov
jne
jns
add
stc
fnstsw
mov
in
sub
int
pusha
sbb
clc
mov
out
repz
cmp
dec
adc
repnz
dec
call
add
lock
shr
mov
adc
jp
xor
and
movsb
test
in
cmp
or
inc
push
adc
lahf
sbb
in
mov
mov
push
mov
xor
pop
jg
call
movsb
bound
test
dec
and
cmp
mov
fnsave
mov
add
ss
jle
pop
push
mov
outsb
ds
addr16
out
and
mov
daa
mov
mov
movsb
xor
ret
adc
je
or
xor
bnd
fucomp
les
inc
ds
out
mov
out
cmp
inc
icebp
loop
repnz
sub
cmpsb
or
out
pop
lret
jge
inc
dec
divl
mov
cli
es
in
mov
sub
push
fists
cmp
xor
push
fbld
int
addr16
enter
push
pop
std
mov
jae
repz
scas
fwait
shrb
scas
repz
data16
imull
or
sbb
ficompl
cs
jmp
sub
ret
sbb
push
dec
push
jno
push
roll
pop
mov
adc
lcall
repnz
push
xchg
push
push
repz
std
in
repz
outsb
inc
pop
mov
mov
in
lcall
dec
loope
adc
ja
sbb
jbe
jmp
movsl
notb
hlt
jns
arpl
aaa
or
jbe
pop
cmp
pop
dec
shrb
stos
lock
inc
xchg
bound
push
dec
mov
pop
mov
adc
mov
inc
repz
sbb
dec
in
repnz
mov
xor
cltd
cmpsb
and
jae
inc
push
out
jo
in
mov
clc
or
dec
push
je
insb
test
jae
cmc
and
xchg
popf
jb
and
dec
fstl
cwtl
pop
push
ljmp
and
mov
icebp
aad
sbb
int3
pop
jbe
int
cld
mov
bound
cld
loop
ja
movsb
sub
jae
add
stos
cltd
arpl
test
mov
mov
add
add
jl
std
mov
or
mov
mov
push
add
leave
call
ja
fcomi
add
aas
push
mov
aaa
imul
ret
and
pushf
mov
fs
pop
inc
hlt
cmp
jns
add
js
aas
jmp
aam
cli
sbb
test
sub
dec
sub
das
stos
icebp
ja
jecxz
xor
pop
sbb
push
dec
aam
mov
dec
sbb
jecxz
push
jecxz
jl
cmp
jno
in
push
push
pop
ret
sub
loopne
aam
loop
inc
mov
dec
rcrl
cmc
sbb
push
and
imul
cwtl
push
and
cmp
pop
fsts
mov
outsl
push
lahf
in
sbb
scas
sbb
jl
repnz
mov
dec
xchg
imulb
pop
xchg
fists
lahf
or
mov
cmc
addr16
subb
xlat
jge
movsb
scas
jmp
adc
and
lods
pop
js
dec
sub
and
jns
divl
leave
sub
outsl
cmc
jne
sub
jle
lcall
mov
js
jp
xchg
lret
stos
fldl
xor
dec
popa
lcall
and
and
cmp
cmp
ret
mov
fidivs
insl
and
out
lret
mov
fstpl
jne
or
xchg
or
incl
movsl
push
mov
fisttpll
push
push
notl
mov
push
shll
push
cmp
out
fst
jp
imul
popa
sahf
jge
jecxz
mov
and
xchg
mov
lahf
or
ds
cli
pop
scas
adc
mov
bound
pushf
out
insb
jns
mov
lock
into
mov
rclb
sub
test
ret
cs
mov
adc
data16
ds
std
pop
icebp
lods
mov
pop
outsb
into
sbb
xor
dec
adc
or
mov
int3
pop
xlat
sbb
add
ret
jge
jne
mov
mov
cmp
lock
out
mov
push
or
cmp
sbb
aam
jb
inc
adc
inc
mov
inc
ret
pop
xchg
fimuls
jb
scas
push
push
cmp
dec
clc
pop
pop
es
test
test
lds
push
jnp
cmc
cmp
xchg
dec
stc
cmp
ss
gs
in
pop
adc
notb
jl
cwtl
mov
sbb
push
jecxz
or
sbb
and
lcall
xlat
adc
dec
jne
mov
mov
stos
and
and
mov
insl
pop
xor
mov
fwait
dec
insl
cmpsl
jae
sti
sbb
rolb
xchg
pusha
rcll
adc
mov
test
mov
dec
imul
mov
push
arpl
cmp
movsb
dec
and
xchg
fnstsw
inc
fstpt
test
pop
imul
push
pusha
push
jb
sub
push
and
mov
push
test
jo
cli
mov
and
cld
mov
inc
jne
inc
mov
leave
pop
pop
cltd
ljmp
int3
cmpsb
lea
lret
mov
jmp
frstor
imul
inc
out
cmp
jno
and
pop
idiv
push
xchg
cmp
fsubrl
push
into
sbb
pusha
push
jp
jae
xchg
jae
xlat
jb
lahf
sub
mov
inc
or
sarl
outsb
cltd
add
fwait
orl
stc
inc
fnstsw
imul
add
test
ret
out
fnstcw
sub
in
cmpsl
out
adc
jle
addr16
andb
jb
gs
fistps
cmpsb
rolb
mov
pop
repnz
pop
stos
add
jmp
in
mov
sbbb
or
push
iret
sbb
movsl
stos
add
int3
dec
jle
cmp
aad
cmp
lock
and
xchg
nop
inc
xchg
pop
xor
push
jnp
ret
lret
adc
and
jnp
xor
in
je
xor
sti
xchg
mov
mov
sarl
inc
pop
and
jns
leave
or
lcall
scas
inc
sbb
unpcklps
je
mov
cs
cmc
adcb
sub
xor
div
out
shll
cmc
mov
inc
pop
mov
add
inc
dec
sbb
push
xor
ficomps
cmp
or
pop
shlb
in
xor
outsb
mov
cmp
mov
jne
add
jo
and
pop
adc
sub
lock
adc
push
xchg
ja
lods
cld
bound
out
push
push
aam
mov
cmp
xorb
mov
inc
ss
cltd
popf
sti
and
cmp
int
pop
jb
ja
xchg
push
mov
xor
xlat
mov
push
jmp
push
ja
and
divb
and
out
sub
mov
popf
adc
or
nop
add
add
movsb
js
jbe
loopne
push
repz
shrb
adc
push
movsl
es
xor
mov
inc
jo
pop
das
bound
cmp
es
mov
lods
fistl
jae
sbb
xor
or
pushf
fldcw
xor
jb
outsl
mov
cmpsl
pop
notl
ret
stc
jns
pop
in
mov
cmp
dec
jg
pop
data16
js
cmpsl
lret
pop
in
cmpsb
push
in
xchg
cmc
mov
fs
rcr
int3
leave
adc
in
push
cli
mov
or
out
mov
sbb
es
adcb
shr
xchg
clc
cmp
sbb
jo
testl
or
pop
fucomp
incl
mov
xchg
pushf
in
cmpsb
sub
pop
mov
iret
cmp
ret
jo
sbb
mov
xchg
test
push
push
cltd
dec
pop
cwtl
inc
repz
jmp
aas
mov
sub
mov
aad
xor
sbb
dec
out
mov
pushf
scas
fldl
rcll
ss
das
sbb
pop
out
mov
rorb
or
sub
jno
pop
movsl
add
lods
enter
push
pop
lahf
sbb
inc
and
pop
test
jne
adc
outsl
sahf
add
mov
test
sub
jle
or
mov
push
add
pop
ficomps
out
andl
out
cmp
jecxz
out
add
xchg
xor
rcrl
xor
adcb
sub
test
jno
mov
ljmp
mov
lods
pop
dec
fnstcw
scas
aam
pop
mov
repnz
xor
shl
jo
cmc
xacquire
repnz
loop
push
das
outsl
and
ret
test
push
sbb
cmpl
cmc
jmp
aas
bound
js
mov
insb
push
fistl
cmp
adc
dec
add
xor
push
in
in
xchg
fists
cmp
pop
ret
dec
jecxz
test
push
lahf
clc
bound
mov
and
scas
sub
jle
push
repz
out
aad
jl
inc
pop
push
insb
sti
cmp
push
imulb
adc
xor
push
jmp
cmp
add
mov
cmp
push
adc
cmp
mov
or
in
loope
stos
scas
ds
lcall
pop
mov
cmc
inc
dec
fwait
addl
cmpsb
nop
dec
pop
cmp
stc
inc
pusha
mov
jp
or
call
mov
sbb
mov
or
xor
repz
jecxz
into
cs
stc
out
jo
in
xchg
mov
add
push
ss
shrb
aaa
ret
or
fstl
mov
add
jp
mov
sub
repnz
cwtl
jae
xor
hlt
xchg
je
cmpsb
mov
xchg
jp
lret
test
pusha
fnsave
in
int3
mov
sti
mov
jbe
nop
push
mov
icebp
sub
adc
fmul
jne
pop
sbb
test
jae
or
or
mov
mov
test
cs
loop
pop
into
repz
arpl
mov
in
add
pop
fucom
xorb
mov
inc
pop
sbb
jp
cmp
push
lea
xchg
sub
jns
inc
pop
aam
xchg
jne
es
lahf
fisttpll
incb
cmc
out
movsb
sarb
rcrb
inc
loop
or
test
ljmp
into
cmpsb
popf
inc
jns
test
mov
fisubs
call
fists
push
mov
ffree
adc
pop
shr
movsl
push
jae
xlat
mov
int
xor
xchg
out
and
rorb
and
sbb
jle
test
and
mov
add
dec
dec
mov
cmp
push
jne
mov
jb
mov
iret
push
in
fists
sbb
arpl
cwtl
stc
sbb
fcoml
pop
sub
xchg
pushf
push
mov
lcall
push
mov
or
rcrb
das
shrb
pop
inc
push
int
fdivl
mov
adc
mov
sti
or
and
jb
inc
movsl
push
rorl
test
cmc
adc
imul
mov
inc
push
inc
fstpl
pop
test
jne
jb
or
jne
mov
sub
call
sub
mov
mov
xor
loope
fs
pop
lods
inc
add
jmp
mov
add
cmp
std
out
aad
nop
mov
jb
inc
pop
jae
cmp
call
sbb
dec
fcmovbe
mov
mov
cmpsb
jns
add
imul
mov
call
rcr
xchg
mov
inc
add
sub
shlb
cwtl
adc
pushf
add
hlt
lret
xor
gs
add
adc
scas
or
xor
nop
add
push
pop
and
xor
mov
fnsave
inc
cmp
mov
cmpsl
push
push
pop
popa
lea
cmp
inc
push
push
divb
push
out
adc
or
repnz
pop
arpl
int
dec
mov
add
mov
int
sarl
add
fnstsw
pop
sbb
mov
and
add
mov
sbb
in
xor
mov
and
jecxz
stc
fstpt
int
pop
adc
test
mov
mov
popa
sbb
in
outsb
or
inc
out
and
sbb
in
mov
fwait
imul
adc
stos
cmc
mov
dec
add
rolb
sahf
fiaddl
adc
sbb
mov
mov
insb
mov
fwait
or
inc
das
cmpsb
mov
jb
stos
in
test
jb
mov
in
xchg
add
sub
insl
pop
add
fwait
xchg
or
xchg
sahf
mov
mov
mov
and
xlat
mov
mov
jle
jge
xchg
inc
adc
mov
cmpsl
and
push
mov
insl
imul
cld
pop
shr
jns
frstor
sbb
push
xchg
jg
jne
mov
lock
jl
push
test
divl
in
fisubrs
jbe
pop
cmc
adc
pushf
out
push
mov
scas
mov
mov
lea
loope
add
js
ja
repz
lods
pusha
cmp
mov
push
sbb
jmp
ds
sbb
dec
mov
dec
aad
test
xchg
jle
fnstsw
aam
imul
add
and
jb
mov
sub
outsb
scas
xchg
xchg
mov
add
or
shrl
xchg
mov
sub
adc
jno
nop
dec
stc
loope
mov
dec
sub
xor
add
jo
push
cs
lret
in
adc
pop
xchg
or
out
mov
mov
cmp
roll
fwait
mov
dec
xchg
inc
lcall
jp
jp
test
jecxz
in
dec
neg
jmp
adc
pop
push
xchg
and
xlat
icebp
in
jb
stc
jecxz
test
scas
dec
adc
pop
repz
popf
jmp
push
mov
mov
imul
and
cmp
in
mov
mov
push
movsb
pop
xor
xor
mov
fisttpll
cmp
in
loop
testl
xor
jmp
in
stos
in
dec
out
mov
add
mov
fisubs
popl
cmp
aad
inc
add
out
ss
lods
inc
mov
outsl
fldenv
stc
add
sahf
push
or
jae
loopne
cmc
mov
subb
mov
push
fadds
sbb
je
dec
or
mov
lahf
pop
and
mov
fldt
jl
ret
push
xchg
loop
cmc
ret
push
mov
ds
or
push
cld
pop
scas
enter
shlb
jno
clc
xchg
fdivrs
and
lcall
add
into
mov
xchg
pop
scas
dec
nop
or
out
cmc
sbb
sbb
inc
pusha
fld
mov
or
xor
jmp
out
icebp
repnz
lock
jg
jle
add
fs
shrb
push
movsb
push
mov
jbe
pusha
fmull
or
sub
and
mov
in
xor
pop
sub
fldl
push
enter
cmp
jo
fnstsw
cmpsb
shll
or
inc
cmp
jmp
sbb
or
sti
enter
cmc
sbb
sbb
mov
add
or
lock
in
bound
ljmp
mov
sub
fidivrs
negb
push
pop
adc
pushf
mov
xchg
xchg
and
fmul
jp
adc
stos
jne
repz
xchg
mov
cld
push
dec
jmp
ficomps
inc
cmpsl
xchg
icebp
jnp
mov
std
mov
jnp
and
out
hlt
jecxz
mov
shlb
push
cli
sub
fwait
addr16
or
fucomp
or
loop
mov
stos
cmc
and
mov
je
push
js
in
addr16
push
loope
ds
fmull
pop
mov
pop
icebp
cli
or
outsl
add
cmp
stos
std
add
repnz
popa
in
test
leave
shrl
jne
push
push
rcl
mov
inc
jns
mov
mov
xor
jns
cmp
cli
loop
pop
in
addb
repz
orb
mov
mov
in
add
outsl
add
and
pop
mov
repz
mov
and
daa
imul
addr16
push
pop
jb
jp
pop
or
lock
adc
aad
cltd
mov
ss
scas
fimuls
jmp
in
lahf
jo
sub
test
mov
jne
mov
sahf
push
icebp
and
das
and
pop
xchg
out
mov
les
inc
jle
ret
test
and
mov
adc
push
inc
adc
arpl
xchg
adc
inc
add
lcall
notl
pop
jmp
test
aas
imul
cld
gs
jmp
or
sub
ret
bound
sub
cmovbe
inc
push
jge
fwait
cmp
pop
or
mov
into
das
stos
shll
mov
mov
clc
xchg
fdivl
cli
and
orl
pop
imul
and
fmuls
call
mov
repnz
or
add
mov
rorl
jmp
scas
pop
lcall
pop
fldcw
imul
push
in
mov
push
cltd
add
out
loope
pop
ds
cltd
push
sub
or
add
xor
movsl
push
mov
in
add
fbld
xchg
or
loop
push
out
adc
and
add
jg
jnp
mov
and
mov
cli
insl
jbe
mov
out
mov
mov
mov
jp
in
fstl
ja
xchg
inc
scas
ss
pop
mov
negl
push
cmc
lret
lds
shrb
icebp
xchg
mov
notl
inc
and
xor
pop
sbb
outsb
mov
mov
outsb
bound
and
frstor
pop
xchg
divl
pop
sbb
adc
lods
fistps
dec
cmp
inc
fwait
shrb
xchg
lock
rorb
cmp
mov
dec
mov
inc
pop
push
add
push
sarb
push
shrl
fstl
add
jb
nop
mov
decb
iret
mov
das
mov
pop
sub
cmp
add
push
and
and
jb
int3
mov
and
movsb
jb
stc
in
pop
mov
xor
pushf
cld
xor
loopne
repz
push
lock
fbstp
xchg
sub
mov
mov
adc
jne
mov
cli
out
jecxz
out
jnp
nop
lock
int
shrb
dec
aas
gs
imul
in
dec
jne
lea
xor
in
sub
lret
out
sbb
out
outsb
fnstsw
and
cmp
ss
cmc
sbb
push
pop
rclb
sbb
imul
stos
add
lock
jecxz
jecxz
div
fcoml
frstor
mov
adc
and
in
or
adc
xchg
sbb
jae
cmp
data16
mov
jmp
lods
push
mov
mov
sub
jg
addr16
and
lcall
sti
inc
cmc
dec
insb
mov
add
inc
push
mov
jnp
cli
push
lret
pop
pop
xchg
pushf
les
insl
dec
adc
out
sbbl
hlt
cwtl
sbb
in
push
push
mov
lahf
adc
fcomp
lods
imul
fstpl
repz
jne
push
aad
inc
cmp
mov
push
es
cmp
clc
lcall
jecxz
sub
cmp
popf
inc
stos
xor
mov
pop
icebp
enter
xchg
adc
mov
outsb
or
mov
cmc
or
fs
adc
jne
lcall
ljmp
mov
inc
rcrl
mov
jle
inc
loope
fsubr
cmp
int
xorb
movsb
in
sub
fs
sarb
cmp
aas
mov
test
xchg
sub
pop
loope
mov
jne
ret
jns
dec
mov
shlb
ja
adc
dec
ljmp
loopne
pusha
les
jmp
iret
xchg
sub
andb
cmp
xor
fstp
lods
stos
mov
cmp
notb
mov
mov
sbb
mov
mov
fistpll
pop
ret
frstor
cmp
cmp
lods
push
loopne
shlb
lock
fdivl
into
scas
push
jnp
jae
jp
outsb
loop,pt
pop
insb
cmpsl
ja
mov
mov
and
testb
arpl
div
mov
mov
push
inc
push
ljmp
push
test
mov
xor
outsb
loopne
push
push
push
adc
xlat
ret
push
dec
mov
xchg
pop
mov
mov
insl
lock
push
in
dec
mov
cmp
mov
fisttps
fildl
sub
out
cmp
in
jns
mov
jmp
fnsave
popa
jno
mov
sbb
xchg
icebp
jmp
inc
mov
insb
push
jbe
fbld
dec
jp
stos
pop
pop
inc
insb
insb
pop
jl
xor
mov
add
mov
sub
iret
push
icebp
jbe
addr16
sub
xorb
cmc
gs
xchg
jp
xchg
aaa
xor
scas
ljmp
xchg
loop
cli
mov
adc
cmc
aas
xlat
imul
add
mov
pop
adc
jne
or
or
add
push
pusha
addr16
repnz
sbb
ret
and
dec
enter
shrb
sbb
jnp
ljmp
ljmp
lds
icebp
jb
push
and
orl
mov
scas
mov
jne
aad
daa
ds
sbb
add
xor
cmp
inc
stos
push
push
data16
pop
js
jb
fstl
aaa
mov
adc
out
loop
push
lods
mov
fwait
and
lock
ret
add
iret
lret
lahf
ret
mov
jns
aam
mov
push
in
or
dec
inc
stc
leave
sahf
iret
int
mov
sub
push
jl
xor
aas
sub
mov
push
loop
xorl
or
jmp
push
fcoms
movsl
imul
push
out
mov
out
dec
or
cld
lock
cmc
stos
out
push
cmp
fs
jne
mov
jo
xor
jle
sbb
dec
xchg
xor
inc
leave
pop
and
and
inc
fldl
pop
int
mov
fisttps
mov
sub
addl
add
scas
shll
cmpsl
jno
adc
rcrb
into
and
aam
xchg
rolb
pop
add
bound
popf
sub
cmc
and
and
xchg
out
js
push
leave
mov
lods
sub
adc
icebp
cwtl
in
insl
js
imul
and
sub
dec
pop
cmp
and
push
push
xchg
jnp
cmc
push
mov
mov
inc
push
insb
nop
mulb
push
mov
inc
sub
in
sub
mov
test
adc
adc
mov
out
inc
jge
divl
push
out
pop
jb
pop
add
jmp
aad
repnz
in
adc
xchg
and
xor
cmp
add
jne
adc
ret
pop
xchg
pop
push
jb
sub
lods
dec
ja
inc
stc
arpl
fisttpll
imul
scas
ret
jmp
bound
mov
je
test
pop
orl
movsb
aaa
in
cli
jge
push
adc
and
loopne
mov
xchg
enter
arpl
mov
mov
je
mov
mov
jne
push
xor
fs
sub
das
cmp
pop
push
xchg
lcall
mov
cmp
sub
and
nop
jae
mov
ss
lods
inc
push
cmp
call
out
jb
pop
cmpsb
aaa
jno
rcll
aas
jecxz
or
sub
mov
out
push
ret
and
iret
testl
aaa
dec
call
gs
fsubrs
or
jle
fnstcw
sbb
lock
daa
mov
test
int
sbb
repnz
and
mov
push
push
dec
pop
mov
lret
imul
push
sahf
aas
int
fwait
lea
dec
es
xlat
pushl
mov
jle
cli
xchg
xor
mov
mov
sub
fdivs
xchg
mov
push
lahf
in
xchg
mov
push
or
dec
push
in
cwtl
in
lret
fadds
push
push
add
mov
push
inc
repz
rol
test
cmp
loopne
jge
or
dec
lds
and
cmp
out
aas
loop
data16
sti
inc
clc
mov
aas
data16
fnstenv
in
call
fucom
rcrl
xchg
lret
pop
cmc
aas
push
scas
cmp
or
test
mov
cwtl
mov
jns
out
xchg
sbb
cmp
test
std
mov
shll
rcll
sub
lods
mov
pop
lret
mov
inc
ret
jno
cltd
cs
adc
out
test
popa
add
js
iret
pop
jmp
cmc
loopne
mov
jle
jne
lock
aaa
push
ja
push
jl
lea
push
adc
jnp
jg
inc
pop
popf
int
popf
jge
pop
adc
es
push
mov
inc
xchg
pop
sub
inc
lods
cltd
pop
push
cltd
lods
sub
jne
adc
add
mov
mov
xor
inc
lahf
notl
pop
out
addr16
jbe
test
inc
push
sarl
dec
enter
stos
int3
in
mov
sbbb
lock
xchg
and
in
push
mov
repnz
sub
out
clc
inc
jecxz
fwait
aaa
pop
int3
pop
dec
adc
push
and
pop
or
rcrl
cmpsb
lods
test
pushf
rclb
jb
dec
gs
js
sub
cmpsb
pop
push
and
add
pop
stos
pop
jge
jae
mov
xor
mov
lea
or
jb
mov
sbb
into
lret
jo
xor
fldl
repnz
adc
pop
data16
ja
xor
mov
sub
lahf
mov
inc
xchg
shll
enter
xchg
cmp
dec
lret
or
fdiv
mov
add
pop
jbe
inc
jno
add
test
inc
cmp
inc
xchg
push
mov
stos
insl
pop
and
ja
jecxz
into
sbb
cmp
clc
cmc
lret
jmp
mov
insl
pop
push
sbb
ds
pop
xor
imul
in
jp
pop
ja
inc
pop
jl
mov
stos
out
mov
xor
pop
cld
rorb
arpl
sbb
call
pop
push
js
push
leave
jmp
movsb
pop
cmp
sti
fdivr
push
dec
scas
sub
out
ret
jp
lods
mov
mov
xchg
js
popf
push
sti
add
scas
mov
sbb
fsubr
lret
imul
ljmp
mov
jne
fisttpll
andb
js
pop
imul
loopne
xchg
sbb
sbb
sbb
adc
cmpsb
lods
notl
lret
sti
shl
add
jmp
shr
pop
imull
test
and
inc
inc
and
xorl
xor
repnz
and
iret
sub
or
jmp
xchg
jne
fst
mov
or
mov
mov
mov
mulb
sti
mov
les
sbb
imul
add
ret
mov
inc
ret
shll
pushf
xchg
pop
or
jge
fbld
fucom
rorl
aaa
sahf
mov
add
xchg
push
das
xchg
test
gs
movsl
dec
mov
and
mov
cmpsl
xor
add
iret
mov
add
sbb
xchg
arpl
outsl
dec
in
push
and
mov
enter
push
or
jg
in
mov
or
lock
hlt
dec
dec
jecxz
es
pushf
mov
outsb
push
push
dec
xchg
sbb
movsb
xchg
insl
mov
and
jecxz
push
push
mov
fwait
stc
add
mov
lahf
rol
pushf
jns
mov
repz
jecxz
fnstsw
stos
cmc
loope
mov
mov
sbb
push
ja
ja
ss
repz
sbb
xchg
push
add
repz
popa
jns
rcrb
imul
push
add
adc
pop
jbe
out
dec
pusha
nop
sbb
loope
ret
pusha
ret
call
clc
scas
loopne
cld
inc
and
mov
nop
outsl
fchs
add
mov
xor
pushw
xor
arpl
adc
push
adc
cltd
mov
testl
adc
insl
or
sahf
rcr
out
jns
or
daa
ret
jno
or
dec
adc
cmpsl
xor
and
and
gs
sub
test
mov
out
icebp
sbb
imul
mov
push
add
int3
imul
and
cmp
fnstsw
or
in
push
jg
cmp
sarb
ljmp
fisttpll
gs
pop
xor
aaa
aam
mov
fstl
lcall
negl
sbb
cltd
push
fwait
stos
test
add
sub
or
in
push
mov
push
notl
and
lahf
cli
fstpl
push
jne
orb
lret
sbb
shr
popa
test
pop
sti
mov
pop
and
lret
data16
jb
in
cmpsb
push
jp
inc
leave
inc
lret
cld
or
or
insb
aam
bound
inc
fstpt
jne
push
clc
push
fstpl
repnz
mov
lods
push
jl
xlat
xchg
push
pop
mov
pop
sti
mov
lret
dec
in
dec
push
inc
cmp
jb
fnsave
pop
inc
repnz
jne
or
adc
out
jp
test
mov
outsb
cmp
jmp
mov
inc
mov
loop
xchg
ja
sti
aas
insl
sahf
mov
lcall
insl
fcoms
ret
test
add
fs
xchg
cmp
inc
jl
and
mov
push
mov
push
push
pop
dec
pop
scas
xor
insl
cmc
jle
pop
lcallw
push
mov
jmp
cmp
xor
enter
mov
or
fstp
loop
aad
and
enter
out
pop
ret
in
cs
jb
dec
add
mov
cmp
je
cmp
stc
jne
and
mov
mov
popa
cmp
inc
fsubl
jbe
pop
and
push
xor
jno
fisttpll
dec
loopne
inc
xchg
test
popf
jb
shlb
aam
mov
jb
pop
je
ljmp
fprem
nop
test
jmp
popf
xchg
dec
xchg
dec
xor
add
in
fcoml
pop
pop
cmp
mov
orl
neg
test
repnz
sub
or
push
mov
loop
imul
out
inc
sar
mov
jmp
mov
dec
mov
dec
cmp
and
adc
jl
sbbl
rolb
cmp
stos
imul
fadd
test
cltd
push
xchg
xlat
add
or
movsl
mov
cmpsb
dec
ficomps
mov
daa
mov
add
inc
jecxz
jns
fnstsw
mov
ret
mov
sub
mov
jecxz
cmp
cs
or
mov
in
nop
xor
or
frstor
mov
xor
mov
test
orb
pop
dec
or
jmp
jb
aam
mov
push
xchg
mov
jl
ljmp
scas
lods
in
dec
or
push
cmc
or
xor
fs
jmp
bound
xchg
cli
call
mov
mov
mov
jmp
jns
imul
dec
add
add
sbb
xor
sub
dec
in
sbb
cmpsb
cmc
mulb
or
inc
mov
popf
out
popa
jmp
sub
add
or
das
movsb
es
inc
pop
add
out
adc
pop
jne
faddl
mov
sti
stc
sarb
in
lods
int3
xchg
jne
cwtl
aas
jo
and
or
repnz
daa
orb
lds
adc
sbb
xchg
and
addr16
shrb
in
in
jge
lret
push
in
test
scas
jecxz
dec
xorl
arpl
repz
in
adc
inc
mov
cmpsb
jp
push
push
rorl
lahf
mov
lcall
nop
ficoml
xor
pop
clc
push
imul
mov
rcrb
sub
pop
cmp
ficoms
push
sub
mov
sbb
cli
push
fisttpll
sub
push
mov
jns
add
add
xor
fisttpll
pop
int
out
sub
add
mov
or
lret
out
cmp
sub
cmp
xchg
enter
adc
pop
gs
frstor
and
test
sub
add
jmp
inc
or
inc
lock
and
sub
jg
inc
jne
jo
sub
cwtl
loopne
xchg
fwait
mov
fisubrl
pushf
fstpl
insl
cmpsb
or
int3
jl
push
aas
jb
in
in
or
adc
or
imul
loopne
jo
arpl
cmc
cmp
rcrl
push
cmp
sbb
ror
mov
inc
xor
arpl
jp
sub
pop
mov
cld
and
sub
test
add
xor
repnz
rorb
sbb
mov
clc
in
cmp
inc
lea
imul
popf
fdivs
gs
pop
aad
lcall
scas
mov
adc
cltd
xchg
cltd
jnp
loop
lds
jecxz
jne
mov
push
jp
xchg
jno
push
ret
jecxz
dec
sub
lock
xlat
paddb
and
push
pop
mov
rcll
lcall
pop
sub
pusha
cmpsb
out
push
in
cmp
subl
cmp
adc
push
adc
mov
ss
imul
mov
add
inc
mov
popa
popa
jmp
jne
dec
stos
std
xchg
ret
dec
or
mov
mov
inc
in
mov
ret
or
push
pop
cmc
mov
mov
fwait
in
mov
scas
mov
adc
pop
in
data16
mov
rclb
in
mov
mov
mov
scas
or
repnz
sbb
xorl
ret
mov
push
test
mov
lahf
clc
cmc
cmpb
fnstenv
stos
mov
scas
cmc
jae
sbb
push
out
std
and
adc
lret
xchg
jb
mov
and
dec
sub
dec
lcall
clc
mov
imul
pop
nop
pop
push
add
mov
fcmovu
insb
ss
push
and
lret
call
mov
jle
icebp
lds
aas
call
test
add
or
fsubr
add
in
jecxz
cmp
test
and
pop
mov
pop
mov
mov
push
stc
fisttpll
pusha
arpl
xchg
insb
sub
imul
pop
hlt
pop
and
bnd
sub
call
dec
cmp
fsub
jecxz
sti
add
ret
dec
pop
xchg
movsb
ret
cmp
lods
or
repz
fisttpll
mov
xlat
jbe
mov
in
shlb
cmp
int3
jns
fucomp
das
and
cmpl
dec
insl
lcall
mov
adc
pop
pop
add
cld
pop
sub
add
loopne
aas
fldl
fcmove
xor
mov
ljmp
jecxz
nop
dec
xchg
pop
inc
mov
jmp
fisttps
ss
jmp
sti
nop
fcmovu
rcr
pop
aas
jg
inc
fisttpl
cmp
push
imull
mov
fidivrl
aaa
pop
xchg
cmp
jg
push
popa
inc
je
xchg
jae
push
dec
int3
js
cmp
mov
or
sub
or
mov
fs
xor
inc
int
pop
call
sbb
mov
or
jo
shrb
adc
xor
out
lods
jecxz
xor
int3
push
cmpb
cmpsb
adc
rolb
sub
ss
push
into
stos
jae
movsb
cs
jne
lahf
and
and
sbb
mov
fchs
and
cld
out
or
mov
es
outsb
out
in
lods
mov
cli
movb
jno
out
bound
mov
mov
or
push
ja
mov
xor
ror
mov
jne
or
mov
mov
pop
inc
adc
jae
adc
cmp
mov
pop
out
push
mov
jl
sub
fsub
jb
fisubl
and
and
das
lds
mov
lret
int3
add
imul
add
insb
add
pop
es
cli
fcompl
pop
sub
push
or
dec
aad
or
cmc
out
es
into
sti
cs
stos
xor
fnsave
pushw
shrb
dec
pushf
jecxz
in
out
lods
mov
fwait
scas
pusha
cli
jno
add
or
idiv
popa
leave
push
push
xor
scas
fst
xor
cmpb
push
inc
xlat
sub
sub
and
iret
cmp
inc
push
cmp
out
dec
adc
push
pop
push
cld
dec
iret
jne
xchg
shll
lea
cmp
sub
ja
mov
mov
ja
dec
jne
sub
ret
xor
jne
pop
xchg
fldl
lcall
adc
insb
cmp
pop
or
fisubrs
xchg
shl
or
int3
pop
cmp
lea
mov
sub
pop
xchg
in
add
pop
push
ret
jecxz
and
nop
push
mov
xor
cmc
sub
xlat
and
push
cs
ret
xchg
pushf
test
lret
div
or
outsb
push
mov
pop
push
sbb
ret
pop
ss
sbb
in
adc
f2xm1
xchg
std
jbe
cmp
push
es
xor
add
or
movsb
dec
inc
pop
inc
inc
pop
fucom
jb
add
leave
arpl
dec
faddl
outsl
xchg
mov
loopne
mov
sub
rolb
pop
jns
xor
repnz
mov
and
mov
lcallw
pop
lcall
addr16
inc
mov
cltd
pusha
push
mov
xchg
mov
stos
imul
stos
cmc
push
add
icebp
sbbb
mov
mov
out
push
jno
das
cmp
xchg
xlat
pop
pop
in
adc
or
or
imul
dec
in
mov
push
fs
inc
leave
loope
inc
adc
cli
scas
mov
push
mov
popf
mov
xchg
icebp
inc
push
or
add
enter
lret
mov
jns
add
pop
xchg
xchg
inc
inc
gs
cmp
mov
add
stos
in
jmp
or
test
addr16
cltd
out
insb
and
in
mov
mov
sar
dec
fiaddl
xor
les
sub
data16
mov
inc
xlat
rcrb
stc
repz
int3
dec
scas
xlat
sub
cmpsl
push
jns
adc
dec
mov
jecxz
fcomps
and
mov
pop
ljmp
insl
jnp
adc
cmp
and
push
jb
sub
in
out
xchg
movsb
cltd
addr16
adc
nop
jae
or
stos
fisubl
gs
adc
mov
add
and
dec
and
leave
cmpxchg
jns
and
out
or
mov
or
adc
push
or
push
dec
push
push
mov
push
or
sub
mov
pop
pop
or
mov
and
adc
xor
sbb
cld
pop
das
aam
js
pop
icebp
dec
test
negl
aaa
adc
lods
push
js
jecxz
in
lock
shlb
aad
xor
lahf
sbb
xchg
stos
sub
je
jecxz
sub
inc
scas
in
jl
and
mov
fstpl
fdivrs
pop
dec
jo
sbb
xchg
ja
cmp
pop
and
popf
mov
ficomps
mov
jmp
adc
push
pavgw
jb
or
xor
fstl
push
in
repnz
pop
fmuls
mov
scas
and
cmp
mov
xor
ret
mov
hlt
test
cmp
and
fildll
aaa
mov
or
jno
mov
sbb
dec
aaa
xor
mov
dec
pop
or
shlb
cmp
repnz
mov
and
sbb
mov
pop
mov
loop
jle
lret
and
ss
rclb
xor
pop
in
sti
mov
or
jg
in
movsl
lds
jbe
fisttpll
fcmovne
je
jns
imul
pop
dec
and
icebp
xor
adc
push
dec
lcall
mov
xchg
inc
incb
xchg
pop
fistps
mov
pusha
cmp
push
lret
push
sbb
push
jle
data16
cli
add
or
jmp
cmp
mov
pop
push
fidivrs
repnz
repnz
inc
mov
sbb
jae
scas
mov
test
loop
pop
test
sbb
xlat
xor
fnsave
jne
loop
lea
jge
xor
sbb
enter
cmc
repnz
lds
adc
mov
mov
inc
pop
dec
movsb
xor
addr16
push
inc
cmp
jl
cmc
std
lahf
in
call
mov
push
jecxz
mov
inc
lahf
dec
daa
xchg
in
cli
sbb
arpl
or
pop
fwait
inc
push
fiadds
mov
mov
and
fucom
xchg
idiv
pop
jb
jbe
jmp
push
or
outsb
jne
loope
cmpsb
pop
xchg
pusha
jecxz
stos
push
add
cli
insb
jbe
jbe
sbb
xchg
loop
lock
lds
mov
mov
sub
loopne
jno
xchg
dec
dec
cmpb
in
stc
movsb
fisttpll
leave
scas
or
xor
or
outsl
mov
fwait
dec
cmp
sub
push
xacquire
negb
dec
insb
stos
je
pop
lcall
jns
mov
sbb
inc
popa
aaa
in
loope
imul
push
jge
hlt
aaa
sub
pop
dec
fstpl
in
jecxz
and
ja
fstl
pop
xor
int3
es
cld
out
pop
cmc
scas
inc
inc
add
mov
sub
jns
push
mov
popf
ja
cmp
rcrb
out
pusha
imul
ss
push
scas
repnz
in
adc
dec
jae
shrb
cmc
or
insb
lea
test
push
jmp
shlb
int3
sbb
push
js
jno
xor
bound
pop
cmp
and
in
sbb
jno
je
cmp
add
mov
ror
test
in
inc
add
cwtl
ljmp
scas
cmp
repnz
and
imul
imul
or
pop
xlat
xor
imul
dec
inc
ja
push
ja
mov
mov
pop
xchg
outsl
leave
icebp
cmp
aaa
je
aas
jne
xchg
loop
push
lret
in
cld
arpl
mov
cmpsb
ficompl
jae
pop
pop
iret
fimull
jl
or
testb
jecxz
outsl
outsb
movsb
out
js
pop
je
push
daa
in
test
leave
jne
cmp
sub
xchg
sub
ss
xchg
inc
mov
inc
push
sbb
xchg
inc
dec
jmp
in
mov
pusha
stc
mov
inc
fildl
xor
fdiv
lods
popa
mov
add
push
mov
shll
mov
outsb
lret
sti
jne
push
add
out
push
jns
adcb
xor
scas
dec
inc
jne
mov
xorl
ljmp
jmp
sub
push
add
fsubrl
inc
and
pop
push
pop
idivl
orl
jle
jb
mov
jmp
ds
xchg
add
jb
lret
aam
mov
push
mov
push
push
mov
jecxz
add
sub
mov
sahf
icebp
dec
adc
loopne
cmp
xor
cmc
jno
cmp
inc
sbb
iret
jb
es
cmp
fsts
sbb
stc
pop
idivl
jnp
pop
arpl
jecxz
sub
je
lods
jb
add
and
jne
in
out
mov
ljmp
roll
xchg
mov
outsl
fisubrl
pop
lcall
push
jg
pusha
arpl
mov
arpl
push
add
mov
repz
aaa
decb
test
adc
pop
mov
or
jge
jno
data16
cmp
jo
add
cmp
orl
inc
arpl
mov
test
pop
int
stos
pop
sub
nop
loop
cmp
int
out
std
or
gs
push
sbb
dec
pop
inc
movsb
daa
push
xchg
xchg
pop
and
mov
scas
xor
pop
and
stos
inc
jbe
or
stos
jp
adc
sub
pusha
jns
imul
mov
mov
sbb
fstl
adcb
or
insl
cmc
popf
ret
mov
jb
jmp
bound
ss
mov
xor
in
add
jle
or
cmp
or
repz
jno
dec
or
movsl
adc
xchg
aam
mov
dec
mov
mov
mov
jae
jb
push
cmp
mov
fwait
inc
pushf
ljmp
sbb
sbb
iret
in
dec
pop
push
jle
push
sub
or
push
int3
push
cmc
xlat
and
in
jns
xor
int
mov
or
or
cmpsb
or
sub
dec
xchg
in
fdiv
cmc
lret
mov
dec
jmp
mov
pop
scas
xor
jne
xchg
cmc
cmp
test
pop
push
std
bound
xchg
xor
add
add
subb
ljmp
inc
push
out
sub
clc
ffree
mov
cmp
fcomp
pop
sbb
insb
int
push
mov
or
icebp
jb
repnz
mov
inc
faddl
sti
push
inc
push
popa
mov
out
mov
frstor
ret
add
mov
jmp
inc
test
pop
jmp
sub
mov
add
mov
sahf
lcall
push
jae
repz
cmp
add
push
shll
jbe
int
jne
cmc
dec
mov
jmp
and
pop
adc
ja
pop
sub
and
pushf
jne
imulb
aam
add
xlat
fldl
scas
push
inc
pop
rcr
lea
sti
lods
js
and
or
add
dec
sbb
push
std
clc
pop
fidivrl
clc
push
jb
mov
neg
jecxz
push
pop
pop
jecxz
pop
in
jecxz
mov
orl
arpl
push
push
and
ds
lcall
pop
xor
inc
cld
push
inc
dec
test
fucom
mov
push
addr16
call
lret
add
sub
ljmp
mov
les
add
dec
inc
idivl
jp
test
jecxz
mov
ljmp
jne
rcll
aam
cmc
cmp
ret
out
add
dec
jmp
push
into
sub
add
inc
push
mov
or
js
adc
cmp
sar
add
imul
testl
jmp
xor
push
sbbl
jne
jge
out
mov
cs
sub
pop
or
out
stos
xor
push
in
bnd
mov
jbe
out
push
mov
ret
inc
movsb
jae
adc
push
push
pop
or
das
or
and
lea
addr16
pop
add
lea
sub
and
cmpsb
jmp
lods
cmp
cmp
popa
sbb
nop
xor
js
shr
mov
out
imul
subb
jl
dec
pop
stc
aaa
cmp
frstor
push
in
sahf
or
mov
dec
sbb
flds
adc
mov
mov
sub
xchg
loope
es
jmp
adc
dec
decb
mov
sub
push
lea
and
fisubrs
js
movsb
clc
push
sbb
dec
in
test
push
scas
mov
negl
mov
das
stos
stc
imul
sub
lock
aas
pop
movsb
popf
dec
cmpsb
test
mov
es
inc
call
shll
push
xor
test
iret
mov
repz
ss
aam
test
cmp
or
mov
pop
dec
dec
jns
jns
outsl
lock
ja
sbb
push
cmc
insb
pop
push
and
pop
lret
das
push
mov
or
mov
push
push
pop
mov
dec
lcall
in
dec
mov
lods
les
sbb
xor
jg
imul
out
bound
shll
cmpsb
mov
cmpsb
mov
or
push
cli
jge
jne
and
push
pop
jno
add
push
psubd
stos
mov
add
leave
outsl
mov
cmpsl
and
and
xchg
sub
rol
xchg
add
cmp
fstpt
pop
mov
xor
dec
mov
sarl
mov
or
sub
adc
aas
sahf
inc
mov
jae
and
rcrb
adc
pop
pushf
in
sbb
int3
sahf
fisttpl
movsl
fwait
pop
sub
pop
arpl
push
dec
pop
repnz
fsubrl
lret
hlt
mov
rcr
outsb
arpl
jo
sub
hlt
jb
stc
shrb
or
xchg
inc
xchg
cmpsb
mov
movsb
cmp
jle
xor
into
rolb
insl
test
inc
lods
rolb
xlat
inc
push
out
pop
cmp
nop
out
int3
movsb
shrb
mov
imul
lock
xchg
js
push
in
rcll
mov
push
or
cmp
scas
bound
push
in
das
push
jmp
mov
xchg
cmc
xchg
repz
les
jmp
frstor
pushf
adc
push
pop
cmc
push
add
push
and
jne
dec
push
sub
sub
cmp
or
in
sub
xor
mov
cmp
gs
mov
inc
fucom
pop
mov
out
adc
mov
orb
cmpsl
fstl
ret
and
inc
mov
or
cmc
movsl
mov
inc
in
dec
lock
repz
xlat
cld
fdivl
cmp
xchg
cmpsb
fdivr
data16
pop
out
aaa
push
mov
in
out
add
pushf
in
or
mov
push
xor
stc
enter
lds
ljmp
ret
mov
xlat
dec
aaa
js
or
push
and
ficoml
aas
gs
jbe
lock
pop
divl
inc
dec
ss
outsl
cmc
scas
mov
cmpsb
orb
xchg
xlat
enter
jnp
leave
cwtl
pop
insb
fcmovu
stos
xchg
inc
mov
hlt
lahf
mov
repz
addr16
pop
jns
push
cmp
daa
and
mov
pop
pop
sbb
ja
call
fnsave
jp
mov
sub
sbb
shlb
lds
sahf
leave
jle
mov
or
cmp
pop
cmpsb
out
hlt
addb
push
mov
pop
jecxz
add
enter
mov
sbb
mov
jge
scas
out
test
jp
push
mov
leave
in
adcl
jp
in
mov
rcl
pop
mov
into
jbe
icebp
jno
fdivl
insl
push
sbb
in
fwait
push
push
scas
push
pop
xchg
mov
cmp
mov
jo
daa
lods
hlt
sub
into
aaa
or
mov
jmp
sub
inc
repnz
cmc
ljmp
add
xor
mull
xor
cld
jne
sbb
jge
repz
jmp
adc
push
xlat
fisubl
dec
jnp
xchg
xchg
push
insl
push
cmp
jmp
mov
adc
jbe
je
hlt
fisttpll
lods
jb
jp
fs
sub
lods
xchg
jnp
pop
cmc
push
xlat
lret
jle
loop
movsl
jne
les
jecxz
mov
add
adc
shlb
icebp
mov
cld
fbstp
rolb
imull
mov
orl
jo
jne
mov
dec
fcoms
scas
or
pop
cmpsb
push
fnstsw
inc
icebp
and
xor
nop
arpl
jb
push
cmc
arpl
pop
adc
push
std
pop
add
sarb
mov
pusha
add
mov
jp
cli
jmp
icebp
xor
iret
in
jne
push
pop
inc
fdivs
movsb
xor
repz
in
test
jb
mov
ja
mov
in
fwait
jl
int
or
push
js
hlt
mov
cmc
jmp
inc
xchg
pop
sbb
lea
je
jo
push
fdivs
dec
movsl
out
mov
lcall
push
into
es
pop
mov
loop
push
jmp
add
mov
aad
dec
push
in
nop
in
mov
int
adc
stos
xchg
ss
push
ret
or
mov
mov
or
sub
mov
inc
add
jo
fcmove
sub
shr
cmp
call
outsb
insb
movsb
cs
test
xor
out
lock
xchg
in
jp
or
insb
cmc
out
pop
dec
je
sbb
outsb
sbb
fadds
pop
cmp
addr16
std
clc
add
negl
test
mov
pop
or
int
cld
pop
outsb
inc
inc
adc
xor
nop
pop
sub
push
dec
daa
jo
jbe
outsb
loopne
fwait
nop
and
bound
into
xchg
jbe
xchg
mov
push
mov
cltd
sbb
fldl
push
packsswb
icebp
mov
mov
fsubrl
pop
aaa
or
pop
leave
push
iret
and
add
test
imul
jae
cmc
push
es
jge
sbb
rep
notb
jae
cmp
sbb
jo
cld
aaa
imul
inc
jbe
pop
mov
dec
in
aam
inc
mov
lcall
cwtl
mov
xor
sahf
lea
lcall
insl
fstl
adc
xor
popa
adc
rorb
mov
fstpl
test
mov
inc
int3
sub
jb
and
outsb
fsubrl
std
lea
cltd
adc
push
mov
loope
js
xor
fnsave
stc
mov
hlt
dec
movsb
inc
dec
or
jb
and
fidivrs
lock
stos
nop
sub
shl
cwtl
jb
xor
and
xor
xchg
adc
mov
cmp
lods
in
es
cmp
pushf
iret
movsb
sar
pop
xchg
push
and
ret
int
adc
mov
stos
hlt
push
faddl
stc
jns
pusha
or
sbb
ljmp
jbe
ret
icebp
popf
jno
pop
rorb
or
jmp
push
xchg
jae
cmp
and
div
push
adc
jmp
dec
loopne
xchg
push
je
jbe
mov
mov
out
lea
ds
xor
and
sbb
fldln2
and
les
mov
inc
mov
shrl
mov
popa
insl
ja
xor
push
sbb
jno
and
orb
or
xor
inc
lcall
repz
fidivrs
js
xor
and
and
icebp
cmp
xchg
popf
call
mov
in
jmp
inc
sbb
adc
shll
add
push
pop
xchg
mov
jp
sbbl
imul
frstor
lea
or
jae
pop
loop
cmp
push
aad
mov
int3
xor
stc
add
lods
jmp
shrl
daa
mov
cmp
inc
sub
jns
dec
int
mov
xchg
push
xor
or
jb
dec
fstl
and
jb
lods
xor
sub
addl
sbb
fidivl
mov
icebp
aad
adc
in
pop
in
stos
frstor
pushf
dec
dec
pop
pop
xor
sub
fsubs
imul
testb
fldcw
or
icebp
aas
jp
out
cltd
mov
and
or
loop
arpl
scas
inc
fldl
add
jb
adc
aam
lods
lods
push
lcall
jb
in
cmp
fnstsw
mov
sbb
sub
mov
cmp
cmpsb
jb
in
dec
and
adc
ja
cmpsl
sbbb
xchg
mov
out
sti
in
test
ja
pop
aam
mov
sub
xor
mov
mov
aad
cmp
sub
push
xor
ror
mov
and
and
dec
mov
mov
add
sar
int3
adc
pop
add
and
inc
dec
lcall
in
jge
sub
test
or
and
out
mov
aas
into
push
mov
or
sub
pop
outsb
pushf
js
cmc
or
pushf
iret
mov
sbb
jbe
test
imul
stc
pop
mull
jle
pop
xchg
movl
jecxz
mov
ja
mov
or
ficoml
es
lahf
mov
and
add
hlt
frstor
pop
and
loopne
neg
jns
stos
rol
dec
mov
jae
push
popa
movsl
sbb
add
pop
dec
mov
stc
popa
testb
xor
andb
push
jb
in
aas
out
rcrl
iret
rorl
jnp
pop
xchg
cmc
outsl
enter
jecxz
pop
add
adc
fnstsw
int3
adc
jecxz
out
es
lock
out
fistps
es
and
add
in
rorb
push
inc
jnp
pop
jecxz
mov
pushf
pop
inc
pop
add
jno
stos
sti
in
enter
icebp
and
ss
push
ds
cld
push
stos
xor
adc
scas
dec
push
ss
sti
ljmp
insl
inc
mov
adc
inc
jmp
jmp
cld
adc
insl
cli
loop
cmpl
push
mov
mov
repnz
push
cs
jno
jne
mov
jae
cmc
jecxz
ds
in
js
add
hlt
mov
xor
fstpl
mov
arpl
cmpsb
push
xor
sbb
fsubrp
pusha
xchg
adc
fcoml
in
inc
cwtl
sbb
ficompl
jbe
filds
mov
lea
sbbl
mov
cmp
sbb
cmp
cmp
imulb
push
cmp
sub
or
xchg
popa
lods
or
push
push
inc
pushf
push
repz
sbb
shlb
cmpsb
adc
shrl
push
sbb
enter
cmp
cmpsl
ss
outsl
xorb
mov
sbb
xchg
xchg
dec
add
fistpl
scas
lock
pop
pop
out
loop
mov
jl
adc
cmp
addr16
cmp
outsb
and
int
jg
sub
cmpsl
sbb
xlat
sahf
out
addr16
cmpsl
xchg
sbb
jo
rorl
push
lods
cld
mov
in
repz
pop
mov
mov
add
sbb
sub
jnp
cli
rcrl
mov
jnp
repnz
scas
rcr
fnstenv
rcrl
orb
rcrb
in
pop
inc
scas
push
int
xchg
outsl
js
sub
pop
mov
xchg
imul
push
adc
cs
adcl
xchg
xchg
or
adc
cld
fs
lods
cmp
jecxz
xchg
or
push
loope
test
int3
and
daa
push
jp
xorl
cmp
cmp
xchg
sub
push
adc
cmp
in
aad
dec
xor
mov
bound
jb
xchg
mov
nop
in
mov
mov
imul
aad
xchg
rorb
push
repnz
test
jb
mov
sub
xor
jo
jecxz
enter
lds
jo
push
add
jp
dec
sahf
dec
adc
pop
fst
inc
insl
ss
gs
cmc
loopne
in
std
lcall
clc
xor
push
pop
cmp
add
insl
rcrb
or
xor
jb
cmc
imul
je
out
mov
pop
xchg
sub
lret
pop
movsb
into
pop
lods
jp
fiadds
data16
pop
push
mov
sahf
rcrb
jl
push
inc
call
shrb
adc
test
adc
movsb
out
rcll
inc
mov
jle
lahf
lds
iret
fwait
cmpsl
or
mov
push
std
out
fdivrs
mov
add
ja
cmpsb
adc
inc
movsb
aaa
std
pop
mov
xchg
aam
adcb
cs
dec
mov
ret
mov
das
xorb
nop
ror
int
xchg
pop
andb
and
mov
xor
lret
pop
sahf
or
adcb
xor
lahf
xchg
stc
and
int3
mov
rolb
add
jp
push
lods
in
mov
adc
in
ret
std
jge
sbb
and
jl
jmp
jns
jp
repnz
pop
mov
pop
dec
bound
in
test
xlat
pop
bound
sbb
xor
mov
scas
shlb
mov
rcrb
sub
rol
push
push
ljmp
cmp
je
in
xor
aaa
hlt
lods
cli
adc
jns
jl
in
mov
sub
enter
leave
popf
and
mov
lahf
repnz
ret
out
es
sbb
into
pop
lahf
cmc
and
xor
jecxz
push
fdivrs
or
jmp
push
ds
stos
daa
cmpsb
lret
jnp
xchg
cmc
mov
sbb
mov
pop
cmpsl
shl
dec
dec
repnz
jg
pop
xor
in
adc
xor
cmc
jb
xlat
add
pop
cmpsb
out
cltd
jne
xchg
and
lock
lcall
in
leave
lcall
mov
mov
or
mov
fsubrs
cmp
adc
mov
xchg
jae
stc
scas
mov
subb
jne
sbb
jb
notl
filds
or
orl
addr16
cwtl
mov
sub
divb
lahf
fwait
or
dec
imul
fst
sbb
int
and
mov
xchg
lcall
pushf
or
icebp
adcl
aam
repz
and
pop
push
cmp
and
aam
push
jmp
xchg
mov
es
push
lock
hlt
pop
out
shll
cld
xchg
xor
push
ljmp
pop
stc
push
push
cmp
mov
inc
adc
lods
add
inc
push
add
xchg
pop
adc
pop
pop
in
add
jle
flds
pop
pushf
decl
dec
ja
fistpl
out
movsb
clc
lock
test
push
dec
or
arpl
divl
mov
mov
lcall
or
fnstsw
ret
out
mov
outsb
lret
in
jg
mov
dec
int3
cmpsl
push
leave
mov
push
popfw
mov
movsb
mov
arpl
pop
ja
mov
out
daa
inc
push
shll
data16
pushf
sub
add
cmc
hlt
pop
outsb
lret
or
fiaddl
jo
fisttps
inc
rcrl
push
std
jae
cmc
jl
jp
push
jne
jne
fisttpll
mov
scas
push
fstps
dec
mov
sbb
push
adc
notl
and
scas
sub
shrl
mov
aad
mov
fsubrl
das
popa
and
dec
sub
push
jne
adc
push
jp
cli
imul
daa
sub
lret
adc
or
sub
pop
pmulhuw
add
call
fidivrs
getsec
xchg
jb
out
mov
ja
jns
mov
lods
rolb
movsl
inc
add
es
outsl
mov
or
pop
aas
rcr
push
mov
jae
or
push
sbb
imul
push
dec
imull
sarl
jae
add
lods
in
test
cs
sbb
pop
loope
mov
icebp
notb
cmc
stos
sub
add
jmp
fisubrl
ret
test
fsubs
shlb
mov
cmp
repz
fcomip
sar
in
cltd
mov
iret
add
addr16
sub
mov
ljmp
loopne
xor
xor
out
cli
idiv
daa
jp
fstl
dec
mov
mov
jbe
dec
in
dec
cmp
scas
lret
add
mov
rcrl
mov
cmp
emms
and
pop
jl
sti
dec
add
add
fmul
popa
mov
or
mov
xchg
pop
jno
add
ja
mov
mov
scas
xchg
mov
popa
mov
add
nop
in
ret
push
mov
and
cmpb
in
fstpl
push
mov
push
jmp
popa
pop
lcall
cld
pop
flds
aam
dec
in
lock
mov
cld
pop
dec
pop
and
in
pop
sub
xchg
aad
adc
dec
sbb
jo
pushf
dec
in
rorl
cli
xchg
pop
movsl
or
nop
test
movsl
je
mov
mov
rcl
cli
mov
mov
pop
push
mov
rcrl
pop
ljmp
sub
mov
stos
cmc
jae
add
mov
dec
cmp
rcr
jnp
jae
cmc
int3
xor
ljmp
jno
jecxz
cmpsb
pop
sub
frstor
int
adc
icebp
jp
imul
out
sub
stos
rcll
mov
andb
es
in
dec
jbe
xchg
ds
jecxz
jae
push
fmul
test
int3
dec
xchg
dec
and
xor
nop
incl
out
out
jb
xchg
adc
pushf
xor
ss
and
fisubrl
cmp
aam
shl
fcos
sbb
outsb
mov
outsb
push
or
ss
jne
ret
push
push
icebp
negl
faddl
cld
mov
cmp
test
mov
dec
es
out
jb
int3
or
push
xchg
mov
movl
fmul
fldcw
push
mov
das
push
add
testb
in
dec
sbbl
icebp
push
push
pushl
les
sub
push
sbb
push
pop
clc
jns
aad
cli
ja
mov
pop
cmc
lock
mov
lret
sub
jl
lods
jp
dec
xchg
outsl
fiaddl
in
sahf
pop
div
cmp
dec
mov
nop
mov
cmpsb
mov
jg
addr16
cmp
xor
test
fs
mov
ret
and
or
mov
cmpsl
pop
adc
rorb
shr
inc
jecxz
lahf
jne
stos
roll
mov
std
cs
and
adc
inc
in
and
mov
arpl
inc
lcall
shll
xchg
or
mov
scas
and
inc
addr16
mov
fnstsw
adc
out
fucomip
xchg
aas
negl
test
xchg
stos
jmp
insl
pop
mov
pop
sbb
scas
scas
loop
vmovsldup
mov
insb
xchg
add
test
test
ja
outsb
add
jg
pop
xchg
sub
sub
sbb
add
jns
rcll
out
cltd
mov
mov
pop
cmp
pop
cltd
cmpsb
je
cmp
mov
push
mov
rcll
rclb
shll
out
cmc
dec
push
and
add
cmc
scas
clc
addl
das
mov
arpl
jbe
jg
stc
mov
fisttpll
lock
xchg
mov
sub
xchg
push
popa
lret
mov
dec
inc
movsb
jp
in
test
mov
sbb
push
loope
inc
adc
xor
orb
push
jp
test
mov
in
test
cmc
cwtl
push
jmp
in
mov
stc
test
cwtl
in
mov
xlat
in
inc
jp
stos
lcall
jb
xchg
out
sbb
ds
loopne
inc
outsw
xorl
jae
or
test
aaa
dec
jmp
inc
jmp
or
arpl
adc
imul
sub
jmp
mov
jmp
jmp
lods
push
out
enter
cmc
popa
rcrl
stos
add
cmp
incl
rorl
pop
enter
cmc
std
sub
fwait
add
aam
out
sub
in
dec
adc
dec
push
xor
inc
add
ret
push
cmp
dec
cli
and
push
push
push
xor
cli
sbb
sti
fs
test
jb
push
dec
jle
sbb
xchg
dec
add
mov
cld
push
stos
outsl
or
cmpsl
pop
jno
outsl
sti
jecxz
mov
sub
iret
mov
fadds
xor
lock
pushf
repnz
xor
inc
jne
push
in
idivb
adc
and
roll
mov
ret
cmp
scas
mov
sti
and
in
in
and
iret
cld
and
dec
xchg
mov
push
fisubrs
pop
push
add
movsb
mov
fbld
sub
mov
dec
and
push
jno
jle
sahf
js
imul
add
cmc
test
cmp
inc
inc
jmp
lret
mov
push
mov
xor
jp
xor
and
cwtl
lds
mov
scas
lds
ss
mov
mov
pop
popa
loopne
leave
push
sarb
jae
rorb
jb
jmp
mov
sarl
inc
inc
das
pop
imul
cmc
test
hlt
cmp
test
jb
fstl
adc
sbb
mov
push
std
mov
sti
ljmp
xlat
add
inc
and
test
gs
and
sbb
daa
stos
aaa
jmp
repnz
jnp
fstl
jae
mov
add
clc
push
sti
je
dec
xchg
and
leave
mov
cmpsb
stos
push
push
pop
sbb
out
cld
int3
daa
mov
hlt
lea
xlat
std
jns
in
ficompl
jl
push
and
es
xor
jae
or
cmpsl
das
inc
nop
fs
adc
fsubrp
testl
push
das
insb
dec
or
adc
hlt
aas
mov
adc
testb
sbb
ja
cmp
and
cmp
push
shl
add
nop
bnd
or
sub
xor
fcmovnu
pop
push
ja
sub
pop
xchg
mov
cmp
testb
fstl
xchg
fstp
pop
in
push
decb
mov
add
scas
movsb
jne
shlb
sarl
dec
sub
mov
or
mov
push
cmpsb
rcl
push
sbb
in
dec
inc
jmp
gs
lcall
bound
add
rclb
lock
rcrb
sbbl
pop
cmp
popa
sub
dec
adc
xchg
ret
ret
mov
jp
cmp
mov
or
cmp
mov
in
fstl
ljmp
pop
xor
push
or
in
sub
rolb
stos
jno
push
push
jb
pop
repnz
lret
fldl
cmp
jnp
xorb
shrb
adc
cmc
mov
and
jo
and
xchg
insl
daa
enter
imul
jle
pop
mov
scas
add
xor
fdivrl
cld
mov
jecxz
mov
sub
sbb
cmpl
and
mov
fstpl
and
out
or
es
cmpsl
out
cmc
jbe
lret
ljmp
xchg
ror
push
push
fcompl
in
sbb
imul
ljmp
scas
mov
jo
jns
out
loopne
push
push
outsl
xor
in
insb
mov
in
xor
pop
xor
pop
mov
inc
loop
mov
int
mov
mov
int3
jb
push
cmp
pop
and
jg
cmp
ret
pusha
int3
scas
sub
mov
popf
jmp
jb
mov
xchg
jmp
xchg
ret
repz
pop
divl
pop
cmpsb
aad
inc
adc
xor
mov
cwtl
push
and
adc
xor
ja
out
xor
inc
mov
add
dec
paddusw
jmp
js
mov
adc
xor
sub
inc
sub
jnp
and
push
cmp
rclb
push
add
lret
pushf
sbb
jecxz
sub
test
fabs
sub
mov
orb
or
out
cmpsl
aaa
sarb
xchg
cmpsl
ret
push
push
add
jno
xchg
mov
or
out
sbb
stos
cmc
lret
and
add
jnp
jg
pop
in
je
rcrl
jmp
or
mov
out
vpmaxsw
mov
sbb
test
push
dec
lret
lds
loop
es
mov
fwait
mov
push
test
pop
sbb
jg
test
mov
loopne
jns
sbb
xlat
sub
fcoml
testl
xor
fwait
or
cmp
lock
fisttpll
push
mov
out
push
jle
popa
dec
lods
scas
jl
sub
xor
jno
inc
jne
push
stos
ret
into
mov
jp
out
icebp
and
mov
int
notb
pop
sbb
int3
mov
cltd
cmc
jno
pop
scas
sub
jl
cmp
pop
add
pushf
in
lcall
leave
aaa
pop
mov
add
clc
andb
push
clc
int3
sub
ficomps
sub
mov
fnsave
ja
push
js
lahf
shlb
rorl
filds
mov
mov
imul
jmp
xchg
shl
or
pop
pop
int
jb
aaa
cmc
inc
pop
ficoml
imul
iret
jno
das
sar
mov
test
push
adc
test
xchg
mov
aad
data16
mov
data16
mov
inc
lock
jne
in
aaa
insl
in
and
cmp
xchg
rolb
jle
xlat
lret
jnp
cmp
sahf
xchg
nop
pop
add
repnz
add
mov
ficoms
or
jbe
fwait
pop
test
and
jne
adc
xor
nop
clc
cmpsl
outsl
arpl
pop
aam
jmp
inc
es
lods
mov
and
neg
pop
or
cmc
xchg
add
je
pop
inc
fidivrl
mov
fsubrp
stos
aaa
in
int3
std
mov
out
bswap
mov
int
clc
incl
or
aaa
jne
test
cli
pop
jnp
push
xor
jo
fnstsw
mov
push
push
jmp
mov
mov
mov
mov
stos
lock
inc
fwait
sarl
imul
int3
iret
sbb
mov
lahf
sti
in
cs
scas
pop
sub
fcomps
push
pop
cmc
mov
dec
rorl
lea
nop
lock
out
sbb
push
jp
pop
inc
xchg
jb
pop
xchg
dec
xchg
cvtpi2ps
xor
in
push
std
push
out
aas
stc
mov
aaa
jecxz
or
mov
mov
orl
icebp
fisttps
int
es
hlt
fisubs
xchg
out
ret
sbb
xor
cs
xlat
xchg
push
in
stc
dec
aaa
dec
pop
divl
cltd
xchg
les
cli
mov
sub
sbb
je
sbb
pop
jmp
or
popa
ja
aad
cltd
jne
mov
fistps
jecxz
lret
imul
cmpsl
fsubr
sbb
ret
rcrb
sbb
jns
cmp
mov
imul
push
inc
icebp
jle
data16
xchg
stc
mov
or
cmp
xchg
push
add
add
sub
mov
push
ja
out
lods
insl
addl
mov
push
dec
add
add
xchg
daa
mov
sbb
in
jmp
pop
sub
fimuls
push
mov
pop
mov
pop
fucom
xchg
mov
or
jbe
arpl
dec
test
cli
ds
outsl
shrl
xchg
icebp
mov
sbb
xor
test
xor
jg
mov
xchg
xchg
imul
loop
jae
mov
aaa
dec
jne
sub
fldl
sub
sub
cli
sbb
or
jmp
sub
adc
and
divl
jae
xchg
out
insl
sti
dec
push
cmp
push
mov
mov
xchg
lds
mov
mov
int
ds
enter
pop
shlb
lahf
in
in
mov
xor
jle
shlb
inc
mov
xchg
mov
mov
xor
xchg
mov
push
mov
cmc
aas
lock
lret
and
jns
add
stos
test
sbbl
in
and
aad
nop
in
and
mov
adc
jns
mov
push
lcall
out
scas
mov
pop
or
ret
adc
adc
adcl
cwtl
lret
loope
dec
adc
imul
loopne
fisttpll
shrb
clc
dec
sbb
mov
cmp
add
dec
mov
sub
jbe
push
mov
adc
leave
push
adc
pop
mov
ret
xor
es
ss
sbb
and
ja
and
or
push
and
jl
mov
jb
cmc
sbb
dec
mov
cmc
sti
lods
adc
mov
insb
fdivl
xlat
mov
flds
cmpsl
jmp
scas
sbb
jne
ss
mov
sub
fs
mov
fdiv
lret
cmp
ss
les
scas
cmp
ja
pop
inc
add
rcrb
aaa
jmp
mov
pop
dec
nop
fcoms
sbb
shll
adc
stos
push
cmc
jl
cwtl
or
frstor
mov
or
pop
xchg
mov
lea
aam
sub
stc
lods
cmp
mov
or
mov
sbb
icebp
cltd
outsl
mov
and
in
dec
push
rorb
dec
inc
jbe
cmp
ret
repnz
xchg
insb
insl
mov
inc
mov
scas
into
pop
repnz
sar
jo
pop
movsl
lcall
or
out
mov
mov
mov
mov
movsl
xor
push
xorb
and
xchg
jo
xchg
lret
add
testb
xchg
mov
gs
test
stos
adc
bound
jb
fdivs
pop
mov
or
jle
jnp
xor
push
stos
add
or
bound
xchg
mov
xchg
pop
xor
fmuls
cwtl
pushf
xchg
int3
idivl
movsl
or
mov
leave
ss
mov
add
sub
cltd
in
inc
push
jmp
out
mov
fstpl
push
test
scas
add
jp
incb
subl
in
pop
dec
dec
hlt
rorl
cmc
jno
pushf
movsb
dec
cmp
pop
scas
push
loop
fstl
cwtl
icebp
popf
ss
cmp
std
in
outsb
add
xor
faddl
shr
les
mov
sub
in
dec
test
cmc
and
lahf
sub
dec
sarb
jne
lcall
jecxz
and
adc
icebp
xchg
push
lret
movsb
xchg
mov
not
mul
aaa
ficoml
adc
jmp
fdiv
and
adc
jp
dec
loopne
in
add
gs
and
inc
les
fistpll
das
add
cmp
mov
flds
jp
add
sub
xlat
sti
dec
add
add
cmp
loope
and
outsl
cmp
xchg
ficoml
and
xchg
sbb
ds
lcall
push
push
xchg
xchg
ja
and
or
sub
or
mov
iret
shrb
jae
and
jbe
sub
int3
lods
mov
cmp
fisubrs
sti
es
movsl
inc
fdivrl
movsb
jle
or
cmp
inc
outsl
fldz
ret
orb
inc
and
iret
push
push
or
xchg
xor
out
ret
es
sub
mov
nop
push
jecxz
iret
or
ja
frstor
xor
lods
xor
cmp
add
fnsave
push
maskmovq
negl
sbb
adc
jns
jbe
sbb
ljmp
and
stc
sahf
jo
nop
insb
sub
cmpsb
dec
loope
mov
into
in
mov
and
add
mov
mov
shrb
icebp
clc
ds
jae
pop
bound
adc
dec
push
fcomi
mov
mov
add
mov
outsl
add
or
jb
filds
push
mov
in
enter
iret
insl
add
push
push
gs
add
dec
ret
add
xchg
xchg
repnz
xor
xor
loop
sub
dec
cmc
sub
scas
pusha
lock
loopne
pop
jmp
ds
sub
rclb
pushfw
loop
push
fildl
fmulp
mov
sub
pop
dec
xor
jmp
push
inc
das
aaa
in
inc
dec
ja
jle
and
std
fldcw
lock
push
jnp
fcompl
rcll
fldpi
cwtl
inc
hlt
aad
jne
mov
mov
adc
xor
arpl
sbb
pop
mov
sbb
jne
xor
dec
scas
mov
mov
movsb
dec
es
jmp
cmp
arpl
jmp
jl
decb
sbb
call
mov
std
xor
mov
cmpl
stos
pushf
out
sarl
mov
fucomi
mov
test
sub
leave
fst
mov
dec
gs
jns
push
arpl
mov
iret
add
mov
jns
cmc
push
sub
and
leave
xor
ds
rcrb
scas
daa
stos
stos
or
sub
pop
test
sbb
sbb
fdivl
shlb
ret
insl
int3
sarb
and
and
mov
mov
jp
sbb
out
xchg
inc
les
jns
loop
pushf
xchg
and
cmc
rcll
fnsave
icebp
mov
fidivl
mov
xor
cmp
lret
out
xchg
dec
cmc
mov
sub
pop
daa
add
xor
xor
push
orb
mov
leave
add
dec
add
jmp
add
xchg
mov
out
and
pop
insb
out
xor
push
stc
sbb
mov
pop
cli
jno
or
dec
pop
push
out
in
xchg
jge
jbe
cmp
dec
jb
pop
rorb
lret
and
xchg
xchg
call
mov
stos
loope
int3
out
pop
mov
jne
pop
jns
fldl
clc
lahf
ret
jns
lret
hlt
lods
jne
loopne
movl
frstor
jecxz
jb
mov
addr16
aaa
outsb
in
push
inc
out
push
or
mov
add
xor
imul
dec
les
dec
subb
sub
out
sbb
push
in
xchg
mov
addr16
lds
xchg
shrb
jns
mov
xchg
cmpsl
mov
lahf
or
mov
push
imul
fwait
xchg
nop
or
or
inc
fmul
decb
fs
stos
add
sub
fisubrs
imul
inc
push
mov
inc
mov
or
imul
xchg
jl
arpl
inc
xlat
int3
jns
mov
pop
sahf
and
add
mov
icebp
cmc
jmp
fsubs
adc
pop
jg
das
and
mov
sbb
sarb
std
fists
arpl
mov
insb
ror
xchg
mov
ja
mov
sbb
ret
or
daa
push
or
lea
mov
add
xchg
ret
fucom
leave
push
stos
cmc
push
ljmp
sub
fs
xor
xchg
ret
mov
fisttpl
dec
xchg
fidivrs
scas
cmp
subl
popf
dec
jne
mov
call
pop
pop
xchg
cmc
lret
sub
mov
insl
insb
frstor
jl
rclb
inc
cmp
xor
xchg
jmp
fcmovu
pop
mov
fistpl
cmc
adc
push
out
stos
out
jb
adc
fbstp
lahf
loopne
xchg
push
testl
ret
jecxz
cli
call
jmp
out
cmp
outsl
ja
cmc
out
stos
push
add
jl
xor
pop
sti
in
xchg
push
jns
xor
repnz
mov
loopne,pt
push
repz
les
movsl
rclb
jnp
sahf
xor
add
push
push
push
scas
jae
xchg
jo
in
mov
imul
aas
push
inc
mov
pushl
fcomp
pop
pop
adcb
mov
sti
mov
push
cmp
push
popf
iret
mov
repz
jns
pop
xchg
mov
jp
frstor
sbb
mov
rorl
repz
jne
push
imul
jl
add
xchg
xchg
ja
in
andb
mov
scas
mov
mov
xchg
in
xor
xor
pop
nop
xchg
fistps
test
cld
jecxz
xchg
jo
out
ss
loope
pop
or
adc
or
mov
pop
pusha
outsb
xchg
push
dec
mov
fdivrl
push
fldl
xlat
repz
repz
jmp
mov
cmp
das
and
mov
jle
aad
mov
pop
and
or
scas
adc
push
mov
xlat
mov
arpl
rcrl
xorl
mov
in
orb
mov
sti
repnz
iret
pop
mov
cs
inc
lds
leave
or
mov
pop
jno
jp
inc
push
mov
jae
cmp
inc
cld
out
mov
fstp
stc
movsl
outsl
test
or
sti
add
add
adcl
jbe
mov
in
sub
pop
mov
in
flds
or
jg
sbb
cld
pop
lcall
scas
adc
push
in
insb
and
xor
push
js
pop
or
sbb
push
pop
daa
pusha
inc
js
pop
sti
mov
out
mov
jl
sahf
test
ja
xor
imul
cmp
pop
jbe
mov
cmp
repnz
lcall
jge
dec
subb
xchg
in
stos
ret
imul
or
mov
loop
mov
rcrl
lret
inc
jmp
shrb
scas
test
sbb
push
jo
enter
and
add
sub
clc
jge
push
cmp
jne
lcall
adc
lds
fisttpll
dec
cmpsb
fistpl
pop
mov
add
adc
hlt
loop
cmpl
in
call
pop
aas
scas
and
leave
sarb
js
jge
fisttpll
cmp
fimull
xchg
jle
push
adc
outsl
pop
add
aas
lds
push
pop
iret
lcall
or
cmp
cmp
xchg
jno
aam
lahf
jecxz
insl
pushf
dec
leave
or
cmp
fldl
cltd
lea
ss
ret
movl
or
push
mov
lock
roll
xor
enter
shll
push
mov
icebp
cmp
mov
sbb
lahf
adc
fidivs
sub
aas
sub
scas
pop
sub
pop
lds
in
or
sbb
aad
jne
mov
mov
addr16
mov
sahf
sti
loopne
aaa
sbb
add
in
scas
mov
jmp
pop
jns
cmc
lret
ljmp
pop
and
and
mov
sbbb
mov
js
fldl
flds
je
push
mov
ret
out
test
jmp
ljmp
xchg
pop
push
xchg
mov
jmp
imul
sbb
stos
ret
fucomp
std
dec
mov
imul
cmc
repnz
clc
je
xor
sub
faddl
jb
jp
cmc
sub
imul
repz
mov
int3
sbb
leave
dec
aam
xchg
mov
mov
loop
xor
scas
add
mov
loope
push
aam
pop
in
mov
xor
in
cmp
repnz
inc
push
fst
mov
test
jecxz
arpl
pop
mov
mov
jne
xor
inc
jbe
jb
sub
xor
jge
push
jno
and
and
or
dec
mov
stc
addb
ds
jg
stos
subb
xchg
mov
dec
or
repz
loop
pop
adc
flds
xchg
or
cmp
mov
and
push
cmp
test
jmp
push
add
notb
sbb
xchg
push
shl
jmp
mov
mov
out
fisttpl
bound
pop
nop
xor
in
test
jmp
pop
clc
or
test
jmp
stos
popa
fcoms
fistps
out
push
addr16
ffree
sub
test
lock
add
cmp
cmp
repnz
mov
jle
loop
push
aas
jae
cmpsb
cs
scas
mov
xchg
flds
in
sbb
mov
adc
into
data16
jp
push
aam
xchg
jnp
mov
testl
in
jg
xchg
movsb
cld
pushf
pop
push
pushf
pop
and
pop
in
cs
data16
notl
pop
and
sahf
cmpsb
ja
fnsave
jl
shll
sbbb
push
push
cmp
mov
cmp
cmp
fmull
in
in
pop
lret
inc
or
in
in
fdivrl
jnp
mov
sub
and
xchg
in
push
adc
inc
std
dec
fs
adc
lods
pop
mov
out
cmp
pop
sbb
loopne
sbbb
popa
es
inc
out
in
jecxz
repz
and
iret
test
fnstcw
cmpl
test
mov
sbb
xorb
lods
jne
mov
aam
rclb
or
push
mov
inc
jmp
popf
or
test
nop
movsl
aad
int
shrl
pop
loopne
mov
jbe
jge
sti
sbb
les
movsl
jnp
and
sti
mov
pop
xlat
cld
cmp
ss
inc
adc
pop
jae
js
inc
test
in
inc
mov
and
ja
psrlw
push
mov
xchg
sub
fcmovbe
add
outsb
push
inc
pop
mov
lret
mov
push
fldt
jecxz
testb
sbb
inc
pusha
imul
pop
push
aas
negb
pop
andb
jp
getsec
scas
dec
lcall
push
pop
inc
mov
mov
inc
mov
and
cmp
je
repnz
xorb
and
or
outsb
orl
arpl
sti
mov
inc
add
cmp
scas
cltd
xchg
mov
push
mov
or
add
xor
data16
leave
sarb
sub
push
pop
es
or
sub
rcrl
jp
ss
jns
mov
mov
mull
push
pushf
inc
cmpsl
add
inc
add
jae
je
mov
pop
sub
cmpsl
cmp
les
xchg
fucom
testl
mov
test
adc
in
test
adc
lret
pop
dec
mov
cmp
cmp
ror
test
arpl
mov
push
rcrb
ret
ret
sub
push
popf
jae
in
sub
cld
lahf
aas
nop
push
mov
mov
push
loop
mov
repz
leave
bound
xor
or
cmpsl
mov
shrl
enter
lock
outsl
sbb
and
xchg
dec
pop
pop
mov
adc
divps
xor
mov
mov
or
xor
jbe
sbb
mov
xor
mov
mov
fnstsw
nop
inc
in
mov
or
outsb
mov
xchg
imul
insb
mov
in
cmpsb
popf
xor
movsl
mov
xor
rorb
loopne
popa
cs
push
cmp
cld
rorb
jne
or
insl
ljmp
in
js
in
bound
and
je,pt
mov
andb
or
mov
xchg
stos
dec
int3
mov
jb
loopew
loop
lahf
in
shll
lahf
ljmp
and
addb
inc
pop
in
xchg
or
incb
xor
xlat
out
lgdtl
scas
mov
lds
into
cmp
lods
mov
inc
aam
mov
cmp
inc
sbb
mov
scas
pop
jmp
cli
mov
mov
jle
ficompl
xor
lcall
lret
sub
int
mov
es
jbe
insb
push
xchg
adc
adc
add
pop
inc
inc
pop
cmc
insb
push
dec
roll
jo
mov
push
push
in
add
jbe
out
lock
push
sub
pop
and
test
jmp
movsl
pop
mov
dec
xchg
adc
sbb
aas
cltd
daa
stos
push
movsl
cmp
jbe
lret
clc
mov
and
pop
or
shlb
ret
mov
fsubrs
es
ja
lods
lret
sbb
out
push
inc
add
sar
jmp
push
mov
clc
lcall
repnz
test
pop
fwait
sbb
cmp
push
aas
mov
xor
cmp
jbe
lock
pop
icebp
jns
and
out
stos
mov
scas
in
stos
rorl
add
aas
fstpl
mov
or
icebp
jmp
cmpsl
xor
mov
std
gs
je
cmp
aaa
decb
sub
sar
imul
push
leave
andb
mov
in
movsb
scas
loopne
or
inc
inc
lods
cli
jbe
movsb
ljmp
rcr
fnstcw
push
ja
push
mov
bnd
out
dec
push
aaa
jnp
mov
shll
into
mov
in
and
ljmp
shll
mov
fldl
in
mov
xchg
test
hlt
xchg
add
sbb
andl
lcall
or
faddp
mov
pop
lahf
and
and
jp
jmp
vfpclassps
or
pop
test
test
adc
add
lods
int
iret
push
jecxz
push
imul
mov
inc
flds
das
mov
inc
movsb
test
jb
pop
jae
add
movb
mov
test
dec
cld
rorb
or
ljmp
fmuls
fmuls
aaa
test
std
push
ds
sub
ljmp
es
shlb
push
pusha
cli
sbb
loopne
arpl
or
bnd
inc
cmpsl
jne
inc
out
mov
sub
repnz
fsubl
mov
mov
xchg
test
outsl
pop
push
and
aas
jo
aam
idivl
and
mov
jge
xchg
int3
jae
mov
cld
cmp
call
fwait
in
and
fcomi
in
test
push
andl
lret
mov
flds
movsl
push
xorl
pop
xchg
sbb
dec
int3
add
std
lret
add
pop
jne
fcoml
lret
pop
insb
add
out
sbb
pushf
imul
stc
dec
shlb
test
or
scas
lock
xor
mov
push
mov
dec
into
mov
adc
jne
jg
jbe
push
cmpsb
mov
push
in
js
inc
iret
sti
sahf
pop
std
imul
inc
xor
es
dec
in
scas
xchg
inc
jns
push
adc
cltd
pop
cmp
sbb
fucomp
mov
int
xor
mov
xchg
mov
int3
pop
xor
rcl
cmc
add
aad
mov
xchg
sbb
jp
js
sub
cmp
mov
inc
cmp
out
add
addr16
into
adc
in
lods
dec
mov
mov
dec
xor
jmp
jb
xchg
add
mov
sbb
mov
testl
shll
jmp
or
or
arpl
outsl
test
push
pop
jp
iret
jp
stc
arpl
mov
pop
pop
push
push
lcall
pop
jle
mov
and
jb
and
mov
lock
jb
pop
fwait
mov
or
push
jnp
mov
rcl
mov
stos
push
mov
js
push
cmc
sbb
cltd
call
push
lcall
inc
data16
in
lahf
pop
or
fcomps
lret
jg
mov
ss
data16
adc
frstor
insl
ret
shll
dec
das
and
cmc
jmp
pop
push
aaa
les
mov
in
out
inc
jmp
shl
jno
lret
gs
dec
mov
xchg
sbb
in
mov
les
mov
test
dec
ss
push
push
lods
repz
sub
or
cltd
mov
jnp
test
sub
call
xchg
test
je
xor
pop
sahf
lods
repz
stos
fcoms
cwtl
dec
and
push
jle
jo
dec
mov
push
repz
insl
ja
aas
dec
sarl
nop
add
mov
jle
mov
imul
adc
sbb
dec
pop
mov
sub
mov
inc
or
push
pop
pop
out
or
mov
and
jle
mov
outsb
rcl
inc
mov
lods
lods
inc
sti
cmpsb
ffree
add
fmull
push
in
shr
divb
sbb
xchg
mov
jo
xor
or
jns
mov
fnstsw
testl
cmp
fsubrs
cmpsb
js
add
pop
loop
frstor
pop
jg
imul
les
inc
mov
stc
out
push
lcall
testb
jle
out
jo
push
adc
xchg
jae
orb
lahf
push
and
aam
pop
jbe
or
sahf
aas
push
movsb
push
loopne
daa
loopne
cmc
fsubrl
sub
mov
xchg
and
sub
mov
add
sahf
mov
cs
jno
scas
in
pushf
leave
das
ficoms
xor
push
insl
lock
in
shrl
push
xor
imul
nop
pusha
es
ja
cmc
cli
lds
leave
cld
js
adc
into
xchg
lods
out
mov
fsubs
je
and
bound
in
xchg
pop
cs
push
icebp
mov
sbb
mov
xor
jae
push
dec
cmp
xor
xchg
stos
sti
mov
mov
sti
in
sub
push
and
cld
cli
xchg
mov
or
mov
sub
enter
adc
add
xor
ds
test
dec
pop
jp
fld1
or
mov
test
ja
fnstsw
push
push
out
sti
mov
xchg
aad
mov
int3
mov
dec
enter
popf
and
push
mov
pop
xor
fstl
xor
mov
pop
pop
mov
xorb
out
pop
sub
mov
jae
out
adc
fbstp
cmpsb
lods
mov
lods
jb
xor
cmp
mov
push
in
test
push
fildll
add
and
or
adc
ss
mov
mov
push
cmc
pop
repnz
jb
adcl
shl
pop
gs
cmp
add
orl
sbb
jnp
cmc
and
pushf
xchg
jb
js
mov
ret
imul
push
mov
aaa
fnstenv
std
jo
test
fmull
add
sarb
cmp
lods
in
mov
mov
inc
outsb
cmp
aaa
xor
jns
ljmp
cmpl
dec
inc
push
and
and
xchg
addr16
rolb
sub
jns
imul
jb
sub
mov
dec
xchg
dec
incb
call
fwait
test
dec
cli
or
xor
cmc
cld
xchg
sbb
dec
int
lret
outsl
sbb
mov
cmpsb
cmc
ror
pop
add
pop
xchg
pop
sbb
mov
pusha
lock
lods
nop
shlb
xchg
xlat
sarb
popa
xor
les
mov
mov
add
push
out
jne
sub
stos
int
mov
dec
sub
dec
add
add
outsl
inc
or
inc
je
stos
cmc
push
xchg
sub
nop
xor
cmp
es
cmp
inc
pop
push
shlb
icebp
aam
loope
frstor
notl
fneni(8087
inc
xor
jne
mov
cmpl
movsb
out
xorb
push
and
imul
aaa
stc
dec
xor
arpl
pop
add
jb
imul
add
mov
rclb
mov
cmc
jo
pop
into
test
data16
pop
mov
clc
adcb
rclb
fucom
push
pop
js
pop
movsb
lahf
dec
in
aad
out
nop
push
aam
push
jmp
ret
cs
xlat
ret
pop
jmp
leave
sbb
loop
leave
fs
lock
outsb
es
sub
pushf
adc
lcall
jns
mov
inc
or
jg
jp
jl
test
sahf
add
iret
jno
inc
mov
cmp
ret
clc
cmpsb
push
and
out
shlb
cmp
popf
push
data16
pop
mov
pop
arpl
test
or
lret
jbe
dec
adcl
mov
in
ficoms
mov
and
cmp
stc
lcall
test
in
pop
dec
loopne
lcall
xchg
pop
mov
cmp
scas
out
or
jb
or
fdivp
imul
aad
fstl
mov
xchg
pushf
push
shl
out
cmpsb
les
cmp
xchg
lock
dec
scas
stc
stos
sti
cltd
jns
cmp
dec
mov
fmull
mov
int3
outsb
mov
lods
aaa
stc
mov
les
mov
jno
mov
cmp
adc
cmpsb
pop
jno
ret
xchg
dec
push
push
lahf
les
addb
xor
xchg
lods
sub
lock
stos
xor
xor
adc
sub
scas
test
notb
clc
jecxz
push
mov
push
xor
sub
mov
into
jp
pop
xchg
jecxz
movsl
shll
int
cmc
lods
fldt
lock
add
inc
into
imul
aad
call
jl
sbb
mov
adc
iret
xchg
push
jbe
push
mov
pop
pop
cmp
dec
adc
jp
nop
push
rcrl
jae
mov
in
je
mov
pop
pushl
mov
dec
adc
and
jae
fbstp
test
and
outsb
andl
into
adcb
push
arpl
jns
fsubrl
ss
in
or
ljmp
fcoms
shll
movsb
repnz
incl
jecxz
lds
loope
mov
dec
jno
dec
pushf
adc
mov
cmc
jmp
ja
mov
and
pop
xor
sarb
in
or
movsl
mov
cmc
lret
loop
or
sbb
jb
push
nop
rcrl
lret
cmp
pop
fdivp
pop
divb
mov
shl
mov
repnz
sbb
dec
adc
sti
lcall
dec
mov
lcall
cmpsb
stos
mov
adc
pop
dec
or
or
add
xchg
sbbb
or
in
mov
out
int
xchg
insl
add
cmp
xchg
out
test
sbb
je
xchg
mov
fucomip
mov
xor
call
in
mov
jp
or
add
fsubrl
dec
out
fs
push
jmp
outsl
push
or
mov
and
insb
jmp
leave
in
rclb
imulb
jmp
rolb
in
fs
mov
ss
out
or
pop
test
lahf
pop
hlt
test
mov
sbb
pop
pop
sbb
in
jmp
xchg
pop
rcll
outsb
pop
ja
subb
mov
push
sbb
pop
sahf
adc
lock
insl
mov
lret
int
pop
or
mov
popa
outsl
ljmp
mov
icebp
shrb
in
mov
scas
cmpsl
les
mov
adc
jb
add
cld
les
jg
mov
push
sub
xchg
adc
mov
add
xorb
ret
jmp
add
pop
pop
mov
enter
pusha
sbb
ret
jp
in
jno
addb
sbb
cmp
enter
js
mov
jnp
cli
es
jp
inc
push
in
adc
fimull
scas
add
mov
xchg
push
cmp
out
scas
loopne
sub
aam
mov
out
xor
int
shll
movsb
testw
mov
lds
and
sub
fstps
fcmove
mov
xlat
test
mov
idivb
jecxz
mov
fwait
jno
mov
pop
aas
repnz
adc
in
pop
cli
mov
dec
mov
xor
cmc
dec
in
lds
add
mov
cmc
test
jmp
rcl
outsb
pop
in
dec
aad
sahf
jo
ret
or
push
sbbl
shrl
clc
xor
add
in
dec
sub
ret
jb
test
pusha
and
mov
or
push
aam
lret
into
in
std
in
mov
push
or
adc
dec
fisttps
stos
hlt
pop
and
pop
adc
test
sub
js
sbb
push
mov
mov
shl
test
pop
cld
int3
gs
sub
mov
std
pop
jno
leave
cmp
cli
xchg
cmp
test
pop
jp
push
test
cmc
cmp
cli
lret
in
test
and
in
jbe
addl
imull
daa
cwtl
inc
push
je
aas
repnz
mov
jo
cmp
setb
jmp
sbb
cmp
rorb
add
imul
jp
push
loopne
xchg
sub
aaa
in
jmp
and
cmpsl
lods
add
scas
sbb
andl
and
jno
pop
bnd
rclb
out
xchg
mov
push
arpl
pop
and
out
inc
inc
jecxz
push
mov
test
pop
and
mov
jmp
push
aaa
jmp
scas
adc
cld
subb
inc
imul
jmp
xor
fwait
cwtl
out
push
xchg
mov
mov
or
jb
jnp
outsl
and
xor
sub
icebp
xchg
scas
cmpsl
jne
lret
fstp
test
lcall
push
jl
scas
push
scas
xchg
lods
movsb
mov
stc
push
inc
pop
fucom
out
jmp
inc
cld
imul
icebp
or
rcll
sub
xlat
push
mov
cmp
xlat
jne
mov
loope
fmul
nop
insl
mov
loopne
repz
xor
jg
dec
cmp
mov
ret
jecxz
inc
or
pop
jne
cwtl
pop
mov
nop
mov
loop
xchg
lret
dec
push
lahf
pop
in
int
sub
add
pop
icebp
mov
push
mov
xlat
mov
inc
jae
jb
sarb
stc
imul
repz
mov
jnp
sbb
mov
sub
movsb
ja
or
xchg
aaa
inc
shrl
cmp
mov
jecxz
cmpl
dec
loope
and
insb
pop
faddl
in
xchg
pop
out
pop
ja
pop
fwait
add
f2xm1
cmp
xchg
movsl
in
outsb
imul
sbbb
aad
aad
and
jae
mov
mov
insl
sbb
jl
iret
add
add
sbb
dec
adc
imul
leave
in
or
inc
xlat
push
push
adc
stos
cmp
rolb
nop
in
adc
dec
or
mov
imul
push
ljmp
popf
mov
repnz
out
xchg
out
imulb
cmc
sub
iret
mov
fcmove
out
push
cli
mov
push
push
mov
fwait
xchg
cli
sub
push
xor
xchg
popa
test
fdivl
mov
pop
rep
inc
scas
cli
shll
sti
mov
and
adc
cld
fistps
dec
scas
mov
inc
scas
rolb
mov
or
out
push
xor
stc
aaa
push
data16
cmp
cmpsl
or
into
inc
mov
outsb
int3
and
and
mov
cld
push
mov
jge
pop
or
leave
mov
shll
mov
out
outsl
out
loopne
jge
mov
jl
adc
adc
and
add
roll
lcall
out
out
pop
push
lods
adc
jae
dec
nop
fwait
in
hlt
adc
mov
ja
cmc
or
repz
cmpl
fstl
iret
xchg
push
notl
cmovnp
xchg
sbb
mov
or
daa
or
clc
mov
jl
mov
int3
jae
jne
shrb
or
fnsave
in
xchg
jmp
push
add
std
pop
jae
shlb
es
push
mov
mov
pop
test
test
fcmovnu
xchg
movsl
repnz
and
sti
jecxz
stos
fstl
jle
or
dec
dec
out
pop
sti
dec
shlb
fprem1
mov
sbbl
jmp
dec
scas
dec
jecxz
pushf
frstor
movsl
adc
lock
aaa
sbb
or
scas
sahf
xor
pushf
push
cmp
call
cs
push
adc
in
xchg
cmpsb
js
data16
fucom
es
lds
add
inc
aad
xlat
and
test
push
orb
dec
shlb
icebp
adc
jmp
repnz
pop
out
push
push
jmp
out
negb
sub
fs
int
inc
mov
cld
jmp
pop
rcrb
bound
sahf
ljmp
or
jb
ljmp
das
and
xchg
das
imul
orl
adc
das
cmp
out
adc
mov
bndldx
adc
dec
push
jle
out
and
movsl
inc
rorb
jae
mov
fs
nop
pusha
in
cwtl
fwait
xor
jp
dec
stos
add
mov
adc
aam
lods
sbb
aaa
add
outsl
scas
std
adcb
ja
imul
in
cmc
repz
mov
push
xlat
enter
mov
cld
in
sbb
mov
push
dec
push
cli
imul
xchg
outsb
jbe
jo
lret
mov
pop
negb
inc
jecxz
pop
leave
dec
push
dec
inc
adc
lcall
pop
outsl
ret
add
cmp
fisttpll
or
xor
xchg
fistpll
adc
enter
test
fs
ret
js
add
adc
push
cltd
adc
inc
bound
or
inc
xchg
jo
or
adc
je
sti
sub
arpl
adc
roll
loopne
fcmovnbe
into
jne
fstl
cmpsb
adc
jl,pn
repnz
nop
xchg
dec
arpl
sbb
rcl
push
xchg
movsb
iret
pushfw
popf
mov
rorb
lds
pop
cwtl
cmpsb
xchg
shrb
or
mulb
mov
inc
std
add
repz
push
scas
xor
push
scas
xorb
mov
nop
adc
inc
push
lahf
jecxz
or
stos
jb
xchg
insl
pop
mov
adc
bound
mov
test
mov
cmp
push
insl
repnz
arpl
adc
jp
out
ret
and
adc
pop
dec
push
rorb
fisubl
push
cld
ljmp
and
or
imul
xchg
rcrl
jg
pop
sbb
fimull
sbb
aam
outsl
sbb
stc
sarb
push
sbbb
jp
mov
cmp
lods
pop
xchg
stos
add
mov
adc
loopne
jae
iret
mov
inc
inc
adc
pop
cld
mov
pop
addr16
imul
push
add
dec
adc
arpl
in
pop
int
jecxz
data16
repz
fnsave
dec
sbb
lock
add
ret
dec
cmp
cmc
insb
lret
repz
and
in
push
jns
in
mov
insb
cmp
shll
sub
push
jmp
sbb
insl
div
sti
leave
shr
or
mov
gs
sbb
int
mov
repnz
xchg
lret
add
jmp
pop
add
pop
fldl
xor
sbb
call
in
mov
mov
push
sub
cmp
cmp
or
ror
cmpb
push
cmp
dec
loop
shl
pushf
inc
ss
mov
in
mov
add
cmpb
mov
xor
lea
sub
mov
test
jns
into
add
xlat
mov
stc
imul
jle
jecxz
pusha
out
fnstcw
cmpsb
cmc
mov
xor
add
jo
mov
icebp
cmp
dec
xchg
jbe
mov
ljmp
shll
and
sbb
and
pop
dec
es
cmp
enter
fstpl
iret
adc
jmp
cmp
aas
mov
out
icebp
xchg
push
or
out
sti
mov
lcall
dec
adc
adc
das
sahf
insb
sbb
repz
adc
jb
out
js
sti
dec
inc
mov
cld
out
push
xor
pop
push
sahf
int
xchg
jge
cmp
mov
int
cmp
jno
cmp
sbb
mov
add
pop
inc
add
cmc
lret
test
adc
in
xchg
xor
enter
push
lds
aaa
jbe
repnz
xor
dec
out
jnp
daa
adc
fldl
rorb
pop
pop
int3
jp
jge
inc
fistpll
sub
aad
mov
add
jnp
jb
mov
mov
xor
repnz
imul
fstpl
jb
add
rcll
cmc
into
cld
fists
pop
cmp
adc
sub
jmp
cmp
mov
and
cmp
out
int
jmp
lds
cltd
push
add
pop
add
ja
add
mov
bound
repnz
inc
jne
pop
cmc
sbb
push
mov
push
cmp
mov
jns
popa
xchg
fsts
es
jmp
jns
jmp
and
mov
cs
inc
cmp
fadds
out
cmp
test
or
xlat
dec
je
push
jmp
pop
mov
inc
cmpl
lret
scas
sbb
dec
fucomp
es
xchg
pop
adc
cmp
pushf
dec
sbb
jg
aas
and
sbb
cltd
stc
sarl
hlt
out
lock
std
cmpl
push
inc
pushf
mov
mov
cmp
jns
or
movsb
xchg
jge
pop
or
fisttpll
cmp
lods
jle
loop
mov
sbbb
sarl
jl
sbb
fmul
xchg
imul
inc
into
lods
cmp
test
fldl
inc
pop
das
arpl
mov
testl
in
leave
pop
insl
add
popa
adc
cli
ret
pop
mov
push
jne
in
cmpsl
adc
imul
push
or
popf
jne
std
das
sbb
les
lea
movsb
int
mov
jo
mov
adc
fwait
cmp
push
jmp
inc
out
or
sbb
mov
sarb
mov
ret
int
adc
popf
addr16
andl
add
mov
adc
out
push
add
jns
inc
or
jl
fldl
outsb
jmp
cmp
mov
mov
cmp
mov
dec
cmpsb
add
fnsave
push
es
xor
cmc
int
int3
pop
jmp
mov
fcomi
loopne
out
dec
psubusb
das
add
xchg
sub
out
fisubrs
mov
shll
or
or
fstpl
sbb
in
cli
out
je
mov
arpl
xor
jb
pop
stos
jne
push
stc
push
popa
repz
push
out
jno
sbb
mov
add
andl
pop
ljmp
iret
cmc
and
inc
faddp
orl
pop
int
fwait
imulb
mov
daa
and
xchg
mov
push
add
or
jle
dec
cmp
jg
stc
mov
mov
fld
sub
cmp
mov
iret
mov
add
lods
enter
popa
mov
inc
loopne
lods
cld
cmpl
fstl
dec
test
push
jl
fisubrs
cmpsb
int3
out
fldenv
fucom
jbe
add
loop
pop
fwait
enter
jmp
inc
pop
push
and
xchg
pushl
fistl
jecxz
adc
ja
sub
cli
shrb
dec
push
in
fdivr
test
mov
pop
ret
adc
jmp
cmc
cltd
pushf
xlat
mov
fcmovbe
xor
sti
adc
out
xor
xchg
mov
negl
fstl
lods
pop
cmp
push
jmp
cli
mov
fcomps
xchg
cmp
push
outsb
inc
mov
jbe
stc
aaa
push
add
out
roll
in
lds
sub
outsb
push
xchg
imul
out
dec
pop
inc
add
cmp
mov
sahf
and
mov
dec
mov
lea
out
mov
rorl
ja
and
int3
pop
jbe
sbb
mov
mov
add
xchg
and
movsb
push
lods
icebp
mov
out
lock
xchg
mov
dec
cltd
cli
dec
adc
or
call
adc
dec
inc
leave
pop
push
stc
xchg
jmp
jae
cmpsl
nop
std
mov
shll
ret
push
or
test
lahf
jecxz
sub
aad
out
fstl
data16
xchg
and
outsl
mov
dec
or
adc
mov
rorb
sub
push
mov
inc
test
push
adc
mov
test
aam
gs
push
in
fwait
inc
inc
pop
mov
lock
inc
in
mov
sub
xlat
sbb
pop
imul
inc
xchg
mov
jb
cmp
insl
cmp
jb
jb
dec
sbb
aad
lret
or
pop
pop
xchg
loop
push
shlb
dec
and
xor
xchg
jns
mov
mov
test
movsb
fcoml
mov
xor
loopne
push
xor
push
xchg
ret
xor
shll
mov
adc
es
xchg
push
dec
adc
mov
in
fisttpl
aaa
jl
stos
sub
push
out
jl
mov
testb
test
out
sahf
rcrl
sbb
daa
popf
mov
outsb
mov
mov
les
pop
adc
loop
mov
jne
orb
jp
idivl
cwtl
rcl
mov
aad
xchg
xchg
pushf
lods
sub
sbb
cmc
outsl
aam
inc
js
faddl
push
jp
movsb
mov
mov
mov
adc
rcl
inc
pop
into
mov
mov
cmp
hlt
fistpl
lock
in
sub
lods
and
jo
rcl
adc
cmp
pop
insl
xor
sti
inc
sarb
pop
repz
jae
in
scas
push
jnp
and
cmp
lock
jae
in
pusha
add
xor
sbb
push
in
xchg
hlt
shrl
mov
sbb
mov
mov
adc
call
es
loop
pushf
fdivl
jne
mov
dec
movb
mov
andb
leave
test
and
int3
insl
movsb
and
sbb
mov
adc
ret
outsl
jb
test
mov
sub
cmp
pop
in
in
sub
mov
data16
pop
ds
aad
ja
inc
sub
inc
cld
rolb
gs
jb
cmp
push
or
test
xlat
test
mov
cmp
xor
jb
mov
jb
repz
jbe
or
push
push
in
fs
and
in
sub
adc
jl
in
or
add
jne
inc
sbb
mov
add
in
add
cmpsb
aaa
pop
jae
in
lods
addr16
jns
pop
lahf
lea
jae
faddl
pop
pop
fistps
shl
popa
jp
cmpsb
mov
push
sub
xchg
add
sub
cs
ret
gs
loope
fs
je
xchg
push
iret
add
rorb
arpl
push
sbb
sbb
dec
xchg
ja
cmc
leave
jo
mov
inc
cmpsb
add
jecxz
pop
andw
mov
jae
ds
push
mov
add
push
push
lret
mov
out
dec
imul
inc
jns
cli
cmc
outsl
and
mov
jp
mov
jnp
add
mov
or
sahf
out
or
dec
sti
outsb
sbb
scas
cmc
jl
mov
jl
lahf
push
insb
rclb
jo
dec
fidivrl
fmul
mov
inc
push
pop
mov
jp
jno
in
sub
inc
sub
fcomi
lds
sub
add
repz
and
inc
jb
jmp
in
test
cmc
mov
fwait
test
in
cmp
lret
mov
add
stc
inc
stos
divb
mov
cltd
sub
aam
test
adc
pop
js
jb
cmpsl
lods
xor
xor
ljmp
jbe
repnz
sub
mov
outsb
adc
into
mov
jg
out
inc
fdiv
test
ja
test
push
and
jbe
in
loope
andl
xor
js
jmp
cmp
lcall
cs
or
and
test
sahf
jb
in
and
divl
inc
in
stos
xchg
test
shrl
aam
in
cmp
jae
or
xchg
rorl
mov
iret
imul
cmp
cltd
fstps
test
shlb
xchg
neg
ds
loope
in
stos
jl
dec
js
and
aaa
pop
jns
ljmp
lods
lahf
mulb
mov
arpl
sbb
push
mov
cmp
inc
sub
mov
push
add
shll
popa
repz
cmpb
xlat
push
std
xor
imul
sbb
add
mov
add
in
int
or
jno
in
scas
and
in
ret
arpl
xor
mov
mov
jge
je
in
stos
std
jno
rolb
xor
dec
sbb
movsl
ja
xor
shr
cmp
ja
or
pop
int3
out
stos
jg
or
jnp
cmc
enter
jne
xchg
jo
out
jmp
scas
pop
sbb
in
out
mov
jle
dec
call
push
pop
pop
fstpl
add
outsb
sub
sub
mov
mov
mov
aas
ja
shll
ds
mov
sbb
mov
mov
jmp
push
sbbl
xor
mov
sbb
and
lcall
xor
repnz
jns
mov
out
dec
aaa
jb
jne
lahf
jp
outsb
inc
cmp
outsl
sub
sub
sahf
mov
repz
xchg
mull
pop
push
insl
test
cmc
push
sti
in
jo
jne
loop
idivb
mov
mov
sub
nop
mov
push
sub
xlat
jns
outsl
stc
fnstsw
cmp
xchg
xor
pop
sbb
sbb
xchg
pop
push
lcall
or
sbb
xor
pop
fcomi
mov
add
jno
mov
adc
test
fs
loop
in
cmp
cmp
stc
or
push
pop
fmull
mov
lcall
sub
sbb
jmp
jb
xchg
xchg
mov
addr16
enter
adc
jp
addl
cmp
notl
out
sbb
stos
xor
jecxz
push
lret
fldl
push
adc
inc
loope
xor
xorl
call
aam
rol
jp
nop
lods
out
pushf
leave
and
pop
in
ds
lock
shrl
xor
cld
fiaddl
sbb
loop
repz
ret
mov
mov
xor
lcall
adc
xor
jae
in
xchg
cli
js
mov
xrstors
mov
subl
mov
or
stos
popa
and
jae
test
or
lret
pop
xor
nop
xlat
xchg
mov
sub
ja
rcl
fistpll
sub
in
out
pop
mov
mov
push
inc
or
mov
shll
ja
loop
insl
xlat
jb
xor
pop
push
xchg
int3
sbb
jb
test
mov
pop
scas
test
arpl
iret
into
aam
xor
subl
add
pop
out
lea
xlat
sti
or
test
nop
cmp
xlat
mov
push
shrb
jb
repz
sti
out
mov
test
mov
jmp
jns
xor
push
gs
js
xor
data16
rolb
sbb
negl
mov
lock
jne
or
mov
in
xchg
push
fwait
test
stc
loope
movsb
inc
add
jae
popf
or
sbb
adc
mov
pop
in
jnp
ret
sbb
lahf
mov
push
jo
cmc
sub
aaa
ja
adc
sti
leave
cmpl
cmpb
and
inc
mov
mov
in
gs
scas
xchg
adc
insl
jg
insl
mov
adc
jns
jb
push
cmp
and
mov
repnz
mov
push
sbb
js
gs
cltd
and
stc
mov
jl
jae
repnz
jl
ret
sbb
add
or
xchg
sti
and
loopne
faddl
jmp
lods
mov
pop
fstpl
js
cmc
pop
popf
mov
stos
ss
aaa
pop
xchg
dec
popa
add
xchg
cmpsl
mov
push
push
mov
arpl
loopne
cmp
jp
jecxz
pop
sub
or
pop
popf
addr16
adc
shlb
test
mov
add
push
inc
and
aas
cmp
xchg
sub
icebp
popf
arpl
and
les
mov
out
out
dec
int
pop
insb
add
add
js
push
mov
nop
cmpsl
call
push
and
jns
cmc
clc
jg
xor
notb
test
and
push
or
out
pop
jl
pop
cmc
fiaddl
mov
fnstenv
scas
push
push
dec
xrelease
inc
mov
jp
cmpsb
mov
and
jbe
jle
xor
pop
xor
fists
push
out
pop
stc
shrb
cmp
gs
icebp
pop
jns
or
sub
adc
in
xchg
int3
mov
cmpsb
fisubl
jle
je
fidivs
repz
xor
mov
jge
test
loopne
fstpt
scas
jno
and
data16
aam
leave
mov
xor
cmp
cltd
jle
fucom
test
sub
and
rcl
cmp
popf
scas
dec
or
test
pop
push
int
rorl
push
mov
sbb
xor
xor
pop
into
in
insb
in
js
mul
jbe
push
push
jmp
push
ja
cmc
sub
jne
sub
xor
mov
loope
cld
fiaddl
sbbb
mov
in
pushf
addr16
adc
xor
xchg
fdivr
xchg
or
xchg
mov
das
adc
out
push
ja
ret
pop
nop
fstl
scas
sbb
push
sub
sbb
shlb
mov
inc
clc
xchg
les
out
lret
jl
repnz
in
add
into
adc
mov
dec
fidivrl
inc
push
lods
and
lods
mov
jnp
cmp
mov
mov
addr16
xor
mov
decl
lcall
push
ret
aas
shrl
inc
out
ds
pop
loop
ljmp
pop
and
icebp
mov
aaa
jno
or
xchg
lret
in
popl
jae
in
imul
in
or
movsb
xchg
repnz
clc
and
sbb
into
dec
jb
xor
sbb
push
dec
add
test
pop
pusha
stos
xchg
cmp
je
dec
add
push
xor
scas
push
mov
sbb
in
adc
push
mov
xchg
xchg
xchg
pop
subb
fsts
lret
xorl
fstps
and
movsb
jecxz
test
fnstcw
out
clc
and
loop
lahf
mov
popf
subl
push
dec
dec
cmp
popa
sub
cmp
fstl
enter
idivb
add
lcall
xor
cmc
sbb
mov
mov
adc
fstp
pop
mov
pop
or
adc
daa
push
sub
lds
xchg
cli
dec
jb
cld
pop
mov
sub
and
pop
das
sbb
jne
mov
mov
and
push
jg
lock
jp
xor
ret
ficompl
mov
lcall
pop
sub
sub
out
lea
cmc
scas
pop
mov
xchg
or
movl
imul
mov
mov
xchg
dec
adc
out
sub
movsl
adcb
sti
add
in
movsl
adcl
push
fs
in
icebp
divl
ds
pop
adc
scas
mov
lock
imul
mov
pop
data16
mov
cmp
test
fcoml
mov
mov
movsl
mov
sarb
fldenv
fstpt
adc
jbe
xchg
cwtl
mov
ja
pop
jecxz
add
lods
test
mov
in
fisubrs
insb
jb
add
inc
mov
sahf
xor
fdivrl
ja
cmpsb
frstor
lds
repnz
xchg
xchg
icebp
inc
dec
mov
mov
sbb
dec
push
push
adc
nop
leave
loop
aam
repnz
sahf
push
dec
push
and
popf
adc
sbb
icebp
mulb
push
cmp
mov
sbb
cmp
stos
nop
sbb
pop
pop
sub
inc
ljmp
fnstcw
push
push
add
push
repnz
sbbl
lret
ljmp
test
lcall
imul
repz
push
mov
sti
fstl
inc
std
repz
rorb
or
xchg
sahf
addr16
dec
js
jmp
rclb
inc
mov
dec
lods
in
test
into
xchg
cli
inc
push
mov
fnsave
js
adc
nop
cli
mov
imul
cmc
je
cmp
xchg
test
das
mov
xchg
in
rcrl
jb
test
in
cmp
push
inc
lahf
xlat
push
fimull
or
xor
stos
stos
mov
enter
mov
dec
push
mov
inc
cli
in
lods
je
frstor
sbb
popf
or
bound
push
xor
cmc
jnp
pushf
sub
and
mov
jo
mov
and
and
fdivr
scas
mov
add
adc
lret
xor
or
sarl
les
aas
sub
push
cld
pop
gs
jb
in
sti
cmp
inc
push
fstps
xor
out
push
mov
int3
push
lds
repz
adcb
mov
push
adc
mov
mov
cli
inc
test
mov
leave
pop
cmc
sbb
stos
jbe
mov
adc
fnstsw
pop
lods
push
mov
shl
adc
fwait
xor
mov
sti
xchg
push
scas
jmp
push
fidivrl
rcrb
mov
lock
cmpsb
inc
push
xlat
in
loopne
add
mov
lret
fstpl
data16
xchg
and
jle
mov
sbb
and
shrl
xor
and
pop
sub
add
out
xchg
les
repnz
pop
pop
or
mov
in
inc
cld
add
mov
push
insl
mov
in
mov
cmc
icebp
adc
ds
jp
xlat
xchg
add
fwait
outsl
ss
lret
jbe
fdivl
bnd
push
xchg
notl
xorb
push
mov
adc
jbe
data16
sbb
jl
jne
and
fwait
lahf
jo
cmc
jmp
idivb
pop
push
and
scas
jmp
arpl
cmp
sub
fmuls
scas
inc
dec
mov
ret
fisttpll
in
mov
jne
je
fistpl
add
icebp
push
pop
shr
jge
in
ret
lea
xchg
mov
aaa
aas
mov
mov
mov
repz
jb
daa
int
jmp
out
sub
cmp
sub
jne
test
fcomp
out
push
mov
scas
pop
dec
aas
mov
ror
dec
mov
push
out
adcb
mov
push
fcompl
movsb
in
jmp
es
stc
or
cmpsl
sbb
ret
sbb
in
sbb
or
jecxz
loope
dec
test
jne
cli
mov
js
push
jno
loop
adc
jo
and
and
dec
int
dec
mov
or
fnstsw
jns
pop
testl
int3
push
push
mov
jb
lods
jne
aaa
cmpsb
sarb
xchg
sbb
repz
mov
mov
loop
incb
repz
fadds
cmp
repz
mov
neg
mov
push
insl
cmpsb
dec
mov
or
in
xor
xorl
ja
movsb
xchg
xlat
mov
ret
pop
cmc
pop
jno
ret
inc
mov
popa
jecxz
mov
xchg
jmp
add
rcl
loope
stos
mov
cmp
mov
lcall
in
jb
ret
clc
jns
inc
jnp
sahf
push
std
insb
loopne
loop
inc
push
xchg
or
push
lea
iret
jb
int
mov
incb
mov
mov
roll
cltd
jne
dec
push
xor
cwtl
es
cmp
inc
cmp
adc
sub
add
pop
and
rcrl
push
and
out
mov
jmp
sbb
inc
in
cli
xor
lcall
and
cmp
in
pusha
scas
push
loopne
fnstenv
rcrl
stc
jne
sub
adc
shll
xor
jp
jnp
inc
xlat
or
sub
sub
mov
mov
jecxz
mov
jae
xchg
iret
rorb
call
icebp
push
arpl
std
fldt
and
shlb
push
pushf
mov
movq
cmc
push
mov
int
dec
pop
insb
in
inc
fsin
jp
iret
loopne
mov
mov
add
outsb
sbb
push
cld
pop
js
mov
divb
cmpsb
dec
movsb
sysexit
and
cld
jo
ret
mov
mov
sti
sbb
jne
loope
filds
xchg
xchg
repnz
cltd
nop
loop
xchg
aam
test
cs
pop
or
adc
push
in
mov
adc
in
in
ret
negl
dec
add
xchg
jl
sahf
push
arpl
push
push
stos
leave
xor
xchg
pop
aam
xor
jo
in
inc
ror
sti
pop
sti
xchg
subl
add
je
xchg
in
xchg
and
mov
std
outsl
jne
lret
pop
mov
fisttpll
loop
fdivp
pop
cmp
push
push
pop
cld
outsb
data16
lds
popf
mov
scas
out
sbbb
jmp
pop
fistpll
lds
sub
icebp
arpl
fwait
test
inc
popa
push
push
jl
jae
or
aas
rorb
adc
mov
xlat
adc
and
inc
fidivrl
xchg
pop
jo
jbe
adc
mov
xlat
rcrl
daa
and
addr16
arpl
mov
sar
loop
es
mov
and
cmc
adc
popa
jne
rol
mov
jbe
arpl
lret
cmp
test
aaa
cmc
fsts
mov
stos
fstpl
jle
push
hlt
jae
cmc
scas
fwait
cmpsb
mov
in
sbb
jecxz
insb
movsb
xor
xor
dec
outsb
jecxz
mov
sub
lock
popf
mov
pop
ds
add
dec
movsb
clc
cmc
add
data16
fs
or
add
lcall
mov
pushf
or
sub
jne
jo
dec
dec
push
mov
bound
scas
dec
adc
out
push
test
mov
in
out
scas
jp
add
mov
or
sub
mov
shlb
dec
loopne
std
xchg
mov
hlt
push
add
xor
repnz
sub
addl
ret
jmp
rcr
lock
cmp
push
pop
cmp
ret
cmp
pop
mov
and
or
cmp
pusha
lods
push
shrb
jb
jno
xchg
dec
xor
clc
enter
test
loopne
fnstcw
cmpsl
add
js
push
jae
inc
add
je
mov
mov
nop
movaps
and
jo
ds
mov
js
mov
js
fnsave
push
repz
sub
enter
lahf
rcr
xor
insl
sbb
push
dec
lahf
call
loop
push
jnp
rorb
jp
ror
and
sti
jecxz
push
mov
or
xchg
in
lcall
mov
int
mov
pop
loopne
inc
hlt
lds
inc
add
frstor
in
andl
lret
stos
jo
scas
cmp
int3
dec
jb
adc
testb
lods
adc
sub
or
or
ja
xchg
xchg
pop
or
dec
shlb
jbe
movsb
fucom
pop
gs
mov
mov
pop
cld
jp
push
xchg
aam
outsl
pusha
bound
cli
enter
nop
out
rcl
xchg
sahf
mov
out
jne
mov
xchg
lahf
mov
sub
incl
sbb
push
mov
pop
push
loope
fbstp
inc
jecxz
jo
or
cld
stos
ror
sbb
scas
bound
inc
in
neg
bound
int3
and
dec
pop
test
js
or
push
pop
jns
pushf
or
cmpsl
and
sub
dec
mov
xor
lock
ficoms
mov
lahf
jno
add
and
mov
in
adc
adc
push
mov
mov
xor
sbb
in
jno,pt
jl
cmp
push
cmpsb
push
aad
ja
mov
jmp
xor
jge
jns
cmc
sub
mov
jp
xlat
mov
iret
sbb
divl
push
cmp
adc
push
in
sar
pushf
mov
ljmp
push
push
rolb
xor
jmp
test
lcall
outsb
and
mov
adc
jne
cld
add
std
subb
jne
in
push
dec
cmp
addr16
repnz
xchg
inc
iret
cmc
rcrb
mov
xchg
and
ficoml
jnp
cmc
mov
dec
jp
rep
in
aaa
inc
repnz
out
pop
fsubr
push
fcoml
mov
lock
lahf
dec
shl
out
repz
jbe
mov
mov
jne
adcl
repz
inc
dec
xchg
cmp
push
mov
fwait
sub
mov
cmp
pop
cmc
inc
stc
mov
pop
test
inc
xor
lock
fucom
mov
push
adcl
shll
dec
cmc
cmp
adc
inc
mov
add
cmp
in
pop
sbb
push
imul
leave
mov
ss
xchg
sub
xor
inc
nop
in
sub
jae
cmpsb
pop
jp
lods
push
test
jne
pop
data16
xor
dec
in
sub
es
adc
add
mov
ja
in
es
lret
loopne
movsl
jne
int
mov
xchg
jp
and
jb
lock
movsl
lahf
xor
lcall
dec
cmpsb
push
addr16
jecxz
nop
xor
jae
push
cmc
pop
pop
cli
stos
push
ret
or
adc
dec
pop
mov
loopne
jbe
loop
lods
cmp
sar
insl
xchg
pop
mov
popa
aaa
mov
mov
xchg
lods
mov
lret
bound
mov
test
jge
mov
push
or
js
in
std
pusha
mov
cmp
jle
mov
mov
mull
fidivrl
test
jp
cli
aad
xchg
out
outsb
stos
push
popa
jecxz
rcll
pop
cmp
gs
dec
xchg
out
jo
fstpl
sti
adc
arpl
mov
sbb
inc
jecxz
pop
push
jno
lret
fwait
jo
xchg
ret
aam
lds
lods
pop
adc
mov
pop
pop
clc
int3
or
add
into
add
test
xchg
sub
xor
add
in
aaa
mov
scas
jbe
mov
stos
add
sbb
fldl
and
out
jl
cltd
jmp
pop
stos
mov
int
mov
ror
cmp
lcall
iret
sbb
and
xor
jp
or
pop
popf
sahf
and
add
adc
mov
es
mov
mov
shlb
test
sub
cmp
jns
sti
jno
mov
nop
push
push
mov
sub
cmpsb
shrb
mov
stos
jmp
lock
xor
jmp
dec
adc
cwtl
adc
ficompl
cmc
movb
push
adc
pop
mov
popa
push
adc
or
dec
push
fisubrl
lret
nop
sub
mov
jecxz
std
insb
inc
stc
bound
jecxz
repnz
jo
popf
pop
sti
sub
ret
nop
adc
dec
xor
cmpsl
outsb
mov
sub
icebp
pushf
arpl
insb
pop
push
push
or
pop
adcl
loopne
push
das
pop
lret
movsl
frstor
xchg
loope
push
and
sub
sub
push
aam
cmp
rclb
stos
sbb
fmul
shrb
cmpsl
sti
lret
cmc
clc
fs
jl
jb
sub
fimull
mov
dec
dec
push
cmp
mov
adc
ja
adc
movsb
fwait
imul
mov
pop
or
xchg
mov
cmp
or
push
jb
push
in
or
shr
and
test
mov
stos
cmc
imul
xchg
or
clc
andb
adc
or
xor
add
mov
add
inc
mov
cmp
mov
repnz
xchg
rcrl
lret
in
into
sbb
inc
adcb
aaa
dec
out
lods
rorb
cmp
ret
jecxz
or
sbb
jp
jb
addr16
jns
cld
mov
scas
dec
jb
mov
das
js
sub
lret
cli
inc
lock
cmp
aaa
in
mov
cmp
sub
test
cmp
bound
stos
in
test
jae
inc
fisttpll
scas
add
ret
int3
stos
lods
or
shlb
cmp
out
push
inc
stos
jmp
nop
repnz
inc
pop
dec
cmp
daa
mov
sub
sub
add
xor
repz
push
lods
bound
jg
aad
mov
fwait
mov
pop
out
push
push
xchg
and
mov
jg
dec
mov
popa
out
adc
clc
and
iret
addr16
stos
in
popa
je
dec
push
cli
xchg
lret
xchg
shrl
idivb
xchg
mov
lahf
cmpsb
jae
fstpl
or
lock
stos
cmc
or
in
test
fwait
mov
int3
outsl
outsb
cmc
mov
dec
jb
sahf
jmp
mov
sbb
cmp
lods
sub
imul
in
pop
jb
leave
in
fisttpl
sub
inc
push
js
push
mov
cld
or
mov
shlb
movsb
scas
xchg
in
repz
mov
xorb
sbb
in
sub
test
sti
xchg
adc
inc
imul
jecxz
xlat
jle
enter
push
or
sbb
repz
mov
mov
addr16
pop
inc
or
stos
cmp
mov
andl
mov
mov
adc
ss
sub
xchg
cmp
jo
aad
stos
xor
jmp
fs
inc
arpl
sti
and
int3
cmp
aaa
adc
or
dec
xorl
jmp
add
je
xchg
mov
xorw
leave
jecxz
mov
jnp
or
jno
cli
sub
mov
aam
mov
cmp
fildll
shl
cmp
dec
adc
fstl
scas
add
sar
jns
push
jb
xor
inc
stos
lcall
stos
xchg
push
or
or
mov
inc
add
mov
rcl
xchg
inc
mov
arpl
and
mov
stc
cmc
xor
test
call
test
out
xchg
push
jp
mov
adc
cmp
xlat
jne
test
mov
popa
sub
nop
jl
pop
mov
fdivrp
ret
fs
ja
insb
push
or
in
js
pop
push
xchg
dec
adc
mov
dec
cmp
hlt
adc
popl
sti
fstpt
ret
lods
outsl
bound
mov
insl
cmc
inc
or
fst
cmpsl
add
and
pop
ja
mov
mov
notb
repz
loope
and
mov
mov
leave
cmp
xlat
sbb
xor
push
cmp
cmp
jb
out
loope
sbb
loopne
test
pop
rorb
sbb
fstl
inc
andb
out
dec
stos
arpl
mov
jnp
sahf
sbb
adc
mov
xchg
rorb
int
jnp
and
out
cmc
or
cmp
scas
sti
cltd
and
fucomip
in
pusha
and
xor
push
push
push
add
jl
into
pop
ret
push
sahf
lods
in
test
cmp
insb
stos
in
loopne
jns
jecxz
leave
push
ss
inc
adc
fucom
ljmp
mov
faddl
in
dec
daa
push
xor
daa
sbb
dec
and
inc
add
ds
fnsave
ret
daa
sub
out
sbb
in
cmpsb
sub
and
jb
lods
pop
pop
mov
in
dec
std
jmp
pop
leave
xor
mov
test
jmp
aaa
icebp
lcall
cmc
push
inc
bound
pop
leave
jns
pop
cmc
dec
mov
jno
jl
gs
in
sbb
mov
fsubrl
in
lcall
stos
pop
loopne
or
std
cmc
mov
mov
aaa
sti
jecxz
std
push
jae
addb
sbb
ret
push
dec
jb
or
push
mov
xor
fs
cmc
and
inc
mov
push
pop
jp
lods
mov
mov
je
stc
and
adc
mov
inc
mov
jns
hlt
pop
les
in
pop
push
int
mov
fsubr
adc
and
test
mov
cld
push
int3
lcall
ret
lds
lock
int3
mov
movsb
lods
jge
fst
xchg
in
mov
fsubrs
push
lret
outsl
rcrl
jb
cli
xchg
mov
ljmp
sbb
dec
inc
jbe
inc
aaa
pushf
cmp
movsb
push
rcll
sub
cmp
pavgw
xchg
xchg
cmc
dec
sbb
jp
jg
mov
lea
nop
mov
popf
repnz
aad
in
fidivs
insb
std
leave
add
aaa
mov
sub
leave
pop
xor
test
pop
push
mov
aad
int3
mov
jb
sbb
mov
cmp
pop
and
pop
add
cmp
cmc
pop
call
jbe
mov
addr16
ljmp
xlat
aas
push
push
cmp
mov
and
daa
jg
mov
mov
pop
popf
pop
lcall
icebp
ds
jns
add
and
ljmp
dec
cmp
inc
push
xlat
inc
jne
repnz
jo
sub
int3
sbb
stc
jbe
call
pop
sbb
sbb
mov
add
hlt
pop
scas
repnz
pop
lcall
orl
into
dec
mov
xor
mov
push
push
aad
mov
xor
push
xor
out
orb
push
pop
insb
or
jl
jmp
loope
mov
inc
xchg
xor
add
sbb
push
sub
es
iret
test
cmp
pop
insl
sub
jl
inc
sbb
push
int3
int3
nop
jae
in
shrb
mov
or
in
and
popf
mov
lcall
jecxz
in
push
mov
lods
and
dec
lcall
sbb
cmc
lret
xor
sti
out
sub
ficoml
and
dec
mov
add
lcallw
lea
sub
fcoml
adc
inc
mov
cmpsl
lret
xor
jp
add
daa
popa
inc
adc
in
icebp
aaa
popa
jo
adc
out
repnz
inc
xor
cli
and
mov
je
xchg
mov
adc
data16
jno
jae
ja
adc
ja
es
loope
inc
pushf
jmp
icebp
xor
out
lahf
pop
add
mov
cmc
pop
in
push
push
es
scas
out
xor
cmp
and
imul
jecxz
cmp
sti
loopne
notl
mov
outsl
mov
lret
shlb
inc
addl
jmp
xlat
mov
dec
sub
mov
ror
jne
push
andb
data16
mov
xlat
xchg
adc
subb
push
lret
sub
jmp
aam
in
into
fbstp
repnz
es
roll
jp
jae
es
out
dec
jne
xchg
inc
repz
in
test
pop
cmp
icebp
decb
and
into
rcr
jle
test
pop
cmpb
push
hlt
fisttps
jne
movsb
les
mov
rorb
test
inc
in
out
or
mov
mov
ret
loop
push
mov
nop
out
xor
pop
addr16
fdivrs
ljmp
push
imul
test
cmp
repz
leave
std
stc
xor
imul
stos
repnz
dec
es
fnstsw
sub
mov
es
test
out
lahf
mov
cld
push
cs
add
test
rcrl
outsb
in
filds
shll
add
sahf
subl
push
stos
rclb
popf
sbb
xchg
bound
mov
pop
out
mov
sub
inc
daa
cwtl
mov
es
jnp
test
out
mov
fdivr
dec
adc
jmp
jnp
pusha
adc
lret
lret
inc
iret
pop
dec
hlt
iret
jmp
lret
cld
hlt
pop
pop
jge
pop
iret
out
shl
mov
aad
jl
in
std
mov
cmp
add
cmp
pop
test
lock
aas
leave
sarb
fldenv
or
push
jecxz
movsb
mov
and
dec
loopne
jb
mov
inc
xorl
lock
inc
ret
inc
ss
dec
or
iret
daa
in
jl
in
jns
jb
pop
es
jne
popf
mov
sub
push
in
dec
xchg
js
push
insb
test
adc
cmc
ds
pop
movsb
sbb
jnp
loopne
mov
repz
shl
jl
je
jl
push
jb
lcall
xchg
jl
push
adc
mov
jecxz
negb
out
lcall
arpl
test
push
add
adc
les
lcall
cmp
push
jno
mov
push
outsl
in
lods
add
out
mov
movsl
sbb
dec
sbb
mov
add
push
andb
push
and
xor
pop
mov
adc
push
fst
push
pop
mov
cmc
call
dec
testb
and
lcall
or
add
jp
inc
lods
in
mov
inc
frstor
jle
inc
mov
addr16
adc
sub
sarb
xlat
mov
or
lcall
cmp
cmp
mov
push
dec
cmpsb
inc
cld
xor
pop
cmp
mov
aam
inc
xchg
fucom
xchg
jbe
movl
stos
mov
arpl
xchg
dec
dec
push
enter
fmull
push
fsubrp
mov
int3
and
notl
shlb
fld
xlat
jb
or
cmp
jge
test
cmc
data16
cmp
test
rcrb
push
scas
and
sbb
jo
pushf
push
inc
lret
or
daa
popf
jnp
fistl
pop
ljmp
mov
negl
push
and
aaa
fsubrl
inc
int
lret
or
dec
jle
jle
shll
stc
cmp
sbb
push
xchg
rclb
es
adc
jne
clc
push
jae
push
mov
in
xor
and
sbb
dec
ljmp
mov
std
mov
dec
xor
mov
jb
push
pushf
jmp
mov
mov
sbb
mov
js
data16
mull
movsb
pushw
into
rcr
mov
mov
in
mov
arpl
push
or
dec
ror
fisttpll
xchg
dec
mov
rcrb
pop
test
aad
mov
dec
fstl
push
das
cmc
out
in
mov
out
lods
sahf
jnp
pop
xlat
outsb
cmp
mov
test
in
popa
mov
mov
fldl
lcall
ss
push
jmp
out
enter
jecxz
in
icebp
lock
roll
mov
or
push
sub
pop
and
sbb
imul
rcll
movsb
in
arpl
inc
xor
lock
pop
xchg
mov
cmp
mov
and
in
ljmp
hlt
shlb
jl
loope
imul
mov
jbe
cmc
or
ffree
insb
xchg
add
cltd
push
std
out
mov
insl
fcmovnbe
adc
test
cmpsb
xor
and
rcl
inc
or
add
in
push
test
mov
inc
mov
rclb
jae
pushf
pop
push
pusha
sbb
les
aas
repnz
enter
test
out
dec
xor
push
cmp
scas
adc
mov
shl
pop
xor
stos
or
adc
data16
add
into
mul
push
cli
dec
add
fldenv
mov
and
cmc
dec
jle
scas
sbb
push
mov
xor
rcrb
sbb
fisttpll
sub
in
aaa
pop
lcall
fstpl
sub
notb
clc
in
sbb
pop
adc
lods
movsb
xchg
jo
cmp
inc
stos
adc
stos
pushf
xchg
sbb
add
push
mov
rcl
mov
mov
cmc
and
xchg
sahf
adc
testl
cmp
adc
ret
and
and
fistpll
orb
das
and
cmc
cmp
xchg
mov
fildll
iret
rorl
and
inc
mov
jb
outsb
pop
neg
dec
mov
xor
add
mov
and
sbb
dec
sbb
fwait
lods
jg
in
out
das
lea
mov
jmp
ljmp
sti
shll
push
in
xchg
fsubrl
dec
mov
scas
popa
xchg
adcl
cmp
mov
fimuls
jl
jb
in
jmp
imul
mov
dec
push
insl
sub
pop
data16
mov
sbb
xor
sti
push
sub
pop
xchg
xchg
and
sti
loope
stos
cmp
jne
mov
jo
daa
fisttpll
sti
sarl
in
std
test
push
adc
stos
popa
jle
pop
stc
inc
sub
mov
mov
jmp
cmc
xchg
inc
xor
mov
arpl
adc
mov
push
das
sbb
push
aaa
frstor
sub
xchg
cmc
int3
loop
cli
mov
in
dec
sbb
adc
rolb
cmp
jp
sbb
pop
pusha
cmp
and
movsb
xlat
xchg
dec
cmpsb
or
je
imul
test
xor
jecxz
rorl
movsl
jo
in
or
stos
shrb
daa
subl
in
rclb
xor
scas
cmp
push
outsl
fsub
movsl
and
cmp
or
and
movl
jo
movl
addr16
add
test
nop
ret
xor
xor
mov
repz
cmp
loop
lock
add
repz
ss
out
jo
and
xchg
jbe
mov
mov
add
jecxz
jecxz
jns
push
mov
flds
add
cld
lret
inc
insb
mov
mov
mov
mov
inc
push
jmp
push
fidivs
shlb
adc
xchg
in
or
xor
push
xchg
pop
lret
int
outsb
arpl
fnstsw
sub
test
mov
and
lcall
inc
test
cmpsl
lret
ja
mov
cmp
sbb
cld
test
or
pop
pop
mov
mov
mov
in
lods
in
cmp
xchg
fstpl
cli
in
mov
lret
cmp
mov
fwait
test
push
testb
mov
outsl
jmp
mov
ret
inc
iret
test
mov
push
rcll
inc
cli
xchg
sub
mov
inc
imul
fwait
mov
xchg
xlat
jecxz
add
and
ljmp
add
mov
in
daa
sub
mov
sub
inc
pop
ja
pop
addr16
lds
mov
movsb
or
pop
pop
lret
in
fsubrs
fnsave
aam
cmpsb
pop
lahf
sahf
dec
mov
dec
xchg
add
mov
jle
or
scas
dec
fbstp
push
dec
hlt
mov
lcall
add
sub
pusha
sti
xor
outsl
stos
in
stos
fstp
repz
cmp
dec
adc
sbb
pop
nop
pop
fbstp
aad
mov
imul
scas
jmp
in
sbb
enter
fildl
and
mov
lret
rorb
jae
dec
lret
fstpl
out
xor
mov
jle
pop
movsl
imul
fidivs
out
popa
rorb
imulb
push
cmp
or
xchg
aaa
scas
or
data16
andb
test
and
xchg
bound
pop
notl
int
repz
jne
cmp
cmc
inc
and
jb
dec
push
add
dec
divb
sahf
ja
cmc
and
pop
repnz
pusha
jp
mov
dec
and
repz
push
ja
aam
dec
in
xchg
cmpsl
jbe
mov
mov
add
pop
scas
fwait
popf
mov
jne
mov
adc
push
add
in
lahf
xchg
sub
lods
mov
sbb
fdivl
dec
adc
jne
inc
push
arpl
cmp
cmp
and
xchg
push
add
test
cmpb
add
js
jg
xchg
push
pushf
jns
sub
aas
aaa
xor
lcall
add
push
movsl
leave
lea
mov
sbb
jae
cmc
aas
cmp
js
jo
rcr
cmc
or
stos
jne
lods
jne
xchg
cmpsl
or
xor
fisubrl
mov
adc
pop
lahf
fwait
je
ret
pop
in
adc
adc
in
adc
bnd
jecxz
add
sarb
sub
jbe
adc
sbb
scas
das
stos
cmc
lods
xchg
pop
out
push
scas
mov
std
jp
sarl
push
cmpsb
mov
movb
add
dec
popl
xchg
jl
mov
fwait
insl
cmp
les
shll
cmp
cmp
cli
inc
enter
mov
in
fsts
fwait
not
mov
push
jecxz
pop
xlat
mov
sti
leave
pop
pop
in
mov
loopne
lahf
mov
sbb
inc
cltd
xchg
xchg
aad
sub
shll
data16
add
sbb
sbb
jns
and
xchg
lret
mov
mov
into
mov
and
stos
in
fs
mov
out
inc
sti
lcallw
pop
jp
xor
push
lahf
push
add
test
push
sbb
sbb
and
pushf
fwait
shrb
or
jmp
jmp
jp
mov
movsb
push
mul
loop
aaa
cmc
xchg
pop
lcall
sbb
scas
sbb
mov
aad
loop
mov
pop
lcall
xchg
pop
adc
xchg
push
sarb
aam
or
call
iret
mov
adc
cmp
in
test
or
or
mov
jae
out
pop
outsb
sub
push
hlt
sbb
les
and
adc
jmp
lret
mov
jp
cmp
fs
inc
xor
enter
xchg
sbb
js
sub
jb
cs
dec
adc
es
adc
scas
mov
inc
loopne
xrelease
cmc
push
cld
jecxz
cmp
push
lock
out
mov
mov
in
lods
push
icebp
inc
dec
gs
in
pop
jbe
mov
sbb
roll
jl
in
outsl
pop
add
mov
dec
int
add
fmull
pop
xchg
add
jmp
mov
sbb
stos
imul
aam
xor
pusha
cmpsb
repnz
in
adc
dec
mov
in
ficoml
xchg
cmp
jno
add
push
cmpsl
add
or
lods
cltd
pop
in
pop
sbb
in
jb
xchg
jp
jle
ja
aas
sti
gs
hlt
cwtl
mov
pop
mov
test
jp
mov
int
sub
lock
loope
cmc
adc
inc
cmp
jo
adc
or
push
fcomps
jne
pop
enter
cmp
jbe
mov
test
sbbb
dec
ffree
repnz
pop
fimull
rolb
lret
jle
cmp
imul
icebp
or
pop
scas
cmpsb
in
push
jmp
fisttpll
and
adc
lcall
push
pop
cmp
movsb
or
sti
add
xchg
push
imul
jns
dec
lods
cmp
stc
pop
lret
gs
mov
inc
loope
rol
in
fistl
mov
fldl
jbe
dec
call
xlat
jns
or
hlt
jns
xchg
push
fcmovu
test
sbb
jp
push
not
push
push
mov
stos
imul
jmp
gs
pop
outsl
fnstenv
aas
fildl
add
dec
xchg
pop
and
sbb
adcl
int
jl
xchg
pop
sub
inc
negb
dec
xorb
mov
cmpsb
mov
jbe
dec
push
or
push
pushf
fadds
jae
jg
fldl
cmpsl
dec
mov
mov
pop
add
inc
pop
mov
ja
pop
sbb
lahf
test
negb
in
cltd
sahf
and
or
or
mov
nop
cli
imul
mov
xor
das
cli
mov
divl
lods
imul
rcrl
sti
xor
cld
pop
push
rep
mov
or
sub
mov
outsl
mov
cmc
orb
mov
xor
mov
sub
mov
cmp
pushf
xchg
stc
xor
sbb
mov
int
cltd
fnstsw
add
mov
sub
fstl
out
daa
out
notl
popf
pop
sbb
scas
pop
and
scas
insl
insl
mov
mov
or
outsl
add
dec
repz
inc
pop
test
arpl
gs
jne
fnstsw
mov
sub
movsb
mov
xor
cmpsb
inc
std
in
frstor
sub
sub
lock
bound
mov
aam
sbb
fnstenv
fisubl
jl
outsl
imul
and
pop
outsl
repz
cmpsb
xchg
and
clc
sbb
shrb
dec
xlat
or
loopne
mov
shr
in
out
pop
jmp
and
mov
movsb
jb
dec
xor
lret
je
nop
xchg
and
xchg
mov
add
mov
add
add
mov
dec
stc
fs
push
andb
int
and
bnd
mov
lods
lret
mov
shrb
popf
stos
mov
repz
mov
in
push
xor
aad
int
into
dec
shll
push
jbe
movsb
xchg
add
es
orl
adc
and
jmp
and
fildll
popa
cmpsb
rcl
sub
int3
in
aad
lock
xchg
mov
push
jnp
int3
jmp
bound
jl
sbb
sbb
cs
or
repz
sub
loop
scas
lock
repnz
lret
in
and
lods
inc
adc
test
call
dec
xchg
pop
sub
xlat
xor
fbstp
test
mov
or
dec
rorb
pop
in
add
mull
lgs
loope
and
mov
add
cmc
inc
stos
cmp
lret
scas
nop
jns
subb
cmc
ret
sbb
push
inc
jb
lea
incl
or
jl
mov
mov
push
cmp
les
stc
mov
sbb
pop
mov
loopne
mov
das
idivl
or
aam
pop
fldenv
sub
dec
leave
push
mov
inc
pop
push
movsb
mov
push
jbe
jo
iret
in
mov
cmpsb
push
loopne
sbb
in
mov
aad
arpl
lret
push
ror
add
aam
or
scas
enter
scas
call
ret
xlat
sub
jp
sbb
adc
push
mov
movsl
clc
jae
push
shl
mov
cmpsb
dec
ret
ret
pusha
inc
fstl
mov
or
pushf
subl
loope
xchg
dec
in
sub
push
jns
ds
sub
lcall
xlat
dec
ja
loopne
jns,pn
in
pop
xor
scas
xchg
sbb
jbe
pushf
in
inc
and
fisubrl
mov
mov
adc
popf
xchg
mov
ret
xor
inc
insb
dec
in
js
sub
pop
lahf
pop
mov
mov
cmpl
sub
orb
push
sbb
xchg
push
scas
in
pop
xchg
imulb
rcr
sbb
inc
adc
xchg
insl
stc
pop
sub
in
js
mov
cltd
and
loopne
scas
xor
stos
push
add
lret
in
ds
scas
test
shl
mov
in
cmp
lret
and
outsl
mov
add
mov
mov
sub
ss
ja
lahf
inc
and
and
or
rorl
int3
out
popa
inc
movsl
xor
push
adc
mov
addl
leave
adc
mov
add
fisttpll
or
sarb
hlt
push
enter
xor
fucomip
in
pushf
mov
lcall
jg
push
cmp
sar
into
mov
add
jmp
in
mov
sbb
nop
fsubrl
mov
inc
push
or
pop
pop
movsl
push
adc
imul
dec
jp
insb
jecxz
cmp
sub
nop
out
gs
ljmp
jbe
mov
mov
popf
xchg
mov
add
icebp
adc
xor
scas
jae
lods
cltd
and
mov
or
out
shlb
dec
js
mov
adc
fists
xor
ficoml
mov
xor
pop
mov
xchg
out
arpl
lock
pop
cmp
and
mov
test
jb
fnsave
cmp
sub
popl
ret
scas
rcll
test
push
leave
sub
fstl
sbb
mov
stos
cmp
cmpsb
cs
mov
jge
mov
cwtl
cmpb
sub
fstpt
inc
dec
mov
sbbb
jp
push
adc
aaa
cmc
cmc
insb
out
mov
out
in
gs
and
mov
pop
addr16
cmpsb
orl
or
sbb
add
int
loopne,pt
ret
mov
movsb
pop
xchg
fisubrs
or
out
or
lods
lahf
mov
adc
xchg
push
not
mov
scas
xor
jo
or
pop
lods
or
lret
mov
jl
push
rcrl
mov
lods
or
lods
std
lret
lods
out
fnstenv
xor
test
sub
push
or
dec
imul
fmuls
jbe
push
adc
ss
repz
cmp
mov
push
sbbb
enterw
jbe
repz
aaa
shlb
shlb
cmpsb
xlat
rolb
nop
lods
leave
inc
mov
jns
jl
or
mov
jo
inc
fmul
movsb
cmc
push
stc
cmc
or
insb
add
mov
mov
push
inc
insl
aam
stos
cmc
cmp
xor
loop
jecxz
mov
ds
mov
cmp
out
ljmp
lahf
pop
popa
lods
or
jns
imul
add
in
sbb
movsl
cli
cmp
dec
and
jp
jl
push
shlb
push
push
or
sub
mov
sub
mov
mov
insl
cmc
loope
scas
sub
mov
dec
xor
cmovae
enter
cld
push
mov
add
mov
test
imul
mov
out
inc
jle
add
adc
dec
jle
sbb
lea
std
jg
repz
pop
adc
and
jmp
popf
popa
cmpsb
jb
ss
cmp
xchg
out
out
jl
sub
mov
inc
inc
test
push
sub
mov
jl
jno
leave
imul
jmp
sbb
sub
jnp
mov
adc
mov
add
inc
add
dec
dec
sti
and
mov
mov
jp
nop
cltd
adc
push
lds
cmc
cltd
in
dec
std
pop
imull
in
insl
xchg
mov
sub
or
inc
pop
jbe
jp
push
pop
lock
push
jo
fstl
gs
mov
mov
fistps
out
pop
and
insl
ds
push
loopne
mov
fadds
jmp
addr16
cmpsl
and
rclb
push
imul
inc
mov
fmull
xchg
sbb
imul
mov
dec
loopne
or
aas
jle
sbb
sbb
or
div
lods
jae
out
and
jmp
scas
xchg
ds
adc
add
add
jne
pushf
aam
fiadds
mov
lock
pop
lret
cmpl
jmp
scas
mov
mov
mov
loope
inc
aaa
imul
int3
and
mov
adc
xchg
add
call
jae
shlb
das
outsl
cmc
jecxz
xchg
sbb
mov
outsl
cmp
shll
inc
fmul
lds
add
xor
mov
outsb
gs
stc
in
xlat
and
imulb
scas
repnz
subb
scas
fisubs
mov
mov
hlt
mov
mov
mov
jb
fnstenv
sti
add
mov
jmp
lahf
jmp
fwait
int3
lods
sub
sub
and
cmp
jg
pop
xchg
xchg
in
loopne
xlat
pop
les
inc
inc
mov
cwtl
fiadds
xchg
cli
pop
and
popa
stos
adc
lret
adc
jle
ljmp
adc
clc
mov
ja
xchg
dec
and
pop
jno
pop
pop
in
testb
push
leave
dec
movsb
rorl
cmpsb
ret
fdiv
jo
scas
enter
and
pop
daa
dec
add
lcall
ret
and
push
jae
stc
pop
mov
js
sub
movsb
mov
xor
add
das
test
lea
jmp
dec
or
out
jb
lock
lcall
mov
int3
dec
jle
push
rcr
loopne
pusha
adc
sbb
daa
jnp
inc
xor
adcb
mov
mov
mov
or
js
lock
repz
jecxz
sub
add
sub
int3
cmp
rcrb
aad
lcall
aam
insl
mov
cmp
sbb
clc
pop
and
mov
dec
cmp
ds
sub
cmc
pop
lods
lahf
pop
arpl
lock
outsb
fwait
inc
test
lds
jne,pn
call
out
pop
sbb
mov
pushf
imul
inc
mov
aad
inc
dec
pop
dec
mov
or
sti
in
pop
xchg
arpl
jmp
lods
movsl
shlb
out
imul
push
and
shlb
jne
xchg
ja
clc
pop
cmc
sbb
adc
scas
out
xchg
push
or
add
shl
lahf
mov
sahf
fadds
sti
sahf
sti
orl
xchg
shr
xlat
cmp
scas
fwait
das
adc
mov
in
sti
lahf
mov
movsl
jge
xchg
push
cli
mov
inc
test
lock
ja
arpl
ficompl
sbb
ja
insl
adc
mov
jns
lahf
test
xchg
jae
fsubrs
xchg
cmpb
xchg
jb
cmpsb
inc
adc
fs
pop
sarl
sbb
bnd
in
icebp
arpl
pop
add
mov
in
lea
xchg
ja
pop
xchg
fisttpll
sub
out
lret
gs
aaa
enter
loopne,pt
scas
sarb
in
pop
mov
out
fs
outsl
sub
movsb
test
vmovaps
jne
ss
jns
pop
add
cmc
lret
bound
dec
jbe
addb
adc
push
mov
shlb
ja
test
push
pop
cmp
das
test
xchg
lret
xchg
adc
or
lock
jne
loopne
movsb
stos
mov
dec
aaa
push
sub
gs
les
xchg
fnsave
je
sbb
mov
test
pop
fldl
lods
cld
jecxz
sbb
inc
xor
inc
pop
mov
push
ljmp
in
popa
jbe
adc
and
and
mov
jecxz
int
xchg
dec
sub
jge
js
out
xchg
outsl
lock
push
jb
sub
orb
sbb
ret
arpl
jb
shr
push
data16
movsl
out
xor
fcmovnu
iret
xor
pop
mov
sti
cmpsb
lea
cwtl
mulb
in
push
inc
jge
jecxz
das
inc
jmp
mov
pop
and
insl
add
dec
str
jbe
jmp
inc
sub
xor
inc
or
pop
push
sbb
loope
sarl
dec
dec
cld
loop
mov
leave
loope
mov
into
adc
jge
adc
xchg
sbb
pop
xchg
nop
cltd
push
arpl
ss
pop
mov
sub
fs
mov
das
push
xor
cmc
sbb
aaa
add
mov
movsb
dec
cmp
xor
push
fstl
adc
pop
cmp
mov
jb
push
mov
loopne
and
inc
dec
fadd
or
jbe
xor
jbe
or
mov
xor
inc
cmp
ds
ret
cmp
xchg
mov
shlb
jns
jp
rcl
xor
shll
sbb
into
repz
shlb
adc
out
sbb
arpl
xchg
sar
outsl
int
test
xchg
push
std
cmp
mov
aad
sbbl
in
add
fs
push
or
imul
jno
pop
je
repnz
sbb
stc
aaa
bnd
ret
mov
call
mov
stos
and
roll
adc
jnp
cmc
loopne
mov
sbb
repz
mov
pop
or
das
loopne
bound
xchg
out
mov
sub
mov
add
xchg
push
mov
push
and
mov
leave
int3
mov
adc
cmp
mov
gs
repnz
cmp
mov
in
add
fnstenv
cmc
push
sub
dec
rcrb
mov
loop
or
dec
ret
shlb
iret
insb
in
ljmp
mov
xchg
sbb
rcrb
ret
mov
fildl
pop
in
push
mov
xchg
jecxz
les
lods
adc
jae
insl
scas
lds
arpl
dec
or
xlat
jo
cmpsl
test
or
push
in
aaa
icebp
mov
mov
xor
pop
mov
iret
mov
jecxz
push
sub
repnz
aaa
or
push
scas
cmp
test
jbe
push
je
jb
leave
mov
shlb
js
push
xchg
pop
pop
in
int
lds
lock
jne
fisttpll
enter
pushf
stos
int
faddl
imul
jae
in
insb
add
fcoml
popa
jmp
cs
inc
and
pop
ret
mov
pushf
adc
outsl
pusha
fistl
or
xchg
cmp
iret
pop
mov
xchg
loope
fistpl
mov
jmp
cs
mov
or
pop
fldln2
addr16
inc
xlat
rorb
or
mov
cmpb
int
jno
aaa
xor
movsl
xor
arpl
js
aam
sbbl
mov
sahf
pop
mov
vpandn
leave
pop
sbb
jb
jl
push
dec
mov
sbb
out
inc
jecxz
xor
dec
mov
in
filds
adc
ja
sbb
jne
ljmp
dec
xor
pop
in
push
mov
das
xchg
mov
outsl
cmc
outsl
movl
and
test
ret
inc
jle
or
adc
xchg
inc
push
jae
and
roll
movsl
inc
or
jle
xchg
push
aaa
movsl
fnstenv
subb
push
cmp
sti
jmp
iret
push
lods
rcr
lahf
dec
mov
std
mov
loopne
inc
cltd
insb
jle
mov
jb
dec
sbb
aas
ljmp
mov
fisubrs
or
xor
repnz
fld
mov
mov
push
xchg
rcr
aam
fcmovnbe
push
adc
pop
orl
xchg
test
sub
ljmp
shrb
or
cmp
lahf
mov
cmp
and
mov
xchg
xlat
jge
push
cmpl
jns
ret
sbb
sbb
aad
or
shll
jb
lock
movsb
xchg
int3
cmp
sbb
ds
mov
fisttpll
xor
ret
push
jno
cmp
sbb
daa
stc
js
aad
push
push
fidivrs
sub
icebp
outsb
mov
fstl
push
mov
call
jmp
fisttpl
test
mov
xchg
cs
imulb
mov
dec
jp
cmpsb
xor
xlat
inc
push
rclb
shrb
push
inc
cli
nop
mov
es
outsl
xchg
in
pop
ret
jb
in
cmp
lods
pop
inc
xor
sahf
ret
push
pop
mov
stos
dec
mov
sub
stc
in
leavew
adc
popa
iret
jae
xor
add
insl
mov
dec
lret
pop
nop
fimuls
push
mov
push
dec
mov
loopne
mov
and
loope
stos
cmp
lret
push
rcrb
cmc
mov
out
inc
push
xchg
add
jecxz
and
data16
or
mov
add
push
test
es
inc
in
xor
fucomp
push
sbb
adc
dec
push
mov
cmpxchg
in
or
mov
jae
ret
jecxz
mov
push
lock
in
xor
jecxz
sub
push
negb
inc
in
sbbl
shrb
es
add
jo
adc
stos
pop
adc
int
lret
sarb
sub
jge
sbb
sti
shll
xchg
insb
in
das
mov
aas
repnz
push
loopne
int3
push
jne
mov
xlat
mov
pop
lahf
sub
mul
enter
ja
sub
sbbb
xchg
frstor
cmpsb
fcoms
cmc
mov
jecxz
xor
mov
jae
add
rorb
push
add
fildl
xchg
pop
jns
mov
add
add
push
dec
pop
sub
testb
leave
ret
cltd
ljmp
xlat
ffreep
sub
push
repz
ficomps
gs
or
mov
push
add
clc
fwait
ret
ret
mov
lods
adc
mov
pusha
test
mov
out
xor
and
es
ss
aad
stc
jnp
ds
in
cli
mov
mov
nop
xlat
mov
or
push
mov
adc
dec
jg
sti
xor
addr16
ljmp
sti
mov
mov
cmp
push
stc
jno
aas
stos
cmc
fcoml
push
adc
jbe
push
xchg
inc
outsl
insl
mov
stc
cwtl
addr16
std
jbe
and
in
or
jns
cld
js
ret
lock
jae
sub
pop
in
roll
xor
clc
push
xchg
pop
or
add
and
pop
in
fs
cmpsl
stc
pop
push
or
mov
mov
inc
lret
or
movsb
add
lcall
test
xchg
js
mov
jnp
cmc
ret
pop
in
stos
mov
push
cmp
jg
aas
in
mov
jecxz
adc
imul
mov
js
fisttpll
add
xchg
xchg
push
push
mov
imul
pop
fists
jle
xor
scas
sarl
inc
xor
mov
push
repnz
mov
sub
dec
push
push
insl
es
lods
jmp
adc
mov
insb
xor
xlat
sbb
dec
adc
cmp
out
jns
cmc
ljmp
adc
adcl
and
sbbb
adc
inc
sbb
lahf
ljmp
mov
in
adc
jb
stos
in
xor
mov
testb
mov
inc
mov
ret
add
iret
or
dec
add
in
cmp
lahf
daa
fisttps
int3
lods
cmp
mov
in
out
mov
push
and
push
cmpsb
mov
mov
mov
rolb
sbb
jbe
mov
add
jecxz
cmp
stos
jmp
and
pop
adc
xchg
sbb
mov
mov
test
xor
inc
in
aas
sub
stos
in
int3
loop
sarl
out
fnstsw
pusha
add
lcall
inc
lret
in
mov
fstpl
test
cs
jecxz
outsl
dec
rcrb
mov
inc
test
test
mov
jns
sub
sub
cmp
push
or
lds
xchg
sbb
fs
mov
movsb
dec
fidivl
popl
add
jp
and
jmp
jmp
or
mov
xchg
mov
loop
outsl
aas
cmp
subl
jle
ret
sub
stos
popf
dec
fidivl
outsl
and
inc
je
jnp
xchg
imull
loope
flds
ffreep
cltd
sahf
stos
aam
adc
test
xchg
push
add
in
xlat
bound
ljmp
lcall
push
add
negl
pop
sbb
iret
ss
outsl
xchg
in
cmp
call
mov
mov
cmp
xor
in
mov
and
test
loopne
mov
out
idivl
xchg
nop
mov
push
mov
cmp
add
out
adc
rorb
xchg
and
mov
push
sub
pop
insl
mov
icebp
sbb
mov
cltd
pop
mov
push
clc
sub
int
orb
dec
mov
sub
cli
das
jbe
mov
jmp
into
movl
mov
push
div
dec
int3
test
shll
cmc
lret
orl
shrb
and
popf
insb
adc
insb
xchg
int3
mov
lret
xchg
dec
cltd
mov
cmp
mov
divl
add
add
mov
leave
jge
mov
cmp
lea
mov
lea
cmpsl
sbb
sbb
rcrl
ja
pop
mov
loopne
out
mov
nop
xor
or
stos
in
push
push
lods
scas
lds
dec
in
push
int3
mov
mov
push
scas
pop
sahf
popa
jne
cld
cmp
xchg
and
add
add
in
xor
andb
jmp
ret
jno
cmp
sub
mov
rcrb
sub
test
imul
mov
popl
jns
sub
cmp
push
pop
das
fbld
stos
repz
xchg
out
xlat
popf
jns
mov
sub
mov
push
into
mov
push
repz
loopne
mov
dec
adc
add
cmc
inc
add
call
push
xor
add
jae
pushf
ror
test
out
addb
and
pop
xor
pop
bound
les
call
lret
sbb
inc
ret
pop
mov
or
sub
iret
pushf
adc
mov
lret
int
addr16
ljmp
out
jne
js
or
insl
xchg
divl
mov
test
cmp
movsb
ja
out
clc
xor
sub
sbb
cmc
push
sub
call
das
repz
mov
in
mov
shrl
dec
lahf
sahf
in
stos
arpl
dec
lds
sahf
jae
into
push
push
pop
sbb
and
loopne
dec
pop
cld
cmc
or
xchg
mov
test
js
clc
repz
or
mov
test
movsl
push
push
int
mov
xorl
mov
les
xchg
adc
adc
mov
ja
stc
xchg
fsin
fdivrs
dec
insl
adcl
mov
xchg
push
popa
in
insl
sbb
rorb
mov
and
dec
pop
test
sbb
enter
dec
lcall
push
cli
call
add
inc
mov
pop
mov
mov
sarl
lcall
push
cmc
xchg
out
jne
cmpsl
or
and
or
cmp
imul
adc
sar
leave
std
js
clc
cmc
mov
ret
test
add
movsl
test
daa
loopne
dec
stos
add
out
js
jmp
imul
mov
movhps
inc
push
ja
mov
and
mov
inc
mov
pop
mov
and
adc
or
hlt
or
mov
sbb
pop
ret
mov
sub
or
cmc
das
cmp
shl
jmp
push
int3
dec
inc
cwtl
pop
sahf
out
cmp
push
jg
push
push
add
cmc
cmp
xchg
xchg
push
out
pop
fxch
or
adc
pop
cmpsb
xor
pop
popa
js
aam
cmc
xchg
loopne
movsl
imul
adc
inc
push
add
in
mov
xor
cmc
lahf
lock
push
xor
scas
mov
xor
dec
ffree
insb
mov
subb
mov
xor
pop
adc
repz
adc
cmpsb
in
mov
push
stc
jne
andl
jae
mov
xchg
jb
scas
cmp
adc
push
and
push
js
cmc
icebp
call
pop
sub
fidivl
mov
aaa
xchg
hlt
pop
adc
and
aaa
arpl
dec
and
cmc
jb
or
sub
aas
fs
imul
aad
mov
in
mov
lcall
dec
adc
insb
dec
addb
adcl
mov
jecxz
pop
repnz
movsl
and
nop
mov
push
cmp
pusha
sti
pop
pop
jge
movsl
xor
xchg
jae
dec
xor
fisubrs
les
cmp
mov
jnp
movsb
inc
sbb
add
xchg
pop
cmpsl
cmc
inc
pop
push
push
mov
mov
fistpll
ficoms
push
in
xlat
rcl
fldenv
mov
mov
aaa
sbb
dec
subl
hlt
mov
or
cmp
js
mov
and
jl
fisubrs
enter
push
pop
pop
xor
jp
dec
cmc
push
les
pop
notl
xchg
ljmp
xchg
dec
sub
fldl
es
xor
fucomi
enter
dec
fnstsw
in
adc
fstl
and
lock
test
and
sbb
clc
lods
mov
xchg
xor
push
test
negb
ret
adc
dec
scas
inc
int
mov
pop
push
movb
in
ret
xchg
clc
bound
fcoms
lods
mov
xchg
inc
mov
data16
xchg
fcomp
xor
sub
mov
mov
sub
jne
ret
js
lret
cmovg
jne
or
popf
add
mov
mov
in
pop
arpl
mov
lock
mov
and
mov
loop
divb
mov
adc
aas
movsb
xor
dec
ret
mov
push
jge
pop
repz
jge
insl
cmp
xchg
dec
mov
pushf
or
mov
add
add
faddp
mov
xor
add
push
xchg
cmc
out
gs
mov
dec
push
stos
push
pop
inc
repz
sub
bound
sbb
repz
mov
scas
call
cmp
leave
shll
cltd
sbb
mov
mov
movl
add
loop
idivl
dec
mov
rol
mov
mov
dec
and
lret
mov
xor
mov
fistpl
xor
ret
lret
cmpsb
lods
enter
imull
jecxz
sbb
mov
fsubr
push
mov
arpl
movl
hlt
fdivrl
and
std
jmp
js
and
mull
push
mov
pop
outsl
push
in
into
andb
pop
js
nop
pop
lock
notl
or
xor
sbb
push
ror
jmp
lds
dec
jecxz
dec
scas
mov
out
cmc
mov
jb
test
mov
test
inc
icebp
jnp
cmc
mov
add
and
mov
in
add
mov
rclb
outsl
dec
push
xor
ret
adc
push
adc
data16
add
jmp
fcomip
rcrb
shrl
lds
jp
aaa
pop
je
xor
jne
mov
sahf
push
mov
jo
test
mov
div
push
xor
popf
jns
frstor
and
insl
aas
mov
fwait
sbb
fldenv
jmp
faddl
dec
stos
mov
popf
pop
sbb
cmpl
adc
jmp
or
mov
mov
test
xchg
sub
test
xor
jns
scas
pop
xchg
insl
adc
nop
dec
jmp
popl
adc
icebp
popa
mov
subb
sub
push
jp
push
das
js
cld
stos
outsl
mov
fisttpll
push
push
lea
push
leave
lds
sub
out
add
notl
movsb
sbb
push
or
cmp
mov
orb
rolb
shlb
cmpsb
jp
mov
test
and
aad
call
fcompl
mov
jmp
mov
push
pop
inc
cmpsb
aam
and
xchg
lods
add
sbb
test
sti
sbb
jmp
insl
bound
aaa
sbb
fdivl
mov
or
pop
jb
cmp
and
jo
inc
cmp
mov
dec
in
ffree
adc
xchg
sti
cli
loop
xchg
pop
div
pop
cs
push
popa
dec
jmp
jl
add
pusha
out
aas
ffreep
pop
aaa
push
pop
add
lods
jl
jecxz
mov
popf
loope
push
fdivp
fsubs
jmp
fdivrl
pop
xor
dec
pop
jl
cli
fnstenv
xor
or
std
push
cmp
stos
jne
cmp
jge
mov
stos
ds
lods
mov
repnz
pusha
mov
jb
cld
push
sti
js
and
iret
cmp
pusha
addr16
add
popf
clc
cmpsb
dec
xor
insl
test
fnstsw
cmpsl
sbb
sbb
sbb
lcall
adc
jae
cmp
push
inc
mov
push
dec
push
mov
sub
stos
cmc
scas
in
loope
idivb
sub
and
pop
mov
rcrb
lods
ja
and
jno
xchg
or
divl
jge
gs
loopne
in
or
popa
mov
sbb
fwait
repz
sbb
xlat
add
mov
cmpsb
push
jg
pop
subl
inc
jnp
mov
pop
cmpsl
mov
cmp
jb
ret
jno
fldl
add
sub
pop
xchg
int
jno
xchg
lret
dec
sbb
inc
xor
cmp
push
inc
dec
mov
mov
test
sub
push
sub
pop
les
aaa
cli
test
cmp
stc
fisubs
fnstsw
insl
adc
movsb
ss
out
or
lahf
cmp
pop
mov
fsts
cmpsl
stos
xor
cmp
sbb
xlat
pop
movsb
inc
dec
dec
ret
in
jbe
outsl
mov
mov
pusha
int
mov
in
clc
into
push
push
mov
jno
lock
not
xchg
andb
frstor
add
sub
pop
stos
rcrb
leave
addb
mov
mov
xchg
aaa
aaa
lea
fidivl
xor
pop
icebp
insb
pop
loope
push
push
out
lcall
in
inc
inc
xor
jno
jns
and
out
jae
mov
mov
push
movsb
pop
xor
mov
or
jnp
in
xchg
xor
hlt
inc
xchg
enter
pop
push
xor
psrlw
mov
repnz
mov
mov
fmull
and
scas
frstor
xor
fcoms
xchg
mov
push
sub
lods
xchg
push
stos
inc
xlat
movb
aad
mov
sbb
jmp
and
xchg
popf
js
inc
jno
or
add
fst
dec
sub
jmp
ror
andl
inc
xor
int3
cmp
sbb
stc
clc
adc
in
pop
add
and
out
mov
or
mov
mov
outsb
xor
repz
popa
adc
mov
push
ja
cwtl
into
push
mov
pop
cmp
cmpsb
xor
sbb
popf
cmp
test
dec
aad
rcrb
mov
push
adc
xor
aam
fiadds
pop
mov
push
jnp
push
enter
adc
imul
or
fwait
fwait
icebp
dec
adc
aas
movsb
mov
pop
fstl
push
stc
push
inc
nop
in
adc
js
push
inc
mov
pop
cmp
shrb
pop
lahf
mov
dec
jbe
mov
mov
mov
cmp
aaa
dec
ljmp
dec
jo
ja
and
jae
in
xlat
inc
out
mov
xor
clc
push
jmp
lods
repz
push
jb
push
mov
daa
aad
mov
rolb
imul
adc
fisubs
push
cvtdq2ps
ret
inc
sar
repnz
xchg
loopne
cmc
mov
push
pushf
aam
dec
js
fs
push
pushf
pop
jmp
stos
xor
not
mov
xlat
clc
in
mov
push
ljmp
lahf
mov
jb
ljmp
mov
repz
push
int3
push
fcmovnu
fldl
aas
movsl
mov
aam
add
mov
mov
sar
xor
mov
mul
testb
mov
jl
fnsave
lcall
lret
orps
or
jge
imulb
ret
jl
mov
xchg
cmp
out
nop
cmpsb
scas
dec
pushf
mov
mov
mov
mov
roll
lea
jae
es
stos
dec
dec
jmp
sarb
xlat
mov
imul
jne
adc
xor
jbe
push
lods
cli
or
cmp
sub
inc
std
hlt
popa
test
push
ljmp
dec
mov
sub
mov
out
xor
jecxz
fst
arpl
in
mov
or
loope
jbe
fwait
dec
cmp
xchg
mov
pop
inc
jns
and
mov
cmp
nop
sbb
in
fistps
cmp
dec
in
cmp
sbb
jns
insb
sub
lods
in
mov
rcll
test
rcll
add
loopne
insl
xchg
std
sbb
outsl
mov
pop
gs
mov
jb
rclb
inc
pop
testl
jb
rcrb
dec
mov
in
or
pop
xor
push
add
dec
xchg
out
aam
fdivrl
sub
mov
sbb
xor
mov
xor
inc
or
cmpsb
arpl
cltd
sub
out
stos
adc
out
or
sarl
ficomps
jne
adc
cmp
stos
xor
cmp
js
lock
sub
andl
cltd
sub
xor
sbb
pop
outsb
aam
pusha
decb
sub
or
push
jb
sbb
mov
inc
lea
ss
popa
jbe
das
xchg
push
sub
ljmp
xor
or
dec
outsl
inc
sub
adc
gs
fldcw
xchg
mov
add
adc
cmc
fldt
or
mov
movsb
in
lahf
cmp
inc
call
lret
adc
insl
stos
sub
cmpsb
pop
inc
mov
arpl
or
dec
jecxz
add
movl
rorb
jle
cltd
sub
mov
mov
in
pushf
aad
ret
mov
popa
pop
jno
cmpsb
leave
scas
lret
mulb
xchg
leave
or
jb
repz
mov
jmp
xchg
mov
in
pop
xor
inc
loopne
xorl
aas
mov
jne
pmulhw
sbb
mov
sbb
div
push
push
mov
dec
add
fucomip
test
push
jne
leave
jg
lods
mov
out
fbld
out
fnstsw
test
pop
xchg
mov
pop
popa
mov
in
lds
int3
adc
push
insl
ja
loop
test
mov
add
mov
inc
loope
stc
stc
jle
inc
imul
popa
or
xor
jecxz
or
mov
stc
aas
push
in
repnz
inc
push
in
cs
mov
lahf
and
out
fstp
lods
mov
test
inc
ds
xlat
push
sahf
pop
push
dec
dec
cmpsb
push
rorb
pop
repnz
ja
sti
in
cmpsl
cli
fimuls
pop
and
ja
mov
jbe
and
addr16
nop
inc
add
ftst
cmp
repz
and
nop
jo
fstl
in
repz
ret
xor
fisttpll
test
sub
jp
int
repz
jge
test
stc
imul
fstpl
je
xor
xor
idivb
push
jne
fisubl
and
sbbb
cmp
mov
pop
cmp
test
jbe
jge
loop
je
jne
in
dec
dec
icebp
ret
ret
mov
inc
adc
xor
ret
mov
xor
es
out
inc
and
inc
int3
xor
imul
andb
in
ja
in
int3
xor
mov
out
and
sbb
or
loope
sub
add
clc
test
pop
cmc
imul
inc
cmpb
cmpsb
xorb
pop
ja
subb
fidivl
push
lret
dec
cmp
xchg
pop
pop
out
sbb
pop
cmc
out
test
push
pop
jecxz
cmp
cmc
test
or
in
mov
push
cmp
pop
jmp
xchg
and
fcoms
movsb
push
out
mov
test
push
roll
imulb
clc
sub
lret
dec
scas
ret
arpl
imul
lods
ret
lret
push
or
filds
mov
mov
popa
adcb
movsl
iret
mov
scas
mov
arpl
in
jl
sub
addr16
call
mov
mov
cmp
push
mov
mov
push
fs
sarl
mov
mov
mov
mov
popf
sahf
sub
adc
out
inc
push
push
cmpsb
movsl
mov
add
mov
arpl
dec
and
mov
insb
sub
mov
push
fisttpll
clc
sbb
inc
jb
push
adcb
rcr
cmpsb
cli
in
jo
xlat
lock
cld
scas
add
lret
xchg
int
nop
mov
xchg
stos
lahf
mov
add
adc
jge
cltd
push
jl
data16
add
adc
pop
and
inc
repnz
cmc
das
mov
adc
and
lret
call
pop
push
adc
ljmp
pushf
adc
cmp
pusha
lret
sbb
lahf
xchg
cmc
int
inc
mov
sti
in
mov
ret
or
in
cmpsb
push
les
jno
mov
pop
mov
jo
sub
scas
and
xchg
arpl
fnstsw
sub
sar
sahf
xbegin
and
inc
mov
cmp
xchg
push
in
inc
mov
lods
xchg
rorb
les
icebp
nop
xor
aas
cwtl
bnd
insl
imul
in
adc
ret
js
lret
fsubp
add
and
in
mov
mov
clc
cli
fnsave
push
outsl
or
pushf
push
lcall
add
mov
mov
js
push
outsb
jbe
jmp
push
nop
test
roll
cmp
ja
push
xor
cmp
es
data16
js
sub
movsl
sub
repz
fnstenv
mov
fwait
iret
fidivl
xchg
in
or
fsubr
mov
movsb
lds
ret
push
sbb
lret
stc
lods
je
stos
hlt
push
push
jecxz
int3
rep
outsl
lret
xchg
frstor
testl
and
lcall
and
xor
mov
or
stc
xor
push
popa
or
movsb
aaa
shll
and
push
repz
mov
cld
pop
push
imul
push
repnz
and
add
cmp
dec
fnsave
in
fdivrs
js
popf
out
or
push
in
popa
cltd
xorb
cmp
inc
sbb
xor
adc
in
sub
push
xchg
mov
ret
fistps
inc
pop
fnstenv
dec
stc
pop
add
jae
cmp
lea
ja
sti
jne
adc
mov
mov
mov
insl
out
shrb
decb
loope
aad
std
aam
fwait
and
xor
fbld
mov
add
mov
inc
inc
jns
inc
fstps
push
mov
mov
repnz
inc
cmc
dec
dec
mov
pop
inc
pusha
outsl
mov
adc
mov
sub
xor
testl
mov
jo
or
or
mov
cmp
jns
in
iret
mov
mov
push
lret
aaa
cmc
push
hlt
add
push
adc
mov
xlat
mov
xchg
and
mov
int3
cmp
movsb
inc
mov
movsb
lods
hlt
add
cmp
scas
arpl
sbb
movsl
mov
jne
je
push
or
gs
test
jbe
adc
gs
popa
incb
int
xor
fistpll
mov
inc
test
loopne
sti
movsb
jecxz
sti
cld
mov
adc
push
add
mov
jno
push
cltd
sahf
jne
popf
mov
aaa
lret
lds
fs
out
add
xchg
add
mov
out
mov
xchg
shrb
add
ret
or
loopne
cmp
jmp
cmp
cmp
add
cmp
in
sub
mov
test
cmp
stos
sub
jbe
sub
pop
enter
xor
aaa
mov
or
jnp
arpl
lret
loope
lret
lock
dec
xchg
data16
push
jle
arpl
pop
sti
mov
pop
mov
add
pop
ret
xchg
fisttpl
mov
je
repnz
and
mov
push
aam
bound
rclb
or
push
jg
mov
mov
aaa
pop
stos
sub
pop
mov
add
addr16
das
repz
xchg
sub
leave
xor
hlt
jecxz
mov
and
lcall
outsl
outsb
pop
mov
push
cmpsb
shll
iret
cmp
mov
or
push
sbb
std
enter
push
and
mov
jb
mov
adc
outsl
out
leave
adc
icebp
jnp
fsubl
xchg
and
jge
out
lcall
pop
inc
jb
test
xrelease
and
sbb
sbb
dec
or
mov
fnstcw
ret
jno
pop
cmp
aaa
aam
outsl
ficomps
lahf
push
rolb
aam
mov
nop
pop
pop
cmc
lock
fisttps
jno
dec
xor
xchg
movl
out
sub
xor
sub
dec
int
ds
sti
aam
jge,pn
cli
enter
fldl
pop
jns
add
cli
pop
add
lods
mov
jg
insl
andb
cmp
push
mov
mov
jmp
dec
in
movsb
pusha
xchg
mov
cmp
mov
sub
into
jmp
jmp
and
mov
add
jp
push
lcall
sub
sahf
aad
xchg
pop
mov
shr
xchg
lock
and
test
ret
jae
sub
rcrl
lret
sub
out
cmpsb
int3
loope
mov
bound
adc
aam
dec
in
and
mov
cmp
inc
adc
call
pop
xor
pushf
repnz
mov
dec
popf
insb
test
push
arpl
dec
sbb
icebp
pushf
pop
bound
scas
cmpsb
rorl
push
jne
ja
add
out
mov
es
cmc
fwait
mov
stc
repnz
jecxz
jb
in
and
mov
mov
rorb
sbbl
push
and
jno
out
jne
and
loopne
scas
mov
lahf
sbbl
xor
fnstsw
add
jae
pop
je
pop
inc
shlb
cwtl
mov
or
xchg
insl
push
ja
push
add
lea
out
lea
aad
movsb
add
cld
pop
repz
cltd
pop
mov
mov
pop
push
pusha
jl
cmc
jmp
sti
out
xchg
and
arpl
or
adc
arpl
and
sub
push
or
pop
int3
cmpsb
mov
enter
jb
mov
lock
pop
pop
sub
shl
jae
jno
push
sbb
sti
in
lcall
dec
imul
icebp
mov
iret
or
lods
xor
push
lahf
lcall
cmpsb
mov
cmpsl
dec
sub
mov
mov
in
scas
or
pusha
in
stc
jg
scas
xlat
repnz
scas
xchg
imull
outsl
push
cmc
cmp
aaa
fcomp
mov
repz
mov
pop
mov
jne
iret
mov
insl
lret
mov
sbb
xor
mov
jge
lret
fstpl
shll
loop
xchg
fcomp
outsl
jnp
cmc
push
sub
pop
mov
push
btr
cmpsb
mov
mov
sub
dec
adc
cmp
cmp
rorb
arpl
ja
mov
sub
cmp
or
scas
mov
adc
mov
jle
pushf
ss
adcb
ds
mov
xor
pop
ret
xor
je
push
dec
xor
push
in
movsl
push
data16
jno
mov
push
popa
pop
ljmp
arpl
mov
cld
cmpsl
and
imul
adc
pop
ljmp
in
jnp
repnz
jb
mov
xchg
or
aaa
sub
cmp
iret
scas
loop
clc
ret
jb
mov
mov
sbb
or
jb
mov
sub
sbb
repz
imul
mov
add
mov
cmc
test
and
ret
cltd
adc
out
pop
xlat
cmc
mov
or
pop
jno
lahf
add
das
rcr
mov
mov
shll
lods
mov
loope
push
pushf
aaa
stos
int
push
das
xchg
dec
mov
mov
mov
js
frstor
mov
scas
xor
lcall
lock
cltd
mov
subb
and
rorl
adc
repz
pop
or
fnstenv
mov
clc
imul
cmc
hlt
mov
push
pop
rcrl
pop
dec
stos
or
imul
fistl
cmp
popf
jno
scas
push
mov
stos
lcall
pop
dec
repz
in
jecxz
push
pop
mov
sub
xor
xor
pop
push
cmp
in
int
neg
mov
pop
sti
adc
shrb
popf
test
and
jae
sti
sub
jmp
jno
push
xor
roll
das
sub
insl
filds
xlat
sub
jno
jmp
test
xchg
pop
outsl
stc
cli
mov
in
push
and
loope
dec
pop
hlt
sbb
rcrb
inc
cli
fimull
dec
add
scas
or
outsl
xor
stos
cmpsb
jle
jae
adc
insl
data16
pop
and
dec
push
jo
popf
andl
popa
subl
xchg
cmpsb
movsb
sub
or
inc
sbb
fadds
testb
jp
push
sbb
stos
lock
cmp
mov
dec
pop
mov
ja
jo
mov
add
mov
int3
sub
bound
int
pop
jle
stc
sbb
test
stc
inc
lcall
jne
aam
jmp
out
and
int
pop
xchg
out
add
jecxz
add
add
mov
mov
sub
ret
in
jno
or
in
add
int3
out
sub
repnz
ficomps
insb
dec
jo
and
add
sbb
pop
sbb
mov
scas
xchg
iret
push
pop
jg
ret
pushf
movsl
xchg
jecxz
inc
iret
inc
sbb
sbb
dec
jecxz
fisttpll
xchg
dec
lcall
repz
push
xchg
mov
xor
add
jne
cmc
xchg
cwtl
push
cmp
inc
mov
or
pop
mov
sahf
repz
std
jae
repnz
testl
mov
mov
enter
add
push
cmp
cmp
pop
gs
arpl
gs
enter
sbb
mov
daa
popa
pop
in
adc
ds
in
cmp
xchg
jecxz
add
mov
adc
int
fadds
inc
into
arpl
xchg
sub
js
outsl
mov
inc
pop
cmc
or
pop
fldl
ja
cmp
inc
rcrl
js
jo,pt
stos
or
dec
std
mov
mov
sbb
mov
stos
mov
jbe
in
pop
sub
push
divl
test
sbb
in
pop
pop
cmp
adc
and
dec
fisubs
mov
pop
dec
adc
mov
icebp
aas
xchg
rcrl
sub
sub
popf
xchg
insl
inc
pop
jmp
ljmp
mov
add
push
cli
aaa
pop
jge
mov
cmc
jg
mov
mov
lcall
int3
or
cmp
jbe
int
daa
adc
sbb
jle
ror
outsl
xorl
movsl
fistpll
rcrl
mov
rcrl
xor
xor
int
add
jno
sbb
test
push
inc
and
and
in
xor
aaa
push
push
testl
popf
jbe
fisttpl
jb
mov
test
into
mov
enter
ret
push
lock
sbb
notl
scas
dec
jns
inc
movl
xchg
out
cmc
push
fdivr
cmpsb
sub
in
aas
popa
mov
pop
mov
test
popa
mov
mov
lret
mov
mov
daa
lcall
mov
push
aas
stos
shl
daa
gs
sahf
jo
out
idivl
ret
mov
push
fcom
sbb
xchg
shl
das
jmp
sub
bound
mov
mov
sbb
ds
testl
or
out
imul
cmp
and
mov
jg
push
lods
add
repnz
or
cltd
js
lret
mov
xlat
sti
and
cmc
outsl
sub
push
cli
mov
inc
jbe
add
adc
sti
inc
mov
inc
jl
add
inc
mov
xchg
cld
ja
jl
pop
in
jbe
push
or
fdivr
adc
inc
je
inc
gs
icebp
in
push
xor
pop
stos
or
add
ss
inc
push
ror
sub
std
pop
push
leave
add
in
push
dec
mov
insb
aas
lock
add
jno
cmc
ror
lock
mov
data16
or
insb
lret
sbb
mov
outsl
or
aad
jp
and
subb
stos
sub
pop
jmp
out
lea
xchg
pop
pop
mov
xor
shll
mov
fiaddl
inc
jbe
push
push
mov
repz
sarl
mov
clc
jmp
testb
clc
in
push
dec
out
mov
mov
popl
dec
xchg
jnp
jo
lret
push
pop
mov
or
imul
filds
popf
mov
pop
adc
mov
pusha
or
bound
and
in
cs
fimull
fidivrs
and
pop
stos
push
xchg
in
pop
add
aaa
or
mov
xchg
or
jp
cmp
mov
addr16
rcrb
scas
xor
cli
pop
push
xor
push
in
aad
sar
repnz
push
ja
in
aad
push
std
outsb
mov
mov
inc
xchg
jo
jns
mov
inc
out
sti
incb
dec
clc
push
inc
fnsave
sbb
fnstsw
je
fsts
imul
out
pop
jb,pn
loopne
pop
jbe
xor
leave
jg
repnz
adc
hlt
cmp
cltd
inc
add
lds
ficoml
mov
xor
fwait
in
jne
fldt
enter
arpl
aas
cmpsb
fstpl
inc
push
inc
cmc
decl
gs
enter
pop
icebp
inc
lahf
or
in
lcall
mov
xchg
pop
jne
xchg
add
push
sub
out
jmp
adc
sub
cmp
mov
mov
jmp
lock
and
inc
sub
push
iret
pop
sub
jnp
push
sbb
negl
mov
xchg
adc
dec
out
gs
inc
push
push
outsb
add
jae
add
in
ret
pushf
or
cmp
xor
sub
inc
in
sarb
fwait
sahf
je
mov
xor
das
cmp
push
roll
bound
nop
pusha
push
fisubrl
push
daa
lcall
xorb
sub
mov
pop
cmp
dec
fstpl
and
jns
pop
lods
aad
movsb
xor
mov
and
pop
pop
pushf
mov
mov
cmp
xchg
cmc
in
pop
addb
xlat
cmp
stos
stc
in
or
aad
repz
jne
cmp
add
add
cmp
test
fsubs
ljmp
mov
mov
cmc
loopne
jnp
dec
and
pop
and
or
stos
sub
in
das
or
call
mov
movsl
sbb
ds
icebp
xor
or
cmp
dec
sub
les
xchg
arpl
mov
cmp
lock
push
pushf
push
aaa
xchg
push
int
daa
dec
nop
cmpsb
xchg
jnp
dec
cmc
ja
cmp
out
mov
js
arpl
xor
sbb
sbb
repz
mov
test
jg
sarl
sbb
mov
loop
jbe
and
add
hlt
jbe
fnstcw
or
andb
ds
lret
add
rorl
mov
sarl
and
loope
cmp
imul
jne
nop
out
ja
fadds
stos
sti
in
rorl
pop
jecxz
sahf
mov
int
jb
pop
popl
dec
jmp
cmpsb
cmc
clc
loopne
les
cmp
mov
dec
stos
iret
push
jmp
adc
jb
lock
aaa
mov
pop
add
int
inc
cmp
lcall
and
inc
mov
es
ret
pop
push
mov
out
jp
mov
int3
mov
or
sbbl
repnz
test
xchg
cmp
inc
mov
sbb
lahf
jmp
jbe
push
add
subl
mov
dec
fistl
and
addr16
sbb
dec
mov
push
mov
xor
jnp
or
cmp
in
add
sbb
cmp
inc
jae
repnz
scas
or
mov
pop
xchg
mov
sbbl
xor
push
aas
lahf
andb
mov
cmc
std
or
and
pop
sbb
xor
stos
cmc
pop
dec
mov
xlat
mov
lods
sub
pop
idivb
sbb
jbe
divl
orb
push
in
push
les
idivl
jmp
in
cs
xchg
xchg
xchg
fistpll
jge
push
adc
mov
push
dec
out
in
dec
shr
pop
test
dec
add
push
lds
xchg
sbb
dec
loop
jmp
call
dec
out
lcall
cmpsb
les
xchg
xor
mull
lret
sub
shll
bound
clc
inc
test
stc
mov
mov
sahf
adc
ss
xlat
mov
cmpl
lods
jle
add
xchg
lahf
sahf
mov
outsl
jmp
xchg
lods
jecxz
lods
lret
test
int3
pop
sub
jge
and
or
jb
fs
fidivrs
dec
lock
adc
cltd
xor
mov
mov
cli
adc
pop
mull
pop
movsl
sbb
inc
or
jbe
stos
push
adc
ret
das
pop
test
mov
jne
sbb
fldl
sbb
in
pop
out
inc
test
mov
push
loopne
sub
enter
sub
lahf
rcl
mov
sub
in
adc
and
adc
mov
sbb
or
jne
cli
sbb
repz
addw
sub
pop
jae
jmp
dec
jbe
faddp
pop
xchg
mov
pop
adc
mov
fs
rorl
dec
in
sub
jb
out
dec
idivb
pop
insb
xlat
lock
inc
neg
xchg
or
test
adc
int3
mov
mov
arpl
mov
aas
repz
shl
fstpl
mov
das
aam
lcall
fisttpll
or
pop
icebp
sub
or
push
cs
inc
sbb
fbld
or
mov
in
dec
aaa
jle
adcl
pop
sbb
nop
mov
sub
dec
les
cmp
imul
adc
dec
shr
jae
xchg
mov
add
sub
dec
je
xchg
push
lcall
in
fbld
mov
in
push
jmp
es
cmc
jl
aad
out
jb
outsl
flds
lods
fisttpll
cmp
js
call
and
in
lret
xchg
and
or
mov
cmp
sub
adc
fnstsw
fisttps
je
sbb
int3
jbe
push
addb
mov
sub
arpl
data16
mov
fadd
dec
divl
fstpl
gs
cmc
xchg
mov
xor
es
andl
lcall
in
loopne
lret
hlt
cli
lcall
xchg
dec
shrl
mov
and
in
mov
cmc
pop
lret
push
xchg
rclb
divb
dec
push
mov
andl
sbb
pop
outsl
adcl
sbb
sub
pop
and
mov
and
lds
xor
imul
test
mov
dec
in
mov
pop
out
pop
xor
mov
pusha
cmpsb
and
or
popf
andb
jp
mov
sub
ljmp
or
inc
cli
inc
cmp
test
mov
shrb
inc
xlat
pushl
xchg
xchg
lea
loope
cmpsb
daa
push
dec
push
hlt
ja
ja
fstp
sarb
loopne
jae
mov
inc
loope
adc
xchg
bound
insb
and
xor
outsb
add
or
jne
inc
sbb
push
stc
shl
sbbb
adc
xor
sub
movsb
sub
sbb
testb
fsubp
mov
test
repnz
inc
xchg
xchg
sar
push
js
mov
repz
mov
mov
in
lret
in
iret
cmp
mov
mov
dec
mov
data16
xchg
rcrl
adc
mov
inc
mov
ja
clc
push
frstor
adc
test
dec
stc
inc
movsb
or
imul
lret
xchg
mov
lret
in
insb
fstpl
inc
xchg
add
decl
xchg
cmc
push
mov
or
mov
fmuls
adc
in
xchg
add
cwtl
pop
fimuls
push
ret
nop
xchg
mov
ret
jmp
jg
mov
ljmp
aas
push
mull
mov
ja
adc
in
dec
repnz
jns
mov
aam
cmpsb
add
pop
aaa
sbb
daa
fwait
ret
mov
cmp
and
pop
iret
jmp
ret
sub
mov
mov
pop
jb
loope
sub
fiaddl
mov
pop
sahf
sarb
cmp
jecxz
xor
insl
lods
in
sub
pop
push
mov
scas
push
push
movsl
mov
adc
adc
inc
rolb
adc
mov
xor
addr16
add
cmp
push
jle
cmc
data16
lods
jns
add
fwait
lock
shl
pop
lock
adc
cmp
jmp
pop
sbb
inc
and
jne
mov
dec
insb
imul
imul
sbb
scas
inc
mov
shr
inc
and
pop
sub
notb
mov
lcall
rorb
jl
adc
push
stos
xchg
sbb
or
mov
in
cmp
mov
xor
jns
pop
clc
cmc
rcl
xor
in
xchg
or
and
in
push
rcll
cmp
mov
fucom
dec
es
mov
scas
inc
lcall
out
inc
mov
pop
mov
mov
outsb
repz
push
es
ljmp
and
sbb
add
mov
cs
ret
mov
mov
ret
and
sahf
loope
sahf
pop
mov
lcall
in
arpl
adc
pop
mov
dec
divb
lea
loopne
adc
adc
dec
frstor
add
add
and
enter
loope
cmc
and
mov
pop
lods
push
pop
adc
push
in
mov
out
push
jns
mov
lock
xchg
in
and
mov
inc
cmpsb
adc
dec
xor
out
sub
nop
popf
sbb
mov
xor
ret
pop
mov
inc
push
or
cmpsb
ja
in
cmpsl
idivb
mov
aad
mov
mov
pop
add
nop
cmpsb
in
mov
push
xorl
out
repz
or
popa
xchg
repnz
pop
ret
jecxz
push
mov
test
fldcw
shlb
jecxz
ja
jmp
xor
ret
or
addl
add
sarb
test
inc
clc
push
in
and
xor
js
or
arpl
pop
inc
jmp
push
fdivr
jbe
push
xchg
test
jp
testb
push
xchg
and
xlat
nop
pusha
mov
bnd
adcl
inc
lods
add
outsl
jns
inc
adcb
sbb
lret
jecxz
sbb
dec
arpl
imul
jmp
lods
and
add
push
roll
in
pop
fcompl
jp
adc
jmp
pop
adc
in
mov
rcll
xor
sti
mov
stc
subl
out
data16
and
cwtl
fisttps
ret
lret
fstl
lea
int
mov
xor
mov
mov
pop
push
mov
aaa
sub
xchg
divl
mov
out
clc
cli
and
push
and
sahf
pop
xchg
addr16
inc
jl
loope
mov
dec
or
cmp
push
sbb
jl
loopne
lret
push
pop
divb
inc
xlat
xchg
icebp
or
mov
rorb
mov
sub
push
push
push
fucomip
lods
clc
sub
rcrb
lahf
jg
or
popa
cmpsb
xchg
in
mov
or
incb
cmc
leave
add
sarb
jg
xchg
in
mov
sbb
loope
test
xor
addr16
repz
cmp
push
and
ljmp
repz
mov
xor
sub
add
push
sub
or
xchg
jne
in
add
call
arpl
shr
ss
mov
mov
fsubl
xor
pushf
js
lock
xor
sti
imul
jb
jns
rclb
sbb
nop
jne
mov
iret
add
loopne
fistl
inc
mov
lahf
mov
mov
sbb
outsl
int
testl
test
mov
xchg
dec
mov
jns
inc
jne
mov
dec
in
add
xchg
jl
mov
clc
and
sub
std
dec
dec
les
dec
pop
call
push
int
jl
js
push
jae
aas
stos
test
adc
mov
and
sub
cmp
push
jne
popf
in
mov
mov
adc
clc
ja
xor
or
mov
jl
hlt
aam
bound
sub
cwtl
test
leave
in
loop
or
fnstenv
out
adc
mov
mov
mov
or
cli
or
addr16
mov
push
and
arpl
push
jl
xor
nop
or
arpl
shrl
inc
repz
mov
mov
dec
pop
jl
sub
add
imul
cmp
repz
mov
pop
ja
repnz
outsl
icebp
lock
sarb
pop
cli
in
pushf
dec
mov
adc
and
adc
push
loope
ljmp
push
fcomp
stos
and
icebp
nop
xchg
aaa
sbb
xor
pop
add
cmpsb
adc
in
rol
in
jecxz
xor
dec
bnd
aam
icebp
or
push
je
xchg
lahf
test
mov
inc
add
add
lock
bnd
fldl
scas
adc
xchg
mov
or
fiadds
in
adc
out
pop
shlb
cmp
fldl
cli
sbb
mov
cmp
ljmp
insl
dec
sbb
mov
hlt
push
add
sbb
sub
outsb
jno
and
add
sbb
sub
dec
mov
sub
push
aas
or
mov
sbb
in
mov
sub
pop
dec
xor
loop
enter
pop
lret
sub
jo
and
cmp
jmp
mov
mov
ret
pop
aad
outsb
xor
lcall
enter
add
push
mov
push
xor
and
or
jb
ds
stos
mov
xor
fistpll
rcrb
mov
push
dec
pop
sahf
lcall
fs
sbb
inc
dec
stc
mov
cmp
push
dec
dec
sbb
out
cld
into
xchg
sub
testb
adc
jae
dec
dec
cwtl
jmp
adc
or
jl
mov
lret
mov
add
jne
cmp
and
sahf
pop
or
jne
cmc
mov
sbb
dec
es
xor
cmpsb
push
ss
nop
push
inc
jne
push
and
sbb
jb
dec
pop
arpl
sbb
jge
and
divl
mov
loopne
movsb
test
mov
pushf
adc
or
sti
dec
cmpl
xor
imul
movsb
cmp
mov
js
daa
add
rorb
mov
sub
fs
add
sbb
in
jl
mov
mov
jg
test
mov
iret
test
repnz
ja
sub
or
add
andl
fst
push
jle
add
sbb
jns
inc
jno
xchg
imul
adc
lods
pop
adc
add
mov
movb
ljmp
mov
lock
dec
dec
fldenv
jmp
fsubl
sub
jae
cmc
jecxz
xchg
and
add
lods
xchg
mov
push
push
icebp
leave
pop
loop
lret
inc
add
inc
sub
dec
sub
push
fcoms
and
mov
scas
mov
or
inc
sbb
jl
push
or
cmp
loope
jecxz
je
fucom
jecxz
addr16
bswap
std
inc
cltd
adc
push
lock
xchg
fadd
sub
inc
mov
push
xor
pop
sub
in
mov
sbb
mov
cmpb
xchg
or
test
push
dec
filds
stos
mov
insl
add
jmp
fcoms
mov
scas
push
int3
sbb
fs
mov
mov
call
hlt
test
aad
cmpsl
sbb
lcall
incl
push
inc
jno
icebp
jg
sub
push
mov
clc
lock
mov
xchg
xchg
lods
in
pop
mov
jmp
jmp
dec
push
cmp
adc
popa
shll
sti
dec
sbb
aam
jl
jle
mov
sbb
adc
imul
ljmp
jmp
dec
jmp
dec
jle
cmpsb
mov
jmp
and
sub
lea
rcrb
pop
fisttpll
pop
adc
inc
fldenv
ss
std
or
push
movsb
xor
jne
cmc
leave
and
lret
frstor
dec
movsb
mov
push
repz
test
fcoml
shll
pop
aam
orl
std
dec
out
js
cmc
cltd
push
push
sahf
fcompl
cmpsl
clc
es
mov
loop
xlat
or
cmpb
mov
stos
pop
stc
lcall
jp
sbb
pop
fistpll
arpl
xor
popf
je
xchg
xor
cld
add
dec
mov
jp
sub
pop
daa
mov
push
jne
test
cmc
std
xor
jno
add
dec
adc
arpl
imull
xor
icebp
lods
inc
dec
lock
dec
std
inc
test
dec
icebp
out
enter
xchg
xchg
pop
adc
pusha
sbb
mov
mov
jp
xor
pop
bnd
stos
or
sub
repz
int
lods
xchg
inc
outsl
repnz
lcall
and
add
insl
sbb
and
push
mov
inc
gs
mov
in
data16
js
pusha
or
div
fnstcw
ja
sahf
add
adc
dec
stos
jno
add
mov
int3
push
mov
mov
mov
insl
divl
jp
push
dec
push
frstor
or
dec
xchg
int3
ljmp
and
add
push
mov
adc
jbe
pop
data16
movsb
xchg
loop
imul
mov
repnz
adc
in
dec
nop
xchg
stos
insb
mov
push
jmp
testl
mov
and
movsb
mov
mov
fnstsw
pop
decl
lock
fsubr
fisttpll
out
add
aam
xchg
mov
cltd
sahf
jns
jp
movb
inc
std
add
inc
sbb
pop
fisubs
xchg
insb
jge
or
jecxz
sub
les
pop
cmpsl
pop
shr
jae
xor
xlat
jae
cmc
popf
push
cmp
xor
mov
xor
or
mov
imul
repnz
sarb
cmp
mov
xchg
in
insb
pop
cmpsb
in
ds
arpl
ds
test
ss
and
xor
and
outsl
add
daa
pop
pusha
or
clc
pop
fidivrs
mov
fisttpll
mov
pop
jnp
insl
push
lods
cld
scas
bound
push
dec
add
or
inc
or
jnp
mov
in
and
inc
std
ret
jae
ss
in
pop
xchg
adc
ret
lods
push
cmc
or
lds
lods
out
fs
add
push
mov
pop
mov
mov
loopne
push
mov
pop
and
sub
cmp
dec
iret
lcall
push
out
enter
mov
jg
lret
cmp
push
fwait
xlat
mov
pop
fcoms
mov
cmp
ja
test
int
iret
outsb
pushf
ret
gs
push
gs
cmpsl
inc
cmpsb
dec
or
mov
inc
pushf
add
stos
push
in
loope
xlat
rclb
ffree
mov
or
jae
adc
in
jp
mov
fdivr
push
lcall
fisttpl
mov
mov
bound
pop
cmc
iret
sbb
sti
stc
in
xchg
push
sub
mov
mov
xchg
or
push
mov
aas
sbb
int3
mov
push
sbb
add
in
xchg
xor
pop
jmp
sbb
mov
ja
sub
outsl
push
xchg
mov
or
mov
aad
cmpsb
mov
mov
jecxz
repnz
or
ja
add
or
in
jl
jg
xacquire
push
cmpsb
lods
rclb
in
das
rorb
lret
jle
mov
push
pop
clc
mov
sti
mov
inc
rclb
in
jno
mov
jae
pop
xor
repz
mov
sti
fstpl
sub
idivb
xchg
int3
fdivl
dec
mov
inc
aam
add
jmp
push
addl
mov
mov
pop
in
in
fistps
int
ja
popa
sbb
mov
pusha
mov
inc
mov
cmp
gs
into
rcrb
out
inc
mov
mov
or
fldl
add
ffree
andb
dec
in
push
dec
cmc
scas
repz
push
movsb
pop
inc
fnstcw
fiadds
std
pop
js
data16
push
ds
pop
loop
xchg
fs
addr16
cmpsb
mov
das
pop
cmp
pusha
inc
push
cmp
xor
jns
out
das
jb
mov
in
jae
mov
cmp
jbe
bound
aaa
popf
ja
stc
xchg
aad
mov
add
loope
mov
pop
mov
push
addb
mov
sti
es
jg
popa
in
movsl
dec
and
aas
cmp
mov
xchg
xchg
out
gs
imull
clc
fdivs
mov
stos
imul
dec
mov
inc
clc
sarw
jg
add
pop
dec
dec
cmp
mov
jp
out
add
jns
add
sub
pop
mov
cmc
add
loopne
pop
add
mov
cmc
mov
cli
pop
hlt
data16
jle
or
cmp
ss
pop
mov
in
rolb
int3
sbb
pop
cmp
addr16
movsb
push
xchg
fmull
rcrb
shr
jle
xchg
outsb
adc
jns
ja
add
pop
aas
fst
and
xchg
rcl
xchg
out
xchg
push
xor
jge
out
jbe
icebp
sahf
mov
pop
sti
xchg
data16
dec
jne
ret
dec
lahf
cmp
push
and
push
cli
xchg
push
aas
cmpsb
int3
push
pushf
jmp
rorb
jne
pop
fmuls
inc
das
mov
sahf
mov
js
je
and
cmc
adc
jecxz
addr16
ret
and
xor
jp
jmp
bound
sbb
add
adc
outsl
add
xchg
jmp
push
cmp
cmc
pop
jl
sub
and
nop
mov
sti
movb
xor
push
mov
dec
pusha
inc
mov
push
mov
adc
iret
sub
ljmp
out
sbb
les
stc
ss
jmp
lcall
mov
sbb
adc
lret
push
cmp
push
jecxz
lcall
cli
mov
ds
or
test
jecxz
and
sbb
loope
xor
cld
leave
push
mov
mov
dec
test
dec
pop
mov
dec
popa
out
cmp
jbe
fst
cmpsl
add
and
xorb
icebp
pop
dec
xor
cmp
test
push
push
mov
pushf
mov
in
ss
mov
movsl
or
mov
rcll
sbb
loope
fnstsw
fcompl
in
leave
dec
testb
cmc
inc
dec
ja
and
push
mov
sarb
in
cld
jb
xchg
cmpsb
cmpsb
out
or
out
shr
cmp
fsts
xchg
jmp
and
push
cmpsb
jns
xchg
sbb
test
int3
xchg
adc
in
sub
push
dec
xchg
pop
jbe
xor
insb
adc
pop
subl
or
sub
lret
adc
out
imul
push
or
fnstsw
xchg
jbe
jno
adcb
shrb
fstpl
nop
sahf
ds
mov
jle
mov
dec
push
out
rolb
rcll
jbe
jae
std
movsl
daa
pop
jno
outsl
mov
mov
mov
ret
jl
stos
inc
add
lods
adc
jbe
mov
or
rcll
jle
dec
cs
cmp
aad
cli
add
mov
call
scas
lock
shll
outsl
sarl
sbb
aas
add
jbe
inc
mov
mov
and
pop
fisttps
movsl
push
ja
rcr
dec
neg
mov
fnsave
out
cmp
rcrb
mov
mov
scas
sbb
ja
xchg
out
cld
lcall
ljmp
insb
pop
xor
outsb
mov
mov
pop
bound
fs
sub
xchg
ja
test
ds
jmp
lods
cld
mov
repz
daa
pop
push
push
fisubrs
nop
pop
jbe
adc
ret
lods
ljmp
addr16
stos
adc
movsl
insl
test
pusha
xor
mov
ss
popf
mov
jge
out
and
xor
and
push
fstpl
add
dec
adc
or
and
adc
aad
aam
dec
in
and
sub
pushf
and
push
adc
mov
loope,pn
jp
aad
mov
rcr
inc
mov
in
in
cli
icebp
sahf
pop
scas
ds
rclb
rorb
xchg
mov
adc
stos
dec
jg
lcall
pop
xchg
imul
xchg
push
jecxz
or
lods
inc
pop
cmpsb
in
testb
scas
cmp
std
or
push
sub
lods
shlb
mov
es
int
mov
imul
sti
pop
cmp
or
jae
mov
sarl
xlat
pop
int3
and
mov
mov
sbb
cmp
movsl
ds
or
jo
push
inc
shll
popa
mov
mov
jne
push
cmc
sahf
cmpsl
cmpsb
push
add
ja
jae
pop
mov
sbb
fistps
dec
insl
or
mov
fstl
ss
fwait
data16
mov
push
jne
pop
sbb
in
lahf
lret
push
gs
sbb
cli
mov
scas
mov
mov
filds
enter
test
fs
loop
loopne
xchg
dec
shll
sbb
lea
mov
lock
push
nop
js
and
das
mov
inc
sub
js
sbb
repz
sti
cmp
push
adc
add
lods
xor
out
fcompl
dec
inc
sti
addr16
stc
jg
pop
movsl
sub
icebp
add
pop
cmc
fiadds
sbb
lret
jne
insl
out
mov
jae
orb
push
mov
hlt
xlat
shl
mov
pop
mov
mov
mov
push
cmpsb
stos
mov
loope
jecxz
stc
mov
push
lods
aas
mov
pop
mov
mov
outsb
lods
fldl
push
add
jno
clc
mov
dec
fnclex
pop
loop
cli
leave
jns
shrl
sbb
lret
stc
enter
call
xor
push
jnp
cmc
push
cmpsl
das
pop
test
push
jbe
lret
fnsave
enter
clc
lcall
negb
cmp
int
js
lods
adc
adc
cmc
or
stc
cmp
inc
adc
cmp
sti
add
add
or
add
pop
movsb
rorb
add
jp
push
out
leave
fwait
cld
mov
mov
mov
dec
pushf
pop
aam
out
mov
shll
mov
or
xor
fldenv
xchg
es
scas
jb
inc
push
sbb
sbb
and
repnz
movl
cmp
dec
pop
dec
sbb
shl
push
mov
mov
ja
and
ret
mov
pop
insb
pop
sub
xchg
fcomps
inc
rorl
mov
fstl
cmc
mov
and
dec
pop
mov
cld
loop
xor
inc
fnstsw
lods
xlat
adc
cmc
lods
and
inc
xlat
jne
out
test
dec
lret
push
out
mov
push
mov
repz
xor
cmp
into
pushf
testb
sbb
adc
sbb
pop
or
mov
or
adc
negl
sub
adcl
mov
imul
mov
hlt
ja
adc
fwait
lods
cmp
repnz
jnp
xchg
cs
sbb
bound
xorb
shll
je
mov
icebp
fadds
aaa
movsl
pop
or
or
inc
pop
jne
jbe
or
call
test
int
outsb
or
loopne
dec
imul
mov
dec
fisubrl
mov
mov
mov
jb
jmp
mov
add
and
adc
rol
sbb
cmp
int3
or
rcrb
dec
sub
cld
jns
cmc
dec
xor
lcall
mov
movsb
push
xchg
outsb
cmc
xor
sub
jbe
addb
jmp
and
xchg
in
outsb
xchg
cwtl
pop
int3
stc
add
add
dec
dec
int
mov
pop
dec
push
outsb
xchg
mov
xor
pop
mov
dec
adc
sbb
in
sub
out
adc
leave
sahf
jecxz
and
popa
inc
dec
std
jmp
inc
dec
xchg
mov
add
inc
in
or
imul
aaa
or
sbb
lcall
aam
mov
adc
push
call
sbb
and
cmpsl
pop
xchg
mov
out
xchg
adc
cmp
inc
popf
xor
aad
mov
and
cmpsl
mov
xchg
outsb
pop
ret
imull
pop
mov
xor
ss
dec
popa
les
jb
inc
jae
pop
js
stc
add
lret
outsl
push
push
push
sub
adc
adc
xlat
fstps
ret
ja
dec
mov
mov
jo
and
and
sbb
lods
sub
inc
hlt
dec
lods
loope
and
pop
jl
jecxz
in
xor
fcmovnb
mov
xor
jae
sbb
jecxz
test
sbb
imul
dec
xor
clc
jp
inc
cmp
fcmovb
cmp
or
sbb
js
testl
lods
xor
notl
jp
and
push
jmp
mov
out
adc
or
leave
fiaddl
push
adc
shll
outsl
or
movsb
pop
cwtl
arpl
in
sbb
push
enter
pusha
fldcw
shl
aam
sti
xchg
lcall
popa
imul
aaa
arpl
dec
adc
out
test
enter
lret
add
jne
mov
jbe
dec
and
repnz
mul
sti
mov
lock
in
pushf
test
adc
or
je
pop
notb
repnz
or
mov
sub
leave
mov
pop
sbb
pop
ja
ret
xor
movb
adc
xor
dec
mov
mov
or
pop
push
push
push
test
xchg
fstpl
movsl
js
test
cld
cltd
sti
mov
out
sahf
jne
scas
push
xor
inc
shrb
mov
inc
add
mov
mov
aas
and
jnp
cmp
inc
fwait
aam
inc
sub
lds
das
inc
rcrb
jae
out
fstl
lock
mov
stc
fsts
jo
and
ret
pop
ret
dec
filds
loopne
mov
xchg
popf
sbb
mov
stos
movsl
outsl
mov
cmpsl
dec
cwtl
dec
jb
pop
pop
test
mov
clc
cmp
lock
orb
cli
psrlw
das
jl
rolb
subb
cld
ljmp
cmp
and
mov
lret
ret
fistl
jecxz
fildl
mov
lods
popf
repz
cmc
sub
pop
and
xor
fldl
fidivl
aaa
jb
imul
ret
pop
push
in
mov
rorb
sub
fsubs
mov
adc
adc
dec
outsb
outsl
aam
jmp
fisttpll
sub
and
dec
fsubrl
push
popa
sbb
sub
in
or
imul
int
inc
sbb
push
dec
rorb
jne
push
inc
inc
or
adc
jl
sarb
inc
fsubrl
movsl
inc
ss
cmp
xchg
scas
xor
dec
xor
mov
push
dec
lret
in
fbld
inc
dec
pop
je
push
mov
and
jmp
ss
mov
movsl
add
cmp
xorl
mov
pop
jp
jbe
dec
out
mov
addr16
xor
ficoml
scas
aam
out
sbb
xor
jne
and
inc
std
sbb
inc
xor
js
loope
in
aad
cli
mov
ret
adc
adc
fld1
scas
fbstp
leave
int3
jns
add
js
lcall
mov
mov
out
out
jne
rol
je
das
iret
mov
xchg
mov
aas
xchg
xchg
sbb
pop
stos
push
or
xor
inc
inc
cmpsl
faddl
pop
cmc
jb
mov
inc
movsl
sub
jb
ret
flds
scas
jno
push
loopne
es
cmp
jp
cmpl
xchg
push
cmc
idiv
mov
lcall
aaa
jb
pop
insl
sub
insb
ss
dec
cmpsb
jmp
jb
mov
mov
mov
cmp
and
outsl
movsb
movsl
in
xchg
rcl
xchg
mov
fstl
mov
xchg
xchg
test
es
aaa
stc
cmc
adc
lahf
or
cmpsb
ficomps
pop
dec
jp
lds
xlat
rorl
in
scas
pop
push
push
or
fbld
fisttpl
sbb
push
dec
mov
xchg
jae
add
movsl
cmpsb
mov
push
xchg
inc
mov
and
scas
push
jg
sti
ljmp
int
pop
and
in
sti
mov
shlb
setne
pop
mov
mov
notb
add
test
icebp
mov
addl
xchg
jle
adc
xchg
mov
cwtl
loopne
pushf
leave
xor
inc
add
ljmp
ss
cmp
ret
pushf
push
jg
loopne
or
xchg
or
jns
fldl
fstps
addb
mov
sbb
mov
or
push
xchg
insb
cmc
les
mov
mov
cltd
in
jg
pop
or
mov
lcall
jecxz
fwait
cli
pop
cmpsl
jo
out
sbb
loopne
xorl
mov
ss
cmp
mov
jne
int
cmc
popa
push
test
outsl
into
shlb
test
ret
aad
jae
lret
sub
mov
loop
mov
sti
repz
push
push
mov
push
in
jns
loop
inc
and
xor
cmp
add
pop
xchg
fnsave
je
add
fnstcw
movsb
mov
cwtl
xchg
sti
sub
lods
jl
pop
xlat
cli
nop
pop
or
stos
jle
shlb
mov
lahf
lods
mov
jle
adc
jl
sbb
jbe
les
rcrl
push
sub
test
imul
sbb
adc
loop
xchg
testl
aas
test
shl
leave
cwtl
sub
jecxz
mov
sti
xlat
add
mov
xor
mov
fwait
mov
push
push
pop
jp
jnp
cmc
jl
xor
fst
dec
out
cld
ja
mov
not
add
cmp
sti
addb
lcall
jns
mov
out
xor
in
xor
ja
adc
addr16
in
incb
scas
or
addr16
stos
aas
sbb
divb
adc
out
push
push
mov
insb
mov
rorb
cmc
push
jb
and
xchg
mov
inc
cli
in
into
pop
xchg
mov
jmp
das
std
push
mov
mov
mov
mov
jb
xchg
movsl
ret
mov
ja
mov
sbb
mov
pop
nop
repnz
dec
mov
dec
xchg
sub
repnz
cmc
stos
jb
sub
jg
lcall
dec
jne
lahf
scas
jno
dec
into
mov
pop
or
or
es
arpl
mov
or
dec
jecxz
insb
imul
mov
sbb
sbb
vpmacssdql
test
inc
daa
cmc
push
and
loope
inc
cmp
fmul
imul
push
call
mov
xor
fldl
loope
push
cmpsb
inc
popw
xor
mov
xor
addl
inc
jecxz
lcall
pop
shlb
ss
push
xchg
mov
movsb
lret
das
clc
pop
mov
dec
pop
in
sahf
lahf
mov
fnstsw
mov
rolb
call
aaa
push
lea
in
popa
cwtl
stos
fisttpll
test
pop
mov
sbb
sub
rorb
inc
mov
mov
ret
jp
cmc
jo
rolb
mov
inc
adc
pop
imul
daa
ret
cwtl
popf
outsl
leave
or
jg
and
jp
add
cmp
mov
jb
inc
test
push
ds
jne
sub
mov
fistps
or
and
lret
inc
sub
mov
adcl
scas
jb
outsl
imul
jb
mov
sub
or
dec
push
mov
loope
aam
in
pop
adc
fldl
cmp
aaa
addr16
pop
push
cmp
enter
mov
fists
das
pop
aaa
add
in
mull
loop
push
sbb
mov
outsb
sub
mov
jae
fstp
hlt
into
bnd
push
cmp
mov
out
sub
cmpsl
push
or
dec
addr16
shlb
ficoms
mov
sub
and
lret
bound
pop
in
ficomps
xor
push
cmp
xor
aas
adc
out
push
sbb
incl
clc
test
or
xchg
sub
and
adc
jae
mov
stos
adc
inc
insl
lcall
sbb
loopne
popf
pop
test
faddl
jmp
cli
mov
lret
std
xlat
jb
mov
mov
push
aaa
leave
mov
adc
loop
and
fstpt
mov
rolb
add
scas
jae
pop
pop
enter
out
aam
xor
and
ret
mov
mov
bound
or
arpl
loop
js
dec
in
push
add
int
daa
or
je
lods
inc
pop
popa
jb
fldcw
bound
or
add
popf
cmpsb
ret
js
dec
sbb
lret
cmp
xor
mov
xchg
daa
jno
cmpsb
movsl
bound
in
mov
jb
or
pop
pop
test
xor
pop
pushf
mov
sbb
push
sbb
dec
adc
xlat
lret
jnp
push
lds
loope
or
jecxz
sar
in
jp
inc
add
roll
adc
inc
mov
and
or
loopne
les
mov
xor
jne
fcmovu
call
fstl
lcall
in
in
cmp
dec
clc
jno
mov
and
xor
ss
fldcw
outsl
and
loope
jmp
popa
sahf
jnp
dec
cltd
adc
mov
pusha
fisttpll
jmp
in
jle
shll
pop
hlt
push
jae
cmc
jmp
in
or
pop
enter
mov
jno
jo
fld
lret
mov
mov
in
push
jl
push
mov
add
outsl
imul
clc
mov
jb
mov
imul
add
jecxz
or
inc
in
sbb
xlat
cmpsl
mov
data16
incb
pop
jbe
push
pop
lret
cli
mov
mov
jge
jp
outsb
lcall
mov
pop
cwtl
xchg
dec
cs
mov
cli
aaa
test
cmp
and
add
out
loopne
mov
dec
or
cmp
push
sbb
add
scas
push
push
inc
aaa
adcb
fisubrs
push
in
stc
clc
bound
jl
lcall
sbb
out
jmp
fidivrl
cmp
lods
jnp
xor
sub
dec
add
adc
mov
xor
iret
adcb
mov
add
js
inc
bndstx
adc
add
inc
pop
popa
xchg
std
out
mov
and
push
imul
jg
add
fistps
inc
aas
jmp
xor
cs
pop
je
cli
push
lock
aaa
int3
mov
fldcw
add
mov
jno
mov
dec
in
sub
imul
mov
stos
push
adc
idivl
inc
lcall
leave
cmpsl
dec
int3
ja
mov
dec
and
out
mulb
dec
pop
inc
and
loopne
add
and
jns
jno
cmc
notl
scas
cmpl
jge
test
mov
test
cmc
mov
and
mov
imul
sahf
pop
and
pop
arpl
cmpsb
mov
or
dec
adc
popa
mov
mov
jb
lahf
in
out
cmpsb
mov
mov
cltd
xchg
mov
mov
xor
jnp
adc
dec
in
test
loopne
mov
repnz
or
ds
and
jmp
push
js
and
shlb
push
sub
cmc
bound
cmpsb
cmp
shl
mull
daa
xorl
mov
out
ror
push
filds
fdiv
push
js
loopne
jo
mov
loope
mov
jle
mov
in
std
jmp
push
push
sub
push
dec
pop
pop
push
jge
push
push
push
es
xor
sbb
sbb
cmp
jmp
or
xchg
sub
hlt
push
mov
in
lds
inc
repz
ljmp
imul
cli
cmpsb
test
in
sub
repz
push
or
sbb
jbe
mov
stos
fldl
int3
xor
fsubrs
cltd
dec
push
aaa
and
or
jne
adc
inc
or
xchg
xor
jecxz
mov
xlat
rclb
fwait
sub
mov
loop
int
jl
and
icebp
sub
jmp
xchg
testb
xchg
js
es
mov
stos
ret
add
sar
lock
inc
outsb
sub
xchg
cmc
jmp
sbb
adc
or
pusha
std
sti
sub
int3
fdivl
scas
sub
xchg
lcall
cld
nop
fadd
out
test
cs
jns
in
bt
lods
sub
repnz
aam
call
rcr
ret
cmp
push
je
and
mov
scas
test
cmpsb
adcb
dec
insb
rol
dec
and
mov
pop
sub
fistpll
and
mov
jnp
jmp
imul
jle
insl
xor
push
jmp
jmp
icebp
cmp
mov
fistps
mov
mov
stos
loopne
mov
adc
ret
xchg
inc
fdivrl
cmp
rol
test
dec
push
mov
mov
cmp
mov
push
mov
or
adc
push
and
push
pop
sub
fdivrl
cltd
gs
movsb
lds
aaa
jmp
mov
es
daa
pop
aad
adc
push
inc
mov
mov
dec
cmpsl
mov
sbb
pop
fnsave
xor
cmp
mov
adc
mov
and
and
jb
outsb
test
popw
jo
pslld
int3
arpl
mov
inc
pop
cli
jmp
xchg
and
fdivp
lock
lcall
scas
and
push
test
sub
scas
aas
lods
mov
dec
cmp
test
icebp
or
mov
mov
sbb
ret
pop
pop
cmp
cmp
mov
test
cmpsb
mov
pop
insl
int3
xchg
lea
or
lods
or
add
adc
fstps
add
sbb
lahf
or
es
adc
fsubrl
aam
pop
ja
outsb
mov
dec
xchg
or
dec
dec
ret
fidivrs
jb
imul
shll
jbe
or
loop
jmp
inc
dec
pushf
sub
push
call
jne
lcall
movsl
jl
mov
in
into
dec
movsl
fiadds
jae
jl
sahf
cmovbe
jne
xchg
in
imul
jns
inc
mov
jnp
cmp
pop
cmp
dec
lcall
mov
scas
adc
cmc
dec
push
and
mov
js
out
and
pop
ret
xor
jnp
cmc
gs
mov
stos
fistps
out
jl
nop
int3
mov
mov
repz
inc
jle
xor
stos
fstpt
addr16
pushf
cmp
xlat
fdivs
cmc
or
mov
in
ds
xor
push
popa
je
in
outsb
or
adc
es
adc
or
jae
scas
sub
xor
cli
push
push
adc
push
fistps
fmuls
jle
in
push
fstl
pop
mov
cmc
inc
test
test
pop
xor
les
adc
loopne
dec
inc
mov
stos
lret
pop
or
xchg
cmpsb
insl
pop
sbb
lcall
rcr
jne
in
mov
pop
cmpsb
enter
or
repnz
add
in
push
xchg
sbb
push
mov
mov
aaa
mov
popf
pop
cltd
and
in
or
ljmp
push
inc
mov
out
scas
js
dec
jns
adc
push
mov
cwtl
or
cmp
cltd
cmp
jmp
shr
in
push
aam
lret
jb
or
adc
loop
pop
aam
jp
loope
repz
nop
aas
jnp
dec
mov
shl
adc
in
shll
cmc
xor
sub
stos
mov
add
sub
sbb
mov
push
inc
rclb
or
inc
push
mov
xorl
sub
mov
call
repz
out
rcrb
push
mov
xchg
push
or
sahf
push
lea
mov
in
cld
dec
pop
push
in
lds
in
xchg
xor
test
sarl
fcmove
aaa
pop
stos
test
movsl
mov
leave
dec
adcb
jne
push
mov
leave
out
mov
xor
rcrl
call
sti
jp
test
popf
add
test
fst
andl
inc
gs
push
cld
js
cmp
in
mov
and
push
adc
mov
fnstsw
inc
xlat
pusha
jmp
in
jnp
ja
jns
or
out
mov
mov
lods
sub
jne
cmp
sbb
dec
fwait
xchg
mov
movsb
pop
stc
inc
in
out
xor
repnz
stos
mov
jg
ljmp
jb
mov
lahf
popa
cmp
xchg
push
lret
pop
scas
sbb
jp
fnsave
mov
nop
aas
jo
ds
adc
fs
fstl
xor
inc
xchg
jb
mov
out
xchg
and
enter
rolb
not
mov
gs
lods
adc
rcll
adc
dec
mov
jno
dec
xchg
andb
sbb
orb
add
xor
xchg
jae
rcrl
daa
sahf
movsb
pop
inc
icebp
or
or
stos
jmp
fcompl
and
insb
imul
lret
rcl
cmc
icebp
jle
pushf
and
jmp
and
rcrb
sub
jmp
mov
outsb
mov
ss
xchg
clc
sti
cltd
imul
fnsave
pop
mov
jb
mov
mov
popf
jnp
jo
pop
out
jg
lea
aam
pop
xor
adc
jne
cltd
fmull
pushf
addr16
lods
mov
std
scas
clc
es
lahf
xlat
inc
das
inc
pusha
test
adc
dec
adc
fnsave
mov
movsl
cmp
lret
mov
jns,pn
and
cli
jmp
xchg
movsl
or
push
call
sbbl
xchg
repnz
shrl
xchg
push
mov
dec
rcll
jp
cmc
inc
sti
sbb
sahf
out
fsubl
negl
inc
cmpsb
mov
mov
cwtl
fnstsw
add
sbbl
sbb
cmc
xchg
dec
mov
cmp
jecxz
es
jmp
fnsave
ss
enter
mov
mov
jne
in
sub
sub
stc
cmp
adc
fstl
loope
imul
xchg
sbb
imul
int
pushl
div
sub
sbb
testl
inc
lcall
and
jmp
xlat
pop
in
adc
ret
mov
mov
in
lock
push
rol
popa
ss
push
scas
ds
clc
pop
test
daa
shll
adc
pop
dec
mov
mov
pop
pop
xor
push
sti
or
out
mov
xchg
das
js
pop
scas
mov
xchg
cmp
jae
cltd
in
imul
mov
pop
movsb
data16
mov
xchg
mov
dec
or
jl
int
lds
test
pushf
mov
push
les
ja
push
ret
push
dec
fstps
pop
ja
movsb
mov
fnstcw
pop
xchg
cmpsl
leave
sahf
or
mov
jne
repnz
loope
dec
arpl
repz
jl
mov
push
xor
jecxz
xchg
pushf
in
in
dec
pushf
popf
cli
jmp
jne
inc
into
xor
push
pop
std
sbbb
mov
and
pop
in
push
sbb
push
jl
test
sbb
mov
stos
or
cmpsl
jecxz
js
cmpb
inc
sbb
push
xorb
cmp
cld
in
dec
cmp
arpl
es
loopne
idivb
fcmovne
shrb
dec
repnz
fnstcw
pop
mov
xchg
push
ret
adc
cmpsl
cli
fsubrl
sub
mov
lret
test
push
addr16
int
sbb
adc
leave
sbb
inc
test
jmp
sarb
adc
and
adc
mov
jp
popf
add
jnp
stos
rolb
and
loop
mov
sbb
or
or
repz
shlb
pop
mov
ret
mov
lea
int3
and
popa
pushf
dec
xchg
pop
shl
mov
pop
jno
push
cli
sbb
cmp
mov
cmp
outsw
stc
pop
jmp
out
test
push
incl
fnstsw
add
push
lcall
out
leave
fdiv
mov
cmpsb
loop
mov
push
movsb
popf
fisttpl
cs
jnp
push
mov
fs
movsb
pop
add
imul
lret
mov
dec
sub
push
out
pop
ljmp
sub
pop
mov
pop
add
fbld
aam
mov
sbb
mov
xchg
jmp
mov
andl
jecxz
sub
ja
lret
mov
xor
and
imul
push
iret
test
add
imul
enter
in
data16
sub
in
fistl
in
jecxz
fisttpll
jns
mov
je
and
adc
es
hlt
push
push
xor
stc
cmpsb
dec
stos
dec
mov
or
imul
mov
add
mov
dec
sahf
mov
push
stos
sub
mov
sub
push
iret
movsl
arpl
cmpb
in
xchg
mov
sub
add
mov
jle
loop
dec
lea
dec
jns
lods
cmp
ret
jns
jl
adc
push
lret
clc
jne
add
jle
xchg
pop
test
loopne
scas
jmp
dec
push
pop
sti
or
fiaddl
clc
shlb
or
movsl
mov
lret
mov
push
scas
push
adc
cmp
pop
in
lcall
and
push
xor
call
jae
mov
jae
aas
stc
cmpsl
in
adc
xchg
gs
mov
mov
cmp
mov
and
mov
adc
xorb
mov
ret
nop
push
dec
stc
inc
dec
fbld
jo
sbb
lcall
mov
cmc
jno
fnstsw
mov
ljmp
mov
pop
and
sbb
jnp
jae
enter
xor
shl
adc
mov
xchg
mov
cmpsl
mov
jmp
mov
add
sti
add
mov
push
fistpll
es
push
mov
test
add
cmp
out
nop
out
adc
pop
rorl
mov
js
sbb
aas
jb
pmaxub
xchg
jmp
ljmp
jp
dec
pusha
mov
pop
dec
pxor
nop
jne
icebp
sub
cs
ds
ljmp
in
inc
adc
loope
lcall
repnz
mov
ja
imulb
hlt
push
xchg
push
push
pusha
ficompl
pinsrw
add
mov
pcmpeqb
fbld
es
dec
push
mov
or
pop
frstor
in
inc
jnp
sbb
and
adc
in
xchg
outsl
in
xchg
fisubrs
cmp
pop
stos
xchg
aad
cld
adc
push
jmp
sub
test
negb
sbb
jecxz
data16
xor
push
push
sub
pop
mov
jbe
sbb
pusha
mov
pop
outsb
repz
xchg
inc
rorb
ret
hlt
xchg
adc
xchg
in
shrb
xor
das
js
int
dec
jae
cmc
ret
or
incl
ja
xchg
push
jnp
and
mov
loopne
sbb
pop
dec
lcall
jne
daa
adc
cmc
in
sub
pop
add
pop
xchg
data16
add
mov
jge
jbe
mov
pop
lock
ss
cmp
or
fs
shlb
jns
mov
sbb
adc
aaa
adc
fstl
dec
lret
nop
lret
sbb
cmpsb
cmpsb
cmp
test
mov
push
add
lds
add
lret
es
lahf
div
sub
repnz
sub
lds
es
into
dec
loop
es
mov
jbe
mov
mov
jb
add
push
in
push
scas
rorl
mov
scas
add
pop
dec
pop
adc
test
push
mov
stos
das
in
mov
adc
insb
les
mov
jp
mov
mov
push
xchg
xchg
sbb
aad
iret
scas
and
cli
out
dec
and
jnp
pop
sarb
cmc
mov
lret
icebp
roll
sbb
xchg
cmp
jno
pop
inc
mov
dec
and
mov
adc
pop
mov
insb
push
mov
outsl
adc
mov
in
mov
and
mov
mov
lret
bound
ret
mov
adc
jnp
outsb
cs
dec
dec
jb
xchg
sbb
sarb
or
aaa
sti
out
shrb
ljmp
repnz
testl
push
lret
ja
mov
or
jle
ret
int
adc
dec
add
pop
int
aad
push
outsl
sbbl
data16
jecxz
out
pop
insb
dec
and
mov
repz
and
and
icebp
adc
adc
xor
scas
imulb
fcomps
mov
fbld
add
lods
dec
cld
daa
ds
iret
lret
popa
push
ret
daa
int3
aam
inc
mov
fadd
push
sbb
cmp
subl
pushf
repnz
rcrl
jge
lock
cmpsl
push
inc
or
insl
lds
mov
outsl
data16
push
add
and
es
xchg
adcb
sub
dec
in
jbe
mov
add
insl
dec
das
jg
mov
fs
cmpsb
jne
mov
and
sub
clc
push
sub
mov
into
mov
movsb
cmc
sbb
lock
sub
or
loope
int3
mov
push
jno
mov
fnstcw
and
xlat
out
xor
xor
cmpb
nop
out
decl
dec
pop
fnstsw
popf
test
das
pop
push
ja
xor
movsl
mov
cmc
pop
in
mov
int3
outsl
cmp
sub
data16
fimuls
bndstx
faddl
aam
mov
inc
jge
js
in
dec
or
enter
shrl
adc
imulb
cmc
mov
mov
sub
pop
arpl
mov
cmp
lcall
mov
xchg
adc
and
jge
push
adc
mov
imul
push
mov
dec
cmc
shll
outsl
sub
rcrl
adc
dec
ja
sbb
jns
sbb
mov
mov
int3
out
ljmp
fidivs
push
xchg
push
push
pop
mov
dec
dec
and
outsb
movsl
and
cmp
pop
jo
jecxz
lock
sbb
mulb
sbb
rcrb
cmp
mov
xchg
in
add
bound
mov
push
int
ss
mov
jp
test
jbe
push
mov
insl
or
fcoms
lcall
pop
mov
pop
stos
cmc
outsb
and
pop
sub
mov
stc
fst
pop
cwtl
rcrl
adc
lods
and
loop
mov
in
inc
mov
out
out
mulb
fwait
and
mov
loopne
jp
outsl
cltd
inc
test
cs
aas
sub
das
fnstenv
push
xor
out
int
dec
or
push
mov
jecxz
in
push
xlat
stos
sbb
fdiv
out
aas
cmc
jmp
ds
cmp
cs
lcall
fucom
push
or
pusha
and
lcall
cmc
and
shrb
push
cli
fucom
daa
pop
cli
lret
dec
mov
in
jae
repz
pop
jo
dec
push
in
jb
in
pextrw
dec
pop
xchg
adc
in
lcall
mov
in
xor
pop
cmpsb
sbb
std
aaa
mov
jmp
xlat
xchg
push
and
or
pop
xchg
jg
imul
in
bound
push
push
and
fnsave
push
andw
cmp
mov
int3
shlb
sbb
mov
sti
adc
jnp
es
cli
inc
and
xchg
adc
in
stos
cli
lods
push
jp
lahf
cmc
push
nop
cltd
mov
push
pop
ss
mov
cmpb
sub
xchg
addr16
push
arpl
jne
adc
sub
dec
jmp
in
std
mov
add
sti
out
mov
sub
scas
in
dec
mov
repz
lock
stos
pushf
lahf
pop
cs
pop
xor
mov
sahf
pop
inc
ja
mov
orb
xchg
or
adcl
dec
jo
jns
push
fisubl
lret
inc
cli
mov
mov
cmp
stos
push
mov
fsts
jecxz
jecxz
testb
inc
jns
xor
sti
stos
data16
scas
icebp
adc
xchg
mov
jns
mov
mov
xor
addl
sub
in
ficoms
fsubs
andb
xor
shll
inc
movb
out
mov
xchg
aaa
add
jmp
and
lods
xor
loop
cmp
xchg
lret
mov
orb
push
lds
shlb
or
pop
xchg
jbe
push
pop
mov
rolb
outsl
ljmp
mov
add
pop
insl
push
out
mov
jno
sbb
popa
fldt
cmp
ret
mov
icebp
decb
add
aas
in
fwait
daa
or
mov
xchg
jns
and
mov
lret
fcomps
test
fwait
jmp
xchg
ja
or
inc
adc
data16
stos
cmp
test
stc
mov
push
push
push
int3
sbbb
push
jbe
mov
fcompl
int3
sub
aaa
out
in
rcl
adcb
fwait
js
adc
cmc
jmp
int3
cmpb
iret
xlat
in
push
xor
fldenv
sbb
cmpsl
fdivs
fucomp
mov
loope
xlat
cmpsl
cmp
cli
in
jbe
xchg
mov
pop
xchg
repz
pandn
jge
xchg
pop
mov
stos
jo
cs
inc
jb
push
xchg
dec
adc
js
or
jmp
rcr
ljmp
jmp
push
add
sbb
aad
hlt
arpl
repz
fistpll
sbb
xchg
mov
fstpl
mov
jb
mov
imul
insl
adc
test
xchg
fisubrl
add
shlb
cmp
and
out
push
jbe
jecxz
outsb
mov
shll
mov
add
aad
jmp
and
and
fsubl
fldl
int3
sbb
push
jo
push
mov
stos
push
cmp
inc
mov
jae
mov
sti
add
or
mov
mov
roll
mov
arpl
cmc
insb
and
hlt
lret
cltd
jg
dec
and
jecxz
and
mov
dec
pop
je
pop
call
dec
mov
idivl
cmp
std
arpl
insb
jne
pop
sbb
fs
inc
sbb
mov
sti
xchg
mov
push
dec
repnz
mov
cld
pop
xchg
push
xchg
inc
mov
lcall
and
and
fidivs
push
mov
sbb
mov
and
cmp
inc
push
shlb
cmp
repz
out
gs
dec
popa
jl
lods
sub
clc
clc
sub
lcall
cmc
cli
xor
inc
or
pop
fisubrl
orl
mov
or
sbb
sbb
lods
cmpsl
push
jns
aaa
jae
std
mov
scas
mov
lret
fcoml
orb
jbe
test
mov
mov
xor
mov
fucom
pop
xlat
sbb
jnp
shufps
mov
sub
fistl
mov
lahf
push
mov
arpl
cltd
adc
sub
mov
pop
xchg
cmc
outsl
sub
cli
push
jg
sbb
or
adc
shlb
mov
sti
icebp
cmpb
cmp
mov
ficoms
in
pop
xor
mov
movsb
cmc
ret
pop
cmpsb
jbe
lock
xchg
loop
int3
addr16
sbb
mov
sbb
sarb
cmpsl
mov
fsts
out
push
test
js
leave
scas
sahf
loop
xor
or
xchg
clc
pop
mov
cwtl
mov
enter
jns
bound
mov
add
int
int3
movsl
cmp
lock
cmc
push
dec
scas
or
jae
fidivrs
jns
hlt
scas
pop
push
sub
cmc
dec
in
loopne
lret
out
mov
bound
xchg
fs
int3
jne
push
in
jle
ss
lods
cmp
js
or
push
inc
lahf
js
sub
add
insl
cmp
ret
mov
mov
or
push
bound
loope
push
in
fcmovu
fnstsw
pop
jb
andb
jb
cmc
cmp
pop
jecxz
ja
cmp
cmpsl
jecxz
xchg
jl
iret
mov
pop
mov
mov
lret
push
in
or
xor
inc
jae
popf
pop
dec
xor
sbb
movsl
movsb
ljmp
dec
pop
insb
or
inc
sarb
or
and
adc
insl
mov
push
push
filds
jne
sbb
push
xchg
out
lret
pusha
hlt
or
scas
fbld
ffreep
leave
icebp
in
sbb
mov
in
xor
xor
ret
imul
mov
mov
sbb
cmp
cmpsl
inc
fsubrs
leave
in
sbb
bnd
jp
in
push
mov
lret
xor
scas
xor
pop
cltd
xchg
or
dec
push
push
mov
xlat
shl
sub
cmp
sti
and
sub
mov
lret
mov
outsl
pop
aaa
in
or
lea
jb
lea
cli
xchg
jne
inc
push
dec
fs
sub
sub
outsb
jg
cli
pop
das
js
fnstsw
jecxz
sub
xchg
adc
flds
cmp
adc
dec
lock
push
shl
mov
mov
xchg
pusha
std
push
int3
roll
imul
lret
pop
or
and
and
fisttpll
int3
cmp
lods
negb
lea
out
fldl
pop
xor
mov
sub
imull
fldl
mov
sbb
and
nop
push
jge
and
push
rclb
push
loop
faddl
addl
add
mov
mov
icebp
loopne
jns
jns
repz
sti
pop
pop
test
frstor
and
loop,pn
mov
addr16
mov
push
sarb
pop
pusha
jp
fcompl
stos
jae
out
and
add
mov
pop
shlb
into
loopne
sbb
addr16
ficoms
popa
jno
imul
push
mov
imul
add
xor
and
test
sarb
icebp
push
push
xor
xchg
push
repnz
cmpl
cmc
fbld
sub
jg
js
cwtl
out
mov
lods
cmovg
inc
dec
fcomps
ficompl
push
push
push
jae
jecxz
xchg
fnsave
inc
out
out
jns
out
testb
mov
jo
cmc
inc
orb
fs
xor
out
stos
mov
and
scas
roll
repnz
adc
imul
rolb
pop
add
push
xlat
xchg
out
mov
fistps
call
and
fidivrs
frstor
out
ret
add
mov
pop
adc
sub
es
adc
out
imul
daa
mov
adc
cli
mov
jae
cmp
les
dec
mov
pop
cmp
push
xlat
insb
imul
add
out
jae
movsl
push
jne
punpckhwd
add
int
pop
sbb
mov
inc
or
add
scas
leave
pop
pop
sub
mov
outsl
outsl
ljmp
mov
push
dec
push
fmulp
stos
jae
cmpsl
imul
mov
mov
fsubrl
out
add
repnz
xchg
mov
lcall
xor
cs
mov
cld
adc
and
sbb
aam
push
test
cmp
xchg
xchg
clc
and
int
std
pop
sti
fcompl
jecxz
xchg
jae
and
pop
pop
sub
push
in
es
rclb
bound
dec
jp
test
push
ret
lcall
lea
js
jle
lods
adc
int3
xor
jns
mov
lock
mov
fisttpl
mov
mov
mov
add
dec
xchg
fnsave
pop
mov
shll
cmc
ja
std
pop
and
mov
dec
sbb
sub
loope
lcall
fwait
out
mov
mov
mov
pop
repnz
and
dec
jb
in
sub
aaa
xchg
inc
dec
cmp
cmpsl
and
test
loopne,pn
sub
push
decb
pop
scas
mov
hlt
jp
adc
push
in
stos
aad
or
mov
popf
push
bnd
int3
filds
cmpsb
movsl
gs
test
aad
dec
test
adcb
pop
or
xchg
movsl
sub
push
fimuls
xor
fdivrs
movl
das
test
lea
decl
ja
pushf
loope
jge
or
cmp
and
insb
enter
adc
fld
mov
xchg
lea
out
mov
push
fwait
mov
lret
xchg
xor
pushf
mov
push
sti
aam
jne
and
xor
je
fnstsw
add
add
rcl
mov
cmp
or
adc
pop
stc
je
in
cmp
filds
push
insb
jb
or
pushf
bound
adc
data16
xlat
cmpsl
xchg
mov
jb
jl
push
cmp
int
sub
mov
xchg
push
xchg
xor
mov
jbe
imul
xor
add
cmp
ljmp
and
in
int
mov
outsl
or
xchg
clc
xchg
dec
lahf
xchg
inc
jns
nop
into
jne
push
push
sub
push
dec
ja
mov
pushf
cli
and
and
jecxz
aas
stos
int
jne
lods
mov
mov
in
and
inc
out
lods
arpl
or
popl
pop
rcr
jbe
lea
fbstp
movsb
mov
sub
xchg
fisttps
and
push
pop
push
popf
and
insb
aad
mov
sbb
mov
jns
lahf
lea
xlat
imul
cmp
sti
dec
mov
push
push
pusha
shr
bound
jae
pusha
aad
ja
shlb
and
pop
test
add
cmp
jl
mov
frstpm(287
mov
jge,pn
add
pop
ret
cmp
mov
add
xchg
pop
adcl
shll
or
jbe
cmp
fnsave
xchg
lods
mov
pop
sub
popa
int
xor
sub
rcrb
out
rcll
xlat
lcall
jne
aad
adc
lods
sub
adc
pop
pop
or
out
push
xchg
jo
pop
sbb
int
gs
in
push
movntq
sti
imul
or
out
lock
xor
mov
inc
pop
insb
mov
gs
or
nop
ljmp
adcl
mov
mov
sbb
popf
push
mov
lahf
and
jecxz
pop
enter
scas
call
out
pop
mov
in
jecxz
dec
lods
ffreep
adc
inc
push
fisttps
movsb
std
mov
cmp
mov
jp
cmc
insb
pop
div
adc
push
xlat
int3
dec
add
fnstsw
sbb
sbbl
mov
mul
or
in
or
sbb
xchg
rcl
mov
repz
xlat
rcrb
sahf
dec
jl
lods
mull
xchg
fidivrs
scas
lret
jb
cld
dec
push
movsb
in
imul
fstl
jbe
or
pop
les
fidivrs
roll
in
test
jb
pop
adc
leave
frstor
mov
subb
in
jecxz
mov
add
and
dec
loopne
ret
adc
fwait
sbb
lods
jb
xor
sub
inc
in
js
xor
cmc
in
sbb
call
xchg
ffreep
adc
iret
pop
in
roll
mull
xor
xor
repnz
sub
xchg
sahf
pop
jbe
jb
xchg
xor
fbld
nop
mov
jno
testb
js
dec
les
mov
insl
ror
add
insl
out
push
pop
jl
outsb
icebp
jnp
mov
in
push
push
jl
or
jbe
push
lds
cmc
add
xor
arpl
stos
popf
inc
aam
jnp
push
lds
push
outsb
ret
or
mov
sbb
test
or
sbb
fimull
test
xchg
leave
ljmp
repnz
pop
out
lcall
cmp
mov
bound
mov
sbbl
shl
jbe
push
outsb
cs
pop
jns
in
movsb
lcall
xor
add
dec
icebp
dec
xchg
addr16
inc
xchg
mov
pop
pusha
sub
pop
or
dec
lret
insl
test
fistpll
cmc
jbe
sub
push
mov
add
push
imul
mov
ja
fistpl
pushf
and
pop
es
adc
jecxz
loope
jb
cmc
push
pop
jge
adc
adcl
mov
xor
das
inc
rcrl
aam
ds
iret
out
sbb
jg
in
fcomps
sub
pop
rcrb
push
xor
pop
inc
aam
push
fwait
nop
xchg
xor
insl
mov
stos
pop
cs
shrb
and
fimuls
jp
mov
sbb
cmp
sti
pop
push
enter
out
int
cmpsl
mov
nop
mov
rcrb
xor
push
mov
push
dec
cmp
add
xorb
hlt
jle
sub
int3
repz
std
mov
loope
loope
pop
aam
int
inc
mov
jno
es
bound
mov
pop
into
jle
dec
hlt
repz
sbbb
pushf
mov
dec
out
cmp
andl
push
aas
adc
test
cmp
stc
loopne
movsb
stos
enter
mov
pop
inc
sbb
icebp
sbb
jmp
fnstsw
cmp
ficompl
imul
in
movsl
mov
mov
cmc
fwait
jae
leave
fadd
xchg
jnp
lods
push
add
cmpsb
test
ja
gs
in
sahf
jo
in
popf
cmp
scas
xor
push
jbe
pop
xchg
lods
jmp
inc
xchg
pop
pop
add
push
test
sahf
jns
in
xor
nop
push
mov
sbb
mov
mov
loopne
add
push
insb
int3
xlat
jecxz
leave
adc
jl
int3
es
sbb
in
push
cmp
or
jmp
test
jp
and
lret
ret
pop
push
leave
rcll
add
loopne
testb
mov
mov
pop
dec
xor
in
xchg
xchg
and
cmc
cmp
movsl
jbe
jp
dec
jecxz
arpl
in
jne
iret
das
sbb
sbb
fs
and
push
cmp
and
shl
cmp
sbb
cltd
mov
pop
in
push
int
mov
test
cmp
fwait
in
dec
push
mov
fs
sub
imul
xchg
ds
jb
sub
test
dec
inc
repz
jmp
mov
pop
jbe
dec
es
pop
rcr
dec
adc
sbb
and
and
adc
jbe
inc
sbbb
sahf
jg
or
dec
cmp
jae
lods
dec
mov
and
push
sub
in
stos
mov
or
out
pop
xchg
push
mov
cs
loope
adc
in
imull
dec
int3
mov
iret
mov
cmpsl
out
jnp
and
sbb
out
push
test
arpl
outsl
fcomip
jae
push
cltd
xor
or
aad
xchg
adc
loopne
mov
and
ljmp
out
ret
pop
lcall
mov
mov
test
bound
leave
sub
push
sti
outsl
jecxz
dec
sbb
clc
iret
sub
xor
or
adc
inc
stos
sbb
add
cmp
fdivl
mov
movsb
inc
dec
test
or
dec
ja
jne
dec
mov
cmpl
xor
scas
jnp
sub
in
xor
dec
cmp
pop
mov
cwtl
test
shrl
out
add
jecxz
imul
dec
adc
push
scas
jbe
das
mov
sbb
mov
sbb
push
scas
dec
aad
cltd
scas
xchg
lods
imul
sbb
jge
mov
testl
cmp
out
pop
ja
jecxz
push
mov
sbb
mull
sti
and
sti
xchg
xchg
add
inc
in
pop
out
jnp
ja
mov
cmp
mov
sti
orb
and
dec
pop
adc
cmc
ds
lock
mov
jo
xor
repnz
push
lahf
ja
cmp
sahf
ja
push
mov
push
stc
mov
jnp,pn
add
xor
daa
pop
and
hlt
ja
ja
or
cmp
test
popf
pusha
icebp
pop
daa
imul
pop
scas
out
outsl
jnp
imul
mov
sub
pusha
push
aad
dec
push
inc
jp
xor
mov
pushl
pop
js
jae
aaa
pop
cs
out
inc
jge
add
subb
daa
movsb
inc
pop
das
cld
sub
jns
popa
ja
jge
mov
jle
sub
cmp
jnp
xor
popf
addr16
pop
mov
push
cmpsb
lods
sbb
insl
stc
stos
testb
xlat
pop
and
pop
cmp
or
je
xchg
xchg
stc
jp,pt
and
ret
mov
pop
loop
pop
xor
pop
pop
cli
ret
jle
cs
mov
je
jae
push
stos
pop
aas
pop
pop
pop
daa
cltd
pop
xlat
mov
mov
sti
mov
push
add
and
fdivl
in
pop
jnp
add
out
jae
pop
ja
loop
popl
imul
dec
mov
mov
jae
mov
lds
out
mov
cmp
imul
and
dec
mov
hlt
or
jg
sbb
jne
pop
sti
imul
jo
push
cmp
push
pop
out
imul
jmp
xchg
mov
scas
pop
jne
cs
jb
xchg
sbb
gs
sbb
mov
add
nop
xorl
cli
fs
in
xlat
ja
jae
adcb
mov
dec
fmull
xchg
daa
and
leave
aad
pop
cltd
push
xlat
aaa
jp
ja
mov
and
push
data16
repz
por
adc
jns
bound
or
lods
mov
or
nop
icebp
mov
and
jns
arpl
lock
push
jns
outsb
push
cmp
dec
jnp
adc
testl
in
pop
iret
push
and
and
xlat
pop
jmp
jae
add
dec
es
lret
cltd
bound
pop
mov
scas
testb
jge,pn
pop
sti
repnz
jne
enter
pusha
arpl
dec
dec
imul
xchg
xchg
inc
inc
jp
loope
imul
lahf
je
dec
mov
sbb
pop
jb
imul
push
out
sub
clc
scas
or
add
jns
adc
movsb
fildl
jnp
movsl
outsl
inc
jb
out
jnp
lret
mov
mov
inc
mov
lret
xchg
sub
repz
pop
pusha
jecxz
jnp
rcrl
pop
inc
jnp
ds
and
inc
icebp
jns
pop
xchg
dec
outsb
lock
pop
inc
sbb
popa
and
pop
jnp
add
mov
push
jns
mov
jle
xchg
jnp
xchg
test
sahf
cmpsb
push
mov
xor
adc
jnp
xchg
lret
push
aas
or
cli
fldenv
dec
inc
adc
jnp
lods
mov
lcall
mov
cmp
jmp
jp
jle
idivb
dec
cmp
pop
iret
and
das
pop
lea
pop
pop
popf
xchg
push
testb
ds
mov
fwait
sbb
adc
jl
inc
jecxz
cmpb
shlb
sti
mov
lea
and
jno
mov
outsb
ret
repz
repz
jecxz
inc
push
repz
xchg
inc
shlb
pushl
xchg
sahf
adc
adc
imul
mov
dec
sarl
jecxz
ljmp
and
mov
push
jnp
dec
push
sbb
mov
cmp
mov
jo
in
mov
inc
mov
dec
jmp
jmp
inc
sbb
cmp
jb
fstl
enter
arpl
xchg
push
dec
imul
shlb
xchg
mov
lret
xor
mov
das
cmc
call
mov
mov
scas
cmpsl
lock
popa
xchg
jns
xchg
jmp
cltd
cmp
xchg
inc
mov
popa
in
dec
daa
lcall
push
sub
mov
jnp
inc
ds
adc
push
ret
and
dec
pop
adc
dec
mov
scas
aaa
mov
call
outsl
in
popf
and
mov
jb
test
outsb
push
dec
aas
sub
jae
adc
dec
mov
lcall
sub
jl
or
cltd
gs
out
pop
stc
cmpsb
or
and
mov
pop
fsubrs
jl
jp
push
out
enter
xchg
jae
inc
test
jae
out
pop
lcall
cmpsb
pop
sarl
aad
in
call
lods
rcrb
inc
into
idivl
mov
mov
jnp
fildl
repz
idivb
out
data16
pop
pop
sbb
ret
push
jo
cli
pop
jnp
add
pop
jnp
ljmp
jnp
pop
adc
push
mov
out
shll
pop
cmpsb
mov
cmp
ljmp
shrl
mov
lock
jnp
sahf
push
aas
dec
pop
adc
jnp
jmp
or
dec
jp
dec
jb
pop
fs
mov
jl
ja
stc
leave
add
mov
cmp
xchg
sahf
mov
jnp
fidivl
ljmp
xor
insb
ja
dec
mov
adc
cmp
test
xor
pop
mov
lahf
jmp
ds
jb
std
mov
jns
push
jnp
stos
mov
pop
sarl
fsubl
shll
imul
js
cli
add
pop
mov
divl
mov
out
popa
sub
sahf
mov
jnp
mov
mov
push
pop
push
aam
hlt
scas
jnp
imul
jge
out
movsl
push
shl
mov
ror
sbb
mov
or
and
lods
std
insl
lcall
mov
cmpsl
jne
mov
gs
dec
jmp
out
mov
inc
test
push
mov
pop
xlat
xchg
jnp
push
dec
aaa
fildl
scas
xchg
pushf
sti
psrlq
scas
dec
mov
inc
jnp
xor
divb
imul
stc
jnp
mov
jns
jne
xchg
imul
mov
movsb
gs
cmpsl
cmp
xchg
mov
arpl
dec
mov
cmp
enter
push
pop
dec
sbb
dec
ja
mov
push
jnp
scas
dec
inc
stos
scas
pop
push
testb
or
mov
into
stos
sub
or
imull
ja
loop
mov
imul
fs
push
adc
fcmovu
aam
je
enter
jl
mov
or
in
ss
jnp
mov
cmp
movsb
pop
clc
mov
jnp
push
ljmp
movsl
pop
imul
imul
pop
pop
adcl
jnp
sti
jp
cmpsb
jae
movsl
das
xchg
call
lret
inc
jns
out
mov
jl
shll
jno
stos
cltd
mov
push
xchg
in
ficoml
cld
push
mov
jnp
imul
es
sub
cmpsl
fisubrl
dec
gs
stos
mov
xorb
cs
jnp
ljmp
pop
icebp
fcoms
mov
orl
jmp
insl
repnz
leave
mov
sbb
jne
sti
fimull
and
mov
cmp
leave
stc
and
jle
cmpsb
faddl
xchg
xchg
jmp
jmp
push
popf
or
xor
hlt
pop
jae
mov
push
dec
pop
mov
and
xchg
das
xchg
call
jns
in
sti
gs
mov
lcall
imul
inc
jp
clc
call
in
xchg
incl
push
push
stc
cli
dec
jnp
stos
sbb
jns
mov
outsl
mov
adc
mov
mov
ss
sub
test
adc
dec
and
add
push
push
sub
jns
imul
clc
lods
stos
pop
jno
in
dec
out
sub
jnp
jl
pop
fldcw
jns
cmp
ljmp
scas
addr16
pop
shl
sub
dec
mov
jb
pop
ja
mov
and
push
clc
insl
fwait
push
pop
dec
outsl
jb
icebp
cmp
sub
jp
js
lods
lods
in
ja
push
das
test
clc
jle
clc
cmp
hlt
dec
dec
sbb
enter
cmp
sbb
push
pop
and
push
mov
arpl
fsubs
enter
sub
mov
jo
mov
xchg
js
jnp
push
mov
mov
jb
call
fadds
enter
orb
inc
inc
jno
sbb
inc
outsl
je
cmp
mov
mov
jb
dec
sub
cmp
cmpl
mov
out
add
cmp
sub
and
iret
sub
sbb
loop
outsb
hlt
mov
js
call
enter
dec
lea
pop
mov
mov
xorb
clc
mov
add
enter
cmp
sbb
lods
fucomp
jmp
or
jmp
mov
push
js
jb
push
dec
push
pop
mov
inc
dec
jno
test
lods
sbb
pusha
dec
cwtl
or
iret
inc
jo
call
fdivrs
cmp
sub
sbb
imul
mul
test
mov
pop
arpl
lods
in
in
in
mov
lods
inc
cmp
jle
lret
lods
aad
call
out
fcmove
test
sub
out
in
sub
push
insb
mov
cmp
out
xlat
fbld
pop
and
inc
pop
insl
in
sbb
divb
mov
movsl
mov
cwtl
add
add
mov
dec
clc
push
and
dec
orl
mov
mov
hlt
fisubs
mov
mov
cmp
sub
sbb
pop
psrad
movsb
js
lods
call
pop
inc
pop
jle
pop
dec
stc
mov
test
fcomps
cwtl
scas
inc
dec
mov
and
xor
pop
xor
sbb
or
sbb
mov
push
jns
sbb
push
inc
pop
push
or
lods
adc
mov
mov
test
cwtl
roll
mov
xlat
push
insl
addr16
jns
xor
aam
cltd
sub
call
mull
pop
bnd
ljmp
cmp
xlat
imul
in
fwait
cwtl
mull
sub
ds
sub
xchg
pop
call
fsubr
sub
inc
mov
mov
iret
xor
cltd
and
ja
mov
cltd
fbstp
outsb
mov
sub
cmp
dec
pop
or
push
imul
cwtl
push
sbb
enter
cmp
filds
push
sub
mov
call
neg
call
sbb
fsubr
push
ffreep
pop
xchg
fimuls
insl
jp
push
or
sub
lcall
jo
clc
mov
imul
xchg
test
mov
mov
sti
mov
push
sbb
js
pop
call
das
cmp
jle
sbb
sbb
sub
mov
cmp
cwtl
pslld
shrl
daa
mov
call
repz
loop
dec
jo
enter
in
add
cmp
sub
ja
sbb
popa
divb
shlb
arpl
out
add
int3
outsb
or
mov
add
aas
pop
sub
xchg
jnp
fmuls
cmpsb
sub
sbb
in
jbe
clc
jae
cmp
js
xor
je
std
pop
ss
cmpl
cmc
cwtl
mov
fcomps
xor
xor
out
sub
cmp
or
mov
js
jae
fsub
xchg
cmp
inc
fdivs
mov
xor
mov
andl
mov
cwtl
push
out
pop
mov
ret
sbb
clc
push
mov
cmp
fldenv
cmpsb
sub
inc
push
xor
sbb
or
jno
jnp
sub
and
cmp
jmp
or
mov
icebp
imul
cmp
fists
pop
or
fists
repnz
or
pop
int
loope
mov
dec
jno
jo
jbe
jg
pop
mov
cmp
mov
out
dec
clc
push
add
add
enter
cmp
sub
mov
mov
mov
je
jns
js
push
and
es
adc
adc
dec
out
xor
imul
push
cmp
enter
cmp
or
pop
cmp
sbbl
fildll
or
ffreep
pop
pushl
push
jo
sbb
dec
push
call
test
imul
inc
dec
push
sbb
mov
mov
or
imul
mov
test
js
js
mov
out
aaa
push
dec
fisttpl
mov
and
cwtl
filds
inc
mov
movsl
clc
push
outsb
push
call
fmuls
ja
cmp
call
dec
or
aaa
int3
mov
mov
jo
push
mov
jg
leave
push
adc
xor
fadds
cltd
inc
scas
dec
cwtl
sub
sti
clc
repnz
call
ljmp
pop
sbb
jno
sub
call
pusha
mov
sbb
mov
mov
outsb
aad
pop
adc
dec
idivb
sbb
aad
xor
sub
sarb
cmp
mov
dec
imul
or
push
js
lods
xchg
insb
stos
mov
xchg
dec
mov
hlt
inc
repz
cwtl
and
mov
call
std
sbb
out
and
and
jecxz
cmp
dec
pop
push
inc
aad
out
jb
or
xor
aaa
mov
js
jmp
fwait
pop
dec
mov
out
dec
sbb
pop
mov
neg
repnz
sbb
add
movsb
pop
mov
inc
orl
pop
roll
sub
mov
jns
push
pop
lods
lret
adc
adc
dec
mov
aam
pop
jo
dec
sbb
clc
push
xor
push
adc
fmuls
addr16
outsb
out
push
les
pop
sbb
loopne
or
out
repnz
js
lods
xchg
push
push
xchg
call
in
xchg
mov
dec
clc
mov
mov
das
xchg
mov
mov
out
jae
pop
cmp
inc
jae
mov
or
push
js
pop
push
and
sub
imul
loopne
bound
mov
adc
fsubrs
cmp
mov
ja
sub
push
scas
mov
mov
imul
js
sbb
out
sbb
mov
push
aas
out
movl
mov
pop
daa
jae
jb
inc
aam
inc
das
inc
sbb
bound
xor
sbb
cmp
ja
je
jb
add
insb
subb
jbe
out
pusha
out
fldt
xchg
push
lcall
aas
jmp
xor
jno
clc
add
call
in
jp
ret
inc
xor
not
cmp
sub
sub
adc
movsl
or
push
js
imulb
sbb
adc
cmc
mov
into
in
jg
aam
push
imul
fsubs
jne
cmp
jge
pop
fs
outsb
jmp
mov
or
jge
or
pop
aaa
add
adc
lahf
xchg
push
test
lods
shr
sbb
shlb
clc
sub
out
mov
daa
cmp
inc
outsb
sbb
jb
js
call
call
imul
mov
call
sbb
enter
inc
sub
in
aas
rcrl
mov
lock
ja
pop
stos
dec
push
lods
imul
jno
mov
repnz
push
ret
cmp
call
cmp
fistpll
movsb
cmp
and
fisttps
out
jp
mov
and
mov
lods
mov
out
adc
pop
add
jo
lret
mov
out
hlt
mov
xchg
clc
and
arpl
enter
out
xchg
sub
mov
or
int3
dec
lock
cmp
push
xorl
adc
cmc
mov
mov
fnstenv
call
inc
enter
test
sbb
fdiv
sbb
movsl
js
out
and
std
pop
push
pop
dec
cmp
daa
mov
push
jbe
jo
stos
clc
dec
fmuls
out
cmp
push
lods
call
mov
jns
xor
js
jne,pn
and
cwtl
dec
pop
fildll
int3
call
xor
lcall
out
mov
insl
sbb
or
call
cmp
sbb
cli
test
jns
mov
and
mov
pop
dec
std
popf
out
mov
test
cwtl
lcall
movl
push
dec
enter
pop
dec
and
fidivrs
adc
sbb
out
jns
repnz
mov
adc
cmp
test
fbstp
outsb
cltd
cwtl
daa
push
sbb
fadds
sbb
out
fcoms
lods
or
loopne
xchg
pop
jo
lret
stos
push
pop
ss
aaa
mov
push
dec
cmpsl
mov
gs
mov
in
adc
pop
jb
fsubs
xchg
xchg
cld
test
push
inc
mov
cmp
divb
pop
sbb
fbstp
pop
in
in
adc
push
mov
icebp
mov
shll
adc
sarb
fdiv
enter
dec
xor
inc
outsl
inc
mov
notb
lock
pop
aaa
mov
repnz
insl
js
push
push
divl
aaa
testb
lret
nop
xor
xor
xorb
xlat
xor
rclb
sub
mov
dec
dec
sbb
xchg
pushf
outsb
or
push
mov
lcall
jns
jge
insl
jno
xchg
rclb
and
fimull
sbb
test
out
mov
fs
int3
sub
sub
mov
sbb
add
mov
popf
jecxz
addr16
pop
in
out
add
cmp
std
cmpl
test
loope
fwait
addr16
insb
cmp
js
jb
push
inc
pop
shrl
dec
xorl
cmp
test
subl
push
imul
xchg
test
enter
rcr
enter
sbb
push
lods
jp
jns
xchg
jmp
cli
gs
int
fistps
xor
xchg
jne
popf
mov
mov
ds
rolb
mov
xor
lcall
fstps
push
shlb
xor
cmp
js
mov
sti
inc
sub
pop
mov
pop
mov
push
outsb
cwtl
and
sar
out
outsb
lods
outsb
cmc
push
xchg
mov
sbb
mov
cmc
and
pop
arpl
mov
cmp
and
xor
pop
mov
inc
rol
push
add
iret
iret
ja
sub
push
loopne
sbb
out
cmp
xor
mov
into
sub
or
mov
jns
xor
js
push
cmp
mov
cwtl
repz
jg
call
dec
fadd
fildll
jg
pop
push
ret
mov
outsl
repnz
test
js
sbbl
lods
lock
jge
stos
cmc
jne
push
xor
cwtl
ja
jb
popf
jne
mov
clc
jmp
adc
mov
aaa
cmp
or
aam
or
jns
aaa
xor
mov
jb
gs
outsb
ja
mov
jp
xor
xor
fmul
es
pop
cmp
sub
sbb
or
xor
js
mov
sbb
dec
iret
aaa
jl
mov
lea
jbe
mov
cmp
les
call
enter
pop
mov
inc
mov
jb
sbb
or
mull
insb
jns
adc
out
and
outsb
clc
pop
loopne
sarb
popf
push
mov
jo
push
mov
pop
inc
aas
jne
jb
mov
int3
dec
push
adc
jns
jae
inc
add
sub
sbb
and
mov
loop
js
ret
das
mov
inc
lods
ret
test
imul
das
test
fldpi
hlt
loop
adc
mov
fsubr
lods
jbe
adc
dec
cmp
lret
xor
call
sub
orl
sbb
or
pop
out
ja
loop
scas
jno
fld1
pop
mov
in
inc
dec
dec
lea
inc
cwtl
mov
mov
mov
pop
loopne
stc
call
outsb
lods
xor
enter
sub
cmp
jge
jns
imul
dec
arpl
cmp
cltd
cmc
pop
repz
sub
mov
fnsave
adc
adc
fiadds
xlat
insl
inc
je
dec
arpl
push
push
cmp
mov
mov
cwtl
mov
lcall
enter
jbe
cmp
sub
sbb
out
jae
mov
scas
jecxz
mov
test
hlt
mov
or
ret
sbb
mov
mov
pop
sub
push
scas
inc
sub
fstps
push
cmc
mov
xlat
pop
aaa
mov
jb
repz
js
inc
call
xchg
fcmovbe
in
scas
mov
mov
subb
cmp
pushf
mov
or
cmpsl
mov
cmc
cmp
mov
sbb
push
xor
loop
rcll
clc
jmp
sub
enter
pop
repz
pop
test
or
adc
je
pop
data16
adc
rclb
jl
sbbl
push
cmp
imul
ss
push
xchg
fwait
mov
pop
repnz
fdivr
enter
out
mov
ljmp
mov
pop
js
lods
mov
pop
rcpps
lds
mov
insb
cli
or
in
notb
subl
dec
push
dec
movsb
insl
sbb
call
xor
jb
mov
jle
xlat
push
dec
test
push
lcall
mov
adcb
test
inc
rclb
cmc
xchg
mov
mov
js
pop
push
adc
call
dec
jbe
popf
sbb
ds
sbb
cmpb
cltd
js
adc
inc
mov
xchg
mov
icebp
cwtl
sbb
mov
movsb
inc
adc
jo
cwtl
call
cmpb
in
popl
orb
idivb
mov
mov
iret
pop
fcomi
out
lret
push
scas
jmp
pop
and
xlat
mov
jg
cltd
dec
xchg
push
xor
out
xor
push
aaa
or
adc
int3
inc
rcr
in
jb
enter
nop
cmp
push
cmpsb
sbb
push
divl
sub
stos
in
mov
adc
xor
jno
mov
sbb
cwtl
dec
inc
mov
jb
clc
lock
mov
xchg
mov
aam
cmp
or
mov
insb
rclb
jecxz
sub
jbe
cltd
repz
mov
sub
dec
xchg
pop
sbb
push
in
dec
fwait
test
jmp
jl
and
out
scas
push
fs
mov
jmp
push
lcall
lea
pop
push
sbb
jne
push
mov
inc
xlat
mov
mov
xlat
cmp
popf
jns
enter
push
stc
call
popa
mov
imul
xor
out
mov
rcrb
push
dec
out
hlt
sub
test
cmp
jmp
mov
pop
shll
mov
xchg
sarb
enter
cmp
imul
sub
sbb
inc
mov
clc
push
pop
fidivs
inc
lods
jb
dec
cli
aaa
mov
push
add
call
push
cmp
nop
xchg
mov
or
jns
jp
stos
arpl
sti
pop
ja
cmp
sbbl
call
fcomps
add
and
pop
jns
mov
cmpsl
insl
negb
adcl
sbb
in
test
xchg
testb
xchg
das
dec
mov
xor
scas
cmp
xor
jbe
push
lds
and
adc
rol
add
mov
stc
xor
sbbb
out
cmpsb
pop
push
pop
push
dec
xor
cwtl
push
pop
mov
jo
mov
call
test
mov
sub
add
push
mov
sbb
jb
loope
loop
or
in
fwait
push
lods
pop
in
shrl
pop
sub
xchg
xor
fld
in
cmpsl
inc
cwtl
pop
inc
aad
ja
popfw
and
push
inc
sub
sub
push
lods
pop
or
bound
mov
push
ja
lea
dec
add
mov
xor
clc
push
cmp
call
jne
mov
cltd
cmpl
jecxz
cltd
mov
popa
divl
mov
mov
adc
adc
xchg
call
gs
loopne
addr16
aaa
lret
push
in
jg
addr16
push
sbb
jae
add
call
pop
mov
pop
jae
mull
add
jmp
adc
cmp
bnd
mov
out
sub
fwait
cmp
jns
sub
mov
sahf
dec
das
push
aaa
jmp
js
popa
sbb
push
sbbb
xor
jno
push
lods
stos
call
enter
sbb
mov
out
fmuls
enter
push
mov
sbb
xor
xor
pop
inc
mov
jb
push
test
mov
pop
xor
outsb
cmp
push
gs
cmp
mov
jb
in
pop
sub
jno
das
xor
push
loope
mov
mov
cli
call
pop
shll
xchg
fnstcw
adc
lahf
test
push
dec
repz
pop
clc
jns
push
out
xlat
cltd
jl
sbb
stos
jecxz
shll
scas
fldl
fistpll
jecxz
dec
mov
pop
xchg
adcl
jne
sub
popf
js
cmp
shl
inc
in
mov
mov
clc
cmp
aam
je
sbb
cmpsl
arpl
data16
fbld
nop
jo
mov
nop
cmp
leave
subb
negl
push
ja
shlb
ds
mov
repnz
cmp
add
ds
dec
xchg
sub
scas
pop
cmp
jmp
jnp
fmul
sti
decl
and
vpaddusw
pop
cmp
faddl
sub
sbb
adc
xor
pushf
adc
test
xchg
pop
ret
je
xor
inc
leave
pop
ja
mov
jb
outsb
xchg
scas
mov
rorb
mov
xor
fs
mov
inc
pop
xchg
in
inc
or
aam
cwtl
je
dec
mov
clc
dec
sbb
push
inc
pop
lds
ret
insb
pop
scas
cmp
mov
xchg
test
jb
shl
push
out
out
push
iret
jne
popa
iret
imul
jne
pop
movb
lea
jmp
pushf
lea
ja
pushf
imul
clc
add
pusha
pushf
pushf
lea
jmp
cmc
out
stos
insb
inc
outsb
add
mov
outsb
push
push
dec
jp
jb
bound
daa
rorb
movsl
pop
pop
cmp
cmp
mov
jge
daa
dec
rorl
xchg
mov
or
push
jo
int3
jae
repz
notb
xlat
cwtl
mov
scas
mov
jecxz
xchg
inc
test
mov
add
inc
aad
cmc
cltd
mov
fsts
pop
mov
jg
popa
dec
popa
jae
outsl
jne
gs
out
insl
and
andb
or
or
inc
jnp
and
mov
mov
cmpl
add
cmc
fld
popa
lret
jmp
inc
or
push
fisttpl
fldt
push
out
and
mov
sub
jge
out
inc
mov
outsb
stos
rorb
sbb
adc
aaa
loope
leave
jecxz
jecxz
sbb
and
fcomip
jae
dec
inc
mov
in
push
jbe
push
iret
cli
pop
xchg
mov
aas
aaa
in
cmpsb
mov
loopne
in
xlat
add
jne
mov
sbb
sarb
mov
jg
cltd
lahf
lret
fcmove
cmc
dec
lret
mov
not
sti
dec
out
lds
or
adc
dec
cld
push
lock
adc
sbb
sub
adc
xchg
movsl
sti
aad
sub
orb
arpl
jns
dec
jg
jae
ja
cmpsl
imul
adc
xchg
cmp
ret
test
mov
dec
pop
cmpsl
out
fs
cs
push
lods
or
inc
xlat
xchg
push
mov
mov
pushl
ret
push
lock
std
std
addb
imul
jb
mov
mov
cmp
mov
pop
xchg
xor
xchg
lcall
orl
aam
pop
iret
add
out
sub
xchg
test
xchg
jge
mov
cmp
movsb
inc
mov
add
xchg
push
mov
sbb
or
divl
add
jmp
sbb
inc
push
adc
pushf
push
mov
lea
call
pusha
push
jmp
cmc
pusha
sub
movw
test
clc
bt
pushl
popl
bt
cmp
jmp
sbb
sbb
sahf
xchg
fldenv
movsl
lahf
xchg
mov
xor
pop
lret
inc
jnp
inc
xchg
mov
jae
jbe
inc
rol
dec
fimuls
pushf
mov
fimuls
cmp
pop
clc
pop
xchg
lahf
mov
inc
sub
test
mov
xchg
add
aam
inc
out
movsb
xchg
movsb
push
mov
pop
push
lods
out
out
push
ljmp
addr16
outsb
icebp
std
mov
ret
mov
cltd
jne
movsb
andb
pop
xchg
push
test
and
jnp
push
push
out
adc
push
in
sub
inc
sbb
dec
xlat
jp
jp
jb
inc
in
aam
in
out
inc
fcoms
lock
shl
mov
sbb
clc
clc
cmc
add
dec
rcr
mov
push
pushl
test
push
jmp
movsb
xchg
mov
hlt
daa
push
jle
call
hlt
ret
in
les
jbe
stos
mov
xchg
xor
push
mov
push
push
push
ja
rorb
shrl
adc
or
outsl
or
loope
jb
repnz
pop
cltd
mov
cmpsb
and
or
jecxz
push
shll
cmp
out
inc
fsts
lea
jne
btr
sub
sar
btr
mov
cmc
add
xor
mov
pushf
stc
cmp
bt
test
pushf
lea
je
clc
pusha
sub
bt
jmp
add
cs
mov
push
das
dec
push
gs
xor
inc
insl
dec
jne
pop
loopew
lock
jge
inc
pop
loopne
fstl
jne
test
cmpsb
cmp
cmp
mov
sbb
mov
dec
mov
int
aam
push
xor
and
jl
mov
aas
mov
popf
lods
mov
cmc
pop
cs
sarb
and
lock
inc
stc
stc
xchg
ja
sub
jae
push
icebp
inc
jmp
inc
fnstenv
lahf
ds
and
add
add
push
pop
sub
add
add
adc
add
inc
xor
add
add
add
add
add
idivb
add
add
rcrb
add
ljmp
add
add
add
add
nop
sub
add
add
movsb
addr16
add
add
add
add
addb
add
or
add
stos
stos
cmp
add
add
push
lock
add
add
add
and
push
xlat
cmp
and
add
mov
cmp
add
add
adc
adc
cld
jg
push
lahf
push
sbb
push
pop
cmp
jae
pop
jecxz
gs
cmpl
enter
fmull
jmp
stos
ror
test
add
mov
mov
mov
test
and
lahf
rcrl
js
test
xor
push
sarb
xlat
mov
push
jno
popf
add
aad
mov
add
je
out
shl
and
push
dec
fistl
mov
jp
mov
std
cmpsb
xor
push
rcl
dec
push
lcall
adc
ret
sahf
xchg
popf
push
subl
adc
aam
mov
shll
jle
aad
sub
sbbl
pop
push
aas
adc
mov
cmp
rcll
push
icebp
sahf
call
hlt
jle
and
in
stos
test
scas
addl
outsb
push
cmp
enter
dec
out
xlat
clc
in
dec
add
add
rclb
lret
das
aad
jmp
and
divl
sub
vmread
clc
call
mov
push
lret
cmp
add
mov
push
movsb
push
pushf
sub
inc
ret
inc
mov
mov
outsb
jb
inc
pushf
out
mov
mov
and
mov
sub
dec
adc
xor
or
push
sbb
std
xor
jnp
imul
rcll
xchg
sbb
inc
fmull
loop
push
add
mov
aam
popf
xchg
lods
fwait
mov
xchg
xlat
xchg
mov
stos
cmp
out
cmc
adc
test
pop
fsts
nop
fmull
mov
jo
mov
push
pop
jae
jg
xchg
mov
xor
xchg
addl
jge
iret
xchg
dec
and
pop
jnp
scas
aaa
push
jecxz
lea
and
add
jle
rcr
fnstenv
daa
loope
in
std
push
jmp
push
mov
and
stos
enter
and
sub
sbb
and
pop
pop
es
cld
fistpll
sbb
and
inc
leave
repz
adcb
push
dec
cmp
repz
jne
cmpl
sub
cmp
pop
pop
sbb
clc
dec
arpl
inc
mov
loope
insl
jns
lea
pushl
sub
dec
icebp
jae
pop
rcrl
mov
and
inc
fucomp
nop
scas
scas
add
cvttps2pi
add
hlt
std
ja
dec
ss
out
clc
ror
imul
fmull
or
add
imul
not
push
jmp
or
push
sub
mov
dec
xor
repz
popa
int3
mov
and
push
adc
cmp
mov
add
jecxz
fsubl
jl
mov
sub
cmp
mov
add
or
and
jo
adc
mov
pushf
orb
enter
sbb
out
inc
fisttpll
nop
lea
jbe
rcl
movsbw
mov
sub
rol
xadd
pushf
add
rcr
pusha
rcl
bt
mov
push
clc
add
pushf
add
sets
movl
bt
mov
lea
bt
clc
jmp
ds
jbe
push
nop
icebp
pop
arpl
sub
adc
cmp
je
add
int3
jp
mov
pop
and
xchg
cmp
jl
ret
lea
rolb
in
mov
cli
cmp
mov
dec
cwtl
ss
sbb
push
mov
dec
scas
fdivp
push
repnz
jne
pop
inc
in
popf
pop
mov
sbb
das
loope
fnsave
inc
inc
fidivs
shl
lea
add
leave
or
sbb
pop
sub
pop
out
push
mov
std
bound
sub
pop
xchg
mov
xchg
xor
push
or
cwtl
scas
xchg
stos
xlat
ljmp
inc
mov
jl
mov
loope
movsb
scas
sbb
movsb
imul
jo
push
icebp
xchg
mov
pop
sub
pop
test
jbe
mov
cmp
fmuls
rcl
xchg
mov
jne
fmull
pop
sbb
shr
das
add
cmp
nop
jecxz
xchg
pushl
ret
lea
pushf
movl
pushf
mov
pushf
pushl
ret
pop
dec
push
test
outsb
xor
movsl
mov
outsl
pop
imul
push
and
mov
sub
inc
mov
mov
fisubrl
popa
lods
mov
fidivrs
cmpsb
sub
xchg
aad
mov
sub
push
rclb
sti
call
stos
mov
xor
out
mov
jno
testl
movsl
insl
push
lock
push
jno
push
repz
sbb
add
sbb
push
mov
inc
loopne
jl
movb
jmp
jmp
push
and
or
push
mov
sbb
lods
ret
arpl
std
cmp
and
test
xchg
in
jne
dec
jno
mov
sub
movsb
lods
sahf
adc
mov
cltd
xchg
iret
mov
push
push
cmp
jno
fs
in
test
push
jl
clc
jnp
jnp
push
push
inc
in
xchg
mov
xchg
cmp
add
adc
push
push
jne
mov
lock
cs
mov
xchg
js
mov
or
in
fldcw
push
int
out
inc
loopne
fwait
cmc
movsl
mov
scas
mov
shl
int
in
cmc
out
int
std
inc
rcll
mov
into
sub
out
and
nop
inc
push
int
mov
imul
pop
dec
adc
adc
push
push
dec
stc
lret
divl
sub
xlat
lock
xchg
jne
inc
pop
loop
scas
pop
fdivrs
sbb
sbb
loope
fs
nopl
lods
divl
jge
xor
ja
xchg
mov
dec
jge
jg
cwtl
scas
cmp
jo
test
fnstenv
xor
sahf
iret
adcb
das
arpl
push
xchg
scas
fcmovbe
sti
flds
sahf
mov
push
xor
jge
repnz
ret
sbb
scas
mov
addl
inc
push
pop
inc
mov
mov
mov
mov
shll
inc
loope
mov
sti
mov
scas
xchg
xor
sub
sbb
add
adc
sbb
or
sub
sub
push
jns
and
rcl
shll
add
mov
ret
sub
mov
cmp
andl
popf
mov
and
xor
dec
fwait
mov
data16
push
imul
xchg
cmp
xchg
and
xchg
mov
mov
leave
lock
inc
jl
push
or
sarb
lock
shlb
lock
hlt
push
fsubr
inc
loop
push
into
insl
pop
adc
cmp
fwait
xlat
xchg
stos
popf
mov
pop
sbb
loopne
bnd
imul
lock
mov
xchg
cmpsl
repnz
outsw
pop
imul
xchg
stos
mov
or
call
rcrb
sahf
sub
movsb
imul
shl
repz
popl
mov
xorl
sub
xchg
mov
ficomps
in
out
pop
lods
lock
fdivr
and
and
and
out
inc
jecxz
sub
sti
shr
jmp
mov
bnd
movsb
mov
mov
mov
dec
bound
pop
je
push
pop
xchg
popa
mov
xor
ffree
dec
xorb
mov
out
pop
adc
outsb
dec
js
xchg
or
lock
sub
xchg
or
icebp
arpl
in
xchg
xchg
insl
add
dec
sbb
outsb
sub
or
insl
test
js
inc
cmpsl
jno
mov
lods
add
lret
stc
lods
aas
and
xor
add
rcr
rolb
mov
sub
stos
mov
mov
sub
inc
jecxz
mov
xor
adc
inc
dec
imul
ja
outsl
inc
outsl
mov
xor
pop
movq
xchg
adcl
roll
cmpsl
xchg
fwait
ja
cmp
adcb
int3
cli
cmpsb
stos
mov
adc
pop
xor
ds
xchg
mov
sub
mov
pop
sti
jno
pop
push
xor
pushf
cs
mov
lret
dec
ficoml
inc
in
sbb
fcmovnb
adc
das
push
inc
js
dec
cs
jnp
sub
lret
cs
xchg
mov
mov
push
test
mov
pop
push
adc
sub
cmp
inc
xchg
pop
mov
sbb
les
pop
pop
fstl
insl
idivb
fwait
lods
call
mov
inc
pop
inc
jbe
add
xor
jge
jne
test
mov
mov
icebp
lret
pop
xlat
pop
sti
jns
push
notl
pop
xlat
gs
inc
in
insb
jo
outsl
popa
imul
sahf
stc
sahf
fmul
fcmovbe
out
aam
xor
and
add
sbb
jmp
loop
idivl
les
xchg
mov
inc
push
jns
xor
xor
popf
icebp
inc
testb
insl
pop
iret
dec
xor
push
inc
into
ficomps
jmp
mov
leave
movsl
inc
insb
or
int
xor
mov
mov
push
pushf
sub
inc
in
js
xor
jbe
testb
shlb
repz
sbb
xchg
ror
push
inc
jb
rolb
into
std
jg
add
jns
xor
cmc
add
pop
pop
sbb
push
lea
inc
mov
pop
or
mov
pusha
lods
ljmp
adc
lret
pop
lods
leave
out
xlat
fisttpl
pop
cltd
daa
sub
sbb
sbb
dec
mov
cmpsl
xlat
ret
rorl
sub
and
das
sbb
rcrl
out
outsl
nop
mov
fwait
jne
dec
call
xchg
mov
nop
push
inc
lret
inc
jns
mov
jecxz
inc
dec
mov
inc
sbb
test
gs
stos
leave
std
xchg
cmp
data16
inc
push
push
cwtl
sahf
into
and
sahf
test
mov
lods
cs
jbe
inc
fistps
pop
push
ljmp
push
lcall
cmp
sub
jmp
jae
out
inc
out
pop
or
test
and
fiadds
rol
inc
or
sub
pusha
lea
push
pusha
clc
cmc
sub
movw
pushl
popl
jmp
cmp
sbb
mov
mov
inc
fs
push
add
jle
push
fs
dec
or
add
xchg
adc
std
outsl
and
inc
jmp
clc
mov
sbbl
fsubs
divl
cmp
cmc
pop
cmp
push
data16
add
nop
les
out
icebp
mov
movsl
int3
xchg
add
subb
fs
mov
sahf
in
sqrtps
push
push
ss
enter
dec
mov
loope
and
cmp
daa
popf
das
lods
aas
mov
out
inc
out
inc
push
std
movsl
arpl
inc
pop
ss
mov
mov
xchg
mov
inc
pop
mov
seto
sbb
movsb
cmp
mov
push
jnp
mov
cmpl
xor
insb
icebp
push
adc
or
adc
jge
outsb
add
fimuls
xchg
js
dec
dec
fldl
fidivrs
mov
pop
pushf
ds
sub
out
mov
lahf
mov
sbb
sbb
lods
rol
in
shr
call
lods
cli
mov
insb
fwait
xchg
lret
xchg
dec
mov
ret
roll
sub
mov
fsubs
in
mov
sti
or
sahf
or
das
add
pop
pop
or
out
fmul
test
test
mov
out
enter
fcmovnb
scas
pop
add
test
or
aaa
mov
ja
sets
mov
pushf
bt
clc
clc
cmpb
push
call
mov
pushf
pusha
mov
push
lea
jmp
in
cwtl
pop
cwtl
loop
sub
pop
jnp
pop
push
push
jne
jns
dec
outsl
leave
lahf
fdivs
fs
pushw
std
loope
test
sbb
aad
ljmp
mov
aaa
insb
add
adc
jae
shll
fwait
iret
jns
das
inc
aam
repz
repz
and
out
mov
jmp
jo,pn
xor
pop
jae
push
es
pop
pop
jmp
sarl
inc
aad
stc
out
inc
call
bt
movzwl
shld
mov
clc
cmp
mov
cmp
add
jmp
mov
pushf
call
je
add
mov
sbb
push
inc
jae
lahf
mov
xchg
test
mov
cmpsb
pushf
xor
dec
out
sti
mov
push
fbstp
adc
sahf
mov
jae
push
or
sbb
data16
ljmp
mov
out
aaa
je
jb
shl
lods
cli
pop
rorb
add
int3
rorb
and
daa
repz
xor
mov
imul
scas
adc
push
pop
push
imul
or
in
sub
cmp
push
arpl
ret
ja
dec
cmp
clc
es
add
push
push
sbb
xor
sub
or
inc
pop
mov
sub
pop
das
adc
sbb
mov
mov
cmp
jl
and
push
push
push
push
xorb
lcall
fsubrl
xchg
enter
push
adc
jo
outsl
push
popa
stc
lahf
stos
mull
repz
sahf
sub
mov
andb
xchg
call
jbe
jp
jb
inc
ljmp
xchg
imul
out
push
xor
int3
xorl
cmp
jg
imul
and
cmp
pop
bnd
adcb
jns
cmc
lret
or
stc
outsl
in
pop
std
dec
std
out
inc
ljmp
jg
mov
cltd
loope
jmp
sub
pop
insl
and
das
sub
xlat
cmp
mov
insb
dec
call
lret
adc
xor
or
adc
inc
cmp
xchg
mov
mov
pop
push
add
mov
jo
cmp
add
cmp
pop
repz
push
pop
sahf
mov
arpl
shll
mov
out
inc
ljmp
les
push
jmp
jbe
push
adc
addr16
inc
popa
pop
int
lods
cli
xor
mov
mov
js
pop
into
inc
push
in
jle
mov
ds
jo
mov
lret
mov
test
mov
and
popa
stc
jge
aas
push
popf
adc
dec
insb
sbb
pusha
loopne,pn
adc
add
sub
sbb
inc
jmp
cmp
add
imul
mov
cmp
popf
jle
jmp
xor
int
int3
xchg
lcall
add
xor
movsb
xchg
xlat
mov
gs
fnsave
adc
lds
daa
cmp
lods
sub
push
es
dec
icebp
lods
arpl
jp
aad
jo
je
dec
inc
rcrl
sbb
jns
jne
jge
imul
pop
out
inc
jmp
xchg
xchg
decl
fxch
add
bswap
btc
bswap
mov
shl
mov
cmp
pusha
call
shl
rcl
adc
mov
clc
cmc
bt
cmpb
call
lods
popl
cs
das
sbb
add
xor
lock
lret
mov
stos
cmp
push
jne
mov
mov
ficoml
cmc
arpl
push
iret
pop
clc
push
cmc
gs
inc
je
mov
aad
mov
imul
xor
hlt
push
inc
insl
jb
fs
pusha
fisubrl
add
add
xor
or
cs
push
movb
inc
in
xchg
cmpb
mov
mov
pop
adc
adc
cmc
stc
addr16
add
sarl
icebp
mov
lahf
mov
cmpl
insb
xor
arpl
push
fsubs
inc
loopne
sbb
stc
jnp
jbe
adc
and
dec
add
adc
cltd
push
add
pushf
adc
mov
cmovs
xchg
mov
decl
cwtl
sar
sub
movsbw
sbb
pusha
sub
add
neg
and
or
bsf
mov
inc
mov
push
test
bt
repnz
pusha
call
stc
cmp
pushf
test
pushw
popfw
mov
mov
inc
pushl
adc
pusha
pushl
ret
push
add
xor
divl
cs
std
idiv
sti
mov
pop
leave
jnp
fwait
lret
xchg
mov
jecxz
jge
pop
sbb
push
xchg
ret
pop
jmp
pop
sbb
jne
jp
sarb
rcll
dec
or
cltd
aaa
and
mov
andl
jo
jle
jl
push
rorb
sbb
jns
out
sbb
test
lcall
cmc
dec
sarl
pop
add
xchg
out
inc
out
fwait
pop
push
and
xor
scas
xchg
jge
clc
and
cmc
iret
in
ljmp
pop
sbb
imulb
mov
in
sbb
and
jle
mov
inc
insb
pop
pop
test
jb
cs
int3
add
div
and
mov
sbb
mov
popf
arpl
insl
and
lock
adc
xchg
sub
mov
ljmp
jno
imul
sub
ror
rol
xor
bt
rol
lea
jo
not
stos
push
mov
lea
pushf
pushf
push
lea
call
jmp
sub
pusha
lea
call
call
sub
adcb
adc
sbb
adc
cmp
sub
aam
in
mov
cmp
in
ss
js
xlat
int
jno
adc
popf
cmp
lds
mov
xchg
inc
jne
xchg
ret
or
lds
and
jp
inc
and
cmp
or
pop
inc
sti
out
lds
out
in
push
es
inc
fsubrs
es
adc
add
aam
adc
pusha
push
insb
shlb
add
push
sbb
sub
loopne
aam
int3
jp
mov
mov
pop
ja
aad
imul
or
inc
insb
pushf
jg
lcall
dec
rolb
in
cld
outsb
xor
push
sbb
pop
xor
cmpsl
imul
or
add
cltd
aas
sbb
ds
imul
fsubl
push
scas
or
mov
out
lea
jp
cmc
push
stc
rol
stc
pushf
clc
shr
mov
pusha
pushf
lea
je
jmp
add
inc
gs
popa
jbe
inc
imul
add
dec
mov
xchg
pop
jmp
mov
push
add
pop
data16
jb
mov
dec
mov
mov
jns
popa
jns
push
xchg
fsubrl
imul
jmp
shrl
jae
push
addr16
lret
jae
mov
jo
imul
outsl
jp
jae
out
mov
jb
ljmp
sti
jns
jns
leave
mov
je
cmp
jmp
mov
push
repnz
and
sti
hlt
bound
repz
mov
fidivl
div
ja
out
fsubl
xor
dec
and
je
jb
es
xchg
jns
loope
das
arpl
jmp
pop
push
pop
adc
inc
sbb
pop
cld
cli
sti
lea
mov
cli
sti
loop
cmp
jns
push
mov
imul
sbb
sbb
sbb
sbb
sub
lods
mov
mov
stos
mov
mov
pop
je
sbb
scas
jmp
pop
jb
xor
jecxz
ret
out
jae
cli
scas
shll
cmp
jo
jg
sbbl
into
mov
jnp
pop
cmp
or
sbb
scas
setge
cmp
jo
adc
fidivrl
sti
xchg
cmc
jp
mov
out
or
lods
paddusw
jo
adc
ja
shrb
sbb
into
xchg
mov
or
shrl
pop
xchg
cmp
sbb
sub
adc
mov
outsb
pop
xor
mov
xor
movsb
jmp
repz
ja
scas
ja
out
data16
aaa
xor
pusha
sti
xorb
jbe
jp
dec
jmp
shl
xchg
sbb
jbe
xchg
inc
cmpsl
hlt
inc
imul
ja
cmpsl
xchg
imul
clc
movsb
je
test
mov
cmc
stc
hlt
xchg
in
xor
adcb
jno
outsb
lahf
sti
call
sarb
jns
pushf
sub
je
adc
popa
iret
lods
jno
imul
or
stc
fstps
stos
jmp
fstpt
movzbl
enter
mov
sub
vmread
lea
push
mov
jmp
bound
jp
xor
mov
mov
clc
push
rcrl
mov
sub
frstor
insl
popa
push
push
jb
xor
jbe
jae
and
mov
mov
mov
xchg
xorl
mov
cs
fbld
imul
mov
mov
inc
sub
in
sub
mov
jns
imul
sub
fistpll
jp
and
ja
in
and
cmc
mov
repnz
shll
loope
jnp
pop
mov
imul
or
divb
daa
repz
aam
xchg
js
ret
fsubrl
mov
mov
pushf
sbb
mov
int3
push
pop
popf
fcompl
repz
jbe
inc
mov
jmp
jl
mov
xor
push
cli
adc
xchg
lahf
imul
jmp
and
jb
cmc
mov
dec
mov
repnz
xlat
mov
sub
xor
pushf
mov
in
adc
dec
andb
cmpsl
sub
ja
cmp
rcl
add
cmc
stc
xor
ss
repz
pop
sti
sbb
cmp
popa
sti
xchg
mov
jne
loope
ds
mov
push
xor
lret
mov
fsts
xor
sahf
dec
mov
push
and
sbb
fxrstor
cli
cmpsb
fisttps
js
nop
jnp
aam
jae
in
lods
roll
loopne
mov
cmp
xor
sub
js
mov
cli
imul
fstpl
sbb
push
ja
cmp
sub
js
and
push
test
sbb
mov
push
pop
jmp
outsb
xrelease
and
lods
fidivrs
mov
sarb
lock
push
sarb
cld
pop
xchg
sti
je
mov
or
int3
lcall
icebp
pop
test
xchg
sti
mov
movsb
adc
fwait
or
sti
loope
popf
repz
mov
sti
sub
loop
ja
mov
jae
sti
shll
sti
sbb
stos
cmpsl
cli
sti
das
insl
loop
dec
insl
xchg
adcl
dec
lcall
je
je
je
je
add
pop
ret
sub
mov
push
push
cmc
push
pop
push
mov
sti
bound
scas
xor
mov
insb
mov
loop
jl
push
sarb
inc
push
mov
inc
jb
push
inc
pop
push
aas
aaa
inc
lods
inc
les
sti
cld
mov
mov
in
sub
mov
mov
sti
xchg
sahf
loop
push
dec
and
pop
rcrb
dec
xor
sarl
xlat
ja
sbb
test
push
lahf
mov
fisttpl
mov
jl,pn
in
pop
pop
mov
lods
and
fidivrs
pop
stos
rol
pop
adc
inc
add
xchg
sti
je
adc
iret
sbbl
push
adc
dec
sti
inc
xlat
mov
mov
ret
jmp
ljmp
or
addb
ficomps
push
mov
or
xor
mov
lret
imul
inc
jnp
pushf
enter
jl
and
getsec
dec
sbb
sub
mov
push
insb
xorl
test
daa
lock
outsb
jle
int3
xor
repz
or
add
sub
ss
mov
jae
mov
mov
test
or
je
inc
or
mov
push
imul
scas
jmp
stos
sti
outsl
repz
ljmp
loop
imul
lock
mov
repz
movsl
xor
mov
cmp
sti
adcl
jg
aad
data16
rcrb
adc
mov
loope
pop
shll
push
rolb
jnp
cmpb
cmp
popa
jo
or
nop
icebp
jp
or
imul
pop
or
rdtsc
lcall
outsb
mov
cmp
dec
mov
pusha
sbb
push
out
cmpb
nop
insl
decl
pop
push
fwait
mov
sbb
mov
call
jmp
sbb
push
hlt
sbb
mov
rorb
loopne
aas
and
jne
mov
sti
pop
addr16
jbe
add
std
adc
andb
sahf
data16
cmp
jo
jg
or
inc
push
fsubl
inc
insl
push
js
cmc
jp
imul
fs
jno
sarb
adcb
nop
pop
sahf
shrb
mov
push
js
fimull
cmpsb
cli
push
mov
xor
hlt
incl
dec
xchg
push
mov
pop
hlt
out
shrl
jg
loopne
lock
imul
outsb
imul
push
cmp
fldcw
in
jae
aad
cltd
sbb
xchg
fptan
pop
and
xor
mov
test
adc
mov
mov
icebp
dec
jp
test
xor
cmp
mov
pop
pop
pop
jo
lahf
mov
jmp
push
dec
insl
pop
popa
adc
jns
jmp
pop
adc
dec
ss
mov
inc
add
inc
inc
and
sbb
cmc
mov
cmp
cli
mov
in
xor
cmc
mov
fwait
lods
add
addl
aaa
addr16
stos
pop
xor
ds
stmxcsr
mov
gs
push
aaa
and
inc
mov
push
mov
adc
fists
test
mov
and
dec
dec
stc
imul
add
out
mov
mov
push
xor
andb
ja
jle
sbb
add
fwait
jno
xor
adc
jb
cmc
negl
add
iret
adc
and
ja
cmp
loope
pop
fildll
test
jecxz
jmp
or
fnstenv
xorb
ja
jns
call
into
scas
mov
ja
imul
mov
sub
push
pop
daa
mov
mov
dec
jp
dec
shrl
push
mov
jecxz
adc
jmp
push
inc
jb
xchg
ja
push
and
xor
cmpsl
xchg
cmpsb
aaa
mov
out
inc
or
lea
fcmovne
ds
cltd
push
push
sti
and
cmp
jmp
scas
jne
iret
dec
into
clc
js
cltd
cld
ret
jae
push
sbb
cli
js
jle
sarb
cltd
sub
add
stc
gs
adc
in
xor
adc
adc
dec
lods
jl
mov
lods
in
imul
in
in
push
out
cld
xorb
test
in
sti
cld
or
jmp
mov
pop
fimull
sbb
jns
pop
inc
sbb
cmpsb
and
aad
cmpsb
stos
rcrl
xchg
push
pop
mov
or
push
cmc
xor
aam
push
hlt
clc
xor
outsb
mov
movb
ljmp
xchg
jp
divb
cmc
pop
sti
flds
dec
addr16
aaa
mov
cmp
js
cmp
lods
stos
shrb
xchg
sub
and
cmp
cltd
jae
insb
xlat
cwtl
or
mov
mov
pop
push
cmp
xchg
inc
jp
xchg
cmp
and
mov
mov
sub
mov
cs
rolb
mov
sub
call
pop
fidivl
insl
mov
shlb
lret
sbb
push
push
out
jp
mov
mov
lock
inc
mov
sbb
insl
fwait
adc
jb
cltd
dec
cmp
lea
fcomps
and
adcb
out
js
pop
cmpsb
movb
xchg
gs
fisubl
pop
jns
jo
xor
dec
imul
xchg
jae
mov
push
sub
adc
push
xor
jne
mov
fcoml
sub
stos
fstps
cs
pop
push
cwtl
rorl
cmp
sub
test
int
out
sbb
jns
pop
or
mov
xlat
sbb
cmc
cmp
out
bound
sbb
push
fwait
and
aaa
mov
sti
pop
rcrb
pop
cltd
fwait
sub
mov
mov
sti
push
mov
sbb
sti
sbb
push
dec
push
mov
outsb
stc
mov
and
cmp
jmp
nop
stc
jp
into
sti
div
lea
sti
inc
xchg
inc
or
pop
dec
jnp
xchg
adc
and
cli
sbb
orl
mov
test
xchg
push
xor
cmpl
push
jo
mov
sarb
sti
mov
mov
dec
out
jmp
bound
ret
mov
repz
pop
inc
mov
mov
mov
test
inc
sti
push
jg
xor
cmp
fmulp
aaa
add
imul
int3
mov
push
testl
insb
stos
jecxz
pop
fwait
mov
lods
pop
sti
mov
jmp
cs
fstpt
scas
pop
cmp
pop
sbb
scas
pop
jp
outsl
push
xor
mov
mov
mov
xor
mov
mov
cli
mov
ljmp
test
mov
sub
xor
mov
mov
jns
jae
jecxz
pop
pop
mov
mov
mov
mov
cltd
mov
negb
mov
jmp
mov
negl
mov
sub
ja
sbb
clc
pop
js
mov
pop
bound
pop
dec
mov
mov
mov
cmp
xchg
pop
mov
xchg
test
in
jnp
xor
push
inc
imul
jns
mov
sbb
sub
jnp
fldt
dec
jmp
mov
fwait
push
gs
dec
movsl
adc
add
mov
mov
jnp
imul
or
cli
cwtl
fidivrl
lret
jnp
test
sbb
sbb
cltd
cmp
sub
dec
mov
imull
xor
aam
jnp
movsl
cli
ljmp
or
pop
dec
xor
push
ficoml
fiaddl
outsb
mov
sbb
lcall
pop
out
fimull
xchg
stos
hlt
fwait
xchg
jp
cmp
mov
mov
cmp
xchg
pop
leave
fcmovnu
stos
jns
xor
adc
out
cwtl
es
cmp
mov
xchg
lea
jns
pop
dec
leave
bound
out
push
pop
mov
or
mov
imul
mov
pop
jae
cmp
xor
pop
cli
cwtl
dec
stos
jmp
ja
pop
xchg
imul
lret
ljmp
cmp
lret
cmp
pop
daa
jae
mov
mov
or
add
push
mov
pop
stos
jns
leave
imul
xor
jp
stc
ss
sub
fstpt
fisttpl
push
fnstcw
loop
mov
pop
sub
stc
jns
cwtl
sbbl
mov
inc
lods
pop
js
jmp
scas
pop
jp
imul
lret
ficoml
outsb
jmp
dec
or
cmp
jb
pop
js
ljmp
jae
fwait
pop
decl
cli
dec
cmp
pop
jmp
leave
cmc
pop
test
cmp
pop
fs
mov
sbb
cmp
inc
sub
call
cmc
fsubrs
sbb
mov
sub
pop
mov
jg
jge
xchg
ja
fcoml
test
stc
addr16
xchg
push
je
sbbl
push
sbb
lods
fimull
and
cli
fidivrs
out
or
cmp
pop
mull
pop
mov
out
pop
es
cmp
lret
jae
push
ficompl
cli
stos
bound
popa
jae
sti
dec
jo
aaa
jae
fwait
daa
cmp
xchg
mov
xchg
pop
cli
or
mov
push
mov
sbb
mov
jb
sub
add
cmp
inc
rcrl
jb
pop
sbb
lret
fidivl
push
cmp
stc
js
pop
xchg
xchg
push
jmp
mul
sarl
pop
test
jns
popf
or
ljmp
sub
xchg
jp
es
pop
push
push
fcmovne
jmp
movsl
jne
fldcw
pop
gs
pop
out
mov
push
jae
cmp
xchg
pop
pop
pop
mov
test
pop
imul
jge
ss
xchg
sub
stos
test
lock
pop
mov
dec
xor
mov
mov
sbb
xor
fcomps
pop
ja
adc
outsl
add
fistpl
fs
push
pop
stos
inc
jmp
mov
pop
mov
test
hlt
fsubp
pop
lcall
iret
cmc
mov
repnz
mov
push
sbb
mov
lret
pushf
fcomps
xor
mov
cmp
and
sti
jp
leave
pop
pop
lret
sbb
jp
imul
xchg
cli
mov
mov
sti
or
cmp
dec
jno
jae
popf
pop
pop
jmp
cmpl
pop
xchg
dec
mov
mov
mov
repz
fwait
jecxz
pop
dec
pop
sar
mov
imul
pop
and
cli
ficompl
xchg
cli
out
cmp
adc
aas
leave
cmp
cmpsl
push
aaa
pop
inc
cmp
out
stos
cwtl
cmpsb
jge
lods
cmp
ficompl
mov
mov
pop
lods
push
sbb
xor
jb
dec
mov
fnstcw
loop
sub
pop
js
pop
xchg
shlb
xchg
test
mov
xor
lret
and
pop
adc
cli
iret
mov
cmp
popa
jae
sti
push
pop
jns
pop
cmc
inc
sub
or
ljmp
out
cwtl
xchg
mov
push
fildl
inc
cmp
leave
pop
fimuls
pop
push
sbb
pop
push
shll
fwait
shll
stos
lret
sub
stc
sbbl
add
pusha
fmul
negb
das
cmp
stos
cli
sub
mov
add
cwtl
lock
cmp
pop
in
xchg
sti
mov
or
push
cmp
mov
xor
lock
stos
fnstcw
test
cmp
sub
imul
jae
ficompl
xchg
cli
dec
sarb
mov
jns
mov
ljmp
jae
iret
cmp
leave
push
or
adc
notb
pop
pusha
pop
outsl
pop
pop
inc
sbb
dec
mov
pop
cmp
aas
sarl
scas
or
cwtl
jg
sbbl
imul
sub
mov
stos
dec
pop
imul
push
pop
setb
iret
mov
popa
mov
pop
popa
pop
jae
sub
pop
pop
dec
jae
sbb
or
ret
nop
stos
ja
sahf
push
mov
lds
xchg
ffree
pop
out
fnstenv
js
mov
pop
fdivrp
push
pop
mov
lret
imul
in
dec
cwtl
dec
stc
mov
out
mov
mov
sub
jae
test
imul
sub
loop
cli
cmp
adc
decl
jg
push
inc
dec
imul
sub
stc
into
add
cli
jno
jae
iret
idivb
pop
xchg
dec
stos
adc
dec
dec
or
in
xlat
pop
sbb
iret
cwtl
pop
insb
lea
fwait
jge
in
inc
sti
fstl
pop
lock
stc
aam
xorl
push
sub
sbb
std
bound
and
pop
stos
flds
dec
sub
xor
jno
stos
cwtl
mov
dec
pop
dec
cmp
sar
pop
fisubrs
cmp
mov
sub
mov
lahf
imul
jae
adc
lret
fiaddl
pop
pop
jmp
cmc
pop
int3
mov
sti
dec
sub
xchg
pop
xchg
cwtl
mov
cmp
leave
out
cmp
dec
sub
sub
sub
jae
pop
sbb
add
scas
sti
repz
rorl
pop
fisubrl
clc
dec
arpl
cli
mov
in
sbb
arpl
pop
dec
dec
mov
mov
mov
jmp
out
mov
add
push
pop
in
push
cwtl
icebp
mov
arpl
fsubr
xchg
jp
jmp
dec
adc
push
mov
sub
xchg
cmp
sbb
sbb
test
cmp
arpl
inc
jmp
rcrl
or
pop
mov
lea
push
stos
arpl
dec
sbb
ds
pop
cli
sbbl
mov
negb
pop
ljmp
fcmove
arpl
cmp
pop
fdivr
fistl
sub
lock
arpl
inc
cmp
cwtl
pop
data16
clc
push
pop
lock
pop
mov
cmc
lahf
enter
push
adc
push
stc
pop
pop
arpl
cmp
mov
and
int3
mov
stc
test
pop
icebp
cltd
push
arpl
aaa
mov
out
pop
xor
dec
imul
popf
pop
cli
ljmp
pop
cmp
ljmp
ljmp
or
imul
push
pop
push
fimull
adc
cli
push
cmp
mov
or
ljmp
mov
sub
mov
mov
clc
adc
mov
loope
sub
pop
fdivr
jns
pop
mov
aam
enter
mov
fldcw
mov
fstpt
mov
pop
test
ja
mov
inc
addr16
pop
dec
inc
mov
push
stc
pop
stos
mov
sti
jmp
mov
fincstp
sub
xchg
mov
out
dec
lock
or
fstpt
stos
imul
lods
xchg
cmp
dec
out
jnp
or
mov
hlt
imul
push
push
out
sub
mov
cmp
bnd
jg
lret
hlt
jp
mov
mov
aas
fimull
js
cwtl
mov
stos
pop
cmp
mov
mov
dec
scas
or
mov
mov
sub
lret
imul
cmp
stos
leave
mov
in
sbb
mov
mov
push
cli
sti
sti
mov
lret
dec
jno
daa
arpl
fwait
mov
xchg
mov
popf
cmp
or
fadds
or
test
stos
pop
xchg
mov
lock
repnz
sbb
pop
lret
fwait
sub
jns
jbe
push
sbb
sti
and
stc
pop
or
ljmp
cmp
mov
jb
sub
or
pop
scas
fisubrl
jbe
cmp
cli
mov
pop
pop
repnz
mov
imul
ficompl
dec
and
mov
pop
sbb
cmp
insb
mov
cli
mov
das
jno
mov
cmp
lret
or
stos
sub
dec
subb
lods
or
adc
cmp
xchg
xor
push
into
and
mov
divl
xchg
fnstcw
test
mov
arpl
sub
or
ljmp
jae
mov
scas
xor
pusha
clc
in
stos
sub
mov
mov
sub
push
repz
insl
jnp
hlt
pop
jbe
xor
push
repnz
mov
pop
hlt
nop
not
in
fidivs
sbb
xor
jmp
mov
inc
pop
shrl
addr16
fisttpl
jecxz
pop
sub
mov
sbb
aas
fidivrl
ljmp
mov
in
out
jmp
push
dec
push
xchg
mov
jp
cmpsb
mov
sub
push
mov
adc
jne
or
dec
sti
mov
addr16
jecxz
lret
mov
hlt
jnp
sbb
fwait
lret
dec
cmp
cmp
ljmp
jecxz
stos
icebp
or
mov
sbb
dec
mov
push
movsl
notb
cwtl
jns
push
sti
popf
shrl
arpl
cmp
or
sti
cmp
pop
dec
neg
push
pop
push
stc
push
bound
sti
or
xlat
sub
iret
push
sub
popa
fisubl
xor
cmp
mov
cmp
cmp
lret
fidivs
lret
jns
sub
xor
cmpsl
adc
mov
xchg
sbb
ja
lret
sbb
or
push
into
mov
ss
xor
sbb
cmc
jecxz
sub
out
lock
mov
xlat
into
aaa
in
jmp
jmp
jns
repnz
mov
out
pop
inc
mov
aad
mov
sub
leave
in
imul
cmp
arpl
or
mov
push
xor
imul
mov
push
xor
inc
mov
outsb
mov
cmp
mov
lret
xor
sub
ja
jno
repnz
jae
fwait
jns
cmp
addr16
pop
jb
pop
xor
repnz
sti
mov
inc
push
sub
fldcw
mov
mov
mov
shrl
and
arpl
mov
mov
mov
cli
repnz
mov
pop
dec
lret
push
aad
jbe
into
dec
and
fstpt
cltd
sbb
jnp
or
mov
adc
jns
negl
mov
xor
dec
repnz
sub
ljmp
popa
int3
push
cli
fcmovnb
arpl
bnd
ja
scas
arpl
push
pop
test
push
pop
sub
jo
pop
das
ficoml
aas
cli
mov
dec
or
fwait
xor
negb
lahf
ja
xor
fstp
leave
add
jnp
xor
push
arpl
leave
dec
sbb
cmp
lret
adc
les
jno
stc
or
repnz
sarb
outsb
aam
test
fidivl
pop
jmp
insl
xchg
stos
cli
jae
out
sahf
push
pop
je
lea
cmp
dec
mov
and
pop
into
dec
xchg
dec
arpl
mov
mov
pop
dec
push
xchg
jb
jo
push
icebp
cmp
rcll
push
inc
arpl
cwtl
jns
fisubrs
push
movsb
inc
cmp
sti
xor
cmp
hlt
jo
ficoml
xor
xchg
arpl
mov
cmp
cmp
mov
cs
lret
lods
cltd
ljmp
adc
shlb
nop
jmp
leave
imul
js
mov
dec
lods
gs
adc
hlt
call
fwait
sbb
out
stc
sub
sbb
mov
dec
insb
xor
jno
icebp
rcll
xor
repnz
mov
arpl
mov
xlat
adc
jns
push
inc
adc
mov
pop
ss
jp
mov
push
cmc
xor
cs
out
mov
nop
je
ds
mov
mov
jo
stos
cltd
lret
xor
out
in
or
pop
popf
mov
lods
scas
jp
pop
inc
jbe
imul
mov
pop
sbb
insl
mov
dec
fwait
lahf
xchg
jg
in
aad
mov
mov
push
mov
lods
sbb
xchg
jecxz
fyl2xp1
xchg
sub
sub
push
subl
ljmp
into
push
outsb
and
lods
imul
mov
push
adc
dec
ljmp
icebp
lds
mov
jae
cli
cmp
jp
je
mov
mov
push
imul
jmp
mov
mov
jo
testl
in
mov
jno
inc
push
jl
repnz
lcall
imul
xchg
cs
stc
or
cltd
jnp
nop
call
mov
ss
jmp
icebp
cwtl
mov
pop
lcall
pop
mov
push
jp
lods
test
xor
out
stos
fists
nop
lods
mov
into
add
lods
or
sub
shll
faddp
roll
or
fldl
cwtl
sub
xchg
ja
mov
sbb
xor
cli
dec
inc
jno
or
cmp
mov
jecxz
fistl
stc
je
xor
cs
dec
out
stos
xor
inc
xor
cltd
mov
cmp
dec
lret
ljmp
js
dec
lock
aad
xor
push
push
lock
pop
fwait
push
idiv
addr16
sub
cs
int
fbstp
cmp
addr16
cmpl
mov
idivb
adc
ja
jns
xchg
jne
popa
mov
push
clc
cmp
arpl
nop
gs
push
js
jb
arpl
lcall
push
lods
bound
fyl2x
mov
push
cmc
sbb
pop
daa
or
push
ret
cs
xchg
push
mov
lret
sbb
inc
ficompl
pop
shl
jp
test
push
idivl
je
loopne
mov
test
fwait
push
mov
scas
arpl
je
cmc
fldcw
iret
stc
divb
sarl
aaa
xchg
or
or
fbstp
scas
pop
je
scas
sub
aas
int3
sahf
lods
stos
out
insl
ja
sbb
fistl
dec
ss
int
fwait
mov
sbb
push
dec
adc
fwait
adc
arpl
outsl
xor
das
stos
sub
cltd
adc
sub
arpl
stos
cmp
adc
cmc
rorl
jae
js
or
jb
pop
dec
addr16
sti
icebp
icebp
adc
sub
divb
mov
daa
iret
leave
cmp
xor
jb
push
hlt
stc
lods
cltd
jo
movq
sbb
dec
sbb
jp
mov
adc
jbe
mov
out
cmpsb
nop
push
dec
out
push
push
mov
out
mov
xor
scas
pop
cmp
jno
or
dec
pop
rcr
fstpt
cmp
mov
shrb
mov
xor
test
jnp
lods
pop
jae
xor
jmp
icebp
mov
imul
mov
pop
cmp
cmc
xor
pop
cmp
out
pop
into
mov
sti
adc
cwtl
icebp
repnz
mov
push
hlt
jo
push
dec
mov
jmp
ret
mov
xchg
cmc
movsl
sbb
cmp
fsubrs
push
jne
fisttpl
fisttpll
mov
xlat
cmp
jns
xchg
aam
mov
stos
cmpsb
cmp
mov
jno
lods
mov
aad
mov
arpl
jno
outsb
lods
icebp
mov
jmp
jns
je
pop
push
xchg
adc
sbb
mov
in
jb
sbb
xor
imul
add
sub
ss
hlt
stc
xor
jb
jbe
xor
outsl
xor
lcall
jbe
xor
mov
js
pop
jp
outsl
cwtl
sti
mov
arpl
xor
mov
sub
scas
cmp
arpl
xlat
cmp
jbe
cmp
in
scas
sbb
das
mov
jecxz
jecxz
push
xor
dec
jecxz
sti
mov
mov
cmp
cmp
xor
xchg
mov
lret
mov
mov
add
push
fwait
pop
mov
dec
shll
pop
sub
pop
pop
inc
xor
cmc
ja
imul
sahf
adc
push
xchg
mov
fidivl
sbb
xchg
enter
or
mov
daa
out
stc
mov
icebp
arpl
loope
jp
in
sub
cmp
sti
adc
push
outsb
push
das
aam
not
notb
cmpsl
dec
sub
mov
pop
xor
mov
aad
ja
sti
fldcw
dec
out
cltd
imul
mov
sarl
jbe
xchg
lods
in
jnp
and
stc
daa
imul
in
imul
cmp
sbb
aaa
mov
in
xlat
mov
dec
pop
fisttps
cltd
loope
push
dec
int
pop
addr16
imul
mov
sti
xlat
pop
mov
push
xor
sbb
cmpsb
into
shll
outsb
into
scas
mov
dec
fstpt
addr16
test
btl
fisubrl
aad
push
pop
ljmp
sub
xchg
mov
pop
adc
pop
dec
xchg
or
push
pop
scas
xor
dec
pop
adc
fwait
sub
sarb
rorl
insb
dec
popa
repz
xor
or
fwait
lds
in
add
cli
add
push
mov
inc
xchg
out
lret
dec
pop
and
mov
scas
xchg
mov
sti
sbb
out
aad
movsb
int
sti
shrb
arpl
adc
pusha
insb
push
repnz
dec
jnp
clc
push
xchg
jbe
stos
fisubl
xor
scas
mov
fnstenv
push
scas
hlt
cli
movb
ss
test
mov
lods
adc
enter
lret
imul
fbstp
cmp
nop
jecxz
push
dec
push
fwait
dec
or
dec
test
cmp
cmp
lea
push
idivb
sbb
inc
in
mov
xchg
mov
ja
inc
arpl
pop
cmp
jmp
fwait
mov
mov
outsb
rcl
push
xorl
jb
jmp
xchg
repnz
push
sbb
mov
sub
aaa
aam
nop
lock
mov
sbb
sub
cmp
test
jno
fisubl
dec
dec
mov
cmpl
ja
pop
jns
dec
push
sbb
shrl
push
jmp
lock
aam
out
movsl
cmpsl
jmp
cmc
push
fwait
jmp
loopne
cli
push
dec
push
stos
jmp
or
pop
pop
rorb
xchg
adc
cltd
inc
xor
clc
stc
cmp
jns
or
dec
cwtl
jmp
fisubl
rcrb
cli
mov
mov
lret
insl
in
aaa
xchg
or
jb
idivb
lea
and
mov
ja
bound
lcall
add
xor
jb
inc
imull
aad
mov
xchg
sbb
cmp
fwait
cli
pop
xor
jbe
outsl
scas
fistl
mov
repz
outsb
jbe
push
lcall
outsb
mov
mov
pop
negb
xlat
cwtl
dec
adc
xchg
in
sub
mov
xchg
je
push
sub
fwait
scas
or
shrb
dec
push
fstpt
jmp
fldcw
sub
jb
jb
lock
aad
mov
stc
je
dec
mov
cli
aaa
mov
mov
dec
dec
jb
pushf
cmp
icebp
das
iret
scas
mov
outsb
jp
aaa
fwait
push
lcall
xor
imul
test
dec
xorb
sbb
pop
xor
hlt
cmp
sub
test
insb
xor
imul
daa
sarb
scas
cmp
lcall
xchg
scas
lahf
frstor
or
ss
push
mov
jbe
shlb
xor
adc
xchg
lahf
imull
repnz
clc
ss
cmp
jb
pop
mov
add
pop
cmp
cmp
or
hlt
je
repnz
neg
mov
xchg
mov
pop
rclb
adc
push
dec
dec
lods
inc
ja
aaa
stos
jmp
in
push
sbb
push
jb
push
mov
and
aaa
dec
mov
jecxz
mov
push
test
jmp
dec
rcl
mov
out
arpl
cmp
shll
mov
nop
lcall
testb
inc
mov
filds
xchg
mov
push
or
pop
insb
js
cli
stos
and
mov
lcall
pop
push
jb
adc
mov
push
xor
stos
xchg
in
jb
adc
push
lret
mov
arpl
jnp
jns
jb
push
pop
push
insb
add
push
xlat
cmp
ljmp
mov
icebp
pushf
xchg
add
jecxz
push
adc
push
xor
adc
cltd
jo
mov
adc
lret
pusha
mov
push
mov
dec
scas
cmp
jae
push
xchg
mov
sbb
mov
pop
lods
mov
xor
shl
js
lods
xor
jecxz
ret
adc
sub
stc
aam
aad
stos
jmp
int
stos
stc
scas
cmp
cltd
aaa
mov
cwtl
sbb
sub
jecxz
pop
sub
movsl
jae
xor
pop
leave
cmpsl
mov
push
pop
paddusw
sub
mov
dec
sti
outsl
jne
jmp
outsb
in
cmpsb
mov
div
jns
out
xlat
ficompl
insb
fisttpl
jmp
cld
fucomi
dec
push
dec
jns
scas
cmp
jmp
adc
xor
mov
jge,pt
insl
mov
pop
sbb
arpl
cmp
insb
mov
or
aaa
push
data16
loope
icebp
lret
xchg
loope
jmp
jecxz
push
iret
in
stc
fldt
lret
shrb
iret
divl
jo
and
outsb
cmp
cltd
mov
out
xchg
ja
jmp
lock
cmpsl
hlt
mov
lahf
cmc
pop
mov
in
jne
cmp
push
lcall
js
scas
pop
aaa
mov
imul
jb
negb
ss
xor
stos
jle
xlat
das
mov
shlb
pop
inc
aaa
imul
pushf
xchg
cmp
mov
mov
adc
sub
sub
mov
insb
cmp
in
ss
lds
sti
icebp
jmp
repnz
dec
or
js
ljmp
jno
push
int
sbb
sub
add
push
xor
cmp
xlat
mov
xchg
lds
jb
xchg
aas
xor
xchg
sub
stos
das
sub
pop
hlt
iret
xor
mov
jp
daa
sbb
fsts
cmp
mov
xor
dec
mov
cmp
mov
addr16
ds
scas
mov
outsl
clc
jle
aas
mov
push
sub
lods
mov
jp
cmpsb
fistl
pop
popf
fsubrl
mov
je
inc
mov
cli
lcall
or
sub
lods
ds
pop
scas
bound
cmp
dec
mov
scas
jmp
stos
fwait
dec
dec
jns
fwait
mov
pop
cmp
xor
or
scas
mov
pop
scas
xchg
in
mov
cmpsb
xor
xchg
mov
sahf
ss
pop
enter
xchg
lcall
pop
push
cwtl
movsb
fwait
lock
shll
xchg
push
cmp
notb
or
arpl
imul
xor
pop
jecxz
sub
or
das
loope
mov
test
jmp
and
xor
cmp
sti
daa
mov
lock
cs
arpl
notb
push
dec
icebp
in
lock
out
jne
xlat
leave
sahf
pop
mov
sbb
idivl
stos
fsubrl
jbe
push
sarb
jmp
repnz
xor
xor
cmp
pop
out
mov
push
nop
aaa
mov
test
xchg
mov
shrl
orb
repz
mov
xchg
xor
mov
scas
mov
mov
das
cs
hlt
xor
test
sbb
dec
insb
xor
pop
cmp
scas
out
mov
sbb
in
sti
dec
xor
adc
dec
cltd
jbe
pop
icebp
mov
cwtl
outsb
jae
mov
jmp
dec
je
mov
cmc
xor
dec
mov
dec
mov
inc
in
stc
pop
scas
push
xor
aad
mov
pop
sti
jp
shrl
xor
mov
lcall
sbb
jnp
xor
pop
fstps
push
xor
pop
mov
outsb
sarb
cmp
jno
jmp
xchg
fcomps
xchg
adc
push
push
fadd
jne
aaa
dec
cmp
sub
iretw
pop
imul
dec
jno
mov
cltd
xor
movsl
xor
push
hlt
dec
cmc
sub
pushf
mov
sbb
sbb
add
xchg
sbb
push
sti
stc
cmp
lret
sub
xor
cmp
pop
cwtl
sti
and
jns
mov
inc
fwait
push
negl
fwait
jae
or
andb
xchg
sub
pop
cmp
pop
mov
mov
fwait
mov
xchg
xchg
jns
sub
sub
shlb
add
cmp
mov
fwait
sub
mov
cmp
pop
jmp
cli
jmp
or
jns
into
sti
cmp
fwait
xchg
out
lahf
iret
lock
ret
add
fwait
ljmp
out
mov
cmc
jp
jno
add
push
sub
cmp
push
cmp
mov
test
rorb
stos
loope
pop
dec
ljmp
mov
mov
jle
adc
pop
and
adc
imul
cli
xchg
xchg
push
mov
cltd
or
test
cmpsb
dec
aad
jle
jns
lret
dec
test
cmp
mov
sub
test
mov
or
subl
sub
sub
add
pop
sub
mov
cmp
js
dec
cmp
repnz
jecxz
mov
cmp
sbb
fwait
icebp
mulb
dec
pop
cs
mov
imul
es
stos
push
inc
mov
lret
and
jne
sub
inc
hlt
cwtl
sub
sub
repz
fwait
or
imul
push
daa
shl
lock
xchg
mov
cmp
test
ljmp
fwait
dec
or
mov
adc
sub
push
sub
cs
inc
repnz
jns
lcall
xchg
and
jae
push
pop
pop
adc
cmpsl
mov
mov
fwait
sub
cmp
ret
push
cmc
xor
aaa
jns
out
jb
sub
mov
fwait
lods
ljmp
sbb
jns
or
pop
mov
aad
fwait
xchg
push
pop
repz
fwait
jb
mov
pop
lods
dec
pop
jns
fwait
push
cmp
fwait
mov
fcmovu
jp
dec
shrb
cwtl
stos
cmp
sti
sti
rcrl
popa
jo
ljmp
jbe
cli
fildll
fwait
mov
mov
push
jns
sub
cmp
fwait
enter
or
mov
push
sarl
out
fwait
outsb
push
ret
mov
sub
push
aam
sbb
xor
sub
dec
and
mov
mov
lods
sub
add
shrl
js
push
sub
cmp
jb
pop
pusha
xor
fcom
scas
insb
or
push
push
xchg
fsubrs
and
pop
fwait
mov
js
ljmp
aas
xor
sub
xchg
inc
imul
xchg
or
imul
adc
push
mov
cmp
cmp
andb
sub
xchg
popa
cwtl
mov
or
mov
dec
insl
or
mov
sub
repz
fwait
jbe
imul
cmp
popa
fwait
xlat
push
mov
nop
bound
cmpsb
cmp
repz
mov
cmp
or
repz
mov
mov
negl
stos
cmp
inc
cwtl
sti
xor
gs
dec
xchg
fwait
sti
imul
push
nop
mov
ficoml
pop
sub
pop
pop
sti
pushf
push
rclb
js
sbb
sub
mov
test
dec
adc
mov
cwtl
dec
sti
cmpsb
pop
fwait
jmp
xchg
cmp
out
insb
cmp
xchg
or
dec
in
iret
push
or
icebp
mov
popf
sub
test
sbbl
in
mov
mov
into
add
stc
sarl
scas
scas
mov
mov
aaa
sub
in
sub
jns
mov
mov
and
outsb
cmpl
fwait
idiv
sbb
mov
jne
div
cli
sbb
loopne
fdivr
mov
scas
jne
jecxz
push
sbb
jbe
shrb
adc
or
and
cwtl
cmp
xchg
mov
sbb
dec
push
data16
adc
mov
mov
out
test
mov
mov
sbb
lods
mov
imulb
sbb
clc
inc
fistpl
cmp
adc
into
test
sub
adc
sub
or
dec
mov
rcrl
pop
lds
in
sbb
push
adc
aad
xchg
daa
clc
pop
aad
mov
mov
mov
sub
aam
insb
test
pop
das
jo
cmpsb
mov
mov
pop
int
lods
sbb
stos
stc
lds
dec
dec
adc
out
das
pop
sbb
jp
mov
dec
mov
jmp
fwait
cmp
stc
mov
sbb
repnz
fstps
cmpsb
xor
mov
insb
mov
jecxz
cmp
dec
xor
stc
xor
push
shl
jae
mov
mov
jmp
fidivs
mov
mov
mov
xor
aad
mov
hlt
adc
cmp
and
push
stos
imul
loop
push
jp
adc
pop
dec
dec
sub
mov
mov
cmp
divl
sub
mov
mov
sbb
mov
test
mov
sti
pusha
lcall
mov
mov
sbb
jge
jecxz
in
jne
in
xchg
loope
pop
test
mov
dec
out
mov
out
hlt
pop
mov
mov
push
push
push
repz
stc
rcl
stc
test
sbbb
dec
dec
sbb
sub
sub
jp
idivl
sub
sub
xchg
jmp
mov
mov
test
movsl
jno
inc
pop
das
clc
adc
cwtl
jmp
pushf
sbb
aas
mov
sarl
sti
movsb
xchg
test
add
loope
push
jmp
jno
mov
test
pop
jmp
mov
aam
push
pop
hlt
mov
cmc
pop
lds
xor
mov
mov
jecxz
pop
je
push
aaa
inc
movb
aam
movsl
mov
pop
mov
adc
repz
jnp
inc
mov
decl
jg
mov
sub
sbb
sub
cld
jmp
es
fisubrl
cmp
pusha
rcr
inc
sbb
loop
ja
pusha
insl
xor
stos
push
fldl
mov
jp
jle
xchg
mov
cmp
add
ja
inc
mov
fcoms
imul
xor
jae
outsb
mov
push
in
js
mov
popf
dec
xchg
pushf
les
dec
xchg
lods
cmp
cmp
daa
out
negl
pop
cmc
cmp
mov
stos
sbb
lret
hlt
stc
daa
or
and
mov
xchg
mov
pop
insl
jmp
pop
outsb
mov
outsl
jecxz
pop
jo
icebp
divl
repnz
jb
repz
hlt
pop
je
cmc
divl
negb
mov
ja
clc
pop
js
stc
idivl
cli
pop
mov
sti
pop
mov
ja
jecxz
pop
insb
mov
insl
pop
out
mov
out
jecxz
pop
lock
jno
mov
repz
je
mov
div
aaa
bound
mov
jp
mov
push
out
jmp
mov
xor
mov
xor
xor
idivl
bound
pop
stc
cmpsl
mov
addr16
jmp
bound
mov
cmpsl
xchg
jecxz
pop
idivl
pop
aaa
mov
pop
jecxz
pop
jbe
notw
inc
pop
mov
cmpsb
xchg
jecxz
pop
idivb
adc
inc
adc
inc
adc
pop
in
jmp
mov
mov
movsb
mov
test
hlt
pop
in
aam
jne
mov
xor
ret
lods
push
pop
fmull
mov
mov
adc
ret
lods
push
pop
fmull
mov
mov
insl
push
out
aas
cmc
inc
mov
out
leave
inc
cmc
cmp
xchg
xchg
cmp
pop
push
call
mov
xchg
or
lods
pop
xor
rcrl
rcrb
je
inc
lock
add
jmp
jl
inc
les
ret
xorb
inc
add
bound
push
cmp
lods
js
call
dec
mov
out
test
mov
sub
test
sti
xchg
testl
notl
notl
xchg
sti
xchg
dec
mulb
out
xchg
lods
cmpsb
push
mov
inc
cmp
xchg
jbe
pop
out
pop
lods
daa
push
aaa
call
xchg
dec
mull
out
xchg
lods
cmpsl
push
mov
sub
jnp
icebp
lfs
je
insl
sub
or
xchg
push
daa
aam
pop
out
and
push
sub
push
jmp
xor
sti
xlat
xchg
cmc
sbb
cmc
mov
mov
cmc
in
pop
mov
mov
daa
loope
cltd
mov
mov
sahf
mov
fidivs
inc
fdivrs
lods
adc
push
enter
inc
xchg
jmp
test
or
cwtl
jp
adc
dec
jno
xorb
jp
cs
sbb
mov
pop
jp
mov
popa
or
and
lcall
add
lea
inc
sub
lods
jbe
dec
repnz
or
jecxz
pop
hlt
mov
mov
mul
fcompl
mov
jl
jp
mov
cmp
das
idivl
xor
mov
pop
jecxz
pop
insb
mov
hlt
pop
or
insb
lret
mov
mov
jo
fstpl
mov
jge
sti
mov
insb
ja
popf
jecxz
pop
lods
mov
scas
pop
dec
mov
pop
jecxz
pop
insl
mov
aaa
pop
push
mov
push
jecxz
pop
cs
sub
scas
into
pop
xor
pop
mov
jle
xor
mov
mov
mov
dec
insb
ja
pop
jecxz
pop
outsb
mov
mov
movzwl
pop
jecxz
pop
das
mov
negl
mov
jp
out
pop
sub
mov
pop
outsb
mov
mov
scas
pop
mov
aas
mov
inc
aas
cli
dec
pop
push
imul
xor
add
mov
and
mov
cmp
rcrb
shl
cmp
jp
fwait
pop
lock
and
pop
nop
mov
jne
mov
jbe
jecxz
pop
push
pop
lods
stos
mov
jo
outsl
and
adc
scas
aas
cs
mov
or
lock
lods
pop
movsb
xor
enter
cmpsl
cwtl
add
fwait
cs
sysret
mov
push
push
cli
xchg
cmp
pop
mov
bnd
jg
and
cmp
in
pusha
insl
cmp
outsb
dec
std
aas
stc
mov
add
insb
xor
cli
sbb
js
das
pushf
nop
mov
dec
jno
mov
into
and
repnz
jmp
scas
in
mov
cltd
mov
or
push
push
idivl
insl
popa
sub
jnp
mov
nop
pop
outsb
mov
pusha
add
scas
ja
mov
dec
jns
lea
jbe
xchg
pusha
mov
mov
subl
insl
mov
lahf
adc
and
nop
dec
pop
fst
xchg
jns
xor
fucomip
mov
xchg
push
jns
roll
jb
sbb
bound
mov
mov
cmp
aam
sar
adc
jle
cltd
data16
cmp
mov
rorb
arpl
icebp
mov
hlt
das
lods
call
jne
or
cmp
shlb
shl
mov
dec
pop
inc
outsb
mov
outsl
mov
cmp
jecxz
sbb
jno
xlat
mov
aam
jbe
jns
mov
mov
cmp
outsl
divl
ja
ds
mov
xor
lea
sti
sbb
mov
and
xlat
notb
xor
movsl
hlt
jmp
lods
inc
or
mov
jae
mov
fsts
movsl
jne
adc
clc
sbb
xor
adc
mov
hlt
mov
mov
push
insl
bnd
mov
xchg
dec
and
mov
pop
std
test
in
fwait
mov
scas
jbe
insb
scas
dec
push
cmp
pop
mov
sbb
xor
hlt
jb
ficompl
xor
push
push
fcomp
jno
push
sti
jp
dec
pop
mov
dec
pop
cwtl
cmp
xchg
xlat
sbb
pop
and
test
imul
xor
repz
xor
and
push
mov
dec
loope
int
cli
inc
dec
jle
lea
pusha
insb
aas
mov
js
push
sbbb
out
shll
jg
jns
jns
shrb
inc
xor
jns
popa
push
out
mov
cmp
movntq
int
pusha
xor
xor
mov
mov
xor
sbb
ficompl
js
push
leave
pop
mov
lock
xor
mov
mov
jns
push
fwait
mov
mov
out
push
cmp
inc
cwtl
push
cmp
hlt
ret
iret
in
sub
lock
js
dec
mov
cli
adc
std
dec
aaa
out
outsb
lahf
dec
das
pusha
icebp
jns
push
loopne
sub
negb
sbb
int3
fists
push
inc
popf
pop
inc
sar
ds
cmp
cmp
sahf
aas
mov
push
shlb
mov
int
in
mov
mov
jle
cmp
outsl
mov
push
rcrb
sti
push
push
leave
mov
jns
jp
dec
addb
js
sub
mov
mov
repz
add
jbe
inc
vpackuswb
sahf
ffreep
xchg
jne
mov
jp
mov
mov
andb
out
xor
pop
jno
inc
sahf
popf
cmpsl
jne
in
dec
repz
out
xchg
xor
popa
jb
ss
or
repnz
mov
insl
mov
ja
out
mov
sub
fnstcw
insl
fildll
cmp
mov
mov
je,pt
int3
dec
shrl
xchg
sub
jb
jne
push
add
sub
scas
lahf
xor
test
mov
aad
imul
xor
cmp
cli
mov
mov
sti
divl
bound
pop
push
mov
jne
gs
push
cltd
pop
data16
or
ljmp
jae
hlt
bound
mov
div
pop
mov
xchg
out
jp
sti
mov
sbb
sti
dec
xor
loopne
dec
xor
mov
inc
lret
push
jp
inc
mov
mov
in
cmp
cmp
sahf
sbb
jmp
or
nop
mov
lcall
pop
mov
add
jp
cli
out
jmp
xchg
cli
cmp
jns
js
out
out
dec
das
xlat
jg
pusha
icebp
mov
push
sti
clc
fisubl
js
sti
push
movsl
stc
xor
pop
jns
jp
mov
xor
mov
dec
sti
push
cmc
pop
pop
jp
pop
in
push
ja
scas
outsb
lret
push
in
xor
pop
insl
outsb
jp
je
out
sti
mov
outsb
sti
movsl
dec
out
out
pop
outsl
dec
xor
lock
add
xchg
icebp
inc
ja
jo
jno
movsl
jne
repnz
js
push
clc
out
lods
jns
daa
sub
jb
pusha
hlt
fcompp
jp
push
jno
je
data16
mov
clc
pop
jo
idiv
jbe
pop
int
out
js
shlb
arpl
cs
or
xchg
mov
jns
insl
outsl
push
nop
push
aaa
dec
das
mov
jle
gs
stc
repnz
sar
fldt
shll
cmp
out
jmp
popa
ja
fistl
ja
cmp
hlt
popa
xor
mov
sbbb
pop
push
mov
jp
dec
jp
je
dec
dec
fstpt
mull
cs
mov
jae
insl
ja
scas
shr
sti
jp
push
into
ja
push
add
and
incl
or
mov
dec
div
sti
sbb
lods
out
jb
das
in
jle
dec
dec
push
stc
pop
js
fwait
jmp
jle
push
outsb
mov
jbe
xchg
sbb
stc
imul
divb
mov
aaa
sti
cmp
lods
ja
scas
fucomip
imul
out
loop
mov
das
stc
imul
mov
out
mov
lods
ljmp
in
imul
imul
out
imul
mov
sub
mov
mov
imul
adc
sub
mov
outsb
pop
out
sbb
sbb
dec
mov
lods
jb
jae
cmp
mov
cmc
aaa
imul
or
push
jmp
jp
stos
cmc
hlt
out
lods
ljmp
repnz
pop
xor
push
out
jmp
rep
mov
stc
cs
ljmp
sbb
insb
ss
sub
jle
int
add
ss
pop
ss
scas
int
dec
lock
out
pop
inc
and
and
inc
jle
das
xor
jb
inc
mov
gs
lcall
cli
out
jecxz
push
negb
adc
adc
dec
push
xlat
jb
gs
enter
jmp
cmpsb
stos
cmp
scas
iret
xor
lret
dec
xor
inc
xor
imul
andb
push
inc
xchg
cmp
iret
lods
outsb
jnp
out
jge
mov
lea
scas
dec
adc
jae
inc
das
mov
adc
pxor
shlb
jo
dec
cmp
in
movsl
adc
scas
xor
iret
jg
pop
mov
fadd
rorb
lea
popa
adcl
in
inc
outsl
mov
idivb
and
out
lret
in
mov
cmp
outsb
lods
push
pusha
popf
adc
das
popf
xchg
cmc
notl
movsl
test
jecxz
add
adc
subb
mov
in
stc
push
aas
dec
dec
pop
ljmp
add
iret
ds
add
mov
cmc
movsl
in
mov
lock
nop
out
add
add
jp
clc
add
pusha
dec
xor
xchg
xchg
ds
leave
lcall
out
sub
sti
pop
mov
js
scas
cltd
mov
cmp
pop
fdivs
repz
sbb
outsl
sbb
and
jb
push
ja
pop
lcall
mov
sub
in
cmp
xor
in
nop
jp
push
mov
push
ret
jne
rclb
pusha
xchg
rdpmc
lods
clc
cmpb
stos
push
rolb
ss
fdivrl
stc
push
aad
insb
in
sub
sbb
mov
popa
inc
mov
push
mov
pop
out
xchg
adcl
cmp
out
aam
jo
xchg
jb
jbe
mov
je
clc
out
push
divb
mov
dec
jb
or
fnstsw
je
mov
adc
hlt
ret
push
pop
pop
int
incl
mov
iret
jl
mov
mov
stc
shll
imul
lods
jmp
inc
push
jle
dec
dec
xchg
jns
int
mov
push
stc
int3
fsts
inc
in
divl
mov
movsb
out
jle
sahf
mov
insb
ljmp
pop
push
xor
mov
out
nop
imul
mov
das
jbe
lods
aas
add
push
add
lods
repz
pop
jl
icebp
jp
jns
push
fcoms
out
popa
pop
cmp
int
int3
ljmp
xor
out
adc
call
outsb
lods
fcmovu
mov
in
nop
lods
in
pop
lods
mov
aaa
jmp
ja
push
shrb
movsb
imul
xchg
xchg
shrb
movsl
xchg
ljmp
dec
mov
cli
and
dec
int
outsb
ja
lods
jmp
mov
fmul
out
sub
dec
decl
cmp
cmpsb
adc
out
sarb
sbb
push
pop
push
cmp
test
xchg
aam
scas
pop
and
mov
jb
jb
fmull
idivl
imul
aaa
add
push
cli
dec
leave
pop
inc
and
fnsave
daa
dec
aam
xor
mov
pushf
gs
je
mov
stc
sbb
andl
out
xchg
cwtl
cmp
adc
pop
mov
test
jmp
scas
or
fsts
repnz
jae
cmpsl
mov
idivl
jbe
push
dec
nop
ja
test
dec
sbb
mov
in
mov
int3
dec
fidivl
push
pop
xor
stc
mov
addr16
inc
icebp
jg
xchg
out
aaa
daa
jnp
pop
jbe
push
inc
mov
stos
xchg
xchg
out
add
in
sub
mov
call
adc
ljmp
push
inc
mov
jo
sub
mov
gs
inc
xchg
xor
cmpsl
push
jp
pushf
stc
test
cwtl
mov
cmp
ror
js
movsb
enter
cltd
lcall
icebp
je
enter
push
movsl
dec
sub
clc
gs
jge
jne
es
hlt
movsl
mov
push
add
jns
xor
push
pop
dec
cmpsb
pop
mov
push
out
rolb
sbb
movsl
outsl
in
addl
jo
cmp
mov
aad
jp
sub
leave
imul
mov
gs
push
fwait
out
neg
pop
daa
dec
inc
or
or
sbb
shr
out
cmpsb
out
mov
out
ds
stc
xchg
push
cmp
pop
dec
cltd
xchg
out
sbb
pop
imul
or
sub
je
mov
mov
sahf
xor
push
mov
pop
imul
jno
jp
mov
in
les
mov
loope
jnp
pop
nop
les
imul
mov
sbb
lcall
cltd
dec
xchg
clc
jmp
pop
ljmp
push
test
push
outsb
jmp
arpl
dec
pop
loop,pn
jmp
shr
jb
aam
xchg
xor
jmp
scas
ljmp
divl
jns
mov
push
jmp
aaa
cmpsb
lods
push
das
jmp
ljmp
jo
repz
mov
mov
jecxz
pop
js
idivl
sti
pop
int3
mov
sub
dec
in
dec
push
jmp
pop
ljmp
pop
icebp
mov
xor
mov
loope
stc
mov
jp
sub
pop
dec
xchg
in
push
jmp
aas
mov
push
jmp
ljmp
jecxz
pop
pushf
mov
mov
mov
jl
cmp
imul
out
jmp
mov
ljmp
inc
lock
pop
ljmp
mov
jo
xor
pop
xor
inc
xchg
scas
cmp
xorl
movsb
test
or
mov
jns
je
push
repnz
mov
rolb
fs
xor
test
add
xlat
repz
jecxz
xor
sar
pusha
pusha
rorb
js
sub
push
mov
pop
xchg
mov
js
cmc
fsts
mov
mov
cmc
ds
xor
jns
call
out
push
shlb
mov
fsubs
jns
dec
call
or
rcrb
mov
push
mov
jg
cmp
scas
fistl
jle
nop
divl
jge
lea
jle
mov
xor
jne
fldt
cmp
mov
loopne
xchg
mov
mov
adc
divb
ficoml
lea
cmc
jns
repz
push
loopne
pusha
sahf
outsb
aad
sarl
pop
cwtl
dec
push
pop
in
jns
push
divl
pop
test
mov
sub
ja
lods
jmp
jmp
aas
cmp
jbe
sar
hlt
mov
lcall
pop
jp
jno
adc
pop
and
in
sub
inc
lock
insl
idiv
hlt
loop
dec
mov
lret
fisubl
mov
je
adc
and
flds
jns
outsl
not
dec
pop
fisubl
icebp
pop
jecxz
add
xor
mov
cmp
nop
imulb
mov
mov
scas
fnstenv
xchg
cmpsb
daa
pop
mulb
jo
jb
add
cmc
pop
dec
mov
push
jae
mov
shlb
cmc
adc
inc
inc
icebp
outsl
sbb
push
shrl
dec
mov
sahf
push
mov
cwtl
xchg
cmp
xor
dec
cltd
jge
mov
cmpsb
rol
sti
pop
je
repz
xor
mov
dec
pop
mov
mov
nop
push
in
jns
lock
addr16
cmpsl
push
gs
dec
mov
out
xchg
jb
std
mov
jns
mov
jns
push
shlb
cs
jno
das
out
iret
dec
pop
loop
pusha
int
xor
aas
jbe
xor
negb
sub
mov
adc
jno
jbe
je
adc
aam
adc
addr16
jae
jp
push
fistpl
mov
pop
sub
fs
jae
fistps
js
cmp
inc
xor
push
cmp
fcos
call
mov
inc
inc
pop
cmpsl
cmpsl
movsl
pusha
push
aad
ficoml
xorps
ja
js
je
jmp
dec
push
mov
fisubrl
mov
sub
iret
pusha
xor
push
iret
dec
jl
jne
adc
dec
aaa
mov
fldl
mov
dec
or
adc
push
mov
out
sahf
or
imul
xchg
xchg
jne
hlt
fdivr
pop
rcrb
xchg
dec
jns
dec
int
or
dec
sbb
jecxz
jns
inc
inc
das
xor
jl
mov
xor
nop
mov
jecxz
icebp
and
sarl
rcrb
mov
nop
scas
cmp
jmp
pop
repz
das
in
pop
adc
dec
xor
inc
out
pop
aaa
mov
jp
dec
push
jmp
imull
mov
xor
lods
stc
arpl
pop
outsl
mov
nop
pop
divl
pop
jp
into
mov
mov
shlb
mov
hlt
shl
scas
nop
mov
int3
jg
aaa
out
out
mov
incl
mov
test
or
push
inc
lcall
mov
push
mov
fwait
cli
fldenv
jns
testl
neg
scas
int3
pop
out
aaa
sub
addl
pop
sbb
fildl
cmp
jbe
mov
mov
sti
repz
outsb
pusha
icebp
ror
pop
rolb
sbb
out
jp
outsb
popa
lcall
cmp
cltd
cwtl
jnp
in
mov
das
push
mov
mov
scas
fwait
sub
jo
mov
push
aad
jo
imull
sub
sbb
in
jno
lods
dec
xor
cmc
notb
mov
xlat
insb
mov
jecxz
cmp
in
in
push
stc
mov
mov
push
jp
push
jns
jnp
mov
aas
sbb
mov
test
xor
or
xor
cmpsl
clc
fdivl
mov
out
add
nop
jmp
xchg
push
out
mov
mov
ficoml
sbb
inc
addr16
dec
gs
inc
add
push
cmp
jns
mov
xchg
mov
mov
jbe
ret
add
jnp
jns
movsl
adc
in
mov
push
mov
jmp
fldenv
pop
xchg
mov
in
xchg
cwtl
xchg
ret
notl
into
cmp
sbb
hlt
pop
idivl
xor
sub
jmp
mov
dec
xor
loopne
mov
iret
movsb
je
test
and
pop
decb
cmpsl
aaa
cmpsl
inc
mov
xlat
sbb
shl
adc
fcoml
jmp
sub
xchg
jns
idivb
sub
movsl
mov
rclb
cmp
insb
inc
xchg
test
inc
in
cmpsb
push
push
push
test
clc
in
add
mov
or
mov
in
je
xchg
mull
xchg
ljmp
call
xchg
movsb
test
jp
xchg
in
push
push
cmc
jg
je
cmp
xor
fisubl
mov
es
mov
fsubrl
sbb
push
cmp
dec
adc
dec
int
push
xchg
xor
inc
adc
pop
cli
nop
jb
sahf
sti
add
adc
xor
cmpsb
sbb
xchg
inc
and
inc
stc
shrl
pop
xchg
mov
mov
mov
out
sti
mov
je
scas
mov
fwait
and
mov
mov
push
jno
xchg
in
adc
xor
pop
mov
shr
sub
push
repz
enter
out
aad
jecxz
stos
popf
scas
aad
pusha
push
mov
pop
and
js
insb
out
jmp
bound
out
mov
icebp
jecxz
pop
repz
ss
aaa
mov
mov
add
jp
sbb
ljmp
imul
jge
push
sti
cmp
in
daa
ja
push
scas
jp
jg
sti
sbb
adc
mov
mov
cmp
mov
mov
and
sti
jp
movsbl
jge
sti
sbb
es
ja
adc
mov
inc
adc
xchg
cli
sti
xor
cmc
mov
fstp
repz
jmp
loop
mov
push
jae
mov
leave
outsl
fistl
adc
and
aad
inc
mov
out
lock
jmp
jo
inc
test
and
sti
mov
outsl
sbb
mov
xchg
and
fldt
adc
sti
mov
jp
mov
mov
pop
cmp
mov
mov
jle
btc
jae
cmp
jp
mov
pop
arpl
decb
js
ja
aas
xchg
push
jp
call
aas
and
cli
and
jae
shll
push
mov
push
mov
push
pop
jle
aam
mov
popa
lret
mov
inc
in
mov
push
and
lret
outsb
mov
cmc
testb
and
es
dec
out
lock
cmp
js
mov
hlt
mov
xchg
lock
xchg
test
jp
sub
mov
jbe
mov
mov
add
lahf
dec
cmpsl
mov
das
jns
lock
pop
cmpsl
xor
dec
mov
scas
sub
pusha
jns
pop
push
push
lods
add
movsb
xchg
insb
ss
nop
jbe
inc
test
jb
push
mov
pop
pop
movq
js
outsl
inc
cmp
adc
repz
xchg
gs
aas
mov
jb
push
mov
pop
das
cmp
loope
dec
pop
sahf
inc
mov
jns
pop
fnstcw
fists
inc
mov
scas
inc
popa
arpl
movl
sub
or
sub
mov
stos
mov
or
popa
or
aam
clc
pop
jae
enter
mov
cltd
fsubrs
aaa
xor
cli
mov
push
cli
jno
gs
or
cli
dec
xchg
cmc
cwtl
jbe
mov
push
movsb
inc
push
cmc
out
dec
mov
je
test
loopne
xor
jmp
scas
jno
inc
and
or
test
lods
mov
jl
and
test
movsl
cli
icebp
xchg
cmp
sarl
outsb
push
cwtl
jbe
cmpsb
out
js
scas
jle
cmp
jbe
fisubs
aaa
pop
jbe
addr16
pop
xchg
jl
aam
aaa
dec
mov
inc
add
xchg
daa
cs
mov
movsl
stc
out
pop
xor
sbb
gs
shrb
testl
inc
xor
jne
adc
gs
je
push
test
jb
repz
jae
sbb
repnz
or
call
or
mov
cmpsl
add
jns
and
push
stos
inc
cmpsl
and
xor
add
mov
mov
stos
jae
idivb
cmp
rcrb
mov
scas
dec
pusha
sti
mov
fildl
lahf
ja
inc
out
in
mov
je
repnz
pop
inc
mov
jns
jbe
lea
gs
push
lret
jecxz
jecxz
aad
and
pop
js
fxch
inc
cmc
in
nop
or
inc
les
mov
je
jnp
imull
movsl
adc
xor
cmp
push
popa
subl
add
nop
ja
clc
bound
loope
mov
insb
in
inc
xchg
jmp
inc
jnp
mov
inc
pop
dec
mov
sti
mov
in
lahf
mov
xchg
lret
icebp
xchg
cs
je
mov
hlt
pop
aaa
lods
push
loopne
int3
add
out
push
adc
push
add
loope
xchg
lret
subl
sub
cmc
cli
jmp
xchg
jmp
and
jns
jbe
jmp
jmp
inc
fs
loopne
outsl
cmc
mov
pop
lret
lret
js
sarl
mov
jo
sbb
push
jo
jmp
and
loope
insb
pop
cmpsl
js
and
jns
aam
jns
pop
inc
das
dec
cmp
jae
movsb
xchg
cmp
lret
lods
and
jp
imul
movsl
aam
repz
pop
inc
movl
inc
sbbl
movsl
nop
vmread
js
popa
out
and
jb
movsb
cmc
push
insb
mov
lcall
jns
neg
fcmovb
mov
add
sbb
insl
loope
inc
outsb
scas
lods
xor
dec
movsl
mov
sbb
jae
jns
add
inc
pop
mov
adc
jae
sti
lret
add
aam
mov
cmpsl
xchg
out
inc
xlat
jbe
jns
sbb
ret
jb
mov
je
jns
enter
fists
jl
jecxz
cmpsl
push
je
in
fistl
js
cwtl
out
mov
ficoms
xor
mov
loop
mov
loope
test
imul
jecxz
pop
or
int3
mov
jno
jns
insl
scas
jnp
fadds
push
xchg
mov
inc
cmp
fldpi
punpckhdq
popf
push
outsl
data16
cmp
jp
xor
icebp
into
in
sti
xchg
pop
std
sub
jl
cli
mov
int3
push
daa
lds
xor
push
loopne
push
cmp
mov
mov
sbb
nop
or
jns
push
movsb
inc
in
push
popf
ja
pop
nop
insl
aas
cmpsb
or
repnz
inc
jmp
jecxz
xchg
push
outsb
imul
sbb
je
clc
movsb
andb
xchg
and
pop
je
push
divl
repnz
mov
mov
xor
and
jge
sti
xchg
stc
jns
or
inc
ljmp
lods
and
repnz
stos
pop
lcall
mov
sbb
idivl
outsb
imul
jmp
jno
push
jno
jp
cmpsl
adcb
add
jae
sbb
or
sti
out
adc
divb
ss
div
mov
ja
clc
mov
stc
jecxz
pop
jp
sti
mov
ret
bound
jecxz
pop
insl
mov
scas
pop
outsb
mov
scas
jecxz
pop
jo
icebp
pop
js
mov
mov
xor
je
jecxz
pop
ss
clc
pop
subl
dec
aaa
sti
mov
mov
jmp
mov
jmp
fstpt
jb
dec
lcall
idivb
mov
mov
test
jp
cmp
inc
jbe
jmp
sti
iret
xchg
out
xor
loop
and
idivl
mov
js
jae
mov
loop
push
aaa
jns
adc
negl
mov
adc
jmp
iret
xorb
pop
jns
clc
cli
mov
dec
imul
mov
mov
dec
jne
in
imul
outsl
arpl
insl
sub
jp
adc
das
icebp
gs
call
out
adc
arpl
push
iret
mov
out
nop
cmp
lods
mov
mov
lds
popa
icebp
jg
into
push
cmp
sub
outsl
ds
push
insl
ja
push
push
outsl
lret
loop
sub
mov
pop
sti
call
lods
jb
bound
sbb
dec
jb
hlt
fsubrs
insl
pop
mov
ja
jp
mov
stc
add
jbe
adc
mov
xor
out
cmp
xchg
hlt
jbe
cmp
out
push
lock
repz
and
pop
jno
cmc
lret
mov
sti
jecxz
push
xor
mov
out
pop
sub
cmp
stc
cld
testl
mov
cld
add
fldt
loopne
xchg
fs
sub
insl
js
jl
inc
imul
ljmp
pop
dec
movsl
hlt
je
ja
idivl
and
push
jmp
cmpsl
nop
push
jne
repz
cmc
imul
mov
ljmp
adc
cmp
dec
dec
mov
lods
jbe
lock
scas
bnd
pop
cli
scas
out
push
bound
pop
dec
mov
imul
mov
sub
pop
or
pop
stos
mov
jb
pop
mov
jns
repz
cmp
hlt
pop
stos
mov
cmp
cmc
pop
ljmp
cli
jecxz
pop
lcall
pop
pop
mov
dec
jecxz
pop
mov
sahf
xchg
fucomip
ds
std
add
and
push
jmp
mov
xor
js
xlat
push
leave
mov
addr16
mov
repz
out
loope
imul
out
enter
mov
jmp
add
negb
or
mov
push
pop
push
mov
in
adc
sarb
mulps
out
jecxz
pop
xchg
mov
push
pop
xorb
int
pop
mov
enter
pop
aam
adc
xchg
rcrb
mov
fsub
or
sbb
push
fucomip
xlat
mov
inc
pop
and
pop
or
pop
testl
push
mov
es
sbb
repz
jno
jp
je
jno
push
js
xor
pop
loope
push
into
sbb
stc
popa
push
je
xchg
mov
inc
pop
cmpsl
arpl
pop
imul
pop
out
pop
push
inc
cmp
ret
imul
jbe
push
mov
lea
pop
mov
xchg
insl
imul
in
xor
rclb
rcr
stos
jns
fwait
jns
sub
es
mov
subb
pop
popf
jbe
mov
testb
add
repnz
dec
cmpsb
popf
jb
jp
mov
enter
repz
pop
test
pop
dec
mov
daa
mov
mov
imul
jecxz
pop
ja
out
dec
push
pop
arpl
cli
mov
add
mov
pop
sub
leave
pop
ja
repz
stos
je
sti
mov
jo
aas
or
stc
jae
xchg
repnz
imul
sti
popa
sbb
ds
outsl
jns
adc
and
es
test
ljmp
jle
inc
sbb
adc
add
sbb
add
sub
sahf
xchg
cld
out
add
insl
xor
jnp
filds
xor
lds
je
insl
xor
jnp
adc
fsubl
mov
inc
popa
lea
or
stc
jp
shr
adc
int3
dec
mov
icebp
pop
xlat
aam
mov
jg
sbb
adc
cmp
mov
cmp
mull
idivb
lods
addl
push
sbb
sub
push
cld
lods
xchg
jnp
popa
jns
mov
xor
ret
jns
test
mov
cmp
or
push
out
ja
jae
aaa
ffreep
jnp
jns
pop
push
jne
test
pop
das
mov
pop
fs
jle
je
stos
in
outsl
mov
imul
adcb
jnp,pt
movsl
ljmp
pop
dec
outsb
or
xchg
jb
lahf
xorl
and
mov
xor
popf
mov
aas
dec
sbb
pcmpgtw
shrl
imul
adc
push
insl
inc
enter
pop
mov
push
test
mov
call
incl
outsl
mov
xor
aam
jae
out
adc
mov
pop
rolb
jle
or
imul
mov
negl
mov
int
icebp
fldlg2
and
xor
xor
push
cmpsb
sbb
fwait
das
dec
imul
sub
int3
fdivrs
aam
test
jnp
imul
xorb
jle
cs
lret
in
cmp
mov
jnp
mov
sbb
dec
cmp
outsl
pop
or
call
xchg
into
mov
pop
dec
cmc
push
jnp
adcl
jnp
test
mov
pextrw
jne
out
mov
jnp
dec
and
in
sbb
jnp
repz
xchg
add
inc
pop
cli
pop
movsl
push
sbb
add
push
jnp
add
dec
out
mov
fstpt
stos
jl
pop
xchg
sbb
sti
or
mov
insl
aam
jne
xor
mov
add
loopne
jge
xchg
dec
loop
inc
mov
ret
jge
stos
mov
and
mov
add
bound
cs
xchg
gs
loopne
jge
push
dec
push
inc
inc
mov
inc
mov
cmpsb
lret
inc
push
hlt
pop
pusha
push
cltd
jae
in
mov
mov
fistl
test
jmp
sub
adc
lcall
sti
add
call
js
lea
shrb
push
sub
adc
fcmovne
jp
inc
sti
cmp
outsl
inc
sbb
cmp
or
data16
cmp
popf
xchg
and
movsl
mov
push
mov
xor
sahf
mov
mov
xchg
ljmp
dec
mov
lcall
add
clc
cli
je
jbe
sbb
ljmp
es
cmp
xor
mov
mov
mov
pop
cmp
mov
mov
les
jns
lcall
dec
xchg
jmp
mov
fcmovnbe
ja
mov
repnz
in
mov
lock
mov
pop
pushf
jne
dec
stos
sti
jmp
dec
mov
fidivrl
cmp
jmp
cmp
inc
notb
dec
sbb
pop
xchg
lods
mov
push
mov
js
adc
push
cmp
mov
sbb
mov
sub
adc
ficompl
imul
call
add
sub
xchg
bound
jp
mov
out
pusha
adc
mov
aas
push
stos
je
or
push
cmc
popa
xchg
clc
sti
and
out
push
addr16
mov
daa
cwtl
sti
sbb
jmp
push
pop
pop
bound
dec
mov
push
ja
push
repz
sbb
sub
xor
mov
test
aam
repz
xor
outsl
insb
pop
add
inc
mov
nop
jnp
add
cmp
clc
test
pushl
movb
call
pushf
dec
clc
push
mov
shl
not
mov
not
call
mov
xchg
int
fs
sub
pusha
inc
xorb
inc
jo
lock
jmp
shl
pusha
push
pop
sahf
sahf
cmp
scas
and
aas
repz
add
dec
jnp
test
fwait
adc
stos
dec
jmp
js
mov
stos
pusha
pop
push
cld
dec
por
fadds
xchg
ja
sbb
mov
mov
daa
xorl
inc
dec
je
call
and
sub
in
fiadds
stos
lock
out
mov
std
repz
lds
push
into
mov
imul
and
pop
ja
roll
aam
aad
lret
adc
mov
mov
out
subl
movsl
aam
mov
outsb
aam
mov
dec
adc
mov
stos
ficomps
push
xchg
xor
mov
jnp
daa
lea
dec
jge
dec
jnp
pop
mov
mov
xor
stos
decl
push
pop
jl
pusha
out
fs
jl
pop
push
repnz
inc
dec
mov
xchg
aam
dec
mov
xor
lret
ror
clc
repnz
ret
lock
shrb
push
pop
and
fdivl
fsubrs
test
mov
aam
les
bound
repnz
mov
out
xchg
mov
sti
push
inc
mov
arpl
or
insb
js
js
inc
sbb
inc
jecxz
jns
and
cmp
and
add
xor
or
out
inc
dec
jne
mov
pop
in
xor
adc
push
imul
ja
imul
rorl
pushf
sarl
sti
inc
pop
pusha
mov
push
fstpl
cmc
adc
loop
movsb
mov
inc
push
in
cmp
pop
wbinvd
and
fiadds
and
dec
mov
fildll
inc
sub
add
push
push
sub
xchg
mov
dec
cmc
stos
std
or
cmp
push
mov
inc
dec
adc
and
jae
push
xor
jmp
mov
gs
xchg
mov
xorb
push
movsb
xchg
pop
xor
scas
cli
or
popa
lret
add
mov
in
inc
ja
push
in
ja
int
iret
xchg
mov
cmp
dec
push
ror
mov
inc
cmp
in
cmp
inc
push
lock
cmp
xor
fsubrl
mov
setge
jne
pop
jmp
fbld
popa
xlat
out
inc
dec
decb
sub
xor
adc
and
xor
add
or
pushf
xor
cmp
std
shl
cmc
fidivs
xchg
test
repz
sbb
call
mov
out
sub
pusha
out
cli
fsubrp
cld
mov
xor
inc
sbb
sti
std
cltd
aas
jno
mov
xorb
sub
stos
mov
call
cmp
mov
or
enter
loopne
lock
inc
dec
and
les
mov
jmp
fs
jne
sbb
bt
dec
jmp
dec
jnp
inc
icebp
stos
std
adc
add
aas
and
sub
mov
ds
xchg
mov
jae
xchg
enter
and
lcall
adc
xchg
scas
lds
pop
aaa
test
inc
loopne
or
imul
pop
cmc
sbb
cmp
jo
filds
repnz
and
cmp
test
pop
lea
mov
insb
sbb
mov
mov
psubusw
js
mov
rolb
out
inc
dec
fsubl
mov
stos
sarl
test
insb
sbb
inc
rcr
push
push
lock
sbb
push
push
pop
imul
push
fs
inc
jo
stc
push
in
push
loop
pop
xchg
enter
xor
mov
push
inc
int3
dec
jb
inc
or
bnd
push
int
imul
push
rcr
pusha
outsb
fsubl
inc
loopne
adc
adc
mov
ret
xchg
adc
xchg
daa
leave
ja
out
inc
dec
jge
imul
imul
jle
cmpsb
nop
lcall
jle
in
in
aad
je
out
mov
imul
repnz
into
aam
mov
mov
std
lret
jns
imul
inc
movsl
orl
adc
aam
cmp
jns
sti
inc
sti
cmp
cmp
xchg
sbb
int
adc
cwtl
sbb
mov
jg
inc
xchg
loop
mov
lahf
test
sbb
in
cmp
xor
inc
dec
and
shll
mov
xchg
jmp
int
shrl
cmc
xor
fimull
scas
lods
lock
lret
dec
fists
add
popa
mov
pop
fisubrl
xor
adcl
sub
mov
mov
push
mov
mov
push
mov
push
adc
frstor
mov
stc
imul
pushf
sbb
cld
scas
cli
in
jg
arpl
xchg
sbb
loope
mov
push
iret
or
lea
popf
daa
xchg
out
inc
dec
cmp
les
mov
or
pop
push
pusha
pop
fs
insb
pop
push
mov
mov
xchg
jmp
shll
cmpsl
sub
pusha
cmp
out
jmp
xchg
insl
mov
aaa
insl
cmp
add
dec
add
pop
clc
loopne
xor
loope
hlt
mov
in
clc
repnz
lret
dec
dec
inc
dec
fidivrs
stos
add
push
outsb
inc
into
dec
jo
js
pusha
or
pop
repnz
out
dec
repnz
inc
dec
and
into
in
fucomp
popa
fdivl
mov
jne
push
inc
gs
dec
inc
dec
pop
leave
dec
add
sub
pop
fs
push
or
push
pop
cmp
test
addb
btr
cwtl
adc
xorl
scas
lahf
mov
repnz
push
cmpsb
push
movsb
pop
loope
sbb
out
loop
or
nop
or
pop
imul
or
add
inc
push
lods
xor
pop
jle
adc
into
lahf
fbstp
leave
ror
pop
sbb
xor
or
adc
inc
dec
add
mov
jl
inc
iret
xchg
mov
jo
andb
mov
nop
or
sub
dec
subb
push
sbb
mov
iret
adc
jb
xor
rcl
or
cli
mov
arpl
push
cmovbe
xor
mov
lret
inc
sbb
mov
loop
out
ljmp
cs
add
and
xor
fsubl
push
pop
js
pop
push
push
push
sbb
inc
ret
push
jnp
aam
les
fstpl
mov
and
sub
pusha
out
imul
insl
jle
scas
jecxz
out
adc
inc
sub
outsl
or
pop
lret
cmpsb
add
lods
cmpsb
xchg
pop
popf
shll
mov
xchg
ds
push
movsb
inc
mov
jo
pusha
ret
out
inc
push
fsubs
std
lods
mov
aas
insl
and
dec
mov
lock
clc
out
mov
call
loop
add
or
mov
adc
or
roll
mov
mov
fistps
cmp
push
jg
mov
stos
cmpsl
jmp
rol
sti
ficoml
loope
fnstcw
pop
sti
out
sbb
mov
pop
jl
pop
ret
dec
js
fdiv
cmp
js
icebp
imul
adc
js
inc
das
push
push
jnp
sti
dec
pop
jnp
arpl
mov
imul
dec
std
ja
xchg
add
stos
adc
bound
inc
in
mov
xlat
sbb
shlb
aam
adc
mov
popa
cs
nop
imul
jns
ja
in
imul
sti
push
loopne
inc
jmp
popa
push
shlb
mov
pop
sbb
scas
cmp
jp
pop
pop
mov
gs
aad
addr16
lea
inc
faddl
pop
xlat
add
lahf
inc
sbb
ret
push
ret
test
push
sti
jbe
lods
sub
popf
mov
ret
add
jb
pop
in
inc
push
or
dec
mov
mov
cmc
fbstp
outsb
pop
sti
jbe
or
rclb
les
push
insl
stos
test
outsl
push
pop
and
push
cmp
adc
ret
dec
rcll
xchg
es
push
bound
sarb
dec
mov
push
jae
mov
pushf
push
sub
bt
movw
bt
ror
jmp
std
push
clc
pushw
popfw
mov
push
pushf
inc
push
jmp
jmp
mov
test
mulb
dec
push
outsl
jge
sbb
imul
sbb
icebp
lret
sub
aam
jns
pop
push
sbb
jb
enter
jns
test
sarl
das
cs
inc
bound
lret
lahf
call
daa
xchg
movsb
enter
test
jbe
fs
movsl
mov
dec
sarb
mov
cmpl
jne
inc
xlat
out
inc
push
std
sti
shlb
xchg
scas
jg
outsl
pop
push
jl
pop
jle
push
inc
jp
inc
in
and
pop
mov
and
out
in
add
lea
out
inc
cmp
xchg
jnp
and
cltd
int
and
mov
xchg
xor
test
mov
leave
movsl
repnz
add
xor
jge
and
inc
sbb
inc
repnz
fs
inc
ljmp
push
aad
pop
outsb
inc
inc
inc
sti
push
das
cmpsb
imul
cmp
sub
add
mov
test
xchg
leave
cmp
pop
inc
pop
dec
sub
imul
pusha
and
test
add
and
xchg
jb
out
cmp
inc
test
push
popf
aad
cmpsl
xor
test
repnz
jl
clc
mov
push
mov
add
fcomp
dec
add
je
push
cli
inc
pop
ljmp
mov
lods
call
not
pusha
stos
setb
setle
jmp
mov
sar
insl
fiaddl
push
xchg
mov
lea
sbb
movsl
xor
mov
std
nop
pop
fistps
adc
cs
dec
stc
xchg
mov
movsb
mov
cmc
push
ds
out
jle
ja
es
dec
sbb
pusha
mov
arpl
push
push
out
into
ret
scas
or
sub
jge
mov
pop
out
inc
push
mov
add
fs
imul
add
jp
jle
pop
test
movsl
aad
out
ffree
sbb
pop
add
jp
xchg
sub
hlt
outsl
nop
mov
lret
add
sahf
rolb
ret
loope
mov
fidivl
scas
cli
insb
or
jmp
xchg
push
lods
ret
push
jmp
pop
dec
and
rolb
icebp
push
sbb
aam
mov
dec
dec
inc
outsl
out
mov
stc
mov
xor
push
sbb
sub
fdiv
movl
fsubrs
in
inc
les
pop
call
xchg
arpl
stos
mov
cltd
nop
ljmp
and
adc
scas
adc
mov
push
sti
cmp
gs
gs
lods
push
mov
repz
arpl
stc
dec
loop
out
scas
or
xchg
and
pushf
mov
xchg
or
adc
std
std
loope
sub
shl
iret
xchg
test
fstpt
dec
shll
sub
out
inc
push
sbb
idiv
ror
mov
push
push
stc
cmpb
call
pusha
lea
jb
push
cmpb
lea
ja
pushf
pusha
lea
jne
mov
inc
not
mov
cmp
pushf
bt
clc
add
pusha
call
aad
mov
lds
pop
arpl
inc
jge
dec
arpl
inc
jge
mov
clc
pop
lds
sbb
loop
loop
mov
adc
cmp
adc
ret
mov
push
std
mov
push
aad
jne
ja
mov
jecxz
enter
xor
ds
sub
xlat
pop
adc
das
gs
sbb
sarb
adc
or
dec
dec
cli
lahf
sub
jecxz
incl
jge
mov
lret
out
inc
push
cli
add
je
jne
in
inc
in
inc
xchg
jmp
in
jmp
repz
cmp
and
inc
in
push
and
pushf
inc
repnz
sbb
or
mov
jg
jns
pushl
popa
xchg
in
xchg
xlat
xchg
sub
movsl
lods
mov
cmp
adc
stos
mov
push
out
stos
pushf
rolb
push
inc
adc
test
fimuls
sahf
test
pop
fmuls
mov
xchg
or
pusha
mov
stos
mov
mov
neg
cmc
cmp
jmp
nop
ror
jb
les
ficomps
lahf
popf
xchg
leave
xchg
pop
addl
ds
idiv
in
push
jne
in
scas
sub
mov
mov
pop
fcoms
hlt
aam
push
pop
int3
dec
test
mov
xchg
scas
mov
orl
jo,pt
lock
hlt
sahf
xlat
add
add
mov
data16
clc
inc
enter
cltd
or
je
dec
js
pop
call
mov
mov
cmp
insb
inc
xlat
popa
in
or
xchg
and
adc
inc
les
outsb
fsubr
inc
pop
add
loopne
inc
and
dec
mov
and
pusha
pushf
lea
jmp
leave
cli
in
movsb
js
ja
mov
pushf
mov
mov
xor
aad
pusha
inc
clc
push
fs
sbb
inc
ja
mov
sti
mov
push
xchg
cmp
mov
fistpll
or
or
ret
fstl
inc
ss
aam
int3
xchg
imul
xor
aaa
or
push
and
pop
stc
push
xlat
pop
adcl
mov
pop
movsl
sqrtps
pop
sti
dec
out
inc
pop
out
or
dec
pop
outsb
rcl
mov
in
gs
imul
inc
popf
xchg
shlb
mov
mov
mov
or
push
popf
popa
add
dec
call
push
push
int3
push
push
aam
int3
jb
loopne
add
inc
pop
push
out
cli
cmp
fisubl
sbb
mov
nop
stos
popf
mov
sub
call
xor
out
test
insb
shld
fs
addr16
cwtl
xchg
lahf
push
jb
pop
cli
adc
nop
cmp
push
lahf
push
pop
xorl
subb
fsubrp
int
fdivrl
inc
out
lret
inc
imulb
cs
inc
pop
clc
or
xor
pushf
call
pusha
pushl
lea
je
cmc
clc
or
call
out
cli
les
xchg
or
push
or
dec
dec
test
cwtl
scas
mov
int3
or
push
xchg
arpl
inc
mov
cmp
out
imul
iret
jl
inc
das
out
scas
in
mov
stos
subb
xchg
lahf
popf
xchg
dec
pop
divl
test
pop
in
mov
pop
jmp
add
popf
daa
xchg
jle
jmp
shrl
jmp
mov
xorl
out
inc
pop
cmp
rorl
add
xor
lea
jae
jmp
jmp
pop
sub
push
movsb
int
shr
mov
mov
mov
pop
int3
dec
or
dec
ja
lret
add
or
xchg
pop
lahf
lods
aam
fcompl
nop
push
adc
sbb
or
adc
pop
sahf
sbb
xor
cld
jbe
xchg
insb
into
mov
bound
leave
add
adc
lea
aaa
lea
out
inc
pop
fstps
jmp
add
insl
imul
jo
gs
jb
dec
gs
fs
sbb
or
daa
loop
sbb
lcall
mov
adc
lds
testl
fs
rorl
jle
jnp
test
cld
icebp
mov
cld
xchg
movsl
dec
pop
adc
mov
ss
cli
pusha
adc
push
inc
out
jl
not
fldt
insl
cmp
or
test
ljmp
stos
fsubrs
filds
add
das
fistpl
inc
jmp
pop
in
std
mov
fcoml
aaa
pusha
pusha
test
add
pushl
lea
jne
setge
mov
pusha
pushfw
popw
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
scas
sub
add
roll
or
movsl
movsb
xchg
mov
repnz
imul
xchg
ficompl
mov
mov
xchg
push
andb
movsb
xor
das
cmpsb
daa
mov
imul
jns
pop
cltd
and
adc
or
lock
pop
pop
mov
pop
xchg
inc
mov
jl
push
xor
xor
fidivrl
push
dec
loopne
fidivrl
mov
clc
outsb
std
push
add
and
addr16
push
push
inc
fidivl
out
or
pushf
mov
inc
pop
and
stos
pop
xor
rolb
cwtl
sbb
inc
push
pop
insb
jb
jb
push
inc
jb
xchg
aad
cmp
int
and
xor
pop
movsb
xorl
xchg
adc
test
push
test
mov
fwait
cmc
shll
sub
dec
idivl
pop
jecxz
jmp
out
inc
pop
dec
rcrl
mov
sub
sub
cmp
pop
ret
add
dec
mov
ljmp
push
add
js
je
xchg
movsl
jmp
cmp
test
xchg
jecxz
test
jp
adcb
incl
mov
jb
iret
loopne
fcompl
imul
xchg
fs
ja
xchg
or
mov
jo
jb
pop
add
lds
sbb
mov
stos
dec
ret
dec
mov
mov
push
mov
push
test
mov
cmp
dec
out
inc
pop
pop
mov
cmp
and
sbb
repz
in
jae
pop
ljmp
adc
leave
js
mov
aaa
and
cmp
inc
xchg
inc
push
sbb
rorb
xchg
int
cmp
les
sbb
imul
pop
jne
inc
push
or
or
inc
pop
cmp
adc
xor
inc
pop
jl
dec
jae
lahf
outsb
and
out
out
faddl
or
sub
lock
clc
mov
cs
sbb
pop
dec
loope
cmpsl
mov
fcmovbe
clc
or
mov
out
sub
push
call
inc
ja
jmp
push
sbb
pop
dec
fimull
jp
jo
in
adc
mov
pop
out
mov
xor
sub
xor
in
xchg
or
jo
pusha
testb
push
mov
pop
jbe
mov
ljmp
ret
jmp
out
popf
fcomi
fucomip
push
in
xor
repz
cmpsb
mov
inc
inc
inc
rcrb
dec
push
jg
packssdw
jg
test
outsb
jecxz
fstpl
clc
xor
scas
dec
lods
mov
les
or
jp
mov
shr
repnz
rolb
mov
fildll
jle
dec
out
jle
sbb
xchg
sub
cmp
fwait
sbb
inc
pop
and
fcmovnu
dec
adc
mov
stos
xchg
or
cltd
xchg
mov
mov
xchg
xchg
sub
insb
js
or
xchg
and
pop
mov
sbb
pop
outsl
stc
into
mov
mov
inc
out
jp
inc
adc
cmp
cmp
scas
ds
insl
fs
das
cmp
bound
push
mov
popa
jno
mov
inc
mov
pop
aas
adc
xchg
sar
int3
outsb
rcrb
dec
nop
push
mov
or
xchg
fwait
xchg
in
iretw
loope
fnstsw
push
mov
cmp
shll
pop
roll
addr16
inc
pusha
mov
sub
call
pushf
clc
add
push
pushf
pushf
lea
jmp
jmp
data16
aas
cltd
and
inc
mov
mov
js
push
and
mov
or
pop
pop
orb
popf
push
mov
push
and
lock
add
or
pop
divl
sar
dec
sub
adc
push
lcall
dec
adc
xchg
adc
pop
mov
xchg
or
ret
out
lret
icebp
fistpl
or
sti
scas
mov
sbb
push
dec
or
inc
data16
inc
mov
imul
leave
mov
push
dec
jl
push
push
jp
lret
stos
xchg
inc
fsts
jmp
push
push
inc
cld
inc
push
add
out
mov
xor
ds
and
dec
push
leave
lock
mov
jmp
into
push
fidivrs
cli
push
into
nop
xor
cmp
ja
xor
or
pop
pop
push
jbe
jbe
bound
dec
push
push
sarb
mov
jmp
fnstsw
xor
xchg
sub
ds
std
xor
add
push
clc
jbe
cmpsl
out
scas
mov
dec
das
mov
jo
in
lds
stc
rorl
outsl
jo
push
les
ljmp
inc
ficompl
pop
push
nop
out
inc
popa
inc
mov
inc
sub
faddp
add
sbb
inc
cltd
pusha
mov
movl
pushl
pushf
mov
lea
jmp
inc
lea
jmp
in
mov
lods
data16
popa
das
adc
cmp
fxch
ret
jne
mov
cmp
pushf
dec
mov
imul
pop
lret
test
push
fldt
shl
mov
jg
imul
fcomps
mov
fldt
daa
xor
inc
popa
in
mov
pop
in
cli
push
sub
lock
rolb
add
xchg
and
mov
push
std
push
in
out
inc
bound
imul
sbb
add
push
cli
or
fs
insb
outsb
pop
inc
dec
jle
push
lcall
cmp
je
jnp
mov
xor
sbb
fisttpll
outsl
sbb
jnp
mov
add
arpl
mull
or
out
sbb
cld
loop
aam
dec
mov
lahf
sub
rol
incl
jmp
cmpsl
sub
jle
aam
mov
insl
or
sbb
out
inc
arpl
jg
out
xor
pop
pop
pop
sbb
sbb
or
aam
lock
dec
out
movsb
push
std
insb
pop
les
inc
les
fs
pop
fldcw
mov
rorb
call
dec
js
mov
repnz
out
ljmp
mov
or
sub
sub
shlb
pusha
cltd
xchg
mov
bound
rcrb
inc
bnd
push
fsubrp
inc
arpl
and
jnp
inc
stc
pushf
movl
pusha
pusha
pushf
push
lea
jmp
repz
pop
or
sub
jle
mov
mov
push
test
pop
sbb
jo
in
sbb
cltd
hlt
imul
mov
movsl
call
popa
add
jge
push
adc
movsb
pop
movsb
cld
mov
in
mov
jg
sub
push
mov
add
push
sbb
fwait
mov
cltd
mov
pop
iret
or
lret
jne
cld
xchg
test
or
push
out
out
inc
fs
gs
mov
sti
mov
loopne
push
inc
cmp
cmpsl
lea
xor
aas
jge
rcr
and
xchg
lret
roll
xor
lcall
xchg
mov
testb
mov
lea
nop
popl
bound
dec
jmp
pop
xor
loop
adc
shrb
xchg
mov
xor
rorb
call
inc
out
inc
outsb
mov
in
fnstenv
int
ret
aad
aad
leave
lret
sbb
xchg
outsb
xchg
lcall
rol
jne
scas
push
mov
cmpsb
lock
outsb
addb
add
jge
mov
dec
xor
lds
add
pop
hlt
scas
mov
xchg
aas
bound
adc
or
jmp
loop
cltd
mov
in
fstpl
subl
mov
insb
cli
inc
idivb
out
inc
gs
dec
dec
inc
push
dec
xor
cs
insb
add
std
xlat
pop
pushf
lea
jne
dec
btr
bts
xor
xor
mov
mov
and
sbb
add
jmp
stc
cmp
movzwl
lea
mov
jmp
xor
cmp
xlat
mov
movsb
lcall
mov
mov
sbb
sbb
mov
es
lahf
pop
cltd
sbb
xor
inc
jne
scas
adc
inc
out
cmp
cwtl
inc
jno
dec
pop
je
sarb
sbb
in
aad
xor
mov
fwait
pop
xchg
pop
mov
and
mov
xor
push
movsl
pusha
cmp
xor
or
or
push
mov
push
pushf
cmp
movb
mov
lea
ja
not
cmc
adc
sub
jmp
mov
ds
cmpl
nop
inc
dec
pop
push
pop
jo
loopne
mov
inc
mov
cmpsb
xchg
lock
enter
mov
sub
mov
or
imulb
pop
lret
jl
mov
lret
xor
push
cmp
push
jl
popf
aas
sahf
data16
fucomp
xor
inc
sti
dec
or
xchg
cmpsl
or
test
jno
mov
test
out
inc
data16
fwait
and
cmp
movsl
jl
jp
push
jl
inc
bound
jle
push
in
mov
jmp
loope
in
dec
mov
imul
lock
pop
jecxz
sarl
pop
push
xchg
and
push
cwtl
hlt
sub
fs
mov
repnz
repnz
cli
ljmp
fidivrs
jo
dec
shll
inc
push
cmp
jecxz
add
gs
jmp
inc
or
stos
mov
adc
lds
dec
std
pop
sarl
push
loope
inc
addr16
mov
push
pusha
call
cld
cmc
mov
xor
mov
lods
jb
inc
jle
pop
sub
into
je
test
data16
outsl
xor
ret
sub
scas
cmp
mov
fcompl
out
add
or
or
iret
push
pop
rorb
mov
pop
adc
in
fistpll
push
mov
push
inc
push
jne
roll
cmc
push
in
fnstsw
mov
xchg
push
mov
sbb
jecxz
jbe
dec
shll
arpl
lods
xor
arpl
aas
sub
imul
mov
test
lods
mov
push
hlt
int3
pop
in
inc
jg
adc
dec
rolb
add
sub
mov
sbb
hlt
inc
clc
imul
jle
jne
dec
pop
lahf
pop
ror
lcall
or
daa
inc
xor
add
rcrb
jb
push
rorb
dec
rorb
inc
push
mov
cmp
not
repnz
enter
clc
inc
call
lock
push
or
jmp
xor
mov
dec
sub
cmp
les
mov
inc
addr16
stos
out
mov
rorb
mov
sub
mov
sub
inc
add
adc
cmp
fwait
xchg
fisubl
rcpps
mov
std
push
dec
icebp
mov
sbb
addr16
cmp
fs
pusha
pop
fiaddl
push
popa
jne
cltd
pop
imul
lods
int
dec
mul
jmp
stc
cmpsl
loope
std
aas
adc
push
std
jno
or
dec
dec
mov
pop
inc
sbb
mov
inc
popa
shll
test
jmp
repz
jp
iret
push
inc
pop
adc
mov
jnp
pop
push
xor
cs
xlat
iret
in
fcoml
push
out
xchg
jne
mov
testl
sub
ficoml
pusha
js
pusha
lret
pop
out
inc
imul
dec
push
stos
mov
and
sbb
sub
cmp
sub
mov
popa
out
test
addb
imul
cwtl
ds
add
push
and
sub
pop
stc
xor
or
mov
xchg
aaa
in
xchg
aaa
pop
dec
and
fld
jnp
dec
inc
sub
stos
sub
addl
mov
cmp
inc
push
adc
jmp
add
add
ss
in
xor
add
jo
js
dec
pop
or
int3
bound
mov
call
adc
cmp
and
pop
add
adc
pop
in
sub
inc
dec
xor
sbb
add
addr16
bound
push
jmp
loope
pop
sti
inc
test
daa
lea
xor
or
fnstsw
jge
push
int3
xchg
cmp
and
push
stos
mov
jg
push
add
jmp
movsb
cmpsb
lock
sahf
mov
cwtl
mov
add
xor
shlb
and
int3
add
mov
incl
fcomp
enter
xchg
jp
sub
xor
mov
fisubrl
pop
mov
jb
add
pop
cld
jb
fcomi
xchg
and
add
pop
into
in
xchg
lret
lock
inc
sub
stos
mov
in
or
imul
cmp
cmp
roll
push
pusha
fisubrl
fs
je
dec
jo
push
out
inc
imul
sub
cli
stos
in
cmp
xor
xor
and
and
pop
mov
aad
cmp
out
mov
aas
mov
mov
add
cli
aas
xchg
sbb
shrb
cmp
jle
dec
push
inc
push
int
std
and
mov
mov
and
pusha
jb
ret
inc
mulb
jl
pop
jl
inc
insb
dec
mov
bt
pusha
clc
add
stc
bt
stc
jmp
dec
ds
test
mov
data16
pushw
inc
pop
sbb
push
cld
push
daa
es
jle
inc
mov
pop
jo
sbb
push
xor
mov
rcl
pop
frstor
fwait
push
repnz
fwait
cmovl
scas
int3
hlt
or
lea
dec
inc
jbe
bound
sbb
idivl
je
iret
daa
cmp
xor
add
ret
enter
jo
in
and
into
push
ficomps
out
fsubrp
inc
insb
push
idiv
call
lea
je
shrd
jmp
popa
dec
cmp
dec
imul
ljmp
call
loop
ss
inc
inc
cmp
movsb
jmp
ja
fdivs
popf
and
ljmp
xor
adc
into
inc
cld
push
mov
add
jl
pop
push
int
das
pop
jmp
pop
dec
sbb
mov
dec
ret
mov
icebp
jns
ficoml
andb
mov
cltd
aaa
mov
aaa
xchg
pop
push
shl
pop
enter
cmpxchg
lea
les
mov
or
jno
pop
xor
and
dec
or
pop
leave
out
sti
fstp
leave
out
fldt
stc
xor
add
cmp
sub
leave
xorb
jae
lret
jne
jp
cmpsb
sub
iret
popf
pop
inc
cmc
mov
fcmovnb
bound
test
popf
mov
inc
cs
or
mov
jp
xchg
insb
fld
hlt
or
fiaddl
mov
pop
fimull
pop
cld
jbe
pop
lock
nop
and
aad
adc
jnp
mov
das
stos
and
negl
push
out
inc
outsb
cmpb
fs
ja
push
pusha
pusha
lea
jb
call
adc
inc
jp
insl
and
cmc
fucomp
xor
sub
xchg
sub
mov
sbb
xlat
sbb
divl
dec
into
cltd
xchg
add
push
pushf
bnd
xchg
sub
mov
je
stc
pop
out
in
mov
test
sar
mov
les
push
pop
lret
xchg
iret
scas
ret
cmpb
adc
xor
sub
aam
shr
inc
insl
stc
in
xchg
mov
xlat
enter
mov
jns
sub
rcrl
ffreep
or
out
insb
mov
or
jge
addl
roll
sti
inc
cld
mov
or
pop
mov
xchg
outsl
cmc
dec
adc
sub
out
out
cld
mov
addb
js
je
pusha
ljmp
push
cmpb
call
jb
dec
xchg
xor
imul
lock
jp
fnsave
xchg
inc
loopne,pn
das
cmpsl
cmp
or
shlb
push
push
std
xor
js
fiaddl
jmp
cmp
add
ss
push
jecxz
cmp
loopne
xor
in
inc
inc
jns
push
imull
push
shll
dec
jecxz
sti
out
inc
outsl
ret
dec
push
push
pushf
lea
jae
and
shl
mov
jmp
mov
call
inc
push
jg
or
add
mov
mov
int3
xchg
test
add
stos
jne
xchg
bound
pop
xorb
ret
adc
xchg
lds
std
cmp
lahf
adc
into
cmc
xor
imul
cmc
dec
sahf
adc
push
jge
inc
cli
xchg
orb
push
lock
loopne
lock
fsubl
inc
jo
les
rolb
mov
mov
jecxz
repz
in
iret
inc
sti
mov
pop
dec
dec
ret
cli
or
addb
test
mov
movsb
sbb
jne
xchg
out
js
roll
cwtl
test
icebp
addr16
stos
and
ret
hlt
jbe
pop
clc
pop
adc
push
ret
adc
int3
dec
divb
push
lret
push
jl
test
inc
jo
int
sbb
nop
and
arpl
lock
fdivr
lock
ficompl
lods
das
adc
xlat
stos
pop
push
inc
lock
aad
lret
dec
mov
add
rorb
test
rcrl
jg
ds
xchg
inc
es
sub
mov
or
sub
mov
mov
jne
cmc
fistpl
popa
sti
push
call
inc
xlat
imul
mov
fs
ja
not
call
je
jno
sbb
lods
mov
fmul
in
out
lret
mov
sbb
mov
lods
insb
xchg
inc
sbb
mov
incl
adc
push
mov
cmp
insl
ret
xor
mov
add
adc
inc
and
mov
mov
cmp
cmp
mov
inc
jno
jns
adc
data16
rcrb
out
xchg
int3
ret
call
cmp
pop
jp
sar
sbb
outsl
leave
dec
pop
mov
sahf
xchg
stos
addr16
std
mov
inc
jge
inc
xchg
cmp
adcl
push
loope
shrl
push
xor
push
pop
push
mov
xor
sub
mov
jb
xor
inc
in
fildll
sarl
pop
fmull
dec
pusha
ret
dec
fiadds
out
inc
jb
and
movl
call
cmp
xor
clc
cmp
repnz
movb
jmp
adc
out
pop
sbb
pop
dec
jbe
inc
inc
outsb
inc
data16
mov
xchg
leave
outsl
jge
or
pop
or
sbbl
xor
stc
jge
cmp
out
repz
sbb
jbe
fsubrs
addr16
dec
stc
lret
test
mov
lock
rcrl
push
mov
fwait
cmp
xor
inc
out
inc
jb
mov
mov
push
popa
push
jno
jge
pop
ja
push
pop
addr16
xlat
imul
inc
fbld
sbb
out
icebp
out
rcrb
pop
or
push
dec
adc
mov
cmpsb
pop
add
mov
mov
xor
dec
mov
jge
inc
call
jne
out
inc
jae
sub
roll
addr16
loope
scas
pushf
ficomps
mov
movsb
jmp
mov
xchg
loope
stos
cmpsl
xor
xchg
dec
test
push
ljmp
sbb
test
fnsave
cmp
ret
xchg
repz
scas
sbb
aam
or
scas
cmp
js
sbb
push
mov
int3
push
fadds
dec
in
inc
clc
jle
pop
add
out
inc
jae
mov
and
inc
xor
jmp
jae
add
mov
cmp
popl
and
add
lods
jmp
lret
jmp
iret
test
add
test
xor
inc
ret
or
mov
cmpsb
enter
push
sbb
push
adc
fcompl
xchg
repz
clc
push
in
pop
movl
pop
adc
jae
or
add
repz
xchg
adc
inc
cmpsl
imul
out
inc
je
cmp
call
dec
fs
pop
les
popa
dec
pop
push
push
xor
pop
inc
jge
dec
mov
and
push
push
or
xchg
es
cmp
jb
and
fwait
cmp
lret
out
adc
inc
notl
push
push
and
xchg
bnd
jb
popl
loopne
jbe
inc
les
imul
mov
test
arpl
jmp
rcr
pop
roll
jge
popa
jmp
out
pop
test
mov
sub
test
mov
icebp
neg
shld
sar
add
rol
rcl
rcl
or
mov
pusha
add
test
test
mov
push
mov
shrd
push
mov
movw
pushf
call
adc
mov
xchg
push
shld
jmp
pushl
shl
pushf
push
seta
call
lea
jbe
rol
btr
bsr
bsf
sub
ror
bsr
mov
shl
mov
shrd
mov
movzbl
add
xor
shr
btr
shl
mov
neg
pushf
add
not
pusha
push
call
mov
xchg
dec
lds
cwtl
dec
mov
xchg
mov
movsl
mov
mov
arpl
inc
test
mov
pop
sbb
pop
or
pop
inc
push
adc
push
jb,pt
jbe
mov
adc
dec
clc
inc
inc
jbe
cmc
dec
push
or
pop
dec
js
dec
push
clc
adc
mov
hlt
mov
push
cmp
or
dec
inc
push
ss
adc
daa
cltd
sbb
or
inc
jbe
jmp
add
jg
sub
pop
or
pop
ja
gs
mov
xchg
mov
sub
sarb
jecxz
inc
hlt
movsb
test
ret
fisttpll
xchg
pop
not
pop
pop
or
pusha
insl
in
pop
add
xor
and
lret
fstpt
into
xchg
xchg
sbb
inc
mov
pop
in
inc
sbb
fisubrs
fstps
jno
push
xlat
inc
out
lret
xlat
and
inc
jbe
dec
jb
outsl
sub
int
in
loope
sub
in
jecxz
lret
cmc
jecxz
push
jmp
fnstsw
imul
push
js
ficomps
mov
push
pop
ds
mov
test
mov
mov
cmp
pop
sahf
mov
push
push
imul
aam
scas
xor
clc
push
jne
mov
cltd
dec
add
aaa
mov
and
repz
jae
add
loopew
pop
jmp
xchg
xchg
sarb
outsb
push
ljmp
mov
fisubl
dec
movzwl
bswap
mov
mov
bt
push
add
pushf
stc
cmc
mov
test
test
call
pop
sub
inc
test
in
cmp
outsb
inc
bound
dec
data16
push
scas
out
js
ss
and
test
mov
repnz
imul
iret
into
iret
lea
lret
mov
or
adc
push
xor
fldl
ss
repz
mov
push
inc
and
jns
lods
movsl
mov
int3
push
jbe
pop
pop
rorl
out
push
ffreep
dec
sbb
ss
nop
sub
inc
jge
jne
insl
testl
pop
shr
inc
js
popa
push
pushf
cmp
pushf
jmp
shr
es
push
negb
dec
je
push
jbe
inc
pusha
push
jl
push
pop
rolb
mov
dec
mov
cmp
std
idivl
aas
in
scas
pushl
dec
mov
jno
sbb
movl
pop
xor
xor
and
test
cli
xor
xchg
xor
test
mov
push
inc
int
pop
sub
mov
add
ret
xlat
lds
fsts
faddl
push
push
imul
sub
mov
js
push
dec
call
rol
pushf
lea
call
call
shl
shld
mov
mov
movzbl
mov
btc
mov
push
cmp
pushf
sub
cmc
sub
js
bt
repnz
call
lea
je
test
pushf
add
movl
cmp
cmp
pushf
call
mov
bound
int3
mov
cmp
sbb
or
mov
jns
push
sbb
adc
fs
int3
jge
cli
out
inc
jbe
fldt
dec
lds
jno
cli
int
jns
xorl
sti
cmc
mov
fs
cmp
adc
loop
adc
mov
sahf
cwtl
xchg
xor
lds
pop
out
pusha
xor
sub
mov
mov
iret
mov
fidivl
mov
ret
sti
jno
lea
xchg
aas
mov
cmp
sbb
pop
test
sub
inc
pop
int
sub
sub
cmp
xchg
cmp
xor
js
cli
add
addps
lret
loope
sub
into
test
pop
leave
push
shll
dec
mov
push
sub
cwtl
cmp
push
lret
add
dec
cld
out
inc
jp
aam
lcall
pop
jae
aaa
jmp
mov
test
mov
or
dec
outsl
int
in
fucomp
sbb
inc
adc
dec
loop
aam
gs
push
xorb
adc
push
cmpsb
jo
cld
dec
les
pop
fcoml
xor
neg
push
scas
fsts
push
roll
ds
out
inc
jp
sahf
xchg
xchg
dec
push
add
sti
sbb
dec
jns
dec
inc
inc
inc
push
outsl
sub
dec
stc
pop
adc
push
dec
or
data16
stos
das
cmpsl
or
push
outsl
shll
icebp
mov
xchg
rcrl
out
out
inc
or
out
xchg
test
mov
adc
jnp
push
arpl
in
push
add
jle
bt
sub
pushf
pushl
push
bt
ror
cmc
pushf
stc
xor
call
int3
pushf
xchg
push
jge
xchg
fcomip
shl
das
sbb
aas
lods
aas
jge
test
inc
mov
clc
fwait
push
stc
mov
loopne
test
xor
adc
pop
fbstp
frstor
pop
jns
jecxz
scas
mov
fstp
roll
cmp
out
adc
dec
icebp
and
in
insl
pop
mov
ja
shl
stc
xchg
repz
add
adc
ss
daa
loop
jae
das
push
add
push
inc
in
repnz
in
in
or
inc
pusha
mov
push
sbb
ret
or
cmp
fldl
sbb
addr16
es
ss
movsb
or
inc
jl
pop
inc
dec
insl
jnp
out
fwait
jb
pop
and
pop
sbb
clc
bnd
incb
xchg
pop
imul
stos
mov
jb
les
inc
lret
push
jmp
dec
cmp
mov
mov
and
pop
mov
sbb
dec
repnz
xor
ficomps
stos
mulb
ljmp
or
sbb
mov
push
test
pushf
and
fisubl
out
inc
jl
out
pushf
lret
mov
mov
jl
push
dec
push
dec
push
sub
xchg
cmpsl
mov
push
fmulp
push
mov
jno
test
shrb
jge
inc
push
add
clc
dec
repnz
and
xchg
enter
and
clc
inc
push
shlb
pop
scas
lret
in
dec
cmc
jae
dec
std
fldcw
fwait
adc
jne
and
sub
clc
add
bsr
rol
add
lea
sbb
stc
stc
xor
mov
pushf
stc
movb
stc
shr
stc
call
sbb
pop
hlt
movsl
movsb
jnp
sbb
fsub
fadds
adc
pusha
es
xor
movsb
push
push
iret
jo
imul
rcrl
jne
or
push
sub
xor
cltd
cmp
outsb
outsl
leave
leave
fidivrl
stc
inc
mov
mov
leave
shll
fidivs
xchg
xchg
mov
in
jo
ds
movsl
xchg
arpl
or
je
xchg
and
jge
in
mov
bts
mov
bt
clc
clc
cmp
cmpb
call
xchg
mov
out
mov
and
ror
shlb
data16
andl
mov
pop
inc
inc
jmp
test
push
roll
jb
jge
sbb
mov
aas
insl
jo
mov
sub
sub
inc
loope
fs
fldl
cmpl
mov
leave
jl
stos
fdivrs
xor
jmp
aas
dec
or
movsb
inc
in
push
xchg
pushf
ds
ret
push
cli
push
out
inc
jle
xor
push
sub
pushf
pushf
pushf
movb
rep
mov
pop
jmp
call
bt
sub
jmp
mov
bswap
movzbl
pushf
mov
mov
movb
pushl
ret
pusha
sbb
adc
push
pusha
imul
pop
sbbl
push
icebp
xlat
sbb
insl
sub
xchg
adc
into
call
mov
and
out
into
lret
cld
mov
mov
mov
xchg
mov
hlt
rorb
sub
scas
jecxz
shl
add
xchg
rcrl
mov
sarb
add
aaa
xchg
mov
in
sub
lcall
or
cmc
addr16
fcmovne
lret
sub
adc
add
data16
jp
bound
out
inc
jg
adc
call
or
adc
xor
std
ret
shr
int
lds
lret
adc
loopne
push
gs
imul
jp
fisttps
out
jmp
pushf
xchg
cmp
data16
fisubrl
fwait
cld
mov
in
lock
hlt
dec
ja
aas
imul
sub
and
popa
jecxz
insl
mov
pushf
cwtl
sub
ja
jns
ljmp
push
or
xchg
sub
inc
jg
test
and
xor
pushf
lea
call
test
clc
sub
pushf
jmp
es
jne
and
pop
pop
pop
inc
push
jne
popa
pop
dec
out
popa
mov
lret
inc
out
mov
repz
in
gs
push
fisubrs
add
mulb
bound
jl
pop
inc
adc
push
outsl
pop
rcrl
xchg
movsb
enter
hlt
mov
aaa
jnp
jge
insl
inc
push
fsts
icebp
int
cmp
cs
push
sub
insb
fsubs
into
jne
and
bound
nop
mov
or
movl
mov
add
addb
pop
add
test
scas
mov
int
in
repz
iret
fst
jns
mov
scas
fmull
pop
imul
aam
dec
mov
arpl
adc
push
sbb
push
xchg
out
lds
aas
lahf
mov
sub
repnz
or
sahf
mov
cmpsl
and
pusha
fcoml
inc
or
fwait
loope
mov
push
adc
aaa
adc
pop
adc
mov
ljmp
and
cs
add
push
int3
pop
in
lock
jp
out
inc
add
add
mov
sti
inc
jmp
jmp
aad
fmul
jl
adc
repnz
sti
pop
sbb
add
and
adc
jae
int
loop
add
aad
pop
fstl
leave
addr16
hlt
mov
or
push
aad
ffreep
xchg
cmpsb
das
je
sahf
arpl
pop
pop
test
sub
out
dec
movl
call
cmpsb
fmull
jne
in
and
mov
test
pusha
ss
sbb
cmp
lds
dec
lret
insb
xor
cltd
jecxz
jb
mov
sbb
mov
jge
add
mov
scas
xchg
push
xchg
dec
ficoms
mov
hlt
cltd
cmp
test
sbb
sbb
cld
je
mov
sahf
int3
adc
inc
adc
inc
icebp
jnp
jecxz
adc
dec
sub
int3
jl
loopne
imull
mov
sbb
pop
test
xchg
sbb
scas
cs
dec
icebp
bound
pop
out
imul
lock
loopne
aam
jb
jno
pop
sbb
mov
add
popf
xchg
ret
int
sarl
icebp
push
adc
add
sub
inc
jle
push
mov
enter
movsb
and
out
inc
adcb
test
js,pt
or
push
push
je
cmp
and
add
sub
jb
cmp
imul
leave
cli
inc
pop
add
dec
sbb
call
xlat
imul
shrb
push
pop
add
sbb
xchg
push
mov
pop
ret
les
out
rorb
mov
cwtl
ja
jne
and
test
and
aas
or
loope
cmpsb
sub
push
mov
jmp
or
mov
jg
dec
in
leave
imul
shr
sub
add
xor
repz
in
in
out
pop
sbb
sub
sbb
daa
xchg
sub
daa
test
pop
jne
aad
and
movsb
mov
imul
shlb
leave
sbbl
mov
enter
loope
cltd
std
inc
cmc
sbb
mov
sbbl
jmp
jg
inc
xor
ret
xchg
sub
sbb
xchg
rdmsr
or
mov
push
mov
repz
inc
roll
dec
out
xlat
pop
iret
jns
inc
mov
inc
xorl
push
pushf
stos
pushf
pushl
push
pushf
lea
jmp
xor
sbb
mov
jo
mov
cmpsb
mov
xorb
and
pop
jl
xchg
clc
jle
pop
das
nop
inc
outsl
shl
idivb
inc
sub
dec
mov
or
sti
call
cwtl
mov
shl
pop
pop
imul
xchg
shll
pop
pop
dec
in
dec
sub
sbb
push
sbb
pop
fstps
adc
repz
leave
arpl
adc
lret
jno
dec
xlat
icebp
aaa
out
inc
cmp
in
sbb
mov
cmc
mov
pop
dec
push
push
push
jb
pop
cld
pop
out
insl
daa
dec
jbe
sarl
jmp
test
cmp
dec
loopne
rolb
lods
ret
sti
cli
or
adc
push
push
out
cmp
int3
mov
mov
xlat
les
sub
mov
outsl
mov
insl
movsb
adc
ja
addr16
cld
imulb
dec
sbb
sbb
ds
inc
test
push
add
cmpb
pushf
lea
jne
rcr
das
not
xor
shrd
jmp
inc
adc
xor
fstpt
and
push
adc
sub
xor
sbb
loop
mov
aas
pop
pop
lcall
int3
mov
sub
ljmp
sbb
adc
cwtl
cmp
sub
xor
cmp
insl
sbb
mov
sbb
shl
les
push
cmp
push
cld
fdivl
and
push
add
outsb
loopne
xor
int3
das
jbe
mov
out
popl
int3
lret
inc
xchg
push
testl
cltd
or
test
pusha
movl
jmp
xor
mov
jmp
dec
jge
popa
pop
pop
pop
jne
xorl
xorb
mov
adc
mov
bound
cli
movsl
mov
inc
lret
pop
add
xor
insl
iret
xchg
jae
in
sbb
adc
pop
cld
cmpsb
jl
cmp
into
jbe
xor
pop
jmp
adc
xrelease
sti
inc
sbb
pop
sub
push
fstpl
cwtl
xor
fwait
fwait
mov
addr16
jno
shlb
pop
int
jecxz
test
pop
movsl
push
lea
insl
imull
out
inc
xchg
ljmp
jo
outsl
xchg
int3
not
cli
lock
scas
or
mov
push
jmp
xor
jb
icebp
inc
lret
sub
mov
mov
test
sbb
push
cmp
out
enter
dec
sbb
lahf
popf
dec
adc
leave
xlat
int3
out
test
out
adc
pop
stos
pop
or
cmp
aas
mov
mov
inc
xchg
sub
add
movl
mov
mov
inc
js
jno
mov
iret
lods
jmp
ret
icebp
lret
in
rorl
and
xor
pushw
rcrb
or
mov
movsb
hlt
fstpl
aaa
jmp
test
jb
loop
sub
addr16
or
jnp
adc
push
push
mov
rclb
sahf
pop
test
adc
dec
pop
inc
mov
add
out
mov
lock
push
fsubrs
dec
rorb
out
inc
xchg
mov
and
insb
and
pusha
lea
je
pushf
jmp
inc
je
inc
repnz
sub
ret
mov
addl
mov
add
bound
xchg
outsl
lods
jge
mul
push
cmp
mov
test
loopne
mov
add
jl
lods
mov
stos
call
inc
dec
cld
mov
fs
lcall
pop
mov
lea
jg
addr16
pop
or
xchg
out
inc
mov
pop
inc
out
ja
data16
xor
pop
and
mov
stos
into
pop
in
shl
dec
movsb
andl
in
xchg
mov
aas
jl
xorb
push
push
bound
shlb
test
outsl
cmp
xor
lods
lcall
pop
aam
or
adc
jae
nop
lret
inc
pop
and
pop
lods
add
repz
out
inc
mov
mov
aas
jmp
fildl
push
pop
insb
push
jo
inc
pop
insb
cmp
lock
movsb
enter
dec
movd
imul
pop
clc
andb
lahf
popf
int
xchg
ret
add
aad
cmp
push
adc
push
xor
icebp
xchg
xor
adc
sub
add
mov
std
arpl
pop
data16
jecxz
arpl
pop
mov
push
dec
iret
adc
mov
popf
push
and
and
and
out
inc
mov
add
js
cmp
cmc
fndisi(8087
loope
cmc
out
rcll
mov
insl
lcall
dec
add
insl
daa
xor
scas
test
icebp
mov
push
ret
mov
push
imul
add
ljmp
mov
jb
push
mov
dec
enter
mov
xchg
xchg
pusha
ds
iret
mov
xlat
std
fcmovne
idiv
fcmovnu
mov
movl
fsubrs
sbb
stos
and
adc
xlat
pop
test
test
fidivrl
mov
testl
in
popf
pop
lock
inc
jnp
sbb
mov
ja
pop
outsb
in
mov
mov
jecxz
jp
jecxz
push
xor
cmp
xor
inc
rcll
jns
sub
adc
lahf
mov
cmp
popa
out
mov
add
enter
inc
mov
cmc
loope
or
cli
decl
sub
sti
jmp
sub
and
adcb
inc
dec
push
inc
outsb
mov
test
lods
out
or
test
push
or
fs
les
cs
mov
add
imul
lea
ficompl
and
sub
sbb
and
cmc
push
push
jle
mov
add
cmp
mov
mov
in
mov
lods
repz
arpl
inc
out
push
mov
loopne
push
in
stc
jecxz
lods
rcl
inc
mov
push
dec
mov
push
cmp
popa
test
pop
in
pop
xor
dec
or
in
xor
inc
outsl
push
pop
leave
jae
sub
pop
aad
sub
pop
add
dec
mov
xor
cmp
and
mov
mov
mov
pcmpgtd
lcall
xor
add
cwtl
xor
popf
inc
lret
push
inc
cli
out
mov
pop
adc
adc
movsl
mov
icebp
mov
sbb
sbb
dec
xchg
push
insl
int3
shlb
jb
mov
shlb
js
mov
cmp
jge
lods
aaa
xchg
sub
inc
mov
xor
and
mov
push
push
pushl
ret
call
test
fcmovnbe
imul
add
pop
ja
mov
xchg
cmpsl
addl
imul
insl
pop
pop
int3
out
ss
and
sbb
xchg
rclb
jmp
or
das
leave
add
inc
jae
cltd
sub
push
ret
int3
mov
rcr
or
movsl
out
and
fxch
push
pop
cmovnp
pop
adc
push
shl
imul
dec
filds
imul
jns
insl
jmp
inc
mov
sahf
fpatan
lea
loop
das
fs
test
hlt
lret
lods
ljmp
xchg
lods
pop
dec
inc
stos
jg
mov
scas
in
pusha
jmp
cmp
jecxz
stc
add
pop
lods
out
mov
stos
and
into
fldz
mov
sbb
sbb
add
dec
adc
mov
loope
icebp
rcr
std
push
jmp
insl
inc
push
aas
int3
cwtl
cmpsb
cwtl
insl
sti
mov
cmpsb
or
in
enter
out
inc
lea
shl
dec
push
les
push
pop
push
bound
inc
inc
push
js
clc
jbe
stos
pop
pusha
sub
mov
rcll
sub
arpl
push
add
add
push
pop
push
sub
xor
fistps
push
adc
jmp
mov
cmp
push
insb
mov
jmp
xchg
push
fistps
aas
out
inc
lea
shl
push
dec
fadds
or
add
xor
and
sar
xor
lea
jne
xchg
xchg
scas
cmp
cltd
sbb
push
fistl
pusha
dec
test
je
rcrl
jmp
orb
addl
pop
test
scas
shrd
sbb
push
test
lods
lods
sbb
inc
repnz
jp
jge
and
and
and
mov
jmp
imul
out
inc
mov
mov
inc
cmp
loop
testb
loopne
int3
dec
les
cmp
gs
out
test
dec
push
lds
pop
fidivs
sub
add
call
xor
push
and
outsl
lea
mov
xor
xchg
fwait
lea
xchg
fistpl
pop
sbb
jmp
and
inc
cli
push
in
jg
int
mov
jg
addr16
mov
add
jp
push
inc
rorl
sbb
push
cmp
xchg
int3
mov
ss
dec
cmpsl
test
ficoms
cltd
cwtl
jg
xchg
mov
pop
enter
cmc
outsl
lds
pop
stc
outsl
stc
jae
mov
jp
adc
push
inc
leave
xchg
movsl
out
inc
jno
mov
lods
mov
sub
es
repnz
clc
out
in
out
dec
shlb
in
mov
jns
mov
gs
adc
into
cwtl
lcall
call
or
or
add
daa
xchg
es
adc
mov
xchg
fsubp
movsb
sub
xchg
movsb
mov
pop
ja
imul
mov
adc
sahf
mov
enter
mov
mov
in
ss
call
setne
loopne
cmc
stos
insl
pop
pop
or
mov
xchg
arpl
lds
andb
loope
inc
mov
sar
rcr
cmp
hlt
inc
fdivl
mov
es
orl
iret
push
shll
jl
push
lret
adc
js
dec
pop
pop
push
js
lock
scas
push
sbb
and
mov
pushf
push
adc
adc
jb
outsb
xor
and
or
inc
nop
mov
insl
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
nop
push
out
jg
adc
mov
mov
mov
mov
jp
fisubrl
mov
leave
repnz
out
data16
add
stc
xor
dec
pop
lds
or
ljmp
jp
mov
mov
mov
mov
jb
inc
setns
out
std
jae
pop
outsl
test
ret
jp
sub
jbe
mov
loope
jo
pusha
fs
cld
cmp
inc
xchg
hlt
or
in
fimull
sarb
sbbl
push
jp
pop
pusha
bound
pop
jp
js
xchg
push
or
mov
or
jg
mov
jns
jg
rcrl
in
dec
add
clc
xchg
insb
jl
push
loop
fmuls
scas
jmp
mov
out
ret
dec
aas
enter
imul
arpl
fisttps
or
fistps
pop
fistpll
jmp
pushf
lcall
les
mov
rcrb
aas
ds
push
cmp
test
mov
push
mov
jb
mov
lea
ja
sete
call
clc
rcl
repz
cmc
pop
fisttpll
adc
jle
jle
mov
nop
mov
and
adc
cli
or
jmp
ret
jno
mov
xor
imul
sbb
dec
out
bound
dec
jge
lods
lods
jg
and
shlb
cmp
daa
mov
cltd
or
sub
mov
cmp
mov
and
outsl
cmc
pop
jmp
xchg
and
out
inc
xchg
lds
and
pop
push
sbb
inc
imul
mov
xchg
fildll
cmp
sbb
xor
loopne
out
sbb
sahf
pop
loopne
dec
enter
loop
xchg
fsubp
out
cld
test
sbb
jae
aam
or
cmp
fnstcw
xchg
mov
mov
arpl
add
sub
gs
sub
push
jmp
or
mov
pop
popa
xchg
jne
out
in
pop
jg
jno
jge
jno
adc
aaa
imul
jbe
jae
lret
rorl
rolb
add
mov
pusha
pushf
mov
call
mov
scas
ja
pushf
mov
std
ret
shl
jmp
pop
stos
sub
jg
push
mov
movsl
xor
jno
dec
aaa
lea
pushf
xchg
pop
pop
sub
push
inc
adc
adc
inc
iret
jb
mov
xchg
fcomps
loope
adc
out
mov
mov
loope
dec
adc
in
jnp
stos
test
xorl
insl
xchg
cmp
test
cmp
lcall
in
in
pop
cld
pop
int3
push
xchg
adc
fwait
shr
shr
sub
rcr
mov
jmp
jmp
stc
and
cmp
imul
fsubp
xabort
call
xor
out
mov
adc
mov
mov
cmpsl
data16
push
xchg
sbb
xor
cmp
out
cli
cmp
push
push
fwait
mov
sbb
mov
pop
inc
inc
das
imul
cmp
jmp
shrl
push
aas
xchg
inc
in
stos
nop
into
push
sbb
sbb
jmp
arpl
mov
hlt
push
mulb
mov
nop
js
sarl
insl
add
pop
mov
mov
sub
and
cmp
push
out
fwait
enter
or
xor
sbb
shr
loopne
sub
mov
aam
jno
rcrb
and
fisttpl
aaa
outsl
add
cli
sbb
adcl
cmp
inc
arpl
lret
and
lods
sbb
sar
enter
or
mov
and
cmp
stos
and
mov
scas
adc
out
inc
xchg
mov
cmp
xor
aam
in
xchg
movsl
mov
mov
inc
cltd
pop
pushf
ds
mov
ds
mov
icebp
xchg
jcxz
push
insl
mov
je
cmpsl
imul
sbb
mov
xor
jne
inc
and
imul
xchg
mov
ret
push
fldcw
lods
pop
inc
sbb
and
in
adc
out
mov
popf
sbb
dec
out
sti
popa
jmp
inc
xchg
sbb
aam
xor
lods
loopne
decl
dec
jmp
sbb
std
mov
or
mov
aad
icebp
iret
in
out
ret
int
int
sub
iret
scas
push
dec
dec
jmp
test
push
rcll
pop
push
jmp
or
mov
lods
fcoml
adc
sti
clc
mov
imul
jle
mov
scas
adc
fbstp
mov
ret
cmp
jo
mov
sub
mov
xchg
sbb
mov
scas
or
lahf
add
xchg
sbb
jmp
mov
ret
lea
mov
test
cmpb
pushf
movb
jmp
repz
pop
hlt
jno
adc
sub
and
dec
fnstcw
scas
sub
fisttps
ret
inc
ja
add
mov
daa
jo
jo
imulb
add
fldl
dec
xor
sbb
mov
loope
mov
bound
arpl
cmpxchg
loop
out
mov
lods
repz
arpl
pop
aad
shll
fldcw
pop
out
inc
xchg
addr16
test
cli
ljmp
ds
mov
lea
ja
rol
sar
bt
sar
sub
bswap
mov
movsbw
shrd
add
btc
shl
setne
mov
pushf
adc
setl
add
mov
test
jmp
bt
pusha
cmp
test
cmp
push
pushl
movw
lea
jae
cmc
cmp
cmc
jmp
movsb
divl
add
in
jb
push
push
pop
je
mov
test
sub
cmp
cs
lret
scas
std
dec
into
clc
mov
add
insl
push
xchg
jp
hlt
and
xor
fs
fucomip
sub
sbb
movsb
dec
daa
and
pop
out
lock
xchg
cmp
mov
movsb
push
test
movsb
repnz
dec
mulb
jo
inc
xchg
ds
mulb
cmc
imul
push
pusha
dec
jl
js
sbb
jl
aam
movsl
or
pop
jp
popf
daa
andb
pop
push
inc
lret
mov
mov
aam
pop
xlat
mov
pop
pushf
sub
xchg
pop
fs
cli
dec
inc
insb
sbb
xchg
cltd
cmpl
es
insb
push
dec
xchg
sub
js
mov
push
orl
adc
sbb
xor
jne
adc
mov
inc
xchg
and
cmp
faddl
rolb
inc
cwtl
add
in
add
pushf
pushf
lea
jmp
pushf
call
lahf
jmp
out
or
mov
mov
xchg
test
sbb
jge
dec
mov
mov
push
dec
lock
enter
sub
fwait
fwait
jl
ret
cwtl
hlt
jp
and
adc
xchg
mov
or
pop
sbb
push
in
pop
mov
rolb
add
das
insb
or
js
fdivrp
in
mov
adcb
dec
and
stc
in
jmp
popa
cmp
jnp
pop
add
out
inc
cltd
mov
dec
in
not
pop
cmc
loop
or
push
push
pop
push
jnp
lea
test
dec
rcll
inc
loop
scas
inc
mov
push
mov
jb
jno
stc
mov
lcall
ja
sbb
adc
push
lods
mov
fwait
and
ja
rol
hlt
jg
shll
push
pop
xor
rcll
and
lods
es
test
aad
daa
xlat
ss
mov
sarl
mov
xchg
cmp
inc
in
loopne
inc
cltd
adc
xchg
add
popa
imul
insb
add
pushf
test
pusha
lea
je
bt
sub
pusha
stc
jmp
movsl
mov
fwait
cmp
sar
fcmovu
out
out
loopne
lock
mov
out
outsl
subl
scas
push
dec
call
jb
mov
mov
and
inc
jle
jae
jge
mov
and
mov
xchg
mov
cmc
mov
popf
scas
or
cmp
adc
pop
icebp
stos
dec
dec
push
repz
test
sbb
jg
int
test
into
xchg
andb
leave
fldt
pop
rorl
popa
lret
inc
iret
jno
sub
fisttpll
xchg
rol
pop
mov
clc
jmp
jae
adc
mov
sub
outsl
cmpl
cltd
stos
xchg
pop
mov
cld
sub
out
cli
dec
mov
fdivr
ss
pop
xlat
mov
cs
mov
scas
rolb
test
pop
jecxz
int
push
shr
aas
popa
repz
and
add
xchg
call
xor
in
sti
test
hlt
fimuls
mov
dec
loop
out
push
popa
jne
add
call
dec
push
ljmp
imul
out
into
fdivr
mov
enter
lods
pop
xor
inc
dec
out
push
or
and
mov
inc
leave
inc
dec
in
mov
outsb
and
stos
sub
pop
adc
sub
sub
js
cmp
and
lock
mov
or
repz
jecxz
dec
mull
xor
cli
push
mov
cmp
cs
testb
fwait
push
stos
cmc
cltd
leave
jmp
arpl
test
call
push
xor
pop
push
adc
mov
je
cltd
mov
aam
fisttpll
idivb
mov
arpl
adc
inc
arpl
test
out
shll
xor
mov
inc
dec
jbe
or
jecxz
cmc
insl
and
xchg
stc
dec
flds
inc
insb
xor
cld
repnz
mov
sbb
outsb
xor
jo
pop
clc
sub
cltd
int
push
lret
insl
xor
push
xchg
pop
pop
out
inc
pushf
test
push
push
inc
push
xor
cs
insb
add
mov
mov
enter
decl
mov
data16
or
ds
xor
push
add
sub
sbb
push
sti
push
je
rclb
or
or
addl
dec
cli
xorb
cmpsb
cmp
mov
mov
inc
sbb
cmp
scas
lods
adc
inc
dec
aam
and
sbb
xchg
and
pushf
pop
fcoms
jno
fsubs
ds
jbe
xor
push
push
or
out
inc
pushf
push
mov
adc
push
dec
dec
dec
dec
cs
insb
add
repnz
mov
pushf
jmp
in
xchg
shrb
cwtl
pushf
movsb
mov
lcall
jo
lods
jecxz
es
push
push
rcrl
add
int
jecxz
or
push
xor
lods
push
adc
call
jp
jbe
inc
popf
popf
push
je
stc
cmc
cmp
pushf
jmp
pop
add
imul
mov
mov
jno
mov
sub
xchg
push
lods
jge
out
aad
push
push
and
pop
xchg
mov
adcb
or
pop
xor
jno
dec
pop
push
cld
hlt
mov
test
or
iret
mov
jb
xor
adc
movsl
imul
cmpb
mov
inc
arpl
int3
dec
ret
push
push
shlb
rorb
mov
adc
inc
popf
push
rorb
stc
call
sahf
xchg
mov
jmp
fidivrs
and
dec
or
pop
cmp
xchg
and
outsl
jno
mov
and
pop
rolb
xchg
jecxz
outsb
movsl
pop
jae
and
idiv
jp
push
dec
xorl
fadds
in
in
scas
hlt
jp
xor
arpl
mov
lea
fbld
dec
aad
mov
aad
loope
jmp
out
inc
sahf
and
enter
popa
xlat
orl
mov
inc
inc
push
jp
mov
out
insl
mov
pushf
aaa
and
add
jmp
ds
jle,pt
pushf
shlb
or
adcb
cmpsl
sbb
jmp
std
mov
push
mov
dec
cmpsl
jno
shrb
add
pop
int
and
push
loop
xchg
and
cmpsb
rcrl
mov
fisubrs
imul
mov
jno
mull
pop
lods
pmaxsw
mov
sub
das
sub
sbb
gs
gs
popa
push
jne
imul
jo
test
movsl
mov
pusha
cmovs
test
nop
sahf
cmp
cltd
push
jecxz
sbb
test
jmp
ss
dec
pop
test
or
movsl
daa
jne
addr16
push
lods
jne
inc
cmp
paddsb
aad
push
mov
sub
cmp
pop
inc
sub
jne
dec
adc
aas
cltd
and
daa
rol
mov
lock
cmp
and
rdtsc
and
and
testb
sub
call
arpl
xchg
cmp
test
out
loopne
mov
dec
imul
lret
gs
mov
mov
ss
cltd
push
cld
push
dec
push
or
stc
push
mov
fs
mov
inc
nop
cmpsb
sbb
ds
data16
or
shlb
fldenv
push
icebp
jae
dec
rcrl
lds
inc
mov
add
je
outsl
fs
gs
imul
add
jg
outsl
lds
pop
insl
sub
xor
jmp
lea
jo
sub
mov
and
dec
iret
inc
loope
cmp
out
lahf
jne
cmp
lods
xorl
int3
shll
int
add
fstps
insl
xchg
pushf
mov
jge
add
scas
arpl
pop
sbb
xchg
cmp
fdivs
fisttps
cmp
mov
test
push
stos
insb
jo
pop
out
dec
out
inc
mov
sub
fnstsw
in
lea
xor
xor
or
xor
cmp
and
adc
in
mov
xchg
mov
jnp
daa
mov
xchg
push
test
nop
movsb
bound
add
fnstsw
inc
cli
int
xor
xchg
sbb
adc
sbb
xor
jmp
cwtl
test
int3
hlt
in
stos
mov
loopne
imull
repnz
and
sub
movsb
xchg
lods
xchg
mov
sbbb
add
adc
inc
add
xor
and
inc
mov
push
cmc
mov
call
add
or
adc
xlat
in
sar
into
mov
out
dec
cld
scas
sbb
xlat
js
jns
lods
cmp
jo
push
adcl
mov
add
in
mov
jo
call
mov
jno
pop
mov
loope
daa
fwait
cltd
leave
push
dec
lahf
pushf
mov
jle
mov
jmp
hlt
mov
mov
roll
ljmp
push
pop
das
cmp
mov
aaa
popf
xor
aaa
adc
pop
iret
jno
inc
mov
dec
dec
push
push
dec
dec
dec
cs
push
push
add
aaa
popl
mov
stc
cmp
pusha
cmp
pushl
lea
ja
call
repz
mov
mov
pusha
jb
pushaw
push
mov
dec
add
pop
in
inc
pop
sub
and
aad
in
fstpl
ret
mov
cmp
or
xchg
mov
mov
enter
xchg
daa
ja
mov
dec
sub
es
dec
xor
pop
cmp
movsl
add
cmp
inc
andb
hlt
pop
enter
lock
out
inc
mov
jne
dec
roll
sti
out
or
pop
and
cmp
orb
dec
lret
cmp
test
mov
ror
jb
mov
xchg
sbb
dec
lds
lcall
lret
cmp
sub
xor
jle
mov
nop
xchg
mov
into
stc
xchg
lcall
mov
ljmp
jne
or
fldt
data16
mov
test
idiv
add
dec
pop
shrl
xchg
xor
adc
mov
pop
and
rcl
mov
cwtl
scas
mov
dec
push
cmp
push
sbb
mov
mov
fs
dec
lock
insb
pop
sbb
div
in
das
inc
gs
xchg
sub
adc
sar
mov
ret
scas
lret
out
dec
lcall
lods
movsl
mov
addr16
pop
fidivrs
pop
lock
in
mov
lret
fisttps
popf
daa
mov
test
xchg
and
out
inc
mov
fs
je
call
adc
pushf
pushl
movb
pusha
lea
jmp
ss
pop
dec
lds
sbb
adc
loope
leave
test
push
dec
fs
push
mov
pop
or
scas
pushf
jne,pt
push
jae
ret
mov
addr16
sbb
inc
arpl
pop
icebp
sbb
mov
clc
call
xchg
sbb
ss
push
add
ret
inc
aam
sub
insl
mov
xor
aaa
xchg
adc
push
sti
out
inc
movsb
sub
inc
repnz
ljmp
enter
loop
adc
lea
jae
pusha
push
pusha
lea
jmp
xchg
lds
pop
pop
dec
jno
mov
mov
lods
mov
scas
movsl
aaa
test
mov
cmc
mov
push
out
push
add
cmpl
mov
push
add
pop
outsb
and
jno
ret
pop
pop
adc
dec
pop
cmpsb
and
pop
in
pop
pop
add
mov
sahf
ret
sbb
pop
out
mov
xchg
push
inc
in
mov
pop
mov
cli
push
and
fwait
cmp
push
rclb
cmp
and
inc
movsl
repnz
pusha
mov
bt
cmp
neg
jmp
pop
dec
pop
jnp
dec
cmpb
scas
mov
push
bound
push
loope
sbb
pushf
cmp
dec
cmpb
inc
loope
xchg
rcll
mov
push
pop
cmp
jns
je
fisubrl
or
popa
mov
dec
int
pushf
push
xchg
sub
inc
sti
fistpll
repnz
pop
fstpl
fnstenv
jb
mov
insb
into
je
pop
add
scas
dec
push
mov
cltd
mov
dec
push
imul
out
pop
hlt
dec
cmp
call
cmp
xor
lods
faddp
jmp
ret
push
hlt
inc
xchg
add
and
dec
jle
push
shlb
and
sub
add
fsubl
lods
fldl
jmp
loop
cli
in
shl
cli
fdiv
push
decb
and
cmp
mov
fcos
pop
outsl
mov
ss
xor
inc
pushf
pop
xchg
lea
cmp
push
inc
sbb
pop
adc
gs
cld
outsb
in
lret
fwait
notl
test
aas
sbb
pop
mov
lods
sub
out
inc
cmpsb
dec
iret
lock
loopne
rorl
jnp
cmp
pop
adc
sub
add
daa
pusha
mov
scas
push
hlt
test
inc
mov
push
dec
dec
mov
xorl
fisubl
lret
stos
add
aam
and
push
sbb
cs
insb
jo
push
lds
in
jae
cmpsl
out
out
leave
ja
movsl
stos
fsubrs
or
in
cld
push
jle
jp
stos
or
and
inc
cmpsl
int3
sub
lea
jmp
lea
je
call
and
sub
dec
xchg
add
dec
pop
mov
mov
push
and
addl
sbb
xchg
fcompl
dec
ret
fisubrl
adc
scas
fldt
enter
pushf
add
push
cwtl
aam
lods
pushf
jb
call
faddp
ss
lock
fisubrs
movsb
sbb
rol
test
push
jecxz
add
push
and
dec
out
data16
lahf
add
cmp
inc
test
inc
jle
aam
or
loop
jecxz
push
inc
pop
dec
push
pop
jle
ret
jo
insb
lods
mov
hlt
outsl
sub
pop
dec
loope
aam
loop
gs
pushf
jl
decl
scas
ds
jl
xchg
test
dec
adc
out
repz
jnp
inc
mov
push
xlat
xlat
dec
roll
mov
pop
ss
inc
mov
sarl
sbb
xor
sub
dec
lds
inc
std
addr16
push
jmp
loope
jne
js
fdivrs
sbb
xlat
in
and
fcomip
pop
rcrl
mov
fimull
push
in
shl
sarb
xlat
push
jecxz
cld
test
add
sbb
hlt
icebp
push
or
mov
pop
add
fisubl
or
pop
cmp
xor
arpl
add
mov
ja
mov
cmpsl
jns
popa
jge
icebp
popf
xor
cmpsb
adc
jns
punpckhwd
pop
lret
jno
dec
mov
gs
inc
test
aas
sbb
dec
adcl
mov
test
mov
jno
pop
add
rolb
ud1
jp
hlt
cmp
iret
fbld
xor
js
xor
pop
sti
adc
xchg
out
pop
inc
rclb
lock
cmpsl
cmp
xor
sbb
jmp
xor
add
test
pop
sbb
cmp
cmp
xchg
push
mov
push
addb
out
inc
test
mov
test
lret
push
sub
and
push
or
sub
and
fcompl
mov
std
cwtl
mov
push
xchg
outsb
rclb
mov
mov
test
cmp
hlt
xchg
ja
push
inc
fadds
ds
push
sub
out
addr16
xor
mov
lea
aam
and
jns
add
mov
cmp
pop
rorb
int3
dec
fsubl
les
dec
in
inc
stos
mov
jge
cmpsl
mov
inc
dec
lret
xchg
mov
xchg
mov
pusha
cmpsb
in
pop
mov
cmp
pcmpgtb
aad
out
and
adc
push
push
insb
and
mov
test
cmpsb
addr16
jbe
mov
mov
cmp
mov
call
push
mov
jge
sbbb
pop
pop
js
loope
sbb
sbb
and
pop
scas
pop
xor
mov
and
stos
jnp
popa
or
inc
in
jl
lods
mov
rcr
call
ljmp
cld
mov
sarb
int3
dec
test
in
scas
mov
sbb
push
pop
add
aad
std
pop
cmc
mov
cmp
dec
push
sbb
jge
std
jnp
pop
sbb
out
inc
stos
mov
aas
insb
xor
xor
adc
pop
sbb
xor
mov
adc
jae
and
imul
lods
adc
mov
mov
in
cmpsl
ret
fcoml
movsb
cmp
ss
sbb
cmp
dec
push
in
out
into
shlb
mov
movsl
pop
lea
fwait
cli
mov
callw
dec
mov
stos
mov
cld
pusha
fisubrs
cli
push
cli
pop
ret
lods
out
inc
stos
jp
mov
xor
lea
jne
setns
sub
movsbl
sbb
dec
sub
mov
and
stc
inc
add
not
push
jmp
pushf
call
movb
call
sub
bnd
lcall
add
mov
iret
in
jns
lods
push
lds
stc
pop
mov
sbb
scas
push
pop
js
xorl
push
sbb
jbe
lods
lock
notb
rorl
inc
dec
into
stos
fwait
mov
aam
xor
cmp
and
imul
xchg
out
xor
add
xchg
xor
xor
or
outsb
fsubr
inc
lods
pop
cmc
into
mov
lods
orb
test
mov
iret
ror
ror
inc
fldcw
inc
xchg
outsl
xchg
mov
dec
test
pop
pop
jmp
mov
xor
call
int
outsb
fdivrs
test
hlt
es
arpl
fisubs
cmp
arpl
and
test
loopne
pusha
ret
lock
dec
add
mov
xchg
jne
add
shll
insl
pop
lods
sub
or
scas
jmp
test
and
jne
call
insl
xor
fidivrl
and
jno
dec
push
dec
xchg
xorl
mov
xor
out
loope
stos
or
cmpsb
mov
xor
jns
ds
add
cmp
sub
xchg
xchg
push
xchg
lcall
pop
repnz
stos
mov
xchg
out
sbb
push
dec
into
inc
ficompl
add
dec
imulb
inc
lods
add
ret
int3
into
mov
out
push
cs
inc
jns
push
pop
dec
inc
test
call
fists
lea
test
add
into
fs
lods
xchg
sbb
test
fidivl
jmp
sub
xchg
jl
sbb
mov
adc
lods
add
push
movsl
jnp
mov
shrl
cmp
mov
in
push
mull
xor
ljmp
inc
add
nop
es
mov
xchg
adc
add
cmpsb
pushf
scas
mov
aas
mov
in
movsl
loope
js
dec
filds
add
pop
cwtl
sbb
dec
fisubs
inc
scas
fcompl
js
push
add
xchg
popf
xchg
inc
ja
dec
stc
jae
push
push
aas
daa
cmp
pop
in
or
mov
mov
stos
testl
jb
dec
movsl
mov
inc
ret
shrl
lcall
ficompl
in
into
ret
vphaddubw
les
mov
in
dec
out
pop
jmp
incl
pop
add
scas
dec
mov
out
std
shr
jnp
jns
in
dec
add
das
jge
in
not
jae
xorl
out
xchg
insl
jno
jmp
dec
in
cmpsb
sub
cld
xchg
sahf
cmp
pushf
pop
outsl
mov
jecxz
sbb
lcall
imul
xchg
enter
push
adc
imul
mov
addr16
test
dec
jg
jmp
repnz
bound
testl
les
fdivrs
pop
in
pop
xlat
ss
dec
ret
dec
fidivrs
inc
sbb
cld
clc
ret
outsl
insb
xor
cs
insb
add
xor
sub
or
loope
aad
sub
std
lret
lods
xchg
cwtl
push
push
ret
shl
sbb
and
jnp
adc
std
inc
push
push
push
data16
addr16
ficoml
cli
push
mov
test
mov
imul
lods
cmp
inc
out
std
jmp
ret
popa
aas
lea
mov
orl
inc
mov
pop
inc
mov
jmp
lea
jne
movzbw
xor
cmp
call
pushf
mov
pusha
push
movb
push
pushl
ret
dec
imul
cmpsb
ret
sub
cli
pop
cmc
mov
sbb
out
fldt
shlb
addr16
jp
sbb
mov
sub
dec
lahf
imul
sub
stos
inc
cltd
ret
or
lock
xchg
jbe
imul
xchg
pusha
xor
es
mov
in
xchg
jp
mov
mov
outsb
mov
ret
cmp
dec
mov
outsl
cmp
cmp
jecxz
or
outsb
mov
lock
in
fstpt
call
jbe
or
icebp
mov
jbe
aas
cld
movsb
out
cmc
sti
in
mov
sbb
mov
pop
cmp
push
rcrl
sbb
push
lcall
mov
out
fwait
pop
cmp
ss
pop
popf
es
pop
mov
push
notl
cmpsl
xor
ret
out
mov
jb
cmp
fildl
mov
xchg
mov
dec
mov
dec
adc
incl
mov
add
es
lret
cmc
cmp
aaa
hlt
mov
lods
lock
mov
fisttpl
lea
inc
js
sti
dec
cmc
adc
jo
in
and
mov
lods
mov
fwait
jbe
in
data16
sub
adc
push
push
xlat
in
mov
insb
jb
sub
mov
imul
push
push
out
sub
sbbb
jbe
dec
insb
add
dec
sbb
mov
sbb
lret
lahf
dec
lock
stos
mov
mov
cmp
lret
push
lods
xchg
and
mov
or
push
adc
insb
xchg
push
mov
in
cwtl
movsl
jp
mov
in
mov
call
xchg
movsl
test
cltd
enter
cmp
lods
call
mov
pop
movsl
aaa
pusha
push
pop
mov
divb
dec
orl
sub
pop
into
pop
ljmp
pop
mov
pop
test
in
sahf
dec
sbb
push
mov
imul
loop
pop
fwait
dec
push
ljmp
js
mov
dec
push
ss
lods
push
pop
lods
sub
imul
inc
fcomi
jmp
into
jmp
insb
inc
repz
fisttpll
dec
out
xchg
sbb
mov
test
js
cmp
mov
inc
icebp
psraw
das
lods
push
ljmp
cmpl
dec
repz
jp
push
cmp
or
sti
jmp
xchg
fwait
sub
lock
pop
pop
jl
ficomps
sbb
out
in
lods
sub
pushf
imul
movsl
inc
mov
or
xchg
xchg
and
jns
xchg
loopne
ja
mov
pop
movb
fmull
adc
ret
push
data16
in
in
cmpsl
jmp
in
mov
mov
and
imul
xchg
xor
push
fildl
jmp
xchg
cmc
mov
mov
sub
jmp
dec
movsb
sub
fbstp
xor
aas
lcall
lret
jl
dec
push
jae
mov
pop
fcomps
leave
or
adc
push
lods
inc
lret
jp
addr16
pop
lcall
inc
pop
cmpsl
sahf
lret
ds
cmp
lret
insl
mov
ja
mov
arpl
stc
jo
and
pop
scas
push
pop
pop
mov
mov
cmp
je
stc
dec
lret
in
fnstsw
adc
ss
mov
cmp
fistpl
adc
mov
repnz
ret
fldt
inc
icebp
into
add
cmp
and
or
fst
dec
loop
mov
mov
push
pop
mov
shl
pop
arpl
pop
sub
frstor
loopne
and
fs
mov
inc
pop
push
sub
lret
and
add
stc
sub
andb
jmp
cltd
gs
or
popa
test
add
jmp
adc
lahf
and
jae
in
cld
inc
arpl
daa
dec
es
leave
add
mov
xchg
jno
imul
repz
rorb
bound
cmp
mov
stc
in
inc
cs
or
jns
cmp
int
cmp
mov
hlt
mov
inc
fldl
dec
fcmovnbe
dec
sbb
jmp
add
cmp
cmpsb
push
mov
jge
stos
dec
andb
lret
je
push
stos
mov
mov
mov
push
jle
cmp
dec
fistpll
int3
lret
pop
jbe
add
sbb
cmp
dec
mov
outsl
pop
mov
pop
push
shrl
mov
outsl
enter
movsb
pop
ret
jg
cld
or
adc
outsb
inc
in
dec
stc
dec
stc
loope
dec
arpl
mov
ljmp
dec
cmp
mov
jp
sbb
cmp
aas
adc
inc
or
sbb
sub
stos
push
call
pop
call
data16
imul
movsb
sti
ret
imul
mov
in
out
cmp
mov
movsb
out
sti
or
cltd
and
mov
sti
filds
mov
mov
jmp
out
mov
inc
gs
push
repz
mov
pop
lret
inc
lods
insb
jmp
sbb
adc
xor
or
lret
inc
and
pop
fs
pop
push
sbb
jge
loopne
pop
fmull
inc
lods
and
lea
dec
test
sahf
imul
lcall
inc
fimuls
out
mulb
inc
jecxz
insb
enter
add
push
out
in
mov
sub
in
and
in
loopne
repz
data16
cltd
mul
les
add
outsl
out
enter
sub
lahf
in
sbb
out
lahf
jae
aas
lods
push
daa
xchg
in
pushf
xor
ds
add
mov
pushf
pop
imul
jb
lock
mov
out
fldt
call
cmp
insb
mov
fucom
ljmp
or
sarb
and
loope
stos
jp
mov
inc
sbb
sub
inc
push
sub
push
cmp
xchg
test
jp
mov
mov
jecxz
or
jb
xor
jb
dec
jp
cmc
add
negb
loopne
or
sub
sub
push
insl
enter
push
jnp
ret
pusha
mov
arpl
insl
mov
dec
test
jp
mov
insl
repnz
mov
mov
das
pop
mov
leave
adc
dec
push
cmp
out
adc
insb
dec
fists
popf
mov
imul
mov
data16
mov
mov
push
mov
adc
test
ret
out
rcll
test
lods
in
imul
sti
sahf
pop
jge
repnz
xor
push
out
dec
shll
ds
lahf
mov
je
in
sub
push
pop
xor
jbe
aaa
sub
nop
sbb
cmp
repz
pusha
sub
movsl
in
mov
dec
xor
mov
stos
push
in
sbb
add
add
sti
filds
dec
push
and
into
mov
and
fcomi
xchg
lock
sbb
push
push
imul
rcrl
cli
loop
les
lret
insb
rolb
jp
lock
mov
mov
cwtl
adc
pop
cli
insl
inc
xor
in
mov
mov
pop
jp
push
mov
out
and
or
cmpsl
dec
cmpsl
and
aad
cltd
fnstcw
ljmp
bound
shll
and
jg
mov
xor
pop
ja
aam
mov
mov
inc
dec
outsl
sti
jbe
mov
xchg
dec
mov
dec
dec
hlt
jp
xchg
jbe
mov
push
cmp
jns
jae
xchg
inc
out
fidivs
loopne
inc
out
es
or
mov
push
and
jp
dec
sbb
or
fidivrl
pushf
sbb
sahf
cmp
sbb
sub
je
mov
addb
insl
bound
xor
insl
inc
int3
pop
negl
cmp
mov
fstpl
mov
jmp
dec
adc
add
cmp
sub
or
sbb
jo
out
mov
mov
pop
or
dec
sub
fstpt
sub
jg
adc
fwait
sub
movb
dec
fs
in
addr16
stos
pop
lahf
negb
mov
jmp
dec
inc
xchg
scas
and
jno
sub
leave
out
jbe
xchg
ljmp
adc
cltd
mov
sbb
dec
jns
sub
jle
stc
scas
sbb
push
mov
push
mov
in
xor
rcll
sub
jmp
mov
mov
ret
mov
add
xchg
adc
jg
ficoms
sbb
dec
push
jbe
in
add
in
jo
in
xchg
mov
sub
subl
hlt
xor
xchg
adc
iret
std
repz
push
and
lcall
push
sbb
fadds
mov
mov
popf
cltd
mov
imul
stos
dec
xchg
xlat
fmul
jg
ljmp
jl
das
mov
aad
sti
xchg
xchg
jl
mov
gs
js
sbbb
mov
ret
mov
pop
cmp
sbb
sub
cmp
imul
stos
dec
dec
sti
jge
pop
jp
pusha
dec
sti
outsb
sbb
pop
mov
adc
sbb
xchg
xchg
cmp
test
xor
outsb
cmc
pop
add
dec
sti
push
mov
sub
das
xchg
les
test
mov
or
and
addr16
lea
mov
lcall
scas
cmp
inc
pushf
push
in
push
xchg
xor
mov
rcrb
jb
lea
loope
cmp
adc
pop
pushf
jmp
xchg
xchg
push
je
sub
sub
xor
mov
mov
push
sub
lods
daa
lods
xor
sub
sub
aam
jmp
icebp
jb
push
pop
cmc
pop
xchg
push
lods
dec
in
xchg
outsl
dec
lods
in
cli
daa
lods
sbbl
xor
loop
repz
dec
cmp
dec
call
mov
dec
insb
adc
into
mov
xchg
mov
lock
push
push
mov
out
or
out
hlt
in
add
lods
jecxz
leave
push
rorl
mov
jle
cmp
mov
aad
paddw
jmp
lcall
dec
inc
xchg
cli
aad
adc
adc
pop
push
pusha
xchg
out
testl
mov
and
push
mov
mov
pop
dec
push
dec
mov
push
push
xchg
imul
in
mov
repz
sub
push
sub
lret
sub
insb
aas
mov
xchg
jge
testb
shll
imul
pop
loopne
in
add
inc
mov
sti
fistps
jp
cli
btr
inc
jne
pop
xor
lret
stc
fldl
mov
push
mov
loopne
xor
cmc
jb
pop
lds
mov
fwait
or
adc
jno
or
inc
mov
jge
xorb
insb
pop
popf
insb
sub
into
dec
jg
insb
sti
in
loope
mov
mov
repz
fiadds
jne
cmpsl
mov
xchg
mov
ja
in
in
gs
mov
mov
pop
push
dec
cli
movsl
iret
xchg
mov
std
dec
cs
xchg
xchg
out
jnp
xchg
inc
std
cs
mov
jb
cltd
sti
inc
dec
clc
push
xchg
cld
test
std
icebp
xor
mov
loopne
sub
subl
mov
push
repz
and
test
fstpl
dec
imul
lods
sub
jge
sti
push
out
and
xchg
inc
push
mov
lods
sbb
mulps
or
jp
or
test
ja
in
sub
sub
imul
or
xchg
or
sbb
xchg
adc
in
add
lcall
sbbl
out
test
cmpsb
jbe
js
mov
inc
incb
mov
pop
scas
bound
add
js
xor
xor
jecxz
jmp
mov
add
xchg
xlat
test
inc
decl
sti
movsl
jnp
jp
sbb
jns
jmp
pop
push
ljmp
pop
out
sbb
sbb
out
adcl
mov
cwtl
imul
pop
mov
mov
xor
mov
push
inc
pop
dec
in
bound
lret
add
xor
insl
imul
test
jb
pop
ror
in
mov
cmp
mov
out
cmp
mov
call
cmp
mov
int3
jae
pushf
les
push
mov
jo
lods
fisubs
or
mov
sbb
cmp
xor
fimuls
push
das
cmpsb
in
add
js
sti
and
mov
in
test
aad
cmp
lods
mov
dec
inc
sbb
inc
pop
mov
lods
cmp
dec
pop
push
dec
testl
sub
int
xor
mov
sub
sub
sbb
adc
dec
push
mov
sbb
mov
lock
enter
sub
jne
shlb
jo
lcall
icebp
push
iret
sub
in
fstl
je
mov
mov
neg
inc
mov
push
pop
scas
in
dec
imull
pushl
int
mov
lret
sti
jae
cwtl
push
jecxz
out
pop
mov
cltd
ficomps
add
pop
cmp
mov
je
popa
add
repz
cltd
insb
std
xor
lret
dec
in
out
and
sub
popf
lret
iret
mov
fdiv
dec
negb
mov
or
aad
xchg
movsb
js
pop
in
cld
sub
popf
inc
cmp
xor
insb
fstps
loopne
jp
mov
jge
sub
add
xchg
xor
inc
shl
jns
dec
sarb
insl
sbb
jge
add
xchg
push
rorl
cld
dec
jb
pop
aaa
jge
roll
testl
dec
jge
mov
test
xchg
test
insb
in
test
out
pop
insb
js
lea
sub
dec
icebp
pop
mov
lea
pop
xchg
es
lock
std
inc
arpl
adc
adc
pop
mov
repnz
add
push
pop
jp
repz
pop
out
enter
repz
shll
xor
lods
lock
jno
jp
mov
outsb
mov
in
push
adc
or
mov
inc
mov
cmc
push
cwtl
jno
mov
jecxz
test
or
ljmp
fsts
push
cmp
cmp
test
movsl
mov
mov
cmp
push
int
fidivrl
fsubrs
cmp
sub
lcall
pop
dec
bound
testl
rcl
testl
adc
push
movsl
sub
repz
dec
and
test
xor
popf
xchg
or
popa
pop
cmpsl
mov
imul
test
popa
sbb
xchg
pop
int3
pop
xchg
adc
xlat
or
stos
mov
bound
mov
and
push
sub
mov
cmp
cmpsb
push
sahf
in
aad
cmp
jmp
and
mov
aam
ret
es
cmp
scas
push
dec
cmp
or
fstl
jp
lock
mov
cmpsl
sbb
jmp
xorl
jecxz
or
xor
inc
xchg
xchg
dec
push
jl
inc
js
sub
adc
icebp
mov
sahf
sub
cmp
daa
scas
inc
daa
imul
pop
imul
ja
ja
jg
lcall
sub
mov
push
repnz
repz
mov
mov
pop
mov
jecxz
repz
movsl
jae
ja
arpl
mov
xor
sub
cltd
pop
jge
cmc
ja
add
stc
jp
pop
and
and
jmp
mov
lods
lret
insl
adc
out
fsincos
in
mov
dec
mov
pop
nop
pop
stos
xor
dec
sub
push
out
sti
xor
imul
adc
loop
cld
insl
adc
fs
insl
jg
ret
fistl
lods
leave
push
in
sahf
insl
daa
mov
outsl
cmp
sub
cmp
insl
and
jmp
push
sub
inc
push
dec
push
test
call
xchg
xor
inc
test
int
add
xchg
insl
dec
cs
ret
scas
lea
shll
push
sbb
lock
inc
pop
sbb
cmp
aas
xor
stos
mov
test
adc
sbb
addr16
xchg
mov
jae
in
or
pop
dec
fcomps
call
loop
js
dec
add
or
cmc
adc
mov
out
sti
fsubs
mov
js
ja
call
push
push
adc
stc
lcall
and
lahf
in
mov
pop
jb
call
push
in
scas
lea
out
push
jno
push
push
cs
gs
cmp
pop
pop
in
inc
mov
xchg
xchg
cld
push
mov
push
cld
jge
repz
nop
cmpb
inc
pop
das
push
call
mov
rorl
dec
je
test
or
lods
mov
push
dec
push
push
inc
movsb
sub
leave
js
cmpsl
mov
leave
or
mov
sbb
or
scas
insl
gs
fstpt
sbb
shr
add
iret
mov
ds
scas
call
repz
xor
out
ret
mul
lock
push
sbb
or
mov
xor
test
push
aam
adc
scas
into
insb
dec
xor
popa
sbb
dec
stos
mov
out
jecxz
outsl
cs
shl
test
data16
inc
out
sub
push
movsl
xor
push
jp
movsl
pop
fistpll
cmp
jae
in
cmpsb
lret
mulb
push
jnp
loop
push
mov
mov
inc
xor
jno
testb
xchg
test
dec
or
addr16
xor
fcomi
cmpsl
repz
mov
add
push
pop
insb
into
fistpl
pop
xchg
dec
repz
pop
jne
dec
jno
pop
test
mov
call
out
addr16
sbb
xchg
cmp
sub
into
cwtl
add
add
inc
ret
fstpt
jle
lret
lock
or
lea
pushf
push
fwait
arpl
scas
inc
outsb
push
fdivs
add
popa
insl
mov
dec
mov
call
ljmp
and
pop
pusha
jp
cli
pop
mov
lahf
idivb
add
mov
repz
in
popa
jle
mov
mov
xor
push
out
cmp
and
ljmp
dec
dec
icebp
adc
mov
out
push
mov
push
out
subl
adc
lret
adc
cld
cli
negb
add
jb
dec
xchg
mov
push
mov
fs
aad
addb
addr16
fsubl
icebp
scas
xchg
dec
jp
jle
xor
lock
clc
pop
sub
xchg
dec
jb
xlat
sub
cld
jp
jnp
test
cmp
dec
or
testb
adc
sbb
mov
out
fldt
mov
stc
ja
bound
aas
push
outsl
fld
movsb
mov
movsl
cmp
mov
inc
xlat
and
test
in
push
mov
lea
cmp
repz
sub
pop
mov
mov
mov
or
popf
arpl
sub
add
xor
lods
lcall
push
out
lods
les
dec
jns
pop
inc
sahf
call
repz
jo
insl
fwait
sub
pop
or
or
ret
sahf
cmp
sbb
pop
mov
out
ret
jge
leave
out
cltd
jbe
psllq
or
xchg
out
out
lahf
or
jns
cmp
or
popa
pop
xlat
je
add
leave
daa
popf
mov
shr
in
insl
push
dec
inc
les
rep
in
sti
jno
fdivs
jmp
sub
scas
jle
and
mov
pusha
dec
ds
mov
sti
in
stc
fsubrl
lret
fldl
scas
in
stos
mov
shl
mov
cmp
cmp
sti
push
and
ds
outsl
sub
sti
sub
ds
lret
dec
sti
pop
ds
mov
mov
cwtl
adcl
fcomip
fstpt
add
mov
pop
out
aad
or
subb
nop
or
popa
or
pop
nop
sub
sbb
call
sahf
je
mov
outsl
ficoms
or
xor
sti
and
neg
or
or
push
lahf
inc
pushl
call
xorl
cmpsl
jle
stc
in
sbb
cli
dec
push
jge
jg
bswap
push
ret
xchg
pusha
pop
test
outsb
adc
mov
sub
outsb
or
inc
imul
iret
pop
jle
push
pop
syscall
call
add
fmull
in
jb
xchg
outsl
aam
jp
bound
and
sbb
pop
sub
push
es
pop
cmp
test
jge
push
dec
push
call
dec
pop
inc
lods
pop
insl
jp
pop
adc
lahf
cs
mov
enter
push
xchg
push
mov
mov
mov
ljmp
jbe
lods
das
and
lods
das
xchg
cmp
out
insb
sbb
daa
imul
sub
das
or
ss
cmp
data16
les
ret
fnsave
jbe
and
rep
aas
jmp
mov
jae
iret
dec
outsl
cmp
rcl
cltd
xor
rcr
in
ljmp
add
xor
jg
das
sti
mov
test
insb
mov
aam
lods
dec
sbb
mov
je
pop
jg
xchg
jns
pop
ja
imul
repz
fdivrl
or
mov
sub
mov
in
fsubl
mov
push
sbb
or
sbb
nop
xchg
xchg
add
mov
and
cs
push
pop
adc
outsl
fisubrs
adc
mov
sti
mov
adc
imul
push
dec
insl
mov
dec
pop
in
fildll
adc
fucomip
movsl
fistpl
or
aaa
scas
rcr
push
out
shr
hlt
test
fsubs
mov
fists
push
xor
aas
les
pop
out
cmp
dec
ja
jp
sbb
mov
test
sti
and
lock
push
push
xlat
out
rol
or
aas
stos
inc
mov
xor
sahf
cld
data16
stc
out
scas
shr
scas
push
xchg
jb
jg
push
pop
cld
push
sub
lock
cld
add
pop
out
bound
mov
and
out
out
mov
cli
push
out
shl
or
jecxz
mov
mov
jbe
lret
jg
ret
or
sete
mov
pusha
imul
roll
adc
ss
mov
loopne
cld
cmpsl
imul
fsubs
adc
mov
enter
enter
xchg
xor
fnstsw
je
imull
icebp
mov
pop
push
pushf
mov
xor
insb
daa
sub
xchg
lahf
add
xor
pop
mov
jp
dec
test
cltd
push
jns
lret
mov
mov
pop
inc
or
lahf
std
push
inc
pop
mov
pop
inc
sub
lahf
out
pop
ficomps
push
mov
sbb
out
lods
call
xchg
lahf
push
mov
add
mov
fildl
rcrb
es
rcrl
lahf
test
mov
sub
lahf
pusha
in
scas
fnstenv
lods
sbb
pop
xchg
scas
ljmp
insb
in
push
mov
jb
mov
scas
xor
push
or
dec
mov
or
fistpll
sti
divb
fnsave
sti
fnsave
pop
scas
sbb
movsl
testl
stos
push
jp
pushf
shr
lea
fidivrs
into
test
imul
fstpl
mov
jmp
pop
aaa
lcall
push
add
clc
aam
inc
adcl
scas
pop
rcr
stos
push
push
jmp
or
cwtl
or
fsts
sbb
mov
pop
cmp
fcomi
std
push
cmp
adc
xchg
pop
mov
pop
lods
dec
and
xchg
shl
test
out
lret
ss
popa
ss
fsub
test
lods
xchg
xchg
pop
add
cmp
mov
mov
les
sti
test
jbe
pop
sub
adc
sbb
sti
outsb
in
mov
add
xchg
dec
sti
mov
add
jmp
mov
movsb
mov
clc
cmp
cmc
mov
icebp
in
cltd
xchg
pop
pusha
imul
adc
je
out
mov
fstl
sub
stc
push
inc
lret
pop
mov
mov
cmpsl
dec
mov
adc
sbb
jae
inc
xchg
lods
fsubl
repz
pop
pop
jge
pop
cmpsb
outsb
mov
pop
push
sahf
fsub
in
stc
sti
js
repz
popf
out
xor
test
cmp
stc
lret
movsl
mov
push
pop
jns
pop
inc
inc
xchg
pusha
xchg
ljmp
notl
ds
aad
cli
in
push
scas
roll
dec
cmp
popf
fwait
jns
sub
cli
lock
mov
outsl
dec
outsb
jb
faddl
mov
iret
pusha
fiadds
pop
push
es
pop
call
lahf
push
ret
xor
lahf
js
push
jp
aaa
push
cmp
xchg
test
xorl
out
test
add
dec
mov
xor
add
cmp
insb
adc
shl
adc
cs
pusha
mov
enter
test
in
iret
je
repnz
sub
push
idivl
cmp
lahf
cmp
les
roll
insl
push
xchg
scas
lret
adc
mov
jo
adc
and
scas
pop
mov
dec
and
sti
push
and
mull
insl
lods
fs
movsl
and
pop
mov
rcl
push
and
mov
shl
dec
or
sbb
or
jle
cmc
jecxz
pop
sub
inc
shll
out
mov
aaa
pop
mov
mov
xchg
xor
sub
and
inc
test
stc
cmp
nop
fisubl
xor
hlt
xor
scas
fdiv
xor
mov
mov
bound
adc
clc
mov
dec
push
xchg
shrl
ss
not
rclb
dec
ja
cmpsb
mov
outsl
mov
xchg
jns
test
or
sbb
ret
mov
xlat
jl
jns
in
mov
sub
sbb
or
xor
leave
sbb
push
xlat
lods
push
sub
adc
xchg
jmp
rclb
pop
mov
jp
pusha
adc
clc
push
push
dec
pop
cwtl
scas
push
fwait
cmp
mov
dec
push
sbb
inc
xchg
movsl
in
cmp
stos
mov
lods
sub
dec
inc
cs
inc
mov
pop
jp
imul
dec
xor
loopne
ret
loopne
push
pop
inc
pusha
jp
cli
xchg
jl
stc
dec
mov
stc
jle
add
xor
loopne
lods
cmpsl
sbb
hlt
ret
jno
popf
jo
clc
and
cmp
lock
nop
adc
fistl
add
push
fisttpl
ror
adc
pop
movsb
mov
fistpll
adc
out
div
adc
and
xor
push
insb
mov
lods
mov
push
dec
sub
sub
mov
lret
pusha
lock
loopne
xchg
sub
dec
pop
das
insl
aam
adc
adc
mov
lcall
outsb
and
out
sbb
mov
cmpsl
push
push
out
mov
xchg
out
and
xlat
int
mov
xor
inc
sbb
in
pop
nop
adc
push
repz
mov
xchg
inc
cmc
sti
ja
xchg
nop
nop
sbb
push
imul
fistpll
dec
notl
imul
es
sbb
in
mov
pop
jl,pt
aam
mov
add
out
fldt
fdivr
sub
cli
mov
lods
adc
into
xchg
mov
je
add
mov
push
push
xchg
jmp
sub
leave
jns
lock
sbb
pop
pop
mov
xchg
shrb
cs
lods
mov
add
mov
push
pusha
jno
jnp
in
xchg
xchg
pop
in
push
stos
sbb
imul
sbbb
push
scas
mov
mov
lahf
gs
sti
fmull
in
push
xor
dec
rcll
mov
pop
adcb
iret
out
inc
std
rep
mov
and
lcall
inc
cmp
enter
mov
inc
jp
push
out
daa
in
mov
adc
inc
les
pop
insl
imul
leave
cld
pop
call
xchg
xchg
adc
cld
dec
and
mov
out
push
sbb
mov
mov
push
add
aam
jnp
xchg
mov
int
dec
in
sbb
xchg
mov
jg
fucom
mov
push
push
call
ficoms
leave
fdivs
out
cmp
mov
mov
mov
std
pusha
cmp
mov
mov
mov
push
pusha
ficoml
mov
insl
cmp
scas
mov
leave
push
pusha
pop
cmpsl
pusha
or
out
test
cmp
imul
mov
inc
cmp
sub
cmp
push
outsb
mov
loope
data16
push
fimull
push
adc
pop
cmp
inc
scas
pushf
add
jbe
xor
push
xchg
add
cmp
sbb
lcall
shrl
scas
push
add
push
add
lret
out
cmp
mov
jg
cwtl
add
dec
loopne
gs
xor
jecxz
pop
and
scas
lods
in
push
pop
mov
xor
and
enter
xchg
mov
adcb
fnstenv
pop
mov
adc
mov
jno,pt
clc
mov
xchg
dec
adc
ret
pop
adc
movsb
fs
notb
mov
mov
scas
ret
and
imul
push
aam
in
push
xlat
std
dec
das
mov
fistpll
and
pop
lods
push
rolb
mov
push
cmc
sarl
push
inc
push
lock
fcomi
push
dec
sbb
dec
mov
mov
fidivrl
push
or
xlat
cmp
ds
insb
enter
add
adc
mov
rcll
xor
inc
inc
repz
mov
int3
rorl
cmp
scas
shl
mov
and
lods
add
xchg
jno
rcl
out
inc
jle
push
xchg
mov
rcl
xchg
and
or
dec
lock
sbb
pop
push
mov
lods
lods
push
jns
jnp
jp
push
mov
xor
scas
push
roll
mov
icebp
xchg
sub
ror
push
rol
insl
xchg
in
int
and
jmp
insb
fsub
xorb
popf
out
push
jle
loope
ret
cmp
mov
cs
push
loope
push
loope
imul
imul
stos
dec
jg
std
cmp
push
xchg
mov
jp
imul
xchg
icebp
cmpsl
lock
movsb
push
icebp
push
push
test
fwait
paddsw
xorl
adc
pop
sahf
or
add
xorl
icebp
dec
loopne
mov
stc
leave
testl
clc
or
mov
fs
push
shlb
mov
jp
jo
push
out
pop
outsb
adc
in
data16
mov
dec
jbe
and
addr16
push
inc
mov
dec
or
mov
dec
mov
mov
xor
xchg
jno
pop
loopne
xchg
data16
inc
mov
nop
push
test
iret
loopne
jo
std
sti
int3
xchg
sti
push
mov
fstpl
bound
mov
mov
adc
inc
xchg
mov
dec
lret
movsl
test
fldt
push
scas
lock
mov
push
out
rcrb
int
test
cmpsl
imul
cmp
push
dec
or
repz
jp
sub
mov
clc
xchg
pop
test
add
xchg
inc
ret
mov
mov
lods
push
sti
fsubs
or
iret
dec
push
push
loopne
and
inc
cli
fstpl
push
fstpl
push
jl
jnp
xchg
push
dec
iret
sub
dec
dec
pop
or
xor
aad
mov
mov
cmp
sbb
dec
push
loop
lret
popa
leave
push
popa
popf
ret
jp
pop
jbe
push
ret
arpl
add
out
mov
dec
scas
repnz
xlat
add
imul
or
btr
out
inc
subl
repnz
lahf
mov
mov
add
jecxz
pop
call
scas
mov
jno
adc
lcall
int
addr16
cmp
push
adcb
and
clc
test
push
add
mov
lea
xchg
add
lods
cmc
jns
subb
sub
add
sub
xchg
mov
fnstenv
push
loope
xchg
rorb
mov
mov
adc
insb
mov
repz
sub
push
pop
xchg
xchg
dec
cmpsb
xchg
cli
adcb
cmpsl
shl
jge
in
or
push
adc
push
data16
sbb
mov
out
imul
pop
dec
adc
push
and
cs
rep
lock
cmc
addr16
cld
les
imul
ret
pop
rorb
movsl
sub
sub
jp
addr16
mov
dec
mov
push
pandn
mov
fiaddl
out
push
stos
and
insl
sbb
dec
stos
in
xor
jbe
mov
dec
mov
bound
sbb
imul
lahf
shrl
ss
sub
ret
sti
xchg
push
leave
xor
mov
mov
leave
imul
jbe
dec
mov
jbe
icebp
mov
out
cmp
push
mov
cli
sub
add
cmpsb
jp
adc
loop
fsub
fcomi
cmp
fs
repz
add
int3
sti
vmovhpd
add
push
lahf
fdivl
loop
jg
push
sbb
stos
cmp
mov
call
cmpsl
jmp
or
ja
andb
repnz
nop
shl
xchg
shll
jg
in
adcl
jp
push
jp
mov
inc
jmp
dec
jl
cwtl
add
xchg
neg
sub
cli
sub
xchg
adcb
insl
or
mov
les
pop
out
leave
je
arpl
lcall
fmulp
mov
movsl
cmp
out
sbb
pop
jb
lock
mov
insl
ja
dec
xchg
inc
loopne
mov
sbb
scas
lahf
xchg
sub
outsb
scas
loopne
xor
movsb
xchg
fisubl
xchg
lret
or
mov
pop
ljmp
ret
push
mov
pop
mov
insl
mov
movsl
cld
sub
sbb
push
insl
in
add
push
nop
fisubrl
out
cwtl
cltd
test
jecxz
mov
ljmp
xlat
mov
or
cmc
push
mov
lods
cmpsb
xor
enter
inc
mov
jmp
push
xor
ror
pop
out
cmp
and
add
mov
das
and
dec
and
out
pop
fisubrl
inc
xor
or
push
mov
rolb
imul
cmp
xor
loope
xlat
inc
cmp
sbb
movsl
shl
dec
fcompp
scas
inc
insb
pusha
test
push
xchg
adc
sub
adc
leave
fsubr
jp
sbb
mov
add
xorl
cmp
aad
fwait
dec
fdivp
pop
lock
xor
push
aam
inc
push
xchg
jl
lock
dec
pop
push
jb
dec
lock
cwtl
push
lods
mov
lods
test
sbb
insb
sbb
inc
fdivrl
add
mull
or
jecxz
call
cmp
mov
imul
push
loopne
es
bound
push
mov
iret
outsb
data16
rep
dec
mov
pop
imul
sub
mov
ror
dec
out
inc
cmp
bound
ljmp
xor
cmp
test
jecxz
lret
jb
push
jb
or
push
xor
jb
push
lret
jb
dec
jge
cmp
fldl
mov
scas
jae
or
fiadds
scas
jmp
sbb
rcll
leave
push
adc
push
adc
adc
fadds
xor
or
and
aas
and
push
push
and
xchg
cli
inc
and
dec
xchg
xor
jg
or
bound
mov
jp
xor
pop
cmpsl
clc
xor
cmp
imul
mov
jns
adc
sbb
scas
call
leave
jno
adc
ret
cmp
inc
xor
aaa
inc
cmp
cmpsl
jo
lea
test
jno
je
xchg
dec
push
loop
jo
pushf
xchg
rcl
xchg
xlat
dec
cmc
imul
xor
shr
mov
cmpsb
repz
adc
lods
gs
sbb
add
rolb
jecxz
je
rep
or
dec
les
ds
stos
rcll
adc
sarb
inc
jecxz
lds
dec
test
sahf
stos
fs
test
xchg
mov
xor
push
xlat
jp
jecxz
push
out
sarl
cwtl
out
pop
ret
cmpsb
dec
ss
push
mov
lods
repz
cs
fnstsw
mov
test
jbe
add
fucomip
push
sub
xchg
repz
test
sbb
sbb
add
out
mov
pop
mov
cld
orl
lea
dec
adcl
push
pusha
subl
jl
in
insb
in
adc
daa
sub
sub
jp
jbe
leave
sti
fs
in
xchg
and
es
xchg
pop
enter
out
xchg
adc
in
adc
pop
inc
sbb
mov
in
adcb
test
jo
imul
cmpsl
jmp
into
cmp
lahf
xor
nop
add
sub
and
ret
mov
mov
mov
std
das
jecxz
aaa
loope
xlat
cmp
in
cmc
push
lock
cmpl
ja
xchg
dec
test
xor
dec
cmpsb
inc
cli
cs
daa
sete
and
cmp
jno
sbb
pusha
loop
dec
insb
aaa
lods
add
sti
jno
in
jecxz
xchg
test
cmp
mov
insb
adc
je
mov
pop
sub
mov
repz
sti
mov
mov
mov
dec
mov
mov
pop
sti
sub
xlat
dec
insb
lcall
insl
in
ss
xchg
add
stos
jl
xchg
flds
dec
jle
subb
aam
int
ss
pop
sbb
sub
pop
mov
pop
mov
movsb
lahf
arpl
out
push
inc
sbb
mov
mov
leave
inc
call
sti
push
jl
imul
imul
and
and
push
call
popf
sub
adc
push
jns
xchg
outsl
push
push
fbstp
mov
fnstsw
mov
cltd
cmc
ret
imul
cmp
xchg
fs
loopne
scas
add
scas
xor
jp
arpl
sub
xor
pop
sbb
push
mov
dec
pop
jecxz
pushf
xchg
inc
cmpb
rcl
adc
jl
push
add
call
adc
or
in
mov
sar
mov
fwait
arpl
xlat
pushf
aaa
or
scas
pop
jae
lret
popf
jp
jae
jmp
sbb
int
stos
sbb
sub
cmp
movsl
in
cwtl
xchg
sub
outsl
in
test
test
inc
add
icebp
xor
clc
fstp
lods
dec
xor
sahf
lret
adc
repz
dec
cmp
xchg
stos
jb
repz
pop
jp
stos
mov
dec
dec
fimuls
mov
pop
fcomp
aas
sub
push
adc
ret
dec
sbb
sub
imul
movsb
adc
mov
test
pop
cmc
repnz
jp
push
in
scas
fbld
push
lock
and
lcall
dec
imul
aas
repz
insb
xor
insb
xor
bound
imul
cmpsl
pop
mov
lret
inc
adc
fcomi
cmpsl
mov
adc
or
xor
scas
ss
aaa
adc
adc
fstpt
inc
icebp
cli
nop
dec
andb
rcrb
mov
push
inc
test
inc
scas
outsb
fstl
sbb
les
fcoms
lods
scas
xchg
or
shrb
out
pop
es
xchg
negb
aam
cmpsl
and
mov
loopne
out
lods
pextrw
test
xchg
pop
and
in
mov
mov
in
movsl
xchg
jmp
cmc
lret
in
xchg
xor
scas
aam
jl
repz
push
adcb
imul
or
add
leave
adc
in
jae
mov
and
jae
jae
fbstp
inc
push
cmc
in
xlat
cltd
push
cs
mov
call
js
mov
ljmp
addr16
cmpsl
mov
popf
outsl
mov
jne
lods
insl
mov
dec
cs
icebp
and
dec
or
sbb
hlt
xor
mov
push
stos
inc
popf
mov
and
xchg
in
stos
test
popf
sar
nop
lods
outsl
sub
outsl
call
cmp
sbb
test
out
in
fwait
xchg
push
lods
sub
jne
xor
imul
sbbl
xchg
sub
sub
sub
test
dec
pop
sahf
xchg
sbb
and
iret
mov
xchg
imulb
hlt
inc
sub
xor
adc
rclb
mov
jne
in
jno
sbb
test
aam
dec
pop
test
xchg
test
sbb
sub
xor
fnsetpm(287
repz
in
inc
ljmp
push
add
add
jbe
movsb
adc
ret
jb
lods
lock
arpl
hlt
push
sub
mov
lock
mov
add
in
clc
movsb
push
in
lods
sub
or
and
mov
xor
popa
in
sbb
push
cmp
xrelease
add
fs
mov
jge
out
fstp
pop
ljmp
push
fucomi
insb
xchg
dec
inc
and
inc
test
mov
add
dec
lock
inc
pusha
testl
dec
aam
push
lds
loop
xorl
xchg
push
scas
into
fwait
hlt
push
push
push
pop
push
jo
scas
aam
sbb
push
int
push
push
add
push
shrb
and
stos
xchg
sub
push
add
scas
fldenv
lcall
mov
pcmpeqb
or
out
in
mov
cmp
mov
dec
sub
mov
xchg
popa
mov
jae
push
lcall
and
push
rorb
adc
aas
pusha
jg
lret
sti
jo
xchg
imul
mov
sub
sbb
push
jmp
test
out
or
cmp
sub
adc
in
cld
sti
jno
int
je
and
and
sarl
and
scas
dec
lea
xchg
imul
mov
je
xor
jp
sub
dec
pop
xor
xor
out
dec
lds
mov
or
into
pusha
cmp
fdivrs
push
rorb
and
push
es
es
and
mov
sbb
sbb
fldenv
lret
arpl
std
add
mov
mov
lret
in
cmp
add
pop
or
mov
insb
aam
aam
pop
jns
jge
xchg
add
push
fmulp
or
nop
jns
in
jp
aad
in
mov
mov
shrb
out
in
pop
outsb
push
out
mov
out
cmp
aad
outsb
mov
push
in
loope
popa
pop
aad
bound
lahf
cld
in
fnstenv
ja
push
inc
cld
jmp
in
mov
scas
sub
xchg
out
in
pop
mov
jmp
rcll
enter
out
out
call
ret
mov
dec
mov
cmp
mov
xchg
push
cmp
cmc
or
sti
hlt
cmc
push
lods
jnp
les
mov
inc
lods
insb
push
cs
insb
mov
je
or
rclb
ss
in
scas
xchg
test
add
lods
test
fistps
pusha
add
scas
add
popf
pop
lods
gs
mov
cmp
js
test
lret
out
mov
fstl
in
mov
jns
pop
xchg
xchg
cmpsb
nop
imul
cmp
inc
lods
insb
movsl
xchg
mov
push
sbbl
add
xchg
mov
xchg
lcall
enter
divl
lds
movsl
stos
repz
movsl
out
mov
mov
cld
sbb
lret
pop
and
scas
fucomp
push
xor
mov
cld
mov
movsl
dec
out
cmp
leave
xor
mov
lret
repz
mov
mov
sbb
lods
and
insb
dec
out
daa
ret
loop
stc
inc
pop
pusha
insl
movsl
cmp
imul
push
mov
pusha
ss
das
cs
popf
xchg
fdivs
jbe
insl
sbb
push
idivb
movsb
movsl
adc
inc
jmp
lahf
iret
jg
in
push
cs
mov
xchg
mov
sub
bound
in
mull
inc
dec
into
jne
aaa
adcl
push
mov
xor
cltd
adc
sbb
inc
call
jbe
out
and
sbb
inc
xchg
adc
inc
iret
std
push
sbb
scas
adcb
mov
and
add
cli
out
out
mov
sbb
and
stos
jb
lock
xchg
mov
dec
sbb
xor
stos
jge
dec
mov
jb
aaa
mov
mov
cs
sub
das
cli
fwait
jp
inc
repz
xchg
cli
jbe
cmp
jbe
push
xor
gs
add
add
push
and
data16
mov
add
ja
cmp
cmp
imul
fdivl
testl
mov
jecxz
sbb
add
cs
in
aad
insl
mov
and
adc
mov
repnz
jne
out
mov
sarb
popa
and
aad
push
subb
inc
jo
imul
testb
inc
out
ja
sub
xlat
or
mov
jne
shl
xchg
cld
cmp
ss
in
in
mov
sbb
movsb
lahf
dec
ror
cmp
adc
xor
push
jne
dec
xchg
repz
sub
ret
jg
movsb
test
repz
pop
out
push
mov
stc
inc
ds
iret
scas
jg
push
sti
pop
adc
mov
sub
sbb
in
test
int3
stc
lock
addr16
leave
lock
jp
push
pop
push
pop
cmp
or
xor
negb
ss
sub
notl
push
xchg
imul
adc
imul
xor
fcmovne
cmpsb
pop
pop
inc
lret
repz
sti
ljmp
js
xchg
xchg
cmp
adc
or
fisttps
cmp
lahf
test
mov
inc
movb
mov
stos
ret
shlb
xor
in
leave
mov
lods
jb
dec
and
push
mov
in
cmc
cmp
insb
stc
xchg
push
popa
scas
mov
pop
jg
mov
sti
push
pop
pop
pop
pushf
scas
jb
lret
es
cli
pop
ljmp
sub
push
push
movsl
stos
in
jle
fsub
inc
lret
movsb
mov
lock
ret
push
inc
push
sub
dec
xor
outsb
dec
in
movsb
out
push
out
add
mov
test
push
xor
lods
stos
inc
stos
jmp
ss
jg
inc
xor
arpl
cli
clc
cmpsl
sub
push
sub
push
sub
and
adcb
jp
mov
test
jbe
clc
mov
dec
mov
jne
mov
pop
add
cmpsl
adcb
or
pop
jb
xor
adc
mov
cmp
fwait
pop
dec
stos
mov
xchg
sub
or
mov
push
rorl
inc
dec
movsb
sarb
cmp
xchg
mov
xchg
in
fisttpl
cmp
lret
jnp
jle
dec
dec
mov
pop
loope
enter
sbb
or
add
add
add
xchg
stos
enter
mov
lds
out
lods
insl
dec
sbb
xorl
pop
inc
cli
xchg
daa
mov
testb
int
sub
jb
lret
push
inc
dec
cwtl
aad
cmp
fcomps
jge
out
cli
push
pushf
out
insl
sbb
test
cld
sbb
dec
fwait
cli
enter
jle
jmp
push
cmpsb
fmull
mov
ss
xlat
inc
cmp
cmpsb
cmc
cmpsl
add
mov
mov
pop
cmp
cwtl
mov
sarw
mov
enter
movsb
mov
divl
stos
in
add
pop
dec
push
std
sub
sbb
and
and
or
or
mov
out
es
fcmovne
sub
data16
push
dec
mov
shr
sti
push
cmp
sbb
xor
adc
push
sbb
or
rolb
clc
cmc
jmp
add
add
iret
ret
dec
stos
sub
dec
and
push
and
dec
mov
aaa
sub
movsl
idiv
xchg
pop
cmp
xchg
or
jo
inc
pusha
inc
inc
xchg
jecxz
test
ret
leave
testb
mov
dec
insb
cmp
cmp
or
push
lock
in
cmp
mov
in
mov
xchg
sarl
out
loopne
cmp
inc
out
mov
sbb
xchg
cmpsb
xorb
pop
mov
stos
dec
pop
or
dec
push
stos
pop
add
cmp
lds
xchg
pop
cmc
mov
or
fisttps
inc
aam
testl
pop
aas
mov
dec
sbb
xchg
int
or
outsb
daa
jg
xchg
sti
push
inc
test
pop
fdivrl
subb
repz
cmp
pop
inc
fwait
cmp
jmp
xchg
mov
cmpsb
cmc
in
jae
xor
in
stc
jb
mov
cmpsb
xor
jp,pt
insl
test
test
and
xchg
xor
mov
rep
lock
jno
mov
cld
mov
adc
in
lods
aaa
rcr
mov
mov
cmp
push
mov
test
and
mov
and
push
aam
or
repnz
stos
and
sbb
mov
cmp
pop
inc
adc
sub
inc
mov
dec
mov
ficomps
or
lds
popf
into
jle
push
inc
jnp
inc
mov
cmp
jecxz
ret
push
inc
daa
loope
xchg
fld
sub
xchg
jle
hlt
xchg
pop
inc
add
jl
sub
sub
in
mov
data16
mov
out
mov
pop
and
push
and
inc
lods
mov
lock
cmpsb
outsb
dec
cmp
jbe
push
xor
outsl
in
lret
push
pop
lods
add
add
rclb
jb
imul
roll
inc
es
cmc
sbb
cmc
jbe
out
out
or
sti
pop
jo
andb
push
jg
jl
leave
jmp
jmp
mov
aam
mov
test
pop
sub
enter
jp
mov
cmp
dec
adc
aad
mov
adc
jb
dec
mov
lock
and
jbe
cmp
les
sub
pop
ret
pop
sub
mul
test
mov
dec
cmp
mov
pushf
pop
mov
daa
cltd
and
cwtl
in
mov
xchg
mov
pop
inc
out
sub
sub
push
lods
imul
cld
popf
cmp
and
faddl
push
xor
mov
and
ds
roll
sti
mov
imul
mov
pop
xchg
mov
xchg
pop
xlat
sti
test
and
popf
leave
aad
xchg
scas
out
lock
stos
sbb
pop
cmp
sahf
cld
sub
aam
sti
pop
or
mov
mov
pop
and
inc
shrl
jno
or
xchg
pop
out
push
push
mov
mov
mov
cmpsl
mov
sub
xchg
faddl
leave
int
mov
dec
xchg
mov
fstpt
jno
and
fwait
lret
inc
daa
sbb
daa
sub
xor
mov
lcall
cli
add
imul
mov
sarb
sub
mov
mov
daa
cmc
movsb
sub
les
divb
or
add
fidivrs
mov
out
das
xchg
aaa
jo
cmpb
das
mov
sub
in
lods
sbb
out
in
or
inc
xchg
ret
addr16
push
pop
scas
outsb
inc
stos
sti
out
xchg
dec
xchg
aaa
xchg
ret
mov
cmp
xchg
add
jg
pop
rol
adc
decl
in
pop
lods
mov
ret
cmp
adc
and
add
pop
sub
pop
call
mov
lock
adc
sub
lods
adc
imul
push
xchg
sbb
shrl
pop
cmp
jno
pop
push
ss
xlat
dec
insb
mov
and
lcall
and
xchg
add
mov
in
sub
cmp
adc
xlat
and
jmp
stos
xlat
jmp
sub
movb
sub
push
mov
or
sbb
sbb
dec
adc
mov
push
lods
push
imul
jae
add
pop
push
push
ret
or
roll
mov
push
fistpll
out
fimuls
push
mov
cmp
jne
test
add
std
les
cmp
es
mov
call
lret
in
movsl
push
jmp
in
dec
enter
divb
jecxz
pop
push
daa
sarl
pop
adc
adc
push
xchg
xor
andl
addr16
jl
test
pop
dec
fisubrl
xchg
sub
or
pusha
addb
movsl
lcall
xchg
mov
sbb
data16
add
and
daa
sbb
ds
xchg
call
insb
icebp
jno
xchg
rorl
jecxz
lahf
mul
test
cmpsb
cmp
inc
daa
xchg
mov
cltd
std
imul
sbb
push
inc
scas
xor
push
xlat
lock
cmpsl
pop
cmpsl
mov
push
ds
test
flds
and
repnz
xlat
xor
push
jb
pop
lods
cmp
xchg
cmpl
and
jge
push
mov
ja
dec
dec
mov
push
mov
inc
lods
sub
mov
mov
add
mov
aas
daa
pop
push
pop
ror
or
mov
adc
or
pop
and
in
xor
aam
pushf
shrl
and
gs
xchg
mov
inc
push
out
sbb
add
in
in
add
pop
xor
je
pop
sub
jb
je
lret
lea
je
mov
pop
shl
mov
sub
lods
std
daa
in
cmp
xlat
fdivs
add
jle
divl
xchg
xchg
add
repz
pop
xchg
dec
movsl
mov
push
pop
cld
push
repnz
test
adc
or
jmp
movsl
sub
push
push
cwtl
sbb
adc
stc
aad
orb
imul
add
add
mov
sub
mov
adcl
or
mov
into
pop
mov
ja
push
ja
push
ja
shrl
inc
mov
push
test
in
bound
leave
pop
pop
sub
push
ljmp
out
xchg
cmp
mov
mov
xor
dec
fisttpll
cwtl
add
xchg
adc
mov
push
hlt
add
xchg
or
scas
push
pop
inc
mov
push
adc
push
arpl
xchg
scas
cmpsl
or
test
or
sub
mov
and
xchg
decb
push
cltd
insl
jl
mov
add
cwtl
mov
adc
xchg
push
xchg
dec
test
cmp
frstor
jno
flds
dec
stc
scas
inc
xor
mov
sub
jl
mov
icebp
sub
dec
leave
jl
rol
aaa
adc
fildll
out
pop
xchg
out
pop
in
ret
jg
or
sbbl
push
xchg
rorl
repz
mov
xchg
insl
jp
cmp
loope
cmp
repz
pop
in
jp
mov
mov
dec
jae
xlat
decb
cmc
pop
insb
jl
dec
lods
mov
jbe
push
cmp
mov
mov
pop
into
lcall
cmp
xor
enter
push
inc
cmpb
fidivs
insl
push
bswap
daa
into
add
std
cwtl
stos
xor
or
pop
andl
push
enter
enter
leave
cmp
repz
inc
testl
aaa
add
jge
fldcw
pusha
sub
sti
dec
and
xchg
call
adc
imul
popl
cmp
jle
sub
fisttpll
pop
ss
sub
in
mov
pop
bound
sub
idiv
fs
dec
push
pop
call
sub
sub
mov
test
xor
xchg
mov
aas
ficoms
push
ret
fnsave
add
or
aaa
cltd
mov
push
aam
pop
call
mov
jmp
leave
incb
enter
jp
clc
pusha
sbb
pop
xor
testl
cwtl
push
out
insl
jb
push
add
je
xchg
push
dec
repnz
inc
xchg
sbb
mov
mov
inc
mull
mov
sarl
or
jecxz
dec
jp
jge
cmpsb
cmc
clc
data16
mov
and
or
icebp
rcr
push
f2xm1
or
jg
cwtl
sti
mov
or
mov
jb
dec
enter
out
in
or
jp
imul
cmpsb
nop
or
sub
lods
lods
dec
pop
pop
cltd
xlat
out
dec
aam
stos
repz
or
cmp
sarl
adc
in
mov
sarl
pop
mov
pop
sarb
loope
mov
cmp
dec
or
pop
mov
xchg
xchg
mov
mov
leave
cmpsb
inc
or
int
cld
xchg
mov
xor
jge
and
jb
pop
scas
dec
dec
mov
dec
sbb
xchg
sti
js
add
dec
jecxz
dec
xchg
cmpl
lods
and
add
ljmp
subl
mov
insb
mov
pop
sbb
cmp
mov
xchg
xor
sti
inc
repnz
add
shr
fdiv
and
movsl
mov
sbb
cld
call
mov
jp
sti
mov
popf
xchg
in
movsb
xor
inc
xchg
lret
dec
adc
mul
push
bound
mov
xlat
mov
dec
divb
cmp
and
push
imul
jb
sub
dec
insb
add
push
adc
adc
and
sbb
cmpsl
fwait
xor
in
xor
js
push
jbe
or
push
cli
insl
in
push
cmp
js
scas
push
js
lock
mov
mov
lret
repz
rcl
jge
cld
out
lahf
in
cmc
call
test
push
rclb
push
cld
push
inc
and
stos
mov
xchg
or
in
leave
mov
dec
pop
or
in
lods
sub
cmp
ret
xor
subb
pop
leave
outsb
lcall
sub
test
popa
fists
or
lods
idivl
xchg
push
cltd
push
or
mov
mov
aam
testb
sbb
popf
add
in
xlat
aaa
repz
outsl
mov
fmul
pop
xchg
push
test
jmp
jbe
imul
pop
xchg
jns
fstp
sbb
cli
subb
sub
out
out
leave
mov
cmp
iret
bound
repz
bound
lock
imul
fists
sub
jp
sub
movsb
push
js
mov
je
inc
leave
sub
add
dec
in
sahf
sub
push
lods
jp
mov
sbb
mov
rcll
mov
ja
jp
lock
pusha
repnz
sti
outsb
sbb
aaa
repz
repz
lods
ja
das
sbb
scas
jo
lea
pop
pop
mov
dec
adc
dec
leave
stos
jecxz
leave
adcb
push
mov
cmp
out
push
mov
dec
scas
pop
adc
pushf
pop
mov
repz
outsl
outsl
mov
out
stos
nop
aad
inc
adc
mov
cmp
add
iret
push
stc
dec
stos
cmp
aaa
aad
out
jne
aaa
jecxz
bound
repz
aaa
jp
fnstenv
fists
out
icebp
dec
xor
push
jno
xor
xor
repnz
cs
jb
lock
sub
sub
fwait
pop
cmp
and
fwait
in
insl
sbb
imul
adc
push
into
jmp
sub
or
in
sub
xchg
dec
sub
pusha
fs
idivb
out
cli
xor
sbb
fisttpll
push
mov
fwait
stc
jmp
xor
xchg
aam
mov
hlt
jno
mov
stos
fadds
mov
mov
in
cmc
cmc
daa
inc
add
xchg
sub
cmp
mov
mov
xor
push
mov
jge
push
mov
xchg
clc
decl
adc
mov
jmp
mov
test
jno
leave
in
ss
xchg
mov
mov
cld
je
pop
fistl
test
sti
jge
fstpl
popf
sbb
cltd
jp
js
mov
lods
jecxz
lods
fwait
xchg
cltd
cmp
pushf
lea
and
gs
icebp
xchg
or
bound
mov
cld
test
test
mov
jmp
fsubs
sub
stos
jo
subl
xchg
sarb
inc
ds
adc
mov
fadds
dec
cmp
insl
inc
call
jnp
cltd
add
cmp
les
jp
mov
push
cmp
mov
test
divb
inc
cmpsl
inc
int3
ret
jb
adc
clc
pop
mov
push
stos
cmp
lret
int3
add
leave
addl
xchg
dec
push
inc
dec
cwtl
add
add
inc
pop
pop
int
int3
jg
pop
sti
sub
xchg
out
jae
adc
ret
fs
mov
jp
mov
dec
divb
inc
in
jp
stos
dec
jae
aad
inc
fistpll
pop
cmp
mov
inc
aaa
and
popf
pop
add
push
jmp
inc
shrl
mov
xor
push
imul
mov
push
push
imul
cli
xchg
imul
sbbl
cmpsl
imul
fisttpl
or
movsl
jns
idivl
je
jns
push
sbb
sub
hlt
mov
or
repz
xchg
add
or
lahf
push
push
jp
or
sahf
inc
sbb
sbb
mov
lcall
sbb
imul
inc
jp
stos
dec
dec
cmp
sub
mov
mov
xchg
imul
pusha
xchg
mov
rcll
stos
jp
sub
int
jno
dec
mov
imul
or
popf
mov
in
cmp
cmp
mov
stos
in
lret
pop
iret
andl
fwait
imul
insb
dec
cmpsb
mov
jp
xchg
dec
cltd
or
shlb
mov
fs
rorl
push
mov
or
or
aaa
ss
js
mov
lret
cmp
cmpsl
and
out
test
loope
inc
shlb
xchg
scas
mov
insb
lret
movl
sub
imul
stos
repz
ficompl
test
add
xor
out
jecxz
push
aad
repz
push
push
pop
xor
push
xchg
out
and
addr16
ficomps
sbb
mov
jmp
dec
push
stos
mov
sahf
ljmp
cmc
in
shr
and
push
sti
xor
xchg
dec
in
mov
sub
lock
imul
inc
enter
sub
stos
pop
shrl
xor
fistpl
popf
cmp
out
stos
sub
mov
mov
xor
inc
ds
test
ss
sub
stc
push
cli
pop
sbb
mov
pop
mov
mov
jp
mov
jp
mov
jp
sbb
aaa
push
mov
mov
leave
adc
sbbl
scas
imul
lcall
leave
and
pop
lcall
stos
aad
repz
mov
jg
divb
test
push
mov
lods
into
shrb
inc
push
cmp
mov
scas
mov
aam
popf
mov
xchg
ja
scas
xor
mov
xor
mov
repnz
addr16
out
in
cmp
jmp
fs
sbb
jb
rorl
push
dec
popa
lret
scas
sti
mov
xchg
add
repz
xchg
test
push
call
pop
push
aam
shlb
dec
je
dec
add
pop
dec
dec
test
ja
pop
and
daa
arpl
popa
notl
ljmp
add
shrl
pop
adc
adc
xchg
pop
cmp
je
xor
je
add
sti
pop
pop
fstpl
lock
push
es
cmp
jge
repnz
cltd
adc
mov
push
pop
pop
setl
sti
rolb
insl
das
ret
outsb
xor
push
push
dec
das
inc
xor
call
push
pop
xor
inc
dec
or
sub
push
test
push
push
imul
dec
fsubs
setge
popf
loope
popa
pop
jp
adc
mov
fs
dec
and
popa
jbe
fwait
pop
push
in
pushf
sti
sarl
sub
mov
add
jp
jp
mov
pusha
sbb
ja
adcl
or
mov
push
jns
and
jno
pusha
loop
lods
or
das
mov
out
sti
pop
and
mov
mov
mov
cmp
xchg
or
in
pusha
fwait
sub
fsubs
jo
in
xor
test
rclb
loop
int3
sbb
pushf
xchg
push
push
sbb
adc
pop
repnz
sbb
sbb
push
jbe
pop
lahf
outsb
stos
shl
fmul
clc
jp
pop
dec
push
mov
sub
mov
aam
fucomi
pop
fs
aad
mov
mov
mov
sub
cmp
fs
leave
dec
jb
fdivrl
dec
lcall
in
xchg
xchg
aas
xor
adc
xor
cs
in
dec
imul
push
push
outsb
aaa
push
dec
pop
mov
adcl
pop
pop
or
imul
push
or
cmpsl
push
cmp
test
fidivrl
outsb
test
mov
push
lret
lret
pop
ja
or
lret
xor
lret
popa
das
pop
or
jp
int
or
sbb
push
jp
pop
inc
xchg
scas
shrl
or
ret
push
repz
xor
pcmpeqb
repz
popa
xor
fcmovne
jecxz
data16
dec
jle
stc
inc
or
test
frstor
faddl
ret
add
cmc
or
pop
fstpt
call
out
rorb
xchg
dec
push
mov
inc
sbb
jmp
rep
jmp
sahf
and
loope
repz
repz
jp
and
popf
loop
push
imul
fstl
out
mov
inc
dec
cwtl
mov
int
lods
sti
popf
adc
cmp
lods
adc
sbb
insb
scas
cmp
cmp
mov
jbe
add
mov
faddp
btc
test
mov
lods
mov
pop
pop
fsubrs
mov
ret
stc
adc
xchg
mov
pop
push
mov
dec
pushf
xorl
movsl
lret
popa
sub
mov
flds
push
pop
insb
fld
sti
aad
mov
lret
sbb
out
es
mov
or
pop
arpl
sub
mov
fdivrl
sarl
push
fwait
pusha
mov
lret
push
xchg
dec
inc
sbb
cs
xlat
sbb
cs
nop
pop
mov
scas
je
cmpsl
scas
stos
xor
and
pusha
lock
fistpl
dec
mov
aam
mov
out
les
mov
mov
clc
f2xm1
push
icebp
and
sti
filds
push
rcr
ds
push
dec
movb
xor
pushf
outsb
xor
cltd
push
add
in
push
clc
ljmp
test
or
sti
xchg
cmc
sbb
adc
aam
arpl
inc
xor
sbb
xchg
cmc
gs
push
dec
out
mov
loope
imul
fcomp
inc
icebp
xor
jne
test
popf
mov
sbb
repnz
mov
xor
jbe
sahf
dec
sar
ja
js
in
int
push
pop
sub
dec
repz
mov
jecxz
lret
dec
adc
dec
pusha
aas
mov
jp
mov
push
in
into
or
push
push
or
cmpb
push
mov
clc
sbb
rep
pop
mov
pop
sti
dec
lcall
test
pop
out
pusha
mov
in
or
leave
loopne
dec
loopne
pop
cmc
sbb
cltd
push
insl
js
imul
add
dec
mov
jmp
insb
stos
or
xor
fisttpll
mov
fldln2
test
and
es
leave
aam
out
test
lock
out
mov
xor
dec
sub
out
fcomi
jno
cmp
andl
movsb
push
pop
add
sahf
sub
mov
je
andb
xor
in
xor
pop
dec
mov
mov
popa
mov
fistpl
cmp
pop
lret
sub
hlt
cmp
stc
xchg
mov
bound
add
clc
push
cmp
pop
sub
lcall
pop
mov
push
jno
mov
aas
cld
test
fsincos
fwait
inc
cmp
cmpsb
repz
in
pop
cs
fldcw
pop
das
shrb
or
mov
sti
sub
mov
stos
jno
add
in
fwait
lret
xchg
jge
mov
and
shrl
imul
aas
adc
fcmovnu
inc
and
dec
adc
jns
push
jl
jecxz
clc
pop
aas
fwait
push
mov
imull
fcmovne
pop
vmread
sarb
out
pop
pop
enter
std
xchg
movsb
call
xlat
out
jns
adc
pop
push
fiaddl
ss
lds
fwait
jnp
mov
fs
dec
fdivrl
jb
xchg
andb
mov
mov
imul
outsb
repnz
leave
inc
dec
jns
cmpsl
std
shlb
cs
int
imul
js
adc
inc
call
dec
lcall
push
icebp
je
mov
ljmp
jno
addr16
cli
push
push
lret
leave
add
imul
add
sahf
mov
or
movsl
push
dec
test
xchg
sbb
xchg
fsubrl
mov
mov
sar
dec
imul
ret
jmp
mov
dec
jmp
inc
fwait
ljmp
cli
repz
push
je
cmp
mov
out
adcl
cmp
jecxz
dec
push
mov
cli
movsb
lret
adc
in
fdivs
loopne
in
jne
negl
shl
jmp
mov
push
repz
bound
arpl
mov
jbe
xchg
repz
aas
sub
sub
xchg
sub
cmp
das
ja
in
mov
push
jecxz
aas
sbb
mov
in
sbb
jp
in
fwait
pushf
pop
pop
inc
xchg
pop
mov
imul
or
hlt
cld
push
xchg
in
sub
loop
inc
out
loope
ja
cmc
in
fs
mov
icebp
test
cwtl
daa
and
push
cmpb
in
pusha
shrb
out
movsb
dec
dec
xor
cli
sbb
push
stc
mov
std
fcmovu
ljmp
lods
or
push
imul
out
sbb
movsb
getsec
movsb
cmpsb
xorl
mov
adc
xchg
cmp
inc
dec
xor
in
or
sbb
mov
fisttpl
mov
pop
dec
out
cmp
out
lret
add
xor
mov
jmp
outsl
lcall
aas
js
cmp
inc
in
add
in
xlat
lret
mov
mov
mov
loopne
mov
mulb
fmuls
xchg
jns
push
cmp
jmp
mov
movsb
mov
push
xor
add
and
mov
adc
stos
cltd
mov
jle
jecxz
push
jmp
inc
xchg
testl
sub
cli
dec
fidivl
jns
inc
mov
pop
sub
jl
lret
adc
push
mov
rep
lcall
fsubrl
xlat
fwait
addr16
orl
jle
cmpsb
xchg
cmp
or
loopne
jns
jbe
push
fnstsw
push
jp
test
sarb
jns
xor
aam
js
mov
push
cld
mov
jbe
or
jne
call
mov
jecxz
iret
mov
jp
jb
jbe
xchg
lods
cmp
jb
mov
ja
dec
pop
add
cmp
xchg
mov
push
mov
mov
outsb
cmc
mov
leave
mov
cmp
ret
sbb
cmp
push
and
cmpsl
fstpt
in
add
fiaddl
sarl
movb
js
xlat
dec
clc
cwtl
jb
cltd
out
mov
jbe
mov
or
testl
sbb
sub
jb
repz
mov
and
ljmp
lea
ficomps
scas
call
leave
insl
pop
idiv
jnp
movsb
stc
in
dec
sbb
fisubrl
je
pop
decl
insl
outsb
jbe
arpl
lds
mov
cmpsl
stos
in
pop
ds
out
sar
jle
pop
jg
outsb
aas
mov
testb
pop
fnstcw
push
dec
mov
mov
bound
popf
imul
bound
cmc
addr16
negl
dec
mov
imul
cli
or
or
dec
outsb
xor
rcll
cmc
inc
add
aad
cmp
pop
out
test
insb
pop
sysenter
pop
addb
push
cmp
movsb
sti
push
imul
leave
popl
add
in
lcall
filds
lea
mov
push
inc
mov
aaa
jbe
sti
dec
add
adc
aas
push
aaa
js
mov
mov
push
push
movntps
dec
add
jo
popa
jb
xchg
js
ss
cmp
push
xor
sub
enter
fwait
leave
mov
stos
in
hlt
cmp
cltd
push
push
dec
mov
aaa
xchg
gs
pop
xchg
fwait
inc
aam
push
jo
cli
subl
stc
enter
ja
adc
and
cmp
mov
dec
insb
xchg
repz
dec
jmp
mov
mov
fimull
push
pop
outsl
push
sar
jne
adc
ret
pushl
cmpsb
dec
imul
xchg
in
inc
fdivrs
pop
jmp
stc
or
jmp
sub
adc
inc
add
mov
stos
xchg
mov
cltd
std
hlt
stc
mov
xchg
mov
cltd
xor
inc
jge
jb
inc
sbb
jecxz
xlat
jmp
jns
mov
mov
xlat
cmp
stos
cmp
loopne
movsb
pop
test
js
push
dec
cmc
or
fimull
notl
push
dec
das
push
mov
inc
js
jle
sbb
adc
jmp
xor
ja
cmp
dec
in
sbb
idivl
dec
mov
push
shlb
out
out
pop
cmp
adc
xchg
add
pop
push
mov
test
jl
and
movsb
cltd
dec
mov
in
rol
jnp
mov
mov
mov
into
inc
inc
adc
mov
dec
nop
fwait
dec
pushf
outsb
mov
imul
mov
mov
fyl2xp1
lret
push
dec
sarb
ljmp
repz
cli
pop
jb
jno
dec
jnp
add
or
outsl
adc
aad
jns
lret
cmc
cmp
out
test
jo
xlat
test
cmpb
xchg
enter
js
out
or
aad
jns
pop
in
dec
or
outsb
mov
icebp
jbe
js
jbe
cltd
xchg
mov
or
repnz
mov
sti
push
repnz
gs
cmp
jno
jns
sti
lock
mov
jb
test
push
pop
cmp
xorl
jbe
push
pop
push
leave
cmp
xchg
and
nop
andl
and
daa
xor
leave
cmp
ja
in
mov
pusha
inc
bound
push
jl
test
push
fistps
in
push
jns
dec
jecxz
push
push
adc
sbb
inc
jo
cli
push
mov
mov
shll
dec
pop
push
lret
sub
fs
xchg
sti
test
add
test
movsb
mov
enter
pop
decl
mov
dec
scas
insb
sub
sbb
mov
decl
fisubrs
add
add
stc
mov
pop
mov
dec
dec
jbe
pop
cltd
in
inc
stos
mov
pop
test
movsb
xchg
cmp
fldt
push
mov
fldt
cmpsl
stos
dec
push
cmp
cld
mov
mov
add
out
lcall
inc
mov
fcomps
xchg
data16
outsl
stos
dec
jno
test
test
mov
fwait
xchg
test
push
adc
sub
lret
mov
loopne
pop
xchg
jecxz
stos
adc
xor
nop
sbb
fadd
sti
int
scas
or
insb
addr16
xor
aaa
in
mov
stos
sbb
push
into
jb
cmp
sbb
jns
popa
and
jns
arpl
popa
das
lret
sub
imul
mov
add
mov
mov
cmp
test
push
dec
dec
js
or
inc
fwait
rclb
push
shr
xor
mov
ljmp
and
loop
cltd
pop
jo
stc
mov
insl
fbld
cmpsb
add
sti
and
push
mov
pop
fwait
lcall
jno
dec
sbb
push
mov
fdivl
test
mov
pop
repz
fdivrs
jns
jmp
popa
movsb
ljmp
loopne
mov
pop
cli
sti
movsb
fdivr
pop
push
repnz
out
dec
ret
out
cmp
mov
jp
test
test
mov
sbb
divb
push
ja
lods
shll
into
inc
mov
add
jmp
add
mov
movsb
lock
mov
mov
ret
std
repz
xchg
mov
fs
stc
push
xchg
xor
add
push
filds
mov
pop
icebp
cmpb
dec
push
in
jbe
add
sub
fstps
mov
pop
lret
in
ror
cmp
add
dec
subb
jnp
push
lret
pop
insb
xchg
in
inc
dec
imul
mov
mov
jle
repz
push
mov
loope
lret
pop
cmp
push
repz
in
mov
clc
pop
movsl
jmp
mov
push
mov
ja
fisubrl
int3
sbb
stc
filds
inc
outsl
cmc
pop
idiv
xchg
sbbl
fistl
mov
mov
mov
sbb
clc
xlat
cli
jp
xlat
ljmp
and
jp
pop
jecxz
push
mov
mov
js
jl
hlt
cmp
mov
int
xor
ret
push
outsl
test
mov
sbb
pop
pop
inc
test
fldl
sbbl
jge
mov
jo
jp
xor
stc
and
cmp
bound
cmp
test
dec
dec
pop
enter
sub
xor
cmp
gs
cmpsb
xchg
lret
jmp
push
or
xchg
clc
stos
sub
mov
addl
pop
sti
stos
jl
test
mov
dec
push
leave
pushf
inc
stc
in
cld
xchg
lea
arpl
mov
sub
dec
inc
leave
sti
addr16
lock
xor
inc
pop
mov
stc
mov
mov
jp
imul
loop
adc
or
mov
in
lret
pop
aam
mov
lahf
shr
jp
lahf
xchg
ja
xor
inc
out
in
pushf
cli
push
xlat
or
xlat
or
aas
stos
jbe
lods
jo
pop
idivl
pop
adc
adc
lahf
or
fstl
mov
pop
push
ja
xor
mov
xlat
and
idiv
push
clc
pop
shlb
xor
rorb
adc
aaa
xor
mov
fwait
inc
frstor
ret
aas
xor
shll
inc
push
jbe
fstpt
push
pop
jp
test
adc
lcall
sahf
jo
push
repz
aas
mov
out
rclb
cltd
jmp
dec
imul
rol
push
dec
push
xchg
aad
jbe
xor
jae
mov
lret
jns
in
mov
ficomps
imul
jnp
stc
pop
std
inc
pop
inc
jge
and
jg
jge
mov
push
dec
stos
jecxz
mov
int3
fs
pushf
push
and
int3
cs
dec
in
sub
jae
iret
inc
pop
dec
or
pop
imul
inc
cmc
adc
fildll
in
sub
mov
insl
imul
jo
mov
or
ret
or
in
jmp
mov
jecxz
cmpb
xchg
loope
scas
xorl
cld
add
sub
or
fstps
test
and
jno
jae
fstl
insb
mov
shll
aaa
or
pop
cli
sub
or
aas
faddl
hlt
mov
ja
leave
pop
or
push
sub
xchg
push
inc
add
lods
outsb
in
fimuls
int3
mov
or
rcr
or
mov
pop
push
aas
xorl
hlt
cmp
sbb
imul
mov
xor
cli
fistl
sub
cmp
in
mulb
inc
xor
mov
mov
jb
imul
mov
jns
pushf
enter
ja
sti
jecxz
jmp
adc
in
jmp
gs
or
int
in
jecxz
sbb
sub
lret
fmull
js
jp
xlat
push
cltd
stc
mov
insl
jno
pop
imul
push
mov
das
fnstcw
mov
in
dec
mov
pop
pushf
leave
push
js
inc
xchg
add
mov
enter
dec
xchg
fists
cltd
cli
adc
dec
mov
cltd
ja
and
cmp
cli
cmpb
mov
adc
sub
pop
xor
mov
mov
cmpsl
dec
cmp
inc
out
cld
push
fbld
js
jecxz
pop
jecxz
xchg
jmp
dec
jns
and
push
xor
or
mov
lock
pop
mov
push
fwait
mov
inc
repz
sub
sbbb
mov
push
push
push
push
cltd
pop
sbb
push
inc
fucomip
dec
jnp
leave
pop
repnz
pop
mov
in
add
and
fsubp
aas
sbb
ja
sub
push
idivl
mov
or
js
inc
sub
out
jne
dec
int3
addr16
jns
jp
ljmp
mov
stc
in
mov
leave
insb
out
adc
adc
popf
inc
jnp
mov
and
scas
dec
jb
movsl
in
pop
inc
fnstcw
out
xchg
xchg
sbb
subl
rcll
enter
xor
imul
xchg
inc
in
out
jecxz
push
hlt
in
cld
mov
mov
mov
xchg
outsl
adc
jp
pop
mov
pop
sbb
notl
jnp
and
inc
sbb
jae
dec
xor
js
jecxz
mov
sbb
adc
stc
mov
into
cmpl
jge
jno
dec
push
and
popa
adc
xchg
cmp
mov
cli
aaa
inc
sar
popa
shr
test
push
xor
cmp
xor
jle
outsb
clc
ljmp
sub
int
pop
dec
jg
je
dec
mov
sbb
pop
sti
cmp
cmp
cwtl
stc
mov
lret
push
iret
cmpsl
ljmp
bound
imul
leave
push
xchg
sti
test
jp
mov
bound
xor
adc
and
sub
pop
cmp
outsb
lods
mov
movl
push
lret
jecxz
mov
push
xchg
add
hlt
xor
out
jb
dec
dec
loope
cmp
adc
xor
ja
xchg
xchg
jecxz
fmuls
aas
cmp
jg
jecxz
push
jbe
icebp
xchg
pop
push
dec
jae
shrl
cmc
cmp
jbe
stos
fwait
mov
dec
cmp
xorb
jmp
mov
jp
pop
scas
cmp
test
mov
sub
mov
mov
push
loope
push
repnz
fistpll
sub
movsb
sub
or
orl
mov
mov
pop
dec
test
mov
pop
mov
cmp
or
mov
inc
xchg
movsl
fildll
inc
mov
jbe
pop
jge
add
jp
aas
xchg
movsb
xchg
mov
and
fistps
cmc
shll
cmpl
movsb
pop
sbb
pop
cwtl
cli
pop
pop
mov
fisubs
insl
jp
loop
cmp
pop
stos
xchg
sub
or
sbb
hlt
stos
repz
xor
mull
jb
jno
mov
or
ja
in
ljmp
aas
push
div
cs
js
imul
xchg
pusha
and
loopne
jbe
jns
pop
rcl
mov
sbb
scas
sub
fdivl
mov
inc
pop
xchg
sti
fs
dec
jns
popl
adc
jp
mov
cmp
mov
in
push
cmp
pop
lock
jns
inc
dec
cmp
jp
filds
mov
push
sti
das
inc
mov
into
loopne
fcomps
dec
xor
out
mov
mov
arpl
jp
xchg
mov
shr
fildll
insb
enter
sub
or
mov
fstpt
jle
in
js
shlb
jno
out
push
lods
setns
test
sbb
push
mov
lea
lock
int
cmp
jo
out
pop
ja
lea
sub
pop
mov
inc
xchg
cmc
outsb
push
repnz
in
pushf
inc
mov
mov
jns
nop
jmp
sbb
pop
cmp
dec
jmp
adc
sbb
jnp
popf
test
xor
push
imul
cltd
pop
stos
push
cmp
mov
sbb
dec
push
arpl
pop
fs
adc
add
popa
mov
cld
push
xchg
pusha
jae
jecxz
inc
dec
xchg
cmp
mov
xchg
mov
push
mov
in
push
dec
mov
jbe
sbb
jb
inc
loopne
xchg
sub
inc
push
cmpsb
idivl
push
test
stos
in
xchg
aaa
pusha
inc
popf
mov
je
daa
hlt
mov
cmp
push
xchg
mov
pop
cli
out
movsb
jb
push
xor
clc
stc
push
dec
js
data16
xor
cmpsl
sub
mov
popf
daa
inc
cmp
jp
sbb
xchg
push
stc
xchg
rcl
je
xor
call
fimull
in
andl
leave
shll
push
xchg
int3
in
inc
xor
cld
js,pt
out
or
fwait
pop
mov
shll
mov
jmp
test
mov
imul
mov
sbb
jp
aaa
aaa
popa
cmp
loopne
mov
jecxz
push
je
lcall
popf
push
push
popf
cs
push
fs
sti
andb
pop
dec
sub
leave
push
ljmp
popa
dec
mov
cld
cld
enterw
stc
push
ds
mov
xor
mov
fnstsw
stc
inc
lods
test
mov
jp
mov
mov
imul
jbe
imul
sbb
mov
adc
imul
cmp
jbe
dec
mov
lcall
sti
movsb
jl
xlat
xchg
jmp
pop
jg
sbb
pusha
je
negl
sbb
mov
in
jo
iret
data16
dec
cmp
dec
in
data16
out
sbb
fs
imul
xlat
ja
es
push
mov
stos
in
push
pop
into
test
fucomp
xchg
push
rorl
add
js
in
test
xchg
push
ficoms
mov
shlb
js
sub
xor
push
lret
inc
lahf
dec
fwait
xchg
enter
dec
fcom
mov
sbb
dec
movsl
les
out
icebp
fdivr
push
stc
inc
fdivrl
cmp
or
xor
out
sub
movsb
or
pop
in
push
dec
jno
dec
aaa
pop
fimull
imul
mov
add
jno
in
andb
mov
dec
adc
lcall
jg
jne
and
aas
cld
call
mov
add
sti
inc
outsb
cltd
pushl
mov
lret
push
xchg
scas
mov
data16
fdivrl
and
mov
and
inc
dec
out
js
cmp
ds
mov
mov
xchg
mov
inc
pop
cmp
mov
mov
cmp
fsub
sti
xchg
sbbb
sbb
loopne
sub
fwait
mov
cmc
pop
fstps
cmp
dec
js
mov
data16
sar
clc
lcall
ja
pop
movsb
jne
imulb
out
das
add
lods
cmp
divl
sti
mov
or
or
lret
mov
xchg
xchg
dec
push
xchg
mov
mov
cmp
sti
mov
aas
cmp
mov
int3
jp
pop
jns
pop
adc
add
sbb
fxtract
outsl
cmp
adcl
jecxz
into
out
leave
bound
jp
jg
ds
dec
or
mov
xchg
jns
mov
cmpsl
fwait
pop
icebp
popw
adc
push
mov
xchg
test
pop
mov
popf
cmp
add
imul
mov
clc
xchg
inc
inc
lds
mov
scas
popf
or
rcl
jl
subb
cmp
mov
sar
add
imul
and
add
fadds
jbe
xchg
add
data16
cmp
dec
popf
pop
cmp
jecxz
fs
xor
or
xor
in
jecxz
or
xor
adc
data16
leave
into
jbe
mov
sub
jns
pop
mov
lahf
stos
pop
sub
adc
aaa
add
mov
push
add
ficoml
lcall
cmp
out
es
shrb
push
out
dec
pop
dec
in
and
mov
arpl
xor
adcl
outsl
push
jo
push
fldenv
jl
cmc
adc
lds
stc
mov
cli
stos
xchg
stc
inc
mov
sub
lret
mov
inc
or
adc
pop
in
call
xorb
andb
test
jbe
mov
mov
cmp
inc
sti
popa
fbstp
orb
les
jmp
jecxz
pop
sti
ficomps
js
je
cli
jno
cmp
adc
jecxz
fwait
cmp
adc
fcomip
mov
push
dec
sti
push
sbb
and
leave
push
call
dec
outsb
pusha
arpl
icebp
out
push
insb
icebp
mov
divb
loopew
mov
negb
mov
test
jno
mov
out
mov
pop
aaa
mov
mov
fnsave
fwait
cmp
push
mov
addl
xchg
jo
cmpl
dec
fistpll
mov
repz
mov
jg
dec
mov
iret
ret
jno
jns
int3
stos
add
out
fcoml
andb
add
dec
add
loopne
add
xchg
clc
mov
cmp
xlat
pop
sbb
subl
pusha
inc
lret
in
repz
xor
push
pop
jg
adc
cli
ja
insb
loopne
divl
inc
ds
pop
inc
sahf
adc
mov
test
and
mov
mov
mov
pop
jp
ja
outsl
push
shrb
enter
fs
outsl
add
xchg
je
clc
jne
cmp
cmp
aam
jge
push
ljmp
repz
fs
insl
imul
adc
jp
mov
jb
lods
mov
push
pop
dec
aad
popa
mov
jl
in
sbb
sbb
mov
add
inc
lods
dec
cmp
shrb
lret
lret
cmp
leave
mov
mov
cld
or
fmull
jecxz
mov
inc
cmp
movsb
sub
or
push
es
sbb
ja
in
sbb
cmpsl
mov
stos
in
and
data16
inc
push
push
pop
shrb
fimuls
mov
sub
mov
imul
pop
xor
inc
or
in
in
add
insb
mov
aas
fcmovb
jp
cwtl
mov
cmpl
push
and
sarb
mov
mov
lret
push
std
in
mov
frstor
pop
popf
inc
or
in
push
add
mov
cwtl
fdivs
cmc
pop
sub
xchg
enter
inc
inc
lock
jbe
push
pop
stc
jmp
repnz
inc
cmp
fbld
fdivrs
pop
fmull
sub
inc
add
dec
mov
cmp
lret
in
push
cmp
xchg
cli
int3
inc
pop
pop
insl
mov
or
xor
mov
dec
pop
dec
pop
in
push
std
js
mov
sti
cltd
stos
arpl
out
fistpl
xor
stos
xchg
repnz
ret
mov
cmp
dec
outsb
inc
int3
mov
sti
fisubrs
jecxz
pop
push
in
movsl
mov
pop
loopne
add
ja
jp
push
fcmovbe
xchg
fmuls
and
outsl
sub
outsb
adc
aas
les
ss
mov
imul
pop
mov
push
mov
andl
aad
lret
xor
cmp
cli
cmp
ret
sti
jp
pop
into
sub
adc
movsl
fdivl
jmp
jl
icebp
mov
mov
push
adc
mov
ss
sbb
stos
outsb
fwait
xchg
mov
inc
hlt
lret
xchg
jp
sti
scas
inc
push
mov
int
xchg
mov
stc
jbe
xor
fwait
pop
xchg
sub
pop
xchg
shrl
stos
mov
cli
xchg
sub
adc
inc
inc
int3
sub
fdivl
sti
arpl
aam
or
xchg
mov
iret
jb
jp
lock
dec
and
insl
popa
add
add
adc
outsb
ljmp
and
adc
leave
push
mov
icebp
mov
or
xchg
movsb
xchg
xchg
shlb
addr16
dec
rorl
jns
push
inc
mov
jbe
pop
fsubp
pop
in
enter
xchg
mov
sub
fs
popa
jecxz
stc
hlt
mov
pop
inc
sbb
pusha
in
push
outsl
lret
pop
sub
mov
mov
mov
cmp
lods
aas
stc
std
xor
mov
mov
xchg
pop
neg
call
icebp
je
push
jbe
mov
out
mov
lods
bound
push
cmpsl
xchg
imul
mov
mov
mov
dec
xchg
scas
in
inc
add
jmp
dec
movsl
jl
scas
bound
lret
mov
sub
arpl
imul
jbe
stc
and
scas
jg
fistpll
fmuls
cld
lods
jecxz
add
int
jns
icebp
mov
cwtl
pop
jl
xchg
dec
mov
aas
leave
mov
gs
dec
mov
cmpsb
fistl
sub
push
dec
sbb
jb
add
mov
es
mov
scas
mov
movsb
push
fcompl
jecxz
pop
cmp
and
mov
stc
jns
jb
movsb
fwait
mov
jne
and
cli
and
jp
cmp
icebp
or
jmp
into
dec
cli
cmpsb
in
lcall
cmc
inc
push
mov
sti
mul
adc
jp
adc
mov
sbb
sub
xchg
imulb
inc
rorl
in
filds
mov
or
push
mulb
mov
mov
dec
stc
repnz
mov
push
enter
jl
push
cmpsl
add
inc
push
in
mov
jp
fstl
sbb
aas
pop
mov
call
sbb
cmpsb
mov
out
movsb
sti
cmp
insb
movsb
sbb
xchg
aaa
dec
pop
mov
cmp
push
xchg
cmp
mov
mov
mov
push
xchg
pushf
pop
mov
push
loope
stos
sti
dec
mov
jns
test
imul
inc
mov
sti
mov
mov
icebp
stos
cs
jns
push
fisttpll
movsb
imul
pop
hlt
aad
aaa
inc
in
pop
in
cmp
mov
in
ret
mov
dec
ret
daa
pop
xchg
mov
aaa
test
or
sbb
sbb
lcall
sub
mov
clc
inc
inc
mov
xchg
mov
pop
add
mov
icebp
addr16
pop
xor
sarb
mov
in
mov
jnp
mov
test
adc
scas
mov
cmp
loop
popa
mov
jle
fnclex
sbb
pop
xchg
cmp
lods
addr16
cltd
in
fidivrs
push
sbb
lods
test
adc
xor
cwtl
cld
fcmove
nop
fcmovnu
stos
xchg
jg
out
xor
mov
roll
stos
adc
ror
push
out
mov
les
or
push
aas
inc
jp
mov
cmp
adc
int
sbb
mov
out
movsb
mov
pop
popl
dec
push
iret
scas
dec
fwait
and
sub
div
pushf
cltd
stos
ljmp
cmp
jbe
popf
mov
xchg
add
rol
mov
ljmp
mov
pop
jo
cld
insl
popa
xchg
add
sbb
aas
das
outsl
inc
mov
ss
hlt
jmp
cmc
in
int
jns
btc
int
mov
stos
stos
and
les
push
testl
imul
test
mov
xchg
mov
insl
xchg
out
pop
repz
cld
push
add
cmc
xchg
cmp
lock
mov
js
xchg
mov
shr
sahf
inc
sbb
fnstcw
add
ljmp
lock
lcall
shl
es
jecxz
clc
sub
push
bound
ja
jg
push
cmp
ret
clc
add
ret
cmpsb
clc
cmp
mov
jo
mov
fprem1
mov
xor
aam
arpl
repz
loope
push
xor
fwait
cld
jp
xor
and
mov
fstpt
in
bound
lret
xchg
mov
cmp
cmpb
in
leave
jmp
aaa
bound
mov
cwtl
jp
jmp
cmp
push
scas
push
lret
repnz
jecxz
xor
mov
adc
inc
es
jno
out
push
xchg
jns
gs
lock
cmp
fisubl
enter
adc
mov
jns
cwtl
stos
adc
in
nop
xchg
inc
aad
jbe
fs
mov
ret
mov
xchg
cld
xchg
lret
cmpsb
orl
loop
stos
sarl
jmp
xlat
adc
mov
or
pop
je
movsb
dec
add
inc
fsubl
or
and
inc
ja
cmp
mov
jae
sbb
pusha
and
arpl
aad
mov
and
pop
scas
lcall
imul
sti
jb
mov
pop
aaa
leave
push
adc
push
in
cmp
cli
cmpsb
test
push
fnstcw
adc
in
xor
in
dec
loop
out
cli
aas
aam
mov
lods
jp
mov
mov
or
jg
jp
xor
repz
mov
xchg
jne
in
push
inc
add
jp
movsb
mov
cmp
pushf
pop
insb
jns
inc
dec
push
movsb
lcall
in
test
jns
cltd
push
xor
mov
fucomi
xor
push
lea
shlb
cmp
xlat
xorb
hlt
pop
xchg
sub
pusha
fnstsw
fistpl
cmpsl
stos
dec
sbb
inc
sti
lret
jb
jmp
or
insl
enter
mov
enter
add
jp
mov
jno
cmp
out
das
cmc
mov
inc
cmp
jne
jp
mov
gs
les
movsb
gs
inc
cld
pop
aaa
sbb
and
mov
jo
xlat
das
sbb
jbe
sbb
jl
imul
sti
arpl
enter
push
fs
mov
ret
or
icebp
negb
es
xchg
push
jmp
dec
pop
mov
pop
adc
popl
push
cli
inc
mov
fcoml
jno
xchg
popa
scas
fmulp
pop
mov
call
push
jp
mov
xchg
push
and
rcll
test
scas
es
and
cmp
jp
scas
mov
inc
or
cwtl
insb
fdivrs
jp
shll
scas
out
jge
jo
shlb
outsb
dec
cmp
shll
mov
ja
lods
pushf
popf
fisubrl
in
sub
inc
fldcw
jb
imul
push
ret
cmp
addr16
dec
xor
inc
pop
in
pop
mov
fwait
cli
cld
mov
sti
lods
cs
pop
inc
out
adc
ss
xor
mov
xchg
sbb
out
leave
mov
imull
cmp
push
test
or
sub
jp
or
push
jnp
mov
jmp
es
aad
mov
adc
cmp
cld
pop
ja
in
pop
rcr
jle
push
jmp
sbb
ret
sbb
push
call
test
mov
test
subl
cmp
cmp
adcl
add
add
cmp
sbbl
cltd
pop
or
inc
pop
stc
scas
push
jne
xchg
jbe
cmp
push
sti
inc
pop
test
push
xor
arpl
pop
cmp
dec
mov
ds
lcall
clc
imul
jge
fldt
push
mov
fidivrs
bound
adc
jb
repz
pop
and
lcall
test
fisttpll
out
inc
stc
inc
fnstsw
outsb
push
jecxz
mov
inc
lods
jg
jo
or
call
in
jmp
push
cmp
dec
mov
gs
clc
daa
xchg
mov
fsubs
mov
pop
jecxz
cmp
xor
xor
insl
push
lret
pusha
mov
push
cmp
mov
add
xchg
out
ja
adc
bound
xchg
add
mov
push
jb
push
inc
push
idivl
pop
fmull
shl
ljmp
jb
in
jbe
xor
and
out
mov
inc
jb
mov
push
xchg
movsb
call
scas
loopne
pop
insb
mov
xor
pop
inc
imul
stos
push
xlat
dec
cmpsl
out
imul
fcoms
rclb
cmovge
mov
daa
sub
testl
lods
mov
inc
je
sbb
dec
push
fcompl
pop
pop
sbb
inc
push
sub
jo
cmpsb
xchg
fprem1
mov
xor
mov
push
cmpsb
test
sub
aaa
pop
mov
insb
mov
cld
pop
push
mov
mov
pop
jmp
in
jne
fs
pop
sbb
lcall
mov
adcb
in
loopne
add
mov
xchg
lock
pop
add
mov
insb
xchg
mov
movsb
in
sub
enter
mov
xlat
je
mov
sar
mov
or
adc
test
pop
mov
sahf
rep
sti
jp
imul
mov
mov
repnz
sti
inc
add
pop
mov
stos
xchg
hlt
push
lret
data16
aas
lods
xlat
xchg
xchg
stc
pop
outsb
repz
aaa
xor
pushf
inc
cmpl
les
int3
mov
add
sahf
js
xor
notl
incb
inc
pop
arpl
or
mov
jo
out
pop
or
mov
mov
xchg
xchg
xor
mov
flds
repnz
fwait
xchg
xor
cmp
add
sub
jg
push
sbb
mov
jbe
jle
mov
or
adc
xor
fcompl
das
push
outsl
pop
ja
jle
bound
add
dec
sbb
mov
add
aad
in
inc
mov
outsb
sub
clc
or
pusha
imul
or
sub
fwait
pusha
sub
fs
adc
je
rep
dec
dec
inc
cld
lret
pop
mov
arpl
lods
xor
cmp
xchg
adc
iret
cmp
cmpsb
test
arpl
mov
jp
xchg
jbe
cmpsl
sub
nop
mov
or
cmp
sbb
clc
orb
daa
or
jb
stc
adc
out
push
mov
loop
js
mov
insl
outsb
and
or
jno
push
es
jb
je
out
into
push
jp
pop
xchg
jno
bsf
jae
in
outsb
data16
push
outsb
lahf
mov
xchg
jne
ret
fdivrs
in
cmp
mov
imul
dec
lcall
std
pop
movsl
js
in
jb
pop
inc
out
mov
push
sub
lock
rcrl
mov
out
pop
mov
cmc
add
addr16
dec
sub
pop
xor
sub
jns
mov
mov
xor
in
mov
cmp
cmp
scas
xor
pop
mov
test
pop
enter
int
adc
jns
lcall
cmp
addr16
scas
mov
mov
stos
movsb
mov
jbe
arpl
xor
gs
xchg
dec
lds
std
lcall
mov
iret
lret
es
mov
in
sahf
fistpll
imul
xchg
push
mov
or
mov
loope
and
fs
dec
mov
sti
jne
push
into
cmp
mov
and
dec
sti
icebp
adc
dec
out
mov
orps
jno
pop
xor
data16
xchg
cmp
and
or
cmpsb
mov
push
stos
add
ds
push
and
lret
inc
dec
imul
test
pop
icebp
push
ljmp
mov
call
mov
xorb
dec
fnstsw
cmp
in
or
insb
div
repz
sbb
dec
es
fisubrl
inc
outsb
push
jecxz
xchg
mull
inc
push
lret
pop
icebp
dec
cwtl
lret
in
in
jl
xor
cmp
clc
adc
enter
dec
fimuls
inc
inc
xchg
ja
adc
jns
stos
fnstsw
testl
in
sbb
loop
jl
xor
mov
hlt
mov
scas
cmp
pop
lods
dec
fisubrl
push
adcb
imul
dec
daa
addr16
sub
cmp
xchg
push
xor
mov
pop
xor
sub
jl
int
mov
mov
xchg
je
inc
ja
xor
xchg
and
rdmsr
dec
mov
sti
sub
mov
mov
jmp
inc
movsb
jp
ss
xchg
scas
repz
cmp
adc
movsl
cmc
hlt
inc
jl
dec
xchg
mov
inc
mov
jmp
neg
push
ss
push
inc
pop
jge
shlb
fs
xchg
inc
mov
xchg
xchg
xlat
inc
mov
push
mov
or
cmp
frstor
pop
xchg
imul
push
ljmp
popa
xchg
mov
call
lcall
movsb
fld
sti
jecxz
lea
cmp
pop
push
xor
mov
cltd
call
movsl
sarb
hlt
ret
adc
sub
mov
jne
push
imul
add
jecxz
loope
cld
pop
idiv
or
inc
roll
stc
push
cli
mov
push
imul
mov
dec
sub
xor
mov
ret
testl
dec
outsb
push
inc
iret
into
pusha
mov
jecxz
cmp
sahf
stos
and
mov
pop
imul
mov
in
or
xchg
ret
xchg
sti
in
jmp
mov
imul
mov
adc
push
mov
fucomi
xor
push
mov
xor
call
xor
js
aas
add
mull
xor
push
lahf
sbb
or
xchg
cwtl
cmp
cld
flds
jmp
mov
je
aaa
bound
pop
repz
loopne
int3
mov
push
sti
xor
inc
jp
mov
lret
enter
sti
mov
mov
scas
int
movsb
mov
push
movsb
and
testb
jmp
icebp
fwait
pop
rolb
leave
ret
jecxz
add
dec
ja
xchg
mov
imul
jns
mov
xchg
testl
xchg
jne
repnz
mov
addr16
testb
bound
dec
fdiv
or
xor
push
mov
hlt
loopne
arpl
jecxz
push
ja
ss
add
in
adc
jecxz
xchg
dec
xchg
add
mov
bound
js
inc
dec
je
shrb
jo
jmp
adc
inc
xchg
sub
xchg
cltd
mov
test
mov
int
das
cli
leave
pop
iret
sub
iret
sub
mov
push
mov
pop
push
and
out
jae
jbe
xchg
or
inc
sub
push
push
sbb
mov
xchg
cli
adc
inc
push
jl
mov
pop
adc
dec
xor
add
push
pop
mov
ja
movsb
mov
jmp
xor
or
sbb
adc
adc
test
pop
xlat
mov
sti
mov
insl
pop
mov
xor
sub
xchg
popa
sbb
outsb
mov
push
mov
dec
aam
mov
inc
jbe
jge
enter
sbb
cmc
jmp
fidivs
xor
or
cmc
ret
xor
jae
push
movsl
xor
mov
xchg
lcall
hlt
cmpb
imul
mov
repz
xor
jecxz
aad
cld
jns
jmp
cmp
sub
popa
stc
loop
cmc
sub
cmp
mov
inc
inc
jp
lods
cmp
insb
push
ljmp
dec
add
sub
pop
cmp
pushf
shr
fsubrl
out
dec
stos
fisubrl
je
push
inc
add
xor
scas
je
cmp
jns
fs
cli
bound
jno
call
pop
ss
jp
sahf
dec
imull
mov
inc
mov
fs
add
movsb
push
insl
scas
fisubrl
lock
addr16
dec
adc
scas
lret
push
stos
imul
cmpsb
dec
orl
mov
or
jae
test
mov
pop
dec
jg
cli
jp
xchg
cmp
fwait
jp
sbb
aas
fidivrs
les
jno
jae
ffree
pop
mov
jbe
lea
std
test
mov
pop
insl
mov
pop
cmp
push
mov
jg
mov
fildl
push
push
sbb
mov
loopne
lock
pop
or
sub
push
daa
add
test
push
xlat
cmp
jmp
sub
add
mov
aaa
xchg
lods
xchg
clc
inc
stos
lea
push
scas
mov
in
sarb
enter
cmp
jp
dec
stc
mov
sbb
cld
fdivl
inc
xchg
testl
cmpsb
mov
fld
cmp
subb
pop
aas
cld
in
pop
cmp
dec
or
icebp
xchg
push
or
in
push
pop
fwait
add
xchg
mov
into
jmp
ss
push
movb
xchg
add
loopne
mov
lods
jo
or
lahf
jns
sahf
xor
cmp
ucomiss
lods
or
fldcw
add
or
ja
out
mov
xor
pop
cmp
in
imul
jns
hlt
mov
or
imul
mov
je
loop
adc
or
outsb
mov
pop
push
mov
push
jge
shr
jbe
repz
jecxz
test
jne
push
bound
cs
in
cmp
mov
and
test
addb
jmp
or
mov
xor
adc
sub
xor
je
pop
adc
rolb
mov
dec
ja
in
stos
sbb
or
xlat
enter
dec
stos
in
adcb
repz
jp
adc
lock
shrl
nop
scas
push
loope
mov
mov
insb
out
dec
fs
mov
mov
mov
in
sti
das
mov
fwait
mov
jae
xchg
jne
fs
insl
sub
subl
mov
leave
pusha
jo
pop
dec
aaa
leave
xor
fsubr
sti
xor
out
pop
je
mov
xchg
sub
xchg
cmp
fwait
sub
dec
jge
push
jno
mov
lea
xchg
scas
fildl
jne
stos
fucomi
lret
mov
sub
jmp
sbb
jecxz
aaa
mov
ljmp
scas
fimull
test
pushf
mov
mov
cmc
jns
xlat
jno
jp
jle
mov
mov
fcompl
dec
inc
rcrb
sbb
fdivrs
push
lcall
mov
inc
inc
push
cmp
jo
stos
adc
int3
out
xor
or
or
push
cmp
movl
aaa
data16
cld
jbe
dec
xchg
dec
mov
sub
loopne
cmp
fcomp
mov
loop
xor
movsl
sbb
cmc
mov
in
pop
adc
cmp
jmp
pop
jae
cmpsb
in
lcall
push
sbb
pop
xor
mov
insl
or
dec
sub
subb
fimuls
lahf
mov
xlat
jmp
jp
dec
cli
cmp
dec
popa
in
hlt
and
popf
scas
mov
push
test
in
int
mov
cmp
scas
mov
cmp
mov
aaa
divb
divl
ds
pop
push
lret
je
ja
jns
dec
in
sub
add
cmp
sti
imul
or
jp
cmp
negl
mov
cmc
mov
scas
out
xor
in
jl
push
inc
xchg
push
or
pop
pop
push
mov
popf
jmp
xchg
xchg
sub
xchg
xchg
mov
fisubs
cli
test
out
lods
cmpsb
push
addr16
insb
inc
repz
imul
xor
addr16
pop
fs
push
cmp
dec
dec
mov
or
inc
push
test
ds
push
lret
pop
fstl
rorl
mov
inc
pop
adc
mov
call
push
repnz
fwait
lret
jg
lods
push
jae
cmp
mov
mov
push
inc
mov
out
or
push
dec
in
jmp
lds
xor
in
andl
xor
pop
jp
push
daa
test
or
dec
clc
xor
or
fucom
mov
cli
jl
je
js
loopne
inc
loopne
xor
js
in
icebp
adc
pop
stos
push
add
pushl
mov
push
pop
push
add
movsl
clc
jp
add
cmp
jb
push
mov
test
mov
pop
xchg
inc
inc
jp
xor
push
pop
xor
or
or
gs
cmp
lods
dec
and
add
xor
sarb
jge
dec
shll
nop
sti
inc
mov
insl
pop
into
pop
sti
mov
call
mov
clc
push
mov
js
out
dec
bound
lcall
pop
outsl
loopne
mov
stc
xchg
hlt
out
and
int3
sahf
daa
std
lret
cmp
hlt
jmp
cwtl
pop
out
inc
stos
sub
imul
call
jmp
pop
stos
add
pop
popf
int
add
rcrb
inc
dec
jmp
stc
cmp
mov
aad
xchg
test
jbe
aad
mov
imul
xchg
nop
in
cmp
sub
insl
and
xor
push
push
scas
and
add
pop
ret
aas
push
ljmp
mov
mov
test
bound
jo
sub
mov
pop
scas
inc
mov
cld
les
sub
insl
loop
js
mov
scas
ret
inc
jne
sbb
jb
and
mov
pop
jl
mov
cmp
mov
adcb
pop
inc
jbe
loopne
mov
xor
outsb
mov
test
jns
aaa
sub
lock
test
lds
jbe
inc
cmp
scas
dec
jb
ja
pusha
ret
popf
insb
cmp
mov
mov
mov
js
xor
jae
adc
cltd
mov
mov
sub
fistpl
int3
cmp
push
imul
pop
mov
adc
imul
ds
jno
xchg
jns
mov
xchg
and
mov
or
xor
or
in
stos
aam
fldcw
cld
loope
add
pop
xchg
xchg
and
or
xchg
stc
mov
cmp
in
jmp
fucomp
pop
jp
pusha
cmp
loope
repz
jg
mov
jbe
mov
push
xchg
leave
and
imul
pop
cmpsb
scas
sub
adc
imul
adc
lret
mov
hlt
pop
stc
test
cli
xchg
xchg
data16
pop
cli
dec
jns
jae
or
push
mov
cmp
sti
adc
ja
xor
add
xchg
pop
stos
mov
lret
outsb
mov
mov
dec
scas
data16
mov
pop
mov
in
adc
sbb
adc
jno
fldenv
mov
jge
dec
addb
push
xlat
push
addr16
cmp
movsl
stos
rorw
loop
inc
mov
mov
adc
xor
inc
mov
movsb
pop
ljmp
icebp
inc
pop
stos
dec
jbe
stos
add
lret
mov
mov
adc
in
pop
push
sti
movsb
mov
adc
in
mov
daa
cmp
je
jl
cmp
push
aaa
sti
xchg
cli
shr
jecxz
xchg
pop
mov
scas
idiv
xor
clc
fisttpl
mov
push
fst
int3
lds
in
out
mov
or
add
sbb
jo
xlat
push
popf
movsb
call
lahf
jp
loopne
icebp
push
mov
adc
mov
inc
xchg
js
mov
pop
mov
push
stc
in
lcall
scas
xor
gs
movsl
ja
xor
mov
pop
bnd
arpl
jb
dec
test
fstps
mov
dec
int3
fwait
xchg
lahf
lods
adc
sub
dec
ds
icebp
or
movsl
aas
push
js
sbbl
cmp
lock
pusha
outsb
dec
mov
fsub
lcall
fldenv
outsb
xchg
scas
pop
sbb
cwtl
add
jo
addr16
push
inc
jns
jbe
dec
push
fucomi
jb
jae
imul
outsb
mov
in
lcall
cltd
je
arpl
ret
jae
xchg
pop
push
and
sbb
stos
lock
xchg
pop
setbe
movsl
enter
xchg
sub
jns
sbb
fistpll
cld
fstpl
je
dec
in
add
push
xor
or
out
jb
pop
pop
leave
dec
test
pop
xchg
jmp
push
push
dec
in
mov
mov
sarl
pop
cmp
push
mov
or
lods
adc
push
in
pushf
dec
fpatan
jmp
xchg
cmc
push
jecxz
mov
cwtl
pop
jns
mov
fwait
clc
lock
dec
loop
cmpsl
ja
pop
add
add
pop
lock
jle
sti
xchg
mov
mov
insl
dec
adc
clc
and
popf
push
fwait
pushf
mov
lea
subl
xor
xlat
mov
mov
icebp
sbb
xor
xchg
pop
push
lret
aaa
push
clc
fnstenv
sub
xor
sub
enter
mov
fwait
pop
movsb
and
jle
ljmp
nop
imul
dec
pop
ds
notl
adc
loop
jg
mov
out
pop
jecxz
daa
pop
loope
sbb
sti
sti
pop
stc
je
push
push
fwait
aam
cmpsl
iret
pop
jmp
lds
enter
ljmp
cs
ja
repz
xchg
pop
aas
mov
jae
cmp
mov
xchg
or
sbb
mov
add
push
add
mov
in
cmc
icebp
mov
notb
xchg
orb
xor
pop
jmp
iret
jp
lcall
push
clc
jecxz
mov
repnz
call
sub
mov
ljmp
leave
mov
push
push
lods
cli
arpl
lret
ja
jb
adcb
aaa
mov
out
jge
ss
imulb
inc
je
sbb
mov
add
xchg
je
lods
jo
cmc
insl
add
adc
clc
jg
or
in
lret
mov
hlt
jo
into
lret
cmpsb
call
jns
dec
xchg
xor
xor
mov
flds
movsb
stos
out
lcall
fnstenv
dec
dec
int
cmpsl
mov
cwtl
dec
inc
push
stos
mov
fwait
and
lock
mov
loop
ret
pop
sbb
dec
loop
imulb
inc
popa
mov
dec
dec
ss
inc
in
cmpsl
shll
imul
add
xchg
mov
sub
jbe
out
fstl
js
mov
jmp
mov
sub
push
mov
hlt
sub
mov
cmp
mov
dec
scas
xor
cmp
cmp
xchg
enter
lds
mov
scas
lahf
int3
es
rclb
je
cmpsl
and
popa
jp
aaa
add
and
insb
mov
leave
xchg
pop
xlat
mov
dec
xchg
cmp
ret
movsb
fisttpl
sbb
xchg
iret
xor
mov
mov
pop
pushl
inc
xlat
mov
shll
loop
leave
jo
or
adc
call
lret
dec
imul
cmp
cmc
push
icebp
sub
js
inc
jp
jp
xor
mov
push
and
jns
jns
ret
scas
cmp
aas
test
cltd
mov
push
loopne
and
mov
inc
in
loopne
and
jp
sub
xchg
mov
stc
pop
add
jno
xchg
pop
mov
jmp
bound
outsl
shl
mov
mov
popf
es
xchg
push
and
stos
pop
mov
fstps
inc
out
mov
mov
addr16
mov
jp
lock
lret
xchg
adc
pop
in
or
aam
aam
bound
or
fs
xchg
cmp
loopne
xchg
or
xchg
data16
insb
imul
mov
push
inc
scas
lods
sub
imul
cs
add
pop
inc
lcall
push
stc
sub
aad
neg
xchg
lods
in
cwtl
push
inc
mov
xchg
imul
push
icebp
mov
cltd
sub
mov
xor
push
sub
in
into
mov
mov
je
arpl
insb
jb
inc
repnz
mov
sarb
jb
cmp
push
ljmp
fs
ljmp
repnz
xchg
fucomp
inc
mov
push
mov
push
xchg
es
jecxz
enter
not
xchg
stc
daa
in
aaa
inc
xchg
not
data16
or
stos
jbe
sbb
jnp
into
jnp
mov
mov
jb
pop
mov
mov
les
or
add
aam
cmpsl
adcb
and
xor
xor
sbb
aad
imul
sbb
lcall
and
daa
test
clc
ret
nop
mov
sti
je
in
cltd
xchg
dec
push
ss
aam
mov
cmp
and
outsb
xlat
sub
lock
fbstp
xor
dec
xor
in
adcb
mov
repz
mov
jecxz
mov
jae
mov
sbb
push
xor
push
in
movsl
shlb
dec
mov
mov
jbe
add
and
dec
cmp
or
jno
jne
fcoml
mov
loop
lds
in
pusha
adc
dec
or
xorb
push
sbbl
dec
push
cmpsb
and
mov
pop
lahf
xor
aad
icebp
aas
and
mov
mov
pop
jp
pop
outsb
mov
insb
lods
jns
out
shlb
std
mov
cmc
dec
jbe
rep
lret
cpuid
pop
jns
jns
sub
in
push
daa
pop
and
cmp
rcrb
loopne
lods
rorl
sub
ja
inc
popa
jbe
leave
add
insl
repnz
divl
xchg
and
jb
push
adc
inc
lret
outsb
or
cmp
xor
lock
out
push
and
aaa
es
jb
pop
dec
mov
mov
ret
lock
xchg
mov
sbb
test
or
mov
mov
stos
lret
mov
cmp
pop
repnz
xor
push
xor
cmpsl
cwtl
ret
pop
loopne
xchg
push
mov
cmp
dec
mov
dec
jns
jne
sub
shl
mov
jo
cvtps2pd
cmpsl
xor
call
insl
lods
shll
in
jp
int3
pop
out
ss
sub
push
sbb
cltd
pop
ljmp
iret
inc
neg
jmp
xchg
fwait
fs
addb
lsl
push
xchg
sarl
and
hlt
push
aaa
xchg
arpl
cltd
iret
push
pop
cmp
hlt
popa
pop
scas
xchg
dec
dec
jo
mov
mov
xchg
xor
jecxz
scas
cld
mov
test
ljmp
jg
scas
cmp
xlat
pop
mov
negb
iret
inc
ret
lods
xor
lret
std
jecxz
movsb
ljmp
jne
arpl
in
sbb
fnsave
mulb
lods
repnz
dec
cld
bound
dec
cli
outsl
jecxz
rorb
xchg
mov
mov
dec
dec
and
pop
adc
add
cmp
call
test
std
enter
xor
jmp
pop
mov
pop
adcb
adc
into
push
jbe
ret
pop
lods
cmp
decb
sti
mov
and
cmp
mov
inc
popf
addr16
mov
popf
mov
and
cltd
jmpw
fabs
mov
pushf
push
cmpsl
mov
dec
inc
mov
out
pop
cld
movsl
fldt
adc
mulb
mov
cmpsb
popa
mov
fildll
xchg
jb
xor
mov
mov
and
pop
sbbb
xor
cmp
fdivs
inc
fwait
add
or
add
jns
push
mov
jecxz
adc
xlat
jecxz
insb
adc
bound
repz
jns
clc
call
insb
xchg
push
sbb
scas
cld
movsl
cmp
clc
aad
fcoms
xor
xchg
xchg
xor
std
jp
push
repz
xchg
dec
sti
shlb
jecxz
sti
sub
ds
mov
stos
cmp
jns
mov
mov
int
mov
sub
adc
pop
jbe
fdivs
bound
loop
mov
xor
testb
mov
loop
fcoms
mov
mov
sti
in
adc
xchg
mov
outsb
out
adcl
pop
cmp
xchg
add
push
adc
add
or
icebp
pusha
inc
mov
sub
loope
lret
xchg
sbb
int3
xor
lock
cmpb
mov
cltd
jb
dec
cli
mov
dec
cmp
mov
jb
les
fprem
pop
lret
dec
mov
jg
lods
mov
lahf
jl
fisubrs
and
and
mov
jne
inc
xchg
push
xor
cmc
push
sub
mov
adc
sarb
sub
mov
popa
pop
enter
test
add
xor
data16
mulb
pop
ror
jae
insb
jecxz
sub
bound
pusha
pop
jecxz
sbb
push
cli
mov
sub
sub
xlat
jmp
mov
clc
lock
push
out
rcr
lcall
mov
xor
mov
lret
imulb
push
or
out
test
scas
dec
sbb
xchg
push
mov
cwtl
jne
addr16
push
xor
cmc
jp
inc
dec
loop
loopne
pop
adc
add
mov
repz
mov
mov
loop
add
push
sub
popw
xchg
out
mov
sub
sbb
sbb
sti
dec
push
cmp
lock
ds
into
sbb
jp
out
bound
sbb
add
sti
out
or
mov
lods
and
in
add
das
mov
jp
dec
test
movsl
jp
stc
cld
cmp
cli
cli
gs
shrb
lds
sbb
or
pop
mov
jp
adc
ja
adc
notl
int3
jp
dec
pop
xorb
and
dec
xchg
ja
mov
cmpsl
mov
mov
gs
mov
jg
fs
fiaddl
jp
push
sbb
push
xor
and
add
sub
dec
inc
movsb
lods
outsb
and
mov
mov
cs
int3
xchg
push
jp
sbb
lahf
or
test
shl
cmpsl
xchg
xor
push
xchg
aaa
aaa
push
mov
cmc
cs
mov
js
dec
add
adc
and
dec
out
pop
xlat
jecxz
add
popf
fimuls
dec
push
stc
xchg
jp
dec
xchg
cmp
or
mov
imul
mov
dec
fnstenv
testl
imul
dec
jns
inc
push
outsb
leave
repz
add
sbb
mov
rorb
pop
mov
and
mov
fimuls
pop
idivb
and
xor
adcl
mov
pop
jno
sub
push
mov
xchg
mov
jmp
aad
out
lahf
inc
mov
inc
push
jae
andb
pop
sbb
mov
pop
push
mov
hlt
lods
or
es
enter
pop
fsubr
xor
sbb
sbb
aas
xchg
sub
fildl
mov
xchg
cmp
clc
jp
mov
pop
adc
push
or
or
pushf
cmc
or
jp
pop
mov
pop
add
mov
sub
jbe
testb
icebp
xchg
mov
in
inc
mov
adcl
in
stc
jne
rcll
repz
rolb
jb
inc
pop
and
mov
xor
sbb
jne
pop
enter
repnz
out
ret
adc
jns
js
xchg
sub
mov
in
cmp
push
jno
push
add
push
inc
insl
add
mov
push
leave
call
pop
sti
lcall
lods
js
push
mov
jo
mov
sbbb
push
xchg
push
pop
test
outsl
mov
repz
subl
iret
jecxz
push
icebp
pop
sbb
jp
push
pop
add
add
repz
fsubp
jmp
pop
xor
les
filds
lret
sti
inc
faddl
and
and
ja
push
mov
mov
insl
jecxz
adc
mov
neg
or
jecxz
pop
sub
mov
data16
divl
jmp
clc
cld
scas
push
mov
mov
je
xchg
jp
cmp
and
push
mov
jae
pop
cmpsl
pop
repz
sub
cmpsb
xchg
movsl
fbstp
je
cmc
pop
mov
repz
xor
jb
sub
mov
subl
ljmp
data16
testl
and
pop
sub
sub
mov
movsb
pop
jecxz
and
lahf
pop
fidivrs
sub
mov
lcall
sub
mov
fisttpll
xor
mov
mul
dec
sbbb
dec
xor
icebp
jle
or
lcall
in
mov
jno
jp
lret
mov
cmp
mov
sub
mov
stos
popa
add
sbb
xchg
pop
mov
push
idivl
dec
xor
stc
mov
jecxz
push
jle
xchg
loop
cmp
stos
imul
in
mov
jp
mov
fists
xlat
leave
push
cli
mov
mov
jmp
pshufw
push
add
push
sti
pop
int3
push
loope
cmp
imul
es
testl
scas
ja
hlt
ss
xlat
popf
adc
ja
xor
xchg
scas
sub
pop
js
je
pop
inc
pop
outsb
ds
push
stos
in
ds
fwait
shl
loop
scas
pop
std
movsb
jecxz
cmpsl
ret
dec
push
hlt
aas
xchg
lahf
sarb
inc
xor
jns
and
scas
cltd
pop
xlat
imul
lods
pop
push
or
subb
fwait
ss
cltd
xchg
xor
mov
ffree
movsb
add
mov
add
aam
mov
add
imul
xor
aam
mov
mov
clc
sbb
lret
xchg
shlb
jmp
jg
adc
lahf
lcall
in
dec
cmp
push
out
jp
cli
aad
pop
stos
in
shl
pop
stos
add
mov
icebp
dec
dec
sbb
repz
mov
repz
aad
movsl
sub
xchg
scas
jbe
cmc
sub
je
jae
jmp
jo
xor
and
push
repz
push
dec
pop
mov
cmp
adc
pushf
loope
int3
daa
and
xchg
data16
fisttps
scas
jge
jecxz
jne
in
in
repz
pop
dec
pushf
sub
iret
stc
and
loope
sarb
pusha
mov
dec
mov
mov
stc
insb
clc
dec
cmp
cmp
dec
sub
jae
adc
inc
fwait
or
mov
jecxz
xor
jmp
dec
shll
inc
jp
jne
push
jo
dec
negl
pop
mov
mov
stc
xchg
xchg
lds
jmp
testb
in
aaa
jns
cld
imull
mov
divl
dec
cli
out
push
pop
movsb
rol
loope
rclb
scas
and
jo
imul
xchg
mov
test
test
sub
xlat
mov
push
fcomps
fdivrl
aad
inc
jbe
jp
ret
insb
adc
cmc
ja
enter
cmp
clc
pop
divl
or
test
xor
imul
mov
jne
mov
cmpsl
pushf
int3
sbb
jnp
daa
cmp
out
lods
psubb
lcall
sti
dec
jb
push
imul
xor
cmc
push
ja
or
loop
je
hlt
mov
xor
push
jae
push
leave
lahf
push
sbb
test
mov
inc
pop
hlt
enter
pop
pop
mov
mov
or
insb
jecxz
js
iret
xor
fwait
call
movsl
mov
jp
inc
pop
sub
push
dec
cmp
push
aam
mov
mov
add
cmp
jns
into
dec
stos
pop
loop
cli
lcall
xchg
and
xor
pop
sub
and
pop
xor
insb
lret
lock
cmpsb
out
testb
inc
adc
insb
and
mov
int3
pop
xchg
adc
adc
or
inc
dec
std
inc
mov
imul
adc
and
xor
cmpsb
bound
in
int3
jo
lahf
lds
test
sbb
lahf
dec
mov
pop
inc
or
fisubrs
dec
lds
data16
orl
pop
or
outsb
sub
xchg
mov
pop
cmpl
dec
ljmp
add
cltd
or
dec
mov
jae
sub
outsb
jne
stos
insl
test
jns
mov
rcll
add
scas
bound
js
push
dec
clc
in
push
pop
mov
or
ds
bound
stc
fwait
hlt
mov
cmpsl
xchg
orl
jmp
in
lret
xor
or
inc
jle
adc
pop
jmp
cmpsb
lahf
mov
imul
mov
sub
jg
out
inc
inc
shlb
jmp
pop
cmp
ror
dec
add
xchg
mov
add
inc
push
out
enter
adc
add
mov
mov
loop
mov
test
or
outsb
and
xorl
sub
fdivp
loope
pop
jne
mov
ret
dec
sbb
jecxz
jo
cmpsl
in
sbb
nop
sti
pop
push
jno
mov
gs
stos
stos
int
adc
imul
dec
jns
jp
sbb
rcrb
or
aaa
push
adc
cld
lds
dec
mov
cmp
repnz
mov
dec
ja
xor
xchg
idivb
out
loope
dec
mov
xchg
and
out
orb
xor
jbe
sbb
ss
addb
cmpsb
imul
scas
mov
sti
xor
mov
aad
cmc
lcall
fidivs
data16
aas
push
mov
cmc
movsb
repz
stc
imul
mov
xor
cmp
mov
cld
lods
mov
call
sub
push
sbb
push
cmp
jbe
ret
push
mov
dec
ljmp
or
and
out
jg
sub
push
sbb
xor
data16
mov
andl
enter
call
movsb
cmp
push
jg
cmpb
mov
xchg
loope
inc
mov
out
mov
cltd
xchg
xor
push
aaa
xlat
loope
test
ss
cwtl
fstpl
cmpsl
jb
dec
sahf
mov
int
adc
xor
dec
mov
cltd
mov
xor
repz
ret
xchg
jb
bnd
adc
lods
pop
div
cltd
jecxz
push
je
out
nop
repz
mov
nop
jmp
arpl
xor
imul
stc
inc
lret
rcrb
pop
addb
dec
xchg
loope
mov
dec
xchg
inc
sahf
ss
filds
push
mov
pop
dec
dec
dec
xor
aaa
pop
sbb
push
mov
mov
in
jp
gs
scas
dec
das
aaa
mov
ret
cmc
in
movsb
pop
push
fs
push
dec
in
sub
ret
push
sti
fnstsw
jp
jno
add
aaa
xor
fwait
data16
jmp
xorb
adc
mov
mov
inc
sub
cmp
mov
jl
arpl
in
add
fcoms
bound
dec
cmp
ss
sub
loope
push
mov
xchg
pusha
clc
add
mov
stos
jge
lcall
dec
mov
push
icebp
pop
mov
fstpt
mov
jns
jno
adc
lret
shrb
loop
pop
mov
jnp
ss
mull
and
cmc
push
enter
subb
xchg
iret
addr16
cli
js
mov
inc
xor
and
sub
jbe
push
movsl
leave
mov
dec
mov
mov
in
aad
daa
pop
loopne
mov
xor
lods
es
or
cmpsl
ficoms
lahf
repz
ss
push
and
xchg
daa
mov
lods
fldenv
std
movsl
cmp
out
cmpsl
divb
in
loop
fwait
out
stos
dec
adc
movsl
lret
xor
ss
jb
fdiv
shll
jbe
int
cmpsl
cmp
aaa
dec
aas
adc
es
es
mov
ja
jo
sbb
mov
outsb
xor
push
fisubrs
jg
cmp
bound
lea
test
mov
and
addr16
sbb
cmpsb
in
cmp
mov
mov
imul
in
pop
add
ja
push
stos
and
mov
dec
ficomps
push
testl
cmp
push
mov
adc
sub
xchg
inc
mov
lods
addl
ljmp
mov
push
inc
cmpsl
in
xchg
dec
cmpsl
repz
sarb
arpl
out
push
outsl
mov
ljmp
add
lods
jb
cmp
mov
mov
imul
es
ja
dec
mov
cmp
adc
mov
outsb
dec
cmp
mov
adc
scas
xor
hlt
mov
push
cmpsb
int3
pop
dec
sbb
mov
cli
lcall
or
icebp
js
mov
mov
test
repnz
into
fildll
roll
xchg
pop
movsl
pop
aad
lds
xor
loop
jp
adc
cli
pop
es
jb
out
xor
and
fisttpll
sub
jecxz
push
jae
loop
add
mov
insl
dec
adc
pop
jns
inc
in
push
jns
sub
cmp
push
jmp
push
cli
ret
dec
cmpl
enter
mov
jae
lret
rcrl
push
mov
leave
jb
jo
js
cmpsb
fstl
imul
mov
adc
xchg
pop
mulb
pusha
sbb
mov
ja
je
sbb
sub
imul
out
or
pop
lret
xor
ss
xchg
push
dec
xchg
inc
cmp
in
mov
lock
mov
ret
jmp
stc
fs
push
arpl
ret
inc
aaa
clc
fwait
mov
push
or
test
imul
sbb
push
pop
mov
fisttps
mov
call
fisttpl
mov
idivb
push
int3
mov
pop
ss
jecxz
subb
icebp
mov
in
outsb
pop
mov
dec
rcrl
pop
cld
imul
jbe
jl
lret
mov
shrl
sub
fldcw
stc
mov
and
cwtl
dec
cmc
jecxz
imul
fisubrl
inc
insb
insb
cmp
cli
pop
fiadds
scas
jbe
or
mov
cld
imul
xchg
fwait
jmp
push
push
and
mov
bound
pop
mov
loopne
jg
loop
and
jge
mov
leave
dec
jb
cmc
imul
push
xchg
insb
pop
mov
call
mov
or
pop
push
sbb
decl
movsb
mov
aaa
pop
fucomip
lods
xchg
sbb
mov
jg
push
inc
lret
and
test
fists
push
bound
push
mov
or
ret
sub
sahf
push
data16
xlat
and
push
jmp
in
stos
mov
push
ja
mov
mov
push
mov
pop
rolb
pop
sbb
in
int3
jns
repnz
adc
stos
mov
xchg
mov
mov
test
xor
push
dec
inc
mov
jnp
mov
cmc
in
jp
testb
or
scas
add
or
imul
jl
pop
int3
ret
dec
stos
pop
in
or
push
jp
iret
jl
xchg
pop
adc
out
cmp
in
stos
pushf
or
mov
in
push
test
aam
xorl
and
cmpsl
xor
lds
in
jle
mov
pop
lret
mov
mov
jp
out
cltd
cld
jecxz
pop
sahf
push
mov
stc
push
imul
mov
xor
ja
mov
inc
or
or
mov
and
div
outsl
das
and
adc
mov
stos
fucomi
xchg
popa
fwait
stos
push
mov
push
in
addr16
cmp
stos
testb
xor
mov
inc
ss
dec
repz
add
dec
mov
push
scas
pop
lahf
push
push
mov
jnp
js
insl
dec
repz
mov
jno
mov
loope
sub
fdivrp
fwait
cmp
mov
pop
xorl
cmp
jecxz
clc
adc
jbe
int
jae
push
mov
and
add
mov
fsubs
mov
cmp
jbe
ss
paddsw
aaa
aaa
xchg
imul
or
cmp
xlat
jbe
and
cmp
rcl
jmp
cli
xor
in
pop
stos
mov
push
xchg
into
jg
inc
lahf
dec
pop
push
mov
dec
dec
cwtl
hlt
daa
sti
mov
int3
out
and
imul
pop
insl
aad
in
test
in
hlt
mov
mov
and
lods
mov
xor
mov
jmp
mull
fstps
lock
xchg
xor
pop
push
cmp
xchg
scas
xchg
sbb
lret
out
cmp
hlt
pop
test
push
negb
cmp
adc
xchg
pop
sahf
xor
repnz
sub
stc
sti
jl
movsb
fwait
outsb
mov
inc
lods
push
or
sbb
js
mov
pop
scas
adc
pop
push
mov
mov
push
and
inc
mov
sub
or
cmc
push
jecxz
fs
adc
pop
jge
stc
mov
rcrl
xchg
xchg
imul
sbb
repz
mov
pushl
mov
and
test
das
in
cmp
cs
cmp
sbb
jbe
jbe
outsb
xchg
xor
xchg
xchg
xchg
sub
push
iret
xor
jmp
mov
mov
xchg
add
fiadds
das
leave
insb
divl
fildll
loope
ret
pop
xor
push
jne
cmp
mov
adc
loope
fbld
into
pop
mov
out
insb
cmpsl
sub
scas
sub
jp
lcall
sbb
test
out
in
idiv
ds
push
mov
lcall
sub
xchg
mov
inc
clc
jp
cmp
js
mov
jne
lret
dec
rol
or
repz
fistps
xorb
fistps
dec
jbe
jbe
mov
sbb
xor
mov
aam
shl
jbe
cmc
dec
les
out
repnz
je
xor
hlt
mov
mov
inc
jbe
std
xor
and
jae
pusha
stc
mov
mov
movsl
call
repnz
mov
in
rcrl
loopne
mov
jecxz
xchg
sahf
xor
test
gs
lret
fnstenv
pop
aaa
and
mov
int3
jp
outsl
loopne
push
outsl
icebp
pop
xchg
bound
and
xchg
jbe
jae
and
ljmp
addr16
in
mov
test
pusha
xchg
mov
mov
and
push
push
add
filds
mov
in
mov
scas
dec
mov
fidivrl
cltd
leave
call
jns
jns
cmpsb
rclb
pop
lret
mov
hlt
dec
test
mov
add
cmpsb
dec
xor
push
jns
scas
mov
fs
cli
in
or
jns
ret
popa
lods
ret
xchg
mov
jo
dec
inc
jg
mov
sti
jae
out
fisubrs
add
dec
cmp
sub
jp
rorb
sub
aad
in
repz
dec
sbb
sub
jp
inc
fwait
mov
lock
mov
add
and
pop
lock
push
es
cli
sub
jne
ja
int
lods
or
pop
pop
xor
cmpsl
dec
sarl
inc
stos
jae
fdivrl
aam
popf
loop
pop
pop
jne
mov
sti
jp
dec
or
mov
pop
push
add
add
lcall
mov
push
push
out
cld
push
push
xchg
lcall
mov
pop
mov
dec
cmpb
pop
mov
cmpsb
xlat
push
adc
enter
jp
push
jb
sti
pop
mov
jae
jns
or
cli
cmp
mov
dec
push
dec
js
jp
cmp
adc
push
pop
lods
dec
ret
xor
dec
cli
lcall
popa
fistl
jns
bound
cmpsl
gs
xchg
or
xchg
mov
pushf
pop
test
adc
ja
sbb
and
mov
jl
inc
data16
ret
xchg
jae
mov
push
insl
cmpsb
jbe
mov
xchg
outsb
xor
js
imul
push
dec
testb
movl
jmp
xchg
neg
mov
scas
aas
mov
sub
fidivs
pusha
addr16
aad
push
mov
pop
mov
sub
test
inc
push
jb
cli
stos
in
lret
push
xor
lret
xchg
adc
mov
imul
shrl
inc
movsl
mov
pop
in
xchg
cmp
imul
xlat
rcrl
mov
pop
mov
daa
out
mov
cmp
pop
push
mov
sub
xchg
aaa
mov
stos
sti
pop
xor
scas
sbb
mov
leave
sahf
arpl
sarl
jns
mov
stos
and
fidivrl
push
xchg
loope
fldt
in
dec
and
cld
lret
jbe
movsl
sbb
mov
cs
xor
jne
scas
mov
mov
nop
jecxz
pop
out
jmp
jmp
jnp
or
daa
jo
sbb
jmp
outsl
enter
out
mov
ja
js
mov
ss
cmp
imul
repnz
and
repnz
in
cmc
dec
test
scas
fstps
pushf
push
jecxz
pop
fnstenv
stc
dec
adc
pop
jmp
in
sahf
xchg
mov
or
pop
shl
pop
in
in
or
and
jmp
imul
mov
adc
and
fincstp
cmpsb
daa
sub
pop
stc
mov
mov
js
push
stc
imul
fs
mov
lds
mov
xor
inc
xor
sbb
scas
jbe
mov
push
jle
daa
fistl
jle
jo
adc
mov
in
dec
lods
pusha
popw
ja
xchg
imul
or
js
xor
cmpsb
mov
mov
insb
aam
jb
adc
jb
out
jno
mov
repnz
cmpsb
mov
data16
jne
push
push
data16
xchg
idiv
call
pop
and
fcoml
inc
adcb
jbe
cmpsb
mov
jbe
dec
cmp
jae
mov
pop
pop
lret
and
mov
mov
shrl
pop
enter
or
roll
fdivp
lahf
cmp
jo
or
pop
out
movsb
jg
out
mov
push
xchg
je
ja
xor
or
hlt
clc
insb
mov
mov
push
mov
hlt
sti
hlt
jp
push
popa
fists
mov
in
ss
mov
idivl
shl
mov
jb
adc
imul
jl
dec
clc
in
pop
les
or
cmp
test
mov
data16
in
xchg
loopne
or
sti
vpmadcswd
test
push
and
or
leave
sbb
addl
int3
sbb
fucomi
dec
call
ret
and
push
push
int
cmpsb
testb
mov
adc
insb
sbb
xchg
jecxz
cmp
sbb
mov
push
or
sbbb
jbe
into
mov
xchg
stc
jmp
cmp
xchg
js
stc
sub
pop
pop
jmp
mov
xchg
ret
lods
imull
jmp
scas
sub
adc
pop
push
lret
test
jbe
fsubl
or
sbb
sarl
in
pushf
push
sbb
sub
pop
or
sub
andl
dec
jmp
imull
bound
push
jnp
inc
mov
in
push
pop
jecxz
xchg
insl
ret
inc
cld
in
cmc
pop
les
dec
shll
sbb
mov
mov
push
jmp
mov
int
in
xchg
cmpsl
jnp
mov
std
dec
jo
dec
push
jbe
sbb
jbe
in
cwtl
pop
or
mov
pop
add
mov
pop
movsb
sub
adc
aad
jp
jae
cmp
imul
xor
mov
jnp
jae
cmp
pop
cli
inc
mov
repz
ljmp
xchg
cmpsl
pop
inc
or
mov
pop
data16
dec
rorb
push
mov
out
pop
mov
jmp
je
fwait
sbb
push
xchg
jp
divl
cli
mov
push
xor
stc
adc
mov
pop
packssdw
loope
cmc
mov
or
ret
in
fwait
jb
xchg
mov
sbb
lcall
je
inc
cmp
lret
bound
mov
xor
sub
jecxz
icebp
sbb
and
jp
cli
out
jns
sbb
stos
in
mov
sub
pop
cld
ds
leave
stos
neg
ja
mov
cmpsb
popa
ss
stos
sub
xlat
pop
jle
shlb
mov
and
hlt
mov
scas
xchg
iret
ret
pop
cli
loop
pop
jo
jmp
in
pop
mov
enter
scas
push
push
inc
push
push
xor
fldenv
in
push
clc
loop,pn
repz
in
mov
sub
mov
inc
adc
es
mov
scas
jecxz
add
add
ja
mull
xor
add
jg
xchg
cmp
fcompl
xor
sub
xchg
xor
jbe
push
xor
adc
jae
imul
lock
loop
fwait
sbb
adc
fcomip
sti
ja
pop
xor
movsl
jo
sti
bnd
sti
addr16
into
xor
cs
fs
je
pop
add
into
mov
loope
lods
fnstenv
fdivl
push
dec
call
mov
sbb
imul
sahf
jae
movsb
stos
fcomi
push
ja
cmp
cmc
xchg
or
repz
lods
adc
add
testw
pop
ss
jns
jmp
cmp
ja
mov
add
and
js
outsl
mov
jmp
adc
adc
mov
xchg
xchg
push
sbb
xchg
or
out
les
mov
fnstenv
js
sub
pop
std
pop
stc
sti
jecxz
popa
popa
popf
jp
xchg
ficoms
icebp
xchg
or
ss
addr16
bound
lods
rcll
imul
sbb
push
lcall
out
int
pushl
dec
aas
in
cmp
shll
ds
sub
lcall
cld
mov
add
pop
mov
sub
or
mov
pop
mov
inc
in
cmp
mov
mov
ds
rorb
stos
jbe
mov
inc
xorb
cmp
pop
and
rcrl
mov
pusha
lcall
cmp
test
pop
push
sbb
out
xor
dec
pop
das
lds
push
fs
std
pushf
mov
mov
mov
mov
pop
hlt
cld
imul
xchg
sub
cmp
rcrl
les
repnz
rorl
xchg
add
in
test
or
mov
icebp
or
dec
lcall
test
fmull
lret
pop
mov
cmp
or
imul
inc
push
push
jno
mov
cld
sahf
jmp
aaa
pusha
xchg
daa
xchg
sub
movb
jne
pop
sub
pop
mov
mov
push
push
sub
pop
push
in
fldt
mov
lds
dec
in
movsl
or
xor
sub
cmpsl
cmp
inc
cmp
sti
adc
repnz
mov
roll
sarb
out
idivl
jmp
jp
adc
outsb
sub
shlb
mov
mov
jns
cmp
cmp
ret
dec
in
sub
and
adc
js
pop
inc
mov
sbb
test
mov
xor
mov
out
mov
adc
cltd
ret
pop
push
and
jns
fwait
test
std
mov
imul
pop
dec
inc
mov
shlb
addr16
test
fidivrs
or
push
negl
pop
mov
xlat
xchg
jns
push
mov
or
fcmovb
add
outsl
sbb
shrb
push
out
cmp
xchg
pop
and
xor
fsincos
xchg
jns
jne
clc
mov
push
pop
mov
xbegin
sub
push
push
gs
js
mov
push
ljmp
cmpsb
ret
arpl
adc
sti
jbe
xchg
sub
cmp
mov
pop
sub
outsl
xor
sahf
stc
sti
sti
push
sub
test
movsl
fwait
cltd
daa
rcll
fdivrl
jno
movsb
jmp
es
lret
pusha
shrb
stc
fadds
pop
pop
jnp
ficompl
inc
aam
sbb
jne
jbe
imul
jecxz
or
cmp
sbb
and
jnp
inc
sti
sbb
xchg
cwtl
jo
out
lods
roll
lret
and
negl
push
xchg
or
or
imul
jg
imul
adc
js
je
cmpsl
sbb
adc
add
sti
subl
push
insb
sbb
mov
jecxz
inc
pusha
and
test
cmp
cmp
inc
out
mov
mov
sar
fiaddl
in
addl
movsl
arpl
rcrl
rclb
jp
and
push
inc
xchg
out
test
mov
stc
mov
testl
fistpll
jb
sti
inc
mov
mov
mov
pop
in
hlt
andb
movsb
fcomi
test
pop
xchg
cli
pop
cmp
in
push
jbe
adc
push
and
out
jmp
in
sub
pop
hlt
cmp
popa
pop
pop
mov
mov
gs
ret
stos
in
xchg
xchg
ss
xchg
movsb
sbb
pop
pop
es
adc
sub
jle
mov
jae
lret
fs
scas
lahf
movsb
aad
iret
cltd
gs
mov
movsl
pop
push
or
rcll
ljmp
js
js
icebp
push
push
orb
jns
add
pop
xchg
or
jns
enter
xchg
push
add
les
dec
imul
nop
lret
push
test
mov
mul
and
jno
jns
mov
das
test
push
jecxz
push
pop
stc
movsb
cmp
call
jo
push
dec
ja
inc
gs
push
pop
xlat
fcmovne
cmp
aaa
enter
aaa
mov
or
aaa
arpl
jb
cmpsl
insb
lahf
cmp
or
into
dec
xchg
pop
xchg
das
push
pop
inc
push
scas
int3
jb
pop
imul
and
jecxz
sub
jmp
outsl
fucom
jle
sub
data16
push
xchg
aas
lret
bound
xchg
jp
mov
sarl
jns
adc
incl
adc
mov
pop
popa
lods
sti
jecxz
jecxz
in
cmp
clc
filds
push
mov
rcll
mov
lcall
jp
pop
scas
and
cmc
lods
push
out
cmpsl
xlat
in
fnstsw
dec
int
sub
mov
xchg
insb
xlat
xchg
mov
cld
movsl
rcr
mov
jmp
mov
sti
mov
insb
iret
loopne
adc
jp
dec
pusha
xchg
cmpsb
mov
ror
dec
dec
std
inc
add
sub
dec
xor
imul
rcrb
cmpb
mov
or
adcb
mov
stos
int
iret
mov
repnz
push
add
add
jle
sub
pop
rcr
jecxz
test
cmp
mov
pop
mov
popf
fiaddl
imul
lds
in
jno
imul
mov
mov
cs
adc
sub
sbb
out
fistpll
leave
push
pop
dec
push
mov
popa
adcl
sub
xor
pop
iret
orps
fwait
add
lcall
movsb
and
divl
ret
inc
in
mov
mov
cmp
pop
js
call
adc
stos
ss
mov
in
jbe
push
xchg
lods
clc
jecxz
push
inc
push
inc
pop
or
js
inc
fisttps
pop
aaa
xor
jecxz
xor
jl
sub
xor
adc
loop
ret
outsl
insb
in
sub
fiaddl
in
push
insb
sub
cmpsl
adc
test
mov
cmpsl
ja
fnstcw
xchg
in
lcall
in
mov
cmp
stos
fwait
mov
cli
es
mov
in
in
js
ljmp
adc
or
negl
xchg
mov
jp
out
cmp
dec
xlat
sarl
pop
rcr
repz
ret
icebp
mov
jle
jg
mov
inc
insl
push
scas
sub
cld
jp
fldt
cs
cmp
lods
stc
leave
push
xchg
inc
ret
mov
jecxz
test
mov
clc
sub
clc
dec
push
mov
stos
mov
shlb
pusha
sbb
add
cmp
cmpsb
sti
dec
pushf
xor
into
jmp
mov
aam
subl
jbe
imul
pop
mov
push
jae
mov
sub
out
int3
cmp
mov
sbb
jns
pop
notl
pop
inc
jae
pop
push
mov
cmpb
fisubl
lcall
xchg
pop
mov
lds
mov
or
sti
push
fwait
jmp
push
imull
mov
dec
push
outsb
xchg
add
insl
int
add
inc
push
fsubrs
lods
cld
lcall
scas
filds
push
inc
adc
je
xor
sub
jne
pop
xlat
jb
ja
adc
jno
mov
jns
jo
jg
imul
je
cmpl
out
and
xchg
ret
inc
sub
and
iret
js
jp
pop
js
lret
push
and
jl
aam
jns
mov
mov
in
fwait
jne
mov
jnp
dec
or
push
jg
arpl
dec
jo
in
jae
inc
push
dec
jns
push
mov
cwtl
adc
jb
daa
mov
negl
xor
popf
xchg
and
jae
ds
out
lret
outsl
mov
xor
mov
lock
int
fxam
mov
je
mov
aaa
dec
insl
inc
mov
adc
sub
pop
inc
imul
insl
mov
push
inc
loopne
inc
push
sub
cmp
mov
push
repnz
add
pop
cs
xor
mov
xor
xor
orl
rcr
imul
in
push
xor
sub
imul
or
test
mov
mov
pop
jo
fsubrl
out
fimull
out
jb
xchg
mov
cmp
mov
fwait
xlat
pop
out
out
out
jns
fidivrs
fadds
xchg
and
jno
sbb
sbb
ja
mov
rorb
mov
in
lcall
push
and
dec
fbld
xor
pop
and
lret
into
push
je
mov
addr16
cmc
js
icebp
pop
fmul
jns
mov
in
mov
pop
mov
cmp
mov
jbe
ja
in
xor
lcall
or
jbe
sbb
nop
cltd
add
jg
pushf
cmpsl
cld
push
movsb
add
scas
push
ja
and
sub
in
cltd
cmp
mov
lret
mov
jecxz
stc
sti
imul
lcall
push
fwait
repz
push
adc
mov
fldl
mov
stos
pop
mov
int
das
cmp
stos
inc
xchg
inc
mov
or
adc
add
push
repz
and
push
stc
adc
cmp
push
dec
pusha
sahf
and
stc
ss
rorl
jp
in
js
scas
xchg
imul
add
jns
push
dec
dec
pushf
inc
shrd
mov
xchg
loopne
inc
adcl
int3
scas
sahf
and
mov
in
orl
pusha
imul
xchg
sti
out
js
cmp
js
push
xchg
push
jns
push
xchg
pop
scas
mov
mov
ja
and
jg
ret
inc
pop
dec
fchs
add
pushf
imul
call
icebp
jp
cli
inc
mov
adc
mov
in
fcmovnb
push
out
cmp
jne
aaa
mov
sub
scas
mov
int
inc
call
xchg
adc
pop
cli
in
lods
push
push
mov
xchg
mov
jbe
dec
leave
lret
add
dec
mov
push
mov
daa
ret
adc
sub
stc
pushf
stos
lret
sbb
xor
cmpsl
mov
je
mov
pop
dec
testl
xchg
ss
xlat
pop
jmp
rcr
sahf
mov
addr16
fdivs
push
cs
mov
scas
mov
lcall
sbb
subb
aas
push
cmp
push
sbb
xchg
repnz
mov
cmpsb
push
or
ret
xacquire
sub
insl
cli
aad
inc
in
push
popa
jp
out
aaa
insb
mov
jp
stos
pop
fwait
in
inc
call
cmpsb
testl
bound
out
jae
jo
dec
push
mov
fstps
pop
jl
hlt
push
aaa
imul
fsubrl
pop
in
push
mov
gs
das
xchg
test
and
gs
jns
adc
jmp
pop
pop
cmp
pop
andl
xchg
fnstsw
push
and
xchg
pop
cmc
fistpl
lret
adc
lods
sub
sbb
xor
mov
lea
xor
push
je
inc
push
dec
scas
mov
outsb
out
jns
sti
imul
xchg
lret
dec
xchg
sub
fcoms
loope
mov
lcall
imul
rcrl
repnz
sub
jp
pop
and
cmp
sub
push
bound
add
mov
mov
xchg
mov
test
out
push
cs
leave
jmp
pop
dec
test
stos
or
pop
jge
scas
int
cli
pop
mov
pop
and
inc
flds
mulb
stc
lcall
and
stos
jb
xor
or
call
fists
mov
and
nop
push
sub
testw
xlat
jmp
repz
lea
es
popa
push
jne
jle
mov
or
mov
cmpsb
jecxz
pop
xchg
jmp
pop
stos
and
cmp
shrl
sahf
testl
outsb
jge
out
fs
cmp
pop
cmp
jns
cmp
pop
mov
dec
divb
push
out
mov
pop
stos
xchg
pop
mov
mov
movsb
in
inc
daa
pop
cmp
subl
xchg
daa
cmp
add
lock
add
sub
sbb
cwtl
int3
cmp
int3
push
aaa
sbb
push
sbb
outsl
pop
gs
jae
mov
js
push
insb
adc
inc
xlat
lcall
xlat
lea
jno
push
jo
ficoml
jns
pop
jns
push
enter
in
lock
xor
jo
inc
mov
mov
outsl
push
sub
mov
lahf
jnp
sbb
sahf
ss
mov
mov
mov
xchg
icebp
push
xor
mov
ja
push
mov
dec
cltd
in
mov
cli
lcall
stos
ljmp
mov
mov
cmpsl
adc
xor
mov
adc
jle
mov
pop
mov
roll
dec
sbb
lds
sbb
push
xlat
and
cmp
je
cmpsl
or
lods
dec
mov
bound
adc
outsb
clc
xor
aas
mov
jg
mov
dec
mov
mov
xor
dec
in
rcll
nop
mov
mov
mov
inc
mov
cmp
jbe
push
push
push
mov
test
out
jne
inc
mov
out
sti
leave
add
in
dec
jp
inc
mov
jo
mov
insb
fmul
enter
cmpsb
push
mov
mov
push
sbb
lods
push
rep
jp
dec
outsl
js
xchg
xchg
dec
out
xchg
jb
scas
fldl
pusha
subl
mov
js
dec
out
sahf
int3
add
dec
lods
push
xlat
cmpl
icebp
sti
cwtl
scas
imul
filds
sbb
jns
xchg
lea
insb
xchg
gs
ss
cwtl
xlat
mov
sbb
insb
mov
lds
add
add
fildll
push
lods
je
sbb
movsb
loop
insb
or
aaa
dec
pop
int3
fnstcw
cmpsb
jnp
inc
jmp
scas
xor
and
inc
arpl
mov
mov
jae
fisttps
jbe
inc
push
jbe
pop
stos
push
or
mov
jmp
insb
xchg
clc
sbb
xlat
add
add
lret
and
dec
sbb
push
testl
aas
je
mov
push
add
add
ss
jne
arpl
xchg
faddl
and
aam
icebp
repnz
imul
data16
cmp
xor
dec
stos
mov
push
lock
mov
push
push
jnp
scas
xchg
xchg
push
repz
leave
push
in
stos
mov
xor
push
add
fs
callw
popf
xor
aaa
dec
inc
scas
mov
mov
lods
scas
icebp
hlt
xchg
jbe
mov
imul
imul
jp
dec
xor
sub
outsl
mov
jne
cmp
jbe
fdivl
xchg
push
inc
and
or
xchg
dec
dec
stos
dec
sti
mov
jo
mov
icebp
loope
xchg
scas
adc
inc
jnp
aam
addb
idivb
scas
xchg
nop
push
daa
sbb
mov
dec
out
out
inc
mov
insl
mov
xchg
mov
sbb
adc
insb
ja
xchg
enter
or
add
mov
inc
adc
imulb
subl
data16
movsl
hlt
in
inc
cmp
sub
lcall
shll
in
inc
enter
movsl
mov
lcall
pop
cld
dec
outsb
enter
and
pop
gs
xchg
fwait
daa
jb
ror
adc
mov
pushw
out
jmp
cli
jns
and
mov
xor
xchg
outsl
out
lret
jecxz
mov
aaa
pop
out
add
adc
mov
repnz
push
xchg
xchg
leave
cmpsb
repnz
js
outsl
push
xchg
mov
push
sbb
add
iret
xchg
mov
or
fwait
push
push
xor
pop
xor
out
movsb
mov
pop
mov
xor
popf
jl
lret
dec
sbb
mov
rolb
pop
dec
sbb
mov
cmpsl
mov
popa
fwait
outsl
repz
and
jne,pn
out
imul
aaa
and
sub
les
mov
stos
outsl
mov
mov
movsl
mov
imulb
or
hlt
int
repnz
in
xchg
mov
cmp
push
adc
inc
or
xor
in
fnstenv
and
push
jo
jb
filds
sub
jno
cmc
dec
xchg
mov
aam
add
mov
push
xchg
lock
enter
fs
mov
pop
lea
repz
push
or
repz
pushf
repz
sti
xchg
mov
dec
int
outsb
pop
dec
pop
dec
insl
popa
mov
or
or
daa
imul
push
mov
or
inc
mov
jmp
adc
push
scas
xchg
push
shrb
cli
dec
repz
in
outsl
xchg
mov
push
xor
mov
hlt
repz
jg
stos
xor
fisttpll
shll
mov
lret
jmp
jb
mov
imul
jno
xor
xor
outsl
shrl
das
lods
outsb
pop
scas
push
cmp
xor
sti
in
mov
sub
ljmp
jae
js
mov
mov
mov
or
outsb
sub
popa
lret
cmpsb
mov
mov
stc
sbb
aas
add
insl
icebp
xchg
mov
cltd
inc
dec
rorl
push
or
mov
testb
adc
xor
mov
pop
mov
stc
mov
mov
push
iret
mov
loopne
sbb
cld
test
loop
fisttpll
adc
movsl
push
shr
repz
std
gs
or
add
in
and
pop
out
or
mov
addr16
pushf
hlt
jl
test
xor
imul
lret
into
sub
pop
pop
fwait
repnz
stc
xchg
ret
addr16
xor
add
pop
push
les
or
xor
or
lods
cmp
add
mov
jp
cmp
or
leave
ror
push
add
out
jp
imul
testl
pop
test
mov
outsl
mov
ja
jp
in
mov
jecxz
aam
lods
ja
dec
ljmp
lcall
leave
pop
fisttps
xchg
pop
pop
mov
clc
sbb
lret
cmc
mov
mov
mov
imull
push
enter
sti
xlat
int
mov
stos
sarb
mov
js
dec
mov
cmpsl
clc
lods
mov
push
push
repz
and
pop
pop
shll
add
add
add
cld
test
aas
sbb
xchg
mov
and
sub
inc
fwait
sub
cli
mov
inc
idiv
stc
mov
shll
cmp
and
in
push
mov
call
shll
pop
sahf
pop
mov
mov
adc
cmp
push
fbld
push
add
stc
insb
add
pop
pop
xor
jle
mov
pop
sbb
xor
xlat
jo
mov
and
fs
xchg
cmp
les
test
mov
jo
clc
mov
rcl
cmp
aam
fsubs
dec
cli
and
cmp
fadds
mov
push
jle
data16
cmp
dec
mov
xchg
add
jne
stos
xor
mov
and
mov
into
repz
dec
fisttpll
dec
xor
xor
adcb
adc
mov
pop
cmp
loope
faddl
cmp
pop
mov
mov
pop
out
jno
xchg
jns
mov
cli
push
sbb
fwait
call
mov
lcall
xchg
inc
aad
dec
ss
jmp
xchg
cmpsl
push
idivb
pop
cmc
cmp
out
test
lcall
xor
jecxz
gs
insb
cmp
mov
dec
or
in
out
aas
inc
ja
jns
icebp
div
in
cld
mov
jno
imul
or
xor
xchg
xor
int3
xorb
push
dec
pop
notb
fbstp
cwtl
jbe
dec
je
insl
ljmp
les
pop
inc
dec
insb
bound
cwtd
adc
jb
out
jp
mov
pop
bound
js
and
mov
cltd
jmp
icebp
push
push
sbb
xchg
arpl
mov
test
out
xor
stos
push
int3
mov
or
xchg
movsb
dec
pop
lahf
xor
insb
stos
inc
pop
jg
bound
call
push
mov
cmp
stos
xor
mov
jle
push
xlat
in
fisttps
int3
cmp
mov
scas
sub
call
bound
adc
dec
leave
dec
shrb
dec
outsl
xor
test
and
and
jns
jmp
in
adc
test
and
push
cmp
mov
push
push
ljmp
mov
sbb
inc
dec
sbb
stc
mov
fsubr
mov
add
jo
mov
aam
push
mov
pop
jns
cmp
lock
cmp
cs
aam
mov
push
mov
imul
push
mov
xor
movsb
cmpsl
xchg
dec
pop
lods
cwtl
and
pop
lahf
xchg
fcoms
jno
and
cmp
lahf
dec
std
push
out
mov
cmpsl
pop
dec
orl
add
cmpsl
push
push
adc
cmp
xor
cmp
jo
mov
aaa
call
xchg
mov
ja
mov
mov
cmp
andb
mov
fistpll
push
xchg
add
pushf
fidivs
clc
jne
shlb
lods
test
adc
in
pop
push
mov
cmc
stos
movsl
stos
imul
xchg
xor
xchg
xor
sbb
push
in
xor
mov
stos
mov
push
fstpt
pop
bound
ja
adc
xchg
dec
fists
enter
stc
adc
call
imul
mov
ss
pop
aas
sub
jmp
jmp
imul
movsl
inc
shrl
out
mov
cmp
movsl
lret
arpl
push
fsts
test
cmp
loopne
jle
inc
jns
test
mov
push
push
stc
jbe
arpl
mov
sub
pop
cld
mov
push
cmp
cmpsl
out
lret
cmpsl
xor
push
adc
fildll
push
cmc
xchg
pop
mov
mov
ja
inc
mov
es
xchg
xchg
jns
cmpsl
js
push
js
addr16
inc
add
or
rclb
inc
push
rolb
ljmp
adc
push
sub
fwait
mov
ret
xor
jne
nop
insl
or
adc
clc
add
mov
mov
mov
lret
mov
xor
mov
xlat
adc
fwait
lahf
rcrb
add
mov
or
les
pop
sarl
cmp
test
push
mov
mov
cmp
jp
imull
cltd
xchg
push
stc
imul
mov
ja
stos
mov
cltd
mull
pop
push
sub
inc
mov
stos
not
jp
sub
cmc
sti
xor
jg
mov
jl
test
xor
stos
jae
mov
cltd
repz
mov
pop
mov
xlat
repnz
rep
adc
icebp
sti
xor
push
repz
mov
pop
lock
mov
mov
inc
das
rep
mov
push
mov
xchg
or
lcall
push
aam
lea
sub
pop
cmpsl
insl
sahf
lods
push
stos
in
out
push
movsb
insb
push
sti
in
mov
sub
jbe
cmp
stos
cmp
push
out
mov
cmp
sti
mov
sub
push
js
mov
cmp
repz
negl
push
push
imulb
push
repz
cmc
pop
xor
xor
imul
repz
xor
or
push
mov
repnz
adc
mov
pop
xor
cli
mov
inc
nop
imul
mov
push
out
push
push
outsb
imul
insl
mov
pushf
ret
jne
cmp
sbb
mov
sahf
mov
sub
addr16
pop
adc
or
pop
insl
fwait
lahf
xlat
jmp
call
movsb
scas
xchg
imul
sub
sahf
daa
stos
cltd
jae
add
sbb
aaa
xor
xchg
inc
lret
inc
mov
sub
cmp
sub
test
arpl
arpl
and
adc
lods
lret
jbe
outsl
mov
mov
and
or
lcall
and
mov
stos
movsb
jb
pop
adc
cwtl
xchg
push
adc
xchg
or
imul
enter
sahf
mov
xor
lea
add
mov
bound
sub
jo
sbb
jns
dec
and
pop
cmpsl
sbb
mov
nop
aas
and
jae
fstpl
test
mov
mov
in
mov
cmp
mov
cmp
push
xchg
sbb
outsl
add
sbb
jns
inc
loopne
subb
inc
lret
cmp
stos
jns
addr16
arpl
add
sbb
jmp
dec
push
inc
cmpsb
es
shlb
cld
jmp
jmp
dec
pop
and
add
fsubrs
aas
mov
xchg
or
sub
aad
cld
pop
jbe
repz
push
test
mov
inc
cwtl
aad
data16
xchg
adc
cld
push
divl
push
cmp
mov
dec
cmp
repnz
pop
mov
popa
dec
adc
ss
mov
repnz
in
arpl
leave
jp
jne
arpl
push
mov
fnstenv
data16
insl
lods
mov
pop
push
loopne
stc
out
or
outsb
pop
insl
icebp
jge
enter
and
push
mov
in
or
rcr
dec
mov
xchg
pop
cmpsb
jne
jb
push
movsb
in
add
addr16
mov
jns
xchg
cmp
test
push
scas
jne
pop
mov
cmp
cmp
in
insb
inc
shrb
test
mov
es
mov
popl
imul
mov
fstpl
test
arpl
sub
mov
mov
pusha
inc
or
mov
push
pop
fwait
push
pop
aaa
mov
cmp
mov
out
xchg
movsl
hlt
xchg
cmp
movsb
dec
test
aaa
int
lods
xor
in
xchg
loopne
cmpsl
mov
nop
clc
xchg
xchg
jp
out
fistpll
or
in
aaa
pushf
or
testb
adc
jb
hlt
scas
inc
mov
adc
jbe
in
pop
daa
clc
cli
or
popa
jns
call
sbb
fdivr
sub
dec
mov
sub
enter
add
adc
push
shrl
adc
and
outsl
mov
std
dec
or
arpl
in
idivb
push
inc
mov
and
movsb
cmpsl
cmc
or
xor
js
jg
lcall
mov
or
clc
inc
mov
out
jp
int
test
ss
outsb
pop
mov
or
lods
push
aas
jb,pn
jo
push
jp
sti
mov
rorb
cld
push
cmp
bound
pop
mov
pop
mov
sub
cmp
cmp
adc
push
mov
mov
pop
or
jp
pop
popa
mov
cmp
js
in
into
push
repnz
adcb
gs
jns
jmp
or
mov
push
cmpsl
cmp
sub
pop
divl
pop
or
xor
cli
mov
add
inc
mov
mov
xor
inc
cmpsb
and
lahf
xchg
xchg
ret
xchg
jbe
cmpsl
pusha
jecxz
sub
mov
inc
jecxz
jle
inc
mov
xchg
jmp
add
push
push
mov
insb
push
or
ret
sbb
lahf
mov
and
cmp
sti
dec
jp
xrelease
push
sub
sahf
pop
das
ret
inc
dec
push
inc
mov
cmp
dec
push
push
mov
adc
inc
cmc
add
push
xchg
cltd
jno
ja
je
mov
jle
or
sub
push
fcmove
test
xor
aad
jns
imul
clc
jle
mov
leave
fsubl
or
sbb
dec
xchg
mov
pusha
xchg
lahf
sub
sbb
int
jae
add
push
lahf
int3
pop
and
arpl
in
scas
shrl
fisttpll
mov
filds
jns
in
repz
dec
and
push
out
adc
jb
and
xchg
xor
daa
push
enter
jbe
movl
scas
push
mov
jb
repz
mov
loop
loop
mov
fimuls
add
outsb
pop
inc
popf
stos
add
pusha
mov
jp
mov
negl
test
xlat
fsubl
pop
dec
and
jp
jle
xorl
imul
movsb
std
mov
adc
insl
or
les
pop
lods
mov
xchg
ja
mov
push
cmpsb
in
test
mov
aad
mov
in
mov
add
stc
jae
ja
out
add
jecxz
aas
jmp
push
call
cwtl
aad
mov
leave
ss
js
jl
stos
subb
dec
mov
sbb
dec
sbb
mov
loopne
mov
add
cmp
out
pop
mov
idiv
mul
mov
cli
lods
in
pop
sbb
pop
mov
int3
mov
lods
imul
in
pop
sti
inc
mov
cltd
inc
lret
rcrb
sbb
aam
ret
sarl
iret
fmuls
fbstp
lret
shrb
insl
push
in
inc
sti
mull
mov
add
inc
fldl
adc
dec
test
jo
leave
cmp
push
add
mov
aas
call
add
cmpl
jp
roll
jns
adc
mov
imul
adc
jo
mov
mov
roll
aaa
lock
lret
cmc
xchg
jns
sbb
or
das
and
loope
xchg
outsb
inc
push
test
adc
jns
mov
sub
cmp
jbe
fucomp
shl
arpl
div
fst
push
repnz
dec
push
sub
clc
mov
cmp
inc
sub
mov
jne
out
cmp
pop
xor
and
test
les
data16
ja
rol
pop
sbb
cmp
xchg
testl
mov
out
int
dec
jnp
cmc
cmc
mov
mov
in
push
mov
or
dec
cmc
cld
cmp
test
jbe
outsl
rcl
push
push
pop
cmc
test
mov
or
xchg
cltd
xorb
add
les
pop
cmp
sub
leave
aaa
hlt
pop
mov
fdivrs
jb
mov
or
mov
aas
add
jne
mov
cld
addb
imul
in
push
xchg
add
adc
sarb
pop
or
jo
fdivs
outsl
fisttpll
je
fwait
dec
sti
sbbb
insb
add
add
pop
lock
outsb
shl
cmp
or
jge
jp
xchg
ljmp
cmp
outsl
aas
jecxz
sub
pop
mov
or
dec
lea
jns
lret
js
idivb
jne
dec
and
in
xlat
cli
push
ds
and
data16
int3
mov
adc
fisttps
movups
jecxz
push
in
std
jmp
jae
enter
sbb
adc
pop
dec
fbstp
jb
out
mov
mov
movsl
sti
mov
or
mov
sbb
jb
xor
pop
mov
daa
outsb
enter
push
sbb
ds
mov
popa
dec
ljmp
inc
jo
test
std
jp
pop
sbbb
cmc
pop
push
jecxz
inc
dec
jns
xor
inc
jp
and
mov
int3
xchg
js
insb
leave
fldenv
in
xchg
ret
cmpsl
dec
cld
std
mov
loope
in
push
cmp
lock
shl
dec
std
in
mov
push
dec
mov
incl
jp
jbe
cmp
in
xchg
sti
adc
pop
xlat
mov
dec
test
lret
mov
cmpsb
stos
leave
or
xchg
and
jg
add
out
mov
mov
scas
jg
js
cli
cli
lret
aas
xor
add
pop
xchg
outsl
pop
adc
aad
fstpt
lahf
jns
push
leave
mov
xor
push
pushf
adc
es
push
inc
out
test
lcall
out
fwait
imull
pop
add
push
enter
mov
lods
imul
mov
mov
ret
movsl
sbb
mov
push
cli
cmp
mov
inc
cmp
insb
out
xchg
jle
mov
pop
pop
fisubs
shlb
pop
inc
outsl
movsb
in
xor
addb
div
cmp
adc
inc
xchg
mov
xchg
jecxz
inc
xor
and
inc
shrb
lret
les
jp
sbb
jge
dec
test
and
xorl
cmp
xchg
pop
adc
cmp
iret
jbe
ret
jne
cs
push
pop
jns
inc
lahf
mov
pop
xchg
aaa
lea
in
fwait
push
in
leave
pop
out
out
addr16
jp
mov
push
cmp
sub
scas
int
cmp
xor
imul
popf
or
pusha
sub
movl
in
out
sub
cmp
pop
in
movsb
aad
add
push
xor
inc
inc
dec
push
pushf
adc
ja
cli
das
push
add
jbe
xchg
cmpsl
cmp
fs
pop
in
add
mov
mov
data16
mov
lahf
pop
inc
sub
mov
or
mov
dec
lret
shlb
mov
sub
mov
stc
inc
xchg
jmp
imul
mov
push
adc
xchg
push
rorl
or
cltd
push
jge
add
jecxz
sub
dec
push
push
push
xchg
inc
push
push
mov
lret
in
mov
andb
inc
fbstp
mov
hlt
add
jmp
jp
inc
dec
mov
xchg
insl
push
ss
cli
jle
push
xchg
pop
cmpsl
testl
fnop
in
outsl
jae
lahf
rcr
jo
add
pop
imul
add
ret
call
xor
in
xchg
mov
rorl
movsl
pop
xchg
jle
sub
add
push
in
testl
pop
adc
mov
pushf
pushf
push
push
push
dec
popf
cmp
out
mov
push
jp
jbe
jno
dec
push
aad
sar
repnz
cltd
cld
xchg
jo
or
jno
aaa
daa
lcall
insl
stos
mov
movsl
inc
in
lods
push
fwait
repnz
jns
je
movsb
xor
xchg
popa
xchg
cmp
cwtl
repnz
loop
inc
pop
cmp
in
jns
pusha
jo
sbb
ret
outsl
add
or
push
mov
adc
mov
dec
pop
lret
pop
xchg
push
repz
pop
pop
jp
fidivrl
mov
es
lret
out
cli
and
cmp
xchg
dec
mov
inc
out
scas
xlat
out
mov
push
mov
roll
mov
mov
pop
test
pop
jbe
mov
rcrb
jl
add
cmpsl
xchg
test
mov
mov
ret
cmp
sbb
daa
dec
out
fistl
fnstsw
ret
or
adc
or
dec
push
movsl
push
loop
rcrl
scas
push
fsubr
mov
leave
or
mov
shll
cmp
cmpsl
arpl
ja
adc
mov
ret
insl
and
cmpsb
push
test
sbb
imul
sarb
mov
adc
in
pop
fldenv
int3
adc
andl
and
pop
add
inc
cmp
pop
inc
dec
imul
mov
sti
test
and
inc
mov
lahf
and
push
xcrypt-ecb
cmpsl
mov
loop
sbb
mov
lds
xchg
sub
cmp
xchg
mov
xchg
mov
mov
sbb
fidivrs
lcall
jp
push
mov
pop
in
mov
mov
cli
not
cwtl
fistpl
in
mov
push
mov
xor
xchg
lcall
jl
cs
xor
or
in
out
jp
push
mov
jb
xor
mov
sti
inc
or
pop
and
jecxz
jns
lret
pop
lock
sbb
push
mov
frstor
popf
jecxz
jl
mov
cmp
mov
mov
mov
inc
cmp
out
add
or
push
mov
ds
out
sbb
sub
scas
mov
in
stos
test
and
inc
iret
push
add
cmpsb
cmp
adc
adc
xor
fiadds
xor
sub
mov
lahf
stc
or
sub
adc
fistl
xchg
mov
jp
lock
outsl
stos
mov
leave
jl
xlat
pop
pop
lahf
test
stc
fwait
icebp
outsb
xor
out
dec
cmp
test
pop
sbb
in
ret
stos
out
mov
out
mov
ss
lods
test
and
pop
stos
data16
inc
mov
xor
dec
setp
pop
sub
js
push
in
in
pop
out
stc
popf
lahf
fs
scas
mov
pop
adc
int
inc
add
sub
bound
js
fwait
mov
mov
jecxz
call
aaa
add
sub
mov
ja
arpl
out
frstor
int3
mov
sbb
inc
add
xchg
mov
inc
sbb
dec
xlat
mov
sub
fistpll
or
outsb
cli
aas
inc
ja
lret
xchg
sbb
mov
dec
lcall
mov
xchg
les
or
sbb
fisttpll
cmpsb
data16
aam
jns
hlt
push
xchg
pusha
adc
sbb
ja
fwait
subb
and
dec
push
xchg
push
jecxz
into
dec
js
sub
add
cmpsb
jns
outsl
cli
push
cmp
in
lock
dec
push
push
rorb
mov
xchg
cmp
fcmovbe
dec
cmpsb
sbb
xlat
jne
sbb
or
add
sbb
mov
cmp
cmc
fiadds
push
out
push
in
push
xchg
mov
mov
imul
push
adc
mov
adcl
pushw
cmpsb
xchg
testb
lea
sarl
xor
inc
inc
out
lahf
rcr
jo
insl
out
dec
pop
ret
aas
es
test
cmpsl
jb
decb
pop
jmp
dec
mov
cmpb
xchg
jbe
jp
mov
mov
pop
fwait
adc
div
sti
je
pop
xchg
push
xchg
notl
sbb
lods
iret
ret
stos
ret
xchg
jns
cld
pop
nop
push
sbbb
insl
xor
test
mov
rcl
xor
sbb
mov
mov
xor
mov
jecxz
mov
in
and
push
pop
cmpsl
sub
aam
mov
push
xchg
inc
das
sub
jp
ljmp
mov
inc
popf
data16
pop
fimuls
aam
pop
jg
test
out
lods
push
fidivrl
jmp
dec
in
test
rorl
mov
fstpl
pop
fsubrp
out
pop
jnp
data16
push
test
xchg
mov
xor
sub
imul
gs
sahf
and
in
lahf
dec
jns
shlb
jne
pushl
outsl
lcall
in
jp
enter
daa
mov
mov
ss
or
sbb
shr
sbb
mov
in
insb
popa
cld
cmp
lea
mov
mov
lcall
mov
mov
xchg
jbe
clc
stc
push
mov
sti
or
lea
subb
stos
jp
movsb
mov
hlt
lods
xchg
mov
jb
addr16
push
sbb
mov
mov
cmp
js
mov
and
jns
ret
add
sti
sbb
or
pop
push
jp
xchg
lcall
les
cmp
pop
icebp
jp
sbb
adcl
xchg
and
in
mov
inc
push
mov
nop
je
loopne
cli
push
xchg
pop
push
xor
out
sbb
rcll
adcl
pop
and
sbb
push
xchg
dec
jae
nop
mov
inc
or
pop
ja
jecxz
mov
and
sti
jl
ret
sbb
jle
sbb
mov
sub
mov
or
cmc
and
addl
adc
ret
cmc
pop
and
in
rclb
xchg
enter
out
jnp
jecxz
sub
ret
ds
shrl
into
mov
popf
add
push
xchg
jne
aaa
fwait
and
push
mov
add
cmpsl
movsb
inc
sub
outsb
xor
mov
out
loop
stos
imul
cmp
incb
sti
sbb
xor
adc
je
jne
enter
stos
popa
dec
mov
div
mov
sbb
repz
mov
out
out
xor
outsl
sti
aas
sbb
mov
aam
imul
call
push
les
stos
adc
pop
dec
imul
sbb
adc
dec
in
push
pop
cltd
ljmp
imul
ljmp
push
dec
jp
je
mov
sub
xor
fwait
dec
mov
repz
pop
jb
mov
repnz
xor
sub
push
cmpsb
dec
jo
sbb
lea
imul
push
adc
adcb
mov
jns
test
sub
nop
mov
dec
mov
pop
fwait
imul
fwait
inc
sub
out
insb
push
xor
cmc
jns
mov
jl
movsl
jb
fwait
repnz
pop
xor
inc
xor
jp
out
negl
scas
mov
out
ljmp
inc
sbb
hlt
repnz
rcrb
in
inc
lret
push
roll
xor
fsubl
inc
sti
cmpb
adc
lret
testb
dec
inc
dec
sub
lds
and
gs
lret
cs
pop
mov
in
addr16
je
repz
jns
in
or
imul
cmc
shl
xchg
and
or
cmp
cld
pop
aas
aam
jno
jmp
xor
outsb
data16
testl
xchg
lods
in
stos
out
js
arpl
mov
in
cs
js
mov
xchg
imul
lahf
lret
gs
pop
cmp
in
ret
xchg
repz
add
sahf
arpl
or
pop
dec
ljmp
cmp
inc
stos
cwtl
test
push
inc
jmp
dec
popf
xlat
jge
addr16
movsl
cli
jae
imul
mov
dec
les
xchg
sbb
ret
adc
mov
jb
dec
mov
out
jne
lcall
adc
dec
clc
bound
push
dec
call
xchg
testl
out
pop
mov
push
jp
pop
mov
out
xchg
jp
or
sbb
and
jbe
jp
adc
xchg
sti
sub
iret
cmp
call
xchg
jb
out
lods
jmp
mov
idivl
sti
adc
dec
mov
mov
push
fwait
call
mov
xor
pop
mov
and
fcomps
scas
sti
dec
mov
inc
mov
cmc
stos
clc
inc
repz
mov
bound
jp
adc
pop
in
lret
inc
mov
push
imul
stos
subb
mov
inc
btr
fsts
jne
jbe
mov
fwait
sbb
jae
fs
sbb
mov
xchg
sub
arpl
mov
ret
aas
add
mov
scas
nop
mov
dec
and
xchg
ret
jg
je
mov
cmp
mov
inc
cli
and
jbe
sbb
xchg
fwait
cmp
cmp
cmp
sub
fbstp
mov
cs
jp
jg
stc
xchg
arpl
stc
int
add
mov
mov
in
add
dec
andl
imul
pop
pop
fldl
int3
in
push
js
dec
and
mov
dec
add
push
leave
and
sub
leave
jns
mov
xchg
mov
jb
dec
xchg
add
add
in
dec
or
in
jmp
int3
lret
mull
mov
imul
mov
mov
in
cmp
mov
and
adc
call
mov
scas
pop
xchg
xchg
pop
js
mov
cmpsl
push
lock
cmpsl
fisttpl
je
push
mov
mov
out
cli
stos
sub
cmp
andb
je
mov
inc
stc
jbe
shr
pop
fcoms
test
repnz
fcomi
fnstcw
cmp
iret
xchg
jmp
out
push
popa
add
inc
push
mov
sbb
stc
mov
fldl
sti
ljmp
jbe
mov
bound
es
inc
stos
mov
ss
fstl
xchg
cmpsb
push
jbe
idiv
or
in
movsl
sbb
imul
push
jmp
in
pop
ss
aaa
dec
testb
mov
mov
aaa
ja
imul
jmp
data16
xor
scas
js
imul
mov
cmpsl
out
mov
pop
jb
push
lds
stc
dec
cli
jns
sbb
in
and
cmpsb
mov
neg
sti
or
mov
daa
jg
js
fcmovu
jmp
psubsb
pop
push
in
mov
inc
std
xlat
jp
push
arpl
call
icebp
int
jg
popf
std
out
pop
fstl
mov
mov
mov
mov
push
jmp
ja
mov
xchg
clc
leave
fwait
ret
fsubrl
imul
test
jns
in
push
sbb
sub
cmpsl
out
int
imul
inc
or
inc
insl
nop
adc
or
jne
pushf
inc
ds
outsl
jg
xchg
adc
mov
mov
test
cmpsb
stos
mov
std
clc
xor
and
xchg
xchg
add
mov
out
pop
stos
push
mov
ss
push
mov
mov
mov
test
mov
adc
ror
and
lods
imul
push
clc
push
mov
and
in
imul
push
lods
push
pop
cli
out
xor
addr16
sub
xor
aaa
orb
test
aaa
clc
orb
rol
mov
dec
xor
ret
sar
push
cld
sub
xchg
dec
mov
pop
push
test
leave
jmp
test
mov
mov
cmp
xchg
lock
mov
fistps
addr16
inc
pop
in
sub
imul
mov
push
inc
mov
sarl
fwait
push
and
mov
stc
pop
jg
testb
mov
das
clc
adc
test
sbb
das
fisttps
dec
mov
mov
or
mov
clc
ror
addr16
iret
shrl
loop
dec
and
push
dec
cmc
fwait
mov
aam
andb
and
inc
jns
mov
pop
and
cmpsb
in
mov
jmp
xchg
fcmovu
sub
stc
cbtw
xchg
addr16
jmp
stc
lods
shrd
ss
lea
mov
xchg
cs
inc
or
sub
pop
cmp
scas
subl
imul
and
mov
lock
xchg
test
push
sbb
sub
and
mov
and
je
out
xor
mull
pop
lret
jmp
je
xchg
das
pop
arpl
mov
cld
or
leave
repnz
xchg
mov
and
xchg
stos
pop
mov
shlb
jp
enter
sub
sarb
xchg
imul
into
sub
and
arpl
sbb
rorl
dec
dec
add
jo
inc
adc
cmp
xor
mov
dec
adc
sbb
je
fildl
mov
daa
int
push
je
bound
cmp
dec
mov
mov
pop
pusha
sbb
icebp
ljmp
push
stos
ret
or
push
xchg
jmp
add
movsb
jl
add
push
sbb
ljmp
lock
sub
jmp
fimuls
lcall
aas
mov
ficoml
cmpsl
pusha
jns
bound
push
cmp
test
fwait
stc
push
inc
in
sti
sti
fstl
push
ss
xchg
mov
repnz
ss
ja
mov
lock
lret
dec
mov
pop
inc
cmpsb
pop
ror
dec
fistl
pop
cmp
or
test
xchg
sub
xor
fwait
out
data16
jmp
mov
popf
seta
cs
inc
cmp
ljmp
sbb
movsb
pop
ljmp
mov
stos
divl
ss
neg
lods
xchg
stc
or
pop
pop
mov
adc
sub
in
pop
idiv
jnp
jns
movsl
js
arpl
inc
cmp
ja
enter
mov
cli
adc
mov
jge
pop
mov
loop
repz
xchg
dec
cmpl
cld
jbe
hlt
sti
push
dec
xor
mov
out
inc
insb
xlat
out
stc
lods
cmpsb
imul
cmpl
dec
test
push
mov
filds
push
lahf
mov
mov
pop
testb
jecxz
es
jg
mov
dec
sahf
pop
iret
stos
or
mov
xor
lds
fnstenv
in
xor
mov
cmp
fwait
push
sub
mov
lcall
idivl
jl
in
add
jp
rcrl
mov
out
cmp
fs
cmc
jo
xor
clc
jp
fcmovnbe
fsts
das
clc
int3
push
dec
stos
sub
pop
lods
sbb
xor
sti
dec
or
int3
sbb
jae
in
lods
cltd
mov
push
mov
mov
xchg
xchg
sub
js
mov
loope
jbe
xchg
mov
xchg
mull
mov
sub
jecxz
pop
cmp
mov
xlat
cmp
sbb
sub
enter
es
outsl
sub
cmp
std
lret
notb
jns
jmp
mov
ja,pn
push
das
push
jmp
ja
movsb
jecxz
pop
inc
mov
lret
int3
xchg
mov
sub
dec
ss
loop
shr
das
push
es
xor
push
sti
cmp
pop
xchg
mov
jl
cwtl
push
arpl
dec
mov
pop
jmp
mov
outsb
pop
dec
jns
gs
or
cltd
push
mov
bound
jp
push
pop
mov
shl
xchg
sub
cmpsb
scas
xchg
xchg
in
push
into
ret
xor
cmp
xchg
jecxz
sahf
xchg
mov
pop
imul
mov
cmp
es
mov
lds
jp
mov
lock
mov
dec
mov
stos
pop
xchg
into
cld
mov
xor
mov
or
mov
inc
sti
push
pop
sub
stos
loopne
mov
cli
dec
cmc
lods
sbb
cmpsb
je
xchg
adc
xor
sbb
jmp
repz
mov
inc
and
mov
jnp
mov
addr16
xchg
jnp
vmwrite
cmp
shrl
jo
dec
imul
sbb
stos
es
fs
ss
bound
sarb
pop
dec
fdiv
cmpb
ret
imul
loope
or
int
aad
clc
jecxz
dec
fucomi
add
fcmovnbe
stos
xchg
fiaddl
stos
push
or
xchg
popw
enter
inc
repz
jb
push
aas
jl
js
jo
fs
fisttpll
stc
shl
or
pop
loope
xor
or
stos
daa
add
test
arpl
imul
jecxz
insl
in
mov
lods
divb
fisttpll
pop
imul
aaa
mov
xor
test
sbb
add
ss
lds
xchg
loop
pop
jmp
jb
jle
xor
mov
das
lock
mov
push
cmp
inc
testl
ja
or
mov
repz
sahf
std
je
mov
mov
cmp
pusha
push
dec
mov
mov
fldln2
cmp
cmpsb
loop
lcall
pop
push
and
add
int3
jbe
addr16
push
mov
lods
into
cmpsb
push
adcb
mov
dec
aas
insb
fistps
pop
push
in
xor
ds
jecxz
jg
jbe
jnp
mov
mov
movsb
cmp
push
mov
adc
lea
inc
mov
ret
es
dec
loop
push
xor
cmp
adc
pop
dec
push
loop
testl
pop
in
add
je
inc
out
in
add
pop
pop
cld
dec
ljmp
jo
sub
hlt
scas
test
mov
sarb
enter
inc
xor
dec
lret
es
pop
jb
idiv
inc
mov
ffree
pop
repz
scas
imul
mov
dec
lods
out
cmp
jg
stc
pushf
js
in
mov
das
cmpsl
cmp
lods
ds
stos
imull
arpl
icebp
push
inc
mov
subl
pop
movnti
sub
stos
mulb
les
dec
xor
push
cld
outsb
jae
jae
stos
jae
mov
pop
movsb
addr16
jp
cmp
jmp
sbb
dec
inc
js
jno
xchg
ss
push
ret
jns
scas
js
std
imul
xor
dec
sub
insb
mov
jecxz
movsl
mov
mov
stos
es
dec
sbb
aad
test
jmp
dec
mov
arpl
fisttpl
pop
push
cmpsb
mov
imul
add
mov
and
pushf
lods
xor
popa
cmp
push
scas
mov
push
loop
adc
mov
push
in
adc
xor
mov
mov
mov
in
mov
dec
in
das
popa
mov
cltd
out
add
test
jge
mov
scas
mov
add
mov
add
xor
add
rcrw
ret
inc
cli
xor
cmpsb
mov
mov
cmpsl
mov
or
movsb
fisttpll
dec
in
xchg
in
mov
adc
mov
loope
rol
fcomps
rcrl
adc
dec
mov
nop
or
mov
outsb
mov
cmp
and
xchg
pop
push
call
cmp
push
popa
lret
outsl
pop
push
sub
insl
addr16
xchg
jecxz
test
and
jo
inc
mov
sti
ljmp
stos
shlb
fucom
push
fwait
sahf
dec
pop
xchg
sti
pop
leave
mov
jecxz
add
loopne
mov
push
mov
xchg
sbb
lret
mov
inc
xchg
sbb
mov
stc
jecxz
push
insb
arpl
and
and
and
movsl
aas
mov
adcb
and
les
xor
lds
int3
cmpsb
sti
dec
cmp
add
mov
data16
stos
lods
ja
xchg
or
adc
bound
or
mull
dec
mov
jmp
mov
sbb
push
mov
scas
pop
xor
push
insb
mov
push
and
or
xor
out
pop
inc
out
cmpsb
fsubs
add
in
fcmovne
pushf
jecxz
xchg
cmpsb
idiv
push
mov
add
pop
call
imul
sbb
sbb
scas
popf
dec
int3
mov
mov
add
test
pop
out
push
xchg
js
add
mov
sub
inc
fistl
add
aas
dec
mov
or
fidivs
sbb
add
xchg
xchg
dec
mov
xchg
mov
jmp
lds
push
in
mov
mov
jo
ss
popl
cs
das
je
in
sub
dec
mov
fdiv
loopne
enter
mov
jns
test
jp
iret
fmul
pushf
mov
add
daa
das
push
pop
mov
imul
lret
in
scas
mov
scas
mov
stc
je
aaa
mov
call
sub
stc
movnti
push
push
mov
outsl
sti
xchg
add
xchg
fimull
cmp
or
cmpsb
jmp
adc
lea
popf
pusha
jle
add
insl
gs
xor
lods
bound
mov
or
mov
lock
orl
clc
repnz
jp
jns
in
jo
shlb
sbb
cmp
test
lods
mov
sub
adc
push
aam
cli
mov
cltd
mov
mov
mov
lea
xor
out
push
add
into
xor
pop
push
push
adc
inc
mov
cmpsl
mov
push
sub
push
jbe
add
mov
jle
ljmp
fdivrs
add
push
jo
daa
movsb
pop
xchg
das
addr16
cs
mov
or
shlb
iret
icebp
sarb
out
mov
jb
out
sub
pop
jae
cmp
lock
dec
jg
dec
shlb
cmp
mov
repz
nop
push
lods
or
outsb
repz
lret
arpl
in
sti
jmp
call
jb
imul
loope
xor
test
mov
rclb
jns
cld
lahf
push
xor
imul
inc
push
and
dec
and
lret
sub
push
jp
les
imul
inc
dec
mov
lret
and
lcall
xchg
and
in
mov
cli
stos
mov
stc
and
insb
mov
fldt
xrelease
js
xor
icebp
cmp
jno
and
xor
cmpsl
popf
inc
inc
mov
xlat
push
push
fwait
in
pop
jecxz
mov
pop
or
cmp
jae
cli
hlt
in
and
jno
inc
cmp
cmpsb
fdivl
mov
out
and
cmc
push
fildll
jns
lock
xchg
out
enter
decl
in
nop
cmpsb
data16
insl
jb
cmp
sarl
adc
push
test
or
or
in
icebp
daa
stos
enter
and
gs
lods
and
or
lret
or
mov
cmp
dec
inc
dec
mov
addr16
int3
gs
aad
cli
enter
pop
and
imul
mov
test
pusha
cltd
stc
repz
mov
jecxz
jns
in
mov
fildl
mov
mov
aaa
int
sbb
xor
iret
das
mov
sub
jo
loopne
pop
inc
ret
inc
jp
pop
stos
and
xchg
cmpsb
push
inc
pusha
jg
cmp
xchg
imul
push
and
lret
xchg
scas
adc
dec
mov
stc
xchg
shlb
loopne
fadd
push
aam
xor
sub
scas
dec
mov
shlb
enter
mov
ja
jecxz
sub
imul
push
mov
mov
enter
iret
js
in
mov
jle
ret
dec
arpl
pusha
add
inc
cmc
cmpsb
add
mov
xor
int
adc
stc
fdivrp
cltd
dec
loop
fdivs
or
xlat
insl
mov
imulb
or
fnsave
sbb
jns
push
insb
mov
neg
stos
test
popf
lahf
lods
daa
mov
adc
inc
or
dec
xchg
pop
push
cmp
ret
sub
fstpt
xchg
stc
push
imul
sub
add
pop
pusha
loop
mov
push
adc
cmp
aas
in
fldcw
ja
dec
das
in
pop
jbe
xchg
jae
pop
movsb
pop
sar
outsb
loopne
imul
ljmp
je
gs
mov
out
fnsave
je
imul
fadd
out
lea
stc
pop
out
jno
imul
sub
test
cmpl
pushf
push
arpl
sbb
and
push
push
inc
rol
adc
shll
out
ds
pop
std
dec
leave
into
push
pop
je
fdivr
adc
cmp
push
sbb
jmp
sahf
and
popa
add
sub
ror
sbb
ds
pop
or
outsb
cmp
jge
mov
notb
jmp
or
push
mov
sti
mov
enter
adc
mov
pop
mov
repz
jns
pushl
sub
lret
xchg
mov
lds
inc
out
mov
mov
test
aas
xchg
adc
popf
xor
lea
pop
sahf
fs
xchg
jne
aas
mov
lock
sbb
inc
push
sub
repz
in
outsb
pop
loop
rcrb
cli
dec
pop
sub
push
adc
lret
scas
or
push
das
out
jmp
imul
jb
sub
cmp
ficompl
orb
pop
mov
or
sahf
sar
les
sbb
sbb
cwtl
sub
cmpsl
jns
mov
add
push
mov
pop
adc
shr
adc
xor
sub
ljmp
xchg
and
out
in
dec
mov
test
push
lret
push
push
push
jb
push
cli
leave
in
pop
test
sub
mov
repz
mov
lods
sti
loopne
mov
push
add
call
adc
add
and
inc
dec
add
shlb
xor
je
shrl
data16
roll
bound
leave
dec
sbb
repnz
sub
push
cmpb
mov
or
lcall
addr16
push
cld
pop
push
jne
mov
jp
sti
call
mov
aaa
adc
cmp
fwait
scas
add
xor
add
push
mov
cmp
fldt
or
and
fucomip
cmp
xchg
fucomi
leave
mov
call
fstl
loope
cmp
sti
sti
dec
mov
or
test
in
enter
sar
adc
push
mov
xchg
cmp
lret
or
mov
push
shll
out
mov
ss
test
cltd
movsb
into
sbb
cmp
push
ret
arpl
ja
mov
push
pop
popf
mov
mov
hlt
ja
je
add
push
pusha
stc
mov
and
addr16
adc
outsl
sub
ds
pop
add
cmp
jmp
xchg
and
cmp
cmp
bswap
sti
inc
lahf
cli
hlt
xchg
pop
xchg
loope
test
push
xchg
cli
cmp
insb
sahf
cltd
fldt
sub
jo
jecxz
jp
dec
cmpsb
jbe
iret
mov
sahf
sub
push
mov
pop
push
xor
mov
enter
mov
dec
xchg
int3
jne
std
popa
ja
pop
stos
or
lock
sub
jp
fcoml
popl
sti
sbb
mov
mov
mov
dec
insl
pop
mov
ret
ret
test
dec
shr
lds
je
daa
or
pop
adcb
leave
out
cmpl
movsb
pop
mov
xor
push
xor
xchg
push
ja
xor
xchg
call
cmp
dec
mov
pop
cltd
iret
mov
mov
sti
mov
jae
repz
push
push
pop
in
orb
stc
push
xor
cmc
or
lods
cltd
add
jmp
lods
ljmp
pop
push
add
movsb
jge
lds
scas
jne
aaa
sbb
lcall
cmp
pop
sub
mov
addr16
aad
dec
adc
xor
mov
dec
popf
jecxz
leave
cmp
test
stos
loop
fsts
inc
pusha
xchg
cld
sti
movsb
push
jp
or
add
pop
xchg
arpl
or
mov
mov
jecxz
dec
push
mov
lret
jmp
sti
mov
cli
add
jle
and
lahf
movsb
pop
int3
pop
add
and
or
jle
pop
pushf
jecxz
subb
add
push
lods
addb
inc
idivb
daa
clc
jg
sbb
sbb
shr
in
xlat
push
adc
xor
lret
andb
stos
jl
xor
or
and
scas
jo
inc
add
jp
mull
mov
jne
mov
push
movl
mov
and
mov
test
dec
int3
push
fimull
cs
in
fs
mov
push
stc
and
push
gs
push
add
push
test
lret
movsb
lds
mov
dec
fcoms
xchg
cmp
jb
jns
ja
sub
jo
mov
sub
test
jge
movsl
out
hlt
xlat
lods
push
jbe
mov
dec
pop
arpl
xor
negl
loopne
xlat
push
add
pop
clc
adc
test
pop
or
aaa
push
xor
je
out
push
push
aaa
pop
out
stos
fnstsw
pop
in
test
push
and
subl
sub
sub
sub
cwtl
mov
ljmp
jae
dec
movsb
dec
and
add
lods
sarb
mov
cmpb
or
mov
cmc
lods
add
insl
movsb
and
mov
je
insl
inc
push
jno
popaw
lret
enter
pop
int3
je
in
mov
shrb
popa
xor
ljmp
cltd
dec
mov
orb
pop
shlb
push
pop
mov
or
mov
clc
adc
pop
add
cmpsb
repz
loop
scas
or
mov
dec
enter
xchg
cmp
aas
sub
jo,pn
pop
lahf
ficomps
push
addl
mov
or
mov
in
push
aam
adc
mov
insb
in
clc
mov
scas
lret
xor
pop
add
mov
movsl
sbb
pop
lret
dec
test
stos
stc
xchg
stc
pop
test
cmc
out
inc
ror
jbe
data16
in
dec
mov
push
jbe
mov
cmp
rorl
xchg
push
ds
inc
rcll
out
and
mov
mov
pop
int
enter
xchg
iret
jb
jecxz
stos
loop
and
ret
push
cmpsb
push
mov
dec
pop
sub
es
js
pop
fstpt
mov
lcall
and
icebp
subb
inc
cmp
movsb
in
imul
dec
jg
imul
loope
rcll
loop
ret
pop
sub
lods
pop
adc
ja
mov
pop
movsb
inc
add
cmp
sub
sub
mov
loopne
cmpl
mov
in
sbb
icebp
xchg
mov
mov
das
inc
data16
icebp
repnz
pop
push
ret
lods
dec
pop
ret
lret
dec
xchg
repnz
out
repz
mov
add
movsl
sub
sub
fcoml
pop
rcrl
jge
and
fs
mov
sub
scas
cli
push
sbb
mov
sti
push
shlb
sahf
adc
jae
in
test
je
repz
mov
stos
flds
jg
mov
out
loop
push
cltd
xchg
pop
popa
mov
fidivrl
mov
xor
or
daa
mov
and
das
xchg
and
pop
pop
or
pushf
lret
ja
je
in
fwait
lock
outsl
mov
hlt
sbb
mov
inc
sub
jno
cmc
ss
ficoml
ja
iret
repz
cmp
adc
mov
and
mov
int
sbbb
das
je
inc
imul
push
jg
cmp
pop
leave
daa
lods
mov
test
mov
fwait
xchg
push
mov
mov
jmp
inc
xor
pop
movsb
xchg
scas
icebp
jo
jno
jp
loop
cmp
and
testl
fnstenv
mov
arpl
fmulp
jnp
mov
stos
ret
jbe
and
cmp
dec
mov
xor
insb
mov
dec
test
in
inc
aas
sub
sahf
dec
add
push
jnp
pop
cld
mov
outsl
adc
mov
aam
jmp
jae
movsb
add
stos
shrb
jmp
pop
push
push
mulb
popf
dec
in
xchg
dec
dec
xorl
gs
setp
insl
push
xchg
push
lret
pop
dec
repz
xor
out
lahf
clc
lds
sbb
call
repz
mov
mov
movsl
sbb
lret
cltd
jl
stos
cmpl
and
sahf
jmp
mov
add
inc
adc
loop
cld
int
test
and
insl
test
jmp
add
jnp
add
int3
ret
icebp
das
mov
lcall
dec
jecxz
insb
call
fwait
add
movsb
pushf
cmp
adc
stc
dec
pop
dec
cltd
mov
push
sti
ss
wbinvd
aam
jle,pt
lea
mov
jecxz
lds
inc
lock
mov
in
mov
jns
xchg
dec
inc
jns
mov
or
add
jno
inc
inc
mov
pop
mov
xchg
jp
test
outsb
cmp
imul
movsb
lods
jae
out
popl
push
aas
xorb
jbe
jg
sub
lcall
sub
repz
cli
gs
sti
jle
jne
push
ja
mov
sbb
shrb
pop
lds
lods
data16
jne
fsubs
inc
dec
push
cmp
or
stos
lods
jbe
pop
cmp
mov
lods
pop
sbb
outsb
cmp
les
je
cs
bound
inc
cmp
xchg
js
push
dec
jbe
insl
jno
adc
xchg
jle
sbb
xor
fbstp
clc
pop
sub
stc
xchg
stc
repnz
insl
outsb
bound
shr
sub
je
es
adc
or
or
mov
jno
inc
orl
or
jbe
neg
sbb
mov
fwait
out
fldl
sub
outsb
hlt
mov
adc
cld
cmpsl
and
mov
sub
jne
aam
cmp
pop
insb
push
fmuls
inc
add
lea
mov
mov
jnp
sbb
adc
mov
push
and
nop
in
ljmp
adc
xchg
xor
push
scas
or
dec
insb
push
pop
idivl
mov
add
mov
jbe
movsb
sbb
mov
out
arpl
and
gs
stc
mov
lods
push
je
out
jb
and
test
sbb
cltd
pop
inc
jns
orl
mov
scas
test
xorl
orb
and
out
loop
in
dec
jbe
or
sbb
sub
das
mov
lods
and
das
lea
aam
sub
dec
out
sti
cmpsb
sub
push
sbb
push
gs
and
loop
xchg
xchg
data16
push
pushf
cmp
pop
push
leave
stc
push
push
sbb
push
mov
hlt
push
jnp
std
sbb
sbb
mov
mov
lds
jecxz
fcmovbe
jp
adc
repz
and
je
fldcw
and
in
jbe
inc
jbe
addb
in
out
lret
push
popf
mov
xorb
xchg
mov
and
fwait
or
inc
xchg
mov
cmc
mov
rcrb
fcoml
pop
jb
and
push
push
or
jecxz
lea
imul
push
mov
mov
mov
in
repz
cmp
enter
add
insb
pushf
pop
or
cmc
xlat
mov
cli
cmc
sub
lret
jge
pushf
lcall
outsb
cli
pop
enter
jmp
inc
push
movq
jns
lods
stc
out
jmp
xchg
lods
jo
pop
mov
xchg
jmp
pop
jno
in
sub
pop
cmp
xchg
inc
in
mov
jne
mov
jp
outsl
jmp
jg
psllw
xor
dec
cld
pop
mov
int
jg
pop
mov
sub
lret
adc
cmp
je
sbb
push
mov
rol
push
xchg
ret
adc
mov
mov
adc
ljmp
mov
mov
add
mov
test
pop
shrb
std
add
push
sahf
clc
imulb
mov
test
push
adc
sti
xchg
les
push
mov
stos
test
add
jo
mov
and
lret
push
cs
add
inc
dec
mov
push
inc
jecxz
mov
loop
mov
ret
or
fsts
mov
inc
in
and
or
scas
stos
int3
test
sub
cmc
dec
mov
fisubs
lock
xchg
aam
stos
sti
adc
jbe
cmp
add
fildll
jge
pop
mov
int
pop
popf
popa
pop
inc
adc
dec
in
cwtl
shll
jo
popl
jns
sub
adc
les
xor
dec
sahf
shlb
dec
pushf
cmp
adc
sub
sti
push
push
cs
shlb
cmp
inc
bound
ret
loopne
pop
cmp
movsb
jo
jo
and
out
es
insl
cmp
push
in
pop
dec
mov
xchg
add
cmp
dec
cmp
xchg
icebp
lea
bound
inc
ret
pop
jns
out
or
pop
fbstp
inc
out
and
pop
adc
jp
pop
xor
scas
inc
and
dec
lcall
std
adc
in
andl
mov
fildl
mov
ja
lret
mov
sub
mov
ja
movsb
sbb
cmc
adcb
cld
jle
push
jp
push
bound
js
movsb
mov
dec
add
test
fs
jno
popa
cmc
jp
mov
adc
js
cld
pop
outsb
int3
movsb
dec
jge
dec
mov
pop
test
jg
outsl
dec
mov
inc
in
cmp
orl
repz
bound
xchg
jns
pusha
adc
jecxz
pop
je
and
pop
lret
mov
stos
cmc
divl
das
jecxz
xchg
and
ss
scas
cmp
and
je
mov
inc
dec
fs
clc
xlat
lock
xchg
enter
data16
jge
js
in
pop
inc
mov
loope
mov
in
imul
jmp
xchg
jle
loop
mov
xchg
push
jne
xchg
outsl
je
mov
pusha
jecxz
pop
sbb
ja
dec
mov
adc
js
mov
fcoml
jns
mull
mov
sti
add
add
mov
cmp
outsl
adc
imul
cmc
out
add
or
lods
or
jns
jo
jp
xlat
es
xlat
or
repnz
jp
xchg
cmpsb
pop
les
push
int
stos
sub
adc
lods
fiaddl
jo
sbb
push
pop
js
iret
mov
jne
iret
fmull
sub
jns
loopne
mov
fstps
sarb
jb
call
repz
mov
mov
jl
mov
cmpsb
fsub
jmp
add
lods
and
adc
and
std
jl
mov
ss
clc
push
jge
ret
ficoms
xchg
cmp
iret
inc
mov
push
adc
and
mov
mov
ret
sub
stc
ja
cmpsl
jae
dec
mov
loope
mov
jns
jb
mov
mov
ficompl
push
loop
push
xor
jmp
iret
pop
xor
adc
js
imul
mov
dec
jecxz
fidivrl
xchg
adc
pop
movsb
dec
andl
pop
mov
or
dec
mov
mov
test
movsb
xor
mov
jno
jb
mov
jns
addr16
movsl
loopne
iret
mov
imul
xchg
in
aam
xchg
test
mov
push
xchg
dec
push
fistpll
push
add
ficoml
pop
movsb
jmp
ss
out
iret
mov
loope
cmp
enter
cmp
stc
sub
stc
sbb
sbb
loop
or
lcall
lahf
mov
xchg
or
add
jno
mov
jmp
sahf
lock
mov
jp
dec
sti
pop
pop
filds
jbe
scas
aam
mov
aad
aaa
cmp
mov
jmp
aas
in
xchg
inc
xchg
sub
lods
xchg
pop
cmp
pushf
sub
ds
cli
adc
fistpll
loop
lods
imul
int3
push
sub
add
cwtl
ja
inc
or
daa
dec
insl
cld
ljmp
or
pop
bound
inc
mov
sti
rolb
and
mov
inc
icebp
adc
xor
movsb
xor
iret
bnd
add
cmp
mov
das
jecxz
mov
and
xor
stc
loope
cmc
push
cmpsl
cmp
dec
aam
idivb
xor
xchg
sbb
data16
xor
or
sbb
or
adc
shll
xor
rcll
lcall
pop
sub
xor
xchg
cmp
pop
sbb
inc
repz
xorb
fisttpll
dec
mov
adc
fucomi
push
pop
sbb
or
inc
mov
faddl
fnstsw
popa
lret
pop
leave
inc
mov
lahf
jae
sub
pop
loope
fcmovu
ret
and
push
mov
test
mov
imul
xchg
imul
cmp
movsb
mov
xchg
ret
aaa
cld
mov
aaa
aas
push
out
stc
adc
mov
adc
je,pt
pop
and
stc
out
cld
sub
pmulhw
jb
pop
xor
jle
xchg
mov
and
sub
jp
out
lret
cmp
mov
aad
lods
push
in
cs
pusha
sbb
sbb
fwait
fwait
inc
mov
lock
jns
rclb
std
test
loop
imul
dec
and
dec
pop
mov
clc
ffree
imul
adc
arpl
xor
or
frstor
leave
mov
bound
cmp
icebp
push
leave
fldl
adc
imul
adc
idivl
iret
mov
sti
fstpl
mov
movsb
stos
sarb
mov
pop
jns
mov
in
add
stc
and
neg
insl
mov
dec
mov
xor
sti
jmp
jmp
sbb
pop
sbb
adc
mov
mov
cmp
mov
ja
cmc
mov
in
lcall
jl
addr16
mov
or
xchg
lcall
popf
dec
jns
sti
inc
pushf
test
sti
add
jg
mov
rcrl
popa
into
adc
push
push
mov
addr16
dec
lret
shr
push
je
aam
inc
jp
sarb
dec
cli
dec
mov
fwait
lods
jmp
push
or
aas
out
push
loop
jmp
lcall
mov
fwait
mov
and
arpl
repnz
js
xlat
pop
push
mov
and
shlb
mov
cmpsb
xchg
mov
int3
xchg
ja
xchg
mov
loop
icebp
and
nop
inc
lret
mov
popf
push
inc
data16
aad
gs
lret
mov
sbb
pop
movsb
fsubrl
xor
sti
mov
aaa
sub
js
ja
mov
test
jmp
ret
cli
xor
sbb
mov
jns
sti
in
dec
out
sbb
xchg
fwait
push
jbe
pusha
or
ja
in
movl
outsl
out
mov
in
mov
jbe
idiv
push
cld
bsr
das
scas
mov
movsb
jne
repnz
and
loopne
mov
shlb
xchg
in
mov
add
rcrl
cmp
inc
sub
sub
mov
sbb
fstpt
lcall
sub
mov
in
xchg
in
dec
sub
pop
insb
ds
cmp
cmc
shll
loop
stos
or
outsl
dec
adc
xchg
pop
ds
sbb
xchg
pop
mov
dec
pop
stos
sub
fbld
cli
in
insl
xchg
xchg
nop
jg
fcmovb
xchg
push
sub
scas
or
mov
fwait
xchg
icebp
mov
mov
dec
lret
ja
jp
push
divl
jno
push
or
xlat
dec
outsb
jo
and
test
and
jo
push
jecxz
pop
sbb
inc
lahf
sarb
sub
jp
test
loope
pop
pop
iret
repnz
lcall
dec
jo
sbb
pop
scas
ja
clc
pop
and
mov
fprem
jp
xor
jmp
mov
fdivrl
and
xchg
xor
xor
inc
insl
mov
push
enter
rcrb
data16
adc
mov
push
jns
mov
pop
mov
aas
adc
int
movl
cmpsl
dec
cli
cmpsb
lods
push
jno
and
ja
cmp
mov
aaa
jecxz
xor
pop
ja
in
sbb
loopne
mov
mov
call
push
mov
in
int3
pop
scas
jns
ja
mov
mov
dec
rcll
mov
add
dec
adc
cmp
fld
cwtl
mov
xchg
adc
enter
mov
sti
inc
in
outsl
push
rcr
adc
out
mov
jne
pop
sti
push
enter
lods
fisttps
mov
sti
arpl
inc
insb
sbb
xchg
pop
fistps
mov
pop
sub
scas
xchg
push
roll
sbb
cltd
fsubrl
and
sbb
xlat
dec
sbb
icebp
ret
je
push
or
inc
sub
adc
stos
pop
jp
jno
jp
mov
clc
fstl
insl
int3
inc
mov
and
push
sar
sahf
mov
xchg
pop
fsts
insb
loopne
lock
movsb
into
push
jns
push
int
dec
sbb
rcr
mov
adc
add
idivl
stos
sub
add
dec
jns
adc
mov
mov
cli
jno
xchg
pop
cs
add
sbb
jle
mov
inc
fs
or
jns
stos
es
test
sbb
repnz
mov
mov
fst
das
or
inc
das
das
mov
aaa
add
pop
test
in
cmp
stos
lea
mov
xor
mov
rorb
out
add
jl
sbb
lret
inc
out
inc
xor
ret
and
jle
imul
repz
ja
ret
cmpsb
xor
aad
push
stos
add
je
pop
in
dec
aas
mov
jbe
loop
pop
xor
jbe
call
or
jns
leave
pop
cmp
xchg
rcrl
icebp
mov
mov
arpl
cmp
outsw
fs
pop
xor
push
mov
outsb
mov
ret
adcb
enter
ret
into
fdivl
cmc
hlt
push
xor
mov
mov
inc
int
imul
dec
fcmovnb
das
clc
xchg
mov
scas
fildl
jbe
pop
test
xchg
mov
ret
sbb
push
sbb
jp
jecxz
mov
dec
fs
push
mov
jecxz
aas
add
pop
mov
cmp
mov
sbb
rolb
cmp
subb
jmp
lcall
movsb
mov
and
jo
add
sub
mov
lock
stos
in
cs
fistpl
sti
mov
arpl
adc
jp
jbe
add
cmp
mov
mov
scas
mov
out
js
outsb
push
cmpsl
push
imul
sbb
sbb
shll
jbe
scas
mov
cmp
sti
insb
mov
adc
inc
movl
ds
enter
ss
leave
jle
push
inc
xor
ret
push
and
mov
jecxz
aaa
pop
mov
mov
jns
leave
jg
imul
add
cmp
push
fstpl
loop
push
arpl
and
jmp
notb
add
mov
cmpsl
push
cmp
ss
cmc
in
mov
or
cwtl
mov
lcall
out
idivl
into
xorl
stc
in
mov
dec
mov
or
adc
call
jae
int
xor
hlt
dec
xchg
pop
scas
mov
xchg
jmp
dec
in
jecxz
and
xchg
adc
push
xchg
shrb
sbbb
mull
mov
incb
test
inc
sbb
imul
imul
mov
imul
out
xchg
xchg
mov
cmp
add
jecxz
lcall
or
cmpsb
in
dec
bound
push
sbb
test
push
dec
sahf
cli
fiaddl
mov
cmp
dec
shl
in
mov
cli
aad
fwait
sub
mov
or
imul
xor
rcrb
test
clc
stos
push
ret
and
adc
inc
addb
mov
sbb
xchg
test
repz
pop
dec
test
jae
out
popa
mov
out
jp
xchg
loop
dec
lret
adc
test
pushf
pop
pop
mov
xor
fisubrs
mov
mov
shlb
mov
push
push
push
sbb
lea
xor
push
leave
fisubrs
mov
aad
cmp
lods
ljmp
push
jbe
lds
cmpsb
xchg
xchg
pop
movsl
pop
sbb
out
cmp
sarb
jnp
xchg
stos
sbb
and
mov
sub
gs
cmp
pop
fldl
in
inc
pop
and
xchg
ja
cmpsl
nop
add
dec
aad
push
nop
pop
fistps
ja
xchg
mov
push
imul
cmp
fwait
es
jbe
mov
dec
push
in
pop
and
mov
mov
aas
inc
sti
lret
mov
or
push
sbb
movsb
sub
push
pop
xchg
push
sub
ja
mov
push
gs
jno
and
jecxz
or
mov
sti
push
dec
dec
cmpsl
mov
popl
out
push
fcmovnbe
hlt
sbb
jecxz
push
leave
leave
mov
and
lret
cmp
int
mov
lcall
insl
cltd
inc
push
push
inc
jmp
or
cli
in
sbb
mov
dec
jmp
mov
cmp
fcompl
push
mov
or
dec
les
push
sarl
mov
push
xchg
into
sarl
ret
adc
cmp
add
mov
mov
mov
mov
bound
imul
mov
jp
push
and
fcmovnu
mov
push
mov
lret
xor
dec
fstp
push
loop
loopne
push
mov
jb
jg
pop
mov
mov
adc
int
aas
fnsave
fcmovbe
stos
mov
imul
clc
cwtl
mov
es
inc
ja
add
testb
mov
pusha
jae
sbb
dec
rorb
xchg
jb
mov
and
sbb
ret
lock
mov
cmp
mov
aad
mov
call
adc
push
aaa
mov
cmpsb
out
and
icebp
sub
jno
sbb
and
push
mov
mov
jp
fnsave
xor
jno
fstl
icebp
dec
jne
es
and
push
stos
pop
push
and
sub
push
divl
xchg
and
push
push
add
push
cmc
cwtl
push
and
mov
sbb
dec
iret
nop
and
inc
jp
sub
sbb
xchg
adc
ss
jne
jb
in
gs
imul
adc
xor
lods
call
lods
and
sarl
push
jmp
xchg
aad
mov
subb
out
pop
jge
pop
in
xor
push
pop
add
mov
mov
fnstcw
repnz
and
mov
cltd
push
sbb
pop
inc
sub
mov
mov
cltd
aaa
std
clc
mov
ffreep
xor
dec
fucomi
es
insb
mov
cmpsb
daa
mov
cli
sar
inc
aaa
popa
jecxz
push
jmp
mov
repnz
mov
push
imul
mov
imul
pop
jecxz
push
divl
jns
shll
add
aaa
loop
out
jmp
pop
sub
push
mov
xlat
sar
sbb
sub
sub
jmp
sbb
cmp
add
jns
mov
fwait
popa
pusha
rcll
addr16
cmp
sti
aaa
jo
in
add
or
pop
sub
enter
fimuls
test
xor
mov
cmc
mov
and
in
flds
mov
sbb
das
push
mov
fstps
inc
mov
mov
xchg
adc
sti
hlt
jmp
cmp
mov
jecxz
ret
bound
pop
arpl
mov
pop
jno
jae
xchg
stos
push
adc
std
repz
fcoms
je
pop
sbb
jnp
iret
xor
and
sahf
sub
pop
lock
sub
adc
jnp
mov
icebp
lahf
jp
imul
scas
int
std
sub
jecxz
jl
push
in
sti
out
fidivrl
cli
xchg
sti
pop
stos
jecxz
ja
cmp
cld
in
test
rorb
stc
pop
fwait
cmp
inc
in
cmp
mov
cmc
fwait
xor
stc
adc
dec
adc
fwait
hlt
sub
xor
cld
jns
sub
cmp
repz
xchg
dec
in
rolb
out
in
push
mov
adc
stos
fcoms
icebp
sub
rcrl
push
stos
dec
fwait
xchg
jp
xor
loopne
jecxz
sti
loop
lcall
stos
and
and
cmp
ret
insl
flds
push
cmp
and
lock
add
mov
cmp
cmc
mov
pop
xor
mov
lret
imul
mov
jmp
std
lods
lock
mov
jle
lret
add
pop
lock
lahf
sub
es
xor
push
push
push
lock
pop
stos
jmp
mov
mov
pop
fwait
adc
jb
jae
jge
dec
xchg
mov
pop
jmp
or
xor
test
xchg
pop
test
into
lret
push
cmp
push
xor
shrb
sbb
cwtl
test
jle
adc
ss
push
adc
jmp
lret
repz
xchg
push
cmc
pop
into
loopne
repz
je
jp
sub
enter
cwtl
sbb
add
inc
sbb
inc
fistl
sub
push
lock
repz
push
sub
sub
push
ds
cmpsl
rolb
push
pop
or
sbb
scas
xor
mov
faddl
push
push
xchg
push
or
dec
inc
pop
mov
cwtl
dec
rorb
add
stos
lret
in
lock
lods
aas
js
inc
xlat
std
push
jle
fs
scas
hlt
pop
ds
clc
shlb
dec
and
jmp
out
xchg
dec
lahf
imul
filds
stos
mov
das
fdivrl
enter
sub
gs
movsbl
in
push
dec
xchg
pop
gs
xor
adc
movsb
mov
fsts
stos
aaa
add
or
xor
adc
fwait
rcll
inc
mov
sub
adc
jmp
movsb
mov
mov
jbe
mov
mov
cmp
and
insb
dec
aad
andl
sbb
jb
jno
xorb
cmp
mov
or
inc
pushf
repnz
xchg
repz
adc
xchg
adc
imul
mov
xchg
mov
cmp
lcall
addr16
mov
inc
jbe
pushf
fildll
fiadds
push
jle,pt
inc
or
out
or
mov
mov
push
scas
idivl
outsb
inc
divl
jbe
in
shl
mov
xchg
rcrb
pop
pop
jbe
xchg
mov
jl
in
lock
sbb
push
call
fmul
mov
cmp
mov
mov
push
pop
stc
sub
mov
mov
sub
fsubrl
stos
xchg
xor
jmp
sti
jl
xor
movsb
stos
jmp
out
nop
out
mov
sbb
sub
mov
ret
xchg
call
enter
lods
repnz
lahf
or
adc
sub
or
push
pop
jp
loope
test
cli
int3
pop
loope
insb
dec
mov
shlb
js
adc
test
mov
and
in
sub
push
and
jne
lods
imul
sbb
repz
dec
mov
adc
adc
outsb
jg
push
or
jp
aaa
fnstcw
push
aaa
and
outsb
dec
mov
pop
imul
push
leave
dec
ds
mov
push
ja
pop
jmp
sahf
rclb
xchg
xor
pop
arpl
sbb
lcall
aas
mulb
mov
enter
fstpt
ja
mov
jmp
cli
jmp
stos
test
rclb
mov
pminub
jae
cmp
das
cwtl
pop
jecxz
int3
xchg
mov
xor
lcall
es
sbb
lods
mov
inc
je
mov
enter
sub
xlat
subb
add
out
adc
in
les
ja
shr
cld
ds
lahf
mov
mov
aas
fwait
pop
sbb
out
fsts
jns
out
pop
mov
jo
lcall
ja
cltd
jbe
push
push
mov
or
pop
cmp
mov
ds
imul
cmc
mov
adcl
cli
repz
stos
add
xchg
and
sarb
movsl
mov
jmp
mov
das
mov
mull
stos
je
leave
aas
or
in
push
xor
cmpsb
xchg
xchg
in
data16
sti
std
sub
fs
cmpb
sbb
add
lods
dec
jbe
in
pusha
rcrb
je
ret
pop
push
sbb
push
movsl
mov
mov
pop
pop
mov
test
enter
push
inc
dec
jbe
pop
arpl
xlat
dec
jo
mov
pop
dec
mov
stos
add
push
lret
lock
outsl
mov
xor
stos
add
js
jmp
imul
xlat
mov
shrb
mov
mov
popf
outsl
inc
in
in
mov
lret
or
ret
mov
mov
cmp
and
outsb
cmp
push
sub
mov
mov
outsb
jns
pop
clc
int
sub
lock
dec
push
push
pop
jmp
cmpsl
pushf
leave
sbb
mov
insb
add
mov
call
cld
sahf
add
jae
fwait
arpl
loop
jns
jb
iret
fdivs
xchg
cmc
pop
std
out
mov
loop
mov
jne
aad
mov
mov
mov
icebp
jp
add
sbb
push
xchg
pop
mov
add
scas
adc
jo
mov
mov
fwait
out
mov
cmpsl
dec
sbb
sbb
add
jo
inc
mov
xor
xchg
aaa
and
fwait
add
xchg
add
mov
sub
push
insb
iret
mov
add
sbb
xor
decl
xlat
mov
sub
jbe
mov
data16
in
loop
rcrb
or
mov
or
aaa
ret
xor
cmpsb
pop
ss
mull
enter
sbb
ja
aaa
add
enter
sub
dec
sbb
shl
jg
in
dec
push
cmp
cld
dec
jno
mov
popf
and
dec
out
in
mov
sub
js
inc
add
and
jl
ja
js
and
xor
pop
mov
jmp
mov
in
cltd
jns
sub
xchg
add
in
cmpsl
xlat
test
mov
imul
lods
es
sbb
push
aam
mov
stos
sbb
push
add
sub
cmp
imul
mov
test
or
ret
in
cmpsl
mov
imul
mov
xchg
lock
imul
jle
mov
xor
into
movsb
test
insb
fs
push
jmp
dec
test
insb
adc
jno
jp
scas
inc
imul
dec
sarb
leave
repnz
leave
dec
in
cld
sahf
mov
test
ficoms
sub
and
or
idiv
ss
lods
repnz
out
nop
stos
mov
out
shrl
adc
xchg
aad
leave
xchg
sbb
aaa
fcoms
movsb
test
mov
pop
popf
or
adc
jle
dec
cmpsb
inc
inc
gs
sub
pop
push
es
orb
aaa
xor
repz
or
pushf
pop
mov
sub
mov
mov
and
jb
adc
mov
nop
gs
mov
cli
lds
push
cwtl
test
fdivrs
mov
lock
mov
cmp
add
lret
pop
add
sbb
mov
out
test
dec
test
lret
test
rorb
scas
xor
add
das
cld
ds
dec
xor
int3
stc
out
add
dec
sbb
data16
negl
adcb
in
xchg
mov
add
jecxz
in
mov
dec
mov
ss
in
fs
and
test
inc
ret
subl
inc
lock
mov
fldl
dec
addl
das
jns
cmp
call
ljmp
bound
adc
jecxz
pop
inc
pop
rolb
mov
sti
sub
pop
and
rcrb
jns
mov
cmp
add
jmp
bound
pop
mov
shr
das
popa
push
jmp
punpcklwd
cmp
pop
dec
jb
sbb
insb
mov
jne
add
inc
ja
push
movsb
mov
ss
xchg
or
mov
sub
loope
cs
fcmovb
in
pop
inc
pop
mov
sbb
mov
es
mov
sahf
xor
leave
in
sub
sarl
cmp
push
jg
pop
dec
mov
push
pop
add
pop
push
sub
mov
jmp
xchg
repz
push
jae
sub
xor
testl
pop
mov
jmp
mov
add
xor
rep
mov
scas
push
out
sub
popf
rcll
cmp
mov
push
pop
pop
mov
xchg
jecxz
pop
iret
mov
sti
or
pop
xchg
mov
jo
lahf
pop
into
mov
pop
ljmp
push
fisttpll
stos
mov
sub
jg
and
add
push
repz
stos
and
xor
jo
movsl
cld
fsubrs
pop
mov
xor
pop
and
cmpsl
jp
outsb
stc
jecxz
mov
cmp
cmpsb
or
lock
xchg
mov
loop
imul
icebp
push
lret
push
cmp
mov
in
fcmovnbe
xchg
mov
jns
movsb
repz
stos
cmp
icebp
shld
jle
push
jp
dec
loope
lret
hlt
jns
mov
mov
xchg
sub
xlat
pop
out
aas
inc
add
xor
je
pop
and
scas
ret
aaa
ret
cmp
add
jp
push
jbe
or
mov
and
jb
aas
sbb
and
push
mov
sub
add
mov
aaa
clc
cmpsl
stos
out
fsubs
pop
pop
xchg
scas
mov
sti
cmpsl
scas
aad
notb
mov
sahf
fildl
sbb
mov
inc
stos
dec
imul
mov
dec
xchg
push
or
pop
mov
sti
fists
add
fwait
dec
xor
stos
mov
adc
fiadds
out
jbe
push
push
xchg
ja
mov
sahf
mov
inc
les
pop
mov
imul
mov
insl
xor
push
in
lea
cltd
add
dec
mov
test
push
inc
push
mov
mov
push
xorl
and
sbb
gs
mov
push
mov
push
adc
pop
imul
jns
sarb
fstps
nop
cmp
pop
dec
mov
xchg
or
test
xor
jp
sub
daa
cmp
sub
shlb
fwait
mov
into
xor
cmp
or
push
fstpl
mov
dec
fwait
pusha
hlt
insb
in
push
xchg
ret
or
in
xlat
xor
in
xchg
test
jp
mov
scas
daa
or
mov
adc
imul
outsl
xor
shlb
jo
sub
roll
imulb
mov
in
fldt
dec
pop
add
out
in
cwtl
pop
jp
in
mov
mov
lock
scas
pushf
adc
pop
insl
int3
mov
js
mov
dec
cld
mov
dec
mov
inc
pop
mov
cmp
sti
dec
adcl
cmp
jb
mov
sub
repnz
in
fiaddl
mov
cld
pusha
incl
cltd
dec
add
out
imul
dec
sbb
movsb
cmpl
in
iret
enter
jecxz
out
jmp
sub
mov
cmp
imul
out
push
loope
xor
icebp
loope
mov
in
loope
jo
cs
inc
xor
insl
fwait
inc
lock
mov
jg
out
xchg
mov
fnstcw
fs
xor
into
xchg
jp
mov
xorb
sbb
dec
out
push
push
mov
jmp
adc
mov
adc
jle
mov
std
cmp
xchg
xorl
push
lds
stc
sub
add
aad
jp
jns
mov
adc
add
mov
jns
popa
dec
repz
add
shl
jns
cmp
or
ljmp
mov
cmpl
icebp
sti
dec
xor
repz
jbe
fwait
adc
adcl
mov
xchg
push
sub
or
imull
jno
and
or
test
in
adc
lock
es
jo
lret
js
inc
mull
jg
or
jp
cltd
inc
add
sbb
dec
or
ficomps
jae
in
les
xchg
repz
pop
xorb
push
subb
jl
into
mov
and
lret
lahf
mov
dec
lret
adc
in
fst
outsl
dec
add
ficoml
sub
jbe
jg
mov
lret
iret
sahf
fwait
rcl
jbe
ds
pushf
in
adc
pop
call
mov
sbb
shrl
xor
jecxz
aaa
stc
xchg
clc
push
push
loop
loopne
push
cld
call
js
jmp
add
sub
roll
jg
push
jmp
loopne
adc
pop
sti
cmp
enter
push
negb
dec
gs
data16
jp
pop
scas
aad
std
mov
fnstcw
out
pop
ficoms
mov
jb
pop
pop
mov
and
les
in
cmp
add
scas
jp
cmp
in
cmp
es
push
mov
mov
mov
ja
push
mov
xchg
push
sbb
jne
mov
cmp
repnz
aas
das
outsl
lcall
js
pop
pop
jecxz
inc
pop
rol
mov
or
jb
subb
adc
fstl
cmp
xor
imul
shl
pop
leave
fsubrl
cli
and
imulb
out
mov
mov
sbb
adc
push
out
cli
mov
xchg
ret
sbb
pop
push
arpl
outsl
xchg
mov
out
ficompl
cmp
ret
cmp
stc
cmp
movsl
ja
xor
jns
and
or
sub
add
dec
dec
xor
cld
add
cmpsb
jno
jbe,pt
jg
jns
or
xchg
rolb
mov
lret
imul
mov
inc
loope
mov
pop
cmpsl
adc
mov
movsl
mov
adc
stc
movsb
aas
lods
push
jae
push
popa
push
div
push
pop
icebp
sbb
popf
jecxz
push
stos
cmp
movsb
lods
push
push
cmp
scas
call
mov
mov
in
iret
std
mov
cmp
cmc
mov
repz
ret
lahf
loop
dec
dec
dec
dec
jb
lods
jg
fstpt
pop
fcompl
in
bswap
frstor
fs
data16
cmp
sahf
mov
testb
add
lods
cld
aad
mov
enter
idiv
sbb
pop
bnd
loop
mov
and
inc
dec
pop
jmp
jp
scas
mov
repz
and
pop
and
das
or
and
enter
adc
xchg
jg
out
insb
mov
in
stc
push
xor
mov
mov
mov
dec
pop
mov
mov
mov
fnsave
jnp
aaa
push
mov
in
push
inc
outsl
push
imul
jg
repz
jns
fidivl
push
cmp
xor
inc
add
pop
mov
das
scas
push
add
addr16
mov
pop
jg
imul
inc
test
out
sub
adc
xorb
loop
jo
inc
or
icebp
jp
into
hlt
jns
push
sahf
in
mov
mov
ret
cmpb
sub
shlb
jbe
push
sub
cmp
inc
lahf
or
testb
test
push
dec
loope
mov
fimuls
aam
ja
push
pop
leave
jno
outsb
loope
xchg
pop
and
xchg
mov
or
bound
mov
add
nop
or
adc
mov
mul
aad
ss
cmpsl
sbb
inc
mov
jbe
loopne
cmp
mov
aas
push
xor
out
mov
xchg
or
pop
shr
lods
inc
imul
inc
pop
js
popa
ret
inc
ss
pop
es
or
aas
pop
out
enter
aaa
mov
xchg
in
lock
ret
fwait
mov
js
jmp
bound
jb
out
js
mov
std
jle
and
popl
aaa
repnz
push
add
adc
fidivrs
xor
xorb
aaa
call
inc
int3
dec
ss
scas
jp
push
cmp
ficomps
shrl
into
and
and
push
push
jecxz
sbb
rorl
clc
scas
xchg
and
xor
lds
dec
mov
mov
adc
sbb
dec
sub
pop
sub
dec
xchg
insb
arpl
lret
or
cmc
fldt
sub
or
mov
mov
data16
ja
cmp
es
xlat
int3
mov
popf
mov
push
xor
out
mov
mov
mov
mov
xchg
and
repz
jae
ss
pop
pop
popa
shlb
add
mov
or
pop
xchg
aam
pop
cmp
std
lret
cmp
loope
push
adc
cmpl
pop
jg
js
arpl
out
cmpsl
bswap
fwait
cmc
mov
jbe
enter
into
add
mov
or
leave
lahf
pop
pop
loope
sub
int
jnp
enter
andb
clc
js
insb
es
or
xor
adc
inc
mov
out
pop
sub
push
out
mov
jns
into
mov
push
jp
pop
or
and
in
movsb
pop
mov
mov
cmp
cmp
jo
ret
jge
fidivrl
jnp
dec
push
aaa
std
cmpsl
xchg
inc
mov
aad
sub
push
adc
gs
dec
scas
jns
imul
pushf
push
mov
ja
mov
push
mov
mov
inc
fisubl
out
out
out
dec
mov
cltd
cmpl
sbb
mov
xchg
dec
jno
or
iret
je
dec
push
pop
xlat
icebp
dec
jns
pop
xor
stos
pop
xor
xchg
sbb
jo
in
sbb
out
mov
ja
fwait
in
and
push
mov
jle
daa
jae
mov
cmpsl
push
mov
imul
insb
jle
pop
jb
sahf
adc
cmp
push
out
cmp
jb
addr16
xchg
arpl
pop
in
fcoml
shll
jns
or
ljmp
xor
xchg
cmp
inc
xchg
lahf
push
jecxz
pop
jge
test
ds
xor
in
cs
aam
jbe
push
dec
mov
fidivl
clc
scas
xor
ljmp
push
add
push
movsb
imul
push
in
mov
mov
add
mov
fs
mov
or
jae
mov
ret
xor
cmpsb
rcrb
fsubl
xchg
adc
popa
std
lahf
leave
or
mov
push
cltd
outsl
iret
cmp
mov
imul
push
out
xor
push
test
or
scas
xor
mov
insb
cli
and
in
es
or
dec
rcr
cmpsl
and
pop
mov
lcall
xchg
mov
imul
fmulp
mov
imul
push
jbe
lods
test
xchg
ja
pop
push
outsb
mov
xchg
loope
mov
xchg
pop
cmpsb
pop
in
cmpsb
mov
push
push
pusha
mov
mov
loopne
movsb
ljmp
movsb
dec
imulb
fsubrl
sbb
stos
aad
inc
mov
cwtl
add
clc
into
mov
scas
in
and
xlat
cltd
addl
test
movsb
aam
xchg
and
inc
sbb
cmpsb
repz
rclb
sub
sub
sbb
daa
shlb
imul
sbb
movsb
push
jae
mov
add
pop
inc
mov
xor
stc
inc
mov
or
xlat
sub
shll
pop
pop
push
and
fs
testl
mov
xor
lret
jecxz
push
mov
out
cmp
cs
pop
sub
mov
mov
andb
leave
je
push
and
je
data16
or
aad
dec
xchg
and
and
xor
movsb
and
pop
fs
add
push
pop
lods
enter
ret
loop
pop
cmpsl
addr16
mov
xchg
inc
fistps
push
push
xlat
fs
int3
fwait
rclb
in
mov
push
xchg
sahf
inc
jno
movsl
es
shlb
sbb
lods
pusha
movl
add
pop
cmpsb
pusha
sti
adc
adc
fisubl
cmp
dec
gs
mov
ret
pushf
push
popa
movsl
fwait
jmp
out
pop
shlb
jp
pushw
push
xchg
xchg
fidivs
pop
in
xchg
std
jmp
inc
xchg
pop
imul
push
cmpsb
ljmp
mov
cmp
shll
mov
jns
iret
int3
fwait
jmp
fdiv
push
lahf
adc
hlt
and
adc
jbe
xor
std
cltd
aas
cmpsl
int
nop
xlat
ds
jnp
loopne
fistl
lock
mov
xor
pop
dec
imul
jbe
in
loope
pop
xor
xchg
sbb
cld
data16
push
mov
adc
fistl
shl
mov
mov
scas
imul
pop
or
data16
or
mov
push
inc
adc
xor
aam
fwait
inc
ret
lods
dec
inc
push
pop
cld
push
inc
lcall
jnp
inc
dec
sbb
movsb
inc
sbb
cmp
in
inc
sti
mov
fistl
insb
xor
mov
xchg
into
lcall
sbb
sbb
jns
jp
das
push
push
test
mov
sub
dec
cli
dec
mov
mov
cwtl
fimull
pop
jne
jle
xor
movsl
pusha
out
adc
adcb
bnd
adc
cld
mov
outsb
mov
mov
push
hlt
mov
inc
add
lret
fdiv
xchg
mov
xchg
push
pop
sbb
add
divl
push
cmpsl
repz
jl
xor
aad
sub
scas
cmp
inc
lcall
mov
jle
jg
push
or
stc
imul
cld
lret
jbe
movsb
cwtl
push
mov
jb
inc
out
jecxz
adc
inc
mov
aas
lods
cmp
jl
ret
dec
or
dec
cmp
xor
pop
cmpsl
fidivl
and
cmp
sub
es
inc
xchg
lret
mov
sti
sbb
push
pusha
xchg
pop
fs
mov
fildll
inc
in
ljmp
mov
in
mov
push
dec
stos
pop
insl
fs
pop
mov
jl
or
aas
test
mov
push
or
adc
negl
mov
fst
sbb
daa
dec
add
push
mov
and
push
test
sub
into
push
jle
push
cld
xor
jns
dec
fsubl
mov
mov
jns
pushf
pop
outsb
mov
test
sub
lretw
pop
adc
inc
jmp
lret
shlb
addr16
push
stos
jp
mov
mov
xchg
sbb
inc
ds
pushf
fisubrl
repz
pop
xchg
fnstcw
dec
enter
xchg
xchg
stc
push
rorl
test
lret
repz
in
xchg
in
ss
andb
push
stc
and
div
testl
push
call
inc
fnsave
outsl
and
mov
ss
cmp
sub
out
sti
mov
popa
push
mov
pop
stos
mov
jp
leave
das
cmp
fst
lret
jmp
test
addr16
scas
std
ss
push
in
cs
insl
pop
xor
inc
sbb
sub
stos
lahf
clc
int3
fimuls
cmp
sbb
imull
cmp
test
mov
xchg
mov
cli
int
sub
jg
pop
push
lret
mov
jp
jno
push
cltd
pop
inc
xchg
js
and
frstor
cmpsb
out
xchg
jl
fcompl
pushf
pop
jecxz
movsb
lcall
aaa
pop
pop
mov
xor
add
sbb
cmp
or
xchg
lods
jmp
cmp
dec
pop
fisttpll
jne
test
cmp
es
xlat
out
shl
stc
jb
jo
hlt
inc
and
pop
cmp
in
mov
dec
out
jl
arpl
es
pop
xorb
push
cmp
cli
push
xchg
in
jo
je
push
xor
push
ret
in
xchg
push
sbb
sbb
jae
shll
pop
arpl
imulb
sub
pop
movsb
aaa
ja
add
stos
sti
adc
fs
jg
popf
out
xchg
push
adc
mov
idivl
mov
push
jle
pushf
xchg
lret
sub
mov
ja
adc
and
sbb
inc
stc
nop
cmp
js
mov
cmp
lret
mov
xchg
loope
shrl
out
popf
jle
cld
push
imul
clc
jbe
test
push
test
inc
mov
int
stos
dec
push
in
inc
or
jecxz
nop
loopne
dec
shlb
and
jb
push
in
pop
icebp
retw
scas
jp
xchg
scas
sub
inc
rorl
aaa
xchg
jp
pop
sbb
hlt
out
pop
enter
aaa
cmp
cmp
cmpsb
out
inc
push
in
lahf
fwait
mov
xorb
divb
loopne
pop
adc
jp
mov
jbe
and
icebp
cmpsl
adc
insl
xchg
pusha
add
xor
mov
mov
adc
pop
fbld
mov
pop
xor
adc
pushf
mov
mov
or
xchg
lret
jl
ss
mov
mov
or
and
xchg
mov
mov
movsb
xchg
pop
sti
inc
movsb
adc
in
mov
push
jne
int3
test
testl
pop
jne
cmp
lods
test
dec
xchg
push
loop
and
lea
std
ret
jp
enter
sbb
mov
jae
dec
andl
pop
cs
mov
push
mov
cmp
ret
call
and
sti
mov
rcrl
das
fnstcw
call
jge
loope
fcompl
sub
ljmp
mov
in
mov
rorb
imul
jne
sub
jp
jg
sbb
push
cmp
pop
cmpsb
push
or
mov
adc
xor
jmp
fistpl
adc
or
pop
fs
and
fsts
or
push
or
aaa
inc
sub
lret
stos
cmp
cmp
je
jbe
les
mov
pop
xor
push
ja
jns
daa
ret
add
jb
repz
jg
cmpsl
or
sar
in
mov
ss
sti
icebp
hlt
out
mov
in
out
jne
je
inc
push
popa
and
loope
bound
inc
push
fyl2xp1
iret
mul
ss
jne
hlt
jp
jg
repz
mov
sub
cmp
mov
push
cmp
test
xchg
ss
or
shlb
or
pop
lret
insb
leave
push
mov
inc
adc
hlt
dec
sti
data16
jns
pop
mov
fists
cwtl
cmp
xorl
js
push
cmpsl
mov
out
jmp
jg
repz
mov
xchg
fcomip
pop
pop
in
dec
out
es
and
push
imul
rcrb
add
or
negl
pusha
cs
pop
dec
jecxz
cli
leave
scas
push
aaa
inc
xchg
cmp
inc
stc
int
orb
cld
sbb
fisubs
popf
cmc
cmp
jle
jo
jo
or
hlt
mov
nop
or
mov
fnsave
mov
push
cli
mov
test
xlat
mov
mov
aad
push
cmpsl
cmp
mov
pop
sbb
or
data16
aam
mov
pop
fstpl
xchg
leave
arpl
jl
or
jno
fwait
cmp
cmp
sbb
lds
imull
cmc
pop
shr
stos
enter
pop
push
jne
inc
iret
push
dec
ret
push
dec
lret
pop
xor
push
mov
sbb
add
xchg
push
out
andb
les
mov
xchg
aas
shll
inc
in
or
push
bound
cmp
adc
lret
pop
cmp
cmc
cmp
pop
adc
mov
pop
shrl
adc
fbld
xlat
adcl
bound
mov
mov
xchg
mov
subb
daa
repnz
sub
in
fistl
cmpsb
push
ljmp
loopne
lock
enter
aad
mov
add
mov
add
ret
cmp
inc
shrl
xchg
pop
mov
repnz
icebp
neg
shrl
mov
sbb
pop
adc
jne
or
cmp
test
sbb
loope
ja
mov
dec
adc
sbb
jecxz
mov
mov
mov
mov
repnz
repz
mov
cltd
fstl
ja
movsb
mov
cltd
pop
cmc
push
testl
push
movsl
pop
or
xlat
sbb
add
xor
dec
aad
js
cli
in
lods
addr16
inc
mull
xlat
xchg
addr16
or
fsubrs
pusha
dec
jno
mov
push
mov
cmc
scas
inc
add
fdivl
or
rorb
je
pop
mov
fwait
test
inc
faddl
stos
add
pop
or
test
push
mov
sub
pop
fcmovne
sbbl
push
sbb
inc
and
icebp
pop
cmc
sbb
dec
cmpsb
xchg
and
push
jp
or
aam
pop
jno
xchg
addr16
mov
daa
or
mov
mov
test
jbe
cli
jmp
jno
pop
mulb
xchg
mov
xor
mov
pop
xor
mov
stos
cmp
push
xchg
insb
xor
sub
cwtl
add
jns
in
push
dec
pop
cli
movsb
pop
bound
mov
cli
enter
pop
pop
jmp
int3
js
mov
stos
add
lret
push
cmovp
mov
mov
rcrb
mov
stos
mov
fucomip
pusha
rorb
aaa
fistpl
lahf
outsb
mov
inc
push
xor
in
mov
adc
jmp
fisubrl
push
aaa
dec
sub
out
dec
lods
testl
stc
sub
stc
lcall
dec
jbe
sbb
mov
inc
frstor
mov
hlt
dec
jmp
mov
or
dec
test
int3
mov
es
ja
cli
cmp
mov
fucomi
adc
jnp
or
fldl
xchg
insl
dec
mov
jns
or
pusha
push
sarb
test
int3
jp
pop
adc
orl
push
sahf
fsubp
and
xchg
xchg
mov
pop
jb
dec
in
repz
dec
ja
pop
mov
rol
mov
inc
test
enter
lret
xchg
fcoms
inc
ss
and
cli
pop
cs
and
cmpsb
loop
rcrl
ret
fwait
adc
dec
adc
scas
cmc
push
jecxz
and
ja
cli
xchg
sub
arpl
push
call
in
dec
xchg
out
daa
movsl
fsubrp
pop
xor
repz
dec
jns
dec
xor
cmc
adc
dec
or
mov
dec
lea
xchg
push
mov
add
mov
pop
cmp
clc
jle
jb
jp
mov
rcrl
add
shlb
ret
loop
pop
sbb
mov
mov
push
or
fxch
jnp
div
pop
xchg
ret
cmc
push
and
lds
cmp
xchg
inc
xchg
pop
test
pop
daa
repnz
lret
push
xlat
repz
inc
xchg
xchg
xor
push
out
sbb
xchg
in
out
ret
mov
in
pop
push
adc
add
hlt
mov
mov
in
sub
add
push
dec
in
cmp
adc
and
stc
test
mov
pop
xchg
mov
jmp
pop
cld
or
fidivs
out
jp
pop
scas
jle
stos
cwtl
sub
dec
push
jle
loop
popa
mov
pop
mov
adc
aaa
or
mov
push
sbb
stos
sbb
mov
mov
pushaw
pop
pop
das
push
cmc
cmp
fidivs
enter
jl
adc
scas
pop
push
inc
stc
mov
push
xor
xchg
or
repz
pop
lods
pop
aam
lods
scas
cmpsb
xchg
aad
imul
xchg
xchg
xchg
pop
ljmp
ror
dec
or
push
pop
xor
mov
dec
fnstsw
mov
sub
jb
test
cli
xor
sub
lcall
sbb
inc
mov
bound
adc
rolb
fbstp
cld
movsb
inc
fbld
popf
and
pop
vpunpckldq
sbb
or
adcl
icebp
cld
xchg
xor
mov
jae
int3
jno
fisttpll
xchg
clc
in
fstps
ljmp
lods
push
dec
mov
imul
mov
scas
out
adc
mov
sub
pusha
pop
dec
jmp
sti
jae
push
add
fnstsw
int3
pusha
cld
mov
pop
in
int3
repnz
jnp
nop
cld
call
or
imul
xlat
jbe
mov
mov
xor
ja
pop
imul
mov
xchg
je
push
xchg
cmp
sub
jecxz
jp
xchg
insb
pop
mov
imul
addr16
les
inc
fidivrs
mov
aad
push
out
jecxz
popf
cmp
sub
dec
adc
je
idiv
mov
gs
and
add
cmp
aad
jp
repz
mov
cmc
mov
mov
add
mov
add
jae
pop
pop
sti
xor
stos
fstl
mov
pop
add
mov
jecxz
fistps
push
jl
add
loope
int3
stos
fwait
ret
iret
shrl
rorl
jle
aas
repz
mov
ss
jge
xor
aaa
sbb
inc
xchg
push
imul
movsb
fwait
mov
add
stc
fldenv
add
cmc
pusha
jae
aaa
xchg
loop
ljmp
jp
dec
add
jmp
mov
push
xchg
jns
mov
and
inc
fcmovu
cmp
mov
pop
push
ja
or
mov
mov
jae
ljmp
push
cmp
cli
dec
xor
enter
lods
mov
icebp
dec
sarl
movsb
inc
in
lahf
in
mov
stos
lock
adc
adc
sub
scas
jmp
mov
test
adc
jno
cmp
push
sbb
psubsw
insl
idivb
and
pop
cmp
xchg
sti
mov
ss
ret
cmp
arpl
sbb
sub
stc
or
addr16
dec
inc
inc
or
mov
cmpsb
cli
xchg
sub
add
sub
mov
sbb
ret
insb
cmp
pusha
mov
jg
insl
imul
add
dec
push
jno
outsb
pop
pop
push
js
rorl
inc
jns
sti
stc
call
push
arpl
test
adcb
and
in
sub
or
mov
stc
out
add
test
cmpsl
mov
mov
shll
int
sub
pavgw
sar
filds
rcll
push
leave
push
push
in
lds
je
sub
dec
dec
jae
jle
adc
addr16
scas
xor
bound
xchg
ret
jno
mov
inc
fldl
fisttpl
fldt
pop
push
push
loop
aaa
stos
int
pop
hlt
push
fmul
lea
cli
pop
cmp
loop
mov
cli
jns
mov
xchg
data16
outsl
cmp
mov
test
mov
leave
popl
in
sub
pop
outsb
and
test
mov
dec
lret
jl
in
cmpsb
aad
add
push
daa
cli
icebp
sbb
or
fstps
jne
cmpsb
js
shr
rclb
popf
mov
push
and
addr16
js
fdivrl
leave
dec
test
lret
aas
call
and
je
mov
push
sahf
mov
fsubp
xchg
pop
jp
or
arpl
push
mov
lods
in
hlt
pop
lds
cmp
test
cmpsl
inc
aad
xor
es
subl
mov
add
and
fsubp
out
mov
icebp
inc
dec
add
out
cli
mov
xchg
dec
movsl
clc
pop
sti
in
cmc
push
adc
lahf
ret
arpl
sub
out
xchg
bound
push
mov
xlat
mov
push
xchg
jp
sbb
pop
mov
js
lret
pop
lock
fcomps
insb
lock
pop
jp
sbb
in
dec
dec
or
dec
push
fisttpll
xchg
ljmp
je
dec
mov
xchg
fisubrs
ret
push
cmp
cmpsb
mov
xchg
push
in
or
cmpsb
fidivrl
imul
cmp
xor
mov
mov
in
repnz
mov
push
jbe
add
in
jns
sbb
loope
stos
sub
mull
and
jo
and
cmp
cmpsb
es
cmp
xor
sub
fisttpl
pop
sahf
int3
pop
outsl
sub
xchg
scas
push
jae
cltd
xchg
adc
and
jmp
sub
mov
inc
mov
dec
cmp
sbb
pusha
pop
fs
dec
xlat
scas
stos
inc
push
sti
xor
jmp
jne
scas
inc
mov
inc
jp
stos
push
in
pop
testb
out
jnp
jmp
lret
popf
pop
pop
std
cmp
insl
test
imul
jmp
push
inc
clc
xchg
inc
xor
pop
xor
inc
arpl
inc
and
adcb
std
lret
insb
in
scas
into
xchg
dec
lret
fisubl
aas
das
imul
jp
cmc
insb
lods
push
arpl
and
aam
js
inc
mov
sub
out
lock
sbb
call
arpl
mov
pop
sarb
dec
mov
pop
aad
inc
inc
bound
aad
and
mov
adc
jg
sub
dec
inc
loopne
dec
or
sub
mov
pop
jo
in
aad
shrl
xchg
mov
popf
and
inc
scas
imul
daa
lods
or
sbb
mov
jbe
mov
addr16
into
cmpsb
mov
sub
loope
dec
mov
push
sub
mov
mov
sti
jp
push
mov
fmuls
scas
cld
cmpsl
cli
test
imul
pop
cwtl
loopne
outsb
movsl
adc
or
inc
daa
in
xchg
loopne
cwtl
push
loopne
testl
mov
stc
cmp
imul
sbb
rolb
cmp
imul
inc
adc
cwtl
repnz
xor
pop
fsubrs
cltd
jns
movsb
lea
jb
int3
es
lods
ss
fmul
in
jg
insb
xchg
comiss
insl
mov
dec
jg
add
bound
cmpsb
in
jecxz
data16
lock
jne
in
fs
mov
fstpl
inc
push
lods
movsb
xchg
jl
fldl
xor
dec
mov
jp
sub
jg
in
mov
dec
insl
adc
jno
adc
cmpsb
dec
fnstsw
andl
mov
add
test
push
movsb
pop
cwtl
ja
adc
cmp
sarl
jno
scas
xor
call
addr16
mov
rcrl
notl
pop
or
cmp
cmc
addl
jmp
fwait
or
fnsave
scas
sub
movsl
xchg
daa
sub
jmp
addl
and
sbb
movsb
mov
mov
hlt
stc
fwait
pop
daa
sbb
jns
lcall
push
cmp
mov
stc
clc
lret
xor
lods
mov
pop
in
scas
push
push
jp
pop
inc
fwait
add
mov
js
sub
pusha
leave
int
lret
loop
xor
adc
adc
pop
ret
daa
dec
arpl
mov
scas
fimuls
outsb
fwait
fwait
cmc
daa
aad
and
inc
dec
mov
sbb
aaa
jno
and
and
dec
rcl
push
mov
jns
pop
jp
notb
test
lret
inc
xor
ja
mov
cmp
sti
aaa
out
out
lods
nop
gs
jg
hlt
cmp
mov
jmp
push
fsub
sarl
aad
push
hlt
mov
dec
inc
ja
std
push
stos
popa
jns
xchg
arpl
icebp
sbb
xchg
outsl
es
es
push
jns
imul
sub
cmp
adc
inc
jbe
sub
popf
jne
inc
xor
jp
xchg
cmpsb
fcom
pop
and
mov
sarb
add
out
sti
dec
push
xchg
popa
in
pop
lcall
ja
icebp
adc
cmpsl
imul
das
popa
jb
loopne
arpl
inc
mov
push
sbb
daa
sub
mov
jb
into
xchg
lock
mov
mul
mov
or
int
ja
in
cmp
outsb
mov
pop
lea
rorl
mull
stos
push
aas
dec
das
and
imull
imul
push
push
sti
inc
in
lcall
push
cld
adc
push
out
adc
sub
mov
push
jmp
and
adc
jo
pop
mov
and
lods
pop
mov
mov
mov
sub
icebp
insb
sbb
xlat
sbb
aaa
mov
lcall
jge
cmpsb
jg
fisttpll
mov
xor
sarl
ja
lods
clc
ds
jle
fdivr
andl
mov
sub
lret
cmp
pop
push
pop
fdivl
and
and
imul
fbstp
or
int
enter
push
pop
lahf
es
stc
jo
xorl
mov
fwait
mov
push
daa
sub
mov
add
pop
jp
addps
pop
jg
mov
orl
sub
sbb
dec
rorl
mov
gs
pop
addb
pushf
or
dec
sti
push
rcll
jb
xlat
rcr
insl
sub
pop
sahf
fwait
xchg
inc
popa
sub
push
or
mov
fmulp
aas
bound
adc
cmp
fwait
sub
jb
test
push
add
jbe
cmp
icebp
mov
imul
jne
pop
xchg
inc
cmp
fwait
test
arpl
push
lds
sbb
stos
bound
cmpl
pop
rolb
jae
xchg
xchg
mov
and
mov
lret
sbbl
add
jecxz
jnp
mov
dec
sub
mov
adc
lock
mov
stos
jb
fwait
shrl
push
fstpt
xchg
imul
inc
mov
or
int3
out
mov
mov
data16
mov
and
mov
jns
testl
mov
push
popa
cwtl
addr16
call
testl
jp
inc
loop
mov
lcall
fsts
jb
add
gs
stos
loopne
notl
stc
enter
jecxz
xlat
jno
and
jns
jmp
cmp
jg
clc
sub
pop
xchg
imul
cmp
jbe
or
fcomps
dec
clc
testl
mov
jg
jmp
scas
pop
stos
fistl
lret
cmpsl
xchg
outsl
setl
push
stos
xor
idivb
cmp
insb
pop
out
adc
adc
jbe
dec
dec
inc
insl
cmpsl
insl
jae
add
or
jecxz,pn
sub
cld
add
push
xor
out
popf
jnp
insb
loop
dec
dec
leave
adc
fisubrs
in
sbb
mov
pop
mov
movsb
sbb
mov
rol
pop
push
cmpsl
jns
push
push
xchg
stc
hlt
mov
jp
dec
pop
ljmp
push
pop
insb
push
es
cmpsb
cmp
cmpsl
iret
add
lret
outsl
out
aad
fsubrp
mov
stos
pop
mov
out
mov
adc
mov
mov
fisubrs
xor
repz
fbstp
icebp
pop
fsubr
xchg
jl
jo
aaa
idiv
mov
mov
hlt
sbb
cmp
in
add
notl
ret
cli
shrb
adc
cs
ret
in
and
lock
jno
in
cld
or
pop
jb
stc
loope
mov
mov
shl
hlt
mov
jbe
pop
lahf
in
dec
adc
xor
mov
sti
xor
imul
push
shll
ljmp
dec
testl
push
mov
ret
or
push
addr16
aas
idivb
addr16
jae
mov
stos
xchg
jecxz
jp
cmpl
jg
xor
aaa
fisttps
divl
mov
pop
sti
stc
pop
push
inc
pop
mov
push
sub
inc
out
lret
jmp
out
push
lret
pop
jne
add
xchg
scas
xor
jg
mov
out
jp
sbb
test
test
push
cs
mov
xchg
add
push
mov
mov
cmc
repz
cli
lret
mov
fisubl
jae
fisubl
test
push
rcrb
rolb
aad
scas
mov
xchg
xor
push
pop
and
pop
rorl
cmpsb
in
outsl
xchg
mov
lds
cmp
or
cli
cmp
ret
cwtl
mov
ss
pop
insb
popl
ret
dec
lret
insl
shl
mov
cwtl
mov
cmp
fnstenv
sub
outsb
xchg
stos
jnp
add
data16
enter
cmp
cmp
jae
or
push
loop
mov
pop
sub
push
sahf
mov
push
push
js
pop
cmpsb
out
xor
jb
xlat
inc
in
dec
push
ss
mov
stos
sbb
lcall
addb
int
int3
mov
ja
cmp
push
rolb
cmp
cld
push
mov
flds
stos
sti
mov
dec
sbb
icebp
cltd
xor
js
imul
cmp
mov
jge
sub
cld
dec
pop
outsb
sbb
pop
clc
sbb
pop
or
pop
sub
sub
neg
out
test
sbb
jbe
xchg
sbb
xchg
inc
outsl
pop
mov
pop
ret
pop
cmp
imul
lods
pop
or
sti
stos
sbbl
movsb
sti
cmp
in
lahf
xchg
icebp
cmpsl
jp
cmc
cwtl
nop
cwtl
pop
xchg
cmpsl
loope
das
div
test
jbe
fnstenv
mov
lret
pop
out
movsb
sbb
and
pop
or
mov
cmc
and
mov
push
iret
pop
sbb
push
xchg
mov
sti
sub
clc
nop
and
push
adc
xlat
test
or
ds
adc
push
pop
push
jae
aas
or
xor
fstpt
mov
and
dec
sub
gs
enter
mov
movsb
xor
adc
jg
ret
shll
pop
aad
push
jecxz
stos
test
loope
hlt
hlt
int
xchg
imul
jp
pop
sub
popf
push
lods
adc
aaa
pop
cmp
fisttps
test
insl
push
cli
in
test
push
cld
sub
add
sarl
idivl
dec
lock
cmp
lock
mov
movsl
and
stos
inc
inc
or
jbe
hlt
lods
into
lods
add
loop
not
imul
cmp
ret
sub
fs
pop
mov
sub
fucom
jnp
inc
adc
xchg
cmp
sbb
mov
frstor
pop
adc
imul
mov
mov
iret
mov
loopne
popa
rcrl
rcrl
jo
aas
cld
push
or
or
mov
hlt
inc
xor
sub
sti
jnp
inc
mov
aas
pop
outsl
fnsave
jp
dec
push
pop
sbb
hlt
out
cmp
or
pop
out
out
ror
and
ficoml
push
jbe
test
cmp
or
iret
and
call
jecxz
mov
adc
test
cmp
mov
outsl
add
repnz
pop
cld
stos
imul
jne
cmp
popa
sbbl
cmpsl
lods
loope
pop
inc
or
and
imul
jle
lret
aas
into
adc
stos
push
pop
pushf
dec
jb
mov
pop
push
sub
out
jecxz
mov
inc
xchg
cmp
xchg
dec
inc
xor
push
xchg
mov
enter
push
mov
push
rolb
xchg
das
into
fdivrl
xor
enter
mov
cmp
dec
aas
pushf
sbb
repnz
mov
mov
cmp
xchg
mov
enter
inc
jno
xor
xor
pop
adc
and
push
mov
inc
movb
inc
xchg
inc
fucomip
cli
add
sbb
add
daa
repnz
mov
pop
push
cmp
adc
test
adcl
jg
mov
inc
fmull
pop
cmp
mov
sbb
repz
idivb
loop
mov
cmc
xlat
int
stos
cmp
xor
xor
push
testl
insb
pop
pop
stos
rcl
pop
xlat
insb
and
xlat
dec
loope
cmp
sub
mov
pop
mov
aad
or
or
daa
int3
push
cs
push
in
or
mov
insb
or
clc
leave
jmp
cmpsb
lret
inc
je
mov
inc
mov
xchg
ljmp
or
shrl
inc
xor
inc
pop
repz
in
adc
xor
pop
das
enter
xor
lret
std
dec
mov
jecxz
movsb
cmp
push
mov
imul
in
jb
cmp
mov
lahf
and
xor
adc
dec
jns
pop
inc
push
pop
jne
out
jbe
in
mov
mov
push
push
les
fstl
mov
xchg
or
jp
pop
dec
jg
mov
sbb
inc
cmp
leave
pop
xor
pop
pop
fsts
xlat
lock
mov
in
or
dec
xlat
outsl
rorl
scas
sub
leave
lahf
jns
and
ja
inc
cmp
mov
data16
pop
dec
in
push
push
jnp
and
in
scas
jns
divl
push
mov
inc
mov
in
mov
mov
push
pop
or
and
mov
lock
imul
pop
jg
lds
mov
aad
cmc
xor
xor
inc
imul
and
adc
mov
jmp
mov
stos
jbe
aaa
add
sbb
outsb
ljmp
mov
sbb
mov
add
pop
test
or
f2xm1
mov
stos
test
decb
ret
cld
pusha
ret
jmp
cmp
ss
not
xchg
and
test
jb
call
ja
cmp
dec
xor
lods
adc
lahf
movl
adcl
cmp
push
insb
stc
mov
pushf
dec
cmp
sbb
fcompl
mov
pop
xor
enter
mov
mov
arpl
movsl
add
movsb
arpl
sbb
push
jnp
arpl
pop
jl
test
xchg
fldcw
sbb
outsb
hlt
jle
fisubrl
push
sub
loop
outsb
pop
sbb
stos
add
test
aad
das
lret
pop
pop
imul
mov
lcall
int3
sbb
dec
mov
push
push
jl
jmp
test
adc
or
xchg
adc
mov
xor
scas
lds
leave
xor
jp
jmp
fwait
pop
sti
sbb
pop
inc
xor
pop
data16
or
scas
cmp
or
cmp
jae
dec
lcall
dec
stos
cld
in
ficompl
out
fldcw
mov
jmp
testl
leave
js
pop
inc
outsb
test
cmp
fistpll
movsb
sbb
sub
in
lret
leave
fsubrs
jbe
data16
sbb
mov
add
dec
cmp
cmp
push
xchg
inc
dec
pop
sti
test
stos
rcll
xchg
xchg
mov
call
and
sti
sbb
xchg
ja
popf
mov
sti
data16
mov
jecxz
push
je
mov
mov
jns
stos
imul
test
jecxz
test
sub
jne
ja
ljmp
test
push
in
cmp
insl
fldl
in
popa
jl
test
repz
push
js
arpl
mov
cmc
jp
jle
lods
mov
adc
jno
mov
ss
cltd
lea
outsl
mov
ja
imul
mov
or
imul
jecxz
xchg
scas
mov
or
cmpsb
inc
pop
cmp
stc
imul
pop
cwtl
ljmp
push
pop
imul
in
fmuls
popa
mov
cmp
inc
popf
in
jo
test
aaa
cltd
cmc
jb
ss
mov
es
ror
xchg
js
cmp
jns
mov
or
cmc
push
jae
in
mov
sbb
ljmp
lcall
jp
pop
mov
cwtl
mov
ja
lock
inc
es
imul
imul
or
dec
outsl
cmp
or
mov
mov
sub
push
test
insb
cli
fstpt
int
jne
mov
sub
push
fwait
in
dec
adc
xor
mov
xchg
mov
aaa
xchg
fistps
mov
xor
xchg
and
test
and
ja
or
rcll
sti
bound
dec
rcr
shl
test
scas
popf
dec
mov
leave
pop
leave
cli
leave
pop
int3
jne
mov
addr16
fadd
cmp
mov
mov
sahf
fdivrl
adc
pop
test
xchg
ljmp
jne
pushf
icebp
lcall
xlat
and
mov
pop
rcrl
je
add
sub
jg
cmpsl
mov
fistl
dec
sub
xlat
xchg
and
push
pop
fidivrs
out
xchg
push
mov
cmpsb
pop
push
shll
sub
pusha
jecxz
imul
rorl
push
jns
aad
push
mov
xchg
push
in
push
mov
inc
and
mov
dec
mov
add
aad
cmp
mov
lea
cmp
ret
push
add
das
sub
insl
or
js
mov
mov
leave
xor
ja
popaw
pop
divl
jnp
dec
enter
jb
or
jae
or
ja
test
dec
jg
inc
cmp
xor
mov
stos
pop
mov
rorl
adc
cmp
ja
cmc
dec
mov
pop
fistps
dec
mov
movsl
mov
popf
sub
dec
iret
xchg
pop
dec
ret
in
out
fildll
movsb
pop
dec
sbb
cli
ljmp
and
xchg
jl
cmp
add
adc
sti
push
push
in
mov
in
roll
adc
repz
or
daa
outsb
insb
sub
pop
push
mov
insb
lock
stos
fists
or
inc
sbbb
rcrl
insb
xorb
xchg
cmpsl
in
and
adcl
xor
dec
shll
add
stos
mov
hlt
mov
sti
and
sti
fwait
ljmp
out
cmp
fwait
js
mov
dec
adc
int3
adc
outsb
outsb
arpl
dec
jae
inc
cmp
dec
scas
cltd
lcall
jle
data16
cmp
inc
or
out
lods
sbb
leave
aas
mov
lret
dec
cwtl
in
jecxz
jp
jp
lods
cmpb
mov
xor
and
setns
dec
and
jns
push
jp
pop
lock
out
and
cmp
test
pop
inc
js
in
cmc
jae
andb
pop
in
cmpl
mov
pop
vmptrst
mov
mov
mov
in
adc
adc
add
cs
cmpsl
fucomi
js
cmp
sbb
ss
jp
mov
lcall
dec
mov
dec
aas
aad
push
lock
cwtl
sbb
mov
mov
je
xlat
jp
xchg
leave
cmpsb
jg
xor
jbe
adc
stos
inc
imul
mov
fpatan
scas
cmp
repnz
outsb
jb
push
dec
ret
or
lea
mov
inc
fyl2xp1
or
dec
ds
xchg
hlt
popa
pop
or
mov
pop
arpl
in
adc
jl
cmp
mov
cmc
arpl
fwait
mov
ret
mull
imull
loopne
jecxz
and
jne
movsl
cmpsl
inc
sub
and
sub
repz
pop
icebp
adc
shll
cmp
dec
fwait
aaa
lret
mov
sub
mov
shr
cmp
cmp
fwait
push
out
cmp
std
push
sbb
jb
jns
dec
inc
data16
pop
movsb
ja
sub
cltd
fstpt
push
xchg
aad
lock
mov
sahf
fildl
stos
in
jge
mov
mov
out
xchg
arpl
xchg
jecxz
mov
sub
je
sarl
dec
push
adc
jmp
lods
imul
ss
pop
or
in
dec
or
dec
fmuls
repnz
ljmp
je
inc
adc
fdivs
xchg
not
and
gs
ja
jecxz
and
daa
scas
idivl
sub
aam
insl
xchg
pop
sbb
xorl
xor
inc
xor
jno
pop
popa
ja
pop
enter
sub
and
lcall
adc
notl
pop
adc
or
cmpsb
in
out
popa
ficompl
xchg
inc
mov
sub
mov
sub
test
jl
push
out
movsb
insl
int
jle
movsl
cmp
out
dec
test
mov
fwait
jmp
inc
adc
inc
in
aaa
negb
pop
sub
mov
aad
scas
nop
test
rorl
xchg
pop
in
addl
mov
test
and
fistpll
jle
fisubl
decb
or
leave
or
push
mov
outsb
aad
ficoms
clc
adc
dec
ds
jns
cli
jno
xchg
adc
imull
bound
icebp
out
lods
jo
test
mov
jecxz
jmp
lods
mov
mov
xchg
lcall
jne
out
ljmp
mov
sarl
ret
xlat
push
ret
in
jo
mov
mov
push
mov
repz
xchg
pop
mov
movsb
pop
push
movsl
inc
out
jns
in
lret
dec
push
pop
mov
lcall
call
push
mov
arpl
rcrb
les
mov
cltd
test
push
jecxz
sbb
jno
outsb
mov
mov
mov
aaa
mov
adc
decl
stc
je
add
ret
lahf
int
divb
jne
or
sbb
cmc
push
ss
mov
aas
js
cmpl
das
mov
ret
pushf
pop
test
pop
sbb
dec
pop
notb
mov
mov
or
fisubrl
jno
mov
subl
sahf
pop
mov
je
mov
cmpsl
js
add
out
adc
push
jecxz
insb
pushf
js
mov
jb
jle
jns
outsb
movsb
pop
data16
push
inc
jp
jecxz
jns
fisubrs
imulb
ds
pop
sar
push
movsl
scas
mov
pusha
imul
pop
aad
adc
cmp
jl
mov
lahf
in
add
jp
idivl
rorl
test
mov
mov
lret
xchg
mov
ret
push
jbe
outsl
jp
dec
mov
sarb
push
mull
fistpl
lret
xchg
mov
adc
call
xorb
xlat
sti
add
mov
ret
xchg
jne
pop
mov
sti
xchg
notb
inc
clc
fwait
and
push
xchg
dec
jo
jae
pop
cmc
lea
pop
sti
ret
xor
mov
aaa
pop
sbb
imul
push
dec
jp
pop
xchg
jecxz
sbb
cmc
hlt
mov
sub
cltd
sub
add
adc
mov
clc
das
push
cwtl
jecxz
push
fcomi
jmp
mov
xchg
pop
push
std
repz
test
mov
adc
xor
fidivrl
push
daa
iret
icebp
inc
cmp
ss
push
popf
pushf
jo
in
cmp
pop
adc
pushf
cld
add
push
cmpsl
dec
dec
scas
pop
leave
cmpsb
jb
movsl
insb
lea
out
mov
mov
pop
testb
sarl
pop
in
push
push
mov
jae
cli
imul
sub
rsqrtps
xor
pop
xrelease
call
fistl
mov
enter
jecxz
inc
pop
mov
andb
dec
dec
aam
out
mov
nop
jb
adcb
cmc
in
stc
insl
test
fadds
cmp
cmp
das
cmp
insb
scas
and
jne
push
cli
or
fidivrs
and
in
int3
insb
icebp
jl
mov
jp
pop
scas
scas
dec
in
xor
sub
cld
pop
insl
sub
add
aam
ja
in
dec
mov
mov
repz
fldl
and
addr16
decb
cmp
adc
lock
jb
stos
outsl
cltd
or
and
pop
movsl
add
jns
cmpsl
rcr
test
btl
mov
xchg
jecxz
xlat
notb
adc
sti
mov
flds
out
mov
data16
dec
lret
add
xor
cmc
testb
int3
sarb
jae
dec
lock
jg
adc
jg
movsl
lret
jne
xor
add
cmc
xchg
testb
out
pop
loop
pop
sub
popl
add
mov
inc
pop
mov
outsl
dec
fmulp
stos
mov
imul
inc
cmc
push
pop
mov
add
mov
loopne
xlat
mov
pop
inc
in
movsb
sub
jle
je
xor
pop
push
mov
jno
mov
jno
repz
nop
in
xchg
cli
mov
mov
lret
sub
sub
mov
mov
test
stos
mov
lods
sbb
inc
je
into
mov
in
xchg
dec
cmpsb
lods
adc
cli
xchg
insb
jmp
cmp
mov
add
and
insl
ja
mov
jecxz
imul
imul
jno
fsubrs
movsb
test
testl
pushf
mov
sbb
sbb
loope
es
or
mov
repz
sub
fldcw
mov
push
and
xlat
out
inc
or
test
stos
aas
and
out
gs
cltd
mov
cmp
pop
cmp
and
fcmovnb
pop
add
add
inc
lods
out
dec
pop
shlb
aam
jno
in
inc
jmp
xchg
lcall
xlat
jo
test
je
int3
jb
mov
xor
push
and
cld
push
pop
stc
lock
mov
mov
pushf
sti
in
call
data16
cmp
fiadds
sbb
mov
in
jp
push
cmp
lods
imul
sbb
and
cmp
ja
mov
cmp
adc
cmpsb
ficomps
cmp
and
je
mov
inc
idiv
xor
sub
dec
push
mov
addr16
mov
popa
inc
dec
leave
jo
data16
ja
repz
movsb
sbb
lds
das
arpl
addb
fstl
cmp
testl
dec
dec
pop
pop
xchg
icebp
cs
loop
ljmp
jno
jmp
lret
pop
mov
into
add
cs
mov
lahf
mov
add
jp
mov
cmpsl
lahf
push
mov
mov
fwait
pop
ljmp
int3
imul
inc
shrl
enter
sub
pop
in
mov
dec
leave
out
add
clc
xor
push
and
aad
jns
repz
cmp
sub
xchg
mov
cmp
xor
pop
scas
enter
ficomps
dec
inc
pop
repz
or
psrlq
jns
pop
leave
xchg
push
xor
aam
sub
inc
out
jae
xchg
jbe
stos
in
cmc
pop
addr16
stos
inc
mov
fs
stos
ret
jne
sub
cmp
mov
mov
iret
xchg
je
divl
or
jmp
cmc
aad
outsb
fmuls
daa
lods
or
in
adc
pop
xor
dec
aad
push
mov
test
push
jge
in
movsb
adc
cli
mov
fwait
in
lds
testl
orb
pop
cmp
sub
hlt
ja
loopne
negl
xchg
test
insl
mov
jp
or
xor
shrb
xor
cmpsb
cltd
bound
aad
inc
fistps
ljmp
xchg
pop
jbe
jb
out
shl
pop
jle
pcmpgtw
lret
jl
mov
xlat
gs
dec
ret
repnz
ss
insb
addr16
cmp
pop
xchg
mov
sub
test
pop
xor
mov
xchg
dec
push
cmpsb
mov
lcall
sti
in
imul
mov
bound
jo
andb
adc
movsl
jo
jp
xchg
sti
jae
or
mov
sub
sti
outsb
js
inc
dec
hlt
jmp
mov
lods
je
sub
and
mov
mov
decl
addr16
add
sti
sub
inc
cmp
rclb
fs
or
fsubr
mov
push
leave
mov
ja
in
push
mov
je
sub
jno
icebp
cld
pop
jecxz
in
xchg
dec
addb
test
cld
jb
lock
mov
cmp
fsubrl
jmp
in
cmp
add
je
in
lock
mov
push
addr16
push
mov
adc
ret
lret
stos
inc
ja
jecxz
mov
rcll
int
ret
ss
dec
jecxz
insb
lods
insb
push
xor
pop
or
lcall
mov
test
pop
sahf
mov
mov
push
cmovb
adc
pop
fdivl
add
push
or
stc
rcrb
hlt
jnp
in
sbb
inc
scas
xchg
sub
pop
mov
xor
push
pop
stos
cmp
sbb
test
in
push
xchg
stos
mov
mov
js
adc
push
pop
add
inc
push
lahf
je
ljmp
adc
push
add
pop
stos
es
outsl
imul
sbb
lock
and
ja
push
imul
jae
adc
movsl
jp
xchg
out
cmpsl
cmpsl
adc
jp
in
lock
pop
mov
ja
int3
sbb
sub
insl
or
outsb
insb
and
in
jg
stos
movsl
jb
pop
add
pop
mov
test
popa
repnz
push
aas
clc
outsb
repnz
scas
jo
sahf
cmp
insb
int
aam
mov
cmpsl
mov
ja
inc
pop
sti
or
mov
repnz
push
in
sub
lock
ret
in
movsb
mov
mov
fnstsw
aaa
data16
sub
cmp
fdivrp
inc
xlat
jmp
jg
dec
and
imul
dec
frstor
pop
lcall
aam
dec
les
ds
mov
repz
dec
or
cwtl
push
cmpsl
mov
xor
add
sub
mov
pop
xor
jecxz
xchg
mov
sbb
mov
xchg
cmp
test
push
push
pop
jge
xor
stos
jb
add
jp
loope
push
push
mov
out
xor
jbe
idivl
stc
mov
mov
addb
or
cmp
hlt
sub
fmuls
mov
jecxz
jle
or
sub
jo
ds
lea
and
out
scas
out
add
adc
ja
mov
lret
outsl
push
into
adc
orb
jns
aam
arpl
fiaddl
mov
loop
jecxz
mov
sub
out
mov
mov
mov
xchg
test
scas
sbb
in
sbb
mov
iret
xor
sbb
lahf
and
pusha
mov
inc
sbb
or
mov
ret
mov
push
enter
stc
aas
and
mov
cmp
jmp
jecxz
push
call
sub
insl
ds
je
xchg
repnz
fcmovnbe
movsb
xorl
aas
cmp
add
mov
inc
jbe
jns
ja
lret
sti
outsl
mov
mov
cmpsb
jo,pn
push
dec
and
cmp
mov
ds
mov
in
imul
dec
cli
mov
jbe
add
loop
rorl
push
shrb
stos
xchg
inc
jbe
and
push
lea
lock
add
fwait
sti
in
xlat
fldenv
outsl
ss
jne
fldln2
fbstp
pop
sub
pop
pop
arpl
popa
cld
lock
mov
mov
push
push
pop
mov
jbe
nop
sub
pop
or
cli
neg
push
stos
imul
jp
popf
icebp
data16
mov
mov
lcall
rcrl
or
pop
jecxz
and
imul
stos
mov
lcall
push
jne
mov
les
jmp
dec
imul
mov
and
jg
jb
push
mov
imul
xchg
adc
sahf
mov
icebp
fsubl
jnp
shlb
or
pop
shl
in
or
pop
in
sbb
popl
push
pop
push
mov
xor
or
leave
xchg
jnp
addr16
add
jns
inc
cmpsb
loop
and
adc
xor
mov
push
lahf
push
push
mov
in
jecxz
xchg
int
scas
das
fldl
lods
inc
xchg
push
xor
pop
pop
mov
in
jbe
stos
cwtl
icebp
jmp
leave
aas
mov
testl
sub
sahf
out
cli
inc
sbb
cmp
out
push
dec
ss
sbb
jb
sbb
ja
adc
mov
ret
adc
xchg
aas
mov
or
pop
daa
stos
or
enter
mov
sbb
aad
mov
cmc
cmp
add
xchg
add
or
js
mov
dec
and
mov
aad
or
inc
jp
mov
enter
nop
cld
adc
rorb
cmp
adc
sbb
aad
mov
mov
ret
stc
or
jmp
or
fisubs
fcomp
sub
pop
jne
mov
stos
push
sub
dec
pop
xor
or
cs
mov
das
mov
shll
xchg
loopne
jp
lods
into
int3
aaa
xor
mov
add
jae
in
or
xchg
leave
push
mov
outsl
sti
mov
cmp
or
in
adc
repz
in
jmp
loope
jp
scas
mov
mov
es
sbb
cmpl
sub
sbb
lret
xchg
sbb
test
jnp
jg
stos
jecxz
dec
mov
in
aaa
inc
mov
cmpsb
pop
sub
mov
pusha
call
repnz
fxch
inc
iret
xchg
pop
out
xchg
rorb
or
mov
movsb
mov
mov
call
aad
in
cmp
mov
scas
pop
test
mov
cli
rcl
aad
es
sub
hlt
enter
push
movsb
fwait
pop
call
out
aad
sti
frstor
sub
mov
shll
in
lret
in
int
push
push
sahf
mov
mov
inc
out
xchg
mov
mov
int3
jle
rcrl
lds
imul
out
fs
jbe
cmp
push
adc
cli
arpl
imul
pop
push
dec
test
repz
or
xchg
jno
mov
add
push
adc
inc
mov
lds
call
jae
mov
mov
orb
mov
sbb
push
add
out
jg
fidivl
push
int
push
mov
test
testl
push
jmp
cld
pop
addr16
movsl
ret
mov
ficomps
mov
movsl
clc
std
dec
sbb
dec
pop
int3
pop
xchg
lcall
call
or
outsl
sub
stc
dec
sub
mov
mov
rorb
rorl
scas
pushf
pop
mov
mov
fidivs
in
popa
cmp
ja
mov
testl
dec
jbe
sti
mov
sbbl
inc
in
outsb
in
cmpl
add
js
jb
add
mov
test
stos
shl
push
ficomps
sbb
gs
inc
jg
xor
xchg
adc
movsb
movsl
mov
ja
out
ss
xchg
dec
xchg
mov
xchg
rolb
pusha
es
popa
adc
pop
sbb
idivb
mov
jg
pop
xor
das
jae
andb
and
enter
mov
movsb
negb
sub
dec
test
mov
mov
fwait
jo
popa
jecxz
pop
sti
imul
stos
jns
repz
sti
adc
test
xor
xlat
data16
into
loope
mov
inc
jae
dec
dec
mov
insb
xchg
sahf
jb
dec
or
ljmp
mov
imul
out
fcoml
jp
push
mov
fmuls
testl
mov
mov
and
push
test
cmp
sahf
loop
loopne
jmp
add
addr16
xchg
movsb
shl
std
push
or
outsb
ljmp
mov
push
add
aam
push
pop
mov
cmc
call
enter
xchg
mov
pop
mov
lret
mov
dec
mov
int3
pop
cmp
mov
rorl
lahf
rcll
xor
jno
mov
sbb
test
dec
sbb
mov
in
imul
repz
jb
sub
xchg
sub
pop
ss
jnp
in
imul
test
xchg
pushf
ja
es
fbld
pop
test
rcrb
xor
sarb
pop
mov
aas
shl
popa
xor
xlat
scas
fs
dec
inc
push
dec
lea
loop
repz
adc
js
stos
aaa
pop
fstpt
pop
mov
aaa
xchg
out
add
adc
pop
mov
mov
push
add
jo
fisubs
les
inc
jno
roll
aas
push
popf
sbb
jg
sar
or
push
in
scas
aas
xchg
inc
cmp
mov
inc
mov
in
xor
and
mov
in
lcall
jb
lods
out
clc
and
push
in
leave
fistpll
inc
pop
mov
mulb
jecxz
cmp
rorb
in
cmp
sub
jp
and
stos
mov
jge
mov
push
xchg
mov
test
jecxz
popf
in
lret
pop
cmp
movsb
sti
mov
mov
ljmp
pop
adc
add
pop
stc
leave
sarb
iret
out
xlat
rcl
cmc
dec
insb
jbe
in
push
int3
pop
xchg
lahf
es
xor
out
lret
mov
roll
cmp
test
clc
lret
inc
jb
push
fidivl
sub
mov
in
adc
cli
push
push
or
push
push
cmpsl
stos
mov
shrl
popf
fcmovnb
fcoml
mov
mov
cmp
fs
je
mov
or
xchg
jp
cwtl
cmpsb
adc
out
notl
xorb
add
testl
cmpsb
in
lods
mov
mov
dec
daa
testl
xchg
cmp
adc
and
scas
and
lcall
int3
sub
push
sbb
pop
sbb
and
imull
mov
adc
mov
iret
dec
repz
xchg
jbe
jecxz
push
inc
hlt
insb
popa
mov
pop
or
inc
in
aam
je
xor
mul
movsl
imul
jp
pop
and
pop
cmp
aam
pop
dec
pop
push
sub
adc
jae
pop
inc
sti
mov
mov
in
data16
popf
leave
leave
je
jns
loop
mov
mov
push
inc
mov
mov
or
xchg
out
cmp
or
jge
or
mov
popa
repz
xchg
mov
pop
mov
das
xor
mov
mov
mov
gs
movsb
stos
push
outsl
ja
es
mov
push
test
aas
mov
dec
in
jge
sub
addr16
push
mov
enter
repz
ds
stc
cwtl
sub
rolb
outsl
adc
mov
mov
or
pop
push
ret
and
dec
imul
mov
cmp
jb
cmpsb
fwait
inc
xchg
sti
inc
mov
mov
dec
rcrb
enter
ret
adc
add
dec
aam
mov
push
test
shll
sti
push
push
imul
mov
mov
movsb
fwait
out
sti
cmp
jecxz
adc
cmp
push
xlat
cmp
push
cmp
clc
movsl
mov
ss
xchg
lcall
rorl
add
sbb
mov
iret
out
imul
pusha
fmul
mov
push
mov
jmp
sbb
movsb
mov
or
push
mov
stos
dec
inc
lahf
mov
adc
or
mov
add
andl
xor
movsb
fstpt
enter
not
lods
and
insb
mov
jbe
pushf
lds
jno
xchg
and
lea
fsubl
lret
test
mov
push
ds
insb
int
xchg
mov
push
popf
pop
sub
pop
dec
outsb
lods
sbb
pop
aam
cmpsb
dec
push
cmp
sti
jns
jne
loope
jae
and
shll
mov
mov
sti
iret
popf
pop
inc
mov
in
or
sbb
push
xchg
jo
adc
mov
mov
cmpsl
lds
ss
xchg
rcrl
xor
jle
test
loope
cmpsb
repz
mov
fisttpl
xor
inc
inc
or
lret
out
and
jns
cld
aad
push
add
mov
mov
imul
xchg
lret
adc
shl
xor
or
clc
add
xor
mov
xchg
adc
add
mov
mov
mov
out
fcomi
shlb
add
or
data16
in
mov
insl
xor
lea
ja
and
cmpsl
xchg
mov
sbb
mov
jle
popa
xor
mov
and
pop
js
adc
notl
adc
xchg
lea
xor
push
lcall
mov
xor
sbb
fcmove
mov
fs
xchg
sbb
mov
aad
lcall
or
std
lods
sbb
idiv
add
pop
xor
push
pop
fildll
js
call
jmp
xchg
lea
jae
push
cli
fidivrs
iret
mov
jo
out
jmp
bound
mov
cmc
in
push
stos
stos
adc
pop
mov
dec
mov
adc
gs
mov
ss
mov
cmp
push
xor
inc
xchg
mov
adc
pop
aad
pop
xchg
mov
icebp
mov
outsb
dec
cmp
es
sub
mov
sbb
add
scas
sbb
mov
imul
insl
loop
dec
mov
dec
dec
fs
mov
or
pop
mov
scas
push
ja
mov
pop
or
pop
test
xchg
mov
bnd
imul
mov
inc
xchg
ret
dec
add
sahf
push
bound
cmpsl
mov
add
dec
adc
adc
pop
mov
aam
jle
mov
ja
mov
je
in
and
add
testb
aas
push
enter
cmpsl
out
pop
popf
inc
inc
pop
sbb
inc
adc
out
add
loope
jge
test
lea
es
mov
repnz
out
xlat
pop
xchg
adc
mov
inc
pop
pop
in
xor
jae
pop
sbb
lea
pop
les
inc
xchg
mov
mov
in
or
outsl
sbb
mov
dec
xchg
cmp
pop
jmp
ret
mov
sbb
or
out
insl
jp
jmp
add
idivl
cmp
mov
pop
mov
out
cmp
arpl
lahf
lahf
shrl
inc
xchg
sbb
mov
aas
ja
or
pop
test
test
in
jo
mov
mov
data16
pop
sbb
xor
mov
test
push
lret
enter
mov
cli
mov
mov
mov
mov
hlt
imull
dec
mov
loopne
cltd
out
dec
sbb
jae
fisubl
jl
pop
inc
in
xchg
dec
es
inc
fdivs
xchg
fstl
out
jp
mov
cmp
stos
inc
and
jne
idivb
pushf
test
mov
rclb
inc
jl
sahf
fsubl
jmp
and
sub
mov
aad
ret
loop
mov
cld
fimuls
jnp
lret
sahf
das
jno
pop
rorl
mov
clc
mov
fldenv
mov
movsb
pop
cmpsb
jge
cmp
cltd
jae
repnz
or
xchg
arpl
adc
jb
xchg
imul
push
addr16
cmp
push
les
push
out
arpl
jg
mov
lods
jne
cmp
out
dec
js
sti
out
pop
mov
ja
dec
or
mov
dec
lahf
es
mov
add
or
mov
mov
fstpt
sub
mov
mov
mov
cltd
cmp
dec
pop
sub
out
cmp
fldcw
lret
xchg
mov
cmp
stos
push
inc
mov
ds
lock
fadd
or
jmp
bound
sahf
test
and
out
sbb
gs
in
fmul
sbb
xchg
or
mov
mov
sub
jecxz
sbb
cwtl
mov
sti
stos
in
stc
dec
jns
imul
mov
jb
fwait
in
sub
decb
lcall
push
cmc
aas
es
in
cmp
add
sti
inc
xor
insb
push
push
je
adcl
sbb
pop
jg
fisttps
pop
push
mov
sar
call
outsl
mov
sub
test
scas
or
mov
dec
push
jp
jecxz
scas
pop
dec
clc
in
ret
push
xchg
mov
cmp
out
cmp
in
mov
in
push
and
xchg
sub
jl
push
add
mov
rcl
pop
lock
std
mov
sbb
jne
cmpsb
dec
xlat
pop
mov
shl
add
jg
xchg
in
icebp
rcll
mov
xchg
cmpsb
ret
pusha
cld
xor
fucomip
mov
push
pop
icebp
and
lcall
lret
out
dec
mov
repnz
sub
rep
fwait
jge
or
adc
lret
jo
jp
xchg
xor
ja
adc
aad
stc
xchg
idivl
insb
inc
adc
and
pop
stos
stc
and
mov
mov
push
xor
jp
fwait
clc
pop
jns
fcmovne
xchg
or
mov
pop
sub
mov
fimull
stos
pop
popl
dec
xchg
lods
jbe
mov
jne
out
xor
stc
cli
and
js
rcr
int3
and
jb
dec
pop
mov
insb
jmp
out
jle
fs
loope
push
xlat
sbb
imul
daa
inc
ds
pop
mov
dec
adc
bound
pop
and
rcr
sbb
sbb
and
xor
xor
rcrb
js
mov
mov
lahf
push
pop
xchg
sbb
inc
mov
mov
je
in
lret
je
mov
cwtl
movsl
pop
rcrl
push
push
pusha
cltd
test
push
xchg
xor
lods
jno
cmpsl
dec
shrl
stc
xor
out
ss
es
fs
dec
xor
xor
dec
fidivrl
test
mov
imul
clc
vpor
sbb
lahf
or
movsb
lahf
cmp
outsl
lods
imul
or
fsubrl
dec
mov
adc
repnz
mov
cld
dec
mov
inc
jp
cld
nop
push
mov
mov
lahf
xchg
xor
jmp
cmp
cltd
jb
push
and
fxch
sub
icebp
out
in
test
adcb
pushl
jecxz
jb
rolb
stos
scas
mov
jp
pop
push
repnz
dec
xor
cmp
repnz
in
cmp
in
sbb
xchg
xor
pop
push
xor
xlat
ljmp
push
clc
mov
mov
inc
in
dec
xor
dec
lahf
dec
scas
sbb
xchg
cmc
mov
out
pop
or
or
lods
int3
cmp
push
jns
push
sbb
xchg
push
or
in
fidivrs
add
jp
dec
jo
imul
push
xor
aas
lcall
imul
loopne
test
mov
in
jmp
mov
or
xor
lods
xchg
mov
sbb
call
dec
jecxz
pop
pop
cmp
fcmovnb
lcall
leave
mov
mov
xor
adc
add
mov
dec
cli
mov
and
loopne
mulb
mov
add
mov
xor
mov
jns
jp
sbb
cmc
adc
adc
jnp
je
or
jecxz
icebp
xchg
popa
fsts
pop
insl
pop
enter
fs
jb
push
adc
jecxz
je
ret
push
push
and
and
cmpl
rorb
jb
cli
dec
fildl
imul
fs
push
push
pop
nop
sbb
sub
dec
push
mov
pop
loop
mov
push
pop
mov
fstl
jg
fidivrs
dec
dec
test
add
add
mov
scas
pop
mov
gs
dec
shll
or
rorb
pop
bnd
pushf
sti
int
pusha
inc
and
out
dec
ja
fimuls
out
flds
mov
cld
mov
std
push
mov
dec
jg
add
mov
outsb
stos
or
mov
jns
stos
xchg
enter
jle
shr
sub
shr
xor
mov
push
popa
mov
in
rcr
or
adc
iret
mov
mov
pop
stc
aam
fimuls
lea
aaa
pop
inc
leave
push
jb
loop
mov
jbe
arpl
daa
clc
fmull
leave
insl
push
sbb
leave
out
xlat
movsb
dec
aad
push
jg
ja
enter
xor
mov
aaa
repnz
and
xor
sub
inc
cmp
cltd
mov
pop
adc
push
test
push
jb
mov
jbe
je
mov
mov
stos
outsl
in
popa
shll
cmp
stc
mov
js
leave
outsl
push
sbbb
mov
aaa
dec
imul
pop
or
inc
dec
jmp
ljmp
lock
ja
adc
inc
aas
out
sub
daa
arpl
cld
cmpsb
idivl
popa
dec
inc
push
inc
pop
dec
jp
inc
lahf
mov
in
xor
fnsave
ljmp
into
imull
dec
es
mov
movsb
or
pop
fcoms
in
pop
sti
xchg
aas
xchg
dec
pop
cmp
pusha
jno
and
mov
movsb
push
mov
jbe
nop
or
xchg
pop
stos
fnstsw
mov
out
mov
test
pushf
push
stc
push
mov
ljmp
or
jae
jecxz
imul
leave
mull
repz
ret
and
test
sbbb
mov
add
mov
cmp
pop
cmp
mov
imull
test
push
sub
aas
ret
dec
fcoml
mov
mul
and
jp
repz
ret
cld
or
dec
cmpb
in
js
jecxz
and
stc
push
shll
push
pop
pop
mov
push
mov
push
mov
pop
cwtl
mov
pusha
sysexit
jp
push
sbb
mov
and
mov
imul
ss
cli
mov
jae
jne
pop
ljmp
imul
loop
jmp
jo
inc
cld
xchg
push
shl
in
or
in
lock
dec
arpl
mov
mul
gs
sub
inc
pop
dec
dec
push
repz
scas
push
lea
hlt
cwtl
mov
pop
es
ret
mov
sti
fisubrs
cltd
mov
out
cmp
pop
xor
sahf
out
dec
stos
xor
addr16
push
sbb
jbe
ds
xor
bound
shll
ss
test
xchg
imul
fucomip
mov
ret
sbb
pop
scas
jno
adc
xchg
jle
inc
cli
arpl
pop
or
leave
outsb
aam
push
add
add
dec
push
mov
mov
cmp
cwtl
push
fsub
int
stc
push
pop
pop
imul
rcrb
mov
cmp
xor
popa
in
repnz
pusha
mov
leave
es
sbb
es
or
pop
xchg
xchg
stc
pop
arpl
addr16
fwait
sti
cmp
cmp
push
cmp
in
xor
imul
repnz
ficompl
push
xor
jb
clc
movsl
jp
jno
addb
icebp
out
add
aam
push
jl
push
in
push
or
inc
mov
mov
insb
pop
cmp
outsb
addr16
sbb
arpl
and
jge
mov
lret
mov
jle
mov
push
fwait
mov
arpl
repnz
xchg
xchg
push
push
push
xchg
shrb
pop
scas
clc
cmp
data16
push
repz
cmpl
mov
rcrb
mov
dec
lahf
hlt
inc
xchg
outsb
dec
and
ss
data16
push
add
leave
xor
rcrl
sbb
jg
cmpsl
js
xor
aas
xor
cmp
xlat
je
adc
ret
leave
out
jns
cmp
imul
lret
or
out
bound
mull
sti
or
cwtl
ja
rcr
js
cmpsb
ds
xchg
mov
jae
adc
jle
xchg
aas
test
jp
stc
leave
dec
loop
add
mov
in
imul
dec
into
jecxz
jae
inc
fcompl
stc
stos
loopne
cmp
cmp
shl
jnp
cmpsb
in
ss
cmp
pop
pop
subb
push
cmp
movsb
ljmp
mov
pop
and
mov
fldcw
jp
push
sbb
out
cmp
add
loop
pushl
addb
jmp
and
ljmp
das
jb
xor
cmp
fistpl
imul
mov
lahf
addr16
jne
lds
mov
push
sub
mov
sbb
add
in
sub
mov
dec
lret
aam
pop
insl
or
mov
enter
lcall
mov
insl
aaa
cmpl
cmp
dec
pop
mov
outsl
imul
scas
addr16
sbb
pop
aaa
jns
clc
and
and
lahf
inc
call
jp
mov
add
in
xchg
mov
test
mov
adc
gs
fimull
addr16
mov
rcll
push
cmp
cmpsl
xor
stc
shll
adc
fldcw
hlt
and
xor
xchg
cmpsb
xchg
xchg
es
aaa
je
sti
fbld
and
pop
sbbb
mov
lahf
add
sbbb
icebp
dec
inc
and
jl
jno
mov
or
sbb
sbb
shll
fisttps
bound
dec
ret
xor
jns
lock
notb
or
jp
jae
push
imul
adc
cs
cmp
stos
dec
mov
rorb
pop
jns
mov
or
mov
jp
int3
pop
inc
jge
sbb
aaa
test
imul
test
mov
sub
sub
sbb
jns
pop
inc
movsb
call
stc
sub
js
stos
lcall
pop
xor
dec
mov
sbb
mov
mov
test
lret
xchg
mov
test
sahf
xor
and
cli
inc
inc
jmp
ljmp
mov
xor
and
es
shrl
dec
xlat
mov
div
xchg
adc
dec
insl
out
ss
xlat
mov
push
fdivl
mov
mov
in
lcall
mov
mov
xor
dec
xchg
xchg
scas
cmp
in
jl
les
cmp
xchg
mov
sub
icebp
rcr
sub
js
mulb
mov
addr16
aas
aaa
mov
xorb
pop
aaa
mov
addr16
or
mov
idivb
outsb
cmpsl
pop
lahf
cli
ret
jmp
mov
jnp
es
scas
jl
dec
xchg
jb
je
ja
hlt
or
mov
pop
out
pushf
pop
inc
mov
scas
cmpsl
aad
ds
je
stos
push
popl
sub
repnz
je
cmp
stos
sub
mov
add
jecxz
in
xchg
sub
or
mov
and
adc
out
mov
mov
push
cmpsb
loopne
or
cmp
dec
fsubl
sbb
adc
mov
inc
daa
test
pop
sbb
stc
inc
or
hlt
or
cld
xchg
loopne
dec
inc
mov
repz
hlt
movsb
mov
dec
mov
mov
jmp
lret
pushf
mov
in
pop
sbb
mov
cld
int3
mov
cmp
xchg
inc
cmp
pop
ja
mov
data16
ja
mov
mov
dec
in
testb
in
int3
jns
sub
scas
mov
mov
ficompl
mov
or
pop
fstl
out
in
stos
divl
aad
call
pusha
mov
jns
bnd
dec
inc
lods
shrb
push
lods
lahf
jne
mov
cmp
mov
adcl
ss
push
push
add
lret
lock
and
push
sub
filds
sti
movsl
and
shl
cmp
cli
mov
or
negb
sti
repz
cli
test
jo
jmp
pop
movsb
insb
adc
stc
repnz
sbb
and
lods
int3
dec
pop
pop
mov
xchg
cmp
aas
fildl
int
push
test
shlb
cmp
lcall
pop
jle
mov
popf
mov
lret
imul
in
sub
stc
addb
out
arpl
or
aas
int
xchg
jp
pop
mov
cmp
cwtl
or
lcall
xchg
push
jne
cli
out
loop
cli
push
ja
jbe
movsb
push
mov
mov
test
push
je
add
pop
sub
stc
jmp
fwait
scas
rcll
idiv
inc
call
or
sarb
inc
dec
jl
sarb
insl
xor
inc
or
mov
popa
push
in
aam
mov
jmp
outsl
fstpl
xor
pop
push
in
inc
mov
xor
ljmp
outsb
enter
mov
int
or
jmp
negl
add
jmp
aaa
push
loop
fidivrl
lcall
cmp
mov
sub
xchg
or
lock
push
mov
jnp
rcrl
push
push
outsb
out
movups
adc
out
arpl
ljmp
cmp
arpl
sub
lahf
jp
je
cmpsl
cmp
mov
es
imul
ret
add
push
pop
jg
lcall
test
inc
insb
adc
xchg
dec
pop
and
stc
es
lahf
mov
jmp
push
repnz
outsb
inc
pop
push
ja
ljmp
jp
inc
jle
cmp
sbb
mov
and
pop
inc
popa
inc
mov
adc
ja
sti
arpl
sub
ret
and
test
rcll
xchg
cli
xchg
add
cmc
push
pop
imul
loop
pop
scas
cmp
ret
add
clc
outsl
xor
add
pop
mov
lret
pop
repz
mov
jmp
sahf
stos
adc
mov
pop
sub
lods
dec
ja
xchg
mov
sub
mov
loop
push
pop
int3
xchg
sti
mov
repz
mov
gs
in
sub
out
ja
jbe
ds
aas
popa
mov
sbb
cmpsb
inc
pop
xlat
jns
iret
idivl
test
inc
cld
addr16
enter
or
mov
fbstp
inc
std
jp
xchg
mov
mov
mov
dec
push
movb
mov
pop
pop
inc
iret
lds
cltd
ss
jb
cld
push
mov
xor
sub
lods
std
out
jecxz
push
aad
adc
das
sbb
xchg
lret
pop
sti
cwtl
ljmp
pushf
dec
int
jmp
in
mov
mov
cmpsb
rcrb
mov
mov
push
jp
and
lret
stos
shl
or
ret
mov
or
pop
shl
scas
ja
sbb
cmpsb
or
pop
cmp
iret
repz
dec
jl
pusha
jae
jns
in
mov
xor
or
aad
stos
and
mov
xchg
mov
lcall
sbb
sahf
fcompl
push
jmp
add
sub
xor
xchg
xchg
addr16
mov
in
pop
xchg
or
std
movsb
fimuls
cmp
cli
cmp
mov
js
xlat
sahf
testb
jo
mov
testl
mov
push
data16
popa
jns
sub
fildll
fldl
leave
xchg
pop
cmp
add
iret
movb
fstpl
in
mov
sub
and
mov
and
inc
test
stc
mov
inc
cmp
jle
cmc
jo
lahf
leave
dec
mov
test
js
inc
je
sbb
mov
icebp
and
mov
mov
repz
push
js
cmc
xchg
repnz
arpl
ljmp
cmp
aad
lret
dec
cmpsb
pop
and
xchg
dec
and
test
cmc
jmp
scas
out
je
out
push
mov
cwtl
out
fsubr
cmp
out
sub
mov
pop
sahf
repz
imul
xor
mov
cs
mov
jno
inc
pusha
je
xor
xor
fs
sub
mov
popa
lcall
stos
and
pop
cmp
jmp
loope
push
in
repz
adc
jmp
stc
cmpsl
cmp
jbe
jbe
sbbb
or
xchg
xchg
rol
aaa
out
les
sub
pop
cmp
push
ljmp
adc
inc
es
xchg
int3
loop
mov
mov
push
fdivl
pop
lahf
sub
ss
aad
aad
cld
mov
xchg
ljmp
fimull
in
js
fstl
push
adc
iret
xchg
push
iret
sahf
fbld
fwait
mov
push
or
lods
mov
mov
add
test
jecxz
fsub
subb
and
mov
inc
add
gs
pop
mov
adc
int
mov
jnp
xor
aaa
repz
xchg
xchg
in
mov
stos
aad
imul
jecxz
inc
xor
add
add
jl
ljmp
cmp
jmp
mov
mov
idivl
dec
mov
dec
pop
cmp
stc
jbe
fmul
jmp
dec
mov
sbb
mov
pop
fstpt
fcom
cmp
dec
clc
push
pop
fdivr
push
jmp
xor
lea
or
cld
outsl
cmp
jbe
mov
jb
xchg
add
inc
jp
pop
out
xchg
mov
and
and
orl
xor
xor
sub
jae
sub
mov
mov
arpl
or
or
or
stos
cmp
pop
cmpsb
jo
push
or
cltd
pop
ja
push
mov
mov
hlt
fcmovnu
sbb
and
pop
mov
mov
stc
pusha
push
and
aad
push
jae
aad
cmp
dec
orl
pop
mov
dec
mov
push
rorb
pop
aam
in
insb
add
adc
fnsave
inc
pusha
push
aas
pop
ja
sti
scas
dec
mov
pop
aad
outsb
aam
sub
loop
jns
inc
or
dec
sbb
mov
jecxz
fcomip
cmpsl
and
jp
mov
and
push
mov
das
xchg
cli
jbe
mov
clc
imul
xchg
mov
mov
repz
punpckhwd
decl
jmp
ljmp
loope
sbb
mov
xor
adc
rcll
sti
outsl
mov
mov
or
adc
mov
mov
jns
or
or
fwait
push
mov
pop
mov
push
push
and
fs
jg
test
aam
pop
scas
rcll
imul
jmp
outsl
jbe
mov
dec
jge
sbb
mov
inc
mov
push
jne
sub
popa
and
cmp
sbb
jmp
pop
test
cltd
imul
stos
mov
push
int
inc
push
in
inc
or
enter
aam
adc
scas
pushf
adc
out
in
xlat
leave
pushf
int3
fnstcw
cmpl
ja
cltd
in
repz
or
pushf
enter
jbe
push
xchg
add
dec
pop
xchg
pusha
or
lcall
inc
outsl
les
xor
sarl
int3
push
movsb
push
or
jmp
adc
xor
cld
xchg
cmpsl
out
mov
mov
test
lret
pop
mov
cmp
mov
pop
test
stc
lods
lret
je
xchg
add
pop
xchg
repz
or
xchg
cmp
xlat
or
mov
aaa
stc
call
sbb
clc
imul
or
push
dec
push
and
mov
mov
insl
lock
push
cs
bound
movsb
sti
cmp
jge
mov
push
lcall
movsb
push
cmpsl
data16
es
faddl
flds
mov
repnz
imul
stos
push
mov
arpl
xchg
scas
and
stc
sti
sbbb
dec
xlat
jle
xor
fisubl
dec
sti
sarl
xor
dec
mov
pop
inc
add
pop
in
xor
lret
sub
mov
sub
int
in
repz
or
and
mov
stc
pop
mov
sarl
dec
pop
sbb
mov
test
clc
stc
jnp
sti
stc
adc
ficompl
cld
enter
pop
scas
jns
pop
pop
mov
data16
scas
out
xchg
xchg
ficoml
cmp
jns
jae
in
push
or
fidivrs
insb
movsb
fistpl
push
into
jns
sti
ret
divl
xchg
jo
mov
test
aas
stos
enter
sub
pop
adc
in
das
push
cli
sahf
xchg
enter
sbb
push
jne
xchg
mov
push
or
bndstx
inc
lods
stc
pop
sbb
mov
sbb
clc
pop
xchg
in
jbe
pop
lods
inc
roll
dec
mov
pop
inc
movsb
leave
sti
scas
aas
dec
cmp
or
add
jp
mov
xchg
cmp
cmp
shrl
test
xor
mov
mov
movsb
xlat
mov
push
pushf
jb
lahf
mov
insl
push
add
je
xchg
push
mov
mov
mov
in
popa
lcall
jecxz
in
sysret
adc
nop
rep
pop
out
lock
arpl
popaw
sub
and
lea
sub
aad
xlat
stc
jnp
xorl
or
fs
push
outsl
dec
in
fistl
sub
xchg
pushf
jmp
insl
bound
movsb
imul
push
sti
mov
sarb
dec
dec
jmp
js
push
stc
gs
mov
bound
jl
scas
sub
dec
xchg
jg
fimull
add
dec
sub
lcall
pop
pop
jbe
jecxz
cmp
adc
dec
and
lret
ret
jns
inc
add
jp
mov
mov
adcl
jecxz
fbstp
enter
bound
outsl
mov
and
jmp
aam
jns
out
movsl
jp
cs
xlat
js
mov
sti
cmp
xor
inc
popa
shll
js
lock
stc
fwait
pop
lcall
dec
adc
dec
xchg
inc
push
mov
shrb
cmpb
pop
int3
fdivs
add
js
mov
mov
cmp
in
pop
idivb
push
cmc
mov
loop
call
movsb
push
inc
clc
stos
shrl
dec
push
in
mov
in
mov
push
adc
sti
or
test
dec
or
jne
jne
ficomps
fidivrs
or
push
pop
pop
insl
mov
lret
scas
xchg
push
ss
dec
cmp
lret
in
sub
xchg
aam
insb
cmp
and
lock
ret
and
ljmp
mov
mov
or
cmpsb
push
stc
in
out
sti
into
cmc
pop
fbld
sahf
imul
mov
push
outsb
pop
stos
mov
fisttpl
mov
loopne
pop
rolb
shll
jns
je
jg
or
leave
popl
jae
pop
sbb
mov
aas
in
jmp
nop
iret
std
jp
mov
ljmp
jmp
int
inc
jns
sbb
int
inc
push
push
mov
push
out
mov
int3
std
mov
aas
dec
mov
or
add
es
dec
fdivrl
mov
ds
jns
mov
ss
push
in
or
and
xor
sub
adc
mov
gs
cs
orl
cmp
mov
iret
mov
mov
jbe
mov
push
int3
mov
push
fs
sub
push
pop
inc
mov
or
pop
mov
sub
or
ret
mov
push
out
sti
jno
leave
jle
pop
jb
out
dec
mov
hlt
inc
xor
sarb
ja
aad
enter
in
fidivl
popf
push
xor
xlat
push
mov
ficoms
cmpsl
aaa
inc
push
inc
outsb
push
xchg
add
xchg
jmp
cmpsb
sbb
dec
lock
cmc
popf
inc
lods
inc
mov
mov
imul
add
dec
aad
jne
or
sbb
or
push
push
stos
je
clc
in
dec
push
fists
std
xchg
push
sub
fdivr
insb
adc
ljmp
mov
mov
cmp
int
mov
mov
pop
add
mov
sbb
notl
or
test
push
in
mov
outsb
scas
das
cmp
int
sbb
mov
jae
xor
pop
cmp
fnstcw
xor
inc
adc
shl
xchg
and
adc
loop
jns
stc
sarl
and
or
jb
inc
dec
mov
sub
sti
jp
mov
jb
mov
jp
mov
mov
push
fnsave
sti
dec
dec
lret
clc
int3
jecxz
jb
dec
movsb
pop
fcmovne
gs
in
and
outsl
pop
std
jbe
cmpsl
sbb
repnz
mov
test
aad
adc
mov
sbbl
jp
repz
les
mov
xor
and
insb
lcall
pop
mov
out
repnz
and
add
es
push
mov
into
pop
push
test
fstps
mov
pop
js
jo
imul
clc
cmpsb
movl
sbb
mov
sub
fs
or
mov
jae
sti
arpl
jae
movsb
jne
or
cmpsb
xor
mov
clc
js
sub
or
fdivs
xchg
xor
call
xchg
movl
jb
aaa
sbb
fisttpl
dec
sbb
cmpsl
fidivs
lock
jecxz
movsb
out
mov
and
xchg
pop
jb
clc
and
push
cmp
add
dec
nop
testl
xchg
lcall
cs
stos
rcll
or
je
shrb
cmp
sub
sahf
pop
js
dec
pop
mov
pop
and
adc
repnz
pop
ss
mov
xlat
fxch
stc
repnz
mov
cmpsl
xor
xchg
in
bound
mov
lods
mov
lahf
lds
mov
jne
and
mov
sub
pop
jno
fstl
insb
pop
sbb
cmp
fwait
jns
stos
push
push
jp
mov
add
pop
mov
fcomip
xor
xor
push
aam
mov
int
sub
mov
orb
push
mov
push
aaa
sub
or
shrb
jns
add
add
sbb
adc
leave
in
stc
aas
iret
shr
inc
fldl
outsl
aas
pop
insl
mov
cmp
pushf
adc
mov
int
roll
xor
pop
dec
dec
mov
add
or
ja
andb
jecxz
lds
js
insl
jns
test
jecxz
les
nop
rolb
addr16
sbb
or
jmp
mov
repnz
xchg
shll
test
jae
jnp
cltd
dec
jg
sbb
loopne
ja
jp
repz
xchg
iret
cmp
or
movsb
lods
and
stc
sub
xchg
dec
dec
push
bnd
jo
jae
je
mov
mov
negb
sti
jbe
leave
pop
out
int
or
mov
int3
mov
iret
cmp
mov
xchg
lcall
insb
rcll
adc
in
ja
or
jg
pop
das
es
out
inc
fisttps
mov
mov
lods
dec
sbb
jg
ss
popf
add
sti
inc
arpl
pop
inc
pop
inc
in
xchg
out
imull
pop
pop
mov
mov
jae
mov
aaa
fmuls
cmpsl
in
aaa
in
xchg
cmp
bound
add
xchg
fdivs
out
sbb
pop
test
mov
mov
inc
or
insb
fcompl
fidivrl
repz
adcl
push
enter
xor
data16
cmp
pop
jns
iret
out
daa
dec
or
sbb
psubd
mov
lds
xchg
ret
sub
mov
adc
jne
inc
int3
lcall
mov
shr
dec
dec
xchg
mov
nop
inc
mov
jmp
negl
je
mov
jp
mov
dec
pop
enter
mov
xorl
int
out
test
ja
inc
dec
cmpsb
popa
dec
in
test
mov
pop
pop
jp
test
or
sbb
enter
xchg
repz
pop
icebp
push
sarl
rol
cmpsb
push
jle
popl
mov
jbe
xchg
scas
insl
cmpsb
add
dec
sub
stc
and
jecxz
rol
sarl
pushf
sub
scas
in
sbb
or
add
jb
repz
test
or
xchg
lods
lret
outsb
fdivp
pop
xor
mov
hlt
shl
mov
push
push
push
gs
lods
lock
push
push
cli
pop
pop
and
xor
dec
in
pop
cld
mov
lods
mov
mov
push
test
mov
cld
sbb
pop
in
jno,pt
pop
hlt
cmpsb
lret
shrl
cs
test
test
fucomi
adc
sbb
ret
xchg
xor
in
adc
lret
inc
in
test
adc
sbb
call
in
xchg
add
mov
arpl
jp
xchg
xlat
pop
mov
jne
pop
push
push
mov
cmp
cmpb
push
push
lods
jns
xchg
cmc
mov
je
movsl
xor
clts
fwait
push
insl
xchg
ror
pop
mov
mov
cli
sti
cmp
jns
ja
cmp
jg
ja
mov
add
clc
fwait
cmp
mov
idivl
aaa
addr16
dec
add
imul
dec
xchg
divb
and
cmp
pusha
jb
cmp
es
jge
jns
inc
cmc
divb
mov
jae
jae
sbb
loopne
movsb
push
xor
push
jb
mov
icebp
bound
push
stos
out
mov
das
mov
mov
repnz
ljmp
arpl
stos
jno
jecxz
jecxz
shrl
mov
push
out
jne
dec
lret
mov
arpl
stc
daa
mov
mov
pop
push
in
mov
sti
rorl
les
mov
and
xor
testl
mov
mov
mov
outsl
mov
lret
iret
fiaddl
cmp
mov
stc
fildl
fwait
mov
les
and
jp
and
sub
daa
jp
and
xlat
lret
mov
mov
dec
rcrl
xchg
xchg
pop
insb
jecxz
cmp
pop
out
push
fsts
ret
daa
rorl
imul
pop
popa
sub
cmp
sub
je
out
arpl
lret
lcall
lcall
rcl
fnstcw
mov
inc
mov
jl
fidivrs
lret
jae
lods
push
add
cmp
mov
push
stos
push
jnp
int
data16
cmp
rorb
insb
mov
or
arpl
dec
bound
mov
data16
out
arpl
data16
mov
jns
pop
and
cmc
sti
jns
in
pop
jns
stc
call
pop
sbb
xor
cli
xchg
or
sti
dec
enter
dec
faddl
cmp
imul
add
add
mov
mov
xor
out
out
fcoml
cmp
in
test
jb
xor
aas
sub
shl
das
dec
enter
cli
sbb
or
xchg
cmp
in
enter
inc
jge
mov
dec
ja
dec
leave
jg
pop
in
pop
jno
inc
xlat
stc
mov
sti
gs
stos
cld
bound
sarb
xchg
mov
mov
mov
ja
xor
cld
push
add
cltd
jl
aaa
fwait
lret
sbb
subl
adcb
xchg
cli
mov
xor
xchg
cmp
fisubrs
imul
add
pop
jns
sbb
adc
sub
shlb
leave
xor
cli
mov
jecxz
negb
in
imul
adc
lods
mov
xlat
aaa
pop
mov
std
xor
daa
imul
mov
push
mov
pop
lahf
jns
cmp
in
jp
in
mov
mov
add
adc
fisubl
push
mov
push
mov
push
aam
lret
cmpsb
pop
push
ret
adc
push
add
mov
or
or
mov
dec
or
inc
add
sti
push
imul
jp
push
test
adc
out
mov
cmp
mov
shlb
scas
dec
repnz
cmp
sbb
jb
aam
sbb
sti
jl
sub
xchg
and
into
sti
mov
int3
and
sub
push
pop
call
push
stc
aas
dec
cmp
pop
jg
pusha
jne
mov
repz
mov
cmp
sbb
call
mov
dec
and
inc
push
push
fcompl
pop
mov
dec
loop
inc
jne
in
push
lret
mov
push
stc
scas
aas
data16
add
jo
imul
inc
xchg
outsl
xor
divl
xchg
lea
loop
mov
imul
stc
xchg
sub
aaa
mov
xchg
leave
cld
pop
adc
jno
loop
sub
imul
mov
inc
insb
pop
rol
sub
test
jmp
adc
stos
or
and
xor
iret
adc
xor
movsb
mov
fadds
clc
xorb
lock
sub
add
aaa
repz
test
fincstp
jecxz
leave
dec
cld
mov
nop
insb
andw
pop
mov
cli
and
and
mov
shl
into
ja
and
imul
inc
pop
pushf
xchg
cmp
xchg
fcoml
xchg
aam
loope
lea
outsb
mov
cs
jl
inc
jbe
int3
mov
mov
sub
cli
data16
stc
jecxz
fsubr
fldenv
shr
mov
movsb
cwtl
xlat
fisttpll
imul
mov
popa
lock
push
lret
out
lds
cmpsl
lret
call
mov
xor
fstl
mov
sub
mov
cltd
rcrl
fisubs
jecxz
or
movsl
mov
mov
enter
inc
mov
imul
jae
into
movsb
push
mov
std
js
xrelease
or
outsl
jg
sti
pop
xor
jge
or
and
xchg
lret
jle
add
iret
pop
xchg
sub
push
jno
out
jae
pop
insb
loopne
loop
and
outsl
inc
xchg
pop
and
jp
loopne
cmp
enter
and
push
pop
xchg
mov
jb
add
jb
push
movsl
mov
pop
mov
pop
xor
subb
in
out
pop
xchg
or
stc
mov
sbb
push
repz
cmp
in
cmpsl
addr16
sti
add
addl
lahf
xchg
cmp
mov
push
jecxz
jmp
lret
mov
adc
mov
xor
jp
cmpsl
xor
lret
repnz
scas
out
imul
or
outsb
mov
xchg
adc
in
repz
xor
dec
js
sbb
mov
out
mov
mov
pop
mov
movsb
mov
jbe
in
cwtl
out
cltd
xchg
xor
mov
sbb
adc
sbb
jno
push
ret
mov
add
push
pop
stos
cmp
lret
ret
aad
sbb
or
pop
mov
shrl
mov
add
lea
sub
dec
fistpll
push
adc
ss
dec
add
or
jmp
movsb
mov
cmpsl
aaa
sub
cmp
leave
aas
jnp
jg
lret
jbe
jp
push
jecxz
xchg
repnz
inc
add
dec
or
sbb
dec
sub
leave
adc
mov
jg
and
and
leave
nop
js
cmp
push
mov
cmp
push
pushw
push
jo
arpl
mov
adc
aas
jl
mov
cmp
gs
inc
cmpsb
jae
cmp
jae
insb
inc
es
iret
leave
popl
popa
call
inc
stos
jb
mov
inc
out
outsb
movsb
sbb
cmp
jo
loop
enter
ljmp
in
push
inc
outsl
stc
cmp
mov
negb
test
mov
sub
xchg
xor
stos
mov
roll
mov
jae
inc
idiv
mov
and
bound
fcmovnb
cmp
fadds
jp
add
dec
ds
and
hlt
xchg
and
sbb
xor
dec
mov
stos
js
cmc
cmp
divl
lahf
jne
mov
dec
lods
xor
cmpsb
pop
popa
jo
sub
andl
enter
into
aam
movsb
sbb
jns
outsl
in
mov
fs
mov
cmp
adc
jne
loopne
movsb
and
mov
cmp
jne
mov
cmc
mov
or
xchg
xchg
and
xor
jno
dec
loop
imul
fs
frstor
ficoml
inc
out
lock
pop
push
mov
sbb
inc
imul
test
cmpsb
imul
dec
mov
outsb
pop
xchg
in
and
mov
clc
loope
xchg
cmp
mov
jecxz
sub
jae
and
test
xor
in
test
inc
jge
jecxz
testl
ja
mov
cmpsb
rorb
push
cmp
arpl
xchg
test
lret
sahf
imul
mov
movsb
adc
js
jl
xor
inc
enter
or
xor
movsl
cmp
mov
aaa
mov
pop
jb
mov
add
xchg
aad
add
cmp
push
sbb
or
sahf
rcr
mov
cmp
pop
mov
push
jecxz
in
cmp
adc
aad
and
into
cmp
or
and
js
inc
pop
lret
mov
mov
in
daa
hlt
sub
dec
and
xchg
addr16
cmp
add
xor
js
cmp
mov
mov
out
mov
pop
push
call
mov
and
pop
dec
data16
aam
pextrw
cmp
dec
enter
xor
and
adc
mov
in
and
popf
push
pop
call
dec
xorb
mov
scas
das
push
mov
pusha
sbb
lea
lahf
jecxz
pop
movsb
mov
sbb
jbe
pop
pop
fmull
mov
rsm
call
mov
mov
lret
push
ljmp
popa
fcomi
test
cmc
jmp
jns
adc
xchg
adc
imul
fdivrl
cli
jecxz
push
jmp
or
mov
adc
pop
xor
ja
or
lret
je
sbb
aad
xor
aaa
xorl
in
xor
arpl
fisttpll
mov
mov
cli
movsb
les
pop
data16
addr16
aaa
jb
adc
mov
xchg
jbe
cmp
out
cmpsb
sbb
in
and
or
xchg
loopne
int3
jl
sbb
lock
inc
scas
ja
cmpb
lahf
push
inc
mov
arpl
call
push
cmp
xor
inc
aam
mov
sbb
push
mov
adc
jl
outsl
jp
fisttpll
je
je
cs
jecxz
cmp
dec
test
push
arpl
incl
inc
mov
clc
or
lcall
pop
testb
xchg
cmp
sti
jns
mov
and
popa
mov
xlat
mov
cmpl
call
test
mov
arpl
pop
cmp
scas
push
rorl
cmp
scas
test
int
movsb
enter
shrl
cmp
jl
jbe
rorl
andb
daa
cmpsl
push
pop
je
movsb
data16
mov
movsl
ljmp
fs
mov
in
test
lea
dec
mov
push
pop
out
je
adc
cmpsl
cmp
sub
pop
mov
pop
pop
cmp
mov
or
inc
mov
cmpsl
test
push
mov
pop
leave
ud1
int
push
xchg
ficompl
sub
dec
leave
push
xor
sbb
fildl
lods
rclb
pop
je
repnz
dec
jne
inc
xor
pop
ret
and
inc
add
pop
mov
insb
jb
cmp
andb
outsl
cli
aad
sub
movsb
cmp
xchg
sub
fadd
scas
push
pop
jmp
movsb
jbe
xor
mov
and
fmulp
popl
push
sub
mov
rcrb
dec
or
stos
dec
movsl
repz
ja
stc
movsb
jb
jbe
jns
popf
pop
pop
repnz
mov
fidivl
mov
cmp
and
mov
cli
add
daa
enter
pop
or
pop
imul
mov
int
xchg
sti
imul
xor
test
mov
mov
mov
repz
enter
shr
in
pop
loopne
cs
lock
sub
jb
subl
mov
int
adc
dec
lcall
dec
pop
movsb
or
xor
push
das
into
arpl
inc
xor
popf
dec
leave
mov
ds
pop
imul
mov
mov
inc
in
flds
sbb
push
sub
negl
sbb
push
fcmove
mov
sbb
add
aaa
iret
pop
adc
jecxz
xchg
jbe
mov
fstps
or
idivl
ds
sti
mulb
test
ret
popf
add
jns
ror
mov
cmp
xor
pop
les
lock
jae
adc
ja
leave
ljmp
or
out
cld
popf
incb
iret
cmpsb
mov
dec
out
fnstsw
mov
repz
xchg
fisubrs
jns
jge
repz
stos
mov
mov
jl
mov
sub
repnz
jg
jb
stos
call
fs
mov
insl
js
cmpsb
cmpsl
aaa
dec
mov
loop
orb
aam
mov
jbe
sti
xor
repnz
dec
mov
movsl
push
push
sti
adc
imul
add
pop
neg
sub
lcall
mov
dec
push
das
pop
out
sub
xlat
std
inc
mov
push
imul
pop
jg
int3
js
loopne
stos
repz
xchg
data16
mov
push
roll
and
cmp
mov
dec
sub
sbb
in
sti
mov
aaa
pushf
shl
mov
fcompl
shlb
shlb
mov
adc
movsb
ret
aam
arpl
xor
sbb
in
outsl
pop
js,pt
aas
inc
or
cmp
jno
ja
cmp
push
mov
rolb
lods
fld
iret
aaa
jmp
pop
pop
ljmp
jno
sub
aad
cltd
lods
jg
and
sti
mov
cmp
ljmp
and
fwait
mov
xchg
rclb
stc
cs
jecxz
cmpsb
dec
mov
mov
or
inc
in
sbb
cmp
insl
out
in
into
leave
hlt
dec
mov
pop
mov
lcallw
sahf
mov
mov
cmp
mull
pop
hlt
xchg
dec
enter
add
insl
cmpsb
sti
in
cltd
mov
arpl
loope
sahf
or
mov
xchg
sbb
je
dec
aaa
ljmp
sbb
xchg
cmp
sub
or
inc
mov
leave
shlb
rclb
leave
sub
loopne
insl
je
ffree
stc
test
and
sub
fbstp
sbb
or
stos
ja
xchg
xor
cmpsl
pop
movsl
pop
int3
scas
mov
xchg
push
mov
lret
xchg
lds
mov
mov
and
push
loope
mov
cmp
jmp
and
fists
pop
test
mov
pop
je
push
or
shlb
in
decb
call
or
stc
out
mov
mov
das
daa
stc
jp
or
xchg
xchg
jecxz
sub
push
and
jbe
add
add
xlat
mov
add
xchg
mov
fstpl
push
js,pt
push
mov
test
sub
and
push
arpl
cmp
mov
loopne
mov
shll
xor
outsb
fidivs
or
push
insb
pop
inc
pushf
ja
addr16
cmp
imul
in
push
sub
repz
in
cmp
lret
cmpsl
and
inc
fidivrl
add
insl
sbb
lcall
fists
push
push
xor
and
jmp
imul
push
pusha
push
pop
andb
int3
mov
outsl
pop
adc
mov
loop
cmp
adc
shl
cmp
add
and
sub
lcall
stc
add
fsubrl
mov
ja
stos
arpl
mov
mov
jns
xchg
or
and
test
loop
sub
pop
push
mov
call
or
push
enter
mov
mov
mov
dec
stos
cmp
jbe
jl
mov
xchg
aas
jb
test
daa
mov
mov
in
out
mov
aaa
push
mov
xlat
add
push
gs
pop
mov
rcrl
cmpsl
cltd
lea
fadds
orb
not
mov
adc
push
in
test
xchg
test
ja
stc
ficoms
cmp
cmp
sub
mov
mov
cli
mov
into
dec
sub
pushf
loop
dec
test
dec
add
xchg
fnstenv
out
push
imul
notb
adc
jb
push
jp
ja
or
rcll
cld
sahf
ss
xor
dec
call
pop
loope
pop
xor
pop
lea
jo
sbb
ss
in
jns
lret
pop
inc
pushf
adc
arpl
jg
push
or
pop
popf
sub
ret
stc
mov
subb
lret
xchg
pop
sarb
sbb
into
loopne
mov
xor
ljmp
jno
push
fstl
daa
lock
jb
mov
jmp
push
cmp
idivl
cmp
and
in
adc
dec
sbb
int3
push
mov
pop
push
dec
popa
adc
xchg
stos
mov
pusha
push
lock
aaa
cld
and
mov
arpl
jbe
mov
scas
push
out
imul
cmp
or
scas
or
ljmp
sub
fstpl
lods
inc
pop
inc
and
fisttpl
andl
jmp
shlb
jp
jb
pop
push
aas
ror
aad
stos
ficoms
sti
sti
add
repz
fdivl
mov
out
jne
xchg
sbb
aad
insb
mov
loop
jns
arpl
out
sarl
mov
xor
pop
stos
fisttpll
scas
adc
scas
or
cld
jmp
cld
sti
xor
popf
jmp
loop
fwait
cltd
adc
mov
cld
repz
arpl
out
xchg
aas
jmp
jb
das
imul
add
fisubs
jns
movsb
dec
sub
mov
mov
push
inc
out
sbb
rorl
fnstcw
push
sahf
ja
jbe
inc
mov
cli
fwait
push
jbe
pusha
aaa
pop
mov
mov
cmp
lock
out
mov
xor
pop
mov
enter
push
data16
pop
inc
cmp
dec
push
test
sbbl
and
sbb
xchg
mov
mov
dec
test
xor
outsb
xor
shll
pushf
or
xchg
adc
pusha
scas
mov
mov
in
in
or
xor
mov
inc
jp
pop
imul
leave
inc
cli
rol
push
ljmp
mov
std
cmp
mov
dec
pop
mov
jb
xchg
inc
mov
push
adcb
adc
ret
sub
arpl
ja
mov
push
mov
out
cmp
call
inc
lods
lock
cld
push
andb
adc
into
sbb
or
punpcklbw
jecxz
lahf
insb
inc
push
xor
mov
fbstp
pop
pop
jle
jb
insb
and
andb
jb
xor
or
cmc
sub
inc
xchg
and
and
fcmovnbe
inc
jp
clc
scas
sti
cwtl
cmp
push
bound
xor
mov
lcall
sbb
outsb
cld
mov
mov
and
xchg
jecxz
adc
mov
jbe
jp
mov
jg
xor
sbb
out
dec
mov
subl
jp
cmp
jp
into
jl
cli
in
imul
addr16
fwait
mov
iret
je
outsl
bound
dec
std
test
in
push
or
movsl
or
cld
test
in
ja
xchg
pop
fdivrl
pop
push
or
fcompl
sbb
and
cli
mov
mov
cli
sub
fldcw
sbb
neg
aad
scas
push
dec
testb
arpl
imul
xor
adc
in
sub
pusha
cmp
mov
and
sub
popf
negb
pop
xor
sarl
add
sbb
je
mov
sub
ror
addr16
sbb
jae
or
aad
popa
test
aam
ss
sbb
or
push
mov
and
jmp
dec
addr16
mov
mov
adc
sub
xor
cmp
popf
icebp
aam
push
aaa
mov
xchg
scas
and
add
outsl
jns
insl
imul
mov
jae
pop
xor
cmp
test
adc
aad
mov
jb
test
mov
push
ret
sti
aam
fimuls
and
stc
cmp
and
xchg
in
test
lahf
sti
push
mov
cli
inc
xchg
cli
imul
jg
imul
xor
mov
ret
add
shlb
lds
xchg
out
xchg
repz
xchg
inc
cmc
push
aaa
mov
lcall
shl
movsb
mov
push
imul
mov
sbb
aad
cmp
inc
fcompl
cmp
int3
popf
movsb
push
mov
hlt
push
inc
scas
pop
paddw
add
cltd
lea
mov
push
push
leave
pop
mov
cmpsl
roll
fcoms
icebp
or
mov
insb
add
out
cmpsl
xor
mov
mov
sub
jge
iret
fwait
test
push
in
push
xchg
outsl
mov
adc
mov
and
mov
push
arpl
adc
cmp
or
inc
ss
mulb
lret
sub
jbe
out
dec
jns
lds
sub
mov
jp
out
push
js
pop
mov
adc
std
jo
jp
mov
cmc
std
out
dec
movsl
out
mov
cmp
dec
and
cld
fidivs
push
jmp
loop
in
mov
jp
xor
cmpsb
aam
xlat
sbb
lahf
fisttps
cmpsl
repz
jb
test
mov
fistpll
push
jns
insb
mov
and
or
and
sti
inc
sub
mov
mov
sub
sbb
mov
out
push
and
pushf
and
mov
mov
jno
xchg
aas
xor
cld
hlt
int
mov
sbb
pop
or
lock
cmp
mov
and
fs
adc
sti
jecxz
hlt
mov
cmp
jbe
int
push
mov
out
and
notl
cli
cmpsb
icebp
or
cli
sub
xor
pop
cmpsb
scas
add
ror
daa
out
pop
inc
sub
aaa
fdivrs
ret
cli
popf
mov
imul
test
fstpt
loope
xchg
sbb
nop
pop
divl
jle
mov
in
int3
jmp
lock
shrl
push
add
outsl
aad
adc
jns
rcr
popa
icebp
mov
dec
xchg
jl
pop
sub
sub
pop
cmpsb
cmpsl
fdivp
xchg
inc
mov
sbb
das
shrb
dec
enter
jb
out
jg
imul
dec
push
ror
in
jne
push
jecxz
pop
xchg
arpl
pushf
data16
mov
mov
fcoml
and
sbb
mov
or
xor
mov
sarl
orb
cmpb
lahf
jno
into
add
sbb
mov
mov
andb
mov
repnz
or
pop
mov
fdivr
adc
mov
sti
call
jb
ds
jno
pop
mov
dec
mov
cltd
jbe
imul
sbb
jnp
ds
cmpsl
sti
jnp
or
xlat
fs
dec
js
lds
mov
shrl
pop
jno
aad
inc
idivl
in
iret
mov
mov
mov
testb
jb
adc
sbb
stos
cmc
ret
cmc
pop
inc
call
loopne
push
orb
ja
ljmp
movsl
scas
and
in
mov
lock
aaa
clc
lcall
insl
stos
in
cmpsl
inc
or
push
mov
repnz
dec
in
sub
cmpl
cmp
push
fsts
gs
push
div
icebp
mov
sbb
cmp
in
fpatan
js
sub
xchg
lcall
iret
mov
in
or
mov
dec
sub
mov
mov
addr16
cmp
mov
in
adc
pop
in
shll
jbe
cmp
mov
loopne
mov
dec
in
mov
pop
in
push
push
fisubrl
cmc
lock
sahf
jg
dec
ja
mov
fstl
add
lcall
mov
int
pop
push
cmp
pop
mov
pop
fnstcw
fnstcw
fstps
or
dec
nop
fnstcw
mov
sbb
fnstcw
fnstcw
fnstcw
fnstcw
fstps
fnstcw
mov
dec
mov
dec
mov
in
shlb
aaa
mov
push
pop
adc
mov
in
nop
mov
inc
mov
mov
in
xchg
mov
pop
inc
in
mov
in
fs
in
mov
in
jp
lock
or
push
ret
xor
test
scas
dec
xchg
or
fimull
push
clc
fwait
pop
outsl
push
mov
mov
push
sahf
sbb
jns
pop
cmp
dec
sub
push
or
adc
sub
mov
imul
sarb
adc
push
jp
fsubrs
adcb
outsb
mov
and
push
and
imulb
jne
js
inc
adc
jp
aad
test
insl
dec
cmp
mov
xor
out
jp
cmc
xor
stos
lock
cmp
stos
icebp
jp
insb
pop
xchg
fistl
mov
push
repz
hlt
mov
pop
jo
mov
jp
mov
stos
mov
fnstenv
scas
xchg
imul
fincstp
ja
repz
sbb
clc
jp
aaa
neg
push
pusha
cmp
jp,pt
cwtl
flds
jo
mov
jp
adc
pop
andl
and
out
mov
adc
pop
mov
xor
pop
outsb
lock
aam
rcrl
rcr
mov
test
and
adc
inc
hlt
in
rcr
lea
test
pusha
bound
ret
pop
mov
out
cmpsl
xor
js
lret
mov
scas
pop
aaa
out
xchg
mov
fisubs
in
and
push
aad
stos
push
stos
cld
and
insb
cmp
scas
pop
or
std
cmpsb
push
jp
dec
push
jbe
scas
pop
insl
std
outsb
sarl
ja
and
inc
xchg
cmp
gs
out
addr16
popf
cmp
jmp
push
scas
push
cmp
mov
aas
dec
sub
lock
mov
repnz
cmc
push
cli
push
loop
xchg
sbbl
jbe
outsl
clc
jmp
in
jl
and
jb
jb
idivl
ljmp
adc
or
mov
mov
sbb
jp
adcb
push
add
sbb
cmpsb
adc
dec
sub
mov
cmpsl
enter
cli
push
lea
and
movsb
idivl
jne
loope
movsb
inc
push
arpl
lock
push
cmp
sub
mov
jle
shlb
lods
push
out
enter
cwtl
fnstcw
ror
adcl
mov
push
jg
xor
ss
cmc
push
fnsave
inc
js
mov
inc
sbb
mov
mov
xchg
sti
add
movsb
mov
in
jbe
imul
pop
push
gs
gs
ds
sbb
dec
or
pop
sbb
repnz
test
ret
in
out
and
outsl
incl
std
lret
lcall
pusha
test
les
push
cmpsb
scas
inc
adc
jg
cmpsl
stc
cmp
loop
xchg
ret
or
adc
cwtl
dec
lret
daa
cmp
jg,pt
ror
jns
or
dec
loop
push
std
dec
scas
fisubrl
sub
iret
dec
rcr
and
out
popa
fisubl
add
pop
push
fimull
push
ficompl
lret
mov
fwait
stos
ret
mov
stc
mov
mov
jno
and
push
repnz
pop
adc
mov
into
mov
push
das
mov
lods
cmovae
mov
adc
test
faddl
dec
in
incb
xor
fwait
mov
test
out
int
mov
cld
mov
mov
insl
fs
xchg
mov
out
pxor
stos
loopne
mov
xchg
mov
jl
cmpl
in
je
xchg
mov
in
addr16
or
inc
in
pop
aad
stos
addr16
xor
lods
jl
cli
in
xor
add
add
loope
mov
mov
mov
push
lret
in
inc
int3
sbb
push
mov
bound
movsl
movsb
inc
mov
xchg
js
clc
pop
mov
fsub
idivb
stos
enter
dec
loopne
aad
sbb
or
inc
int3
push
pop
in
inc
xchg
stc
outsb
cli
mov
and
ja
dec
mov
mov
and
mov
jecxz
stos
loop
jns
and
ja
push
pop
adc
jl
xor
jne
cmpsl
imul
cmp
adc
jecxz
stc
mov
xor
fldt
push
jno
jb
sub
popa
push
bswap
incl
std
fstps
out
inc
in
test
out
xlat
in
cmp
jo
mov
mov
pop
lcall
xchg
sti
movsb
jns
jmp
dec
fcomip
test
xchg
loopne
notl
xchg
adc
sbb
test
scas
data16
cmp
mov
dec
testb
mov
loopne
aam
inc
fs
cmp
int3
or
cmp
mov
mov
jecxz
addr16
cmp
jns
and
and
call
sahf
inc
mov
sub
icebp
sbb
es
inc
jmp
push
stos
stos
pop
sub
mov
fs
inc
push
xchg
push
adc
in
pop
jle
dec
push
mov
popa
push
mov
jp
cmp
testl
xlat
pusha
enter
sbb
imul
in
push
add
out
out
cmpb
and
imul
inc
dec
test
stos
jbe
xchg
pop
mov
cmp
popa
insb
aam
es
popa
add
xchg
leave
pop
pop
xor
mov
div
push
jbe
clc
xor
pusha
mov
xchg
cmp
arpl
fs
cmp
cmp
sti
or
stc
ss
fsubrp
mov
adc
mov
cltd
sbb
mov
sub
cmp
leave
pop
jnp
in
xchg
or
xchg
int
push
lea
mov
add
jae
and
mov
inc
sbb
mov
push
xor
jae
add
cmpsb
dec
in
and
dec
int
dec
test
add
outsb
xchg
repz
ds
xlat
pop
cmpb
mov
xor
fcomps
mov
in
jbe
imul
push
mov
adc
insl
pushf
outsb
aaa
adc
int3
out
mov
mov
fdivl
nop
pop
int
cmp
out
imul
leave
ss
or
pop
add
push
insl
popf
add
cld
jae
fidivs
out
cmp
lret
lret
jae
dec
xor
sti
fwait
sub
xchg
movsb
sub
mov
adc
push
dec
imul
add
mov
cmc
in
enter
xchg
and
test
push
adc
ficoml
in
or
ds
xchg
dec
and
cmpsl
cmp
loop
lret
scas
inc
mov
xchg
inc
jns
mov
sub
fdivrs
and
int3
ds
or
sub
xor
popf
push
xchg
aas
pop
jle
xlat
sbb
push
or
pop
cmpsl
rcrb
jns
cs
jp
aas
mov
cmp
es
sub
loop
arpl
mov
push
adc
pop
nop
loopne
jo
adc
shlb
push
fsubrl
jae
rcrl
fidivl
fadds
push
xchg
mov
xor
dec
sub
cmc
lea
cmp
cmpsb
pop
xor
jmp
jmp
fiaddl
add
cmp
cli
fstpt
in
fisttpll
ljmp
lods
js
mov
dec
mov
dec
loope
xchg
loop
mov
mulb
push
xchg
jg
ss
icebp
ret
cltd
mov
xor
sub
dec
jae
fwait
jbe
mov
pop
test
mov
icebp
fsubrs
and
jl
adc
pop
pop
std
js
fsubl
loope
cld
in
jbe
sbb
sti
cmp
sub
pop
sbb
or
xchg
pop
cmp
inc
xchg
idivl
lcall
aas
mov
scas
jp
call
cmp
mov
cmp
lahf
dec
jge
sbb
jmp
addr16
mov
data16
icebp
xlat
jnp
inc
mov
cwtl
mov
sbb
jp
ljmp
inc
rolb
push
cmp
fsubl
mov
adc
jecxz
mov
dec
shll
mov
jo
shrb
add
ja
int
cld
repz
cmp
and
sbb
dec
mov
clc
aas
add
jp
inc
push
fsubl
js
in
leave
xor
mov
cmp
mov
in
mov
loopne
dec
and
clc
pop
insb
dec
imul
pop
add
aas
mov
mov
push
fsts
mov
jne
cmp
test
mov
lods
jns
mov
push
out
or
stos
cmp
jp
sbb
xchg
loop
mov
test
pusha
xor
les
stos
imul
movsb
cmc
call
jl
fwait
cmpsb
jae
pop
or
test
mov
mov
js
mov
stc
clc
pop
cltd
in
sub
sbb
fadds
lret
inc
jno
or
imul
jnp
in
and
push
sbb
pop
inc
lahf
or
adc
pop
xchg
lret
data16
ficomps
repnz
pop
cli
jbe
xchg
test
into
imul
jb
scas
xlat
push
adc
insl
dec
fcoml
xchg
imul
or
les
mov
icebp
mov
mov
std
out
pop
jl
pop
sub
jns
subl
pop
or
icebp
cmp
xchg
repnz
das
sbb
aaa
aaa
data16
mov
imul
imul
push
cmp
fimuls
dec
mov
in
mov
pop
movsb
or
mov
imul
cmp
push
lret
cmp
cmp
or
or
test
icebp
mov
cmp
call
std
push
jge
cmp
sti
sbb
cmp
lea
fistpl
shll
and
mov
sub
adc
in
pop
jb
stc
sbb
pop
adc
out
adc
jbe
std
lret
ret
jecxz
or
cld
xchg
mov
mull
mov
lahf
xchg
jg
shl
mov
jns
xchg
out
sti
fs
sbb
idivl
xchg
sub
or
rol
sub
mov
je
dec
outsl
xchg
jge
xchg
test
dec
sbb
xchg
stc
shrl
sub
enter
pop
add
jb
push
mov
xchg
les
mov
mov
popa
ret
inc
mov
stc
enter
incb
lcall
add
xchg
pop
jl
inc
xlat
mov
xor
push
mov
in
test
mov
int3
add
cmpsb
adc
xchg
jp
dec
std
mov
jne
fcompl
xchg
sub
push
mov
sbb
data16
dec
jno
bound
mov
mov
mov
hlt
mov
and
pop
mov
fimuls
sbb
in
ss
js
mov
push
dec
sbb
add
cmp
out
test
mov
lea
inc
mov
adc
enter
xchg
cmpsb
mov
sti
jbe
push
pop
loop
mov
or
jbe
xor
cmp
addb
pop
adc
sti
enter
jmp
push
ret
jl
cmc
push
lock
inc
add
adc
mov
cli
xor
in
test
mov
fidivrs
mov
jne
add
xor
pop
lret
pop
jecxz
pop
or
sti
jl
loopne
movsb
pop
push
mov
inc
adc
jp
cmpsl
cmc
xor
jecxz
inc
push
inc
fs
xor
mov
test
cmpsl
enter
ret
in
jge
jmp
dec
xchg
lahf
mov
ss
imul
jnp
jbe
jb
mov
cmp
mov
dec
scas
jecxz
es
xchg
and
jecxz
dec
xchg
cmp
movsb
mov
xchg
xor
lret
xchg
cmc
test
dec
hlt
enter
popa
xchg
pop
rorl
mov
mov
xor
xchg
cmp
and
cvtps2pi
fwait
push
push
mov
adc
fninit
movsb
fstpt
xlat
add
inc
in
sbb
pop
fxch
pop
xchg
out
call
test
jl
lret
mov
or
pusha
jmp
mov
push
mov
dec
inc
mov
cmpsb
pop
xchg
mov
enter
mov
lcall
scas
add
int3
stc
jl
xchg
pop
xor
lea
dec
mov
push
fst
mov
aad
push
loop
mov
or
xchg
pop
ljmp
in
sub
jns
scas
mov
fcoml
cmpl
jbe
xor
inc
repnz
lcall
sub
mov
les
fiaddl
jle
jo
idiv
and
stos
xor
lea
inc
xor
push
jle
xor
jns
push
enter
cmp
mov
insb
fdivrs
arpl
cmpsl
and
cmp
mull
pop
hlt
lret
inc
ficoml
lret
iret
cmpsb
or
imul
in
mov
outsb
bound
and
rorb
inc
stc
pop
jno
nop
xchg
movsl
jl
and
mov
mov
cmp
ror
cs
sub
cmp
addl
inc
jbe
mov
repz
mov
sbb
arpl
jne
xchg
mov
mov
cmpsl
js
dec
mov
sbb
sub
xchg
jne
and
inc
lock
jo
mov
xor
pusha
icebp
addl
cltd
mov
or
repnz
mov
icebp
lret
xor
add
decl
test
popf
mov
xor
in
xchg
and
mull
inc
cmp
call
mov
pop
idiv
xchg
insb
lods
dec
sub
cmpl
lcall
adc
fstpt
aad
sub
shlb
or
enter
loopne
mov
lcall
in
add
jns
mov
and
xchg
ret
jns
sbb
mov
lahf
lods
mov
add
pushf
stos
and
js
andl
out
repz
cmpsl
xor
pop
mov
or
push
adc
add
icebp
mov
and
js
xor
mov
add
mov
xor
push
adc
mov
addr16
jecxz
mov
shrb
jmp
call
sbb
es
mov
mov
jae
or
enter
insl
rolb
mov
or
ret
jo
and
arpl
in
sbb
mov
pop
jmp
mov
cmp
sar
inc
clc
and
flds
xchg
dec
xchg
cmpb
movsl
or
push
mov
pop
icebp
rorl
pop
xor
push
mov
stc
dec
shlb
mov
add
in
push
cmp
jp
mov
icebp
jno
mov
fwait
inc
movsl
pop
sbb
repz
pop
pop
int3
flds
sahf
shl
lea
push
xchg
mov
inc
push
dec
adc
fisubrl
in
mov
or
dec
jg
push
jbe
pop
xor
negl
add
jg
push
les
mov
mov
enter
sub
lcall
mov
pop
push
pop
push
imul
outsl
in
xor
dec
subb
icebp
pop
xchg
test
lcall
cli
add
xor
mov
fisubrl
lret
repnz
xchg
mov
push
sub
in
or
loope
pop
movsb
mov
pop
pop
jbe
xchg
sbb
leave
jp
pop
jne
mov
in
pop
push
aas
push
mov
or
mov
stos
add
mov
jne
or
movsb
imul
lods
addr16
pcmpgtb
out
jle
xchg
xchg
cmp
dec
daa
inc
and
dec
lds
sbb
cmpsb
orb
in
repz
stc
xor
mul
test
in
adc
push
aaa
dec
mov
xchg
pop
mov
xchg
das
jae
inc
iret
cwtl
cli
pusha
dec
fwait
jns
mov
ret
jg
xor
and
mov
jns
jp
mov
rorl
jl
mov
jae
mov
or
hlt
push
in
sub
ss
mov
mov
dec
jecxz
mov
jp
jne
mov
lret
mov
xchg
outsb
out
dec
sbb
scas
sarb
push
arpl
xor
xchg
in
push
aam
mov
dec
sbb
jecxz
jo
cmpsb
in
cwtl
xchg
pusha
push
addb
dec
in
roll
push
aaa
mov
pushl
sub
cmp
call
sahf
dec
jbe
lcall
or
jb
mov
mov
out
sbb
cld
pop
mov
pushw
jno
fs
ret
not
popf
and
mov
push
in
clc
jo
call
lods
xor
je
push
pop
mov
mov
outsl
mov
pop
aas
sub
dec
jecxz
xor
movl
mov
pop
mov
sub
rcrl
mov
sub
xor
fidivrl
stc
pop
and
adc
loope
cmp
push
push
xor
clc
in
mov
mov
mov
or
add
cmp
jmp
jmp
dec
push
dec
push
sti
xchg
imul
rcrl
mov
fs
cmp
fbstp
pop
daa
aam
inc
cmp
leave
sti
cmp
sbb
or
mov
in
xchg
adc
gs
testl
mov
das
xorb
cmp
mov
mov
and
jmp
push
mov
roll
fs
jne
cmp
sbb
sbb
test
push
cli
out
push
push
mov
loope
jno
jbe
in
sti
cmp
cwtl
mov
dec
ds
mov
cmpsl
cmp
sti
stc
push
mov
pop
js
adc
aaa
adc
pop
movl
or
arpl
insl
mov
jecxz
out
pop
xor
hlt
xlat
or
jne
hlt
pop
jecxz
cld
into
xorl
clc
dec
jg
or
repnz
xor
mov
mov
mov
nop
pop
jecxz
rcrl
in
mov
in
jmp
mov
out
xchg
mov
fisttps
jecxz
add
es
mov
xlat
dec
jbe
mov
test
mov
insl
mov
sub
lret
pop
xchg
add
mov
in
ret
xchg
pop
sub
lea
loop
fldcw
mov
cmp
cmp
cmp
cmpsb
mov
enter
repnz
ja
sub
scas
mov
lret
push
out
sahf
pop
sti
in
xor
jno
sbb
cmpsl
jp
sarl
add
xchg
mov
lret
pop
mov
fucomi
and
outsb
pop
lret
in
xchg
push
stos
xchg
sbb
dec
xor
je
sbb
mov
cltd
repz
pop
sbb
out
cld
es
das
mov
jecxz
icebp
cs
jmp
cld
push
lret
jns
xorb
push
loope
call
loop
lahf
add
xor
lds
fsubr
mov
xchg
test
mov
jg
popa
inc
xchg
addr16
push
stc
and
mov
je
jp
cmp
jmp
xor
dec
push
mov
mov
cmpsl
hlt
adc
sub
add
loop
cld
dec
cmpsl
dec
jmp
clc
mov
prefetch
fsub
out
mov
xor
and
sbb
lods
add
adc
push
stc
mov
in
mov
ja
dec
int3
push
in
xchg
xchg
and
dec
and
add
mov
in
outsb
insl
sbb
cmpb
mov
imulb
ljmp
movsb
or
jecxz
mov
mov
jl
inc
testl
xchg
fnstsw
dec
decl
or
ljmp
les
pop
jmp
mov
push
xchg
mov
cmp
incl
in
outsb
stos
or
sub
mov
fucom
dec
cld
ficoms
sbb
mov
imul
hlt
cld
enter
sub
push
jecxz
cmp
mov
xchg
imul
enter
or
sahf
clc
leave
fdivrl
jbe
in
jne
notl
xchg
cmpsb
pop
inc
ja
out
mov
sub
movzbl
mov
das
jbe
scas
inc
jmp
idivl
out
rcll
jmp
pop
push
dec
movsl
jl
jb
mov
jl
shrl
adc
xchg
mov
outsb
adc
je
pusha
pop
mov
sub
or
cmpsw
pop
cmpsb
stc
aaa
divl
cmc
test
sbb
jbe
jg
push
mov
div
pop
loop
jp
ret
mov
or
out
or
pop
push
fcoml
mov
pop
mov
mov
adc
pop
fbld
and
fstpl
in
stos
mov
scas
mov
aam
lods
imul
pop
js
dec
cwtl
pop
dec
aaa
sbb
lahf
in
lods
adc
jecxz
xchg
in
in
fsts
stc
in
lcall
cmc
jp
pop
cmp
out
adc
add
clc
push
cs
cmp
xor
inc
push
lock
mov
fstl
sub
sbbl
leave
pop
push
data16
push
orl
inc
add
dec
push
lahf
mov
aad
inc
out
ja
lea
or
sub
lret
fisubl
insl
mov
push
enter
lret
sub
lods
test
js
mov
pop
mov
xor
jg
pop
test
mov
jo
jecxz
xchg
xchg
jmp
popa
inc
mov
mov
leave
inc
mov
cld
xchg
setge
pop
xlat
js
xor
cli
mov
cmp
imulb
inc
addr16
lds
and
aaa
ja
fmulp
inc
or
mov
pop
daa
fwait
mov
test
aaa
xchg
and
sti
mov
dec
push
imul
cmp
pop
lods
cmpsb
bound
cmp
sbb
mov
xor
into
cli
loopne
mov
shll
arpl
or
sti
negb
fbstp
xor
mov
fbld
add
mov
filds
adc
sub
jge
sub
pop
jo
fnstcw
mov
sub
fsts
je
fst
imul
push
call
jns
mov
stos
cmp
ja
dec
fs
and
test
xchg
jecxz
clc
fidivrl
movsl
das
mov
and
xchg
fadds
sti
inc
aad
fsts
fptan
sub
adc
or
inc
xchg
add
notl
cmc
xor
add
imul
sub
jmp
outsl
stos
mov
push
xlat
and
xlat
sub
aam
pop
pop
jl
and
and
ss
frstor
sub
call
jmp
pop
push
and
shlb
push
pop
push
push
jbe
shl
rcll
cmpsl
aad
jmp
dec
hlt
mov
call
sti
out
fildl
jmp
adc
aaa
sbb
mov
scas
mov
push
cmpl
pop
mov
fmull
and
cmp
sti
push
cmpsb
cmp
jns
aad
push
testl
pop
xor
shlb
jle
sub
jno
int
and
les
mov
clc
cmp
xchg
nop
sbb
in
fstpt
jge
jbe
ret
movsl
negl
adc
inc
lcall
sti
or
data16
nop
add
mov
rcl
xchg
pop
popf
pop
lds
popf
andl
jge
enter
jl
sahf
popf
popa
xlat
lcall
push
or
sbb
and
xor
rep
mov
mov
in
xchg
sub
jne
repnz
sti
push
int
out
mulb
jecxz
cltd
jns
sub
in
idivb
cmp
clc
fimuls
aas
out
je
scas
lods
in
dec
inc
cmp
cmp
pop
or
pop
into
inc
mov
push
out
enter
dec
push
mov
xor
stc
add
pop
lea
xchg
jbe
and
sbb
and
pop
sti
int3
cwtl
adc
jno
push
pop
mov
jmp
and
mov
jne
pop
mov
movsl
xor
in
stc
and
dec
nop
jne
mov
mov
xchg
mov
xor
jae
mov
add
aad
and
jecxz
mov
lea
pop
int3
jge
sub
stos
movsb
push
gs
sti
fistpl
es
repz
imul
sub
or
push
xor
xchg
mov
sbb
inc
jg
ja
fidivrl
mov
mov
inc
in
and
je
test
imul
mov
jns
cwtl
in
jno
addr16
push
sub
fsubrp
mov
jno
je
push
aad
push
add
in
cli
cmp
dec
add
jns
rclb
ja
movsl
push
sti
std
dec
mov
add
pop
je
cmp
push
xor
mov
movsb
inc
movsb
pop
dec
push
ss
fdivrl
push
cli
jne
outsl
insb
or
int
and
mov
jle
or
mov
inc
ss
pop
add
js
jbe
sub
fildll
addr16
hlt
pop
sub
jb
sbb
push
adc
pop
push
inc
xor
test
inc
fldenv
sub
cmp
sub
decl
mov
cmp
inc
les
sbb
xor
mov
xor
add
loop
pop
jge
in
mov
mov
jno
cmpsb
leave
ss
xchg
stos
pop
jbe
xchg
ffreep
mov
push
jne
xchg
pop
ret
push
cmp
fwait
push
fnsave
xchg
scas
sbb
cmp
daa
adc
cmpsl
js
jecxz
or
and
jo
mov
mov
and
mov
std
imul
inc
in
fstl
push
push
sub
adc
adc
sti
mov
push
push
mov
movl
mov
dec
enter
jp
pop
mov
push
mov
jp
dec
es
mov
inc
jmp
mov
es
repz
push
fs
loop
arpl
fnsave
or
insl
fsubl
mov
imul
sbb
jns
jle
out
hlt
push
push
push
jmp
test
imul
or
addr16
in
pop
test
insb
dec
mov
mov
gs
sti
lret
std
sbb
dec
xor
mov
dec
mov
mov
xlat
or
inc
jnp
cli
in
pop
xor
mov
jne
stos
ljmp
sbb
and
aaa
insl
lret
xor
cmp
test
jmp
insl
es
imul
ja
or
xchg
and
rep
jb
jbe
xor
add
jo
scas
xchg
jmp
xor
outsb
adc
jb
lahf
xchg
ds
inc
imul
push
adc
ficomps
sti
das
mov
sbb
add
sahf
cmc
jp
xchg
out
mov
outsl
in
sbb
ret
or
es
cmpsb
push
cld
movsl
push
nop
sbbb
inc
popf
adc
adc
test
pop
stc
mov
sbb
test
subb
dec
lea
push
into
pop
cmp
fwait
lcall
xchg
addr16
enter
sub
mov
cli
jp
insl
arpl
mov
fisubl
or
jecxz
es
xchg
mull
jecxz
pop
pushf
popf
outsl
idivl
and
mov
adc
notl
loop
xchg
xchg
jbe
iret
lret
mov
cld
in
dec
addr16
lods
push
cltd
inc
lcall
testl
ljmp
mov
imul
stc
fistl
cmp
mov
lahf
mov
ficompl
push
sahf
sbb
shr
pop
divb
dec
dec
out
mov
dec
xor
cmp
or
jl
out
mov
scas
mov
lret
push
lahf
fcmovb
xchg
cmpsb
in
fwait
add
out
lds
js
jb
cmp
arpl
jge
shll
hlt
mov
push
stc
mov
inc
pop
ret
jmp
or
xor
ret
pop
clc
adc
pusha
dec
test
or
dec
repnz
cltd
addb
sbb
aam
add
lods
int
test
adc
loopne
jne
lds
movsb
push
xchg
cmp
add
lods
in
mov
das
popf
pop
jbe
leave
jne
and
icebp
out
xchg
jbe
ja
in
arpl
cltd
aad
push
dec
ret
insb
push
jle
sub
add
ss
js
lret
push
lods
movsb
into
sti
lock
pop
pop
inc
out
fxam
cmpsb
fstpt
and
lret
dec
in
pop
inc
fcmovb
and
roll
in
rolb
imul
sub
xor
and
xor
js
or
pop
mov
push
mov
jge
pop
mov
cmp
jmp
enter
leave
out
addr16
fsubrl
push
jbe
test
xor
lods
insb
fs
mov
outsl
jp
push
push
dec
es
mov
mov
and
xor
push
push
mov
pop
jno
stc
and
inc
and
mov
adc
push
in
lods
mov
jg
out
shrl
dec
xchg
test
cmp
push
test
std
cmp
adc
das
mov
and
xor
into
pop
ret
mov
les
adc
mov
pop
jne
aas
sbb
mov
outsb
cmp
fcmovbe
mov
fidivrl
cwtl
inc
xchg
lock
push
cmp
je
xchg
pop
mov
pushf
cmc
fimull
scas
xor
mov
jbe
or
or
sbb
sub
pop
mov
movsl
mov
jmp
in
mov
leave
rcrb
outsl
sbb
jns
repnz
insl
dec
xchg
mov
mov
jo
enter
lret
or
fidivrs
sahf
push
fwait
idivl
enter
and
ljmp
add
xchg
jmp
mov
out
jb
les
cli
sahf
out
dec
ds
sti
or
ret
lea
pop
mov
push
shl
lret
das
push
mov
mov
rol
jle
into
notl
loop
repz
sub
mov
stos
lret
fwait
sahf
pop
pop
and
cmpsb
mov
jbe
leave
shl
dec
movsl
mov
mov
rolb
je
arpl
add
lods
frstor
dec
adc
cmp
jne
add
mov
mov
cli
push
jo
jecxz
add
adc
shlb
xchg
neg
lret
and
movsl
jns
testb
lods
pop
add
jl
enter
test
cmc
and
ret
adc
movsb
shlb
adc
push
mov
mov
shlb
push
orb
leave
ret
xlat
push
out
inc
or
pop
inc
and
repz
dec
aas
iret
sbb
pop
mov
stos
rol
out
sbb
int3
mov
mov
dec
fsubr
testb
dec
mov
notl
sbb
mov
xchg
je
adc
std
mov
add
jae
shlb
hlt
nop
sbb
fldt
jp
imul
dec
leave
mov
jecxz
lock
push
mov
cmp
mov
adc
xchg
mov
test
sbb
or
mov
bnd
jbe
jmp
in
stos
sbb
pop
outsl
mov
out
push
scas
aaa
jo
out
sub
fisttps
mov
in
add
xor
xchg
imull
add
pop
fs
add
jl
shlb
lahf
push
xlat
add
inc
xor
mov
mov
out
push
pop
clc
iret
addr16
fisttps
push
mov
bound
lret
fcompl
and
mov
adc
sub
repz
pop
loope
jnp
iret
movsb
lret
stos
int
lock
jbe
mov
pop
nop
lret
cwtl
mov
cli
arpl
push
stos
sub
les
lds
mov
dec
shlb
xchg
out
xchg
out
out
pop
jbe
pop
lret
les
push
add
mov
je
insl
mov
leave
jbe
aaa
testl
test
out
cmp
jns
adc
jb
push
push
cmpsl
iret
lcall
mov
xor
dec
sbb
int
push
sub
setl
jb
push
out
jae
sub
stc
inc
push
jno
mov
inc
addr16
out
ficompl
enter
pop
into
imul
sarb
jg
or
idivl
in
repz
pusha
jne
cmpsb
imul
lods
lock
inc
mov
cltd
jg
lret
and
testl
imul
lret
cmc
scas
cmovge
aas
mov
push
pop
jne
mull
pushf
fwait
loopne
js
lret
mov
sbb
pop
les
rorl
cmp
repnz
and
aas
cmp
daa
jae
and
jno
jmp
insb
out
out
add
inc
mov
dec
pop
inc
adc
ljmp
out
or
jmp
iret
in
and
lods
push
mov
fdivr
jmp
mov
mov
mov
nop
or
jmp
sub
xchg
cmc
pop
es
push
rolb
dec
outsb
mov
scas
dec
jne
stc
lea
fs
cld
inc
mov
lret
fucomip
mov
out
imul
ja
jo
cmp
nop
inc
in
and
push
out
cmp
call
lahf
inc
cmp
stos
jecxz
enter
pushf
xor
imul
cmp
outsb
pop
pop
jl
mov
popa
cli
test
xor
jp
sub
mov
popa
mov
fldcw
lds
xor
push
dec
push
sub
cld
cmp
bound
push
add
push
push
sub
aaa
xlat
fwait
divb
sub
xchg
mov
jp
enter
js
imul
mov
mov
mov
adc
in
outsl
mov
xlat
xor
in
cltd
xor
mov
idivl
js
pop
xor
push
mov
cwtl
jae
das
dec
ds
imul
jl
add
adc
out
adc
mov
xchg
mov
xor
scas
cmpb
cld
cltd
push
aam
leave
mov
daa
testl
mov
aaa
in
xchg
out
add
push
mov
or
add
dec
adc
mov
bound
sbb
test
push
pop
leave
in
jecxz
fstpl
jmp
jo
mov
lret
cmc
jns
mov
fnstenv
imul
xchg
mov
ja
inc
dec
sub
jp
ljmp
xor
lahf
or
sti
leave
int3
mov
lods
push
jecxz
or
xchg
scas
cwtl
mov
xor
lock
lcall
out
stos
mov
sbbb
mov
lahf
fiadds
inc
cwtl
pop
jecxz
in
lcall
les
jl
mov
push
lods
cld
pop
enter
mov
pop
push
icebp
add
pop
rolb
adc
cmp
fidivl
fsubp
rcrb
gs
cmc
push
ds
pop
xor
call
cmpsl
xchg
subb
mov
pop
mov
int3
dec
aas
and
dec
pop
in
mov
xor
out
mov
dec
sbb
xchg
xor
jg
pop
pop
and
dec
mov
mov
lret
scas
xorl
mov
repz
outsb
inc
sub
cmp
xchg
push
pop
clc
xchg
out
sahf
loopne
stos
rolb
iret
outsb
cmp
add
dec
fiadds
stc
mov
das
jg
jno
fsub
and
stc
cmpsl
insl
cwtl
loopne
add
cmp
fisttpll
out
sbb
sub
fstl
lock
jle
insb
in
add
push
aaa
sbb
pop
ja
mov
jmp
mov
sti
int
outsb
and
mov
mov
cmp
mov
lcall
addb
pop
and
mov
or
ficompl
mov
and
and
xchg
dec
mov
push
lods
mov
divl
sub
dec
push
pop
push
mov
shrl
sbb
cmc
mov
scas
xor
lcall
pushf
stos
add
ljmp
and
cli
xor
sub
mov
scas
adc
inc
ljmp
outsl
lcall
in
repnz
data16
cmp
mov
dec
aaa
cmpb
popa
in
pop
and
jge
push
push
cli
pop
or
mov
cmp
sahf
imul
cmp
dec
push
mov
ffree
xchg
in
dec
and
or
jne
int
sarl
mov
sub
movsl
in
mov
cmp
cmp
jmp
mov
mov
push
mov
lret
in
stc
ficoms
mov
dec
frstor
ljmp
dec
in
movsl
mov
dec
add
sahf
mov
push
add
mov
insl
scas
pop
mov
dec
movsb
ljmp
add
pushl
fnstsw
mov
daa
adcb
mov
jns
push
test
shlb
lods
inc
fwait
jge
in
stos
aas
leave
cmpsb
xor
push
arpl
and
ret
shr
rorb
pop
inc
cmp
lret
mov
mov
test
mov
lret
jp
je
cmc
or
cmp
aad
jne
mov
ljmp
aad
repnz
xor
or
mov
call
xor
jp
sub
mov
ret
cmp
jbe
test
dec
push
jmp
rcrl
sub
lea
imul
cmp
in
loopne
or
rep
jbe
gs
dec
push
sbb
push
dec
and
add
iret
mov
xor
sub
daa
mov
bound
dec
dec
pop
xor
pop
lds
mov
int3
mov
lret
gs
dec
addr16
data16
jl
popl
mov
dec
push
out
mov
lahf
repnz
sbbb
into
xchg
push
insl
dec
inc
or
ja
mov
push
mov
sub
das
jg
or
push
mov
jmp
add
stos
sbb
sahf
mov
push
iret
mov
lahf
sti
aaa
jbe
in
aad
cwtl
add
lret
enter
scas
pop
stc
aas
jbe
dec
xchg
sub
neg
adc
cmc
clc
movsl
fs
dec
sub
iret
aaa
cmc
imul
enter
mov
lret
mov
mov
es
sub
cmp
int
fdivrs
inc
shlb
in
fwait
pop
fcmove
sbb
fcompl
daa
imul
cmp
cmp
decb
popf
scas
in
mov
and
adcl
in
inc
sbb
dec
lret
bound
jns
cmp
mov
or
fisttpl
jmp
fidivrl
and
push
mov
pop
popa
sbb
ljmp
push
and
and
cli
mov
push
sub
fimull
or
lock
fbstp
adc
dec
xchg
sti
scas
daa
sbb
sbb
cmp
adc
jns
push
jp
test
push
sub
mov
jmp
pop
push
pop
int3
sbb
cmc
push
xor
push
dec
gs
clc
aas
adc
lcall
xchg
popf
test
fisttps
mov
lock
xor
pop
mov
inc
js
in
mov
jno
mov
rcll
jmp
xor
test
mov
mov
push
clc
pop
sti
mov
adc
nop
sbb
fistpl
imul
mov
adc
sub
mov
jecxz
repz
inc
mov
fwait
daa
dec
aaa
outsb
sub
sbb
mov
mov
cmp
inc
dec
cmpsb
xchg
jg
fwait
insl
cmp
repnz
ss
dec
loop
sti
cli
push
dec
outsl
pop
cmc
jmp
and
es
jmp
pop
je
lock
lods
sub
jge
sub
lods
sbb
cmp
ss
cmp
leave
push
push
out
jmp
fistpl
iret
cmp
xchg
stos
lds
push
scas
inc
lcall
cmpsb
jbe
popf
mov
mov
mov
mov
xor
inc
jb
imul
mov
mov
out
push
jns
jecxz
lret
leave
xchg
dec
xor
idivl
insl
sbb
push
push
jae
divl
add
cltd
repz
stos
cmc
dec
out
xchg
jp
loop
ss
int
sti
add
testl
jns
ljmp
ret
ss
mov
ss
xor
xchg
add
cli
jecxz
stc
or
cmp
rclb
jl
adc
fidivl
ss
in
jge
jbe
lret
cli
push
outsb
jae
into
sub
adc
xlat
or
mov
add
cmc
pop
xor
jmp
ret
xchg
pop
or
mov
cwtl
mov
dec
dec
int3
cmp
jmp
fsubl
ljmp
imul
mov
mov
bound
xchg
ds
pop
lock
xor
jp
cli
xor
mov
fidivrs
sbb
cmpsl
icebp
jmp
pusha
gs
adc
cmp
enter
add
je
dec
rorl
aaa
jp
push
mov
inc
sbb
dec
sub
cmp
lds
fisubrl
jae
loopne
jo
cmp
insl
clc
jo
or
cld
lret
std
or
sti
in
outsb
xlat
jmp
ret
xchg
negl
jecxz
sub
data16
mov
leave
pop
movsb
loopne
ret
ret
pop
fwait
jmp
and
daa
scas
adc
insl
loopne
fildl
pop
aam
nop
jne
out
sub
jns
and
rcl
mov
icebp
sub
cmp
or
in
arpl
and
mov
xor
sbb
insl
lret
ss
jno
repnz
pop
sbb
cmp
inc
mov
dec
mov
ret
sbb
rcll
test
js
cmpsb
in
testb
fiadds
stos
icebp
ljmp
scas
lret
enter
lock
xor
pop
lods
jge
outsb
mov
mov
mov
mov
in
mov
jmp
cmp
lds
inc
mov
daa
adc
in
pop
lahf
daa
outsl
xchg
lock
push
test
sti
jmp
cmp
imul
lock
in
fs
pop
or
cli
hlt
jns
ja
xchg
fstl
repz
test
js
test
push
sbbl
sbb
es
bound
sub
mov
fcoms
imul
stc
xlat
cmp
ljmp
sbbl
mov
aaa
test
mov
and
test
push
xor
enter
fld
dec
pop
idiv
push
add
pop
inc
mov
jns
ja
adc
aaa
pop
imul
jbe
test
xorl
bnd
push
jp
pop
sti
ja
jb
sub
fiadds
dec
and
mov
xchg
mov
sti
jns
pop
test
out
stos
adc
cmpsl
addr16
jecxz
mov
push
fbstp
or
sub
sbb
in
mov
jg
test
and
and
sbb
dec
mov
cmpsb
pop
jae
fidivs
mov
mov
sbb
mov
outsl
ret
arpl
mov
mov
pop
xlat
pop
jecxz
add
ret
rcrb
outsb
mov
sub
fstpl
push
mov
stc
mov
outsl
and
out
push
cmp
pop
in
and
jecxz
lret
idivb
mov
insl
imul
in
jo
or
jecxz
inc
sahf
iret
mov
insb
das
sbb
jns
in
jbe
and
je
out
aad
lods
pop
jb
rolb
iret
fisttpll
repnz
or
out
xor
jg
gs
and
hlt
aaa
pop
into
sti
imul
sbb
jg
bound
cmp
mov
aaa
ja
in
cmc
test
imul
jp
push
repz
push
imul
and
sub
inc
mov
fs
xchg
imul
pop
clc
jns
test
out
in
jns
dec
cmovne
mov
imul
cmp
ds
pusha
das
mov
pop
lods
aad
fs
push
jb
sbb
push
push
aas
mov
dec
adc
out
push
test
mov
out
or
lds
adc
les
and
sti
adc
mov
jne
test
cld
insb
mov
sbb
mov
inc
std
stos
pop
jmp
jg
fstpt
stc
xchg
scas
sbb
push
fwait
dec
outsl
mov
jmp
ds
jg
fnstenv
pop
pop
or
adc
push
mov
loop
sub
jle
jmp
pop
clc
mov
imul
mov
mov
fdivrs
scas
xchg
dec
pop
pop
cwtl
outsb
pop
jno
and
add
jno
sbb
out
pop
bound
ds
push
xchg
mov
outsb
or
xor
lahf
lods
ljmp
out
dec
pop
js
daa
out
inc
inc
or
dec
cs
push
ds
lcall
das
push
int3
pop
sbb
jae
cmp
push
mov
movsl
jmp
inc
dec
scas
cmp
js
iret
sbb
pop
xor
aad
movsl
mov
ds
mov
inc
cmc
pop
mov
or
daa
pushf
push
arpl
in
shrl
ficoml
iret
cmpsl
cmp
cs
and
dec
out
inc
cmp
pop
enter
add
sbb
ret
sbb
mov
rolb
enter
sbb
mov
push
sub
add
lock
mov
cmp
loop
cli
arpl
jecxz
or
in
and
push
cmc
xor
dec
push
popa
fs
cmp
loop
inc
cli
fcoml
push
sub
std
jecxz
in
call
sbb
bound
jno
mov
scas
fmuls
sbb
push
xor
jp
ds
push
mov
sarb
pop
stos
ja
dec
pop
mov
push
test
pop
mov
cmpsb
sub
cltd
jns
add
ja
mov
sbb
dec
imul
mov
movsb
sbb
cmp
xchg
lret
or
lahf
add
cltd
lahf
xchg
inc
or
popf
push
in
push
stos
out
cmp
pop
aaa
ja
xchg
mul
adc
mov
xchg
cmp
jmp
jmp
dec
test
cltd
icebp
pop
pop
mov
in
xlat
pop
pusha
jecxz
pop
push
sub
jno
cmpsl
idiv
and
or
push
rcrl
dec
fwait
loop
xor
xchg
and
jno
and
loope
push
lcall
pop
fnsave
adc
fisttps
pushf
push
mov
cmpsl
dec
gs
mov
sbb
push
call
fcomps
cmp
out
pop
divl
pop
sub
pop
out
or
jecxz
sti
jns
cmp
xchg
pop
jl
adc
repnz
sbb
jae
push
out
cmovg
xor
stc
lret
pop
addr16
xor
sub
mov
adc
xor
mov
ss
cli
test
jno
push
cmp
mov
xchg
loopne
ja
outsl
mov
jg
mov
dec
cltd
dec
pop
or
dec
sub
cmp
fstpt
aaa
testl
cwtl
dec
test
movsb
push
jmp
mov
xchg
mov
dec
jbe
enter
adcl
jp
inc
shll
lock
hlt
mov
xchg
jmp
fmulp
stc
repnz
dec
sbb
push
jp
aas
mov
pushf
out
xchg
mov
jmp
daa
sbb
loope
dec
mov
lret
imul
fstpt
jnp
popf
dec
stc
mov
scas
mov
cmp
or
pop
sti
test
mov
pop
movsb
mov
dec
dec
testb
loopne
cmpsl
es
inc
mov
pop
pop
lcall
cmc
loope
adc
les
pop
add
adc
outsb
addb
mov
cmp
insb
mov
out
leave
and
sub
call
cmpsl
lcall
nop
mov
xchg
ljmp
and
popa
mov
mov
dec
xchg
out
sbb
sbb
movsb
pop
push
out
loopne
mov
and
mov
dec
sbb
test
push
fnsave
ret
das
inc
push
xor
and
fnstsw
ret
scas
leave
sbb
xchg
ret
fxch
mov
dec
pop
and
in
pop
mov
or
ret
jns
xchg
push
scas
std
pop
mov
mov
mov
mov
mov
divl
adc
cmp
aad
into
xchg
outsl
out
pop
notl
ficoml
clc
sub
fcoml
mov
arpl
xchg
dec
rorb
repz
jae
scas
xor
repnz
lahf
testb
sub
sbb
ficoml
xchg
add
shrl
jmp
leave
mov
aaa
rol
subb
js
push
cld
mov
mov
mov
add
mov
jns
scas
xlat
fstl
jp
mov
or
jae
gs
aaa
push
inc
out
pop
cmp
test
mov
outsb
pop
fstpt
pop
clc
mov
pop
imul
jmp
add
iret
loop
and
jecxz
mov
pop
std
inc
cld
sar
and
out
es
mov
sti
dec
dec
dec
popf
rcll
pop
mov
mov
add
xchg
ret
pushf
movsl
ljmp
jp
mov
repz
pop
mov
and
fsubrp
pusha
enter
pop
pop
pop
cli
mov
aas
jb
scas
sub
testl
getsec
int
sbb
xchg
cmp
xchg
xchg
inc
testl
xchg
and
mov
nop
pop
xor
and
insl
jae
sub
sbb
mov
movsb
fmul
inc
jbe
mov
pushf
and
jae
into
push
mov
sarl
add
xchg
dec
jno
mov
mov
enter
outsl
pop
scas
pop
arpl
xchg
stos
imul
push
test
sub
dec
xor
sub
mov
mov
js
mov
dec
scas
faddl
stos
ret
xor
fcomps
mov
push
outsl
or
aas
push
out
xor
xchg
sbb
pop
aas
adc
ljmp
popa
or
loope
rcl
shr
clc
add
push
mov
stc
aaa
jo
cmc
add
xchg
nop
jns
cli
mov
popf
inc
flds
fidivrs
mov
test
out
hlt
push
adc
jne
xchg
fsubl
pop
mov
push
fidivrs
frstor
jl
cmpsl
jp
sub
push
jmp
mov
shrb
cmp
push
jmp
scas
repz
cmp
fisubs
iret
dec
inc
bound
dec
pop
scas
xor
mov
pusha
push
mov
js
xor
bnd
xchg
and
je
push
xchg
mov
cmpsl
js
pop
xor
mov
lahf
pop
int
ss
mov
dec
aas
out
sub
sbb
push
dec
mov
jmp
mov
sub
or
outsb
lods
pop
and
jle
arpl
into
sbb
ficoms
ja
data16
mov
popa
cwtl
mov
mov
pop
inc
pop
jns
dec
mov
inc
add
popf
sbb
dec
xchg
icebp
aad
add
sbb
dec
push
hlt
out
and
in
or
jne
cmp
dec
mov
mov
js
js
pop
mov
jne
shll
fistpll
movsb
aaa
movsl
lcall
pop
in
adc
out
scas
mov
cmpb
xchg
cmpsb
aaa
jns
jmp
neg
or
mov
jg
dec
nop
cmpsb
mov
mov
daa
clc
fucomi
fiadds
das
out
subl
pop
mov
and
pusha
mov
mov
js
cmp
ja
lods
dec
jg
and
test
imul
arpl
mov
neg
cmp
out
or
cmp
repz
pop
xchg
inc
inc
mov
cli
sub
dec
add
and
aaa
inc
movhps
jns
sub
sbb
sbb
into
xchg
mov
add
cltd
clc
push
xlat
xchg
notb
pop
pop
fnstenv
pop
xor
cli
mov
pop
mov
fwait
in
lea
xor
mov
and
jne
imul
push
cmc
aad
cmpsb
data16
mov
xor
dec
stos
dec
cmp
push
add
out
notl
iret
repz
jns
movsb
in
ficompl
mov
and
jp
mov
rolb
ss
addr16
mov
add
aas
fyl2xp1
xor
xchg
mov
dec
out
sub
pop
mov
aam
lock
out
push
push
xchg
cmp
inc
inc
ja
dec
call
xchg
lds
hlt
jle
out
cmp
and
adc
xchg
mov
out
les
or
in
push
jecxz
lock
xchg
je
fdivs
sbb
sbb
xor
cmpsl
jbe
or
sbb
jp
jne
cli
movl
in
data16
mov
cmp
inc
adcl
push
dec
lcall
pushl
js
pushf
scas
mov
addl
in
xor
sbb
stc
fdiv
lret
mov
xorb
out
lcall
push
enter
pop
pop
daa
dec
les
out
in
fldcw
dec
sub
mov
push
stc
mov
cli
sub
push
clc
xchg
popa
test
scas
pop
push
pop
les
push
int
adc
xor
xlat
cwtl
pop
jnp
sub
orl
pop
mov
mov
xlat
out
xor
adc
jp
push
shrb
push
mov
xor
js
mov
inc
and
sub
mov
stos
sbb
test
shll
sub
pop
ja
pop
mov
cld
adc
ljmp
push
arpl
mov
aaa
xor
sub
inc
clc
out
cmp
mov
jmp
lock
mov
stc
mov
insb
sub
pushl
xorb
cmp
mov
mov
test
sbb
mov
shrl
mov
aaa
out
divl
loope
add
xlat
mov
dec
pop
mov
test
or
jecxz
imul
hlt
test
cli
jbe
je
jb
pop
in
lret
or
hlt
out
hlt
and
mov
imul
nop
push
dec
pop
mov
pop
hlt
jl
xor
mov
into
sub
test
lret
imul
inc
mov
hlt
das
push
lret
inc
xor
fldl
mov
lods
out
sub
fwait
dec
nop
ljmp
push
add
shll
mov
lret
loop
pop
xorl
scas
mov
or
mov
pop
cli
je
imul
sbb
stos
mov
adc
in
sub
jno
insb
js
sbb
cmpsb
mov
scas
mov
in
ret
sbb
and
fstpl
test
sub
xchg
enter
mov
dec
int3
pop
ror
iret
xchg
lods
or
in
xlat
jmp
xchg
jbe
sti
popa
pop
mov
push
out
pop
mov
leave
fadd
pop
outsl
cmp
or
xchg
mov
rcrl
call
mov
sahf
dec
add
cmpsl
clc
push
cltd
or
mov
xchg
jmp
sub
or
idivl
mov
lock
dec
push
in
lds
scas
ljmp
or
int
xor
inc
jg
and
cmpsl
cmpsl
dec
mov
std
dec
shll
mov
lret
adc
sub
push
xchg
loop
or
repz
sub
add
call
fcomip
dec
fldcw
dec
jne
push
jns
std
xor
dec
jle
arpl
and
pop
inc
dec
cmp
cmp
inc
into
pop
xchg
daa
inc
ljmp
repz
adc
test
xor
cmp
and
fstps
sti
hlt
stc
cmpsl
mov
fyl2xp1
dec
push
fidivrs
dec
jo
sarb
cmp
cmc
mov
in
out
shrl
sti
mov
xlat
cwtl
mov
push
ja
sub
pop
fisubrs
les
xchg
cmp
or
adc
ret
sbb
cld
and
mov
mov
pop
in
mov
xlat
mov
rcr
mov
not
pop
jp
popw
stc
bound
and
xchg
dec
testb
stos
mov
clc
popa
stos
pop
bound
iret
adc
negb
leave
add
or
nop
mov
mov
sub
jns
cmp
ss
push
jbe
inc
pop
in
jp
rclb
mov
mov
push
es
cmpsb
fs
cmp
test
xchg
jae
jns
pop
mov
push
in
push
mov
int3
mov
popa
pop
xor
pop
pop
outsl
movsb
ljmp
push
cmp
cmp
stos
pop
mov
lret
out
jg
jmp
add
push
call
push
jecxz
pushf
data16
subb
jecxz
leave
add
aad
and
fcompl
pop
stc
pop
movsb
lods
and
pop
or
ja
jbe
fdivrp
cmpb
shr
pop
dec
addb
outsl
daa
mov
pop
pop
mov
dec
pop
fcoms
imul
sub
inc
cli
mov
in
push
xor
or
mov
negl
call
add
hlt
into
adc
enter
addr16
shl
orb
pop
jbe
dec
loopne
mov
dec
test
jl
insl
aad
xchg
add
jmp
ja
inc
in
pop
or
sub
pop
jnp
out
into
jl
jb
gs
add
add
dec
jb
lcall
clc
jecxz
fldcw
int
jne
cmp
test
adc
ds
cli
pop
divl
sarl
imul
xor
inc
sahf
jnp
xchg
mov
and
adc
lds
xchg
arpl
mov
xor
arpl
push
lret
movsb
jmp
data16
test
enter
lods
fisubrl
popa
loope
cltd
inc
out
inc
push
pop
test
js
add
jl
push
and
stos
repz
pop
jp
je
aaa
jbe
mov
enter
cltd
cmpsl
dec
sbb
jbe
cmp
mov
repnz
jmp
test
mov
fucomi
push
subl
cld
cmp
xchg
and
aas
adc
pop
mov
fisubl
mov
inc
jns
jns
sti
bound
movsb
jp
pop
fstpt
cmpb
popf
std
mov
enter
test
or
out
push
push
fxam
lea
fsubrs
lahf
test
int
bound
rclb
push
iret
arpl
push
pop
movsb
mov
sbb
pop
jp
das
pop
rorb
out
push
outsl
or
bound
fldt
pop
and
push
xor
repnz
pushf
les
mov
mov
xchg
jmp
and
xchg
cmp
mov
fcoml
pop
push
mov
aad
test
les
dec
fs
cmp
in
pop
xchg
scas
lock
testl
fadds
mov
sti
scas
lods
inc
imul
ja,pt
push
mov
andl
xlat
loopne
push
push
or
out
xchg
dec
add
push
jmp
sti
sahf
cmp
test
stc
pop
ficomps
fidivs
orl
mov
fmulp
mov
movsb
int
push
xchg
xchg
cmp
xchg
aas
fwait
ds
pop
cmovo
add
std
dec
lcall
fldt
push
movsl
dec
xor
inc
repnz
xor
daa
scas
push
subl
and
in
xchg
outsb
push
cmp
roll
cmp
cwtl
cmpsb
fs
in
insl
push
xchg
into
fnstenv
loop
pop
repnz
int3
shrb
aad
clc
lret
and
mov
push
ja
xor
push
fs
jno
lret
mov
or
fstpt
orb
adc
mov
adc
jecxz
popf
in
mov
push
mov
in
in
jp
pop
lods
mull
add
jle
stc
pop
mov
jbe
inc
dec
mov
ret
in
jns
mov
aaa
mov
roll
stos
push
mov
cmc
mov
add
mov
js
pop
pop
sahf
mov
mov
movsb
push
outsl
fisttpl
pop
gs
stc
dec
leave
std
movsl
xchg
adc
nop
aaa
push
add
int
inc
ss
stc
sbb
stos
pop
imulb
inc
sahf
nop
lahf
push
cmp
mov
stos
ja
cs
jecxz
xor
outsl
in
lret
push
sbb
mov
dec
pop
ret
adc
or
inc
mov
jl
out
fdivr
out
pop
inc
nop
xlat
and
dec
fimull
inc
in
cmp
arpl
mov
int3
pop
pushf
rorb
xchg
pushf
inc
out
stos
insb
mov
mov
enter
lcall
mov
push
or
mov
sub
in
fstpl
dec
mov
fcompl
jno
roll
js
mov
in
or
pop
mov
iret
lea
fs
xchg
scas
js
mov
stc
or
add
dec
jmp
jne
dec
pusha
fistpll
push
xchg
jp
int
shrl
stc
out
push
and
xchg
imul
enter
sti
adc
dec
out
add
in
fs
or
push
icebp
sti
pop
negl
les
xchg
clc
cmp
mov
adc
add
cmpsl
inc
dec
push
jbe
mov
mov
and
push
mov
and
cmc
jbe
mov
in
jmp
jp,pt
pop
lods
push
loopne
mov
jl
pushf
push
sub
mov
xor
mov
lret
dec
data16
nop
divl
pop
cmpsb
daa
inc
flds
imul
inc
mov
out
sbb
jb
lret
mov
xor
les
mov
clc
add
or
addr16
movsl
add
mov
ret
popa
sub
dec
or
lret
iret
cli
push
push
cmpsb
faddl
in
daa
pop
add
xchg
pop
dec
inc
ret
mov
lcall
sub
and
dec
add
cld
lahf
loopne
cli
lret
cmpsb
sbb
fsubrp
lods
add
inc
stc
mov
jns
inc
sarb
mov
jmp
mov
jbe
int3
pusha
flds
addr16
shl
mov
in
push
clc
push
in
pop
ja
cmpsb
in
mov
adc
stc
cli
inc
mov
adc
mov
mov
mov
imul
push
push
call
jns
mov
stc
lret
iret
cli
xchg
leavew
jmp
fs
fs
nop
insl
mov
lods
fxch
arpl
les
adc
pop
mov
lret
inc
mov
xor
lea
subb
jae
push
shl
push
ret
add
dec
xor
and
cltd
push
cltd
dec
push
jo
mov
imul
jle
sub
dec
call
cld
push
mov
jb
pop
in
test
ss
push
sti
in
jp
mov
push
pop
adcb
ret
push
ret
call
xlat
mov
lods
rcl
jp
insl
xchg
imul
cmp
imul
dec
sub
fstpl
push
insb
in
cmc
jno
out
shrb
lret
outsl
pop
test
fwait
es
adc
sub
icebp
sbb
imul
push
sub
idiv
out
mov
sti
mov
cmp
aas
inc
xchg
pop
jmp
xor
mov
or
lock
mov
inc
sbb
sub
stos
fidivl
pop
lock
aas
sub
mov
push
sbb
mov
fcmovbe
dec
es
sbb
jbe
dec
jecxz
cli
mov
jecxz
ljmp
pusha
repz
bound
bound
lret
bound
sub
scas
in
sbb
in
scas
pop
pop
std
cmp
dec
and
aas
ljmp
cld
sahf
sub
push
sub
gs
hlt
out
orb
dec
mov
ja
test
out
mov
jg
pop
lret
jns
sti
loop
pushf
js
int
push
repz
xchg
inc
scas
and
fcoml
xchg
fisttps
pop
stos
lods
xchg
cmp
jo
cmp
push
jmp
dec
cmp
mov
xchg
in
loop
les
xchg
or
outsb
or
push
popa
sub
popa
movsl
scas
xchg
jb
dec
cmp
lcall
adc
repnz
dec
enter
ret
inc
push
jnp
shrl
xor
jb
mul
or
clc
inc
cmp
push
dec
jo
cmp
lock
loope
dec
push
push
mov
push
and
push
dec
outsl
and
lods
mov
movsb
jnp
jne
add
bound
fnstenv
cli
daa
mov
xchg
pushf
ret
cmp
fnstsw
fldt
add
jmp
or
jbe
lret
daa
or
sub
jb
mov
dec
and
jb
int
ficomps
or
ja
dec
dec
jb
sub
jnp
adc
inc
call
sti
jnp
enter
mov
cltd
scas
negl
cmp
cmp
mov
mov
dec
or
adc
xchg
pop
pop
bound
fstl
int
mov
loop
mov
or
sahf
jp
cmp
mov
scas
cmp
leave
or
sti
pop
cld
inc
pop
inc
jge
xchg
jne
repnz
frstor
std
roll
jb
mov
sahf
scas
push
or
cmp
dec
xorb
dec
sbb
in
inc
cwtd
mov
sub
out
test
lcall
jle
lea
fisttpl
frstor
int3
xchg
adc
call
dec
mov
cmp
stos
pop
cmp
pop
test
adc
mov
mov
xchg
rolb
mov
movsb
cmpsb
frstor
stos
xchg
pop
cmovnp
mov
ret
push
push
fstpt
mov
inc
mov
xchg
fwait
into
jg
test
inc
inc
pop
mov
lret
inc
mov
out
push
fwait
loope
mov
and
mov
pop
sub
cld
fs
add
dec
cmp
movsb
insl
and
je
in
cmp
daa
add
cmp
cmp
in
xchg
mov
cmp
cmpsb
push
movsb
cltd
cld
lods
xchg
sti
int3
dec
ror
push
imul
sbb
cmp
sbb
ja
lcall
inc
out
call
xchg
dec
fistpl
lds
adcb
movsb
imul
stc
gs
cs
push
fisubrl
mov
bnd
das
enter
jbe
adc
popa
arpl
sbbb
sbb
or
lock
mov
xor
push
loop
sti
xlat
lds
lods
lock
inc
jecxz
cmp
outsl
lret
jp
cmpsb
insl
jo
in
cs
cmp
shl
pop
push
imul
cld
mov
xlat
jb
push
add
scas
fcomip
mov
sahf
sbb
push
xlat
stos
pushf
pop
cld
cmp
xchg
xchg
or
cmp
mov
sti
pop
mov
push
dec
push
xchg
gs
xchg
mov
mov
xor
int3
insb
mov
or
test
js
in
mov
dec
xchg
and
ss
negl
imul
jmp
jp
fidivrs
mov
jg
or
dec
fnstcw
xor
movsl
int3
inc
fnstenv
adc
and
push
sbb
aas
mov
ret
sub
pop
movsb
push
mov
push
and
cmp
dec
pop
lahf
dec
jl
aas
bound
and
jb
leave
pop
fcmovnu
inc
insb
lods
sti
mov
je
in
enter
pop
push
xor
ss
mov
pop
popl
inc
adc
stc
mov
mov
mov
jecxz
sbb
cwtl
bound
xchg
add
push
lea
adc
jg
sbb
popf
push
stc
mov
rol
sti
data16
dec
jbe
fbld
jne
mov
arpl
xor
ficoms
ja
xor
inc
mov
inc
hlt
jl
sub
aam
mov
dec
jb
push
outsb
xchg
sahf
push
loopne
push
and
out
mov
xor
lea
and
in
dec
andb
sbb
daa
jg
and
dec
imul
cmpsl
out
sub
push
pusha
in
cmp
or
loop
stos
addl
jbe
mov
jbe
sub
xor
mov
pop
or
in
rcll
aaa
mov
sbb
movsb
js
push
rcrb
das
inc
xchg
ffreep
jnp
scas
pop
insl
leave
jmp
cmp
lea
inc
call
mov
dec
dec
pop
scas
push
ja
and
or
stos
rorb
sarl
adc
mov
scas
jl
mov
xchg
push
in
arpl
and
push
mov
js
pop
repz
repz
mov
push
loope
dec
push
lahf
sbbb
js
mov
push
jecxz
jb
mov
call
xor
cmc
mov
rcl
repz
ss
push
inc
xchg
stos
shl
mov
cmp
xchg
test
mov
outsl
push
and
repnz
add
movsl
in
lcall
mov
pop
dec
and
shll
sti
mov
pop
bound
xchg
mov
ficoms
mov
adc
sbb
and
fstpt
mov
scas
pop
cmpsb
test
xor
gs
jge
add
add
fildll
push
cld
mov
or
xchg
fsub
ss
ss
js
shl
sarb
or
push
jno
divl
fsincos
shr
fwait
cmp
mov
rcr
pop
or
imul
scas
xlat
pop
aad
sub
ss
test
adc
cmc
or
mov
mov
rep
pop
aaa
hlt
and
dec
enter
sahf
dec
add
mov
inc
or
push
test
hlt
daa
mov
aam
xlat
sahf
push
jno
mov
stos
int3
push
push
xor
inc
mov
and
movsl
cmpsl
mov
repz
mov
mov
cwtl
into
xchg
dec
xchg
js
ljmp
shll
fldl
push
dec
and
xor
in
push
jns
das
jge
mov
sub
bnd
adc
insl
xor
inc
adc
xchg
xchg
std
nopl
leave
mov
ds
daa
pop
enter
mov
enter
jp
cmp
mov
mov
push
xchg
outsb
movsb
fimuls
xchg
loope
lret
adc
out
push
sub
mov
mov
out
addl
push
and
fdivl
lret
int
out
and
fstpl
data16
loope
out
jge
in
scas
or
mov
xchg
daa
fnstenv
inc
mov
jle
push
inc
and
mov
ret
ret
sub
clc
mov
insl
outsb
repnz
sub
dec
sub
lcall
dec
push
xor
repnz
in
test
jp
pop
test
mov
push
pop
push
mov
rcrl
pusha
movsb
mov
pop
mov
cltd
pop
dec
jp
pop
inc
mov
push
imul
cli
test
push
cmp
in
mov
push
jbe
xchg
push
xchg
fistl
sti
imul
fcompl
sarb
jecxz
and
daa
fwait
rcrl
ss
pop
sar
sbbb
pushf
leave
or
pop
xchg
fnstenv
fnsave
pushf
pop
mov
lcall
in
repnz
in
lods
sahf
inc
leave
int
test
int3
sub
xbegin
xchg
and
stos
cmp
insb
inc
mov
sub
inc
into
ss
mov
xchg
testl
or
imul
je
fwait
ret
adc
stos
es
cld
dec
and
sub
mov
mov
xorl
add
add
sti
fsub
jo
stc
cli
les
jne
push
dec
xchg
test
mov
xchg
mov
clc
aad
cmp
cmp
mov
xchg
dec
stos
mov
push
inc
sub
cmc
leave
mov
or
push
sti
lcall
pop
imul
jg
cmp
repz
nop
dec
mov
push
cs
push
or
sti
daa
insl
sbb
jmp
cs
ja
mov
movsl
push
call
lds
jmp
push
xor
xchg
out
fsts
out
dec
mov
mov
and
pushf
out
icebp
xor
pop
insb
dec
dec
icebp
push
pushf
sbb
adc
mov
lods
in
pushf
push
mov
push
or
mov
mov
xchg
jle
and
xor
hlt
rclb
sti
push
arpl
lock
popf
jne
xor
xchg
shll
push
xor
xor
cmpsl
mov
inc
lock
sbb
rorb
pop
sti
fs
imul
imul
fsubrl
in
daa
dec
sahf
cmp
sbbb
add
push
mov
fidivs
loope
push
out
lcall
mov
js
mov
fildl
mov
pop
in
dec
int3
stos
test
pop
insl
or
clc
imul
bound
dec
cld
notl
divl
movsb
sub
sub
testl
xchg
push
daa
scas
lret
in
stos
pushf
jmp
in
jae
push
js
enter
sub
fildll
xlat
enter
mov
adcb
push
dec
movsl
mov
jecxz
data16
lcall
pushw
or
mov
cmp
jne
cmp
mov
dec
xchg
rcl
out
mov
cmp
push
cmp
mov
int
jle
lods
or
int3
mov
xchg
cld
dec
add
test
add
sub
clc
ja
sbb
sub
pop
push
pushf
popf
fsubs
ret
data16
sbb
pop
notl
test
leave
insb
add
clc
mov
loope
negb
pop
cltd
arpl
inc
mov
loope
in
sahf
sbb
fimull
pop
push
mov
dec
stc
test
cmpsb
or
stos
mov
cld
mov
insb
cltd
xor
xchg
adc
mul
pop
jmp
out
or
inc
mov
dec
or
jae
js
xor
ss
ds
xlat
nop
js
or
fsts
jns
leave
inc
push
notl
test
add
movsb
mov
push
mov
pop
mov
sub
xor
mov
pop
jnp
xchg
addr16
cltd
jne
pop
inc
in
mov
and
int
cli
out
adc
xchg
out
pop
ja
mov
add
shr
out
cmp
adc
pop
pop
sub
jp
gs
imul
cld
stos
movsl
jp
rorb
frstor
in
stc
jne
leave
in
out
or
dec
dec
aad
push
sbb
call
addr16
xor
pop
sub
scas
mov
clc
mov
in
shlb
inc
or
jg
rorl
ss
mov
mov
jae
and
inc
cli
cmpb
sub
ss
adc
fcmovbe
push
sbb
push
jp
and
jge
stc
pop
add
and
outsb
frstor
sbb
fnsave
jns
lret
jecxz
js
jp
pop
dec
fsubrl
dec
sahf
out
cmp
mov
lods
movl
test
stos
pop
pop
imul
pop
pop
loop
fadds
in
dec
loope,pn
lea
pop
insl
mov
dec
sti
repz
xchg
xchg
add
inc
or
pop
inc
ret
out
sub
leave
and
outsb
gs
mov
inc
negl
jne
pop
movsl
pop
and
mov
ret
shrb
mov
inc
dec
sbb
shll
inc
jae
inc
xchg
push
lret
jns
xor
xchg
aad
push
jbe
movl
mov
scas
lods
test
push
daa
cs
jle
add
sbb
lret
mov
repnz
sbb
add
jnp
ss
sub
dec
inc
jmp
add
out
mov
jne
mov
cmp
inc
cld
pop
sbb
lods
xchg
jl
insb
call
xchg
movsb
or
cmp
mov
outsb
cmc
or
into
insb
pop
and
js
xor
aas
stos
aad
in
outsb
out
cmpsb
jp
sbb
sub
dec
aaa
shlb
rclb
lods
in
test
or
pop
test
idiv
xchg
mov
cmp
adc
inc
insl
pop
and
pop
outsl
adc
mov
lcall
adc
or
mov
rcll
sbb
pop
cltd
jecxz
inc
push
add
inc
or
xchg
ret
mov
clc
add
inc
jg
insb
test
fisttpll
cmc
mov
sub
out
xchg
mov
cmp
fstpl
sbb
sub
sti
ds
das
dec
scas
test
push
push
sub
call
push
ja
pop
mov
sbb
lods
das
or
mov
or
jbe
je
adc
mov
push
mov
imul
pop
or
pop
add
push
ret
shr
pop
imul
mov
fimull
sub
mov
clc
mov
fwait
sbb
shr
js
jmp
in
mov
adc
repnz
lret
stc
in
imul
jb
mov
test
push
xchg
jo
mov
ret
mov
push
pop
xor
outsl
xor
add
dec
push
mov
loopne
movl
test
pop
jb
ret
lock
jle
pop
sub
pop
shlb
jecxz,pt
push
xchg
pop
push
mov
mov
pushf
ret
insl
pop
cli
jmp
jg
data16
inc
jnp
movsb
push
xchg
test
inc
test
movsl
cmc
mov
push
out
push
mov
cmp
mov
fcomps
dec
ja
jbe
hlt
pop
push
cmp
lods
das
stc
or
mov
daa
scas
fwait
mov
loope
push
mov
cli
ret
mov
dec
mov
repz
xchg
pop
stos
dec
hlt
jp
repz
inc
cli
rcl
jne
pop
push
loope
adc
mov
ja,pn
dec
xchg
jmp
inc
jp
xchg
in
push
xchg
lods
push
lds
and
or
push
add
shll
repz
stc
mov
xchg
sbb
enter
pop
mov
cmp
scas
mov
sub
cmc
inc
jmp
not
in
gs
mov
cmp
gs
fldt
test
ret
fadds
cld
fldpi
mov
ret
dec
out
mov
ffreep
xor
cs
lcall
pusha
out
mov
loope
test
movsb
jae
int3
iret
pop
bnd
or
add
xor
stc
orb
cmp
test
outsl
add
daa
enter
pop
xor
adc
popa
mov
lcall
jae
push
cmp
cmpsb
jns
or
add
inc
in
daa
mov
adc
pusha
cmp
fucomip
or
mov
dec
adc
push
in
pop
sarb
aas
jo
cld
scas
xchg
jecxz
sbb
mov
mov
mov
lahf
cwtl
xlat
jp
movmskps
cmpsl
push
push
push
mov
push
cmp
sahf
shlb
test
sahf
sahf
pop
jmp
xlat
bound
add
stos
cmc
gs
fisubl
xchg
jmp
sub
ret
inc
int
jp
sub
fcomip
cmp
inc
mov
add
frstor
push
jnp
rorb
jo
pop
cld
daa
xor
clc
std
insl
imul
inc
dec
test
movsb
push
andb
jecxz
sti
or
pop
test
inc
dec
fildl
inc
xor
or
pop
inc
call
pop
lahf
dec
jp
pop
clc
mov
subl
idivl
in
adc
fmull
dec
cmp
js
add
pop
loope
or
push
fdivrl
in
xor
mov
pop
pop
pop
hlt
movsb
ja
push
mov
sbb
mov
out
cld
dec
jmp
mov
mov
add
jp
stos
popl
mov
lods
push
ds
mov
fidivl
fbstp
inc
out
test
inc
inc
xchg
cmpsl
mov
mov
adc
mov
fidivrs
push
cmp
push
orl
out
xchg
in
gs
jp
js
negb
mov
js
cmpb
shlb
fwait
and
ja
cmp
dec
mov
sbb
jbe
cli
fcomi
jg
mov
mov
adc
stos
call
std
stos
mov
jge
fnstenv
xchg
mov
lret
loope
jp
jl
add
in
jp
mov
lea
in
fbld
xchg
lea
push
ja
mov
xor
or
push
imul
clc
mov
xchg
mov
dec
fbld
icebp
aaa
xor
mov
inc
xchg
jbe
xchg
push
ret
stc
mov
or
popa
pop
dec
movl
jmp
cmpb
mov
push
aam
pop
sub
fstl
popf
cmpsb
xchg
sub
mov
cmpsl
and
popa
mov
out
inc
xchg
inc
sarl
or
ss
cmp
sub
fistpll
mov
pop
jbe
add
sub
clc
stos
in
dec
popa
cmpb
mov
ja
and
loop
outsl
adc
inc
add
cmp
xchg
pop
mov
sbb
out
and
mov
mov
fsubrl
or
dec
xchg
jg
cmp
pop
nop
mov
or
ror
fldcw
lea
popl
es
ja
fsubrs
fsubrs
repz
jp
int3
loope
call
int3
inc
stos
in
sbb
mov
cmp
inc
mov
dec
ljmp
popf
or
adc
pop
adc
jle
ret
add
cmpb
jo
pop
clc
jecxz
fldt
mov
out
fninit
sub
xchg
and
and
aad
add
ss
out
cmp
inc
test
push
fsubr
jecxz
mov
in
test
push
pop
dec
sahf
rcl
jmp
call
mov
inc
jmp
push
bound
out
fistl
in
movb
stos
push
mov
xchg
jo
adc
fstpl
or
aam
add
xchg
test
lock
cmp
leave
lahf
or
sbbl
cmp
aaa
sbb
sub
test
or
jecxz
mov
jg
mov
sbbb
addr16
adc
addr16
popa
mov
or
mov
incl
and
sti
inc
mov
loope
adc
adc
out
cmp
pop
dec
bound
fs
imul
sbb
es
jle
adc
push
xor
xchg
int3
xor
mov
xchg
jo
lahf
sub
or
push
clc
pop
leave
jg
xor
in
cmpsb
jae
push
xor
in
pop
mov
ds
scas
popa
inc
out
rorb
hlt
cmp
stos
stos
jge
mov
add
jb
cmp
addr16
in
shl
jl
sar
mov
xor
or
mov
cltd
inc
adc
xchg
lea
pop
popa
dec
fdivrs
mov
int
stc
std
push
add
shrb
jp
adc
mov
cmp
xchg
call
scas
sti
int
push
es
je
shll
out
mov
jae
cli
add
jns
and
push
ja
mov
nop
cmp
jmp
lods
push
testl
gs
push
add
cli
jns
jecxz
xchg
cmp
or
and
push
jp
jbe
jb
pusha
mov
rcrb
les
arpl
icebp
imul
mov
inc
add
push
xorb
push
insb
imul
sarb
jns
fstp
xor
sahf
push
add
and
pop
xchg
mov
mov
cmpsl
cltd
pop
testl
fnsave
fistpl
addl
mov
loope
push
dec
sarl
scas
mov
rcrb
jno
push
add
inc
xchg
ljmp
xor
mov
xlat
mov
or
pop
pop
xchg
xchg
mov
and
shll
lea
sub
inc
fisubs
in
fwait
push
mov
andl
imull
mov
jle
or
movsb
into
xchg
in
dec
ret
adc
pop
in
push
sbb
das
mov
jbe
inc
or
xchg
jnp
fldl
sbb
dec
js
in
es
andl
jl
movsb
cli
xlat
sub
sbb
sub
mov
mov
movsb
pushf
sbb
jp
in
mov
lods
sti
inc
jecxz
call
mov
and
data16
into
mov
repz
sbb
lcall
push
mov
ja
lahf
andb
jmp
xchg
push
mov
leave
xor
mov
jecxz
dec
push
in
xchg
mov
mov
fisttpll
pop
push
mov
xchg
dec
push
mov
mov
in
mov
lret
dec
aas
mov
clc
test
ret
mov
xchg
pop
icebp
pushf
push
rorb
mov
jbe
mov
fnsave
imul
shufps
jp
mov
sub
fcompl
and
testl
xchg
pop
in
push
sbb
xchg
roll
or
in
jb
mov
jecxz
ljmp
push
mov
and
inc
scas
jbe
jp
fcmove
dec
push
sub
addr16
adc
and
mov
mov
mov
push
mov
popf
mov
cmp
movsb
inc
lcall
sbb
adc
js
bound
push
mov
pushf
test
cli
jb
stos
popf
xor
imul
push
or
cmpsl
cmp
lcall
pusha
arpl
popa
cmpsb
pop
jae
and
cmc
cs
lea
int3
in
add
int3
jb
jecxz
jl
jns
in
mov
push
xchg
cmpsb
jne
mov
fldl
lret
jp
xor
lret
movsb
insb
fucom
clc
movsl
in
mov
shll
in
or
push
sbb
adcb
jns
popa
pusha
and
mov
pusha
and
xchg
in
shrb
add
jge
sbb
out
jecxz
mov
cmp
mov
test
adc
xchg
inc
gs
mul
xor
xchg
add
mov
lahf
inc
flds
mov
pcmpeqw
xchg
jae
test
call
xchg
mov
in
cmc
push
dec
std
loope
pop
imul
push
leave
pop
out
aad
scas
std
sbb
dec
push
push
pop
loopne
cld
in
push
in
movsb
arpl
jae
xchg
daa
or
iret
fnstcw
xchg
dec
cld
pop
inc
push
lods
xor
mov
and
dec
push
cmp
xchg
inc
sbb
push
and
push
pop
pop
cmp
stos
jb
or
or
push
out
mov
leave
repz
stos
jmp
dec
das
or
mov
jle
adc
add
jo
cmpsl
jle
shl
test
jl
jbe
mov
jno
mov
fdivl
and
inc
mov
mov
sbb
leave
insl
xor
push
mov
xor
mov
and
jns
fidivs
and
xchg
push
adc
jmp
sub
mov
push
mov
adc
loop
leave
dec
out
mov
or
sahf
test
mov
loope
mov
jp
inc
dec
jecxz
pop
cltd
sub
pushf
xchg
sti
and
push
mov
idivb
sub
insl
bound
mov
or
lds
std
mov
movsl
adc
inc
pop
shll
or
mov
dec
inc
clc
or
mov
pop
push
lahf
or
pop
sub
ss
jp
loopne
mov
mov
push
rcrl
out
cli
cmp
mov
mov
daa
mov
jecxz
inc
cmp
clc
cmpsb
mov
sbb
or
dec
cli
xchg
lcall
dec
and
daa
pop
mov
les
pop
fwait
cltd
cmpsl
aad
push
ja
adc
imul
or
pop
sbb
icebp
imul
js
cmp
cmp
or
mov
in
outsb
loope
lcall
mov
scas
sahf
cmp
adc
in
out
ljmp
cmpsb
push
pop
ret
insb
mov
out
loop
mov
scas
xor
pop
push
cmp
sti
inc
jne
divl
fidivl
mov
jb
pop
in
pop
lahf
mov
xchg
mov
push
xchg
sub
jmp
jp
popa
in
xor
push
fstpl
jmp
mov
int3
pop
xchg
pop
rorl
stc
mov
mov
fsubs
pop
push
and
push
popa
test
mov
addr16
sub
pop
dec
divl
scas
idivb
sbb
sti
daa
pop
enter
das
call
xchg
lock
mov
xchg
pop
xlat
mulb
mov
xchg
jp
sub
in
cmp
cmp
lahf
push
sbb
in
sbb
pop
inc
int
popf
mov
mov
adc
mov
out
pop
push
cmp
int3
in
jnp
jecxz
mov
leave
mov
mov
bound
cltd
cmp
sub
mov
test
mov
mov
jmp
adc
cmp
in
xchg
notl
jns
lds
mov
cli
xchg
lea
int
dec
mov
xchg
pop
divl
push
fnstsw
mov
imul
push
or
cli
add
ja
jbe
pop
cmp
fldl
mov
mov
pop
popa
pop
mov
add
cltd
test
das
xlat
jo,pt
pcmpeqw
inc
jns
push
pop
mov
mov
xchg
lods
xlat
mov
negl
test
cmp
dec
or
xchg
push
test
fsubs
rolb
lahf
stc
lods
jb
jne
stos
js
out
push
aaa
data16
out
testl
fimull
inc
fisttps
mov
popf
imul
mov
arpl
mov
jb
xchg
pop
cmp
and
lcall
dec
jnp
push
jg
lds
mov
int3
mov
cmp
xchg
movsl
dec
and
loopne
dec
xor
inc
dec
dec
addr16
ficoms
xchg
cmp
xor
sbb
mov
daa
dec
clc
cmp
cmpsl
mov
xor
xchg
orb
push
cs
movsb
out
xchg
cmpsb
test
repnz
mov
inc
cmp
fwait
push
lods
jmp
push
jmp
in
mov
mov
jo
mov
and
mov
jbe
xchg
adc
push
lock
ds
sbb
outsb
repnz
mov
sbb
mov
mov
movsl
and
jecxz
andl
or
repnz
cltd
into
divl
mulb
mov
icebp
jno
jge
or
xchg
out
gs
jecxz
mov
insl
aad
jecxz
lea
add
pushf
mov
pop
inc
aas
lock
pop
shl
pop
or
clc
movsl
cmp
lods
jae
xor
imul
and
lods
pop
dec
fistps
cmpsb
iret
mov
push
jle
push
js
mov
pop
push
enter
cmp
pop
or
sbb
insl
ret
sbb
cmc
mov
pop
scas
ret
jmp
sub
fistps
jns
jge
push
pop
jne
push
cs
imul
jo
inc
sub
jb
enter
pop
fistps
lock
jg
dec
andb
hlt
pop
roll
aad
repz
fbld
mov
or
mov
ss
cmpsb
push
or
or
scas
jns
push
mulb
inc
and
adc
jge
movsb
test
rdmsr
imul
pop
popf
pop
cli
jb
mov
imul
mov
ss
movsb
imul
fidivrl
mov
ret
rorl
in
loope
mov
push
negb
or
cmovl
lods
cmp
jmp
js
lds
jmp
and
call
mov
dec
dec
es
jl
xchg
mov
popa
xchg
and
sti
cmp
fmul
xchg
push
sub
insb
jbe
inc
xor
push
in
fsubrl
int
aaa
mov
lret
sbb
mov
cs
and
inc
jecxz
mov
aas
or
addr16
and
cmp
rcl
mov
and
xor
mov
wbinvd
cwtl
ret
jmp
cmpsb
mov
push
mov
inc
pop
pop
xchg
sbb
fsubs
pop
pusha
lcall
mov
pop
inc
lcall
lds
leave
test
xchg
jmp
in
lods
mov
int
inc
std
outsl
dec
in
es
je
mov
imull
repnz
jmp
test
ds
dec
push
lret
fnstcw
cmp
xor
adc
jo
sub
pop
add
mov
push
shll
mov
in
xorb
pop
fstpt
jbe
in
xchg
mov
outsb
xor
loopne
ljmp
xchg
cmp
es
dec
lcall
int3
cmpsl
call
adc
xchg
outsb
xchg
inc
shl
jo
filds
jle
lea
ja
dec
aam
or
daa
insl
dec
in
scas
icebp
push
jo
arpl
or
scas
mov
call
inc
in
xchg
imul
imul
fldlg2
add
jb
testb
dec
lret
shlb
dec
xchg
enter
cltd
aam
rcr
mov
push
and
stos
mov
lahf
rcrb
push
shlb
adc
movsl
rol
jo
pop
mov
inc
clc
mov
shl
push
clc
jecxz
push
add
pop
xlat
in
rcl
xchg
jge
into
pop
lret
sbb
or
scas
je
cmpsb
fcoml
jmp
cs
sbb
mov
push
jmp
stos
xchg
cltd
orb
gs
jecxz
ss
xchg
xor
hlt
aas
test
cwtl
dec
sub
dec
add
pop
popf
pop
lea
stc
aas
mulb
pop
mov
pop
dec
dec
leave
jae
sub
ljmp
mov
dec
lods
dec
mov
dec
dec
cmpsl
dec
aad
scas
inc
shll
scas
xlat
pop
and
push
fsubl
or
jle
data16
ficoms
movsb
rolb
mov
inc
enter
sbb
push
jl
xlat
mov
pop
mov
js
shrb
outsl
fists
in
jne
jno
cmp
int3
shrl
pcmpgtb
bswap
fbstp
out
icebp
insb
xlat
int3
xor
jp
test
sti
in
pop
mov
mov
addr16
inc
pop
mov
cs
idivl
cld
mov
dec
int
pop
ror
pop
icebp
aas
xor
fdivrl
mov
call
cmp
add
sbb
sbb
je
insb
fbld
dec
movsb
insl
xor
push
in
sub
repz
fwait
push
mov
adc
jp
mov
or
fnstcw
nop
push
fwait
cmpsb
repz
jne
xchg
mov
test
jecxz
adc
mov
in
js
or
jbe
mov
jb
stos
add
cld
fimuls
int
arpl
ljmp
jb
and
jne
ss
jecxz
ret
sub
adc
in
mov
ljmp
pop
adc
addr16
int3
xchg
aad
cmp
mov
outsl
cmc
insl
and
popa
cmp
add
das
aaa
pop
push
xlat
outsl
cs
icebp
jne
outsb
cmc
mov
mov
add
cltd
push
movsl
mov
aas
adc
jnp
aad
adc
dec
in
mov
mov
mov
ficomps
dec
imul
xchg
push
out
pop
fnstenv
jbe
jno,pt
in
out
cmpsb
jle
jge
jno
out
lock
pusha
test
or
sub
hlt
lock
push
lock
jp
ret
pop
lds
add
add
stos
dec
test
loopne
cltd
jb
jns
mov
xor
mov
mov
xchg
inc
cmc
fnstcw
sahf
jmp
sub
addb
outsb
cli
add
fwait
jg
cmp
jl
add
outsl
push
lcall
mov
roll
jno
jb
loopne
mov
push
push
shlb
inc
jae
shlb
add
mov
mov
enter
es
sub
ds
adc
add
inc
ja
xlat
in
push
jns
jle
mov
xlat
sub
inc
outsl
mov
ljmp
or
pushf
push
mov
sbb
cltd
loope
jmp
xor
imull
ljmp
rcrl
push
jno
ret
xchg
cmp
xchg
popf
push
stc
jle
mov
and
inc
pop
inc
mov
std
mov
rcr
xchg
push
ret
outsl
jmp
leave
std
gs
inc
cli
movsb
pop
repz
test
out
mov
pop
in
mov
arpl
test
fdecstp
cmc
popa
pop
in
jecxz
push
xor
jge
aaa
arpl
push
inc
andb
mov
clc
mov
sub
aad
data16
push
imul
dec
cmp
mov
mov
sub
cmc
pop
jp
test
add
jbe
mov
pop
mov
xchg
imul
popf
mov
dec
lret
lahf
lea
loop
mov
cmp
jno
dec
jne
out
sbb
mov
dec
add
and
hlt
aaa
cmp
add
pop
pop
test
pcmpgtd
stos
push
push
inc
js
sbb
xlat
dec
out
inc
jge
mov
cld
ds
das
jmp
mov
jb
movsb
stos
and
xor
fiaddl
dec
pop
in
mov
jl
mov
pop
mov
push
dec
movsb
inc
inc
pop
jg
cmp
jp
pop
mov
mov
sub
dec
add
mov
jno
and
imul
inc
cmp
inc
lods
or
mov
js
push
cld
jbe
adc
push
sub
out
sbb
sub
adc
sbb
mov
push
js
scas
popa
mov
out
xchg
aad
lods
jae
cmpsb
incb
xchg
es
jp
xchg
outsb
mov
in
mov
push
sub
pop
mov
testl
mov
pop
push
push
push
faddl
mov
sti
lret
fisubl
loop
out
xor
imul
int3
je
xlat
lret
out
xor
dec
fisttpl
push
jae
inc
in
xor
iret
sti
mov
scas
sub
xor
mov
inc
dec
mov
jecxz
mov
or
popf
dec
jb
cmc
stos
imul
add
and
sbb
divl
in
push
push
ljmp
mov
jmp
mov
fldcw
or
enter
fcmovbe
lcall
pop
jmp
pop
and
stc
test
cmp
mov
enter
add
aaa
lock
test
and
arpl
xlat
mov
testb
shll
out
in
xor
dec
xchg
add
mov
mov
push
rclb
sahf
push
pushf
lret
dec
jl
adc
test
aas
cmpsb
inc
dec
int3
jp
cld
dec
pop
lcall
push
insb
pusha
repz
jnp
fwait
mov
pop
test
scas
fisttps
jp
addr16
int3
dec
clc
frstor
outsl
mov
aas
add
fdivl
outsb
sarl
ljmp
xor
adcl
push
dec
out
out
jns
sbb
jnp
push
js
mov
mov
lret
sti
adc
dec
mov
popf
inc
push
ja
cmc
pop
pop
push
and
test
cwtl
sti
jle
or
cld
fdivrs
inc
fs
or
push
and
test
cmpsb
popa
or
sub
pop
ss
jae
xchg
enter
in
pop
mov
pop
push
cmp
cld
shlb
adc
or
repnz
mov
mov
mov
push
ja
arpl
cltd
push
mov
jbe
inc
and
push
xor
mov
mov
cmpsl
jmp
cmp
pop
and
out
in
out
mov
mov
iret
push
mov
in
shll
add
addr16
add
scas
adc
lcall
sub
mov
popf
sti
sti
imul
int
cmc
test
adc
mov
jmp
mov
pop
pop
xchg
movsb
or
lods
or
push
jecxz
cmp
cwtl
or
je
clc
cmpsl
pop
out
or
shrl
sti
push
imul
cli
in
adc
jno
mov
mov
inc
sub
push
stos
cmp
call
sbb
cs
push
mov
adc
push
cmpb
mov
stc
pop
jb
or
push
or
iret
fildl
xchg
mov
jbe
mov
iret
xor
mov
sbb
idivb
inc
sbb
adc
lock
in
jo
out
push
fcom
sub
inc
push
clc
mov
pop
sbb
fucompp
mov
or
xlat
sub
clc
clc
xchg
fs
out
sub
mov
lret
xchg
and
aad
cmp
mov
xchg
inc
pop
jecxz
aaa
loop
lock
adc
lods
xchg
add
and
pop
out
jns
push
cmp
repz
pop
mov
rorl
mov
jp
push
lock
pop
fadds
add
lahf
xchg
sbb
mov
add
lret
icebp
push
divl
xchg
xchg
dec
dec
add
mov
jo
out
stos
sub
jns
inc
jmp
and
pop
fstpt
sbb
arpl
enter
fwait
ja
jne
ss
arpl
fisubrs
cmp
out
imul
pop
jae
mov
stos
jb
lret
nop
mov
pop
loope
outsl
push
fwait
scas
ljmp
test
insb
jmp
in
pushf
insb
fs
and
pop
pcmpeqd
dec
mov
in
imul
cmc
popa
subl
insb
mov
shll
sahf
mov
cmp
mov
xlat
sbb
and
mov
movsb
dec
push
mov
mov
push
xchg
jmp
mov
dec
pop
clc
dec
xchg
xchg
sbb
adc
dec
jg
dec
xlat
cmp
fcomip
mov
ret
xchg
out
mov
mov
add
or
xchg
rcr
pop
out
fdivp
lds
test
add
jecxz
or
into
popf
xor
js
pop
sub
mov
negb
mov
fidivl
fs
push
adc
pop
xchg
inc
mov
xchg
mov
pop
sbb
shlb
pop
arpl
rolb
pop
int3
in
js
dec
jbe
mov
add
mov
jg
stc
mov
and
scas
mov
push
ret
lcall
das
push
ljmp
aaa
fildl
push
mov
movsl
pop
rcll
repz
sub
mov
scas
xchg
mov
and
mov
sub
mov
das
movl
in
bound
lahf
xor
call
movsb
mov
mov
jecxz
idivl
movsb
sbb
ret
cwtl
and
cld
iret
pop
or
jo
inc
pop
std
pop
dec
cmpsb
pop
jns
and
mov
xor
in
in
gs
ds
xchg
scas
sbb
movsb
and
mul
call
outsb
jp
ja
mov
inc
test
hlt
rcrl
xor
fildll
push
outsl
mov
mov
mov
scas
aaa
mov
mov
fucomi
mov
out
stc
push
loope
in
pop
stc
dec
sbb
xchg
hlt
mov
gs
inc
in
jae
pop
frstor
push
movsb
outsl
adcl
in
les
subl
sub
imul
dec
dec
mov
inc
in
in
or
fidivs
or
and
pop
stos
and
xchg
xchg
js
mov
and
bound
mov
stos
mov
jp
pop
mov
mov
mov
mov
push
jg
test
cmp
pop
mov
std
sbb
hlt
insl
cwtd
inc
loopne
imul
aad
test
xlat
arpl
cmpsl
xchg
shlb
in
loopne
pop
enter
outsl
cmpsb
arpl
movsl
lahf
jecxz
lcall
cmc
sub
inc
adc
in
stos
mov
popa
push
fnsave
ret
callw
insl
rorl
lret
mov
push
lock
mov
bound
push
sub
aam
sbb
mov
repz
fdivl
int3
repnz
lahf
insb
js
push
dec
and
and
idivb
push
data16
mov
xor
sub
loop
xor
mov
mov
cmp
xchg
fcmovnu
addr16
mov
mov
addl
mov
pop
cmp
pop
push
fldcw
icebp
adc
aam
push
test
aam
mov
leave
sub
lods
mov
sub
mov
fstl
jp
add
int3
xlat
cli
adc
jmp
cwtl
add
stos
leave
mov
inc
pop
mov
xchg
inc
arpl
dec
push
idivb
scas
loope
mul
rcl
dec
lods
mov
push
mov
daa
es
adc
enter
loope
pop
lea
scas
repnz
idivb
jne
mov
push
stos
in
dec
and
scas
sarl
push
jecxz
mov
lock
ds
stos
and
loop
jle
jmp
enter
fsubr
mov
neg
dec
mov
inc
push
cmp
call
int
mov
das
xlat
mov
mov
notb
stc
inc
mov
in
pop
and
insb
xor
mov
xchg
repz
pop
mov
push
inc
cmp
mov
pop
cmp
mov
ljmp
adc
decb
and
les
in
xor
outsl
test
inc
scas
mov
sub
pushl
pusha
jmp
or
xchg
aam
aas
sub
insl
push
leave
mov
dec
cmp
and
inc
inc
imul
in
fsubrl
pop
movsl
adc
sub
scas
das
adc
lods
mov
flds
shlb
or
cmp
jecxz
sti
xlat
imul
addr16
cmp
ret
inc
sti
cli
mov
push
je
xchg
repnz
or
icebp
cmpsb
fildll
xor
out
mov
scas
bswap
pusha
fwait
pop
cmpsb
lcall
rorb
loope
mov
inc
ss
repnz
stc
gs
sub
inc
jbe
sub
jne
lret
mov
xchg
mov
sahf
lods
cmp
and
pop
mov
mov
imul
int
sub
mov
and
lock
pop
mov
sub
mov
cmp
in
aad
gs
mov
ret
cmp
outsl
lret
and
jae
pop
pop
int3
mov
adc
cmp
pop
mov
mov
iret
cmp
out
xchg
sub
pop
out
stos
repz
push
inc
xchg
pop
scas
ret
push
out
pop
mov
cli
xor
push
pop
mov
sbb
and
mov
or
sbbb
mov
pop
loop
les
pusha
jbe
leave
shll
int3
aas
inc
in
push
dec
test
mov
xchg
imul
sub
pop
jecxz
outsl
mov
dec
sbb
sub
icebp
out
cmp
mov
mov
and
clc
cmpl
mov
sub
mov
scas
pop
xchg
sti
ret
push
dec
clc
mov
mov
sti
call
stos
gs
je
outsl
xchg
dec
jecxz
mov
jg
daa
sti
adc
out
leave
or
add
jae
pop
test
inc
mov
push
jae
push
div
in
das
jge
add
stos
mov
nop
call
enter
bound
mov
mov
mov
mov
movsb
sub
mov
stc
das
xor
dec
inc
lahf
lcall
scas
xchg
cmp
jbe
inc
mov
cmpsb
addl
cmpsl
mov
or
data16
in
xlat
and
dec
jecxz
bound
imul
psubusw
cmpl
rcl
jb
mov
cmp
ljmp
addr16
pop
jno
test
add
jmp
pop
dec
cmc
lahf
testl
mov
fdivl
loope
jnp
jo
mov
mov
imul
mov
xchg
mov
ret
in
jne
add
imul
stos
sarl
ret
int3
pop
aaa
inc
jne
or
jmp
subb
scas
iret
or
ja
sub
xlat
cld
or
push
subl
movsl
jp
ja
pop
sbb
cmp
bound
in
repz
rorl
addr16
pop
jb
pusha
mov
cmp
xor
in
fstp
clc
pop
ror
fdivrs
repz
mov
dec
sub
push
and
mov
cld
lret
jbe
dec
push
call
adc
push
jns
jbe
inc
pop
sti
fdivrs
repz
movsb
fstpt
aam
sub
and
in
mov
repnz
andb
mov
xor
bound
es
add
ss
pop
push
sbb
cli
mov
jp
cmpsb
bound
cmp
mov
aaa
fistl
mov
fcoml
stos
jns
je
out
in
mov
imul
mov
cld
and
or
and
lock
dec
imul
adc
pop
in
mov
jae
loop
mov
lds
xchg
icebp
imul
ret
push
pop
fldl
out
adc
pop
cmpsl
lahf
jmp
xchg
ljmp
test
and
xor
aas
cld
dec
mov
xchg
mov
iret
dec
out
mov
pop
xor
divb
shlb
mov
sub
in
push
sub
movsb
mov
lret
fcomp
mov
jle
and
jl
adc
mov
iret
mov
ror
jp
xor
xchg
out
sti
ljmp
adc
pop
mov
add
jae
jl
loopne
mov
jg
sub
test
sbb
sbb
mov
fwait
mov
jbe
push
fwait
mov
cmpsl
sbbb
out
jne
call
arpl
adc
cmp
jecxz
xor
sub
and
mov
imul
jp
mov
imul
sub
xchg
xchg
sub
insb
rcr
fcomi
testl
jp
shrl
mov
lret
jcxz
mov
jmp
imull
ja
cmpsl
lock
sti
ja
loope
movsb
lock
pusha
adc
dec
lret
cmpsb
xchg
adc
cmpsl
xor
and
xchg
data16
dec
enter
mov
pop
jecxz
jmp
sbb
negb
sub
mov
pop
daa
cs
jne
scas
jo
sar
addb
pop
jns
xor
add
add
xchg
jmp
mov
cmp
push
pop
dec
mov
int
and
leave
ficomps
divl
add
enter
push
imul
push
or
movsb
mov
addr16
and
int
pop
mov
leave
pop
repz
fucomp
mov
adc
iret
cmp
in
sub
incl
clc
push
mov
adc
pop
fptan
dec
jbe
and
imul
or
stos
dec
jnp
mov
pop
pop
leave
jmp
jae
cld
push
imul
mov
mov
out
sub
fistpll
fsubl
inc
ret
out
pop
out
test
or
mov
xchg
dec
andb
fidivs
aam
cmc
shr
push
mov
ja
ja
testl
push
sub
int
mov
sub
ljmp
cmpsb
imul
add
arpl
iret
vpshlw
jo
mov
or
mov
out
cmp
xchg
jns
ja
pop
jae
int
sti
out
roll
pop
fldcw
sahf
xor
mov
sbb
insb
lahf
jecxz
insb
xorb
jp
mov
dec
mov
fisubl
pop
aam
push
pop
mov
dec
pop
cli
push
stc
movsl
ljmp
adc
sbb
aaa
mov
enter
cmp
adc
dec
rorl
mov
mov
pop
repnz
jmp
pop
jns
jae
cld
repz
cwtl
mov
stos
pop
ja
lret
ret
addr16
pop
js
xlat
loope
pop
dec
or
loope
arpl
outsb
inc
int3
cmp
dec
cmp
adc
iret
inc
dec
pop
pop
pushf
sti
dec
out
call
in
push
ret
mov
btr
or
adc
jmp
cmp
jo
push
in
int
dec
mov
jg
fs
test
sub
repnz
mov
aaa
out
jnp
leave
adc
inc
jg
repz
lods
stos
and
xor
xchg
ja
mov
xor
cmpsl
add
mov
jg
or
jge
push
cmc
sti
pop
push
pop
repz
add
or
inc
jp
dec
imul
loopne
int3
mov
dec
cmp
sub
out
hlt
or
jg
cli
repz
hlt
mov
mov
outsb
movsb
sbb
xor
sub
pop
pop
xor
scas
add
mov
outsb
mov
xchg
jecxz
add
pop
enter
and
mov
push
and
repz
fnstsw
mov
mov
aas
sub
mov
inc
shl
dec
cltd
push
pop
sti
aad
xchg
inc
pop
movsb
mov
mov
repnz
das
jmp
adc
pop
jle
xor
addr16
into
mov
xchg
jns
fistl
cmpsl
mov
sbb
push
sbb
pop
xor
and
lahf
jbe
jmp
push
arpl
xchg
push
push
cmp
cmpsl
pop
sbb
cmp
out
scas
xchg
and
mulb
jb
out
in
mov
mov
aad
leave
jae
mov
push
scas
sbb
scas
movsb
ja
xor
clc
adc
sub
into
cmpsb
jbe
das
push
push
lods
adc
negl
lret
into
mull
negl
leave
mov
cmp
aas
testb
and
stos
jns
adc
mov
mov
in
fiadds
mov
push
mov
cmp
sub
aas
fs
pusha
dec
mul
or
ljmp
sti
sbb
dec
or
or
enter
stos
xor
mov
movsl
mov
into
test
loop
scas
jecxz
enter
sbb
add
dec
jns
divl
push
enter
stos
mov
xor
xor
es
mov
in
cmp
arpl
ret
or
pop
push
mov
int
jl
jnp
mov
mov
xorl
mov
pop
push
data16
mov
shrb
aaa
sbb
dec
pop
xor
push
sti
aam
push
in
mov
mov
pop
scas
mov
jns
dec
aaa
imul
fildl
push
adc
xchg
pop
repnz
lret
test
add
jg
xchg
xchg
mov
xchg
push
inc
pop
mov
sbb
mov
pop
ja
xor
cmpsl
or
and
rolb
xor
and
pop
and
mov
jns
add
add
mov
ss
mov
xchg
insl
das
mov
or
cmp
push
mov
insb
inc
lock
inc
fcmovnbe
and
jns
push
stos
inc
or
sub
loope
and
mov
lea
call
mov
push
mov
lahf
jecxz
jp
mov
mov
sbb
fldenv
into
js
arpl
or
outsb
ss
sub
loope
pop
sub
mov
dec
iret
adc
in
push
mov
push
fistl
test
test
inc
inc
mov
mov
aad
dec
push
pop
out
clts
xchg
movsl
push
in
adc
mull
push
lds
jp
ja
xchg
push
pop
and
pop
loopne
xchg
hlt
xchg
in
clc
out
adc
push
lcall
inc
jns
dec
jmp
mov
pop
dec
adc
cmpsb
mov
aam
cld
aas
mov
sub
sbb
fnstenv
dec
dec
ja
sbb
rorl
pop
aam
jns
cltd
mov
insb
xor
push
clc
fisubs
sahf
ja
stos
mov
pop
les
stos
iret
stos
xchg
mov
popa
test
mov
mov
push
add
ja
mov
mov
inc
adc
arpl
pop
xchg
cmp
roll
outsb
pop
pop
les
xlat
or
imul
inc
sub
pop
ss
xor
js
fimull
je
cmpsb
in
mov
push
lock
pop
mov
out
scas
lds
in
bound
ja
jnp
outsl
in
pop
mov
rorb
adc
orb
pop
fmul
xorl
aas
lcall
loope
push
aas
movl
jmp
push
mov
insb
stc
push
adc
orb
push
pop
shll
notl
pop
fcompl
pop
inc
arpl
mov
inc
dec
jns
iret
inc
push
or
add
jns
mov
clc
rcrb
das
pop
pop
mov
ljmp
xorb
rclb
das
je
push
test
enter
movsl
jmp
xor
gs
sub
xchg
scas
push
inc
xchg
mov
jns
cmp
jne
xchg
mov
pusha
pusha
or
int3
push
js
fwait
in
shr
or
jmp
add
lds
mov
cmpsl
cmc
mov
cmp
inc
xlat
or
movsb
popl
loope
cmpsl
push
js
xchg
imul
sub
sbb
xchg
ret
testb
out
sub
shr
and
movsb
jmp
mov
push
test
lret
or
imul
orb
test
push
mov
mov
xor
sti
xor
enter
mov
repz
sbb
aaa
in
insl
call
push
cmc
lods
cmp
mov
inc
lcall
jns
clc
testb
and
adc
aad
pop
push
inc
sahf
lret
cmp
lcall
test
push
jg
cmpsb
in
lcall
xchg
mov
cmp
or
int
data16
mov
and
and
stc
cmp
sbbl
pop
mov
pop
in
mov
cmc
ja
mov
mov
xchg
lret
es
dec
add
ja
cmc
insb
mov
movsl
cwtl
adc
pop
inc
inc
cs
pop
enter
mov
ret
stos
jb
leave
outsb
insb
insb
sbb
pop
inc
test
out
fdivl
stos
pop
jg
mov
out
jmp
jmp
jmp
cmp
mov
lea
loopne
idivb
fsub
pop
cmp
lods
dec
mov
cltd
je
movnti
cmp
push
mov
lods
push
mov
mov
mov
test
xor
and
push
lret
push
xchg
jp
repz
data16
loop
ljmp
sub
xchg
movsl
pop
clc
ret
cmpsl
cmp
mov
mov
jecxz
jge
in
arpl
iret
xlat
sub
pop
fstl
insb
ja
rdtsc
lea
mov
mov
xchg
or
jbe
push
xchg
test
push
push
outsl
push
mov
bound
jecxz
dec
jg
sub
jbe
mov
out
mov
mov
enter
cld
mov
ret
inc
add
mulb
out
dec
sti
xchg
sbb
cli
fistps
pop
mov
inc
testl
xchg
dec
negl
stc
jns
inc
cmp
pop
outsb
in
leave
cmp
lock
data16
stc
sbb
movsb
shrb
add
testl
sub
lret
lcall
and
aas
enter
test
int
cltd
repnz
scas
sbb
adc
ret
es
lods
daa
cmp
fmull
in
inc
jp
insb
scas
sub
jo
daa
jns
mov
lods
jne
stos
jns
leave
adc
mov
mov
mov
ret
and
xchg
push
jns
dec
enter
inc
inc
mov
jecxz
mov
add
js
in
push
push
popa
sub
mov
popf
outsl
and
cmc
mov
and
jp
pop
jecxz
cmpsb
pop
push
loopne
sub
ja
jl
fsubrl
cld
and
xchg
sbb
or
je
inc
pop
cs
pusha
jns
jecxz
jno
jg
mov
mov
notl
push
imul
mov
fnstsw
or
cmpsb
mov
iret
scas
arpl
sub
mov
or
and
sbb
aaa
ret
pop
fsubl
mov
jbe
jg
push
arpl
je
cmp
mov
dec
mov
sbb
mov
fwait
sbb
test
mov
test
lcall
nop
in
mov
shlb
enter
call
dec
ja
xchg
sub
out
mov
jo
js
mov
mov
or
sub
mov
inc
sub
fadds
ficompl
add
daa
mov
psubsb
cmpsb
cmp
inc
xchg
cmpsl
jns
dec
test
or
push
sub
mov
jge
in
fstps
mov
xor
icebp
mov
and
sub
adc
xchg
push
in
add
outsb
ficompl
addr16
push
cld
ja
nop
neg
ss
mov
mov
dec
jmp
dec
sti
inc
sbb
mov
dec
sub
xchg
pushf
sar
ret
pop
push
popa
fwait
imul
push
enter
xchg
pop
or
mov
and
sub
test
leave
or
mov
push
push
jecxz
xchg
pop
test
sbb
inc
mov
data16
jle
lret
pop
cmp
cmp
sti
and
outsl
rcrb
mov
ret
dec
mov
mov
js
sti
jecxz
mov
dec
jg
jl
inc
xchg
pop
addr16
in
repz
jae
inc
pop
cli
pop
jl
cmp
pop
sahf
icebp
xorl
mov
lahf
push
dec
jne
xchg
and
xor
mov
xchg
xlat
dec
mov
inc
adc
outsb
dec
mov
bswap
mov
call
into
jecxz
je
out
jbe
into
push
fsubs
shr
jecxz
lock
movsb
dec
cmp
pop
push
sbbb
addr16
leave
mov
mov
popf
pop
imul
adc
jecxz
in
or
lahf
bound
sub
pop
js
jnp
jecxz
movsb
jbe
mov
dec
or
pop
jecxz
test
push
fidivrs
push
pushf
inc
aas
or
xchg
xchg
adc
push
iret
test
stos
and
shl
xchg
push
ficompl
out
xchg
xchg
out
insl
push
lds
jns
cmpsl
lods
in
aad
push
and
jae
inc
fdivl
imul
andl
mov
enter
inc
cli
je
cmp
mov
mov
sub
xor
jecxz
out
enter
pop
push
inc
das
jecxz
movsb
pop
outsl
mov
jg
test
mov
fsubrp
jbe
sub
and
or
jae
xchg
loope
mov
push
pop
push
js
xchg
repnz
in
or
aam
inc
test
scas
and
test
cwtl
outsl
adcb
insb
icebp
cmc
pop
jp
pop
jle
xchg
stos
xchg
pop
xor
mov
fidivl
imul
mov
sbb
gs
fidivrl
lahf
and
ds
shlb
push
cltd
pop
insl
add
out
jmp
add
mov
in
add
mull
scas
push
pop
rorl
stos
fdivrp
repnz
je
jbe
sbb
ljmp
ljmp
mov
sub
lock
and
in
inc
in
aaa
sbb
repz
rcrb
outsb
dec
lds
arpl
mov
mov
jle
dec
adc
sub
sub
outsl
mov
int
shll
mov
xor
stc
jbe
xor
lcall
mov
adc
push
push
or
inc
sahf
pop
xchg
insl
and
mov
stc
js
lods
dec
ret
mov
mov
ja
mov
jb
mov
outsb
or
enter
out
mov
mov
imul
pop
lock
popa
push
dec
push
in
sub
data16
push
jp
sub
pop
test
xchg
cmpsb
pop
jnp
daa
out
stos
in
mov
ja
jg
cmpsl
outsl
xor
pop
scas
f2xm1
pushf
addr16
out
mov
and
mov
jb
out
adc
hlt
movsl
loope
popa
ljmp
inc
push
es
popf
mov
add
and
push
aaa
faddl
lret
push
ret
mov
or
sbb
push
stc
lret
jno
cmc
jle
aad
jbe,pt
repz
push
into
das
leave
jle
fbld
push
jmp
fisttpll
fmull
mov
mov
and
push
dec
aas
inc
pop
cli
in
js
pop
and
insb
movsl
out
dec
xchg
push
or
aad
in
sbb
dec
cli
stos
mov
mov
sbb
insb
jp
xchg
and
mov
cmp
jle
sbb
jmp
insl
adcl
xchg
ss
out
clc
xchg
cmp
or
sti
outsl
push
repz
pop
pop
adc
and
mov
jp
int3
mov
movsb
lret
mov
adc
enter
lcall
pop
xlat
pop
shrb
adc
push
pusha
xchg
mov
lcall
jbe
mov
push
in
dec
test
iret
pop
mov
cmpsb
adc
lods
or
sbb
pop
hlt
out
mov
sarl
xor
insl
sub
int
cmp
lock
movsb
fistpl
hlt
push
cmc
repnz
sbb
push
fwait
push
jae
mov
xchg
push
lds
mov
pushf
cmp
inc
ret
loope
loopne
scas
jno
sbb
push
testl
je
and
lret
fldt
cmp
inc
shll
lret
data16
push
mov
dec
mov
lahf
js
mov
pop
cld
leave
dec
sbb
out
jp
packuswb
cmp
dec
add
or
push
addr16
leave
xlat
fcoml
cmp
imul
mov
mov
int
jb
jecxz
imulb
push
shll
inc
sub
aad
pop
and
out
sti
cmc
sbb
add
gs
add
or
fs
jl
lods
mov
pusha
std
lret
push
pop
movsb
jns
jae
jp
xor
hlt
mov
jle
add
lods
xchg
or
cwtl
cmp
jp
dec
sbb
mov
jle
sbb
jg
cmp
mov
mov
sub
jl
dec
jle
push
push
jae
frstor
xor
je
jns
lock
cmp
xlat
into
dec
in
jl
pop
out
pop
push
push
dec
mov
mov
inc
mov
mov
int3
jecxz
mov
xor
into
jl
fcompl
push
mov
or
int3
in
stc
pop
std
adc
insl
dec
mov
repz
xchg
mov
cmc
push
aas
mov
fidivrl
lahf
dec
xchg
js
mov
or
inc
dec
inc
aas
jns
repz
imul
adc
lods
ficoms
repz
das
inc
outsb
xchg
adc
adc
mov
bnd
int
repz
adc
hlt
movsl
dec
xchg
int3
jp
filds
push
stc
mov
mov
hlt
jl
sti
mov
or
push
cmp
testl
cld
dec
jns
imull
dec
iret
ljmp
ss
scas
cmc
ja
add
scas
xor
adc
jbe
jbe
pop
push
push
lds
mov
pop
jecxz
pop
outsb
icebp
mov
mov
inc
jp
repnz
mov
jl
fdivrs
inc
lahf
imul
xchg
push
pop
push
out
int
aad
jb
lods
pop
xchg
fbld
and
stc
imul
jno
shll
mov
int
addr16
dec
stos
fs
jp
ljmp
push
out
mov
pop
push
dec
cmc
jecxz
dec
stc
out
dec
dec
idivl
ja
mov
jmp
mov
rolb
dec
ds
mov
sti
add
push
cltd
push
pop
sbb
loopne
pop
adc
loope
mov
xlat
loop
add
jg
push
test
cmp
cmp
pop
jecxz
mov
xor
scas
aas
jp
jns
pop
mov
cld
cmp
xchg
dec
idivl
pop
imull
mov
mov
pop
jns
addr16
decl
aas
xchg
xchg
sbb
xchg
out
mov
popa
push
call
daa
sbb
sahf
loop
into
mov
xor
jge
out
xlat
fisttps
jp
addr16
push
inc
pop
jp
into
test
imul
lea
pop
imul
addr16
icebp
xor
int3
out
jp
loopne
mov
aas
jp
jns
inc
pop
divl
adc
cmp
jns
jmp
sub
mov
jmp
loopne
pop
dec
cmp
ficoms
mov
mov
int
xor
js
out
cli
mov
xor
cmp
xchg
xchg
fldz
mov
ljmp
jp
jne
inc
std
sub
cmp
jmp
fdivl
mov
cmp
jno
jmp
pop
add
mov
jmp
jo
dec
lahf
loop
mov
sbb
aaa
fstps
cmpsl
mov
jbe
nop
ja
dec
push
pushl
out
xchg
xchg
mov
lret
push
call
fnstsw
popa
mov
mov
jae
out
popf
mov
pop
adc
jno
arpl
popa
imull
mov
mov
dec
outsb
mov
push
mulb
mov
and
jp
sbb
push
jne
mov
inc
mov
in
loope
cmp
clc
popf
nop
cmc
outsb
ja
jp
pushf
out
cmp
je
js
adc
mov
repz
js
dec
dec
iret
push
add
push
push
cltd
enter
or
sub
jns
or
cmp
pop
in
jge
stos
push
sbb
mov
xchg
divl
je
add
bound
out
repnz
mov
cwtl
clc
lret
adc
stc
mov
dec
sti
hlt
dec
cmp
mov
fxch
mov
rolb
jns
popf
pop
dec
sbb
pop
fnstcw
jne
xor
mov
dec
jb
push
mov
mov
xchg
ret
cmp
jmp
mov
sbb
mov
call
int
insl
cmp
xchg
notl
mov
sbb
lea
out
or
cwtl
jnp
xor
or
mov
hlt
insl
pop
mov
stc
in
repnz
aas
cmc
cmp
jno
sub
aad
stos
cmpsl
stc
push
mov
movsl
xchg
xor
fldl
dec
out
adc
push
dec
and
pop
jmp
popa
jg
mov
cmp
pop
and
flds
lcall
adc
xchg
dec
mov
addr16
orl
arpl
stos
shl
loopne
inc
shrb
sbb
lret
shrb
push
cli
pop
cmc
aas
out
movsl
aad
int3
subb
jbe
test
fcoms
or
fiadds
cmp
push
das
cmp
test
mov
add
mov
js
cld
clc
and
and
lods
std
cld
aad
adc
and
ss
jp
push
cmc
pop
es
jb
inc
movsb
sub
cli
ja
cld
jo
cmc
pop
mov
ja
jns
std
cmp
mov
cli
repz
cmp
mov
test
clc
sbb
outsb
xor
fldl
rcrl
movsb
sub
xor
sti
pop
push
loop
jbe
mov
movsb
xchg
js
xor
mov
jp
imul
add
mov
outsl
cmc
test
fsubs
xor
cmp
js
jb
cmp
mov
rorb
fnstenv
vmovdqu
cmp
in
xchg
jp
xchg
mov
stc
cmp
lahf
xchg
push
aaa
push
inc
cli
dec
into
popa
mov
lret
adc
inc
or
xchg
push
pop
jge
ficompl
sbb
fbld
mov
lret
dec
addr16
xchg
aam
push
push
pop
test
je
fucomp
pop
loopne
jns
out
mov
sub
sub
xchg
insl
ja
push
push
jecxz
movb
xchg
mov
jg
pop
ja
cmp
jecxz
idiv
fwait
mov
arpl
imul
add
jbe
rcrl
jnp
or
shl
jae
xchg
dec
pop
lahf
xor
inc
scas
addr16
jo
xchg
movsl
sbb
sti
push
mov
sub
push
jae
leave
dec
rcll
push
dec
repz
ret
data16
cmp
sarl
sbb
cli
push
jle
push
jnp
enter
mov
push
pop
fwait
add
and
pop
ds
sti
or
bound
and
cmp
or
in
dec
push
stos
loopne
mov
out
data16
dec
sub
movsb
dec
out
cmpb
test
pop
add
cld
add
loopne
data16
popa
lds
sbb
loope
addr16
adc
jl
jle
pop
mov
ja
outsl
sarb
pop
sub
sbb
in
push
lret
sub
xorb
mov
mov
mov
rolb
nop
dec
cs
iret
pop
out
mov
ja
cmp
lret
mov
jb
push
out
jmp
cmp
mov
mov
ljmp
xchg
pop
adc
cmp
inc
and
les
sbb
js
leave
push
int3
enter
cltd
push
push
cld
mov
jl
sar
mov
and
adc
pushf
sbb
movsb
or
inc
fisubrl
pop
pop
fwait
idiv
enter
ret
lahf
mov
loope
in
jp
cld
mov
mov
xchg
sub
cmp
pop
push
jo
shrl
fcomps
jo
out
xchg
rcrb
inc
xchg
aad
push
add
in
fwait
gs
fninit
mov
and
insb
or
jg
stc
jb
push
mov
jp
sub
pop
mov
and
test
mov
cmc
outsb
inc
ja
sub
stos
sub
xchg
out
fs
sbb
push
sbb
pop
in
sbb
adc
cmpsb
in
mov
ljmp
cmp
jmp
pop
mov
mov
inc
adcl
outsb
and
jb
jecxz
push
shr
pop
cli
xor
pop
pop
cmp
mov
jns
xor
push
inc
enter
push
cwtl
dec
arpl
push
mull
icebp
loope
cmp
inc
sub
insb
fwait
add
push
loope
and
mov
mov
pop
push
cltd
movsb
inc
mov
popa
outsl
jbe
movb
jns
mov
int3
xor
andl
jp
fnstcw
fdivr
insl
push
aas
mov
adc
aaa
mov
sti
inc
fdivs
push
sar
jo
repz
testb
sub
movsb
pop
scas
pop
movsb
push
aas
jbe
dec
dec
xor
mov
add
notl
push
repz
adc
icebp
rol
jne
xor
mov
fsubrp
fstpt
rorb
lock
push
push
popf
adc
xchg
jae
cld
xor
in
enter
in
lock
into
adc
push
mov
mov
sbb
push
push
jno
jp
icebp
test
jnp
in
and
pop
pusha
sarb
cmp
pop
aad
jb
ret
or
in
cmp
test
pop
or
jae
dec
stc
push
mov
pop
pop
and
daa
cmp
out
adc
xchg
xchg
loop
in
pop
push
cltd
dec
int3
rcrl
leave
inc
mov
or
mov
jbe
mov
ljmp
outsl
sarl
sahf
mov
cmovl
push
and
in
or
or
addr16
incb
or
dec
fcmovne
mov
out
jmp
push
cwtl
andb
fisubrl
data16
mov
fnstsw
shll
adc
cwtl
push
push
fcompl
ja
imul
mov
mov
nop
out
fldenv
xlat
aaa
lods
push
scas
sub
xor
stc
es
xor
adc
sbb
mov
test
or
mov
dec
cltd
and
jmp
xor
lret
dec
xchg
lcall
jp
leave
daa
pop
ljmp
data16
insl
aad
ljmp
pop
jl
jg
loope
dec
ficompl
pop
mov
pop
mov
ljmp
scas
js
mov
out
outsl
pop
or
mov
jne
aaa
pop
xchg
pop
loop
rolb
fdivr
inc
sti
and
stos
mov
mov
shrb
mov
mov
pop
cs
repz
repz
aas
pop
rolb
lods
mov
imul
dec
add
data16
rorb
outsl
sbb
rol
jne
mov
push
xor
mov
lcall
lea
xor
fcmovnbe
xor
jecxz
dec
repz
out
repnz
das
inc
or
cld
js
ror
ds
xor
lcall
or
mov
aaa
push
imul
in
xchg
sub
xchg
outsb
push
cmp
pop
sbb
sub
push
stc
ljmp
pop
lahf
imul
mov
jecxz
push
in
push
clc
jae
pop
mov
cmp
pop
xor
sbb
mov
pop
mov
cmp
insl
inc
add
dec
icebp
lcall
popa
mul
icebp
or
jns
fst
inc
push
push
cli
cmp
aas
jmp
aam
cmp
inc
test
add
subl
jo
mov
or
insl
stos
imul
mov
outsb
push
pop
adcb
lods
xor
ja
inc
dec
pop
int
jb
add
data16
sahf
ja
sarl
sbb
repz
lcall
scas
pop
ja
mov
nop
aad
repnz
jecxz
in
enter
jge
mov
ss
sub
dec
stos
mov
adc
pushf
lret
leave
loope
push
movsl
mov
rep
data16
lock
jb
mov
pop
push
je
jo
test
jns
test
test
xchg
ljmp
sub
lods
adc
cmp
mov
sti
mov
inc
inc
pop
add
fs
dec
imul
mov
sub
jecxz
and
jae
pop
lcall
mov
jmpw
cmc
pop
cmc
cmp
jmp
jmp
rclb
jl
mov
shrl
movsb
mov
in
cmp
jg
mov
in
jp
repz
jb
dec
aaa
call
testl
add
cs
repz
lods
fwait
testl
jp
cmp
sti
pop
mov
jmp
or
mov
fcomi
mov
insb
cmp
repz
sub
push
imul
add
mov
mov
addl
mov
sub
jns
loop
push
push
fisubrl
mov
cli
pop
jecxz
js
outsb
bound
or
push
cmp
in
cmp
jb
mov
out
lcall
mov
sbb
push
lock
cli
aaa
in
xchg
push
jns
cmp
test
test
add
push
jp
in
lods
dec
xchg
sub
mov
dec
and
push
mov
pop
mov
sub
lods
outsb
pop
mov
stos
push
cmc
sbb
cltd
xchg
xor
repz
imul
repz
cmp
inc
enter
imul
pop
mov
mov
push
xchg
inc
stos
imul
out
pop
push
mov
cmp
int
jp
mov
adc
pop
mov
cwtl
mov
sti
inc
xchg
inc
shrl
push
pop
cwtl
xor
mov
addr16
and
testb
movsb
xchg
mov
inc
xchg
inc
outsb
imul
stos
repz
or
stos
sti
out
mov
arpl
mov
mov
lret
push
pop
hlt
lock
add
xchg
mov
xor
js
mov
cmc
xchg
fmull
imul
mov
lods
in
push
jmp
push
out
hlt
jmp
cmp
clc
in
xlat
xor
imul
xchg
aad
cmc
xlat
mov
ret
in
fcmovu
pusha
cmp
push
repnz
sti
idivl
mov
xor
add
inc
arpl
les
mov
ret
in
sub
xchg
loopne
clc
imul
cmpsb
jp
sbb
sbb
add
and
add
cmp
js
aad
test
push
mov
ret
inc
xchg
push
fsubrs
aad
ds
sbb
mov
cmp
cmp
sbb
cltd
xlat
mov
or
fdivrs
adc
clc
jbe
or
stc
adc
adc
data16
adc
xor
sbb
add
xchg
or
dec
pop
push
cmp
inc
jo
fnstsw
jno
pusha
mov
cmp
out
mov
push
out
rcrl
aaa
jb
or
pop
roll
and
cmp
leave
sub
mov
imul
mov
jp
movsb
mov
stc
sbb
jno
in
push
in
pop
cmpsl
push
mov
std
inc
jbe
rep
in
fwait
xchg
mov
inc
or
int
inc
fmull
cmc
add
loope
sub
jb
xabort
pop
jns
xlat
sbb
outsb
cmp
mov
in
and
sbb
xorb
fisttpl
mov
addb
inc
ja
dec
or
pop
aaa
out
pop
or
adc
and
or
mov
mov
sbb
cmpsb
push
cmp
or
mov
pop
push
call
add
push
pop
std
pop
adc
pop
pusha
out
xchg
sub
xchg
lods
pop
in
out
jp
nop
add
or
inc
int
ss
arpl
mov
fisubs
sbb
adc
mov
jp
sbb
push
cmc
cmp
in
cmpsb
bound
push
clc
stos
push
insb
pop
mov
and
out
sbb
jp
lods
xlat
insb
icebp
js
dec
scas
imul
neg
pusha
mov
jmp
mov
aad
aaa
xchg
js
neg
mov
pop
lock
pop
mov
pop
enter
cmp
xchg
pop
pop
imul
movsb
sti
jns
into
pop
jmp
fcomps
ja
scas
pop
loop
lcall
mov
int
into
fistpll
filds
push
pop
aad
inc
test
mov
mov
lods
mov
jle
icebp
and
xchg
sbb
push
mov
xchg
jno
cmp
dec
ds
mov
inc
xor
inc
mov
repz
push
mov
ss
lahf
stos
cltd
mov
jbe
lret
xor
xchg
pop
mov
ret
adc
idiv
adc
jne
xchg
xchg
sbb
sub
xor
mov
inc
fisubrl
cmp
mov
and
addr16
sbb
and
and
jbe
sti
mov
movsb
mov
imul
in
cltd
sub
insl
imul
fdivrl
movsb
sub
shlb
inc
and
adc
adc
les
subl
jno
gs
dec
mov
data16
dec
aam
push
jbe
xchg
scas
xor
jp
cmc
dec
imull
out
cmc
sbb
pop
mov
pop
pop
das
mov
fs
push
sbb
ja
push
xchg
mov
adc
outsb
pop
inc
cmp
and
mov
in
addr16
insb
cli
fwait
mov
xchg
dec
push
cltd
out
lods
aad
sahf
lahf
in
cmp
cs
movsb
mov
aad
xor
xchg
cmc
pop
xchg
jp
insl
jecxz
cmc
in
push
in
pop
int3
outsl
push
call
xchg
aas
jb
in
xorb
jmp
pop
insb
cmp
pop
xchg
insb
mov
mov
push
lods
jbe
pop
mov
pop
push
mov
mov
lods
dec
popl
dec
repz
and
pop
pop
stos
shl
out
scas
mov
push
xchg
ljmp
cmc
lods
and
bound
mov
jp
fyl2xp1
jg
pop
or
jns
dec
stos
push
scas
mov
aaa
inc
not
in
cld
mov
xchg
inc
fildll
in
icebp
daa
test
lahf
arpl
in
in
jns
cltd
adcb
loop
cmc
insb
loop
cmpsl
adc
pop
movsb
hlt
pop
testb
nop
mov
pop
addr16
cmp
scas
add
adc
fcmovu
pop
faddl
gs
lret
mov
cmp
dec
data16
xchg
push
repz
addb
ljmp
inc
push
push
cld
mov
xchg
repz
bound
test
xor
xlat
lods
mov
stos
xchg
in
or
jbe
jecxz
sbb
lock
lock
sub
scas
dec
or
cmc
gs
ja
orb
mov
cmp
daa
mov
gs
cmp
stc
add
jle
insb
inc
mov
lock
mov
test
fsubr
loopne
fistpl
mov
and
jmp
mov
ja
cmp
out
xlat
adc
jo
cmp
subl
push
in
mov
mov
sbb
sti
out
ja
rcr
mulps
mov
andl
mov
sub
jmp
mov
subb
mov
mov
call
xor
mov
or
push
imul
xchg
mov
sub
jp
sub
bound
mov
pop
mov
pop
lods
test
std
fsts
mov
jecxz
outsb
out
push
mov
clc
xchg
xlat
jle
jle
out
stos
xchg
xchg
cmp
push
inc
sub
xor
inc
in
test
aam
cmc
inc
das
jne
push
inc
and
push
adc
scas
testl
clc
push
push
mov
fwait
cmp
mov
sbb
mov
push
fwait
repz
xor
out
adc
jle
filds
cmp
jecxz
cs
movsl
inc
push
imul
leave
repz
mov
imulb
xchg
in
sub
in
sti
xchg
out
mov
mov
sti
popa
sub
jle
movsb
in
test
loopne
pop
or
jg
movsl
inc
xchg
fisttpl
test
cmpsl
jmp
dec
push
int3
jb
mov
and
paddsw
inc
xlat
inc
imul
mov
mov
scas
in
jbe
adc
fsubrs
je
dec
ja
mov
dec
inc
mov
cmp
scas
mov
addr16
es
cmp
or
jp
cmp
inc
mov
push
pop
cmp
push
mov
pop
mov
push
push
mov
in
dec
mov
or
mov
lret
subb
mov
cmp
jl
cmpsb
outsb
pushw
dec
in
sbb
and
jmp
xchg
mov
push
outsl
mov
addr16
mov
stc
js
push
dec
pop
jae
sbb
adc
test
xchg
or
sbb
jl
mull
xchg
sbb
out
or
pop
xchg
pusha
sub
fimull
pop
insb
push
inc
outsl
or
xchg
sti
mov
cmp
inc
stos
out
outsb
pop
out
jmp
cld
outsl
mov
push
cmp
mov
ja
mov
mov
xor
xchg
pop
sub
out
repnz
jb
imul
mov
int3
pop
out
mov
dec
imul
xlat
jmp
push
mov
cmc
pop
loope
xor
jmp
pop
outsb
inc
int
xor
jb
fdivrl
mov
push
mov
jmp
out
cmp
pusha
adc
nop
mov
dec
jp
adc
cmp
int
fwait
push
or
mov
add
ja
sub
dec
cmp
je
jns
sub
pop
js
stos
notl
repz
lods
fcomi
jbe
and
ljmp
aad
lret
or
data16
mov
pop
in
je
lock
add
mov
out
jne
mov
fbld
insb
es
aaa
mov
insl
sub
push
adc
cmp
jnp
push
jecxz
in
stc
mov
es
jge
sub
pop
add
mov
fnstenv
sub
cmpsb
jns
jmp
stos
or
push
cmp
shl
inc
or
pop
jge
pop
cld
push
js
ret
sbb
mov
sbb
add
mov
mov
jecxz
sbb
mov
or
cld
inc
clc
daa
cli
leave
mov
fcoms
jecxz
ss
fwait
sbb
mov
negl
push
pop
pop
pop
les
lret
test
lods
jl
adc
dec
cmp
ss
push
add
push
mov
movsl
dec
adc
ss
data16
cmpsb
jp
push
aaa
push
adc
dec
ja
cld
mov
sbb
mov
mov
data16
jmp
ljmp
jb
cmp
inc
xchg
pop
aad
or
jne
rorb
cmp
xor
cmp
imul
push
dec
rclb
xchg
cld
insb
mov
dec
xchg
pop
mov
inc
xchg
fwait
js
fcoms
sbb
pop
jg
sbb
insl
pop
in
into
jns
shrl
jb
dec
hlt
stc
rcrb
xchg
jmp
xchg
sbb
rorb
mov
xlat
cmp
repz
stos
loopne
ds
std
cmpsl
xchg
lds
or
jl
ret
jl
dec
bound
stos
in
cli
dec
imul
fwait
outsb
pop
jecxz
stos
push
add
adc
addr16
mov
stc
outsl
movsl
orb
xchg
clc
cmc
mov
out
cli
sbb
dec
cmp
loopnew
mov
jbe
xor
lret
mov
xorl
arpl
cmc
push
out
inc
popf
mov
add
sub
push
imul
movl
xchg
mov
mov
ja
push
mov
mov
fstpt
pop
push
lods
push
insl
data16
xchg
arpl
xor
mov
repnz
test
lret
xchg
out
jno
lret
stc
cmp
jecxz
cs
in
jae
mov
or
imul
divl
add
xchg
inc
cmpsl
dec
flds
mov
jns
jb
dec
sbbb
out
adc
push
or
bound
cmp
inc
mov
cmp
clc
inc
inc
mov
or
ret
jae
shlb
lods
xchg
adc
fwait
in
xor
out
push
adc
divb
inc
lcall
xlat
xor
cmpb
pop
in
insl
dec
aam
js
cwtl
jp
sbb
or
daa
lret
sbb
popa
add
shlb
aam
pcmpgtw
shll
or
ror
fcmovne
jp
and
mov
sbb
mov
cmp
mov
arpl
adc
jg
xchg
idivl
aaa
ror
dec
sub
cmp
pop
data16
jne
ss
testb
pop
cs
xchg
adc
testb
inc
xchg
aaa
inc
or
in
or
rcrb
test
ret
ss
xlat
or
je
es
or
cmp
xor
mov
outsb
mov
pop
mov
jbe
xchg
jns
in
pop
push
icebp
sbb
jp
pop
ja
data16
xchg
cmp
test
lcall
cmpsl
pop
mov
push
repz
outsl
ret
cmp
ljmp
cmpsb
in
mov
dec
push
inc
int3
out
cmpsl
outsb
lds
sarl
data16
pop
aaa
xchg
negl
mov
ds
pop
in
clc
mov
mov
fcomp
jbe
cltd
arpl
add
cltd
xlat
icebp
in
dec
iret
add
and
jp
aad
int
mov
push
scas
xlat
ret
pop
xchg
cmp
mov
xor
dec
fists
add
in
ds
mov
sub
sbb
and
cmpsb
ljmp
xchg
push
shrb
jns
dec
fiaddl
xchg
aaa
lods
jo
dec
pop
imull
inc
xorl
lock
sarl
pop
fnstcw
stos
or
xlat
pop
push
leave
in
inc
mov
inc
xchg
data16
addr16
sub
inc
je
jae
or
fst
mov
dec
fisttps
lcall
rcll
mov
inc
stos
xchg
or
adc
mov
std
and
adc
inc
jp
pop
dec
add
jl
cmp
rcl
mov
mov
imul
adc
sbb
insb
repz
sbb
pop
out
data16
mov
and
mov
add
or
aaa
insb
xchg
orb
add
jmp
popa
or
imul
cmp
dec
cmpsl
stc
dec
mov
insb
insl
sbb
mov
xchg
mov
inc
or
pop
dec
push
mov
enter
inc
unpckhps
pop
dec
mov
insb
sub
stc
mov
icebp
add
rolb
push
imul
pop
das
xchg
pop
in
jmp
bound
xchg
aad
adc
jb
leave
pop
mov
imul
lret
mov
mov
rcrl
fildl
scas
outsl
fs
loop
call
mov
sbb
insl
popa
lods
sub
pop
arpl
call
xlat
icebp
or
pop
hlt
stos
pop
int3
nop
out
push
jne
sub
xor
sahf
pop
ud1
pop
lods
icebp
movsl
mov
out
and
push
insb
lock
push
jp
outsb
xchg
fstl
outsb
sbb
inc
sub
pusha
or
in
vmovaps
lret
scas
push
add
stos
in
xchg
pop
das
mov
insl
or
adc
lock
mov
pop
stos
or
mov
and
or
cltd
in
pushf
insl
mov
jl
pop
push
in
push
push
mov
mov
cmp
jl
lds
leave
jne
push
pop
mov
dec
int
xor
je
add
xor
fs
aam
cmp
cltd
push
mull
les
pop
sbb
loop
jne
out
adc
jbe,pt
jle
mov
sti
fildll
rclb
lock
jp
xchg
adc
negb
icebp
sarl
test
mov
rcrb
push
push
add
pop
gs
add
mov
clc
inc
outsl
sbb
xchg
pop
add
dec
and
decl
ret
int
xchg
ja
jg
in
cmp
ss
cld
jle
nop
dec
mov
movsb
shlb
cmp
mov
push
stc
das
pop
clc
push
and
dec
dec
in
mov
inc
push
scas
fadds
sti
xor
pop
xchg
adc
out
out
cmp
out
mov
testb
jb
mov
in
mov
aad
stos
out
in
in
cld
xchg
sub
sub
shrb
cli
dec
leave
sahf
out
stc
xor
mov
scas
jmp
push
cwtl
mov
lock
mov
push
aas
lds
xchg
lea
outsl
jmp
in
sahf
adc
cmp
insb
in
mov
xor
push
lahf
testb
inc
or
notb
and
cmp
fmull
xchg
jle
pop
push
xor
fstps
cmp
icebp
shrl
addb
rorl
out
ret
pushf
fistps
mov
pop
cmp
pop
add
leave
gs
aas
ljmp
jp
mov
out
dec
cmp
xchg
cs
mov
add
lcall
add
test
stos
fsts
jmp
and
xchg
sub
cmp
pop
hlt
js
xchg
adc
testb
mov
xlat
adc
push
jp
pop
call
cmpsb
clc
and
push
mov
stos
xlat
push
repz
ljmp
imul
push
dec
rorl
cs
scas
hlt
jns
ret
pushf
sub
pop
jp
sbb
out
xor
mov
jns
xchg
xor
dec
fisttps
mov
push
flds
xor
scas
xor
cwtl
jecxz
mov
xor
sarb
jns
cs
lret
dec
popf
fisubl
ficomps
adc
gs
xlat
mov
rorb
sbb
insl
xlat
shll
cmp
pop
ja
and
adc
lods
dec
mov
mov
jns
idivb
cmp
xchg
cmp
jg
fwait
icebp
call
add
mov
push
sti
gs
addb
inc
xlat
out
cmp
test
in
push
std
fcomps
jnp
xchg
aaa
inc
fidivl
sub
mov
fwait
push
cmpsb
cmc
repnz
jae
jmp
sbb
in
test
add
lock
adc
repz
dec
mov
shlb
sti
xchg
inc
popa
push
imul
es
mov
dec
and
test
pop
lcall
lods
insl
inc
fmull
or
jp
addr16
pop
les
fsts
mov
addr16
fs
mov
stos
xor
popf
imul
cld
test
sub
je
cmp
insl
clc
push
xorb
inc
in
lret
movsb
sub
jbe
mov
stc
cltd
aad
jecxz
xchg
jg
out
in
in
repz
push
imul
ficomps
add
push
jnp
je
jbe
sti
sbb
fucomi
ja
jbe
enter
mov
mov
ss
outsl
iret
jp
in
cltd
dec
xor
mov
sub
dec
mov
out
xchg
pop
clc
in
push
movsb
dec
push
sub
bound
push
das
push
sbb
mov
push
or
add
sysret
int
mov
jns
imul
cmc
lods
rcrl
cmpl
inc
sub
xchg
sbbl
and
ja
frstor
xchg
push
lahf
or
nop
cli
test
inc
dec
mov
lods
cmpsb
push
mov
xor
adc
and
mov
mov
jae
dec
xchg
jecxz
mov
enter
stc
add
jmp
ds
mov
imul
movsb
stos
and
xor
or
dec
addr16
pushl
daa
enter
mov
push
jmp
xor
mov
adc
les
std
mov
out
lret
leave
lahf
call
insl
out
mov
mov
rorl
imul
cld
xchg
mov
in
inc
outsl
mov
int3
adc
adc
sbbb
ret
movsb
into
negb
movsl
iret
enter
ror
ds
push
lds
cmp
sti
or
std
int
adc
mov
shlb
dec
pop
iret
xchg
int3
enter
mov
icebp
xchg
andb
ja
leave
outsb
lock
outsl
test
cmp
adc
aas
outsb
fldt
mov
cmp
stc
mov
test
push
cmp
test
int
jbe
test
outsb
xchg
xor
js
int3
pop
aam
sahf
fistpl
pop
dec
push
test
jmp
mov
and
xchg
push
hlt
push
cmp
sub
dec
or
jge
cmpsb
xlat
inc
jp
xchg
mov
cli
adc
mov
push
fwait
sbb
push
cmp
dec
mov
xor
mov
aas
mov
shl
ds
lret
mov
int3
xorb
outsl
fs
sbb
in
leave
iret
stc
out
jge
push
push
jmp
cmp
jno
movsb
fwait
xchg
dec
mov
jno
mov
mov
cmp
popa
push
movsl
cmp
das
and
add
cli
xchg
test
push
mov
fcmovnb
inc
cltd
mov
pop
push
stos
test
jp
jp
lcall
mov
js
mov
stos
mov
jp
jecxz
mov
inc
mov
jne
mov
mov
sahf
scas
ret
js
iret
mov
rcrb
xchg
adc
sub
cmp
sbbl
add
ja
mov
xor
sub
in
push
ja
add
out
push
mov
and
nop
mov
test
out
cwtl
cld
jle
ja
pop
lods
pop
and
arpl
add
sub
fdiv
outsl
sub
arpl
pop
cli
dec
sbb
cmpsl
int3
loop
sbb
jmp
stos
mul
jns
mov
fwait
mov
cmpsb
push
imul
pushf
jo
js
push
sbb
jle
push
and
and
fisttps
movsl
push
pop
jmp
jecxz
and
push
in
push
nop
mov
lcall
jp
bound
sbb
jle
adc
out
fnstsw
ss
jp
push
pop
pop
cmc
mov
or
cld
mov
inc
adc
lock
inc
int3
xor
and
in
mov
jns
les
and
cli
jp
in
mov
bound
adc
in
mov
xorb
popf
pop
sub
pop
cli
mov
or
mov
in
jnp
sub
not
fildl
mov
cli
dec
jl
ffree
and
xor
cs
sub
cli
xor
xchg
inc
jmp
lods
addr16
daa
dec
pop
sahf
outsb
or
xor
out
mov
mov
scas
add
out
das
adc
in
aaa
std
dec
mov
out
int3
dec
outsl
add
aaa
int
addb
sub
push
stos
inc
mov
ja
mov
jne
jbe
cmpsb
push
aas
mov
in
cli
loopne
icebp
test
mov
push
jns
jno
or
mov
push
mov
sub
fnstenv
jns
cld
in
push
fiadds
dec
outsl
ss
lods
lret
imul
stos
scas
mov
je
cmp
mov
scas
mov
movsl
inc
std
out
stc
push
ds
sbb
jbe
roll
cmp
push
sbb
movsb
pop
and
ja
lock
lods
pop
fdivrp
movsb
loop
test
imul
aad
pop
shl
push
push
add
mov
mov
cli
pop
inc
xchg
loope
ja
das
sti
sbb
pop
or
ficompl
cmc
cmp
test
mov
cld
jg
frstor
arpl
sbb
fwait
xor
jecxz
mov
ds
cmpsl
repnz
lret
sub
jecxz
adcb
inc
jmp
movsl
push
xor
inc
negl
fildll
stos
mov
add
mov
adc
adc
pop
in
or
fstl
or
mov
test
shll
ja
lret
and
cmpsb
jge
test
js
scas
jb
push
in
lcall
xor
or
sbb
and
xor
adc
pop
push
sbb
mov
mov
aad
aas
fisttpl
mov
pop
sbb
cmp
cmp
in
inc
cmp
fisttps
pop
test
loopne
lret
and
push
add
mov
mov
pop
test
push
stc
arpl
mov
mov
sarb
jae
gs
xor
fsubrs
cmp
imul
insl
xchg
aaa
fisubrl
out
mov
enter
sbb
and
mov
int3
or
jmp
cmp
mov
jb
inc
jb
out
aam
stc
xchg
in
mov
fildll
push
sti
dec
jno
mov
mov
lods
cmp
lds
stos
movsl
inc
push
fsubrs
sub
inc
or
sub
das
inc
cmp
sub
addr16
push
mov
and
cmp
sarl
pop
mov
adc
enter
mov
sub
mov
jmp
sub
xchg
push
fs
xor
cmp
mov
add
inc
jmp
cmp
in
ret
mov
inc
cmp
bound
cmc
lock
xchg
lahf
mov
movsl
mov
sub
popa
cltd
push
dec
lds
dec
clc
mov
fcompl
pop
fadds
clc
cmc
mov
lret
test
adc
mov
cli
xor
mov
and
ljmp
std
mov
push
mov
push
sbb
sub
mov
dec
movsb
les
aas
and
push
leave
dec
cmp
jp
xchg
mov
movswl
mov
push
bound
adc
cs
sub
dec
dec
stos
fildl
pop
outsb
push
mov
repz
loopne
ret
aas
add
clc
jecxz
stos
pop
insb
imul
cld
mov
dec
call
pop
outsb
pop
in
mov
pop
cmp
fstps
or
ret
push
xlat
stos
testb
inc
cmp
xchg
or
push
jg
sbb
pop
bnd
sub
icebp
cmc
xor
cmp
ja
stos
lods
fwait
push
and
cltd
xlat
cmp
jp
js
sub
fcomip
mov
mov
lock
inc
cltd
inc
and
mov
jp
in
or
cmp
mov
push
mov
adc
or
pop
int3
fs
arpl
out
jnp
aad
jg
xchg
cmp
ret
adc
pusha
push
ja
fwait
mov
negl
cmpsb
in
pop
dec
popf
aad
mov
sub
dec
pop
popa
mov
cmpl
pop
adcl
cmc
stos
pop
mov
lret
lock
ds
loopne
sub
aad
mov
sub
lock
jl
pop
ret
cmp
lahf
dec
xchg
and
mov
sti
repz
mov
ljmp
xchg
dec
jb
sbb
sub
aaa
cmp
call
in
data16
mul
pop
cmp
movsb
inc
cmp
pop
int3
adc
jmp
lods
scas
out
lods
test
adc
jb
and
mov
jb
xor
into
sub
mov
adc
mov
sti
push
mov
fld
iret
pusha
lcall
mov
push
mov
arpl
xchg
test
shll
and
divb
lret
and
imul
icebp
fdivrs
dec
jb
out
or
aam
push
mov
pop
repnz
xchg
movsl
xlat
or
or
in
hlt
into
xor
pushf
xchg
cmp
loop
adc
add
cmp
add
xchg
mov
addr16
xchg
addr16
testl
movsb
mov
cmp
pop
xor
scas
or
pop
sbb
jmp
lds
cltd
lret
popa
pop
in
cwtl
cs
repnz
push
imul
test
mov
push
and
fwait
or
pop
ficompl
mov
lret
out
pop
inc
add
imul
stos
lock
enter
or
mov
jb
clc
and
inc
idivl
mov
pop
nop
das
pop
jp
xchg
mov
lret
xor
cmp
ja
js
bound
jmp
test
or
sbb
jno
push
mov
cmpsl
ljmp
decb
push
sub
mov
fistps
add
cld
push
in
pop
add
insb
xchg
add
out
cmp
aad
or
or
int3
xor
movl
mov
cmp
fstp
ljmp
mov
mov
gs
or
stc
popa
ret
test
mov
push
gs
cltd
movsb
xchg
mov
fwait
mov
mov
mov
mov
paddsb
jbe
fldl
jbe
adc
fwait
pop
adc
movsl
mov
push
gs
stc
xchg
dec
cmp
movsb
hlt
lcall
fildl
mov
lahf
out
ja
std
mov
push
dec
dec
or
mov
mov
test
shll
out
adc
pop
jb
in
add
test
mov
testl
adc
jge
cs
je
psubd
mov
pushf
or
sbb
ja
pop
lcall
or
push
push
jmp
cmp
bound
xchg
xor
sub
mov
out
xchg
mov
xor
mov
jmp
pop
push
xlat
out
pop
mov
in
or
subl
cmc
sbb
nop
push
lock
sub
mov
fprem1
sub
jmp
jne
in
mov
iret
std
js
cli
in
fldenv
aad
jo
cli
sahf
sbb
mov
xor
jmp
xchg
dec
cmp
dec
push
jl
jp
mov
cld
xchg
or
clc
scas
or
cmp
sti
cmp
mov
adc
out
int3
es
xchg
sti
stos
jns
inc
in
ljmp
addr16
jp
les
je
push
outsb
pop
loope
lcall
push
sub
leave
out
shrl
shrl
stos
mov
inc
add
adc
push
or
mov
xchg
aas
enter
inc
jbe
sbb
dec
ret
pop
ret
fistl
xchg
fidivrl
int3
shl
mov
mov
sub
movl
and
sub
jbe
movsb
push
mov
lret
repz
ss
push
push
loope
insl
push
call
jge
mov
adc
xlat
out
jnp
cmpsb
in
jb
insb
mov
cli
shrb
mov
out
mov
data16
stos
sbb
ret
psubsw
jns
adc
jp
int3
or
xchg
stos
mov
mov
hlt
cld
popa
std
push
dec
sbb
mov
sbb
add
dec
xor
sbb
cli
enter
test
ja
insb
je
or
dec
pushf
sub
dec
xor
or
xor
movsl
cmpb
xlat
adc
pop
sbb
sar
rcrb
popa
inc
cmp
addr16
mov
in
inc
mov
repnz
mov
jbe
subl
jmp
ret
dec
push
mov
pushl
lods
imul
push
jg
mov
xchg
int
test
sub
pop
call
push
and
inc
dec
cli
jecxz
sti
push
jmp
ja
inc
mov
push
xor
xchg
sbb
cmc
mov
adc
addr16
xchg
mov
push
pop
test
cmpsb
adc
xor
enter
movsb
mov
cmpsl
push
cld
push
cmc
ja
mov
cmp
imul
push
xchg
aaa
xor
jecxz
mov
sbb
sbb
or
jbe
dec
mov
sbb
jne
das
ds
sti
in
or
fsubr
xchg
jp
adc
cmpsb
in
mov
or
ja
outsl
movsb
negb
inc
jno
mov
mov
lds
lods
xchg
jb
in
jecxz
push
xchg
int
clc
imulb
or
lret
or
pop
or
ss
lret
cmp
aad
stos
pop
pop
cmc
cmpsb
test
aas
adc
clc
inc
add
aaa
jg
in
and
test
cmp
shrl
scas
and
fidivs
xorb
cmc
mov
cmp
inc
loopne
push
fsubrs
jg
ja
mov
adc
dec
mov
mov
xchg
add
fldcw
adc
popa
repnz
mov
stos
lcall
roll
sub
pop
sahf
jp
jne
lahf
decl
jae
sbb
hlt
insl
mov
or
enter
and
cli
pop
xchg
dec
inc
outsl
pushf
push
push
js
and
into
sbb
dec
iret
or
cli
dec
mov
xor
test
daa
cmp
enter
xor
dec
jecxz
js
lods
pop
dec
mov
dec
in
xchg
divb
sub
pop
pop
mov
sbb
xor
sahf
loope
mov
mov
push
mov
rorb
dec
pop
lret
lds
addl
dec
mul
xchg
in
nop
mov
imul
adc
mov
test
pop
leave
shl
push
sahf
repz
sbb
add
outsb
pusha
ja
inc
jno
pop
jb
sahf
std
lcall
ds
jecxz
dec
xchg
adc
sub
shll
ror
adc
adc
jno
pop
in
sub
pushf
mov
imulb
lea
inc
shl
lret
mov
jl
leave
in
js
mov
gs
dec
sbb
push
imul
and
rolb
movsb
xchg
sti
insl
sub
in
faddl
stc
xor
mov
lahf
cmp
addr16
mov
enter
je
adc
add
jmp
jno
mov
stos
cmp
mov
sub
fdivrs
cwtl
inc
dec
jl
data16
and
push
sub
in
in
int
in
ja
pop
jbe
mov
lret
push
xchg
jno
in
fwait
xchg
stc
jns
xor
jg
xchg
mov
test
mov
inc
sub
fcmovbe
push
nop
inc
cs
lods
pop
adc
fadds
scas
jns
and
xor
arpl
sub
inc
pushf
pop
jmp
xor
push
jmp
cld
cmc
adc
popa
cmc
ret
xchg
push
cmp
in
mov
push
cmp
add
jb
sub
leave
je
or
repnz
mov
mov
jecxz
pop
daa
xchg
rcll
jmp
or
xchg
mov
fistps
or
fwait
sub
push
negb
jb
pusha
arpl
pop
jnp
jge
loopne
popf
sub
xor
mov
shlb
pop
es
dec
and
push
push
mov
mov
data16
stos
clc
pusha
dec
lcall
les
push
addr16
xlat
jl
fidivrs
dec
add
aad
leave
in
mov
test
mov
xor
loopne
mov
cmpsb
push
lods
mov
sub
xchg
clc
ds
xchg
nop
aad
add
je
test
adc
push
call
inc
or
ja
js
xchg
mov
push
mov
call
aad
fmuls
in
repnz
dec
mov
mov
ljmp
cmpsl
xchg
cmpsb
movsb
std
mov
ret
daa
popl
pop
stc
mov
pusha
inc
inc
mov
cmp
ret
dec
and
lahf
add
rclb
lods
xor
mov
aas
xchg
xor
cltd
aad
sbb
inc
imul
or
push
jmp
adc
pop
sbb
push
xchg
cmp
cmpsb
push
fwait
scas
ds
je
imul
and
add
xchg
jmp
inc
push
js
icebp
dec
mov
js
sub
jb
inc
xchg
lds
inc
cmp
and
pop
mov
xor
mov
push
mov
xchg
mov
js
mov
loope
mov
dec
xlat
push
jecxz
rorb
jle
leave
dec
js
stos
idivb
or
data16
fildll
push
jmp
mov
dec
in
test
mov
or
jmp
inc
in
sbb
mov
in
ljmp
lcall
add
ror
loope
inc
cmpsb
int
pop
movsl
lret
sbb
mov
mov
imul
xor
in
add
insl
out
in
xchg
repnz
dec
mov
divl
mov
xchg
roll
out
data16
mov
pop
pop
imul
jmp
mov
cmp
scas
das
mov
push
dec
aad
in
mov
pop
jge
push
pop
test
mov
int3
xor
sbb
sub
call
or
push
add
push
mov
jmp
in
lds
lods
out
pop
mov
cmpsl
pop
jae
in
movsl
xchg
repnz
mulb
testb
mov
cmp
ja
push
repz
jno
stc
pop
jbe
adc
mov
arpl
outsb
shrl
enter
fistps
jae
pop
test
sti
pop
lret
pop
cmpb
jmp
pop
rclb
dec
xchg
jnp
int
push
mov
scas
jp
jp
cli
jmp
mov
ja
sub
xlat
jp
mov
jle
jge
out
jbe
mov
stos
sbb
xchg
aaa
test
xchg
cmp
jns
out
loop
mov
jecxz
pushf
addr16
ja
and
xchg
fisttpl
popf
dec
mov
jmp
lret
xor
ficompl
sbb
and
pop
mov
lret
xor
in
mov
fldt
scas
lds
pop
rorb
jp
mov
dec
sarl
ffree
insb
movsl
mov
cmpsl
push
add
fidivs
sti
subb
cmc
cmp
movsb
in
in
add
call
push
aas
adc
add
cmc
movsb
and
pop
je
adc
in
imull
mov
les
jno
nop
cmpsl
je
push
jbe
lcall
or
mov
adc
mov
push
les
xchg
cld
int3
xchg
push
insb
push
mov
mov
dec
lcall
dec
or
cld
or
scas
jg
cmp
cmp
dec
dec
push
mov
fwait
mov
pop
scas
out
cli
icebp
shl
mov
push
sbb
xor
repz
jb
cwtl
sahf
jp
cmp
pop
jmp
add
mov
jo
cwtl
push
inc
je
jp
out
mov
or
call
imul
addl
push
rolb
mov
aas
sahf
add
aas
sub
jg
push
iret
jno
fildl
je
cmpsl
push
mov
ret
outsl
xor
cli
mov
mov
ffreep
push
adc
test
es
stos
mov
pop
ret
jg
iret
mov
mov
pop
cmc
addr16
inc
gs
lret
pop
loop
or
jmp
pop
pop
insl
imul
pop
jo
and
add
jns
or
leave
cld
pop
out
cmp
lret
bound
stc
fucomp
dec
jmp
repz
leave
ja
rcll
cli
or
lret
push
arpl
cld
mov
mov
jecxz
mov
popa
lret
inc
jp
adc
in
dec
cmpsl
cmpsl
dec
repz
pop
rcr
repnz
rcr
out
mulb
dec
popaw
test
mov
add
jbe
shll
or
push
pop
inc
add
pop
ror
je
jbe
les
inc
fcoml
fidivrl
xchg
stos
jb
aam
mov
mov
lcall
inc
cli
lcall
idivl
clc
cmp
mov
insb
or
xor
std
cmp
ljmp
inc
xor
xrelease
mov
and
pop
enter
and
int
mov
fbstp
mov
pop
inc
pusha
mov
sbb
negl
push
mov
call
fcomip
mov
ljmp
mov
adc
data16
sbb
push
faddl
cli
jo
adc
hlt
xchg
or
sub
shll
ja
xchg
sbb
xlat
call
inc
popf
aas
cltd
sub
sti
leave
movsb
xor
push
dec
negb
sti
push
test
jmp
or
dec
sti
das
inc
jle
dec
xor
mov
lcall
aad
repz
push
or
jmp
mov
out
dec
xchg
mov
cmp
cmp
sub
lret
mov
arpl
pop
out
enter
nop
mov
sbb
push
jge
pop
xchg
mov
dec
xchg
jg
xor
cwtl
sti
inc
ljmp
and
pop
rorl
shrb
xchg
pushf
inc
adc
jmp
fmull
add
mov
cmp
push
push
lahf
push
je
test
dec
jg
mov
jge
inc
mov
mov
test
add
aas
sahf
sbb
ret
adc
pop
outsb
and
out
push
or
daa
xchg
ja
repnz
negl
push
pop
je
outsl
jbe
lret
movsb
dec
xchg
mov
das
in
loope
es
ja
push
jge
dec
sbb
mov
aaa
rcll
jl
dec
mov
aad
or
mov
lret
xchg
cld
lods
xchg
imul
jg
sti
jbe
add
sbb
repz
gs
jns
call
mov
aad
mov
jg
cmpsb
imul
outsb
dec
xor
push
xchg
and
movsb
out
test
push
mov
sbb
push
sahf
out
pop
pop
orl
sbb
fisttps
lods
push
pop
push
sarl
inc
aam
les
fmul
insb
lock
inc
leave
int
test
cld
pop
std
lods
add
pushf
and
leave
jecxz
sbb
movsl
push
test
fists
jne
inc
in
cs
adc
cmp
sbb
div
fwait
xor
je
sub
jb
mov
hlt
in
xlat
repz
aaa
int3
nop
jns
dec
jnp
mov
pushf
dec
je
xor
aas
lahf
jns
inc
call
mov
outsb
xchg
push
sahf
jp
les
sahf
and
outsl
test
cmp
ja
and
lods
fucomip
jb
scas
and
sti
pop
xor
imul
inc
xor
sbb
push
sub
xchg
dec
xor
or
ss
mov
sub
or
ret
movsl
mov
movsb
dec
pop
push
test
dec
cmpsb
push
adc
mov
daa
js
out
loopne
mov
ljmp
adcl
arpl
jo
mov
cmp
insl
fistpll
iret
ret
add
push
push
fistpl
repz
cwtl
pop
in
aam
xor
xor
mov
in
dec
in
test
adc
aad
cmp
push
mov
mov
out
push
je
ljmp
imul
mov
jmp
ret
mov
cmp
pop
rcrl
and
icebp
popf
cld
cmp
adc
ret
cmc
test
shlb
divl
out
aam
sarb
or
jo
fsts
data16
fidivs
pop
jns
dec
jl
inc
out
jns
clc
cmp
imul
pop
ret
jle
testw
dec
dec
xchg
mov
pop
daa
ret
aaa
sub
lods
int
xchg
subl
test
shll
pop
dec
and
cmp
lret
mov
shll
pop
in
in
sub
jae
add
popa
xchg
lahf
repnz
jecxz
movsl
and
or
pusha
fistps
sti
push
cmpsb
andb
jmp
aam
andl
add
dec
ja
adc
xchg
push
aas
in
enter
mov
xor
das
jns
mov
jl
jp
sahf
aas
jno
push
push
dec
sarb
pop
movl
inc
stos
xchg
adc
mov
jge
mov
mov
sbb
fs
roll
push
jmp
or
mov
and
pop
or
or
inc
mov
in
dec
or
and
xlat
in
add
jmp
movsb
push
mov
jb
or
and
inc
mov
mov
dec
pop
ja
dec
jp
cld
pop
adc
cmc
mov
cwtl
aad
jns
mov
jns
imul
fwait
cmp
jecxz
and
and
mov
cli
mov
push
add
inc
xlat
pop
jnp
xchg
push
fucomp
push
outsb
mov
pop
imul
or
pop
das
and
loopne
inc
nop
add
mov
push
jg
jl
sub
push
or
test
xchg
jo
aas
fsubrl
repz
shlb
js
adc
cmp
in
sub
mov
mov
pop
scas
hlt
mov
out
scas
testl
cmpb
xchg
cmp
rcr
rcr
add
pushf
adc
or
adcl
rorl
xor
and
or
and
cmp
xor
add
lds
jmp
js
pop
sub
push
add
sub
testl
sbb
jg
enter
mov
filds
sti
mov
sti
in
movsb
pop
pop
dec
lea
loopne
sub
stos
addr16
xchg
cmp
addr16
dec
pop
idivb
fnstcw
pop
insb
jecxz
pop
pop
push
cmp
sub
ja
sub
repnz
xlat
push
add
jp
ljmp
mov
cmc
inc
pop
push
push
sbb
iret
sbb
mov
into
scas
push
pop
lcall
dec
cmp
enter
inc
or
cs
ret
push
loopne
aas
sbb
testl
mov
or
adcb
and
mov
stos
sub
clc
jno
out
lods
rorl
xchg
loop
xor
and
inc
inc
arpl
lret
movsl
and
add
outsb
xchg
xor
jp
jle
imul
mov
pop
ja
enter
cwtl
and
inc
dec
imul
shlb
insl
mov
shlb
or
roll
imul
cmpsb
jo
mov
mov
xor
frstor
enter
clc
push
popf
out
lret
notb
mov
ja
mov
es
fnstenv
out
sub
pusha
inc
rorl
cmp
push
lcall
rorl
stos
mov
ret
mov
movsb
adc
notb
xchg
pop
movsb
pop
adc
jno
dec
fcomps
mov
arpl
mov
sbb
cmp
in
inc
pop
pop
lds
fucom
xor
and
xlat
push
or
sar
pop
mov
mov
into
mov
lods
ss
dec
jecxz
bound
pop
xchg
subl
jne
mov
mov
cmpsl
jmp
or
mov
xchg
cmp
sti
js
mov
sub
outsb
xchg
fcmove
sub
xchg
or
add
aad
ljmp
xor
pop
divl
imul
mov
int3
push
test
insl
mov
idivl
and
fldt
mov
pop
daa
cmp
clc
jecxz
xchg
add
orl
andb
pop
dec
pop
xchg
sbb
aaa
mov
fidivrl
inc
mov
rorl
mov
mov
out
sarl
inc
fstpl
cmp
xlat
scas
adcb
add
cmp
fsubr
cmp
repz
sub
mov
lcall
mov
mov
loop
xor
ljmp
shl
add
fisubs
das
test
aas
mov
pop
xchg
repnz
xor
dec
or
out
sub
aas
jge
negb
mov
popf
adc
ss
jecxz
inc
sbb
cmp
std
pop
dec
outsb
inc
jg
cli
lods
loope
fadds
jns
add
fildl
dec
mov
jbe
bound
xchg
ja
push
sub
pop
add
imul
mov
sti
pop
mov
mov
push
adcl
and
jbe
jp
rorl
frstor
fisubrs
ss
mov
pushf
sti
imul
inc
inc
jbe
dec
dec
push
push
gs
movsb
call
mov
jnp
dec
int
mov
cmp
xor
dec
sbb
mov
xor
repz
cmp
xor
pusha
jp
dec
int3
cmp
push
mov
stos
mov
out
lcall
fmul
push
movsl
fdivrl
cmpsb
int
xor
fs
adc
repz
mov
mov
fdivrl
jp
mov
in
fcmovnbe
push
inc
or
push
dec
dec
mov
cli
cmpsb
sbb
mov
imulb
xchg
push
outsl
mov
mov
xchg
pop
es
jo
dec
pop
rorl
inc
adc
mov
divb
ja
shl
lret
pop
dec
out
cmp
pop
flds
insl
hlt
or
push
sbb
cmpsl
mov
mov
lock
xor
mulb
pusha
mov
dec
cld
call
movsb
sbb
xchg
cmp
jbe
pop
in
or
or
sub
dec
mov
pop
pop
subb
jnp
and
cld
cli
arpl
sbb
or
out
bound
push
cmpsl
js
or
xchg
xchg
mov
add
cwtl
sub
stc
cmp
xchg
xchg
xchg
fucom
sti
call
ss
push
sbb
jmp
mov
push
jmp
sub
lret
imul
repz
sub
mov
sub
pop
mov
jb
jl
jno
mov
pop
xchg
push
jae
data16
jmp
mov
fcompl
out
push
pusha
sub
mov
push
cli
pop
aam
loop
dec
movsl
test
leave
cld
andps
mov
adc
lcallw
push
in
or
in
sub
push
imul
adc
fcompl
jmp
pop
stc
imul
out
imul
mov
mov
jne
xor
jno
ret
push
jp
imul
imul
jp
fwait
insb
mov
or
imul
fcmovne
cmp
iret
ja
imul
sbb
or
jnp
in
inc
dec
mov
inc
call
cmp
and
stos
repz
imulb
xchg
jae
ja
cmp
adc
popf
xor
repnz
stc
adc
fnstcw
or
sbb
sbb
sbb
dec
jns
cmp
sub
loop
jbe
jmp
jbe
jle
andl
movb
add
dec
push
into
push
jp
pop
mov
arpl
push
inc
pop
lcall
mov
dec
out
jmp
aas
bound
or
shrl
inc
cmp
cmp
fs
cmp
add
das
mov
adc
fdiv
out
cli
mov
mov
push
iret
mov
sbb
imul
inc
outsb
inc
jns
mov
add
nop
xchg
inc
mov
inc
cmp
sbb
mov
pop
add
lret
mov
mov
push
dec
dec
push
mov
das
pop
mov
lock
push
mov
mov
ljmp
jbe
and
pop
mov
stc
jecxz
xlat
push
pop
or
push
ret
stos
mov
stc
out
mov
in
dec
cmp
adc
outsb
inc
insl
or
pop
int3
aaa
sub
jecxz
cmp
out
xchg
popa
in
jno
cmpsb
jp
daa
cltd
sbb
pop
cmp
rcr
leave
mov
cmp
mov
pop
shl
xlat
je
xor
test
fcmovb
inc
inc
roll
pop
mov
divl
leave
sub
lcall
sti
fistpl
mov
in
inc
pop
cmp
stc
pop
dec
in
imul
test
pushf
dec
daa
repnz
inc
stc
lods
and
lcall
mov
pop
fwait
enter
push
imul
ffreep
enter
lret
mov
jg
repz
fimuls
lock
inc
mov
out
stc
push
loopne
imul
lret
push
xchg
jns
outsb
cmc
xchg
push
pop
push
or
lahf
dec
jp
enter
filds
mov
iret
xor
jecxz
call
aad
leave
insl
call
xchg
xchg
lock
decb
mov
jg
out
push
xchg
stc
jns
not
sbb
je
mov
mov
fs
dec
jb
out
push
or
loope
bound
xchg
jecxz
mov
inc
repnz
test
sbb
idivb
insb
inc
daa
cmpsb
jecxz
fimuls
cmp
mov
mov
arpl
push
lds
pop
xor
loop
cli
xchg
push
cli
aam
jno
not
mov
xchg
sbb
movsb
fcmovb
mov
pop
mov
jbe
cltd
sbb
iret
lcall
dec
jb
dec
and
sbb
dec
in
inc
ror
mov
aam
int
rcrl
addr16
xchg
inc
call
insl
add
sbb
jo
or
push
jmp
xor
sub
pop
mov
ja
pop
mov
or
clc
loope
xchg
add
mov
stos
cmp
add
pop
mov
dec
insb
adcb
in
in
lahf
inc
sub
inc
xchg
mov
clc
stos
testb
or
jge
push
or
movsl
mov
mov
sub
mov
test
cmpsl
shrb
inc
mov
xchg
jne
adcl
in
cmpsl
or
aam
mov
lds
dec
cs
adc
push
ja
ret
mov
jbe
xchg
mov
sbbl
aam
cmp
mov
adc
movsb
inc
test
scas
hlt
lahf
adc
adc
xor
adc
add
fcomps
sbb
fisubrl
mov
cmp
adc
jecxz
pop
adc
fwait
cmp
shll
test
cmp
add
cmpsb
stos
jns
pop
icebp
jecxz
pop
mov
hlt
in
out
xor
mov
ficoml
cmp
jo
lret
sbb
add
push
mov
pop
or
and
sub
sub
cmp
inc
jo
pop
cmp
or
movsl
or
push
ja
add
push
or
push
loope
mov
in
or
push
inc
les
mov
jbe
inc
ja
iret
cmc
aam
ja
movsb
arpl
outsb
stos
jbe
add
inc
imul
fwait
clc
jb
cmp
rcrl
xchg
or
mov
jb
jns
repnz
mov
ss
imul
mov
ss
jne
sbb
int3
aas
or
aaa
outsl
stc
jbe
cmp
and
outsl
sub
roll
out
cmp
and
xor
push
xor
movsb
lcall
lock
push
mov
push
cli
add
mov
push
jns
negb
xor
cmpsl
add
add
pop
dec
mov
and
outsb
pop
fwait
dec
out
mov
xor
pop
mov
std
repnz
pop
xchg
int3
jp
mov
mov
xchg
or
xor
outsl
clc
in
pop
xor
hlt
rclb
cmc
jle
sbb
lret
imul
sbb
dec
frstor
es
hlt
stc
mov
fidivs
ja
mov
sub
add
jno
ret
in
mov
pop
add
cmp
lahf
imul
cli
cmpsl
xor
dec
mov
int
cmpsl
lret
dec
push
aad
mov
cmpsb
sbb
adc
mov
imulb
fcomps
pop
jecxz
mov
sbb
lcall
ljmp
mov
dec
push
jp
push
xchg
xchg
jbe
repz
pop
inc
dec
xor
pop
cmp
arpl
lods
aaa
mov
repz
les
push
out
loop
sbb
xchg
mov
inc
add
sub
add
xchg
or
sub
repz
pop
pop
movsb
cmp
dec
adc
jg
pop
arpl
ret
nop
mov
push
lds
lret
jecxz
mov
jle
movb
into
mov
xor
push
jecxz
inc
and
xchg
xchg
shr
xlat
jbe
xor
divl
aas
inc
jbe
mov
popa
int
push
in
xchg
pop
push
dec
xchg
aad
mov
flds
ja
enter
xchg
dec
or
xor
fwait
jns
cmpb
mov
sti
insb
xchg
jp
jb
push
jp
ss
jno
add
outsl
jae
cmp
push
cmp
gs
stc
js
push
sub
inc
jecxz
cmp
insb
cmp
pop
mov
mov
in
testb
repz
cmc
mov
stc
fadds
notb
pop
sbb
cmp
cmc
xor
sub
push
hlt
in
xchg
and
cmc
enter
jno
cmp
xlat
movsb
mov
cmp
int3
jns
cmp
xor
jb
push
cmp
mov
jne
ja
cmpsl
mov
aam
pop
or
and
ret
jg
lock
mul
jl
mov
lret
sbb
or
aaa
aaa
lods
das
xchg
mov
bnd
call
adcb
aaa
sbb
bound
jg
xor
mov
xchg
add
cli
dec
lock
sbb
leave
jg
fstl
sbb
jae
push
aas
add
pop
or
xchg
jns
je
xchg
jae
sbb
fcmovbe
dec
dec
mov
mov
testl
and
pop
add
out
das
jecxz
je
movsb
cli
sub
or
jecxz
mov
dec
jmp
add
cmp
push
dec
xor
enter
jmp
scas
insl
dec
mov
mov
lahf
sbb
push
insl
push
cmp
jmp
xor
and
imul
movsb
std
ret
pop
jp
movsb
or
fwait
mov
inc
mull
xchg
dec
jecxz
jp
enter
fwait
mov
popa
shlb
mov
lock
add
sti
xlat
adc
mov
insb
icebp
mov
pop
imul
pop
imul
push
dec
or
out
xor
and
movl
push
dec
lcall
negl
stc
cmovs
ja
int3
inc
or
adc
xchg
loopne
dec
or
imul
lock
xlat
movsb
or
cmp
add
jno
pop
cmp
inc
out
jns
push
imull
mov
push
fcomps
cmpsl
jns
in
cwtl
or
mov
andb
jle
loopne
push
pop
int
mov
movsl
lcall
fsubp
loop
cmp
insb
ja
mov
xchg
jecxz
xchg
call
mov
push
out
scas
mov
lea
mov
fbstp
es
or
xor
out
or
pop
mov
mov
cmp
pop
pop
aaa
mov
test
or
cmp
mov
imul
xchg
inc
in
enter
bound
xor
add
sbb
jl
or
aam
add
mov
imul
dec
xchg
xchg
inc
imul
xchg
cmp
push
int3
adc
inc
jecxz
jp
test
popf
xor
jle
and
mov
pop
inc
cld
arpl
and
jp
push
addb
jp
dec
ret
or
aaa
ja
pop
mov
fwait
cmp
inc
movl
dec
mov
xchg
cmp
stc
in
lcall
push
xor
sbb
test
push
cmpsb
imul
adc
cmp
jae
cmp
xchg
enter
fildl
sbb
adc
aaa
mov
mov
cli
enter
dec
mov
xchg
daa
jns
stc
dec
pop
pop
mov
movsl
add
in
pop
fistl
jge
sti
jae
adc
scas
loopne
pop
shl
xor
mov
push
jne
adc
jmp
mov
push
cs
mov
mov
mov
push
cmp
jo
dec
jecxz
and
xchg
and
js
lods
adc
shr
fs
xor
adcl
cmp
push
xchg
mov
cmc
xchg
addr16
mov
xor
or
mov
addr16
and
push
enter
jne
mov
dec
fstpt
mov
adc
jl
dec
scas
lret
mov
pop
jne
cmp
leave
pop
sahf
lea
cmc
adc
xchg
push
aas
cmp
adc
dec
fwait
rolb
ret
pop
mov
sahf
mov
inc
and
xchg
js
test
lea
std
pop
dec
pop
sub
ficomps
fisubs
pop
and
dec
jns
adc
dec
fstp
push
sbb
fdivrs
lahf
scas
push
clc
sbb
inc
inc
cmp
mov
mov
push
test
push
ds
cli
fistl
mov
and
push
sbb
imul
in
mov
xchg
mov
push
jbe
adc
bound
dec
iret
push
jge
popf
mov
and
out
rorb
jp
xchg
scas
aaa
inc
test
mov
stc
cmpsb
outsl
mov
or
xchg
push
dec
sahf
add
fidivrl
repz
mov
add
rcll
idiv
dec
pop
sbbl
push
outsl
lock
cmp
push
fisttpll
mov
cli
movsb
mov
adc
fstpl
stos
sti
pushf
iret
push
pusha
jno
ljmp
mov
fs
cmp
xorl
inc
orl
pop
pop
mov
jbe
imul
cmpb
add
inc
into
loopne
mov
mov
add
ja
gs
cld
xlat
aad
mov
cmpsb
nop
or
outsl
or
imull
fildll
les
imul
imul
mov
or
pusha
xchg
jbe
xor
and
ss
test
ja
repnz
subb
dec
je
shrl
fcoml
enter
adc
mov
leave
jns
xchg
dec
in
jb
pop
and
pop
arpl
or
dec
lcall
ss
sti
orb
inc
xchg
mov
dec
adc
push
push
jl
push
mov
in
sti
and
dec
adc
lret
int3
dec
out
sub
out
pop
cmp
lret
stos
adc
into
pop
popf
dec
enter
dec
outsl
stos
gs
jecxz
push
movsl
inc
in
jns
cmp
mov
subb
movl
lods
mov
jne
mov
jne
stos
test
inc
call
inc
roll
cmp
lcall
test
sbb
adc
call
or
dec
mov
jecxz
int
xor
fwait
lahf
movsb
dec
pop
fmul
ja
xor
sbb
or
lret
aas
imul
out
jo
jo
loop
adc
leave
or
jp
cmp
and
xlat
inc
insb
push
cmp
xlat
mov
jo
es
push
jns
testb
pop
sbb
dec
daa
ret
shr
inc
xchg
in
sbb
xchg
xlat
ss
gs
test
add
xor
mov
mov
addr16
pop
cltd
mov
fcmovb
notl
scas
in
int
repz
psrlq
mov
das
out
add
lods
mov
jecxz
dec
adc
ja
or
sbb
aad
dec
adc
push
aaa
test
movsl
xchg
adc
xchg
dec
loop
mov
jp
les
mov
inc
push
nop
mov
mov
jp
in
call
jmp
pop
mov
cmc
fwait
xor
mov
sbb
jb
sub
jb
xchg
test
out
scas
outsb
sti
xchg
sbb
outsb
push
adc
fiaddl
mov
jns
push
jb
cmpsl
out
xchg
ret
jecxz
mov
cmp
in
jb
popa
inc
cli
icebp
cmp
xchg
icebp
mov
icebp
cli
mov
or
pop
clc
leave
push
stos
sbb
sub
pop
pop
sbb
cmp
testb
mov
xchg
jae
mov
jns
mov
sbb
inc
or
call
pop
fcompl
loope
and
addr16
mov
add
pop
xor
sahf
adc
mov
test
addr16
mov
inc
mov
cltd
xchg
adc
jge
test
ja
jecxz
mov
sub
iret
xchg
sahf
mov
xchg
xchg
and
aam
sub
stc
mov
mov
cmpsl
pop
xlat
jp
fdivrl
ja
sti
inc
loop
push
addr16
out
xlat
outsb
mov
mov
dec
xchg
cli
lret
pop
mov
repz
ljmp
jne
rcr
push
sub
push
lcall
fcmovnb
nop
sbb
jns
pop
mov
outsb
inc
jno
jecxz
sbb
out
mov
mov
stc
adc
lret
mov
mov
mov
cltd
nop
push
mov
jle
and
movsb
fcomps
jecxz
test
xor
jecxz
xchg
pusha
loop
push
pop
mov
lret
scas
mov
xor
sub
jecxz
adc
mulb
in
cmp
inc
bound
outsb
mov
stc
repnz
dec
push
in
jmp
das
jmp
ficoml
lahf
push
cmpsl
adc
xchg
pop
mov
dec
icebp
xor
fildll
lock
push
xor
xchg
dec
cwtl
or
addr16
cwtl
xchg
sbb
cld
inc
fxch
xor
cmp
push
xchg
or
push
jo
push
xor
adc
jbe
mov
out
push
fldt
in
out
cld
mov
jno
and
aaa
js
push
pop
mov
pop
dec
cmp
push
xchg
mov
icebp
out
xchg
daa
arpl
add
mov
mov
push
mov
test
pop
enter
lret
or
sub
and
mov
pushf
lods
mov
fldcw
data16
jne
ja
pop
repnz
arpl
rcrl
jno
jbe
sub
mov
cmp
je
rcr
lds
cmpsl
jbe
jp
jbe
push
mov
lret
jns
pop
mov
imul
and
ficoml
stos
mov
mov
push
and
adc
cltd
aam
movsl
clc
fimuls
outsl
pop
orb
push
fstpt
pop
mov
or
add
jb
jo
dec
xchg
hlt
mov
pusha
and
mov
bound
fidivl
xchg
pop
sub
push
adc
push
jp
das
cmp
push
mov
xor
xorl
in
push
scas
jmp
adc
clc
mov
jns
leave
xchg
add
mov
cmp
pop
or
inc
lahf
sahf
ja
cmp
aaa
cmc
outsl
test
xchg
cmp
push
jmp
ficompl
push
lret
inc
xchg
xchg
mov
repz
shrb
lock
or
and
loope
pop
divb
out
jnp
pushl
xor
frstor
mov
push
dec
stos
ret
jb
callw
mov
jbe
lcall
mov
mov
aaa
sti
js
mov
pop
shll
lds
jns
or
out
loope
loope
stc
adc
scas
sub
imul
adc
adc
and
dec
stos
xchg
mov
addr16
xor
mov
dec
or
test
cld
cmp
in
rcrb
inc
fidivrl
push
pop
pop
pop
arpl
pop
fdivr
js
leave
push
fldl
sarl
iret
fldenv
std
ficoml
mov
daa
pop
ret
cli
push
insl
mov
addr16
adc
xchg
xchg
nop
jp
outsb
and
sbbb
repnz
stos
enter
fptan
adc
xchg
sub
fimull
push
test
enter
and
xlat
jecxz
cli
sub
rcrb
cmpsl
pop
ss
add
cmpsb
mov
jecxz
in
push
or
movsb
push
adc
es
jns
adc
sbbb
pop
xlat
xorl
pop
sti
data16
cld
enter
xchg
js
cmp
loop
pop
sub
or
pop
ret
cmp
push
mov
inc
add
push
cmp
lahf
mov
sti
add
lret
cmpsb
xchg
cmp
ljmp
mov
and
leave
pop
test
mov
dec
dec
test
mov
xchg
aaa
adc
lock
mov
mov
imul
dec
cmp
cs
or
mov
xchg
dec
push
notl
test
aaa
xchg
clc
mov
ja
dec
iret
aam
mov
push
adc
call
inc
dec
xchg
clc
fidivrs
fucom
xor
ret
pop
aad
jmp
in
adc
imul
jns
je
xchg
sahf
movsl
pop
aas
dec
sahf
jecxz
cli
shl
enter
push
pop
lret
mov
ret
push
sbb
jns
push
cltd
js
imul
test
sbb
es
or
adc
dec
lahf
cmp
sub
inc
fdiv
push
push
test
cmp
cmp
add
mov
leave
fildll
das
cmp
loopne
and
out
test
lret
cmp
adc
jo
xchg
ret
ds
loop
mov
loopne
lahf
sub
fmuls
int
cli
cmpsb
ss
stos
lcall
jecxz
mov
or
pop
dec
cmp
scas
movsb
sub
testl
jecxz
fidivs
jns
es
cld
xlat
int3
cmp
out
in
call
data16
or
loop
adc
cmp
jp
adc
add
outsb
adc
in
aam
mov
frstor
in
fadds
dec
std
popf
xchg
fidivrs
xchg
setl
sub
jbe
ja
jb
ja
or
adc
pop
cmp
jb
fs
mull
pop
cmpb
stos
in
xor
add
gs
repnz
loop
pop
lret
add
inc
xchg
sub
mov
mov
cmp
pop
icebp
jb
rcr
arpl
fwait
inc
sti
je
sbb
jecxz
imulb
clc
and
jns
inc
lds
je
mov
es
aas
mull
xor
dec
popa
add
sub
mov
pushf
in
lods
xchg
push
mov
jns
xorb
sbb
push
push
les
cmpsb
mov
pusha
adc
fsqrt
ja
into
mov
imul
repz
push
jbe
pop
jp
dec
jo
cmc
pop
xor
js
xchg
jns
sub
mov
cmp
xor
or
aas
rol
adc
jno
jbe
jae
xor
mov
mov
pusha
adc
arpl
dec
dec
sub
mov
pusha
enter
loop
xlat
sbb
or
scas
fidivl
mov
gs
lea
jp
xchg
icebp
pop
jp
or
fbld
in
jae
adcb
mov
xor
pop
xchg
xor
loope
stos
push
stc
jbe
sbb
jb
pop
shll
divb
dec
sar
jb
pushf
sbb
xchg
pop
pop
clc
pop
nop
enter
jp
and
mov
mov
jne
arpl
pop
insl
out
das
push
mov
inc
lock
jp
xchg
rcrb
push
aam
int
push
cli
pop
mov
pop
shlb
inc
idiv
mov
cmc
cmp
js
jo
dec
pop
jbe
cwtl
fst
lcall
xor
jb
fs
js
in
and
idivb
std
mov
jns
dec
adc
mov
ja
xor
adc
mulb
xchg
shl
and
adc
xor
cmp
push
fisttpll
push
lret
push
nop
jne
xchg
mull
dec
adc
mov
and
repz
jp
imul
mov
pop
and
jl
sub
lods
int3
test
push
mov
scas
or
add
push
xchg
rclb
adc
mov
aas
xor
push
push
inc
mov
fmul
bnd
mov
push
add
call
push
cmpsl
pop
jo
jns
or
gs
enter
sarl
pop
mov
scas
mov
es
jb
sbb
jbe
inc
loop
enter
mov
push
jecxz
daa
out
stos
lcall
sbb
dec
inc
inc
push
xchg
add
xchg
push
jmp
insb
add
inc
sbb
inc
sub
ja
mov
push
dec
mov
int
or
lods
not
cltd
adc
cli
dec
imul
rcll
mov
jecxz
xor
sub
inc
fnsave
sbb
xor
jns
bound
or
mov
out
mov
out
dec
enter
lds
test
jns
cmp
aaa
aas
xchg
stc
inc
aaa
adc
push
mov
mov
or
or
adc
add
leave
cmpb
ds
jle
jge
or
cs
mov
popa
sbbb
xchg
mov
pop
dec
out
movsl
jb
cmpsl
sub
dec
dec
fwait
dec
or
and
fwait
in
inc
es
push
jecxz
mov
call
rorl
add
pop
stc
inc
mov
sbb
dec
imul
push
xor
inc
lcall
mov
shlb
mov
imul
sti
add
mov
pop
fsubrp
sti
xchg
push
mov
repz
push
shrb
dec
jmp
fldcw
imul
sub
js
jb
jns
jb
stc
cmpsb
jecxz
in
push
cmp
adc
pop
movsb
cltd
mov
jecxz
lcall
push
clc
mov
je
inc
jecxz
mov
inc
mov
adc
mov
jecxz
mov
leave
jg
jge
xor
in
mov
cmp
test
fucomp
jbe
mov
movsb
popa
dec
in
mov
pop
sbb
pop
mov
xchg
cmpsb
test
pop
pop
or
dec
pop
adc
movsl
cmp
mov
testb
mov
mov
xchg
mov
dec
jmp
clc
xchg
leave
push
mov
lds
jp
pop
cmp
sahf
cmp
jae
insb
jbe
push
es
test
mov
out
mov
icebp
xor
stc
movsb
popa
sub
dec
sub
das
xchg
mov
jmp
icebp
xchg
push
imul
mov
insb
push
adc
lods
outsl
adc
out
jns
pop
sbbl
mov
xchg
popf
cli
sbb
jno
cli
pop
mov
push
je
add
ret
mov
rcrb
mov
popa
loopne
fnstcw
mov
xorl
or
mov
jo
aad
jmp
leave
xchg
pop
inc
clc
popa
bound
hlt
pop
dec
mov
add
jns
negl
fs
mov
push
xor
push
xor
pusha
mov
push
arpl
stos
ja
stc
jecxz
lds
insb
repnz
xchg
jo
jge
push
aam
test
inc
cmp
imul
mov
mov
daa
sbb
test
fistps
push
sbb
sub
mov
pop
add
cmpsl
cltd
icebp
loopne
cmp
jmp
jb
fidivrs
dec
pop
ret
adcb
fidivrl
mov
pop
add
add
test
pushl
aas
enter
sbb
push
xor
aam
push
xchg
scas
pop
mov
cmp
add
addr16
and
pop
out
xchg
arpl
lcall
push
xchg
aaa
stos
aaa
pop
iret
cwtl
or
outsl
daa
cmp
insb
inc
popa
ret
fdivs
mov
dec
outsl
mov
push
sti
in
rorb
into
pop
movsb
fwait
pop
jge
mov
mov
dec
jnp
leave
pop
jne
pop
imul
in
fs
movsb
hlt
and
jmp
aaa
mov
lcall
push
xlat
pop
pusha
adc
xor
test
adc
mov
mov
or
jns
negl
stos
xor
mov
divl
movsb
mov
mov
jmp
xor
mov
or
mov
dec
mov
jmp
js
es
mov
dec
xor
pop
hlt
in
mov
xchg
dec
fwait
insb
iret
sbb
sub
sbb
cld
cmp
pop
pusha
jmp
fcoml
mov
mov
xlat
mov
stc
arpl
pusha
cwtl
mov
idivb
jns
je,pt
aas
mov
push
xor
and
stc
test
mov
bound
push
sub
sbb
inc
imul
ljmp
fildll
ja
nop
mov
add
add
rorb
idivb
lods
adc
jecxz
arpl
pop
hlt
or
push
dec
dec
loop
popf
sti
jl
ret
xchg
adc
scas
mov
nop
and
mov
inc
sbb
dec
xor
cmp
xchg
xchg
idiv
jb
push
repz
movsl
test
out
pop
and
icebp
inc
int
int3
out
pop
xor
lock
stc
daa
mov
and
jns
cmp
repz
dec
lock
mov
inc
rcrl
test
inc
clc
cmp
dec
xor
jae
jg
jge
cld
and
or
inc
outsb
add
rcrl
mov
pop
adc
imul
bound
mov
xor
dec
cmpsb
mov
mov
push
fldenv
mov
fwait
push
cmpsb
jbe
lcall
mov
push
add
stos
and
cmp
mov
clc
lods
jae
out
or
xor
sbbb
outsb
sarb
jg
mov
dec
push
or
or
pop
cmpsb
push
cmpl
js
or
cmpb
xchg
sbb
xor
fsubrl
add
jg
je
call
fistps
cmc
and
push
adc
int3
stos
das
adc
pop
repz
dec
push
jecxz
fs
aad
sahf
adc
sub
mov
ljmp
scas
and
sbb
and
cmc
rcrl
sbb
xor
jo
adc
push
add
dec
jmp
ss
or
inc
xor
and
mov
gs
fstp
mov
jp
xchg
cmp
jb
dec
fistps
and
push
inc
int3
add
adc
xchg
stos
rorl
mov
or
dec
dec
mov
movsb
mov
mov
repnz
jns
mov
or
addr16
rorl
pop
pop
xchg
arpl
movsb
sahf
dec
mov
mull
and
ljmp
push
pop
jecxz
ja
jbe
and
mov
jmp
mov
and
adc
iret
pop
or
arpl
les
mov
mov
insl
mov
fadd
gs
jae
out
or
aam
xor
cltd
shlb
arpl
aaa
pusha
jecxz
xchg
insl
dec
sti
pop
ds
jle
push
test
jno
sti
scas
addr16
imul
rorl
repz
push
pop
movsb
and
and
lods
lahf
imul
xlat
xchg
mov
mov
stc
xchg
dec
fadd
data16
push
repnz
out
xor
xchg
call
jp
jmp
ljmp
movb
fisttpll
repnz
mov
lods
xor
mov
cld
idiv
pop
jnp
pop
aad
push
inc
cmp
inc
add
popa
mov
adc
mov
sbb
imul
int
scas
ret
aad
shr
icebp
xchg
ds
sub
test
and
lahf
or
out
pop
cmpsb
out
mov
imul
jno
mov
int
pusha
mov
xor
lods
int
mov
and
movb
adc
decb
in
in
mov
loop
sti
and
cld
jb
inc
jp
mov
dec
fnsave
les
push
popf
lock
dec
loopne
daa
dec
pushf
fmull
enter
test
xor
xor
push
mov
bound
adc
out
sbb
inc
dec
popf
fwait
imul
jcxz
xorb
pop
add
daa
adc
inc
inc
popf
enter
mov
jmp
stc
fwait
push
dec
lret
shll
arpl
lea
add
mov
mov
in
or
outsb
xor
jb
dec
lock
xlat
stc
leave
mov
or
call
cmpb
jno
mov
or
mov
insl
xchg
ljmp
lods
jp
dec
mov
dec
ljmp
lcall
cmp
and
daa
mov
inc
sbb
test
add
test
jns
cli
mov
test
mov
and
mov
add
shll
jno
and
scas
xlat
test
mov
cltd
and
cmp
adcb
iret
mov
lods
cpuid
push
push
mov
jg
jp
cmp
jne
int3
or
aaa
and
fwait
sti
arpl
aaa
mov
mov
aas
dec
sub
insl
imul
mov
inc
dec
mov
mov
jbe
aas
rorb
bound
filds
lds
clc
out
cmp
ja
les
dec
gs
jbe
loope
inc
jge
jno
push
or
cld
loop
js
rcrl
push
xchg
faddl
dec
jb
and
mov
xchg
jno
fisttpl
dec
cli
mov
adc
xor
das
jbe
das
push
cmpsb
cltd
mov
mov
es
mov
sub
shll
in
pop
mov
call
mov
mov
and
popa
ret
jle
int3
sbb
jbe
xchg
cmpsl
scas
cmp
leave
inc
sub
int3
pop
lods
mov
sti
and
push
mov
sub
mov
add
fs
fisubs
jns
mov
mov
push
pop
cmp
stc
ds
pop
lock
and
ds
sub
or
mov
xlat
dec
dec
enter
mov
dec
dec
mov
call
mov
test
jbe
arpl
vxorps
addr16
scas
jecxz
imul
push
lea
cmp
lahf
int3
imulb
or
fiadds
dec
fisubrl
mov
stos
dec
ja
lea
mov
dec
out
mov
mov
ret
cmp
scas
dec
xorl
cmp
scas
mov
lahf
loop
mov
in
int
pop
sbb
inc
fsubl
sbb
in
xlat
inc
int3
scas
outsl
sub
dec
fstps
mov
mov
sub
ljmp
push
pop
das
addr16
into
nop
push
push
addr16
adc
mov
push
jo
xchg
pop
inc
enter
sbb
popa
notb
push
pop
push
pop
xchg
jmp
push
nop
std
sub
inc
adc
push
ss
cmp
fdivrl
or
cmpb
push
pop
xor
push
cmp
cmp
cmp
adc
fstps
jge
xor
xchg
loop
xor
sub
mov
pop
in
add
outsb
dec
pop
jg
stc
in
loop
sbb
jns
es
jg
std
outsb
push
mov
pop
es
out
cs
jae
xor
sub
sti
jecxz
pop
mov
xchg
jns
aad
ds
pop
jp
sbb
cmp
idivl
mov
jecxz
test
cld
pop
mov
inc
ret
outsb
or
sahf
sbb
adc
adc
ret
int3
or
pop
cmp
rorl
je
xlat
lea
jmp
sub
cmp
xchg
push
mov
dec
xorl
out
pop
mov
fucomi
adc
sub
fstpt
add
inc
int3
fdivs
das
push
push
mov
lea
mov
sbb
repnz
cmpsl
mov
mov
testl
sub
add
push
lods
mov
mov
loop
and
adc
push
mov
xor
or
inc
lcall
adc
fisubl
add
or
cmp
push
mov
adc
mov
inc
jecxz
mov
mov
mov
adc
pushf
xchg
out
pop
mov
adc
dec
cmc
inc
scas
and
fwait
mov
movsb
lcall
mov
xor
jbe
push
mov
mov
mov
mov
iret
push
cli
insl
iret
es
push
xor
and
jb
and
lds
sarb
mov
dec
mov
mov
xor
add
js
lock
mov
dec
inc
jecxz
cmp
test
mov
cli
iret
mov
jecxz
adc
arpl
mov
popl
cmp
cmp
cmc
cld
mov
mov
in
mov
into
or
mov
pop
dec
shrb
pop
aaa
and
adc
lods
cmp
cmc
mov
orb
cld
jmp
cmp
xlat
scas
lahf
or
stos
fcoml
sub
mulb
shll
test
lret
cmpsb
fstpt
loop
jno
mov
xlat
cmp
mov
movsb
push
je
lods
popf
faddl
xor
mov
inc
inc
mov
xor
jbe
jns
imul
stc
stc
adc
ljmp
mov
push
adc
fistps
or
xorb
movsl
lea
mov
xchg
mov
mov
std
out
testb
inc
jp
enter
sti
daa
gs
jecxz,pn
mov
in
xlat
mov
in
add
leave
xor
jl
push
shl
mov
mov
loopne
ret
psllw
add
daa
mov
and
push
fidivrs
leave
mull
xchg
mov
xchg
inc
xchg
xor
xlat
dec
push
dec
cmp
stos
jne
js
cld
jge
or
cmpsl
repz
popa
popa
jae
jp
fwait
out
int
inc
and
outsb
adc
pop
mov
mov
mov
ljmp
xchg
xor
mov
add
mov
imul
or
ret
mov
cmpsb
push
jp
dec
pushf
roll
push
push
pop
mov
imul
mov
jp
insb
push
xchg
xchg
clc
adc
xchg
insl
dec
and
sbb
cmp
inc
inc
pop
outsl
xchg
mov
inc
mov
ss
mull
enter
jo
daa
dec
rcr
mov
mov
or
aas
and
push
fistpl
pop
xlat
shl
rorl
sti
jno
out
scas
mov
or
pop
dec
mov
daa
dec
loop
xor
sub
mov
fldpi
out
lods
aad
pop
cmpsl
scas
mov
xor
pop
pushf
fisubrl
xchg
pop
js
dec
ja
jns
je
js
xchg
in
or
insl
lods
movsl
mov
inc
xchg
mov
jg
cld
cmp
stc
cmpb
cli
cmp
mov
push
xchg
stc
leave
cmpb
clc
test
inc
or
mov
repz
xor
std
ret
mov
pushf
inc
pop
shl
outsb
ja
mov
insb
aaa
test
cmpsb
jle
stos
mov
jne
into
jecxz
xor
pop
fcmovb
mov
fidivl
pop
dec
dec
cmp
push
pcmpeqw
cmp
push
mov
lods
dec
xchg
ja
aaa
push
jo
jne
jb
xchg
xchg
cmpsl
fsubs
ret
add
stc
push
imul
xor
or
in
sarl
aaa
imul
adc
or
xlat
ror
imul
icebp
es
movsb
test
sub
cmpsl
push
jge
mov
push
add
out
adcl
mov
dec
enter
add
rcll
js
testb
shlb
sub
jae
inc
in
aas
sbb
dec
mov
or
lock
or
mov
adc
ds
test
mov
sub
pop
and
outsl
lods
lock
enter
mov
jno
xchg
ret
pusha
pop
jp
push
pop
cmc
and
popf
or
stos
add
les
dec
lds
cld
add
pop
sbb
xchg
jmp
fs
cmp
xor
dec
mov
cmp
add
mov
pop
and
mov
ret
pop
fcompl
ror
cmp
xchg
xchg
lahf
sti
mov
sub
sub
xchg
cltd
cmp
adc
mov
stos
xchg
xor
dec
pop
jg
inc
mov
lret
sbb
bound
hlt
iret
movsb
ljmpw
push
xchg
jecxz
jecxz
popf
mov
xor
addl
jecxz
testb
adc
shll
sbb
stos
or
mov
fwait
lret
aaa
add
movsl
cli
jnp
sub
pop
and
xchg
adc
inc
cmp
insb
fnstcw
into
jne
popf
cli
pop
dec
jg
dec
sbb
sub
adc
push
push
or
fldl
xchg
jg
mov
mov
insl
sti
pop
pop
push
cmpsl
outsb
mov
mov
cmp
inc
jae
icebp
out
cmp
pop
and
cmpsl
push
orl
xchg
int
popf
cld
pop
rolb
gs
test
mov
aaa
pop
add
cmp
sub
cmpsb
xor
lods
mov
shrb
iret
fucom
sub
movsb
sbb
aaa
xor
scas
xor
shrb
sar
test
ja
jbe
testb
jle
inc
pop
imul
push
mov
das
fadds
lcall
dec
or
out
jns
xor
push
xlat
es
int3
push
jp
orb
dec
and
adc
movsb
mov
jle
lea
sti
xorb
shlb
jbe
jecxz
sbb
leave
mov
scas
mov
in
mov
and
insb
push
jo
xor
push
lahf
cmpl
shl
mov
push
out
inc
lods
dec
xchg
sub
inc
xchg
mov
jp
pop
sub
lcall
adc
push
stc
mov
scas
mov
cmp
mov
dec
insb
dec
xorl
pop
insl
cld
out
gs
outsb
icebp
mov
sub
mov
lahf
imul
cmpsl
and
in
xchg
fwait
sub
jge
or
mov
add
dec
into
adc
fwait
jo
mov
lock
or
add
mov
sti
dec
fs
inc
mov
mov
arpl
sub
cmpl
imul
js
sub
xor
mov
dec
sub
jle
jb
mov
lock
leave
outsb
repnz
mov
pop
adcl
aas
loopne
pop
pop
mov
sub
and
or
sbb
gs
sub
movsb
std
addb
mov
imul
push
and
mov
ret
pop
jmp
pop
pop
sar
push
jp
aad
sub
push
in
imul
mov
and
adc
xor
xchg
test
inc
mov
fidivs
sbb
jbe
push
not
pop
dec
xchg
hlt
stc
adc
dec
or
aad
push
cmpsb
xlat
xchg
cmp
mov
mov
cwtl
sbb
dec
loopne
dec
mov
mov
into
jo
xorl
out
cli
jge
xlat
sub
inc
inc
test
push
popa
pop
sti
movsb
scas
xorl
std
sbb
push
outsl
adc
cmpsl
lea
cltd
pusha
divl
cmp
inc
add
test
cmp
data16
enter
cmp
adc
jb
sub
mov
cmpsl
jbe
cmp
xchg
lahf
jbe
xor
jp
iret
push
xchg
lods
jb
push
mov
xchg
fcmovb
scas
call
adc
mov
and
fistl
mov
call
sub
lock
mov
icebp
jae
jecxz
dec
mov
cli
cli
and
stc
mov
pop
mov
xchg
push
lods
leave
aaa
mov
popa
adc
and
xchg
mov
xchg
add
mov
movsb
outsl
sub
and
sbbb
gs
imul
cmpsb
lret
enter
push
sbb
mov
pop
lds
push
outsl
popf
inc
mov
adc
mov
scas
inc
clc
adc
adc
leave
sbb
or
mov
enter
aaa
jne
and
jg
push
inc
rcrl
inc
push
mov
jbe
call
cmpsl
stos
sbbl
loopne
imul
sbb
sub
or
scas
pusha
or
sub
sub
data16
cmp
jecxz
outsl
shl
stos
dec
mov
int3
push
test
js
pusha
dec
push
cmp
jg
jmp
call
dec
xchg
clc
fidivs
add
lea
out
fnstcw
sbb
xchg
jp
imul
insb
cmpsl
lods
jo
jb
data16
and
cmpsl
fsubrl
xor
pop
fucomp
lds
xor
mov
cmp
lret
cmpb
pop
fstpl
fsubs
js
push
lods
cld
out
leave
jne
or
stc
sbb
dec
and
pop
xchg
push
jne
pop
bound
xchg
mov
in
xchg
mov
cmpb
pop
dec
ljmp
xchg
adc
mov
repz
test
mov
inc
add
jbe
enter
lcall
jbe
jp
ret
xor
mov
mov
mov
popf
daa
sub
or
mov
addr16
int3
cmpsl
daa
jp
rcll
inc
out
push
jne
pop
jmp
xchg
ret
repnz
xchg
jae
jo
repz
lods
daa
ja
jo
jne
mov
ror
add
shll
mov
pop
xchg
lods
fwait
add
xchg
mov
je
adc
mov
mov
inc
cmp
dec
mov
testb
sub
fxch
insl
push
or
incb
enter
lock
adc
jg
sub
ss
xor
inc
repnz
adc
sub
in
leave
out
enter
fsts
pop
add
push
xchg
push
rorb
out
sbb
inc
jne
ss
mov
int
mov
fidivs
enter
xor
mov
imul
sti
aas
jp
and
cld
sarb
adc
daa
jecxz,pt
mov
push
or
or
sbb
push
dec
dec
sub
fstps
ret
int3
inc
sbb
xchg
mov
mov
jle
loop
lock
inc
cltd
jmp
shrb
lds
cwtl
jno
dec
or
inc
shrl
mov
js
lcall
pop
jmp
or
ds
mov
push
mov
scas
ds
sub
mov
adc
repz
mov
imul
and
push
and
aam
mov
push
or
cmc
push
loopne
jmp
mov
out
pop
cs
stc
mov
jb
push
and
shll
leave
jge
insl
mov
in
inc
clc
aam
outsl
adc
scas
fcomi
dec
or
std
sti
sub
pop
icebp
or
sub
lcall
ficoml
fld
push
fmul
insl
jns
call
mov
jp
jne
xchg
jmp
dec
mov
xchg
xor
scas
push
mov
fadds
cmp
sbb
in
mov
popa
cmpsb
mov
pop
push
jbe
sti
repnz
mov
shl
or
mov
dec
mov
pop
shll
std
mov
adc
jl
sub
cmp
cmpb
push
xchg
movsl
ljmp
pop
pop
int3
jge
int3
cmc
fdivr
ja
push
and
int
mov
and
dec
dec
and
push
push
or
xlat
pop
imul
lret
mov
movsb
out
mov
mov
out
shll
push
ss
sti
neg
mov
mov
mov
lods
xor
xchg
jecxz
push
pop
je
sbb
mov
out
sti
and
sbb
pop
mov
imul
cmp
lods
pop
cli
push
jecxz
mov
adc
adc
dec
push
cmp
sti
xchg
out
outsl
push
xchg
arpl
in
push
ret
jo
outsb
jbe
or
int
dec
cmp
jp
adc
jae
sub
fmul
cmp
push
je
cmp
mov
mov
stc
push
push
mov
in
sub
dec
xor
or
xchg
inc
ss
dec
sti
fld
mov
and
xor
mov
mov
ljmp
pop
push
mov
in
loopne
dec
imul
mov
rcrb
dec
dec
idivb
mov
and
xor
ja
push
jb
subb
aas
pop
jns
aad
nop
outsl
cmp
push
pop
mov
rcrb
iret
jae
jns
mov
mov
pop
pop
fildll
cli
add
mov
and
lret
pop
and
lcall
imull
push
jno
lret
mov
xchg
jp
mov
jecxz
insb
xlat
mov
stos
aad
mov
xor
fcmovnu
inc
fidivl
stos
movsb
cmp
add
dec
mov
pop
jp
loope
push
cli
mov
movsb
jmp
or
xchg
sub
loopne
add
mov
and
fistl
sbb
mov
enter
pop
adc
loopne
dec
xor
outsl
xor
fadd
imul
iret
fninit
sub
in
adc
jo
hlt
sub
and
jb
movsl
xorl
jl
je
ss
or
mov
push
xor
push
pop
aam
std
xlat
jp
pop
popa
adc
js
cltd
xchg
repz
add
sub
daa
xchg
pop
and
xchg
and
mov
lcall
xchg
outsb
pop
push
jp
arpl
push
lahf
cltd
idivb
mov
cmp
fstp
mulb
dec
mov
push
and
popf
adcl
lock
scas
lret
scas
bound
and
add
jb
insb
mov
xor
push
add
adc
mov
or
cmpsb
outsl
cmp
add
xorl
xchg
lret
cmp
add
jo
jecxz
jp
call
fwait
js
sub
xor
cmp
cmc
pop
pop
pushf
pop
pop
leave
insb
fucomip
mov
cmp
push
mov
dec
sarl
cmp
cmp
jno
cmc
mov
push
enter
dec
push
arpl
push
xchg
xchg
sbb
or
add
adc
ja
xor
add
cmp
inc
pop
pop
cld
movsb
shrb
scas
pop
xlat
negl
cld
sbb
mov
sbb
je
jle
mov
test
inc
pop
pop
pop
mov
sub
insb
pop
mov
dec
adc
push
xor
cmpsl
push
out
mov
lret
mov
shr
addr16
je
pop
test
mov
mov
sbb
cmp
cld
cli
xchg
bound
mov
mov
lds
loope
movsb
pop
xor
cmpsl
negl
jp
jno
push
push
dec
and
push
sub
add
push
mov
not
pop
cmp
cmp
mov
imul
mov
mov
jmp
jmp
pop
and
sbb
insb
lods
mov
push
stc
jl
outsb
cmp
and
idivl
xor
clc
mov
in
jle
popf
mov
mov
loop
mov
sbb
jg
mov
push
loope
idiv
pop
sub
jns
xor
aaa
int
fcmovne
mov
inc
mov
mov
and
ja
rol
sbb
dec
ss
fildll
jecxz
push
test
cmp
into
add
idivl
push
aas
mov
js
lret
push
pop
outsl
jecxz
cmpl
or
pop
je
pop
stc
xor
ja
movsb
sub
inc
sbb
popf
dec
jo
sbb
jns
push
fistps
jbe
in
inc
xor
stc
mov
xchg
cmp
ja
jns
push
sub
repz
outsl
test
fdivrl
cmp
out
jp
mov
mov
ds
cmp
outsl
pop
jg
sub
out
jno
cmp
aas
xor
sarb
push
outsl
and
mov
add
stc
add
inc
call
jns
pop
in
cmp
stc
in
xchg
mov
gs
jns
enter
sti
inc
ja
mov
dec
insb
cmpsl
fadd
xchg
sub
cmp
in
arpl
pop
ficoml
jecxz
fsubs
cld
xchg
aas
cmp
and
imul
push
inc
push
std
test
dec
jle
ds
cmp
leave
cmp
dec
cld
cmpsl
jmp
mov
adc
loop
lcall
push
lds
mov
scas
sub
cmp
cli
sbb
jecxz
lods
mov
leave
push
push
pushf
inc
jno
cld
jns
dec
ja
push
inc
sbb
jns
mov
enter
dec
adc
mov
scas
addr16
popf
push
jns
push
bnd
mov
dec
cmpsl
cmpsb
jg
jnp
int
mov
inc
inc
imul
cmp
stos
rorl
cmc
fs
dec
mov
scas
sti
jns
mov
in
sarb
mov
sub
fcompl
inc
cmc
pop
inc
or
lahf
mov
stos
dec
push
pop
or
jae
lret
xchg
sub
int3
and
sbb
mov
fcmovnu
xchg
pushf
sub
jno
mov
std
dec
jbe
xor
jb
scas
leave
jne
mov
xchg
jmp
inc
repnz
shl
mov
ja
inc
jb
scas
jo
repz
sub
jbe
sbb
int3
jmp
pop
fs
push
movsb
push
ret
add
pop
inc
pop
jne
dec
test
and
shrb
sbb
mov
and
dec
cli
test
test
sti
sbb
pop
outsb
fs
sub
jp
mov
xor
xor
pop
dec
xchg
inc
cmp
pop
jmp
lret
inc
mov
cmpsl
adc
stos
mov
dec
xchg
mov
add
mov
mov
mov
jmp
xchg
out
sbb
or
imul
lods
push
jmp
mov
sbb
imul
shrl
outsb
cmp
or
inc
push
or
test
mov
cmp
adc
int
inc
jns
orb
mov
or
sahf
mov
int
divl
dec
ljmp
dec
imul
stc
mov
pop
mov
fsubrp
bound
popa
bound
les
xchg
ret
cmp
das
jno
cmp
out
push
insl
mov
jbe
stc
insb
mov
jns
test
mov
pop
fisubrl
xchg
inc
std
pop
inc
sbb
adc
ja
xchg
sub
mov
add
pop
clc
stc
arpl
sub
push
xor
cmpsl
imul
ljmp
mov
stos
lock
sub
cmp
jbe
inc
dec
inc
punpckldq
mov
dec
adc
out
aam
jo
int3
call
fnstenv
adc
insl
lock
jns
stos
dec
movsb
popf
iret
out
jno
cltd
lret
pop
jo
and
jmp
addr16
insb
pushf
fldenv
jp
mov
pop
stc
push
popf
test
jg
lods
or
daa
movsb
pop
and
hlt
outsl
js
ficomps
jl
push
push
mov
loope,pt
imul
dec
mov
mov
add
mov
ret
out
cmp
cmp
add
test
mov
pop
inc
lds
mov
dec
int
mov
in
mov
ficoml
insb
mov
adc
mov
imul
adc
outsl
shlb
fdivl
adc
inc
mov
mov
xchg
leave
ss
jb
pop
ja
mov
mov
enter
out
push
popa
inc
pop
xchg
int
cmp
add
push
dec
push
pop
or
imull
jns
jp
dec
test
push
in
inc
mov
enter
mov
rol
sub
sub
je
or
fs
xchg
adc
push
jge
mov
or
sbb
lds
data16
addr16
pop
pop
int
dec
stos
sub
js
imul
xchg
fcoms
sbb
jp
mov
and
popa
inc
pop
movsb
out
push
sarl
push
test
mov
adc
cmpsl
out
xchg
sub
mov
dec
jns
jbe
je
sti
or
ret
clc
outsl
inc
leave
out
cmpsb
mov
push
stc
cltd
test
cmp
cmp
out
lcall
push
cmpsl
xchg
mov
cmp
shlb
lcall
or
repnz
les
inc
es
sub
es
xchg
pop
dec
rorl
jae
or
repz
insl
cmpsl
mov
xchg
push
stc
dec
ds
cmp
out
sbb
arpl
arpl
cmp
sub
lods
xchg
xor
int
pop
pop
xchg
jno
imul
mov
fwait
cld
cmp
ret
and
pushf
and
cmp
inc
sub
jmp
pop
data16
inc
xchg
xchg
mov
push
loop
push
sbb
jo
dec
mov
pop
push
add
mov
mov
pop
jmp
insl
stos
jecxz
inc
push
add
cmpsb
xor
and
icebp
ret
inc
pop
shlb
mov
add
decl
adc
test
inc
mov
add
sbb
jp
lahf
mov
fnstsw
xchg
pop
mov
shrl
inc
jns
pop
ljmp
in
repz
daa
arpl
mov
cmp
mov
or
mov
pop
int3
push
testw
jmp
mov
mov
enter
cmpsb
imul
dec
cmp
mov
imulb
sti
push
mov
xor
inc
jecxz
test
mov
enter
pop
outsb
leave
pop
scas
dec
or
add
aam
jge
mov
test
sbb
sbb
enter
ret
pop
leave
jl
adc
sbb
ds
pop
idivl
fwait
mov
mov
enter
jl
xorl
jb
pushf
dec
jmp
push
sub
xchg
loopne
ret
pop
popf
push
push
mov
insl
pop
enter
mov
cmpsb
mov
mov
mov
pop
bsr
in
stos
cmp
and
mov
or
mov
ret
mov
push
cmp
mov
fdivrl
jp
pop
jecxz
push
rcrl
or
xchg
aas
adc
decl
filds
inc
jp
pop
mov
jp
fxch
jne
lock
jbe
test
mov
cmp
jnp
jns
test
lock
adc
cmp
push
cmp
flds
negl
popf
bound
sarl
mov
or
je
or
mov
mov
lds
out
jno
sarl
push
cmp
sub
jmp
ja
or
out
imul
and
ds
cmpsb
dec
and
daa
and
jp
lret
stos
jecxz
loop
cmp
or
jmp
dec
cmp
xchg
ljmp
sbb
xchg
repz
hlt
add
inc
daa
movsb
fstl
and
gs
xchg
cmpsl
lret
add
in
stos
push
pop
push
xor
aaa
xlat
and
push
ja
loopne
shll
pop
icebp
in
jns
xchg
inc
sub
xchg
lret
jb
xor
cmp
cmp
divl
mov
movl
bound
and
pop
pop
cmp
and
dec
mov
ja
dec
std
nop
in
pop
sbb
sbb
popf
push
cld
cmp
mov
into
mov
movsb
test
in
rcll
hlt
sbb
test
test
or
notl
xor
ss
movsb
pop
xchg
adc
stc
cmpl
dec
cmp
sbb
scas
dec
insl
fcompl
mov
ret
lcall
cltd
push
xchg
xor
jecxz
jns
hlt
or
mov
daa
out
in
pop
fbstp
loop
test
mov
aad
sub
push
mov
pop
lret
fmuls
pop
stc
mov
jmp
add
adc
inc
jmp
mov
ret
cmpsb
mov
fwait
negb
mov
jno
mov
movsl
add
shll
and
xchg
shll
push
or
stos
es
add
mov
notb
xlat
cmp
jecxz
mov
lds
jo
shl
pop
shlb
pusha
adc
mov
repz
mov
lds
or
leave
dec
pop
sti
lret
jne
int3
xchg
pop
and
outsb
cmovnp
mov
xchg
jecxz
dec
mov
daa
ljmp
dec
int
gs
jle
sti
xchg
stc
cmp
nop
mov
dec
out
outsb
fdivrp
xchg
pop
xor
addl
in
mov
cmp
test
or
scas
cmp
xchg
sbbb
cmp
cli
dec
pop
mov
cmp
sub
nop
ljmp
mov
aas
adc
fildll
pop
js
repz
sub
cmp
lds
dec
or
pop
mov
xlat
ret
mov
mov
mov
mov
jo
push
push
in
or
mov
xchg
jbe
cmpsb
shr
xchg
adcl
enter
dec
pop
push
or
mov
sarb
decb
scas
dec
mov
lods
je
arpl
mov
jbe
ret
mov
push
imul
addr16
mov
enter
sti
xor
adc
imul
and
fildll
jns
add
test
out
jb
push
enter
ja
mov
pop
dec
pop
and
sbb
call
or
ret
ja
mov
xchg
inc
dec
sbb
jl
cs
push
lcall
ret
pop
cmp
mov
adc
jno
inc
xchg
int
mov
dec
jb
mov
adc
and
pop
iret
xchg
cmc
sbb
bound
xchg
mov
pop
stc
dec
sahf
and
dec
dec
or
pusha
sarb
add
sub
sub
lcall
xlat
jl
lret
mov
jno
dec
fcomps
fwait
mov
mov
adcl
push
stos
mov
rorl
jmp
jp
mov
and
movsb
leave
addr16
push
sbb
adc
mov
add
es
mov
lea
jae
addr16
mov
adc
dec
jl
faddl
mov
pop
jno
call
mov
push
sbb
repz
mov
insb
shl
test
bound
sbb
pop
xchg
adcb
add
imul
inc
dec
dec
pop
dec
add
mov
addr16
testl
cmp
out
mov
dec
mov
aad
loopne
adc
stos
shrl
aam
divl
addr16
xor
out
testw
xor
sti
jecxz
rcrl
popa
sti
push
mov
cli
inc
push
aas
fcoml
flds
add
or
add
sbb
mov
faddl
sbb
das
jg
adc
dec
sbb
lret
lods
push
fbld
push
or
cmp
mov
pop
push
bnd
push
out
mov
xchg
sub
push
pop
ja
and
push
imul
jns
fistpl
movsb
cmp
out
popf
testl
pop
ret
jns
in
mov
daa
pop
movsb
popa
or
mov
in
push
mov
popf
pop
or
nop
and
mov
in
jb
mov
or
jle
jp
inc
cmp
and
xchg
push
sub
in
pop
inc
or
jl
out
pop
add
push
dec
jmp
lods
je
in
and
fwait
test
jno
adc
sub
mov
and
cmpsb
jne
in
int
mov
loop
mov
add
jge
pop
dec
enter
push
in
out
jle
stos
and
dec
fistpl
ret
movsb
sbb
add
in
dec
lahf
test
dec
emms
cmp
mov
pop
sbbb
pop
cmpsl
or
mov
imull
arpl
in
and
and
mov
add
arpl
test
aas
pop
cmp
jne
loop
mov
out
jg
and
cmpsb
jmp
sahf
aad
cmpsb
mov
xor
clc
mov
adc
ret
out
pusha
addr16
lods
fisttpll
push
pop
in
push
pushf
pop
je
ja
cmp
fs
push
std
mov
fldl
jnp
out
repnz
cli
push
push
jg
cmp
sub
mov
sub
and
out
mov
jns
lahf
nop
inc
jecxz
out
jo
cmp
out
pop
push
jne
mov
enter
xchg
faddl
lret
mov
or
push
mov
adc
sub
sbb
push
mov
daa
fsts
lret
clc
mov
lods
and
dec
mov
add
pop
arpl
faddp
sub
aas
jge
mov
rcr
adc
sbb
pop
movsb
pusha
sbbb
scas
pop
push
cmp
push
scas
lret
gs
jae
mov
push
mov
and
call
test
jp
inc
test
cmp
loope
mov
mov
ja
xor
mov
mov
or
pop
pop
jnp
data16
push
dec
sub
fldenv
cmp
jg
push
call
neg
imul
xor
jmp
mov
jbe
fwait
jecxz
mov
in
jbe
lret
adc
icebp
sub
jne
imul
in
test
pop
dec
hlt
scas
adc
dec
mov
cmpsl
ja
dec
mov
aam
outsb
fsubs
add
jbe
sub
ja
inc
hlt
ja
shll
xchg
inc
jl
aam
stc
jbe
push
mov
mov
int
xor
or
aas
sub
fsubrl
inc
fadd
in
sbb
xchg
xor
fsts
pop
clc
int
push
or
repnz
and
cmpsl
push
jmp
adc
sub
and
fidivrs
dec
mov
or
addr16
fldcw
xor
cmpsb
fisubl
jmp
mov
xor
les
test
lods
icebp
push
scas
lods
or
fildl
hlt
mov
push
cmpl
cld
mov
xchg
dec
icebp
in
xchg
daa
sbb
dec
or
pop
push
pop
test
addr16
mov
sbb
pushf
lods
push
testl
inc
or
fnstsw
mov
cld
jg
arpl
movsb
int3
adc
mov
xchg
jb
testb
wrmsr
cmp
xlat
cmc
insl
push
icebp
add
adc
jns
in
ret
inc
in
mov
test
cmp
jg
jo
lahf
outsb
xor
pop
imul
cli
add
add
subb
andl
in
and
test
cli
xor
sub
movsb
and
add
jp
jae
cmp
mov
sti
mov
cmpsl
cmp
push
dec
fcoml
aas
das
jns
jns
mov
sub
xchg
adc
mov
movsb
sub
inc
int3
mov
add
jl
pop
dec
cmc
add
mov
xlat
cli
sbbb
xchg
mov
mov
and
inc
adc
fs
mov
mov
jecxz
shlb
xor
cmp
aas
pop
repnz
mov
popa
imul
test
push
mov
jmp
pop
loop
mov
adc
movsb
stc
gs
enter
dec
out
bnd
add
or
mov
lock
xchg
arpl
fistl
test
dec
and
dec
sub
lcall
imul
lea
mov
xor
notl
pop
sub
scas
lock
int3
aas
daa
jne
sbb
sbb
fcom
and
fisttps
mov
lea
pop
je
loopne
and
or
negb
mov
pop
hlt
xchg
frstor
dec
sbb
adc
mov
int
es
divl
mov
sub
scas
xchg
aaa
jbe
jns
pop
mov
add
sbb
xlat
stc
repz
inc
jb
dec
jae
outsl
adc
fs
mov
push
hlt
xchg
out
leave
inc
popfw
sti
insb
decl
adc
pop
xchg
js
imul
add
dec
cmpsb
rclb
cmp
dec
mov
pop
ds
fnsave
jge
stos
sbb
mov
pop
xchg
cld
mov
mov
push
fistl
sbb
mov
mov
fldt
xchg
mov
ljmp
insb
xor
movsl
mov
rcll
scas
inc
cmp
jmp
pop
jbe
sti
pop
lcall
int3
xchg
pop
inc
and
push
or
insl
aaa
lock
dec
jmp
mov
cli
sub
pusha
xchg
outsb
fwait
lcall
adc
and
xor
lock
inc
hlt
xor
ss
pop
mov
push
push
aas
xor
nop
adc
pop
leave
fsubp
dec
shlb
xchg
jbe
jo
mov
pop
xchg
xlat
push
test
aaa
cld
adc
add
cli
add
pop
lahf
icebp
in
insl
push
jnp
dec
iret
xchg
pop
movsb
jl
cltd
cli
es
repz
ja
fsubrs
fcoms
pop
inc
call
scas
stc
dec
cmp
movsb
xor
movl
fidivs
mov
in
pushf
dec
ds
inc
pop
loop
dec
push
inc
pop
das
push
adc
and
pop
cmp
leave
pop
pop
or
inc
ss
js
insl
subb
xchg
push
mov
mull
push
mov
pushf
ror
dec
ftst
lret
mov
jp
stos
ljmp
lds
cmpsl
mov
js
sbb
jl
ds
in
outsl
testl
in
fbstp
cmp
sub
sub
adc
mov
mov
push
mov
xor
int3
insb
ja
xchg
push
testl
jle
pop
mov
mov
xor
jle
push
cltd
cmp
push
mov
movl
ljmp
or
call
clc
es
add
cmp
loopne
pop
sbb
repz
addr16
stc
or
cltd
test
add
stc
ja
repz
andl
mov
push
jb
out
mov
pop
mov
xor
imul
mov
push
push
push
mov
js
push
je
int3
cwtl
jae
test
mov
pop
leave
aas
xchg
ja
cmp
mov
iret
aam
lock
out
sub
mov
pop
pop
fwait
dec
pop
fldenv
mov
mov
xchg
in
push
cmp
sbb
fimull
cmp
mov
mov
mov
pop
xchg
int3
mov
insl
es
inc
ja
in
adc
fcmovnu
mov
push
dec
mov
jecxz
mov
dec
movsb
jno
shlw
cmpsb
push
fxch
or
insl
insl
or
cmp
call
inc
insl
cmc
mov
repnz
push
not
and
jns
test
jb
adc
imul
leave
push
scas
mov
mov
mov
inc
mov
and
ret
int
mov
or
fwait
out
add
jns
mov
enter
in
dec
push
fsubrl
or
jmp
in
fdivs
daa
mov
jbe
pop
arpl
mov
pop
mov
push
cmp
into
and
jne
sbb
clc
mov
loopne
in
adc
sub
cli
or
jle
les
mov
fcompl
mov
mov
out
mov
fisttpl
and
cmp
cmp
fcmovnu
xchg
repnz
hlt
std
mov
cmp
popf
out
les
adc
mov
in
dec
sti
push
push
adc
push
jns
mov
mov
dec
movsb
rcll
pop
scas
xchg
int
xchg
mov
dec
stc
mov
jo
insb
or
xlat
fisubs
inc
mov
fsubl
mov
sbb
bound
jg
stos
daa
and
xchg
mov
arpl
cmp
xor
cmp
icebp
mov
xchg
mov
js
cmp
mov
mov
xchg
or
inc
insl
lods
les
push
sub
push
push
js
stc
mov
sti
inc
mov
mov
negl
inc
dec
jne
pushf
fsubrp
cmpl
dec
jb
push
pop
mov
ja
addr16
fwait
ja
jne
xchg
loop
jno
inc
outsl
pop
insl
lock
mov
icebp
sbb
movsl
xchg
sets
rcrw
fisubl
pop
jne
in
and
sbb
fwait
dec
leave
insb
jp
xchg
fwait
jo
inc
aas
push
cmp
or
ja
xor
leave
adc
outsl
jp
dec
lahf
ret
or
sbb
loop
jge
in
adc
fwait
leave
shl
ja
shlb
xchg
mov
cmp
cli
fdiv
dec
and
xor
iret
icebp
sub
call
out
push
jmp
fs
mov
push
push
outsb
jmp
cmp
sbb
add
mov
fidivl
in
jae
jne
aas
push
lods
jne
mov
shrb
sub
pop
mov
jp
fwait
cmp
jns
push
aad
popa
rol
add
jae
xchg
inc
cmp
fs
push
lods
in
cmp
cld
cmc
movsl
idivb
mov
xor
fisttpl
sti
dec
pop
or
dec
ja
ret
mov
lret
pop
pop
or
stc
cld
adc
shl
inc
addr16
test
iret
imul
pop
stc
mov
in
adc
loope
push
inc
stos
leave
icebp
dec
or
ret
cmp
push
aaa
int3
pushf
mov
lret
popa
push
je
and
pop
dec
lods
and
pushf
bound
mov
cmp
sub
cli
adc
adcl
lret
mov
lret
loop
add
cmp
sbb
jmp
dec
outsl
push
sub
xor
mov
jecxz
jns
mov
push
stc
stos
jecxz
ja
dec
jno
fnstsw
push
stos
and
js
imul
in
add
aad
mov
fsubrl
cmp
in
pop
push
jg
mov
pop
xchg
inc
andl
mov
xchg
xchg
push
dec
adc
xchg
sti
sub
or
cmp
js
fwait
cmp
int3
fisttpl
mov
leave
insl
fs
push
outsl
and
repz
imul
or
arpl
cmpb
dec
aaa
jg
repz
dec
ja
jb
lcall
mov
fwait
cmp
pop
and
mov
cmp
cwtl
mov
ret
loop
aam
inc
imull
sbb
mov
sbb
or
jae
adc
jge
in
test
xor
shll
lret
push
jmp
and
dec
xlat
loope
inc
in
jno
rolb
cli
pop
xlat
lods
mov
inc
ret
popf
cmp
mov
mov
test
push
cmp
loope
cli
sub
in
enter
inc
mov
xchg
test
pop
mov
xor
push
cld
icebp
repz
gs
test
mov
jecxz
ja
pop
sarl
out
mov
jae
mov
inc
mov
js
ror
arpl
jb
push
jne
push
stos
jge
popa
push
gs
or
clc
loopne
aas
imul
imul
test
fnstenv
cmp
jb
rorl
lea
mov
xor
push
or
scas
mov
dec
jmp
sbb
lock
clc
imul
jne
push
push
adc
jbe
shlb
gs
dec
and
repnz
popf
mov
mov
xor
ja
aad
out
or
lret
push
imul
cmpsl
mov
pop
sbb
scas
pop
mov
fstpt
fwait
cmp
js
mov
enter
fdivrs
add
daa
cmp
in
hlt
cs
into
ja
gs
lock
jno
fwait
outsl
ljmp
hlt
inc
jmp
xchg
imul
jmp
ret
fs
and
jl
loopne
mov
rcrb
loop
xor
ds
pop
arpl
dec
sahf
cmp
sbb
js
cmp
pop
lea
jb
xlat
jl
mov
js
jns
lcall
rorb
stc
data16
cmp
jecxz
in
lcall
loop
das
insl
fstpt
or
push
test
inc
and
into
adc
mov
in
fwait
mov
push
inc
fld
xchg
jl
mov
into
push
sbb
ljmp
cs
mov
clc
mov
dec
pop
mov
sbb
testl
in
cmp
dec
repz
mov
dec
jno
pop
cltd
outsl
sub
mov
cld
dec
divb
leave
pop
jbe
push
or
xorb
cmp
dec
and
or
pop
ror
test
push
cmpsb
jbe
es
call
outsb
data16
pop
mov
jp
sti
sub
xlat
cmp
data16
add
mul
fstl
jns
jb
adc
pop
add
mov
sbb
xor
loopne
stos
jp
jns
or
lcall
cwtl
pop
fwait
ja
mov
pop
mov
fidivrs
push
iret
cmp
insl
imul
inc
cmp
jns
fcomip
add
and
pop
pop
pop
fmull
jo
mov
cli
mov
stc
lret
test
fisubrs
sub
sub
dec
and
mov
cli
fwait
cmp
pop
pop
sub
ret
mov
fidivs
sti
stos
mov
cmp
mov
dec
cld
enter
mov
xchg
cltd
inc
ret
dec
push
ret
ret
xor
dec
xchg
repz
stc
jge
mov
out
psadbw
mov
push
push
shl
cmp
adc
ja
sbb
add
fstps
cmp
mov
mov
int
mov
pop
popf
push
testw
add
and
mov
fisubrl
inc
ss
icebp
sbb
test
jo
mov
push
js
repnz
xchg
jns
xchg
loop
cmp
bound
out
out
mov
ja
sti
push
je
jb
adc
or
pop
mov
mov
jmp
adc
ja
mov
xchg
jno
outsl
inc
push
xchg
cltd
fnstenv
test
lcall
push
pop
push
fists
fidivrs
pop
lret
push
cwtl
jns
enter
aam
out
inc
fisubrl
out
dec
out
imul
and
push
adc
aam
stc
shrb
push
mov
sub
mov
test
out
gs
cmpsb
pushf
subb
mov
mov
js
addr16
in
xorb
xchg
jne
repz
pop
cli
insl
mov
andb
cli
mov
pop
mov
out
cmc
adcl
icebp
popa
bound
fstl
data16
xchg
aas
mov
cmp
add
mov
push
cmp
adc
les
mul
jns
into
xchg
scas
adc
bnd
lret
adc
push
jae
aam
call
mov
jo
mov
jecxz
sub
inc
mov
das
cwtl
cmp
cwtl
xchg
pmaxsw
xchg
pop
shlb
ret
pop
testl
arpl
fwait
jge
mov
dec
fisubl
add
xor
xor
fwait
xchg
ret
add
cmpsb
sub
sbbb
into
mov
xlat
xchg
cmp
ss
jp
xlat
nop
mov
pop
push
lods
push
xchg
lods
xchg
int
loope
xlat
xchg
jbe
lret
mov
fnstcw
repz
cli
repz
or
inc
scas
mov
pop
mov
xchg
jns
cmp
imul
pop
test
iret
jns
out
xchg
stc
push
mov
in
xor
sbb
fcmovb
mov
imulb
sbb
xchg
icebp
fisttps
pop
ljmp
ret
stc
divl
or
ss
cwtl
inc
jne
jno
xor
inc
sbb
leave
icebp
push
test
jg
jne
mov
push
push
and
cmp
push
imul
mov
test
imulb
loope
xbegin
sbb
jo
mov
cli
lret
movsb
dec
pop
or
je
fstpt
out
cmp
jbe
inc
dec
push
insl
mov
pushf
jno
add
jecxz
insl
fisubrs
jns
fwait
ja
jbe
rolb
in
xchg
aaa
sahf
sub
or
and
out
mov
in
dec
fwait
jae
pop
jbe
or
into
leave
lret
pop
imul
cmp
stos
dec
pop
ret
add
sbb
mov
jo
add
iret
add
add
mov
es
xlat
jle
lods
pop
and
cmp
pop
rcrb
or
leave
addr16
andl
cmp
xor
stos
and
dec
jecxz
mov
movsb
cli
ret
mov
xor
or
inc
stc
outsl
jns
cmc
add
aam
in
jbe
pushf
fucomip
sahf
jbe
mov
cmp
outsl
lret
cmp
lret
mov
dec
xlat
repnz
negb
insl
add
dec
and
stos
es
or
int3
jge
mov
movsb
adc
sub
test
in
jp
mov
outsl
or
cltd
or
bound
outsl
cmp
js
sub
loope
dec
jns
pop
push
cmp
or
cmp
test
inc
ja
cli
mov
or
and
sarb
stc
lcall
sbb
mov
enter
sbb
notl
js
cmp
jmp
cmp
neg
pop
inc
int
inc
stos
data16
push
mov
dec
or
in
clc
outsl
cld
loop
xchg
daa
pop
cmp
and
test
test
cmp
sbb
roll
adc
jmp
cmp
and
out
jecxz
orl
movsb
mov
mov
dec
mov
pop
xlat
jmp
mov
cmp
mov
sbb
inc
cmp
xchg
or
dec
adc
mov
xchg
cmpsl
cmp
mov
fdivs
aas
jns
sti
push
inc
jp
int3
mov
mov
jbe
int3
jae
mov
movsb
int3
cmpsb
mov
repz
and
test
jae
fiadds
pop
fwait
mov
mov
pop
iret
repnz
pop
add
xor
js
pushf
jb
lods
insb
pop
mov
mov
in
push
ja
sahf
loope
dec
stos
fnsave
imul
dec
xchg
dec
fldt
push
in
pop
dec
fwait
xchg
test
bound
das
sahf
push
dec
push
clc
divl
inc
cmp
pop
int
in
int3
stos
and
sbb
jp
jae
sar
mov
xchg
stos
aad
subl
shll
inc
sti
push
adc
mov
pop
jp
jmp
stos
mov
les
mov
or
mov
mov
dec
mov
and
push
pop
add
mov
and
push
dec
sbb
dec
adc
and
mov
pop
xchg
imul
dec
fsubrl
cmp
mov
adc
out
or
rol
cmp
or
dec
mov
cmp
sti
jns
and
adc
lods
push
push
jp
mov
rclb
lock
add
fistpll
push
xchg
xor
bound
jns
pop
jmp
jo
ja
mov
in
aam
pop
iret
push
push
shll
jmp
repz
faddl
xchg
stos
mov
xchg
cld
outsb
inc
xor
test
cmp
stos
repz
lret
dec
outsl
movsl
jae
stos
out
fwait
shrl
push
out
cmpsb
sub
jnp
mov
mov
xchg
fs
cmc
cmp
ss
cmpsl
hlt
adc
jns
jp
cmp
sub
add
loope
and
lcall
mov
push
lcall
pop
repz
imul
cmc
xchg
cmp
mull
inc
pop
sti
fistps
in
js
jno
insb
xchg
dec
lock
add
fcmovnb
test
push
cmp
aam
or
cmc
shrl
rcrl
pop
adc
popl
mov
in
movsb
adc
clc
popl
ja
enter
iret
jo
jge
mov
rcll
adc
pop
out
jns
mov
or
xorb
push
mov
or
mov
add
fs
or
imul
mov
dec
xchg
xor
xchg
or
mov
shl
aaa
out
mov
mov
frstor
je
aaa
outsb
cmp
jg
imul
mov
cmp
cltd
dec
sti
sbb
mov
das
mov
sub
mov
mov
mov
insl
imul
adc
aam
dec
lret
jle
pushf
shrl
outsb
xchg
mov
ds
mov
mov
xor
cmpsb
dec
jmp
outsl
std
mov
stc
aaa
stc
and
scas
mov
xchg
pop
leave
pop
push
cmp
push
or
jno
fiaddl
xchg
jbe
cmpsb
mov
xchg
xor
jmp
jb
jne
and
je
insl
jp
shll
push
mov
mov
sti
inc
dec
mov
cmp
inc
int
or
mov
leave
cmp
add
push
sub
mov
cli
cmp
cmc
rorl
je
fsub
jns
mov
and
mov
jne
ss
fwait
jns
jl
mov
jae
scas
inc
mov
scas
cmp
outsl
lods
add
push
adc
xor
fldl
leave
push
jp
jp
sub
fldl
pushf
aad
mov
and
inc
imul
adc
add
lods
cmp
popa
outsb
dec
jae
pop
jp
jg
jns
dec
ret
xchg
mov
push
shlb
popa
xchg
cld
jbe
mov
push
aas
push
arpl
inc
sbb
xchg
aaa
mov
pop
lock
cmc
outsb
mov
mov
push
mov
lcall
jp
test
pop
rcll
dec
jl
lcall
sbbb
iret
iret
in
arpl
pop
pop
sbb
fldcw
cmp
fnsave
outsb
mov
push
jp
mov
mov
mov
fnstsw
inc
pop
dec
clc
xlat
pop
adc
jne
xor
test
or
mov
or
jge
fists
in
cmp
fimull
sbb
inc
lret
sti
jge
mov
pop
sbb
lret
push
ja
lods
inc
push
dec
cmp
cli
add
cmp
jno
in
outsl
sub
xchg
pusha
addr16
mov
cmp
arpl
adc
lock
cs
in
or
in
test
daa
test
push
testb
std
imul
adc
inc
cmc
cmc
insl
movsl
mov
push
and
mov
and
and
es
lcall
outsl
in
fstpt
test
arpl
sub
jmp
push
loope
and
pop
or
push
jg
lahf
test
enter
sub
and
jae
in
jmp
or
movsl
ljmp
adc
out
cmp
lea
or
jae
fnstenv
jb
pop
sub
or
sbb
push
jbe
cld
bound
inc
xor
mov
and
sub
dec
fsts
cmpsb
sti
mov
stos
jbe
xor
add
out
pusha
clc
imul
not
insl
push
pop
repz
adc
mov
add
test
ja
sbb
ljmpw
aam
hlt
jns
jne
enter
incl
imul
mov
mov
push
movsl
xchg
pop
test
mov
cli
ret
in
pop
mov
je
arpl
fcmovnb
lods
mov
outsb
aas
aad
data16
ljmp
add
dec
insl
enter
mov
mov
ret
push
inc
jbe
xchg
sbb
and
scas
mov
mov
cwtl
jns
or
pop
js
sbb
call
jl
jo
mov
pop
or
mov
dec
cli
int3
fs
imulb
iret
sahf
sarb
mov
mov
push
sbb
bound
js
iret
test
fwait
mov
punpckhbw
cmp
cmp
sahf
bnd
push
clc
mov
je
and
imul
xor
jnp
scas
jns
xor
add
xchg
xor
cmp
imul
pusha
js
and
sub
xchg
mov
xchg
push
out
fcoml
push
stos
in
lea
pop
in
dec
pop
push
jle
pop
push
xor
push
sti
jnp
xchg
mov
aam
inc
lcall
mov
jns
jne
dec
sbbb
cmpsb
dec
ret
stos
xchg
shr
or
jmp
cmc
fisttpl
inc
mov
addb
pop
or
xchg
adc
shl
sbb
mov
fdivl
mov
cmpsb
mov
push
and
in
movsl
mov
xor
insl
dec
lock
cmp
fnstcw
mov
mov
mov
pop
mov
push
push
mov
pop
push
popa
sbb
push
mov
movsb
fistl
mov
mov
xor
push
push
rcrl
add
movsl
cmc
out
xor
repz
dec
cmp
movsb
in
or
stos
inc
mov
shl
lahf
inc
sti
mov
hlt
shr
and
mov
mov
stc
enter
ret
sti
cmp
cmpsb
push
jecxz
cli
pop
mov
in
sbb
sub
and
push
rorl
dec
enter
enter
fisttpll
aas
shlb
sarl
sub
imul
mov
pop
push
cmp
cmp
push
es
fimuls
mov
dec
stos
add
and
jmp
cmp
xor
push
jl
or
adc
cmp
and
outsl
icebp
mov
jns
xchg
jne
push
lds
add
push
out
pop
stos
mov
in
fiaddl
sar
aad
shlb
daa
lds
or
loop
mov
sahf
jg
xchg
adc
cli
pushf
ret
mov
mov
lcall
xchg
cmpsl
jp
insl
scas
outsl
in
push
push
aad
adc
cmp
xchg
jl
pop
sub
insb
loop
ljmp
stc
clc
add
push
mov
jae
dec
mov
pop
fisubl
je
cmpl
jmp
insb
dec
xor
xchg
repz
mov
iret
add
arpl
outsl
in
mov
test
cli
fwait
push
imul
jno
cmp
insb
mov
jnp
out
jmp
imul
jmp
sbb
mov
sub
xchg
outsb
dec
add
jg
mov
lods
cmp
add
dec
push
int
jnp
imul
or
test
scas
lret
icebp
jmp
mov
and
fs
xlat
or
dec
cmp
out
mov
and
cmc
sbb
dec
jo
jbe
fs
adc
test
lcall
es
adc
xchg
push
cmpsl
ja
pop
mov
push
cwtl
cltd
inc
fidivl
cmp
bound
lds
mov
push
test
mov
pop
jecxz
mov
mov
enter
fnstenv
ljmp
ja
fisubl
mov
je
and
pop
and
push
adc
add
out
mov
lds
fdivl
mov
lock
je
insb
sub
ret
scas
pusha
add
pushf
mov
mov
pop
in
aam
adc
int3
mov
or
or
es
dec
mov
push
ljmp
movsb
push
jbe
cmpsl
inc
add
sub
jle
xor
mov
mov
pop
cmp
movl
mov
testl
dec
mov
cmpsl
daa
or
arpl
xlat
xlat
fxch
bound
dec
inc
dec
sub
xchg
mov
dec
outsb
push
sub
outsl
inc
mov
cmc
testl
ja
pop
mov
pushf
fistpl
adc
adc
aad
leave
int
push
dec
xchg
dec
cmpsb
mov
unpckhps
cmpl
addb
or
rcll
lock
push
or
or
and
call
xchg
ljmp
je
cli
pop
and
jne
data16
out
mov
mov
mov
loop
fcoms
rolb
jl
sti
cmp
cmpsl
dec
xchg
hlt
pop
push
pop
dec
or
or
jmp
sti
push
aas
cmp
add
daa
pop
lock
sahf
ds
xchg
movsl
and
pop
jbe
sbb
push
push
sti
divl
and
in
imul
data16
xlat
loope
jmp
push
cmp
jb
mov
ljmp
call
adc
stos
or
gs
sti
jb
xchg
nop
mov
or
lret
xchg
sub
aad
cltd
cmc
lret
jecxz
pop
xor
enter
out
in
inc
imul
pop
sub
dec
pop
jbe
stc
xchg
test
movsb
testl
divl
cmc
shrb
xor
mov
insb
rcrb
xor
repz
aaa
in
inc
std
mov
dec
sahf
cmp
lret
mov
mov
pop
mov
in
push
push
mov
xchg
xor
mov
bound
mov
ds
cmp
cmc
and
in
rcr
push
repz
aaa
xchg
cmc
and
jmp
stos
orl
push
cld
pop
jecxz
rol
ret
repnz
movsb
dec
mov
mov
divl
popf
add
stc
jp
aad
push
push
add
mov
mov
xor
rcrb
pop
in
lret
rorb
cmp
jecxz
mov
scas
and
ret
push
insb
push
ret
outsb
in
xchg
cli
lcall
cmp
mov
lock
pop
add
lret
push
stos
mov
xchg
push
fwait
pop
jns
inc
fimull
jnp
jmp
mov
test
ret
shrb
jno
repnz
imul
insl
lods
outsl
xor
add
dec
in
sbb
insb
or
lods
lods
xor
add
jno
cmp
mov
lret
aad
mov
adc
cmc
insl
jbe
mov
int3
aam
dec
adc
dec
insb
insb
jg
repz
mov
sti
sub
mov
mov
mov
das
and
pop
lds
add
cmp
and
fincstp
stos
cmp
enter
in
pushf
fisubs
mov
and
daa
daa
test
int
xchg
jb
cmp
xor
mov
in
mov
push
jp
dec
mov
ljmp
and
mov
jecxz
cmp
mov
in
or
leave
repnz
and
sub
repz
popf
jp
jbe
sbb
mov
test
fstpl
jp
popa
and
je
in
adc
dec
fisubrl
in
sbb
or
inc
or
cmp
xchg
xor
xchg
lcall
aas
sti
pop
pop
xor
sbb
cmc
hlt
jp
adc
repnz
clc
fsubrl
mov
dec
dec
je
jne
pop
xor
mov
sti
aas
jae
xlat
pop
lret
cmpl
sbb
pop
test
jo
leave
adc
hlt
sub
inc
mov
mov
rcl
sti
std
push
mov
and
stos
jbe
in
add
icebp
repz
jo
push
test
bnd
adc
in
pop
stos
loopne
mov
inc
push
mov
aaa
in
jno
fstpl
ret
xchg
or
sbb
stos
std
imul
int3
repz
aas
fs
lret
push
adc
notb
cmp
test
push
adc
aas
push
mov
dec
sbb
push
cld
push
arpl
je
xchg
pop
and
sti
xor
pop
jne
jle
jno
pop
outsl
push
lods
mov
in
jae
gs
pop
sub
mov
jae
imul
nop
dec
pop
cmp
stos
cmp
mov
inc
mov
dec
imul
je
xchg
jle
mov
mov
cmp
push
sub
iret
mov
mov
ja
xchg
in
push
aaa
andb
push
sar
movsb
mov
fwait
push
outsl
sub
leave
fidivs
inc
jg
and
repz
mov
mov
sub
push
xchg
shll
imul
repnz
dec
pop
cmp
mov
loope
mov
iret
lcall
xor
cltd
data16
jle
xor
cmp
push
push
mov
mov
or
cmp
jo
xchg
or
mov
push
fiaddl
ss
push
out
jno
jbe
mov
sub
push
ret
cmpsl
xchg
xchg
outsl
dec
cld
enter
rcr
jbe
jp
mov
push
jae
xchg
out
pop
mov
daa
icebp
jecxz
scas
out
fwait
das
imul
xchg
lock
ss
cmpsl
insl
fwait
sti
arpl
xlat
sub
into
pop
imul
cmc
mov
mov
data16
arpl
mov
jp
add
je
push
stc
scas
jbe
jns
stos
mov
ret
insb
sub
inc
mov
repnz
fldenv
or
sub
scas
xor
scas
pop
stos
jae
or
jmp
sbb
fsts
insb
and
mov
pop
dec
dec
xor
pop
repz
rorl
inc
sti
jns
out
jbe
jno
xchg
cli
scas
data16
adc
shrl
cld
nop
mov
sbb
movsb
scas
fbld
xlat
xchg
mov
jb
dec
sub
inc
imul
rcrb
xchg
cmpsl
jo
lret
aaa
push
jbe
in
inc
xchg
test
mov
pop
jecxz
cli
gs
std
arpl
mov
jbe
inc
shlb
clc
xchg
xchg
lock
jbe
push
mov
add
push
out
enter
es
pusha
dec
mov
cmp
orl
imul
cmp
pushf
mov
push
inc
sub
mov
dec
mov
lock
std
clc
cli
out
pop
testb
sub
pushf
or
or
xor
loope
movsl
sbb
jo
mov
sub
stos
inc
xchg
jns,pn
jp
sub
gs
jmp
lods
lret
xchg
lods
cld
js
adc
cmp
clc
push
out
repnz
sbb
in
sub
inc
negl
jp
mov
insb
jp
sbb
js
in
in
lods
stc
mov
jbe
or
jg
out
fs
cmp
ljmp
cs
push
xor
xchg
movsl
cs
mov
xor
add
inc
and
idiv
cltd
pop
dec
ljmp
xchg
insl
xorl
xlat
mov
scas
cmp
mov
cs
in
inc
lcall
sahf
scas
subb
inc
xor
std
rcrb
xchg
imulb
cmp
xlat
shll
jp
cmp
aas
cmpl
pop
or
pop
push
add
push
test
test
xor
jl
sbb
dec
popa
testl
cld
push
aam
inc
clc
jne
cmp
aad
aam
rcpps
neg
jl
repz
fchs
int
jmp
adc
fistpl
or
mov
mov
sbb
jp
popa
scas
fwait
aaa
ss
lret
in
shlb
and
jbe
or
add
adc
cli
lret
ljmp
leave
mov
mov
cld
or
push
cmp
jnp
mov
sub
or
push
notb
ret
cmpsb
inc
popf
mov
mov
mov
xchg
or
enter
arpl
outsl
xchg
gs
mov
dec
iret
fstp
mov
cli
add
mov
leave
cmp
sub
lds
cwtl
mov
jp
mov
and
imul
inc
pop
fdivr
xor
mov
push
std
icebp
lods
enter
sbb
cmp
sub
fdivs
jl
lea
push
xchg
enter
inc
inc
mov
jbe
ljmp
push
mov
pop
xor
sbb
fdivrs
pop
mov
lcall
lea
lea
jae
enter
or
int3
inc
pop
adc
leave
popl
addr16
loop
test
sbb
dec
pop
stos
in
jmp
mov
pop
mov
sti
daa
stos
cltd
out
mov
stos
or
arpl
ret
arpl
jp
adc
sbb
push
xlat
or
stos
stos
mov
inc
sub
xor
imul
mov
data16
or
jecxz
leave
xchg
xchg
push
fimuls
cltd
xor
loopne
lods
int
jns
cltd
imul
sbbl
dec
lods
loope
and
cmp
fsubrl
mov
fs
mov
ds
aaa
or
pushf
popf
jno
mov
fcomp
push
stos
pop
pop
jl
or
in
lcall
xor
pop
cmp
loop
adc
push
xorl
pop
or
aad
stc
dec
lock
scas
stc
cmpsb
jae
leave
or
mov
jbe
mov
fs
es
pop
test
pushf
push
test
mov
mov
mov
pushf
dec
cmp
in
cmp
push
pusha
or
int3
lea
jne
or
outsb
leave
ss
adc
pushf
or
pop
int3
into
pop
fnsave
pop
push
push
inc
les
jbe
xlat
aaa
cmc
in
add
imul
inc
xchg
mov
sub
xchg
cmp
sti
adc
jle
push
mov
inc
lahf
pusha
daa
pop
dec
mov
aad
dec
push
mov
mov
dec
enter
mov
lock
dec
pop
leave
iret
pop
fisttpll
push
jnp
sbb
jecxz
xor
sbb
xchg
xor
mov
sub
bound
mov
daa
inc
jne
fldenv
fisttpll
pop
mov
imul
mov
mov
loop
dec
jge
outsl
sub
cmp
fadds
push
cmp
sub
sbb
mov
pop
repz
fwait
xchg
lahf
enter
cmp
mov
xor
xor
mov
iret
test
xor
jno
into
xor
movsb
push
xchg
cld
lret
roll
daa
outsl
pop
sub
mov
lea
lahf
and
dec
movsb
push
test
outsb
jo
mov
mov
fildll
outsl
jp
pop
addr16
add
sti
rorl
bound
shlb
jb
insl
in
lcall
sarl
and
mov
shll
popa
test
sti
push
sub
cmpsl
jmp
push
push
xchg
shrl
fstpt
fimull
enter
fstps
cmc
arpl
out
dec
aaa
aaa
test
push
jnp
jp
ffree
mov
movl
rcll
dec
mov
mov
hlt
movsl
outsb
in
js
xchg
lcall
in
mov
mov
jg
std
mov
cmp
sbb
xor
add
or
xor
loope
ds
loop
rcrl
daa
lods
xchg
lock
jno
arpl
mov
sbb
mov
inc
xchg
inc
jo
jae,pn
mov
xor
inc
mov
ret
fwait
push
push
cmpsl
xlat
jmp
pop
movsb
aad
xor
stos
mov
imul
in
aam
inc
jb
mov
pop
xorl
jne
adc
ljmp
jbe
addl
fwait
adc
mov
or
push
fwait
sub
aas
pop
mov
pusha
and
adc
mov
notb
dec
mov
test
cmp
and
dec
mov
orb
in
mov
je
lods
push
imul
outsb
ds
outsb
scas
xchg
fldt
insb
jno
test
add
hlt
ror
mov
dec
jge
sar
fidivrl
outsb
enter
add
mov
jp
mov
loopne
mov
cmp
pop
cmp
ja
mov
mov
idivl
ja
aaa
jno
idivb
dec
and
mov
mov
xchg
insb
xor
sbb
sti
sbb
dec
mov
add
in
sub
or
ret
ja
mov
add
sahf
dec
push
insl
imul
pop
mov
cltd
jmp
push
pop
mov
dec
filds
and
mov
jmp
imul
inc
inc
aas
mov
daa
xor
dec
add
in
or
mov
sti
dec
popw
dec
cwtl
push
mov
lret
adc
adc
jb
and
in
mov
pop
ret
incl
mov
stc
jp
cmp
cmp
mov
pushf
sbb
jae
pop
pop
jns
sbb
add
or
aas
test
mov
mov
repz
divl
pusha
add
mov
outsl
or
pop
popa
jo
insl
daa
mov
xor
inc
cmpsb
mov
sbb
jbe
jl
stos
cltd
sub
cmpsl
int
sub
int3
xor
add
cmp
push
push
js
push
out
pop
xchg
lcall
imul
fs
jp
cmpsb
sub
ss
hlt
lret
lds
push
xchg
adc
push
stc
mov
pop
addr16
jmp
data16
jno
push
in
icebp
pop
mov
lods
outsl
sub
mov
jl
mov
add
jg
cmp
pop
leave
outsb
mov
xlat
inc
add
outsl
push
ret
addr16
mov
rcr
fwait
xlat
mov
stos
lret
ret
mov
push
in
cs
inc
int3
mov
popf
xor
add
mov
mov
mov
jmp
adc
dec
arpl
inc
xor
lret
and
or
cmp
dec
xchg
int3
xchg
fs
cli
sub
xor
add
push
mov
js
mov
cmp
call
call
rolb
mov
adc
sub
call
lods
push
call
enter
xor
in
jecxz
lret
dec
int3
sbbb
fnstsw
in
jbe
xlat
loope
out
mov
movsl
cmp
js
dec
insb
addr16
out
loop
jne
outsb
pop
jp
fistl
cmp
pop
cmp
aad
pop
jbe
add
imul
in
push
xchg
cmp
in
cmc
dec
iret
mov
out
mov
jb
rcl
jns
mov
xor
mov
pop
add
out
fdivrl
clc
cmc
sub
dec
push
insl
add
push
imul
and
outsl
jne
sti
sub
mov
inc
jge
in
insb
xchg
dec
xchg
sub
mov
push
sub
xchg
cmp
sub
dec
mov
mov
mov
mov
cwtl
inc
dec
push
sbb
std
push
or
mov
inc
fwait
dec
mov
cmp
jno
jbe
add
adc
dec
xchg
fstpt
repz
in
xor
imul
pop
fimuls
cld
sbb
cmc
insl
rclb
push
out
inc
pop
loop
jp
mov
bound
sub
add
stos
jp
out
xchg
mov
and
and
mov
cmp
shlb
mov
fistpl
cmp
jmp
jg
sbb
das
jno
add
icebp
outsb
nop
jl
xchg
lret
in
sti
cmp
xchg
cs
insl
dec
cmp
adc
daa
inc
out
js
fcoms
cmp
adc
inc
xchg
ret
dec
aas
mov
sbb
sub
aaa
inc
cs
or
jns
stc
cmc
xor
jne
in
scas
adcb
add
dec
mov
ja
cmp
movsl
les
pop
and
jp
jb
jecxz
cli
or
xor
xchg
adc
dec
and
cltd
sarb
popa
movsl
sti
ja
data16
je
and
mov
mov
add
movsl
jb
cmp
xchg
cmp
sub
outsl
mov
cmc
mov
inc
sub
decb
aas
xchg
iret
fildl
das
repz
cmc
mov
mov
ljmp
movsb
pop
adc
out
pop
repz
iret
cmp
bound
push
mov
icebp
pop
imull
adc
fscale
into
push
js
pop
in
push
scas
cmp
dec
mov
mov
sub
push
out
jnp
into
repz
sti
push
sti
ror
add
xor
cli
mov
hlt
arpl
out
imul
cmp
cmp
movsl
mov
jns
popl
cmp
mov
add
and
pop
aas
mov
mov
xchg
or
pop
in
push
inc
xchg
rep
dec
nop
je
stos
or
push
movsl
imul
fidivs
adc
mov
es
out
inc
push
outsl
ret
ret
ficomps
mov
mov
add
or
push
je
xor
int3
mov
xor
mov
add
mov
repnz
jle
push
ljmp
imul
aad
jbe
jbe
lret
mov
mov
lret
movsb
std
sbb
jp
xchg
mov
add
sub
dec
mov
cmp
dec
fstpt
mov
mov
inc
mov
clc
rcrl
out
stc
mov
repz
stc
pop
addl
hlt
lret
sub
ret
mov
leave
dec
xor
mov
lds
mov
out
imulb
cmc
int3
push
stos
fnstcw
call
add
lock
in
push
cmpsb
xchg
cmc
and
fs
enter
xchg
std
es
mov
push
or
jno
enter
je
pop
movsb
xchg
add
sbb
or
call
sahf
push
data16
loopne
and
jp
adc
xchg
xchg
mov
ret
adc
les
mov
dec
xchg
mov
fstps
js
cli
adc
dec
movsb
pop
jae
pop
enter
lea
aad
push
pop
xchg
or
mov
fst
loop
add
in
mov
push
fimull
in
mov
fldenv
mov
mov
cmp
sub
imul
stos
or
dec
and
pop
jecxz
adc
test
jns
add
mov
aaa
push
dec
out
test
fbld
jb
scas
jne
xchg
je
sbbb
jb
leave
mov
push
cs
enter
jae
fwait
cld
jns
stos
negl
lds
sbb
or
out
xchg
cmp
sti
lcall
iret
loopne
bnd
cmpsb
add
jae
fidivl
jmp
cmpsb
pop
cmp
add
loope
push
xlat
cmc
out
adc
pop
mov
xchg
cmp
test
or
data16
xchg
cmc
cmp
mov
pop
cmpsb
lds
xchg
fcomps
dec
imul
cmp
mov
mov
mov
filds
fwait
mov
jmp
jo
xor
cmp
jle
push
out
jmp
iret
sahf
bound
mov
pop
in
or
jecxz
imul
in
mov
sub
mov
jae
neg
lret
mov
lock
push
imul
xchg
xchg
jns
es
mov
jae
jno
fstpt
cmpsb
mov
mov
xchg
adc
sub
data16
mov
lret
xchg
mov
insb
rcll
mov
je
enter
das
xorb
jp
and
stos
add
rcr
popa
cmp
mov
std
ffree
dec
and
lock
rcl
fbld
lret
out
addr16
cld
ja
or
mov
aaa
jg
xlat
rep
movsb
xlat
mov
push
add
js
stc
xchg
hlt
imul
cmp
jg
scas
xlat
adc
scas
rorb
ljmp
cmp
test
loop
test
mov
adc
cmc
arpl
icebp
imul
sbb
pop
mov
rorb
mov
push
xor
dec
mov
insb
jbe
inc
add
jmp
in
push
fucomip
inc
mov
fcmovnu
outsb
hlt
adc
je
dec
cmp
sti
fstpl
mov
movsb
test
and
in
mov
sub
mov
jge
int
pop
inc
test
or
xlat
sub
hlt
cmpsb
mov
testl
aaa
sbb
mov
mov
loop
xor
cmp
test
outsb
aam
add
sub
mov
sub
test
push
sbb
fistpll
sahf
dec
mov
flds
sti
and
ljmp
mov
push
ffreep
fucomip
xchg
in
leave
pop
cmc
mov
and
fisubrl
sub
sahf
adc
dec
inc
in
jl
mov
pop
mov
fiaddl
jecxz
sbb
adcb
sahf
loopne
sti
mov
pushf
fbld
lcall
data16
jg
imul
out
mov
jmp
inc
adcw
aas
cld
lahf
jns
fidivs
fwait
cmpsl
sarb
or
mov
cli
std
movsb
sbb
jno
lods
cmovne
les
push
mov
dec
mov
movsb
mov
adc
pop
push
ljmp
sub
lea
inc
rcll
push
mov
fisubrl
aam
dec
pop
scas
repz
leave
pop
addr16
imul
sbbb
and
fwait
jmp
inc
pop
fiadds
cli
adc
ljmp
or
push
and
insb
dec
fcompl
imul
sbb
sti
pop
mov
mov
push
lcall
pop
adc
addr16
mov
mov
arpl
cmp
jns
gs
fisubrl
pop
jbe
shrl
pop
loopne
lds
inc
subb
jns
mov
pop
add
sbb
data16
inc
scas
fistps
pop
push
mov
push
enter
gs
sbb
das
sub
push
out
out
sbb
mov
inc
cli
push
dec
popa
push
lock
adc
pusha
fisubrs
fistl
mov
int3
imul
imul
adc
mov
pushf
pop
int3
pop
cmp
adc
inc
xchg
sub
mov
mov
dec
xlat
mov
and
ss
xor
mov
in
jb
pop
out
stos
cmc
fstl
leave
and
test
push
xchg
ds
jb
insb
sub
mov
mov
shrb
jp
jp
ds
jns
cmpsb
loope
xchg
insl
out
adc
or
jle
cmp
and
jb
test
and
nop
push
push
js
jno
pop
outsl
inc
inc
or
out
mov
sbb
fnsave
jno
stos
lret
pop
dec
push
sbb
mov
sbb
lea
cmc
jbe
addr16
stos
outsl
mov
jp
dec
sbb
shrl
cmc
mov
jo
mov
movsb
sti
filds
lahf
jno
and
xchg
adc
test
or
dec
cmpsl
nop
jp
test
sarl
mov
mov
mull
mov
push
push
into
add
jb
inc
inc
lret
movsb
inc
fildl
mov
xor
mov
or
xor
pop
jg
mov
movsb
lods
fucom
out
mov
sti
adc
scas
pop
mov
adc
cmpb
out
mov
call
icebp
clc
mov
jecxz
fwait
jecxz
cmp
jp
mov
fdivl
ds
or
add
jp
dec
cmp
adc
xor
dec
mov
jecxz
jl
sub
lret
and
imul
orb
cmp
pop
movaps
out
sarl
jecxz
or
stos
jb
mov
mov
in
mov
sub
and
or
dec
aad
inc
call
fnstsw
je
or
mov
es
aad
jp
mov
dec
push
xor
scas
push
mov
cmp
je
pop
lods
mov
idiv
mov
cmp
xchg
test
pop
in
leave
lock
xchg
jne
push
div
insl
aad
in
pop
jmp
mov
daa
lds
sub
rcll
mov
jp
test
cmp
cmp
or
and
rorb
and
cmc
cmp
imul
push
daa
popa
scas
xchg
mov
shrd
pop
mov
ret
pop
cmp
fstl
rorb
pop
sti
roll
mov
ss
xchg
sarl
mov
sub
divb
mov
ds
sub
push
fdivl
jo
outsb
lods
hlt
sub
mov
in
incl
dec
cmp
clc
sbb
pop
adc
jp
mov
inc
push
or
xchg
or
shll
sub
xor
jae
sub
movsb
mov
and
fcmovnu
push
xchg
jge
call
mov
pop
stc
in
sub
jbe
jecxz
cmp
dec
les
pop
fstl
mov
mov
xchg
mov
mov
test
mov
fcoml
in
pop
sub
clc
jbe
repz
cmpsl
sub
mov
jbe
cmp
cli
test
dec
aam
in
xor
jmp
jns
inc
ja
jbe
sti
add
daa
jecxz
cmpsl
mull
jmp
mov
insb
push
add
outsl
ret
arpl
jl
aad
fsubrl
stos
mov
imull
test
out
pop
and
xchg
enter
jmp
addr16
dec
or
in
nop
mov
cmp
jbe
xchg
sub
inc
jns
cmpsl
in
int3
mov
fs
stos
mov
fldcw
ret
push
jl
inc
push
and
test
cltd
push
sti
fidivl
insb
mov
repz
jp
add
shr
jge
jecxz
adc
mov
in
jnp
mov
addr16
fs
mov
mov
fstl
out
sahf
lcall
in
ja
cmp
call
jmp
push
or
sar
jno
movsb
cmpsb
subb
jp
ss
sahf
rclb
ljmp
into
adc
test
sbb
mov
pop
mov
arpl
and
addl
imul
mov
add
inc
or
and
stos
stc
mov
xchg
mov
pop
mov
out
mov
dec
scas
test
loopne
mov
adc
mov
push
add
scas
pop
in
dec
sub
ja
add
mov
mov
xor
or
enter
or
sbb
aad
dec
stos
adc
pop
es
push
cmp
stc
push
push
jecxz
jne
pop
fnsave
mov
sbbb
dec
cmc
subb
data16
call
adc
gs
out
js
bound
roll
push
and
adc
stc
dec
mov
les
out
jnp
jle
loopne
in
push
ret
cld
mov
repz
mov
mov
ja
shr
jmp
bound
addr16
pop
mov
pop
or
pop
jg
push
jb
int3
loopne
push
sub
cmp
ljmp
xchg
aam
sub
pushf
sahf
fwait
nop
fldcw
sub
or
sti
inc
mov
inc
jmp
pop
mov
push
aas
xor
mov
and
icebp
lods
sub
or
xchg
pusha
or
rcrl
mov
fnstsw
fstpt
test
push
and
or
inc
push
sarb
movsb
out
adc
std
dec
mov
bound
fldenv
mov
mov
xchg
jb
outsl
aam
aas
cmc
cwtl
popa
xor
mov
mov
mov
imul
pop
into
push
mov
cld
or
adc
js
repnz
mov
shlb
or
jmp
push
loop
pushf
cmc
xchg
sti
push
inc
sub
push
jbe
mov
adc
push
mov
daa
or
dec
sbb
cli
imul
add
sti
mov
mov
stos
pop
add
rorl
mov
dec
cwtl
or
jns
push
int3
inc
sub
clc
fwait
push
and
pop
sti
inc
push
jp
mov
cmp
je
push
cmp
jns
das
cmc
mov
push
ret
xchg
add
iret
ficoms
data16
inc
in
mov
push
rolb
push
lds
cli
ljmp
int
cmp
mov
push
jmp
imul
sbb
icebp
mov
inc
in
mov
imul
loope
adc
mov
cmp
add
or
push
xor
sub
sahf
mov
mov
stos
lock
lahf
xlat
jle
dec
test
mov
add
lret
in
les
pop
and
std
repnz
jp
inc
cmp
sub
or
lock
sub
jns
outsl
cmp
out
mov
mov
lods
add
jl
xor
dec
shll
push
scas
mov
inc
mov
mov
lock
sub
in
push
mov
cmp
adc
adc
scas
js
mov
mov
jae
mov
pop
cmp
orb
sbb
dec
pop
sbb
xchg
imul
sbb
cmp
ret
jle
sti
cli
pop
stc
jp
negl
sub
fimull
daa
fldenv
es
jmp
cmp
dec
shrb
inc
mulb
mov
jp
sbbb
push
movsb
pop
sub
pop
sub
inc
and
mov
sti
lahf
cmp
ficoms
sub
push
stos
cmc
in
fbstp
inc
inc
enter
jbe
ds
inc
or
movsb
lcall
mov
mov
lret
and
mov
ret
push
inc
jo
stos
jns
jo
fstps
lods
sbb
jecxz
mov
in
push
push
xlat
shr
sti
dec
dec
hlt
cwtl
arpl
mov
fs
push
pop
sbb
jle
stc
and
sahf
add
jo
sub
sub
ds
mov
jne
test
or
mov
ljmp
jne
stc
in
js
push
adc
jbe
xor
insl
jae
aad
popf
imul
lock
dec
movsb
lds
add
mov
sub
aad
push
cld
push
arpl
repz
cmp
inc
or
dec
jns
dec
mov
mov
add
or
movsl
push
or
inc
bound
out
fldcw
decl
mov
fildl
ljmp
mov
hlt
pop
pop
adc
out
mov
mov
and
adc
sub
pop
aad
sbb
xor
dec
fucomip
pop
xchg
rcrb
jl
sub
dec
insb
lods
arpl
lcall
mov
pop
sbb
jge
pop
pop
xor
ljmp
mov
sbb
movsl
pop
pop
cmp
pushf
les
mov
jns
pop
cmp
mov
ja
jb
repz
xlat
stc
mov
cld
jmp
imul
mov
pop
cli
mov
xchg
pop
imul
jp
mov
mov
jp
dec
mov
pop
inc
cmpsb
data16
leave
scas
fdivl
enter
and
mov
cltd
xchg
fistps
sub
lea
dec
pushf
das
mov
pop
in
sarl
mov
addr16
push
rolb
dec
movsb
sti
mov
mov
mov
pop
dec
leave
pop
mov
out
leave
cmp
lcall
sub
cmpsb
aas
pop
sbb
jp
fdiv
std
sub
pop
dec
jno
lret
test
jno
xchg
rol
sahf
shl
cmp
mov
or
test
pop
dec
mov
stos
pop
pop
lods
inc
lahf
dec
fwait
dec
mov
mov
sbb
jns
mov
outsl
dec
sub
cld
out
mov
mov
pusha
mov
pop
aas
pop
cmpsb
in
cwtl
ror
addb
mov
rcrb
mov
lret
xchg
cld
ficoml
push
mov
pop
les
push
dec
sti
xchg
test
inc
xchg
push
mov
push
xchg
repz
mov
out
stos
jmp
fnstenv
mov
jmp
push
push
mov
ja
xchg
mov
pop
pop
jp
sti
cli
cld
icebp
pop
jae
sub
adc
pop
out
sbb
shll
sbb
mov
out
mov
or
jb
sbb
dec
xlat
mov
fstpl
bound
push
push
es
pop
fildll
pop
pop
stos
sbb
push
xchg
cwtl
out
or
push
mov
clc
xchg
out
out
dec
push
frstor
jo
jns
xor
add
lock
out
cwtl
pop
pop
pop
xchg
or
push
mov
dec
push
ja
repz
jo
or
push
mov
xor
bound
push
movsb
cmp
mov
fstp
cwtl
xchg
test
sub
pop
sbb
loop
lods
mov
insb
mov
adc
sysenter
int
cmp
jbe
pop
pop
dec
in
jle
pop
push
sub
or
or
popf
pop
or
push
and
cmc
dec
fnstsw
aaa
pop
shrd
mov
sub
lcall
fchs
jmp
fcmovnb
or
xchg
mov
idivl
cmpsl
or
sbb
jmp
lds
mov
lock
fists
sahf
xchg
xchg
xchg
out
xchg
pop
pop
addr16
xchg
fisttps
notl
xchg
out
scas
xor
addr16
xlat
movsl
das
mov
loop
jg
sti
xlat
xchg
push
outsb
xor
or
mov
stc
adc
mov
nop
pop
push
neg
mov
pop
out
out
dec
imul
ja
push
mov
fcmove
cmpsl
xchg
aam
test
mov
test
fcmovnu
cmp
mov
pop
mov
pop
popf
ficompl
sbb
movsb
pop
add
adc
xor
pop
jmp
test
ja
stos
imul
cmp
xor
pop
lock
out
jae
jns
push
jp
mov
ret
clc
das
pop
test
cmp
pop
jge
push
shlb
sub
pop
loopne
insb
ljmp
popf
add
add
je
adc
mov
pop
aaa
dec
pop
jbe
sti
jbe
cld
clc
cld
pop
mov
imulb
ss
gs
xlat
add
stos
decl
cmp
sti
je
cmp
dec
mov
hlt
aam
mov
loop
push
mov
out
or
subl
leave
or
add
jge
pop
lcall
mov
mov
sbb
pop
fdivs
imul
lcall
mov
ret
mov
fidivs
sbb
clc
push
fdivrl
mov
popf
ja
mov
sarb
lret
lcall
out
pop
divl
xor
bound
shr
dec
je
pop
test
hlt
bound
mov
push
pop
sub
jp
pop
fbld
popa
lret
jns
je
xchg
push
lock
sub
jp
out
jp
das
jp
outsb
mov
out
jp
cs
insl
pop
cli
lock
inc
push
lahf
je
mov
mov
cltd
mov
mov
mull
and
and
std
insb
sbb
push
repz
mov
sub
cmp
cmpsl
jp
mov
cld
cli
cli
cmp
lahf
push
jle
jns
dec
cld
mov
test
sbb
movsl
dec
shlb
enter
test
leave
jp
push
fwait
pop
mov
adc
mov
inc
movsb
mov
jno
repnz
adcb
daa
dec
clc
mov
in
ret
mov
fwait
jp
push
popf
int
js
stc
pop
in
xchg
and
mov
pop
ljmp
out
jbe
jmp
mov
addr16
mov
test
add
clc
ret
pop
insb
arpl
sbb
mov
andb
and
add
popa
inc
in
inc
clc
or
js
ret
nop
icebp
arpl
pop
cmc
pushf
lods
int
inc
imul
mov
xor
inc
jecxz
and
jnp
adc
test
loope
fistpl
sub
icebp
jp
sbb
mov
mov
pop
pop
mov
lret
shrb
popl
std
out
jmp
inc
mov
cmpsl
lret
ljmp
push
stos
push
cld
or
or
mov
fistpl
mov
push
js
cmp
cmp
mov
mov
lret
jb
arpl
sub
addb
scas
fildll
adc
iret
mov
aaa
jb
mov
jbe
sub
pop
lcall
cli
cmp
mov
sbb
xchg
icebp
arpl
stos
pop
roll
in
inc
pop
pop
push
mov
imul
popf
inc
dec
mov
mov
pop
xchg
and
cli
divb
adc
shlb
jbe
pop
xor
lea
sti
icebp
int
ja
adc
xchg
mov
in
jp
or
out
addr16
mov
loop
js
outsb
popa
aaa
xorb
pop
lret
subl
pop
xlat
mov
jmp
daa
pop
cmpsl
pushf
inc
jmp
loopne
fbld
sub
mov
sub
mov
lods
jp
push
mov
aaa
mov
scas
fxch
add
pop
pop
push
test
pop
and
insb
inc
stos
in
stos
sub
sub
mov
cmp
mov
xlat
aaa
imul
insl
xchg
subl
inc
jnp
adc
jecxz
pop
push
pop
std
mov
push
jne
push
mov
dec
xchg
data16
je
dec
adc
jmp
mov
cltd
shlb
lock
shrl
mov
test
jecxz
insl
inc
mov
mov
push
data16
cmp
mov
or
fimull
or
data16
dec
in
jbe
xlat
addr16
out
out
mov
mov
and
leave
pop
out
cmp
je
mov
adc
jno
push
cmp
pop
loopne
mov
xchg
cmpsb
sub
sub
inc
icebp
ja
sub
inc
push
in
pop
push
andl
jp
clc
pop
fists
add
jbe
jo
or
jp
iret
and
mov
xchg
sbb
lahf
loop
dec
shrb
and
ret
inc
lods
adc
popf
xor
push
mov
add
xor
inc
inc
jbe
jmp
mov
out
pop
jae
stos
mov
mov
xor
test
das
test
mov
pop
jno
arpl
call
out
imulb
inc
mov
js
loope
cli
sarl
imul
and
stos
inc
aas
mov
xchg
and
jmp
jns
jge
loop
add
popf
push
dec
mov
xor
in
jp
mov
loope
or
sub
mov
and
xor
adc
jb
arpl
mov
add
lea
jmp
cmpsl
cld
add
cmp
lret
pop
mov
mov
pop
mov
cmpsl
mov
mov
adc
push
pop
inc
xchg
ja
fsubrs
mov
stos
cs
stos
push
inc
hlt
pop
inc
push
mov
andps
cmp
jecxz
pushf
cmp
mov
push
aaa
mov
mov
pop
jecxz
and
lret
repnz
cmp
mov
pushf
sbb
xor
inc
mov
mulb
out
xchg
cmp
ss
in
stc
xchg
ja
xchg
out
insb
jmp
mov
iret
sbb
dec
test
or
gs
pop
not
in
leave
mov
jae,pn
adc
popa
data16
cld
push
jae
mov
jbe
jmp
in
test
push
jae
xor
dec
lahf
js
ljmp
lret
sbb
fldl
mov
xor
cmp
xchg
fmuls
andl
out
fs
push
repz
div
pop
push
and
cmp
js
into
dec
cs
jp
xchg
enter
sub
mov
or
cmpsb
in
cmp
sub
dec
lret
arpl
gs
imul
aad
push
push
jne
mov
and
fst
inc
xor
stc
jle
cltd
sub
arpl
mov
inc
in
jne
mov
imul
sbb
cmc
cmpsb
inc
mov
jbe
dec
dec
jl
lods
cmpsl
push
addr16
sub
cwtl
sub
test
mov
int
xchg
dec
inc
dec
in
xchg
movsl
mov
mov
fstps
fcmove
cld
out
dec
sub
repnz
in
stc
enter
mov
lods
jecxz
jbe
loopne
add
xor
sbb
mov
das
stos
in
sub
jle
cmp
jbe
popl
add
lds
es
jl
push
add
inc
in
leave
lcall
ljmp
push
ja
es
push
adc
cli
xlat
negl
xor
jecxz
push
xchg
xor
push
pop
test
inc
inc
xchg
sbb
stc
mov
mov
mov
mov
dec
movsl
pop
scas
or
cmp
jne
rcll
dec
cli
lods
sub
stc
pop
lock
mov
mov
push
aam
xchg
insl
cmpsl
sahf
xor
add
lret
add
add
cltd
out
lods
xor
and
push
in
insb
push
add
add
inc
mov
pusha
add
insb
pop
jne
mov
insl
mov
xchg
jbe
insl
push
jle
mov
add
lods
cld
mov
std
mov
xchg
push
in
fiadds
sbb
sahf
jecxz
jae
clc
cmp
pop
sub
mov
cmpsl
mov
adc
aas
stc
mov
push
jb
pop
inc
aad
or
mov
imul
mov
leave
out
fimuls
and
or
cmp
out
inc
jo
cli
in
adc
loope
fldcw
not
fwait
mov
jecxz
dec
fldl
bnd
mov
push
mov
dec
dec
pop
mov
in
cld
in
cmpsb
jns
dec
rcll
sbb
mul
cmp
mov
dec
rorb
popf
in
xor
sarl
cmp
pop
push
fisubl
jle
add
fwait
add
push
loop
pop
psadbw
inc
fwait
movsl
test
rcll
jmp
sub
xor
icebp
mov
push
ret
mov
imul
mov
addl
bound
inc
jle
and
test
sub
push
mov
mov
out
out
sub
inc
popa
lret
pushf
aaa
sub
in
jo
stc
xchg
sahf
cmp
ds
sub
dec
pop
imul
mov
xchg
or
jbe
mov
fcmove
and
icebp
or
adc
pop
cmp
pusha
cmp
inc
ss
out
and
push
imul
jle
mov
icebp
mov
movsb
pop
cmpsl
je
push
jns
xchg
push
data16
movsl
pop
rorb
push
fwait
cmp
cmp
in
dec
insl
sbb
rcrl
mov
cmc
aad
pop
push
test
dec
in
sbb
sti
and
mov
mov
sub
out
rcrl
and
sbb
mov
cmp
mov
jl
mov
jae
push
or
lret
xor
test
ret
neg
and
mov
fcmovnb
popa
jecxz
ret
sbb
mov
xchg
dec
lcall
cmpsb
mov
mov
and
push
push
push
filds
mov
testw
push
cwtl
cmp
xchg
bound
ret
cmpsl
jmp
icebp
cld
daa
mov
data16
push
int
cmpsb
fidivl
out
sbb
icebp
ss
subl
mov
push
lods
lods
out
lds
aaa
jno
jns
inc
xchg
cltd
xchg
xchg
xchg
imul
in
xor
mov
incl
jns
mov
jno
adc
jmp
jecxz
lret
data16
cli
xor
imul
xchg
lret
and
int3
ds
jmp
das
pop
sub
lret
out
pop
mov
dec
mul
xchg
xchg
mov
ret
dec
pop
ficomps
inc
in
mov
stos
jp
aaa
enter
movsb
shr
imul
push
les
jecxz
es
mov
fstpt
mov
mov
scas
loope
jbe
repnz
in
into
shl
jl
or
push
push
dec
js
mov
and
ret
fisubs
pop
js,pn
xchg
faddl
dec
insl
or
subl
dec
loopne
aaa
mov
pop
push
jne
decl
inc
leave
lock
and
mov
inc
add
aaa
adc
push
outsb
mov
lahf
mov
cmp
fidivrl
and
jecxz
add
movsb
ss
dec
cmp
cmp
cmp
inc
inc
dec
dec
jbe
out
ret
mov
mov
cwtl
fucomip
cmp
mov
out
in
insb
cmp
in
pushf
push
movsb
dec
adc
jecxz
jmp
enter
push
js
add
loope
dec
lahf
sub
pop
add
and
adc
addr16
sbb
push
mov
add
arpl
dec
mov
adcl
shrl
add
fistps
test
ds
mov
inc
mov
jecxz
test
or
or
rcll
data16
scas
dec
mov
scas
popf
or
pop
mov
icebp
leave
pop
inc
push
pop
aas
fdivrl
push
pop
or
jl
add
sbb
popa
nop
les
test
jle
shlb
sbb
jmp
dec
imul
bound
sbb
cmp
out
inc
mov
xchg
jae
inc
mov
int3
pop
fldenv
sub
pop
xchg
stos
mov
lea
pop
jecxz
pushf
jb
push
xchg
inc
mov
cmp
adcl
insb
arpl
pop
es
fdivrs
mov
and
push
push
in
insb
xchg
cmp
mov
neg
sbb
scas
mov
popa
mov
imul
rcrb
pop
sbbl
dec
xchg
sbb
adc
inc
adc
mov
lock
jne
divl
sbb
mov
imul
push
lcall
popf
rcr
jns
jo
cmp
push
pop
mov
subl
mov
mov
mov
add
cmpsb
std
out
mov
lret
in
test
pop
mov
lods
jo
cs
imulb
scas
mulb
lret
mov
movsb
idivl
imul
lahf
insb
mov
push
jge
jns
int3
pop
andb
je
xchg
leave
sub
pop
test
or
aad
adcl
dec
jp
mov
push
cmp
scas
outsb
out
addl
sub
ret
mov
aad
data16
out
arpl
in
add
pop
cmp
pop
dec
jg
imul
ret
dec
mov
cli
idivl
cmpsb
xchg
leave
sub
inc
sbb
adc
sbb
int
in
jg
jb
cmp
ljmp
cmp
lahf
jecxz
cmpl
fldt
aad
dec
iret
push
sti
mov
cmc
xchg
dec
int
sbb
test
add
adc
or
sub
mov
mov
jae
stos
stos
in
movb
scas
or
mov
dec
jmp
push
pop
cmpsb
aaa
aas
and
jbe
insl
imul
jmp
inc
mov
ret
lea
hlt
sub
mov
fwait
mov
dec
add
or
insb
mov
iret
cmpsl
push
leave
andl
incl
fcomps
in
mov
jbe
sub
pop
call
sbb
push
mov
add
adc
jns
and
cld
fildl
test
outsb
sub
js
pop
or
mov
xlat
fcmovb
xchg
push
mov
sub
imul
movsl
inc
outsb
mov
xlat
pop
call
pop
mov
jecxz
push
push
ljmp
rolb
dec
pop
and
aas
jo
stc
inc
test
ficoml
and
add
cmp
xchg
movsb
push
jp
or
jbe
das
mov
mov
and
mov
xorb
xchg
inc
aad
notb
cmp
insl
or
imul
imulb
dec
xchg
movsb
pop
test
movsl
lods
negb
cmp
es
fiadds
xor
lret
lock
movsb
lret
mov
dec
push
stos
and
negl
cld
sbb
pop
push
into
pop
and
push
jp
cmp
leave
cmp
mov
pop
inc
lret
sub
dec
mov
fdivl
pop
cmp
scas
ret
mov
mov
jbe
loopne
pop
and
and
mov
mov
scas
push
cmp
clc
aad
iret
mov
repnz
shl
xchg
out
gs
arpl
or
adc
add
sarb
aad
push
outsl
or
push
jbe
jp
pop
cld
cmp
or
pop
jmp
daa
ja
aad
fnclex
jl
inc
loop
cli
loopne
xchg
in
shr
mov
hlt
jecxz
sub
fs
or
mov
mov
test
inc
cmp
and
push
jp
add
mov
imul
imul
outsb
or
ret
testl
jb
cli
enter
cmp
mov
xlat
mov
mulb
in
and
loop
jl
leave
jg
daa
xchg
jne
lds
pop
test
mov
out
cmpsl
jne
std
cli
lds
imul
fnstsw
fcomi
xchg
cmp
or
loopne
outsb
lods
mov
sub
aad
fwait
and
fisubrs
call
imul
push
call
jl
sub
sub
aas
cmp
fwait
push
cs
stos
mov
fldenv
jae
pop
jno
push
push
shl
adc
in
or
xchg
sti
push
push
dec
jp
test
cs
ja
fisubrs
lahf
mov
or
int
insb
push
cmp
in
jle
shlb
push
and
jno
les
inc
push
jnp
cld
aad
add
repnz
jmp
out
jmp
sti
call
jecxz
cli
test
push
or
adc
adc
pushf
push
insb
int3
and
pop
stc
jp
test
stc
test
sub
or
mov
and
or
test
inc
cmpsl
add
sbb
jl
int
mov
cld
insl
inc
cmpsb
jne
dec
imul
cmp
pop
mov
xchg
ljmp
cmp
jnp
movsb
jbe
cmpsb
in
mov
mov
enter
aad
jmp
sbb
sub
push
cmpsl
out
inc
mov
push
mov
sub
jmp
ret
nop
xchg
in
sahf
fwait
mov
xor
push
xor
pop
xchg
jae
pop
in
stos
ja
lock
mov
jo
das
cli
ret
fwait
mov
stc
cmpsl
xor
mov
lret
mov
sbb
sti
mov
xor
mov
fldt
popl
das
adc
jb
out
jle
push
mov
lret
pop
jno
xchg
mov
notl
cmp
xor
pop
jb
outsb
mov
mov
inc
jmp
push
push
jo
stos
jo
sbb
jg
shl
js
cmp
pop
jb
sbb
fstpl
or
mov
ljmp
out
mov
adc
pop
fists
mov
fs
repnz
imul
mov
sbb
push
dec
lret
inc
mov
addr16
jmp
add
sbb
lods
inc
out
je
pop
ljmp
cmpsl
lods
pop
mov
mov
cmp
fiadds
mov
ss
jge
mov
sub
sti
rep
add
mov
out
jo
and
sti
mov
insb
fistpll
outsb
adc
fldlg2
pusha
mov
mov
lcall
insl
dec
jmp
xchg
push
insl
adc
lret
loopne
gs
outsl
loope
inc
push
out
dec
push
push
jbe
scas
fildl
stos
or
jg
ja
jle
pop
stos
xor
movsb
int3
adc
jle
or
and
test
jl
add
add
jge
cli
es
or
pop
pop
and
cmp
stos
test
cltd
outsl
xchg
cwtl
out
in
push
test
inc
int3
xor
cld
movsb
cmp
jp
cmp
jmp
push
es
cli
xor
jns
xchg
inc
jl
scas
sbb
dec
adc
das
jne
lcall
pop
cmpl
in
xchg
test
mov
cld
inc
in
inc
jle
jecxz
jne
sub
cmp
push
xor
imul
int3
or
push
in
push
adc
and
jb
xchg
jns
push
jp
daa
pop
lret
shrb
icebp
in
sub
jg
and
aam
or
pop
ja
add
push
xchg
mov
cli
sahf
fidivs
inc
mov
dec
cmp
sbb
imul
lcall
xlat
movsb
sbb
fists
ja
lds
insl
aaa
mov
sbb
mov
test
push
adc
mov
ljmp
lret
aaa
aas
daa
sti
sarl
sbb
dec
js
mov
icebp
sbb
sub
lea
dec
aad
repnz
pop
push
push
xchg
or
pop
or
inc
xchg
jecxz
sti
pop
imul
mov
aas
mov
clc
dec
jecxz
in
mov
jae
xor
cltd
ret
sub
data16
jbe
inc
subl
dec
outsb
mov
je
out
outsb
out
je
and
dec
insl
mov
rep
xlat
in
mov
adc
sahf
adc
in
call
xchg
jp
cmpl
dec
lret
hlt
jns
stos
js
in
adc
jae
jp
pop
test
xlat
pop
out
fsubrs
or
outsb
pop
and
jns
addr16
mov
je
sbb
pop
cmpsb
in
addb
aad
filds
mov
push
mov
aaa
push
fmuls
fwait
sahf
and
subb
mov
shll
add
dec
mov
pop
es
mov
jp
cli
jae
push
push
js
scas
out
dec
cmc
das
xchg
pop
je
leave
jns
loopne
outsl
and
inc
push
lock
xchg
mov
aas
inc
je
es
cmc
mov
push
jp
cmc
push
mov
hlt
addr16
jae
imul
mov
jp
cmc
ss
jae
js
jecxz
test
cmp
jae
imul
cmpsl
cmp
or
ja
imul
fs
addr16
mov
cmp
ret
adc
mov
fistl
loope
pop
inc
push
ja
sahf
cld
jle
fwait
sbb
mov
xor
xchg
mov
mov
outsl
mov
sbb
stos
mov
dec
dec
mov
sub
sub
daa
aas
filds
fwait
repnz
jbe
cli
in
xor
jns
mov
test
outsb
mov
repnz
lds
nop
and
sti
outsl
in
movsb
inc
ret
int
jnp
enter
inc
int
pop
push
cmpsb
add
repz
movsb
mov
inc
xchg
inc
lds
sub
or
ret
lock
mov
mov
cltd
cmp
fnstcw
aaa
mov
pop
aas
stc
cmc
clc
adc
inc
ljmp
push
xlat
sub
bound
addr16
jmp
inc
pop
cmp
out
pop
xchg
divl
mov
mov
xor
imul
ja
jne
in
into
adc
js
daa
ja
xchg
inc
lds
or
negb
jnp
in
pusha
mov
sbbl
cmp
lock
sub
in
test
daa
insb
lock
jo
xor
dec
pop
cmp
popa
jecxz
int3
adc
push
cmp
jmp
mov
push
dec
sbb
jb
xchg
test
lahf
mov
xchg
cmc
loop
leave
cld
test
sti
push
xchg
mov
xor
jecxz
mov
mov
push
inc
lods
mov
movsl
xchg
mov
out
adc
inc
dec
pop
cli
stc
xchg
insl
hlt
lea
add
dec
mov
jns
loope
sub
sub
lcall
movsl
pusha
and
ret
mov
jge
gs
dec
mov
movl
ds
ss
into
gs
hlt
jo
test
push
push
stc
push
mov
or
sar
adc
pop
cmp
cmp
outsl
add
mov
pop
bound
clc
test
jmp
sti
sahf
push
mov
xor
fdiv
mov
xchg
sub
cmc
push
mov
or
jl
call
aas
push
mov
cmp
dec
jp
pushw
push
stos
shlb
cmp
push
adc
icebp
jp
pop
loope
shlb
xlat
mov
mov
aas
lock
xlat
ret
sub
mov
push
push
lea
pop
shll
cmpsl
sti
pop
ja
pop
jb
aas
lock
lea
stc
inc
icebp
cmp
xchg
mov
pop
idivl
jg
aaa
cwtl
cmp
rcrl
or
mov
in
cmp
cmp
bound
mov
mov
sub
lods
mov
xchg
cmp
pushf
inc
xor
pop
ja
adc
ljmp
ret
call
imul
das
dec
rcl
or
lock
sbb
push
pop
movsl
mov
inc
dec
and
cmp
push
rcll
fnstenv
inc
enter
push
cmpsb
and
mov
mov
jae
cmp
inc
stos
mov
outsb
dec
loopne
in
sbb
mov
adc
adc
pop
cmp
dec
jns
xchg
cltd
mov
push
icebp
enter
jp
dec
adc
or
mov
sub
leave
bound
in
repz
imul
mulb
mov
stc
cmp
mov
les
lret
and
sbb
mov
test
out
loop
lds
int3
pop
addr16
inc
pop
mov
push
jg
ljmp
jb
notl
sub
ja
fs
inc
xor
aas
push
loope
loope
in
inc
mov
cltd
je
push
mov
movsb
into
shl
out
out
in
mov
imul
lds
imul
pop
inc
xchg
mov
jp
frstor
mov
fwait
int
inc
mov
cmp
jne
out
dec
in
pop
or
hlt
jns
jmp
jecxz
lret
sbb
pop
dec
adc
push
dec
mov
outsl
dec
movsb
addr16
mov
in
pop
std
adc
cmp
push
pusha
sub
and
repz
repnz
outsb
ljmp
push
mov
fiadds
insb
outsb
and
inc
sbb
xor
ret
xchg
cmp
jecxz
lods
das
mov
mov
add
ljmp
xchg
push
sbb
mov
mov
cmp
jmp
mov
push
ret
and
fnsave
ds
scas
jno
lcall
push
cmpsl
and
insl
cmpsb
in
mov
out
lret
dec
inc
xchg
push
and
mov
fldenv
call
pop
loop
nop
jmp
inc
cmp
outsl
pop
xchg
daa
pop
test
cmp
enter
popa
test
in
sbb
cmp
sbb
mov
push
sahf
repnz
dec
cmp
gs
arpl
bound
loop
jmp
repnz
insb
loop
sti
mov
dec
es
es
in
mov
xor
cltd
dec
fcmovbe
sub
jl
stos
call
in
cli
pusha
jb
fwait
out
push
jle
jae
sub
sub
fcomps
js
push
clc
out
fucomp
mov
popa
hlt
cld
jecxz
data16
pushf
je
jae
iret
mov
divl
push
xchg
dec
lock
shll
out
lea
sub
clc
inc
out
inc
sub
xchg
pop
mov
mov
add
rcrb
nop
out
dec
loop
xor
out
pop
and
outsb
ret
mov
mov
out
cmp
push
scas
in
cmc
sbb
int
addr16
fsubr
or
repnz
jae
fisttpl
mov
inc
aas
sbb
sub
in
scas
mov
mov
jb
in
clc
and
rolb
pop
jecxz
mov
in
adc
sbb
dec
pop
add
push
mov
lcall
adc
notb
flds
mov
imul
addr16
in
mov
push
inc
and
cmp
mov
sbb
inc
pop
cmp
jp
xchg
mov
in
mov
aas
sti
and
xor
ja
mov
jo
notl
enter
lods
inc
in
pop
push
jp
fdivrl
jbe
inc
sub
test
stos
mov
pop
dec
fisttpl
push
mov
imul
dec
and
jbe
pop
mov
sbb
add
in
xchg
mov
cmpsb
cli
pushl
mov
or
cltd
xchg
and
push
and
imulb
rcr
pop
es
fsts
or
pop
adc
add
mov
in
mov
fwait
dec
sbb
sahf
dec
gs
aad
mov
clc
call
shrb
mov
and
repnz
cmc
movsl
inc
hlt
shlb
inc
jns
mov
les
or
pop
test
mov
mov
outsb
lds
addr16
pop
dec
xor
xlat
adc
inc
mov
in
cmp
mov
mov
sub
push
arpl
push
clc
mov
test
popa
cmp
es
mov
ss
push
jecxz
scas
xor
shrl
or
cmp
xlat
stos
rclb
push
mov
dec
cmp
in
cltd
ljmp
lods
sub
cmp
arpl
test
or
dec
cmp
xchg
sahf
icebp
fisttpl
mov
pop
out
in
fcompl
mov
notl
jno
push
mov
lods
pop
movsl
imull
je
ds
dec
mov
call
sbb
insb
and
jle
nop
push
gs
cmpsl
clc
sub
dec
mull
scas
mov
xchg
cmp
movsl
sbb
jmp
ret
ja
idivl
pop
and
xchg
jns
lock
pushf
aaa
mov
into
dec
pop
jns
push
push
jmp
outsb
shr
cmpl
out
out
roll
cmp
mov
popa
mov
test
jbe
adc
pop
jecxz
mov
repz
mov
or
cmp
lock
shl
ljmp
inc
inc
and
addr16
adc
jns
fwait
sub
ljmp
xchg
push
dec
push
add
cmp
stc
push
std
jne
test
jmp
mov
xchg
aam
lock
loop
shrl
sbb
sbb
in
in
mov
js
ret
sub
imul
orl
ja
jae
mov
pop
lcall
push
repz
cli
scas
es
out
fwait
insl
jp
jns
jo
jb
test
push
jno
in
out
in
xor
out
icebp
lods
gs
pop
sbb
jecxz
pop
outsb
jbe
or
sti
lods
jbe
in
xchg
mov
sub
ljmp
jae
lods
xchg
in
out
jbe
enter
mov
jmp
in
mov
xchg
in
mov
pop
lret
adc
lock
pusha
insl
push
inc
bound
call
xchg
mov
das
xchg
rcrb
or
cmp
xchg
sbb
fdivrs
fdivrs
push
cltd
push
in
and
ret
cwtl
mov
js
imul
cmc
fmull
in
out
arpl
sbb
mov
push
out
pop
repnz
mov
in
imul
stos
sbb
jo
push
and
cltd
cli
pop
dec
imul
in
aad
imul
inc
jl
mov
out
dec
fidivrl
fistpl
cmp
push
xor
dec
fmuls
sbb
dec
mov
in
lods
mov
inc
stos
cmc
lret
or
movsb
mov
ja
mov
dec
dec
mov
mov
jae
dec
push
sub
int
sub
loope
nop
aam
and
test
movsb
cmp
push
or
int
stos
mov
dec
and
movsb
inc
insl
push
cmp
xor
or
xchg
adc
lock
xor
data16
jmp
test
out
hlt
pop
aaa
or
enter
sti
neg
push
dec
sbb
mov
sbb
mov
cmc
cs
jmp
lea
sbb
loopne
and
mov
and
scas
je
sbb
insb
test
ds
out
popa
push
stos
jne
dec
jbe
push
xchg
daa
cli
imul
push
popa
and
fnstenv
push
inc
out
test
mov
ret
je,pt
push
adc
xchg
pop
mov
sub
out
out
pop
jp
pop
outsl
mov
push
dec
fisttps
mov
in
in
lods
and
jne
lods
adc
mov
pop
enter
inc
xor
sub
gs
scas
dec
aas
cmp
or
mov
les
insl
lahf
shrd
in
pop
xchg
movsb
outsb
pop
shlb
clc
xor
fnsave
aad
mov
mov
and
or
faddl
cmp
push
jecxz
mov
mov
xor
cmp
push
sub
dec
leave
sbb
cwtl
xchg
mov
and
clc
mov
jmp
xor
into
jp
xor
daa
adc
sbb
mov
lods
movsb
divb
mov
iret
hlt
shll
mov
addr16
pop
mov
je
cmp
xor
mov
adc
push
or
ljmp
sbb
push
push
mov
xor
xchg
scas
dec
push
pop
xchg
jmp
jbe
lock
scas
sar
test
int
mov
imul
iret
mov
fucom
call
movsl
xchg
cmp
cmpsb
pop
jp
jg
hlt
mov
ffreep
adc
mov
in
sub
enter
push
xchg
sub
mov
call
xchg
xor
int
ret
mov
imul
xchg
dec
xchg
xor
in
sub
jp
jns
ja
hlt
in
or
mov
sub
mov
mov
movsb
pop
and
jl
insb
mov
xchg
movsl
pop
aad
pop
ss
pop
stos
mov
xor
arpl
out
scas
stc
imul
jmp
jns
xchg
data16
cmp
adc
in
jns
jns
jmp
cwtl
jb
mov
push
jge
lret
dec
enter
jbe
ret
mov
insb
xor
mov
aad
mov
ljmp
fstpl
push
sub
shr
loop
cmp
mov
push
xchg
lret
mov
movsl
jle
mov
pop
mov
pop
mov
ficomps
pop
jns
pop
fs
rcrl
fdivs
push
aaa
push
leave
xchg
ret
fdiv
mov
test
dec
lock
xchg
cld
je
pop
sub
arpl
ja
insb
mov
jae
outsb
mov
pushf
aas
sub
jb
xchg
mov
add
xchg
leave
mov
repz
mov
test
push
jge
sbb
xlat
push
pop
inc
lahf
push
mov
subb
je
adc
jno
push
cmp
movsb
pop
push
ret
imul
mov
pop
inc
jp
lcall
ret
xchg
xor
mov
cmp
mov
sbb
stos
xchg
bnd
cmpsl
shll
mov
icebp
pop
or
and
mov
xchg
sti
xchg
arpl
jne
dec
inc
xchg
sbb
rcrl
orb
jo
popa
test
mov
xchg
out
jns
push
or
mov
cmp
sbb
jns
xchg
negb
push
jno
push
repnz
mov
xlat
and
int
jmp
pop
push
fwait
lods
clc
sbb
mov
les
jno
fwait
bnd
jbe
and
cmp
xchg
cmpsb
jae
dec
nop
push
or
xchg
sbb
in
sub
lods
jae
movsb
js
ja
insl
and
cmpsl
fdivs
movsb
repz
insb
fcmovbe
std
out
jae
in
leave
out
imul
and
in
mov
adc
cmp
pop
cmpsl
outsb
jmp
mov
sub
inc
sub
out
cltd
fwait
sub
aaa
pop
xchg
ss
bnd
and
ljmp
jmp
cli
sub
cld
push
sbb
and
mov
and
pop
jg
int
xchg
lret
and
cld
pop
dec
arpl
cmpsl
cmp
fdiv
sub
cli
mov
lcall
jl
stc
lret
pop
mov
decb
andl
jle
jecxz
hlt
mov
mov
test
gs
sub
inc
addb
sti
jo
mov
bnd
idivl
clc
fidivl
repz
dec
inc
ds
mov
je
insb
mov
pop
mov
and
add
stc
mov
sbb
sti
mov
mov
scas
cs
repnz
xchg
push
lcall
cwtl
adc
push
jmp
jns
push
pop
mov
dec
ds
xchg
mov
movsl
aas
push
push
adc
int3
outsl
dec
mov
imul
movsl
add
push
xchg
xor
fwait
arpl
xchg
cs
aam
pushf
sub
cmc
adc
or
push
mov
ficomps
mov
icebp
mov
add
push
mov
dec
imul
mov
in
sarb
xor
xor
jecxz
int3
subl
jecxz
lret
sbb
insb
inc
in
aam
fbld
fwait
and
roll
push
fadds
push
lret
jbe
xor
mov
movb
dec
and
inc
movsb
lcall
jne
dec
push
fistps
dec
sub
imul
mov
lret
pop
or
lcall
xor
adc
xchg
adc
lods
push
leave
fwait
add
pop
adc
jno
cmp
jg
push
lcall
pop
add
mov
lret
icebp
dec
aam
add
inc
mov
and
jecxz
rclb
jns
push
dec
movsb
pusha
fs
das
add
pop
cmp
lock
int3
lret
leave
inc
out
xlat
inc
jmp
add
addr16
lods
das
mov
mov
pop
in
in
cmp
sbb
dec
dec
or
fdivs
outsl
xor
sub
lret
cmp
add
leave
xor
mov
repz
stc
push
scas
cwtl
roll
out
push
jmp
mov
mov
pop
jp
push
pushf
lret
inc
loopne
jae
pop
stc
cld
dec
mov
div
inc
or
fwait
jbe
mov
stc
sub
pop
sarl
je
adc
repz
xor
xchg
xor
push
fwait
bound
xchg
jae
imulb
mov
mov
push
push
pop
out
inc
cs
das
inc
xor
mov
and
mov
xchg
inc
stos
stos
xor
int
push
sub
aam
sub
enter
mov
push
pop
pop
bound
xchg
dec
addb
mov
xor
repnz
cmpsb
ja
js
stc
sbb
jne
push
cmp
js
lcall
push
or
divb
jbe
inc
pop
roll
mov
and
repz
jp
mov
jmp
adc
aaa
jecxz
dec
inc
mov
sbb
rcrb
xchg
test
mov
aad
lcall
push
mov
push
sub
aaa
add
adc
mov
negb
out
cltd
in
dec
aad
xlat
jmp
jno
mov
pop
and
xorb
cmp
sbb
mov
jns
leave
call
sbb
and
out
outsl
sti
in
arpl
aaa
xor
mov
jne
outsb
loop
add
cmpsb
mov
pop
mov
test
stos
pop
pop
daa
xor
jno
xchg
popa
pop
rclb
and
jo
pop
clc
dec
outsl
enter
and
xorl
icebp
imul
cmp
mov
jnp
jecxz
jns
fwait
int
repnz
idiv
in
adc
jo
leave
enter
pop
sub
stos
insl
paddusw
dec
stos
mov
mov
in
inc
mov
cwtl
inc
repnz
mov
dec
sarl
stc
js
cmp
movsb
es
jno
out
in
fsts
jle
inc
inc
cmovb
inc
cmpsl
pop
cmp
out
jae
int3
ret
das
xchg
sarb
les
movsb
cs
ficoml
cmpsl
lret
dec
dec
iret
imul
or
jg
rcrb
mov
adc
cwtl
cld
fisubl
dec
outsb
popf
mov
in
mov
lods
andb
je
jg
cmc
lods
cmpsl
mov
ljmp
and
dec
cmpsl
mov
jae
xor
testb
jl
gs
mov
cld
dec
and
cwtl
mov
lcall
aas
sti
xlat
mov
inc
jecxz
test
sti
lods
cmc
lock
fstps
cltd
mov
les
or
dec
xchg
mov
jbe
or
xchg
xchg
mov
jbe
sbb
push
mov
mov
mov
sti
xor
loope
sbb
mov
xchg
or
sbb
push
mov
lods
call
mov
dec
dec
mov
mov
faddl
inc
jne
mov
in
cmp
lcall
inc
push
dec
mov
dec
and
pop
jmp
lcall
sbb
mov
cmc
sbb
or
aaa
fldenv
test
movsl
push
hlt
aad
xor
mov
ret
aad
jle
inc
pop
jns
mov
sbb
push
jb
and
aam
into
fadds
mov
cltd
movsb
clc
pop
jns
scas
jp
in
inc
xchg
and
imul
pop
lret
push
xor
pushf
mov
insb
je
sub
pop
out
mov
sbb
xchg
cli
sti
xchg
mov
pop
sub
cmp
xchg
cmp
push
addr16
jne
xor
js
mov
je
mov
add
out
push
cmc
cmp
sbb
mov
repz
xchg
aam
mov
aaa
pop
jb
das
cmp
push
mov
inc
sbb
xor
icebp
ja
lock
sahf
dec
loopne
ljmp
sarb
add
mov
fdivl
xor
jmp
repnz
cli
arpl
jmp
and
pop
leave
in
sub
leave
lea
push
fdivrs
repz
lret
jmp
sti
addr16
jmp
mov
lret
jno
bndstx
push
and
xchg
cwtl
mov
ja
scas
movsl
push
sti
mov
cmp
cli
mov
ficomps
fistpll
repnz
out
fldcw
xchg
je
outsb
cmp
scas
arpl
pop
mov
adc
int
inc
dec
mov
push
outsb
mov
add
dec
mov
mov
shll
repnz
aad
inc
pop
cld
mov
orb
mov
xlat
test
push
lret
in
stc
mov
cmpsl
xor
insl
movsb
sbb
test
sub
xchg
push
pop
mov
jecxz
arpl
loope
xchg
inc
mov
ret
movsb
cmp
inc
hlt
out
or
adc
mov
lret
xor
inc
hlt
enter
fbld
sti
jp
cld
inc
add
and
cmp
pusha
insb
sarb
imul
fnsave
repz
cli
inc
cmpl
stc
mov
dec
movsb
mov
insb
js
jb
fildl
bound
add
push
lods
cmp
mov
inc
in
sarb
pushf
fcomip
sub
pop
sbb
push
push
adc
adcl
mov
shlb
push
push
xlat
mov
mov
mov
sub
mov
lcall
cmp
addl
cwtl
jbe
shl
cmp
aaa
lret
mov
shr
cmpsl
mov
cmp
jg
xor
xorb
fidivs
mov
int
sub
ret
lods
mov
and
addr16
xchg
leave
push
lock
xor
cmp
adc
js
lods
fldenv
repz
add
lods
fstl
dec
xchg
lret
ret
inc
jae
pop
sub
es
dec
fucomi
push
lret
cltd
mov
cmp
push
pop
jns
jno
push
cmp
and
and
mov
and
mov
loopne
or
pop
add
cmp
fnstenv
dec
lock
out
lods
or
outsb
dec
xchg
addl
push
mov
sti
ja
fs
jg
divb
mov
or
insb
inc
pop
jns
xchg
push
lret
mov
inc
dec
imul
dec
rcrl
jecxz
jmp
adc
pop
outsb
jp
mov
mov
and
aaa
mov
mov
hlt
in
dec
pop
mov
xor
cmpsl
in
and
cwtl
cmp
imul
mov
lods
test
jns
data16
imul
lods
and
outsb
xchg
insl
mov
pop
and
sub
in
stos
xor
stc
sbb
mov
ret
adc
int3
fidivrs
inc
mov
mov
and
mov
jb
test
aas
inc
lea
sub
add
cmc
inc
sbb
xchg
sub
enter
mov
jb
jbe
cmc
cld
push
jp
xor
inc
dec
inc
cmpsb
incb
mov
push
imul
jb
outsl
insb
dec
mov
mov
lods
push
xchg
mov
mov
inc
insl
lret
mov
dec
mov
clc
xchg
or
pop
mov
fldcw
mov
xchg
out
jns
mov
cmc
mov
pop
clc
ja
in
iret
stc
in
test
fldcw
cmp
jp
aaa
bound
stos
add
sub
xchg
adcl
mov
mov
out
test
lods
add
pop
cwtl
adc
and
les
dec
dec
es
add
out
xchg
fistpll
loop
mov
sub
push
cmp
push
hlt
mov
stos
cmp
xchg
ljmp
mov
xchg
hlt
in
movb
adc
adc
ret
mov
jbe
mov
xchg
push
jo
sti
push
jp
mov
ljmp
cli
movsb
fcmovne
out
arpl
or
cld
jae
inc
pop
fwait
call
mov
xchg
in
into
push
pop
dec
push
and
mov
fwait
cld
jb
xor
popa
aaa
loop
out
in
mov
lods
push
cs
xchg
push
jp
testl
or
dec
aam
pushl
ret
jge
sbb
xchg
jns
mov
cmp
mov
filds
idivl
cwtl
xlat
jns
je
push
addl
pop
adc
sbb
in
sub
xor
insb
xchg
and
test
bnd
inc
in
pushf
cmc
popa
sar
ljmp
jne
stos
push
cwtl
pop
mov
and
stc
icebp
out
les
inc
not
fistl
negl
outsb
pop
or
push
out
jbe
divb
mov
scas
cmc
jo
loopne
cmp
clc
mov
in
cltd
icebp
sbb
in
mov
mov
pop
psubusb
mov
sub
and
mov
test
mov
sti
push
insl
dec
cmpsb
inc
jno
imulb
jae
add
mov
pop
jmp
cmp
xlat
inc
dec
int3
jo
xchg
nop
inc
jae
push
inc
and
int
jns
push
pop
cli
or
pop
xchg
add
sub
and
dec
sti
push
bound
lret
mulb
aas
insl
imul
cmpsl
cmp
aas
mov
mov
or
mov
sub
lock
jecxz
arpl
shll
push
push
adc
lahf
dec
cmpsl
push
push
es
adc
mov
mov
mov
push
imul
inc
pop
and
dec
push
pop
and
mov
addr16
ss
fwait
js
jge
jp
adc
xor
aad
cmc
or
xlat
jl
push
in
aaa
dec
mov
inc
pushf
jne
cmp
jp
ss
in
scas
inc
push
ret
lea
insb
jecxz
mov
or
jb
push
mov
ds
dec
cmc
jae
or
rol
push
mov
adc
nop
ss
push
jp
dec
lcall
xchg
push
fcompl
stc
fwait
add
cmc
in
outsb
mov
pop
fdivs
dec
popa
cmc
mov
sbb
cwtl
cltd
cmp
pop
out
xor
xchg
xor
cmc
jecxz
jno
sti
mov
ja
ret
sbb
dec
outsb
push
xor
xchg
jo
xlat
xor
add
dec
out
inc
in
addr16
pusha
cmp
mov
or
repnz
dec
or
in
dec
popf
jmp
ljmp
lds
ja
xchg
mov
fsubp
pop
dec
sbb
sbb
fisttpl
imul
or
jbe
loop
mov
cmp
add
adc
jbe
sti
sar
lods
mov
mov
icebp
mov
mov
movl
out
test
push
lock
push
pop
fwait
lahf
imul
outsb
push
inc
out
movsl
lock
aaa
and
adc
data16
fidivrs
lea
andb
cmc
inc
mov
jb
and
sahf
sti
jae
cmp
lret
lock
lahf
dec
out
jl
insb
fs
xchg
pop
push
jne
sti
dec
stc
popa
mov
dec
scas
data16
je
in
xchg
outsb
adc
addr16
sti
cmpsb
inc
scas
sbb
popfw
out
pop
and
cmp
cmp
sub
xchg
aaa
inc
and
icebp
sti
mov
inc
in
or
inc
dec
jg
fbld
inc
test
jmp
clc
jle
mov
sbb
sti
in
push
xlat
mov
imull
movsb
clc
cmpb
mov
and
scas
pop
mov
imul
mov
fneni(8087
mov
pop
push
mov
adc
mov
push
push
ja
xchg
cmp
pop
cmp
mov
pop
cmp
dec
adcb
leave
inc
mov
xchg
sbb
jae
jl
pop
std
dec
inc
cmp
adc
out
mov
fwait
lcall
cmp
stos
jl
mov
jae
cmp
int
lock
push
nop
and
arpl
fldenv
xchg
faddl
imul
sub
dec
fisttpl
mov
add
les
mov
inc
jae
sti
push
push
mov
jne
adc
sub
pop
cltd
repz
adc
push
mov
fucomip
inc
and
mov
repz
add
pop
ret
aas
fcmovu
cs
mov
notb
data16
sbb
xchg
xchg
lret
cmc
inc
xchg
sub
mov
dec
hlt
stos
adc
ds
or
mov
mov
arpl
sti
imul
xchg
push
mov
rclb
mov
dec
outsb
push
imul
mov
jne
aad
in
test
popa
subb
push
and
pop
test
data16
in
pusha
lret
lret
inc
scas
xor
movsb
jl
pop
add
test
imul
cmp
ljmp
or
arpl
xchg
pop
pop
pusha
jecxz
pop
hlt
or
or
jp
mov
push
into
pop
divb
out
nop
mov
jmp
stos
push
adc
aad
and
repz
cmp
dec
mov
add
in
stos
mov
cmpsb
je
cmp
mov
or
js
nop
xor
sub
addr16
mov
cmpsl
cmp
out
repz
cmp
dec
inc
lcall
cmp
jno
sbb
movsl
insb
fdivl
test
mov
movsb
outsl
jmp
call
enter
das
ja
enter
insb
popa
insb
pop
or
pop
sahf
adc
xchg
sti
arpl
pop
xchg
add
testl
fidivrl
cmc
jecxz
or
and
lods
shrb
aaa
jmp
js
lock
testl
mov
and
sti
fiaddl
lret
mov
jp
and
mov
cmc
ljmp
inc
sti
xchg
ljmp
sub
insl
jmp
mov
jmp
mov
sahf
fstpt
jne
test
dec
add
imul
pop
test
stos
mov
popa
in
pop
jb
subl
shlb
rcrb
pop
pop
mov
push
xlat
cmp
inc
sbbb
movsl
pop
jle
std
jp
pop
dec
mov
je
enter
popf
cmp
addb
inc
cli
aas
movsl
fiadds
lcall
sarl
add
add
jp
je
xchg
ds
lret
int3
and
mov
rorb
imull
pop
jmp
rol
out
outsl
es
and
xchg
mov
pop
push
in
data16
test
fsubs
lcall
lds
cmpsb
insl
adc
push
dec
fsubs
mov
fucomi
push
and
jp
add
imul
dec
mov
pop
ss
mov
xchg
sub
jo
push
lds
sub
mov
outsb
in
jp
js
mov
gs
movsl
imul
sbb
imul
jg
add
repz
mov
lcall
mov
out
mov
fdivrp
les
mov
and
mov
inc
hlt
push
dec
fsincos
mov
ret
movsb
mov
sbb
ficoms
popa
mov
pop
movsl
jne
fwait
jmp
dec
mov
cmp
jecxz
xchg
lds
xchg
stos
lods
testl
xchg
ljmp
xor
inc
lret
and
in
or
or
jbe
cmp
fwait
mov
mov
aad
mov
sub
stos
mov
loop
push
sub
mov
sub
cmp
or
cmp
pop
or
stc
in
dec
in
test
int3
sbb
mov
jb
push
pop
sub
inc
repz
in
fs
das
orb
and
repnz
call
or
repz
sub
cmpsl
out
insb
jmp
mov
inc
mov
fwait
scas
ja
insl
arpl
test
jg
loopne
fildl
mov
bound
push
xchg
dec
sub
mov
leave
stc
and
aad
iret
das
xchg
mov
lods
out
ljmp
cld
xchg
pop
aas
pop
das
stc
sti
add
sub
mov
xchg
or
push
cli
call
sub
push
addr16
cld
cmp
ds
cltd
scas
fstpt
mov
stos
cmp
jg
xchg
pop
mov
stos
inc
mov
pop
je
sti
nop
clc
add
dec
or
js
mov
imul
push
pop
xor
push
sbb
in
sbb
stc
pop
mov
in
mov
mov
mov
adc
xchg
scas
push
adc
lret
repnz
gs
add
test
jo
cmpsl
add
lcall
clc
jbe
cli
test
xchg
sbb
dec
out
push
and
dec
pop
movsl
es
das
mov
push
insl
rcrl
in
pop
stc
stos
sub
in
ja
mov
scas
dec
mov
fisttpl
jns
and
push
sti
mov
mov
adc
adc
sti
fwait
cmp
jp
mov
aas
pop
jp
fwait
clc
mov
jecxz
ss
dec
fwait
idivb
icebp
inc
xor
xchg
dec
dec
lock
jg
push
leave
mov
adc
rep
imul
cmpl
mov
add
mov
shrb
sub
cli
mov
mov
sub
sub
dec
mov
mov
cmp
hlt
sbb
or
test
in
lock
jecxz
repnz
inc
mov
fdivl
xchg
push
ss
xor
cs
adc
fcmovb
aas
dec
xchg
fucom
das
xchg
daa
imul
mov
pop
pop
lods
cmp
sbb
ja
popf
mov
sub
fidivrl
lea
mov
ror
adc
lock
jb
test
xchg
adcb
shl
push
xchg
loop
ret
sbb
in
insb
cmpsl
popa
icebp
cmp
enter
inc
xor
stos
out
stc
jo
enter
xor
in
mov
stos
mov
mov
icebp
inc
sbb
mov
test
cld
js
mov
fstpl
jae
imul
xlat
mov
push
jp
aaa
mov
inc
stos
clc
aas
push
imul
pop
pop
xchg
negl
fucompp
adc
shr
add
test
addr16
mov
jbe
jl
mov
add
sbb
or
push
xor
pop
add
lcall
repnz
mov
jecxz
in
pop
inc
imul
push
mov
test
inc
push
or
sub
sbb
hlt
mov
loop
cwtl
les
std
sbb
and
test
andl
dec
mov
imul
jno,pt
xchg
and
outsl
sbb
sbb
pop
mov
jecxz
sbb
fdiv
mov
or
mov
or
xchg
mov
sub
outsl
jmp
xlat
adc
out
xchg
movsb
push
mov
int
test
mov
in
xor
into
mov
jmp
repz
mov
or
inc
pop
mov
mov
test
daa
and
mov
test
aad
mov
inc
leave
mov
xor
cltd
dec
scas
jns
das
cmp
in
aad
mov
mov
ret
cmp
and
mov
lcall
ss
cltd
insb
push
add
call
sub
sbb
orl
pop
stos
sbbb
jbe
lds
mov
add
cmp
mov
xorl
cmc
stos
jmp
xor
push
iret
leave
sub
push
push
movsb
ds
xor
rcll
jbe
std
ret
or
inc
mov
int
pop
ljmp
data16
mov
rclb
mull
pop
pop
jmp
jbe
shr
ss
dec
adc
add
sbb
or
aam
mov
sub
xorb
xor
xchg
ds
jne
test
inc
stc
popa
dec
out
call
cmp
cmp
ret
outsl
mov
clc
lea
enter
insl
push
lret
out
pop
les
cmp
mov
xchg
xchg
sbb
pop
mov
out
cmp
aam
aas
je
aad
out
xchg
and
mov
sub
push
out
in
mov
xchg
and
jecxz
jbe
or
and
aad
xor
xor
or
jp
jns
mov
fwait
jp
mov
ljmp
gs
test
std
mov
dec
jl
push
add
sbb
scas
je
js
js
pop
dec
mov
xor
movsl
leave
pop
push
lret
dec
mov
imul
lods
cmpsl
jae
ds
cmp
mov
or
xchg
out
cmp
fwait
sub
xor
movq
orl
repnz
mov
inc
ja
mov
mov
mov
daa
xor
pop
sbb
sar
mov
cltd
jb
stos
jo
fstpt
test
ret
aad
in
dec
out
enter
movsb
adc
imul
and
xor
dec
dec
push
imul
jns
out
das
cmp
and
int
sbb
lahf
push
aaa
scas
lahf
in
inc
mov
outsb
push
or
mov
mov
fsubs
sbb
jecxz
lret
mov
fstpt
fcmovb
fbstp
jecxz
mov
mov
stc
and
jnp
pushl
adc
inc
pop
aam
add
jae
mov
lcall
je
xlat
into
addr16
xchg
dec
in
std
cmpsb
repz
mov
rol
adc
jns
je
in
movsb
add
cmp
pop
repz
ret
ja
or
popf
pop
mov
sbb
mov
test
xchg
in
inc
mov
sbb
sub
jl
inc
and
xchg
pop
int3
test
jecxz
fidivs
jp
xchg
mov
dec
into
test
inc
movsl
in
xchg
cmp
cmp
push
lods
xchg
add
mov
cmp
fwait
inc
dec
pop
push
xlat
pop
rcll
mov
and
es
iret
lret
out
sbb
popf
outsl
push
pop
jecxz
or
mov
fldt
dec
loop
cmp
pusha
imul
dec
push
mov
dec
xchg
ds
cld
icebp
dec
push
cmc
rol
pop
mov
cmp
mov
cmp
and
mov
pusha
fcmovu
mov
out
push
cmp
sub
out
daa
dec
cld
jp
xchg
sti
iret
ljmp
jmp
pop
pop
add
je
sbb
xchg
into
fwait
in
pop
notl
in
shll
rolb
stos
pop
push
lock
int3
loop
arpl
jno
and
xor
cwtl
sub
scas
std
test
mov
cli
imul
pop
int3
lds
out
adc
pop
jecxz
inc
jo
mov
inc
mov
sarl
jmp
ds
imul
je
cld
inc
push
mov
xchg
push
in
outsb
arpl
andl
xchg
inc
pop
adc
aad
and
mov
nop
or
rclb
ret
outsb
mov
aaa
movsl
cmpsb
pop
scas
repz
popa
sahf
in
adc
aam
adc
mov
es
jg
cmc
js
and
hlt
shrb
aam
ret
jge
or
push
jno
cld
dec
ja
test
xchg
cwtl
push
and
pop
call
add
mov
shl
mov
cmp
in
push
push
adc
lret
je
les
adc
jl
js
roll
inc
xchg
inc
enter
imul
mov
sub
mov
aam
jg
inc
inc
sbb
bound
jg
add
inc
dec
mov
pop
mov
les
jbe
fdivr
push
imul
lock
mov
and
cmp
fs
add
fldcw
clc
lods
lahf
mov
aaa
cmp
xchg
xchg
in
or
cmpsl
subl
jo
push
cmp
fstps
fadds
and
jns
test
add
stos
xchg
divl
push
test
dec
in
xchg
mov
outsb
inc
aad
mov
pop
xchg
ja
add
into
push
mov
jae
cwtl
in
into
cmpsb
ja
in
mov
dec
push
jecxz
mov
jge
push
mov
fists
mov
push
or
je
mov
or
sbb
ficompl
jns
pop
pop
cli
cmp
dec
push
lea
mov
stc
inc
adc
push
enter
andb
xchg
jne
jno
jg
cmp
sbb
push
jns
inc
cli
idivl
mov
lods
shll
sbb
sub
ss
inc
inc
dec
jns
dec
cmp
push
ret
cmp
fcoml
mov
mov
shrb
out
mov
sbb
insb
xor
xchg
sub
jo
mov
and
xor
mov
frstor
fwait
leave
or
xor
jb
ljmp
mov
test
pop
mov
xchg
jge
fwait
lods
in
mov
cmp
mov
xchg
sti
inc
push
sub
mov
cmpsl
add
xchg
jae
inc
repz
call
jl
fisubrl
aas
in
out
fisttpll
mov
movsb
xlat
jnp
in
enter
push
loop
inc
jno
pusha
mov
or
int
push
dec
enter
add
subl
mov
sub
mov
adc
adc
mov
stos
call
push
add
ljmp
sub
xchg
shlb
mov
mov
mov
mov
cmp
adc
or
dec
daa
cmp
mov
inc
jno
pop
pop
jmp
in
add
jmp
and
xchg
adc
or
ds
pop
jo
inc
mov
jnp
lods
pop
outsl
mov
notb
loope
mov
dec
call
sbb
push
imul
leave
dec
js
jo
imul
cld
fstpl
xchg
mov
call
cli
in
clc
mov
mov
shll
or
in
orb
pop
sbbl
cmpsl
mov
cmc
mov
inc
in
mov
jp
mov
aas
cmp
mov
cmp
clc
testl
jmp
push
sub
sub
jb
dec
mov
clc
ret
jns
jp
clc
enter
and
loop
jae
push
cmp
cmp
out
cwtl
stc
cwtl
cltd
jg
pop
int
mov
jmp
sbbb
adc
stc
push
mov
xchg
imulb
mov
fs
push
xor
ja
popf
dec
imul
in
push
sub
sbb
add
pop
jo
jecxz
call
insb
sbb
clc
cmp
mov
sti
jp
add
jg
or
push
jecxz
test
clc
push
dec
js
movsb
dec
ret
je
sbb
sbb
or
lds
test
clc
jmp
fcompl
jp
and
popf
mov
sub
cmp
sub
hlt
cmp
dec
jmp
jp
xchg
sarl
into
pushf
mov
dec
bound
push
inc
push
cmp
cmp
stc
rcrl
dec
dec
call
pop
out
enter
sbb
cmp
inc
jl
xor
movsb
mov
pusha
test
push
inc
aad
mov
es
pop
inc
push
sbb
ljmp
lock
icebp
ret
pop
pop
dec
xchg
dec
jmp
testl
inc
movsl
scas
pop
jno
scas
shll
addl
scas
scas
inc
cmp
dec
add
lcall
aam
mov
sub
pop
inc
sti
xchg
dec
adc
pusha
lea
loopne
mov
push
outsl
std
fwait
arpl
lcall
mov
imul
jle
inc
daa
notl
jp
push
imul
pop
dec
ljmp
repz
push
scas
jns
js
adc
popf
je
mov
pop
lcall
aaa
lods
imul
mov
gs
push
or
es
mov
and
and
sbb
push
inc
scas
mov
xchg
lcall
cmp
stos
add
mov
scas
cmpsl
xor
into
jecxz
mov
lret
push
js
sub
inc
mov
cmc
cwtl
out
lock
lock
xor
sbb
mov
stc
xor
repz
mov
cmpsl
data16
cmc
jmp
popa
jmp
ljmp
imul
arpl
sub
dec
lods
mov
adc
dec
pop
sbbb
sbb
scas
int3
mov
scas
pusha
cmp
shlb
xchg
sahf
lret
jp
dec
repz
or
lahf
iret
pop
xor
insb
or
in
cmp
mov
inc
or
repz
repz
xor
repz
popa
pop
fwait
in
inc
ss
aaa
cmp
outsb
imul
lahf
fcompl
push
push
mov
push
outsb
push
push
mov
fs
bound
lret
mov
cmp
int3
nop
mov
dec
xor
push
cli
and
daa
sub
in
and
xor
insl
adc
adc
data16
mov
xchg
notb
test
sub
push
mov
sub
push
out
sub
xchg
mov
sbb
pop
pop
pop
andb
rorb
repz
outsb
cmpsb
ja
movsb
xor
inc
add
jbe
mov
iret
push
add
xor
cld
cmp
pop
icebp
fistpl
mov
or
sbbl
adc
cmpsl
cmp
fisttpll
div
push
inc
imul
dec
fs
adc
popa
xchg
jno
insl
testl
push
aad
inc
cmp
lds
or
sub
testl
int3
cmp
jp
int3
popa
push
dec
mov
test
lods
aaa
xchg
ret
cmp
adc
sbbl
ja
dec
mov
jecxz
push
jae
in
jle
adc
xor
jae
mov
jo
aam
or
jae
xchg
stc
test
mov
sahf
pop
fisttpl
push
out
cltd
or
mov
and
mov
xchg
cmp
dec
outsl
sub
mul
out
cmp
int3
lret
mov
mov
jnp
lea
cmp
je
mov
or
push
aaa
mov
call
mov
add
outsl
in
xor
aad
add
ds
ds
mov
inc
jecxz
pop
sahf
pushf
loop
sub
jecxz
fistl
fmuls
int3
scas
inc
dec
xchg
pop
inc
dec
jge
dec
fbld
mov
mov
fiadds
data16
pop
in
addr16
mov
lods
out
inc
sub
or
call
mov
out
daa
insb
fwait
in
or
popa
cmc
xchg
cmp
jae
aam
mov
cmp
adc
mov
jae
je
mov
sbb
insl
xchg
sbb
jns
test
scas
push
stos
mov
xlat
repz
pop
div
pmulhw
jle
xorl
mov
clc
movsl
out
das
xor
add
test
mov
xchg
dec
sub
pop
add
mul
sti
outsl
fwait
scas
or
mull
fildll
je
jns
sbb
cltd
sbb
mov
add
mov
fisttpl
jo
or
add
inc
xchg
push
pop
sbb
xor
xchg
test
sbb
outsb
push
mov
mov
mov
dec
xor
cmp
push
insl
pop
or
insl
push
test
xor
ret
in
lods
mov
andb
lahf
pop
or
arpl
add
idivl
sub
sbb
ret
loop
mov
cmp
and
xorb
scas
or
js
mov
stc
push
lret
scas
insb
gs
xor
jg
mov
fstl
call
and
fwait
clc
cmpsl
je
and
jbe
cmpsb
fadds
jp
dec
lock
mov
stc
arpl
pop
jo
out
movsb
fucomi
inc
xor
fstp
lea
jb
out
xor
pop
ret
fbld
insb
push
xor
into
lcall
into
and
sub
mov
insl
insb
cld
cld
mov
mov
pop
imul
and
mov
cmp
arpl
aaa
push
xchg
testl
hlt
ret
lcall
cli
or
or
mov
cmp
in
loopne
mov
int3
repnz
in
push
sbb
mov
gs
add
out
xchg
jb
sub
rol
test
addr16
push
xchg
mov
jae
inc
data16
pop
mov
sar
mov
aaa
mov
xchg
mov
in
ja
xchg
cmp
fcomi
inc
ror
cwtl
icebp
or
out
cmp
mov
cmpsl
fwait
push
mov
sahf
aam
daa
out
mov
repz
loope
stos
sti
jo
add
dec
hlt
fstl
lods
xorb
stos
jb
icebp
out
pop
push
xor
repz
mov
sbb
call
ret
inc
in
adc
js
sbb
push
jp
xchg
lcall
mov
rcr
jmp
pop
stos
inc
rcll
mov
cmpsl
pop
mov
leave
dec
dec
bound
xchg
push
and
adc
push
imul
inc
shrl
xor
pop
loop
shll
cwtl
xchg
repz
xchg
out
dec
push
stc
mov
sbb
push
and
movsb
outsb
mov
pop
push
mov
inc
push
pushf
mov
fldl
imul
jp
xor
xchg
or
jecxz
or
and
loop
gs
or
cmp
inc
push
movsb
out
fwait
sbb
adcl
hlt
xchg
mov
stos
pop
push
imul
xor
pop
fldl
test
xor
test
stc
push
ret
icebp
es
push
shl
xchg
int3
mov
loopne
push
or
xchg
fptan
lret
push
notl
bound
pop
jo
adc
jno
mov
push
xchg
and
cmpsb
nop
push
repz
popa
pop
sbb
mov
mov
mov
jb
movsb
repnz
and
aad
dec
movsb
repz
adc
mov
mov
jge
fstps
sbb
imul
jbe
mov
in
add
ret
sbb
test
adc
cvtdq2ps
cmpsl
outsb
add
outsl
fnsave
cli
jo
insl
js
xchg
enter
push
outsl
leave
call
sub
data16
add
loop
pop
into
sti
fldenv
dec
aam
xchg
insl
enter
out
mov
mov
subl
mov
cmpsb
outsl
and
lock
ljmp
dec
pop
mov
call
xor
aas
push
jecxz
sbb
cmpsb
xlat
xor
pop
cli
inc
xor
sbb
movsb
xor
cmp
aaa
bound
inc
jmp
inc
mov
lret
jae
xchg
loop
mov
lods
xor
dec
lock
pop
imul
mov
sti
mov
sbb
inc
stos
mov
jae
out
call
cmovae
cmp
lret
insb
stos
icebp
stc
in
xchg
xlat
mov
pop
cmovnp
fidivs
pop
mov
cld
lds
xor
jb
inc
xchg
mov
xchg
push
push
add
add
push
icebp
or
push
aam
dec
js
out
mov
loop
insl
jns
das
pop
stc
mov
inc
and
pop
or
sub
inc
addr16
sarb
into
sub
mov
push
jp
cmpsb
xor
adcb
mov
or
adc
xchg
mov
inc
inc
repz
hlt
jmp
subl
movsb
push
jmp
ds
cmp
cmpsl
gs
insb
mov
shr
stc
push
ljmp
fcomp
fstpl
mov
lods
mov
lret
push
pop
or
enter
std
js
clc
dec
mov
add
cwtl
push
push
jb
cmp
int3
fdivr
scas
fs
xchg
scas
test
sbb
stc
sbb
aaa
lods
dec
int
out
sarl
iret
daa
xor
iret
cmp
outsb
rolb
lods
lahf
cmpsl
data16
fadds
mov
mov
and
dec
fcomip
and
cmp
xor
sbb
subl
enter
stos
leave
xchg
push
scas
daa
inc
push
iret
imul
je
mov
adc
pop
cli
push
rcrb
push
mov
jb
jns
jge
or
pop
lock
mov
cmpsl
add
inc
inc
or
sub
mov
mov
adc
mov
and
xchg
in
and
mov
and
insl
aas
mov
push
aad
and
loop
fstpt
xchg
stos
imul
sbb
out
sub
pop
adc
pop
xchg
cmp
sub
lret
test
scas
imul
push
call
js
in
pop
mov
test
aas
or
sti
or
jns
je
mov
push
mov
pop
mov
push
push
scas
jbe
popf
dec
sti
int
sbb
cld
xchg
mov
stc
jle
lcall
aad
sub
mov
out
and
sbb
call
jmp
cmp
and
icebp
mov
mov
sahf
aam
add
and
fildll
mov
out
in
aam
jo
cmp
add
mov
lds
dec
mov
cs
mov
fiaddl
jp
dec
jns
dec
in
je
dec
xor
repz
daa
adcl
jp
aaa
mov
aad
lods
pop
add
adc
or
mov
and
pop
jbe
mov
outsb
insl
imul
cmpsb
mov
mov
bound
mov
xchg
int
xor
mov
xchg
xor
dec
fs
cli
test
not
in
inc
inc
jae
stos
icebp
xor
clc
insl
inc
lahf
aad
xor
outsl
and
mov
clc
xor
xchg
test
adc
sbb
dec
mov
lcall
cmpl
int3
in
enter
cs
cltd
mul
push
dec
in
iret
pop
je
iret
ret
test
push
cmp
xchg
mov
sub
xor
fildl
imul
fldenv
push
dec
outsl
fildl
popa
xor
jne
pop
sbb
ret
mov
jns
cmpsb
cmp
imul
imul
or
push
sbb
sub
mov
incb
sarl
sbb
data16
outsl
call
push
pop
inc
lret
in
in
push
sub
add
sbb
call
mov
jne
mov
ss
sbb
dec
pop
mov
ljmp
cmc
imul
mov
imul
xlat
sbb
in
sahf
push
mov
aas
push
hlt
shlb
pop
movsb
addr16
sahf
pop
inc
fucomi
lds
imulb
cld
fwait
mov
mov
scas
dec
push
mov
das
repz
cs
fisttpll
mov
es
mov
fwait
push
in
push
scas
xchg
sub
push
jns
stc
xor
inc
cmp
mov
daa
stos
mov
mov
fildl
stc
and
dec
insb
lcall
xor
dec
fwait
jp
jecxz
cmpsb
sbb
cli
ja
leave
dec
sub
mov
es
ljmp
movsb
or
fidivrs
xchg
dec
and
add
push
nop
lea
or
enter
sbb
repz
dec
sub
xlat
enter
dec
and
inc
lahf
lret
add
lds
daa
ds
icebp
jmp
cwtl
mov
mov
mov
jmp
into
test
pop
hlt
mov
out
mov
lcall
test
dec
repz
mov
sbb
je
mov
pop
mov
inc
dec
dec
sahf
add
mov
stos
pop
push
and
pop
mov
jp
lock
xor
lods
popf
jmp
ficompl
cltd
cmp
aas
adc
or
div
bnd
out
inc
int3
movsl
movsb
rorb
xor
imul
pop
xor
frstor
xchg
sub
or
sti
dec
fists
mov
pop
jns
push
stos
push
cmpsl
sti
mov
movsl
pushf
jecxz
daa
lods
xor
add
push
inc
in
cmp
mov
dec
fsubr
jl
mov
cmpsl
jp
dec
mov
jecxz
mov
stos
mov
fistpl
lretw
cld
inc
icebp
dec
xchg
fistpl
mov
aad
pop
fcomp
pop
dec
inc
hlt
fistpll
mov
fmul
sub
push
or
xchg
mov
cwtl
push
push
inc
shr
sbb
cmpsl
sub
test
add
inc
cmp
stos
mov
or
inc
or
push
mov
lahf
repnz
fnstsw
iret
jbe
xchg
and
xchg
lcall
imul
insl
push
ss
add
xchg
adc
outsl
ja
xchg
and
ret
sbb
test
or
outsb
jo
cmp
pop
cmp
out
jb
outsb
js
and
pop
xor
xchg
fsts
rcrl
xchg
sub
in
loopne
mov
mov
bound
mov
sub
fsubp
mov
pop
cltd
iret
insl
out
jmp
in
or
cltd
in
lcall
out
aad
adc
je
push
pop
fistpl
sub
sbb
pop
xchg
push
lahf
sbb
ja
inc
movl
dec
inc
adc
mov
mov
pop
ret
es
push
jne
hlt
cli
iret
jb
or
in
call
in
jg
mov
cld
lret
aas
sbb
jns
mov
dec
and
negb
jne
xchg
add
adc
enter
ret
pop
jno
nop
out
jne
es
in
push
mov
xchg
lods
sbb
loopne
mov
xorl
ds
inc
push
aad
sbb
sbb
pop
adc
cmc
pusha
push
cltd
xchg
fdiv
cmc
sub
mov
cld
movsl
inc
lcall
outsl
mov
in
or
fdivl
jbe
jmp
outsl
sub
enter
lahf
or
push
shrb
in
push
call
jns
outsb
cmp
xor
test
xchg
repz
xor
inc
sub
pop
jle
loopne
movsb
cmp
xor
adcl
shlb
sbb
enter
in
cwtl
inc
xchg
cltd
mov
mov
fs
addl
aas
je
cli
ljmp
jns
dec
shll
dec
in
fidivrs
jbe
call
sub
push
inc
addr16
pop
ja
cmpsb
mov
jne
in
xchg
push
add
cmp
loope
lahf
mov
mov
rcrb
aam
fs
aas
mov
pop
adc
mov
shl
cltd
inc
sub
push
cmpsl
in
repnz
cmovnp
mov
lcall
cmpsl
inc
push
clc
jns
mov
inc
adc
inc
mov
mov
repnz
sub
stos
testl
cmp
fiaddl
jne
adc
sti
xorb
mov
int
push
test
or
jmp
ja
jns
bound
mov
std
dec
and
push
cmpsl
inc
es
and
call
mov
sarl
fcmovbe
loop
jno
rorb
pushf
mov
imul
sub
xchg
cmpsl
sub
inc
and
push
inc
test
popa
enter
fnstcw
push
push
hlt
les
je
inc
mov
jle
xchg
sub
mov
lock
loop
xor
ljmp
add
xor
fstps
fbld
btc
push
cmpsl
xchg
out
insb
sti
aam
lahf
jge
in
dec
stos
negl
push
sub
mov
add
fwait
cld
cmp
sbb
outsb
mov
jmp
mov
ret
das
es
les
in
xchg
outsb
inc
jecxz
add
nop
mov
add
mov
fldcw
out
jo
mov
int3
mov
jmp
jl
dec
and
sub
jecxz
bound
adc
xorb
jmp
rolb
orb
pop
xor
call
pop
mov
mov
in
ret
stos
fucomp
ret
repnz
clc
out
cmp
dec
pop
cmp
aaa
fildll
push
lds
mov
mov
dec
mov
sub
icebp
outsl
cmc
mov
mov
insl
push
sub
mov
lds
jae
out
pop
fnstsw
ja
movl
mov
push
xchg
out
scas
cmp
push
es
testl
jo
cmpsl
lock
xchg
jns
addb
nop
cmpb
mov
pop
mov
mov
jp
popl
jle
cmp
mov
in
ret
jbe
comiss
pushf
jmp
inc
lret
jo
or
mov
movsb
fstpt
pop
inc
bound
cmpl
iret
pop
lcall
mov
ja
stos
push
dec
imul
xchg
scas
or
sbb
push
cmc
fidivrs
push
mov
adc
dec
stc
bound
fsubrs
pusha
je
hlt
daa
sbb
mov
pop
dec
cmp
out
mov
push
sti
loopne
scas
xchg
mov
mov
or
imul
mov
mov
mov
cmpsl
sub
mov
push
bound
jmp
ss
fisubrs
cli
or
push
iret
adc
jecxz
scas
push
in
sbb
stos
xchg
pop
pop
pop
movsb
mov
or
aaa
repz
adc
in
sub
js
mov
pop
in
mov
sbb
sti
jp
pop
mov
testl
and
xchg
add
aad
pop
sub
dec
movsb
pop
lods
dec
and
outsl
fisttpl
inc
mov
rcrb
movsb
pop
mov
pop
adc
rclb
pop
sub
sti
jns
ret
in
cmpsl
jns
lock
repz
in
cmp
mov
sarb
sub
jmp
pushf
aas
xchg
stos
jns
dec
jnp
mov
outsb
pop
in
iret
int3
mov
mov
xchg
lcall
jl
xchg
repnz
pop
in
shl
adc
out
enter
add
sub
andb
push
es
pop
sub
out
je
roll
mov
fisubrl
pusha
ret
addr16
ja
sub
adc
cmp
adc
pop
mov
cwtl
in
add
out
inc
ds
xchg
cmp
mov
sbb
xorps
addr16
shr
pop
stos
in
jns
in
dec
lcall
imul
ret
mov
popl
cmp
fstpl
push
bound
ljmp
test
pop
incb
and
sbb
popa
pop
in
fsts
add
stc
pop
and
test
lcall
xor
and
outsb
push
nop
mov
pusha
dec
pop
out
sub
push
xorb
and
fildll
add
push
or
in
or
pop
push
and
das
cmc
out
rolb
and
in
pop
push
add
sbb
dec
pop
sbb
fnsave
dec
lock
cmp
lock
dec
ret
imul
dec
dec
decl
xchg
mov
jns
jbe
ror
in
mov
js
pop
in
jmp
adc
out
mov
arpl
pusha
mov
in
sbb
daa
jp
aaa
imul
cli
or
jp
lods
xchg
mov
cmc
in
push
xor
push
lock
jmp
xchg
pop
push
sbbl
inc
cvtpi2ps
ds
pop
pop
jge
aas
and
in
pop
mov
ret
cmp
jnp
and
or
cmp
mov
pop
xor
mov
popf
fmul
lods
cld
mov
stos
cmp
cmpsl
adcl
add
mov
fisttps
clc
frstor
push
pop
aaa
inc
fucomi
js
outsb
mov
or
or
sar
lods
call
popa
in
lds
adc
xor
notl
inc
out
mov
inc
pusha
or
mov
gs
cmc
inc
or
mov
mov
pushf
imul
sbb
push
mov
mov
or
sub
pop
cmp
cmp
jne
fs
outsl
iret
out
arpl
das
jae
xchg
cld
out
in
inc
or
jge
clc
add
cmp
aas
xor
or
outsl
or
repnz
roll
xor
es
stos
test
mov
dec
or
dec
sbb
pushf
enter
adc
dec
ljmp
add
jo
stos
mov
mov
mov
ja
mov
sbb
mov
cmp
pop
or
aas
das
out
sbb
mov
fwait
pop
pop
popa
fldlg2
sub
cmp
jo
or
fidivrs
xchg
xchg
arpl
ss
ja
add
adc
insb
mov
fildl
mov
lcall
call
cltd
gs
ret
ficomps
inc
sbb
in
jb
xchg
mov
movsl
notb
repnz
test
fisttpll
divb
sub
push
or
inc
mov
dec
dec
addr16
je
dec
lahf
out
mov
ljmp
dec
in
lcall
lret
lahf
cwtl
jp
pop
sub
outsb
test
push
jns
arpl
movsb
fwait
lret
rolb
mov
shlb
ret
das
out
mov
jns
hlt
ret
xchg
pop
mov
test
or
mov
jns
mov
push
out
stos
cmp
scas
lcall
idivl
in
hlt
jecxz
shll
mov
mov
aaa
jne
mov
sbb
lock
aaa
add
mov
movsl
cmp
cltd
or
subl
mov
in
frstor
adc
lcall
sbb
sub
adc
and
xchg
jae
ret
adc
jbe
ss
inc
lcall
aas
ds
dec
fstpt
or
rcll
xchg
lea
mov
neg
xchg
test
idivl
and
push
stos
mov
cmp
xor
or
test
jle
xchg
adc
add
add
pop
xor
sbb
out
mulb
cmp
ja
sub
imul
out
jb
push
xor
mov
cs
push
lock
cwtl
inc
sbb
scas
jbe
jb
push
jb
mov
mov
jmp
add
ror
mov
into
stc
aaa
test
cmp
mov
and
js
shl
jne
push
pop
push
fistpl
bnd
mov
imul
mov
in
mov
pop
mov
js
aam
push
cmc
fdivp
imul
inc
xchg
mov
dec
ficomps
out
jl
and
les
dec
mov
cmp
rcll
fadds
out
jl
pop
ret
pop
push
push
test
add
pop
aaa
lds
out
in
sbb
pop
mov
bound
cmpsb
in
mov
xor
mov
fisubrl
loope
push
lret
in
pushf
push
xchg
xor
mov
xlat
fs
inc
push
aad
in
pop
mov
bound
xchg
and
scas
arpl
pop
in
jns
mov
jns
movsb
sbb
fldln2
jle
mov
xor
or
xchg
sub
das
cmp
pusha
in
sbb
das
and
lods
cmp
sbb
jl
jecxz
and
call
popa
iret
imul
shrb
dec
pop
xchg
enter
movsl
movsb
push
push
pop
out
sbb
cmc
xor
cmp
add
and
and
test
mov
outsb
rcll
fisubl
add
loop
scas
das
sbb
fincstp
divl
lret
shrl
aas
ds
ja
cwtl
lret
or
mov
stc
mov
mov
mov
mov
outsl
pop
in
sbb
dec
insl
arpl
clc
adc
cmpb
push
stos
aas
xchg
aad
jmp
aam
fwait
pop
pop
jp
mov
ljmp
js
outsb
stos
or
movsl
xchg
call
out
in
cmpsb
pop
out
out
leave
inc
lcall
cmpb
or
sub
jbe
insb
or
jnp
cmp
sub
test
stos
fisttpll
jmp
mov
imul
xor
xchg
outsl
xor
mov
mov
mov
inc
jno
inc
in
jb
sub
insl
mov
cmpl
mov
xchg
mov
xchg
mov
cmp
jecxz
dec
mov
mov
rcrl
aaa
lock
faddl
scas
add
xor
data16
cli
mov
addl
popa
fsubs
pop
jns
sbb
popf
jmp
movsb
fdivrs
mov
shrl
or
mov
jbe
and
movsl
xor
push
cli
data16
mov
call
push
xchg
and
je
test
cltd
pop
push
mov
nop
xor
in
mov
in
xchg
sbb
push
push
cmp
cmp
mov
cltd
sub
fldcw
adc
in
stc
adc
inc
xor
jecxz
das
imul
pop
outsb
and
scas
and
jns
pop
inc
add
je
mov
adc
scas
push
out
roll
sbb
subb
mov
insl
xchg
mov
jg
mov
mov
or
jp
pop
test
fs
pusha
les
rorb
mov
or
pop
lods
dec
test
pusha
lds
push
cli
pushf
loop
es
pop
loopne
in
shll
test
and
call
jo
addr16
cmp
dec
and
adc
outsl
push
stos
enter
add
jo
xchg
aaa
daa
xchg
rol
sbb
cmp
daa
mov
cmp
arpl
insb
xchg
repz
inc
cwtl
jecxz
jle
mov
cmp
dec
dec
mov
pop
pop
jns
push
shrb
gs
dec
inc
pushf
stc
push
adc
aad
fwait
pop
lock
dec
and
jae
or
cli
lahf
inc
mov
faddl
and
data16
push
mov
or
mov
test
cmp
jecxz
out
or
out
imul
sbb
sub
xor
mov
mov
popa
add
aaa
inc
push
mov
stos
arpl
mov
jno
push
call
xchg
xor
faddp
mov
imul
fwait
inc
inc
pop
lds
out
push
pop
cmp
cli
sahf
fisubl
js
adcl
or
arpl
adc
insb
stc
mov
pop
cwtl
dec
sarl
push
dec
xchg
mov
xchg
in
icebp
sbb
add
sub
jp
std
push
fistpl
ja
xor
xor
fisubs
jp
sub
xchg
cmp
ret
or
movsb
mov
push
mov
gs
mov
je
bound
jo
ret
stc
xchg
outsb
push
sbb
aas
jmp
pop
jl
movsb
dec
jnp
cmpsb
out
push
adc
sahf
data16
mov
push
push
push
add
dec
loop
xlat
sbb
adcl
roll
mov
or
dec
in
gs
cli
mov
dec
out
dec
ficomps
or
mov
lret
sbb
sahf
adc
into
mov
push
shrb
sbb
shll
pusha
xor
push
ds
cmp
out
sub
stc
movsb
jmp
test
add
sbb
mov
fildl
pop
mov
jle
xor
movsl
mov
lahf
inc
fdivp
dec
push
and
adc
test
rcl
stc
out
loopne
dec
pop
xchg
je
enter
mov
jmp
mov
cmp
movsb
or
xchg
pop
subb
sti
cmpsb
sbb
xchg
testb
imul
mov
adcl
ljmp
adc
mov
out
int3
mov
mov
cli
xor
push
inc
out
sbb
iret
sub
lods
movsl
addr16
mul
imul
cli
mov
outsb
pop
dec
sti
mov
jae
mov
lds
addr16
sub
pop
mov
lahf
pusha
push
pusha
fwait
xor
inc
repz
arpl
mov
xor
mov
and
mov
inc
mov
push
add
shr
xor
aas
mov
jbe
xchg
jae
pop
jp
fdiv
movsb
fildl
int
ret
jns
jns
xchg
push
mov
jo
inc
jmp
mov
pop
stc
jae
xor
mov
xor
cmp
sarb
xchg
push
fistpl
cmp
popa
lds
or
insl
stos
mov
pop
pop
data16
fs
in
addr16
lock
mov
fists
addr16
or
and
xchg
ds
fisttpll
lods
inc
das
call
dec
cmp
fdivrl
dec
and
mov
pop
xchg
jl
dec
pusha
js
push
mov
jns
jae
pop
mov
sub
or
insb
in
cmp
out
lcall
sbb
sbb
sti
sbb
pop
dec
rol
popl
inc
test
pop
mov
jo
xchg
add
inc
cmp
jp
scas
cli
jecxz
mov
stc
lret
leave
dec
xchg
mov
and
cmp
pop
in
pop
mov
bound
cmp
and
cli
adc
scas
xchg
xchg
mov
sub
push
cltd
jp
mov
adc
popf
pop
loopne
push
cwtl
add
pop
pop
dec
jno
or
hlt
jmp
jl
outsb
and
out
mov
jmp
dec
mov
jg
ja
inc
fnstsw
or
mov
sti
mov
or
scas
jns
lret
aaa
jmp
repz
pop
jo
fdiv
mov
imul
pop
add
mov
stos
jg
es
mulb
out
cmp
sbb
imul
fidivl
pop
ja
std
or
pop
jmp
mov
scas
jecxz
pop
mov
xor
sbb
add
push
mov
bound
mull
mov
in
mov
bound
sub
mov
fidivrl
mov
mov
jmp
idivl
lret
aaa
fldl
xchg
int3
inc
pop
cmpsl
mov
sbb
push
call
mov
lods
sub
jb
jl
out
xchg
sub
insb
push
jb
fsubrl
cmp
jl
das
ljmp
dec
enter
pop
inc
jbe
xchg
jns
mov
fistps
fnstenv
xor
add
rorb
ss
pop
ss
xor
fprem1
bound
mov
push
shlb
jp
mov
ret
mov
sti
shlb
repnz
jns
jno
icebp
pop
jmp
cmpsl
das
xor
stos
nop
sub
stos
jp
mov
mov
push
std
repnz
mov
outsb
mov
imul
jl
jae,pn
adc
xchg
mov
fwait
jae
xchg
fstpt
ljmp
imul
dec
xchg
enter
adc
xor
ret
cs
sbb
aam
subb
mov
leave
in
mov
in
test
dec
xchg
cli
xchg
call
or
test
xor
loop
fsubs
inc
repnz
pop
cli
mov
push
dec
scas
jecxz
jnp
fwait
sub
jle
adc
mov
jecxz
push
imul
fninit
cmpsl
cli
jp
imul
stc
outsb
ja
int3
clc
xchg
mov
ja
fwait
xchg
mov
push
sbb
mov
fwait
pop
pop
call
repz
add
dec
mov
fdivl
stos
fstpt
fwait
pop
or
outsb
ds
push
or
mov
lret
mov
scas
push
sub
out
push
clc
insb
jae
sub
call
clc
sub
je
mov
sub
out
mov
sub
mov
sub
scas
fiaddl
jbe
into
addb
adc
sub
movsb
lcall
push
cltd
rorb
daa
pop
jp
sub
sub
movsb
dec
add
fwait
jecxz
mov
idivl
stos
sub
jle
jmp
in
jge
mov
push
test
cmp
lret
cld
or
sub
jg
lret
xchg
push
cmpsb
aam
movsb
pop
fmulp
lods
sub
out
ds
test
scas
add
xchg
pop
aas
xchg
jno
arpl
jmp
mov
inc
cmp
imul
push
pop
pop
jp
push
aas
jo
mov
push
enter
xchg
push
sub
inc
dec
push
int3
xchg
xchg
inc
sti
push
push
jecxz
xlat
jne
add
cld
or
adc
ret
fwait
dec
outsb
std
insb
xchg
mov
xor
arpl
mov
cmp
jl
push
push
iret
push
cmp
push
mov
cli
push
and
out
mov
leave
dec
shll
fstpt
in
pusha
movsb
push
mov
or
lods
sub
xchg
loope
jmp
xchg
loopne
mov
pop
es
jb
enter
in
adc
add
test
and
pushw
cwtl
push
cmp
int
mov
aas
mov
loop
sub
pop
xor
jbe
mov
xchg
test
shrb
pop
or
cmc
dec
out
in
xchg
push
lcall
xchg
test
xchg
pop
mov
adc
fldcw
inc
cmpsb
lret
xchg
push
jecxz
push
lcall
lret
scas
test
inc
xor
insl
test
sti
mov
or
jp
mov
movsb
dec
inc
mov
icebp
cmp
xchg
cmp
inc
push
sub
mov
popa
xor
sbb
mov
jb
and
imul
fists
outsb
and
test
mov
sbb
sbb
aaa
in
dec
pop
in
icebp
pusha
mov
sub
rorl
mov
inc
jb
pop
mov
sbb
push
inc
fisubrl
sub
mov
add
mov
and
lea
cli
aad
push
ljmp
push
jecxz
addr16
jmp
fimull
repnz
fcomip
insb
lods
xchg
stos
jno
jecxz
and
sahf
jbe
cli
sub
xor
psubusb
sti
inc
inc
pop
insb
mov
sub
fstpt
and
cld
add
and
push
fistl
dec
jns
arpl
jne
xor
push
aas
xchg
xor
lods
sub
jbe
or
lcall
pop
jmp
jae
enter
js
jbe
test
out
adc
pop
outsl
in
jmp
sahf
movsl
cwtl
xor
push
ficompl
and
or
push
jmp
mov
cli
push
andb
jb
adcb
mov
lahf
pop
lods
loop
pop
push
push
lods
inc
test
cs
call
lret
out
sub
out
or
in
add
push
in
lret
mov
jbe
scas
sub
sbb
sub
cmp
cmp
stos
pop
fcompl
xchg
push
mull
mov
stos
cmp
fnsave
cmpsl
in
aaa
inc
out
notl
aas
add
in
das
or
rcr
imull
sub
cli
in
mov
mov
popa
loop
xor
aas
sub
cmp
lods
or
dec
xchg
fmulp
in
gs
icebp
aam
mov
in
jns
pop
adc
je
stc
xchg
mov
pop
jne
js
scas
mov
mov
imul
cmp
mov
enter
mov
jp
je
inc
sub
inc
pop
sbb
cmpsl
fs
xor
int3
cltd
mov
or
mov
push
and
push
negb
push
cs
idivb
insb
ret
les
jbe
outsb
sti
mov
xlat
imul
das
movsl
fldt
cs
das
es
mov
xchg
mov
mov
xor
aam
mov
div
lret
push
or
push
repz
mov
and
jmp
inc
cmpl
insl
sti
lret
push
orb
mov
push
push
ss
sub
pop
imul
mov
orl
jo
lret
mov
movsb
pushf
jns
push
shlb
mov
imul
lods
mov
stos
insl
push
clc
sbb
scas
aaa
addr16
movsl
cli
or
pop
dec
inc
mov
rorl
lods
add
and
in
sub
je
xchg
test
mov
mov
push
jbe
or
leave
in
xor
stos
out
dec
clc
imul
dec
enter
cmpl
mov
outsb
sar
fdivrs
insl
xor
cmp
and
dec
fidivl
pop
scas
jns
es
bound
mov
xor
mov
cltd
push
roll
cltd
mov
jecxz
dec
scas
xchg
dec
dec
rcr
push
clc
fdivp
pop
mov
mov
dec
mov
xchg
cmp
jmp
add
or
mov
ja
popf
outsl
cltd
mov
mov
cmp
mov
int3
sub
sbb
push
notl
ret
push
mov
cwtl
mov
or
jbe
xor
cltd
and
mov
xchg
test
or
arpl
mov
jle
adc
addr16
mov
sbb
xchg
pop
mov
out
pop
stos
test
sub
xchg
xchg
clc
gs
jb
gs
fwait
in
mov
shll
addr16
mov
stc
int3
out
out
xor
movsb
jp
fs
js
mov
sbb
pop
cmpsl
rcrb
ret
cltd
pop
jmp
sti
loop
jo
out
xchg
jmp
xor
mov
addr16
cmpsb
mov
pop
xor
cmpsb
fwait
xchg
ljmp
shlb
and
insl
dec
mov
mov
ljmp
or
dec
cmp
mov
popf
ret
cmpsb
add
push
icebp
aaa
jbe
ljmp
outsl
push
ds
shll
test
mov
pop
pop
cmp
pop
push
mov
mov
sbb
idivb
insl
inc
cltd
dec
movsb
inc
pop
jae
andl
xor
ss
popa
add
data16
cmp
lock
inc
mov
xlat
loop
mov
sbb
pop
bound
xor
pop
or
pop
add
sti
stc
dec
decb
mov
inc
outsl
stos
neg
jns
sbb
movsb
testl
xchg
mov
in
lcall
sub
dec
xchg
imul
movsl
cmp
aaa
ljmp
mov
fcmovnbe
arpl
cmp
add
cmp
jg
jns
pop
inc
xchg
xchg
sbb
inc
sbb
pop
inc
cmp
fnstcw
sbb
bound
mov
fmul
out
push
lds
test
mov
shrb
mov
in
aam
sbb
stos
loopne
aam
xorb
outsl
sub
pop
idiv
in
inc
lcall
mov
mov
js
inc
pusha
adc
shl
fisubrl
out
test
fnstsw
mov
xor
cmp
adc
call
sbb
ds
xchg
cmp
or
imul
cld
fidivrs
pop
insb
xor
fistpll
add
push
mov
mov
or
std
inc
mov
iret
push
adc
xchg
jl
js
mov
sbb
xchg
push
push
aaa
call
es
sti
push
jb
je
inc
loope
out
outsb
in
aaa
repnz
popf
mov
imul
jbe
out
push
mov
sub
ret
jo
repz
test
inc
xchg
pop
sub
jo
cmp
sbb
xchg
mov
dec
cmp
fimull
stos
jae
jns
pop
arpl
pop
or
mov
or
pop
hlt
dec
lock
push
cwtl
mov
sbb
fwait
add
int3
pop
mov
idivb
mov
popf
int
lods
jb
pop
mov
je
and
mov
cwtl
loop
push
clc
aas
mov
jbe
data16
mov
sub
mov
lods
movsl
or
scas
mov
inc
mull
das
cmpsb
pop
xor
or
cli
mov
adc
aam
int
enter
mov
dec
lret
jo
mov
jecxz
sti
imul
mov
jns
popa
jno
or
pop
cld
push
xchg
push
ds
xlat
pop
push
fisttps
stos
lret
popf
push
aam
mov
je
push
cs
push
addr16
push
jbe
jo
sub
stos
int3
sti
in
mov
mov
pop
xor
gs
pop
sub
mov
mov
scas
cmpsl
stc
clc
test
cld
stos
cli
movsb
sbb
sarl
cmp
out
lea
jl
sti
stc
mov
and
call
cs
sbb
sbbl
cmpsl
repnz
sub
fsubl
enter
push
xorb
test
aaa
mov
movsb
push
jae
es
xchg
out
lret
mov
pop
mov
test
pop
jl
push
sahf
test
dec
or
inc
pop
xchg
xchg
fisubs
cli
call
out
fwait
cmpsb
stc
inc
xchg
lret
inc
mov
and
add
sub
mov
push
sbb
xlat
cmc
test
mov
sti
push
out
movsb
pop
bound
xchg
roll
adc
ljmp
sti
and
call
mov
pop
out
adc
mov
mov
xchg
inc
icebp
mov
das
sbb
test
xchg
sti
dec
adc
pop
out
cmp
imul
pop
out
cmc
insb
std
in
lea
gs
outsb
mov
subb
inc
pop
ss
push
pop
mov
scas
cltd
fwait
out
test
jecxz
fldenv
aaa
aam
xchg
pop
sub
mov
mov
imul
mov
out
adc
repz
xor
xchg
mov
sub
jmp
aaa
aad
mov
mov
addr16
xchg
aaa
push
cltd
shl
movsb
xchg
inc
xchg
mov
or
and
cmp
jbe
ljmp
xchg
mul
cmp
aad
imul
jns
pop
pusha
pop
or
pop
mov
mov
int3
imul
inc
pop
js
ds
mov
and
test
sub
shl
clc
jmp
ja
mov
dec
xor
repz
sub
inc
mov
mov
and
mov
cmpsb
outsl
lds
mov
cli
es
mov
hlt
cmp
jno
mov
sub
sub
add
in
sub
es
pop
popf
mov
in
xlat
lret
mov
mov
movsl
stos
dec
es
fiadds
ja
or
push
sub
jmp
sti
idiv
mov
push
stc
data16
es
mov
dec
ljmp
jb
fildll
fwait
insl
jo
test
add
scas
pop
mov
mov
pop
jnp
mov
sarl
mov
jb
rcrl
inc
jae
dec
or
pop
ret
or
push
nop
out
mov
fdivl
xchg
and
or
shl
repz
lret
lret
in
sti
cmp
sbb
cmpsl
fildl
push
shlb
stos
lret
pop
in
xchg
fwait
sbb
sub
clc
in
inc
mov
cwtl
mov
shll
dec
decl
cwtl
divb
insl
in
mov
fwait
idivl
pop
xor
mov
outsl
andl
das
mov
insb
inc
int
lcall
dec
jg
dec
ret
inc
sub
xchg
ja
popa
mov
outsl
loop
xlat
add
push
and
call
daa
lret
mov
mov
dec
loope
rep
mov
jmp
sbb
test
push
cltd
jg
ret
ds
mov
adc
fistpll
out
cltd
push
clc
pop
mov
outsb
cmc
jp
jo
int
push
je
in
sub
stos
cld
mov
pop
dec
fsubr
inc
rsm
jp
push
imul
xchg
add
icebp
sub
lret
movsb
adc
gs
adc
pop
pop
clc
ret
sbb
push
jno
mov
xchg
sub
test
jbe
push
sub
stos
push
popa
cmc
cli
and
or
inc
fistpl
xchg
mov
stc
push
sub
movb
sub
shl
adc
and
xor
dec
push
cmc
mov
jmp
int
in
mov
enter
sub
mov
sub
sbb
lahf
pop
jmp
inc
fsubl
jmp
mov
xchg
aam
test
push
test
adc
lods
jmp
aad
pushf
inc
or
std
dec
shlb
jo
jp
mov
dec
cmp
dec
mov
mov
js
pop
dec
insl
cmp
pusha
aaa
int3
jl
imul
cld
in
and
pop
dec
dec
jge
mov
adc
pop
je
in
mov
push
lcall
fldcw
sub
leave
test
jne
loop
jae
dec
repnz
cli
in
fwait
and
leave
xchg
and
inc
ljmp
xor
sbb
lods
outsl
sub
pextrw
xor
push
dec
mov
mov
mov
cmpl
fistl
mov
or
mov
in
push
cmpb
in
js
jb
popa
xor
jb
bound
in
out
mov
mov
fwait
mov
sti
addr16
pop
popa
push
mov
out
mov
cmp
jmp
jmp
and
pop
jo
aaa
je
mov
je
and
pop
pop
repz
sub
sub
xchg
jae
dec
xor
cmp
sub
and
leave
stos
bound
cmp
test
mov
push
xchg
stos
in
rclb
push
sarl
mov
xchg
jns
outsl
fst
loope
pop
xchg
stos
jp
inc
add
push
jmp
mov
and
pop
out
ret
dec
fdivrl
aaa
lcall
pop
daa
out
stc
loop
fld
xchg
mov
or
lds
outsb
push
mov
cli
fsub
xchg
fsubrl
int
pop
fstps
sbb
out
js
out
cmp
jns
subb
aad
dec
pop
out
push
xchg
insb
imul
cmp
jbe
and
fsubrl
jg
xlat
dec
ja,pt
rolb
cld
lret
or
pop
sub
es
sbb
mov
xchg
jb
js
mov
pop
jns
in
lret
or
aad
fs
mov
sub
xor
or
js
add
fsts
sub
dec
push
insl
in
dec
dec
jne
mov
dec
dec
pop
imul
lret
mov
or
jbe
cmp
in
pop
adc
mov
xchg
pop
adc
mov
cmp
jecxz
cmp
outsl
jae
adc
or
inc
stos
movsb
stos
add
mov
mov
out
mov
dec
and
ja
aas
je
mov
mov
xchg
jp
sub
adc
int
pop
aad
mov
xorl
pop
mov
cli
lcall
pop
lahf
sbb
repz
mov
roll
mov
xchg
push
cwtl
xchg
inc
cld
mov
shlb
mov
or
mov
push
in
cmp
dec
sub
and
push
lret
or
lret
xchg
loop
and
daa
shll
das
lea
and
insl
out
movsl
leave
aaa
cmp
scas
mov
mov
inc
xor
jp
rorl
pop
and
inc
dec
aas
jp
xor
sub
inc
stos
outsb
sbb
mov
daa
or
leave
and
inc
out
sub
idivb
in
nop
fcmovnu
jae
cmpb
call
push
js
jmp
cltd
push
fldt
pop
rcrl
sub
aaa
or
inc
call
inc
mov
jns
push
inc
mov
push
push
jae
mov
iret
fsubrl
add
or
xchg
cmp
mov
dec
sti
or
mov
dec
sub
xchg
test
ret
ljmp
aas
cld
jecxz
pop
mov
or
sbb
movsb
in
or
lods
push
and
cmp
jecxz
jns
jmp
or
cmp
pop
xchg
mov
sub
mov
rorl
int
into
add
lret
push
fwait
scas
imull
jae
icebp
mov
movsb
lret
push
sbb
arpl
pop
cmp
iret
fwait
sbb
call
in
sbb
imul
pop
mov
mov
mov
adc
dec
push
in
ret
cmp
xchg
cmpsl
shr
pop
pop
js
pushw
les
clc
cmp
cltd
imul
mov
fstpt
lcall
dec
arpl
lahf
jns
fdivl
sbb
push
dec
lods
dec
in
and
and
insl
push
test
icebp
jg
inc
addr16
subl
xor
push
push
sub
cmpsl
rcll
cld
or
movsb
or
lcall
testl
lret
daa
addb
call
mov
adc
ja
mov
mov
repnz
sbb
testb
sahf
sub
repz
and
pop
js
push
push
mov
aaa
mov
push
in
lods
rolb
in
ljmp
adc
sbb
mov
sti
dec
jp
cmp
jne
movsl
insb
outsb
in
ljmp
xchg
ljmp
scas
pop
xor
mov
xor
in
ljmp
sti
cmp
jns
mov
lret
js
or
xchg
ljmp
insb
icebp
jae
lret
jp
lret
inc
ss
mov
mov
aaa
mov
ss
mov
test
insb
adc
repnz
jmp
bound
push
insb
rolb
std
cmpsl
inc
inc
call
fildl
jg
ja
mov
jnp
mov
pop
pop
in
out
testb
arpl
rorb
and
jbe
in
or
cmp
jl
std
and
sbb
mov
rclb
adc
xchg
pop
jmp
inc
mov
pop
pop
sti
lret
out
call
ljmp
sub
cmp
stos
lock
test
xchg
je
cli
out
lret
in
out
leave
adc
dec
push
mov
ja
mov
xchg
ss
fcompl
lcall
leave
pop
shlb
movsb
int3
ret
out
or
jp
iret
adc
cmp
test
add
jecxz
mov
shl
mov
add
movsb
imul
shll
push
pop
inc
cmp
in
fdivrp
pop
lret
pop
lcall
push
sub
or
mov
leave
jmp
pop
sub
lcall
fcomps
movsb
adc
add
dec
clc
notb
mov
inc
dec
ja
ljmp
mov
stos
xchg
clc
sbb
movsb
pusha
mulb
pop
out
jg
inc
mov
pop
cmp
mov
into
outsl
push
lock
pop
dec
pop
dec
mov
ret
jmp
pop
stos
sub
xchg
imul
pop
xchg
and
or
pop
outsl
stos
mov
and
jmp
pop
or
jns
popa
adc
jb
or
sbb
xchg
ret
sbb
xchg
push
push
dec
sti
stos
jb
jp
inc
icebp
sti
xchg
inc
fstpl
jo
jmp
dec
mov
jecxz
jle
sub
pop
rcrl
fcomps
movsb
push
xchg
xchg
inc
mov
clc
pop
push
cmpsl
mov
lods
stos
enter
jle
sbb
pop
jmp
insl
repnz
leave
cmp
adcl
jge
daa
jp
pushf
lret
add
push
mov
out
rolb
lock
xor
idivb
fwait
or
iret
movsb
jge
test
test
mov
jbe
fwait
enter
testl
xchg
cmp
xchg
cmc
or
jns
mov
sbb
movsb
xor
dec
dec
repz
lret
xchg
pushf
shrb
pushf
cwtl
xor
stos
insb
or
xchg
cmp
aaa
dec
mov
pop
or
inc
lcall
fdivp
insl
dec
pop
leave
imul
mov
xchg
pushf
cli
loop
scas
rorl
jp
push
push
loope
outsl
cmpsl
push
dec
sbb
jne
aaa
leave
lock
mov
repz
leave
sub
ljmp
leave
orb
mov
rdmsr
sub
add
push
lret
insb
int3
je
test
sub
sbb
daa
jnp
push
cld
outsl
imul
mov
pop
cli
outsl
mov
popa
scas
push
mov
jae
xchg
test
lcall
cmp
ds
mov
enter
mov
repz
push
cli
push
sub
xor
loopne
and
jae
dec
movsb
lret
jg
mov
lret
dec
cli
iret
divb
lods
ds
clc
and
in
dec
dec
jp
inc
pop
push
addr16
pop
jae
push
mov
jl
ret
or
sbb
mov
xchg
call
jg
ds
xor
out
imul
test
mov
inc
mov
test
mov
addr16
rclb
ss
and
popf
jne
push
frstor
sub
je
fnsave
rorb
and
fstpl
xchg
and
cmp
cltd
and
std
xchg
scas
stos
out
iret
repz
gs
mov
inc
push
or
xchg
fcmove
das
jp
movsl
in
xchg
and
call
aad
xchg
push
jl
mov
mov
inc
mov
dec
xchg
mov
sahf
pop
in
lods
pop
popa
push
pop
es
sbb
out
mov
sbb
cli
leave
lods
not
jmp
push
mov
jp
popa
je
push
push
cmp
push
test
mov
push
jl
aam
push
in
jae
int3
enter
testl
sbb
sti
fbld
pop
pop
gs
push
pop
mov
sti
stc
mov
into
imul
cmp
dec
push
jbe
sub
in
je
xor
push
inc
sub
sbb
and
and
xchg
sbb
mov
dec
mov
push
mov
in
addr16
les
sbb
push
mov
clc
insb
sbb
aaa
icebp
jecxz
and
imul
dec
mov
nop
fucomp
repz
mov
push
shlb
mov
mov
pop
fwait
jmp
xchg
cwtl
and
in
in
arpl
addr16
in
xorb
fstl
and
add
mov
shr
fwait
sbb
mov
mov
in
inc
inc
imul
out
sub
xchg
in
imul
cmc
aam
jp
clc
mov
test
xor
jp
cmpsl
in
sti
or
sub
lcall
add
lcall
mov
shlb
pop
jmp
std
fiadds
jnp
xchg
stos
push
fs
sub
in
pop
imul
mov
or
loope
dec
and
mov
test
fcmovnbe
fwait
sbb
ret
repz
cmp
out
and
negb
mov
pop
jecxz
push
sbb
mov
jns
arpl
xchg
sbb
xchg
cmc
pop
xchg
push
mov
sbb
sub
or
call
repz
sahf
xchg
push
xlat
data16
jae
mov
sub
pop
xchg
in
jle
fwait
dec
mov
imull
cmpsl
lret
dec
push
cs
cwtl
loopne
shll
outsl
fmuls
mov
mov
jge
adc
call
xchg
mov
mov
xchg
popf
fcompl
movsb
pand
icebp
sub
cld
mov
dec
mov
xchg
push
cld
add
lods
sti
pop
mov
leave
dec
fildll
mov
push
gs
pop
fwait
cmp
movsb
adc
fstp
out
dec
push
popf
imul
dec
mov
cli
stos
gs
neg
pop
stos
lret
cmc
jne
test
sbb
inc
stos
inc
aas
repnz
lcall
dec
jecxz
jp
je
ffree
adcb
mov
cld
dec
and
scas
lret
fcoml
dec
cmp
dec
jp
xchg
fmull
rcrb
mulb
dec
cwtl
push
fdivrs
add
or
mov
cmp
cs
inc
mov
loop
gs
or
fnstsw
bnd
cmc
lock
mov
stos
arpl
push
pop
xor
mov
bndldx
mov
fisttpll
popf
sarl
mov
jae
pop
jmp
outsl
movsb
call
ror
mov
sti
inc
mov
sti
lcall
repnz
push
fst
lahf
inc
pop
fstpl
lds
push
or
scas
add
sbb
inc
sahf
scas
fildll
leave
mov
icebp
daa
imul
xchg
in
cmp
lret
pop
out
inc
push
fiaddl
je
add
push
or
in
pop
mov
mov
jmp
pusha
in
ret
ficompl
iret
xchg
movsb
cmpsl
xor
or
jle
sub
insl
xchg
mov
dec
pop
imul
mov
ja
mov
scas
xchg
aaa
xchg
movsl
lds
lods
xorl
mov
jecxz
and
jmp
pop
andb
test
inc
daa
pop
test
xor
xor
iret
enter
cmpsl
push
call
dec
scas
mov
rcll
test
cli
jae
pop
or
jp
test
unpckhps
jb
lods
dec
subb
aad
vmwrite
stos
js
ljmp
xor
xor
xor
mov
lock
jge
mov
ffree
cmpsb
pop
xchg
imul
rcrl
sub
or
add
and
cmpsb
test
scas
pop
arpl
shr
push
stc
es
xchg
idivb
mov
bnd
push
mov
sarl
jmp
sti
mov
jbe
or
mov
dec
push
les
jno
push
xchg
cmp
mov
dec
mov
addr16
xchg
aad
mov
inc
insb
inc
outsl
jge
sub
ret
ficoml
and
jns
mov
push
xchg
ret
out
jmp
cmp
aas
arpl
jb
push
stos
out
jp
addl
and
sub
xor
sbb
cmp
mov
mov
inc
int
push
out
xlat
sub
sti
mov
mov
mov
add
stos
dec
lock
push
sbb
cli
mov
sarl
mov
mov
data16
mov
push
mov
pop
test
out
ja
mov
sbb
add
addr16
shl
icebp
push
or
and
dec
sub
std
shrl
dec
fisubl
cld
adc
add
dec
iret
xorl
mov
cmp
adc
and
rcl
adc
mov
mov
xchg
test
test
enter
ret
cmpsb
pop
sub
push
imul
ja
stc
xchg
pushf
mov
push
scas
pop
mov
out
mov
lret
stos
xor
xchg
mov
jmp
nop
sub
imul
ret
inc
in
test
xor
sti
ja
mov
sub
push
cmp
jbe
mov
testl
rcrl
inc
fsubrs
mov
mov
in
loop
push
push
and
fnsave
into
clc
shrd
cwtl
lea
sbb
inc
and
test
or
jp
xor
cli
in
cltd
inc
fs
movsl
lret
imul
popa
lods
call
fisubl
sub
mov
sbb
sahf
mov
sub
xlat
addr16
repnz
lock
inc
movsl
pop
push
fwait
jp
add
mov
add
jns
mov
jb
pop
outsb
mov
fs
mov
out
lods
fucomi
imul
mov
push
adc
stos
repz
sub
dec
push
lods
shll
sbb
cmp
inc
xchg
cmpsb
cmp
loopne
jle
adc
mov
leave
out
pushf
xor
addr16
dec
ret
faddp
cmp
adc
shll
outsb
push
aad
jb
int3
mov
and
test
sti
mov
leave
xchg
or
push
test
in
jae
mov
nop
dec
mov
not
pop
fidivl
fdivrs
std
cmc
inc
jnp
ret
push
dec
imul
mov
add
mov
mov
repz
loopne
mov
not
mull
mov
out
ljmp
sbb
xor
jns
loope
or
pop
gs
clc
fcmovnbe
test
fstl
insl
inc
daa
dec
adcb
mov
scas
pusha
mov
movsb
pop
aad
in
cli
mov
sub
stos
pop
xlat
sbb
aaa
or
push
mov
je
out
jecxz
push
push
adc
mov
call
xchg
pop
mov
test
insb
jl
push
stc
pushf
jge
ja
mov
mov
out
movsb
or
xlat
lret
shr
pop
fisttpll
mov
mov
imulb
xor
sub
inc
test
push
and
cmp
sub
outsl
jns
pop
pop
dec
mov
ja
mov
clc
cld
arpl
or
sar
inc
sub
sti
outsl
dec
ja
lods
mov
jbe
lcall
mov
mov
cmp
xlat
mov
mov
fisubs
out
sarl
stos
adc
pop
or
inc
pop
fcompl
inc
inc
mov
mov
mov
inc
mov
cs
enter
fdivs
outsl
pop
jge
and
add
dec
aad
push
insl
dec
sub
insb
sub
xchg
add
pop
cld
popa
orl
mov
add
dec
lock
push
push
sbb
outsb
loop
int
aas
imulb
iret
mov
rolb
scas
dec
add
stos
icebp
mov
sub
mov
jl
out
lret
and
cltd
xchg
or
pusha
jnp
jae
pop
movsb
mov
xchg
loope
out
push
leave
push
jnp
adc
xchg
cmp
xor
push
arpl
sbb
xor
add
and
mov
jne
jecxz
fwait
in
daa
xor
jg
jo
pushf
loopne
stos
cld
in
es
call
adc
popa
loope
jmp
mov
mov
ror
out
aad
fs
inc
mov
idivl
mov
js
dec
cmp
or
cmp
inc
out
xorb
cmp
mov
test
or
mov
pusha
xchg
xchg
enter
xor
in
clc
xchg
xchg
movsb
push
mov
scas
xchg
rol
mov
jns
xorb
cltd
imul
adc
mov
xlat
stos
sub
xor
adc
sarb
xchg
shll
pusha
test
fstp
mov
negb
pop
adc
into
pop
stos
adc
xor
fwait
stos
jbe
cmp
mov
dec
iret
xchg
pop
and
and
cmp
pop
arpl
repnz
call
jb
jae
dec
dec
or
in
mov
lock
ret
sub
mov
mov
jp
sub
mov
and
push
sbb
add
imul
mov
test
arpl
dec
cmp
out
fstp
data16
jecxz
mov
inc
mov
cmpsb
aas
adc
mov
jne
loopne
stos
sub
nop
testl
dec
lahf
pop
dec
cmp
inc
fwait
shrb
mov
pushf
insb
add
pop
sbb
cmp
jecxz
xor
mov
jb
movsb
test
rcrb
push
incl
int
xor
fwait
dec
sbb
cmp
add
push
test
fdivrl
ljmp
lock
divl
mov
push
inc
mov
mov
sub
xchg
in
jge
sub
andl
pop
mov
pushf
jb
mov
out
cmp
sbbb
sbb
ja
data16
lcall
xchg
adc
jae
mov
jns
xchg
scas
push
js
mov
push
xchg
fucomip
push
mov
movsb
mov
aas
in
add
mov
xchg
negl
fwait
jmp
stos
outsb
aaa
inc
fisubrs
int3
dec
adc
arpl
mov
int3
inc
notb
mov
push
mov
or
out
pop
push
inc
xchg
mov
lahf
sub
stc
repz
imul
cs
iret
jle
xlat
xchg
push
into
fldln2
mov
notl
inc
outsb
or
fdivrs
out
push
jg
imul
gs
insl
xchg
mov
aas
cmc
adc
mov
mov
jbe
ja
int3
jns
jmp
orl
mov
fsts
stos
mov
xchg
negl
addr16
mov
or
into
xchg
inc
repnz
xchg
pop
jns
jmp
ret
movsb
das
mov
notl
pop
xchg
cld
pop
andb
test
cmp
pop
loope
out
mov
cmpsb
mov
iret
xchg
js
movsb
mov
jl
stos
cmp
hlt
scas
jno
sub
hlt
stc
pop
and
push
jmp
sti
sbb
inc
ja
cli
or
mov
jne
pop
mov
stos
ficompl
inc
jns
fwait
ss
push
add
imul
jae
lahf
fistpl
or
loope
sahf
bound
cmp
xor
testl
sub
je
inc
add
data16
jnp
dec
inc
mov
sub
es
push
xlat
popa
aaa
outsb
outsl
cltd
inc
cmpsb
imul
aas
xchg
mov
fistpl
xlat
jb
dec
aaa
or
stc
in
xchg
lods
dec
notb
iret
faddl
mov
push
cmp
add
arpl
mov
mov
out
jbe
mov
mov
sub
movsb
push
fmull
push
in
aas
and
pop
in
repnz
ja
sub
sti
les
mov
cld
jle
cwtl
enter
jne
inc
xchg
aas
pop
mov
dec
cmpsb
inc
mov
sbb
daa
mov
xchg
xor
mov
mov
outsl
sbb
addr16
inc
and
xchg
sub
sbb
outsb
xlat
push
mov
mov
sbb
jg
in
sbb
std
ret
cvttps2pi
dec
pop
cmp
aas
rorb
push
icebp
pop
adc
popa
or
and
pop
jle
test
in
add
sub
std
pop
ror
lahf
fcom
pop
add
pop
cltd
jns
insl
jbe
fxch
sbb
test
loopne
out
lcall
xchg
stos
stc
adc
mov
push
in
lock
data16
sbb
lcall
lcall
imul
pop
enter
mov
xor
call
xchg
adc
leave
mov
stos
mov
repz
pop
inc
cmp
sti
mov
jb
or
sbb
mov
insl
movsb
cmp
xor
xorb
jmp
aaa
dec
js
in
fdivrp
rcrl
icebp
imul
negl
lods
idiv
mov
andb
add
jb
xchg
movsl
fwait
arpl
sti
xchg
icebp
test
xchg
inc
jmp
jl
mov
adc
inc
cmp
sarb
imul
mov
jbe
inc
aas
or
jl
dec
insb
pushf
jbe
sbb
add
mov
stos
outsb
mov
pop
xor
inc
push
cmp
mov
pop
fwait
jae
jno
or
sti
sbb
sub
inc
mov
push
test
mov
adc
stos
outsb
dec
lea
scas
xlat
stc
push
pop
xchg
les
mov
jb
push
aad
pop
jecxz
mov
lret
fisubrl
insl
pop
mov
out
add
jge
push
inc
outsl
aad
push
mov
ss
int
divl
out
sbb
mov
call
mov
lret
xlat
test
dec
cltd
enter
sub
dec
mov
aam
jb
stos
adc
lret
adc
out
push
subl
enter
mov
aad
repnz
cli
in
insb
sbb
arpl
daa
je
or
cmp
sub
rorl
repz
ja
out
imul
mov
sub
cmc
jg,pt
push
jg
mov
jbe
into
add
and
stos
cmp
push
xor
fdivr
sub
scas
xor
jb
movl
rorl
mov
outsb
stc
cmp
and
fwait
push
jno
imul
gs
jae
add
cmp
repz
clc
ljmp
bnd
cmp
pusha
xchg
xchg
pop
mov
ficoml
mov
fistpll
in
stos
pop
inc
push
addr16
mov
cmp
xchg
ja
jbe
inc
lahf
cmc
aas
mov
cli
sbb
cmp
out
scas
sarl
sub
or
imul
fcomi
ljmp
pop
jmp
pop
jecxz
sub
out
cmp
mov
mov
sbb
out
out
bound
add
aas
push
test
push
add
mov
stc
scas
mov
adc
ret
sub
pop
sub
dec
add
movsb
cli
lods
pop
mov
mov
cs
popa
mov
xor
sub
mov
inc
fsts
sbbb
sub
push
push
stc
add
cltd
stos
xor
mov
mov
xorb
jb
ret
enter
or
sub
pop
popf
push
pop
inc
sub
pop
lea
enter
or
mov
in
cmp
push
arpl
int3
sub
divl
xchg
push
aad
cli
lcall
cli
mov
add
pop
in
sbb
adc
popa
dec
mov
sti
test
ja
fldt
cmp
mov
sbb
inc
aas
enter
jle
dec
mov
rorb
mov
mov
pusha
popa
push
mov
cmc
hlt
negl
roll
mov
shll
cmc
jp
imul
ljmp
push
mov
int
in
sbb
ljmp
sub
mov
sbb
fnstsw
inc
lret
mov
popf
es
pop
cli
push
stos
lock
jo
jmp
pop
cmpsl
das
movsb
cld
pop
daa
ret
cli
mov
sub
enter
inc
jno
cmp
in
sbb
sar
pusha
lea
lods
xchg
loop
repz
sbb
mov
jbe
outsb
sub
fucom
les
jmp
aaa
movsl
xor
xchg
in
cmp
mov
push
add
sbb
cmp
movsb
scas
lret
xchg
pop
sub
std
add
cld
mov
fbld
stos
sbb
outsb
pop
cmp
iret
fisttpll
inc
ja
sub
ljmp
fcmovnb
cmpsl
lods
push
sbb
sub
js
int3
or
imul
ja
addr16
mov
push
pop
xor
push
push
test
push
outsb
add
mov
popa
push
in
test
push
test
negl
adc
cmp
adc
sbb
push
stc
mov
out
xchg
jbe
push
dec
xlat
popf
dec
and
bound
cmpsl
xchg
lcall
into
adc
xor
mov
sbb
add
outsb
cmpsl
iret
xchg
pcmpgtd
sub
xchg
in
jmp
jo
scas
js
push
gs
cli
jle
cmpsl
sub
shlb
sbb
dec
jg
mov
imul
mov
daa
adc
scas
adcb
mov
pop
ret
pop
test
sarl
and
out
outsb
cmc
xchg
mov
out
shll
cmp
push
jp
jle
inc
cmpsl
dec
cmpsl
or
dec
xchg
cmp
push
mov
jl
stc
sub
pop
mov
aas
cmpsb
sar
and
mov
into
or
mov
into
cmp
mov
aad
xchg
imul
pop
pop
xor
cld
pop
fsubs
cmp
xchg
and
je
ficoml
sbb
mov
lcall
dec
mov
les
dec
cltd
scas
or
push
out
or
xchg
mov
pop
stc
adc
cli
mov
jno
js
out
mov
jne
and
shll
stc
sti
call
jecxz
mov
clc
fsubl
dec
aad
lcall
pop
inc
sub
shll
dec
mov
jl
ja
and
int3
adcb
call
imull
enter
mov
xor
lods
aas
cltd
and
pushf
jecxz
roll
fimuls
es
popf
loope
or
stos
push
mov
sbbb
cs
das
mov
push
pop
cmp
test
jb
rcll
push
and
aam
test
inc
mov
cmp
loope
jp
push
jl
mov
les
fimuls
lcall
and
je
or
mov
imul
sbb
in
xor
xor
gs
mov
sbb
pop
repz
jae
dec
ja
push
dec
sbb
mov
cmp
push
inc
pushf
in
xchg
lret
outsl
push
adc
pop
xor
add
icebp
enter
aad
mov
mov
cmp
ficomps
push
xchg
das
lods
fs
movsb
dec
mov
sti
push
xchg
xor
sub
repnz
fstl
popa
test
dec
inc
jmp
sbb
or
xchg
pop
mov
inc
mov
sub
pop
push
mov
and
xlat
inc
loop
or
roll
pop
mov
jg
dec
and
mov
push
mov
ror
mov
mov
rcll
pop
add
or
jno
sub
mov
cli
cs
push
ret
fsubrs
pop
cs
or
lret
pop
xchg
xchg
push
mov
xchg
push
or
mov
jp
push
sub
test
sbb
fldenv
ss
incl
jge
inc
or
dec
in
jecxz
and
xchg
mov
xor
push
popf
jecxz
dec
pop
adc
dec
pop
push
mov
lods
fs
out
mov
test
arpl
mov
out
inc
fstpt
jp
dec
test
test
jmp
in
popf
fcomps
lahf
push
ret
shrl
xchg
mov
sbb
cmp
pop
clc
aad
mov
stos
mov
sbb
mov
lock
mov
fwait
jbe
in
ja
xchg
sti
mov
mov
insl
imul
mov
std
mov
sub
jmp
jo
xchg
sbb
pop
mov
or
mull
sub
add
fucomip
add
push
fiaddl
int
cld
rep
cli
arpl
leave
mov
mov
mov
sub
or
and
pusha
mov
sub
sub
and
dec
mov
cmp
pop
rolb
lcall
sub
scas
repz
cmp
aas
loope
sbb
mov
xor
pop
push
jmp
insb
push
or
mov
stos
push
das
push
pop
jecxz
stos
lock
pop
cld
add
rcrb
mov
lret
pop
pop
jmp
in
cmp
mov
scas
fildl
pop
js
xchg
mov
imul
sub
fiaddl
sbbl
or
sbb
inc
insl
jns
stos
data16
sub
lock
ret
leave
int3
mov
jmp
dec
mov
scas
dec
xchg
mov
mov
xor
fldcw
imul
int3
sub
popf
fld
push
or
push
stos
cmp
test
out
push
stc
sub
sub
imul
sub
add
push
mov
dec
test
cwtl
sbb
loop
inc
push
mov
jne
lret
cld
call
mov
xchg
test
lds
jg
add
call
repz
push
fidivl
mov
movsb
push
push
mov
or
mov
test
mov
xor
jne
and
inc
notb
or
jbe
inc
dec
stos
lcall
jp
mov
mov
pop
jle
dec
dec
xlat
or
outsb
pop
test
sbb
and
icebp
jb
movsb
out
dec
je
add
int3
test
jb
pop
scas
test
add
and
aas
mov
jmp
mov
xlat
cmp
jecxz
movsb
jmp
cmp
add
inc
xchg
or
mov
imul
mov
hlt
roll
mov
jg
imul
das
mov
scas
xor
fnstcw
adc
cli
out
xchg
pop
pop
mov
movsl
insl
test
mov
cmp
xlat
std
dec
dec
mov
sti
pop
stos
inc
cmp
inc
cmp
jns
push
add
push
mov
mov
outsb
lcall
adc
loop
cli
mov
stos
adc
std
fcmovbe
stos
outsb
sti
cmp
push
rorl
cld
adc
fistps
add
jmp
push
mov
inc
rcrl
mov
mov
mov
mull
ljmp
inc
rcrb
js
jbe
jl
dec
mov
addr16
adc
mov
cwtl
lea
mov
cwtl
fisttpll
xchg
jmp
fcmovne
stos
jne
or
fucomi
stos
fwait
inc
mov
imul
jp
mov
cmc
mov
mov
in
mov
stos
cmpsl
fcomi
jo
divb
pop
hlt
dec
pop
mov
sbb
es
fimuls
sbb
mov
stc
xchg
dec
mov
nop
out
call
fstpt
cmc
add
mov
in
jns
sub
dec
adc
xchg
sbb
mov
inc
jge
fistpll
lea
fidivl
sub
or
stos
xor
sbb
ds
sti
adc
and
inc
push
cmp
sub
clc
adc
testl
pop
and
mov
push
mov
adc
jle
inc
jb
mov
cmp
cltd
or
dec
dec
pop
mov
push
pop
mov
fidivl
cld
cmp
rcrb
fcmovu
dec
cmp
jmp
insl
repz
lcall
mov
dec
jp
sbb
imul
dec
or
push
lcall
in
mull
dec
cmp
push
ja
and
mov
push
pop
adc
adc
jmp
or
push
mov
mov
mov
addr16
or
or
mov
test
out
jecxz
mov
je
pop
aad
in
gs
push
fnsave
sbb
lea
es
and
or
lock
mov
pop
js
mov
idivb
enter
lcall
iret
pop
lock
push
cmc
testb
adc
hlt
mov
adc
push
xchg
dec
lock
je
icebp
fsts
fnsave
lock
into
cmp
jecxz
jmp
xor
clc
push
push
js
xlat
adc
jl
test
or
cmp
and
sbb
add
and
cmp
mov
inc
call
dec
rorl
cmpsl
int3
inc
xchg
or
dec
sub
jae
and
leave
pop
in
jne
sbb
mov
arpl
jl
cmp
insb
adc
repnz
push
cli
cmpsl
mull
loop
notl
cli
mov
pop
and
sbb
int3
frstor
lret
ss
jmp
imul
cld
push
leave
pop
pop
int3
mov
rcrl
xchg
das
mov
mov
addr16
dec
mov
sub
jns
mov
push
lahf
pop
mov
mov
cmc
mov
dec
mov
jns
push
mov
in
mov
push
bound
jns
es
xchg
xor
xor
sbb
add
in
into
push
add
sarb
imul
enter
pop
sbb
jg
ja
xor
sbb
pop
scas
enter
ret
stos
aad
mov
hlt
imul
sbb
aas
lret
das
push
aaa
neg
mov
sbb
fstps
jo
stos
es
sbb
push
out
es
dec
out
or
pop
scas
adc
arpl
in
add
loop
inc
cmp
pop
cld
xor
fldenv
pop
shr
xchg
imul
mov
int3
pop
lret
mov
fidivrs
mov
mov
scas
xchg
lods
adc
jae
inc
lods
add
xchg
xchg
mov
inc
movsl
fnsave
ficoms
pop
xchg
dec
adc
push
int3
clc
mov
push
jp
pop
push
jae
pop
inc
pop
fwait
imul
pop
mov
sbb
dec
inc
pop
mov
push
lods
fs
mov
imul
mov
mov
ret
dec
xchg
test
or
lahf
mov
or
insb
arpl
mov
jecxz
jo
retw
aad
clc
cmp
push
or
in
push
and
adc
add
loope
jl
and
xchg
cld
jns
fstpt
sub
sbb
jp
pop
mov
lret
mov
cs
dec
scas
mov
pop
or
dec
sub
ljmp
js
xor
rcrl
and
test
stos
outsl
mov
in
xchg
sbb
clc
add
dec
dec
adc
fucomip
xor
pop
mov
mov
sbb
sub
jp
inc
pop
inc
imul
add
mov
push
call
adc
jne
rorl
mov
mov
xchg
out
and
dec
mov
mov
push
or
outsb
xchg
movsb
aaa
outsl
arpl
fisttpl
adc
cmp
fdivs
or
fucomip
js
sbb
jecxz
push
dec
fnsave
jg
xchg
ret
iret
sub
stos
fldt
mov
mov
mov
sbb
int
xor
or
push
pop
lahf
xor
jns
stos
sti
popa
xor
xor
push
cmp
sbb
pop
or
repz
fwait
push
jo
and
rclb
lret
movsb
fisubrl
hlt
int3
dec
and
mov
adc
test
push
cmp
shll
inc
jbe
stos
roll
mov
adc
pop
inc
scas
push
push
outsl
xor
fnstsw
sbb
push
sahf
nop
mov
scas
scas
and
scas
lods
or
push
push
out
and
movsb
sbb
mov
es
cmpxchg
lret
jbe
dec
jns
mov
aad
cmpsb
cmpsl
inc
mov
mov
outsl
or
das
stos
mov
dec
push
fdivrl
jnp
cmp
insb
push
jbe
or
lock
push
cwtl
mov
sub
jne
xor
adc
or
cwtl
cmp
jecxz
cmp
inc
fldcw
cli
cmp
pop
cmp
xor
movsl
sti
das
cmpsl
cmp
inc
sbb
mov
push
xchg
xchg
movsb
add
mov
shlb
pop
test
fldl2t
mov
jbe
cmc
fdiv
out
mov
loop
mov
pop
jnp
stc
ret
fstpl
sub
cld
insb
mov
mov
or
jmp
fwait
sbb
lcall
out
and
shrb
in
xor
call
in
arpl
gs
push
push
notb
cmc
shr
in
fadds
mov
sbb
iret
jb
push
in
std
sbb
or
sub
xchg
dec
out
sbb
adc
xchg
or
push
hlt
jb
shll
inc
in
cli
pop
mov
cmp
iret
push
mov
pop
iret
dec
push
mov
leave
or
aas
into
lcall
jb
xor
hlt
divl
push
in
sub
inc
mov
mov
fcmovnu
mov
mov
les
jae
popa
mov
or
sti
xor
call
push
pop
sti
das
mov
pop
and
or
je
lcall
mov
mov
xor
cli
pop
repnz
cmp
pop
push
mov
pop
pop
dec
push
seto
or
lcall
jb
add
hlt
divl
pop
pushf
inc
pop
cli
popa
lods
int3
pop
cmp
movhps
mov
pushl
or
xorl
popa
mov
or
jb
hlt
mov
xor
rolb
cli
xchg
out
testb
enter
mov
stc
aaa
dec
jbe
push
imul
ret
lcall
xorb
cmpsb
idiv
rolb
leave
mov
mov
sub
sti
jmp
cmp
aaa
pushw
sti
lds
push
nop
fsubs
cmp
js
or
fdivr
sti
fiaddl
popa
mov
or
inc
mov
lea
or
mov
sarb
xor
xchg
xor
imul
mov
fsubrs
sbb
add
mul
stos
sbb
leave
cld
jl
fildl
insl
adc
loope
stos
or
pop
in
lret
mov
cmp
push
mov
mov
xor
inc
sbb
out
push
scas
cmp
push
cwtl
cmp
push
inc
repnz
outsl
pop
or
js
arpl
test
fcmovnu
sub
repz
sbb
mov
fcmovu
mov
mov
je
addr16
sub
aaa
notl
out
pop
mov
stos
in
pop
jnp
push
out
mov
pop
popa
movsb
sti
in
pop
stc
cmp
aaa
cmpsl
mov
clc
sbb
mov
mov
jae
out
or
xor
aas
imul
mov
push
out
dec
jecxz
fcmovnu
pop
mov
cmp
negl
bound
push
fisttps
sub
out
cs
fcmovnu
imul
cmp
mov
lret
sbb
xlat
arpl
sub
lcall
or
jl
push
loop
cmp
imul
mov
out
cmp
int
lret
mov
outsb
jp
or
stc
sub
mov
mov
jmp
or
jae
cmp
repnz
cmc
push
fdiv
mov
pop
lret
jecxz
fwait
loope
iret
mov
or
push
lods
jle
js
aas
push
loop
or
xchg
lret
movsb
mov
fxch
pop
adc
stc
dec
mov
xor
test
jbe
sub
lea
daa
fcmovnbe
insl
mov
lods
push
pop
into
or
fwait
mov
mov
push
mov
or
pushf
add
sbb
and
leave
icebp
add
in
adc
fdivrs
ja
fidivs
dec
into
xchg
test
daa
xchg
adc
push
mov
mov
push
mov
inc
cmp
dec
repz
movsb
sbb
xchg
jp
subb
add
push
adc
in
pop
xchg
test
pop
out
inc
sahf
ja
fnstsw
mov
and
dec
xlat
push
sub
cld
div
in
add
je
cmc
sbb
jecxz
add
popa
mov
in
mov
aad
lcall
sti
inc
cmp
add
mov
sbb
or
mov
fwait
cld
jae
pop
in
pusha
clc
mov
dec
test
push
faddl
fdivrs
push
sub
mov
xor
jbe
push
add
pop
mov
in
ljmp
scas
xchg
mov
adcb
test
int
add
test
in
mov
call
lds
push
imul
aas
sub
lds
aam
add
jae
inc
inc
cmp
lock
mov
es
and
in
ficompl
ds
enter
cmpsl
cmp
stos
mov
xchg
mov
jecxz
idivl
mov
cmpsl
scas
cwtl
leave
lahf
sub
sub
cld
fildl
jae
pop
inc
xor
inc
or
negl
fdivrs
and
in
sub
stos
lret
sbb
xchg
sbb
mov
cli
popa
xchg
sub
or
mov
test
loopne
mov
xor
aam
add
push
and
and
sub
in
mov
popf
jecxz
adc
lcall
mov
mov
out
ja
pop
std
xchg
mov
sbb
popa
or
and
out
mov
dec
in
jae
dec
out
mov
dec
out
inc
scas
fmul
xor
sbb
ficompl
repz
cld
jmp
into
inc
add
orl
xor
add
sbb
mov
clc
sarl
jle
mov
ficompl
psubw
stos
cmp
pop
in
cs
aas
sub
mov
mov
xor
mov
aas
push
fisubl
push
cli
jne
ret
jp
addr16
mov
and
mov
mov
sahf
or
jne
popa
or
dec
jbe
aas
xorl
dec
jnp
fwait
ret
dec
out
fdivrl
lods
lahf
loope
xchg
popa
not
ret
mov
sub
cmpb
push
push
pop
aaa
mov
neg
scas
sbb
in
sahf
sub
fisttpl
sti
or
dec
movsl
sub
cmp
ljmp
repz
or
lods
lcall
adc
xchg
pop
xor
jle
push
or
jmp
xchg
sub
add
jae
xchg
jns
inc
repnz
sbb
inc
cmp
mov
adc
roll
xor
jo
xchg
cmp
or
test
xchg
sbb
inc
inc
and
hlt
mov
out
pop
fmuls
pop
dec
jne
mov
es
jle
stc
xchg
pop
mov
jns
or
repnz
mov
fstpt
pop
ds
mov
lret
and
sub
cli
enter
popa
shrl
pop
inc
adc
int
jae
aas
popf
sbb
stc
rorb
dec
movsb
push
jl
mov
adc
fimull
fdivp
xor
or
jg
ret
je
sti
aaa
sti
sbb
in
lock
xor
cmp
mov
movsb
scas
jns
mov
fmull
xor
lret
and
fidivrs
out
mov
dec
fsubrs
xchg
add
cmc
scas
and
dec
sub
clc
or
shrl
or
pop
les
jp
popa
out
into
mov
adc
sbb
push
in
and
mov
in
adc
cwtl
xchg
stos
dec
mov
push
sub
imul
fimull
daa
in
pop
push
adc
jl
call
pusha
mov
rcrl
inc
shrl
call
cmp
fnsave
mov
sub
xlat
or
mov
add
jmp
lock
mov
jbe
xlat
cmpsb
xchg
xorl
pop
adc
xor
sbb
pop
xchg
in
sahf
jae
mov
movsl
inc
sub
pop
push
cltd
push
arpl
insb
gs
inc
pop
scas
sbb
inc
repnz
jp
lods
fidivl
jae
in
loope
cltd
push
jo
push
insb
lds
xchg
je
jbe
mov
jns
mov
adcb
pop
mov
xlat
push
jbe
iret
xchg
pop
mov
jno
out
inc
cltd
sbb
cmp
aas
sub
mov
xlat
cli
adc
fcomi
imul
fucomi
vmread
mov
movsb
mov
shlb
pushf
pop
jne
mov
stos
inc
adc
imul
jp
add
insb
movsl
adc
stos
aaa
test
cmpsb
fistpll
insb
mov
cmpsb
rorl
int3
aad
adc
lds
in
mov
fwait
dec
inc
inc
cmpsb
ja
mov
xchg
adc
lods
add
sub
add
data16
dec
std
jns
dec
push
cmp
mov
call
popa
out
clc
cmp
lret
insl
in
pop
adc
fsub
mov
cltd
add
movsl
ret
xchg
mov
pop
stc
ja
xchg
enter
sbb
jp
je
mov
fistps
jb
mov
or
xchg
cli
lea
dec
movsb
test
out
in
das
setge
xor
pop
je
insl
mov
pop
and
inc
sbb
sub
jmp
je
pop
jle
mov
stos
inc
mov
insl
cwtl
and
cmp
adc
ljmp
cwtl
int
mov
sub
scas
dec
xchg
fldcw
push
test
mov
jecxz
and
xor
in
push
stos
mov
test
or
lret
jmp
dec
or
push
dec
jle
test
pusha
cmp
mov
fs
test
cmp
pop
pop
imul
mov
ljmp
inc
sbb
pop
cmp
mov
cmpsb
stc
cmp
bound
push
addr16
stos
jne
sbb
sub
mov
push
std
mov
pop
sub
bound
mov
orl
push
mov
popa
mov
mov
sbbb
fstpl
ja
cmp
push
stc
es
ja
cmpsl
mov
pop
inc
dec
xchg
test
cmp
mov
fdivrl
dec
ret
mov
mov
mov
cmpb
movsb
fsubr
sbb
loop
jl
pop
mov
adc
mov
mov
test
mov
jne
xchg
lods
inc
xor
jbe
cwtl
pop
mov
jle
fwait
sahf
enter
cli
dec
ja
xchg
stc
sti
jbe
xchg
inc
xor
push
dec
mov
or
cltd
ds
push
imul
mul
add
lahf
xchg
push
scas
testb
data16
mov
clc
cmc
repz
data16
je
int
fistl
pop
sub
cmpsl
cmp
dec
push
mov
movsl
sbb
out
stos
lock
sbb
or
pop
adc
pop
cmp
cs
jecxz
push
jl
jae
adc
pop
data16
pop
xchg
cld
cmpsb
push
outsb
pop
out
jne
push
and
sbb
push
es
push
mov
movsb
stos
loopne
pop
mov
es
push
pusha
out
lock
add
dec
pop
call
cmovo
cli
jne
call
mov
mov
aam
ja
popa
sub
xchg
cmpsl
lcall
xchg
push
hlt
out
mov
mov
mov
ds
sub
pop
and
pop
das
xlat
xchg
ret
mov
mov
sub
fistpl
sbb
jns
mov
out
pop
adc
in
imul
add
adc
test
arpl
sub
xor
push
insb
popf
push
popa
push
aad
arpl
enter
dec
test
push
das
ja
cmpb
pop
mov
or
sbb
or
push
mov
loop
sbb
inc
popf
test
mov
bound
sub
jmp
in
js
inc
add
pop
out
jmp
cmpsl
fisttpl
int
push
je
mov
cs
sahf
push
fsubs
sbb
inc
mov
pop
test
push
negb
stc
addr16
mov
leave
push
lahf
mov
call
cwtl
mov
cld
xchg
jb
addr16
insl
ja
cli
repnz
ret
frstor
inc
insl
pop
push
xor
icebp
xchg
push
ja
ss
jecxz
sti
pop
jno
add
xor
jno
jns
insl
mov
sub
imul
mov
filds
sbb
jo
ljmp
jbe
mov
push
bnd
rclb
out
stos
lock
sbb
jp
push
cmp
sub
popa
sbb
nop
sub
adc
xchg
fisttpll
cmp
mov
pop
add
add
or
mov
or
sbb
sti
ja
xor
or
ja
jecxz
lods
test
push
mov
mov
icebp
pop
jecxz
push
dec
mov
scas
mov
dec
push
rcrl
lea
ret
mov
and
inc
push
daa
mov
testb
push
dec
lret
pop
push
in
mov
fidivrl
enter
mov
lret
fdivrs
add
mov
repnz
arpl
add
out
std
inc
xchg
xchg
cmpsb
inc
dec
rcll
push
es
ljmp
jne
mov
xchg
iret
mov
jl
mov
jae
xor
jb
mov
mov
and
push
cmc
jns
pop
mov
push
lcall
sub
fnsave
insl
mov
mov
or
clc
jns
ja
pop
out
shr
cmp
push
jne
leave
outsb
or
lds
mov
sbb
mov
push
cmpsb
outsb
jecxz
sbb
inc
fstl
ljmp
out
cmpsl
mov
test
inc
mov
rcrb
push
cmpsb
pop
lahf
inc
jp
add
push
jp
adc
xlat
mov
jecxz
pop
sti
sbb
lret
jp
xor
rolb
cmpsl
mov
nop
sbb
mov
fstl
dec
stos
pop
sbb
inc
repz
imul
lock
mov
fwait
xor
push
insl
xor
sub
repz
cs
cmp
repz
xchg
add
jb
mov
arpl
cmc
in
mov
in
cmp
les
addl
je
in
pop
or
or
int
xchg
xor
rcl
ja
sbb
cmpb
cltd
pop
sub
lret
in
mov
or
in
dec
xchg
sub
in
or
js
dec
cmp
cmp
xlat
inc
jno
xchg
dec
mov
pop
int
inc
push
jns
inc
sbb
popa
push
jae
iret
jns
and
aaa
pop
mov
lock
stos
jmp
stc
push
les
ljmp
adc
lret
scas
imul
mov
imul
sub
cli
lods
jecxz
sbb
dec
ss
enter
and
cmp
mov
movsb
insb
test
cwtl
sub
jnp
push
enter
ret
fldl
cmp
jecxz
enter
and
popa
mov
mov
cmp
js
ds
mov
arpl
dec
mov
push
insl
or
xchg
mov
cmc
shrb
subb
cmp
push
pop
cmp
inc
sub
mov
jl
and
fistps
loopne
jne
idivl
mov
je
inc
js
enter
rcll
icebp
data16
sub
or
push
ljmp
push
sbb
pop
sbb
mov
adc
jp
test
xchg
xchg
imul
loopne
jmp
sbb
call
pop
out
cld
sbb
fdivs
mov
cs
js
hlt
sub
ficoms
jo
imul
pop
or
cmp
fwait
ja
fildl
cld
mov
dec
popa
mov
or
inc
adc
inc
mov
xchg
into
mulb
or
inc
out
cmp
icebp
imul
jne
or
pop
mov
lock
je
nop
out
mov
cmpsb
in
ficompl
ret
stos
push
dec
mov
sub
leave
das
aaa
sbb
mov
mov
xor
into
dec
movsl
scas
adc
stos
js
stos
jmp
xchg
imul
sti
mov
out
cmpsl
jecxz
mov
sbb
sbb
jmp
mov
push
cmp
sub
testl
mov
and
sub
jb
mov
dec
mov
in
mov
ds
or
popa
cmc
fs
cld
lock
inc
ljmp
idiv
pop
and
mov
aas
mov
dec
push
jge
movsb
in
ret
into
icebp
out
mov
mov
ret
movl
lahf
cmpsb
mov
sub
mov
xor
mov
imul
or
jp
imul
loope
clc
cld
push
xchg
mov
leave
jmp
fnstcw
sbb
jno
cmpsb
sub
ss
jb
mov
xor
mov
jecxz
mov
cmpsb
jp
pop
mov
or
lret
dec
add
bound
enter
push
hlt
mov
lret
jle
frstor
sarb
dec
es
gs
inc
out
movsb
sub
mov
stos
pop
pop
xchg
mov
lcall
push
js
or
pop
mov
cmp
adc
push
push
ds
lcall
pop
gs
cld
lret
mov
push
or
xor
clc
inc
ja
sub
mov
jmp
or
daa
sub
lret
iret
pop
cmp
fiaddl
fists
jp
sub
dec
sub
sub
in
sbb
inc
or
xor
movsl
outsl
fwait
xchg
xchg
jge
push
stc
pop
push
cmp
adc
push
lret
lret
and
jmp
adc
popl
xchg
pusha
stos
std
jmp
mov
push
jb
xor
mov
sub
pop
cmpsb
insl
imul
xor
adc
sbb
cmp
insl
in
jecxz
xlat
sub
mov
ficomps
imul
sub
jno
sbb
mov
in
sbb
pop
sub
push
mov
js
jecxz
and
push
mov
sub
inc
ss
lcall
ljmp
cmp
sbb
jns
mov
xlat
mov
sbb
cmc
sub
xchg
mov
mov
sub
jecxz
xchg
jp
xor
jns
sub
jae
pop
out
pop
push
fidivrl
outsb
fsubr
xchg
jp
pusha
sbb
xchg
mov
sbb
pop
jns
mov
inc
xchg
mov
pop
mov
insb
adcl
aas
mov
aas
repnz
and
loop
mov
jmp
js
inc
out
jl
sti
scas
fwait
xor
outsl
mov
xchg
mov
dec
push
in
cmc
push
jp
jae
xchg
sti
lret
daa
rcll
inc
dec
movsb
adcb
enter
lods
xchg
push
repz
xchg
sub
enter
insb
roll
std
jnp
idivl
dec
stos
mov
les
ret
in
jae
cmp
push
loopne
pusha
addr16
xlat
cmp
pop
addr16
mov
mov
xchg
xor
lods
rcll
cmp
mov
les
repz
jae
dec
jmp
mov
int
dec
cltd
imul
cmp
sbb
jecxz
push
scas
xor
jle
and
lods
int
lea
lcall
stos
pop
sub
enter
cmp
call
mov
add
add
cltd
mov
fimuls
ds
repnz
or
mov
out
ret
push
repnz
jge
test
lcall
scas
dec
push
jb
leave
pop
mov
xor
jb
pushf
pop
sbb
movsl
fwait
add
movsl
inc
js
leave
packssdw
in
or
xchg
shl
popl
je
cmp
dec
mov
js
mov
lods
cmp
mov
xchg
and
enter
xor
pop
cld
pop
dec
push
aaa
jns
imul
xchg
fnstcw
dec
hlt
divl
push
pop
cmp
lcall
movsl
inc
js
imul
xchg
push
pop
pop
push
pop
sbb
fldl
inc
sub
or
fsubrs
clc
mov
lcall
lret
push
dec
dec
inc
ds
sub
xchg
push
fld
cmp
jmp
pop
enter
movsb
xchg
xor
fwait
mov
xor
enter
aam
test
fs
add
cmp
cmp
movl
in
ret
ss
or
mov
cmp
jmp
call
imul
pop
in
push
imul
dec
ja
cli
sub
adc
out
adcl
dec
jne
adc
ljmp
jo
lock
pop
add
es
lahf
fistps
ja
pop
sahf
rcrb
sarl
dec
sub
sub
lock
enter
lods
fstpt
inc
stc
inc
sti
out
cmp
imul
jmp
insb
adc
js
addl
add
or
pop
add
popa
ficompl
pop
push
sbb
or
sbb
dec
pop
xchg
cmpsl
jecxz
divl
cmpsl
mov
adcb
xor
mov
dec
aas
enter
lret
movsb
fs
xchg
xchg
mov
mov
shll
addr16
mov
fs
add
cli
jmp
mov
jl
xchg
test
imul
lds
add
call
xchg
dec
jl
pop
inc
stos
xor
jns
xor
mov
shl
cmp
insl
xchg
cmc
pop
sub
inc
fwait
or
sub
repz
addr16
insb
or
adc
mov
dec
push
repnz
scas
jno
lcall
fcompl
sub
push
inc
jge
imull
cltd
jg
stc
cmp
inc
mov
jbe
js
pop
std
xor
dec
mov
shrl
cli
cld
xorb
addr16
in
clc
jae
push
bound
int3
iret
std
sti
out
push
icebp
out
inc
mov
adc
dec
add
sub
mov
jnp
iret
enter
xchg
stos
fstpt
jge
mov
mov
movsb
push
pop
mov
and
mov
mov
in
lcall
adc
push
mov
std
pop
xor
in
add
divl
pop
fdivrl
sbb
xchg
hlt
xor
nop
push
jp
imul
jg
aaa
mov
cld
stos
out
imul
mov
push
push
cld
movsb
xor
xchg
ret
sahf
sbb
sti
fwait
aad
jns
mov
popl
xor
pop
dec
enter
inc
fadd
pop
or
mov
mov
push
mov
mov
inc
and
push
mov
push
out
pop
fwait
jb
cmp
icebp
cmp
cltd
in
repnz
dec
jl
push
xor
jno
mov
xchg
pop
dec
cltd
loop
inc
hlt
jno
xchg
enter
push
dec
xchg
sbb
stos
fldl
xor
or
imul
repnz
mov
sub
or
mov
sti
pop
fnstsw
dec
leave
jl
or
lea
cmp
or
rcrb
leave
lock
or
in
clc
mov
mov
rcll
pop
dec
pop
inc
and
sbb
dec
sbb
xor
clc
sbb
std
cmpsb
sub
loopne
insl
mov
lock
sbb
lods
movsl
adc
sarb
jg
push
and
sbb
sub
mov
push
sub
fcmovne
out
inc
inc
ljmp
dec
cmp
cltd
outsl
dec
fwait
jmp
cmp
pop
shll
enter
mov
jecxz
push
sbb
mov
stos
cmp
out
mov
ljmp
leave
ds
mov
pop
out
jmp
arpl
call
pop
lods
popa
test
call
out
and
push
pop
dec
testb
jmp
imul
adc
subl
dec
pop
jl
sbb
and
inc
inc
sar
mov
movsb
js
cmp
push
jae
insb
outsb
inc
cli
xchg
mov
fsubrl
gs
stc
pop
adc
sub
call
loop
add
aas
mov
dec
push
loop
in
and
jle
jl
adc
mov
push
movsb
test
push
mov
mov
and
div
push
mov
ljmp
repz
dec
mov
inc
dec
jmp
mov
subl
je
lcall
repz
in
adc
in
mov
ljmp
dec
push
divl
xchg
in
cmp
daa
mov
cli
xchg
pop
mov
repz
imul
xchg
mov
jmp
inc
mov
insb
test
jmp
push
fadds
adc
cli
loopne
roll
aad
jl
outsb
test
shll
inc
mov
clc
fwait
dec
xchg
ja
cmp
inc
vpslld
dec
leave
sub
sbb
scas
or
inc
xchg
fdivrs
and
mov
pop
xchg
cmp
filds
xchg
xor
jp
lcall
jns
mov
adc
push
rclb
cli
fisubrl
and
sub
xchg
cli
jns
dec
fcomi
add
outsl
mov
jns
test
bound
js
mov
lock
jbe
lahf
cmp
sbb
ja
mov
xchg
sbb
out
fwait
out
jp
or
or
scas
fstpl
xor
fisttpl
sub
sti
mov
clc
or
pop
sub
mov
mov
mov
popf
ret
pop
jae
adc
push
pop
add
in
mov
in
lret
push
mov
test
or
push
xchg
sbb
data16
or
mov
lret
outsb
mov
shr
ja
sbb
mov
jae
fstpl
rorl
mov
xor
push
and
stos
mov
pop
rcll
jp
out
jmp
jns
call
mov
out
sbb
cs
fstl
lds
int
and
das
xchg
add
push
ret
mov
jg
ret
aas
cltd
push
xchg
and
inc
or
and
xchg
test
add
jg
pop
mov
dec
push
inc
dec
cli
in
inc
clc
pop
popa
addr16
inc
je
jmp
pop
jae
mov
jl
push
xlat
js
sbb
cld
adc
out
ret
cmpsb
fistpl
lods
stos
inc
pop
into
sti
jl
call
xor
jbe
shlb
jp
maxps
push
insb
aas
sub
lea
add
aas
jns
lcall
mov
outsb
aam
push
jno
pop
test
push
in
fwait
mul
leave
imul
div
out
test
test
rorl
mov
mov
cwtl
loopne
rep
cmp
adc
mov
mov
adc
pand
xchg
lahf
imull
pop
loope
push
or
test
repz
idivl
adc
inc
inc
int
int3
mov
ret
neg
add
dec
add
mov
arpl
pop
in
xchg
lods
adc
adc
sub
mov
call
jbe
sahf
aam
in
sbb
call
lods
adc
mov
in
inc
dec
pop
mov
es
mov
xchg
or
std
push
rolb
std
subb
mov
cmp
mov
ja
aaa
aaa
lock
push
and
addr16
stos
fsubs
and
arpl
jae
mov
pop
testl
out
jecxz
mov
cmp
in
fimull
imul
jb
stc
fnsave
stos
jns
in
ret
mov
testl
scas
insl
cmpb
jo
mov
push
pop
and
mov
cmp
fstpl
aaa
imul
cmc
pop
pop
dec
lds
popf
lahf
pop
xchg
bound
mov
rcrl
stc
fwait
int
mov
pop
and
fs
sti
mov
jmp
mov
push
testl
jmp
cs
addr16
mov
xor
cmp
pop
repz
ja
cmpsb
frstpm(287
js
mov
cmp
out
jbe
sbb
movsl
cmp
pushf
movsl
out
jle
loop
mov
xor
mov
jp
in
scas
cmpl
dec
dec
stos
fidivl
xor
pop
adc
rcrb
fstpt
insl
mov
fwait
lods
mov
xor
movsb
mov
xor
jmp
sbb
push
fwait
jl
aam
cltd
call
or
insl
lret
aad
cmp
out
inc
cmpsb
pop
ljmp
add
imul
insb
loop
int3
push
out
xchg
xchg
int3
shrl
sub
fstpt
js
sti
mov
call
es
dec
lods
inc
adc
repz
mov
lret
xchg
pop
sahf
mov
jae
out
stos
ret
scas
inc
sub
ja
imul
adc
out
jbe
mov
sub
aas
sbb
mov
jb
sub
add
cmc
jmp
pop
pop
lret
or
ficoml
jmp
fwait
insb
pop
les
es
rcr
xchg
cmpsb
mov
fld
mov
int
sub
mov
adc
lcall
mov
in
in
imul
enter
iret
sub
ss
dec
inc
bound
fstp
in
sbb
aam
add
pop
cmpsb
sub
in
cli
in
mov
jg
cs
inc
stos
out
dec
push
lods
in
pop
sbb
xchg
adc
jns
adc
test
lods
xor
out
pop
mov
jp
into
pop
in
roll
roll
mov
xchg
ljmp
repz
test
cld
out
hlt
sbb
rorl
in
pop
jecxz
insl
and
in
dec
sbb
dec
dec
in
sub
jp
shr
jno
xor
mov
mov
cmc
and
imul
xor
in
xor
inc
inc
pop
sbb
mov
add
and
testl
cmp
fwait
xchg
inc
movsb
mov
cwtl
jbe
dec
and
cmovae
mov
sub
fistpll
sub
sub
sbb
out
mov
addr16
dec
push
call
inc
xchg
xor
jl
adc
mov
rorl
lcall
imul
mov
dec
testl
xor
cmp
xchg
je
inc
mov
ss
mov
mov
in
out
xlat
loop
aad
pushf
inc
lock
roll
push
sti
ja
fstpt
pop
jns
pop
frstor
sub
imul
pop
xchg
in
loop
scas
andb
sti
jecxz
sbb
jp
pop
mov
add
ret
xchg
or
sub
jne
pop
jp
xchg
xchg
cmp
jb
pop
or
cmp
jno
sbb
fistps
add
out
rorl
mov
ret
push
fwait
cwtl
shrd
arpl
mov
mov
cli
and
push
out
out
cmp
ret
sbb
jle
lods
imul
push
shll
jmp
mov
aad
sahf
scas
sub
lods
jae
lret
fbld
fldl
pop
fisttpll
pop
pop
andb
nop
jns
out
mov
jno
sub
push
fwait
test
fucomp
bound
scas
jle
out
jle
fistps
xor
and
cld
dec
sub
jl
mov
or
ret
fiadds
add
mov
mov
in
and
lret
in
or
mov
xor
mov
data16
pop
leave
sbb
push
jbe
inc
add
lods
sahf
lcall
test
ficoml
xchg
sbb
sbb
jne
nop
inc
lock
push
or
push
push
and
push
inc
aad
scas
xchg
insl
pop
sub
lods
outsl
push
sub
adc
jecxz
or
movsb
aam
fildll
mov
xchg
jle
pop
pop
mov
fldt
ja
pop
jmp
shlb
cmpsb
xchg
cwtl
push
outsl
pop
in
dec
push
sarl
mov
xchg
test
aas
fwait
lds
cmpsb
xor
xchg
xchg
mov
shlb
or
mov
xor
pop
dec
mov
ljmp
lret
cmpsl
cmp
xchg
out
outsb
shll
fnstenv
ds
mov
pop
xchg
fneni(8087
mov
push
ja
movsl
inc
mov
mov
sbb
cmc
ja
aam
test
lret
aaa
fisttpl
inc
mov
out
cmp
pop
mov
mov
xor
std
popa
jmp
dec
mov
pop
cmp
cmc
sbb
xor
sti
jmp
sub
in
fwait
hlt
and
hlt
daa
inc
outsl
jae
pop
nop
stos
dec
pop
sub
addr16
rcl
and
enter
sub
das
dec
push
jmp
mov
cmp
pop
inc
sbb
mov
imul
xorl
scas
mov
jp
int
les
cld
or
test
jl
lret
or
or
xchg
sbb
adc
mov
dec
mov
xchg
add
lods
or
cmpsl
stos
inc
adc
sub
mov
in
mov
or
test
frstpm(287
test
lret
ret
data16
xchg
getsec
pop
xor
aad
mov
bnd
mov
out
push
adc
icebp
call
dec
leave
jmp
mov
sub
mov
sub
jbe
leave
adc
lret
pop
cmpsb
scas
and
getsec
fsubs
and
popf
stc
f2xm1
sbb
lods
mov
mov
ds
xor
fisubs
ja
cs
imul
jo
aad
push
pop
push
je
cmp
clc
sub
jmp
cmp
cmp
fwait
popa
fsts
push
inc
pop
mov
pop
dec
movsl
xor
cmpsl
jb
mov
inc
call
movsl
bound
sub
inc
mov
imul
adcl
push
sti
pop
jmp
inc
jno
push
push
and
mov
xor
int3
cltd
adc
jbe
adc
div
push
pop
stc
adc
jmp
fidivrl
pop
mov
xchg
int
add
fs
jl
mov
add
xchg
pusha
push
hlt
xchg
mov
inc
jle
enter
int3
or
cmp
mov
sub
lock
push
xlat
lcall
push
xor
sbbl
movsb
loop
test
pop
push
mov
lcall
stos
pop
cwtl
mov
pop
xchg
ficoml
enter
jp
rcr
inc
cmp
or
add
aad
add
aad
stc
fcom
clc
gs
jnp
js
fstpl
adc
sub
aad
mov
lahf
js
in
cld
mov
dec
sbb
in
les
loope
push
pop
xchg
xchg
cmpl
das
mov
sub
fadds
xchg
cwtl
lods
imulb
or
js
fdivrl
xchg
or
mov
dec
sbb
imul
leave
dec
xchg
call
mov
jmp
imul
pop
movsb
adc
mov
stos
outsb
ret
pop
or
ret
loop
imul
pop
fcompl
ja
sub
inc
sub
movsl
inc
test
movsl
fimull
sub
test
mov
ret
ljmp
cmp
cli
in
ds
cmp
jne
lcall
mov
jmp
xlat
addr16
repz
out
xchg
push
sub
xchg
mov
and
mov
ja
pop
ja
pop
addr16
test
mov
aaa
mov
fidivl
xlat
scas
add
add
push
sti
daa
lds
dec
mov
stc
jl
btr
mov
push
popa
xchg
pop
jno
mov
jmp
jns
xchg
jne
pop
push
inc
rorb
movsb
fwait
push
aaa
jae
pop
sub
mov
loop
lods
mov
cmp
movsb
movl
push
mov
sub
cmpsb
out
loop
jne,pn
out
in
push
lods
pop
inc
mov
in
and
pop
pop
push
inc
pop
sub
gs
add
clc
and
xchg
jbe
dec
sbb
aas
call
mov
mov
jne
jns
and
loop
imul
jp
iret
stos
insb
rol
mov
scas
mov
sar
jp
pop
jb
jns
leave
mov
rclb
movsl
addr16
mov
sbb
lock
scas
pop
pop
or
push
aas
mov
fcomp
je
fcomps
jp
repz
pop
jge
dec
mov
pop
jg
dec
fsts
jp
sahf
sbb
xor
rclb
into
ja
xor
outsb
add
sti
imulb
or
imul
jl
xor
das
cmovg
xchg
lds
mov
int3
mov
sbb
push
les
repnz
fdiv
cmp
dec
ficoms
int
pop
roll
aas
ds
icebp
out
mov
lcall
test
sbb
popl
mov
jl
adc
aad
mov
xchg
cld
insl
jns
xor
scas
mov
cmp
and
mov
xlat
inc
and
das
leave
xlat
or
xor
add
xchg
iret
xchg
pop
xchg
adc
and
xlat
or
xchg
in
es
xchg
mov
mov
js
or
adc
inc
cld
xlat
loop
jmp
fcomi
cmp
arpl
push
in
push
cmp
inc
xchg
cmp
mov
adc
test
rolb
in
sbb
stos
popa
data16
out
jge,pt
int3
push
add
xchg
cmp
data16
jp
push
lahf
orb
or
xlat
cmp
push
repz
pop
mov
sbb
mov
movsl
adc
loope
outsl
pop
arpl
inc
and
js
test
adc
je
jno
mov
icebp
repnz
jl
jbe
imul
cmp
divl
mov
xchg
popf
push
movsl
adc
pop
cwtl
repz
aas
jle
xchg
iret
jb
lock
jns
lods
cld
push
xchg
aas
and
enter
adc
int
mov
mov
lds
out
mov
popa
jge
pop
ficoms
inc
sub
jle
and
mov
xor
xchg
or
inc
pop
cld
mov
add
mov
mov
mov
fcmovnbe
stos
cld
pop
adc
xchg
int3
dec
inc
or
and
dec
cld
dec
and
xor
lahf
insb
sarl
adc
pop
xchg
cmp
es
imul
fistpll
dec
daa
cli
push
fwait
sub
jbe
jo
mov
aas
fwait
and
push
arpl
mov
leave
add
es
add
aam
jbe
xchg
cmp
fwait
hlt
mov
scas
pop
shlb
push
sahf
fwait
push
pusha
dec
mov
or
push
jno
popa
sub
mov
lret
pop
jmp
cld
stos
cmpsl
lcall
cmc
pop
jno
dec
jne
mov
inc
cli
add
imul
push
loopne
je
mov
repz
das
cmp
iret
xlat
sbb
repz
xchg
push
mov
push
sbb
fcmovu
inc
arpl
xor
stc
sub
xchg
inc
xor
inc
mov
mov
stos
into
testb
sbb
pop
inc
sbb
popa
lods
addl
in
out
out
fldl
sahf
call
push
cli
outsb
adc
mov
fs
ljmp
mov
jmp
cmp
add
add
out
cs
imul
adc
aam
pushf
fs
push
cmp
jmp
jne
fcoms
jne
test
subb
push
jg
out
and
pop
jle
jp
sti
push
pop
aad
in
lcall
cwtl
sbb
lahf
out
stos
ljmp
pop
add
jmp
jbe
mov
pop
in
daa
js
mov
jns
jecxz
sti
dec
test
xor
lcall
sti
mov
mov
pop
inc
mov
jp
dec
xor
addr16
and
jno
ret
sub
sub
outsl
cmp
jmp
inc
jb
jecxz
popa
xchg
mov
inc
pop
cltd
lds
xchg
addr16
popa
lock
or
leave
pop
jbe
sbb
mov
jp
cmp
in
cmpsb
jmp
in
mov
jmp
jae
aad
add
jge
mov
inc
mov
loop
inc
xchg
cmp
es
dec
jmp
sub
dec
popa
pop
sbb
or
inc
push
jns
mov
sbb
cmp
dec
std
addr16
aad
sub
pop
ja
pop
popa
xor
push
add
test
fisubrl
in
nop
idiv
cwtl
push
in
inc
jmp
sub
jne
ljmp
scas
addr16
xchg
mov
mov
dec
int3
pop
jae
or
roll
add
nop
mov
mov
xchg
icebp
mov
js
out
in
filds
inc
stos
mov
dec
sti
fdivrs
xor
outsl
call
add
pop
es
loope
repz
rorl
or
leave
data16
dec
jecxz
mov
push
insb
sti
jl
push
lret
sub
mov
orb
add
pop
in
pop
cmpsb
loope
dec
push
std
mov
mov
jns
jbe
mov
ljmp
sub
dec
pop
lret
in
test
out
xor
push
dec
mov
pushf
sbb
je
test
jmp
mov
inc
or
js
es
and
sti
es
es
subb
lret
xchg
fyl2x
dec
imul
call
sub
mov
out
dec
mov
daa
stos
inc
aaa
jbe
loope
imul
push
mov
mov
jbe
test
lods
imul
lret
or
mov
cmp
stos
mov
jns
mov
push
lds
lahf
sti
inc
and
not
sub
cltd
popa
pop
ror
stos
jmp
pop
test
mov
mov
int
and
outsb
iret
or
add
cmp
iret
adc
insb
and
and
xor
mov
jbe
fldenv
or
mov
or
clc
movsb
or
stos
add
pop
pusha
stc
dec
mov
clc
dec
xor
pop
jl
cmp
jp
stos
cwtl
jecxz
inc
enter
inc
movsl
rorb
mov
adc
mov
sbb
xor
jmp
dec
lds
inc
outsl
fwait
pop
in
pop
js
aad
dec
in
mov
test
fsub
jl
sar
je
cmpsb
cmp
sbb
mov
leave
dec
dec
and
insl
push
fmul
mov
js
cli
stos
movsb
xlat
clc
sub
nop
cmp
fwait
pop
jp
imul
adc
inc
fisttpll
mov
jmp
cmp
arpl
dec
xor
ja
sti
imul
adc
sar
lock
sbb
pop
js
neg
mov
mov
addr16
leave
in
xchg
mov
sub
out
sub
enter
stos
mulb
dec
xchg
loop
js
pop
push
add
mov
cmpsb
aam
mov
or
jecxz
cmp
es
pop
repz
push
add
je
mov
nop
ficoms
fsub
mov
lahf
cmp
cmp
lcall
mov
fimull
rolb
psadbw
mov
push
lock
out
fucomi
cli
sub
inc
arpl
pop
jmp
lea
stos
mov
mov
jae
xor
and
pushf
push
arpl
test
xor
sub
ljmp
call
jl
or
fwait
mov
ja
test
inc
arpl
testl
xor
int
les
orl
add
cmp
jb
or
mov
lahf
cmp
shl
or
pop
into
dec
imul
stos
cmp
cs
or
jmp
js
dec
outsl
cld
je
pop
mov
pop
imul
fdivrs
jge
aad
ljmp
sahf
pushf
mov
loope
mov
jecxz
mov
popa
push
mov
push
pop
filds
popa
iret
cmp
js
shll
bound
enter
mov
mov
loope
mov
push
add
enter
mov
dec
das
shll
fisubl
adc
mov
aaa
add
stc
frstor
or
call
cmpsl
ja
inc
clc
push
fwait
inc
jnp
pop
mov
inc
push
ret
cmpsb
inc
mov
pop
push
scas
ja
cmpsb
jp
outsb
mov
inc
jp
stos
xchg
fldl
sbb
shll
or
mov
ret
or
repz
stos
mov
jo
lret
cld
out
or
cli
xor
mov
push
pop
pop
movsl
jns
stc
mov
hlt
shrl
inc
or
test
es
mov
popf
pop
repz
leave
adc
outsl
or
es
bound
push
imul
out
or
hlt
sbb
loope
cmpl
in
fwait
insb
pop
xchg
xchg
xor
and
cli
and
pop
dec
mov
pop
jns
sbb
imul
mov
bound
nop
mov
sub
sti
or
fnstcw
push
cmp
mov
mov
not
or
mov
ja
and
out
and
fxch
pop
iret
sub
lahf
xor
jp
cmp
leave
pop
mov
dec
sbb
inc
in
imul
in
jne
xor
lret
mov
fistl
sbb
or
cltd
push
xor
xchg
out
aaa
in
scas
dec
cli
inc
mov
das
and
pop
fidivl
popa
nop
sti
sub
lods
xchg
idivl
mov
icebp
mov
cmpl
sub
pop
mov
cmp
repnz
aaa
clc
inc
mov
or
cwtl
in
rolb
fs
mov
aad
mov
mov
jp
mov
push
iret
leave
addr16
xchg
mov
fsqrt
mov
pop
mov
dec
loope
aas
sbb
test
pmullw
fimull
add
and
dec
stos
clc
jne
jge
add
jns
and
jae
or
fimuls
nop
add
stos
mov
cmp
or
aam
insl
mov
roll
sbb
pusha
repz
pop
nop
and
mov
outsl
add
add
pop
xchg
rcll
mov
cmp
fcmovnu
or
push
xchg
pop
jge
sub
stos
mov
fmuls
test
out
movsb
mov
stc
in
jge
dec
add
call
popa
mov
jbe
cmp
out
mov
imull
xchg
and
inc
inc
not
mov
imul
out
dec
out
adc
movsb
ss
lahf
je
push
sbb
sbb
iret
push
scas
or
int
xchg
lods
sub
movsb
lret
mov
test
pop
add
out
idiv
fbstp
lcall
push
sub
fisubl
lret
push
inc
hlt
cmp
stc
adc
and
jno
jbe
inc
outsl
inc
sbb
jno
jp
dec
mov
dec
arpl
or
ret
dec
dec
les
mov
sbb
mov
inc
sub
fnsave
jne
jno
jecxz
popa
repz
push
or
movsl
addb
pop
push
mov
and
push
lods
in
mov
stc
mov
sbb
cmp
daa
mov
rcrb
adc
inc
fs
jl
mov
arpl
pop
jmp
xor
orl
fdivrl
or
rol
repz
push
dec
push
cmp
sub
push
dec
aas
cmpsb
fs
cmp
push
jb
jns
jae
mov
sti
je
pop
adc
and
jbe
and
int3
sbb
mov
in
pop
stos
in
les
push
xchg
xor
mov
into
mov
imulb
out
push
add
call
hlt
or
aaa
mov
movsb
push
cmp
xchg
insb
pop
orb
sbb
dec
sbb
xchg
sti
insl
jp
push
cmc
outsl
sbb
cld
stos
je
out
sbb
cmp
mov
sub
mov
or
fnstenv
pop
jb
sti
inc
lods
or
xchg
in
or
cmp
outsb
pushf
out
out
sbb
in
push
stos
inc
pop
neg
mov
mov
rcll
mov
shll
adc
insb
jbe
ljmp
or
mov
in
and
xchg
jecxz
mov
mov
out
loop
add
cmpsb
mov
inc
dec
fcmovbe
jp
pop
mull
or
or
jns
imul
mov
mov
adc
xchg
add
imul
pop
sub
out
xor
push
jmp
push
sahf
lahf
outsb
dec
jae
das
imul
mov
enter
cmp
xor
push
mov
jp
outsb
hlt
push
push
xchg
jecxz
movsb
icebp
mov
enter
jp
imul
jl
and
stos
ret
mov
adc
sub
or
jmp
mov
mov
xchg
mov
inc
push
mov
in
data16
lret
aas
dec
pop
mov
in
jp
inc
addr16
push
jp
push
adc
or
lcall
xor
or
dec
mov
xchg
lods
or
sbb
inc
sub
xchg
clc
xchg
sbb
aam
lahf
dec
xor
mov
or
aam
jns
mov
daa
icebp
xchg
dec
cli
inc
sbb
out
cmpsb
mov
insl
jb
jmp
in
push
jp
and
hlt
in
call
mov
or
test
mov
shr
adcb
leave
loopne
aam
push
imul
push
loop
mov
out
sub
push
shl
sub
repz
leave
dec
ret
por
mov
push
into
inc
mov
in
lcall
loopne
stos
cmp
dec
mov
into
ja
xchg
cld
repz
cld
mov
into
mov
mov
es
mov
imul
movsb
pushf
push
sbb
lea
ror
push
mov
mov
sub
fdivl
shrl
movsl
jmp
outsb
loop
loope
cld
mov
adc
out
and
inc
cld
imul
into
pop
mov
stc
fucomi
dec
movsbl
in
lret
and
mov
push
xchg
or
lods
aad
adc
enter
or
fmulp
cs
push
test
int
sub
push
insl
push
nop
mov
jb
or
fistl
and
add
cmc
rorb
and
enter
sbb
mov
add
adc
and
ret
out
ret
jmp
pop
pop
imul
fstpl
mov
xor
or
xchg
addr16
inc
and
xor
lret
leave
pop
jmp
mov
loope
out
cmp
out
add
or
mov
sub
das
push
push
movsb
adc
lahf
xchg
cmp
mov
repnz
enter
stc
mov
push
jno
jp
jp
test
mov
fstl
or
jae
jl
jno
dec
cmp
in
out
clc
out
xor
pop
addr16
clc
add
lret
mov
lds
xlat
js
lret
pop
xchg
ret
sub
ja
sub
out
in
lds
fstpt
add
push
sub
int3
push
dec
push
ret
cmp
pop
test
push
pop
mov
sarl
lahf
mov
inc
lods
mov
or
xlat
and
adc
or
jg
or
pusha
sbb
and
gs
or
int
lock
aad
repz
decb
movsb
fstl
add
xor
and
test
sub
dec
imul
or
cmp
push
mov
jp
data16
inc
push
cmp
les
xchg
xchg
clc
xchg
das
mov
cmp
push
stos
mov
outsl
jge
add
jnp
movsb
pop
mov
cmpsl
into
push
xchg
and
mov
fidivrl
lds
xor
jecxz
adc
lods
movsb
sub
jbe
xchg
jno
fwait
add
mov
add
int3
repz
pop
repnz
dec
cmp
inc
out
ficoms
sub
jg
mov
lret
mov
sbb
cmp
sbb
pop
mov
pop
sub
lcall
iret
cli
xchg
xor
loop
pop
imul
adc
out
xchg
inc
add
dec
or
aas
shld
sub
into
pop
mov
cmp
pop
jecxz
sub
push
popa
push
mov
lret
push
call
idiv
xchg
or
scas
jns
idiv
das
mov
ror
test
in
dec
fwait
sub
stos
roll
mov
adc
jg
fwait
push
insl
sbb
pop
mov
clc
pop
mov
lods
sub
in
cli
pop
data16
mov
addr16
or
fistpl
mov
jp
jecxz
push
cmp
filds
pop
mov
shrb
js
jg
cld
cmp
jp
in
lods
loop
sbb
mov
and
call
pop
cmpsb
xchg
cmpsb
pop
sti
icebp
call
sub
cld
stc
pop
push
subl
movsl
xor
sbb
push
movsb
ja
lock
ja
in
test
popa
or
addr16
dec
jb
bnd
fistpl
jmp
cld
stc
jg
imul
cmp
pushf
xchg
notl
pop
test
push
add
mov
fsts
gs
mov
or
sub
pop
ficoml
test
cs
add
subl
jecxz
sbb
repnz
mov
fiadds
fcmovb
mov
mov
dec
popa
sub
enter
and
jns
adc
push
push
bound
data16
mov
imul
pop
push
pop
sbbl
clc
es
mov
cld
ja
fdivrs
or
ds
sti
push
mov
and
push
jle
push
pop
ret
mov
push
xchg
pop
cli
lret
or
test
fst
icebp
mov
jmp
pop
push
movsb
mov
jno
je
loop
ret
dec
outsl
pop
jecxz,pt
sub
mov
mov
addr16
push
and
movsb
fwait
xchg
scas
and
in
out
mov
mov
aam
push
leave
push
gs
stos
sbb
shll
out
sbb
inc
js
mov
xchg
aaa
add
xchg
lcall
in
loop
je
and
push
mov
mov
stos
push
in
das
ja
mov
in
lea
fisttpll
stos
test
out
jno
aam
int
xchg
mov
push
insb
xor
cmpsl
insb
adc
insl
cmp
in
stos
sub
push
xor
lret
jmp
fildl
mov
jnp
movsb
dec
xchg
push
rorl
pop
jno
or
cmp
jae
push
call
fildll
mov
sbb
jb
leave
mov
sbb
sub
in
jmp
pop
xchg
jg
push
dec
jmp
mov
imul
insb
xor
mov
test
pop
shrl
movsb
sub
js
push
jae
or
sti
cmpsl
adc
ljmp
add
dec
aad
jl
cwtl
hlt
pop
hlt
lret
adcb
xchg
jmp
aaa
mov
and
mov
mov
xor
stos
js
adc
leave
scas
and
adc
mov
ret
jo
mov
scas
dec
pop
popf
in
jns
ljmp
and
js
aad
dec
mov
mov
lret
lods
test
fisttpll
rcrl
movsb
sub
std
popf
sbbb
mov
dec
dec
inc
cmp
push
cwtl
ret
in
arpl
scas
fucomi
sub
imul
sahf
std
dec
push
xchg
sbb
and
mov
and
or
xor
mov
out
cli
jb
dec
sbb
mov
pop
jmp
test
gs
cmp
fisttpll
inc
fucomi
xor
lcall
pop
sbb
movsb
push
movsb
mov
pop
test
shll
add
lea
fs
and
jns
je
jecxz
push
sti
imul
jae
mov
add
repz
mov
sbb
add
push
icebp
cmp
mov
inc
nop
cmp
arpl
movsl
mov
adc
cmp
jecxz
dec
xlat
scas
enter
outsb
inc
pop
and
ja
xchg
and
fists
pushf
mov
jmp
cli
imul
jnp
xchg
stos
jae
mov
stos
xor
or
adc
lods
idivl
dec
lods
ss
xchg
mov
inc
icebp
mov
dec
add
fildll
cs
cmpsl
lods
insl
shrb
test
idivl
jp
arpl
dec
leave
pop
cmp
testl
dec
es
and
fwait
cmpsb
adcb
lock
scas
daa
in
dec
scas
pop
sub
sub
pushf
mov
imul
or
test
and
dec
iret
lret
mov
inc
aam
xchg
rcr
inc
mov
int3
or
mov
lret
daa
sti
lret
jnp
push
jecxz
fwait
out
pop
xchg
repnz
push
mov
aam
cmp
jns
mov
mov
push
pop
xor
dec
int
nop
jmp
stc
or
mov
out
aas
rorb
push
rorl
loop
ja
and
and
push
aam
push
fmull
sahf
out
dec
xchg
loopne
xor
stos
adc
movsl
mov
mov
stc
jo
add
daa
fxam
sbb
ds
std
and
sub
mov
call
negb
int3
or
loopne
pop
add
mov
in
test
adcl
aad
jg
fnstenv
repnz
sub
mov
jno
outsl
jb
mov
cmp
jg
cli
cmp
and
clc
jbe
mov
imul
sti
jo
sub
sbb
mov
popa
mov
daa
clc
or
lea
cli
fistl
mov
js
sub
es
mov
mov
mov
mov
inc
addr16
daa
js
mov
cmp
push
idivb
orb
cltd
cs
add
xor
or
mov
ss
clc
xlat
lea
mov
xchg
sub
xchg
dec
sub
add
mov
pop
jbe
push
ja
adc
mov
mov
dec
jns
insl
lds
push
gs
ljmp
xchg
jl
ss
dec
sub
pop
or
sbb
inc
loope
xor
jmp
mov
lods
int3
lods
or
push
cli
imul
cli
inc
std
push
jecxz
pushf
aas
or
iret
pop
and
add
push
push
lcall
outsb
pop
fnclex
jp
mov
gs
mov
mov
pop
adc
sub
in
xchg
sti
add
add
inc
ret
xor
sbb
xchg
in
call
sbb
cmovnp
pop
fisttpll
or
pop
inc
negl
je
int3
int
pop
push
pop
xor
pop
sbb
jbe
mov
or
fcomp
lret
pavgw
sub
and
fmul
fdivr
adcb
jp
shl
push
idivb
push
jp
ja
jecxz
xor
fwait
sti
lcall
cmp
and
mov
jle
adc
aad
not
mov
jp
rcl
xor
or
jae
cmp
pop
push
and
cmp
movsb
nop
out
push
call
lret
mov
inc
push
icebp
cmpsb
add
or
dec
cmp
arpl
push
cld
jne
or
mov
add
xchg
lods
push
sub
jnp
xchg
push
dec
or
les
cmp
addb
out
adc
test
rolb
icebp
cmpsl
lods
das
out
sti
popf
bound
fucom
int
mov
repz
cmpsb
call
inc
inc
pop
sub
test
repnz
movsb
sbb
mov
sub
inc
dec
dec
xor
sti
dec
ja
mov
lds
lock
aam
adc
in
shl
sti
jl
inc
leave
ja
repnz
out
push
stos
test
inc
sub
arpl
test
mov
lock
cmc
in
push
test
or
cmc
insb
repnz
and
jno
push
pop
stos
xchg
lock
fstl
sub
add
or
ja
in
jp
daa
aaa
mov
insb
popa
jns
rclb
or
daa
inc
and
fnsave
mov
ret
pop
or
imul
jl
jbe
inc
mov
push
or
inc
xchg
arpl
int3
cld
or
lods
xchg
mov
test
mov
cli
xor
jo
mov
xorb
add
fstpl
addr16
dec
or
pop
push
addr16
movsb
int3
les
inc
aam
adc
lret
cmp
cmpsb
sub
push
or
cmp
movsb
pop
insb
ret
jl
arpl
sub
or
pop
mov
add
icebp
pop
adc
sbb
push
adc
push
movsb
jecxz
and
gs
test
ret
rorl
xchg
sti
add
test
sarb
outsb
das
mov
repz
shl
cld
mov
and
xor
js
pop
push
or
mov
mov
ja
mov
dec
or
xor
cmp
das
in
jecxz
cli
mov
cmp
js
dec
lods
jecxz
cwtl
mov
inc
stos
mov
jbe
and
jb
sbb
fldt
cltd
movl
push
adc
mov
sbb
dec
dec
push
iret
arpl
jo
xchg
sub
ret
inc
aaa
lock
push
inc
pop
add
lcall
adcl
or
fsubrs
notl
cli
push
mov
xchg
out
cmp
fs
sbb
mov
into
jns
out
sbb
inc
imul
inc
dec
pop
movsb
lock
jecxz
fstpl
rcll
mov
cmp
outsl
xchg
mov
out
daa
lods
add
mov
ds
jmp
add
cli
sub
add
in
dec
ss
pop
push
fwait
xlat
push
xchg
pop
andl
movsb
out
ret
pop
movsl
jo
cmp
pop
sti
pop
outsl
arpl
test
dec
lahf
xor
mov
sti
xchg
repz
lcall
dec
lea
jle
xor
xlat
sbb
sub
aaa
testl
mov
clc
push
mov
ret
dec
sbb
pop
sub
aaa
cmp
dec
jns
sub
xchg
in
shl
jo
aas
adc
sbb
lods
add
aaa
push
ret
mov
addl
jg
sbb
jp
enter
cmp
fidivrs
mov
dec
scas
cmpb
jae
jg
scas
mov
cltd
arpl
adc
or
insb
mov
sub
mov
inc
and
xor
shlb
xchg
dec
cmpsb
mov
cld
packsswb
xchg
xchg
aas
mov
add
push
insl
mov
mov
daa
and
arpl
test
mov
stc
lods
cmp
mov
pop
sbb
in
incb
aas
xor
das
in
push
push
ljmp
and
in
or
push
dec
outsl
xchg
jmp
jmp
inc
mov
in
xlat
in
sahf
in
or
in
fstpl
pop
cmp
jmp
xor
mov
cld
sbb
mov
out
inc
pop
aas
popa
dec
push
aam
or
mov
enter
icebp
dec
mov
mov
cmc
imul
ds
pop
or
push
cwtl
mov
repnz
inc
das
push
xchg
orb
mov
pop
ljmp
inc
rcrl
xor
mov
jo
mov
out
outsl
adc
xorb
xchg
push
push
push
dec
shll
sbb
in
sub
add
in
inc
push
jmp
stos
stos
in
dec
movsl
mov
xor
mov
repz
stc
sti
cltd
xor
mov
jmp
shl
fldpi
leave
cmc
nop
pop
arpl
pop
imul
inc
sub
out
mov
pop
dec
inc
fcomps
pop
inc
aam
imul
lret
mov
jo
mov
pusha
sbb
add
imul
sbb
hlt
stos
in
dec
add
adc
or
test
jp
sbb
jno
sbb
in
pop
push
out
pop
testb
mov
push
addr16
out
imul
popa
stos
hlt
clc
cwtl
fisttpl
mov
push
stc
or
pop
jae
ficomps
repz
in
pop
mov
lock
pop
xor
sti
jnp
fnsave
jecxz
imul
pop
lds
mov
fisubrl
repz
mov
cli
mov
mov
outsl
mov
pop
in
mov
mov
aaa
in
fisttpl
cmp
and
jne
hlt
xchg
pop
ret
push
dec
xor
push
imul
pop
sub
adc
shl
shr
jbe
in
mov
push
sub
push
lods
fstps
std
push
or
jns
stos
and
ja
mov
fisttpll
sbb
outsl
push
jo
in
enter
pusha
sbb
cwtl
push
adc
fs
sbb
sbb
mov
mov
xor
in
test
dec
and
inc
or
fistps
cwtl
insb
pop
pop
lret
push
dec
test
sbb
xchg
imul
xor
mov
jecxz
fs
sub
in
outsb
jl
cmc
int3
xor
push
and
mov
stc
push
push
and
cmp
sbb
in
add
sbb
add
sub
and
jbe
les
mov
inc
stc
mov
test
fldl
ret
movsb
and
push
fwait
adc
pop
pushf
unpckhps
xor
ja
aad
adc
push
movsb
movb
enter
pop
fimull
aam
jmp
test
leave
fwait
xchg
xor
sbb
loop
xchg
je
and
jle
sub
js
dec
xchg
or
in
rclb
or
cltd
mov
adc
mov
cmp
cmp
pop
fstp
push
mov
das
mov
mov
push
ret
orb
sbb
mov
adcb
call
stc
push
sub
mov
cld
scas
mov
push
lret
repz
pop
gs
jnp
sbb
daa
cmp
mov
xchg
fildl
xor
mov
mov
loopne
mov
mov
in
cwtl
mov
cmp
movsb
push
adc
call
jg
mov
xchg
mov
or
into
jb
mov
pop
pop
mov
int3
out
das
in
cltd
loopne
inc
jmp
mov
dec
push
mov
repnz
loope
aad
mov
leave
mov
dec
xchg
bound
or
mov
in
push
in
jp
push
into
push
add
push
dec
pop
cmp
shr
jb
push
stc
clc
sub
cmpsb
cwtl
gs
cltd
add
mov
mov
test
lods
aam
jno
aad
in
inc
cmp
mov
cld
shl
and
push
add
mov
jbe
jmp
add
xor
mov
dec
mov
push
push
inc
sbb
sub
mov
sti
ret
test
fwait
push
aas
shl
mov
cmc
jp
lahf
xchg
in
jns
pop
scas
cmp
xor
mov
jae
into
sbb
adc
dec
das
fwait
cmp
notl
mov
jns
aas
pop
loop
js
insb
repnz
lods
mov
in
lods
popa
jns
lds
int3
testl
enter
int
inc
insb
or
outsl
adc
andb
push
aad
lahf
jns
aaa
and
mov
insl
out
xor
mov
sub
xchg
mov
mov
nop
mov
mov
push
es
and
jecxz
sarl
xchg
xchg
pop
add
cmc
mov
pushf
out
fidivrl
scas
dec
fidivl
cmp
mov
and
mov
inc
rolb
insb
into
cmc
cli
out
mov
fwait
jns
ss
or
clc
repz
ror
ror
pop
mov
mov
mov
mov
pop
in
fnstsw
ss
inc
leave
add
jg
notb
pop
je
add
xor
icebp
jp
insb
pop
out
in
adc
stos
stos
cmp
jbe
cmp
xlat
ret
xchg
repnz
push
sub
jl
repz
jns
imul
adc
mov
mov
xchg
fdivl
jmp
sub
jne
lods
out
lret
adc
sbb
pop
jge
jae
push
or
sti
in
shlb
jg
scas
out
xchg
mov
stos
mov
jno
inc
xchg
push
mov
jae
xlat
pop
ljmp
sbb
xor
in
dec
push
mov
imul
cmpsl
subb
jns
fcmovnu
mov
inc
mov
pop
ret
jp
pop
cs
int3
cld
lret
cmp
cmpsb
add
aas
ret
hlt
call
leave
out
dec
xchg
sub
and
pop
xchg
incl
or
stos
fisubrl
jb
daa
jecxz
pop
insl
lods
outsb
jbe
aad
insb
inc
cmpsb
addr16
jp
sub
push
inc
popf
mov
add
je
push
push
xor
jne
sahf
mov
mov
mov
stos
jecxz
cli
mov
ja
inc
adc
dec
aaa
shlb
in
sub
mov
addr16
sub
stc
inc
inc
cmpb
mov
repnz
jecxz
add
es
repnz
and
fists
sub
shr
orb
jmp
das
jb
jl
ret
xor
arpl
cs
lahf
shlb
repnz
daa
insb
sbb
add
cld
mov
mov
and
pop
add
out
pop
mov
out
inc
adcl
and
les
inc
mov
aaa
in
cmp
inc
hlt
insl
inc
push
je
sti
dec
rclb
lcall
xchg
jb
repz
adc
sub
bound
insb
fs
xor
or
leave
int
jne
jae
mov
mov
cmp
mov
mov
mov
inc
cmp
aas
shll
lcall
lods
add
fistps
mov
jecxz
std
mov
pop
adc
in
jbe
sub
mov
test
push
xchg
lods
mov
lret
xchg
sti
inc
repz
or
lods
mov
push
sbb
jmp
out
hlt
cmpsb
data16
cs
dec
in
cmp
xor
jns
popa
sbb
or
out
movsb
divl
pop
cmc
repnz
test
xchg
pop
mov
xchg
push
daa
icebp
sub
movsl
dec
push
xchg
pop
in
andb
pop
jl
push
xor
pop
jp
enter
pop
out
pop
mov
insl
mov
mov
repz
dec
addl
out
jecxz
sub
daa
or
push
addr16
shl
push
jecxz
sub
arpl
xchg
enter
jne
cmp
je
sahf
mov
sbb
jp
je
sub
or
stc
pop
js
mov
sti
push
push
xor
mov
imul
jle
cmp
jp
cmp
or
xchg
es
mov
dec
jno
psrld
leave
mov
mov
aas
cmc
stos
push
imull
pushf
sbb
stos
jmp
add
outsl
mov
pop
shll
push
cmp
mov
cmp
fwait
add
jb
stos
mov
and
mov
cmp
sub
lods
pop
outsl
mov
sti
add
or
or
push
xor
outsl
adc
sub
test
notb
jbe
stos
sti
mov
fwait
sti
ja
jl
cmp
and
mov
mov
xlat
sarb
andb
aam
xchg
rolb
repz
and
mov
movsb
daa
movsl
mov
jbe
aaa
mov
cmc
loope
leave
xchg
mov
lock
test
mov
js
in
sub
test
push
cmp
mov
xor
ret
aaa
repnz
xchg
jge
push
icebp
mov
cmp
test
ja
testb
shlb
dec
aam
imul
pop
and
repz
rol
ja
insb
call
fiaddl
and
pop
arpl
dec
push
lds
xor
sarb
mov
insb
mov
add
outsl
push
or
sub
mov
xor
push
push
xor
jp
repz
js
fldt
ds
clc
fstpl
pop
sub
imul
mov
mov
in
xchg
call
mov
cmc
js
les
aaa
mov
fucomip
aaa
fcompl
movsl
jno
or
or
push
lea
xchg
mov
cmp
push
mov
stc
inc
xchg
jp
daa
jp
subl
xor
jp
lret
adc
adc
jb
xchg
clc
out
js
movsb
xchg
rcrl
iret
fsts
lcall
pusha
idivl
in
fldl
loopne
shl
fdivrl
dec
or
lret
divl
jae
sub
fcoms
xor
push
ret
fimuls
out
cmp
sub
sub
pushf
dec
mov
out
or
cmp
mov
cmp
sub
or
jb
mov
cli
xchg
and
mov
mov
mov
jnp
cli
movsl
test
or
xlat
fimull
cld
daa
push
stc
or
out
pop
mov
fstpt
pop
mov
pop
fwait
insb
jecxz
jp
pop
lods
lret
stc
or
out
insl
lret
ljmp
out
add
inc
out
push
insl
xor
in
jp
sbb
xchg
and
mov
jns
add
jle
mov
in
xor
cmp
leave
fs
sti
push
fwait
iret
cwtl
sbb
pop
mov
shl
jmp
rcrl
add
mov
or
sti
sub
scas
in
cltd
inc
test
cmp
sti
xchg
or
push
mov
dec
rorl
push
xchg
mov
jbe
out
inc
arpl
add
jecxz
mov
sti
mov
push
cmp
jne
push
out
repz
fs
push
lock
arpl
hlt
in
call
fwait
push
push
mov
icebp
adc
inc
imulb
mov
mov
add
mov
lods
fmul
imul
xor
mov
dec
sbb
popa
ffreep
dec
xchg
mov
lock
xchg
divl
mov
dec
lcall
pop
cltd
dec
inc
cli
pop
mov
lock
inc
mov
inc
stos
push
inc
cmp
pop
mov
push
orl
push
sbb
arpl
orl
in
jmp
jo
insl
pop
jae
movsb
out
push
jmp
mov
xchg
mov
pop
jecxz
xchg
cli
push
adc
pop
mov
mov
ret
hlt
add
sub
call
enter
mov
sub
sbb
pop
lcall
push
imul
push
aad
mov
and
das
cmp
pop
movsb
xchg
inc
adc
pop
insb
popf
sbb
pushf
or
ret
popa
xchg
mov
mov
mov
repz
stc
jmp
call
cmp
aad
je
cmp
inc
push
jbe
cs
outsl
xchg
and
lods
push
dec
dec
lods
mov
mov
mov
shrl
dec
mov
or
add
sub
sarb
addr16
push
push
sarl
enter
testb
mov
jmp
xor
adc
inc
pop
pop
loop
pop
mov
sbbl
add
push
rcll
sarl
out
and
cmp
xor
mov
movsb
fdivrs
lcall
inc
cmp
bound
jmp
stos
pop
scas
xchg
cmp
mov
clc
push
iret
ljmp
dec
and
scas
pop
fiadds
cmp
jno
mov
pop
sahf
pop
add
popf
stc
dec
and
sub
insl
roll
sti
mov
push
jnp
js
mov
mov
xchg
pop
mov
sahf
je
lcall
adc
dec
in
aam
ljmp
mov
dec
sub
sbb
mov
xorl
xchg
cmp
andl
int3
mov
push
rcll
int3
bound
imul
jne
or
and
repnz
xchg
cwtl
stc
push
sti
cli
dec
in
xor
cmp
dec
pop
jno
hlt
cmp
jmp
xchg
mov
jp
test
cmp
and
mov
sarl
mov
inc
roll
push
sarb
jecxz
loope
es
push
icebp
inc
clc
mov
std
dec
cwtl
jl
xlat
std
das
cmp
cltd
xor
add
cmp
hlt
mov
dec
in
popf
or
lds
cltd
lods
dec
fimull
in
pop
mov
pop
push
lea
push
cmpsl
rorl
idiv
xor
add
push
mov
js
jp
repz
push
mov
inc
or
daa
jno
icebp
aaa
mov
pop
cmp
sub
pop
sarb
jns
jl
mov
imul
sahf
scas
mov
pop
push
xchg
cld
ljmp
jmp
fdivrp
imul
fdivrl
cli
xchg
sti
xchg
mov
fistps
in
hlt
fiaddl
test
inc
or
repz
mov
xchg
cmp
mov
imul
inc
pop
stc
cmp
pop
lahf
ss
jb
mov
aaa
sbb
sti
sbb
or
stc
pop
je
adc
btr
notl
lcall
jno
ja
inc
pop
push
fldlg2
xchg
adc
jne
xchg
loope
outsb
or
ficomps
sub
out
icebp
enter
sbb
fwait
push
sub
mov
gs
orb
in
xchg
in
xchg
cwtl
adc
mov
xor
jmp
jmp
jle
outsb
test
jno
mov
leave
jg
pop
loopne
push
test
or
nop
mov
int
jnp
mov
sbb
sbb
sbb
mov
popf
mov
jno
xor
out
mov
sub
popf
out
sti
sbb
push
inc
in
repz
pop
leave
out
outsb
inc
jle
nop
sbb
ds
iret
outsl
test
or
movsl
mov
pusha
or
and
or
sbb
mov
add
mov
test
xor
and
add
xchg
jo
cs
aam
jge,pn
xchg
fcompl
jp
dec
out
leave
push
cmp
stc
dec
fwait
fwait
in
ja
mov
xorl
pop
pop
outsl
mov
mov
dec
adc
push
mov
shlb
filds
mov
lods
out
jg
mov
jbe
push
ja
jg
jmp
sub
cltd
xor
mov
push
orb
push
lea
sub
jb
nop
sahf
jb
ret
mov
cmpsb
sti
xchg
cmp
repz
push
je
cmp
mov
push
aaa
mov
push
lret
enter
pop
cmp
lret
xchg
je
loop
xchg
ret
cltd
jp
lods
inc
cmp
int
and
dec
cmc
les
dec
fwait
jle
dec
pop
push
fs
xchg
test
cmp
aaa
lret
fldcw
cmp
push
push
cltd
jmp
insl
jns
cmp
dec
or
adc
xchg
shll
push
mov
mov
cmp
faddp
mov
adc
sub
jecxz
adcb
xorl
lret
ror
dec
mov
pop
jp
xor
bound
stc
jmp
jle
dec
fbstp
mov
jp
mov
aaa
aad
mov
aaa
xchg
pop
test
shll
push
cmpsb
sbb
arpl
divb
icebp
mov
mov
jl
jmp
xchg
jmp
fdivp
dec
and
adc
xor
add
mov
add
pop
dec
repnz
push
xor
cli
jmp
sti
lock
insl
ret
rcr
pop
add
inc
cltd
pop
pop
push
push
add
js
sti
and
out
fdivrl
cli
xor
in
adc
es
dec
pusha
fnstcw
add
cmp
out
pusha
lods
and
inc
divb
clc
insb
mov
test
sub
inc
sti
sbb
lods
xor
xchg
rorb
push
inc
sub
push
jbe
mov
imulb
push
test
scas
cmp
jecxz
cli
inc
jl
xchg
bound
push
shrl
cmp
ljmp
push
mov
xchg
scas
sub
adc
adcl
mov
and
inc
idiv
cmpl
cmp
pop
in
mov
fwait
sarl
dec
pop
mov
repz
stos
in
test
sbb
pop
pop
movsl
leave
cmpsl
outsb
mov
or
movsl
mov
cmpsb
movsb
or
aad
inc
pop
inc
shrb
lock
mov
jae
and
movsb
mov
jb
xor
addr16
xchg
mov
in
in
cmp
loopne
adc
adc
mov
repz
popa
xchg
add
sub
mov
out
addr16
cmp
in
les
push
sahf
sub
cs
out
daa
daa
mov
mov
mov
popa
mov
outsl
je
dec
add
push
push
cmp
mov
jbe
xor
jecxz
sub
fwait
imul
sub
cltd
sti
movsb
xchg
ljmp
mov
mov
mov
mov
push
arpl
in
pop
jle
add
rorb
add
or
inc
stos
mov
push
addr16
push
mov
sbb
outsb
add
in
dec
lret
mov
cmc
xchg
jb
mov
jmp
repz
into
out
mov
btc
scas
push
nop
sub
out
and
and
jns
cld
mov
jge
lds
jp
fnstcw
fsubl
popa
mov
push
jmp
cmp
sub
pushf
mov
or
jmp
repz
in
mov
sub
lret
mov
mov
mov
sbb
int3
jl
fisubs
jp
sub
bound
add
lock
inc
sub
xchg
dec
jg
fdivrs
or
aam
xor
pop
mov
sti
rcrb
add
loope
shl
fs
jp
mov
cli
out
push
or
mov
hlt
xchg
pop
das
fwait
cmpsb
sarl
xor
mov
and
or
xchg
es
int
out
or
inc
push
hlt
fldcw
popa
bnd
push
pop
mov
push
push
push
mov
inc
js
neg
ljmp
xchg
push
nop
cltd
push
jb
out
inc
pop
enter
cwtl
sbb
ja
mov
out
mov
ds
test
xchg
clc
or
sti
push
sub
dec
shll
movsl
adc
jbe
ss
xlat
mov
mov
jb
dec
xchg
push
dec
pop
lcall
adc
dec
insb
sti
lret
xchg
sbb
ud1
mov
xor
pop
or
loop
lods
xlat
push
xchg
pop
cmp
cmc
fbld
push
or
in
jo
test
arpl
ja
push
cltd
fldt
jb
bound
aaa
xchg
jg
aad
jbe
sub
enter
dec
inc
push
add
jle
loop
fisttpll
sahf
cmp
xor
ja
inc
add
pop
aam
dec
jle
or
rorl
lods
imul
xchg
mov
and
or
out
jb
in
cli
gs
shrb
pop
test
cld
hlt
adc
mov
ret
mov
xchg
jecxz
mulb
pop
dec
in
pop
popa
xchg
lds
xchg
push
push
jmp
xchg
outsl
mov
inc
mov
and
leave
in
mov
sbb
and
sub
shl
jecxz
lret
pop
or
xor
xchg
in
xor
cmc
or
idivl
and
xchg
fwait
mov
pop
bts
pop
stos
push
cmpsl
subl
test
add
jl
and
hlt
je
test
sbb
push
or
jae
imulb
adc
jge
shll
dec
aad
jb
loopne
pop
sbb
iret
aas
cmc
in
adc
negb
pop
fstpl
or
in
int3
loopne
jno
add
jp
mov
add
mov
sti
mov
popa
imul
jp
xor
insl
sub
jp
mov
stos
rorl
fisubrs
dec
mov
push
in
insl
xchg
or
es
pop
push
mov
jp
sti
pop
mov
mov
jbe
in
notl
jg
insl
jae
mov
cmp
and
fsts
outsb
or
ja
scas
pop
adc
ret
aad
pop
imul
or
cmc
cs
int
repnz
in
mov
fwait
and
xor
mov
sbb
ljmp
sbb
fldl
jb
rcrl
xchg
loopne
mov
pop
notb
xchg
pop
cmc
push
mov
xchg
stos
dec
stos
mov
jae
xchg
pop
mov
out
adc
lods
mov
and
lea
mov
and
stos
daa
in
pop
pop
loope
push
push
ds
mov
or
mov
jne
imul
sub
fidivs
push
add
mov
out
rorl
aad
sbb
mov
ret
mov
dec
add
or
add
push
mov
xchg
imul
dec
cmpsl
jp
pop
mov
sbb
push
push
push
jecxz
daa
or
mov
mov
fdivrl
add
add
or
neg
jle
or
pop
or
fs
or
inc
inc
pop
xor
lcall
adc
pop
in
jne
push
mov
push
dec
and
jb
push
pop
add
xchg
push
or
les
push
add
sub
scas
adcb
es
sub
fwait
mull
js
jp
mov
adc
out
jmp
call
mov
movsb
in
pop
mov
popa
and
ds
push
xchg
aas
sub
dec
and
mov
test
dec
iret
push
and
add
pop
and
inc
popa
and
mov
mov
mov
jns
popf
push
mov
mov
dec
call
push
jo
and
rcll
negb
sbb
sub
int
jge
or
push
sbb
sti
inc
mov
or
cmp
dec
movsl
sub
std
mov
push
add
mov
dec
add
int3
push
call
mov
sub
imul
mov
jbe
xchg
loopne
or
out
sub
test
mov
and
jbe
rep
ror
cwtl
inc
jmp
mov
cmp
cmp
cmc
cmp
outsb
popa
or
ljmpw
push
inc
mov
pop
xchg
aaa
shll
outsb
add
or
outsl
icebp
mov
mov
xor
in
mov
subl
cmpsl
sbb
lock
jbe
movsl
stos
imul
add
arpl
pop
cmp
inc
shll
push
mov
lahf
inc
and
jne
mull
jno
orb
pop
lods
movsl
data16
or
xchg
pop
inc
aad
out
xchg
xor
inc
mov
dec
pop
enter
inc
sub
mov
orb
mov
es
sbb
addr16
mov
push
lea
ret
cld
aaa
pop
xor
cmp
scas
add
lods
jae
mov
dec
cmp
pop
js
sub
mov
scas
dec
push
ret
enter
cmp
cmp
aad
jae
fadd
fimull
pop
adc
repz
ss
cld
pop
aaa
call
data16
test
mov
scas
scas
imul
ficoms
jg
ja
mov
push
xor
dec
jecxz
adc
mov
adcl
repnz
push
addl
arpl
lcall
mov
mov
enter
or
jp
enter
mov
xlat
mov
es
bnd
ss
aam
mov
and
dec
sar
movsl
jb
stc
mov
in
stos
cli
and
pop
push
loopne
push
icebp
inc
push
push
je
in
mov
adc
mov
lcall
sub
idivl
inc
cmpsl
scas
shrl
repnz
dec
and
xor
popa
cwtl
aad
negl
inc
mov
xorb
jae
inc
adc
dec
rolb
push
loope
add
fisttps
cwtl
fdivr
and
mov
jno
jp
mov
call
pop
and
scas
dec
jp
stos
out
sahf
int
outsb
enter
flds
inc
mov
fs
movsb
lret
jmp
mov
or
arpl
in
flds
pusha
cmc
push
jg
adc
popf
lods
cli
inc
adc
jns
fistps
or
xchg
sti
aad
rcrl
and
packsswb
add
mov
mov
loop
lods
mov
cltd
cmp
iret
cmp
jg
imul
leave
pop
sbb
sti
jbe
fisttpl
dec
mov
mov
popa
stos
fidivl
cmp
je
mov
or
jns
dec
mov
jnp
dec
idivb
je
mov
in
and
jl
pop
int
dec
mov
mov
rclb
push
shrb
jns
aam
push
inc
pop
xchg
mov
or
loop
cmpsb
lods
xchg
dec
aam
mull
div
push
ret
stc
insb
add
jle
sub
push
enter
icebp
adc
popf
daa
mov
ret
mov
fnstcw
mov
in
and
shr
and
pop
sahf
xchg
cmpsb
fwait
in
movsl
sbb
pop
dec
mov
dec
pop
push
sbb
xor
sbb
xor
inc
fistpll
xchg
jp
sbb
rorb
fisubrl
sbb
out
and
test
call
lods
call
dec
mov
push
cmp
inc
gs
lcall
sub
adc
push
pop
movsb
mov
rclb
push
push
ljmp
jns
cmp
add
leave
aas
adc
inc
adc
or
inc
lds
push
negb
out
adc
mov
or
xchg
jecxz
push
pop
xlat
fsts
xlat
mov
cmpsb
repnz
outsl
cli
mov
sbb
cmc
jno
into
insl
ljmp
mov
cmc
mov
inc
mov
push
shll
dec
mov
pop
jg
subb
cmc
je
int
jmp
mov
pop
jle
jb
iret
mov
into
jae
pop
adc
lcall
notb
scas
les
sahf
psubq
out
lock
out
aam
cmp
out
fstl
mov
mov
aaa
push
lea
pop
jbe
insb
int3
push
xchg
in
clc
mov
pop
sbb
flds
jg
aam
arpl
xchg
add
cmpsl
movsl
lea
mov
mov
aam
or
insb
fstp
push
dec
rcl
cmpsl
sti
sub
repnz
mov
pop
pop
movsb
and
pop
adc
lock
cmp
mov
jbe
aad
andb
es
loop
xchg
scas
cli
sub
sbb
imull
iret
lods
pop
test
cmpsb
sti
ret
out
jp
pop
dec
mov
inc
adc
les
pop
rcr
rorl
aas
pop
icebp
mov
fdivl
or
shl
imul
jmp
in
sar
mov
cmp
ja
mov
sbb
out
push
pusha
inc
mov
fidivl
fistl
fisttpll
fistpll
in
push
stos
cmp
add
add
jno
and
clc
jp
movsl
mov
cltd
idivl
cltd
xchg
adc
mov
adc
cmp
add
fistl
shlb
ret
aam
mov
jne
cmc
in
je
pop
mov
xor
out
cld
clc
push
xor
push
imul
lcall
stc
ss
lret
push
dec
clc
hlt
jbe
imul
xchg
jmp
ret
xchg
lret
insl
dec
int3
pop
lret
aad
cld
mov
int
gs
icebp
sbb
nop
or
or
sbb
in
xorl
cmp
dec
in
xchg
movsl
decl
pop
pop
or
orb
inc
xlat
out
sbb
cmp
cwtl
mov
lock
popa
scas
sbb
in
popa
sub
xchg
not
add
insl
sbb
jae
pop
arpl
sbb
cmp
inc
cmp
jnp
sbb
mov
ja
cmp
fcmovne
icebp
xchg
mov
shlb
std
fs
mov
je
jg
jmp
push
fisubs
dec
adc
bound
dec
push
pop
pop
lock
sbb
push
into
je
pop
movb
insb
mov
xorb
divl
inc
ja
lds
clc
pop
add
mov
xchg
sbb
cmc
insl
outsl
xchg
dec
jb
stos
andb
fwait
and
das
add
clc
jb
scas
pop
enter
ljmp
cmp
and
cs
mov
inc
int
lods
sub
push
rcrb
jl
xor
dec
in
jb
fdivrl
xor
aaa
loop
sbb
fld
lret
xchg
fdivs
or
sub
in
lds
cmc
cs
dec
sbb
scas
lods
cmpsl
test
insl
cld
dec
into
pop
lds
outsl
in
cmp
repz
jge
jbe
mov
push
jmp
into
or
lock
loopne
jge
dec
sti
filds
sti
cmc
mov
in
jae
mov
push
roll
jo
ja
push
inc
jo
testl
in
push
aaa
jle
pop
ficoms
lods
or
repz
sbb
insb
xchg
mov
sub
cs
divl
push
aas
fdivrp
mov
int
xchg
enter
jae
ret
mov
popa
push
dec
jmp
mov
jbe
fistpl
xchg
inc
test
push
push
jae
xlat
push
push
pop
dec
cmpsb
outsb
xor
dec
ljmp
mov
adc
xor
test
fmull
stos
jnp
adc
aad
jns
lods
jne
in
and
popf
add
and
out
xor
lock
popl
mov
call
sub
lds
push
push
xchg
test
outsl
popa
xor
fsubrs
add
xor
ja
mov
pusha
rcrl
mov
xchg
or
cmc
adcl
fsts
push
mov
and
fcomi
pop
push
push
mov
push
mov
imull
push
orl
cmp
ja
testb
mov
scas
mov
inc
mov
ja
jbe
dec
xor
xor
pop
mov
and
jno
cwtl
notl
sub
mov
mov
dec
mov
and
sub
xchg
sbb
sbb
add
and
scas
push
and
int
push
ret
jnp
jg
push
bound
mov
cmpsl
inc
mov
add
inc
out
out
int
in
stos
mov
cmc
adc
mov
lods
add
pop
mov
jecxz,pn
cmp
cmpsb
lods
cmp
inc
lret
and
fs
insl
push
outsb
adc
sti
or
xchg
cmp
loope
nop
testl
je
sarl
ret
push
notl
cli
dec
inc
repz
sti
inc
sahf
xchg
push
mov
int3
add
sbb
das
mov
outsl
inc
pop
sbb
fwait
dec
xchg
adc
jb
aas
push
enter
pop
mov
push
in
div
fsubrs
sub
jb
sub
sub
fwait
cld
xchg
mov
mov
cli
jns,pt
push
aad
dec
and
nop
ret
mov
mov
pop
lcall
sub
fisttpl
mov
push
adcb
add
aas
hlt
idivb
jge
or
adc
aad
in
or
cmpl
in
data16
arpl
lcall
sub
testl
sub
push
mov
fcmovnbe
jecxz
sub
sub
and
aas
pusha
lret
iret
jp
or
in
addr16
and
sbb
enter
mov
jo
inc
insl
stos
scas
jno
js
mov
jp
and
push
pop
test
mov
int3
fildll
add
fldl
loop
jle
test
push
jo
aaa
adc
bnd
iret
arpl
xchg
cmpsl
xor
movsl
dec
jne
mov
mov
xchg
dec
arpl
out
sbb
ficompl
pop
cmp
pop
pop
sti
xchg
mov
jl
imul
movsb
or
push
mov
inc
in
mov
dec
pop
mov
fwait
pushf
cmp
mov
and
pop
cmpsl
lods
js
nopl
scas
jp
xor
mov
inc
inc
pushw
filds
cmpsl
mov
push
mov
jbe
aas
test
cmpsb
sub
subb
test
pop
sbb
dec
lcall
imul
jmp
mov
aas
imul
pop
sti
cld
mov
dec
insb
scas
pop
jmp
cwtl
nop
sbb
loopne
repz
sub
mov
cmp
fistpl
addr16
je
xchg
xchg
push
les
lods
sti
jmp
rcr
xor
aas
in
rorl
jns
mov
inc
jg
insb
fcmove
cld
cmp
mov
pop
add
adc
je
jge
adc
and
sbb
mov
out
in
mov
outsl
mov
loope
test
xor
imul
lret
cs
lahf
fldenv
or
and
ljmp
pop
mov
cmp
imul
repnz
pop
sub
sbb
sub
aad
sub
inc
cmp
sub
push
addl
idiv
cmp
leave
or
lock
nop
imul
jecxz
sbb
and
push
lods
adc
and
xchg
mov
pop
sti
enter
or
mov
mov
and
jle
inc
pop
sbb
sub
fisubrl
ljmp
jmp
imul
popf
add
movsl
sbb
dec
mov
mov
cli
pop
adc
push
out
je
test
enter
mov
mov
ja
imul
fxch
test
pop
adc
lods
leave
cmc
les
jle
arpl
xchg
imul
mov
dec
mov
movsb
xlat
add
push
insl
mov
sbb
das
jp
int
inc
out
jmp
cmp
insb
mov
adc
sbb
js
jp
lahf
jae
es
ret
lods
jmp
sbb
xchg
in
es
jecxz
imul
aad
imulb
inc
outsl
sub
and
cmc
mov
sbb
in
or
pop
lcall
clc
pop
subl
mov
jp
ss
or
bound
sbb
inc
addl
jp
cli
ret
mov
sub
mov
adc
inc
jbe
jmp
mov
das
lcall
mov
repnz
xor
out
and
gs
call
shlb
clc
and
les
mov
movsl
cmpsl
xchg
mov
xchg
aaa
sbb
jb
lcall
in
pop
or
out
push
jl
dec
repnz
pop
neg
aaa
pop
inc
mov
out
push
icebp
jecxz
ja
lcall
mov
jno
pop
lock
sti
ret
icebp
mov
mov
sbb
out
inc
mov
inc
icebp
cmp
inc
stos
xchg
sub
sub
lds
inc
dec
mov
mov
sbb
mov
notl
in
mov
in
divl
and
add
xor
mov
sti
in
pop
mov
cmp
pop
bound
daa
dec
adc
js
or
fsubrp
mov
cmp
xor
xor
cmp
xchg
push
jno
clc
pop
adc
sti
cmp
pop
xchg
das
gs
loop
mov
pop
and
sbb
dec
popf
jmp
addr16
lock
mov
mov
ja
cmp
dec
negb
xor
leave
adc
int
lock
or
xchg
add
int
mov
sub
sbb
add
fdivr
outsb
push
enter
addl
repnz
out
fimull
pop
insb
or
test
imull
aad
xchg
stos
adc
mov
mov
mov
sbb
cmp
push
xor
mov
jl
and
lcall
mov
dec
mov
mov
push
scas
mov
jmp
xchg
es
xchg
dec
jmp
mov
push
insb
sub
scas
into
mov
bound
add
jno
lcall
sbb
adc
sub
jnp
pop
stos
push
push
and
cmc
aam
jb
imul
jmp
insb
xor
jne
arpl
test
imul
jp
repz
jp
repz
mov
sti
push
pop
movsb
or
pop
mov
jmp
jns
lret
repnz
inc
mov
rorl
int
movsb
xchg
xor
and
mov
or
daa
xchg
leave
adc
push
jne
cmp
pop
and
jle
lret
je
je
mov
and
or
mov
pop
dec
xchg
inc
dec
in
data16
pop
mov
int3
jns
aaa
aad
mov
pop
por
add
add
stc
cld
push
push
push
daa
or
stos
jbe
or
addb
leave
dec
lcall
mov
inc
push
aad
shll
stc
into
lea
inc
lcall
bound
mov
and
gs
cmc
arpl
lock
inc
add
mov
inc
add
cld
xchg
fwait
nop
dec
insb
mov
push
rcl
addr16
inc
movsb
mov
ret
cli
icebp
ret
lods
leave
xor
test
fldt
jns
push
stc
lcall
mov
inc
fimull
mov
pop
enter
xorb
imul
lods
cmpsb
mov
aaa
jns
stc
roll
push
lret
push
into
ljmp
clc
loope
lcall
dec
enter
mov
push
xchg
lret
hlt
stc
jo
les
push
inc
mov
adc
bnd
jae
lds
push
jl
mov
dec
repnz
inc
cmp
rcr
test
sub
jno
sub
rcrb
cmp
cmp
push
mov
arpl
call
movsb
inc
outsl
push
movsb
pop
in
push
mov
ret
cmp
nop
repz
rclb
pusha
push
jmp
cs
lea
jae
lea
sbb
mov
in
cmpsb
xor
adc
mov
loope
inc
push
pop
xchg
and
push
js
xchg
dec
cltd
cmpsb
or
lahf
lods
int3
clc
ret
add
and
stc
int3
pop
mov
out
in
mov
aam
ret
repnz
outsb
cmp
dec
pop
cmp
das
leave
sub
jecxz
mov
in
pop
pop
outsb
xchg
pop
stos
insl
stos
lods
mov
xor
pop
and
sub
add
out
sbbb
or
xchg
jne
push
stc
clc
xorl
cli
ljmp
or
push
iret
movsl
xchg
mov
add
adc
cmp
push
sbbb
pop
ds
int3
fisttps
sbb
push
ja
push
mov
xor
negl
imul
test
xchg
sub
insb
sti
ja
jo
ja
je
popa
dec
hlt
sbb
outsb
mov
xchg
pop
clc
cmp
fadds
pushl
dec
mov
lods
sub
xchg
mov
mov
fisubl
sub
jno
test
movsb
cltd
jb
ja
clc
sub
mov
stos
enter
jmp
call
sub
shll
jns
movsb
hlt
mov
mov
jg
push
lea
push
mov
inc
repnz
cmp
xchg
xchg
pop
lock
mov
sub
cmp
mov
mov
scas
fdivrl
jp
imul
mov
rorb
jg
sbb
mov
cld
test
dec
lret
les
imulb
jl
jp
outsb
inc
sbb
nop
fstpt
jbe
jo
aas
shr
stos
push
idivl
out
adc
sti
bound
push
and
jne
aad
mov
push
sti
jbe
inc
out
into
mov
dec
push
jle
push
cmp
in
jmp
cmc
dec
in
aaa
mov
stos
fimull
mov
inc
int3
mov
cmp
repnz
outsb
mov
popf
mov
repnz
mov
insl
cli
pop
std
push
sbbb
and
dec
sbb
jae
jp
mov
mov
pop
and
repnz
mov
push
sarb
jb
ret
nop
and
sub
popa
push
stos
insl
shlb
or
cld
adc
hlt
rcr
xchg
cmpsl
inc
mov
repnz
outsl
jg
sbb
je
outsl
sub
add
mov
mov
pop
stc
push
sub
inc
cmp
cld
loope
addl
adc
mov
scas
js
mov
arpl
test
push
cmpsb
sub
cmpsl
mov
jae
sbb
xchg
push
xor
push
in
data16
or
jmp
insl
mov
lret
inc
fsqrt
in
sub
out
leave
negb
jb
repz
fbld
sbb
push
xchg
mov
das
jo
jp
out
mov
cli
push
sbb
inc
lock
cmp
mov
lods
in
and
idivl
pop
cld
mov
shll
ja
push
orb
stos
cmp
mov
push
loop
push
daa
cmp
pop
jno
scas
leave
sahf
sub
mov
mov
push
inc
andb
jl
mov
out
dec
cmp
mov
push
aaa
push
and
in
mov
loope
pop
mov
mov
gs
cli
mov
shrb
sub
jg
loop
xor
in
cmpsb
inc
mov
ja
fimull
aam
pop
jae
divl
jbe
fbstp
stos
and
inc
fdivl
rcrb
or
adc
into
cltd
and
mov
fstpl
cmp
lock
pop
or
push
icebp
jbe
mov
out
jecxz
leave
aaa
inc
mov
adc
and
mov
ja
fimull
add
test
mov
mov
cwtl
arpl
xor
cwtl
adc
fwait
jno
fidivrl
hlt
mov
fistl
push
repz
test
aaa
gs
ret
or
divb
cld
gs
inc
out
add
sub
add
jge
adc
idivb
fildl
fisttps
clc
hlt
sti
pop
pop
or
fstpt
xchg
jne
ss
ficompl
inc
mov
xor
cmp
mov
xchg
ja
jecxz
cmp
stc
jl
sub
dec
popa
insl
pop
jp
pop
sahf
and
adc
jns
or
jecxz
or
in
stos
lods
in
and
stc
fists
es
clc
add
loope
das
jns
cli
in
dec
hlt
ja
push
and
sub
sbb
fwait
jb
push
ljmp
lock
mov
jns
int3
or
mov
jbe
cwtl
mov
lcall
push
fwait
dec
or
test
jne
out
aad
shll
aad
mov
cmp
in
addr16
jb
cltd
sti
arpl
insb
pop
and
cli
adc
or
aas
scas
sahf
sub
xor
jo
lahf
dec
stc
std
push
mov
push
cmp
mov
push
mov
sub
push
xor
push
or
movsb
or
dec
div
push
aas
mov
jp
arpl
in
jnp
enter
aas
cli
or
movl
sti
push
mov
sbb
jecxz
stos
dec
loop
inc
push
mov
mov
and
dec
lret
or
rclb
jb
lret
lcall
shl
cwtl
call
divl
xor
mov
fs
arpl
movsb
cli
or
sub
hlt
mul
cmpsb
addl
jp
fucomip
or
insb
pushfw
and
fwait
push
push
xor
call
cmp
repnz
test
mov
sub
or
scas
push
sbb
sub
pop
fldenv
dec
lds
xchg
fmull
out
lock
dec
lods
out
imul
dec
fsubrp
lcall
enter
insb
ss
dec
cmp
mov
movsb
cmp
enter
mov
mov
ficompl
xchg
test
arpl
sti
sbb
pop
and
call
mov
mov
shrb
enter
sub
jbe
je
dec
or
adc
jecxz
ljmp
mov
mov
testl
mov
test
xchg
pop
testb
pop
mov
pop
loope
inc
inc
out
in
mov
hlt
loopne
test
je
icebp
insl
add
inc
sub
icebp
enter
fiadds
dec
dec
in
fidivrl
in
nop
inc
xchg
jns
dec
cmp
pop
scas
or
sub
movsb
repnz
mulb
fnstsw
scas
push
lods
lret
jns
in
in
mov
jl
rcrb
jp
and
enter
push
cwtl
rcll
pop
push
adc
jno
mov
dec
int
xor
testb
std
fwait
jne
ret
xchg
mov
in
jo
mulps
dec
es
xlat
jno
ss
das
push
ds
insl
nop
push
cmp
stos
jae
inc
jmp
mov
incb
jbe
xchg
cmp
lock
adc
inc
jbe,pn
mov
and
sub
movb
jecxz,pn
mov
pop
imul
or
subb
mov
jno
in
das
mov
mov
cmp
mov
repz
jmp
fdivs
into
cmp
add
sub
mov
sub
fidivrs
lcall
jne
insb
mov
mov
push
data16
insb
shlb
mov
repz
sbb
and
cmpsl
inc
pcmpgtd
sub
jns
popa
dec
loope
pop
mov
mov
mov
jbe
mov
inc
cltd
out
or
jb
lea
test
aaa
cltd
movsb
std
bound
push
gs
mov
mov
sbb
dec
sti
inc
idivb
movsb
xchg
inc
mov
bound
adc
data16
cmp
add
mov
jmp
nop
idiv
movsb
nop
push
jcxz
inc
xor
jae
mov
jmp
adcl
mov
push
sbbb
mov
jmp
pop
adc
lods
cmp
enter
push
jl
mov
fs
jmp
loop
imul
jp
imull
addps
jmp
mov
ljmp
or
pop
nop
arpl
test
aaa
stos
pop
mov
xor
loope
jg
stc
bound
xlat
jmp
dec
out
jnp
fwait
outsb
test
mov
scas
cmpl
jecxz
stc
std
push
arpl
jl
cli
adc
test
out
call
xlat
fcoms
xchg
pop
mov
xchg
gs
inc
data16
imul
sbb
pop
sub
sbb
mov
xor
ljmp
jae
add
inc
mov
and
subb
das
scas
scas
insl
pushf
lahf
mov
pop
test
scas
sbb
stos
out
loopne
icebp
inc
pop
subb
xchg
sti
clc
in
mov
bound
and
xchg
stos
and
cmp
fistpll
ret
mov
int
mov
sub
push
addr16
movsb
scas
sbb
ret
ficoms
and
jmp
sub
cmpsb
in
fistps
mov
jp
sub
or
lret
mov
sub
jne
je
xor
or
mov
in
and
loopne
xor
test
xchg
lds
cli
cmp
dec
sbb
outsb
pop
and
fwait
ret
xor
in
adc
adc
pop
mov
sti
sub
pop
loopne
sti
enter
and
aad
mov
push
testb
cmp
inc
jbe
stos
data16
push
mov
mov
imul
and
icebp
mov
sbb
or
rcrb
xor
or
mov
fstp
leave
push
mov
pop
jne
leave
lret
adc
aad
pop
sbb
test
sub
shr
xchg
mov
push
test
dec
rcr
je
lods
sub
jge
clc
repz
cltd
pop
cmc
cli
stos
cmp
stos
add
add
or
push
add
loop
mov
fidivrs
sbbl
xchg
icebp
mov
fwait
mov
testl
cmpsb
clc
jmp
inc
das
stc
enter
jbe
pop
test
xor
mov
add
jl
into
mov
test
jb
in
push
pop
out
jbe
jae
sbb
mov
xor
push
jns
addr16
adc
es
or
dec
idivl
aas
or
jp
sbb
jb
cmpsb
cwtl
push
xchg
cs
jp
scas
mov
push
mov
nop
sbb
and
movsl
ja
pop
fcomip
movb
lock
lret
test
mov
cmp
je
lods
test
aad
push
push
je
out
mov
mov
push
xor
xchg
pop
jecxz
loopne
push
lods
dec
cmp
fsubr
adc
lods
adc
sbb
xchg
imul
sbb
sbb
xchg
out
and
sub
and
dec
xor
out
mov
into
repnz
dec
xor
jbe
das
popa
arpl
ljmp
jl
xchg
adc
push
inc
data16
xor
mov
test
leave
or
push
testb
fucomi
xchg
sub
lcall
push
icebp
pusha
or
jbe
jbe
xor
xchg
fistpl
dec
shl
pop
xor
pop
lcall
cmp
cmp
and
mov
enter
cmc
arpl
mov
nop
mov
xchg
mov
cmp
xlat
xor
mov
lods
out
addr16
js
insl
jmp
cmovl
and
dec
sahf
sub
ljmp
call
shll
mov
mov
lret
int
mov
mov
cmp
mov
cmp
mov
jae
cs
in
roll
fidivrl
aaa
inc
int3
inc
xlat
movsl
jl
or
cmc
cmp
loopne
pmaddwd
mulb
sbb
in
pop
cmc
hlt
dec
stc
stos
cli
cmc
shll
stc
lock
daa
lds
cmp
outsb
icebp
arpl
and
add
sahf
lret
mov
sub
push
mov
or
movsl
pushf
mov
inc
sub
jb
fldenv
in
jecxz
pop
jmp
push
jp
inc
test
and
sbb
cli
mov
in
cwtl
orb
mov
push
jp
lret
test
out
in
xlat
dec
out
clc
xor
ret
ret
test
je
dec
lock
jmp
pop
fimull
dec
roll
and
call
das
cli
enter
mov
inc
aad
jle
sbb
push
sbb
pop
andb
xchg
sub
xor
mov
sub
sub
cmp
enter
cmp
xchg
imul
shr
mov
mov
fxam
and
stos
imul
ret
jp
lretw
pop
mov
scas
je
mov
mov
std
push
mov
cmpsb
xor
rolb
xor
mov
cmove
jbe
mov
jmp
sub
fcomps
sbb
push
pop
ljmp
fsubrp
loope
dec
leave
or
jg
or
pop
int
popa
rorl
jle
dec
pop
lea
pop
mov
pop
dec
movsb
xchg
and
mov
popf
out
ljmp
sub
in
imul
jmp
pop
stos
sub
fstpt
sub
rcll
sub
or
std
in
dec
jo
push
xor
or
pop
push
test
std
out
sub
xor
das
clc
gs
cltd
test
mov
sub
cmp
adc
jns
lret
shrb
xchg
scas
push
mov
sub
jg
sub
and
fwait
sub
in
adc
enter
cltd
and
xchg
mov
cld
inc
test
mov
add
bnd
sti
out
loope
js
mov
jp
gs
das
xchg
sbb
push
push
cmpsb
mov
and
add
rol
sete
dec
push
test
test
pop
mov
jecxz
fcmovb
jne
mov
cld
ja
lret
pop
incb
push
adc
out
xchg
lret
cmc
lds
xchg
dec
mov
sub
pop
or
arpl
js
ljmp
insl
inc
in
jnp
jp
mov
mov
sbb
shl
pop
jno
dec
movsb
fsubr
jb
or
int3
je
daa
jno
jb
jno
fsubr
cltd
cmp
push
adc
mov
repz
sarl
test
sbb
jle
dec
shlb
test
sub
movsl
xor
sub
mov
pop
pop
jmp
mov
popa
sub
shlb
mov
jae
cmpsb
pop
arpl
popf
fwait
ret
cmp
outsl
fsubl
push
out
andl
loop
dec
adc
cs
andl
xor
cmpsl
or
dec
jbe
insb
lods
aas
or
leave
mov
jb
xlat
and
stc
inc
mov
dec
fcoml
or
leave
enter
xor
cwtl
movsb
sub
jp
push
fwait
lods
adc
cli
mov
mov
mov
in
jecxz
jmp
or
cmpl
aaa
repnz
jmp
cmc
out
mov
adc
sti
pop
mov
sub
pop
test
pop
imulb
in
cli
fdivr
pop
push
fwait
rcll
xchg
pop
dec
pop
xor
fnsave
add
das
inc
and
xchg
cmc
push
test
shr
pop
cltd
jae
xchg
adc
in
fildl
bound
and
fwait
inc
lock
jb
out
fimull
stos
inc
mov
lret
daa
cs
pushf
lret
shlb
out
push
mov
mov
fwait
cmp
movsb
push
ljmp
pop
fisttpll
push
or
pop
mov
lock
scas
test
mov
rcll
pop
cmc
mov
lret
sbb
pop
sub
pop
and
cmp
push
or
pushf
sbb
imul
jmp
or
adcb
add
mov
fildll
pop
cli
pop
xor
imul
loope
mov
inc
and
inc
inc
pop
cmc
pop
xchg
jae
sbb
jne
jmp
js
add
mov
xchg
xchg
inc
in
sbb
inc
ss
and
xor
test
ds
push
cld
mov
or
xchg
mov
dec
call
bound
cmp
jnp
daa
jmp
jle
jns
bnd
ja
dec
xchg
aam
js
rol
cli
mov
xor
push
cmp
addr16
mov
cmpsl
cli
int
push
stc
mov
dec
je
frstpm(287
cmp
sub
mov
cmp
icebp
fcompl
inc
jle
addr16
pop
jb
or
stos
mov
add
xor
mov
xchg
test
xor
lcall
in
in
subb
sbb
jb
dec
mov
cli
loop
lahf
outsb
ljmp
sbb
add
sub
aaa
lods
jne
cmp
cltd
cwtl
mov
enter
clc
jno
lret
cmc
insl
add
xchg
add
lret
jge
cwtl
aam
lret
adc
test
xchg
add
push
and
mov
in
push
lret
insl
call
inc
test
inc
cmp
mov
movsb
testb
jl
sub
movsb
mov
pushf
and
mov
push
test
fwait
scas
arpl
push
popa
mov
sub
arpl
ss
addr16
ja
jl
imul
clc
inc
pop
out
add
cmp
add
fistpll
in
xlat
push
int
aad
mov
sub
test
lods
fsubl
es
jg
lret
add
pop
jp
fstps
in
hlt
fsubrl
dec
outsl
push
incl
daa
das
ret
outsb
imul
dec
inc
vmwrite
and
cmpsl
jp
sbb
adc
orb
jns
adc
out
mov
lds
xchg
or
lret
mov
mov
pop
pop
test
notb
sub
lret
cmp
mov
lods
cmc
mov
mov
in
out
inc
lret
insb
imul
xchg
mov
leave
jp
cwtl
ja
push
mov
enter
mov
cmp
sti
mov
or
andl
pop
cli
dec
xchg
out
and
push
pop
mov
call
sti
fists
and
push
xchg
jp
ficoms
jp
imul
push
adc
mov
aas
mov
ja
addr16
fiaddl
push
scas
stos
in
dec
sub
inc
lods
imul
in
mov
shl
aad
cmp
js
in
dec
int3
push
enter
cmp
cmp
mov
notl
leave
out
ja
jmp
jne
sub
pop
insl
into
orl
outsb
leave
jne
in
lcall
fldenv
sub
call
mov
pop
mov
pop
jecxz
je
mov
lods
rcrl
addr16
and
outsl
std
sbb
mov
jae
cmp
jmp
imull
iret
or
ret
out
mov
adc
clc
and
jnp
ja
xor
movsl
mov
notb
lods
std
fdivrl
push
lret
shrb
shll
insl
dec
stos
in
push
lret
mov
lods
fcom
cmp
push
xor
mov
call
push
jbe
xchg
push
jae
pop
pop
mov
push
add
xchg
lret
sub
push
ret
jns
sub
in
fimuls
clc
ljmp
clc
jp
lods
out
pop
or
sub
push
jno
xlat
mov
aas
mov
add
ljmp
fisubrl
popa
add
mov
iret
mov
popa
sub
mov
psllw
cmp
imul
negl
mov
rcll
pop
mov
push
dec
jb
push
dec
movsb
ss
stc
mov
dec
pop
push
mov
data16
dec
call
jns
and
push
test
sbb
fisubl
js
movb
not
pop
test
jb
mov
jp
addr16
test
fdivrs
and
xchg
in
repnz
or
lret
and
pop
cli
mov
stos
lds
subl
dec
cmc
rclb
mov
push
icebp
and
stos
inc
in
ljmp
add
idivl
mov
and
out
lods
bound
aas
fcoms
pop
hlt
or
pop
sub
test
sub
int3
loopne
or
fs
lds
mov
mov
mov
sub
jg
push
xor
lcall
sbb
jns
add
or
repnz
idivl
push
pop
hlt
fiadds
adc
xchg
lcall
mov
and
mov
sub
jmp
pop
jo
negb
or
pop
sub
push
xchg
sbb
push
sub
or
xchg
push
or
cmpsb
xchg
jp
lea
shlb
test
gs
lock
loopne
mov
ret
mov
ljmp
aas
adc
pushf
and
nop
cwtl
inc
mov
mov
sub
lods
jbe
lcall
or
xchg
fcoms
cli
rcrb
cmc
dec
and
pop
dec
loope
outsl
xchg
xchg
pop
sub
xor
pop
in
ret
xchg
mov
dec
add
push
stc
sbb
retw
inc
jmp
push
test
jge
mov
aad
inc
fdivrl
dec
mov
dec
mov
mov
repz
cmp
add
inc
pushl
fwait
jae
fwait
push
push
xchg
aas
or
loop
mov
std
repz
stos
cmpsl
in
inc
shl
xchg
nop
cmpsl
sarb
lods
push
mov
mov
and
pop
inc
sub
mov
fists
mov
lock
xor
aas
loope
fistpll
mov
add
pop
fmuls
repnz
cmc
pop
leave
mov
push
jecxz
mov
dec
sub
adc
nop
out
aad
or
xor
xor
pop
mov
inc
or
aas
or
mov
push
add
data16
xchg
sub
inc
add
xorl
cli
js
mov
and
movsb
sub
fidivs
subb
sbb
jmp
push
xchg
mull
scas
cld
add
mov
cli
fdivrs
pop
test
jmp
sub
push
lcall
sub
movsb
sbb
sub
and
es
jns
outsb
or
sbb
xor
fisubl
mov
jg
in
add
subb
and
jg
pop
xor
mov
dec
ss
sbb
jb
mov
adc
cld
je
in
and
subb
jb
mov
add
xor
pop
out
mov
jbe
gs
xor
lcall
xor
add
rcll
add
push
gs
sub
adc
xchg
sbb
cmc
out
dec
movsb
cmc
mov
cmp
jp
mov
jg
xchg
sub
and
mov
sbb
push
mov
mov
xchg
fadd
mov
sub
insl
and
cmp
stc
test
notl
inc
fstpt
negl
add
movsb
in
cli
scas
and
jmp
mov
dec
out
shll
jmp
mov
add
sub
js
ja
cli
test
jmp
sbb
jns
pop
dec
test
loop
inc
xlat
lret
mov
rclb
push
mov
pop
sti
mov
xchg
shll
mov
or
cmp
imul
jle
test
pop
imul
add
push
jns
jle
or
jmp
ret
es
popf
inc
or
jbe
in
jecxz,pn
es
push
push
out
pop
sahf
ljmp
push
lcall
sahf
out
mov
mov
or
jbe
in
xor
or
inc
loopne
cs
jecxz
jo
testl
int3
lcall
int3
and
xlat
jp
imul
mov
notl
sahf
pop
mov
lds
fildll
fdivs
bound
push
test
shll
hlt
sti
xlat
icebp
xchg
popf
rcll
stos
lock
xor
sahf
jae
or
mov
mov
rolb
xchg
xchg
mov
out
cld
hlt
lock
mov
out
cmp
xchg
adcb
add
gs
jbe
jns
bnd
aaa
fsubp
dec
adc
dec
dec
mov
stc
mov
dec
loopne
cs
jns
adc
dec
dec
aaa
mov
xchg
ja
cmp
xor
push
shlb
in
pop
sbb
mov
mov
mov
cmpsl
mov
out
mov
xchg
cltd
pop
jmp
loope
jbe
cld
pop
test
lret
pop
add
repz
cmc
and
out
xor
pop
dec
in
xor
xchg
call
mov
xor
ljmp
nop
iret
push
ljmp
push
sti
xor
mov
cli
cmp
mov
addb
les
mov
mov
mov
call
pop
cli
push
or
sbb
push
cmp
xor
push
fwait
rcrl
addr16
in
mov
aas
fstpt
js
sub
or
add
jp
subb
sti
pop
rolb
orl
stos
push
mov
push
sbb
inc
mov
push
jmp
inc
in
pop
cmp
jbe
jb
xchg
test
jg
mov
ds
lcall
push
adc
cmpsl
aaa
les
cmp
out
cwtl
mov
movsl
out
insb
pop
sarl
shlb
xor
std
ret
jns
jmp
jecxz
lret
js
pop
data16
cmp
pop
mov
cmc
test
mov
in
fsubs
mov
in
mov
leave
push
and
xchg
push
mov
and
cmpsb
in
add
push
mov
jb
lcall
jne
jmp
jle
mov
mov
lods
xchg
push
xlat
mov
push
outsb
mov
aam
xchg
inc
adc
or
mov
ljmp
inc
or
sti
fidivl
dec
push
ret
or
ss
jne
enter
mov
stos
mov
cld
mov
inc
mov
push
mov
fwait
repnz
insb
dec
sbb
mov
scas
and
inc
insl
popf
enter
imul
jbe
sub
bsf
inc
rorl
out
or
cmpsb
sbb
dec
insl
fiaddl
xlat
fcoms
cmc
xchg
mov
sbb
jge
icebp
popa
cmc
or
pushf
mov
mov
outsb
inc
in
dec
adc
xchg
icebp
sahf
icebp
sti
in
jmp
lods
push
jbe
pop
inc
mov
sti
sub
xor
jle
icebp
ljmp
push
xchg
pmaxub
mov
ja
adc
in
enter
inc
adc
pop
xchg
mov
add
leave
out
lods
es
call
sub
jecxz
div
or
in
mov
xor
mov
push
jecxz
fidivl
push
jno
cli
pop
add
mov
jg
mov
mov
movsb
jb
adc
mov
mov
cli
mov
test
mov
jo
mov
mov
fldcw
xor
mov
or
mov
mov
or
leave
adcb
int3
sbb
or
push
push
repnz
lea
jbe
in
mov
fdivrs
out
lock
imul
push
mov
push
stos
lret
fsubrl
movsl
out
cmpsb
movsb
mov
adc
imul
in
push
mov
in
mov
aaa
mov
je
imul
daa
jle
mov
lahf
jmp
adc
pop
test
arpl
sbb
sbb
fildll
xchg
adc
xor
enter
stos
push
fldenv
mov
mov
sbb
xlat
stos
icebp
ret
and
stc
loope
daa
sub
dec
stc
shr
leave
dec
aas
mov
pop
in
sub
in
cmp
fisttpll
movsb
ja
xor
push
out
push
out
jns
movsl
push
int3
test
insb
fisubrl
or
jbe
or
test
out
mov
sarb
clc
xchg
sub
push
xor
push
ljmp
lahf
fucom
xchg
push
sub
mull
inc
mov
pop
fiaddl
movsl
jp
push
jne
mov
push
lcall
cmp
inc
mov
test
sub
out
inc
shlb
pop
jnp
aad
and
or
add
jo
jns
or
into
mov
testb
daa
inc
cmpsb
call
cmp
xchg
addr16
loope
xchg
outsb
in
mov
jb
or
push
es
fcoms
movsb
std
je
nop
pop
push
stos
stos
mov
arpl
popf
mov
pop
inc
movsb
int3
mov
enter
add
gs
lock
and
jbe
mov
cli
sbb
xchg
dec
sbb
in
jne
adcl
add
cli
in
xor
lods
in
jae
or
and
hlt
ljmp
out
hlt
mov
mov
enter
or
mov
jmp
mov
in
test
cmp
add
jmp
add
add
dec
jmp
mov
icebp
xor
mov
popa
sub
std
outsb
mov
test
fimull
xchg
adc
sub
jg
jb
mov
xor
adc
xchg
sti
scas
and
mov
mov
sarl
ljmpw
cmpsb
mov
xor
shll
aad
lods
lds
pop
insb
out
inc
jmp
push
xchg
add
mov
hlt
xchg
mov
jg
pop
mov
push
sbb
lcall
je
mov
repz
fwait
in
mov
mov
addr16
pop
or
add
fwait
sbbl
je
mov
mov
ljmp
cli
cmp
pop
jo
add
addr16
adc
nop
mov
mov
cmp
bound
les
test
repz
stos
cmp
cwtl
xor
js
je
aad
mov
mov
xchg
imul
mov
fwait
mov
push
mov
dec
ja
dec
push
mov
pop
sti
pop
inc
arpl
test
testb
test
shll
mov
push
sub
sbb
xor
lcall
jne
pop
pop
fisttpl
stos
pop
mov
imul
adc
jbe
push
xor
sub
ljmp
push
scas
cmc
mov
mov
mov
stos
mov
clc
mov
mov
bound
jmp
mov
mov
or
mov
fcmovnu
movsb
push
fldl
sbb
cmp
mov
testb
or
orb
xchg
stc
pop
sti
mov
pop
mov
xchg
sub
pop
mov
push
cltd
fnstsw
sub
ret
jmp
loop
lcall
or
inc
pop
mov
sub
cmc
mov
ljmp
mov
mov
adc
cmp
mov
lock
ds
imul
dec
icebp
xor
shrl
into
incl
push
imul
sub
rol
fistpll
in
js
xchg
addr16
add
lods
inc
mov
or
dec
rcrl
in
xor
in
aaa
mov
repnz
mov
popa
pop
addr16
js
xchg
out
iret
pop
dec
aas
aaa
adc
in
cltd
push
push
popf
jp
xchg
cwtl
sbb
out
mov
pop
or
rorl
xchg
loope
push
cld
and
out
xchg
imul
mov
xor
add
mov
or
dec
mov
je
push
addr16
sbb
inc
in
leave
aas
push
adc
insb
lock
mov
call
cmp
ja
xchg
pop
ja
inc
jmp
push
das
sbb
jns
stc
int
pop
ret
jp
dec
test
sbbl
or
pushf
popl
pop
jecxz
jns
lahf
jecxz
mov
loope
ss
xor
pop
lods
out
adc
das
lock
mov
jo
jns
pop
xor
xor
cmp
hlt
cli
inc
pop
movsl
push
loopne
sti
mov
int3
or
hlt
mov
cmpsl
xorb
or
aaa
jle
mov
out
movl
orl
dec
push
fs
xchg
pushf
imulb
out
mov
mov
sub
mov
push
bound
leave
dec
fistl
pop
pop
push
or
mov
jns
jg
data16
out
mov
jle
int3
pop
je
dec
out
je
lds
imul
jp
js
repz
and
push
adc
adc
mov
cmpsl
insb
lock
jno
ds
xor
pop
idivb
xlat
movsb
pop
push
add
inc
mov
push
pop
dec
cli
jns
repnz
mov
icebp
mov
cmp
out
inc
adc
mov
movsb
jg
push
inc
mov
pop
popa
pop
fdivrs
cmpsb
shlb
lods
incb
or
or
shrb
lock
add
aas
mov
es
test
inc
jno
push
mov
nop
pushf
push
mov
or
into
inc
sub
scas
nop
jns
lahf
dec
mov
insb
aam
adc
dec
jg
inc
jns
ss
mov
shrl
jp
loop
aaa
xor
or
in
mov
fwait
scas
sub
jp
or
out
mov
es
repnz
cmpsb
mov
jne
daa
inc
outsl
ja
inc
aad
inc
in
pop
sub
fwait
in
pop
mov
jb
dec
sbb
mov
scas
repz
dec
in
in
xchg
arpl
mov
aas
inc
xchg
mov
xor
lcall
inc
insl
imul
mov
push
cmpsl
icebp
in
jne
fnstenv
bndstx
inc
ret
inc
imul
fidivrl
in
ljmp
stc
movsb
loopne
mov
aam
mov
mov
cmp
or
adc
outsb
xor
mov
mov
adc
mov
lret
mov
ja
jbe
addr16
jp
scas
sub
or
scas
adcb
push
mov
push
sti
loopne
mulb
jno
pop
pop
or
or
mov
sbb
pop
pop
inc
fisttpll
or
mov
scas
insb
aam
lock
es
out
push
sti
pusha
xchg
sti
fwait
sub
ja
push
sub
fwait
inc
mov
int
mov
push
daa
xchg
jns
sbb
out
out
push
mov
js
fwait
xchg
push
push
test
or
cs
push
mov
jbe
popf
idivl
int
lock
adc
aaa
jbe
cld
push
out
jo
arpl
pop
mov
inc
pop
dec
add
dec
imul
xchg
mov
lcall
push
ja
mov
data16
mov
add
push
and
pop
add
inc
in
outsl
add
cltd
call
sbb
jne
cmp
aaa
xchg
shlb
call
mov
push
jge
mov
jb
inc
adc
int3
cli
ja
dec
xchg
jo
jae
leave
out
fisttpl
mov
xor
pop
addb
insb
pop
cmpsb
outsb
leave
jbe
cmp
psllw
mov
push
and
dec
mov
lahf
cltd
shlb
xchg
sti
in
jbe
push
and
out
imul
fdivrs
push
mov
popa
scas
xor
popa
hlt
jbe
sti
mov
adc
xor
data16
gs
int
decl
xor
and
push
in
shr
ljmp
xchg
stos
jl
jecxz
mov
loopne
cli
pop
into
sti
jp
or
sbb
pop
push
mov
out
hlt
in
push
int
in
xchg
cs
mov
insl
mov
adc
xor
lcall
push
aas
push
jns
mov
js
fwait
mov
in
mov
clc
mov
jns
aas
xchg
add
ret
lret
idivl
jp
testb
cmc
loope
pop
inc
in
ljmp
orl
push
adc
mov
testb
movsb
push
jl
add
inc
cmpsb
pop
push
add
addb
sbb
sbb
call
scas
adc
mov
in
mov
dec
add
cs
pop
xlat
jmp
enter
fildll
out
idivb
or
mov
cmp
and
lret
dec
jp
jo
js
adc
pop
ljmp
ret
dec
mov
fsts
inc
pop
clc
repz
inc
gs
push
xor
faddl
mov
inc
adc
lock
pop
out
push
roll
ret
pusha
subb
cmc
pushf
mov
adc
js
pop
das
addb
scas
mov
pop
dec
cmp
or
std
outsb
mov
inc
push
js
out
sbb
cmp
xchg
xor
idivb
stos
mov
push
loop
sti
aad
fiadds
call
and
imul
hlt
jns
insl
mov
dec
or
sbb
in
jge
dec
sarl
das
cltd
imul
orb
push
xor
xchg
mov
mov
dec
mov
and
mov
cmp
xor
sti
and
mov
out
mov
sub
jp
mov
mov
dec
pop
outsl
lahf
mov
cmp
push
xor
and
das
mov
adc
jae
lret
mov
inc
mov
or
jae
lcall
and
adc
ret
gs
lock
imul
adc
je
xor
sbb
push
out
cltd
gs
mov
sbb
fdivs
in
xchg
not
mov
jno
cmpsb
popa
push
mov
cmp
test
adc
mov
mov
lods
movsb
jge
shr
inc
mov
mov
sarb
inc
aad
push
inc
loope
sub
inc
xlat
jl
inc
mov
xor
mov
push
cmpsb
mov
add
aaa
in
hlt
les
sbb
ja
sub
or
lods
push
dec
pop
es
xchg
push
xchg
dec
push
fidivl
xor
ja
cli
sarl
sbb
add
repz
in
idivl
sub
jns
lret
sbb
loopne
mov
ds
mov
and
inc
lret
shlb
lret
mov
push
add
xchg
into
pusha
aam
sahf
scas
mov
cmp
in
push
negb
add
adc
into
jnp
mov
hlt
sbb
lcall
ficoms
shlb
jp
stos
mov
dec
jb
inc
cmpsb
es
cmp
addr16
sahf
and
sti
cmpsb
inc
jmp
repnz
je
xlat
loope
cmp
lret
sub
or
cmp
mov
in
lret
mov
leave
add
int
in
pop
rclb
cmpsb
ficompl
jp
imulb
jb
jbe
jne
in
pop
mov
pushf
imul
mov
jno
out
adc
stos
sahf
test
ret
xchg
jbe
mov
jmp
lods
mov
in
add
push
insb
mov
adc
push
lret
stos
mov
pop
pushf
or
pushf
lret
mov
cli
lods
fiaddl
orb
inc
ret
xchg
ret
in
jnp
jg
fwait
icebp
jecxz
scas
into
xchg
jbe
lcall
test
xchg
cmp
cld
sti
aad
xorl
pop
mov
mov
icebp
xchg
adc
cmp
ja
fadds
leave
push
daa
jbe
lock
sti
call
mov
jns
mov
cmp
ljmp
nop
pop
mov
bound
push
mov
es
pop
jns
cmp
xchg
lea
sbb
loop
bnd
pop
mov
mov
jb
xchg
pop
mov
scas
pushf
out
pop
es
jb
xor
loope
mov
sti
mov
xchg
jo
mov
dec
jl
repz
xchg
push
add
ja
jns
fidivl
in
andb
or
cmp
sbb
in
lods
add
or
add
xor
cwtl
dec
fdivrs
sub
dec
sbb
lods
mov
adc
js
dec
jp
xor
aaa
cmpsb
or
xor
dec
andl
leave
pop
andl
sti
xor
loop
pop
stos
dec
xlat
repz
mov
lret
mov
and
or
lock
in
enter
sub
rorl
sahf
sahf
sbb
jns
addr16
lret
or
addr16
lcall
cltd
xchg
inc
mov
mov
or
xor
lcall
xchg
int3
push
das
adc
or
xchg
inc
mov
lock
fldl
xchg
or
adc
jae
pop
adc
fwait
or
cli
jb
jmp
and
and
or
mov
pop
push
imul
pop
mov
jne
push
or
repnz
fnstenv
jg
and
add
dec
jb
adc
fwait
mov
jo
mov
mov
add
xchg
mov
xchg
inc
jmp
jo
int3
add
stos
fidivl
jns
jbe
xchg
inc
mov
or
and
bound
adc
lock
push
shll
mov
xchg
fwait
lret
dec
xchg
jns
sahf
pop
mov
mov
and
div
dec
lcall
and
push
jns
ljmp
les
jg
cmp
jp
and
ja
fst
aas
scas
cli
js
cmp
lock
dec
js
int3
cltd
enter
sti
aad
clc
cmp
jp
movsl
add
call
out
pushf
jno
iret
inc
test
enter
lods
push
test
xor
xor
notl
sti
xchg
sub
mov
pop
jecxz
pop
int3
es
cs
test
orl
shlb
lock
lret
insb
adc
push
mov
lfs
in
mov
cmpsl
push
lea
clc
enter
addr16
jp
adc
iret
imul
sub
xchg
mov
inc
and
sarb
in
and
dec
jno
out
lods
dec
stc
leave
stos
inc
jmp
mov
and
pop
or
sub
int3
mov
leave
int3
orb
adc
xlat
jg
test
jmp
xchg
fwait
jns
test
leave
sbb
in
call
lock
shrb
movsb
cmpsl
stos
jnp
es
out
test
dec
sub
in
xchg
je
mov
dec
lods
and
test
push
data16
and
clc
push
aam
mov
or
lret
mul
mov
outsl
pop
cwtl
push
rcrb
repz
cmc
out
in
cmp
mov
fs
ror
movsb
fldpi
or
cwtl
fwait
mov
aad
xchg
jno
outsb
mov
jbe
xchg
ret
pop
xlat
push
aam
jno
imul
in
xor
les
mov
xchg
mov
rcll
aas
hlt
scas
cli
adc
dec
out
hlt
mov
cld
adc
mov
cmp
call
movsb
pop
enter
test
sub
outsl
ljmp
test
stc
test
lods
push
cmp
loope
mov
mov
push
add
cltd
jecxz
movb
jmp
aas
cmp
push
fistpl
push
pop
sub
dec
jg
call
movsb
xlat
jae
mov
and
or
lcall
add
mov
xchg
add
jecxz
cmp
pop
imul
incl
xor
aad
jecxz
out
mov
or
mov
decb
dec
pop
fildl
mov
cwtl
jno
jbe
mov
arpl
inc
rorl
push
pop
xchg
add
inc
js
xor
inc
movsl
and
insl
fists
jge
adc
xlat
test
lret
ja
stos
mov
pop
and
mov
cmpsl
or
ja
xlat
cmc
mov
fwait
sbb
mov
test
dec
add
lcall
leave
rclb
cmp
repz
xor
nop
xchg
dec
sbb
addr16
cli
pop
inc
fstpt
sarl
das
scas
fwait
xchg
and
popf
addl
push
add
cmp
xchg
jae
jo
dec
pop
or
pusha
repnz
cmp
push
stos
jp
mov
xlat
aas
icebp
das
pop
dec
aad
shlb
push
inc
insl
or
cmp
push
dec
aam
dec
fisttpl
fimull
push
pop
dec
out
pop
lcall
xchg
insb
subb
std
repnz
xchg
imull
add
lds
ds
mov
sub
mulb
mov
mov
or
lret
arpl
or
mov
rep
xchg
mov
mov
push
insb
imul
inc
test
pop
xchg
mov
ficoms
add
lds
sub
push
enter
lds
add
int
jge
mov
jmp
jmp
cmp
leave
ljmp
push
pop
pop
and
jb
orb
es
cltd
pop
pop
into
loop
push
mov
pushf
push
push
out
ret
sub
aaa
movsl
stos
sub
xchg
mov
in
mov
dec
cmp
loope
pop
scas
xlat
shll
mov
or
in
cmpsb
in
inc
dec
out
dec
pop
fmul
roll
dec
lds
xchg
jl
iret
sub
mov
mov
mov
mov
repnz
pop
outsl
mov
pop
movsb
mov
jl
push
dec
scas
repnz
out
and
inc
rcrl
icebp
sbb
cwtl
sti
sbb
dec
out
cwtl
lret
and
mov
test
mov
xchg
insl
out
loop
leave
pop
cld
stc
mov
lock
lret
sbb
mov
cli
push
adc
ret
popa
jno
dec
jp
pop
or
pop
mov
mov
lcall
pop
push
cmp
jp
mov
in
dec
les
pop
insl
outsb
dec
xchg
pop
inc
stc
cmp
adcb
adcl
in
push
gs
in
push
cmp
push
jecxz
dec
adc
movsl
jns
leave
cmp
mov
add
leave
mov
pop
add
aad
pop
cmc
fisttpl
lcall
shll
jmp
in
push
and
add
or
imul
pop
mov
pop
cmp
mov
pop
pop
in
sahf
insb
dec
mov
push
stos
test
or
mov
mov
repz
add
xor
subl
xchg
inc
in
in
mov
dec
mov
or
pop
push
int3
stos
jns
movsl
mov
xlat
xor
pop
mov
loope
and
movsl
cmp
mov
pop
push
inc
add
mov
cmp
mov
in
push
push
xor
jne
push
ds
adc
mov
imul
xchg
push
mov
imul
mov
cmc
addr16
jg
and
and
mov
ret
xor
inc
psubsb
xchg
xchg
sbb
dec
jns
aam
or
mov
addr16
add
scas
test
dec
pop
stc
insl
lahf
lret
push
sbb
mov
fidivrl
jle
push
sar
gs
pop
lahf
scas
mov
inc
lea
push
jns
push
pusha
stos
in
aaa
in
cwtl
mov
fs
mov
sub
xchg
inc
test
dec
push
or
rcl
into
cli
cld
push
arpl
and
fnstcw
je
push
arpl
pop
sti
mov
add
sti
mov
stc
jae
jp
mov
mov
push
stc
inc
scas
lods
movsb
fwait
push
pushf
leave
xchg
stos
out
xchg
cmp
call
leave
inc
aam
push
jp
int
in
cmpl
pop
adc
das
jp
cmc
and
sub
sbb
push
mov
jne
add
xchg
in
loopne
lods
and
cmpsb
push
test
mov
aas
or
or
push
icebp
mov
push
fistpl
jns
and
cmp
es
dec
ds
adc
cmc
mov
insb
jle
cmp
mov
pop
imul
push
mov
hlt
mov
add
sub
in
adc
inc
add
mov
mov
jb
fiadds
xchg
int3
mov
ds
jle
mov
jmp
add
movsb
loopne
stos
adc
add
push
gs
dec
mov
dec
fcomip
fcompl
lock
cmp
call
lea
xlat
sbb
xchg
stc
dec
jp
sti
sbb
loop
adc
fcmovnb
insb
jmp
xor
inc
xchg
ljmp
mov
pop
movsl
in
inc
mov
xchg
cmpsb
or
cmp
les
aad
mov
mov
mov
shlb
cmpsl
fisubrl
inc
outsl
or
push
inc
mov
cmp
fnstenv
cmp
leave
imul
lcall
add
aaa
lret
adc
scas
popf
inc
dec
xorb
ds
fidivl
inc
pop
push
sub
mov
mov
imul
aad
jne
imul
pop
sar
stos
sub
loope
jnp
lret
mov
dec
mov
fildl
mov
dec
add
roll
xchg
lret
dec
jne
cld
push
ret
loope
lcall
cmp
jbe
cmp
fisttps
mov
mov
lret
pusha
lcall
andl
or
popa
xchg
push
cmp
jno
mov
repz
sbb
inc
adc
loop
push
jne
push
jecxz
outsb
cmp
in
jl
dec
popf
xlat
mov
stos
mov
pop
ss
into
cmp
mov
mov
movsb
enter
dec
int
jne
int
xchg
mov
cmp
test
mov
push
mov
sbb
xor
call
pop
negl
sbb
jp
out
adc
repnz
cwtl
jno
mov
lcall
in
rcll
cli
pushf
mov
mov
adc
mov
mov
cmc
xor
pusha
leave
sbb
cmp
jbe
les
lret
daa
out
loop
cmc
aas
push
imul
inc
lret
pop
clc
mov
cmpsl
ss
mov
mov
cld
insb
add
xchg
js
mov
jg
or
add
jnp
sti
or
outsl
inc
in
clc
fnstcw
xchg
cmpsl
mov
sub
arpl
dec
push
xchg
or
dec
out
popa
mov
sbb
xchg
pop
inc
push
jge
jle
addr16
mov
rcl
inc
mov
sub
pop
xchg
xchg
repz
dec
cmp
jno
mov
xchg
mov
or
sahf
inc
and
in
mov
fldl
add
mov
sub
data16
cld
mov
popa
lret
enter
inc
rol
xlat
dec
lret
sbb
popa
fcoml
dec
mov
js
sbb
popa
iret
add
add
mov
xor
aam
mov
push
sub
adc
sub
test
call
imul
pop
mov
es
fs
inc
ds
sarb
push
clc
mov
fldenv
loope
jp
lods
sub
mov
adc
test
rcrl
js
in
jno
xlat
div
iret
das
fstps
insb
jo
fcomp
outsl
mov
test
loope
sub
ror
int
pusha
jmp
pusha
stc
cmc
jo
cli
cmp
inc
lock
jb
push
add
add
xor
and
and
inc
pop
and
je
mov
adc
mov
pop
lds
push
shlb
cmp
hlt
jg
cmc
dec
in
push
stos
sarb
cmpsb
dec
pop
sbb
mov
or
icebp
test
scas
sub
xorb
repnz
sahf
pop
adc
fnstsw
jp
scas
add
lret
sbbb
int
xchg
pop
rcr
jp
cli
popa
jg
out
leave
in
js
mov
in
scas
and
xchg
mov
insb
std
pop
ret
scas
or
push
sbb
sbb
pushf
jecxz
js
pmaddwd
pop
sub
sbb
rcrl
aad
jmp
in
mov
pop
jp
jg
pusha
dec
fyl2x
push
jle
adc
jecxz
xchg
enter
shrb
sub
dec
hlt
dec
imul
test
push
sti
jmp
inc
mov
popl
push
jmp
stos
insl
fnstsw
pop
lock
loop
and
aaa
repz
and
add
xor
out
addr16
xchg
pop
fisubs
inc
into
insl
jbe
bound
in
scas
popf
add
insb
jb
jbe
mov
mov
icebp
shrb
cld
pop
dec
jns
inc
popa
cli
mov
insl
icebp
dec
jecxz
cmp
sbb
xor
dec
fcompl
dec
loop
mov
add
xchg
lret
jg
cmp
jb
ret
in
pop
inc
mov
jle
sbb
xor
int
mov
cmpsl
mov
dec
clc
in
push
adc
idivl
adc
in
inc
iret
mov
jmp
in
movhlps
lods
rorl
shl
xchg
inc
sbb
push
push
adc
jle
std
ret
fdivrl
or
cmp
xchg
test
clc
adc
mov
loop
and
dec
fimull
jecxz
div
and
gs
jbe
stc
popa
inc
inc
push
or
and
xchg
dec
pop
jp
lea
push
mov
xor
mov
xor
lahf
nop
add
lods
fdivp
fisubrl
fldenv
mov
in
cmpsl
fucom
inc
sahf
movsl
frstor
stc
jb
cmpsl
inc
sub
adc
pop
insl
pop
test
pop
jmp
in
dec
jecxz
cmp
bound
addr16
ret
rcrl
pop
inc
and
fisttpll
gs
shr
repz
or
inc
jg
pop
movsb
js
movsl
push
insb
cld
jmp
in
add
xor
pop
out
xchg
pop
aas
in
in
push
test
jns
mov
inc
jb
jbe
ljmp
stos
test
push
in
push
or
push
subb
adc
or
add
mov
sub
or
ret
imul
testl
inc
jecxz
jp
xchg
fisubrs
sub
xchg
loope
jecxz
sub
push
inc
cmpl
cmpsb
lahf
mov
dec
push
sub
in
mov
inc
movsb
add
xchg
stc
mov
fmull
push
jle
mov
inc
mov
lods
inc
cmp
fildll
sbb
repnz
sahf
jg
jns
xor
ret
data16
or
mov
cmpsb
or
add
push
sbb
mov
push
lahf
cli
and
shr
xchg
out
or
fwait
rcrb
sti
mov
mov
pop
test
pop
hlt
enter
jp
movl
les
xchg
adc
jb
mov
sar
cmpsb
inc
mov
lret
loopne
cmc
out
jbe
jbe
icebp
jae
cmc
mov
leave
in
aaa
arpl
xchg
int
inc
in
add
cltd
out
jp
mov
mov
xchg
mov
mov
lret
aad
add
daa
cs
pushf
loop
adc
imul
add
pop
lock
in
cli
lret
int3
roll
sbb
es
hlt
addr16
or
add
add
orl
in
test
jne
or
imul
sub
cs
rcll
cmc
jae
cmp
and
mov
xchg
andl
in
sub
aad
ffree
cmp
inc
push
cmc
add
dec
mov
adc
mov
test
leave
sbb
shl
loope
scas
push
pusha
mov
call
mov
aaa
cltd
mov
jne
arpl
and
lret
es
dec
lock
pop
idiv
adc
push
cmc
jecxz
neg
in
dec
xor
xlat
mov
nop
lret
push
shrl
lcall
inc
xor
movsb
jp
rcll
xchg
xlat
cmpsl
int3
jmp
push
push
fstpt
aam
mov
cmpsl
daa
sbb
out
lods
jmp
out
push
repz
mov
xor
push
fstp
xchg
lcall
adc
mov
or
mov
enter
push
xchg
and
xchg
loope
rcll
add
jno
dec
aaa
sub
pop
jb
pop
sbb
das
lock
xor
jae
insl
enter
mov
push
mov
mov
out
rorl
inc
mov
lret
fldt
sub
dec
sbb
in
sub
ja
mov
iret
int3
pop
outsb
aad
andl
sub
lret
andb
add
clc
js
push
xor
movsl
pop
xor
mov
mov
lds
adc
xor
mov
lcallw
mov
pop
sub
xchg
cwtl
adcb
jle
add
push
adc
in
stc
das
dec
lea
xor
sub
jp
cmc
push
adc
add
icebp
push
in
xor
dec
adc
mov
cmp
scas
insb
dec
dec
add
mov
in
mov
test
in
scas
cwtl
popa
in
fstpt
cmp
mov
xlat
mov
or
cwtl
stc
sahf
mov
mov
xor
js
cmp
sti
push
sbb
push
sub
push
jl
mov
sarl
stos
in
sbb
mov
fstpl
subb
mov
stc
ljmp
sub
sbb
js
sub
je
in
data16
push
cmc
loope
gs
jbe
les
mov
and
je
mov
adc
in
cli
aas
in
push
pop
shl
cmp
dec
xchg
in
imul
imul
outsl
inc
jmp
je
mov
cli
lock
mov
pop
outsl
dec
arpl
cli
jecxz
imul
fcmove
mov
sub
mov
fnstcw
aaa
cmp
jmp
ss
fsubrs
aam
std
loop
cmp
bound
inc
or
cmp
lcall
call
popa
inc
ret
enter
in
mov
in
mov
lret
mov
in
pop
mov
or
jg
rcrl
jnp
and
iret
cli
fstl
rolb
divl
pop
fnstcw
xchg
ja
clc
fwait
cmpsl
test
lret
imul
cmp
pop
mov
xchg
cmpsl
imul
leavew
int3
push
cli
cmp
jg
shrl
out
stc
cmp
mov
in
xchg
dec
or
cmpsb
orl
cmp
in
out
loop
ljmp
scas
clc
lods
xchg
stos
fldln2
pop
mov
inc
cmpsl
add
daa
sbb
lret
jns
or
sub
mov
cmp
push
mov
jb
out
sbb
inc
loop
test
ret
pop
cs
lock
pop
repz
add
mov
mov
test
aad
sub
fwait
cmc
adc
scas
hlt
pop
in
push
mov
test
push
notb
in
inc
pushf
in
cmpsl
imul
lds
aad
jmp
outsl
ret
mov
jecxz
insb
inc
cmpsb
fidivrs
or
sbb
cmc
dec
fldcw
sbb
xchg
ficomps
pop
mov
cmc
insb
xor
add
push
xor
mov
sti
ja
lock
js
out
imul
stc
and
dec
mov
sub
mov
pop
add
orb
mov
ljmp
jl
std
lea
xor
clc
leave
adc
idiv
pop
aas
ljmp
pop
dec
push
repz
and
mov
or
mov
fs
sbb
mov
jbe
mov
es
pop
jle
sub
sub
cmp
add
lahf
or
lret
jg
int
jl
cmp
cli
scas
in
xor
jo
repnz
pop
jbe
xchg
loopne
cli
insb
mov
add
mov
out
ja
popa
fwait
or
popf
lahf
mov
test
mov
stc
rcr
and
icebp
xchg
jae
loopne
bound
fisubrl
scas
mov
dec
testb
hlt
fs
das
enter
and
mov
xchg
xchg
jecxz
push
or
or
mov
clc
in
push
push
cwtl
add
je
mov
adc
jmp
mov
push
call
and
jl
ja
pop
sbb
adc
mov
fdivr
jne
je
pop
div
enter
daa
out
pop
fiadds
adc
inc
xchg
jbe
clc
lret
xchg
sub
mov
hlt
jns
std
sti
or
sub
hlt
jmp
inc
pushf
in
push
leave
in
pop
mov
lret
pop
inc
fldl2t
jmp
jb
push
add
jmp
fnstsw
lock
je
mov
push
cmpsl
pusha
mov
sbb
daa
xchg
pop
icebp
or
hlt
sub
dec
pop
push
dec
aas
mov
hlt
pop
repnz
mov
pop
sahf
pop
inc
dec
jp
push
pusha
pop
adc
fstpl
in
xor
loop
push
pop
outsb
shll
pop
lret
mov
mov
adc
ret
pop
inc
repz
push
imul
fwait
pop
fwait
out
pop
icebp
stc
insl
in
test
push
sti
jb
xor
adc
pop
frstor
inc
or
rolb
mov
adc
xchg
cmp
test
push
xor
in
leave
mov
add
sbb
sbb
imul
jle
dec
dec
and
and
cmp
jbe
fwait
jns
mov
pop
mov
aaa
jp
cmp
pop
data16
lock
mov
ror
mov
jbe
add
stc
cmp
jns
cmp
fimull
hlt
jae
in
test
in
pop
dec
cmp
jecxz
inc
jbe
mov
int3
nop
or
jp
xor
cmp
inc
dec
xchg
push
and
out
adc
sub
je
in
out
mov
cmpsl
sti
cmp
imul
out
dec
mov
mov
divb
adc
sbb
jns
mov
cmp
sbb
out
mov
inc
in
xchg
push
push
fsubl
or
sbb
or
mov
fwait
scas
inc
std
mov
addl
mov
nop
sub
fidivl
repnz
push
cmp
add
sbb
mov
test
sahf
adc
test
cmpsl
mov
and
repz
mov
jno
data16
xchg
add
ss
testl
cmc
std
and
push
repnz
dec
mov
sbb
das
jne
xchg
out
nop
shlb
sub
push
es
insb
jecxz
pop
cmp
xchg
testl
and
ret
pop
pop
int3
out
je
sub
mov
cmpsb
push
push
dec
pop
xchg
call
pop
mov
add
lods
js
push
mov
or
xchg
push
enter
jle
cmp
sti
push
mov
pop
push
inc
jle
cmp
addr16
dec
or
inc
in
scas
mov
in
push
adcb
pushf
rclb
add
adc
cmp
mov
leave
aaa
pusha
fwait
and
lret
push
fcomps
leave
xor
lods
xor
in
mov
mov
mov
xchg
aad
xchg
and
or
mov
adc
adc
mov
cli
stos
jl
pop
rorb
stos
xor
pop
add
push
sti
enter
sub
mov
push
cmp
std
adc
jmp
mov
dec
pop
js
cmp
or
andb
jns
inc
movsb
inc
sbbb
je
cmc
adc
push
jl
rcl
icebp
loopne
pop
jno
sub
pop
sub
lods
out
push
xchg
or
xor
mov
cwtl
leave
std
pop
sbb
push
stos
movl
jb
pop
ds
push
mov
sbb
dec
dec
test
fxch
mov
sti
or
mov
pop
pop
in
out
movsl
jb
add
jp
das
sbb
enter
fwait
and
push
sbb
push
stos
mov
jne
push
mov
stos
aas
loopne
pop
cmpsb
mov
xor
pusha
cmp
imul
sbb
add
jns
mov
mov
xchg
sub
pop
out
or
outsb
in
pushl
dec
cmpsb
sbbb
sub
mov
ljmp
pop
and
jmp
dec
mov
shlb
repz
adc
push
mov
movsb
decb
and
sub
ljmp
js
mov
mov
push
mov
lods
fldenv
cmpsb
push
lds
insl
push
in
push
mov
pop
and
push
sarl
jmp
enter
aaa
or
into
mov
mov
push
or
mov
push
aad
jbe
jecxz
jb
int
dec
negb
adc
cmpsb
push
mov
mov
add
cmpsl
roll
lods
mov
mov
mov
cmp
or
mov
mov
pop
lock
cmp
and
cmp
insl
lret
arpl
sbb
imul
bound
cmp
aas
sti
pop
fiaddl
daa
ljmp
loop
test
pushf
adc
stc
stos
add
bound
fidivrl
dec
fldenv
xor
cmp
test
mov
cmp
sub
jp,pt
ljmp
push
xor
mov
dec
sbb
mov
and
pop
sub
ror
outsb
mov
dec
mov
push
out
pop
jecxz
jns
movsl
add
movsl
mov
cmp
mov
xchg
ljmp
lock
mov
add
std
mov
int3
xchg
lret
ret
ss
jecxz
sbb
or
push
add
in
lret
aam
pop
aas
lock
sbb
add
call
stos
xchg
out
cmp
stos
cld
jb
lods
fwait
add
ret
push
pop
rol
pop
mov
sbb
js
xchg
and
aad
js
sbb
xlat
scas
sub
jmp
or
add
fistpll
mov
popa
les
out
push
inc
cwtl
sub
sub
cmp
add
push
stos
stos
clc
jae
mov
nop
leave
cmp
pop
daa
gs
cmp
jae
dec
inc
mov
dec
xor
adc
mov
add
lock
mov
jecxz
fs
sbb
mov
test
add
ds
cli
aad
mov
ljmp
cmp
mov
adc
mov
fwait
sub
or
push
stos
jae
xchg
sbb
ja
xor
pop
and
mov
inc
xor
push
xchg
lock
mov
cmp
dec
insl
lcall
dec
imul
loopne
addr16
or
pop
jp
daa
lods
jmp
iret
sbb
mov
addr16
mov
jmp
addr16
lcall
jae
adc
and
mov
push
adc
xchg
stc
push
add
jl
add
rcrl
or
bound
stc
sub
sbb
in
stos
out
aas
addr16
scas
cld
or
jecxz
bound
push
insl
leave
shll
mov
sub
mov
sti
adc
mov
add
sbb
idivl
pop
hlt
leave
insl
ss
mov
out
sbb
cmpb
push
fstpl
xor
test
mov
ss
jb
repz
pop
xchg
jmp
prefetcht0
jecxz
push
arpl
or
mov
or
lcall
cmc
cli
ja
stc
lret
mov
mov
mov
dec
xchg
hlt
jp
notl
hlt
cmpsl
ror
sahf
repz
pop
pushf
cmc
lret
xchg
clc
push
das
test
sti
fsts
repz
push
arpl
pop
mov
fwait
js
sbb
test
mov
push
push
inc
cmc
sub
xchg
loopne
movsb
in
xchg
fisttpll
sbb
inc
adc
and
pusha
pop
in
repnz
lock
xlat
jae
aam
sti
jmp
add
sti
in
push
jne
mov
cmp
in
mov
xchg
mov
mov
out
mov
in
fdivl
mov
fimull
out
cld
dec
test
push
mov
aad
and
dec
dec
or
outsl
jmp
or
mov
cld
mov
mov
inc
xor
div
pop
enter
push
aaa
in
pop
and
sbbb
mov
sbb
movsl
outsl
int3
insb
xor
or
fimull
enter
mov
cmp
insl
out
lcall
das
repz
imul
dec
test
mov
jle
push
pop
lods
inc
addr16
jno
lahf
gs
inc
mov
enter
sub
cmp
imul
xchg
mov
mov
mov
fs
les
scas
push
lods
add
mov
repz
jo
and
push
sbb
push
scas
xchg
stc
ss
fcomps
fwait
stc
pushf
push
mov
mov
negb
test
xor
inc
push
cld
pop
jb
das
jp
sbbl
or
dec
mov
or
orl
clc
sbb
mov
or
cmp
xor
mov
mov
in
jp
loop
push
cltd
daa
mov
adc
xchg
aam
sti
jns
in
jmp
mov
cli
or
mov
cmp
divl
mov
mov
jae
or
lock
mov
sub
repz
jo
pop
in
mov
xchg
pop
neg
jns
dec
jmp
mov
adc
add
lock
les
mov
aaa
repz
lock
jb
pop
movsl
push
pop
xor
pop
jp
in
mov
adc
cwtl
fldt
hlt
inc
jmp
mov
or
mov
lcall
xchg
cmpsb
in
sbb
repnz
jae
sbb
mov
inc
sub
je
mov
icebp
xlat
or
ja
inc
mov
cmp
divl
dec
ja
mov
das
mov
popf
push
or
push
nop
nop
sti
mov
push
pop
lds
cmp
testl
imul
cmc
sarb
into
mov
push
pop
pop
lods
sbb
testb
in
icebp
push
push
aad
sub
jbe
shlb
jns
inc
test
sbb
in
pop
mov
sbb
xor
fucomp
adc
sbb
mov
adc
push
hlt
movsb
pop
mov
sub
pop
push
cmp
in
out
add
jmp
mov
mov
stc
xchg
hlt
mov
jo
pop
and
movsb
imul
mov
data16
push
stos
pop
xlat
inc
js
test
mov
dec
popa
inc
adc
repz
cmp
pop
xlat
out
adc
pop
xlat
sarb
lods
inc
addr16
add
shlb
dec
pop
rcrl
add
pop
mov
pop
test
hlt
ljmp
mov
xchg
xchg
xor
push
popf
adc
scas
call
je
lock
push
test
ss
hlt
push
pop
xor
loope
outsb
sbb
sub
dec
mov
imul
out
cld
icebp
xor
jmp
pop
cli
sbb
jge
jmp
pushf
adc
pop
stc
mov
mov
dec
movsb
es
pop
mov
push
lock
loopne
sti
ljmp
mov
lcall
mov
aam
xchg
adc
cs
lret
pop
push
dec
inc
xor
jg
stos
stc
or
xchg
sbb
jne
test
inc
cmc
test
loopne
lea
dec
jnp
shrl
or
pop
dec
sti
dec
iret
jecxz
pop
mov
arpl
or
mov
mov
leave
out
adc
jns
cmp
push
cmc
mov
pop
inc
push
in
push
idiv
pop
sub
mov
dec
divl
sbb
dec
mov
sub
cli
jb
push
loop
pop
or
sti
fbstp
mov
push
xchg
outsl
inc
popl
jbe
mov
or
fwait
outsb
lret
addb
and
mov
cli
jne
decl
popa
das
out
mov
enter
jl
es
xchg
in
ds
lods
inc
mov
sahf
aas
jb
or
gs
cmpsl
sub
repnz
jno
aas
ljmp
mov
sbb
jno
test
hlt
inc
jb
stc
popf
cwtl
inc
jbe
js
xor
in
jmp
sbb
mov
adc
adc
shlb
rcl
pop
stos
mov
aas
cli
shrb
xor
push
rorl
sbb
mov
pop
mov
lret
cmp
ja
in
std
push
jo
jo
mov
sub
out
cld
ds
xchg
int3
mov
cmc
jbe
xor
stc
cld
fwait
sahf
push
es
lret
xchg
outsb
add
xchg
add
ja
jns
add
sbb
push
movsl
shlb
inc
add
dec
dec
gs
aad
mov
xor
jae
hlt
imul
fwait
sub
in
pop
lcall
icebp
mov
insb
add
pop
jne
pop
cld
inc
xor
lret
in
gs
lcall
lret
notb
sub
sub
xor
call
iret
testb
jns
in
fisttpl
xchg
stos
jne
dec
mov
adc
inc
dec
int
jle
xlat
push
test
xchg
cmc
xor
jecxz
js
maskmovq
stos
enter
lret
inc
pop
lcall
lock
jb
iret
and
mov
and
out
jle
xlat
into
notl
stos
adc
push
add
or
xchg
sahf
scas
pop
push
xor
lret
push
lahf
data16
outsl
pop
push
fsqrt
rcll
incl
rclb
mov
inc
sub
leave
mov
lock
repnz
loopne
sub
aam
mov
outsl
shl
sub
mov
xchg
mov
fwait
dec
lods
jp
mov
sti
imull
mov
divl
mov
divl
cmp
mov
jns
jne
mov
repz
cmp
xchg
push
mov
idivl
push
int
imul
out
mov
sbb
in
es
jmp
adc
add
popf
mov
pop
jns
fdiv
fisttpl
movsb
lods
push
mov
xor
and
js
imulb
rcrl
movsb
push
aaa
sbb
push
cmpsb
jno
div
icebp
ja
imull
nop
push
push
cmp
in
push
sub
lret
mov
pop
xchg
movsb
adc
pop
sbb
sahf
lods
dec
push
in
sub
fadds
repnz
movsb
or
mov
rorb
adc
jecxz
je
add
lret
in
fcoml
mov
lcall
popl
sub
movsb
das
inc
push
jbe
push
pop
mov
inc
push
leave
sbb
int
mov
sub
xor
push
cmp
ljmp
cld
cmp
mov
aad
push
sbb
xchg
jne
or
pop
jns
mov
push
js
mov
clc
ja
fwait
js
cmp
jp
lret
sbb
clc
out
sub
push
jbe
jg
jle
xchg
sub
lock
scas
cmp
xor
and
cld
cli
aas
jg
pop
mov
pushf
insb
mov
pop
inc
inc
push
sub
push
fdivl
lock
mov
insl
out
xlat
mov
pop
dec
jns
push
mov
das
adc
leave
jle
movsb
arpl
cmc
outsb
sub
push
dec
xor
in
arpl
dec
aaa
test
or
pop
jecxz
and
je
ja
cld
movsb
fs
pop
push
in
and
stos
or
repz
mov
lret
push
scas
xor
into
adc
pop
lret
fsts
pop
lcall
dec
cltd
add
mov
sub
xchg
and
mulb
or
movsb
ja
jbe
std
pop
adc
xchg
shlb
mov
movsb
and
cmp
jp
mov
aas
outsl
mov
mov
fiadds
mov
or
push
dec
cwtl
clc
xchg
adc
call
jle
das
outsl
enter
lret
test
sti
mov
cmp
aaa
xchg
nop
pop
or
dec
call
dec
dec
in
mov
or
mov
cmpl
cmpl
xchg
sub
mov
push
fcmovb
mov
jp
pop
arpl
mov
hlt
lds
sbb
jne
dec
jns
pop
jecxz
scas
mov
adc
adc
fistl
in
add
xchg
pop
js
mov
je
ficompl
mov
add
lret
cmpsb
mov
push
mov
repz
cmpsl
sbb
or
mov
sub
pop
adc
inc
ja
in
adc
dec
dec
outsb
jns
sbb
mov
or
pop
add
lds
roll
xor
scas
inc
mov
mov
mov
ret
out
lock
mov
dec
mov
outsb
push
xchg
jmp
pop
sub
sub
mov
test
adc
and
in
mov
pop
shrb
call
addr16
adc
add
add
push
mov
out
out
and
and
enter
mov
jns
jns
jg
cmp
push
mov
test
and
outsl
std
je
jns
testl
push
push
xchg
and
int
cmpsb
push
aaa
jg
test
enter
jne
pop
lret
pop
jns
or
and
mov
adc
jecxz
fistps
cmpsb
ret
dec
sub
sub
mov
mov
fildl
sbb
jecxz
mov
pushf
in
test
mov
cmpsb
pop
or
jp
sub
cmp
push
sbb
mov
scas
inc
mov
orl
mov
and
lds
call
js
stos
in
hlt
or
mov
iret
jne
mov
inc
sti
pusha
push
ss
stc
enter
aam
push
sub
jbe
add
pop
dec
xchg
and
test
xor
xchg
stc
das
movsb
jb
pushf
das
cmp
enter
loop
jp
and
andl
jecxz
in
ret
aad
clc
test
lea
jo
xchg
cmp
test
jbe
stc
push
jecxz
out
adc
mov
jns
pop
popf
or
mov
sarb
pushf
in
jno
or
out
add
inc
mov
push
repz
das
leave
sbb
add
adc
inc
dec
jg
mov
cmp
add
pop
sbb
dec
in
cmp
dec
mov
test
div
mov
shl
neg
leave
push
sbb
jne
call
xchg
and
ror
or
hlt
jae
stos
mov
add
ret
pop
cmp
mov
sbb
dec
je
mov
lahf
aaa
imul
pop
sahf
fucompp
cmp
ljmp
aam
or
movsl
xor
je
dec
stc
int
or
lret
test
aaa
jae
cmc
fbstp
test
dec
jp
push
cmp
pop
je
aam
mov
int3
mov
jecxz
es
repz
jecxz
pop
sti
sahf
mov
lret
mov
repnz
push
inc
sbb
sub
fnstcw
aam
push
lea
cmc
js
push
cld
test
inc
lods
push
xchg
test
push
mov
lods
fistpl
lcall
cmp
cltd
dec
aam
cmp
dec
xchg
decl
idivl
sbb
jecxz
cli
xchg
jg
mov
sarb
and
jbe
stos
mov
aas
xor
ja
jae
clc
push
cli
mov
adc
and
adc
cltd
in
push
imul
out
dec
mov
cmpsl
insb
shrb
mov
pop
xchg
decb
in
push
dec
xor
int3
sbb
mov
cmp
jnp
sub
dec
mov
nop
roll
in
push
pop
mov
sub
dec
insl
pop
pop
test
je
cltd
mov
popa
mov
clc
outsb
js
mov
pop
mov
xlat
pop
lock
les
aam
shlb
cmpsl
sbb
mov
inc
jge
sti
fistl
and
push
sbb
pop
add
aad
cmpsb
cmp
mov
cld
jb
hlt
lods
movsb
mov
xchg
repnz
mov
dec
iret
xchg
pop
ror
mov
xor
cltd
jmp
fsubr
insl
in
test
icebp
sbb
inc
mov
fildl
mov
cmp
mov
or
pop
mov
in
arpl
scas
mov
and
jae
xchg
js
lret
cmp
and
and
push
jne
scas
loop
fistpl
es
mov
inc
andl
push
xchg
mov
xchg
jecxz
lods
mov
test
cmp
xor
lods
bound
ss
fdivrs
mov
inc
outsl
or
cmc
clc
cmc
jmp
lret
aad
movsb
xchg
sub
fdivs
dec
jg
cmp
xchg
mov
leave
mov
jns
push
xor
cwtl
sti
enter
dec
dec
into
mov
out
mov
inc
test
push
mov
pop
add
jns
sti
push
jmp
cmp
xor
idivb
mov
inc
jns
push
mov
scas
adc
clc
push
pop
jecxz
das
and
outsb
lcall
cmpsb
daa
mov
push
mov
sub
mov
jno
out
fimull
mov
mov
xor
divb
push
mov
and
jmp
es
dec
and
out
movsl
xor
cmp
adc
push
push
mov
pop
mov
pop
lock
mov
pop
push
cs
or
jne
pop
rcll
data16
inc
mov
jae
cmc
and
dec
and
iret
ret
mov
aad
pop
pop
in
and
sub
in
in
lahf
in
cmp
shl
cmp
cwtl
icebp
ja
jecxz
or
test
das
cmp
or
jle
out
clc
mov
inc
je
sbb
lcall
rorb
mov
fwait
add
js
or
repz
pop
cltd
inc
outsb
popa
imul
jnp
sbb
or
dec
loopne
cmp
je
and
mov
bound
stc
test
sbb
addr16
or
ljmp
mov
shrb
repz
jl
cmp
fstpl
mov
xor
das
pop
insl
add
jg
ficomps
insl
arpl
cs
pop
neg
aam
sti
dec
cwtl
push
jmp
lcall
push
xchg
fidivl
add
es
mov
push
add
ds
and
add
sub
and
stos
sbb
sub
in
sbb
enter
xchg
mov
mov
and
or
and
jae
jns
mov
pop
pop
inc
enter
push
out
cltd
loope
lret
xchg
call
and
cmp
inc
xor
pop
cmpsb
scas
ret
dec
fs
push
push
xchg
lea
cmc
outsl
dec
ss
cld
call
leave
repnz
aam
daa
jl
xchg
imul
insb
mov
aad
rcrb
lahf
in
mov
inc
mov
mov
hlt
jb
test
out
stos
es
or
pusha
and
inc
jbe
mov
jno
jo
and
popw
adc
loopne
or
out
ja
lea
in
xchg
cmp
loopne
jmp
enter
adc
pop
mov
out
inc
pop
stos
cmp
push
add
imul
das
and
mov
addr16
mov
cwtl
xor
stos
jo
cmp
filds
jo
mov
ja
mov
cmc
outsb
cltd
out
fldt
lcall
leave
cli
add
push
pop
jp
enter
adc
mov
xchg
inc
in
int3
ljmp
ficoms
xchg
sar
setno
test
pop
xor
daa
das
repz
xchg
dec
stos
fcmove
lcall
mov
mov
int
jle
cmp
ror
mov
mov
outsl
stos
scas
es
mov
imul
das
dec
sbb
mov
jmp
and
mov
ljmp
push
jmp
aaa
sti
push
xchg
cli
arpl
out
push
bound
mov
cmp
xchg
lods
jmp
dec
fsts
xchg
cmp
mov
inc
es
aaa
adc
out
popf
aaa
and
and
jbe
cmp
sti
jp
enter
aam
and
cltd
fucomip
clc
push
aas
fsubl
sarb
test
scas
rcr
cmc
pop
jnp
fbstp
xchg
cli
movsb
dec
or
mov
or
sbb
adc
add
fwait
adc
xlat
imul
movsb
mov
shlb
js
jmp
or
imulb
mov
xlat
cmp
jp
cmp
xor
push
daa
sti
add
mov
jp
push
mov
inc
mov
jg
sti
lock
nop
pop
js
out
fnstenv
arpl
jmp
sub
lret
lock
cmpsl
fbstp
test
push
insb
int3
fdivrl
cld
fisubrl
jbe
mov
arpl
jns
repnz
sti
test
sbb
lods
adc
fdivrs
jle
lcall
ficompl
xor
and
mov
movsb
clc
jb
fwait
push
mov
stos
dec
xor
mov
loopne
jp
ds
out
dec
lret
cltd
and
sbb
cmp
cmpsb
jl
movsl
pop
sbbl
mov
and
dec
incl
mov
push
pop
nop
adc
movsb
dec
test
test
aad
in
roll
scas
stos
jne
sub
pop
cmc
subb
cltd
adc
mov
or
and
inc
inc
jg
shrl
lret
test
sub
idivl
xchg
mov
push
jp
sbb
adc
cwtl
stc
inc
sbb
inc
fsave
sub
insl
adc
or
sbb
stos
iret
cmp
lahf
inc
jecxz
mov
mov
or
dec
imul
xlat
or
cmp
movsl
xorb
pop
sti
mov
mov
mov
ret
outsb
mov
pop
rol
sub
cmp
std
cld
pop
jle
mov
or
or
ret
movsb
fwait
xchg
mov
push
inc
mov
in
mov
jp
adc
cld
aam
jp
mov
and
cli
fcomps
mov
cli
dec
sub
lret
subb
cs
xor
sbb
jae
mov
xchg
fdiv
mov
cmpl
in
in
jp
je
mov
pop
mov
call
bound
or
xchg
push
daa
test
aam
pop
inc
aam
mov
lods
xchg
jp
adc
repz
mov
and
insl
dec
pop
push
inc
das
mov
mov
mov
dec
mov
or
repnz
jae
imul
push
and
xchg
lods
mov
out
and
jo
dec
push
cmpsb
lea
and
xor
push
and
push
sub
fmulp
pop
int3
out
das
cmpsb
faddl
adcl
inc
and
lret
cli
jp
add
pop
int3
and
mov
mov
pushf
lret
stos
inc
push
sub
mov
cmp
add
jae
testb
dec
xor
inc
aas
jbe
xchg
dec
jmp
mov
push
dec
pop
idivl
pop
sub
cmp
xchg
push
mov
std
sub
pop
mov
movsb
das
ret
in
data16
pop
call
insl
test
stos
fsubrs
jecxz
jmp
in
push
xchg
dec
dec
jbe
test
ljmp
leavew
push
mov
jmp
xchg
loopne
jmp
imul
or
out
mov
outsl
imul
pop
icebp
dec
dec
inc
xchg
mov
and
repnz
lock
mov
and
sahf
les
or
and
stc
mov
mov
xchg
mov
jns
xchg
in
out
dec
mov
dec
rorl
cmc
aam
mov
add
sub
mov
pop
push
sbb
movsl
fisttpl
sti
inc
or
cli
cmp
lods
cmp
cmp
mov
fs
arpl
pinsrw
sahf
dec
mov
or
add
adc
in
fisubrs
jp
pop
js
or
mov
add
mov
mov
mov
aad
inc
mov
call
mov
enter
jbe
imul
jmp
inc
push
mov
or
fsubrs
insb
pop
xor
jecxz
cmp
mov
mov
sbb
movsb
inc
lods
xchg
mov
outsb
shl
insb
sbb
mov
aaa
jns
fistl
mov
xlat
cmp
mov
movsb
in
push
outsb
inc
shll
popl
sbb
scas
and
xor
fnstenv
fstpt
shrl
cmp
jae
push
mov
or
xchg
mov
cmp
cmpsb
add
jno
clc
mov
and
mov
lock
mov
sub
pop
lods
add
repnz
ret
jecxz
sbb
push
or
sti
cli
push
jl
out
jmp
outsb
addb
lret
pop
or
fxsave
xchg
jp
lahf
jle
vmwrite
dec
add
incb
dec
lahf
lret
jge
mov
out
jae
outsl
mov
and
xchg
add
stos
pop
lods
leave
ljmp
sub
leave
fcmovnb
pop
fdivrp
outsb
adc
add
ret
out
cmp
jle
sub
pop
jle
dec
cmp
mov
lret
outsb
aam
pop
dec
cmc
add
mov
inc
sub
cwtl
cli
test
ret
xor
es
or
test
imul
out
outsb
pop
testl
js
enter
mov
adc
mov
aas
movsb
inc
jae
sbb
call
aas
outsl
pop
js
xchg
inc
gs
repz
mov
js
or
aad
enter
aam
inc
or
in
mov
xor
out
cmp
mov
sub
lea
push
movsb
fldenv
jmp
fs
dec
stc
xor
cltd
pushf
sbb
push
test
dec
mov
es
popl
pop
jns
stc
add
xlat
jae
loop
jno
in
mov
pop
mov
in
mov
fsub
fisttps
fwait
dec
mov
outsb
dec
adc
jns
stc
jbe
mov
test
and
cmp
jle
inc
push
pop
pop
pop
repnz
cmp
repnz
jns
cmpsl
cmp
das
stos
pop
test
out
jne
xor
test
addl
cmp
jb
ljmp
cmp
push
pop
lcall
mov
in
enter
rcll
fwait
in
call
jns
xchg
and
mov
sbb
cmp
in
xchg
movsb
jmp
or
mov
lahf
mov
fdivs
pop
jb
scas
mov
inc
adc
into
lods
mov
je
mov
xor
mov
xor
movsb
add
in
out
xchg
movsl
or
in
arpl
or
int
fidivrs
js
ds
jecxz
xor
lea
jns
decb
mov
add
addl
sub
aam
and
cmp
hlt
int3
jnp
in
xchg
in
cld
lock
out
and
adc
and
sub
ja
fnsave
outsl
pop
je
xchg
or
cmp
push
sbb
out
insb
lret
test
xchg
or
mov
sti
push
ss
jb
jns
cmp
lock
jne
cmc
mov
pop
jbe
lock
js
cltd
ljmp
movsl
iret
push
outsl
cs
or
stc
jns
or
imul
imul
fstpl
roll
jno
sti
insb
ljmp
lret
jno
jp
nop
js
lods
jbe
addr16
scas
pop
mov
inc
xchg
xor
cmp
inc
jns
imul
icebp
mov
push
dec
mov
inc
cltd
jne
repz
jo
cli
sbb
outsl
inc
mov
in
fisttps
sub
push
mov
negb
dec
paddsw
cmp
mov
push
jae
lock
lock
push
xchg
into
js
ja
sti
cli
jo
adc
ja
jb
hlt
add
mov
insl
mov
lock
clc
out
sti
xchg
mov
addr16
lret
adc
inc
ss
leave
push
push
jmp
mov
sbb
jns
in
insl
inc
jo
sub
jb
adc
arpl
inc
sbb
mov
xchg
push
xor
lods
adc
ljmp
xchg
or
dec
mull
push
lods
jbe
in
jmp
imul
test
sbb
mov
jae
push
mov
mov
cmp
stos
scas
leave
jp
sub
inc
lret
je
sub
jp
sbb
xor
repnz
cmc
punpckhwd
sbb
imul
adc
lods
mov
addr16
and
jp
xor
lock
jns
jmp
push
lret
dec
mov
js
cmp
ret
xchg
adc
outsb
jb
pop
cmp
idivl
cmp
cmpsl
xor
test
ja
call
inc
mov
fucomi
gs
jns
insl
mov
jmp
adc
vmwrite
fisttpl
dec
jp
repz
dec
mov
pop
mov
pop
stc
and
sti
inc
xor
pusha
sub
mov
jo
or
push
aaa
pop
icebp
push
sub
jno
loopne
out
dec
out
outsl
popw
lods
pop
cmp
cmc
sub
jns
pop
or
mov
stc
jae
xchg
mov
in
jecxz
insl
loope
popa
lds
insl
lahf
jne
jp
pop
and
mov
icebp
addr16
add
call
adc
add
lret
je
jbe
scas
pop
xlat
cwtl
xchg
cld
not
outsl
push
es
mov
cmp
ja
jg
pusha
sub
push
cli
lahf
or
push
inc
mov
inc
cmp
aaa
jns
lret
popf
scas
sti
ljmp
jne
in
push
jge
jp
arpl
aaa
jp
rorl
mov
outsl
stc
jno
cli
jecxz,pt
xlat
jbe
hlt
divl
mov
lret
mov
xchg
xor
push
lods
lock
mov
lods
mov
in
jp
jae
jbe
lret
fistl
push
insl
jp
adc
lret
leave
and
ret
iret
ja
xchg
out
fiaddl
out
mov
pop
outsl
sti
nop
mov
stos
ja
xor
insb
dec
jmp
and
lret
push
ljmp
cmc
lret
xor
stos
mov
mov
insl
mov
imull
jne
out
cli
jae
push
sbb
in
pop
jnp
push
scas
sti
ljmp
sti
ljmp
in
clc
insl
mov
mov
js
jp
mov
and
sti
ret
ss
pusha
sbb
xor
push
fildl
push
jns
shl
push
pop
repz
mov
call
sbb
cs
xchg
cli
mov
stos
fsubr
adc
repnz
mov
jne
sbb
or
lahf
sahf
ss
and
repz
jp
repz
insl
jp
cmp
jp
adc
shlb
out
stos
movsl
in
push
jbe
push
mov
pop
pop
cli
lahf
jns
mov
test
mov
in
outsb
mov
cmp
sti
out
sub
test
lods
stc
insl
jns
cltd
or
ja
mov
pop
jp
stc
pusha
dec
push
outsb
dec
rcr
insb
call
jp
and
xor
lcall
lret
cmp
pop
cmp
lock
jp
popf
imul
push
mov
pusha
test
popa
pop
cmp
push
and
clc
test
mov
mov
lods
mov
push
in
popa
jae
sti
jns
jecxz
lcall
jae
pop
xor
in
sti
sti
dec
loop
dec
icebp
mov
repz
je
mov
jne
movsb
inc
jns
xchg
mov
insl
pop
ja
jp
add
out
jns
sti
add
mov
jmp
dec
pop
jp
dec
std
stos
push
cld
jp
scas
mov
cmc
pop
rsm
jno
push
mov
jb
adc
ret
jecxz
xor
lock
jns
adc
repz
je
jb
insl
repz
sti
mov
sti
js
push
sbb
pop
mov
aam
dec
stc
lock
repnz
js
sti
push
addr16
mov
xchg
add
imul
xchg
mov
out
pop
pop
jle
enter
sub
cmpsb
mov
mov
pop
je
jns
sti
mov
push
js
mov
sarl
mov
pop
xchg
lcall
mov
imul
mov
jno
mov
jp
and
loop
mov
imul
in
in
hlt
xor
stc
in
mov
nop
dec
repz
daa
fdivl
ret
sti
mov
stc
push
dec
xchg
cli
jb
repz
dec
pop
jp
cmp
dec
imul
lcall
cwtl
cmpsl
jmp
scas
pop
jns
outsb
mov
cltd
imul
data16
sti
or
mov
mov
jns
mov
in
mov
data16
das
mov
data16
jo
jp
repz
xor
mov
jp
mov
imul
jns
cs
xchg
repz
cmpsl
ss
cmp
pop
pusha
sbb
ja
jp
repz
data16
sti
mov
lcall
xor
jp
nop
xchg
int3
push
dec
sti
push
fs
mov
dec
xchg
imul
jo
jbe
mov
sti
out
mov
adc
in
test
pop
insl
push
dec
inc
push
cmpsb
mov
leave
push
jne
mov
fwait
inc
or
imul
push
cs
sub
insb
push
sub
fcoms
push
mov
imul
mov
mov
pop
adc
mov
pop
push
mov
mov
pop
je
xor
jmp
jp
push
in
push
out
dec
jns
sbb
jp
and
clc
pop
pop
mov
mov
imul
into
stc
jo
push
mov
push
push
int3
call
pop
jns
pusha
sbb
mov
jo
js
pusha
repz
mov
stc
scas
mov
fistpl
adc
dec
movsb
xchg
lcall
cltd
sub
addr16
cs
jbe
test
mov
out
push
fldt
repz
insl
jecxz
daa
jmp
or
out
push
jne
lock
push
sbb
in
push
scas
add
mov
sbb
insb
xor
xor
sti
imul
mov
xchg
jbe
stos
push
mov
cli
icebp
push
adc
pop
jb
mov
jbe
xchg
mov
pop
sti
hlt
out
mov
lock
clc
xchg
and
divb
push
mov
movsb
mov
sbb
push
sti
or
pop
repz
lret
outsb
jae
stc
sbb
jo
adc
mov
insl
mov
pop
cmp
repnz
fs
lret
dec
shll
lcall
mov
insl
pop
xor
sbb
mov
call
faddl
mov
or
call
dec
enter
fisttpl
lret
mov
stos
dec
sub
pop
mov
sbb
sbb
dec
push
jbe
cmp
add
jnp
cmp
shll
xor
cmp
mov
sbb
push
push
mov
fidivl
sub
aaa
mov
leave
stc
mov
jecxz
cli
sbb
mov
fldcw
hlt
scas
pop
pushf
ljmp
in
jnp
test
outsb
lods
bound
outsb
jne
fdivr
nop
xchg
ljmp
sbbb
call
jo
shlb
push
lret
jb
imul
int3
stc
stos
insl
gs
in
xor
lcall
je
cmp
fs
sub
out
movsb
inc
or
sub
push
fcmovnu
push
push
ja
jle
jmp
mov
movsl
sti
out
jp
cmc
push
out
sti
cmp
into
les
call
mov
pop
mov
sarl
mov
xor
jl
push
mov
lea
inc
jle
lahf
pop
dec
repz
jbe
sti
insl
imull
sbb
cli
push
sti
mov
lods
call
sub
pop
jmp
jnp
xor
xchg
insb
push
lock
jns
or
jnp
clc
stc
mov
adc
mov
jbe
inc
adc
push
sti
adc
hlt
mov
pop
aam
js
mov
ja
inc
insl
xlat
imul
sbb
mov
imul
ljmp
jecxz
mov
push
jbe
sub
pop
fdiv
lret
test
adc
jge
add
push
in
imul
sti
jo
mov
and
in
jae
dec
adc
pop
insb
mov
aaa
xlat
icebp
jns
push
and
sub
cwtl
lcall
ss
lcall
sti
jmp
imul
stos
std
dec
ja
idiv
sbb
insb
arpl
pushf
mov
push
enter
jmp
push
xchg
mov
mov
test
mov
andl
mov
sub
jno
ret
stos
push
sti
mov
out
addr16
gs
or
xchg
mov
sti
mov
int
xchg
pop
mov
lock
xchg
lret
les
bnd
cltd
cmp
idiv
mov
cmp
mov
jae
fdivrl
stos
sbb
adc
jecxz
addr16
repz
pop
mov
dec
xlat
and
xor
jo
xor
mov
xchg
xchg
enter
data16
mov
mov
in
andb
repz
lods
sbb
imul
in
ror
lcall
push
int3
stos
test
jnp
repz
in
in
mov
outsl
popa
jns
lret
sti
ja,pn
in
repz
jno
pop
adc
jp
ret
iret
stos
pop
jnp
out
test
jns
push
aam
or
arpl
jno
int3
lcall
repz
jbe
cli
icebp
insb
sahf
pop
or
outsb
aad
add
stc
out
jns
push
fwait
jle
jnp
cli
or
out
mov
jbe
in
mov
jns
aad
sti
je
dec
mov
adc
outsb
neg
test
hlt
sbb
cltd
pop
jb
div
dec
lock
xchg
jmp
jns
or
xor
popa
and
ss
dec
push
in
jle
das
push
insl
push
aaa
pop
fisubrl
hlt
mov
push
dec
lret
ret
cs
add
jp
repz
push
jp
repz
mov
or
cli
out
addr16
or
push
jo
mov
dec
xchg
jp
std
mov
ja
dec
hlt
inc
shrl
out
jp
and
sti
jnp
lock
repnz
and
xor
xor
xor
or
mov
js
cmpl
mov
div
push
sahf
pop
fcoms
push
insb
mov
out
xchg
ljmp
xchg
sub
pop
mov
xor
jno
mov
imul
jbe
outsl
in
pop
imul
add
pop
ja
mov
in
fcomi
sbb
jmp
ja
enter
fdivp
sti
insl
mov
or
inc
repz
sti
dec
push
vmwrite
js
adc
pop
sbb
xor
imulb
in
insb
push
imul
xchg
call
idiv
mov
or
int3
nop
push
jb
idivb
out
mov
cmc
pop
outsb
push
cmp
mov
rcll
mov
popf
pop
outsl
push
cmp
inc
lcall
clc
cmpsl
dec
mov
loopne
jb
rcll
lret
jb
repz
push
stc
sbb
repnz
mov
xor
push
cmp
mov
fwait
daa
cli
mov
mov
lret
mov
insb
push
add
jp
out
das
mov
dec
sti
sub
ja
mov
lret
imul
mov
mov
div
out
or
rep
jb
sahf
or
adc
pop
push
sub
jb
adc
out
or
adc
mov
mov
insl
adc
iret
lock
mov
test
cltd
inc
push
cmp
test
dec
fisubl
mov
les
ds
iret
js
dec
jp
mov
mov
add
lods
scas
pop
popa
mov
neg
cmp
mov
push
add
mov
in
punpckhdq
negb
cmp
cmc
imul
mov
push
cmp
idiv
or
je
mov
repz
push
outsb
leave
aam
sti
cmp
push
idiv
mov
sbb
mov
xchg
cli
fpatan
mov
mov
mov
lods
lret
sti
or
cmp
adc
push
sti
imul
shl
pushf
shlb
sti
cli
mov
dec
mov
lahf
lock
jns
mov
imul
test
mov
popa
out
sti
stos
mov
rorl
insl
sub
in
repz
movups
pop
sti
in
jbe
jns
adcl
pop
jns
mov
jp
repz
sub
je
inc
pop
push
fs
sti
sbb
push
sbb
push
mov
jp
mov
mov
pop
jns
aad
mov
outsl
jno
jg
in
out
popa
lret
scas
sub
push
cmp
sbb
xchg
push
outsl
imul
add
and
repz
push
mov
sti
test
cmp
popa
lcall
lret
imul
stc
lcall
lret
mov
mov
mov
mov
stos
add
pushl
mov
inc
adc
cmp
sub
dec
pop
jmp
mov
inc
push
push
cmp
jl
outsl
mov
cmp
lock
xchg
je
movb
in
cli
sahf
mov
insl
jne
out
add
fsub
sbb
sub
gs
mov
jns
sbb
addr16
jne
pop
outsl
std
mov
mov
imul
and
jp
dec
jb
repz
mov
test
cli
inc
pop
jns
jecxz
jns
jnp
lods
int3
je
push
movsl
sbb
scas
lret
popf
fincstp
lcall
sbb
jmp
jbe
lahf
mov
cmpsb
push
push
movsb
push
imull
sti
leave
iret
js
leave
fmuls
fwait
jno
mull
lock
inc
jnp
push
xchg
js
or
pop
fs
iret
je
jp
repz
ficomps
jb
jbe
repz
xor
push
js
mov
xchg
fidivs
jns
fnstcw
in
sti
sub
pop
push
jne
cmpsl
in
push
pop
pcmpeqw
lock
fwait
sub
add
mov
pop
jne
cli
or
in
enter
jns
jl
xor
stos
gs
stos
in
std
push
lock
loop
xchg
notl
popa
push
xor
pop
je
ret
add
hlt
jns
cltd
je
xchg
lock
and
jmp
jp
ja
mov
stc
lret
ret
mov
push
xchg
aaa
loop
imul
mov
out
jns
pop
mov
fistpll
sahf
mov
js
sti
fstpl
ficoml
jb
popa
divb
ror
dec
adc
jbe
icebp
mov
adc
xchg
call
sbb
ja
push
and
cmc
push
fdivrs
mov
jo
push
outsl
imul
scas
cli
xorl
hlt
stc
jne
jmp
mov
outsb
mov
or
jae
xchg
jo
icebp
lock
mov
sbb
js
adc
sub
pop
insb
push
out
imul
repz
cmc
cli
pop
push
pushf
fdivs
cmc
jns
sti
pop
inc
sbb
push
sti
sbb
jp
lods
xorl
lret
xor
lock
repz
adc
js
mov
lock
sbb
stos
ja
sti
pop
out
cmpsl
adc
jne
icebp
clc
inc
in
stc
jno
insl
dec
jecxz
lret
inc
jnp
cli
js
push
push
ja
cmc
call
xchg
cwtl
iret
idivl
ja
repz
or
ja
loope
xor
sub
fsubl
cmp
mov
push
cmp
push
dec
or
jne
loopne
pop
jnp
adc
icebp
or
or
mov
jne,pn
jg
push
push
mov
ja
push
jns
push
or
out
and
idivb
sti
test
imul
imul
dec
fidivs
sti
cld
jns
cli
stos
jb
and
out
jnp
out
addr16
adc
aaa
jns
div
push
jp
ljmp
popa
js
lret
fildll
jno
adc
xor
stos
out
sti
jns
push
aaa
outsl
jp
neg
cltd
lock
pop
dec
jae
dec
dec
mov
mov
imul
dec
out
push
sub
pop
jp
fxch
jns
imul
pop
mov
xchg
push
xchg
clc
pop
mov
sti
jns
push
xor
repz
mov
xchg
lret
push
jne
push
sub
je
lods
jae
lea
cmc
push
sbb
or
xchg
mov
push
cmc
push
fidivrl
enter
pop
inc
or
mov
inc
add
inc
xchg
mov
jae
add
push
add
int
cmc
cs
cmp
xchg
add
popa
enter
mov
pop
push
mov
ja
mov
mov
jb
cmpsl
or
in
cs
mov
sub
outsl
push
push
outsb
scas
xchg
cmpsl
into
jns
push
cmovb
jnp
mov
adc
and
jae
fs
adc
pop
jbe
js
mov
lock
pop
addr16
lret
mov
mov
call
imul
rcrb
dec
or
cmc
jp
jmp
jecxz
sbb
push
or
in
stc
jp
push
mov
std
stos
pop
ror
test
cli
imul
aaa
push
sub
jno
xchg
mov
jns
push
jae
xchg
mov
mov
jae
xchg
or
test
jne
aaa
sub
mov
jns
xchg
pushf
fldt
sti
jp
ret
sbb
jmp
jns
aaa
and
clc
leave
dec
xor
int3
aad
dec
lea
ds
jbe
lcall
shlb
inc
into
jns
imul
into
loop
push
leave
jg
sti
adc
mov
xchg
int3
fsubp
aas
cwtl
popf
and
je
jl
rcll
mov
sbb
adc
jno
lds
lods
xchg
shrl
push
in
sti
mov
lock
sub
pop
jnp
push
cmp
sub
test
cmc
mov
sub
addr16
out
pusha
pop
insb
repz
mov
dec
fbstp
idivb
cli
push
insl
pushw
insl
notb
pop
xor
jg
sti
out
xchg
cli
push
outsl
push
js
cmpsl
fwait
sub
sahf
xor
push
jno
dec
cmp
ja
fsubl
jo
sti
mov
inc
inc
jecxz
out
xchg
mov
imul
bound
inc
sti
sti
mov
xchg
xchg
mov
inc
cmp
sub
aaa
leave
popa
push
fmull
inc
lret
sbb
ja
push
xchg
jae
jge
mov
fs
sbb
sti
lret
pop
je
cld
add
jl
sbb
cmp
bnd
cmpsl
jbe
paddsb
outsb
mov
jg
mov
mov
mov
pop
mov
test
insb
pop
dec
outsl
fldcw
jo
icebp
push
arpl
push
sbb
pcmpeqw
arpl
hlt
push
jns
mov
sbb
jbe
dec
mov
sar
mov
cmpsl
lock
ja
push
jne
lods
jl
in
push
xlat
jns
insb
idiv
ss
push
in
ja
insb
push
pop
jl
xor
xor
pop
jbe
fnstenv
sti
jno
push
adc
mov
xchg
jl
dec
subb
call
ja
in
pop
jp
fdivr
jnp
sti
dec
sub
jns
and
test
in
mov
jecxz
mov
pushf
in
clc
jbe
xchg
js
and
repz
lds
or
arpl
mov
rorl
mov
cmpsl
add
sti
cmp
mov
mov
sti
cli
stos
xor
stos
sti
or
outsl
mov
sti
xchg
push
outsb
fs
imul
mov
jmp
out
xchg
jbe
mov
imul
das
sbb
scas
pushf
jne
fbld
jmp
jge
outsl
jae
mov
outsb
pushf
pop
xchg
pushf
repnz
jp
jnp
lret
jb
xchg
mov
sub
mov
imul
data16
dec
fldt
testb
insb
jp
in
test
dec
add
stos
cmp
mov
push
mov
jge
jnp
mov
imul
xor
lods
imul
jne
scas
jp
jns
jbe
xchg
sti
mov
outsl
idivb
mov
inc
jne
jo
out
mov
cmc
xchg
push
sub
popa
pop
mov
add
pop
pushl
cld
in
xchg
xchg
pop
popf
xchg
test
clc
push
and
inc
bound
pop
push
inc
mov
pop
lcall
shrl
cmp
cmp
and
in
imul
dec
mov
inc
jg
xor
daa
bound
ret
mov
repnz
xchg
mov
xor
lock
popa
repz
dec
jg
sbbb
mov
inc
xor
cmc
sbb
mov
lret
clc
mov
out
addr16
sub
insl
mov
lods
popa
lret
fwait
stos
mov
cmp
pop
xor
xlat
dec
cmp
lods
dec
out
test
push
lea
lock
sti
cli
mov
sahf
adc
nop
jnp
push
xchg
sub
scas
fsubs
out
sub
mov
lret
lcall
test
lcall
imul
insb
mov
jp
dec
dec
scas
jp
cs
mov
int3
pop
dec
mov
push
leave
cmp
fs
push
lods
pop
cmpb
pxor
clc
lock
ret
hlt
aaa
notl
add
lock
xchg
add
out
jae
inc
icebp
cltd
mov
pop
bound
pop
lahf
mov
cli
jb
push
pop
jnp
sbb
or
mov
stos
cmp
scas
push
stos
imull
sub
pop
and
mov
sti
in
lcall
push
lcall
repz
stos
push
cmp
inc
bnd
rcll
lods
imul
push
sub
jp
pusha
fcoml
jne
push
lret
imul
mov
jno
xchg
sbb
mov
ss
jp
pop
push
out
mov
stc
pop
push
lcall
pusha
add
mov
xor
das
mov
push
aaa
lods
ja
rclb
adc
mov
popa
repnz
push
sub
xor
push
adc
pop
lret
jae
pop
xchg
ja
cmp
mov
lods
lods
adc
mov
mov
data16
mov
pop
ret
ja
mov
add
call
insl
loope
repz
cmp
fidivl
in
jb
imul
cli
or
jo
out
mov
popa
dec
and
test
shrb
out
or
jb
mov
fs
push
out
mov
outsb
repz
out
sti
sti
mov
xlat
mov
js
hlt
jmp
sti
ljmp
cltd
ficoml
cmpsb
out
fs
cmpsl
pop
sub
dec
loop
jb
stos
sbb
ss
or
dec
sbb
push
aaa
in
shrl
jp
repz
inc
jae
jmp
xchg
divl
js
iret
sbb
pop
push
ja
pushf
mov
in
pop
push
lcall
inc
adc
push
outsb
xor
mov
mov
sbb
sbb
cmp
pop
mov
pop
lret
pop
stos
hlt
in
xor
mov
mov
cmp
mov
jp
repz
dec
es
mov
xor
shrl
inc
xchg
repz
sub
cli
dec
jecxz
ss
popa
mov
jb
repz
mov
mov
cmp
lcall
dec
dec
mov
cmp
adc
mov
sti
cli
stos
push
sti
mov
stc
sub
fnstenv
js
fisttpl
ja
in
clc
call
rolb
dec
les
icebp
jp
outsb
repz
insl
sti
mov
loop
push
leave
push
mov
js
inc
adc
jbe
jbe
popa
mov
mov
in
pop
xchg
lcall
push
push
mov
outsb
push
lcall
fisttps
push
cmp
mov
lret
imul
out
sti
je
jmp
mov
sub
insl
stos
fidivs
inc
mov
sti
mov
cs
mov
adc
jbe
mov
pop
xchg
ficompl
jns
cmp
sub
cmp
insl
push
lret
test
pushf
popf
mov
stc
testl
int
clc
popa
stos
fsubrs
gs
pop
cmp
lock
dec
loope,pn
mov
pop
ds
sub
mov
mov
mov
iret
insl
dec
push
sub
mov
cmp
xor
or
add
addr16
in
or
rcll
mov
out
sti
cmp
cmc
mov
gs
js
pop
xchg
mov
in
pop
cwtl
jb
arpl
add
mov
inc
mov
insl
jp
mov
sarl
xor
outsb
in
adc
lea
mov
or
imul
lcall
sub
cmc
dec
mov
jns
cltd
sub
stc
stc
sahf
subl
add
loopne
ss
imull
stos
xchg
into
je
stos
xor
jbe
mov
fucomi
test
jno
push
push
xlat
aas
jns
inc
jne
sub
popa
stos
xchg
ss
popa
mov
jo
arpl
cwtl
cli
ja
sub
fsubr
in
iret
je
mov
stos
imul
jne
or
fisubs
inc
dec
push
gs
lods
insl
hlt
cmc
sbbl
cltd
outsb
cmpsl
outsb
out
fucomi
cmp
push
repnz
mov
jnp
shr
or
shr
hlt
mov
cmp
cli
js
aad
jp
ja
xchg
lcall
push
push
mov
sbb
inc
lret
jb,pt
push
stos
pop
pop
cmp
repz
in
js
push
or
xchg
sub
aaa
mov
xchg
sti
mov
cmp
adc
scas
jno
xchg
popf
iret
in
push
lea
dec
leave
push
mov
mov
mov
scas
outsb
pop
xchg
fidivl
push
cmp
mov
stc
cmp
mov
icebp
imul
push
mov
push
xlat
hlt
stos
jmp
out
cmpsl
in
jmp
dec
dec
xor
stos
pop
sub
ja
aam
xor
add
push
out
mov
fldln2
sbb
mov
mov
jns
ja
inc
cmpl
stc
test
inc
jp
inc
dec
stc
jbe
sub
mov
xchg
mov
cwtl
not
cmc
jns
mov
push
jmp
inc
cmp
rcll
dec
xor
inc
or
negl
lcall
ss
popf
mov
or
pop
mov
mov
jmp
lcall
adc
push
mov
mov
out
push
out
mov
jae
outsl
rorb
mov
repz
sti
js
bound
ljmp
icebp
cmpsb
xchg
cmp
mov
mov
lret
repnz
aad
stc
cli
lret
adc
xchg
in
jnp
push
clc
sti
mov
mov
xchg
jbe
stos
sub
pop
or
lcall
push
je
or
out
out
mov
mov
jns
pop
push
sahf
or
pop
mull
sub
push
mov
push
mov
ret
sub
js
enter
jmp
jnp
in
int
das
in
xor
jne
gs
insl
inc
jge
jne
dec
ja
mov
jmp
pop
nop
mov
in
ja
imull
xchg
inc
sbb
loop
mov
adc
fs
or
aas
ja
cs
stos
xchg
jb
xchg
jns
in
pop
cmc
sti
ja
lcall
xchg
ret
gs
dec
pop
movsl
ret
xor
xchg
ret
jecxz
or
loop
scas
imul
fwait
mov
daa
add
or
sahf
daa
mov
sub
jp
data16
push
clc
cmpsb
add
lods
xor
int3
stos
adc
call
jae
xchg
jne
add
sbb
mov
mov
sbb
mov
sub
mov
fmulp
push
adc
sbb
in
dec
clc
inc
out
dec
arpl
push
cmp
xor
mov
mov
xchg
mov
cld
lock
jge
or
stos
add
ret
xor
inc
or
mov
sbb
sbb
cmc
mov
fadds
or
testl
mov
outsb
sti
jae
inc
cmc
arpl
jnp
inc
sbb
dec
fs
xor
and
xorb
je
or
or
cmp
add
lods
mov
and
push
inc
jbe
pop
pop
mov
cmp
out
adc
ss
icebp
loop
sub
fcmovnb
or
add
arpl
xchg
popa
xchg
mov
rorb
pusha
xchg
test
mov
test
adc
scas
xchg
test
nop
xor
testl
imul
loop
jb
sub
lret
mov
xor
mov
leave
sti
push
mov
jne
dec
fistl
popa
idivl
jns
gs
out
dec
fs
ljmp
push
clc
cld
jno
jo
pushw
jb
push
pop
jb
mov
mov
imul
popa
in
sbb
fsts
sub
es
sub
fistl
dec
and
rol
or
jbe
mov
pop
aam
lcall
sbb
pop
mov
fcomps
stos
inc
pop
inc
clc
stos
inc
sti
adc
dec
shll
pop
roll
shrl
inc
jmp
mov
mov
mov
cmp
cmp
add
cmp
or
dec
mov
pop
lds
stos
addb
pop
rolb
pop
test
fisubrs
fnstenv
enter
outsb
fistpll
cmp
xor
xchg
subl
repz
outsb
dec
and
loop
push
xlat
sub
sbb
sbb
ljmp
aad
xor
push
mov
insl
ret
popa
jno
jns
imul
lahf
pop
outsb
std
lods
mov
dec
ja
push
jle
mov
pushf
mov
dec
stc
or
pop
in
icebp
cmpsl
imul
xchg
out
stos
push
repz
das
add
ret
jg
jns
sbb
push
sbb
or
ds
jbe
inc
aam
scas
fdivr
xor
imul
dec
dec
repnz
ss
cmp
push
cmc
mov
dec
pop
lods
cmp
insl
inc
cmp
dec
roll
or
mov
and
iret
add
push
jbe
inc
ret
mov
xchg
pushf
mov
out
mov
or
fwait
pop
jns
aaa
int3
fmul
pop
cmp
mov
or
iret
and
adc
push
out
xchg
jnp
xchg
mulb
lret
call
sti
daa
and
push
push
daa
loopne
cli
pop
movb
pop
inc
loop
insl
sahf
mov
xchg
and
mov
push
out
dec
addb
pusha
call
test
mov
pusha
mov
jmp
mov
mov
cmpsl
jns
pop
arpl
push
and
popa
outsl
fnstsw
xchg
test
das
aam
ds
cmpsb
addr16
in
inc
or
sbb
ficoms
add
out
inc
jmp
dec
jl
ljmp
jo
add
test
jb
out
jno
dec
add
push
orl
and
addl
and
dec
addr16
movl
dec
jae
jne
jb
outsb
je
insb
imul
add
iret
mov
rcl
sbb
mov
mov
dec
xor
sar
mov
jmp
call
add
push
popf
hlt
mov
mov
pushf
cmp
cmp
cmp
inc
movsl
cs
pop
jmp
in
repz
sbb
add
dec
xorb
or
cld
into
cli
and
inc
dec
shll
int
lock
dec
jae
push
inc
push
mov
in
andl
ret
lock
sub
adc
mov
jg
mov
rcrl
inc
js
or
cli
dec
ljmp
je
jl
out
dec
push
jl
sub
mov
sub
movsbw
pushf
not
mov
jmp
xchg
mov
inc
ja
pop
sbb
pop
sbb
add
add
sbb
cmp
nop
sbb
bts
cmpl
push
adc
push
and
shl
outsb
aas
out
popf
sbb
mov
push
jo
gs
sub
daa
ret
xchg
mov
nop
arpl
aaa
out
xor
rol
pop
fistps
mov
push
push
jns
fldcw
adc
cmp
sbb
lahf
inc
lds
popa
cltd
daa
out
push
lret
fs
js
jo
inc
out
out
out
dec
imul
sub
test
bswap
movb
movsbw
lahf
cwtl
lea
push
bswap
movsbw
lea
pusha
movl
pusha
mov
pushf
pushf
movb
pushl
ret
cmc
popf
mov
das
jne
test
stos
xlat
in
call
shr
ljmp
jge
mov
imul
aad
add
arpl
hlt
inc
push
sbb
sbb
xchg
nop
and
aad
or
jp
xchg
outsl
cmpsl
pusha
repz
push
add
psraw
cmc
in
xchg
jl
xorb
push
bnd
jns
add
mov
in
stc
ja
fstpl
scas
and
nop
es
pushf
test
enter
cwtl
and
dec
push
cs
add
stos
adc
inc
xor
dec
out
cld
lret
call
xchg
xor
insb
xchg
jo
pop
aam
inc
pop
mov
or
sub
std
mov
pusha
ficompl
xchg
mov
addl
arpl
stc
xchg
aas
mov
lods
aam
mov
scas
sbb
xchg
adc
test
int
sarb
mov
mov
inc
push
fisubl
sarl
jge
notl
ud0
call
inc
sti
inc
pop
leave
shld
mov
out
dec
push
jecxz
cmp
pushf
cmp
pusha
movw
pushf
lea
jge
jae
pusha
lea
jmp
lea
ja
pusha
imul
cmp
movb
jmp
jmp
adc
adc
ljmp
test
inc
jbe
inc
pop
dec
dec
into
push
fistpl
loope
in
nop
js
lret
mov
sub
sti
stos
imul
lret
mov
popa
cmp
and
jo
lcall
mov
fldl
lret
xchg
or
push
jle
jp
cld
pop
call
fcmove
rclb
push
insl
pushf
cs
mov
jg
mov
insb
jne
js
xchg
xor
fidivl
fs
dec
shrl
into
je
inc
into
nop
sbb
dec
push
cld
lock
ss
and
sahf
movsb
mov
inc
or
push
sub
inc
sysenter
mov
mov
jmp
cld
push
dec
fnstenv
test
jae
cmp
loop
pop
xchg
push
xchg
mov
ret
jb
or
inc
xor
push
push
pushf
mov
mov
mov
jle
idivb
push
xchg
data16
in
fsubs
sti
jns
sahf
imul
scas
xor
push
stc
dec
in
pop
cmc
push
out
dec
insb
jle
push
lret
push
inc
push
aaa
jno
pop
cmpl
mov
in
sub
adc
inc
mov
or
pop
rol
jnp
addr16
cld
jb
dec
xchg
mov
dec
push
pop
shrb
push
or
loopne
sub
sbb
sbb
fstpt
fwait
xchg
mov
dec
pop
mov
idivl
enter
mov
jne
jp
repz
adc
mov
outsl
inc
jl
jno
jno
push
jmp
ret
popf
daa
test
out
dec
insb
dec
lods
sub
and
movl
pushf
call
mov
jne
fstpt
scas
nop
mov
stos
xchg
scas
mov
xchg
pop
adc
inc
ror
pop
or
sbb
je
pusha
outsb
les
imul
push
adc
in
xor
inc
jnp
pop
pop
mov
adc
shl
shlb
cltd
sahf
lods
in
sub
mov
mov
xchg
into
in
int
imul
xor
mov
int3
dec
in
loopne
aam
hlt
out
dec
insl
ret
pusha
push
inc
test
clc
neg
pusha
cmp
call
dec
sbb
sub
xor
dec
xchg
outsb
jo,pn
jb
cli
test
dec
rcrb
push
scas
enter
mov
cmp
or
dec
mov
xchg
sti
jae
add
cmpxchg
and
xchg
mov
push
mov
mov
fidivs
add
aaa
cmpsb
mov
cmp
or
arpl
jnp
das
sub
stos
adc
mov
xchg
clc
rorl
xchg
sti
push
fdivrl
test
sbb
fdivrs
adcb
xor
mov
dec
call
orb
xor
adc
test
mov
xor
or
push
mov
inc
imul
inc
push
push
out
cmp
sbb
cmp
fstl
mov
push
jnp
loope
add
pop
jnp
add
mov
jnp
xchg
or
popl
jb
sbb
jae
test
cmp
push
in
jae
pop
adc
ret
add
dec
cmp
iret
sbb
jmp
lods
dec
mov
jnp
lods
push
in
loop
sub
mov
xor
adc
pop
dec
int
cmp
and
mov
das
imul
xchg
cmp
xchg
pop
aad
sbb
stos
xor
clc
pcmpeqd
mov
jnp
cli
inc
popa
ret
insl
rcr
or
sti
jo
mov
mov
sbb
stc
fcoms
cmp
jbe
imul
scas
mov
ss
enter
not
jnp
inc
mov
hlt
lret
cli
mov
jns
pusha
jnp
sbb
push
sub
daa
in
mov
adc
mov
jnp
mov
sbb
into
push
sbb
call
sbb
insb
addl
pusha
jnp
fldcw
sub
push
testl
jb
std
or
xchg
add
ja
inc
mov
popf
aam
lea
enter
sub
cmpb
or
cmp
cmp
inc
mov
outsb
ret
inc
jae
jnp
shlb
or
out
pushl
mov
jnp
sbb
fnstcw
jnp
pop
xchg
jmp
cmp
push
enter
sbbl
fdivp
in
xor
imul
pop
push
lret
stos
cmp
pop
in
pop
and
mov
popa
mov
subl
out
test
jbe
fcoml
ja
pop
sub
pop
jnp
mov
cwtl
fs
inc
xchg
jnp
cmp
sbb
sbb
popf
stos
in
into
jnp
sub
sti
fdivs
dec
or
clc
mov
mov
cmp
dec
xchg
dec
pop
push
xchg
jge
repnz
pusha
cmp
fcoms
insl
jle
dec
out
sub
out
jnp
push
ret
shll
addl
add
pushf
xlat
add
xchg
movsl
jne
out
ds
cmp
enter
push
xchg
jbe
lock
pop
dec
xchg
clc
mov
jno
cmp
aas
leave
jnp
pusha
mov
jnp
fldcw
jbe
or
mov
push
jecxz
jmp
jnp
aas
jg
mov
sahf
xor
mov
and
jnp
mov
repz
sub
cmp
jnp
movl
adc
pop
jae
push
mov
hlt
arpl
xchg
dec
outsl
jmp
push
sti
pusha
mov
push
dec
xor
clc
mov
das
mov
add
sarl
jbe
jno
xor
imul
arpl
inc
inc
hlt
stos
lret
lods
icebp
aam
sti
push
jnp
into
dec
ss
cld
inc
jnp
sbb
mov
mov
out
mov
pop
add
lea
aam
test
jnp
xchg
xchg
and
shrb
adc
dec
clc
popf
jle
pop
insb
push
xchg
lods
or
jmp
adc
sbb
cld
dec
das
jno
dec
mov
jb
mov
fwait
jnp,pt
aas
cld
xor
or
xor
inc
sbb
xlat
xor
gs
das
fildll
aaa
jnp
call
sub
mov
imul
push
outsl
lods
repnz
aam
out
cli
scas
aaa
sti
push
test
popf
mov
xchg
pusha
mov
je
or
mov
jnp
inc
mov
push
jmp
and
dec
pushw
mov
push
test
aaa
jnp
mov
jl
sbb
sbb
lods
jns
add
sub
mov
outsl
mov
subl
pop
or
cmp
jle
dec
pop
adc
lret
leave
lock
xor
mov
outsl
out
sub
or
lds
and
push
push
inc
inc
imul
dec
fadds
adc
sbb
jg
mov
or
pop
jnp
push
rcl
inc
mov
lea
pop
int
jnp
insb
cmc
or
push
nopl
cmp
mov
imul
or
inc
jnp
push
jmp
sar
adc
dec
lea
push
sub
pop
fs
jnp
cmpsl
cmp
mov
or
aam
jae
and
lock
mov
shr
fiaddl
or
aas
jmp
cmp
pop
jnp
fdivrs
out
scas
test
mov
xlat
xchg
sub
arpl
sub
sbb
jnp
sub
rolb
ss
loopne
cmp
arpl
inc
sbb
mov
icebp
popf
out
dec
aas
jle
icebp
jno
outsl
sub
js
je
lahf
xor
jae
fwait
cmp
call
dec
dec
jno
popa
push
or
xchg
mov
js
pop
repz
mov
imul
pop
hlt
sub
arpl
gs
dec
into
lock
xchg
outsl
pop
in
add
jb
jno
lods
jbe
jnp
pop
mov
sbb
cld
push
push
inc
ss
js
jnp
cmp
jnp
mov
sub
xacquire
icebp
xor
lock
popa
sbb
test
mov
dec
int3
jnp
dec
out
shlb
in
inc
sub
bound
ljmp
push
jnp
mov
and
sbb
and
mov
pop
inc
push
imul
add
ja
adc
stc
mov
or
scas
xor
jnp
int3
jb
sbb
dec
je
jle
pop
mov
xor
mull
rcrb
jnp
xorb
dec
repz
push
cmp
loop
fdivrl
divb
lret
sbb
and
inc
cmp
lcall
je
ds
xchg
xchg
icebp
mov
and
addb
aad
out
lret
pop
push
pusha
lods
das
jnp
push
imul
hlt
pop
in
mov
xor
sub
mov
std
sbb
and
mov
mov
jnp
jmp
mov
lcall
push
mov
jae
dec
arpl
and
jnp
jecxz
rol
dec
mov
das
jnp
cmp
cltd
lret
sbb
cli
test
jno
cmpsl
movsl
and
jne
les
fbld
jbe
mov
rclb
lods
adc
test
pop
ja
mov
outsb
and
jnp
dec
xchg
mov
mov
jns
pop
insb
cmpsl
mov
inc
push
je
jo
shr
sub
jle
daa
cmp
pop
mov
inc
push
sub
cmpb
add
push
sub
jle
adc
mov
clc
dec
push
imul
mov
cmp
xchg
out
mulb
xchg
xchg
fidivrl
call
aad
push
mov
xor
sti
mov
arpl
div
add
aaa
mov
pop
pop
jbe
push
jecxz
pop
mov
cmpsb
notl
mov
jecxz
pop
ss
push
pop
jne
gs
jecxz
pop
mov
movsl
notl
mov
aad
lds
mov
add
push
jecxz
pop
mov
movsb
notl
in
jecxz
pop
xor
and
adc
add
jae
arpl
inc
pop
mov
mov
pop
repz
shl
ret
pop
xor
add
mov
push
jecxz
pop
mov
mov
pop
repnz
shl
ret
mov
add
mov
push
jecxz
pop
mov
mov
pop
icebp
mov
shl
rcrl
and
adc
pop
movzwl
lret
cmp
mov
aaa
pop
mov
in
repz
xchg
mov
add
mov
sub
pop
mov
bound
jbe
push
and
mov
aas
pop
scas
mov
insb
jecxz
push
sbb
jmp
mov
inc
pop
test
pop
adc
pop
pop
cmp
or
pop
pop
push
aad
xor
ret
xor
xor
mov
ficomps
mov
imul
jecxz
pop
call
bound
and
pop
mov
and
pop
bound
in
jns
push
pop
pop
mov
push
pop
bound
pop
out
mov
imul
pop
dec
cmpsl
mov
sbb
call
adc
mov
movsb
push
cmp
push
sbb
test
inc
push
faddl
test
fsubrl
mov
add
push
pop
int3
inc
int3
jmp
adc
mov
lds
jo
sbb
ss
jbe
xor
pop
dec
lahf
push
mov
push
add
jecxz
in
pop
outsl
sbb
cmp
insb
dec
pop
inc
adc
int3
mov
push
xchg
inc
inc
jg
xchg
in
lods
or
inc
hlt
inc
cmp
mov
xchg
adc
mov
mov
lds
push
push
inc
mov
xchg
add
popa
mov
xchg
mov
adc
fcoms
pop
sub
lock
inc
adc
cmc
ljmp
shl
aaa
mov
or
and
inc
in
xor
fwait
pop
aaa
jbe
mov
jns
jne
xchg
and
int
mov
in
movsb
and
push
cmpsl
rep
repz
cmc
out
inc
push
and
add
jb
jl
shl
jl
or
outsb
push
push
into
mov
fildl
push
jecxz
mov
jns
gs
pop
push
aad
loop
mov
xor
inc
mov
jp
roll
push
or
in
mov
add
ljmp
cmc
and
or
stc
fcmovb
out
mov
roll
inc
sarl
mov
sbb
es
push
ljmp
movsb
in
xchg
fiaddl
stos
inc
pop
sub
mov
jp
cwtl
ficoml
mov
sbb
dec
and
inc
mov
shll
push
xchg
push
imul
adc
push
ret
loopne
inc
test
cwtl
cmpsl
cmc
hlt
sbb
push
xor
jmp
ret
lret
or
inc
add
sub
lods
adc
sub
mov
fists
xor
mov
pop
in
xchg
in
and
cmpsb
je
aaa
sahf
inc
jb
les
jp
xor
cmp
notl
cmp
lahf
push
mov
fldl
fistl
pop
inc
push
cmp
jne
mulb
xchg
fnstcw
push
fdivl
in
add
pop
sbb
lahf
mov
mov
orb
bound
sahf
inc
jns
adc
cmp
dec
push
push
stos
out
xchg
data16
fcoml
rclb
cmp
and
pop
xchg
sbb
adc
movsl
fcmovbe
fistl
jg
or
xchg
lcall
dec
jno
movsb
and
xchg
jp
aaa
fcoml
pop
inc
push
fistps
pop
sti
lods
repz
dec
sti
mov
ja
scas
rep
sub
push
stos
xchg
lahf
ja
lock
xchg
push
jge
cmp
dec
jmp
clc
ret
xor
cmp
mov
mov
push
cmp
pop
xchg
aaa
nop
imul
sti
mov
shlb
sti
outsl
inc
out
stos
jns
cmpsl
jb
icebp
xor
dec
fisttps
in
imul
imul
stos
xchg
and
into
testl
fmul
or
pop
outsl
leave
jb
sbb
dec
leave
clc
cwtl
push
outsl
icebp
stos
repz
add
sub
in
sbb
hlt
xchg
dec
js
fs
lret
outsb
sti
pop
jecxz
cwtl
outsb
loopne
jb
ja
or
js
xchg
pop
stc
dec
mov
test
mov
pop
sub
lock
sahf
test
jmp
mov
loop
dec
jns
cmpsl
lock
sti
outsl
cmp
sub
mov
ja
imul
jae
call
js
ljmp
fwait
test
inc
mov
out
jmp
push
push
in
out
or
fsubs
xchg
mov
inc
insl
push
cmp
jns
daa
adc
js
pop
jo
jp
data16
jbe
jmp
ljmp
inc
bnd
out
ja
mov
ss
jbe
cwtl
out
push
loop
fbstp
scas
imul
ja
jno
fs
mov
jle
and
sub
push
popa
lret
pop
rcr
or
mov
inc
xor
scas
mov
lods
add
add
call
gs
dec
cmp
push
mov
cli
pop
sub
js
or
std
mov
mov
scas
je
adc
mov
mov
sub
dec
sbb
push
incl
mov
ds
out
aas
and
add
mov
xchg
arpl
cwtl
push
icebp
xlat
add
push
jl
mov
or
push
inc
in
jne
dec
jge
roll
mov
cmpsl
clc
pop
sbb
iret
mov
mov
add
pop
jnp
jbe
jge
lock
and
aas
lea
mov
push
pop
popf
push
adc
inc
jo
mov
js
sbb
cli
clc
imul
pushf
and
cmp
inc
jo
xor
adc
outsb
testl
iret
push
jmp
xlat
ss
fadds
sub
jp
insl
and
add
arpl
ja
mov
sub
mov
pop
inc
daa
and
mov
push
mov
adc
popa
dec
pop
dec
jl
xor
inc
jbe
sbb
or
outsl
imul
jbe
xchg
lcall
bound
out
jb
push
leave
imul
mov
xor
imul
push
js
out
shlb
xlat
imul
sbb
fdivl
pop
jmp
in
out
jl
dec
mov
mov
clc
mov
nop
divl
in
scas
out
insl
out
insb
int3
rorl
test
cmpsb
outsb
imul
movsl
decb
add
mov
in
jae
cmpsl
or
in
cmp
imul
mov
imul
sbb
outsb
mov
aam
lock
loope
ja
insl
xor
clc
add
mov
mov
add
mov
mov
enter
add
lret
mov
cmp
mov
popa
mov
sti
xor
xchg
push
int3
dec
sub
orb
xchg
cmp
sbb
jg
jnp
gs
movsl
xor
sub
fistps
fmull
sbb
lods
sbb
lahf
mov
jecxz
adc
pop
and
adc
jno
mov
pop
push
gs
add
fxch
lods
push
add
pushf
imul
pop
xor
mov
notl
std
push
or
insl
mov
sti
aam
repz
pusha
mov
pop
fcomps
notb
int3
dec
fldl
jge
lock
mov
mov
cmp
in
lret
outsb
jno
mov
inc
pop
insb
aas
mov
imul
jecxz
repnz
push
fwait
dec
jno
push
jmp
imul
xchg
pop
mov
sahf
inc
insl
movsb
rorb
or
shl
dec
cmc
mov
je
or
adc
dec
push
clc
jg
sbb
add
or
leave
mov
add
addr16
lcall
sbb
jg
pop
ds
fidivrs
sbb
and
pop
mov
xchg
mov
arpl
sbb
gs
pop
sbb
or
jo
imul
jb
dec
inc
enter
cmp
lock
ja
imul
ret
sbb
rcrb
jnp
jmp
imul
mov
jnp
jns
push
add
aas
inc
inc
adc
push
movsl
jle
movsb
add
in
dec
outsb
inc
dec
and
sub
fstpt
mov
mov
mov
pop
add
push
mov
add
fimull
mov
xlat
inc
mov
ljmp
add
sti
je
dec
fs
icebp
jmp
sub
gs
enter
jb
data16
cmp
cs
cmpsl
dec
aaa
imul
aas
leave
and
imul
outsb
dec
fnstenv
cmp
dec
stc
outsl
mov
pushf
xchg
cmp
ss
insb
dec
out
mov
lret
push
jp
mov
testl
shrl
mov
insl
jno
dec
mov
mov
mov
out
push
outsb
jp
mov
sbb
insl
sbb
sub
imull
ja
mov
mov
jmp
or
fildl
stc
xor
inc
lods
inc
pop
mov
jp
sti
push
jbe
xchg
and
jns
imul
fidivs
jno
pushw
popa
xor
btr
pop
inc
aas
or
jmp
xchg
iret
dec
jno
movsl
xor
and
xor
sub
push
mov
icebp
imul
sbb
lret
jae
insb
subl
pop
lock
dec
jns
imul
jno
fwait
je
pop
cmp
cmc
pop
sbb
lock
jne
pop
ja
imulb
pop
cmp
xchg
cmc
sbb
cmp
push
pop
cli
not
stos
jns
and
loop
mov
and
push
notl
pop
inc
mov
mov
out
pop
movsb
mov
sti
jns
test
hlt
pop
clc
mov
jg
push
jp
in
jecxz
pop
repnz
jae
mov
hlt
insl
xor
in
xor
stc
repz
ja
mov
not
mov
sub
or
add
fldt
pop
jno
sbb
cmp
inc
in
push
cmp
pop
mov
cli
notl
mov
imul
jecxz
mov
inc
jne
sbb
imul
jb
mov
icebp
testl
out
pop
jecxz
pop
dec
pop
sti
mov
ficompl
mov
jbe
cmp
mov
sti
data16
loop
repnz
jp
in
out
stc
mov
push
jp
in
insl
ret
dec
lea
push
sti
push
jbe
imul
leave
cli
hlt
addr16
aad
pop
ss
jbe
jne
jb
sub
subl
jo
out
outsl
adc
outsb
dec
insl
or
sbb
jmp
repz
inc
jns
js
jb
sub
subl
jae
out
jb
push
jno
fldt
cli
xchg
inc
outsl
dec
outsb
or
sub
xorl
jb
sub
subl
fisttpl
out
fistl
fisttpl
jb
sbb
cli
out
jo
inc
outsl
dec
outsb
or
sub
orl
dec
jns
jb
sub
subl
je
out
jae
push
jb
fldt
js
inc
jo
push
outsl
or
jmp
loope
cli
or
out
imul
shrl
dec
sub
and
adc
add
pop
cmp
pusha
mov
push
pop
divb
jne
inc
jp
mov
hlt
xor
hlt
aaa
xchg
mov
shl
sub
shlb
pop
clc
aas
dec
lock
insb
jecxz
js
ss
outsl
pop
mov
sbb
sbb
cmp
push
dec
aaa
push
pop
icebp
test
inc
jp
xor
mov
ja
cmc
fcompl
jp
clc
cmp
xor
fistps
xchg
jns
out
imul
push
int3
jns
ja
fcmovne
jp
cmp
jae
sti
cmp
sahf
cmp
dec
jb
mov
jle
mov
out
sti
dec
in
mov
xor
jae
pop
jbe
mov
imul
or
mov
clc
push
stos
fnstcw
jp
ja
xchg
xor
cmp
scas
sub
insl
arpl
js
stc
dec
jmp
cmp
jne
mov
repz
pop
xor
out
sbb
sub
sti
ja
push
xor
mov
pop
inc
loop
inc
mov
test
xchg
imul
cmp
pop
out
mov
jns
ja
int
cmc
pop
xor
sub
rorl
mov
push
pop
cmp
outsl
ficomps
cld
cmpsb
dec
in
es
mov
fwait
dec
cld
xchg
test
lret
or
cmp
std
and
lret
mov
leave
cld
stc
pop
add
jo
clc
test
addr16
mov
and
push
mov
mov
imul
mov
jns
adc
add
cmpsb
jo
ja
pop
insb
mov
std
pop
popa
xchg
jae
add
lret
push
imull
mov
push
cld
xor
jnp
dec
mov
daa
add
push
fs
xchg
iret
jnp
mov
in
jae
faddl
stc
imulb
push
or
in
or
push
mov
sub
jp
out
imull
sub
das
sti
sar
pop
les
or
call
std
loop
or
stc
or
clc
cmc
testl
shl
fwait
out
dec
lock
jecxz
or
mov
or
cmp
pop
stc
jns
sub
push
xor
arpl
xlat
sbbb
mov
or
popf
sub
stos
testl
sub
push
js
ror
or
jmp
jo
mov
xor
mov
mov
cmpsb
pop
mov
push
mov
jb
cmpsb
jno
cmp
loopne
mov
ret
jp
jbe
loop
fs
cmpl
jmp
adc
loopne
fs
adc
jp
jmp
stos
push
mov
jns
pop
imul
das
jb
adc
lods
jecxz
dec
cld
mov
scas
jmp
cwtl
adc
jbe
rep
jb
repnz
mov
dec
icebp
jo
imull
mov
cmpsl
mov
mov
adc
jnp
and
out
dec
cmpl
sbb
addr16
popf
insl
in
inc
cmp
movsb
mov
mov
jb
repnz
icebp
hlt
mov
sahf
lock
loopne
dec
mov
sti
mov
mov
inc
leave
xchg
mov
jb
cld
aam
cmp
cltd
into
insl
je
xor
or
sbb
mov
xor
mov
push
sti
jae
in
jb
je
jle
jno
icebp
mov
outsl
mov
adc
imul
push
xchg
imul
and
dec
jns
jmp
pop
xor
ds
cmp
cmc
sti
push
lret
repz
cmp
xchg
jno
adc
lock
outsl
hlt
fsts
out
push
insl
push
or
jns
or
imul
test
repz
fsubp
xor
add
outsb
pop
ret
idivb
insb
popa
repz
or
mov
mov
cmc
jb
repnz
jno
icebp
shll
lock
outsl
pop
out
pop
outsb
cmc
scas
mov
fwait
xchg
mov
aam
xchg
ds
mov
outsl
mov
sub
insb
push
dec
sub
ds
jo
xchg
out
in
add
loope
mov
sub
jmp
icebp
xchg
jo
lock
out
xorl
mov
fisttpl
dec
cmp
cmpsl
cltd
adc
pop
testl
sub
jmp
cmc
mov
cmc
lock
outsl
popa
out
fildl
aaa
outsb
imul
dec
jnp
or
je
rcrl
jecxz
mov
cmp
out
repz
xor
cmc
nop
pop
mov
lock
outsl
popa
out
shl
mov
imul
leave
jnp
out
sub
cmp
insl
mov
add
sbb
shlb
pop
fidivrl
jno
push
mov
idivl
inc
lock
outsl
mov
outsb
push
out
mov
ds
in
pop
sbb
cli
jne
cmpsb
mov
push
jnp
js
es
out
jo
rcr
mov
mov
cli
pop
lret
mov
xorb
mov
lock
out
sti
outsb
bound
mov
inc
addb
fnstsw
out
pop
je
arpl
push
outsl
pop
pop
mov
data16
fidivrl
push
xchg
icebp
mov
jno
mov
or
pop
lock
outsl
cmpsl
out
sub
out
jmp
push
jnp
mov
idivb
js
jnp
bound
ja
mov
pop
mov
xor
or
sbb
and
mov
lock
lods
in
imul
xor
sub
jmp
shl
fisubrl
out
push
jnp
jnp
loope
jp
shrl
push
je
cltd
fwait
ja
pop
cmpl
or
cmp
fwait
test
outsl
in
jbe
outsl
adc
inc
mov
adc
mov
xchg
mov
stos
cmp
data16
rcr
mov
sahf
out
cmc
outsb
mov
ret
jnp
loop
fstpl
xor
dec
clc
test
pop
jae
mov
jbe
mov
xchg
add
mov
sbb
xchg
pop
xchg
in
in
mov
xor
movsl
pop
and
jb
dec
mov
or
or
mov
lods
jbe
out
outsb
outsb
out
inc
jnp
repz
and
push
xor
inc
and
insb
jne
cmpsb
mov
js
out
lret
push
adc
arpl
inc
add
clc
outsb
jns
and
nop
gs
mov
lret
loop
bound
movsb
into
jno
stos
mov
icebp
in
outsl
out
push
adcl
je
movb
cmp
pop
je
push
mov
aas
dec
sub
popa
pop
mov
and
cmp
xor
jbe
data16
jb
xchg
lret
aad
jns
bound
cmc
scas
pop
mov
mov
stc
push
or
in
adc
sub
mov
fbld
xchg
jp
repnz
stc
or
lods
jbe
out
outsb
outsb
out
push
jnp
xor
shll
adc
dec
les
mov
lahf
call
shl
out
xchg
popa
out
gs
out
inc
mulb
out
jmp
push
repnz
push
outsl
cmp
mov
insb
add
out
js
jbe
addb
bound
pusha
and
clc
jne
cmp
cmp
notl
mov
push
mov
mov
data16
sub
out
fdivrs
mov
jae
imulb
cmp
sub
jg
or
add
push
mov
push
jb
push
add
add
arpl
mov
lret
daa
ljmp
lock
icebp
add
sbb
mov
lret
pop
out
jns
and
xor
je
sub
inc
push
push
xor
icebp
and
outsl
push
and
adc
mov
test
adc
push
jb
push
push
sti
gs
adc
push
sub
out
xor
icebp
ret
testb
addr16
mov
ret
fnstcw
and
push
stc
cmc
ja
jno
push
cmp
addb
mov
xchg
outsl
push
out
sub
out
enter
xchg
je
push
mov
sub
mov
das
jge
fs
shlb
inc
sbb
and
pop
outsb
jno
loopne
cmp
lods
xor
je
arpl
test
push
mov
xor
arpl
gs
pop
push
push
sub
cmp
outsb
loopne
and
repnz
jae
outsl
inc
xlat
out
add
jnp
jns
push
jns
idivl
mov
fcompl
inc
pop
mov
mov
lahf
rol
jg
inc
loope
pop
test
sarl
inc
insl
sbb
mov
aas
pop
jns
push
xor
sbb
data16
out
jnp
adc
xor
jno
arpl
out
mov
mov
jnp
jne
cld
testl
jne
pop
into
in
divps
pop
lcall
mov
xor
mov
aam
imul
shrl
xor
call
pop
mov
shrb
inc
sti
and
mov
notl
or
pop
and
xorb
jmp
call
fistl
out
loope
xchg
push
push
jns
mov
inc
ja
pop
push
outsb
push
sti
gs
dec
pop
mov
out
stos
xchg
sbb
cs
fnstsw
ja
rclb
xchg
mov
or
adc
enter
gs
or
insb
add
repnz
add
popw
cli
jmp
movsl
fnstcw
stos
mov
sbb
mov
sub
mov
inc
pop
jnp
inc
sbb
xor
xlat
popf
push
repz
je
ds
pop
mov
xor
out
jno
dec
neg
jno
scas
xchg
cs
subl
cmpsl
sub
jp
fs
mov
js
ja
imul
in
xchg
adc
cmc
add
mov
lods
fdivs
outsl
sub
jmp
stos
out
sbb
mov
mov
fcomps
test
xorb
xor
in
push
mov
xchg
ljmp
add
jb
mov
repz
daa
in
aas
jmp
mov
mov
add
adc
outsb
pop
push
xor
aaa
sarb
mov
jae
movsb
clc
jmp
jecxz
scas
mov
sub
shr
mov
jnp
fwait
mov
aaa
lea
ret
enter
mov
mov
scas
lahf
xor
les
jle
push
lret
push
sbb
inc
out
sbb
jecxz
ret
jp
fldcw
cli
inc
stc
js
add
imul
pop
addr16
xor
out
or
and
mov
mov
loop
xchg
mov
mov
jnp
jp
inc
jp
daa
jp
cmp
call
mov
lods
aad
hlt
outsl
or
inc
mov
fwait
scas
into
pop
in
shl
icebp
sub
add
mov
cltd
out
sub
arpl
sub
test
ret
push
cli
icebp
jp
xor
loope
mov
popa
adc
imul
outsl
stc
and
xchg
outsb
push
out
cmpb
mov
dec
sarb
xchg
je
mov
add
outsb
mov
jo
xchg
outsl
pop
out
pop
fistpll
imul
mov
or
jp
sti
lret
icebp
jecxz
xchg
data16
mov
push
cmpl
lret
mov
jns
js
and
scas
into
bound
and
mov
in
push
orb
mov
stos
outsl
adc
out
repnz
push
out
cmpl
sbb
mov
fnstcw
cmp
aaa
dec
jo
jae
pop
icebp
in
shl
xor
shl
cs
cmp
dec
jb
or
push
mov
call
mov
imulb
outsl
insl
jns
fistpll
imul
popa
jns
xchg
lock
push
pop
jecxz
movsb
push
pop
ja
xchg
outsl
jnp
aas
cmpsb
pop
testl
shl
scas
pop
mov
scas
out
fsubl
mov
icebp
mov
stos
outsl
add
fucomi
loop
push
loope
jnp
loope
pop
rolb
jge
ja
cmp
je
push
pop
pop
mov
mov
jmp
test
lock
jb
sbb
loope
jmp
aas
arpl
jg
mov
mov
mov
scas
jmp
fists
addr16
inc
clc
mov
or
shlb
pop
fdivrp
cmc
mov
test
outsl
lcall
fldcw
shlb
mov
pop
sub
addr16
shlb
outsb
roll
stc
ret
clc
cmpsl
mov
or
jb
xor
push
ss
push
roll
mov
inc
jne
mov
das
lds
xor
mov
outsl
aad
pop
lods
pop
mov
das
movsl
imul
jb
add
mov
or
clc
push
mov
gs
mov
xchg
je
es
jmp
icebp
dec
cmp
lods
mov
inc
shl
fsubs
cmp
popf
hlt
push
inc
repnz
outsb
push
mov
dec
jb
call
mov
xchg
push
enter
sub
cmc
xchg
xchg
in
pop
jno
scas
cltd
and
pusha
jb
in
jp
jo
jb
fs
outsl
jno
add
stc
fwait
cmp
lcall
scas
xchg
inc
jnp
ljmp
xor
xchg
jmp
xor
mov
sti
push
cmpsl
dec
out
xor
dec
bound
mov
and
gs
fs
pop
arpl
popf
pop
fstpt
push
insl
out
stc
div
lcall
bound
das
mov
cli
fs
xor
jns
push
xchg
mov
add
addr16
xchg
hlt
cmpsl
sub
mov
scas
repnz
xor
aad
push
jp
aam
popa
sti
inc
movsl
dec
add
stc
xor
pusha
mov
mov
sarl
imulb
add
jnp
and
out
idiv
cmc
fsubr
mov
pop
fidivrl
xor
cltd
in
mov
xor
lods
sti
pop
sahf
xchg
mov
jns
loopne
mov
ret
xchg
outsl
in
adc
outsb
push
out
outsb
jo
ret
jnp
jbe
cmp
sub
mov
jecxz
int
pop
mov
gs
imul
jp
push
fildl
mov
in
mov
mov
outsb
jmp
add
stc
fiaddl
mov
repnz
jae
push
pop
mov
insb
in
pop
repnz
jp
xchg
popa
jg
push
aaa
push
outsl
shr
sub
mov
jnp
je
cmp
pushf
jne
jae
pop
mov
jae
aas
xor
or
fildll
inc
xchg
dec
xor
mov
negb
xchg
pop
fnstcw
cli
sbb
push
scas
mov
mov
negl
mov
fs
cmp
pop
pop
mov
jge
lret
xchg
and
jae
icebp
les
sti
hlt
cmpsl
adc
adc
imul
addr16
xchg
push
push
outsb
mov
jnp
push
pop
jbe
jb
repnz
cmc
xchg
mov
dec
mov
mov
or
xchg
mov
shr
lea
jnp
mov
mov
xorl
in
sti
shl
dec
pop
mov
mov
mov
jno
jo
test
or
sti
pop
imul
popa
jb
mov
scas
adc
outsb
scas
mov
nop
hlt
imul
imul
fwait
sti
inc
jge
and
outsl
pushf
outsb
pop
mov
pop
lods
inc
push
xchg
mov
adc
icebp
mov
push
out
mov
inc
loopne
mov
cli
rcll
out
jae
dec
mov
mov
jl
pop
mov
jg
and
mov
mov
mov
outsb
dec
and
xchg
jnp
or
push
shlb
xor
int
jnp
pop
dec
insb
adc
mov
add
jae
xchg
push
dec
ja
mov
adc
fistl
mov
jnp
inc
jnp
push
mov
push
shlb
adc
insb
jbe
out
jnp
sti
cmp
pop
fcompl
mov
and
int3
mov
pop
jns
xor
sub
xor
test
add
rcll
sub
adc
int3
add
add
je
out
jae
rcrl
cmc
int3
pop
mov
or
fnstsw
icebp
out
outsb
stc
outsb
fneni(8087
add
sbb
inc
mulb
jnp
fwait
repz
fwait
les
insb
inc
movsb
jne
mov
jae
movsl
pop
lods
std
add
pop
sub
jo
icebp
lock
rcrl
push
outsb
jmp
les
jnp
xlat
sbb
test
fwait
xor
jne
xor
sbb
repz
sub
fdivrs
xchg
in
push
sub
xor
vcvttss2si
les
fneni(8087
into
insl
out
jnp
mov
sub
xlat
jae
shlb
hlt
in
icebp
inc
push
repz
fwait
jbe
pop
mov
jo
pop
jo
push
lock
mov
inc
inc
outsb
out
xlat
push
icebp
mov
mov
or
pop
mov
lock
mov
cmp
roll
fistps
and
call
cmc
repnz
xor
sbb
lock
sti
pop
out
std
stos
inc
mov
out
aaa
mov
mov
aaa
add
add
repnz
push
mov
add
jp
and
jns
cli
scas
add
in
shrb
sub
into
jno
add
pop
push
inc
or
add
cli
pusha
inc
std
shrl
outsl
outsl
addr16
xchg
aaa
jae
out
adc
jns
repz
cli
out
dec
hlt
shlb
bnd
loope
jmp
jmp
xor
xchg
jae
hlt
das
clc
mov
mov
insb
cmc
xor
pop
andb
push
jae
arpl
add
out
js
nop
and
pop
sti
les
push
test
inc
mov
in
insl
ljmp
in
bound
mov
scas
pop
add
outsl
out
scas
stc
out
out
imul
xor
addb
stos
mov
push
mov
mov
leave
lock
sub
arpl
pop
push
dec
xor
xchg
scas
sti
and
jecxz
ret
push
add
lret
mov
shl
dec
mov
loop
icebp
ss
aad
imull
pop
sub
ss
push
xor
add
cmc
pop
inc
push
lock
outsl
pop
out
cmpsl
in
aam
sti
ja
push
dec
pop
imul
jne
aas
inc
inc
sti
pop
jb
lock
adc
jmp
add
cmp
sti
scas
push
pusha
addr16
mov
jmp
jns
inc
mov
sti
mov
lods
fistpl
popa
jne
fistpl
jmp
inc
lock
xor
repnz
mov
js
in
ret
sahf
push
lock
nop
in
addr16
sbb
dec
jnp
dec
cmp
aad
cmp
jno
and
pop
out
adc
and
lock
add
movsl
push
stc
pop
sti
mov
pushf
sti
mov
push
mov
icebp
push
loope
cmp
mov
pop
sti
mov
loop
subb
sarl
adc
mov
pop
or
xor
jno
aad
jp
jo
lock
fsubrl
imul
aaa
push
mov
mov
repnz
icebp
sti
jo
jle
jb
cmp
sti
inc
add
mov
or
or
cmp
xor
xchg
outsl
imul
in
or
add
or
push
jae
jg
xchg
jbe
adc
bound
scas
jae
pushl
dec
imul
pop
or
dec
shrb
dec
dec
push
mov
test
cmp
mov
add
cltd
fiadds
fistpll
xor
jp
add
sub
stos
mov
lret
mov
repz
mov
cmp
cli
sti
sub
test
pop
mov
test
push
imul
mov
jmp
pop
mov
lods
divw
bound
or
stos
movsb
cli
sbb
ljmp
cli
jne
lcall
aaa
int3
mov
xchg
mov
rcrb
sbb
test
imul
insb
sub
inc
mov
outsl
sub
stos
stos
pop
adc
pop
mov
push
mov
xchg
and
addr16
cmc
jns
lret
mov
cmpsb
fisubrl
xor
jnp
cmpl
dec
dec
pop
les
cs
and
or
stc
sbb
jge
mov
loope
mov
push
sub
test
mov
cltd
dec
ja
dec
imul
sti
lret
cmp
sbb
dec
imul
cli
aaa
add
js
adc
sbb
leave
sbb
or
dec
into
sub
adc
sbb
scas
and
inc
cmp
inc
loopne
mov
fs
ficomps
stc
fsts
xor
xchg
cwtl
das
lods
xlat
test
pop
xchg
bound
pop
cmp
jnp
jns
imul
cmp
dec
pop
fwait
daa
cmp
jnp
addb
fsub
sub
out
cld
mov
mov
add
in
mov
iret
mov
movsb
pop
outsb
adc
sahf
pop
mov
push
mov
jge
push
jae
outsb
mov
cmp
mov
cmpsb
mov
fidivl
dec
sbb
or
dec
mov
cmp
insb
inc
and
push
shrb
mov
clc
mov
icebp
repnz
adcb
sub
add
in
xor
or
push
popa
jae
pop
or
movl
ja
leave
stc
jmp
pop
xchg
addr16
mov
cld
mov
arpl
xor
sarb
jp
add
inc
pushf
insb
shll
or
fistpll
ja
inc
cmp
jnp
mov
stos
inc
fisttpl
sbb
outsl
outsb
test
pop
ja
xchg
add
push
cltd
ja
test
decl
ss
cmpb
pop
sbb
jle
jo
popa
shrb
out
pop
push
aaa
and
jno
mov
dec
sub
cmp
mov
outsl
out
daa
stos
fsubrp
adc
cs
ja
ja
add
mov
repz
pop
add
cmp
mov
fcoms
idivb
add
push
cmp
bound
es
adc
daa
fidivrs
ret
jb
cmp
dec
cmp
dec
into
jae
out
int3
pop
mov
aad
out
leave
mov
sti
jnp
bound
or
cwtl
mov
icebp
adc
in
lahf
lock
push
icebp
pop
pusha
ror
sarl
dec
cmp
ss
push
jae
movsb
xor
insb
jmp
rcr
dec
adc
mov
cmp
jl
js
xlat
insl
jb
stos
stos
call
xor
out
pop
push
push
popf
outsl
stc
mov
pop
jae
mov
sbb
je
mov
mov
push
mov
add
add
loopne
cmp
loopne
xor
sarb
sub
in
and
lret
loopne
stos
push
cmpsl
outsl
pop
pop
mov
aaa
repnz
shr
dec
or
cmp
jmp
and
xchg
cmp
xchg
mov
xor
jno
sub
push
mov
push
fs
mov
sarl
inc
cmp
push
jae
adc
sub
push
rcrb
push
jne
mov
adc
mov
mov
jp
dec
or
aaa
cmp
fidivrl
cwtl
push
cmp
xchg
inc
icebp
jbe
outsl
hlt
addr16
fisubrs
in
add
mov
cmp
jns
insb
push
pop
test
stos
add
in
push
xor
shll
divb
outsb
imul
xorb
cmp
repz
fcmovnbe
pop
outsl
mov
daa
xchg
dec
lret
jp
sub
dec
xchg
cmpsb
in
push
scas
out
jae
sub
out
push
jne
shlb
lods
and
cmpsb
and
mov
adc
push
pop
mov
adcb
scas
aas
mov
push
jle
adc
fnstenv
dec
adc
in
mov
and
roll
rclb
xor
push
outsl
mov
jmp
push
xor
imul
mov
xchg
jmp
enter
out
dec
jl
xor
sti
cmp
gs
mov
jb
or
and
icebp
mov
mov
add
ss
push
jmp
jmp
or
sbb
lods
jbe
sbb
xchg
or
adc
jmp
inc
push
stc
je
ja
adc
jno
lahf
scas
mov
pop
popa
mov
mov
cmp
inc
ds
lock
or
popf
stos
mov
sub
test
cli
loop
xchg
js
jecxz
jle
out
adc
aas
loope
loopne
aad
outsl
and
fcoml
lods
inc
fdivl
sbb
or
pop
roll
adc
inc
jno
das
inc
rcr
adc
push
rep
or
mov
jecxz
mov
jne
clc
cmp
imull
bound
imul
insb
mov
jae
push
mov
gs
outsb
xchg
divl
push
mov
insl
notl
bnd
loop
jp
mov
jp
sbb
fwait
in
outsl
lock
adc
insb
pusha
mov
mov
ret
pusha
mov
cmp
or
xchg
sahf
push
div
out
adcb
mov
inc
sbb
jnp
or
lcall
xor
icebp
sti
sarl
fwait
sti
cvtdq2ps
pop
mov
bnd
and
shrl
xchg
push
adc
pop
repnz
mov
xor
mov
xor
jo
sbb
or
aam
popf
mov
call
cmp
mov
mov
jne
jmp
dec
mov
and
jae
ja
insl
jae
jno
outsb
lcall
daa
mov
pop
push
pop
or
jns
aaa
xor
dec
repnz
mov
popa
sar
push
movsl
or
icebp
pop
pop
sub
inc
outsl
xor
jne
in
imul
scas
xchg
pop
inc
sub
cmp
cmp
cmp
xchg
push
jbe
cmp
shlb
mov
pop
pop
pop
add
imul
mov
icebp
mov
movsb
mov
shll
nop
xchg
xor
dec
out
add
mov
fnstenv
icebp
jb
xor
add
cmp
cmp
cmc
xor
pushf
pop
int
lock
mov
cmpsb
mov
stc
cli
enter
outsl
dec
cli
jno
insl
outsb
add
dec
cmp
cwtl
scas
sub
jns
adc
cmc
mov
inc
pop
aas
cmpb
aaa
push
mov
jne
xchg
cmp
scas
insl
shl
bnd
mov
add
sti
sbb
mov
outsl
xor
xor
popa
dec
repz
sti
and
lahf
imulb
jne
cld
xlat
cmp
ret
pop
negb
pop
outsl
lods
xchg
fucomp
jmp
push
call
es
mov
cmp
dec
sub
xchg
sti
jmp
mov
cmp
push
pop
jno
in
jae
aaa
and
or
xor
xor
or
fnstenv
sti
and
aaa
fistl
pop
inc
xorl
fdivs
lret
pusha
repnz
adc
inc
cmc
out
cmp
xor
cs
lods
ja
adc
fldcw
push
sbb
add
jns
mov
pop
sbb
movsl
push
mov
pop
adc
outsl
jns
pushl
sbb
mov
jne
xchg
pop
inc
cmp
cmc
imul
in
stc
or
push
js
jmp
cmpsl
scas
rcrb
in
js
imul
xor
lahf
lds
xchg
in
inc
out
testb
push
push
lock
outsl
mov
outsl
jns
push
test
inc
xchg
lods
lcall
cmp
xchg
xchg
out
out
ja
push
jg
push
fnstcw
clc
shl
je
pop
neg
cmp
iret
add
xchg
in
ss
xor
lock
dec
shl
je
cmp
arpl
cmp
sub
js
mov
cmp
lock
fidivs
lods
fs
xor
xor
scas
mov
push
fidivrl
dec
popa
movsl
sbb
xor
or
mov
bound
gs
divl
or
pop
fmul
or
outsl
pusha
je
adc
pop
mov
cltd
js
fs
jo
in
insl
sti
hlt
aaa
addr16
push
icebp
in
nop
in
jae
cmpsl
cs
sarb
lret
aad
push
mov
push
insl
repnz
jno
roll
aas
call
rorb
roll
lret
mov
mov
stos
inc
sbb
mov
je
add
jno
pop
decb
iret
nop
jae
inc
cmc
mov
leave
push
outsl
push
pop
cmp
mov
pop
jns
add
inc
in
pop
mov
fldt
jp
ret
loope
icebp
xchg
stc
mov
fnsave
testl
jo
jp
cmp
jae
les
cmc
jbe
xor
out
mov
inc
adc
mov
sti
negb
sub
out
xor
sti
mov
jns
insb
leave
fidivl
outsl
cli
sbb
scas
shll
or
push
scas
mov
cmp
cmp
jecxz
lea
xor
cmp
mov
jmp
pusha
arpl
ljmp
xor
js
mov
jae
andl
iret
outsl
mov
sub
lcall
or
xchg
test
sti
dec
mov
fbld
insb
mov
arpl
jo
js
scas
pop
bswap
jns
push
outsl
adc
xor
js
enter
cld
divb
mov
icebp
inc
mov
lret
mov
jmp
mov
fnsaves
jno
loopne
std
jmp
addr16
je
pop
clc
push
jle
jb
and
cmc
inc
mov
aas
xchg
mov
push
inc
je
loope
mov
outsl
repz
dec
cld
adc
aaa
mov
nop
xor
sbb
inc
mov
mov
jbe
scas
clc
jo
cmp
add
adc
adc
das
inc
add
dec
mov
popa
cmp
adc
jae
jns
in
cmp
and
ffree
repz
outsb
pop
mov
scas
mov
pop
je
xchg
pop
in
jp
outsl
cmp
lock
sbb
mov
ss
xchg
cld
push
insl
jnp
sub
dec
xchg
fisubl
mov
fnstenv
divb
ret
mov
aaa
cmp
cmp
cmpl
xchg
sti
mov
daa
sti
insb
pop
mov
outsl
in
xchg
sbb
aas
or
rclb
push
adc
outsl
mov
imul
inc
mov
and
sar
sub
outsl
ss
fldenv
push
int
and
add
cmp
mov
loope
bound
mov
std
xorl
maxps
imull
or
std
mov
cmp
mov
push
xor
mov
xor
push
pop
mov
lods
test
add
jno
out
xchg
pushf
nop
idivl
fsubrl
cs
aam
inc
insb
mov
lods
cld
enter
mov
inc
mov
xor
sbb
ljmp
dec
mov
add
xor
pop
loop
pop
in
jg
mov
mov
mov
int
cmp
cmc
inc
in
fst
lods
fcoml
js
sti
addr16
loop
or
jmp
std
pushf
pop
jae
sub
or
xor
sbb
sub
outsl
fistpl
stos
jp
nop
aam
pop
sbb
xchg
jmp
out
mov
fildll
nop
mov
mov
lock
leave
add
mov
insl
push
jge
push
outsl
adc
mov
aaa
outsl
inc
jecxz
fidivrl
data16
neg
stc
dec
popf
pushf
loopne
mov
inc
jns
jl
mov
js
push
popa
lock
push
mov
xor
cmp
jl
dec
push
sti
jmp
push
push
mov
jae
cmp
call
mov
mul
jne
dec
inc
dec
in
into
xor
pop
or
out
xor
mov
jle
imul
outsl
cmp
jp
cmp
inc
jns
lods
pop
js
jo
mov
mov
adc
repnz
jge
add
xor
jnp
ja
ret
sub
scas
jns
push
xor
mov
sbb
and
cmp
lret
mov
mov
loopne
push
lock
mov
aaa
aad
mov
insl
sbb
imul
sub
jnp
push
mov
pop
dec
scas
jmp
mov
scas
std
stc
out
iret
and
lea
fcoml
inc
or
pop
cmp
mov
lock
outsb
outsb
shrl
andb
mov
imul
and
jb
and
sub
add
add
mov
add
mov
jnp
and
pop
or
les
cmpsb
pusha
scas
adc
pop
mov
inc
inc
test
in
sti
mov
push
out
fisubl
cmp
add
xchg
mov
mov
out
adcb
faddl
mov
jb
pop
pop
sub
ret
jmp
jp
cmc
loopne
jae
mov
insl
pop
aaa
fsubs
inc
daa
cmp
loopne
aad
jnp
jne
imul
push
jnp
push
dec
jbe
add
and
in
adc
pop
data16
enter
mov
push
jp
cmpl
outsb
sti
cli
dec
outsl
xor
lods
add
pop
add
dec
adc
push
aas
push
mov
scas
repz
cmp
outsl
adc
pop
je
ss
fsubr
mov
mov
fiadds
jnp
xor
sub
or
inc
out
pop
dec
mov
ret
ljmp
ret
jnp
xor
shlb
pop
mov
dec
das
ret
fbstp
jmp
dec
test
stc
jno
loop
enter
sub
jmp
cmpsl
idivb
jecxz
dec
mov
lock
fcomip
sti
repnz
and
jge
rcll
mov
testl
and
add
sbb
jae
aam
imul
test
mov
js
jmp
leave
pop
dec
sbb
fwait
mov
sti
dec
cltd
ja
mov
stc
mov
js
imul
mov
pop
cmp
bound
sub
ss
cmp
fidivs
fisttpll
xchg
mov
outsl
pop
fldt
mov
cld
sbbb
insb
sti
jns
push
insl
jns
push
outsl
imul
push
mov
xchg
insl
repz
push
jbe
push
enter
sti
sbb
icebp
jp
outsl
jns
enter
sti
stc
fwait
adc
enter
sbb
ljmp
or
loop
cmp
pusha
jo
jmp
jp
mov
and
addr16
mov
fmuls
imul
mov
mov
push
xor
jnp
rorl
add
hlt
psubusb
leave
mov
jnp
clc
cmp
adc
mov
jecxz
push
jp
fimull
sbb
aad
jo
lcall
lret
pop
repz
push
js
std
sbb
push
mov
ja
mov
mov
fldcw
push
mov
dec
insl
test
sub
or
adc
jl
stc
mov
cmp
repz
lahf
stos
adc
and
push
mov
lret
imul
cltd
push
testl
testb
mov
data16
push
scas
lret
inc
push
cmpsb
subb
stc
movsb
sbb
push
test
sub
jnp
xchg
cltd
mov
push
lods
mov
pop
mov
pop
iret
es
xor
out
jb
jae,pn
call
push
add
cli
push
mov
xor
pop
sbb
jbe
jno
repnz
test
nop
pop
xor
jo
popf
in
outsb
mov
scas
divb
sbb
xchg
aaa
das
push
jnp
leave
push
add
cmp
mov
adc
adc
lock
and
pop
jns
push
mov
dec
divl
shrb
ja
xchg
push
ja
adc
je
mov
xorb
push
sti
jnp
cmp
or
insl
lods
cld
aam
jle
mov
xor
movb
xor
adc
cmpl
ret
xchg
nop
in
gs
fidivl
popf
in
das
popa
ret
cs
arpl
mov
cwtl
pop
pop
and
push
mov
xchg
in
mov
scas
pop
xchg
nop
jo
or
xor
dec
adc
movsb
shl
clc
dec
js
loope
jbe
gs
add
sbb
inc
pop
add
dec
mov
aas
imul
sarl
sub
jae
mov
insb
xor
mov
jne
test
mov
popa
xor
dec
xorl
imul
les
pusha
fs
call
mov
mov
jmp
out
xor
pop
sbb
fdivr
dec
xchg
push
imul
mov
mov
js
rolb
imul
jne
xchg
ja
xorl
add
jp
mov
iret
fxch
jnp
xchg
and
sti
jecxz
je
pop
icebp
jae
jmp
mov
cld
mov
test
xor
push
sub
dec
mov
in
aad
in
shl
out
lds
cmp
inc
xchg
mov
xor
lods
repz
loopne
lods
idivb
sahf
or
ja
jnp
js
pusha
sub
xchg
push
jae
ret
movsb
lods
outsl
add
jne
cwtl
hlt
scas
sti
xor
push
scas
push
divl
lahf
icebp
xor
mov
aam
mov
mov
xor
sub
xor
xor
xor
dec
push
push
lahf
mov
cmp
fidivrl
mov
mov
lock
arpl
adc
push
jb
mov
aaa
xor
aam
cli
adc
lods
xor
mov
adcl
jae
jo
push
mov
push
cmp
mov
adc
stc
cli
mov
je
js
sbb
jb
jno
push
fptan
xor
xchg
leave
mov
xor
repz
jno
cwtl
adc
mov
xor
loop
fucomi
sahf
into
aaa
hlt
inc
ret
lock
inc
outsl
sti
mov
hlt
sub
sbb
jae
push
imul
pop
fcoms
push
mov
out
stc
jae
or
scas
mov
movsl
add
in
mov
scas
nop
addr16
arpl
lret
scas
jmp
cmc
inc
test
jp
das
pop
mov
test
mul
in
mov
or
pop
mov
inc
cmp
loopne
mov
xor
add
sti
jb
cs
mov
mov
xor
push
add
shll
sbb
stc
add
dec
mov
mov
cmp
mov
shrb
mov
inc
jp
daa
jne
xchg
test
in
push
js
jae
andl
sbb
mov
add
mov
das
mov
jne
outsb
aaa
fistpll
jmp
xchg
pop
pop
lock
rolb
sub
outsl
xor
pop
xchg
sbb
loope
std
xor
xlat
popf
in
fidivrl
hlt
or
rorl
idivl
repz
adc
cmc
testb
lret
mov
jns
jmp
sbb
cmc
and
sti
stos
in
popf
int
mov
push
repz
call
dec
divb
and
stos
lock
loope
in
dec
cmp
stos
out
cmovge
and
test
popa
sub
jbe
jae
in
and
add
cmpsl
jno
push
pop
jne
lahf
pusha
fmulp
lock
imull
mov
cmpb
cmp
xchg
arpl
xor
iret
jno
fnstsw
hlt
jmp
std
lods
push
sub
dec
sti
imul
sbb
add
mov
leave
push
mov
jmp
sarb
mov
leave
inc
insb
icebp
in
addr16
out
and
out
mov
lds
cmpl
cmp
mov
sti
dec
fst
int3
xor
pop
out
adcl
sub
pop
movsb
sbb
test
inc
pop
xlat
mov
jae
push
jne
xor
push
scas
push
mov
mov
insl
mov
jg
sti
sbb
cmc
mov
xchg
ljmp
sub
insl
xlat
clc
jp
fs
xor
xor
adc
mov
sti
cld
jo
nop
xor
lea
mov
xchg
fdivrl
cltd
cli
addr16
stc
cmpsl
gs
sti
sub
or
into
sub
xorb
adc
or
aaa
aad
add
into
add
mov
fmuls
cmpb
push
lods
add
xchg
in
and
in
out
adc
cmp
inc
je
lahf
mov
stc
outsb
mov
push
or
call
insb
outsl
xor
and
jnp
push
or
mov
testb
jns
in
es
aad
push
sbb
cli
push
push
jmp
xor
mov
mov
cmp
cmp
pop
push
inc
lcall
mov
in
and
dec
jae
mov
jne
cmc
sub
aam
jbe
sbbb
icebp
dec
jne
or
insb
sub
mov
sti
test
pop
inc
dec
xchg
cli
mov
jp
or
push
in
insb
repnz
jae
stos
imul
fstpt
or
fwait
lcall
cmp
or
arpl
mov
jo
cmp
cmp
js
cmp
dec
gs
mov
sahf
int3
rorb
or
cltd
fdivrs
outsl
je
fildll
mov
push
imul
mov
sbb
in
sbb
fs
pop
pushf
jae
dec
or
aam
add
jp
cli
cmp
repz
fwait
mov
dec
jae
sub
jnp
pop
adc
imull
dec
push
xor
mov
cld
jo
lret
sub
jp
mov
mov
dec
xorb
pop
fstpt
jne
gs
xchg
cli
mov
sub
repnz
in
das
jns
xor
jns
mov
xchg
mov
dec
jo
jo
adc
jnp
sbb
sbb
push
sub
jne
push
imul
xor
mov
sti
popa
bound
jae
mov
out
in
stc
adc
inc
adc
outsl
mov
mov
add
jns
js
jne
imul
adc
jne
in
pop
or
or
pop
add
jb
rorl
outsl
add
stc
loopne
icebp
jno
ss
sub
insl
xchg
push
hlt
pusha
inc
stc
xchg
cmp
xchg
jecxz
dec
xor
insl
imul
aaa
leave
mov
arpl
stc
jg
pop
pop
mov
insl
loope
xor
push
rcrl
inc
jo
fs
xor
mov
rcll
stos
rcl
shrb
jnp
shll
in
ret
sbb
jne
addr16
jnp
clc
xlat
or
xor
ljmp
sub
test
shrb
nop
dec
jns
outsl
xor
xchg
test
add
add
mov
xchg
dec
dec
dec
lcall
sub
movsb
xor
mov
aad
jno
adc
push
jp
push
cmp
push
xor
pop
xor
or
outsb
movups
cmp
les
xorl
lods
jb
pop
iret
pop
xor
jbe
xchg
xorl
xchg
push
dec
mov
mov
addr16
jns
jecxz
data16
js
outsl
dec
scas
or
popa
and
jmp
aam
jns
out
fcomp
aaa
ljmp
out
xchg
and
mov
sbb
or
xor
sti
cs
into
mov
test
jmp
out
je
and
out
jne
lods
mov
sub
sbb
or
and
push
loop
scas
push
add
jno
inc
cmp
lea
jno
jne
sbb
jge
test
push
js
mov
cmp
cld
sub
into
push
xor
in
add
mov
arpl
push
js
out
fcomi
repz
sbbl
stc
hlt
xchg
out
xor
push
neg
cmp
stc
or
aas
mov
outsb
mov
pop
test
adc
sti
scas
lea
notl
inc
adc
jae
je
mov
jg
lods
scas
jno
stos
in
cltd
ljmp
mov
or
lods
add
xorl
ds
and
outsb
jns
xchg
jo
mov
and
das
add
push
mov
mov
addr16
cwtl
aam
push
sti
in
and
mov
cmp
push
outsl
out
pop
aas
insb
xor
jg
std
push
lcall
out
enter
push
lret
clc
xor
out
in
xchg
popf
in
sbb
xchg
insl
scas
aaa
mov
stos
jp
add
push
add
mov
fs
andb
or
sub
les
cmp
inc
mov
in
lahf
jne
inc
pop
cmp
pushf
cmp
push
jp
mov
xor
and
stos
out
stc
cmp
jbe
imul
inc
sub
pop
cld
int3
fdivl
mov
test
cmp
adc
mov
mov
xor
je
jl
or
inc
push
hlt
lods
pushf
xor
sub
push
cmc
mov
sub
repnz
xor
and
shrl
jg
outsb
push
dec
testb
aad
add
std
es
scas
jae
lock
mov
mov
mov
pop
jecxz
xor
ret
sti
add
jp
mov
push
jno
fistpll
xor
outsl
jp
adc
mov
cmp
lods
jnp
and
je
mov
in
inc
xchg
les
subb
inc
mov
and
mov
jmp
cmpsl
add
push
mov
xor
repnz
aam
test
movsb
jb
daa
pop
xchg
lds
icebp
test
xorb
mov
cwtl
jno
outsl
pusha
cld
pop
pop
stc
mov
repz
mov
xlat
imul
mov
mov
clc
jg
dec
cmp
hlt
mov
xchg
and
jns
stos
popf
out
loope
add
dec
dec
mov
push
cltd
cli
lret
int
cmp
jnp
mov
cld
lcall
xor
sub
jle
ja
mov
imul
jle
sub
xchg
adc
xor
jp
ljmp
addr16
je
insb
or
push
ds
mov
dec
sub
push
hlt
mov
xor
inc
insb
mov
push
loopne
inc
push
xor
mov
dec
roll
sub
js
stos
sub
ja
int
mov
pop
gs
test
out
mov
mov
mov
jbe
mov
jnp
mov
mov
mov
and
sbbb
mov
xor
jo
and
in
push
xor
sti
pop
test
call
rclb
shr
push
sub
push
push
xchg
stc
cmp
dec
jp
push
xchg
out
ret
icebp
fs
sti
popf
sbb
lret
xor
jns
and
fdivs
mov
test
sub
das
lahf
jae
pop
pmuludq
pop
inc
arpl
mov
mov
adc
add
gs
out
mov
outsb
sbb
mov
sub
push
in
sahf
mov
js
jg
pop
dec
out
sti
xor
shlb
outsl
push
call
and
xor
js
and
hlt
push
jo
out
out
les
outsb
mov
pop
outsl
outsb
push
les
stos
xorl
xchg
pusha
out
sub
push
cmp
mov
popa
jns
jb
inc
out
pop
or
push
iret
je
add
push
out
push
ja
mov
cli
shl
sbb
popf
mov
pop
scas
jbe
pop
xlat
sbb
stos
hlt
cmp
and
inc
jnp
push
scas
cmc
xchg
pop
movsl
imul
jle
add
sub
mov
repz
js
add
stc
ja
jnp
ret
pop
mov
pop
mov
push
push
sub
push
mov
add
js
xorl
xchg
inc
icebp
stos
pusha
aam
xchg
mov
mov
mov
or
sarb
je
in
repz
jmp
xchg
ljmp
out
dec
repnz
mov
jmp
and
imul
stos
cmp
stc
addr16
xor
js
sbb
icebp
test
pop
sbb
mov
cmp
lock
push
jp
mov
pop
jmp
mov
inc
ja
mov
fwait
push
sub
push
stos
out
lods
sti
push
fisubrs
xchg
popa
cli
adcl
pusha
cmp
imul
jno
inc
jno
inc
push
inc
in
adc
jp
fwait
movsl
mov
add
fwait
popf
clc
jmp
mov
and
inc
scas
js
xchg
jmp
repz
sub
mov
ss
mov
xchg
js
mov
ss
hlt
stc
je
mov
sbb
aam
add
cli
cmp
cmp
loope
gs
and
in
mov
popf
push
jne
adc
mov
push
xchg
aad
ret
and
adc
xchg
xor
pop
ss
mov
pop
ja
jmp
ja
jl
jnp
ss
bound
movsb
inc
lds
addr16
and
push
inc
cmp
dec
sbb
mov
pandn
cmp
stos
test
movsb
pop
jmp
and
cmp
jmp
adc
fistps
ljmp
inc
addr16
xor
jo
adc
roll
add
mov
and
scas
arpl
loopne
xchg
fs
fdivl
push
or
out
enter
jnp
inc
and
lcall
xor
cmp
lret
push
jnp
imul
jnp
inc
mov
inc
or
adc
lcall
js
pop
insb
ret
pop
orl
jnp
xchg
ffreep
sub
inc
jae
mul
clc
push
or
push
icebp
ja
mov
sub
mov
int3
pop
add
jne
pop
imul
pop
cmp
movsl
jnp
push
jecxz
push
or
xlat
mov
adc
jns
pop
mov
test
inc
arpl
nop
std
xchg
roll
andb
mov
sti
jecxz
push
sbb
idivb
adc
or
cltd
das
pop
inc
xchg
push
dec
pop
sbb
nop
mov
or
ret
add
out
push
je
jnp
shlb
jg
aam
cmpsl
in
mov
sub
mov
xchg
adc
add
std
pop
test
js
mov
roll
jnp
mov
scas
in
pop
push
jns
stos
jne
addr16
cmp
jnp
mov
jns
sbb
xchg
sbb
xlat
dec
mov
sub
mov
pop
push
xor
scas
sbb
es
into
xchg
and
lahf
scas
mov
outsl
pop
add
outsb
rorl
inc
xchg
push
outsl
lcall
ror
adc
push
js
or
aas
jnp
sbb
and
or
mov
or
xor
xchg
adc
sbb
mov
inc
cwtl
outsl
xchg
or
stos
or
mov
dec
adc
jnp
dec
jl
popf
xor
ljmp
lock
xchg
jnp
cwtl
cli
cmc
xchg
ja
into
jnp
adc
sub
jle
in
scas
and
adc
pop
movsb
sub
push
and
xchg
mov
xchg
pop
jne
test
adc
jnp
and
inc
in
jnp
push
mov
push
testb
loope
or
cmpsb
jnp
sbb
and
mov
cwtl
outsl
adc
popl
outsb
cli
js
inc
sti
nop
outsl
and
cmpsb
mov
sub
mov
scas
mov
jp
mov
sti
in
mov
add
sbb
stos
sub
jnp
sarl
xor
cmp
xchg
mov
js
dec
jnp
rcrb
aas
cs
xchg
xchg
mov
sub
adc
in
pop
pop
sbb
jnp
orb
add
clc
lea
push
or
adc
repz
dec
andb
sub
jnp
lea
fwait
lods
push
dec
std
sbb
jno
add
imul
in
inc
pop
xchg
mov
fildl
in
lret
adc
fnstcw
mov
pop
movsl
pushf
repz
fisttpll
out
mov
in
dec
ja
imul
or
add
jnp
xorl
jnp
mov
daa
stos
cmc
push
jnp
or
cmp
dec
push
mov
mov
lcall
aam
lods
decb
lock
out
jnp
loop
cmp
sbb
dec
cltd
add
inc
jnp
movsb
and
sbb
or
fnsave
ja
and
pop
push
sub
jg
inc
add
lds
mov
mov
lret
cmp
fwait
sbb
pop
add
push
push
mov
pop
in
inc
idiv
cmp
jnp
rcll
sti
mov
cwtl
lahf
push
sahf
repnz
xor
mov
movsb
iret
jnp
inc
in
scas
leave
add
jnp
inc
arpl
cmc
loope
shr
mov
mov
mov
enter
jnp
jecxz
jp
jnp
lret
or
loope
mov
pop
jae
shll
stc
mov
pop
xor
mov
insb
frstor
sahf
inc
push
jnp
sbb
inc
int
mov
jnp
inc
add
pop
scas
jnp
in
out
mov
mov
sub
aam
add
jno
in
pop
cltd
loope
mov
test
mov
jae
dec
xchg
ret
or
jnp
loopne
repnz
push
adc
jnp
push
fmuls
xchg
dec
rolb
jnp
mov
outsb
sub
cli
push
outsl
dec
xchg
push
imul
imul
shlb
jmp
ss
jo
xchg
mov
adc
xor
stos
mov
and
add
or
das
inc
in
dec
addb
cmp
jae
jnp
cs
add
sbb
fldenv
in
pop
jb
sub
jae
in
lods
aad
jnp
add
dec
xchg
jmp
jbe
lea
outsl
mov
pop
mov
mov
pop
mov
jecxz
jns
imul
popf
jno
clc
aas
cmp
add
shlb
jnp
out
push
mov
cmp
adc
aam
cmpsb
fs
outsl
dec
mov
sub
mov
jg
dec
jnp
and
mov
mov
daa
or
repnz
sub
lea
orl
loope
out
inc
stc
adc
insl
or
jg
sbbb
mov
mov
lret
and
mov
sub
and
jae
stos
and
lods
imul
jg
jb
in
or
jnp
scas
and
jnp
dec
lcall
push
movsb
loope
jne
pop
dec
cmp
dec
loop
fs
sbb
imul
scas
cmp
lods
scas
jnp
lea
or
out
sbb
rorl
inc
cmp
jns
or
mov
cmpsb
fwait
mov
sub
fmul
sarb
dec
push
ljmp
hlt
jne
push
ret
push
ja
jge
insl
mov
jo
sbb
xor
out
shr
push
orb
xchg
cmpsb
mov
inc
jnp
mov
mov
push
pavgw
pop
ss
lds
add
sahf
fistpl
mov
add
cmc
arpl
lods
cmp
std
loopne
cmp
jmp
outsl
mov
add
test
fstps
scas
out
mov
jge
xorl
jo
or
pusha
jns
les
and
mov
adc
out
jl
sbb
adc
insb
ja
jnp
cmpb
sbb
dec
ret
cmp
cmp
insb
mov
mov
cmp
insl
outsl
xchg
out
pushf
mov
inc
popf
jne
mov
mov
lods
jecxz
int3
repz
dec
insl
aaa
ffree
cmpb
lock
in
jnp
lds
cmp
jae
cmc
das
lahf
stc
dec
mov
adc
jle
std
push
sbb
xor
adc
mov
add
dec
dec
pusha
les
jne
jnp
dec
and
cmp
push
inc
jnp
andl
push
and
out
sti
push
or
xor
enter
gs
jno
cmp
mov
aad
out
or
sarl
push
xchg
mov
repz
stos
push
pop
xchg
add
jnp
mov
push
inc
jnp
xchg
sbb
dec
add
mov
inc
mov
or
jle
sbb
jnp
add
test
popa
and
cltd
mov
fnstsw
mov
jnp
push
fadds
cmp
scas
mov
popa
stc
xor
mov
add
push
push
jnp
lods
in
shl
cs
jnp
mov
adc
xchg
mov
loope
mov
jnp
sub
or
sarb
lea
outsl
test
leave
insl
xor
ficoml
jb
out
data16
pop
popf
jl
xlat
and
popa
mov
int
jp
or
cmp
ffreep
jge
arpl
sub
fdivl
cli
xchg
pop
inc
jle
sti
rcrb
inc
fstpl
sti
arpl
call
cmp
jg
mov
jmp
sbb
cld
jecxz
std
cltd
or
dec
repnz
xor
into
cmp
mov
cmp
sti
aas
out
imul
ret
jnp
test
lcall
int
ret
add
dec
aad
cmp
mov
cltd
jnp
mov
sbb
mov
jle
adc
push
sub
test
adc
stos
push
push
popf
addb
ret
mov
jne
inc
adc
shlb
ficoml
push
xchg
mov
cmpsb
es
mov
jnp
sbb
scas
outsb
fdivrl
adc
and
xchg
cmp
arpl
test
jge
sub
pop
sub
inc
jo
iret
imul
fisubrl
and
lods
dec
jnp
call
adc
repnz
dec
jnp
inc
lret
pop
popf
int3
xor
jnp
movaps
jl
jnp
sahf
movsl
out
push
pop
jnp
lea
lss
or
mov
lds
pop
pop
mov
les
repz
imul
jnp
test
mov
icebp
sub
pop
jmp
lret
push
jl
ficompl
insw
jp
imul
call
jbe
jae
in
adc
jnp
in
push
push
mov
mov
jnp
cmp
mull
jnp
cs
mov
nop
mov
mov
pop
or
push
jecxz
mov
lret
dec
jb
mov
js
out
add
dec
ja
addr16
fldcw
jnp
insb
jecxz
sarl
in
dec
arpl
lahf
ss
pushf
gs
sub
jnp
popf
push
decl
in
push
inc
xchg
add
imul
insl
aas
sbb
cs
pop
jnp
and
dec
outsb
inc
jnp
xchg
xchg
jb
sahf
jnp
out
frstor
and
sbbl
jae
bound
adc
add
js
fists
into
es
insb
jmp
daa
xor
movsb
mov
jnp
xchg
rcrl
sahf
and
data16
dec
push
out
call
fildl
pop
aam
rcrb
out
inc
sbb
inc
outsb
enter
pop
push
adc
jnp
jge
sbb
xchg
xor
push
jp
mov
add
xchg
inc
fldt
dec
cmovg
insl
add
les
lods
stos
fimull
push
inc
mov
dec
adc
insl
in
mov
mov
jno
dec
pop
iret
sbb
pop
adcl
enter
stos
push
mov
aam
or
jae
cmp
cmpsl
insl
pop
sub
mov
add
pop
push
jnp
mov
dec
jbe
loopne
jnp
mov
js
aad
mov
enter
push
dec
pop
bound
loope
out
loop
fnstsw
int
or
into
sbb
xor
jnp
addb
cmp
or
dec
aas
repnz
pop
dec
outsb
xchg
ret
cmpl
push
mov
rclb
repnz
js
loope
mov
imul
daa
cld
jns
cmpsb
fwait
xchg
xchg
or
fnstcw
testl
stos
aaa
movsb
xor
push
outsl
push
bound
add
inc
jne
dec
sub
jnp
ficoms
test
in
push
inc
jnp
dec
mov
or
fwait
push
clc
cmp
pop
mov
mov
jnp
out
inc
das
test
ret
or
ljmp
dec
jno
cmp
push
jae
or
fldcw
stos
inc
cmp
loopne
fsubl
insb
inc
add
aas
movsb
sub
imul
jnp
iret
add
enter
cmp
fdivrs
sti
xor
repz
hlt
cld
jo
jnp
cwtl
mov
mov
dec
jnp
push
loope
fdivs
sbb
jmp
mov
mov
lret
pop
cmp
movsb
outsl
or
sbb
mov
sub
sarb
dec
arpl
jg
mov
repz
mov
pusha
shrb
cmp
jnp
lret
push
cwtl
add
sub
test
movsb
xchg
das
jnp
mov
mov
jb
jnp
sahf
addr16
adc
mov
arpl
mov
jnp
js
out
mov
lods
xchg
mov
insb
mov
dec
jnp
mov
mov
jnp
sub
mov
add
cmc
xor
pop
jnp
mov
inc
mov
movsl
in
and
jnp
test
leave
lea
mov
cltd
mov
jne
repnz
js
or
mov
mov
imul
adc
jmp
xchg
jecxz
ja
inc
mov
mov
mov
jnp
and
xchg
cmc
jnp
push
ret
mov
sbb
cmp
xchg
inc
mov
xchg
cmp
arpl
adc
and
mov
out
les
fs
or
test
pushf
sbb
jae
out
repz
clc
and
gs
xchg
mov
mov
cmc
mov
fdivrl
pop
fwait
and
dec
adc
jge
sti
or
sub
jae
jnp
xchg
mov
xchg
and
xor
jecxz
cmpsb
daa
mov
pop
xchg
mov
ret
mov
push
adc
mov
imul
push
push
inc
sbb
jle
sbb
jnp
jae
loopne
and
adc
mov
jg
xor
mov
aas
mov
ss
jnp
lods
es
jnp
jp
jae
imul
imul
sub
adc
jno
inc
or
mov
ja
pop
outsb
jnp
lahf
cli
pop
mov
pushl
push
insl
mov
sahf
pop
xchg
dec
dec
add
inc
aam
test
jo
jp
jnp
adc
ss
mov
pop
test
aas
iret
jnp
and
jo
outsb
sbb
xor
movl
scas
push
sbb
pop
pushf
ja
jge
inc
push
mov
insb
push
xchg
js
neg
sti
adc
jo
jnp
sbb
cli
lock
pusha
and
repz
test
aam
mov
ja
pop
cmp
xchg
lds
mov
rcrl
insb
fildl
dec
add
add
pop
jnp
xchg
push
cmp
sbb
int
xor
mov
insl
pminub
push
add
sbb
out
loop
jnp
mov
movsl
scas
adc
int
pmaxub
test
neg
inc
pop
or
gs
mov
and
mov
jnp
cmp
jnp
test
loopne
jnp
mov
pop
imul
or
adc
ss
pcmpeqd
pop
loopne
insl
out
jnp
cmpsb
inc
bound
mov
cmp
rclb
mov
sbb
mov
jnp
ret
pop
sti
inc
adc
lret
mov
negl
flds
jmp
out
insl
mov
pop
lcall
or
jnp,pt
jl
and
jnp
sbb
clc
fimuls
add
andl
jo,pn
and
imul
mov
scas
jbe
pop
sbb
push
daa
frstor
jnp
cld
dec
jg
test
nop
outsb
aam
shrb
js
jp
push
adc
dec
xchg
cwtl
jnp
fcmovne
jae
aam
loop
hlt
dec
dec
outsl
mov
jp
or
add
xchg
mov
sbb
jnp
or
sbb
sbb
pop
jnp
daa
lods
push
jae
jmp
mov
and
cmp
adc
mov
add
dec
test
mov
lea
fsqrt
das
cmpsb
ja
push
jne
jp
push
arpl
dec
inc
sahf
mov
jecxz
clc
and
xorl
pop
adc
lea
or
inc
sub
sub
cmp
imul
pusha
add
and
pop
stos
xchg
lret
outsb
out
jnp
sub
loop
or
sbb
insl
sub
fists
imul
jns
push
sbb
xchg
xor
ret
and
das
jae
jo
scas
cmpsl
mov
out
bound
lcall
jae
xor
mov
pop
mov
cmpsl
adc
lods
mov
jnp
rolb
jecxz
jae
aaa
iret
nop
cmc
push
add
call
jnp
pop
mov
icebp
je,pn
inc
test
inc
cmp
add
mov
inc
mov
jnp
pushf
bound
stc
out
add
ret
jp
dec
lds
int
sub
cmp
jno
test
push
insl
sub
jo
jnp
jp
sub
sub
push
popa
divb
lea
frstor
or
outsl
pop
dec
fsubrl
jae
mov
addr16
mov
outsb
sub
cmovb
clc
out
aas
xchg
inc
dec
into
jnp
cmpsl
xlat
ljmp
aad
xor
cli
mov
pop
out
inc
adc
push
sub
fistl
sub
imul
jp
je
lahf
pop
mov
mov
push
jnp
xchg
dec
dec
push
ds
pop
push
cmp
or
ljmp
das
inc
mov
outsl
scas
jae
pop
sub
imul
adc
lahf
mov
fistl
les
js
jnp
out
jecxz
push
aam
xor
and
gs
jnp
dec
in
jmp
ss
out
sbb
test
bound
inc
pusha
jb
sti
test
int
or
nop
jae
orl
and
and
outsl
mov
icebp
xchg
jge
jno
mov
jbe
dec
scas
xor
sahf
outsl
outsb
pushf
loopne
ss
mov
dec
xchg
fcomps
lods
das
xor
sbb
fsubrs
cltd
pop
xor
lea
andb
jnp
push
or
dec
jns
leave
push
hlt
cmp
sbb
fcoms
jnp
mov
aad
jnp
pusha
iret
xchg
xor
xchg
fcmovu
cmp
mov
lret
gs
sub
imul
push
pop
add
scas
dec
sub
inc
xchg
out
jnp
xchg
cmp
mov
mov
sub
pop
push
add
inc
pop
lret
int3
xor
shr
jmp
push
test
sbb
pop
imul
sahf
in
xor
cs
adc
add
std
cmp
sarb
xchg
pop
aam
pop
aad
jnp
cmp
cmp
mov
xor
mov
jnp
push
dec
adc
lcall
aas
adc
sbb
int3
lar
pop
pop
loopne
jnp
jecxz
inc
in
lea
jb
in
jnp
mov
ret
outsl
insb
push
jnp
sub
mov
jmp
inc
mov
adc
dec
sbb
and
xlat
inc
clc
jae
xchg
dec
hlt
int
movsb
mov
adc
into
je
inc
pushf
mov
mov
sbb
cmovns
jne
jp,pn
js
cmp
mov
jnp
aaa
not
das
or
dec
mov
lods
jno
xor
or
mov
rol
mov
imul
icebp
out
xchg
in
jl
out
sbb
adc
popf
sti
aad
pop
mov
sbb
js
je
lret
call
fsubl
lock
les
sub
int3
in
mov
into
cltd
adc
int
and
xor
arpl
test
ja
les
jnp
pop
and
cs
adc
dec
dec
subl
add
lock
push
jns
xchg
cmp
and
jb
stos
or
jmp
hlt
pop
dec
xchg
xor
imul
and
inc
adc
dec
jb
inc
xor
lret
and
and
jo
add
aad
test
mov
call
fcompl
sbb
rcrl
pushf
insl
jnp
mov
cmp
ds
sbb
inc
mov
push
fs
cmp
jo
rcr
clc
xor
jnp
xor
sbb
lahf
dec
mov
and
loopne
fdivrl
sub
inc
mov
and
adc
jnp
ss
out
icebp
dec
je
sbb
inc
test
fdivp
dec
jnp
cmc
pop
cs
pusha
pop
cmpl
js
cltd
enter
loop
cmp
call
inc
imul
ror
push
add
cmpsl
xorl
push
dec
pop
xor
mov
sub
jge
mov
jns
and
xchg
or
call
jne
add
mov
int
gs
aad
sub
mov
pop
scas
icebp
inc
daa
cld
jne
clc
adc
dec
add
rcl
xor
sbb
mov
adc
leave
xor
mov
aas
cs
lock
repnz
lea
xchg
lods
mov
pushf
jnp
call
sbb
inc
repz
dec
ds
jecxz
jnp
stos
loop
cltd
sbb
dec
imul
inc
gs
pushf
lods
dec
scas
cmc
adc
gs
icebp
aam
mov
dec
mov
pusha
jnp
addr16
mov
test
imul
jae
jl
cli
sbb
adc
imul
inc
stos
je
pop
sbb
jae
xchg
rclb
cmp
daa
xor
push
push
jnp
and
mov
mov
inc
insb
jnp
jne
xor
sahf
pop
fistpl
into
adc
fidivs
bound
jne
mov
popf
in
ss
add
repnz
mov
lds
insb
mov
in
cli
stos
xchg
xlat
push
lock
imul
adc
arpl
outsl
clc
scas
jns,pt
orl
jo
sahf
aas
push
repz
or
movsl
stos
jae
add
mov
mov
pop
pop
jae
jle
jnp
lock
pop
add
sbb
int
pop
jnp
vmaxsd
mov
or
icebp
xchg
sti
fxam
or
xor
mov
nop
test
imul
mov
jae
dec
mov
jnp
and
imul
xor
mov
mov
pushf
out
nop
ds
bound
mov
jge
stos
add
dec
ja
in
push
mov
jnp
cltd
mov
cwtl
inc
jo
or
dec
adc
das
add
jnp
enter
xor
and
int
and
jb
push
ja
xor
cmpsl
out
jnp
dec
mov
push
mov
dec
into
mov
repnz
push
jnp
lret
aam
push
and
cmc
into
loopne
int
int
jnp
add
xor
rclb
add
lods
push
aaa
mov
popf
mov
ja
daa
scas
add
xor
sbb
mov
jnp
repnz
insl
jnp
push
call
push
jnp
mov
jne
jle
leave
mov
mov
aad
rclb
xor
xlat
xchg
or
dec
sbb
jno
insb
push
outsb
jo
mov
cld
test
daa
rcrl
lret
mov
xorb
adc
lcall
mov
cmpsl
inc
cmp
mov
or
sbb
push
jns
cmc
iret
imul
jno
cmp
ja
stc
hlt
stos
pusha
in
and
lahf
mov
ficompl
lea
or
insb
outsl
addr16
jnp
pop
push
rclb
cwtl
int
mov
dec
jnp
imul
outsl
sub
mov
scas
repnz
popf
jnp
leave
mov
insl
jnp
add
jno
mov
outsb
jnp
adc
iret
mov
and
cmpxchg
out
adc
jb
xor
jnp
ror
or
xchg
nop
gs
push
push
xchg
jnp
rcrb
xor
mov
mov
sbb
pop
pop
mov
adc
imul
sbb
add
or
sbb
rcrb
cli
les
jnp
inc
dec
mov
cli
ret
jle
fimuls
mov
xor
cltd
sub
cmp
lods
jnp
lods
pop
movsb
push
sbb
faddl
dec
push
aam
xlat
mov
inc
in
ja
pop
popf
iret
test
jnp
fsubp
enter
adc
cmc
push
sahf
push
jnp
xor
mov
xchg
repnz
and
cmp
add
hlt
or
mov
jae
xor
adc
and
outsl
xor
xchg
jnp
dec
and
lcall
xchg
decb
pop
sbb
xor
roll
arpl
jno
and
lahf
inc
mov
in
xchg
or
int3
push
mov
or
jmp
cli
imul
sbb
pusha
js
cmp
pushf
cmpsl
jnp
repnz
jl
iret
enter
imul
lret
icebp
jecxz
mov
jnp
notl
imul
xchg
dec
xor
mov
popa
sbb
sub
int
jg
jnp
xor
cmc
mov
push
and
jno
in
mov
and
jnp
ss
inc
loop
cmpl
cltd
lret
shl
arpl
cmp
push
pminub
popf
jnp
push
loopne
sbb
subl
iret
shlb
out
xchg
sub
jb
icebp
mov
or
jo
enter
jnp
push
xchg
xchg
mov
fld
rcll
dec
sub
shlb
xlat
jnp
fwait
mov
xor
je
out
push
cmp
out
mov
imul
cmp
std
jae
aad
aam
movsl
hlt
push
xchg
and
arpl
loope
pushf
popf
jnp
mov
sbb
imul
js
mov
scas
jg
mov
jbe
xor
call
pop
or
insb
cmc
mov
scas
sarb
xlat
outsb
outsl
imul
out
push
inc
sub
add
repnz
mov
sbb
dec
subl
jnp
icebp
ljmp
sub
fcmovbe
test
lcall
xor
das
sub
sti
bound
jnp
mov
movsl
scas
pop
sbb
sub
push
mov
jmp
xor
mov
fmul
jecxz
inc
jae
add
sub
test
mov
lret
cmp
repz
pop
add
mov
data16
pop
add
jbe
cmp
repnz
mov
xor
push
jnp
or
and
inc
cmp
inc
pop
cmp
call
in
mov
mov
jb
sub
jne
sbb
or
xchg
sub
ret
xchg
test
popa
mov
outsl
mov
stos
pop
mov
jno
jb
jbe
imul
or
enter
and
aad
jle
mov
sbb
jl
jmp
mov
xor
repnz
inc
sub
popa
cltd
sub
stc
jnp
fwait
lds
fimull
cmp
gs
adc
mov
pop
cmp
and
cwtl
cmpb
outsb
mov
jnp
push
dec
xorl
inc
xchg
push
clc
mov
or
adc
movsb
fwait
jnp
sbb
test
sbb
fistpll
mov
loope
popa
push
or
pushf
inc
shrl
out
into
sbb
jnp
daa
icebp
jno
and
cmp
std
push
jae
xor
cmpsl
mov
jnp
dec
daa
adc
xor
inc
push
cmp
scas
movsl
pop
mov
ret
xchg
push
mov
sarl
and
inc
aaa
sbb
cmpsb
out
sub
dec
cmp
xchg
stos
xchg
test
stc
mov
mov
cld
test
jnp
cmp
test
cmp
int
jnp
mov
push
push
cmp
in
xchg
jg
add
jno
inc
out
inc
add
dec
lret
xchg
pop
int
xrelease
mulb
mov
dec
js
bound
addr16
sbb
jl
popf
stos
lret
notb
jnp
add
scas
push
mov
jnp
mov
fldt
dec
rorl
arpl
xchg
cmc
jo
shlb
or
jnp
scas
xchg
xor
adcl
test
and
add
cmp
out
cld
bound
ss
jnp
ret
or
dec
dec
cmp
std
lret
pop
dec
jnp
aam
in
out
xchg
and
cmp
addb
jnp
inc
sub
addl
mov
pop
jo
leave
jnp
lahf
or
std
mov
mov
jb
imul
aas
popw
fucomi
scas
push
cli
jmp
mov
and
lret
call
repnz
lods
lahf
push
jnp
push
add
loopne
sarl
jno
push
aad
fcomip
lods
pop
jnp
hlt
test
invd
xor
pop
jnp
cmp
or
popa
repz
lds
test
dec
mov
mov
sub
mov
sahf
outsl
cmp
xchg
xlat
je
jnp
loope
push
lea
imul
jae
push
xchg
dec
outsb
les
sahf
mov
aas
loopne
xchg
std
lods
repnz
jnp
cld
push
outsb
push
fdivl
inc
stos
cmp
jnp
pop
out
jl
sti
cmc
int3
and
jnp
mov
out
call
jp
and
jnp
or
add
aaa
lea
repnz
ja
push
lret
stc
cmp
movsl
jbe
fs
rorb
fcomi
or
pop
cwtl
xchg
icebp
into
jne
cmp
pop
pop
outsl
leave
stos
fistl
mov
push
lret
inc
imul
outsl
shl
mov
js
and
stos
xchg
push
pop
aad
dec
mov
test
push
or
jnp
out
jae
and
xchg
dec
dec
mov
xorl
fwait
jne
sbb
ljmp
dec
pop
cmp
shrl
or
mov
faddp
popa
jnp
ss
adc
push
jae
mov
shrl
and
test
inc
fs
daa
mov
in
rolb
js
cld
or
popf
loop
mov
das
mov
push
sbb
cld
ret
pop
pop
jnp
mov
aas
roll
les
daa
sub
mov
jnp
mov
mov
ret
adc
icebp
hlt
fistpll
xchg
daa
loopne
out
rcrb
out
lods
jnp
dec
jbe
cmp
xlat
mov
dec
and
imul
push
add
lods
out
jnp
pop
sahf
pop
jb
add
mov
cld
jnp
mov
cmpb
jnp
imul
fmulp
mov
rolb
jecxz
lret
pop
outsl
mov
xor
jae
inc
sbb
mov
in
sbb
leave
fsubrl
push
fistpl
or
jnp
cmp
shrl
mov
cmp
cmp
in
stos
lahf
cmp
cld
inc
int3
fwait
jnp
scas
pusha
jl
daa
imul
aad
cld
push
into
add
jnp
fdivl
jo
push
and
repz
jge
xchg
mov
jnp
cmp
xlat
shlb
lods
jnp
xor
mov
mov
imul
pop
les
mov
fadd
test
add
jmp
xlat
jnp
push
cwtl
scas
jo
pop
jno
add
in
pop
jne
subl
mov
lock
mov
jg
out
pop
stos
test
outsl
repnz
loopne
sbb
sti
daa
add
outsl
sbb
aaa
iret
xchg
clc
jnp
pop
mov
and
pop
mov
stos
ja
cmp
or
jnp
repz
dec
mov
pushw
lret
fsubl
std
ja
cmp
lcall
aad
imul
push
enter
arpl
lock
xor
rcr
mov
dec
adcb
and
rcl
add
gs
jnp
mov
adc
clc
cs
jnp
mov
jnp
jno
ss
mov
mov
loope
fidivs
mov
mov
jecxz
in
inc
push
ja
mov
xor
mov
in
sub
pop
or
jnp
inc
inc
jns
push
mov
lcall
jnp
scas
xchg
push
in
loope
cltd
mov
push
inc
cmp
adc
xchg
jle
mov
xor
push
jnp
nop
das
es
jno
mov
push
mov
fdivrl
mov
pop
add
mov
and
pop
cltd
jnp
push
fimull
sbb
xchg
adc
lcall
mov
loope
cmp
cltd
mov
jns
movsl
cmp
jnp
in
sub
subb
popa
lds
shr
dec
cmp
imul
push
jle
insl
stos
into
jl
out
inc
insl
sbb
push
jae
xchg
or
jnp
mov
sub
fwait
enter
outsl
repz
cmp
push
movsl
xchg
call
jnp
xor
jno
sti
xchg
into
mov
pushf
sub
jnp
mov
js
mov
xchg
jno
xor
pop
lods
repz
stos
push
mov
dec
test
scas
insl
sbb
mov
inc
push
sub
mov
das
mov
pop
dec
pop
cmp
testb
shlb
fcomps
jnp
sbb
movsb
cmp
mov
movups
data16
adc
js
dec
outsl
pop
inc
daa
mov
jnp
add
lock
sbb
pusha
lcall
movsb
push
jnp
xor
mov
ret
sub
add
popa
aam
push
jmp
pop
ja
push
and
pop
push
mov
pop
dec
sbb
lcall
xchg
mov
out
adc
jnp
insl
jb
xor
pop
xchg
fs
jno
add
xchg
aaa
jae
xchg
in
sbb
lcall
dec
adc
mov
mov
mov
jp
out
jae
lret
jnp
aam
les
mov
mov
es
lea
ret
push
xor
sub
jnp
push
adc
jmp
or
hlt
outsl
mov
loope
mov
jnp
mov
mov
aas
pop
and
xchg
or
jle
in
in
dec
or
or
lods
xor
imul
dec
int
js
pop
jnp
and
push
jnp
repnz
push
jnp
pop
push
dec
adc
sbbl
or
aad
dec
outsb
jo
pop
mov
jns
xorl
stos
sahf
mov
push
pop
das
sub
dec
into
nop
cmp
xchg
ja
in
and
xor
push
dec
push
orb
push
je
adc
inc
jo
jnp
adc
jns
loope
sbb
ret
sbb
lods
mov
imul
sarb
sarb
shr
push
in
mov
jp
push
or
sub
jnp
mov
jle
xchg
loopne
ss
fmuls
jnp
xchg
sbb
daa
clc
jnp
sahf
xchg
sbb
repnz
cld
push
aaa
ds
jle
dec
and
mov
imul
fildl
push
fs
xchg
inc
inc
xchg
mov
cwtl
outsb
int
pop
addl
mov
jnp
and
pop
mov
addr16
in
nop
test
pushf
fcom
push
push
and
sub
ljmp
es
das
cmp
in
pop
push
cmp
push
and
mov
mov
roll
ja
scas
aam
icebp
movsl
sbb
and
jno
dec
es
jae
sahf
out
lock
mov
mov
lods
jno
push
movsl
jnp
fildl
sarb
inc
bound
jnp
push
rclb
or
push
stc
das
cmc
mov
sbb
mov
cmp
arpl
rcr
int
inc
or
jnp
or
je
pop
scas
insl
in
mov
jmp
addb
sub
stos
sub
add
imul
jecxz
sbb
inc
das
jnp
loopne
inc
inc
xchg
movsl
mov
lock
add
mov
std
lods
jnp
adc
adc
or
and
mov
loopne
imul
ds
hlt
jnp
icebp
mov
lock
pop
inc
scas
cs
aam
and
push
aad
jnp
mov
mov
sbb
push
test
imul
sbb
int3
lods
bnd
mov
pop
dec
jnp
loopne
adc
and
imul
aas
or
loop
fnstcw
inc
insl
mov
lods
in
jnp
lret
lcall
mov
fdiv
test
inc
jae
jle
out
sub
jnp
aam
mov
pop
fsts
mov
icebp
push
insl
fistpll
pop
pop
pop
or
xchg
jae
jle
arpl
sbb
arpl
jne
push
imul
ret
mov
stc
in
js
rcrb
sbb
mov
je
jnp
jbe
pop
cli
cmp
jg
and
or
add
cmp
es
test
decb
jle
mov
fisttpll
outsb
mov
scas
es
bound
jmp
jnp
pop
cmp
stos
out
xchg
mov
pop
adc
adc
jno
fwait
lret
popa
jmp
mov
jae
mov
mov
mov
mov
adc
mov
stc
sbbl
pop
addr16
repz
in
pop
jne
inc
scas
in
or
add
call
cmp
mov
jae
dec
sub
in
cmp
xchg
cmp
inc
imul
cmpsl
pushf
jle
jl
pop
imul
popf
faddl
insb
cmp
mov
mov
iret
push
jne
ret
mov
test
sub
bound
sub
and
pop
adc
shll
jnp
ja
mov
bound
lea
cwtl
cmp
fs
gs
xlat
roll
js
jnp
fwait
mov
pop
jnp
add
in
cmp
arpl
dec
adc
imul
adc
out
pushf
popf
jnp
into
repnz
enter
es
sub
sub
lcall
push
fistl
insl
jle
xorb
xchg
clc
lret
dec
jnp
mov
or
sbb
insl
mov
cmc
jnp
cmpsb
sub
sub
jae
cli
inc
imul
cmp
ljmp
cltd
cli
repz
jnp
mov
jnp
cmp
outsb
or
sub
into
or
sbb
jnp
adc
aam
addl
out
push
inc
jnp
push
xor
mov
mov
jp
or
imul
xor
dec
xor
insl
push
mov
mov
xor
dec
je
sbb
pop
xchg
mov
cmpsb
xchg
jno
xlat
in
jb
jnp
mov
fnstsw
jb
jnp
in
into
and
or
or
test
push
mov
adc
rcrl
and
adc
jmp
mov
pop
jne
jnp
jmp
outsb
push
fdivl
jge
repz
loop
lods
push
mov
sbb
add
or
test
dec
jne
lods
fists
jnp
popa
push
mov
inc
fdivs
daa
loope
les
mov
outsl
jne
and
mov
cmp
add
xchg
pop
mov
and
stc
cli
hlt
outsl
clc
or
jnp
mov
lahf
push
inc
sub
jbe
jge
lock
mov
jne
hlt
ret
jl
popa
les
mov
dec
loope
ds
pop
jp
int3
mov
cli
call
andl
pop
sub
xor
faddl
cmc
cmp
lea
test
fcompl
cli
jnp
stos
push
ljmp
mov
jnp
ret
loope
imul
lea
jge
shlb
xlat
ss
cvtps2pi
jnp
and
inc
jae
inc
sbb
mov
or
mov
out
xchg
rcr
imul
xchg
xchg
push
jne
cmp
addl
inc
push
dec
mov
pop
sti
or
add
das
insl
mov
or
outsb
fsubr
inc
jg
jo
dec
cmp
subb
mov
add
adc
leave
xor
or
enter
push
addr16
dec
out
lcall
adc
fidivrl
and
pop
cmp
into
add
je
fwait
imul
orb
fs
ljmp
mov
xor
insb
insb
lahf
out
or
jge
or
mov
insl
imul
xchg
std
adc
movsb
dec
mov
outsb
jmp
mov
push
jae
insl
mov
aas
xlat
push
mov
pop
unpcklps
repz
inc
or
and
jnp
pop
sbb
jae
or
imul
pop
cmp
ja
sub
incl
mov
xor
jecxz
test
scas
jae
lock
fisubrs
enter
cwtl
lret
repz
adc
push
inc
mov
bnd
aaa
adc
pop
jnp
inc
xorl
cmp
pop
fiadds
fidivl
inc
stos
ja
fstl
ds
lcall
int
sub
outsb
jne
sub
and
jnp
pop
repz
adc
jnp
xlat
cwtl
xchg
cmpsl
inc
inc
or
cld
xor
mov
or
insb
stos
dec
test
icebp
and
dec
sub
les
or
xchg
or
mov
or
mov
pop
rorl
mov
jnp
dec
jge
and
clc
inc
mov
adc
jae
mov
mov
xor
push
dec
into
mov
dec
adc
in
or
push
adc
mov
mov
shlb
add
pop
fidivs
icebp
cs
jnp
testb
cmp
mov
test
hlt
outsl
or
push
pop
shll
shlb
xor
xchg
je
jnp
mov
sahf
movups
add
leave
mov
sub
jle
push
lock
fdivrl
cltd
sbb
inc
jb
and
ljmp
ja
pop
xchg
int3
jnp
repnz
outsb
int
jnp
adc
out
dec
jecxz
adc
jnp
xchg
xchg
mov
sub
mov
pusha
int
sub
xchg
testb
mov
les
mov
dec
pop
fimuls
popa
push
pop
and
inc
xchg
push
mov
cmp
or
dec
imul
jecxz
fcoml
cmp
dec
enter
mov
inc
jle
xchg
outsl
pushf
jne
dec
adc
movsl
mov
divl
fldl
into
addr16
jnp
or
dec
jb
mov
jl
inc
ss
pop
je
mov
jmp
in
fs
movsb
sbb
add
jg
xor
inc
jnp
mov
pop
bound
mov
add
dec
xor
sbb
mov
das
xor
xchg
daa
dec
push
stos
mov
pop
dec
aas
cmpsl
mov
push
jbe
jnp
inc
and
sub
pop
insl
fcmove
popf
lock
jbe
outsb
or
or
mov
cltd
xchg
jnp
cmp
add
sub
xchg
push
dec
xor
jb
outsb
mov
add
adc
sbb
and
int3
in
test
jae
dec
imull
push
adc
pop
test
xchg
jnp
cwtl
cmp
xor
push
aam
jmp
sbb
jnp
push
xchg
sbb
jns,pt
jnp
add
or
cmp
pop
fucomp
addr16
mov
mov
jnp
jae
cmp
or
rorb
dec
popf
sub
frstor
or
mov
fmuls
fldenv
xor
jecxz
bound
cmp
mov
fisttpll
mov
mov
sti
xor
repnz
mov
xor
and
cld
mov
jp
mov
xlat
sbb
xchg
inc
push
ds
fs
in
mov
or
stos
or
clc
jg
dec
or
in
dec
loope
cwtl
fstpl
fmuls
sbb
sbb
or
popf
mov
shrb
xor
call
jnp
andl
jnp
inc
aad
mov
imul
push
jge
test
mov
jae
bound
pop
cld
cmp
jg
fcomps
lret
xor
aas
adc
cmpsb
xchg
jle
mov
push
jmp
jle
sbb
push
adc
xchg
mov
out
out
clc
jecxz
fsub
xchg
pop
jle
xchg
jnp
cmp
lods
les
mov
dec
push
in
fdivp
jnp
ret
stos
faddl
icebp
inc
hlt
sbb
pop
push
mov
push
xchg
dec
scas
cmpl
pushf
in
cmpsb
fistl
cmc
pop
xchg
std
outsl
jbe
add
aam
sub
jnp
push
movsb
mov
inc
sbb
cmp
fwait
aas
fisttpl
mov
adc
insb
popa
out
jno
stos
inc
mov
pop
jnp
xor
into
in
ss
jnp
mov
sub
or
sbb
xchg
imul
decl
jnp
xor
repz
pop
leave
jnp
inc
adc
enter
pop
scas
decl
inc
jnp
sti
call
pop
fcom
or
out
scas
inc
dec
jo
dec
push
push
imul
rcrb
dec
stos
jnp
xchg
mov
ja
inc
xor
jnp
pop
fwait
iret
inc
daa
lods
out
xchg
dec
pop
cmpsb
jno
addl
or
adc
jno
jbe
ljmp
and
jle
sub
sbb
jnp
add
imull
jns
shlb
jnp
shll
icebp
jnp
ret
push
mov
sahf
sbb
sti
jl
sbb
scas
cmp
test
jno
mov
and
popa
push
jae
sbb
ret
les
std
push
mov
pop
insl
mov
lahf
sub
push
sub
fstl
jnp
ret
cmp
jnp
enter
adc
mov
loop
lcall
cld
lods
ljmp
cltd
sub
mov
mov
cmpsb
mov
in
ror
fdivrl
sub
cmp
in
mov
ret
cltd
jo
dec
sub
pushf
cld
cli
mov
inc
mov
jecxz
lods
jnp
jmp
pop
adc
dec
sbb
imul
inc
pop
xchg
mov
cmc
idivl
stc
mov
sub
jb
stos
and
xor
push
and
jnp
lock
inc
aas
int3
stos
jbe
push
dec
lcall
int3
out
rcl
or
stos
jne
mov
jmp
jns
mov
inc
xchg
fimull
sub
and
ja
scas
inc
std
add
repz
sbb
mov
jnp
fdivl
xchg
mov
loopne
mov
pusha
subl
pushf
push
leave
outsl
loop
dec
dec
insb
xor
in
and
xor
mov
jnp
push
xchg
jnp
std
test
xchg
add
ss
insb
xchg
int
je
xchg
clc
xor
or
adc
pop
mov
enter
jnp
mov
sub
jnp
push
and
imul
mov
gs
sbb
inc
adc
or
scas
divb
jnp
push
xor
imul
bound
insl
loopne
data16
mov
fildll
jns
cmpsl
jecxz
mov
xor
aas
in
adc
inc
cmpsb
in
cld
dec
mov
xlat
not
fstpl
cmp
rep
or
mov
sub
inc
adc
aad
stc
lret
push
pop
ret
dec
jae
aaa
insb
sti
pop
cli
inc
daa
leave
pusha
sub
stc
add
xor
jae
mov
cld
sub
ret
dec
xchg
and
mov
cli
jl
lahf
test
dec
pop
jnp
mov
cld
push
or
pop
push
lods
outsl
jecxz
scas
fistpll
mov
jae
idivb
or
iret
lds
jnp
sub
or
je
nop
ret
jbe
jecxz
test
xor
and
xchg
sbb
shll
xlat
cmpsb
mov
and
daa
inc
jnp
push
in
or
dec
mov
xor
stos
call
mov
shrl
mov
add
addr16
int3
push
push
out
stc
cmp
daa
adc
and
loope
shrl
sahf
jae
test
push
push
or
imul
mov
mov
mov
pop
test
lahf
sbb
mov
mov
jge
add
sub
xchg
fs
jmp
in
std
mov
and
and
inc
jnp
popf
adc
mov
xor
fdivrl
inc
dec
test
lahf
adc
jnp
fwait
enter
cltd
pop
mov
mov
jo
jge
sbb
cltd
frstor
mov
pushf
xor
cmp
fldl
hlt
add
repz
pop
repz
mov
push
scas
cmp
or
or
jnp
iret
stos
outsl
mov
add
mov
das
cmc
loope
cli
lods
xchg
mov
pushf
dec
fs
push
dec
test
jae
insl
jnp
test
aas
mov
add
icebp
fs
mov
xchg
jb
push
push
clc
xchg
or
sahf
movb
out
repz
stos
sub
dec
dec
xchg
in
add
inc
hlt
jl
sbb
cmpsl
adc
sub
jmp
dec
adc
jnp
push
ret
xor
jo
stos
inc
je
jp
jnp
lcall
pop
push
add
lret
add
bound
mov
xor
lret
sub
imul
mov
in
shlb
dec
push
mov
test
nop
jnp
xchg
mov
mov
addr16
fcmovnb
inc
sub
nop
test
mov
les
dec
in
lret
add
lock
in
dec
sub
jae
rcll
enter
or
mov
jno
jg
rorl
adc
jnp
push
fnstsw
adc
addl
mov
scas
xor
inc
outsb
imul
jne
daa
xor
into
mov
iret
imul
mov
ret
jns
cmp
sub
test
jnp
xchg
adc
gs
inc
jnp
inc
popf
sub
mov
outsb
call
pcmpeqw
jnp
cmc
dec
adc
in
int3
jns
mov
jne
push
das
rolb
push
pop
mov
clc
out
or
int3
pop
mov
pusha
jmp
insl
scas
mov
fcoml
sbb
sbb
push
ja
ffreep
pop
xor
int3
pop
cmp
daa
insb
ficompl
repz
outsl
fisubrs
inc
or
jae
sbb
arpl
add
fs
stos
fsubrs
cmp
xchg
in
push
inc
int
cmp
xor
in
lret
stos
mov
inc
jp
xchg
std
fnstsw
adc
mov
push
sub
cmp
mov
in
leave
xor
bound
cld
pop
dec
enter
mov
mov
insl
sub
and
in
in
mov
cmc
or
int3
frstor
ds
jae
scas
inc
mov
sub
mov
or
in
inc
lods
xchg
xor
inc
insb
adc
mov
rcll
jnp
and
insl
add
jge
pop
sbb
mov
jb
jnp
insb
mov
or
popf
xor
in
xorb
movsl
push
stos
imul
push
mov
sub
pop
xor
outsl
cmp
sub
in
stos
imul
aaa
jnp
pop
and
loope
lock
pusha
sub
pop
push
jnp
add
mov
sub
cli
mov
arpl
cmpsb
fsubrs
out
adcb
push
and
aad
push
lods
scas
out
adc
xor
movsb
cmc
jecxz
pop
xchg
pop
sbb
insl
inc
pop
in
mov
cmc
dec
ljmp
out
es
sub
jae
imul
inc
es
pop
idiv
icebp
bound
jnp
arpl
test
nop
or
loop
jecxz
pushf
in
ja
or
je
subb
and
push
loope
xor
cmp
iret
cmp
bound
xchg
pop
cmpsb
pop
adc
jnp
mov
inc
mov
cltd
inc
pop
movsb
jb
lock
les
sub
sbb
int3
pop
jns
popa
xor
jnp
ds
push
xlat
fidivrs
sub
aaa
mov
pusha
mov
inc
outsl
jmp
or
sub
pusha
and
in
cs
jnp
or
insl
lcall
dec
stc
rcrl
ljmp
out
fcmovnb
pop
int3
sbb
jnp
add
in
scas
sub
or
ret
jb
out
and
jbe
adc
jo
leave
or
into
jnp
lahf
popa
pop
mov
pop
push
mov
imul
mov
shlb
push
dec
shrl
mov
arpl
jns
push
pop
stos
inc
push
into
pushf
inc
jno
js
rolb
add
or
lret
jnp
lahf
jle
insb
iret
loopne
jnp
aad
rol
jns
imul
lods
fnstenv
ja
lret
jnp
shlb
outsb
sub
insl
jnp
iret
mov
cmc
sbb
mov
mov
scas
pushf
call
cmp
mov
stos
iret
ljmp
enter
xchg
imul
inc
jmp
fnsave
and
fdivl
les
cmp
xchg
outsl
dec
xchg
xor
sti
out
sbbl
aas
inc
ret
push
dec
roll
sub
and
jnp
push
stos
loope
or
mov
dec
or
out
pop
clc
mov
adc
subb
loop
leave
bound
ret
test
aad
movsb
sbb
cmpl
lret
jle
mov
cmp
outsl
mov
sarb
cmc
imul
mov
sti
jnp
pop
fwait
dec
testb
ja
insl
jge
rcrl
jnp
fisubs
pop
jnp
push
xorb
xchg
push
je
outsl
out
sbb
jb
stc
inc
leave
pop
jnp
clc
std
or
daa
loopne
mov
inc
ja
ljmp
cmp
test
clc
arpl
add
xchg
lock
nop
jnp
test
jo
cmp
lahf
push
adc
lcall
cmc
and
clc
sarl
dec
jo
jmp
pop
mull
or
es
add
movsb
sbb
andl
rcl
jae
or
adc
inc
test
jb
cmp
adc
fidivs
inc
andl
cli
sub
cmp
mov
imul
push
in
insl
lea
pop
ret
adc
jno
pop
dec
jo
jnp
and
inc
enter
pusha
cmc
cmp
ljmp
mov
dec
xor
xchg
fidivrl
and
mov
lds
lcall
nop
push
push
in
sti
in
je
in
and
add
out
dec
add
jo
xor
lcall
inc
inc
mov
jnp
sub
shrl
jnp
xor
in
movsl
dec
jnp
sarb
mov
sbb
addr16
in
sbb
in
jnp
dec
or
fdivrs
xlat
jno
cmp
adc
cltd
imul
mov
leave
mov
dec
shlb
pop
popa
push
pop
in
jnp
icebp
movsb
or
iret
sub
mov
xchg
xchg
jnp
icebp
and
or
fsubs
push
dec
fs
stc
add
mov
scas
sub
or
mov
or
and
aas
out
mov
fstl
jbe
std
cmp
mov
mov
or
jnp
or
pusha
push
mov
jno
js
jae
shr
aaa
adcl
jnp
sbb
jnp,pn
mov
xchg
jne
and
jge
fists
je
aaa
lods
sahf
sbb
loop
std
sahf
outsl
imul
lcall
call
daa
js
arpl
mov
mov
das
push
xor
rcll
pop
out
jnp
push
push
or
jnp
ja
aaa
loopne
dec
sbb
adcl
sub
mov
jne
cmc
ljmp
jnp
sbb
test
cmp
orb
mov
push
loope
mov
jnp
pop
mov
enter
cmp
xchg
xchg
sub
pushw
jne
in
popa
pop
cld
cwtl
outsl
ficompl
stc
sbb
and
ja
fmull
jo
in
addr16
adc
lock
aas
jae
js
imul
mov
outsb
enter
stc
sub
dec
jnp
stos
pop
lret
and
pop
ja
out
push
sbb
mov
fwait
in
jne
out
jno
jnp
into
cmp
or
cmpb
inc
xchg
rolb
jnp
jns
cli
jl
sbb
sub
sbb
dec
jg
arpl
data16
cmp
je
pushf
enter
pop
in
mov
and
push
or
testb
sahf
cmp
bound
cmp
dec
push
xchg
pop
mov
cmc
fbld
cmp
dec
jg
loopne
jnp
push
or
pop
mov
jnp
dec
aaa
call
js
dec
jnp
adc
mov
jbe
adc
xchg
xchg
jnp
dec
lds
loope
sbb
movsl
jnp
shrl
ret
daa
pop
ja
mov
repz
and
inc
push
jmp
jne
dec
jnp
int3
gs
sarb
sti
repz
jnp
fwait
enter
cmp
jnp,pt
outsl
je
pop
pop
jno
sbb
sub
ret
push
push
or
mov
cmc
adc
das
imul
popa
pop
mov
movsb
adc
fwait
add
jp
push
clc
inc
lds
xor
pop
pop
rclb
cmp
xchg
jl
loope
jp
cmpsb
or
jns
or
cmc
or
setnp
cmpb
dec
dec
pusha
shrl
ret
mov
and
jecxz
mov
imul
and
mov
push
into
das
xchg
mov
jne
jecxz
mov
addr16
das
sti
sarl
aas
jp
pop
jle
mov
aam
gs
rcr
fwait
or
xor
js
clc
fcomip
xor
cld
push
pop
mov
or
xorl
pop
imul
mov
outsl
mov
ret
rcrb
arpl
scas
in
fwait
in
xor
in
fs
xchg
mov
daa
mov
das
shrl
dec
sub
fwait
jecxz
pushf
fcoml
iret
lea
dec
xchg
lahf
xchg
dec
test
nop
jnp
sbb
movsl
jmp
jnp
dec
mov
sahf
jnp
mov
je
stos
aad
fnstsw
test
nop
jnp
xchg
mov
mov
push
jnp
imul
mov
sub
mov
pop
inc
fnstcw
jne
pop
lods
jge
clc
lcall
or
jg
iret
outsl
mov
jnp
inc
xchg
and
repnz
out
lods
lcall
jbe
jmp
mov
cmc
jnp
popf
into
mov
mov
outsl
ret
in
lret
cmp
or
jnp
lock
lret
sub
ljmp
mov
cmp
jnp
pop
dec
out
and
lock
les
clc
addr16
lret
mov
mov
sub
jnp
popa
mov
xor
sbb
mov
sarb
ljmp
adc
and
mov
jnp
cmp
or
or
push
jge
pop
out
pop
jnp
aaa
push
xor
xchg
mov
inc
push
and
sub
jmp
das
loopne
testl
cmpb
sbb
or
call
out
mov
pop
jnp
xchg
call
ss
loopne
pop
jae
sub
jg
xchg
jnp
mov
mov
mov
pop
insl
jae
add
and
push
sub
mov
lds
fs
adc
hlt
xchg
pop
xlat
mov
xchg
mov
dec
orb
addr16
testb
adc
lods
cmp
pop
sbb
outsl
test
mov
dec
mov
cmp
xor
add
pop
or
or
jnp
jbe
and
daa
movsb
out
inc
mov
sub
in
outsb
xchg
jnp
in
fwait
and
jbe
inc
loopne
cmp
dec
fstpl
gs
add
xor
arpl
mov
outsb
add
movsb
mov
pop
or
test
pop
sub
test
je
stos
lods
mov
in
fs
sbb
mov
and
in
xchg
cwtl
jmp
popa
inc
ds
jnp
mov
or
xchg
mov
aam
mov
dec
sub
mov
gs
sahf
aam
sbb
add
sub
mov
jnp
repz
mov
lcall
mov
iret
cli
mov
cmp
dec
insl
jnp
cmp
mov
repnz
jno
loop
dec
sub
lret
rolb
ret
sub
sarb
xchg
sbb
in
push
mul
jnp
lock
dec
sub
sub
subl
ss
movsb
dec
shl
lret
xchg
loopne
dec
xchg
and
sub
fmuls
ljmp
pop
mov
adc
jne
inc
mov
lods
jecxz
jno
mov
fisttps
outsl
ret
mov
sub
jne
mov
mov
gs
mov
sbbl
cli
jecxz
push
adc
adc
imul
fbstp
ds
test
xor
shlb
mov
push
pop
lock
outsl
push
in
cmpsb
divl
mov
add
fstp
fsub
fdivr
xchg
xorb
jl
shrb
adc
loope
lret
or
je
icebp
or
fnstsw
out
pushf
clc
fdivl
fnstenv
cld
mov
call
repz
loope
fcomp
add
enter
jbe
dec
or
mov
subl
inc
imul
hlt
inc
mov
xor
dec
push
sub
outsb
dec
imul
xor
inc
add
test
outsl
fsub
fnstcw
or
insl
andb
and
enter
sarb
cmp
pop
arpl
push
mov
add
adc
je
lret
mov
inc
in
icebp
jge
sub
push
add
inc
ss
mov
pop
mov
out
mov
sbb
and
jnp
dec
mov
insb
imul
jnp
jb
mov
inc
stc
cmpsl
jnp
gs
mov
insl
sub
xlat
and
out
or
jnp
fsubs
aas
nop
jnp
dec
scas
ss
or
and
sbb
stc
ljmp
push
out
dec
mov
and
ds
arpl
xchg
pop
mov
std
ja
fsubp
aas
or
jbe
insl
inc
xor
jmp
hlt
adc
cmp
push
sbb
imul
ds
push
in
sbb
sahf
adc
outsb
stc
jl
mov
mov
mov
jb
rolb
ffree
cmp
cmp
and
insl
popf
adc
mov
andl
jle
orl
ja
outsb
dec
mov
xor
dec
into
lret
pop
repnz
pop
cwtl
pop
icebp
xchg
lock
lds
ss
jnp
stos
cmpsl
idivl
aad
in
and
xor
pop
out
imul
shl
xchg
add
out
adc
jge
adc
sarb
in
daa
pop
push
mov
gs
xor
jnp
sbb
fnstsw
sbb
pop
mov
sub
sub
sar
pop
fmul
jae
xor
push
jnp
imul
popf
sbb
in
jnp
jno
jbe
jnp
dec
xlat
push
jnp
jb
pop
iret
inc
push
testl
mov
jnp
mov
lahf
adc
add
int3
mov
jnp
or
pushl
fidivrl
insb
xor
in
sub
sbb
out
clc
jl
clc
dec
add
lock
cmp
sbb
push
pop
dec
imul
pop
adc
mov
or
xor
sub
ljmp
iret
adc
push
mov
dec
inc
popf
dec
mov
leave
sbb
insb
les
ljmp
mov
xor
mov
addb
lea
imul
xor
pop
jnp
mov
cmpsb
pop
jnp
dec
xchg
xor
out
ret
jnp
adc
loopne
pop
outsl
cs
rolb
jecxz
sbb
daa
mov
dec
or
sbb
lcall
cli
imul
out
mov
mov
cltd
scas
stos
out
sbb
jmp
inc
jo
cli
lcall
jns
imul
adc
or
sbb
test
lods
and
mov
inc
xor
je
or
sub
jno
push
jae
sub
fldcw
jb
ja
jl
inc
bound
es
fisubs
pop
xor
xor
jle
js
test
fnstsw
jbe
push
imul
pop
ficoml
out
mov
jnp
mov
sbb
jnp
fs
cmp
test
nop
inc
sbb
mov
push
add
insb
cmp
jo
push
push
xchg
mov
jnp
gs
mov
adc
sub
nop
sub
scas
loope
jp
jns
fneni(8087
dec
pop
jle
mov
push
sbb
shrl
movsb
shll
js
xchg
mov
adcb
ja
jnp
pusha
lods
xor
xchg
adc
dec
aad
add
insl
or
push
jno
jnp
popf
push
cmp
mov
cmp
loop
jnp
rol
lret
sub
adc
lahf
mov
in
cmpb
mov
test
sbb
repz
leave
ja
dec
iret
test
or
addr16
cld
lea
mov
iret
and
adc
pop
add
push
sbb
cmp
filds
mov
jnp
add
inc
adc
cmpsl
insl
test
nop
mov
in
sbb
fwait
jbe
inc
jne
insl
mov
push
sub
add
mov
mov
pop
jmp
arpl
lock
les
jnp
fistpll
push
jnp
test
test
cltd
aad
sbb
rorb
jnp
and
cmp
out
and
sub
les
inc
aas
into
lock
jnp
popa
or
jns
ja
mov
xor
cmp
aas
jnp
and
insl
aam
dec
ret
lcall
jnp
xchg
sub
rcr
iret
or
push
pop
xor
ds
mov
jmp
jnp
js
stos
inc
lcall
popf
pop
jg
jnp
dec
push
push
icebp
jnp
in
sbb
sub
adc
cmp
lods
sbb
popf
in
push
outsl
imul
add
cld
jae
mov
jnp
fxch
cmpsb
or
lods
fistps
icebp
jae
jbe
pop
loope
fcomps
aam
ds
jnp
sbbb
sbb
stos
or
jnp
pop
fs
cmp
cmp
js
je
test
in
andl
out
xlat
lahf
lds
mov
inc
incl
jnp
addr16
mov
cmp
mov
dec
inc
test
xor
mov
jecxz
lods
mov
negb
push
add
cmpsb
jnp
inc
pop
fistpl
stos
rolb
test
aaa
sbb
inc
dec
jmp
jne
cmp
sahf
push
mov
shll
xchg
addr16
jnp
out
mov
and
lcall
jns
cmpsb
adc
mov
cmp
pop
clc
int
jae
mov
cmpl
sbb
stos
mov
loope
inc
js
mov
imul
dec
sbb
jle
in
dec
jae
pop
jnp
or
shll
push
xchg
jnp
mov
pop
inc
xchg
xchg
data16
popl
imul
pop
stc
cmp
adc
sbb
adc
pop
push
lcall
bound
cmp
inc
stc
lret
les
and
hlt
xor
jne
jecxz
mov
jp
push
shrl
iret
in
mov
cmp
pop
jae
cmc
pop
lds
ja
in
test
clc
jns
fs
fldl
pop
fmuls
push
gs
in
cmp
stc
or
lret
or
pop
fldcw
cld
dec
adc
or
pop
js
push
cmc
leave
das
cmp
cmpsb
jp
ret
xchg
int
mov
cmp
pop
jge
insl
and
mov
inc
sbb
fwait
in
loop
jne
sti
inc
fmull
aam
js
out
icebp
cmc
or
xor
or
mov
and
cmpsl
jnp
int
lret
shl
scas
nop
jnp
xlat
xchg
and
stos
cmc
decb
inc
aas
sbb
jnp
xor
data16
jno
and
pop
in
sbbb
data16
push
icebp
das
jnp
sub
sbb
ja
ja
daa
adc
scas
imul
jno
ret
xor
pop
add
mov
mov
outsl
push
or
ss
cmp
pushf
mov
xchg
adc
movsl
jnp
dec
icebp
lea
jnp
xchg
and
xor
mov
add
jnp
das
loope
orl
insb
fbstp
pop
mov
or
xchg
in
xchg
jecxz
dec
dec
bound
jge
and
test
sbb
into
or
xor
inc
add
jne
xchg
cmp
data16
pop
insl
dec
push
mov
movq
fwait
jno
jnp
mov
stc
and
xchg
outsl
iret
test
sahf
imul
xchg
ja
cmp
jb
call
jnp
jg
mov
adc
mov
mov
cmp
dec
pop
pop
into
mov
fmuls
jne
or
jnp
lahf
mov
mull
pop
jnp
jp
add
test
push
dec
mov
and
mov
lea
test
addr16
sbb
jnp
push
inc
mov
out
inc
xor
jnp
xchg
in
hlt
xchg
fadds
jnp
mov
sti
push
dec
pop
jl
insb
xor
sahf
pop
inc
jno
push
mov
out
cmpsl
pop
and
jnp
fcmovb
sbb
push
sub
xor
lcall
pushf
xchg
sub
gs
xor
mov
mov
fdivp
sahf
jno
sar
lahf
jnp
jmp
mov
mov
or
mov
dec
xchg
mov
sub
jnp
test
and
aaa
stos
arpl
insl
pop
push
jae
fdivrl
dec
xchg
mov
ss
inc
in
movsl
sbb
insl
ret
add
je
mov
aad
adc
cmp
fistpll
daa
pop
stos
addl
sub
jle
std
pushl
shrl
cmp
or
jle
cmp
ret
sub
loop
mul
mov
jge
movsb
cld
icebp
jne
mov
addr16
lds
push
idiv
fwait
inc
imul
ja
sub
je
push
jns
mov
jnp
fstp
pop
jp
mov
imul
les
popa
push
jnp
stc
imul
jnp
sbb
or
jbe
jl
sub
mov
or
dec
push
les
pop
stc
sub
ret
mov
iret
mov
insl
arpl
jnp
pusha
jae
notl
lahf
jnp
out
cmp
and
icebp
jnp
sbb
inc
int3
shl
dec
cmp
xchg
xlat
dec
popf
mov
sbb
imul
mov
dec
test
or
push
mov
pop
xchg
js
outsl
fdivs
in
mov
stos
and
enter
add
or
arpl
jae
cmp
mov
int
shrl
cmc
jnp
inc
mov
jp
jns
pop
aaa
sub
jbe
xor
sub
scas
es
movsl
jnp
popa
inc
sub
or
mov
cmpsl
mov
cwtl
jnp
sbb
jnp
and
scas
movsl
ljmp
push
jb
stos
pop
pop
mov
cmpsl
lahf
mov
clc
mov
xor
xor
nop
sub
sbb
aam
or
dec
mov
pop
clc
pop
in
stos
faddp
sub
jl
jnp
notb
sub
fnstcw
rorl
push
mov
mov
dec
scas
mov
add
lret
jnp
adc
gs
xor
push
xchg
cmp
shl
dec
mov
fwait
dec
mov
jnp
fimull
jnp
insb
pop
sbb
popf
outsl
jnp
jb
xchg
stos
popa
lock
test
sti
jns
decl
int3
in
cmp
mov
inc
mov
lahf
loop
push
fadds
pop
jnp
pop
fwait
sub
xchg
sarb
imul
sub
or
jg
fisubrl
aam
jnp
aad
into
push
out
sbb
push
mov
mov
mov
ret
ja
jnp
ficoms
push
jae
js
or
pop
jne
jae
stc
sub
sbb
push
mov
push
push
frstor
cmp
and
sahf
jnp
lahf
jle
repz
sub
xor
mov
pop
stos
imul
mov
je
sub
and
outsl
push
shll
pop
fsubl
ret
adc
aam
loope
push
xchg
xor
cmpsl
jnp
fsqrt
lock
lods
add
insb
jne
leave
lcall
loopne
jle
fcoms
cmpl
dec
or
jne
jb
mov
jmp
hlt
xor
jbe
dec
xor
xchg
mov
jbe
je
aas
jae
dec
pop
jecxz
inc
sub
mov
dec
jne
pop
popa
rorl
fucomp
dec
mov
repz
orl
xchg
jp
pop
cmp
mov
imul
lahf
adc
mov
int3
mov
sbb
repz
cli
add
xor
mov
cmc
sub
fldcw
xor
test
std
nop
push
adc
jno
icebp
lahf
jnp
push
cmpsb
fs
dec
sbb
mov
sbb
jnp
mov
inc
jae
filds
mov
cmp
add
cmpsl
adc
dec
leave
xchg
jae
mov
jnp
mov
jne
jnp
in
push
jo
pop
jnp,pt
sti
aas
sbb
xchg
mov
pusha
jnp
pop
adc
enter
push
jno
jge
mov
imul
and
mov
jns
push
jne
stc
in
xorb
fisttpll
dec
pop
pop
jg
in
ficoms
out
cli
dec
jnp
push
inc
add
popa
shrb
jnp
test
xor
in
jnp
or
pop
jo
and
movsl
pop
ja
sub
test
jnp
icebp
bound
sub
ljmp
mov
push
ss
ds
int
add
mov
shll
jnp
rorb
out
and
movsb
cmp
mov
cmp
dec
adc
sbb
jnp
adc
in
stos
add
adc
mov
jnp
inc
movsl
mov
mov
jnp
dec
cmp
xchg
mov
jns
push
cmc
insl
mov
sahf
lcall
pop
jnp
cmp
sub
sub
ret
xor
jbe
add
or
jnp
ss
xchg
mov
inc
jnp
jmp
jb
movsl
lret
adc
xchg
adc
push
jnp
inc
in
push
cli
nop
in
xchg
jnp
aas
adc
jnp
scas
mov
cmp
fsts
dec
std
adc
inc
lret
jno
test
fistpll
rep
cmpb
xlat
push
and
pop
jnp
push
mov
rorl
pop
divl
les
addl
inc
push
jns
int
lock
jecxz
out
push
mov
and
push
or
or
inc
sub
pop
repz
ficomps
adc
arpl
lock
movsb
jae,pt
sbb
ss
negl
jnp
ja
stos
xchg
out
hlt
ja
fadds
cmpsb
mov
outsl
jp
push
or
adc
cmp
into
jnp
fldt
push
cmp
xchg
in
lock
dec
push
dec
int3
rorb
xchg
and
add
sbb
cli
out
cmp
mov
negl
push
inc
xchg
jnp
lock
sahf
jnp
out
push
jnp
cmp
lret
pop
arpl
xchg
jnp
test
out
jno
sub
mov
data16
inc
or
cmp
mov
sbb
mov
outsl
int
xchg
cli
xlat
adc
jmp
and
fcomps
fadd
cmp
pop
inc
addr16
xchg
adc
sub
or
sarl
jle
scas
cli
cwtl
cmp
mov
daa
imul
pop
jp
dec
insb
push
push
jnp
das
push
fnsave
repnz
pop
loope
add
ja
pop
dec
xor
xchg
loop
cmpsl
xchg
lods
jnp,pt
mov
mov
imul
icebp
aas
loopne
lcall
jnp
sbb
pushf
mov
add
mov
xchg
and
scas
lods
mov
cmpsl
jnp
mov
jnp
stc
mov
or
cmp
adc
mov
jnp
inc
mov
les
rcrb
mov
and
xchg
int3
push
sbb
je
jno,pt
fcmovu
dec
data16
mov
jne
mov
outsb
dec
test
outsl
xchg
mov
and
stos
fdivrs
nop
aaa
addb
pusha
pop
add
mov
dec
mov
cmp
jne
pop
in
shlb
insb
mov
sbb
sub
dec
call
int3
jnp
sbb
lods
add
cmp
adc
pusha
mov
sub
les
stos
neg
xchg
adc
push
in
pop
inc
pop
add
jne
jle
imul
xchg
mov
insb
fldt
mov
insl
icebp
inc
xchg
jns
bound
or
loop
dec
mov
cmpsl
orl
push
adc
lahf
add
fimull
jle
in
lret
call
jns
jne
jecxz
inc
push
mov
xlat
outsl
sbb
mov
out
jb
dec
out
loopne
add
mov
add
mov
orl
fdiv
stc
popa
pusha
jnp
jne
ljmp
and
jnp
or
pop
push
out
repnz
lods
xchg
test
inc
pop
lret
fistps
int3
xor
lret
xchg
mov
push
jnp
inc
xchg
push
xor
outsl
fcoms
ds
movsl
rcrb
lahf
leave
outsb
scas
xchg
dec
xor
fstps
cltd
dec
add
and
fwait
cmp
push
push
lods
xlat
jnp
jl
lret
xchg
or
imulb
ror
xor
xchg
adc
push
and
jnp
jp
push
add
shrl
ret
xlat
jnp
cwtl
inc
enter
adc
push
lods
pop
jne
jnp
xlat
pop
dec
jle
ja
jnp
jmp
push
xor
outsb
cmp
inc
or
mov
fwait
aaa
adcb
adc
push
or
pop
adc
les
xor
sets
cmp
adc
insl
pop
nop
fadd
lret
imul
mov
add
sub
sti
outsb
pusha
mov
inc
adc
pop
mov
mov
xor
cmpsb
jmp
pop
pop
push
xchg
scas
lret
popf
pop
push
fwait
adc
cmp
xlat
add
xchg
out
jno
jmp
lahf
and
cmpsb
mov
pop
lds
cmp
aam
xor
pop
jecxz
mov
push
jle
jbe
out
pop
sbb
jnp
mov
gs
add
in
repnz
inc
dec
add
mov
loopne
mov
ret
pop
xchg
mov
jno
je
mov
aad
fs
inc
pop
jnp
outsl
sbb
push
inc
jnp
xchg
sub
iret
and
fisttpll
adc
jne
add
push
push
loope
jnp
std
fs
cmpsl
sub
jae
lods
insl
enter
add
pop
pusha
mov
push
sahf
mov
add
outsl
mov
xor
cmpsl
idivl
inc
jnp
and
mov
dec
lret
jnp
pop
pop
sub
call
cmp
or
xchg
mov
sahf
jo
push
dec
adc
fstps
scas
sub
das
jnp
ljmp
jnp
leave
dec
add
cmp
out
sub
into
xchg
sub
daa
dec
or
icebp
shr
jno
or
stc
sbb
adc
mov
ret
jnp
movsb
iret
int3
std
mov
in
mov
int
jecxz
jo
mov
jnp
xor
test
push
jnp
adc
mov
sbb
aas
or
popf
sti
or
jns
mov
inc
mov
add
jae
rcrb
out
cltd
sti
les
cmc
sub
xchg
mov
sbb
mov
in
scas
dec
or
loopne
loop,pt
mov
imul
ss
testl
dec
imul
jnp
popf
pop
sbb
adc
or
jmp
jne
dec
fildll
push
pop
imul
pop
pop
int
cmp
push
and
mov
mov
clc
mov
jnp
dec
fwait
xchg
sahf
shll
lret
sbb
hlt
mov
ds
test
jns
jbe
les
xchg
sub
lahf
mov
cli
stos
or
loope
adc
inc
adc
xchg
fcomps
out
out
xorl
and
mov
lcall
ja
cmpl
inc
lods
xor
fiaddl
lock
mov
sahf
and
pop
mov
scas
pop
or
mov
mov
ljmp
cmpsb
out
icebp
jbe
mov
mov
push
cmp
int3
rcrb
push
pop
inc
pop
fwait
lret
dec
sub
jnp
push
scas
dec
sahf
mov
mov
mov
lds
cwtl
enter
and
sub
pop
pushf
xchg
xor
jnp
bnd
sub
jg
fnstenv
mov
jnp
fstps
jle
push
mov
lret
cmp
ret
cmpsl
imul
loope
xor
jnp
in
lahf
cmp
sub
mov
les
jnp
jbe
mov
les
insb
xchg
and
scas
neg
lods
es
clc
pusha
stos
jns
xchg
imull
xchg
ljmp
jo
jnp
lds
ja
sub
xor
loope
insl
xchg
ror
or
mov
leave
icebp
imul
rorl
js
lcall
adc
jae
push
push
xchg
call
mov
push
mulb
mov
stc
imul
push
xor
sbb
cmp
sub
or
jne
stc
stc
dec
pop
dec
mov
addr16
dec
ja
hlt
insb
fs
jnp
cltd
faddp
mov
push
jnp
popf
pusha
leave
jae
mov
fld1
stos
imul
stos
pop
popa
jl
push
sbb
ja
xor
stc
lahf
mov
sbb
xchg
mov
cld
jne
cwtl
dec
js
imul
rcrb
es
adc
pop
stc
das
data16
movsb
jnp
push
adc
rcl
mov
mov
test
imul
jb
mov
mov
out
jnp
in
addr16
sbb
xchg
stc
dec
xorb
fcomp
bound
pop
jae
mov
repnz
adc
add
in
jnp
sub
fdivs
ficoms
loop
jecxz
adc
pop
push
mov
mov
jnp
into
insl
add
or
xchg
xchg
nop
dec
inc
scas
jae
jnp
pop
jle
mov
shll
cwtl
into
or
cmp
sbb
mov
sti
jae
jb
cmpsb
jnp
shrl
lcall
lret
jnp
push
test
xchg
incb
adcb
sbb
jb
inc
dec
jnp
add
fstl
stos
shll
cld
and
inc
jnp
mov
pop
mov
mov
jl
idivl
adcb
jo
jnp
jns
mov
lds
push
and
cmp
dec
jnp
sbb
and
sub
in
decb
out
ja
out
insl
outsl
aad
xlat
mov
insb
jae
mov
outsb
sbb
mov
mov
js
push
jnp
fcmovnb
pop
xor
mov
scas
aas
mov
icebp
jns
xlat
jnp
mov
das
and
lock
xor
jmp
stos
push
pop
mov
arpl
pop
clc
sbb
mov
mov
adc
lock
mov
sub
sbb
xor
xor
jae
sbb
inc
jnp
xchg
aaa
inc
jge
jae
jnp
pushl
jl
sbb
sahf
insb
jecxz
sti
mov
adc
aaa
orb
xor
sbb
xor
cmp
orl
arpl
sti
and
pusha
loope
push
jnp
or
ds
and
xor
sub
mov
cmp
fisttpll
insl
and
push
and
lahf
jae
and
test
sub
pop
mov
xlat
lods
xchg
xchg
js
subl
aaa
sbb
call
fs
enter
jnp
or
push
mov
mov
adc
add
jno
in
imul
mov
xlat
rorb
sti
jbe
mov
jnp
xor
inc
ds
inc
push
jno
sub
jnp
lods
rorl
hlt
mov
mull
jg
jnp
push
add
sahf
fnstcw
lret
mov
and
xchg
cmp
jnp
andb
pop
lods
xlat
jnp
mov
cltd
dec
loopne
sub
dec
into
aas
imul
xchg
dec
mov
ja
pop
test
aad
daa
gs
dec
pop
dec
ret
js
outsb
lock
mov
sub
sbb
fisubrs
cmp
cmp
mov
mov
je
adc
inc
lods
or
dec
movsl
mov
movsb
or
xchg
lret
hlt
mov
jnp
xor
push
scas
adc
push
sub
stos
xchg
pop
sbb
inc
jae
cmp
lods
mov
fstl
jbe
out
mov
rorl
scas
push
lock
or
cltd
movsl
enter
inc
aad
cmp
pop
out
in
imul
sbb
sub
fldcw
sbb
lods
popf
inc
std
jnp
jbe
xor
lods
or
popa
sbb
push
push
jnp
adc
cmp
in
pop
dec
jnp,pt
mov
sub
imul
enter
jbe
add
and
movsl
fsub
jg
mov
aad
inc
imul
cs
shrl
ja
sub
and
leave
push
sbb
or
jmp
cwtl
in
mov
jbe
sub
aad
mov
sub
imul
sti
inc
in
jle
fs
jnp
call
stc
mov
sbb
in
cmc
and
inc
jnp
int3
and
sarl
pusha
mov
inc
or
xor
jnp
cmp
cmpsb
adc
sub
cmp
aaa
jge
jb
sbb
mov
das
xor
xor
and
nop
mov
jb
dec
negb
or
mov
dec
ds
or
ss
push
out
push
outsl
dec
jmp
jge
push
in
sbb
mov
mov
popa
add
xor
add
pop
mov
add
daa
test
sbb
or
jne
xor
and
cmp
lea
clc
stos
jmp
call
jne
jnp
andl
adc
cli
ss
lret
mov
out
mov
pop
data16
jns
sbbl
jnp
jno
in
pop
lods
ds
lea
cmp
jae
rcrb
pop
lcall
pop
or
jg
adc
cmp
bound
fincstp
pop
ret
lret
jnp
mov
push
xor
mov
jnp
or
or
das
and
lock
popl
sub
push
push
jno
xchg
sti
rcl
jge
test
insb
push
fstpt
aas
loop
sbb
imul
imul
test
cltd
loope
je
or
loop
and
in
pop
insl
into
sub
sar
imul
fistl
outsb
cmp
ja
or
mov
insl
push
inc
jnp
pop
cmp
jecxz
call
jnp
mov
sub
adc
or
das
movsb
fisubs
mov
jae
lret
cmp
gs
jno
loop
rol
mov
jno
mov
dec
je
sbb
ret
dec
and
dec
in
loope
mov
jg
push
cwtl
mov
adc
data16
sbb
add
jg
popa
jnp
notb
out
js
aaa
mov
leave
jno
call
psrld
jb
ret
dec
lret
rcr
cmpsb
int
jo
jnp
inc
mov
imul
add
or
scas
mov
mov
adc
aam
mov
dec
jg
xchg
pop
mov
out
adc
sbb
cwtl
clc
mov
je
mov
aas
jnp
xchg
fsubl
push
add
into
sub
hlt
lahf
dec
push
call
cmp
orb
lods
mov
adc
cli
scas
jnp
xlat
mov
shll
daa
jp
testb
cmp
repz
into
hlt
cmpsb
jnp
push
mov
jnp
mov
and
scas
sub
repnz
push
xchg
or
clc
popf
push
xchg
fstpt
lret
inc
sahf
icebp
jnp
enter
dec
add
ss
sbb
loop
repz
jnp
jb
ret
fsubr
jnp
cmpsb
fs
mov
out
jo
cmp
push
sub
jge
ja
or
lods
enter
mov
xchg
lea
fwait
pop
jnp
mov
pop
cs
pop
push
mov
jne
insl
push
jnp
fdivrs
clc
jmp
sar
jle
jae
data16
and
push
les
pop
dec
add
dec
ret
xor
add
fs
sbb
aaa
es
xchg
xchg
roll
out
pushf
or
fucomip
imul
cs
gs
in
movsb
cmp
lcall
push
lock
sbb
je
lret
hlt
push
hlt
clc
jnp
dec
sti
mov
push
in
jnp
lea
mov
sbb
push
mov
in
pop
es
fisubs
cmp
orl
insb
movl
add
shrb
xor
mov
inc
mov
aam
xor
imul
lret
cmp
pop
adcb
cmpb
es
outsl
push
sti
pop
mov
idiv
int
push
cmp
mov
scas
vpunpcklqdq
mov
cmp
xor
adc
inc
lods
jmp
jnp
lahf
add
cmc
imul
mov
jnp
bound
popl
aaa
jnp
ljmp
adc
lock
ss
bswap
mov
add
mov
aaa
dec
lock
jg
icebp
jl
push
pop
loop
sub
sbb
dec
jns
pop
push
dec
test
inc
push
xorb
arpl
lret
test
outsl
xor
cmp
fdivp
out
jno
mov
jle
int3
mov
pop
stos
sbb
lock
fisubl
jmp
cld
pusha
dec
ljmp
mov
pop
imul
sub
jns
fsubrs
cmp
ds
scas
or
xlat
jnp
outsb
inc
push
and
push
sub
sbb
fistps
gs
push
inc
jns
lcall
mov
or
arpl
inc
imul
jge
push
loope
jnp
pop
data16
ss
out
or
cmc
dec
repnz
scas
jnp
shrb
push
mov
jnp
clc
jmp
data16
push
pop
outsb
fstl
jb
pushf
add
add
jnp
out
mov
jnp
js
lcall
xchg
xchg
and
inc
cmp
pop
cld
scas
int3
adc
jae
lods
cmp
bnd
std
enter
or
jp
fnsave
stos
jnp
int
or
jnp
int3
xlat
js
ret
pop
mov
sbb
jae
loop
js
loope
sub
fisubrs
sbb
xlat
pop
das
into
mov
out
pop
les
jae
inc
sub
jbe
sbb
stc
mov
jnp
fsubr
push
out
mov
mov
test
test
ja
scas
mov
jns
cmp
jecxz
mov
ja
or
stos
jnp
test
push
pop
popl
call
dec
mov
popf
scas
test
push
aaa
mov
in
jnp
ja
sbb
lcall
leave
js
sub
jb
xor
mov
out
into
outsl
jnp
fldenv
cmpsl
and
cltd
mov
test
push
mov
cmpb
mov
movsl
xchg
pusha
sub
mov
into
mov
jns
in
pop
test
movsb
xor
lahf
add
add
clc
sar
or
or
and
jns
lret
push
push
mov
dec
inc
mull
jne
out
push
mov
scas
lods
add
inc
mov
fstpt
outsl
test
adc
pop
or
adc
cmpsb
jne
push
hlt
dec
jnp
lcall
jnp
xchg
cld
std
jp
adcb
push
in
out
dec
cmpl
mov
jnp
mov
cmpb
sbb
arpl
add
pop
adc
mov
rcr
xor
stos
push
nop
in
out
jnp
xchg
mov
push
aas
aad
add
add
imul
lret
cli
xlat
out
mov
dec
xchg
out
jnp
pusha
cld
scas
test
xor
adc
ljmp
mov
enter
stc
in
mov
cmp
pop
jecxz
jnp
sub
pop
xor
es
ja
bound
pop
mov
jp
lock
jl
jno
rorl
test
jnp
add
out
inc
push
inc
sub
fdivrl
rol
mov
insb
repnz
pop
je
cmpsl
outsl
sar
inc
xor
push
ja
cmp
fldt
inc
adc
ds
pop
insl
mov
jno
aad
mov
pop
mov
jnp
das
pop
outsb
sbb
insb
lret
or
outsl
xor
sbb
test
stos
jnp
push
insb
dec
xchg
repnz
setg
xor
jnp
xor
enter
subb
jo
mov
insb
movsb
imul
inc
pop
xchg
pop
dec
cli
mov
push
sarb
fistpll
push
test
ret
and
mov
mov
sub
cli
mov
popa
mov
sti
test
outsl
aam
les
sub
sub
jns
aaa
jnp
push
mov
jle
cli
sub
test
iret
mov
scas
jnp
mov
pop
xchg
inc
shrl
jnp
push
andl
jnp
dec
insb
fisubs
in
pop
addl
stc
mov
fstpl
lcall
ja
lods
pop
fnstsw
mov
loope
xchg
testl
sub
lods
icebp
or
add
cwtl
xchg
xchg
dec
fcmovnbe
aad
imul
loop
hlt
lahf
jae
inc
sub
jnp
cmpl
add
cmpsb
loopne
xor
ljmp
adcl
sub
dec
xorb
pop
push
loope
lods
repz
xchg
or
jnp
pushf
mov
adc
jnp
mov
cmp
mov
pop
mov
clc
jae
fbld
sbb
cwtl
mov
cmp
arpl
imul
inc
sub
sbb
loop
sub
xorl
in
popa
mov
jns
jmp
cld
movsb
or
jecxz
cmp
push
xchg
mov
sahf
fs
mov
jnp
adc
or
aas
push
pop
repnz
mov
sbb
push
orl
cmp
mov
adc
jnp
ss
fsubl
mov
std
fucom
adc
pop
mov
lcall
jecxz
xchg
arpl
outsl
lods
xchg
cmc
lret
xchg
andb
jnp
stos
in
ret
cmpsb
sti
dec
pop
imul
mov
flds
jp
sub
fldl
sti
xchg
scas
pop
jle
xor
mov
and
stc
mov
iret
idiv
push
fmul
inc
shrl
lcall
out
dec
fdivrl
outsb
cmc
add
sub
mov
xor
and
fwait
xor
or
jnp
insb
ss
adc
mov
or
cmp
mulb
popa
push
cmc
addr16
xor
jnp
rorb
sub
jnp
inc
push
dec
add
lahf
mov
pop
mov
push
out
add
cmp
sbb
cmp
mov
jnp
fistpl
xor
or
jnp
mov
xchg
dec
dec
lock
mov
push
sbb
cmpsl
cmp
roll
out
repz
and
jae
faddl
xchg
xchg
mov
mov
sbb
jmp
notl
cmp
ret
add
gs
xor
sub
push
jnp
outsb
jg
les
jnp
cmpsb
mov
mov
inc
jo
ljmp
fsub
and
ror
out
add
pusha
cmc
or
bound
testb
and
addr16
jnp
and
xlat
aas
push
out
ret
fidivl
pop
add
jnp
and
jle
shll
fstpl
push
dec
jnp
loope
pop
mov
loopne
dec
or
bnd
mov
sbb
pop
mov
cmp
xchg
cltd
and
mov
mov
cmp
out
lret
add
in
fdivl
fs
jnp
jmp
das
call
jnp
add
jmp
imul
mov
sbb
jge
mov
sbb
xor
fadds
jae
popf
and
fwait
jnp
jge
inc
xchg
xor
in
rcr
idivb
sub
sub
test
push
push
cld
dec
mov
arpl
idivl
pop
sub
in
ja
jnp
cmp
push
jnp
repz
or
daa
xor
dec
adc
lret
xchg
out
cmp
jmp
jle
pop
and
mov
push
pop
fcom
repz
bound
or
aam
inc
scas
rcrl
mov
mov
and
or
std
xchg
jnp
mov
enter
cmpsb
mov
fwait
jecxz
aad
mov
jae
repz
xor
dec
dec
lcall
out
jne
add
std
insl
outsl
sbb
jg
out
es
idivb
stc
sub
sbb
test
aaa
out
rclb
stos
loope
aas
sbb
jnp
push
out
dec
int
cmp
scas
leave
pop
out
insl
mov
jnp
jno
push
dec
xor
sarl
add
xor
sarl
mov
mov
xchg
out
stos
dec
mov
sti
outsb
imul
or
shrl
aas
fnsave
dec
orl
mov
mov
sub
push
divl
lea
mov
pop
jno
mov
mov
jb
out
imul
xchg
fdivrp
in
mov
loopne
mov
mov
mov
mov
xchg
inc
jnp
mov
dec
hlt
jnp
and
mov
push
repnz
pop
sti
push
int3
sub
sub
xchg
sbb
jnp
inc
insb
call
cmp
pop
push
pop
sbb
je
sbb
mov
dec
in
sub
jbe
push
ds
cs
xor
cwtl
jb
loop
out
jnp
clc
sub
add
or
mov
jnp
imul
or
or
jae,pn
iret
dec
stos
mov
xchg
sub
sbb
int
stc
aam
xor
jnp
cmp
imul
cmpsb
mov
mov
stc
mov
mov
test
mov
push
push
jmp
cmp
jb
jnp,pt
jge
int
pop
and
lock
push
popf
outsl
cltd
mov
outsb
mull
jnp
and
inc
aam
dec
dec
insl
mov
and
lock
repz
sub
dec
mov
and
push
jnp
aad
push
gs
jnp
or
cwtl
jecxz
mov
mov
bound
ss
pusha
dec
xor
xchg
js
loope
mov
dec
mov
jno
out
push
jnp
loop
out
rcrl
ja
into
jo
and
pushf
jb
pop
push
or
pop
push
idivl
stos
sbb
adc
arpl
int3
adc
insb
shlb
nop
pop
lcall
fsubl
imul
xchg
mov
xor
jae
shrb
cli
imul
mov
sub
addb
xor
jae
or
mov
aaa
adc
lret
pop
sbb
xor
nop
les
jl
dec
inc
shlb
push
je
and
inc
stos
add
dec
movsl
xchg
jnp
frstor
jns
imul
dec
inc
mov
xchg
cs
lret
mov
movl
ljmp
hlt
mov
orb
outsl
dec
mov
sbb
pushf
arpl
cmp
and
jne
xlat
scas
stos
pop
jp
add
xchg
xor
imul
mov
fwait
mov
jae
rol
mov
fmul
jmp
mov
clc
pmaxub
popa
push
gs
insb
mov
les
cmp
jbe
insb
dec
pop
mov
pop
lods
adcl
adc
pop
mov
push
insl
push
sub
inc
xchg
jg
js
cmc
jl
jnp
mov
dec
cmp
es
adc
data16
cmpsl
dec
iret
insb
or
out
imul
hlt
fstpt
lea
and
xor
js
clc
out
mov
std
or
fnsave
sub
or
xor
xlat
dec
jae
push
cmp
jmp
jae
arpl
cmp
xchg
mov
xchg
jns
xchg
jnp
sbb
jge
dec
loope
cli
outsl
add
jmp
push
jl
enter
lods
mov
push
leave
lcall
arpl
sbb
adc
aaa
jnp
sub
scas
xchg
sbb
and
xchg
js
xor
jnp
sbb
adc
cmp
pop
loopne
cmpsb
add
jp
inc
inc
xchg
jnp
and
xor
fistl
jnp
cmp
cs
ret
ja
add
inc
mov
ja
imul
jo
sbb
xchg
stos
xchg
ss
push
jb
sbb
cld
lcall
imul
shl
push
outsl
pop
jnp
mov
xchg
push
movsb
inc
pop
pop
push
xchg
aam
lcall
mov
ljmp
mov
negb
jnp
lcall
push
inc
inc
div
mov
repnz
popf
in
adc
aas
mov
inc
cmpl
push
jne
jge
add
pop
in
mov
in
jecxz
pop
dec
pop
push
xor
mov
adc
and
lock
outsl
push
clc
cmp
loope
je
jnp
jl
mov
cmp
xorl
push
aaa
jnp
call
jo
imul
mov
jne
pop
push
jnp
fmull
mov
mov
mov
pop
and
jnp
cli
mov
xchg
or
stos
mov
pop
dec
mov
push
jb
inc
imul
or
sbb
jnp,pn
xchg
scas
aas
pop
mov
mov
jl
jne
or
pop
fwait
pop
fiaddl
and
add
stos
or
jmp
rep
push
mov
mov
mov
cltd
inc
pop
aam
cmc
fwait
xor
ret
sub
sti
mov
sbb
jp
popf
cmp
pop
imul
ss
dec
mov
jmp
mov
fcomi
mov
insl
andl
sarl
ljmp
sub
mov
mov
enter
add
jae
les
pop
sbb
cmp
jnp
sbb
pop
daa
imul
shl
sbb
cmp
data16
and
orl
daa
mov
jmp
enter
mov
pop
or
repz
pop
mov
neg
or
xchg
xchg
outsl
incb
xor
das
ja
sub
dec
sbbb
test
out
shr
mov
out
fcoml
jle
insb
aaa
jnp
movsb
pusha
sahf
and
push
mov
cli
xchg
gs
imul
imul
leave
push
addr16
data16
push
out
push
lret
dec
and
les
sub
stos
jnp
mov
sub
aas
pop
push
in
inc
mov
sbb
es
sbbl
xor
lds
jno
pop
inc
sbb
repnz
jne
jb
pop
xlat
imul
inc
inc
popa
shrd
adc
arpl
fstpl
mov
jne
repz
adc
inc
sub
jnp
or
stos
insl
mov
and
jnp
outsb
stc
or
jnp
repnz
lock
xchg
icebp
jnp
dec
call
jnp
xor
js
mov
fwait
xchg
or
mov
add
cmp
cltd
jns
jp
fisttpl
xchg
xchg
aam
imul
mov
lods
mov
cmp
sbb
sub
lret
mov
cmp
imul
jb
mov
inc
out
les
add
sbb
out
daa
jnp
mov
sarl
enter
in
movsl
or
cmp
jnp
mov
jnp
out
mov
pop
cmp
adc
outsl
sub
xchg
sbb
bound
and
in
in
dec
imul
inc
mov
repz
mov
jnp
mov
jmp
cmp
inc
std
mov
sub
xchg
movb
sbb
cmp
xor
test
fwait
imul
pusha
pop
repnz
xchg
mov
dec
mov
and
aaa
add
and
push
fwait
movb
jnp
call
push
lret
lds
fimull
jge
je
cmp
nop
mov
xor
shrl
push
xor
sub
stc
jnp
popf
add
inc
push
mov
jmp
sub
dec
sbb
outsb
push
push
ss
jnp
fnstcw
mov
ja
sbb
sbb
in
test
cltd
test
push
imul
xchg
jg
xchg
jne
add
bnd
cmp
mov
movsl
add
fbstp
pop
or
sbb
jae
push
iret
jmp
push
and
and
add
mov
les
jo
faddl
jnp
dec
mov
adc
repz
fimuls
popa
and
jnp
mov
imul
sbb
jge
mov
sbb
repnz
les
jnp
shl
add
xlat
sarl
inc
mov
std
xacquire
xor
mov
lahf
je
and
enter
test
ret
dec
or
repnz
jnp
rcll
mov
imul
mov
pop
push
adc
cmc
pop
addr16
jg
push
or
jnp
or
inc
push
jnp
sub
test
push
adc
cmc
bt
jno
ret
enter
bound
outsl
je
xchg
imul
pushl
out
mov
mov
lret
mov
mov
adc
pop
pop
push
not
mov
sub
mov
pop
js
mov
popf
in
out
out
mov
sub
int3
push
xor
mov
das
push
jb
jbe
jnp
in
sbb
out
mov
add
jnp
jns
fs
and
sbb
cltd
push
inc
lcall
repnz
in
jnp
mov
xor
jp
cli
xchg
push
icebp
push
jl
and
in
push
jb
loop
clc
cmpsl
ficoms
mov
xor
dec
push
jns
in
mov
inc
loop
dec
cmp
int3
jnp
fnstenv
mov
mull
testb
cmp
gs
stc
popf
ret
mov
sub
aaa
jo
mov
ja
mov
mov
cltd
mov
jo
sbb
push
cmpsl
mov
mov
outsb
and
sbb
push
sub
inc
mov
add
hlt
mov
aad
mov
jo
orl
jge
xor
nop
cmc
dec
push
add
mov
pop
xor
sahf
mov
fdivs
jle
mov
xchg
jnp
ds
push
xor
popf
in
jnp
icebp
mov
cmp
repz
pushf
xor
adc
iret
pop
jnp
insl
adc
jle
cmpsb
push
jnp
jno
xlat
sti
andl
adc
jnp
push
mov
jnp
pushf
rorl
das
jbe
xchg
dec
imul
add
js
icebp
jnp
sahf
jle
repz
aaa
movsl
or
xor
mov
cmpsb
add
in
xchg
movsl
out
addr16
shrb
lods
sarb
fdivrp
mov
stc
xlat
test
jnp
movsb
or
cmp
insb
iret
jnp
lret
mov
scas
fdivrs
out
jl
daa
adc
push
ret
mov
sbb
push
jbe
add
in
mov
jnp
movsl
nop
adc
das
xorb
inc
pop
push
pop
push
xchg
int
fsubr
sbb
je
xchg
sub
or
or
shll
jns
jbe
pop
push
jmp
lcall
enter
std
add
pushf
mov
jno
ss
in
jnp
call
inc
and
or
jnp
fisttpl
insl
aam
lock
sub
lock
shlb
xor
xchg
sbbb
dec
dec
repz
mov
cmp
xchg
sarl
fs
in
out
addb
adc
jo
jnp
add
pop
bound
jnp
fnsave
push
in
jnp
idivb
dec
sub
das
outsb
fidivs
dec
test
or
mov
icebp
jnp
je,pt
les
and
or
loope
cmp
andps
xchg
scas
mov
in
icebp
loop
hlt
loopne
bound
out
mov
jmp
aad
pop
jge
xchg
stos
dec
test
xchg
jmp
push
cmpsb
push
imul
sti
xor
sub
outsl
insb
cmp
xor
sub
or
or
xor
sbb
jp
jnp
insb
and
dec
popf
imul
loopne
adc
or
cmovp
fnstsw
out
dec
mov
pop
loopne
mov
xor
mov
lret
scas
jae
adc
xchg
xchg
jae
fsubrl
test
xor
jnp
mov
mov
pop
xor
cwtl
jmp
repz
mov
push
xchg
push
outsl
xor
sahf
or
pop
xlat
out
bswap
jbe
jnp
mov
or
push
xchg
inc
test
rolb
in
mov
mov
lods
dec
je
xor
jnp
add
cmp
cld
pop
jnp
jmp
ret
fdivrs
inc
xchg
imul
xor
adc
outsl
jmp
inc
fs
lea
nop
imul
mov
xor
test
jne
dec
shlb
lret
pop
jecxz
or
outsl
lahf
les
cmp
lds
cmp
and
jnp
or
cmp
jbe
pop
mov
mov
or
push
sahf
sub
sub
idivl
mov
dec
fimuls
xchg
sbb
jnp,pt
pop
aas
andl
mov
cmpsl
insl
dec
icebp
push
jnp
test
cli
lahf
push
sbb
mov
imul
pop
ja
push
pop
stos
mov
push
pop
xchg
push
mov
xchg
jnp
leave
lret
cmpsb
nop
icebp
sub
or
out
lods
inc
cld
push
or
out
aas
mov
fnsave
or
rcrb
jae
stos
pop
and
mov
xchg
lcall
dec
add
jnp
cmc
andl
in
shrl
adcl
jnp
sbbl
les
cmp
jne
jb
sub
leave
add
aas
es
fs
loop
xchg
std
jnp
push
or
mov
cs
adc
pop
push
adc
lods
in
in
outsl
test
mov
decl
outsl
lods
int3
mov
mov
lods
push
les
in
in
popa
jno
or
in
jmp
sub
push
mov
test
sti
in
dec
jl
fistpl
frstor
aam
sub
jnp
testl
pop
add
jnp
mov
movsl
mov
arpl
push
aam
jnp
and
addb
sub
mov
lret
jnp
inc
adc
push
jmp
or
testl
frstor
jmp
gs
lds
pop
rcrb
test
pop
mov
cmpsl
push
jmp
xchg
jnp
push
push
int
dec
orl
jp
pop
ret
add
repz
in
inc
aaa
imul
xchg
out
ss
addl
jo
fiaddl
and
jnp
cmp
out
pop
mov
push
negl
in
out
fst
pop
jae
mov
nop
mov
les
and
out
jns
sub
enter
mov
pop
je
imul
xlat
jne
xor
shll
adc
jnp
movl
jnp
push
adc
out
mov
mov
pusha
cmpsb
jnp
jle
fwait
cld
mov
inc
dec
xchg
mov
mov
movsb
test
jo
fidivrl
mov
xor
xchg
aas
push
inc
enter
add
lret
jp
and
lods
jnp
testb
xor
mov
ljmp
adc
andb
jle
xor
sahf
pop
jb
jo
dec
jnp
or
scas
stc
cld
sub
mov
loopne
or
cmp
in
and
je
xor
das
stos
int3
loop
ret
out
imul
inc
iret
insb
in
jmp
pop
cli
adc
into
lcall
movsl
pop
adc
jnp
sbb
dec
jnp
aaa
sub
mov
bound
jnp
mov
insb
or
test
sarl
jns
out
jnp
pushf
jne
sub
je
and
mov
fs
leave
insb
addr16
pop
repnz
pop
je
cli
jno
mov
pop
fisttpll
je
mov
imul
cmc
inc
daa
das
rorb
insl
pop
test
insl
jnp
pushf
arpl
or
and
cmp
ss
mov
outsl
mov
notb
pop
jnp
into
push
jp
dec
dec
xor
cld
clc
js
pop
jnp
aaa
aam
jg
jno
jnp
pop
in
and
call
xchg
cmp
lcall
movsb
int3
pop
xor
das
jnp
dec
inc
push
jge
jnp
aam
and
int3
cmc
mov
pop
enter
dec
or
adc
jnp
fs
dec
mov
fdivrs
fsubr
dec
mov
sbb
shlb
xchg
ret
jae
jnp
jne
outsb
or
test
loop
dec
lds
clc
adc
xchg
popf
mov
inc
lcall
jnp
jg
out
jne
js
adc
adc
and
sti
outsb
sub
or
fidivs
in
iret
add
mov
inc
sahf
push
test
dec
cwtl
jle
bound
pop
dec
lods
cmc
addr16
lcall
test
neg
movsl
mov
int
sub
lock
ret
push
clc
fwait
lcall
jne
test
jns
jnp
dec
xchg
ds
xchg
mov
aad
sbb
iret
outsb
call
loope
jnp
dec
aaa
cli
insb
fidivrs
sub
in
mov
rcr
test
jne
cmpsb
dec
movsb
pop
jnp
test
sbb
fmuls
sbb
cmp
fdivrl
bound
jl
sbb
icebp
jnp
fwait
push
dec
sahf
lods
push
jnp
sbb
shl
lret
jnp
sub
xchg
cltd
sbb
sti
fptan
lods
loope
aas
sub
imul
pop
add
jle
fucomi
jecxz
idivb
add
daa
mov
fidivrs
push
push
lea
out
sar
jnp
mov
or
or
adc
push
outsl
aaa
mov
and
jnp
mov
imul
test
mov
sub
inc
repnz
or
shll
fnstsw
orb
pop
aaa
xor
pusha
jno
lret
jnp
or
pop
das
out
pop
jnp
xor
loopne
popa
enter
incb
sub
jg
sbb
sarl
sbb
sub
mov
fnstsw
xchg
pushf
or
sarb
out
adc
cmp
outsl
pop
in
cmpl
popa
adc
mov
cmp
sbb
jnp
ljmp
lret
jp
lock
sarl
es
mov
pop
xchg
xor
insl
jb
mov
jne
cmp
lea
sub
mov
fwait
xchg
neg
in
fdivrl
adc
add
add
cmp
arpl
xchg
mov
sub
cmp
jnp
jbe
repnz
inc
jnp
adc
mov
test
pop
popa
xor
jnp
xor
aad
jnp
jb
cli
outsl
push
call
mov
aas
sahf
xor
je
sbb
cltd
jnp
adc
divl
mov
vpcomub
loop
mov
mov
imul
cmp
xorl
jo
sbb
imul
or
jnp
push
mov
mov
jnp
fistpl
mov
xchg
pop
sbb
cmp
movsl
pop
pop
cmp
xchg
dec
add
xor
rcr
jnp
in
xchg
lahf
adc
adc
dec
sbb
int
jnp
jns
mov
ja
xchg
pop
ror
dec
pop
cli
or
jg
jno
push
imul
ds
aas
fs
push
mov
aas
mov
sbb
jnp
push
jl
lcall
or
cmp
cmp
or
push
pop
pop
jnp
cmp
lret
into
jg
cmpsl
cmp
call
clc
add
in
test
jl
pop
jnp
mov
or
frstor
cmp
cmp
sub
sbb
fdivs
fldl
rcrb
loop
cmp
insb
jno
mov
test
inc
xor
jne
cwtl
jnp
shl
or
mov
or
adc
fsubrp
add
leave
jecxz
jae
jle
loopne
fisubrl
pop
jg
or
mov
jb
in
xchg
xor
clc
sbb
xchg
imul
nop
dec
test
push
inc
mov
mov
jmp
adc
inc
push
or
mov
jmp
cmp
scas
mov
rcrl
jns
jmp
pop
pop
out
inc
rorb
aas
xor
lods
push
imul
mov
jmp
or
test
rorl
cmp
cmp
sub
imul
out
movb
push
dec
test
sbb
imul
jne
jecxz
and
call
ret
cmc
int3
jnp
xor
das
xchg
repnz
dec
std
jnp
cmp
mov
in
or
inc
jl
or
pop
dec
movsb
outsl
xchg
idivl
and
dec
mov
add
pushf
jnp
push
and
cwtl
lahf
fldt
stos
testb
shl
jmp
jae
mov
mov
cwtl
inc
ljmp
in
int
fdivr
outsl
mov
dec
ret
push
out
mov
jne
das
lock
in
dec
jnp
mov
mov
jnp
fists
enter
ss
add
popa
sub
fsubs
adc
mov
mov
sbb
aas
dec
test
add
dec
ljmp
lock
mov
imul
inc
jnp
cmp
push
pop
out
in
ret
idivl
leave
dec
arpl
or
test
gs
cwtl
pop
outsl
cmpsl
hlt
pop
in
loop
outsl
movsb
sbb
jmp
sub
jnp
ret
iret
and
jbe
fnsave
fsubrl
insl
sbb
mov
or
mov
and
clc
inc
push
xor
jae
mov
jnp
sbb
aaa
je
imul
adc
add
and
fdivs
xor
push
or
callw
lods
pop
jnp
inc
sub
out
jno
push
insb
push
iret
enter
jnp
lret
popf
pop
cmp
fstpt
call
mov
sub
daa
das
sti
inc
sub
jbe
push
jnp
xchg
jmp
je
insl
movsl
jg
jbe
dec
jo
sbb
pop
leave
andl
outsb
clc
lcall
jp
stos
adc
sbb
in
inc
add
cmp
fdivrl
jecxz
push
push
pop
inc
fiadds
jnp
xchg
int
mov
dec
fcomps
jae
xor
cli
in
icebp
jb
push
popa
xor
fcoml
jne
lods
js
mov
push
movsb
dec
push
or
adc
lahf
push
xchg
push
arpl
jnp
stc
pop
mov
in
cld
adc
pop
aas
insl
xor
jnp
dec
icebp
mov
jnp
orl
sti
xorb
out
les
enter
std
or
sbb
cmc
push
aam
mov
inc
mov
mov
adc
jnp
pop
test
cwtl
jnp
add
sub
pop
adc
jnp
out
push
push
pop
xorb
sbb
sub
ficoms
std
mov
jnp
out
jb
and
jnp
mov
adc
jno
mov
in
adc
mov
sbb
jo
xchg
cmp
repz
inc
lcall
fwait
in
or
sbb
int
adc
insb
cmpsl
shll
push
ja
testb
icebp
mov
imul
push
popa
jo
sbb
sub
imul
add
mov
popa
loop
imul
jns
inc
adc
sbb
cmc
in
push
xchg
in
lods
cmpsb
xor
and
inc
adc
or
ss
pop
arpl
imul
imul
xchg
add
cmp
es
lahf
mov
add
dec
lcall
mov
mov
mov
rolb
inc
loop
xchg
push
insb
rcrl
jne
cmp
pop
adc
cmpsb
movsb
cli
sub
xchg
aad
jnp
hlt
xor
mov
ret
aas
mov
mov
mov
notb
push
clc
mov
sar
data16
stos
cmp
mov
jle
popa
xchg
in
mov
imul
dec
vpshufhw
cmc
jo
jne
pop
in
repz
sti
dec
adc
xor
fnsave
cmp
jp
jno
lock
jnp
xor
dec
or
mov
sub
addr16
out
mov
icebp
mov
jp
mov
sub
stc
cmp
jne
cli
mov
in
ss
imul
js
loopne
jae
jo
lret
test
test
jb
shrb
aam
fnstcw
jp
cli
aaa
inc
cmp
cmpsl
cli
cmpsl
mov
je
je
das
jnp
arpl
mov
adc
nop
or
mov
out
enter
sti
testl
mov
stos
cmp
out
cld
enter
jp
outsl
sti
cmp
lods
jnp
xor
int3
rolb
cld
jns
push
outsb
clc
adc
jnp
mov
cmc
mov
aaa
xlat
xor
xor
cmp
xchg
in
lods
je
and
push
xor
imul
xchg
push
sub
daa
in
jbe
out
negl
adc
xor
movsb
mov
jnp
nop
sbb
jno
xor
clc
xchg
fwait
cmp
jnp
mov
repz
hlt
ss
jnp
mov
lods
nop
cmp
jnp
cmp
mov
jns
mov
dec
ret
pop
icebp
scas
cwtl
adc
int
inc
jnp
cmp
cs
jp
test
dec
cmp
shlb
and
mov
out
js
data16
movd
dec
lret
idiv
jae
mov
sub
mov
jnp
mov
cld
jae
hlt
or
pushf
pop
sbb
es
dec
mov
lods
fnsave
xor
mov
cmp
ja
in
ss
xchg
cmp
pushf
jae
mov
jnp
aas
aaa
sub
adc
jnp
pop
aam
xchg
jle
xchg
sbb
pop
dec
pminsw
jns
cmp
out
arpl
jge
jnp
stc
xor
lcall
nop
cmc
into
mov
xor
jnp
sti
mov
or
xor
lock
sub
jmp
or
popf
mov
jnp
call
dec
mov
jle
pop
sub
test
mov
xor
aas
xchg
or
xchg
jp
fisubrl
dec
cmp
pop
jns
or
adc
push
and
mov
lods
inc
iret
in
mov
lds
xor
mov
inc
out
test
push
lods
jge
dec
jnp
dec
stc
mov
fmuls
cs
push
lcall
jp
insl
sbb
mov
into
fists
jnp
clc
sbb
cmp
or
jnp
and
add
int3
jno
pop
jns
dec
out
xchg
jnp
pop
cmp
jae
imul
lods
inc
js
pushf
jle
xchg
int
outsl
mov
or
jnp
scas
fstpl
jnp
sub
rolb
push
jnp
lods
and
xor
pop
cmpsb
sub
adc
or
jnp
lods
pop
jp
lds
gs
clc
pushf
xchg
fyl2x
imul
and
mov
imul
lcall
mov
repnz
mov
jnp
fsubs
mov
lds
jnp
pushf
push
and
lods
jae
jnp
sub
pop
fidivrl
dec
aas
fisttps
bound
andl
clc
lods
push
fnstenv
dec
jge
mov
lock
and
cmpsl
adc
shll
mov
nop
shll
xor
dec
and
jb
sbb
xor
pushf
out
fildll
pusha
xchg
jnp
cs
xor
sahf
cmc
lret
ljmp
dec
dec
sbb
aam
in
ss
cs
ljmp
mov
loop
jnp
stc
pop
cmpsb
data16
ja
fnstenv
outsb
popa
aam
out
push
adc
add
jnp
mov
jns
jnp
popf
insb
sahf
icebp
iret
and
jnp
cld
aam
push
jo
movsb
sub
and
divb
ret
adc
and
mov
cmp
stos
dec
push
ret
adc
pop
jnp
pushf
test
stos
jnp
sub
cli
pop
sbb
jnp
dec
pop
or
gs
imull
xor
jnp
ljmp
imul
ds
mov
mov
cmp
fcmovnbe
ljmp
lahf
adcb
add
pop
sub
push
lret
inc
ss
pop
xor
push
jnp
insl
cmp
into
dec
sbb
imul
jnp
mov
aam
jnp
pusha
hlt
mov
out
xchg
jge
jg
movsl
push
repz
dec
iret
xchg
mov
cli
nop
sub
xorl
sub
lock
cmpsb
sahf
jnp
dec
xchg
pushl
jnp
cs
lods
test
push
xchg
frstor
out
cmp
ret
lods
enter
jnp
push
and
lods
cmp
fidivrs
lcall
jnp
or
aaa
jnp
lock
movsb
jne
pop
jnp
pushf
xchg
and
cmp
sarl
push
mov
stos
jae
sub
mov
fistpll
jb
je
lods
aam
lcall
xchg
hlt
mull
cmp
inc
add
or
jnp
insl
sti
cmp
test
scas
iret
mov
sbb
mov
add
fsubrs
dec
cli
jmp
or
jnp
lods
cmp
mov
cmp
jae
mov
or
jo
mov
test
ja
sti
ficompl
jmp
lcall
sub
inc
hlt
jecxz
jae
jnp
mov
mov
lret
sub
jo
inc
lods
xchg
in
mov
cmpb
inc
cli
das
insb
ss
push
jnp
mov
pop
pop
imul
mov
pop
shlb
jno
jmp
push
mov
mov
imul
sub
scas
mov
xor
inc
jnp
divl
xchg
ja
fwait
bound
fdivl
jae
sbb
inc
pop
xor
mov
jae
lods
loope
jnp
push
bound
loop
mov
out
test
jnp
mov
cmp
das
push
arpl
adc
mov
fdiv
cmp
popf
out
dec
test
sti
pop
mov
push
dec
cli
cmp
nop
or
xor
out
inc
lock
rcrb
add
cmp
jnp
lret
xor
or
test
mov
jle
add
jb
add
xor
xchg
std
ret
test
lret
jl
sub
loop
cmp
pop
sbb
ja
mov
sub
frstor
mov
pushf
xchg
sti
dec
add
pop
or
mov
jnp
mov
cmp
pop
pusha
das
pop
jae
dec
ja
not
jnp
repnz
push
jnp
mov
clc
sub
xor
pop
dec
out
cmp
jnp
push
stos
stc
popa
mov
iret
sahf
mov
sub
mov
push
mov
sbb
xor
lcall
jnp
push
dec
pop
call
inc
int
cli
jbe
mov
jnp
jg
xor
xor
cmp
lcall
imul
cli
dec
int
cmp
out
fnstcw
mov
cmp
stos
push
xchg
fidivs
lahf
jae
or
test
iret
pushf
jb
arpl
push
jg
cmpl
push
jno
lret
pop
push
adc
ja
or
xchg
jae
lods
cmpsl
xorl
stos
xlat
push
mov
fists
xchg
mov
icebp
dec
fwait
xchg
sbb
pushf
pop
mov
jnp
and
insb
mov
jb
jnp
dec
mov
in
jnp
jns
xchg
call
ret
out
popl
in
jle
jnp
stos
add
sti
push
jnp
add
iret
mov
imul
fsub
lcall
jnp
mov
jp
stc
insl
scas
jnp
cli
cmp
frstor
stos
sahf
cwtl
lods
xor
out
jnp,pn
pushf
movsb
lcall
add
xor
and
xchg
push
scas
outsl
int
movsb
lret
test
adc
jnp
mov
iret
jg
xlat
imulb
not
ret
int3
mov
mov
popl
movsb
imull
shlb
jns
xor
jg
outsl
ret
and
lret
sub
xchg
push
jae
or
mov
scas
sbb
out
inc
jnp
shll
push
jnp
xorl
push
mov
leave
out
cli
jp
mov
push
jnp
test
mov
and
lret
insl
pushf
les
aaa
lods
jb
mov
mov
jl,pn
jae
shr
inc
or
jae
cvtpi2ps
jge
push
cmp
loopne
xbegin
daa
call
xor
cs
cli
xchg
xor
imul
lret
jnp
jg
xor
pushf
sbb
je
or
out
xchg
push
jnp
js
popf
inc
leave
inc
clc
mov
jae
or
or
add
jnp
mov
and
cmp
or
lods
jnp
push
xor
ret
mov
hlt
lea
push
xor
xor
mov
bnd
push
in
enter
mov
xchg
loope
jnp
mov
xchg
repnz
or
mov
arpl
or
mov
jae
mov
jg
das
jnp
add
mov
popf
sti
popa
and
mov
sub
sbb
scas
jnp
mov
int3
hlt
lods
jnp
mov
popf
mov
stos
sub
add
xor
cli
mov
sbb
jnp
insl
or
cltd
dec
mov
rorb
xor
cmp
pop
add
mov
dec
nop
mov
jp
pop
rcrb
jbe
mov
dec
stos
jnp
sub
out
sub
jnp
js
fcmove
mov
cwtl
jnp
cmp
jnp
jbe
sbb
out
jnp
lahf
mov
jnp
push
jp
cmpsl
out
into
aaa
sub
stc
les
jnp
jbe
push
adc
fwait
out
aam
dec
pushf
imul
adc
xor
mov
out
lods
in
cmpsl
jnp
sub
push
imul
sbb
stos
pop
mov
loop
hlt
xor
fwait
jge
inc
cli
inc
jnp
in
scas
ret
and
xchg
pmulhw
mov
repz
sub
mov
jnp
repnz
ja
jge
iret
mov
cmp
lds
pop
das
xchg
jo
jnp
movsb
ret
scas
outsl
cmp
mov
iret
leave
popf
adc
pop
cli
inc
and
aad
jnp
push
lret
cmp
push
xor
lods
xor
fsubl
outsl
jnp
inc
push
mov
mov
push
and
sahf
movb
jnp
push
xor
pop
xor
pop
ss
out
or
cmp
sar
fwait
sub
add
jnp
xor
insl
jnp
jne
test
mov
dec
jnp
lret
dec
lock
dec
sbb
into
leave
xorb
add
stos
insl
out
push
lods
or
lea
jnp
in
fsts
jae
rorl
lea
aaa
sub
stc
outsl
xor
into
jmp
xor
iret
xchg
jnp
mov
cmp
in
inc
add
jb
push
jnp
pusha
cmp
jnp
sub
push
pop
xchg
mov
adc
jnp
pop
shll
mov
jno
sub
jne
stc
sbb
lods
jmp
jb
ds
repnz
or
sti
lea
sbb
mov
jle
push
jnp
push
imul
pushf
mov
jnp
bts
ret
cmp
and
sub
into
xlat
sub
cmp
ficoms
shrl
ja
mov
icebp
rorl
mov
inc
jp
mov
xlat
outsl
xchg
aas
pop
loop
pushf
cmc
icebp
es
push
cs
jnp
mov
cmp
rolb
cmp
adc
inc
sti
cmp
xchg
stos
pushf
es
jnp
ficompl
cmp
and
sbb
nop
jge
lea
popf
fucomi
into
rolb
fwait
mov
sbbl
aad
dec
or
push
jnp
ret
sbb
imul
aaa
clc
sahf
jae
push
cltd
sbb
rcrb
fildl
arpl
mov
fdivs
out
xor
mov
jnp
lcall
and
nop
int3
jnp
adc
lea
pop
stos
sbb
shlb
popf
in
or
shl
mov
into
cltd
xor
mov
mov
jnp
rolb
jnp
cmp
repnz
pusha
addr16
sub
jnp
add
mov
xor
ss
ficompl
mov
lret
xchg
cmp
imul
out
sub
insb
jae
stos
daa
push
xor
and
insl
lods
jmp
mov
pop
repz
loopne
or
jnp
mov
dec
fstpt
mov
sti
mov
lea
inc
jbe
clc
xor
insl
gs
jmp
mov
loopne
dec
fidivl
mov
das
cmp
jne
stos
mov
sub
dec
clc
mov
push
imul
mov
scas
imulb
aaa
xor
jnp
adc
jnp
fdivrl
lock
lods
sbb
fisubrl
jae
insb
ficoms
push
sub
daa
ja
adc
jnp
sbb
and
negb
mov
daa
jae
jmp
or
jnp
xchg
mov
jnp
fimull
popa
dec
scas
test
jl
jbe
push
mov
push
pop
in
dec
jb
gs
aam
shrb
push
jnp
sbb
push
add
pop
dec
cmp
mov
daa
dec
lds
bound
imul
and
xlat
dec
and
or
xchg
xchg
mov
imul
loop
mov
jge
stos
pushf
inc
in
clc
loope
dec
dec
mov
sti
cmp
ss
jg
jnp
sahf
testl
jnp
js
jle
in
dec
popf
jnp
pop
push
jp
popa
rsm
jnp
loope
xor
clc
lods
jnp
inc
rcr
jae
aas
sbb
jbe
sbb
arpl
jnp
test
push
repnz
or
hlt
insb
insl
dec
loop
pop
sub
fidivl
lods
jnp
inc
push
inc
jnp
shrb
fdivrl
dec
int
mov
dec
idivb
lea
mov
mov
pushf
icebp
cmpsl
jnp
adc
mov
loop
and
lret
ret
jae
lods
xor
jnp
xchg
pop
cmc
jle
lods
mov
inc
xor
push
inc
and
sbb
sub
mov
pop
ret
xchg
jnp
dec
xor
clc
jnp
and
iret
mov
push
negb
pop
jne
into
sar
jnp
cs
mov
hlt
stos
ss
cmp
packssdw
imul
insl
jae
jnp
push
rorb
lcall
jns
sbb
daa
je
and
testl
and
adc
cmp
jnp
repnz
sbb
mov
dec
xor
pop
insl
call
out
pushf
ss
push
push
mov
lock
pop
movsl
mov
int3
jnp
cli
rcll
jns
loope
or
pop
jnp
dec
das
ljmp
sub
and
outsb
divb
div
lret
or
clc
sub
jnp
loopne
sar
jl
test
scas
xor
out
lret
jnp
popa
lods
fdivl
cltd
xor
xchg
and
push
les
leave
pop
dec
jl
in
xor
jecxz
and
pop
fnstsw
ret
loop
rcr
jnp
mov
and
cmpsl
hlt
test
inc
jae
pop
fnstsw
cli
rcrl
sbb
fstpt
lahf
sti
pop
pop
xchg
mov
fnstcw
xor
cli
mov
jnp
jno
jge
daa
push
jnp
dec
enter
pop
sub
adc
jmp
cli
xlat
push
jae
mov
stos
movsl
lods
pop
or
mov
test
xchg
mov
mov
subl
loop
cmp
cmc
jae
xchg
pushl
arpl
pop
xor
mov
push
aas
lods
lds
mov
fdivrp
stos
sarb
sub
mov
cmp
pop
sub
jnp
inc
fs
hlt
fcmovb
in
imul
xlat
fwait
cmp
jne
inc
jnp
outsb
dec
mov
int3
sub
mov
jnp
mov
data16
push
pop
roll
dec
imul
jae
pop
insb
repnz
push
xor
or
or
stos
test
in
loopne
jnp
fldt
lret
jmp
jnp
push
push
cs
dec
sub
push
fstp
lret
scas
jae
mov
cmp
stos
ss
or
dec
pop
mov
jnp
adc
bound
xor
jp
fucomp
mov
repz
mov
xlat
addr16
test
jnp
loope
and
loop
jnp
or
inc
lahf
lcall
mov
sbb
lods
ja
jle
pushf
jecxz
lret
daa
lcall
mov
cmp
jb
push
cs
das
fwait
mov
pushf
jnp
xor
iret
or
imul
sarl
jne
aam
dec
jnp
stos
xchg
into
call
imul
repz
out
push
jo
lea
ficompl
jno
fwait
ljmp
outsl
js
and
sbb
not
mov
and
ficomps
add
fcmovne
mov
outsl
sbb
and
movsb
xlat
cwtl
and
into
mov
pop
jmp
dec
in
out
inc
fwait
lret
sbb
mov
sub
cmp
arpl
mov
jns
pop
fnsave
daa
shrl
cld
inc
jnp
sub
mov
jnp
enter
rol
fstpt
es
les
push
fimuls
lods
inc
jg
jnp
stos
dec
sbb
sbb
mov
scas
xlat
add
insl
mov
out
adc
addr16
sbb
push
jo
dec
push
lods
pop
stos
sahf
and
mov
daa
sub
cmpl
xlat
jae
lret
cli
jnp
jp
cmp
xor
popa
out
out
inc
cli
dec
lret
js
iret
dec
xor
mov
sub
jne
in
lahf
ss
cs
mov
rorb
inc
jnp
sbb
fnstsw
push
dec
pusha
clc
das
divl
in
mov
inc
jae
jo
pushf
jns
jnp
xchg
insl
cmpl
sub
add
jle
outsl
mov
inc
fisttpll
mul
sbb
je
jp
lods
mov
pop
mov
shll
popf
stc
mov
ret
jmp
jnp
dec
sub
dec
jnp
cmp
cli
stos
or
popf
jnp
pop
lea
lock
insb
testl
pop
clc
rcrb
outsl
mov
dec
in
cs
jnp
std
ljmp
lods
arpl
ds
sub
addr16
lods
jmp
mov
sbb
hlt
jae
jp
push
jnp
adc
jo
mov
xchg
arpl
mov
mov
popf
and
testb
xchg
call
dec
stos
rorl
push
lock
or
das
xchg
ja
sub
pop
cmp
int
mov
jnp
add
dec
lret
pop
dec
cwtl
mov
enter
call
sbb
lret
sub
ljmp
mov
jnp
dec
mov
jnp
mov
lods
stc
mov
loop
sub
push
daa
lret
sbb
movsl
mov
mov
push
mov
xchg
insb
cmp
fwait
xor
jnp
mov
dec
pop
insl
ss
lock
add
ss
lea
mov
sub
hlt
imul
jne
icebp
cmp
popf
push
int3
or
pop
and
into
mov
stos
in
add
sahf
jnp
aam
stos
sbb
test
push
dec
movsl
jae
jnp
stos
or
mov
aam
jge
nop
sbb
or
xchg
leave
inc
cmp
pop
jnp,pn
jae
xor
jnp
cmp
mov
imul
jbe
ja
cli
in
push
or
icebp
dec
jge
sbb
leave
repnz
stc
outsl
cmp
inc
loopne
cmpsb
das
sub
popa
dec
push
adc
seto
xlat
int3
fwait
out
aaa
mov
rorb
sub
xchg
xor
bound
cmpsb
sbb
pushf
adc
or
imul
cld
mov
js
push
jnp
xchg
repnz
lret
clc
jp
pop
aas
div
paddusw
jae
cmp
pop
sub
mov
jnp
into
cmpsb
add
add
repz
outsl
daa
push
sbb
xchg
and
je
pop
mov
jmp
nop
mov
imul
jnp
lcall
sbb
je
scas
cmp
mov
das
mov
sub
jnp
mov
jbe
xlat
sbb
in
jae
loope
js
imul
sar
cmp
fwait
dec
lock
mov
jnp
lds
mov
out
sbb
outsl
cmp
pushf
or
testl
insl
mov
cmpsb
mov
aaa
imul
adc
sbb
xchg
loopne
dec
and
clc
pop
in
pusha
push
mov
stos
sbb
push
xchg
sub
iret
imul
call
das
aam
jnp
out
js
mov
pop
lods
enter
pop
cmp
es
mov
lods
je
sbb
and
mov
cmp
int3
or
inc
mov
lret
aas
jne
call
jbe,pt
fistl
popf
stos
mov
out
lods
stc
jae
lea
jnp
in
arpl
stos
int
sbb
test
add
mov
popa
test
fmul
shl
jae
mov
xchg
sbb
sbb
sub
popfw
cmp
dec
je
sbb
mov
jecxz
lock
data16
push
jb
orl
jno
in
lahf
or
sub
mov
sub
lods
lahf
adc
cmp
add
jecxz
repnz
div
xor
jnp
push
jnp
inc
popf
aad
test
jae
dec
cs
lcall
outsl
cmp
pop
push
inc
jge
fmull
jne
push
jnp
pop
call
imul
mov
adc
jnp
rcrb
das
sub
lods
pusha
out
pushf
pop
jnp
inc
in
lods
mov
aaa
jnp
fiadds
insl
xor
out
bound
loop
lods
ljmp
mov
xchg
sbb
ja
aaa
jmp
in
xchg
imul
js
inc
es
in
das
scas
jnp
lea
out
jnp
xor
xor
pushf
jnp
mov
fnstcw
jl
loopne
ror
lahf
or
mov
fidivl
push
daa
inc
shl
fdiv
std
push
imul
aam
dec
jmp
dec
xchg
and
ss
imul
addl
test
sarl
into
repnz
inc
stos
pushf
sahf
pop
dec
mov
stc
mov
outsl
insb
repz
mov
lret
xor
icebp
fidivs
mov
jge
mov
inc
inc
xchg
movsb
mov
jnp
cs
stos
mov
adc
ds
mov
cmp
fisubl
out
das
jp
jnp
inc
mov
adc
pop
sub
xchg
jbe
rolb
mov
sub
adc
lock
rorl
jnp
mov
movsb
clc
sub
mov
pusha
jnp
pop
enter
jnp
adc
mov
mov
mov
jg
mov
insl
jnp
pop
lods
sahf
aas
loopne
jmp
andl
jg
or
jmp
js
cmp
and
mov
lock
adc
jnp
pop
adc
jnp
pop
repz
mov
pop
repnz
jnp
fbstp
dec
ret
scas
jnp
bound
lahf
imull
push
imul
arpl
pusha
cmp
jae
jnp
fmull
xor
sbb
mov
fsubrs
test
pop
pop
outsb
sti
fs
add
pop
lret
ret
jge
jle
and
jnp
jae
fwait
lock
xchg
fisubl
sti
pusha
jnp
pop
and
les
aaa
pop
aas
jae,pn
jge
in
jnp
jle
xchg
popa
mov
push
fsqrt
push
rep
fs
sub
iret
xchg
mov
stos
jo
push
pop
clc
lret
cmp
inc
imul
sbb
js
jnp,pn
js
xchg
push
stos
ja
jnp
ds
hlt
adcb
popf
pushf
jb
cmpsb
out
in
xlat
jnp
testl
sbb
mov
outsb
pop
push
outsb
xchg
add
mov
sti
pushf
mov
sbb
sahf
fldcw
aam
mov
jnp
aaa
xor
in
xor
stos
mov
jnp
sarl
idivb
test
sbb
jnp
out
shlb
mov
je
lret
push
idivl
lods
jl
jno
pusha
fwait
sub
adc
jl
sbb
jnp
call
mov
sbb
out
movsl
sbb
mov
sbb
xchg
cmp
ja
xor
rclb
int3
outsb
jb
pop
push
dec
mov
add
lods
in
push
stos
jae
les
adc
es
cltd
or
adc
lcall
mov
push
popf
pop
xchg
cmpb
mov
pop
std
sbb
cmpsb
and
mov
lds
xor
dec
je
in
cmpsl
pop
sub
adc
jnp
xchg
lods
or
and
cmp
jmp
mov
cld
sub
push
or
cmp
sub
fs
cmp
jg
cli
jne
cwtl
mov
sbb
inc
outsl
adc
add
xchg
push
add
lods
sahf
cmpsl
int
test
in
mov
cmp
outsl
or
test
xor
xchg
jnp
jg
hlt
addr16
jle
jnp
popf
lahf
mov
jnp
jne
or
fistpll
or
mov
jnp
test
mov
jnp
mov
mov
lcall
aam
xchg
pop
pop
mov
dec
out
out
cmp
jnp
dec
idiv
lock
je
pop
insl
mov
addr16
mov
mov
cli
xchg
cld
pop
jle
imul
and
fldcw
push
sti
jnp
mov
sub
aas
dec
cwtl
jae
pushf
cmp
jg
pop
mov
imul
imul
pop
or
push
cli
lods
mov
pushf
cmc
in
mov
subl
mov
pop
test
aam
les
popf
jne
sbb
jnp
push
push
pushf
imul
jno
cmpsb
xchg
sub
shll
ja
mov
jnp
xchg
xchg
les
push
addr16
add
bound
repnz
sbb
xor
outsl
inc
mov
imul
scas
scas
sarl
xchg
cs
cmp
jnp
cmp
decl
xchg
push
flds
insb
inc
ja
or
int
popf
push
cmp
jg
mov
inc
enter
add
fidivs
gs
mov
pusha
cli
ss
int
mov
fldl
inc
push
data16
mov
inc
sbb
push
jnp
add
mov
lret
push
jno
scas
sbb
jae
popf
sub
mov
or
pop
and
sub
lea
ficompl
jnp
mov
insb
jo
int
mov
sarl
repnz
mov
mov
jae
outsb
or
jnp
les
xor
jg
cmpsl
mov
cmp
jnp
imul
cmp
cmp
lods
movl
test
insl
or
or
mov
mov
adc
loop
mov
sbb
and
jnp
jae
dec
pop
sbb
les
add
mov
sub
or
test
rclb
in
jnp
inc
mov
cmp
xor
inc
pushl
ret
in
push
lock
stos
cs
addr16
cli
adc
aas
jnp
pop
ljmp
and
divb
mov
aam
outsl
jb
imul
fdivrs
in
xor
jae
pop
xchg
pop
subl
loopne
ret
out
jge
jo
jnp
dec
xor
sbb
push
mov
out
push
cmp
mulb
jno
mov
adc
aas
loopne
cmp
je
mov
icebp
sub
int3
jae
push
test
lods
and
mov
bts
jnp
xlat
sub
sbb
adc
pop
mov
mov
ss
jbe
sub
xor
mov
pusha
lock
pushf
out
jb
mov
aaa
imul
lods
leave
hlt
cmp
in
clc
test
mov
pushf
sub
jo
jle
inc
imul
mov
insb
and
sbb
es
mov
xor
or
jp
push
jnp
ss
stos
rorl
into
mov
mov
mov
or
test
shl
jnp
call
lods
pop
sbb
push
xchg
jnp
pop
jno
clc
movsb
loop
jl
mov
js
data16
pop
sub
popa
ja
loop
sub
sbb
cwtl
sub
in
mov
xchg
add
outsl
jae
xor
xlat
in
pushl
dec
jae
sbb
ret
dec
outsl
cmp
adc
push
lcall
xchg
mov
inc
rcr
jge
add
enter
stos
lahf
hlt
cmp
jnp
aas
mov
lret
inc
xor
inc
mov
dec
bound
fs
out
or
lcall
int
pop
pushf
repz
xor
mov
xor
mov
mov
stc
jnp
negb
aaa
mov
sub
mov
test
stos
xor
xchg
mov
outsl
call
mov
fwait
insb
lods
sbb
xor
bound
dec
daa
sti
scas
fcompl
mov
lds
stos
cmp
jnp
push
xor
fcmovnbe
imul
mov
jnp
aad
xor
pop
inc
mov
inc
jnp
mov
jbe
jnp
pusha
popa
xor
sub
int3
jnp
dec
lock
in
xor
pop
sub
lcall
mov
add
std
lods
jmp
xor
mov
cmpsb
jnp
pop
jmp
testb
into
aaa
mov
inc
stos
jnp
lret
sarb
cld
cmp
mov
sahf
xor
xor
dec
rcrl
imul
sub
out
jns
das
jnp,pt
or
rorb
mov
mov
push
fstpt
pop
inc
jle
push
xchg
add
mov
insl
dec
jnp
es
push
add
divb
call
jnp
push
ljmp
dec
fst
mov
into
xchg
jo
jnp
lods
popf
sbb
add
lea
dec
mov
xchg
jmp
dec
inc
sahf
out
stc
xor
lods
push
jae
fdivrl
push
repz
test
and
sub
xor
aaa
sbbb
jbe
jae
pop
mov
mov
or
aas
jnp
dec
ss
jae
mov
aam
cmp
mov
imul
and
loopne
sub
jnp
fidivl
sub
adc
dec
daa
cmpsb
inc
mov
xor
xchg
mov
mov
ds
jg
jp
daa
pop
fnstsw
jo
push
xor
subb
mov
push
dec
jnp
xor
jne
jmp
jnp
adc
mov
jnp
mov
xchg
sar
pop
jmp
inc
shl
mov
lods
jbe
enter
out
jp
mov
imul
lds
cli
sub
stc
pushf
jae
push
or
lea
aaa
push
xchg
loope
xor
cmp
jae
pop
mov
mov
jbe
icebp
pop
mov
push
bound
jnp
xor
jnp
xor
cmp
add
shrb
int
imul
and
sbb
scas
sti
inc
jnp
cltd
call
jne
jae
push
jnp
or
es
shlb
jnp
jno
in
insb
or
cltd
lret
pop
and
push
jle
add
jo
cmp
xor
jg
jnp
mov
mov
imul
dec
pop
pop
mov
cli
jp
add
push
jae
dec
cmp
or
push
ja
insb
dec
inc
cmp
outsl
scas
dec
cltd
jnp
xor
subl
imul
js
mov
push
bts
jae
mov
jnp
sbb
inc
mov
ss
pushf
jmp
xor
xor
or
push
lret
dec
lcall
in
xchg
jae
mov
out
rorb
lods
fcom
aam
push
jnp
xlat
test
enter
pusha
mov
push
cwtl
fldt
pushf
and
into
hlt
inc
xor
stos
jnp
out
sti
and
cmc
cmp
push
popf
jo
stos
into
outsb
xchg
push
idivl
mov
aas
test
inc
lret
cmpsb
out
mov
adc
jnp
jecxz
mov
adc
imul
sti
das
pop
std
jnp
dec
dec
xlat
cmp
mov
cmp
loopne
push
cwtl
add
lock
xor
jnp
mov
fwait
xor
inc
mov
jno
jmp
jae
sbb
jnp
dec
xor
out
push
jnp
mov
lahf
and
pop
jnp
call
sub
jnp
daa
fdivs
jnp
jmp
sti
lret
jnp
mov
movsl
sbb
int3
sub
jb
or
mov
mov
movsb
inc
add
cltd
sbb
xchg
jnp
les
call
sub
cmc
cmp
jns
or
sub
pop
inc
dec
sub
pushf
or
hlt
outsl
ja
lea
sbb
cmp
test
lret
mov
sbb
movsl
jae
inc
scas
lcall
push
shl
jnp
in
pushf
out
stc
mov
push
movsb
int
ret
mov
pop
and
add
jnp
cmp
dec
xor
jnp
js
sar
jae
jnp
push
push
xorl
mov
rcl
jno
pop
jnp
cmp
mov
pushf
test
popa
in
daa
push
mov
sub
or
mov
dec
arpl
pop
inc
jns
repnz
sbb
inc
adc
test
mov
push
in
push
lock
iret
pushf
fnclex
js
or
cwtl
mov
inc
icebp
not
push
addr16
push
fnstsw
push
mov
cmc
fcompl
jnp
sub
cmp
fadds
sub
ret
sub
jg
push
xlat
or
subb
jns
jo
ljmp
xor
and
popa
inc
imul
imul
add
jns
add
jp
mov
cmpsl
jnp
lea
xchg
leave
xor
jnp
bnd
xlat
xchg
pushf
mov
daa
insb
push
imul
dec
bound
push
hlt
pop
xor
inc
insl
pop
sbb
je
jnp
inc
sbb
jae
out
insb
xchg
dec
jo
cmp
xchg
stos
test
repz
fdivrs
sbb
mov
pop
sarb
jmp
cs
aaa
lods
mov
mull
dec
mov
rcl
push
into
ja
call
pop
mov
jo
or
mov
xor
imul
popf
enter
fstpt
cld
mov
mov
js
cmp
and
stc
cmc
jl
test
cmp
mov
adc
std
ja
inc
sbb
jnp
xor
lods
lcall
popa
lret
inc
sahf
ja
clc
push
jnp
dec
xchg
fimull
mov
jecxz
mov
jbe
outsl
std
xlat
in
lea
jnp
xchg
cmpsb
mov
pushf
dec
jmp
jae
add
jnp
std
hlt
lods
pop
cmc
pushf
sub
std
insl
sbb
clc
add
mov
sub
pushf
mov
andb
cmpsl
cmp
out
dec
xor
ds
mov
lods
lock
push
lahf
ficoml
ret
outsl
fsubp
jae
jle
jnp
adc
dec
hlt
mov
xlat
inc
adc
mov
sahf
xor
mov
stos
and
lret
outsl
data16
stc
lea
loop,pn
xchg
mov
pushf
cmp
inc
or
add
das
or
mov
pop
jae
add
xor
ss
sbb
outsl
xor
das
jnp
mov
mov
jnp
adc
cmp
sub
jmp
inc
dec
pop
mov
je
sub
decl
les
cli
jno
dec
jp
cmp
dec
ljmp
xor
and
push
jnp,pn
popa
mov
test
scas
imul
sbb
daa
outsb
pop
rorl
das
dec
stc
cmpsb
jnp
jbe
mov
lds
and
jnp
lods
xor
fwait
pop
lret
jp
mov
dec
pushf
mov
mov
cmp
sbb
adc
mov
mov
xor
fldcw
stos
cwtl
dec
mov
xor
sar
sti
cmp
xchg
ja
jne
add
stos
jnp
inc
mov
and
jnp
movsl
mov
push
mov
xchg
sub
pushf
push
inc
jnp
shlb
repnz
lds
cwtl
sarl
ret
sub
stos
sti
mov
and
mov
push
js
cmp
shlb
mov
in
aaa
popa
mov
loope
enter
sbb
push
outsl
pushf
mov
sbb
jnp
loop
xlat
dec
and
sbbb
mov
hlt
out
sbb
mov
jnp
mov
fmull
shl
daa
or
xor
lods
pop
mov
add
mov
cmc
scas
push
jnp
jae
push
pop
mov
mov
adc
jmp
xor
jnp
scas
push
pusha
jnp
outsl
pop
sub
cmp
and
fnstcw
cmp
mov
lods
fsubs
sarl
mov
aaa
aas
jo
dec
movsl
jnp
ss
dec
pop
and
jnp
pop
cmp
jns
clc
inc
jnp
mov
adc
jb
mov
jnp
sbb
shl
lcall
push
jnp
add
movsb
sub
jmp
mov
stc
mov
outsb
cwtl
lods
or
xor
sub
jnp
push
adc
ds
fcmove
outsb
mov
jns
nop
jnp
pop
push
cmp
in
jne
mov
jno
inc
jnp
mov
pushf
cmp
jnp
loope
push
les
cli
dec
repz
cmp
divl
jecxz
pop
jnp
scas
cli
adc
mov
lods
inc
jnp
adc
pop
mov
sahf
js
arpl
in
lock
push
lds
push
dec
in
cs
out
mov
divb
lods
inc
pop
ficoms
ss
or
sub
orb
xor
adc
fs
call
sbb
pop
and
ss
mov
sub
cmp
outsb
stc
popa
jnp
test
xor
jnp
std
sahf
inc
and
int
mov
mov
rclb
sbb
jae
inc
fildll
pop
inc
jnp
xor
add
jnp
mov
imul
mov
xchg
inc
sbb
shll
fsubs
push
jnp
mov
push
adc
mov
jnp
mov
and
jnp
bound
xor
push
xchg
lods
dec
sbb
push
cmp
mov
or
insb
push
mov
cmp
jae
or
in
cmpsb
je
repnz
sub
shll
outsl
sbb
mov
jl
imull
xchg
push
sub
fwait
pushf
jnp
aam
andb
daa
jnp
inc
jae
sbb
out
jnp
lods
loop
pop
fstpl
mov
shll
push
js
das
sub
nop
jnp
mov
xchg
mov
in
insl
aaa
xchg
lcall
sbb
xor
pushf
dec
mov
xchg
jge
addl
cmpb
jmp
and
ljmp
jns
outsl
sbb
lock
aaa
movsl
mov
xor
cmp
mov
jl
int3
and
insb
mov
sbb
cwtl
pop
loopne
lcall
and
jbe
xchg
inc
mov
cld
outsl
xor
jnp
pushf
fadds
jnp
xor
mov
testl
and
icebp
inc
add
jnp
dec
notl
pusha
in
sti
insl
jnp
fwait
pop
mov
jnp
dec
mov
mov
lret
cmp
cmp
fidivrs
mov
cmp
fdivrl
mov
mov
push
mov
mov
cs
in
jne
mov
ljmp
adc
xor
push
cli
add
in
daa
lods
mov
sub
call
lret
mov
xor
dec
stos
xor
push
add
mov
bnd
xor
push
sub
mov
prefetchw
shlb
ret
cmp
bound
cmpsl
inc
mov
out
jnp
or
push
out
cmp
add
ja
adc
jnp
test
mov
jnp
loopne
mov
xor
mov
jnp
shlb
jp
lock
xor
not
es
ja
std
pop
repz
insl
sbb
lahf
mov
ja
shll
jnp,pt
push
call
ljmp
shr
pop
jnp
jae
dec
and
jnp
lods
addr16
sbb
cmp
dec
sbb
inc
cs
loopne
in
push
aam
jne
lret
mov
jnp
pushf
lea
movsb
lcall
addr16
outsl
inc
movsl
add
shll
mov
cli
jmp
push
ja
or
data16
jno
scas
call
xor
mov
cwtl
imul
cs
out
imul
inc
jp
leave
aaa
jae
push
sbb
fs
jnp
fisubrl
cmp
jnp
mov
mov
jnp
in
sbb
mov
sbb
icebp
fcomps
cmp
adc
cmp
cmp
iret
mov
push
out
cmp
lods
jnp
aam
sbbb
cli
cmp
pushf
std
jbe
jg
mov
dec
jnp
and
xchg
xor
add
jnp
sbb
cmp
inc
mov
inc
lret
dec
ja
sbb
add
hlt
dec
sbb
jnp
pop
daa
scas
inc
mov
or
jecxz
ret
rol
mov
jnp
jb
xor
cmp
jnp
and
jp
int3
xchg
test
stos
and
xor
call
mov
into
in
xor
push
leave
ret
cmp
jnp
xor
sub
mov
test
insb
cli
jbe
rcrl
mov
dec
mov
jle
jae
push
jns
push
call
iret
in
xchg
lods
jnp
xchg
sub
lret
outsb
xchg
jae
inc
data16
out
mov
mov
ret
subl
mov
cmp
enter
xchg
add
fmuls
jmp
mov
bound
xchg
fs
xor
int3
jnp
cmc
xor
push
adc
movhlps
fidivrl
aaa
and
xlat
and
jnp
xor
popf
mov
mov
dec
insl
test
xchg
lods
insb
sbbl
push
les
fbstp
push
icebp
jnp
adc
aad
scas
push
pusha
mov
test
rorl
mov
xchg
clc
push
xor
jnp
pop
xchg
in
xchg
pushf
jnp
dec
movsl
int
bound
add
mov
dec
lcall
sahf
les
es
jno
clc
jmp
dec
sbb
cmpsb
adc
jbe
adc
push
sarl
fidivrl
or
lods
nop
in
add
mov
xor
and
into
hlt
dec
jno
fisubrl
sbb
repnz
je
and
dec
bound
or
sbb
hlt
pop
sbb
popa
fidivrl
pop
lea
push
cmp
add
lods
jl
jae
in
imul
or
sbb
inc
lahf
adc
dec
aam
jnp
daa
fcom
push
lock
sub
jnp
stos
pusha
push
mov
sbb
aad
fwait
repnz
lahf
mov
inc
pusha
xchg
ja
sbb
sbb
imul
lods
sbb
fldlg2
aad
lea
jnp
mov
xlat
stos
stos
mov
adc
testl
and
mov
sbb
imul
mov
mov
loop
sbb
fwait
or
jb
jnp
into
out
dec
stos
out
jnp
xor
dec
mov
mov
lret
pop
ret
push
lret
jbe
fcmovu
jnp
xor
mov
sti
jnp
sbb
push
sbb
mov
jnp
xor
jge
stc
mov
mulb
pop
sub
mov
ja
mov
call
mov
xchg
repnz
jnp
push
mov
xor
xor
sub
xor
bound
jnp
pop
sub
test
pushf
loopne
inc
subb
jnp
xlat
lods
xor
or
clc
push
addr16
xchg
fidivrs
dec
lock
sub
sti
push
cmp
adc
mov
jnp
les
sub
mov
mov
test
sbb
dec
sbb
jnp
cmpsl
push
cli
xchg
gs
scas
inc
lret
sbb
cmp
jmp
inc
adc
je
insl
xor
fs
pushf
push
in
fisubl
stc
jnp
fldln2
lret
cmp
lods
jge
popa
fcom
adc
or
jnp
fnsave
inc
jo
jnp
jbe
or
xor
pop
cmc
push
arpl
push
imul
movsl
ret
clc
xor
lods
sahf
and
pop
jnp
mov
leave
mov
icebp
dec
adc
mov
ss
outsb
sub
ljmp
adc
or
add
popf
xor
popa
cmp
jnp
mov
mov
jnp
sbb
ss
outsl
lahf
mov
xchg
jnp
lds
sub
pop
adc
call
es
jp
test
mov
lret
shl
ja
add
mov
sbb
hlt
adc
xchg
mov
mov
sub
xor
jne
push
pop
jnp
lahf
pushf
xchg
jb
push
inc
jnp
out
bound
sti
aam
dec
mov
sub
jnp
orl
enter
dec
mov
mov
imul
insl
and
cmp
xorl
push
ss
dec
push
jne
js
lods
aas
es
insb
int
mov
jg
lahf
xor
push
les
sub
aas
loopne
cmp
imul
ja
add
aad
push
test
push
jae
int3
adc
jp
jnp
xor
or
cs
jnp
sub
sub
rcrb
incb
pop
lret
ret
and
cmp
call
adc
cwtl
xor
xchg
xor
jnp
mov
jns
lods
sahf
repz
inc
pop
outsl
dec
jb
cmp
stos
jnp
fnstcw
call
pop
jg
mov
test
push
enter
data16
js
dec
dec
adc
adcb
mov
mov
fldenv
pop
lods
mov
or
je
mov
mov
cli
sub
sub
ss
or
cltd
adc
fs
dec
cmp
push
pop
in
mov
cmp
xlat
sub
xchg
jo
cld
jae
jnp
imul
sbb
mov
lods
sti
dec
jns
daa
int
mov
mov
outsl
out
mov
dec
mov
and
cmp
mov
jnp
pushf
mov
jge
dec
jnp
mov
jno
iret
add
jnp
gs
pop
xchg
out
xchg
dec
ja
add
cltd
shrl
mov
sbb
cli
pushf
and
xor
fwait
ss
adc
loope
clc
pop
fildll
pushf
and
or
mov
jg
and
mov
jbe
das
jnp
add
push
xchg
cld
push
jo
sub
call
mov
or
std
mov
in
es
lahf
lock
jnp
mov
fimull
mov
out
jmp
sbb
gs
cwtl
outsl
clc
fwait
popa
xchg
xor
mov
outsl
jb
pop
mov
dec
stos
xor
out
push
pop
or
mov
xchg
jno
aaa
inc
hlt
popa
jnp
and
sbb
das
sbb
daa
outsl
in
jnp
push
xor
sub
jne
mov
sbb
jnp
dec
daa
ds
cmp
mov
pop
movsl
jno
inc
jnp
xorb
jnp
xor
add
lock
cmpl
mov
adc
mov
dec
and
mov
enter
push
inc
sti
sahf
shrl
adcb
shr
into
ror
jnp
sub
mov
jnp
test
mov
jne
call
outsl
fdivrs
cli
ficoml
mov
cmp
insb
adc
je
jnp
imul
lret
jnp
lods
xchg
sub
xor
mov
and
cmp
bound
jnp
adc
stos
jnp
cmp
pop
push
nop
mov
insb
or
sbb
shll
sub
jo
rorl
insl
pushf
sbb
popa
jnp,pt
or
add
xor
in
xor
inc
std
loope
subb
cs
ja
lods
sub
jnp
sub
psrad
test
add
out
jecxz
pop
xor
jl
or
mov
shlb
loope
mov
add
imul
les
jno
scas
push
and
in
in
jnp
inc
ss
jnp
or
jae
inc
pusha
xor
cmp
push
mov
repnz
ret
sub
mov
shlb
cmp
shll
xlat
adc
jnp
gs
rcrl
lret
jnp
and
or
jns
fdivrs
add
and
pushf
sarb
xchg
mov
fstpt
ret
xchg
out
mov
jnp
mov
hlt
lods
outsl
jnp
sub
sarb
out
jnp
pop
in
mov
mov
or
sub
stos
xor
fisubl
shrl
sahf
fwait
lods
xchg
pop
mov
and
mov
jnp
cmp
dec
push
test
jnp
mov
push
int
popl
jnp
mov
mov
insb
cmp
cmp
jb
cli
or
ss
and
sub
dec
and
jnp
data16
stos
inc
xor
sbb
pop
jae
mov
cli
jg
mov
imul
inc
sbb
out
and
dec
xchg
cli
and
dec
out
push
sub
inc
mov
cmp
adc
dec
pop
insb
cld
push
stos
in
jnp
ds
mov
ret
mov
mov
fdivl
add
test
lods
jge
or
out
jno
cmp
inc
loop
mov
jnp
lock
mov
pusha
imul
pop
ret
stos
xchg
insl
je
lods
jnp
ret
add
daa
repz
mov
adc
xorb
aad
cmp
jecxz
sbb
int3
into
or
sbb
xor
idivl
popa
xchg
cmpsb
add
lods
dec
jnp
lcall
jnp
mov
fisubs
jnp
pushf
sbb
daa
jne
jnp
lods
add
sbbb
fistpll
movsl
cli
xchg
add
or
lods
jnp
out
inc
xchg
popf
inc
stc
dec
arpl
movsl
jecxz
in
jbe
shrl
xor
jnp
sahf
out
fists
jnp
das
inc
popw
ss
or
xchg
push
clc
add
jnp
sarl
lods
ljmp
ret
imul
cli
scas
mov
in
xchg
cmp
mull
das
mov
cmpsb
repnz
push
stos
test
in
mov
stc
lret
jnp
pop
sbb
int3
and
shrl
mov
mov
insb
push
mov
push
inc
arpl
jnp
inc
das
xor
or
stos
in
add
addr16
sarl
cmp
out
lcall
mov
bound
stc
scas
lea
adc
sbb
xchg
outsl
mov
sub
popa
int3
jbe
inc
and
jnp
push
lds
jnp
cmpsb
decb
dec
cli
mov
cs
les
jp
jb
fs
mov
stos
pushf
jnp
ror
es
mov
cmp
jae
enter
sbb
xor
jmp
pop
push
jnp
cwtl
xlat
pop
andl
hlt
sbb
call
sub
ja
add
cmp
jb
rcl
xchg
jge
or
sbb
loope
jnp
pop
popa
ljmp
jl
add
adc
or
in
sub
sub
lods
mov
lret
stos
cmp
inc
jnp
jbe
fdivp
loop
jge
pushfw
icebp
mov
inc
mov
insb
jbe
pop
fsubs
insl
inc
jnp
lcall
jno
xor
in
or
mov
xor
scas
push
mov
icebp
outsl
cmp
outsb
out
subb
or
mov
repnz
sbb
sub
mov
push
cltd
ss
lods
jns
sub
test
jnp
ljmp
jae
mov
cmp
push
sub
shrl
mov
lahf
jecxz
clc
adc
call
add
pushf
push
jp
movsl
jnp
xor
add
sub
bound
jnp
cltd
sbb
jae
ja
lcall
cmp
add
test
pop
jnp
scas
mov
add
pop
and
xchg
movsl
cld
jnp
pop
pushf
shr
lret
jnp
adc
fdivrs
mov
xlat
ja
mov
testl
mov
jnp
popa
fadds
loop
add
jae
push
and
adc
sti
cmp
test
aam
xchg
les
dec
dec
jp
add
lcall
ret
sarb
lahf
jo
enter
jnp
into
btc
arpl
jne
cmp
rclb
inc
jnp
fs
dec
cli
add
mov
adc
int
lods
lcall
insl
in
jnp
mov
mov
jnp
call
lcall
pop
outsl
xorl
cli
ss
adc
mov
insb
xchg
ds
sub
adc
inc
outsl
xorb
sub
mov
xchg
push
movsb
cmpsb
cld
push
jnp
aaa
in
icebp
sahf
dec
or
inc
aam
sub
push
sbb
push
add
xchg
inc
cmp
call
hlt
imul
pop
lock
push
lcall
sub
out
rolb
in
add
xchg
shrl
add
sarb
xchg
ja
lods
jo
sub
ret
sub
popf
outsb
je
add
push
sub
mov
movsl
inc
loop
sub
xchg
jnp
and
sub
jnp
ret
lret
sbb
sarl
xchg
add
loop
lock
lods
in
jnp
addl
test
fidivrl
les
add
mov
dec
call
js
imul
jne
ret
xor
loopne
jmp
cmpl
lods
or
push
es
insl
in
shlb
dec
fwait
inc
cmp
jnp
cmpsl
mov
and
jnp
mov
mov
lods
cmc
shll
sub
mov
xor
jnp
mov
push
cmpsl
jbe
bound
sub
xlat
jnp
inc
jmp
and
mov
jnp
cli
shlb
or
mov
popa
lea
sub
lods
fidivl
cmpsb
xor
hlt
shr
jnp
in
pop
test
clc
nop
sti
pop
into
xchg
adc
in
dec
arpl
fs
lods
lock
test
in
lret
jnp
add
sub
gs
movsb
ficoms
subl
popa
fbld
pusha
mov
push
mov
jnp
or
xchg
jnp
ret
inc
push
adc
repz
test
sub
movl
or
out
pop
mov
in
pop
in
mov
mov
lock
dec
xor
popf
or
aas
inc
ja
popa
pushf
jnp
pop
sti
scas
sarl
lock
jg
ret
add
mov
pop
mov
xchg
loopne
lret
rcr
inc
orl
daa
xchg
xchg
jnp
cs
jbe
int
jnp
mov
xchg
or
lods
inc
pop
fdivs
jmp
jnp
sbb
aam
inc
dec
lods
jl
mov
bound
cmp
mov
insl
outsl
out
dec
imul
cmpsb
insb
sub
jnp
mov
mov
jmp
and
xor
pop
int
data16
fsubrs
je
bnd
mov
xchg
add
jnp
sbb
insb
es
rol
jnp
jge
inc
mov
lods
sub
sub
xor
cli
aaa
daa
sarl
dec
loope
mov
mov
out
cmp
mov
outsl
inc
test
les
jp
inc
in
inc
jnp
out
jl
cmp
dec
jnp
ss
mov
movsb
lret
mov
sbb
imul
test
sahf
je
jnp
mov
aaa
cld
jnp
lcall
cmp
clc
subl
lods
test
jnp
push
test
fidivl
pop
and
sbb
mov
mov
jnp
dec
aam
lahf
push
loop
in
mov
lods
adc
or
mov
in
mov
cmp
xchg
test
outsl
cmp
sub
int
aam
jnp
pop
pop
stc
push
mov
jnp
dec
mov
fmull
pop
pusha
or
or
and
jmp
mov
negl
mov
outsl
jnp
sahf
add
test
or
mov
scas
ljmp
nop
adc
mov
cli
mov
jnp
push
lahf
pop
aam
cwtl
xchg
jnp
repz
mov
enter
jge
xchg
cmp
xor
lods
xor
enter
push
mov
jno
je
add
imul
in
fs
jnp
sbb
stos
arpl
add
fs
in
jae
add
pop
jnp
adc
cmp
lret
jp
mov
or
aam
enter
xor
push
fmul
pushf
jnp
testb
jnp
adc
sub
ljmp
cmpsl
xchg
adc
jnp
popf
inc
rclb
xlat
rclb
jnp
and
iret
mov
lret
mov
sub
sbb
pop
cmp
dec
aad
into
iret
std
and
dec
mov
popf
mov
push
mov
pushf
jo
push
jnp
mulb
mov
add
xor
xchg
push
es
push
dec
cmp
jecxz
mov
jnp
add
imul
cmpsb
cmp
pop
mov
lods
inc
mov
jae
sbb
test
sub
cmpsl
jle
dec
outsb
subb
scas
add
dec
jnp
adc
into
lcall
mov
int3
dec
xor
out
fwait
mov
out
sar
mov
or
xchg
mov
cwtl
pusha
mov
jnp
adc
popf
push
fnstsw
mov
lret
xor
cmp
mov
and
in
fwait
cli
shll
cmc
xor
push
sti
xor
sbb
jnp
lods
popa
test
pop
fsubrl
jae
repnz
nop
pushf
mov
jnp
jecxz
les
jg
sbb
push
repz
jnp
lcall
pop
and
jno
mov
cmpl
mov
sarb
adc
or
dec
pushf
mov
xor
fwait
push
inc
xchg
adc
and
dec
cli
aad
jae
cs
sub
pop
adc
xchg
data16
je
das
into
xor
fcom
lret
adc
call
cmp
jmp
adc
jae
mov
mov
jb
adc
sbb
scas
or
jns
add
pop
cmp
iret
mov
jae
sbb
or
jnp
ds
sti
stos
mov
mov
imul
sbb
fsubl
rcrl
cld
dec
xor
rol
lods
or
pop
idiv
pusha
call
test
sbb
fcmovnb
loope
sub
or
adc
mov
bound
rclb
mov
jae
push
mov
mov
outsl
int3
jp
mov
sahf
scas
sbb
shlb
sarl
jo
jb
xor
adc
daa
jae
sti
sbb
insl
xor
int3
or
je
pusha
jnp
pop
stos
xor
jle
jnp
ss
ds
xchg
mov
sub
loopne
lods
cwtl
popf
or
sbb
add
mov
andb
fidivl
mov
jp
cmp
jnp
ret
or
aaa
jnp
push
dec
pushf
lcall
or
je
dec
mov
clc
pop
dec
dec
push
pop
pusha
sub
adc
sub
scas
or
lock
jnp
notl
mov
mov
js
out
test
addr16
test
mov
add
lods
loope
sub
ss
mov
insb
pop
aam
jnp
xor
repz
cvttps2pi
and
xor
mov
inc
push
out
sub
dec
mov
jb
cmp
adc
shlb
pop
lods
mov
jecxz
jno
scas
lds
mov
in
pop
pop
pop
adcl
rorl
lods
jnp
fcomps
je
cmpsb
jnp
mov
push
inc
aaa
repz
mov
xor
or
test
jl
mov
insb
dec
add
shrl
or
sbb
movsl
std
mov
call
dec
inc
dec
xchg
mov
or
mov
pop
loope
jns
push
mov
cmpsb
sti
dec
xor
mov
and
mov
jnp
mov
lods
sbb
out
stos
jg
dec
jno
shrb
inc
icebp
dec
and
mov
js
lods
fwait
inc
jnp
cltd
loope
mov
cmp
mov
cmp
lret
sbb
stos
popa
sbb
rorl
repnz
andb
push
pusha
imul
dec
lock
xchg
insb
jnp
sbb
loop
enter
in
pop
js
mov
sbb
pop
sbb
mov
add
rcl
sub
in
clc
or
and
jnp
mov
int
ret
jnp
sti
add
ficoml
jnp
adc
dec
sbb
cmpb
mov
mov
pop
sbb
jecxz
outsl
jnp
test
cli
fisttps
insb
out
push
test
jno
repz
xchg
scas
jb
imul
jmp
sahf
ret
fidivrs
push
scas
imul
add
jnp
bound
inc
mov
shlb
les
sub
loope
sti
testl
and
insb
in
jl
test
inc
sbb
in
cli
sub
pushf
dec
js
sub
jbe
inc
xor
fbstp
pop
inc
jnp
cwtl
cmp
lods
add
cli
lret
mov
add
jnp
movsl
jmp
das
jnp
incl
mov
test
jnp
sub
mov
pop
pop
mov
mov
imul
scas
sbb
dec
iret
jnp
mov
mov
xor
jnp
cli
xchg
sub
mov
jnp
orl
sbb
mov
lods
or
sub
pushf
adc
lret
push
insl
mov
dec
loope
sbb
repnz
aam
lds
jnp
mov
mov
jnp
outsb
cmp
arpl
popa
dec
cmpsl
mov
inc
movsl
psllw
bound
mov
sbb
xchg
shll
push
in
jnp
mov
sub
inc
or
jnp
inc
aam
stos
ss
jnp
aaa
popa
cmp
add
ret
jnp
aas
pop
insb
sti
lock
aad
es
out
repnz
push
pop
mov
xchg
xor
cmp
sbb
out
sbb
pushf
inc
sub
mov
outsl
in
add
adc
lret
sub
mov
jnp
inc
xor
or
mov
xor
jp
add
sub
jns
out
into
sqrtps
leave
fnstcw
and
pop
inc
imul
or
test
cmpsb
or
ljmp
pushf
sub
xchg
mov
js
add
aad
or
mov
test
test
jns
sub
mov
sbb
lret
jl
dec
outsb
leave
ja
dec
out
jnp
cmpsb
shr
mov
fsub
pusha
mov
mov
cltd
lcall
sbb
fwait
aam
xor
pushf
imul
xorl
fnstsw
dec
add
loop
lock
jnp
hlt
out
ss
pop
mov
lods
orb
pop
test
pop
lods
cwtl
push
ja
pusha
cltd
enter
and
push
lcall
inc
cmc
sbb
adc
insl
cmp
sarb
or
int3
pop
xor
mov
pushf
sarl
push
dec
inc
mov
repnz
jo
lods
mov
js
fwait
jnp
or
lods
loop
push
adc
lods
repz
fdivl
lea
ljmp
mov
sbb
jle
jnp
loop
cli
lahf
fwait
out
pushf
jp
xchg
jnp
sub
lret
add
call
sbb
pop
out
xlat
jnp
movsb
mov
lret
and
pushf
jnp
inc
sbb
call
arpl
sbb
loope
or
jnp
jp
mov
js
adc
je
out
in
loopne
jnp
or
in
dec
and
jnp
rcl
sbb
out
aam
jnp
xor
xor
jle
push
lcall
insl
jmp
jnp
mov
mov
xor
jnp
xorb
repnz
push
or
sub
int3
dec
sbb
pop
fcmovnu
aaa
pushf
add
stos
mov
jae
xlat
movsl
xor
xchg
cmp
outsb
jns
fisubl
sbb
push
jae
movsl
arpl
mov
and
xchg
cmp
inc
xlat
mov
outsl
mov
pop
shll
icebp
pop
jnp
ds
or
out
add
mov
cmp
jns
jge
cmpsl
jnp
aam
lds
pusha
xor
aad
rcl
out
insl
imul
sbb
data16
jp
mov
jnp
fidivl
scas
jnp
xor
std
pop
mov
lret
push
push
imul
ss
rcrl
mov
idivl
stos
aad
jnp
xchg
iret
loop
push
pop
sbb
dec
jnp
inc
push
ljmp
jnp
add
inc
mov
js
popa
pop
xor
adc
add
jnp
in
iret
lods
adcb
mov
mov
ret
ret
or
decb
jge
add
push
inc
cld
push
jnp
mov
outsb
jnp
aaa
or
sahf
out
add
jnp
sub
add
dec
repz
lods
lahf
push
out
aam
cmp
pushf
pop
stc
mov
push
jnp
pop
or
jnp
ljmp
jnp
mov
push
sub
subl
dec
lods
jae
xchg
pop
aad
cmpb
daa
sbb
sar
sub
xchg
fdivs
pop
jnp
xchg
mov
dec
push
push
add
xor
enter
cmpl
fildll
shll
ret
jnp
aas
jbe
stc
mov
lock
outsl
dec
mov
or
xor
xlat
xor
pop
lea
sbb
xor
dec
jo
push
imul
lcall
mov
lods
iret
pop
push
scas
idivb
inc
xlat
inc
and
mov
lock
out
fldt
pushl
jns
jge
stos
xchg
jnp
pop
hlt
int3
call
mov
add
sub
mov
jns
cli
sub
lret
push
xchg
addr16
jns
pop
lock
mov
adc
cmp
mov
jnp
xlat
adc
jp
mov
mov
pop
lods
mov
cmp
jno
xor
xor
jnp
push
dec
lods
popf
rcrb
pop
mov
jecxz
imul
push
mov
xchg
stc
arpl
sub
out
or
call
jnp
arpl
cmp
mov
jnp
inc
jg
lret
sub
mov
hlt
or
ljmpw
push
adc
adc
jo
jnp
imul
pushf
loopne
pop
inc
xor
fsub
das
jnp
pop
out
lcall
outsl
ljmp
jnp
sti
sub
jle
je
icebp
inc
jae
dec
add
dec
pushf
call
push
lock
test
mov
pop
lods
adc
call
fidivl
add
xor
cs
in
shrl
jnp
push
mov
mov
scas
mov
dec
imul
dec
jne
push
jnp
lock
and
out
mov
jnp
dec
call
jnp
cmp
sub
or
nop
mov
insb
cmp
mov
add
aaa
push
add
test
inc
loope
jp
sub
addb
enter
popf
jae
jo
xlat
xor
xchg
das
hlt
sub
aaa
mov
pushf
int3
idivl
jno
inc
sub
push
mov
jbe
jecxz
pop
int3
xor
or
mov
cmp
cs
jno
pop
in
push
cld
imul
xor
iret
loope
push
mov
add
pusha
jnp
lock
repz
shrb
xchg
dec
adc
jnp
mov
stos
popf
mov
pushf
ret
mov
and
or
js
push
jnp
add
mov
jnp
mov
in
jnp
mov
mov
in
push
sub
ja
xor
iret
push
movsb
mov
repnz
mov
or
insl
out
add
pop
sub
dec
jnp
insb
xlat
jo
out
xchg
cmpb
js
pop
or
aam
aaa
in
cld
insl
mov
nop
jnp
mov
pop
je
jnp
mov
sub
push
lcall
push
jnp
rolb
cmpsb
mov
jecxz
cmp
notb
addb
outsl
sti
xor
das
mov
or
fwait
rorl
sbb
xchg
mov
mov
add
pop
into
or
xor
imul
popa
call
cwtl
cmp
sbb
jnp
xchg
dec
add
or
je
or
rcll
mov
outsb
mov
or
insb
sbb
adc
inc
add
sub
sahf
or
orb
sbb
or
enter
mov
test
cmpl
ja
jne
icebp
pushf
dec
mov
sub
or
cltd
loopne
sbb
mov
loop
paddsw
sbb
jno
pop
push
jnp
mov
mov
pop
fwait
repnz
int3
insl
lods
mov
push
jnp
and
shll
cmp
aas
jae
in
insl
sub
jnp
dec
inc
and
enter
sahf
xor
mov
das
mov
cmp
jo
cltd
xorl
fisubl
icebp
mov
mov
xor
scas
gs
adc
jecxz
in
aaa
pop
add
push
into
arpl
xchg
pushf
bnd
cmp
mov
ffree
cmp
bound
repnz
sbb
push
xchg
lods
stos
idivl
in
cmp
adc
in
loopne
push
cmpsb
and
es
jnp
fs
mov
iret
sti
pop
aas
push
cmp
fisubs
fsubrs
rolb
or
add
push
mov
fwait
and
pop
pop
inc
mov
gs
push
xchg
leave
imul
jo
popf
das
in
pushf
jnp
ret
adc
sarl
jnp
movsl
add
mov
xchg
jecxz
sbb
add
outsl
sub
pop
cmp
shrl
push
out
xchg
mov
aam
jnp
jmp
mov
or
jnp
push
lret
idivb
aad
nop
cld
adc
mov
xor
jns
mov
pop
inc
jns
pushf
jnp
rorb
jge
sahf
jne
das
mov
mov
jp
cmpsl
xor
popf
mov
xchg
jnp
jns
cmp
adcb
mov
pop
mov
pop
cmc
lods
clc
sahf
jnp
sti
dec
cmpsl
testl
ds
enter
xchg
mov
add
cli
mov
mov
outsl
jnp
push
dec
out
add
or
adc
jo
lods
xor
pop
mov
mov
jnp
shlb
popa
notl
jp
add
mov
cmp
xchg
ret
or
mov
mov
insl
inc
iret
in
insl
mov
cmp
int3
out
out
rcrb
outsb
outsl
aad
xor
filds
das
push
jae
stos
js
int3
pop
test
xor
mov
and
insb
mov
lods
adc
imul
dec
in
mov
dec
sbb
add
xor
fcomps
xchg
push
xor
cli
fildl
jnp
dec
jne
mov
mov
ds
and
mov
add
ss
inc
inc
in
push
xchg
pop
jo
popa
cmp
jnp
insl
mov
stos
lahf
jnp
negb
inc
mov
imul
mov
mov
dec
jne
mov
imul
or
push
jns
and
mov
data16
xchg
in
push
inc
xor
xor
pop
jnp
je
lea
mov
jnp
xor
int
aaa
jnp
in
mov
mov
xchg
cs
stc
pop
or
jnp
mov
adc
loop
repz
xchg
testb
das
sub
mov
jge
jnp
push
cli
in
addr16
add
sahf
dec
cmc
xchg
push
cmp
pop
mov
jnp
je
lret
xchg
xor
and
popa
out
sbb
dec
pop
mov
push
cmp
or
imull
push
int
jnp
scas
push
pop
jmp
sarb
push
inc
pop
jae
mov
dec
mov
mov
pop
jnp
xor
mov
ljmp
xchg
fadds
stos
lods
xchg
jnp
movl
scas
les
push
jno
lea
jnp
cmp
data16
sbbl
fistl
repz
imul
mov
cmpl
sar
movsb
xlat
ret
jg
adc
pushf
ja
push
adc
push
in
loopne
imulb
imul
stc
outsb
push
lret
enter
cmp
jnp
rcl
ss
mov
mov
lds
mov
nop
icebp
push
xor
popa
pop
test
dec
dec
out
enter
lret
test
xor
cmp
mov
jnp
les
pop
xor
mov
push
jnp
mov
or
ja
dec
push
lods
test
repz
add
or
push
xor
daa
lock
pop
mov
mov
insl
hlt
cmp
jnp,pt
bound
mov
lods
and
jge
sbb
in
lcall
and
xchg
in
jnp
mov
dec
pop
ret
jb
inc
dec
jbe
inc
popf
aaa
sbb
addr16
inc
idiv
adc
add
outsl
adc
hlt
adc
sub
pushf
jnp
fwait
clc
mov
jae
ss
mov
bnd
testb
mov
outsl
xlat
xchg
movsl
xor
and
in
into
adc
outsl
jnp
fdivrs
push
sub
arpl
mov
lds
xchg
mov
or
inc
imul
sub
repz
xor
push
out
jl
ss
mov
sbb
adc
clc
push
call
or
and
mov
mov
pop
std
dec
lods
popf
or
aam
xchg
xchg
jnp
lcall
sub
shlb
sti
inc
iret
cld
sub
xor
mov
icebp
clc
jae
add
das
lods
dec
fwait
nop/reserved
in
xor
and
hlt
and
aaa
cmp
cmp
xchg
adcb
xor
pop
inc
ds
dec
dec
pop
shll
loopne
mov
test
pop
xor
sbb
fnstcw
cmp
mov
lahf
mov
mov
out
push
sbb
fnstcw
dec
or
imul
xchg
pushf
mov
sbb
jns
xor
push
scas
sub
lcall
xor
aad
pop
push
jle
jnp
push
lret
fwait
mov
cmpsl
jnp
shll
repz
lods
push
cwtl
push
mov
inc
fsubs
clc
dec
push
int3
cmp
pop
add
leave
sar
je
inc
daa
jnp
repz
dec
xchg
xlat
pop
jnp
pop
fnstsw
mov
cmp
jae
push
xor
stos
cmp
clc
movsl
imul
pop
mov
in
sub
cmp
dec
jns
mov
jnp
lcall
mov
xchg
inc
mov
outsl
mov
pushf
pop
and
jnp
je
loope
adc
jnp
ret
xor
in
mov
mov
and
jnp
cld
outsb
ja
pop
or
inc
mov
or
lret
adc
cs
enter
mov
dec
idivl
or
adc
les
test
sbb
into
aaa
or
add
cmp
lret
lcall
and
pushf
aas
sbb
mov
sbb
mov
out
lods
imul
mov
mov
add
sbb
jae
pop
or
out
jae
sub
xor
jnp
test
pushf
int3
jnp
and
shrb
mov
popa
fistps
js
in
out
cmp
jnp
sub
int3
clc
sarl
push
jnp
xchg
and
cmp
sbb
mov
lret
cmp
adc
sbb
xchg
sbb
cmp
arpl
fcompl
pop
lods
movsl
dec
cmp
mov
push
mov
mov
imul
shrb
insl
jnp
adc
rcr
xchg
cmp
insb
jmp
cli
jbe
cwtl
xor
pushf
dec
sbb
rcll
fistpl
repz
lret
imul
and
mov
mov
jnp
and
pop
fs
lock
sbb
mov
dec
incb
insb
mov
bound
xor
or
sbb
sub
add
inc
imulb
aaa
outsb
imul
jno
jns
add
adc
jnp
sub
cmp
add
adc
pop
pushf
sub
fistpll
icebp
incl
divl
call
cli
jnp
sbb
add
or
cmpsl
adc
fbld
js
adc
add
or
or
cmp
aam
cmp
cmc
lret
dec
mov
sub
pushf
ret
pop
xchg
push
imul
xor
lds
dec
std
cmp
jo
jnp
xchg
in
movsl
fistl
cmpsl
jnp
and
mov
or
jae
int
jnp
add
mov
push
dec
mov
lret
cli
dec
loopne
adc
xlat
in
or
jmp
repz
ljmp
mov
cwtl
dec
or
or
inc
jnp
mov
push
xchg
sbb
lods
adc
push
lret
jnp
cmp
jbe
mov
mov
mov
fdiv
cld
dec
std
sub
xchg
jnp
imul
pop
mov
pushl
jl
jnp
xor
jnp
loop
in
xor
sarb
rep
sub
enter
push
idivb
jge
xchg
jnp
lret
push
fistpll
dec
sbb
cmp
push
jnp
push
lcall
mov
adc
ja
xorl
mov
jg
xor
add
adc
cli
xchg
loopne
idivl
mov
loop
insl
jnp
test
cmp
or
mov
scas
lret
idivb
jnp
and
jnp
mov
cmp
pop
fcmovbe
jmp
pop
lods
jnp
sbbb
sbb
cltd
cld
imul
dec
mov
js
and
xchg
out
rcr
xor
xchg
mov
mov
inc
jnp
int
mov
sbb
cmp
pop
jne
std
xor
sti
jnp
mov
mov
jb
jnp
push
dec
adc
push
bound
jnp
test
es
lret
dec
jnp
vorps
or
jnp
pop
lcall
xchg
push
sarl
insb
test
jnp
jle
test
xor
dec
hlt
sub
pop
stos
insl
pop
pop
mov
jnp
aaa
push
cmp
repnz
push
mov
mov
pop
mov
mov
push
sub
or
cmp
mov
xor
pop
sbbl
dec
and
mov
into
ret
pop
es
outsl
mov
out
jnp
stc
sbb
xchg
fs
jno
inc
jnp
outsl
xchg
ja
dec
daa
sbb
sbb
arpl
cmp
pop
das
jns
jnp
mov
mov
mov
jnp
decl
in
xchg
jae
inc
idivl
addl
and
fwait
mov
lcall
adc
in
aad
jnp
lcall
mov
out
popf
rcr
inc
stc
mov
dec
int3
sbb
inc
mov
insl
xlat
popa
rorb
inc
inc
lcall
jnp
mov
leave
xor
xor
andb
xor
shr
stos
jnp
repnz
shl
jnp
pop
lods
push
mov
insl
xor
mov
sbb
ja
mov
xchg
jnp
inc
sub
mov
sahf
jnp
stos
mov
and
pop
push
out
aas
sbb
or
jmp
imul
pushf
jne
fisubrl
and
push
push
sbb
out
jg
fmull
repz
popf
cmpsb
roll
cs
inc
jnp
dec
jne
jnp
out
sub
leave
jnp
dec
lcall
xor
adc
aam
enter
adcb
adc
fldl
push
jnp
cli
addr16
inc
repz
mov
jno
movsb
roll
sbb
and
aam
and
push
jbe
inc
or
scas
jae
or
clc
xchg
xchg
cmp
bound
pushf
mov
les
negb
lret
test
xlat
aaa
jnp
out
xchg
jne
jnp
sbb
jge
xchg
pop
mov
jnp
jp
cld
nop
fdivl
js
xchg
div
daa
call
aam
jae
mov
adc
jb
in
fistl
jnp
lods
sahf
loope
push
enter
xor
insl
shll
xor
xchg
sbb
aam
imul
arpl
in
cmp
mov
divb
mov
jnp
pop
roll
scas
sub
jnp
ja
stos
jp
pop
pushf
dec
sbb
add
mov
adc
push
jle
mov
and
dec
jnp
call
pop
scas
jnp
sub
dec
lret
jno
mov
pop
jmp
addr16
dec
fs
jns
jnp
ror
cmc
push
xchg
lods
pop
dec
jmp
sbb
xor
fistl
imul
mov
pop
inc
in
in
sbb
mov
outsl
mov
mov
cmpsb
mov
adc
in
mov
jnp
inc
xor
inc
jnp
cli
pop
dec
loopne
fadds
in
jns
out
cmpl
lret
push
and
cmpsb
jo
sub
pop
ss
jnp
jge
mov
jp
out
les
test
adcl
add
insl
xchg
cmpsl
std
push
jnp
jns
imul
sub
jnp
ljmp
jnp
pcmpgtb
hlt
std
jnp
cli
xchg
jb
stos
lds
sbb
and
fdivs
call
inc
jnp
cltd
pop
xor
sbb
xor
push
loope
mov
sub
test
fisubl
in
js
hlt
repnz
sub
loopne
push
and
mov
loope
jge
push
iret
mov
daa
jnp
in
ss
stc
mov
fistpll
xchg
rolb
adc
arpl
in
mov
daa
sbb
jno
in
sarl
jnp
repz
xor
sub
adc
jbe
fwait
pop
pop
insb
lcall
jb
lcall
or
add
fidivrl
jnp
std
or
jnp,pn
mov
mov
jnp
stc
xor
lock
dec
push
pop
sahf
in
xor
jnp,pn
jbe
mov
jnp
ret
jno
cmp
ja
mov
fdivl
jnp
push
loop
push
lods
repz
jnp
clc
mov
test
mov
xchg
xor
jnp
out
leave
divl
inc
dec
jnp
fbld
mov
mov
push
inc
jnp
int3
fnsave
popf
inc
cmp
sbb
fs
lea
sbb
mov
fwait
pop
ja
pushf
dec
push
out
ss
jnp
adc
shrl
aaa
xchg
jae
jne
push
push
arpl
dec
inc
xor
mov
std
in
add
leave
jnp
jl
push
push
inc
xor
jnp
imul
arpl
push
imulb
loopne
xor
lahf
inc
jae
cmp
lods
jnp
jo
and
out
cmp
inc
and
pushf
adc
jg
stc
add
mov
jnp
add
sbbl
insl
aad
jnp
dec
sbb
sbb
stos
aas
jbe
ret
jnp
mov
out
sub
into
add
or
fiaddl
movsl
jnp
cmovbe
sbb
push
outsl
int
popa
sbb
and
push
scas
mov
jnp
fwait
inc
cmp
sahf
or
cmp
lods
sbb
lret
pop
arpl
movsl
mov
jnp
cmp
push
lcall
data16
rcrb
xchg
xchg
jns
push
cmp
mov
outsb
mov
jmp
imul
adc
repnz
xchg
dec
jnp
mov
lock
dec
test
xchg
icebp
jns
pop
mov
push
stc
jle
outsl
and
mov
mov
popa
testl
jecxz,pt
mov
jnp
mov
inc
adc
inc
push
or
jnp
out
repnz
cmpsl
outsl
jnp
popa
ret
jne
mov
cmpsb
jnp
aaa
pop
jae
scas
adc
xor
jnp
add
inc
push
push
jle
cli
mov
inc
sub
scas
xor
rolb
jnp
loop
aad
add
cmpsb
jnp
fbstp
add
sub
cwtl
lret
xor
movsl
and
inc
lret
mov
inc
test
or
mov
jb
in
cmp
mov
xor
leave
jbe
test
lret
outsb
lods
or
jo
or
mov
jnp
add
stos
stos
mov
mov
cmp
in
sbb
or
sbb
mov
js
jnp,pn
cmc
insb
nop
mov
aam
lock
imul
push
sti
in
shlb
xchg
mov
cmp
dec
jnp
pop
mov
loope
cmpl
xor
sti
ljmp
out
popf
xchg
adc
int
jae
inc
jnp
rep
test
pop
add
lret
cs
jnp
in
push
dec
xor
mov
dec
inc
mov
sbb
loop
lds
aas
fldl
rorb
jmp
cltd
and
push
fdivs
add
inc
int
push
in
mov
jnp
outsb
pop
mov
cmpsb
pushf
cwtl
jne
icebp
aaa
mov
jbe
dec
cmp
testl
inc
fdivs
testb
jnp
mov
mov
mov
jnp
movsl
jns
icebp
push
jae
mov
mov
inc
jne
ss
jb
jnp
jg
stos
das
mov
dec
jp
fcoml
repnz
je
jo
mov
or
cli
jle
pop
mov
xchg
jae
mov
divl
jnp
add
into
bound
xor
or
jne
stos
and
sbb
push
sub
xorl
ret
cmp
leave
outsl
xlat
cmp
imul
sbb
add
xchg
pushf
xchg
mov
fdivrs
add
xchg
aaa
jnp
mov
or
cs
sbb
or
pop
lods
lret
jnp
cmpsl
sub
or
in
icebp
dec
icebp
add
pop
js
loope
sub
mov
cmp
ret
push
out
stc
out
imul
sahf
ss
jnp
or
mov
sbbl
jae
aad
sub
or
or
dec
adc
pushf
das
push
addr16
std
jnp
jp
cwtl
repz
push
or
popf
and
xchg
outsb
imul
pop
das
inc
pushf
jnp
shll
xorl
int3
dec
sub
sub
mov
mov
fnstcw
jmp
outsb
mov
in
notl
jnp
adc
mov
or
dec
xor
inc
lods
gs
pop
inc
stos
push
mov
cmp
jnp
mov
nop
cwtl
jnp
jecxz
inc
movl
jns
sub
mov
fwait
sub
in
mov
out
lock
lock
pushf
sbb
pop
and
add
sbb
jae
or
inc
or
jnp,pn
and
mov
cwtl
add
mov
sub
shrl
imul
dec
mov
push
jecxz
insl
cmp
xor
or
add
mov
out
mov
arpl
jnp
test
xor
push
imul
and
out
loop
mov
xor
inc
insl
dec
fldt
dec
mov
sbb
shlb
sbbl
mov
cwtl
sub
and
sbb
jno
mov
or
mov
fbld
or
mov
or
pop
je
inc
pop
lcall
inc
pop
outsl
mov
inc
cld
xchg
lods
fwait
scas
cli
inc
int
mov
sbb
idivl
and
mov
and
jnp
mov
or
or
mov
jnp
insl
repz
cmpb
mov
das
jno
ficomps
jnp
xor
mov
mov
jge
aad
push
sub
adc
daa
xor
aaa
fbld
adc
xchg
sarb
cli
mov
xlat
sbb
sub
ljmp
clc
jb
les
lea
add
and
pop
sti
enter
pop
inc
sub
push
jl
add
sub
popf
dec
add
int
cmpsl
shll
inc
xchg
call
sub
mov
test
and
push
out
hlt
mov
mov
or
push
jae
inc
xor
adc
xchg
rcll
mov
jae
repz
fidivrl
dec
adcb
rol
dec
xor
icebp
les
push
push
jnp
pop
and
dec
or
cli
mov
push
cmp
jne
test
cmp
push
js
cwtl
shlb
rcrl
jl
and
push
jnp
mov
sarl
insl
or
and
and
addr16
jnp
dec
sub
jnp
add
mov
jnp
lret
cmp
inc
jbe
jnp
shll
dec
pop
nop
sbb
stc
sub
push
mov
lods
pushf
inc
pop
cli
sbb
jnp
repnz
pop
mov
int
out
cmovl
stos
jnp
lods
jb
enter
jnp
icebp
add
les
mov
xchg
jp
cwtl
sbb
or
and
jl
push
fmuls
push
jmp
sbb
les
fstl
out
shl
jnp
je
int
insl
iret
push
test
push
cmp
out
test
jnp
loopne
insl
cmpsb
cmp
mov
jl
lea
popl
dec
cmp
inc
pop
jae
out
adc
movsl
jae
jnp
rcr
jns
lahf
or
xor
sti
fmul
jnp
fst
dec
ret
dec
add
jnp
sbb
and
pushf
repz
inc
inc
sbb
pop
mov
aas
jg
mov
je
imul
insb
inc
add
imul
cmpsl
add
sub
push
fldenv
push
daa
pop
and
cmp
orl
pop
loopne
inc
jo
xor
insl
psllq
insb
mov
adcb
in
jne
adc
mov
aaa
lea
mull
lds
mov
mov
fnstenv
insb
jne
cmpsl
jle
cmp
in
jnp
divb
shrl
dec
xor
or
movsl
int3
daa
xor
mov
std
push
rcrb
notb
push
sbb
out
into
cmp
ds
or
mov
xor
je
test
popa
cld
cltd
stc
dec
pusha
push
push
int
jae
jo
int3
xchg
jnp
push
cmp
std
out
dec
movsl
mov
sbb
or
sbb
jno
push
cmpl
and
aam
adc
outsl
mov
xor
jns
sub
insb
or
mov
pop
fimuls
lea
xor
jnp
shl
scas
bound
ret
hlt
sub
xchg
ljmp
icebp
lods
inc
out
add
mov
or
xchg
inc
dec
cmpsl
and
jae
jns
xchg
addr16
test
pusha
add
cmp
sbbl
mov
pop
roll
scas
xor
lcall
pushf
jnp
out
rolb
pop
cli
push
movsl
lret
jne
daa
push
jne
or
jnp
pop
mov
inc
jnp
shrb
out
popl
repnz
int
test
dec
sub
repnz
aam
or
push
jae
or
mov
inc
jae
popa
dec
cmp
push
adc
lcall
mov
outsb
push
sti
repnz
outsb
inc
repnz
movsl
sbb
jnp
mov
jnp
arpl
push
cwtl
dec
push
sub
loope
out
sub
imul
push
dec
lods
add
andnps
xor
jnp
fildl
and
xchg
inc
jnp
or
fidivl
cmp
jnp
scas
sub
push
sbb
jnp
mov
inc
mov
mov
or
jnp
xor
insb
xlat
adc
pop
sbb
pop
push
lcall
add
sti
adc
mov
les
imul
sarb
cli
fmull
rep
jmp
inc
jnp
movups
jnp
add
scas
xchg
dec
or
int3
mov
jl
inc
and
test
xchg
leave
pop
sarb
outsb
xchg
sahf
sub
push
or
or
dec
sub
or
and
outsl
jbe
push
aas
jnp
stc
ja
lods
mov
lahf
stos
loopne
and
arpl
cmp
out
xchg
jnp
stc
cmp
lock
adc
cmp
cmc
mov
xor
outsl
xchg
inc
stc
outsb
cmp
and
test
and
pop
cmp
adc
mov
popf
aaa
xchg
or
cmp
andl
ds
jnp
lea
mov
loopne
inc
and
lret
inc
cmp
rcr
lods
scas
xchg
jnp
out
push
pop
cmp
jnp
loope
or
mov
data16
cmp
jnp
xchg
or
jnp
push
push
rorl
cmp
ja
cmpl
inc
or
stos
inc
inc
cld
stos
xor
in
mov
sub
mov
dec
popf
xorl
cmp
mov
pop
mov
sub
ds
inc
jne
mov
jnp
and
jecxz
mov
movsb
jnp
xor
cli
dec
lods
lret
ret
pop
insl
sti
fidivl
mov
stc
sub
and
cmp
ret
in
lds
mov
mov
jnp
fsubrl
jnp
sub
out
add
push
and
inc
jnp
adcl
clc
mov
jae
add
or
rorl
xor
in
fstps
sar
inc
sbb
inc
mov
mov
out
ja
jnp
ffree
or
scas
adc
lahf
pushf
dec
out
dec
and
gs
repz
cmpl
inc
mov
hlt
push
sbb
clc
lock
flds
pop
cmp
shlb
mov
jnp
or
mov
or
pop
pop
loope
jg
xchg
outsb
insb
jl
push
outsl
jg
jnp
in
inc
mov
add
int3
aaa
jnp
roll
push
jmp
scas
outsl
les
mov
jae
jnp
or
in
jp
shrl
seto
icebp
mov
mov
scas
ja
andl
jno
adc
stc
jae
test
and
sbb
aam
cmp
cmpsl
or
in
mov
jp
js
jnp
lea
add
adc
call
jns
jnp
test
out
pop
xor
iret
or
dec
in
subl
jb
mov
cltd
insb
pop
pushf
cmc
lock
decl
aam
mov
imul
add
mov
jne
pop
and
in
jae
shl
jnp
xlat
sahf
xor
mov
pop
hlt
or
push
fstpt
jg
mov
jnp
das
push
scas
dec
out
mov
jne
add
or
mov
ret
jne
fiaddl
sarl
in
push
mov
dec
cs
sbb
xchg
es
jnp
mov
sub
mov
mov
sub
negb
xchg
fsubs
pusha
aas
jnp
jno
std
xor
jbe
jbe
mov
ja
in
xor
dec
jnp
sub
sahf
jnp
imul
scas
jnp
fstl
test
ja
in
jae
sbb
inc
sbb
mov
pop
xchg
fiadds
jae
mov
jmp
jae
into
dec
jb
xchg
pop
jnp
adcb
sub
test
sub
cmc
mov
movsb
pop
push
jae
dec
inc
cltd
dec
rclb
outsb
daa
repz
test
jl
mov
movsl
or
int
jne
jns
pop
imul
jno
cmp
pop
add
inc
jno
jnp
das
fstpt
jnp
push
push
add
add
mov
dec
lcall
aaa
flds
jnp
pop
adc
xorl
ret
and
or
fdivrp
pop
pop
and
les
loopne
jnp
lods
push
dec
clc
pushf
sete
add
sbb
sbbl
call
jnp
inc
jmp
in
mov
mov
cwtl
mov
dec
push
into
jne
sub
mov
xchg
jmp
and
jnp
les
jl
jecxz
and
pop
inc
fsubrs
cmp
sub
sbb
xor
jnp
mov
loopne
jnp
jne
test
out
and
sub
jae
popa
mov
push
faddp
push
les
pop
fiadds
js
cld
dec
sbb
popa
mov
mov
jmp
cs
pop
scas
pop
push
fdivrs
bound
testb
and
repnz
or
or
jns
sub
andb
int3
xchg
dec
mov
push
xchg
movswl
jnp
push
outsl
arpl
cmp
out
pop
push
pop
pusha
cmpsb
jnp
stc
mov
adc
xchg
mov
mov
ss
iret
jne
inc
xchg
jnp
lock
movsl
jmp
push
mov
hlt
flds
adc
jnp
shr
imul
clc
imul
mov
jnp
cmp
sar
ljmp
sbb
mov
adc
xchg
jne
pop
sub
repz
mov
aaa
xorl
int3
ljmp
inc
or
mov
sub
dec
or
cmp
sbb
divb
jnp
add
nop
sub
gs
or
push
push
jbe
or
xor
out
adc
aas
aad
sub
das
jge
pusha
jo
cmp
mov
sub
xor
movsb
jo
jnp
dec
xchg
fisubrl
mov
dec
mov
push
jne
xchg
mov
mov
outsb
loopne
sub
imul
and
xchg
jbe
lods
mov
jnp
xor
or
es
dec
and
in
jnp
insb
mov
xchg
fmul
jnp
jmp
ret
adc
jnp
dec
mov
imul
cmp
pop
dec
xchg
jae
pop
jb
insb
jnp
push
sarl
or
xchg
mov
rcr
imul
in
jb
in
fcomp
jmp
inc
push
jnp
fistps
aaa
addr16
adc
cmp
jecxz
jnp
nop
xchg
loopne
jne
clc
jnp
out
mov
jno
pop
sbb
sub
cmp
sti
mov
push
inc
mov
dec
jnp
push
push
xor
ds
sahf
orl
or
jnp
sbbb
xchg
sub
adc
sub
mov
imul
test
jnp
enter
fcomi
sbb
inc
clc
sub
sti
mov
sahf
mov
fldt
push
ss
outsb
outsl
sarb
mov
jno
pop
xchg
push
sbb
xchg
jae
iret
xlat
xchg
leave
sbb
cmpsl
sbb
mov
jae
cmp
jmp
ja
dec
std
mov
sbb
jae
sub
fs
jnp
mov
cmp
negl
jnp
stos
inc
jbe
and
add
mov
test
xor
inc
fs
push
jnp
xor
push
jae
nop
jecxz
fldenv
add
test
add
sub
xor
pop
fnsave
js
es
adc
xor
jae
jnp
adc
jo
sti
hlt
test
and
mov
in
jnp
xchg
popf
les
out
js
outsl
cmp
jnp
std
sub
hlt
mov
jnp
hlt
lret
rcrb
sbb
dec
jp
adc
stos
or
insl
mov
sbb
and
fwait
jnp
mov
lock
lret
lods
scas
xor
pushl
adc
les
test
jnp
mov
aam
rcll
xchg
jnp
out
pop
mov
or
stos
and
adcl
outsl
push
ss
jnp
and
out
jecxz
or
pop
outsl
addb
das
fwait
mov
aas
jae
movsl
mov
pop
je
adc
pop
gs
mov
hlt
call
das
xchg
mov
and
sub
ljmp
aam
inc
imul
jae
jp
push
jns
loop
xor
enter
add
cmp
xchg
fisubs
and
inc
mov
aas
jnp
dec
mov
in
jbe
popf
loopne
jno
sbb
lds
xor
cs
cmp
stc
mull
xor
lods
mov
outsb
push
push
jmp
popf
mov
cmp
push
lret
sub
sbb
mov
insl
sub
jnp
je
and
jnp
dec
push
jmp
scas
push
dec
jmp
pop
icebp
push
jge
ficomps
mov
jns
sbbl
lret
push
add
xor
mov
and
popf
xorl
dec
bnd
xchg
adc
jne
aaa
dec
add
push
mov
daa
jnp
xor
les
cmc
bound
int3
outsl
mov
sub
arpl
mov
mov
dec
pop
test
addr16
lahf
mov
jnp
mov
aad
or
fdivrs
jae,pt
cmp
addr16
mov
dec
stos
fnstcw
shl
js
inc
imul
lods
jg
cmp
jnp
cld
stos
pop
xlat
mov
mov
pop
mull
rcll
ljmp
xor
je
cmp
addr16
imul
add
cmp
fistps
or
fnstsw
inc
mov
imul
pop
xchg
mov
fs
push
sahf
mov
or
insl
pushf
lods
lahf
or
sbb
jge
mov
fmuls
or
and
jle
jnp
pop
jno
dec
push
stc
mov
cli
imulb
outsb
mov
lea
sbb
imul
mov
xchg
mov
mov
jg
or
ja
pop
sub
addb
lds
mov
jns
mov
jnp
into
popf
xchg
and
test
popa
mov
jne
jnp
loopne
xor
xor
out
push
aaa
sub
inc
scas
sbbb
negl
cmp
enter
sbb
xor
xor
jnp
das
pop
mov
rorb
jne
add
adc
fsubl
inc
aaa
je
shr
sub
icebp
cli
push
jnp
sti
jge
in
cmp
adc
mov
cltd
jnp
lods
inc
xor
in
stos
sbb
movsb
pop
aas
sbb
jnp
push
fidivl
fwait
or
stos
in
jmp
adc
or
outsl
nop
pop
outsb
sub
pop
mov
sub
jnp
sbb
pop
shlb
adc
dec
and
lret
cmp
or
dec
cmp
dec
xchg
out
test
jnp
inc
dec
jbe
divb
pop
jnp
add
lahf
mov
push
dec
and
dec
xor
stos
cmp
in
add
sbb
xor
pop
cli
cmp
mov
sbb
pop
pop
out
fsubs
insl
push
bound
out
jnp
jae
xor
jnp
test
lock
jnp
push
fiaddl
outsl
pop
hlt
imul
and
bnd
nop
aas
jae
and
aaa
in
mov
mov
sbb
add
ret
sti
sbb
xchg
sahf
pop
jp
jecxz
pop
ja
mov
fidivs
dec
jbe
mov
jnp
xor
adc
push
xchg
js
cld
lret
xor
negb
enter
lea
mov
jnp
sbb
fwait
and
cld
pop
adc
dec
out
and
pushf
fcoms
mov
test
mov
mov
lcall
xchg
pop
and
ja
outsb
adc
fstpt
fucomp
insl
xchg
pop
and
jnp
and
mov
subl
sub
loope
jnp
js
jle
mov
xchg
jnp
int3
xchg
ss
push
xor
outsb
dec
test
add
aam
jnp
jae
dec
loopne
push
mov
ljmp
test
push
dec
fidivs
dec
test
inc
ja
inc
jge
addr16
fwait
insl
imulb
jnp
jecxz
shrb
xor
jae
or
jmp
scas
push
lea
jnp
lahf
jp
cmp
shl
out
jnp
mov
popf
sub
in
or
jp
ss
scas
xchg
pop
jbe
and
mov
ds
jnp
iret
sbb
sbb
mov
pop
outsl
jnp
mov
lds
add
adc
lcall
lea
add
addr16
jnp
rorl
lods
fimull
and
jnp
sub
pop
mov
jecxz
js
jno
dec
jnp
daa
lret
xor
lea
cmpl
inc
adc
in
cs
or
clc
daa
xchg
test
mov
or
in
jl
lcall
adc
xor
xor
push
cmp
enter
mov
cmpsb
pop
jnp
mov
adc
mov
dec
cmp
notb
mov
dec
loop
jns
cmc
mov
jnp
jns
icebp
pop
pop
movsl
stos
mov
aad
out
popf
xchg
jae
jmp
add
pop
pop
jns
iret
addr16
jnp
in
in
push
loopne
stos
icebp
jnp
adc
mov
sbb
pop
mov
jp
push
inc
pop
xor
imul
in
pop
mov
lcall
mov
push
dec
mov
cltd
jg
xchg
cmp
repnz
or
sbb
or
insb
pop
adc
ljmp
push
jnp
fistpll
push
fistl
andb
and
inc
ja
xor
jecxz
imul
loope
add
push
stc
sti
mov
fdivrs
xchg
call
fcmovbe
je
test
cltd
fcompl
xorb
or
sub
pushf
bnd
imul
pop
add
pop
sti
jnp
cli
mov
cmp
stos
stos
sub
lret
outsb
outsl
mov
mov
out
mov
pusha
in
jnp
arpl
outsl
jg
push
or
mov
cmp
js
push
cwtl
jnp
ljmp
jg
mov
xchg
loop
mov
fyl2xp1
in
add
jnp
inc
jne
lret
push
jnp
inc
add
ret
sarb
stos
imul
sbb
arpl
fbld
and
lds
imul
fdivr
jb
aas
push
mov
vmulsd
arpl
mov
jnp
jns
add
clc
lcall
cmp
into
sbb
and
ja
in
repz
loopne
lock
cmp
jnp
push
imul
push
imul
std
push
lock
xor
dec
fs
stos
adc
outsl
imul
cs
imul
test
scas
xchg
retw
xlat
ja
cmc
mov
pop
jae
adcl
rclb
dec
cmpsb
lcall
aaa
add
stos
mov
vsubpd
mov
or
fdivl
sti
jnp
jl
ds
lods
test
stos
out
mov
je
aas
imul
mov
mov
out
fstpt
ds
aaa
cmpxchg
jecxz
cmc
scas
fcmovnbe
jnp
jbe
jmp
push
lods
jnp
mov
sbb
loope
pop
inc
push
ds
xor
adc
sbb
mov
jnp
loope
push
addb
dec
or
sti
js
fwait
insb
push
test
mov
and
dec
pop
repnz
jnp
iret
sub
mov
lret
jnp
push
cltd
jecxz
neg
xchg
pop
cli
push
loope
add
jl
push
dec
or
push
ja
aaa
mov
sti
lds
subl
or
xchg
and
rcl
bound
sbb
inc
mov
jo
or
je
movsb
sbb
cmp
rcr
mov
adc
icebp
loope
lods
jnp
nop
mov
ss
pop
stc
outsb
jg
xchg
jae
ret
dec
jnp
sbb
sar
xchg
jnp
push
jg
cmp
fs
imul
mov
jnp
js
and
aas
movb
in
das
mov
mov
cmp
test
mov
sti
addr16
out
add
dec
iret
jnp
pop
in
push
dec
stos
cmp
stos
mov
sbb
jl
dec
xchg
pop
imul
mov
cld
insl
pop
cmpsb
enter
loopne
xchg
fstl
or
cmpsb
mov
mov
cmc
add
xchg
add
dec
pushf
lods
pop
jo
mov
leave
xor
addr16
cmp
push
or
sub
shll
jnp
jg
pop
mov
sbb
aam
dec
int3
pop
xchg
repnz
fmulp
cmp
neg
jnp
orb
pop
aad
jns
lock
dec
fidivrs
ds
or
jo
and
cmp
jo
pop
cmpsl
sbb
push
mov
imul
sbb
mov
or
fldenv
cmp
lds
iret
jnp
cwtl
ds
mov
fnsave
data16
push
js
shrl
outsb
xor
fcomps
and
mov
ljmp
xor
rcr
in
pop
negl
adc
jl
add
mov
sub
mov
xor
mov
jnp
or
cmpl
mov
or
testb
mov
enter
ret
mov
shll
call
aas
pushf
lods
xlat
pop
js
add
jbe
jnp
or
push
lods
lfs
loop
cld
xchg
lods
imulb
dec
jb
scas
in
imul
ret
into
mov
rolb
sahf
fcoml
daa
or
pop
cmp
sub
cli
movsb
bound
mov
pushf
fs
pop
pop
push
fmull
arpl
xchg
ror
lock
mov
or
pushf
adc
add
adc
jae
cmpsb
mov
jnp
pop
jno
lds
imul
ret
mov
sub
dec
fisttps
iret
and
clc
cld
shll
or
cmp
dec
add
jae,pn
popa
mov
repz
or
test
mov
mov
or
insl
add
jnp
sub
lock
mov
outsl
loop
gs
jnp
shlb
and
sub
rorl
leave
outsl
xor
jnp
jmp
fmuls
sub
pop
push
cmpsb
inc
sbb
mov
sbbb
insl
jno
sti
add
call
repnz
add
cmp
jb
and
xchg
mov
or
xchg
mov
frstor
stos
outsb
add
mov
push
mov
ret
cltd
push
jae
mov
jecxz
sub
xchg
clc
fisttps
fs
cmp
mov
mov
outsl
pop
or
iret
or
mov
mov
pop
rcrl
cmp
fldt
pop
xor
repnz
aaa
cmpsb
mov
pop
sbb
xchg
stos
dec
add
scas
stos
nop
jnp
dec
inc
sbb
or
push
jnp
pop
aam
pop
inc
xchg
in
out
jnp
ljmp
push
xor
repnz
sarb
and
ljmp
sbb
icebp
ret
jae
test
lds
jp
jnp
sbb
push
cmpsl
shrb
cwtl
decl
adc
jnp
push
aaa
js
adc
push
jmp
out
lds
pop
cmpsb
data16
cmp
sbb
iret
pop
pop
lock
sub
sbb
mov
subb
stos
js
and
ret
cltd
stc
xchg
das
in
pop
jnp
mov
push
jnp
add
fistpl
sbb
je
add
or
scas
pop
xchg
fdivrl
bound
jnp
push
ror
xchg
xor
xchg
lcall
das
in
xor
jnp
or
push
jnp
jmp
inc
xchg
jnp
rcl
xlat
xchg
sub
loopne
xor
outsl
jnp
std
pop
adc
jge
jnp
in
loop
jg
mov
mov
aas
mov
jnp
pop
xor
adc
enter
or
jg
jp
in
movsl
add
repnz
cmpsb
aas
imul
add
in
or
jb
pop
inc
ss
mov
mov
xor
dec
jl
inc
stc
mov
push
jnp
hlt
sbb
mov
int
xorb
sbb
jnp
stos
mov
jl
xchg
repz
mov
fiadds
mov
jnp
jecxz
into
jp
xchg
cmp
jo
in
mov
adc
pop
jbe
mov
pop
jnp
notl
xor
jl
push
nop
stc
mov
dec
push
pop
xchg
popf
jecxz
fcmovne
jnp
inc
test
jnp
adc
jmp
jnp
pop
pop
mov
xchg
fmul
fimull
mov
mov
outsl
stos
fwait
pop
or
sub
xchg
xchg
cmp
inc
imul
pop
xor
xchg
sbb
ja
push
add
out
aas
clc
clc
jecxz
jnp
daa
idiv
std
inc
mov
cli
aas
int
fcoms
mov
pop
repnz
idivl
in
in
jmp
js
sbb
outsl
adc
imull
jb
jnp
es
jl
pop
cmpsb
divl
fnstcw
mov
pop
lahf
in
dec
xor
imull
jnp
push
add
xchg
enter
mov
test
jnp
je
push
imul
push
push
inc
fwait
mov
cmpb
mov
dec
sub
jmp
xlat
jne
ret
jae
fisubrs
imul
sub
sbb
xchg
rcr
dec
aad
jnp
test
mov
lahf
insb
out
nop
cmp
jnp
or
repnz
outsb
adc
or
in
xchg
repz
xchg
dec
push
mov
sti
cmp
fbstp
ret
xchg
jnp
push
cmpl
mov
jno
jle
ds
leave
push
or
add
pop
jae
pop
add
push
fadd
std
pop
lahf
pop
mov
iret
scas
or
jle
test
in
jnp
pop
dec
and
jg
divl
xchg
aaa
jnp
dec
sbb
pop
and
and
dec
inc
outsl
jmp
mov
sub
outsl
jo
lods
inc
push
dec
call
dec
xor
ret
xchg
jnp
cmpsl
mov
jge
fistps
mov
out
xchg
in
mov
xor
mov
push
clc
test
jecxz
cmp
cmc
gs
jnp
in
mov
and
int3
cmpsl
sub
mov
jnp
xchg
out
cld
je
add
dec
dec
cmp
and
jnp
imul
xchg
jb
sub
outsl
and
in
or
movsb
jb
js
cld
in
dec
mov
adc
mov
sbb
notl
orb
push
shl
xchg
mov
mov
aas
push
mov
fucomip
scas
test
into
jnp
or
jmp
jnp
mov
mov
jbe
insb
pushf
mov
jnp
jmp
movb
sub
shrb
fistpll
dec
outsl
mov
sub
stc
add
fidivs
jnp
hlt
icebp
adc
sbb
arpl
ja
fcoml
jnp
stos
in
jbe
adc
in
xor
outsb
pop
mov
jnp
inc
mov
insl
shlb
lret
jmp
ljmp
mov
xchg
scas
repz
pop
pop
test
pop
jo
les
add
iret
or
icebp
fstp
pop
push
and
jnp
ss
loop
mov
jl
outsl
pop
mull
mov
enter
ljmp
adc
add
sub
adc
jnp
imul
jg
sarl
or
subb
insb
cmp
sbb
pop
and
test
add
add
jnp
dec
hlt
mov
push
sub
shrl
fidivrs
imul
movsb
aaa
ja
lods
popl
fsub
mov
mov
fists
aas
cli
icebp
jnp
lea
mov
fidivrs
cld
sub
or
jnp
sub
ljmp
ja
arpl
pop
mov
pusha
iret
aad
shll
inc
daa
add
add
jae
mov
movsl
mov
in
jnp
push
inc
or
jmp
mov
pop
xchg
or
jnp
int3
dec
fcoml
out
mov
ljmp
dec
outsl
bound
dec
adc
push
in
mov
outsl
test
cld
mov
push
jecxz
divl
mov
sahf
mov
movsb
imul
popa
cmpl
sbb
mov
bound
pop
dec
sahf
jbe
or
je
dec
adc
js
out
ror
lahf
jnp
mov
xor
sub
pop
jge
jns
test
xchg
shl
jp
jnp
and
call
pop
aaa
jnp
mov
data16
jnp
loopne
pop
sub
jge
push
fs
adc
sahf
arpl
ds
scas
mov
ret
mov
jp
mov
xchg
loop
stos
test
pushf
ficomps
mov
jnp
repz
dec
xchg
int3
jns
outsl
fcmovbe
xchg
bound
lahf
rcrl
int3
arpl
mov
cmpsl
pop
scas
jge
imul
pop
adc
sarb
cmp
pop
jae
sbb
les
lcall
testb
bound
sub
jnp
imul
sbb
in
jne
lret
movsl
sbb
mov
cli
lds
jnp
je
sub
mov
pusha
mov
lahf
add
mov
adc
rorl
sub
cmp
pop
inc
jae
push
sub
pushf
or
sbb
jle
imul
or
inc
imul
rcr
sub
mov
sbb
cld
jg
jg
sub
dec
pop
inc
ds
pop
fisttpll
push
jp
out
arpl
cmp
cli
jae
xor
cmp
jne
jp
mov
cmove
movsb
in
fstl
push
lret
or
test
sub
dec
outsl
adc
cmp
mov
fbstp
in
leave
daa
push
in
dec
sub
and
xchg
xchg
in
sbb
add
jae
push
jnp
mov
push
cmp
cmp
mov
out
push
pop
jp
out
cltd
xchg
jnp
cmpsl
cmpsb
push
cmp
push
outsl
outsb
xchg
aas
pop
xor
sub
mov
icebp
sbb
sub
ret
pushf
and
jle
mov
jnp
jge
xor
inc
adc
push
je
cmp
push
jns
push
stos
iret
fmull
fdivrp
pop
jne
repz
lcall
pop
in
mov
shll
push
jl
adc
ret
idivb
cmp
xor
inc
jae
pop
jne
jnp
das
mov
adc
cmc
fsubr
cmpsl
scas
inc
mov
idivb
mov
mov
cmp
in
ret
test
jnp
into
pop
mov
xchg
mov
icebp
xor
out
push
out
scas
sub
dec
sbb
fwait
mov
sarl
xchg
and
les
jnp
daa
add
dec
fst
mov
shlb
lds
js
xchg
mov
int3
jnp
lahf
sbb
das
jle
cmp
push
add
imul
push
or
test
jns
repz
enter
fisubrs
push
cwtl
sub
in
into
sub
das
ss
inc
jnp
or
pushf
rclb
inc
mov
add
xor
les
in
pop
mov
add
jbe
mov
scas
pop
fisttps
mov
movsl
test
ret
jnp
cld
add
rclb
int
sti
cli
or
mov
outsb
lret
in
pop
cmpl
xor
dec
sub
pop
dec
cmp
mov
repnz
cli
pushf
fdivr
mov
test
and
lods
hlt
jnp
mov
gs
push
int3
jnp
mov
fidivrs
mov
in
js
nop
jnp
xchg
jmp
or
xor
mov
push
dec
sub
and
mov
mov
scas
jnp
mov
inc
stc
cmp
fwait
adc
jnp
pusha
inc
fs
or
push
dec
mov
pushf
jnp
jge
and
imul
in
stc
add
lods
sbb
icebp
std
leave
imul
mov
mov
or
cmp
lret
rolb
ret
sbb
mov
insl
je
jne
dec
push
repz
in
cmp
test
fdivrs
push
inc
mov
xor
jnp
push
sub
dec
jle
inc
inc
aad
xor
into
icebp
jnp
cli
out
lods
lods
aas
lock
cmp
sbb
or
inc
sbb
lret
sbb
adc
pop
stc
dec
stos
insb
jnp
push
or
pushl
jnp
into
daa
rorb
rcr
dec
pushf
fldl2e
inc
jecxz
repnz
out
loop
arpl
or
add
adc
mov
js
xchg
js
mov
fs
jmp
call
cmp
jnp
mov
and
adc
fldcw
sarl
xor
and
scas
or
bnd
lcall
mov
dec
imul
mov
loope
inc
inc
rcr
jnp
xor
adc
jnp
mov
out
hlt
lret
xor
adc
movsl
xchg
cmp
jnp
inc
mov
jg
enter
int
pop
cmp
mov
mov
scas
dec
or
lock
push
test
int
stc
icebp
jnp
and
dec
jae
adc
cmp
jae
fldenv
movsb
jb
lret
sbb
add
push
dec
xchg
sbb
insl
jae
mov
fistl
and
imul
repnz
push
clc
enter
inc
lcall
jnp
js
out
or
dec
jnp
pop
dec
or
jg
push
jnp
lret
pop
clc
sbb
out
inc
add
fcmovu
lret
add
jnp
mov
jnp
hlt
insb
pop
lahf
xlat
data16
mov
fsubrs
sarl
dec
out
cmp
add
stos
add
xor
out
enter
jmp
mov
loopne
je
push
fistps
dec
xor
xchg
in
pop
jne
clc
cld
add
inc
xchg
mov
in
fucomp
adc
xchg
int3
jnp
pop
cmp
xchg
jnp
cmp
aad
popa
push
les
sbb
div
dec
jnp
aas
outsl
jecxz
arpl
in
cmp
dec
ja
movsb
sub
mov
jae
lock
int3
mov
jb
push
adc
sbb
pop
jnp
sub
mov
ljmp
dec
dec
imul
sbb
int
and
or
push
mov
pushf
and
not
mov
arpl
xlat
mov
stc
push
add
out
push
xor
or
jne
sbb
fdivrs
loopne
or
cmpsb
sub
fs
shrb
rorb
or
jnp
push
and
cmp
aam
xor
push
aaa
add
xor
push
inc
addr16
clc
out
jnp
xchg
inc
data16
cmc
stos
jmp
into
jl
xchg
out
pop
outsl
jnp
add
adc
jge
adc
loopne
adc
int3
ss
pop
movsb
inc
js
pop
jnp
adc
fsub
les
movl
pop
cmp
stos
and
fsts
jnp
mov
xlat
xor
mov
inc
mov
adc
vmovsd
sbb
pop
adc
push
push
cmp
dec
aas
fidivs
jnp
push
mov
or
insb
repz
iret
pushfw
in
in
divl
cmpl
sub
xchg
jp
data16
and
outsl
clc
and
jb
daa
pop
aas
xlat
outsb
insl
mov
jnp
inc
shl
push
shl
adc
mov
imul
getsec
clc
mov
jns
lret
cmpb
movsl
fwait
scas
dec
push
aas
sbb
shl
jno
jnp
cmc
repz
jnp
fstpt
dec
jne
fs
in
and
out
cmp
jmp
fsubs
jnp
cmp
int
xchg
pop
pop
sbb
jb
jmp
xchg
rcl
and
mull
jp
and
sti
xchg
cmp
pop
adc
or
push
insb
ja
ret
jmp
ljmp
mov
jnp
lea
mov
or
jnp
pushf
scas
dec
es
mov
add
mov
adc
and
add
lret
mov
mov
mov
sbb
cltd
adc
call
jecxz
dec
dec
pop
frstor
dec
and
aaa
imul
mov
jnp
add
mov
mov
jnp
imul
gs
addr16
push
pop
enter
add
inc
jge
jnp
lock
aad
lret
cmp
jno
mov
jnp
data16
icebp
leave
ficoms
push
mov
xchg
into
xchg
sbb
mov
jp
pop
jb
dec
adc
jnp
mov
out
add
subl
mov
pop
pop
out
mov
js
enter
sbb
repz
loopne
add
int3
push
add
cmp
les
mov
and
inc
aam
dec
push
jnp
sahf
mov
cs
mov
mov
sub
enter
mov
idiv
jnp
cmp
iret
mov
push
xor
cmc
lcall
sub
adc
rcrl
lods
jge
lret
int3
gs
fisubrl
or
push
jnp
and
fcomp
in
dec
dec
mov
sbb
fwait
dec
or
dec
sbb
ret
adc
iret
jnp
adc
pop
sub
or
ss
sti
push
fcmovbe
mov
cmp
cmpsl
add
xchg
pusha
xchg
mov
sbb
pop
jnp
and
jb
cmp
and
lock
sti
jae
jle
insl
mov
pop
sub
mov
cmpb
into
push
iret
cli
jnp
lret
xor
fdivl
sti
ret
cli
mov
sub
test
stos
inc
js
loop
cs
mov
pop
mov
jnp
aaa
mov
mov
hlt
pop
cmp
jnp
in
inc
addr16
idivb
jp
lods
arpl
mov
test
sub
mov
and
hlt
adc
xchg
in
lods
dec
mov
mov
aad
repz
sub
arpl
gs
sti
stc
mov
fstl
xchg
mov
je
lahf
das
mov
lods
inc
in
adc
mov
negl
lods
dec
in
mov
jnp
sti
cmp
sub
outsb
lret
mov
leave
and
cmp
push
addr16
shl
jne
lock
push
xchg
jnp
mov
test
mov
sarl
cmc
mov
aaa
repnz
lods
hlt
jnp
mov
cmpsl
sub
sub
int3
imul
jnp
jp
mov
mov
xchg
lcall
dec
or
repnz
lods
xor
pop
adc
push
imul
dec
fiaddl
xchg
in
pop
in
adc
xlat
inc
cmovge
imul
mov
les
mov
or
inc
xchg
mov
scas
cmpl
pop
mov
jnp
mov
mov
jb
inc
mov
mov
cli
daa
ss
xor
push
or
or
or
das
dec
pop
jnp
sti
insl
add
push
dec
testl
pop
cli
pop
cmpsb
jnp
mov
test
and
insl
inc
add
xchg
jnp
adc
cmp
inc
pop
lods
lea
and
mov
mov
inc
out
mov
ja
xchg
mov
mov
addl
push
sub
lds
inc
or
or
pop
das
call
int
jnp
gs
scas
and
in
ficoms
lahf
or
mov
mov
jnp
repnz
xchg
push
jnp
scas
mov
mov
fdivr
xor
aad
jnp
in
cmpsl
leave
outsb
bnd
push
negl
nop
ljmp
dec
sbb
sub
sbb
adc
data16
ret
push
cwtl
decl
mov
orl
mov
cs
push
stos
mov
sbb
or
adc
jmp
mov
loop
repnz
jl
push
sbb
inc
sbb
movsb
ja
aad
sbb
mov
sbb
and
inc
fcompl
js
jnp,pn
in
lahf
gs
xchg
xor
jnp
xor
jp
lcall
gs
pop
inc
out
repz
mov
lret
or
adc
insl
push
jae
mov
jecxz
imul
mov
lods
lahf
jo
inc
in
jnp
cmp
out
loop
insb
jnp
js
xchg
xchg
adc
movsl
int
jnp
stc
push
mov
jp
pop
lock
jnp
fidivl
jns
insb
or
fmuls
push
popa
imul
cwtl
pop
movsl
outsl
sbb
fcomps
sub
mov
arpl
mov
dec
enter
mov
cmp
setae
shl
mov
mov
ss
adc
hlt
fisubl
cmpb
repnz
jns
mov
jnp
xchg
and
ret
cmp
lods
mov
out
sub
mov
mov
stos
jnp
mov
cmp
insl
mov
mov
int3
bound
stos
jnp
cmpsl
insb
or
mov
xlat
mov
sarl
jnp
dec
mov
mov
jnp
push
pop
loop
xor
jnp
lahf
pop
in
jmp
jle
mov
pusha
cld
jnp
pushf
jg
in
dec
xor
loopne
jae
cmp
mov
insl
push
jnp
mov
pextrw
pop
sar
sub
call
lcall
bound
and
xchg
scas
mov
sahf
fidivrs
jp
int3
adc
lret
int
cli
iret
cld
jnp
lods
inc
out
sbb
in
jnp
imul
test
mov
lret
jle
jbe
leave
mov
shll
pop
inc
insl
sbb
aaa
mov
sbb
cmp
xlat
jnp
into
mov
dec
lods
fidivrs
dec
outsl
enter
jnp
cltd
leave
cmp
pop
cwtl
mov
inc
sub
imul
xchg
and
sub
cmp
mov
cmpsl
mov
fucomi
jmp
jnp
jae
dec
jb
sbb
jnp
lret
fidivrs
jge
jnp
pop
cmc
ljmp
pop
rorb
mov
cld
inc
jle
push
decb
mov
iret
das
ret
std
sbb
dec
lods
mov
cmc
mov
cwtl
inc
in
push
mov
jae
lds
add
cmp
dec
cmp
mov
scas
pop
hlt
lods
idivl
sbbb
enter
jnp
bound
daa
shll
out
sub
xor
sbbb
and
push
or
lahf
xor
mov
xchg
out
dec
inc
push
or
jnp
add
and
mov
les
fidivl
mov
jno
scas
das
insl
jnp
mov
mov
jnp
sub
cli
sahf
pop
int
jnp
jecxz
test
xchg
lahf
in
sbb
in
outsl
cmpsl
std
fsubrs
and
sub
lods
bound
imull
cmp
xchg
mov
push
jo
jnp
fcom
pusha
xor
nop
sbb
sahf
jae
daa
incl
movsl
cmp
sub
mov
xchg
dec
mov
xchg
jnp
inc
jo
fidivl
cltd
imul
mov
mov
jo
jnp
nop
pop
sub
sbb
int
stos
inc
movsb
xlat
pop
in
sti
jnp
notl
fists
jnp
pop
dec
push
jne
pop
aam
pop
jnp
sub
addr16
jnp
out
or
ljmp
fldt
jnp
xchg
jb
aaa
lret
add
lock
or
dec
mov
jp
scas
das
neg
jnp
jo
sub
dec
and
pop
mov
scas
push
lahf
inc
ja
paddusw
leave
outsb
lret
call
jo
jnp
sub
jg
inc
dec
leave
dec
xchg
add
int
in
mov
mov
idivl
mov
adc
cmp
repnz
add
iret
jg
dec
or
ja
push
pushf
loopne
outsl
into
inc
sub
xor
xor
aad
pop
mov
adc
cmpsb
inc
cmp
pop
adc
hlt
mov
loop
lea
out
jecxz
sbbb
mov
fistpll
jae
dec
push
push
hlt
pop
jo
imul
sub
call
cld
shr
dec
stos
xchg
subb
or
out
insl
pop
fcoms
jo
addr16
lret
push
xor
cld
js
inc
imul
push
sub
int3
sub
jmp
sub
scas
inc
sbb
orb
stos
mov
or
mov
js
jmp
xor
mov
jl
dec
push
cmp
mov
cwtl
aad
aam
stos
adc
pushl
sbb
notl
dec
call
enter
sub
jno
adcb
pop
repz
mov
add
jbe
call
xchg
ja
mov
dec
repnz
jae
test
in
popf
or
ja
lcall
enter
aaa
mov
adc
inc
jmp
fdivs
cmp
out
fstpt
cmp
iret
insb
lret
xchg
jae
mov
int3
cmp
lea
pop
loopne
xchg
xchg
leave
jge
xchg
sbb
mov
sub
lret
mov
cltd
jnp
sub
fmuls
outsb
fstpl
pop
das
inc
sub
imul
sub
mov
popf
add
mov
or
mov
fs
pop
xchg
mov
adc
dec
mov
lods
mov
sub
lods
xor
iret
decl
mov
shll
add
sahf
jne
adc
or
mov
scas
lret
or
out
jnp
jno
mov
lods
xor
xchg
daa
aas
jbe
pop
jnp
incl
sub
outsl
vdivps
jb
sahf
ljmp
das
mov
mov
or
fldenv
inc
mov
jne
idiv
insb
mov
outsb
xchg
jnp
add
sub
inc
mov
addr16
lods
xchg
sarl
in
pop
stos
sbb
lock
int3
dec
jnp
mov
cmp
jnp
xorl
out
cwtl
mov
inc
jo
add
std
mov
jne
jnp
imul
xor
push
insl
xchg
movsb
jnp
add
movsl
outsb
test
jnp
cmp
fsubl
sti
push
gs
stc
repz
sbb
dec
or
mov
jb
imul
pop
pop
ficoms
cs
clc
cmp
out
arpl
mov
in
repz
jns
and
or
push
sbb
je
scas
call
mov
sub
jne
inc
jae
clc
ss
sbb
outsb
in
mov
xor
ficomps
aam
xchg
or
jnp
lods
les
imul
pop
cld
outsl
insb
int
pop
lock
popf
shlb
cltd
hlt
adc
ja
pop
dec
inc
js
into
leave
insl
sbb
sbb
sub
xchg
nop
mov
int3
imul
scas
or
in
out
adc
sti
xchg
fdivs
sub
mov
xchg
mov
jge
cmp
lods
mov
dec
mov
sbb
enter
int3
ret
aas
imul
hlt
insl
add
outsl
insb
insl
xchg
lods
aad
mov
mov
clc
mov
inc
cmpsl
mov
xlat
sbb
test
int
xorl
dec
icebp
sub
sub
out
pop
aad
stc
enter
sti
push
repnz
xor
inc
sbb
cld
jnp
sahf
adc
dec
jnp
mov
in
call
loop
pop
sub
divb
sar
out
mov
js
sti
mov
imul
aam
pop
test
sub
pop
pop
scas
outsl
sub
fistl
ljmp
jno
lods
inc
int3
or
das
dec
jb
mov
or
in
ljmp
jne
mov
jp
icebp
sbb
fisttpll
outsl
lods
or
fcmovnu
cmpb
mov
jae
test
dec
shr
scas
js
xchg
stos
mov
jnp
sub
fisttpl
add
mov
pusha
icebp
out
stos
enter
push
fnstcw
pop
xchg
shrb
les
xchg
xor
out
test
mov
add
push
into
fdivs
mov
sub
jnp
loop
inc
lds
jp
sbb
cmp
cmpsb
jne
fimuls
clc
test
push
xor
dec
js
mov
enter
xchg
lods
sub
hlt
mov
lcall
mov
add
xchg
fwait
lcall
mov
or
lock
pop
ja
js
std
aas
jae
cmp
jnp
fucomp
pop
dec
jecxz
lret
repz
lock
cmp
fnstenv
sar
xor
jle
in
and
adc
ficoms
jl
inc
cwtl
and
fisubrs
or
loopne
ja
enter
aas
insb
pop
jnp
insb
cld
lahf
mov
jnp
jle
sti
mov
mov
mov
pop
outsl
fdivr
pop
jnp
lret
mov
rolb
bound
mov
dec
lods
enter
push
imul
lds
daa
fidivrl
cmp
hlt
push
jno
xor
out
movsl
jnp
sarb
jmp
push
mov
imulb
jg
mov
lods
sub
lods
adc
jnp
orl
mov
jae
cmp
jno
imul
jns
pop
std
push
imul
pushf
push
fsts
imul
push
sub
sbb
mov
sbb
popa
jge
outsl
sbb
sbb
xchg
jne
fildl
mov
lods
fisttpll
push
jp
test
inc
scas
and
push
int3
inc
sbb
mov
dec
cltd
jecxz
jnp
pushf
jmp
movsl
loope
push
or
push
outsb
mov
add
inc
push
daa
loopne
icebp
jnp
or
stc
jnp
addr16
add
dec
mov
cmpsl
cmpsb
in
mov
out
or
jnp
loopne
lret
les
xchg
mov
sub
sbb
jnp
pop
lret
in
and
mov
into
dec
cs
xchg
inc
addb
out
dec
aas
movsb
or
sarl
out
mov
sub
subb
sub
enter
sub
dec
outsl
xchg
test
sub
mov
sbb
jns
rolb
dec
cmp
adc
or
fcmovnbe
mov
call
sbb
push
aam
mov
clc
test
cmc
mov
adc
ret
inc
lods
sti
or
sbb
shl
cmp
jmp
xor
das
add
mov
mov
or
add
jns
rcl
es
sub
mov
sbb
jnp
xchg
sti
or
xchg
imul
out
jne
push
or
dec
jmp
push
loopne
push
enter
lahf
hlt
cli
cmpsb
xchg
leave
outsb
je
jnp
sub
dec
lret
lods
jnp
cmpsl
aaa
repnz
popa
stc
sbb
pop
xchg
jmp
jnp
scas
lods
sub
aad
popa
sbb
jl
scas
jnp
fidivrl
mov
jnp
lret
aam
popa
jmp
jnp
lcall
sub
idivl
pop
or
or
lcall
add
dec
push
sbb
sub
popf
outsl
jbe
mov
insb
jo
insl
int3
mov
pushf
push
sbb
idivl
popf
mov
addl
pushf
fimull
test
shr
cmpsb
int3
daa
divl
push
sbb
test
sub
movsb
cmp
xor
cmpsb
or
jae
imul
sub
dec
xchg
scas
jo
sbb
inc
jl
arpl
push
insb
nop
scas
jnp
fsubs
xchg
jnp
jmp
mov
push
jl
imul
sub
jmp
ret
stc
mov
daa
insb
push
dec
pop
jnp
cmpsl
xor
sub
mov
cmp
call
xchg
shl
jnp
lret
jge
add
enter
imul
inc
andb
iret
aam
push
fistl
pusha
mov
shl
mov
xchg
jnp
neg
in
loopne
fdivrs
sub
jae
push
lret
jnp
inc
std
inc
add
xchg
jnp
test
das
call
cld
out
fcoms
and
enter
insb
or
sbb
mov
int3
in
int3
pop
dec
cmp
ja
rep
or
fwait
dec
dec
add
jbe
sbb
adc
test
xchg
in
add
repnz
jg
shl
int
jnp
in
das
lret
mov
xor
jecxz
add
adc
adc
loop
imul
add
cli
pop
mov
dec
jnp
fwait
push
cltd
lret
repnz
dec
loope
fst
outsb
je
or
or
scas
arpl
push
cmp
outsb
int
jnp
fistl
or
dec
std
and
insl
dec
inc
iret
aaa
imul
mov
pop
in
sub
into
bnd
enter
cmp
add
mov
sub
add
lods
add
aaa
std
pop
dec
mov
xor
nop
push
pop
pop
pop
adcl
pop
cmpsl
test
mov
ljmp
xlat
dec
sbb
xbegin
pushf
outsb
sub
jnp
aaa
pusha
and
addr16
jnp
sub
fistps
enter
test
int3
aam
or
out
add
incb
add
aaa
insl
add
jne
sub
or
and
cld
outsl
push
mov
mov
add
testb
jnp
repnz
jmp
inc
add
xchg
insl
cmc
push
dec
mov
jnp
sbb
fwait
dec
jmp
jnp
sarb
sbb
clc
sub
and
in
imul
insb
lods
sub
xor
pusha
push
cmp
push
repnz
lods
adc
mov
jnp
xor
cld
add
mov
sahf
mov
sub
gs
or
jne
xchg
call
rcr
fwait
enter
out
lods
sub
mov
sbb
in
pop
mov
icebp
jo
push
jae
xchg
in
clc
jnp
jno
pop
shl
mov
sbb
sub
cmpsb
push
sbb
mov
loop
mov
divb
cmp
mov
insb
test
fldlg2
sti
ja
outsl
testl
enter
fsubrl
pop
xchg
pop
sbb
sbb
leave
mov
xor
push
jae
sbb
push
lods
cltd
mov
out
sub
mov
mov
add
jnp
mov
or
stc
dec
insb
jnp
push
sbb
push
add
mov
jnp
xor
mov
mov
enter
mov
sbb
mov
sub
in
push
mov
int
inc
sti
fldt
adc
lret
iret
pop
les
jo
outsl
imul
ja
push
jnp
lock
mov
jnp
scas
sub
pushf
xchg
xchg
push
mov
mov
dec
mov
test
fidivrl
scas
push
cvtpi2ps
cmp
sbb
mov
std
push
add
inc
mov
outsl
mov
push
insl
or
mov
in
sub
test
sbb
lods
std
scas
jnp
pop
xlat
movsl
insl
loopne
mov
stos
repnz
add
insl
addr16
mov
pop
mov
cli
sub
aaa
jnp
pusha
jle
mov
std
mov
inc
popa
addb
je
dec
and
aas
aad
jb
jae
out
lret
push
das
or
mov
insb
jns
mov
sub
in
pop
jp
or
fistpl
and
add
jnp
xlat
mov
movsb
enter
cmp
clc
sbb
sbb
jnp
mov
scas
mov
jnp
ljmp
jnp
xchg
adc
cmpb
leave
xchg
sahf
dec
mov
mov
xorb
xchg
sbb
repz
pop
int
xor
sub
loopne
mov
jnp
push
out
scas
js
cli
adc
cmp
dec
xlat
stc
jnp
adc
hlt
xor
icebp
dec
sbb
add
ja
lahf
loopne
dec
jnp
sbb
add
inc
stc
dec
jnp
sbbb
mul
inc
sbb
jno
outsl
loop
fldcw
fistpll
mov
outsb
icebp
jp
cmp
push
pop
dec
cmp
testb
lahf
movsl
in
sub
lret
push
add
push
add
hlt
push
xchg
in
jnp
cltd
sarb
xchg
in
jmp
or
in
je
mov
sti
test
mov
lock
jbe
pop
pop
push
push
cld
jnp
sbb
or
fcmovnb
imul
js
andl
lock
enter
call
pop
sarb
xchg
or
mov
mov
jnp
and
xchg
sub
jnp
add
sbb
mov
iret
xchg
mov
jge
jbe
inc
jnp
sbb
push
xor
dec
mov
dec
fildl
cmp
ror
push
or
mov
ja
push
adc
mov
loopne
imul
pop
sub
out
dec
jns
imul
bound
mov
mov
dec
jnp
sti
stos
mov
sub
scas
and
das
sbb
mov
outsl
in
in
adc
enter
sbb
ret
popa
lret
jnp
aaa
lahf
sbb
cld
movsl
cmpl
arpl
mov
jnp
ja
push
test
sbb
inc
sub
jle
js
or
mov
jge
enter
and
xchg
divb
xor
sbb
ret
enter
mov
xorb
mul
pop
cmp
inc
data16
clc
mov
mov
or
stc
pusha
lods
in
sub
jnp
fwait
call
push
cltd
mov
pop
sub
leave
das
mov
mov
loop
jnp
in
push
mov
mov
insl
push
jnp
push
add
jge
add
jnp
sub
adc
xchg
sub
lahf
jnp
stos
orb
push
mov
mov
mov
stc
mov
sub
inc
mov
test
or
jnp
or
mov
jle
pushf
data16
cmpsl
jnp
mov
dec
fwait
idivb
js
inc
lret
inc
cmp
adc
dec
mov
cli
into
xor
or
ljmp
jnp
add
push
int
jp
jnp
lcallw
push
mov
mov
fdivs
xchg
adc
decl
jns
or
lahf
jno
add
mov
loop
xchg
mov
and
cmp
xchg
xor
hlt
jnp
dec
sahf
push
out
scas
mov
lcall
idivb
inc
hlt
jle
xor
fwait
jo
push
cmpsl
inc
decb
in
and
mov
daa
pop
sbb
jae
cmp
mov
pop
mov
enter
pop
hlt
shlb
jae
out
add
repnz
sbb
loope
xchg
loop
mov
leave
call
adc
xor
jb
dec
sub
int3
imul
fcomps
jae
shrl
sbb
repnz
xchg
add
add
test
das
xchg
mov
cmp
inc
shrb
fdivrs
xchg
dec
mov
subb
pushf
push
jnp
sub
jnp
std
aam
jns,pn
cmp
mov
xor
fidivs
orb
add
xor
enter
sub
sub
sbb
int3
dec
jnp
inc
into
and
pop
imul
jo
hlt
fidivrs
and
inc
xchg
test
inc
mov
in
dec
call
mov
push
into
jnp
adc
and
sarb
mov
sti
sub
inc
mov
adc
add
jnp
imul
test
in
imul
pop
and
xchg
das
or
jnp
and
mov
in
or
dec
cmpb
pop
sbb
mov
mov
jae
mov
mov
sti
jnp
cwtl
sub
push
enter
aam
addr16
lret
mov
fbstp
mov
enter
jmp
test
lret
mov
popa
mov
sbbl
and
sbb
arpl
and
outsl
push
adc
mov
cmp
and
push
rorb
push
jnp
in
mov
mov
lahf
cmp
cmp
rorb
out
add
dec
fxch
jnp
jecxz
cwtl
xchg
mov
mov
xlat
cld
mov
imul
dec
fs
mull
or
push
in
aad
sti
cltd
mov
mov
repnz
jnp
stc
mov
cmp
in
fdivrs
pop
or
sub
ds
inc
sub
mov
xchg
mov
mov
xlat
out
mov
sub
test
xor
es
leave
jnp
test
in
add
dec
pushf
out
ds
mov
add
sti
pop
jp
daa
and
sahf
jb
xchg
jnp
pushf
sbb
ret
ret
in
test
jmp
int3
in
dec
fprem
lcall
enter
in
stc
sub
adc
pop
push
or
mov
cwtl
les
jecxz
dec
imul
shrl
mov
cmp
into
mov
sub
add
jnp
mov
movaps
arpl
jmp
sub
push
pop
test
fwait
mov
mov
xor
inc
mov
cmpsl
rclb
xchg
cmpsb
sti
lds
add
int3
sub
fcmovnbe
or
outsl
stos
push
sub
test
decb
outsb
jb
popf
add
mov
andl
sbb
out
jge
jns
xchg
mov
scas
and
in
cmp
mov
mov
push
add
adc
inc
sbbl
inc
pop
add
add
xchg
cli
in
xchg
enter
xchg
dec
add
xor
les
mov
jne
lcall
icebp
dec
out
and
jnp
pop
dec
or
loope
jb
mov
test
push
mov
sub
data16
insl
pop
push
jnp
mov
inc
jae
sbb
cmp
adc
pop
dec
and
lea
aaa
pop
mov
mov
cs
lds
lret
jp
push
cmp
fdivs
mov
push
jnp
push
jmp
fisttpl
dec
dec
cmpsl
int
and
or
fmuls
les
ja
sub
cmp
cld
add
js
and
jl
lods
sub
fstpt
ret
fidivl
push
rorl
sahf
or
mov
lods
push
roll
cltd
lods
mov
pop
xchg
loop
dec
andl
mov
sti
push
inc
mov
mov
mull
int3
jb
divb
rolb
in
shll
repz
cwtl
mov
scas
xor
and
jne
adc
and
mov
jp
cmp
in
js
jnp
jmp
pushf
into
xlat
enter
test
xchg
and
mov
push
mov
sbb
stos
inc
repz
cli
ljmp
dec
out
icebp
inc
outsl
enter
aas
sarb
mov
jecxz
into
cmc
jnp
sbb
xor
rorl
scas
mov
sbb
roll
jne
fwait
je
or
mov
jnp
fisubl
nop
jnp
xor
and
xchg
mull
stos
imul
push
jns
push
jnp
shrb
jnp
jle
int
imul
mov
jb
into
jmp
adc
loop
mov
ss
mov
inc
push
or
jno
add
mov
pop
out
pop
jnp
sbb
sub
xchg
scas
int3
iret
jnp
icebp
sbb
cltd
mov
test
mov
lods
inc
pop
les
jb
push
pop
mov
jp
test
inc
sbb
xlat
mov
out
insl
mov
jnp
repnz
popf
ret
sub
gs
movb
sbb
cmp
jnp
jb
lods
lret
sub
je
repnz
loopne
jnp
sar
cmpb
arpl
jmp
mov
xchg
lahf
stc
lds
dec
mov
xchg
js
loop
mov
je
push
mov
pop
icebp
jnp
sub
fwait
add
std
sti
push
call
test
jnp
and
sub
push
and
and
dec
mov
enter
addr16
adc
add
push
lods
xchg
je
push
fsubs
or
push
pop
sbb
mov
or
inc
stos
lret
mov
iret
cmp
loopne
dec
imul
jno
and
push
jae
jmp
jnp
mov
fcomp
fstpt
xorb
imul
mov
add
jnp
mov
lcall
inc
ficompl
mov
jnp
cmp
movsb
and
data16
repnz
xor
jnp
cmovns
jle
imul
ss
mov
call
inc
filds
cmp
lea
or
sub
push
xlat
ja
xor
xchg
pop
repz
or
stos
insl
out
jp
jbe
mov
pop
xor
cli
sbb
dec
cmpsb
and
mov
insl
lods
cmpsl
xchg
jnp
fisttpl
idivb
jno
dec
xorb
jnp
repz
dec
fstpt
xchg
pop
dec
rcrb
pop
or
aas
call
sub
xor
stc
fcom
sbb
ljmp
sti
jnp
mov
mov
aam
jnp
mov
xchg
fidivrl
adc
sub
cwtl
int
sbb
mov
loop
cltd
jno
rorb
mov
jnp
test
subl
inc
mov
insb
inc
sbb
jnp
lret
jae
mov
cwtl
outsl
ljmp
lock
sub
repnz
pushf
sub
insb
xchg
jnp
sub
mov
mov
fistpl
lods
push
jnp
movsl
inc
push
inc
movsb
hlt
cmp
or
dec
outsl
mov
in
aam
sub
mov
ss
jnp
or
out
fsubr
enter
pop
mov
repnz
jle
jg
js
scas
jo
loop,pn
idivb
enter
bound
mov
cmpsl
jae
es
jnp
mov
loope
push
lret
xor
insb
sarb
sbbl
arpl
addr16
aaa
lock
xor
mov
lea
jnp
and
repnz
stos
ret
call
test
insb
test
clc
jae
aad
jns
lock
cmp
shlb
roll
mov
and
jnp,pn
mov
xor
cmp
and
and
xchg
clc
call
cmp
jg
jno
shrb
pop
jae
mov
jns
or
imul
lret
and
mov
in
jl
stos
pusha
push
add
cmp
xchg
rorb
mov
or
lds
jnp
pusha
lret
sarl
dec
adcb
aaa
sbb
sub
fmul
cmp
cmp
sub
aas
push
pop
outsb
dec
jnp
in
movsl
out
mov
shl
xchg
inc
clc
insb
ja
jnp
xlat
xor
or
inc
pop
jg
xorb
imul
xchg
cs
jnp
sub
cmpsl
mov
lret
jnp
lock
outsl
mov
push
lods
call
out
daa
xor
push
pop
in
test
and
rcrb
mov
sub
sti
out
add
inc
dec
jge
call
xchg
jnp
push
push
bound
adc
xor
test
sbb
lods
pop
push
xor
add
inc
std
loop
xor
outsl
sub
mov
lahf
ret
jnp
nop
jge
and
sub
pop
sbb
lahf
jae
nop
rorb
mov
cmp
insl
lods
push
add
mov
push
xchg
sub
cli
push
es
add
inc
jnp
mov
push
xchg
push
jmp
pop
sbb
xchg
ret
jbe
xor
imul
call
sub
pop
push
data16
lds
out
cwtl
outsl
lcall
rcrl
outsl
pop
gs
aaa
mov
mov
fsubrl
lret
test
jnp
mov
mul
in
gs
add
insl
adcl
sub
js
jnp
loopne
dec
mov
dec
sub
insb
dec
test
scas
jbe
jno
jnp
cmp
mov
out
fnstsw
adc
cltd
mov
jns
ds
in
nop
jnp
scas
cmp
pop
orl
sub
bound
jnp
cmp
mov
xorl
jbe
fstpl
jnp
lods
sbb
aam
jnp
xor
fldl
add
xchg
sub
pop
inc
pop
imul
xchg
jnp
mulb
rcl
fcmovu
jnp
stos
jns
sub
out
push
inc
test
xchg
int3
lock
jnp
popf
xor
gs
mov
insl
and
or
negb
mov
sub
icebp
or
pop
lahf
cmp
sub
cmp
les
push
ret
mov
insb
lea
cmc
pop
icebp
lcall
loop
and
ljmp
rcl
mov
dec
cli
jnp
push
inc
mov
mov
xlat
fnstsw
int
sub
mov
insb
fisubrl
or
enter
inc
jae
xchg
and
mov
gs
loope
fsubl
imul
outsb
sub
rolb
movsl
mov
mov
cld
or
sbb
xor
lods
jne
loope
jnp
mov
add
push
ds
push
js
xor
movsl
adc
mov
je
mov
shrl
outsw
andb
dec
mov
pop
loop
pusha
jns
mov
push
test
out
fcom
jnp
xchg
sub
mov
mov
adcl
fimuls
test
outsl
mov
inc
sbb
push
push
lret
jnp
mov
mov
cmpsl
loop
clc
sub
jae
test
insb
rorl
and
lret
jne
ja
divb
jecxz
addr16
aas
ljmp
jnp
jp
mov
call
push
dec
mov
mov
inc
and
or
xchg
jnp
fwait
clc
ljmp
pop
test
push
bswap
jne
fsts
or
jge,pn
dec
push
jnp
cli
loope
lcall
jae,pn
mov
jnp
dec
lock
mov
jnp
out
pop
mov
cmpsb
push
mov
jl
lds
xchg
imul
inc
lahf
das
dec
out
jnp
stc
dec
mov
xchg
clc
andl
jmp
jnp
shlb
cmpl
inc
sub
xchg
call
cli
hlt
in
inc
jmp
pop
int
je
sarb
push
push
sub
inc
imul
lods
push
inc
add
jne,pt
daa
lahf
push
call
pop
scas
mov
jnp
in
int3
cmp
test
and
mov
sub
jns
xlat
mov
lret
cmpsb
xchg
sbb
in
imulb
jno
pop
stc
test
dec
sbb
popf
in
pop
mov
shlb
fisubrs
jnp
or
ss
lods
ret
mov
cmp
jb
out
and
iret
jnp
fmuls
or
xorb
enter
jnp
out
and
jnp
cmp
nop
mov
loopne
sti
hlt
dec
pushf
push
mov
orl
popf
jmp
loop
lds
mov
dec
lock
mov
add
jne
testb
dec
pushf
out
mov
mov
leave
jnp
fsts
jnp
mov
dec
pop
lds
push
test
or
adc
jl
adc
inc
jo
and
or
icebp
sbb
clc
inc
jnp
dec
fstp
mov
cmp
push
jge
enter
adc
jnp
xor
add
dec
cmp
in
adc
fiadds
sub
mov
clc
jae
bnd
dec
and
fstl
cmp
loop
popa
mov
mov
orl
push
jae
cmp
rorl
add
fldcw
and
or
adcb
loopne
les
fnstcw
adc
movsb
rcll
int3
lret
in
mov
pop
sbb
and
fwait
lods
imul
jnp
insb
iret
mov
dec
jge
test
pop
movsl
cmpb
dec
stos
lea
dec
dec
jp
in
or
pop
jae
jge
outsb
mov
mov
lods
inc
add
mov
fs
xor
dec
fsubr
xchg
jmp
xchg
outsl
pusha
push
sub
test
jnp
repz
xor
sub
lahf
dec
imul
xchg
adc
sub
sub
sub
jnp
loopne
cmpsl
jnp
fdivs
lock
dec
and
negb
repz
gs
jb
sbb
sub
mov
inc
push
movsb
scas
pop
jae
shrl
mov
mov
outsl
add
mov
insl
int
dec
inc
sarl
sbb
cmp
call
push
jecxz
jo
clc
cmp
ja
cli
or
cmp
dec
pop
mov
fbld
sub
jnp,pt
adc
lods
mov
icebp
nop
jae
cli
std
cmpsl
push
lret
imul
dec
je
dec
ret
mov
sub
mov
jnp
daa
stc
xor
repnz
je
loopne
xorb
aam
push
dec
outsl
pop
movsl
fwait
jnp
lods
aas
push
mov
lcall
sub
adc
cmp
jnp
shrb
popf
imul
outsl
sub
sbb
es
daa
pop
sub
push
lods
mov
add
push
jnp
mov
in
outsl
pusha
mov
cmp
push
scas
push
dec
dec
or
jnp
cmc
mov
in
pop
arpl
inc
leave
test
xlat
daa
mov
jb
cmpsl
ljmp
jnp
iret
add
mov
xlat
inc
and
addl
jnp
push
in
enter
jnp
inc
cmpsl
je
dec
call
sbb
mov
sarl
jno
pop
repnz
outsb
mov
inc
xchg
fsubrl
jne
lcall
and
push
mov
mov
incw
shrb
jge
push
sbb
popa
mov
je
xchg
dec
es
aam
xor
add
sbb
mov
cmpsb
pushf
jnp
push
scas
out
aam
mov
pop
psrlq
bound
mov
shlb
and
pop
aaa
push
push
fmuls
cmp
scas
push
cmp
stos
inc
push
cli
jp
mov
jae
movsb
pop
mov
add
pop
xchg
outsl
xor
aas
xor
repnz
fdivs
pop
inc
add
cwtl
push
test
lds
aam
mov
sub
jecxz
mov
jb
jb
jnp
or
data16
dec
mov
or
jge
test
jnp
enter
jne
aam
adc
jnp
add
dec
out
fisttpll
jp
adc
jnp
leave
mov
pushf
js
dec
dec
into
fbstp
addr16
imul
fdivs
int3
jnp
xchg
and
cs
jnp
push
shrl
movsb
xlat
neg
jnp
pushf
fisttps
mov
repnz
lret
push
stc
add
and
adc
aas
ret
insl
sbb
mov
sarl
sub
aad
cwtl
jnp
out
xor
xchg
cltd
je
cmp
xchg
sub
jnp
stos
xchg
insb
cmp
mov
femms
pop
fisubl
iret
adc
insl
out
add
test
jae
mov
insb
inc
aas
in
outsl
dec
add
push
add
xor
lods
sub
mov
jnp
cmp
mov
jne
in
rcl
in
jnp
hlt
test
enter
sti
dec
icebp
xchg
jae
test
int3
jo
jnp
repnz
scas
rorb
pop
mov
push
scas
xchg
mov
lods
add
or
xchg
imul
jnp
mov
cmp
sub
jnp
or
sub
mov
popf
mov
mov
movsl
insl
jnp
das
jmp
imul
sub
andl
mov
outsb
test
testb
popa
or
orb
mov
xor
in
movsl
in
pop
or
ja
sub
push
fiadds
jb
adc
movsb
xchg
or
insl
stc
adc
clc
add
enter
gs
je
nop
cltd
jo
int
and
and
mov
sub
lock
out
outsl
std
je
sub
out
mov
int3
jp
div
repnz
add
mov
lock
sbb
addb
gs
lods
aaa
jnp
les
mov
or
lods
js
or
sub
in
jnp
sub
push
les
ret
cwtl
cltd
pushf
mov
bound
aam
int
imul
addr16
movsb
test
pop
imul
add
sub
aaa
jecxz
loop
movsl
fdivp
movsb
dec
jnp
in
repnz
aam
repz
add
mov
repnz
movsb
notl
iret
add
jnp
ret
sbb
xor
xchg
shl
out
repnz
mov
or
pop
pop
sbb
jnp
inc
aaa
inc
fldt
pushf
test
ja
in
enter
hlt
stos
imulb
and
lock
imul
jb
mov
mov
mov
lahf
and
mov
or
dec
cmp
outsl
cld
test
insl
jnp
cmp
inc
pop
stc
dec
xchg
and
loop
jns
je
roll
or
or
jle
cmp
notb
or
repz
fcoms
call
cwtl
xor
sbb
adc
cmpsl
shrl
jo
cmp
aam
push
ret
fwait
imul
or
jbe
jge
mov
xchg
jae
cmpsl
inc
or
in
and
mov
push
jae
fnsave
jnp
sbb
out
rcl
aad
das
pop
jnp
cmpsb
call
jnp
ljmp
or
and
jae
jno
jbe
arpl
mov
cmp
sub
jnp
sub
push
idivb
enter
sbb
jnp
xchg
ja
pop
sbb
ret
mov
fiadds
or
ljmp
pop
jnp
in
push
dec
out
sarb
and
lret
or
scas
jnp
sbb
lahf
xchg
jnp
cli
call
jnp
mov
scas
mov
loope
sbb
jnp
iret
inc
add
sub
ret
jmp
dec
mov
jnp
call
push
icebp
out
les
sub
dec
sub
and
int3
loop
cld
aad
outsl
xlat
imulb
icebp
push
jnp
popa
and
mov
arpl
cmpsb
inc
push
sti
outsl
jbe
lcall
jmp
outsb
in
sub
jno
sub
jo
pop
ror
mov
or
inc
imul
fildl
push
test
mov
mov
jae
xchg
outsl
data16
push
jnp
jge
jae
dec
mov
cmpsl
push
ja
add
jnp
adc
sbb
outsl
xchg
jecxz
xor
mov
ljmp
and
mov
scas
outsl
call
sbb
jnp
mov
dec
cs
xchg
mov
outsl
mov
loopne
inc
pushf
js
sarb
pop
xchg
repnz
jo
imul
mov
gs
das
loope
enter
sbb
hlt
xor
inc
or
jae
and
mov
push
jnp
scas
ret
ljmp
leave
pop
mov
pushf
scas
subl
jnp
shrl
lods
jnp
movsl
nop
aaa
pop
hlt
insl
ljmp
sti
adc
jae
in
jnp
clc
xchg
sbb
and
xchg
xchg
in
imul
outsl
fldt
push
lods
sub
xor
imull
sub
hlt
js
adc
sti
xchg
loop
inc
imul
xchg
daa
push
mov
push
mov
addr16
fdivl
loopne
cmp
lea
xchg
push
sbb
popf
int3
mov
sbb
outsl
push
ljmp
rcll
xchg
sub
test
inc
and
iret
jnp
loope
movsl
push
mov
test
pop
sub
movsl
jnp
mov
pushf
insl
cmp
push
jns
daa
xor
pop
push
add
mov
xchg
hlt
jnp
clc
test
movsl
push
jnp
push
xchg
xchg
int
push
jnp
pop
sub
aas
gs
sub
jnp
xor
jg
outsl
and
icebp
ret
lock
and
push
xchg
or
or
pop
jnp
rorl
repz
push
sub
sub
sti
clc
mov
negb
jp
pop
sbb
cld
sub
adc
int
jne
cmp
ret
lret
fldenv
xor
pop
or
xlat
jnp
imul
dec
dec
out
or
mov
xchg
jbe
leave
jnp
lcall
jnp
inc
scas
iret
sub
pop
xor
mov
orb
insl
pop
sbb
xchg
cmp
or
jnp
dec
fnsave
imul
and
ljmp
push
mov
fwait
xor
pop
pop
leave
dec
in
scas
mov
es
dec
and
dec
repnz
int3
jnp
dec
mov
pop
mov
push
lcall
mov
jae
call
push
popf
sti
cmp
mov
outsl
inc
movsb
mov
pop
int
sub
push
idivl
ret
inc
mov
jnp
imull
cmpsb
popa
sbbb
call
jg
pop
repz
test
inc
pop
clc
je
loop
fistpl
ds
inc
in
mov
jecxz
cli
lods
insb
inc
sub
divl
data16
andb
push
outsb
nop
sub
mov
in
push
aas
out
add
jnp
out
cli
jg
jmp
daa
test
jnp
sub
lahf
dec
jb
in
pop
mov
add
ljmp
or
stos
xor
pop
push
testl
xchg
push
imul
xor
pop
or
jnp
push
jg
loop
mov
lods
jmp
dec
sbb
je
insl
sbb
cli
and
push
cmp
rorb
dec
jnp
mov
push
mov
xlat
bound
aas
pop
outsl
pop
mov
mov
cmp
shrb
in
movsb
and
insb
mov
or
xchg
dec
lods
push
ja
out
fs
sub
pop
lock
cmp
dec
mov
movsl
mov
mov
add
cmpsb
jno
fdivs
mov
rolb
jne
mov
sbb
jmp
pop
jl
jbe
or
in
popf
jne
and
jnp
xchg
dec
cmpsl
test
push
in
sbb
and
sbb
lods
fs
insl
test
jo
cmp
decb
jae
test
dec
mull
fildl
in
sahf
xor
pop
lcall
ja
fistps
ret
es
pop
mov
xor
call
sar
mov
and
dec
std
imul
lret
icebp
sbb
insb
out
int
lods
jnp,pt
imul
addl
xchg
bnd
inc
in
or
jnp
adc
popa
sahf
add
fs
jnp
rclb
in
mov
pop
add
jnp
sub
test
jbe
push
mov
cmp
fwait
div
lret
repnz
xchg
fwait
mov
iret
popf
in
int
out
repz
in
pop
inc
icebp
or
popa
or
sbb
rcrl
cmp
arpl
icebp
jg
push
dec
lds
adc
jmp
or
cmpsb
clc
repz
mov
xchg
inc
mov
pop
mov
lea
lds
mov
hlt
movsb
jnp
lret
cmp
xchg
dec
pop
pushf
fwait
xchg
sub
outsl
loopne
rorl
shlb
hlt
jnp
lcall
mov
jae
loopne
or
in
add
mov
data16
icebp
sub
dec
popf
movsl
insb
dec
outsl
jmp
scas
xor
jl
sub
mov
lds
addl
fsts
mov
inc
jmp
xor
call
pop
inc
stos
dec
ss
mov
sub
xchg
sti
enter
test
mov
inc
xchg
jne
lock
jno
int
shrl
sub
pop
inc
sub
cmp
das
lods
insl
dec
aad
outsb
or
movsl
mov
or
sub
xchg
out
jg
mov
jg
je
mul
fmuls
sub
inc
popa
icebp
js
xlat
in
xchg
or
int3
ret
out
imul
dec
inc
sbb
das
sbb
inc
push
jnp
push
int3
scas
addb
cmp
mov
sbb
in
mov
jnp
popf
aaa
ret
imul
jnp
pusha
sbb
popa
pop
push
aam
or
xchg
fdivp
inc
sub
add
and
nop
mov
insl
inc
jae
mov
push
adc
sbb
pop
stos
mov
popf
mov
pop
outsl
jo,pt
xor
mov
insb
jnp
ljmp
sbb
jae
and
jno
ja
dec
mov
in
jmp
jnp
lock
mov
pop
cltd
jnp
mov
arpl
jmp
xchg
rcll
lods
inc
jnp
lahf
push
insl
xor
adc
mov
jae
das
out
dec
cmp
inc
jae
xlat
addb
stos
or
mov
and
cmpl
loopne
in
adc
mov
aad
sbb
push
outsl
mov
imul
into
icebp
mov
daa
je
inc
jnp
push
jmp
jae
addl
das
negb
shl
lret
out
stos
or
out
or
out
and
pop
in
dec
mov
mov
mov
enter
mov
bnd
lret
lods
lods
or
in
pop
js
xchg
and
sbb
rcll
add
clc
stos
rcrl
jnp
cwtl
lods
repnz
xchg
aad
jnp
aas
pop
cmp
mov
insl
xchg
enter
sub
icebp
lret
push
lods
out
in
mov
call
xchg
clc
out
xlat
lret
cmp
pop
fidivrs
out
push
inc
add
xor
mov
sub
sbb
or
jnp
jl
mov
popf
movsb
sbb
or
xchg
cmp
das
pop
repz
imul
subb
mov
cmp
std
xorl
int
mov
xchg
stos
out
es
and
or
dec
divb
fcomi
fmuls
in
pop
and
jo
push
jae
add
xchg
fldt
nop
mov
sub
xor
lods
and
test
xor
sub
in
jecxz
iret
bound
hlt
adc
xor
int3
je
pop
out
mov
mov
push
jmp
xchg
or
rolb
jb
cmp
arpl
jae
ja
lods
ret
jns
xchg
inc
popf
les
cltd
shlb
stc
sub
jmp
mov
lock
jnp
icebp
faddl
mov
std
dec
xor
cmp
ds
push
movsl
mov
or
aam
stos
inc
mov
or
push
scas
insb
pop
or
sbb
sbb
and
mov
sbb
frstor
adc
mov
in
inc
int
pop
jno
jg
in
adc
pop
fsubl
push
and
xchg
fwait
sub
mov
or
mov
push
push
int3
outsl
inc
dec
add
std
mov
push
enter
lock
fistl
jnp
jb
push
popa
jnp
in
iret
mov
jnp
int
ds
outsb
subb
add
bound
aad
out
jg
addl
dec
jnp
pop
hlt
gs
cmpsl
sahf
jnp
pushw
cmp
mov
out
and
lea
ja
out
int3
je
ss
push
jnp
movsb
pop
add
lods
or
xor
sub
mov
or
cmp
xorl
insb
outsl
clc
call
lahf
in
add
cmc
ficoml
enter
push
jnp
dec
insl
ret
mov
sub
sbb
lods
sbb
sub
cmp
add
and
jne
xor
stos
test
sub
mov
imul
fadd
lea
insl
leave
aam
hlt
push
and
jle
pop
push
sbb
outsl
xchg
cmpl
xchg
hlt
mov
sub
cmpsl
mull
imul
mov
xor
fs
jecxz
je
xchg
cld
jne
idivb
adc
lods
jnp
pop
sbb
or
jae
hlt
stc
loopne
jb
sbb
xchg
call
or
mov
insl
push
js
mov
in
mov
out
xor
jae
mov
jo
sbb
insb
mov
fldl
push
js
mov
or
lods
dec
outsl
mov
sbb
sub
lea
dec
icebp
inc
shll
pop
out
mov
jne
xchg
pushf
jnp
pop
movsl
loopne
mov
jnp
and
cmp
call
xor
loope
xchg
or
out
mov
jmp
or
jae
cmp
cmp
and
adc
dec
mov
scas
add
cmp
iret
imul
enter
xchg
aas
inc
cmp
xchg
push
or
imul
test
dec
iret
dec
xor
pop
mov
inc
fstl
jnp
daa
push
adc
mov
fldt
mov
jne
addr16
adc
pop
test
push
icebp
scas
ja
pop
xor
cmc
lods
test
fwait
aaa
lcall
into
sbb
mov
in
or
pop
mov
cld
lret
mov
insb
push
sbb
jnp
popa
push
insb
popf
mov
test
fldcw
jmp
js
je
mov
jbe
mov
jae
call
cmp
mov
xchg
outsl
scas
scas
inc
jnp
sub
sub
clc
xor
jae
push
outsb
sbb
mov
or
sbb
push
adc
jg
pop
data16
xchg
int3
cmp
lret
mov
sti
adc
sub
cmp
scas
sbb
jnp
imul
jle
sub
push
in
adc
fistpll
sub
je
cmc
and
lahf
shlb
lock
imul
cltd
dec
sub
aas
mov
andb
mov
outsb
lock
test
inc
jb
hlt
repz
je
insl
imul
adc
mov
fsubrs
pop
mov
adc
dec
xor
bound
jp
mov
cmpsl
icebp
ljmp
enter
in
lds
aaa
incb
sbb
push
jno
xchg
adc
int
jnp
mov
scas
cmovnp
iret
mov
add
mov
xchg
xor
sub
xor
dec
jge
imul
ret
iret
cli
scas
addr16
pop
shr
jle
leave
mov
pop
aaa
pop
cmc
fiadds
push
bound
mov
movsb
fidivrs
xor
adc
pop
jne
sub
insb
mov
push
sub
lods
test
fists
jb
fldenv
or
mov
jmp
xchg
mov
push
push
shrl
push
lods
dec
jo
dec
mov
jp
push
sub
push
jnp
fdivrs
xchg
enter
outsl
sbb
sub
int3
jne
fcmovnbe
mov
add
push
xorl
and
out
dec
lods
movsl
mov
aad
out
push
add
ret
inc
mov
push
or
jnp
sti
repnz
sub
int3
or
sub
jecxz
sub
mov
cs
std
je
lahf
sub
in
movsb
sbb
je
mov
aaa
xchg
int
fidivrs
cmpl
and
dec
jno
in
and
out
bnd
inc
and
cltd
cmpsb
xchg
pop
js
cmp
push
sub
sub
inc
loopne
sub
mov
jbe
scas
or
test
out
mov
push
nop
movsb
sub
stos
jne
jbe
pop
hlt
push
outsb
and
or
fs
imul
in
scas
je
pop
into
mov
dec
cmpsl
lret
push
aam
in
aaa
pop
sbb
sbb
mov
or
dec
inc
or
js
pushf
sbb
rcl
cmp
xchg
fldenv
mov
loopne
adc
xchg
sbb
jnp
or
imul
or
lret
jge
ljmp
jmp
add
inc
shlb
mov
lods
jnp
sti
mov
mov
test
jnp
xor
jnp
add
jnp
sub
push
imul
mov
lds
jnp
mov
adc
out
cmp
mov
out
daa
jae
lahf
pushf
jne
adc
lock
insl
xorl
jg
adc
jnp
or
aas
mov
cmp
mov
movsb
jnp
inc
adc
dec
jnp
cmp
push
inc
cmp
inc
dec
js
mov
int3
insl
sti
jecxz
fldenv
jne
movsb
xor
add
test
xor
sub
pushf
mov
jo
jmp
in
sbb
jnp
dec
push
mov
add
jnp
mulb
cmpl
sbb
sub
ja
push
dec
dec
enter
dec
mov
daa
loopne
pop
adc
mov
mov
cmpsl
nop
jnp
fwait
push
scas
lret
xchg
xlat
je
out
add
ja
push
adc
divb
push
xchg
imul
jns
mov
out
loop
loopne
push
test
sbb
in
jmp
fucomi
and
and
sti
cmp
and
add
in
inc
inc
cmp
js
sbb
sub
jnp
and
out
enter
sarl
or
or
and
pop
mov
jo
jb
test
sub
dec
xchg
ljmp
mov
sbb
lods
out
pop
jnp
test
loopne
sbb
idivl
and
push
and
imul
in
popf
fmuls
loop
ja
sbb
in
jl
repnz
test
pop
cmc
loopne
clc
dec
jae
cmp
mov
add
popa
outsb
mov
xchg
or
rcrb
pushf
pop
jnp
lret
aaa
dec
dec
scas
stc
pop
dec
clc
inc
lea
ljmp
xor
dec
jne
mov
jnp
cmpsb
mov
mov
cld
mov
push
mov
lods
lret
scas
xchg
popa
xchg
sub
fsub
jnp
pop
dec
jne
cltd
mov
jnp
mov
in
sahf
xchg
sub
into
mov
outsl
aaa
mov
xchg
xor
jnp
cmp
icebp
call
ss
jo
jmp
mov
lea
jle
mov
lret
rorl
mov
push
mov
pop
sub
pop
dec
loope
jp
sbb
insb
sub
adc
push
push
cmc
ss
sub
jae
loope
jnp
push
add
jo
test
lock
xchg
pop
jp
jae
stos
push
cwtl
in
jecxz
stos
movsb
push
out
push
sub
lret
fdivrl
dec
rclb
ds
cmp
sbb
jae
xchg
jno
jp
das
gs
xorl
repz
mov
jecxz
je
jnp
in
aaa
cli
xor
jbe
clc
cmp
ja
cmp
rcl
fistpl
jnp
in
xchg
call
imul
pop
test
divb
push
mov
imul
aas
xlat
jnp
push
cmp
call
xchg
shl
outsb
lods
pop
or
in
outsl
shrb
sbb
add
push
fdivr
insb
cmp
lret
or
dec
inc
pop
adc
aam
clc
jmp
add
mov
jp
negl
add
out
dec
jno
mov
loope
pop
movsb
hlt
mov
clc
dec
inc
push
in
leave
call
jnp
shl
mov
test
imul
jbe
cmp
mov
xor
mov
mov
cli
dec
cmpb
or
ret
and
mov
add
insl
popf
mov
xor
sub
enter
loop
or
mov
push
out
scas
mov
hlt
out
enter
in
dec
stc
fsts
jns
mov
jnp
adc
sub
je
insl
jnp
fadds
imul
sub
and
adc
into
pop
cmpsb
aaa
add
fst
jb
std
and
lods
repnz
imul
dec
jae
push
cmp
fsubrs
xchg
pop
stos
push
fdivl
idiv
hlt
or
imul
ljmp
inc
jnp
mov
aas
mov
inc
push
pop
sub
scas
pop
daa
sti
mov
jbe
pushf
or
or
in
inc
mov
dec
jnp
jno
add
jge
stos
jmp
ljmp
adc
and
mov
sub
or
and
mov
incb
jbe
or
stos
outsl
pop
cmp
mov
mov
push
xchg
shr
ret
cmp
sarl
adc
or
ret
insl
int3
jnp
adc
fimuls
jno
xor
add
sarl
lret
dec
pop
cmp
sbb
sub
xchg
xchg
call
dec
jo
fisubrl
icebp
insl
arpl
cmp
lods
movsb
out
inc
jnp
push
sahf
mov
jnp
inc
sti
mov
adc
imul
data16
sbb
and
add
mov
in
mov
jbe
pop
hlt
mov
add
cltd
mov
imul
mov
loope
jno
mov
movl
jnp
ret
popa
icebp
adcb
or
xlat
dec
icebp
or
adc
mov
daa
in
pop
xor
sub
xchg
jp
cwtl
les
or
mov
or
cli
pop
lods
mulb
imul
cwtl
or
cld
mov
cmp
testb
push
pop
cmp
outsl
lods
add
out
test
jae
inc
out
pop
sbb
or
leave
icebp
dec
or
enter
mov
jne
fldt
dec
hlt
into
movsb
xor
je
dec
daa
fdiv
cmp
xchg
jae
push
mov
mov
dec
cmp
adc
cmp
push
ja,pn
mov
js
xor
dec
in
daa
sub
cmp
mov
js
inc
or
jae
jns
pop
mov
mov
js
outsb
jae
ret
or
mov
adc
insb
rorb
jnp
bound
int3
xor
jmp
adc
lods
mov
pop
mov
enter
or
and
outsl
mov
repnz
scas
cmp
insb
xchg
jnp
pop
int3
sub
in
repz
or
cli
dec
xchg
jnp
in
inc
fsubr
cltd
movb
push
jne
jns
or
popf
or
outsb
cli
sub
jnp
mov
out
or
cmp
adcl
mov
jnp
jo
loope
ja
mov
jo
mov
testl
xchg
clc
xor
jnp
xchg
in
cmpl
inc
shrb
cmp
jnp
xor
sub
or
sbb
add
mov
inc
fldt
aam
ja
jnp
mov
loope
clc
es
cmp
add
push
lods
pop
ds
addr16
cmp
imul
imul
imul
sbb
push
xchg
in
cmpsl
jo
sbb
xchg
pop
insl
enter
imul
cmc
sbb
lcall
testl
or
xorl
xchg
push
jle
fwait
mov
dec
mov
into
insl
sbbb
ljmp
dec
pop
or
mov
xchg
jnp
xchg
stos
and
rcll
lods
jp
roll
lods
or
out
xchg
cltd
xor
idivl
mov
insl
ror
in
sub
inc
jae
std
push
sub
lret
into
lods
imul
jns
in
push
cmpb
mov
movsl
adc
mov
add
ss
jo
xor
jle
sub
pop
pop
xchg
nop
enter
cmpsl
in
jge
pop
or
or
xchg
jg
mov
ja
sub
jp
stos
jnp
or
mov
fs
insb
sub
pop
push
decb
dec
insl
pop
sub
mov
sbb
je
mov
mov
dec
mov
imul
shr
imull
lock
adc
mov
cli
insl
fcmovnbe
pop
jnp
in
sub
jnp
mov
lret
sbb
xchg
mov
jle
ret
insb
mov
and
and
jno
sar
adc
sbb
in
xchg
mov
ja
sbb
clc
je
dec
test
test
jnp
mov
jno
and
xchg
cmp
jge
mov
out
lret
or
cltd
shll
jnp
js
in
loopne
push
mov
mov
into
movsl
pusha
out
ss
mov
test
sub
je
adc
xchg
adc
push
xchg
add
and
jl
imul
sti
mov
jp
jge
iret
xchg
inc
pusha
test
fsubrl
je
sbb
pop
or
test
pop
lods
ljmp
xchg
sub
dec
repnz
adc
sub
outsb
or
out
outsl
inc
mov
out
mov
sbb
adc
rcrl
sub
fisttps
xchg
jnp
jl
cmp
mov
jnp
out
lret
popf
sub
icebp
or
push
mov
mov
cmp
cmp
mov
outsb
dec
xchg
dec
jnp
inc
incl
jnp
dec
outsb
popa
jge
stos
dec
jnp
movsl
es
sub
mov
jnp
cmp
jnp
int3
dec
or
xchg
scas
mov
mov
sbb
cltd
or
mov
push
fmul
and
mov
xchg
dec
outsb
insb
js
inc
and
sahf
lret
popa
and
or
xchg
call
mov
xchg
outsl
pop
sub
loop
mov
push
pop
call
stos
jnp
arpl
mov
jnp
or
out
mov
or
xchg
jnp
lods
iret
dec
jecxz
sub
jae
xlat
cwtl
push
lods
jnp
sbb
adc
jg
in
mov
inc
js
sbb
and
or
sub
inc
jnp
out
mov
stc
or
jnp
mov
int3
cmpsl
pop
xor
mov
push
push
adc
scas
add
jnp
jmp
sti
xchg
or
cmc
enter
pop
push
frstor
jp
mov
pop
mov
mov
arpl
xchg
push
sub
push
outsl
rcl
std
stos
fucomi
js
addb
je
xor
inc
mov
mov
shlb
ret
out
push
lods
jb
jnp
cmpsw
push
lcall
iret
mov
aam
cs
xchg
fcoms
ja
pusha
mov
mov
xor
dec
loop
lock
sub
push
dec
sub
aad
repz
mov
daa
in
push
adc
cmp
icebp
add
adc
jae
repz
mov
jecxz
pop
fstpl
outsl
mov
ret
lods
add
pop
sbb
outsl
in
xor
xchg
sub
fdivrs
lcall
sbb
imulb
jnp
sub
adc
lods
cmpsl
mov
sbbl
movsl
outsl
jnp
repnz
xor
stos
int
mov
jle
fimuls
in
push
push
cmpsb
dec
icebp
or
mov
std
mov
lods
inc
jg
movsb
cmp
sti
insb
mov
pop
dec
sbb
ljmp
out
push
mov
sbb
std
test
jmp
pushf
mov
outsl
inc
mov
jb
jnp
insl
mov
mov
arpl
mov
sbb
icebp
rcr
or
pop
popf
ficompl
daa
and
mov
in
push
fnsave
test
lods
sbb
lods
dec
sub
mov
dec
lcall
xor
dec
jnp
scas
lods
sahf
cld
add
int3
xchg
or
daa
jno
mov
ja
push
repz
movsl
dec
cmp
pop
dec
js
mov
add
push
mov
mov
jp
fiadds
mov
xchg
push
jge
mov
pop
insl
cmp
shr
inc
sub
aad
movsl
insl
daa
test
pop
pop
or
out
addr16
cmp
mov
repnz
pop
das
cli
or
mov
int
loop
pop
jae
pop
mov
lock
jo
outsl
test
testl
dec
cwtl
loop
jge
xchg
mov
ja
sub
sbb
fmul
or
shlb
in
mov
push
ss
jbe
sbb
push
inc
jnp
pop
cmpsb
jle
mov
mov
out
scas
fisubrs
jnp
out
ret
ljmp
fstpl
mov
dec
out
and
xlat
inc
fwait
mov
rorl
dec
mov
test
lods
stos
lock
setge
in
cmpsb
out
fstpt
mov
xchg
jno
sbb
sub
cmp
jno
sbb
jo
push
fidivrl
fsub
or
jecxz
sub
jae
jle
lahf
cmp
xchg
or
xchg
mov
pop
je
jne
lods
les
jne
sub
jnp
cmp
dec
xor
fadds
or
sub
insl
icebp
or
lock
shlb
in
jae
sbb
jnp
xor
pop
xchg
call
pushl
dec
mov
shl
inc
mov
sub
cmp
addr16
push
int3
aam
jg
cltd
mov
jmp
shrb
ret
and
mov
stc
int
xor
out
mov
dec
pop
lods
jnp
xchg
mov
nop
pop
and
push
or
insl
cmpsb
mov
pop
or
mov
mov
mov
and
sbb
dec
ficomps
pop
in
sbb
ss
gs
rcrl
jp
fdivs
aaa
xlat
mov
cmc
sub
jb
repnz
jnp
fnstenv
out
notl
push
jnp
imul
jnp
xchg
mov
push
ret
lods
sbb
adcb
scas
jge
xor
jbe
xchg
mov
jnp
sub
cld
xchg
pop
sbb
sahf
cs
inc
int
add
xchg
jp
jnp
pop
mov
lcall
mov
lods
push
pop
jnp
fnstcw
jnp
cmc
mov
sti
jnp
scas
cmp
les
repnz
xor
pop
jae
leave
ja
cmp
push
div
cmp
jnp
popf
jmp
xor
fnstcw
stos
clc
mov
cmp
or
mul
fdivrl
mov
mov
mov
or
int3
jnp
fdivr
pop
jb
je
jnp
cli
xor
jnp
push
and
or
test
lret
cmp
cli
pop
jnp
mov
stos
push
sbb
or
outsl
adc
push
jnp
or
dec
sbb
dec
sbb
mov
jnp
sub
sbb
sti
hlt
loop
dec
scas
mov
xor
xchg
mov
jnp
cwtl
mov
repnz
mov
mov
jnp
mov
jecxz
add
jnp
pop
xchg
or
jnp
xor
lods
clc
lock
cmp
imul
mov
cmp
cmc
mov
test
fsubl
xchg
outsb
pop
lret
decb
in
pop
jnp
jl
dec
ret
aaa
cli
inc
jnp
adc
repnz
fstpt
sbb
fldenv
stos
jnp
fcomps
pop
popf
repnz
dec
cli
and
cmc
mov
std
int3
xchg
push
fcomps
insb
fisubl
mov
mov
sub
lock
in
shlb
les
ret
lods
sbb
jnp
es
lcall
sbb
out
push
adc
mov
pop
xchg
push
outsl
clc
imul
movsl
add
mov
mov
scas
adc
sbb
std
dec
ja
test
jmp
sbb
pop
cmp
sub
pcmpeqd
or
push
jecxz
mov
add
mov
rcrl
pop
ficomps
or
cmc
pusha
jnp
fsubr
mov
test
pop
jnp
or
mov
leave
jnp
lcall
push
mov
es
mov
pop
pop
inc
pop
push
shlb
xchg
insl
push
loopne
aaa
scas
outsl
cmp
jnp
mov
lea
mov
lock
sub
mov
in
ficompl
xorb
mov
jp
xchg
lret
jnp
cmpsb
in
jnp
dec
push
call
lcall
repnz
jae
cmc
js
inc
jnp
xchg
mov
sbb
fists
xchg
cmp
into
jnp,pn
add
or
ret
bound
push
addl
mov
cmpsb
or
in
movsb
sub
jecxz
popa
jnp
xorl
out
ret
idivb
aaa
dec
cmp
movsb
out
ljmp
mov
add
in
mov
push
pop
jnp
xor
cmc
lret
das
push
jae
int3
xor
sub
mov
ret
jnp
cmpsl
in
add
xor
jle
xor
dec
stos
imul
jns
stos
imul
fsubr
mov
imull
push
inc
js
and
mov
sarl
jns
shlb
pushfw
loop
push
sub
lcall
stos
clc
lea
pop
imul
iret
sbb
jae
into
push
enter
int
sti
mov
dec
push
jmp
jae
imul
jnp
pcmpeqw
aas
in
scas
imul
jp
in
leave
outsb
cmp
jnp
mov
mov
ljmp
xchg
jg
jnp
leave
into
dec
ret
xchg
xchg
repnz
pop
cmp
enter
mov
iret
les
pop
jne
rcr
cmp
andb
jnp
xlat
punpckhwd
sti
clc
outsl
push
pop
scas
jnp
xchg
ja
sarb
push
jnp
mov
shll
xlat
dec
es
sbb
dec
mov
out
out
std
mov
sbb
fldt
sub
das
xchg
ret
jp
jnp
xlat
xor
xorb
push
gs
push
lret
cmp
fidivrl
popf
mov
or
xor
outsl
sub
jnp
cmp
mov
imul
daa
cmp
imul
pop
shlb
sahf
mov
movsb
cmp
icebp
insb
push
jle
mov
dec
push
jp
cli
lret
pop
sahf
cmp
mov
cmp
jge
dec
cs
sbb
xchg
and
mov
das
xlat
clc
nop
lods
mov
dec
jg
insl
sbb
pop
sub
lcall
insb
lret
out
in
cmp
fsubrs
add
sbb
sub
popf
gs
nop
lret
scas
clc
fadds
jo
jbe
or
xor
iret
add
sub
arpl
fnstenv
or
jge
fs
or
cmp
dec
jno
xor
jp
jbe
pop
jae
lock
sub
dec
movb
decl
jnp
int
das
pop
mov
sub
cmp
out
clc
stos
push
insb
sub
repnz
mov
dec
iret
inc
loop
ret
cltd
in
inc
stos
dec
mov
sbb
pop
aam
sub
cmp
push
push
ja
dec
mov
repnz
dec
push
dec
insl
xor
ss
mov
loope
cmpl
xor
aaa
lods
int3
jnp
sub
in
mov
jnp
or
jnp
or
xchg
test
std
mov
aaa
lods
cmp
sti
jnp
sarl
sahf
push
mov
sub
aad
or
push
test
mov
mov
std
adc
push
jae
sbb
jnp
frstpm(287
stos
dec
cmp
jb
fadds
idivl
in
dec
pushf
fisttpll
aaa
outsb
push
push
shlb
cmp
daa
ret
sub
inc
dec
pop
cmp
cmp
jno
aaa
push
jo
jnp
ja
and
mov
rcl
jge
jmp
data16
mov
in
jnp
fmuls
fwait
fs
dec
cmp
sar
ds
cmp
mov
push
xor
fisubrl
lret
loope
iret
mov
mov
mov
shrl
sbb
cmc
push
dec
or
mov
sti
fsub
or
lods
outsl
je
inc
sbb
pop
jnp
add
mov
mov
dec
into
or
stc
jmp
mov
or
pop
lret
imul
xlat
stos
xor
pop
mov
leave
repnz
jnp
adc
shrl
pop
aam
xor
or
je
sub
mov
in
aad
lods
cwtl
clc
lret
sbb
mov
pop
stos
ss
or
fwait
shlb
push
dec
daa
pop
pusha
push
jae
js
idivb
sbb
add
xchg
dec
mov
stos
shlb
hlt
in
lahf
add
insb
push
and
pop
testl
dec
aaa
jnp
data16
aam
sar
imulb
imul
clc
cmc
push
ja
test
cmp
movsb
insl
sbb
push
adc
fstpt
sub
mov
cmp
imul
test
mov
sub
js
ljmp
lods
mov
mov
fnstcw
xchg
push
sbb
mov
lods
out
jnp
pop
lcall
or
dec
mov
mov
fwait
cmp
fldt
pop
add
jmp
mov
jp
xchg
mov
jae
adc
ja
cmp
and
jp
test
outsb
sub
out
and
orb
fisttps
mov
and
pop
pushw
sub
and
sahf
lret
lcall
mov
jns
leave
push
pop
clc
jge
jae
pop
cmp
out
stos
mov
daa
sub
out
mov
bound
ja
pop
pusha
mov
dec
aaa
xor
mov
fimull
cmp
cmp
jnp
shrb
sbb
leave
pop
lods
adc
mov
mov
test
lret
jno
jnp
lcall
sub
xor
ss
sti
mov
insb
add
mov
clc
pop
pop
imull
dec
or
iret
dec
dec
jnp
call
xor
leave
into
aam
inc
aam
jnp
sti
stos
mov
jp
popa
jnp
pop
push
mov
cmp
icebp
dec
aaa
jnp
stc
cmc
jne
dec
dec
jnp
in
push
or
sub
mov
mov
lcall
jnp
mov
inc
mov
jbe
and
mov
sahf
or
cld
jno
cmpsb
add
aaa
cmp
imul
and
imul
cmp
mov
adc
dec
pop
sti
lods
push
dec
jnp
outsb
add
lret
sbbl
sbb
cmp
cmp
enter
decl
mov
and
mov
jg
icebp
sub
mov
stos
or
mov
in
sub
clc
lods
jmp
ds
testb
jnp
mov
mov
xorl
xor
dec
pop
cmp
jle
and
pop
mov
pop
jnp
mov
cmp
sub
popa
test
cmp
sub
inc
in
jnp
andl
cltd
pmaxsw
jnp
sahf
jno
cmpb
pop
mov
pushf
sub
jnp
negb
lea
mov
lods
jnp
mov
int3
stc
push
enter
jae
xor
pushf
lods
popf
dec
fstpl
jnp
jne
jbe
imul
jnp
push
ds
scas
daa
sub
roll
xchg
mov
jae
cwtl
in
jmp
add
fisttps
jnp
or
mov
mov
jnp
jbe
imull
fmul
pop
adc
mov
pop
repnz
repz
mov
and
jmp
jnp
xchg
pop
pop
insl
or
push
std
fiaddl
mov
bound
loope
je
jnp
pop
push
fsts
push
mov
inc
push
push
and
pushl
cmc
pop
pop
jnp
ret
lret
mov
jnp
lock
cmp
cmpsb
in
mov
fwait
xor
adc
int3
inc
jnp
outsl
ja
psrad
xchg
pushl
lahf
push
lods
imul
and
add
sub
in
scas
fisttpl
outsb
nop
xchg
imul
mov
jnp
cltd
xchg
xchg
mov
pop
xor
or
xchg
insl
les
cmpl
mov
outsb
or
push
dec
jnp
xchg
and
ret
lods
mov
inc
ja
outsb
xchg
insl
push
mov
sub
bound
cmp
outsl
jo
sub
pop
jnp
cltd
imul
fstpt
mov
mov
imul
sub
shrl
jns
bound
jnp
mov
ss
aad
jnp
das
pop
lahf
mov
lret
imul
inc
sub
scas
push
jecxz
sahf
jnp
cli
xor
mov
sbb
cmp
outsb
fmul
lods
sbb
jnp
cmp
mov
inc
outsl
or
inc
xlat
sub
add
sub
jnp
cmp
sub
mov
lret
clc
jnp
cli
pop
and
ss
ljmp
lret
jo
sbb
fisttpl
outsl
adc
jle
jnp
stos
mov
clc
push
inc
ljmp
adc
mov
mov
test
jnp
cmp
cwtl
into
jnp
pop
sub
stos
sbb
mov
push
lds
iret
jae
push
push
movsw
pop
cli
leave
aas
jnp
aam
insl
fisttpll
jbe
out
enter
imul
xor
cmc
js
scas
scas
gs
ja
xchg
xchg
lahf
lds
cwtl
mov
ds
into
aas
dec
data16
jp
cmc
call
js
mov
pop
cmp
jb
mov
sub
jnp
and
mov
pusha
lock
les
jne
out
js
ret
sbb
and
inc
je
mov
out
cmp
call
shl
mov
movaps
cmpsb
adc
xchg
cli
dec
mov
fwait
push
jae
pop
loop
or
jnp
dec
lcall
outsb
arpl
imul
cmp
adc
repnz
sub
sub
sbb
sahf
stos
int3
cmp
mov
outsl
repnz
lods
or
mov
mov
dec
data16
rcrl
push
push
insl
stos
xchg
scas
sahf
xchg
lock
mov
cmp
insl
mov
jne
pushf
cmp
call
fwait
mov
mov
dec
jnp
scas
push
ss
stc
cmp
pop
dec
mov
lcall
iret
jnp
inc
jle
popf
cmp
xor
mov
mov
dec
sub
aam
lock
sbb
adc
imul
inc
ret
repnz
dec
fldcw
jno
loopne
cmpsb
jnp
jne
int3
arpl
sub
dec
jae
fstpt
mov
push
mov
outsl
fcmovne
dec
mov
mov
mov
imulb
pop
clc
or
add
xor
leave
repnz
loope
bound
push
ljmp
jnp
cwtl
fwait
iret
cmc
or
inc
jnp
add
bound
out
dec
into
icebp
sub
mov
bndldx
dec
lret
lea
pushf
sub
adc
jmp
inc
lret
xchg
shlb
dec
push
jnp
in
shll
inc
iret
mov
mov
leave
mov
dec
sub
insl
cmp
aaa
jmp
cmc
cwtl
fimuls
jnp
je
das
stos
mov
loop
out
jge
adc
out
insl
sub
in
addr16
enter
dec
sbb
sahf
pop
repz
cmp
loopne
dec
iret
call
mov
xchg
cmp
int
sub
or
mov
jle
insl
mov
or
jnp
sbb
fmull
insl
sub
jnp
jp
sbb
jbe
jnp
scas
inc
cld
movl
jp
aaa
mov
pop
jbe
xor
sub
xchg
stos
in
mov
clc
jmp
bound
add
gs
stc
stos
jp
sub
add
cmp
psubd
cld
mov
cwtl
jnp
or
dec
fsubrs
lret
clc
cmp
int
call
jo
imul
sub
jnp
and
cmpsb
jnp
xchg
pop
cmpb
sbb
cld
push
aaa
or
mov
cmp
ja
mov
in
and
xchg
jnp
sti
nop
cwtl
sahf
push
inc
aam
push
daa
notl
outsl
cwtl
sti
jg
stos
in
and
xchg
lahf
jne
push
loop
mov
inc
cs
mov
sub
add
mov
aas
sbb
ret
data16
notb
into
dec
or
scas
mov
sub
mov
dec
out
xor
ds
call
adc
outsl
and
gs
mov
jne
or
add
mov
dec
xor
daa
aaa
cmpsl
lods
cmp
jo
cmp
mov
shrb
clc
frstor
sub
scas
jae
int
sbb
in
or
imul
repz
lret
and
mov
jnp
mov
xor
jnp
stos
lock
mov
call
stc
sbb
sbb
push
stos
sarl
dec
lret
xor
int
lods
lret
jns
aam
jbe
lcall
outsl
mov
push
es
loopne
inc
stos
push
in
xchg
push
sbb
sbb
push
mov
jg
sub
sub
ss
cmpl
mov
inc
mov
jo
jnp
leave
lret
lds
sub
movsb
dec
jnp
and
ds
decb
cmpsb
repnz
mov
pushf
lret
adc
out
insl
rorl
scas
mov
ds
dec
push
and
int
div
mov
push
sti
lods
stc
out
fsubrs
dec
lahf
and
and
dec
xorl
mov
mov
xchg
mov
xor
jnp
fs
nop
xchg
repz
cmp
sub
lds
das
jp
jnp
cmp
cmc
into
mov
jb
cwtl
data16
sbb
inc
jne
lods
cmp
dec
jnp
mov
sbb
push
push
out
in
ljmp
mov
and
mov
fmul
jae
adc
inc
lret
loopne
add
sub
jbe
cmp
nop
adc
in
call
xor
sub
push
jae,pn
popa
icebp
rcrl
jmp
ret
daa
jnp
xor
pop
push
add
jnp
jp
lods
add
in
clc
hlt
outsb
jnp
lods
loop
push
pop
out
dec
jnp
dec
out
mov
jle
xor
aaa
ret
pop
cltd
mov
xchg
adc
in
mov
das
fwait
jnp
push
daa
jp
les
jnp
push
mov
cmp
xchg
leave
sahf
or
pop
ficompl
mov
out
lret
xchg
mov
insb
add
mov
sub
lret
push
xor
add
jmp
jb
mov
push
insl
xor
leave
and
and
mov
stc
and
dec
jnp
pop
mov
outsl
or
push
jnp
sbb
inc
fisttps
sub
xchg
clc
sub
xacquire
repz
shlb
push
in
and
cmp
mov
sarb
repz
cmpsb
adc
ss
push
mov
cmp
xor
dec
xchg
imul
sub
or
cmp
mov
stos
or
sbb
mov
clc
cmp
repnz
dec
stos
xor
fiadds
jnp
outsb
mov
add
insl
cmpsl
outsl
xor
ret
and
lods
jnp
cs
pushf
push
fs
insl
and
or
mov
inc
aam
icebp
or
cmp
jnp
mov
jnp
insb
push
inc
mov
pop
pop
lahf
fxch
push
in
jne
inc
arpl
inc
xor
leave
jnp,pn
cmp
sub
jnp
es
mov
jnp
fistl
sarb
xor
gs
jne
or
stos
pop
xor
lret
push
pop
out
jp
sub
repnz
jnp
sub
mov
jnp
stos
sub
jnp,pn
test
or
jnp
es
and
loope
fnstcw
in
into
ss
jnp
xor
bound
nop
pop
dec
adc
ret
inc
addr16
jp
pop
mov
xchg
and
arpl
mov
or
js
jecxz
jnp
jp
dec
loop
rcrb
push
outsl
insl
adc
lods
in
pop
jnp
sbb
and
push
xchg
cmp
sbb
daa
imul
and
in
cs
repnz
popa
xor
lea
lret
dec
pop
jne
dec
cmp
lret
dec
out
add
scas
jnp
push
mov
fs
sub
ss
fisubrl
cmpb
sbb
push
mulb
jnp
stc
sbb
cmp
lcall
dec
jnp
push
jmp
into
jnp
lods
add
inc
scas
mov
pop
mov
rolb
idiv
ljmp
dec
sub
shrl
imul
stos
xchg
xlat
fisubrs
stos
hlt
jno
mov
addr16
out
idivl
fwait
mov
test
not
jnp
imul
dec
je
and
dec
jnp
xor
xchg
mov
outsb
lret
ret
or
cmp
push
lods
stos
sub
cmp
loop
das
sbb
cmpsb
mov
pushf
lcall
mov
jmp
outsl
into
jnp
orl
or
stc
aad
xor
ret
mov
stos
fistpll
xchg
neg
push
add
jmp
in
jmp
cltd
sbb
or
xorb
into
das
cmp
fwait
inc
dec
push
ja
mov
inc
ljmp
sub
stc
imul
sbb
aad
pop
add
xchg
xor
dec
dec
pushf
shll
insl
and
pop
sti
in
arpl
ja
or
cmp
adc
lea
lret
aas
jp
in
inc
xchg
cli
sti
jge
das
mov
push
sbb
jne
cld
jnp
out
or
sub
cli
dec
jnp
xchg
mov
shrd
adc
jb
jnp
mov
mov
les
push
sbb
cli
mov
test
nop
rclb
jnp
jb
dec
pop
xchg
push
jne
sbb
cs
int
jnp
and
imul
mov
mov
les
insl
add
push
dec
pop
mov
flds
mov
dec
lds
jns
cmp
ss
and
xchg
data16
dec
jne
ljmp
mov
xchg
ja
icebp
cwtl
sbb
pusha
cmp
ja
dec
out
lret
pop
add
outsb
xchg
inc
repnz
in
sbb
lods
adc
or
sbb
jnp
sub
aad
mov
aaa
pop
fsubrp
ss
push
cmc
mov
push
into
cmp
pop
adc
jge
xlat
xchg
mov
loopne
je
fcmovb
pop
mov
movsl
cmp
sbb
xor
in
mov
push
pop
xor
hlt
sub
std
cmp
sub
jnp
ljmp
testl
bound
jo
aaa
xor
into
jae
hlt
popf
dec
in
and
sbb
xchg
lods
inc
jae
inc
or
roll
addr16
fcmovnu
jnp
xchg
mov
push
cmp
add
fcomi
jnp
dec
sahf
mov
imul
adc
mov
loopne
jnp
addr16
push
jnp
sbb
sub
cmp
add
sbb
cs
pop
lea
sbb
jno
mov
js
dec
adc
orps
out
pop
data16
out
insb
fstpt
pop
dec
sbb
mov
sti
orl
outsl
addr16
out
inc
lret
dec
fisttpl
dec
adc
in
popf
in
out
cmp
ja
and
mov
jmp
fidivrs
pop
in
in
xchg
mov
je
cmp
jnp
dec
or
daa
lods
and
sbb
and
mov
fwait
jae
sti
adc
and
mov
jnp
nop
cwtl
fsubr
xchg
mov
cmp
jae
push
imul
add
popf
jnp
ljmp
stos
lret
sahf
xchg
sti
sbb
sbb
pop
or
jb
fstpl
mov
daa
testl
insb
jnp
push
dec
imul
jg
bound
jnp
pop
xlat
lods
dec
mov
pop
cmpsl
into
cmp
arpl
xchg
jnp
mov
cmp
pop
mov
mov
js
dec
testl
lret
cli
jmp
xor
sbb
fidivrs
jnp
adc
stc
jbe
pusha
lret
sti
or
int
push
and
fisttpl
fsubs
mov
xchg
mov
cmp
sub
ret
jnp
clc
fnstcw
stos
mov
pop
lods
outsl
sbb
mov
sub
pushf
in
popf
jl
push
loop
rcrb
lds
cmp
inc
test
sti
xor
xchg
or
data16
cmc
fstl
gs
or
call
imul
jmp
push
mov
ret
dec
cmp
pop
jnp
or
push
mov
dec
xchg
jae
dec
cmp
xchg
sbb
xlat
jnp
cmp
xor
loopne
mov
cmpsb
sbb
lret
into
call
mov
mov
cmpsb
push
and
pop
mov
cwtl
fcmove
enter
xchg
test
jle
insb
in
cmpsb
push
sub
add
int
ret
mov
sbb
movsb
bound
jnp
pop
xchg
pop
ficompl
jle
sub
jae
rcl
out
stos
decl
in
or
aas
xor
lahf
lcall
sbb
inc
imul
mov
jbe
sbb
test
mov
or
pop
sbb
push
scas
in
adc
push
xchg
dec
jp
mov
mov
fucomp
cwtl
es
ss
ret
mov
icebp
pop
aaa
lds
fmull
or
add
mov
mov
cmp
je
int3
dec
sbb
sub
jmp
nop
jmp
or
into
sarl
data16
inc
fwait
jnp
mov
fnstenv
xlat
adc
mov
xchg
addr16
sbb
lcall
inc
ljmp
or
add
xor
fiaddl
in
jp
mov
mov
sub
daa
or
das
es
scas
jle
jnp
scas
xchg
xor
inc
mov
or
adc
rcrl
enter
mov
fdivl
dec
xlat
mov
and
fadds
dec
stos
or
mov
sub
in
nop
sbb
arpl
jnp
push
decb
adc
mov
cmp
movb
jb
out
stos
lret
jno
cmp
loopne
idivb
cld
pop
jbe
stc
and
fcomps
enter
cltd
or
nop
das
notb
loop
or
aam
clc
mov
mov
jnp
inc
pushf
cmp
stos
data16
leave
lea
lcall
test
jnp
mov
xchg
dec
xchg
lret
jnp
cld
loopne
cmp
jnp
ljmp
jnp
mov
mov
cwtl
fdivrs
loop
jne
or
xchg
dec
fisttps
or
and
mov
mov
fcomi
xlat
jnp
xchg
add
test
dec
cwtl
jnp
dec
push
or
or
jnp
push
mov
lret
jnp
jno
pop
jb
aas
es
dec
fdivs
inc
jns
aad
xor
pop
pop
add
lea
scas
bound
or
mov
pusha
lock
es
mov
jmp
xor
pop
neg
dec
jnp
sarl
lea
out
or
xor
sbb
sub
popa
jbe
dec
push
clc
int3
jo
cwtl
in
adc
lock
mov
movsl
lods
dec
das
lahf
sbb
cmp
xchg
mov
jnp
decb
aaa
jnp
daa
and
movsb
jo
lret
scas
inc
ds
jae
mov
mov
cmp
inc
pop
pop
cld
jne
adc
push
stos
jp
jae
jnp
pop
pop
cmp
sub
add
outsb
leave
pushf
mov
cs
cmp
in
mov
sti
xchg
ret
ficomps
ficoml
and
sbb
pop
bnd
shrl
jnp
pop
fcmovnb
push
ljmp
cmp
imul
mov
lods
test
cmp
daa
or
jmp
fdivp
ljmp
xchg
cli
leave
jnp
das
mov
sub
adcb
mov
daa
loope
bnd
mov
inc
xchg
inc
ss
ds
pushf
mov
and
je
popf
or
test
xchg
mov
and
test
xor
push
sub
nop
testl
pop
xchg
fiadds
lcall
and
jnp
xchg
cmp
and
jnp
pop
rolb
push
xor
scas
or
push
insb
sbb
dec
mov
mov
push
mov
stos
stc
ret
mov
add
pop
in
jne
push
mov
cltd
bound
cmc
imul
mov
xchg
push
jnp
jg
lret
shl
xchg
aaa
mov
out
jae
mov
jnp
test
jnp
mov
test
or
dec
lcall
xor
hlt
aas
jb
jnp
push
mov
ja
loope
outsl
movsl
jae
cli
cmpsb
and
sbb
pop
int3
jge
pop
cmp
leave
mov
aam
lods
jnp
add
pop
ja
stos
cltd
sbb
push
jae
jnp
pop
mov
out
sbb
sbb
in
xor
das
rol
mov
aas
jnp
cli
out
aam
loope
jnp
dec
sub
adc
push
push
enter
sub
xchg
jnp
test
and
push
insl
fadd
std
arpl
inc
jp
in
outsl
imul
push
or
cli
jnp
les
jp
sti
dec
lret
imul
int
pop
push
jl
jne
and
scas
cmpsl
std
add
ja
mov
cmp
stc
mov
xchg
sbb
hlt
pop
dec
testb
pop
mov
insl
stos
lahf
inc
jnp
xor
add
xchg
xor
fnsave
dec
dec
push
cmp
sti
insl
and
popf
mov
mov
notl
cmp
mov
sbb
les
std
xor
add
lds
inc
adc
cmpl
inc
jnp
jmp
les
or
cmpb
bound
adc
dec
testb
imul
cmpsl
or
xchg
bound
cmp
push
jb
inc
cli
pop
lods
daa
sarl
stc
ret
cmp
mov
push
test
outsl
sub
mov
jns
mov
jnp
test
dec
add
hlt
cmc
pop
pop
ss
sbb
mov
mov
ss
sub
divl
fadds
cmpsb
ss
xchg
jmp
cmp
ds
sub
jae
cmpsb
jle
aaa
js
jnp
mov
lods
sub
mov
orb
arpl
sbb
enter
cmp
adc
mov
lock
clc
aam
inc
int3
pop
mov
out
out
jo
imull
inc
imulb
fiadds
sub
push
scas
mov
jns
lock
sbb
mov
lods
stos
repz
or
sbb
mov
rcl
cmp
pop
ret
sub
call
cmp
test
je
data16
cld
cmpsl
jnp
cli
out
dec
mov
xor
xor
in
xchg
sub
inc
jnp
add
xor
or
ja
xlat
cmp
ljmp
mov
mul
sti
ds
sarl
xor
clc
stos
xchg
mov
mov
aas
xor
dec
pop
jnp
ret
cmp
imul
xor
scas
xchg
mov
stc
sub
jnp
pusha
sub
test
into
jnp
mov
movsb
mov
xor
push
xor
out
pop
jnp
sti
fistps
jnp
mov
pop
jnp
bound
jne
out
lret
push
mov
cmp
pop
cmc
cld
jecxz
int3
imul
or
pop
jns
jle
scas
push
jnp
mov
push
dec
adc
mov
pop
call
and
mov
aaa
cmp
push
leave
mov
jnp
mov
lret
hlt
and
sub
adcl
mov
icebp
mov
lcall
push
je
nop
lods
xor
cmp
pop
daa
lret
mov
fwait
lcall
cmp
cmp
repnz
sbb
lahf
xor
adc
jnp
xor
cmp
das
pop
jnp
jmp
mov
cmp
lea
mov
jmp
pop
das
mov
push
cmp
test
sarl
xor
mov
stos
arpl
pop
lods
dec
sub
fucomp
jae
ss
cmp
dec
mov
roll
mov
and
lods
sbb
jae
cmp
sub
scas
adc
mov
xchg
je
mov
fwait
jnp
mov
push
fisubrl
sarb
jl
shlb
pop
jne
xor
sbb
scas
dec
add
cli
clc
jnp
cs
fisttpl
adc
pop
jnp
xchg
in
test
hlt
outsb
sub
xlat
sub
cs
and
imul
push
or
mov
jnp
mov
out
jnp
pop
push
or
lods
mov
mov
inc
outsl
lcall
hlt
test
daa
lods
jae
in
testb
aaa
scas
pusha
fdivrs
cmp
push
or
imul
mov
jnp
iret
ret
fwait
repz
movsb
xlat
jns
dec
insl
xchg
sbb
scas
sbb
push
loop
je
mov
lcall
aaa
fmuls
in
xchg
pop
mov
sarb
or
pop
mov
cmp
and
sbb
cltd
jnp
hlt
out
sub
lcall
and
mov
mov
sbb
neg
shrb
push
ja
cltd
mov
das
in
inc
jnp
addr16
push
xor
ss
lods
mov
xchg
es
aas
bound
jnp
xor
sub
or
mov
jne
lods
xchg
or
add
xor
and
dec
mov
scas
arpl
mov
cmp
mov
std
in
out
jae
ljmp
push
sub
mov
jnp
cli
or
mov
les
sbb
cmpsb
int3
mov
ss
insb
stos
dec
cli
sbb
dec
lods
jae
std
shr
push
sbb
xor
mov
xchg
xchg
jb
jnp
popa
jecxz
cs
push
cmp
repnz
mov
cli
cmc
test
dec
pop
dec
dec
jg
or
hlt
jno
mov
fwait
dec
jne
dec
int3
mov
fmull
or
rep
cli
mov
jnp
loopne
sub
mov
cwtl
or
ret
pop
shll
push
into
fisubrs
and
dec
cli
sub
sub
testl
xlat
xor
cmp
test
sub
push
jae
pop
xchg
stc
pushf
jnp
ljmp
sub
mov
gs
pop
leave
jnp
rclb
test
outsb
into
xchg
or
xchg
daa
and
int
lock
jnp
pushf
cs
adc
or
xchg
jae
pop
push
dec
lret
popa
addr16
loope
pushf
dec
jne
mov
jnp
rcrl
push
push
in
sub
dec
mov
fbstp
mov
mov
lods
mov
mov
outsl
dec
jbe
mov
fs
cmpsl
hlt
sub
jecxz
xchg
mulb
xor
nop
stos
pop
lret
lret
iret
xchg
loope
adc
pushf
in
xor
mov
adc
cmp
xchg
les
and
aaa
mov
popa
push
fptan
sbb
and
jae
sahf
lods
pop
push
jnp
scas
xor
cli
arpl
xor
outsb
pop
mov
test
enter
sbb
aas
xchg
bound
mov
stos
fnstenv
mov
dec
cmp
jge
outsb
push
aaa
lahf
fdiv
jnp
dec
mov
cmp
jnp
das
enter
shrl
xchg
xchg
or
xor
pushf
jbe
pop
leave
sahf
jmp
imul
inc
xlat
sub
repnz
pop
pop
mov
mov
idivb
clc
mov
push
arpl
fsubrs
ss
mov
leave
push
nop
mov
divl
js
fldcw
xor
lea
jno
xor
dec
outsl
call
lret
mov
in
dec
and
out
adc
addr16
push
xchg
enter
jnp
jge
iret
repz
jnp
jl
lret
sub
xor
adc
adc
scas
push
sbb
jne
mov
in
adc
jnp
movl
ret
cs
jo
fisubrl
push
clc
add
push
jae
aaa
sti
fisubl
jnp
negl
repnz
sbb
xchg
xorb
in
mov
out
mov
or
cmpsb
scas
and
jb
jmp
fs
lret
inc
test
dec
fstps
test
sub
mov
mov
in
and
icebp
dec
out
sti
mov
jnp
mov
mov
loopne
xor
lods
push
repz
mov
cmp
xor
movsl
dec
cmp
lret
xchg
out
dec
jae
xlat
xor
jo
jnp
dec
mov
daa
or
pushf
jge
mov
dec
cmc
and
jnp
mov
insl
xor
adc
stc
testb
jae
mov
cmpb
into
das
lret
jecxz
mov
dec
cmp
sub
outsl
ljmp
add
xorb
mov
jae
xor
ret
fwait
jnp
jmp
call
flds
sbb
cltd
jp
jp
pop
sub
imul
fnstcw
clc
stc
adc
fcomps
into
scas
mov
dec
sbb
stc
and
mov
jmp
jnp
fistpl
cmc
cmp
fdivl
ds
sub
xchg
jae
push
sub
lea
sub
jecxz
sub
jnp
push
out
xchg
lahf
ds
mov
sub
insb
int3
enter
sub
sbb
mov
cld
shlb
call
xlat
shr
addb
repz
sbb
jb
insl
mov
cwtl
scas
aad
hlt
in
jnp
add
je
dec
xor
cld
scas
mov
adc
outsl
scas
jne
loop
sub
pop
sbb
insl
ja
cmpsl
and
mov
add
cmp
mov
out
nop
jnp
push
sbb
xor
jns
or
xchg
xchg
jnp
loop
or
cltd
push
jnp
int3
sbbl
les
in
push
push
dec
enter
jno
xchg
loopne
lods
dec
scas
sub
insl
lods
sbb
push
call
in
inc
cmpsb
outsl
xlat
jnp
or
lds
ljmp
daa
inc
xorl
fwait
lods
add
stos
mov
or
jg
jae
popa
jnp
out
sbb
xor
jnp
mov
cmpsl
mov
je
adc
sub
fcomps
notb
adc
adc
fistpl
cli
test
and
jnp
out
push
mov
cli
jnp
stos
xchg
fld
jne
push
xchg
add
je
and
das
lods
ljmp
xor
shrl
outsl
loope
fstpt
mov
mov
jl
mov
stos
xor
js
test
lods
lret
sbb
mov
mov
stos
or
inc
jae
jnp
outsb
sbb
mov
xchg
clc
dec
adc
idivb
push
jnp
and
pop
inc
icebp
clc
mov
jecxz
jnp
into
jmp
jp
xchg
jnp
sar
and
lret
jns
in
out
mov
inc
scas
and
imul
cmc
cmp
ja
out
mov
or
add
jecxz
enter
mov
sub
sbb
add
lods
loopne
ja
mov
outsl
lret
add
sahf
jnp
mov
xchg
cmpsl
xor
cvtps2pi
jae
ret
jnp
dec
add
add
fwait
xorl
adc
mov
xchg
lock
mov
pop
push
push
jnp
xor
mov
cli
gs
lods
mov
stos
xor
mov
lahf
cmp
jnp
sub
aad
fdivs
xor
cltd
imul
sub
stos
lock
and
sbb
call
jnp
lods
inc
es
jle
lcall
je
fisttpll
lods
es
hlt
adc
mov
adc
test
cli
lods
insl
or
dec
hlt
ja
push
pop
pop
mov
subl
cmp
push
and
jns
stos
insl
mov
sub
xor
ljmp
jnp
add
push
xor
es
push
mov
lods
ret
loop
lret
sub
push
insb
jmp
test
xorl
enter
add
mov
push
stos
lds
cwtl
inc
cmp
sti
dec
sarl
std
and
daa
cmp
notb
or
jp
jmp
cmp
pop
cmp
repnz
ss
dec
add
outsl
movl
mov
mov
jg
jge
push
jp
ficoms
dec
and
movsb
outsl
pop
dec
mov
iret
or
mov
sub
enter
outsb
xor
jnp
rorb
scas
aam
inc
cmp
popf
jnp
xchg
sub
icebp
je
jnp
pusha
cmp
dec
fs
popa
push
mov
jnp
mov
arpl
cs
mov
sub
xlat
outsb
mov
mov
jbe
js
lods
jnp
xchg
or
repnz
mov
int
mov
repz
sub
xchg
sahf
clc
xor
and
cmc
sbb
sbb
jne
jle
stos
mov
scas
orb
xor
imul
xor
lcall
mov
mov
popa
jnp
pushf
pop
aaa
add
outsl
lods
cmpsb
arpl
adc
jmp
idivb
jae
inc
mov
jnp
adc
repnz
pushf
js
sti
cmp
lret
push
jo
shlb
mov
nop
jmp
sbb
jle
ljmp
mov
enter
jnp
insl
notb
sbb
stos
mov
outsb
push
lret
imul
ds
out
push
icebp
out
inc
loope
add
jnp
das
decb
mov
ja
lods
mov
or
ljmp
jnp
xor
sbb
bound
pop
into
mov
pusha
sbb
or
int3
jbe
jo
popfw
mov
jae
inc
cmp
pop
xor
cli
lods
aas
add
cmp
inc
ret
jmp
mov
pop
jnp
dec
fistpl
and
dec
movsb
insl
and
or
or
in
and
jnp
clc
call
xor
sti
adc
jnp
mov
aaa
ja
stos
dec
cltd
xchg
xchg
jg
call
adc
mov
cs
cmp
add
fdivrl
lcall
fdivr
fldt
insb
push
cmp
pop
fdivl
or
add
or
add
add
or
pop
mov
jecxz
stos
push
fwait
insb
jnp
push
lds
mov
je
mov
jge
loopne
push
mov
scas
sub
adc
pop
in
movsl
jnp
mov
insb
mov
out
pop
flds
dec
xchg
mov
cmpsb
ret
daa
insl
push
mov
aaa
push
jbe
jp
loopne
insb
mov
popa
pop
jnp
mov
mov
push
pop
cmp
jnp
ds
xor
jp
enter
lods
push
cli
xor
mov
xchg
or
insb
ja
movsl
inc
cli
sbb
cmpsb
lahf
jnp
loopne
inc
mov
lea
lret
das
out
jmp
jnp
push
lahf
shlb
ds
test
cld
jbe
sub
adc
enter
jnp
loope
iret
clc
movsb
or
jnp
mov
mov
loop
jnp
lods
stos
xor
test
jmp
cmp
xchg
xor
das
fidivs
cld
sbb
in
xor
insb
cli
dec
sub
fs
call
jo
pop
mov
cli
aad
dec
test
pop
inc
aas
fcmovb
lock
jno
enter
outsl
out
mov
mov
xchg
jmp
arpl
es
push
lods
sti
addb
mov
lods
xchg
mov
lret
std
mov
mov
dec
call
pop
pop
jnp
out
pop
cs
lock
dec
fdivr
cmp
mov
and
inc
imul
aaa
das
dec
cltd
pop
lods
orl
pop
cmc
sbb
lea
in
js
mov
sub
int
bnd
pop
std
mov
call
imul
mov
outsb
sub
das
and
add
jg
xchg
xchg
out
imul
mov
cs
sub
imul
inc
sub
and
push
shl
push
pop
cmp
xlat
int3
push
xchg
dec
mov
iret
test
push
pop
jnp
inc
mov
xchg
or
iret
mov
pushf
mov
movsb
fdivrs
jo
sub
in
fists
sub
jnp
inc
mov
lahf
pop
jge
jae
mov
popf
fstpl
fstpt
fnstcw
xchg
inc
cmp
mov
lret
mov
aam
lods
dec
bound
out
shlb
or
imul
add
or
lret
inc
into
gs
sbb
mov
sbb
jnp
mov
repnz
test
mov
fadds
cmp
dec
and
lcall
mov
outsl
std
sub
lock
scas
pop
jnp
ja
push
fnstenv
jnp
jl
push
out
mov
sub
xor
dec
xchg
xorl
xor
and
fcmovbe
jnp
dec
ljmp
sub
mov
jecxz
mov
into
mov
mov
loop
xor
ror
insl
pop
and
fldt
cmc
ret
cmp
mov
fistpl
in
pop
and
insl
sbb
push
filds
lods
xchg
lds
imul
in
int
xchg
cwtl
gs
repnz
ret
dec
mov
jnp
scas
jp
sti
xor
stos
and
not
into
jae
idivl
xor
mull
or
xlat
lcall
in
das
sarl
cmp
stc
lods
imul
mov
daa
push
and
jnp
jge
dec
inc
xchg
jnp
clc
push
lret
add
loopne
lods
cmp
sub
jnp
mov
pop
xor
add
das
fstp
stc
pop
mov
jnp
fstpt
or
jbe
cld
jnp
jg
scas
outsl
inc
push
aaa
jnp
fcmovnb
js
test
addr16
inc
out
sbb
ds
jne
mov
adc
mov
fnstcw
aad
or
jae
ljmp
cmp
lcall
fidivrl
insl
sub
stos
adc
in
or
push
sbb
mov
xchg
fucomi
and
add
sub
sti
ljmp
pop
jo
mov
sbb
push
jnp
fildl
mov
das
jnp,pn
cmp
fidivrl
insl
xor
test
push
sub
mov
sub
gs
loopne
sub
push
push
pop
mov
mov
fstl
js
scas
imul
push
jne
stos
sbb
xor
adc
rorb
stos
push
js
push
das
mov
into
enter
addr16
jnp
dec
mov
imul
repz
ret
push
lret
jnp
mov
mov
dec
cmp
gs
imulb
xor
sti
lds
scas
pop
inc
jnp
daa
sub
imul
mov
lods
mov
dec
jl
popf
pop
dec
fisttpl
xchg
out
popa
rolb
mov
adc
jnp
adc
cmp
fcoms
jnp
dec
jb
lahf
insl
testb
in
or
lods
jnp
pop
jp
sbb
outsl
mov
addb
jnp
pop
xchg
dec
jnp
mov
shrb
cmpsb
mov
test
pop
or
repnz
jl
jnp
aam
mov
sub
sbb
xor
push
mov
cmc
aaa
je
or
jnp
and
lods
idivb
enter
mov
jp
dec
jnp
mov
jnp
imul
call
jns
mov
dec
pop
add
icebp
adcb
aas
mov
imul
cmp
outsl
out
les
outsl
and
push
es
pop
in
arpl
mov
mov
jno
xchg
inc
pop
cmp
adc
mov
xor
lock
pop
jle
cmp
mov
jnp
or
addl
stc
sti
add
je
pop
cmc
jns
adc
mov
add
stos
divb
mov
mov
repnz
jae
jnp
cmpsl
mov
inc
and
insb
shrb
out
dec
adc
sub
pushf
in
repnz
ljmp
cli
push
pop
call
and
jecxz
cmp
or
sbb
js
dec
mov
and
lret
sti
lock
mov
popf
movsl
mov
in
inc
and
out
sbb
pop
mov
add
sbb
incl
xchg
aam
and
add
mov
pop
add
sub
cmp
mov
bound
subl
popf
jnp
loopne
mov
stc
pop
sahf
jnp
mov
sarb
pop
sbb
daa
jmp
jg
push
je
xchg
pop
mov
scas
pop
xchg
jnp
imul
lret
or
cmp
movsl
jae
loopne
or
inc
cmpsb
into
negl
ret
dec
jnp
fld1
mov
mov
sub
int
inc
rolb
sbb
lods
roll
jnp
movsb
pop
jns
jg
jb
out
jnp
into
dec
adc
fimull
inc
jnp
daa
repnz
sub
jo
sub
scas
push
cmp
sbb
int3
mov
jg
je
xor
ret
mov
push
lldt
xchg
loopne
cs
pop
lods
jnp
inc
mov
ret
sub
imul
sbb
or
xchg
xor
jb
push
stos
jnp
mov
repnz
mov
jnp
dec
mov
cmp
fldcw
outsl
xor
cmp
add
inc
xchg
jne
int
mov
jae
in
sbb
jno
xorl
shlb
inc
lods
jp
out
call
pop
js
jno
sub
pop
ret
jnp
mov
je
jnp
mov
push
lea
mov
sub
jnp
ret
or
aam
jns
fimuls
jnp
cmpsl
sarb
jnp
jb
int3
loope
inc
int
nop
std
aad
mov
push
mov
mov
sarb
or
dec
cmp
or
cmpsb
js
lock
inc
fst
jnp
jp
cld
sbb
pusha
adc
insb
sub
bnd
inc
jae
mov
mov
pop
mov
jnp
adc
stos
cmc
cmpl
and
lahf
xor
imul
ss
dec
inc
popf
rcrb
das
xor
jnp
push
jne
sbb
std
mov
dec
adc
popa
sub
pop
in
ds
pop
mov
hlt
cmp
xchg
xor
jnp
jmp
ret
cmp
jnp
and
test
jns
mov
jnp
flds
mov
aam
jbe
lcall
cmp
les
int3
mov
add
out
and
je
sbb
out
out
jnp
test
stos
mov
jae
testb
inc
jns
fildll
jmp
sub
cmc
lret
test
add
xchg
inc
xor
sbb
mov
mov
xchg
in
dec
sbb
jmp
mov
divb
jns
das
pop
mov
outsb
push
mov
xor
rcl
sbb
stos
xor
cmp
xor
jns
or
cmc
sub
movl
adc
cmp
stos
inc
jnp
mov
lahf
pop
imul
add
xor
jnp
xor
or
das
and
jl
cmp
jnp
inc
ds
test
rorb
sbb
push
jnp
inc
insb
jl
clc
mov
sbb
insl
jg
cmp
stos
xor
xchg
movsb
mov
orb
cwtl
mov
aam
std
jnp
push
mov
js
inc
je
subb
mov
lock
mov
int3
jmp
or
push
xlat
pop
push
lret
adc
in
stos
div
enter
sarb
out
or
sti
adc
mov
stc
bound
xor
sbb
repnz
sbb
and
dec
adc
icebp
xchg
scas
pop
jnp
repnz
iret
jno
xchg
jnp
mov
mov
fs
sub
out
aam
sub
mov
imul
fstps
adc
not
into
push
pop
add
jp
sti
inc
test
test
ficoml
fdivs
fcom
stc
mov
popf
sbb
pop
mov
pop
dec
xchg
pushf
inc
out
int
push
jns
add
repz
sub
xchg
mov
insb
jbe
rcl
mov
movsl
xor
mov
sub
sub
mov
insl
pusha
pop
mov
sub
dec
jbe
aaa
jo
jnp
xchg
cmp
push
sar
sbb
out
lret
pop
mov
push
jb
ror
jnp
roll
pop
insb
mov
xchg
daa
dec
xchg
cmpsb
lret
mov
push
and
fimull
mov
mov
lods
loope
out
insb
xchg
cmp
add
jnp
ds
addr16
dec
dec
daa
jnp
mov
pusha
lods
out
pop
xchg
lret
jge
cmc
xchg
add
jmp
adcb
sub
sbb
or
mov
mov
adc
jnp
xchg
cs
mov
insl
jnp
cmp
adc
jnp
mov
xchg
ss
fcoms
ljmp
inc
mov
call
ret
sbb
jp
andb
insb
pop
mov
faddl
xchg
xchg
mov
xlat
push
push
add
xchg
lock
mov
cmp
or
mov
pop
idivl
xchg
insb
cmp
sub
sbb
test
out
das
setle
xchg
cmp
mov
sub
inc
aaa
shl
mov
pop
sarb
lret
adc
sarb
fsts
xchg
lods
sub
and
and
imul
mov
jbe
cmp
sub
dec
pop
aaa
mov
shll
gs
inc
jp
and
in
loopne
xbegin
sbb
sbb
aas
push
pop
cmp
insl
sbb
gs
inc
sub
out
jbe
scas
imul
aad
pop
cmp
das
cltd
aaa
mul
popf
push
lock
pop
enter
shll
jne
pusha
mov
pop
jo
adc
jmp
mov
inc
lahf
jp
xorb
test
push
pop
stos
outsl
idivb
and
mov
push
jae
jge
ljmp
xor
mov
fidivl
mov
sub
jp
or
sub
sbb
scas
lcall
jg
lea
jp
adc
adc
js
lds
imul
pop
fucomp
or
cmp
jnp
and
loope
or
push
call
push
xorb
mov
push
or
clc
lods
imul
repnz
pop
sbb
mov
add
ja
mov
fdivr
lods
jnp
cli
enter
add
lods
mov
push
gs
dec
imul
xorb
out
jnp
fbld
xorl
push
jnp
ret
sub
push
jnp
xor
lods
into
out
aam
mov
jbe
and
dec
pop
lock
or
sbb
mov
mov
mov
inc
imull
test
test
mov
mov
xlat
cmp
push
cmp
xor
and
arpl
xchg
cmp
test
mov
hlt
cmpsb
mov
mov
push
outsb
je
sahf
fwait
mov
mov
inc
outsb
neg
xor
jb
ja
xor
add
cmp
jnp
fcoms
insb
jnp
cmp
fwait
pushf
mov
inc
aam
popf
jne
outsl
lea
jnp
jne
xor
ret
push
ss
add
pop
inc
xchg
aaa
aaa
div
jbe
cmp
inc
mov
or
pop
enter
cmp
and
movsb
mov
mov
je
loop
fwait
or
pop
mov
jne
hlt
mov
cmc
xchg
push
jle
mov
stos
js
rcr
jns
out
jae
sti
or
out
jnp
shll
out
pop
loop
add
sbb
in
jno
xlat
mov
jns
jae
xor
addr16
mov
jo
int
mov
stos
xor
and
stos
pop
aam
mov
push
or
jnp
clc
inc
mov
and
pusha
negb
fbld
sub
cli
call
lods
and
aam
pop
dec
rorb
or
jle
jnp
jp
daa
cmc
mov
inc
or
int
jnp
pop
jns
rclb
into
jp
ljmp
fmuls
bnd
enter
cmpsl
pop
jnp
add
pop
les
sti
lods
hlt
out
lret
dec
fadds
xchg
add
insl
imul
in
jns
stc
dec
jne,pn
adc
add
adc
jb
jmp
xchg
fdivr
jae
push
xor
jne
inc
lret
call
bnd
xchg
fwait
jmp
mov
cmp
sub
js
hlt
sub
or
sub
xor
stos
mov
push
jp
push
cmp
jbe
rclb
test
gs
lods
repnz
testl
mov
sub
icebp
lret
pop
cmp
jnp
cmp
add
xor
xor
bnd
dec
jne
sbb
xor
adc
insl
dec
xchg
or
test
jno
cmp
mov
xchg
pop
pop
xorl
mov
pop
xchg
jae
mov
cmp
out
cmp
std
sti
sub
fidivrl
adc
stc
cli
das
xchg
jno
outsl
xchg
mov
cmp
xor
mov
lahf
inc
add
into
mov
or
pop
lods
enter
cmp
shll
jno
mov
sub
pop
idivb
rclb
or
push
inc
outsl
sbb
jp
bound
jnp
or
mov
jns
out
fisttps
dec
shll
sbb
imul
add
lret
sbb
outsl
xchg
enter
mov
mov
adc
jae
punpckldq
dec
dec
in
sub
mov
std
mov
scas
jo
jb
int3
dec
jnp
into
xor
stos
mov
jnp
cmp
nop
gs
hlt
or
pop
stc
ja
mov
fistl
xor
fidivrl
cmp
jge
lock
mov
icebp
in
pushf
es
mov
jnp
addl
das
out
jae
inc
fmuls
subl
fcmovnu
pop
lret
imul
fisubl
cmp
popa
push
leave
sbb
icebp
jnp
iret
mov
fsub
xor
xchg
das
shll
shr
or
loopne
test
mov
xchg
and
and
pop
sub
enter
out
scas
adc
test
jae
sbb
jmp
jnp
in
out
mov
cmp
imul
lcall
dec
sub
adc
test
sbb
push
scas
jnp
add
pusha
cli
inc
mov
test
xchg
movsl
push
or
push
or
xorl
ss
pop
jnp
jmp
nop
les
push
jns
jnp
and
lods
mov
mov
adc
iret
lock
flds
in
xor
roll
jnp
shl
dec
out
icebp
insb
outsb
jnp
data16
scas
sub
ret
sbb
cmc
inc
mov
outsl
test
data16
loop
jb
jo
sbb
add
adc
jnp
lret
jne
sub
hlt
jnp
dec
fisubs
jnp
repz
pop
mov
mov
cmp
dec
or
or
jp
push
test
push
in
mov
cmp
pop
jns
cmp
cmc
jnp
push
jecxz
outsl
push
jnp
popa
and
push
imul
lahf
sahf
int
lods
insb
push
stos
jnp
dec
mov
icebp
hlt
outsl
scas
push
scas
cmp
das
pop
push
aas
iret
push
mov
jb
orb
jnp
outsb
rolb
ret
mov
ja
or
rcll
jnp
and
add
xor
imulb
jnp
xchg
lret
jnp
sub
bound
push
mov
xor
and
fistps
jnp
push
das
test
mov
mul
add
lret
lret
mov
pushf
jae
lret
sbb
gs
ja
add
inc
lods
jp
mov
adcb
test
and
sbb
xchg
hlt
inc
mov
xor
insb
dec
mov
and
jmp
pop
jnp
shlb
neg
and
inc
mov
sbb
aaa
enter
test
lds
iret
cli
mov
push
outsl
fdivs
mov
jbe
lret
dec
mov
mov
outsl
insb
sub
cmc
int3
push
jnp
pop
out
arpl
jge
sbb
loop
scas
fsubl
pushf
push
idivl
divb
pop
clc
out
lock
dec
mov
subb
js
divl
rcll
test
mov
cli
sub
adc
mov
repnz
jnp
push
aam
stos
xor
mov
je
jo
mov
addr16
jbe
orb
dec
xchg
stos
mov
divl
cmc
sbb
push
mov
mov
mov
loop
aam
insb
scas
adc
pop
mov
jnp
xor
test
pop
inc
popa
mov
leave
pop
sub
aas
ja
mov
fldcw
lret
lods
repz
mov
ljmp
ss
test
sbb
cld
pop
dec
aad
adc
repnz
inc
and
test
fcompl
jnp
aaa
leave
jmp
sbb
cmpsb
sbb
jb
xchg
xlat
and
lret
cmp
stos
jno
adc
pop
push
jnp
jecxz
scas
mov
push
repnz
cmpsb
xchg
sub
jnp
ja
adc
mov
jg
jp
mov
out
sub
mov
sub
jnp
lods
scas
xchg
mov
in
jnp
bound
lahf
jnp
cs
lods
daa
cmp
out
jmp
lfs
insl
cmp
jnp
divb
or
lods
mov
test
cmp
sub
mov
adc
sti
jnp
inc
sbb
fcomp
aaa
jnp
inc
xlat
and
hlt
js
imulb
rcll
jecxz
jno
xchg
or
aas
or
daa
jnp
repz
mov
jnp
xor
cmc
les
fsub
js
sub
jle
jecxz
jae
xchg
pushf
cmp
icebp
xchg
sahf
pop
mull
cmp
jnp
jecxz
cmp
mov
dec
sub
mov
xor
outsl
jnp
hlt
adc
jno
push
cmp
or
xchg
jecxz
xor
xchg
je
mov
orl
xchg
mov
fcoms
xor
xchg
cmc
cmp
lods
int3
xchg
sarl
and
aam
das
pop
jnp
ljmp
lret
stos
dec
jnp
inc
aam
push
xor
xchg
xchg
xor
push
xchg
mov
not
in
imulb
jo
jbe
sahf
mov
fcomi
mov
mov
add
jnp
sub
jmp
sti
push
stc
mov
dec
xchg
jnp
movsl
push
out
and
jmp
cli
mov
inc
test
fsubs
lods
dec
les
inc
sti
sub
mov
xchg
and
mov
mov
hlt
push
fstps
call
in
push
mov
or
jnp
sbb
int
iret
pusha
je
jnp
hlt
jge
adc
dec
or
inc
push
and
mov
dec
push
les
ficomps
int
jne
pop
out
jb
sbb
add
jne
mov
jmp
hlt
mov
fwait
xchg
lock
stc
cmp
hlt
imul
push
imull
cmp
in
push
add
inc
je
int
cmp
xor
adc
repnz
jnp
and
push
ja
pop
pop
fwait
clc
gs
or
shrb
jnp
test
dec
sarl
icebp
loopne
add
lods
pushf
jnp
nop
xchg
xlat
inc
es
jnp
cmp
lret
jnp
in
shll
push
imul
aaa
inc
aam
dec
stc
dec
xchg
xor
add
cmp
inc
xor
in
push
mov
pop
std
out
lea
and
jne
scas
push
int
pop
push
bound
xlat
inc
jle
cmpsl
data16
pusha
jnp
add
lea
mov
out
clc
sbb
enter
jns
in
mov
cmp
pop
lods
lcall
repz
sbb
jnp
dec
js
mov
mov
jle
jns
repnz
fnsave
loopne
jecxz
and
hlt
jnp
enter
iret
or
dec
ljmp
lods
popf
jae
push
dec
sarl
cmp
pop
or
mov
lahf
xchg
xchg
ja
lret
enter
jge
jnp
fisttps
mov
sbb
bndstx
xor
cmp
mov
mov
push
jne
shll
inc
lods
inc
jmp
jns
rep
mov
call
ficompl
sub
mov
xchg
inc
fwait
jp
call
popf
arpl
ficomps
lret
rcrl
ret
jae
iret
orb
jnp
lret
mov
dec
add
popf
jle
cli
int
lods
pop
mov
mov
mov
cmp
idiv
divb
cmp
int3
xor
imul
sub
add
sub
mov
filds
push
or
cmp
and
fldcw
mov
jmp
lods
and
imul
or
cs
test
xor
sbb
mov
stos
cmp
bound
xchg
lahf
cld
jns
cmp
loope
and
cmc
jnp
bound
mov
jo
mov
or
fcmovne
lods
sbb
jnp
cmp
push
xchg
mov
mov
jnp
sbb
stos
adc
pop
outsb
pop
sub
nop
int3
xor
mov
jnp
mov
in
jbe
sbb
and
adc
mov
mov
jnp
stc
add
jnp
cmp
std
jp
repz
mov
lcall
xchg
aas
mov
jnp
pop
aaa
popf
pop
dec
inc
adc
notl
xchg
cmp
mov
jnp
aaa
loop
push
jnp
repnz
insb
push
pop
out
xorl
adc
daa
mov
loopne
fidivrl
mov
cltd
stos
sub
mov
dec
sub
mov
test
dec
push
sbb
jmp
jnp
addr16
jo
std
or
push
inc
fcomi
aaa
and
fidivrl
jbe
lcall
cmp
cmpsl
stos
sbb
jnp
jne
lods
fisubl
sbb
push
mov
cli
mov
xor
insb
test
loop
call
cmp
shrb
mov
mov
mov
ljmp
inc
fidivl
mov
in
sbb
sub
sahf
jnp
cmp
cmpsb
aaa
jge
or
dec
jnp
or
sti
sbb
push
mov
mov
pushf
call
test
jg
cmp
pop
push
jmp
adc
jge
mov
dec
sub
pop
jle
out
mov
mov
cmp
pop
inc
stos
ss
and
mov
cmp
fnstsw
pop
cmp
adc
insl
mov
lock
aaa
idivb
insb
cmp
into
pop
mov
dec
xlat
xchg
mov
lcall
loopne
ljmp
jnp
sbb
int
jnp
lret
in
dec
push
jnp
jbe
mov
rcr
mov
push
push
jnp
mov
pop
jle
dec
mov
lods
mov
bound
stos
jmp
mov
and
outsl
test
and
cmp
jp
adc
daa
jnp
inc
xchg
fs
sti
push
inc
mov
adc
dec
mov
in
jnp
inc
sub
je
pop
mov
dec
iret
inc
mov
mov
mov
sahf
stc
xchg
in
les
and
sub
dec
adc
mov
pop
mov
mov
jnp
dec
sub
stos
clc
loop
fsubs
insl
and
out
lcall
ret
adc
mov
adc
daa
dec
dec
fistps
adc
imul
fidivrl
or
into
push
lods
mov
lret
cmp
std
addr16
and
cmpsb
xor
ret
push
ljmp
scas
mov
adc
lret
fsubr
fidivrl
jnp
bound
cmp
mov
xchg
dec
inc
mov
cmp
out
dec
test
xchg
repz
dec
aad
sub
int3
jno
cltd
daa
xlat
sub
fcmovnu
outsl
inc
ss
cli
or
les
or
sub
and
mov
jnp
adc
jnp
mov
ljmp
mov
lcall
repz
aam
imul
dec
sbb
into
mov
outsb
ja
scas
adc
sti
out
jnp
cs
mov
outsb
jnp
leave
scas
aam
shll
cmp
sub
repnz
add
ljmp
notl
subl
xor
movsb
jae
in
xorb
scas
bnd
jp
lods
mov
mov
pop
das
imul
jle
sahf
int
sbb
sarl
add
int3
fwait
sbb
xor
ficoms
mov
mov
test
jnp
fimull
lods
mov
mov
movsb
jg
add
mov
pop
mov
sub
mov
pop
jmp
out
sub
jns
sub
sti
mov
inc
lods
rcll
or
imulb
jnp
xchg
inc
sub
jnp
jne
shll
insb
and
sub
cmp
pop
sub
dec
push
jnp
fldt
mov
xchg
outsb
xchg
hlt
jbe
jnp
repz
in
in
pop
jnp
lret
or
sub
sub
ja
mov
fistl
push
mov
push
mul
lock
cmpsl
hlt
jle
movsb
sbb
imul
xor
js
mov
mov
sub
jnp
dec
scas
jns
sub
lahf
mov
mov
jnp
test
xchg
inc
jnp
je
fwait
insb
jp
sarl
cmp
fisttpll
adc
iret
test
sarb
lcall
sti
ds
jnp
push
call
pop
jnp
das
push
push
jnp
or
fimull
and
jnp
mov
cmp
idivb
or
mov
jnp
lcall
repz
inc
adcb
out
add
jae
divl
stos
shll
jnp
xchg
mov
subb
xchg
sbb
xor
in
lret
ljmp
xchg
mov
sub
jnp
sub
imul
outsb
dec
aad
push
out
in
jnp
hlt
dec
xchg
push
jno
inc
pop
imul
jnp
push
cmp
xor
sbb
fimull
testb
xor
movsl
xchg
popa
roll
push
push
add
mov
loop
sahf
jnp
scas
mov
jne
call
push
jnp
popf
xor
stos
pop
clc
imul
pusha
test
pushf
sub
insl
xchg
jecxz
repnz
xor
fdivs
push
push
jae
fidivrs
xor
sar
jnp
ljmp
jnp
inc
dec
pop
test
jne
jnp
fwait
mov
inc
sub
xchg
dec
sub
fsubl
hlt
or
je
jnp
cmpl
jnp
cmpsl
sti
push
orb
xchg
inc
je
and
lods
insb
pushf
negl
and
sarb
jae
sbb
repnz
push
in
icebp
cmp
popa
test
jle
mov
jecxz
jnp
movsb
test
test
mov
mov
sti
je
ljmp
push
outsb
mov
dec
xchg
das
shlb
pop
out
cs
mulw
jnp
ja
in
rclb
dec
jmp
fs
outsl
dec
jge
dec
lret
mov
cmpsl
insl
pusha
jnp
scas
sti
imul
jae
push
lods
repz
cld
lahf
das
cs
fwait
dec
fldt
mov
jo
hlt
cmpsb
jle
ffree
adc
call
mov
shll
out
lret
hlt
sbbb
lea
roll
stc
shlb
jmp
loopne
mov
outsb
xor
push
sub
push
rcrl
loopne
in
and
sbb
imul
pop
jnp
xchg
cli
push
and
xchg
insb
xchg
cltd
test
jbe
icebp
lods
jnp
sub
jnp
push
sub
cmpsb
jnp
dec
pop
push
or
cmp
jnp
mov
push
mov
outsl
test
lret
xorl
imul
fsubrs
stc
aaa
mov
scas
dec
js
fs
sub
int3
sub
ja
daa
and
ret
fstpt
mov
lahf
cmp
sarl
cmp
dec
popf
or
arpl
and
in
out
jae
jle
sub
lods
repnz
pop
testl
jnp
add
pop
jnp
dec
cmc
int
imul
jbe
rclb
sbb
pop
stos
test
lds
jnp
and
pop
int
inc
dec
mov
lcall
jnp
sub
xchg
iret
jecxz
jnp
lods
call
pop
mov
mov
dec
pop
insl
push
loopne
jnp
into
add
cmp
mov
cltd
mov
jns
call
dec
cmp
pop
stos
in
jnp
mov
and
fsubs
push
jnp
mov
jne
subb
clc
xlat
cmp
and
int3
loop
icebp
mov
in
sub
fsubrs
bound
jnp
mov
xor
sbb
hlt
or
sbb
lock
daa
cmp
dec
fdiv
xor
jg
xchg
jl
pop
mov
gs
pusha
int
fsubrs
cmc
scas
push
mov
aaa
in
push
jg
cmp
jmp
mov
je
jnp,pt
out
in
repz
cmc
and
lock
add
in
imul
mov
cli
or
lret
test
outsb
in
jl
add
mov
sub
push
adc
cs
sub
xor
sbb
popa
mov
xor
jnp
xchg
mov
pushf
nop
jnp
movsl
sub
push
jnp
and
leave
push
loopne
ja
jnp
ljmp
push
aad
jecxz
les
fs
dec
or
iret
jnp
mov
sarl
aam
add
mov
jnp
mov
cmp
cli
scas
xor
xchg
sub
mov
jnp
pop
lea
orl
mov
jnp
sub
pop
xor
fwait
jp
ja
mov
jns
loop
pop
insl
mov
and
sbb
insl
lret
shll
xorb
pop
mov
mov
cmp
xor
sbb
pop
sbb
ljmp
jnp
xchg
out
jae
jmp
jnp
jle
sbb
cmpsb
idivb
rcl
insl
into
and
jnp
mov
int3
roll
outsl
jnp
daa
mov
bnd
stos
lods
cwtl
and
dec
jnp
jns
out
or
fstpt
push
xchg
jnp
call
dec
mov
mov
mov
jnp
scas
inc
sbb
and
aam
jnp
jb
pop
sub
shll
jge
fsubr
cmp
jl
pop
pop
fucom
ret
xchg
jnp
popf
sarb
jnp
pop
imul
add
sub
add
sub
add
adc
mov
push
ss
xor
int
shll
movsl
jnp
imul
adc
adc
inc
mov
clc
repnz
lods
lods
sub
out
xor
add
mov
xchg
jecxz
dec
jmp
xchg
mov
in
mov
popf
jnp
aaa
mov
cmp
or
pop
jae
xchg
mov
in
or
xlat
dec
lds
test
cmp
xor
xchg
jl
scas
mov
outsb
or
xchg
mov
or
hlt
popf
push
sub
out
xchg
stos
cld
outsl
pusha
jbe
jnp
fnsave
mov
xor
and
insb
xor
sahf
sub
pop
mov
loop
es
or
jbe
inc
arpl
dec
insb
dec
sub
sbb
loopne
xor
jnp
xchg
jmp
push
jnp
int
stos
jecxz
lods
hlt
dec
xor
aas
cmc
sbb
cmp
popf
clc
insl
jb
imul
ds
daa
out
mov
push
repnz
mov
ret
pushf
mov
add
insl
jno
jae
jnp
mov
inc
push
enter
aaa
in
cmc
mull
mov
and
mov
js
repnz
push
fwait
sbb
ds
ja
test
clc
movsl
out
jnp
mov
sub
sbb
push
or
and
inc
jbe
stc
movsl
inc
popa
inc
xchg
icebp
push
mov
insb
mov
mov
stos
outsb
arpl
data16
dec
jnp
shrl
cmp
fdivl
inc
ficompl
mov
jnp
data16
pop
subl
cltd
mov
call
jb
in
cmpsb
pop
sub
je
jnp
shr
leave
int3
fbstp
and
ja
in
jnp
daa
insl
xor
ret
dec
cmp
add
xchg
dec
imulb
jnp
cmp
lret
pop
mov
pop
ret
pop
xlat
sub
hlt
mov
fildll
jbe
and
xchg
adc
mov
xor
orl
jmp
loopne
jae
push
fnstcw
notb
lods
outsb
aam
jnp
cld
mov
xor
mov
or
mov
or
popf
insb
xchg
mov
repnz
mov
mov
push
stos
jnp
aaa
addr16
sahf
mov
jnp
daa
push
pop
push
inc
jp
jnp
fucomi
mov
or
lock
mov
call
pop
sbb
aaa
sbb
lahf
stos
jnp
lods
mov
and
dec
push
or
je
mov
ror
jnp
sbb
mov
adc
jecxz
lahf
jbe
adc
sti
jnp
cwtl
inc
arpl
lods
lods
jnp
sbb
push
jnp
push
outsl
fld
loopne
cwtl
sbb
jecxz
or
fcmove
jnp
xchg
dec
and
rcrb
pusha
pop
dec
fsubs
xchg
dec
xor
jnp
jge
iret
pop
jnp
call
stc
sub
loop
in
stos
pop
jnp
mov
xchg
pop
cmp
pop
ljmp
and
or
jnp
mov
sbbl
iret
test
nop
outsb
fisttpl
sub
mov
cld
pop
js
and
jmp
dec
sarb
in
sbb
cmp
jnp
aam
lret
push
jnp
mov
out
or
mov
push
cmp
lcall
xor
dec
ret
pop
in
jno
lods
dec
call
cmp
and
mov
fwait
jle
mov
xor
aaa
xchg
inc
jae
cld
fsubl
int
and
xchg
popf
xor
mov
jnp
stc
sub
jae
xchg
cmc
shll
lods
or
pop
xor
bound
mov
sub
cmp
sbbl
test
outsl
lods
fisttps
and
adc
fdivrp
push
jbe
enter
cmpsl
lcall
insb
cmpsb
push
sbb
jnp
clc
sub
jg
mov
sahf
jno
xchg
cmpb
mov
mov
aas
add
lret
push
pop
or
aaa
add
jnp
sti
xchg
lods
jne
addl
jnp
dec
cwtl
insb
push
xchg
mov
jnp
inc
cmp
mov
push
adc
add
jmp
in
adc
lods
jnp
fstpt
clc
mov
cmpsb
jbe
sbb
mov
cmp
push
jnp
addr16
cmp
and
sbb
jnp
filds
jnp
mov
int
sbb
push
mov
pusha
adc
and
lods
imul
ret
pop
je
cmp
in
sub
jae
jno
aaa
popf
dec
pop
jnp
and
or
lock
mov
push
sub
in
jnp
nop
mov
in
jnp
addl
xor
jnp
and
push
jnp
rcll
cmpl
fmuls
jnp
mov
ljmp
mov
mov
outsl
pop
fwait
cld
jbe
sti
mov
sbb
jno
imul
sbb
and
xchg
outsl
mov
imul
int3
jge
inc
sbb
out
cmp
sub
loop
xchg
stc
cmp
icebp
pop
sub
ss
or
dec
popa
popf
xor
mov
fstpt
jp
test
xchg
outsl
adc
xlat
push
pushf
jnp
cli
icebp
daa
jns
testb
xchg
clc
xlat
ss
cli
and
lods
xchg
mov
enter
imul
xor
call
into
cmp
dec
dec
ds
push
cmc
clc
sahf
mov
xor
pop
pop
push
jg
jns
mov
enter
test
lock
jnp
sub
dec
cmp
pop
mov
lds
in
jge
mov
loop
test
pushf
cmpsb
jg
push
outsb
and
ficoml
imul
jo
dec
inc
imul
out
scas
shlb
aam
jnp
testl
cmp
roll
repnz
leave
jno
jnp
into
sub
lods
pop
aaa
in
sub
jnp
mov
clc
cmc
and
sti
jnp
mov
aaa
jb
add
js
jnp
lods
and
mov
xor
lods
dec
daa
pop
jp
out
jnp
xchg
addr16
jnp
mov
sub
into
cmc
dec
cli
dec
lret
cmp
jg
inc
in
push
idiv
fdivs
inc
ds
in
pop
outsb
dec
stos
mov
jne
jnp
cmp
mov
xchg
adc
in
int3
and
nop
adc
lcall
iret
std
push
mov
pop
jnp
sbb
test
clc
jne
jae
test
push
int
jnp
lea
imull
add
mov
cmp
nop
pop
inc
mov
stos
lds
lret
jnp
or
in
mov
out
call
push
jnp
mov
sub
jnp
xchg
ja
xchg
sub
orl
cld
or
jne
inc
or
cmp
divb
sub
lods
lock
insb
dec
lcall
pop
jg
lahf
jnp
dec
pop
sahf
into
or
imul
out
jb
je
imul
mov
idivl
bound
popf
movzwl
fidivrl
lods
cs
ljmp
mov
or
jnp
cmc
lret
jbe
int
inc
cmp
mov
inc
inc
jnp
cmp
and
mov
jae
mov
cmp
pop
repnz
idivl
mov
xchg
pop
jnp
cmp
push
lcall
sub
dec
rorb
xchg
cmp
mov
pop
mulb
mov
data16
into
fildl
arpl
out
cs
mov
jo
mov
jnp
es
repnz
mov
jnp
push
push
movsb
jmp
lret
mov
call
outsb
mov
push
jmp
mov
outsb
or
xchg
fs
repnz
jnp
jb
jp
sub
push
jnp
jmp
mov
ljmp
cmp
insb
out
xchg
and
fcoms
jnp
addr16
or
in
mov
jbe
or
jnp
sbb
out
jnp
cmp
mov
ret
daa
inc
outsl
jmp
jnp
adcl
jle
push
fimull
mov
push
sbb
mov
fbstp
pop
xchg
or
in
cmc
adc
ljmp
or
dec
add
lcall
cmp
sbb
test
lods
jnp
or
xor
insb
mov
mov
mov
cli
jnp
test
xchg
movsb
cmpsl
or
loope
xor
inc
lods
mov
mov
repnz
mov
int
push
jmp
mov
mov
out
icebp
or
addl
mov
sbb
scas
dec
jns
outsl
dec
sbb
jnp
sub
cmp
mov
adc
xor
xchg
rcrb
ja
push
cli
fdivrs
sti
inc
fildll
push
mov
mov
mov
push
fnsave
dec
hlt
sti
mov
jb
jnp
and
aam
enter
xchg
sbb
jnp
xchg
mov
cmp
jnp
inc
and
xor
jnp
sahf
xor
ret
jnp
stos
sub
cmpsl
dec
lret
mov
fcompl
jnp
mov
and
jnp
jns
mov
jnp
jle
or
nop
imul
fwait
jecxz
cmp
lret
or
jg
fs
jl
jl
imul
push
jnp
dec
inc
dec
xor
xor
jnp
xor
shll
enter
cmp
xlat
push
pop
ja
xchg
hlt
lds
adc
jnp
push
gs
fistpl
in
push
xchg
cmp
sbb
mov
pushf
ret
imul
and
pushl
mov
jnp
shrl
testb
mov
push
out
icebp
xor
outsl
push
sub
pop
jnp
jae
jmp
mov
xor
int
in
dec
inc
jnp
cli
lds
cmp
mov
notl
in
cmp
xchg
je
imul
mov
insb
out
cmp
push
sti
mov
mov
sub
and
jnp
out
ret
lds
jnp
lret
ja
pop
stos
jmp
sub
pop
sahf
out
imul
jne
icebp
or
test
aam
imul
xor
jb
sub
mov
mov
inc
inc
jmp
insl
int3
lock
test
loop
add
mov
xor
das
push
adc
repz
sbb
and
jo
lods
or
mov
dec
push
lcall
and
pop
out
loop
rorl
leave
das
xlat
jns
andl
jnp
jp
xchg
insb
dec
fmull
rorb
push
int3
je
call
push
bound
jae
dec
add
push
pop
xor
pop
scas
cmp
int
xchg
cmc
xor
jle
cs
and
fistl
lock
xchg
jnp
cli
jecxz
mov
xchg
and
mov
loopne
iret
jae
dec
xchg
inc
mov
xor
int
push
scas
popf
jnp
loop
pusha
aaa
int3
and
jno
scas
xor
enter
mov
pop
sub
push
pop
rcrb
insl
jp
pop
xchg
sub
mov
jne
and
inc
and
xor
sbb
mov
fs
jnp
pop
sub
hlt
mov
enter
add
cli
lcall
cmp
adc
pop
ficompl
cmc
clc
fildll
mov
mov
xor
sub
jnp
and
aam
dec
ja
jnp
xchg
pop
add
mov
jnp
sarl
xchg
jnp
ficoms
xchg
sub
mov
jmp
call
sbb
das
mov
cwtl
jle
out
mov
ret
pop
push
out
mov
lret
dec
ret
fidivrl
leave
or
cli
pop
cmp
sub
and
fs
mov
push
add
imul
push
lret
jl
sub
insl
push
shrb
gs
mov
enter
cs
mov
sbb
addr16
das
jnp
xchg
pop
leave
dec
bound
dec
jno
shll
stc
sbb
xchg
jnp
movsb
sbb
cmp
jae
pop
mov
xchg
cltd
dec
dec
repnz
mov
movsl
hlt
mov
jb
xchg
inc
outsl
mov
in
sarb
insl
jp
and
jle
mov
sbb
movsb
pop
scas
jnp
out
out
and
sbb
push
or
in
ja
insb
push
mov
pop
jecxz
jne
xlat
fsubrl
xorl
pop
in
jnp
leave
shr
jne
fdivrl
sub
loope
dec
out
popf
dec
mov
push
in
mov
int
aaa
jnp
imull
es
xor
or
int
mov
pop
gs
fidivrl
lds
jo
xchg
fcompl
dec
aam
and
insb
push
lea
aaa
loopne
dec
loop
cmp
repnz
cmpb
jno
movb
lea
pop
or
xchg
jo
jnp
jne
sub
sub
sub
inc
mov
pop
rorl
cmp
popf
adc
sbb
mov
jnp
out
outsb
mov
nop
adc
clc
repz
inc
jnp
scas
ret
into
fsubrs
in
clc
aas
push
or
mov
xor
jnp
dec
mov
push
mov
mov
mov
sbb
pop
popa
pop
or
test
jnp
inc
stos
in
jle
ret
leave
push
pop
adc
aad
movl
cmp
push
or
bound
cmpsb
in
ss
imul
enter
dec
jne
pop
jge
xor
and
shr
out
push
mov
jnp
push
xchg
stos
jnp
mov
aam
gs
jecxz
pop
ss
imul
xor
xorb
jnp
xlat
push
inc
test
fnstcw
sbb
jbe
push
outsb
out
ffreep
cmpsl
fldt
xchg
jnp
shr
cs
xchg
dec
cmp
sub
int3
add
lcall
dec
dec
loop
or
push
or
cmp
jb
clc
cwtl
pop
cmp
jnp
lcall
push
and
jo
rcrl
xor
dec
outsl
adc
enter
adc
daa
out
in
stos
sbb
in
sbb
in
mov
mov
cmp
dec
fdivrl
movsb
hlt
cmpsb
insl
sbb
cmpsl
outsb
mov
jbe
adc
mov
jnp
cs
lock
sbb
jb
aaa
xchg
imull
ja
sub
xor
stos
mov
popa
or
lods
mov
jg
icebp
std
js
clc
dec
pop
jnp
mov
lret
mov
or
cmp
and
jnp
pop
sub
insl
insb
shlb
and
in
insb
cmp
dec
or
test
push
insb
push
xchg
sbb
and
or
xchg
jae
fldcw
insb
scas
jnp
sub
cmp
and
sbb
in
mov
pushf
dec
mov
and
call
ss
adc
or
clc
or
mov
scas
or
sti
fldt
sub
mov
out
jmp
aam
sub
in
mov
sahf
push
cli
hlt
pusha
jae
xchg
sub
fdivrs
js
or
sti
sub
je
dec
jnp
jns
cld
divb
lea
repnz
pushf
aaa
ljmp
hlt
sub
jnp
cmc
cld
xchg
mov
jne
sbb
mov
testb
aam
fstpt
push
dec
fdivs
in
div
fnstsw
or
xor
jne
shlb
ljmp
test
pop
dec
push
mov
jnp
jno
shrb
mov
out
imul
outsb
insb
pmuludq
out
mov
sbb
pop
fucomp
xchg
jnp
ljmp
jnp
mov
sub
mov
lock
pop
xor
xor
stos
or
pop
jns
or
adc
int3
lcall
jno
lods
and
jnp
xchg
leave
rclb
adc
hlt
sub
mov
xchg
std
sbb
sbb
movsl
pop
or
add
popa
dec
nop
mov
jb
xchg
jnp
inc
jecxz
inc
bound
mov
shlb
sub
hlt
sbb
inc
les
mov
ss
mov
jnp
xchg
inc
xor
sub
jecxz
out
js
cmp
shlb
inc
cmc
jnp
test
xchg
jns
xchg
jnp
jne
push
movsb
sbbl
mov
scas
cmp
jp
and
mov
lds
push
inc
dec
sub
mov
or
xor
jle
imul
leave
aam
cmp
sub
insl
jnp
lods
fdivl
sti
and
xchg
fistpl
lret
loop
inc
in
adc
sbb
insl
jns
xchg
dec
ss
cli
inc
sahf
in
mov
jmp
mov
cmpsl
in
mov
jns
cli
xor
loop
jnp
mov
or
xor
mov
repnz
or
arpl
aas
frstor
loop
mov
xchg
imul
out
xlat
and
sub
sbb
repnz
inc
mov
push
jnp
mov
adc
bound
adc
dec
lcall
xchg
mov
jnp
sti
jp
pop
repz
sbb
cwtl
nop
hlt
jns
bound
lods
sbb
dec
cmp
or
fistpl
sub
sbb
push
mov
xor
sbb
push
xlat
sbb
hlt
jae
je
lock
shlb
jae
mov
fistpl
mov
orb
insb
mov
xchg
popa
movsl
jae
mul
sbb
hlt
scas
call
movsb
mov
jnp
imul
mov
mov
fistpl
inc
iret
pop
cmc
xchg
sub
jg
imul
enter
or
daa
popa
mov
adcl
imul
dec
idivl
pop
sub
fsubrs
and
push
insb
cmp
mov
nop
sahf
shlb
je
loope
push
lods
jnp
sar
xchg
idivl
pop
jnp
dec
adc
test
mov
jp
jnp
xchg
jno
push
stos
cmp
xor
add
mov
jae
scas
xor
jnp
cmp
test
in
dec
call
pushf
add
roll
addr16
pop
clc
mov
ja
pusha
sbb
bound
and
sub
lods
xor
adc
push
inc
mov
mov
imul
jae
inc
and
jnp
jno
pop
mov
call
sbb
int3
sub
sub
cmp
mov
jno
jnp
xorb
jle
sbb
dec
ds
jmp
adc
xor
cli
gs
push
hlt
mov
cmpsl
cmc
mov
sub
aaa
ret
adc
iret
add
add
imul
ret
daa
or
cwtl
dec
lods
outsl
mov
xor
scas
jnp
stos
cmc
sub
push
jnp
cmp
ljmp
cmc
xchg
loop
fdivl
or
aaa
das
inc
push
push
dec
cmp
jnp
int3
nop
pop
and
in
jo
call
pop
js
je
jmp
popa
sub
pop
dec
push
xchg
enter
mov
jp
pop
movsb
imul
call
outsl
push
mov
xchg
lock
mov
push
sbb
cmp
push
mov
test
dec
dec
jnp
push
xor
adc
rolb
into
stos
imulb
out
mov
sbb
jbe
sbb
dec
into
inc
sub
outsl
mov
cmpsb
je,pn
test
xchg
mov
jne
sub
jnp
mov
lock
cmp
sbb
dec
fidivl
mov
mov
pop
jnp
fisttpll
jo
add
pop
jnp
mov
hlt
stc
fcomi
adc
fadds
adc
jnp
stos
xchg
ret
bnd
add
fidivrs
addr16
aas
dec
xlat
push
mov
cmp
jae
jo
jnp
jns
iret
movsb
in
adc
mov
out
movsl
popf
cmp
fdiv
xor
test
mov
aaa
sti
and
lea
jae
mov
dec
or
lret
outsb
mov
subb
testl
pop
inc
mov
lods
mov
test
scas
rcrb
lods
js
jnp
pop
aaa
in
dec
jp
cwtl
xchg
xlat
mov
sti
imul
repnz
mov
outsl
shlb
inc
js
out
stos
jbe
push
or
aaa
jle
pop
cli
xor
aam
test
ficoml
jge
jnp
aaa
mov
xchg
jnp
xor
out
cmpsb
push
inc
imul
pop
scas
stos
cli
jnp
sub
in
and
repz
inc
repnz
inc
stos
nop
jnp
xchg
adc
dec
jg
mov
cwtl
shlb
sti
scas
sahf
or
out
jnp
imul
fsubs
push
mov
insl
into
push
ljmp
jae
sti
int3
xor
test
add
jnp
cmp
cmp
aaa
dec
pop
xchg
and
jb
mov
mov
out
mov
in
jnp
sbb
mov
and
adc
cmc
cwtl
in
jnp
jp
dec
xor
jno
pop
and
fstpt
add
cmp
xchg
inc
cmc
ss
jnp
popf
add
sarl
lds
sub
xchg
xor
push
adc
cltd
inc
cmp
mov
push
pop
sbb
out
mov
dec
inc
lcall
pop
xor
icebp
push
mov
enter
sbb
gs
mov
popa
and
sub
cmpsb
aad
xchg
pop
rol
cmp
out
jae
js
mov
mov
hlt
clc
call
rorl
xor
lods
fsubr
insb
stos
rcrl
pop
lods
aas
int3
jne
xchg
lcall
cs
jo
jno
pop
fdivl
fimuls
mov
cmpsl
pop
insb
mov
jnp
lock
jnp
and
adc
stos
inc
fidivl
dec
jnp
imul
adc
jnp
xor
sub
cmp
jae
mov
aaa
jnp
stos
scas
inc
push
outsb
loopne
or
fsubrs
jne
mov
sub
in
mov
dec
inc
int3
sub
push
cwtl
lods
mov
push
imul
push
mov
mov
push
push
sbb
sbb
pop
cmp
xchg
dec
test
jo
cwtl
fwait
out
mov
stc
mov
mov
pop
jp
bnd
ss
in
mov
call
dec
pop
xchg
xchg
idivl
aam
or
sub
xor
jge
hlt
jp
mov
je
mov
xor
jo
xchg
stos
mov
mov
outsb
mov
lods
fidivrs
fmuls
mov
jb
jnp
fidivrl
scas
fwait
out
pop
mov
dec
pop
xor
mov
cmpsl
jae
enter
imul
mov
pop
icebp
xorl
out
js
fdiv
outsb
cli
das
mov
mov
stc
dec
enter
sub
in
sub
sub
fsubrs
imul
sub
dec
call
lcall
lods
sbb
sub
scas
mov
mov
enter
jns
or
lock
jno
sub
mov
popa
mov
ja
xor
sub
stos
dec
mov
mov
cmc
sub
fdiv
xor
or
outsl
imul
sbbb
inc
cmp
sbb
jns
jae
jbe
fwait
repnz
pop
rcll
insl
fs
jnp
sbb
out
adc
cmpsl
jp
cmp
bound
dec
leave
and
sbb
jb
jae
cmp
imul
push
sti
ret
sub
aaa
xchg
outsb
jnp
movsl
negl
cmc
imul
rorb
sbb
lods
sub
into
jnp
leave
and
or
push
jnp
xchg
repz
aaa
mov
cmp
or
cmp
or
leave
stos
jnp
cmp
arpl
inc
fsubl
xor
jnp
daa
mov
lret
xchg
enter
ret
xchg
dec
dec
and
jnp
scas
fucomip
xchg
pop
fcomps
jo
ss
mov
cmp
dec
or
std
sub
clc
sub
inc
call
filds
stos
fcomp
gs
sbb
lret
popa
lods
mov
sbb
jge
push
pushf
jnp
aam
in
cmp
jnp
test
loop
iret
rorl
jne
sbb
push
xor
dec
sub
jp
mov
mov
into
or
jnp
push
push
xchg
mov
dec
jnp
mov
push
enter
es
adc
cmp
outsl
cmp
das
es
test
lods
push
and
mov
xor
mov
cmc
test
inc
pop
jecxz
mov
test
or
lret
cmp
xor
cmc
cld
xchg
lods
jnp
je
outsl
cmp
repz
cmp
push
mov
mov
mov
jge
mov
jnp
lods
daa
pusha
push
sub
mov
xchg
inc
and
xlat
js
cmp
fisubrs
xchg
mov
out
jne
aam
sub
ja
mov
inc
aaa
xchg
push
jnp
add
aas
mov
inc
jnp
xchg
stos
cmp
push
xor
scas
cltd
cmc
das
repz
push
or
jnp
inc
out
sub
mov
insb
dec
pushf
repnz
inc
lret
into
cmc
pusha
jnp
xlat
test
test
jnp
jae
cmp
in
out
xchg
jnp
fdivl
jg
sbb
lret
jecxz
test
mov
pushl
js
xor
xchg
lods
jmp
pop
mov
ficomps
jnp
push
jp
cmpsb
mov
jnp
jg
ss
lods
or
test
or
repnz
lret
mov
sub
mov
int
or
inc
jnp
daa
jmp
inc
and
stc
cmc
mov
fisubrl
xchg
bound
jbe
push
psrlq
repnz
into
lcall
inc
pop
xor
cmpsb
xchg
sbb
or
jnp
lret
push
inc
cmp
lock
inc
lods
ds
mov
int
loop
xor
rcrb
sti
mov
jecxz
adc
lods
lea
jnp
mov
lret
sbb
fs
jnp
aad
mov
mov
push
insl
xor
js
mov
data16
add
cmp
jp
loop
imul
sub
jbe
enter
ss
adc
and
mov
dec
cld
gs
shll
add
aaa
xchg
rcr
cs
aam
mov
mov
or
pop
fs
pop
jnp
mov
push
in
jnp
out
sub
jb
jnp
test
fwait
cmc
out
adc
sahf
cmp
cmpsb
inc
pop
popf
lods
lock
stc
mov
jnp
insl
aad
cmp
stos
push
add
pushf
int
jnp
lods
xor
or
fistpll
cwtl
jne
loopne
mov
jnp
std
mov
xchg
jp
sti
jnp
shrl
into
jnp
push
popf
pop
cmp
jns
mov
and
fidivrl
sbb
fistpll
mov
jbe
jnp
leave
lea
push
jnp
sarb
mov
xchg
adc
or
mov
mov
call
imul
repz
sarl
jne
sub
lock
add
mov
daa
xor
idiv
xchg
jnp
sub
lcall
out
call
ja
mov
sbb
and
and
sarb
sti
jno
and
sbb
or
mov
lcall
cmp
mov
dec
jnp
loope
xor
jnp
xchg
lods
mov
adc
daa
or
mov
stc
je
jnp
mov
pop
test
push
jb
jnp
mov
xor
rolb
mov
jnp
lods
mov
inc
fwait
add
inc
mov
jae
add
mov
jnp
test
mov
jnp
push
shlb
xor
mov
mov
pop
das
push
sbb
pop
and
jnp
sub
adc
mov
cmp
jo
rcrb
les
jnp
mov
cmpsb
cmp
pop
sbb
fstl
mov
clc
pop
fsubs
jnp
xor
stos
in
mov
xor
fs
dec
and
bound
add
cmp
mov
loope
ret
xor
adc
out
inc
ja
pop
push
loopne
sbb
dec
int
or
dec
sarl
iret
mov
call
lahf
leave
ja
testb
inc
dec
cmp
enter
inc
add
add
mov
sub
cli
arpl
jne
movsb
insl
jnp
jecxz
fldlg2
dec
int3
sub
mov
in
adc
jnp
sub
mov
movsb
jnp
jg
xchg
xchg
mov
lret
je
mov
sahf
test
test
aaa
mov
ss
adc
jno
mov
shr
inc
xchg
jmp
sbb
mov
mov
inc
jno
es
sub
adc
sub
insl
sub
xlat
sti
jnp
or
daa
sub
cli
xchg
dec
js
mov
bnd
push
lret
out
outsl
in
mov
cmc
push
daa
push
stc
jnp
fwait
mov
mov
jnp,pt
push
push
repnz
idivb
adc
jne
pop
fsubrs
ss
imul
cli
aam
sub
or
imul
js
cmp
imul
out
jne
dec
insl
jo
mov
les
imul
mul
jnp
fwait
xor
push
enter
cmp
dec
pop
mov
in
repnz
and
aaa
sub
xchg
jnp
sub
out
leave
shl
dec
pusha
jecxz
and
pushf
fadds
adc
cmp
lahf
inc
inc
xlat
jl
out
sbb
icebp
jp
jnp
sbb
mov
pop
mov
arpl
mov
cmp
fadds
and
mov
idivl
mov
push
xor
xchg
aas
sbb
cmpsb
push
incb
shll
cmp
dec
enter
sbb
xor
dec
imulb
mov
xchg
das
jnp
jmp
push
push
xchg
sbb
xchg
jne
je
sub
test
imul
in
mov
cmpb
test
jnp
je
mov
jnp
sbbl
jnp
mov
mov
imul
and
push
cmp
out
mov
popa
outsb
aaa
mov
jnp
cmp
movsb
test
faddl
mov
jnp
lds
mov
cmp
mov
cli
dec
jmp
mov
sub
adc
pop
std
lret
lds
pop
xchg
inc
repnz
outsl
or
xor
mov
fsubs
aaa
out
jnp
cli
icebp
loop
mov
bound
test
sbb
imul
scas
loop
mov
xor
lcall
pushf
int3
ret
pop
scas
rcr
je
fldt
inc
or
ja
into
mov
cli
mov
fstpl
sub
mov
loope
dec
pop
cmp
mov
or
xchg
daa
mov
cmp
imul
insb
dec
xor
push
outsb
push
xor
leave
jnp
insl
shll
jp
daa
popf
adc
aam
test
mov
jnp
cmp
int
gs
es
loop
bound
imul
cmp
lret
cld
lahf
or
jmp
mov
cmp
clc
cli
dec
sub
and
and
adc
xor
and
jae
stos
inc
push
int
dec
sarl
and
ret
jnp
mov
xor
in
push
enter
jl
push
pop
ds
sahf
lcall
test
mov
in
int3
and
andps
xchg
stos
call
arpl
mov
jnp
ror
out
mov
fisubl
or
sub
jnp
frstor
sbb
jnp
movsb
xchg
clc
cmc
jnp
imul
cmpsl
mov
xchg
ret
iret
inc
adc
add
xchg
lcall
fstpl
mov
pop
ds
sub
add
jnp
fwait
mov
mov
add
xchg
push
shl
jbe
movsl
add
idivl
test
xor
add
mov
ret
je
push
imul
cli
push
mov
dec
jnp
dec
mov
out
add
or
jo
push
decl
rorb
or
fisubrl
out
pop
fsubs
out
dec
push
xchg
jnp
sub
sti
std
je
repz
outsb
pop
out
movsb
or
jno
shlb
aad
pop
daa
jo
pop
jnp
pop
test
ja
dec
imul
cli
jle
jnp
or
mov
mul
and
mov
arpl
mov
push
cli
out
enter
jnp
mov
je
js
bnd
notl
sub
fidivl
mov
scas
les
cmp
mov
xlat
or
sbb
inc
cmpsl
loopne
sahf
jnp
ret
jnp
lods
mov
mov
add
test
in
push
mov
fisubs
jnp
xlat
dec
ds
adc
dec
pop
lods
adc
dec
ret
daa
call
insl
fwait
xor
jnp
sbb
sub
push
jnp
insl
xlat
scas
dec
add
or
arpl
js
pop
inc
aas
inc
mov
adc
mov
inc
fstps
or
sub
mov
data16
jle
not
lret
les
sub
test
jnp
stos
lahf
stos
loop
gs
cmc
xor
repz
cmp
mov
dec
jns
jno
cmpsl
xor
divl
xchg
mov
push
out
mov
pusha
pop
mov
outsl
xlat
out
pop
inc
into
dec
fidivrl
lret
jl
test
sti
mov
divb
subl
in
hlt
mov
add
adc
cmp
ret
xlat
jnp
jmp
fistl
lea
and
pop
push
mov
inc
sbb
xor
jnp
push
add
pop
rorb
sub
dec
clc
sti
jns
pop
lahf
push
cmp
jecxz
dec
jnp
iret
sub
adc
sbb
push
xchg
cmp
mov
jnp
jecxz
xchg
scas
mov
xchg
mov
mov
fstpt
cmp
push
push
or
mov
jp
mov
add
or
jg
das
icebp
mov
mov
cmp
push
jnp
inc
out
adc
popf
jnp
stos
sti
xchg
daa
das
push
insb
imul
sub
leave
imul
lods
jnp
mov
cli
inc
jnp
bound
push
and
sbb
and
into
dec
je
xchg
stos
mov
subl
sbb
lods
push
idiv
jne
xchg
inc
or
sbb
sub
ljmp
add
popa
or
rcll
add
or
call
stos
jbe
sahf
mov
push
inc
or
mov
mov
cld
orb
jns
jnp
xchg
ja
enter
jo
jnp
or
inc
shrl
sub
cli
mov
icebp
je
jnp
mov
cmp
dec
jns
jo
xor
dec
fiadds
lcall
and
mov
push
incb
mov
imul
push
test
pop
outsb
push
sti
movsl
pop
mov
cmp
inc
xchg
jnp
lea
fmuls
sbb
push
rorl
mov
shl
imul
pop
sub
mov
add
roll
lret
ja
mov
in
aaa
sub
dec
lret
inc
jnp
std
sub
imul
xchg
data16
out
and
movsb
fwait
jnp
xchg
xchg
lods
xor
sbb
aad
ja
jmp
in
pop
push
lcall
and
pop
jns
je
rorl
jnp
aas
cmpl
rcrb
jmp
inc
sub
enter
xchg
imul
ret
test
or
adc
or
inc
fistpll
insl
push
int
xchg
sub
add
adc
mull
cs
jnp
inc
lock
in
inc
scas
pop
jnp
push
xor
mov
call
mov
aam
xor
mov
sti
scas
repz
pushf
leave
fistpll
nop
out
jae
stos
mov
int
call
jnp
stc
ss
push
mov
imul
xchg
push
rclb
clc
cmp
stos
loope
adc
jae
push
enter
bnd
cmp
or
sbb
mov
and
shll
push
ret
mov
pop
cmp
inc
cmp
out
fs
mov
cld
sti
js
out
lret
jnp
test
adc
or
jne
add
xor
rolb
lds
sub
cmp
push
lods
and
pop
jp
cltd
jnp
xchg
roll
in
or
das
inc
outsl
pop
and
popa
adc
push
xchg
ret
daa
outsl
add
jae
cmp
pop
imul
pop
add
lret
popa
jnp
mov
adc
jnp
pop
mov
enter
add
sarl
sbb
nop/reserved
dec
jnp
xchg
sti
out
xor
xchg
cmp
cli
jnp
out
aaa
dec
lret
cmp
fmul
insl
es
push
adcl
iret
mov
pop
lods
cmpsb
mov
call
ret
push
jp
idivl
inc
push
dec
and
mov
jnp
popa
inc
movsl
ja
xchg
lods
cmp
mov
mov
mov
fyl2xp1
dec
lret
int
mov
bsr
jnp
aas
mov
mov
mov
mov
ret
cmp
jnp
es
push
sub
mov
xchg
stos
in
fwait
cmp
in
lcall
leave
sti
mov
inc
cmp
cmp
je
fidivs
mov
fbld
sbb
adc
hlt
push
mov
pop
lods
dec
jnp
pop
test
dec
nop
add
out
cwtl
stos
lods
pop
stc
sub
imul
je
cli
lea
lahf
ret
stc
inc
jae
mov
fidivs
cld
jp
inc
imul
cmp
inc
scas
push
xchg
sub
mov
and
movsb
cli
jnp
inc
mov
sbb
cmp
mov
inc
in
or
js
stos
inc
jns
out
test
mov
insl
nop
jnp
add
leave
aas
out
pop
icebp
mov
jno
pusha
das
fisttpl
add
lret
cmp
bound
mov
mov
xchg
out
cmp
clc
movsb
dec
cli
pop
cmc
jne
mov
ja
cmp
push
push
into
mov
mov
cmp
test
cmp
jnp
lcall
neg
pop
jnp
inc
inc
adc
add
loop
jae
ds
xchg
jnp
fidivs
aaa
mov
pushf
daa
xlat
pop
pop
mov
pop
mov
rcll
inc
add
xchg
jnp
lods
ror
popa
xchg
es
jnp
inc
call
gs
pusha
mul
or
cmpsb
mov
or
xchg
jg
cvtpi2ps
outsl
int
dec
ss
ds
js
xchg
adc
in
mov
adc
jnp
hlt
das
mov
jp
sbb
xor
popa
jle
cs
dec
jnp
pop
cmp
or
js
fistpl
adcb
xor
or
xlat
pop
in
clc
inc
cltd
jns
idivb
push
push
insb
sub
mov
pop
jnp
stos
or
fwait
sub
bound
xchg
lret
jbe
iret
jns
push
jnp
xor
dec
sub
call
imul
in
sub
stc
jecxz
xchg
pop
jns
inc
je
push
std
outsl
adc
lea
lods
rclb
jnp
fidivrl
and
into
mov
dec
lret
mov
stc
inc
mov
fnsave
call
mov
lods
dec
dec
add
test
add
xor
jae
mov
scas
out
or
mov
inc
mov
cmp
xor
fs
lods
stc
lea
push
or
xor
cmp
inc
sub
xchg
jae
idivb
jnp
shlb
inc
aad
dec
clc
jp
adc
jb
xchg
dec
jb
outsl
into
mov
jne
arpl
rolb
cmpsl
imul
dec
ja
push
je
jnp
mov
std
push
sbb
out
faddl
out
sub
or
lods
imul
push
shlb
push
jo
pop
fdivrp
int3
and
outsb
insb
imul
stos
out
fimull
in
movsl
sub
jnp
daa
pop
mov
pop
push
mov
jnp
in
xchg
sti
pop
mov
inc
cs
xchg
shll
jb
imul
shll
jnp
cmpsl
mov
mov
jnp
pop
xor
stos
sahf
add
xchg
mov
stc
popa
je
outsb
je
and
lods
pusha
inc
cmp
xor
ficoms
ja
frstor
in
xchg
cmpb
pop
jg
jae
and
data16
push
popf
sar
or
loop
std
ja
adc
or
adc
ss
mov
fcomi
inc
jmp
dec
jp
je
es
mov
call
cltd
cmp
dec
nop
shrb
dec
mov
mov
hlt
jnp
mov
mov
cltd
push
add
out
mov
pop
sbb
push
into
adc
mov
push
push
xchg
bound
dec
inc
xor
lods
sahf
sbb
out
lcall
jmp
in
outsl
xchg
mov
cmp
and
mulb
mov
add
mov
outsl
cmp
sarl
sub
cltd
adc
cmpsl
sbb
pop
add
jnp
inc
sbbl
int
sub
inc
test
fwait
lock
cmc
sub
ret
bound
jne
xor
mov
inc
jl
sub
das
loope
imul
lcall
es
leave
outsl
cmp
xor
call
icebp
xor
sub
push
test
or
sub
jo
adc
jnp
into
repnz
aas
andb
jnp
sub
add
pop
dec
or
fwait
jnp
sti
loope
and
jnp
xor
mov
xchg
movsb
scas
jnp
lods
sub
mov
fadds
icebp
sbbl
ljmp
xor
xlat
jnp
in
movsb
bound
mov
lods
aaa
jge
das
jnp
loopne
xor
or
rclb
repnz
hlt
das
imul
je
xor
sub
outsl
mov
scas
sub
mov
jnp
ljmp
adc
cli
push
jnp
mov
jmp
mov
jnp
test
jle
hlt
cmp
jnp
xchg
stc
sub
mov
cmp
or
ja
and
test
fidivl
aam
cld
fsubs
sbb
mov
lcall
mov
xor
fcmove
mov
ljmp
mov
lods
jnp
enter
testb
jp
repnz
cs
xor
add
pop
jnp
or
fld
lret
cmp
cmp
popf
jae
mov
mov
je
xor
xchg
jne
lcall
xor
repz
jnp
mov
mov
inc
aam
xchg
lret
dec
sub
fdivs
outsb
es
adc
dec
cmp
div
xor
lcall
adc
imulb
jp
dec
cmp
lock
in
in
jp
sub
pop
mov
jnp
dec
jle
mov
insb
xor
lcall
sbb
pop
jo
idivl
cmpsl
sti
cmp
jp
xchg
xor
jnp
jecxz
jns
mov
jg
lods
mov
sbb
inc
clc
jae
mov
cmp
mov
push
cmp
dec
adc
sbb
fstpl
mov
mov
bound
ja
ds
repnz
sbb
or
xor
inc
jnp
and
mov
popf
jmp
jae
mov
es
xor
sbb
pop
xor
lods
push
andb
fcoms
or
sbb
inc
xchg
sub
enter
push
das
daa
lcall
cmp
cmp
fistpl
mov
jae
mov
xor
sub
mov
or
jnp
test
dec
clc
mov
jb
jge
mov
insb
push
add
cld
jns
sub
in
jp
stc
das
xchg
mov
mov
testl
nop
cmp
jl
hlt
jae
insl
mov
dec
divb
mov
aam
mov
cmpsl
dec
jno
int3
dec
mov
push
xchg
sbb
push
ficompl
popw
sub
aaa
xchg
xchg
jmp
xor
mov
imul
aad
test
xchg
cmp
enter
int3
scas
outsl
insb
cmp
push
scas
cmp
jnp
cwtl
push
arpl
dec
iret
xor
sub
dec
fsts
jp
fwait
imul
enter
scas
inc
pop
jno
in
push
jnp
ja
stos
imul
adc
sbb
stc
and
cltd
scas
push
jnp
sub
cli
sti
add
jle
dec
xor
lods
in
push
int3
and
inc
mov
lret
aam
pop
sbb
xchg
mov
mov
mov
jae
outsl
mov
ret
cmp
hlt
add
cltd
pop
jnp
sub
dec
jnp
popa
and
imul
mov
je
push
pop
lahf
push
dec
push
rcll
pop
pop
push
icebp
adc
inc
nop
out
cmp
sub
and
dec
scas
div
jl
inc
mov
dec
dec
fsubrl
xor
ret
inc
sarb
jnp
ficoml
xchg
pop
jp
das
mov
inc
shrb
mov
in
out
jnp
sub
decl
adc
cmpl
out
and
dec
jnp
xor
iret
bound
nop
jbe
das
xchg
pop
and
mov
jne,pt
leave
lret
lret
pop
jno
loop
mov
push
sbb
clc
enter
fisubrl
stc
or
ret
xchg
nop
push
inc
sub
insb
bound
add
out
cmp
pushf
cmp
sub
repnz
negl
imul
leave
mov
in
mov
jnp
pushf
cli
inc
test
sbb
jnp
dec
dec
daa
out
jp
jnp
sub
orl
test
push
mov
jg
stos
inc
or
insb
outsl
adc
push
or
lea
outsl
mov
xchg
aad
stc
insl
jns
rcr
jnp
sbb
lods
arpl
jnp
xchg
mov
adc
leave
in
movl
mov
dec
enter
arpl
push
scas
bnd
imul
dec
cli
sbb
mov
stc
dec
mov
sbb
lods
lahf
int
loope
jnp
mov
mov
call
pop
rcrb
stc
imull
jnp
push
xorb
jle
cmp
sbb
rcr
xchg
iret
or
loopne
jp
sbb
and
fcomp
and
push
adc
xchg
out
aam
jnp
mov
aam
jnp
mov
and
loop
xor
repnz
mov
pop
mov
jnp
test
enter
mov
mov
ja
or
lret
fwait
dec
push
cli
jmp
sub
dec
stos
outsl
test
dec
sti
cmc
test
or
inc
sub
cmp
xchg
cmpsl
dec
popf
xchg
jbe
repnz
jnp
test
mov
fldcw
das
pop
adc
outsb
mov
jbe
adc
sbb
cmp
pop
pushf
inc
jnp
adc
sbb
adc
inc
jno
cmp
test
jnp
out
xchg
test
jnp
pushf
lock
loop
imul
stc
cs
mov
jns
aam
pop
or
xchg
ss
insb
jae
das
jbe
xchg
mov
cmpsb
les
jnp
sbb
push
test
cmp
mov
xor
lods
adc
mov
std
in
and
or
out
adc
imul
ljmp
mov
mov
adc
push
mov
cli
out
ret
pop
jo
jnp
and
gs
inc
jg
mov
scas
mov
idivl
daa
outsb
pop
mov
ja
stos
fnstcw
in
dec
mov
repnz
mov
inc
cli
and
push
lods
adc
jnp
nop
xorb
sub
pop
push
popa
and
jnp
addl
jnp
push
imul
scas
sub
pop
mov
sub
sarb
pop
jbe
cmc
mov
dec
jmp
jle
push
inc
mov
sub
mov
inc
mov
mov
or
and
pop
mov
movsb
aad
aam
dec
mov
mov
ja
mov
loopne
mov
mov
xchg
xchg
mov
outsb
add
imul
imul
cld
sbb
lods
js
lods
jnp
push
mulb
cwtl
add
ja
in
jnp
or
xor
cli
xchg
out
or
insb
outsb
mov
dec
dec
jo
mov
test
or
cmp
and
jnp
adc
lcall
sbb
mov
pop
sub
ret
mov
xlat
adc
xorl
push
jnp
sbb
shrb
cli
repnz
bound
jmp
pushf
clc
pop
jae
sbb
loop
jnp
les
in
or
pushf
cltd
lcall
sbb
int
stc
negb
jns
pushf
mov
outsb
in
hlt
popf
outsl
rcll
jp
sub
out
or
ss
ja
test
daa
cli
in
jnp
iret
jne
lock
sbb
out
add
roll
push
sbb
arpl
adc
andb
xor
jnp
and
adc
lret
push
fidivrl
outsb
addl
jnp
mov
clc
subb
push
std
jnp
inc
or
je
cmp
aas
dec
cmp
cmpsb
jp
mov
nop
mov
ds
sbb
mov
or
loop
mov
fsubs
rolb
cld
jnp
xor
cmp
std
jnp
mov
xchg
mov
gs
cmp
pop
ja
fimuls
or
xor
jb
push
bnd
int
push
sbb
xchg
mov
movsb
lea
clc
pop
daa
xchg
fildll
jnp
fsub
jo
push
retw
je
jnp
clc
pop
mov
mov
out
stc
cld
dec
jnp
lods
add
ja
xchg
jnp
aam
or
sbb
or
xchg
stos
int3
add
add
inc
cmpsb
in
sbb
mov
xor
sahf
nop
sbb
pop
jnp
in
mov
imul
in
loop
test
loopne
cmp
jmp
and
repz
movsb
stc
mov
cmp
inc
lret
lods
ljmp
cmp
jnp
rcll
mov
xchg
mov
negl
cli
aam
mov
or
mov
dec
jle
xchg
out
dec
sub
cmp
or
call
lock
lods
jae
cmp
sub
shl
shr
lret
jbe
clc
fidivl
mov
es
jl
jp
mov
cmp
inc
push
sub
mov
jno
or
mov
jnp
jmp
mov
jnp
xor
cmp
test
dec
cmp
add
cmp
cmp
sub
sahf
lods
lret
das
cmp
and
pop
push
scas
or
jne
adc
jnp
sub
push
cli
mov
dec
mov
dec
lret
leave
cmpb
xlat
xchg
or
aaa
out
jmp
fidivs
mov
in
dec
sub
hlt
ret
ja
jg
in
enter
mov
pop
mov
xor
push
sub
in
jnp
clc
mov
sahf
cmp
pushf
mov
bnd
cmc
jnp
or
and
test
xchg
scas
mov
mov
and
cmp
mov
jnp
push
or
std
xchg
lret
jb
inc
out
sbb
jnp
out
inc
xchg
mov
xchg
aad
dec
out
mov
imul
push
and
outsl
cmp
jp
jno
add
xchg
jnp
cmp
push
mov
cmpsb
fdivrs
jae
mov
es
mov
sbb
mov
pop
xchg
pop
out
sbb
lret
jnp
cmp
daa
jmp
lods
jnp
in
cwtl
inc
fcompl
enter
into
out
sbb
add
mov
stc
decb
mov
repz
jnp
inc
int
loop
iret
nop
mov
imul
aad
fldt
in
sar
out
roll
fs
xlat
stos
imul
fsub
mov
mov
pusha
jge
lea
add
jnp
jns
mov
cmp
fisubrs
mov
sub
jnp
stos
aas
testb
ds
pop
pop
sbb
call
jnp
mov
and
push
cmpsl
jg
ljmp
jge
shrl
insl
arpl
jne
mov
and
outsl
aas
mov
inc
cmp
xorb
ss
outsb
mov
insl
stos
xchg
fsubrs
xor
sarl
jnp
adc
mov
stos
mov
jns
sbb
ss
ret
mov
mov
adc
les
sbb
jnp
jg
mov
sbb
lret
pop
dec
jae
jb
jp
imul
out
in
imul
iret
cmp
add
xchg
addr16
movsb
rolb
jnp
push
aad
test
jae
jnp
or
push
je
js
mov
ljmp
rcr
idivl
aaa
jno
jnp
mov
nop
push
jnp
cmp
adc
pop
sarl
fidivs
dec
int
sti
bnd
mov
fcomps
jnp
xchg
adc
test
sbb
call
sti
sub
pushf
les
sbb
popf
imul
and
cmp
jnp
sub
inc
ret
jnp
or
pop
enter
incb
jbe
lret
mov
cmp
sti
or
addr16
or
outsb
mov
ljmp
add
jnp
cld
jo
mov
ret
dec
mov
mov
mov
in
or
push
ja
push
sti
loope
out
or
hlt
jnp
push
xchg
mov
jnp
mov
xor
sbb
sbb
js
test
and
ss
mov
outsl
pop
mov
ss
add
jecxz
js
add
mov
xor
and
das
mov
lods
aad
in
out
jne
jnp
popa
mov
sub
lcall
outsl
je
fwait
mov
cmc
lret
mov
imul
add
inc
lahf
jnp
xor
test
lret
jg
outsb
mov
push
out
sti
jnp
add
dec
js
insb
divl
pushf
movsb
jnp
enter
hlt
lods
sub
jbe
out
push
popf
cmp
xor
lret
ss
enter
mov
pop
sbb
lret
std
jb
fwait
pop
imul
sub
or
bound
push
mov
xchg
inc
xchg
pop
es
jnp
jp
mov
jnp
ljmp
int
jnp
lcall
movsb
movsl
jnp
jo
ret
dec
and
jle
aaa
repz
push
pop
test
jae
sbb
jp
sbb
js
or
dec
push
ja
shrl
inc
cwtl
push
inc
jae
gs
jl
das
mov
sub
cld
adc
adc
insl
das
mov
jnp
add
dec
jnp
js
add
cmc
cli
je
es
jb
jecxz
jnp
popf
sub
adc
dec
sub
add
gs
add
lods
mov
and
inc
cmp
arpl
mov
cmc
jge
sbb
ficomps
xchg
jcxz
dec
pop
cmp
dec
dec
cld
jnp
pop
movsl
add
iret
inc
ss
sub
or
sti
hlt
jae
push
mov
rorb
outsl
fdivrs
movsb
jnp
mov
jmp
jmp
and
mov
jae
add
ss
fildl
iret
add
dec
call
jae
insb
adc
fwait
mov
inc
or
decl
dec
jne
pop
add
daa
ljmp
in
imull
cmpsl
jae
sub
stc
push
enter
pop
outsl
scas
xchg
icebp
pop
adc
fimuls
in
imul
ret
popf
addr16
xchg
loope
sbb
jno
cmp
push
idivl
enter
mov
pop
cmpsl
xchg
or
jnp
and
lock
into
mov
mov
lahf
data16
loop
and
fcomps
divl
orl
add
cmp
xor
bound
call
dec
ja
jns
jne
and
repnz
lock
aam
bound
icebp
pop
stos
jmp
loopne
jnp
aas
ljmp
fwait
mov
repz
pop
mov
outsl
add
movsb
inc
jne
mov
jecxz
or
mov
idivl
fsts
jbe
jne
push
clc
lock
dec
cmp
stc
add
inc
lds
imul
out
test
adc
mov
in
insl
push
jnp
test
lods
sbb
rcll
jnp
sti
lret
mov
dec
push
inc
pop
push
gs
jbe
adc
lods
jnp
enter
add
push
jnp
clc
js
inc
push
mov
cli
xchg
das
shll
and
mov
jl
jnp
sub
jb
sbb
in
daa
mov
jae
and
jnp
pop
mov
jp
fcomip
shrl
fwait
std
sbb
jo
in
jle
jnp
xlat
sti
sub
push
dec
mov
leave
xor
push
gs
or
jmp
xchg
mov
jnp
sarl
outsl
xchg
lock
mov
insb
and
mov
adc
xchg
add
mov
mov
dec
lcall
jnp
xor
dec
int
dec
cmp
div
mov
sbb
std
in
pop
call
jnp
jns
pop
push
jnp
fstps
imul
inc
ljmp
cli
mov
and
mov
inc
pop
sub
enter
ds
jnp
mov
movsb
pop
cli
jnp
out
in
dec
stos
inc
cmpsb
imul
xchg
in
mov
imul
sub
jg
mov
insl
sub
scas
mov
arpl
dec
pop
cmp
lods
jnp
frstor
jnp
xor
movsb
push
hlt
imul
aas
clc
mov
pop
outsl
lcall
out
jo
and
and
cmpsb
hlt
jno
inc
cmp
testb
fmuls
dec
repnz
scas
sub
mov
jnp
aaa
add
ret
mov
js
mov
mov
or
push
sub
inc
stc
add
add
and
mov
add
cmp
jae
xor
ja
enter
add
lods
subl
ss
lret
pop
sub
ja
mov
inc
cmp
mov
add
enter
popf
dec
fisttps
fimuls
add
sub
dec
inc
or
loop
mov
jnp
add
cmp
xlat
mov
sarl
fwait
cs
in
sbb
les
dec
popa
xlat
cmp
jno
loop
jnp
jbe
mov
mov
or
insl
push
nop
test
mov
test
cmp
ljmp
dec
xor
in
repz
imull
dec
mov
insb
mov
add
stc
out
insl
test
cmp
aad
mov
add
movsl
loope
lods
xor
pop
cmpb
xor
sti
arpl
xchg
js
and
sbb
stos
lods
sbb
cmp
or
push
mov
xchg
cmp
pop
add
jo
imul
jns
sub
mov
aam
mov
lret
repz
cmpsl
or
jnp
mov
adc
pop
jl
mov
xor
fdivrp
pop
jnp
es
mov
mov
push
fcoms
cmp
outsl
or
cmpsl
in
nop
outsb
lods
dec
sub
mov
push
jae
out
and
dec
or
sub
cmpsb
imul
dec
mov
enter
jnp
test
xor
jp
jnp
test
loopne
jnp
dec
xchg
idiv
fidivrl
jnp
jne
xor
scas
scas
jnp
in
jno
jo
push
das
aam
jnp
dec
xchg
sub
test
test
pop
mov
stos
sub
jle
jecxz
je
mov
insb
adc
and
test
adc
sub
jne
pop
mov
xor
bound
sub
inc
daa
jnp
jl
push
inc
add
mov
fidivrl
jmp
lea
scas
ds
sub
stos
xchg
bound
imulb
mov
mov
dec
jns
outsl
fdivs
pushf
sub
pop
jnp
aaa
bound
mov
ret
mov
mov
mov
jnp
inc
dec
adc
mov
xorl
jnp
movsb
lds
mov
jnp
out
aaa
pop
sti
lods
mov
jle
ret
insb
mov
sahf
imul
xchg
ja
dec
sub
add
js
out
cld
cmp
mov
sbb
jae
int
pop
cmp
ret
cmp
ficompl
add
jmp
hlt
jnp
imul
xorl
ljmp
and
in
int
jo
jnp
sti
or
dec
push
dec
lret
dec
jp
iret
jae
into
subl
mov
lcall
negb
mov
or
dec
gs
cli
out
decl
mov
lods
icebp
jnp
pop
out
mov
adc
call
or
or
mov
jl
fdivrl
fmuls
insb
jnp
aas
test
jo
jnp
shll
or
mov
repnz
sahf
lret
cmp
aaa
cmpsl
sub
xlat
int3
cli
jmp
jnp
dec
mov
test
andb
cmp
addr16
repz
movsb
pop
shrl
jnp
mov
test
leave
imul
jnp
scas
or
xor
and
mov
xlat
adc
iret
sub
divl
cmp
jb
push
sbb
lods
nop
or
jae
mov
inc
push
pop
idivb
fimuls
add
jns
out
add
test
pop
and
dec
int3
aas
cmp
shrb
bound
jnp
cmp
test
outsl
ljmp
mov
sub
jnp
lahf
or
dec
cmpsb
repnz
ret
sarl
lret
out
test
outsb
add
push
sub
lods
pop
insl
daa
mov
xlat
mov
orl
lods
mov
jle
ljmp
outsb
sbb
fildll
xor
mov
sub
push
scas
or
xorb
cmp
movsl
jge
pop
aas
pop
sahf
jnp
ss
jp
pop
add
jb
mov
cmp
das
mov
dec
insb
mov
jnp
stos
lods
jno
mov
jnp
sti
fldt
jg
insb
pushf
jnp
je
mov
imul
ljmp
loopne
jbe
popf
out
shlb
jnp
fdivrs
pop
jnp
dec
call
daa
stos
hlt
mov
aaa
shlb
xchg
push
jnp
in
fwait
ret
fisubl
jp
js
ficoms
jnp
mov
jbe
jnp
xor
push
stos
std
lret
dec
dec
pop
cs
mov
inc
outsl
add
ss
lods
call
pop
data16
xchg
imul
imul
lret
scas
fimuls
jnp
idivb
jp
clc
repz
mov
sub
xchg
jnp
or
sub
test
jnp
dec
std
jne
mov
test
jo
pop
fnstcw
mov
xchg
pushf
jae
cmc
jnp
pushl
shrl
outsb
or
xchg
cli
leave
mov
and
jp
arpl
mov
dec
adc
sub
adc
fistps
cmpsl
mov
and
inc
mov
jnp
xlat
cwtl
test
fwait
mov
xchg
das
sbb
sbb
lock
dec
int
jnp
sbb
jnp
stos
and
sub
das
jnp
mov
lods
xchg
jnp
sbb
push
lret
add
sbb
in
jne
pusha
jnp
mov
or
pop
dec
add
mov
hlt
or
mul
jnp
daa
sub
jl
pop
sarl
cli
lret
outsb
xor
cmc
dec
jne
test
cmpsb
jb
pop
adc
int
jo
outsl
insl
or
arpl
in
cmpsb
mov
fs
fildl
cmp
mov
or
mov
dec
jle
jae
push
jbe
add
adc
mov
xor
xchg
leave
aas
sub
sarb
inc
jmp
sbb
sub
cmp
mov
pusha
js
push
insl
push
adcl
jnp
push
mov
cmp
mov
js
xor
ja
mov
jnp
add
aam
mov
mov
cmpsl
sbb
fisubrs
cmp
or
mov
adc
inc
pop
in
sarb
dec
mov
es
shlb
xlat
xor
xchg
mov
sahf
out
adc
test
mov
xor
sahf
loop
dec
ret
mov
insl
ret
push
cltd
lcall
xchg
mov
aaa
je
icebp
jnp
js
sub
push
adc
test
xchg
mov
clc
test
fistpl
sar
jnp
and
fisttpll
push
mov
sbb
cli
clc
aaa
ss
xchg
loop
lods
inc
xchg
imul
rcll
pushf
popf
cs
cmc
jnp
andl
jnp
or
adc
ja
add
jnp
dec
adc
sbb
cli
dec
cmp
lock
jnp
int3
cmp
xchg
cmp
inc
sti
push
daa
out
and
mov
jns
loopne
adc
sbb
mov
jnp
aaa
jl
mov
sbb
xchg
stos
cmp
mov
js
and
sarb
ret
adc
cmp
iret
mov
or
cmc
xchg
push
mov
lods
xor
out
jnp
xor
out
cmp
in
aaa
je
jnp
neg
rcrl
inc
pop
lods
jns
lock
scas
inc
sub
imul
cmc
push
lret
insb
icebp
jns
xor
std
out
ss
clc
jns
or
mov
popf
jg
int3
push
jnp
or
cwtl
dec
stos
and
jnp
jbe
repnz
sub
lea
jnp
nop
sub
jnp
xchg
mov
push
jnp
inc
std
cwtl
cld
jb
xor
fcoms
dec
aaa
out
call
movsl
xorl
pop
insl
push
cli
jnp
push
pop
sub
mov
jp
dec
js
sti
pop
push
sarl
sbb
and
jmp
gs
ss
outsl
in
xor
mov
insl
call
repz
cmpsl
jne
mov
loop
jb
imul
scas
fnstenv
mov
hlt
mov
addr16
fsubs
imul
push
fisubl
add
idivl
mov
pop
and
jnp
mov
mov
cmpsb
sahf
sub
jp
cmp
or
jnp
pop
int3
inc
movsl
dec
add
mov
scas
pop
push
jnp
xchg
mov
test
mov
jnp
stos
mov
in
adc
sar
sarb
test
jmp
scas
dec
cmp
cld
adc
ss
inc
std
cmpsb
js
dec
pop
or
sub
leave
cmp
fsubs
jbe
fisubs
fnstsw
cmp
in
add
pusha
rol
cld
aaa
add
inc
aad
cmp
jg
stc
fst
sbb
outsl
stos
xor
test
in
mov
jnp
and
mov
jnp
adc
outsb
inc
stos
nop
movsb
lock
mov
or
push
ret
mov
subl
pop
cli
sarl
and
imul
pop
scas
mov
movsl
bnd
shlb
push
jnp
xor
fnop
ja
cmp
sbb
xorl
adc
sub
in
and
mov
pop
scas
push
mov
jnp
add
sub
pop
bound
jns
mov
push
xchg
jnp
call
in
loope
ljmp
jbe
push
and
call
jle
jae
imul
rcrl
push
mov
jnp
push
xchg
mull
lret
sub
scas
mov
pop
xor
jne
dec
test
sub
add
jnp
add
test
push
adc
imul
sti
mov
int3
leave
jno
out
cmp
jmp
pushf
pop
xchg
cli
stos
push
mov
mov
addb
nop
inc
mov
scas
test
jp
push
or
orl
mov
or
enter
jae
sub
fisubs
neg
jae
push
push
cmp
sti
or
repz
xor
mov
movsl
scas
lret
mov
fimuls
repz
stos
jbe
mov
dec
lret
dec
mov
pop
adc
cli
das
jnp
jb
stos
or
inc
ja
lahf
into
orl
xlat
add
push
jnp
sub
cli
imul
fdivs
mov
cmp
mov
mov
add
out
out
cmp
into
mov
push
sbb
popa
shll
lret
mov
xchg
jnp
psubd
loop
mov
rorl
repnz
hlt
outsl
jae
bound
jnp
and
or
movsl
xorl
cmp
adc
jnp
inc
shll
cmp
add
repnz
push
enter
in
inc
jo
lock
dec
icebp
cli
cmpl
sahf
jns
xchg
mov
jnp
scas
les
or
lods
aam
insl
fadds
inc
xchg
aaa
dec
aas
cmp
repz
jae
lock
jnp
call
ret
xchg
push
mov
dec
or
sbb
aas
ja
repz
lret
dec
dec
gs
jnp
dec
cmp
cmp
inc
sarl
ret
out
bnd
rcrb
add
inc
negl
jg
pop
xor
ja
cld
lahf
gs
dec
daa
andl
ret
inc
jnp
mov
mov
dec
jne
or
and
mov
xchg
stos
addr16
mov
push
roll
movsb
pop
stos
pop
lahf
add
sub
add
push
outsl
push
jnp
jb
sbb
mov
mov
jle
fiaddl
jnp
sbb
mov
in
dec
jns
cwtl
daa
inc
push
mov
je
xlat
lret
jb
cmp
sbb
xor
fsubrs
add
mov
mov
shrb
adc
xor
jnp
mov
pusha
xor
dec
jb
cli
or
or
adc
outsl
pop
fiaddl
call
cvttps2pi
add
mov
leave
and
out
bound
pop
movl
xchg
jnp
call
xacquire
sub
dec
or
pop
or
mov
inc
sbb
leave
xchg
bound
push
dec
jnp
ret
je
mov
jnp
daa
lods
shl
push
out
hlt
jnp,pn
sub
sbb
dec
pop
cs
enter
in
pop
cmp
xor
scas
ficompl
cmpb
outsb
jnp
repz
jnp
pop
push
mov
lea
push
loop
stos
cmp
jle
je
dec
cli
bound
popf
in
jnp
movsb
addr16
cs
daa
sti
dec
mov
mov
adc
gs
in
daa
cmpb
inc
dec
jg
dec
jl,pt
gs
fadd
jnp
out
add
cmp
mov
mov
imul
jmp
dec
mov
bound
xor
dec
jnp
mov
movsb
gs
mov
out
mov
daa
jmp
cmc
cmp
ret
cmp
jnp
jo
sbb
adc
into
divl
mov
jae
fwait
ljmp
xor
lret
cmp
aam
aad
xchg
arpl
fmul
lods
test
pop
inc
fwait
jnp
cmp
jmp
or
iret
pushf
jne
push
xchg
stos
pop
jnp
addr16
filds
lea
lahf
pop
aaa
in
fidivrs
in
and
sbb
int3
jnp
outsl
and
and
repz
cmc
mov
sbbb
in
jnp
stos
and
lahf
sbb
jno
adc
or
pusha
arpl
and
mov
mov
or
stos
sbb
das
xchg
jbe
dec
icebp
pop
fwait
outsb
stos
mov
shll
stos
or
mov
ret
or
push
push
in
jp
jnp
dec
mov
aaa
push
int
or
sar
dec
sub
addb
mov
mov
or
int3
push
mov
push
inc
es
sbb
loop
cmp
ret
loope
pushf
andl
push
dec
xor
in
dec
mov
insl
inc
packsswb
jle
pop
popa
cli
jnp
sub
sarb
in
xor
xchg
iret
mov
jnp
ss
int
xchg
aaa
jnp
jle
imul
jg
pop
xor
test
inc
scas
sbb
in
or
sub
pop
adc
cli
clc
insl
lods
test
add
or
push
call
in
daa
jnp
pop
enter
ret
out
or
sub
ja
dec
cld
xor
orl
jnp
ret
jnp
cmpsb
scas
in
call
xchg
in
popf
adc
arpl
xchg
inc
imul
js
push
xchg
aaa
in
jbe
sub
cmc
jnp
outsb
and
outsl
cmp
cmpsl
xor
cwtl
mov
fdiv
mov
pop
sub
and
in
xchg
push
mov
cmp
out
jbe
loope
sub
mov
in
and
pop
jnp
jb
aaa
xchg
adc
sub
fidivrl
pushf
in
clc
das
stos
pop
mov
jne
cmc
js
gs
mov
sbb
ss
xor
lods
stos
sub
jl
addr16
or
adc
xor
jnp
inc
imul
adc
cli
mov
insb
iret
jno
lods
std
jnp
popa
mov
mov
shrl
pop
in
imul
lods
cmp
test
popf
insl
jnp
mov
rcr
push
cmpl
notl
jo
orl
pusha
jb
aaa
in
jnp
mov
and
imul
pushf
adc
jnp
scas
hlt
or
push
jmp
push
int3
mov
cmp
cwtl
pop
xchg
xor
pop
test
das
popa
out
jnp
lods
xor
and
add
insb
daa
aaa
lahf
mov
sub
cs
ja
xchg
dec
imul
sbb
hlt
mov
fmul
ds
xor
les
push
jno
adc
dec
inc
or
push
or
mov
sub
adc
pop
sub
fsubs
shll
xchg
daa
sarl
into
ret
idiv
cld
xlat
mov
inc
jbe
fildl
jecxz
jnp
fld
sarl
sbb
or
sarl
add
inc
cmp
cli
jae
sar
loopne
jnp
push
sub
enter
js
or
das
scas
sub
jnp
pop
sbb
ljmp
roll
aaa
repz
dec
push
mov
fsubr
or
lds
xchg
icebp
bound
adc
shlb
jmp
jnp
notw
xor
add
sub
movsl
pop
mov
or
pop
mov
sub
jae
xor
insl
mov
jb
lods
pop
jnp
xor
xor
mov
sub
sbb
mov
ret
cmpsl
aam
mov
das
fcomi
dec
xchg
stos
jnp
mov
or
mov
jnp
cmp
sbb
lods
lret
inc
imul
out
xor
push
jnp
fnstenv
js
cmp
mov
sub
fstpt
shl
dec
cmp
sarb
mov
aam
sub
sbb
mov
mov
fdivr
push
lock
jle
enter
jnp
cli
push
and
jnp
sbb
mov
jnp
into
push
pop
pop
inc
xchg
fidivl
push
pop
jmp
mov
xor
xchg
cltd
or
jnp
in
dec
mov
jbe
jnp
mov
outsb
or
loopne
dec
jl
ja
lods
stos
hlt
lock
mov
sbbl
call
xor
add
scas
xor
jmp
adc
add
and
cli
insb
js
ja
testl
jno
push
test
jge
sub
test
mov
int
popa
jno
mov
jge
dec
mov
enter
sbb
push
ret
arpl
out
adc
jnp
jbe
inc
mov
cmp
pop
push
hlt
sbb
sub
jp
dec
and
aas
into
in
enter
mov
add
cmp
mov
jae
mov
pop
mov
mov
add
dec
cmp
cmp
mov
jnp
sub
ret
or
aad
fcompl
or
jnp
enter
jae
les
fwait
jnp
adc
inc
jnp
lods
imul
push
pop
bound
movsl
jnp
mov
cmp
sbb
push
mov
stc
push
mov
adc
shrl
lock
inc
enter
pop
out
mov
in
repz
movsl
push
push
cmpsl
cmp
imul
mov
dec
inc
mov
sub
mov
push
call
pop
and
out
mov
add
pop
xchg
and
outsl
sub
in
mov
or
hlt
sub
outsl
lahf
scas
mov
or
or
js
push
insb
icebp
sahf
lds
jnp
gs
fwait
pop
lods
and
jge
shrb
fisubs
pop
in
mov
repz
lock
pop
push
xchg
add
cmp
pop
lea
pop
in
inc
sub
push
in
dec
sbb
fstpt
outsb
fildll
sarb
in
es
mov
in
jnp
xchg
clc
jg
les
jnp
call
and
or
dec
or
jnp
add
push
dec
push
or
push
jp
xor
sbb
jnp
fcompl
lret
scas
lock
mov
pop
cmp
cmp
xor
sbb
call
movsl
cli
pop
jno
mov
jnp
stos
jp
or
lds
push
dec
mov
js
jg
sbb
outsb
jo
adc
mov
jmp
test
mov
fldenv
cmpsl
xor
mov
fsubrs
cltd
mov
adc
and
inc
nop
pop
mov
jp
jnp
test
popf
jnp
cmpsb
mov
sbb
mov
cmp
jnp
outsb
jne
inc
push
jnp
mov
or
adc
pop
aaa
sbb
ja
jnp
cmp
and
enter
ds
jnp
cmp
jmp
mov
lcall
ljmp
pusha
lods
cmp
repnz
in
sbb
dec
push
add
inc
fdivrp
pop
jae
stos
insl
lods
pop
adc
std
mov
adc
jnp
xchg
sarl
addl
sub
dec
mov
xchg
pop
out
fdivrl
mov
inc
jnp
add
out
cli
push
lret
js
push
jnp
stos
push
pusha
jnp
pop
pop
xor
sahf
aad
sbb
push
mov
or
jnp
xor
mov
jnp
xor
mov
rclb
mov
outsl
sbb
or
jnp
jns
xor
fcmovnu
scas
mov
xchg
lods
jnp
sub
mov
lcall
sahf
in
mov
bound
mov
jp
push
jnp
cli
sub
ja
lods
fisubrs
cmp
in
xchg
cmp
adc
push
hlt
pop
sub
mov
or
xchg
mov
push
xchg
test
sbb
outsl
and
cmp
aam
push
flds
cmp
cli
xor
dec
data16
sub
cmp
ljmp
jne
sbb
sub
jnp
sub
mov
in
lret
es
mov
pop
testl
lret
jnp
arpl
loop
push
cmpsb
jnp
or
mov
ficoms
add
enter
out
test
jae
shll
jnp
xchg
popa
jge
ss
jb
cmp
outsl
pop
and
jmp
sub
xchg
add
out
lods
clc
xchg
repnz
sub
inc
jnp
jecxz
inc
and
sbb
adc
push
out
stos
cmc
pop
xor
ss
popa
lahf
jecxz
in
jmp
enter
adc
dec
mov
or
lret
insl
fstps
out
jnp
sub
lahf
mov
dec
mov
mov
aam
jnp
scas
out
test
imul
pop
aad
ffree
mov
daa
adc
jmp
mov
and
xchg
sub
mov
andl
jne
cmc
das
cmp
mov
aaa
out
jnp
fbstp
aam
pop
jnp
into
lret
sub
orb
out
mov
hlt
pop
mov
nop
or
mov
imul
push
xchg
inc
xchg
push
jge
push
add
ja
push
mov
clc
mov
mov
mov
loope
cltd
lock
jnp
sub
sub
fcoml
jnp
lds
imul
push
stos
std
or
sub
mov
insl
int3
les
xorl
jnp
inc
mov
pop
xchg
addr16
sarb
fstpl
sbb
or
std
arpl
dec
sbb
xor
in
push
inc
out
mov
jnp
iret
or
sahf
pop
xlat
push
je
aaa
ds
jnp
xchg
sub
filds
inc
imul
sbb
xor
sub
shrl
push
lahf
imul
jno
jb
add
push
jnp
stc
inc
push
shrl
jae
int3
in
clc
add
jnp
push
mov
lock
jp
out
and
cli
sbb
pop
jmp
jnp
push
pop
mov
bound
mov
scas
sub
jmp
or
repnz
repz
add
cmp
dec
jb
fisttpl
repz
sbb
xor
inc
pop
jecxz
mov
dec
sub
pusha
dec
shl
jo
dec
jnp,pt
add
fidivrs
mov
xchg
sub
push
jnp
mov
outsb
rcrb
jo
xchg
outsl
inc
jbe
dec
inc
and
cmp
mov
push
in
xor
stc
push
repnz
fmuls
bswap
fnstenv
int3
cli
outsl
jg,pn
jnp
xlat
inc
mov
jnp
push
jns
sbb
jecxz
jnp
inc
js
lret
loopne
fwait
imul
lods
push
jns
sub
out
jne
pop
or
jb
xchg
adc
mov
adc
test
mov
jnp
gs
pop
ret
sub
dec
stos
sbb
jns
jge
testb
or
clc
and
out
cmpsl
jl
scas
xchg
in
ja
pusha
jmp
push
mov
rcl
xchg
ror
sbb
cmp
ja
in
inc
nop
adc
dec
call
sbb
xlat
sbb
xor
fildl
cmpsl
pop
jl
rclb
ds
cmp
jnp
mov
js
xor
inc
or
int3
mov
xchg
push
subb
test
loope
xchg
shll
sbb
ficompl
add
out
jnp
push
loopne
sbb
std
stos
loope
dec
ss
outsl
xchg
push
out
jnp
mov
fnsave
jnp
sahf
jno
out
loopne
dec
shll
es
and
cmp
push
in
push
jnp
cli
cmp
cmp
mov
cli
repz
popl
jle
call
push
inc
and
jecxz
xchg
icebp
jns
push
jnp
scas
mov
mov
dec
lock
jnp
aam
xor
jnp
sbb
mov
test
jae
mov
pop
xchg
lock
jmp
mov
lcall
adc
ljmp
mov
cmpsb
jp
adc
scas
stos
dec
mov
stc
sub
fsubrs
xor
mov
and
enter
sarl
out
fcmovbe
lcall
jne
add
jnp
movsl
cmc
out
push
fistpll
add
xor
dec
fisubl
and
je
repz
mov
hlt
insb
jbe
out
jnp
push
mov
jecxz
cmp
xlat
pushf
jnp
adc
fs
pop
push
scas
out
and
mov
into
xchg
lcall
mov
ss
xor
pop
aas
hlt
sub
mov
sbb
outsl
cld
add
lret
sar
pop
xchg
sub
push
jnp
xor
sahf
mov
and
ret
cmp
lock
mov
sti
mov
sub
mov
jns,pn
cli
xchg
jno
pop
clc
jnp
outsb
insb
cmp
pop
call
xor
sub
je
ss
mov
xor
test
lods
lea
movsb
scas
lret
sub
pop
dec
pop
lret
fistpl
push
and
scas
lea
mov
push
cmp
and
incb
pop
mov
and
jmp
push
cmp
dec
jnp
js
mov
cmp
xchg
xor
pushf
adc
pop
jp
mov
test
pushf
and
int
push
xchg
pop
dec
ljmp
jae
out
repz
adc
pusha
jb
xchg
rcrb
xor
push
xchg
sbb
cmp
mov
jle
adc
mov
mov
jo
imul
not
jns
inc
jne
cmp
cli
jnp
push
nop
mov
sbb
mov
jnp
cmc
sarb
push
mov
outsl
cli
aaa
mov
jnp
xchg
fsubs
jnp
jo
lahf
xor
ret
sub
cld
jnp
add
push
flds
pop
jnp
outsb
adc
je
aaa
sub
jnp
fbld
push
stc
loop
mov
mov
jae
lock
sub
jnp
jg
xchg
mov
push
jle
sbb
movsl
imul
inc
outsl
dec
push
stos
jae
imul
mov
jne
cmp
outsl
push
jb
movsl
ret
jnp
add
out
jp
ss
push
idivb
mov
push
lret
jnp
clc
xor
in
jb
jnp
sub
iret
mov
adc
jmp
xor
cltd
cmp
divl
jae
out
push
jnp
inc
rclb
pop
jbe
jnp
lcall
jnp
sahf
push
fs
imul
test
mov
pop
jne
sahf
mov
cli
or
ss
insl
xor
mov
test
test
in
popa
sarl
xchg
jae
pusha
dec
sub
jge
cli
aam
or
or
stc
mov
test
sbb
sub
adc
or
bnd
jno
adc
into
xlat
push
xor
popa
mov
loope
sub
div
cmp
rcrb
mov
lret
sub
popf
out
inc
inc
pop
mov
jno
adc
gs
insl
xor
dec
dec
mov
jnp
push
stos
pop
lods
popf
loopne
jl
mull
daa
mov
out
into
jnp
sub
mov
cli
xchg
sti
out
xor
jnp
arpl
pop
mov
pop
sub
mov
mov
jp
sub
mov
jnp
scas
jae
addl
add
aaa
pop
cmc
jnp
rcrl
jnp
lock
add
jnp
repnz
das
cmp
repnz
jnp
lods
mov
jp
xor
cmp
mov
aad
fdiv
ret
inc
jnp
outsl
add
cmc
jge
dec
mov
mov
cmpsl
mul
jnp
mov
inc
sbb
mov
sub
lret
cmp
ret
jnp
sub
ljmp
jge
add
cmp
or
movsl
mov
aaa
cmpsl
jnp
pop
int3
enter
sbb
adc
fisttps
lods
xchg
jecxz
daa
push
jmp
xrelease
cmp
out
jnp
cs
dec
jecxz
jae
test
cmovne
xlat
pushl
inc
imul
daa
jns
popf
jnp
push
jp
cli
mov
pop
or
jnp
mov
cmp
mov
pop
dec
mov
sub
out
inc
mov
sti
pop
sbb
fistpl
pop
jge
dec
mov
jae
mov
sub
jae
push
ss
pop
dec
sar
lret
lods
jnp
int3
mov
xor
bound
in
mov
sti
jnp
lret
stos
xor
stc
cmp
out
or
test
cmc
fwait
in
cmp
ja
out
imul
scas
je
jnp
ret
cmp
or
sub
call
pushf
jnp
imulb
cmp
aaa
jnp
jecxz
sub
cmp
push
jae
aam
cmp
mov
gs
mov
adc
jnp
stos
enter
dec
xor
sub
sub
fcoms
jmp
xchg
mov
push
push
xchg
mov
push
stos
sti
inc
int3
jnp
jmp
aaa
xchg
mov
pusha
jnp
shl
and
jo,pn
sub
dec
fisttpl
pop
dec
test
jle
dec
sbb
xorl
sub
das
jnp
sbb
ret
stc
sbb
insl
or
bound
jp
sbb
push
push
xor
cli
pop
pusha
addr16
pop
dec
jle
inc
in
arpl
jb
sahf
lret
pushf
mov
js
and
int
fidivrs
stos
aas
call
mov
int3
fwait
arpl
pop
jp
jmp
mov
push
pop
jae
pop
call
mov
jge
xchg
xchg
outsb
popa
jbe
and
fwait
push
or
lea
andb
cmp
and
je
dec
jnp
daa
xchg
fsubrl
cmpsb
adc
xchg
push
adc
test
jb
or
jp
xchg
outsl
repz
stc
stos
xor
lods
inc
mov
mov
fs
lret
push
xchg
cltd
in
add
lahf
pop
mov
pushf
dec
mulb
inc
rep
add
mov
xchg
das
pop
xor
jnp
push
out
adc
sbb
cs
insl
cwtl
jmp
pop
mov
lea
cs
js
pop
stos
mov
xchg
and
or
push
imul
mov
adc
xlat
sbb
iret
mov
add
sub
lret
adc
lods
stos
insl
aad
mov
pop
dec
leave
sub
icebp
insb
cld
jae
flds
idivb
aam
frstor
or
ja
loop
ret
enter
stos
push
and
scas
inc
bound
mov
inc
push
enter
jnp
repz
lret
arpl
or
jnp
and
jnp
and
xlat
dec
in
jno
mov
je
mov
cmp
dec
push
data16
jb
jnp
pop
fstpt
lods
lret
out
inc
in
ja
out
cld
cmp
sbb
and
test
jnp
xor
fwait
pop
dec
mov
daa
cli
sub
in
sbb
or
pushf
jnp
adc
mov
daa
stos
mov
sub
inc
sub
jmp
dec
dec
jo
xchg
pop
scas
in
sbb
fcoml
cmpb
jl
jmp
add
jnp
std
lods
or
daa
pusha
cmp
inc
clc
mov
mov
movsb
jecxz
imul
les
fs
jo
cwtl
xchg
dec
ss
rorb
stos
out
enter
into
sahf
fisubl
xchg
xor
mov
insl
sbb
pop
mov
addl
pop
lds
or
shr
ljmp
dec
cltd
inc
inc
push
stos
insl
std
lods
aad
outsl
xchg
push
aaa
push
sti
scas
pop
dec
or
jge
aad
xor
and
inc
call
or
push
nop
jnp
xor
sub
sarl
mov
jo
mov
mov
aad
pop
pop
mov
jg
xchg
mov
dec
mov
mov
jnp
nop
mul
aaa
andl
dec
jns
cmp
push
pop
mov
cmp
rcr
ret
mov
ja
mov
sub
cmp
lret
jnp
inc
addr16
insl
sbb
xor
xorl
jnp
pop
pop
fucomi
sti
fisubs
hlt
jb
popa
or
aaa
cli
insl
xchg
rclb
stos
js
add
jecxz
popf
sub
imul
push
and
cmpsb
mov
mov
xorl
or
or
dec
fstpt
mov
int
mov
jo
jecxz
mov
sub
mov
or
sbb
jecxz
and
jnp
cmp
adc
xchg
adc
hlt
cmc
sbb
pop
push
ljmp
sub
dec
push
jnp
mov
or
and
adc
fsincos
arpl
subb
stos
push
sbb
lock
popa
jns
jecxz
es
inc
outsl
in
ret
movsl
js
shll
xchg
outsb
push
or
add
test
pop
mov
stos
and
dec
fimuls
cli
aaa
insb
jo
gs
out
mov
xor
and
xchg
lret
enter
test
inc
aad
mov
in
jb
mov
aaa
ja
out
or
pop
addr16
jmp
je
aam
mov
pusha
cmp
insb
sub
cmove
or
sub
aad
or
cmp
dec
outsl
popa
sti
icebp
xchg
orl
outsb
dec
aas
lahf
es
or
lds
sbb
adc
fdiv
mov
ja
jnp
scas
aam
xchg
and
xor
add
cltd
xchg
mov
hlt
je
arpl
fbld
sbb
or
outsb
je
jnp
mov
inc
aad
push
jnp
rcll
mov
sbbb
cmp
or
fcoms
mov
add
dec
lret
fistpl
sbb
mov
sbb
pop
cmpsl
push
mov
lods
std
push
jnp
hlt
pop
popa
jne
sbb
jnp
push
lret
sub
mov
push
inc
icebp
cmp
jns
mov
and
std
imul
sbb
or
mov
mov
and
sub
clc
hlt
mov
and
dec
out
testl
xchg
fldcw
cmp
imul
or
decb
jnp
stos
out
jp
or
aaa
push
xor
and
mov
int3
inc
sub
inc
loopne
cli
cmp
lods
add
outsl
call
fidivrl
inc
mov
sub
roll
sub
xor
pop
mov
ss
jne
cld
jae
sti
cmpb
and
call
jle
pop
inc
fidivl
add
lock
xchg
ss
and
sub
mov
fidivl
pop
inc
inc
sub
jnp
push
and
sbb
mov
out
cmp
xchg
sbb
or
push
jmp
sub
adc
pop
xor
mov
dec
dec
jnp
std
push
xchg
fistps
xchg
mov
lret
popa
cmp
insb
cld
fistl
xorb
jae
cmp
lret
jp
div
mov
or
mov
repnz
cli
jnp
leave
lds
dec
add
jnp
pusha
dec
sub
fadds
int
lret
ja
and
pushf
stos
or
cmp
fnstcw
mov
inc
clc
sbb
cli
mov
mov
push
lods
imul
gs
mov
sub
cmp
inc
mov
out
mov
lret
lods
popa
pop
stc
jnp
push
dec
jo
adc
xchg
inc
in
add
lahf
push
xchg
lds
hlt
jns
add
daa
lods
inc
ljmp
mov
fidivrs
dec
loopne
mov
in
and
ret
lods
lods
scas
pop
cmp
mov
mov
jp
lret
lods
fdivrl
push
fwait
addl
cmp
popf
fsubrs
or
sbb
ss
mov
les
sub
adc
or
xchg
xor
push
jne
std
or
jb
sub
enter
cmp
mov
jle
outsb
xor
call
and
jl
int
jns
cmp
into
jnp
in
add
push
clc
repnz
sbb
mov
push
jnp
gs
jp
cmpsl
sub
bnd
mov
jnp
sbb
cmp
jge
test
hlt
sub
mov
jne
sub
lods
jnp
testb
xor
jmp
sub
test
les
jne
fdivr
jbe
idivb
mov
or
or
dec
pop
mov
jnp
add
ret
ss
call
mov
or
orl
jnp
and
ljmp
aam
pop
loopne
lcall
push
xor
jnp
mov
iret
or
mov
sti
aaa
dec
xor
push
lret
mov
mov
outsb
mov
sbbb
cmpl
dec
sarb
mov
mov
xchg
mov
fnsave
int
mov
or
cmc
or
fildl
jnp
in
shlb
je
cmp
adc
and
ja
jae
add
sub
shr
imul
fwait
insb
mov
hlt
jb
jnp
movsb
out
aad
or
inc
jnp
xor
imul
lods
pop
iret
aam
hlt
jns
jno
cwtl
test
jne
je
lret
in
mov
gs
fdivr
cli
push
leave
jnp
xchg
or
cmp
xchg
cli
mov
dec
cmp
mov
jnp
test
add
adc
movsb
sarb
stos
pusha
xchg
repnz
jnp
testb
jb
jnp
sub
xchg
sahf
add
jnp
mov
popf
mov
outsl
jnp
push
lahf
and
or
into
sub
and
sbb
adc
in
push
dec
mov
xor
cmc
ljmp
fs
clc
aaa
lcall
pop
or
jb
xor
fsqrt
adc
mov
movsl
dec
les
or
outsl
inc
mov
js
scas
bound
mov
add
pop
outsl
addr16
xchg
xor
mov
daa
jmp
dec
jno
mov
inc
mov
push
fdivrs
jb
xor
adc
push
sub
sti
jnp
sbb
movsb
fstpt
pusha
mov
jno
aam
fwait
jnp
in
xchg
add
pop
outsl
aaa
sbb
cmc
jnp
jae
jbe
add
mov
jge
lea
jnp
dec
repz
adc
push
sahf
shl
add
jnp
rcll
jnp
xchg
fistl
fdivl
lock
fwait
xchg
sub
insb
push
push
lret
mov
test
inc
sbb
dec
mov
aam
mov
fmull
adc
pop
fdivs
sub
sti
lock
mov
lods
mov
mov
inc
lret
inc
xchg
pushf
pop
ljmp
xor
jns
in
dec
imul
xchg
xchg
pop
jp
fisubs
xor
mov
mov
jnp
pop
mov
push
fsubs
jnp
push
lods
pop
or
jnp
call
loopne
jnp
icebp
push
dec
jecxz
push
mov
sahf
sbb
jne
lods
pop
pop
mov
stos
inc
mov
jnp
leave
sar
or
lods
imul
and
cmp
cli
loope
mov
mulb
dec
fisttps
jnp
das
jmp
mov
mov
fwait
jnp
adc
jecxz
pop
pusha
dec
sub
add
mov
outsb
push
inc
jnp
or
add
inc
jp
hlt
out
mov
das
sbb
fstpt
jnp
mov
or
and
cwtl
jnp
fidivrl
sub
mov
mov
sbb
loope
popf
dec
fbstp
test
xchg
je
imul
dec
mov
fwait
adc
imul
dec
dec
mov
mov
jae
cwtl
adc
ljmp
enter
cmp
arpl
mov
jp
cs
adc
lret
cli
cmp
shufps
jne
add
outsb
jg
jne
hlt
jo
mov
rcrl
pop
push
out
std
push
data16
mov
push
xor
movsb
lcall
mov
push
mov
cmp
fstps
push
cmp
ljmp
mov
fidivrs
leave
mov
pop
mov
mov
jb
push
jb
es
sarb
xor
bound
cli
lret
insl
arpl
add
xchg
cwtl
sub
out
int3
clc
jnp
or
xchg
adc
cmp
mov
stos
imul
push
nop
lods
sub
scas
mov
mov
jnp
mov
mov
mov
mov
inc
xchg
shll
insb
cmpsb
stos
enter
add
sub
pushf
jp
mov
push
jnp
xchg
mov
aad
mov
cltd
testb
jecxz
sbb
mov
jnp
outsb
daa
dec
fcmove
std
insl
jnp
gs
cli
push
int
sbb
push
int3
insl
mov
xor
sbb
jnp
std
mov
out
sub
xorb
xor
iret
fstpt
std
mov
pop
dec
jb
cmc
sub
aaa
leave
jnp
sbb
into
jnp
cmp
inc
imul
scas
mov
addr16
imul
cmp
jl
dec
pusha
loope
dec
dec
dec
push
push
cmp
stos
popa
xchg
dec
negl
sub
xchg
pop
jnp
pop
nop
push
fisttpl
test
adc
lcall
das
clc
ja
fimull
mov
mov
mov
jns
cmp
fisttpl
push
jo
sahf
mov
js
and
into
jnp
push
lods
das
lret
jnp
xor
bound
jecxz
add
ss
notb
fwait
mov
hlt
sbb
stos
test
imul
call
lcall
jp
sbb
lock
mov
jmp
jno
stc
lea
jg
jle
scas
jnp
mov
add
test
addl
bound
xor
insb
xchg
inc
cmpl
aam
cmp
sbb
mov
adc
lcall
sti
adc
cmp
sarb
mov
negb
lds
test
jbe
int
and
jnp
lcall
jnp
out
push
decl
sub
or
cmc
insb
xor
ss
call
or
push
in
mov
mov
dec
pushw
lock
mov
mov
inc
inc
cli
cld
adc
pop
mov
or
xlat
aam
jo
adc
movsb
out
ja
pop
mov
add
es
imul
out
jbe
mov
jnp
into
push
lcall
aam
sbb
add
or
pop
push
outsl
sbb
inc
mov
pop
leave
out
mov
aaa
add
imul
adc
push
lret
jno
jle
sti
jnp
mov
insb
or
or
or
sub
mov
fcoms
sub
xor
fdecstp
push
test
cmpsl
jno
lds
dec
inc
push
enter
jnp
mov
out
loopne
inc
push
fisubs
enter
cmp
nop
sub
stos
jnp
lods
sub
inc
test
jb
cmp
jmp
or
paddd
jecxz
lods
cmp
divl
push
add
pop
xor
xchg
jae
in
repz
jg
push
add
xlat
sbb
push
aad
cmpsb
cli
scas
in
out
lods
pop
jnp
add
out
call
nop
aad
pop
push
es
jnp
cmp
jnp
call
fimull
lods
fbstp
jno
jle
out
gs
pop
lea
or
enter
insb
cli
ja
test
mov
jnp
inc
xchg
dec
jecxz
push
lcall
sbb
dec
mov
cmpsb
jmp
fucomi
insl
cmp
fidivrs
testb
inc
cmpsl
jg
int
pop
rclb
mov
dec
dec
outsb
ds
outsb
jnp
lock
stos
or
adc
jnp
push
mov
xor
jb
jnp
dec
fstpl
lea
neg
insl
adc
cmp
dec
rorb
push
stos
inc
inc
xchg
and
jae
mov
mov
add
mov
mov
pop
icebp
imul
sbb
jno
mov
jnp
mov
mov
pop
call
pop
sbb
movsb
cmpsb
jmp
test
and
jbe
xchg
fistpll
mov
push
ljmp
inc
arpl
out
jnp
push
mov
fisttps
pop
lea
imull
stc
mov
rolb
inc
dec
leave
pop
cmp
imul
sbb
cmp
cmp
js
psubusb
shll
in
cs
jnp
jns
push
mov
mov
xchg
loope
or
in
rol
inc
sub
xor
pop
jnp
jp
push
add
jnp
std
fcmovnb
pushf
push
subl
scas
int3
sub
outsb
sti
imul
mov
adc
push
cs
mov
stos
xor
inc
jnp
sbb
in
fmuls
cmp
mov
enter
push
dec
mov
addr16
fcomp
lock
jnp
or
fldenv
or
stos
mov
push
leave
mov
mov
sbb
call
mov
scas
inc
or
add
lahf
fstl
mov
mulb
xchg
xchg
incl
clc
sub
scas
fisttpl
xchg
ja
cmp
inc
inc
inc
jb
jnp
fwait
adcl
mov
jnp
outsl
dec
pop
inc
lods
popa
inc
pop
ja
push
cld
mov
or
cmp
jnp
roll
or
dec
scas
hlt
xchg
xchg
mov
adcl
mov
jnp
mov
js
sbb
mov
leave
pusha
push
sub
mov
mov
insl
xchg
mov
jnp
cmc
pop
sti
xchg
mov
mov
mov
sub
xor
jnp
xstore-rng
cmpsl
and
fucom
cli
or
xor
imul
jno
imulb
fwait
pop
sub
pop
scas
adc
int
aas
aaa
fsubrs
jnp
std
sub
xor
xchg
clc
mov
popa
idiv
or
dec
and
mov
in
push
imul
fdiv
mulb
jnp
cmp
test
pop
pop
lods
jnp
iret
push
lea
jle
dec
loopne
push
pushf
scas
lea
je
int
xor
shll
mov
mov
out
pop
imull
sbb
out
repnz
das
lcall
out
leave
jnp
xlat
ja
sub
mov
lahf
push
sub
out
mov
dec
or
lods
xchg
cmc
xchg
pop
pop
adc
jge
cmp
or
jnp
insb
cmp
fnstcw
xor
lret
enter
jae
cmp
repnz
jnp
jo
sahf
add
ret
or
jns
xchg
fldl
fmuls
or
xor
test
push
adc
mov
adc
jnp
in
sbb
jnp
sarl
mov
xor
mov
lods
jl
shr
cmpsb
inc
pop
and
fisttpl
ja
out
loop
sub
outsl
or
jnp
mov
imul
js
lods
jnp
xchg
fs
sti
and
outsl
sti
lret
cltd
aad
stos
mov
and
or
mov
pop
push
fs
xchg
fstpl
ljmp
enter
stos
jo
pop
adc
sarl
xor
push
sbb
xor
cmpsb
arpl
cmp
pop
cmc
arpl
push
aaa
call
sub
and
push
jnp
add
cmc
jnp
fxch
push
pop
fstpl
je
add
and
repz
adc
add
fwait
mov
jnp
aas
inc
sarl
jnp
notl
sub
mov
cmp
cmp
add
cmp
adc
jne
mov
dec
loop
sbb
movb
jecxz
or
push
mov
sbb
shlb
mov
enter
aad
mov
shrl
stos
jbe
inc
pusha
mov
rclb
jb
or
jae
cmp
add
addr16
fsubl
xlat
outsl
scas
pop
mov
sbb
ljmp
imul
sub
fldl
dec
xchg
enter
mov
clc
and
sbb
xor
or
neg
jae
mov
jge
stos
ss
dec
or
aam
addr16
dec
sub
in
bound
sub
repnz
ss
sbb
test
lret
into
cmp
pop
fwait
ret
repnz
mov
pusha
or
std
fdiv
xor
scas
stos
mov
jnp
push
lods
sub
jnp
add
clc
ret
jns
leave
jae
add
push
lret
mov
std
cmp
ljmp
sarb
or
idivl
mov
fcomps
jae
aaa
jbe
stc
mov
dec
push
popf
push
repnz
cmc
jo
add
ret
push
hlt
lret
push
sar
xlat
mov
sbb
or
mov
jnp
clc
xchg
xchg
mov
mov
js
push
loopne
int3
das
or
xor
scas
sub
outsl
fldcw
scas
dec
xor
sub
pusha
jno
mov
int
lods
lods
aam
imul
outsl
xor
sub
icebp
mov
icebp
enter
mov
inc
int3
jnp
fisttpll
push
cmp
insb
xor
dec
pusha
cmp
xlat
andl
aas
pop
mov
cmp
sbbb
shrl
inc
mov
insl
xchg
mov
jl
add
xchg
add
outsb
cld
daa
jnp
inc
scas
cmp
bound
out
xlat
push
jecxz
or
cmp
lret
fldl
cmpsb
test
test
popa
mov
push
les
call
mov
clc
imul
mov
je
stos
or
xchg
test
jno
sarb
decb
fs
mov
mov
inc
sbbl
out
stos
insb
and
sbb
popa
add
cmp
xor
cwtl
inc
sub
insl
in
gs
mov
lahf
pop
jns
movsb
push
or
cwtl
ret
pusha
jnp
adc
mov
lret
jp
stos
iret
push
jae
daa
addr16
jnp
xor
dec
sahf
sbb
lods
jb
jnp
sbb
push
push
cmp
cmpsl
test
fbld
aas
dec
mov
xchg
mov
sbb
into
or
fsubrs
or
jnp
loope
add
or
hlt
jle
sti
scas
lahf
in
in
fbstp
push
jnp
mov
and
adc
imul
sub
cmp
popf
lret
dec
sub
outsb
stos
inc
in
movsl
pop
lock
mov
enter
cmpsb
xor
pop
out
and
xchg
ja
cmp
dec
imul
jb
jle
imul
stos
xchg
mov
mov
flds
iret
sub
jnp
cmc
and
pop
mov
fadds
lret
mov
lret
xchg
div
in
jnp
sbb
stos
pop
jnp
xor
push
fidivrl
mov
mov
loop
xor
mov
sbb
mov
bound
pop
loop
xor
out
mov
scas
cmc
sub
ss
sarb
cmp
xor
jnp
mov
push
sarb
or
in
test
dec
test
inc
das
push
jbe
add
push
jnp
test
cmpsb
ss
daa
jp
or
jnp
xlat
arpl
rcll
jnp
adc
push
mov
popf
cmpsb
lods
es
mov
loope
imul
cmpsb
or
adcw
mov
cs
test
push
imul
inc
sbb
mov
ds
and
cmp
xor
sbb
mov
outsb
clc
sub
adcb
outsl
movsb
test
jnp
lret
sti
pop
cs
imul
imul
and
xchg
mov
incb
repz
rcr
mov
jnp
or
subl
cmc
movsb
mov
mov
rclb
jmp
add
jnp
lods
out
or
in
push
jnp
in
push
mov
inc
xchg
jnp
out
push
loopne
mov
pop
stos
sub
cli
js
jae
mov
xchg
out
jae
sahf
out
imul
lods
xchg
jnp
inc
pop
mov
decb
call
es
or
lea
sbb
dec
aad
mov
aaa
js
jae
sar
mov
mov
jnp
sti
scas
add
jnp
mov
xchg
test
pop
dec
jnp
fwait
dec
mov
jno
push
jnp
cmpsb
fists
mov
imul
scas
xchg
pop
mov
jnp
fsubs
movsb
sarl
sub
xor
lret
je
jae
mov
or
sub
or
fstpt
test
jnp
mov
jg
jnp
and
mov
negb
jnp
pushl
sti
int
add
test
adc
pop
test
adc
cwtl
jnp
pushf
or
jnp,pn
jbe
gs
push
jecxz
pusha
sbb
ret
xchg
cmp
imul
movd
inc
ret
outsl
add
sub
jno
pop
cli
imul
inc
add
or
test
jle
sub
out
in
jnp
imul
call
cmpsb
dec
cmp
adc
pop
mov
push
nop
mov
fistpll
sbb
sbb
mov
jns
inc
cmp
outsb
andb
shlb
sub
imul
mov
adc
pop
test
in
sub
imul
ficompl
scas
jnp
jecxz
rorl
fsubrs
mov
insb
xchg
es
in
jnp
out
outsb
push
xor
jnp
lea
pop
jnp
sbb
sbb
out
lret
mov
rolb
or
mov
ds
aam
sub
xchg
outsb
jnp
or
mov
xchg
push
or
outsl
push
mov
or
mov
ja
out
cmpsl
out
popf
push
mov
mov
std
mov
jae
fcmovne
aaa
leave
insl
insb
dec
and
ja
fadd
addr16
add
imul
scas
dec
cmovs
lods
pop
mov
push
aaa
ret
jnp
lcall
jnp
mov
jns
xor
jmp
mov
bound
dec
jnp
lahf
or
push
ret
stos
loop
fnstenv
jmp
popf
xchg
jnp
mov
lods
ret
scas
xchg
je
mov
call
cli
sub
jnp
adc
fstpt
out
ret
dec
fidivrl
out
dec
inc
jnp
adc
jae
pop
shr
mov
and
fmulp
hlt
mov
pop
nop
jnp
mov
jnp
gs
ds
and
icebp
sub
arpl
mov
pop
cmp
in
daa
fwait
jmp
sub
adc
inc
lods
inc
fsqrt
cmp
ds
shll
int
jnp
cmp
outsb
das
fstpt
jp
add
daa
xchg
dec
or
push
jnp
push
sub
cs
dec
loopne
fstpl
bnd
mov
xchg
sarl
jne
out
mov
ja
push
outsl
pop
fucomi
decl
pop
stc
cmpsb
and
shrb
dec
lods
rcrb
jnp
loopne
adc
negl
aaa
jnp
jbe
and
sti
mov
cli
decb
add
cld
dec
push
sbb
mov
mov
jne
push
pop
mov
mov
das
or
sub
insl
jnp
aaa
sub
pop
push
imul
jmp
dec
les
rorl
mov
dec
jnp
jbe
cmpsb
lea
imul
cmp
rorb
or
sub
adc
dec
or
sbb
push
cmp
push
jmp
sbb
adc
addr16
subb
fdivrs
push
lret
std
out
xchg
sahf
cli
fimull
jnp
dec
fmul
dec
mov
insl
jnp
mov
repnz
ss
or
ljmp
mov
lock
test
ret
loopne
xchg
jmp
cmp
inc
jae
mov
or
int3
stc
xor
outsb
arpl
and
test
stos
xor
mov
xchg
jae
push
push
popf
jnp
xchg
call
repnz
or
jb
cltd
mov
out
jnp
insb
jp
imul
ja
ss
jnp
adc
add
stos
mov
lds
push
sub
mov
jo
dec
sbb
xorl
jnp
ja
stos
jae
cld
int3
jnp
or
xor
ret
xchg
and
jno
das
popf
aad
mov
xlat
jnp
mov
jnp
shlb
aas
jnp
call
inc
jo
test
jp
xchg
in
aam
mov
ret
jnp
dec
jmp
inc
stos
or
jae
xchg
lret
gs
rep
adc
and
fwait
lret
stos
xchg
lock
popa
ja
and
jge
jnp
rcl
jns
sub
jnp
fcmovnu
push
sub
sbb
inc
jnp
xor
inc
sahf
mov
push
jnp
inc
es
jnp
loop
or
dec
out
cmc
adc
and
int
inc
imul
dec
push
add
je
inc
aas
mov
or
sahf
sarb
repz
imull
icebp
push
in
jmp
cmp
inc
leave
jp
or
in
and
cmp
sbb
push
mov
shl
pop
cmp
jns
faddp
xchg
adc
or
inc
pushf
jns
fisttpll
jnp
fwait
loop
lret
scas
jnp,pn
arpl
loope
sub
cld
fwait
js
sub
lret
jne
jnp
mov
xchg
or
cld
cmp
shlb
aad
and
or
sbb
jnp
inc
adc
jge
jnp
pop
mov
mov
sub
xchg
shr
imul
cmp
in
movsl
das
stos
fnstsw
scas
mov
or
adc
add
stc
pop
sbb
xchg
aam
into
jnp
jge
mov
fsubs
ja
repz
in
jnp
in
out
cltd
popa
cmp
dec
rcrl
xchg
les
arpl
outsl
lock
push
loope
pop
jnp
inc
sub
pop
sub
cmp
push
arpl
inc
push
inc
pop
test
cmp
into
jnp
nop
push
dec
inc
loopne
std
jnp
out
lahf
push
cmp
loop
push
cmp
clc
adc
cmc
lret
aaa
sti
out
jne
cld
in
cmp
rep
push
cmpl
jge
xchg
push
sub
stos
mov
add
jnp
add
push
jnp
mull
mov
imul
outsl
cmpsl
subl
inc
daa
insl
sbb
cli
jle
xchg
mov
dec
push
push
mov
xor
addr16
cmp
sub
sbb
sbb
pop
or
clc
idivl
mov
loopne
inc
insl
mov
and
pop
jne
cmpsb
add
movsb
add
and
jnp
and
stc
adc
jnp
cmc
sbb
xchg
or
in
movsl
sub
ret
cmpsl
push
testb
insl
lods
xchg
jnp
lock
pop
pop
and
dec
inc
cltd
push
push
popf
jnp
sub
sub
cli
jnp
fstl
daa
lcall
fdivs
dec
addl
notb
out
and
pop
pop
add
dec
inc
repnz
lock
decb
xor
lods
ret
jnp
dec
stc
sub
mov
cmp
add
push
add
xor
mov
and
push
cmp
mov
in
jnp
enter
popa
mov
jnp
sbb
mov
dec
jnp
mov
dec
icebp
mov
movsb
jnp
fmuls
xor
xor
or
push
push
mov
mov
iret
pushf
cli
jnp
inc
mov
fldcw
fdivs
movsl
out
loopne
jnp
sbb
daa
push
mov
loop,pt
xchg
dec
dec
adc
rcll
jmp
sahf
jnp
out
xor
data16
inc
mov
outsb
js
pop
push
sahf
xchg
es
aaa
xchg
push
dec
xchg
bnd
rcll
push
xchg
iret
es
mov
jnp
ljmp
jnp
or
xlat
rcrl
jo
cmp
sub
pop
cmp
jnp
sbb
js
mov
lods
mov
pop
or
jnp
sub
cmpsl
xchg
mov
jae
jnp
loop
or
fcomps
jnp
outsb
xlat
test
jns
cli
je
cltd
in
xchg
int3
jnp
adc
sarl
cmp
cltd
lret
mov
jg
push
jnp
aad
mov
adc
sarl
clc
adc
sub
shrb
jp
insl
mov
sbb
icebp
mov
xchg
adc
out
insl
add
inc
mov
mov
mov
adc
enter
loopne
dec
pushf
dec
ror
xchg
add
jle
jb
fiadds
inc
jnp
xor
jge
out
jnp
xor
andl
cmp
repnz
pop
outsl
sub
outsb
pusha
jg
mov
and
xor
dec
ret
xchg
jnp
icebp
fidivrs
loopne
push
jnp
add
push
sbb
out
jnp
ret
movb
nop
cltd
leave
mulb
dec
sbb
in
mov
push
stc
xchg
inc
lahf
mov
loopne
push
fsubrs
leave
xchg
out
jnp
push
out
jmp
xchg
pop
fadds
adc
push
jnp
jae
and
daa
jge
xchg
xor
mov
into
xchg
adc
std
jns
idivl
sahf
shr
out
inc
jb
enter
leave
test
jecxz
pop
cmp
push
sti
int3
cli
dec
mov
not
or
jnp
dec
pop
dec
jge
mov
jnp
mov
push
xchg
cmp
mov
mov
dec
pop
sbb
push
push
fistpll
sbb
inc
push
pop
scas
push
dec
insb
add
xor
and
sbb
mov
sbbl
cltd
push
dec
xor
lret
pop
out
cmp
aas
loopne
jnp
dec
call
imul
je
fstpt
insl
push
or
nop
popf
jno
jo
jb
sbb
sti
xor
test
push
ss
in
jge
mov
or
inc
sub
insl
cli
jae
jnp
fadds
cmpsl
xor
mov
or
jle
pop
and
jnp
push
dec
mov
icebp
mov
aaa
xor
test
jnp
sbb
cmp
push
lods
mov
mov
pusha
repz
das
mov
lock
sub
jnp
test
ret
xor
cs
in
shl
jnp
daa
ja
lea
or
jo
repnz
push
fcmovne
std
jnp
cli
aaa
sub
rcll
jmp
repnz
daa
jnp
stos
cmp
fwait
jg
jnp
fimuls
mov
test
es
dec
inc
cmpsl
fstpl
js
fisubrl
orb
out
aam
mov
popa
and
mov
push
dec
lock
jae
mov
in
jnp
jge
jne
pushf
push
test
jle
fsubs
dec
cli
jnp
sbb
jne
or
jnp
xchg
cmp
gs
jnp
push
out
mov
sbb
lods
cmp
pop
rorl
cmp
fwait
cmc
mov
int
jbe
aaa
imul
xor
js
push
or
mov
int
stc
movsl
lret
cmpsb
mov
xor
push
lahf
and
insl
addr16
jnp
scas
or
xor
mov
arpl
fnstcw
jnp
mov
icebp
cmpsb
jnp
popa
mull
jnp
sbb
jns
loop
sarl
push
mov
mov
dec
in
gs
je
cmp
jmp
add
sbb
lods
out
mov
mov
mov
jnp
sbb
jno
fwait
lock
jbe
cmp
in
dec
mov
xor
cmp
insl
jle
push
dec
scas
sub
cmpsl
and
push
popf
mov
cmp
mov
clc
jg
jnp
and
outsl
add
mov
ss
in
mov
cli
imul
adc
adc
in
rcll
cmp
stc
popf
inc
jnp
ja
mov
jnp
mov
dec
push
xlat
imul
bnd
out
xchg
xor
jnp
out
sub
ret
outsb
stc
movsb
mov
dec
ljmp
sbb
inc
mov
invlpg
aaa
scas
cmp
jnp
int3
cmp
xchg
add
adc
push
jnp
pop
addb
mov
pop
mov
clc
mov
jns
idivb
jnp
xor
dec
and
lcall
icebp
and
mov
jnp
cmp
jnp
scas
pusha
dec
testb
jnp
imul
mov
push
in
test
jp
add
sub
pop
insb
stc
lods
mov
popa
and
inc
cli
jge
cmc
jne
adc
notb
arpl
dec
sub
lock
jnp
inc
pusha
cmp
add
jnp
jge
sti
in
or
jnp
lea
fstpt
loope
add
ja
pop
pop
cmp
pop
dec
div
aas
mov
mov
mov
ljmp
jnp
mov
mov
leave
jnp
test
sbb
mov
in
lret
ljmp
jnp
outsb
xor
dec
nop
inc
imul
jge
sub
inc
lods
mov
jnp
hlt
and
cmpsb
mov
lods
pop
push
adc
dec
stos
repz
sbb
cmp
cli
ret
jnp
out
test
cmp
mov
jnp
adc
push
and
xchg
mov
mov
jnp
jl
sbb
sti
movsl
xor
mov
out
adc
add
nop
pusha
jnp
sti
repnz
and
jnp
mulb
pop
sub
cltd
xor
xchg
mov
mov
jne
insl
push
aaa
sub
ja
clc
inc
test
rorl
imul
arpl
adc
fidivrs
aaa
mov
lret
adc
or
fs
xchg
popa
jmp
add
or
jnp
clc
imul
scas
push
mov
into
jnp
jp
fsqrt
leave
bnd
xchg
inc
cmp
push
mov
xchg
cmc
out
mov
inc
add
cmp
jnp
shl
jle
mov
push
les
shl
pop
jnp
cmp
mov
stos
divb
adc
jae
xchg
inc
xor
and
je
mov
out
jnp
jle
out
cmc
lcall
ja
hlt
xor
stos
mov
jne
ljmp
lods
in
jecxz
jae
ss
cmc
cmpsb
jnp
jge
in
mov
pop
out
or
fs
scas
sbb
push
xchg
xchg
cmp
jnp
xlat
pop
lods
dec
movsb
cvtps2pd
into
sub
sbb
jecxz
or
or
adc
jnp
push
ret
inc
bound
arpl
mov
fmul
mov
fwait
int3
cmp
je
mov
sub
dec
out
cli
adc
imul
lea
scas
arpl
jge
cmp
mov
jnp
mov
mov
push
dec
jae
lea
push
and
jnp
clc
sub
idiv
scas
inc
jnp
add
adc
and
mov
outsl
jmp
mov
clc
jnp
insb
jle
sbb
push
rorl
pop
stc
fsubrl
or
sub
cmc
inc
jnp
push
repz
imul
loope
filds
enter
bnd
out
enter
mov
daa
sub
imul
xor
mov
cmp
sbb
flds
clc
jnp
or
outsl
push
out
fsub
jnp
push
cmp
mov
xor
pop
mov
pushf
pop
aam
add
xchg
push
cmpb
mov
scas
jmp
cmc
int3
or
rcrb
test
into
dec
add
ss
jo
jmp
or
push
aam
or
loop
jno
inc
repz
push
ss
lods
or
jnp
fdivs
pop
test
mov
dec
dec
mov
jecxz
fyl2xp1
mov
cmp
jnp
rorb
popa
adc
dec
mov
addr16
xchg
in
pop
jnp
out
sub
hlt
pop
or
movsl
orl
sbb
rcll
mov
pop
pop
adc
jns
cmc
jnp
out
pushf
pop
fs
jnp
loopne
pop
sub
cmp
insl
dec
sahf
idivl
sub
mov
lock
xchg
repz
fwait
out
mov
jnp
aaa
fists
repnz
bound
fidivl
fsts
or
mov
cltd
stos
shlb
in
jecxz
popf
mov
std
shrl
frstor
fwait
jne
cmp
insl
pop
mov
pop
sti
imul
or
pop
stc
jns
mov
mov
add
jno
mov
cmpsb
ds
mov
repnz
jnp
sahf
es
shll
jnp
pop
xor
in
lods
fisubrl
push
mov
sbb
jnp
in
or
jnp
inc
add
pop
add
iret
push
cmp
mov
cmpsl
jne
mov
ds
xchg
xchg
in
or
cmp
adc
fdivs
fldcw
or
pop
ljmp
dec
dec
jnp
inc
mov
jb
movsb
jne
hlt
int3
mov
popa
jnp
mov
jecxz
sbb
popf
fiaddl
sbb
ja
pop
sub
dec
xchg
jne
outsb
push
dec
pop
jnp
fistps
sti
repnz
cwtl
cmp
insl
ret
mov
stos
mov
mov
out
gs
cmp
inc
roll
pop
ficompl
stos
and
inc
movsb
ljmp
mov
and
cltd
jnp
push
sbb
imul
testb
jmp
test
fistpll
push
imul
jnp
daa
sti
loope
cmp
sub
fucomi
mov
adc
cmpl
into
lds
sub
clc
lods
testl
xchg
lock
dec
adc
fcomp
xchg
insl
mov
dec
dec
pop
push
repnz
repz
inc
mov
std
dec
sbb
jnp
cli
mov
mov
ljmp
cwtl
stos
push
adc
jnp
xchg
dec
popf
pop
leave
sbb
lds
arpl
aaa
clc
cmp
add
call
jo
pop
jmp
cmp
jnp
inc
inc
insb
stos
push
mov
push
fisubs
sub
jnp
push
movsl
xchg
imul
lock
ljmp
mov
dec
cmpsl
jnp
add
ret
daa
jnp
sbb
mov
imul
jne
out
jnp
popf
int3
push
sub
test
jnp
xor
stos
addr16
lea
scas
adc
lret
cmp
mov
sub
or
push
add
cwtl
jbe
outsb
sub
lret
push
push
cmp
stos
push
insl
test
ss
mov
push
movsw
ret
or
cmp
insl
movsb
jg
ds
mov
push
cwtl
mov
stos
xor
cld
jno
outsl
shr
mul
mov
jecxz
jmp
stos
call
inc
dec
cmpsl
inc
sbb
xlat
mov
lahf
mov
xor
jge
mov
bound
outsb
ret
addr16
out
sar
inc
lcall
jae
adc
dec
xor
lret
int3
pop
pop
shr
xchg
sub
sbb
sub
cmp
jnp
data16
or
in
outsl
pop
ja
lret
pop
jnp
xlat
cli
jge
xchg
lods
or
push
adc
push
sbb
in
enter
xchg
sub
std
dec
or
sbb
mov
sti
mov
cmp
sub
and
jnp
cmp
hlt
mov
aas
sahf
sub
xor
jnp
inc
jbe
sbb
pop
cmp
push
jecxz
dec
xlat
dec
mov
fistpl
pushf
or
add
imul
daa
jns
inc
jnp
add
es
stc
sti
push
adc
cmpsb
xchg
add
mov
push
int
cwtl
loope
out
lods
push
repnz
nop
mov
mov
inc
cmc
outsl
hlt
int
je
pop
xor
lock
or
fdivrs
adc
jmp
aas
pop
xchg
shlb
jnp
mov
fisubrl
into
sub
jae
inc
mov
es
pushf
lcall
jnp
xchg
sub
daa
cmp
scas
jp
pushf
pop
mov
or
outsb
xor
dec
cmp
js
insb
mov
aaa
das
lret
sti
cmc
mov
jecxz
pop
fwait
sbb
test
pop
sti
xor
and
arpl
enter
fnstsw
mov
dec
cmpsb
loope
in
mov
out
mov
insb
mov
and
repz
push
push
inc
addr16
scas
mov
outsl
call
sub
mov
adc
repnz
call
out
xchg
fistl
imul
insb
nop
in
hlt
jnp
jo
lret
push
or
clc
mov
arpl
cli
add
orb
pushf
jle
sahf
fisttpll
loopne
pushf
pop
pop
jnp
mov
lret
cmpsb
mov
fstps
fwait
mov
scas
sbb
adc
mov
clc
repnz
mov
mov
adc
push
addr16
mov
arpl
js
adc
mov
cmp
pop
je
shrl
int3
or
jnp
out
ljmp
mov
ss
jnp
dec
xor
pushf
lret
jnp
mov
ljmp
jnp
in
int3
mov
mov
idivb
scas
adc
mov
int3
imul
jbe
xor
pushf
push
dec
arpl
clc
bound
sub
lods
dec
push
mov
cmp
insb
test
pushf
jnp
sub
les
inc
mov
pop
mov
shrb
popa
movsb
and
mov
cli
jbe
xor
aas
jnp
negl
outsl
stos
mov
xchg
sub
pop
subl
sbb
roll
mov
outsb
add
dec
jp
leave
jnp,pn
sub
jnp
pop
imul
test
call
xor
jnp
and
ret
aas
popf
jp
stos
mov
push
cmp
ret
fcmove
fstpt
cli
clc
jns
lods
dec
cmpsb
jnp
inc
fwait
loope
aam
aaa
jnp
mov
mov
loopne
jae
ss
jno
fistpl
jnp
lods
inc
pop
jo
jp
jnp
mov
popa
and
fstpt
pop
add
jnp
push
dec
lcall
mov
outsl
jp
jns
pop
jnp
es
xchg
push
nop
jo
pop
pop
daa
rclb
lods
repz
jns
cltd
xchg
imul
cmpsb
jnp
push
fdiv
mov
or
cmp
movsl
adc
insl
jnp
pop
xor
xchg
mov
push
jnp
popf
stos
movsl
ret
sub
jecxz
cli
aam
dec
cwtl
add
sub
mov
cld
outsl
push
repz
loop
imul
pop
pop
mov
lcall
sub
in
jnp
mov
lods
sahf
out
pusha
jge
decb
idivb
cmpl
into
dec
lods
jnp
mov
mov
in
cmp
jnp
stc
bound
insl
lea
addr16
jnp
data16
jbe
or
sbb
out
jne
nop
shl
setns
mov
imul
inc
je
xor
jecxz
sbb
fs
je
jnp
out
cmc
ja
mov
cmp
inc
hlt
cli
xor
jnp
pop
test
lea
or
pop
aaa
ret
mov
jnp
int3
sti
or
popa
lods
sbb
or
jnp
dec
inc
pop
lods
sbb
bnd
or
lret
xchg
jmp
inc
repz
pop
jle
insb
sub
ja
fdivrs
test
int3
mov
jnp
ret
loop
ss
mov
sub
test
es
fimull
lahf
outsl
lods
test
add
xchg
movsl
and
insb
daa
orl
and
testb
jne
cmp
jnp
js
xchg
adc
cltd
dec
imul
fsubrl
mov
lcall
enter
movsl
dec
inc
inc
insb
ss
mov
sub
stc
push
pop
es
out
jge
insb
jl
jnp
inc
lods
shll
rorb
xor
lret
and
stos
lods
gs
subl
jbe
dec
xor
lock
pop
mov
out
stc
push
jnp
in
arpl
mov
daa
mov
dec
lods
dec
jnp
cmc
insl
test
cli
mov
xchg
jbe
mov
movsl
scas
imul
or
mov
xlat
jnp
xchg
mov
lret
jnp
movsl
loopne
sub
dec
jmp
stc
mov
push
repz
mov
dec
jecxz
cmp
lods
push
pop
xlat
jno
and
data16
mov
jo
aad
int
hlt
dec
mov
push
mov
jmp
pop
scas
jo
outsl
push
aam
nop
js
dec
jnp
sub
dec
push
fidivl
outsl
outsb
in
mov
cmp
lods
mov
loope
xor
nop
lea
add
in
adcb
cs
daa
repnz
jae
rorb
mov
fistpl
cmp
lret
or
decl
aad
popf
jmp
mov
and
cmp
inc
and
or
cmpsb
or
insl
test
xlat
loopne
jnp
lret
mov
push
xchg
xor
cmp
sti
mov
ss
cmpsl
test
pop
std
hlt
or
das
faddl
mov
movsl
insl
inc
jb
jnp
pop
push
lret
xchg
iret
dec
xor
imul
cmp
dec
stos
xchg
jmp
call
sbb
inc
cmp
jnp
jecxz
adc
xchg
cmpsb
movl
sbb
mov
sub
in
mov
aas
in
loope
push
pop
stos
sub
jae
mov
mov
mov
cmpl
mov
imul
push
or
xor
dec
sub
mov
ljmp
push
insl
icebp
mov
lcall
into
outsb
xor
inc
dec
sbb
jnp
scas
mov
adc
fstps
divb
rcrb
jae
fcmovnu
int3
xchg
mov
mov
rorb
cmpsl
jnp
or
in
iret
jbe
push
pop
push
les
mov
mov
je
ljmp
push
and
jnp
sahf
jp
xchg
fcom
dec
jnp
sti
or
sub
ljmp
stos
pop
je
mov
in
pop
lods
sub
inc
jae
add
in
test
inc
into
xor
push
lret
xchg
dec
addr16
outsb
sub
push
cmp
jnp
repnz
add
fisubrs
sbb
mov
cmp
mov
daa
ja
insl
pop
loopne
mov
cmp
test
jmp
sbb
xor
jnp
sar
stos
dec
cmp
mov
mov
push
push
inc
sbb
divb
pop
lret
sarl
sbb
repz
cwtl
pop
aaa
or
or
es
ja
iret
ret
add
or
jno
mov
push
xor
cmpsl
add
and
fsubrl
mov
xor
inc
repnz
xchg
jnp
mov
mov
jnp
push
xchg
fs
jnp
and
cmp
idivb
push
pop
decb
int
out
pop
mov
loope
jnp
add
or
mov
mov
aaa
inc
cmc
sbb
jno
adc
lahf
push
mov
lods
jnp
mov
popa
clc
jnp
lds
aaa
jne
jo
jnp
xlat
jmp
aas
mov
inc
sbb
lods
pop
enter
notb
jbe
insl
hlt
cmp
mov
leave
data16
test
push
or
jnp
imul
sub
add
out
add
ja
pop
lods
jle
push
leave
xor
and
or
mov
out
es
out
inc
daa
mov
inc
jne
cmpsl
testb
inc
push
push
jae
mov
lahf
in
stos
jnp
outsl
cld
nop
dec
push
xchg
imul
cli
js
mov
mov
scas
jle
lods
mov
ret
mov
inc
push
or
pop
sub
outsl
sub
loope
orb
fcmovb
mov
pop
and
mov
inc
in
into
je
scas
in
outsl
xchg
sbb
cmpl
es
pushf
jnp
mov
out
ret
daa
jnp
mov
add
cmp
mov
xchg
xchg
push
mov
divb
sub
das
ret
cli
aaa
mov
cld
jno
xor
jnp
nop
inc
pop
fiadds
adc
imul
arpl
jnp
movsl
mov
imul
inc
insb
mov
mov
jnp
insb
pop
cmp
sti
out
aam
jno
lcall
adc
mov
clc
mov
lcall
cmc
loop
inc
enter
insb
rolb
lret
insb
xor
pop
test
jnp
jae
sub
or
xchg
ss
cmp
je
clc
inc
ficomps
out
ror
les
pop
push
adc
jecxz
sbb
imul
arpl
sti
bound
outsl
xchg
fwait
repz
inc
mov
insl
ret
cmp
mov
or
mov
aad
outsl
xchg
shlb
idivb
sti
mov
test
mov
in
aas
ljmp
insb
mov
fdiv
pushf
and
jp
sub
scas
jnp
push
leave
cmpsl
and
aad
pop
das
cmp
xchg
cs
jnp
jle
daa
xchg
out
mov
sub
sbb
arpl
jp
mov
mov
dec
fmull
xchg
outsb
stc
loop
mov
jnp
pop
xor
ss
dec
mov
push
add
ss
mov
sbb
outsb
dec
cmpsb
sbb
ss
sub
pop
mov
ljmp
fimull
lods
pop
jne
nop
out
cmp
xlat
les
stos
jnp
dec
icebp
test
ja
dec
in
repz
mov
mov
shl
gs
pop
push
jns
lods
jnp
jp
das
iret
fcmovb
cmc
imul
mov
cmpsb
push
push
lods
pop
out
jno
and
mov
insl
push
jp
insl
imul
shr
pop
jnp
negl
jne
mov
lret
call
dec
rcll
adc
movsb
fnstsw
shl
jnp
mov
or
int3
mov
shlb
jnp
popf
clc
iret
gs
push
mov
push
sbb
ds
popf
push
jb
fnsave
in
sub
sbb
sahf
ret
fwait
mov
pop
mov
pop
outsl
dec
jg
jne
dec
or
ficoms
dec
mov
mov
sti
imul
roll
sbb
ret
mov
and
outsl
adc
fstps
dec
jle
sbb
jne
dec
int
in
jnp
repnz
cli
arpl
icebp
jnp
stc
stos
sbb
adc
bound
push
pop
outsb
stos
dec
and
jnp
push
fmul
sarl
shl
sub
ret
mov
pop
jb
ja
aaa
sahf
les
les
pop
iret
mov
jnp
pop
mov
jnp
dec
bound
sbb
call
jnp
inc
push
and
out
aaa
push
mov
inc
sbb
push
xor
daa
sub
jnp
inc
and
movsb
sub
pushf
pop
jg
jmp
mov
psrld
lock
cmp
out
jne
fistpl
jnp
int3
xor
jnp
fs
adc
sahf
mov
lods
adc
addb
add
mov
out
push
int3
sub
cmc
hlt
jne
lret
imul
mov
pop
jnp
mov
loop
xor
jnp
stos
jne
sub
xchg
jnp
inc
jge
movsl
cwtl
jnp
mov
scas
cld
push
loopne
mulb
mov
mov
sub
insb
ja
push
pop
push
loope
imul
dec
add
pushf
pop
jne
iret
hlt
mov
loop
and
sbb
sbb
call
ljmp
in
ja
test
inc
jge
inc
shl
mov
mov
xor
imul
mov
mov
pusha
stos
mov
mov
scas
fidivrl
idivb
xor
daa
mov
cmpsb
scas
jnp
push
lret
and
enter
insl
push
or
or
imul
fldt
mov
and
out
xchg
lds
popa
push
jne
cli
lahf
insb
pop
mov
sub
xorb
sbb
dec
jnp
out
and
pop
mov
fcomps
out
ret
xor
jnp
mov
gs
jnp
sub
js
cmp
mov
mov
in
lret
out
jnp
or
rorb
lods
lahf
ret
lea
push
sbb
pop
outsl
in
cmp
lret
sub
pop
inc
push
lahf
jae
xor
push
pop
xchg
xchg
jne
insl
mov
sub
mov
cmc
jnp
pop
xchg
sbb
lcall
jnp
scas
pop
out
bound
pop
jb
in
outsl
push
jnp
dec
cmpsl
push
in
movsb
hlt
jnp
push
ljmp
imul
inc
sbb
push
fwait
ja
and
ficompl
jnp
sahf
loopne
sbb
popf
pop
mov
fidivs
cmp
jbe
sti
jnp
mov
pop
popa
imul
cmp
cmc
pop
fdivrs
inc
xchg
push
nop
in
aaa
cmp
jnp
mov
loope
and
std
aam
add
dec
xor
mov
test
fisubs
mov
rclb
xlat
idivl
push
mov
repnz
aaa
popa
sarb
lods
mov
jb
xchg
cmp
icebp
mov
sub
pop
jnp
sub
inc
jbe
stos
imul
cmp
mov
leave
das
push
jnp
cmp
mov
loope
jbe
cwtl
dec
es
mov
rcll
test
jne
nop
mov
test
lea
and
in
lods
lret
and
jbe
jnp
mov
leave
call
inc
dec
or
sub
mov
stos
lods
imul
enter
xor
push
dec
call
push
dec
popf
adc
jnp
sarb
scas
jnp
mov
jl
std
and
mov
pop
pop
or
xor
imul
lret
mov
and
xor
cmc
lock
sub
xchg
cmp
dec
test
mov
and
cmp
pop
in
pop
test
cmp
sar
pusha
cmc
push
aas
jnp
xchg
pop
enter
push
sti
jecxz
jg
sbb
mov
dec
into
fistl
fsubrl
lock
mov
or
or
imul
fwait
cltd
cmc
daa
jo
xchg
call
inc
mov
dec
cs
mov
divb
cmc
dec
inc
jns
cmp
test
je
cmp
mov
ja
xor
pop
mov
mov
mov
fnop
imul
add
andl
pop
and
outsl
jns
movsb
and
mov
jmp
in
imul
push
sub
mull
pop
in
push
jnp
lret
jp
test
addr16
daa
fcoms
lret
leave
jnp
aas
or
scas
mov
sbb
and
add
negl
aad
pop
test
daa
shrl
lret
ja
jl
imul
push
repnz
or
cmc
mov
fcoms
push
pop
scas
leave
jnp
cmp
pop
jnp
sub
gs
out
cs
jne
ss
jnp
inc
ja
mov
sub
shl
stos
outsl
pop
stos
dec
sub
mov
dec
and
out
in
fdivr
sbb
fiadds
mov
arpl
mov
mov
mov
mov
jno
clc
fs
imul
lods
add
dec
xchg
outsl
or
movsl
icebp
sbb
push
sub
dec
xchg
pop
lahf
sbb
aam
test
repnz
jae
pusha
dec
test
je
or
jmp
insl
xor
sarb
int
xchg
test
xlat
jnp
cmp
or
inc
push
popa
lods
jnp
stc
ja
mov
pushf
jnp
pop
shll
insb
jecxz
jnp
sbb
js
out
test
mov
jne
ret
addr16
add
insl
adc
jnp
arpl
imul
decb
ficomps
xlat
adc
sub
jns
sbb
add
fstpt
movl
enter
mov
testl
pop
mov
push
popl
jns
jg
mov
mov
mov
in
outsl
andb
sub
lret
in
aad
jnp
adc
cmc
dec
leave
movsb
jne
mov
repnz
adcb
mov
rorl
mov
decb
xor
add
jp
or
aaa
mov
push
xor
push
popf
sub
test
popl
cmpsb
cmp
std
mov
or
and
inc
pop
mov
push
ficomps
in
jns
and
xor
mov
mov
sbb
inc
std
pop
sti
sbbl
shrb
xchg
inc
mov
lret
push
mov
dec
xor
repnz
enter
adc
es
mov
or
daa
jnp
ret
es
mov
pop
dec
push
mov
mov
and
in
add
orb
push
pop
lret
lcall
jnp
push
adc
jnp
mov
mov
insb
jns
ljmp
and
enter
xchg
xor
sti
jp
sbb
and
je
cmpsb
jnp
sbb
pop
sahf
out
jno
fs
lret
negb
jle
mov
sbb
pop
mov
add
sub
aad
loopne
outsb
mov
jnp
pop
dec
orb
lcall
mov
lret
outsb
jnp
bound
jnp
dec
inc
xchg
movsl
mov
sub
mov
xchg
cmp
mov
mov
ljmp
or
jnp
and
out
scas
mov
mov
xchg
lahf
jbe
push
push
repnz
dec
add
stc
ret
mov
stos
jge
adc
outsl
lret
gs
pop
jp
xorl
xchg
stos
dec
mov
loop
jbe
in
mov
adc
cmc
jmp
sbb
in
xlat
sbb
lods
pop
pop
or
sub
inc
mov
jns
xchg
jnp
sbb
mov
mov
mov
mov
out
fcomip
das
dec
cmp
jo
mov
jnp
lea
xorl
fistpll
xchg
repnz
add
imul
adc
jp
adcl
popa
idivb
lods
int3
xchg
dec
and
sbb
cld
sbb
rcr
or
jnp
cmp
lods
lret
fisubs
cli
jnp
xchg
xchg
or
jne
test
xor
dec
jmp
jge
inc
jnp
imul
jnp
shl
rcll
es
aas
lods
jae
cltd
sbb
fstps
insb
adc
cs
sub
insl
add
and
fidivl
stc
sub
addr16
jnp
je
sahf
ss
out
jnp
daa
lods
fcmovu
shll
lret
jmp
out
and
dec
dec
or
sbb
ss
jnp
lods
cwtl
inc
jns
dec
sti
imul
xchg
pushf
mov
insb
bound
jnp
loope
xlat
push
push
xor
dec
adc
and
push
sbb
xor
call
mov
jnp
enter
mov
mov
cmpsb
jne
notb
ja
enter
clc
xor
xchg
push
mov
jnp
adc
out
je
dec
push
jnp
leave
jne
shll
cmp
lods
jo
in
push
jnp
push
jmp
push
bound
cmp
jnp
fsubs
xor
cmp
stos
hlt
daa
out
int3
lods
in
aaa
push
xor
jnp
loop
addr16
mov
cmp
mov
dec
aas
pop
inc
cmc
pop
lcall
sbb
or
inc
jnp
sbb
mov
loop
sbb
pushl
jbe
push
jle
jnp
dec
sti
ss
enter
pop
xor
fidivs
jnp
and
std
jnp
push
cld
cmc
imul
and
lcall
loope,pn
ret
hlt
daa
mov
add
lret
or
cmp
jae
push
pop
lret
in
mov
mov
jb
in
jmp
pop
jnp
popf
inc
and
mov
inc
data16
sub
stc
xchg
dec
jb
iret
mov
les
jnp
pop
test
out
imul
into
jne
xchg
iret
add
jnp
pusha
fstp
jl
ss
jnp
jp
stc
xor
sub
add
jnp
mov
sub
into
gs
imul
clc
adc
std
mov
dec
jne
outsb
int
jnp
stc
loope
xor
mov
fidivrl
imul
lret
mov
jecxz
icebp
xor
mov
jmp
repz
out
js
dec
and
pop
mov
sbb
mov
sbb
push
into
sub
shlb
mov
cmp
mov
jno
notb
cmpl
stc
sbb
pop
fwait
int
lea
popa
test
pop
enter
or
ljmp
xlat
std
sub
in
jnp
adc
push
or
rolb
cli
jae
mov
jno
insb
or
dec
mov
lock
mov
pushf
sbb
out
sbb
jnp
pop
push
daa
notb
mov
insb
fmulp
or
sbb
dec
push
daa
push
into
rcrl
repz
stos
lods
cmp
in
or
adc
js
inc
ss
jns
adc
pop
mov
inc
loope
ds
pop
or
jnp
aaa
jns
xchg
mov
sbb
adc
lods
push
stos
shlb
cmp
call
jmp
dec
xchg
mov
jo
sbb
jmp
mov
movsb
mov
ss
into
mul
jo
dec
repnz
mov
add
cwtl
sbb
sub
jnp
ljmp
ret
xor
jae
mov
imul
call
xor
or
cmpsb
mov
sub
dec
cmc
jns
and
sub
xor
fwait
cmp
fisubl
iret
mov
sbb
pusha
xchg
lret
dec
mov
and
out
inc
cmp
mov
cmp
repz
fistpl
bnd
jg
sbb
scas
outsl
cmc
pop
cli
mov
sub
dec
jp
in
dec
cltd
pop
insl
adc
mov
testl
jno
shlb
pop
cld
jbe
adc
test
dec
imul
jns
cmp
xor
lods
das
pop
push
jno
adc
jnp
xchg
in
pusha
mov
clc
std
fildl
jns
mov
sbb
cld
in
push
sahf
jb
jnp
fs
inc
cmp
jp
jmp
xor
or
adc
repnz
or
stc
xlat
xor
imul
ds
cmp
outsb
sub
jnp
popa
fwait
in
jns
fnstenv
or
pop
lret
xor
outsl
xor
sti
scas
adc
or
or
cmp
sub
mov
cld
inc
stos
mov
sarl
xlat
cltd
or
fwait
hlt
stos
pop
imul
xor
add
imul
sub
push
lcall
xchg
call
insl
push
pusha
dec
push
pushf
sub
fcoms
sub
jnp
cmp
enter
push
jnp
mov
push
cmp
jo
sbb
or
sti
or
push
jns
cmpsb
mov
jnp
fcomps
loope
cmp
and
into
mov
sub
mov
cltd
loop
mov
jnp
xor
sarb
cmp
out
inc
fstpl
add
nop
push
push
subl
mov
stos
mov
xchg
fwait
or
aad
jnp
push
inc
add
jnp,pn
loop
sti
roll
addr16
dec
push
fidivrs
dec
rclb
inc
js
or
fbld
sti
push
lods
loop
inc
mov
in
subb
xlat
pop
sub
sbb
jne
lahf
jnp
or
sbb
push
and
insb
jnp
int
es
in
add
lea
in
jnp
mov
fwait
sarl
cli
mov
imul
hlt
mov
adc
fdivrp
jnp
xchg
jmp
sarl
int
jl
pop
push
or
aam
jns
movsl
out
lock
jnp
xorb
mov
mov
dec
fists
jnp
sub
mov
push
jnp
fisttpl
jnp
xor
and
mov
sbb
xchg
jnp
sbb
xor
adc
call
int
ljmp
jp,pt
xlat
sti
jo
repz
mov
adc
adc
jp
jnp
push
mov
out
sbb
or
add
or
bound
or
gs
push
aad
inc
pop
scas
ss
fsubrs
mov
jns
ja
test
fistl
stos
mov
mov
cli
insb
bound
sub
jmp
jnp
movsb
add
adc
mov
mov
fwait
lds
lods
push
cmpb
xlat
add
sbb
data16
sub
sarl
ja
xor
ljmp
movb
fwait
mov
imul
ss
xchg
jnp
xchg
out
andl
pop
loope
sbb
jecxz
jnp
mov
mov
xor
jnp
loopne
repz
xor
mov
stos
data16
in
dec
sub
sbb
mov
mov
rorb
dec
dec
adc
lret
mov
jnp
js
leave
out
cwtl
fwait
ret
dec
mov
daa
jnp
cmp
sub
jnp
and
in
stos
sbb
sub
pop
repnz
clc
outsl
lret
lods
mov
jae
cmp
mov
jne
aad
clc
jnp
outsl
sets
popa
out
das
mov
fidivrl
jnp
pop
mov
pop
scas
jnp
lret
jp
jg
jnp
pop
ret
lods
mov
jnp
and
pop
jnp
lods
cmpb
daa
cmp
std
sub
mov
jnp
inc
in
rcrb
in
sbb
lea
inc
add
xchg
pop
pop
sbb
imul
enter
mov
shrb
cmc
mov
dec
adc
lcall
mov
cli
and
adc
cltd
mov
stc
jnp
inc
pop
stos
out
push
aaa
bswap
sub
pop
dec
jle
or
push
icebp
cmp
ljmp
jecxz
call
hlt
sti
js
lahf
push
lret
dec
cld
into
pop
or
adc
outsl
and
dec
pop
in
fwait
mov
pop
jnp
mov
test
std
jnp
sub
push
clc
popf
and
and
cli
movsl
push
js
repz
jns
mov
sub
jecxz
icebp
pop
or
and
fisttpl
add
insl
cmp
inc
mov
or
pop
push
jno
fsub
scas
xlat
mov
mov
adc
out
insl
out
arpl
push
enter
or
mov
lret
push
jnp
jge
arpl
leave
lcall
cs
bound
cld
push
stos
js
test
mov
dec
jns
jne
aam
jnp
fsubrl
cmp
leave
ret
jnp
jns
dec
fstpt
sub
cwtl
pop
cmp
sub
xchg
push
jno
and
lret
sti
mov
pop
xchg
xor
ljmp
fcoms
jae
inc
and
scas
xchg
and
mul
mov
jnp
out
inc
xor
ljmp
adc
push
test
pop
mov
fildll
jnp
xchg
mov
addr16
imul
sbb
mov
mov
addr16
ret
mov
daa
mov
jnp
xchg
imul
cwtl
ss
clc
aam
clc
xchg
jnp
dec
mov
cs
cmp
add
cmpsl
in
push
mov
lret
stos
icebp
sbb
pop
loope
jnp
xchg
lahf
pop
and
xchg
dec
sub
outsb
ss
mov
lea
aaa
cli
add
sti
outsl
fstp
xchg
fmul
mov
cmp
jnp
std
fistl
jno
nop
sahf
stc
in
jae
imul
jnp
imul
dec
jnp
xchg
or
xchg
jnp
inc
fsubrs
pusha
jo
add
test
jnp
jae
ja
jnp
icebp
lahf
sbb
and
jnp
push
cltd
mov
aad
jnp
push
adc
dec
scas
in
sbb
hlt
movsb
ja
cmc
test
cmp
nop
test
jbe
out
pop
and
fldcw
mov
jnp
into
dec
dec
out
push
pop
ss
sti
mov
insl
das
push
sub
enter
lcall
mov
jnp
inc
jo
rorb
jmp
cmp
pop
xchg
inc
mov
int3
mov
mov
xchg
pop
lea
jmp
cmpsl
int
jae
andb
lcall
cmp
xchg
adc
lods
sbb
push
pop
pop
or
inc
cmp
addl
lea
repnz
stos
fdivs
mov
jae
or
daa
push
dec
lret
jb
sbb
cmc
sbb
sbb
xor
test
sub
adc
lods
fiaddl
push
test
divl
ret
jmp
jbe
out
shrl
cmp
jnp
push
mov
lahf
push
je
mov
insl
inc
xor
lock
lret
fnstcw
mov
in
jnp
inc
dec
scas
fimuls
jnp
xor
cld
lcall
mov
shll
hlt
xchg
cmp
mov
stc
inc
xor
jnp
add
notl
insb
inc
mov
inc
jnp
call
test
pushf
mov
xor
jnp
outsl
xchg
fcomps
xchg
mov
sub
subb
in
testl
and
fdivs
cmp
push
sti
imul
sub
stc
dec
das
cmc
es
ret
jg
cmp
pop
sbb
mov
cmp
xor
mov
lahf
orb
mov
mov
imul
mov
lods
xor
js
out
test
lock
stc
js
push
mov
outsl
and
gs
pop
or
test
fldcw
fsubrp
movsb
daa
test
cmp
rcll
xor
jecxz
in
das
jge
jle
lods
jnp
cmc
cli
gs
jnp
sti
sub
jnp
aaa
xor
repnz
stos
inc
jae
testl
dec
sahf
jns
lock
sti
sbb
stos
pop
jp
jp
aam
mov
mov
xchg
xor
push
flds
fsubl
adc
mov
cmp
leave
lods
aaa
dec
dec
pop
push
lods
inc
jnp
jno
fidivs
rorb
hlt
mov
cmp
jb
jnp
inc
popf
aad
xlat
sub
jnp
repz
pop
dec
pusha
xor
lret
xchg
push
fistl
xor
mov
pop
shll
outsl
xchg
mov
add
jnp
sub
insl
add
shl
adc
xchg
xchg
or
loopne
sbb
mov
jo
dec
pop
sbb
jle
bound
ss
call
or
insl
xchg
add
jg
mov
outsl
repnz
jnp
xorb
or
adc
pop
cmp
je
loope
aad
lods
iret
jbe
call
mov
pop
jno
aad
repnz
push
test
into
jnp
cmp
shrl
sbb
jnp
jno
clc
icebp
ficompl
jnp
enter
shl
jnp
push
jo
aaa
mov
jnp
sub
adc
push
je
fcomps
jnp
cmc
mov
xadd
lret
js
hlt
jns
scas
mov
jnp
xlat
lret
push
gs
jnp
lods
inc
push
jnp
add
dec
fidivrl
jnp
inc
scas
insb
cli
jmp
fdivs
or
stos
push
outsl
es
mov
shlb
mov
bound
es
cmp
js
push
jp
push
jnp
xor
ljmp
gs
popa
jo
in
int
jnp
out
or
dec
cmp
push
test
loopne
push
push
or
mov
mov
scas
fs
jnp
mov
iret
dec
dec
push
cltd
jne
push
mov
test
imul
pop
dec
push
clc
outsl
jmp
xor
das
daa
inc
lock
push
in
dec
xor
jne
push
jb
xchg
mov
mov
insb
jnp
fldenv
or
dec
mov
add
cmp
inc
shlb
lock
jb
mov
inc
test
pop
xchg
inc
test
mov
jnp
iret
addb
push
jbe
xor
jnp
ret
testw
insb
jge
dec
jg
sbb
popa
call
cmp
jnp
std
loop
cmp
inc
sarl
or
lcall
cmpsl
lods
dec
into
xchg
hlt
jnp
arpl
inc
cmp
sbb
and
mov
jae
xchg
arpl
jmp
inc
popf
sbb
xor
pop
cli
xchg
icebp
xchg
jnp
xchg
jp
in
adc
adc
pushf
jbe
stos
mov
add
pop
mov
out
stc
sub
ss
repz
jnp
jb
mov
xchg
divb
push
xchg
mov
xor
pop
stos
mov
mov
in
test
mov
fdivrl
and
push
imul
cmc
push
xor
pop
je
mov
ja
ljmp
mov
pop
insb
and
xchg
jnp
in
rcll
jecxz
sub
adc
test
add
and
lods
jns
dec
jmp
fwait
dec
or
out
inc
xor
lret
pop
in
adc
push
aam
jnp
outsl
sahf
sub
mov
dec
imul
push
scas
sahf
sub
sbb
or
add
repz
jb
lret
lea
xor
mov
xlat
jnp
jg
xchg
mov
inc
stos
push
jae
xor
ja
out
jnp
scas
fld
daa
adc
jnp
sub
lahf
sbbb
jnp
xchg
inc
cli
imul
out
sbb
ss
adc
in
popf
enter
pop
das
or
jne
and
sub
loop,pn
jnp
jp
and
pop
dec
jnp
adc
out
aam
or
js
ja
mov
lods
xor
jge
int
mov
sbb
test
cld
jg
or
or
sub
push
ss
ror
lcall
out
xchg
cmp
dec
outsl
in
inc
xchg
shl
jne
hlt
fwait
pop
dec
es
js
add
pushf
aam
mov
or
mov
dec
add
mov
dec
jae
outsl
out
pushf
xchg
sahf
shll
fwait
jnp
sbb
sbb
mov
mov
jp
mov
iret
and
bound
sbb
jnp
push
and
cltd
xor
mov
lcall
sti
mov
insl
mov
jnp
ds
ljmp
repz
inc
sub
dec
mov
aam
aaa
sbb
pop
movsb
ss
cmpsb
push
int3
lret
jb
add
xrelease
insl
xchg
sarb
ljmp
push
mov
pop
mov
jecxz
mov
divb
ss
jno
js
pop
dec
clc
bound
rcrl
vpmaxsw
xchg
sbb
test
jnp
ret
test
dec
inc
xor
jnp
adc
dec
data16
or
divl
mov
jnp
out
xchg
and
pushf
xor
cmpsl
sahf
xlat
cli
push
mov
pop
dec
hlt
jnp
stc
repz
pop
pop
sub
pusha
imul
data16
mov
push
or
dec
jb
out
mov
pop
lods
ds
cwtl
push
fs
sbbb
jnp
jl
lret
xlat
imul
fdivs
int
ja
fbld
addl
sub
push
and
or
fcomp
jmp
dec
jnp
jb
mov
sbb
mov
rcll
push
insb
loope
mov
iret
dec
mov
jle
push
aad
fmuls
xor
push
and
clc
stos
pop
dec
mov
lret
jmp
nop
push
adc
ss
rcll
jns
and
lcall
stc
dec
jge
jns
mov
inc
push
jnp
iret
sti
subl
frstor
pop
jnp
inc
popf
addb
inc
xchg
lcall
shr
ficomps
fimull
jecxz
outsl
daa
outsl
sub
jnp
lock
fwait
pop
scas
jno
jnp
sahf
mov
cli
test
sti
and
fsubs
mov
stos
stos
sbb
call
loopne
repz
loope
das
cli
jnp
pop
fcomp
idivb
cld
cmp
add
mov
mov
jecxz
cli
and
sub
das
jnp
hlt
dec
in
lahf
test
mov
in
lods
add
cmp
ret
pop
test
sbb
imul
stos
js
xor
dec
mov
sti
mov
cmp
mov
fwait
scas
imul
mov
subb
adc
push
sbb
mov
jno
fwait
add
xchg
dec
testl
xor
cmpsb
movsl
mov
jbe
cmp
imul
inc
cli
fs
movsb
fwait
lods
hlt
or
jnp
inc
mov
jnp
push
mov
arpl
jae
in
ljmp
out
or
fcmovbe
jnp
jb
xchg
das
fwait
or
push
sbb
push
jae
push
scas
js
rclb
push
jno
adc
and
cli
fiaddl
sbb
fistl
je
jnp
fdiv
sub
imul
push
incb
inc
ja
and
negl
sub
scas
mov
dec
stos
cmp
jnp
aam
add
cld
mov
cmp
imulb
mov
lods
sbb
xor
mov
mov
imul
mov
ret
pop
mov
fldcw
fidivrl
push
popf
leave
sarl
jnp
test
stos
mov
or
push
call
sub
pop
arpl
sub
sbb
scas
dec
insb
or
clc
scas
push
sbb
addl
sub
js
cmpsl
jnp
fistl
jno
f2xm1
cmp
repnz
fsubrs
push
push
jbe
fidivl
fisttpl
hlt
fisttps
or
add
jae
add
test
xor
jg
cli
mov
in
lods
sub
inc
jg
sub
int
jno
cmp
xor
or
pop
fs
cmp
cmp
pushf
push
sub
fildl
jmp
xorl
mov
ja
pop
loope
mov
jecxz
nop
sbb
push
lea
rorl
orb
xchg
sbb
divl
lcall
movsl
sbb
in
outsl
cmpl
aaa
daa
lods
ljmp
arpl
repnz
xlat
sbb
or
jecxz
ljmp
mov
pop
sub
loopne
inc
push
mov
std
imul
ljmp
ja
sub
mov
xchg
repnz
push
xchg
push
jne
push
je
inc
fwait
dec
call
or
and
nop
pop
inc
imul
scas
jecxz
pop
out
mov
jnp
dec
push
pop
xlat
fcompp
jge
cli
mov
jmp
jp
or
pushf
sub
jnp
or
scas
mov
mov
mov
cmp
mulb
inc
pop
lcall
jbe
inc
loope
push
movsb
das
mov
push
mov
push
pop
and
call
push
mov
jecxz
jnp
scas
bound
jnp
ss
xor
dec
mov
pop
cmp
sbb
xchg
jnp
push
jb
dec
and
push
rclb
sbb
popf
out
in
dec
xchg
mov
jecxz
idivb
sbb
mov
jnp
xchg
es
cmpl
cmp
lods
testl
xor
jnp
icebp
out
sbb
and
sbb
and
movsb
cmpl
sub
divl
lret
shr
aaa
dec
mov
mov
jnp
out
fdivrs
out
fstp
repnz
push
sarl
jnp
xor
cmc
pop
jnp
in
pop
xchg
sti
ret
enter
ss
sbb
and
insl
into
imul
fidivrl
inc
fldcw
inc
lea
mov
bnd
pop
adc
int3
jns
xor
and
cmc
sbb
add
lds
pop
and
leave
iret
xchg
mov
jnp
lret
jne
aam
jg
jnp
sahf
rclb
imul
sbb
cltd
ss
cmp
arpl
lods
outsb
sub
in
sub
stos
jae
ja,pn
je
pop
jnp
lods
dec
cmp
jnp
push
cmpsb
lock
and
sbb
incb
mov
mov
arpl
sarl
rcl
lods
aaa
xchg
xchg
jnp
out
push
sbb
jae
xor
adc
xchg
cmp
sub
daa
scas
fxch
jnp
pop
xchg
mov
push
and
jnp
outsl
push
mov
imul
sub
adc
inc
push
jne
lock
sub
in
push
jae
and
jno
jae
xor
sub
cli
rcl
arpl
lcall
insb
xchg
xor
xchg
jecxz
jnp
fwait
jl
cwtl
ds
das
jnp
lods
mov
inc
insb
sarl
subb
push
fcomp
jnp
pop
dec
sbb
dec
xchg
mov
pop
xchg
mov
idivl
jnp
out
and
mov
jnp
xorb
and
jnp
out
addr16
adc
mov
in
loop
pop
push
push
adc
dec
push
dec
mov
pushf
or
pusha
jnp
xchg
testb
sub
mov
stos
fisubl
and
test
jne
aas
dec
mov
bound
cwtl
call
push
or
mov
mov
xchg
lcall
sub
mov
pop
cmp
fdivl
in
adc
jnp
dec
push
mov
jnp
pop
mov
scas
or
or
push
data16
pusha
push
mov
jnp
cmp
mov
sub
dec
fiadds
flds
out
dec
xchg
jo
sbb
imulb
lcall
cmc
or
push
cmp
outsb
jnp
dec
scas
jns
xchg
cltd
lcall
mov
add
jmp
imul
jns
and
pop
jnp
pop
daa
dec
lcall
jns
out
insl
mov
jno
jno
and
pop
pop
inc
loopne
sbb
add
jae
fisttpll
pop
jnp
push
jl
xchg
pop
push
jmp
or
fsts
je
imul
or
iret
pop
je
outsl
sub
mov
movsb
inc
arpl
xor
xchg
ja
dec
addr16
mov
mov
and
jae
add
cmp
cltd
jnp
pop
push
cli
rcrb
fisubrl
repz
cmp
adc
icebp
mov
in
sub
jb
sub
sbb
out
inc
movsb
arpl
filds
sub
sbb
gs
and
jnp
mov
push
int
dec
call
jnp
xor
jnp
push
cwtl
cmp
adc
jns
std
nop
loop
call
xor
scas
jno
sub
pop
mov
lcall
outsb
push
pop
dec
lds
dec
clc
pop
add
insl
and
sub
jae
fisubl
or
test
jmp
xchg
and
or
ja
and
and
enter
outsb
xchg
or
jb
inc
jmp
push
push
jnp
dec
push
sub
lcall
cltd
aas
scas
mov
push
mov
int
push
dec
push
fists
jnp
and
dec
jnp
adc
pusha
scas
fucomip
loop
mov
cmpsl
stc
imul
mulb
add
scas
mov
jnp
adc
inc
pop
jnp
ljmp
mov
dec
repz
mov
call
sub
lods
xchg
jnp
add
mov
and
ja
mov
or
outsl
xor
xchg
pop
scas
imul
bound
mov
fisubl
sbb
movsb
es
jne
inc
les
daa
jnp
xchg
xlat
cmp
jnp
mov
dec
jb
dec
and
mov
addl
sarl
sub
xchg
add
pop
mov
add
dec
cmp
clc
inc
ljmp
cmc
sub
lret
ret
repnz
fsub
push
ss
les
in
cltd
jmp
insb
sbb
cmp
jge
pop
daa
pop
xlat
jnp
enter
stos
cmpl
aaa
fwait
push
dec
dec
jnp
dec
jae
jle
jnp
inc
cmpl
scas
mov
pusha
daa
sti
mov
mov
mov
sahf
cli
bound
mov
daa
dec
mov
mov
cmp
jnp
mov
lahf
xor
and
push
ljmp
fcompl
lret
jbe
xchg
cli
sub
sub
neg
mov
dec
and
cld
dec
xor
enter
and
inc
sub
sub
mov
add
neg
hlt
jae
pop
ja
dec
inc
push
and
push
mov
js
cltd
ror
ret
xchg
cmpsl
clc
ret
xchg
jnp
mov
xor
das
sarl
add
xchg
mov
cmp
inc
mov
jnp
imul
inc
aas
mov
std
dec
test
testl
cmpl
mov
leave
adcl
in
fisubrs
jp
xchg
lods
xor
jnp
add
int3
mov
clc
cmp
lods
cmpsb
loopne
sub
xor
repnz
aam
push
jnp
stos
sub
fisubrl
mov
add
jp
sbb
xor
imul
xchg
add
push
daa
jge
dec
pop
jno
jnp
int3
fidivl
ss
adc
scas
adc
mov
xor
lret
cs
lock
or
xchg
mov
sub
sub
int
fists
jnp
pushf
jmp
jns
jmp
xchg
sahf
and
push
outsl
stos
dec
inc
mov
mov
rolb
bnd
aad
cmp
sub
push
hlt
testl
jne
mov
mov
imul
in
adc
fidivrl
jnp
out
mov
lds
jnp
dec
adc
sbb
in
pop
fcmovne
inc
cmp
xchg
push
add
or
out
xchg
imul
idivl
mov
adc
cmp
fs
inc
cmp
cmpsl
jnp
inc
sbbl
pop
mov
es
push
xlat
mov
pushf
mov
jnp
sub
inc
ja
ds
hlt
push
jnp
cli
inc
jo
das
sti
into
pop
lret
ja
pop
push
jnp
sub
jp
sbb
mov
out
xchg
dec
mov
movsl
mov
cmc
mov
outsb
ror
jge
cmp
fbstp
cmpl
mov
addr16
fimull
push
jnp
sbb
sbb
cmp
dec
push
scas
in
test
orb
push
jne
cmc
lods
hlt
push
clc
sete
leave
sbb
pusha
sbb
or
jbe
daa
std
mov
jno
clc
add
stc
adc
sub
jb
sub
cld
mov
xor
inc
lahf
adc
jnp
stc
in
jp
push
lods
jnp
jne
nop
decb
sub
jle
pop
mov
ss
out
mov
push
mov
aad
jb
cmp
mov
movsl
inc
in
jnp
dec
bound
lods
fwait
push
jnp
and
popa
ds
jno
or
adc
cmp
lods
pop
jecxz
xabort
enter
pop
mov
mov
sub
jnp
inc
jmp
mov
imul
ljmp
push
sub
xchg
adc
pushf
inc
fnstsw
cmp
lods
xchg
jnp
sub
sbb
jp
testl
cmp
mov
out
push
fisttpl
sub
adc
shr
in
pop
js
lods
mov
test
mov
or
cmp
sub
aam
adc
jnp
lock
aaa
repnz
int
mov
push
push
inc
outsl
push
add
into
jnp
mov
mov
imul
cmp
sbb
ja
lret
lods
inc
jnp
adc
mov
or
sub
arpl
stc
ljmp
out
cmp
jnp
int
push
fsubr
in
xchg
jnp
sbb
sbb
sbb
loop
jno
jae
cmc
cltd
jnp
insl
and
and
jo
mov
xor
repz
lods
mov
lret
in
loopne
mov
mov
push
int3
data16
jo
jnp
lea
push
and
pusha
imul
pop
add
das
popf
scas
scas
push
push
jnp
out
mov
dec
cmpsb
bound
jnp
mov
call
pusha
mov
loop
jb
outsb
push
jmp
dec
lret
push
mov
jnp
pop
mov
mov
sbb
loope
pop
sub
pop
jnp
sbb
mov
lods
mov
lock
jnp
movsl
cli
je
mov
xchg
or
jnp
inc
call
dec
or
popf
ret
fstl
dec
push
push
cmp
sbb
mov
jecxz
inc
fisttpl
xor
cmp
repz
shrb
sbb
jnp
mov
test
subb
mov
sbbl
aas
js
cli
idiv
dec
xor
xor
fwait
xchg
adc
pop
cmp
cmc
addr16
insb
dec
ret
fnstsw
xor
cs
arpl
pop
shl
aam
mov
mov
sbb
push
sbb
mov
cld
mov
sti
out
arpl
in
lret
cmp
insl
mov
movsl
jnp
push
mov
repz
movsb
testb
push
pop
fdivl
inc
pop
loopne
ljmp
cmp
xor
jnp
lret
testl
je
mov
das
jb
jnp
mov
push
leave
xchg
sbb
data16
rclb
lcall
ret
ss
jnp
in
lret
jo
test
int
movl
push
hlt
jnp
fucomp
inc
mov
rorb
cmp
in
rcl
fimull
cmp
lret
std
jl
jb
mov
fsub
lcall
pop
adc
daa
fmul
rcll
push
sbb
js
jae
pop
outsl
flds
fwait
push
out
jnp
mov
cmpsl
ss
jnp
mov
push
sbbl
mov
lods
jnp
or
mov
or
aaa
test
sahf
bound
stos
in
lea
cld
stc
data16
or
ljmp
pop
jnp
push
sbb
adc
jnp
inc
repz
mov
insb
dec
xchg
cli
lahf
stos
add
mov
jnp
aaa
into
pushl
arpl
sub
sarl
fnstsw
inc
or
add
lahf
outsl
or
jnp
adc
fistpl
or
adc
jnp
mov
and
sub
jnp
fimull
pop
clc
adc
pushf
mov
sbb
xlat
and
or
out
inc
stc
mov
cwtl
push
stos
ja
sub
mov
loopne
cmp
cmc
ljmp
repz
adc
pusha
sub
cld
cmp
scas
aaa
ss
mov
rcl
sbb
dec
sbb
push
jno
jecxz
xchg
cmc
fwait
sub
mov
movups
sbb
jns
jge
mov
js
push
cmp
in
divl
and
jnp
mov
sahf
je
adc
sub
or
inc
cmp
push
mov
pop
outsl
sbb
cmc
lods
jnp
inc
mov
fs
leave
jmp
sti
adc
icebp
je
or
scas
xchg
add
pop
jmp
daa
repnz
js
jae
mov
cmc
jo
outsl
shlb
mov
test
jmp
cmp
pop
dec
aas
mov
sbb
pop
shrl
in
sbb
fs
sahf
test
dec
dec
push
into
xlat
and
xchg
mov
push
or
daa
jnp
jmp
cmc
scas
mov
jbe
jnp
or
popa
fwait
aad
inc
xor
xor
mov
jnp
mov
add
je
out
xchg
dec
adc
jnp
sbb
ret
lret
repnz
mov
jns
in
pop
push
or
mov
inc
outsl
pusha
insl
sbb
xlat
les
jnp
dec
jo
fidivrs
xchg
inc
fildl
gs
jbe
jne
das
mov
xlat
mov
xor
hlt
cmpsb
dec
mov
pushf
daa
cli
jg
rclb
fnstsw
lahf
push
test
popa
sbb
lret
push
jnp
ret
fcmovu
cltd
lret
lahf
addr16
rorb
in
gs
imul
arpl
adc
lahf
flds
push
dec
pop
out
mov
mov
aad
aaa
jnp
das
call
bound
lcall
imul
push
or
jmp
in
decl
imul
inc
or
inc
ja
adc
in
dec
sub
int
sbb
add
push
cmpsl
jnp
cmc
sbb
xor
jnp
inc
int
pop
or
or
loop
jg
xchg
jnp
lock
cmp
sbb
sbb
push
mov
lds
xor
add
lret
pop
cmpsl
adc
jb
jnp
add
outsl
xor
mov
shlb
lods
jle
stc
jnp
mov
imul
stos
insl
push
js
xor
sarl
scas
add
repnz
mov
push
mov
jnp
mov
push
push
jmp
scas
data16
dec
jno
jp
sbb
sbb
ljmp
push
cs
mov
shll
jnp
insb
movsb
push
sub
in
jnp
js
repz
fsubrs
sbb
dec
daa
sbb
xchg
jnp
ss
pop
sbb
mov
inc
jnp
testl
ljmp
mov
xchg
jp
xor
stos
sub
mov
sbb
pushf
xor
cld
inc
jmp
data16
clc
jnp
jbe
scas
enter
add
xchg
or
insl
fninit
adc
out
add
dec
movsbl
lods
fidivs
insb
mov
jnp
jecxz
ret
sub
and
jnp
int3
push
sarb
das
je
jae
seta
dec
mov
pop
outsb
xchg
adc
add
jne
out
daa
stos
stos
fwait
add
mov
mov
in
dec
jb
in
repz
cmp
jnp
gs
ret
pminsw
jb
mov
lret
push
hlt
mov
jnp
xor
or
fwait
jge
fld
lods
xchg
lds
pushf
jge
insb
rcrl
jnp
cmp
lods
pop
into
data16
les
inc
jbe
sub
aad
inc
stos
xchg
rorl
cwtl
out
pop
imul
pcmpeqb
call
clc
cli
sbb
inc
dec
shll
in
fldz
outsb
scas
xchg
push
and
jnp
dec
loope
out
or
je
mov
mov
cltd
push
xchg
fcmovbe
jle
jmp
lea
test
rcrb
jnp
sub
fwait
sub
dec
in
dec
adc
pop
xor
js
lcall
roll
xor
xchg
sub
fisubl
mov
sub
mov
insl
scas
ds
ss
xor
dec
mov
lock
jnp
shl
mulb
ss
cwtl
jnp
cmp
cmc
lret
sub
xchg
stc
nop
pop
jnp
data16
aam
sbb
imul
in
sub
int3
call
add
mov
pop
xlat
jnp
mov
imul
rcll
bound
dec
rorb
xchg
xchg
push
stc
inc
fldenv
dec
or
in
xlat
pop
out
xor
mov
xchg
shrl
jmp
stc
or
adc
dec
ja
mov
sub
xchg
out
and
push
jnp
push
mov
pop
aam
imul
cs
cmpsb
mov
push
sbb
psubsw
jnp
mov
out
or
ljmp
jnp
jle
scas
mov
push
subb
orb
adc
cli
mov
sbb
ja
call
clc
lods
mov
adc
ret
repz
xlat
sub
lods
daa
loop
sarl
or
je
jle
jnp
stos
mov
add
repnz
subl
sub
cli
iret
in
mov
mov
aad
xlat
jnp
push
shr
push
push
cmp
sbb
dec
mov
push
in
dec
int3
inc
sbb
in
add
or
data16
jns
mulb
jnp
dec
jge
xlat
add
stc
lock
jnp
ds
xchg
and
push
jne
mov
mov
icebp
std
mov
aad
add
inc
test
enter
pop
or
and
jnp
jle
jnp
sti
or
inc
decb
or
sahf
stos
inc
movsl
sbb
sub
fidivrs
scas
insl
mov
mov
rorb
sub
sub
hlt
gs
push
mov
mov
and
xchg
sbb
bound
mov
jnp
fadds
lods
pop
lock
push
cli
cmp
mov
hlt
mov
js
outsl
xlat
xchg
std
xor
ljmp
aad
cmp
lcall
dec
push
dec
mov
negl
or
pop
ficoms
and
pop
repnz
jmp
mov
mov
mov
loop
enter
arpl
sub
mov
mov
jnp
daa
sub
jecxz
cmp
dec
jge
mov
sub
popf
pop
clc
ret
cmp
dec
scas
cmp
push
outsl
xchg
aaa
push
jnp
mov
jmp
jnp
mov
je
cld
scas
cmp
jnp
fistl
lods
mov
push
push
ret
push
sbb
repnz
sbb
je
xor
xor
leave
lret
rorb
nop
pop
add
jo
mov
scas
mov
inc
cmc
imul
aam
or
jl
jnp
jno
sub
ret
xor
xor
repz
jnp
cltd
pop
push
neg
pop
jnp
lods
fucom
mov
mov
jne
in
pop
xor
cmp
inc
into
mov
xor
jle
imulb
fcmove
mov
cmp
lods
jae
sub
lea
out
sbb
mov
loopne
jnp
shll
jnp
push
fiadds
ficoml
ja
sbb
cmpb
xchg
pop
mov
popf
xor
mov
cmc
imul
dec
and
jle
push
outsb
cmp
popa
shl
jne
jns
and
add
icebp
out
insl
mov
cmp
xlat
leave
xchg
jnp
inc
xor
shll
cltd
repz
cmc
dec
daa
out
jmp
out
scas
lods
jmp
cmpl
ljmp
out
pop
fcomps
xchg
jnp
pop
cmp
repz
jae
js
jnp
stos
out
les
imul
fdivr
push
int3
jne
pushf
jnp
mov
cmp
nop
xor
paddd
cmp
daa
ja
rcl
lods
je
lret
ss
into
clc
jnp
out
hlt
pop
and
lret
cmp
stc
cmpsl
es
sbb
xor
mov
jnp
cmc
fbld
xor
sub
pop
pushf
ja
push
jl
jnp
scas
cld
push
pop
pop
sarl
andb
aam
js
xor
fwait
mov
repz
sbb
in
xor
or
gs
jnp
sub
push
push
or
adc
ret
mov
movd
enter
das
sbb
push
lret
sbb
push
sbb
jmp
sub
cli
dec
cmp
dec
arpl
test
and
sti
insb
jae
cmp
pop
push
mov
mov
or
add
test
jbe
cmc
lahf
jnp
sub
mov
jnp
outsl
xor
stos
lods
sub
cwtl
mov
and
xchg
jb
pop
mov
in
fimull
jo
je
sub
pop
xor
gs
mov
inc
je
jnp
sbb
movsb
pusha
or
mov
pop
lods
idivb
xchg
xor
imul
in
test
xlat
mov
dec
jnp
sbb
call
jnp
mov
xor
jnp
aas
adc
jnp
sub
jle
pop
movsb
sub
or
insl
add
mov
imulb
jnp
sub
mov
leave
loope
xor
or
sub
imul
inc
aaa
mov
mov
jnp
add
call
xor
jnp
inc
jecxz
repnz
adc
ja
js
jle
xchg
jnp
movsl
arpl
jmp
push
pop
jnp
pop
push
ret
int3
jne
sarl
es
lahf
dec
daa
lods
mov
pop
cs
mov
xor
and
dec
jb
imul
jecxz
jnp
cmp
hlt
push
sahf
pop
jnp
mov
xchg
jnp
xchg
incb
sub
dec
lret
fidivl
lods
lods
outsl
sbb
lcall
adc
xor
out
iret
aaa
into
mov
in
jae
rorb
sbb
mov
mov
push
in
jnp
adc
jle
ss
and
out
push
jmp
loope
imul
bound
jnp
jl
push
mov
mov
inc
ss
mov
mov
push
out
lods
cs
imul
das
jecxz
and
out
sub
push
push
imul
jne
aas
jmp
lods
lods
and
xchg
repz
jnp
out
xor
sub
sbb
jbe
into
sub
stos
pop
push
or
jnp
int
xchg
add
and
mov
jnp
cmp
mov
mov
push
data16
inc
out
mov
mov
stos
pop
jp
push
imul
cmp
dec
sub
das
pushf
ja
sub
fldcw
and
dec
es
sub
ds
outsl
mov
cmpsb
jnp
pop
adc
jnp
lret
mov
mov
idivl
pop
test
lcall
jnp
sti
pop
dec
xchg
xchg
jnp
sub
jl
mov
sub
cmp
sub
push
mov
shl
aas
in
jnp
sti
jmp
mov
out
lods
in
loop
jnp
cmp
scas
jnp
cmpsl
sub
inc
adc
add
or
sti
outsb
adc
test
sub
pop
jne
add
dec
mov
pushf
fldt
jmp
xor
sub
pop
xor
popf
das
jnp
es
negl
gs
jae
mov
add
jbe
in
push
aam
inc
push
leave
int3
jnp
pop
stc
mov
push
insb
jnp
fwait
sub
sub
icebp
sahf
jnp
loopne
xchg
and
test
sub
cmp
gs
and
arpl
mov
adc
mov
outsl
pop
insl
hlt
sbb
cmp
sarb
das
mov
lret
out
fnstsw
insb
lds
push
dec
sub
jnp
mov
jnp
pop
add
call
icebp
sub
sahf
or
jne
sub
stos
jnp
out
movsl
sbb
mov
pop
adc
inc
addr16
fisubrl
inc
sti
pop
and
sbb
insl
cmp
sbb
inc
pop
rorb
fildll
arpl
pop
outsl
aaa
push
subb
cli
mov
push
push
icebp
cltd
xchg
or
ja
xchg
stos
push
push
scas
cmpsb
sub
scas
sahf
lods
cmpl
add
mov
and
adc
pop
loop
xor
jnp
sub
or
push
push
add
push
bound
jnp
into
mov
imul
jl
xor
imul
jns
dec
jnp
mov
cmp
addr16
xor
dec
inc
jae
daa
in
jae
insl
mov
sti
cmc
add
xchg
xor
dec
mov
jae
repz
inc
insl
xchg
outsl
xchg
fldenv
cmp
enter
jp
bound
xor
aaa
or
lret
jno
sub
dec
dec
sbb
xchg
xor
mov
pop
aad
icebp
inc
adc
xchg
sub
outsl
popa
jne
cmp
or
aas
jl
inc
jnp
pop
inc
cli
xorb
xlat
jno
mov
jnp
xor
xchg
insb
aaa
jnp
repnz
arpl
dec
pop
mov
adc
xor
mov
dec
loop
mov
stos
mov
leave
out
mulb
lods
jnp
xchg
dec
dec
cmp
mov
jnp
dec
add
mov
call
loop
jnp
lret
outsl
inc
in
sti
jnp
subb
or
sahf
sub
je
xor
mov
sbb
jl
jnp
jb
orl
inc
dec
cltd
mov
mov
jae
push
xchg
mov
push
inc
cmp
ret
jnp
pop
daa
sub
sbb
jno
mov
sbb
inc
jne
jnp
loope
sahf
out
dec
je
dec
push
psubusw
in
mov
xor
inc
jne
inc
pushf
cmp
fnstcw
jnp
outsl
sub
cwtl
jnp
pop
cmp
sahf
inc
pop
sarl
fnstenv
mov
xor
push
cwtl
aaa
pop
out
push
in
imull
sub
imul
mov
insl
dec
into
mov
cli
in
push
lods
pop
xor
inc
scas
sbb
cmp
imul
ljmp
daa
jnp
fucom
rcrl
pusha
cld
mov
sarb
xchg
out
jnp
popf
fsubs
orl
inc
mov
cmpsb
mov
subl
rcrb
xsha1
cmpsb
or
pusha
and
lcall
and
lret
push
out
pop
add
idivb
push
test
jnp
push
push
adc
jle
xchg
xchg
insb
es
mov
pop
fldcw
xchg
pop
xor
mov
ljmp
movsb
data16
cmpl
xchg
sbb
and
es
insl
inc
popf
jnp,pn
mov
mov
or
jo
sbb
repnz
pop
les
inc
push
out
add
sbb
div
cmpsb
dec
mov
into
outsb
lahf
aas
stos
jnp
sbb
mov
mov
out
clc
ret
push
fidivrl
cmp
popa
sub
inc
and
cli
pop
mov
jnp
cmp
lods
out
mov
pop
ja
jnp
fsubrl
or
pop
ds
push
cli
xor
jnp
fdivrs
mov
mov
mov
push
rclb
inc
mov
cmp
mov
loopne
std
pushf
test
jnp
xchg
cmp
addr16
jbe
or
out
imul
xchg
add
sbbl
add
cmp
outsl
xchg
cld
pop
test
hlt
stc
addr16
cmp
jp
dec
mov
ss
pop
sahf
dec
dec
lahf
sbb
cs
out
sub
jnp
cld
hlt
cmp
inc
jae
cmp
cmc
mov
mov
sbb
jg
mov
hlt
adc
dec
mov
insl
ret
outsl
lods
mov
out
cmc
jnp
std
pusha
call
jnp
mov
mov
xor
xchg
daa
hlt
test
fsubs
jge
ret
inc
sub
stos
jbe
cltd
out
enter
int3
or
call
es
pop
hlt
stc
cmp
sub
in
test
sbb
xchg
arpl
sub
pop
fistps
jns
or
clc
sbb
lret
call
jnp
fimull
stos
std
es
xchg
push
into
shr
cmpsb
mov
jno
pop
or
jnp
sarb
pop
stos
mov
in
cmp
jnp
jbe
add
sbbb
cmpsb
gs
outsl
pop
mov
xchg
lret
jnp
mov
mov
insl
pusha
lds
mov
adc
xchg
scas
lahf
jno
adc
lods
arpl
ja
out
push
lea
inc
sbb
mul
inc
mov
jnp
mov
and
test
dec
cld
je
jge
dec
jno
ds
loope
adc
mov
daa
in
mov
mov
and
jnp
add
cmp
scas
lods
inc
stc
pushf
xor
or
jnp
cli
mov
aad
and
sbb
pushf
int3
cmp
out
jnp
enter
stos
je
jnp
stc
pop
xchg
addr16
mov
jge
scas
enter
push
clc
xorb
lea
jnp
push
ljmp
js
push
jnp
or
loop
xlat
mov
xchg
sub
jnp
inc
sub
inc
mov
push
push
call
imul
jne
pop
adc
jnp
std
fstpl
stc
mov
mov
jnp
negl
int3
xlat
jnp
in
dec
pop
fdivrs
add
sub
popf
sti
in
jnp
ret
cli
mov
fcompl
mov
ja
data16
jns
js
push
mov
ret
sbb
or
lret
jnp
lock
enter
mov
stos
jnp
pop
mov
fs
imul
sbb
sbb
mov
jecxz
cltd
lcall
mov
fisttpll
fsubrs
test
repz
jno
mov
lock
inc
imull
pop
push
lret
cltd
sub
insl
cli
daa
out
lock
or
sbb
or
ja
repz
jnp
push
clc
lea
add
fsubrs
sbb
jnp
xchg
mov
scas
jnp
dec
shr
sub
jnp
or
fidivs
mov
out
sub
adc
xor
and
xchg
arpl
jae
sub
mov
hlt
fcomps
enter
inc
push
cmp
setl
lret
ret
or
in
mov
addr16
jnp
js
stos
in
pop
das
jnp
lods
lea
cwtl
fisubrs
mov
adc
mov
sub
jo
sub
lret
daa
push
cmp
xchg
imul
cmp
es
xchg
pop
pop
outsl
js
inc
mov
sti
out
in
nop
sbb
inc
jp
jne
addr16
scas
cltd
test
lods
call
in
lret
adc
std
int
cwtl
mov
dec
add
iret
ss
lods
insl
or
jnp
vmovntps
push
pop
dec
pushf
movsl
cmpsl
call
mov
ja
faddl
mov
inc
jnp
mov
cmp
jnp
adc
mov
jnp
push
or
mov
enter
flds
jnp
add
mov
dec
imul
in
mov
out
mov
test
push
adc
gs
mov
inc
cli
insl
mov
int3
push
leave
mov
inc
mov
dec
fdivrp
test
cmp
sbb
fisubrl
fldenv
cwtl
test
bound
faddl
mov
lods
in
ds
jnp
int
lret
mov
sbb
iret
addr16
pop
pop
lods
sti
xchg
mov
outsb
call
dec
inc
stos
arpl
xor
int
xchg
imul
mov
into
or
lea
mov
lods
cld
jnp
mov
xchg
lods
imul
jbe
mov
dec
popf
mov
das
hlt
sub
push
xchg
or
or
sub
adcb
adc
mov
aad
xchg
jno
jnp
push
sahf
cmp
mov
mov
stos
xchg
lea
stos
pop
int3
add
or
jnp
sahf
inc
push
fisubrs
cmp
arpl
sti
in
mov
arpl
int3
mov
sub
imul
inc
jle
ficomps
pop
jno
sub
cmp
popf
add
fmull
dec
mov
xchg
pop
stos
inc
jnp
ficoms
mov
repz
cmp
mov
hlt
fsts
pop
pop
jb
jns
sahf
jns
mov
mov
dec
pop
in
lret
jnp
rolb
jnp
and
fidivrl
or
jae
xchg
cli
repz
sbb
xchg
fsubrs
sub
hlt
cli
fstpt
fldl2e
pop
and
push
sub
bound
ds
pusha
add
adc
mov
scas
jae
and
jae
fbld
adc
xor
xor
daa
or
sub
fstl
ss
sti
pop
xlat
aaa
jno
cltd
movsl
jnp
lret
repnz
add
in
enter
test
mov
push
ljmp
xor
in
test
push
jp
aaa
jae
mov
inc
cmp
jnp
xor
jns
adc
mov
mov
cli
cmp
roll
ret
sbb
pop
jns
or
sub
jp
pusha
das
mov
dec
jnp
aaa
popa
mov
mov
int
data16
sub
dec
or
inc
test
jnp
add
imul
ja
ds
mov
cwtl
insl
repnz
or
sbb
jnp
mov
imul
mov
outsl
daa
adc
gs
and
jnp
call
xor
dec
or
out
or
fwait
jp
jnp,pt
jecxz
shrb
mov
jnp
mov
mov
jnp
mov
out
xor
inc
jnp
adc
or
imul
mov
adc
push
outsb
jbe
mov
aas
and
push
enter
in
ss
jnp
mov
inc
dec
jne
aas
out
and
loope
jnp
int3
aaa
push
arpl
dec
sbb
aaa
rcrl
sahf
or
pop
insl
clc
xchg
fst
lods
xlat
jnp
or
cltd
sub
fidivrl
mov
or
sbbb
jae
cmp
arpl
jnp
test
xor
xchg
mov
add
jnp
xchg
repz
orb
mov
and
mov
xor
sahf
cmpl
ja
fisttps
in
inc
cmp
inc
ljmp
pushf
pop
pop
pusha
divb
push
cmp
arpl
sti
daa
sub
ffree
insb
je
in
jnp
hlt
xchg
les
jg
jnp
xor
fimuls
cmp
jnp
sub
xchg
and
jnp
ret
icebp
mov
arpl
adc
loop
cltd
arpl
outsl
or
lods
mov
icebp
shlb
mov
sub
sub
je
xchg
jae
fxch
cmc
sbb
fsubs
lret
out
cmp
push
mov
pusha
arpl
imul
scas
scas
mov
jnp
cltd
enter
pop
daa
jnp
stc
sub
mov
jo
fs
inc
out
clc
mov
repz
sbb
mov
dec
cmc
aad
pop
in
push
cmpb
mov
or
jnp
jne
enter
out
ficoms
stos
mov
sbb
jo
jmp
xlat
cmpl
cmp
jbe
mov
and
movl
cmp
call
sbbl
iret
into
or
mov
jnp
inc
inc
xchg
jbe
inc
hlt
jnp
ret
insl
flds
jp
shll
mov
jnp
rol
and
xchg
adc
xchg
mov
xor
mov
pop
inc
sbb
xchg
sbb
or
jae
dec
ja
push
push
mov
mov
jne
xchg
cmpsb
cmp
and
pop
js
or
cmp
pop
sbb
jnp
test
mov
leave
es
adcb
sbb
cmp
fidivrl
or
jnp
fdivrl
dec
mov
cli
push
jnp
mov
mov
jp
mov
xor
mov
xlat
iret
jnp
pushl
lods
jmp
pop
mov
jae
mov
dec
mov
jl
in
push
aad
sbb
cmp
mov
xorb
daa
ljmp
in
jp
rcrb
divb
lods
add
cmp
stos
ja
pop
js
les
scas
stos
and
fdiv
idivb
jbe
leave
aas
lods
xchg
mov
adc
aaa
lods
pop
dec
jnp
xchg
cli
or
lret
dec
pop
insb
cmc
in
pop
cmp
pop
je
jnp
int3
mov
gs
in
test
or
dec
loop
test
inc
shl
xchg
cmp
jnp
push
dec
in
adc
nop
ret
push
fscale
jnp
pop
push
insb
jnp
pop
cmp
fs
push
ficoms
arpl
xchg
lods
rorb
dec
mov
mov
cmp
pop
addr16
jnp
imull
imul
test
push
xchg
add
pop
lock
imul
pushf
out
lods
jns
cmp
leave
jnp
call
jg
jnp
scas
popa
mov
insb
xor
push
lret
nop
sbb
inc
mov
lods
sbb
pop
insb
ja
fisubrl
jnp
push
push
xor
int
add
int3
out
jnp
ljmp
mov
add
mov
push
cmp
mov
insl
adc
pop
das
pop
cmp
jae
ss
aaa
testb
pop
lods
jnp
stos
hlt
jo
fdivrl
jnp
leave
pop
dec
mov
cmc
jnp
mov
popa
stos
jnp
lcall
jnp
pop
mov
push
jnp
lcall
sub
clc
bnd
ja
mov
mov
fnsave
idivb
test
sbb
dec
jnp
repnz
bound
fistpl
mov
repz
mov
jp
fs
inc
mov
xchg
dec
lcall
mov
jae
xor
cli
jnp
test
fimull
lcall
sti
inc
sbb
sarl
int3
in
rcrl
lods
stos
outsl
mov
jle
sub
mov
add
ss
mov
test
jg
pop
mov
and
into
jns
cld
insl
roll
insl
sub
jnp
cmp
loop,pn
mov
stos
sbb
push
cmp
stos
jae
dec
sub
clc
sub
mov
mov
shll
push
movsb
shrl
jae
imul
mov
jnp
pop
call
jnp
addb
cmp
ss
fdivr
fisttpl
jnp
fisttpll
mov
jnp
or
xchg
push
add
cmp
shrl
int3
pushf
arpl
mov
sub
icebp
mov
imul
scas
lret
enter
in
jge
cmpsb
data16
stos
mov
xchg
adc
inc
hlt
mov
and
cmp
inc
jp
imul
mov
scas
testb
hlt
xchg
jo
test
jnp
fwait
popf
in
dec
arpl
daa
repnz
cmpsb
outsb
mov
xchg
jg
inc
mov
int
popf
jnp
sahf
jbe
xchg
inc
leave
add
and
sti
in
fs
in
jnp
lcall
lret
bound
pop
cmp
imul
lods
jnp
cmp
sub
pop
popa
sub
adc
jnp
push
lcall
adc
sub
in
or
out
aaa
dec
popf
das
inc
mov
jnp
jl
pop
lcall
mov
inc
jnp
imul
jmp
fdivrs
sbb
rclb
jns
imul
jb
jne
ret
sbb
inc
push
pop
jnp
sub
in
out
mov
mov
out
sbb
mov
lods
scas
jno
call
cwtl
insl
out
lock
mov
jnp
pusha
movsl
mov
lods
adc
nop
aas
outsl
push
fisubrl
jnp
mov
imul
leave
daa
iret
or
lods
test
jnp
shl
aam
cmpb
mov
pop
in
dec
gs
jnp
pop
aad
dec
lcall
sbb
cli
daa
sahf
inc
mov
push
jnp
xchg
pop
add
jnp
or
mov
aad
mov
jnp
push
data16
add
test
mov
xchg
int3
or
in
xchg
dec
add
jnp
icebp
shl
cs
cmp
insb
mov
jmp
fwait
xchg
add
mov
cld
lock
lcall
xor
mov
jmp
mov
xor
cld
sub
pop
cli
jnp
fstl
jne
call
jae
inc
lods
aaa
or
push
shl
push
mov
mov
stos
pop
jo
cmp
cmp
push
sbb
or
push
add
inc
and
mov
xor
jno
stc
mov
in
cmp
pushf
int
and
mov
or
ror
cmpsl
jnp
cmpsb
jp
inc
repnz
sub
sub
insb
sbb
mov
jno
xchg
daa
in
mov
scas
mov
jnp
pop
push
xchg
dec
ret
pop
stos
cs
jnp
mov
jnp
inc
bound
into
sar
aam
dec
sbbb
and
xchg
jnp
xchg
lods
fimull
ret
mov
sbb
mov
jbe
cmp
aaa
xor
jnp
cwtl
mov
cmp
fistpl
inc
lret
pop
add
divb
cmp
and
repz
inc
mov
out
insb
push
sub
jg
push
jae
push
pop
ficoml
aaa
out
mov
test
out
scas
mov
jnp
ss
add
test
stc
aad
mov
sbb
mov
test
jne
or
xor
clc
ja
les
mul
stos
imul
js
push
cmp
or
lds
testb
jae
and
lods
jno
inc
cmp
cmp
ret
mov
or
adc
dec
ss
outsb
imul
in
repz
pop
icebp
out
or
sbb
jnp
pushf
sbb
mov
mov
imul
into
fisttpl
mov
inc
and
loopne
mov
cmp
jnp
imul
ljmp
jge
insl
or
add
jnp
xor
jmp
popa
sbb
out
sbb
jae
or
fmuls
lret
lock
jae
lods
add
jg
movsl
int3
outsl
out
or
lea
stc
mov
outsl
cmp
jmp
jnp
xchg
add
or
push
sbb
push
inc
into
jnp
in
pop
pop
jnp
aaa
mov
xchg
sti
jg
jnp
jmp
sub
mov
jno
jl
sub
mul
mov
dec
fnstenv
xchg
ljmp
fwait
out
outsl
outsb
fisubs
lret
push
mov
das
sbb
inc
push
sbb
loop
ja
stos
jmp
ja
and
xchg
xlat
outsb
mov
jnp
jle
push
dec
mov
repnz
pop
pop
dec
negl
mov
mov
push
or
in
std
cmp
mov
aas
flds
js
shlb
out
ficompl
aas
mov
rcl
jnp
js
mov
stc
dec
pop
imul
sub
pop
outsb
or
dec
cld
das
sub
mov
icebp
mov
xor
jnp
sahf
outsl
cmp
sti
xchg
loope
cmpsb
in
ja
push
lods
sbb
sbb
inc
call
stc
insl
cli
jnp
lock
and
test
jnp
repz
xbegin
cmpsb
out
ja
dec
int3
cwtl
imul
cmp
cli
imul
jae
aad
pop
out
sub
or
out
and
sub
jnp
repnz
stc
jnp
cmc
push
cltd
push
mov
mov
clc
add
and
or
pop
inc
fxch
cmp
cwtl
jp
in
mov
jae
sbb
pop
ss
test
dec
jnp
cs
movsl
sbb
sub
into
fwait
jecxz
push
dec
xlat
bnd
lahf
fucomi
leave
js
sub
call
jnp
mov
jecxz
scas
xchg
pop
jnp
xchg
pusha
lods
dec
inc
lahf
jnp
xchg
sub
inc
shr
call
jnp
mov
movsl
fmuls
cmp
jo
jnp
jbe
inc
mov
push
jno
lock
cwtl
push
mov
inc
shlb
or
iret
sahf
ss
sub
imul
jbe
add
lods
popl
or
jg
fwait
lock
ja
repnz
push
adc
lea
daa
push
call
rcrl
mov
outsl
out
or
out
hlt
cmp
and
jnp
cltd
stc
pushf
inc
pop
sub
jnp
mov
test
lea
xchg
popf
sub
or
jnp
cmpsl
insb
lea
fdivs
js
adc
inc
mov
notl
cmp
sbb
inc
mov
pusha
push
jnp
cld
mov
hlt
dec
lcall
jbe
jle
add
leave
jb,pn
jnp
mov
insb
cltd
popf
pop
mov
test
jb
jnp
xor
mov
jnp
mov
in
lret
adc
std
inc
sbb
gs
cmp
jl
jmp
int
sub
mov
fnstcw
or
insl
cmp
mov
or
mov
sub
adc
inc
enter
push
ret
xchg
jnp
xchg
xor
gs
hlt
addr16
sub
mov
cmpsl
inc
outsb
mov
push
mov
fildll
mov
in
roll
jnp
adc
pop
push
mov
sarl
xchg
cmc
pop
insl
lret
cmp
jae
repz
fstpt
inc
xor
sub
mov
je
mov
cmp
push
pop
jnp
mov
ret
jnp
mov
mov
pop
call
inc
mov
xchg
xor
sub
adc
inc
push
jo
jnp
mov
mov
xor
jnp
dec
mov
pop
sub
xchg
subb
sbb
pop
jg
xor
jl
imul
scas
lahf
ss
subl
inc
fcoms
pop
jge
and
xchg
jo
inc
loope
lods
xor
fidivrs
stos
mov
jae
push
sarb
pushl
int3
jnp
xchg
test
jnp
movsl
sbb
ss
sub
xor
dec
fistpll
jnp
cmp
into
push
std
lods
bound
cli
popa
fcompl
mov
or
mov
dec
lods
mov
jo
xchg
fidivrs
movsb
stos
pop
cmpsl
mov
cmp
lea
jae
jnp
cmp
jle
aaa
jnp
cmpsb
pop
add
fists
fs
dec
scas
adc
jnp
xchg
andb
gs
jnp
test
xor
jnp
xor
adcb
mov
cmp
mov
lcall
loop
and
mov
lods
dec
ds
mov
cmp
push
dec
push
jnp
sarb
jecxz
inc
jb
enter
insl
fisttpl
xchg
cmp
ja
push
and
call
mov
lods
dec
loop
jnp
repnz
pop
push
sbb
lods
or
jae
mov
adc
add
cmp
add
fldl
aad
pop
dec
add
mov
jae
and
sti
jnp
ror
pop
into
cmp
dec
mov
push
mov
and
sub
and
jecxz
aaa
inc
jg
xor
gs
pop
fsubs
inc
add
into
fsubrl
int3
adc
jnp
inc
sbb
xchg
push
jbe
lret
xor
jnp
cwtl
lret
mov
test
mov
js
mov
dec
lock
lcall
or
jnp
bound
imul
pop
jnp
add
xchg
iret
int
mov
test
in
sbb
sbb
cmp
mov
push
push
imul
sbb
aas
mov
dec
mov
mov
dec
je
stc
push
sub
into
mov
out
adc
jno
call
push
xlat
push
adc
mov
jnp
or
jle
jnp
outsb
xor
mov
es
pop
nop
jnp
mov
lret
sbb
mov
jnp
ja
faddl
ficomps
aam
lret
lds
inc
fidivrl
dec
mov
cmpsb
outsl
pmaxsw
pop
ja
pop
loop
pop
bound
xor
shll
imul
lods
popf
movsb
sub
push
in
fidivrl
xchg
jnp
and
jnp
xlat
jl
sbb
hlt
push
jnp
cmc
ja
dec
mov
pop
test
and
mov
imulb
or
jp
popf
sbb
sbb
and
sub
dec
int
sbb
add
jnp
mov
pop
dec
cmpsb
ret
leavew
or
sti
pop
pop
btc
fcmovnu
test
cmpsb
pop
inc
push
mov
scas
pop
cmp
ret
fwait
mov
test
dec
xchg
lock
inc
insl
sbb
leave
jnp
fwait
xchg
cli
or
js
inc
stos
push
mov
fistpll
cs
jp
pop
cmp
jnp
or
or
popa
xchg
mov
orb
adc
scas
test
ss
cmp
pop
jae
and
lods
call
push
cmp
mov
adc
in
jbe
orb
inc
pop
add
jnp
dec
bound
inc
andb
mov
mov
aam
daa
xchg
out
adc
shlb
lods
mov
and
jmp
mov
dec
xchg
sub
mov
mov
mov
add
jnp
leave
or
in
mov
jnp
fcoml
xor
int3
loop
jnp
in
dec
dec
lahf
mov
ret
jnp
push
mov
idivl
dec
rorl
jbe
or
xchg
cmpl
mov
push
pop
add
insl
mov
adc
out
fidivs
jnp
mov
jge
or
mov
jnp
push
add
mov
cmpsb
jnp
push
or
jge
testb
test
mov
sbb
jo
sub
jbe
in
cmp
sbb
jnp
pop
xchg
lods
sbb
movb
xor
push
rcrb
inc
fcomi
js
clc
sbb
inc
lahf
outsl
sti
sbb
int3
lock
xor
xchg
fwait
aas
jnp
pop
dec
sbb
sub
sarb
cmovbe
jnp
lea
xor
cmp
fisubrl
cli
clc
mov
cmp
ss
hlt
ret
xchg
cmp
cmp
lcall
sti
fdivrl
imul
xor
dec
jae
xchg
fdiv
jnp
mov
mov
jnp
add
mov
stos
add
andl
mov
adc
mov
rdtsc
xor
sbb
push
or
jg
or
es
aaa
push
xor
idivb
mov
mov
das
mov
jnp
jmp
negl
xchg
mov
sub
jb
xor
repz
mov
or
cmp
mov
ja
fiadds
inc
sarl
inc
cmpsl
fdivl
sub
mov
ljmp
jnp
aas
addl
iret
ss
lods
jnp
test
xchg
inc
pop
icebp
addr16
in
stc
jnp
loope
pop
or
sti
inc
pop
inc
push
icebp
imul
das
jge
jnp
xor
push
dec
cmp
cltd
dec
pop
xchg
jnp
call
or
mov
cmc
pop
fmuls
ja
cmp
inc
jnp
fnstsw
push
retw
jnp
arpl
jnp
sbb
std
imul
dec
pop
out
dec
js
ljmp
jmp
jne
push
jnp
ja
fcomps
ret
xor
data16
or
sub
in
xor
lods
sub
jae
inc
push
pusha
mov
jnp
pop
xor
imull
push
aaa
inc
xchg
sbb
out
clc
mov
fwait
aad
cmp
inc
push
mov
jge
pushf
add
cmp
dec
mov
jmp
movsb
jnp
xlat
loop
lods
in
sub
stos
aaa
add
xchg
adc
jmp
jnp
outsb
ljmp
sarl
ss
sti
pop
inc
daa
dec
imul
leave
lret
in
aam
clc
lock
jmp
or
and
xor
aad
mov
loop
out
daa
das
and
add
clc
dec
out
fdivrl
test
mov
lods
fistpl
jp
dec
mov
jne
jnp
call
dec
sub
out
jae
popf
xor
ret
sub
bound
fstpl
insb
mov
xchg
in
jnp
mov
hlt
scas
or
scas
jae
movsl
mov
jnp
mov
pop
push
iret
cmp
push
mov
outsb
push
movsl
jnp
test
mov
cld
xchg
lock
es
xchg
fs
hlt
mov
into
dec
jle
lods
out
out
sub
stos
lds
mov
push
dec
decl
jnp
test
loop
bound
lods
cmp
enter
addr16
ss
sub
mov
add
sub
scas
cmp
stc
sbb
arpl
or
add
lods
and
mov
out
mov
dec
inc
jg
mov
clc
jle
mov
sbb
outsb
insb
mov
jnp
mov
xor
cli
movsb
sbb
es
inc
mov
stc
arpl
mov
mov
ds
cmp
add
mov
push
mov
xor
jecxz
sbb
out
jnp
std
jo
data16
nop
testl
ja
mov
or
push
imul
xchg
in
xchg
pop
push
xor
pop
jnp
subb
mov
cltd
adc
inc
sub
mov
loopne
out
cmc
or
int
enter
cld
jnp
cmp
xor
cs
jne
pop
ss
push
jne
cmp
test
fsubl
adc
aam
stc
jl
imul
icebp
jecxz,pn
add
xor
enter
fcmovnu
sbb
xchg
jo
inc
adc
xchg
movsl
pop
mov
addb
popa
and
sub
xchg
mov
or
sbb
pop
jo
mov
xor
mov
xchg
ja
sti
adc
imul
xchg
pop
mov
aas
jb
ss
dec
outsl
lret
mov
lahf
fnstcw
xlat
or
sbb
ljmp
out
ret
insb
cmp
and
call
xor
sub
jnp
ja
jb
cmpsl
mov
jnp
bound
fwait
stos
ficompl
fxch
jp
sbb
loope
jno
xchg
jb
push
jnp
cmpsb
cwtl
jbe
imul
dec
jnp
ficompl
jnp
bound
cmp
sbb
sbb
outsl
push
cmp
popf
push
sub
jnp
dec
aas
mov
test
adc
jmp
or
out
pop
adc
cmp
insb
jo
pop
pop
outsl
mov
mov
jnp
jp
pop
gs
outsb
jnp
cmp
jmp
mov
imulb
shr
daa
mov
sub
call
insl
cmpsl
aam
in
xlat
or
jnp
pop
leave
and
jle
jnp
dec
in
fwait
adcb
mov
mov
cltd
cmc
xchg
bound
cli
test
popf
xor
lea
xor
adc
dec
cld
push
mov
fcmovnbe
xchg
sahf
lds
add
xchg
cmp
push
pop
fs
ficompl
fisttpl
insl
jnp
mov
mov
aaa
lock
push
jle
sbb
lods
ljmp
push
jnp
fists
sub
dec
push
sti
ja
shrb
jb
int
mov
repnz
arpl
dec
sub
mov
clc
test
jnp
daa
pusha
sbb
xchg
lret
out
mov
stos
insl
es
mov
push
cld
or
hlt
jnp
mov
add
cli
jnp
pop
dec
mov
mov
sbb
xor
adc
sti
repnz
popa
js
mov
push
outsl
jns
mov
jnp
jns
jle,pn
mov
jl
popf
movsl
add
mov
xchg
mov
xchg
jno
add
imul
mov
cmp
jmp
je
js
pushf
sbb
xor
mov
fs
cmp
xchg
arpl
insl
paddw
es
xchg
loopne
sbb
mov
add
jnp
mov
arpl
mov
sti
pushf
dec
jnp
mov
dec
popa
or
mov
sbb
xchg
or
loop
add
sub
mov
ja
sub
aaa
lods
inc
jnp
fistpll
jnp
add
pop
mov
insl
jns
xchg
or
mov
dec
imull
xchg
cmp
adc
stc
dec
jnp
sbb
je
dec
fildl
push
pop
sarl
imul
dec
mov
jnp
out
cmpsb
jle
xor
ljmp
data16
cmp
sub
es
fcomi
lods
mov
jnp
popf
lret
cmp
mov
js
push
cmc
mov
jne
scas
movsb
jnp
cli
pop
mov
mov
outsl
pop
aaa
xchg
lods
cltd
lock
xchg
jbe
push
ja
dec
mov
int3
adc
jnp
sub
out
ficoml
sbb
jns
loop
push
sub
jnp
or
imul
push
push
fxch
outsl
lret
je
jnp
mov
or
xor
sbb
push
pop
mov
and
xorb
iret
ret
out
sbb
lock
addr16
scas
fdivrl
sahf
into
cwtl
xchg
fcmovb
mov
jnp
pop
jp
cmp
mov
dec
test
cmc
or
mov
mov
jo
push
jl
sub
push
test
cld
sbb
insb
nop
xchg
sbb
jnp
lds
stc
inc
lret
cmp
fldenv
jnp
insl
pop
and
loop,pn
inc
jnp
add
xchg
mov
jnp
es
mov
and
jnp
xor
add
or
xor
sub
jmp
popf
dec
mov
and
call
lcall
or
scas
adc
inc
icebp
enter
dec
sbb
adc
sbb
lods
outsl
or
jp,pn
or
cmp
je
cli
mov
outsl
jnp
fldl
inc
daa
cmc
push
sti
adc
out
jecxz
mov
loop
mov
inc
divl
sti
jb
pop
cltd
dec
popa
inc
jp
sbbb
lock
bnd
pop
add
mov
mov
sbb
mov
pop
mov
xor
mov
mull
mov
dec
cmpl
out
xchg
jnp
ret
push
stc
mov
jnp
pushf
in
fisttpl
or
sbb
adc
sbb
insl
sub
sbb
or
lock
mov
xor
mov
call
xchg
stos
adc
dec
hlt
mov
jb
test
jnp
xchg
pop
xchg
bound
jne
aam
adc
mov
xor
lret
cmpsb
sub
push
mov
sub
jnp
mov
adc
jp
cmp
popa
outsb
lcall
sub
add
dec
fwait
jg
cmp
jnp
stos
mov
out
bound
jnp
cmp
lret
divl
das
fidivrl
xchg
sti
arpl
stos
loope
jnp
mov
push
sub
imul
jmp
pusha
das
call
push
cmpb
mov
mov
imul
jb
out
inc
adc
dec
push
in
jns
mov
sarl
xchg
sbb
loopne
dec
dec
out
mov
cmp
jnp
and
in
aas
jno
mov
jnp
bound
pop
mov
jnp
dec
ja
mov
jmp
les
jbe
push
dec
jnp
pop
ja
jbe
sbb
jnp
xor
or
notb
insl
push
cli
xchg
stos
sub
sbb
out
jbe
or
mov
push
enter
jbe
jns
jnp
xchg
test
movsb
dec
fmuls
shl
push
mov
out
cld
or
adc
push
mov
pusha
or
xor
jae
repz
jp
jnp
or
jge
out
jnp
dec
jns
mov
mov
repz
loop
movsb
movsl
sub
xchg
jnp
das
sbb
mov
gs
lret
sbb
xor
ds
jae
int
mov
scas
push
xor
ja
cli
je
aas
std
lods
jae
and
jnp
fdivrs
aad
in
test
mov
xchg
jnp
inc
mov
aaa
imul
and
mov
je
mov
and
mov
fnstsw
pop
aaa
daa
pop
jno
int
loope
insl
lahf
loope
dec
pop
rorb
sbb
lock
outsl
jp
negl
std
dec
mov
cmp
mov
push
int
jnp
rcll
mov
es
jnp
push
ret
stos
jg
cmp
jne
mov
jnp
pop
cmp
fdivrl
push
shlb
jbe
mov
leave
loope
andb
jae
ja
mov
sub
or
in
negl
call
push
adc
bnd
jg
or
dec
addr16
or
shrl
lret
ss
call
push
popfw
sub
popa
std
sbb
push
les
lds
out
out
sub
xor
je
lods
and
popa
test
mov
jb
repnz
ret
cmc
ja
call
jp
mov
mov
xor
jge
xor
pushf
lret
or
dec
lcall
jnp
inc
jg
and
or
inc
roll
bound
cltd
lcall
in
jnp
fdivrp
cmp
cs
pop
mov
clc
mov
inc
cs
push
or
das
test
or
stos
and
mov
push
dec
lods
mov
imul
cmpsl
insl
jbe
ljmp
lret
jnp
and
fiaddl
or
mov
out
pop
sub
push
fcomps
dec
and
xchg
adc
dec
mov
xchg
jnp
cltd
jecxz
movsb
mov
jnp
xor
stos
imul
adc
cmpsb
shrl
xor
daa
pop
xor
dec
insl
dec
mov
outsl
xor
dec
clc
sbb
inc
ss
clc
sbb
jnp
mov
and
cmp
sbb
xor
dec
jnp
ds
fs
lret
test
rorl
ds
dec
dec
clc
repz
dec
dec
outsb
fcmovnbe
pop
jnp
pop
xor
iret
cmp
lret
jnp
adc
adc
dec
icebp
mov
push
mov
gs
fcmove
jnp
sti
push
clc
lret
jnp
mov
popa
into
jnp
aaa
rolb
sub
or
stos
ja
scas
dec
mov
cmp
mov
in
mov
xchg
imul
lea
aam
sub
lods
ja
inc
mov
push
mov
fs
ffree
add
adc
iret
push
adc
mov
lret
pop
jns
in
cmp
movsb
cmp
add
aaa
ljmp
andb
or
out
sahf
sti
cmp
lds
xor
dec
mov
insl
lcall
push
mov
inc
mov
sbb
insl
test
fldcw
icebp
insl
sar
ds
ja
sbb
lock
inc
jne
iret
sub
mov
jne
cmc
push
call
mov
dec
daa
int
mov
inc
mov
pop
push
dec
mov
jnp
fbld
mov
fiadds
push
inc
fisttpll
and
sbb
int
cmc
fwait
mov
xchg
mov
jno
or
or
ja
xlat
bound
cmpb
xchg
rol
mov
or
hlt
dec
mov
clc
lret
movsb
inc
jg
sbb
add
sub
lods
pop
dec
jnp
sbb
imul
mov
rclb
mov
jnp
arpl
jnp
repz
xor
and
jecxz
imul
stos
rcrl
and
je
repnz
clc
jnp
cli
fistps
cmp
pop
mov
mov
add
addl
sbb
xlat
je
rcl
add
shrl
jne
pop
jnp
movl
adc
push
leave
dec
incl
enter
ret
jnp
xchg
pop
fwait
jbe
add
xorb
lods
ret
filds
jne
hlt
enter
testl
fisttpl
push
pop
jl
je
fidivs
sbbl
mov
pushf
dec
jle
xor
jmp
fmull
hlt
arpl
and
out
cmc
das
or
mov
and
adc
hlt
mov
idivl
push
pop
mov
aam
or
inc
push
sub
jbe
jne
xchg
pop
out
add
std
out
insb
test
dec
jbe
dec
mov
shrb
test
test
sub
jae
imul
jae
jne
jmp
enter
jp
jnp
xchg
mov
push
mull
clc
and
imul
mov
mov
imul
jb
fidivl
icebp
inc
les
lods
fdiv
push
insl
clc
int3
cmc
imul
pop
or
movsb
xchg
in
mov
mov
xor
in
add
jae
sahf
repnz
lcall
lods
and
hlt
jnp
mov
cld
jnp
sbb
ss
fsts
xchg
add
push
std
mov
jnp
stos
outsb
adc
roll
rcrb
aas
call
push
mov
fisttpll
sub
cmp
lahf
jnp
pusha
lcall
inc
xchg
xchg
jnp
mov
jnp
roll
jo
xor
mov
adc
sbb
popa
insl
mov
xchg
mov
js
push
rcl
mov
pop
push
sti
lret
jnp
pop
xchg
and
mov
xchg
mov
mov
repnz
xchg
dec
dec
scas
gs
iret
push
cmp
nop
dec
pop
jnp
popa
aas
and
jnp
xor
sbb
fstl
outsl
mov
cli
jns
pop
cs
stos
clc
loope
jnp
ds
lcall
xor
loop
sarl
cmc
mov
pop
pop
shrb
jnp
ljmp
sub
bound
hlt
gs
and
shll
mov
movsl
xchg
insl
nop
dec
ss
xchg
pop
jnp
dec
out
jge
cld
pop
sub
xchg
je
dec
sahf
xchg
test
or
int
pop
inc
outsl
sub
inc
xlat
mov
xchg
pop
fcmovb
jae
jnp
or
out
aam
jnp
jmp
xor
sbb
or
cltd
sbb
dec
mov
inc
pop
xchg
aaa
or
lods
mov
in
push
add
outsb
sbb
data16
movsl
ss
mov
xchg
jnp
mov
push
fdivrs
mov
or
int3
out
jnp
and
rcll
mov
sub
mul
or
push
mov
or
dec
cmp
sarl
cmp
stos
mov
sub
mov
and
jnp
jmp
inc
sbb
repnz
sub
andb
xchg
jnp
andl
adc
jp
in
cmp
cmp
push
sub
lods
or
push
ss
stc
pop
jbe
lret
loop
gs
rclb
loope
add
ds
fwait
test
jnp
out
lock
scas
jnp
cld
push
mov
fnstcw
xchg
stos
in
and
jnp
dec
fisubl
mov
shll
stos
hlt
pop
ja
mov
xor
mov
lret
sbb
inc
arpl
ja
insl
cli
movsb
fwait
jnp
sti
adc
sub
xchg
xor
sbb
cs
fldt
mov
inc
pcmpeqd
idivb
out
xchg
add
mov
or
mov
iret
mov
sub
test
jmp
in
xchg
dec
sub
cmpsb
inc
fldenv
jae
testl
mov
cs
jge
jnp
out
xor
scas
mov
call
imul
mov
lods
test
lret
fs
sub
clc
sbb
in
sub
addr16
ss
pop
cmp
stos
push
push
out
mov
mov
adc
outsb
push
jb
leave
mov
push
inc
movsb
loopne
imul
pop
pop
lods
loope
sbb
jne
enter
mov
mov
jnp
lods
jne
jno
cwtl
dec
sub
mov
or
mov
sahf
leave
sbb
call
and
test
pop
sbb
scas
imul
push
sub
xor
scas
xchg
jp
push
les
pop
pushf
xor
jnp
divb
out
xor
pop
imul
inc
push
dec
ja
lods
enter
jbe
test
jnp
mov
push
cmp
jbe
add
test
sub
in
aaa
movsl
xor
inc
scas
pushf
aam
and
fstpt
xchg
or
sbb
jg
int3
jnp
shll
mov
jnp
inc
insl
dec
lret
jno
jnp
ret
mov
mov
out
dec
popf
popa
jnp
shlb
rcll
sub
pop
dec
sbbl
int3
dec
and
inc
mov
adc
sub
lods
push
inc
int3
jnp
mov
in
jnp
fisubrl
mov
jnp
aaa
xlat
call
or
gs
mov
jbe
stc
hlt
shl
jnp
shrb
aaa
sti
mov
out
xor
xchg
cmp
cltd
mov
and
jb
jne
cltd
or
dec
imul
data16
sub
je
outsl
hlt
mov
mov
gs
pop
or
jnp
jecxz
mov
lret
jnp
xchg
std
lock
mov
icebp
dec
push
fcmove
jmp
adc
mov
in
in
mov
jnp
cltd
fldt
xor
ljmp
bnd
pop
jne
enter
mov
scas
push
sti
mov
xlat
pop
pop
mov
jne
ds
cli
fidivrl
pushf
iret
inc
loope
adc
call
cmc
lret
paddsw
bound
adc
jnp
jno
stos
lods
add
ret
fsubrs
sbb
test
shrb
add
jmp
jnp
outsb
sub
shll
and
lahf
push
in
inc
jnp
push
push
xchg
loopne
sarb
imul
xlat
sbb
sub
loop
pop
adc
gs
xchg
jnp
lcall
or
sahf
jbe
xchg
stc
jp
mov
mul
js
test
add
pop
daa
scas
pop
mov
jne
jnp
dec
pushf
push
mov
daa
jns
or
jnp
enter
cmp
or
ja
rcr
pop
or
jne
inc
jge
lds
sub
dec
mov
pusha
leave
jo
pop
pop
jnp
cmc
inc
mov
jnp
mov
xchg
jnp
push
rdpmc
mov
ss
cmc
sbb
mov
adc
push
jnp
xor
rcl
imul
movsb
jnp
inc
pop
mov
sbb
mov
rolb
cmpsb
das
test
dec
jnp
out
bswap
scas
sbb
jecxz
loop
mov
cmp
fwait
dec
jae
lret
notl
jnp
add
xchg
jo
jnp
fistpl
xchg
jne
dec
sbb
jnp
gs
addr16
push
push
ss
cmp
mov
xor
ret
jnp
inc
sahf
lock
mov
sarl
mov
jnp
push
shl
cltd
addb
mov
xchg
loope
jae
sbb
das
pop
pop
ret
jne
loopne
lret
ja
push
jnp
lcall
jmp
jns
aaa
jnp
adc
mov
push
das
jnp
arpl
ss
adc
notl
outsl
sbb
jp
ja
jge
mov
out
call
cmpb
cli
jne
int
xor
jnp
mov
arpl
jnp
lods
out
in
push
jnp
lahf
popf
daa
call
mov
sub
outsl
jg
sti
jnp
mov
lret
add
jmp
jnp
cmp
in
fldt
movsl
mov
jnp
pop
cmp
pop
lods
outsb
pop
xchg
xchg
pop
cltd
jnp
out
mov
mov
sub
cmp
and
int3
pop
aaa
pop
jnp
in
push
mov
dec
lods
insl
jnp
stos
jp
xlat
shlb
jnp
inc
bound
sahf
in
insb
cmp
push
cwtl
inc
ds
or
outsl
mov
mov
mov
sbb
fcmovnu
dec
dec
xor
xchg
push
jnp
call
jnp
ja
sub
push
fstpt
jnp
in
lods
stos
pop
hlt
imul
mov
lret
dec
jmp
jecxz
push
jle
stc
jo
jne
cmp
outsb
pop
jnp
sub
cmpsb
sbb
pusha
call
cld
mov
sub
jnp
cmp
jp
cmp
xor
jne
cmpsb
sub
pop
inc
jnp
std
sahf
mov
mov
push
clc
and
js
imul
jnp
pop
xlat
mov
data16
sbb
lcall
pop
mov
popa
movsb
loope
adc
push
mov
sub
push
and
jnp
sub
fcompl
jb
jnp
iret
adc
jnp
cmp
dec
xchg
pop
aam
xchg
mov
jbe
jnp
fwait
in
shll
cmpsl
arpl
jnp
jp
cmp
loop
pop
xchg
sub
shll
ds
jnp
push
sarb
std
jne
sbb
pop
mov
sub
xchg
xlat
sbb
test
jg
leave
adc
mov
insl
sbb
call
fsubrl
mov
pop
push
imul
inc
mov
pop
test
bnd
scas
pop
push
pop
fimull
shr
push
int3
hlt
fsubl
jnp
push
inc
push
xor
sbb
adcl
int
xor
xchg
fnsave
jbe
mov
out
inc
add
mov
daa
dec
dec
jnp
push
xlat
aaa
or
jnp
lret
cmp
jg
cmp
mov
shll
nop
inc
push
stc
jnp
push
push
adc
clc
aaa
sarb
mov
sub
in
mov
push
jb
ljmp
fwait
hlt
shrl
mov
ss
jnp
jmp
pop
jnp
sbb
aad
jg
ljmp
fdivrs
cmp
test
jnp
mov
cmp
sub
in
jnp
sub
push
or
jnp
mov
notl
adc
jnp
push
xchg
and
dec
sbb
jne
cmovb
cmp
loop
subl
cltd
mov
lock
jno
mov
aaa
nop
cmp
repz
rolb
jnp
mov
jp
hlt
xchg
bound
out
les
and
popa
jnp
sub
pop
mov
pop
jnp
sbb
insb
dec
cmp
cmp
test
testb
mov
mov
enter
insb
addl
jge
lods
imul
add
scas
aad
and
cmp
dec
jb
fistpll
enter
loop
shr
lcall
fdivl
aas
and
jae
push
jo
enter
lods
or
mov
int
out
icebp
sub
adc
fildll
ja
es
popf
js
sti
dec
xchg
out
mov
push
js
cmp
ja
push
jnp
out
lahf
xor
lock
sub
mov
outsb
inc
loope
jne
adc
lods
inc
mov
and
setns
push
jno
jnp
sti
push
or
mov
flds
lods
jnp
mov
in
jae
sbb
adc
aaa
pop
fidivrs
mov
icebp
or
xchg
mov
adc
notb
jnp
stos
adc
outsl
sub
mov
insb
xor
dec
push
in
sbb
cli
loop
ja
mov
subl
adc
jnp
mov
stos
or
sbbb
iret
jnp
pop
pop
les
jge
std
adc
outsl
push
mov
adc
push
aam
push
jnp
sbb
xlat
leave
cli
bound
aaa
enter
stc
sbb
cmp
dec
repnz
in
jp
dec
adc
out
pop
push
cmp
inc
arpl
or
out
pusha
cli
imulb
jnp
push
xor
cmp
fst
or
bnd
movsl
subl
jnp
jb
outsb
addr16
test
aad
jnp
or
push
adc
inc
fsubs
sti
jl
lret
out
fs
mov
dec
mov
push
sti
ljmp
jbe
fwait
insb
xlat
adc
or
cmp
jmp
add
jae
out
cli
and
lods
inc
mov
lret
lods
clc
aam
sbb
hlt
cmp
mov
and
xor
mov
clc
sti
or
scas
mov
xchg
repz
sbb
push
jnp
in
fcmove
pop
jnp
je
divb
lods
mov
jne
or
pop
mov
cmp
cli
fsubrl
jae
outsb
mov
int
mov
lds
mov
sbb
insb
enter
sbb
mov
jae
mov
call
mov
outsb
cli
jnp
fstps
into
push
sub
fwait
repnz
popf
jnp
out
imul
mov
bound
leave
test
jp
mov
lock
sbb
and
xor
lods
aas
sbb
cmp
test
pop
and
pushf
push
cs
and
push
scas
imul
mov
pop
mov
test
test
jmp
fidivrl
inc
mov
sbb
cwtl
cmpl
or
mov
enter
mov
outsl
jns
cwtl
insl
push
stc
negl
and
test
js
xchg
sti
sub
out
jae
push
cld
in
cs
or
fisttpl
stc
movsb
outsl
int
or
aas
sub
xor
or
sub
sbb
jne
jne
sbb
push
xor
cs
adc
or
popf
jmp
les
jnp
iret
pop
ss
jmp
test
xor
cmp
pop
push
adc
in
cmp
jp
sub
pop
int3
sarb
std
mov
mov
cmp
sub
not
push
jp
inc
push
fsubrs
or
mov
pop
xchg
movsb
sub
and
das
aad
sbb
subl
sbb
or
inc
ljmp
cmp
fnstenv
sbb
mov
imulb
in
adcb
xor
repz
jp
pop
das
sbb
push
jnp
or
pop
divb
fwait
dec
xor
out
sub
fwait
sarl
repz
jns
shlb
imul
sbb
adc
test
push
fldpi
sahf
jno
mov
sub
pop
outsl
arpl
lea
into
outsl
pusha
xor
mov
sub
or
mov
xor
mov
popa
pop
or
jnp
es
out
shl
sti
iret
pusha
adc
mov
add
repz
dec
dec
cmp
pop
cmc
in
movsl
out
lcall
imul
inc
and
in
lahf
arpl
xorl
jnp
mov
mov
or
scas
sub
lods
cmp
fiaddl
out
mov
cmp
push
shr
xor
cmp
push
clc
pusha
jge
je
jnp
nop
jae
mov
fdivs
aaa
sub
push
sti
lds
jns
hlt
pop
jnp
enter
or
cld
pop
int
mov
mov
pushf
mov
xchg
subb
shlb
inc
sbb
lods
sub
lods
sbb
xor
or
adc
cmc
inc
mov
or
sbb
mov
movsb
jae
and
stos
scas
jnp
addr16
adc
add
xor
inc
jo
sub
xlat
or
and
jnp
mov
sti
sub
out
pop
push
in
loop
pop
outsl
jns
fucomip
in
jnp
cs
push
xor
mov
fwait
jae
sbb
out
or
cmp
scas
enter
dec
inc
add
shll
or
pop
aam
inc
sbb
jbe
push
jno
adc
pop
or
xor
add
jb
mov
xor
mov
das
cmp
jnp
cli
push
or
push
cmp
add
sti
xchg
insl
dec
pop
jnp
fisubrs
push
jnp
stc
push
fsts
sub
cmp
out
in
hlt
xor
mov
pop
push
or
cmp
sub
jnp
inc
mov
mov
fwait
icebp
lea
and
or
adc
sub
jnp
aam
push
rcrl
mov
adcb
mov
out
jp
jnp
mov
jmp
jnp
sbb
mov
scas
cltd
iret
imul
data16
mov
dec
cmp
push
jnp
mov
lods
mov
inc
mov
and
adc
jnp
cmpsb
add
jo
jnp
push
pusha
jmp
movsb
and
mov
sub
insl
cmp
mov
jnp
lcall
mov
mov
imul
xor
add
mov
sbb
ljmp
aas
lret
mov
outsb
cwtl
jnp
movsl
or
rorl
sbb
outsl
add
jl
cmpsb
push
push
dec
cmp
loope
lods
in
fnstcw
jne
jecxz
stos
lods
mov
scas
dec
mov
jnp
stos
pop
mov
in
xor
sub
aam
adc
out
push
flds
dec
dec
mov
je
outsb
fisubrs
adc
and
dec
push
xchg
cmpsl
movsb
scas
test
cmp
jnp
ljmp
or
xor
mov
sub
push
aam
add
jnp
loopne
sti
push
fcoml
mov
sbb
orl
push
pop
add
out
xchg
test
cwtl
lret
imull
xchg
fidivrl
jnp
sub
subl
sbb
push
movsl
insl
mov
aaa
xchg
cmpsb
jnp
mov
icebp
jnp
xor
jnp
adc
sahf
mov
jnp
inc
rcrb
jnp
add
bound
xchg
dec
pop
push
sbb
cmp
js
mov
mov
mov
push
mov
xchg
jno
xchg
gs
jmp
xor
jnp
lcall
jnp
jne
es
xchg
jecxz
jmp
lea
dec
pop
or
cmp
jg
insb
mov
aaa
fistl
add
lods
jnp
cmp
leave
sahf
inc
mov
push
pop
mov
int
movb
or
sub
mov
mov
jnp
in
mov
adc
jnp
or
xchg
mov
arpl
sbb
dec
lds
out
jnp
fdivrl
cld
dec
mov
jne
in
and
je
cli
jnp
sub
out
add
push
cmpsb
out
ss
stos
cmc
cmp
lods
fldenv
imul
pusha
mov
ss
mov
std
jnp
cmp
mov
jnp
or
hlt
push
lret
jnp
aas
in
js
jmp
jnp
or
divb
mov
mov
pop
jno
movsl
lret
ljmp
mov
dec
mov
loop
es
or
pcmpeqw
inc
cmp
dec
jnp
xor
sub
jnp
loop
lods
or
mov
cmp
cmp
testb
nop
jnp
mov
pop
jnp
ljmp
jns
cmpsb
and
enter
add
stos
ret
pop
je
sbb
xor
ja
mov
aad
cmp
cli
mov
aas
lods
clc
pop
stos
mov
and
jnp
pop
popf
icebp
or
or
mov
repz
adc
lret
jnp
cmpsb
jg
jne
pushl
or
jmp
cmp
stos
insb
jns
or
jge
scas
pop
jnp
xchg
cmp
int
jg
dec
mov
roll
cltd
jmp
cmpl
mov
in
jecxz
insb
ss
jnp
out
jns
mov
fwait
cmp
arpl
jnp
mov
jecxz
jnp
add
xchg
lock
jge
mov
dec
adc
jnp
and
js
ret
scas
inc
bound
imul
test
std
jne
sub
fistps
dec
cmp
fldenv
popf
jne
xchg
sbb
outsb
out
jmp
sbb
push
mov
jnp
ljmp
jnp
mov
call
push
pop
cmp
jo
test
jge
dec
insl
lea
xor
aad
inc
mov
je
cltd
in
imul
dec
jb
imul
insl
es
stc
push
stos
clc
outsb
sub
fwait
movsb
mov
jae
jne
out
jnp
fs
or
dec
daa
loop
or
imul
pusha
lods
test
out
movsb
jg
mov
jmp
je
dec
add
mov
lcall
insb
jnp
cmp
loop
mov
push
sbb
mov
inc
popa
loopne
scas
test
jnp
fmulp
jne
mov
mov
out
add
imul
cmp
popa
mov
ja
ljmp
lock
outsb
xchg
xor
adc
mov
lea
xchg
adc
push
sub
imul
ret
cmc
aad
dec
cmp
jnp
hlt
and
dec
insl
lcall
ljmp
jmp
jne
sti
jnp
or
clc
inc
sbb
xor
out
hlt
jns
imul
mov
outsb
jp
jnp
mov
loopne
and
sbb
and
sbb
test
mov
inc
cwtl
xor
push
jne
imul
pop
call
outsl
ja,pt
sbb
mov
imul
and
sbb
gs
lock
dec
int
std
cmp
popf
jbe
mov
lock
jnp
mov
sahf
mov
fisubl
jnp
pop
mov
test
pop
sbb
or
xchg
push
jnp
push
mov
jnp
movsb
mov
jbe
daa
and
out
or
jno
clc
jl
cli
sbb
xchg
cmp
lds
and
out
xchg
in
test
pop
arpl
sub
daa
dec
push
cmp
mov
add
inc
jnp
mov
cmp
xchg
adc
cmp
or
push
addr16
push
pushf
cmp
mov
pop
stc
mov
xchg
jnp
sub
xchg
xor
les
ss
dec
add
mov
xchg
jp
fwait
jnp
mov
stos
es
fimuls
adc
ds
mov
rol
in
popf
mov
mov
cmp
ja
lea
lds
cmc
sbb
jnp
xlat
lret
pop
icebp
fstpt
add
in
out
jnp
inc
sub
add
jp
lcall
out
stos
xor
jo
loop
push
push
jnp
cwtl
sub
testl
jnp
jp
std
mov
in
insl
lock
jnp
and
lods
add
lret
pushf
aad
or
es
js
out
movsb
jae
bound
sbb
hlt
clc
lret
aas
lods
call
push
roll
fidivl
ljmp
sbb
daa
mov
lcall
sbb
pop
scas
cmpl
cmp
cmpb
cmp
cs
or
fwait
inc
bound
jnp
xor
push
test
inc
inc
mov
in
notl
daa
shlb
xor
push
in
movsl
jnp
cmp
lds
adc
inc
xchg
mov
pop
outsl
jno
out
imul
jmp
lret
scas
cmp
mov
or
sub
into
out
jmp
cmpsl
sbb
sub
xorl
cs
jge
mov
mov
iret
in
out
aam
jnp
inc
mov
stc
lret
jnp
add
cmp
xchg
mov
fistps
dec
call
sbb
and
sub
pop
jns
ljmp
mov
lods
mov
insb
stc
scas
add
add
or
xorb
cmpsb
js
loopne
xchg
pop
dec
add
lret
inc
xchg
cli
cwtl
xchg
mov
jl
lret
jnp
mov
insl
cmp
mov
inc
jp
mov
pop
dec
mov
dec
pop
outsl
pop
lret
cmc
outsb
jnp
daa
push
out
mov
fsubr
arpl
mov
lcall
into
xor
mov
push
jbe
pushf
xchg
pop
inc
stos
mov
mov
fiadds
jb
fldt
pop
adc
xchg
jmp
stos
dec
outsb
xchg
pop
sbb
jnp
mov
cmpsb
xchg
mov
in
arpl
addr16
ljmp
loopne
repz
xor
xchg
idivl
jnp
push
push
jg
pop
mov
das
xchg
jno
popf
push
jnp
mov
insb
pop
ret
add
sub
stos
sub
jnp
xchg
movsb
pop
mov
test
jnp
out
inc
inc
das
mov
and
fdivp
imul
in
xchg
dec
aas
cmp
arpl
bound
jb
mov
mov
adc
icebp
iret
outsl
shl
push
fstpt
pop
inc
dec
adc
jns
insl
jo
enter
sbb
repnz
xor
cwtl
pop
popf
xchg
adc
insl
pop
push
enter
push
pop
or
int3
mov
sub
and
or
mov
sti
fisttps
mov
mov
loopne
aam
in
mov
xlat
cmpb
mov
mov
call
or
stc
jnp
cld
je
cmp
xor
jmp
fldl
dec
jnp
scas
push
push
and
cmpsl
jb
pop
pop
test
dec
les
out
jecxz
jmp
mov
dec
mov
inc
aam
jo
jne
fdivrs
mov
xchg
lods
insl
in
jnp
ficoml
push
cwtl
ja
jnp
cmc
inc
nop
adc
scas
and
les
lcall
movsb
outsb
jnp
jp
hlt
mov
adc
jbe
push
popf
leave
dec
psubsb
out
add
and
push
out
rcrl
pop
cmc
dec
mov
and
jecxz
in
jne
nop
cmpl
movsl
bswap
jnp
movb
into
jne
mov
jg
dec
outsl
das
test
fisttpl
movsb
idivb
jo
out
xchg
jnp
fdivp
push
ja
sub
dec
cmp
aaa
outsl
xor
or
jns
movl
int
mov
dec
imul
add
xchg
push
bound
inc
pop
cli
sahf
lret
fistps
pop
ficoml
fisubs
sub
dec
jbe
ret
sbb
sbbl
loopne
sahf
jnp
xchg
sub
js
adc
fs
out
lret
cmovne
jp
lcall
out
push
cmp
pop
in
mulb
sub
jnp
and
repnz
dec
jb
jnp
adc
jne
pop
add
push
ja
or
aad
nop
outsb
dec
xchg
sbb
inc
int
pop
xorb
jnp
cmp
sbb
ret
dec
sbb
mov
add
sbb
jnp
xchg
shrb
sbb
testb
mov
jne
sub
rclb
pop
xor
jnp
test
inc
ljmp
cmp
pop
sahf
cmp
je
in
cli
lret
cmp
dec
mov
not
sub
testb
ret
cmp
out
jnp
les
add
dec
pop
jnp
lcall
jnp
ffreep
inc
xchg
mov
jp
cli
daa
nop
dec
sub
pusha
insl
je
imul
mov
aam
add
scas
lods
dec
mov
sub
mov
repnz
sbb
add
xor
sub
movsl
popa
sbb
iret
test
jnp
adc
sub
mov
cld
cmp
out
scas
jo
lret
xchg
neg
je
cmp
into
jmp
iret
mov
jae
adc
ss
xchg
xor
popa
and
cli
push
push
jno
dec
fisubrl
sbb
fwait
int3
and
stc
cmp
xchg
popa
sbbl
adc
aaa
jnp
pop
cmpsb
xor
lods
cltd
out
stc
stos
mov
orl
inc
in
fistps
pop
inc
mov
mov
xor
insl
test
push
mov
mov
lret
aaa
int3
adc
jnp
or
add
lods
jns
sub
inc
xor
jmp
movsl
or
cmp
test
inc
xlat
pop
dec
jae
pop
jae
jnp
cmp
fwait
add
jmp
sbb
add
loope
ret
pop
jnp
push
pop
pop
pop
dec
in
mov
movsb
push
ljmp
jnp
or
jne
mov
pusha
push
loop
jge
testb
stos
add
dec
adc
xchg
pop
mov
in
mov
mov
loop
dec
clc
pop
cld
push
cmp
divb
cltd
ljmp
jno
xchg
xlat
out
cmp
jnp
mov
es
je
cmpb
std
jnp
push
sbb
jns
jnp
push
mov
xchg
test
repz
repnz
outsl
imul
xor
or
in
adc
frstor
push
jae
xor
push
jnp
and
pushf
loope
mov
das
bound
xor
pop
xor
xor
add
mov
inc
push
xor
int3
fldt
enter
popl
pusha
test
inc
xchg
jnp
inc
add
loopne
adc
jnp
mov
mov
jnp
xchg
loope
sub
mov
mov
mov
mov
add
mov
jnp
jno
and
dec
cmp
xor
mov
and
push
sbb
jae
add
cli
lret
dec
jnp
push
arpl
xchg
push
jnp
fisttpll
outsl
jnp
call
dec
pop
jnp
jle,pn
jbe
sbb
jnp
mov
ss
xor
cmpl
xor
jne
dec
nop
fnstenv
int
jnp
cli
xor
mov
lret
das
js
jnp
test
fwait
aaa
mov
imul
inc
dec
or
enter
aad
jnp
xchg
or
lock
das
imul
push
shlb
scas
jnp
xchg
push
iret
nop
call
pop
fwait
mov
sahf
pop
call
pop
jo
add
jnp
xor
xor
scas
div
hlt
lods
aam
jnp
cmp
dec
pop
in
jle
fldln2
fcomps
aaa
imul
xlat
lods
mov
cltd
xor
jnp
ficompl
mov
hlt
daa
stc
dec
iret
icebp
fcoms
std
sahf
jmp
adc
xor
fisttpl
sub
fidivrl
push
adc
jb
cmpsl
dec
cmp
lods
cli
jnp
ret
inc
fcmove
addr16
jo
lret
lods
in
or
lret
or
imul
adc
push
es
pop
and
jnp
flds
lock
push
jb
mov
jbe
sbb
pop
inc
push
jle
jne
jnp
cs
gs
mov
cmp
cmp
les
jnp
and
mov
adc
sbb
outsl
jmp
pusha
add
cmp
das
inc
movsb
adc
jnp
sti
push
fsubl
mov
iret
or
xchg
jnp
add
and
dec
and
fwait
jge
in
enter
sahf
cmp
insb
xor
aaa
sarb
hlt
jnp
push
or
or
and
mov
jno
jnp
leave
pop
aaa
nop
fwait
dec
mov
out
jnp
and
addl
mov
lods
push
rcll
push
mov
jmp
jnp
adc
jno
dec
add
or
dec
aad
fsubrs
popa
jae
jb
fcmovnb
jnp
sub
or
out
xor
pop
pop
cld
test
jnp
dec
cli
cmpsl
mov
mov
fldenv
sub
js
and
faddl
or
jnp
lret
or
fistpll
test
ds
add
fcoms
insb
mov
cmp
pushf
mov
sub
add
sbb
js
sbb
push
fwait
push
mov
jnp
std
or
pop
inc
hlt
inc
dec
dec
jno
and
mov
int3
add
divl
mov
jnp
lock
cmpl
aam
sub
dec
sti
popa
arpl
lock
dec
lret
and
in
add
insl
pop
lods
mov
repz
iret
sti
add
or
lahf
adc
cli
jae
std
jl
mov
sub
jnp
mull
and
rcl
je
outsl
sti
lods
es
lods
clc
cmp
jbe
addr16
movsb
pop
xor
imul
lret
lods
pop
cld
outsb
aam
fwait
jnp
cwtl
jge
xchg
push
or
lock
cmc
jecxz
xlat
mov
outsl
sub
adc
jae
adc
cmp
xchg
dec
add
dec
jle
cld
adc
mov
inc
or
out
aaa
mov
cmp
fsubrs
cmpsb
in
mov
mov
lret
sub
and
mov
out
and
mov
add
mov
mov
or
outsl
inc
push
negb
or
popa
jae
sahf
cld
js
mov
popf
push
mov
xor
inc
stos
ret
push
mov
mov
or
aaa
inc
jnp
xor
sub
je
or
jbe
mov
bound
jp
mov
daa
xor
jnp
lods
fdiv
das
mov
jnp
sbb
push
lcall
sub
mov
ret
add
les
out
and
xchg
stos
xchg
inc
jnp
mov
fchs
mov
lods
xchg
inc
addr16
push
aaa
std
pushf
dec
jbe
jnp
jmp
sahf
adc
lret
sub
jae
xchg
dec
scas
dec
add
into
jmp
mov
in
mov
ja
xchg
cwtl
lahf
push
jmp
jmp
hlt
stc
jp
pop
es
ja
sarb
jecxz
jns
jo
repz
pop
adc
jl
ljmpw
hlt
cli
jnp
fistpll
mov
jnp
xchg
and
std
dec
leave
xor
mov
mov
jnp
out
mov
rcll
jnp
cltd
xor
mov
xchg
hlt
and
repnz
jnp
push
out
xor
int3
adc
shll
ljmp
pop
je
mov
dec
xlat
jne
test
mov
cmp
push
xor
mov
or
ficomps
cli
push
jl
push
stos
popf
cld
mov
shrw
fstpt
mov
mov
cmpl
sub
xchg
mov
lcall
dec
jnp
mov
je
jnp
in
inc
daa
add
test
mov
jle
inc
rcll
pop
ret
jnp
sub
sbb
push
mov
shlb
sub
repz
mov
mov
push
into
cs
leave
out
inc
inc
xchg
cmp
mov
fsubrs
sub
cmpsb
loopne
mov
idivl
outsl
push
int3
adc
gs
or
repz
divl
sub
lret
lds
loopne
jmp
pop
jnp
pop
popa
inc
mov
and
je
dec
add
lock
jnp
lods
inc
pop
cmp
jnp
inc
xchg
pop
jns
push
cmp
jg
cmp
lods
out
cmp
add
leave
aam
lret
into
xchg
or
jp
mov
adc
icebp
and
sbb
outsb
jnp
sti
test
lcall
jae
mov
fsubrs
jnp
xchg
test
pushf
xor
fistpll
loope
mov
test
lods
jnp
bound
cmpb
nop
xchg
xchg
cmp
sbb
arpl
xchg
jne
and
cmc
jnp
ljmp
clc
pop
jae,pt
pop
hlt
mov
lods
repz
dec
xor
lods
jnp
cmpsb
xchg
sub
sub
movb
insl
rorb
jae
idivl
dec
lret
call
imul
test
sub
into
sahf
outsl
pop
sub
clc
in
mov
jnp
lods
xor
stos
push
lds
das
adc
ss
jle
and
bound
push
mov
jnp
and
or
enter
stos
out
out
sbb
in
stc
call
sti
sbb
inc
lea
mov
mov
in
mov
fisubl
inc
repnz
nop
mov
testb
hlt
inc
imul
dec
push
or
in
jnp
or
push
fdivp
jns
stos
ss
mov
push
jnp
add
repz
and
mov
jnp
xchg
cltd
xor
push
sbb
push
push
call
push
stc
movsl
into
sbb
push
mov
sub
jnp
cmpsl
xor
idivb
imul
stc
push
mov
je
hlt
test
push
pop
xor
fcompl
je
pop
jnp
mov
xor
jbe
inc
cli
and
mov
inc
int
jb
orb
mov
jnp
xchg
dec
stc
aaa
cmp
enter
mov
lods
and
sbb
aas
sub
jns
ds
bound
mov
jnp
out
and
lock
mov
ja
loop
pop
aaa
data16
sbb
out
cmpsl
adcb
dec
xlat
cmp
ret
jp
ret
mov
dec
in
and
and
lock
sti
mov
test
push
jno
sbb
sbb
jb
pop
insl
dec
enter
arpl
dec
das
sbb
sbb
jnp
adc
pusha
stos
jnp
ss
lahf
test
jnp
rcr
mov
or
pop
ja
jle
xchg
arpl
xchg
mov
mov
dec
outsl
out
stos
cmp
int3
lret
das
or
mov
mov
jnp
out
mov
pop
or
and
mul
push
orl
cmp
or
mov
jnp
cmc
imul
dec
cld
jae
fisubl
xor
shl
mov
pop
shlb
jo
jnp
xchg
and
mov
stc
sarb
pop
jp
add
dec
jnp
sbb
rcrb
jo
add
pop
scas
dec
push
or
pushf
jnp
sti
or
xchg
jnp
xchg
addl
cmp
je
jnp
imul
jmp
ss
and
push
mov
mov
fimull
imul
enter
fst
jnp
out
dec
lret
subb
mov
lods
and
imul
data16
xor
mov
sti
xor
iret
jnp
mov
mov
imul
insl
loopne
test
or
lea
loop
xchg
mov
arpl
mov
xchg
lods
fdivs
sbb
add
jle
into
bound
lret
fstpt
pushf
das
inc
ds
repz
in
insb
shr
jnp
and
pop
push
clc
mov
fistpl
in
or
addr16
out
cli
push
mov
mov
inc
test
aam
sub
lods
adc
push
mov
jnp
and
andb
test
sbb
imul
loop
mov
hlt
cmpsb
jnp
es
or
add
sbb
js
out
xor
push
jnp
mov
mov
loopne
aaa
dec
scas
jae
inc
mov
enter
pcmpgtd
arpl
dec
scas
jnp
js
jmp
xorb
xchg
cmp
xor
mov
or
jl
aaa
imul
lods
jnp
ja
fwait
add
and
sarl
jnp
or
ret
bnd
out
repz
fadds
sbb
and
jnp
loope
hlt
ror
jnp
push
incb
xchg
dec
inc
jnp
cmp
aaa
loope
push
sub
jnp
repnz
fs
rorl
jnp
sbb
mov
sahf
jnp
fiaddl
out
in
cmp
lods
xchg
es
fistpl
cmc
mov
dec
mov
jo
jnp
call
jp
imul
mov
cmp
mov
mov
or
or
mov
int3
andl
push
dec
daa
or
lret
sub
jnp
dec
dec
gs
sub
jnp
cmc
cmp
icebp
mov
adc
inc
fistpl
jne
mov
xchg
aaa
cli
sbb
inc
loope
dec
pop
mov
fmul
jae
sbb
repz
stos
mov
in
pop
or
iret
call
mov
jnp
inc
in
test
add
inc
test
push
outsl
push
fistpl
xchg
repnz
test
cmc
or
jnp
stos
testl
cmpsb
out
mov
fstpt
bound
dec
jnp
jl
sbb
enter
pop
into
in
and
jnp
mov
sub
push
mov
call
das
sub
jo
jbe
sahf
cmp
dec
or
mov
jle
push
ss
aas
add
mov
jne
in
hlt
sbbb
jmp
js
in
loope,pn
repz
cmp
cltd
sub
es
aaa
stos
int3
push
or
scas
popf
fcomi
inc
or
imul
push
js
scas
dec
rorl
sub
pop
bound
dec
mov
jno
push
mov
aaa
repz
rcr
add
fnstenv
jnp
test
outsb
sub
or
jnp
xor
int
dec
or
jae
mov
ja
enter
jnp
ret
jno
aas
fidivrs
test
into
cmpsb
lds
sub
aaa
jnp
out
arpl
sub
ss
sbb
dec
les
pop
sbb
mov
jae
lds
sub
sbbl
imul
cmp
xlat
out
pop
jne
pop
jnp
movsb
test
enter
jne
jo
inc
xor
cmp
jnp
hlt
cwtl
fwait
pop
sarl
loopne
je
sbbl
mov
call
and
cmp
mov
xor
nop
adc
push
xor
jnp
aaa
gs
sbb
sbb
xchg
inc
cmpsb
push
shl
xor
sbb
jnp
ss
test
pushf
hlt
jnp
repnz
daa
imul
or
insw
fstp
aaa
cmp
jnp
cmpsb
lods
loop
repnz
movsb
jnp
fsubrl
test
xchg
divl
inc
mov
jnp
lret
test
insb
int
cmpsl
or
xchg
inc
inc
jnp
xor
adc
lahf
gs
dec
adc
xlat
notl
fimull
adc
lahf
cli
inc
dec
fisubrs
fisubrl
repz
sub
dec
mov
loope
mov
repz
loop
jnp
mov
fsubl
or
xor
jp
push
out
and
mov
xor
mov
cmc
pop
jnp
ja
sbb
scas
jnp
push
cwtl
shrl
stc
sbb
fwait
xchg
or
push
sub
jb
jnp
mov
lret
lods
in
rcrb
adc
sti
mov
std
sbb
lods
adc
test
mov
lods
xchg
imul
jb
test
cmp
div
repnz
jno
das
jmp
mov
hlt
inc
sbb
pop
shl
aad
xchg
mov
pop
leave
mov
sbb
out
div
hlt
imul
rol
hlt
lock
sub
xor
mov
bound
out
mov
lea
fsubrs
es
add
jnp
add
les
mov
out
jg
shrl
xchg
pushf
jnp
push
sub
out
call
aam
and
fcomip
jnp
cmp
cmp
xchg
mov
addr16
das
mov
mov
shll
stos
jno
ds
int
loope
movb
cli
xchg
jecxz
pusha
ss
xchg
leave
aaa
loop
push
or
dec
or
lcall
pop
xchg
inc
int3
jnp
adc
xchg
cmp
push
aaa
data16
and
jnp
add
jno
jbe
jnp
sti
mov
mov
repnz
popf
cmp
mov
gs
xlat
cli
jle
dec
lods
cli
fwait
sahf
insl
mov
or
adc
pop
mov
mov
leave
dec
adc
push
mull
dec
imul
stos
or
sarb
fwait
cmc
in
sbb
stos
pushf
dec
sbb
sub
test
cmp
mov
sbb
mov
fstpt
jnp
sub
dec
es
lods
enter
mov
aaa
adc
es
jo
jnp
lods
dec
jge
cmp
adc
rorb
cmc
js
jbe
sub
lret
and
sbb
sbb
mov
in
jnp
fadds
cmp
pop
js
sti
mov
ja
lret
jnp
ja
jns
add
jnp
or
mov
mov
popf
lahf
jbe
mov
and
lods
push
outsl
sbb
outsb
mov
add
push
fs
pop
je
dec
or
out
lahf
xor
jnp
loope
sbb
mov
add
ja
cmp
push
ja
fcoml
dec
daa
movb
pop
cmp
aam
mov
leave
pop
ret
jecxz
jnp
mov
mov
call
mov
clc
in
test
insl
jnp
bound
ret
cmpsb
mov
daa
pop
popf
cmp
pop
inc
xor
mov
add
mov
add
jge
inc
sub
sbb
jnp
add
or
inc
cmp
repz
clc
lds
xchg
sub
jge
cli
pop
fbld
cs
dec
push
ljmp
scas
aaa
sbb
std
jnp
stc
pop
mov
adcl
clc
jnp
ret
push
pop
jl
shrl
ret
or
or
dec
mov
and
je
jecxz
jge
fldt
dec
push
or
ss
jge
xor
jb
jnp
dec
jle
movsb
nop
push
fwait
cmp
mov
rcll
jge
pop
jnp
ja
push
cmp
jnp
sbb
jnp
scas
out
dec
lods
loope
inc
mov
jp
inc
int3
jge
jae
xor
lret
jnp
dec
and
lods
aas
inc
pop
in
das
jnp
ljmp
sbb
mov
inc
adc
jbe
xchg
mov
std
push
ja
outsb
stc
mov
lods
into
mov
jae
lcall
mov
ret
mov
add
sub
fwait
je
arpl
int
jnp
xor
mov
jnp
inc
in
add
jecxz
jnp
stos
mov
dec
inc
stos
pop
jnp
dec
push
pop
out
sbb
outsl
aam
sub
xchg
cli
sbb
ficoml
icebp
xor
push
dec
cld
jae
lahf
cmp
jnp
int3
dec
faddp
lcall
gs
sub
stos
inc
lret
cmp
mov
movsb
push
jnp
scas
lret
inc
inc
pop
aam
xchg
mov
add
mov
pop
mov
imul
movsb
mov
insl
loopne
imul
mov
inc
addr16
xchg
arpl
in
stos
xor
jb
pop
fnstenv
lcall
movsl
iret
mov
and
fimull
clc
aaa
pop
in
jnp
fdivs
add
stos
jnp
pushf
fisttps
push
insl
das
jnp
xor
mov
jnp
mov
or
sbb
xor
repnz
cmp
xchg
push
jnp
shlb
cmpsl
insb
mov
jne
adc
popa
mov
pop
out
mov
dec
imul
call
inc
dec
dec
jnp
ds
inc
cwtl
hlt
jns
cmp
mov
push
fbstp
or
test
sbb
sbb
jae
roll
push
into
add
insl
lods
push
push
int3
jnp
int
fcmovnbe
xor
test
jnp
cltd
out
lret
insb
bound
cmp
call
ljmp
dec
in
and
fwait
sti
scas
jle
mov
cltd
pop
dec
mov
jae
add
mov
pop
daa
lret
mov
xor
cmp
sbb
les
push
dec
clc
out
push
outsl
xchg
adc
jnp
sbb
mov
sti
mov
movsb
xor
dec
xchg
out
xor
cmp
pop
sub
sub
outsl
stc
add
sub
xor
mov
sbb
sahf
in
or
les
cmc
mov
sub
ret
jmp
pop
inc
dec
aaa
cwtl
jnp
pop
pop
stos
and
mov
jne
cli
fs
enter
add
mov
or
scas
dec
aaa
adc
loop
ret
jnp
sti
pop
ficoms
push
mov
je
adc
repnz
data16
notl
mov
mov
xchg
addr16
pop
into
sub
daa
neg
jns
popf
fwait
lds
sbb
cmp
jne
sub
insl
test
inc
or
imul
dec
mov
jmp
ja
push
jmp
pushf
pop
aas
dec
fdivrs
divl
mov
jnp
cmpsb
mov
lods
jnp
popa
inc
inc
or
sub
jnp
sahf
cmp
cmp
push
daa
movsl
push
pop
outsl
mov
mov
int3
jae
mov
or
dec
clc
imul
jge
repz
sarl
mov
clc
jbe
in
jnp
adc
addr16
shl
mov
lea
jnp
push
mov
jnp
fmull
mov
lock
bnd
lods
incb
mov
mov
icebp
dec
pop
or
cmp
outsl
insb
loope
mov
andnps
jnp
call
das
dec
jbe
cli
pushl
dec
sub
ljmp
jecxz
repz
sbb
les
repnz
jnp
lods
clc
mov
cmpsb
hlt
aaa
jnp
and
mov
inc
push
pop
fsubrs
jecxz
adc
test
cwtl
jle
dec
gs
adc
sub
push
pop
mov
fdivrs
fsubrs
cli
aam
xor
mov
outsb
fstpl
cmp
mov
cld
pop
dec
inc
ja
iret
in
js
fwait
lods
imul
jns
cmp
and
test
jbe
xlat
hlt
sub
or
pop
fwait
daa
in
dec
pop
mov
scas
stos
mov
jmp
pop
stos
sub
pop
hlt
test
pop
add
int3
daa
enter
xchg
pop
loope
iret
xchg
jnp
pop
mov
push
shrb
ret
addr16
mov
mov
sub
xor
mov
sti
in
addl
add
scas
mov
mov
mov
inc
sarl
bound
dec
mov
inc
lret
jbe
jp
push
jnp
xchg
js
add
mov
push
lods
jmp
addr16
insl
xlat
push
ljmp
repnz
sub
sub
pop
mov
movsb
push
or
lahf
mulb
jae
xor
cmp
push
cmp
nop
pop
jbe
js
aas
sti
jnp
mov
jo
cmc
loope
jnp
inc
enter
sub
xor
mov
clc
xlat
bnd
insl
aam
cmp
out
stc
aaa
xor
dec
subl
jp
sbb
outsl
out
add
and
sbb
imul
lcall
lods
pop
mov
dec
hlt
not
inc
shll
lock
dec
dec
jnp
stos
lods
xor
lahf
es
aaa
pop
cmp
mov
jae
outsl
and
cli
sub
shl
sbb
mov
dec
lahf
jnp
cltd
das
and
int
jnp
mov
pop
jge
xlat
sarl
mov
or
shl
outsl
scas
leave
dec
pop
xchg
jne
cmpl
adc
push
dec
or
out
mov
sti
mov
cmpsb
sub
ds
and
add
outsl
nop
les
out
popa
jnp
rorl
mov
cli
mov
adc
add
xor
jbe
push
or
gs
test
or
dec
jnp
mov
pop
out
fldl2e
int
pop
adc
jnp
mov
cmp
movsb
pop
in
dec
scas
fcmovbe
xchg
dec
sti
push
hlt
add
jb
pop
sub
mov
xchg
xor
jno
fdivrs
jnp
jo
cmpsb
jne
fdivrp
jnp
jle
dec
dec
mov
or
sub
cwtl
dec
sti
jne
mov
insb
mov
add
ficomps
ljmp
or
repz
add
rcrb
pop
test
pop
and
shlb
jl
jnp
insl
dec
cmpsb
aas
jnp
mov
push
lahf
out
jnp
gs
sarl
mov
fwait
lahf
mov
ja
pop
jae
pop
jnp
cli
addr16
push
test
sti
xchg
jmp
adc
bound
and
outsl
mov
fldl
jno
imul
fmul
push
xchg
add
fnstcw
dec
fwait
sub
daa
jae
notb
jle
repnz
push
stos
jb
popf
adc
subb
jbe
jnp
jne
cmp
push
pop
inc
sbb
jnp
repz
mov
stc
xchg
mov
xchg
sbb
popa
mov
lret
das
inc
push
mov
jnp
lea
mov
lds
jle
das
or
test
out
sub
mov
push
jle
cld
lret
xchg
cmpsb
dec
jae
ja
dec
pop
inc
jmp
mov
dec
jmp
outsl
mov
loop
sti
lret
mov
movsl
lahf
sarl
and
dec
sti
push
jb
ds
add
xor
inc
cs
sub
fcmovbe
xchg
pop
loopne
imul
repnz
sub
cmp
loop
ja
mov
sarl
pop
lahf
xchg
mov
bound
xor
pop
into
lret
or
sub
push
shll
inc
scas
jnp
sahf
pop
lcall
push
mov
out
imul
pop
jp
jnp
jb
push
in
ss
ds
ljmp
cmp
out
ss
xchg
xor
push
inc
adc
push
mov
pop
xchg
push
pop
cmp
sub
xchg
push
fwait
lcall
mov
movsb
or
daa
xchg
pop
bound
lods
dec
push
jb
mov
sbb
or
cmc
xchg
jae
mov
jnp
ja
or
repnz
jnp
add
fnsave
jnp
xchg
inc
enter
into
jnp
add
sub
mov
insb
jnp
inc
outsl
out
lret
mov
xchg
mov
or
mov
xor
jns
mov
lods
jae
or
js
or
jnp
add
fiadds
pop
jb
xchg
imul
in
lods
bound
adc
das
aaa
in
bnd
pushf
arpl
sub
pusha
sbb
mov
adc
pop
in
mov
jp
ret
in
stos
out
lock
push
jnp
sbb
mov
jnp
xchg
iret
cmp
popa
lock
test
outsl
adc
add
jnp
jo
icebp
sbb
test
dec
push
push
lods
sbb
ret
jnp
lods
ljmp
gs
mov
rcr
mov
pushf
adc
in
lods
into
push
dec
jnp
mov
scas
int
cmp
sar
sbb
cmp
xor
jp
mov
xor
insb
and
in
or
or
ss
mov
dec
sbb
push
jnp
fnstcw
mov
mov
aam
cmp
jns
insb
gs
clc
sub
dec
rcr
aaa
push
cmp
hlt
outsl
mov
mov
jnp
and
cmc
xor
cmp
xchg
jno
xlat
mov
mov
jnp
xchg
push
sti
fwait
mov
sub
int3
outsl
clc
stos
and
jnp
cltd
push
xor
insl
jnp
inc
push
shll
and
sti
lea
insb
data16
test
adc
pop
into
mov
mov
outsl
inc
lea
bnd
test
loop
iret
ljmp
dec
mov
or
into
push
sahf
int3
jnp
test
xor
pcmpeqd
xchg
enter
sbb
xor
imulb
or
popa
repnz
jnp
dec
mov
mov
xor
push
push
cmp
in
mov
jnp
jns
call
jecxz
push
ds
stos
sbb
test
aaa
fidivs
push
mov
or
cltd
push
jnp
out
dec
imul
aaa
sbb
sbb
pop
push
jp
subb
dec
and
jb
insb
testb
clc
adc
dec
lods
loopne
clc
jecxz
sbb
jae
hlt
dec
cmp
mov
jnp
addr16
mov
mov
fwait
negl
pop
push
ret
repz
lods
cmp
pop
es
rcr
data16
add
sub
dec
fistpll
rcrl
lock
loope
adc
mov
lods
xchg
enter
jne
gs
lods
jecxz
sub
rcll
leave
cmc
je
jnp
inc
dec
jne
in
fwait
and
lret
ficompl
stos
in
popa
in
inc
es
xchg
rorb
out
fdivs
jnp
pop
aaa
stos
cmp
and
leave
add
sarb
dec
pop
cli
push
push
adc
jnp
enter
or
mov
or
xchg
mov
sub
jnp
mov
js
pop
dec
dec
int
jnp
adc
xchg
cmp
imull
dec
ss
push
fbstp
aam
and
inc
jnp
sbb
mov
cmp
xchg
mov
out
mov
pop
add
sti
arpl
sahf
jnp
repz
call
mov
out
and
sub
mov
pushf
xor
in
push
repnz
or
enter
add
jp
lds
lret
out
xchg
pop
mov
out
jecxz
xor
fucomi
mov
jnp
je
push
jnp
xorl
pop
cli
loop
daa
mov
enter
test
or
inc
outsl
cld
imul
jge
pop
dec
pop
out
fs
jnp
and
into
mov
stos
inc
addr16
mov
jle
or
sub
cld
xchg
cmpsl
jnp
pushf
int
jp
xchg
pop
jnp
repz
jb,pn
stos
hlt
mov
addr16
mov
divb
xor
test
cmp
out
imul
mov
push
jnp
aad
mov
lods
mov
in
jnp
movsl
loopne
aaa
ret
sbb
lds
inc
xor
lock
out
call
fistl
pop
xchg
daa
jae
sbb
rcll
and
call
hlt
mov
dec
into
lock
lret
mov
push
lret
jecxz
loop
or
orb
or
fnstenv
repnz
cwtl
test
xlat
or
mov
lret
jnp
cmp
push
or
ret
cmp
mov
outsb
sbb
arpl
push
adcl
cmc
pushf
jnp
cmp
jo
pop
sarb
inc
or
sub
lods
dec
jne
outsl
jmp
push
xor
adc
js
xchg
pop
jnp
gs
insb
aas
mov
mov
jmp
lahf
outsb
imul
es
ja
sahf
lods
jge
or
mov
push
pop
or
imul
cmc
fs
push
nop
lods
je
cltd
jge
pop
jnp
sbb
inc
pop
fidivs
dec
jnp
mov
lret
ja
stos
in
clc
or
aaa
jo
lret
cli
mov
fwait
mov
into
dec
pop
lods
mov
iret
ja
pop
mov
cmp
mov
jnp
or
popa
push
out
test
daa
lret
sti
and
fdivrs
sahf
and
bound
inc
xlat
lods
out
enter
mov
clc
adc
mov
lret
mov
xchg
inc
into
test
jnp
aas
repz
and
cs
fwait
add
pop
std
sbb
or
fld
subl
ds
jb
lret
aaa
sub
xchg
mov
daa
stc
sti
cmp
sbb
xchg
aad
fwait
inc
sub
or
push
ja
mov
add
sarl
push
pop
jecxz
pop
sbb
out
fidivrl
push
cmp
aaa
jnp
das
shlb
icebp
and
push
lcall
lret
lods
and
mov
cmp
pop
mov
sub
dec
inc
xor
mov
add
stos
inc
xchg
js
jae
push
xchg
mulb
fwait
sub
dec
int
mov
jns
bound
push
popf
out
lret
pop
aaa
cmp
movsb
rorb
imul
add
stos
mov
sti
push
pop
aad
xor
mov
fisubrl
jl
push
aaa
hlt
jae
lods
cwtl
loop
cmc
jnp
mov
inc
add
or
leave
push
bound
adc
mov
outsb
jnp
add
mov
lods
sbb
cli
ret
jnp
idivl
mov
xchg
mov
sub
outsl
mov
mov
push
cmp
jnp
jne
and
es
mov
daa
or
xchg
jnp
and
mov
push
xor
jge
jnp
hlt
daa
mov
and
sbb
ret
imul
sub
in
adc
sti
push
jp
mov
sbb
out
je
pop
jnp
imul
cmp
sbb
clc
mov
or
dec
jne
ja
xchg
mov
clc
cmp
jne
dec
push
test
jne
pop
jnp
mov
inc
xchg
scas
sti
dec
movl
mov
push
jnp
dec
out
cmpsl
mov
sub
push
push
jnp
test
sub
imul
aam
pop
lret
pop
enter
lahf
fdivs
lahf
mov
mov
movb
jo
rclb
cmp
jnp
stos
and
sbb
or
dec
xchg
es
test
ret
aas
jo
push
pop
jnp
out
mov
movsl
mov
cmp
clc
fcmovbe
sbb
idivb
dec
jle
lea
lods
mov
adc
or
cmp
in
pop
add
xor
clc
insb
sarl
or
and
jno
hlt
sbb
imul
sahf
aas
push
sub
cmc
jnp
push
push
mov
sbb
mov
insb
das
andl
mov
lock
insl
aam
imul
repnz
pusha
int3
scas
cmpsl
out
je
jo
jnp
cwtl
mov
cli
cmpsl
cmp
jp
mov
lods
loope
orl
mov
dec
xchg
cmpsl
push
and
incl
jbe
jnp
lods
ss
cmc
jb
xor
push
daa
in
sbb
jnp
push
or
popf
in
in
jnp
cmp
mov
jle
or
mov
call
scas
dec
mov
or
xlat
jle
pop
push
out
or
sub
in
jbe
mov
xchg
in
adc
jmp
add
enter
mov
add
cwtl
sti
xchg
sub
movsb
aam
and
or
test
mov
and
mov
mov
imul
call
jns
jmp
sbb
xchg
aam
mov
sub
loope
test
ret
sbb
pushf
outsl
mov
test
clc
jnp
shlb
mov
loope
cmp
jnp
subl
or
jge
das
jae
scas
mov
jle
mov
adc
aaa
popa
jnp
pusha
cwtl
and
ret
lods
repnz
dec
sbb
cmp
pop
cmp
sub
std
ljmp
cli
cmp
xchg
mov
xchg
rolb
std
jnp
stos
leave
cs
loop
in
add
pop
lock
jnp
push
or
nop
mov
adc
je
cmpsb
leave
imul
fsubrs
stos
adc
xor
sub
jno
imul
mov
lcall
arpl
pop
and
or
or
popa
fldt
mov
sub
jg
xor
js
pop
mov
addr16
inc
fstl
jl
shrb
lock
je
jnp
cmpsl
into
fdivrs
fsubrl
lret
outsb
jecxz
or
std
popa
dec
ljmp
sub
mov
in
imul
das
into
jne
iret
test
dec
icebp
xchg
js
lret
jne
sbb
cld
jnp
add
xor
sub
jb
mulb
popf
jo
shlb
adc
orb
lret
dec
jg
fisttpll
lea
jae
and
sahf
jnp
cmc
js
sbb
cmp
jnp
bound
les
cmpsb
cltd
cli
sbb
jnp
push
dec
mov
fldcw
jnp
sti
gs
or
popa
dec
jne,pt
mov
mov
sti
pop
cwtl
jnp
ss
hlt
inc
push
outsb
jnp
xor
insl
icebp
mov
mov
jns
rorl
and
jnp
stos
pop
mov
sti
lods
xorl
and
push
push
aaa
mov
and
adc
pop
out
jnp
test
jnp
hlt
sub
dec
cmp
inc
or
subl
imull
hlt
insb
xchg
imul
adc
jo
jnp
push
pop
ss
iret
jnp
into
and
pop
call
cmc
jnp
mov
out
pop
dec
cwtl
xor
jnp
xor
clc
ss
enter
sub
jnp
fmuls
sub
in
sbb
xchg
jnp
dec
out
pushf
xor
xchg
scas
dec
das
es
imul
fcmovbe
or
in
cld
icebp
xchg
repz
sub
popa
stos
insb
inc
jnp
cmpsl
jmp
mov
cmp
call
adc
cli
inc
popf
dec
imul
xchg
jns
stos
in
sub
mov
insl
mov
scas
xchg
aaa
sub
sbb
push
jnp
mov
jnp
dec
jmp
scas
imul
mov
jno
lret
scas
and
jnp
add
xor
iret
mov
mov
add
outsl
dec
fldt
fidivrl
js
frstor
sbb
or
repnz
mov
sbb
dec
dec
or
xlat
rclb
dec
xchg
rcll
fidivl
scas
bnd
xor
mov
movaps
ss
jnp
gs
or
rcrl
sbb
cmpsb
jae
test
hlt
daa
or
jno
mov
inc
dec
in
mov
inc
cli
nop
jnp
mov
mov
mov
cmp
cwtl
sub
ja
imulb
jnp
cmc
jmp
mov
jnp
scas
sahf
push
xchg
sbb
lea
mov
out
xchg
push
mov
mov
jnp
jns
mov
jnp
lret
mov
in
sub
and
xorb
ds
lods
cmpb
test
aaa
dec
pop
sub
neg
dec
jae
cli
add
jnp
mov
shll
mov
jns
jno
imul
mov
inc
mov
imul
lods
lods
xchg
movsl
jnp
stos
jecxz
or
mov
ljmp
sub
or
pop
pop
jle
jo
lock
jmp
jbe
mov
mov
call
mov
xor
insb
jnp
push
jae
pop
jge
inc
jnp
ds
popf
fmul
into
jnp
and
addr16
cmp
xlat
dec
mov
sub
out
mov
cmp
outsl
lea
fdivrl
push
aas
sbb
and
ret
jnp
sub
push
jmp
mov
push
jnp
addr16
xchg
mov
decl
jne
stc
xchg
xor
mov
cmc
ds
ja
aaa
mov
fs
scas
imul
mov
sbb
imul
or
mov
fdivrs
sub
or
insl
sbbb
dec
sbb
jns
jmp
aaa
movsl
mov
outsb
jnp
ds
cmc
jae
gs
adc
dec
cmp
or
pushf
lock
loope
xchg
sub
arpl
sbb
xor
jnp
or
inc
mov
nop
out
js
repnz
loope
mov
pop
mov
jae
inc
push
mov
mov
repnz
lods
mov
jnp
and
ja
loop
jnp
dec
mov
push
jnp
rcrl
jnp
jne
adc
dec
or
lea
scas
nop
sbb
mov
push
cmpsl
clc
mulb
jle
outsl
pushf
xchg
out
inc
jbe
xor
aaa
pop
xchg
or
mov
inc
jnp
dec
xchg
popf
dec
std
push
data16
sub
cmpsl
pop
int
mov
scas
icebp
add
pop
jnp
subl
jnp
sub
rcrl
leave
cmp
mov
mov
icebp
dec
lods
jecxz
xor
out
push
jbe
cmp
cmpsl
fdivs
js
mov
dec
sub
out
adcl
pop
jle
xchg
pop
mov
fisubrl
dec
mov
lods
enter
lret
inc
ja
push
inc
imul
fdivr
sar
jae
sbb
addr16
aas
push
sbb
into
cmp
dec
ficompl
inc
jo
adc
loop
add
imul
fninit
mov
je
in
pop
mov
cmc
hlt
mov
repz
xchg
stos
mov
sub
out
dec
orl
sbb
aam
jnp
fsubrl
imul
fidivs
jnp
pushl
push
icebp
loopne
jnp
cmp
xchg
jnp
jp
insl
pop
mov
mov
or
pop
arpl
enter
dec
sub
pop
in
shrl
stc
insl
lods
jnp
dec
frstor
xor
imul
pop
and
rcll
dec
mov
adc
inc
mov
jnp
push
sti
mov
or
fisttpll
jnp
out
ss
adc
mov
outsb
dec
cltd
je
loop
addb
mov
dec
mov
mov
xchg
outsb
out
stos
adc
sbb
mov
add
push
jo
pop
xor
jnp
movl
mov
push
jnp
mov
dec
fsubrs
jnp
stos
add
test
xor
les
xor
xchg
inc
jnp
jmp
loopne
adc
jnp
push
fs
xchg
mov
sbbb
movsb
ret
insl
jo
shll
jmp
cmp
icebp
mov
dec
popf
mov
cmc
jne
xchg
cmp
pushf
gs
jge
scas
cmp
insl
fcomps
jnp
aam
mov
movsl
pop
push
pop
xchg
outsl
push
sti
lcall
arpl
js
outsb
dec
sarl
test
dec
enter
ja
jb
fisubl
cmp
stos
mov
lahf
cmp
dec
adc
sub
fldenv
jnp
sub
xchg
loop
enter
push
and
vmread
jnp
mov
xlat
dec
cmp
scas
add
cmp
or
lock
fld
lods
cmp
imul
stos
sbb
cmc
lods
dec
clc
in
in
movsb
das
jnp
lret
jo
imul
dec
add
sub
aad
insl
ss
xlat
daa
cli
sub
xchg
lock
fsubr
imul
sahf
cmc
push
leave
cwtl
je
and
lods
adc
push
jle
imul
inc
or
inc
insl
mov
adc
cmp
fisubrl
fdivl
or
add
adc
jnp
mov
jl
jnp
sbbl
lret
repnz
repz
mov
or
inc
cli
std
sbb
xor
mov
cmpsl
or
insb
or
mov
push
int3
and
pop
nop
cmp
inc
or
mov
cmp
jo
jnp
push
outsb
dec
fnstenv
ss
mov
and
repnz
cmp
adc
imul
ja
cmpl
mov
xchg
je
test
jae
in
push
jle
sbbl
imul
sub
icebp
mov
dec
mov
sahf
insl
push
xchg
mov
arpl
insb
imul
sti
aaa
xchg
dec
sbb
lret
movsb
dec
gs
jns
jb
mov
jmp
mov
insb
mov
jg
jp
fs
imul
outsb
jae
jnp
pop
mov
pop
or
mov
int
ficompl
pop
outsb
inc
and
insl
dec
fwait
jnp
fs
mov
dec
mov
mov
fdivs
js
jnp
inc
pop
sub
sub
addb
stos
push
xchg
not
sub
cmp
push
push
adc
cli
cmp
movsl
fcomps
xchg
jg
ret
jnp
rclb
fnstsw
cmp
cmp
push
pusha
mov
ja
and
jecxz
jnp
mov
adc
lret
insl
fildl
cmpsl
js
xor
pushf
mov
inc
pop
fwait
cmc
add
sub
inc
pop
jbe
xchg
jae
not
fadd
ss
test
outsb
inc
mov
testb
pop
jmp
pusha
adc
xchg
add
mov
jnp
cmp
sbb
or
mov
mov
xor
sbb
hlt
or
nop
jo
lods
lock
shlb
out
repnz
xor
jnp
cmp
shll
fwait
clc
test
movsb
jle
enter
pop
sbb
std
push
xchg
bndldx
cmpb
dec
out
jnp
shll
cmp
dec
sub
mov
shl
arpl
jae
xchg
icebp
push
xlat
inc
mov
dec
pop
xchg
xorl
in
jnp
pop
push
xchg
dec
cli
mov
fcmovu
popf
adc
hlt
jnp
daa
or
inc
and
rcrl
ljmp
inc
mov
xchg
fisubrl
fcomps
dec
movsl
inc
and
xor
mov
es
nop
cmpsb
jbe
or
fadds
mov
cmp
add
jnp
jecxz
jo
mov
jnp
ret
inc
pop
or
insl
xor
imul
data16
fucomi
lods
push
dec
jo
add
mov
test
mov
jbe
ficoml
cmc
jnp
fisttps
push
neg
jp
mov
pop
push
jo
aad
push
or
jnp
hlt
scas
push
cmp
jnp
aaa
and
test
cmpb
cmp
sarl
outsl
add
movsb
fstpt
mov
ja
pop
cmp
sbb
jmp
divb
insb
sub
adc
andl
aam
adc
cmpsb
ds
sub
sbb
hlt
stos
sub
adc
mov
mov
jg
sahf
pop
sti
cltd
cmp
not
mov
into
fsubrl
js
cmp
or
push
ret
cli
lret
sbb
shrb
mov
mov
lcall
sub
cwtl
in
stos
leave
pop
js
ja
push
pop
int
xor
dec
ljmp
push
in
imul
mov
mov
dec
dec
hlt
ret
icebp
nop
pushf
pop
xor
outsl
lret
loop
cmpsb
fistps
lds
pop
jae
dec
dec
cltd
jnp
jecxz
es
pushf
mov
clc
push
xor
aaa
jnp
mov
cmc
xchg
jnp
add
ficoml
or
fdivrs
aas
push
repnz
lock
jmp
outsl
loop
cli
sbb
xor
mov
push
sbb
jge
divb
inc
mov
lods
inc
mov
pusha
popa
cli
lret
sbb
push
fcmovnbe
jo
out
jnp
dec
das
xchg
inc
stc
int3
jnp
clc
jne
movsb
ffreep
sti
imul
sub
aad
jb
mov
ja
pop
xchg
or
into
sti
xchg
dec
shr
iret
dec
jecxz
cmpsl
jnp,pn
add
dec
es
and
jmp
daa
notl
dec
jnp
cmp
notb
add
mov
mov
insl
mov
js
jnp
call
stos
or
dec
mov
inc
dec
addr16
jnp
xor
enter
lods
adc
in
fwait
and
cld
mov
aaa
cli
mov
pop
jle
bound
jnp
out
into
dec
add
hlt
dec
mov
mov
push
sti
mov
cmp
lahf
and
or
nop
jo
ret
icebp
jnp
jbe
jg
xchg
add
std
cmp
and
test
mov
outsl
jb
outsb
iret
cmp
or
dec
std
push
xor
pop
shrb
mov
jp
add
pop
int3
jae
cmp
mov
mov
insl
cltd
jg
ret
jae
gs
push
push
mov
mov
or
adc
repz
or
int
ret
ljmp
cmp
or
lock
xchg
mov
jb
imul
movsb
cli
std
jns
cltd
ss
jae
rclb
mov
popa
out
xchg
xchg
jo
jnp
mov
jp
jnp
jae
or
mov
mov
testl
sbb
dec
mov
aas
jge
lods
test
insl
push
cmc
test
jnp
out
mov
stos
mov
jnp
mov
adc
mov
ljmp
xor
jnp
xchg
dec
adc
shlb
scas
or
outsl
mov
jmp
lahf
imul
cmp
cltd
or
sbb
mov
outsl
pop
fisubrl
dec
out
mov
clc
add
xor
cli
daa
out
icebp
xchg
aaa
clc
fwait
jnp
cli
sbb
jnp
lea
insl
jnp
xor
in
mov
xchg
push
xor
fsubl
fbstp
shr
jnp
call
cmp
scas
jle
jnp
mov
mov
jnp
xchg
adc
xlat
add
jnp
stos
in
lret
out
repz
lret
or
rorl
jnp
lds
or
dec
ret
mov
push
push
insl
lods
cld
cmc
aad
jg
inc
jbe
out
sbb
xlat
jnp
mov
data16
sbb
lock
jnp
lret
sub
or
xor
dec
addr16
cli
imul
mov
jnp
or
jnp
imul
movsl
push
orl
dec
or
xor
mul
inc
movsb
sub
mov
daa
xchg
in
xchg
fdivs
leave
je
or
iret
mov
jnp
icebp
movsl
testl
jbe
jno
test
fisubl
jnp
arpl
sti
jbe
lds
in
or
or
or
leave
rorl
ds
inc
pop
in
ret
imulb
stc
jecxz
and
mov
jns
lock
mov
out
sbb
leave
bnd
pushf
insl
push
mov
inc
xor
xchg
mov
cmp
imul
je
mov
ljmp
mov
call
pop
pop
jnp
imul
movsl
in
repz
ljmp
mov
in
cmp
cmp
or
dec
dec
sub
je
jnp
lock
mov
sub
jbe
lcall
into
insb
jge
sub
add
jns
dec
cld
adcl
clc
outsb
xor
aaa
testl
out
scas
or
dec
lock
stos
loope
outsb
mov
stos
fidivs
sub
jae
adc
lahf
insb
stc
or
ret
xchg
enter
mov
call
mov
sbb
icebp
xchg
jno
xchg
lods
bound
testb
sub
pop
mov
push
movsb
insl
std
outsb
incl
div
leave
and
jnp
or
pop
int
jnp
out
xor
pop
rcrl
ja
mov
fcmovne
inc
jnp
pop
aas
cld
scas
dec
inc
sub
rclb
in
mov
jnp
pop
xor
cmp
pop
loope
xchg
jnp
xor
inc
push
pop
insb
mov
scas
pop
cs
and
aaa
daa
push
dec
mov
je
nop
repz
or
mov
pushl
aam
sub
fwait
push
shl
xchg
sub
mov
add
mov
adc
idivl
inc
out
cmp
or
add
mov
sub
sub
lods
int
popf
jl
jecxz
ljmp
sub
repz
jnp
stc
test
idiv
adc
addl
lcall
add
push
push
jae
or
jmp
dec
add
movsb
add
jnp
out
adc
orl
jb
mov
std
fxch
ss
sub
dec
mov
sub
inc
pop
outsl
negl
int
cmp
xchg
jae
jnp
and
es
fdivrl
imulb
mov
cmp
jg
xchg
xchg
xchg
push
js
adc
xchg
mov
test
sbb
sbb
setno
in
movsb
jnp
sbb
jae
ss
mov
ljmp
mov
inc
lcall
das
int3
jnp
push
int
push
jge
je
jnp
jl
lret
out
jnp
mov
jnp
sbb
sarb
jg
jnp
gs
aad
push
mov
xchg
mov
outsl
xchg
ss
push
hlt
in
mov
lret
das
xchg
ljmp
in
aad
and
stc
jle
add
push
scas
xchg
jecxz
cmc
jne
out
mov
lods
dec
icebp
jb
mov
loope
cmc
sahf
movsl
jae
cmp
jnp
add
in
fimull
aaa
aas
sar
imul
or
addl
in
jo,pn
inc
jbe
jnp
mov
push
inc
dec
jnp
and
sti
testl
fadds
in
shrb
xor
fidivrl
xchg
insb
lret
cmp
nop
jnp
loopne
cs
into
test
sub
mov
rorl
lds
jbe
incb
or
notl
ja
popf
sbb
xchg
sub
in
adc
adc
mov
cwtl
ss
enter
xchg
ja
jnp
pop
movsb
sbb
xor
call
cmp
or
pop
fwait
sbb
inc
dec
std
add
xlat
daa
arpl
xchg
xchg
or
stos
in
mov
cmc
ss
cli
dec
add
mov
ljmp
xchg
sbb
cmpsl
push
aas
sub
idiv
test
dec
sahf
xchg
cmp
jnp
ljmp
jnp
stos
loop
fstpt
jne
jnp
movsb
jp
fidivrs
lret
cli
sub
out
popf
pop
dec
mov
cltd
xchg
jno
push
cmp
sbb
adc
das
movsl
outsl
or
mov
mov
clc
imul
jnp
mov
sub
sub
mov
pop
sbb
jne
lea
jnp
and
jge
je
cmp
jmp
xor
sti
xlat
jnp
xchg
not
lahf
stc
adc
in
xchg
imul
loope
sahf
dec
fsubrp
mov
jne
scas
add
jnp
lods
and
jnp
fstl
mov
fdivrs
inc
in
dec
std
sub
outsl
popa
mov
mov
adc
pop
push
jnp
out
int3
sub
jecxz
jnp
movsl
lret
inc
iret
xor
ret
cmc
or
cmp
movsb
fdivrs
stos
sti
test
jns
pop
mov
mov
and
imulb
sarw
mov
jge
add
loope
mov
lea
cli
dec
popa
xchg
and
dec
mov
fldcw
out
loopne
stc
and
idivb
scas
or
mov
int
mov
jp
sub
in
lods
vmread
jo
add
jbe
inc
les
adc
stc
ret
jmp
mov
dec
mov
insb
sahf
data16
inc
ret
or
jb
cmc
jnp
lret
mov
mov
in
push
jnp
stos
xorb
cmp
push
jnp
xor
add
dec
mov
call
inc
cmp
pop
xor
repnz
xchg
add
push
fistl
and
shrl
cmp
push
movsl
fwait
mov
pop
jmp
out
sbb
pop
xor
jnp
sbb
xchg
mov
mov
jb
inc
pop
push
sbb
jnp
pop
sbb
xor
jbe
jnp
test
sarb
jnp
cmp
dec
dec
or
mov
inc
shr
jl
ror
nop
cmp
insl
sahf
loopne
and
in
mov
adc
push
fidivl
or
daa
dec
push
add
ss
mov
insl
push
inc
mov
cmp
adc
fwait
ja
adc
movsl
mov
ficoml
dec
xchg
jnp
jecxz
push
cli
ret
or
sbb
repz
jnp
lods
adc
testb
push
adc
lret
lret
jmp
or
test
mov
outsl
mov
pop
sti
ja
insl
push
push
jne
call
or
mov
ret
insb
call
sub
xor
sub
daa
sub
sub
mov
lods
sbb
dec
outsl
sbb
insb
xor
cmp
dec
fwait
dec
pushf
das
std
test
in
jge
pushl
dec
loopne
cmpsl
dec
mov
pop
cmp
popf
mov
xchg
sbb
jno
repnz
sub
sbb
lea
inc
mov
stc
jnp
cld
pop
xlat
mov
aaa
std
mov
push
jnp
adc
repz
mov
scas
mov
dec
aad
cmp
sub
insb
mov
dec
jecxz
jne
mov
outsl
arpl
mov
outsl
test
movsb
xor
jg
lahf
jnp
push
iret
lret
std
and
dec
sub
enter
pop
cmp
jns
out
popf
jb
mov
jge
stos
cmp
sbb
in
sbb
mov
mov
pop
jnp
sub
stos
out
sbb
rolb
insb
mov
or
insl
push
imul
lret
adc
and
push
inc
mov
jnp
ret
dec
inc
cmp
cmpsl
or
cmp
cmp
lcall
daa
xchg
pop
and
sahf
lret
or
jmp
xchg
push
in
sub
stos
js
fucomi
sub
pop
repz
stos
shlb
inc
jnp
in
aaa
mov
sbb
mov
clc
sub
jae
push
fistpl
pop
addb
stos
insl
dec
jno
pop
mov
ja
sub
ds
idivb
cmp
xor
in
sbb
adc
jnp
mov
mov
jnp
push
into
adc
ja
aam
or
bswap
outsl
mov
sbb
test
xlat
aaa
daa
xor
add
lret
cs
pop
out
mov
out
mov
je
jnp
xor
pushf
push
dec
out
jnp
pop
dec
or
je
lea
bound
jnp
divb
aaa
sti
and
or
fsubs
push
outsb
mov
cmpb
push
or
scas
js
stos
leave
iret
gs
je
pop
or
xor
imul
ret
cs
cmp
or
dec
mov
mov
shr
jo
jnp
adc
push
leave
jp
cmpb
ds
idivl
jnp
call
insb
repz
xchg
insl
and
stos
mov
mov
add
jnp
push
mov
or
clc
dec
jnp
test
sub
clc
jnp
dec
mov
push
dec
push
mov
bound
shrl
mov
pushf
in
xlat
fs
add
xor
js
jnp
out
sub
adc
cmp
jge
dec
pop
xor
sbb
enter
jbe
mov
jnp
insl
nop
out
call
into
pop
xchg
leave
repnz
inc
pop
in
mov
insl
sub
push
jnp
scas
push
enter
sub
jnp
mov
push
jnp
or
mov
pmulhw
push
pusha
mov
jns
imul
adc
dec
and
les
jae
pop
xor
jnp
mov
xchg
or
ds
int
sarb
xor
jns
aaa
daa
loopne
into
outsl
sbb
add
mov
fnstcw
and
cmp
ret
pop
and
add
dec
add
jge
outsl
fisubs
xchg
hlt
jecxz
out
sbb
jns
mov
lret
fxch
pusha
pop
fstl
push
adc
mov
out
mov
sbb
jae
ja
jnp
imul
jnp
ret
mov
int
daa
pop
ds
jecxz
jnp
movsb
lret
out
in
cwtl
or
into
loopne
jnp
pop
or
push
insb
aaa
mov
cmp
sub
mov
dec
jnp
cmp
jnp
pop
lret
inc
insb
jnp
lods
movsb
jmp
sbb
mov
xchg
mov
or
insb
or
jle
add
ljmp
dec
nop
push
jo
and
sub
xlat
aas
fdivl
push
sbb
or
cmpsl
fldenv
insb
fcmovu
sub
mov
in
mov
jns
mov
clc
cs
dec
sub
mov
sub
lret
test
push
jae
movsl
fs
imul
jecxz
sub
sahf
in
inc
pop
inc
dec
sbb
fucompp
jnp
fs
frstor
or
ljmp
xchg
aam
fmull
mov
sub
jnp
test
jle
sarl
fdivs
xchg
and
jb
jge
das
test
mov
call
cmp
lret
push
lret
bound
add
sub
add
hlt
dec
repz
jo
mov
jnp
cmp
sarb
lock
jnp
dec
or
repnz
jo
dec
jne
out
add
jnp
fs
pop
les
lahf
xchg
jnp
or
jnp
jp
xor
fdivp
mov
and
pop
cli
arpl
in
dec
xor
pop
shrb
mul
mov
dec
pop
jbe
mov
ja
mov
jnp
stos
inc
mov
movsl
mov
dec
enter
mov
mov
aaa
mov
aam
add
jnp
xor
dec
stos
icebp
lret
dec
fists
mull
xor
xchg
jle
stos
pop
jnp
in
xor
insb
mov
sti
jae
xchg
aaa
lahf
mov
jns
lcall
cli
sbb
mov
les
push
jmp
push
loop
xor
push
sub
stos
fists
xchg
xchg
dec
jnp
icebp
enter
in
sarl
repz
xchg
sbb
xorl
cmp
cmp
jno
cmp
jnp
adc
sub
and
out
in
imul
repnz
movsb
xchg
jnp
inc
push
mov
movb
lret
lock
sub
jecxz
jb
enter
icebp
push
jnp
or
jbe
enter
mov
dec
push
in
insl
sub
push
sbb
xchg
mov
push
sub
dec
stos
aaa
jns
scas
push
jp
test
jnp
test
mov
repnz
jae
lret
leave
fucomi
sarb
ss
ljmp
xchg
loope
ret
sbb
fidivrl
mov
sti
jnp
lret
mov
jnp
insl
popa
add
cli
inc
adc
cmpsl
push
cmp
ljmp
scas
out
xlat
outsb
xchg
push
subl
jp
push
and
cmc
jns
out
mov
mov
inc
mov
jnp
call
jb
test
cmpsb
into
mov
stos
int3
inc
aad
insb
ja
lds
adc
xchg
je
cmp
dec
jmp
dec
test
xor
jnp
mov
push
sbb
addr16
mov
jmp
pop
arpl
jae
sbb
dec
lret
jnp
cmp
cmp
mov
fdivrs
mov
scas
jnp
cmpsb
lods
lahf
jbe
sarb
push
mov
xlat
jnp
push
sti
jle
icebp
xorl
dec
pushf
lret
push
scas
adc
fsubrs
jbe
cld
sahf
xor
lods
add
movsb
stos
mov
inc
jnp
xchg
ficomps
sbb
or
outsl
jl
xor
iret
rcr
mov
out
inc
shlb
jns
lcall
cmp
or
or
sub
insl
loopne
and
sbb
ret
ja
fdiv
test
aaa
jae
adc
xchg
cmp
stc
cltd
or
jecxz
and
movsl
scas
outsl
repnz
mov
cmp
imul
in
movl
shrl
ja
sti
divb
cmc
cltd
push
lock
mov
sub
xor
ljmp
adc
ja
mov
inc
jae
js
scas
jge
xchg
and
add
dec
loope
into
jns
jecxz
lret
imul
dec
inc
stos
jne
pushf
dec
enter
mov
daa
not
jo
outsb
jns
lods
mov
std
js
shrl
cwtl
imul
pusha
mov
loopne
gs
adc
insb
inc
int
xchg
xchg
std
xor
jnp
mov
pop
outsb
sub
add
scas
movsb
jnp
int
mov
clc
lret
in
inc
pop
jae
add
cmp
ljmp
sbb
hlt
sub
xchg
push
xchg
in
mov
outsb
sbb
add
stc
adc
scas
imul
xor
jnp
loop
scas
dec
add
aas
mov
dec
dec
jecxz
mov
arpl
imul
xchg
pop
lcall
or
jno
push
data16
or
inc
cmp
lds
nop
insb
jno
fwait
ret
mov
push
mov
outsl
jo
sbb
xlat
xor
cli
das
insl
lods
push
insb
scas
jbe
in
sarl
imul
imul
outsl
js
mov
ja
imul
jnp
push
rorb
test
dec
and
cmp
pop
push
jne
into
inc
cmp
or
adc
je
jnp
repnz
mov
cmc
out
jno
mov
jne
sarl
adc
clc
dec
bound
popf
fdivs
push
cmp
mov
cmp
add
outsb
in
cmp
sti
cltd
jae
mov
xor
inc
pop
add
cmpsb
adc
inc
inc
imul
stos
cltd
pop
loopne
loop
jnp
pushf
xor
lods
mov
ret
inc
shlb
mov
mov
loopne
jnp
jge
in
loopne
dec
hlt
jnp
pusha
dec
sbb
sub
jnp
sub
scas
imul
jne
js
es
pop
stos
sub
addl
jnp
ja
fstpl
xchg
mov
mov
or
adc
xor
inc
adc
aaa
ss
jns
cmp
lret
push
repnz
pop
cld
loopne
loop
adcb
push
add
jnp
pop
or
add
decb
mov
xlat
jnp
enter
push
leave
clc
jnp
lods
lret
fisubs
sub
push
jns
xchg
fucomi
data16
hlt
sub
xchg
push
xchg
ljmp
das
imul
mov
insl
sub
ss
arpl
xchg
jnp
pop
mov
xchg
out
cmp
pavgw
xchg
sarl
outsl
cmp
mov
sub
in
outsb
sbb
push
outsl
lret
jne
cmpsl
lods
dec
scas
jnp
movsb
push
in
jno
inc
dec
xlat
out
addr16
lcall
pusha
mov
jnp
mov
lock
jecxz
sbb
iret
roll
lret
icebp
jo
gs
frstor
jae
lret
pop
jnp
add
dec
lock
in
test
in
lods
and
pop
pop
cmpsb
jnp
or
xchg
jg
fstl
fidivrs
xchg
adc
jnp
es
fnstcw
mov
hlt
pusha
jnp
aaa
popa
aas
mov
xchg
push
sbb
xchg
cmp
mov
jnp
lcall
dec
mov
xchg
cmp
cld
and
imul
jno
into
jnp
insb
or
aam
lods
mov
lret
addr16
orl
in
loope
add
pop
daa
std
int
cmp
cmpsl
fwait
sub
call
cmp
jnp
cmpsb
sub
pop
sti
shr
mov
cmp
dec
jno
mov
push
mov
pop
mov
fldcw
sbb
shlb
adc
lock
or
fdivrs
repnz
jle
or
cmp
bound
jb
jnp
dec
rorl
or
int3
jnp
xor
xchg
cmp
daa
imul
sub
push
dec
dec
filds
insb
ss
jnp
adcl
idivb
mov
fisttps
js
sub
push
aas
aas
inc
outsl
ret
repz
fnstsw
imul
xchg
mov
pop
scas
aas
outsl
cmc
pop
jns
lea
mov
jnp
push
add
cwtl
mov
ret
push
jbe
test
test
sub
pop
or
lea
ret
sbb
dec
sahf
or
inc
or
sbb
cmpb
mov
insl
inc
inc
pop
jnp
and
push
cmp
xor
stos
sbb
push
jg
sahf
addl
add
int3
jmp
sub
mov
cwtl
aaa
rorb
mov
adc
pop
jl
test
jnp
push
jnp
pop
sbb
shr
js
mov
int
es
lret
jno
and
fistl
jnp
mov
push
repz
pushf
ret
mov
scas
or
cld
adc
adc
mov
jnp
vrsqrt14ps
xor
sbb
adc
cmp
jnp
clc
rclb
adc
sti
shrl
test
mov
or
je
mov
mov
loopne
dec
jno
js
dec
mov
xchg
fsubrl
sbb
aaa
jb
inc
jle
push
test
inc
cmp
cmp
ret
cli
loop
mulb
sbb
mov
call
inc
cmp
pop
sub
sub
cmc
jg
or
aas
js
andl
or
jnp
mov
xor
jnp
pushfw
loop
int
add
push
lret
out
add
icebp
jnp
pop
in
mov
mov
cmp
mov
gs
inc
mov
lret
jnp
lret
sub
sbb
pop
popa
jae
test
cmp
test
out
xor
mov
sub
inc
repz
lds
jle
out
mov
jnp
ljmp
mov
insl
mov
jo
lds
mov
int3
fdivrl
mov
aas
out
das
shl
jmp
push
ss
pushf
or
jae
jl
fsubs
pop
jnp
or
mov
lret
add
js
jae
insl
ja
push
mov
cmp
mov
or
jbe
call
popf
sub
xchg
in
xchg
loope
in
in
sub
cmc
push
rcr
mov
mov
adcl
xchg
jge
fcomi
lods
jnp
dec
insl
inc
mov
fcomp
sub
outsb
test
inc
xor
add
rol
mov
inc
push
jmp
cmpsb
mov
das
arpl
mov
mov
lret
add
cmp
repz
adc
inc
movsl
rorl
enter
out
sbb
and
dec
mov
lods
xor
mov
dec
sbb
jnp
push
mov
aaa
xchg
addl
popf
xchg
fidivrs
loope
add
imul
mov
adc
subb
pop
mov
aas
scas
fcmovne
insb
pop
jnp
dec
cmp
fdiv
iret
nop
jnp
stc
sbb
pop
push
and
arpl
cmp
stos
mov
dec
pop
mov
in
add
xor
jb
fstpt
mov
in
cmpl
gs
mov
mov
int3
sub
pusha
xchg
jnp
pop
or
cmpsb
mov
sbb
dec
add
jno
mov
ja
cmpl
adc
adc
lret
push
sti
jnp
ret
ss
out
cmp
pop
adc
inc
xchg
mov
xchg
jg
push
js
inc
adc
cwtl
in
jnp
adc
int3
jp
test
mov
or
sti
xor
clc
adc
ret
inc
jnp
and
gs
fsubrs
in
iret
dec
mov
pop
inc
roll
jo
popf
mov
push
or
fisubrl
jnp
mov
out
mov
push
xchg
pushf
jnp
or
jnp
dec
mov
lds
mov
jle
outsl
jmp
jnp
mov
imul
xchg
xchg
stos
cmp
in
fwait
sub
mov
aaa
or
jnp
mov
mov
dec
and
jb
fildl
cmp
imul
outsl
cld
adc
mov
pop
or
bnd
push
test
mov
lret
mov
xchg
adc
jns
or
sub
jnp
xlat
fadds
sbb
dec
push
push
daa
sbb
jg
loope
pop
cmp
mov
loop
ss
movsb
inc
cmc
jne
push
jnp
xchg
lcall
push
int
mov
stos
sub
jnp
mov
adc
daa
dec
mov
xlat
fdivs
mov
xchg
jo
mov
repz
xor
clc
mov
jne
sbb
push
mov
sahf
cmpl
and
jbe
jp
fwait
mov
fistl
addr16
jnp
fisubl
shlb
inc
jnp
cwtl
pusha
jle
mov
stos
lcall
mov
sub
stos
inc
clc
inc
mov
jnp
mov
jecxz
xlat
das
mov
pop
mov
repnz
xor
sub
mov
les
jnp
mov
push
and
pop
and
adc
outsl
jns
jle
divl
dec
lret
sbb
cld
jnp
test
cwtl
movsb
dec
outsb
mov
mov
lcall
mov
ss
ljmp
aaa
out
sbb
dec
mov
adc
mov
mov
inc
cmp
xor
es
ja
sub
cli
mov
inc
jno
repz
outsl
sbb
mov
pop
xchg
or
sub
imul
xchg
lret
outsl
or
add
sub
jnp
and
out
repz
mov
enter
mov
repnz
stos
jns
cmp
mov
and
in
xchg
mov
lcall
data16
cmc
fs
and
aad
xor
lcall
pop
fld
insl
out
fisttpll
out
lods
jbe
andl
jnp
push
push
fwait
cmp
jnp
xor
shlb
imul
dec
xor
fdivs
stos
mov
clc
add
jl
jp
shll
hlt
lahf
call
cmpsl
xor
jnp
data16
jle
cmp
mov
sbb
xor
push
ljmp
out
mov
pop
lret
je
jnp
pop
das
mov
popa
xor
leave
push
les
pushl
stc
mov
dec
sub
aad
push
push
jnp
and
xchg
jo
dec
or
hlt
ljmp
jnp
xor
push
jnp
or
rorl
nop
pop
jnp
and
push
mov
push
js
int
movsb
loope
cld
mov
jnp
mov
ljmp
jnp
test
out
das
lock
movl
lret
leave
lcall
outsl
add
or
fsubrs
jne
jp
imul
in
sub
jno
sarl
sbb
pop
es
jb
jae
jns
xchg
or
out
push
jnp
rcrb
jp
dec
in
mov
addr16
inc
sub
add
ficoml
add
sahf
pop
ja
or
push
jnp
mov
fidivrl
cmp
and
cmp
mov
ficoms
out
jbe
or
stc
xchg
dec
jecxz
mov
push
adcl
cmp
cmp
jbe
add
dec
popf
lock
sbb
movsl
jnp
cwtl
jecxz
ss
ljmp
mov
jo
cld
xlat
jnp
pop
mov
xchg
jnp
mov
jecxz
mov
pop
faddl
in
or
jnp
add
cmp
sub
pushf
in
enter
jnp
add
pop
jge
jp
jnp
arpl
imul
push
dec
dec
jnp
stos
pop
or
call
jbe
subb
mov
outsb
adc
imul
ret
fsubr
cmp
xor
jae
or
cmp
aam
ret
mov
and
dec
out
inc
pop
insl
lret
cmp
jnp
jns
sbb
pop
mov
pop
mov
aad
jmp
xor
add
test
std
shrb
int3
jo
jl
pop
jae
fsubr
jne
add
into
dec
add
popf
mov
jnp
std
repnz
mov
jbe
fidivl
dec
loopne
sbb
call
xor
jnp
push
mov
mov
push
mov
mov
sub
sbbl
sub
mov
test
pop
sub
mov
jnp
lret
outsb
in
and
pop
out
jbe
je
sbb
xchg
sub
jg
repz
mov
sub
iret
loopne
in
idivl
xlat
je
jnp
loop
cmp
mov
mov
psrlq
mov
imul
arpl
lahf
adc
dec
dec
out
pop
fisubs
xchg
or
loope
loopne
mov
scas
adc
jae
cmc
push
or
jbe
jo
fisttpl
data16
lret
icebp
or
movsb
aam
dec
add
insl
call
xor
dec
jnp
stos
adc
and
or
cmc
mov
cs
out
add
cld
idivb
test
sbb
leave
xchg
jae
cmpsb
scas
bound
cmp
clc
test
scas
outsb
test
pop
xor
lret
inc
fidivl
xchg
imul
jecxz
dec
xor
pop
aam
dec
jp
mov
xchg
and
stc
ss
js
cmp
xchg
shll
add
loopne
emms
les
das
sbb
xor
cli
rcll
nop
ret
jmp
jbe
or
mov
xchg
pop
jmp
push
rcl
jg
or
idiv
ljmp
add
cmpl
jmp
fidivl
jl
std
gs
pcmpgtw
or
sarl
cmp
pop
js
push
imul
mov
in
mov
jnp
ficoml
push
out
cmpl
out
insb
or
iret
es
clc
dec
fcmovne
loope
push
testl
or
mov
subl
and
sbb
cmpsl
ds
xchg
je
jnp
jmp
dec
js
sbb
xor
outsl
adc
lea
divl
rcrb
xor
mov
js
mov
imul
mov
sti
pushf
cmp
inc
jbe
jnp
daa
cltd
lods
repnz
imul
inc
lret
jnp
ret
mov
add
out
cmp
fidivrl
push
inc
sarl
push
dec
es
adc
cmp
xchg
das
idivb
loop
or
inc
dec
maxps
push
mov
fs
bound
mov
jae,pt
mov
adc
pop
mov
fsubs
cmp
pop
sbb
mov
hlt
sub
jge
cmp
lods
jg
cmc
adc
in
in
add
jmp
popa
xorb
mov
ficoms
xchg
jnp
dec
jle
jne
test
cmp
jnp
pop
mov
or
scas
sarl
aam
test
mov
cmp
mov
out
daa
xlat
cmc
fisttpll
jl
icebp
lea
dec
add
xor
mov
sub
leave
push
aaa
mov
add
sbb
xchg
push
adc
rorl
pop
xchg
ja
pop
push
imull
mov
xor
and
hlt
xchg
inc
jnp
outsb
add
jmp
dec
es
pop
sti
jno
xchg
pop
js
cmp
mov
inc
addr16
pop
cli
and
jge
fcmovb
cmpsl
into
jnp
pop
ja
xor
mov
cmp
int3
call
push
mov
xchg
mov
dec
jb
sbb
stc
sbbl
leave
add
daa
mov
ljmp
lock
rorb
push
add
jnp
xor
jnp
lret
and
jnp
jle
das
dec
mov
bound
cmp
push
subl
lea
cmpb
outsl
and
jmp
dec
cltd
imul
cmp
jnp
jae
dec
rolb
out
fldt
fcoms
mov
lock
hlt
pop
jnp,pn
dec
lods
bound
cmp
fnstenv
in
and
mov
sbbb
mov
sbb
mov
std
push
cmpsl
or
imul
push
pop
xor
jmp
add
jp
icebp
mov
pop
les
cmp
push
jnp
push
nop
js
ret
or
setp
xchg
mov
jne
testb
mov
push
lods
jno
clc
add
mov
cli
push
ja
insl
cmpb
cmp
aaa
hlt
out
shrb
es
sti
fdivrs
icebp
or
cmp
jg
dec
mov
clc
mov
in
scas
jb
pop
xchg
dec
jnp
enter
adc
jnp
dec
push
and
pushf
sbb
or
ret
inc
stc
cli
std
jnp
add
dec
sbb
int3
test
in
imul
cmpsb
stos
push
ret
notl
in
popa
jo
jns
push
cmp
mov
dec
jg
mov
jb
xor
daa
jnp
cmp
aas
mov
negb
xchg
jle
outsl
ljmp
aaa
push
cmp
repz
lcall
sbb
jmp
nop
repz
out
hlt
pop
loop
and
sub
lods
clc
cli
jnp
sub
ljmp
mov
clc
cmp
xchg
hlt
in
test
jae
mov
icebp
dec
lods
clc
sbb
mov
fs
jnp
popf
mov
inc
jmp
imull
outsl
flds
push
aaa
and
in
sub
inc
cmp
and
mov
repz
pop
cmp
sahf
das
mov
xor
popf
and
imulb
fnsave
bound
mov
jno
xor
jnp
lods
sub
rol
jne
xchg
dec
pop
hlt
jnp
sti
bound
xchg
sub
outsl
fnsave
mov
lods
jae
insb
scas
daa
out
aaa
inc
xchg
pop
dec
mov
sbb
inc
jae
and
adc
and
xor
xchg
jnp
lea
mov
aam
push
sti
mov
jg
pop
xchg
jp
bound
inc
ficomps
ret
jnp
xchg
xchg
movl
pop
mov
jnp
adc
popf
ljmp
sbb
into
imul
nop
jns
lods
adc
xor
call
and
and
pop
sub
mov
jb
mov
lods
add
dec
in
in
fdivrs
cmp
outsl
mov
jnp
lock
add
fwait
pushf
mov
cmp
je
dec
push
dec
and
or
in
pushf
iret
pop
in
lods
xchg
jnp
jle
stc
push
cmc
mov
or
test
ja
mov
jnp
adcl
test
and
fcmovnb
or
xor
xchg
lods
push
sub
push
xor
lret
jp
mov
nop
notl
in
orb
jnp
and
mov
je
sbb
mov
sub
repz
insb
lock
ja
pop
mov
aaa
jnp
xchg
mov
mov
ret
inc
ljmp
xchg
dec
sbb
pusha
movsb
cwtl
jbe
push
into
jnp
scas
xor
lret
add
jnp
dec
pop
cmpsb
mov
sbb
mov
xlat
inc
jb
testb
cmp
xchg
cmp
je
into
xor
lods
popw
push
mull
mov
test
jnp
pop
mov
popa
push
pop
adc
add
mov
jae
pushf
cs
dec
fcoms
jns
aaa
leave
xlat
or
jae
in
hlt
lods
add
or
cli
stc
jnp
fdivs
je
pop
and
call
es
insl
dec
pop
mov
xor
inc
outsl
lcall
mov
dec
js
xchg
call
enter
jnp
add
rorb
jnp
sbb
stc
push
loope
pushf
mov
push
sub
xchg
jge
cmp
clc
cmc
inc
rorb
lahf
into
int
and
cmp
scas
pop
jno
repnz
xchg
out
jb
mov
pop
hlt
and
jp
stc
aaa
xchg
cmpsb
cld
push
or
shl
xchg
xchg
jnp
ret
cmp
into
jnp
fstpt
cwtl
push
test
out
jnp
arpl
pop
xchg
xor
rcrl
aad
scas
push
xor
repz
sbb
sub
sti
icebp
addr16
in
in
out
mov
push
add
adc
push
and
or
dec
mov
jne
ret
mov
int3
cmpsb
jae
fcom
fimuls
dec
aaa
jnp
out
pop
insl
pop
jbe
jnp
and
mov
jl
or
fs
fnstsw
scas
mov
leave
jnp
cmp
pop
data16
mov
jg
jae
mov
outsl
into
mov
int
repnz
leave
arpl
fldt
push
inc
clc
pop
adc
into
fimull
call
cmp
sub
adc
mov
mov
jp
out
xor
sbb
sbb
xor
iret
mov
xlat
jb
js
ret
cmp
cld
pop
add
xchg
jmp
pop
mov
jbe
fildll
imul
mov
out
scas
push
jns
loope
push
lods
cmpsl
insb
enter
mov
addr16
daa
sub
jg
lds
mov
pop
jb
sub
ja
je
jnp
sbb
xor
mov
jnp
adc
jae
ficoml
ja
clc
and
xchg
adc
inc
aam
insb
icebp
mov
sbb
mov
or
int
pop
pop
jnp
xchg
add
mov
cmpsb
xchg
outsl
push
insl
out
sbb
not
jno
fcoml
jno
or
mov
xor
or
cmpsl
imul
test
jnp
mov
push
cwtl
es
xchg
pushf
cli
hlt
lret
cmpsb
ss
mov
cmp
inc
shrb
sub
data16
dec
lcall
fwait
jnp
adcl
jnp
cmp
lret
sub
dec
jae
xor
clc
fsubrp
sbb
sarl
notb
xlat
in
or
pop
xor
push
dec
pop
jnp
dec
ja
pusha
fucomip
sub
negb
mov
cwtl
cmp
mov
jno
jbe
mov
or
daa
hlt
jae
loop
lret
fwait
testl
outsl
in
mov
imul
jae
sbb
pop
dec
sub
imul
in
repz
scas
mov
pop
xlat
sarb
inc
aas
jnp
or
shrb
aam
dec
outsb
lret
stos
jnp
xchg
fidivl
dec
dec
pushf
adc
push
sbb
idivb
mov
sub
cli
lock
ret
sub
mov
push
lcall
xchg
jnp
sbb
subl
pop
or
jnp
jge
fwait
jmp
jnp
nop
into
outsb
sahf
push
xor
sar
icebp
insl
push
cmp
push
mulb
xchg
insl
mov
arpl
push
ds
insb
aaa
sbb
clc
stc
testb
xchg
outsb
or
dec
jge
add
cmp
pop
cmp
xlat
lret
daa
jae
xchg
outsb
outsl
ja
mov
push
jnp
fistpl
test
shl
sti
out
jnp
inc
mov
aam
loop
imul
leave
fnstcw
adc
mov
jp
xchg
inc
jnp
fiaddl
pop
fwait
sub
jnp
jge
cmp
jnp
push
outsb
cli
and
and
lds
dec
es
and
xchg
fxch
adc
lahf
sub
fisubs
rorb
roll
jno
xlat
cmc
cmp
filds
data16
or
jnp
mov
mov
jae
test
fisttpl
jp
fldenv
int
hlt
stos
sbb
decl
cmp
aaa
cltd
ret
xor
pop
xchg
mov
ljmp
adc
and
cli
push
sahf
pop
cmp
lret
sbb
bound
ret
dec
sti
mov
jbe
mov
jns
push
and
mov
sub
or
xchg
mov
nop
mov
inc
jecxz
cwtl
mov
in
data16
pop
rclb
xchg
mov
jnp
xor
cld
adc
mov
stc
mov
daa
push
jnp
mov
add
add
cli
jnp
pop
sub
shrl
fdivl
in
mov
outsl
add
jnp
out
jae
xor
pop
mov
outsl
fstpt
cmp
idivl
pop
sub
cli
push
in
and
jnp
loope
xchg
dec
inc
jnp
jns
sbb
sti
mov
in
mov
lods
pushf
jnp
js
push
adc
mov
or
cmp
jl
sub
sbb
mov
and
outsl
adc
jnp
sub
mov
clc
sub
dec
sub
pop
mov
jb
bound
mov
jle
repz
jno
inc
std
rcrb
cmp
sbb
jnp
lret
adc
out
and
mov
gs
xlat
jnp
or
or
dec
sbb
into
jbe
and
adc
mov
xchg
iret
jecxz
ljmp
fdivl
les
pop
in
jo
sub
sti
fstpt
cmp
pusha
sub
in
sub
mov
test
cmc
mov
dec
aam
insb
cmp
cltd
mov
jnp
jle
ficoms
out
jnp
or
and
cmp
sub
lea
sub
inc
lcall
bound
xor
test
jnp,pt
pop
xor
iret
addr16
xor
jnp
xchg
hlt
jbe
xchg
nop
in
push
or
sub
jae
popf
inc
xchg
sub
pop
jnp
aaa
inc
jno
shrb
jbe
mov
or
mov
dec
mov
out
push
mulb
pusha
jnp
mov
xchg
jnp
in
pop
mov
pop
sbb
jnp
cltd
dec
dec
mov
jnp
movsb
rorb
jnp
in
sarb
xlat
lret
jnp
push
pop
pop
xchg
pop
lcall
inc
repz
or
sub
stos
subl
push
pusha
xchg
ja
test
in
inc
mov
sub
into
out
das
movsl
or
ljmp
inc
cli
jnp
pop
dec
std
pop
jmp
in
mov
imul
in
xor
and
push
pop
outsl
or
enter
test
test
xor
jnp
inc
sub
sub
push
add
inc
fdivrs
movsb
sahf
ja
lods
call
xchg
das
lods
in
hlt
jnp
sbb
stos
enter
jecxz
mov
icebp
fiaddl
ret
pop
push
inc
xchg
xlat
and
jnp
jns
cmpsb
js
ljmp
into
adc
jno
icebp
leave
adc
popa
jae,pn
in
dec
adc
fldenv
pop
cmpsl
ss
ret
push
cmp
jnp
enter
mov
xor
jmp
bound
jecxz
inc
fildll
push
insb
pop
stc
and
enter
xor
push
jp
mov
lods
dec
fldenv
cmp
jnp
or
xor
jge
jnp
mov
push
popf
xor
sbb
cwtl
add
xchg
jnp
pop
or
jecxz
inc
sub
orb
fisubrs
push
fiaddl
push
aas
lock
mov
jle
sti
leave
shll
adc
jo
scas
xchg
js
cmc
movsb
sub
cmp
xchg
cmp
push
pop
cmp
popf
pop
or
push
xor
push
add
pop
dec
mov
cmp
aas
xor
mov
aam
js
lock
cmp
and
test
mov
mov
push
xchg
jno
insl
sub
or
inc
push
stos
mov
jnp
push
push
mull
loop
inc
icebp
fcmove
aam
enter
out
cmp
shrl
jg
cmpsl
stc
ja
push
or
mov
ja
sbb
mov
jne
cmp
or
ret
and
inc
inc
pop
xor
push
mov
jmp
in
jns
sbb
fistpll
sub
jnp
dec
jge
push
dec
outsl
xor
inc
pop
sti
addr16
or
dec
dec
ror
stos
adc
data16
jae
popa
dec
push
cmpsl
clc
mov
jle
addr16
ljmp
out
and
and
lcall
inc
insl
add
jns
ficompl
sbb
idivl
dec
loop
call
in
fisubrl
mov
aam
or
jae
push
dec
fdivs
xor
jge
jnp
hlt
mov
cmc
jp
pushf
jnp
bound
test
sbb
jbe
sti
jne
lret
lods
popa
std
fdivrs
in
jno
ja
movsb
push
xchg
and
out
test
or
lret
or
stos
dec
xchg
in
xor
test
mov
push
mov
lods
add
xor
jnp
pop
andl
push
lods
shrl
pop
dec
sub
je
int
jnp
cmp
push
pop
xor
jnp
push
mov
lret
call
lods
dec
xchg
push
or
addl
aam
jmp
jnp
pusha
ret
mov
in
ss
jnp
sub
cs
imul
ss
jnp
ficompl
sti
call
mull
cmp
mov
push
or
mov
mov
mov
inc
xor
mov
mov
bound
hlt
or
mov
push
aam
cmp
js
pop
notl
test
cli
aad
pop
lret
push
xor
mov
mov
mov
sub
jg
loopne
mov
scas
or
jns
or
mov
push
mov
sti
stos
inc
in
hlt
jb
jnp
push
pop
xor
lahf
add
adc
out
das
imul
mov
jb
jnp
mov
push
xchg
mov
pop
ret
fbstp
jae
mov
pop
sub
xlat
push
sbb
mov
xchg
xorl
ljmp
test
dec
add
dec
cli
sbb
into
jnp
sub
in
mov
pop
mov
scas
xor
pop
mov
or
fs
fwait
xor
pushf
sbb
pop
or
or
je
adc
ds
jnp
stos
rcrb
sbb
subl
cmp
leave
add
in
mov
movsb
jg
insb
pushf
mov
cmpsb
daa
push
and
cs
lods
mov
jnp
call
loop
lret
pop
jl
or
jmp
or
sub
jnp
popa
mov
out
hlt
jnp
xchg
test
jg
ret
test
mov
jae
shll
mov
imulb
cltd
jnp
lods
xor
subl
sbb
mov
out
out
shll
faddl
clc
sub
jp
js
aam
mov
mov
adc
pop
push
cld
adc
cmp
jge
aaa
pop
enter
sub
std
popf
fidivrl
in
sti
mov
stos
dec
jb
xorps
lock
dec
fcmove
xchg
sbb
pop
push
rep
iret
lret
jns
jnp
sub
call
xchg
daa
jnp
xchg
mov
ret
sbb
ss
add
inc
dec
or
pushf
mov
dec
sbb
or
dec
mov
ficomps
lcall
xor
cmp
push
lret
shrb
inc
adcb
mov
hlt
imul
mov
mov
daa
push
roll
adc
xchg
imul
test
rorl
into
lret
jl
loope
xchg
sub
jne
mov
jno
jmp
imul
aam
jnp
je
mov
pop
ret
jnp
lret
ds
ret
loopne
pop
jnp
inc
pop
lock
xlat
jnp
in
enter
js
aaa
fistpll
adc
cli
adc
jnp
movsb
push
push
mov
out
jnp
ljmp
jnp
adc
cmp
dec
add
and
or
ret
dec
add
out
push
sub
cmp
mov
mov
jnp
dec
imul
jnp
movsb
fisttpll
jnp
mov
mov
jnp
lret
bound
push
call
outsl
std
adcl
cmp
ds
lret
push
mov
in
jnp
test
arpl
push
add
insl
enter
jg
sbb
jnp
or
pop
cmpsl
sbb
imul
lods
or
pop
bound
imul
pusha
xchg
and
xchg
lock
mov
push
jnp
cmp
dec
dec
lock
and
lret
jnp
mov
inc
or
xor
jge
sti
pop
add
mov
push
and
cmpsb
and
lret
xor
xchg
mov
lret
sarl
or
inc
jno
sub
mov
add
jnp
xchg
mov
pop
mov
jmp
popa
cmpsl
inc
jae
lods
sbb
addr16
js
insl
add
ss
jnp
cmp
push
jge
pop
fwait
inc
clc
hlt
imul
insl
stos
adc
outsl
pusha
fnstenv
jmp
adc
cmp
js
cli
jbe
jnp
repz
and
je
and
aam
fimuls
push
mov
xlat
dec
lret
xchg
jae
mov
das
mov
rcrl
or
mov
inc
dec
insl
cmc
dec
fisttps
jno
mov
jnp
mov
fiadds
mov
pop
push
dec
jo
xor
pop
out
aam
inc
sub
in
mov
icebp
sahf
mov
jnp
jmp
lcall
lods
or
xchg
ret
fstp
sub
sub
cmc
stos
movsb
jge
ss
insl
in
mov
cmp
and
mov
popf
nop
inc
mov
arpl
loop
fwait
jae
pop
aam
mov
inc
pop
adc
shld
shlb
dec
cwtl
cld
inc
out
mov
push
popa
lea
imul
dec
ljmp
jnp
pop
pusha
movntps
clc
jnp
sub
xor
or
imul
movsb
sbbl
je
cmpsl
or
sub
imul
jnp
scas
negl
lret
jbe
cmovae
fstpt
sbb
into
stos
and
clc
jnp
mov
push
aam
imul
gs
mov
cmpsb
jnp
mov
lds
out
sarb
mov
xor
cmc
hlt
sub
sbb
js
xor
lods
cmp
cmp
mov
mov
sahf
lock
push
daa
add
repnz
aas
in
jnp
loope
mov
call
sbb
stos
inc
mov
stc
call
push
xlat
loop
add
imul
in
push
in
dec
push
inc
rcr
fadds
shrl
mulb
insb
push
jnp
repnz
das
mov
mov
mov
idivl
xor
cli
stos
sti
add
dec
push
add
mov
stos
test
mov
sbb
sbb
fldt
divb
rorl
outsb
jnp
jbe
iret
stc
push
sub
cmc
fcmovnu
je
jecxz
jnp
add
dec
aaa
and
fwait
adc
mov
inc
insb
pop
dec
cmp
rcrb
jae
jp
sbb
cmc
repz
xchg
adc
and
out
clc
scas
pop
imul
rol
jg
pop
jne
pop
jmp
pop
push
mov
into
loope
arpl
shrl
mov
pop
test
loopne
into
or
add
das
xchg
aam
jnp
dec
xor
lods
mov
mov
adc
jmp
mov
xchg
das
or
jl
add
cmp
in
sub
jae
xor
or
call
std
or
lods
insl
fwait
arpl
xor
ss
ficoms
jnp
xor
cmp
hlt
jp
jnp
aam
ss
pusha
inc
lock
dec
xchg
xor
and
dec
inc
mov
shrl
imul
scas
ljmp
jnp
jns
out
fsincos
xor
cwtl
imul
es
sbb
lods
outsl
je
push
lock
mov
xor
cmc
jecxz
xor
divl
dec
jno
fdivrs
xchg
jae
fnstcw
mov
scas
xchg
imulb
xor
push
jnp
dec
adc
lret
mov
jnp
cmp
arpl
jmp
jnp
aaa
leave
shl
stc
movsl
out
mov
xor
lret
jnp
mov
popl
mov
mov
ds
sti
dec
shll
jnp
sub
jne
gs
clc
mov
dec
cmp
dec
arpl
jb
mov
into
ret
jb
stc
xchg
out
jnp
push
mov
mov
sbb
inc
sub
stos
mov
mov
mov
push
scas
cld
sub
gs
add
lret
jnp
rcrl
cmpsb
dec
or
outsb
hlt
or
dec
xchg
fiadds
mov
stos
cmp
mov
mov
xchg
cmp
jbe
jae
in
xchg
ljmp
stos
ja
int3
stos
or
push
mov
mov
fisubl
sbb
js
jnp
sbb
lret
lock
pop
mov
jp
or
sbb
arpl
scas
orl
sub
mov
push
mov
push
stos
pop
scas
jge
xchg
out
fstps
adc
enter
sub
push
cmp
fdiv
sub
out
subl
pop
add
jo
cmp
mov
push
addr16
cmp
popa
in
es
sbb
jo
jae
out
xor
jnp
and
push
fidivrs
add
in
hlt
js
lret
mov
mov
mov
lods
shlb
mov
fisttpll
rorl
cs
cld
jae
sbb
sbb
mov
jb
jnp
or
sarb
pop
jae
pusha
mov
cmpsl
imul
cmp
repnz
jecxz
sub
jmp
push
pop
dec
arpl
jne
mov
sahf
rdpmc
shrb
repnz
testb
das
sti
push
out
jbe
cmc
xchg
fs
cmp
lea
test
jnp
cmp
sub
scas
mov
out
clc
sbb
mov
outsl
lds
xchg
gs
out
mul
push
insl
adc
cmpsb
lahf
xchg
adc
sub
addb
fimull
xchg
add
std
lret
imul
push
push
mov
mov
cmp
imul
mov
push
mov
or
std
add
xchg
xchg
cmp
sti
xor
stos
outsl
inc
adc
jnp
jmp
mov
sbb
xchg
sti
mov
mov
cmp
call
push
mov
int
inc
pop
xchg
pop
das
sub
ret
xor
cmc
pop
xchg
insb
push
arpl
pop
iret
and
jno
ljmp
int
sbb
adc
in
repz
and
dec
pusha
add
jnp
jge
mov
pop
cli
cmp
addr16
fisubrs
bnd
subl
jnp
fwait
cmpsl
adc
call
test
dec
jnp
mov
and
clc
das
insb
push
pop
int3
adc
push
add
decl
dec
xor
ss
negb
cmp
sub
lods
add
cli
push
loop
jnp
es
loope
dec
mov
out
mov
and
clc
movsb
cli
cmpsb
lock
xchg
pop
jnp
test
cwtl
in
insl
pop
push
jo
rol
mov
push
sbb
ret
arpl
jbe
xorl
out
mov
push
dec
dec
dec
pop
out
sub
ret
sahf
imul
testb
dec
mov
in
mov
imul
jecxz
mov
in
sub
cmpsl
enter
idivl
in
leave
dec
in
cmp
add
stc
mov
iret
mov
jae
rcrl
lods
loope
cmp
insl
mov
jnp
call
ret
mov
sub
outsl
negb
adc
mov
repz
mov
xchg
es
insl
or
out
jnp
call
jno
jnp
adc
adc
mov
pop
mov
shrl
inc
shl
xor
jge
mov
dec
dec
repnz
mov
andb
jae
push
out
add
cmc
jge
addl
ret
jnp
sbb
fidivrl
adc
xchg
lea
push
loop
fisubrl
cld
jnp
gs
inc
aam
xor
fistps
fnstenv
jnp
repnz
xor
ret
repz
imul
mov
sub
cwtl
xchg
jae
into
repnz
mov
xor
xchg
pop
cwtl
add
enter
lods
lahf
call
in
add
outsl
enter
dec
idivl
mov
into
jle
inc
in
or
mov
mov
sbb
jno
jnp
cmp
pop
insl
lods
jnp
mov
xchg
push
xlat
mov
sub
sbb
pusha
jnp
adc
xchg
inc
jnp
loopne
push
popf
outsb
in
lcall
loopne
js
insl
dec
jecxz
and
in
cmp
sbb
mov
inc
in
mov
cmp
pop
or
adc
xchg
stc
or
dec
ja
mov
loopne
xchg
jnp
dec
lock
cmp
mov
and
inc
jns
lret
cmp
shlb
mov
lcall
cmp
xor
int
adc
inc
aad
fdivl
jb
sti
cmp
clc
sahf
insb
jnp
fsubrl
pusha
push
outsl
xchg
fsubs
push
jno
adc
jnp
add
jnp
and
cmpsb
in
call
xor
popa
jne
sahf
sarl
negl
notb
cmp
jp
mov
push
ffreep
mov
stc
or
pop
xlat
jb
mov
arpl
jb
xor
dec
bound
xor
pop
sbb
in
cmp
inc
sub
jae
jge
addr16
cmc
ss
cli
dec
jnp
sbb
jecxz
jge
jnp
scas
xchg
imul
dec
fldcw
jae
adc
js
scas
sub
in
jle
scas
cli
loop
insl
shrl
dec
mov
hlt
jae
iret
sbbb
stc
jle
test
jne
repz
or
pop
lods
xchg
and
sub
test
pop
inc
cmp
je
aaa
push
mov
lcall
ret
jmp
and
add
pop
xor
mov
mov
adc
lods
ret
sbb
or
jge
push
xor
jnp
cmc
or
pusha
gs
sti
xchg
xor
add
imul
and
jp
ss
inc
xchg
cmp
lret
jnp
lcall
mov
pop
ljmp
cs
jnp
sub
pusha
jbe
mov
scas
outsl
cwtl
out
jnp
xchg
xor
jnp
xor
test
sbb
cmp
es
loopne
mov
loop
lock
jb
cli
mov
mov
daa
ss
jnp
or
pop
sbb
xchg
movsb
xchg
cwtl
orb
ja
outsb
inc
insl
adc
sarl
jge
push
mov
push
lret
ja
fwait
insl
sti
lock
int
xchg
mov
js
push
or
icebp
loopne
xchg
lods
test
rclb
or
in
out
xor
int
mov
add
fdivrs
lock
inc
and
ret
or
sub
cmp
pop
jle
jp
fnstcw
repz
pop
cmp
aaa
jnp
ret
test
lret
js
sub
shl
mov
popf
sub
add
jnp
mov
or
pushf
ljmp
sub
jnp
dec
mov
mov
imul
xor
add
add
mov
test
ljmp
fdivs
xor
or
cmpb
xor
lock
imul
repnz
xchg
ss
mov
decb
jnp
faddl
in
sbb
das
shlb
mov
ret
insb
and
nop
jnp
add
movsl
mov
cld
lock
cmp
xor
sub
jecxz
and
xchg
sub
movsl
leave
pushf
jnp
pop
push
xor
mov
or
lahf
sbb
mov
jecxz
xor
jae
aaa
sub
sarb
sub
in
in
jnp
fcmovnbe
ljmp
dec
mov
cmp
mov
adc
xor
shlb
jnp
cmp
scas
into
jp
jnp
loopne
and
jmp
imul
pop
fisttpl
sarb
mov
cmp
out
jno
cmp
fstpt
shlb
lock
mov
popf
cmc
jns
cmp
je
ljmp
jnp
mov
cmpsb
imul
push
mov
ror
popa
sbb
xor
adc
fisubl
stos
mov
xor
mov
jp
int
aaa
sbb
sub
jge
xor
pop
sbb
sahf
jnp
stos
rcll
cmp
fisubs
mov
xchg
dec
jnp
cld
add
jmp
ja
jnp
mov
xchg
mov
test
imull
sub
sub
inc
jnp
pop
je
aaa
push
and
mov
sub
stos
jnp
pop
or
push
jecxz
pop
cmp
ljmp
mov
imul
mov
or
repz
test
inc
jnp
pushf
adc
sub
dec
jnp
aad
mov
push
ljmp
ja
mov
lcall
jnp
inc
dec
add
jge
inc
mov
sbb
lock
push
adc
cmp
jp
aaa
cmp
ja
push
pop
imul
iret
shlb
test
cs
enter
push
fstpt
sub
jae
fimull
sub
jge
or
clc
xor
jnp,pn
lret
cmp
or
pusha
imul
push
clc
sbb
insb
sub
jns
dec
dec
fimull
mov
clc
jbe
sbb
insb
ja
jnp
idivb
lcall
push
mov
adc
mov
jb
js
sti
dec
jmp
lret
mov
jns
dec
mov
mov
xchg
daa
jnp
stos
stc
pop
jp
mov
or
clc
cmovbe
outsl
int
outsl
mov
xor
int3
xor
push
mov
ret
stc
pop
pop
cmp
xchg
pop
jnp
jle
jg
pop
sbb
mov
adc
stos
sbb
jnp
xchg
jbe
jne
jnp
lods
mov
cmc
pop
and
jnp
or
sbb
sbb
and
push
jnp
sub
jns
fldt
fmul
mov
dec
push
ds
dec
cmp
enter
ss
dec
jnp
mov
adc
mov
jnp
negl
aaa
or
jnp
dec
incl
aad
mov
repz
inc
call
outsb
iret
aaa
xchg
daa
sub
or
enter
ds
pop
cmc
jne
fisttpl
jmp
jns
lret
xor
mov
and
push
cmpsb
repz
jl
sahf
je
je
jne
rcrb
testl
jnp
sbb
aad
or
ds
mov
lret
outsb
rcrb
inc
scas
pop
in
push
jnp
adc
xor
dec
into
xor
fwait
mov
pop
stc
mov
push
mov
fidivrl
aad
roll
fdivl
jnp
sub
sub
push
jnp
xchg
repz
adc
cmp
mov
and
cmp
inc
xor
jmp
pop
lock
cmp
and
sub
mov
cmp
dec
mov
inc
add
imul
bound
or
test
ja
es
call
jnp
inc
aad
cmp
hlt
lods
lret
jnp
cmp
fsubrs
mov
sti
out
aad
js
stos
xor
jl
je
jnp
add
mov
jbe
das
aaa
jp
mov
sbb
jns
xor
jg
test
in
jnp
call
mov
jnp
out
dec
jae
xor
rorl
cltd
cmpsb
mov
clc
ss
mov
outsb
popa
jnp
cmp
xlat
fxtract
leave
jnp
std
pop
ficompl
ret
xor
sbb
and
in
je
sub
pop
dec
cmp
dec
rcr
outsl
enter
pop
mov
add
jle
rorl
aaa
lods
or
rcll
repz
sub
scas
mov
iret
sub
jle
jnp
call
or
mov
sbb
scas
push
cmpsl
iret
outsl
pusha
dec
push
jnp
ret
mov
adc
ljmp
jnp
add
mov
jnp
xchg
imul
stc
xor
jl
hlt
jle
mov
cli
add
mov
fcmovnu
loop
or
xor
jp
ja
in
test
imulb
jnp
sub
and
cmp
dec
divb
sarb
mov
sub
cmp
or
pop
scas
das
in
fidivl
ljmp
fnstenv
push
push
arpl
dec
or
mov
clc
jae
xchg
sub
imul
in
mov
sub
or
lods
call
shlb
xchg
ret
jnp
mov
sbb
pop
insl
mov
ja
scas
or
inc
dec
fnstenv
insl
mov
into
jnp
inc
xchg
mov
outsl
iret
hlt
popf
test
sti
jnp
pop
movsl
loop
cmp
push
sub
jnp
jne
es
xchg
and
scas
decl
pop
xchg
and
push
std
data16
sti
out
cmp
jnp
mov
dec
fxch
aad
mov
pop
fs
cmpsl
jno
aaa
push
stos
cmpsb
imul
and
jbe
mov
mul
sbb
xchg
in
scas
jmp
mov
pop
xorb
or
xchg
push
jae
shll
in
sti
mov
fdivrs
repz
add
and
mov
cmpsb
scas
pop
jnp
dec
jo
inc
mov
cmp
xlat
in
add
jnp
lcall
or
ss
jno
pop
dec
cli
cltd
inc
push
call
mov
aaa
scas
std
jnp
push
push
cmp
cmp
mov
clc
lahf
jnp
sahf
pop
mov
test
fmulp
jbe
cltd
jnp
outsl
jge
xchg
mov
lods
xor
and
iret
cmpsb
imul
xchg
xchg
scas
insl
scas
add
jle
in
ret
pop
std
out
inc
fstpt
xchg
pusha
sti
jne
push
cmp
cmp
jns
jae
mov
out
jecxz
jg
jnp
sbb
dec
in
inc
mov
ja
cmp
or
iret
jo
cmpsl
mov
jnp
fldenv
icebp
cmc
or
jnp
in
jmp
jae
pop
imul
jns
dec
cmpsb
mov
dec
jnp
cmp
jne
or
dec
cli
subl
outsl
les
stc
push
jae
or
neg
cmc
hlt
jnp
jmp
sub
xchg
shll
movsb
or
jmp
inc
insl
jnp
lret
xchg
negb
add
push
jno
mov
lea
stos
mov
addr16
cmp
xchg
sbb
repz
mov
lods
sbb
ja
adc
sbb
sub
inc
xchg
mov
cmpsl
outsl
xchg
fs
in
jle
xchg
in
jnp
xchg
ja
cmp
lcall
cli
sub
xchg
jnp
push
or
je
icebp
sarl
ret
dec
lods
lahf
jmp
pusha
mov
gs
nop
shrl
cmp
mov
mov
or
out
push
ja
sbb
pop
mov
in
repnz
push
sub
dec
outsb
jle
dec
or
jae
andl
das
arpl
test
pop
sbb
in
pop
jnp
inc
movsb
lcall
add
out
pop
dec
pop
jecxz
sbb
mov
pusha
jnp
cli
cmp
shll
test
push
or
sub
pop
jnp
cmp
in
sub
cmpsl
rcrl
mov
outsl
dec
dec
mov
ja
daa
cli
lcall
or
cmp
orb
lcall
mov
sub
pop
ja
sbbl
push
and
call
ret
cmp
sti
jp
insb
pop
dec
push
fwait
daa
enter
mov
out
lods
decl
adc
fnstcw
call
pop
xchg
aad
arpl
pop
shl
outsl
mov
xchg
mov
sbb
push
mov
aas
jnp
aaa
iret
push
jnp
push
stos
aam
ja
and
jp
mov
pop
in
push
jnp
roll
push
pop
mov
test
and
cwtl
ss
leave
fwait
cltd
push
jo
jnp
sbb
fstl
daa
sub
lret
inc
mov
in
shlb
push
xor
ljmp
call
cmp
repz
or
orl
push
jae
cltd
dec
addr16
dec
jnp
outsb
cmp
jno
pushf
test
or
jnp
fdivrs
out
jnp
mov
ud0
das
push
sbb
std
lock
mov
lret
mov
orb
in
mov
popa
inc
jae
shl
lods
cld
popf
dec
jnp
sti
mov
cmp
adcb
sub
stc
pusha
cmp
stos
jnp
jl
xlat
aas
clc
mov
in
imulb
cmpsl
popa
add
mov
mov
cmc
jnp
in
inc
cmp
lods
mov
adc
mov
jnp
adc
sbb
repnz
dec
inc
mov
cmp
mov
pusha
ja
je
pop
mov
pop
out
mov
mov
jnp
fnstenv
push
cli
xchg
inc
sbb
cmc
dec
test
push
xlat
clc
jb
push
popf
jnp
int
lds
js
xor
lahf
out
into
cmp
fdivrl
add
xor
dec
xchg
cmp
inc
daa
jae
mov
jnp
pop
aas
inc
or
add
jecxz
lahf
fcomi
cmp
out
aam
dec
mov
jnp
xor
movsl
add
adc
orb
sbb
mov
sbb
or
adc
nop
inc
pop
fcoms
js
aaa
jnp
outsl
mov
aam
sbb
imul
jo
mov
int3
jge
or
mov
jnp
mov
adc
or
jnp
fcomps
xor
xchg
mov
jnp
mov
test
xor
test
insb
mov
sbb
hlt
cmp
push
sti
lods
jecxz
and
pop
bound
std
out
jnp
xchg
cmpsl
repnz
jnp
cmc
lods
pop
push
jbe
in
stos
jnp
lea
mov
cld
sub
xor
lods
sub
jnp
dec
add
fldenv
mov
adc
imul
jne
pushf
int3
js
jnp
lret
aad
dec
mov
addb
pop
xchg
imul
test
shlb
in
xchg
sub
cmp
js
clc
loopne
cmp
mov
pop
fyl2x
push
pop
or
imul
jnp
pop
faddp
push
mov
pop
loopne
nop
jecxz
movsb
mov
inc
hlt
jle
push
int
push
pop
mov
xchg
movsb
jnp
mov
int
jnp
shll
daa
cmp
pop
sub
insb
add
mov
add
orb
jnp
mov
mov
mov
xchg
push
testb
addr16
aaa
jno
nop
mov
jb
cmp
mov
jo
pop
cltd
xor
adc
xor
imul
cwtl
outsl
jns
mov
jb
and
in
fdivrs
das
lret
jnp
fcmovb
mov
mov
inc
cmc
mov
push
js
dec
dec
test
stos
jp
cmp
rol
imul
sub
iret
cmp
mov
into
sbb
xlat
jnp
jbe
lret
mov
out
jnp
jne
sar
mov
mov
xchg
jnp
pop
lcall
mov
insb
bound
and
xor
pop
dec
jnp
jge
xchg
cli
je
mov
sti
es
mov
call
lods
add
xor
dec
in
out
bound
rep
decl
ds
loop
dec
push
pushf
arpl
sub
lds
bound
out
xor
ljmp
divb
mov
pop
sub
jae
arpl
fcmovnbe
cmc
inc
fdivs
jnp
mov
jle
insb
jnp
cmp
cmpsb
aaa
lock
insl
lock
xor
cmc
or
lods
cmp
sbb
cmpsl
jnp
mov
and
cli
lret
jb
mov
mov
push
and
lea
ja
dec
js
stos
repz
sbb
and
pop
daa
jnp
mov
pushw
or
das
nop
dec
cmpl
mov
fdiv
mov
adc
fwait
and
sbb
les
sbb
dec
cmp
fwait
lret
jnp
cmp
lock
in
mov
pop
stc
aam
out
jnp
xor
push
mov
addr16
data16
mov
lahf
outsl
push
push
cld
lock
mov
pop
and
mov
mov
sbb
dec
js
imul
in
lea
jbe
es
fmull
sbb
jo
sbb
mov
jnp
scas
sbb
jnp
and
lods
push
int
shrl
clc
stos
xchg
lret
insl
cli
pop
jnp
in
xor
add
jb
testl
lds
outsl
sbb
jge
subl
xchg
jle
rorl
jno
xor
and
fimull
mov
add
jle
cmp
or
shll
das
jns
mov
loope
sub
push
in
jae
imull
dec
movsb
jnp
push
xor
mov
push
lds
cmp
xlat
cmp
jo
mov
jnp
and
fbstp
lahf
cmp
push
outsl
stos
lret
ss
or
sti
dec
iret
rclb
or
jg
mov
addb
inc
fwait
iret
jne
shl
sub
int3
mov
and
cmp
stc
jnp
js
cmc
lret
cmp
pushf
jg
sub
xlat
cli
pop
les
insl
pop
stc
lret
mov
mov
or
ss
rcrb
jnp
cwtl
xchg
jnp
lods
iret
mov
jnp
mov
fwait
out
pop
jae
xchg
mov
lret
jnp
loopne
or
mov
loopne
mov
sti
sbb
shll
aad
mov
loop
imul
pop
jnp
bound
mov
sbb
aas
xchg
or
add
push
clc
adc
ljmp
adc
adc
cli
jmp
sbb
jns
lret
lret
ja
sbb
sbb
das
push
jnp
insl
cmp
or
xchg
jnp
loopne
mov
sbb
sub
mov
dec
jnp
gs
fcmovu
and
sti
jnp
and
dec
cmp
insb
imul
fldt
jnp
xor
xor
call
jns
inc
arpl
daa
fistps
adc
sbb
out
push
jns
int3
mov
mov
arpl
cmc
pop
inc
into
inc
push
outsl
push
lret
pop
bnd
mov
cli
jle
jo
iret
jnp
shll
mov
add
push
xor
jge
leave
or
push
ja
subl
in
mov
cmpb
xor
add
in
sub
mov
out
imul
int
cmp
lds
das
and
arpl
aaa
jae
dec
rcll
xor
test
dec
and
insl
dec
mov
pop
add
push
sbb
mov
int
fs
ss
dec
pop
rorl
fwait
jnp
lahf
jbe
mov
movsb
add
push
data16
xchg
negl
jnp
mov
jmp
jnp
loop
mov
or
ficomps
xchg
xor
ss
jnp
pop
mov
jmp
pop
clc
or
data16
dec
sbb
sbb
in
sub
dec
or
pop
sub
dec
iret
sbb
fnstsw
in
jmp
xchg
pop
in
jnp
push
scas
add
and
jnp
repz
sub
addr16
sub
push
inc
sub
mov
mov
inc
andb
push
cmp
ljmp
jnp
jecxz
and
mov
jnp
out
daa
les
push
or
and
arpl
jnp
mov
ret
outsb
out
cld
jnp
fldt
daa
mov
mov
jmp
jle
adc
loop
pushf
xchg
mov
push
push
dec
leave
adc
fdivl
insl
cmp
sub
mov
jnp
call
push
cmpsl
pop
push
mov
sti
cwtl
dec
adc
das
jge
xor
push
pushf
out
in
and
xchg
xchg
mov
mov
xchg
fstpl
mov
cmp
cmp
into
shr
xchg
jne
test
pop
popf
xor
out
sub
jl
jae
adc
mov
sbb
mov
jbe
and
popl
mov
mov
jnp
cmp
mov
add
fdivs
sbb
inc
stc
or
pop
out
rcr
push
scas
jae
das
jmp
mov
jnp
sbb
aaa
insb
and
stos
lret
mov
imul
dec
fwait
in
mov
fldt
cmp
xor
jnp
jbe
sbb
imul
cmp
jle
pop
xchg
fsubrs
add
ja
test
lock
fsubrs
adc
push
scas
dec
sub
insb
adc
fsubrs
pop
das
stos
dec
push
pop
gs
or
adc
repz
test
out
stos
inc
cmpb
into
cld
inc
mov
fimull
scas
jnp
sub
addr16
xor
rorl
enter
xor
xchg
test
stc
sub
inc
jnp
xor
mov
or
and
shrb
jmp
js
xor
dec
xlat
bound
mov
jae
enter
insl
jb
daa
xchg
stc
loope
or
jmp
xchg
out
jnp
ljmp
aaa
dec
adc
jle
jno,pn
stos
jg
adc
pop
mov
popa
aaa
or
lods
sahf
cmc
fiaddl
xor
stos
mov
and
scas
xchg
ror
test
mov
mov
stos
mov
push
out
sarb
mov
inc
xchg
lods
pop
stos
shll
cs
incl
jno
repnz
push
mov
or
add
dec
imul
repnz
jnp
out
push
in
mov
mov
push
pushf
jnp
sbb
mov
cli
mov
sub
jmp
mov
mov
inc
inc
jnp
lods
xchg
mov
mov
adc
decl
jnp
xchg
jp
sti
arpl
mov
push
nop
mov
xor
sub
ret
lcall
jecxz
mov
pop
scas
and
jnp
sub
xchg
mov
and
jbe
jmp
mov
push
push
xor
or
jnp
cs
cli
dec
cmp
stc
in
jp
es
arpl
fidivs
mov
pushl
out
in
je
cmp
xchg
lret
push
dec
xor
inc
jns
loop
jb
jns
mov
sahf
jmp
mov
cld
fwait
xor
lret
mov
sbbb
xor
lock
cmp
jnp
adc
push
sti
add
jnp
lods
clc
rcrb
fwait
scas
lods
mov
sub
outsb
in
data16
test
add
push
mov
jl
cli
ja
inc
mov
lret
mov
lds
inc
mov
lcall
mov
xchg
icebp
and
adc
out
leave
adc
push
inc
ja
cmp
aaa
addr16
add
sub
je
daa
jg
dec
ffree
pop
cmc
into
jp
pop
pop
cmc
ja
xlat
out
xchg
cmp
mov
add
cmp
pop
and
in
lock
fwait
pop
push
movsb
fisubrl
xchg
add
push
jp
mov
add
sbb
and
dec
popf
pop
scas
scas
mov
lds
push
aaa
pop
test
testb
jnp
mov
mov
fisttpl
aad
xlat
pop
mov
ret
insb
aaa
sbb
or
jbe
pushf
xchg
scas
mov
std
jnp
mov
orl
das
jnp
loope
ds
jle
sub
xor
std
insl
aam
in
cmp
push
lcall
cmp
ja
mov
push
aam
imul
sub
lods
pop
push
scas
pop
aaa
push
jnp
repz
xchg
cmpl
mov
outsb
int3
jp
out
adcb
lods
jnp
dec
iret
enter
fistpll
inc
mov
mov
lret
aas
xor
jnp
popa
or
mov
lret
dec
enter
cld
scas
int3
pop
int
sub
in
jnp
je
jl
fwait
sbb
dec
ja
test
mov
stos
dec
jge
jae
test
pop
into
ja
cmp
sbb
mov
fst
lods
push
std
jnp
sub
pop
lret
cld
sbb
mov
fimuls
into
push
ficompl
addb
leave
in
cltd
xlat
xchg
mov
cmp
mov
mov
or
out
enter
mov
sub
xchg
pop
call
xchg
insb
pushf
xor
jb
dec
das
aas
in
js
fcomip
jno
scas
jnp
sbb
movsb
mov
int
int3
jl
mov
outsb
stos
sahf
sbb
mov
dec
xchg
xor
sti
sub
cmp
mov
scas
adc
fisubs
inc
jae
fmuls
cli
sub
imul
jae
adc
ja
or
outsl
adc
pushf
scas
sbb
xchg
lock
js
aaa
aaa
push
pushl
fsubrs
xor
outsl
or
pop
das
aas
jae
div
adc
int
mov
outsb
jp
jbe
fstpt
cmp
repnz
mov
mov
nop
cmp
jnp
sub
pop
ret
dec
cmpsb
push
dec
hlt
sbb
push
push
sahf
jo
inc
mov
jo
mov
cmpsb
jae
mov
push
pop
stos
sbb
idiv
fistpl
ljmp
aam
or
outsl
or
scas
or
in
dec
cwtl
mov
enter
cmp
and
popa
ss
cmp
lock
jnp
inc
aas
sbb
or
jbe
add
sub
cwtl
cmp
fstpt
shlb
inc
jb
or
cmp
scas
insl
clc
mov
push
jle
int3
aaa
jl
lods
hlt
ret
stc
push
mov
inc
ja
shll
cmp
gs
es
or
and
push
cltd
and
jnp
lret
hlt
push
jle
or
ja
mov
mov
neg
fmuls
cmp
mov
js
ja
jnp
push
pop
cmp
and
fcomps
cli
sbb
jne
mov
jnp
jno
scas
cmp
imull
std
cli
jnp
mov
test
mov
aaa
in
jae
mov
jnp
std
nop
je
lahf
and
jnp
mov
imul
jnp
sub
pop
stc
repz
jae
js
fsts
push
in
xor
sub
ss
sbb
ret
pop
fnstcw
repz
pop
sti
or
mov
jle
sbb
dec
jnp
sahf
loop
scas
jb
mov
insl
cs
ljmp
xor
jnp
scas
les
das
mov
out
jnp
mov
pop
cmp
stos
push
or
ja
cmp
jne
lahf
lahf
fiaddl
jnp
stos
enter
pop
scas
notl
pop
pop
xlat
lods
sub
sbb
stc
adc
xchg
in
cli
xchg
mov
out
clc
scas
jo
pop
xor
dec
test
push
je
jl
js
fwait
add
leave
xchg
jnp
adc
jbe
stos
and
lea
and
rol
jnp
push
loopne
sarb
pop
and
mov
fcomps
insb
fdiv
mov
jmp
lret
jnp
jg
in
hlt
or
sbb
jnp
jp
fcoml
and
lods
ljmp
jg
into
xchg
xor
cli
testb
je
in
sbb
or
jae
add
lods
test
iret
adc
sbb
dec
jnp
lods
mov
cmp
dec
pop
cld
sarl
sub
or
inc
inc
jns
ret
jl
aaa
rcrl
cmp
in
orb
add
sub
push
jne
clc
mull
mov
leave
cmp
jnp
cs
mov
jnp
hlt
sub
into
mov
ret
sbb
icebp
sarb
stos
jnp
xor
mov
dec
push
sub
stc
or
mov
cld
jne,pt
jae,pn
std
out
mov
int3
mov
add
xor
mov
dec
mov
sarl
jne
ljmp
in
pop
or
sbb
hlt
jae,pt
aaa
sub
das
sbb
out
lahf
outsl
dec
sub
jnp
add
ja
jnp
mov
mov
jnp
jmp
jb
cld
das
cltd
in
stos
enter
mov
mov
sub
scas
mov
xor
mov
ret
insl
fidivs
mov
xchg
jo
mov
pushf
faddp
jno
scas
out
xchg
jnp
mov
lock
mov
in
pop
jle
lcall
into
pop
aad
repnz
popf
jnp
mov
cmp
pop
jnp
fcomps
fnstenv
imul
js
movsl
cmpsl
leave
in
test
cmp
repz
dec
mov
outsl
xchg
push
mov
mov
idivb
iret
lahf
fwait
addr16
dec
aaa
dec
jo
cs
inc
push
rolb
icebp
mov
std
pop
mov
js
jne
outsb
jnp
add
adc
cmc
mov
scas
push
pop
jnp
cmp
mov
gs
std
push
push
or
and
and
pop
movntps
pop
cmp
jle
pop
repnz
mov
mov
or
pop
push
mov
imulb
in
jnp
sub
mov
jnp
sti
mov
mov
and
lock
dec
inc
inc
jmp
mov
mov
sub
ljmp
int
cmp
adc
add
and
jne
push
aaa
add
in
jnp
mov
push
cli
es
adc
cltd
leave
addl
jmp
jae
sub
call
fwait
mov
imul
pop
fwait
jae
mov
js
imul
in
and
cld
in
xor
xchg
sbb
jbe
mov
jnp
push
dec
mov
and
fdivs
xchg
mov
jge
cmp
or
inc
movsb
insl
lahf
sub
cmp
loop
ja
push
pop
call
dec
outsl
pop
xchg
mov
sub
test
adc
push
mov
scas
dec
mov
jnp
sub
ficoml
stos
sbb
xchg
xchg
fildl
cmp
push
cli
jle
icebp
jnp
mov
mov
lret
negb
jbe
dec
enter
jnp
in
inc
pop
ss
idivl
mov
mov
js
fnstenv
inc
or
out
fisttpl
push
inc
lcall
call
xchg
push
dec
sub
outsl
and
sbb
mov
lahf
fsubrs
jp
cmp
jl
das
pminub
aad
out
inc
cmc
jnp
pushf
pop
dec
cmp
icebp
mov
push
jnp
iret
and
mov
jnp
gs
or
jnp
aad
cmp
scas
daa
call
mov
and
and
je
jnp
rorb
jnp
cmpsl
daa
dec
pop
and
inc
sbb
xchg
in
jae
dec
aaa
inc
mov
dec
pop
add
jnp
lret
add
inc
jnp
pop
jns
test
mov
nop
aaa
mov
dec
mov
jmp
xorl
inc
jle
mov
inc
sbb
inc
xchg
into
jnp
cmp
dec
pop
jnp
in
pop
jno
push
ss
push
lock
xor
pop
or
out
dec
divb
jnp
into
stc
pop
sbb
fcompl
stos
jae
lods
dec
popl
mov
inc
sub
pop
pop
ss
dec
imul
jnp
dec
pop
mov
cmp
mov
scas
bound
out
sbb
insl
push
fnstsw
pop
sbb
or
and
pop
pop
insb
stc
out
dec
fstps
cmp
mov
jnp
stc
aad
loope
mov
cmp
cmp
jnp
test
xchg
dec
jno
jnp
iret
punpckhbw
jp
mov
jae
mov
cmpsl
andb
repz
mov
icebp
jnp
cs
xchg
orl
push
xlat
loope
or
pop
mov
dec
ret
pop
cli
jnp
xor
inc
dec
adc
adc
bound
push
into
mov
sbb
cltd
jae
ret
xchg
xor
imul
and
xor
lea
jnp
mov
cmp
pop
addr16
lock
ja
add
imul
lret
jp
cli
test
sti
pop
mov
cmp
xor
jnp
sub
push
aad
cmc
jl
das
bound
insl
loopne
cmp
push
jp
fidivrl
push
jns
stc
aaa
lock
cmp
jno
sub
sub
dec
das
lds
or
mov
and
call
mov
jp
cmp
fsubs
cmp
pushf
sub
sbb
shl
scas
cs
jmp
push
andb
lret
inc
fstl
sbb
outsb
stos
add
or
sub
in
lea
push
call
xor
pop
jge
das
popf
jnp
mov
mov
push
repz
push
cmp
jnp
fistl
xor
mov
push
ror
jnp
push
cmpsl
lcall
lret
out
pop
in
pop
jnp
inc
sbb
stc
jo
jle
sub
push
loopne
mov
push
pop
mov
mov
push
inc
xor
jne
pop
jecxz
sub
cmp
jg
adc
outsl
in
lea
gs
andl
test
xor
push
adc
js
mov
dec
lods
mov
in
cli
insl
fldenv
test
jnp
push
sbb
xor
ss
repnz
mov
jae
lods
fwait
imul
sti
cmpsb
in
out
jnp
xorl
or
insb
into
or
insl
insl
mov
hlt
sub
dec
xor
mov
jbe
js
inc
sub
mov
sarl
dec
push
inc
mov
xchg
dec
pusha
mov
xorl
pop
push
leave
jnp
sbb
dec
nop
loop
sahf
push
out
int3
jp
xchg
mov
insb
mov
enter
or
subb
push
lahf
dec
mov
sbb
in
fldt
jnp,pt
hlt
jo
das
repz
inc
jnp
sarb
pop
outsl
mov
lods
jbe
pushf
cmpb
xor
insb
push
bound
popa
pop
aam
adc
sbb
ret
out
cmp
stc
test
mov
xlat
push
adc
call
jne
mov
pop
push
in
sbb
rcrb
das
xlat
and
cmp
sbb
pop
ss
push
fiaddl
mov
cltd
sub
sbb
or
lea
mov
push
adc
lahf
pop
sbb
cmp
jge
jle
mov
imul
lret
outsl
sub
add
cmp
jnp
and
cmp
in
scas
cs
or
pop
jnp
xor
push
mov
push
ret
sarb
sub
jmp
or
or
pop
inc
outsl
ja
mov
mov
mov
jae
mov
call
sub
cmc
sbb
jbe
mov
sbb
pop
push
inc
xor
hlt
std
in
lea
clc
cmp
add
pop
jnp
cwtl
mov
jae
pop
ss
cmp
pop
push
jb
mov
dec
insb
int3
mov
scas
mov
outsb
ret
mov
mov
arpl
dec
mov
enter
push
and
or
js
sti
pop
repnz
imulb
insl
xchg
das
jg
aam
jns
pop
aam
jnp
test
fs
xor
jnp
mov
mov
cltd
sbb
mov
pushf
cli
aas
push
push
add
loope
movsb
enter
test
pop
mov
sarb
pop
into
lret
mov
test
jnp
jne
cwtl
sbb
pop
sarb
fnstsw
ss
sarb
out
movb
dec
into
dec
mov
in
mov
mov
out
or
or
jae
pushf
or
jg
cmp
imul
sub
xor
popa
fnstcw
lods
jnp
out
cmp
popf
fildll
adc
subl
push
mov
lock
dec
inc
das
lods
jle
push
jnp
in
je
mov
imul
fcmovbe
sbb
jnp
mov
mov
and
dec
jnp
mov
lahf
stos
mov
sbb
pop
out
ss
ds
in
int3
xchg
ret
sbb
jae
mov
lods
addl
xlat
outsb
inc
lods
add
push
int3
das
jnp
inc
adc
dec
loopne
in
push
xchg
xchg
mov
mov
jnp
lods
mov
imulb
arpl
test
inc
and
xor
call
pop
cltd
cmp
or
dec
notl
in
push
mov
jb
fildl
movsl
push
fisubl
out
push
mov
add
mov
jnp
xchg
jecxz
lea
out
enter
lods
sbb
jg
aaa
jnp
jo
daa
jno
and
fmul
mov
insl
mov
xchg
jnp
and
inc
imul
xchg
je
xor
jne
push
jnp
adc
sub
sub
in
out
aad
clc
hlt
xchg
or
stos
pop
fnstsw
enter
pushf
dec
fwait
mov
mov
in
ljmp
push
repnz
je
jnp
outsl
imul
jns
mov
mov
jnp
sub
icebp
aad
clc
jnp
jns
adc
dec
adc
js
out
jp
xchg
clc
movsl
mov
push
sbb
sub
clc
pop
jns
xchg
cli
jnp
mov
push
and
pxor
scas
sub
adc
cs
in
mov
fistpl
test
jbe
aad
call
jp
ljmp
and
outsl
mov
xor
test
jbe
jne
sbb
cs
mov
mov
fistpl
adc
in
and
inc
jp
xor
testl
shrb
cs
mov
aam
jnp
cltd
arpl
cmp
bound
mov
stos
lods
sub
sub
mov
lret
or
or
sbb
clc
pop
pop
jno
sahf
xchg
mov
je
out
cmp
sub
aaa
out
fcomp
lahf
xor
lcall
stos
loope
mov
outsl
sarb
stos
dec
sub
or
xchg
xchg
movb
icebp
xor
scas
fs
sub
dec
jp
lret
inc
sub
adc
jnp
pushf
fisttpl
cmp
jp
pop
sub
pop
add
lret
in
cmp
in
jnp
in
fmuls
mov
jne
add
cmp
arpl
pop
or
xor
pop
jne
stos
mov
sub
and
mov
xchg
jecxz
outsb
jge
or
pop
sarb
lods
jo,pn
inc
nop
cmp
cmp
lea
jp
and
add
int
addl
fistl
sub
jmp
push
pushf
movsb
cli
xlat
lods
inc
pop
cltd
pop
cmpsb
and
jae
jp
aaa
daa
das
loopne
mov
inc
ss
in
push
cmp
mov
cltd
mov
push
nop
mov
pop
repnz
xlat
xor
sbb
jae
push
inc
mov
add
xchg
test
cmp
xor
lods
cs
insl
incb
pop
mov
jnp
pop
pop
loop
inc
andl
leave
or
jnp
add
add
xor
cmp
mov
xchg
xchg
dec
sub
icebp
imul
imul
jecxz
add
xor
and
jns
js
xchg
clc
xchg
lods
clc
out
in
sbb
add
iret
lods
push
sub
jnp
adc
in
or
std
jle
adc
mov
xor
into
dec
imul
shrl
stos
and
push
les
sbb
or
sub
or
xor
jmp
jae
xor
pushf
aas
mov
xor
sbb
sub
mov
fisubrl
xchg
fistpll
popa
movsb
test
cmpl
inc
fs
repnz
mov
push
xor
jae
out
cmpsb
int3
jnp
jg
jecxz
mov
push
aam
sub
or
loop
ret
div
push
sbb
jp
lods
stc
pop
aaa
xlat
std
jnp
test
cmp
jnp
mov
mov
int
fisttpll
fdivs
pop
xchg
add
nop
or
in
pop
xchg
stos
xchg
sub
daa
mov
sub
shrb
mov
fistl
and
mull
pop
cmp
sbb
inc
cmpsl
or
sti
jg
sbb
mov
ss
or
jbe
jnp
fisttpl
adc
scas
gs
subl
imul
xchg
insl
cmpb
inc
cs
adc
sub
jae
or
aaa
shl
inc
in
jae
orb
call
add
adc
iret
pushf
mov
mov
push
comiss
pop
bound
mov
and
push
lock
pop
hlt
loopne
dec
insl
adc
dec
maskmovq
idivl
jb
movsb
mov
and
cmp
jl
or
jo
js
xor
shrb
scas
pop
mov
addb
xchg
sbb
mov
mov
ja
ljmp
iret
jbe
add
jnp
mov
sub
lock
jnp
fcmovnb
push
xchg
addr16
cmp
sub
inc
or
xor
mov
sarb
pop
push
sub
mov
mov
pushf
enter
call
loope
jae,pt
and
fs
ret
jg
sahf
sbb
sub
test
insb
jbe
xchg
jnp
inc
jge
out
inc
popa
enter
in
mov
cmp
adc
bound
jnp
or
add
sarb
jnp
sbb
jnp
mov
lock
bound
jb
cmp
inc
shl
imul
pop
addr16
rcr
insl
cwtl
mov
aaa
cmp
repnz
insb
xor
cmp
jnp
cmc
jne
adc
dec
cs
lods
jmp
in
test
jbe
xchg
call
mov
ljmp
sbb
pop
jno
orl
pushf
test
aaa
mov
cli
pop
in
daa
cmpsb
fcmovu
cmp
fbstp
xchg
lods
or
ja
xor
sub
cmc
ss
push
fisttps
insl
gs
or
dec
adc
cmp
inc
daa
cmp
jnp
shlb
out
pop
into
leave
cli
jnp
mov
inc
daa
adc
cmc
fiadds
xchg
out
mov
mov
jno
sub
fdiv
nop
les
jnp
testb
jge
dec
jnp
xchg
das
inc
pop
xlat
out
cmpsl
fdivrs
notb
jb
subl
das
daa
sbb
js
fdivrl
repnz
add
jnp
daa
gs
enter
xchg
rorb
scas
xchg
lock
aaa
jne
xchg
out
outsl
pop
mov
sub
mov
mov
jo
sbb
lods
jp
jp
in
jnp
adc
jle
xchg
icebp
mov
fldcw
mov
es
sub
xchg
mov
push
out
mov
in
leave
in
int
andb
lret
inc
adc
cli
enter
in
push
int3
cmp
lock
lods
push
shlb
adc
or
xchg
lods
jae
out
out
add
mov
inc
mov
lret
in
and
mov
in
loop
mov
pop
jle
jno
in
fwait
lcall
sub
add
adc
loop
xchg
mov
jnp
test
sbb
jnp
push
lods
jbe
ljmp
mov
dec
mov
lret
pop
inc
into
and
push
repnz
imull
mov
pop
sti
leave
mov
or
jae
xchg
push
stos
popf
les
jnp
dec
xor
adc
sbb
mov
pop
lods
fs
outsl
mov
cmpsl
call
inc
jnp
stos
addr16
fcomps
xor
in
add
aad
mov
xchg
les
or
jb
sbb
sub
repz
cmc
jnp
mov
aaa
and
jnp
lods
pop
push
imul
mov
out
sbb
mov
jg
and
jo
fdivs
lret
adcl
sub
into
loop
sub
mov
and
in
cmp
cmp
jg
and
mov
xchg
outsl
xchg
fbld
std
push
inc
pop
mov
testl
gs
mov
ss
xchg
jnp
mov
ret
xor
cmp
movsl
sbb
je
jnp
push
pusha
decb
cmp
loop
add
sarb
cmpsl
sub
stc
xor
andb
ss
jnp
cli
sahf
imul
lret
imul
push
insl
inc
mov
mov
fisubs
xchg
int3
add
arpl
mov
xchg
out
dec
push
jnp
mov
fstps
jo
adc
dec
jne
arpl
aad
jnp
adc
enter
inc
out
xchg
push
mov
sbb
fimull
xchg
call
lock
rclb
xlat
jo
das
lods
jnp
dec
jo
rcr
sub
test
imul
shrl
mov
aam
sub
cmpb
stos
xor
outsl
sbb
cmpsl
subb
jp
aad
aaa
mov
fisubl
pop
cmc
sbb
and
sbb
inc
sahf
test
jnp
ret
cmp
mov
cmpsl
xchg
test
push
sub
mov
jecxz
sub
lea
mov
js
xchg
sbbb
add
insb
inc
jmp
sub
clc
in
call
mov
dec
pop
dec
in
fstpl
insl
mov
mov
cs
cwtl
sbb
inc
shlb
gs
cmp
lods
cwtl
sub
cmpsb
sbb
jnp
call
cld
or
pop
icebp
insl
cmpsl
hlt
lods
aaa
and
enter
xchg
daa
mov
sbb
in
adc
loope
push
mov
out
cmp
lock
addr16
jnp
in
call
mov
or
cmp
jnp
xor
xlat
sbb
mov
hlt
int3
jnp
push
clc
stc
fstps
sub
arpl
in
mov
xchg
enter
lret
or
add
mov
sbb
jns
gs
jmp
ljmp
adc
push
push
pop
dec
and
je
cwtl
mov
jb
bound
sub
mov
cmpsl
mov
mov
stos
imul
in
push
xchg
push
inc
js
ljmp
dec
cmpsb
jecxz
aaa
fisttpl
jnp
call
rcll
mov
add
fdivr
outsl
loop
push
pop
lret
scas
or
jnp
xchg
mov
pop
int
stc
mov
push
xchg
sub
or
test
jae
bound
mov
pop
jecxz
imulb
mov
imul
and
movsb
pop
das
ret
jl
call
sbb
stc
fsubrs
or
sub
push
cmp
pop
or
and
stos
ret
mov
mov
call
push
test
in
mov
jo
movsl
fdivs
movsl
imul
xchg
jp
pusha
in
xor
mov
mov
cmp
cmp
ja
stos
sub
xchg
mov
les
inc
push
add
jnp
sbb
fstl
sub
and
add
xchg
outsl
cmc
test
dec
dec
ss
imul
stc
in
lods
xor
stos
cmp
xor
test
lock
test
mov
stos
pop
aas
sar
in
push
ljmp
daa
push
inc
pop
fsubrl
test
jo
inc
mov
decb
push
bound
sbb
mov
mov
lcall
jbe
mov
test
bound
daa
sub
mov
imul
insb
dec
addr16
jae
icebp
and
loop
insl
scas
imull
mov
aaa
mov
out
insl
ret
mov
jo
sbb
pop
lods
fildll
inc
jnp
mov
jl
xor
or
testb
push
data16
stos
add
jnp
sub
mov
cmp
or
cmp
ret
mov
pop
sbb
fsubrl
sahf
lcall
sub
add
pop
sbb
sbb
pop
dec
jo
xchg
ljmp
jge
sub
or
movsb
pop
jnp
add
ficomps
cmp
mov
adc
aaa
ja
xchg
daa
inc
out
cmp
cmp
push
repnz
xor
mov
aaa
add
inc
out
and
xchg
mov
test
pop
outsl
movsl
inc
fnstcw
mov
jge
loope
sub
dec
push
or
ret
jp
loopne
push
jnp
shll
test
jne
sbb
jg
fiaddl
xchg
xor
mov
jnp
icebp
mov
test
push
cmpsb
sub
sbbb
js
sarb
pop
or
lods
xor
ja
test
push
sbb
or
add
mov
mov
push
rcrb
gs
mov
sbb
aaa
jae
imulb
jnp
jmp
sahf
pushf
dec
pop
jnp
loopne
loope
bsf
mov
mov
add
notb
ljmp
mov
rcrb
aam
ljmp
cmp
es
or
mov
mov
in
jle
sub
stc
mov
clc
cwtl
push
jb
ja
xchg
inc
clc
iret
xchg
dec
push
lahf
mov
mov
test
dec
push
jl
mov
sbb
and
bound
sti
sbb
jnp
js
mov
jo
sahf
dec
mov
cmp
mov
mov
inc
test
or
test
dec
or
test
fdivrs
cld
and
mov
cmp
lods
scas
dec
fldz
jle
clc
sub
loop
and
inc
cmpsb
leave
mov
fs
mov
xchg
int3
or
jmp
xor
mov
cli
hlt
mov
lods
insl
cmpsb
push
or
sbb
mov
test
dec
ret
notb
pop
iret
jp
fidivrl
es
adc
out
popa
sub
rclb
addr16
push
sarb
rclb
pop
insb
sbb
jnp
shl
jge
je
cmp
lret
mov
xor
jmp
xchg
or
and
bound
enter
pop
sub
jnp
sub
adc
adc
add
outsl
cmp
fwait
cli
jnp
jns
lret
inc
pusha
push
inc
lea
inc
pushf
xor
jnp
setns
lock
add
and
push
mov
pop
jnp
add
mov
scas
mov
push
push
mov
jp
or
fidivl
ds
mov
mov
pop
adc
jnp
dec
les
cmp
dec
dec
lret
int
insl
cmpsb
in
jnp
sbb
iret
push
idiv
jle
xchg
mov
mov
jnp
dec
jecxz
lret
mov
popa
sub
cmp
push
or
jmp
xchg
cld
outsb
lds
and
inc
sub
jae
cmp
bnd
addb
int3
dec
ja
push
int
ficoms
sub
cmc
or
jnp
sbb
bound
int3
jnp
gs
xlat
out
or
cmp
sub
sbb
pop
lods
push
cmpxchg
pop
pop
cmp
popf
inc
xchg
jae
stos
mov
into
jnp
sub
mov
cmp
js
rclb
lods
adc
xorl
mov
mov
jnp
insl
lcall
push
mov
paddw
in
xchg
mov
in
hlt
jnp
nop
lods
push
adc
mov
push
cmc
imull
mov
in
add
or
out
cwtl
jecxz
movsb
call
push
pop
xchg
data16
jnp
sarl
push
pop
out
out
jnp
pop
call
adc
lods
mov
mov
xchg
imul
push
or
aad
lds
add
shrb
sbb
jnp
arpl
dec
sbb
addb
movsb
dec
pop
call
push
jbe
in
call
fadd
imul
or
xor
gs
mov
jae
ret
sub
dec
lds
cmp
xor
xor
out
cli
jnp
jb
mov
mov
and
jge
jp
xchg
daa
les
inc
jnp
xchg
mov
cmp
stc
mov
addb
jae
cmpsb
sti
jnp
addb
jnp
sbb
jge
jnp
mov
sti
pop
or
aam
jne
sub
adc
add
int3
cmp
cmp
or
es
jecxz
mov
test
jmp
int
data16
cmp
ret
sub
in
sub
imulb
add
test
adc
jnp
sbb
ficompl
sub
call
xor
or
add
sub
fdivl
repnz
pop
mov
int
inc
lar
mov
sub
jns
sbb
hlt
popa
xchg
cmpb
mov
addr16
cmp
adc
cmpsb
stos
mov
jbe
mov
sbb
cmp
mov
mov
sub
mov
ja
add
lds
push
jnp
mov
xchg
shrb
jb
pop
stos
adc
imulb
fwait
dec
adc
dec
jno
iret
in
pusha
sub
lcall
fdivrs
out
test
and
mov
cli
std
outsl
scas
adc
xchg
test
ret
arpl
imul
jnp
fistps
jnp
adc
pop
in
mov
imul
scas
popa
outsl
or
xchg
xchg
icebp
xor
das
xchg
mov
pushf
xchg
and
fsubs
shrb
or
insb
jnp
and
jo
inc
jnp
push
out
xlat
xor
and
mov
jb
stos
sub
sbb
adc
mov
mov
cmp
daa
dec
arpl
push
cmc
call
sti
lods
pop
icebp
mov
cli
test
mov
sahf
lods
lcall
ja
sbb
outsl
xlat
jge
dec
loope
gs
dec
icebp
pop
sub
jne
cmc
imul
shr
and
or
push
lret
shrl
jne
adc
movsb
ljmp
jbe
xor
in
adc
loopne
or
jnp
into
mov
adc
fst
dec
out
push
xchg
sti
push
cmp
into
jnp
sbb
jmp
push
or
jnp
push
push
add
loopne
add
ja
dec
mov
xchg
mov
jmp
and
orl
aam
jnp
cmp
xchg
inc
push
insl
mov
pop
adc
xlat
repnz
sub
jnp
or
or
jns
ja
jg
xchg
leave
mov
in
es
jae
mov
rcll
outsb
jae
shlb
enter
repz
sub
xlat
cmpb
pop
ror
jb
imul
adc
jmp
jp
cmp
cltd
popa
jnp
call
adc
lret
push
xor
sti
mov
cli
push
fxch
out
sub
sub
adc
xor
lods
pop
das
int3
mov
mov
arpl
mov
jp
pop
cltd
cmc
jnp
mov
aaa
sbb
xlat
adc
dec
stc
dec
pop
push
xchg
or
lods
xorl
mov
push
add
jnp
movsb
adc
jmp
hlt
fidivs
insb
cmc
mov
lock
test
cmp
arpl
int
lahf
cmp
sbb
jnp
pop
inc
inc
pop
fcomps
test
jecxz
popf
sbb
cmpl
pop
pop
push
out
dec
cmp
push
push
repz
jl
jnp
decb
mov
mov
dec
jmp
jle
sbb
push
scas
lods
imul
jp
outsl
loope
js
jge
bound
mov
lock
mov
xchg
les
dec
xlat
fcoml
mov
sbbl
lods
out
in
jnp
jle
mov
sbb
loop
call
mov
sahf
xchg
cmp
pop
incb
pop
mov
arpl
jg
xlat
lock
stos
jnp
lods
inc
push
daa
cmp
stc
mov
test
repnz
outsl
shlb
test
sti
cmp
out
pop
cmp
pop
or
jno
xor
xchg
push
cmp
es
jo
test
mov
add
ss
cmp
aam
jnp
push
cmpsb
pop
inc
cmpsl
pop
push
sub
sbb
push
arpl
in
sub
mov
cmpb
jmp
sub
loopne
xchg
call
je
jnp
mov
out
fs
lret
push
nop
add
fisubl
push
hlt
add
enter
jnp
out
mov
imul
and
mov
or
fisubrs
clc
lcall
or
testb
inc
mov
test
push
push
subb
outsl
xchg
rorb
xchg
dec
mov
jo
pop
inc
jnp
ss
das
jnp
sbb
popa
mov
xor
imul
out
dec
sub
into
inc
pusha
mov
movsb
out
jnp
pop
mov
pop
jnp
sarl
mov
inc
mov
int3
mov
mov
sbb
or
mov
or
enter
fisubl
push
cwtl
jne
inc
xchg
jnp
sahf
pushl
dec
push
dec
mov
jl,pn
into
mov
test
divl
out
in
mov
add
and
dec
enter
mov
sub
stos
mov
in
lods
push
jnp
andl
mov
ja
cmp
jnp
xor
xchg
ret
push
jnp
in
mov
imulb
mov
cmp
mov
push
sub
dec
or
lea
inc
scas
stc
lock
dec
loope
jnp
mov
add
mov
jnp
cmp
std
jnp
and
mov
xchg
cmp
and
in
idiv
aaa
fadds
cs
jnp
shrl
or
shrb
andl
add
imul
add
sub
scas
mov
jnp
je
insb
mov
mov
sub
dec
jo
imul
cmp
or
fcoml
imul
mov
testl
outsb
xor
cmp
sub
mov
call
scas
lods
ljmp
xchg
adc
outsl
mov
stos
or
cmpsb
loop
cmpb
xchg
dec
xchg
inc
sbb
test
cmc
sub
fsub
sub
jne
xor
cmp
mov
loopne
dec
xchg
cmp
jns
pop
pop
std
jae
in
lret
jnp
push
pop
mov
cli
imulb
mov
dec
pop
lods
in
or
bound
add
jnp
repz
xchg
jp
jnp
pop
sbb
mov
sbb
mov
cmp
lods
aas
out
inc
lret
mov
or
scas
dec
fisubrs
mov
mov
pop
into
push
in
outsb
jns
ljmp
stos
jnp
push
xchg
dec
pushf
addr16
add
outsl
cmp
push
lods
lret
jae
mov
rcrl
mov
dec
push
pop
fwait
jmp
push
fidivrl
push
push
or
dec
das
cmpsl
jne
cld
inc
cli
out
mov
jnp
fstpt
inc
jnp
dec
stc
push
repnz
out
add
dec
aad
call
ss
out
push
imul
or
dec
das
js
cwtl
jnp
dec
or
jnp
aam
or
imul
pop
mov
testb
dec
pop
in
jnp
add
not
adcl
stc
push
hlt
cs
jnp
adc
in
push
testb
orb
push
xlat
mov
mov
es
and
dec
ret
imul
lds
mov
jp
lods
jno
jnp
lret
push
out
jl
out
lods
mov
cmp
popa
inc
jnp
lea
mov
popf
lcall
push
fcmovne
jle
daa
mov
mov
pop
dec
call
inc
xor
outsl
imul
sbb
cmp
or
and
dec
ds
imul
test
insl
outsl
enter
inc
outsl
rclb
aad
lcall
mov
fldenv
ret
sti
push
mov
push
xchg
jns
dec
test
cmp
div
mov
mov
or
in
pop
adc
cwtl
xchg
xchg
fdivrs
aaa
pop
xchg
xchg
leave
sub
cmp
das
mov
hlt
cmp
jnp
call
mov
ret
sbb
sub
push
int3
imul
lods
aaa
js
sahf
cmc
ja
add
hlt
jnp
loop
sbb
cmc
cmp
cli
inc
push
fucomi
jnp
or
cmp
mov
sub
aaa
cltd
dec
loope
or
or
mov
jnp
adc
fstl
scas
stc
sbb
in
adc
js
idivl
jl
aam
sarb
and
add
push
xor
shrb
and
add
mov
insb
sbb
sahf
pop
outsl
pop
dec
ss
jnp
pop
mov
cltd
add
or
insb
jl
outsl
push
ljmp
test
jae
hlt
sub
out
sub
shrb
mov
jnp
stos
and
dec
xor
fstpt
into
lret
mov
sub
cmp
jne
mov
lods
jnp
mov
into
adc
dec
cwtl
jnp
push
and
stos
xor
ja
add
sbb
pop
mov
sbb
mov
ret
mov
xchg
pop
mov
jnp
add
add
mov
inc
cmp
xchg
jnp
xor
rorl
mov
aad
sarl
sti
and
dec
xor
mov
aas
jnp
pop
sub
inc
or
jmp
mov
push
pop
jno
mov
adc
mov
mov
jne
je
xlat
daa
inc
sbb
sbb
cmp
xor
mov
xor
push
dec
sub
mov
rcr
sbb
das
popf
jno
scas
mov
int
out
sub
outsb
jnp
lods
sahf
std
and
sub
fmul
dec
arpl
sbb
or
jnp
fisttpll
sarl
ljmp
repnz
pop
jp
sbb
jnp
lods
mov
lds
nop
jnp
push
rcrl
cmp
jnp
cwtl
or
mov
jnp
scas
imul
imul
cmp
imul
push
jnp
out
clc
lahf
lea
call
dec
cmp
mov
mov
out
bound
add
jns
hlt
or
sarl
and
sbb
mov
jns
pop
ret
jnp
sbb
mov
daa
testl
lahf
pop
jnp
rorl
mov
xorb
xor
push
jnp
mov
outsb
cwtl
shlb
jnp
fmuls
test
cmp
mov
cmp
ss
mov
pop
or
xor
mov
adc
xlat
jle
mov
sub
add
idiv
jae
dec
mov
lods
stos
rorb
ja
je
and
cwtl
or
ja
dec
mov
daa
fisttpll
repnz
add
mov
in
gs
ds
jnp
stos
jecxz
arpl
lea
icebp
sahf
iret
js
stc
fwait
jnp
mov
repz
cmp
add
loop
iret
xchg
dec
jbe
adc
out
fisttpll
loopne
pop
xor
jnp
call
inc
cmp
mov
sub
jnp
xchg
adc
push
andb
jnp
pop
cmp
xlat
lods
inc
dec
adc
sti
clc
mov
leave
pop
dec
pop
imul
ror
addr16
push
jnp
lret
mov
in
lock
sarl
xchg
in
repz
stos
and
call
push
ficompl
mov
xchg
or
aad
out
inc
jnp
xchg
mov
xchg
jnp
cmpsl
repz
and
pushw
pop
imull
jnp
cmovae
loopne
jns
pushf
dec
out
test
cmp
fisttpll
mov
pop
push
lock
lods
cwtl
mov
movl
jnp
cmp
add
sbb
pop
popf
outsl
ss
xlat
pop
pop
lock
dec
dec
in
ret
jnp
ret
sti
shrl
pushf
sub
mov
push
mov
xor
jnp
ret
fwait
sbb
inc
push
stc
xchg
sub
and
cmc
mov
or
scas
sbb
fs
jnp
jmp
pop
lods
imul
rclb
cmp
jnp
int
pop
mov
sar
jnp
or
jns
sub
inc
cmpl
xor
sti
pusha
mov
push
int
jnp
mov
xlat
jae
jg
mov
lds
inc
sbb
xchg
pop
and
test
aam
and
aad
cmp
adc
mov
jns
pop
fidivl
pop
cld
jnp
jp
dec
lods
icebp
jnp
hlt
jns
mov
fidivrl
mov
jle
sbb
inc
cld
jae
loope
and
mov
cwtl
or
inc
jnp
xor
sub
mov
or
popf
cwtl
jb
mov
dec
pop
pop
add
mov
add
js
test
xor
outsl
aam
inc
shll
mov
pop
inc
or
ficompl
jnp
imul
push
push
pop
cmp
dec
and
inc
lret
lahf
push
jnp
pop
stos
cmp
mov
sbb
repnz
dec
stos
xchg
cmp
stc
pop
sub
pop
mov
in
add
stos
and
jnp
out
cmp
cwtl
mov
push
out
and
imul
fcomps
sbb
mov
pop
push
stos
jnp
mov
mov
sub
inc
imul
cmp
inc
pop
dec
outsb
notb
push
je
mov
or
addl
jp
or
mov
xor
mov
add
aaa
xor
cmpsl
push
loop
mov
aas
sub
mov
jnp
xchg
push
sub
jle
sbb
jae
mov
xor
loop
mov
outsb
clc
outsl
mov
mov
jle
lcall
jae
js
add
push
mov
jp
jnp
cmp
add
fs
cld
loop
aas
fstpl
fwait
cmp
mov
sbb
mov
call
cltd
sbb
jg
stos
dec
or
push
jo
xlat
aaa
out
imul
stc
pop
adc
push
in
cmp
add
and
repz
xor
sub
xchg
jns
jnp
mov
stos
sbb
cwtl
pop
fcomi
mov
dec
mov
ja
insl
lret
pop
and
fisubl
dec
outsl
mov
dec
ljmp
jp
rorb
mov
jnp
pop
mov
jnp
or
jmp
mov
push
loop
mov
mov
popf
enter
xor
ja
xchg
dec
push
jns
jnp
test
cmp
imul
xor
push
pop
lods
jbe
jnp
mov
cmpsb
mov
test
popf
adc
xchg
jnp
inc
inc
mov
jp
cmp
add
push
insl
test
xchg
shrb
and
pop
ja
add
lods
push
adc
cmpsb
in
fidivrl
sahf
ljmp
out
dec
push
leave
loope
sti
ror
pop
ja
push
les
push
repnz
xor
cli
aas
outsl
insl
xchg
push
lcall
fwait
das
mov
mov
jmp
aam
and
stos
cmp
icebp
xor
sbb
jnp
in
dec
imul
and
xlat
pusha
jnp
cwtl
sbb
xchg
dec
in
cld
jnp
pushf
push
mov
jnp
dec
lods
fimull
xchg
das
push
jnp
cmpsb
fstl
cmc
push
push
subl
adc
pusha
hlt
or
cmp
mov
xor
inc
xor
dec
xor
lahf
mov
jb,pn
jecxz
imul
pop
inc
mov
mov
jne
add
mov
mov
pop
mov
fisubrl
shrb
sub
jae
mov
sarb
pop
lcall
cld
insl
pop
mov
lret
data16
and
lahf
pop
inc
out
mov
jns
imul
outsl
orl
movsb
push
jnp
mov
or
sub
inc
jnp
inc
stos
ja
js
mov
lock
rcrl
jp
mov
arpl
js
pusha
imul
xor
sbb
out
cltd
lods
adc
jnp
test
ret
jmp
xor
insl
jecxz
cmp
jnp
xor
stos
mov
adc
cmpsl
xchg
fidivs
clc
sahf
mov
sbb
roll
add
or
jnp
ljmp
cmpb
je
mov
loop
adc
inc
jno
call
imul
pushf
jae
xchg
jmp
mov
and
cmp
inc
push
jnp
mov
mov
les
mov
xor
jnp
in
push
cli
xchg
ja
mov
je
mov
push
push
jnp
adcl
add
pop
jnp
xlat
in
lea
and
and
add
sbb
inc
cmp
lcall
dec
test
mov
out
aam
sbb
fmul
jnp
add
stos
int
pop
jb
sbb
or
testb
ja
pop
sbb
or
adc
mov
jns
fwait
add
sbb
sub
jnp
and
lret
cltd
cmpsl
inc
insl
cmp
xlat
adc
das
outsl
jnp
out
xor
mov
push
cmp
cld
movsl
dec
jge
out
popf
cmp
or
ss
pop
fwait
mov
xchg
xlat
sub
insb
or
popf
fisubl
inc
jae
imul
inc
mov
jl
jnp
adc
sbb
stos
cmpsl
sub
out
mov
cmp
jae
je
les
mov
push
fisttpl
pop
cmp
int
sbb
or
loop
orb
lock
jnp
xor
cwtl
jmp
cmp
mov
inc
jnp
mov
jbe
jb
and
sbb
cmp
and
xchg
movsb
sub
std
cmpsb
mov
insl
or
cmp
ja
pop
mov
lret
les
icebp
dec
and
add
sub
jae,pn
push
cmp
add
pop
enter
xchg
push
sahf
mov
or
imul
js
jp
fs
jnp
cmp
into
decl
jbe
scas
jae
push
int
ret
lret
lock
xor
add
push
jnp
loope
cli
test
jae
jnp
aaa
test
inc
sbb
dec
mov
pushf
and
jne
lret
pop
shl
mov
cmc
jle
push
andl
mull
fisttpl
mov
imul
ja
adc
outsl
fcomps
jnp
js
dec
shl
jae
mov
outsl
or
cmpsb
mov
add
test
push
lea
imul
lods
stos
adc
and
scas
push
mov
cmp
mov
sub
jnp
daa
fbld
pop
sar
sbb
cmp
mov
cmpsb
cmpsl
cwtl
sbb
hlt
cmp
jns
loopne
dec
lods
ss
xchg
imul
push
ljmp
test
mov
stos
std
or
pop
jo
and
pop
rcrb
mov
imul
cmp
lret
daa
mulb
lret
jns
ss
cmpb
push
into
xor
jnp
mov
inc
in
jb
push
nop
cmp
or
jne
adc
fstps
jnp
clc
cmpsb
jae
mov
jecxz
mov
jnp
ljmp
jnp
pop
cmp
aaa
hlt
sub
xor
lcall
into
pusha
outsl
jp
cs
jnp
notl
in
adc
and
js
sbb
test
xchg
outsl
cmpl
sub
pop
lods
mov
imul
bound
in
stc
mov
outsl
out
cmp
adc
mov
test
rorl
aaa
ret
jnp
es
sub
je
in
jnp
push
hlt
adc
pop
xlat
cmp
sti
cmp
jnp
push
shrl
stos
inc
nop
jnp
sti
sub
jmp
outsl
or
jne
dec
jnp
loop
in
icebp
out
in
jnp
std
rorb
dec
clc
mov
call
push
pop
fldenv
dec
push
mov
js
cli
sbb
inc
pop
sbb
sahf
arpl
outsl
jnp
fistpl
jbe
out
lret
imul
ds
adc
je
xor
cmp
mov
and
push
scas
jnp
push
adc
xchg
cmpb
mov
xor
fsubr
add
lahf
sbb
xor
orl
movsl
in
sub
mov
or
sbb
cmpl
adc
bound
or
cmc
pop
fidivs
inc
sbbl
ja
in
dec
ja
icebp
loope
pop
ss
fdivrs
cmp
mov
fidivl
xchg
jle
pop
jnp
add
pop
mov
and
pop
sub
bound
cwtl
repz
xchg
cs
jmp
out
inc
pop
or
lahf
cmp
pop
jae
ret
or
icebp
lds
and
adcb
jne
mov
jnp
movsb
xchg
fists
pop
fcoms
push
pop
push
jnp
mov
das
inc
mov
outsl
jnp
out
mov
pop
adc
dec
rcr
add
fiadds
imul
sub
rcrl
insb
dec
xchg
int3
xor
dec
dec
push
pop
insb
adc
mov
push
mov
xor
mov
xchg
jnp
lahf
lret
int3
sahf
mov
or
stos
or
jnp
xchg
xor
data16
int3
arpl
out
xchg
jb
lds
repz
jp
jecxz
fisttpl
jo
stc
ljmp
cli
bound
jae
lods
pop
dec
sbb
enter
neg
jnp,pn
jecxz
add
xchg
pop
push
lret
addr16
or
jnp
test
add
sub
fsubp
int3
jnp
mov
shrl
sub
push
jg
aam
dec
test
mov
mov
sub
sbb
sbb
ss
imul
xor
sub
fwait
adc
jnp
inc
and
jnp
inc
adc
jae
popa
imul
cli
inc
sti
pop
push
jne
repz
mov
sub
into
cmp
call
mov
jnp
inc
lods
daa
int
popf
mov
cmpsb
dec
rorb
push
sbb
lea
std
in
cvtpi2ps
jnp
mov
pop
pop
cmp
xchg
mov
dec
inc
jnp
adcl
push
inc
pop
jb
int3
xor
mov
jnp
jl
in
mov
out
jnp
js
popf
inc
scas
xor
jnp
ljmp
imul
xchg
mov
pop
and
cmc
out
aad
jnp
sti
pop
divb
jno
stc
jnp
rcrl
daa
jnp
gs
adc
imul
dec
stc
and
in
pop
push
dec
aaa
ret
adc
sbb
movsl
jnp
xchg
mov
sti
fisttpl
lock
sbb
sub
insb
ja
pusha
rcrb
es
ret
or
push
aad
nop
xchg
stos
test
mov
in
das
sub
xor
jae
pop
cmpl
popa
xlat
cmc
pop
jno
dec
or
adc
push
loope
cmp
iret
aam
les
jnp
inc
sub
cmp
xchg
mov
icebp
jnp
jae
mov
outsl
pop
notb
jo
jnp
les
lea
aam
stos
mov
mov
mov
cmpsb
mov
mov
aaa
xchg
cli
sub
xchg
pop
mov
pop
mov
nop
jp
out
and
push
jnp
sbb
xor
adc
sbb
inc
pop
shlb
daa
stc
outsl
jmp
jnp
or
call
pop
push
js
xchg
ds
sub
sub
xchg
loope
xor
paddusb
icebp
mov
push
cmp
mov
or
inc
push
stos
cmp
and
sbb
inc
add
adc
int3
dec
pushf
xor
out
jnp
stc
sti
es
mov
push
cmp
jbe
inc
add
jnp
inc
test
jne
aaa
sub
into
xchg
fdiv
xchg
jnp
mov
clc
jmp
sub
lret
cmc
jp
fwait
xchg
cmp
nop
sti
cmp
pop
outsl
add
daa
lret
ja
xchg
ds
sbb
data16
fstpt
daa
sti
mov
aam
ds
inc
jno
cmc
fucomip
pop
dec
mov
jnp
stos
push
xchg
call
mov
xor
js
call
jnp
and
mov
cwtl
xchg
repnz
dec
stos
pop
fidivl
lret
jnp
jb
iret
sbb
ja
filds
das
jecxz
mov
repz
pop
sbb
out
outsl
lock
imul
jnp
jge
roll
jnp
lods
lret
pop
negl
sub
repnz
enter
cmp
scas
push
mov
add
sub
cmp
jg
das
dec
pop
enter
push
dec
jnp
mov
or
scas
daa
loopne
lods
pushf
out
ja
movsb
sar
call
cld
jae
shrl
mov
xor
adc
mov
in
sbb
jnp
pushf
fwait
repz
mov
jnp
cmp
push
daa
sub
dec
pop
mov
xchg
xchg
repnz
sub
xlat
adc
xor
push
cmp
push
pop
repz
sub
lods
insl
shll
sbb
int3
dec
enter
pop
inc
push
xchg
xlat
jg
push
daa
inc
lods
pop
jbe
jle
out
movsl
cmp
mov
fwait
cmc
jns
xchg
fidivrl
repz
outsb
lock
jnp
cwtl
movsb
cmc
repnz
jge
stos
rorl
mov
mov
inc
push
dec
das
push
jnp
mov
push
push
js
push
imul
test
out
andb
int
fs
sbb
sbb
jbe
das
jnp
xor
lods
clc
sbb
dec
xchg
loopne
ss
mov
mov
shrb
xchg
mov
jnp
or
push
sbb
pop
jnp
pop
push
sub
in
aam
movntq
cld
xor
outsb
push
mov
sbb
xorl
stos
das
xor
jnp
arpl
pop
add
cs
enter
mov
mov
addr16
arpl
mov
adcb
pop
jnp
ljmp
sbb
jnp
movsb
jl
scas
aaa
sarb
xchg
jbe
outsl
xchg
jns
xchg
cmp
scas
mov
outsb
add
daa
jbe
mov
push
fldcw
dec
xlat
sbb
adc
lds
ja
divb
dec
testl
xlat
mov
xchg
inc
mov
adc
push
div
insb
xchg
stos
cmovge
jnp
pushf
insl
loop
or
rcrb
xor
sub
mov
or
pop
pop
idiv
xchg
dec
shlb
outsl
sbb
or
fmull
imul
sbb
pop
and
jmp
xchg
lods
fidivrl
push
jmp
mov
std
or
jnp
fwait
js
mov
inc
inc
or
jl
insl
ret
ljmp
leave
hlt
aas
jnp
lods
imul
pop
fdivr
add
jmp
js
and
mov
fwait
xchg
fldenv
push
sbb
xchg
dec
or
dec
mov
popa
fucomip
into
jo
leave
xchg
mov
adc
stc
xchg
insl
mov
jnp
mov
lret
or
sbb
dec
mov
sub
mov
fidivrs
aam
jp
stos
xchg
jnp
mov
out
jnp
pop
adc
or
cmpsl
in
inc
mov
scas
negb
or
or
shll
push
push
imul
cmc
enter
jge
mov
push
fmulp
inc
jmp
sub
jnp
aam
idivl
int
xor
imul
imul
pop
dec
sti
cli
pop
jns
inc
mov
jae
jbe
daa
inc
jo,pn
sub
xlat
lods
outsl
aam
sbb
mov
sub
jecxz
xor
mov
mov
jnp
inc
dec
ret
or
hlt
and
push
or
and
outsl
xchg
xchg
dec
xor
dec
pop
jl
stos
mov
call
call
fsubl
aaa
add
jnp
loop
shl
ljmp
mov
and
lcall
jnp
add
xchg
xor
cmc
dec
jbe
scas
xchg
dec
add
cld
in
sbb
jnp
push
lock
cli
sub
jnp
sub
mov
sarl
adc
aaa
mov
lret
out
lret
outsl
inc
push
pushf
mov
sub
jp
out
cmp
xchg
daa
and
aam
jnp
stos
flds
xchg
mov
notl
hlt
or
arpl
imul
mov
xchg
imul
js
dec
jmp
xchg
jnp
hlt
cmp
fisubrl
sbb
fwait
mov
repz
les
jnp
push
push
mov
leave
mov
jae
in
xchg
sub
je
mov
cwtl
std
mov
jnp
sub
xchg
sti
xor
mov
mov
adc
mov
das
popa
xchg
mov
jnp
dec
mov
packsswb
and
sahf
out
sarl
pop
cmc
dec
push
lds
jnp
into
xchg
xor
cmpsb
jno
cmp
fwait
imul
mov
sub
outsl
shrb
mov
loopne
adc
pushf
jnp
shll
in
loop
jnp
mov
xchg
jnp
cwtl
and
mov
jb
or
xchg
and
sbb
sar
call
jmp
sahf
imul
push
jmp
adc
in
add
mov
jnp
test
lock
lods
jnp
dec
mov
lods
ficompl
jnp
mov
lret
dec
ljmp
cld
lods
in
sub
outsl
jnp
pop
jne
cmp
jns
push
xchg
mov
mov
inc
or
fucomi
jnp
xor
lods
js
lods
sub
imul
imul
inc
sub
mov
and
mov
jle
jb
mov
or
stos
ret
sub
cli
lds
adc
mov
test
jmp
cmp
imul
insb
and
push
inc
cld
out
hlt
scas
fnstsw
jg
cmp
jnp
aad
jo
subl
into
mov
jae
jle
pop
stos
jnp
rcl
jl
ret
sahf
icebp
stos
test
sbb
jae
ljmp
mov
inc
stc
stc
icebp
inc
mov
dec
jno
fisubl
aam
sbb
mov
jno
mov
lock
xchg
cs
jbe
pushf
push
fdiv
lods
push
outsb
jnp
mov
testl
sbb
stos
lret
ljmp
out
adc
lods
cld
jnp
addr16
or
cmp
popf
xchg
sub
jnp
ss
popa
sub
and
lret
sub
jae
das
outsl
add
pushf
xchg
fiaddl
jnp
mov
xchg
jle
in
lret
shrb
jnp
test
fistps
out
loop
add
jnp
outsl
clc
daa
adc
mov
sub
sbb
subl
mov
js
lahf
dec
lret
pop
jne
xor
repz
push
in
test
jnp
mov
jg
sbb
inc
fimull
pop
cld
repz
jnp
lods
add
stos
jnp
pop
push
or
pop
cmovs
xchg
dec
mov
stc
out
sub
sahf
jae
aaa
out
lods
imul
mov
in
xor
test
and
dec
or
xor
sub
jne
mov
xlat
ja
push
dec
jnp
lods
fwait
insl
fiadds
sbb
xor
and
je
andb
sbb
dec
dec
lret
mov
hlt
jb
mov
insl
outsl
mov
test
or
jo
pop
fstps
mov
lea
lcall
and
hlt
out
sub
cmp
mov
pushf
lret
cmp
into
xor
cmp
lods
jnp
pusha
idivb
call
and
rorl
imul
ss
in
fidivrl
jl
fxtract
mov
pop
jnp
adc
cld
movsb
adc
test
cmp
xlat
jnp
das
lret
dec
lods
jnp
mov
popf
dec
repz
jmp
add
loope
pop
insl
sub
lods
push
sbb
stos
mov
pop
int3
push
stos
in
rorb
jnp
jns
sub
cmp
xor
cli
mov
call
cmpsb
rcrl
jnp
push
repnz
jnp
dec
mov
insl
sti
lock
cmpsl
mov
jae
jmp
add
mov
jnp
mov
std
mov
mov
push
mov
in
mov
jnp
shrl
outsb
xchg
clc
sbb
push
out
scas
es
adc
mov
jnp
and
ja
fcmovnbe
dec
xchg
movsl
adc
outsb
ss
cmp
iret
jge
gs
cmpsl
stc
lcall
xor
jnp
daa
mov
adc
xor
jnp
hlt
arpl
fistl
jnp
or
dec
push
xor
push
int3
cmp
fcmove
mov
sub
jae
dec
adc
jnp
lret
xchg
add
push
xchg
jnp
sub
fisubrs
out
sbb
aaa
icebp
sbb
adc
jg
sub
dec
adc
je
xor
insb
out
mov
mov
or
jnp
mov
pop
adc
sti
jnp
jp
gs
leave
movsl
adc
jnp
orl
jnp
neg
jge
loopne
jnp
push
mov
cmp
xor
inc
or
xchg
insl
jnp
push
mov
repz
cmpsb
jl
ds
sub
cmp
in
mov
mov
jnp
jae
push
sysenter
jnp
or
push
pop
mov
jnp
fbstp
sbb
and
pop
dec
or
pop
insl
lret
gs
bound
mov
test
movsl
std
add
sub
jno
jge
adc
pop
push
jnp
gs
lods
repnz
clc
or
loopne
jnp
mov
repnz
push
mov
cmp
icebp
out
mov
xor
jp
loopne
mov
notl
nop
inc
arpl
jnp
jne
or
fnstsw
sub
mov
das
mov
int3
mov
inc
or
add
sahf
push
jnp
push
scas
mov
ja
in
push
push
mov
push
inc
sub
adc
mov
or
test
jecxz
pop
jae
adc
es
and
je
call
mov
jae
stos
imul
sahf
jnp
cmc
scas
loope
mov
cmp
popa
sub
ljmp
jl
roll
mov
dec
orb
jnp
mov
jae
lret
dec
cmpsb
jp
cmpsl
jge
imul
mov
and
mov
jae
lods
push
push
dec
out
sub
cmp
clc
pop
imul
push
lods
jp
cmp
jb
or
negb
xchg
cmp
mov
jle
dec
scas
jne
pusha
sbb
into
hlt
mov
adc
sbb
mov
sbb
lods
pop
xchg
cmp
jbe
into
dec
add
pop
and
mov
je
jnp
inc
push
mov
mov
xchg
clc
cmp
insb
stc
jnp
cwtl
mov
loopne
add
jp
pop
jecxz
shll
mov
test
rcrb
fcoms
add
mov
jle
jnp
mov
icebp
cs
push
jnp
sub
or
inc
repnz
jnp
pop
outsl
cltd
jle
or
in
mov
push
es
add
nop
stc
sbbl
pop
inc
mov
insl
push
mov
sbb
mov
roll
xor
pop
ret
jne
loope
out
fs
jecxz
mov
jnp
cs
in
mov
in
jnp
hlt
inc
or
xchg
jne
mov
idivb
sub
inc
jno
sbb
jnp
push
ss
dec
sbb
or
fisubl
sub
into
loop
lods
cwtl
push
jnp
ljmp
and
push
xor
sub
jnp
mov
out
shl
cli
pop
jecxz
cld
jnp
je
lcall
outsl
stos
out
mov
int
mov
insl
mov
gs
loop
ss
jae
repz
xor
sub
pop
jno
imul
in
fwait
packssdw
jp
aam
repz
pop
push
mov
xchg
ljmp
insl
mov
ja
dec
adc
add
xchg
xchg
jmp
and
sbb
pop
sbb
xor
jecxz
mov
adc
pop
mov
jns
jo
movsb
jmp
jnp
fiaddl
pushf
cmpsl
jae
pop
arpl
repnz
clc
push
jnp
ja
fimull
mov
mov
dec
inc
daa
shrb
mov
jnp
mov
jp
xchg
cmpb
in
cmp
bnd
ja
or
int
xchg
pop
or
stos
xor
xchg
jnp
push
mov
test
jp
xor
pop
push
loopne
imul
jecxz
outsb
push
mov
stos
test
dec
jmp
sbb
adc
js
xor
iret
sti
rcr
loope
add
test
fs
mov
jnp
nop
in
dec
gs
sbb
imul
js
pop
mov
mov
fs
dec
xchg
iret
mov
pop
lret
mov
insl
mov
idivb
out
and
inc
push
jg
sbb
cmc
lds
dec
mov
mov
insl
sti
xchg
jnp
jmp
cmpsb
sub
ja
sbb
push
out
mov
insb
sti
jmp
xor
xchg
pop
scas
jnp
mov
jne
fwait
call
jbe
inc
scas
scas
sti
jb
fs
fidivs
sub
outsl
mov
inc
movsb
sub
lahf
outsb
cmpl
jnp
mov
xchg
mov
jecxz
lods
mov
jb
xchg
leave
or
xchg
je
in
scas
imul
jge
imul
ret
outsl
fcoml
pop
cmp
or
stc
ret
enter
lods
add
lret
and
pop
mov
ret
outsl
pushf
loopne
jnp
mov
push
fists
add
jmp
ja
sbb
cmp
adc
sub
add
sub
cmp
cld
or
idivb
jnp
pop
lock
loop
test
sti
aaa
stc
jnp
cmp
inc
int
scas
mov
xor
ja
mov
fnstsw
dec
jnp
ret
mov
iret
sarl
and
in
int
xlat
and
adc
and
push
mov
aas
ss
pop
lret
jmp
mov
lahf
leave
daa
insb
xchg
mov
aas
jg
or
outsl
fldenv
mov
out
jo
dec
and
mov
sub
jae
in
in
shl
dec
jnp
hlt
and
sbb
sub
mov
cmp
mov
jnp
arpl
and
popa
jnp
imul
cmp
sbb
sarb
jnp
icebp
movsb
aaa
pop
push
rcrb
sar
or
inc
insl
ror
into
cli
xchg
jnp
notl
mov
mov
push
add
add
cs
xchg
mov
imul
loop
mov
addr16
xor
pop
push
enter
adc
test
or
jbe
xor
mov
pop
lret
jae
push
loope
ficompl
sub
push
mov
out
cmp
or
lock
mov
pop
je
ret
dec
ficomps
loop
sub
test
sbb
int3
or
jnp
lods
cld
or
mov
cmp
cmp
gs
movsb
imul
mov
and
or
lods
cli
and
leave
inc
ljmp
jnp
sbb
lcall
gs
out
cltd
lods
lret
bnd
xchg
xchg
hlt
pushf
jo
lods
ret
mov
inc
sti
sbb
mov
or
jbe
ret
stos
popf
or
lret
xchg
dec
loop
xor
mov
inc
jnp
insb
push
fldt
repz
dec
and
insl
jge
xor
scas
jnp
xchg
lret
xlat
mov
cmp
mov
mov
pop
mov
rcll
mov
pop
xlat
fdivp
js
mov
mov
dec
add
insl
jl
sbb
sti
fwait
ja
sub
dec
movsb
jae
or
xor
lcall
mov
and
lods
insl
test
hlt
sbb
clc
mov
fnsave
jae
divb
cmovb
movsl
js
mov
ljmp
int3
lret
imul
push
sbb
or
mull
sbbl
jnp
cmc
fidivrs
mov
bound
movaps
ljmp
xchg
xor
imul
js
mov
mov
mov
jae
cmp
jnp
or
mov
jnp
xchg
jle
or
inc
xor
cmp
xchg
jnp
test
scas
sub
mov
jle
out
outsl
xchg
mov
ret
xchg
fxch
inc
jnp
sbb
push
imul
fs
mov
push
mov
mov
pop
cld
sub
jnp
and
add
jnp
fsubr
mov
inc
imul
icebp
je
outsb
mov
adc
mov
cmpsb
in
mov
dec
mov
inc
jno
fwait
sub
mov
jnp
xchg
mov
pop
jnp
xchg
std
sbb
icebp
dec
xor
stos
testl
sub
outsl
or
call
cmp
pop
dec
jnp
sub
sahf
sti
ds
jno
into
inc
jnp
cmc
or
jnp
cmp
mov
xor
push
insl
ss
xchg
jnp
daa
sbb
test
call
jnp
adc
jmp
cmp
outsl
pop
leave
sub
mov
test
stos
jne
inc
mov
dec
data16
movsl
jae
add
das
jnp
sub
push
dec
mov
xchg
jnp
sti
mov
mov
xchg
cmp
loop
jnp
xor
out
stc
cwtl
sbb
insl
push
jnp
push
dec
jecxz
or
rorl
xor
mov
aaa
xchg
mov
inc
sahf
mov
inc
xor
or
testl
sti
pop
jo
sbb
cld
out
add
pop
test
je
inc
shrb
xchg
jg
pop
fisubrl
ret
push
rol
jns
jnp
sbb
lods
sub
lret
xchg
or
pop
jge
cmpsl
divl
jae
dec
pusha
das
sub
push
inc
std
lods
jne
or
adc
or
lret
jmp
mov
push
dec
dec
jnp
sub
pop
insb
push
clc
sub
in
jne
daa
adc
out
jnp
or
mov
das
xor
cmp
jnp
lret
and
dec
mov
cmc
ds
dec
jne
pop
js
fdivrl
and
mov
jo
fisttpll
insl
in
call
xchg
add
mov
andl
popf
mov
bound
out
cmp
repnz
movsl
je
xor
and
inc
sbb
popf
sbb
xchg
mov
fadd
mov
add
jnp
jle
ss
mov
jnp
pop
push
data16
cld
bound
jns
sbb
sbb
push
pop
sub
or
addr16
rol
push
leave
scas
mov
xor
stos
mov
in
arpl
xchg
add
loop
jnp
pop
js
int
mov
ss
sbb
mov
push
sub
int
jmp
loop
testb
mov
movsb
mov
mov
xchg
test
sub
roll
pop
pop
cmp
or
jnp
bound
mov
jae
icebp
add
mov
xor
fstpl
cmp
adc
enter
mov
jno
jnp
std
mov
ret
and
or
mov
mov
xorl
fsubrl
ret
aaa
fdivrs
stos
icebp
clc
mov
xor
rorb
cwtl
loop
aaa
cmp
sbb
mov
inc
push
in
out
iret
sbb
mov
mov
fistl
jb
pop
imul
mov
mov
insl
lods
sbb
mull
aas
insb
jns
xor
sub
loope
insl
leave
jnp
inc
xchg
fs
pusha
mov
cmpsl
ja
sub
ss
pop
dec
inc
repnz
repz
icebp
shr
sti
adc
jnp
out
xchg
sub
lods
mov
lret
and
push
jmp
enter
out
jae
ret
push
std
lret
and
jnp
sarl
cmp
int
in
into
nop
cmp
popf
out
xor
push
mov
jp
or
push
xchg
push
outsl
inc
mov
adc
lcall
push
out
inc
xor
xor
cmpsl
cmp
insl
jne
femms
mov
cmp
mov
mov
mov
lods
or
bound
fidivrl
sub
inc
xchg
or
push
jnp
insb
lods
test
pushf
jnp
or
popa
jnp
pop
leave
mov
jnp
repnz
and
pop
jp
xor
mov
mov
jnp
subl
mov
imul
push
sub
add
pop
cmpb
adc
inc
add
out
clc
cmp
pop
pop
xor
js
xlat
jnp
movsl
out
mov
inc
gs
in
fucomi
aaa
mov
shrl
aas
iret
mov
mov
xchg
rorl
stos
insb
pop
xchg
sub
out
sahf
lret
mov
cmp
aas
mov
mov
xlat
int
in
and
cld
or
mov
insb
mov
mov
mov
sub
push
lds
dec
sbb
je
jnp
shll
jae
sahf
cmp
fwait
aaa
jnp
jmp
call
sti
shl
jae
pop
sub
rep
sub
not
dec
xor
jno
fidivs
xlat
out
or
add
pop
ja
mov
mov
jnp
sbb
push
xor
cmp
fcom
fwait
jnp
pop
repnz
xchg
sbb
insl
imul
scas
cmp
jb
js
mov
fisubl
bnd
add
dec
cmpsl
aaa
sub
sbb
or
jae
es
jnp
cmc
stos
mov
ss
mov
add
lods
frstor
jno
cmpsl
fldenv
sub
sbb
mov
push
in
outsl
movsb
mov
jnp
lods
lock
jnp
mov
sbb
aas
divb
lahf
pop
or
jnp
add
mov
or
xlat
test
sbb
jnp
jge
cmp
cmp
xchg
lret
div
test
cmp
sub
jne
jp
sbb
cmc
scas
repnz
out
sub
jae
mov
fcoml
cmp
jnp
lahf
movsb
fstp
add
xchg
cld
xor
nop
aaa
out
inc
es
js
mov
jle
adc
addl
fwait
mov
dec
mov
sti
addr16
mov
dec
sbb
lods
xor
add
in
mov
jnp
and
push
push
push
aaa
dec
jnp
fldcw
clc
sbb
jmp
cmpsl
arpl
test
push
js
lods
jnp
lret
xchg
push
aaa
popa
ret
jmp
stos
add
inc
dec
jnp
in
sbb
or
jno
icebp
lcall
xchg
cmp
rorb
jp
xchg
mov
add
int3
das
clc
xchg
cmp
popf
sarb
cmp
sbb
mov
or
js
pop
jns
fisubrl
in
mov
push
jne
aaa
mov
mov
jecxz
insl
dec
test
jnp
cmp
daa
data16
dec
mov
cmpsl
jne
jp
mov
aaa
mov
aad
lods
mov
sub
dec
or
pop
movb
fs
repz
call
xchg
jp
test
xchg
and
sti
sbb
mov
or
dec
pop
mov
test
xorl
pop
out
dec
and
aad
popa
daa
ljmp
cs
out
lods
pusha
or
mov
sub
mov
inc
popf
aaa
lock
adc
es
sub
mov
pcmpeqd
outsb
aas
jne
add
mov
test
jnp
xchg
ljmp
faddl
sahf
ja
mov
imul
stc
loope
lods
pushf
je
scas
jnp
mov
mov
popf
dec
dec
push
jle
adcb
sbb
shlb
pop
sub
push
enter
out
fnstenv
lds
stos
sub
xlat
jecxz
push
enter
pop
loope
inc
dec
loop
insb
jnp
dec
sahf
outsb
scas
int
dec
mov
dec
xor
xor
sbb
cmp
gs
fcmovb
jae
jnp
out
incl
xchg
or
sbbl
into
add
cltd
imul
cmp
xor
out
xor
test
arpl
out
fs
jnp
hlt
in
inc
sarl
popa
cmp
lea
ret
sbb
sti
jne
xchg
mov
bound
cmp
jnp
inc
mov
push
call
cmp
jae
pop
clc
fiaddl
in
jno
lock
xchg
xor
mov
movsl
mov
pop
sub
sub
cmp
fisttpll
sbb
lods
inc
scas
jb
pusha
mov
test
jbe
pushf
aas
lea
pop
in
leave
mov
jnp
and
push
mov
aad
wrmsr
leave
or
daa
jnp
cltd
sub
push
push
jnp
xchg
jmp
std
xor
xchg
sbb
sub
push
cli
sub
mov
pop
cmp
in
jnp
add
mov
push
jnp
xlat
mov
inc
enter
cmp
scas
push
fs
fwait
push
sbb
sub
out
pop
xor
lods
sub
outsb
aas
in
mov
js
into
xor
xchg
adc
push
lret
sahf
sbb
jnp
push
hlt
mov
mov
mov
movsb
mov
and
outsl
daa
cli
or
call
js
xchg
mov
pop
xor
movsb
push
jnp
xorb
imul
jnp
xor
xchg
cmc
sar
adc
sbb
arpl
out
add
jnp
pop
xchg
mov
cli
jbe
call
inc
sbb
mulb
jnp
or
mov
js
dec
add
ja
out
jecxz
xchg
jnp
sbb
and
mov
push
sub
cltd
mov
push
push
aas
loope
mov
sarb
cmc
fs
and
mov
mov
js
mov
mov
outsb
scas
cld
jnp
in
add
sub
jecxz
push
ja
mov
jnp
lods
fisubl
sbb
fnstcw
xlat
sbb
in
xor
pop
inc
data16
outsl
inc
xchg
insl
cmp
fwait
inc
xchg
mov
inc
mov
jnp
xor
pop
xchg
lds
mov
test
bound
adc
dec
fiaddl
cltd
std
lcall
mov
sub
jnp
adc
mov
cmp
mov
arpl
mov
mov
mov
pop
or
ljmp
xor
jbe
lret
cmp
jae
dec
mov
test
jnp
int3
xchg
lahf
xchg
data16
mov
xchg
pop
mov
ret
mov
jl
stos
mov
arpl
mov
sbb
jnp
mov
mov
in
inc
je
jo
sbb
aad
sub
jae
pop
jae
xchg
shlb
lret
pop
rcll
adc
lods
stc
scas
and
pop
dec
cli
push
or
insb
jp
nop
jnp
bound
movsl
sbb
xchg
das
jl
mov
xchg
xlat
in
mov
jnp
fwait
orl
clc
push
xor
push
shrl
adc
sti
push
loopne
sbb
int
out
sarb
push
icebp
mov
jno
lret
adc
mov
cmp
aas
fwait
sub
xchg
jnp
decl
sbb
mov
xchg
dec
mov
fsts
xchg
int3
int
enter
lods
add
jp
mov
cmpsl
outsl
sbb
add
divl
sbb
bound
sti
mov
inc
adc
or
lock
inc
cmp
negl
scas
lahf
in
add
stos
bound
cli
jnp
adc
pushf
or
pop
jo
or
sub
push
pop
lds
pop
cmp
loop
in
fdivs
sbb
lods
mov
mov
pop
jnp
pop
clc
ja
aas
bound
int
or
add
jmp
stc
in
dec
outsl
scas
xchg
push
cmp
repz
pop
adc
mov
lret
mov
mov
jnp
aaa
mov
jnp
pushf
mov
jnp
cwtl
jbe
test
cs
jnp
pop
test
in
mov
cmp
sub
jnp
filds
js
stc
in
dec
add
add
xlat
jnp
ds
notb
adc
pop
lret
test
insl
jnp
adc
sub
xor
sbb
mov
pushf
push
jnp
loopne
mov
stos
aas
mov
fs
jmp
loopne
les
lock
sbb
cmpsb
clc
testl
mov
outsb
xor
jbe
filds
ret
pop
popa
xchg
add
add
stos
fdivs
int
adc
xchg
cli
jnp
out
ret
push
push
push
jnp
push
aad
hlt
jg
xor
and
sbb
les
jle
mov
sub
and
cli
push
sarb
push
xchg
or
xor
push
aad
mov
shr
and
xor
jge
cmp
mov
jae
mov
jp,pt
es
insl
and
fdivrs
popa
jnp
sti
mov
ja
cmp
test
push
push
dec
push
cmp
mov
into
cld
xor
shrl
adc
push
jbe
loop
ss
adc
jp
jnp
sbb
cmp
mov
test
dec
outsl
push
cwtl
sbb
pop
jno
dec
cmpsb
jnp
aaa
shll
jnp
xchg
push
mov
repnz
loop
std
jo
jnp
jbe
inc
lret
lods
mov
adc
and
dec
sbb
cmpsl
insl
outsl
scas
pop
mov
push
dec
xor
jnp
xor
lcall
icebp
outsl
cs
dec
jne
mov
jnp
cmp
xchg
mov
pop
inc
jnp
in
jne
push
in
mov
sub
ret
cmp
mov
push
out
mov
sub
std
pop
xchg
test
mov
jmp
push
mov
js
mov
push
dec
mov
lods
sbb
or
jae
push
ss
and
xchg
stc
or
mov
pop
mov
sub
fimuls
jnp
jne
sbb
sti
jnp
xlat
or
jbe
dec
shrl
icebp
les
xchg
cmpb
nop
cli
xchg
push
decb
mov
push
pop
jne
mov
sarb
jl
movsb
sti
push
clc
aam
cmp
test
in
jnp
inc
fiaddl
inc
push
scas
xor
fsubs
arpl
jge
pop
jnp
cmp
sbb
push
push
mov
es
fcomps
clc
inc
shll
in
mov
test
mov
cmc
xor
or
cmp
repnz
aam
jg
adc
mov
jnp
inc
xor
loop
lods
sub
pop
filds
xor
aaa
adc
pop
jnp
insl
jecxz
mov
leave
cmp
dec
ret
xor
jbe
loop
jnp
or
mov
call
in
ret
cmp
mov
je
popf
in
and
jmp
cmpl
mov
adc
cmpsb
ja
das
out
rcll
adc
outsb
or
data16
daa
mov
insl
jnp
or
inc
jnp
inc
sti
sbb
clc
mov
addr16
pop
pop
mov
inc
or
xchg
jecxz
inc
lods
push
out
jne
sbb
sbb
popf
pop
dec
pop
mov
je
dec
sbb
in
mov
lret
sbb
js
mov
stos
outsb
mov
pop
mov
fimull
insl
ljmp
jnp
test
enter
roll
les
pop
es
negb
xchg
jo
jnp
push
adc
mov
daa
add
adc
push
es
idivl
aam
jnp
ret
xchg
cmpsb
push
jl
jnp
xor
fisubl
adc
push
push
shlb
dec
xchg
sbb
cs
inc
enter
jecxz
push
in
sbb
cmp
popf
jnp
adc
mov
mov
and
repnz
icebp
mov
loopne
or
dec
bound
push
shrl
mov
xchg
inc
scas
dec
push
test
jnp
xor
in
mov
sbb
jne
cmp
jnp
or
xor
cmp
jnp
fsubr
loopne
iret
in
jnp
sbb
cmp
fwait
imul
adc
dec
out
nop
mov
adcl
ds
aam
jnp
mulb
fxam
pop
jo
mov
or
jo
mov
dec
xchg
daa
scas
hlt
orl
hlt
sarb
insl
mov
jnp
popa
mov
jo
sahf
add
lea
jge
ret
nop
xor
jnp
es
mov
mov
mov
jnp
lock
nop
inc
push
jnp
imul
out
pop
inc
imul
xlat
fstpt
iret
je,pn
jnp
call
dec
into
jnp
push
pop
roll
lahf
cld
in
es
popa
in
push
mov
xchg
cld
jae
pop
jnp
jne
js
cmp
jnp
push
cmpsb
bound
lret
aam
imul
test
adc
sahf
aas
js
mov
xchg
fidivrl
jmp
movsb
movsb
cmpb
adc
fdivrl
mov
in
mov
dec
sbb
dec
in
mov
jnp
mov
jle
xor
call
imul
xchg
fistpl
arpl
push
dec
add
jnp
lock
adc
pop
adc
hlt
mov
arpl
fistpl
mov
movsl
daa
lret
and
cmp
pop
inc
dec
jnp
bnd
lods
xor
std
dec
sub
stos
and
inc
adc
cmp
jp
fldenv
mov
cld
jnp
add
sbb
jnp
mov
cmp
lock
adc
jle
ss
test
xchg
sub
lret
test
jne
and
loope
or
push
fldcw
leave
mov
jnp
cmpsb
mov
mov
push
iret
push
fwait
add
mov
sub
ret
xor
pop
and
das
rorb
mov
push
mov
lcall
cli
fldt
cmp
xor
jne
mov
adc
les
mov
insb
jae
cmp
dec
xchg
add
imul
ret
xor
mov
loop
arpl
dec
xor
cs
cmp
or
mov
pop
rep
scas
shrl
repnz
sub
add
jno
shrl
xchg
jnp
shlb
daa
jnp
jbe
insl
lea
mov
mov
aad
pop
jnp
push
lahf
cmp
in
and
xchg
xor
mov
pushf
loopne
out
stc
and
sub
inc
jnp
xor
cmp
aaa
jae
pop
xor
mov
divb
and
lret
stos
adc
inc
repz
addr16
hlt
js
jns
sub
mov
adc
repz
fists
xor
jp
bound
push
es
sub
cmp
sub
jnp
roll
bnd
imul
int
or
jnp
jp
mov
dec
xor
aad
fidivrl
das
rorl
push
fstps
dec
pushf
jbe
test
push
insb
sbb
jge
dec
jnp
shll
pop
mov
sbb
pop
iret
push
xchg
sub
idivb
xchg
add
cmp
stc
and
adc
jb
jnp
jns
lea
ret
sub
mov
insl
pop
test
es
sub
xlat
pop
in
adc
divb
dec
xchg
or
dec
mov
outsl
push
ljmp
inc
icebp
mov
adcl
stc
cmp
add
jg
mov
mov
or
jb
pop
adc
inc
inc
mov
pop
jnp
nop
lahf
push
cwtl
andl
fs
mov
dec
popf
ja
mov
jnp
lds
repnz
jnp
mul
int
mov
or
sbb
add
pop
movl
fisubs
push
in
sti
dec
jne
adc
fnsave
and
rorb
jne
enter
mov
xlat
jnp
mov
xchg
jbe
jb
or
int
negb
hlt
loopne
xchg
icebp
xlat
sbb
or
or
pop
xor
stos
fwait
nop
daa
mov
call
jbe
loop
pop
xorl
out
loopne
jnp
rolb
movsl
sbb
test
and
xchg
jae
push
jnp
in
add
pushf
cltd
cmpsb
mov
jns
push
in
jnp
lods
adc
cwtl
push
popf
fwait
xchg
xor
cmp
pop
call
mov
push
in
sbb
leave
fbld
movsl
jnp
dec
lret
push
pop
jnp
mov
cwtl
cmp
cmp
jecxz
ds
jnp
lea
mov
mov
mov
adc
xchg
stos
fidivrs
loopne
cmp
sahf
popf
or
sub
out
dec
leave
xchg
addl
jns
std
pop
add
xlat
xchg
jmp
outsb
push
xchg
sbb
bound
call
aas
loop
adc
jb
jnp
inc
pop
mov
jnp
enter
mov
pop
fisttpl
pop
dec
mov
jo
dec
or
jnp
cmp
xor
sub
jmp
mov
mov
pop
mov
int3
jnp
lcall
jo
lods
loope
xchg
in
stc
insb
ja
pop
imul
xor
loopne
outsl
clc
mov
fadds
sti
inc
mov
lahf
and
jbe
adc
adc
jp
or
mov
mov
ds
icebp
imul
dec
mov
rorb
int
jge
mov
bound
push
int3
adc
enter
cmp
mov
aaa
sbb
jnp
cmp
or
push
cli
jnp
push
xor
jp
xor
jnp
and
push
js
in
flds
ja
fisubl
icebp
daa
jecxz
js
cli
sub
stos
jbe
test
jmp
outsl
dec
dec
jnp
adc
sbb
daa
mov
out
pop
int
add
lret
mov
mov
les
cmp
adc
and
push
push
addr16
mov
xchg
jb
mov
jnp
scas
cmc
lret
cmpsb
inc
pop
pop
daa
and
popa
in
fwait
xchg
shl
jnp
cmp
enter
roll
sub
lret
sti
in
out
jnp
and
mov
je
loope
xchg
sarl
sub
inc
jmp
cli
rcr
xor
cmp
jns
fstl
in
sbb
mov
out
pushf
dec
lds
cmp
fildl
loopne
ljmp
cmp
cmp
jae
sub
xor
fwait
mov
insb
aaa
jnp
xor
clc
dec
js
lea
out
call
jb
sbb
lahf
and
jns
int
pop
out
and
cmp
dec
sbb
push
sbb
lds
mov
aaa
jae
ret
jnp
mov
movsl
daa
cmpb
mov
inc
mov
test
sub
adc
sti
jle
loop
mov
jnp
xchg
jae
mov
mov
push
insl
inc
jnp
ss
mov
not
ret
hlt
into
xchg
cmpsb
outsl
out
dec
rorl
idivb
jnp
fiaddl
repnz
std
jnp
cltd
cmp
or
push
mov
ret
xlat
stos
jns
pop
mov
push
test
clc
outsb
outsb
jnp
ret
aam
push
lds
popa
je
shr
dec
fucomip
inc
movsb
jnp
xor
in
push
jnp
ja
clc
shll
mov
xor
lret
cltd
lods
pushf
cmp
mov
jno
jb
xor
data16
lods
outsb
leave
lds
cmpb
jl
cmp
imul
jne
and
push
jnp
fwait
ljmp
push
xchg
les
jnp
test
dec
aad
jg
xchg
dec
out
stos
mov
jnp
mov
jnp,pt
push
sarb
mov
jnp
cmp
jbe
out
daa
jnp
xlat
adc
in
dec
push
mov
mov
inc
enter
movsb
jnp
inc
xchg
stc
add
xor
stos
cs
call
cmp
std
mov
cmp
stc
push
sbb
jnp
jno
or
movsl
test
jb
jnp
mov
push
cs
in
push
cmp
and
xchg
std
jb
cmp
stc
out
add
lods
ss
imul
cli
pop
jnp
in
mov
test
je
stc
pop
scas
negl
lods
sbb
mov
outsb
ret
hlt
fidivrs
mov
or
xor
frstor
jp
sbb
mov
cmp
xlat
pop
pop
out
das
or
inc
fisttpll
out
push
jnp
or
lods
adc
or
aam
test
jecxz
ret
sub
jnp
mov
repz
inc
cmp
add
call
stc
scas
dec
pop
add
testb
out
scas
rolb
mov
mov
popf
mov
jnp
into
subb
or
or
shlb
dec
or
shr
xchg
jg
jl
inc
popf
outsb
add
test
fs
inc
push
repnz
sbb
rcl
mov
push
cli
das
daa
jne
fcmove
clc
in
or
ja
mov
xor
mov
call
cld
and
loop
lcall
shr
jae
mov
jnp
orl
jnp
jecxz
add
mov
icebp
jnp
jbe
sub
popf
jnp
pop
mov
ficomps
jb
jnp
icebp
ret
inc
and
sbb
xchg
mov
aaa
pushf
stc
in
jno
mov
push
ljmp
mov
insl
scas
sub
fdivs
test
aaa
lea
cmp
pop
mov
dec
mov
fdivrl
lea
cmp
pop
jno
inc
mov
aaa
cmpsb
data16
ret
adc
mov
jne
stos
frstpm(287
cwtl
clc
repz
xchg
xchg
fadds
or
imul
idivl
xor
mov
ja
jnp
mov
hlt
dec
jnp
dec
jle
jl
je
imul
movsb
stc
repnz
std
jp
lock
outsb
test
jnp
daa
add
jnp
cmp
or
add
push
cmp
pusha
sub
call
sbb
inc
and
ja
lret
popf
jp
adcl
and
stc
jnp
inc
leave
adc
push
push
xchg
jnp
mov
outsb
stos
mov
or
xchg
sbb
iret
call
pop
or
cmc
mov
fbld
jnp
xor
mov
or
sub
sti
sbb
ret
mov
pop
jbe
cmp
shrb
or
jge
xchg
out
jle
push
cmc
pop
cwtl
popf
xchg
in
sub
pop
and
aad
jns
dec
fisttps
sbbb
ja
addr16
aam
push
jnp
jo
xchg
outsl
mov
xor
and
mov
out
mov
scas
fsubl
jnp
test
mov
xor
inc
es
push
out
cmpb
push
dec
fwait
push
xchg
mov
jp
adcb
ds
out
jnp
and
jbe
xor
jnp
repnz
dec
xchg
ret
dec
and
pop
jb
fimull
cmp
cmc
push
or
fbld
cli
jnp
push
inc
xlat
add
push
int
loope
dec
jae
dec
jne
and
ljmp
jae
fiaddl
pop
into
sbb
add
push
push
sahf
jnp
call
xor
dec
repnz
sbb
push
mov
mov
cmpl
inc
mov
jnp
stos
add
sub
xchg
jae
xor
mov
inc
jb
mov
jnp
xor
in
cmp
jb
mov
jo
dec
add
stc
out
or
iret
outsl
sbb
scas
test
dec
std
xchg
jnp
aad
pop
lret
movsb
jmp
jnp
shr
inc
stc
loopne
pusha
movsb
pop
jnp
aam
add
shll
cmp
jnp
sar
bound
push
cld
mov
nop
imul
xchg
sahf
jnp
ljmp
stos
push
and
dec
sub
push
pop
xorl
jnp
lret
cs
pushf
les
mov
inc
in
pmulhw
mov
loop
mov
cmp
js
aad
sbb
jg
pop
cltd
cwtl
jnp
push
ror
pushf
in
mov
mov
outsl
sarb
cmpsl
dec
call
xchg
jo
mov
test
sbb
push
cmp
inc
add
loope
bound
xor
cmc
pop
xchg
inc
mov
mov
jmp
mov
sub
mov
cmc
sub
jnp
mov
jl
lret
pop
hlt
test
jnp
sahf
ja
ret
jnp
dec
sub
jo
xor
mul
and
cmp
pop
cli
sahf
adc
mov
sti
xchg
dec
sarl
into
lcall
push
jbe
insl
jae
push
xor
aam
lcall
pop
into
int
mov
jno
out
push
jnp
sub
test
mov
loop
push
fwait
clc
cltd
mov
jno
mov
jnp
stos
cmp
push
xchg
xor
jnp
hlt
inc
lahf
ja
sarb
roll
ss
push
pop
jnp
mov
jnp
mov
sub
addr16
cli
icebp
enter
mov
call
fcoms
add
and
cmp
push
rorb
cmpsl
mov
adc
jnp
mov
cmp
cld
sub
jnp
insb
fdivrl
xchg
push
or
int3
out
xor
cmp
dec
mov
jnp
lret
scas
mov
mov
inc
fnstenv
sub
mov
jnp
jb
cmpsl
jne
jg
or
dec
dec
dec
fsubs
mov
jnp
mov
cli
imul
hlt
pop
cmp
outsl
lods
test
jne
adcb
mov
or
cmp
cmp
hlt
movsb
divb
jnp
adc
mov
jle
jno
pop
ret
lods
lods
movsl
jl
mov
cld
or
cli
push
push
inc
stos
lcall
adc
inc
stos
fisttpl
or
jae
jae
push
jb
or
insb
icebp
insl
rcr
daa
xlat
out
decb
jnp
nop
movsb
cmc
testl
jg
add
mov
sbb
je
leave
hlt
push
fdivrs
fstpl
mov
or
xor
jns
call
jnp
add
dec
jnp
out
subb
jnp
cmp
mov
nop
push
pop
jb
out
fidivrs
pop
popf
inc
pop
mov
cmpl
jle
pop
mov
into
jnp
stc
mov
repz
mov
dec
daa
aad
out
pop
xchg
fadds
ret
andl
sub
fidivrl
and
daa
fidivrs
dec
insb
jnp
jg
sub
cmc
jnp
stos
jbe
cmp
jnp
out
and
lahf
pusha
jnp
push
sbb
jae
mov
or
das
in
pop
sarb
dec
lea
add
jne
lds
cli
jnp
test
pushf
pop
in
dec
mov
jp
jns
fnstcw
pop
pop
cmpsl
sbb
lret
ret
push
jnp
std
xchg
sub
push
mov
scas
xor
repnz
lcall
pop
xor
pop
dec
jnp
in
xor
mov
je
mov
xchg
mov
pop
sub
es
jp
cmc
sub
cmp
ja
fisttps
test
mov
mov
jnp
stos
sbb
xor
repz
or
fldenv
xchg
jno
lcall
clc
pop
sub
sub
dec
adcl
cmpsl
jae
or
mov
and
jle
xchg
xchg
xchg
call
dec
sub
xor
or
add
mov
jbe
ljmp
and
scas
mov
insb
xlat
imul
bsf
loope
notl
in
insl
cmp
pop
fdivs
pop
in
mov
mov
test
mov
bswap
cld
pop
xchg
sub
push
pop
mov
or
adc
mov
mov
sub
popf
insl
hlt
jnp
and
mov
or
cmp
je
dec
jns
mov
sti
push
in
in
push
jae
loope
repnz
xchg
jae
lcall
sub
aam
insl
add
push
cmc
push
push
fidivrs
lret
jnp
mov
sub
push
in
jnp
outsl
dec
mov
inc
push
sub
jecxz
outsl
pop
xchg
cwtl
push
repnz
pushf
or
jb
sbb
sub
push
dec
xor
sbb
clc
jae
adc
sbb
mov
test
outsl
movb
jnp
out
movsb
lret
lods
cmp
add
or
jnp
add
pusha
pop
cmp
cli
jnp
int3
pop
cmp
and
adc
repnz
jb
jnp
enterw
or
cli
push
ss
mov
jno
mov
mov
xlat
jae
mov
jnp
mov
dec
push
xor
lds
fsubrl
dec
imul
mov
insb
sbb
data16
filds
fistpl
inc
call
in
and
shl
es
and
jno
aad
dec
jg
push
jnp
push
neg
sub
or
shll
mov
xor
ljmp
call
xor
or
jle
scas
sub
or
fnsetpm(287
xchg
jnp
or
lret
ret
jns
in
adc
test
mov
arpl
dec
dec
aas
and
repnz
loope
cmpb
data16
stc
xchg
mov
jg
add
in
xlat
jbe
mov
cmp
loop
jne
lock
mov
outsl
icebp
andl
jnp
test
loop
sbb
lret
mulb
adc
mov
test
mov
fdivrs
xchg
dec
outsl
jmp
sahf
addps
fsubs
cmp
test
cli
jnp
xor
dec
sbb
gs
jp
mov
xchg
out
or
or
mov
ja
lods
insb
xchg
testb
imull
arpl
sti
fistl
mov
cmc
jnp
or
nop
inc
mov
insb
push
pop
fcoml
jno
and
mov
inc
push
mov
call
repnz
xchg
jae
movsl
mov
mov
fidivrs
lock
das
sbb
lods
pop
jnp
ret
or
fnstcw
cmp
adc
pushf
sbb
sbb
lret
add
jne
cmpsb
jbe
push
jnp
sahf
jp
xor
lret
dec
mov
push
or
outsw
out
cmc
pop
jnp
ja
mov
jnp
push
xchg
jnp
cwtl
pop
cmp
jnp
mov
push
fstpt
mov
and
mov
inc
jg
dec
insl
mov
xor
jnp
out
push
mov
or
dec
cmp
scas
aas
inc
cwtl
lods
cmp
jnp
stos
daa
nop
add
jg
dec
sub
movsb
jo
in
jnp
and
mov
cmp
dec
mov
cs
ret
js
xchg
cltd
orb
add
int3
test
sbb
jp
xor
imul
jnp
in
dec
pop
mov
sub
cmp
shll
aad
jnp
cmp
mov
mov
mov
sub
lods
xchg
jnp
fldcw
push
xchg
jnp
leave
pop
out
push
jp
jnp
dec
and
dec
rol
jnp
xchg
aaa
ja
xchg
cmpb
aad
add
test
cmc
test
pushf
ret
sti
cmp
pop
mov
add
mov
iret
inc
lods
jnp
aaa
cmp
cmp
cmp
mov
cmp
fidivrs
dec
sub
lods
imul
pushf
outsb
into
xchg
das
rcrl
gs
cs
loop
pop
jne
loopne
sti
xor
adc
out
in
jnp
pop
enter
lahf
mov
mov
dec
xchg
sub
rcrb
adc
fstpt
outsb
sbb
xchg
mov
jnp
repz
icebp
mov
pop
pop
imul
sub
or
std
jle
rcll
jae
sbb
dec
jnp
arpl
enter
mov
pop
sbb
inc
sbb
or
loopne
sub
sbb
outsl
sar
xchg
add
or
adc
ja
push
lods
inc
sbb
jno
stc
fdivs
or
lret
sub
inc
lret
mov
adc
pop
sti
scas
mov
sbb
insb
lahf
out
xor
pop
clc
test
jnp
out
cmp
push
ss
out
outsl
cld
fcmovb
cmp
cli
jg
push
inc
lcall
sbb
sub
jnp
popa
pop
cli
bound
or
inc
xchg
adc
lods
insb
out
jnp
dec
add
fdivrs
gs
inc
mov
push
dec
ret
jp
ss
movsb
pop
jnp
xchg
aam
xchg
clc
dec
outsl
shl
mov
mov
fprem1
pop
jnp
inc
adc
or
iret
mov
ljmp
leave
aam
xlat
adc
mov
or
out
cmp
das
pop
sbb
mov
sarb
gs
jnp
negb
pop
sbb
pop
bound
mov
or
xor
popf
adc
sub
pop
or
xor
fwait
pop
sbb
or
jnp
sti
xchg
repz
push
pop
jnp
jns
add
mov
test
scas
cmc
stc
out
jnp
mov
mov
xlat
mov
scas
subl
mov
jnp
bound
dec
dec
mov
daa
jnp
sarl
sti
mov
clc
in
pop
stos
cmc
bound
jnp
inc
sub
lret
cmp
fwait
sti
mov
xor
xchg
int3
xor
cli
mov
das
inc
dec
adc
sub
adcl
out
jb
roll
jnp
repnz
xchg
shrl
push
js
cs
cmp
xchg
xchg
mov
pusha
jnp
jno
cli
ja
js
mov
subb
lret
subb
jae
shr
sub
adc
sti
test
cmp
mov
lahf
sub
cmp
add
jp
je
jnp
xchg
mov
loop
and
sbb
mov
push
jnp
dec
cmc
fsubrs
loope
jnp
dec
out
lods
pop
fiaddl
push
das
push
jnp
sub
add
stc
pop
lods
out
mov
rcr
jnp
movsl
ret
pop
cmp
mov
push
push
or
xor
imul
test
and
ja
jl
bound
sarl
call
stos
dec
cmp
negl
lret
jb
bound
cmpsb
and
repnz
imull
xlat
lods
or
dec
imul
cmp
mov
test
pop
push
jnp
aaa
mov
loop
popcnt
xchg
adc
sarb
jg
xor
push
pop
sbb
cmp
pop
mov
sti
jnp
jo
nop
pop
mov
add
and
dec
mov
fimull
mov
push
mov
dec
jns
and
jmp
pusha
js
mov
jnp
jge
loop
clc
sti
add
inc
lret
jnp
mov
mov
jnp
out
push
cmp
adc
and
dec
push
xor
mov
pusha
jno
xchg
xchg
imul
cwtl
outsl
cmc
lods
jnp
fmuls
cs
jnp
add
dec
sbb
inc
and
pop
cmp
dec
pusha
ret
pop
rorb
jbe
out
push
mov
or
jnp
in
add
neg
sbb
jb
test
or
sub
add
imul
jae
fnstenv
sbb
jnp
cltd
sub
int3
pop
jns
stos
out
cmp
sti
jg
test
inc
push
add
or
push
jnp
jns
push
in
lret
aam
fneni(8087
push
into
sti
jnp
sub
xchg
push
jno
xchg
enter
into
cwtl
push
es
and
insb
push
ret
push
dec
xchg
jnp
cmp
ret
or
fdivr
sub
mov
testl
mov
stc
jnp
cmp
inc
adc
cmp
cmc
mov
fwait
mov
js
fcmovnu
test
les
stc
test
andb
aaa
orl
jnp
mov
xchg
sbb
dec
or
clc
in
push
lods
out
pop
aaa
mov
cmp
fnstsw
sub
inc
push
aaa
or
xlat
enter
jnp
or
sub
in
dec
xchg
bound
mov
jb
cmp
push
in
or
dec
mov
pop
mov
movsl
jnp
das
hlt
jno
notb
outsb
test
mov
iret
sub
lods
push
jnp
daa
fsubs
ss
jnp
adc
cmc
orl
test
into
jnp
push
jns
arpl
ja
repz
daa
mov
dec
popa
out
sub
in
pop
sbb
rorl
cli
repnz
mov
jae
push
bound
mov
sti
jecxz
jnp
ds
sbb
inc
xor
xor
xor
dec
mov
pop
in
add
push
mov
lods
fildl
out
mov
jnp
rorb
add
jbe
jnp
adc
jne
popa
dec
sbb
pop
push
dec
ja
mov
push
hlt
mov
cmc
lea
adc
cmp
inc
xchg
gs
sbb
out
dec
jl
fsubs
lods
inc
add
mov
xchg
jnp
or
or
cmc
repnz
dec
pop
stc
fildl
stos
push
scas
imul
push
jne
cmpl
daa
lods
mov
mov
lret
imul
or
fwait
mov
bound
jnp
mov
jne
das
ret
sbb
mov
jae
dec
lret
stos
or
or
or
fmuls
out
push
ss
jae
fcmovbe
popa
xchg
dec
sbb
jge
or
pop
inc
sub
add
inc
bnd
push
pop
jno
and
lods
lds
xchg
nop
cmp
js
jne
mov
or
stos
add
sub
cli
jecxz
xchg
or
popa
cmp
fldcw
or
sub
sbb
sti
pop
adc
dec
sarl
add
rolb
sti
cmp
and
xor
sbb
mov
mov
mov
ja
loop
in
or
xchg
jne
jae
push
imul
jnp
or
dec
cmp
cmp
loope
fdivs
call
faddl
int
jnp
sbb
xor
push
js
stos
call
iret
sbb
dec
mov
je
cmc
ljmp
ljmp
add
out
ja
sahf
cmp
mov
dec
sbb
xchg
inc
repnz
pop
fistpll
mov
sub
or
enter
scas
stc
ja
loope
int3
aam
or
add
lds
add
sub
fstpt
sbb
xor
cmc
sub
outsl
fisubl
jnp
fwait
jb
cwtl
adc
jp
mov
cmpsl
xchg
outsl
scas
sbb
gs
fwait
xlat
add
aam
or
mov
sti
cld
pop
cmp
inc
jnp
push
push
xchg
jnp
stos
bound
lock
jecxz
cmp
add
into
sub
cmp
cwtl
push
add
out
jnp
daa
out
sarl
ja
xor
jnp
pop
insl
sarb
cmc
jle
xchg
jae
pop
out
jnp
jbe
shl
scas
xor
cmpb
out
xor
fwait
dec
mov
insl
in
stos
push
aaa
out
aam
dec
bound
jae
outsb
movntps
dec
cmp
lods
addb
jge
mov
out
dec
add
fnop
jbe
lret
stos
mov
addr16
lret
jnp
movsl
cmp
sbb
jnp
push
lea
stos
jg
js
stos
outsl
inc
cmpb
out
and
mov
mov
out
rep
fwait
jnp
or
aam
xor
insb
xor
and
cmp
aad
dec
stc
or
xchg
cmp
imul
dec
cmp
add
jnp
lahf
sub
mov
loopne
lret
enter
mov
fs
dec
inc
mov
scas
stos
adc
add
gs
fldt
jmp
idivl
jp
fdivp
cltd
jle
mov
arpl
lods
xchg
mov
fcompl
sbb
adc
clc
hlt
or
lea
pop
lock
jle
jns
mov
mov
imul
mov
ret
xor
lods
xchg
xor
lahf
push
insl
jne
sti
jo
sti
and
lret
jnp
pop
push
shrb
inc
adc
jnp
js
cmp
sbb
in
mov
push
pop
js
add
ss
pop
and
mov
mov
xchg
pop
cmpsl
insl
imul
jae
jns
into
push
fstps
pop
nop
sub
stc
jnp
movsb
insl
push
in
addr16
sbb
outsl
and
push
mov
jge
push
inc
sbb
cmp
int
in
addr16
mov
imul
mov
push
outsl
sbb
mov
loope
cmp
adc
in
inc
fdivs
xchg
movsl
inc
or
xchg
cmc
push
in
mov
jnp
push
pop
stos
xchg
mov
mov
imul
mov
xchg
loopne
in
addr16
lock
jnp
or
test
stos
inc
into
mov
dec
dec
cltd
xor
enter
enter
pop
sbb
ret
cmp
lret
ja
pop
mov
and
fildl
test
adc
mov
xlat
pop
jnp
mov
sub
mov
mov
roll
jmp
aaa
sarl
mov
mov
je
jnp
shl
xchg
jp
sbb
xor
insl
mov
mov
clc
aaa
fwait
jnp
and
mov
stos
fnstenv
jmp
or
jnp
int3
stos
out
movsl
fdivl
aam
jnp
lods
popl
loope
pop
jnp
push
fxch
push
mov
push
jnp
test
sub
mov
cmp
stc
in
notb
and
pop
ret
popa
adc
xor
jo
mov
aad
repnz
adc
or
xchg
lahf
jnp
cli
cmc
in
dec
dec
insb
sub
xchg
push
pop
sti
dec
cld
pop
adc
in
dec
jg
adc
xchg
fadds
scas
gs
repz
scas
jnp
cli
push
cmc
nop
cmpsb
jg
pop
cmpb
inc
ja
dec
dec
scas
mov
sbb
iret
xchg
pop
fwait
jnp
add
xlat
jnp
xor
inc
xchg
pusha
adc
cmp
xor
push
jp
mov
dec
pop
and
data16
ja
cmpsb
lods
cmpsl
cmc
pop
inc
xor
fs
into
jae
mov
ret
cmp
push
xchg
outsl
mov
jecxz
and
aaa
mov
out
xlat
sbb
mov
sub
dec
add
fisttpl
add
sbb
fstp
jnp
lods
cmp
fnstenv
fistl
push
mov
fnstsw
lret
push
adc
dec
imul
mov
dec
jle
jnp
call
push
jbe
add
inc
xchg
mov
mov
mov
in
push
adc
scas
inc
cmp
xor
sub
stc
arpl
into
arpl
cs
push
or
orl
loopne
adc
push
inc
and
ss
jnp
mov
in
dec
cmpl
sbb
mov
lods
dec
rorb
jbe
jnp
push
or
mov
sbb
les
ficoml
mov
push
xchg
pop
push
dec
add
dec
andl
bound
jnp
lret
imul
cmp
enter
or
dec
test
pop
sub
jno
aaa
dec
lret
outsb
cmp
cmp
jnp
push
inc
sub
jne
mov
sarb
repnz
and
fcmovnu
or
jnp
or
fs
cmp
jbe
xchg
xor
jnp
and
into
inc
faddp
sub
cmp
xor
xor
mov
lea
jnp
push
sub
ss
cmc
fwait
mov
xor
jnp
roll
xlat
call
ja
icebp
jne
xchg
outsl
lcall
adc
fstpt
lds
in
lret
mov
iret
cmp
jnp
dec
imul
jnp
in
pop
mov
test
push
mov
adc
mov
mov
mov
jnp
adc
jnp
dec
int
movsl
pop
pusha
and
cmp
stc
lods
jne
scas
dec
sbb
pop
add
xchg
rorb
into
inc
int3
jnp
je
mov
jnp
sub
xor
inc
ja
jmp
adc
jmp
cld
jnp
andb
jnp
cli
dec
scas
inc
jne
mov
loop
loope
sub
xor
mov
imul
or
std
jg
sub
scas
dec
sbb
clc
ret
in
jle
add
or
leave
iret
xchg
jb
imul
outsl
xor
repnz
mov
mov
jnp
out
movsb
inc
sbb
lods
movsb
mov
xor
cmp
repnz
push
cwtl
sub
mov
cmp
jecxz
pushl
pop
scas
mov
push
pop
lea
ja
divb
jecxz
out
add
les
in
loopne
outsl
imul
ret
clc
lods
sub
daa
jnp
xlat
bound
incb
mov
jnp
pop
fwait
or
sbb
mov
movsb
jecxz
or
push
lcall
aam
pop
je
arpl
xor
jg
sarb
sahf
ret
fwait
cs
jnp
loopne
es
dec
std
mov
push
bound
inc
lds
push
fwait
or
mov
jnp
or
decl
cmp
sbb
xor
mov
leave
in
xorl
jnp
cmp
rcll
jnp
test
bound
sub
sbb
sub
push
ficoms
pop
cmp
fcmovbe
fistl
repnz
mov
jnp
mov
jnp
mov
fwait
cli
xchg
test
mov
repz
imul
adc
push
jnp
sbb
xor
pop
sub
jae
js
sub
pop
ficompl
dec
or
int3
or
cld
dec
pop
dec
cmc
sbb
pop
iret
inc
bound
stc
or
jnp
push
mov
fldcw
mov
lock
and
scas
idivb
mov
fsubs
loope
nop
jbe
xor
jnp
mov
leave
mov
fwait
icebp
push
stc
popa
xchg
subl
jnp
mov
or
sbb
push
jae
or
in
sbb
jns
out
cwtl
pop
jnp
int3
adc
adc
int
inc
inc
call
inc
in
fnstcw
jnp
push
jb
adcl
pop
insl
enter
dec
xchg
sbb
and
lods
jb
and
xor
sub
jnp
xchg
lret
xchg
cmp
adc
sti
xor
loope
mov
dec
jp
sub
jnp
out
jns
push
fwait
mov
orb
mov
ret
imul
xchg
or
loope
outsl
lret
cld
sbbb
mov
sub
inc
sti
sub
in
gs
in
inc
dec
mov
cs
or
mov
mov
sbb
sbb
cmpsl
rcrb
mov
sub
int3
jl
sbb
mov
outsl
cmpb
repz
jb
jnp
into
cltd
pushf
ss
or
mov
sti
mov
push
mov
sub
lcall
outsl
xor
stos
cmp
jecxz
cmp
mov
stc
clc
jnp
sbb
mov
mov
insb
mov
mov
ja
mov
inc
lret
mov
in
jnp
fisttpl
clc
subb
push
lods
xor
loopne
ss
sbb
clc
addr16
dec
ljmp
pop
lds
sarb
push
in
mov
sarl
xchg
je
loop
jnp
xchg
sub
fstpt
rclb
fcmove
stos
jnp
add
xchg
pop
mov
jnp
sub
xor
mov
add
jnp
xchg
or
cmp
imul
xchg
jecxz
hlt
dec
out
std
push
jnp
push
or
divl
sub
movsl
mov
jnp
cmp
pop
xchg
jnp
jne
sbb
mov
andb
jnp
adc
cmp
fisubl
cli
nop
imul
sbb
cmp
or
jnp
sarb
push
sub
xchg
pop
stos
es
mov
xchg
fadds
sub
sub
jns
lret
jnp
xor
inc
mov
pusha
adc
clc
cmp
fwait
repz
jnp
pushf
xchg
das
stos
sub
aam
lret
pop
jle
fisubrs
mov
jnp
in
pushf
pop
push
mov
sub
movsl
lods
lret
jnp
out
sub
gs
cmpb
ja
pop
fwait
and
bound
xchg
and
jmp
es
popa
jnp
inc
sub
pop
jnp
outsb
imulb
loopne
push
mov
or
and
jns
jnp
mov
or
or
inc
ljmp
push
jnp
scas
loopne
mov
test
cmp
push
jnp
sub
loop
mov
pop
fldl
sbb
lods
sahf
es
insb
dec
mov
jmp
lret
mov
jnp
shll
jecxz
pop
push
imull
fmuls
inc
or
adc
sti
lret
jnp
daa
pop
in
xchg
pop
or
mov
sub
inc
dec
jne
dec
xor
jns
decb
pop
mov
fldcw
call
sarb
ljmp
push
mov
jae
aaa
mov
jns
mov
xchg
cli
mov
fs
mov
lret
sbb
jo
pop
leave
sub
xchg
call
stc
xor
pop
jnp
dec
pop
cmp
mov
mov
push
mov
mov
in
jnp
add
int
hlt
leave
jnp
bound
and
mov
dec
lods
mov
mov
into
sbb
jae
lahf
cli
lods
rclb
add
cmp
xor
xlat
jnp
enter
das
cmp
mov
clc
pop
cmc
sub
out
insl
push
add
dec
sub
cmp
ss
stc
sti
jnp
mov
or
sarb
mov
fistps
ret
jnp
or
xor
or
sbb
jnp
ss
and
cmp
mov
lods
jnp
dec
icebp
push
sub
and
fnstcw
sti
clc
mov
cmp
dec
jae
add
into
divb
movsb
jnp
cmp
stos
ret
jbe
dec
xchg
cmp
or
clc
jg
js
js
mov
jnp
popa
sbb
mov
out
sbb
test
sub
ret
enter
jnp
sub
push
inc
sarb
add
mov
sub
add
in
lea
xchg
stos
sbb
out
pop
add
cs
mov
cmp
imul
pop
cld
pushl
iret
and
imul
and
in
and
sbb
sbb
sbb
mov
cmp
lods
sbb
clc
jo
jnp
aam
aaa
push
stos
xor
jnp
idivl
lods
sub
jmp
mov
xor
mov
sbb
mov
cmp
jmp
in
jge
jnp
andb
imul
lret
pop
fisubrs
movsl
xor
fsubs
jae
xchg
lcall
out
sahf
mov
cwtl
test
lods
xlat
jnp
mov
xchg
jnp
fnstcw
ja
jne
jnp
dec
jle
sbb
ss
icebp
inc
lret
popf
mov
imul
add
negb
pop
jle
jnp
pop
fstpt
sbb
jns
call
mov
addb
fmul
lret
jb
mov
js
dec
inc
decl
in
out
call
pop
ret
add
or
cmp
inc
ljmp
ret
negb
aaa
xchg
mov
dec
loope
sbb
mov
dec
in
jnp
loopne
xor
cmp
fsubs
pop
outsb
aaa
cmp
cmp
sti
mov
mov
jmp
fsubl
xchg
push
out
outsl
jge
sub
xchg
dec
aad
add
stc
jnp
jno
inc
out
adc
repnz
mov
js
iret
dec
ss
fnstsw
pop
and
lods
mov
shr
insb
xchg
jnp
es
mov
int
pop
ret
pop
sbb
mov
push
jnp
sarl
lret
push
push
sub
cmp
outsl
xchg
jnp
sbb
cmp
insl
pop
jmp
jne
repz
imul
jnp
sti
test
push
mov
fcompl
aaa
int
ja
jecxz
xor
in
mov
cs
jnp
cmc
xchg
fwait
xor
sub
xchg
mov
push
push
shl
popa
inc
jnp
bound
and
ret
sub
mov
out
or
aaa
pop
cmp
sub
push
jnp
fcmove
lret
in
jnp
faddl
aad
fnsave
cwtl
je
ret
daa
add
std
dec
lahf
cmp
test
inc
popf
sbb
jnp
or
loope
sub
sbb
in
xchg
in
mov
mov
or
jecxz
das
das
div
xor
mov
and
jnp
aaa
cli
jne
pop
jnp
mov
mov
adc
ja
jbe
js
ret
ret
inc
mov
xchg
add
mov
pop
jb
sti
push
jmp
add
inc
hlt
jae
jg
jmp
mov
stos
jnp
cmp
test
sub
aaa
outsl
add
pop
rorb
jnp
mov
scas
jnp
outsb
jne
sbbb
dec
push
mov
fnstsw
jnp
clc
mov
das
or
jnp
loopne
stos
lea
call
test
mov
mov
insl
inc
cwtl
cmp
fwait
or
arpl
push
testl
sub
and
outsl
mov
mov
mov
shrb
lahf
jnp
and
and
arpl
xchg
mov
outsl
mov
add
scas
out
xor
in
jnp
cs
and
cmp
mov
or
pop
inc
push
gs
outsl
dec
cmp
xchg
insb
loopne
cmp
mov
sbb
pop
cmc
pop
jmp
mov
cmp
stos
mov
jae
sub
xchg
sub
sbb
cmp
jmp
xor
mov
ror
loope
and
lcall
xchg
adc
mov
imul
subl
or
arpl
pop
scas
call
and
aad
jb
cmp
cmp
ja
inc
xor
dec
jnp
adc
add
gs
or
mov
jae
jecxz
fildll
pop
mov
fdivrs
push
sub
fsubrp
pushf
cld
jnp
std
outsb
es
lret
in
bound
jnp
and
sbb
jno
stc
orl
jnp
cld
lret
dec
cmp
andl
clc
jno
jecxz
popa
mov
dec
mov
jnp
mov
rclb
scas
jb
jl
out
mov
mov
inc
movsb
xchg
cmp
mov
jp
or
daa
xor
xor
lock
inc
pushf
jb
adc
xor
xchg
xchg
out
jmp
ss
test
sub
repnz
enter
aad
mov
jnp
call
stos
jne
sub
mov
jnp
push
cli
in
jnp
or
fidivrl
jge
mov
scas
and
push
push
jnp
inc
inc
adc
or
mov
pusha
call
cmp
cmp
sti
lods
shl
imul
dec
loop
in
xchg
js
imul
mov
and
scas
jnp
sti
inc
xchg
imul
pop
or
insl
cs
jnp
xor
ficompl
les
int3
ljmp
mov
lret
inc
cli
xchg
xchg
pushf
je
clc
or
loop
test
push
sbb
in
inc
lods
sti
jnp
sbb
call
adc
aaa
movsl
cmpsl
inc
scas
pop
cmpb
xchg
call
mov
aaa
xor
adc
lea
scas
out
jecxz
negl
das
cmp
sub
hlt
scas
arpl
roll
pop
shll
mov
or
push
lods
popf
push
jnp
rclb
mov
and
inc
sbb
or
lds
js
lods
cmp
pop
sti
clc
push
or
push
sahf
mov
cli
out
inc
outsb
or
mov
mov
lahf
scas
jnp
in
subl
jnp
repnz
jnp
jae
mov
enter
out
std
daa
xorl
jnp
lods
stos
push
cmp
mov
aad
div
addr16
pop
imul
in
mov
xchg
test
mov
insl
xchg
aaa
loope
jnp
jno
mov
jnp
sahf
xlat
cmc
daa
sub
es
lock
push
fiaddl
jnp
stc
das
adc
cs
fstps
fsubrl
fsubs
stos
jnp
mov
push
jnp
jb
test
idiv
jnp
sti
js
inc
jnp
clc
push
aam
lcall
pop
adc
sti
js
sbb
sbbb
test
dec
jle
jne
fistpl
jnp
imul
inc
jnp
rcr
repnz
fcoms
jnp
inc
xor
fxch
lds
outsb
jae
repnz
and
xor
push
bound
add
ljmp
pop
sbb
hlt
pop
je
int
ss
jbe
test
jnp
pop
push
mov
dec
je
dec
mov
ss
popa
stos
xor
lods
sti
or
hlt
lods
mov
sbb
cmp
xchg
jnp
lds
cmpsb
test
cmp
cli
pop
dec
push
sbb
jnp
das
dec
pop
sub
or
jnp
dec
mov
jnp
cld
popa
ss
sub
cs
jmp
out
inc
sbb
ja
adc
jnp
into
pop
cmp
hlt
cmpsl
sbb
inc
mov
lods
aam
out
xor
push
dec
mov
push
adc
fstpt
jp
jg
in
adc
cmp
cmp
sbb
outsb
lret
add
aam
jae
jnp
jp
ds
inc
or
pusha
sti
je
jnp
cmp
dec
subl
ljmp
and
push
js
pop
ja
xlat
fsts
stc
outsl
push
jmp
dec
sbb
mov
sbb
mov
mov
mov
jnp
cwtl
les
cmp
jmp
ss
ret
dec
std
fidivl
es
jnp
jne
cwtl
cmp
pusha
and
jnp
cmp
sub
clc
mov
fs
mov
jnp
fidivl
adc
ljmp
cmp
shr
fcoml
dec
das
sti
mov
push
xor
pop
popa
ljmp
inc
push
xor
hlt
sub
jns
pop
push
push
and
mov
sarb
popf
inc
sub
cmp
bound
jnp
enter
data16
jle
or
cs
xor
mov
js
les
jle
jae
or
adc
popa
mov
dec
cmpsb
lcall
mov
stc
pop
mov
mov
jnp
inc
pushf
xchg
cltd
mov
dec
sub
dec
pop
insl
cmpsb
enter
ret
in
inc
xchg
lods
ljmp
aam
bound
jae
add
jmp
in
outsl
xlat
movsb
jno
jp
jnp
insb
mov
ja
mov
xor
xchg
xchg
jbe
insl
ret
jnp
clc
pop
enter
mov
xor
push
xorb
sub
sahf
and
into
and
fisubrl
push
cmc
mov
ss
jb
loope
xchg
dec
dec
sbb
dec
or
imul
ret
mov
jmp
stos
sub
pop
or
test
je
inc
push
idivb
aam
fwait
cmpsb
lret
jnp
ret
fdiv
add
adcb
pop
cmp
mov
sub
in
out
pop
push
and
ret
cmp
cs
lea
dec
subl
xchg
jae
imull
hlt
xchg
cmpsb
dec
cmc
push
fidivl
scas
or
aaa
insl
push
mov
shrl
adc
loop
fimuls
sub
cld
cwtl
out
int
fcmovnu
sbb
test
xor
mov
adc
dec
test
or
imull
cli
shl
mov
mov
pushl
lret
jnp
iret
mov
jnp
out
push
ret
add
push
stc
aaa
pop
rorl
pop
ljmp
push
not
imul
push
mov
or
fucomip
leave
insb
xor
mov
fistl
shlb
call
sarb
pop
xor
lret
jnp
pop
or
jnp
int
dec
xchg
dec
jb
jnp
cltd
sub
pop
ret
lret
sbb
lret
shr
fs
fistpll
or
add
fdivr
outsl
and
jnp
mov
mov
ss
jecxz
sti
sub
xchg
das
mov
js
mov
cmc
mov
pop
jnp
xor
jnp
xor
je
xor
mov
inc
mov
or
dec
jnp
push
outsb
sbb
adc
xchg
cli
popl
lods
sbb
hlt
push
mov
jnp
cli
insb
ja
repnz
stos
push
add
adc
mov
jnp
mov
dec
in
jnp
push
imul
dec
adc
xorb
arpl
pop
rcrb
jnp
daa
movsl
call
mov
cld
sub
jae
ljmp
sub
roll
pop
sbb
push
rcr
jnp
ficoml
dec
cmp
lret
jnp
mov
in
mov
pop
popl
mov
add
pusha
fwait
lret
lds
xor
hlt
pop
sbb
jno
shr
lret
push
dec
jnp
out
mov
stos
mov
cmpsl
jnp
jns
dec
pop
mov
add
jne
lahf
jge
jnp
dec
or
sub
dec
pop
ja
iret
pop
xor
jnp
dec
jge
ss
fsub
les
jnp
fcmove
pop
pop
sti
mov
mov
xor
fiadds
mov
mov
shlb
in
jnp
into
jecxz
xlat
push
stos
subl
pop
scas
sti
adc
icebp
inc
fdivs
mov
jne
push
sub
rorb
daa
imul
xorl
jnp
rclb
xlat
jne
mov
cmp
mov
ja
and
xchg
jnp
push
fmul
bound
jnp
cmp
popf
imul
in
push
outsb
fcomps
gs
fwait
sub
push
pushf
fldenv
jnp
push
jge
dec
push
sub
jnp
push
lret
pop
jg
cmpsb
xor
sti
dec
cmp
add
sbb
sarb
lret
ljmp
and
inc
cmp
pop
cli
in
es
mov
xchg
icebp
adc
loopne
and
xorb
xlat
lret
dec
loop
add
or
jo
mov
cld
push
push
movsl
mov
fcompl
loopne
push
cli
or
cmp
stc
sbb
test
ss
lcall
push
jno
jne
mov
sti
jno
repz
or
pop
aad
or
jnp
lcall
jnp
adcl
in
mov
ss
jae
mov
inc
dec
pop
mov
nop
jne
loopne
lods
je
fwait
mov
xor
push
insl
mov
jnp
sub
mov
loopne
aaa
push
mov
adc
scas
add
fimuls
shrb
cmpl
push
xchg
jnp
mov
es
dec
jg
jnp
mov
jno
jnp
xchg
pop
lock
push
fwait
jnp
sub
or
insl
pop
cli
jnp
mov
movsl
ret
pop
jns
nop
pushf
jle
aas
cmp
lret
leave
pop
dec
dec
int3
rolb
jnp
push
stos
xchg
jne
cwtl
jnp
cmpsb
mov
mov
imul
push
sub
popf
outsl
xchg
inc
hlt
int3
inc
jmp
sbb
fbld
iret
cmc
lahf
sub
cmp
in
mov
mov
cwtl
insl
scas
add
inc
cmp
lods
mov
and
popf
enter
mov
ss
jnp
push
pop
add
shll
sti
out
fistps
jnp
pusha
xor
lods
or
jg
outsb
clc
cmp
dec
rcll
push
fcomi
cmp
xchg
cmp
jnp
lods
movsb
fcmovb
pop
add
jnp
int3
push
scas
fists
dec
sbb
adc
jbe
dec
bound
jnp
repnz
fnstenv
sti
xchg
cmp
jb
insl
pop
lahf
jnp
cli
nop
cmpsb
popa
jmp
movsb
iret
inc
mov
mov
push
mov
stos
jnp
mov
jns
lahf
jl
jnp
fcmovne
dec
jle
rcl
jnp
pop
jbe
cli
ljmp
scas
pop
mov
je
stos
pop
in
sbb
lret
ficoms
mov
jno
cli
cmp
mov
or
jnp
or
cli
jmp
popa
es
outsl
dec
daa
xchg
or
sbb
fidivrl
loope
and
cmp
push
jmp
hlt
xor
pop
pop
cld
dec
shl
cmp
cmp
xor
xlat
mov
pop
movsb
inc
jnp
adc
out
in
stos
jb
jnp,pn
sub
push
inc
push
outsl
or
in
jnp
int
dec
pop
mov
xor
sub
push
mov
lods
ret
std
sbbb
inc
outsb
dec
mov
jnp
lock
push
mov
data16
jnp
jp
push
mov
and
lahf
jnp
cwtl
movsb
leave
test
in
mov
push
in
stc
inc
insl
in
insl
ljmp
pop
scas
pop
pop
loop
js
out
cmpsl
mov
test
outsl
add
xchg
int3
fwait
jnp
dec
stos
dec
rclb
loope
add
insl
inc
jnp
ja
xchg
or
aad
jo
jnp
test
ljmp
xchg
fwait
aas
stos
or
in
cmp
jnp
cmc
or
sub
mov
cmp
dec
or
add
and
push
or
clc
mov
xlat
mov
xchg
cli
jnp
in
mov
and
pop
jnp
shll
nop
rorl
inc
push
jnp
xor
lds
sti
js
movsb
je
es
pop
test
sub
mov
popf
jecxz
jnp
mov
arpl
cmp
fxam
ljmp
ljmp
mov
jb
mov
mov
and
jo
sub
jnp
jle
jns
rcll
lods
mov
sub
leave
sahf
fbstp
jne
aaa
inc
xchg
push
mov
mov
stc
outsl
add
dec
jp
jnp
mov
and
xchg
sub
aas
and
ficompl
jnp
mov
adcb
mov
xchg
iret
mov
imul
movsb
int
out
jns
ljmp
xchg
aaa
imul
ss
mov
jno
cmc
xor
push
pop
inc
pop
and
in
push
mov
jecxz
xchg
inc
sub
stc
test
not
mov
popf
movsl
mov
push
dec
fwait
jnp
jmp
dec
test
out
pop
rclb
mov
popa
jge
popf
cmpsb
mov
insl
test
call
push
int
push
mov
loop,pt
jno
rorl
lret
fildl
pminub
jne
fbld
jnp
jo
pop
pop
push
ret
outsl
or
into
mov
jnp
mov
inc
jo
pop
int3
jnp
repnz
mov
jle
sub
pusha
push
pop
sbb
cmpsl
in
jnp
enter
movsl
notb
add
pop
repnz
popa
jnp
sbb
add
sbb
testb
push
mov
mov
mov
cmp
pop
jbe
lahf
mov
jo
pop
dec
mov
fisubl
test
ljmp
mov
ja
mov
jnp
push
fwait
mov
add
add
cmpsl
mov
pmaxub
movsl
add
sub
insb
jae
mov
xor
jae
pop
outsb
sub
jnp
jp
push
adc
inc
mov
mov
sbb
pop
shll
sarl
cmc
push
scas
mov
cmp
jno
out
in
je
add
xor
jp
stc
icebp
mov
push
dec
mov
sbb
lcall
popf
mov
inc
cmc
cmp
cld
addr16
mov
adc
jne
pusha
clc
icebp
sbb
push
jp
push
sub
mov
adc
mov
jecxz
mov
out
mov
xchg
jae
aas
sbb
sarl
scas
lret
loop
dec
sbb
sbb
fdivrs
andb
push
ja
sbb
sti
pop
negb
sbb
in
jae
sub
jp
and
pop
outsb
and
xlat
outsl
aaa
jnp
inc
loope
dec
inc
into
cmp
int
mov
or
mov
cmp
jnp
sbb
sahf
outsb
cmp
push
or
mov
jbe
in
ljmp
push
decl
dec
or
pop
and
fbld
jnp
cld
shl
sub
pop
cmp
imul
test
or
out
push
jae
dec
test
pop
mov
push
loop
imul
out
repnz
cli
or
sahf
imul
push
ja
pop
xor
bound
repz
test
push
jle
in
jnp
cmp
movntps
xchg
mov
pop
xor
leave
pop
pusha
rclb
or
sub
push
pop
sti
push
jnp
xchg
adc
test
push
cmp
mov
cmpsl
loope
in
fidivrs
call
test
lret
arpl
jbe
jecxz
sub
add
jnp
bound
mov
mov
ss
subl
cmp
enter
mov
xchg
mov
mov
inc
enter
repnz
and
adc
out
pop
imul
mov
pop
lcall
cmp
mov
jnp
movsl
stos
loop
popf
cmp
cmp
emms
dec
sbb
mov
jg
fisubs
cmp
hlt
push
ja
es
dec
dec
mul
stc
outsl
jo
loopne
cs
xchg
mov
jnp
mov
xchg
in
enter
jne
in
int3
xor
fidivs
imul
jle
sahf
shrb
stos
in
mov
cmp
fisubrl
push
dec
call
jnp
mov
clc
or
enter
or
jno
into
out
lret
cmp
sarb
dec
das
lcall
test
pushw
in
lods
fisttpll
out
and
mov
xchg
call
out
push
lock
adc
fisttpll
leave
int
cmc
cmp
xor
mov
xchg
push
lret
call
pop
push
or
fdivrs
mov
mov
jnp
clc
jmp
lret
pop
jnp
or
mov
pop
mov
cmp
xor
xchg
std
mov
mov
jnp
in
cmp
in
mov
dec
pop
cmp
xor
add
xor
pop
imul
mov
arpl
sub
mov
sbb
dec
inc
pop
int3
jnp
push
nop
ja
cmp
jnp
sub
loope
push
aam
mov
pushf
arpl
ss
mov
dec
push
jnp
lock
inc
mov
sub
mov
outsl
mov
pop
out
dec
dec
jg
jno
lock
fcomip
rcrb
imul
cs
push
cmp
fwait
sahf
sbb
cli
jns
dec
mov
mov
pop
insl
loop
adc
addr16
dec
shlb
cli
dec
jno
in
and
jae
aam
push
stc
jnp
dec
loop
add
and
sarl
bound
clc
cwtl
jns
push
inc
mov
mov
add
xchg
lods
cmp
cltd
adc
clc
push
mov
jnp
xchg
mov
cmp
fwait
cmpl
adc
jns
mov
mov
shrb
es
mov
sbb
push
cwtl
in
scas
arpl
mov
mov
jno
jbe
jne
mov
fmuls
jnp
mov
ret
jbe
lret
jae
cmpsl
out
jno
sub
cmpsb
xor
jnp
popa
call
jnp
cmp
fcomp
xor
xor
inc
outsb
pop
loop
jnp
ret
xchg
mov
mov
leave
jecxz
lcall
push
jne
xor
lret
lret
sbb
test
xor
test
jnp
lea
mov
xchg
adc
pop
jne
pop
lock
fimuls
fxch
loope
rorl
bound
lea
mov
xlat
jnp
stos
mov
cmpsb
jnp
pop
sahf
not
and
stos
dec
mov
jnp
xor
sti
xor
out
pop
loope
mov
pop
cmp
pop
sarl
test
xchg
sub
clc
mov
cli
jnp
mov
sub
mov
pop
test
cmp
call
xchg
pop
rorl
mov
jnp
jmp
out
pop
sub
leave
jnp
xor
push
jnp
outsl
out
lea
fs
negb
dec
jnp
or
push
scas
add
dec
imul
lods
lret
cs
add
incl
inc
test
in
popw
into
jnp
aaa
mov
cmp
or
jnp
popf
loope
jnp
xor
sbb
mov
cmp
lods
gs
jnp
jle
jb
mov
shrb
add
inc
jnp
sti
pop
push
ret
loope
int
rcll
leave
add
jl
lret
or
pop
adc
jnp
jp
mov
pop
mov
ret
xchg
sub
jnp
cmp
std
sub
jp
jnp
scas
jge
adc
sbb
out
mov
sub
cmp
xchg
bound
mov
in
sbb
jnp
and
pop
cwtl
mov
outsl
rorb
jnp
jecxz
cmp
testl
repz
jg
pop
jle
ljmp
outsl
sbb
dec
pop
jnp
cmp
fdivrl
cmp
adc
cmp
pop
jnp
mov
dec
imul
sub
out
mov
fisttpl
imull
addr16
mov
dec
cmpl
cmpl
cmp
mov
fstp
cmp
jg
cmp
mov
stc
dec
push
aam
out
lcall
or
xchg
adc
cmp
es
cli
add
sarb
insl
imul
mov
aad
ljmp
sub
stos
sub
out
or
pushf
in
or
jae
sar
push
fcomps
dec
inc
lcall
and
xor
dec
sub
lcall
fiadds
lods
je
sbb
push
or
jae
cmp
mov
jle
inc
aam
outsb
jnp
lods
pop
lcall
cwtl
push
xor
jbe
mov
gs
insl
jle
xchg
stos
mov
push
pushl
sbb
in
add
stc
mov
sarw
mov
jnp
push
js
push
ficoml
in
mov
sti
pop
sbb
fldcw
sbb
xor
jnp
mov
xchg
sti
pop
pop
aaa
mov
add
fisttpl
mov
add
jno
pop
push
aas
push
push
inc
insb
outsl
mov
jnp
fnstcw
and
xor
xchg
in
mov
mov
out
and
xor
lret
cld
pop
lea
mov
cmp
es
xor
dec
fidivl
push
outsb
mov
in
mov
out
dec
mov
jbe
xor
sub
inc
jae
adc
jmp
ljmp
mov
and
ss
movsb
jnp
mov
aam
fisttpll
lcall
scas
inc
mov
sbbl
ss
adc
mov
mov
addr16
or
jnp
divb
fstpl
sti
sub
jbe
adc
jge
or
mov
pop
jnp
lods
cmp
cs
jae
mov
dec
call
cmp
dec
xor
das
shlb
cmp
stos
mov
and
sbb
push
lock
insb
inc
popf
insl
jnp
iret
jns
dec
scas
movl
mov
mov
inc
xchg
dec
subb
jp
enter
jo
jnp
ret
xchg
rcr
inc
cli
int
jnp
mov
mov
and
mov
jp
mov
js
jnp
jg
mov
jnp
add
cli
and
lret
jmp
mov
ret
inc
jns
fiaddl
mov
or
mov
rorb
mov
hlt
lea
int3
and
jnp
xorl
fwait
rcrb
ret
dec
inc
sbbl
mov
cmp
cmc
inc
jnp
push
dec
mov
and
sti
iret
sbb
outsl
sbb
lcall
adc
jnp
lods
inc
sarb
jno
jnp
ja
mov
cmp
jbe
scas
jo
shrl
ja
pusha
mov
inc
ret
in
aas
clc
push
repnz
dec
inc
mov
sbb
or
sti
cmp
jmp
cmc
jnp
fxch
mov
adc
dec
in
lods
jae
mulb
test
dec
loopne
sbb
jnp
ret
pop
test
and
or
mov
fidivl
dec
cmpl
scas
lret
mov
arpl
lods
dec
and
jle
int3
xchg
cmp
mov
imul
stos
dec
insl
push
jge
pop
inc
mov
jle
fisttpl
ljmp
out
callw
mov
jns
lcall
hlt
scas
push
jne
test
outsb
cmpsb
aam
cmp
stc
xchg
xor
cmp
pop
scas
mov
or
cmp
out
add
repz
cmpsb
aaa
adc
xor
and
mov
jns
lea
mov
sub
aam
xor
mov
dec
aaa
scas
stos
js
mov
cmp
dec
outsl
shll
push
mov
rcr
push
xor
loopne
cmp
movsb
xchg
idivl
jnp
clc
ret
dec
ret
mov
data16
mov
mov
mov
dec
xor
cs
sub
or
push
dec
mov
ret
pushf
xchg
push
sub
mov
ds
and
cmp
sti
fstpt
pop
lcall
mov
mov
fwait
mov
mov
out
xchg
lcall
jp
pop
movsb
mov
rcrb
out
hlt
or
or
fwait
or
lock
sahf
push
sbb
cmp
stc
inc
daa
cmp
xor
mov
mov
or
insb
and
xor
scas
outsb
sub
jnp
loopne
stos
pop
lret
push
sbb
iret
pop
mov
jb
sti
jnp
fisttpll
xor
cli
cmp
mov
cltd
lods
lcall
adc
push
pop
push
xchg
aam
mov
dec
out
dec
xor
xor
lret
ja
push
push
jl
mov
sti
loope
and
xchg
stc
inc
mov
inc
dec
push
es
mov
cmp
lods
pop
jnp
push
push
xor
xchg
call
stos
stc
cwtl
outsb
mov
cmp
xor
mov
pop
adc
aaa
xor
dec
cmp
sbbl
jae
lret
pushf
or
sbb
dec
rolb
aaa
cs
jae
aad
cmp
sbb
daa
cmpl
lods
mov
or
sbb
sub
movsb
and
or
es
sub
jns
add
cmp
jnp
jg
rolb
gs
dec
lret
popf
aad
pop
jecxz
dec
or
push
lock
sub
lds
jnp
xchg
cmp
lret
cli
loopne
jl
jne
int3
jo
jnp
insb
imul
dec
jl
jnp
sahf
add
adc
add
dec
pop
fistpl
sub
test
mov
push
inc
xchg
data16
mov
jmp
lret
out
je
jnp
shrb
aaa
adc
pop
int3
sbb
mov
ja
dec
push
sbb
and
inc
imull
lahf
push
outsl
cmpsb
hlt
popf
cmp
mov
repnz
in
mov
lea
mov
xchg
and
sti
insl
sbb
inc
pop
add
negb
inc
pop
jbe
pop
jo,pt
shrl
mov
loopne
cmp
aam
or
or
test
pop
jo
inc
in
in
pop
jp
mov
adc
sbb
mov
dec
cmp
jnp
pop
sbb
jp
jne
cmp
jae,pt
call
add
int3
fsub
daa
mov
pop
adc
rcrb
push
push
add
je
arpl
inc
into
jnp
push
push
stc
sub
mov
inc
mov
enter
mov
fnstcw
testl
arpl
jnp
sub
js
jo
rcrb
aad
mov
aaa
jnp
or
or
stos
fsts
adc
scas
addr16
jle
aaa
cmp
loop
inc
xor
xor
jnp
cmpsb
mov
pushf
inc
mov
sbb
jmp
leave
lds
ss
sahf
rcrb
sti
jnp
lahf
addr16
jo
sbb
int3
jae
cmp
imul
jmp
push
xchg
cmpsb
inc
xor
insl
scas
hlt
into
jnp
cmp
inc
xor
sbb
jnp
pop
add
popa
ss
and
stos
push
dec
pop
jnp
test
mov
imul
mov
jnp
push
sub
xchg
in
movsl
mov
xor
divb
imul
sub
push
in
sbb
sub
or
sti
inc
fists
cmpsl
pop
jno
subb
push
and
iret
xor
inc
pushf
jnp
mov
mov
enter
das
pushf
jno
jne
aas
gs
push
mov
pop
out
ss
inc
imul
cmp
jo
lock
cmp
mov
xor
lret
jnp
andl
mov
add
mov
push
jae
cmp
ds
sahf
jnp
divb
jns
inc
enter
xchg
insb
scas
mov
sbb
jnp
mov
dec
nop
popa
mov
jnp
or
movsl
adc
ret
into
and
add
sti
addr16
mov
cmc
in
mov
pop
sbb
cmp
mulb
push
mov
sbb
adc
or
mov
sbb
pop
xchg
push
xor
insl
lods
dec
dec
xchg
cli
lods
cmpsb
mov
cmp
mov
pushl
fisttpl
push
insl
int3
das
test
mov
lret
insb
scas
xchg
jmp
xor
lcall
sar
jno
mov
push
jb
insl
pop
pop
or
xor
sbb
push
dec
ja
mov
mov
mov
push
xlat
iret
jl
jnp
mov
scas
loop
ja
lods
subb
outsb
xor
xor
mov
mov
icebp
sti
adc
pop
aaa
cmpl
ljmp
xor
mov
push
clc
mov
in
cmp
out
jnp
sub
cli
or
add
stos
jnp
das
push
mov
sub
shlb
xor
mov
jbe
sbb
aam
outsb
aaa
sub
and
aas
in
mov
xor
add
daa
vcvttsd2si
ss
aaa
adc
imul
cmova
insl
pop
or
xor
cmpsb
mov
fistpl
sub
ss
insl
mov
inc
jmp
push
and
lret
jnp
bound
cli
ljmp
stc
sub
dec
test
aad
inc
push
mov
js
orl
sub
jp
dec
test
or
aaa
pop
sbb
and
dec
or
rcrl
ffree
or
or
pop
insb
repnz
dec
dec
dec
lcall
cmp
pop
push
pushf
outsl
rcrb
test
loop
fptan
lret
or
rclb
ja
mov
pop
mov
or
push
imul
lcall
or
aaa
mov
fbstp
leave
cli
mov
dec
jp
xor
insl
sbb
add
test
or
lods
subl
sbb
gs
mov
test
inc
jnp
arpl
and
sbb
pop
sub
and
loop
or
mov
or
cwtl
jae
pop
imulb
jnp
and
cmp
loope
sbb
adc
or
mov
jae
push
or
xor
mov
add
lahf
aaa
sti
lret
ss
push
ss
je
push
pop
pushf
jge
jo
adc
ret
fwait
in
out
cmp
sbb
sti
mov
clc
daa
insl
sub
pop
cmp
sbb
cmc
cmpsb
cmp
test
pop
jnp
lcall
in
outsl
into
mov
jnp
std
pushf
mov
iret
into
jnp
gs
cmp
in
add
xchg
aad
data16
shrb
std
dec
in
cmp
stc
in
sub
int
and
js
sbb
lcall
in
push
call
dec
cli
cmp
ja
insl
mov
sbb
mov
mull
jnp
ss
in
sub
lret
jnp
leave
pop
repz
sub
lcall
aam
or
iret
cmp
or
js
cmp
shrb
hlt
sarl
pusha
xchg
adc
mov
stos
push
scas
hlt
jno
arpl
roll
jae
shll
imul
js
ret
imul
std
pop
dec
dec
fs
icebp
xor
jnp
outsl
pop
xchg
out
fwait
mov
std
bound
cld
sub
sub
ret
lcall
cli
fdivrs
push
and
add
xchg
jne
into
jns
jmp
ret
sub
cld
movsl
or
mov
aas
xchg
push
jmp
pushf
repz
pop
lcall
mov
lcall
lea
lcall
sub
fidivrl
shll
out
dec
inc
movsb
sub
lods
mov
leave
mov
jnp
mov
push
jnp
mov
pop
xchg
jmp
push
mov
add
imul
and
test
icebp
xor
mov
lret
mov
or
dec
mov
into
or
jne
je
or
test
stos
mov
fidivrl
subl
add
mov
pop
mov
pop
jnp
mov
in
pop
push
ret
add
cli
xor
add
daa
jnp,pt
sub
sub
int
popf
cltd
jnp
xor
and
jp
imul
clc
adc
jnp
out
dec
mov
lcall
mov
cmc
adc
stc
sti
sbb
lods
pop
mov
out
jnp
mov
pop
jnp
sub
ja
xor
sub
mov
enter
mov
cmpsb
cmpsl
outsb
jno
push
or
sarl
shlb
pusha
push
jnp
push
jnp
repnz
outsb
sti
mov
cli
mov
mov
lock
cmp
clc
jnp
xchg
repz
pop
push
orb
mov
ja
mov
cmp
dec
stc
sbb
xchg
or
outsb
xchg
and
clc
cmp
ret
test
adc
jns
cltd
jno
rcr
or
and
or
sbb
mov
mov
or
jb
inc
pop
xchg
stos
jnp
bound
xchg
test
lret
hlt
mov
pop
leave
fwait
xlat
scas
in
fs
mov
mov
and
dec
jo
std
outsl
clc
fwait
xchg
xor
lret
movsl
in
cmpsl
jae
dec
insb
lods
inc
mov
aaa
gs
cmp
dec
test
aam
push
mov
xchg
add
dec
lret
jnp
inc
icebp
gs
insl
push
jno
push
mov
or
jno
out
lock
movsb
lods
fnstcw
rorb
xchg
push
pop
in
das
movsl
mov
jb
sub
jnp
insb
sub
add
cmp
jnp
shlb
into
xchg
stos
int3
jnp
test
pop
or
jnp
jo
pop
sbb
dec
fsubs
sub
mov
je
movsb
pusha
imul
repnz
rcrl
and
xchg
and
dec
jnp
imul
shrl
int
ret
push
pop
sub
pop
imul
add
movsl
jnp
dec
pop
push
mov
pop
jnp
fcoms
dec
addr16
stos
jnp
mov
js
cmp
xchg
imul
test
cmc
mov
push
sbb
bnd
pop
adc
mov
mov
pop
jb
mov
mov
movsl
pop
jb
fsubs
pop
sbbb
push
sub
lcall
fstpt
dec
mov
or
or
out
jnp
push
out
jae
scas
test
ret
jecxz
loop
fwait
dec
mov
fld
outsb
inc
xorl
ljmp
sub
cmp
pop
sub
lret
shlb
inc
jnp
jp
call
jnp
rolb
adc
mov
jle
movsb
outsl
pusha
lds
mov
lahf
jl
jnp
sbb
nop
hlt
cs
pop
jnp
in
xchg
lods
xlat
int3
loope
jnp
pop
ror
sti
cmc
loopne
adc
jnp
in
dec
push
stc
sarl
fisubl
jo
or
dec
je
cmp
jp
repz
jnp
xchg
in
stos
pop
lods
rcrb
xor
outsl
sub
sbb
lods
sarb
inc
insl
mov
cltd
push
and
iret
addr16
mov
mov
add
loop
jae
jnp
push
sti
stos
inc
fsubrs
xchg
jb
sbb
xor
andl
scas
loop
lret
cmp
sbb
jbe
outsl
fldenv
add
push
icebp
jnp
test
fildll
push
lret
dec
ret
pusha
jnp
imul
jae
outsb
das
dec
cmp
add
fsubl
stos
mov
dec
dec
aam
in
sbbb
and
das
jnp
pop
insl
dec
shrb
jle
dec
mov
ds
leave
frstor
js
and
xor
shlb
jnp
popf
push
push
lods
in
fadd
aaa
imul
in
push
ret
jnp
adc
cmpsb
lods
xchg
mov
mov
sub
push
mov
out
pop
cmp
xor
xchg
cmp
xor
mov
lret
ja
or
das
cmp
cmp
sbb
outsb
cmp
mov
test
sahf
xor
call
or
cmpl
mov
mov
stos
lret
sti
ficomps
jnp,pn
cmpsb
xchg
adc
push
jle
jnp
std
adc
sti
ss
mov
in
shr
shrb
pop
push
xchg
das
xor
lahf
xchg
das
jge
jnp
repnz
fwait
adc
sub
js
fsubrs
in
or
cmp
dec
addr16
push
lods
pop
dec
shll
outsl
pop
sbb
xor
movsb
mov
lock
pop
sti
xor
pop
mov
lea
pop
dec
sub
pushl
jge
repnz
mov
jnp
cmp
loop
add
cmp
mov
call
sub
push
dec
pop
shrl
mov
pop
lcall
or
and
mov
sub
xor
aas
in
or
cmpsb
cmp
scas
xchg
ds
pushf
jae
aaa
clc
sub
cmp
push
mov
pop
imul
dec
test
call
aam
jns
pop
jnp
jp
cmp
push
outsl
xor
jnp
and
rol
add
lods
pop
or
mov
imul
bound
xor
jnp
and
dec
mov
push
cmp
outsl
and
clc
jecxz
or
push
mov
jae
lods
xchg
mov
cmpsl
cld
aam
in
or
in
mov
jmp
pop
mov
daa
shr
mov
or
iret
nop
jb
mov
push
je
test
dec
or
push
lock
jb
in
outsl
repnz
jmp
dec
iret
lods
mov
jnp
adcl
cli
idivb
aaa
sti
repnz
lahf
test
jnp
jbe
in
fdivs
sub
ja
test
jnp
mov
adc
idivl
sbb
insb
push
inc
mov
xor
jno
mov
sub
push
js
push
cmpsb
cmpsl
stos
mov
push
mov
mov
cmp
std
jae
aad
jnp
inc
call
mov
jne
dec
mov
cli
or
stc
or
sbbl
bound
xchg
push
add
push
add
fidivl
and
and
push
mov
push
cli
popf
arpl
cltd
pop
outsl
neg
jnp
sub
adc
mov
and
fdivl
divb
lret
jnp
dec
aam
mov
xchg
mov
not
stos
mov
js
pop
jnp
ret
or
mov
imul
inc
outsl
xor
dec
ds
aad
js
jns
incl
iret
icebp
jne
xor
nop
ja
inc
jne
int
lods
loopne
jne
ja
cmp
jnp
pop
sub
leave
push
dec
jnp
addr16
aas
or
jnp
cmp
and
cmp
cmp
adc
sub
sbb
pop
notl
lods
dec
or
jnp
out
mov
and
cmp
sahf
movsb
pop
jae
inc
ret
ficoml
adc
jns
cwtl
in
hlt
xchg
rorl
lods
pop
lret
sbb
outsl
jnp
scas
sub
adc
dec
pop
add
add
xchg
adc
mov
out
jnp
sti
mov
jno
loop
jnp
sar
stc
push
dec
cld
dec
sbb
adc
jno
test
jnp
mov
cmp
aaa
jnp
add
push
data16
jnp
ret
test
pop
pop
cmp
cmp
inc
sub
jnp
cltd
inc
lds
lods
and
jge
pushf
dec
ljmp
fcmovne
outsl
fimuls
mov
fldcw
push
sti
xor
jae
lods
stc
es
pop
or
push
fs
inc
cmpsb
aam
jne
dec
xchg
stc
dec
pop
xor
jnp
dec
cmp
sbbl
mov
js
inc
call
pop
fbld
jae
push
outsb
ret
jnp
movsb
mov
jp
dec
into
push
testb
jbe
sub
movsb
repnz
jnp
call
push
mov
cmp
mov
es
and
cli
rcrb
sub
xchg
out
and
mov
cmp
dec
mov
es
lods
and
ss
jnp
test
ss
scas
jbe
sub
or
add
dec
clc
in
add
testb
mov
dec
es
pushf
dec
into
adc
das
adc
scas
cmp
cmpb
bound
fldt
popf
shll
das
jnp
pop
cmp
shr
dec
or
loopne
and
xchg
add
add
arpl
jns
mov
push
repnz
scas
add
lret
rcr
jno
mov
jnp
pop
rcll
mov
cmc
add
aam
dec
mov
pop
jb
dec
je
mov
cmp
sti
aam
jnp
pushf
repz
sarb
sub
and
popf
jne
negb
cmp
sbb
jnp
push
scas
mov
mov
repz
je
notb
jb
mull
mov
xlat
pop
call
jae
xchg
xor
test
repnz
shr
jb
loopne
jmp
pusha
mulb
inc
sub
imul
sbbl
ja
add
loopne
and
stos
jnp
and
dec
mov
mov
push
scas
stos
jnp
and
mov
cmp
push
fiaddl
insl
cs
sahf
jnp
orb
jnp
mov
imul
mov
insl
xor
sub
mov
and
mov
adc
aas
push
push
cmp
clc
repz
dec
out
mov
mov
xchg
inc
push
in
or
or
xchg
jg
or
mov
ficomps
cmp
cwtl
or
add
pop
mov
push
test
xchg
jnp
enter
cld
pop
aas
mov
jnp
or
loop
sub
push
cmp
or
cmpsl
pop
jno
sub
int
inc
pop
cmp
or
or
push
mov
or
fdivrs
mulb
inc
mov
clc
iret
mov
mov
mov
sub
lret
jae
cld
add
sbb
jle
sub
xor
sti
stc
out
jno
jnp
fdivl
add
test
lcall
jnp
mov
add
xor
loop
mov
daa
pop
imul
pop
scas
dec
and
jns
jnp
stos
or
push
sub
stos
lahf
mov
enter
mov
mov
push
mov
sub
jae
sahf
cltd
cli
daa
dec
fnstcw
sub
dec
pop
xlat
mov
cmp
xchg
xor
mov
mov
sti
ja
ds
lods
sub
jnp
add
xchg
cmp
pop
std
test
or
cltd
insl
dec
pop
cmc
daa
aaa
fwait
push
adc
adc
sub
es
das
outsb
mov
push
jp
mov
mov
jp
icebp
rcl
jnp
or
sar
jnp
cwtl
mul
test
mov
dec
cmpsb
lods
iret
or
out
sub
fdivs
jae
mov
mov
jl
push
sbb
cmp
inc
mov
xor
mov
sti
inc
lcall
mov
jg
and
outsl
lock
ja
adc
mov
shrb
fildl
lods
negl
jmp
push
aaa
ror
inc
repnz
jnp
add
and
cmp
loop
ss
fucomi
cmp
adc
jg
out
push
jge
popf
adc
ljmp
mov
repz
gs
xchg
cli
es
cmp
cmp
ror
xlat
or
xor
hlt
xor
mov
pop
sbb
push
sbb
cmp
mov
pop
pusha
fidivrs
enter
mov
cmp
or
xchg
in
shrb
je
jg
jb
cmpsl
loop
stos
ss
and
mov
jno
ds
ficoml
test
mov
idivb
xor
sbb
inc
jp
push
in
lret
jnp
pop
fwait
mov
push
sbb
dec
sbb
jnp
pop
nop
and
in
jnp
dec
pop
ror
mov
jnp
adc
movsl
ret
cmp
orb
in
jg
je
jnp
or
leave
cmpsb
xchg
mov
mov
andl
pop
arpl
lret
jbe
or
jnp
jp
mull
hlt
sub
sub
leave
loop
jmp
jnp
repz
mov
outsl
dec
cmpsb
mov
jnp
mov
pop
xor
jbe
out
loop
clc
mov
dec
es
fnstenv
test
mov
in
ds
insb
out
add
push
jnp
add
inc
mov
stos
add
lea
jg
cmp
ud0
jnp
inc
fwait
sti
dec
das
pop
lods
or
sbb
cwtl
loop
jnp
add
aam
js
aad
mov
or
fbld
imul
stos
mov
js
clc
insb
xlat
aaa
pop
jnp
inc
fldl2t
add
pop
lock
jnp
cmpsb
or
outsb
in
mov
nop
dec
jne
test
jnp
js
xlat
lcall
ret
inc
std
stc
jnp
and
cmp
lea
aas
mov
jp
or
adc
dec
insl
mov
jnp
mov
lret
sahf
lods
xchg
mov
xlat
ret
jmp
mov
int3
movsb
or
clc
push
sub
test
jnp
dec
xor
imul
mov
jo
nop
xlat
icebp
jnp
adc
xor
out
jnp
fldcw
fisubl
mov
sub
mov
cmp
cmpsb
cmp
enter
sub
sub
les
aaa
lret
aam
adc
dec
xlat
jnp
jbe
daa
stos
subl
call
mov
imul
sub
das
sarb
cmp
fdivrs
or
sbb
lret
loopne
sub
jnp
sub
pop
push
mov
fisttps
jp
pop
sub
cmp
scas
arpl
push
xchg
sahf
or
pop
outsw
mov
cmp
cmpsb
lock
cmp
fwait
mov
xor
lds
es
mov
cmp
testl
cli
jno
cmp
xchg
dec
push
clc
mov
mov
js
fwait
leave
jnp
cli
cltd
jmp
insl
jge
jno
in
jbe
cmp
cld
mov
jae
call
push
pop
dec
lods
xor
dec
sub
jb
cli
jne
pop
push
sbb
fdivrs
jae
pop
stos
daa
cli
aaa
lret
adc
mov
lret
cmp
add
dec
jno
xlat
adc
idivb
push
lret
inc
insl
sbb
jae
outsb
push
mov
mov
daa
sub
pop
dec
rcrb
xchg
sti
mov
in
cmp
mov
fdivrl
adc
ret
jp
or
mov
lret
cmp
add
outsl
mov
adc
xchg
mov
sbb
jnp
cwtl
pop
jbe
sub
mov
jnp
xchg
or
jnp
mov
testb
mov
out
sbb
add
adc
pop
cmpsb
nop
jnp
repz
jb
sbb
ljmp
scas
ficomps
cltd
push
jnp
xor
pop
repz
mov
ja
lret
sbb
sbb
xlat
pop
sahf
and
clc
daa
fidivl
sbb
imul
shrl
mov
lret
or
repz
xchg
outsb
mov
loop
dec
cltd
sbb
out
xchg
int3
je
enter
and
aad
mov
push
enter
jne
pop
and
xlat
in
shlb
arpl
cli
rcrl
scas
insl
xor
push
jnp
jg,pn
pop
in
loopne
in
cmc
jnp
sub
fadds
jne
mov
cmpsb
aaa
and
enter
sti
sub
push
in
test
fdivs
pusha
jnp
mov
es
mov
pushf
insl
jbe
fimull
in
push
sbb
out
and
mov
not
cli
ret
dec
in
in
leave
xchg
lcall
hlt
int
jle
mov
and
sub
adc
sbb
xor
pop
xchg
xchg
insl
xchg
outsb
cmp
or
lret
shll
jo
cld
lock
in
jnp
and
xor
or
and
jne
cld
sbb
es
pop
loopne
sbb
jnp
adc
lock
xchg
pop
cld
sbb
rolb
test
scas
cmpsl
repnz
sub
jnp
push
mov
xor
mov
ds
dec
cmpsl
jnp
sbb
iret
jnp
movsb
cli
call
cmp
pop
mov
sbb
jae
fisttpl
pop
cmp
or
cmp
mov
pop
je
or
repnz
jnp
jmp
sub
xor
jns
dec
jae
cmp
jnp
mov
inc
lods
inc
jnp
mov
xor
clc
outsb
push
jae
add
out
jl
mov
sbb
clc
jnp
adc
ja
mov
fisubl
jne
dec
inc
jnp
lods
add
jl
push
adc
movsl
cmp
insl
mov
repnz
mov
fdivs
sbb
aaa
dec
or
cmp
jne
ja
hlt
jno,pt
jnp
mov
decl
jge
std
repnz
loopne
jnp
imul
mov
sub
jnp
shlb
adc
adc
test
or
jb
int3
add
aas
in
mov
jl
ficompl
adc
jnp
das
lock
jnp
mov
cmp
mov
jnp
lods
sub
mov
js
cmp
in
lahf
ss
jb
stc
push
mov
jo
divl
jnp
fdiv
xchg
scas
arpl
fwait
ja
adc
mov
fmuls
jnp
mov
fmuls
xor
aas
hlt
jae
mov
xchg
out
je
int3
xor
cmc
and
mov
jne
dec
or
xor
mov
test
sbb
sahf
cwtl
das
dec
jnp
idivb
mov
jno
mov
mov
mov
sub
mov
imul
jb
mov
rcl
jnp
test
in
xchg
jmp
cli
and
fmuls
lods
push
mov
pop
repz
sub
mov
out
insl
test
cmp
shl
and
add
mov
sub
repnz
data16
cmc
cmp
pop
mov
or
movl
sbb
cmp
bound
stos
repnz
lcall
pop
insb
je
mov
fisubl
dec
or
xlat
jnp
or
inc
jb
jnp
or
jnp
push
cmp
mov
lds
sub
sti
andl
and
dec
arpl
js
imul
inc
jb
inc
jae
xchg
stos
jnp
in
mov
fstpt
dec
cmp
lods
ja
mov
lret
sbb
fnstsw
dec
shrl
jno
idivb
push
js
or
add
mov
stos
jnp
add
fucomi
outsb
hlt
inc
jnp
cs
mov
in
dec
jnp
ret
scas
and
cltd
jae
sbb
jb
inc
je
sub
sbb
leave
mov
ja
pop
sbb
sbb
call
pop
ss
stos
imul
sub
cli
mov
dec
jnp
outsb
pop
mov
jnp
sub
cmp
lods
xchg
std
fisubrs
imul
inc
jecxz
mov
jnp
dec
stos
xchg
jo
adc
or
ret
or
ja
bound
mov
stc
mov
jns
pop
jo
daa
push
sub
pop
mov
pop
jae
sahf
je
jnp
decl
fwait
mov
xlat
in
scas
clc
aaa
cmpsb
out
shll
pop
cmp
ds
ret
sbb
mov
std
jmp
push
inc
inc
cltd
sub
hlt
mov
cli
pop
mov
es
daa
cmp
hlt
sbb
sti
jno
fwait
mov
mov
sub
jb
xchg
divl
xlat
cmpb
scas
jns
jnp
es
iret
mov
or
mov
dec
xlat
cs
inc
pop
jmp
out
shrb
xor
js
jg
in
outsl
loope
sti
mov
jnp
stc
jno
mov
movsb
jnp
pop
aaa
fmuls
sti
or
dec
jae
repz
mov
mov
mov
xchg
add
or
sahf
jnp
push
repz
jnp
jmp
cmp
jnp
push
ja
and
mov
jnp
repz
rorl
fisubrl
sbb
jae
movsl
jmp
cmp
in
data16
sub
dec
jbe
xor
inc
push
xorl
xchg
pop
xchg
neg
cmp
fistpl
scas
ss
jmp
sub
subb
jnp
lods
int
mov
imul
xor
cli
sbb
pop
insb
js
and
xor
dec
dec
or
dec
imul
push
outsb
sbb
aaa
add
jnp
stc
loope
and
mov
mov
add
mov
fcoms
leave
push
cltd
cmp
jne
pop
repnz
dec
xor
jnp
les
imul
ds
jbe
pop
mov
lret
lods
jnp
xlat
cmpsb
test
add
jnp
fiadds
pop
cmp
jnp
pop
fstpt
lock
aas
loopne
sti
cmp
imul
ljmp
aaa
cmp
add
outsb
sti
mov
or
mov
or
adc
lods
fcomi
imul
jbe
cmp
shrb
sub
xchg
jnp
rcll
lock
cmp
daa
jnp
pushf
or
pop
cld
mov
fistpl
divl
xlat
dec
inc
jnp
and
mov
jp
pop
pop
push
sti
add
xchg
fucomip
jae
jb
aaa
pop
vfmsub213ps
xor
lock
ficompl
ljmp
stos
aaa
jno
pop
cmp
cmp
sub
jae
mov
and
jnp
mov
iret
or
mov
sub
mov
aaa
test
call
scas
in
aas
lds
lret
or
aaa
jge
cmp
fidivrl
fs
push
pop
push
fadd
xchg
rolb
in
outsb
popa
dec
or
dec
sub
jbe
test
subl
xor
pop
jo
push
push
mov
ja
inc
xchg
jnp
add
ljmp
nop
sbb
sarb
pop
jnp
xchg
loopne
mov
negb
imul
push
fdivr
push
mov
outsl
fcoms
lahf
xchg
stos
ss
arpl
jae
hlt
pop
shr
outsl
fbstp
pop
pusha
sub
lcall
movsl
adc
iret
mov
jmp
add
inc
loop
ss
testl
aas
jne
sbb
dec
jnp
addr16
fbld
mov
lods
test
sarb
pop
xchg
sub
je
dec
ss
ret
aaa
add
repz
cmpsl
imul
cwtl
sbb
js
lods
jns
mov
ja
mov
outsl
xchg
xchg
mov
sti
ret
jnp
cwtl
loop
inc
mov
sarl
rcll
fsts
adc
push
sbb
jne
enter
lods
and
sbb
jae
xchg
imul
or
divl
add
lret
jnp
pop
ljmp
and
stos
popf
push
test
lods
push
cmp
jmp
xchg
cli
mov
lods
and
mov
push
mov
fsubr
xchg
jne
jnp
or
cwtl
mov
sbb
fsts
cmp
sub
enter
aad
leave
mov
or
les
mov
jnp
cmpb
imul
in
and
repz
arpl
out
xor
pop
sahf
inc
jl
sti
sub
fdivrs
loope
lea
lds
or
je
jae
sti
insb
shrb
jnp
push
hlt
ret
int
jnp
mov
mov
mov
adc
cmp
clc
rorl
sbb
lcall
push
addr16
orl
test
mov
pop
in
pop
or
fwait
movl
mov
mov
xor
or
testb
or
cli
xorl
jl
movsb
aaa
repz
push
sbb
or
pushf
les
jnp
xor
lods
xor
jmp
icebp
loope
lret
test
jnp
out
ss
pusha
mov
push
dec
jo
out
jnp
shll
or
cmp
aaa
mov
outsl
mov
jp
jnp
pop
mov
or
and
addr16
std
adc
xor
lods
ret
ja
sub
lret
jnp
data16
mov
xorb
sbb
loop
mov
inc
insl
pop
jnp
sbb
jo
push
outsb
imul
mov
fsubl
xchg
int
jge
test
jae
ds
pop
xchg
mov
fimuls
fisttpll
mov
jnp
lods
hlt
adc
in
mov
jp
mov
dec
jnp
stc
ror
mov
das
jmp
subb
iret
fdivrl
mov
dec
aas
or
je
add
icebp
jp
shl
outsl
xor
rcrb
xchg
mov
loop
std
aad
icebp
fs
bound
or
sarb
clc
xor
aas
mov
or
js
cmpsl
jns
pop
sub
stc
add
scas
sub
imul
fisubrl
xchg
jns
add
jb
jg
ja,pn
or
push
js
lret
mov
jne
xor
ja
fucomi
aaa
mov
xor
insl
sbb
insb
sbb
jnp
sub
decb
push
mov
hlt
cmp
sub
mov
loopne
fwait
cmpsb
mov
mov
aas
ds
cmp
dec
sub
jnp
jns
mov
jnp
inc
lock
stos
mov
jge
jnp
in
lret
mov
jb
jnp
add
add
stos
popf
xor
cmpsb
icebp
jnp
js
lock
jnp
fucomp
shrl
out
insb
jecxz
cmp
mov
das
test
enter
daa
mov
jnp
mov
int3
repnz
inc
mov
mov
jne
test
adc
in
cmc
inc
ret
pusha
outsb
inc
mov
add
pop
mov
mov
psubw
lods
xor
inc
sbb
xor
push
xchg
sbb
fildl
iret
insl
mov
mov
js
cmp
daa
sti
in
sbb
addr16
mov
lods
rorb
mov
mov
xchg
inc
jae
fnstsw
sbb
fmul
xchg
jg
and
adc
addr16
inc
imul
mov
cmpsb
dec
ret
mov
cli
subl
jae
je
clc
mov
fistpll
punpckhwd
cli
lret
sahf
jnp
loopne
sub
dec
jne
lock
dec
mov
clc
pop
repnz
cmp
scas
jecxz
jo
pop
sahf
xor
addr16
clc
outsl
xor
test
sbb
in
rcl
or
pop
movsl
shrl
sbb
ja
ficompl
in
in
jnp
or
pop
nop
aam
mov
fcoms
mov
or
idivb
sub
xchg
ja
ret
jp
fwait
lcall
fwait
xchg
push
out
push
xlat
movsb
test
lods
pop
xor
popa
ret
fwait
push
lea
mov
cli
jp
or
sahf
push
lock
loopne
mulb
outsl
outsl
js
jnp
icebp
fndisi(8087
les
test
popf
dec
push
pusha
xor
pop
ljmp
fcomip
lea
xchg
inc
xchg
xor
jnp
jb
inc
cwtl
mov
jnp
hlt
fsts
iret
std
imul
loopne
rorb
in
call
dec
int
inc
xlat
clc
jnp
cltd
jg
sub
mov
insl
mov
testb
lock
js
sbb
out
cwtl
call
mov
in
jmp
cmpsb
jmp
mov
arpl
pop
imul
bound
sbb
in
dec
cmpsb
pop
lock
push
loop
jnp
lret
test
into
push
lods
jb
xchg
cwtl
dec
inc
cld
sub
hlt
shlb
inc
or
jnp
mov
js
or
inc
add
sar
imul
cmp
push
mov
xor
outsb
out
dec
cmp
jmp
jno
sti
outsl
pop
mov
xor
cli
inc
jge
sbb
xchg
ljmp
pushl
or
push
ss
scas
jnp
decb
pop
lods
cmpsb
mov
xchg
push
jnp
or
cmp
jbe
jge
mov
sub
adc
cli
fildl
sub
int3
jnp
movsl
sti
jp
mov
jnp
loope
mov
aam
dec
inc
movsb
pop
pushl
dec
and
cmp
lcall
ja
jns
shrl
sbb
jmp
xchg
adc
cmp
dec
jnp
ret
addb
std
insb
xor
js
aad
mov
pop
decl
pshufw
sti
push
arpl
inc
jnp
js
icebp
das
jg
add
fidivrs
scas
add
aaa
jnp
inc
stos
insb
fildll
xchg
jnp
test
lea
jmp
jb
mov
insl
mulb
loop
jmp
cltd
test
jae
cmc
in
mov
test
xchg
sub
jae
xchg
inc
repz
jnp
cmp
stc
sub
jnp
arpl
inc
pop
cli
mov
sub
and
bndldx
adc
adc
xlat
pop
daa
push
or
mov
test
mov
jb
shrb
pop
adc
dec
jecxz
hlt
mov
push
fidivrl
lea
jle
outsl
sti
add
jo
aad
cld
mov
push
pop
adc
mov
lods
clc
jnp
cs
pop
cmc
aaa
mov
pop
shrl
popf
in
adc
arpl
and
jnp
popa
inc
mov
or
push
loop
dec
mov
pop
jnp
iret
push
sbb
push
fistpl
leave
es
fsubs
mov
xchg
jns
xor
stc
xchg
dec
pop
in
pop
lock
jnp
or
jnp
xchg
lea
stos
add
rcll
je
xchg
ret
jb
jmp
push
pushf
sarb
add
sub
jnp
pop
pop
addr16
jg
shl
or
jl
jmp
xor
orl
ret
sahf
adc
fdivp
outsl
js
jnp
mov
or
jnp
ret
fstps
popf
into
jne
xor
adc
out
aaa
lds
outsl
test
jnp
mov
call
dec
xlat
scas
jno
sbb
inc
scas
jo
sub
testl
cmp
out
pushf
dec
stos
mov
cmp
mov
push
push
mov
jnp
xlat
jns
popa
add
fdivp
cmp
shrd
cmp
push
mov
sbb
push
xchg
sbb
jnp
push
push
xchg
repz
mov
inc
and
insl
lds
enter
jae
xchg
sub
mov
in
in
mov
sub
fdivp
call
mov
in
xor
push
sub
jo
stos
int
dec
fimull
cmp
inc
mov
mov
xor
stos
push
leave
sbb
adc
js
sti
out
das
scas
lds
or
jns
cmpsb
pop
pop
mov
sub
push
jae
mov
lret
lods
push
inc
repnz
pop
mov
mov
mov
data16
test
jnp
ffreep
test
stos
ficoms
mov
out
cmp
loopne
inc
mov
jnp
or
or
into
cmpsb
pop
outsb
jle
imul
xchg
push
lods
in
jnp
js
dec
cmp
mov
pop
pop
jnp
test
mov
jnp
dec
sbb
mov
jmp
or
dec
xchg
xchg
ss
out
dec
adc
pop
dec
jge
cmp
fidivl
lea
call
lock
and
insl
jnp
cmpsb
notl
shlb
dec
jnp
xor
jecxz
mov
setnp
adc
jo
and
jnp
dec
dec
loop
sub
add
std
nop
add
in
or
mov
cld
xorb
pop
idiv
jnp
fcoms
jmp
and
push
jnp
jae
out
dec
repnz
fwait
negb
jp
dec
out
into
pop
imul
jne
cmp
mov
cld
cmpsl
jae
xchg
shll
imul
jae
int
cld
in
cmp
icebp
inc
loop
or
lods
xchg
andl
jecxz
jo
imul
dec
cmp
jnp
loop
cmc
sti
add
lods
jnp
aaa
jle
imul
mov
sbb
jp
dec
inc
jnp
sbb
xor
cmp
jnp
sub
cmp
jnp
adc
out
imul
xor
daa
add
jp
sbb
cmp
bound
fs
sti
jge
inc
nop
enter
xor
xor
cwtl
mov
call
mov
repnz
push
jnp
cmp
xchg
sub
push
jae
dec
add
mov
shrb
imul
mov
xchg
and
or
xlat
adc
jae
ficomps
outsl
dec
push
sti
or
sub
cmp
jne
mov
cmpb
fstps
mov
sub
arpl
cmp
mov
loopne
and
inc
ret
cmp
mov
and
cmp
fsub
push
jnp
ret
test
add
repnz
inc
jns
bound
pop
popa
cmp
jnp
mov
inc
das
mov
lret
lods
or
xchg
gs
mov
or
dec
adc
xor
test
inc
jae
cmp
aaa
jnp
cmpl
fs
das
test
lret
jge
dec
jle
nop
data16
incl
test
jnp
sub
std
or
lret
pushf
jle
xchg
pop
mov
mov
in
aas
lcall
mov
ficompl
aaa
inc
mov
fcmovne
scas
mov
pop
mov
mulb
cs
sahf
into
push
cmp
cmp
jnp
mov
adc
sbb
add
lock
jnp
rolb
fdivs
jnp
mov
lods
test
xchg
pop
jnp
ljmp
jnp
jmp
ret
lods
mov
rorl
mov
fisubrl
mov
add
jnp
les
enter
sub
or
xor
das
inc
sarl
xchg
sub
push
mov
jnp
pop
fidivrl
cmp
push
arpl
sahf
ss
out
cmpsb
mov
in
xorl
adc
adc
jne
outsl
dec
bound
pop
jmp
jnp
inc
xor
adc
ljmp
push
sub
jle
jae
scas
test
xchg
shl
mov
cmpsl
add
sub
or
fcmovnu
in
push
sub
cli
jnp
leave
iret
cmp
dec
cmp
mov
ret
in
aaa
test
inc
lahf
push
dec
cmp
jle
cmp
lret
pusha
sahf
jp
sub
shlb
dec
jnp
adc
xchg
insl
or
les
mov
insl
icebp
outsl
mov
fdivrl
dec
push
mov
enter
ljmp
loop
hlt
mov
mov
cmp
dec
dec
fdivrs
mov
lock
repnz
mov
icebp
jno
leave
jnp
add
sbb
and
jnp
rol
outsb
ds
test
or
and
sahf
jecxz
call
clc
ss
sub
jo
loope
jnp
sub
mov
stos
outsl
fstpt
cltd
arpl
push
jae
subb
lods
mov
jnp
dec
jmp
and
lds
sub
jle
es
repnz
jp
sbb
dec
adc
into
jbe
inc
inc
daa
fdivrs
stc
leave
idiv
mov
out
sub
jnp
xchg
jge
pop
adc
mov
lret
cli
aam
clc
fnstsw
or
dec
pop
outsl
sub
outsl
aaa
dec
ret
in
cmp
inc
or
push
push
ja
sahf
cmp
and
stos
insb
or
cmpsb
cmp
test
lret
lcall
sub
pop
jp
outsl
pop
jp
and
sahf
lahf
stos
add
pop
mov
xchg
mov
push
push
into
jno
sub
in
pop
mov
and
lods
jae
out
jnp
scas
jmp
stos
push
and
cmp
ljmp
imul
cmp
shll
xor
ljmp
sub
stos
pop
outsl
dec
cs
jg
or
xor
into
psadbw
sbb
sub
imul
leave
in
gs
cmp
ljmp
mov
and
stos
je
mov
jecxz
sub
xchg
cmp
xchg
push
call
inc
test
sub
mov
pop
jle
lods
push
jmp
std
arpl
imul
ljmp
add
pop
dec
xor
cmp
in
cmp
jecxz
lret
loop
out
popf
idivl
into
mov
jne
ret
fcoms
mov
mov
push
and
fldt
mov
cmpsl
pop
imul
data16
mov
scas
mov
sub
rclb
stc
jae
sbb
movsb
leave
pop
cmp
lods
dec
sbb
mov
fdivr
sub
jnp
ret
cmp
out
sahf
jnp
das
xchg
cmp
mov
jne
into
popf
lret
add
repnz
push
cmpsb
das
imul
jo
mov
test
call
pusha
xor
outsl
add
mov
add
das
push
f2xm1
je
sbb
lods
cli
pop
sub
adc
xor
mov
sbb
std
js
lock
or
cmp
or
lods
les
xchg
sub
sbb
cmc
mov
out
jnp
imul
call
leave
aas
test
mov
mov
xor
inc
lcall
mov
out
scas
icebp
call
mov
cmc
xchg
lret
xchg
mov
or
mov
cmc
or
dec
jo
sub
cli
pop
outsl
jae
mov
repnz
mov
jo
push
ja
dec
sub
cli
dec
int3
hlt
lods
xor
push
sub
mov
lods
stos
mov
imul
xor
es
repz
dec
mov
shll
jmp
ja
es
dec
int3
jmp
jo
jnp
inc
mov
in
add
leave
xor
dec
pop
sbb
loopne
or
lods
mov
sbb
gs
xor
sub
push
xor
push
sarb
jnp
lods
jle
mov
sti
test
mov
enter
aam
or
imul
dec
pop
sbb
or
fucomip
aaa
mov
int
into
jg
push
sub
rcrb
dec
sti
stc
mov
scas
inc
aam
and
sbb
fs
xor
movsb
in
les
mov
cmc
push
ret
aad
dec
add
mov
cmp
adc
or
movb
mov
lods
jnp
rorl
in
in
sub
mov
mov
lcall
movsb
dec
mov
cs
lods
push
aaa
aam
adc
xor
jnp
ret
lods
sbb
xlat
cmc
clc
stos
les
inc
out
add
xor
hlt
shll
ljmp
enter
push
sub
lods
jnp
shl
inc
insb
inc
pop
jnp
cmc
cmp
leave
push
mov
and
pop
outsl
jbe
in
lret
mov
sbb
xor
cli
jle
jp
mov
lods
call
pop
xor
es
mov
jp
std
stos
insb
pop
movsl
ja
add
jnp
insb
or
adc
sbb
mov
imul
lea
jnp
fsin
test
loop
jnp
pop
xchg
sub
bnd
test
pop
lods
sbb
inc
ret
out
outsb
out
dec
mov
pop
mov
jnp
movsb
mov
out
hlt
dec
mov
xor
bound
cmp
fadd
mov
sbb
fcmovb
sbb
xor
mov
inc
mov
lods
mov
test
fs
lock
jno
jnp
push
sarl
mov
xor
mov
fdivl
xor
xchg
push
jb
jnp
sub
aam
insl
jnp
push
xchg
sbb
jnp
pop
jl
sti
aaa
mov
or
sub
ljmp
stos
bound
jns
mov
addr16
stos
cs
jnp
jl
cltd
mov
in
es
xchg
jns
jmp
jnp
inc
shll
add
push
push
in
sbb
popf
xchg
notb
and
dec
jnp
push
loope
arpl
imul
lahf
sbb
push
pop
outsl
jne
pop
mov
daa
scas
adcb
fildl
sbb
push
fsts
icebp
mov
xchg
jnp
fidivrl
mov
int3
aad
add
mov
sub
sarb
loop
jnp
inc
or
push
jg
mov
jne
adc
movsb
outsl
stc
sub
shlb
jbe
data16
and
cmp
loop
ja
sub
fdivrs
dec
push
xor
movsb
loopne
insl
movsl
aas
je
mov
imul
cmpsl
ret
aad
or
jnp
or
pop
inc
cmpsb
or
repz
cmp
push
sub
xchg
xchg
jnp
ljmp
scas
add
push
imul
popa
out
mov
in
test
orl
cwtl
sbb
ds
cmp
insl
push
mov
cmp
and
jbe
jge
fidivs
imul
cs
inc
jnp
ja
push
pop
ljmp
add
or
cli
sbb
mov
dec
stos
xchg
jle
jnp
cmp
insl
aaa
dec
pushf
mov
ss
lret
jb
mov
jnp
dec
fidivrs
xor
mov
clc
imul
sub
lret
mov
inc
jns
sbb
xlat
mov
inc
adc
sub
popf
fildl
fsubs
jnp
std
mov
mov
arpl
jnp
movb
mov
test
cmp
gs
pop
jnp
stc
out
test
cmc
push
pop
test
cwtl
imul
mov
test
cmp
xor
mov
imul
popw
cmpsb
jno
push
jnp
jmp
int3
mov
cmp
ja
outsl
out
jbe
adc
jnp
scas
ror
or
fdiv
mov
stos
in
mov
xchg
jnp
cwtl
js
sub
jnp
lret
mov
inc
jnp
sahf
mov
jnp
lods
push
imul
leave
xchg
lret
aaa
jnp
lahf
jns
xchg
and
cmc
bnd
pusha
popf
or
jae
pop
cmp
inc
cli
or
repz
jnp
popa
mov
sbb
stos
mull
dec
lahf
lcall
dec
int3
sbb
cmp
out
jb
loop
jnp
bound
mov
push
push
sbb
rcrb
sub
popf
jnp
and
xor
inc
ret
jnp
out
lcall
es
or
daa
pop
mov
xor
loope
jbe
jnp
mov
push
sbb
xchg
mov
call
hlt
or
cmp
dec
in
adc
mov
and
cmc
inc
outsb
daa
sbbl
jnp
ja
inc
sub
enter
push
and
hlt
sub
inc
test
xor
pushf
sbb
jne
dec
jb
jp
jo
aaa
mov
dec
pop
jnp
dec
sti
and
cmc
imul
jnp
mov
sbb
jnp
aas
push
dec
jnp
imul
out
lea
jnp
dec
or
test
js
push
stc
repz
aam
adc
or
mov
jne
push
xor
repnz
sahf
insb
adc
aaa
fisubrs
arpl
je
adc
sbb
add
dec
inc
jnp
in
fldt
push
ja
push
sbb
adc
sti
leave
fidivl
inc
adc
mov
mov
out
mov
or
adc
pop
inc
scas
test
insb
jmp
dec
nop
mov
pop
xchg
call
idivb
pop
ljmp
gs
jne
cld
dec
out
sbb
andl
push
pop
cmp
fimull
and
out
cmpsb
pop
movsl
outsl
or
shlb
pushf
add
out
js
or
mov
add
add
outsl
iret
mov
cmpl
xor
lds
jmp
jnp
aad
lods
out
inc
in
jnp
xchg
fldt
lret
insb
jnp
pop
xor
dec
jnp
imul
mov
jnp
in
mov
test
push
push
jnp
es
push
xor
and
jb
aam
in
jno
jmp
lods
pop
inc
sbb
ja
cmp
push
out
jnp
adc
pop
jl
lahf
mov
or
mov
sub
mov
arpl
repz
jge
push
add
push
or
nop
push
xchg
cmp
pop
in
leave
test
jae
pop
mov
pop
ja
inc
sbb
sahf
push
jnp
and
add
addr16
hlt
cmpsl
pushf
mov
daa
repz
rcrl
ss
je
cltd
jnp
ret
and
push
enter
dec
int3
jae
out
fidivrs
jae
or
aam
or
jnp
cmp
cmp
fisttpl
outsl
pop
mov
jnp
fidivrl
mov
lea
mov
cld
jnp
xor
bound
in
lret
movsb
imul
loopne
in
xor
jnp
mov
add
in
iret
jae
sbb
mov
jge
pop
mov
leave
mov
add
dec
sub
jnp
mov
das
enter
xchg
addr16
cli
incl
cmpsl
mov
cmc
lret
cmpb
lcall
es
popf
fdivr
das
fnsave
jo
dec
cwtl
push
loop
dec
or
cs
in
jge
adc
test
sbb
mov
arpl
insl
outsb
out
clc
xor
mov
fstpl
xor
mov
clc
pop
mov
jae
add
idiv
add
jnp
cmp
cwtl
cltd
sub
adc
cmp
mov
mov
jp
jg
sahf
lret
fstpt
or
inc
sub
lret
dec
push
sti
repnz
je
decb
jmp
xchg
sbb
jb
lods
cmpsl
stc
lods
aaa
jnp
and
adc
or
cltd
jnp
xchg
dec
mov
sbb
or
loope
push
or
push
xor
dec
jle
xchg
mov
ja
jns
imul
pop
pop
jnp
push
shl
push
mov
sbb
divb
push
jne
xor
test
das
pop
ret
mov
cmc
hlt
out
loopne
lret
dec
rclb
sti
push
insl
jnp
sub
mov
cmp
das
outsl
mov
jmp
jnp
movsl
fucomip
add
negb
out
mov
inc
xor
ss
aam
ja
das
es
ret
jnp
sbb
lds
inc
fidivrs
jnp
adc
aaa
mov
dec
add
sbb
dec
les
mov
mov
jnp
xor
push
cmp
ss
ja
mov
sbb
sarb
daa
stos
subl
xor
leave
push
insl
pop
push
loopne
push
xor
jnp
and
repnz
add
int
xchg
sub
mov
je
popa
push
mov
xor
jp
cmp
lods
fwait
add
mov
sub
imulb
jae
data16
cwtl
outsb
xor
jnp
adc
scas
testb
das
popa
jp
out
mov
sub
lods
jg
clc
mov
pcmpeqw
rol
clc
jnp
adc
cmpsl
scas
js
jnp
stos
xor
mov
jl
xchg
lock
and
or
aaa
sub
dec
fldt
mov
jle
clc
loopne
in
out
dec
jnp
enter
mov
cmp
ja
and
adc
mov
adc
test
rcrb
cmp
and
jmp
cmp
in
mov
jno
jo
cmc
lea
or
mov
insl
jne
cmp
push
mov
jnp
aas
sbb
imul
imul
mov
imul
push
push
cld
sti
jne
mov
es
insl
pop
dec
xor
sbb
lcall
outsb
cmc
sub
mov
xlat
sub
and
jg
test
imul
scas
ljmp
mov
mov
mov
in
lods
dec
sub
jnp
je
in
fiaddl
mov
jnp
sub
push
push
mov
mov
jmp
add
or
xor
popa
push
cmc
test
mov
cltd
mov
jp
jae
and
and
cmpb
and
insl
dec
les
add
cmp
hlt
sub
ljmp
sub
jnp
jle
cmp
movsl
daa
cli
sub
jnp
test
out
jae
inc
inc
call
sub
stos
movsb
sub
jnp
rcrl
jp
cmpsl
inc
movl
sub
sbb
outsl
inc
or
xchg
jnp
add
insl
pop
inc
xchg
push
sbb
out
scas
repnz
push
jnp
es
fidivrl
cmp
and
out
sbb
jnp
cmp
ficompl
ss
jae
sbb
mov
lds
out
mov
in
pop
push
loop
xchg
ss
push
dec
xor
mov
leave
aas
imulb
and
es
mov
outsb
dec
xlat
imul
cmp
adc
outsb
ja
aaa
das
sub
jnp
ret
mov
jge
inc
call
jnp
pop
adc
fbld
subl
lods
mov
mov
jnp
xchg
inc
imul
bound
adcl
push
clc
jnp
out
inc
iret
int
cli
cmp
push
lret
scas
lret
cvtps2pd
xor
repnz
mov
fidivrl
dec
stc
fsubl
movsb
sbb
shrd
mov
shlb
pop
fdivl
scas
push
jae
stos
js
jge
sbb
sbb
adc
stos
scas
or
push
xor
lock
mov
mov
inc
mov
out
out
jne
jnp
in
xchg
sbb
fs
mov
insl
stc
out
popa
jmp
cmpsl
fucom
mov
xchg
in
and
adc
stos
push
mov
sub
mov
in
pop
leave
iret
push
xchg
mov
adc
xchg
xor
lret
push
out
int3
testb
cmpsb
inc
ja
orl
test
pop
xchg
jnp
jp
sarb
inc
mov
js
aad
or
dec
shrb
dec
insb
cmpsb
mov
sub
jnp
xor
sub
shl
pusha
sahf
jae
test
pushf
in
jae
dec
push
mov
das
mov
repz
mov
mov
adc
cmp
inc
dec
fwait
hlt
lret
pop
push
int
cltd
adc
jno
or
jnp
xor
pop
dec
jbe
mov
sarl
clc
jae
fsub
or
inc
es
mov
push
push
push
lods
jnp
sub
cmp
or
mov
stos
xor
jnp
xor
pop
incl
mov
inc
imulb
scas
xchg
fidivrl
lea
fnstcw
loope
mov
sbb
inc
cmp
and
in
sub
mov
jae
adc
jp
jb
mov
cmp
mov
imul
or
loop
jnp
and
add
jnp
sub
mov
add
ss
jnp
into
movsb
cld
jnp
xchg
cmpsb
jge
and
hlt
jnp
cwtl
sahf
ret
pop
sarb
int
imul
fldt
repz
scas
ret
subb
test
fdivrs
arpl
in
add
push
sti
inc
mov
mov
jnp
cmp
mov
mov
mov
sti
xor
outsl
mov
scas
pop
clc
dec
aas
or
es
add
or
stos
add
lcall
daa
jns
mov
jnp
sub
repnz
inc
mov
jnp
call
jae
jnp
daa
mov
xchg
inc
add
jp
sub
push
mov
gs
subl
out
in
sub
xor
adc
into
mov
mov
subb
cld
and
scas
js
and
adc
out
cmp
outsl
jns
xchg
pop
dec
push
jnp
dec
negl
sub
cmp
jae
inc
or
adc
adc
push
mov
push
push
das
lods
or
shl
jnp
jge
and
or
jne
popf
outsb
test
mov
sub
push
imul
pushf
cli
mov
jnp
sub
mov
cmp
bound
sub
cwtl
cmp
jbe
stos
xor
out
mov
mov
xchg
sub
inc
ss
jbe
icebp
sub
and
cmpsb
into
push
js
cwtl
das
sbb
fwait
xlat
xor
fnstcw
out
loop
jb
ss
or
out
mov
clc
jno
icebp
and
mov
adc
bound
hlt
sub
iret
clc
sub
lods
insl
jnp
cli
fsubrl
aad
jae
adcb
popf
stos
insl
fisttpl
test
jbe
test
and
add
pop
lock
sbb
dec
xchg
js
lret
cmc
sub
jne
add
xor
sbb
pop
in
insl
cmp
sbb
lahf
ret
xchg
ss
jmp
popf
jb
dec
jns
sub
leave
mov
scas
fdivrs
sub
dec
sub
fists
repz
sub
cmp
push
xlat
jb
pop
test
sbb
jo
or
mov
sbb
lret
fcomi
or
xor
and
fdivs
adcb
outsl
sub
xchg
xlat
cmp
ja
mov
mov
jecxz
jb
push
scas
stos
add
test
das
jne
xchg
pop
mov
jns
repnz
sti
jecxz
icebp
fucomip
jae
add
jge
pop
in
test
imul
inc
aam
loope
pop
inc
xor
or
ja
mov
jnp
cmc
into
push
add
sub
jp
lcall
ret
pop
add
mov
xchg
mov
shlb
jnp,pn
pusha
push
push
or
mov
lret
cli
mov
insl
fs
cmp
incb
mov
cwtl
sub
jnp
sbb
sbb
xorb
ss
andl
aad
push
jge
into
jnp
xor
popf
lds
lcall
dec
mov
cld
jnp
lods
scas
mov
jnp
sbb
lcall
and
scas
mov
inc
lea
test
fisubl
mov
cmc
shrb
popl
sub
xor
daa
imul
cmc
mov
inc
sti
and
sbb
sub
jnp
insb
jo
mov
jnp
xchg
pushf
dec
aaa
jne
pop
xorl
andl
inc
pop
imul
in
fwait
jnp
lret
dec
or
jnp
jns
out
aas
addr16
jnp
popa
pop
ja
push
lret
pop
lcall
cmpsb
cmp
jnp
cmc
xchg
ljmp
dec
mov
fldl
imul
mov
cmpsb
jns
outsb
add
pushf
mov
sub
inc
call
dec
cmpsb
xchg
xchg
cmc
js
lahf
inc
fdivrs
ja
out
ja
dec
xchg
js
mov
push
jb
cmp
dec
xchg
jnp
call
imul
sti
test
xchg
in
ja
mov
ret
outsl
cmc
push
sub
or
pusha
and
cmp
sarb
fisttpl
jbe
dec
test
je
jnp
sbb
xchg
les
mov
scas
add
decb
lcall
cmp
into
fcompl
js
cmp
cmc
mov
js
sbb
cmpb
call
cmpsl
frstpm(287
mov
fwait
cmc
mov
push
add
sti
jnp
xor
iret
testl
xor
in
and
xlat
loop
jecxz
std
pop
xor
ss
adc
jge
fistpll
xchg
sarl
sti
idivb
jnp
and
insl
fisubrl
sbb
dec
aam
mov
jl
cmp
out
dec
jmp
divl
jnp
daa
pop
or
mov
xchg
cmp
in
ja
mov
dec
imul
ss
sub
add
nop
xchg
int
orl
inc
or
push
and
sub
scas
lods
xchg
cmpsb
fstpt
dec
stos
outsl
cmp
inc
pop
sub
push
call
jp
jns
and
call
xchg
mov
sbb
push
mov
mov
popf
jnp
pop
loop
cmp
ret
fisubrl
dec
mov
cmpsl
mov
jne
inc
cmc
jnp
idiv
js
and
leave
jnp
pop
mov
insl
cmpsl
jnp
clc
sub
jmp
add
or
sbb
sbb
push
mov
fs
jnp
mov
or
sub
xor
mov
push
cmp
mov
hlt
jnp
xchg
call
aaa
cmp
jnp
test
push
sbb
push
mov
or
xchg
shll
shll
or
mov
je
mov
aaa
pop
and
sbb
lret
dec
sti
hlt
sub
adc
mov
mov
aam
pop
fsubrs
mov
loop
xchg
mov
dec
stos
imul
or
adc
jnp
ss
mov
jnp
test
dec
imul
dec
cmp
mov
js
ljmp
xchg
arpl
jg,pn
ss
out
sub
movsb
popa
jnp
pop
insl
lret
jnp
and
cmp
pop
jnp
mov
dec
xor
push
ficompl
dec
in
movsb
aaa
mov
push
aad
imul
dec
ja
adc
insl
cmpl
dec
sti
fwait
imul
into
jg
gs
lock
fucompp
insb
je
enter
fmull
pop
cltd
xlat
imul
fnsave
sbb
jnp
out
stc
mov
mov
mov
repz
mov
fsubr
mov
dec
cmpsl
divb
sbb
or
fisubl
xlat
lods
dec
sub
adc
push
dec
or
movsb
js
cld
mov
jnp
ss
hlt
dec
stc
cmp
add
push
jp
cli
sub
jnp
imul
mov
pop
mov
or
fldt
insl
xor
push
push
mov
fsubs
sub
loopne
shlb
cmc
jnp
jb
or
mov
mov
clc
imull
adc
inc
aaa
sub
cmp
outsl
sub
imul
xor
sbb
jne
jae
imul
testl
loop
aas
movsl
jno
hlt
outsl
dec
sub
jnp
cmp
add
jnp
ret
xor
adc
andb
cmp
jnp
xchg
cmpb
decl
movsl
pushf
stos
gs
fcmovb
push
lahf
in
mov
mov
lods
ljmp
inc
sub
lcall
adc
notb
xor
jnp
mov
mov
stos
jne
mov
icebp
jns
js
in
xchg
jno
mov
push
jbe
outsl
cmp
in
cmp
pop
jecxz
mov
cmpb
jns
mov
test
mov
rcr
push
sub
mov
call
pop
mov
sti
jae
xchg
mov
and
dec
pop
lcall
frstor
mov
sub
lods
cmp
push
push
ficoml
repnz
cmc
mov
jnp
jns
out
mov
mov
push
adc
add
dec
out
jnp
push
into
or
pop
dec
xor
jle
adc
cmpsb
mov
xchg
mov
imul
call
cwtl
cmpsb
jnp
aaa
mov
xchg
dec
lods
nop
insl
jmp
jns
lret
mov
dec
jge
or
mov
aaa
insb
pop
pop
jnp
mov
mov
clc
mov
mov
sarl
in
lds
sbb
aam
jnp
and
xchg
insl
je
dec
fcomip
or
sbb
jnp
push
xchg
gs
cwtl
add
aad
mov
cmp
pop
mov
sahf
or
xor
pop
fisttpl
xchg
mov
pop
add
jnp
ds
xor
sahf
ljmp
xor
and
es
call
mov
imul
clc
bound
jae
sbb
inc
subl
scas
cmc
cltd
mov
outsl
fisttpl
mov
test
xchg
ja
rorl
pusha
push
xor
sub
das
mov
loope
dec
sub
adc
jge
lahf
pop
push
cmp
push
sti
insl
orb
loop
insl
ror
pop
in
and
icebp
addr16
in
daa
jnp,pn
adc
mov
aam
stos
es
into
loop
lcall
or
push
daa
sub
movsb
mov
pop
sub
sub
cmp
cli
jnp
pop
loop
ljmp
jnp
insb
fisubs
xchg
jnp
add
movsl
movsb
loop
jnp
jge
lods
scas
nop
stos
andl
mov
cli
es
out
sbb
jbe
sbb
cmp
dec
mov
inc
push
sbb
push
xor
sbb
sub
insb
mov
fwait
jnp
xor
js
cld
mov
sti
bound
imul
loop
jns
add
inc
push
jnp
cmpl
or
test
sub
movsb
xlat
jnp
push
or
jmp
jae
mov
jnp
inc
dec
in
mov
jnp
xchg
pop
push
mov
sub
test
sbb
fcomps
xor
icebp
mov
jae
jl
into
adc
mov
xor
negb
movsb
jnp
push
push
ja
or
leave
and
cwtl
fldcw
je
mov
sbb
cli
clc
stos
aad
add
cmp
add
mov
cmp
or
jnp
xor
sbb
in
jnp
stos
mov
inc
mov
xchg
pop
xor
cmpsb
in
mov
jne
inc
cmp
jnp
jo
hlt
mov
stos
cmp
xchg
jnp
dec
clc
pop
sahf
sub
mov
pop
jnp
mov
aad
loope
jle
test
lock
cmp
jnp
fld
xchg
sbb
pop
sbb
addps
ss
mov
dec
jns
pop
sub
and
mov
mov
cmp
ds
mov
popa
pop
bound
xor
xchg
sbb
mov
xor
jmp
lods
daa
mov
movsl
insb
lds
shr
push
pop
jg
test
pop
push
repnz
cmp
xor
mul
rcr
enter
and
ret
sbb
mov
enter
sbb
jno
mov
lahf
outsl
add
in
xor
adc
mov
mov
icebp
das
pop
jnp
outsl
loope
lahf
sti
mov
or
in
mov
stos
lcall
add
bound
cmp
dec
insl
std
xchg
jmp
lods
pop
out
je
outsl
cmp
push
inc
lret
lret
lea
jae
loope
sub
jns
mov
xor
add
imul
or
sub
jnp
stc
push
rclb
mov
jnp
adc
xchg
cmp
jb
jae
mov
cmp
fildl
jnp
notb
in
bound
sub
and
hlt
push
daa
rolb
sub
enter
in
jne
shrl
fmull
out
sub
lods
mov
dec
xor
push
in
cs
lods
imul
xchg
les
xchg
jnp
fcoms
cs
mov
mov
sbb
sbb
adc
jne
sbb
fildl
cmp
sbb
push
xor
and
enter
jnp
mov
dec
dec
add
gs
call
push
outsb
jecxz
cmp
push
and
enter
subl
mov
mov
fdivrp
mov
aaa
cwtl
adc
and
pusha
sbb
adc
or
mov
xor
mov
in
loopne
jno
dec
pop
lods
stos
clc
cmpsl
fwait
pushf
mov
rcrl
mov
rcrl
outsl
add
or
test
jle
popf
sub
subb
sub
pop
xchg
mov
outsl
or
jle
lods
xor
jbe
lret
aaa
int
push
movsb
shr
xor
mov
mov
sbb
fldt
jnp
sub
pop
push
andb
aaa
xor
in
lods
cltd
daa
or
sbb
ret
test
jnp
dec
pop
in
xor
fcmovne
dec
rorl
pushl
insb
call
xlat
xchg
enter
push
lea
cmp
scas
push
xor
scas
jo
sub
nop
xchg
mov
enter
inc
rclb
mov
imul
sub
add
and
jmp
clc
out
mov
outsb
mov
test
jnp
scas
xchg
mov
mov
add
add
in
scas
call
sbb
ja
mov
cmc
inc
inc
mov
adc
dec
cli
xchg
shl
lcall
jmp
insl
outsl
inc
dec
clc
inc
xchg
cmp
push
mov
cmpsl
dec
in
popa
dec
insb
in
push
pop
les
pop
add
rcl
jg
inc
movsl
ficoms
adc
call
or
xchg
mov
test
mov
enter
cmp
mov
test
scas
cwtl
jnp
inc
mov
cmc
jnp
xor
enter
mov
in
mov
mov
stos
lcall
cwtl
loope
rol
lods
jnp
cmp
jmp
jnp
push
jb
in
cmc
cmp
jnp
inc
or
xchg
shll
jnp
xor
inc
nop
jnp
ror
adc
ljmp
add
xor
inc
in
sub
test
xchg
mov
das
sub
js
inc
jns
xor
jnp
cli
lea
mov
loop
sbb
adc
jnp
sub
mov
push
push
jnp
hlt
jmp
push
dec
and
inc
inc
sub
outsl
lcall
leave
aas
xor
mov
jnp
cld
scas
shlb
loope
or
fnstsw
jle
mov
lods
mov
sub
pop
cmp
call
jnp
or
outsb
dec
aad
jbe
xor
push
cmp
jb
rcr
dec
insb
jnp
pop
dec
stos
dec
ljmp
dec
lods
mov
divb
mov
and
das
xlat
sub
sti
fsub
jnp
jp
and
out
loop
js
jnp
adc
push
jl
rcr
ja
ret
mov
fnstenv
cmp
mov
sub
mov
mov
aas
mov
loopne
lret
rclb
xor
ljmp
add
push
mov
jb
jbe
popl
out
cs
mov
lret
cmp
jmp
xlat
insl
jnp
mov
ss
popf
shrl
movsb
pop
ja
imulb
push
cmp
inc
jnp
jecxz
and
in
xchg
jnp
jne
add
arpl
out
xchg
out
inc
cmp
negl
mov
lcall
rclb
sub
or
insl
cwtl
dec
aaa
nop
sti
jnp
arpl
les
data16
cli
fs
rorb
dec
insb
stc
in
imul
mov
sbb
jmp
addr16
xor
fcmovnu
jo
shrl
add
jmp
jne
mov
negl
dec
sub
xchg
jnp
mov
dec
push
loopne
iret
jp
jnp
lret
in
fildll
out
dec
cmpsl
pop
test
cmc
xchg
jnp
pop
xor
push
sub
jp
jne
fidivrl
aam
or
test
push
mov
jnp
cmp
jnp
fcmovb
int
push
mov
pop
inc
sbb
push
popf
push
sub
xchg
xor
or
aas
jnp
sbb
lods
jnp
pop
lahf
add
out
or
inc
cli
jnp
add
cmovp
sbb
pop
jnp
sub
inc
aad
data16
imul
mov
decl
push
in
iret
jnp
mov
sub
lods
xchg
or
dec
pop
je
push
mov
insb
mov
jne
popa
cmp
jnp
mov
jnp
scas
dec
lods
push
dec
int
jnp
or
sub
sbb
std
or
out
cld
in
jnp
dec
cmp
or
xchg
add
sbbl
adc
sub
sub
cli
xchg
sbb
mov
mov
inc
jnp
into
test
mov
xchg
jns
adc
clc
sbb
ret
xchg
bound
jmp
lret
jecxz
add
jno
rol
jnp
sbb
ret
sub
sub
xor
lods
jp
jmp
cli
clc
jnp
loop
inc
xor
xor
xchg
or
adc
dec
call
xchg
jnp
stos
into
xchg
adc
out
lods
scas
jnp
push
and
imul
cmpsb
pushf
mov
dec
jnp
or
push
in
scas
or
add
jnp
testb
cltd
mov
jnp
push
jp
xchg
jno
rcrl
in
push
jns
sub
lcall
mov
sub
repz
lret
cmp
jecxz
pop
orps
dec
xor
jge
ss
movsb
sahf
mov
imul
push
out
sub
clc
pop
mov
lods
jnp
fwait
mov
dec
or
dec
add
adc
or
test
arpl
sbb
inc
jns
sub
mov
leave
iret
mov
or
mov
out
imul
push
jo
dec
sahf
insl
imulb
jnp
int
mov
inc
cmove
dec
cltd
cmp
aad
cld
enter
jae
jle
jne
mov
jb
js
repz
sub
loop
xchg
jg
sbb
lods
jae
mov
or
jg
mov
sti
imul
imul
pop
or
sahf
fidivrl
fsubs
das
xchg
call
pop
cmp
xchg
inc
jnp
sub
inc
sub
cmp
div
in
sahf
jnp
sti
xchg
cli
xor
pushf
fildl
jnp
lcall
je
jnp
dec
insl
into
gs
dec
ljmp
mov
imul
xchg
mov
scas
das
scas
jmp
sbb
icebp
pop
adc
in
lea
mov
or
or
jmp
xor
jnp
mov
imul
fs
sub
jnp
inc
popf
jge
stc
jbe
stos
xor
lret
jnp
data16
pop
popf
xchg
cli
rol
sbb
sbb
xchg
jno
stos
push
jns
sub
popf
add
adc
loop
pop
sbb
pop
outsl
cmp
scas
cmp
fsubs
push
mov
into
js
cmpsl
inc
mov
sub
idiv
jp
sbb
mov
sub
idivb
dec
enter
inc
push
repnz
cld
push
add
sub
cmp
cmp
stos
call
mov
lea
lods
bound
or
stc
push
ss
ficompl
clc
lods
inc
jnp
mov
xchg
mov
cmp
jnp
popf
and
jnp
xchg
pop
das
movsb
iret
insb
jnp
movsl
lret
lods
lret
push
push
mov
leave
sbb
sub
jne
dec
rcl
or
int3
insb
cmpb
jb
call
xchg
push
sti
mov
jnp
or
jbe,pn
movsb
jnp
xor
push
dec
mov
hlt
jnp
aam
or
das
xchg
mov
cli
test
ss
icebp
lea
cmp
dec
sti
addb
pusha
push
mov
dec
fldt
das
repz
cmp
cmp
mov
outsb
xor
xchg
sub
inc
or
cmp
imul
fucomp
mov
xchg
sub
adc
ja
jnp
push
inc
shl
inc
aam
aas
jnp
inc
fidivrl
in
aam
int
jnp
push
int3
mov
mov
dec
lcall
ss
jnp
das
xor
cmp
mulb
fisubrl
pop
outsl
dec
fwait
dec
icebp
sub
jb
fnstcw
pop
lods
outsb
arpl
stos
jnp
clc
fadds
test
mov
sbb
cmc
in
jle
mov
pop
icebp
xor
push
outsb
jns
push
push
lods
mov
lret
mov
int
test
mov
mov
jnp
sbb
lret
jnp
data16
mov
cmp
mov
popa
lods
nop
lret
mov
cmp
pop
mov
rcrb
dec
mov
cs
sbb
enter
stos
jnp
rclb
into
pushf
push
mov
jnp
sti
mov
dec
bound
lods
or
in
aad
mov
in
dec
xchg
mov
xchg
out
stos
lret
jbe
mov
jnp
addr16
rcrl
dec
jnp
mov
mov
sbb
in
mov
or
jae
adc
jnp
sub
sbb
jl
lret
and
fidivrl
test
and
mov
mov
stos
jnp
mov
ret
cmp
cmp
and
fimull
pop
pushf
jnp
xchg
adc
jnp
mov
adc
jnp
int3
test
or
jmp
dec
mov
in
fldt
fwait
cmp
out
sub
xor
in
das
or
jl
jp
lret
jnp
pop
push
dec
popa
cmp
add
testl
jnp
dec
push
imul
add
xchg
dec
out
pop
icebp
sub
cmpb
aam
push
cmc
sbb
imul
mov
decb
hlt
jp
test
lods
repnz
es
imul
test
xor
jbe
jns
fistl
insl
and
or
adc
test
jnp
stos
fldt
mov
sahf
cmp
jae
les
jnp
cmp
int3
sub
mov
inc
aam
mov
jnp
xchg
ss
fisubrl
or
cld
sbb
mov
sti
inc
sbb
add
repnz
or
jp
stos
lret
cli
xchg
insl
popf
insb
inc
cmp
outsl
push
dec
mov
sarl
ss
jbe
push
loopew
jnp
cs
lcall
xor
clc
jnp
xor
stos
cmp
aas
cmp
or
xchg
adc
xchg
cmc
jne
div
jb
jnp
lock
loopne
lahf
cmp
cmp
and
in
idivb
scas
pop
xchg
ret
sbb
es
pop
push
mov
lcall
ljmp
jecxz
rolb
int3
and
dec
rol
je
fwait
bound
decl
inc
push
jo
idivl
ds
mov
cmp
jecxz
insl
or
xor
mov
adc
dec
jo
ds
jnp
out
ret
data16
jnp
cmp
xchg
clc
mov
imul
pusha
insb
mov
jnp
sub
xchg
jnp
mov
aam
jnp
ret
pop
pop
shrb
jnp
mov
jne
push
add
or
xchg
stos
ret
repnz
push
cmc
popf
jnp
pop
sbb
and
dec
inc
jnp
scas
int
mov
mov
aaa
cmp
inc
jnp
lahf
cmpsb
push
fwait
push
pop
or
mov
ljmp
dec
adc
ss
sub
push
into
mov
es
or
divb
jge
push
scas
and
jmp
pop
sub
cmp
push
sbb
loope
sbb
fistps
insb
mov
es
cmpsl
fldenv
lods
add
or
cmp
xchg
pop
sbb
mov
fdivrs
pop
scas
insl
cmp
sub
jnp
rcrl
xor
push
xchg
jg
and
xchg
in
adc
in
xchg
jnp
mov
jecxz
fwait
add
out
pop
mov
jnp
jns
dec
mov
arpl
loop
scas
out
sub
cwtl
dec
pop
mov
leave
pop
outsl
xchg
cmc
jnp
jbe
ljmp
shrl
stos
cmpsl
add
xchg
and
jnp
inc
fwait
xor
mov
jl
mov
pop
sbb
and
pop
dec
int3
lcall
imul
lret
xchg
outsl
mov
xchg
ja
lods
movsl
jge
sbb
and
sbb
push
lret
in
in
jnp
dec
cmp
enter
jnp
test
sub
call
jo
jmp
or
cmp
jae
repnz
cmp
sbbb
or
lahf
sub
jns
dec
sub
xchg
insl
dec
imul
lock
fiadds
in
jnp
popa
jbe
shl
add
dec
sahf
mov
insb
das
fs
jnp
ss
je
cmpb
sbb
call
inc
push
fcomps
pop
in
inc
lcall
mov
movsl
or
lods
cltd
das
in
inc
jnp
insl
mov
outsl
sbb
push
or
aam
xchg
dec
out
cmp
xor
cld
pop
out
outsl
fnstcw
mov
or
jb
in
fsubrs
mov
subl
mov
lea
or
pop
in
jl
jnp
insl
lret
gs
scas
scas
insl
jno
xor
int3
pushf
imul
mov
out
shlb
dec
cli
dec
lea
stos
push
mov
jnp
mov
seta
scas
jmp
es
push
or
idivl
lods
xor
bound
sub
xchg
mov
ficomps
daa
mov
int3
scas
in
cmp
cmp
cmpb
mov
in
jnp
dec
mov
adc
cmpsb
lds
jmp
push
hlt
sub
lock
xlat
cltd
pop
movsb
adc
or
mov
repz
inc
xchg
stos
insl
ret
sub
sub
cmp
cmpb
mov
inc
xchg
js
sub
inc
jnp
repnz
jnp
or
fwait
dec
or
xchg
push
lret
or
out
rcr
xchg
jnp
jmp
int3
in
sub
jnp
stos
fcmovbe
xchg
pop
mov
pop
lea
xchg
dec
cmc
fadd
cs
xchg
out
cmp
sbb
in
dec
clc
jnp
test
shrl
xor
loop
jmp
fnsave
in
cmc
jb
popf
jnp
jmp
dec
sub
lock
and
repnz
cli
dec
mov
sarl
add
mov
and
mov
sbb
dec
imul
daa
cwtl
jnp
in
cli
lea
or
xchg
add
fidivrs
mov
shrb
push
or
imul
insb
or
push
scas
imul
and
dec
dec
loop,pn
jnp
insb
ss
out
stos
hlt
lock
inc
xor
test
inc
pop
push
mov
cmp
jnp
gs
lret
data16
push
sub
repz
pop
jnp
adc
sbb
sti
jnp
repz
call
pop
cmp
or
lock
stc
jnp
xlat
movl
loope,pn
ds
jmp
xchg
call
test
cli
inc
out
push
jnp
mov
mov
repnz
frstor
bound
mov
ret
dec
push
jecxz
inc
ljmp
aaa
sar
mov
js
push
xchg
ja
movsl
add
dec
xlat
ror
leave
cmp
ret
shll
jecxz
shlb
ds
std
sbb
aaa
jmp
jp
clc
xchg
inc
push
or
inc
fidivl
push
mov
jmp
jnp
add
dec
rorb
insb
pushf
jmp
push
lret
xor
xchg
pop
das
leave
cld
icebp
xchg
xchg
push
jnp
push
sbb
push
pop
dec
daa
or
pop
mov
lock
sub
popf
stos
cmc
icebp
jnp
or
jae
jp
pop
dec
rclb
push
xor
mov
add
jnp
adc
insb
fildl
cmp
mov
in
aad
add
push
data16
mov
das
or
out
sti
jnp
mov
cmpsb
daa
cmp
jnp
adc
stos
push
or
jnp
fstenv
push
cwtl
mov
jae
pushf
subb
jnp
int
loop
sbb
sbb
mov
insl
xchg
mov
out
leave
jnp
push
cld
dec
scas
fbstp
cmp
sbb
fstpt
cmc
inc
push
fwait
inc
dec
push
in
movsb
inc
jnp
lods
mov
fwait
nop
inc
pop
testb
in
clc
lahf
pop
das
pop
or
cld
or
imul
dec
lods
sub
mov
jnp
int
mov
or
outsl
ja
das
lds
repnz
push
repz
ljmp
insl
jle
cltd
mov
cmp
xor
imul
sub
add
cmc
fwait
push
cld
adc
stos
pop
push
sub
mov
push
inc
cmp
jp
and
lret
pop
push
jnp
test
pop
leave
jns
mov
inc
adcl
pop
aad
mov
cmc
xor
push
pop
jnp
inc
mov
fcom
adc
movsl
cmp
cmp
or
jnp
lcall
jnp
pop
push
aad
sub
jnp
scas
inc
divl
test
sub
mov
xchg
outsb
mov
xor
xchg
fs
dec
je
lcall
push
andb
sarb
loopne
sbb
lahf
pushl
lret
jnp
cmp
or
fwait
sbb
mov
xchg
and
sar
shrb
in
outsl
lods
sub
mov
aam
in
or
and
cmp
and
ss
orl
mov
std
jnp
cmp
aam
or
popa
push
ljmp
ret
or
dec
jnp
sub
dec
cmp
pop
xor
insb
out
mov
pop
popf
lret
mov
or
out
sub
jnp
mov
idivb
imul
out
or
push
cmc
sbb
fildl
push
aaa
mov
jae
in
lods
xchg
jnp
iret
ret
sbb
sub
faddp
jnp
pop
cli
cmp
bound
sub
jnp
fcmovnb
sbb
push
xor
pop
and
cmp
jnp
cmp
cs
mov
into
lods
movsb
sub
jp
sub
lds
stos
mov
jb
jnp
mov
xor
jae
int
sbb
xor
aaa
imul
hlt
inc
sub
shl
in
sbb
jns
ret
inc
mov
or
push
lds
mov
mov
sub
cs
test
push
fists
mov
je
cmp
jnp
loop
push
jbe
mov
popf
and
jnp
stos
fldenv
sahf
dec
daa
jnp
jbe
xchg
call
ret
mulps
mov
sbb
fnsave
jnp
push
dec
mov
dec
pop
repnz
xchg
addr16
insl
push
jnp
xor
jns
decb
imul
xor
ljmp
ret
mov
mov
clc
sarl
jnp
decb
data16
cmp
scas
push
or
sbb
dec
lcall
or
mov
xchg
cmp
add
mov
cwtl
add
and
adc
add
jnp
aaa
xchg
fisubrl
jnp
or
inc
xchg
adc
push
jge
pop
jle
andl
cs
aad
cltd
lods
insl
mov
cli
insb
cwtl
sub
jle
jae
inc
inc
xchg
dec
imul
push
inc
jnp
sbb
mov
int
sub
lcall
das
out
xchg
jg
jno
int
add
add
jnp
popa
rcl
dec
iret
xchg
jnp
fisttpl
mov
push
sub
push
mov
jne
jmp
cld
or
jae
pop
stos
pop
in
inc
scas
cmpsl
out
xor
repz
fsub
sub
fsub
lcall
mov
mov
sbb
inc
in
lret
push
xor
imul
fisubs
mov
or
jae
sbb
call
fdivrs
jmp
jnp
xorl
ss
inc
push
pop
add
cmp
adc
orl
pop
xor
data16
ljmp
pop
clc
adc
cmpb
jnp
and
mov
jnp
cmpsb
push
inc
xchg
fimuls
jnp
or
and
jne
arpl
inc
mov
jnp
out
push
xor
jmp
jnp
lods
popf
mov
fnstenv
push
dec
jo
inc
mov
or
sub
in
push
xchg
aaa
jmp
fmull
jnp
and
nop
fs
jns
sub
lcall
jp
out
cmp
jnp
push
call
sbb
pop
jnp
xlat
fucomi
jo
pop
jnp
call
scas
ret
pop
stc
mov
insl
pop
out
in
test
lret
fadds
jbe
and
ret
outsl
adc
xchg
sub
push
and
ljmp
jnp
out
pop
popa
sbb
jnp
push
fcmovbe
pop
fldt
ja
mov
jge
out
js
jle
in
call
jnp
adc
sti
fadds
jnp
xchg
sub
out
adc
cmpb
stos
mov
into
out
jp
cmp
mov
pop
jmp
jae
mov
sarl
sbb
fdivs
aaa
sbb
or
pop
xchg
cmc
in
imul
dec
outsl
fisttpl
dec
es
aas
push
mov
inc
cmp
mov
or
repz
in
cltd
insl
addr16
jnp
and
lods
sahf
push
cmp
mov
jnp
fs
xor
iret
ret
jnp
lock
jno
mov
xor
jnp
jne
xchg
lods
lret
mov
cli
mov
mov
sub
pop
push
sbb
sub
jns
lret
div
jp
shll
shlb
xchg
test
clc
mov
mov
mov
int
jnp
lods
cmp
jnp
add
lcall
cmc
push
popa
xchg
mov
cmp
pusha
ret
fwait
rorb
sbb
dec
jbe
enter
aaa
cmpb
data16
jo
jnp
imul
lock
addr16
jp
pop
imul
ljmp
out
jbe
nop
pushf
inc
stos
jno
dec
dec
jg
sarb
sbb
scas
jb
mov
adc
dec
popf
sarl
vmwrite
jnp
dec
and
mov
adc
fcom
rolb
packuswb
int3
test
sub
sbb
xlat
ja
mov
leave
mov
xchg
and
or
mov
push
push
in
pop
mov
in
pop
ss
rcll
push
jnp
cs
pop
dec
into
rorb
jnp
jle
mov
imul
pop
scas
ret
mov
lcall
ljmp
jo
jge
pop
jnp
mov
cmp
xor
adc
lcall
das
addr16
and
mov
sub
insl
outsb
sub
lock
jne
push
push
jnp
cli
js
mov
es
push
fwait
sub
mov
outsl
and
and
xchg
cmp
cmp
jnp
xchg
jmp
push
jnp
or
xor
jp
pop
fimull
rorl
pop
jo
mov
jp
cmc
sbb
shl
iret
xchg
in
cmp
aam
lods
inc
sbb
push
test
stos
jnp
jns
int
pop
mov
test
fsubl
leave
cmc
imul
outsl
mov
adc
loope
movsl
gs
pop
lret
sti
push
aad
loope
ss
mov
adc
cli
imul
stos
xor
shl
ljmp
mov
xchg
loope
in
mov
sti
mov
shrl
pop
add
imulb
mov
or
and
jno
jg
sahf
jnp
jo
xchg
push
push
scas
dec
mov
jno
mov
cmp
imul
push
ss
mov
jnp
scas
bound
lea
mov
fildl
pop
push
mov
jnp
call
mov
or
dec
xchg
cli
es
jne
cmp
xlat
mov
dec
fadds
sub
inc
jge
jae
pop
inc
lret
or
cltd
out
subl
adc
add
cmp
pop
outsl
mov
fsts
mov
hlt
bound
jl
fwait
mov
jns
mov
push
in
sub
mov
out
dec
xor
add
scas
jnp
shll
fnsave
int
mov
lret
xchg
dec
sub
inc
fcoml
stos
cmp
push
cmpsl
inc
jnp
dec
xchg
fnstcw
pop
ja
sbb
inc
stc
inc
fdiv
pop
stos
lahf
sbb
lret
jbe
jns
add
test
aaa
int3
jno
or
sti
popa
idivl
jnp
and
outsb
jns
jnp
cmpsb
pop
push
aaa
mov
sub
jnp
mov
jnp
sbb
iret
jle
adc
cltd
mov
icebp
pusha
insl
adc
sub
cmc
push
cmp
xchg
jnp
out
jmp
jnp
jmp
sub
fiaddl
js
fisttpl
cmp
mov
lds
sub
dec
or
outsb
sarl
cmpb
jl
pop
repz
and
fs
mov
lds
cli
sbb
mov
enter
stos
sub
in
incb
mov
lods
or
pop
imul
push
jnp
and
xor
add
sub
pop
ss
cld
aaa
cmp
or
mov
mov
jnp
xchg
push
jbe
mov
hlt
js
out
lret
fstps
fneni(8087
jbe
xchg
popa
or
jecxz
jnp
xor
in
jmp
jno
insl
sbb
pop
push
cmp
ja
in
inc
rclb
jnp
imul
or
mov
mov
mov
pop
sub
imul
aaa
stos
push
popf
je
jnp
pop
out
movsb
dec
cmp
jnp
add
dec
jnp
ret
das
push
sub
sbb
sbb
jnp
fwait
lea
mov
jmp
aad
mov
std
daa
mov
in
ret
xor
cli
inc
jnp
bound
mov
insl
cmp
pop
in
push
jnp
fwait
dec
add
arpl
mov
xchg
aaa
jnp
or
sub
sbb
dec
push
add
pop
stc
nop
sbb
insl
cmp
imul
mov
js
add
in
mov
xorb
das
cmp
daa
lods
sbb
xlat
sub
or
jae
sbb
jmp
mov
sub
lret
addr16
cmpsb
jnp
sti
ja
xor
jg
jnp
pop
adc
sbb
lret
or
leave
cmp
in
mov
xchg
pushw
fstpt
fildll
stc
aaa
fiaddl
cmpsb
push
movsb
outsl
jo
shll
jnp
das
xchg
shl
fbld
jp
das
loop
jnp
lcall
sbb
fisttpl
clc
es
outsb
jns
jnp,pn
inc
movsl
ljmp
and
jnp
imul
xchg
out
movsb
jnp
sti
bound
pop
dec
xor
or
shlb
fisubl
xchg
sbbb
jnp
test
mov
jnp
add
jmp
pop
addr16
andl
js
mov
cmc
pop
aam
jae
jmp
sub
fwait
sarb
lea
add
lcall
test
jecxz
dec
jnp
outsb
into
das
or
cmp
lahf
call
call
xor
cmp
xchg
call
gs
inc
mov
sub
adc
mov
jne
mov
mov
call
jae
mov
sub
testb
mov
xchg
fadds
pop
into
sub
decb
dec
dec
fwait
negl
sub
mov
fwait
mov
sub
or
jne
cs
inc
pop
push
stos
insl
repnz
jae
push
sarb
gs
fdivrp
cld
fcoml
jmp
sti
push
xlat
jnp
mov
mov
dec
imul
sub
outsb
pop
xchg
jnp
push
sti
lea
pop
sbb
lods
inc
cmp
or
stc
outsl
sub
dec
jnp
cmp
test
outsb
adc
imul
mov
jne
lret
add
adc
mov
or
loop
ret
push
lret
pop
in
lahf
sahf
xor
sub
fnstcw
xchg
jnp
sub
loop
adc
push
cmc
pop
jnp
out
mov
dec
cli
jnp
into
ss
fdivrl
sub
pushf
rcll
sub
icebp
sbb
loope
scas
cmp
cmp
pushf
mov
jnp
mov
lret
test
dec
sub
es
jnp
inc
pop
popa
test
test
dec
and
rep
mov
testb
xor
sbb
leave
jns
adc
cmpsb
pushf
jnp
test
dec
jnp
lahf
or
xchg
lods
imulb
stos
vmovdqu
lcall
daa
arpl
jp
fdiv
or
sub
cli
pushf
jg
sub
fmulp
fsubs
sar
aam
imulb
jg
fwait
sbb
adc
dec
mov
adc
push
repz
xchg
sti
jnp
push
sub
arpl
pop
jnp
pop
mov
inc
lret
jg
push
call
bnd
cmp
cli
mov
loop
pop
push
jnp
lcall
aas
fists
push
sti
xchg
lahf
clc
sub
inc
jnp
xchg
ljmp
cmp
push
sbb
in
xchg
jmp
arpl
gs
jl
rorl
cli
xchg
in
inc
cmc
lret
sti
mov
push
pusha
lcall
lods
jecxz
jnp
xchg
xchg
lret
jnp,pt
mov
popf
mov
mov
jg
test
and
dec
cmp
lret
in
and
test
dec
jnp
mov
jns
pop
fdivrs
movsl
aad
cmc
pop
jne
int
jnp
sub
xchg
pop
in
push
cli
jnp
out
jb
mov
out
arpl
gs
sub
mov
orb
aam
inc
mov
movsb
cmp
js
jo
repnz
sub
jnp
fisubs
std
sti
sahf
push
xor
xchg
sbb
fdivrl
pop
or
inc
jnp
loopne
mov
push
push
sub
stos
jnp
rcrb
addr16
sbb
rorb
cmp
in
dec
cmp
mov
data16
sbb
cmp
loope
xchg
int3
in
dec
or
js
jne
inc
and
out
loope
dec
movsl
arpl
jnp
std
lds
sahf
cmp
jnp
rcll
sub
mov
sbb
rcr
push
fcmovne
inc
sub
outsl
lcall
mov
jne
daa
in
scas
leave
call
cmp
jae
pop
cli
mov
push
imul
jnp
fcmovnbe
mov
in
aam
imul
aaa
aas
adc
or
scas
dec
push
sbb
adc
aaa
in
push
mov
jmp
ja
out
in
imulb
inc
jnp
jo
lahf
loop
mov
push
inc
jnp
out
int
leave
imul
sub
insb
jmp
ss
stos
jp
pop
pop
inc
std
or
push
test
and
sti
int3
ja
out
enter
pop
and
imul
je
or
lods
pop
in
mov
imul
inc
sbb
cli
pop
ljmp
mov
jnp
imul
movsl
adc
jnp
dec
lds
insb
jo
jnp
cmp
xlat
xchg
scas
bnd
lret
jno
lock
xchg
adc
dec
mov
leave
pop
or
test
or
mov
jb
dec
incb
out
in
jnp
cmp
push
pop
pop
je
test
jae
mov
fs
sbbl
mov
pushf
or
enter
hlt
mull
jnp
sub
sbb
dec
shll
jnp
cmp
jnp
push
add
test
andb
dec
aam
xor
test
or
push
push
jmp
ret
movsl
fwait
xor
insb
enter
in
stos
imul
and
or
das
fwait
movsb
pop
jnp
repz
sub
clc
mov
jnp
xor
cmpsb
lret
jl
ss
xchg
fdiv
add
jmp
xor
sub
mov
enter
ficompl
das
in
call
push
call
cmp
or
jae
jnp
mov
shl
in
popf
push
ljmp
ret
sub
bsf
jnp
call
pop
sub
outsl
push
outsb
mov
insl
xchg
jnp
dec
mov
jnp
adc
cltd
jnp
out
arpl
in
push
aaa
inc
outsb
std
cmp
push
lods
xor
mov
dec
sti
in
jp
js
cmc
hlt
mov
rorb
test
mov
cs
fwait
jnp
movsl
adc
inc
movsb
push
imul
sub
xchg
cmp
add
xchg
lret
inc
sbb
jp
dec
and
jae
xchg
mov
icebp
jnp
sub
stos
mov
repnz
jnp
cmc
sbb
ret
cmp
mov
popf
sub
inc
pushf
pop
enter
std
cwtl
das
shlb
fldenv
or
out
fdivs
aaa
sub
jnp
enter
int3
std
es
jnp
dec
or
testl
jmp
jnp
popf
and
mov
and
cmp
cmp
jnp
pop
shr
loop
push
mov
mov
mov
pushf
ret
cmp
mov
inc
je
cmp
stos
movsl
push
mov
fidivl
xor
cmc
ja
addr16
pop
int3
and
mov
mov
lret
cmp
insb
xchg
shrl
dec
or
mov
or
cmp
arpl
popa
fsubs
insb
mov
jl
sahf
gs
dec
push
movsl
ret
shlb
sub
lods
dec
decb
add
test
cld
dec
mov
mov
adc
movsl
mov
sbb
imul
dec
sub
mov
jae
mov
gs
ss
imulb
out
enter
lods
lret
push
clc
and
in
xchg
or
mov
mov
jnp
ss
ljmp
push
fs
ja
lret
into
fdivrs
jge
ficompl
jnp
pop
repz
mov
sbb
fwait
lcall
pop
sbb
fs
imul
fdivrl
mov
pop
ss
mov
xor
jnp
sub
sbb
push
lret
or
aam
pop
sub
push
enter
mov
sti
mov
pop
and
inc
movsl
dec
scas
adc
movl
icebp
dec
inc
cmc
sti
repnz
sbb
push
mov
jnp
jb
jl
pushf
sbb
jnp
scas
fwait
les
push
test
and
cli
jnp
pushf
xor
pop
test
sarb
cmp
mov
aaa
or
mov
pop
sub
ss
enter
mov
mov
popf
stos
insl
mov
mov
xor
xchg
jnp
pop
sub
lea
or
adc
xchg
jge
push
xchg
sbb
mov
mov
sbb
xor
stos
fimull
push
pushf
popl
mov
imul
je
and
push
cmpsb
ja
stos
fiaddl
mov
dec
xor
and
callw
loope
cmp
jae
add
cmpsl
and
test
xor
pop
add
jnp
stos
dec
xchg
jb
dec
cmp
test
mov
iret
push
out
ret
or
pop
sub
push
sti
bound
gs
jno
bnd
xor
inc
inc
xor
mov
xchg
jnp
xor
data16
jnp
mov
mov
mov
mov
shrb
cmp
xor
sbb
sub
jo
enter
pop
or
test
dec
out
ljmp
and
push
decb
inc
in
inc
cli
dec
outsl
sub
pushf
inc
shr
pop
leave
sub
in
cmc
rcrl
xchg
gs
and
repnz
mov
sbb
dec
arpl
cmp
loopne
adc
clc
jp
mov
sbb
in
repnz
xor
fwait
mov
cmp
sbb
sub
cli
or
cmpsl
lds
push
mov
outsl
push
loope
pop
jnp
imull
mov
jp
cmpsb
scas
jge
xor
scas
push
dec
cmp
bound
or
das
add
les
adc
push
inc
ds
addr16
push
test
jnp
sbbb
pop
jbe
jns
lcall
sahf
imul
push
fbstp
nop
data16
xor
ljmp
push
scas
pop
jnp
jno
cmpsb
clc
mov
cmpl
gs
lret
add
in
sarl
fstps
jnp
lods
push
notb
xchg
xchg
sbb
xor
jae
popf
inc
pop
lret
lods
jnp
mov
pop
ljmp
mov
sbb
iret
fwait
ret
outsl
lret
xchg
jnp
adc
xor
imul
cmp
popl
xchg
ja
in
jb
jnp
data16
sbb
lea
sbb
adc
in
dec
xor
sbb
sub
mov
jnp
ret
sbb
stos
les
rcr
scas
in
out
jnp
and
pusha
xchg
and
add
jb
mov
inc
lock
out
push
sbb
push
idiv
cmpsb
jnp
sub
add
cwtl
out
xlat
mov
mov
push
mov
mov
dec
aas
int3
mov
js
fwait
lods
scas
jnp
xchg
cmpsl
push
adc
dec
jmp
mov
xchg
or
push
outsl
pop
xor
aas
clc
jnp
xor
inc
or
inc
add
js
fistpl
ret
dec
push
ja
cmpsb
jb
movsb
push
stc
lods
and
scas
loopne
sbb
cmc
int
inc
imul
out
outsb
and
cmpsb
stos
push
popa
xlat
arpl
or
out
sbb
xchg
lret
bound
mov
adc
inc
sub
mov
push
jae
jne
out
rorb
lods
imul
loop
sub
out
loopne
push
jnp
push
imulb
lods
imul
pop
mov
xor
cmpsl
inc
lcall
mov
scas
jnp
popa
push
lret
or
jnp
adc
cs
fistl
jae
sub
jns
sbb
sbb
jnp
sbb
pushf
jnp
cld
inc
xchg
inc
mov
imul
jae
idivl
mov
push
lahf
pusha
enter
mov
inc
repz
mov
mov
jnp
adc
js
cmp
dec
mov
jno
scas
mov
jb
lds
mov
js
jnp
lret
std
sbb
mov
inc
dec
arpl
ljmp
loop
enter
pop
insl
bound
mov
out
xor
adc
imul
xor
imul
xchg
sbb
xor
aas
out
lea
les
or
jae
in
pushf
clc
leave
imul
or
fs
ret
aam
dec
adc
cmpsb
mov
in
xchg
push
or
inc
scas
imul
in
xor
ds
sbb
mov
lock
dec
and
repnz
out
call
mov
clc
cmp
jmp
cs
inc
add
aaa
mov
pop
adc
xor
aaa
cmp
push
insb
jnp
cltd
cmc
test
jnp
xor
jne
push
sub
jnp
or
inc
rcrl
adc
mov
mov
push
dec
bound
jae
rorb
mov
stc
movsl
sub
xchg
xchg
in
repz
or
cmc
jnp
jb
call
lds
push
repnz
movsb
dec
aad
pop
mov
in
aas
sahf
repz
lret
cmp
pushf
lods
dec
out
gs
lea
jnp
xor
push
daa
scas
xchg
jnp
insb
mov
xlat
jnp
dec
and
mov
pusha
outsl
int3
out
vmwrite
lret
cmp
sbb
test
jnp
mov
mov
jno
and
mov
sbb
sti
xlat
cwtl
clc
enter
aaa
out
and
lock
jnp
jge
mov
xchg
sub
mov
and
xor
mov
fcoms
mov
xchg
bnd
dec
sbb
push
movsb
mov
pusha
lock
ja
cld
pushl
xchg
or
das
or
mov
mov
xlat
cmp
lods
insl
jo
bound
sti
dec
ds
xchg
pop
mov
outsl
jecxz
cld
adc
sbb
fwait
or
jo
mov
xlat
fsubrs
or
pop
mov
jb
imul
mov
push
outsb
repz
fsubrs
sub
lock
arpl
lret
jns
shlb
out
cmp
sub
sbb
jg
mov
jb
stos
xor
js
icebp
sti
shll
mov
jnp
dec
or
imul
lods
ja
jb
cmc
insb
mov
js
dec
inc
jecxz
sti
lcall
jp
inc
push
repz
lret
or
test
sub
jnp
aaa
js
xchg
add
or
xchg
dec
movsb
mov
push
lods
lret
sub
aaa
cmp
inc
leave
add
sbb
lahf
jge
rorl
data16
jnp
shrb
or
jp
imul
sarb
sbb
in
mov
inc
mov
xor
pop
pop
outsl
insb
sbb
mov
or
add
xchg
jnp
sarb
cmp
into
sub
dec
pop
jno
xchg
scas
jne
addr16
or
enter
xchg
dec
cmp
stc
ja
rorl
imul
mov
imul
test
jge
adc
fwait
jnp
adc
or
imul
jp
lods
dec
jecxz
int
add
test
xor
fwait
clc
mov
into
pop
or
push
or
pop
enter
js
xchg
loop
mov
jnp
repnz
pop
pop
and
or
inc
mov
jae
mov
scas
test
js
pop
bound
sbb
sti
mov
mov
add
ret
jl
cli
mov
mov
imul
mov
cmp
lods
sub
and
or
mov
and
mov
sbb
jnp
stc
cmc
xchg
sahf
inc
jnp
mov
pop
xor
scas
or
lcall
and
call
ja
into
lahf
sbb
lock
pop
clc
jnp
out
in
push
sub
push
xor
pushf
sti
sub
mov
roll
loop
dec
lods
push
sbb
popa
mov
jnp
push
hlt
cmp
xchg
jg
outsl
pop
fprem1
jns
sub
cld
inc
cs
mov
outsl
mov
test
imul
adc
lods
lods
hlt
add
mov
xchg
jno
stos
sbb
sahf
insb
lcall
repnz
mov
iret
movsl
dec
mov
pop
lods
pop
jnp
lahf
cmp
jmp
mov
cmc
movsl
and
into
fadds
adc
gs
pop
idivb
mov
jbe
aaa
sub
jnp
out
bound
lea
jmp
sub
cmp
sub
cld
and
out
mov
mov
adc
inc
mov
dec
xchg
cld
fwait
lods
adc
ss
mov
sbb
in
add
dec
jns
imulb
or
stc
jnp
aad
stos
sbb
xlat
stos
xchg
adc
cmp
shr
enter
aaa
inc
testb
lret
jae
mov
fstpt
push
pop
int
sub
push
jg
dec
inc
sbb
jo
or
jnp
lea
loop
fs
jnp
mov
cmp
ljmp
pushf
dec
or
dec
outsl
jb
jg
dec
push
jo
shrb
cmp
insl
movsl
das
mov
mov
test
and
jb
sub
xlat
lods
pop
and
icebp
mov
jno
push
loope
push
mov
movsb
outsl
test
or
bound
and
int
jmp
mov
fiaddl
dec
push
pop
or
xchg
pusha
enter
clc
or
cmp
cmpsb
pop
cmp
or
sub
or
mov
cmc
sbb
rorb
jle
or
mov
add
fmuls
popa
fldt
fisubl
xchg
push
stc
out
bnd
cmp
scas
jnp
fstp
pop
fadds
enter
cmc
sbb
jno
jle
cmp
sarl
lods
cmc
ss
and
mov
sbb
lods
ljmp
inc
push
mov
in
testl
imul
or
add
mov
add
push
pop
sub
rclb
stc
in
jne
sbb
dec
push
insl
inc
imul
pushf
jnp
inc
rolb
jne
ret
push
or
mov
bound
mov
dec
jb
popf
je
out
and
cmp
bnd
insb
jecxz
xchg
insl
jnp
in
add
jns
cmp
popf
cmp
cmpl
adc
adc
loope
mov
imul
inc
ds
ret
hlt
jnp
cli
loop
and
or
lock
cmpsb
ds
imul
int3
sub
sub
aam
sub
mov
pop
lret
mov
aas
dec
or
jnp
scas
ficomps
test
call
jns
or
aam
jnp
fists
xchg
sub
jnp
lret
jnp
pop
popf
data16
push
push
fsubrs
lcall
cmp
dec
ljmp
jnp
mov
xchg
xorl
repnz
jae
push
inc
cmp
inc
sarl
xchg
xchg
cmp
cli
loope
sub
fisttps
and
imul
lret
das
ret
mov
or
mov
cmp
push
inc
inc
rorb
roll
or
notb
sbb
out
dec
push
xchg
ja
out
dec
test
pop
xorb
clc
pop
aam
sbb
movsl
dec
push
pop
push
mov
mov
fldcw
jnp
mov
stos
push
ss
ss
xchg
into
outsl
cmp
fistpll
testb
adc
xchg
je
sbb
stc
shr
into
mov
jnp
xchg
adc
pop
xchg
xor
fcmovb
push
scas
mov
movsb
test
stos
add
ljmp
push
xor
cmp
xchg
sbb
ret
cwtl
push
cmp
jae
push
xchg
dec
leave
jnp
lods
int
out
flds
cmp
and
sub
cmp
cmp
or
cmpsb
std
jae
imul
xchg
out
clc
xlat
push
shll
call
jnp
pop
cmc
cmp
pop
pusha
lret
mov
jnp
sbb
jle
iret
cltd
popa
sub
imul
xor
jne
add
aaa
cmpsb
inc
dec
ja
insl
jnp
lret
es
fidivrs
push
lds
dec
mov
inc
outsl
push
cmp
sbb
in
xchg
jne
mov
fwait
adc
clc
imul
cwtl
es
stos
cld
inc
push
jnp
sbb
arpl
mov
int3
outsb
cmp
in
xchg
cmp
popf
xchg
jnp
dec
hlt
jns
aad
jnp
fdivr
pop
jg
insl
dec
mov
inc
gs
subl
std
mov
pop
sahf
lea
jnp
insl
test
or
idivl
push
sbb
jne
inc
cli
jnp
test
push
push
sti
jp
inc
dec
stos
cmp
push
hlt
gs
aaa
pusha
dec
cli
jbe
fldt
jnp
leave
mov
xchg
dec
imul
pop
sahf
lods
nop
jnp
test
fwait
in
jnp
rclb
std
mov
clc
iret
xlat
inc
jb
jnp
jmp
fcmovbe
pop
js
add
int3
call
adc
and
fucomp
jnp
and
xor
sub
sub
dec
sarl
fistps
loopne
inc
js
enter
dec
mov
mov
addr16
push
loopne
adc
sarb
jnp
je
fsts
subb
mov
jnp
adc
xor
jnp
sub
xor
mov
push
in
stos
lcall
rcrl
stos
sub
aas
inc
add
pop
insb
repnz
jnp
sti
cmp
xchg
xchg
sub
mov
bound
pushf
fsubl
sbb
cli
sbb
mov
pop
lcall
das
pop
dec
jnp
ds
mov
jnp
sub
pop
stos
mov
in
adc
dec
js
xor
inc
add
xor
sbb
pop
lcall
idivl
bndstx
cmc
out
xor
jge
js
test
add
fstps
adc
imulb
mov
xchg
stos
iret
push
mov
cmp
sub
movsb
jnp
loopne
bound
jae
lret
lock
jnp
ss
les
adc
jnp
mov
loope
insb
in
add
hlt
clc
into
sar
repz
cmp
or
js
push
scas
lret
lods
jne
fwait
in
aam
inc
out
cmc
clc
cltd
add
ss
xchg
xchg
xchg
jbe
fdivrs
or
cmp
cmpsb
lret
into
fildl
inc
lcall
pop
aad
or
pop
mov
insl
fstpt
pop
inc
out
rep
cmp
jnp
jp,pn
lods
testb
fwait
in
icebp
test
sub
sbb
gs
push
les
dec
enter
mov
add
shrb
xorb
icebp
lock
fadds
je
mov
out
lods
pop
xchg
xchg
cmp
inc
xchg
jnp
inc
lahf
xor
insl
fisttpll
sti
cmc
scas
jnp
arpl
push
fisubs
repnz
dec
sub
dec
xor
es
push
cmc
jno
pop
lahf
jnp
aad
jbe
pop
jo
jnp
cltd
jp
push
sbb
mov
inc
ja
in
stos
jnp
and
pop
or
jmp
mul
scas
shl
sarb
es
lret
popa
in
imulb
cmp
pop
xor
mov
clc
or
std
outsl
cmp
sub
cmpl
mov
int
xchg
shl
xchg
and
pop
jnp
test
push
rcr
pop
mov
dec
add
jns
jns
mov
inc
loop
imul
cmp
ror
js
sti
jnp
fidivrs
rcll
leave
sub
push
lods
cmp
aam
inc
mov
insb
ds
jae
mov
pop
lods
jnp
mov
adc
cmp
mov
test
and
push
xchg
xchg
imull
mov
dec
imul
cwtl
dec
dec
ficoms
bound
xchg
xchg
jne
pop
mov
cmp
xchg
cld
pop
sub
push
mov
cmpsb
mov
fnstsw
and
pushf
add
out
jnp
scas
lods
daa
mov
mov
mov
cli
sub
jnp
lcall
jnp
iret
dec
aam
imul
mov
jnp
in
adc
mov
sub
pop
xlat
jnp
or
or
and
jp
pop
dec
jnp
push
sbb
or
cmp
cmp
out
jnp
mov
fs
cmp
or
xchg
rclb
insl
cltd
pop
addr16
stos
pop
cmp
scas
xor
fidivrl
out
jp
and
popf
insl
and
mov
cmp
jnp
test
xadd
lods
push
enter
fcmovnu
cmp
sub
jnp,pt
or
mov
adc
mov
das
pop
scas
mov
inc
fwait
sbb
jae
mov
push
rclb
jnp
lret
adc
call
inc
shll
jnp
mov
cwtl
lea
add
fldl
lods
cmp
jne
pop
clc
movsl
dec
and
cmpsl
ret
jnp
out
xlat
addr16
or
xor
or
clc
sub
sub
insl
dec
sbb
mov
push
inc
pusha
jne
pop
jnp
push
leave
push
into
test
ss
ret
cli
es
xlat
xchg
repnz
jae
push
cmp
pop
jnp
testb
push
jmp
in
pop
push
bound
push
aas
negb
outsl
xchg
or
pop
mov
mov
clc
pop
enter
fstpt
jnp
sahf
xlat
jbe
jge
cld
jnp
jns
ficompl
fistpl
cmp
add
ds
dec
imul
mov
es
scas
stos
movsb
dec
sbb
jns
push
jnp
outsl
into
jge
imul
inc
cmc
push
xor
jne
pop
sub
ss
mov
push
lock
inc
pushf
les
jne
push
jnp
xchg
icebp
shll
dec
mov
push
insl
xchg
cli
add
mov
cmp
sar
imul
dec
cmp
sub
je
jnp
les
cwtl
out
sbb
dec
clc
mov
imul
cmp
stos
mov
mov
dec
and
sub
cmpsl
jnp
ljmp
jnp
push
outsb
adc
pop
sbb
mov
or
jnp
push
imul
inc
mov
jnp
dec
gs
adc
jae
js
mov
jnp
push
cmp
lods
or
and
sub
ss
jnp
xchg
cmp
xor
jnp
addr16
xor
bnd
and
pop
mov
xor
jnp
push
and
mov
dec
cmp
inc
push
xor
jne
aad
cs
xchg
jnp
loopne
stos
aam
mulb
idivl
jnp
dec
enter
int
dec
jnp
mov
fldt
je
shrb
lea
cld
andl
shr
dec
imul
push
or
aas
mov
bound
dec
iret
fadds
icebp
xchg
insl
dec
in
inc
les
jnp
lcall
enter
repz
shrl
xchg
jnp
push
mov
cs
sub
and
xor
icebp
in
jnp
mov
xlat
cmp
sbb
ds
popa
adc
and
pushf
je
jnp
xor
ljmp
sbb
insb
sbb
les
mov
pushf
mov
sbb
sahf
ja
sub
mov
inc
outsl
mov
std
outsb
out
mov
xchg
fdivrl
dec
bound
add
aam
mov
mov
sbb
jp
jae
scas
mov
and
sti
sbb
std
lahf
jle
stos
add
call
out
gs
cmp
jnp
popl
mov
dec
or
mov
sub
jnp
lcall
jnp
cmp
jne
sarb
push
pcmpgtb
jno
add
mov
mov
cld
bound
mov
out
stos
cli
dec
push
jnp
or
dec
iret
push
shrb
cmp
jns
adc
lea
or
es
push
sbb
mov
cld
jnp
mov
std
or
cli
arpl
jnp
push
mov
sbb
jnp
mov
in
sti
clc
sub
imul
in
cwtl
xchg
insl
jp
lods
mov
into
jns
xor
push
dec
cli
push
ret
aam
dec
cmc
push
cld
push
inc
inc
jae
mov
pop
ja
or
shl
cmp
inc
dec
jmp
bound
xor
ja
jnp
stos
in
xchg
jnp
stos
cmp
bound
push
imul
cld
jae
je
cs
fcomi
stc
cmpsl
cli
sub
and
push
jb
int3
fnstsw
in
mov
jp
add
popf
lret
xlat
and
jnp
icebp
adc
mov
loope
jnp
dec
in
push
push
cmp
cs
inc
sbb
sbb
xchg
fiaddl
xor
pop
js
mov
call
add
psubq
mov
lds
ss
mov
jb
ds
sub
mov
jbe
cli
in
lods
pop
sub
inc
jae
cld
call
mov
jb
out
jno
orl
outsl
mov
mov
push
repz
in
xchg
or
mov
in
jne
dec
lcall
xor
pop
cli
popa
jnp
repz
xlat
orl
mov
dec
or
jnp
cmpsb
push
cmp
daa
mov
jnp
or
push
mov
imul
inc
xor
pop
adc
jnp
adc
test
cmp
test
sbb
push
jnp
loopne
fldenv
or
fdiv
cmp
in
push
push
sbb
rep
rclb
cld
daa
lods
jb
mov
or
pop
nop
js
sub
int3
cwtl
ljmp
cmp
leave
ja
stos
int
jnp
or
pushl
enter
mov
dec
mov
sub
jnp
cmpsb
dec
mov
or
xor
out
fistpl
fdivl
insl
test
lret
sti
arpl
jnp
mov
incl
sub
jnp
xor
lret
mov
subb
sbb
daa
loopne
outsl
sti
add
inc
jnp
push
xchg
push
add
push
cmp
jmp
fstpt
inc
fs
mov
imul
addr16
mov
mov
jnp
jns
shrb
scas
mov
mov
enter
cli
cmpsb
cmp
cmp
mov
dec
outsl
out
jae
imul
shrb
gs
out
lea
mov
out
mov
and
js
stos
sbb
adc
add
and
addr16
leave
aad
sub
in
inc
dec
dec
scas
mov
shrl
mov
stc
les
sbb
and
mov
sbb
jns
sbb
mov
jno
icebp
and
cmc
sti
push
dec
pop
jnp
cmpsl
mov
push
sub
mov
sbb
fists
stc
sbb
jnp
add
jb
lret
icebp
dec
inc
jne
div
mov
hlt
xor
adc
testl
add
and
lock
jae
jnp
mov
test
sub
jno
leave
addr16
and
ret
pop
and
in
test
push
cmp
ds
outsl
cmp
pop
sbb
cmp
jge
inc
stos
popf
fwait
mov
outsl
xchg
cld
sbb
push
dec
pop
cmc
ret
or
jl
jno
pop
push
xlat
jnp
push
mov
ret
es
xchg
insb
js
or
rorb
mov
in
insb
insb
enter
testb
stos
push
ja
mov
data16
sub
sbb
jnp
jmp
js
xchg
enter
xchg
cltd
stos
testl
shl
jne
push
push
jnp
lods
mov
pop
pop
mov
inc
js
push
xchg
sbb
mov
scas
fdivrs
mov
cs
shrb
addl
mov
cmp
mov
shlb
jnp
jne
add
loopne
jnp
push
pop
sub
sub
or
mov
jno
fs
fs
pop
stos
mov
lods
lret
mov
sub
stc
outsb
dec
in
or
lret
stos
jnp
je
mulb
movsl
cmp
and
imul
mov
add
jae
mov
andl
jae
mov
cmp
pusha
jae
xor
ret
loopnew
aaa
hlt
scas
jecxz
sub
int3
arpl
inc
xchg
sbb
rolb
sahf
stc
sbb
dec
mov
add
xchg
repnz
lods
push
sbb
mov
fsubrl
insb
pop
push
sub
lcall
jb
push
dec
inc
dec
cmpsb
mov
nop
mov
ja
fsubs
mov
push
cli
insb
ljmp
jae
fists
arpl
jnp
jns
cmp
push
inc
mov
aaa
sub
clc
xorb
scas
jnp
push
mov
jbe
ret
xchg
jge
mov
jnp
push
sar
cmp
jl
pop
movsl
pop
sub
ror
xor
cli
and
ret
nop
push
adc
hlt
in
xchg
dec
test
outsb
xchg
sub
imul
sahf
insl
out
jle
jnp
out
xchg
or
std
or
es
outsl
xor
ljmp
add
pop
movsb
insl
movsl
repnz
int
jmp
xchg
or
imul
imul
adc
arpl
jnp
xchg
pop
scas
cmp
jnp
cs
cld
mov
cmp
imul
mov
push
xchg
push
in
dec
jge
iret
sub
xchg
sbb
xlat
xor
ret
sub
bound
daa
and
popf
jo
mov
cmp
jbe
jnp
fwait
insl
cmpsb
dec
mull
jnp
ja
std
clc
jne
cmp
push
or
outsl
cwtl
loop
jnp
call
push
cmp
jmp
dec
xchg
sbb
xchg
lcall
inc
or
test
js
idivl
lods
bound
and
mov
out
clc
and
jae
adc
dec
pop
in
dec
mov
aam
xor
cmp
lods
jmp
xchg
aaa
jae
sbb
cli
cld
outsl
xor
in
jnp
push
sub
sbb
or
in
sub
outsb
pop
inc
ss
imul
ja
xchg
fs
mov
jb
mov
pop
lret
jnp
jbe
sub
mov
mov
cmp
sub
sarl
mov
repnz
push
iret
cmp
pop
xor
fwait
out
sub
fnstcw
cmp
sub
sub
xchg
lock
pop
fcomps
lods
jns
inc
dec
ds
inc
push
shll
mov
loope
lock
fwait
adc
loopne
dec
xlat
lret
sbb
push
inc
mov
lcall
dec
xor
stc
jb
jnp
int
mov
mov
push
push
sbb
pop
sbb
dec
test
push
or
and
in
add
pop
mov
jnp
ss
inc
ret
shll
inc
ja
insl
jae
mov
aam
call
ss
sub
js
mov
fadds
mov
jae
pushf
fisubrl
lret
jbe
insl
jecxz
fldenv
stos
testl
das
inc
cmp
je
cmp
inc
mov
xchg
mov
mov
mov
or
int
je
pop
jnp
mov
jae
aaa
ss
pop
fildll
stos
insl
xchg
inc
ficoms
pop
cld
inc
lret
push
add
ja
jno
in
in
mov
pop
xor
rorb
arpl
add
mov
ljmp
fldt
jmp
cmp
shlb
stc
sti
insl
lods
jnp
js
cmp
push
imul
mov
jae
pop
sub
imul
dec
outsb
fdiv
sub
pop
add
jne
das
dec
xor
in
nop
popa
and
stos
lret
and
dec
xor
add
jg
clc
xchg
jge
sahf
add
hlt
mov
lock
cmp
jp
fisttpl
push
cs
add
stc
push
jo
cmc
or
jnp
sbb
out
dec
arpl
jnp
pop
sub
movsb
out
enter
pxor
shlb
inc
cmp
repnz
and
stc
lcall
mov
sbb
push
inc
inc
into
movsb
mov
stos
inc
decb
xchg
pushf
pop
gs
sub
iret
push
mov
scas
fidivrs
lretw
mov
aaa
jnp
inc
add
pop
mov
ret
fldt
in
repz
jl
cmp
jns
ljmp
pop
jnp
mov
push
cmp
or
ret
loop
gs
dec
enter
mov
repnz
mov
cld
es
cltd
cmp
xlat
dec
stos
std
cmpsb
jns
sub
cmp
push
sbb
into
jp
loopne
jl
push
sub
add
push
push
lea
mov
dec
es
jnp
pop
sti
aaa
aad
stos
popf
jnp
cmc
mov
cmp
mov
jnp
sub
push
or
arpl
and
outsl
xchg
call
sbb
ret
inc
cmp
int3
dec
dec
push
or
into
jnp
scas
lods
cli
mov
and
dec
push
xchg
mov
les
sbb
or
xor
shll
ss
mov
ljmp
lcall
push
sarl
adc
or
mov
repnz
or
push
sub
mov
jle
mov
lds
into
dec
popf
xor
jl
mov
add
xor
jne
test
jnp
push
mov
mov
add
idivl
jnp
mov
scas
mov
lcall
push
mov
loop
sub
lds
dec
jnp
mov
sti
jnp
rcrl
push
pop
mov
mov
dec
jne
test
aad
xchg
cld
cltd
jne
shl
jmp
pushf
cmpsb
je
daa
push
in
cmp
mov
sub
push
fisubs
jo
stos
sbb
ds
jp
roll
ja
or
outsb
jnp
cmp
lods
push
or
cmp
dec
push
jge
pop
or
fiaddl
lods
sub
dec
add
mov
jnp
std
mov
clc
jnp
ficoms
pushf
clc
loop
xor
mov
xor
sbb
out
int
or
ljmp
or
jnp
mov
leave
in
lds
dec
push
and
pop
jae
pop
js
jecxz
jne
jo
or
mov
aam
xor
shrb
inc
int
add
mov
jp
push
shlb
adc
jle
test
push
insb
xchg
hlt
mov
stc
sarl
jecxz
loopne
test
and
mov
adc
imull
dec
ss
mov
sti
fisubrl
and
jae
lods
inc
aam
jnp
aaa
test
pop
mov
stos
loop
sbb
sub
movsl
fdivs
mov
mov
cmp
test
cmp
ret
into
jl
mov
push
jge
xchg
imul
mov
dec
mov
jb
mov
ljmp
imul
sbb
dec
subl
cmp
jle
lds
sahf
or
stos
lods
jno
in
and
mov
mov
mov
cmp
ljmp
in
lods
popa
sbb
lds
lea
fistl
push
loopne
sbb
mov
call
inc
insb
cs
stos
dec
adc
gs
mov
mov
cmp
into
cmp
mov
lret
mov
dec
aad
sub
cmp
aaa
daa
jnp
fwait
sub
icebp
sbb
push
inc
sahf
or
sbb
sbb
movsl
jns
imull
xor
adc
jnp
pop
in
std
pop
es
xchg
add
insl
cmpsb
sub
jnp
jne
mov
mov
dec
scas
mov
out
jo
xchg
sbb
cmp
lds
iret
ret
imull
sub
pop
lds
xor
jnp
pop
mov
add
push
inc
popa
jb
fdivrs
xchg
xchg
mov
push
mov
xchg
imul
jns
or
inc
mov
jno
lret
dec
insb
iret
inc
jl
repnz
jg
test
jl
fadds
xchg
jae
jbe
ja
push
xchg
inc
mov
in
pushl
lcall
pop
mov
fadds
dec
in
lcall
jno
out
jmp
movsb
jnp
stos
insb
push
outsl
jb
and
xor
pop
enter
testb
push
loopne
jnp
fimuls
cmp
dec
push
mov
in
mov
dec
jnp
or
ret
loop
fs
sbb
sbb
out
je
lcall
push
dec
out
pushf
fidivrs
mov
je
cmp
dec
jnp
lret
and
mov
xchg
dec
jno
cwtl
cmc
jnp
inc
sti
arpl
repz
outsl
inc
mov
test
fstpt
and
jnp
or
mov
and
or
sbb
inc
jae
adc
mov
es
push
push
jnp
test
fisubl
inc
lods
enter
push
pushf
fwait
add
mov
or
sub
pop
mov
mov
sbb
jnp
popa
mov
stos
imul
pop
push
movsl
sbb
xlat
scas
outsl
jns
sar
mov
jnp
cltd
in
xchg
sub
jnp
sbb
aad
out
pushf
xchg
mov
in
jnp
and
fistpll
pop
sbb
insl
mov
jnp
aas
inc
jo
bound
jnp
mov
fs
mov
je
jbe
dec
jnp
test
add
mov
xor
stc
clc
insb
jnp
and
sub
dec
and
mov
fcomps
cli
call
notb
mov
imul
int3
ds
lods
jae
sbb
ljmp
je
mov
xor
pop
arpl
sahf
in
xor
cmp
ret
and
out
jae
insb
jnp
loop
stc
sub
scas
jb
jmp
xor
imul
imulb
cmp
mov
movsb
jnp
sub
popa
icebp
pop
jo
or
mov
nop
jae
out
lods
lcall
dec
jmp
jle
jnp
cmp
mov
jnp
fsts
scas
imulb
jo
sbb
cvtps2pd
insl
neg
mov
lret
cmp
xchg
sub
push
sbb
pushf
dec
jns
lret
dec
cli
cltd
pop
mov
sahf
add
loop
xchg
jnp
mov
mov
pushf
dec
add
imul
out
push
aaa
jg
push
fldt
sbb
cmpsl
sbb
jmp
lret
sbb
and
xorb
addr16
test
loop
js
das
cmc
mov
lock
test
adc
xor
mov
jnp
adc
icebp
ds
jbe
sahf
cmp
xchg
lret
jmp
xchg
outsl
out
sbb
sub
addr16
in
test
cmpsl
mov
mov
dec
outsl
les
push
sub
or
and
aaa
jmp
jnp
fucomi
or
inc
jg
out
inc
xor
daa
rolb
sub
cmp
clc
jo
int3
sub
mov
jns
and
pop
mov
sahf
test
in
sbb
push
fdivs
mov
mov
dec
push
jnp
xor
cmpl
cmc
ja
test
mov
dec
cmp
pop
daa
out
clc
outsl
fiaddl
jne
cmp
jnp
fdiv
mov
pop
cmp
mov
xchg
imul
cmp
dec
sub
sub
imul
movsl
pop
movsb
enter
cmc
sbb
pop
cmpsl
mov
fnstenv
push
xchg
in
jp
lods
fnsave
cmp
cld
mov
pushf
jae
addl
fnstcw
cmp
into
outsb
shrb
cmc
imul
push
stos
jne
mov
adc
inc
push
dec
dec
in
fstpl
das
sub
fwait
in
add
int
jnp
mov
cmpsb
jnp
xchg
mov
pop
inc
imul
outsw
ja
shl
cmpsb
mov
sti
cs
mov
cmp
sbb
or
and
addr16
fbstp
sub
mov
aas
mov
test
jnp
outsb
dec
in
adc
cmp
inc
adc
negb
xor
enter
and
in
out
jb
inc
mov
mov
decl
pop
insb
int
mov
insl
lea
jne
xlat
lcall
cmp
dec
dec
xor
outsl
pusha
mov
sub
add
rcrl
adc
push
in
xchg
push
into
mov
pop
addr16
in
jae
dec
add
sbb
fwait
add
mov
fstps
xchg
pop
jnp
lods
lods
sub
jnp
mov
xor
jnp
ret
dec
push
jnp
and
scas
lods
push
jnp
fstps
push
bound
movsl
sub
mov
inc
pop
jle
pop
outsl
push
das
jmp
inc
jnp
sbb
in
and
or
jnp
sbb
cmc
and
jnp
inc
mov
add
mov
jnp
cmpsl
fistl
mul
sub
xor
sbb
or
xchg
mov
fadds
jb
jnp
jne
ss
cmpsb
cli
cltd
imul
mov
cmp
jo
test
lret
je
out
jnp,pt
cmp
push
shlb
adc
imul
add
popa
dec
mov
sub
mov
stos
sti
lods
or
sbb
sbb
mov
xchg
push
jnp
xchg
pop
mov
test
or
mov
cwtl
insl
mov
push
xchg
in
jnp
or
lahf
aaa
add
out
mov
incl
jae
hlt
push
jnp
adc
test
jnp
imul
fimull
xchg
push
fnsave
jnp
push
add
push
mov
add
jle
xor
push
or
jae
cmp
test
push
dec
mov
dec
cli
add
jae
sbb
or
and
aaa
dec
jbe
subb
pop
pop
sti
jne
test
data16
ja
mov
shlb
xchg
pop
jnp
push
dec
clc
pop
xchg
mov
jne
test
in
jnp
dec
xor
jb
shrd
or
imul
add
jnp
lcall
jnp
mov
cmpsl
sbb
daa
jnp
sti
or
xchg
out
jecxz
mov
jnp
popf
mov
or
divb
dec
sub
int3
stos
jns
inc
lret
mov
sbb
mov
mov
or
fildl
jnp
pop
mov
popa
jnp
fwait
xchg
cli
stos
int3
lcall
filds
leave
jbe
dec
jmp
jnp
insl
iret
or
lea
test
cmc
insb
dec
clc
xor
xor
fisubrs
push
sbb
lds
lea
fnstcw
jae
jne
ficoms
xor
imul
jmp
fwait
jae
lods
inc
mov
cmp
insl
dec
pop
mov
jnp
xor
pop
js
xchg
idivl
dec
cmc
fdivrl
push
jnp
sti
sub
fldenv
loope
jnp
or
mov
bnd
xchg
mov
ss
mov
icebp
pop
pop
fmuls
lock
in
rcrl
jnp
cmp
int
inc
and
jno
mov
repnz
push
jae
cmpsb
xor
push
inc
xchg
es
into
sarb
stos
dec
pop
xor
fmuls
mov
jns
xor
enter
add
add
call
xchg
push
pop
cli
or
or
mov
lcall
and
mov
sti
xor
pop
fidivs
mov
inc
pop
add
jle
es
lock
call
insl
push
aam
call
and
cmp
ja
and
jnp
inc
pop
fiaddl
xchg
cmp
scas
out
cwtl
pop
cmc
mov
imul
lock
xchg
das
outsl
test
hlt
lods
jmp
pop
mov
in
jnp
outsb
jg
movsb
sahf
fildl
sub
mov
mov
xor
mov
jb
rcrl
int3
sbb
sub
or
push
scas
xor
jbe
mov
outsl
xchg
loope
aaa
data16
lods
cld
ja
enter
aas
mov
loope
jnp
test
gs
jno
mov
jnp
ret
cmc
out
xchg
aad
inc
pop
icebp
negl
jnp
js
movsb
les
mov
xor
or
loop
sbb
jo
adc
in
jmp
arpl
jo
jae
popf
and
xchg
pop
jnp
and
out
out
xor
in
cmp
xchg
aam
dec
jg
jnp
fptan
cs
outsb
ss
sbb
shlb
insl
cltd
pop
jae
add
cs
xchg
popf
movsl
jge
fstpt
cmp
sbb
out
out
push
call
xchg
outsb
sub
jg
outsl
mov
push
sahf
mov
jnp
hlt
pop
mov
or
call
xor
lods
pushf
mov
sbb
jne
xor
fldenv
in
lcall
jnp
sub
das
push
sbb
mov
imul
mov
aad
pop
jl
popf
pop
sub
gs
cmp
ret
push
sbb
and
testl
jbe
stos
mov
scas
cmp
sub
jl
bound
fmul
shll
jnp
out
lahf
or
jnp
setbe
jo
push
mov
xor
pop
je
or
xor
cltd
movsl
lcall
int3
or
xor
sub
xor
jnp
mov
das
mov
push
jno
sub
aas
fcomps
out
jnp
dec
gs
jnp
push
lret
lods
push
cmp
xchg
jo
pushl
dec
leave
mov
in
jnp
push
adc
cmp
jo
pop
inc
repz
imul
add
iret
loope
sub
mov
dec
cld
mov
sahf
adc
sub
pop
movsb
scas
jnp
outsl
mov
xchg
add
fimull
outsl
pop
ljmp
sub
lods
cli
sub
jae
or
jnp
movsb
cmc
dec
mov
fidivrl
xor
pushf
sub
push
hlt
mov
mov
insb
lea
push
aaa
je
jnp
sub
lret
cli
dec
bound
jns
in
mov
pop
in
sbb
imul
stos
sbb
into
arpl
gs
and
jnp
lcall
jnp
jecxz
std
roll
sbb
sub
stos
or
in
push
je
jbe
xor
lock
push
sub
xor
dec
inc
repnz
mov
inc
in
ja
jns
enter
xor
jnp
lcall
sbb
lods
push
dec
pop
int
iret
movsb
fstps
out
call
pop
xchg
mov
ds
push
xchg
jnp
jbe
xchg
or
hlt
mov
or
push
bound
cmp
scas
mov
jbe
aad
das
rclb
lea
jnp
and
shr
outsb
stos
dec
cwtl
testl
scas
and
rcr
sub
clc
mov
test
pop
jae
scas
pop
jle
or
or
nop
dec
lods
jnp
mov
dec
dec
jnp
inc
mov
sarb
in
shll
xchg
sub
mov
lret
cmc
clc
add
dec
jb
orb
and
cmp
int
js
cli
cmp
shrb
mov
test
out
int
xor
cmpb
mov
jnp
mov
fcomps
mov
jnp
xor
sbb
jnp
out
mov
inc
cltd
mov
out
inc
sbb
ret
enter
jae
mov
pop
jnp
mov
mov
add
or
sti
dec
pop
adc
and
cltd
jge
inc
insb
pop
xchg
out
fsubrs
loop
mov
jnp
enter
nop
fdivrp
sbb
jae
mov
adc
xchg
add
or
or
addr16
jae
sub
idivl
test
jns
xor
xchg
cltd
fidivs
or
popf
cmp
add
pop
jnp
cmp
mov
jnp
test
jp
iret
lcall
inc
dec
clc
into
mov
push
push
ja
jae
mov
pop
in
fnstcw
imulb
jno
xor
jnp
insb
and
lcall
lcall
dec
insb
mov
xor
nop
arpl
lock
pushf
or
pop
and
or
cmc
push
inc
scas
push
sub
inc
lods
mov
popf
lods
fwait
jbe
cmp
leave
loop,pt
cmc
dec
xor
jp
xlat
repnz
sahf
repz
xchg
jae
mov
fldt
mov
cmp
out
sbb
sahf
jnp
or
je
call
mov
or
pop
mov
lret
and
out
push
int
test
loop
jnp
mov
lret
daa
test
outsl
dec
ja
push
fidivrl
mov
xchg
jnp
xor
mov
sbb
cmp
push
sti
xor
or
jne
push
mov
loop
lcall
pop
and
fdivr
cmpl
push
in
sub
hlt
sbb
jnp
sbb
inc
pop
test
jecxz
mov
jl
jnp
sti
daa
call
sbb
clc
scas
mov
cmpsl
jnp
lods
sbb
pop
xchg
xor
ja
pop
shr
pop
insb
jnp
inc
fcomip
and
sub
ss
gs
nop
test
jnp
or
cmp
lock
jo
jnp
scas
lods
pop
movsl
xor
cmpsb
hlt
mov
das
inc
cmp
jae
fsubr
xchg
out
aad
cltd
mov
jo
mov
and
pop
movsb
jnp
outsl
mov
sbb
pop
inc
sub
jnp
out
fstpt
jnp
or
push
pop
xchg
fimuls
out
pop
xchg
mov
imul
lret
bound
add
jnp
pop
fcoms
and
cmp
lods
idivb
loopne
fsubr
repnz
pop
imul
das
adc
sub
inc
adc
jnp
fidivrl
stos
jb
xchg
lds
jae
cwtl
jnp
into
in
xchg
xchg
jecxz
jnp
cmp
fcoms
sub
sub
aam
add
pop
jne
push
std
jae
jp
stos
cwtl
dec
or
clc
sahf
push
jnp
cmp
repz
inc
sti
cmp
cmp
call
dec
mov
std
inc
mov
out
popf
push
jecxz
hlt
ret
mov
outsl
fs
jmp
jae
ja
hlt
jle
jg
icebp
jnp
jl
inc
xchg
mov
cwtl
stc
gs
mov
loopne
sahf
jnp
outsb
push
sbb
mov
inc
jnp
cmp
fwait
xchg
or
fmuls
sub
jae
pcmpeqd
cmp
or
jo
data16
leave
mov
dec
jnp
sbb
xlat
lods
mov
jnp
stos
cmc
or
or
jae
inc
out
or
call
dec
xorl
rorb
frstpm(287
jl
dec
loope
dec
in
idivb
lds
imul
cli
mov
jo
jp
mov
dec
cld
jns
dec
add
jnp
add
ret
mov
mov
in
jnp
fidivs
jnp
sub
sbb
jle
bnd
push
xlat
jo
stos
adc
je
dec
and
outsl
repz
sarb
inc
cmp
imul
jns
jb
lea
ljmp
xor
arpl
mov
adc
sub
jns
push
mov
cmc
jae
stos
pop
lret
add
xchg
xchg
and
jp
cmp
xchg
fnstenv
pop
dec
sub
cmpsb
jnp
mov
mov
or
lret
xor
jae
mov
shrl
pop
lods
cmc
out
in
mov
or
adc
xchg
jno
dec
scas
and
jnp
stc
notb
fdivs
xor
jnp
mov
test
lcall
cmp
mov
pop
pop
outsl
cmp
jbe
sbb
mov
sub
idivb
ljmp
pop
iret
sbb
pop
xlat
xor
jnp
jp
xor
imull
jnp
popa
mov
xchg
push
ljmp
loopne
bound
mov
cmp
fs
gs
pop
jb
into
pushf
mov
and
mov
out
sbb
cmp
push
push
mov
xor
jnp
lds
pushf
or
fistpll
jo
clc
jnp
mov
sub
xor
cmp
ja
dec
sbb
jnp
ret
leave
rcll
jns
and
dec
dec
loope
mov
cmpsb
or
out
xor
cmp
fidivrl
sbb
inc
out
ds
jnp
in
int
lock
rclb
mov
out
jnp
lret
enter
mov
xchg
out
outsl
xor
mov
or
push
push
ja
xor
add
inc
or
mov
outsl
sub
cmp
fmuls
jae
dec
mov
or
outsw
mov
or
js
jp
repnz
sub
mov
fwait
ret
or
shrb
jnp
clc
jcxz
in
pop
lcall
mov
mov
outsb
jnp
sbb
enter
inc
fsubs
mov
or
into
dec
jl
mov
or
fisttps
pop
mov
shl
push
inc
jnp
mov
jne
call
aaa
sarl
push
call
ss
clc
ljmp
outsl
adc
or
loope
inc
jb
push
push
jnp
dec
lods
imul
cmp
popa
dec
mov
mov
iret
hlt
sbb
sbb
pop
stc
pop
mov
sbb
fcompl
in
les
in
sbb
leave
sbb
sub
fsubs
push
aaa
push
adc
xchg
jnp
scas
cmp
cmp
jnp
cmpb
pop
mov
mov
test
mov
sbb
mov
insl
pop
fistl
push
dec
pop
jnp
orl
pop
cltd
sti
cmp
push
mov
sub
ljmp
out
dec
xor
jnp
loopne
in
or
mov
aaa
push
or
sub
xchg
sbb
mov
jb
lcall
jns
jnp
addr16
ljmp
int3
int
out
cmc
mov
fwait
inc
jge
inc
sbb
loope
fstpt
hlt
push
fidivrs
fistpll
add
push
stos
bound
mov
and
pop
lret
sbb
jnp
in
sbb
jge
and
fnsave
out
jp
jnp
push
push
push
nop
sbb
scas
js
ficoml
dec
in
jnp
insb
cmp
stos
dec
ret
and
push
cli
jnp
popf
jp
sti
sub
push
stc
cmp
ja
pop
lret
jnp
dec
cmp
xchg
jne
negb
pop
enter
mov
dec
out
and
cmp
jno
enter
mov
ss
sub
jle
jnp
dec
sti
dec
cmp
aad
xchg
outsl
mov
std
movsb
xchg
or
jg
insl
xchg
test
sbb
inc
mov
jnp
fiaddl
jnp
pop
xor
bound
xchg
daa
xchg
test
dec
lret
test
pop
mov
ror
mov
subb
add
jae
mov
js
cmp
movsb
jnp
mov
mov
lods
aad
dec
sub
stos
jnp
sub
mov
hlt
or
cmp
dec
shl
ds
jne
fadds
cmpl
fsqrt
stc
popa
jo
imul
clc
lea
jnp
ficoml
sub
lods
arpl
fldl
sbb
mov
lret
mov
call
pop
lret
bound
cmp
jecxz
jne
scas
sbb
jnp
mov
jnp
dec
or
and
sub
jnp
outsl
xchg
bound
xor
out
jne
push
cmp
mov
movsb
mov
xor
or
pop
lcall
push
std
xchg
xchg
test
and
jnp
mov
sti
xchg
sbb
ljmp
lock
jmp
jge
jnp
xchg
push
rcrb
sbb
lret
repnz
jnp
imul
jecxz
or
mov
outsb
in
xchg
sarb
ror
cltd
aas
lods
mov
in
xor
inc
jnp
int
xchg
lcall
std
ja
jne
jne
imul
xchg
insl
arpl
mov
stc
jno
lahf
rcr
add
sbb
ljmp
lods
sub
dec
mov
inc
add
jge
sub
mov
adc
push
lss
adc
cs
les
inc
bound
fwait
or
lcall
sti
imul
movsl
or
call
fildl
mov
push
repz
xor
pop
ret
xlat
lods
loopne
aas
push
xor
aaa
jmp
xor
mov
outsb
push
cmpsb
int
jg
jnp
jp
cmp
push
dec
lods
pop
sub
dec
cmp
lock
sub
ljmp
or
xchg
adc
dec
xor
pop
or
push
movsb
push
inc
orb
jnp
mov
cmp
cmp
xchg
scas
dec
mov
pop
or
sub
les
mov
cmpsb
fistpll
pop
mov
fidivl
ret
push
mov
jnp
test
mov
inc
mov
jnp
sbb
mov
sti
lods
xlat
jnp
cmc
dec
and
fisttpl
aaa
and
hlt
jecxz
cmp
adc
push
xchg
xchg
ljmp
pop
and
lock
jmp
shll
xchg
imul
data16
mov
mov
lret
or
xor
or
ret
enter
jnp
ret
xchg
mov
pop
in
dec
jnp
dec
stos
push
sub
pop
pop
imul
mov
sbbl
jl
aas
mov
insb
xor
subl
test
jmp
out
jnp
cmp
push
xor
sbb
xor
xchg
outsl
aaa
xor
add
xor
pop
adc
cmpsl
sahf
xor
ja
sarb
std
sbb
pop
loopne
aaa
or
cmp
add
jnp
adc
ficompl
sbb
jnp
dec
cmc
mov
lret
mov
test
std
adc
in
les
ja
movsb
sub
mov
pusha
hlt
or
test
push
mov
cmp
jne
jge
lahf
dec
xorl
in
shl
sbb
aam
pop
jae
push
lods
xor
jnp
mov
xorb
sub
es
sti
mov
mov
lock
imull
sbb
or
call
bound
sarl
fsubr
jbe
cmpsb
push
pop
mov
sbb
jno
sahf
mov
cmp
imul
outsb
arpl
jnp
push
rcll
xchg
jnp
aaa
out
cmpsl
or
stos
and
push
scas
mov
in
fdivs
jnp
xchg
xchg
nop
dec
xlat
sbb
push
push
sarb
aaa
jecxz
push
sbb
pop
mov
imul
aaa
call
lcall
mov
testb
dec
push
out
push
jnp
addr16
cld
add
mov
sbb
cmp
jnp
xchg
adc
mov
iret
fimull
adc
jns
lods
pop
ljmp
mov
inc
jnp
hlt
and
and
popa
dec
lret
adc
dec
mov
or
dec
je
add
add
jns
sti
add
push
mov
sahf
jnp
mov
clc
push
imul
push
mov
sbb
stos
call
mov
push
xchg
fsubs
or
or
mov
arpl
mov
pop
push
std
stc
test
xchg
lret
or
mov
sti
outsl
mov
jnp
cwtl
loop
sahf
jle
imul
cmp
xlat
dec
jo
ds
iret
xchg
sbb
sub
push
lods
cmp
lret
repnz
call
or
or
jnp
sbb
mov
into
jnp
inc
xchg
mov
imul
xchg
lock
stos
mov
cmp
jne
and
lcall
cmp
or
jnp
adc
pop
jp
and
lret
ss
dec
clc
fisubrs
fwait
mov
and
insb
mov
pop
cmp
push
sub
out
jne
fwait
rorb
xorb
clc
movsl
lock
sbb
pusha
aaa
sub
push
push
stos
dec
into
ja
mov
in
hlt
mov
jo
lods
idivb
push
jns
push
addb
ja
pushf
cmp
bswap
push
adc
into
mov
enter
xchg
jnp
cmpsb
mov
daa
dec
jp
pushf
or
dec
lods
arpl
es
mov
pop
lcall
addb
jne
jb
arpl
imul
sub
pop
mov
and
in
jnp
pop
into
cli
mov
loope
addl
test
scas
adc
sub
cmc
cmp
mov
jecxz
nop
bound
jnp
vorps
add
cmc
repnz
sti
ret
xchg
push
cmpsb
or
fs
in
test
jnp
xor
or
jnp
add
test
dec
outsl
addl
idiv
in
and
sub
mov
mov
xchg
jnp
jb
outsb
clc
in
sub
mov
sub
mov
and
lret
hlt
jnp
mov
cmpsb
pusha
das
in
xchg
cmp
ret
hlt
jnp
out
mov
imul
dec
jnp
pushl
cmp
mov
xor
push
insl
or
jnp
dec
mov
add
pop
fildl
dec
dec
cmc
in
or
mov
lods
cwtl
js
xchg
mov
int3
aaa
movsb
mov
push
mov
pop
push
out
add
lea
leave
stos
jns
lcall
lds
test
adc
insl
push
push
push
jnp
or
or
nop
adc
enter
jnp
lds
mov
xchg
cmp
data16
cmpsb
and
pop
lods
fstpl
popf
push
je
imul
scas
cvttps2pi
lcall
shlb
jnp
loopne
jmp
jnp
int3
cmp
sub
mov
jmp
push
fiadds
scas
jns
test
lcall
jae
rcrb
jno
clc
sub
pop
cld
add
pop
or
jnp
cwtl
lret
loop
das
push
mov
sbb
jnp
xor
pop
ljmp
jp
jnp
rclb
push
daa
jnp
stos
cmp
pushf
dec
xchg
push
jnp
js
out
cltd
add
jnp
jno
lcall
mov
push
jnp
or
pop
fistpl
sahf
add
shrb
sbb
lock
pop
jge
mov
loopne
xor
lret
cmp
jp
push
insl
jge
sbb
cmp
stos
add
jnp
pop
push
adc
out
adc
divb
jne
stc
hlt
sti
sub
adc
jle
pusha
adc
call
sub
cld
lcall
cmc
imul
bound
sarb
adc
cmp
xchg
push
mov
sar
out
inc
inc
jnp
xlat
push
pop
mov
fdivrs
cmp
mov
jge
cmpsb
imul
inc
test
push
cmp
dec
adc
or
imul
pop
dec
jne
jns
jp
mov
xchg
push
jae
loope
and
jnp
cmc
jp
mov
adc
pop
jbe
cld
aaa
insl
cmp
shrb
jnp
lea
insb
aas
xchg
gs
pop
sub
and
mov
ret
clc
int3
lods
iret
mov
dec
sti
xor
jnp
and
sub
jge
mov
jnp,pn
jmp
jne
jno
sbb
lds
cmp
dec
ja
pop
push
cmp
cwtl
ror
jnp
out
lock
mov
pop
mov
fsubrl
sbb
and
pop
stos
xorl
cmp
dec
lea
and
lods
mov
inc
push
pop
or
jnp
mov
scas
dec
jge
insl
xor
movsb
out
push
das
and
sub
push
jnp
inc
fnclex
ficompl
sub
in
aas
outsl
mov
sbb
fcomps
inc
stos
pop
out
mov
outsb
cmp
ss
in
jnp
adc
sti
scas
arpl
mov
in
jbe
or
insl
adc
mov
lcall
mov
inc
fimull
or
cmp
popf
imul
aad
jae
test
loop
jnp
push
stos
stos
mov
ja
aaa
call
ror
pop
jnp
scas
addl
jo
jnp
dec
dec
out
lods
jae
mov
ja
dec
popa
sbb
mov
fstpt
push
repnz
mov
push
jnp
inc
inc
cmp
add
jmp
jne
into
push
jnp
dec
test
jnp
cmp
sub
dec
sbb
out
movsl
sub
jge
sarl
mov
push
pop
data16
cmp
xor
jge
aad
lcall
mov
dec
xadd
rorl
inc
or
jp
clc
jnp
or
cs
fwait
pop
mov
call
or
xchg
fildl
xor
xlat
push
xor
sbb
fistl
jae
orl
cld
jnp
inc
mov
sub
insb
stc
xorb
cmp
lahf
jnp
mulb
stos
dec
scas
push
or
and
mov
lret
insl
add
adc
out
out
pop
mov
xchg
repz
cmp
mov
jne
xchg
jnp
mov
xchg
jp
cmp
jnp
fsubs
test
jmp
jnp
pushf
xlat
dec
jo
cld
call
push
fsubr
lret
lods
cmpsb
mov
mov
push
cmp
dec
repz
mov
cmp
adc
dec
sbb
ss
push
sbb
cltd
lods
loope
mov
pop
mov
int
sub
mov
divl
or
pop
rcrb
mov
mov
imul
jnp
mov
ljmp
sub
jnp
sahf
add
xor
loope
lods
cmpl
adc
notl
jmp
mov
jge
and
mov
pop
call
lock
xchg
cmp
push
cmp
mov
jnp
sub
add
aaa
jne
pop
jnp
inc
push
sbb
jnp
cmp
fisttpll
xchg
jnp
sub
sub
in
sahf
jnp
and
stos
mov
mov
aas
jg
mov
ljmp
jp
jmp
scas
pop
mov
push
jne
jmp
insl
loopne
xchg
mov
jnp
stos
in
aaa
ret
xor
bound
hlt
testl
aam
add
push
jae
fwait
das
mov
aaa
xchg
jae
lcall
scas
gs
mov
rorl
incl
sbb
fstpt
lahf
adc
clc
sbb
ljmp
cmpsb
mov
mov
add
mov
sub
adc
jns
inc
sbb
jnp
mov
xchg
adc
jbe
inc
pop
sub
jnp
cwtl
rcr
adc
push
cmp
fisubrs
sub
out
jae
mov
xchg
inc
pop
lret
jnp
push
cmp
dec
lahf
sti
jnp
push
jnp
imul
add
sub
mov
sbb
mov
insl
or
int3
mov
js
xchg
dec
jo
mov
sahf
mov
fwait
push
jg
jo
in
in
jnp
push
cmp
jle
insl
jnp
xchg
out
fcmovnu
hlt
or
mov
and
stos
inc
add
daa
outsl
jb
jecxz
jnp
adcb
jnp
pop
fwait
testl
fst
sub
mov
mov
das
mov
or
mov
push
dec
dec
repnz
and
jnp
mov
fcmovu
mov
jnp
cmc
sti
push
sub
jnp
mov
pop
mov
jbe
orl
scas
cmp
jnp
sub
xchg
fs
int3
out
lods
jmp
jnp
imul
pop
aam
mov
xor
repnz
jnp
ljmp
pop
or
mov
inc
dec
popf
push
js
insl
ret
outsl
push
pop
insb
ja
fisubrs
idivl
jmp
and
xchg
dec
test
inc
mov
lea
pop
jae
shll
cmpsb
addr16
jae
mov
stos
sbbb
xchg
imul
mov
iret
out
or
js
stos
xchg
jnp
xor
leave
imul
mov
pop
lcall
fcomps
dec
mov
or
call
jae
jo
push
movsl
stos
cld
jnp
aad
dec
xchg
pusha
ss
mov
inc
jae
cwtl
test
adc
jmp
jae
adc
jnp
aad
or
imul
int3
jae
push
mov
call
stos
and
sbb
sub
out
lret
repnz
cs
cmpsb
jnp
push
mov
mov
aas
jbe
push
imull
or
sub
ret
sub
mov
lret
js
sbb
xor
jnp
in
cmpsl
cmpsb
fwait
cmc
cwtl
lock
push
imul
and
xor
sub
xor
dec
leave
pop
inc
scas
mov
jnp
ret
mov
cmc
push
jbe
sub
stos
fistpll
loopne
sbb
push
lods
js
scas
jbe
inc
call
iret
int3
add
push
dec
gs
ja
sbb
in
dec
sbb
or
into
jno
jbe
push
xor
jg
das
fbld
xchg
xchg
mov
jnp
jmp
sbbb
xor
ret
fnstcw
ja
jnp
push
arpl
or
rclb
pop
push
mov
sub
lcall
cld
insb
in
sbb
jnp
cmp
dec
in
es
mov
iret
ljmp
jl,pt
mov
sbb
dec
aaa
jnp
or
movsb
adcl
jne
jp
test
mov
pop
dec
cltd
orb
jnp
xchg
add
cmc
mov
add
out
fiaddl
mov
jle
push
jnp
lret
mov
xorb
adc
add
jp
lret
jne
loopne
adc
cwtl
jnp
outsb
push
sub
push
insl
dec
cmp
jnp
adc
out
push
fcmovnu
les
stos
in
add
into
lret
push
lcall
orb
push
mov
jnp
jbe
lock
arpl
loope
xchg
sub
jmp
jnp
or
sub
fstpt
not
pusha
sub
cmp
jnp
call
fcmovne
mov
mov
lds
arpl
cmp
cmp
jbe
jnp
sbb
ret
xchg
dec
cmp
aaa
mov
je
add
std
inc
or
pop
jae
and
daa
jnp
sub
clc
jnp
enter
pop
fldcw
fldt
jae
std
sbb
adc
jnp
cmp
bound
mov
jb
xchg
jmp
dec
mov
outsl
hlt
movsb
xchg
jmp
cmp
test
sub
pop
sti
ljmp
ret
jnp
movsb
xchg
mov
jnp
test
sbb
push
stos
jnp
xchg
mov
pushf
mov
pop
call
cmp
dec
in
cmp
je
mov
dec
aas
inc
jns
sti
xchg
jnp,pn
icebp
and
mov
mov
xor
jnp
pop
pop
mov
jnp
jecxz
pushf
add
xchg
mov
arpl
xor
add
inc
or
out
sbb
popf
lret
shrb
stos
jnp
push
jbe
adc
int3
daa
jae,pt
mov
stos
and
mov
outsl
loop
push
or
pop
lods
xchg
and
mov
cmp
xor
ljmp
in
das
cwtl
in
mov
fadds
jae
mov
repnz
loopne
jnp
fisubrs
int
xor
inc
cs
or
mov
ds
out
sub
out
clc
idivl
jnp
add
add
in
jecxz
cmp
push
mov
into
push
sbb
les
jg
outsl
lcall
xor
mov
xchg
out
mov
iret
in
pop
imul
sbb
in
jge
pop
mov
cmp
sub
mov
scas
lods
cmp
aad
into
cli
mov
dec
cmp
cmpsb
cs
les
xor
jnp
mov
or
mov
data16
dec
mov
and
jnp
or
insb
sbb
mov
sub
ja
stos
cwtl
mov
inc
aaa
mov
jnp
clc
shlb
arpl
out
push
dec
decb
scas
jae
int
mov
cli
cmp
push
testl
xchg
outsb
jl
stos
or
lret
in
push
js
push
mov
pop
push
xchg
orl
inc
dec
xchg
loop
movsb
fldl
adc
arpl
bound
sbb
fistl
decb
mov
mov
in
and
jl
lock
stos
outsl
jnp
push
pop
pusha
mov
adc
lods
mov
cmpb
inc
or
addl
je
jae
sti
insb
cmp
mov
adc
xchg
xchg
aad
int
out
inc
jns
sahf
jnp
push
out
mov
or
lods
mov
mov
cmp
jg
jnp
pop
in
sbb
mov
das
jno
call
loop
cmc
jmp
or
jnp
mov
fnstsw
mov
push
cmp
push
stos
pop
insl
addb
jnp
ljmp
jnp
lods
shl
dec
push
in
cmp
fldt
jae
inc
mov
dec
pop
sbb
jle
mov
dec
cli
jnp
bound
enter
icebp
sbb
sub
jecxz
or
xor
ja
sub
cmpsb
fbld
jae
cmp
arpl
arpl
pop
xor
in
xchg
pusha
jnp
shrl
or
mov
push
jbe
jl
jae
sub
cltd
shrb
cmp
cmc
loope
xchg
stos
cs
jnp
sbb
test
or
scas
pop
mov
add
sub
outsb
jne
and
jnp
adc
and
xchg
and
pop
sub
push
jmp
mov
lods
ret
dec
clc
adc
movsl
cmp
mov
aaa
fwait
adc
loop
jnp
daa
dec
mov
pop
out
cmp
sahf
push
mov
xor
cmc
inc
mov
jnp
xchg
push
xchg
push
mov
aad
cmc
mov
sbb
sub
ret
or
jbe
mov
xchg
sbb
fldcw
mov
xor
sub
mov
iret
enter
mov
ret
jge
mov
clc
std
xor
xor
jecxz
mov
jnp
jbe
inc
rorl
push
mov
push
imul
pop
sahf
pop
cmp
mov
jnp
out
push
fscale
aam
cld
jnp
xor
incb
test
in
cmp
sbb
loope
lea
xor
cmp
jp
ja
push
cmp
lods
call
push
xchg
sbb
dec
stos
sub
sarl
out
lea
cltd
or
mov
clc
jae
mov
mov
jnp
jo
adc
jmp
cmp
xlat
jnp
ljmp
popa
jge
cltd
enter
jo
adc
aad
adc
sub
inc
or
jae
mov
fs
idivb
mov
loope
arpl
mov
jnp
rolb
inc
test
data16
lods
bound
aad
push
leave
repnz
popa
push
inc
decl
inc
cmpb
mov
stc
cli
aaa
imull
pop
aad
sti
fmul
popf
adc
cmc
jnp
scas
sub
xchg
addb
mov
jnp
bswap
mov
fnsave
sarl
push
pushf
cld
dec
sbb
or
xor
pop
sbb
pop
push
and
jnp
sbb
in
popf
xchg
aas
pop
pop
jp
dec
cpuid
imul
add
add
inc
call
les
jnp
mov
sbb
xchg
dec
cli
jnp
pop
mov
ljmp
push
insb
imul
xchg
or
xchg
movsb
push
push
xchg
outsl
iret
cmp
xchg
loopne
mov
or
xor
sub
and
jg
jnp
data16
xchg
scas
or
loopne
cwtl
dec
inc
cli
jnp
lods
add
imul
popa
or
iret
cmc
jnp
xor
push
mov
repnz
dec
ja
loop
hlt
js
in
pop
inc
in
sbb
int3
insl
mov
sbb
movsl
xor
adcl
scas
adc
lahf
inc
sbb
cld
jnp
mov
cs
imul
leave
outsb
jb
fstpt
clc
insb
mov
mov
cmp
xchg
in
pop
fisubrl
cmp
push
in
jp
mov
jnp
pushf
xor
pop
jne
jnp
ret
jmp
ret
xchg
jnp
mov
cli
cmp
loope
inc
push
mov
jnp
xor
lods
mov
fs
fisubrl
mov
jnp
dec
pop
cmp
xorl
fwait
and
shrb
push
stos
sub
mov
pop
or
imul
ja
push
cwtl
jnp
pop
pop
ljmp
mov
gs
ss
sbb
stos
or
daa
pushf
mov
jnp
jbe
push
mov
sub
jp
or
out
inc
sahf
scas
test
mov
push
push
jnp
inc
cmp
or
mov
scas
jecxz
dec
mov
hlt
ljmp
pop
or
mov
dec
xlat
ret
inc
jnp
sub
jno
in
leave
out
loop
xlat
or
sub
jnp
mov
sbb
pop
mov
dec
dec
jle
or
outsl
mov
into
lods
sbb
loopne
sub
add
out
shrl
mov
adc
cwtl
imul
push
push
out
or
pop
sub
mov
imul
aaa
cmp
xor
mov
and
loopne
xchg
call
insl
je
int
mov
add
jo
imulb
push
jnp
inc
inc
dec
jne
xor
jnp
sti
cli
or
xor
mov
push
jnp
fsubrl
popf
cwtl
jmp
jne
dec
push
aad
cmp
lret
lcall
mov
ss
mov
jnp
xor
js
mov
push
idivl
arpl
in
mov
fnstenv
jp
cmp
hlt
or
push
in
cmpsb
inc
xchg
cli
in
decb
outsl
ljmp
test
dec
clc
pop
and
inc
pop
and
jecxz
mov
in
inc
cwtl
xchg
outsb
cli
adc
scas
clc
push
leave
jnp
enter
and
jnp
aam
clc
sti
xor
pop
and
mov
pop
mov
pusha
jnp
pop
add
adc
cmp
or
pop
mov
insb
push
imul
js
mov
pop
in
jnp
mov
add
dec
stos
pushf
add
iret
test
jnp
cld
lret
pop
dec
sub
nop
jnp
mov
outsb
inc
call
dec
je
mov
jo
imul
inc
xor
jnp,pn
in
mov
cmpsb
fisttpl
fisttpll
mov
fstpt
add
mov
ret
daa
xor
lods
iret
dec
mov
adcl
and
das
data16
in
scas
pop
insl
fistpl
cmpsl
push
jae
aaa
pop
in
fisubrl
jbe
pop
repnz
jnp
push
cmpsl
jl
neg
adc
push
pop
cmp
rorb
test
int3
mov
test
lds
dec
sbbb
pop
in
jnp
outsl
fnclex
sub
es
jge
jbe
mov
leave
dec
pop
insb
insl
push
xchg
jb
sarl
cmp
scas
test
inc
mov
lret
les
imul
or
adc
jnp
push
mov
imul
mov
xor
ja
sbb
dec
jnp
pop
adc
popa
int3
mov
test
or
pop
inc
dec
sbbl
scas
jp
pop
outsl
or
lahf
cmp
cltd
pop
jge
mov
push
fistpll
jg
jp
jle
mov
test
xchg
cli
movl
mov
xor
repnz
les
jb
inc
stc
xor
mov
push
mov
jae
and
fdivs
xchg
ret
sbb
sub
cs
cmc
mov
push
rcrl
and
into
sbb
ror
mov
mov
push
fimuls
xor
dec
mov
and
popf
bound
fnsave
cmp
xchg
inc
lods
fidivs
repnz
inc
imul
lret
enter
addl
xchg
stos
loope
dec
sub
test
mov
scas
dec
jnp
mov
jnp,pt
xchg
pop
sbb
or
dec
cmc
in
aaa
sarb
push
push
daa
inc
stos
sub
jnp
or
imul
pop
cli
mov
sbb
dec
sub
jg
dec
imul
dec
push
lcall
icebp
pop
jne
sbb
cmp
test
out
sub
jnp
out
xchg
jg
mov
mov
das
mov
or
push
idiv
mov
aaa
repz
roll
adc
ret
jnp
or
fwait
jnp
and
adc
mov
fildll
and
pop
imulb
xor
dec
mov
movsb
add
fbld
jnp
mov
movsl
dec
dec
and
jns
sbb
sub
aam
and
jae
outsb
add
shl
jnp
loop
push
xchg
mov
jp
lds
ret
scas
add
pop
sub
outsl
or
cmp
out
xchg
movsb
mov
jnp
mov
mov
insb
mov
mov
cli
ja
movsb
sbb
adc
in
clc
and
jnp
andb
stc
in
fdivp
in
in
jbe
cmp
xchg
jecxz
stos
and
jnp
ja
sbb
lods
shl
dec
push
or
xor
ss
leave
fstpt
sbb
mov
icebp
test
scas
iret
xchg
sub
mov
stos
nop
cmp
int
ja
shlb
cltd
lods
in
xchg
pop
push
inc
dec
xor
mov
das
adc
mov
test
cmp
jae
daa
jnp
loopne
ss
loop
gs
leave
pushf
sbb
adc
sub
mov
lods
dec
mov
or
dec
into
outsb
cltd
mov
pop
imul
ds
jmp
fisttpl
sbb
jns
sub
jecxz
clc
fcoml
cs
outsb
enter
jnp
sbb
dec
push
jnp
movsl
clc
in
jmp
sbb
sbb
imul
mov
jnp
xchg
push
xchg
xor
dec
jnp
jmp
jne
cmc
dec
push
jnp
test
xor
jnp
push
lods
jge
rorb
fidivl
lock
jns
jnp
cmp
popa
or
dec
push
rorb
or
mov
lock
pop
enter
imul
inc
jae
mov
int
fnstsw
jg
int3
mov
inc
mov
push
mov
das
iret
lcall
fldt
lret
push
jnp
jecxz
enter
in
mov
push
outsl
das
sti
nop
jnp
xor
mov
mov
push
outsb
push
ret
jnp
lret
xchg
testl
idivb
test
sbb
das
fs
jnp
pushf
dec
lods
mov
cmpsb
pop
test
jnp
subb
xor
cmp
jns
cmc
popf
dec
jg
or
cmp
out
rorl
push
je
test
mov
shrl
jmp
stos
outsl
mov
push
add
pop
dec
out
jns
lret
cmp
xor
jnp
sbb
in
clc
arpl
int3
mov
xchg
jns
call
or
dec
cmpsb
std
cmp
lds
ret
out
cltd
imulb
jnp
ja
scas
mov
cmc
sub
jo
add
dec
stos
nop
mov
jae
cmc
enter
push
jg
in
mov
mov
clc
sub
repz
cwtl
jnp
test
inc
lret
jnp
add
int3
mov
mov
mov
dec
inc
stc
imul
fidivrl
push
or
lretw
sti
imul
sub
sub
jmp
mov
fcmove
and
out
leave
fnsave
jae
sub
mov
push
cltd
and
stc
cwtl
xorb
jnp
mov
mov
and
jnp
xor
mov
rcrl
push
ficompl
fdivrl
cmp
mov
stos
adc
mov
sbb
lret
scas
or
ret
pop
cwtl
aas
cmc
push
dec
mov
dec
lock
adcl
pushf
jnp
sub
xchg
cmp
cmp
xchg
pop
adc
cmp
add
daa
mov
fstpt
pop
xor
mov
xor
insl
ja
mov
lods
shrb
jp
push
mov
jne
fstps
jnp
add
popa
cli
sbb
enter
fwait
ljmp
mov
cmp
rclb
xor
out
or
jns
in
loop
jnp
add
jl
es
jnp
pusha
decb
jnp
add
mov
push
loop
lods
sub
pop
jb
insb
add
or
es
mov
int
jnp
in
idivl
aad
pop
mov
mov
mov
loop
in
inc
mov
je
jnp
sti
jle
add
pop
jnp
and
lods
idivl
bound
call
clc
jp
xchg
sbb
enter
push
push
mov
push
adc
out
jno
mull
bound
daa
push
mov
inc
sbb
ret
hlt
daa
imul
pop
mov
sahf
push
insl
call
scas
mov
stc
insl
inc
rcl
jnp
aaa
mov
jnp
sahf
dec
loope
add
out
daa
sbb
or
sbb
or
mov
xchg
jo
jnp
ja
jbe
aaa
xor
sbb
sub
outsl
and
rep
mov
jnp
divb
into
shr
adc
jae
jnp
mov
pop
mov
and
jnp
movsl
pusha
lret
xchg
mov
mov
sub
stos
jl
inc
in
adc
outsl
xchg
dec
xchg
jbe
jp
push
mov
jne
cli
in
mov
stc
jnp
xchg
enter
stos
jnp
imul
mov
cmp
ret
pop
dec
adc
subb
ljmp
xor
mov
jnp
ss
mov
fcoms
xor
jno
sarb
lea
ret
daa
pop
int
jnp
jns
cli
mov
sarl
jo
inc
ljmp
outsl
mov
cmp
inc
jl
lods
dec
mov
cmp
sti
sub
lahf
shll
pushf
dec
or
es
mov
insb
jnp
and
divb
pop
xchg
xchg
mov
ja
pop
jae
dec
scas
imul
loopne
imull
and
rcl
ljmp
cpuid
out
push
std
movsl
jnp
dec
push
xor
int3
jnp
inc
jae
mov
scas
out
jnp
push
cwtl
jb
aaa
hlt
int
push
shrb
xchg
ret
test
xor
stc
fbld
push
loope
sub
cmp
ljmp
outsb
js
gs
adc
idivb
shlb
mov
or
pop
jnp
loop
inc
fstps
mov
jnp
mov
jmp
fidivs
sbb
lods
jbe
rorl
shll
and
addr16
shlb
stos
mov
jp
add
pop
lock
dec
jnp
lea
push
repnz
sub
insb
in
jge
es
out
cmp
mov
sub
sbb
test
adc
jmp
out
cltd
pop
pop
ljmp
and
lds
adc
jbe
inc
add
gs
lods
cld
dec
dec
jnp
mov
and
loopne
jnp
stos
ret
and
sub
xor
jmp
push
mov
testb
cmp
xor
push
loopne
sub
jnp
test
push
mov
aad
cmpsb
clc
imul
or
in
xor
jnp
cmp
leave
cs
pop
repnz
jnp
inc
insl
sub
adc
imul
hlt
scas
fcmovnb
dec
js
adc
sahf
enter
cmp
push
cmpsb
outsl
in
or
pop
cmp
mov
inc
push
inc
sub
xchg
fadd
enter
lods
add
ja
scas
nop
xchg
pusha
and
lcall
outsl
les
jp
insl
dec
sub
mov
cmp
or
jnp
es
ss
jbe
jnp
inc
mov
xchg
sbb
jnp
sub
mov
insb
jnp
ficomps
lret
cmp
fwait
mov
out
repnz
mov
fsubrs
and
cmp
jecxz
andnps
sbb
imul
into
or
mov
or
jnp
and
fs
iret
cld
cmpsb
jnp
test
lret
jp
mov
jbe
pusha
sub
mov
lods
xor
push
sbb
pop
jnp
xchg
gs
out
jnp
bound
push
jns
in
xchg
add
sbb
jnp
xchg
je
add
xor
sbb
jnp
ljmp
stos
or
xor
mov
mov
imul
pop
jg
xchg
fmull
adc
loope
mov
adcb
jnp
dec
rcpps
hlt
in
jnp
xorl
cmp
mov
lock
dec
mov
lds
icebp
cmpb
mov
loop
jle
movsb
mov
push
sarb
jnp
mov
xor
in
mov
jnp
sub
cltd
pop
rcr
jnp
andb
inc
xacquire
sub
or
jae
rolb
in
outsb
sbb
fs
or
scas
roll
cmp
rolb
push
ja
mov
jb
stos
call
xchg
decl
pop
add
pop
inc
ja
clc
sbb
sub
push
jno
stos
lods
in
xor
jnp
in
sbb
cs
push
jnp
sub
lcall
bound
or
in
cmp
iret
jl
xchg
cmp
mov
call
pusha
xchg
mov
cli
nop
sbb
scas
push
data16
mov
lcall
jae
in
jno
int
xor
sub
jnp
lcall
mov
jbe
mov
movsl
into
jnp
xchg
adc
pop
cmpsl
jnp
rclb
inc
cmp
decl
pop
cmp
insl
jb
aam
mov
cmpsl
outsl
push
pop
fistpll
sti
hlt
cmp
jp
jmp
dec
repnz
sub
dec
sub
adc
ret
call
sarb
pop
pop
xchg
mov
fidivl
rcrb
jnp
mov
jno
jb
push
lcall
inc
push
addr16
cli
subl
mov
adc
jecxz
shrl
lods
jmp
lea
jae
test
xor
mov
cltd
sti
mov
jnp
movsl
sahf
cmp
mov
inc
ds
js
fistpll
mov
outsb
scas
imul
imul
jp
out
insl
mov
and
movsb
shll
jns
jnp
add
sahf
scas
cli
scas
aaa
jnp
test
loopne
das
in
sub
insl
movsb
xchg
outsb
jnp
jae
aam
pop
xchg
cmpsb
jns
loop
stos
int
popf
mov
in
gs
mov
inc
insb
shrl
scas
fdivrs
lds
aaa
loopne
jnp
out
iret
test
mov
sub
jbe
in
push
jl
loop
jnp
xor
jp
test
je
mov
dec
imul
lods
and
aam
jae
call
mov
fnstcw
push
jo
mov
mov
jae
in
adc
sub
das
aam
mov
rcrb
push
cmp
sub
mov
mov
scas
add
out
cmp
imul
icebp
aam
or
jmp
mov
lods
out
jnp
push
pushf
push
fisubrs
or
cltd
add
stc
or
push
inc
or
in
shl
out
jnp
andb
add
cs
sub
jbe
cmp
xchg
loopne
jnp
mov
int3
sbb
fwait
jnp
lock
negl
inc
sbb
lret
ja
cmp
fstps
mov
mov
jnp
aad
fsubl
in
sub
mov
add
pop
in
push
cmp
dec
jnp
movsl
fsts
movsb
jnp
lret
fst
push
fistl
dec
jne
js
pusha
ja
stos
lods
insl
les
mov
mov
or
push
cmpsl
jae
sbb
fdivl
lods
pop
jnp
jp
jmp
cmp
pop
shl
enter
mov
insl
mov
mov
cmc
dec
xchg
out
push
popf
outsl
fdivr
cmp
fwait
rcll
pop
pop
pop
sub
jae
mov
insl
repz
xor
jnp
std
xchg
data16
movsl
fstpt
lods
subl
or
lea
sub
cmp
lret
jnp
out
rcl
mov
cli
ret
jg
dec
in
sahf
mov
stos
popa
movsb
push
jbe
jmp
or
jnp
push
pop
cli
sarb
adc
jp
repz
xor
jnp
stc
arpl
movsb
int3
jnp
or
adc
sub
stos
jae
and
ret
leave
lea
dec
push
outsl
mov
out
xchg
jnp
sti
xchg
and
jnp
fimull
test
dec
mov
mov
mov
cmp
dec
mov
aas
mov
jno
lds
sbb
xlat
hlt
test
sbb
movsl
imul
adcb
mov
xchg
sbb
sub
sub
mov
aad
jnp
loop
js
movsl
loope
cltd
dec
movnti
adc
icebp
lods
into
ret
jnp
xor
gs
jnp
loopne
xor
in
in
jnp
xchg
mov
stc
fwait
pop
ffreep
or
outsb
lds
aaa
xorl
xor
cmp
bound
imul
or
xor
lret
mov
mov
jb
stos
mov
xor
push
jne
stos
add
dec
xchg
out
enter
xchg
out
cmp
dec
and
mov
mov
sub
adc
in
push
mov
fwait
cmpsb
xchg
pop
and
loopne
clc
mov
insb
xchg
push
push
js
outsl
inc
sub
rorb
bound
or
push
mov
dec
cmp
push
mull
aam
mov
aad
jnp
fistl
mov
add
fdivs
push
insl
lods
cmpl
in
xchg
lods
jnp
shrl
jb
xchg
hlt
pop
jns
push
sbb
outsl
inc
out
mov
divb
lods
shl
mov
cmp
mov
sti
out
fwait
jnp
in
lods
fdivrs
jle
or
scas
jae
cwtl
cmp
frstor
sub
jmp
or
mov
movsb
jae
insl
shrl
dec
mov
cs
es
loop
imul
repnz
jecxz
mov
xor
jmp
ja
mov
jnp
sbb
es
in
sti
ss
mov
mov
inc
pushl
sub
sahf
loop
mov
or
fwait
test
aas
xrelease
xchg
dec
sbb
sub
jnp
in
pop
insb
cmpsl
mov
pop
dec
into
add
mov
in
xlat
jae
outsl
movsl
ds
cmpsl
sbb
mov
sbb
out
or
sahf
jo
mov
enter
lods
pop
lods
push
dec
jbe
push
sbb
push
jnp
mov
jo
and
test
cmpb
jle
fwait
mov
dec
ss
mov
jo
mov
push
scas
dec
jle
fsubs
gs
push
pop
scas
mov
test
js
shrb
jne
xor
pusha
cmp
call
jg
xor
insl
in
cmp
pop
fsubrl
es
arpl
outsb
jnp
in
das
ret
loope
or
test
adc
aas
sti
sbb
test
lret
mov
hlt
cmp
cmp
mov
fdivl
arpl
popf
aaa
dec
loope
jne
xor
jno
mov
xchg
cli
xor
ja
push
xor
push
hlt
sub
inc
fdivrl
lret
dec
mov
mov
jae
test
jnp
inc
out
mov
push
inc
jnp
data16
orb
jnp
fidivl
dec
stos
jp
lahf
imul
or
adc
push
test
aaa
jb
jnp
icebp
pop
push
mov
shl
outsl
jnp
das
push
rcr
cwtl
xchg
cli
dec
popl
fwait
aaa
xor
mov
mov
lcall
jns
mov
or
pop
cmp
dec
mov
sbb
adc
sub
cmp
rcll
fwait
iret
fildll
icebp
in
and
stos
sbb
or
jnp
mov
push
jno
mov
mov
jnp
add
mov
cmp
push
jnp
leave
add
ja
hlt
cmp
call
jnp
scas
bound
or
jg
int3
outsl
movswl
mov
outsb
mov
in
jb
sbb
pop
stos
pop
jno
fcmovnbe
call
shrl
in
sbb
adc
in
cmp
cmpsl
popf
aas
lretw
repnz
mov
subl
push
aad
xchg
test
jnp
push
or
call
lcall
into
bound
dec
xchg
cmp
pop
jae
or
jnp
pop
fistps
or
scas
or
sti
inc
dec
imul
ljmp
adc
fwait
lods
jb
dec
jbe
fsubr
push
push
mov
or
cwtl
cmpsl
or
push
inc
mov
sub
xchg
cmc
mov
jno
mov
mov
enter
enter
or
jno
insl
seta
xchg
imul
push
lret
pop
int3
mov
jnp
jns
pop
imul
out
pop
sub
dec
inc
xchg
mov
loopne
sbb
sub
imul
sub
scas
enter
sbb
in
jne
movsl
add
out
mov
add
sub
xchg
or
gs
jnp
sar
fldcw
mov
imul
lods
out
movsl
pop
pushf
xchg
or
daa
jnp
mov
cmpsb
ss
and
push
rcr
xor
pop
aam
gs
and
idivl
int
mov
das
outsl
ret
stos
cs
jnp
ljmp
jnp
adc
enter
in
push
jnp
sti
daa
lods
lret
dec
push
aaa
sbb
fs
stos
mov
xchg
mov
cmp
xchg
insb
jnp
adc
push
dec
mov
jne
mov
icebp
movsb
sub
cli
fs
addl
jmp
jne
adc
jnp
outsl
inc
adc
sti
mov
jnp
mov
repz
das
fs
ret
loopne
aaa
fisttpl
or
jnp
out
or
adc
sti
cmpsb
stc
packssdw
pushf
ljmp
jnp
jbe
xchg
adc
int
test
mov
outsb
sbb
xchg
mov
pop
stos
cmp
leave
jnp
push
lods
dec
jge
and
cmp
pop
push
sbb
aas
sbb
add
jne
lcall
pop
inc
adc
jns
xchg
xor
pop
sti
pop
xchg
dec
jnp
jb
push
scas
sbb
xlat
jnp
mov
lahf
push
call
lea
lea
cltd
jp
and
mov
push
jnp
out
cwtl
leave
mov
sub
mov
jno
or
icebp
dec
ret
jnp
in
xchg
bound
test
loope
mov
jnp
ret
fstps
jnp
and
push
test
cmp
dec
pop
daa
mov
iret
xchg
sub
shl
pushf
xchg
les
dec
out
lahf
sbb
aas
adc
mov
mov
mov
cmpsb
xor
mov
lret
inc
adc
lods
jnp
loopne
nop
aaa
cli
pop
or
mov
sub
push
movsl
inc
ja
mov
bsr
mov
push
loope
jnp
add
jo
or
add
popf
test
lods
mov
icebp
out
mov
pop
sbb
pop
loope
sub
jnp
mov
inc
cmp
or
jnp
mov
jnp
or
sub
aad
in
or
add
lret
mov
test
jnp
push
into
xor
cmp
sub
cmp
ja
push
xchg
mov
dec
aad
mov
cmp
sti
sub
andb
fistpll
sub
movsb
adc
mov
xchg
in
test
rol
jnp
hlt
and
lret
jge
and
adc
jnp
ss
into
insl
xchg
stos
sbb
xchg
cmp
jno
sub
cmp
jnp
out
adc
or
xor
das
mov
push
idivl
add
sub
cmp
or
inc
rorl
jnp
xor
in
or
xor
addr16
fsubrs
jnp
subb
sbb
inc
xor
xlat
std
jmp
lock
sar
incb
mov
or
dec
mov
sbb
mov
scas
leave
and
jnp
dec
mov
mov
imul
aad
pop
lods
cmpsl
in
mov
lods
fs
jnp
icebp
in
cmp
push
inc
stc
jae
mov
and
sub
sub
sarb
in
mulb
jl
mov
out
sub
cmpsl
aad
jnp
das
rorb
jnp
jne
daa
int3
rclb
xor
sub
or
mov
fwait
lcall
lret
iret
lods
outsl
clc
or
push
dec
ss
aaa
jnp
push
stos
push
pop
cmp
mov
das
lcall
fmuls
or
fldt
mov
addr16
flds
xchg
pop
sub
aaa
cmp
jns
mov
enter
or
xchg
stos
out
sub
adc
xchg
push
mov
in
jbe
push
mov
call
dec
cmp
mov
or
mov
xchg
jnp
out
fsubs
shl
int3
jnp
out
mov
int3
cmp
mov
push
sub
jnp
ss
ficoml
cmp
inc
loope
ja
add
fwait
jnp
xchg
xor
cmp
clc
adc
jnp
ret
dec
cmp
je
sbb
es
sbb
into
pop
sub
imul
movsb
fs
in
sub
outsl
jae
cmp
push
into
xor
in
dec
push
jle
insb
jnp
push
subb
rcrb
or
inc
pop
adcb
fldt
out
xor
jb
jmp
xchg
add
es
fmuls
imul
outsb
mov
insl
out
pop
push
mov
xor
enter
rorl
mov
cld
lods
gs
or
stc
pop
mov
stos
mov
iret
aas
or
fistps
outsl
mov
pop
loopne
arpl
sub
ljmp
lahf
jnp
mov
add
sahf
mov
sub
loopne
jbe
jnp
sti
icebp
inc
xchg
lods
mov
ja
outsb
or
inc
and
sbb
inc
in
adc
push
cli
mov
lret
cmp
push
jb
ret
into
sbb
or
ja
inc
mov
and
aas
xor
cmc
cltd
in
mov
xchg
add
or
int
push
sub
inc
shrl
push
pop
ret
cmp
jge
jnp
int
jbe
xchg
inc
test
jecxz
aas
cwtl
in
sti
inc
iret
das
push
cmp
jnp
cmp
clc
mov
repz
sub
cmc
test
push
push
sub
push
adc
movsb
mov
push
pop
cmp
cmp
test
or
iret
nop
mov
aaa
into
lea
notb
je
sbb
cmp
dec
sub
ret
mov
movsb
or
insl
fdivp
cmc
stos
inc
jnp
jge
mov
jns
mov
aaa
repz
outsl
ds
pushf
jnp
sbb
xlat
insl
jne
xchg
pop
xchg
insl
and
in
ja
mov
sbb
push
js
lret
iret
jnp
cld
sarl
jnp
mov
sub
jb
aaa
cmpsl
jnp
out
mov
xchg
loope
cmpsl
and
sbb
mov
rorb
jecxz
pop
jge
in
loopne
fnstcw
cmp
bound
mov
sahf
pop
inc
push
sbbl
or
pusha
cmp
jnp
xchg
jnp
add
cmp
stos
jecxz
aaa
cmc
mov
dec
mov
dec
bound
out
dec
repnz
imulb
outsl
push
mov
jnp
and
repz
xchg
adc
sub
pop
loop
cltd
jnp
jbe
or
mov
jnp
dec
xor
mov
fs
scas
jnp
daa
lods
inc
data16
dec
sub
out
sub
and
rorl
cmpsb
or
divl
ror
adc
push
aam
call
and
jnp
test
movsb
js
fdivl
push
sbb
or
xchg
adcb
cmp
stc
cmp
jmp
push
jb
lret
popa
or
sub
mov
movsl
out
add
fdivl
mov
and
rolb
fistl
inc
int
jnp
or
mov
sbb
inc
icebp
jnp
jb,pt
jp
movsb
out
mov
js
or
cli
insb
ljmp
xlat
lret
mov
mov
imul
push
xchg
or
jo
jnp
sbbl
jnp
cli
mov
mov
popa
test
mov
into
xchg
aam
sub
mov
je
pop
arpl
mov
mov
jle
sahf
sbb
xchg
adc
dec
inc
rclb
or
dec
dec
fidivl
inc
fnsave
aaa
in
arpl
repz
sbb
insl
xlat
jne
data16
or
sbb
add
mov
data16
ficoml
hlt
arpl
jae
sub
mov
imul
stos
inc
in
adc
cwtl
mov
jae
xchg
xchg
test
test
icebp
inc
jecxz
fnsetpm(287
repnz
ret
testb
bound
mov
pop
cmp
pusha
outsl
lods
or
movsb
ljmp
mov
push
xor
jnp
ret
fisttps
jnp
jle
sti
push
insb
sub
data16
jb
outsb
cltd
cmpsb
sbb
xchg
jnp
fwait
mov
sub
test
push
pusha
jnp
je
or
dec
xlat
inc
jnp
inc
mov
lret
rcrb
pop
jnp
mov
aad
out
push
cmpb
leave
outsb
push
xchg
push
add
jnp
pop
pop
insb
adc
popa
outsl
jle
jnp
xchg
sbbb
jnp
lcall
or
sbb
in
add
in
mov
frstor
lock
and
jbe
push
sahf
cmp
mov
jp
push
out
inc
sahf
cwtl
idivl
fcmovne
mov
sbb
pop
nop
bound
cmp
rcr
lods
aam
lods
xchg
push
xor
push
ret
repz
mov
jp
mov
scas
jle
cs
jnp
dec
push
pop
xchg
mov
jnp
iret
xor
aaa
jp
ss
or
aas
pop
cmp
xor
sub
dec
ss
in
mov
lret
mov
fildll
mov
int3
mov
lods
xor
jnp
iret
push
stos
dec
mov
mov
jp
fisttpll
sahf
jnp
pop
jno
mov
cmp
sub
xchg
lret
stos
xchg
out
or
aam
in
jnp
push
push
pop
es
fscale
jnp
mov
into
movsb
sub
jmp
movsl
jp
call
in
mov
popf
xchg
adc
mov
add
lret
push
pusha
mov
bound
pop
jnp
sub
adc
cmpb
aam
dec
jbe
jp
rol
or
jo
jnp
mov
dec
xchg
jnp
xchg
lret
leave
ss
lds
cmpsb
pop
lea
jnp
sub
lcall
test
ja
push
xor
push
jnp
cmc
nop
or
jnp
stos
sub
js
out
movsb
rclb
or
jnp
dec
test
or
shl
xchg
add
dec
gs
pop
jne
dec
jb
mov
jbe
aam
mov
mov
lcall
mov
cmpsb
pop
mov
mov
jb
jnp
adcb
dec
notb
rcl
cmp
pusha
mov
add
dec
pop
aaa
inc
in
cmp
sbb
sbb
jbe
mov
sub
aas
jnp
flds
dec
shrb
mov
pusha
push
sahf
jb
nop
push
push
jnp
push
out
cltd
test
dec
or
xchg
sub
lret
jnp
fdivl
lcall
jnp
or
ds
js
sar
jnp
cmc
cmpsb
xchg
fwait
jecxz
push
push
adc
js
sysenter
and
scas
mov
mov
out
sub
cmpsb
mov
es
ja
jmp
pop
add
pop
add
inc
fcomi
loope
add
jecxz
jnp
push
pushf
and
popa
xchg
pop
jnp
in
leave
lea
call
inc
loope
dec
repz
in
sbb
movsl
xlat
test
jnp
rcrl
jnp
in
xchg
push
jg
mov
dec
cli
xchg
js
test
xchg
lods
push
fsubs
mov
popa
int
mov
cmp
push
xchg
hlt
stos
mov
sub
fisttpll
popa
scas
jne
lds
inc
stos
aam
xchg
lahf
or
leave
aas
cmpb
add
loop
mov
inc
push
sti
xor
test
pop
ds
fsubr
popf
ja
jecxz
mov
push
int
jnp
sub
xlat
sbb
mov
cmp
sub
add
fcmovne
sub
sub
mov
jnp
xchg
cmp
or
jnp
pop
mov
sbb
cmp
jnp
outsl
das
fimull
jmp
jne
mov
iret
sub
js
out
add
jge
inc
pop
jnp
rep
mov
jnp
into
ret
xchg
adc
add
std
mov
sbb
jnp
cmp
dec
or
pop
xchg
sub
jae
pop
xchg
hlt
cmp
xchg
cmc
mov
push
dec
scas
jnp
scas
shr
stc
aaa
mov
jnp
ljmp
jnp
jo
dec
xchg
jno
jp
mov
cmp
hlt
cmp
jnp
pop
out
push
fwait
push
mov
stos
pushf
enter
int
mov
into
and
jnp
push
sti
xchg
stos
ja
xchg
jbe
dec
lock
dec
mov
or
pop
pushfw
insl
or
jbe
or
cmpsb
mov
or
repz
pop
aam
lret
adc
adc
cmp
mov
clc
popf
or
xor
ss
or
jno
or
dec
jnp
pop
push
fwait
or
and
jnp
push
xlat
jns
nop
mov
pushf
push
inc
repnz
movsb
jle
in
pop
mov
lock
xchg
arpl
mov
jnp
xchg
in
jmp
cmp
sbb
sub
repz
pop
mov
dec
cmp
rclb
dec
sbb
std
cmp
in
icebp
sub
pop
call
out
push
inc
push
xchg
xor
or
sbb
mov
and
inc
popa
jno
pop
mov
add
jno
aad
mov
jnp
flds
movaps
jae
mov
cmpl
ds
lods
mov
xchg
mov
outsl
sbb
jp
jnp
cmp
pop
xor
data16
outsb
lock
icebp
pop
pop
dec
mov
insl
sub
mov
pop
jnp
fs
pop
outsw
outsb
cmc
jnp
rorl
sub
or
jne
into
inc
lods
jmp
pop
popf
mov
negl
clc
push
pop
xor
jl
or
xchg
repnz
push
mov
in
sbb
lods
cld
dec
pop
push
outsb
jmp
nop
lret
jp
mov
jnp
popf
mov
dec
jbe
jge
das
sub
out
nop
clc
jnp
dec
xchg
mov
pop
rorb
jbe
outsb
mov
sub
jnp
add
push
es
mov
cmp
jl
sti
mov
pop
push
js
mov
inc
jnp
jg
push
mov
jnp
mov
mov
lcall
mov
out
jb
in
ret
mov
sbb
jecxz
sbb
cmpl
xchg
inc
jnp
scas
mov
repz
sbb
aam
cmp
cmpl
push
xchg
dec
mov
xor
push
dec
hlt
push
cwtl
cmpsl
or
jo
cmp
jnp
lock
xchg
ret
cmp
add
orb
push
or
sub
add
jae
lahf
stos
xchg
lret
and
jns
cmp
jnp
in
fstl
cwtl
push
mov
and
cmp
mov
jns
push
dec
and
cwtl
fs
lods
jo
ja
sbb
mov
push
mov
scas
mov
or
add
and
fdivrs
into
addr16
les
lods
push
sub
sbb
push
hlt
lret
bound
imull
scas
add
jnp
movsl
jne
imul
imulb
adc
jnp
cmpsb
inc
testl
into
mov
add
xchg
fldenv
push
and
sbb
and
cmp
inc
sub
jnp
mov
fcom
in
js
or
add
jnp
push
testb
jp
ss
cld
jo
or
jnp
xchg
sti
push
ljmp
stc
fnstenv
sub
xor
cld
jnp
and
pop
inc
xchg
cwtl
test
into
xchg
fcmovnb
sti
outsl
fldenv
or
push
les
or
add
inc
sub
jnp
fcomip
rorl
xchg
fs
mov
data16
bound
or
inc
or
xor
clc
cmc
xlat
ficoms
pop
mov
cwtl
jne
into
fdivrs
out
pop
mov
add
cmp
pushf
pop
pop
call
cmp
jnp
dec
mov
dec
xor
loope
sub
cmp
insl
outsb
push
outsl
cwtl
xchg
or
lea
and
enter
and
push
jnp
sti
adc
fimull
insl
in
stos
xor
and
pop
jbe
xchg
mov
mov
es
jbe
js
inc
clc
dec
shlb
jnp
push
mov
mov
nop
xor
das
xor
lods
in
arpl
clc
subl
mov
sbb
cmp
jnp
jge
ds
mov
fs
sbb
sub
jmp
jae
int3
jg
mov
mov
sub
jnp
lock
jnp
scas
int3
add
jnp
mov
inc
lcall
mov
fldcw
fistpl
pop
xchg
adc
ja
cmc
push
mov
and
mov
sbb
adc
fwait
jle
aam
imul
stos
cmc
shlb
imul
int3
jnp
rcll
pop
adc
xchg
sub
clc
lods
daa
je
int3
push
jnp
mov
or
push
stc
jnp
imul
mov
mov
cs
test
xchg
push
adcl
scas
push
cmp
pop
enter
stos
xlat
jnp
mov
jnp
or
sti
add
jp
outsl
repnz
adc
or
jne
shlb
bound
je
push
xchg
sbb
fisubrl
add
ret
insb
jnp
mov
cwtl
xchg
jae
enter
and
or
int3
shl
jne
adc
sub
inc
out
clc
pop
push
dec
inc
mov
lea
and
push
fisubl
sbb
jp
lods
cmp
adcl
pop
mov
fstpt
stos
sub
or
sarb
aam
out
shrl
mov
sub
lods
push
fcoms
dec
cwtl
jnp
pop
adcl
mov
sbb
nop
out
xchg
inc
test
data16
rcrl
daa
jne
jmp
imul
mov
stc
mov
mov
push
stos
cli
inc
cmpb
dec
shlb
push
jnp
jne
push
push
xor
mov
push
jns
imul
stos
leave
jo
sub
es
xor
stos
inc
enter
clc
pop
sbb
hlt
sbb
dec
xchg
adc
sub
mov
cltd
pusha
lods
sar
jnp
sub
clc
lock
jnp
or
cli
pop
jmp
lods
arpl
das
push
mov
aad
cmp
push
or
out
lods
cmp
loop
sub
lods
pop
popf
lods
lods
imul
int
fadds
pop
pop
mov
jl
enter
sbb
les
scas
or
and
mov
pop
pop
addr16
xchg
flds
dec
push
sub
mov
mov
fimuls
daa
sub
xlat
xor
in
xor
cmp
cmc
sub
clc
aaa
daa
jae
lock
call
test
bound
aam
ret
icebp
pop
jnp
insb
enter
push
push
mov
and
dec
loop
faddl
sub
mov
es
pop
xchg
pop
and
aaa
shll
add
aaa
add
ja
out
jns
cmp
fidivrl
in
or
mov
in
insl
mov
lods
mov
pop
dec
pop
ss
jnp
loope
mov
nop
in
aam
xor
sbb
iret
dec
in
xor
cmp
lea
imul
jnp
arpl
fwait
scas
sub
jnp
ljmp
stos
mov
dec
and
lods
xor
sub
insl
cmp
xchg
pop
jne
or
pop
mov
jne
mov
push
out
out
jg
and
imull
arpl
hlt
fcmovne
jnp
fsubrs
push
mov
lock
fnstenv
sbb
mov
inc
les
xchg
sbb
jnp
mov
mov
dec
std
jnp
cmp
cmc
stos
mov
imul
mov
in
out
jnp
xor
xor
pop
mov
push
xchg
out
fcompl
mov
xor
mulb
or
push
out
dec
sbb
in
stc
loope
pusha
pminub
mov
push
cmp
fisttpll
jns
enter
aaa
fistpl
jmp
lea
jns
mov
ja
fmulp
and
int
xchg
sbb
jnp
test
mov
cmp
inc
pop
pop
sbb
jnp
mov
push
test
jns
xchg
jnp
repnz
scas
xchg
fwait
lea
insb
pop
cld
ret
daa
mov
je
addr16
push
sarl
xor
jne
and
push
or
es
push
ja
mov
inc
mov
outsl
int
jnp
xchg
adc
sarb
test
mov
sub
arpl
push
jnp
add
pop
jnp
pop
mov
ret
xor
jg
shlb
ss
fwait
add
lcall
pop
into
push
jnp
jb
shlb
rorl
jne
mov
sti
dec
and
sbbb
out
pop
loopne
or
jmp
or
scas
xlat
mov
ss
fwait
and
xchg
addb
adc
loop
jp
rcrl
in
in
jnp
push
push
mov
pop
out
xor
mov
jo
add
sbb
imul
sub
lea
xlat
inc
sti
jg
jl
add
test
daa
cli
mov
shr
pop
jnp
push
jge
je
dec
orl
sub
js
push
xor
cmp
jnp
call
push
pushf
enter
sub
jnp
sub
pop
fistpl
insl
cmp
mov
dec
inc
xlat
xor
outsl
mov
addr16
insb
inc
jnp
shl
testb
in
ss
jb
adc
imulb
pop
icebp
jnp
cmpsb
dec
pop
test
sbb
sbb
mov
cwtl
ljmp
mov
fmulp
fcmovnbe
cmc
jnp
push
leave
in
sub
sub
mov
lret
cmpsl
repnz
in
cltd
inc
xchg
fcomps
bound
fistl
insb
add
or
inc
lret
jnp
xor
push
push
insl
loopne
stos
stos
adc
fbld
sbb
jb
xchg
js
xor
jo
jno
adc
or
stc
lds
add
inc
sub
aas
pop
sub
repz
pop
lods
and
jbe
stos
jo
add
or
inc
addr16
push
push
mov
les
jnp
xor
int
jnp
cmp
sti
ljmp
cmc
into
sub
mov
out
inc
push
movsb
adc
xchg
divb
pop
sarl
imul
push
test
call
loop
and
sbb
or
cltd
mov
cld
xor
sub
cld
sbb
outsl
push
orb
lods
mov
js
jnp
xchg
ljmp
jl
adc
dec
in
rcll
jnp
mov
stos
lock
lret
sub
cmp
mov
lods
xlat
nop
sub
mov
jnp
jo
dec
adc
xor
stos
cmc
mov
das
jnp
ss
cmpsb
cmp
fldt
outsl
lcall
mov
ret
insl
sub
mov
sub
pop
lret
je
pop
cmp
mov
xchg
xchg
cli
in
cmp
or
sbb
cmp
mov
jnp
cmp
xor
repnz
mov
not
inc
movsb
pushf
sarb
inc
mov
xchg
test
xor
dec
jnp
jecxz
mov
jb
stc
xchg
daa
sti
ret
cmp
push
add
imul
out
jbe
sbb
sub
fidivs
repz
xor
pop
dec
fistpl
add
xchg
mov
insb
jnp
js
mov
ret
push
mov
out
sub
jnp
dec
cmpsb
mov
call
dec
daa
cltd
cmp
jnp
mov
push
jnp
insl
sub
jp
stos
cmpsb
xchg
add
or
cmpsl
lock
lret
in
imul
clc
xchg
ret
stc
scas
fnstsw
xor
cmp
repnz
test
dec
adc
fucomp
fadd
push
lret
js
pop
lods
jnp
or
xchg
or
enter
mov
mov
shll
int
and
mov
test
dec
ret
xlat
in
sub
push
mov
and
notb
jnp
pop
daa
insl
push
cli
cmp
mov
scas
cwtl
adc
lret
xor
pop
sbb
mov
xlat
lods
out
daa
nop
jecxz
bnd
mov
fs
jnp
int3
je
cmp
pop
sbb
xchg
jbe
inc
in
mov
or
cmpsb
mov
int
or
sbb
scas
scas
mov
notb
mov
push
xchg
das
jnp
js
cmp
inc
fstpt
mov
sbb
sbb
push
pop
lods
lock
jns
out
mov
cmp
ljmp
pop
insl
sbb
std
xor
inc
dec
ret
xchg
lret
and
cltd
xchg
iret
repz
push
dec
jecxz
mov
out
xor
adc
jg
or
sbb
fsubrs
sub
in
mov
xchg
jnp
xchg
test
jecxz
cmp
add
mov
xlat
pop
push
jnp
dec
orl
jno
outsl
push
mov
sahf
insl
repnz
fildl
mov
sbb
push
ja
stos
imul
sub
dec
xor
sub
push
jnp
decb
pop
stc
sbb
in
andb
clc
jnp
xor
xor
jne
int3
jnp
mov
stc
sub
push
inc
pop
es
les
cmpb
test
or
test
cwtl
lods
imul
sti
outsl
stos
fxch
jmp
xchg
jnp
or
inc
adc
jnp
cmp
mov
je
jnp
xchg
cmp
mov
adc
lret
cmp
imul
jnp
std
sbb
xchg
adc
clc
movl
fsts
pop
mov
dec
mov
jnp
mov
add
out
sbb
enter
xlat
or
inc
insb
jne
or
push
lcall
jnp
jl
scas
sbb
cmc
sbb
push
lods
xlat
add
out
es
mov
shll
or
aas
pop
jp
jae
add
jnp
cmpb
idivl
in
jnp
mov
es
or
pop
xor
mov
mov
mov
sub
rorl
sub
dec
js
xor
jnp
jg
loop
mov
sahf
in
int3
and
and
and
jnp
rcr
stc
cmp
adc
sbb
and
stos
bound
inc
add
add
cmp
sti
dec
enter
into
loop
roll
bound
jnp
in
pop
cmp
xor
cmp
xchg
sbb
das
fisttpll
xor
outsb
sbb
mov
jnp
mov
jbe
adcl
xchg
ror
arpl
mov
ljmp
xor
jne
les
add
loope
out
mov
or
stos
jnp
scas
daa
inc
imul
jle
cltd
sbb
sbb
subl
pop
insb
stos
cmp
mov
pop
aam
jnp
mov
hlt
orb
jae
mov
lea
out
out
or
pop
call
sbb
pop
outsl
jnp
inc
cmp
fstps
mov
xchg
push
cmp
jnp
dec
fcmovnb
sub
aad
adc
cmpsb
sub
lcall
mov
jnp
and
sub
mov
sbb
sbb
jp
xchg
sti
fwait
lods
stos
cmp
fildl
mov
push
ss
test
sbb
mov
lea
jnp
jle
inc
push
mov
adc
repnz
mov
sbb
jae
fdivrs
int
jnp
sbb
out
xchg
shrl
jb
aam
pop
outsb
mov
fisttps
jae
cmc
push
inc
xorb
xor
test
lods
das
sbb
scas
leave
push
add
pushf
insl
jp
mov
mov
repnz
stos
cmp
xabort
movsb
jmp
and
sti
sbb
xchg
jbe
stos
inc
cmp
lret
fcmovnb
cmp
mov
jmp
xchg
pop
jnp
xchg
call
mov
in
ljmp
daa
ficoml
leave
stos
scas
dec
and
sbb
and
jge
je
xor
pusha
cld
jnp
inc
adc
dec
das
arpl
mov
clc
dec
js
inc
testl
push
shr
xchg
push
jnp
xor
mov
mov
lcall
stos
cltd
jnp
mov
gs
jnp
stos
mov
add
js
jbe
pusha
in
dec
cltd
mov
lock
movsb
push
pop
stos
sarb
mov
cmp
bound
pop
mov
addr16
je
jnp
cmp
inc
or
mov
jno
jnp
test
shlb
cmpsl
or
fldl
popa
push
inc
std
hlt
lods
dec
dec
mov
and
mov
sbb
mov
adc
fwait
in
jnp
fistps
pop
sti
xchg
jmp
stos
xchg
inc
fwait
cmc
enter
cmp
pop
cmp
dec
mov
icebp
sarb
xchg
mov
or
testb
cmpsb
xor
and
je
loope
fwait
jl
fcoms
mov
mov
rcr
adc
jnp
inc
imul
stos
xor
cmpl
movsb
jg
cmp
lods
jnp
cmc
xchg
inc
ss
push
roll
jnp
dec
xor
dec
mov
fdivs
jecxz
inc
mov
enter
imul
or
fldenv
sub
cmpsl
inc
call
inc
aam
sub
dec
jbe
jnp
testb
jb
push
imul
mov
mov
sbb
dec
mov
push
mov
pop
aaa
adc
jnp
xor
add
pop
gs
cmp
int
xor
mov
sbb
mov
jecxz
shlb
mov
push
jnp
xchg
inc
mov
mov
add
and
inc
jnp
mov
cs
or
cli
sub
lea
inc
mov
jp
idivl
stc
mov
fsubs
outsb
inc
jnp
rcpps
ja
out
lcall
adc
jae
sti
gs
fwait
jmp
lcall
cltd
test
mov
cmp
jnp
mov
testl
andb
dec
jnp
xchg
in
pop
or
mov
cmpsb
out
pushf
jnp
inc
pop
stos
cmp
mov
scas
or
jnp
mov
gs
dec
xlat
jne
mov
enter
push
xor
pop
mov
neg
sub
dec
test
cmp
lret
aaa
jnp
fwait
mov
xor
ss
jnp
inc
movsb
lret
inc
aam
aaa
scas
mov
sbb
enter
push
mov
jnp
fldt
jnp
inc
dec
mov
mov
rorb
add
jnp
mov
cli
out
jnp
jmp
xchg
lcall
or
mov
pushf
inc
pop
jnp
mov
jnp
lcall
jnp
dec
lds
jnp
xor
bound
adc
mov
and
imul
lea
mov
das
jnp
call
mov
or
mov
ja
rclb
fwait
adc
les
lods
mov
push
das
jnp
mov
shl
jnp
and
cmp
movsl
sbb
pop
shll
jb
and
jnp
sub
sub
cli
jnp
cs
sub
jnp
das
ljmp
fnsetpm(287
pushf
cli
inc
xchg
mov
call
sbb
cmp
mov
dec
or
xchg
lods
ja
pushf
jge
push
sbb
mov
lret
adc
push
lahf
inc
mov
push
push
dec
or
inc
push
ljmp
outsb
lcall
push
jne
sbb
bound
mov
lret
fdivrs
xchg
or
jnp
adc
mov
jnp
jo
mov
inc
hlt
fstpt
mov
into
outsl
cmp
repnz
dec
in
sub
inc
stos
insl
aaa
cmc
jle
rorb
sbb
ss
inc
jb
jnp
outsl
loop
cmp
out
sar
outsl
mov
ljmp
cmpl
push
jnp
push
mov
jecxz
mov
jne
outsl
adc
sub
or
enter
mov
js
dec
and
cmp
pop
pop
mov
add
in
xor
repz
pushf
sub
test
outsb
inc
popa
jae
fidivrs
mov
push
mov
inc
pop
jo
jb
es
sbb
jmp
jno
adc
jno
push
and
mov
add
repz
or
jae
in
push
cmpsl
cld
les
sbb
subb
imul
test
push
jnp
fmuls
push
adc
mov
cmp
test
push
or
xchg
jnp
and
stc
jnp
jge
adc
call
orl
das
ja
pop
fsts
or
mov
cwtl
mov
clc
sub
bound
in
mov
repz
cld
out
add
mov
pop
jnp
jbe
fnstenv
stos
mov
jnp
test
mov
ss
push
out
sub
sbb
stos
sahf
addr16
pop
test
mov
negb
stos
mov
clc
outsl
ss
xchg
sbb
push
xchg
jae
test
ja
stos
mov
mov
repnz
jae
js
pop
test
fwait
lock
jnp
fmul
shrb
jle
jnp
sbb
jne
mov
sti
or
add
mov
pushf
mov
js
xorb
in
cmc
lock
jnp
pushf
mov
lea
sbb
cmp
daa
push
add
dec
fsubs
jae
cmp
lret
leave
mov
pop
push
xchg
out
mov
xor
xor
cmc
sbb
jnp
rcrb
push
jnp
outsb
aam
xor
pusha
insb
roll
add
stos
fdiv
jbe
xchg
push
jnp
xchg
lds
lods
in
insb
mov
aad
test
shrb
clc
and
mov
sarb
pop
inc
imul
mov
idivl
adc
mov
clc
es
jnp
insb
mov
cmp
dec
adc
and
test
push
push
stos
push
mov
jl
clc
lea
dec
sbb
test
or
fcoms
jnp
popa
imul
stos
jecxz
cmp
pop
jnp
cli
xchg
mov
imul
and
cwtl
sub
jnp
outsb
jne
mov
int
sbb
push
fs
sbb
inc
jo
push
outsb
jnp
mov
loope
cmp
dec
fcoms
lcall
jnp
pushf
call
push
imul
das
and
je
jnp
shlb
ljmp
shll
adc
dec
cmpb
stos
jp
dec
movzwl
mov
jg
jnp
mov
shrl
jae
or
jne
cmpsl
or
push
mov
inc
xor
jnp
test
adc
jnp
push
ficompl
push
push
xchg
jnp
addr16
stc
sub
insb
mov
jbe
or
aad
not
inc
sbb
xor
jl
mov
and
adc
dec
aam
jmp
aas
sbb
sub
push
push
mov
loop
push
orb
dec
jo
cltd
mov
or
out
in
je
aas
outsl
lahf
lcall
add
jecxz
jle
imul
adc
push
lret
jmp
xor
push
cmp
testl
add
or
inc
adc
loope
aam
jnp
xor
adc
call
jnp
aaa
scas
sub
mov
xchg
in
mov
aam
cmp
sbb
pop
jl
mov
inc
cmp
sbb
push
or
ret
outsl
outsl
in
ljmp
pop
enter
fdivrs
adc
in
pushf
jnp
sahf
mov
lock
mov
jnp
cmp
into
sub
lods
jnp
inc
push
mov
pop
add
icebp
out
mov
fwait
sbb
push
pop
aam
sbb
jnp
stos
dec
xchg
mov
insb
sub
or
mov
in
push
int3
jmp
pop
mov
popf
scas
sbb
loope
nop
sahf
or
fbld
sub
xchg
mov
out
test
pop
pop
nop
cmpsl
adc
arpl
insl
movsl
jae
dec
jo
or
cmc
push
dec
ja
in
push
mov
jnp
repz
aaa
lods
std
and
pop
push
gs
aad
push
insl
fadds
addr16
and
imul
adc
out
mov
dec
cmp
sub
jnp
je
cmc
ret
jnp
shlb
xchg
dec
and
push
pop
in
push
gs
es
pushf
lret
repnz
adc
jnp
iret
into
mov
pop
jno
jae
jp
jmp
pushf
rcrb
jmp
jge
imul
rorl
and
imul
cld
cmp
jb
xchg
imul
scas
jmp
xchg
inc
push
push
jecxz
icebp
push
sti
jnp
xor
inc
pushf
out
push
xchg
push
test
cmp
hlt
test
and
ljmp
imul
dec
in
int3
mov
mov
cmp
or
in
insl
lock
xchg
push
push
jnp
cli
popa
sahf
sti
cmc
mov
fisubrl
insb
int3
fisubrs
mov
xor
cmp
loop
jnp
xor
adc
pop
stos
jnp
dec
mov
add
shr
xor
jnp
or
pop
mov
jnp
pop
mov
test
out
add
in
lahf
mov
lods
fmul
imulb
lret
mov
or
push
mov
pop
dec
xchg
sub
jnp
pop
das
and
enter
scas
add
jnp
sbb
jnp
out
pushf
mov
mov
imul
aaa
rcll
ss
lahf
jnp
mov
mov
divb
jnp
mov
loope
jnp
je
shrl
icebp
sbb
or
gs
dec
repz
jnp
cmp
jmp
pop
fistl
repz
jne
pop
or
out
mov
xor
cmp
mov
insl
jae
or
jnp
arpl
push
and
dec
or
push
xor
jg
lods
icebp
jnp
js
sub
stos
movsl
enter
sbb
jno
inc
ja
pop
jnp
repz
lods
jnp
or
clc
dec
dec
mov
repz
dec
jnp
arpl
daa
jnp
test
cli
lods
jnp
cmp
int3
pop
sub
hlt
daa
dec
push
clc
cwtl
jnp
cmp
repnz
outsb
dec
out
ss
and
dec
aad
or
cmp
xorb
in
clc
je
lahf
call
mov
pop
fisttpl
in
mov
pop
jnp
int3
fstps
jnp
out
rcrl
push
sti
and
lahf
test
mov
or
lea
loop
ret
mov
push
ja
out
adc
idivb
loop
add
mov
jae
scas
addr16
jno
inc
enter
jp
inc
in
and
sub
jmp
fucomi
jo
jnp
pop
inc
mov
add
jns
xchg
ds
fdivs
push
dec
in
imulb
cmp
dec
cmpsl
movsl
clc
js
ljmp
mov
push
cmp
lods
jae
xor
jno
imul
jmp
sbb
idivb
insb
repz
bnd
dec
push
inc
clc
and
pusha
pop
les
mov
jnp
mov
cmpsl
add
gs
inc
lret
mov
add
push
lcall
xchg
inc
mov
pop
movsb
bnd
mov
cmp
mov
jnp
mov
xor
mov
cmpsb
jnp
mov
ds
jnp
int
outsb
mov
jns
xlat
sub
sub
mov
jns
out
mov
pop
icebp
push
insl
mov
jmp
xor
pop
inc
enter
mov
mov
mov
dec
dec
push
or
jl
jnp
test
in
scas
jnp
xor
inc
xchg
es
jnp
inc
mov
bound
mov
or
loop
mov
sub
dec
popa
cwtl
cmp
cmp
call
pop
je
cs
mov
jae
pop
mov
jae
data16
insb
daa
xchg
push
jp
ja
mov
inc
xchg
and
push
icebp
outsb
mov
lock
imulb
lret
or
mov
ds
cwtl
pop
jnp
out
stos
jnp
push
fidivrl
push
cmp
push
lods
pop
xor
pop
push
jnp
mov
popa
cmp
jns
clc
inc
push
popf
xor
add
mov
outsl
lds
js
test
outsl
out
pop
popf
pop
js
mov
jnp
sub
pop
jnp
dec
pop
dec
cmp
nop
cmp
sbb
stos
push
popf
lods
bound
xor
lods
in
je
mov
push
cmp
adc
in
push
stos
mov
dec
gs
insb
push
jmp
in
decb
cmpsl
add
jnp
mov
roll
movsl
lahf
cmc
jmp
cmpsl
js
ljmp
jmp
mov
ds
mov
mov
sbb
push
repz
arpl
into
inc
daa
push
mov
jecxz
adc
inc
jno
repz
lods
imul
iret
and
mov
pop
addl
stc
lret
movsb
into
out
sub
les
stc
pop
lret
ljmp
ret
outsl
arpl
mov
ljmp
cmp
mov
lcall
sub
sbb
rcrl
or
sbb
loop
jge
fsubs
lods
out
mov
add
cmp
or
mov
inc
push
and
aad
mov
jae
or
int
push
dec
or
in
jae
push
cli
or
and
insl
aad
out
pop
jmp
add
jnp
mov
ja,pn
pop
add
popa
mov
pop
push
test
pusha
insl
popf
push
ret
pop
xchg
sbb
sub
xchg
subb
imul
cmp
add
dec
cmc
dec
xchg
xchg
jnp
out
lea
jnp
test
dec
xor
test
jnp
data16
imul
pusha
jp
cld
or
loope
jmp
mov
jae
sub
fnstcw
mov
and
imul
leave
stos
aaa
je
push
jnp
andnps
mov
insl
jb
adc
call
enter
cmp
mov
in
mov
ficomps
and
jnp
jns
xlat
mul
bnd
hlt
xchg
jp
mov
pop
or
mov
inc
out
cmc
cmp
add
popf
scas
je
push
rorb
jl
jnp
mov
add
andb
subl
testb
lahf
js
mov
xor
mov
and
pusha
jne
add
int
sbb
lahf
mov
outsl
cwtl
jnp
jg
xor
mov
or
jbe
xor
gs
lret
int3
push
loope
adc
jae
mov
imul
or
dec
push
fcomps
popa
aad
outsl
mov
mov
lods
inc
shrb
fidivrl
jnp
mov
ja
dec
sti
leave
xor
jnp
mov
test
dec
mov
aam
repz
dec
and
mov
inc
jnp
cmp
dec
mov
das
adc
arpl
and
jnp
jbe
xor
mov
aam
jp
mov
mov
lods
pop
jmp
daa
and
jge
sub
sbb
stos
int
jnp
fidivrl
jnp
decb
fildll
aaa
push
lock
jnp
jno
push
sahf
das
push
fdivs
jg
std
push
ret
lea
jno
popa
outsl
jne
nop
test
inc
fdivrl
and
sub
fs
lcall
pop
pop
xchg
jnp
dec
mov
outsb
lret
cmp
test
xchg
pushaw
inc
das
daa
enter
jnp
mov
fidivl
mov
jecxz
sti
jnp
inc
rorl
imul
cmp
cmpsl
jns
imul
push
inc
lods
out
xchg
scas
jo
jnp
cli
repnz
sti
mov
mov
pop
nop
imul
jbe
push
loopne
imul
mov
jb
sub
or
xchg
cmc
testb
push
std
pop
cmp
es
jmp
lret
mov
pop
adc
stos
mov
dec
jnp
loop
cmc
or
push
sub
lods
lods
lret
fidivl
lret
hlt
cmp
pop
insl
out
sub
dec
push
cwtl
push
jnp
aaa
imul
jnp
sahf
mov
gs
xchg
ss
je
jb
adc
hlt
cmp
jno
aad
sub
push
pop
gs
cmpsl
stos
in
addr16
test
lock
jnp
sub
pop
lods
enter
and
sub
lcall
notb
and
lods
jnp
test
mov
jnp
andl
jnp
aad
adc
pop
or
inc
in
test
and
jnp
xchg
imul
dec
or
pop
lock
in
xchg
rcrb
lahf
xchg
cltd
inc
sarb
loopne
push
or
jo
mov
js
mov
sti
dec
ret
fisubl
sbb
mov
or
and
cmpsb
stc
xlat
mov
jge
dec
adc
adc
hlt
jmp
shrb
sbb
lods
cmp
out
xchg
sbb
dec
xchg
jnp
and
jnp
xor
fdivrl
jne
or
rcrl
sub
into
cmp
es
pop
push
fsts
sbb
push
adc
sub
add
stc
ja
sub
inc
cmp
shll
std
hlt
out
adc
inc
ja
xchg
cltd
call
fwait
int
pop
jnp
outsb
xor
cmp
inc
push
and
pop
les
xor
mov
scas
mov
mov
mov
and
or
lods
jg
jg
add
cmc
aaa
xchg
jnp
shll
mov
xchg
sarb
sub
insl
xor
mov
xor
jne
fcomps
or
xchg
fstpt
cltd
jno
dec
fnstsw
cmp
push
shll
outsl
js
pop
xor
enter
in
xchg
in
and
vcvttps2dq
jnp
add
cmp
imul
push
loop
pusha
daa
jne
sub
lret
call
lret
in
xor
jnp
jp
adc
jnp
dec
fs
sarl
pop
xlat
mov
or
aaa
test
cmp
jo
insl
xor
movsb
clc
lods
out
lock
inc
rcrb
mov
jnp
cmp
decl
adc
adc
push
mov
mov
sub
fldenv
jnp
cmp
test
cmc
lret
jnp
leave
loope
jbe
pop
fnstcw
dec
xchg
dec
mov
in
cmpsl
or
pop
and
mov
xchg
loop
jo
sub
jb
jnp
adc
mov
pop
jae
fldt
push
dec
inc
imul
aad
or
scas
jge
sbb
add
in
mov
push
jnp
xor
sbb
pop
or
push
int3
jae
mov
stc
mov
cmp
sarb
je
pop
sbb
jnp
sub
adc
jb
sub
into
pop
addl
fdivrs
lock
insl
push
jnp
aaa
jae
or
or
arpl
outsl
popf
push
lcall
mov
inc
imul
xchg
gs
std
jnp
mov
push
jnp
inc
push
mov
jnp
shl
shrl
subb
lods
mov
lcall
les
jnp
nop
adc
out
cltd
lahf
xor
mov
push
imul
lcall
dec
push
in
aad
das
les
cmc
std
call
lods
jnp
popf
dec
mov
jnp
mov
call
jnp
or
fdivr
jnp
jbe
insl
arpl
or
ja
mov
les
rolb
or
add
jnp
xchg
jmp
cmp
scas
arpl
popf
cli
popa
repnz
out
adc
lahf
jnp
xchg
xor
subb
jns
cmc
leave
push
aaa
jnp
or
pushf
xchg
arpl
xor
cli
mov
ret
xlat
xchg
addr16
imul
mov
in
test
xchg
mov
syscall
mov
cmpsb
mov
pop
std
xchg
lods
cmp
jecxz
jbe
sub
push
jne
xlat
into
lods
sbb
jp
pop
or
jo
lea
shrl
adc
push
out
out
andl
sbb
pop
popf
sub
jnp
pop
andb
xlat
mov
lods
addr16
mov
push
sbb
push
fisttpll
sub
leave
jae
es
xor
jnp
jns
jae
addr16
into
jnp
out
outsb
loope
jnp,pt
dec
jle
frstor
orl
popa
cmp
ja
sbb
cmc
xchg
lret
insl
out
cli
push
xor
call
xor
mov
mov
xchg
cmpsl
push
cltd
in
jnp
pop
outsb
dec
rclb
lods
pop
add
test
jo
jecxz
outsb
fsub
jnp
sbb
sub
push
ret
mov
popa
pop
dec
int3
inc
push
ss
out
pop
iret
mov
mov
sbb
mov
mov
xchg
testb
je
lret
add
jnp
mov
mov
xchg
jnp
mull
cmp
xchg
pop
inc
inc
cmc
mov
jnp
push
pushf
sub
and
insl
ss
jb
test
lods
movl
cmp
stos
fwait
jnp
mov
lret
xor
mov
and
out
sti
inc
test
lret
dec
ds
ljmp
js
cmp
push
and
pop
mov
test
jnp
pop
les
outsb
sub
lcall
mov
repz
fmuls
jae
inc
mov
not
add
negl
sbb
cmp
mov
test
je
mov
repnz
jnp
sub
jnp
pop
jno
adc
add
adc
stos
out
add
aaa
pop
repnz
inc
addr16
mov
dec
dec
insl
aam
xchg
jnp
aaa
js
ja
jnp
dec
sub
imul
jne
jns
test
lock
pop
dec
cmc
pop
cmp
gs
inc
cld
xor
aaa
iret
jnp
xchg
addl
outsl
std
insl
mov
mov
mov
pop
and
or
add
cmp
inc
scas
scas
push
jnp
popf
out
dec
in
jnp
stos
sbbb
push
scas
sbb
push
popa
mov
int
mull
ret
jnp
xor
pop
inc
sbb
fst
pop
jae
rcl
jns
jl
and
hlt
ret
in
fisttpl
negl
sbb
orl
insb
pop
fldpi
jnp
mov
inc
or
lcall
sahf
insb
sbb
dec
inc
add
aas
aaa
mov
sbb
xor
leave
xchg
push
lret
jns
mov
mov
arpl
sbb
fs
ss
clc
add
and
clc
shll
cmpsb
fnstcw
cwtl
imul
int3
inc
jne
pop
lods
jle
insb
sbb
pop
cs
xor
pop
cli
mov
cmp
sbb
jb
mov
out
pop
adc
sti
fimull
jnp
lret
incb
lods
int3
pop
pushf
and
sbb
mov
hlt
js
sbb
mov
out
cmp
cwtl
out
popf
jae
stos
or
std
aaa
sub
xor
jb
enter
pop
jnp
adcb
dec
test
cmp
xchg
idiv
add
jnp
or
jg
hlt
sub
lret
jnp
test
sarl
test
xor
add
test
inc
test
add
push
mov
cmp
push
cmp
jnp
lea
idivl
push
ljmp
fildl
orb
push
pop
jnp
stos
sbbl
mov
xchg
outsl
inc
xor
sbb
jp
call
jle
hlt
mov
or
ss
jnp
push
scas
xchg
fadds
fldt
push
jnp
outsl
mov
loop
sbb
repnz
or
adc
jge
xchg
shl
outsl
push
idivb
sbb
int3
and
xchg
cmp
lods
cmc
dec
jnp
xlat
mov
subb
push
inc
divb
pop
rorb
not
or
sbb
orl
add
test
lods
pop
pop
icebp
dec
jnp
or
cmpsb
addr16
push
mov
in
cli
xchg
dec
jge
mov
aam
outsb
xlat
gs
incl
push
scas
mov
lret
pushf
push
stos
int3
jnp
add
nop
push
scas
add
inc
sub
subb
negl
fsubrs
pushf
xchg
push
cli
mov
ret
mov
imul
lahf
je
ror
jmp
xchg
loopne
mov
bound
popf
dec
addr16
xor
and
push
lods
fldcw
fwait
incb
xor
jnp
sub
mov
inc
mov
or
hlt
add
jnp
push
fistl
shrl
test
adc
jnp
mov
sahf
add
mov
mov
jnp
jbe
stos
cmp
sbb
sub
lock
pop
in
dec
jge
jle
sub
mov
test
push
pop
andl
and
jmp
lcall
test
popf
insl
hlt
movsl
jnp
push
sub
test
or
xor
pusha
inc
movsl
push
inc
outsl
pop
cli
xor
jo
je
fidivrs
icebp
push
stos
inc
xchg
ljmp
out
sbb
cmp
inc
scas
or
jmp
sbb
jns
outsl
notl
dec
pop
dec
ljmp
xor
jbe
pop
xchg
inc
and
call
mov
xor
ret
push
inc
sahf
cmp
mov
ja
mov
dec
daa
jne
sahf
out
xchg
repz
xor
lea
push
sub
scas
bound
lods
jnp
das
sub
repz
call
jnp
mov
and
neg
idivb
jnp
lods
xlat
push
sarb
test
or
jb
mov
xchg
aam
or
sti
xchg
sub
jae
out
mov
sbb
stc
sub
push
pusha
jae
jmp
mov
in
cli
arpl
mov
push
bound
lods
xor
adc
jnp
cltd
push
xor
cmp
xchg
sbb
or
dec
mov
movsl
jnp
clc
inc
cli
and
or
inc
cmp
inc
outsl
icebp
cmc
sti
cmp
sbb
ja
out
push
sbb
or
and
ret
jnp
repnz
cmc
push
test
rcrl
lock
ds
hlt
insl
mov
add
fucomp
scas
or
jnp
inc
dec
int3
scas
mov
cmpb
std
mov
les
dec
push
mov
or
push
xchg
sub
or
sarl
push
sub
jns
sub
lahf
cld
notb
add
ret
adc
inc
sub
mov
fsubr
insl
in
rcll
fimull
cmp
je
mov
imul
daa
cli
push
pop
in
cmp
lock
pop
cmp
sbb
mov
mov
push
jb
mov
mov
xchg
xor
inc
in
or
jnp
or
mov
pop
testb
cmp
ljmp
pop
out
andl
insl
fadd
insb
jns
jnp
ljmp
jnp
or
or
lret
sbb
sub
jnp
jle
scas
pop
cmpsb
ja
mov
add
add
pop
in
sub
test
int
jnp
icebp
addl
mov
jnp
fisubs
jnp
push
sbb
fisubrl
push
jnp
push
and
pushf
xor
cwtl
sub
mov
imul
in
test
pop
daa
pop
scas
xlat
jnp
cmp
mov
stos
cmp
out
test
jo
cmp
cmc
adc
jnp
hlt
out
test
imul
outsl
jns
scas
ret
jnp
pop
cmp
push
mov
or
cmpsl
jle
or
loopne
cmp
dec
sub
ja
sub
aaa
mov
cld
es
fdivs
cmp
lea
and
sbb
lcall
orl
pop
jnp
bound
cmp
imul
cmp
jnp
xchg
lahf
cmpsb
and
les
in
es
or
sarb
mov
mov
sysexit
jnp
fistl
mov
mov
xor
sbb
cli
mov
aam
cmp
lods
push
mov
ret
out
cmp
sub
sarl
mov
mov
aad
out
test
jmp
enter
incl
jne
sub
leave
ss
add
pop
ss
or
sti
sub
shlb
test
adc
jo
pop
mov
sub
add
pop
adc
in
jmp
dec
pop
sti
add
xor
mov
jnp
popf
sbb
cmp
das
ss
push
sbb
pop
push
icebp
add
lret
and
jnp
inc
sub
jnp
jae
mov
jnp
push
sbb
sub
stos
leave
out
push
mov
jnp
clc
mov
cmc
cli
xchg
cwtl
push
mov
push
jnp
sub
mov
jnp
mov
mov
add
lea
push
and
inc
out
lock
push
sbb
aam
outsl
fidivrl
je
stos
jnp
sub
cs
and
div
fidivl
insb
jg
mov
lods
fldt
cs
sub
cmp
push
sub
jb
repnz
sbb
into
cmp
jp
jnp
mov
xlat
sbb
inc
sbb
xchg
jns
adc
fidivrl
sbb
dec
xchg
mov
jnp
jecxz
js
mov
sbb
cmp
call
fcomp
sahf
dec
or
outsl
dec
push
jnp
sti
jb
loop
ret
push
aaa
imul
jnp
stos
push
xchg
sub
lcall
pusha
sti
pop
pop
pop
cmp
outsb
mov
mov
cmp
xchg
cmp
ja
xchg
sbb
test
mov
or
outsl
inc
mov
rorb
stc
ja
and
rcrl
jmp
ljmp
pop
sbb
jo
outsl
cmp
mov
test
daa
cmc
rclb
jnp
ficoms
fstpt
jmp
add
jnp
jle
push
mov
cmp
dec
mov
mulb
jnp
lcall
jnp
xchg
cmp
cmc
scas
mov
and
stos
jnp
lock
pop
or
movsb
cmc
sub
pushf
pop
sbb
jnp
jo
or
or
or
fstpt
notb
push
outsb
mov
in
pushf
jge
lret
jnp
mov
inc
test
cld
mov
mov
jnp
push
pushf
dec
mov
cli
notb
push
insb
fldcw
and
sarb
sbb
or
cmp
mov
imul
and
enter
icebp
aam
sbb
dec
popf
cmp
add
xlat
divb
jo
jnp
pop
jne
fwait
sahf
icebp
dec
mov
jb
repnz
lret
jno
jnp
clc
xchg
or
test
mov
repnz
inc
test
or
or
jo
mov
and
or
jns
push
cmp
shlb
mov
mov
mov
jmp
jl
jnp
add
loop
aas
mov
or
xlat
mov
ss
jnp
mov
scas
xor
insl
sahf
xor
or
fimuls
push
add
les
int3
in
sbb
imull
popa
das
cmp
inc
rorb
mov
mov
dec
pop
sbb
clc
and
sbb
test
js
sbb
insl
sbb
add
jnp
aaa
outsl
push
dec
int
fidivrl
lds
add
bound
or
cwtl
std
xchg
ss
xor
sbb
push
outsl
push
inc
xor
out
jnp
insl
add
jnp
or
jl
xor
sbb
mov
dec
sub
call
pop
sbb
or
rcrb
mov
sub
daa
xlat
add
jo
jnp
das
xchg
jb
cmp
fisttpl
jne
push
fimuls
push
cmp
movsb
popf
xor
sarb
dec
xchg
or
loope
jnp
testb
adc
jnp
hlt
jne
mov
loop
jo
sub
jecxz
add
aaa
ret
add
icebp
adc
int3
mov
mov
adc
xor
mov
scas
ret
neg
jnp
jle
movsl
cli
cmp
xchg
call
jp
jns
and
jmp
lahf
jnp
xor
fs
fwait
sarb
lcall
jg
mov
jae
xchg
arpl
test
push
mov
icebp
and
lods
fsub
rorb
std
add
jp
inc
mov
mov
push
pop
in
push
push
aaa
or
inc
fwait
pop
outsl
inc
push
push
sarb
add
inc
lret
mov
adc
pop
arpl
cmp
rolb
jg
inc
daa
call
cli
jnp
repnz
dec
ds
inc
jnp
mov
loop
loope
imul
xchg
aaa
testb
mov
jle
rcll
mov
sub
loopne
cmp
jae
mov
mov
xchg
and
enter
jle
dec
mov
sub
in
jnp
test
xchg
in
sbb
and
aam
inc
pusha
ljmp
fimull
sub
lea
cmp
data16
jnp
aam
dec
lods
mov
pop
jnp
aad
loope
and
ret
lods
aas
lret
pop
cmpsl
aaa
popf
xchg
xchg
dec
cmc
or
sbb
ss
push
jnp
pop
dec
mov
aad
mov
jae
cmp
ret
lret
pop
xchg
xchg
and
inc
mov
repnz
push
xor
ret
iret
jg
int3
jnp
shlb
or
call
pop
jb
push
je
jnp
sub
rcrb
repnz
cltd
insb
pop
ja
lret
loopne,pn
push
jnp
ficompl
mov
in
cmp
daa
sbb
hlt
jnp
cmp
stos
into
in
ret
and
dec
jne
xlat
insl
jp
ljmp
lea
insb
xchg
adc
jnp
test
mov
fsubrs
cmpsl
lock
dec
lea
jnp
ss
out
ja
fisubl
bound
xor
cmpsl
lods
testb
and
fdiv
insb
mov
mov
and
ret
sub
mov
or
sbbl
push
pushf
and
or
pop
fcmovb
imulb
or
mov
out
arpl
loope
imul
mov
lods
daa
mov
xchg
es
or
bound
add
cmpsl
inc
xor
int
mov
js
data16
jne
jbe
cmpsb
out
aam
mov
dec
xor
jnp
nop
cmp
andb
jnp
lret
cs
xorb
leave
mov
or
out
rcl
sub
in
insl
xor
sub
std
clc
jb
sahf
out
jnp
icebp
imul
xor
pop
sub
ss
jnp
xor
mov
pop
jnp
pop
dec
test
mov
std
subl
loop
xchg
xor
xchg
call
jne
push
icebp
jnp
lods
jg
adc
test
sbb
fldcw
out
jne
jbe
push
imul
mov
lahf
pop
in
mov
jnp
push
xor
stos
mov
insl
cmpsb
iret
ja
xchg
xor
scas
lret
cli
ficompl
xor
xchg
andl
mov
dec
jbe
dec
js
pop
sub
lret
daa
jnp
stc
or
mov
sub
xor
repnz
jmp
jb
fcomip
ja
sbb
sub
pop
rcrl
bnd
lea
mov
ret
loopne
mov
push
sbb
cmp
int3
jns
mov
xlat
dec
test
outsl
aad
mov
stos
jnp
fisttps
andl
ljmp
push
push
xchg
xlat
imull
cmp
fdivrs
jnp
mov
icebp
js
sub
addr16
xlat
insb
das
cs
jnp
or
or
testb
mov
popa
int3
pop
sbb
mov
fdivrs
fstpt
mov
sbb
jbe
pop
jnp
sti
idiv
stos
pop
cmp
imul
and
adc
dec
sti
jnp
mov
pop
dec
fistpll
aaa
lods
push
xchg
jecxz
insl
xor
jnp
or
xor
sarb
adcb
lret
push
mov
and
push
jg
mov
mov
out
sub
add
pop
repz
data16
fnstcw
out
adc
stos
sub
jae
mov
rclb
mov
add
out
mov
jmp
cmp
fisubrl
inc
mov
xchg
js
dec
ljmp
in
fwait
in
adc
shr
rcr
inc
aam
jb
jnp
adc
mov
call
jnp
push
cwtl
cmp
or
sahf
sti
daa
stc
and
mov
insb
sbb
cmp
xchg
push
add
les
pop
cmc
jp
jnp
dec
cmp
jnp
mov
jne
in
push
cmp
fnstsw
push
dec
push
lea
jnp
mov
fwait
add
ljmp
cli
dec
mov
pop
pop
mov
cmp
or
xor
popf
mov
sbb
jne
jae
or
lock
fwait
push
mov
mov
or
sub
push
jnp
pop
gs
or
sub
inc
aaa
imul
add
out
imul
cs
into
and
fwait
add
arpl
jnp
addr16
fincstp
xchg
mov
aas
pop
fidivrl
cli
aaa
mov
subl
adc
dec
xchg
insl
inc
and
js
jg
faddl
aaa
stos
pushf
scas
cmp
push
jae
out
pop
in
cmp
arpl
aam
mul
sbb
adc
pop
mov
test
sar
adc
mov
jmp
jb
sub
jno
sbb
or
or
out
jl
xchg
fisubl
mov
sbb
out
movsl
mov
inc
mov
mov
add
cmc
neg
in
lock
adcl
cmp
jp
xor
rcll
or
cs
inc
mov
pop
aas
add
mov
sbb
je
loop
sub
mov
sti
sbb
loopne
out
clc
push
or
outsl
add
sbb
mov
jo
pop
push
out
push
inc
xchg
and
outsl
add
mov
cmp
mov
or
addr16
scas
insl
push
int3
cmc
sbb
cmp
pop
jb
xchg
jnp
lods
sub
inc
inc
and
fisttpll
ds
mov
push
or
and
inc
idiv
mov
inc
add
jg
or
mov
inc
or
sub
sarb
inc
enter
shll
lds
imul
int
ljmp
stos
cmp
mov
dec
cmc
test
inc
gs
lds
mov
out
lods
call
jns
scas
lahf
inc
or
or
aas
icebp
nop
rol
push
insb
int
repz
ror
xchg
rcrb
push
fisubs
mov
out
xor
lods
div
xor
jnp
lahf
cld
subb
sarl
je
cmpsl
divl
outsl
in
add
push
cltd
dec
xchg
jnp
and
lcall
jnp
lock
sarb
int3
and
sub
or
imul
stos
mov
movsb
in
fwait
xchg
sub
sbb
pop
lea
jnp
insl
lods
aaa
inc
lea
sub
jle,pn
lcall
adc
mov
xlat
jnp
jbe
sbb
iret
jge
inc
js
jne
into
push
lret
cli
insb
pop
leave
or
push
sbb
je
mov
fcomi
lret
push
out
and
or
sbb
stos
sub
inc
pop
mov
ffreep
add
jl
jmp
scas
mov
jnp
out
loope
in
mov
xchg
fimull
and
std
cwtl
sub
push
adc
icebp
stc
jne
sub
and
xor
jnp
push
sti
shl
icebp
rorb
lcall
fisubrl
and
or
sbb
push
dec
inc
jno
ss
sbb
xor
shlb
je
jnp
mov
test
cmp
js
test
div
insb
inc
mov
pop
and
cmp
dec
loop
outsl
int3
ss
sbb
ret
sbb
or
les
js
fidivrl
cli
in
in
sub
das
cmp
int
jnp
jo
es
inc
scas
adc
jnp
enter
lds
repnz
pop
rorb
aaa
scas
jnp
sbb
lods
jnp
inc
sub
lret
jnp
sub
call
jnp
outsb
jb
mov
cmp
loope
cmp
or
lods
adc
and
push
mov
mov
shlb
cmp
or
dec
and
outsl
aaa
gs
xor
out
mov
cmpsb
xchg
mov
andl
or
mov
enter
lcall
push
insb
sarb
mov
in
arpl
mov
jnp
jmp
jno
jnp
and
les
gs
cmp
cltd
mov
in
arpl
lock
jnp
imul
xor
and
insb
int
pop
cli
jnp
xorl
jnp
test
mov
push
and
lret
sub
les
lds
jnp
mov
mov
fdivr
jnp
jecxz
cmp
addr16
or
jns
jno
imul
and
scas
subb
xchg
fildll
insb
mov
js
sub
aaa
xchg
ret
outsl
pop
lock
or
xor
lds
and
xor
mov
je
adc
mov
xor
xlat
dec
clc
xor
lcall
or
daa
mov
mov
mov
cmpsb
jnp
mov
jge,pn
repnz
jnp
pushf
sbb
cmp
stc
mov
sarb
xlat
jns
jg
sbb
pop
pushf
xchg
sbb
sbb
dec
add
imul
testb
jns
xchg
cmp
jnp
or
int3
imul
pushf
jne
icebp
jnp
fidivrl
dec
test
mov
out
pushf
inc
div
dec
and
sbb
mov
cmp
push
into
push
call
xor
js
mov
nop
and
jnp
mov
out
imul
ret
movsl
fidivl
jnp
stos
stos
or
mov
outsl
sub
insb
cmc
das
lock
punpcklbw
arpl
js
cmpsb
sbb
pop
mov
push
inc
sti
jnp
sub
xchg
sub
aas
jnp
push
jle
xchg
lea
pop
in
jnp
fildl
sbb
mov
int
js
in
mov
pushf
add
repnz
jnp
std
sub
outsb
jnp
flds
addr16
xchg
inc
mov
jb
xchg
dec
inc
dec
pushf
cmp
adc
cmp
loope
xor
inc
out
xchg
lcall
stos
xchg
dec
xor
or
test
outsl
call
in
shlb
ret
dec
scas
addr16
xchg
mov
rep
dec
xchg
in
int
pop
jnp
cs
outsl
or
push
addr16
mov
in
add
cld
lock
clc
mov
cs
mov
dec
pop
ds
xchg
adc
repz
cmp
jnp
lahf
mov
push
sbb
dec
nop
in
jnp
clc
dec
adc
cmpl
stos
ret
jnp
xchg
sbb
mov
xchg
dec
xor
mov
jae
js
mov
add
popa
arpl
push
int
repnz
xchg
xchg
pop
mov
mov
int
enter
cld
jnp
xchg
mov
sub
js
lock
xor
fsubp
fisttpl
cmp
jmp
and
cmp
and
sub
out
jnp
or
mov
dec
in
addr16
icebp
clc
add
inc
inc
loopne
dec
insl
hlt
repnz
fdivrp
bound
push
jnp
lret
push
shl
sbb
xor
insl
xchg
gs
jnp
scas
mov
das
mov
out
xchg
decl
sbb
mov
stos
sub
sub
shll
jmp
dec
scas
jns
jp
xchg
pop
jno
lods
sub
aad
les
lret
rorb
push
xchg
jnp
and
jge
cltd
aaa
xor
mov
adc
push
or
jnp
add
sbb
inc
jb
jnp
shll
sub
test
push
jnp
inc
push
mov
lods
sub
jb
int3
pop
inc
jmp
ja
mov
into
out
mov
int
stos
loope
div
das
lcall
pushf
arpl
inc
int
je
mov
outsl
sbb
das
jnp
pop
xor
jecxz
pop
sub
xor
jp
push
jnp
daa
adc
inc
je
int3
xchg
dec
ret
inc
sbb
adc
sub
jne
lods
or
pop
jge
dec
adc
jl
sub
cmc
inc
and
cs
stos
mov
out
scas
sub
jnp
sub
and
ljmp
popf
push
lock
push
xlat
lods
push
jnp
or
sarb
mov
jnp
popa
cmpsb
in
les
inc
push
xchg
cld
mov
in
add
mov
pop
subl
jae
sub
fildll
cmp
mov
dec
and
sbb
sbb
jnp
pop
rorb
dec
mov
ds
jb
sbb
or
dec
push
push
ljmp
mov
push
sahf
bound
inc
push
dec
or
adc
mov
inc
cmp
adc
in
sbb
cmpsl
testl
lods
mov
mov
cmp
or
mov
sub
cmc
jnp
push
jnp
loope
and
decb
subb
gs
xchg
cmp
jnp
xor
xor
inc
insl
out
sbb
scas
sahf
lea
sub
cmp
add
sbb
insb
jnp
xor
pop
pop
sahf
aam
adc
cmp
dec
push
jb
mov
xlat
imul
pop
stos
push
jmp
and
or
lcall
mov
jg
rolb
xchg
sahf
push
or
jnp
lods
lods
gs
add
mov
enter
outsb
pop
iret
push
mov
hlt
xchg
cwtl
jge
test
mov
je
mov
or
out
nop
int3
jnp
xor
lea
fwait
cmpl
dec
or
lahf
dec
sbb
jmp
cld
arpl
hlt
jns
jle
push
stos
cmpsl
out
and
jnp
test
hlt
or
mov
lea
mov
sti
push
jnp
dec
cli
aaa
jmp
pop
jnp,pn
mov
outsl
pop
adc
lea
sbb
lock
push
sbb
cli
and
fchs
pop
roll
jnp
insl
cmp
inc
clc
hlt
fnstsw
mov
mov
xchg
push
and
sbb
inc
es
jnp
cmpsb
add
or
enter
push
sub
or
xchg
cmp
ret
shrb
leave
iret
popa
pop
fcompl
xchg
sti
jnp
daa
rcr
inc
mov
imul
xchg
movhps
mov
das
mov
aam
jb
imul
scas
pop
lods
outsb
push
adc
pop
mov
push
jb
outsl
out
or
lods
test
cmp
into
cmp
pushf
pop
adc
sub
or
lret
loopne
popf
call
aaa
lock
jnp
sub
das
push
stos
jnp
add
jge
or
push
clc
inc
lcall
cmp
jnp
pushf
lods
fstpt
aad
inc
in
nop
or
cmp
stc
fwait
inc
jnp
mov
mov
sub
jnp
in
or
dec
or
xchg
je
add
sti
jo
clc
mov
and
rcll
jnp
mov
hlt
cmpl
jne
das
fmull
clc
sub
adc
push
outsl
lret
xlat
add
jnp
or
cmpl
sub
idiv
popf
jnp
icebp
fs
fwait
mov
or
push
add
test
mov
xchg
outsl
gs
arpl
cmp
cmpsb
popf
lods
test
popa
mov
fstpt
call
push
pop
jnp
test
dec
rcrb
dec
push
int
outsl
or
aas
lods
icebp
xchg
jnp
adc
addr16
sar
mov
mov
outsl
and
dec
jnp
mov
cmp
and
insb
fnstsw
mov
lods
int
test
and
jnp
add
inc
jnp
rorl
outsl
jnp
repnz
sbb
push
mov
cmp
fidivrl
out
mov
add
adc
iret
out
loope
inc
xchg
rorb
pop
pop
ret
inc
jnp
mov
es
jnp
cmp
ret
in
jb
mov
jmp
xchg
jnp
sbb
jnp
xchg
or
sbbl
leave
inc
dec
aam
or
test
mov
sahf
mov
cmpl
orl
test
enter
push
call
jmp
mov
stos
mov
outsl
mov
inc
dec
les
adc
jnp
das
cmp
sub
bound
xorl
mov
movsb
sbb
or
mov
cmp
es
lea
adc
or
fidivl
cmp
pop
cli
mov
jnp
mov
scas
lock
sbb
pusha
cwtl
cmpsl
or
insl
add
stos
push
fisttpll
test
mov
loop
sub
lcall
fwait
scas
enter
stos
mov
mov
lret
bswap
sahf
jecxz
and
mov
addr16
scas
cld
inc
adcl
inc
xchg
push
mov
add
dec
jnp
mov
insl
ret
cmp
sbb
fsubrl
bnd
push
mov
mov
jp
push
fucom
jnp
lods
ret
movsl
arpl
sahf
lret
jbe
inc
in
popa
dec
cmc
dec
loope
mov
dec
mov
jnp
push
negl
fwait
push
imul
jge
repnz
jnp
and
pop
xchg
icebp
aad
fidivrs
dec
mov
lock
es
jns
lea
xor
sti
call
mov
add
cmp
cmp
outsl
dec
or
sbb
adc
jnp
mov
xchg
or
push
pop
rcrl
sub
jnp
push
push
push
jnp
pop
jmp
imul
mov
mov
out
pop
lret
mov
mov
mov
push
dec
jno
pop
add
jmp
mov
fiadds
fistl
test
lds
pop
movsb
pop
addr16
int
jae
test
cmp
stc
aaa
jmp
aam
jae
out
sub
cmp
sub
jmp
stos
fwait
mov
or
and
sub
sub
js
xor
cli
pop
addr16
or
mov
fcmovne
sub
aaa
rorb
fsub
mov
ljmp
sub
fnsave
cltd
pop
sti
jnp
hlt
or
dec
pusha
xchg
adc
cmp
xor
dec
jo
imul
into
or
test
xor
xchg
pop
jnp
test
mov
jnp
xor
jnp
jge
push
jbe
dec
cwtl
imul
inc
jne
cmp
out
pop
lcall
subb
cmp
in
je
or
ljmp
mov
imul
fstpt
outsb
and
xor
push
sbb
out
mov
jb
mov
or
pop
or
xlat
ret
jnp
loope
jmp
cli
mov
push
cmp
mov
add
mov
es
pop
jne
cli
push
jno
mov
sbb
hlt
sub
stos
mov
ljmp
subb
cmp
jmp
pop
mov
pop
jge
andb
dec
pop
mov
stc
fmulp
scas
xor
or
cmp
push
push
xor
ss
fwait
jb
in
pop
aaa
jnp
sti
adc
pop
imul
divb
or
jne
jnp
or
jno
or
dec
mov
std
gs
cmp
loopne
mov
xchg
mov
mov
dec
dec
inc
jnp
mov
outsb
in
arpl
jge
ja
roll
cmp
loope
sub
mov
jb
mov
int
js
xor
push
sarb
mov
mov
and
pop
shrl
outsl
into
mov
jnp
rolw
or
imul
xchg
xchg
repz
int
jnp
call
sub
jnp
dec
insl
inc
dec
lock
test
rcl
or
imul
mov
sbb
add
pop
and
mov
jnp
push
mov
leave
lcall
int3
dec
and
jnp
aad
xchg
pop
fidivrs
call
push
mov
fmuls
dec
js
cmp
mov
mov
mov
scas
sbb
mov
or
in
repnz
xor
and
bound
stos
nop
and
push
xchg
gs
repnz
addr16
push
push
sti
sahf
jnp
add
dec
push
das
or
inc
mov
lods
mov
clc
pop
jnp
movsl
shll
dec
jg
sbb
int3
in
jnp
xlat
dec
or
dec
cmp
stc
adc
push
push
es
mov
sub
add
vphaddbd
cmp
add
incl
add
jb
jnp
and
cmpsb
rorb
jnp
inc
mov
fcmovb
adc
dec
notb
sub
xor
aaa
or
pop
pop
pop
popa
cmpsl
icebp
shlb
arpl
aad
out
out
jnp
or
ret
mov
decb
jbe
test
loopne
inc
in
push
aas
jnp
push
aaa
mov
sbb
call
jnp
mov
jns
out
aam
mov
lds
call
jnp
pushf
dec
cmp
adc
aam
mov
arpl
jbe
xchg
jno
outsl
cwtl
or
jnp
add
xor
aaa
jns
in
in
xchg
pop
lcall
rclb
xchg
ss
lods
adc
mov
sub
and
jnp
movl
pop
jns
into
je
in
and
sub
cmp
popf
adc
mov
cmpl
insl
jp
mov
jnp
cmpsl
or
jl
cmp
repz
ss
mov
arpl
mov
jno
fisubl
mov
add
sbb
jp
mov
insl
ret
jnp
ja
into
andl
loop
pop
stos
subl
je
movl
mov
or
jg
jns
inc
cmp
cmp
or
add
test
bound
adc
jnp
mov
dec
lret
mov
jo
jnp
and
sarb
imul
stos
gs
mov
fwait
mov
scas
insb
in
add
push
jnp
lods
mov
aas
jnp
idivl
in
mov
inc
in
pop
jnp
xlat
mov
fsubl
inc
cmp
call
pushf
out
daa
movl
lahf
repz
lds
and
or
sub
dec
mov
insb
int
scas
mov
notl
imul
rclb
arpl
push
pushf
aaa
and
clc
lods
jnp
sbb
stos
xchg
push
cmp
jle
cwtl
pop
in
insl
in
pop
emms
cmp
adc
pop
lahf
lret
and
add
leave
jo
jnp
iret
inc
mov
sbb
mov
jnp
adc
mov
xor
ja
ret
rcrl
add
frstor
jle
shl
jg
jno
ret
sub
sbb
mov
mov
inc
dec
cmpsb
mov
jnp
mov
jg
push
mov
imul
lds
jnp
sarl
jnp
adcb
repnz
lock
pop
sar
stos
mov
aaa
not
push
jnp
loop
or
in
mov
sbb
xchg
pop
ja
out
push
arpl
bound
in
fwait
jnp
pusha
fmull
cmp
mov
jbe
add
out
jnp
add
jmp
pop
es
enter
mov
ficomps
mov
lods
push
sarb
test
sub
jnp
sub
add
sbb
mov
sub
dec
fiadds
jnp
cmc
inc
add
jbe
cltd
or
pop
loopne
xchg
xlat
or
dec
pop
or
inc
xorb
sarb
adc
mov
aaa
addl
mov
jnp
loop
add
adc
and
popf
sbb
or
or
clc
push
dec
scas
into
lahf
jnp
stos
or
pop
out
sub
inc
mov
mov
loope
dec
xchg
jno
push
sahf
mov
xchg
jno
daa
push
jnp
mov
cli
dec
jnp
cmp
sub
andl
pop
add
jnp
xor
xor
dec
jne
movsl
push
dec
jnp
mov
popw
dec
test
fldcw
cmc
push
mov
sub
imul
divl
lahf
arpl
dec
mov
pop
call
jecxz
jae
dec
sub
dec
addb
xor
daa
mov
add
popa
movsl
scas
loop
mov
and
imul
dec
outsb
mov
jmp
clc
push
out
cld
dec
int3
pop
mov
push
mov
cmp
pop
jp
out
fsts
cwtl
stc
outsl
scas
jecxz
xor
inc
jnp
mov
aam
xchg
scas
jnp
jg
inc
push
push
sbb
mov
jmp
sbb
mov
mov
mov
push
xchg
shrb
fwait
enter
xchg
and
fnstcw
xlat
js
dec
sub
and
pop
mov
out
jb
xchg
loopne
jnp
sti
int3
xchg
cltd
jnp
jle
mov
dec
fadds
add
test
in
repz
test
scas
mov
repz
jae
or
in
mov
sub
and
roll
je
or
shrb
push
lcall
xor
sbb
leave
imul
inc
pushf
cmpl
or
adc
push
dec
push
out
jnp
or
out
pop
lods
imul
in
mov
in
inc
fisubrl
jp
mov
jnp
sbb
les
loopne
jnp
stos
xchg
sub
dec
jnp
ss
into
cmp
jnp
mov
scas
xor
pop
insl
repnz
ret
jbe
xchg
fldt
mov
jnp
dec
addr16
call
jae
jle
lcall
cmp
insb
add
or
cmpsb
jae
cmp
testb
imul
pop
sbb
jnp
xchg
xorl
outsl
mov
sbb
fwait
js
jno
xchg
jo
ss
cmp
hlt
imul
ljmp
popf
mov
cmp
mov
loop
mov
jnp
mov
icebp
loope
adc
repnz
jno
add
sti
jnp
orb
sbb
aaa
or
cmp
stos
sahf
test
aaa
repz
sbb
adcb
pop
popf
jnp
fisubrs
add
aam
in
jnp
dec
pop
repnz
cmp
and
xor
cmp
jnp
mov
lods
xchg
enter
jg
daa
xor
xchg
pop
sbb
push
inc
daa
jno
adc
leave
mov
into
adc
push
out
sbb
lret
pushf
mov
mov
xchg
xor
lcall
fsubrs
mov
sub
or
arpl
out
sub
mov
subl
mov
pop
xorb
inc
gs
js
adc
shlb
pop
insb
add
sbb
cmc
pop
xchg
divl
mov
push
mov
or
dec
jle
mov
sbb
fnstcw
dec
in
sub
hlt
cs
lcall
ljmp
jecxz
push
push
xchg
das
xor
movsb
adcl
sahf
jnp
xchg
adc
dec
jmp
jnp
pushf
cs
inc
nop
cmp
js
mov
dec
out
pop
cmp
mov
xchg
sbb
js
lds
in
cmp
jnp
dec
ror
pop
cli
lods
push
jnp
inc
lea
mov
inc
dec
imul
test
and
mov
jae
testb
outsb
mov
pushf
pop
jnp
or
xchg
mov
mov
dec
sub
insl
push
cmp
aaa
fldt
int3
cmp
jnp
or
jns
cmpsl
je
or
les
repnz
cmp
sbb
dec
fwait
mov
xchg
mov
lcall
inc
inc
lods
dec
lods
adc
or
inc
bound
jecxz
dec
data16
clc
mulb
fdivrs
clc
sbb
jns
xor
enter
stos
add
outsl
mov
sbb
in
jnp
push
imul
fidivrs
aam
pop
jns
push
cmp
lods
scas
data16
aaa
push
das
movb
sbbb
enter
scas
jae
mov
push
lcall
mov
hlt
out
adc
jb
jno
idivb
ja
xor
mov
mov
pop
shlb
inc
lcall
sbb
jge
int3
or
rorl
mov
in
mov
enter
or
cld
xchg
jnp
daa
jne
fistl
in
jnp
or
mov
notb
dec
cmpsb
loop
insl
call
pop
sahf
ja
das
or
outsl
cmpsl
iret
jge
insb
push
jnp
jmp
sbb
and
sub
ret
repnz
leave
iret
call
mov
mov
sub
jnp
cli
rcrb
mov
or
in
dec
call
jae
sbb
je
or
sbb
xchg
je
xlat
ja
pop
lret
orl
es
enter
scas
int3
dec
sub
mov
divb
add
push
jecxz
sub
pop
cltd
dec
push
xchg
jne
sbb
sbb
or
mov
lods
repnz
mov
fs
mov
cli
mov
inc
iret
dec
cmpsb
add
notb
jae
lods
in
dec
int
jge
xlat
mov
pop
cmp
jp
jnp
cmp
cmp
xchg
xchg
mov
xchg
call
dec
mov
cld
sub
jnp
pushf
rcrl
aam
cmp
push
in
jnp
mov
inc
inc
insl
sub
cmp
stc
and
cmpsl
fwait
int3
push
ljmp
mov
dec
lret
sub
call
movsl
scas
fistpll
iret
fiaddl
mov
out
jnp
mov
xchg
cmp
sub
sub
mov
sbb
mov
xor
outsb
jnp
aas
mov
xchg
aam
jnp
mov
stc
mov
lock
push
cld
xchg
insl
jge
stos
jne
outsb
add
or
aam
scas
xchg
sbb
push
pop
mov
shrl
xor
test
dec
repnz
pop
lret
pop
in
cmp
jnp
into
sahf
leave
inc
mov
sbbl
lods
mov
push
sub
test
hlt
fstpt
movb
aad
jnp
cmp
cmp
lret
pop
cmc
jnp
sub
xchg
jns
sub
mov
mov
das
repnz
sub
sub
xchg
in
sbb
ss
jnp
sti
stos
das
sub
icebp
jnp
push
inc
hlt
mov
pop
push
fbld
int
sbb
jmp
jnp
adcl
sub
popa
or
add
or
aam
or
jmp
jne
aaa
sarb
adc
or
ljmp
push
mov
xchg
xor
dec
and
push
sub
lea
xchg
xchg
lods
jle
in
or
aaa
outsl
mov
sub
bound
jnp
adcl
jnp
stos
shrl
cmp
jge
ja
or
cmp
je
loope
outsl
cltd
mov
xlat
mov
push
mov
push
enter
inc
dec
dec
mov
or
test
cs
xor
jne
mov
adc
les
sub
in
mov
push
sub
ja
fcmove
jnp
jge
jb
mov
push
inc
sahf
xor
scas
rorb
dec
xchg
add
repnz
imul
mov
insl
mov
jnp
mov
cmpsb
add
adc
iret
jnp
int
xlat
mov
jae
cmpsb
decb
adc
mov
outsb
fidivrl
cmp
pop
imul
fsub
jae
in
aad
sbb
jnp
outsb
or
push
es
lcall
sarb
mov
mov
push
sti
mov
andl
repnz
cmpsl
insb
mov
fwait
testl
stc
repz
out
ja
or
sbb
mov
jecxz
mov
dec
subl
xchg
cli
jnp
push
insl
xchg
pop
int
imul
mov
cld
test
outsl
xlat
cltd
sbb
testl
or
outsl
push
clc
lret
shrl
aad
fdivrs
mov
pop
jnp
jb
pop
mov
out
jnp
lods
ret
js
popw
mov
insl
sbb
outsl
stos
pushf
insl
mov
xchg
cwtl
fdivrs
cli
pop
shrl
jnp,pn
clc
andb
xlat
sub
sarb
push
jge
mov
int3
push
jnp
add
fiaddl
mov
aaa
mov
xchg
jnp
mov
cmp
jnp
lret
inc
pop
jbe
jnp
lea
push
mov
and
imul
jo
stos
sub
xlat
mov
ret
jnp
or
xor
lds
jmp
sbb
mov
bound
subl
xlat
dec
ss
test
ja
inc
jne
cli
pop
decl
in
mov
mov
fisubrs
in
imul
out
sbb
pop
sub
lods
test
jnp
mov
or
fisubl
cmp
xor
add
out
test
jecxz
sub
lahf
addr16
clc
cmp
sbb
sbb
in
lret
out
int3
repnz
inc
xchg
push
push
xor
hlt
inc
inc
or
mov
test
and
sbb
ljmp
cmp
sbb
fisubl
mov
clc
bound
sub
mov
cmpsb
jnp
cwtl
stos
orb
jb
aaa
loope
xor
cmp
or
out
mov
mov
fsubrs
mov
or
in
cmp
orl
iret
adc
cmp
fisubrs
jnp
outsl
add
scas
push
lods
stos
jnp
pop
jae
or
mov
or
clc
jne
lea
inc
inc
mov
fcoml
add
ja
push
dec
jnp
ss
xor
and
mov
outsb
push
test
pop
adc
ja
jae
fadds
stc
gs
jnp
mov
repz
cmpsb
out
cli
imul
popa
shrl
push
je
xlat
sbb
mov
jnp
pushf
scas
push
mov
push
ret
sbb
sbb
or
mov
hlt
out
jnp
ljmp
sbb
inc
nop
fucomp
js
sar
test
leave
mov
or
push
mov
ret
inc
jnp
sub
cltd
outsl
push
das
add
jnp
int
insb
sahf
mov
pop
popf
xchg
mov
mov
aaa
std
fstpt
lock
jnp
ljmp
jnp
mov
jmp
in
flds
in
mov
imul
rorb
adc
or
mov
jb
in
cmp
jnp
adc
sahf
dec
push
mov
jne
aam
test
push
mov
fwait
mov
adc
push
push
fyl2xp1
lods
mov
test
and
cmp
cs
mov
scas
jns
adc
dec
jnp
div
xchg
jns
mov
adc
stc
jnp
xor
mov
loopne
mov
jmp
mov
mov
fidivl
jnp
jp
sbb
subb
icebp
adc
repnz
xchg
out
pop
jnp
mov
fldcw
jnp
sbb
mov
or
inc
jno
sti
in
jnp
es
and
cmpb
jnp
mov
xchg
push
jnp
call
and
xorl
jo
pop
cli
sbb
mov
repz
sbb
mov
sub
loope,pt
mov
lahf
movsb
in
cwtl
fnstsw
cmp
lea
lods
cmpsl
mov
cltd
mov
test
sti
loop
pop
clc
dec
lods
mov
adc
cmp
fistpll
jnp
xor
std
stos
ret
xor
cmp
inc
leave
add
jae
shll
and
adc
imul
add
fsubp
xchg
call
lret
mov
sti
mov
int3
cmc
loop
lret
pop
loopne
sbb
stos
sahf
insb
xchg
idivb
sub
shrl
mov
scas
lret
jnp
ljmp
jnp
and
dec
inc
shlb
icebp
inc
test
or
movsb
dec
push
loop
adc
mov
lock
mov
mov
lods
push
movsb
imul
pop
dec
inc
out
insl
out
movsb
and
jno
dec
outsl
loope
mov
lock
sub
push
fsubr
sti
mov
out
pop
jnp
mov
jle
cmpsl
test
dec
addr16
outsl
mov
pushf
jbe
aaa
cmp
stc
jnp
mov
movsl
mov
into
jle
outsl
repnz
lods
jmp
and
fmul
or
mov
mov
sbb
ja
xchg
ss
ljmp
insl
fidivs
mov
hlt
sbb
push
call
lret
xlat
lods
or
push
cmpsb
or
sub
outsl
mov
lret
fwait
jnp
insb
push
push
cli
push
push
jne
and
pop
sub
cmp
popa
ret
push
scas
mov
idiv
mov
bound
inc
lock
outsb
icebp
fldenv
test
clc
or
cli
cltd
jno
sub
pop
lods
or
lret
mov
sti
cmp
xchg
jno
xchg
or
leave
sahf
jge
mov
outsb
mov
sub
pop
lret
jecxz
xlat
sub
jnp
aaa
insl
dec
pop
sahf
in
xor
les
xchg
pop
jnp
pop
cs
call
lahf
clc
jle
sub
add
jo
sbb
arpl
jne
sub
nop
push
jnp
lock
and
mov
ljmp
mov
push
mov
bound
jb
imul
stc
cs
lods
jnp
movsb
outsb
mov
jae
cwtl
adc
mov
xorl
in
mov
mov
jnp
das
push
ficomps
je
jnp
mov
sbb
lret
and
shl
repnz
or
js
push
mov
jnp
xor
je
in
sbb
and
in
mulb
repnz
scas
push
pop
outsl
in
xchg
lds
aaa
sbb
cmp
out
mov
push
sbb
test
out
cmp
std
outsl
aam
cmp
sarl
in
mov
or
mov
sub
xor
jnp
lcall
dec
lods
int
mov
lds
fisubs
push
jnp
lods
dec
int
sbb
mov
subl
aas
shlb
outsl
mov
push
xor
sbb
les
cmp
sbb
jbe
add
jnp
mov
mov
jmp
inc
jnp
mov
and
sbb
les
mov
mov
aam
nop
mov
jp
push
jo
or
jnp
cmpsl
ljmp
adc
jp
xchg
mov
sbb
dec
jnp,pn
jo
xor
enter
cli
fxam
push
adc
fnstsw
ljmp
jnp
or
mov
imul
lock
out
js
pop
shr
adcl
jnp
in
insl
pop
pop
fwait
jnp
jp
stos
lods
fiaddl
mov
aaa
call
jnp
daa
pop
xchg
mov
jecxz
jnp
cmp
jb
bound
sub
mov
inc
cmp
in
jnp
xor
int3
imul
and
imul
xor
inc
xchg
pop
sub
push
cmp
and
insb
or
sarb
repnz
dec
ss
push
imul
or
jnp
in
mov
adc
js
sub
jb
sub
out
jnp
xchg
mov
sub
dec
mov
sbb
push
mov
xlat
sub
jnp
repnz
xchg
xchg
call
in
aaa
jmp
mov
cli
sbb
jnp
inc
popf
xor
in
push
jnp
ljmp
jnp
jo
out
cmpsl
and
sarb
aam
mov
mov
or
frstpm(287
jnp
ss
lods
shlb
jnp
leave
clc
jg
sub
and
imul
ret
ljmp
mov
push
cmp
lods
fnsave
xor
cmp
sub
fwait
divl
ficoml
mov
stc
jnp
push
test
int3
adc
jnp
mov
push
mov
fidivs
xor
insl
jnp
out
outsl
in
aam
imul
subl
push
mov
pop
cmp
fmul
cmp
add
pop
xor
das
xchg
inc
xchg
imul
mov
adc
add
in
and
push
sub
aad
mov
or
aam
dec
nop
ss
cltd
lret
out
mov
jg
mov
inc
mov
aam
movsl
fadds
test
sbb
and
jb
mov
aam
aam
jnp
xor
sti
mov
jmp
stos
dec
pop
mov
jnp
lret
es
or
jnp
out
shlb
jmp
ja
in
jae
shrb
jmp
jle
lods
xor
push
cwtl
sub
xchg
and
add
insb
xor
jnp
fdivs
iret
fidivl
dec
xor
and
or
push
int3
jnp
lret
pop
push
testl
jb
sti
mov
dec
int3
jnp
mov
scas
addr16
fwait
xor
mov
sbb
hlt
in
scas
xor
imul
maskmovq
testl
jmp
pop
je
mov
lea
dec
jle
mov
fwait
lock
xor
fsubrl
scas
jae
testb
or
ss
push
inc
adcl
out
insl
and
sub
jge
std
mov
sub
or
mov
repz
jnp
mov
lods
das
jnp
leave
mov
push
rcrb
adc
cld
sub
pop
dec
inc
pop
and
jnp
shll
mov
int3
or
aad
push
mov
sbb
dec
lds
in
sub
sbb
push
scas
push
mov
in
xchg
jnp
sub
cli
orl
xor
mov
shl
mov
cmp
fldcw
pop
mov
stos
leave
fistps
mov
jnp
adc
xchg
mov
jo
pop
jnp
xchg
insb
pop
cmp
or
test
movsb
std
mov
lods
lods
push
cmpl
cwtl
mov
jnp
pop
loopne
push
cli
and
ds
inc
jnp
pop
mov
ret
lcall
xchg
into
jnp
mov
jae
inc
mov
or
sub
or
js
dec
cmp
inc
mov
jmp
and
stos
inc
icebp
sbb
jmp
je
mov
stc
ja
lret
jne
xchg
push
push
pop
sbb
lds
pop
call
jp
cmp
lods
bound
test
inc
outsl
push
xorb
add
fwait
mov
pusha
adc
and
stos
popa
sbb
dec
ds
loope
mov
insl
fisubs
mov
inc
cmp
mov
fdivs
enter
push
jae
sar
jns
insb
imul
outsb
adc
arpl
push
popf
push
imul
mov
or
shrl
cmp
notl
mov
leave
outsl
or
lods
and
fcom
test
scas
mov
xor
loop
xorb
dec
adc
outsl
cmp
xchg
in
sub
xor
cmp
in
call
enter
mov
jnp
and
or
cmp
sti
xchg
xor
cmpb
repnz
scas
jnp
cltd
sbb
jnp
sbb
mov
enter
ss
lret
mov
dec
in
fsubrs
in
xor
xchg
xor
mov
adc
push
mov
mov
lods
push
inc
test
and
clc
adc
xchg
xor
jp
jae
xchg
mov
adc
xchg
xor
ss
hlt
sub
fcomps
js
and
pushf
mov
popf
lret
repz
mov
xlat
mov
inc
scas
jne
cmp
out
fdivs
push
mov
sti
and
popf
mov
jnp
lods
mov
cmp
mov
jnp
adc
sub
dec
mov
lea
jno
and
jg
jl
push
sbb
mov
jno
test
adc
les
xor
mov
loopne
mov
cmp
xor
lods
push
data16
sub
push
test
dec
and
sbb
jl
mov
jl
rorb
dec
cmp
dec
and
inc
dec
sub
dec
dec
notl
cmpl
lds
sub
xchg
xor
adc
jmp
jp
mov
ss
push
lret
jne
lods
xor
pop
jno
push
or
mov
pop
cwtl
or
mov
xor
push
jnp
jb
lcall
adc
jbe
sub
mov
outsb
mov
popf
mov
aaa
and
dec
push
add
or
test
mov
sub
fsubl
cmp
lret
adc
lods
adc
bound
push
xchg
or
jnp
popa
add
out
sub
sahf
cmp
fwait
pop
loop
arpl
lods
jnp
xchg
pop
lds
jb
sub
dec
into
cmp
xlat
loope
xor
stos
cs
cmp
cmp
sub
mov
add
dec
or
xlat
adc
fldt
jnp
dec
or
dec
pop
pop
or
pop
jae
push
mov
in
mov
push
out
mov
aaa
pop
mov
std
out
fldcw
sbb
lock
stc
xlat
fwait
sub
scas
or
pop
js
mov
or
jnp
pop
scas
daa
sti
fs
cli
scas
add
shrb
cmp
das
repnz
sub
movaps
jae
or
mov
adc
mov
lock
in
insb
pop
xchg
jnp
dec
int3
stos
cmc
mov
sub
ljmp
fwait
mov
mov
arpl
mov
dec
cwtl
loop
mov
mov
sub
sahf
sbb
inc
in
xor
jns
arpl
cmp
mov
mov
insw
repnz
dec
mov
mov
ss
pop
fs
test
xor
jg
dec
shlb
pop
in
jnp
imul
adc
cli
rolb
jnp
sarl
xchg
adc
mov
jnp
imul
jno
cld
lods
pop
mov
and
push
out
cmp
cs
stos
jne
xchg
xor
sbb
mov
out
sbb
jp
xor
and
outsl
add
fsubr
ss
dec
jns
jnp
adc
clc
repz
pop
xchg
dec
enter
inc
in
xlat
cmp
xorl
mov
imul
mov
sub
jb
lret
js
and
jae
fsubrl
sub
mov
xor
pop
add
xchg
xor
repnz
pop
jns
lock
jmp
ss
pusha
das
or
jnp
jo
into
jbe
call
adc
arpl
ret
in
adc
call
sub
push
ss
ljmp
cmp
insb
mov
in
mov
sbb
push
or
sub
mov
cmp
mov
cmp
add
and
pop
pop
adc
push
dec
jae
jno
mulb
push
jmp
inc
or
xor
mov
scas
imul
jnp
test
mov
inc
jnp
cmpsl
xor
int3
xor
imul
cmp
dec
lods
mov
outsb
sti
ss
mov
sub
jnp
push
cwtl
push
cmpsl
cmp
mul
sub
das
negb
cmp
xor
jbe
pcmpeqb
mov
jnp
cs
jb
ja
and
stc
cmp
orl
hlt
add
outsl
into
sti
repnz
fwait
lock
aam
dec
mov
inc
ss
xchg
mov
stos
dec
jbe
fdivp
jnp
mov
repz
imul
shll
jno
jbe
jnp
pop
jle
fsub
and
pop
das
lock
push
mov
out
cmp
xor
pop
jns
mov
mov
inc
aaa
cli
sub
les
stos
cltd
aad
aam
arpl
mov
xchg
jp
jo
imul
in
repnz
sbb
cmp
out
push
ja,pn
xlat
mov
sub
scas
outsl
notb
lods
repnz
xchg
jae
xchg
fimull
adc
cmp
mov
outsl
xor
or
cwtl
cmp
xchg
pop
cmc
dec
mov
jae
pop
jae
sarb
and
push
cltd
push
xchg
mov
mov
inc
xorl
in
mov
imul
lea
out
mov
cmp
and
aam
aaa
out
pusha
xor
lret
shl
repnz
cmpsb
js
mov
in
je
ficomps
xchg
fstps
out
sub
jae
scas
cmp
shrb
cmpsb
mov
sub
cmp
hlt
and
pop
jnp
sbb
or
mov
dec
add
dec
divb
jl
mov
mov
into
pop
in
in
and
sbb
cltd
cmp
sbb
out
jnp
push
shrb
fcmovne
cmp
iret
mov
not
mov
negl
add
cli
cmp
repz
and
stc
cmpsb
stos
push
lcall
xor
out
nop
mov
add
mov
daa
out
mov
fwait
sub
xor
or
pop
xchg
rolb
mov
sub
or
test
outsl
mov
lods
pop
and
jbe
jnp
or
nop
xchg
xor
mov
das
es
cmp
add
dec
sub
lods
mov
loope
pop
outsl
pop
mov
sbb
lock
div
mov
int
xor
mov
jnp
mov
divb
or
mov
jnp
lahf
mov
sub
sarl
adc
das
xor
out
jns
pop
sahf
insl
cmpb
repz
jbe
cld
inc
and
outsl
dec
mov
subb
imul
xchg
dec
cmp
xor
mov
mov
jnp
push
or
inc
test
jo
inc
push
pop
fcompl
test
sbb
ja
addr16
mov
test
insl
mov
cld
fmuls
and
inc
sub
push
test
sti
es
das
rorb
sub
pop
add
loop
sti
cmc
scas
mov
aam
enter
hlt
sub
push
inc
jnp
mov
jns
or
out
dec
mov
enter
cmc
xor
and
jnp
in
sub
add
pop
jae
jl
push
jno
enter
jg
jnp
and
mov
clc
int3
fisubrl
outsl
sbb
dec
or
or
cmp
adc
aaa
cwtl
push
or
imul
aad
into
and
jnp
ret
cmp
loopne
nop
cmc
xchg
dec
in
loop
inc
and
or
jnp
arpl
push
stc
jno
jo
dec
lahf
popf
xlat
ljmp
ss
jge
js
pop
pop
sub
jnp
movsl
adc
push
stos
inc
inc
dec
mov
scas
lods
mov
and
sbb
rcl
jno,pn
mov
jnp
inc
and
mov
push
mov
divl
out
fsub
or
sub
testb
and
jnp
xor
ja
stos
sub
repnz
in
int
jb
divl
mov
lcall
xchg
cmp
sub
mulb
test
add
or
push
push
mov
sub
xor
call
xchg
xor
fdivs
ja
loope
popf
add
xchg
xchg
pop
push
mov
dec
jae
cld
pop
loope
shlb
stos
adc
mov
mov
imul
into
dec
pop
dec
dec
ljmp
outsb
push
fwait
outsl
lret
add
push
add
jp
xchg
mov
jnp
xor
fs
stos
fadd
pop
call
and
arpl
mov
cmp
lret
or
adc
in
sbb
adc
imul
std
ss
aam
or
je
sbb
mov
fisubrl
jle
mov
push
mov
div
xchg
mov
fldt
insl
insl
sub
jmp
dec
push
cmp
insl
mov
loop
mov
test
not
imul
cmp
push
ss
jns
mov
in
xchg
imul
insl
imul
repnz
clc
ss
cmp
jnp
jle
and
jnp
in
xchg
xchg
mov
xor
cwtl
mov
mov
repnz
or
ffree
jnp
ja
inc
insb
ss
imul
xor
cmpsl
shrb
push
cmp
adc
fstpt
enter
mov
repz
add
dec
xor
sbb
aaa
cmp
dec
jae
mov
daa
mov
jnp
mov
sti
xor
push
icebp
sbb
cs
in
negb
mov
push
iret
jne
lods
mov
stos
in
or
subl
xlat
aaa
jns
ja
lock
jbe
xor
cmp
dec
dec
mov
and
out
mov
inc
sbb
cmp
jae
jne
stos
mov
add
aam
movsb
sub
pushf
jle
pop
cmp
inc
stos
xor
cmpsb
dec
enter
mov
dec
jp
cmp
pop
vmptrld
fdivrs
and
imul
mov
adc
sub
rcrb
imul
mov
aaa
das
mov
aas
and
and
ljmp
jnp
les
fidivl
mov
jnp
cmp
jnp
in
pushf
inc
inc
loopne
fisubrl
sbb
les
push
dec
cltd
iret
mov
cmp
and
pop
es
jns
cmp
test
adc
imul
sub
test
cmp
mov
in
mov
jg
cmp
outsl
sbb
push
call
lret
test
dec
add
fistpl
jnp
ss
cwtl
rcr
adc
ss
cltd
cs
mov
jnp
jle
cmpsb
and
mov
dec
inc
jnp
out
testb
fisubrs
xlat
stos
cmp
sub
add
mov
mov
aam
sbb
jnp
xchg
ss
mov
dec
jbe
loop
sub
and
add
sbb
aaa
xor
adc
dec
incb
loop
stos
push
pop
cli
sub
xor
sbb
cmpb
jg
pop
cmp
pop
mov
bndstx
out
lods
jg
xor
xor
cmp
aaa
mov
adc
repnz
cmc
cmpsl
imul
nop
xchg
mov
hlt
lock
mov
fistpl
pop
sub
cmp
andl
dec
aaa
mov
loope
repz
aad
das
dec
fadds
ja
repnz
cmpl
fdivs
xchg
jnp
mov
repnz
jnp
sub
cmp
pusha
sub
hlt
stos
mov
outsl
repz
outsl
push
aam
push
call
not
dec
loope
xor
std
pop
outsb
gs
insl
int3
mul
push
negb
cli
mov
mov
cmp
and
loope
imul
roll
xchg
dec
xchg
xchg
add
sahf
into
out
loope
pop
xchg
pushl
shr
sbbb
jne
cmp
icebp
push
loop
pop
aad
frstor
jae
into
movb
cmp
out
xor
xor
adc
outsl
mov
sbb
pop
decl
pop
sbb
js
jbe
add
mov
fadds
sub
mov
jns
sbb
mov
mov
lds
sbb
lret
sti
mov
cmpsb
repnz
dec
fmuls
sub
push
adc
test
jo
aaa
repz
sbb
dec
jnp
jp
xor
andl
jo,pn
jnp
and
sub
cltd
jmp
mov
insb
push
out
lock
jnp
in
rorb
clc
je
jmp
sub
or
push
or
int
cmp
ja
dec
mov
adc
xchg
cltd
inc
clc
cmp
or
popa
or
mov
out
push
jmp
outsl
pushf
movsl
fsin
jb
mov
jnp
mov
cmpsl
lods
stc
jnp
lds
sbb
jp
jae
inc
xor
cmp
repnz
shlb
sbb
mov
cmp
sub
pop
xchg
outsl
adc
pop
jg
insl
sub
mov
xorl
xchg
packssdw
xor
sbb
ja
mov
sahf
sbb
sbbl
inc
or
push
sub
insl
popf
imul
fsubrs
cmp
stos
xor
sti
jmp
dec
add
mov
test
je
outsl
and
mov
repnz
arpl
jno
ja
pop
cmp
outsb
imul
pop
xor
bound
in
stos
data16
lods
jo
les
outsb
sti
add
loopne
daa
mov
scas
insl
loop
pop
popa
aas
cltd
jl
shrl
cmpb
imul
and
mov
xor
sub
xor
jp
xlat
jg
pop
xor
outsb
mov
and
je
jno
andb
adc
jno
imul
push
je
sbb
das
test
cmp
mov
es
repz
jb
test
xor
adc
jnp
push
xchg
cmp
dec
cmp
cmp
xchg
pusha
aaa
jnp
adc
push
mov
sub
mov
adc
dec
movsb
mov
cvtps2pd
cwtl
inc
aam
insl
daa
sub
jnp
sbb
mov
jnp
stos
sub
inc
mov
fsubrs
outsl
nop
mov
js
cmp
mov
dec
repnz
outsl
insb
mov
cmp
mov
xlat
xchg
dec
lahf
mov
jnp
sub
inc
notb
mov
insl
jge
or
imul
cwtl
cmpb
xor
fcomip
popf
mov
pop
jbe
jae
xor
and
mov
cmp
les
das
hlt
push
push
mov
dec
into
fistl
jnp
mov
call
mov
mov
push
jae
jnp
out
aaa
lods
add
mov
clc
nop
imul
jne
and
dec
cld
jnp
pop
xor
cmp
fmuls
xor
jae
and
sbb
jl
cmp
adc
jnp
insl
cli
mov
pop
imul
mov
imul
es
push
or
mov
fdivrl
mov
es
mov
cmpl
mov
pop
mov
pop
dec
cmp
scas
repz
imul
cli
aaa
sub
out
mov
sbb
jmp
mov
jnp
or
cmp
jnp
mov
popf
fcomi
aam
jnp
mov
sbb
das
pop
xchg
jnp
or
scas
icebp
fdivs
mov
sub
xorb
fdivrl
adc
cmp
xor
add
mov
push
cli
jo
cli
sub
or
push
daa
test
shr
jnp
imull
sub
cli
xor
mov
push
push
mov
mov
lods
dec
adc
inc
loope
inc
insl
adc
push
idivl
xchg
pop
mov
mov
sarl
inc
jnp
out
lods
mov
adc
divb
and
ss
or
int
test
pop
enter
mov
ja
cmp
or
std
repz
cs
dec
pop
jmp
jnp
fwait
sahf
jge
outsb
mov
dec
test
sub
cmpsb
mov
lahf
sub
lcall
test
dec
mov
mov
ds
pop
or
mov
xchg
ss
cmp
mov
jne
jb
push
jnp
repz
or
cmp
jae
mov
push
mov
sub
jnp
xor
nop
cmp
iret
jno
jb
es
loopne
push
in
imul
pop
inc
je
xor
shrl
or
and
pop
dec
or
clc
cmp
fdivs
sbb
add
sub
cmpl
jno
xor
cmp
in
mov
xor
add
jbe
dec
dec
cltd
jnp
movsl
rcll
enter
mov
jmp
jnp
testb
rcrl
das
adc
add
jae
hlt
mov
push
int
loop
std
jno
dec
xor
jnp
sub
stc
mov
nop
jae
dec
divl
movsl
push
mov
cld
mov
test
adc
cmpb
or
pop
fisubl
testl
pop
in
loopne
mov
cmp
fdivrs
mov
mov
jns
call
pop
sub
push
inc
mov
in
push
sub
call
jnp
mov
jnp
js
out
cmp
cmpsl
cmp
cli
out
xor
adc
pop
xor
cmp
repnz
sbb
call
imull
push
sti
dec
jnp
cmp
mov
flds
mov
pop
orl
ljmp
or
js
cld
adc
jnp
fcmovu
mov
mov
sub
cmp
and
xor
mov
lods
cs
add
lahf
dec
cmp
push
fildl
jle
sar
add
mov
aam
xor
loopne
jnp
inc
pop
xlat
cmp
mov
pop
sbb
ja
xor
add
imul
or
in
jno
adc
xor
sub
jnp
dec
or
push
mov
xchg
shlb
dec
iret
jnp
aas
pop
cli
jecxz
cmp
sbb
cmp
fwait
xor
pop
mov
repnz
stos
jne
push
fistl
outsl
mov
lods
xor
in
mov
repz
inc
mov
mov
add
fs
jnp
xchg
es
imul
or
mov
jmp
xor
repnz
and
adc
jl
imul
jnp
cmpsb
cmp
xor
mov
lds
call
js
loope
mov
mov
add
in
sbb
clc
adc
inc
das
jns
cmp
insb
jge
inc
xor
fsubl
out
push
rcr
dec
stc
jns
dec
mov
imulb
mov
popf
pop
jnp
ljmp
test
cs
stos
mov
xchg
jnp
sbb
xor
sub
jg
les
sub
dec
loopne
adc
dec
fsubr
cmp
mov
enter
mov
scas
jb
popf
jnp
mov
dec
sub
sub
jge
adc
jne
pop
sub
and
sahf
sub
sti
or
jmp
arpl
addr16
mov
xchg
out
aam
jnp
pop
jns
test
push
rcll
scas
cwtl
hlt
xor
fadds
dec
cld
jnp
sub
pop
jnp
xor
mov
call
out
lret
adcl
mov
xchg
lret
pop
sbb
in
jnp
mov
fadds
inc
imul
push
insb
pop
scas
jnp
mov
hlt
mov
cmp
in
insb
lock
cmp
inc
xlat
in
imul
sti
push
xchg
push
mov
mov
movsl
push
testb
sub
jo
pop
fidivrl
loop
mov
and
mov
sti
sbb
js
rcrl
mov
negb
das
sub
hlt
dec
fcomps
lods
cmp
outsl
cmp
mov
mov
or
cmovnp
mov
popf
mov
aad
out
aam
fcomps
fwait
cmp
fistps
test
and
sbb
outsl
nop
xchg
clc
pop
ja
fwait
or
stos
push
xlat
push
in
ss
push
jnp
das
mov
enter
pop
pop
repz
mov
cltd
cmp
push
mov
mov
xchg
inc
popa
jae
sbb
hlt
mov
push
xchg
in
jnp
scas
in
movsb
xor
cmp
outsl
cmp
push
pop
jb
dec
mov
inc
fsubr
mov
jnp
clc
enter
push
adc
test
xchg
daa
neg
jp
push
pop
jae
in
push
popf
fdivr
lods
jecxz
sub
nop
jo
mov
dec
push
fimull
mov
xor
fidivrs
or
ss
jnp
loopne
sti
pop
xor
xchg
adc
pop
sub
cwtl
sub
outsl
or
fistl
es
js
push
sti
jecxz
in
mov
mov
ljmp
sub
inc
mov
cmp
jge
xor
dec
sarb
cld
test
or
jae
xchg
cli
jnp
jae
mov
loop
cld
test
mov
mov
xchg
rorl
mov
xor
xor
mov
divl
cmp
cmp
movsb
scas
cltd
sub
mov
mov
mov
pop
iret
sbb
in
jp
fdivs
jno
jo
sbb
xchg
dec
xor
jnp
jge
fdivl
rep
js
jno
xchg
xor
cmp
xlat
or
sub
ja
ss
xor
movsl
fidivs
mov
jnp
jbe
cmp
addr16
neg
dec
mov
and
push
jo
xchg
dec
stos
and
insb
sti
xor
pop
jbe
scas
sbb
sbb
aaa
mov
mov
jnp
inc
in
das
mov
subb
imul
mov
jp
dec
sub
mov
imul
sub
mov
mov
pop
ds
jmp
fldl2e
outsl
jnp
mov
stc
jb
pop
ret
fbstp
xchg
fs
jnp
loop
jno
sub
bound
xor
pop
add
stc
mov
aaa
aam
jnp
popl
pop
cmp
jbe
jnp
dec
xor
jae
sbb
jo
aaa
mov
jnp
scas
clc
imulb
stos
fistpll
xchg
stos
sub
ss
repnz
push
jmp
xchg
imul
adc
xor
aad
stos
dec
and
mov
xlat
test
fistl
or
iret
out
sbb
jmp
sarb
aaa
push
mov
bnd
mov
xor
jp
pop
ret
js
cli
mov
sbb
sub
ljmp
dec
jnp
ret
lahf
and
adc
xchg
leave
adc
jno
push
jnp
shll
in
xchg
and
leave
outsl
testb
loop
das
lcall
ja
hlt
sub
loop
or
pushf
or
bound
jg
in
movsl
inc
int3
cld
sbb
enter
mov
mov
pop
inc
shlb
jle
or
cld
push
pop
add
fsubr
push
xor
imul
aas
or
enter
mov
mov
sub
cmc
cs
push
aas
xor
cmp
fwait
jnp
jmp
or
push
repz
jnp
jecxz
or
sub
fmuls
push
add
imul
dec
rorl
mov
lahf
stc
jl
add
orb
mov
or
cmp
fnsave
sbb
out
in
stc
jg
shll
lret
test
and
lgs
jae
enter
in
imul
das
sub
jns
cmp
sub
jne
les
sub
jbe
out
sbb
ja
jnp
xchg
nop
test
jnp
hlt
daa
aad
pop
sbb
lret
scas
fnstsw
repnz
outsb
jnp
mov
jne
fs
add
and
int3
mov
inc
jnp
pop
cs
jge
mov
jnp
std
cmp
arpl
adc
fistpll
fucomi
push
mov
xchg
scas
jnp
cmp
pop
out
inc
aaa
mov
inc
or
mov
frstor
stos
and
sti
and
mov
sbb
stc
ds
bnd
test
scas
imul
int3
push
dec
jne
bound
mov
xorb
jnp
out
and
loop
xchg
call
inc
ds
imul
or
les
xor
mov
jnp
je
push
push
mov
pop
add
push
movups
jnp
lret
cwtl
pop
sbb
sub
xchg
cld
pop
loope
pop
andl
aaa
jnp
adc
test
jnp
hlt
mov
orl
sbb
aaa
jnp
dec
inc
sub
iret
rclb
mov
or
ss
stos
and
push
stc
and
sub
or
add
cld
push
jge
movsb
jnp
daa
sub
push
cmp
pop
jnp
out
sbb
mov
add
jns
pop
and
cmp
in
sahf
cmpl
neg
sub
xchg
cltd
cs
xor
lret
rorl
sub
lret
and
xchg
jae
pop
mov
push
idivb
jne
push
imul
push
aam
movsb
cmpsb
jnp
fwait
cmp
cmpsl
popf
push
mov
xor
scas
aam
ja
xchg
subb
jnp
cmp
pop
mov
mov
push
out
jnp
clc
mov
jge
ror
push
imul
adc
jae
insb
out
jnp
push
popf
sarl
mov
lods
and
lods
aam
and
jne
cld
jp
or
ret
push
cmpsb
xchg
jne
mov
cmp
mov
inc
sbb
xchg
loop
cmp
ss
ret
das
mov
jnp
xlat
gs
jnp
lods
test
fistpll
mov
shlb
cmp
popa
jnp
xchg
mov
mov
mov
adc
pop
outsl
sub
push
cwtl
jnp
dec
movsb
dec
mov
mov
pushf
xchg
mov
imul
sahf
pop
or
mov
pop
jae
scas
lods
push
imul
std
stc
out
xchg
jae
xlat
aaa
jecxz
or
rcll
outsl
rclb
popa
je
and
cmp
adc
jp
pop
mov
jge
jnp
daa
out
dec
or
mov
inc
aas
js
sbb
ljmp
imul
mov
ss
mov
cmpsl
pusha
sti
xor
ret
add
sub
adc
in
push
jnp
cmpsb
mov
loope
and
mov
std
or
popa
pop
arpl
or
ret
aam
dec
or
jns
jg
mov
pop
sub
jo
or
dec
arpl
cltd
dec
pushf
addr16
xchg
adc
cmpsl
in
cli
dec
jae
clc
loop
jae
mov
cli
negb
ja
repz
sbb
xor
out
add
outsb
jnp
int3
pop
fbld
push
outsb
int
adc
movsb
add
cmp
jne
lods
xor
jnp
int
xchg
and
and
rol
mov
jae
sub
fwait
aam
jnp
xchg
ficompl
cmp
lods
jmp
sbb
jnp
in
insb
scas
push
sbb
clc
add
imul
push
and
scas
xchg
pop
pop
dec
test
jbe
adc
pop
adc
js
je
repnz
jle
fisubrl
mov
int
insb
pop
mov
cmpsl
fnsave
mov
test
gs
jnp
or
pop
jbe
ffree
sub
cmp
push
pop
dec
data16
insl
dec
movsb
stos
imul
lods
pop
sbb
add
xchg
inc
dec
xor
mov
pop
jnp
jb
mov
jnp
bts
xchg
or
outsl
ljmp
loop
sub
es
mov
mov
mov
aas
je
sahf
jo
out
ret
outsb
cmc
cmpsb
push
jnp
enter
ljmp
mov
inc
adc
fucom
mov
sbb
mov
jmp
xchg
imul
cli
cmc
or
cli
ret
sti
pop
scas
stc
iret
popa
mull
into
mov
jle
sti
mov
sti
jns
xor
cmp
mov
and
add
inc
add
jne
mov
in
jno
mov
inc
sti
fucom
xor
daa
cmc
test
xlat
imul
xor
insb
push
adc
js
test
xor
add
sub
cmc
add
jae
in
loope
mov
pusha
mov
repz
aas
mov
in
daa
int3
nop
arpl
xchg
inc
enter
movsb
xor
dec
mov
inc
outsl
popa
xchg
cmp
pop
sbbl
push
xchg
mov
std
push
jnp
pop
stos
cmp
mov
sbb
dec
or
rcrl
cli
pushf
jge
sbb
mov
cmpsb
jns
push
dec
pop
sbb
mov
insb
cmp
mov
pop
loopne
inc
lock
xchg
inc
jnp
mov
dec
outsb
inc
jo
jnp
and
mov
in
and
mov
call
jne
imul
fdivrp
push
mov
js
jnp
dec
jne
inc
xor
jnp
mov
push
arpl
je
out
mov
hlt
imulb
jnp,pt
mov
push
cmp
mov
daa
and
xchg
int3
pop
lret
aad
pushf
add
cs
roll
jnp
mov
lock
in
pop
mov
nop
xor
jnp
cmp
inc
mov
into
test
push
xlat
push
jnp
stos
mov
repz
adc
jle
mov
out
sbb
or
in
and
mov
cmp
sbb
dec
outsl
loopne
rcl
cwtl
dec
leave
rcrl
dec
insb
add
clc
push
jnp
fsubr
popf
jle
jg
pop
js
jbe
dec
jb
sbb
jnp
push
iret
scas
mov
sub
lea
cmp
mov
cmp
mov
mov
scas
ja,pt
lcall
outsl
jnp
popf
mov
adc
add
jnp
scas
xor
mov
cmp
xchg
ret
mov
inc
dec
mov
cmpl
mov
int3
fsubr
lods
jae
inc
pop
cltd
add
inc
sub
aas
xchg
push
push
pop
xor
shll
sarb
push
mov
aam
or
adc
gs
cmp
in
ljmp
inc
pop
and
lahf
or
ja
sbb
jnp
or
cmpsl
jnp
test
pop
jnp
lcall
cmp
fistpll
inc
dec
mov
fdivrs
jecxz
scas
fwait
and
pop
mov
sbb
ds
sub
xor
jb
int
push
mov
rep
mov
mov
jo
xchg
test
lods
jnp
push
addb
scas
mov
ret
cld
clc
loope
sarb
scas
cmp
jl
outsb
dec
popa
mov
iret
jnp
pop
out
inc
mov
stos
mov
sub
jnp
movsl
popf
pop
mov
cmp
mov
xchg
push
in
mov
movsb
scas
out
jno
adc
rolb
jnp
jmp
cmp
jnp
xchg
lcall
pushf
lahf
in
pop
sarb
fidivs
jnp
add
xchg
xor
test
sbb
sbb
mov
mov
int
shr
push
or
pushf
sar
shll
jnp
adc
imul
xor
mov
idivb
sub
mov
pop
fbstp
cld
das
inc
int3
sbb
frstor
cmpsl
xor
xchg
jnp
ss
ret
les
cmp
test
and
outsl
xlat
push
and
sub
scas
mov
vpaddd
movsl
push
add
sarb
inc
scas
sar
mov
push
jnp
addb
cmp
dec
or
inc
outsb
jae
xlat
mov
leave
in
sub
adc
aad
or
mov
jae
sbb
fbld
insb
rcr
nop
inc
mov
mov
je
push
lods
or
sub
xchg
jnp
dec
mov
lea
lock
jno
insb
dec
dec
jnp
and
jecxz
sub
jae
sbb
subl
sbb
daa
jae
rclb
jne
fsubs
subb
test
jno
cmp
in
outsl
jb
jns
sub
not
jnp
pushf
mov
mov
cmp
xor
dec
sub
sbb
out
in
add
jnp
add
fsts
sub
shrb
mov
push
data16
aaa
jae
sbb
lds
jle
mov
lret
adc
hlt
sub
fsubs
jnp
mov
mov
sbb
jae
or
xchg
cmc
mov
dec
pop
pop
ret
jbe
dec
mull
insl
push
arpl
jnp
jp
pop
clc
jae
jo
dec
cld
outsl
jns
xlat
jecxz
inc
lods
cmp
cmc
or
jno
clc
jnp
xchg
cmp
mov
mov
ret
divb
test
jne
jae
in
pop
xlat
xchg
ss
cli
jnp
inc
test
jnp
pop
leave
fldcw
jbe
jnp
xchg
jae
out
stc
xchg
js
ss
test
fsubrs
jae
push
or
out
mov
cltd
cld
add
dec
hlt
fmull
pop
mov
sbb
pop
push
dec
jne
fdivrs
sub
cli
and
aad
mov
arpl
add
lds
pop
and
mov
ss
insb
cli
mov
insb
cmp
xor
stos
ljmp
enter
and
repz
mov
cmp
mov
daa
ficomps
je
shrb
mov
jnp
fadds
cs
xor
cmp
outsb
jne
mov
xor
dec
repnz
lock
push
jl
push
jae
add
xor
ss
push
sub
mov
lret
cmc
aaa
les
insl
imul
mov
or
idiv
insl
push
stos
mov
dec
mov
fdivrs
sbb
mov
xchg
test
push
xor
fsubrs
xor
or
dec
jnp
dec
mov
mov
pop
mov
daa
je
stos
xor
fincstp
hlt
xchg
stc
and
insb
insl
rclb
lods
sub
xor
sub
xor
mov
pop
xchg
and
stos
ja
push
jns
insl
ja
sti
jbe
adc
mov
int
clc
jp,pn
sub
repnz
dec
add
mov
mov
bnd
sub
mov
testl
fisubrl
cmovnp
sbb
mov
or
lret
jmp
sub
fldt
or
jae
std
jp
ss
mov
push
insl
xor
mov
mov
xor
sub
mov
cmp
jb
dec
cli
fdiv
lea
mov
sub
sub
fs
mov
jb
test
mov
xor
cli
xor
icebp
cmp
je
sbbb
daa
sahf
sub
jnp
fimull
sti
jnp
test
sub
fcompl
fnstenv
cli
stos
insl
mov
out
jnp
pop
push
sti
mov
ficoml
cmp
aaa
lahf
outsl
imul
sub
imul
mov
divl
xchg
or
loop
inc
cmp
fidivs
pop
lret
sbb
and
sub
inc
jns
push
cmp
xor
sbb
stos
ret
f2xm1
push
add
enter
int
lods
int
hlt
or
shlb
jb
xchg
xor
imul
push
and
jnp
mov
mov
or
bound
sub
adcb
cmp
add
test
incb
mull
mov
dec
jns
outsl
sbb
jnp
int
pop
sub
pop
add
jmp
sarb
jnp
add
sbb
sti
pop
js
inc
leave
inc
mov
aas
push
inc
cmp
cmp
lcall
sti
jmp
mov
std
inc
insb
fsubrl
mov
or
aaa
cli
jns
mov
test
xor
daa
add
push
jge
push
push
jae
jmp
lock
or
mov
insl
shlb
jp
and
mov
sarl
gs
xor
mov
jae
xchg
mov
outsl
sbb
fwait
ja
test
mov
mov
fildll
mov
negb
mov
iret
mov
pop
mov
imul
xor
jnp
lods
mov
add
add
negb
add
outsl
jg
arpl
or
push
outsl
addr16
pop
xchg
dec
jnp
or
jge
cli
or
sub
out
loop
aad
dec
mov
mov
iret
jmp
mov
sbb
xchg
sti
mov
jo
repz
out
jnp
lods
sbb
mov
ss
push
dec
dec
jnp
ja
rcrb
mov
jbe
mov
jge
mov
outsl
xor
pop
sub
mov
jnp
mov
cmpsb
orb
mov
cltd
xor
sbb
mov
adc
push
mov
and
xor
js
movsb
pusha
sbb
ss
sub
push
lods
inc
inc
lahf
xchg
pop
dec
inc
cltd
jge
ds
dec
mov
add
sub
lock
scas
push
mov
and
jae
cmp
outsb
lahf
mov
push
sub
scas
xchg
jnp
clc
sbb
mov
rorb
out
sbb
push
xor
ds
outsl
aaa
mov
jmp
mov
ror
mov
add
popa
lcall
jge
sbb
push
inc
jnp
repz
sbb
cmp
push
jae
pop
pop
mov
stc
jnp
inc
mov
push
ret
clc
add
lret
int3
imul
jg
repnz
jne
out
call
fnstenv
es
mov
jbe
outsb
out
mov
sbb
push
fldt
or
add
idivl
xchg
jo
xchg
push
pop
in
fwait
and
push
sbb
mov
mov
lcall
adc
int3
int
and
movsl
sub
and
jnp
or
subb
dec
adc
sbb
xor
jp
or
mov
and
repz
jmp
mov
xchg
mov
or
imul
xor
pushf
adc
xor
dec
insl
repz
dec
jnp
mov
xlat
icebp
dec
arpl
scas
cmp
mov
in
inc
imul
subl
jl
jnp
push
cmpsb
in
jp
pop
or
xor
sbb
aad
and
add
cmp
and
cmp
call
int
jnp
imul
pop
or
adc
inc
out
stos
sti
lea
mov
cs
or
dec
arpl
mov
add
jbe
sbb
pop
jae
aaa
in
dec
mov
jo
jnp
scas
dec
sub
mov
mov
lods
in
subl
sti
out
aad
sbb
shlb
aas
test
arpl
js
cmp
mov
js
repnz
pop
daa
jae
xor
scas
jnp
pop
add
push
sub
jb
push
cwtl
aam
jnp
cs
inc
out
sbb
jnp
hlt
cmp
dec
mov
adc
cmc
inc
aad
je
dec
mov
xor
test
xor
jbe
sbb
imulb
add
mov
enter
cmpb
sbb
fsub
jg
dec
int
stos
mov
mul
aas
xlat
stos
repz
call
loop
jnp
xor
in
xchg
dec
push
inc
mov
outsb
jae
xchg
cmp
inc
mov
sti
or
and
out
dec
push
pop
or
outsb
std
in
out
hlt
sarb
xor
call
imul
aam
outsb
xor
xchg
sub
jbe
cmc
pushf
sub
lock
and
ljmp
and
scas
fwait
sub
xor
adc
mov
xlat
mov
or
cli
and
push
les
ljmp
imul
hlt
xchg
xchg
aad
cmp
sub
pop
adc
test
ret
ja
shrl
scas
xor
insb
sbb
xor
jnp
sbbl
jnp
pop
shll
inc
inc
hlt
data16
stos
aaa
clc
cmpsb
mov
inc
lret
cltd
jae
imul
outsb
aam
cmpsl
jae
test
xor
or
or
cmp
or
mov
dec
leave
pop
out
pop
pop
and
sbb
into
mov
jp
stc
sub
lret
test
fwait
or
or
dec
mov
mov
push
jnp
repz
sbb
leave
cmpsb
lret
mov
jb
fistpl
add
cwtl
mov
jnp
mov
jmp
aam
jno
negl
or
sub
scas
cmpsl
lcall
out
leave
adc
lret
jnp
in
fsubs
scas
imul
flds
fwait
xchg
mov
mov
mov
movsb
sub
negl
int
push
dec
fidivrl
cmp
rorb
fwait
loopne
jns
sahf
adc
fimull
add
xchg
mov
mov
hlt
jnp
mov
ret
xor
cld
add
jecxz
lret
pop
imul
leave
fsubl
cmp
fadds
jae
jbe
clc
imulb
popf
sub
xor
adc
inc
or
pop
gs
cli
jbe
cwtl
adc
sbb
sub
cmpsb
inc
js
int3
jnp
loopne
mov
push
mov
or
cmp
nop
cli
xor
arpl
aad
outsb
fsubs
mov
pop
mov
push
xchg
jnp
dec
lods
in
mov
mov
lret
adc
repnz
orb
xchg
stc
js
jo
cltd
dec
jne
push
mov
mov
adc
sbb
popf
inc
pop
ficoms
xchg
fsubrs
mov
jnp
test
in
imull
clc
jnp
sahf
and
xlat
jnp
loop
mov
sub
mov
ret
outsl
test
jo
enter
cld
insb
jns
pop
es
mov
cli
and
pop
cmp
jbe
mov
repz
cmp
and
sub
rorl
idiv
xor
jae
sti
hlt
movaps
outsb
fs
mov
sub
mov
out
mov
inc
lds
add
push
jae
mov
pop
jecxz
repz
dec
xor
lock
je
lcall
cli
xor
xor
jp
je
or
mov
test
jnp
adc
clc
movsb
imul
movsl
dec
sbb
hlt
dec
or
or
inc
mov
jnp
xor
mov
sub
cmpsb
cli
ja
in
cmpsl
enter
inc
out
mov
xor
xchg
lcall
fdivrs
mov
sub
imul
push
sbb
cmc
sub
aaa
pop
addr16
outsl
addr16
jne
xor
lock
popa
add
jno
xorl
cmpsb
sbb
jnp
cmpsl
loop
bound
stos
xlat
dec
inc
das
ja
mov
sub
mov
stos
and
cmpsb
icebp
lods
sbb
jo
cmp
or
cmp
cli
imul
ficoml
xchg
lcall
and
jg
push
mov
jae
cmp
scas
xor
xorl
subb
imul
and
ret
insb
mov
jnp
mov
mov
jo
notb
or
dec
out
adc
dec
dec
shll
pop
loopne
pop
lret
jns
ds
pop
scas
loope
movsb
stc
jns
shrl
fs
pop
jnp
clc
fcom
out
lea
fwait
test
stos
shrl
into
and
sub
imul
bound
cmpsl
cwtl
jge
dec
idivl
loop
cs
stos
pop
sub
mov
inc
sub
sahf
xlat
subl
push
or
imul
sub
push
jnp
xor
cli
pop
stos
mov
push
ficoml
xor
xor
insl
pop
or
pop
xchg
outsl
mov
or
push
movb
sahf
jnp
mov
in
mov
loopne
mov
adc
aaa
das
jnp
sbbb
enter
cmp
bnd
cmp
mov
jno
int3
fs
cmpsb
mov
add
sub
in
cmp
cmpsl
call
jnp
mov
daa
cmp
adc
mov
stc
xor
xchg
cli
xorl
mov
mov
mov
xchg
push
sub
mov
je
xchg
inc
push
jno
fstpt
cmp
jnp
pop
pusha
push
jmp
sub
into
out
ljmp
jecxz
xchg
dec
mov
insl
xchg
and
cmp
shlb
xor
shlb
sub
push
and
mov
sub
bound
pop
icebp
ficoml
xor
and
repnz
cmp
test
jnp
pop
iret
xlat
fstpt
sbb
divl
sbb
fs
inc
jno
divb
pop
dec
push
stos
aaa
adc
pushf
jl
jnp
sub
mov
das
cli
stos
jmp
ljmp
xchg
lock
test
jnp
maskmovq
imull
mov
push
sub
jae
test
test
jo
inc
fwait
xchg
popf
inc
xchg
mov
addr16
pusha
dec
jno
outsl
and
je
pushf
insl
sub
imul
xchg
in
sbbb
ficoms
in
in
or
je
dec
mov
out
into
sub
jnp
adc
ret
xchg
xor
xor
dec
sbb
cmpsb
idivb
and
je
leave
les
insl
inc
lcall
mov
pop
icebp
pop
lock
gs
div
dec
out
jnp
mov
adc
jbe
out
fnstenv
mov
outsl
dec
cmp
jnp
ljmp
repnz
sti
out
mov
pop
pop
push
in
rcl
imul
inc
aas
add
jnp
sbb
inc
or
or
lret
pop
pop
push
jnp
dec
repz
or
pop
je
rcrl
repnz
jnp
mov
jns
mov
xlat
pop
sub
int3
push
stc
sbb
or
repz
mov
jnp
das
out
cmpsb
sub
pop
cmp
shlb
jno
mov
scas
ja
in
mov
sti
jae
jns
int
movsl
jnp
jp
and
lods
jbe
out
xchg
clc
pop
pop
imul
dec
adc
pop
lods
cmc
jnp
mov
in
mov
pop
pop
fildl
cwtl
pop
ds
scas
divb
xchg
clc
jmp
int
imul
push
cmp
xlat
sbb
jnp
jecxz
pop
add
jge
filds
xchg
cwtl
jnp
aam
lret
add
jb
jo
jnp
les
rcrb
sub
xor
mov
fimuls
aam
pop
mulb
push
adc
cmpsl
jnp
js
jp
daa
dec
mov
aas
jo
pop
repz
lds
aaa
push
mov
inc
dec
mov
testl
scas
sahf
xor
jae
mov
jnp
call
sbb
dec
dec
mov
jnp
pop
js
mov
pop
sbb
jnp,pt
test
dec
pop
or
inc
imull
jae
nop
into
sub
cmp
jp
pop
or
repnz
in
hlt
sarb
jge
mov
lods
jnp
xor
adc
in
push
or
icebp
mov
mov
pop
or
mov
push
mov
pop
divb
hlt
mov
xor
jbe
add
inc
pop
dec
jae
xchg
xchg
sbb
jnp
lods
cmp
jae
jns
mov
mov
lcall
jne
push
push
stos
jae
add
adc
cmpsb
jae
xchg
dec
data16
pop
jbe
mov
js
sbb
mov
pop
xor
mov
js
push
mov
jnp
repz
rcll
shlb
jnp
jbe
push
call
sub
xor
sub
and
cmc
fdivs
mov
jnp
add
ja
pop
test
or
jo
push
jae
cmp
jne
jnp
inc
push
ja
aad
test
jbe
inc
cmp
sbb
jnp
daa
and
cmc
adc
xor
aaa
fistl
aam
jp
iret
jnp
xchg
mov
adc
notl
fnstcw
mov
jnp
jmp
cmp
xchg
cmp
icebp
lret
cmpsl
sbb
loopne
outsl
xor
ss
inc
sub
xor
jnp
repz
sbb
xchg
scas
dec
lahf
les
dec
fsubl
jnp
lock
fidivs
jnp
pop
pop
ljmp
mov
js
pop
cmp
mov
or
jbe
repz
mov
hlt
dec
mov
jnp
lahf
push
xor
std
dec
bound
outsl
je
jle
push
cwtl
xor
clc
pushf
fistpl
pop
scas
scas
and
jnp
ss
jnp
jbe
popf
inc
leave
pop
or
lret
cmp
lcall
push
xor
pop
aad
sarl
cld
cmp
jo
xchg
ja
sub
dec
xchg
mov
pop
jo
cmp
ss
jmp
repz
pop
cld
in
or
clc
sub
mov
sbb
daa
sbb
sub
jnp
es
mov
scas
fistl
mov
jae
clc
fidivs
xor
sbb
sub
les
outsl
jb
xchg
das
inc
jbe
ljmp
leave
pop
fisttpl
xor
out
sbb
es
mov
sub
scas
repz
jmp
pusha
sbb
jnp
lock
xchg
cmpsl
sbb
cli
icebp
dec
jns
cmp
mov
movsb
mov
dec
mull
jnp
mov
adc
and
sub
jne
aam
xchg
imul
push
mov
jg
jnp
stc
iret
aam
pop
int3
xor
fdivl
dec
jnp
cmp
daa
divl
dec
pop
cmpsb
xchg
mov
xor
mov
mov
ficomps
or
aam
mov
sbb
jnp
push
jmp
sub
aaa
mov
jmp
mov
mov
stos
xchg
out
xchg
lock
mov
testl
inc
pop
pop
call
xchg
sbb
mov
push
xchg
mov
sub
in
ficoml
jnp
add
push
jnp
dec
clc
xchg
jmp
push
mov
xor
jp
jnp
je
jbe
sti
in
or
xchg
lods
mov
sarl
mov
dec
push
and
sahf
stos
push
jb
repz
out
mov
jb
stc
pop
xor
sbb
bound
or
push
adc
jecxz
ficoml
adc
jnp
jbe
cltd
mov
fs
lcall
xchg
or
lret
jne
sbb
popf
imulb
sub
es
cmpsb
pop
xchg
pop
ja
adc
out
dec
or
push
jbe
cmp
jnp
add
ss
ret
stos
ds
arpl
dec
add
inc
jnp
lods
ret
or
sub
fs
mov
inc
rcr
xchg
imul
cmp
pop
mov
sbb
icebp
cltd
push
dec
les
and
jnp
push
add
jmp
iret
jnp
aaa
mov
push
or
inc
ljmp
jnp
inc
jecxz
std
int3
mov
mov
sahf
mov
pop
mov
or
dec
stos
icebp
sbb
clc
pushf
mov
cmp
ret
sbb
or
arpl
stos
mov
inc
inc
out
xor
mov
jae
dec
imul
mov
ds
in
lahf
xchg
xchg
arpl
jecxz
nop
lcall
dec
sub
xor
insb
mov
aaa
dec
add
out
in
cmpsb
mov
jnp
jbe
pcmpeqw
jae
push
imul
inc
sub
pop
mov
ljmp
jnp
daa
adc
jnp
xchg
jae
mov
mov
subb
inc
in
mov
cld
aas
mov
mov
jne
dec
imul
pop
xor
fistpll
xor
inc
xchg
cwtl
lret
sbb
int
sbbb
dec
jb
and
push
sub
cmp
imul
pop
outsb
fdivrs
lret
sbb
jge
call
outsb
dec
test
adc
jb
clc
jnp
inc
push
inc
in
sbb
imul
mov
sahf
jmp
in
xchg
jae
inc
mov
mov
incb
mov
mov
adc
cltd
fs
inc
pop
jns
jnp
mov
mov
imul
test
mov
jnp
movsb
sub
jnp
sub
jmp
movl
repz
push
jo
pop
and
cmp
lret
call
jmp
add
pop
dec
nop
into
testl
call
lret
jb
bound
or
push
mov
ljmp
in
das
xor
ficoml
es
mov
pop
int3
lret
mov
call
and
scas
lcall
repnz
push
jnp
or
add
fs
cmp
sbb
lods
popf
ret
cltd
test
add
imul
pop
push
fimuls
cmp
insl
dec
es
imul
stos
jnp
ret
fdivr
test
sub
fimuls
jnp
xlat
popa
push
hlt
mov
pop
enter
sbb
push
sub
jnp
mov
cmp
loopne
xchg
sbb
aas
divl
inc
xchg
daa
pop
xchg
gs
arpl
dec
jmp
sarb
or
jnp
push
das
sbb
xor
jnp
outsb
rcr
lods
daa
mov
pop
mov
jle
jmp
fidivl
jnp
outsb
pop
jg
fldt
or
lods
mov
jl
or
jnp
mov
inc
push
jno
cmp
cmp
dec
mov
jmp
cld
mov
mov
fstpl
int
imul
mov
icebp
js
xchg
dec
cmp
sub
loope
fstpt
mov
imul
mov
lea
loopne
repnz
call
in
xor
sbb
jge
cmp
sub
aaa
iret
and
scas
aaa
mov
lahf
outsl
jg
jae
ds
repz
xor
cmp
sub
jb
cmpsb
outsl
fs
rol
ret
out
mov
jo
pop
orl
mov
mov
push
xchg
insb
xchg
fstp
aas
jnp
movsl
sbb
add
fists
lock
dec
jecxz
jae
xor
xchg
popf
jne
imul
stos
pushf
pop
out
clc
lret
jnp
and
bound
dec
data16
fsubrs
repnz
jg
or
cmpsb
js
push
adc
add
ds
shrl
test
mov
jnp
in
inc
hlt
mov
int
jno
pop
outsl
pop
push
jmp
leave
xor
mov
sub
jg
sub
clc
call
in
xor
jl
es
scas
repnz
cmp
lret
lcall
imul
mov
arpl
pusha
cli
push
in
xchg
test
test
lret
ljmp
sub
aas
rol
insl
mov
ss
jnp
cmp
jae
ficompl
das
nop
mov
xor
mov
idiv
mov
call
mov
mov
inc
ja
xor
dec
jnp
enter
mov
xor
pop
outsl
dec
jl
movsb
mov
jnp
push
sbb
repnz
mov
fcoms
dec
inc
sub
inc
out
and
sarl
sub
movsl
jo
jb
daa
jl
test
jmp
mov
mov
sub
icebp
mov
push
pushf
je
mov
in
jp
push
or
sub
sbb
pop
lcall
sbb
in
xor
jnp
cmp
stos
divb
mov
cwtl
lret
dec
jnp
xor
aaa
jnp
mov
xor
int
jo
xchg
dec
cmp
mov
scas
jnp
ds
out
paddusb
popf
jnp
add
sahf
adc
mov
aas
jle
mov
hlt
cmp
loope
subl
ss
popa
mov
lds
push
adc
cmp
aaa
inc
into
imul
sub
dec
jne
dec
jnp
sbb
xor
rorl
out
or
sub
pop
rcrb
rorl
sbb
fnsave
les
ss
out
movsb
dec
jnp
into
pop
scas
fbstp
and
mov
xor
stos
xchg
cmp
aaa
es
out
les
in
jnp
movsb
add
sbb
in
in
sub
xor
in
inc
js
mov
jle
cmp
call
and
sbb
xor
int
jnp
dec
aaa
in
scas
cvtpi2ps
jnp
push
cmp
dec
jne
mov
ds
mov
mov
dec
in
cmp
ja
mov
sbb
adc
mov
dec
mov
jae
stos
cmp
jo
test
jnp
jns
jno
lock
jnp
enter
test
stos
repnz
in
sub
jmp
sub
sub
or
pop
jno
cmp
popf
mov
mov
cmp
cmpsl
popf
cmp
imul
ljmp
in
xchg
xorb
or
jnp
icebp
sbb
xchg
xor
or
scas
cli
sti
ss
movsb
add
dec
mov
and
gs
mov
push
lahf
cmc
data16
adc
cli
movsb
imulb
mov
enter
mov
loop
ss
add
dec
mov
call
jecxz
lods
jge
inc
mov
mov
cli
sbb
sub
cmc
lock
scas
nop
and
hlt
jo
addr16
mov
jnp
xorl
popf
push
mov
nop
jbe
fnstsw
insl
dec
sti
xchg
mov
jge
dec
aas
add
pop
mov
ja
ret
pop
inc
push
xor
int
sbb
mov
jnp
mov
add
aas
je
push
xor
dec
int3
sub
lock
out
sti
in
dec
adc
loopne
xor
jne
cmp
call
push
movsb
daa
cmpsl
div
mov
or
addr16
jmp
dec
je
cmc
ret
dec
daa
pushf
in
repz
pop
jo
in
jns
cmp
fcompl
jle
ja
je
add
mov
addl
pusha
imul
subb
dec
fistpl
jae
jnp
fcoml
hlt
lock
jge
scas
xchg
loope
repz
test
stc
jnp
sti
mov
jnp
pop
mov
iret
jnp
cmp
xor
fcmovbe
mov
jnp
testb
jo
mov
cmp
cmpsb
inc
push
fistpll
push
jnp
shl
jne
push
dec
jnp
ss
jle
push
push
insb
jnp
lods
xor
adc
sub
xchg
cmp
pop
dec
adc
jnp
daa
xor
stos
das
inc
jnp
pushf
add
aaa
negb
cltd
stc
cli
pushf
jnp
hlt
cmc
inc
in
add
add
inc
mov
cmp
repnz
add
ja
xchg
jnp
push
fiaddl
mov
std
pop
push
cld
and
inc
mov
or
jae
sub
out
in
faddl
imul
or
imul
mov
fcom
icebp
lcall
pop
sub
and
dec
outsl
repnz
lods
pop
xchg
and
mov
aas
jmp
daa
outsb
adc
mov
mov
test
jo
inc
sbb
aas
add
lcall
cmp
clc
pop
xchg
lret
fxch
subl
cli
jecxz
sub
or
icebp
mov
out
sub
subl
jnp
out
push
pop
cmp
jno
sarl
add
jg
insl
in
cltd
inc
push
ret
fdivr
jnp
inc
jl
push
movsb
cmp
imul
push
jae
xchg
fbld
xchg
mov
sbb
lock
and
out
mov
jno
jnp
jae
sub
inc
jnp
cltd
outsl
jge
cli
sbb
jnp
dec
xchg
mov
jnp
jns
cmp
inc
imul
mov
outsl
test
pop
ja
adcb
adc
out
jae
mov
sub
mov
jno
test
jns
and
sub
popa
repnz
sub
xchg
imul
std
xchg
push
xor
inc
mov
add
mov
lock
inc
hlt
jnp
jbe
push
outsl
dec
outsl
xorb
fwait
imul
lcall
lds
mov
dec
arpl
movsb
inc
jnp
cli
int3
lea
jl
push
and
jg
lods
dec
ds
int
push
xor
and
adc
cmp
je
jnp
cld
das
xor
jp
jnp
mov
sub
lret
jnp
rcr
sub
sbb
ss
cmpsb
sub
cmc
xchg
dec
mov
sbb
ja
mov
sub
leave
dec
fldcw
jp
data16
mov
xchg
and
movsb
nop
jnp
push
lret
in
mov
sbb
inc
sbb
xor
outsb
sbb
mov
mov
out
loopne
inc
pop
jg
sub
lret
lcall
ss
scas
je
int3
in
pop
jg
sub
mov
das
fidivrs
fwait
jno
and
das
cmp
or
gs
loopne
dec
and
add
sbb
lea
imulb
xchg
sub
jnp
pop
outsl
out
sbb
jge,pt
and
jb
adc
or
lea
and
xchg
inc
clc
mov
push
add
call
lea
mov
cmp
xor
lcall
jnp
adc
pop
mov
pop
cmpl
jbe
add
jp
insb
jle
ljmp
pop
rcrl
adc
imul
into
xor
clc
repnz
sub
stos
jge
divb
jnp
push
mov
decl
icebp
pop
jnp
paddd
shll
cs
fsubrp
sbb
mov
sahf
out
and
pop
dec
fdivr
xor
mov
xlat
or
mov
jle
jo
divl
add
mov
das
repnz
pop
enter
cmc
int3
sub
pop
jnp
sub
cmpsb
push
negb
push
cmp
jae
xchg
pop
xor
fs
les
je
or
xor
adc
neg
cmpsb
mov
mov
scas
jnp
je
mov
mov
jbe
dec
stos
sub
sbb
pop
pop
xchg
sti
jge
fldenv
or
nop
jno
cmp
int3
and
xor
fdivrs
push
sbb
jmp
jne
shll
sysexit
jnp
or
cmpsl
jnp
ljmp
mov
fistpll
pop
insl
imulb
aam
arpl
cmp
stc
jnp
add
cmp
adc
sahf
aad
faddl
add
push
lds
clc
iret
int
sub
dec
outsb
jnp
sub
jnp
xor
xchg
lods
or
adc
xchg
jnp
addr16
leave
ss
or
loope
lods
xor
push
fcom
push
lcall
jnp
cmp
cltd
xor
xchg
jnp
fcomps
dec
andb
cmp
jnp
jp
into
lea
mov
jnp
jecxz
push
xlat
lret
cmp
sbb
pop
sub
orl
popa
test
push
fidivl
or
fidivrs
rol
push
jnp
push
pop
fmul
inc
sti
fdivs
dec
xor
jnp
ds
xchg
mov
jae
clc
mulb
sub
adc
call
or
lcall
ja
mul
notb
testl
adc
cmp
pop
mov
mov
push
xor
es
sti
ud1
fdivl
mov
lods
pop
jnp
cwtl
subl
xor
dec
dec
jmp
stc
mov
jae
mov
jnp
dec
jae
in
jle
lods
stc
idivl
mov
fs
and
movsl
out
mov
dec
fsubr
int
jbe
insl
adc
mov
sti
mov
add
scas
or
stc
lods
cmp
jecxz
xor
jno
scas
push
cmp
or
sar
lcall
jnp
sar
sub
lock
xchg
push
inc
xor
and
pop
cmp
sub
jmp
out
fwait
jne
mov
aam
fxtract
push
push
imulb
sub
lods
int
jnp
jmp
xor
pop
cmp
jnp
cmp
mov
jp
in
cmp
daa
fs
bound
cmp
pop
mov
leave
cli
or
xchg
divb
cmp
fs
jnp
lret
dec
mov
jmp
imul
imul
mov
jp
push
lock
sti
lcall
mov
pop
pop
mov
inc
fidivrl
outsl
mov
lret
mov
in
jnp
xchg
mov
sbb
push
sbbl
pop
cmc
aas
js
ret
test
test
clc
cmp
add
ja
dec
sub
pop
xchg
ss
dec
push
jne
jo
jnp
sbb
or
fidivs
push
scas
jnp
loop
lret
dec
sti
jnp
mov
push
mov
lcall
jns
xor
sub
cmp
mov
aas
insb
xor
mov
cmp
ficompl
pusha
xchg
outsl
fnsave
fcoms
out
add
jb
jnp
jo
in
mov
ja
fsts
jb
or
fsubs
into
ja
sbb
cmpsb
xor
adc
lods
ret
jp
adc
add
jnp
xor
mov
pop
ljmp
mov
js
scas
insb
nop
mov
jnp
jo
pop
cmpsl
or
sbb
and
jnp
or
push
gs
and
pop
js
repnz
sbb
cmpsb
fnstcw
cwtl
jmp
xor
lock
rcrb
mov
out
clc
aaa
mov
sub
cwtl
jg
xchg
fidivl
lcall
shlb
lret
and
cltd
sbb
pop
sarb
ljmp
jno
sub
inc
add
mov
xchg
mov
insb
cltd
mov
fwait
daa
mov
lcall
jnp
push
or
mov
movsb
adc
aad
out
pop
cmc
mov
enter
jp
aaa
sub
aam
xor
fisubrl
sub
test
mov
push
or
dec
mov
fmuls
and
jnp
mov
ret
loop
sar
repnz
cli
mov
call
sahf
outsl
or
mov
cmpsb
or
cmp
xor
fisttps
mov
in
out
mov
imul
repz
xor
or
jecxz
xor
or
sub
daa
and
jp
sbb
and
sbb
sub
hlt
sub
and
sub
icebp
hlt
sbb
clc
sti
mov
jbe
fwait
jg
mov
mov
jns
pop
mov
sub
add
add
js
or
or
les
jl
mov
sti
movsb
and
or
jno
cwtl
sub
lods
mov
and
fsubrs
subl
lods
jl
jl
jl
cmp
sbb
or
das
fsin
outsb
dec
scas
stc
out
jmp
jno
mov
aad
cmp
jnp
hlt
xchg
cmp
je
adc
in
test
mov
push
icebp
sbb
pop
mov
sbb
or
push
je
ljmp
mov
fwait
dec
and
push
in
cmp
add
jnp
xor
xor
js
imul
enter
mov
dec
js
das
dec
fnstenv
sbb
mov
push
or
mov
jnp
je
inc
aam
xchg
push
sbb
pop
jae
imul
sbb
sub
enter
imul
pop
sarl
into
ss
movsb
testl
loop
fnstsw
mov
imul
aas
insl
repz
ret
mov
dec
jmp
push
pop
repz
add
jnp
int
mov
jp
xlat
lods
cmp
push
sbb
cmp
or
sub
mov
jnp
imul
jp
cmp
mov
jecxz
sbb
sub
dec
sbb
fdivl
push
test
cmp
aam
sbb
lods
sub
loop
xor
jnp
cwtl
mov
outsl
pop
fldcw
ficompl
jp
andl
xor
enter
in
sti
enter
mov
stos
jge
push
jg
cmp
sub
insb
mov
fadds
rep
xchg
outsb
xor
mov
popa
dec
add
xor
cwtl
cmp
insb
mov
cli
xchg
adc
push
jmp
cltd
jg
jne
or
jne
mov
push
jmp
xor
cli
fimull
test
dec
jb
jnp
push
stos
mov
cmp
in
enter
imull
sbb
xor
lcall
mov
ficompl
insl
cmp
add
stc
or
or
sbb
orb
pop
repz
pop
pop
jbe
icebp
xlat
sbb
sub
xchg
jns
imull
jne
imul
outsb
jmp
mov
jae
test
faddp
jae
cld
sub
in
jnp
mov
popf
pop
sub
xor
icebp
out
jmp
push
mov
int
imul
push
jnp
mov
mov
je
pop
sbb
jp
clc
jne
push
xor
repz
sbb
loop
pop
mov
mull
enter
jbe
or
pop
and
pop
mov
js
mov
jnp
into
aaa
xor
push
test
pop
dec
dec
imul
je
fsubrl
push
mov
jae
cmp
rcr
jb
jnp
mov
dec
scas
lret
or
mov
dec
cmp
lret
xor
mov
cmpsl
sbb
push
arpl
jbe
jp
dec
mov
jnp
in
mov
jno
out
stc
xor
jno
sti
sbb
pop
xchg
jnp
cmp
pop
push
and
jnp
sar
mov
push
xchg
mov
or
fnstenv
jae
mov
in
popf
int
pop
xchg
jne
xchg
out
adc
add
ss
movsb
rcrb
push
mov
and
pop
fisubl
je
mov
cmp
add
call
outsl
push
add
dec
and
aad
jmp
stos
outsl
stos
in
adc
cwtl
xchg
xchg
ja
sbb
movsl
fwait
add
sub
dec
adc
push
mov
loope
cwtl
scas
sub
mov
sbb
cld
mov
pop
pop
imul
jne
ficomps
cmp
sbb
push
scas
mov
outsl
xor
add
cli
and
jne
dec
out
lcall
pop
inc
repnz
dec
xorl
mov
repnz
or
imul
subb
scas
jmp
lahf
stc
dec
or
sbb
clc
in
push
fwait
lcall
dec
sti
jmp
xchg
jb
or
in
jb
pop
repz
shrl
stos
add
inc
mov
cmp
ficompl
shll
js
stos
repnz
mov
js
test
xchg
xchg
mov
repz
jp
sbb
mov
scas
mov
js
mov
in
imul
loop
xorl
dec
jae
cmp
outsl
iret
cmp
push
ss
cs
inc
jno
jae
iret
sub
mov
dec
xchg
arpl
push
xor
fnstcw
jbe
das
and
pop
lock
jne
shrb
jnp
cld
sub
jno
cltd
sub
jno
pop
nop
aaa
pop
sbbb
push
test
xlat
jnp
dec
xchg
or
orb
mov
push
xor
mov
xchg
outsl
jb
imul
pushf
popf
mov
xor
adc
fsubl
jp
and
push
xchg
mov
pop
or
mov
sar
jnp
cld
jl
in
cltd
pop
sbb
icebp
jns
adc
dec
call
xchg
repz
jnp
mov
cmp
xorl
cmp
xchg
or
imul
scas
dec
aaa
mov
add
jb
stc
outsl
psubd
fldt
jmp
cld
jnp
stos
movsl
cltd
or
popa
xor
aad
stc
mov
mov
adc
jb
cltd
mov
cs
push
sbb
insl
mov
jnp
into
xor
out
imul
mov
cltd
lods
and
xchg
imul
leave
jnp
js
pop
mov
pavgb
aad
sbbb
mov
in
mov
pop
fwait
push
push
xlat
aaa
iret
sarl
or
pop
push
sub
lahf
mov
scas
cwtl
and
sbb
je
int
pop
jmp
jg
cmp
es
iret
and
cli
fistpl
push
scas
dec
jne
mov
lret
sbb
stos
cltd
mov
loop
jo
mov
jno
cld
dec
or
bnd
mov
insb
pop
rcll
enter
outsl
mov
stos
pop
imul
pop
cli
adc
inc
dec
sub
mov
mov
fnstenv
clc
sbb
sbb
lea
jnp
xor
insl
cld
loop
mov
outsl
fadd
in
insb
fdivl
jecxz
lcall
xchg
jl
lods
mov
mov
adc
and
fsubrl
repnz
imul
xor
ljmp
std
lock
stc
push
test
cmc
shll
adc
sub
fld
sbb
jnp
jmp
cld
int
jnp
add
mov
idivl
sub
mov
repnz
jae
scas
jmp
sbb
xchg
jge
std
mov
int
xchg
jne
popf
cmp
cld
sub
jo
aaa
or
test
cmp
jp
int
fwait
pop
or
mov
je
dec
pop
fcomps
push
fstps
ret
jmp
mov
jne
testb
stos
pop
jp
push
dec
sub
cmp
jns
fdivs
mov
fdivrp
jecxz
jmp
jnp
ss
das
jb
imul
stc
add
adc
dec
cltd
jnp
sbb
mov
addr16
leave
dec
xor
mov
mov
push
mov
push
jl
outsl
imul
dec
lcall
fcomi
inc
pop
or
sti
dec
fwait
lahf
push
dec
jne
imull
in
jae
sbb
les
mov
mov
stos
test
fisttpl
xchg
stos
notl
push
mov
fwait
xchg
scas
mov
mov
push
sbb
inc
imul
idivl
cltd
fisubrl
adc
or
daa
pop
jmp
sub
mov
pop
jae
mov
mov
jno
jp
jo
imul
mov
fs
dec
call
sti
jmp
and
mov
push
jnp
cld
mov
dec
mov
test
sbb
xchg
ss
pop
cmp
js
stc
leave
ljmp
push
lods
or
sub
pushf
jne
xchg
xor
inc
insb
imul
leave
mov
enter
sub
jnp
in
stos
inc
sub
out
inc
push
pop
push
clc
out
mov
mulb
stos
stos
xchg
imul
fucomi
or
jnp
and
mov
stos
jns
pop
cli
imul
adc
or
jmp
aad
es
mov
mov
sti
dec
repz
and
imul
push
clc
dec
je
pop
sbb
push
sub
cmp
or
mov
jp
pop
js
repnz
push
in
xchg
sub
or
cmp
outsl
or
cltd
stos
jmp
sub
aam
scas
scas
jnp
push
mov
jnp
mov
dec
cmpsb
mov
push
cltd
push
sub
inc
mov
lret
ja
movsb
or
cltd
push
jb
repnz
jnp
jp
push
dec
cli
js
push
into
jnp
mov
cmp
out
cld
or
mov
scas
push
mov
pop
or
dec
pop
hlt
cmp
sbb
cltd
cmp
ja
mov
mov
fisubl
lcall
jae
jns
add
or
sahf
push
xor
pop
repnz
dec
lea
jnp
ret
mov
pop
imul
mov
xchg
mov
xchg
jns
lea
xor
lcall
dec
shlb
bound
mov
stos
sbb
ja
int
jp
loopne
sub
jae
fdivs
or
pop
sub
pop
aaa
dec
stos
js
das
stc
sub
jne
mov
sarl
mov
adc
jnp
mov
mov
mov
sbb
scas
sbb
inc
jnp
fdiv
mov
out
outsb
shll
cli
lret
lcall
ljmp
pushf
cmp
jnp
xor
shrb
mov
jp
and
lods
pop
imul
dec
jnp
mov
pop
aam
jnp
bound
ja
mov
sti
push
cmp
or
repnz
mov
pop
jnp
xor
daa
adc
cli
out
jnp
jo
je
lods
jmp
dec
push
sbb
enter
insb
sti
fiaddl
mov
mov
cmp
jnp
mov
jnp
xchg
jmp
pop
insb
mov
lods
xchg
ja
cmpsb
sub
fimull
mov
mov
aaa
lods
pop
aam
or
fstpt
cmc
push
sbb
jnp
mov
cwtl
mov
lcall
jnp
cmp
fcmovnbe
stos
es
leave
hlt
xchg
jno
adc
or
mov
rcll
insb
mov
mov
loop
fldt
aam
dec
mov
mov
pop
mov
pop
mov
scas
xchg
jnp
aad
in
or
jmp
jae
or
or
adc
mov
jnp
cli
mov
lret
mov
shll
push
insl
cmp
clc
in
mov
jnp
xor
lret
sbb
enter
gs
cmp
and
jne
or
rcr
cmp
hlt
insl
fidivl
out
cld
adc
cwtl
outsl
push
ret
push
sub
js
ljmp
mov
mov
clc
xchg
jnp
jno
daa
lcall
sub
or
aad
dec
mov
ret
jnp
aaa
call
lods
ja
je
bnd
addr16
dec
sbb
mov
in
scas
cmp
sub
push
cltd
jbe
ror
sub
mov
lock
sbb
nop
mov
scas
in
jnp
mov
bnd
testl
sbb
mov
and
xor
and
jno
xchg
repnz
pop
jbe
push
jnp
sub
lock
stos
sub
pop
xor
jno
xor
les
call
scas
mov
pop
mov
inc
cmc
lcall
cwtl
jmp
dec
cmp
mov
imul
dec
lods
in
dec
jb
push
cld
lock
sub
add
clc
out
sti
cmpsb
cli
jnp
ss
stos
shrb
xor
mov
movsb
scas
arpl
nop
push
sub
jnp
repnz
xor
rcl
push
xor
cmp
adcb
jnp
cli
jae
sub
ss
jnp
cwtl
cmp
insl
mov
std
inc
cmp
mov
mov
fs
cmp
sub
je
cs
mov
push
xor
mov
jge
pushf
mov
rorl
mov
xor
ss
cmp
mov
cmpsb
outsb
fmull
insb
mov
sbb
jbe
jg
xlat
lock
ret
lcall
mov
iret
je
ljmp
dec
fidivrs
xor
cld
stos
jbe
pop
scas
ss
adc
jnp,pn
dec
lret
pop
push
sbb
sub
sbb
into
jnp
mov
jnp
mov
or
mov
outsl
add
push
fisttpl
fwait
dec
addr16
lock
sbb
outsb
test
ja
dec
sub
pop
jmp
xor
scas
fnsave
xor
adc
int
cmp
js
mov
push
jae
pop
lods
sub
jbe
mov
ss
repnz
lods
xor
mov
rclb
adc
lret
outsl
cs
cmp
mov
ja
leave
xor
js
sbb
jp
dec
jmp
out
mov
xor
scas
shll
jno
cmp
clc
pusha
pop
push
sbb
cwtl
imul
aaa
out
cmp
lods
fimull
sbb
in
stos
jb
xchg
clc
jmp
mov
mov
jnp
rcl
enter
jnp
ss
pop
mov
mov
mov
cli
cmpsl
mov
cmc
inc
mov
mov
jnp
inc
push
dec
lcall
push
outsl
pop
rorl
out
cltd
inc
pop
repz
jnp
aam
mov
xchg
jae
mov
mov
gs
jnp
leave
cmp
frstor
test
xor
jnp
dec
cmp
or
outsl
outsl
rcll
xchg
jae
stc
repz
lock
mov
je
stos
jmp
ljmp
lods
sbb
shrb
mov
jnp
in
imul
ret
mov
inc
jnp
dec
pop
jp
sub
adc
sbb
push
push
jnp
hlt
pop
loop
add
sti
call
dec
scas
imul
jb
push
and
jb
jmp
fwait
and
jmp
shll
jne
push
sub
dec
ja
xor
sub
xlat
ja
in
mov
xchg
cmpl
lret
dec
jnp
mov
dec
roll
stos
or
scas
mov
jo
dec
cli
gs
mov
dec
outsb
and
jmp
and
xchg
fidivrl
jnp
xor
sahf
call
aam
push
adc
fistpl
scas
stos
lock
ret
cmp
xor
xor
add
xchg
std
inc
mov
push
insb
push
adc
jae
pop
clc
xchg
jb
jnp
sub
jbe
outsl
repz
out
sti
jae
mov
aad
jnp
dec
mov
stos
ja
push
in
mov
inc
cltd
mov
fidivrl
insl
push
push
mov
cmc
sbb
or
cmp
push
stos
addr16
push
iret
jb
sbb
fcmovb
xchg
push
mov
repz
imul
fdivs
out
or
dec
clc
inc
and
sbb
jb
mov
lret
cmp
pop
cmpsb
out
stos
enter
es
repz
sarl
and
mov
pop
jo
mov
mov
data16
jns
dec
dec
mov
lfs
mov
push
xchg
jo
rorb
push
dec
sbb
call
xchg
push
repnz
outsl
dec
stos
repnz
sbb
jae
xor
jnp
pop
ret
jns
cltd
jnp
hlt
aam
jp
and
ss
cmp
push
cmc
sub
bswap
xchg
and
mov
in
repnz
outsl
scas
and
cmp
aam
jae
xor
xor
sahf
sub
mov
and
jmp
pop
daa
cmc
jae
mov
rclb
mov
adc
xlat
fists
jne
xchg
shrl
dec
sbb
push
call
pop
addr16
daa
jnp
int
lcall
mov
notl
xchg
fs
xor
shrl
repz
lret
in
sub
jne
das
outsl
dec
aaa
mov
imul
js
mov
and
clc
ret
cmp
ljmp
out
fildl
dec
inc
nop
in
ljmp
sbb
pop
out
fidivrs
ja
jae
lcall
clc
adc
sti
push
and
and
test
imul
js
aaa
adc
adc
push
jmp
jb
imul
mov
cld
jnp
sub
imul
mov
ss
daa
sbb
inc
xor
iret
cwtl
mov
or
mov
sbb
int
dec
es
imul
iret
inc
out
jb
test
insl
lock
cmpsb
imul
js
les
xor
inc
xchg
aaa
pop
jns
jae
cltd
fwait
push
dec
or
mov
enter
movsb
outsb
mov
jae
scas
dec
jp
jmp
in
xor
mov
xor
mov
fnstenv
adc
pop
icebp
js
jae
xor
ljmp
shlb
mov
mov
cli
pop
repnz
xor
scas
into
jae
adc
js
rcr
jnp
push
dec
mov
icebp
fildl
call
xor
sub
or
push
mov
clc
jnp
lea
repnz
cli
jnp
jmp
imul
adc
jnp
imul
stos
cs
sti
repnz
js
jae
lock
lods
mov
rclb
nop
arpl
jo
xor
jnp
in
mov
rcll
jnp
add
ret
out
cmp
xor
xchg
mov
adc
adc
call
in
adc
jo
lods
xor
call
je
mov
jnp
hlt
push
imul
imul
mov
shlb
js
push
or
mov
cmp
jbe
cltd
jnp
or
jnp
and
repnz
xor
fidivrl
cmp
cltd
mov
jnp
xchg
and
mov
inc
and
ljmp
jp
iret
sub
and
repnz
sbb
xlat
jnp
mov
outsb
sub
pop
lret
mov
arpl
push
mov
and
aad
sar
jae
aam
shrb
hlt
jo
xchg
dec
shll
lret
sbb
or
and
repnz
jnp
mov
fisubrl
jo
mov
mov
jnp
xchg
icebp
jp
jnp
adc
shl
xchg
ret
jo
leave
mov
cmc
movsb
clc
bound
and
into
nop
mov
or
and
clc
aaa
mov
lods
movsb
jnp
hlt
sbb
push
mov
jne
jb
sub
or
jp
mov
jnp
shll
jnp
sub
hlt
dec
xchg
dec
lods
xor
mov
imul
fisttpl
cmpsb
shr
mov
mov
bnd
push
jae
hlt
adc
push
mov
popf
jmp
sti
aaa
xchg
jnp
in
lock
sbb
dec
jmp
pop
js
cmpsl
xchg
outsl
sbb
jnp
sub
popf
mov
xor
sbb
mov
or
insl
into
or
nop
rorl
fcoms
jne
repnz
shlb
imul
clc
jmp
mov
push
pop
jb
mov
pop
xchg
dec
jae
das
or
jnp
test
call
lcall
shrl
movsb
cmp
movsb
in
mov
push
mov
cmp
xor
jnp
sub
xchg
std
xchg
jnp
fdivs
pop
jnp
dec
imul
fnstenv
lcall
stos
adc
push
sbb
fcmovne
xchg
mov
inc
jbe
lret
or
call
jb
call
sarb
jo
push
cwtl
dec
lea
pop
stc
lods
fistl
arpl
jnp
mov
mov
dec
ljmp
inc
push
push
jnp
and
notb
mov
shll
enter
mov
aaa
jmp
inc
cmp
je
or
jnp
ret
mov
lcall
mov
ja
xor
mov
fdivs
sub
dec
xor
sub
pop
negl
adc
push
int3
lcall
lret
jmp
cmpsl
mov
jns
mov
jmp
cmpl
sbb
iret
sbb
jnp
lea
and
rclb
lcall
clc
outsl
ja
sub
dec
push
push
shlb
or
xorl
pop
fcoms
in
icebp
and
jnp
and
pushf
xchg
dec
mov
adc
out
mov
outsl
push
jb
cmpl
sub
push
test
fldcw
lret
insb
cmp
cs
test
adc
and
push
in
and
pop
dec
pop
mov
jnp
lcall
jnp
into
jmp
insb
call
cmp
pop
adc
xor
cwtl
bound
pop
lret
xor
xor
inc
adc
sti
sbb
stos
es
pop
push
fucomi
mov
jnp
clc
leave
sub
sbb
cld
stos
push
sub
cmp
popa
rcll
fistpll
adc
sbb
hlt
mov
rcll
adc
add
lcall
bnd
in
mov
sub
insb
jae
adc
stos
dec
sbb
jp
outsl
sub
jae
int3
fwait
sub
aaa
insl
cs
inc
cmp
mov
push
jnp
rcl
aaa
outsb
mov
jnp
push
mov
mov
outsl
jae
repnz
outsl
cmovge
sbb
mov
movsb
stc
insb
stos
push
test
into
cmp
jnp
lcall
push
pop
rcrb
jnp
mov
sub
jg
jns
sbb
stos
imul
sub
jmp
mov
cld
lret
sbb
mov
outsb
dec
lret
stc
int3
ljmp
lea
or
jno
jae
sub
dec
stos
xchg
imul
lret
rorl
lock
in
xchg
pop
scas
jp
push
sahf
jb
xor
sbb
jae
stos
and
push
out
mov
jnp
jae
out
mov
cmc
jno
pop
aad
push
insb
push
stos
imul
cmp
sub
jmp
mov
nop
cmpsl
lcall
jle
mov
mov
fildl
sbb
add
jae
jns
jp
insb
sbb
out
das
int3
dec
cwtl
sahf
mov
into
and
pop
shl
nop
sbb
dec
cmp
push
xlat
adc
in
jnp
ss
jae
mov
jnp
sbb
xor
fstl
enter
fstpt
mov
mov
jns
adc
mov
sub
jae
and
pop
or
xor
cmp
jnp
xchg
je
fwait
andl
ja
repz
int3
xchg
imul
add
sbb
inc
insb
mov
les
mov
fstpt
outsl
lock
ss
imul
jp
fucomi
xor
adc
jae
push
jbe
pop
rorb
pop
fnstenv
mov
or
sbb
dec
jae
ljmp
stos
jae
mov
jnp
fidivl
outsb
lock
jl
mov
hlt
or
sbb
mov
adc
cwtl
jnp
enter
mov
jnp
stc
cmp
fwait
mov
out
imulb
cmp
xor
xlat
jnp
cli
mov
imul
cmp
jnp
mulb
jno
push
mov
ljmp
or
pop
dec
jae
movsb
ljmp
out
sub
xor
repz
jne
push
imul
pop
fldl2t
loopne
xor
pusha
lea
jno
fisubrs
aam
sub
jmp
das
jnp
pop
and
fldenv
mov
cmp
jp
cmp
jae
adc
clc
xor
adc
lret
or
jae
shll
out
je
fucomi
and
fcmovb
jnp
adc
or
in
lock
add
insl
mov
add
clc
push
sbb
imul
mov
je
push
insl
add
dec
push
cmc
or
outsl
ja
xchg
jne
mov
pusha
mov
mov
jnp
call
mov
jns
js
push
or
pop
inc
je
dec
fdivs
jnp
push
fwait
sub
ja
cmpl
stos
cwtl
and
sub
sbb
mov
outsl
fwait
mov
pop
mov
jno
movsb
xor
les
cmp
dec
ja
negb
mov
jnp
test
stos
es
and
jae
jp
inc
addr16
mov
pop
scas
xor
ret
mov
sub
sbb
lret
nop
mov
call
test
cmp
jnp
dec
sbb
mov
imull
xor
pusha
je
lock
mov
and
lret
in
cli
adc
mov
jbe
jg
insb
negl
jbe
push
imul
push
or
pop
loope
sbb
cmc
inc
jp
jbe
popa
jne
mov
jmp
xchg
or
cmp
xchg
int
sub
mov
cmc
outsb
sti
push
mov
sub
xor
mov
es
or
xchg
adc
jns
into
notb
pop
scas
dec
cs
insl
push
pop
fwait
lock
outsl
push
pop
mov
clc
xchg
pop
icebp
aas
cs
imull
cltd
jnp
and
pop
out
sbb
fidivs
js
das
jnp
movsb
mov
or
aas
jne
xchg
mov
add
fsubrs
out
lcall
push
mov
out
jnp
clc
ljmp
test
and
jnp
mov
mov
daa
cmc
xchg
dec
lret
xchg
and
ss
popf
out
sub
sti
xor
movsb
jmp
sbb
mov
xchg
mov
ss
int3
cmp
pop
jecxz
jae
mov
cli
repnz
jnp
push
es
push
js
jnp
xchg
iret
or
mov
cmc
or
or
and
or
rep
dec
push
push
jae
xchg
fsubrs
push
sub
popa
inc
outsb
adc
jne
jnp
test
mov
iret
je
mov
jb
and
mov
daa
fldenv
fwait
adc
sub
xchg
jnp
mov
push
js
int
pop
xor
cmp
mov
jnp
scas
out
mov
push
jmp
in
fnsave
xchg
pop
cmp
dec
lods
mov
test
leave
xor
scas
pusha
jnp
je
rcl
dec
jbe
pop
mov
loop
out
ja
ja
or
or
lods
sbb
xorb
xchg
xor
jns
lods
hlt
pop
and
xor
sarb
add
sbbl
push
jnp
test
or
jne
jp
arpl
movsb
out
lret
jnp
lea
mov
jae
shl
push
push
pop
das
cs
mov
jecxz
sbb
mov
xchg
and
sbbl
dec
enter
cmp
dec
pop
lods
fwait
pop
sbb
aaa
jae
mov
mov
mov
mov
mov
clc
popf
cmp
imul
leave
sbbb
fidivs
jnp
mov
mov
mov
icebp
mov
pop
pop
jne
mov
adc
repnz
mov
mov
xor
jbe
jnp
cwtl
push
dec
fldcw
jne
sbb
xor
sub
mov
cmp
jae
jbe
in
jecxz
jo
movzbl
stos
mov
jne
pop
int
sbb
in
add
stos
or
mov
and
sub
js
jno
lcall
xor
in
mov
mov
call
mov
pop
inc
jo
cmp
xrelease
xor
imul
cltd
sub
sub
jp
jle
add
sti
stos
dec
nop
aad
add
lea
loopne
imul
adc
jnp
cmp
cmp
scas
mov
mov
push
idiv
lcall
xor
leave
ja
loop
idiv
mov
jo
add
mov
xchg
lcall
enter
mov
clc
mov
pushf
ja
jmp
jnp
flds
xchg
or
mov
xchg
jne
stc
push
pop
lea
std
inc
cmpsb
stos
das
outsl
ds
movsb
imul
xchg
sub
mov
cltd
jnp
dec
lock
add
sub
jae
cli
xchg
inc
cmpsb
mov
fcoms
je
fisubrl
jnp
sub
out
mov
daa
mov
cltd
clc
jnp
jp
in
mov
je
jnp
call
out
sub
push
mov
jp
add
outsl
and
xor
cltd
xchg
flds
or
mov
fwait
enter
insl
add
lock
inc
in
ffree
cld
cmp
shlb
fstps
jp
lock
mov
leave
dec
sub
aam
clc
inc
mov
jo
or
stos
imul
lcall
inc
jo
sarb
repnz
sub
gs
jecxz
cli
pop
cmc
out
jp
jnp
push
fistpl
xor
call
mov
cmp
popa
push
mov
mov
jnp
out
jmp
cltd
fcompl
ret
jecxz
lret
mov
sub
push
and
sbb
outsl
inc
popa
or
div
jnp
mov
xlat
push
jae
jmp
pop
mov
out
enter
fwait
cmp
into
push
test
xchg
lea
jmp
mov
imul
xchg
push
jbe
cmp
call
pop
mov
pop
out
jp
popf
cmp
stos
pop
jnp
shl
pop
notl
mov
mov
push
mov
cli
and
js
cmp
fdivs
pop
ss
test
cmp
sub
imul
pop
xchg
cmp
out
imul
inc
lcall
xor
jae
dec
mov
jnp
ds
enter
or
push
sub
or
sbb
in
imul
hlt
stos
and
dec
js
inc
ja
fistpl
xchg
sbb
dec
jp
mov
sub
sbb
mov
dec
mov
sbb
ja
cmp
pop
insb
dec
jnp
arpl
mov
lods
sub
imul
or
stos
mov
jnp
aad
es
jnp
lcall
aaa
sub
pop
pop
stos
push
outsb
pop
push
in
jno
mov
push
jb
imul
sbbb
adc
int3
jmp
sub
and
push
mov
pop
mov
jnp
sti
push
stos
cmc
fcoml
adc
jbe
leave
push
test
cli
stos
sbb
xchg
mov
and
mov
mov
outsl
mov
add
in
dec
shrb
fildl
mov
jnp
movsb
and
mov
mov
sub
fsubrs
stc
sub
negb
js
inc
sbb
cmp
jp
jae
aad
sbb
fdivrs
cmp
push
ret
mov
mov
cmp
jmp
xchg
iret
fidivl
jmp
cltd
jbe
cmp
popa
cmp
dec
enter
js
stc
fldt
test
mov
jp
push
sub
pop
jnp
xchg
insb
push
xor
pop
mov
jae
sub
cwtl
sbb
push
call
mov
insl
dec
jmp
call
dec
stos
iret
lahf
jnp
negl
clc
es
cmp
into
insl
hlt
jnp
insl
enter
mov
mov
orl
dec
add
push
xlat
jmp
lods
add
dec
sub
sbb
bnd
jo
dec
jno
fmuls
mov
jno
clc
push
sub
loope
mov
insl
mov
mov
aaa
das
adc
faddl
outsl
nop
cmp
jmp
pop
xchg
cltd
jnp
les
out
idivb
xor
mov
mov
push
lods
mov
jp
mov
jnp
mov
xchg
out
movsb
pusha
rorl
in
jbe
or
push
sub
push
dec
and
fwait
jne
ljmp
dec
mov
cmpsb
xor
jnp
scas
jae
ret
call
clc
pop
lret
fcmovnu
sbb
jecxz
fwait
mov
jns
or
mov
lods
sub
out
flds
dec
movsb
mov
insb
sub
inc
jo
jmp
mov
jecxz
cs
dec
sub
shll
mov
stos
jnp
mov
mov
jnp
or
pushw
cmpsb
cwtl
mov
mov
dec
insb
rcrl
repnz
sub
mov
jnp
mov
push
outsb
push
or
push
cmp
xor
jmp
pop
add
iret
popf
mov
sub
jb
jbe
mov
ja
int3
js
fdiv
jb
lcall
cmp
adc
mov
jnp
cmpsb
xchg
dec
sti
das
mov
imul
adc
and
or
and
test
es
aam
push
mov
jnp
mov
lock
mov
movsb
lahf
aaa
mov
jae
xchg
daa
push
mov
repnz
xor
mov
mov
int
jnp
js
sub
jmp
sarl
movsl
iret
xor
dec
je
xchg
xor
cmp
adc
test
jmp
mov
jecxz
into
push
daa
fnstcw
out
cmp
lcall
idivl
sti
dec
mov
and
stc
lock
enter
mov
jns
jb
adc
xlat
lret
mov
add
mov
push
mov
loop
push
jmp
cmp
fdivs
testl
aam
mov
mov
js
sub
notl
cli
mov
repnz
insb
inc
mov
cmp
pop
lcall
sbb
stos
in
movsb
mov
add
fcoms
in
cli
push
mov
mov
daa
movsb
aas
jnp
jg
test
out
cli
es
jnp
cmp
xchg
jnp
sbb
mov
dec
aad
test
in
leave
cmpb
outsl
test
movsl
stos
fistl
ja
mov
and
mov
push
lcall
cmc
mov
jnp
mov
and
leave
lds
les
in
jnp
in
add
stos
pusha
pop
pop
sbb
sub
and
xlat
pop
mov
das
outsl
cld
jle
sub
in
jnp
push
inc
mov
stc
call
jp
pop
and
inc
sahf
adc
pop
dec
mov
mov
icebp
shr
pushf
jnp
icebp
cmp
cmp
mov
and
popa
sti
jnp
add
xor
inc
jnp
push
fcmovb
add
jl
jnp
daa
or
mov
lock
xor
icebp
aaa
jecxz
jnp
cmp
mov
fidivl
sahf
and
adc
insl
xchg
xchg
dec
jp
cmpsb
mov
mov
push
mov
loop
and
adc
xor
dec
in
js
sbb
and
mov
mov
imul
int
repnz
arpl
clc
and
outsb
stos
mov
fdivs
mov
jbe
mov
or
mov
cmp
scas
sub
lods
xor
sub
sub
cmp
fsubrs
mov
jo
mov
lock
cmp
mov
repz
mov
adcb
clc
xor
mov
aaa
or
pushl
stc
std
mov
gs
cmp
sub
sub
lock
dec
mov
add
sbb
sbb
sbb
sbb
sbb
cld
cmpl
dec
adc
outsl
mov
xlat
add
cmpsl
sub
ljmp
fcoms
imulb
mov
mov
inc
int
cwtl
popw
pushf
pop
pop
andl
std
idivl
xchg
jl
jl
insb
cmpsl
inc
push
test
push
js
adc
jnp
outsl
sbb
mov
pop
inc
fldenv
out
and
fdivrs
notb
movsl
or
jnp
xor
mov
or
jne
in
or
popf
int3
scas
gs
clc
jp
fstpl
rcr
clc
jnp
sbb
aam
in
xlat
jnp
adc
aad
enter
jns
xchg
xchg
imul
int
adc
mov
jae
sbb
popf
stc
cld
enter
fnstenv
push
or
sbb
jnp
xor
add
test
or
rolb
imul
add
add
fdivs
and
jp
and
cmp
xchg
mov
adc
or
aad
outsl
fldcw
adc
adc
pop
movlps
pop
adc
pop
sarl
cmpsl
enter
scas
imul
outsl
xlat
adc
daa
enter
scas
pop
dec
in
data16
test
pop
cmpsb
enter
scas
xchg
in
out
aad
dec
insb
jae
test
mov
cmc
adc
repz
sahf
push
sti
or
jnp
and
data16
imul
xchg
arpl
push
pop
cmp
sbb
cld
push
arpl
cs
fwait
lods
mov
cmpb
pop
xchg
rcrb
pop
mov
and
mov
xor
in
jnp
fistpll
sbb
xchg
lahf
je
jb
jnp
lds
enter
jnp
in
or
xchg
movsb
jnp
xchg
stos
jo
push
lret
push
jnp
cltd
cmp
adc
mov
xor
xor
mov
sbb
inc
stos
mov
div
or
in
fdivrs
cld
data16
movsb
hlt
jnp
pop
dec
and
loope
cmp
das
xchg
iret
roll
dec
decb
lock
mov
pop
insl
jnp
jp
cmp
sub
sub
and
ja
fcomps
inc
pop
ffree
repnz
in
sub
lods
daa
int
or
scas
jp
add
or
pop
mov
and
jno
mov
dec
in
pushf
cld
subl
push
jnp
jl
mov
mov
clc
jne
in
and
int3
andb
cld
add
mov
add
adc
outsb
add
icebp
and
jb
or
hlt
mov
lahf
xlat
or
jp
sub
fcmovu
js
mov
out
and
fdivrs
ret
xor
das
std
je
jge
jns
pop
jl
jl
jl
insb
cmp
mov
mov
cmp
jle
add
testl
hlt
mov
js
mov
mov
in
xchg
jae
fsubrs
jno
mov
and
jo
mov
je
orl
gs
loope
mov
jecxz
shl
rcl
stos
clc
xor
pop
jnp
sub
out
mov
movsb
xlat
pop
mov
mov
fnstsw
adc
imul
pop
fcomps
or
jnp
shlb
mov
jnp
sti
stos
push
fbstp
mov
iret
xchg
xor
xchg
cmp
stos
shrl
int
sbb
icebp
scas
add
lods
jo
mov
lret
fstl
pop
lret
imul
and
std
cs
pusha
jnp
pop
mov
mov
mov
lods
cmp
jnp
mov
fstpl
stc
adc
andb
xor
xor
ss
add
mov
cli
sub
pushf
cmp
iret
clc
mov
add
outsb
and
push
call
xor
fmuls
ljmp
scas
cmpsl
stc
sbb
adc
pop
jnp
xor
xchg
xchg
sahf
pop
sbb
inc
sbb
cmp
lods
mov
jnp
movsb
xor
sbb
push
stc
stc
clc
std
in
sti
insb
dec
fdivrs
and
jp
lods
pop
xlat
clc
in
lcall
sbb
sub
xorl
dec
icebp
push
mov
mov
mov
jnp
or
xor
cmpl
xor
decl
mov
das
jae
mov
sti
imul
sbb
fldcw
ds
jg
mov
testl
cmpsl
jno
icebp
aaa
sub
imul
js
cmp
popf
stos
jnp,pn
repnz
mov
jmp
mov
sbb
addr16
or
mov
sbb
push
jmp
shll
mov
jnp
sub
iret
fmuls
in
add
mov
jo
loopne
test
sbb
int
in
shrb
cmp
scas
js
loopne
push
pop
shlb
adc
pop
fldt
sub
xlat
jnp
aad
icebp
push
adc
add
sbb
push
js
xlat
jnp
adc
into
pusha
and
hlt
xchg
jb
rclb
mov
scas
divl
ds
mov
fwait
dec
sti
lock
imul
pop
xor
push
out
jb
jnp
iret
lret
jo
test
es
andl
fnstsw
lods
adc
push
sti
or
cltd
xchg
test
sbb
xchg
stos
fisubl
jbe
cmpl
jnp
ret
test
daa
sbb
out
xor
dec
pop
mov
ja
and
daa
rcrb
pop
loope
pop
or
xor
popa
or
out
loop
mov
mov
iret
in
ds
and
insb
cld
jno
js
or
sub
xchg
mov
jb
repnz
sti
jle
sahf
imul
push
push
pop
idivb
jne
sbb
jnp
mov
pop
jnp
xor
rorl
mov
cmp
dec
repnz
aad
mov
push
mov
cltd
cmc
mov
mov
xchg
or
dec
out
insl
push
xorl
movsb
add
cmpsb
mov
das
jae
xchg
jne
mov
sbb
imul
mov
pop
and
dec
jnp
dec
push
aam
rcr
or
xor
jnp
mov
jnp
iret
mov
xlat
inc
xchg
cmc
jnp
xchg
daa
dec
fsubr
ret
clc
jnp
popa
and
ljmp
jnp
sti
cs
push
faddp
jnp
pop
xor
shr
aad
repz
or
adcl
insl
xchg
jmp
jae
popl
lds
mov
aad
dec
aaa
pop
mov
push
shrb
imul
pop
inc
iret
xor
cs
inc
jnp
clc
xchg
fs
insb
stc
sarl
test
xor
xchg
repnz
lcall
mov
fdivl
lods
push
mov
sub
dec
outsl
jae
sbbl
pop
lret
nop
arpl
add
sbb
push
push
cmp
repnz
xor
pop
and
loop
ja
cmp
jg
push
mov
mov
jmp
std
jnp
cmp
lock
dec
roll
shlb
imul
mov
jno
xchg
jle
outsl
sbb
lods
sti
and
stos
pop
data16
xchg
arpl
mov
mov
jnp
call
mov
inc
jno
addr16
clc
sbb
and
aam
daa
outsl
add
cmc
hlt
stos
stc
add
cmp
jnp
cmp
cmp
ds
mov
repnz
into
and
pop
mov
and
outsl
clc
jo
fsubrp
mov
xchg
or
jae
xlat
aad
jb
jp
cmpsl
sbb
cmpsb
dec
pop
loop
pop
repnz
jmp
or
out
pop
cltd
jnp
negb
je
xor
clc
into
imul
sub
push
cmp
jnp
test
cwtl
int
push
mov
fisubl
mov
pop
sbb
sub
and
hlt
scas
push
mov
negb
shl
mov
aas
sub
shlb
shr
enter
jnp
xor
jecxz
mov
ss
in
mov
xchg
mov
xor
add
adc
in
mov
jae
xor
ss
mov
pop
cmp
add
xchg
mov
sub
xor
scas
cmp
cmp
mov
xor
sub
scas
and
dec
xor
and
push
out
mov
lods
outsb
outsb
sub
test
pop
xor
sub
or
ljmp
mov
scas
sbb
insl
jle
sbb
hlt
imul
mov
jg
ljmp
xor
sarb
sbbl
mov
data16
mov
shrl
mov
jne
data16
or
or
cmp
adc
lcall
cmp
iret
into
jle
ret
mov
dec
outsl
xor
mov
ss
cli
sub
sub
inc
push
imul
sti
push
dec
frstor
jns
test
jnp
fs
in
and
jg
mov
pop
mov
lret
dec
in
scas
lock
jg
push
cli
ss
shll
je
fnstsw
das
and
out
data16
sbbl
jb
and
mov
and
cwtl
xor
jne
push
dec
jnp
sub
sub
and
xchg
jg
pop
sti
lods
insb
shl
pushf
out
inc
xor
jnp
jge
out
fwait
pop
insl
int3
jnp
lods
hlt
mov
xor
sbb
out
jnp
push
push
das
sub
jnp
rorl
lret
mov
pop
sub
xorl
xor
jnp
mov
mov
hlt
js
outsb
stos
gs
ret
inc
ret
repz
idivb
lods
xchg
mov
leave
dec
stos
mov
fsubrs
jno
jae
mov
fbstp
repnz
push
jnp
js
jg
mov
enter
sub
cmpb
in
outsb
stos
sbb
stos
sub
mov
int3
je
pop
cmc
imul
xor
mov
dec
jno
lret
and
gs
imul
leave
jns
scas
stos
fldcw
icebp
loopne
and
outsb
fistl
rcrb
add
add
or
mov
sub
pop
popf
cwtl
outsl
cs
lock
in
stos
divb
xor
stos
divl
or
mov
lods
cld
jg
inc
or
sub
jmp
lock
leave
outsl
jbe
fsubrs
in
mov
push
out
insl
dec
outsb
aaa
out
xchg
jnp
arpl
outsl
cmp
cld
lds
mov
jnp
stos
and
movsl
bound
xor
xchg
in
aam
cmp
sub
sbb
jmp
jnp
rorl
dec
push
push
out
jnp
shlb
adc
out
popa
jnp
es
into
add
lret
int
fsubs
jae
mov
push
pop
ss
fldenv
mov
das
jno
jmp
mov
std
ja
test
jnp
sub
outsb
scas
shrl
sbb
push
imul
mov
int3
inc
fdivs
mov
push
mov
cmp
mov
out
rcrl
sti
lahf
mov
xor
iret
jnp
in
mov
imul
mov
mov
jmp
das
jnp
mov
cs
jmp
adc
and
outsb
mov
jae
out
dec
das
mov
sbb
cmp
pop
dec
shlb
jnp
sti
scas
and
jno
icebp
jnp
ds
jp
sbb
fstps
xor
cmp
mov
jmp
sbb
hlt
pop
scas
mov
pop
test
or
insb
orl
inc
scas
mov
jnp
mov
lcall
out
adc
xor
inc
pop
shlb
fucomp
mov
xchg
inc
sub
in
sbb
mov
push
jno
pop
loope
aam
and
ds
add
cli
jp
outsl
insb
add
ljmp
pop
or
lcall
and
mov
repz
push
mov
jnp
pusha
jbe
mov
out
repnz
test
pushf
es
jnp
jg
out
pop
xor
or
fnstenvs
xor
rorb
dec
mov
cmp
xchg
push
decb
aaa
push
cmpsb
lods
pop
inc
test
cs
sarl
push
mov
int
fbld
aad
mov
loop
jns
repnz
push
aam
jnp
outsl
scas
dec
dec
pop
bound
cli
fld1
xor
lock
sti
ljmp
mov
scas
xlat
jp
xor
repz
jge
adc
mov
es
jnp
out
inc
push
push
lret
pop
pop
xor
xor
std
jne
aam
imul
mov
shlb
jns
cli
jnp
mov
sbb
shrb
jle
dec
jg
jno
nop
imul
or
lods
jnp
xor
jnp
jno
icebp
outsb
aaa
jo
fdivrl
sub
pop
stos
cmpl
aad
mov
jne
icebp
sub
push
rcrl
bound
xor
lcall
add
dec
outsl
cmp
ret
stos
cmp
or
imul
and
sbb
jnp
pop
stc
scas
xorl
paddsb
mov
cmp
sub
data16
cmp
in
pop
mov
fisubrl
outsb
pop
inc
sub
fwait
into
cmp
pop
adc
jnp
cli
imul
lea
into
jnp
int
sbb
inc
sbb
repnz
out
pop
mov
shlb
jnp
pop
popf
sbb
jnp
jno
cmp
or
int
sbb
in
dec
mov
icebp
jo
jge
aas
or
out
cltd
jns
push
ds
sub
adc
mov
int3
jae
jp
push
imul
neg
sbb
je
fistpll
sbb
addl
adc
sub
scas
xor
adc
mov
fisubrl
clc
jae
insb
and
inc
testb
mov
sub
mov
and
mov
clc
dec
adc
inc
cmp
fdivrs
divb
and
jb
cmp
dec
stos
jle
mov
ds
pop
decl
je
sbb
out
xor
jp
jnp
scas
mov
jnp
push
mov
stos
or
sub
pop
sub
shll
out
aad
je
out
sbb
dec
fdivs
shl
scas
sbbl
jnp
or
aad
fidivrl
sbbb
pusha
jno
repz
repnz
ja
jp
ss
cmp
sub
outsl
mov
dec
push
rcr
sub
pushf
scas
dec
adc
inc
in
aaa
xchg
outsl
jnp
repz
es
xlat
lret
push
jnp
cltd
jg
loope
das
dec
imul
std
cmc
inc
rcrl
pusha
and
jle
xor
jb
es
cli
push
insl
adc
in
adc
mull
repz
xchg
dec
jne
mov
inc
daa
jnp
test
outsl
sarl
add
sti
cwtl
xor
pop
mov
mov
mov
cmc
mov
shrl
push
cmp
cmp
aaa
loope
insl
mov
mov
push
lods
sub
add
jae
or
jnp
scas
int3
iret
popa
mov
dec
div
and
sbb
pusha
inc
sbb
jnp
jecxz
cwtl
fidivl
hlt
jnp
stc
xchg
lods
jns
cmp
adc
je
arpl
mov
aam
movsb
mov
mov
lods
stos
xor
out
mov
cmp
in
adc
in
stc
add
cltd
add
stos
leave
mov
lret
xlat
nop
or
clc
xorl
inc
lock
in
inc
sub
jnp
mov
sbb
sbb
mov
fcoms
insl
insb
arpl
jnp
repz
cs
mov
jnp
into
jl
cmp
nop
jb
pusha
scas
pop
cwtl
xor
cmc
test
xor
mov
push
push
add
jnp
jp
test
sub
shll
ss
aas
jnp
mov
mov
inc
cmp
jp
sti
mov
xchg
cmp
lock
mov
or
sbb
dec
jnp
sub
movsb
cmp
mov
lods
iret
jnp
je
mov
jnp
addr16
repnz
test
pop
jnp
in
movsb
xor
jnp
sarb
xor
jnp
mov
mov
jnp
loop
cmp
movsb
scas
aad
pop
jnp
mov
lds
jo
pop
gs
test
je
mov
or
xchg
repz
add
arpl
xor
cs
cmp
icebp
mov
jnp
jmp
pusha
xchg
mov
xchg
mov
mov
adc
or
in
insb
lds
cmp
stos
sbb
addr16
outsl
mov
cmc
aam
mov
out
mov
lcall
sti
add
imulb
xor
movsb
je
push
mov
fs
call
sub
lret
or
scas
jnp
dec
rcll
dec
mov
dec
and
sbb
out
in
insb
sub
enter
pop
cs
xor
xlat
mov
lods
imulb
mov
push
jb
mov
divl
jnp
cmp
push
gs
roll
icebp
jae
sbbl
jl
js
mov
adc
mov
das
mov
ret
mov
dec
dec
repnz
into
dec
insl
jae
rorb
lock
popa
mov
cli
popa
sub
lods
aas
or
mov
aaa
cli
jl
and
sub
loopne
cmp
ss
cmp
xor
fcoms
mov
add
ret
out
bndldx
in
fnstcw
sub
ds
xchg
dec
jnp
cli
mov
mov
push
jnp
loope
mov
mov
mov
inc
ret
test
cli
sub
shll
out
jnp
sub
sub
idivl
into
inc
jnp
xchg
cltd
sub
jecxz
icebp
clc
pop
cs
adc
fsubrp
cmp
cli
inc
xor
into
aas
push
outsl
jns
jmp
lcall
mov
outsb
dec
sub
jo
sbb
and
ja
std
bound
idivb
jnp
ja
and
jnp
jae
and
sub
pop
test
in
popa
and
adc
pusha
and
xor
test
sub
pop
adc
inc
cmc
aam
pop
jne
xor
push
test
cld
dec
push
jnp
movsl
add
mov
jnp
repnz
dec
dec
mov
les
aas
jnp
inc
repnz
jmp
fnstcw
negb
jnp
mov
cmp
repz
fcomps
aam
test
or
test
je
or
cmp
dec
cmp
cmpsb
stos
aaa
es
mov
jns
jg
add
movsl
enter
mov
ds
add
rol
jmp
dec
insl
loop
fistps
std
icebp
mov
mov
mov
aaa
cld
pop
mov
outsl
mov
jnp
movsl
mov
jb
shrl
sarb
cmp
mov
mov
mov
loop
inc
lcall
lcall
adcl
stos
outsl
fadds
cmp
aam
and
ss
mov
push
lret
out
or
sbb
in
mov
dec
xor
mov
repnz
sbb
pop
jecxz
out
mov
lods
mov
inc
aad
das
cwtl
jb
fidivs
add
cmp
jno
aaa
test
movsb
testb
jnp
pop
push
in
push
jmp
mov
aaa
outsb
stc
cmp
jno
in
and
imul
test
bound
inc
lods
in
loop
lods
jnp
dec
les
dec
push
mov
xchg
jnp
mov
fs
fisubl
mov
dec
test
pop
xor
out
imul
clc
subl
iret
lahf
or
call
mov
test
imul
push
sub
aaa
imul
hlt
repnz
dec
mov
pop
fcmovnb
ja,pn
pop
jnp
scas
push
insb
add
test
mov
jnp
fiadds
cmpsb
dec
cmp
insb
push
fs
xlat
xor
leave
xor
mov
lock
xor
imul
xlat
out
adc
jns
xor
cld
in
add
pop
enter
jns
xchg
cmp
mov
lcall
outsl
or
fidivl
dec
aaa
jnp
repnz
aam
fdivr
mov
imul
es
mov
xorb
sarl
cmp
mov
mov
lods
nop
aas
insb
xor
icebp
iret
fxtract
mov
cmp
jae
scas
cmp
jnp
cmpsb
fs
stos
in
xchg
aam
mov
jnp
fisttpl
mov
stos
xchg
cltd
jge
ss
sub
jmp
in
sti
sbbl
jnp
jns
push
in
in
mov
push
aad
lods
sbb
add
adc
xchg
mov
pop
mov
lods
cmp
mov
cmc
je
clc
addl
xlat
jl
pushf
xchg
jnp
xchg
aad
movsb
or
call
mov
xchg
shlb
jbe
mov
popf
arpl
lds
mov
into
scas
sub
imul
sahf
jne
xchg
jnp
dec
hlt
mov
ficompl
mov
adc
or
dec
jecxz
repnz
sarb
sub
cli
mov
cmp
or
ret
jnp
loop
sub
fdivrl
or
adc
ljmp
sub
test
or
pop
xor
mov
lods
shl
jnp
mov
sbb
cmp
jae
jp
cli
dec
push
sub
jnp
ret
push
aam
dec
lret
push
lret
mov
outsl
sub
clc
dec
outsb
mov
insb
enter
sbb
sbb
sbb
sbb
mov
mov
cmc
xor
hlt
cld
mov
jl
cmp
jbe
ss
mov
imul
jp
ja
push
hlt
insb
stos
lods
add
sub
scas
cmpsl
pop
call
jle
repz
or
and
lcall
mov
in
insb
aad
pop
mov
fwait
jns
pushf
push
mov
cmp
sbb
sub
xchg
jae
scas
fdivl
jnp
stc
xlat
mov
sub
jne
je
out
fdivrs
divb
pop
jo
nop
cmp
mov
scas
ret
mov
clc
jae
adc
in
aad
xor
mov
adc
enter
mov
jp
jnp
mov
ss
test
in
int3
nop
add
jb
and
insl
jnp
ss
xor
mov
dec
sarl
test
and
cmp
mov
rcl
in
xor
mov
xchg
inc
icebp
pop
call
daa
ljmp
cs
push
mov
mov
sahf
sub
clc
jnp
pusha
mov
mov
insl
pop
fwait
jns
mov
xlat
int3
cwtl
jnp
sub
mov
xlat
outsb
subl
das
ss
jo
lret
mov
jae
stos
idivb
pop
mov
dec
je
dec
pop
lods
aas
sbb
inc
mov
mov
push
pop
pop
insl
insl
scas
bnd
jnp
test
lcall
incb
jnp
cmpb
xchg
and
ss
pop
xor
jge
cltd
sub
stos
jecxz
pop
or
mov
xor
sti
jp
cmp
jae
jae
dec
iret
stos
cmp
cmp
mov
sub
mov
rorb
sahf
dec
jnp
sub
adc
or
jp
lret
fisttpl
xor
repz
lods
fdivs
jnp
fsubrs
cld
divb
mov
pop
jmp
leave
or
push
js
cld
xchg
sbb
sti
or
insb
mov
mov
mov
dec
jae
add
mov
outsl
stos
mov
test
mov
int3
fwait
push
loope
mov
cs
add
jno
enter
icebp
mov
fsubrl
push
mov
push
cmp
dec
js
hlt
mov
sub
dec
movsb
loopne
jnp
and
loope
aaa
or
jnp
sub
or
int3
jnp
adc
dec
mov
push
idiv
xor
or
adc
jne
rcr
adc
clc
rolb
add
add
dec
push
mov
jmp
jg
outsw
fcoms
mov
sbb
cltd
jnp
pop
fcom
notb
fninit
clc
push
mov
and
add
jnp
pop
ss
mov
jae
aad
push
fadds
or
mov
enter
sahf
stos
sbb
jnp
aam
test
and
push
clc
iret
out
jle
popf
jp
imul
mov
cmp
mov
clc
sub
adc
enter
mov
jne
cmp
mov
and
fidivl
add
ss
hlt
rcl
cmpsl
jnp
in
aam
cmp
sub
jae
sub
jnp
mov
pop
insb
pop
sub
pop
in
outsl
sub
dec
cmp
and
insl
push
loopne
pop
mov
inc
and
xchg
outsb
push
sub
cmp
lcall
imul
push
cmpsl
mov
jns
xorb
int
or
jmp
scas
ret
movsl
xchg
pop
xor
dec
xor
pop
icebp
and
sbb
or
and
divb
and
insb
cmp
jnp
pop
mov
das
jnp
in
mov
jo
adc
negb
mov
inc
or
mov
cmp
jne
xor
je
dec
mov
cli
inc
insl
lods
lahf
enter
ss
lret
xor
mov
push
fdiv
jnp
fsub
xor
ss
jp
ljmp
shll
fwait
mov
fucomip
fnclex
jg
xchg
mov
sti
mov
stos
cs
add
stc
lret
outsb
imul
mov
sub
dec
mov
ficomps
arpl
jnp
addr16
call
jnp
stos
cmp
xor
lret
bound
jnp
xor
jnp
leave
shlb
jnp
ljmp
cmpsb
cld
mov
jnp
add
pushf
xor
sahf
xchg
jns
es
inc
jnp
mov
sub
jne
jae
adc
cmp
push
push
sbb
ja
mov
test
jae
and
jnp
pop
lods
adc
dec
cs
out
mov
sbb
push
jecxz
out
in
lret
jle
sbb
cld
rcrb
mov
ja
outsb
xchg
jnp
cmp
xorb
dec
jmp
std
xor
addr16
adc
rcll
jnp
nop
sub
cmp
mov
mov
pop
inc
push
in
scas
mov
jnp
mov
jecxz
jnp
mov
lods
pop
jnp
adc
cmpl
push
fcmovbe
pop
xor
call
pop
outsb
cli
sub
insb
or
imul
lods
adc
imul
add
bound
xor
jnp
mov
mov
dec
mov
lock
aad
mov
fiadds
xchg
movsb
jnp
lret
popa
mov
imul
fcomip
add
and
jnp
and
sub
ja
jbe
sbb
data16
adc
jecxz
mov
dec
in
pop
sbb
lods
push
add
test
test
and
jnp
int3
jno
dec
sub
jnp
popf
das
out
cmp
push
jnp
jne
inc
or
or
adc
loop
mov
divb
outsb
jnp
dec
cld
push
mov
cmp
jo
in
jno
je
xchg
das
pop
mov
sbb
jnp
lcall
and
mov
call
jo
jns
mov
xchg
xorl
mov
mov
dec
imul
mov
sub
mov
aas
sbb
pop
leave
and
jo
or
test
xchg
dec
loopne
ja
loope
cmp
mov
shrl
adc
imul
cmpsl
cmpl
in
push
pop
adc
inc
insb
add
cli
lock
adc
gs
adc
mov
xchg
lods
jns
jnp
ret
pop
inc
or
not
lret
jnp
add
mov
iret
outsl
and
pop
nop
sub
or
addl
mov
or
test
sub
xchg
imul
mov
hlt
push
mov
and
jae
and
jl
data16
cmovnp
lcall
rorl
xor
shll
daa
or
xlat
dec
inc
shlb
cmp
mov
rorb
sub
dec
arpl
sbb
sub
mov
fcmovnbe
xor
movsl
imul
enter
stc
out
clc
and
inc
adc
ret
cltd
outsb
sbb
jnp
lret
loop
mov
pop
lret
push
addl
clc
jnp
mov
inc
movsb
lods
test
dec
ret
cmpb
or
jp
jnp
sub
loope
lods
imul
faddl
in
cmp
test
jnp
aad
xlat
mov
filds
neg
jb
jnp
cmc
xchg
stos
dec
cmp
aas
cmp
pop
enter
jnp
sub
pop
mov
jnp
xor
dec
sti
stos
inc
rcl
jo
addr16
lods
lods
sbb
xchg
repz
cmc
jnp
or
cltd
push
cmp
testb
xchg
imul
jg
outsb
sub
push
mov
insl
push
cmp
push
ss
inc
mov
mov
call
and
dec
lds
and
cli
fnsave
cmp
xlat
test
mov
ja
enter
repz
mov
mov
mov
mov
enter
xchg
clc
rcrl
dec
add
sbb
aas
lock
adc
ss
sub
inc
sarl
fnstcw
jns
leave
xor
jae
mov
jnp
in
adc
lods
mov
sub
dec
jecxz
jp
insl
add
jnp
ret
imul
push
add
ret
ljmp
dec
je
jl
mov
mov
push
add
pop
xor
sub
addb
and
xchg
jnp
int3
cmpsb
aaa
add
jnp
mov
fcmovb
fcoms
jae
cltd
mov
stos
lock
pop
sub
aaa
pop
fprem
cmpsl
sbb
mov
outsl
mov
mov
es
push
ret
push
aad
cmc
adcb
push
jne
push
jnp
inc
jb
cs
ret
or
add
xor
inc
push
inc
pop
jnp
shlb
insl
sbb
leave
pushf
outsl
or
sbb
ja
imul
push
adc
outsb
in
jecxz
jnp
inc
xchg
stos
cmp
sbb
aaa
ja
mov
jmp
cmp
xchg
mov
outsl
push
iret
addb
xchg
notb
pop
fs
jnp
out
fidivrs
outsl
lods
xchg
clc
xchg
and
lret
clc
icebp
movsl
jnp
pushf
and
gs
lret
mov
adc
jnp
test
fisttpll
aaa
cmp
ret
shlb
cmp
imul
mov
xchg
cmp
cs
jnp
imul
xchg
adc
scas
push
mov
sub
cld
scas
xchg
jne
fldenv
xchg
inc
mov
pop
xchg
ja
int3
std
data16
or
push
ja
cmp
xchg
sbb
js
xchg
push
sbb
xchg
mov
mov
and
push
sub
clc
mov
jae
jne
cld
or
data16
cmp
sub
xchg
jnp
jle
outsl
inc
leave
add
es
insb
das
fs
jp
push
fdivrl
jl
jbe
pop
mov
push
push
add
cmp
adc
cmp
pop
sub
xchg
add
cld
cmc
xorl
inc
inc
xor
mov
xor
fdiv
icebp
mov
xor
jns
xlat
call
stc
or
push
fwait
inc
lret
or
popa
call
pushf
jp
jmp
pop
adc
outsb
add
fdiv
in
les
stc
imul
pop
rorl
imul
xor
pop
test
stos
jne
adc
out
insl
fdivl
cmp
call
jne
jmp
mov
fwait
andl
int3
lods
insl
jnp
outsl
inc
orb
data16
and
xchg
in
sbb
dec
cmp
cmp
jnp
vdivpd
je
imul
in
daa
fisttps
jbe
aaa
fistl
mov
xchg
int
ja
fisubrs
mov
or
xor
jnp
enter
mov
mov
push
bound
insb
aas
scas
jnp
testb
jnp
fiadds
mov
test
pop
lds
imul
test
push
sbb
call
jnp
add
sti
aam
cmc
sbb
ja
and
pop
fucomip
test
lret
adc
mov
or
negl
xchg
and
or
stos
mov
mov
xchg
jae
mov
jb
pusha
aas
pop
jae
cmpsl
and
jnp
pushf
repnz
dec
shrb
xor
or
cmp
or
scas
jp
dec
test
jnp
fcomi
and
ss
mov
fnstcw
jno
movsb
jne
sarl
and
mov
repnz
sbbl
adc
rcrl
push
inc
mov
mov
jnp
cmp
in
aam
js
arpl
out
sbb
add
aad
jl
imul
xchg
push
fsubrs
sbb
mov
ret
mov
hlt
fwait
xor
cmp
fidivrl
xchg
mov
sbb
ljmp
insl
jnp
push
jg
add
js
in
sub
shlb
test
in
cs
std
inc
jl
fidivrl
cmp
adc
pop
icebp
xor
ja
add
movsl
jae
loope
sbb
and
xchg
sbb
in
jo
mov
xchg
or
movsl
inc
jnp
sti
loope
pop
es
dec
pmaddwd
lods
aaa
ret
sarl
mov
cli
inc
push
and
cmp
loop
ja
mov
lods
and
jae
and
leave
aas
insl
pop
push
jnp
cwtl
push
shr
add
lock
pusha
ja
pop
imul
add
push
sti
das
pop
xchg
int
daa
add
xchg
in
pop
gs
cmp
add
mov
add
cmp
aaa
jnp
cmp
jmp
in
and
arpl
fistl
xchg
mov
bound
pop
imul
int3
sti
add
loop
jne
inc
sub
jecxz
inc
out
movsb
aas
mov
mov
dec
pop
insb
cmp
lods
dec
jnp
daa
jns
adc
aas
push
adc
out
sub
xor
pop
scas
hlt
pop
jnp
or
or
fistpll
repnz
nop
in
xchg
mov
sbb
cmp
xor
xchg
or
insb
mov
xor
adc
inc
leave
call
jnp
stos
adc
int
pop
push
mov
cltd
jae
outsb
jmp
fcmovnbe
lods
pop
jne
jnp
xchg
fnstsw
rorb
mov
in
mov
add
sbb
dec
jnp
jle
jp
dec
test
jnp
ficomps
inc
fcmovne
dec
push
dec
push
notb
push
std
xor
mov
outsl
inc
cld
xchg
cmp
imul
lea
inc
repnz
and
push
in
xchg
jnp
pushf
aaa
sub
in
dec
jnp
cli
inc
xlat
push
imul
mov
mov
jae
sbb
inc
xchg
cmpb
mov
inc
push
je
lock
jnp
pusha
in
loop
insl
inc
jnp
mov
mov
push
xlat
rcrb
or
popa
lea
fwait
add
movsb
rorb
loopne
pop
and
fistpll
lret
dec
mov
imul
push
sbb
pop
movq
and
pop
cmpsb
dec
push
pop
push
cmp
cwtl
aas
sbb
mov
fwait
inc
jnp
xor
sub
jecxz
jnp
lret
sti
add
test
xchg
or
inc
dec
lock
xor
mov
jae
push
xor
push
in
sub
inc
push
jns
push
test
jbe
mov
lahf
jle
sti
ret
mov
jbe
push
fdivs
sbb
jne
imul
mov
xchg
xor
sub
fisubrl
jg
lret
in
adc
in
outsb
or
sub
adc
pop
clc
pop
jnp
in
cmp
les
jnp
faddp
xchg
push
pop
je
jnp
inc
movups
lods
dec
int
jle
jb
scas
mov
sbb
xchg
jmp
out
jnp
cmpsb
enter
in
cmp
fcmove
jb
mov
les
leave
loopne
mov
mov
xor
jp
clc
sbb
inc
cmpsb
sbb
arpl
sub
je
jnp
mov
mov
stos
mov
int
aam
mov
cli
cmp
xor
pop
push
jo
xchg
cs
jae
popf
jnp
ret
scas
xor
std
repnz
mov
xchg
imul
repz
mov
cmp
jo
iret
shl
addb
jg
lahf
xor
push
pusha
jns
repnz
cmp
jbe
cs
mov
and
sub
push
mov
jmp
mov
loop
test
jnp
pop
sbb
pop
jbe
mov
bound
std
xor
cs
adc
mov
pop
mov
cmp
call
push
adc
das
cwtl
out
or
icebp
call
and
mov
lret
addl
aaa
loop
push
jnp
shrl
jbe
into
inc
sbb
movb
and
jnp
pop
push
icebp
adc
mov
dec
mov
lcall
imul
loop
dec
lret
rolb
in
test
sub
jnp
iret
sub
mov
push
test
arpl
jmp
jbe
xchg
add
or
pop
and
inc
push
jne
aas
movsb
aad
inc
imul
dec
dec
jb
mov
stos
mov
jnp
pop
dec
call
push
mov
adc
test
cmp
pop
sub
gs
pop
or
push
and
daa
sbb
push
dec
pop
dec
mov
dec
repnz
xor
out
les
push
ljmp
cmc
clc
cmp
dec
cmpsl
jp
jo
pop
mov
mov
jnp
fcmove
lods
cmp
pop
jnp
mov
imul
xor
fwait
cmp
hlt
jnp
testb
lahf
jg
stc
jnp
inc
sarb
cli
clc
mov
pop
or
das
push
xor
jnp
push
faddp
shrb
pop
xchg
aam
daa
mov
xchg
add
xchg
imul
xor
mov
inc
mov
xchg
cmp
xor
mov
mov
add
pusha
vpshuflw
cmp
or
aad
jp
lods
inc
inc
mov
orb
xchg
or
sti
inc
mov
pushf
sub
outsl
jnp
xchg
jge
cmp
cmp
pushf
xchg
jnp
push
orl
sub
xor
es
bound
xor
test
imul
jnp
arpl
mov
add
push
add
dec
adc
sub
ss
jp
mov
dec
dec
xchg
mov
int3
push
stos
pop
sbb
imul
mov
into
cmp
pop
jnp
ss
adc
mov
cmp
sub
shrl
sbb
adc
jnp
dec
int3
cmp
sbb
mov
js
shrl
scas
subb
stc
aas
cmp
repnz
lock
sarb
mov
jne
mov
mov
mov
pop
shr
inc
and
ss
andb
stos
jnp
push
mov
sahf
jnp
xchg
lods
mov
or
pop
and
and
mov
int
and
jae
lret
jnp
dec
lods
mov
insl
data16
aaa
dec
incl
clc
jnp
jb
stos
mov
imul
cli
jbe
out
jnp
xchg
sub
lods
daa
ljmp
js
jns
loop
pop
add
ss
jae
add
je
pushf
mov
js
test
jge
jg
out
sti
sub
negl
stos
adc
mov
cmp
sub
stc
or
pop
jnp
loope
rorl
stos
jnp
or
aaa
cmp
bound
idivb
aas
int3
rorl
add
pop
mov
lock
sti
dec
test
into
aaa
xorb
sbb
jecxz
jnp
xchg
movsl
fbstp
int
into
or
not
xchg
dec
scas
nop
and
inc
xor
or
repz
jno
pop
jnp
repnz
add
mov
push
dec
and
insl
mov
fldt
add
into
jnp
call
jp
dec
test
jae
mov
cli
xchg
pop
jnp
scas
shr
shll
das
popf
dec
and
or
jnp
cmpsb
xor
ret
sub
and
cs
inc
fidivrs
repnz
jnp
push
xor
jnp
jb
adc
inc
lcall
mov
cmp
jb
dec
cmpsb
push
ja
mov
aam
aad
ljmp
jp
int
mov
mov
mull
repnz
into
mov
cmp
mov
and
pushl
cltd
and
imul
sub
sar
xchg
jnp
xchg
pushf
xchg
bnd
mov
lods
or
push
daa
mov
lods
xchg
lahf
dec
fmuls
movsl
xchg
jmp
mov
push
nop
je
dec
push
imul
cltd
cmpsb
lcall
and
jae
inc
cmc
es
jnp
mov
clc
loop
mov
imul
add
ret
repz
mov
stc
jnp
loope
jns
adc
sbb
outsl
mov
fcmovne
sub
and
dec
jle
fwait
sub
and
ret
sbb
mov
lret
mov
pop
sub
mov
xchg
daa
pop
mov
pop
cmp
jnp
loopne
and
cmpl
dec
popf
lock
fld
mov
cmp
mov
fimull
adc
mov
dec
sub
pushl
jecxz
jnp
cwtl
insl
xor
sbb
xor
mov
outsl
cmpsl
sbb
mov
or
jmp
lock
repz
and
sahf
mov
pop
xchg
imul
in
mov
stos
cwtl
cmp
push
inc
mov
add
pop
js
sti
icebp
lret
cmp
rcrb
in
mov
mull
fstp
xchg
sti
aaa
mov
lods
montmul
cmpsb
cmpb
mov
fdivrs
fidivs
and
mov
and
fwait
xor
jnp
cmpl
ret
cmpsl
add
sub
sub
jnp
cmp
ss
mov
lahf
sbb
arpl
pop
cwtl
jp
imul
rolb
inc
and
outsl
imul
into
imul
or
cs
ja
gs
loope
sbb
jne
loopne
mov
xor
jno
and
jnp
cli
sarb
mov
and
jp
dec
push
add
in
jo
enter
cli
sub
shll
shrb
adc
jae
sbb
fisttpl
mov
xchg
add
cmp
jnp
pushf
adc
imul
inc
push
fdivl
mov
push
mov
mov
test
mov
dec
addr16
repnz
cli
jnp
push
cmp
xchg
das
jnp
mov
mov
fisubrl
pop
lods
movsb
insb
mov
jnp
mov
cld
clc
jnp
mov
mov
or
jp
and
into
jnp
mov
aaa
mov
xchg
inc
mov
or
mov
out
jns
dec
jnp
xlat
inc
xchg
mov
push
jnp
add
jnp
movsl
lock
shrl
or
pop
loopne
cmp
mov
rclb
push
lods
jnp
jb
fsts
pop
xor
adc
xchg
mov
jnp
into
mov
pushf
clc
scas
dec
cmp
mov
mov
fnstcw
mov
jae
pop
ret
sar
jnp
aaa
daa
xchg
pop
dec
pop
mov
fcoml
ja
jnp
js
pop
out
jns
data16
mov
cmp
bound
je
hlt
jnp
xchg
aad
xor
orb
sub
out
les
aam
lret
or
mov
btrl
jnp
mov
pop
mov
shrl
imul
ss
sub
jns
lods
jnp
out
mov
jp
xchg
jnp
and
bndstx
jo
push
lret
repz
sub
call
jecxz
jb
pop
jnp
aaa
neg
rcr
pop
sti
jnp
mov
sub
sub
cmpsb
movsl
mov
pop
fistpl
sti
dec
fnstsw
stos
xor
xor
push
ret
jnp
fidivl
cmp
call
pop
fs
lret
sub
out
jnp
or
jbe
jnp
test
lds
lods
cs
and
mov
mov
jnp
into
js
shl
pushf
cmp
sbb
push
rorl
pop
or
sub
adc
mov
ja
add
add
lock
lcall
jnp
mov
jnp
sub
shr
mov
in
mov
fnsave
int
je
xor
push
stc
dec
fstps
cwtl
aas
lcall
jnp
call
xchg
pushf
jnp
xor
mov
nop
es
sahf
sbb
dec
rcr
jno
pushf
sarl
ret
mov
loop
add
lret
lock
and
push
push
mov
pop
and
cmp
xchg
add
add
pop
push
aaa
fsubs
add
insl
sbb
ss
and
aas
sti
or
jbe
add
das
arpl
es
shll
adc
sbb
sub
xor
stos
scas
cmp
imul
je
fwait
js
lods
mov
cmp
push
movsb
call
mov
nop
sub
popl
test
bound
cmp
cwtl
aaa
pop
insl
push
mov
sbb
xchg
aas
xor
or
clc
pop
hlt
jnp
out
mov
in
add
aad
mov
or
pop
xchg
jno
sub
jnp
sbb
lcall
movsl
pop
mov
mov
or
mov
sub
add
jbe
fists
xlat
sbb
jne
jae
ss
fisubs
idivb
pushf
sbb
and
inc
jae
clc
mov
jns
add
cmpsl
and
xchg
or
insl
sbb
mov
jnp
loop
push
mov
data16
lods
push
jle
dec
imul
jg
xchg
mov
sub
in
outsl
add
jnp
leave
mov
into
jnp
cmp
out
adc
jns
ljmp
dec
xor
or
dec
push
jnp
cmp
les
out
cmp
mov
or
leave
mov
add
outsl
shrl
jae
sbb
or
jnp
lods
dec
mov
test
sarb
adc
mov
pop
push
insl
imul
ret
mov
jae
es
scas
push
bound
xchg
stos
cltd
inc
mov
dec
jnp
lret
iret
repnz
mov
push
cs
xchg
pop
dec
cmp
or
xor
lods
ret
add
jo
adc
jnp
ja
mov
pop
je
pop
jbe
ja
repz
call
mov
jbe
bound
and
sbb
repnz
jnp
cmc
ljmp
btr
sub
mov
push
lods
mov
jb
les
call
cli
push
mov
in
fisubrl
or
mov
adc
fstps
shll
mov
repnz
test
out
xchg
pop
mov
cmp
lock
dec
mov
lock
lods
jno
lcall
pop
inc
xchg
or
in
shl
aad
nop
inc
sti
sarl
int3
pop
sbb
lock
dec
pop
repnz
jb
push
jnp
test
jae
push
ja
mov
xor
xchg
popa
inc
lods
push
mov
das
sahf
push
or
lret
cs
in
daa
mov
jnp
mov
push
sbb
fisubl
pushf
imul
sbb
lods
pop
data16
scas
mov
sbb
mov
jns
mov
aad
mov
ss
cmp
imull
cmp
mov
outsl
andb
outsb
push
lods
and
aad
xor
add
cli
pop
in
fistps
pop
js
mov
fcmovne
mov
hlt
out
pop
sub
mov
jnp
xchg
movsb
aas
add
cwtl
sarl
ret
xor
mov
inc
jns
cli
bnd
mov
sub
aad
cmp
ljmp
inc
mov
je
jnp
pusha
outsl
sbb
add
jnp
loop
jmp
adc
jnp
xor
into
lret
jnp
sbb
sub
in
jnp
pop
repz
push
cs
shlb
or
ret
cmp
adc
pusha
jno
mov
or
add
mov
jo
jae
pop
iret
sub
jnp
js
mov
cmp
mov
cli
cmp
adc
xor
and
xchg
out
cmp
and
fnstenv
in
ret
ljmp
add
sub
add
mov
test
jnp
sub
je
fdivs
lret
bound
in
fsts
mov
mov
inc
sub
mov
push
cmp
mov
or
dec
lcall
insb
loop
cmc
or
jo
insl
fcmove
adc
ret
push
mov
loop
pop
out
sbb
jnp
popa
dec
in
cs
xor
jnp
dec
push
ljmp
repz
inc
mov
je
test
jae
clc
xor
sbb
in
sub
nop
cmpsl
jp
cli
cltd
cmpb
mov
mov
insl
mov
sub
push
je
xor
jo
cmc
imul
adc
jg
mov
push
fnstsw
inc
jnp
jne
movsl
jnp
pop
dec
jo
js
lods
jnp
sub
mov
sbb
pushf
push
shl
and
or
insb
fidivrs
and
jo
xchg
js
pushf
sub
adc
inc
push
das
mov
aaa
jae
dec
or
imul
daa
dec
in
jnp
inc
pushf
clc
fsts
jb
cmpsl
cmc
pop
lods
mov
sarl
mov
ds
jnp
jo
sub
mov
js
ficoms
push
mov
int3
dec
mov
pop
mov
aaa
je
pop
mov
push
and
js
jg
jp
inc
js
push
jmp
push
jnp
xchg
cli
mov
mov
xor
and
divb
fwait
push
sub
add
in
and
xchg
mov
xchg
ljmp
loope
jg
rorb
jnp
mov
insl
dec
mov
cmp
pop
sbb
add
pop
jnp
lds
js
jl
mov
mov
loopne
bound
ljmp
imul
jns
aas
mov
aam
cld
jne
aam
data16
daa
enter
popf
cmp
fidivrl
sbb
pusha
fcoms
adc
mov
mov
pop
cmpsb
int
or
fdivs
adc
mov
adc
shll
sbb
lea
mov
xchg
sub
cs
push
cmp
jmp
bound
dec
addr16
xor
pushf
cmp
iret
jl
hlt
jns
mov
in
sbb
or
in
lods
pusha
aaa
add
popf
pop
jecxz
lahf
mov
ret
fiadds
nop
cmp
mov
and
test
shrl
pop
fcomps
jae
pusha
mov
loope
aad
mov
mov
jge
mov
jae
mov
pusha
daa
in
scas
mov
fwait
sub
aaa
xchg
pop
scas
jae
lods
pop
clc
gs
faddl
push
pop
cmp
inc
xor
cwtl
jne
pop
lret
or
cmp
jns
lods
mov
jae
in
jecxz
jb
pop
and
outsl
es
mov
or
jnp
jne
mov
call
imul
jo
jnp
and
adc
xchg
fidivrl
movsb
je
ljmp
fidivrs
push
in
fistpll
jne
cmp
jmp
cli
mov
in
mov
into
stc
mov
jnp
xor
dec
mov
hlt
sarb
sub
cmpsl
out
js
xchg
mov
imul
jnp
push
sub
mov
mov
mov
xlat
jnp
inc
repnz
jne
push
adcb
and
jge
sub
lret
mov
xor
inc
in
cmpsl
prefetch
or
fwait
jge
lods
or
std
or
clc
cmp
jnp
popf
cmpl
jnp
aam
mov
movsb
xchg
xor
shrl
and
cmp
xchg
aad
xor
icebp
cltd
xchg
dec
xchg
stos
outsl
jne
out
lods
call
int3
lret
outsl
push
add
cmp
xchg
js
mov
xor
cmp
inc
out
jo
cmp
lds
sub
mov
and
or
stos
mov
cmp
jae
xchg
xchg
outsl
dec
jle
jp
mov
test
push
mull
xchg
shll
daa
or
rol
in
jne
inc
jae
xchg
clc
lock
sub
cmp
jae
pushf
outsb
cmp
or
sbb
jge
jnp
push
or
xchg
sub
in
js
fsts
push
and
test
jns
push
push
call
adc
jnp
pushf
mov
sbb
lods
jnp
xchg
and
jnp
arpl
fdivs
mov
and
adcb
and
adc
jnp
test
into
dec
in
dec
pop
add
jae
in
jbe
mov
shll
fisubrl
sub
dec
push
cmp
insl
fs
xchg
jg
je
jnp
ret
push
sbb
cli
push
adc
lahf
das
cmpsb
mov
push
jnp
lret
in
out
fistpl
out
fmuls
mov
push
push
mov
ljmp
xchg
or
xchg
shlb
mov
dec
sub
or
aam
lea
imul
daa
outsb
push
lock
or
pop
lret
inc
out
outsl
test
jno
mov
sub
add
fimull
fnstcw
loopne
lret
xchg
enter
add
and
mov
daa
fdivrl
or
pop
cmpsb
cmp
dec
sahf
test
or
pop
std
jnp
bound
stos
subl
fwait
jnp
or
sbb
dec
mov
sbb
adc
in
inc
and
out
jnp
inc
push
cmp
jae
int
sbb
filds
lods
outsl
jno
or
mov
bound
xchg
dec
jnp
or
push
aam
inc
jnp
stos
pop
pop
lds
repz
aas
scas
fnsave
cwtl
in
jns
sbb
pop
add
and
jp
je
cmpb
mov
inc
cmp
pop
mov
enter
lods
lahf
popa
insb
lock
rolb
pushf
insb
add
add
lods
jnp
iret
mov
and
ljmp
test
xchg
outsl
jno
push
push
jnp
or
cmp
jnp
xchg
inc
jnp
fucomi
inc
pop
movl
add
xor
push
jnp
lods
js
jnp
lcall
jnp
or
mov
xor
jnp
sub
cwtl
jnp
pop
fcomps
test
aam
mov
out
mov
sbb
lret
jb
sub
jp
jnp
int
stos
inc
lds
lock
fdiv
les
jnp
cmp
xchg
jnp
add
jnp
lods
dec
arpl
adc
aas
shlb
enter
jnp
xchg
adc
mov
cwtl
add
insb
inc
fisubrs
adc
popa
in
jne
mov
mov
push
ljmp
pushf
jbe
cmpsl
rclb
inc
fisttpl
divb
out
gs
jno
mov
dec
cli
xor
cmpsl
xchg
jnp
mov
or
jnp
cmc
call
mov
dec
mov
test
lcall
push
inc
cmp
adc
leave
mov
sub
mov
mov
inc
fmulp
jae
cwtl
add
in
pop
jno
mov
sub
les
lods
sbb
fwait
mov
sub
add
nop
add
mov
xor
jnp
lea
sti
lods
mov
or
jne
jb
mov
push
imulb
outsl
fcmovb
mov
jnp
repnz
ds
cmp
sub
fimuls
cmp
lods
les
scas
out
and
sub
outsb
outsl
inc
cld
pushf
push
in
sti
sahf
call
push
loopne
sub
mov
sub
mov
test
xor
push
add
sbb
stos
and
enter
je
or
imul
call
insl
pusha
add
fimull
xlat
inc
ja
clc
lods
push
mov
push
jge
dec
test
int
mov
nop
jecxz
movsl
lret
jae
outsl
loope
or
pop
mov
and
ss
adc
jnp
lods
in
xchg
daa
xchg
pop
outsl
rcll
xchg
xchg
add
inc
mov
adc
pop
jnp
mov
stc
out
mov
sti
bound
xor
icebp
jnp
popf
out
push
pop
fsubrs
mov
xor
jne
mov
adc
push
jnp
stos
push
cld
mov
jbe
adc
or
popf
call
icebp
bound
add
pandn
jnp
ljmp
jnp
push
hlt
cmp
push
and
addl
fnstenv
cmpsb
push
jmp
fsubrs
scas
xchg
or
jnp
mov
sahf
stos
jnp
push
jecxz
fisttpl
mov
gs
add
fisttpll
adc
movhps
jnp
ds
out
mov
and
jnp
cld
fwait
sub
and
jnp
repz
divl
xchg
lock
or
xchg
js
mov
or
mov
mov
divl
pop
stos
jnp
mov
dec
pavgw
sbb
push
mov
lds
fdivrl
inc
push
das
outsl
mov
ljmp
stos
push
ja
sbb
cmp
pushl
jnp
cmp
je
pop
fstpt
jecxz
or
jl
and
arpl
test
dec
cwtl
subb
push
aaa
jb
dec
addl
cmp
call
ja
jp
mov
jbe
sbb
pop
fwait
xor
or
jnp
ficompl
adcl
push
arpl
jae
stc
push
pop
sbb
loop
mov
cmc
inc
aaa
jnp
adc
jmp
jnp
and
xchg
mov
fidivrl
cmc
pop
pushf
call
into
imul
xchg
xlat
xchg
jae
iret
jge
sarl
mov
mov
cli
sbb
aaa
pop
push
imul
cmp
loope
dec
jne
mov
or
jbe
pushf
jns
imul
aad
into
xchg
ficomps
not
mov
mov
adc
xor
push
or
jae
push
fwait
jbe
fnstcw
out
push
xchg
push
dec
fnstsw
push
call
or
jg
jnp
rol
stos
pop
test
repnz
xchg
rcll
xchg
bts
outsl
repnz
xor
jnp
and
adc
imul
inc
or
xchg
aas
jp
mov
insb
rolb
cmp
mov
sbbb
inc
lcall
scas
jmp
xchg
add
loope
imull
jnp
rcrb
xchg
mov
pusha
das
mov
test
push
dec
adc
jne
xlat
cli
inc
mov
jbe
inc
or
pop
mov
and
popf
clc
clc
js
ficoml
les
mov
mov
lret
or
cli
addr16
ds
clc
cwtl
das
mov
jnp
out
cmp
jno
dec
cmp
pop
out
and
ss
jnp
js
or
jnp
pop
loop
dec
pop
scas
or
cmpl
mov
cmp
pop
jnp
test
xor
pop
mov
cmc
pop
lret
stos
dec
sub
adc
int
push
jnp
sub
jnp
mov
lahf
add
sbb
jns
mov
jnp
rcll
dec
sub
xchg
adc
jnp
sti
in
ljmp
sub
outsl
jge
mov
jp
jnp
push
sarb
jecxz
jnp
shl
cmp
cli
fisttpll
rcr
jle
jnp
sbb
pushf
dec
sbb
xor
pusha
xor
sbb
mov
or
hlt
in
jnp
xchg
inc
cld
xchg
xor
daa
mov
testb
jnp
cmp
or
sbb
fs
lea
add
cmpsl
insl
inc
je
ret
jecxz
pop
adc
insl
rolb
jge
jno
cmp
adc
fsubr
sti
or
sahf
mov
mov
stc
imul
cmpsb
jnp
cmp
add
out
imul
mov
mov
add
les
add
mov
cmp
xchg
dec
and
xlat
nop
lock
jnp
mov
dec
cmp
mov
ficoms
test
hlt
or
popf
stos
jg
into
popa
hlt
sub
fidivl
jo
or
cld
ss
jno
mov
jecxz
cmpsb
dec
cmp
mov
mov
sub
adc
ds
push
pop
mov
cmp
pop
fstpl
cmpsb
sarb
xor
lret
cltd
mov
pop
jnp
outsl
rcr
lea
hlt
xchg
jnp
cmp
ret
sub
out
or
sbb
shll
or
je
jnp
cmp
mov
jnp
push
daa
data16
lcall
push
cmp
mov
push
test
jae
push
pop
xor
inc
xor
cmp
add
ret
mov
mov
jns
fiadds
cmpsb
jnp
cmp
and
cli
add
imul
mov
mov
jnp
shrl
js
inc
pop
stos
ja
pop
das
ret
sub
dec
mov
repnz
ss
jnp
mov
outsb
push
and
jnp
mov
lock
pushf
sbb
add
push
jnp
xorl
mov
fsubl
cwtl
or
outsl
js
jnp
sbb
mov
lock
sub
fwait
or
dec
push
cmp
icebp
in
mov
outsl
int
and
xor
jnp
jno
leave
fistl
mov
pop
sub
dec
in
jg
pushf
push
imul
mov
mov
mov
pop
jo
clc
in
ja
stc
jns
popa
outsl
or
jnp
or
jnp
popf
add
lret
aaa
enter
mov
sbb
jnp
push
cmp
mov
outsb
push
and
hlt
lods
jnp
sub
js
movsb
aad
outsl
sarb
pop
js
fistpl
adc
add
sahf
add
pop
jg
into
stc
jnp
jmp
push
sbb
es
mov
jnp
inc
int
mov
xchg
jnp
sub
push
in
jnp,pt
std
adc
jg
ja
int3
jp
pushf
stos
scas
pusha
aam
loope
jnp
and
inc
xchg
sti
sub
mov
mov
scas
jmp
pop
push
jb
jnp
je
and
sub
movsb
and
pop
out
pop
jo
jnp
cli
test
push
ret
sub
jae
mov
push
fsub
jnp
cmp
mulb
push
js
mov
lods
inc
outsl
int3
aaa
lock
mov
mov
cmp
add
ljmp
rcr
xchg
outsl
xor
jnp
lea
adc
cmpsb
ficoms
ss
fidivl
pop
jns
jnp
xchg
xor
adc
imul
push
out
xor
popa
mov
lods
push
rolb
pushf
sbb
push
jnp
xchg
aam
mov
dec
lods
push
ret
push
dec
js
jb
nop
jnp
fidivrl
jnp
jmp
mov
sbb
hlt
js
test
outsb
mov
xor
jge
leave
fwait
lods
cmp
rcll
lahf
int3
xor
outsb
cltd
in
sbb
cwtl
mov
jp
push
pushf
dec
pop
lcall
loopne
push
jnp
scas
mov
stos
lahf
add
outsb
xchg
xor
and
pop
insl
popa
or
cmpsl
arpl
sarb
sub
das
and
pushf
cmpsb
adc
or
ja
jbe
mov
cltd
jnp
xchg
repnz
mov
adc
sub
repz
sub
js
sbb
mov
out
push
outsl
cltd
shr
in
int
mov
push
sub
insl
adc
cmp
das
es
fmuls
aad
add
jae
sbb
out
jns
mov
mov
mov
jnp
add
mov
aad
dec
lods
shll
int
pop
mov
jecxz
mov
lock
xchg
cwtl
lea
sahf
push
jnp
out
xchg
inc
rol
jnp
dec
int3
gs
mov
mov
inc
jmp
jnp
orb
jnp
mov
aaa
jmp
xchg
pusha
jnp
adc
xchg
or
lret
dec
mov
mov
pop
jecxz
cmpsl
cld
or
jnp
mov
fistl
dec
fnstcw
shl
mov
lea
sub
push
dec
mov
pop
push
pusha
xchg
repz
inc
stos
daa
lods
push
jnp
clc
xor
sbb
inc
jnp
xchg
xchg
mov
imul
xor
xstore-rng
stc
cmp
mov
inc
dec
fisubl
jmp
xor
inc
cmp
test
or
pusha
xchg
adc
xor
add
jnp
mov
jb
xchg
lcall
mov
mov
enter
fs
dec
xor
stc
cmp
jae
dec
test
mov
jnp
pop
daa
xchg
loopne
push
aas
mov
mov
xorl
fstpl
lret
out
insl
cvtdq2ps
icebp
or
movsb
xchg
outsl
popl
aam
xor
jnp
mov
fwait
ret
xchg
jo
pop
lods
inc
cmpsl
jnp
scas
or
mov
mov
mov
dec
jp
gs
fcom
push
inc
lahf
adc
dec
mov
scas
out
add
jnp
out
ljmp
pop
mov
jl
jnp
add
rcl
ljmp
pop
pop
mov
imul
insl
je
icebp
jle
js
fnstcw
mov
ds
mov
mov
mov
fildl
cltd
insl
fistps
pop
push
sub
nop
jnp
clc
popa
lock
cmp
pop
lahf
pop
jp
add
insl
pop
push
movsb
mov
add
ja
sbb
shlb
divl
aad
add
out
push
jecxz
jnp
adc
push
jo
sbb
push
mov
inc
gs
mov
bound
lods
fsubs
add
jae
add
iret
mov
loope
rolb
sbb
retw
subb
cwtl
ljmp
dec
inc
mov
push
jmp
jae
jbe
inc
in
xor
and
cmp
or
jns
fists
hlt
into
imul
mov
cli
ljmp
mov
mov
pop
jnp
adc
jne
test
mov
or
dec
and
fidivs
mov
pop
dec
dec
xchg
push
cld
jnp
sahf
fisttps
jnp
jmp
push
lods
call
push
mov
sub
mov
xchg
int3
jnp
mov
adc
xor
scas
jns
jnp
in
adcl
xor
stc
jbe
cs
hlt
jnp
lret
data16
loopne
lret
mov
jge
xchg
mov
jp
push
cs
xchg
lods
outsl
test
jnp
cmp
sahf
loopne
daa
out
and
jnp
and
sub
popa
sahf
enter
sarb
pusha
lret
fstpt
lcall
lods
jae
imul
sub
lds
leave
mov
mov
add
jnp
pop
ja
pop
test
dec
fsubr
sbb
jnp
lahf
mov
inc
xor
ret
mov
aaa
sub
stos
mov
cs
jnp
xor
into
iret
test
mov
xchg
test
cmp
jnp
sbb
leave
jnp
push
ljmp
cld
es
mov
jnp,pt
clc
sub
jmp
xor
or
jle
aas
jnp
out
in
scas
cs
ja
notb
pop
shrb
outsl
xor
cmpb
call
das
jnp
lahf
idivb
mov
mov
jnp
mov
xchg
sub
das
test
cli
lods
dec
and
repnz
and
cld
sbb
mov
cmpsb
mov
mov
and
loopne
hlt
testl
jnp
mov
or
mul
arpl
push
xlat
pop
icebp
and
and
xchg
lcall
lock
jle
mov
jnp
ss
xor
push
dec
xchg
mov
out
gs
cmp
mov
shll
dec
pushf
cs
sbbb
pop
or
leave
insl
dec
jge
jnp
xor
jno
clc
cmc
jle
shll
mov
imulb
loopne
cltd
cmp
jp
push
push
lods
jnp
mov
rorb
jmp
pop
test
imul
sub
fistpl
stos
xor
stos
loop
pop
mov
jne
fidivl
adc
mov
out
jnp
xchg
xor
mov
push
test
js
cmp
pop
cmp
pushf
xor
and
icebp
clc
jnp
cmp
jmp
jl
popa
mov
js
sti
pop
or
loop
aaa
xor
je
fdivrs
sub
cmp
negl
fstps
outsl
inc
ret
mov
sarl
je
rol
stos
imul
xchg
push
out
repz
pop
jae
sbb
xchg
mov
dec
jnp
fldt
mov
scas
cmp
cli
je
inc
mov
dec
std
fmuls
push
jne
push
frstor
xor
lcall
jbe
cmp
lea
sahf
inc
dec
pop
inc
das
adc
mov
stc
fistl
jnp
and
pop
mul
mov
mull
jnp
pushf
mov
lods
daa
insb
std
divb
jnp
je
push
fidivl
add
movsb
mov
sbb
in
push
enter
inc
scas
testb
loopne
xor
iret
dec
cmp
or
sub
or
aad
icebp
mov
loope
dec
lcall
clc
xor
lock
mov
mov
pusha
mov
jae
dec
mov
and
lcall
pop
dec
or
jnp
fwait
cmpsb
ljmp
pusha
stc
scas
cmp
jnp
pop
jg
jnp
aas
clc
jle
push
or
jae
jnp
lods
sbb
insb
jnp
in
dec
sub
mov
or
jnp
mov
outsb
fcomi
xor
jno
xor
imul
outsl
or
call
mov
inc
mov
lods
insb
mov
sub
sbb
cmp
mov
lea
dec
jnp
cs
addr16
cmpsl
mov
ja
jnp
push
cmc
dec
pop
icebp
sbb
lods
mov
into
push
xor
in
add
cmp
enter
xor
rclb
pop
jnp
ficompl
mov
mov
lods
or
lret
lahf
mov
and
mov
jnp
push
hlt
test
jae
dec
dec
mov
pusha
or
insb
xor
movsl
add
hlt
mov
fcompl
outsb
negb
pop
je
mov
sbb
mov
xorb
cmpsl
jg
xchg
and
ret
imul
xor
ss
lahf
pushf
jnp
movsl
mov
xchg
rorl
jae
sahf
cld
sbb
xchg
insl
and
rdpmc
adc
ljmp
pop
adc
popf
iret
or
pop
test
jns
loope
es
xor
cmpl
pop
ja
jnp
lods
out
int3
daa
push
sarl
test
cmpsl
fsub
cli
jnp
xor
or
add
or
or
jbe
cmpsb
pop
daa
adc
jg
sti
in
sarb
arpl
sarl
mov
lock
xchg
push
dec
jnp
sbb
cs
cmp
add
insl
mov
jnp
lods
js
pop
outsb
push
bnd
iret
ljmp
sub
enter
jg
stos
imull
lcall
mov
imulb
pop
ja
data16
or
std
and
mov
jae
cmpsl
inc
adc
aad
mov
gs
add
cmp
ret
mov
xor
insl
push
call
sarb
shrl
cmpsb
sbb
mov
mov
ret
inc
and
mov
dec
mov
lds
repnz
fidivl
xchg
pop
ret
jnp
jle
filds
divl
push
aaa
cld
add
dec
std
sbb
ja
pusha
repnz
bound
cmp
cmp
or
jae
push
mov
jnp
sub
push
mov
icebp
cmpl
sbb
mov
imul
dec
mov
push
fnsave
jmp
or
pop
lods
adc
or
mov
das
mov
xor
into
sti
jnp
mov
mov
mov
mov
xchg
dec
xor
jnp
pop
jns
or
subb
and
dec
dec
add
mov
stos
adc
mov
xor
imul
or
or
dec
pop
lods
mov
lret
inc
ja
lcall
or
pop
jmp
jnp
sbb
add
popf
divb
je
in
mov
daa
loope
sti
mov
xor
xor
jae
mov
aas
repz
in
xchg
dec
jo
push
imul
lock
bound
or
call
cmp
sbb
add
push
ja
mov
lahf
mov
jnp
fstpl
movsb
daa
xor
insb
js
inc
out
cmpsb
push
sbb
bnd
push
xlat
jnp
jb
lods
test
stos
stos
mov
insb
das
pushf
out
sbb
dec
movsb
in
lahf
jnp
mov
and
jnp
fistpll
lods
dec
mov
aas
jl
sbb
in
or
mov
in
sbb
fsts
jge
es
lret
cmp
xorb
push
add
loop
mov
jns
sub
cmp
in
fcmovnbe
stos
int
jnp
xchg
ljmp
ss
into
mov
test
inc
add
add
pop
ss
mov
sbb
out
push
cli
fistpll
inc
imul
jl
mov
insb
sub
pop
xlat
cmp
outsl
jnp
shr
js
sbb
add
in
pop
mov
sub
cmpsb
out
js
mov
jns
mov
jno
cltd
jnp
sub
sub
push
mov
jb
pop
cld
popa
ljmp
xor
in
jle
push
jnp
pusha
aas
inc
or
or
push
sub
popa
divl
cli
xchg
in
jnp
loopne
fsubrs
lcall
cmp
push
arpl
lods
fistl
lods
jno
fcomps
jnp
fdivl
inc
sbb
pop
sub
mov
insl
sarl
adc
cs
lret
jns
and
cmpsb
xorb
mov
packuswb
dec
insb
mov
xor
or
call
lea
stos
mov
mov
loope
out
jnp
or
lods
es
hlt
jnp
mov
cmp
repz
enter
pop
lods
cwtl
sahf
cmp
mov
mov
cmp
jb
xchg
fcoms
jecxz
jnp
outsb
dec
dec
mov
sbb
insb
adc
fwait
adc
push
jno
stc
mov
adc
push
cmp
into
outsl
xchg
or
popa
jnp
iret
clc
sbb
fiaddl
jnp
ja
dec
jecxz
and
sub
and
mov
sbb
scas
inc
cmpsl
jp
pop
jnp
lcall
jbe
push
out
mov
mov
and
pop
xlat
adc
arpl
jnp
pop
ret
cmpsl
or
call
mov
fnstcw
push
or
icebp
jecxz
idivb
sbb
mov
bound
mov
push
sub
jnp
push
jbe
mov
stos
pop
cmp
addb
jnp
jne
and
js
xor
stos
mov
jnp
sub
mulb
movsl
mov
add
sbb
mov
jns
lods
xor
fwait
sbb
xor
arpl
jns
ljmp
dec
and
outsb
xchg
mov
and
sarl
lods
or
pop
hlt
push
in
jbe
in
lods
ljmp
jno
mov
xlat
cmpsb
adc
rcrb
mov
add
pusha
pop
fidivrs
fidivl
lods
push
cmpsb
out
adc
xchg
insl
inc
jnp
xorb
cmp
fs
cmpsb
sti
jns
hlt
sbb
cmp
repz
adc
mov
leave
aad
rcrb
or
int3
pusha
jne
sahf
and
stc
mov
aaa
in
jb
sbb
shr
or
clc
gs
movsl
xor
mov
sub
fsubrp
scas
mov
or
jp
insl
mov
pop
dec
and
jns
adc
pop
rorl
cmp
jl
dec
in
cmp
xorl
cwtl
adc
jnp
cs
jns
dec
cmp
or
and
cmp
cmp
sbb
roll
sti
stos
call
xlat
movsl
xor
add
sub
and
mov
cltd
pop
jnp
add
icebp
or
push
popa
cwtl
shlb
xchg
scas
pop
jnp
pushf
add
neg
ud1
shl
cmpb
loopne
or
jnp
xor
jno
dec
xor
dec
push
push
cmp
ja
int
jnp
mov
pop
cwtl
jnp
xchg
dec
push
mov
cmp
xor
push
and
jmp
xor
call
jnp
and
aam
cmp
nop
pop
sbb
jnp
js
clc
ret
jp
xchg
imul
gs
or
das
and
jnp
rcr
mov
popf
loop
sub
sub
inc
cmpl
jae
les
mov
jns
insb
sbb
adc
lods
mov
out
lods
ss
insl
and
inc
dec
mov
js
pop
rorb
scas
outsl
out
cli
cmp
mov
call
pusha
jb
or
jbe
fstpt
jnp
xchg
mov
or
push
jnp
insb
push
inc
inc
or
int
outsl
dec
dec
das
xchg
lcall
add
dec
bound
xor
cmp
arpl
lods
leave
enter
iret
jb
jnp
xchg
popf
sti
ljmp
scas
inc
inc
in
imul
push
jo
jnp
push
lea
and
xchg
aas
add
call
shr
pushf
loop
dec
add
sub
aad
jp
in
in
stos
mov
cmpb
jo
mov
mov
fdivl
sub
xor
jle
or
dec
clc
hlt
sbb
xor
ret
mov
out
jnp
pop
sub
jns
test
or
xor
dec
js
aas
add
aaa
or
js
jnp
xor
mov
xchg
popl
outsl
inc
mov
repz
sub
mov
pop
and
stos
jnp
arpl
cld
lahf
adc
mov
jno
mov
sbb
pop
xchg
jmp
add
sti
mov
gs
dec
or
into
es
mov
pop
pop
adc
pusha
fwait
mov
jnp
mov
sbb
jecxz
imul
pop
jnp
cwtl
jae
loop
sub
jnp
ss
stc
push
jb
inc
jnp
pusha
mov
pop
jp
jne
adc
sbb
imul
std
mov
je
loop
mov
jg
test
mov
and
xor
imul
fdivs
push
pop
push
in
jnp
loopne
mov
lea
push
jnp
cmpsl
test
xor
movb
sti
jnp
dec
pushf
or
add
enter
push
pusha
stos
xor
adc
out
cli
xor
insb
mov
not
xchg
cmp
and
loop
inc
or
cmp
jnp
pop
loop
ds
xchg
inc
jnp
mov
pop
xor
lret
arpl
scas
jge
pushf
stc
xchg
or
aaa
add
jmp
lret
cmc
xor
ja
lock
and
jnp
mov
cmc
jnp
js
rclb
sub
lret
stc
iret
lea
push
cwtl
jp
xchg
aas
pop
jnp
mov
js
jnp
fnsave
jnp
xor
xor
push
lea
aas
xchg
imul
jge
jne
lcall
ljmp
pushf
sub
cld
push
in
jae
push
fwait
or
jnp
mov
jnp
cld
sub
add
push
out
lahf
pushf
out
mov
fldcw
cli
in
cmp
jnp
fildl
fidivs
sarb
decb
aaa
xlat
jmp
mov
loop
inc
call
mov
jnp
sub
fsubrp
xchg
pop
mov
pushf
cmpsb
dec
pop
in
arpl
jnp
iret
xchg
jle
push
sarl
ret
pop
pushf
sbb
dec
push
push
xchg
lret
xor
jg
xchg
mov
mov
dec
jmp
bnd
mov
mov
push
daa
push
fs
jnp
or
xlat
hlt
lods
rol
sbb
shrl
outsl
cltd
push
and
cmp
dec
aas
and
ljmp
cs
jnp
xor
dec
ret
jnp
cmpsb
sbb
jnp
pop
push
sbb
movsb
cmc
mov
jp
arpl
add
lods
decl
xor
popf
stos
or
stos
aam
pop
push
cmpsl
in
mov
or
mov
lods
std
mov
sar
js
inc
clc
dec
stos
and
pop
mov
popa
cmp
aad
jae
jnp
stc
sub
fsubs
pop
sub
dec
jmp
pop
xchg
outsb
cmp
int
and
inc
xchg
jnp
adc
or
out
out
dec
mov
or
jnp
fildl
xchg
jnp
dec
daa
cld
aad
mov
xor
jnp
add
outsb
lret
push
les
insl
sub
imul
daa
dec
push
arpl
cmp
loope
testl
lcall
leave
push
pop
or
dec
daa
cmpsb
jae
and
add
gs
push
icebp
xor
xor
dec
jne
jnp
fcoms
pop
and
xlat
fbstp
jbe
mov
bound
inc
scas
and
imul
loop
mov
jnp
pop
sti
push
xor
in
fdivrs
cli
das
dec
loope
stos
jb
lods
adc
jle
shll
repz
xor
dec
xchg
fstl
iret
mov
ja
mov
imul
sbb
outsl
jnp
adc
rorb
xor
popf
jnp
out
aas
iret
push
movsb
mov
jnp
jmp
shrb
js
test
jnp
lret
mov
cltd
jecxz
jno
ret
or
xchg
xchg
fwait
pop
lahf
dec
sti
mov
mov
xchg
cli
lods
push
pop
jne
jnp
adc
jnp
xchg
inc
fstl
aad
sub
cmp
xchg
insb
jmp
push
dec
js
jecxz
mov
jbe
push
in
jb
mov
jnp
cmpsl
cmp
loopne
gs
pop
fimull
dec
jnp
lods
lea
jp
mov
stc
sbb
mov
jnp
montmul
cmpsb
orl
mov
in
mov
out
pop
fistpll
mov
cs
jnp
adc
shll
xchg
jnp
and
xor
imul
scas
repnz
jle
jg
in
sarl
xor
or
mov
pop
inc
jnp
ret
add
jnp
sbb
popf
cmp
cmc
xchg
jnp
popa
jns
cwtl
xor
adc
cmp
imul
scas
sbb
pop
jecxz
scas
jnp
lea
push
je
jnp
call
mov
jnp
in
sbb
nop
fmull
sub
js
cmp
loopne
xchg
test
sbb
fwait
stos
pushf
or
fidivl
xchg
inc
cmc
frndint
jae
inc
jbe
ja
xorb
dec
sub
aam
mov
lods
ljmp
mov
jo
cmp
inc
bound
lret
cmp
cmpsl
pop
enter
in
outsl
shrl
jnp
ja
lods
mov
cvtpi2ps
mov
mov
stos
xchg
sub
pop
or
mov
inc
out
cli
shll
cmp
push
inc
mulb
jnp
insl
inc
add
cwtl
dec
mov
jbe
push
xor
aam
repnz
ljmp
jnp
arpl
mov
sub
xor
jnp
cmc
pop
ret
or
enter
call
ss
jp
insb
add
outsb
lcall
outsl
pop
mov
push
jne
in
sarl
jmp
pushf
pop
movsb
test
rol
mov
cmp
jnp
mov
push
jnp
mov
pop
into
xchg
pop
xchg
in
loope
mov
cmp
add
imul
mov
pop
xchg
imul
sbb
cmp
push
fists
add
jnp
sub
shlb
int3
sarb
jo
xor
call
and
enter
jnp
xchg
pop
shrb
jb
jns
add
push
jnp
imul
or
and
mov
push
or
inc
add
pop
jnp
in
jmp
lea
jbe
ret
sub
jnp
mov
js
subl
push
in
pushf
out
imull
fcom
cmp
mov
pop
fstpt
dec
push
lret
test
dec
inc
jne
popa
hlt
imul
cmp
stos
movsl
insb
cwtl
scas
mov
jnp
es
out
js
adc
push
sbb
and
lods
clc
sti
pop
popf
lahf
cmp
mov
fcom
cmpsl
jnp
daa
sub
loopne
jecxz
inc
fcompl
not
mov
mov
rorb
dec
sub
lret
mov
sti
test
jne
xor
cli
sbb
jnp
adc
pop
ss
data16
sub
inc
outsb
das
outsl
jg
testb
jnp
rorb
movsb
pop
aad
jbe
mov
das
add
popf
fldt
pop
jnp
mov
scas
je
out
mov
cmp
sbb
dec
jp
push
sahf
les
outsl
fidivl
push
mov
stos
or
pusha
movsb
cmc
cli
clc
xlat
loope
ljmp
lods
jecxz
and
sbb
xor
cld
cmp
outsb
xor
jbe
pushf
xchg
cmpsb
jnp
pusha
dec
test
mov
fsubl
fisubrs
in
pop
int3
mov
sub
push
mov
in
imul
jb
adc
pushf
sbb
mov
cld
mov
mov
dec
popf
test
jp
sti
arpl
pop
push
out
mov
sub
push
fstl
dec
flds
jbe
mov
jnp
sbb
xchg
jo
out
sarb
fwait
lcall
cmp
mov
scas
ja
in
xchg
fidivrs
rcrl
pop
dec
mov
mov
fistpl
xlat
mov
mov
test
jae
mov
bound
dec
jnp
scas
repnz
mov
and
and
mov
int
repz
dec
dec
fldenv
mov
jns
inc
lcall
mov
pop
movsl
dec
jbe
fildl
dec
mov
icebp
adc
xchg
sbb
dec
inc
in
jecxz
xlat
jnp
jae
mov
dec
cmpsl
xor
mov
and
test
cli
xor
jnp
cmp
inc
mov
mov
ficomps
jnp
mov
test
mov
cmpb
xor
cmp
xchg
das
mov
jnp
fs
jnp
xchg
test
or
dec
frstor
arpl
stc
jnp
mov
in
sub
or
jnp
fmuls
sbb
popf
pushf
imul
cmp
adc
or
mov
lea
jae
movsb
ss
and
pop
imul
sbb
lods
jnp
cmp
fcoml
mov
cmp
out
and
icebp
lds
lods
pop
test
jae
ljmp
sbb
stc
gs
xor
pop
jnp
mov
rclb
lcall
repz
mov
hlt
cltd
jae
fsubs
cmp
inc
or
mov
cwtl
mov
scas
mov
insl
out
xchg
pusha
call
jns
stos
xchg
in
out
out
pushf
add
jnp
push
mov
les
sbb
outsb
cmp
cmpsl
jnp
jg
daa
rcll
stos
fwait
or
cltd
insb
adc
inc
ljmp
jg
fidivrl
dec
pushf
sbb
rorb
push
jnp
lods
movsb
fstl
ljmp
push
mov
or
mov
sub
loopne
jnp
sbb
jne
xor
insl
lock
pop
jnp
mov
cmpsl
xor
in
aam
insb
mov
mov
mov
aad
lcall
aaa
mov
push
add
pop
lock
mov
dec
pop
dec
into
add
out
imul
jnp
das
mov
push
in
pop
jo
cmpsl
notl
arpl
xchg
jae
outsb
out
aam
xchg
jnp
int
jno
in
fsubrl
test
mov
dec
jnp
mov
lds
out
mov
mov
lea
jnp
out
repz
sti
cmp
push
cmp
cmp
jnp
call
mov
lret
mov
mov
add
mov
repnz
or
lods
lret
sub
out
sbb
push
dec
xchg
xor
sub
ljmp
jnp
xor
pop
inc
mov
jnp
adc
jnp
pushf
nop
push
sbb
sbb
shll
clc
jp
or
ljmp
push
mov
add
and
maxps
push
out
dec
pop
xor
sbb
cmc
dec
jae
out
insl
and
dec
sbb
shrl
loop
cmc
sub
lcall
out
scas
insl
notl
lret
mov
xor
fmuls
inc
cli
aas
clc
and
jnp
lods
mov
mov
out
cmp
call
add
cmp
pop
mov
repz
mov
push
jnp
fistps
scas
inc
mov
jnp
lret
cmp
sarb
repnz
jns
scas
call
mov
pop
gs
mov
adc
lcall
pop
jnp
mov
xchg
jnp
into
mov
ficoml
call
jb
jne
out
add
xchg
out
jnp
inc
cmp
es
cli
xchg
stos
xor
mov
cmp
ret
jnp
fldcw
sbb
mov
js
insb
daa
pushf
push
sub
add
mov
fstp
das
int3
xor
outsl
jp
pushf
or
test
jae
outsb
stos
push
mov
jnp
push
dec
rorb
sub
imul
in
add
adc
and
mov
int
imul
mov
mov
sub
jae
inc
mov
jnp
fildll
dec
pushf
fdivrl
dec
movsl
or
cmp
mov
mov
sbb
fneni(8087
adc
jbe
jnp
mov
push
sarb
mov
sbb
fdivs
add
or
jnp
lret
out
sbb
clc
push
sub
dec
or
jnp
lds
and
dec
or
enter
pop
notb
mov
in
mov
sti
and
or
inc
cmpl
lds
xor
jnp
ljmp
jnp
fisubrs
pushf
xor
dec
mov
lock
xchg
inc
jae
dec
xchg
cwtl
jmp
shl
fidivrl
mov
cmp
sub
jnp
adc
xor
ficoml
outsl
call
rorb
stos
pop
repnz
lea
test
sbbb
movd
mov
push
xlat
jae
sub
push
fdivs
cmpsb
das
lods
xchg
and
jnp
fcmovu
dec
mov
and
inc
pop
ja
xor
popf
mov
or
cli
pop
mov
scas
xchg
mov
jnp
or
fcompl
jbe
xchg
sub
mov
mov
jnp
stos
xchg
sbb
sbb
and
or
mov
inc
je
mov
mov
lret
pop
shrl
fstps
jno
cmp
shrb
push
jae
ljmp
ja
inc
mov
or
jnp
sbb
jnp
ljmp
jnp
stos
sub
cmpsl
mov
imul
dec
jle
cld
jns
dec
int
jnp
pop
bound
or
jbe
xchg
xor
lods
add
jnp
xor
push
pop
sbb
or
jnp
xlat
sub
les
lods
mov
xor
sbb
loope
mov
mov
or
ja
dec
jnp
int
call
jnp
sbb
mov
jnp
out
cmp
mov
adc
nop
out
sub
lcall
sbb
stc
outsl
ret
sub
jnp
test
fisubrs
xor
pop
mov
decl
bound
lcall
sbb
pop
ss
pmulhw
lock
mov
out
call
dec
and
scas
jns
jp
stos
mov
fidivl
mov
jmp
mov
xor
xchg
or
out
sbb
inc
insb
sub
jne
ja
xchg
imul
dec
jb
lods
jns
insb
popf
jae
cmc
mov
call
adc
lock
jnp
fmuls
and
or
jae
jmp
pop
es
shrl
mov
daa
lods
fs
jnp
xor
das
pop
pusha
mov
jnp
out
cmp
mov
leave
mov
sarl
adc
shrb
add
push
clc
inc
sahf
lods
hlt
test
dec
andb
jne
inc
fistl
pop
fsubl
std
testl
mov
cmp
jnp
mov
mov
jnp
xor
pop
mov
xchg
out
in
add
hlt
sbb
jnp
bound
mov
popa
mov
lret
jb
dec
lock
jnp
push
mov
cmp
cmpsl
mov
out
out
daa
cmp
aaa
lods
mov
pop
call
xor
jae
add
lea
inc
repz
std
or
ss
bound
shr
stos
jnp
xchg
stos
test
or
sbb
inc
push
aas
out
popa
and
aad
mov
clc
repnz
subb
mov
add
jnp
pop
adc
add
sub
nop
push
cltd
stos
jb
jnp
stc
mov
scas
pop
repz
loop
dec
jnp
pop
jae
mov
popl
xor
push
sarb
xlat
mov
jnp
mov
cmp
mov
jnp
mov
sti
jnp
xchg
lock
add
jnp,pt
or
out
aam
in
stos
imul
jl
je
xor
sub
movsl
bndstx
inc
fmuls
mov
mov
cmpsb
adc
jb
mov
pusha
xorl
jnp
sub
push
mov
xchg
mov
gs
and
jnp
out
faddl
mov
inc
xchg
jnp
iret
and
xlat
enter
add
lods
leave
sbb
xchg
jnp
inc
add
jmp
imul
mov
jb
push
out
fdivr
mov
out
jns
pop
jb
orb
pop
daa
adc
mov
jnp
ret
iret
jge
hlt
lcall
jnp
jae
push
fcmovbe
mov
aaa
rol
stos
mov
push
xor
std
add
sbb
loope
sbb
enter
mov
pop
cmp
leave
jnp
pop
call
dec
xchg
jne
fldcw
mov
jnp
shll
movsl
das
icebp
cmp
or
sbb
int3
xchg
adc
test
jnp
add
cltd
dec
daa
jbe
cltd
ds
leave
jnp
out
add
out
adc
inc
shrl
sub
je
pushf
jnp
xchg
aas
sub
cli
and
xchg
cwtl
movsl
pusha
jnp
xchg
gs
push
xchg
and
jnp
imul
repnz
stos
adc
mov
jnp
ficoml
sbb
pop
outsb
imul
mov
imul
lcall
ret
aaa
adc
iret
add
jle
jge
ds
into
xlat
jnp
mov
push
sub
movnti
test
ror
jle
loope
jns
stos
dec
mov
cvtdq2ps
popf
or
pushf
jnp
call
dec
jnp
sbb
int3
lods
add
inc
mov
divb
cmp
mov
cmp
xchg
loopne
sbb
aam
repnz
jnp
jo
shll
cmp
nop
rcl
sub
xor
lock
insl
inc
mov
lods
jnp
cmp
ret
lret
rcrl
fdivrl
mov
subb
sbb
mov
clc
cmp
int3
jae
pop
cli
arpl
daa
jnp
cmp
and
push
aam
mov
nop
outsl
pop
call
jnp
rolb
std
xchg
xchg
and
iret
arpl
mov
cli
in
jnp
gs
or
pop
pop
jnp
sbb
aaa
stos
xor
jnp
mov
xchg
jl
in
outsl
jnp
adc
idivl
pop
lahf
mov
sbb
outsl
xchg
test
inc
imul
and
movsb
je
outsb
push
xchg
dec
or
jb
sahf
das
jnp
push
in
lcall
xchg
dec
stos
mov
rolb
popf
enter
into
lods
mov
xor
dec
xchg
dec
lcall
and
scas
stc
fmuls
or
int
int3
push
jnp
push
and
mov
mov
enter
xor
outsl
leave
or
out
or
and
gs
and
ja
mov
mov
mov
or
popa
inc
dec
in
popf
sbb
cwtl
mov
push
pushf
cmpsb
jnp
dec
in
es
or
mov
mov
fcmovne
pop
mov
jae
movsl
enter
pop
inc
xor
adcb
jnp
repz
lock
jnp
lea
sub
test
aaa
cmp
call
je
rorl
jnp
mov
fwait
dec
mov
sub
mov
adc
aad
adc
fdivs
inc
std
xorl
cmpsb
fnstcw
lret
sbb
add
dec
popa
push
rcrb
loopne
loop
cmp
cmp
out
xchg
das
push
mov
sub
fdivp
jbe
jnp
mov
sbb
fsubs
mov
jnp
aad
arpl
push
adcl
int3
mov
push
pop
inc
xchg
in
cwtl
sub
jp
outsl
mov
ret
mov
scas
lea
in
cmp
mov
hlt
push
call
add
mov
fdivrs
and
fs
lds
xor
hlt
jnp
arpl
push
jnp
popa
push
push
std
testb
adc
fnstsw
jns
pushf
or
daa
push
sti
popf
add
cmp
jnp
clc
and
jecxz
mov
xlat
push
jae
pushf
ret
xor
jnp
bound
lahf
fcmovb
sbb
or
cmp
jbe
mov
xchg
jnp
cmpsl
loop
rcrb
adc
outsb
xor
outsl
push
hlt
inc
orl
mov
xchg
insl
or
shll
push
stos
add
in
pop
lods
arpl
and
xchg
jmp
out
pop
lds
jno
jnp
mov
idivb
dec
cs
js
pushf
aaa
call
jnp
jae
test
mov
lods
or
out
outsl
sbbl
jnp
mov
in
jnp
add
rcrl
jnp
push
insb
mov
jnp
mov
fstps
dec
clc
je
add
inc
mov
inc
dec
cmove
dec
xor
pop
imul
movsl
cwtl
push
sti
xor
jmp
sbb
outsl
lea
out
cmp
fcomps
dec
enter
addr16
jnp
loop
stos
lahf
mov
mov
jne
sti
mov
xor
out
cmpsb
repnz
mov
mov
sbb
stos
lods
pop
testl
or
mov
xchg
pop
add
cwtl
cmp
fstpt
mov
xchg
jnp
ds
pop
xor
popa
fs
xor
mov
sbb
sbb
mov
add
add
lret
into
cmp
add
mov
out
outsl
fsts
das
and
sbb
jbe
test
leave
dec
add
insl
out
jg
pop
and
rorl
mov
shrl
jnp
mov
std
scas
into
imul
mov
or
jge
sahf
xchg
enter
jmp
jnp
cmpsb
xchg
mov
rolb
dec
dec
jp
jnp
cmp
inc
jnp
xadd
lods
pushf
jne
and
xchg
mov
mov
testb
movsl
mov
test
pushf
outsl
jecxz
in
jnp
jno
fwait
subl
ret
jle
cmp
dec
fisubl
push
inc
cmc
test
mov
sub
stos
sub
and
jnp
clc
mov
push
dec
or
pop
lahf
xor
test
insb
sub
fwait
xchg
int3
enter
dec
add
lea
mov
sub
fnstenv
sbb
jae
adc
ss
lds
stos
sbb
dec
push
leave
addl
jno
ret
adc
jnp
mov
mov
dec
and
cmp
in
insb
mov
imul
sub
nop
or
cmpsb
jns
bnd
sahf
adc
fsts
inc
jp
dec
shrl
lret
insl
imul
ret
aaa
inc
das
xor
jnp
rclb
dec
es
pop
shll
outsb
mov
xor
es
jnp
fcmove
lods
ja
lcall
sbb
add
mov
ret
nop
mov
sub
lea
cmp
inc
jnp
fidivl
add
cmp
inc
arpl
jg
mov
jae
xor
bound
jnp
orb
in
sub
mov
mov
jnp
shl
mov
loopne
cmp
adc
mov
lds
mov
jnp
fwait
hlt
std
sub
sub
call
cmc
jnp
mov
sbb
push
inc
dec
mov
sbb
pop
pusha
in
push
fwait
jnp
add
push
xor
or
jmp
inc
sarb
outsl
adc
mov
push
jnp
jmp
fldcw
roll
fwait
mov
jmp
jnp
in
insb
inc
push
jnp
gs
and
sub
repnz
ss
xor
jnp
xchg
mov
fsubp
and
jnp
aaa
lods
xor
mov
add
pop
mov
mov
sub
je
jnp
or
sub
inc
ja
cli
jns,pn
sarl
jns
push
enter
pop
cld
dec
iret
std
pop
fwait
dec
cmp
lock
xchg
in
ja
fcom
or
outsl
xlat
loop
push
dec
mov
push
sbb
jnp
pop
es
dec
pushf
ffree
jnp
outsb
xor
cmp
push
iret
aas
mov
xchg
xchg
dec
and
repnz
enter
xor
dec
sbb
adc
inc
and
fnstcw
std
jne
test
mov
icebp
outsl
cmp
psubw
sub
scas
into
mov
and
insl
cmc
mov
inc
mov
jnp
push
rorl
fs
xor
pop
imul
and
mov
push
sub
jae
mov
das
icebp
roll
jmp
mov
xlat
mulb
mov
jnp
data16
loopne
je
jp
inc
sti
popa
sbb
cmp
ret
jecxz
jns
imul
test
mov
or
jnp
repz
cli
add
adc
jnp
dec
mov
lcall
int3
pop
in
ljmp
mov
jnp
in
lds
inc
add
pushf
push
out
jae
xchg
jnp
sbb
pop
cmp
xchg
mov
scas
jnp
daa
fnstsw
dec
popf
mov
mov
jnp
mov
jnp
fsubs
or
loopne
jnp
shll
je
mov
mov
lods
xor
sti
jo
jnp
add
out
mov
xor
xchg
fadds
xchg
je
loop
sarb
or
push
xor
cmpb
pop
cmpsl
bound
dec
adc
idivl
jl
sahf
sub
packsswb
xor
push
fsubs
push
in
or
sub
popa
mov
fnsave
testl
mov
fidivl
sti
pop
iret
fnsave
adc
cmc
adc
test
addr16
sbb
movsl
insb
ss
jnp
mov
jb
int3
int
or
xor
jae
shr
or
insb
ja
mov
imul
jb
aad
shlb
icebp
or
xor
sbb
and
negl
fwait
lret
adc
mov
jnp
mov
pop
int3
mov
mov
pop
mov
xor
add
jnp
lock
imul
in
das
iret
inc
ss
sub
lcall
jp
scas
pop
pushf
mov
cmp
aam
iret
jnp
scas
fimull
mov
mov
in
jnp,pn
cmpsl
lods
adc
add
cli
loopne
mov
xchg
jecxz
or
push
xor
call
jge
mov
sbb
dec
jae
sub
xchg
out
ljmp
lret
cmp
cmp
dec
mov
inc
aaa
sbb
daa
inc
cmp
xor
push
sti
aad
or
jmp
sbb
insl
sbb
xchg
xlat
add
and
xchg
sbb
imul
fidivl
jnp
addl
inc
mov
cmp
call
std
jnp
mov
mov
loope
jnp
mov
fidivrs
out
fisttpll
xor
push
and
sbb
negb
jnp
add
mov
xor
xor
into
jecxz
out
lcall
push
imul
and
call
and
or
jae
jo
adcl
rcl
jns
int3
gs
das
dec
std
in
js
lock
mov
jmp
sbb
scas
push
mov
out
pop
sbb
xchg
jnp
rcrl
adc
es
je
inc
push
int3
cmc
mov
iret
pop
lods
mov
insl
test
fbstp
ds
fcomps
outsl
mov
jnp
cwtl
mov
cld
add
xor
outsl
xchg
push
xchg
stc
fistps
sbb
jnp
es
xor
cmc
rcrb
imulb
lahf
cmpsb
fs
jno
fsubs
xchg
dec
test
popf
push
mov
call
jle
inc
rorl
jge
jb
jns
jns
aad
out
outsb
imul
mov
cld
pop
mov
pushf
in
das
sub
jnp
out
mov
jns
jle
add
mov
inc
or
lods
inc
mov
sbb
adc
jnp
sbb
mov
jnp
addr16
cld
jnp
loopne
je
cmpsl
xchg
imul
daa
pop
mov
jmp
inc
or
xor
jl
push
in
jbe
push
stos
pop
sbb
jb
jnp
int3
out
rcr
push
mov
dec
lods
jnp
int
xchg
sahf
push
popf
cmp
fsubr
or
pop
mov
xor
sub
jl
cmp
aas
fists
mov
push
imul
testb
cmpl
js
jnp
rorl
or
es
lods
mov
ljmp
jns
mov
fsubl
mov
into
dec
and
jne
push
fstpt
ficompl
loop
ljmp
jnp
inc
adc
push
dec
in
jle
mov
jnp
jns
enter
add
lcall
cmp
sub
jp
push
loopne
xlat
sbb
sahf
xor
and
or
sub
and
cld
or
ret
enter
add
mov
jnp
test
mov
clc
outsb
inc
jae
push
pop
pop
sub
mov
jne
mov
push
push
shr
xor
stos
jle
xor
mov
imul
popa
jnp
cmp
imul
mov
jns
inc
std
imul
jp
insb
inc
add
cmp
add
sbb
sub
ljmp
enter
fdivr
mov
inc
ficompl
in
sbb
rcr
mov
push
bound
imul
insb
addr16
pop
jnp
stos
daa
imul
dec
mov
movsl
or
sbb
fiaddl
call
pop
outsl
lret
jnp
lods
inc
xchg
add
insl
dec
aaa
cs
and
test
jo
mov
incl
xor
arpl
mov
aas
in
inc
mov
push
adc
setl
dec
sub
stos
jbe
mov
aam
lahf
xor
and
lods
movsb
sub
fcoms
inc
jnp
arpl
mov
imul
dec
cmc
shr
testb
sbb
push
add
adc
popa
testl
scas
jnp
or
mov
jnp
mov
loopne
adc
insl
subb
cmp
or
sub
mov
mov
jnp
mov
repz
lods
jg
lock
mov
cmp
outsl
inc
test
fucomi
mov
mov
jnp
out
push
icebp
add
outsl
enter
fcomp
repz
rcr
test
xchg
pop
lcall
cmp
and
fisubrl
jae
pushf
jb
aaa
arpl
mov
lahf
iret
js
mov
sbb
repz
int
cmp
xor
or
mov
repnz
sub
call
inc
cmc
jnp
cmp
inc
aad
jmp
and
sub
or
jecxz
and
inc
fisubrs
fildll
xor
lods
mov
and
jnp
cwtl
jae
xor
mov
fldl2t
lcall
push
or
mov
jnp
mov
mov
dec
mov
out
sbb
lcall
adc
mov
idivl
inc
lods
or
jnp
mov
stos
push
push
mov
cmp
rcl
outsl
xchg
xorl
in
mov
pop
hlt
jnp
adc
enter
jnp
mov
add
cs
inc
lods
pop
sbb
orb
movsl
push
jb
ljmp
fcomps
lods
push
jae
xchg
imul
sub
jnp
in
data16
test
daa
sub
jnp
push
aam
cmp
or
out
jnp
fs
and
lcall
imull
adc
or
sub
push
push
jnp
mov
jb
loope
xor
adc
arpl
mov
stc
inc
test
dec
daa
pop
push
or
in
out
xlat
xchg
or
cltd
dec
jnp
sbb
mov
pop
mov
xchg
cmp
pop
stc
in
lret
or
pushl
stos
lahf
into
xor
jne
aaa
jl
ss
jae
pusha
inc
xor
jnp
sti
lods
pcmpgtd
mov
lods
add
dec
imull
out
sub
out
jge
jae
gs
cs
xchg
jnp
sbb
jg
sub
jnp
nop
js
push
dec
outsb
inc
jnp
mov
mov
ljmp
out
aad
xlat
addb
xchg
stos
cmp
sub
pushf
or
mov
pop
rcl
out
inc
cmp
jecxz
into
push
inc
outsl
sub
mov
pop
mov
adc
jnp
add
mov
or
push
jnp
xchg
jecxz
idivb
ds
addl
sarl
push
mov
adc
mov
jnp
sub
dec
cmpsb
or
xlat
jns
jnp
popa
mov
shrb
nop
push
fcompl
jnp
test
daa
sbb
add
rorl
pop
push
arpl
lock
lock
pop
rolb
jne
inc
es
jmp
mov
lret
push
stos
dec
outsb
mov
lock
ret
jp
pop
mov
inc
xor
leave
adc
mov
shll
scas
inc
jmp
int3
dec
inc
stc
out
insl
jnp
cli
xchg
pop
ss
fstps
sub
sahf
fisubrl
dec
mov
ret
push
fldt
fisttpll
lods
jmp
xor
shll
loop
sbb
push
or
clc
pop
jnp
mov
fnstenv
insb
xor
in
lock
push
or
push
jnp
add
xchg
mov
xor
add
mov
fcompl
es
js
fld
adc
dec
aas
xor
popf
lods
jnp
push
cs
fimuls
push
push
dec
xor
imul
insl
xchg
fwait
stos
das
call
or
sbb
inc
sbb
jno
cwtl
jp
jg
fxch
sbb
popf
xchg
pop
idivb
pop
xchg
push
jge
fldt
jne
mov
pop
call
xchg
movsl
adc
dec
or
sbb
fwait
dec
fdivrl
mov
ret
scas
je
mov
int
clc
sbb
in
push
sarl
dec
lret
xchg
jnp
sbb
bound
or
shll
add
imul
sbb
cld
mov
or
lods
lods
mov
cs
push
ja
push
mov
dec
sbb
mov
jae
fstpt
xor
jnp
fiaddl
in
xchg
push
jnp
add
xchg
sbb
mov
lret
fsubrl
xlat
jae
pushf
jl
es
popf
insl
insb
add
mov
outsl
aas
call
mov
lds
lret
jnp
push
sti
sahf
out
adc
lock
fcmovbe
in
jnp
and
scas
jnp
lahf
arpl
add
mov
jl
pushf
ret
xor
jnp
cmp
pusha
jnp
push
pop
stos
clc
cmp
ficompl
jne
or
xor
out
loope
adc
data16
push
fstpl
inc
dec
scas
xchg
in
dec
in
adc
testb
bound
call
lds
pushf
loopne
rolb
fwait
xchg
dec
ljmp
das
sti
out
push
mov
jae
pushf
out
adc
out
push
shll
cmp
rolb
lret
je
repnz
or
out
wrmsr
jnp
jne
or
in
lcall
popf
lret
mov
mov
rcl
dec
into
js
jnp
repz
lahf
xchg
add
sub
add
stos
sbb
or
mov
jg
push
cmp
inc
pop
lods
fsubs
xlat
mov
adc
jo
scas
insb
lock
lods
dec
imul
or
nop
jle
inc
in
and
inc
out
popa
cwtl
dec
xor
rcrb
inc
ret
adc
negb
mov
cmp
bound
and
jo
xor
jnp
sub
inc
dec
insb
push
cli
xor
pop
fistps
fstl
sbb
out
icebp
in
je
mov
xor
add
stos
inc
test
jnp
adcl
cmpsl
jb
in
mov
lfs
adc
sub
repz
mov
adc
dec
imulb
cltd
xor
push
lods
and
inc
jp
cli
add
xor
mov
outsl
mov
xorl
bound
cmp
adc
dec
sub
cmp
dec
sub
pop
mov
xchg
cmpsl
lahf
or
xor
mov
dec
xchg
imul
insl
inc
cltd
in
outsb
or
int3
xor
fadds
cld
fisttps
sarl
mov
push
cmp
popa
mov
pop
cmpb
xor
ja
jne
xlat
adc
and
push
jnp
bnd
sti
lret
dec
stos
movsb
and
outsl
and
pop
xchg
jno
push
nop
jnp
aad
fabs
jbe
imull
addr16
rclb
rolb
xchg
ljmp
pop
aam
outsl
jns
jo
pop
cmp
pushf
ja
insl
int
add
adc
pusha
jnp
jb
inc
ja
int3
sahf
jnp
cmp
lret
mov
mov
jnp
cmp
ficoml
mov
mov
movsl
lock
jnp
lret
daa
insb
ljmp
push
mov
rcll
movsl
cwtl
ret
iret
xchg
pusha
jnp
mov
pop
add
xor
sti
jnp
inc
into
add
lods
pop
repnz
add
enter
stc
mov
lahf
jnp
cmpsb
imul
sbb
repnz
mov
and
mov
jnp
or
pop
inc
xchg
and
lock
in
sbb
fistpl
iret
xchg
push
lock
loop
sub
inc
cmp
adc
mov
outsl
mov
popf
inc
mov
mov
jo
adc
adc
inc
and
jnp
xchg
mov
loope
sti
inc
insl
pusha
push
movsl
call
ja
mov
popf
dec
cld
mov
sti
xor
lods
adc
push
cli
or
pop
cmp
jnp
mov
adc
sub
lret
sti
lods
popa
out
xor
out
add
jns
bnd
movsb
jnp
lret
outsb
mov
dec
lods
or
cwtl
mov
mov
sbb
adc
out
xchg
jne
daa
stos
jnp
push
push
cli
in
mov
xor
jnp
push
imul
idiv
dec
imulb
jnp
xor
mov
push
dec
jnp
xlat
push
dec
lea
pop
imulb
push
pushf
or
jnp
out
mov
cli
mov
lea
jp
dec
push
int
lahf
xor
iret
dec
dec
jae
and
lods
push
mov
inc
mov
mov
mov
jnp
sub
fwait
scas
stos
sbb
or
mov
xor
or
cs
pushf
sbb
pop
div
sti
in
popa
jnp
mov
cli
fs
sub
jno
aas
jnp
imul
mov
dec
loopne
xor
xor
test
mov
jnp
lods
clc
shll
inc
or
test
arpl
out
and
ror
inc
shl
stos
xchg
adc
out
mov
xor
in
jnp
dec
add
inc
fcom
mov
repnz
sub
or
jnp
mov
popa
mov
mov
loop
lods
push
jnp
pop
pop
loopne
xchg
or
or
jecxz
pop
and
inc
das
iret
mov
add
adcl
inc
jnp
mov
pop
loope
xlat
lods
sub
dec
cmpsb
pop
fildll
testl
sbb
loopne
outsl
pushf
lahf
fwait
or
mov
fistpl
push
iret
das
in
sbb
repz
jnp
mov
jnp
mov
xchg
test
cmc
pop
mov
jnp
and
cmp
jbe
xchg
jb
jnp
mov
std
jb
adc
mov
je
push
cs
mov
repz
add
mov
mov
arpl
push
cli
mov
rolb
mov
push
xor
lock
mov
jnp
inc
dec
inc
vunpcklps
pop
jnp
cld
xor
and
shrl
mov
outsl
movsb
jb
jnp
loopne
cld
push
mov
dec
dec
pop
repnz
sub
insb
jbe
or
fistl
xchg
sbb
adc
cmpsb
fisubrl
imul
push
and
fs
jnp
je
addr16
pushf
orb
add
iret
adc
push
pushf
mul
stos
jnp
insl
xor
fcom
ljmp
fistpl
fwait
jb
xchg
int3
lea
cmp
or
cmpsl
sbb
dec
xchg
jmp
push
jge
jnp
or
sbb
pop
and
jmp
mov
xchg
jb
push
jl
jnp
lods
repnz
inc
stos
adc
xlat
in
xor
adc
mov
rcrl
loop
out
mov
aam
and
xor
repnz
pop
sbb
lods
cmpsl
pop
mov
insl
and
mov
call
pop
or
js
loope
xor
xchg
dec
xor
lods
jg
cwtl
mov
lods
jmp
xlat
aad
sbb
imulb
push
jae
movb
and
sub
xchg
and
imul
in
out
pop
mov
inc
test
or
in
jnp
mov
ss
gs
xor
ret
aam
dec
mov
fcoml
pushf
shr
dec
stos
mov
popa
jae
push
push
dec
movsb
dec
lock
jnp
repnz
xchg
negb
push
inc
call
jne
or
orl
ret
sbbb
pop
adc
dec
lret
push
test
cmp
jo
jmp
cli
outsl
xchg
push
lods
mov
mov
cld
mov
aaa
or
ret
jnp
sub
jne
mov
ja
loop
out
mov
add
sbb
adc
cwtl
fidivrs
lods
push
xor
daa
pop
dec
sbb
jl
fcomps
arpl
jno
cmp
jo
inc
js
in
ret
clc
scas
push
jno
inc
push
xchg
jnp
notl
jbe
addr16
jb
repz
sahf
push
xor
jnp
idiv
dec
push
sarb
mov
xor
dec
cmc
pop
test
stos
push
jecxz
sub
lods
lea
bound
mov
jnp
idivb
push
jb
scas
mov
xor
inc
sub
mov
and
xchg
adc
mov
adc
cwtl
data16
push
sar
icebp
nop
pop
or
addr16
pusha
dec
scas
pminub
mov
testb
rcll
dec
inc
jne
in
or
or
mov
ss
fisttpl
cwtl
mov
cmp
xor
mov
call
out
cmpsl
jnp
xchg
testb
jae
xor
ficoml
cmpsb
sbb
fisttpll
jge
or
dec
mov
mov
pop
jns
gs
mov
les
push
or
dec
jnp
std
pushf
clc
mov
push
rorl
jnp
inc
cmp
rcrb
ss
mov
sub
ljmp
in
insl
jae
fstps
das
push
dec
fs
ficompl
in
lods
cmp
dec
jmp
je
push
xchg
sbb
out
dec
push
mov
in
call
mov
sahf
cmp
xor
inc
fisubs
sbb
jge
pop
cld
out
mov
in
mov
into
add
mov
mov
out
mov
add
nop
insl
leave
bound
fstpt
js
inc
hlt
int3
jo
add
or
mov
filds
sbb
repnz
pop
push
jnp
movl
int3
sub
push
jo
xor
jg
scas
dec
sbb
sub
testl
mov
pop
cmp
push
aaa
mov
or
mov
pop
std
cs
jnp
mov
add
ljmp
scas
insl
mov
or
lret
inc
jnp
sbb
jmp
or
lock
inc
mov
fwait
jnp,pn
ds
rcr
mov
fisttps
outsl
mov
out
dec
mov
mov
jnp
out
jp
sub
push
pop
sbb
sub
aaa
push
jnp
dec
adc
lret
lock
imul
das
pop
sahf
push
mov
mov
imul
xchg
sbb
outsw
cmp
jnp
or
leave
pushf
mov
stc
or
scas
jo
push
jg
cmp
notl
jbe
aas
call
ja
lcall
cmp
jnp
inc
mov
scas
jl
xor
sbb
jae
xchg
bound
sbb
push
jnp
mov
das
push
scas
out
jnp
test
xchg
in
roll
std
mov
ret
fwait
cmp
jnp
pop
jge
subb
jnp
sub
mov
jnp
int3
dec
ds
lock
dec
sub
fldt
jnp
mov
int3
lods
inc
sbb
push
in
imul
adc
bound
jecxz
mov
mov
lods
xlat
lret
xchg
mov
cmp
jns
sbb
xchg
insb
pop
daa
inc
int
sarl
rcrl
pop
imul
repnz
inc
insl
orl
sub
jnp
mov
jecxz
mov
divb
dec
jae
inc
lds
out
pop
in
sbb
stc
rcll
xchg
dec
jne
mov
fwait
lea
outsb
loop
pop
lcall
into
push
sahf
aas
jnp
aam
pop
insb
adc
dec
fistpll
insl
mov
inc
addr16
mov
inc
popa
repnz
pop
aaa
mov
jnp
add
in
scas
push
add
cmp
mov
int3
shlb
out
mov
test
jnp
mov
pushf
mov
outsl
data16
mov
mov
jle
sbb
fdivrl
idivb
xor
mov
cmp
rolb
pop
jbe
in
inc
stc
scas
loope,pt
jnp
shll
cmp
or
xchg
jae
lods
add
imul
jae
or
inc
jae
xor
adc
mov
sub
jnp
lret
inc
mov
xor
cli
add
add
out
jae
sub
jnp
test
xor
inc
into
or
push
push
lret
ljmp
popf
jnp
sti
fisubs
mov
push
loop
lahf
or
mov
mov
inc
sarl
pushf
ljmp
adc
aaa
jae
xor
mov
cmp
lods
add
fimuls
test
jnp
bound
ficompl
jae
mov
clc
xor
cmp
inc
scas
add
push
insl
pushf
fiaddl
rcrb
mov
pop
fidivl
xchg
pusha
push
mov
mov
lcall
popl
mov
fisubl
jle
lods
ja
js
jge
jg
imul
jae
inc
insl
aaa
mov
add
sarb
xchg
sub
cltd
mov
fcomps
xchg
or
jb
cli
mov
ds
or
jae
aam
xchg
lea
jecxz
ja
cwtl
xor
outsl
outsl
lea
sbb
sub
repz
push
loopne
jnp
and
outsl
mov
test
push
jne
and
pop
jnp
xor
mov
stos
add
ljmp
jnp
jp
fs
test
cwtl
inc
and
jnp
xor
leave
popf
or
imul
mov
insb
pop
pop
sbb
cmpsb
ja
jo
ds
movsb
pop
xor
cld
jns
mov
popf
and
je
sub
addr16
or
imul
sub
fwait
fisubrs
out
bnd
push
stos
xor
sbb
mov
sub
mov
inc
dec
lret
fiaddl
jne
push
xchg
add
mov
pushf
out
lock
sarl
in
jnp
cmp
adc
sbb
jnp
mov
mov
sbb
jns
stos
jnp
sarb
xchg
das
or
sub
jnp
lock
hlt
daa
repnz
lahf
sbb
jge
mov
pop
ds
in
push
pop
or
or
mov
jnp
rorb
pusha
jnp
pop
jo
ss
xor
mov
jnp
pushf
push
add
imul
lret
mov
mov
shlb
jno
loope
dec
jnp
idiv
test
aad
mov
rorb
lret
jae
lea
cli
sbb
pushf
movsl
in
jnp
sbb
inc
jnp
jg
out
int
fdivrp
jmp
jl
dec
push
cmpsb
iret
call
in
leave
jnp
cmp
jnp
repz
arpl
lods
cltd
les
nop
cltd
repnz
adc
jnp
push
cmpsl
mov
pushf
cmp
xchg
subl
jae
addr16
jnp
cmp
inc
jge
jmp
sub
popa
jae
adc
and
popf
ds
cltd
imul
sbb
pop
pop
or
cmp
push
lods
inc
cmp
push
imull
cs
ret
sub
dec
fisttpll
xor
cltd
jnp
and
in
jno
mov
and
ret
push
jnp
xor
push
sarb
adc
xor
mov
lods
pop
sub
add
cmc
adc
jnp
lea
cli
test
jno
inc
jb
nop
dec
jp
xor
stos
mov
push
xchg
inc
stos
inc
outsl
dec
jbe
mov
mov
jno
lret
das
push
roll
sub
call
xchg
dec
bound
or
push
cmp
jp
pusha
xor
mov
in
jo
inc
cmp
enter
sub
bound
mov
adc
jmp
mov
cmp
adc
loop
push
fnstsw
stos
cld
jmp
out
in
lret
xlat
cmpl
test
mov
adc
aaa
or
arpl
and
xor
imul
hlt
je
out
outsl
repz
loope
jae
jnp
stos
fsubr
or
push
ljmp
test
imul
add
pop
jae
pushf
push
fnsave
in
jnp
and
pusha
dec
jns
cmp
mov
out
imul
or
inc
iret
dec
jno
mov
sub
jb
mov
pop
ss
mov
mov
pop
in
push
stc
adc
dec
or
mov
ja
in
call
lods
inc
sbb
xchg
dec
or
jmp
ja
push
inc
sub
jnp
sub
fwait
jnp
fdivs
daa
imul
mov
xor
xchg
dec
imul
or
or
das
xchg
mov
cmp
inc
fiaddl
inc
loopne
or
jnp
dec
add
xor
adc
lods
iret
cmpsl
fwait
out
xchg
cmp
lret
shll
jae
xor
sbb
lock
js
out
bound
push
dec
push
and
mov
sub
mov
out
jnp
ss
lods
bound
hlt
jnp
mov
dec
or
test
jne
mov
sarl
inc
and
shl
ret
sbb
in
or
inc
in
adc
add
fld1
fistps
sub
pushf
xor
lahf
jnp
push
rorb
push
popf
cmpsb
cmpl
xchg
inc
pop
stos
mov
xchg
gs
pushf
jle
adc
test
jnp
iret
lods
push
imul
adc
push
scas
sahf
sub
pop
mov
jae
xorb
push
mov
jp
shrb
xor
mov
jne
inc
movsl
dec
or
in
cmpsl
xchg
ja
jae
jnp
pop
and
dec
jns
jmp
add
jae
aad
mov
cmp
mov
jnp
cmp
jg
and
push
lcall
mov
lods
cmp
add
jnp
inc
lock
fisubrl
and
adc
movsb
shlb
jnp
cmp
mov
and
dec
fcmovnb
outsb
jbe
add
popa
outsl
and
cld
sub
adc
mov
loop
mov
inc
jnp
mov
js
mov
mov
push
lock
jnp
jo
test
or
mov
xchg
dec
ret
cmp
pop
fcomp
mov
ds
inc
and
or
jb
and
push
testb
orb
stos
jae
or
fmuls
pop
out
into
jle
push
in
dec
or
lock
popf
or
cmp
divl
or
mov
into
ret
arpl
sub
aad
fistps
adc
es
push
and
jg
add
lods
cltd
lock
jo
dec
hlt
jnp
addl
push
bound
or
repnz
add
and
sbb
lahf
inc
sub
iret
push
in
ror
jno
in
or
or
repz
jnp
int3
scas
sbb
xor
fwait
inc
cmc
inc
jo
repnz
out
push
js
mov
loop
mov
les
cbtw
clc
out
call
mov
push
shrl
fidivrs
and
pop
jnp
call
and
pop
movsl
dec
add
mov
cmpsl
xor
push
loope
jmp
imull
xchg
imul
stos
and
push
inc
jbe
jnp
push
daa
mov
aad
scas
jnp
leave
mov
xor
sub
cmp
test
jae
jnp
addr16
fimuls
jnp
mov
test
pop
jnp
or
pop
jnp
rcrb
int
lcall
inc
leave
jnp
cli
mov
cmp
sbb
lods
push
mov
xor
push
mov
nop
push
add
sbb
and
fdivr
jnp
jmp
xchg
loopne
out
idivb
ja
test
push
pop
fildll
mov
mov
inc
negb
xchg
xor
lret
lcall
mov
stos
cmp
mov
mov
fdivr
jnp
and
cmp
bnd
ret
jne
fidivl
cmc
jp
into
cmpsb
pop
shrb
or
out
cmp
inc
xchg
adc
repnz
movsb
pop
lret
std
stc
jnp
sarb
mov
outsb
jbe
or
mov
jne
imul
lcall
aas
call
or
xchg
jnp
jbe
shll
sub
ljmp
cmp
dec
fists
sub
mov
cmc
push
je
mov
push
jge
jnp
push
mov
repnz
mov
lods
fsubl
or
dec
add
jae
in
int3
jge
test
jb,pt
arpl
shl
push
or
jg
and
xor
call
inc
push
cmp
dec
sti
std
pushf
pop
ret
insl
adc
xorl
or
sahf
lahf
mov
xor
mov
push
mov
mov
stc
test
or
dec
daa
push
sub
jns
adc
dec
inc
jnp
hlt
and
fwait
jnp
enter
mov
or
cs
adc
pop
dec
xchg
ja
mov
jnp
and
mov
jns
sbb
mov
mov
scas
repnz
sbb
lods
jne
pushf
pop
ret
jo
sti
jae
add
cmp
out
ljmp
sub
push
xor
jnp
bound
jnp
dec
and
jnp
aam
dec
clc
cmp
push
and
mov
mov
inc
cmc
aam
imul
fcoml
cvtps2pd
shrb
test
pop
jge
inc
sub
lret
pop
or
jle
ja
add
mov
outsl
movsl
je
fisttpll
push
add
enter
sub
adc
aas
inc
jg
sub
inc
ja
sti
push
es
les
add
mov
cmpsb
push
sbb
or
jnp
add
mov
fbld
mov
mov
fdivp
push
sub
das
aaa
cltd
test
pop
sarb
sub
add
xor
repnz
pop
popa
jnp
cmp
movsb
mov
inc
xor
jnp
pushf
in
xchg
pop
pop
call
insl
or
sbb
pop
push
jl
pop
mov
repz
cli
enter
ljmp
adc
dec
inc
pop
test
popa
movsl
lock
outsb
jnp
mov
ror
push
pop
orb
fiadds
mov
jnp
jb
mov
jnp
xor
xor
jno
jnp
shl
roll
fldl
xchg
out
test
in
dec
cli
jnp
xchg
lock
mov
into
pop
mov
mov
aaa
test
fnstcw
xchg
lahf
push
dec
mov
cmc
aad
stc
jae
adc
jnp
dec
sub
mov
jae
cmp
jmp
dec
pop
rcll
jnp
ljmp
jnp
inc
lods
mov
or
inc
jb
dec
jns
fidivrl
bnd
dec
aad
mov
inc
fstpl
je
sub
sub
cli
fxch
fiaddl
scas
jo
and
test
pusha
test
sub
xchg
sbb
jg
shrl
or
popa
div
dec
jnp
mov
das
sbb
shrb
insb
push
jmp
negb
cmp
add
xchg
cmpsb
popa
jae
jle
jmp
mov
and
xor
mov
fs
and
les
or
lea
mov
aaa
pop
xchg
mov
jnp
jns
adc
add
pop
cmc
rorl
je
outsb
jmp
jns
mov
add
jnp
push
push
jmp
pushf
cwtl
inc
jnp
mov
fwait
and
jmp
dec
jnp
adc
mov
in
xor
cli
or
sarb
ds
pop
mov
jnp
push
mov
pushf
call
popa
shrl
and
cmp
cmp
xor
jnp
test
repnz
imul
in
mov
inc
repnz
pop
sbb
insl
mov
iret
pop
lods
mov
pusha
cmp
jnp
push
push
xor
xor
in
mov
push
sarl
sbb
mov
sahf
popf
xor
pushf
jae
sti
mov
xchg
cs
test
jnp
shrb
jno
test
imul
sub
and
imul
ss
add
or
mov
sahf
and
out
into
xchg
mov
ds
mov
jnp
in
outsb
mov
xor
sbb
call
test
out
jne
jnp
jo
xor
sbbb
jnp
popa
dec
or
sbb
aas
andb
std
xor
fs
jnp
inc
roll
pop
cmc
mov
lea
add
mov
jnp
and
mov
pushf
mov
gs
or
out
jae
arpl
ss
pushf
or
or
push
cmp
repz
pop
push
aaa
bound
test
jns
cmp
loope
and
jnp
shlb
add
leave
adc
imul
push
sbbl
jnp
adcb
cmp
cmp
movsb
cmp
inc
in
dec
jp
mov
mov
push
clc
icebp
ja
mov
sahf
add
lock
push
mov
add
or
test
shll
mov
les
negb
jb
adc
add
out
lock
outsb
pop
and
xchg
push
xchg
mov
push
dec
pushf
popf
stc
jnp
rcll
xor
jnp
or
cmp
jnp
insl
fwait
lret
push
lods
jnp
fistpll
mov
cmc
shrb
jae
mov
out
dec
mov
mov
int3
mov
mov
inc
cs
dec
ret
xor
xor
cmp
outsl
mov
mov
dec
hlt
xchg
or
lret
aam
pop
xlat
lods
les
cmp
hlt
stc
int3
dec
push
xor
sbb
pusha
ret
jno
push
jnp
mov
ret
xlat
mov
pop
outsl
sub
sub
aam
sarl
mov
scas
jnp
cmp
inc
pop
iret
lret
andl
jnp
aas
inc
lods
imul
insb
inc
std
pop
and
inc
insl
stos
sub
jnp
push
push
lea
inc
xchg
add
std
mov
jnp
cld
icebp
inc
jo
enter
je
loope
cmc
mov
imul
lahf
dec
jnp,pn
add
mov
pop
out
mov
jo
jb
idivb
daa
jg
push
mov
jnp
dec
cmp
pop
push
imulb
add
pop
mov
and
jnp
mov
mov
movl
xor
jnp
cmp
jnp
lds
arpl
push
jnp
mov
xor
jnp
addr16
jns
jg
fnstcw
js
add
jnp
call
pushf
mov
or
sbb
sbbl
jnp
fwait
daa
aaa
mov
jnp
cmp
fisttps
sub
mov
sbb
jns
xchg
jnp
xrelease
in
mov
mov
jne
jb
xor
mov
jnp
mov
lret
je
jnp
sbb
sahf
in
call
lahf
mov
mov
xor
int
sub
ja
push
mov
jp
jnp
lret
mov
out
jecxz
mov
movsb
cwtl
jnp
pushf
dec
pusha
and
fcomi
pop
stos
lods
mov
lods
fbstp
pop
jecxz
jnp
add
stos
lods
fcomp
shll
inc
arpl
sub
jnp
push
insb
push
sub
xchg
jnp
call
or
lods
mov
push
pop
push
mov
lea
pop
pop
inc
in
mov
add
push
jl
or
pop
and
ljmp
xor
jno
pop
mov
xor
pop
cmp
loop
push
adc
inc
mov
ds
jb
jnp
iret
mov
popf
add
clc
mov
rcrb
mov
stc
fdivrl
sbb
xchg
clc
lods
test
pop
ljmp
or
jmp
out
xchg
jae
movb
and
repnz
push
xor
and
stc
cs
or
out
scas
mov
lea
mov
lcall
test
pushf
sbb
add
jnp
xor
popa
movsl
arpl
jnp
cmpsl
fstpt
and
fildll
cmp
mov
dec
daa
sarl
add
loop
inc
lcall
jo
add
or
cmp
and
sub
inc
mov
sub
ljmp
retw
ja
push
add
int
ficoml
mov
jnp
adc
movsb
cli
nop
adc
jnp
int3
push
cmp
adc
testl
jnp
xor
mov
inc
arpl
xor
aam
or
neg
adc
cmp
bnd
jg
inc
mov
sub
adc
cmc
outsb
outsl
int
pop
adc
cli
sti
sahf
mov
sbb
lock
pop
or
pop
sub
mov
aas
pushf
or
clc
jns
inc
outsl
jo
repnz
mov
aaa
mov
pop
test
dec
dec
mov
fdivrs
xor
or
push
scas
insb
clc
mov
jnp
cmp
daa
jnp
test
and
pop
adcl
ja
test
out
fsts
sub
xlat
jb
fwait
stos
das
pop
pushf
sub
repnz
sbb
dec
bound
lock
rcrb
lods
mov
mov
jl
mov
jnp
out
lods
stc
ja,pt
jnp
and
js
jnp
inc
add
lcall
fisttpl
pop
cmpsb
jnp
daa
add
rorb
jmp
pop
fildll
pushf
cmc
sbb
ljmp
push
jnp
cltd
xchg
add
mov
pop
push
js
and
jnp
sub
imul
xor
or
stos
xchg
lcall
cmpsb
mov
mov
add
lds
jae
push
sub
dec
pop
jnp
lods
pop
sub
jbe
mov
ljmp
push
and
lock
jnp
cmp
loop
shrb
imul
sbb
mov
negl
adc
bound
sbb
ds
scas
jnp
mov
mov
mov
je
xor
or
outsb
jnp
loopne
lock
fstpt
mov
aaa
or
adc
cmp
sti
mov
xor
mov
jnp
cmp
cmpsl
jnp
popa
xor
daa
lods
scas
sub
dec
enter
jnp
mov
jle
ret
xor
int3
loope
std
mov
inc
imul
jnp
jns
ret
lahf
push
jge
mov
lret
stos
enter
push
mov
out
add
in
jnp
je
sbb
loop
dec
imul
mov
lods
push
inc
jae
jae
and
bound
addr16
jae
pop
mov
sub
js
xor
and
imul
sbb
into
outsl
xor
jnp
icebp
sahf
stc
xchg
xchg
mov
in
stos
nop
xchg
or
loopne
std
add
jne
jne
xchg
pop
jnp
sbb
adc
sub
cmp
in
mov
mov
mov
jle
pushf
loop
sbbb
test
sub
xchg
roll
mov
js
loop
jnp
imul
mov
pop
jnp
shl
gs
movsb
fistpll
or
rcl
sbb
pop
xor
cmpsl
xchg
jnp
popf
in
mov
dec
jnp
gs
clc
dec
test
subl
push
mov
lcall
pop
mov
cli
jnp
aad
fwait
and
add
push
cmpb
xor
mov
stc
xor
loop
cmpsb
jbe
jne
mov
pushf
aas
or
inc
jnp
call
outsb
shrl
inc
or
in
jnp
stos
pop
cmp
and
push
cmpsb
notl
lret
jno
sub
dec
add
imul
jnp
cmpl
and
jp
fbstp
pop
loop
cli
in
mov
enter
sub
inc
jnp
inc
cmp
jnp
ja
ljmp
adc
int
fstl
jnp
bound
les
mov
or
jl
jmp
or
sbb
out
loopne
pop
bound
jnp
outsb
add
jnp
in
sub
mov
xor
jae
std
jg
cltd
fiaddl
inc
dec
mov
jnp
popf
in
mov
fdivrl
xlat
scas
sub
das
mov
mov
stos
xchg
pop
jae
out
push
jmp
add
es
repz
out
sahf
popa
mov
xor
dec
ds
fwait
testb
jge
movsl
stos
insb
daa
pushf
fistpll
cmpl
jnp
rolb
sub
sub
cli
cmp
ljmp
inc
mov
jnp
jne
pop
fisttpll
mov
mov
das
sbb
jno
sarl
jnp
rcrb
dec
mov
mov
dec
push
movsb
jnp
mov
push
xor
adc
std
js
int
pop
xchg
cmp
lock
sub
inc
in
jnp
ljmp
jnp
add
dec
imul
sub
pushf
repz
jnp
ret
xchg
gs
adc
aam
jnp
test
push
and
mov
shrb
insb
jnp
and
xchg
push
xlat
stos
jmp
outsl
ss
jecxz
push
stc
and
repnz
or
aam
mov
roll
mov
xorb
or
into
mov
jp
cmpsl
sbb
inc
push
gs
mov
dec
lcall
out
xor
aas
jle
lock
xor
dec
and
hlt
jmp
mov
jnp
mov
add
ret
mov
jnp
std
dec
neg
mov
and
xor
jnp
push
mov
push
jnp
lcall
jnp
sbb
sub
or
push
inc
cli
pop
push
pop
and
ds
aad
stc
jno
lods
or
into
jnp
inc
insl
jae
jle
sbb
ror
cli
leave
dec
dec
sub
xor
pop
cmp
mov
add
fstpt
xlat
jmp
enter
lcall
or
sub
xor
inc
int
ss
mov
fsubl
dec
enter
jnp
inc
test
jae
sub
hlt
ret
mov
cli
das
lods
fwait
outsl
sub
add
sbb
lret
fcompl
jnp
sbb
loop
sbb
orl
pop
stos
leave
jne
cmp
add
xor
dec
aad
pop
sbb
loope
popf
jnp
lcall
jnp
inc
jecxz
gs
or
loop
jnp
call
jo
inc
xchg
loopne
mov
imul
jp
pushf
mov
in
push
sbb
mov
adcb
fiaddl
popf
test
popa
stos
and
xor
shlb
in
in
inc
and
adc
sub
dec
jne
out
xchg
sbb
sub
outsl
sbb
sub
fidivrs
and
insb
ror
jnp
test
adc
aam
xor
xchg
mov
inc
mov
ss
cli
jnp
lods
in
sub
dec
test
inc
jne
rcrb
mov
mov
jnp
pop
sub
push
data16
aas
sbb
adc
aas
mov
fnsave
mov
sub
jp
or
push
mov
lods
clc
or
les
or
jge
inc
jmp
push
pushf
icebp
pop
repnz
in
jnp
rcll
ja
outsb
fldcw
push
test
jae
jp
js
pop
sbb
jmp
jbe
movsb
fs
insl
insl
mov
repnz
bound
mov
pop
push
jbe
in
push
push
nop
fdivrs
push
mov
xor
mov
push
insb
jb
pushf
dec
cltd
ret
cli
jae
fstpt
insl
push
and
pushf
sub
xchg
and
repnz
arpl
shrl
jnp
inc
push
clc
xor
or
cmp
cmp
mov
test
imul
jp
lcall
jb
out
push
js
pop
lods
push
mov
jnp
arpl
push
movsb
jnp
je
movsl
dec
or
testb
adc
mov
pop
in
cmc
sub
jnp
movsl
clc
inc
sub
add
sub
xchg
push
cmp
daa
dec
or
inc
popa
lods
pop
jno
aam
push
inc
cmp
pop
push
dec
pop
cmp
sbb
in
jno
movsl
mov
out
lods
jno
std
scas
and
cmc
jnp
push
cmp
lea
mov
push
pop
in
pushf
jbe
and
ja
add
fcomps
outsl
repnz
fdiv
imul
jne
ret
loop
ds
jp
ret
jnp
push
cmp
mov
jns
pushf
fdivp
jne
adc
sahf
mov
inc
or
mov
sbb
test
jnp
cmpsb
cli
scas
xor
cmp
xor
push
ret
lret
clc
jl
jae
ljmp
hlt
out
cmc
sub
xor
mov
adc
lcall
lcall
adc
pushf
in
add
scas
cmp
inc
mov
shlb
lods
in
repz
hlt
divl
jmp
pop
shll
pop
in
scas
pop
jo
jnp
and
pop
iret
mov
das
fs
add
cwtl
add
fcom
mov
mov
jbe
jmp
mov
jnp
sbb
into
xor
mov
insb
xor
fisubl
divb
jnp
sub
cmp
inc
push
ss
cli
pop
jb
fwait
jnp
lret
and
sub
adcb
jnp
fsubrl
mov
adc
push
enter
mov
jp
fstpt
js
ljmp
rorl
std
rcr
xchg
xor
mov
inc
xor
lods
ja
push
xchg
sbb
pushf
int3
fldt
scas
movsl
nop
jo
jae
push
cmp
mov
iret
sti
js
jae
adc
mov
and
div
mov
sub
sub
daa
insb
pusha
jnp
ja
dec
mov
loop
jnp
jmp
std
mov
je
pop
mov
mov
call
inc
sahf
or
jnp
or
sarb
popf
cld
stos
insl
xor
sarb
mov
das
popa
bound
cmpsb
arpl
xor
mov
cmc
xor
mov
xorl
or
jnp
mov
out
loope
xlat
enter
or
jnp
xchg
out
mov
add
add
sbb
adc
add
pop
clc
jo
test
jnp
or
imul
lods
adc
mov
xchg
sub
and
jnp
sub
lods
jg
sbb
ja,pn
xor
inc
push
jnp
inc
jp
push
mov
loope
enter
bnd
dec
stos
adc
push
xor
cmp
bound
stc
scas
ja
jmp
add
mov
cmpsb
dec
lods
cmp
je
ret
roll
jmp
push
imul
jno
fisubs
mov
jae
add
mov
test
jnp
call
mov
jnp
stos
sbb
test
or
cmp
mov
adc
jg
shrb
call
sbb
jp
test
mov
jae
gs
lret
cmpb
push
loop
stc
sub
and
mov
pop
or
jp
imul
dec
cmp
outsl
fucomi
notl
jb
mov
pop
dec
je
jnp
rolb
lea
scas
push
pushf
sbb
xor
mov
mov
mov
movsb
clc
lock
jecxz
jne
adc
imulb
dec
fs
aas
sbb
pop
lcall
loope
pusha
sbb
ret
pop
into
jnp
jae
test
fs
mov
inc
stc
or
and
lea
insb
and
mov
in
jnp
cmp
aam
mov
data16
lret
mov
loop
jae
mov
jnp
mov
inc
jnp
int
or
xchg
mov
dec
insl
push
in
inc
inc
movsb
cmp
pop
jae
mov
stos
mov
xchg
scas
mov
cmp
or
repz
jae
jmp
mov
jno
insl
xor
ja
xchg
iret
ret
in
dec
jnp
movsl
xchg
and
pop
sti
push
test
jnp
adc
cmpb
xor
pop
lcall
int
cld
mov
sbbb
lcall
or
dec
cld
ljmp
jle
xor
push
pushf
adc
jnp
movsl
cmc
mov
mov
or
mov
jo
pop
movsb
lret
loop
inc
ljmp
inc
out
clc
fimuls
jae
pop
push
aas
xchg
pop
repnz
sti
dec
jnp
cld
push
inc
repz
loope
aad
test
inc
pop
inc
cmc
jmp
sarb
jnp
ss
dec
outsb
mov
cld
mov
mov
inc
pop
inc
jae
lock
aaa
xor
sar
jnp
mov
xchg
dec
sub
fisttpll
xlat
mov
data16
pushf
mov
addr16
inc
inc
jnp
loopne
jmp
hlt
lcall
push
rcll
jnp
sbb
push
jnp
bound
lea
mov
jnp
sub
loope
xchg
daa
sub
cli
pushf
stos
sub
mov
call
jnp
xchg
in
sub
call
sub
mov
add
out
jae
jo
or
xlat
cmp
fnstenv
jnp
add
jae
divb
cmp
mov
jnp
adc
or
jle
pop
fadd
mov
jp
repnz
jnp
push
dec
push
clc
xchg
pop
adc
mov
xchg
push
daa
dec
out
sub
jl
pop
push
push
mov
data16
xchg
lret
out
pushf
jb
lds
mov
jnp
mov
adc
mov
int3
fnsave
sarl
jne
add
sub
push
dec
adc
mov
mov
int
cmc
cmpsl
sbb
dec
es
or
mov
fdivs
add
aas
jnp
xor
sahf
mov
or
jecxz
outsb
jnp
push
lret
dec
inc
mov
fs
addr16
jnp
pop
insl
mov
jnp
xlat
sbb
les
stos
sahf
inc
fidivrs
int3
pop
jnp
and
sbb
push
lret
mov
bnd
fsts
mov
jae
lods
iret
jns
rcll
adc
jns
outsl
sbb
outsb
fnstcw
jp
mov
sub
sub
and
daa
js
push
xchg
or
jge
xorb
lcall
dec
lods
jnp
fidivs
mov
idiv
popa
sub
jnp
mov
sbb
repnz
pop
pusha
cld
jnp
sub
ja
jnp
inc
out
fisubrl
mov
and
nop
sub
add
jns
push
mov
cli
adc
js
insl
in
mov
in
popf
push
repz
sarl
sahf
outsl
rorb
addr16
arpl
popa
pop
jnp
pop
lahf
xor
dec
jae
mov
dec
les
aad
fwait
jg
pop
loope
imul
mov
jo
mov
es
lods
mov
aaa
dec
pop
jno
out
push
mov
in
jnp
sti
xor
imul
cmp
or
dec
sbb
xor
ret
cmp
scas
rcll
pop
aas
dec
xor
aam
sub
xchg
jae
adcb
dec
jb
ss
jmp
stos
insl
out
test
jnp
rorb
mov
int
cmpl
push
imul
fidivs
and
mov
lahf
ret
mov
push
loope
push
and
js
test
cwtl
inc
xchg
dec
and
jnp
pop
xchg
lods
clc
roll
push
add
pusha
inc
push
mov
ljmp
cmp
cmpsb
jmp
push
lock
or
imul
ds
jnp
xlat
mov
cmp
mov
hlt
ljmp
jmp
jnp
xor
lock
xor
cli
fidivrl
push
subb
repnz
and
popf
jnp
push
push
insl
xchg
in
jnp
xorl
fcompp
dec
sbb
jbe
sti
jns
fistl
xchg
rcrl
add
jnp
or
int3
fcmovnb
xchg
jnp
push
push
jle
shlb
outsl
test
cmpsl
xor
mov
int
jnp
insb
sarl
pop
jle
jnp
jo
shlb
scas
dec
push
or
sbb
mov
mov
jnp
push
fs
jnp
hlt
jl
fdivrl
aaa
js
sub
bound
cli
mov
jae
jo
icebp
fdiv
sbb
and
addr16
adc
and
xor
cmp
addr16
or
lcall
fiadds
cmp
andl
cld
dec
stos
gs
mov
lcall
insb
shl
sub
int3
dec
lods
pop
lahf
je
fisubrs
jae
sub
mov
xor
pop
shll
xor
xor
mov
ss
jne
push
in
or
aad
clc
jle
ds
jnp
mov
fadds
xchg
jne
cmc
lods
loopne
inc
push
loop
sub
sub
jnp
or
lods
or
cmpsl
int
imul
cltd
cmp
ljmp
outsb
cmp
or
ja
push
dec
xor
divl
jnp
ds
out
mull
sub
insb
jmp
jnp
mov
fdivr
pop
push
cli
aaa
int3
xor
mov
sub
mov
lock
push
jb
sarb
cmp
fidivs
nop
mov
arpl
xchg
pop
sbb
sub
add
cmp
lods
loop
xor
jnp
mov
or
adc
xor
rcrl
mov
jae
shlb
shlb
pop
inc
push
push
dec
ja
or
jnp
xchg
inc
imul
aaa
mov
adc
cmp
jp
dec
jo
lcall
jmp
sub
jne
xor
sub
dec
dec
lods
jb
repz
or
jnp
adc
pop
imul
es
jae
xchg
je
cmc
jnp
lret
icebp
sti
dec
ret
jnp
xor
into
sarl
cmp
adc
scas
adc
lcall
and
stc
hlt
jnp,pt
dec
push
sbb
hlt
sub
jnp
xor
cli
cs
xchg
adc
sbb
jnp
adc
push
addr16
lret
lcall
xor
cmpl
imul
dec
pop
sub
lock
popa
das
lods
adc
rorl
addb
inc
dec
xor
cs
pop
jo
pop
insb
pop
cmp
sub
mov
lea
pop
jae
or
cmc
push
cld
dec
cmpsb
js
mov
jmp
pop
pusha
jnp
ret
mov
cli
xor
ss
nop
cmc
push
or
sub
mov
jp
popa
mov
mov
vmwrite
pop
in
mov
jnp
mov
cmp
nop
lea
ds
lret
je
repnz
or
or
in
lock
cld
jnp
adcb
mov
cmpb
and
lods
icebp
xlat
dec
jnp
jmp
ss
ljmp
or
mov
insb
sbb
aas
xchg
add
jbe
mov
bnd
movsb
cli
pop
or
inc
dec
es
cmp
jmp
imul
mov
push
dec
test
mov
cltd
mov
jnp
xchg
xor
call
xor
shr
dec
int
jo
dec
repnz
push
mov
lcall
ljmp
sub
jnp
mov
hlt
jp
sahf
cmp
xor
jl
dec
mov
push
xor
jnp
ljmp
xchg
adc
lahf
rolb
lret
mov
mov
loop
les
mov
and
adcb
jnp
lds
cmp
stos
enter
dec
jne
jnp
stc
jecxz
aad
cmp
jnp
mov
sub
jnp
inc
or
lock
gs
sub
clc
xchg
out
mov
iret
in
push
jnp
ss
mov
hlt
cmp
mov
and
cmp
pop
mov
mov
inc
mov
insl
xchg
dec
or
mov
insl
mov
or
js
je
xchg
or
and
sbb
xchg
clc
in
mov
jnp
fucomip
inc
inc
shll
iret
sbb
pop
mov
xchg
lret
or
jbe
sarl
ljmp
gs
call
dec
push
dec
ret
testl
js
in
mov
add
jnp
mov
jnp
movsl
and
fidivs
daa
loope
jnp
pushf
andb
cs
jmp
lcall
popa
pop
pushf
inc
mov
sbb
push
mov
lea
jns
sbb
repnz
mov
cmp
cmp
mov
mov
mov
mov
mov
enter
jae
and
or
jnp,pt
push
lret
jno
xlat
sbb
dec
inc
xor
xchg
in
jnp
andl
jnp
jns
sbb
push
ja
lcall
inc
jnp
and
in
dec
cmp
jnp
cmp
jl
mull
sub
add
fldcw
jnp
adc
add
scas
push
or
sub
imull
fwait
pop
mov
or
mov
dec
stc
pushf
inc
nop
sub
ficompl
fcmovne
ljmp
xchg
mov
out
les
jns
xchg
outsl
stos
inc
jnp
mov
jnp
add
adc
dec
lahf
sbb
jnp
sub
nop
cmp
sub
add
jae
jae
mov
addr16
lret
mov
pop
aaa
cmpl
mov
insl
push
or
cld
push
push
jnp
mov
test
cli
add
mov
les
loope
jno
sbb
and
jp
hlt
cwtl
sti
push
fwait
jnp
adc
cmp
sub
pop
nop
jmp
add
or
jne
popf
mov
insb
mov
push
les
fisubl
out
cmp
dec
sub
inc
pop
loopne
mov
scas
sub
out
push
daa
test
cmpb
ret
cmp
mov
add
inc
pop
lock
mov
fbld
pushl
sub
mov
adc
adc
mov
jnp
jmp
shl
xor
push
lods
in
imul
into
jp
xchg
jnp
pop
mov
mov
outsb
pop
xor
jge
aaa
movsl
fwait
xchg
adc
pusha
out
jne
or
dec
jnp
adc
inc
jnp
inc
xchg
mov
ret
cld
fisubrl
dec
cmpsl
mov
testb
sub
dec
sub
or
int3
push
sbb
stc
in
pop
lods
das
jnp
aam
add
xchg
and
cs
sbb
mov
and
mov
daa
or
idivl
popa
jnp
mov
xchg
mulb
dec
fs
sbb
leave
cmp
aad
mov
push
jo
jne
mov
outsl
in
shlb
mov
aas
ss
mov
out
jp
jnp
mov
inc
lret
push
pusha
jnp
add
cmpb
pop
jae
xchg
leave
lods
and
mov
dec
mov
insb
mov
dec
fs
sbbl
ss
jle
pop
in
jae
enter
and
jge
popf
dec
scas
xrelease
adc
fsubrs
sbb
subl
sbb
jecxz
jne
jnp
divl
fs
jl
or
jnp
shlb
sarl
das
inc
jnp
pop
enter
lods
test
mov
lret
sub
test
je
mov
test
ds
shrl
and
imul
jb
loopne
aad
dec
sub
jbe,pn
or
add
jnp
mov
push
sbb
mov
fwait
popf
out
push
mov
rorl
dec
ret
jecxz
sarl
jne
inc
cmp
stos
popa
jnp
sub
ret
cli
push
outsb
inc
in
mov
pop
roll
stos
lods
xor
inc
mov
mov
push
jnp
ficoms
xor
mov
dec
popf
test
dec
mov
sub
dec
cmp
lods
pop
jl
adc
xlat
pop
sbb
mov
xor
push
popa
xchg
out
insb
inc
xor
cs
adc
das
rcrb
jo
cmp
adc
adcl
mov
out
imul
insb
fs
shll
mov
ret
mov
stos
mov
or
jnp
push
dec
lret
xor
or
scas
mov
xchg
sub
cmp
cmp
imul
lds
fwait
sub
mov
xor
mov
or
ljmp
mov
add
jnp
imull
jnp
in
lcall
mov
inc
call
movl
lahf
add
mov
shll
jno
nop
push
jnp
int3
ret
xor
jnp
ja
pop
cmp
outsl
testb
mov
mov
pop
int
push
fisttpll
dec
into
enter
std
in
rcrb
adc
inc
xor
aad
jnp
imul
outsb
and
or
xchg
pop
scas
cltd
pop
push
sub
clc
outsl
mov
jnp
imul
shll
std
mov
jp
mov
sbb
cld
jl
jno
mov
ds
insl
sbb
pusha
jns
jnp
leave
cmp
pop
repnz
add
outsb
pop
jnp
jo
loope
pop
and
xchg
jl
cmp
addr16
aam
mov
jae
iret
dec
mov
pop
in
sti
lock
arpl
sub
lret
cwtl
push
lods
cmc
jnp
cs
and
icebp
pop
jnp
rol
cmp
add
jb
dec
jnp
rorb
xor
lcall
outsl
fs
jo
jnp
mov
mov
aad
mov
dec
pop
cld
mov
cmp
cwtl
jl
arpl
xor
jb
mov
out
cmp
cmpsl
shll
dec
les
or
dec
pop
xchg
arpl
lods
out
lea
add
add
adc
mov
ret
lods
cmp
cli
ds
repz
jnp
stos
and
mov
or
mov
popf
pop
les
push
imul
jg
pop
dec
in
int3
imull
in
movsb
aad
imul
lods
mov
inc
ret
mov
lock
jo
jnp
mov
inc
shll
push
sbb
enter
movsl
pop
dec
adc
into
test
daa
mov
cmc
push
cltd
cmp
stos
stc
xchg
add
add
daa
add
in
adc
nop
rorl
cltd
pop
lods
xor
and
mov
outsb
insl
jnp
mov
es
insb
push
mov
push
push
popf
outsl
cmpsl
pop
bnd
sbb
fcmovbe
jnp
push
fwait
bound
aaa
aas
pop
lret
lock
loop
mov
sbb
out
stos
xchg
orl
mov
and
pop
iret
aas
ret
pushf
jnp
push
xchg
lock
mov
js
sarl
iret
je
and
mov
sbb
notb
sub
mov
adc
dec
inc
hlt
popa
xor
mov
jnp
fisttpl
repnz
push
in
or
orl
jae
ds
int
ljmp
loop
jo
xchg
pushf
mov
out
dec
adc
movsb
inc
fwait
cmp
cmp
subl
add
adc
fisubrl
scas
pop
out
push
lods
mov
mov
js
add
sub
filds
adc
dec
dec
addr16
sub
call
popa
jnp
xchg
jo
jle
fisubrl
mov
lea
aas
es
scas
jae
filds
into
jbe
mov
stos
or
pop
jne
test
sbb
push
sbb
ss
jnp
int
mov
test
jnp
addr16
scas
inc
jg
mov
xor
mov
fwait
jp
pop
cmp
popa
jo
mov
mov
movsb
jns
push
rorl
jnp
xchg
test
sbb
lahf
fwait
ljmp
lods
outsb
add
inc
adc
dec
sbb
loop
je
xor
dec
jnp
inc
lods
jb
push
imul
adc
or
addr16
decl
sub
js
jnp
loope
loopne
add
fnclex
lods
lods
stos
push
scas
negl
stos
lcall
dec
out
jnp
popa
add
mov
jnp
mov
mov
or
aaa
outsl
mov
pop
jb
mov
div
es
and
out
shlb
xor
jnp
stos
lods
aas
sub
mov
and
mov
cli
mov
jl
test
fwait
pop
icebp
jno
jmp
aad
data16
push
lahf
jnp
sbb
aad
xlat
sub
mov
jnp
inc
and
jnp
and
mov
insb
fldenv
jnp
push
fcoms
pop
xor
pushf
mov
cmpsl
rcrl
je
lods
add
div
sbb
sub
xchg
fistpll
sbb
jnp
int3
dec
adc
dec
jp
jnp
mov
sub
push
js
ljmp
out
pop
xchg
jmp
xchg
fisubrs
sub
sub
sahf
mov
xchg
push
into
push
popf
mov
cld
mov
dec
shr
out
insl
add
aaa
jnp
pop
push
ljmp
and
push
inc
inc
outsb
jecxz
cmp
sarl
mov
jnp
push
insb
xor
jbe
jnp
mov
fimuls
jo
jae
mov
fistpll
daa
jl
mov
inc
outsb
xchg
jno
fdivrp
mov
jecxz
shr
call
xchg
aas
pop
adc
subl
lahf
sbb
xor
jp
dec
and
sbb
dec
xor
bound
xor
stos
push
xorb
fidivrl
jle
mov
sub
jnp
pushf
cmpsb
sub
push
cmp
movl
push
lods
xor
or
ja
inc
mov
lods
cmp
fs
lods
jnp
mov
add
or
aaa
shll
cmp
or
test
shrl
stc
jnp
add
sub
and
lret
in
repnz
out
movsl
bts
je
jnp
add
inc
rorl
jne
sub
test
inc
loopne
push
cmpsb
mov
jnp
lret
cmp
jnp
mov
pushf
push
jnp
cmc
xor
jnp
and
and
cmp
jnp
pop
mov
out
or
cmp
add
push
stos
lods
cld
mov
imul
dec
mov
pop
cld
insl
outsl
aas
ljmp
fcomip
mov
rorl
imul
pop
jnp
xor
sbb
push
mov
push
rcrb
cwtl
mull
mov
xchg
clc
orb
sbb
std
add
push
jo
fstl
dec
or
test
mov
aaa
mov
inc
dec
xor
jnp
xchg
pushf
cwtl
push
push
inc
jnp
xor
sbb
popa
jnp
adc
testb
mov
jae
mov
or
and
mov
mov
xchg
cmp
jo
jecxz
xor
jnp
rcll
cmc
rclb
repnz
popf
into
fs
inc
enter
aaa
jno
and
fwait
jmp
popf
lods
inc
or
xlat
xor
cmp
jnp
mov
loop
jg
mov
es
into
ja
mov
jnp
sbb
sub
pop
pusha
jae
push
push
stc
in
jecxz
aad
ja
std
rclb
cmp
ds
pop
sahf
repnz
cmp
jnp
xor
je
hlt
pop
jnp
popa
pop
jo
xlat
cmpsl
and
lcall
cmpb
hlt
ret
jno
sbbl
jge
mov
cli
or
push
addr16
push
stc
aad
mov
mov
dec
cmp
jnp
ret
cmp
jbe
jnp
mov
shll
inc
mov
jnp
push
push
push
fcomi
jnp
sub
rcrl
mov
push
out
cli
xchg
jmp
mov
iret
outsl
add
xlat
add
mov
inc
sbb
loopne
jae
sti
dec
cmp
mov
mov
fcomip
sbb
lds
mov
insl
lods
xor
ret
cmpsb
testl
jnp
mov
push
jnp
sub
daa
push
and
jnp
stos
rcrl
or
adc
lods
pop
jg
out
jnp
jmp
pop
fisubrs
jp
lcall
mov
add
daa
mov
insl
insb
pushf
cld
jnp
pop
addr16
cmp
xor
cmp
adc
xchg
push
xchg
fwait
test
mov
jne
pop
in
xor
aaa
lods
fidivs
fldenv
mov
jnp
icebp
int
mov
popa
call
pusha
mov
jbe
loop
repnz
lods
aas
les
jnp
or
movsb
mov
sub
adc
mov
xor
mov
icebp
mov
inc
jnp
xor
ds
jo
jnp
sahf
cmp
add
fdivrs
sub
cmp
and
jnp
add
mov
fnsave
aam
mov
jae
push
das
cli
jnp
or
bound
movsl
jnp
test
adc
sbb
sub
jnp
mov
or
sbb
xchg
jno
dec
insb
lds
aas
jnp
mov
fwait
addr16
mov
jnp
in
psubq
push
sbb
sbb
push
dec
aad
jns
xorb
mov
inc
push
imul
push
fimull
inc
or
jne
and
push
lods
test
cmp
push
lea
dec
mull
sbb
push
lods
popf
xchg
call
ds
cmp
divb
mov
mov
stos
sub
inc
insb
mov
mov
and
dec
ret
add
fnstsw
ljmp
xchg
mov
fmull
addr16
stos
js
daa
pop
lods
gs
pushf
pop
ja
repz
imul
and
paddsb
mov
movsb
push
pop
jle
jge
or
add
jnp
inc
in
mov
aaa
adc
jnp
push
xlat
jo
ljmp
fsub
xor
cwtl
jp
jnp
fwait
dec
sub
mov
mov
or
mov
inc
sbb
dec
jnp
push
sahf
mov
fmul
and
adc
pushf
aas
out
clc
mov
jno,pn
insb
mov
dec
test
sarb
mov
lcall
ret
lods
sbb
lret
mov
jnp
xor
dec
sbb
or
repnz
xchg
inc
jnp
push
xor
jnp
xchg
add
mov
fisttpl
insl
sbb
enter
add
jnp
je
add
xor
inc
cld
lahf
cld
jnp
fstpt
es
lea
or
or
mov
outsb
rcrb
dec
loop
outsl
out
add
leave
and
aaa
fs
outsb
stc
fwait
jnp
divb
mov
pop
jnp
xchg
mov
in
je
jnp
fisubl
cmp
sar
insb
pop
sub
popf
dec
mov
js
call
mov
popf
jnp
mov
xchg
outsb
push
stos
inc
cmp
rorb
ss
mov
jnp
popf
fnsave
sahf
negl
in
jne
mov
pushf
jnp
insl
int3
cmp
in
jnp
xor
dec
add
mov
gs
jno
ljmp
xchg
cmp
dec
and
enter
push
outsb
gs
pop
mov
xchg
sbb
or
push
inc
jo
and
inc
sarb
push
call
push
xchg
dec
not
push
jnp
sub
add
test
loopne
mov
sub
push
xor
inc
add
push
dec
popa
xor
mov
xor
lods
cwtl
add
push
daa
clc
mov
pop
jnp
in
push
inc
jmp
cli
testb
pop
adc
ja
jbe
jnp
xchg
in
pop
out
fwait
or
push
iret
push
jnp
jge
into
call
push
scas
mov
negb
fnstcw
lret
pop
mov
inc
rcll
das
mov
scas
pop
divb
jnp
adcb
mov
js
inc
ljmp
xor
cmpsb
jo
jnp
xchg
outsl
out
fmull
hlt
test
pop
in
push
movsb
jnp
in
xchg
pop
cmp
sbb
ret
in
sti
ja
fildl
jnp
iret
es
rorl
nop
sub
insl
stc
xor
sub
insb
rclb
imul
inc
sbb
adc
jnp
cmp
fs
jnp
or
and
hlt
push
sbb
jno
mov
jnp
sarb
fistl
cmp
sub
add
nop
cmpsb
daa
mull
cmp
dec
outsl
hlt
mov
pushf
xor
add
jae,pt
inc
mov
and
inc
in
and
cmp
sbb
les
or
jnp
fidivrl
aaa
or
ljmp
cmc
or
pusha
mov
mov
and
shlb
inc
notb
mov
jnp
fidivl
pop
movsb
jno
push
repnz
movl
data16
sbb
adc
negl
ja
adc
jae
or
lea
dec
jnp
jmp
mov
insl
mov
inc
jg
repnz
dec
sub
inc
cmpl
addr16
xchg
jecxz
xchg
lds
call
cmp
jnp
push
pushf
push
jnp
lcall
add
pushf
pop
mov
jnp
jge
dec
sti
rsm
and
pop
mulb
es
repz
fcomi
jns
cmp
xchg
mov
jecxz
mov
jnp
fldl
ss
jecxz
into
push
lods
cli
mov
push
inc
ret
jnp
pop
popa
adc
mulb
cmp
jb
mov
nop
orl
cltd
lcall
ficoml
mov
les
inc
or
fs
dec
jnp
inc
lret
imul
mov
adc
popf
outsb
es
jnp
decl
mov
mov
jo
xchg
nop
fstps
divl
inc
xchg
jnp
jb
ja
mov
jle
jne
out
es
lods
call
lods
lds
lock
lods
push
in
sub
clc
dec
cmp
xor
xor
xlat
jnp
leave
imulb
aas
sub
sarl
push
xor
inc
pop
mov
sub
push
stos
jg
add
aas
jbe
imul
dec
sbb
sbb
xchg
add
sub
xchg
add
insb
aaa
out
jnp
lret
out
fcoml
add
insl
mov
jnp
rclb
xchg
mov
jnp
push
stos
cs
cmp
mov
insl
out
sbb
popa
dec
sub
xor
dec
push
jnp
std
sub
jnp
cmp
pushf
mov
sahf
jnp
pop
fcoml
js
cmp
or
mov
movsl
call
into
enter
mov
add
jae
cli
test
inc
dec
pushf
jge
lcall
jnp
xlat
add
jmp
push
lock
pop
lahf
mov
jnp
mov
mov
push
cmp
arpl
ljmp
movsl
add
xchg
fwait
jns
dec
jle
movsb
outsl
or
sub
jno
lock
pop
ja
mov
test
pop
gs
outsl
in
mov
jnp
xchg
loop
xchg
int3
mov
std
mov
dec
xchg
pop
dec
dec
ds
jns
cmp
push
outsl
fidivrl
nop
repz
shlb
jle
ja
call
mov
push
mov
push
lods
xor
or
inc
decb
hlt
outsb
out
jnp
mov
fildl
lret
jnp
adc
mov
negl
arpl
or
shl
outsb
popa
repnz
jnp
in
icebp
xchg
fildll
xchg
or
vminps
loope
jne
scas
add
push
pop
ja
pop
jnp
lods
add
sub
jle
shrb
pushf
sbb
pop
jnp
idivb
cmc
jmp
push
fidivl
jnp
je
in
mov
cli
lods
loope
outsb
insb
mov
mov
xor
push
int
sbb
sbb
dec
ss
pop
mov
andl
insl
mov
pop
inc
call
jne
ret
out
loopne
test
push
jmp
jnp
adc
enter
neg
test
sub
std
cmp
and
dec
js
scas
jnp
cli
push
mov
xchg
aas
add
xor
cmp
testb
je
pushf
pop
xchg
or
sbb
cmp
insb
adc
sbbl
bnd
sub
pop
mov
pop
iret
rcr
outsb
cmp
int
adc
mov
mull
cmpsb
out
mov
mov
stos
or
insb
push
insl
xor
mov
xor
lret
pop
jne
stos
mov
push
jnp
cmp
inc
dec
jnp
cmp
call
imul
push
scas
sub
inc
or
call
insb
cmp
dec
mov
lea
ljmp
pop
jae
dec
pop
aad
out
in
outsb
stc
dec
lcall
lret
sbb
adc
inc
or
xchg
cmp
shll
fsubrs
jnp
adc
daa
rcll
adc
jnp
sbb
pop
mov
or
fdivs
push
mov
inc
roll
xchg
jo
jnp
in
iret
inc
cmp
sub
push
push
fisubrs
dec
jnp
aas
jp
xor
mov
jb
scas
sub
sub
setbe
std
mov
jnp
and
and
gs
das
jnp
or
mov
inc
mov
pop
mov
push
or
sub
mov
mov
push
pop
xor
in
cmc
or
inc
ret
lock
and
dec
sub
mov
inc
jnp
jbe
mov
jnp
mov
inc
les
fdivrs
sbb
jge
and
jnp
jle
and
cmp
jnp
add
mov
lods
xchg
mov
lods
mov
int3
adc
mov
cwtl
xor
mov
stc
repz
push
push
out
jnp
fwait
push
jmp
jae
js
jnp
inc
inc
mov
in
cli
jnp
mov
lahf
mov
nop
jbe
jp
jecxz
jnp
sub
jnp
or
insl
sub
xchg
stos
fs
lahf
pop
in
xor
in
mov
aad
rorl
xor
jnp
push
sarl
or
in
les
push
pop
and
in
sub
push
or
and
adc
stos
js
mov
dec
cwtl
jnp
int3
add
inc
subl
das
cmp
iret
stos
pop
scas
mov
jae
test
xchg
push
inc
lea
pop
fistpll
xchg
or
cwtl
dec
cmpsb
dec
ret
int
or
xor
jnp
into
movsb
ja
fnstenv
dec
outsb
in
stc
jnp
loop
sti
cmpsb
rorb
insl
in
sub
inc
js
es
dec
pop
xchg
adc
sarl
notl
push
in
mov
lods
loope
jnp
jae
push
sub
dec
imul
mov
pop
xor
insb
aam
fcoms
push
xlat
test
pop
ja,pn
rolb
mov
ljmp
and
dec
jnp
idivb
and
stos
leave
outsl
cmp
jnp
cs
push
jmp
rcr
imul
jns
call
iret
outsl
jne
push
jnp
psrlq
mov
popa
aaa
jmp
lcall
bound
mov
hlt
faddl
int
push
movsb
mov
xchg
adc
jnp
les
ror
ljmp
in
clc
jb
lret
add
jae
adc
and
pop
fbld
jnp
cmpsb
sub
les
add
dec
and
jnp
or
mov
mov
nop
sahf
movsl
mov
sbb
mov
push
mov
mov
cmp
mov
in
mov
jmp
jnp
and
shrb
add
mov
bound
and
insl
pop
data16
jnp
cmp
nop
stos
jnp
gs
xchg
inc
cmc
xchg
bound
push
xlat
adc
arpl
mov
ljmp
pop
jne,pt
call
inc
push
jle
addr16
rcrl
stc
adc
pop
popa
orl
imul
inc
testl
out
jecxz
ret
lods
cmp
cmp
pushf
outsl
pushl
jbe
and
lcall
push
and
fstpt
addr16
jo
lods
addr16
mov
cmp
mov
push
out
jns
sti
mov
imul
dec
lods
fstl
ja
jns
ljmp
cmp
ret
sub
fcmovnbe
mov
adc
addr16
push
dec
lods
adc
test
jnp
mov
sbb
jnp
je
pop
repnz
aam
jnp
adc
mov
sahf
xor
jnp
push
push
stos
jle
inc
leave
hlt
movsl
sbb
xor
js
jp
scas
scas
iret
sbb
insl
mulb
out
out
jnp
arpl
fimull
mov
mov
cmpsb
or
pop
dec
lahf
ficompl
in
test
mov
gs
cmp
cmp
lods
gs
jae
std
pushf
ja
jnp
mov
push
sub
nop
push
data16
add
mov
jnp
cli
cmp
lds
jmp
mov
xor
scas
iret
jne
mov
lea
cld
test
jne
xor
add
jnp
mov
dec
into
jnp
insl
fldcw
jnp
imulb
mov
mov
mov
mov
testb
ficompl
call
addr16
jne
cmpb
sbb
lock
xor
pop
stos
or
jnp
dec
cmp
lock
dec
mov
pushf
or
mov
dec
mov
sub
lods
loope
pop
jbe
sarb
pop
pushf
xchg
mov
mov
mov
sub
mov
shll
xor
lahf
insb
pop
out
sahf
aaa
xchg
adc
jns
jnp
lods
pop
pop
rolb
mov
js
fdiv
jnp
int3
mov
sti
dec
scas
lret
in
mov
push
adc
shlb
addr16
pop
or
jnp
cmp
testb
gs
lods
push
xor
data16
inc
movsl
jecxz
sbb
mov
data16
pop
mov
fstpt
cli
sub
repnz
mov
das
cmc
sub
push
dec
jnp
loop
xor
neg
sahf
jnp
xchg
xlat
push
idivb
push
data16
rep
js
jnp
mov
stos
out
jnp
ja
lods
cmp
sbb
bswap
mov
jo
jnp
inc
adc
clc
aas
ret
cmp
nop
or
sbb
pop
push
fwait
orb
xor
outsb
mov
fcoms
jmp
sbb
push
sbb
or
sub
aas
inc
pop
es
aaa
pop
les
lcall
test
mov
pop
jnp
mov
jecxz
sub
out
xor
test
mov
aaa
xchg
push
and
xor
mov
jns
inc
stos
dec
jnp
stos
and
cltd
mov
jnp
out
dec
test
out
ds
cmp
gs
inc
pop
cli
pop
leave
insl
xor
mov
das
jnp
aad
cmc
hlt
into
cli
sbb
pop
sub
pusha
jnp
add
cmc
jnp
pushf
repz
aad
mov
in
je
sub
push
loope
jnp
jg
int
cmc
lods
sub
jnp
dec
xor
jnp
push
inc
insb
inc
ret
xor
js
mov
or
loope
out
or
sub
ss
sbb
shlb
pop
repnz
jl
lret
shl
call
stos
js
popa
jnp
iret
inc
mov
int
adc
cld
or
sbb
mov
mov
cli
sbb
out
jnp
sub
nop
fistpll
add
jecxz
jnp
sbb
xlat
lea
arpl
xor
jnp
iret
mov
data16
rcrl
jnp
sub
clc
or
and
jnp
cmc
loope
mov
notl
ds
in
xor
orl
lds
mov
fisttpl
inc
sub
jmp
sbb
jnp
pop
cmp
popf
sti
adc
pop
sub
cmp
xchg
fisttpl
ret
fwait
pop
push
nop
bnd
rorb
stc
mov
sbb
cli
mov
push
repz
sub
sbb
jne
lret
dec
iret
jnp
pop
or
push
ljmp
xchg
dec
js
push
mov
mov
pop
scas
sbb
push
mov
lods
sub
es
mov
movsb
add
xor
and
shll
jnp
ret
dec
ss
in
jnp
call
mov
dec
imul
repz
jnp
outsb
nop
scas
pop
iret
in
idivb
fwait
jl
push
dec
lcall
adc
jb
mov
les
in
cld
xlat
cltd
inc
mov
pop
xorl
stos
mov
cmp
mov
jne
push
mov
ja
pushf
xchg
pop
idivb
daa
addr16
orl
xchg
lods
out
bnd
xor
xchg
inc
in
xchg
lock
mov
adc
lea
dec
insl
sub
jnp
jmp
cmp
jnp
arpl
xor
ljmp
push
cmc
sub
loop
mov
mov
dec
imul
cmpsb
xchg
popf
shlb
pop
jnp
stc
lret
std
mov
je
in
jecxz
testb
ljmp
call
adc
scas
xchg
or
mov
add
lahf
jns
jg
subl
ss
mov
lds
sarl
mov
decb
push
push
sbb
mov
gs
or
lcall
cmc
inc
push
lods
sub
cmpsb
outsl
and
xor
jle
imul
pop
sub
sbb
jnp
cs
mov
or
jnp
xchg
xchg
jbe
addr16
push
cmp
jnp
aaa
daa
pushf
inc
fwait
rolb
test
push
ss
cmp
xorb
pushf
jnp
in
into
fnstenv
in
xor
fldt
rcl
daa
imul
and
mov
dec
jnp
xor
mov
inc
cld
and
or
dec
outsb
in
xor
sbb
mov
jnp
mov
loope
sub
rol
jo
push
pop
mov
test
in
xchg
jnp
sbb
and
fldt
jnp
mov
into
ljmp
test
sarb
cmp
dec
insl
mov
loop,pn
in
pushf
call
cmp
mov
and
enter
xchg
inc
dec
jno
dec
sarl
lret
inc
push
mov
imul
xchg
jnp
and
pushf
jmp
aad
sbb
arpl
jecxz
jne
sahf
daa
mov
in
test
mul
cwtl
jl
xor
cmc
stos
call
rorb
lods
popf
and
jne
mov
or
cmp
or
jnp
cmp
jnp
ret
nop
xchg
sbb
mov
or
inc
fldcw
mov
pop
call
and
popf
push
imul
clc
outsb
pusha
jnp
mov
cmp
stc
mov
fcmovbe
jnp
push
les
jnp
out
push
mov
cmp
sbb
mov
dec
dec
add
jl
inc
jno
jnp
jg
dec
mov
cmp
push
cmpl
je
repnz
push
push
jnp
add
dec
mov
fsubrs
xor
stc
aaa
mov
or
and
inc
lods
dec
jnp
sub
pop
imul
mov
jnp
dec
loope
jb
mov
pop
lods
out
ja
adc
sbb
and
xorl
push
jle
sarl
testl
jo
add
fstp
jnp,pt
outsl
mov
jno
xchg
aas
scas
popf
mov
mov
jnp
addl
jnp
sbb
inc
inc
jnp
insl
adc
or
outsb
jae
ss
dec
mov
cmp
out
pushf
xor
sbb
jnp
gs
push
dec
xchg
call
pop
int
in
loope
mov
js
orl
lea
das
dec
ret
sbb
jmp
in
cli
cmp
xor
lods
adc
imul
lcall
add
add
pop
dec
mov
jmp
mov
jb
pop
and
aaa
pop
inc
jae
lret
pop
scas
into
jnp
and
jbe
jnp
stc
mov
jne
adc
stos
cltd
jae
xlat
inc
and
jbe
ja
push
in
jnp
mov
push
in
orb
jnp
mov
ljmp
das
sbb
jbe
fwait
es
nop
sbb
pop
jmp
sahf
cmp
xor
loopne
push
xchg
mov
jnp
dec
pop
pushf
and
or
test
ljmp
push
or
jnp
dec
repnz
cli
xchg
lret
inc
xchg
inc
fdivs
inc
lcall
jnp
mov
xor
ss
mov
xchg
mov
jns
mov
jmp
sbb
jnp
jge
xchg
outsb
inc
xor
xor
out
jnp
lahf
sub
mov
std
fidivs
lock
lea
cs
dec
aam
jnp
cli
xor
es
in
in
movsb
sahf
inc
sub
sar
dec
ja
or
jnp
dec
jecxz
cmp
xor
jnp
dec
pop
xchg
push
jg
jnp
stos
lods
xor
lock
sbb
loop
adc
mov
lret
bt
sbb
stc
loopne
jnp
into
pop
adc
xchg
push
movsl
or
shll
push
fbstp
das
sub
dec
stc
jnp
fstl
xor
ss
ja
pop
lods
mov
insb
fisttpl
inc
sub
pop
mov
inc
lock
icebp
mov
xchg
mov
cmp
xchg
clc
xchg
pushf
mov
xlat
int3
jnp
mov
jnp
daa
add
push
mov
inc
xor
add
sub
pushf
jnp
and
je
or
ret
mov
xchg
mov
dec
jnp
push
mov
lret
dec
popf
mov
jne
loop
sbb
movsl
xchg
pop
inc
shlb
shll
cmpsb
mov
mov
jnp
inc
cmp
out
hlt
lods
jnp
jne
and
stos
int
jnp
das
xor
sbbl
jnp
hlt
xchg
sbb
orl
sahf
jo
mov
or
test
xchg
jae,pn
mov
ret
jo
jmp
in
aaa
pop
cmpsl
sbb
jbe
mov
cmp
mov
pop
es
jnp
or
and
mov
jns
gs
pop
dec
sub
sub
popa
sub
insl
test
push
jmp
or
adc
fisubrl
mov
push
call
jnp
mov
das
push
pop
je
popa
xchg
adc
int3
addr16
inc
ret
inc
dec
dec
add
jae
popf
lds
adc
inc
cmpsb
ljmp
push
test
inc
mov
outsb
adc
dec
add
insl
addr16
or
imul
xlat
scas
pop
mov
subl
outsb
sarl
jp
dec
jnp
aad
in
repz
ret
pusha
mov
add
sbb
jge
test
jnp
aaa
out
int3
lods
call
and
ja
mov
sbb
xor
cmpsl
pushf
or
ljmp
testl
lods
bound
fisttpl
stos
lcall
jnp
rorb
jnp
into
push
ss
or
mov
andl
jnp
adc
into
xor
jp
pop
and
sub
and
pop
rclb
pushf
dec
inc
push
aaa
jnp
mov
inc
dec
into
inc
sbb
out
mov
xchg
jnp
or
push
mov
hlt
inc
pop
lods
bound
mov
pop
and
jnp
and
sub
fildll
jbe
mov
lods
idivb
cmp
push
or
add
imul
mov
fwait
pop
jnp
inc
pop
sub
mov
or
jnp
subw
pop
xlat
jnp
mov
aaa
int
mov
mov
xchg
dec
scas
ds
sbb
xor
iret
dec
stos
cmpb
push
bound
enter
cwtl
xor
mov
decl
dec
and
add
jnp
ja
pop
xchg
push
jnp
int
pop
sahf
dec
hlt
pushf
or
into
insl
jnp
ja
add
aaa
xchg
mov
test
lods
addr16
sub
sub
pushf
insb
mov
adc
insl
sub
movsb
or
movsl
mov
daa
push
adc
xchg
or
pop
mov
fwait
aaa
popf
movsb
or
imul
out
pop
mov
pop
mov
sbb
xchg
and
xchg
std
jmp
push
dec
dec
je
jnp
lea
mov
idivl
fidivl
shrl
adc
jnp
lea
cmc
push
push
jp
mov
imul
xlat
xor
fwait
fs
call
les
push
sbb
jnp
fadds
jnp
xor
sub
daa
aas
sub
inc
xlat
ja
and
xchg
xchg
imul
insl
mov
fcomi
pop
jnp
dec
imul
mov
cmp
or
add
lcall
lods
xchg
movsb
sbb
jae
push
test
add
popf
sbb
orb
ja
push
push
mov
push
shl
pop
sub
sbb
jecxz
icebp
rolb
jmp
mov
pushf
pop
add
insl
ljmp
scas
cmpsl
std
jae
pop
cmp
xchg
inc
aam
lods
jnp
and
decb
lahf
or
insl
add
shl
add
fmull
and
lods
mov
or
and
mov
push
out
xor
jl
or
dec
jae
outsb
pop
aad
pop
sbb
cmpsl
stc
add
sbb
mov
data16
mov
js
dec
jae
xchg
inc
loopne
mov
outsb
mov
insl
xor
sahf
enter
mov
pop
outsl
arpl
adc
jnp
inc
call
sub
js
jns
mov
mov
scas
int3
pop
sarl
rol
adc
lahf
and
jnp
in
sahf
sub
xor
jnp
lods
and
push
add
cs
in
loop
jnp
xchg
inc
sahf
mov
mov
lock
xor
scas
xchg
cmpsb
inc
pop
add
and
pop
pop
pop
shlb
shl
aad
jecxz
leave
sbb
mov
sub
test
or
ret
jnp
xor
mov
and
mov
pop
outsl
or
pop
test
push
test
fwait
pushf
xchg
imul
and
lea
cld
push
or
jnp
cmp
fcom
repz
scas
lret
call
push
jnp
aaa
lods
adc
and
pushf
in
add
lds
jae
enter
mov
mov
into
fidivrs
or
es
xor
jb
out
inc
ljmp
jno
test
dec
fs
int3
jnp,pt
sahf
push
scas
dec
not
inc
jnp
je
rcl
cmp
cmpsb
mov
jge
jno
rorb
lock
jmp
jno
sbbb
ja
or
and
pop
jnp
jecxz
inc
dec
cmp
jnp
pop
shll
cmp
hlt
mov
iret
add
notl
xor
xchg
add
outsl
popa
push
or
in
jns
pop
sti
mov
lret
cwtl
das
lods
icebp
repnz
nop
mov
jo
push
fbstp
aad
add
push
stos
icebp
dec
mov
adc
push
pop
imul
push
push
lret
jae
rcl
imul
dec
in
lods
loope
jnp
inc
lods
lea
rcr
and
aad
xlat
mov
jnp
xor
jnp
ror
jno
push
in
loope
and
aaa
push
xchg
enter
jnp
or
testl
or
xchg
andl
lea
sub
inc
flds
lahf
pop
or
dec
into
rcll
mov
insl
aad
pop
jnp
push
push
cmp
sub
test
xor
outsl
adc
loope
push
xor
movsl
jae
insb
into
lret
shrb
add
xchg
sbb
inc
in
cmpsl
jne
jnp
cmp
cmp
sub
jnp
out
or
add
mov
fdivrs
xor
test
ljmp
stos
pop
aam
outsl
add
sub
xchg
pushf
jnp
mov
int
jnp
sahf
cs
dec
popa
imul
orl
movsb
mov
lods
mov
add
mov
pop
xor
fisubs
jnp
sbb
pop
jnp
push
xchg
jb
dec
mul
jnp
call
dec
sarb
and
add
mov
push
aaa
out
and
mov
or
xchg
pop
fistpll
lods
add
lcall
jnp
fneni(8087
mov
iret
jecxz
push
lods
pop
stos
jnp
jno
mov
das
call
into
outsb
lods
and
idivb
out
ja
push
push
xlat
mov
lcall
dec
dec
les
xor
in
push
leave
or
dec
xchg
ds
jge
iret
fsubr
cli
or
repnz
jnp
sbb
arpl
pop
jae
dec
mov
mov
jnp
pop
inc
xchg
std
mov
iret
shrb
aaa
sbb
sbb
pop
sti
push
insl
fnstsw
sub
sub
add
dec
fnsave
mov
pop
dec
jb
sbb
arpl
ds
cmp
jnp
cs
sar
xchg
pop
cmp
imul
sbb
inc
dec
lock
push
dec
pusha
insb
sub
loope
jnp,pt
subb
mov
sahf
jnp
mov
and
xchg
xor
js
int3
jnp
fldl
fwait
mov
orl
leave
jb
fldt
push
das
xchg
adc
pop
jmp
xchg
dec
jae
xlat
mov
jp
mov
or
jae
int
fimull
cs
outsl
jo
xor
xor
and
into
dec
lods
dec
push
mov
popa
xor
lock
stos
cmpsl
or
mov
or
cwtl
mov
or
lret
lea
jl
aaa
sbb
jnp
jmp
jle
jg
std
sbb
add
mov
push
idivb
sbb
xchg
arpl
out
jb
stos
mov
mov
mov
cmpsb
push
and
sbb
insb
loopne
xor
stc
push
xor
pop
outsl
or
jne
jnp
push
mov
ret
jnp
int3
clc
outsb
jbe
dec
sbb
mov
cmp
std
add
imul
cmp
dec
jne
jg
sbb
push
cmp
lods
jnp
push
sub
or
out
jnp
jp
sarb
inc
div
sarb
lock
lret
loope
out
push
push
push
cmpsl
nop
ljmp
bound
inc
pop
xor
les
aad
and
xlat
lods
pop
cmpsb
jns
in
jnp
jo
push
jecxz
mov
ja
add
push
stos
popf
lods
sarb
jl
sahf
mov
push
sub
adc
mov
sbb
mov
sub
mov
fwait
and
jg
in
lcall
jnp
pushf
lret
cmp
int
jnp
mov
stos
xchg
mov
inc
je
lock
jo
adc
jnp
ror
leave
shlb
xchg
jns
imul
sbb
jns
leave
cmp
movsl
in
and
mov
test
cmpsl
mov
std
jmp
and
jae
jle
lea
push
nop
sbb
pop
mov
lcall
fadds
daa
outsl
loop
fs
lods
jnp
ja
xchg
xor
mov
xlat
jo
xchg
sbb
das
adc
out
or
or
rclb
aas
repnz
pop
jnp
push
jge
call
jo
dec
push
lret
ret
push
lcall
inc
mov
enter
ljmp
out
and
adc
pushf
fs
mov
push
jle
jnp
ljmp
jecxz
pop
into
push
in
xor
movsb
incl
hlt
adcb
jnp
leave
cmp
orl
les
mov
adc
push
jnp
push
fwait
mov
xor
mov
pushf
aaa
pop
pop
jnp
adc
push
sahf
mov
fcoms
jge
jp
pushf
call
aam
ljmp
or
xchg
pop
push
jnp
xchg
and
aam
inc
cwtl
hlt
jl
pop
pushf
pop
cmp
popf
in
lret
jae
cli
into
es
jnp
xchg
sbbl
insb
jae
aaa
jnp
cmp
mov
int3
jnp
xchg
ss
sbb
movsl
mov
sbb
aaa
lea
jge
xor
xor
in
jnp
fstps
mov
pop
addr16
bound
mov
mov
ljmp
shlb
fidivrs
call
mov
jnp
xlat
mov
mov
loopne
lahf
jb
cli
imul
mov
sub
xor
insb
push
mov
dec
jp
std
ds
pop
xchg
js
ljmp
jnp
es
dec
mov
aam
je
js
inc
repz
cmp
fcomps
inc
clc
test
push
shll
mov
nop
sub
mov
sub
pop
ret
inc
adc
mov
and
jg
or
aaa
pop
rcrb
jp
pop
jae
adc
dec
int3
lret
xchg
mov
jae
ljmp
sbb
int
jns
loope
sbb
jnp
cli
lods
lock
call
pop
cltd
push
or
dec
jae
mov
stos
push
es
cld
push
ja
outsl
sbb
dec
add
mov
flds
cmp
test
or
inc
and
mov
jo
dec
or
jnp
in
sub
dec
pop
xor
movsl
jg
jae
sbb
mov
clc
dec
jae
rorl
mov
pop
stos
cmp
ljmp
jno
fdiv
push
jo
xchg
bound
imull
mov
adc
or
mov
out
adc
sarb
push
mov
orl
stos
mov
xor
inc
lods
jae
xchg
js
xchg
sub
pop
mov
loop
outsb
jbe
jnp
in
aas
pop
fisubrs
push
pushf
jnp
pop
pop
fcoms
imul
into
popf
ret
ja
rorb
push
dec
scas
movsl
sub
in
mov
xor
mov
cwtl
sti
filds
cmp
add
inc
dec
inc
fwait
dec
inc
out
mov
jae
iret
push
push
jnp
xor
jnp
jb
or
jnp
or
xchg
inc
mov
insl
les
cwtl
fcompl
insl
fstps
push
lods
mov
aad
or
outsb
jnp
xor
mov
adc
ret
jp
mov
pop
aad
sahf
push
mov
inc
les
jnp
mov
sbbl
daa
xchg
stos
insl
sbb
add
jnp
xor
ret
add
or
ret
adc
jp
xchg
inc
cmp
cli
or
mov
or
insb
jp
inc
ret
xchg
xchg
dec
test
jnp
jo
mov
ret
mov
cli
jae
sub
mov
jnp
mov
lds
mov
jnp
je
xchg
add
dec
pop
add
js
lock
push
mov
out
cs
mov
test
repz
xor
mov
mov
outsb
sub
cmpsb
xchg
push
repnz
lea
jnp
stc
push
mov
loopne
pop
shl
sub
in
and
popf
jo
sbbb
popa
stc
dec
jbe
or
lret
cmp
inc
mov
hlt
shll
cld
loop
xor
pop
stc
push
outsl
add
dec
sbb
pop
aas
jae
les
pop
dec
mov
mov
inc
or
fsqrt
int3
jnp
mov
jg
or
sub
js
jae
idiv
ficomps
jnp
lods
lods
add
mov
lcall
std
lret
out
sub
dec
xor
insl
adc
push
sar
jmp
cmp
mov
mov
out
jle
lcall
stc
mov
jecxz
add
mov
pop
cltd
in
mov
insl
xor
jb
mov
mov
jge
inc
inc
xor
gs
xchg
mov
clc
popa
scas
bound
divb
and
xchg
xor
mov
add
sti
or
jae
aas
pushf
cmp
popl
out
mov
cmp
sbb
xchg
xchg
mov
mov
jo
mov
jnp
cli
cmp
insl
mov
out
xor
mov
or
sub
mov
mov
mov
inc
clc
movsl
jnp
and
aam
roll
cmp
shufps
adcl
jne
push
jno
test
jnp
jp
dec
subb
loopne
or
mov
jg
bound
mov
pop
je
decb
jae
jbe
jg
call
or
mov
push
decb
movsl
jo
jmp
imul
fsubl
mov
out
or
cmp
inc
enter
fisttpl
cmp
mov
int
shlb
xor
test
or
jnp
xor
mul
and
push
icebp
das
xor
dec
clc
inc
ljmp
js
sarl
push
mov
rorb
pop
cld
inc
out
enter
jae
mov
dec
pop
sub
dec
xchg
notb
jns
out
or
or
sub
cmp
mov
pushf
popa
lcall
cmp
ret
ja
ds
sarb
adcl
cmp
sarb
sbb
adcl
ja
mov
jnp
loope
cmp
sbb
mov
mov
rclb
or
xchg
mov
jae
mov
jnp
mov
movsl
sub
lock
cli
mov
or
insl
arpl
dec
push
out
jnp
adc
xchg
cmp
jnp
adcl
mov
iret
out
incl
or
jecxz
jb
pushf
jnp
and
mov
test
pop
cmp
in
cmp
sbb
jnp
stos
mov
cs
push
out
mov
call
cmp
aam
stc
jp
popf
lret
lods
leave
xlat
jnp
jo
lret
mov
sub
mov
cli
or
outsl
and
pusha
jnp
jge
daa
aad
jnp
pop
scas
push
cmpsb
jecxz
push
jnp
fwait
lret
add
push
jnp
repz
ds
xchg
jns
jb
inc
or
jne
add
xchg
jnp
mov
ss
ljmp
rclb
scas
jnp
adc
xor
xor
jnp
inc
xchg
ficoms
mov
mov
add
cmp
mov
cmpsl
xor
insb
bound
lret
rorl
inc
jmp
jg
cvtps2pd
dec
cmp
sbb
or
jae
das
into
pop
adc
jo
xchg
insb
mov
inc
or
mov
xlat
jnp
orl
jnp
add
arpl
inc
xor
sbb
cli
lock
mov
xor
lods
popa
pop
rcll
cmp
fsub
jnp
push
lods
lods
sbb
sub
clc
xchg
and
and
fidivrl
test
pop
jns
jecxz
lods
aaa
inc
mov
xchg
xorb
xor
or
dec
and
mov
mov
in
imul
xor
popa
jns
add
sarl
xor
punpckldq
pop
loope
push
inc
adc
sbbb
add
imull
repnz
xor
jnp
mov
inc
mov
jnp
out
ljmp
jo
inc
xor
jmp
jnp
push
stos
loope
pop
repnz
push
cmp
push
xchg
js
xor
jnp
mov
test
push
out
imul
ljmp
xor
adc
ret
add
arpl
pop
imul
inc
divb
lea
mov
stos
sub
add
jnp
mov
pop
ja
xchg
test
cmp
std
push
sub
call
xchg
xchg
jnp
subl
adc
loopne
shl
mov
xchg
jnp
adcl
jnp
pop
pop
push
cmp
dec
aad
mov
push
cmpsl
mov
cmpsb
xor
in
dec
out
das
cmp
adc
pop
into
in
xor
aaa
add
loop
jnp
dec
repz
std
mov
enter
mov
jns
dec
push
test
adc
or
repnz
ss
ficomps
mov
enter
addr16
mov
jecxz
stc
test
jnp
push
scas
lahf
xchg
mov
add
sub
mov
jb
mov
or
and
out
fisubrl
xlat
stos
ljmp
or
sahf
sbbb
js
sbb
mov
imul
call
adc
sub
cmp
jnp
push
lcall
aaa
ljmp
or
jb
mov
xchg
sbb
rcrb
fsubrs
and
mov
jbe
push
mov
jae
subb
sbb
lea
rolb
mov
imul
sub
cmp
ljmp
jnp
pushf
ljmp
jnp
dec
rol
sbb
cmp
sbb
mov
je
out
mov
lds
xchg
xchg
cmpsb
or
cmp
outsl
jp
jle
inc
or
dec
lods
xor
ficompl
inc
sub
inc
or
lret
mov
cmp
mov
or
sub
adc
int3
dec
pushf
jae
fnstcw
in
dec
inc
cld
xor
adc
jno
and
es
cmpsb
mov
cmp
fwait
jnp
jle
scas
or
lea
sti
aas
sub
adc
inc
mov
sbb
xchg
jbe
shrb
fcmovnb
dec
iret
and
push
lret
sub
add
xchg
imul
nop
andb
xor
lea
cmp
mov
out
jnp
stos
jb
pop
lock
stc
inc
ret
adc
push
insb
mov
jnp
in
and
jnp
xchg
push
sbb
scas
mov
divl
inc
pop
fwait
jnp
idivb
mov
jnp
addr16
inc
loopne
popa
inc
jnp
push
dec
push
mov
and
adc
pop
outsl
xor
sahf
icebp
inc
jnp
xlat
cvtps2pi
sbb
and
lret
test
jnp
xlat
mov
adc
push
or
lods
jb
ljmp
mov
fldl
lods
imul
sbb
xor
dec
repnz
sub
add
rclb
lret
cmpsl
jnp
sub
mov
or
push
and
mov
jno
xchg
adc
mov
wrmsr
push
arpl
inc
inc
js
and
xchg
push
cmpsl
scas
popf
outsb
jns
mov
add
pop
pop
adc
jnp
mov
lods
arpl
pop
aas
cli
das
hlt
fists
fs
adc
mov
mov
or
jnp
mov
lret
repz
xchg
sub
sbb
lods
xor
lods
shl
mov
pop
fdivrs
or
xchg
pop
imul
insb
dec
jnp
push
add
jnp
dec
es
fmull
add
std
inc
hlt
jnp
gs
jp
mov
adc
jnp
out
loop
dec
jnp
repz
mov
jnp
clc
loope
push
in
pop
xor
jnp
add
out
lahf
jmp
jne
mov
sbb
push
or
jmp
lods
mov
xchg
or
rclb
in
sub
pop
xorb
mov
sbb
rorl
xor
or
cmp
mov
jecxz
dec
jne
fstpt
xor
lret
les
lods
mov
in
mov
sbb
push
push
std
test
xlat
xchg
and
dec
rol
mov
mov
sub
clc
jnp
jge
rorb
or
xor
repnz
xlat
ret
jbe
mov
jnp
mov
push
je
inc
in
push
fdivrl
lea
adc
xchg
inc
shll
mov
sub
sarb
movsl
dec
rcr
loop
jnp
cld
cli
sbb
xchg
sarl
mov
mov
sbb
out
cmp
call
or
js
dec
mov
mov
jno
jnp
inc
ds
or
das
push
aas
push
fistps
sbb
sti
inc
cmpsb
int
jnp
dec
or
jb
mov
push
ret
jnp
insb
in
sub
push
jnp
cld
enter
fldl2t
imul
leave
out
bound
push
jnp
xchg
mov
mov
push
ljmp
mov
cmp
add
lret
push
jnp
jl
pop
insb
scas
mov
lds
fsubrp
sbb
push
mov
xchg
enter
jnp
data16
lret
outsl
and
or
xchg
inc
add
xchg
jnp
mov
in
mov
loopne
add
or
daa
int3
or
lea
mov
xchg
clc
cmp
dec
sub
inc
call
repnz
sub
jnp
xor
inc
mov
inc
dec
and
add
jnp
pop
pop
and
xchg
jbe
jnp
or
lret
repnz
call
lret
inc
imul
nop
or
inc
inc
ja
stc
pushf
bound
sti
repz
adc
imul
jno
repnz
dec
repnz
mov
sahf
test
jnp
fisttpll
enter
sub
mov
arpl
clc
xchg
ja
jge
sub
loop
mov
sub
add
in
insb
lret
push
adc
popa
dec
or
fisttps
jns
out
clc
push
jnp
dec
fnstenv
cmp
jnp,pn
cmc
cmp
cmpsb
cmp
push
sbb
sbb
imul
jmp
sub
divl
add
stos
cmc
jb
pop
pop
jnp
inc
cmp
test
xor
xchg
icebp
ja
aam
fwait
dec
jp
push
push
ja
imul
sti
es
pop
pop
jnp
mov
vzeroupper
push
imul
pushf
jl
or
jnp
sub
and
aaa
xor
rcrb
xchg
fs
inc
adc
xchg
push
sbb
push
cmp
rorb
and
and
imul
inc
ss
or
xchg
xor
popa
sub
dec
sub
jle
or
jp
in
fcmovb
lcall
jae
add
jnp
sahf
xor
fimull
pop
adc
sub
push
or
hlt
mov
dec
imul
std
shll
jne
jno
sub
xlat
mov
inc
cwtl
mov
imul
icebp
insb
add
aam
imul
loopne
mov
lods
mov
das
ret
sarb
aam
sbb
popa
sbb
inc
push
jnp
cmp
imul
jnp
call
mov
mov
outsb
pop
jecxz
sub
xchg
lods
push
shl
jnp
cmp
mov
inc
ror
repz
dec
jnp
es
insb
jb
pop
std
xchg
push
sbb
insl
sub
lcall
push
jbe
or
lock
jnp
enter
add
sbb
stos
rorl
addr16
jnp
leave
sub
out
push
add
aam
out
iret
jnp
fwait
bound
int
jns
add
jnp
mov
lods
pusha
pop
push
jo
insb
ficomps
jno
xor
sbb
fsqrt
jae
lods
sarb
clc
imul
sbb
fsubr
insb
push
jbe
repz
pop
mov
push
int
out
sub
lods
jnp
mov
mov
lahf
sub
mov
jge
repnz
mov
xor
inc
or
dec
push
jnp
int
push
idiv
or
pop
outsb
ja
inc
push
add
insb
cli
jg
fcmovne
and
mov
cmc
pop
lahf
mov
daa
fcmovbe
xor
popf
sub
jb
mov
ljmp
leave
jp
pop
and
xchg
outsb
imul
fdivs
pusha
pushf
jnp
call
cmp
in
shrl
cmp
dec
jnp
jecxz
adc
stos
cmc
pop
or
jae
das
ror
dec
push
jnp
cmp
pop
jnp
pop
arpl
jnp
ret
mov
fs
jnp
mov
aaa
test
push
into
lods
rcrl
ret
test
inc
clc
mov
cmp
test
jb
dec
mov
mov
sub
roll
orl
push
fcomps
insb
pop
bound
and
sbbb
xchg
jnp
lea
xor
jnp
mov
mov
cwtl
pop
bound
fisubl
and
xor
out
jnp
sub
xor
mov
jnp
lret
xor
fists
ljmp
cltd
gs
xor
das
imul
jo
xor
jnp
mov
sub
lods
mov
sti
out
jne
mov
cvtpi2ps
jo
testb
or
insl
mov
xor
sbb
fisubl
dec
stos
mov
and
fwait
mov
popf
push
mov
shll
xchg
or
out
cld
jnp
mov
sbb
imul
inc
mov
orl
ljmp
stos
rolb
push
sub
outsl
inc
pushf
lds
xor
bound
jnp
push
mov
test
or
or
sarb
jnp
and
popa
stc
mov
dec
stos
jnp
mov
fsubrs
push
outsb
xchg
insl
or
mov
inc
popa
in
fwait
jnp
rol
jb
push
bound
cmp
sbb
das
mov
gs
sbb
pushf
outsl
mov
push
outsb
dec
xchg
jnp
jle
xchg
ret
pop
or
sti
pop
pushf
push
sbb
outsb
outsl
push
mov
lret
jae
adc
jae
mov
mov
pop
sub
stos
pushf
inc
sbb
sub
test
push
xor
mov
js
jge
aaa
dec
test
ss
daa
mov
and
cmc
jle
bound
cli
fs
pop
dec
mov
mov
mov
out
jnp
jp
gs
push
cmp
inc
dec
repnz
lcall
jnp
movzbl
cmp
stc
jnp
pop
lret
push
popa
dec
sub
and
ja
fcmovne
lretw
movsb
stos
notl
loopne
pop
das
pusha
mov
jae
insb
mov
mov
mov
rolb
or
jbe
ja
dec
push
sahf
mov
repz
xor
cltd
hlt
jae
mov
mov
lea
test
pop
loope
add
cwtl
jnp
lods
xor
ret
int3
xchg
ja
lahf
in
add
jnp
jbe
decb
push
sub
jo
in
loope
out
jnp
pop
imul
roll
cltd
jno
stos
imulb
pop
or
mov
xlat
das
cmpb
push
jp
in
jnp
fstpl
jg
jnp
add
in
push
jnp
and
xchg
push
jns
pop
jnp
ret
pop
inc
aaa
repnz
imul
xor
pop
ffree
pop
fildl
jae
dec
or
xor
jge
mov
repnz
jnp
shrb
fidivrl
jb
lock
jnp
and
std
addr16
aad
aas
loop
adc
jo
sbb
jnp
adc
push
jmp
pop
pushf
lret
cmp
gs
call
mov
ret
fwait
jnp
mov
js
jnp
imul
fdiv
cmpsl
lret
call
lods
inc
pop
xor
jnp
es
out
sbb
xchg
imul
cmp
subl
nop
adc
mov
push
adc
js
jnp
mov
insl
inc
imul
lods
dec
add
sub
xchg
or
push
ja
bound
aad
xor
jnp
mov
in
stos
jnp
sub
in
adc
xchg
pop
and
rolb
ds
jge
dec
into
out
inc
mov
insb
outsl
push
sbb
add
jnp
fcompl
dec
lods
mov
nop
clc
push
in
fstps
ret
clc
push
pop
rcr
jnp
in
sub
pop
sbb
testl
dec
stos
cs
jg
test
mov
pushl
in
stos
das
push
inc
insl
xor
shr
dec
xor
jae
cmp
xor
pop
gs
xor
mov
jnp
xchg
push
sbb
push
lcall
fstpt
jnp
sub
int
into
outsb
xchg
jnp
lods
jne
sti
scas
mov
fbstp
push
pusha
inc
fstpt
fwait
fs
fisubrl
jb
enter
insb
xchg
jns
rorl
lret
lock
sbb
sub
add
and
sub
adc
sub
loope
inc
sub
ljmp
xor
sti
fdivrl
adc
imull
pop
int3
mov
int
jnp
inc
dec
mov
jnp
mov
add
xchg
gs
sbb
pop
adc
jnp
jecxz
fistpll
push
or
pushf
sub
cmpsl
iret
adc
push
pusha
xlat
jnp
and
sti
fstpt
xor
jl
shlb
and
inc
out
jo
or
fsubp
fdivrs
loopne
mov
ja
add
sub
nop
and
adc
or
xchg
sbb
out
mov
fbstp
in
mov
shl
xor
jnp
pop
gs
pop
mov
jg
ljmp
jnp
pop
js
mov
inc
sti
jnp
mov
jle
add
imul
jb
les
jnp
push
push
stc
fcmovbe
lods
jnp
inc
push
and
dec
mov
pop
js
lock
sub
aam
jo
jecxz
in
outsb
lcall
andl
or
xor
in
dec
jnp
shll
jnp
xor
rorb
inc
dec
jnp
push
out
sub
mov
je
testl
ret
jp
xlat
sarl
mov
popl
or
lods
das
jb
dec
stos
into
pushf
nop
mov
je
popf
xor
imull
aas
pop
mov
mov
xor
rcl
mov
aaa
xchg
decb
jge
ret
cs
inc
mov
xchg
push
push
or
lods
not
jnp
fbld
mov
adc
dec
int
mov
push
or
aam
mov
paddsb
dec
mov
scas
clc
sub
lcall
aad
sbb
jnp
loope
addb
movsl
fdivrs
mov
test
clc
mov
push
xor
insl
pop
cmp
jnp
adc
sarb
add
jnp
xchg
and
jnp
mov
adc
xlat
sti
sub
jnp
into
sub
jbe
int3
mov
mov
inc
mov
and
addr16
out
test
pop
sbb
jns
mov
insb
hlt
jnp
mov
jmp
cltd
stos
mov
filds
cmpsb
xor
dec
xor
outsl
in
cmp
add
jnp
fdivrl
xchg
into
mov
iret
dec
cmp
cmp
jge
xchg
rcrb
push
ljmp
mov
data16
xor
daa
adcl
out
lods
popa
imul
xor
sbb
outsl
pushf
xchg
pop
xor
stc
pop
mov
jnp
cmpsl
xlat
pop
fmull
repz
jnp
lods
lea
inc
fisubrl
xchg
aas
into
dec
out
pop
sub
jl
repz
jmp
inc
and
es
jnp
pop
cwtl
or
ret
sub
outsb
das
mov
jnp
sbbl
imul
ja
orb
cwtl
jnp
pop
pop
in
sarl
mov
les
hlt
dec
or
dec
or
dec
pop
cmpl
clc
subb
call
imul
sub
decl
outsb
outsl
xrelease
test
jnp
push
arpl
hlt
jnp
mov
fnsave
shll
outsl
mov
jnp
pop
lods
lahf
loop
daa
adc
adc
xchg
jnp
mov
sub
je,pn
xchg
jne
jnp
lds
fldln2
sub
sbb
shlb
shl
dec
clc
jnp
jmp
sahf
mov
popf
add
rsm
push
dec
stos
gs
fsubrl
int
xor
sahf
or
inc
outsl
repz
mov
jmp
in
lcall
push
dec
cmpb
jmp
in
sub
int
int3
xchg
lahf
ss
outsl
jo
xchg
or
mov
loope
cwtl
jnp
loopne
cmp
cld
add
fstpt
in
fnsave
or
jp
mov
and
cmpsb
addr16
mov
xor
cmp
mov
jnp
push
lea
jne
sarb
sbb
mov
test
lods
jne
addr16
jo
stos
mov
outsl
push
cmc
or
jnp
or
lods
pop
cmpsl
xchg
jnp
cmp
sahf
mov
dec
sub
xor
inc
mov
jnp
mov
stos
js
insb
mov
mov
scas
sub
inc
push
lods
ljmp
movsb
mov
andb
jnp
fidivl
cmp
repz
test
jbe
pushf
inc
pop
jnp
rorl
cwtl
icebp
mov
mov
outsb
push
or
jnp
fiadds
and
out
iret
jnp
cmp
mov
divl
adc
je
mov
mov
add
bswap
jnp
out
imul
mov
jnp
adc
push
lods
adc
add
pop
xchg
cs
pop
rcll
xor
xchg
cwtl
xor
ljmp
mov
xchg
cmp
ficoml
jnp
in
cmc
mov
cwtl
lods
out
mov
sbb
push
jnp
cmp
jnp
mov
inc
ja
jbe
sarl
insl
adc
scas
pop
imul
add
xlat
lods
mov
int3
jnp
in
ds
dec
jmp
push
xor
shr
xchg
jnp
cmp
cmp
mov
jnp
call
es
push
jmp
pop
add
lcall
loop
int
mov
dec
dec
or
jno
pop
std
nop
ss
in
sbb
and
scas
in
and
aaa
and
mov
pop
inc
lret
jnp
push
jmp
fidivrs
in
mov
dec
rcr
je
stc
cli
xchg
adc
roll
push
or
outsl
rorb
jo
xlat
add
jnp
shrb
imul
sti
shll
je
mov
cmpsb
incb
int
push
loope
jge
mov
push
add
fsubrl
out
jnp
outsb
pop
xchg
aaa
popf
inc
cltd
dec
hlt
push
cmp
outsl
aas
lea
fmul
ss
stc
sbb
fnstcw
ds
xor
lret
imul
and
sbb
dec
test
addr16
pushf
ficomps
push
inc
rcrl
push
pop
add
in
dec
js
dec
in
pushf
or
inc
sub
xor
cmpl
or
xchg
jnp
bnd
gs
or
jnp
pop
loope
dec
xlat
add
out
and
pop
sarb
jmp
mov
lods
shl
sbb
jns
inc
mov
jnp
loop
adc
aaa
fs
xchg
out
fiaddl
movsb
dec
jnp
mov
es
xor
pop
xor
pushf
inc
addr16
stos
jp
scas
stos
jmp
test
loop
sbb
imul
jnp
ret
add
jnp
lds
ficompl
mov
jb
shlb
mov
jnp
imul
jnp
or
xor
aaa
pop
cltd
mov
mov
mov
or
scas
sub
in
xor
mov
aad
cmp
lea
sbb
imul
dec
add
xlat
bound
clc
jns
mov
popf
outsl
sti
mov
movsl
jnp
fimull
or
dec
xchg
jnp
cmp
leave
js
push
pshufw
push
mov
and
cmp
insb
push
sbb
jnp
or
movsb
mov
sbb
icebp
push
addr16
jnp
repnz
mov
xlat
sbb
xchg
cmp
shlb
jnp
jmp
jg
inc
jnp
lods
dec
push
add
add
jnp
ljmp
jnp
out
ret
jnp
mov
mov
jae
sar
jnp
mov
lods
cs
orl
mov
xor
jnp
mov
iret
icebp
popf
pop
dec
call
inc
inc
or
stos
scas
test
cmp
mov
xor
pop
mov
cmp
xchg
nop
out
lods
add
cli
fisubrl
leave
je
sub
daa
ret
pop
ss
pop
mov
cmp
inc
jns
or
jge
fbld
jae
ret
and
or
repz
mov
mov
cmp
ja
orl
sti
xor
pop
mov
adc
pop
jno
xchg
sbb
sub
and
xor
pushf
cmpsl
insl
std
jb
push
or
daa
mov
insl
stos
adc
lea
sti
jb
mov
roll
test
call
jb
jmp
lods
jnp
addr16
pop
fwait
or
or
jnp
add
pop
push
adc
jnp
in
and
dec
mov
and
add
test
sbbb
lds
fdivs
aas
pop
aas
sbb
test
ljmp
lods
or
test
hlt
jnp
out
adc
jnp
shrb
pushf
cli
inc
jnp
test
mov
dec
fiadds
mov
adc
jnp
popa
aad
cmc
xchg
lock
sbb
mov
int
jnp
enter
pushf
or
test
xor
jnp
js
int
inc
ljmp
cmp
lea
sahf
arpl
movsb
dec
mov
fdivl
mov
fiaddl
push
sub
ss
push
mov
xor
mov
pusha
ja
and
pop
popf
arpl
sub
cmpl
lock
xor
and
xor
in
jnp
xor
sub
jb
adc
pushf
fisubl
dec
outsb
and
and
dec
sbb
je
mov
lds
mov
dec
in
and
cmpsb
jbe
xchg
mov
or
xchg
inc
fcom
dec
sub
lock
jnp
push
jb
call
jle
mov
cmp
jno
push
fidivs
jnp
out
add
jae
mov
add
xor
jnp
push
push
or
mov
mov
lcall
inc
jnp
lret
test
pop
jnp
mov
notl
lcall
push
sbb
jnp
dec
hlt
xchg
popa
pop
pop
dec
sub
mov
push
and
clc
mov
push
jne
ljmp
fldz
cmp
pop
nop
repnz
dec
dec
mov
jp
mov
cmpl
and
sahf
mov
fldt
mov
mov
lods
out
pop
out
movsb
jnp
xchg
push
add
and
pop
push
stos
imul
dec
inc
mov
mov
pop
stos
pop
fs
xlat
test
orb
js
push
pushf
mov
gs
mov
sub
xchg
jnp
sbb
sbb
push
pushf
pop
mov
imul
adc
add
jnp
mov
fisttpl
stos
rolb
aad
lods
jnp
mulb
or
xor
and
mov
fldt
mov
insl
jne
jnp
es
xchg
mov
nop
xchg
jecxz
jae
fdiv
sub
dec
jp
pop
lahf
jnp
fisubrl
filds
insl
imul
iret
sub
cmpsl
cmp
jnp
in
push
mov
daa
jl
dec
sub
jnp
mov
mov
xor
jae
in
loopne
jecxz
jp
sub
aam
adc
cmp
leave
in
mov
scas
jno
fstpt
cmp
pop
cmpb
mov
push
mov
lods
push
jae
insl
sti
aam
push
fisttpl
popa
jmp
in
and
insl
mov
dec
ljmp
jnp
pop
call
xchg
cmpsb
push
call
js
fwait
int3
xchg
mov
dec
out
mov
fs
inc
xchg
aam
jnp
cmpsb
lods
lahf
dec
or
push
int
mov
jnp
out
stc
push
fs
inc
xchg
sub
insl
mov
and
aad
stc
push
adc
insb
popf
adc
lods
jns
iret
pop
outsb
int
sbb
pop
jnp
fcomps
outsl
das
dec
jnp
mov
fisubrl
out
inc
cmp
dec
int
lods
mov
cmp
mov
add
mov
jo
cwtl
mov
dec
out
adc
inc
call
sbb
pop
xchg
jne
sub
int
mov
mov
xor
out
sbb
push
popf
xchg
pop
push
xor
mov
mov
jnp
loope
cmp
lahf
sub
aad
dec
lods
lret
adc
fiaddl
mov
lea
xchg
jae
xlat
xchg
es
xor
insl
iret
jne
loopne
jnp
popf
fistps
int3
push
jnp
std
lods
int3
ret
sbb
jnp
xchg
jno
int
bound
pusha
push
adc
cmp
jnp
jmp
jg
mov
mov
repz
in
pop
jae
fs
out
mov
jge
or
inc
xchg
fcoms
jnp
mov
sbb
jnp
xchg
adc
mov
jae
aam
jnp
and
int
mov
cmpsb
xorb
bound
stc
pop
jnp
sbb
jnp
push
cmpsl
inc
dec
fstpt
mov
adc
adc
mov
daa
jnp
mov
in
mov
cmpsb
push
outsb
jns
jl
mov
xor
jp
out
jb
xchg
xchg
idivl
xchg
jmp
push
scas
pop
jnp
hlt
popf
lods
call
ficompl
rclb
jb
mov
scas
jnp
pop
daa
sbb
fidivl
pop
dec
shrb
lret
aas
jnp
stos
testl
cld
inc
inc
push
sub
jnp
xor
ret
imul
mov
push
jl
mov
imul
pop
aad
pop
cmpsl
out
ffreep
jnp
fs
jge
sti
or
cmp
cmp
sbb
mov
test
dec
mov
lods
and
andb
and
in
dec
cs
xchg
insb
nop
arpl
lods
ljmp
pop
repnz
popa
pop
popf
imul
jno
push
cmpb
and
into
bnd
xchg
and
cli
data16
std
dec
das
add
inc
jnp
xlat
das
mov
jnp
stos
mul
pop
insb
push
mov
inc
sub
lahf
ds
cs
pop
jnp
xchg
sub
jnp
push
xchg
aam
or
push
sbb
mov
jnp
movzbl
jnp
mov
adc
lcall
ljmp
sub
mov
mov
sub
mov
jbe
mov
rorl
sbb
mov
and
cwtl
das
dec
jne
rolb
sahf
mov
mov
lea
push
dec
sub
addb
jne
ror
sti
test
pop
jnp
inc
movsl
sbb
xor
cltd
jecxz
inc
pop
in
and
pushf
dec
add
shl
adc
mov
sbb
inc
pop
ftst
xchg
insl
addr16
pushf
lea
add
or
pop
adc
jnp
push
fisubl
jnp
cmp
jbe
xchg
sbbb
lret
fidivrl
mov
stos
sub
ja
add
mov
push
jnp
or
test
jnp
adc
mov
jnp
fidivrl
sti
or
pusha
add
xor
scas
sub
bndstx
cli
pop
lahf
mov
imul
popa
push
fbld
mov
jl
jne
pop
cmc
imul
lea
fdivl
inc
lds
jnp
cwtl
sub
push
adc
jnp
xor
add
cmp
sbb
addr16
es
jl
imul
mov
jns
lds
ss
mov
or
ss
in
test
add
jnp
roll
adc
clc
or
daa
shll
hlt
es
loop
or
fildll
lcall
cli
jnp
mov
stos
aaa
and
int3
pop
aad
or
sbb
dec
insb
add
xchg
or
jnp
mov
pop
add
loopne
jmp
cmp
divb
rcll
iret
jnp
js
movsl
decb
jmp
mov
out
mov
sbb
mov
or
jnp
movsb
pop
bts
cmpb
loope
cmpsl
jnp
pop
cmc
add
hlt
pushf
mov
jl
sbb
es
fcmove
dec
in
jnp
sbb
inc
mov
lods
cmp
or
loop
popa
ret
cmp
in
and
push
inc
aaa
lahf
in
jmp
pop
push
repnz
add
btl
dec
movsl
and
scas
or
sub
jecxz
push
iret
cmp
ljmp
cli
xor
out
fbld
xchg
xor
in
roll
jp
ret
addr16
jge
dec
and
inc
cmp
icebp
scas
das
add
pop
test
jge
lea
out
sbb
fwait
xor
and
sbb
xlat
inc
dec
cmp
outsb
xor
jnp
call
cltd
xchg
jnp
or
pop
sub
fdivs
xor
imul
jnp
cmp
lret
push
sub
dec
call
mov
cld
sbb
in
dec
jnp
or
iret
out
rorb
add
fwait
sbb
push
lock
jnp
push
xorb
and
mov
push
out
adc
or
fidivrl
sub
insl
loopne
or
out
dec
inc
scas
add
mov
outsb
inc
push
xchg
jne
data16
mov
popf
or
mov
popa
mov
jnp
or
dec
xchg
popf
lret
cs
cmp
adc
stos
sbb
xlat
bound
dec
adc
ss
cmp
pop
loop
xchg
iret
int3
mov
pop
xor
mov
movsb
test
dec
idivl
call
inc
mov
add
jnp
and
or
cmc
lds
rcr
iret
cli
jmp
sub
lock
jnp
testl
nop
adc
lods
cs
popf
sbb
sub
dec
pop
icebp
mov
movsb
insl
insb
push
fisttpl
inc
mov
sbb
mov
loope
icebp
lret
xchg
sarb
out
lahf
add
mov
outsl
pusha
sbb
sbb
sbb
aaa
pushf
jbe
ds
jnp
sub
mov
sbb
push
sbb
scas
imul
scas
cmp
lret
pushf
push
push
add
stc
mov
pop
lcall
out
jae
lcall
cmp
mov
jnp
xor
dec
jnp
mov
lret
outsl
cmp
loopne
jnp
dec
stos
pushf
mov
cmpsb
imul
xor
test
in
imul
aam
and
ljmp
jnp
pop
in
xor
and
add
shl
cmc
or
insb
adc
mov
push
sub
jg
out
int3
je
insb
aad
inc
mov
addr16
jecxz
outsl
cld
pop
testl
mov
pop
mov
dec
xchg
call
jno
ficompl
sub
shl
and
out
insb
mov
mov
sub
jae
push
push
dec
stos
fucomip
imul
jp
xchg
js
addr16
clc
outsl
sbb
lahf
cmpsl
imul
aam
sbb
ja
ljmp
cmpsl
lret
iret
fwait
ret
stc
nop
cmp
jnp
pushf
mov
xor
sub
cmp
mov
jne
sub
push
les
cmp
push
lods
jnp
add
jae
jnp
ret
jle
fldcw
orl
lods
sub
mull
pop
addr16
inc
int
jae
in
mov
popa
out
push
dec
jns
jg
jne
fildl
scas
jnp
es
mov
jnp
sbb
adc
mov
repnz
jnp
cmp
xchg
jle
arpl
mov
dec
jnp
negb
lods
lds
jnp
rcl
std
dec
cmp
mov
ret
add
jae
sbb
out
jbe
enter
cmpsb
scas
sti
push
jb
jnp
mov
mov
and
xchg
inc
aad
pop
mov
mov
cmp
ss
test
jnp
cmp
jns
jno
imul
mov
scas
sbb
jnp
or
jae
or
sarl
arpl
xchg
sbb
les
pop
pushf
sub
cmc
sub
mov
cmp
fistl
shrb
cmp
or
jns
incb
scas
lods
and
or
fmul
loopne
rcrl
test
call
dec
push
cmp
jno
xchg
xchg
fs
mov
out
xor
cmp
sub
inc
hlt
or
dec
xor
mov
insl
int
imul
cmp
jns
sub
cmpb
ja
jne
dec
mov
fs
out
mov
out
or
arpl
cmp
hlt
repnz
imul
in
or
outsl
aam
jnp
add
dec
mov
inc
lods
xchg
repnz
mov
cld
jecxz
fcmovnu
and
int
iret
repnz
xor
mov
and
dec
out
adc
pop
ljmp
stc
addr16
jnp
mov
xor
hlt
sti
aaa
js
mov
fisubs
shlb
jae
add
shll
addb
int3
sbb
xchg
jnp
pusha
sbb
enter
ss
add
xchg
jnp
mov
jnp
mov
insb
je
dec
sbb
std
push
bound
aaa
out
popa
movsb
mov
lock
aam
add
sbb
jl
xor
mov
jnp
inc
sub
inc
mov
adc
cmp
bound
sub
or
lret
or
xchg
cmp
in
bound
loopne
sarb
out
mov
mov
cltd
in
jnp
inc
cmpsb
push
ficomps
imul
and
lcall
push
sbb
jnp
mov
into
jmp
mov
in
adc
pop
sbb
jae
add
cmp
fs
mov
jnp
cli
dec
fwait
jnp
and
das
cmp
push
cmp
sbb
sbb
sbb
or
outsl
adc
mov
xor
xor
jnp
mov
cltd
push
jle
aam
jnp
sub
cmp
jnp
mov
inc
js
dec
cs
pushf
outsl
cmp
popf
in
loop
xorb
insl
cli
lret
push
stos
daa
in
push
outsl
repz
mov
mov
push
adc
xor
and
adcl
mov
jae
mov
jo
inc
insb
adcb
pop
cmp
jnp
pop
icebp
inc
inc
stos
scas
popa
jnp
cwtl
mov
rcr
add
xor
pop
cwtl
int
in
clc
jmp
cmp
shlb
xor
cmp
pushf
push
xor
lcall
lods
mov
add
cmp
jnp
cmp
out
pushf
mov
jnp
stos
out
mov
mov
arpl
test
movsl
mov
adc
or
push
sbb
mov
test
xor
ret
popf
jae
push
std
pop
mov
mov
pop
jne
icebp
inc
xor
add
mov
jnp
repnz
pop
pop
daa
pop
push
imul
imul
cmpb
xchg
insb
and
cs
fbld
xchg
sbb
cmpsb
sub
roll
scas
or
stos
xchg
jnp
jne
jp
push
fcomi
mov
out
popf
dec
ja
xor
mov
lea
sbb
jnp
xor
xor
sbb
jae
mov
inc
jae
cld
xor
jnp
imul
jmp
xor
loop,pt
cmpsl
and
cld
sub
in
jnp
fucomi
lock
loope
mov
dec
jp
sub
cmp
mov
jne
cli
push
pushf
xchg
mov
lret
inc
pop
aam
jnp
jl
push
outsl
pop
test
cli
outsl
clc
jb
cmp
mov
add
pushf
inc
lds
xor
sub
add
sarb
mov
shr
cli
lahf
jnp
jecxz
and
das
in
jnp
daa
pushf
push
insl
xor
ss
sahf
imul
jnp
or
dec
aad
shl
pop
mov
rorl
jnp
jecxz
mov
adc
inc
mov
int
jnp
shlb
mov
cmp
xor
lods
jmp
aaa
int3
sbb
cmp
mov
sbb
fs
jnp
sbb
mov
out
pop
mov
jno
cmp
daa
push
add
jnp
add
movsb
mov
je
and
jbe
lods
mov
in
xor
sbb
pop
push
jnp
jmp
cwtl
fwait
jnp
xor
cli
jnp
dec
adc
sbb
mov
imul
jl
ficompl
dec
mov
testl
cmc
xchg
ss
pop
and
fldenv
dec
jnp
ljmp
cmp
inc
inc
std
lods
scas
cli
inc
repnz
cmp
dec
aaa
mov
test
jbe
es
jnp
push
push
fsubs
sub
pop
leave
mov
pop
mov
es
out
add
jae
jl
jnp
lods
sub
insb
in
jnp
lods
jg
xchg
jmp
jae
test
mov
mov
xchg
pop
pop
bound
xchg
pop
cmp
and
xchg
cmp
mov
cmpsb
jnp
lcall
jnp
mov
movl
mov
fwait
mov
add
push
adc
jb
dec
inc
add
and
imulb
mov
mov
cwtl
insb
jnp
and
push
mov
pop
imul
dec
mov
sbb
mov
push
neg
data16
jae
lcall
or
inc
mov
or
loop
and
pushf
jle
jns
inc
fstpt
cmc
ret
inc
sub
aas
test
mov
inc
addr16
jnp
mov
adc
aaa
ljmp
cwtl
imul
jecxz
cmp
jne
call
shll
cli
or
dec
jnp
push
lods
mov
aaa
lret
inc
es
call
mov
cmp
arpl
jae
sbb
inc
imul
mov
cmp
imulw
jnp
fdivs
fisubrl
fstps
int3
test
mov
jnp
mov
call
jnp
rclb
mov
jnp
sbb
add
aas
pop
inc
sub
mov
pcmpeqb
lods
jbe
push
mov
push
mov
xlat
push
cmp
bound
mov
testl
mov
mov
fcoms
lahf
and
jge
xor
xlat
shr
push
xchg
enter
mov
push
pusha
jnp
lock
cmp
sarb
push
xor
xchg
jnp
xor
pusha
aad
xlat
pop
inc
repz
fs
popf
xor
lods
call
jle
notb
dec
pop
ja
dec
mov
test
cmc
fstl
bound
or
and
xchg
xchg
ficomps
xor
or
in
jecxz
call
dec
fs
es
inc
les
sbb
or
inc
insl
pop
jmp
add
sahf
insb
push
inc
mulb
mov
push
outsl
adc
test
xchg
insl
es
lea
jnp
dec
push
pop
lods
pop
xor
jnp
sub
push
push
or
in
xchg
jnp
dec
ljmp
aam
sbb
mov
jnp
sahf
pop
dec
call
xchg
lret
pop
mov
jp
adc
sar
out
ret
das
push
pop
clc
mov
loop
push
stc
insb
jnp
xor
sarb
fs
xlat
jnp
cld
insl
and
aas
cmp
out
outsl
push
ljmp
notl
xchg
stos
mov
outsl
jnp
mov
jb
imul
mov
jmp
testl
pop
outsb
sbb
pop
sub
jg
and
mov
fwait
divb
push
jne
fldl
jnp
in
xchg
pop
sub
std
js
insl
out
out
outsb
cs
cmp
fimuls
sbb
cmp
push
loop
bound
lcall
jnp
out
rolb
dec
add
lock
xor
data16
adc
lea
mov
push
shrb
cs
clc
outsl
xor
test
scas
inc
out
inc
sbb
jae
jp
mov
pop
stos
cmp
fwait
insb
nop
adc
lods
imul
push
jp
fs
jnp
jbe
in
cli
mov
sarl
aas
pop
popa
and
jnp
add
in
mov
dec
mov
push
jnp
fcomip
sahf
jecxz
jg
int3
inc
stos
out
setl
jae
cmp
test
mov
jae
adcl
inc
add
cli
cmp
lods
mov
or
insl
imul
imul
and
pop
sub
inc
cli
jnp
push
jg
jb
xor
aaa
jnp
aam
cmp
es
imul
in
mov
jns
rol
jno
mov
sti
mov
stc
dec
in
sarb
aad
jnp
jne
es
cli
movsl
jnp
push
pop
push
sub
fmuls
sub
mov
add
jnp
or
sbbb
out
jnp
push
lods
push
test
mov
data16
fildl
jnp
les
ss
pushf
jp
jnp
arpl
cmp
xor
mov
sbb
jg
mov
cmpl
and
jnp
adcb
mov
jne
cmp
xorb
push
jge
int3
cli
fbld
aam
in
jb
loopne
xchg
cld
fmul
je
jnp
pop
ljmp
jnp
popa
call
adc
pop
mov
xor
xor
or
sub
xchg
xchg
test
rolb
outsl
daa
outsb
fwait
rorb
jp
inc
sub
mov
mov
repz
clc
sar
jae
mov
jge
add
data16
mov
sbb
cmp
adc
mov
inc
call
cmp
out
xor
jnp
push
dec
mov
mov
xor
cmpsl
je
popf
jnp
pop
mov
cmp
add
mov
jnp
and
jnp
jns
das
out
jg
mov
sub
aas
jnp
fdivrp
fldenv
pop
out
mov
je
std
sub
jnp
stos
js
mov
pop
pop
adc
jnp
xlat
aam
ja
cmpsb
mov
or
jnp
push
cmpsl
lea
idivl
mov
jnp
aam
mov
jnp
hlt
mov
jp
inc
into
cmp
xor
cmp
xchg
fxch
fistps
mov
mov
xor
sub
push
cltd
cmp
push
mov
add
fadds
ljmp
mov
lds
or
pop
mov
jnp
lock
je
sub
xor
push
or
sahf
cmpb
jnp
into
aam
gs
add
jnp
lahf
pusha
pop
xor
dec
scas
sub
repz
insb
test
jnp
popf
jmp
xor
cmp
lret
mov
mov
sub
imul
pop
addr16
xchg
popf
mov
jnp
mov
lock
pushf
or
mov
std
mov
dec
mov
addr16
pop
adcb
scas
adc
add
jnp
fistpl
mov
adc
or
push
sub
adc
xsaves
pop
lods
or
in
jnp
mov
push
mov
inc
or
out
rcrb
aas
cmp
cmp
mov
fidivrl
call
pop
cmp
mov
fidivrl
push
sbb
mov
mov
jnp
xor
cmp
xchg
stos
shll
xchg
xchg
jnp
orb
jnp
sahf
or
sbb
push
dec
lea
dec
sub
or
jnp
not
mov
pushf
fdivs
pop
dec
mov
jnp
pusha
push
xchg
jbe
sbb
imul
in
push
and
mov
push
pushf
fstpt
scas
aas
pop
adcb
loop
ss
jns
repnz
dec
jmp
pop
cmp
or
xor
jl
orl
add
jp
inc
lret
shrb
push
inc
jnp
iret
adc
rorb
sbb
clc
in
xor
idivl
xchg
or
outsl
push
aad
pop
ljmp
lods
mov
in
popa
jnp
dec
into
stc
lods
push
jbe
jnp
xlat
sub
call
lret
xor
sbb
ja
mov
stos
leave
mov
imul
jns
cmp
jmp
sarl
mov
sbb
cmpsl
ja
dec
cld
pop
pop
enter
push
ds
fstl
ss
jns
xchg
cmpl
add
sbb
in
jnp
aaa
dec
jmp
ficomps
sbb
and
adc
jnp
push
rorb
pop
cmp
xor
adc
std
pop
pop
jnp
dec
xchg
lock
mov
sub
pusha
aad
out
mov
ret
sbb
lret
out
adc
jnp
push
cltd
jge
mov
jne
push
clc
sbb
data16
ja
push
pushf
lret
jae
test
mov
loop
dec
lret
sti
out
std
or
les
int
sub
jne
inc
jecxz
jg
mov
lods
jmp
dec
mov
or
mov
addr16
stos
cmp
inc
jae
mov
jno
cmpb
clc
out
repz
ja
ljmp
sti
adc
jnp
pop
mov
xor
mov
or
add
push
mov
insl
imul
inc
mov
and
test
icebp
lods
pop
fldt
xrelease
jecxz
jnp
addr16
and
xchg
in
mov
sub
dec
lods
push
pop
pop
xor
adc
and
cmp
jae
out
jnp
inc
fidivrl
pop
das
cld
test
lret
popf
fdivrs
mov
sub
maskmovq
notl
ljmp
jnp
jge
mov
lods
test
jnp
cmpsl
fwait
repnz
sbb
jnp
cmp
jbe
add
loop
lret
mov
ret
push
hlt
repnz
push
jnp
arpl
dec
jp
jge
xor
jg
aaa
sbb
mov
scas
mov
testl
jmp
and
jne
hlt
sbb
ja
xchg
sahf
jnp
sub
sub
fs
inc
popa
jg
test
sub
jnp
or
lock
and
gs
sbb
or
xlat
lcall
mov
or
jbe
pop
pop
xchg
jnp
pushf
mov
and
xor
sbb
add
or
in
jp
sbb
dec
jb
xchg
dec
cld
sub
jns
mov
fnclex
dec
add
jb
lret
sub
cmp
inc
mov
pop
cmpsb
cmp
fprem
ss
jb
or
push
or
push
sahf
add
scas
jnp
out
fisubrl
push
jnp
arpl
pop
push
rolb
cmp
mov
jecxz
pop
cld
in
lods
nop
jnp
popa
lcall
jnp
idivb
lcall
mov
imul
pop
jo
loopne
das
std
fistpll
mov
push
jnp
lea
cmp
xchg
roll
je
jne
repz
fadd
ljmp
inc
push
xchg
arpl
icebp
clc
cmp
addr16
lahf
in
pop
lret
fdivs
sbb
jl
or
ds
jnp
orl
out
mov
pop
addr16
jnp
sub
jmp
scas
cld
push
jnp
out
mov
jnp
jb
jl
xor
sbb
and
xchg
jge
fdivrs
je
outsb
scas
leave
jecxz
jnp
push
imul
xor
mov
ds
xchg
jns
lods
pop
cmp
imul
bound
sub
pop
pop
mov
roll
xchg
add
jno
lahf
ja
mov
jnp
add
push
or
lods
mov
insb
push
jnp
cli
sbb
bound
shlb
push
popa
pop
or
push
jo
add
dec
stos
lods
lahf
cmpsl
sub
pop
cmp
jns
in
test
aam
mov
repz
ret
cmp
push
js
bnd
adc
jns
pop
aad
jnp
pop
sbb
pop
jnp
sahf
lret
imul
jmp
cmp
mov
cmp
test
jne
cmp
aaa
xor
jp
or
sar
jnp
sub
xchg
mov
sub
jnp
sbb
clc
xlat
mov
xchg
pop
add
pop
dec
ljmp
shll
lds
divb
js
lods
jnp
test
pop
jg
pusha
bnd
aaa
mov
sbb
aas
stos
cmp
in
fwait
inc
jle
ljmp
jnp
xchg
or
and
sub
sub
mov
jae
jo
pop
cmp
jnp
add
cmpsl
push
mov
jnp
mov
fcmovnb
and
pop
push
decl
rorl
and
pop
cmc
xor
mov
jecxz
rcrl
jnp
push
mov
dec
cmp
cmp
out
push
out
jecxz
jae
insb
in
das
jnp
cmp
inc
jnp
stos
loop
int3
pop
into
nop
jnp
aaa
sbb
dec
pop
ret
xchg
arpl
mov
roll
dec
sbb
pop
es
sbb
xor
xchg
adc
mov
lods
ficoml
pushf
fadds
sbb
sahf
and
out
jnp
sbb
popf
lret
adc
and
jns
mov
pop
jb
sbb
push
or
les
das
inc
js
fstpt
jnp
or
mov
sahf
xorl
outsl
lcall
jnp
xlat
ret
popa
ds
or
enter
iret
imul
mov
mov
sbb
jnp
ljmp
cld
js
mov
imul
addr16
aaa
mov
cmpb
pop
jnp
sbb
push
jle
into
idivl
addr16
xor
sarl
push
cmpsl
sub
mov
insl
movsl
jnp
push
cmp
jo
jge
jnp
mov
xchg
movsl
mov
loopne
xor
out
cmp
or
outsl
or
aaa
lods
int3
outsl
dec
mov
data16
mov
mov
add
repz
jnp
pop
shrl
jo
jnp
fdivrl
mov
scas
not
jae
pop
sub
fbstp
mov
sbb
xor
cmpsb
pushf
pop
jnp
ljmp
call
daa
inc
idivb
and
mov
dec
fs
jb
inc
les
jnp
testb
pop
mov
sahf
pop
or
mov
pop
and
push
sarl
pop
jbe
cmpl
adc
jnp
xor
pop
stos
push
arpl
data16
jnp
mov
jnp
stos
dec
repz
inc
add
xchg
sub
cmpsl
cli
mov
jnp
cltd
sbb
cmp
push
jnp
push
mov
jnp
mov
mov
lcall
adcb
call
mov
mov
les
lods
sarl
ficoms
jae
inc
out
adc
sbb
pop
mov
adcb
xchg
mov
loopne
mov
jle
in
xor
ja
cmp
push
jno
jge
xor
ret
mov
and
jnp
mov
das
cli
jnp
push
imul
je
jnp
cwtl
add
mov
push
iret
into
bound
or
jnp
mov
xlat
stos
imul
je
and
cmc
popf
hlt
or
sub
jnp
ljmp
jnp
sub
repnz
icebp
stos
sub
js
sbb
jae
fisubl
in
call
lea
shlb
jne
outsb
in
mov
jnp
daa
push
dec
mov
inc
or
in
fistpll
mov
lret
enter
xor
gs
xchg
outsl
pop
and
inc
lock
in
pop
xchg
sarl
insl
out
push
mov
js
push
xchg
inc
dec
clc
push
in
and
cmp
shl
jnp
mov
hlt
mov
js
xchg
jnp
push
mov
jnp
mov
mov
dec
jg
dec
into
dec
sbb
adc
jns
jne
or
mov
cmp
loopne
sbbb
push
mov
lret
pop
shl
lcall
inc
and
adc
mov
lahf
dec
xor
lret
mov
and
sbb
xchg
adc
outsl
int3
or
hlt
ss
push
xchg
cli
add
pushf
lea
daa
inc
sarb
pop
xor
addr16
popa
movsl
inc
push
xchg
int
xlat
mov
out
inc
sub
lcall
adc
ss
jnp
shlb
jnp
inc
or
xchg
dec
fidivrl
daa
pushf
lcall
push
enter
dec
jae
mov
jns
mov
mov
dec
jnp
call
lea
push
xchg
or
or
imul
ss
iret
outsl
and
lods
mov
inc
inc
fisubs
dec
ljmp
test
in
jbe
jecxz
push
or
call
mov
xor
ljmp
push
inc
shl
enter
mov
ja
pusha
cmpsb
xchg
das
imul
je
mov
and
sub
cmpsl
push
cmpsb
mov
test
dec
and
in
sahf
enter
xchg
push
jg
add
sub
push
jnp
jae
pop
outsb
sbb
stos
adc
movsb
sbb
aaa
clc
repz
push
push
pop
cmp
adc
cmpsl
inc
inc
rcr
mov
mov
dec
out
mov
jb
and
or
imul
clc
insb
dec
fnstcw
mov
xchg
cmpsb
jg
cmpb
xchg
jne
xchg
push
jnp
mov
cmp
pushf
cltd
jnp
pop
sub
cmc
or
mov
add
or
mov
jae
xchg
dec
repnz
jne
fyl2xp1
sub
xchg
ja
fwait
aad
icebp
mov
push
add
insl
outsl
lods
push
jnp
or
movsb
loopne
mov
jnp
clc
push
xchg
or
jbe
jnp
mov
pop
out
jnp
inc
push
and
mov
jecxz
stos
mov
dec
clc
cmp
add
or
lahf
push
cmpl
dec
cmp
mov
in
ret
mov
and
push
xchg
ret
fwait
and
sbb
hlt
lcall
lret
pushf
add
in
adc
iret
pusha
ja
fisubl
loop
cs
jnp
or
jnp
sub
inc
add
imul
pushf
movsb
jecxz
je
lret
jnp
insl
adc
mov
jnp
loop
popa
sbb
in
push
dec
jp
xchg
insl
pop
je
call
add
sub
enter
lret
pushw
fbstp
jae
rcrl
lret
mov
mov
imul
mov
sub
xchg
push
in
cli
inc
jnp
pop
or
dec
xchg
pop
cmpl
test
sbb
pushf
jg
xlat
mov
mov
pop
fldcw
push
jae
push
ljmp
ja
lods
push
push
inc
sub
jnp
mov
push
dec
sub
in
pop
push
mov
imul
xchg
sbb
dec
and
pop
mov
cmp
adc
sbb
and
sarl
clc
jno
frstor
jae
stc
adc
aad
jle
pop
xchg
xor
xchg
jg
jnp
or
xor
or
mov
test
pushf
jnp
jg
inc
das
cmp
xchg
jnp
push
jmp
ss
pop
add
test
dec
shrb
ljmp
add
xchg
mov
mov
sbb
imul
jnp
adc
stc
push
xchg
jle
cwtl
inc
jnp
jb
mov
hlt
jnp
cmp
adc
xor
push
sbb
jnp
ret
je
pop
out
popf
mov
ljmp
jnp
jno
jo
ss
push
inc
ja
aam
jmp
or
lods
adc
lods
je
or
sbb
sub
ror
sbb
adc
or
fpatan
push
sti
lods
jnp
inc
xor
jnp
mov
fmul
bnd
jnp
daa
lret
add
dec
fimull
sbb
mov
xlat
xchg
jae
call
mov
addr16
les
out
xchg
mov
mov
add
int3
mov
pushf
push
aas
cmp
adc
xchg
add
sti
xorl
inc
lea
fimull
xchg
sub
lods
push
lds
jne
push
jnp
pushf
mov
mov
inc
or
mull
cmpsl
fisubrs
mov
mov
push
sahf
push
jp
xor
lea
inc
jno
fisubrs
aaa
cmp
pop
cmp
and
dec
jae
add
jp
jnp
inc
popf
sbb
in
std
aaa
ds
jnp
push
bound
sub
iret
jnp
dec
popa
mov
jnp
shlb
cmpl
stos
cmp
jae
mov
pop
or
sub
cmp
xchg
bound
fisubl
aaa
jg
into
push
fstps
and
xlat
fs
cli
pop
xchg
imul
jnp
push
mov
cmp
movsl
xchg
loope
jbe
dec
push
sub
mov
imul
xchg
jno
arpl
lods
or
push
js
stos
sti
adc
sub
cmc
inc
and
push
das
loopne
fistl
pop
mov
addl
nop
adc
ja
imul
in
and
xlat
jecxz
daa
mov
bound
repnz
mov
lahf
adc
or
ljmp
popa
pop
call
jne
sbb
sarb
frstor
or
cmp
js
cmp
test
inc
orl
pushf
mov
js
js
sbb
jnp
hlt
mov
jge
and
jnp
das
mov
sub
pop
jnp
insb
repz
push
lock
lods
and
add
xchg
jnp
nop
cmp
pop
mov
sbb
ljmp
adc
inc
scas
shl
mov
mov
adc
jae
cmp
scas
aas
pop
subb
pushl
jp
jae
fidivrs
movsb
lock
cmp
addb
pop
fsubrl
jnp
pop
and
sub
mov
mov
jnp
xchg
call
lcall
push
test
xor
movsl
mov
cmp
jnp
arpl
sbb
testl
test
jne
pusha
movsl
jnp
mov
dec
jnp
xchg
adc
dec
mov
adc
rcr
test
jnp
sub
loope
jbe
xlat
arpl
cmp
xchg
pusha
or
testl
or
mov
add
scas
das
push
jnp
xor
popf
lock
jnp
mov
insl
cmpl
addr16
dec
dec
mov
adc
imul
cmc
dec
cmp
jnp
fisubs
and
stos
enter
or
test
mov
fidivrl
add
bound
push
mov
jae
jns
lods
xorl
pop
xchg
lret
sar
outsb
imul
pop
pop
or
lcall
outsl
je
call
fldcw
jae
das
addr16
xor
inc
jnp
data16
std
idivb
divl
and
fcoml
js
or
sub
mov
xchg
movsb
cmc
jl
mov
subl
mov
mov
out
stos
mov
pusha
jmp
in
jnp
gs
sti
adc
sahf
cli
jae
dec
add
jnp
pushf
mov
sbb
lret
sub
jae
xchg
mov
add
jnp
add
fsubrl
jnp
or
mov
push
out
imul
mov
insb
and
mov
jnp
mov
call
add
and
jnp
icebp
xchg
jne
cmp
mov
inc
adc
mov
call
cmpsl
mov
inc
dec
pushf
shrl
mov
cmp
add
mul
or
repnz
lods
adc
pushf
sbb
add
testb
sti
pop
mov
pop
rcr
loopne
jge
out
push
push
lods
add
in
jmp
sarl
enter
jnp
inc
and
movsl
divl
or
ret
ss
ja
push
test
pop
insb
sbb
dec
jp
pmaxsw
arpl
jnp
mov
adcl
subb
or
pop
cli
pop
jbe
and
mov
dec
cmp
cmp
xor
sbb
xchg
sub
jbe
mov
add
cmp
xor
jnp
sbb
inc
jge
repz
or
popf
mov
jo
daa
outsl
fsubrs
mov
pop
cmp
stos
aam
fwait
push
mov
pop
sbb
in
pop
inc
jnp
fimuls
push
xchg
jnp
sbb
imul
push
or
mov
add
jnp
testl
scas
jnp
lret
pop
fisubrl
sahf
out
mov
jnp
sbb
and
and
jnp
adc
aad
lods
push
jnp
adc
movups
mov
and
rcll
stos
jae
xorl
jnp
xchg
jne
sbb
inc
ss
xchg
mov
lea
enter
imul
scas
xchg
int
cltd
mov
sub
jae
mov
movsl
or
out
ljmp
push
xlat
xchg
mov
insl
lahf
push
inc
dec
cmp
arpl
mov
ss
jnp
mov
pop
cmpl
rclb
cmp
mov
push
loope
mov
test
jnp
cmp
mov
les
pop
mov
sbb
imul
mov
pop
fnstsw
cmp
xor
dec
push
push
jge
jnp
daa
jp
les
inc
mov
rclb
jmp
mov
les
sahf
mov
mov
hlt
mov
xor
xor
insb
cmpsb
jnp
shrb
jbe
push
push
mov
stc
inc
sbb
cli
test
inc
dec
push
xchg
into
in
xor
pop
jnp
out
lret
repnz
mov
xchg
popf
fwait
test
pop
xchg
movsl
jmp
jle
cs
in
sub
xor
pop
dec
in
std
push
int
jnp
sub
imul
dec
repnz
aaa
xor
xchg
jnp
and
jp
lock
push
jnp
aaa
add
xchg
loope
mov
mov
or
and
pushf
es
dec
dec
stc
dec
mov
insb
les
ss
inc
in
inc
jo
out
add
dec
cmc
xor
mov
dec
push
stos
pop
outsl
ret
fstl
lods
popa
mov
jnp
ljmp
jnp
test
stos
aam
push
dec
inc
jnp
stos
inc
lea
frstor
jnp
shlb
mov
xchg
inc
fsubl
clc
push
sub
outsb
mov
jno
test
jo
scas
fnsave
ljmp
push
int
inc
out
xor
add
mov
jb
pushf
mov
sbb
gs
lret
sahf
cmp
jo
pop
jns
cmp
push
outsl
jae
imul
push
cwtl
xchg
push
fstps
push
idivl
cld
cmpb
fmuls
cmp
pop
sarb
loopne
loop
repnz
push
cs
jns
shlb
test
cli
mov
cmp
jp
dec
loope
jnp
jns
xlat
jecxz
xor
jmp
pusha
pop
inc
call
out
orb
jae
test
xchg
mov
pop
mov
ret
shr
lret
xor
inc
sahf
push
pop
out
leave
cmp
mov
clc
mov
dec
mov
mov
jnp
out
shrb
pop
and
cmp
pop
movsb
cltd
jnp
mov
or
repz
aaa
cmpsl
enter
pop
fstpt
insb
adc
or
mov
in
mov
iret
jns
xor
repz
imul
adc
dec
cs
jnp
js
stos
jbe
clc
cmp
cwtl
mov
stos
subl
add
outsl
jns
daa
lods
or
push
out
xchg
imul
vmread
jecxz
adc
ffree
push
sti
ss
jmp
xor
cld
jle
pop
push
jnp
pop
xorl
cwtl
mov
jge
je
dec
push
call
jnp
lds
pushf
lcall
stc
shlb
or
mov
ljmp
cmp
xadd
pop
jae
cmp
pushf
movsl
jae
dec
push
add
scas
pop
dec
outsb
icebp
test
ret
xor
sbb
outsl
jae
lods
je
loop
mov
gs
test
sbb
int3
pop
fbstp
or
cmp
push
push
aaa
faddp
jnp
sahf
lods
leave
mov
iret
jnp
cmp
sarb
sbb
inc
jnp
mov
jne
dec
push
mov
sbb
jae
sti
in
lret
jnp
xchg
and
lock
sahf
dec
hlt
es
aam
push
pop
cmp
ror
mov
xor
repnz
insl
movsb
jle
jno,pn
iret
outsl
jnp
loopne
jg
fwait
ret
add
cld
dec
mov
jnp
inc
cli
es
sub
in
and
push
pushf
jnp
les
stos
cmp
call
add
jno
cmp
pop
aas
mov
dec
pop
sbb
movsl
sbb
imul
xor
out
testb
sbb
call
inc
lods
jno
push
int
sbbl
lods
inc
cmp
inc
jnp
sbb
pop
adc
jae
mov
jnp
and
add
xrelease
movsb
lds
je
or
ret
icebp
jno
fcoms
clc
dec
rcll
ds
xchg
dec
cs
jle
movsl
add
repnz
mov
sbb
lea
leave
add
outsb
mov
ljmp
insb
in
cmc
jb
jnp
ss
pushf
xchg
mov
repz
pop
in
jp
into
repnz
jnp
mov
sbbl
cmp
out
and
mov
lret
fisubs
cmp
pushf
sbb
repz
inc
sarl
shll
jnp
jo
inc
mov
or
aaa
cmc
shll
jnp
and
pop
jnp
sub
imul
or
jne
sbb
call
out
mov
push
jnp
pushf
lahf
jno
adc
add
movsl
ret
sub
mov
jae
and
or
xchg
mov
mov
loop
outsb
sub
dec
pop
shlb
aad
jnp
orb
inc
testl
sub
adc
rol
arpl
jae
insb
lret
insl
inc
rorb
hlt
cmp
lret
leave
lahf
jnp
rcl
mov
mov
add
dec
mov
or
lahf
int
xchg
outsl
push
xchg
sbb
loope
inc
das
gs
stos
dec
sarb
jge
and
pop
jecxz
jnp
mov
pop
jo
dec
jne
jns
mov
xor
cld
jmp
lea
data16
lds
jnp
rcrb
icebp
add
ficomps
in
pushf
repz
jl
scas
pop
loopne
ret
adc
out
mov
sbb
jp
rcrl
stc
out
add
xchg
insl
xor
inc
mov
cmpsb
mov
in
scas
dec
mov
add
ret
pushf
jnp
adcl
call
jp
pop
xor
xor
aam
mov
adcb
cs
mov
lret
jno
ss
sub
sub
cmpsb
fst
fwait
loop
and
mov
aas
adc
loopne
adc
cmc
ljmp
call
jbe
in
inc
pushf
arpl
cs
jnp
inc
cmp
mov
fwait
jnp
sbb
fadd
lods
pop
xchg
dec
es
idivl
ficomps
lock
and
jnp
stos
scas
and
mov
rorb
pop
add
pop
jnp
dec
jb
push
cmpl
in
jnp
repz
vphaddbq
out
test
adc
xor
push
bound
subl
das
mov
cmc
notl
pop
inc
out
sub
push
nop
jnp
cmp
test
jnp
stos
mov
mov
fiaddl
xor
call
inc
divb
sbb
jnp,pt
shrl
mov
cmp
adc
repz
jo
jnp
in
outsb
inc
ror
jmp
jnp
rorl
adc
sbb
rclb
jnp
pop
mov
fcmovnb
jae
jnp
in
xor
sti
out
pop
jnp
lods
daa
fbld
rol
ss
xchg
jnp
fsub
xorb
inc
or
dec
pop
ficompl
nop
adc
arpl
jnp
mov
or
mov
insl
mov
sarl
std
xor
stc
mov
fidivrl
ret
out
mov
xchg
xchg
jnp
xlat
mov
pop
call
jnp
push
jne
ret
outsb
jnp
icebp
fcmove
jmp
xchg
enter
adc
movsl
xlat
iret
icebp
xor
test
mov
or
or
sbbl
shl
jnp
arpl
ja
test
inc
jnp
or
ret
gs
test
ja
mov
stos
jnp
and
pop
jnp
mov
xor
jnp
int
push
sbb
stos
cmovnp
aad
iret
adc
xchg
outsb
jnp
out
incl
jnp
js
mov
cltd
mov
int3
cmp
and
push
jecxz
jg
mov
fidivrs
xor
insb
xchg
sbb
or
subl
lods
out
inc
rorb
jmp
push
dec
pop
dec
push
xor
adc
mov
mov
push
sub
xor
call
fstpt
jecxz
fsubs
cmp
push
icebp
shrb
lock
hlt
xor
jns
xlat
fs
imul
push
xchg
jnp
or
jnp
lods
xchg
add
push
push
mov
imull
xor
outsl
jbe
sahf
das
testb
stc
stos
adc
mov
jnp
popa
and
mov
sar
dec
out
sahf
add
aaa
jae
jp
jnp
pop
call
add
or
sbb
int3
out
jnp
lea
outsl
sub
and
ret
ljmp
jne
imul
xchg
and
rep
fsubrs
sbb
xchg
outsl
stos
lods
mov
ret
push
call
and
add
ljmp
sub
jae
push
clc
test
mov
jnp,pt
dec
cwtl
pop
jae
mov
pop
inc
movsb
inc
outsl
jge
inc
or
cmp
or
paddb
sub
and
mov
scas
sub
or
mov
jae,pn
jp
not
or
adc
push
jnp
sbb
xchg
xor
jbe
jnp
fs
jae
mov
jnp
pushf
mov
sub
mov
in
jns
sbb
xchg
jae
jne
loopne
sbb
jmp
dec
jnp
jmp
outsb
je
stos
dec
add
aaa
sbb
lods
mov
pop
push
inc
daa
inc
pop
icebp
lret
inc
cwtl
ja
popa
out
jnp
loop
push
push
add
lahf
jnp
or
adc
pop
sub
movsl
cmp
int
jbe
mov
movsb
pop
adc
cmp
jae
or
push
scas
icebp
aaa
xchg
or
mov
pop
idivl
fadds
jnp
js
sbb
imul
mov
dec
sub
mov
dec
push
push
pop
dec
xor
sub
mov
xchg
mov
xor
push
out
fmull
mov
sbb
sbb
aaa
jnp
mov
aas
shr
inc
fwait
sbb
lret
lods
mov
or
or
mov
test
mov
mov
imul
mov
pushf
dec
rcr
movsb
gs
js
dec
inc
or
lods
imul
in
inc
pop
fidivs
inc
daa
xlat
mov
repz
jnp
fsubr
mov
jnp
sbb
aad
push
adcb
add
pop
sahf
xor
inc
pop
sub
das
ja
xor
into
jnp
cmc
dec
cmpsb
fiaddl
jb
jnp
push
out
cmp
fmuls
and
movsb
mov
push
pushf
pop
int3
fs
cwtl
jnp
pop
popa
push
sarl
sbb
mov
repnz
pop
pop
insb
jnp
xor
or
sbb
lods
das
test
jnp
mov
lock
adc
imulb
jle
popf
xorl
xchg
jnp
push
loopne
cltd
int
jp
inc
jnp
jmp
fwait
mov
or
cli
and
mov
sarb
pusha
inc
jnp
push
repnz
shrl
enter
cld
hlt
add
mov
cmp
in
rolb
pop
jge
sahf
jnp
cmp
jnp
push
sarb
sarb
js
pusha
loope
adc
cmc
push
insb
cmp
pushf
mov
nop
lret
mov
mov
fwait
subb
jo
xchg
scas
dec
jns
mov
outsl
pop
adc
jnp
or
xchg
jnp
add
jl
jnp
ds
pop
push
mov
jnp
xchg
dec
test
sbb
pushf
jnp
popa
cli
fbld
cmpsb
in
lret
mov
int
addr16
inc
pop
dec
pop
jnp
out
xchg
push
test
repnz
add
int3
inc
mov
negb
xor
sub
xchg
xchg
in
xchg
fcomi
xlat
fdivrl
test
dec
arpl
ss
xor
mov
and
test
iret
cmp
sahf
adc
lock
jnp
lods
inc
subl
pop
adc
lcall
pushf
ja
jnp
mov
aad
jecxz
test
nop
call
movsb
stos
loopne
mov
mov
pop
mov
jns
popf
cli
insl
add
jnp
and
sbb
push
jnp
andb
mov
inc
sbb
push
pop
mov
xlat
xchg
in
jbe
ljmp
cmp
cmp
outsl
int
movsl
mov
jnp
fistpl
adc
push
scas
jnp
and
insb
ljmp
pop
sub
xchg
jnp
popf
cmpsl
dec
int3
inc
fistl
mov
push
bound
ja
icebp
xchg
mov
ljmp
test
data16
and
loope
xchg
pop
pushf
jnp
push
sbb
push
lock
inc
dec
stos
rclb
adc
jg
mov
lret
cmpsb
mov
pop
out
xchg
insl
test
jnp
stos
ja
gs
lods
sub
daa
mov
mov
jnp
xor
cmp
movsl
sbb
lret
add
js
or
or
fisubl
jns
ja
shll
sahf
jnp
pop
and
sahf
push
xchg
inc
jnp
mov
jg
ljmp
inc
sar
jnp
gs
cmp
fidivrl
fidivs
stos
dec
mov
das
rep
jae
jnp
dec
pop
popa
outsb
test
mov
push
jmp
clc
dec
imul
je
in
mov
loope
mov
xchg
popf
inc
jge
mov
cmpsl
xchg
imul
test
jp
adc
push
lcall
pop
sub
jae
daa
and
inc
dec
push
cmp
mov
xchg
lret
mov
adc
jnp
stos
aas
cli
adc
in
ds
lret
jo
mov
add
inc
fisttpl
xchg
dec
fists
repz
jnp
jo
adc
icebp
inc
lret
jnp
mov
std
inc
adc
mov
pushf
mov
and
mov
sarl
push
dec
cmp
xchg
push
and
sub
pop
pusha
std
cli
addr16
cmpl
or
mov
push
adc
rcrb
movsl
jae
mov
xor
jge
sbb
sarb
jl
mov
mov
lret
lds
call
xchg
mov
mov
add
jne
aaa
add
xorl
mov
pop
rcrl
jnp
mov
fistl
pop
nop
sbb
bound
pop
sbb
cs
jl
fldt
jae
jnp
fildll
jnp
jb
or
jnp
dec
lret
shlb
enter
mov
out
in
lods
imul
dec
jns
loope
addr16
sub
push
adc
or
and
ss
xchg
fsubrl
jmp
mov
inc
arpl
mov
jnp
ljmp
jnp
cli
push
insb
aad
fidivrs
in
mov
pop
jb
test
jnp
cmpsl
add
mov
push
stos
stos
xchg
ret
outsl
push
mov
push
movsl
or
fisttps
stos
jbe
lods
mov
and
hlt
mov
or
xchg
je
inc
mov
jnp
adc
sbb
push
lret
ljmp
pushf
call
out
dec
cmp
xor
sub
cmpsb
add
lea
sbb
push
invd
imul
int
ljmp
add
cmp
mov
push
cmp
lcall
mov
cmp
xor
mov
mov
dec
mov
mov
adc
negl
inc
inc
insl
jmp
in
sbb
inc
jnp
adcb
in
mov
sbb
int3
xor
or
leave
outsl
fistl
lcall
repz
imul
call
subb
lock
lods
popa
cmp
pop
mov
xor
lea
ret
int3
arpl
sbb
lret
stos
pushf
or
dec
shrb
xor
fiadds
mov
mov
call
loope
push
mov
arpl
pop
fnstsw
popf
test
sub
shr
stos
mov
push
inc
insb
inc
loope
and
push
insl
test
adc
clc
pop
add
xorl
cmp
jnp
push
cmp
aad
out
in
dec
outsb
outsl
mov
call
adc
aad
push
sub
pop
mov
ljmp
cmpsl
or
adc
adc
mov
cmp
dec
mov
mov
mov
jnp
movsl
adc
and
imul
inc
jne
cmp
pop
push
pushf
bnd
imul
sbb
cmpsb
subb
jnp
xchg
aam
int3
insl
out
aas
mov
pushf
subb
push
inc
lea
sub
je
cmp
and
jb
lods
cmp
dec
jnp
ljmp
jnp
ja
xor
pop
cmp
popf
hlt
dec
or
jno
xchg
int
jnp
mov
cs
jnp
aaa
cmpsl
sbb
inc
xor
or
pop
insb
jnp
ljmp
sub
sbb
push
xor
mov
mov
jnp
jle
lds
mov
clc
mov
aaa
inc
insb
mov
iret
int
cmpsb
jns
and
mov
rcll
aam
cmp
lods
and
or
jbe
sub
mov
sbb
mov
xorl
and
dec
mov
cmpsb
popa
cmpsl
sub
jnp
cmc
pop
mov
mul
mov
in
jnp
mov
jge
sbb
jnp
pop
fmulp
insb
cli
mov
sbb
popa
push
pushf
sbb
inc
cld
jnp
inc
test
cmp
xor
or
dec
dec
dec
stc
les
mov
popa
jl
sub
subb
xor
and
jmp
popf
xchg
jae
fwait
lods
add
and
scas
sub
inc
addr16
ja
movsb
imul
xchg
adc
mov
outsb
push
dec
jnp
or
sub
xorl
inc
mov
dec
fadds
mov
jnp
mov
daa
pop
push
mov
lds
jno
das
stc
pushf
pop
mov
cmp
push
ja
jecxz
inc
mov
test
cwtl
sub
aad
mov
imul
in
mov
jnp
mov
movsb
cmp
daa
or
sahf
sub
stos
pop
dec
movb
mov
rorl
push
testl
xor
ljmp
stos
mov
in
cmp
xchg
insl
jnp
inc
push
dec
loopne
pop
xor
or
rclb
or
adc
out
addr16
or
je
jnp
mov
sbb
ret
xor
iret
cmc
mov
inc
mov
test
dec
jne
and
mov
jecxz
fs
add
inc
pop
cmp
lods
stos
jnp
stos
and
push
xor
mov
adc
lock
lods
push
mov
jmp
and
xchg
dec
and
inc
jnp
inc
xor
jp
push
fidivrl
movsb
dec
xlat
jnp
jo
push
xor
xchg
es
frstor
inc
xchg
gs
jg
bound
sbb
inc
into
leave
jo
mov
sbb
jnp
lods
repz
or
fwait
jg
dec
aas
jnp
cmpsb
push
or
movsb
loop
mov
sbb
leave
pop
ljmp
mov
into
rcrb
jnp
mov
sahf
cmp
jnp
movsl
pop
or
pushf
sub
mov
aaa
repnz
jbe
popa
lods
adc
fcmovbe
cmp
in
inc
or
jns
jl
cmp
jb
sbb
pushf
sub
mov
jp
mov
mov
mov
test
cmp
push
data16
jp
les
cmp
xchg
outsl
cmp
icebp
cli
mov
jnp
int
pop
sti
daa
jae
xchg
jnp
pop
insb
cwtl
or
outsb
dec
mov
dec
and
cmp
jnp
out
lret
jno
or
mov
mov
dec
mov
test
cld
mov
mov
xchg
jnp
es
inc
mov
inc
cmp
jae
imulb
sarb
mov
and
jnp
mov
jnp
dec
push
jge
or
popa
mov
sbb
cld
cli
pop
xchg
jbe
mov
mov
inc
mov
xor
pop
jmp
add
fs
in
mov
jnp
sbb
xor
shrl
mov
or
inc
addr16
xchg
dec
test
sahf
push
sarb
cmpsb
push
cmp
outsl
clflush
es
and
bnd
cmpsl
xor
addr16
lods
sbb
push
sub
add
cmp
push
arpl
adc
push
out
sbb
mov
jnp
sub
gs
enter
add
dec
pop
lahf
cmp
call
mov
pop
das
jnp
and
data16
sub
dec
pop
mov
adc
sub
out
pop
in
lahf
or
jmp
pop
fidivrl
dec
jnp
xor
ljmp
push
mov
adc
pop
add
jecxz
xlat
jp
jae
pusha
repz
adc
inc
inc
dec
cmp
fldt
sti
push
jle
jnp
sub
inc
sar
jnp
sbb
movsl
lahf
inc
mov
cmp
jnp
ficomps
clc
xchg
jnp
sub
lahf
imul
cwtl
jnp
fs
jg
xor
add
push
pop
adc
arpl
pop
shlb
jecxz
and
xchg
push
mov
jae
lods
imul
push
dec
and
out
add
mov
ficoml
pop
leave
jnp
add
repnz
xchg
out
inc
push
stos
iret
fs
cmp
cmpsb
mov
js
int3
pop
cmp
add
fildl
or
jnp
mov
int
popa
mov
fisttpl
mov
sub
inc
xchg
ret
mov
sbb
lods
addr16
sub
cmp
jno
sahf
xor
dec
mov
sti
out
jns,pn
jnp
aam
add
lret
outsl
push
and
nop
inc
jnp
xchg
xor
es
imul
arpl
call
jnp
stos
sub
jnp
ss
shll
add
es
stc
dec
and
bound
repz
jnp
andb
jnp
mov
or
in
int3
ja
popf
fs
mov
sbb
rclb
movsb
jnp
push
mov
adc
repnz
sub
sahf
jnp
jbe
testl
notl
lods
test
cmp
jecxz
mov
mov
sahf
cmpsb
jae
faddp
data16
and
addr16
stos
cmpl
push
mulb
insb
clc
dec
jnp
ljmp
mov
outsb
push
int
je
jnp
pushf
dec
pop
jp
cmp
stos
mov
outsl
xor
sbb
repz
inc
cmp
jbe
jnp
les
push
jae
pop
xchg
negl
jnp
jo
sub
js
sbb
mov
shll
ds
jmp
cmp
jne
imul
mov
add
in
pop
hlt
adc
mov
es
mov
jnp
out
pop
xlat
jo
into
cmp
sti
out
jle
jno
std
in
test
dec
int
movsb
mov
xor
mov
xor
sub
pop
outsl
lahf
jl
jnp
sbb
mov
nop
and
data16
fdivs
adc
gs
cmp
mov
pop
jnp
fwait
xchg
mov
mov
jnp
fadds
xor
sbb
jge
adc
jnp
arpl
incb
and
pop
sbb
clc
mov
mov
jnp
aas
or
or
push
xchg
jnp
mov
shll
dec
push
jnp
aam
mov
or
js
cmp
loopne
mov
das
push
clc
sbb
sub
sbb
ss
sbb
add
mov
scas
adc
or
mov
sub
sbb
add
std
cmp
jl
sub
test
adcb
or
je
fs
jnp
gs
add
dec
pop
in
jnp
sub
insb
adcb
sbb
pop
jnp
lock
les
fidivs
shrb
mov
lods
jae
fstl
dec
or
nop
andl
shlb
mov
fildl
outsl
add
dec
jnp
movsl
push
inc
jnp
mov
scas
sub
mov
or
mov
jl
cmp
in
scas
xor
arpl
or
jnp
data16
daa
js
jnp
ja
sbb
test
scas
inc
xchg
pop
popf
sbb
das
and
aaa
mov
cmp
add
jl
add
lock
lret
mov
cmp
repnz
aas
stc
jnp
push
outsb
ja
cwtl
lods
and
cli
pinsrw
jp
pushf
adc
ss
cmp
inc
jo
xchg
sub
jae
fimuls
xchg
enter
out
xchg
jnp
mov
shl
sbb
ss
aaa
or
imul
inc
and
subl
jnp
xchg
mov
and
enter
cli
ljmp
jnp
add
push
or
and
lret
adc
push
dec
push
jnp
roll
subl
xchg
jo
push
cmp
int
sbb
rcrl
dec
shll
mov
loop
scas
subl
jnp
pop
lcall
int
insb
sub
insl
ja
fidivl
inc
mov
je
jnp
cli
cmp
call
cmp
jmp
pop
ret
sahf
pop
insl
insl
sti
sbb
or
mov
hlt
enter
mov
loop
pusha
and
cmp
out
mov
dec
mov
mov
rcrb
insb
aad
adc
inc
mov
and
ds
inc
sti
xor
jnp
dec
pop
fnstcw
xchg
js
repz
pop
push
or
sti
mov
bnd
pop
loopne
mov
stos
jbe
imul
lret
jne
jmp
and
clc
inc
xchg
hlt
stos
jnp
aas
cmp
repnz
mov
add
mov
cmp
ret
jnp
and
out
jnp
mov
cmp
clc
cmp
jnp
in
adc
jmp
xor
push
int
jnp
sub
pop
jnp
lock
fdivs
jnp
and
stc
mov
fnstenv
xor
fists
dec
jnp
lahf
xlat
xor
jnp
mov
pushf
adcb
or
add
stos
xor
sub
and
mov
dec
mov
pop
cli
jmp
xchg
jo
outsb
inc
dec
jp
jne
mov
jnp
aas
jno
mov
jbe
inc
adc
mov
sub
pop
xor
call
cmpsl
sbb
mov
xchg
xchg
scas
jmp
jmp
sub
pushf
gs
imul
in
lods
inc
mov
daa
ljmp
mov
cwtl
or
lock
enter
push
push
pusha
aam
jnp,pn
lods
add
pop
sahf
fdivrp
dec
cmp
xchg
cmpsb
sti
repnz
bound
arpl
add
jnp
sbb
mov
lock
xchg
test
cmp
jnp
iret
in
inc
cli
imull
xchg
jae
sti
inc
mov
sub
fwait
pushf
add
movsl
mov
or
xor
xor
enter
ja
pushf
scas
dec
mov
or
outsb
cmp
inc
mov
sbb
push
sbb
cmp
add
insb
mov
jecxz
fcomi
js
fstl
pop
dec
push
inc
mov
in
mov
pop
or
jp
pusha
dec
pop
dec
imul
ja
xchg
int3
push
or
pop
xchg
call
jnp
ret
xor
mov
mov
fsts
inc
jbe
sbb
icebp
mov
jnp
fcmovnu
aaa
cli
mov
jnp
arpl
jnp
pop
mov
es
jl
loop
xchg
xchg
jnp
sub
mov
mov
and
push
shl
sbb
or
fdiv
jnp
and
fsubrl
in
lea
pushf
ja
insl
mov
jnp
add
mov
outsl
sbb
imul
rcrl
inc
jnp
xor
sti
jo
or
ss
insl
sub
fwait
or
mov
loopne
inc
jnp
int3
sbb
or
xchg
jnp
cmp
sub
in
jae
jg
or
xchg
stc
fisttps
push
and
xor
data16
movsb
daa
xor
lods
adc
or
or
jo
lret
ficoms
jb
repz
jnp
sub
or
shll
push
cmp
mov
imul
dec
enter
pop
clc
mov
jnp
flds
in
hlt
mov
push
adc
jae
cmp
aas
jnp
movsb
cmc
sbb
lods
mov
fs
popa
mov
mov
std
pop
xor
xchg
incb
push
mov
add
xor
int3
lods
jnp
xor
inc
lcall
sbb
cmpsl
pop
sar
jnp
mov
mov
jnp
mov
out
mov
lods
mov
cmpsb
es
dec
subb
das
mov
sub
lea
dec
mov
xor
data16
cmp
mov
in
rcrb
subb
aas
mov
scas
lock
dec
mov
cwtl
loope
mov
jle
sub
fstpt
jb
xor
pushf
pop
jnp,pn
scas
insb
jae
or
jle
inc
push
mov
test
jnp
adc
cmpsl
xor
cmp
lods
mov
xor
ljmp
std
mov
dec
jo
push
cli
add
movl
push
cs
jnp
lods
inc
sti
jb
lods
or
add
cmp
jle
es
fisubl
icebp
dec
shll
jo
arpl
sub
jnp
add
stos
mov
loopne
sub
adc
pop
call
ds
popa
mov
fiaddl
jnp
mov
sub
xlat
outsl
add
enter
in
clc
pop
push
rcrb
pop
repz
in
cmp
mov
test
std
mov
xor
xor
repnz
popa
xor
mov
fabs
repz
cs
outsb
jns
sar
adc
jbe
cmp
jl
stos
mov
xor
jge
dec
push
and
inc
jb
jnp
fisubrs
out
insl
movsl
pop
xchg
adc
jnp
xlat
mov
int
mov
in
pop
mov
inc
cli
jo
or
stc
xlat
mov
in
cmp
mov
ficoms
into
sarb
jp
mov
popa
xor
cs
fdivp
push
fwait
mov
cli
jb
jnp
loopne
lods
out
dec
sub
jns
mov
jo
insb
sahf
jnp
sbb
or
negl
adc
jo
jnp
xchg
std
sub
sbb
stos
aad
or
lods
lret
gs
inc
jo
inc
xor
mov
mov
rorb
xchg
jb
daa
arpl
jg
pop
jnp
mov
fists
imul
xchg
jnp
icebp
cmp
adc
lock
fmull
aas
adc
xchg
or
cmpb
jbe
mov
bnd
lods
stos
addr16
call
jnp
or
inc
mov
sub
and
call
push
fimull
dec
mov
xor
nop
xlat
pmulhuw
ss
sbb
jnp
stc
jae
ljmp
inc
jno
sbb
aad
arpl
outsl
inc
ds
clc
xchg
push
jnp
clc
pop
add
push
addr16
sbb
mov
jnp
cli
ljmp
mov
cmc
je
jnp
lods
movsl
mull
jnp
pop
sub
dec
xlat
scas
jnp
jns
xor
xchg
addr16
cmp
mov
fsubl
call
sub
mov
andb
jnp
add
fisubrs
mov
dec
mov
out
jg
jnp
pushf
aam
ljmp
fdivrs
jne
cmp
jbe
sahf
lret
jns
and
cmc
aaa
shlb
sbb
outsl
cmp
jnp
int
addr16
sbb
pop
mov
punpckhdq
sub
aad
add
push
outsl
dec
adc
negb
xor
adc
pop
mov
adc
xor
fucomi
jnp
rcll
jg
cmpb
lahf
add
scas
dec
fsubp
and
xor
jnp
rcrl
push
jl
decb
ljmp
out
jns
cmpsl
stos
push
outsl
add
call
mov
int3
mov
add
mov
push
jge
sbb
cmp
adc
and
jnp
std
out
pop
xor
addr16
imul
jnp
jne
mov
inc
sub
adc
jnp
add
es
jnp
xchg
lds
fwait
popa
stos
jnp
add
stos
jnp
mov
push
xlat
es
js
jge
rorl
test
adc
int3
mov
arpl
jae
cmc
xor
mov
or
pop
subl
xchg
or
mov
push
bound
adc
xchg
push
cmpb
stos
imul
sub
cmpsb
hlt
cli
add
adc
pop
ret
dec
mov
push
insl
stc
jne
add
mov
or
push
pop
add
jle
mov
and
push
or
sub
mov
fdivrp
xlat
in
xchg
sub
add
or
imul
adc
lods
inc
in
nop
int
or
mov
jnp
adc
inc
mov
push
sti
jnp
cmpsl
jae
push
shll
jmp
mov
cmc
jae
jecxz
sti
add
sbb
mov
inc
mov
adc
int
sbb
stos
xor
ljmp
push
jnp
dec
in
popa
insb
cmp
add
das
arpl
xchg
sarb
and
lret
adc
les
push
jnp
push
lea
push
and
addr16
lods
push
or
lret
xor
pushf
arpl
mov
adc
jnp
and
push
lret
xor
daa
sbb
jnp
mov
xor
push
xchg
stos
or
lahf
inc
mov
lret
iret
out
adc
aam
inc
push
dec
add
out
xor
jnp
call
pushf
dec
jnp
pop
repnz
mov
rclb
jnp
push
cmovl
adc
sbb
or
cmp
cmpsl
jp
jne
pop
shlb
lea
mov
inc
lret
in
cmp
mov
pop
lahf
adc
dec
sahf
mov
pop
outsl
icebp
stos
int
jnp
add
dec
sub
jnp
sarb
pop
jmp
cwtl
jne
sub
xlat
ret
popa
xchg
sahf
jbe
sbb
loope
jnp
xchg
mov
ss
mov
cmp
lods
jnp
shlb
xchg
pushf
xchg
jnp
icebp
sbb
mov
aad
jp
jae
sti
scas
gs
lods
out
add
add
sahf
sbb
jb
xchg
lret
push
pop
lcall
xor
pusha
movsb
sbb
fwait
push
sub
negb
and
mov
ficomps
int
leave
les
jnp
cmp
dec
loop
aam
enter
push
js
push
mov
loopne
pusha
popf
leave
push
jnp
imul
lods
and
jnp
icebp
xchg
daa
dec
and
test
sub
cli
fisttpll
mov
jnp
popl
addr16
jnp
lods
pop
adc
in
mov
stos
rcrb
jb
mov
jnp
cmp
arpl
jnp
fmull
and
lods
cli
dec
imul
xor
inc
daa
lods
in
xchg
aam
lret
repz
add
push
sub
out
and
stos
scas
leave
je
adc
jbe
xor
lahf
inc
arpl
cwtl
outsl
ljmp
jnp
xor
fidivs
jmp
sbb
push
imul
and
mov
cmp
lds
pop
cmp
fbstp
in
jnp
in
movsb
loope
cmp
mov
fstpt
popa
mov
xor
aad
cli
lods
insb
ja
aam
mov
jg
mov
mov
pop
stos
sbb
xor
shrb
scas
sbb
sbb
jnp
pusha
call
jb
dec
jmp
mov
or
cmp
shr
jnp
push
mov
mov
push
ficoml
mov
cmp
cmpb
ss
jle
shrb
popf
subl
sti
sahf
lods
arpl
cs
loope
lds
mov
rcr
jnp
push
into
xchg
inc
es
out
jnp
mov
dec
xor
or
rcll
mov
dec
popa
int
sbb
out
adc
inc
enter
cld
mov
mov
pop
jae
mov
xchg
sbb
mov
in
dec
jecxz
rcrl
add
mov
sbb
add
imul
in
jno
aam
jnp
rclb
mov
mov
insl
cmp
lea
mov
dec
addr16
fistl
or
jnp
jge
ds
dec
pop
int3
and
fstpl
mov
ja
ljmp
pop
inc
lods
dec
insb
fucomi
pop
call
adc
popa
dec
repz
push
xor
outsl
clc
jnp
and
cmp
add
fs
jnp
shl
push
mov
cmp
repnz
dec
fcmovbe
jnp
lret
cli
jp
inc
mov
cmpsl
sti
xchg
js
pop
mov
cmc
inc
aad
xlat
push
jnp
xchg
popa
movsl
loopw
outsb
insl
xor
fildl
jo
mov
mov
jae
xchg
test
lcall
in
test
jp
clc
inc
inc
pop
cmp
or
lods
call
mov
jnp
sbb
mov
imul
add
jnp
insl
ficoms
sbb
int3
mov
imul
jnp
mov
sub
pop
lods
lods
jmp
fistl
pop
je
nop
inc
ljmp
pop
mov
sbb
jp
sub
jl
mov
ljmp
adc
adc
jnp
push
clc
ds
fcomps
aaa
hlt
out
jge
sbb
cmp
lock
inc
sarl
mov
sub
lret
sub
xorb
mov
jnp
or
in
ret
inc
jnp
ss
pop
sub
jnp
test
xlat
in
test
cmp
data16
imulb
out
xor
enter
push
inc
pop
je
bnd
pushf
hlt
cmp
arpl
xor
or
loopne
push
mov
jae
push
cs
idivl
jbe
lcall
add
xchg
inc
mov
jb
add
push
out
in
cs
dec
fmuls
rolb
sahf
xchg
push
jnp
into
shll
mov
rcrl
outsb
cs
dec
test
add
or
adc
xor
rclb
insb
mov
imul
es
push
clc
fsubr
loopne
jle
jnp
loop
ret
mov
pop
lahf
jnp
push
inc
lock
sarl
jnp
scas
les
lret
aam
sub
inc
push
sarb
stc
cmp
lret
xor
jge
xchg
shrl
add
scas
inc
inc
jnp
mov
fs
cmpsb
subb
insb
mov
or
mov
mov
mov
xor
and
xor
xchg
or
cmp
lods
mov
fldenv
add
filds
xchg
xor
dec
sub
pop
in
dec
mov
xchg
js
cs
push
jnp
lods
aas
jbe
dec
dec
push
popa
into
and
xlat
add
ss
testb
xor
xchg
mov
clc
orb
outsl
cmp
cmp
movsb
fucom
xor
jnp
pusha
gs
lods
jo
ljmp
fistpll
pop
fldl
and
push
or
fidivrl
jae
mov
and
push
inc
xor
imul
push
mov
data16
push
pop
in
sbb
lods
fmuls
cld
cs
adc
lahf
pop
push
xor
push
data16
or
fsubs
xorl
pop
call
dec
decb
mov
stos
jg
xchg
negl
adc
in
dec
mov
rorb
lods
cwtl
jae
or
dec
mov
adc
stos
jp
or
jnp
mov
lods
mov
cmp
jae
or
pushw
dec
pusha
cmp
ljmp
sarb
push
shrb
imul
pop
hlt
mov
neg
jnp
sbbl
mov
and
cmp
mov
dec
jns
aam
push
jnp
xchg
push
stos
test
push
and
in
jnp
pop
push
or
xor
mov
pop
jnp
sbb
or
imul
sbb
sbb
daa
mov
scas
sub
xlat
out
shll
fwait
jbe
cmp
jnp
add
es
lods
pop
neg
jp
ret
dec
pop
sub
in
push
fidivl
pop
or
cmp
mov
inc
jnp
cmpl
call
fiaddl
into
mov
js
out
cltd
jnp
sbb
inc
sub
push
imul
mov
cmpsb
int
ja
mov
out
sti
and
mov
jnp
loope
sbb
mov
insl
pop
call
adc
int3
dec
push
add
sub
call
xlat
jp
ja
and
mov
stc
mov
call
add
sbb
xchg
rcr
in
mov
mov
test
cmpsl
jp
inc
lret
imul
push
mov
jnp
push
mov
inc
cmp
daa
jb
jnp
bound
jne
test
insb
pushf
pop
inc
loop
jnp
xor
mov
nop
cmpsb
jnp
inc
or
jnp
jae
insb
test
jo
adc
cli
dec
fwait
add
jnp
dec
in
insb
test
and
adc
and
lcall
pop
jp
stc
mov
fnstsw
or
lods
jnp
ds
sbb
mov
jecxz
fbstp
and
xor
addr16
xchg
ds
int
sarl
xchg
mov
nop
xchg
or
loope
xchg
ret
andl
xlat
jnp
fidivrl
push
mov
popa
xchg
pop
add
adc
mov
mov
test
sarl
add
icebp
mov
insb
push
imul
sbb
lods
std
jo
xor
dec
inc
xchg
fcom
push
sub
movsb
jnp
aad
xor
mov
or
mov
jno
lea
sbb
into
xchg
iret
sbb
out
leave
jnp
sahf
cmpsb
and
sub
jnp
jo
and
sub
dec
sub
jb
xor
test
decl
jnp
cmp
repz
movl
sub
jnp
outsb
cmpsl
pushf
ljmp
pop
dec
jecxz
arpl
or
cmp
repnz
xor
idiv
fidivrl
xor
bound
mov
icebp
pushf
pop
in
jge
pop
clc
sarb
popf
cmc
push
in
adc
insl
std
imul
pop
jmp
mov
rcl
jne
outsb
push
mov
jnp
mov
movsl
aaa
jnp
cs
fcomp
aam
int
out
lods
push
xor
mov
insl
sti
mov
sub
mov
call
jnp
hlt
xchg
sub
out
xchg
cmp
jmp
jnp
cli
lcall
addr16
repnz
scas
sbb
imul
mov
xorl
sbb
arpl
cmpsb
or
mov
into
pushf
sub
mov
mov
inc
lret
and
mov
lods
mov
push
in
xchg
cs
sar
pop
xorl
stc
das
lods
fwait
inc
cmp
sbb
mov
cmp
fldl
cli
sbb
into
popf
test
inc
xlat
jnp
iret
loope
gs
stos
outsl
cmp
and
cmp
ljmp
sbb
pusha
push
insl
jbe
xor
stos
cmc
mov
mov
inc
mov
cmp
cltd
mov
mov
mov
pusha
jns
xlat
adc
fldt
inc
ret
mull
mov
imul
adc
jnp
sti
jp
fimuls
pop
jnp
pop
inc
pusha
mov
lods
mov
roll
jnp
movsb
jg
add
sub
jnp
stc
adc
cmp
arpl
shlb
gs
mov
ljmp
xchg
ja
push
fnstsw
push
cmpb
push
es
out
dec
aaa
mov
push
imul
adc
xchg
in
xchg
jnp
sub
push
cmp
clc
jnp
cmp
sub
test
jno
xor
lods
pop
mov
jecxz
xor
imulb
aad
inc
pop
loope
or
std
and
rol
mov
inc
popf
pop
and
sub
pop
ja
ljmp
dec
push
xchg
lock
mov
adc
jnp
bound
fnstsw
imul
dec
pop
mov
stos
jp
jnp
dec
icebp
lods
insl
add
jnp
push
mov
mov
xchg
dec
lods
dec
sti
jb
and
bnd
jnp
jne
mov
mov
jnp
add
pop
addl
adc
jp
loope
pop
fsubrp
in
jnp
mov
lock
inc
xchg
mov
dec
movsb
mov
jnp
and
xor
shll
add
or
int3
ja
lahf
inc
mov
ret
mov
mov
ljmp
adc
jnp
in
and
in
push
push
out
scas
pop
lods
jnp
inc
dec
hlt
mov
and
ljmp
jnp
sbb
mov
sbb
sbb
push
jns
jnp
xchg
in
repz
push
jnp
mov
adc
pop
rorl
xor
push
nop
neg
jp
fs
cld
loopne
sbb
or
xor
stos
cltd
sbb
jmp
repz
idivb
sbb
add
mov
lods
pop
pop
ljmp
push
pusha
xchg
jns
das
sub
lcall
pop
arpl
cmpsl
jnp
adc
mov
in
lods
ret
mov
int3
repnz
stos
popf
xor
push
movsl
pushf
cmpl
cmpsl
sbb
lahf
cmp
cmc
jns
jnp
out
push
jge
test
jnp
fsub
lret
in
popa
lds
loop
xor
arpl
jge
loope
ss
xor
gs
outsl
pop
pop
or
jnp
int3
shlb
mov
xchg
and
cmp
gs
leave
cmp
mov
aaa
pusha
dec
js
ja
pop
cli
or
mov
call
sahf
dec
push
cmp
testl
sbb
adc
cmc
dec
arpl
jnp
sub
mov
mov
out
jnp
js
cmp
imul
lods
or
jnp
fwait
sub
lods
cmp
daa
pop
cli
mov
and
and
fwait
mov
sbb
jb
arpl
cmp
das
sbb
jecxz
in
add
cmc
mov
repz
jnp
xor
sub
movsl
xchg
int
repz
pop
sbb
push
cmove
ja
test
push
jae
jno
dec
xchg
xchg
ss
mov
jnp
dec
xor
test
sbb
jnp
sub
jmp
pop
xor
mov
je
ja
mov
imul
dec
inc
xor
pop
scas
repnz
stos
push
rcl
hlt
dec
outsl
mov
inc
int
call
mov
mov
mov
repz
rcrl
dec
xchg
or
jnp
outsl
outsb
pushl
bound
jnp
dec
movsl
mov
pop
adc
stos
ljmp
ds
repz
icebp
xor
jnp
popa
dec
sbb
fisubrs
je
ret
jnp
scas
sti
mov
jnp
popa
sbb
pop
clc
subl
xor
in
jnp
jecxz
push
mov
cmc
mov
mov
inc
xchg
jnp
xchg
xor
iret
rorb
gs
and
mov
shll
jg
out
jo
xchg
push
dec
pop
jnp
cmpsl
popa
leave
xchg
add
push
js
das
clc
fdivs
loopne
jae
adc
sbb
xor
movsl
mov
out
cmp
and
and
jbe
mov
movsb
mov
add
ds
stc
fildl
ja
test
sarb
jp
outsl
call
dec
popa
in
mov
jae
jnp
jbe
sub
push
pop
or
add
adc
scas
stos
lret
dec
sub
inc
mov
mov
xchg
dec
mov
add
cmp
pop
push
ljmp
pop
mov
mov
push
dec
shrb
out
mov
cmpsb
fwait
test
mov
sbb
scas
fnstsw
xor
mov
lods
int3
dec
loopne
jge
mov
outsb
push
or
pop
stos
sbb
jg
ss
push
mov
sbb
mov
insl
sti
sub
dec
xchg
imul
outsl
ret
sbb
aam
in
push
xor
jnp
out
mov
mov
out
mov
or
jb
sbb
rclb
loopne
test
or
pop
pop
mov
mov
mov
out
sti
jnp
push
and
clc
in
shrb
sbb
aas
daa
fs
aaa
je
jnp
test
or
into
jle
cmp
bnd
xor
xor
jnp
dec
popf
sub
mov
sbb
dec
or
shl
xchg
inc
pushf
imul
inc
sub
nop
jnp
in
sbb
adc
jnp
inc
ljmp
pop
daa
adc
jnp
cli
fldcw
mov
xorl
js
xchg
add
adc
inc
fsubr
push
mov
stos
xlat
push
and
test
sbb
rcrl
fadds
jns
and
pop
movsb
mov
xor
jnp
jbe
jns
loopne
and
in
imul
insb
cmp
stos
iret
push
pop
mov
outsl
lret
push
ljmp
push
fstpt
cld
push
popf
push
inc
dec
jnp
adc
mov
inc
ret
pop
jnp
in
sbb
push
push
sub
sarb
scas
in
pop
cltd
mov
adc
pop
mov
mov
das
sub
cmp
push
mov
bound
inc
jno
cli
add
mov
outsb
jnp
movsb
and
sbb
pusha
js
and
mov
subl
std
mov
mov
in
enter
sub
inc
mov
jmp
fnsave
jnp
and
jbe,pt
add
push
xor
out
mov
dec
mov
cmp
daa
cs
icebp
ljmp
std
sahf
mov
cmp
test
aaa
lcall
int
es
add
push
pop
mov
in
ret
sbb
cli
fwait
shlb
int
test
jnp
shll
and
jb
pop
clc
xchg
and
mov
sbb
andl
adc
jnp
mov
fs
pop
mov
inc
out
ret
jnp
mov
add
add
jnp
mov
in
adc
mov
add
cmp
in
or
push
jo
add
loopne
js
jl
xor
orl
shrl
pop
out
ja
testl
js
scas
mov
stc
int
jnp
lret
jae
je
cmp
lret
subl
call
or
aam
stos
dec
mov
cs
pop
pop
out
sbb
xlat
sub
dec
stos
dec
sub
mov
xor
mov
push
test
sbb
jnp
out
pushf
nop
jnp
mov
pop
fistpll
dec
mov
cwtl
sub
aaa
lods
idivl
xor
mov
je
jnp
or
jecxz
and
repz
cltd
popf
sbb
dec
stos
jnp
xor
lret
and
dec
dec
loop
dec
xor
aam
ret
daa
icebp
stos
xchg
stc
jnp
divb
jnp
rcll
loopne
and
call
jp
pop
mov
mov
xor
jnp
lock
in
pop
sub
in
lods
xlat
inc
jnp
out
cmp
test
iret
in
dec
jecxz
or
bound
ret
jnp
popa
int
fs
or
imul
xor
mov
pop
gs
lods
inc
loope
mov
sub
fidivs
movsb
cli
imul
jno
shrd
imul
rcll
xor
out
xchg
sbb
enter
stos
sarl
jnp
pop
add
ret
or
lods
das
cmp
ficoms
mov
test
sbbl
arpl
insl
imul
std
sub
pushf
jb
iret
xor
push
or
aas
inc
jnp
xchg
sub
jnp
pusha
fs
push
mov
pop
jae
inc
xchg
jge
mov
mov
push
mov
cmp
jnp
shlb
mov
inc
cli
xchg
mov
popf
xor
pop
repz
mov
insl
call
jnp
inc
jno
imul
mov
adc
cld
mov
mov
jecxz
xchg
test
xchg
aam
fdivr
into
xchg
cmp
inc
rorb
pushf
push
inc
mov
imul
xlat
pop
jnp
push
xchg
add
jnp
push
mov
mov
mov
cmp
add
xlat
stc
jnp
mov
mov
jnp
nop
pop
call
jnp
xor
pushf
push
mov
mov
xchg
je
push
ret
mov
pusha
push
mov
mov
outsl
scas
push
insb
ds
xor
push
outsl
jbe
lods
inc
add
jo
test
gs
jnp
mov
pop
adc
js
fsubr
push
in
call
add
imul
mov
ficompl
pushf
or
jbe
loopne
pop
xor
lods
jecxz
scas
mov
pop
mov
loope
or
add
repz
or
add
mov
pop
or
jb
lods
clc
js
jge
roll
pop
jnp
push
loope
push
fs
in
lret
ljmp
imul
mov
insb
es
icebp
add
popa
popf
or
adc
jnp
push
pusha
adc
jg
jle
mov
mov
lea
je
xor
jnp
rorb
push
jnp
sub
jnp
lahf
mov
add
jnp
sti
mov
imul
inc
jmp
lods
mov
dec
cs
mov
push
jnp
sahf
mov
add
scas
popa
xchg
or
fistps
pop
adc
cmp
inc
sub
jnp
and
or
jns
xor
stos
sti
outsl
push
movsb
lret
jae
jo
enter
adc
lret
movsl
cli
leave
repz
cmp
jg
mov
jo
lods
xchg
das
int3
mov
xchg
movsb
jnp
pop
sbb
jne
or
add
lods
fcomi
adc
jnp
mov
fincstp
mov
jne
popa
push
sbb
in
cmp
jnp
sub
cmp
lret
mov
arpl
outsb
lock
ja
test
mov
jae
cmp
xchg
notl
cmp
or
fmuls
sub
data16
cmp
je
scas
scas
in
cmpsl
inc
clc
sub
lds
cmp
outsl
aad
insl
push
sarl
and
mov
popf
xchg
add
in
adc
sarb
aam
mov
jnp
mov
stos
mov
xor
in
in
xchg
inc
and
imul
sbb
loop
sbb
lret
pop
stos
adc
pop
jnp
scas
sbb
aad
in
jnp
and
and
dec
int
mov
jae
add
and
inc
add
mov
jnp
pop
sbb
cmp
sub
btr
mov
mov
jnp
dec
gs
push
sbb
out
xchg
xor
dec
in
inc
sub
lock
cmpsb
dec
dec
mov
push
xor
jbe
push
cli
pop
in
adc
nop
pslld
shlb
aam
repz
lret
xor
dec
fidivrl
fbld
cmp
push
jnp
dec
or
mov
jae
jnp
mov
clc
jp
sti
hlt
dec
push
or
into
popa
push
mov
jbe
xchg
call
add
xchg
fwait
mov
scas
shl
jnp
sti
cmp
lock
dec
jnp
je
movsl
push
cmp
lea
in
jns
stc
jnp
mov
jge
fbld
imul
and
in
jnp
loop
add
xor
jns
cmp
jb
stos
adc
jbe
jg
ds
push
clc
mov
stos
jnp
popl
lahf
sub
inc
jne
in
les
psubw
cmp
inc
and
sbb
cmc
xchg
xchg
push
cmp
lret
mov
jae
fs
add
mov
sub
cmp
loope
cltd
addr16
jnp
les
arpl
fwait
hlt
mov
lahf
dec
cmpb
or
dec
insl
test
mulb
mov
imul
xchg
int3
xchg
in
dec
push
cmp
jnp
stc
fists
rolb
inc
and
push
jnp
aad
dec
pop
fcmovnbe
jnp
cli
push
aam
xor
popf
test
mov
iret
mov
jnp
aam
add
pushf
mov
sbb
and
dec
jnp
or
and
scas
pop
cs
mov
sub
mov
test
sbb
push
fdivl
adc
adc
es
loop
shl
and
sbb
inc
int3
outsb
jge
jns
imul
jno
mov
aaa
adc
and
imul
cmpsl
test
pushf
cld
xor
andl
jnp
jecxz
push
cwtl
ljmp
ret
jg
mov
jmp
mov
ds
jnp
add
mov
mov
lock
aam
stos
test
dec
push
leave
rolb
push
fdivr
pushf
xchg
cmp
js
stos
lds
shlb
rcrb
sarl
jl
out
test
jnp
outsb
jb
stc
inc
idivl
sub
je
arpl
xor
fidivs
mov
jnp
pushf
fmull
js
lahf
dec
jmp
jae
push
ljmp
jle
pop
in
mov
pop
xchg
repnz
sbb
clc
test
cs
jno
adc
jo
idivl
pop
in
daa
insl
imul
sti
arpl
ljmp
shrl
mov
pop
jnp
ret
xor
mov
push
insb
mov
add
stos
lods
adc
add
jnp
lret
arpl
popa
sub
sbb
mov
jp
cmp
and
rclb
jb
daa
jnp
xchg
sbb
sidtl
cmc
push
inc
jae
jp
sarb
sub
fbstp
cmpb
add
xchg
int
mov
jnp
addr16
shlb
pop
ss
jnp
mov
jmp
mov
xor
les
jnp
bound
push
jnp
xor
sub
cmp
insl
mov
and
xchg
js
add
ss
mov
xor
fisubs
sarb
add
pop
mov
loop
xor
test
in
fidivrs
inc
lods
xchg
fstpt
pop
sub
jb
stc
xchg
repnz
and
mov
jnp
push
aam
or
cs
pop
cmp
xchg
mov
jnp
cmp
xlat
std
inc
in
adc
sahf
sbb
in
mov
mov
mov
jge
dec
or
js
xchg
call
imul
lock
adc
jbe
jae
jl
mov
or
repz
sub
inc
sub
int3
push
sub
xor
sbb
push
jno
subl
sub
dec
cmpsb
out
pop
adc
or
pushf
mov
xchg
push
jae
mov
jl
mov
jp
stos
out
out
out
movsl
imul
imul
adc
decl
mov
lcall
sub
xchg
lods
jnp
test
mov
in
inc
jnp
cmp
jp
cmp
enter
aas
jno
cmpsl
bound
sub
mov
iret
stc
sub
sbb
xor
fwait
adc
xor
pushf
push
mov
jbe
dec
jl
daa
cld
call
pop
jnp
jmp
push
mov
jle
lea
pusha
into
dec
fistpll
mov
lock
ljmp
xchg
jnp
mov
outsb
negl
idivb
xor
cwtl
jg
jnp
and
mov
pop
xor
aam
push
jnp
cmp
xor
mull
push
cmpsl
jnp
lea
sub
insl
jae
mov
js
pop
jl
loopne
push
aam
jnp
pop
sbb
jbe
sub
xor
jnp
loopne
ss
rcr
stos
out
rolb
jnp
xchg
xorb
scas
add
mov
pop
jnp
jae
fs
jnp
xor
mov
call
jo
scas
pushf
mov
mov
jecxz
idivl
sub
jae
cmp
mov
test
jb
sbb
jns
dec
sbb
mov
cmp
mov
cltd
push
mov
jnp
ret
push
mull
sbb
mov
mov
mov
mov
inc
dec
inc
mov
loope
jnp
xor
cmc
call
cld
shll
cmp
dec
pop
pop
mov
pop
push
or
jbe
stc
ds
dec
aam
cmpsl
lds
mov
mov
dec
mov
and
cltd
jnp
or
or
rolb
add
cmp
xchg
daa
lods
jmp
pop
push
jge
out
scas
or
jnp
sti
pop
lahf
hlt
add
cmp
mov
aam
daa
add
dec
mov
sub
shl
sbbb
push
mov
xor
std
cmp
in
cmp
inc
pop
mov
mov
add
stos
jnp
test
push
sbb
pushf
xor
jnp
or
or
mov
mov
sbb
jnp
pushf
or
xor
xor
in
pusha
mov
enter
cmpsb
xchg
jno
jnp
into
lods
loop
cs
jnp
stos
repnz
mov
pushf
lahf
mov
push
sub
lods
mov
sub
add
pop
cli
and
icebp
movsb
outsl
dec
js
pushl
test
repz
jb
jle
xchg
fstpt
jnp
jbe
pop
loope
mov
into
fcomps
leave
cmp
aaa
sbb
xchg
cmp
in
test
mov
and
es
jge
pop
sub
dec
xorb
fwait
cmpsl
insb
imul
lods
aas
aaa
jnp
sub
jnp
jge
sbb
test
out
lods
jp
dec
in
fsubrl
cmp
scas
jnp
inc
mov
loope
and
ret
mov
pushf
cmc
data16
mov
jae
sbb
repnz
or
mov
lock
add
adc
pop
insb
daa
adc
je
sbb
lods
loopne
sbb
js
jno
test
int
jnp
mov
inc
notl
mov
jb
jae
sub
inc
xor
gs
adc
and
in
ret
shrb
pushf
scas
ja
jne
outsl
jnp
inc
mov
cli
mulb
xor
xchg
sub
fmull
dec
push
aas
jg
jb
xchg
jnp
or
leave
in
sarl
mov
mov
jo
andl
push
add
into
xchg
repnz
pop
clc
ret
cmp
leave
insb
mov
addr16
in
mov
cwtl
jae
rorb
cmp
jnp
sti
repnz
call
gs
lea
push
out
jnp
add
iret
cmp
shrl
adc
xor
jle
mov
fwait
jo
out
mov
fidivrl
sbb
jl,pt
loopne
jnp
pop
and
int3
mov
xchg
inc
push
sub
pop
mov
jnp
xor
adc
iret
call
les
or
js
cmp
ss
xchg
jae
pushf
cld
ret
call
mov
lea
jnp
sub
dec
mov
cs
mov
leave
lret
addl
dec
xchg
cmc
sbb
cmpb
in
jne
arpl
enter
loop
add
mov
xor
pop
imul
out
or
xchg
in
and
bound
push
icebp
jnp
sbb
xor
push
call
jnp
pop
je
mov
sub
xchg
orb
je
mov
fidivrs
fcoml
aaa
hlt
aam
jnp
pop
fwait
mov
mov
pop
insb
inc
sbb
push
cmp
inc
repnz
pop
pushf
jnp
lahf
jbe
mov
mov
push
jnp
inc
dec
cmp
mov
lret
in
call
adc
inc
daa
and
jnp
lret
add
and
jnp
or
addr16
push
sbb
dec
mov
or
std
jae
mov
cmp
mov
hlt
negl
sbb
cmp
fs
aad
call
jo
sahf
xor
insb
int3
jge
mov
pushf
pop
mov
cmpsb
movsl
jecxz
andl
ret
mov
mov
in
jg
xchg
lods
fistps
dec
inc
movsl
sahf
pop
ja
sbb
adc
loopne
mov
lods
pop
ss
rcll
mov
inc
negb
test
cmp
push
fst
in
jnp
aas
arpl
aad
movsb
xor
lods
insb
addr16
loop
popa
sub
mov
or
outsb
mov
inc
dec
test
xlat
imul
inc
into
inc
pop
xchg
mov
jmp
push
xlat
mov
fwait
iret
jnp
shlb
and
cli
jnp
cmp
pop
popa
or
sarb
es
xor
pushf
outsb
test
inc
imul
ja
lods
or
int3
jp
aam
jnp
sbb
dec
icebp
je
ljmp
stc
fstps
inc
stos
imul
fsubp
jp
cltd
cmp
mov
sahf
adc
jo
outsb
ljmp
jnp
rolb
xchg
movsb
inc
jp
sub
mov
test
sbb
sub
cmp
sbb
add
xor
jnp
sbb
sub
jae
pushf
lea
lahf
jnp
push
loope
fisubl
cmpsb
divl
iret
add
or
add
cmp
jnp
aam
int
ja
xor
cwtl
pop
inc
sti
and
cld
out
jno
call
or
cltd
lret
dec
and
jp
inc
ss
fimull
in
mov
dec
inc
lahf
sahf
sbb
jecxz
add
loope
jae
cmp
cld
stos
sbb
subl
sub
cli
jnp
sub
daa
sbb
hlt
dec
cmpb
or
lret
jnp
mov
cmpsl
push
rorb
je
jge
daa
ja
sbb
add
outsl
lret
mov
ss
mov
insl
pop
cld
or
cltd
lods
lods
xchg
jnp
xchg
popa
fimull
lcall
je
bnd
scas
enter
jns
inc
lds
fidivrl
xor
dec
pop
stos
pushf
cmp
xchg
jp
jnp
ret
xor
lea
call
gs
pushf
mov
jnp
add
adc
aaa
fcomp
jnp
push
sarb
sti
or
pop
ret
pop
mov
push
jnp
fsubrs
jnp
ss
rol
jae
sbb
jnp
js
fwait
cltd
inc
or
mov
bound
adc
xor
mov
pop
adc
loopne
or
mov
add
mov
xlat
pushf
or
xchg
xchg
dec
clc
sti
imul
mov
out
jns
lods
jnp
ljmp
jnp
inc
inc
les
mov
mov
push
jge
mov
push
test
inc
dec
push
fsubrs
mov
je
xchg
lods
cmp
jne
jno
xor
subl
mov
fisttps
cli
add
adc
pop
mov
mov
mov
jp
filds
pop
out
ja
cmp
mov
push
movsl
cmpsl
pop
xchg
jno
inc
dec
add
divb
inc
jnp
adc
out
ja
jnp
sub
pushf
jnp
std
out
jno
cs
and
add
pusha
lahf
mov
lret
sub
mov
jmp
call
fdivrl
inc
int3
out
pushf
rolb
in
jnp
stos
outsl
xchg
repnz
or
inc
inc
sbb
xlat
sub
out
popf
in
mov
ja
dec
outsb
sbb
fadds
fwait
jmp
std
pop
jnp
aaa
popa
jp
adc
mov
out
repz
sarl
pop
xor
pushf
or
jne
clc
negl
out
int
lret
jnp
lahf
cmp
das
rcll
or
sbb
inc
xor
ja
mov
sbbl
sub
jo
out
mov
adc
dec
jae
repz
push
pop
adc
loop
jg
pop
stos
xor
outsb
rcrb
int3
cmp
iret
pop
add
je
inc
imul
sub
icebp
sti
dec
xchg
dec
es
mov
sbb
xlat
sbb
test
mov
pushf
mov
xchg
ror
push
jmp
lock
adc
jmp
push
inc
out
mov
xchg
lea
cmpsl
pop
xor
xor
bound
stc
jno
arpl
int
jnp
popf
mov
jae
icebp
ss
std
sub
js
add
pusha
in
xor
clc
testb
icebp
jae
daa
sbb
push
xchg
stos
lds
int
jnp
fcmovbe
js
mov
cmp
lock
add
xchg
fcmovne
ret
lret
jae
xor
jae
sbb
sub
sbb
sub
jae
leave
mov
test
cmp
jns
adc
pop
fisubrl
push
lods
cmpl
mov
pusha
jmp
sub
inc
outsl
sub
xor
or
fsubp
test
rorb
or
dec
js
push
es
jg
pop
repnz
jnp
pop
mov
inc
jnp
mov
mov
add
cmp
in
xor
hlt
mov
cmp
add
xchg
mov
sbb
sahf
out
cmp
xchg
cli
sub
jnp
test
dec
jb
xor
ss
or
pushf
sub
mov
pop
pop
cmovs
pushf
insl
imul
roll
in
mov
jnp
icebp
shrb
je
lods
pop
or
jae
cmc
pop
inc
push
xor
imul
aam
fidivrl
scas
sub
ja
out
or
shll
addr16
outsb
xchg
jnp
jno
sbbl
xchg
xor
xchg
and
shrb
inc
into
jnp
jae
mov
push
std
stos
insb
fstpl
stos
aaa
es
cmp
hlt
jnp
test
idiv
jbe
jnp
nop
xor
push
xorl
xchg
push
xchg
arpl
ljmp
adcb
stc
xchg
mov
fildll
popf
cmp
fisubs
loop
lods
sbb
jae
fadd
xor
negb
cli
lret
mov
cmp
jae
scas
jnp
mov
add
jnp
and
or
jnp
icebp
pop
jnp
aaa
adc
jnp
test
idivl
push
push
push
mov
sarl
cltd
sahf
or
xchg
inc
js
mov
loopne
mov
sub
mov
fwait
imul
rcr
jnp
push
je
push
mov
dec
and
push
test
aaa
jae
xor
popa
lahf
imul
addr16
sti
sub
hlt
cmpsb
ljmp
jno
jecxz
push
jp
jnp
push
faddl
in
call
jnp
push
push
inc
js
lret
fdivrl
mov
xor
push
clc
pushf
cwtl
mov
in
cmpsb
jnp
jmp
ss
jg
or
mov
lods
outsl
dec
sbb
mov
std
hlt
jno
xor
dec
ret
addl
cmp
pop
and
or
push
inc
xchg
in
and
leave
mov
cli
daa
dec
pushf
cmp
sbb
test
or
jnp
jmp
cwtl
call
mov
jnp
std
or
arpl
dec
dec
and
or
push
cltd
popa
lods
pop
cmp
pop
cmp
adc
mov
xor
jnp
push
frndint
out
test
aaa
push
pop
sarb
outsb
mov
jp
mov
jmp
add
xchg
aad
adc
xor
mov
jnp
pushf
stos
jle
and
dec
mov
pop
jnp
add
hlt
shrb
mov
sbb
jns
adc
jmp
arpl
lock
jnp
int
mov
cli
pop
or
mov
lret
test
insl
rol
xchg
mov
pop
loopne
insb
out
notl
fstpl
and
mov
imul
repz
je
cs
mov
add
push
out
shrb
scas
fwait
mov
sub
out
jnp
xor
bound
add
and
scas
fnstsw
inc
inc
insb
std
test
jnp
ret
sahf
xor
jecxz
dec
jnp
xchg
mov
push
mov
dec
mov
subb
arpl
dec
fiaddl
mov
sbb
insl
xchg
jae
mov
mov
int3
jmp
int3
jae
mov
jecxz
sbb
xadd
cwtl
jne
decl
jnp
or
push
dec
call
jnp
in
inc
mov
xor
jnp
hlt
arpl
fdivl
mov
dec
pushf
clc
lahf
mov
jnp
push
xor
popa
lods
call
mov
rolb
jnp
xor
sbb
dec
fstp
and
xor
mov
sub
lods
push
insb
dec
inc
pop
jnp
out
ds
adc
adc
cli
jp
inc
insl
fidivl
xor
je
xchg
in
jae
ljmp
lea
lock
xor
add
sbb
jnp
addl
jnp
pop
xor
pop
hlt
movsb
ss
fidivl
sbb
outsb
sahf
lock
jnp
pop
arpl
push
movsb
cmpsl
stos
cmp
cmp
hlt
pop
adc
in
sub
xchg
jnp
push
pusha
inc
jne
mov
jg
orb
xor
insl
xor
lds
adc
sub
ljmp
insl
cli
jnp
inc
and
inc
xchg
mov
push
dec
jp
cmp
test
bound
push
sarl
mov
cs
sbb
movsb
mov
jp
pusha
leave
stc
loop
in
mov
sub
xlat
out
incl
bound
int
jnp
lods
adcl
lahf
xor
jae
sarb
imul
mov
jmp
nop
jnp
popf
xlat
jns
xchg
cmpsb
jnp
in
pop
pusha
cmp
mov
pop
lods
loopne
xor
in
dec
popf
inc
dec
out
dec
outsb
bound
in
inc
mov
and
sbb
aaa
cmpl
stos
jmp
out
cmp
mov
jnp
mov
into
je
in
push
xchg
mov
mov
jnp
pop
cmpsl
or
cmp
mov
out
xchg
mov
adc
jae
out
jnp
lods
mov
mov
repnz
push
in
xor
mov
jnp
in
test
repnz
addr16
adc
into
sbb
in
adc
mov
sub
femms
cmp
mov
mov
mov
sbb
ja
nop
cmp
push
or
mov
enter
sar
imul
push
jnp
imulb
bound
sahf
jae
jbe
loope
fcomps
or
imul
fdivl
jle
add
fidivs
enter
mov
into
cltd
pushf
jnp
or
xor
jnp
inc
insb
test
cmp
daa
sub
dec
jno
mov
je
sti
jnp
mov
mov
sbb
js
out
jae
pop
jge
and
arpl
in
clc
mov
dec
ret
jo
iret
mov
push
popf
fisttpll
jmp
push
bound
sti
rcrl
in
call
jb
inc
dec
cmp
jnp
push
and
mov
addr16
jmp
test
pop
sub
add
xchg
adcb
aas
cmpsb
andl
lock
jo
loop
xchg
xor
jle
test
mov
ss
mov
shrb
repz
icebp
sub
imul
ja
stc
je
aam
mov
sti
dec
mov
fists
movb
jge
repz
xchg
rcrl
insl
dec
adc
mov
sub
mov
jnp
aaa
cmpsl
ja
adc
stos
sub
jnp
mov
fwait
cli
sahf
aad
jnp
popl
loope
push
jo
mov
mov
fcmovnu
inc
idivl
or
dec
or
ret
ja
rcrb
push
test
adc
rcr
mov
lods
rorb
push
icebp
das
popf
bound
jnp
mov
rorb
jnp
cmp
adc
andl
inc
jb
mov
cmc
jnp
cmp
aad
lods
or
jnp
pop
rol
call
ss
sahf
cld
les
int
sub
inc
sub
lea
subl
jnp
es
cmpb
mov
and
arpl
jle
jnp
mov
addr16
add
scas
jnp
int3
jmp
roll
pop
outsb
adc
in
mov
js
pop
popa
fistpl
jnp
rorl
in
cmpsb
sub
sub
xor
sarb
sti
xor
jnp
das
pushf
dec
rorb
xor
lods
enter
jae
lret
lea
pushf
imul
aaa
out
sarl
mov
test
out
icebp
jnp
or
and
and
aaa
cmp
clc
subb
aas
sahf
and
xchg
mov
cmp
clc
inc
rolb
mov
subb
into
insl
push
arpl
cmp
stos
sub
insl
call
scas
testl
stc
xor
xchg
jnp
js
es
fstl
or
or
ja
int
mov
pop
inc
in
sbb
lret
jnp
add
rorl
mov
loop
mov
pushf
mov
pop
mov
add
or
arpl
pop
jg
jb
flds
pop
lock
cli
or
cltd
jns
push
or
shrb
pop
mov
sbb
sub
pop
lcall
jnp
xor
popf
cmp
mov
js
pop
clc
mov
inc
and
jnp
mov
lock
inc
xchg
pop
xor
sahf
add
sti
jnp
jmp
ja
ficoms
aad
aaa
cmp
jnp
les
jnp
push
mov
lret
dec
ret
jnp
mov
jnp
fisttps
scas
loope
ss
adc
mov
push
add
sbb
push
cmp
jp
dec
addr16
out
divl
jge
fistl
movsl
xor
fs
push
ljmp
or
add
fwait
repnz
mov
stos
out
outsl
xor
cmp
pushf
enter
push
and
jnp
out
dec
push
fstpl
or
push
ja
push
adc
inc
cmp
cmp
ljmp
xchg
sbb
mov
jnp
lea
adc
pop
insb
push
inc
jae
in
test
sbb
call
enter
hlt
inc
jnp
fnstcw
adc
out
loop
shll
or
or
mov
lret
aas
cmp
ja
cmp
imul
push
pop
cmp
int
add
jnp
xchg
xor
sbb
sbb
jnp
lcall
or
sti
stc
push
fmuls
fwait
xchg
outsl
jl
ss
inc
pop
imulb
jge
inc
int
pop
push
mov
and
fdivr
sbbb
lods
jnp
repz
icebp
xor
cmp
test
in
mov
fmuls
mov
out
dec
or
jnp
repz
cmp
xchg
jnp
xchg
lods
mov
mov
cmp
sbb
sbb
jae
cmp
jnp
jbe
adc
pop
fcmovnb
inc
xchg
jne
add
cmp
stos
jnp
cmp
orl
sbb
xchg
xor
dec
shll
jmp
or
stos
testb
lods
insb
mov
aaa
sbb
cli
fdivl
bound
jnp
inc
sub
pushf
enter
out
hlt
out
pop
les
xlat
sub
mov
cmp
jnp
inc
int
shrl
stos
jnp
mov
xor
dec
push
mov
jb
jmp
lock
push
icebp
mov
outsb
xchg
pop
shrl
jnp
mov
pushf
adc
jmp
sub
int3
ljmp
jnp
and
jnp
or
mov
cs
mov
hlt
inc
xor
shrl
fwait
dec
adc
sti
jae
mov
jle
cmp
lret
ljmp
dec
push
sub
inc
cmp
fstpt
adc
std
stc
mov
dec
shlb
jns
je
arpl
sbb
add
icebp
jmp
pop
in
cltd
sub
in
cmp
or
push
add
jnp
pushf
xchg
test
shlb
inc
adc
daa
rcll
mov
scas
out
pop
fisubs
cli
pushf
stc
or
inc
dec
mov
sbb
mov
jge
add
mov
cmp
mov
ljmp
inc
jnp
add
enter
cltd
jnp
cmp
test
sbb
jnp
lret
mov
fwait
and
ss
dec
addl
insb
lock
loop
jnp
fstpl
pop
hlt
push
add
jns
bound
mov
mov
repz
jmp
mov
ja
ret
xor
jnp
insb
leave
add
ljmp
in
into
xlat
pop
cmpl
lock
aas
push
subb
pushf
jnp
xor
sub
push
jne
insl
repnz
imul
xor
xchg
movsl
insl
icebp
hlt
or
jnp
and
out
loopne
xlat
push
test
dec
int
mov
and
cltd
jmp
or
mov
ja
jnp
jns
jle
adc
aad
std
sbb
inc
xor
lock
sbb
mov
sub
clc
mov
call
mov
add
int
jnp
sbb
xchg
pop
mov
faddl
repz
jp
cltd
or
int3
jnp
lods
xchg
sub
sub
push
fisubl
addr16
cmpsl
or
lret
in
outsl
pop
scas
jne
mov
jle
add
cld
pushf
enter
out
andb
or
roll
cld
inc
jnp
lods
adc
mov
inc
pop
imul
je
popf
outsl
aam
test
js
insb
insl
dec
mov
add
rcrb
lods
dec
jnp
sbb
dec
dec
mov
jnp
inc
xorl
pop
stc
fbld
sub
repnz
popa
push
mov
daa
jno
or
sbb
dec
add
mov
insb
pop
lahf
int3
jnp
xchg
decl
push
stc
cmpsb
cmp
in
mov
daa
mov
fst
fisubl
mov
xor
mov
stos
push
or
lods
push
or
bound
pop
and
cmp
pop
mov
notb
mov
jnp
mov
inc
cmp
xor
pushf
inc
jnp
mov
xchg
pop
and
btsl
lahf
out
ret
and
mov
and
jnp,pt
push
adc
xor
jnp
sarl
fists
sub
popa
or
dec
add
iret
fcmovbe
jnp
out
xlat
imul
mov
dec
fdivrs
push
test
xchg
fcmovbe
cmpsb
lods
arpl
clc
rcll
stos
cmp
stc
jnp
mov
popa
mov
lods
jp
mov
adc
nop
out
or
sar
inc
jnp
lcall
lods
sub
sub
jae
lods
fwait
lock
pop
cli
ror
inc
push
pop
ja
add
jne
xor
rol
jnp
in
pop
lcall
mov
subl
jnp
push
push
idivl
cs
jo
es
cmp
push
sbb
or
mov
clc
mov
jbe
lret
mov
mov
icebp
push
add
or
or
out
outsl
leave
mov
inc
dec
mov
into
subl
jo
xor
lahf
jns
and
sbb
adc
or
in
xor
stos
lret
scas
or
cltd
cmp
xor
sbb
jnp
push
or
imul
jae
adc
bound
mov
inc
sub
adc
sbb
jb
jnp
fnstsw
sub
push
jnp
or
and
mov
fs
sub
int
lods
mov
sbb
pushf
inc
fldl
pop
loope
and
pop
dec
aad
pop
jnp,pn
mov
sub
mov
jnp
addr16
frstor
mov
cli
mov
outsb
xchg
in
adc
ljmp
xor
xchg
jb
repnz
mov
clc
ret
lahf
or
les
imul
lods
sbb
je
loop
out
mov
xchg
mov
fwait
popf
lods
adc
sbb
mov
pop
jne
fcomp
jmp
pop
xor
outsb
mov
xchg
outsl
outsb
lods
loop
test
out
out
jnp
movsb
es
and
xor
loope
in
imul
jnp
add
cltd
cmp
push
cmp
in
jnp
dec
push
js
jns
cli
repz
outsb
sub
dec
lret
xor
jb
sub
pop
loop
jnp
fs
rorb
mov
pushf
sahf
xchg
xor
xchg
or
addr16
insb
lods
lock
adc
jnp
or
add
push
push
jae
jp
jg
push
lods
sbb
jecxz
enter
sub
mov
arpl
and
sub
loope
pop
xchg
js
stos
jnp
ljmp
jnp
mov
sti
add
sub
lcall
mov
ja,pn
jnp
jbe
adc
mov
and
inc
push
or
mov
xchg
mov
cld
xorl
jb
sub
popf
aaa
inc
cmp
jnp
lods
mov
movl
stc
mov
sbb
xor
in
sub
or
pop
jnp
pop
adc
movsl
mov
bndstx
dec
adc
jne
jbe
sbb
jp
jnp
cli
pop
adc
jnp
xor
pushf
js
xchg
mov
jnp
stos
imull
imul
inc
insb
popa
push
in
pushf
sub
icebp
jne
pop
cli
jecxz
insb
mov
ret
jnp
sub
sti
arpl
or
dec
fwait
xlat
mov
mov
mov
int3
mov
into
ds
jno
lods
jg
cmp
jns
adc
mov
nop
std
sub
movsl
cwtl
add
ja
xor
pop
icebp
repz
jnp
popa
mov
inc
out
int3
mov
cld
pop
inc
sarl
jle
or
scas
push
adc
jg
insl
out
jnp,pt
jae
jle
sub
inc
or
int3
ja
jnp
popf
aad
ret
call
sarl
test
jnp
mov
cli
scas
push
mov
jnp
jne
shll
cmpsb
xchg
ja
lods
lock
imul
ret
jge
dec
gs
inc
or
popf
push
loope
sub
in
jnp
xchg
mov
adc
fdivrs
sbb
jns
mov
je
or
cmp
lahf
aam
dec
int3
mov
or
add
fs
jnp
pusha
jbe
into
popf
lods
movsl
jnp
xchg
negb
lahf
roll
fstpt
mov
jnp
ss
lret
arpl
jb
add
insl
loop
mov
jae
jecxz
mov
cmpsb
mov
xor
mov
call
fldcw
xor
jo
pop
ljmp
jne
fs
movsl
out
jp
arpl
adc
xor
cmp
jb
fnstsw
add
mov
push
sub
dec
jne
outsl
pop
shl
xlat
inc
inc
push
pusha
sbb
or
shll
clc
nop
hlt
sub
adc
call
lods
and
int
and
jge
sbb
scas
ljmp
sub
roll
or
xchg
lea
add
insb
sub
stc
imul
cmpsl
sbb
cs
jnp
xchg
enter
add
mov
fcom
cli
out
jg
shll
nop
xchg
sbb
sbb
sub
outsb
xlat
das
mov
lea
inc
in
pop
jnp
pop
mov
jg
aad
jnp
xchg
subb
jno
lret
mov
aaa
or
cld
insl
sub
jnp
sbb
fwait
rcll
jnp
sub
sub
inc
lods
push
fnsave
pop
bound
push
fcomp
ret
jnp
pushf
insl
or
cmp
pop
dec
loop
mov
jnp
adc
mov
mov
fists
or
sub
loopne
or
pop
add
xlat
jb
sub
shll
mov
fldcw
shrl
repnz
jnp
push
inc
sahf
stc
mov
daa
lods
lods
ss
cmp
popf
jge
call
std
iret
xchg
dec
fwait
jbe
cmp
mov
sub
sti
or
ror
jae
add
scas
loop
leave
test
mov
clc
aas
sub
mov
je
xchg
cmpsb
xchg
jnp
inc
in
inc
fdivl
jbe
or
out
or
insb
mov
xchg
in
out
sbb
mov
fwait
test
xchg
movsl
roll
mov
dec
dec
dec
int
pop
sub
rol
cmp
push
std
nop
mov
in
fisubrl
jp
popa
jnp
sbb
pop
pop
ud2
lock
test
roll
popf
movsl
jae
notl
mov
xor
arpl
cwtl
test
mov
je
mov
mov
ds
sbb
or
int
mov
aas
das
mov
insb
outsl
call
push
iret
jnp
push
loop
mov
pop
shlb
mov
inc
loope
push
xor
add
mov
sub
jnp
push
repnz
dec
rolb
jnp
add
pop
fcomps
xor
jmp
xor
lea
inc
dec
movsb
ficoml
outsb
mov
addr16
jge
sti
ret
clc
psrlq
lahf
cld
stos
mov
cmpsl
shrb
dec
or
mov
sub
lods
adc
stos
xchg
jae
jg
lds
cmp
xchg
rcrl
std
mov
jnp
and
fistpll
dec
jnp
cs
jb
push
or
push
loop
adc
sub
test
mov
jae
int
sti
jnp
repnz
inc
inc
neg
mov
fadd
add
lods
push
mov
out
pop
or
rcr
mov
enter
out
inc
cmp
sbb
mov
cs
mov
xor
pop
fidivs
xor
and
aam
pushf
dec
out
cmp
negl
es
inc
mov
and
jnp
sub
or
mov
js
xchg
mov
shlb
daa
out
es
enter
sub
sti
gs
outsb
jp
mov
xchg
inc
jno
aas
bound
mov
sbb
and
out
pop
jmp
cmp
xchg
jmp
and
sub
movsl
and
jnp
add
aam
sub
pushf
mov
jno
xchg
imul
stos
cli
sub
add
or
inc
jnp
fdiv
sub
xor
sbb
lods
pusha
rorb
mov
adc
or
repz
clc
jnp
gs
push
jnp
mov
push
mov
mov
xor
jecxz
dec
ret
cmp
ret
adcl
dec
mov
mov
and
popfw
cwtl
cltd
xchg
pop
jnp
and
sub
or
xor
sbb
jp
ficoms
cmp
and
in
jo
push
or
idivl
out
adc
jnp
mov
hlt
shlb
jnp
xor
xchg
cwtl
cmp
dec
pop
lods
cmc
aam
push
inc
outsl
xchg
popf
test
xchg
push
xchg
mov
lods
inc
scas
into
mov
sbb
mov
dec
shl
mov
mov
aaa
daa
mov
push
mov
addr16
xor
stos
push
into
mov
lret
insl
popa
jnp
imul
shlb
inc
jnp
stos
in
popa
fstps
jmp
xor
fdivrs
or
add
adc
gs
aaa
pop
jns
dec
push
mov
pushf
adc
cmp
xchg
lahf
ret
cmpsl
adc
pop
xor
mov
jnp
mov
pop
sub
sbb
xor
scas
stc
or
lea
iret
bound
xchg
cmp
loope
je
daa
or
sub
repz
orl
add
dec
mov
jnp
xorb
cmp
and
jmp
jne
mov
fwait
mov
mov
lcall
out
popa
adc
cltd
push
inc
arpl
mov
jnp
jae
popl
das
or
negl
xchg
mov
lods
or
aas
shrb
push
call
jae
test
fbld
mov
cmc
dec
jmp
jnp
xchg
and
jnp
call
lock
dec
mov
pop
lahf
mov
stos
jnp
cmp
es
popf
gs
push
in
cmp
dec
fstpl
push
insb
sub
xchg
xchg
cmpsb
push
jns
jb
sbb
push
rolb
or
aad
xchg
xchg
in
cmp
cld
ljmp
jmp
dec
adc
pop
repnz
scas
ja
pop
hlt
xor
fisubrs
in
sbb
sti
sahf
lret
jnp
ror
mov
xor
pop
pop
add
in
cmp
push
rcr
cmp
pusha
jne
das
jnp
pushf
pop
hlt
repz
or
pop
mov
sub
in
push
shll
mov
movsl
jnp
lock
push
pushf
mov
and
push
push
into
add
adc
add
jnp
or
daa
or
mov
xor
in
and
ret
cmp
cmp
jecxz
arpl
js
cwtl
jnp
jmp
sarl
dec
jnp
push
dec
sti
fdivl
aaa
cli
xchg
xchg
xchg
sbb
lock
jo
dec
lds
mov
jnp
or
movsb
je
jnp
xor
xor
ds
push
mov
pop
pop
sbb
pop
mov
jnp
shrl
adc
jp
pop
sub
push
jnp
fldl
xchg
out
jnp
scas
and
inc
fdiv
in
add
mov
aad
dec
jp
sub
imul
int3
lods
ret
jo
add
jnp
mov
inc
jb
or
mov
insb
cmp
imul
xor
mov
into
psubsw
jnp
popl
dec
out
cmp
mov
pop
pushf
jnp
pop
mov
aaa
jno
ret
lcall
ds
cltd
cmpsl
repz
bound
call
sbb
sti
jae
insl
xor
push
and
push
ljmp
popf
sub
mov
mov
inc
adc
cmp
jnp
popf
daa
lods
inc
inc
mov
jnp
mov
mov
aam
jge
stos
mov
repnz
stc
pop
sub
pop
jae
sbb
or
enter
movsl
call
scas
cmp
jnp
sub
jle
jnp
push
ds
pop
sahf
push
int
jnp
imul
test
daa
lea
cmpsl
mov
test
xchg
popa
inc
add
daa
pop
jnp
nop
enter
jae
jnp
rorl
or
cmc
mov
jmp
pop
cmp
outsl
and
mov
pop
xchg
dec
xor
push
pop
stos
hlt
or
xchg
xor
dec
xlat
test
loopne
jle
inc
adc
pop
xchg
push
sarl
mul
push
jae
sbb
fstp
mull
shrl
cmpsb
fildll
jnp
bound
mov
imul
addr16
ret
jnp
outsl
insb
stc
cmp
pop
arpl
push
sbb
shrb
sti
jnp
rcrl
scas
pop
add
adc
push
inc
aam
fcomi
pop
jnp
jb
aad
lock
test
iret
jo
aaa
mov
mov
repnz
jmp
ficoml
xchg
jnp
sbb
addr16
mov
inc
mov
jno
add
mov
sub
add
ss
sbb
loope
or
mov
mov
push
add
cmp
xchg
xor
outsl
addr16
fistpl
jnp
cmpsb
lret
xchg
stos
mov
mov
xchg
sub
aaa
mov
in
mov
nop
call
cmp
mov
xchg
iret
sar
mov
es
rclb
std
pop
xchg
or
dec
ds
outsl
test
jnp
sbb
sub
mov
adc
out
lods
sub
jnp
lds
jae
jle
jnp
pop
mov
mov
cmp
push
mov
movsl
mov
xor
pushf
mov
hlt
add
les
and
or
lock
pop
enter
push
or
popa
stos
mov
loope
mov
rol
and
lods
jnp
sbbb
fidivl
out
cltd
outsl
dec
xchg
or
push
ret
pop
int
pop
or
lret
outsl
aaa
xor
call
xlat
mov
push
jae
test
imul
mov
push
test
call
cmp
xor
cmp
add
mov
pop
sub
mov
inc
cld
nop
jecxz
mov
cli
inc
inc
mov
aad
push
pop
das
jg
jae
out
movsl
xor
sbb
ja
xor
sub
jmp
out
xor
and
xchg
fimull
hlt
dec
loop
fnstenv
test
jge
jnp
popa
cmp
loope
push
stos
test
xchg
xor
sub
aaa
rcll
jae
js
fstps
dec
mov
mov
iret
arpl
or
lods
adc
sbb
push
jnp
mov
call
mov
jno
daa
stc
xchg
sbb
dec
sarb
inc
repz
getsec
sbb
fwait
mov
gs
fdivr
sub
adc
sub
push
iret
cmp
adc
mov
add
dec
int3
mov
addr16
fnstcw
dec
fidivl
test
jnp
stos
pusha
not
sbb
lahf
addr16
cs
or
jnp
std
mov
cli
jnp
xor
cmc
xchg
add
in
sub
loopne
jge
add
mov
andps
and
in
popa
or
dec
stc
int3
or
lods
cltd
dec
dec
jp
mov
fidivrs
int
cmp
push
testb
push
inc
hlt
mov
xchg
jo
int
pushf
outsb
push
sarl
cmp
aad
in
xor
lea
jae
ret
mov
mov
rclb
xor
mov
sbb
push
push
mov
jnp
cs
dec
stc
enter
mov
mov
icebp
dec
mov
into
cli
pop
xchg
adcl
fs
mov
ret
push
iret
jnp
gs
in
cmpsb
mov
jnp
xchg
shl
jg
mov
divl
movsb
add
or
jnp
sbb
dec
repz
lcall
popa
repnz
push
cmp
imul
lods
jle
adc
mov
xchg
lds
pop
xchg
xor
push
iret
sbb
mov
mov
stos
push
std
and
push
fucomp
mov
pop
push
push
add
and
out
mov
sbb
outsl
sub
fidivl
jae
push
sbb
enter
sar
sbb
xchg
mov
call
mov
insl
push
std
into
pop
xchg
ficompl
jecxz
les
rol
jnp
int
divb
jl
jnp
push
push
mov
shll
aam
pushf
stc
pop
in
sti
fimull
dec
jae
mov
push
mov
movsb
mov
lds
push
xchg
sbb
pop
outsb
sub
outsl
push
aad
jnp
hlt
push
cmp
data16
fldl
imul
sbb
pop
jl
xor
and
push
or
mov
fucom
movsb
ficoml
xor
push
lahf
jmp
mov
jnp
adc
insb
add
sub
and
loope
push
in
inc
mov
ss
xchg
dec
push
mov
imul
inc
jnp
popf
fldcw
jnp
push
xor
dec
jnp
or
mov
gs
mov
ja
movsl
in
jmp
mov
jae
out
mov
jnp
mov
inc
pavgb
pop
js
xor
jmp
cmp
into
int
je
mov
add
test
pop
lods
loop
lods
enter
fimull
sbb
xor
mov
sti
lds
rcl
scas
das
mov
pop
jnp
mov
cli
jnp
or
mov
mov
pushf
dec
insl
jnp
bound
stc
cmp
mov
out
fildl
push
fidivs
jno
mov
stc
jo
xchg
mov
push
cli
ja
sub
sbb
aas
cmpsb
mov
ficomps
xor
pushf
in
repnz
mov
jns
fmul
jne
cmpsl
sbb
adc
jnp
ret
pop
push
imul
inc
out
or
sub
or
push
cmp
pop
jnp
xchg
hlt
xor
insl
jnp
shrb
jnp
int
pop
adc
pushf
aas
jo
in
adc
popa
push
in
jbe
or
cmp
xor
jecxz
scas
jo
jns
popf
enter
bound
pop
test
add
or
mov
insl
jae
and
jnp
out
and
adc
in
call
fwait
rorl
or
sti
mov
jnp
push
xchg
jnp,pt
mov
xor
jnp
mov
sbb
jae
adc
cmp
pushf
mov
push
jnp
push
xlat
int
xchg
mov
jnp
jmp
fdivrp
mov
bnd
mov
push
pop
mov
pop
lods
stos
jge
das
scas
jnp
mov
int
jnp
jmp
mov
push
movsb
mov
jg
mov
insb
jg
xchg
inc
dec
sub
mov
popl
adc
scas
enter
mov
cmp
fmuls
pushf
fcomi
mov
jae
mov
imul
insl
jnp
dec
mov
adc
xor
mov
jnp
fmuls
enter
pop
dec
out
add
inc
jl
jnp
pushf
xor
cld
mov
dec
jnp
xchg
mov
outsb
ss
jnp
pop
sti
pusha
ljmp
mov
jnp
cwtl
push
lods
cmp
rcr
xor
jnp
sbb
adc
mulb
mov
jle
lods
mov
dec
stc
sarl
cmp
fsubs
add
pop
sub
repnz
sbb
cltd
cmpsb
scas
nop
jnp
mov
fiaddl
jnp
dec
call
jnp
push
test
cmc
jnp
int3
cld
pushf
stos
lods
inc
or
sbb
push
aad
and
and
jns
jnp
xor
dec
jnp
mov
pop
repz
mov
pop
je
lods
ds
dec
icebp
sub
jae
popa
jb
jnp
hlt
cli
pop
mov
lods
call
mov
jnp
mov
or
fiadds
push
in
stos
jnp
push
shl
mov
pop
jnp
cmp
add
mov
jae
cmp
pushf
cmc
dec
xor
popa
stos
inc
repz
clc
lock
xchg
jb
dec
xchg
mov
je
leave
push
shlb
repnz
loope
jnp
negb
insb
dec
or
jae
push
jae
or
push
pop
lods
mov
fistpl
insl
sub
subb
push
xor
int
icebp
pop
imul
sub
sub
pop
shlb
enter
mov
push
add
xor
or
imul
adc
mov
xchg
mov
jnp
popf
lods
jae
mov
xchg
jecxz
lahf
test
fwait
jnp
xor
dec
lods
lock
pop
push
icebp
ljmp
out
or
test
add
jnp
stos
pop
xchg
mov
jne
and
jnp
testb
adc
mov
fwait
xchg
fadd
mov
mov
mov
ljmp
lea
aam
cmp
adc
inc
popf
mov
int3
call
jl
les
inc
movsb
jnp
xchg
fimull
mov
fs
dec
outsb
xchg
mov
sub
loopne
xor
cmpl
pop
push
mov
imul
call
dec
jnp
inc
incl
jnp
xchg
jmp
sub
hlt
test
int3
adc
cmpsb
add
jns
mov
add
cmp
adc
sbbb
jnp
push
cli
xor
sub
stos
xor
fwait
out
inc
aad
out
add
dec
dec
mov
clc
jnp
lods
adc
mov
jae
sbb
mov
jle
jno
xchg
ret
jp
push
jns
call
and
add
jnp
iret
lret
sbb
outsl
xchg
mov
mov
sub
dec
out
pop
jmp
push
jnp
mov
or
bnd
push
in
dec
into
jnp
cmpb
cmp
jl
cs
bound
fsubr
icebp
cmp
enter
push
repnz
lea
jnp
rolb
lret
jnp
cmp
lods
mov
jbe
cmp
jae
jge
lret
or
mov
mov
xor
fdivr
push
out
rcl
jb
aaa
popa
movsl
int3
mov
or
jnp
fstps
cmp
out
jnp
mov
xor
sbb
or
insl
outsb
pushf
ffree
jnp
adc
shr
jnp
ja
ds
popf
loopne
jnp
and
stc
cmp
push
mov
lods
fisubrs
and
mov
dec
and
in
add
push
nop
fs
xor
fildl
dec
rolb
in
jg
jns,pn
sub
lods
mov
jnp
push
clc
pop
or
or
popf
sub
dec
jmp
repz
jne
jnp
inc
iret
fwait
in
lods
shl
cli
pop
add
adc
dec
test
jb
mov
push
jno
xchg
and
dec
jg
add
imul
push
cmp
shlb
jns
popa
jnp
int3
push
or
adcb
ffreep
cld
ja
add
jnp
pop
inc
xor
jmp
and
push
iret
repnz
pop
repz
mov
cli
push
jnp
push
stos
xor
mov
jnp
out
push
add
jnp
xchg
call
adc
sbb
jb
inc
icebp
pop
mov
das
dec
scas
jnp
mov
cmp
aad
jnp
dec
fbld
stos
fimull
orl
jnp
sahf
mov
sbb
inc
int3
push
push
pushf
fbld
sahf
imul
mov
jge
sub
jmp
into
pop
lahf
or
mov
mov
scas
dec
movsl
lods
or
push
leave
das
push
gs
push
mov
out
cmp
dec
jnp
stos
inc
xchg
rep
stos
mov
and
pop
jne
push
clc
dec
sarl
xchg
jne
test
ss
out
loop
jnp
test
sub
pushf
in
hlt
dec
jnp
fiaddl
jl
mov
dec
mov
mov
cmovs
push
mov
cmp
add
cs
or
sbb
scas
loope
pop
and
pushf
ja
cmp
fidivrs
jmp
div
sarl
mov
inc
and
fiaddl
xor
or
lret
xor
dec
jnp
test
dec
imul
lods
mov
hlt
nop
mov
in
pop
cmp
jne
xor
out
ja
cmp
shrl
incb
inc
popf
sub
mov
jnp
aas
lods
xor
dec
pop
decb
mov
jnp
cmp
popa
push
idivl
jge
jno
xor
popf
lods
mov
fmul
jnp
loop
ss
ficoms
imull
out
int
mov
cs
loopne
sbb
insb
fwait
mov
ja
pop
mov
xor
stos
jns
das
adcb
fiaddl
loopne
out
inc
push
jnp
mov
test
ss
xor
fistpll
in
pushf
sub
addr16
imul
jp
bound
jnp
pusha
push
cli
dec
push
outsb
jae
ja
loope
mov
clc
and
cli
add
pop
jnp
mov
jns
cmp
lahf
das
jnp
cmp
jnp
cmp
insb
test
adc
jnp
jp
sub
insl
cmp
add
jnp
jo
jns
xchg
push
jnp
xchg
fbstp
xor
inc
mov
mov
data16
jnp
mov
mov
sbb
bound
aad
or
dec
mov
movsl
fistl
sbb
mov
jnp
ret
dec
in
sarb
outsb
imul
pushf
pushl
mov
in
mov
pop
sub
fsubl
pop
cmpsl
sub
cmc
addr16
jno
jae
imull
enter
or
fildl
mov
mov
lock
cli
mov
push
or
inc
insl
dec
jae
jp
pop
mov
sarb
inc
arpl
popa
test
out
jmp
clc
adc
roll
xorb
cmpsl
xchg
xchg
jnp
pop
sbb
mov
sarl
jae
push
gs
cmp
bound
sbb
dec
mov
lods
stc
jl
std
outsb
inc
dec
cwtl
mov
xchg
popa
out
inc
mov
int3
aam
cmp
or
pop
jnp
adc
cmp
shl
pushf
jnp
pop
loopne
sti
shr
stc
jnp
jb
cmc
xchg
jg
xchg
or
pushf
and
lods
imul
fsubr
out
push
js
mov
jg
sahf
push
jl
push
pusha
in
outsl
mov
movsl
mov
lods
cwtl
div
mov
insb
fdivrp
push
mov
jnp
je
xchg
ss
sti
jnp
loope
scas
bnd
fsubl
lea
lret
aad
jns
lahf
jnp
push
pushf
test
sub
jnp
inc
fnstcw
mov
adc
sbb
cmp
loop
mov
cmpsl
lock
lds
pop
sub
add
cli
jae
fists
dec
imul
inc
adc
lods
lods
jecxz
jnp
jbe
out
pop
loop
outsl
mov
adc
pushf
mov
push
jmp
add
sarb
jecxz
sbb
rcrl
negl
xchg
jnp
fucomi
dec
sub
int3
jnp
inc
in
icebp
pop
mov
aam
shrl
fwait
push
mov
jnp
xor
int3
mov
inc
mov
push
mull
cmp
sbb
test
lret
addr16
jnp
jge
cld
lret
add
ds
sarb
mov
repz
lret
das
loope,pt
jnp
mov
push
mov
in
ljmp
dec
addr16
and
cmp
and
sbb
out
jnp
sbb
decb
xorb
cmc
push
lods
mov
and
hlt
mov
and
push
xor
pushf
mov
sar
cmc
insl
into
rorb
dec
or
xor
shrl
jnp
sbb
mov
mov
push
insl
lods
jnp
add
scas
insl
mov
mov
ljmp
inc
sahf
push
add
adc
fcmovnb
aaa
std
add
jnp
cmpsb
inc
nop
mov
dec
imul
dec
insl
sti
pop
inc
sub
loope
xorl
mov
jo
ret
das
jnp
push
loopne
sbb
fcomi
arpl
stos
jae
or
divl
in
push
ds
jnp
cmc
push
adc
sbb
mov
inc
ss
jnp
mov
idivb
out
push
mov
pop
sarl
dec
or
test
dec
call
cli
outsl
outsb
push
sti
lods
iret
jnp
fld
jmp
or
int
arpl
xor
ja
cs
or
jnp
ret
jmp
xchg
jnp
mov
add
cmp
ljmp
scas
mov
sub
add
ret
mov
into
subl
jnp
gs
lret
imul
les
push
out
jnp
lds
scas
inc
mov
jnp
mov
ljmp
stos
test
fs
jns
mov
jnp
push
dec
mov
jnp
je
xor
sbb
jmp
shr
or
jnp
mov
and
popf
je
jnp
add
add
daa
insl
repnz
rclb
jne
ss
xchg
jnp
mov
aaa
sbb
fwait
mov
jnp
xchg
xor
clc
out
or
pop
pop
mov
sub
pop
js
xor
add
loope
rcll
not
jnp
das
push
adcl
je
popf
jnp
inc
outsl
cmp
push
xor
dec
cltd
outsl
in
icebp
mov
sbb
sbb
sub
inc
stos
and
mov
sbb
inc
add
cmpsl
insl
imul
lods
add
mov
pop
adc
add
push
inc
jb
jns
add
mov
push
imul
scas
cli
mov
push
or
mov
jnp
jmp
push
mov
repz
clc
mov
outsb
mov
and
addr16
mov
or
jmp
pop
push
inc
jae
aaa
jae
and
lcall
negb
rcl
sbb
cmp
iret
push
scas
jnp
int3
or
jnp
dec
push
cmpb
ficompl
jnp
mov
jne
jnp
mov
cmp
dec
aaa
jnp
rolb
push
xchg
test
subl
adc
fidivl
jnp
dec
sbb
and
mov
out
test
add
lea
in
jnp
dec
add
shll
or
jnp
inc
jno
push
iret
subl
stos
lock
xor
fildll
mov
movsb
pop
inc
push
add
nop
cmp
stc
lret
int
jbe
stos
mov
ja
or
stc
pushf
imul
cmp
sub
rorb
jge
xchg
rolb
pushf
aaa
inc
sbb
jnp
mov
xchg
adc
jnp
daa
sub
jnp
mov
inc
jecxz
cmp
popf
mov
enter
and
dec
std
sbb
sub
iret
out
jnp
xchg
jmp
xor
mov
orl
fsts
je
leave
jae
adc
in
xchg
jno
lea
dec
dec
popf
pop
xchg
sbb
jns
js
mov
mov
gs
xchg
pop
pop
jnp
insb
mov
lea
cmp
leave
or
pop
and
fstpt
mov
out
push
rcll
cmc
ja
or
sub
jnp
std
push
repnz
pushf
mov
mov
push
out
dec
test
xor
lods
imulb
cmp
jnp
ret
int
movsb
xor
insb
sbb
mov
out
negb
pusha
out
sbb
lahf
nop
lret
lods
dec
loopne
ret
jne
popa
and
jnp
outsb
imul
xchg
dec
inc
jnp
inc
mov
sbb
testb
mov
jnp
out
lret
push
ss
je
jnp
add
out
mov
imul
adc
daa
xorb
xor
aaa
pushf
por
cmp
lds
sub
push
dec
push
popf
pushf
jnp
aas
mov
out
push
cmpl
xchg
ds
add
jnp
jle
cmp
jnp
mov
mov
cmp
popf
push
clc
or
or
dec
popa
xchg
int3
xchg
jnp
ficoml
nop
xchg
cs
lods
mov
repnz
out
insl
mov
pop
adc
add
pop
push
sahf
comiss
roll
jnp
mov
out
lds
jge
mov
adc
dec
popa
xlat
fwait
mov
cltd
sbb
rcll
mov
jnp
decb
xor
adcb
cmpsb
iret
cltd
mov
adcl
jb
ja
pop
cmp
insl
jmp
stc
xchg
mov
pop
pop
addr16
jnp
dec
mov
push
jnp
into
sbb
pop
imul
fs
lret
sbb
popf
adc
fstpl
pop
jnp
loopne
lea
push
into
lods
mov
sbb
out
pop
pop
inc
jnp
loopne
rorb
dec
or
sbb
mov
pop
mov
jl
mov
cld
push
or
mov
in
jno
inc
sub
or
push
lods
push
call
inc
in
std
mov
adc
inc
push
xchg
mov
lock
stos
jns
imul
fs
cmp
mov
in
pop
roll
mov
cmp
inc
jnp
xchg
lods
dec
sbb
ds
lock
mov
insb
call
xlat
jnp
fcoms
imul
cmp
sahf
jo
jnp
imul
out
sbb
mov
mov
outsl
lea
mov
mov
mov
push
rcrl
xchg
sbb
dec
jp
sub
cmp
mov
and
xchg
aam
pop
push
cmp
adc
sub
add
add
xor
jle
push
pop
jae
sbb
xorl
or
loop
inc
inc
push
mov
lods
aaa
sub
ja
jl
and
xchg
jnp
jge
xor
push
and
lahf
lds
aaa
jnp
adc
jb
push
push
jnp
pushf
nop
sbb
inc
mov
mul
xchg
pusha
stos
push
jnp
hlt
je
mov
loopne
ja
adc
js
sarb
dec
je
ja
adc
arpl
jbe
inc
xchg
aad
cmp
or
jae
pusha
lea
or
daa
fwait
pop
adc
xchg
jmp
fisttpl
jnp
jo
jb
sub
xchg
mov
sbb
cli
fwait
test
sarb
lcall
sub
mov
pop
jp
pushf
or
push
jmp
mov
mov
cmpsb
jl
push
cmpb
test
imul
pop
push
out
lcall
pusha
pushf
adc
mov
or
jnp
jns
xor
fimuls
or
lods
mov
add
push
dec
xchg
pop
sub
leave
jge
aaa
enter
frstor
sbb
and
mov
adc
call
jae
xchg
mov
jbe
jmp
outsb
ds
xlat
or
js
pushf
imul
pusha
jnp
mov
popa
sbb
jnp
jecxz
mov
jge
inc
dec
jb
ret
lret
inc
mov
xchg
stc
fstl
jnp
dec
mov
sbb
add
iret
mov
jno
mov
js
xchg
dec
call
cmp
cld
dec
xlat
sub
pop
sbb
jnp
sbbl
or
push
pop
and
repz
or
mov
push
jnp
pushf
sub
dec
das
rcrl
divl
sub
xchg
lods
cs
out
jnp
cwtl
nop
dec
loopne
in
imul
ret
xchg
lods
and
jnp
lea
mov
in
push
mov
loope
imul
inc
sbb
sub
mov
pushf
adc
mov
jnp
pop
and
icebp
cmpsb
in
aad
jnp
ljmp
jnp
or
xchg
jge
mov
pop
dec
jno
mov
enter
jo
or
jnp
sahf
pop
xor
fcomip
cmp
out
int
xchg
pop
ss
dec
sub
cli
clc
cmp
insb
jnp
cwtl
push
mov
insl
mov
insb
xor
adc
mov
xlat
cli
testl
mov
cwtl
jb
jnp
cli
xchg
addb
jb
aam
jnp
or
pop
test
out
jnp
leave
mov
mov
xor
cli
inc
call
pop
or
jle
nop
jae
ficoml
mov
jnp
cmp
int3
movsb
xor
sub
rorb
mov
sbb
mov
sub
in
div
dec
jnp
or
and
stos
dec
mov
ss
lods
cs
ror
jno
popa
test
stc
mov
in
xchg
jnp
jno
popa
sub
cmc
inc
test
int
jnp
jp
push
mov
jnp
ficomps
mov
jnp
jb
adc
and
mov
outsb
in
js
jmp
xchg
push
jnp
fcom
icebp
lret
sbb
leave
andl
cmp
and
xchg
jnp
jle
dec
popf
int
idivb
test
add
std
mov
or
push
lock
jmp
dec
stmxcsr
jnp
pop
in
jmp
mov
fmulp
jge
jne
loopne
xlat
add
pop
push
mov
sbb
jae
fbstp
sub
lret
inc
or
jnp
pop
hlt
jbe
jne
fcmovb
mov
dec
jns
pop
ljmp
call
mov
sub
ret
sub
mov
lods
jnp
or
or
dec
xor
jnp
sbb
fwait
lods
or
mov
cld
cmp
jnp
loope
or
or
call
sbb
lods
sbb
jns
jbe
jnp
out
andl
movsb
aas
xor
mulb
xchg
push
pusha
jnp
and
mov
xchg
or
mov
and
lea
movsl
jnp
sahf
pushf
inc
scas
jnp
add
imul
in
arpl
scas
lods
add
xchg
pushf
xor
or
jnp
fnstenv
sbb
mov
mov
jmp
iret
es
pop
pop
filds
push
xlat
adc
dec
ds
jnp
in
sbb
aad
std
shrl
jns
fistps
sbbl
jg
fsubl
stc
ljmp
dec
lods
jl
imul
lea
int3
loop
divl
mov
mov
sbb
cmp
fstpt
push
push
mov
jnp
sub
pushf
mov
dec
jnp
outsl
or
clc
nop
push
xor
inc
movsl
sub
in
mov
sub
cld
pusha
aam
outsl
shll
in
jne
sub
dec
jnp
test
xor
sub
sbb
and
in
mov
aaa
stc
cli
sbb
pusha
add
or
xchg
jnp
cmp
jnp
out
pop
mov
sbb
lods
inc
xchg
inc
mov
sbb
das
xor
jnp
adc
pop
ja
pusha
jnp
xor
sbb
popa
mov
mov
jp
jnp
repnz
add
sahf
stos
jmp
xor
jge
aad
jg
or
xchg
rolb
imull
jnp
jb
aam
dec
jnp
fisttpll
jne
pop
mov
jnp
mov
sbb
insb
mov
ja
int
mov
out
rcr
into
jecxz
lea
pop
push
or
lahf
lock
add
push
inc
lods
xor
or
cmc
adcb
lret
mov
jnp
std
mov
rorl
int3
fldt
mov
repnz
push
jnp
arpl
ja
cli
aas
out
xor
add
pop
cmp
mov
sbb
push
lea
or
sti
adc
cli
scas
inc
imulb
shrb
sbb
xchg
movsb
lods
pop
test
jnp
std
je
adc
dec
pop
inc
pop
aad
jecxz
imul
lods
xchg
cmp
mov
divl
mov
push
sub
or
fidivl
or
ja
xor
push
andb
xchg
xor
mov
pushf
or
dec
inc
lret
mov
rcrl
in
fldcw
inc
jae
ja
inc
jnp
sbb
mov
cmc
push
daa
movsb
mov
lds
sub
pushf
loop
inc
mov
mov
jno
shrb
sbb
pop
and
lret
jnp
inc
sbb
or
notl
jnp
push
push
pop
mov
outsb
jne
idivb
push
int3
sub
or
mov
jne
ds
int
push
push
ret
cmp
jbe
lahf
dec
cmp
add
push
mov
mov
cmp
addr16
add
ss
clc
or
test
mov
pop
pushf
and
jnp
add
jb
aaa
adc
mov
xchg
mov
movsb
sbbl
dec
sub
mov
in
push
mov
rcrb
sbb
pop
mov
mov
popa
jnp
mov
pusha
cmp
mov
pop
int3
jnp
xchg
lcall
sbb
inc
push
jnp
inc
mov
popf
mov
popa
jnp
les
adc
cmp
out
push
mov
mov
mov
pop
sub
mov
decb
in
add
adc
or
repnz
cmp
cmpl
jae
imul
xor
cmpl
inc
sbb
jnp
inc
or
pop
lock
mov
es
add
push
arpl
mov
xorb
mov
ja
jnp
negb
in
stos
lods
push
das
sbb
shlb
lcall
adc
pop
cltd
mulb
jnp
push
sbb
addl
push
mov
imul
mov
std
in
into
out
outsb
lods
imul
jne
stos
mov
lds
sbb
dec
lods
iret
push
mov
sub
sahf
leave
jnp
push
nop
sbbb
test
sbb
bound
mov
addb
pop
mov
jnp
push
sti
xchg
ret
inc
add
jnp
lods
ss
ds
inc
pop
jnp
mov
cmp
in
sub
cmp
pop
pop
mov
jg
ja
jae
psadbw
int3
add
shl
fidivrl
sub
mov
cmpsl
adc
adc
icebp
loopne
je
out
or
and
hlt
inc
in
push
mov
push
sub
outsl
imul
inc
insl
fsubrs
dec
and
loopne
ss
sbb
pop
xchg
push
popa
inc
sbb
jne
sub
jnp
sub
jnp
push
fstps
addr16
or
fists
mov
lock
mov
and
add
mov
push
aad
lods
movsl
insl
pop
pop
xchg
insl
lds
icebp
jnp
push
sub
dec
xor
mov
xchg
and
in
lods
or
div
daa
clc
dec
jnp
ds
jno
std
jnp
lret
lea
xchg
xor
cmp
inc
pusha
or
sarb
cmp
test
outsb
jnp
aam
stos
push
stos
lock
pop
loopne
test
data16
ja
or
in
dec
mov
stc
mov
cmpsl
jae
insl
lock
mov
or
jnp
sub
xchg
xchg
fisubl
scas
ret
insl
add
mov
or
aas
int3
xor
testl
sub
jmp
pop
pop
jnp
mov
sahf
mov
popa
cmpsb
sbb
pop
jnp
pop
pushf
adc
jle
and
xlat
dec
cld
out
fildll
or
lods
jno
enter
jnp
sbb
inc
mov
orl
mov
mov
jnp
sub
and
movsb
imul
subb
jnp
popa
pop
cwtl
mov
or
cltd
int3
lods
adc
mov
or
mov
mov
lahf
jnp
push
fnsave
jge
push
add
call
pusha
cmp
movsb
sub
jnp
mov
iret
or
lret
repz
cli
jnp
je
popf
ljmp
out
mov
ret
add
pop
xor
xchg
xor
add
jnp
add
pushf
mov
bound
jnp
xorb
and
jnp
shl
jl
push
stos
call
pop
sbb
dec
std
out
lahf
push
sarl
stc
mov
cmp
add
jnp
addr16
xchg
into
jmp
push
outsb
roll
sub
sti
inc
cmp
add
or
xor
cmp
ljmp
push
adc
fsubs
jbe
or
or
pushf
call
sub
outsl
xchg
jp
xchg
xchg
adc
pop
dec
sbb
stos
lds
movl
cmp
in
movsb
outsl
xor
mov
int3
pop
jns
aas
imul
subb
pop
mov
fdivrl
inc
or
mov
sbb
mov
cmp
add
xchg
stos
mov
add
imul
jnp
xlat
inc
xchg
cs
sbb
loopne
jnp
shrb
jnp
mov
inc
xchg
push
test
icebp
push
push
mov
or
xchg
jae
jmp
imul
data16
loope
jl
js
imull
fstpl
lods
and
jnp
movsl
std
dec
xor
or
jecxz
jnp
jne
xor
mov
sbb
jge
outsb
pushf
out
xor
mov
adc
dec
cmovo
call
and
pop
iret
dec
mov
jae
dec
inc
jge
inc
mov
jnp
fisubl
in
dec
mov
pushw
fildl
sbb
clc
sbb
jnp
add
jmp
shrl
sbb
mov
outsl
or
iret
pop
shll
adc
int
es
inc
dec
call
in
mov
add
jge
jno
popf
js
mov
jo
cmp
rcr
or
sbb
and
jge
jnp
insb
inc
mov
loope
dec
mov
push
movsl
jnp
call
jae
jnp
push
add
sub
popf
inc
jb
testl
hlt
clc
jge
cmp
dec
rolb
arpl
xor
dec
or
and
mov
insl
sbb
lock
fwait
pop
jnp
out
repnz
cmp
lahf
jmp
shll
add
outsb
sub
clc
or
adc
mov
pop
divb
mov
jns
push
mov
sbb
dec
in
out
xchg
cmp
call
sub
gs
mov
inc
sub
mov
dec
hlt
fwait
das
fcomps
js
repnz
dec
inc
ljmp
mov
sub
test
mov
sahf
imul
jp
shlb
ret
in
int
inc
xor
jnp
mov
cmp
mov
sbb
stos
mov
jnp
xchg
add
je
lahf
lods
sti
sbb
push
dec
cmpsl
xor
add
lods
les
adc
pop
fimuls
pop
or
cmc
insb
inc
push
insl
divb
or
and
outsl
xchg
sbb
xchg
into
or
and
test
cmpsl
sti
lods
mov
mov
push
sbb
fdivrs
imul
push
ret
jmp
mov
xor
or
dec
inc
jecxz
jnp
iret
add
xchg
mov
push
mov
sarl
xchg
lahf
xlat
inc
xchg
jnp
pop
pushf
lea
and
lret
cmp
xchg
out
scas
xorb
inc
stc
loopne
arpl
ja
fiaddl
add
and
addr16
jae
dec
cmp
push
inc
sbb
jnp
pop
iret
pop
pop
mov
or
sub
jae
xor
sub
pop
test
ret
jno
mov
pushf
push
jnp
movsb
sbb
jnp
and
movl
or
inc
js
stos
push
loop
jnp
mov
sarb
outsl
jb
xlat
xchg
imul
push
jle
and
pushf
std
jno
outsb
cmpsb
mov
popa
cmpsl
xor
fistps
adc
jmp
imull
jnp
adc
push
lods
sub
sbb
jo
pop
rorb
pop
into
ja
int
jge
inc
xchg
sbb
add
js
orb
cmpsb
insb
dec
inc
xchg
popa
xchg
dec
xchg
cmp
xchg
pop
mov
jnp
lret
call
sbb
or
mov
jmp
dec
fistpl
xor
cmp
popf
scas
jnp
pop
fwait
push
cmp
jb
mov
mov
jnp
les
out
jnp
push
push
jno
cmp
or
jae
adc
out
popf
jnp
push
xchg
mov
xchg
cltd
adc
insl
loope
cli
pop
out
fidivrs
dec
lods
mov
and
dec
jmp
sbb
stos
scas
jne
mov
jnp
pop
add
inc
mov
out
ljmp
mov
dec
sub
inc
and
mov
out
insl
add
inc
andb
cltd
ja
addr16
or
int
imul
xchg
inc
js
stos
jnp
sbb
jnp
fsubrs
xlat
mov
jnp
shrb
cmp
pop
mov
lods
inc
add
leave
dec
jl
arpl
sub
das
push
pop
jnp
stc
push
std
rclb
cmc
jnp
cmp
xchg
repz
lods
inc
call
jnp
xchg
dec
mov
lret
mov
pop
xor
jnp
cmp
push
mov
int
mov
in
cli
stc
mov
sbb
cmpsb
cmp
insl
fsubp
mov
mov
push
xor
call
xchg
pushf
jnp
mulb
std
or
cmp
xor
dec
fisttpll
insl
lret
outsb
icebp
push
mov
lahf
jnp
pushf
divb
sbb
ss
sub
jnp
xchg
jp
out
call
loop
jnp
xor
imulb
mov
xor
jnp
xchg
and
sti
rcl
pop
or
pop
adc
lea
mov
stos
icebp
add
or
jnp
mov
sahf
mov
sarl
or
dec
outsb
jnp
testl
jnp
rcrl
test
mov
insl
add
icebp
loop
push
repz
loopne
jnp
or
fsubr
jne
imul
cmc
cwtl
push
sub
in
adc
push
xchg
mov
lret
insl
es
ret
shrl
xorl
sub
aad
arpl
outsl
add
into
jmp
cli
rol
rorb
push
shll
jnp
sub
testl
bound
mov
inc
gs
aam
sbb
imul
add
and
mov
jns
loop
jbe
mov
scas
sarl
xchg
aas
fildl
sbb
mov
sub
outsl
sub
mov
jne
in
dec
mov
out
je
and
adc
xorb
sbb
xchg
fsub
mov
add
pop
add
cld
test
into
addr16
ja
mov
leave
pop
int3
jle
andb
fistpll
pop
mov
adc
pusha
jnp
mov
add
or
push
in
jnp
mov
inc
pop
insb
jb
jnp
fwait
xlat
cli
mov
movsl
aaa
jnp
or
rclb
jnp
and
shlb
lock
out
add
jnp
into
aas
lcall
cmp
mov
out
mov
scas
jge
fdivrs
lcall
in
add
imul
sub
xlat
daa
dec
jp
dec
add
lock
xchg
pop
jnp
pop
push
jo
and
jnp
aas
cmp
dec
xor
jnp
ds
jl
aaa
add
mov
cmp
pop
inc
jnp
xor
test
test
gs
or
and
jmp
pop
and
jae
mov
cmp
jnp
pop
xorb
jbe
popf
mov
and
addl
mov
data16
out
mov
push
insb
mov
jnp
das
pop
push
divb
adc
add
or
cltd
jge
jnp
fcmovnb
cmp
sbb
xor
add
stos
idivb
or
jnp
gs
mov
rcrl
pop
mov
lret
adc
or
xchg
cltd
out
sub
lea
adc
cmp
jge
mov
jnp
add
repz
xchg
mov
jnp
in
stc
jge
mov
jnp
movsb
xor
and
cmp
in
or
ret
shl
callw
jnp
and
xor
fcoms
lret
test
mov
jnp
sbb
pop
xor
or
je
pop
lods
in
bound
pop
cwtl
jnp
and
sbb
divl
in
jne
and
mov
lret
add
loope
popa
mov
pop
in
xchg
out
in
pop
out
sbb
jnp
addr16
mov
jnp
dec
mov
cmp
mov
xor
jnp
out
mov
imul
lcall
mov
loop
or
js
push
mov
ficompl
mov
jnp
arpl
and
clc
cwtl
sarl
inc
filds
out
jae
xchg
xor
mov
stos
lret
pop
ss
cmp
jnp
xor
in
xchg
scas
arpl
jmp
jle
fidivrs
sahf
xchg
pop
sti
pushf
adc
enter
cmp
fwait
call
jnp
outsb
dec
sub
fcmove
jnp
lods
jbe
sub
loope
popa
ret
dec
cmpsb
mov
or
jae
outsl
mov
test
or
mov
imul
jno
out
adc
cmpsl
dec
jns
jnp
ljmp
js
sar
jae
xchg
jnp
inc
in
scas
pop
xor
daa
lods
sbb
in
stos
idivl
add
es
jnp
stc
sbb
jecxz
jns
jnp
loop
jno
aaa
shll
mov
sbbb
orl
inc
adc
sbb
idiv
mov
fwait
popf
frstor
jnp,pn
inc
mov
iret
or
adc
pop
jae
dec
mov
ss
lods
nop
jnp
loope
fimuls
lahf
ret
mov
cli
mov
sbb
pop
pop
sti
xor
pop
out
ljmp
and
jno
sbbl
jg
insb
cmp
sbb
insl
mov
inc
add
mov
jnp
pushf
jg
jo
jb
jnp
or
fnstsw
inc
jnp
insb
sub
cmc
jnp
ljmp
jnp
ja
sbb
lret
push
in
ror
cmp
xor
inc
bound
jnp
pop
mov
sarb
lea
jae
popa
mov
cmpsb
add
aaa
pushf
stc
adc
jnp
jb
mov
jnp
and
int
out
cmp
imul
dec
outsl
mov
imul
pop
outsl
lods
stos
imul
inc
cmp
xchg
sub
sahf
movb
or
ja
dec
test
mov
cmp
mov
iret
xor
inc
sbb
mov
jmp
loop
lods
cmc
jnp
inc
scas
and
xlat
or
jae
in
imul
push
xor
cs
out
lods
insl
jnp
call
mov
cmp
and
jp
jnp
sbb
arpl
add
mov
outsl
xlat
dec
xchg
mov
sub
aaa
dec
mov
lods
fidivrl
and
mov
xchg
popa
cmp
shlb
fwait
call
xchg
cmp
adc
data16
repz
cli
jecxz
mov
jnp
and
inc
and
lods
xlat
jnp
dec
sub
lea
push
cltd
fwait
mov
daa
jnp
ds
push
mov
and
push
jae
cmp
bound
out
sbb
in
adc
fmul
fisubs
mov
into
mov
sahf
in
push
push
call
mov
stc
pop
mov
es
lods
sbb
sbb
bound
cmpsl
inc
jnp
iret
jbe
jne
scas
cmpl
pop
adc
mov
std
push
stos
cmp
scas
jnp
sbb
mov
inc
fwait
mov
sub
inc
repnz
nop
sub
fcoms
and
xchg
out
push
test
rorl
cmp
jae
lcall
pusha
xor
mov
sbb
add
xor
mov
xchg
adc
pop
aaa
add
pop
jl
push
mov
pop
popa
jne
push
imul
and
jnp
lods
push
mov
jnp
xor
lret
scas
js
inc
xor
in
lea
jnp
cmpsl
std
dec
fwait
lret
dec
repz
push
jne
jnp
push
pop
lods
rclb
stos
jnp
sbb
scas
daa
jno
pop
jnp
pushf
adc
jnp
inc
call
jle
insb
jge
xchg
dec
mov
jnp
inc
jns,pn
out
fwait
jmp
mov
jae
mov
nop
xchg
jnp
cmp
inc
dec
jo
mov
insb
adc
and
insl
xlat
pop
les
pop
ret
ficomps
cmp
sub
hlt
jecxz
inc
adc
or
adc
sbb
inc
sbb
outsb
jnp
xchg
stos
into
and
mov
push
sbb
jae
dec
js
cmp
inc
adc
fsubrl
and
loop
sbb
je
jmp
jnp
fabs
mov
aam
enter
lret
pushf
sahf
mov
jae
and
jne
jnp
or
inc
jnp
mov
push
or
out
sbb
xchg
cmp
arpl
sbb
jbe
inc
dec
outsb
jnp
stos
test
xor
hlt
jnp
ss
loope
lcall
lods
outsl
in
adc
adc
push
addr16
mov
add
xchg
lock
pcmpeqd
mov
cmp
fstpt
shll
pushf
das
call
divb
jnp
jle
out
ffree
push
sub
jnp
push
stos
loope
sbb
sahf
jnp
aas
filds
in
lods
sbb
into
xor
xchg
xchg
add
jnp
mov
mov
jae
push
jnp
push
addr16
mov
mov
in
pop
xor
arpl
add
outsl
xchg
jnp
mov
cltd
and
mov
inc
aas
pop
jns
mov
push
sub
push
jnp
daa
popa
out
or
pushf
sbb
cmp
ds
ja
mov
mov
pop
xchg
mov
das
out
imul
nop
movsl
fisttpll
or
xor
mov
sbb
inc
ror
and
jnp
lret
pop
sbb
sub
jnp
cmp
cld
lea
mov
in
lcall
ficoms
jge
inc
sub
lods
sub
pop
lret
push
adc
jne
and
ret
mov
arpl
push
and
data16
mov
xlat
sub
fmull
cwtl
xchg
leave
insb
mov
test
xchg
xchg
out
adc
jae
dec
cli
fbld
mov
aam
in
fstl
sbb
push
push
mov
mov
sbb
lret
lahf
pop
outsb
fldcw
sti
fucomp
jnp
ret
subb
test
das
jo
stos
fstpt
or
push
jnp
xor
mov
pop
out
enter
cmpsb
push
lret
mov
xlat
jnp
mov
adc
pop
xchg
mov
jne
pop
add
gs
arpl
mov
mov
shrb
imulb
xor
sbb
mov
in
loope
xlat
lods
stos
mov
stc
daa
shlb
pop
jnp
xor
xchg
outsb
or
arpl
fmul
addr16
lahf
shlb
mov
fidivl
push
fsubs
jae
lods
xchg
fwait
pop
or
jp
ja
cmp
mov
arpl
pushf
es
fs
dec
dec
jnp
mov
mov
or
mov
mov
dec
fisubl
inc
mov
and
push
jnp
adc
aad
sti
add
notl
sub
sahf
add
dec
pop
enter
xchg
inc
xor
sarl
pop
int
xor
xchg
inc
pop
mov
pushf
adc
das
xchg
insb
push
insb
xor
cmp
mov
jp
gs
push
imul
sbb
dec
dec
aam
pop
lahf
int3
jbe
xchg
jns
lea
or
jo
movsl
jmp
pushf
pop
or
xchg
jnp
xchg
mov
jbe
test
xor
and
inc
std
hlt
scas
jne
xchg
pop
out
dec
jnp
push
inc
cmp
fldpi
stc
insb
andl
mov
mov
adc
push
out
outsl
fisttpll
divb
stos
pushf
sbb
and
mov
iret
sarb
cwtl
jnp
cltd
cli
sbb
cmpsb
mov
xchg
cmp
and
mov
out
or
push
insl
inc
jge
orl
mov
lods
pop
jnp,pn
lahf
std
sbb
push
dec
xlat
imul
fildll
jge
pusha
sarl
pusha
hlt
dec
cmp
or
dec
jnp
lods
lea
xchg
outsl
sbb
mov
jnp
push
inc
stos
push
out
imul
fwait
jmp
divb
fcomip
dec
imul
out
mov
pushf
imul
scas
insl
mov
movsb
in
jnp
or
popf
jnp
ljmp
lea
mov
ret
sub
jnp
popa
adc
jnp
stos
addr16
pushf
data16
mov
movsl
mov
in
push
jnp
repz
sti
jecxz
cwtl
std
out
cmp
and
and
in
mov
sub
pop
cmp
outsb
scas
cmp
jns
jae
flds
and
sub
inc
mov
cli
push
shlb
xor
mov
mov
mov
cwtl
ret
or
jne
insl
push
mov
shrl
xor
or
jnp
cwtl
es
add
fimull
xchg
ja
push
pushf
jne
shl
xchg
jnp
cmpsb
mov
lret
filds
loope
adc
into
ds
mov
cli
jnp
push
mov
call
xorb
in
and
daa
out
adc
adc
mov
idiv
inc
jnp
fisttps
bound
add
in
ret
mov
fs
dec
rolb
jo
sbb
aad
mov
push
aas
bnd
mov
jae
cmp
pop
sbb
add
data16
adc
lret
inc
jno
jle
hlt
fnstcw
fwait
pushf
repnz
inc
sarl
scas
js
xchg
mov
jmp
cmpl
jg
jge
lea
pop
movsl
jnp
jae,pt
mov
mov
out
inc
rclb
mov
pop
or
xchg
dec
out
into
xchg
pop
sbb
repnz
pushf
adc
push
sbb
cmc
int3
push
and
sbb
imul
pop
jmp
jnp
adcb
hlt
mov
roll
cmp
xchg
dec
test
or
aaa
cmp
pop
repz
push
lock
in
out
mov
divl
imul
out
dec
andb
cltd
popa
push
and
cmp
sbb
mov
pop
pop
fnstenv
das
mov
jnp
arpl
fwait
jae
push
or
cs
sbb
fmul
lret
arpl
loopne
negl
xchg
repnz
pop
dec
pop
mov
stos
adc
jnp
and
ss
mov
sub
fidivl
sti
fdivs
and
mov
push
sub
or
mov
jbe
popa
imul
scas
and
jns
or
sbb
jnp
push
int3
and
pop
pop
adc
and
sarl
repz
popf
imul
cmp
jmp
cwtl
mov
pop
lea
popf
add
jnp
ds
mov
jnp
mov
adc
into
cli
jnp
adc
sbb
pop
movsl
jnp
das
dec
ljmp
js
jnp
push
cmpsl
pop
clc
sbb
jnp
add
arpl
ss
jnp
test
push
mov
mov
test
and
imull
in
fnsave
or
and
or
es
pop
jo
and
mov
sahf
out
sarb
push
sbb
jbe
dec
xchg
lock
pop
cmp
lfs
jnp
dec
lea
inc
fidivl
ret
dec
mov
mov
xchg
in
add
jae
inc
jnp
les
pop
lods
frstor
in
pushf
mov
inc
clc
insl
dec
pop
or
test
push
stc
add
or
ret
mov
xor
neg
adc
jnp
hlt
jne
clc
dec
mov
jnp
ret
lods
pop
push
sti
pop
push
jnp
and
jnp
or
lock
lods
test
xor
repz
scas
inc
sbbb
cmp
bound
sahf
or
sub
pop
adc
mov
stos
cltd
jnp
or
int3
jnp
pcmpgtw
out
cli
ja
adc
flds
fdivrs
cmp
dec
and
pop
ljmp
sub
nop
jnp
fidivrl
subb
xor
xchg
inc
mov
mov
stc
pop
inc
bound
dec
insb
add
jae
pushf
aas
js
pop
pusha
fwait
hlt
ds
insl
test
icebp
pop
lods
jnp
movsl
mov
loop
mov
mov
call
mov
addr16
fnstcw
xchg
jb
insl
bound
pop
insb
adcl
mov
or
fcmovne
mov
loop
or
sbb
dec
pop
lcall
pop
mov
cmp
sub
in
mov
stos
pop
mov
or
inc
pop
aas
in
out
cmp
hlt
jnp
pop
fiaddl
lods
xchg
jnp
dec
and
jg
mov
mov
xchg
movsb
test
jnp
push
je
scas
fstpt
pop
icebp
mov
pop
adc
fs
aaa
mov
fistpl
rorb
lret
cmp
cs
add
call
jnp
mov
out
push
imul
lods
dec
cmp
jp
insl
dec
mov
imul
ror
insl
fnsave
adc
hlt
mov
enter
and
jnp
icebp
pop
or
ja
jnp
and
xlat
push
nop
mov
dec
inc
cltd
loope
fucomp
cmpl
int3
sbb
dec
sahf
xor
jo
out
jae
jno
cmp
mov
xchg
cmp
stos
mov
ja
daa
sbb
mov
dec
mov
sub
mov
ds
inc
xor
ja
cmp
jnp
lea
lods
jmp
outsl
jl
mov
lcall
pushf
loope
hlt
jge
testl
fxch
je
daa
fwait
sbb
cmp
adc
mov
rorl
mov
out
subb
or
loope
roll
enter
mov
adc
pop
cmp
push
mov
aaa
into
jnp
out
mov
scas
sub
sti
or
sbb
pop
jne
fsubrs
sbb
dec
xor
mov
sbb
out
add
jnp
js
adcb
mov
adc
adc
shl
cmp
add
and
push
dec
push
mov
cld
and
popf
jne
sbb
mov
inc
cmp
sbb
bound
mov
sar
lret
xchg
outsl
int
dec
inc
mov
insb
lea
cmpsl
jnp
jle
lret
xlat
ss
or
xchg
outsl
pop
cwtl
jbe
mov
cs
into
mov
mov
jnp
cli
cmp
push
or
int
stos
pop
push
popl
fidivl
int3
lock
insl
lret
arpl
imul
mov
out
jnp
pop
ffreep
sbb
movsb
dec
pop
repnz
push
mov
ja
mov
movsb
cmp
loopne
inc
rorl
sarb
inc
jge
imul
mov
push
push
imul
pop
jle
xchg
outsl
xorl
jl
jne
jnp
fimull
sub
cmpsl
dec
stos
mov
cmp
mov
sti
pusha
jecxz
jne
insb
dec
push
dec
or
mul
out
jp
lret
jno
test
imul
sahf
cltd
mov
in
testb
add
lods
xor
bnd
and
jnp
ljmp
xor
lcall
in
xchg
pop
jmp
adc
mov
xchg
mov
insb
jnp
add
mov
cmpsl
pusha
jnp
movsl
push
fxch
push
xor
mov
add
addb
jnp
cmp
mov
jnp
cmp
inc
dec
rcl
push
xor
in
mov
push
ret
push
jnp
push
xchg
push
or
mov
sbb
insb
dec
adc
sbb
cwtl
xchg
jp
cmc
shlb
lret
je
mov
ror
dec
stos
jecxz
fistl
mov
in
mov
jnp
cmc
mov
inc
add
dec
push
fsubrs
xor
pusha
jnp
lahf
mov
fnstsw
mov
pop
loopne
add
xor
je
xor
hlt
jnp
cs
int3
fcomip
subb
or
cs
jnp
test
and
jnp
lds
fs
mov
ljmp
xor
int
jnp
lods
cmp
pop
cmp
or
outsb
add
inc
pop
jae
bound
aam
sub
dec
mov
jnp
mov
mov
jmp
aam
aaa
arpl
test
push
das
adc
jmp
int3
imulb
xchg
fwait
scas
adc
das
ja
jae
add
mov
jno
out
or
inc
jo
mov
push
jnp
call
fcomp
jnp
cli
scas
ret
insl
mov
sbb
fwait
test
jge
test
js
sub
mov
mov
xor
mov
cmp
dec
add
lret
repnz
es
dec
and
jg
cmp
push
sub
mov
call
cld
jnp
mov
push
js
ljmp
mov
xchg
jb
xchg
pushf
mov
pop
inc
scas
in
mov
cli
jae
test
mov
notl
cmp
push
sbb
sahf
sti
or
in
lret
jge
push
fistps
dec
dec
adc
loope
ja
icebp
data16
pop
pop
push
stc
jge
movsl
repz
sbb
aad
sub
loop
inc
sub
cmp
push
jp
dec
or
clc
and
aad
iret
push
jnp
mov
sub
xlat
ljmp
test
sub
jnp
xchg
scas
ss
stc
insb
outsl
jnp
sbb
sahf
jnp
shrb
xor
push
inc
pop
jnp
push
xchg
push
lds
pop
fstpt
int
mov
scas
stos
lahf
imul
pop
outsl
enter
xor
pushf
daa
leave
in
lods
js
lods
mov
mov
outsl
mov
lret
arpl
testb
cmp
scas
lahf
adc
jnp
mov
mov
cli
xchg
jae
add
clc
jnp
and
mov
xor
push
into
test
jnp
roll
jp
mov
lahf
out
cmp
jnp
js
cli
mov
mov
jnp
xor
dec
sbb
dec
inc
movsb
dec
hlt
jnp
sti
pop
mov
xor
call
test
movsb
mov
imul
dec
int
mov
pushf
cmp
lahf
mov
mov
mov
jmp
iret
jnp
test
mov
in
push
scas
enter
dec
and
jl
pusha
jnp
jg
or
inc
mov
jno
into
in
jnp
out
ss
cmpsl
mov
jnp
add
stos
or
jnp
sbb
xchg
jnp
jecxz
cmp
in
sarl
xchg
in
incb
push
lcall
dec
push
push
dec
xlat
rolb
lcall
ljmp
loope
ss
jnp
push
sbb
in
stos
fdivrl
in
fs
in
lahf
repz
cld
insl
pop
cmpsb
dec
out
and
xor
adc
sahf
jnp
sbb
cmp
daa
pop
mov
fnstsw
jmp
jnp
jo
add
xchg
ljmp
pop
jmp
rorb
imull
cmc
push
add
jnp
push
xchg
aaa
mov
sub
push
xor
jecxz
test
repz
loop
jno
adc
push
push
in
sbb
or
xchg
enter
jo
adc
add
push
inc
mov
int3
dec
jl
jg
mov
in
mov
in
imul
fldt
mul
ja
pushf
idivb
lods
test
inc
lock
int3
xchg
lds
inc
xchg
add
mov
mov
push
jnp
aaa
mov
xor
jnp
in
sub
sbb
jnp
movsl
loope
mov
sub
aas
pop
fadds
pushf
jnp
cmpsb
sub
push
mov
cmp
test
sbb
xor
xor
sbb
jae
dec
lods
das
fdivs
cmp
sbb
push
orl
in
jo
xchg
inc
ss
bound
push
mov
aam
aaa
add
fnsave
jnp
sub
cmp
sub
outsl
sub
jl
stos
xchg
notl
push
leave
dec
mov
int
rsqrtps
add
mov
jno
add
out
dec
jae
dec
and
stos
sti
jnp
lahf
cmp
call
int3
popa
aas
mov
jnp
fbstp
stos
pushf
addr16
xchg
push
jnp
mov
ficoms
and
aaa
cmp
sub
je
ss
dec
xor
sbb
ror
mov
jnp
cmpsl
insb
inc
add
jecxz
xchg
or
aaa
jnp
or
imul
mov
cli
and
leave
adc
jb
and
lods
in
sbb
jae
push
xchg
sbb
cmp
dec
pop
mov
sbb
jmp
jno
jnp
and
daa
inc
jbe
pop
jnp
xchg
sub
cmp
inc
jo
or
call
cmpsl
sbb
bound
xchg
jnp
push
dec
xor
std
sbb
scas
jno
loopne
lods
test
mov
push
xchg
lods
scas
movsb
in
dec
adc
sub
hlt
mov
sbb
out
outsl
mov
fs
lods
xor
jnp
mov
xor
pop
and
push
cmp
pop
loope
inc
push
inc
mov
push
pop
jnp
cltd
dec
fcmovne
cmp
imul
cli
scas
mov
jnp
jp
iret
fcmovnb
jg
jnp
mov
push
sbb
jbe
jmp
jnp
add
cmp
lret
add
push
scas
pop
pop
mov
ljmp
jnp
cld
push
xchg
adc
mov
jmp
mov
cmp
cmc
jnp
fidivl
lods
mov
xchg
dec
cmpsb
outsl
adc
lods
or
jnp
repnz
movl
dec
repz
aas
cmp
push
in
adc
ret
dec
pop
insl
nop
das
or
test
orl
mov
inc
mov
nop
insl
xchg
cwtl
inc
add
xor
pushf
and
loope
gs
repz
jnp
fidivrl
push
js
ds
jmp
lods
repz
in
xor
decb
daa
pop
arpl
push
repnz
cmp
sub
jo
shlb
jnp
and
adcb
shrb
push
mov
pop
fs
loop
or
cli
ja
add
mov
cmp
jle
pushf
dec
pop
lret
iret
stos
icebp
call
stos
inc
mov
add
shrl
test
adc
dec
call
fisubrl
out
gs
sub
out
in
loopne
xchg
adc
jnp
cwtl
xchg
and
lds
sub
jnp
cmp
mov
pop
xor
jnp
adc
es
sbb
xor
mov
fnstsw
push
ds
sbb
cmpsl
mov
mov
jp
loope
pop
xchg
xlat
pop
or
jnp,pn
mov
xchg
xchg
mov
jnp
adc
mov
mov
icebp
add
push
jne
not
xor
inc
int
pop
ja
repnz
jnp
std
mov
pop
xor
and
pop
sbb
jnp
pushf
dec
xchg
lock
or
jnp
dec
rcll
add
shrl
addr16
mov
arpl
cmpsb
mov
cmpsl
jnp
clc
test
mov
dec
pop
mov
cmp
pop
in
lret
mov
arpl
outsl
fmull
xchg
aad
sbb
xor
xchg
pop
jnp
call
jns
jnp
out
cmpsb
inc
shr
aam
jnp
out
mov
sbb
lret
fiaddl
js
in
stos
inc
roll
sub
into
mov
popa
notl
sbb
sbb
lret
jmp
xor
sub
out
xor
jnp
mull
mov
dec
es
inc
sbb
cmpsl
jnp
flds
or
ds
lods
fwait
inc
and
cld
insl
subb
dec
inc
sbb
test
pop
sub
mov
bound
jnp
imul
in
adc
jnp
cmp
int3
imul
dec
in
adc
leave
push
daa
in
jnp
inc
in
das
pop
into
sarl
scas
cltd
or
sub
xchg
pushf
mov
loope
hlt
jnp
mov
mov
inc
adc
mov
xor
push
pop
xlat
lods
xchg
repnz
jecxz
or
std
lret
xchg
cwtl
fisubrs
jg
cli
jmp
lods
dec
jnp
in
mov
sub
xor
jns
cs
inc
cmp
or
mov
sub
lods
mov
sub
sub
fistpl
sbb
call
in
sbb
sbb
mov
outsb
pop
out
jnp
fcoml
fidivrs
jmp
ljmp
jo
jno
xchg
pushf
dec
mov
shlb
repz
sub
cltd
cs
sub
jnp
decl
js
int3
xchg
cmpb
sbb
sbb
inc
js
test
insl
cmpl
cmp
mov
enter
sub
cli
xchg
jnp
sub
insb
jnp
jbe
popa
or
call
rclb
lods
dec
shrl
scas
inc
mov
and
push
out
call
adc
pushf
xlat
inc
push
jb
sti
jnp
lret
loopne
jns
adc
mov
and
jo
jp
jnp
cmp
popa
insl
call
pop
or
ja
inc
addr16
das
pop
jbe
lret
lods
pop
jnp
scas
sarb
movsl
jmp
movsb
jne
pop
cmp
inc
jnp
fsts
xchg
jnp
mov
adc
mov
cmp
mov
jae
jne
scas
ss
cmp
push
xchg
jno
test
ja
sbb
jnp
test
or
jno
mov
push
jnp
ret
cmp
es
inc
push
or
repz
push
sub
loop
sar
lcall
mov
jnp
lea
mov
jae
imul
jmp
testb
out
int
jnp
dec
rcll
pop
push
call
mov
aad
add
fisubrl
pushf
shll
jb
loope
dec
jnp
int
and
imul
fwait
adc
lret
xor
mov
jnp
ret
das
jnp
lods
outsl
stos
jecxz
fst
jnp
movsl
test
adc
pop
out
pushf
aaa
dec
mov
lock
or
push
mov
and
repnz
dec
push
pushf
inc
add
lock
sbb
mov
lods
jnp
push
xchg
jnp
push
push
and
repz
lods
es
aad
fmul
pop
mov
push
jmp
clc
jno
sbb
adc
push
push
pop
insl
mov
or
fstpt
fisubrl
mov
xor
jnp
or
dec
dec
jnp
sahf
int
jle
cltd
stos
popa
adc
mov
jo
xor
jnp
addb
imul
sbb
inc
jnp
loope
aas
daa
sbb
xor
add
test
mov
int3
or
fistl
addl
xor
cmp
mov
fsubr
add
arpl
fsubrs
sub
xor
jnp
jno
and
daa
jecxz
sub
add
pop
push
sub
pop
jnp
inc
les
pushf
dec
mov
mov
jnp,pt
inc
add
push
int3
in
outsb
push
pop
jnp
and
xchg
xchg
pushf
jp
outsb
lahf
dec
cli
xor
mov
push
icebp
xchg
mov
or
xor
xor
xor
inc
fcmovnb
jo
ss
mov
in
sbb
jecxz
or
sub
es
inc
lret
push
bound
xchg
imull
mov
or
loope
xchg
jnp
cli
test
jae
pop
mov
test
push
cltd
xor
jnp
fcompl
push
dec
jnp
daa
mov
cmp
mov
xor
insl
cli
adc
in
sub
pop
xchg
jecxz
jb
or
push
inc
std
sahf
pop
push
jno
add
mov
pop
jg
jae
stos
lods
or
testb
repnz
jnp
and
addr16
lods
mov
idivb
push
test
sub
mov
xlat
sbb
ljmp
push
sub
nop
dec
in
testb
or
popf
daa
jnp
out
pushf
hlt
pop
popa
push
jnp
mov
sub
add
dec
call
mov
mov
pop
lods
pusha
cmp
jnp
pop
push
andl
push
xchg
mov
mov
stc
jbe
dec
popf
bound
adc
fidivrs
dec
jnp
loop
fisttpll
inc
sub
call
mov
push
gs
jne
xor
out
cmp
test
jnp
jecxz
into
ljmp
pop
adc
cmpsl
push
imul
adc
stos
jnp
xor
ret
jnp
ja
pop
icebp
mov
jnp
ss
mov
cwtl
mov
mov
cmp
inc
mov
jnp
lock
sub
addr16
push
mov
ss
jecxz
push
xor
xchg
inc
jae
adc
sbb
jnp
movsl
cmp
adc
mov
scas
enter
repz
jno
pop
dec
in
push
fsubr
jnp
add
inc
push
jnp
jge
mov
or
hlt
clc
lea
xchg
rorl
pop
daa
jg
es
fidivrl
in
jnp
push
das
mov
bound
jae
cmp
test
test
out
push
daa
insl
mov
ljmp
jbe
mov
leave
mov
in
or
mov
lods
xchg
mov
jnp
in
xor
mov
insb
or
lods
jnp
in
jmp
xchg
orb
dec
bnd
xor
mov
or
mov
inc
jnp
push
mov
dec
mov
ss
xlat
lods
dec
iret
dec
sub
sub
jnp,pn
in
xor
or
inc
cmp
pop
dec
insl
sbb
stc
jge
mov
sub
lods
and
inc
or
fisttpl
mov
outsl
and
xor
outsl
xor
sarb
in
outsb
and
sbb
dec
xchg
out
jmp
push
cmpsl
test
mov
or
xchg
ljmp
in
outsl
sbb
lods
mov
ja
dec
push
cli
inc
or
mov
inc
test
xlat
idivb
lods
cmp
enter
dec
push
fwait
jae
sub
in
das
mov
jnp
or
prefetch
add
mov
add
fstl
jnp
movsl
pushf
push
mov
mov
leave
pop
mov
cmpsl
push
stos
jnp
mov
popf
push
mov
inc
jnp
sub
mov
jnp
ljmp
in
outsl
jnp
pop
ret
sub
xor
xchg
outsb
cmp
mov
insb
xor
test
xor
lods
call
sbb
pushf
push
popa
insb
or
inc
jb
pop
lea
mov
js
jg
jb
mov
movsb
jnp
xor
push
in
lahf
jns
out
xor
in
inc
lea
jnp
xchg
fisubrs
pop
inc
testb
jbe
ret
ret
pushf
adc
int
jnp
pop
insb
stos
add
mov
jae
divb
push
loop
sbb
fidivs
jmp
mov
and
xchg
insl
inc
es
or
mov
jge
dec
in
rcrb
xor
mov
stos
pop
mov
cs
inc
js
add
imul
lods
daa
insb
mov
pop
or
ret
and
enter
cli
pop
push
and
cmpsb
in
cmp
loopne
shll
xor
in
in
repnz
jnp
stc
push
xor
sub
lods
lret
mov
dec
inc
aad
daa
jne
outsb
rcrb
jnp
jmp
pop
int3
mov
add
icebp
dec
pushf
adc
das
dec
clc
push
xor
roll
jo
outsl
jnp
pusha
and
iret
sub
mov
in
jnp
or
lods
push
loop
sub
or
in
stos
mov
mov
or
inc
inc
jnp
lea
mov
inc
hlt
jnp
rol
jbe
mov
sbb
mov
lods
cmp
outsl
add
sbb
insb
js
jns
or
mov
mov
je
scas
or
call
jnp
jns
sbb
and
xor
rcl
std
sub
cltd
aad
aas
into
loop
mov
fldl
cmp
ficoml
outsb
sbb
jecxz
or
test
mov
dec
inc
call
dec
es
in
lods
push
lock
dec
xchg
fisubl
bnd
jbe
push
push
sarl
call
filds
pop
cmovp
movsl
xor
jp
lods
cmc
adc
adcb
out
fs
hlt
xor
ja
push
xor
lods
pushf
jl
push
aam
mov
test
ss
mov
sub
push
jne
and
jnp
push
mov
loop
pop
cmpsl
mov
call
das
sub
lcall
mov
adc
jnp
and
addl
pop
push
insb
imul
in
stc
jl
bound
push
imul
dec
jp
cmp
jecxz
dec
lret
jnp
rcl
mov
inc
dec
dec
mov
pop
stos
daa
stc
xlat
mov
fistps
sbb
imul
pop
push
movsl
js
sahf
insl
out
imul
pop
stos
jb
push
das
fisttpl
inc
xchg
dec
mov
jnp
cmp
cli
or
jmp
or
movsb
das
fistl
sahf
jnp
insb
scas
shrb
inc
lahf
andb
scas
sub
jg
xchg
aas
cmpl
jecxz
and
inc
js
mov
mov
add
popf
or
incb
xlat
sti
mov
mov
pop
or
push
mov
sub
pushf
or
cmp
inc
outsl
fildll
repz
pop
push
sbb
mov
mov
icebp
pop
sbb
in
sbb
mov
adc
jnp
mov
dec
jns
lea
cmp
fistps
xchg
fsubrl
das
inc
pop
or
aaa
and
jne
lock
jnp
in
dec
mov
mov
mov
dec
and
repz
sbb
mov
jnp
jns
pushf
inc
cmp
loopne
jp
jb
stos
mov
lahf
stc
add
inc
jmp
lahf
out
push
jns
imul
dec
mov
pop
ja
ljmp
xor
outsl
jnp
add
jbe
mov
jnp
sbb
fnstenv
sbb
sbb
add
outsl
xorl
push
mov
bnd
mov
inc
sbb
call
movlps
rcl
xor
jns
fs
mov
mov
lcall
xchg
xor
jnp
repnz
or
hlt
or
xchg
push
cmp
mov
xlat
pop
insl
jecxz
jnp
xchg
lcall
out
ja
cmp
divl
xor
xchg
int
imul
inc
mov
std
js
fdivp
repnz
jnp
xchg
fldcw
jnp
push
imul
loop
inc
ja
push
mov
notl
mov
or
jnp
cmp
aam
sbb
out
cmpl
nop
js
xchg
push
pusha
sbb
and
loop
test
outsb
es
popa
mov
adc
ljmp
sarb
test
mov
jnp
adc
jbe
sbb
cwtl
xor
ds
mov
movsb
lock
pop
xchg
jbe
inc
js
sbb
fdivs
xchg
cmp
loopne
outsl
sub
push
pusha
mov
fadds
inc
mov
xor
mov
jnp
mov
pop
loop
adc
mov
dec
jmp
xorl
mov
pushf
loop
das
inc
jnp
mov
ljmp
xor
jo
push
test
jae
ss
loope
or
xor
jno
mov
jnp
mov
sbb
inc
jnp
mov
inc
insl
add
jnp
es
dec
fisttps
mov
jnp
xchg
or
or
mov
jnp
dec
cli
push
xchg
stc
jnp
insl
add
cmp
movsb
fidivrl
icebp
in
cmc
add
iret
jnp
add
cmp
sub
imul
das
fmulp
fdivl
add
xchg
pushf
ret
jnp
push
mov
cmp
cli
lods
pop
movsb
js
add
lcall
cltd
sub
or
ds
sarb
js
add
jo
mov
mov
rcrb
lret
negb
mov
sbb
add
testl
sub
fdiv
outsl
testb
lahf
jnp
xchg
xor
mov
cmpsl
sbb
mov
cmp
mov
jle
lods
or
clc
and
enter
xor
push
out
shlb
stos
xchg
movsl
cmp
jmp
inc
js
scas
mov
imul
mov
daa
out
je
cld
dec
push
dec
dec
lods
das
ss
in
arpl
jnp
movsb
insl
xor
jnp
add
mov
jnp
cwtl
ss
jae
xor
jns
ret
xchg
dec
sbb
sti
jnp
cmp
mov
jo
jnp
dec
jb
aad
jg
lock
imul
mov
pushf
pop
mov
into
pop
mov
pop
stos
ljmp
cmp
fimull
jb
aaa
jg
xor
aam
int
popf
adc
mov
imul
je
popf
or
jb
jae
out
adc
jnp
mov
sub
inc
inc
insb
bound
arpl
jbe
lea
outsl
or
add
jecxz
mov
jge
xor
mov
cmp
and
mov
inc
xor
icebp
or
mov
jns
pop
pop
or
addr16
mov
add
out
out
sti
scas
and
pop
push
and
je
insb
jnp
mov
out
rcrl
aaa
add
fistps
jbe
or
lock
es
aam
movsl
xchg
jle
imul
dec
in
add
aaa
jge
pop
xchg
sbb
push
ja
add
ret
or
cli
fisubs
pop
mov
mov
adc
negl
jl
out
daa
add
xor
xor
out
or
stos
jnp
leave
sub
add
iret
sbb
mov
mov
pushf
add
sti
push
xor
roll
push
insl
int
mov
mov
fisubrs
pop
stos
xchg
ljmp
fwait
mov
das
or
sub
jnp
mov
lock
lods
iret
test
mov
dec
out
insl
jg
notb
jnp
cmpsl
xchg
pop
xchg
mov
or
arpl
mov
jnp
sti
imul
jnp
std
mov
or
movsb
cmp
ficoml
dec
inc
ds
in
adc
rorb
inc
adc
xor
mov
imul
aad
mov
out
repz
mov
pop
lods
push
jae
es
cwtl
movsl
ss
jbe
xchg
sub
and
jo
sahf
lret
out
jbe
pop
ss
xor
retw
in
ja
add
div
jnp,pt
jmp
push
lret
jo
jnp
fstps
mov
push
xor
imul
mov
cli
cmp
and
jbe
pop
sti
jnp
jb
inc
movb
lods
mov
cmp
cltd
or
popa
xchg
out
dec
dec
fwait
repnz
jnp
sub
cmp
std
or
mov
mov
aas
sbb
mov
scas
enter
push
pop
and
ljmp
stos
pushf
ja
pop
shll
xor
insl
jge
imul
xchg
std
mov
or
int3
dec
sbb
xor
sbb
paddw
pushf
call
sar
shl
jnp
inc
ss
cmp
fidivrs
mov
mov
in
push
popa
push
pop
leave
pop
xor
adc
gs
cmp
jp
jnp
pushf
jecxz
push
mov
lock
push
bound
or
inc
pop
lods
sub
into
jg
mov
mov
jno
aad
add
pop
insb
add
das
cmp
shrb
pop
fdivl
hlt
and
fwait
sbb
dec
sbb
fwait
jnp
lret
jl
xchg
sbb
div
int3
xor
out
test
imul
imul
add
addb
icebp
push
repz
hlt
xchg
jno
into
data16
popa
lahf
push
cmp
cmp
jnp
adc
dec
xchg
fdivrs
mov
dec
mov
ljmp
xor
out
data16
test
fstl
and
xor
mov
push
sbb
in
stos
test
lds
cmp
aaa
mov
sub
xor
arpl
cmc
outsb
pushf
jnp
repnz
push
cmp
cmpl
arpl
jo
into
pusha
sub
adc
xchg
xor
jnp
call
sbb
mov
imul
push
inc
jnp
inc
push
xorl
ja
inc
call
xchg
adc
fstp
jnp
cmp
add
xor
jae
push
mov
pushf
jae
mov
or
jb
lods
sbb
sbb
pop
imul
mov
jae
rcrb
add
add
in
lahf
sub
sbb
pop
stos
mov
rcr
jnp
cmp
jnp
popf
nop
mov
int
or
iret
jnp
aaa
decl
cmp
xchg
subl
or
sbb
push
ljmp
sub
inc
das
fldcw
jae
pop
mov
sbb
jnp
mov
pop
enter
jnp
cltd
std
mov
into
fstpl
in
imul
sbb
add
cmp
xor
std
jae
add
pop
imul
mov
aam
in
bound
jnp
lahf
sub
dec
jnp
xchg
das
adc
cmp
push
jb
jnp
or
test
cli
out
pushf
ja
mov
dec
pop
mov
mov
adc
mov
push
shrb
mov
mov
into
out
test
scas
ds
jl
jnp
mov
jmp
lock
add
inc
nop
ja
xor
add
out
fwait
xor
notl
outsb
fidivrl
cmpsb
jo
mov
jnp
popf
mov
xor
mov
stc
adc
insl
mov
xor
in
insb
fwait
cmp
imulb
xlat
aad
dec
insb
sti
xchg
push
call
xor
jb
cmpsl
mov
insl
inc
gs
mov
inc
subb
mov
or
notb
adc
std
jnp
push
mov
pushf
lcall
pushf
cmp
add
jnp
sub
sbb
mov
int3
ds
inc
inc
ja
mov
lods
cld
jnp
mov
arpl
jnp
cli
dec
mov
je
imul
adcl
and
ja
cmp
or
push
sti
jne
or
cmc
scas
lret
inc
fwait
pop
out
call
roll
clc
mov
test
lret
fsubrs
jl
idivl
jnp
pushf
xor
lret
ja
push
cmp
shlb
call
sub
jnp
inc
or
sbb
cmp
lmsw
xor
sbb
stos
jl
mov
xchg
cmp
pop
fwait
pushf
add
inc
repz
and
lahf
cmpsb
out
jns
sbbl
ja
cli
push
ss
out
fldt
inc
sbb
les
std
inc
xchg
pop
lret
jnp
mov
and
andl
mov
mov
jnp
out
pop
clc
std
mov
outsb
add
fsub
mov
inc
scas
movsl
je
hlt
imul
pop
dec
push
sbb
cmp
or
jae
mov
cltd
in
sbb
mov
xlat
popf
jnp
fmul
sbbl
shlb
aas
mov
mov
xlat
arpl
jnp
cmpsl
add
jno
int3
push
jnp
out
lret
shlb
push
lock
jnp
pop
inc
in
enter
mov
mov
fidivs
jne
jnp
lods
in
in
jp
adc
lcall
rcll
cmc
or
jno
ss
ljmp
into
pop
xchg
sbb
mov
pushf
jge
mov
xchg
jg
xchg
gs
aaa
mov
jnp,pt
or
cs
lock
decl
orb
out
ret
pop
xchg
stos
jnp
ftst
xor
addr16
jg
or
xor
push
into
add
out
in
sub
cli
pop
in
adc
cltd
repnz
out
ljmp
pop
sbb
rcr
loope
daa
mov
adc
mov
imul
mov
lds
lods
loope
or
vmwrite
in
jnp
jne
xchg
sub
divl
movsb
mov
loope
mov
out
rol
ja
out
mov
inc
inc
add
and
test
idivl
clc
mov
cli
push
xchg
add
into
rep
jp
jnp
adc
ds
add
add
cwtl
clc
arpl
jnp
mov
or
sub
sbb
fdivrl
les
popf
xlat
dec
dec
in
jnp
sub
ljmp
lods
mov
stos
clc
jns
xorl
stos
push
in
adc
mov
jae
cmpsb
and
std
hlt
je
int3
push
shr
sbb
imull
andb
jecxz
cli
jns
jnp,pt
push
mov
gs
repnz
mov
mov
in
adc
cmpsb
jb
imul
add
push
lret
sub
scas
xor
jae
add
inc
outsb
out
scas
jnp
adc
outsb
cmp
sub
lock
aaa
mov
jecxz
ds
fdiv
outsl
dec
adc
movsb
subb
fildll
jno
cmpl
mov
imul
fbld
and
xchg
ret
or
sbb
js
mov
pop
cmp
push
push
pop
pop
push
aaa
lea
mov
or
inc
mov
imul
dec
jp
push
dec
in
xchg
cwtl
popa
and
adc
popf
jne
sbb
xchg
fs
jnp
gs
adc
scas
lock
add
aad
jecxz
jnp
ljmp
imul
lret
das
rolb
stc
sbb
cld
and
iret
outsb
jae
sbb
jnp
add
xchg
mov
ljmp
mov
mov
add
sub
lock
repnz
cmp
stos
jno
test
cld
in
out
mov
adc
mov
pop
xchg
xor
jnp
push
addr16
leave
imul
pop
subb
pushf
in
clc
in
lea
wbinvd
fistl
sbb
bound
xchg
ss
dec
add
mov
mov
pushf
mov
xchg
jo
fsubr
repz
pop
imul
fidivrl
jge
jnp
push
movb
ror
arpl
sub
out
jnp
cmp
dec
mov
jns
sub
scas
test
es
pop
iret
fwait
mov
mov
sti
sbb
inc
fimull
jnp
das
dec
inc
mov
and
cld
fistpl
jnp
mov
cmp
dec
jp
jo
or
and
aam
xchg
push
cmpl
dec
jnp
lods
jle
or
mov
jns
inc
mov
or
adc
adc
jnp
ss
xor
or
mov
dec
loopne
outsl
xchg
mov
adc
daa
push
test
xchg
adc
les
push
pop
idivl
les
dec
xor
ret
xor
jnp
insb
pop
push
ss
mov
add
mov
jnp
or
mov
dec
insl
out
loopne
inc
sub
mov
out
jae
jg
addr16
xor
jnp
cld
mov
jns
mov
loope
push
fsubrs
fs
jle
fdivrs
add
and
xor
int
into
cmp
pop
jnp
adc
sbb
lock
or
out
pop
negb
add
arpl
jecxz
dec
aad
in
jp
mov
or
cmp
lret
dec
insl
sbb
test
pusha
hlt
jnp
movsb
fdivrs
jnp
xor
aaa
cltd
jnp
iret
sti
inc
test
xchg
xor
mov
bound
dec
pop
popf
mov
sbb
mov
or
xorb
sti
push
sub
lcall
or
jae
lahf
pushf
idivb
cs
pop
inc
popa
mov
push
cmpsl
loope
sar
aaa
mov
std
outsb
push
jnp
call
sub
and
movsl
dec
out
cmpsb
in
mov
pop
sbb
enter
fidivrs
or
sbb
add
jnp
or
loope
stc
out
jnp
ret
rcll
mov
and
das
jecxz
pop
sti
test
movsl
jnp
stos
aaa
and
mov
int
add
cmp
les
test
inc
dec
jnp
call
xlat
decb
lods
out
fidivl
sbbb
inc
xor
xchg
xor
mov
jg
xor
insb
add
stc
idivb
movsl
push
orb
insb
jnp
xchg
jge
fstpt
jnp
push
aas
dec
adc
test
pushf
sub
insl
ljmp
bound
imul
je
int3
scas
jb
jnp
sbb
cld
scas
call
jmp
ret
push
dec
inc
xchg
jmp
or
jnp
cli
fadd
lods
pop
jnp
lock
das
jnp
cmp
push
push
cmp
scas
ret
outsl
rorb
jnp
rdmsr
mov
mov
lock
rolb
mov
jb
pop
mov
lret
imul
xor
ret
jne
mov
les
mov
fs
sub
sbb
cmp
jmp
or
test
jnp
cmpsb
into
js
or
dec
sbbb
inc
ja
sub
dec
sub
es
ja
cli
inc
mov
ret
lods
push
pusha
pushf
movl
inc
es
dec
jnp
adc
pusha
cmp
and
insb
or
into
and
sbb
stos
mov
jae
adc
and
arpl
imull
jmp
jne
dec
jnp
cmp
mov
test
jbe
call
arpl
xchg
stc
imul
popa
lods
push
inc
jnp
sub
jne
int
inc
and
push
loope
jnp
ljmp
or
pop
adc
scas
bound
jnp
mov
outsl
push
push
mov
rorl
pop
push
xor
mov
shll
out
rcrl
add
cmc
add
jo
stos
sarb
insl
jae
cltd
or
lock
insb
sbb
jnp
inc
dec
std
leave
lahf
jnp
push
xor
or
out
push
sub
mov
jns
xchg
fstps
stos
sub
outsb
sbb
orl
inc
pop
jnp
cmp
dec
xchg
or
jnp
jns
mov
jnp
bound
push
popa
and
insl
mov
mov
jb
mov
sarl
dec
add
xlat
int3
test
sbb
adc
sbb
shll
outsb
fwait
stc
sub
leave
add
mov
dec
add
lock
add
cmp
jg
inc
xchg
cmpsb
cmp
jnp
jmp
sti
popa
sbb
cld
cmp
cmp
outsl
stc
ss
push
and
imul
fistpll
fisttpll
testb
test
sbb
je
fwait
mov
mov
mov
aaa
dec
mov
and
jne
into
fwait
inc
hlt
xchg
andl
stos
imull
jnp
pop
xchg
cmc
dec
jnp
add
or
jnp
inc
mov
adc
push
jnp
imul
jnp
xchg
loopne
es
add
pushf
fnstcw
xor
add
call
jmp
or
jnp
cli
cmp
subl
xor
fisubrl
aas
mov
fisttps
das
jnp
popf
push
mov
data16
hlt
push
movsl
ja
fdivl
ss
add
popf
push
sub
cmpsb
scas
sbb
and
push
jge
bound
mov
mov
ret
sub
ss
imul
mov
cmp
mov
xchg
mov
xor
xlat
adc
pop
mov
pop
cs
movsb
fwait
jae
adcl
or
xlat
adc
js
imull
repnz
jnp
repnz
outsb
push
sbb
jnp
mov
scas
mov
hlt
je
mov
or
push
ja
xchg
arpl
mov
lret
adc
outsl
jno
cli
lahf
xchg
inc
jnp
xchg
sub
lods
dec
in
jnp
int3
lods
mov
call
push
movsb
and
enter
fmull
pushf
sub
dec
add
in
aam
mov
jg
jnp
js
je
fistpll
or
sub
inc
movb
loop
sti
shl
or
and
add
xor
sbb
into
shrb
and
ja
xchg
repz
add
jnp
cli
jge
jmp
push
jnp
data16
cmp
call
jnp
lahf
loope
es
jnp
movb
xor
stos
jnp
mov
je
les
jb
cmp
sub
add
push
push
jnp
mov
add
iret
fbstp
sbb
lods
xchg
jnp
mov
add
cli
sahf
fwait
sbb
xchg
jo
ficompl
cmp
js
faddl
xlat
shrb
mov
mov
imul
pushf
jmp
push
je
sti
ljmp
fs
xchg
dec
add
inc
sub
inc
loop
iret
add
jae
insl
outsl
movsb
in
addr16
lods
cmp
shrb
pop
repz
jnp
cmp
dec
sbbb
rolb
imul
sbb
fbstp
jmp
repnz
daa
xchg
arpl
imull
push
in
cmp
cmp
in
jae
sub
jnp
pop
dec
insl
jbe
outsb
scas
sbb
or
popa
dec
lea
cli
data16
mov
sbb
push
leave
outsl
mulb
jb
jg
jnp
mov
cmp
jnp
ret
test
daa
arpl
lds
or
xchg
mov
sbb
mov
sbb
inc
and
imul
add
mov
bnd
rclb
sub
dec
cmpl
shr
mov
xor
and
xchg
cmp
jbe
repz
mov
sbb
loope
jnp
or
mov
or
and
inc
fidivl
sarb
add
dec
mov
push
shrb
in
ja
int3
gs
aaa
mov
cmpb
cmp
push
roll
jnp
js
or
pop
mov
imul
nop
aas
jne
mov
insl
xor
add
xor
and
jnp
aaa
popa
xor
decb
mov
dec
jb
pusha
add
repnz
xor
mov
ret
add
sbb
jecxz
cltd
es
cmp
push
mov
fcoms
inc
xchg
jne
ja
jb
les
add
jns
pushf
push
rorl
daa
leave
jnp
gs
jne
ret
xchg
sub
inc
jnp
push
outsb
cwtl
pop
cli
xchg
jnp
cmp
or
add
sbb
adc
cmp
or
fsubr
inc
loopne
jae
popf
or
pop
call
pop
pop
jnp
pop
rcll
addr16
cmpsl
jnp
cmp
mov
or
call
push
xor
jb
and
loopne
dec
dec
pop
inc
outsl
add
sahf
insl
dec
dec
dec
jnp
pop
arpl
cmp
ror
lea
and
xor
dec
inc
pop
sub
jne
jae
mov
inc
in
cmc
setns
dec
out
movsl
dec
cmp
push
xchg
sbb
add
sub
mov
dec
adc
jnp
push
xor
jmp
shlb
xor
cli
jnp
cmp
mov
adc
fdivrs
js
xchg
pop
nop
pushf
fdivr
cmp
cmpsb
push
jnp
out
cmc
xchg
pop
inc
lods
or
shll
hlt
adc
stc
or
jno
and
pop
in
jo
jnp
add
mov
ret
mov
mov
in
outsl
pop
and
cltd
jnp
xor
call
aaa
pushf
pop
icebp
adc
push
sbb
ja
out
mull
sbb
mov
adc
rcrl
testl
dec
call
jnp
out
xchg
inc
ds
jnp
std
repz
stos
mov
xor
push
cltd
repnz
in
inc
lock
pop
jnp
pop
std
in
cli
or
and
xor
ljmp
pop
mov
insl
push
sahf
mov
jnp
popf
outsl
xor
cmpsl
mov
stc
fs
test
lret
sub
jp
das
xor
sub
push
insl
mov
sbb
jnp
inc
mov
sbb
adc
jnp
pop
add
daa
jnp
int
or
sbb
mov
or
and
popa
sub
fidivl
std
fnstcw
lods
inc
inc
xchg
jnp
dec
ja
out
push
sub
mov
out
in
lret
jnp
push
pushf
mov
ret
mov
push
xor
pop
cli
adc
ret
jnp
and
mov
mov
and
out
mov
ret
jnp
arpl
push
insl
lret
repnz
jnp
pusha
gs
sub
inc
sbb
clc
jp
iret
add
out
loop
mov
jnp
fldz
mov
pop
orl
ja
mov
sub
ret
push
inc
cmp
fldt
aad
jnp
in
or
bnd
icebp
xchg
in
roll
jnp
push
push
test
sub
dec
xchg
jae
jmp
cmp
imul
shlb
mov
xchg
enter
xor
mov
jnp
push
insl
mov
bound
insb
mov
call
xchg
mov
outsb
jecxz
cmp
stos
clc
push
fwait
dec
mov
outsl
xchg
jnp
mov
sbb
sbb
xlat
int3
lods
xchg
out
mov
icebp
lcall
mov
xor
test
fcomps
sbb
inc
mov
outsl
sbb
sub
dec
jb
js
pusha
or
mov
push
shrl
xchg
jnp
mov
rcrb
xchg
mov
jmp
xchg
push
out
jnp
and
lea
push
mov
rclb
arpl
aam
flds
or
mov
mov
jnp
cmp
fwait
and
fistl
ljmp
xor
sbb
ret
jo
js
fcompl
inc
cmp
or
push
inc
insl
jnp
lret
adc
xor
pusha
cmp
xchg
les
push
insl
xchg
mov
xor
or
aad
jp
fimuls
fsubrs
adc
shll
jl
aam
xchg
filds
rclb
movsb
and
imul
inc
shll
rorb
mov
in
dec
repnz
stos
jnp
sti
lods
jle
push
shlb
arpl
orl
pop
adc
lahf
fdivs
jnp
mov
cs
push
sahf
jnp
or
in
mov
jnp
fucomp
push
sub
push
and
pop
sysenter
pop
sbb
repnz
aaa
and
hlt
jnp
popf
inc
cmpb
push
or
jnp
push
aam
shlb
push
and
or
pop
lods
dec
mov
stc
jnp
popf
lret
fiaddl
into
jnp
xchg
mov
sub
mov
lea
out
inc
jb
je
jnp
xor
loopne
jnp
push
and
cltd
xor
dec
lcall
ljmp
test
or
sub
push
adc
xchg
outsl
shrb
sbb
push
jae
push
popl
or
jo
cmp
pop
out
push
jnp
mov
mul
jnp
dec
lods
pop
adc
cmp
out
or
dec
ret
shrb
jae
faddp
out
inc
icebp
lret
jecxz
xor
pop
popa
pop
jnp
inc
aas
inc
cmp
mov
pushf
inc
movsl
je
fwait
xor
jnp
loop
arpl
jg
pop
sbb
gs
outsl
xchg
sahf
cmp
cmpl
cwtl
mov
negl
sub
mov
xchg
call
stos
insl
lds
inc
jnp
fimuls
mov
aaa
in
jnp
pushf
cmp
cmp
jnp
push
or
mov
sub
cli
cmpsb
lahf
outsl
adc
xchg
dec
dec
and
js
lock
inc
xor
jp
ret
push
pop
fimuls
outsl
sub
mov
icebp
out
push
push
pusha
shrb
cmc
adcl
and
sti
cmpb
aas
or
test
ja
lods
mov
dec
into
jp
lods
iret
lock
jnp
mov
pushf
fsubl
jnp
push
mov
jns
jmp
insl
fwait
imul
cmp
loope
lret
pushf
jnp
sbb
addb
xor
jecxz
and
xor
pop
fsubrs
call
pusha
and
jmp
jnp
sbb
mov
lea
dec
std
jnp
lods
clc
fldl
pop
jnp
dec
jp
adc
add
dec
xor
out
mov
mov
pop
or
fldenv
dec
ss
out
ret
test
leave
cmpsl
or
cmp
or
fwait
adc
insl
rcrb
mov
push
jge
test
lret
fcoms
jnp
mov
bound
or
jnp
leave
sarl
popf
cmp
xchg
push
adc
aaa
stos
jnp
mov
or
pop
shll
jmp
jne
lds
dec
iret
jne
ljmp
mov
push
ret
xor
out
jg
sub
bound
jl
enter
cmp
out
pop
adc
inc
push
jnp
jp
push
push
ss
popa
jnp
mov
jl
shlb
dec
and
jae
loope
idivl
inc
cmp
sub
push
testl
into
stos
out
inc
cmpl
pop
das
or
cmp
ss
pusha
jnp
xor
mov
jnp
xchg
push
jo
push
cmc
xchg
push
jnp
dec
pop
add
pop
mov
cmp
sub
and
inc
lahf
inc
sbb
insb
out
mov
cwtl
out
aaa
insl
ret
jnp
cmp
movsl
mov
push
or
and
icebp
jne
mov
jnp
or
cmp
xor
imul
jae
push
into
push
mov
cmp
popf
cltd
inc
jg
jnp
xor
sbb
mov
inc
jnp
cmpsb
mov
xor
mov
lret
inc
daa
jnp
aam
push
xchg
cld
and
ja
pop
push
jp
mov
push
inc
aad
fnsave
out
cmp
push
hlt
sbb
jbe
rolb
ss
mov
xchg
jb
mov
dec
mov
and
int
jo
subl
dec
imul
shll
lret
jnp
sub
cmp
inc
xchg
add
inc
xor
fstl
xchg
gs
jnp
lods
or
or
jae
mov
das
cmp
inc
jnp
sub
call
pushf
xchg
sbb
ret
push
mov
mov
sub
insb
sub
stos
dec
loopne
repz
jae
jle
or
fsubrp
inc
or
mov
testl
push
xchg
jnp
xchg
mov
ret
shrl
push
xchg
sub
call
enter
fistpll
test
int
inc
and
jp
ret
jnp
add
lods
daa
mov
jnp
popf
out
and
push
insl
lret
adc
rclb
jo
sub
mov
dec
test
shlb
jge
jb
insb
sbb
fldcw
ds
cmpsb
out
jnp
mov
aad
jnp
into
and
sub
inc
jnp
adc
pop
fidivrs
repnz
fildll
pusha
adc
int3
or
dec
jg
inc
fildl
jnp
aas
aaa
xchg
ljmp
pcmpeqd
adc
arpl
pushf
or
outsb
push
pop
xor
pop
lods
and
and
jno
inc
mov
mov
loop
push
fstpt
test
stc
push
mov
out
jle
insl
mov
imul
sti
pop
jns
repnz
lods
imul
jno
pop
jecxz
mov
pop
mov
or
mov
outsl
mov
stos
mov
dec
dec
xor
and
push
insb
lods
cwtl
jb
in
and
cli
iret
jnp
xor
std
sbb
das
call
mov
mov
dec
jne
inc
mov
jae
aam
aam
mov
imul
test
add
jbe
push
mov
jnp
mov
in
jnp
ja
jmp
dec
and
ret
mov
or
jnp
out
inc
cli
popa
sahf
pop
testb
mov
jnp
pusha
mov
imul
nop
imul
aad
ret
sbb
lods
inc
data16
xchg
mov
cmpb
inc
loopne
aas
cmp
mov
outsl
lcall
push
int3
mov
ret
insl
jnp
dec
fistpl
inc
ja
stc
stos
jae
sti
lods
push
jnp
leave
dec
int
mov
jge
sbb
aam
xchg
jb
lods
push
and
or
fs
jnp
je
fidivs
icebp
xchg
jecxz
ss
lock
mov
fwait
test
testl
lea
push
jnp
sarb
and
out
shll
stos
and
xchg
mov
clc
sbb
sub
rcll
mov
sub
cmp
add
adc
xor
outsb
loope
imul
xchg
mov
pop
cmp
push
and
jae
xchg
rcrb
pop
sbb
adc
nop
sub
pushf
sbb
cmc
mov
xor
test
jle
add
in
int
pop
or
cli
xchg
sbb
int
addr16
lret
xor
mov
inc
mov
sti
insl
lods
out
push
sub
pop
repnz
rcl
jnp
add
popa
addl
inc
pop
dec
cmpsb
xor
mov
movsb
jno
inc
sbb
adc
mov
lret
sahf
dec
sbb
movsl
fists
mov
insb
repnz
pop
inc
push
xchg
outsl
or
adc
aad
in
or
repz
cmp
jecxz
push
daa
aad
imul
sub
jnp,pn
ret
cmp
movsl
adc
lret
hlt
xchg
imul
pop
negb
test
mov
cwtl
sub
sbb
push
scas
icebp
ds
imul
popa
sub
ja
shlb
mov
pop
add
loope
ficompl
jnp
push
sbb
je
lret
jnp
sub
xor
enter
mov
add
push
pop
xchg
adc
xchg
jnp
js
scas
ret
insl
sub
cmp
idiv
outsb
outsl
push
jnp
push
aaa
or
or
jnp
ret
xchg
inc
bnd
cli
cmp
xchg
xor
into
jle
or
jnp
addr16
sub
fimull
stc
imul
jnp
and
pushf
jnp
repz
mov
jnp
lods
cltd
pop
repnz
and
int3
pop
clc
imul
pushf
jnp
mov
xor
cmp
push
shlb
imul
cli
sar
jae
pop
mov
inc
jnp
add
push
cwtl
clc
js
or
xor
jne
mov
mov
and
fisubrl
jnp
loopne,pn
mov
mov
mov
lret
lods
add
lds
adc
sbb
adc
sub
sti
pushf
inc
arpl
clc
stos
lods
mov
sbb
jge
mov
pop
shr
cmp
mov
mov
inc
or
insb
jnp
xorb
fwait
lods
lock
jnp
and
pop
lods
xor
jp
jno
cmp
mov
cmp
sbb
in
jecxz
shll
jnp
cmp
adc
ficomps
repz
aaa
bound
inc
xchg
push
or
ret
add
pop
sbb
ja
jo
call
jmp
push
add
xchg
lret
mov
or
lods
and
xor
push
mov
aas
jnp
sbb
jge
js
adc
push
or
jnp
lret
push
pushf
push
jbe
mov
sbb
pop
or
daa
sbb
dec
dec
ret
movsb
or
add
fs
lret
jnp
daa
jp
outsb
pop
in
jnp
movsl
jae
sub
jo
sbb
fidivl
cmp
jg
xchg
arpl
mov
dec
and
fldcw
cmpl
aam
pop
in
dec
jnp
js
enter
adc
xchg
icebp
jmp
repz
jnp
loope
out
adc
jnp
inc
or
movsl
dec
pusha
add
cli
scas
lods
imul
jae
enter
repnz
cwtl
dec
out
sarl
push
sub
and
or
mov
adc
movsl
daa
popa
out
shll
jnp
dec
pop
data16
push
adc
jb
jnp
jne
iret
mov
or
cmp
icebp
inc
xchg
dec
xor
jnp
mov
test
inc
xchg
mov
lret
cli
mov
cmp
popa
jnp
ja
in
push
sarb
daa
cltd
xor
mov
jnp
frstor
pop
jnp
add
loop
and
jnp
aam
inc
das
lcall
sub
fcmovnb
jnp
inc
pop
add
js
push
xchg
sub
mov
jne,pn
or
or
scas
mov
xchg
lods
jno
aam
jnp
sbb
rcrl
lret
loope
lea
jnp
cmp
sub
pop
lcall
pop
popa
add
lods
jb
or
pop
and
jnp
xlat
pushf
jne
shlb
sti
ret
cld
sbb
dec
pusha
daa
ret
fldt
jmp
dec
addr16
ret
jne
andb
mov
mov
inc
or
xor
sbb
add
outsl
lods
inc
out
fbld
jnp
outsb
and
sbb
testb
push
cmp
mov
movsb
or
mov
fidivrl
sub
andl
aam
pop
hlt
push
mov
loopne
mov
mov
mov
shll
roll
lret
push
cmp
and
pop
push
das
jnp
sti
out
push
inc
jbe
jbe
mov
in
data16
rcrl
jnp
shrb
call
xchg
cmp
jbe
or
jnp
xor
fistpll
pushf
je
scas
cltd
sub
rcrl
sub
jae
or
or
and
mov
jl
and
sub
cmp
aas
pop
imul
cs
pop
sbb
js
std
jnp
popa
out
mov
ja
pop
xchg
clc
fdivrs
incb
push
icebp
and
repz
or
scas
sub
jnp
inc
inc
out
cmc
popa
jmp
lcall
in
mov
loope
pop
and
push
loopne
cmp
lretw
std
add
aad
xor
in
jnp
xor
add
sahf
imul
or
pop
jnp
dec
inc
sbb
mov
mov
mov
pushf
in
inc
xchg
das
in
call
loop
xchg
subl
inc
jg
sub
sub
pushf
into
push
jnp
xor
ret
jnp
fidivl
mov
outsb
enter
mov
xchg
mov
outsl
cld
aam
shll
stc
lds
fistpl
out
jp
sub
mov
pop
adc
fdivl
subb
ficompl
inc
mov
mov
or
inc
jae
sbb
mov
scas
adc
jae
cmp
xchg
jnp
mov
mov
daa
xor
cs
inc
push
imul
mov
mov
or
lcall
aaa
imul
mov
jp
testb
lret
xor
pop
dec
jnp
shr
mov
test
in
jnp
cltd
jmp
xchg
dec
mov
jnp
mov
loop
lret
sbbl
sub
push
push
push
jnp
pushf
and
cmp
call
and
ret
pop
dec
sub
movsl
pop
jnp
cli
inc
lods
push
sbbl
mov
jnp
sarl
jg
into
shrb
lahf
push
dec
jnp
xor
in
sub
shlb
leave
jb
lahf
nop
adc
lcall
cmp
rclb
sbb
jns
pushf
shrl
fldt
adc
jbe
in
pop
imul
stos
fucomip
dec
js
lds
sahf
pop
add
jnp
ss
lods
cmp
mov
jnp
jo
cmp
add
jnp
push
sahf
cs
sbb
mov
int
es
jns
jnp
and
sub
cs
cli
or
aaa
lcall
fimull
testb
mov
jnp
add
sub
cmp
out
xchg
fsubrs
out
aad
popa
hlt
fwait
aam
mov
jnp
add
push
push
cmp
sub
lock
or
xchg
inc
cmpsl
ss
or
sbb
lret
mov
pushf
push
enter
in
repnz
nop
add
add
scas
sbb
movsl
adc
jnp
pop
sbb
andb
popa
jle
pop
cmp
xor
mov
and
shlb
mov
nop
insb
fldt
xor
lods
or
cmp
imulb
popf
dec
cmp
jp
jnp
pop
js
adc
cltd
xchg
adc
push
sub
jnp
xchg
add
sub
idivl
jge
outsl
pushf
pop
faddl
inc
cmp
xor
and
lods
or
pop
mov
jae
jnp
mov
hlt
or
pop
jnp
dec
repnz
sbbl
xchg
cmp
aam
ds
inc
lock
jnp
cmp
enter
mov
mov
xchg
jnp
std
push
scas
das
mov
ds
insl
mov
sbb
jno
ficomps
movsl
mov
mov
shll
xor
xchg
and
mov
popa
cmp
mov
pop
scas
mov
xor
inc
mov
jne
out
cmpl
loopne
mov
lods
pop
lods
fbstp
add
aaa
or
lock
jnp
push
pop
mov
mov
ds
jecxz
sub
xor
xor
daa
mov
ss
popa
mov
outsl
loope
add
and
dec
mov
je
mov
jnp
xchg
pop
push
pop
xchg
jae
int
js
sub
add
xor
add
mov
inc
sub
jnp
fucomip
je
xchg
push
mov
repnz
sbb
outsl
les
mov
aaa
int
jnp
sub
mov
andl
xor
mov
in
outsl
jae
in
pusha
jo
imul
jecxz
mov
adc
add
in
adc
lods
mov
jp
xchg
add
cs
push
aam
lret
jnp
push
insl
in
push
nop
jns
or
popf
lods
or
jno
dec
jnp
in
pop
mov
mov
sbb
lret
inc
jnp
cmp
xchg
sub
jae
in
inc
jnp
gs
and
inc
sbb
aaa
sahf
ja
cmp
mov
jbe
dec
jl
js
xor
outsl
or
push
hlt
push
cmp
rol
out
cmp
inc
jnp
pop
into
mov
xor
xchg
push
jp
loope
mov
cwtl
jecxz
mov
push
sub
sarb
out
pop
fdivrs
jbe
sbb
dec
lods
sub
les
adc
inc
inc
pusha
cmpb
scas
int
push
adc
fsubrs
jnp
mulb
jnp
inc
jbe
sbb
popf
or
mov
imul
inc
jle
jnp
stos
xchg
insl
inc
push
push
sarb
js
pop
pop
popf
mov
mov
aas
add
scas
sub
or
fs
insl
fsts
aaa
push
adc
jae
out
test
nop
jnp
xchg
insl
and
and
push
push
out
or
mov
insl
into
push
dec
jns
xor
xchg
iret
iret
jae
lock
imul
xchg
mov
mov
es
jnp
jg
sbb
shlb
jnp
insb
mov
jnp
lods
pushf
adc
jnp
adc
pop
or
fbstp
loope
loopne
mov
fmul
roll
js
popa
sbb
pop
push
jg
mov
lret
pop
jne
jae
lahf
adc
das
jnp
int
mov
cltd
jmp
lods
push
mov
mov
je
mov
mov
fistl
negb
rclb
xchg
cli
jne
aad
mov
imul
in
push
fisubrl
lret
mov
clc
pop
enter
xlat
outsl
cmp
in
jae
sbb
stc
or
push
mov
push
popf
lret
loopne
jo
jnp
jne
outsl
into
jnp
test
dec
jnp
sbb
mov
xchg
inc
sbb
jns
out
push
mov
push
push
jp
lods
idivl
xor
xor
sbb
inc
clc
jnp
cmp
fistpl
xchg
jnp
pop
std
stc
add
inc
inc
pop
dec
cmp
mov
das
push
gs
lea
xor
cmpsl
pop
fmul
in
inc
add
mov
int
inc
sti
pushf
imul
mov
and
mov
jmp
jnp
and
add
cmp
xchg
xchg
pushf
sub
faddl
sbb
cmpsl
adc
xchg
mov
xor
jmp
cmpsb
or
lods
mov
lds
loop
in
js
icebp
test
jmp
mov
jnp
movsb
in
enter
or
jb
mov
jnp
mov
or
sbb
rorl
xchg
insl
dec
mov
jnp
outsl
fisubl
lret
or
pop
test
or
js
fdivrs
pop
xor
jb
jnp
push
dec
pop
ffreep
sbb
xor
sub
cmp
imulb
testl
shrl
stc
sub
lods
testb
out
shlb
mov
int
push
xor
xchg
or
mov
nop
pop
or
jnp
sbb
out
dec
and
lods
lret
mov
mov
repnz
sbbb
dec
fidivrl
jle
mov
mov
and
pop
jge
jae
xchg
sbb
dec
testb
jnp
xor
mov
jnp
jae
imull
jnp
jne
nop
mov
ror
cmp
sbb
mov
cvttps2pi
dec
loope
cmc
push
out
lea
stos
inc
inc
or
pop
inc
jmp
dec
outsl
dec
sub
and
js
mov
sub
les
daa
dec
aad
adc
stc
lcall
stos
stos
loop
jo
xchg
sahf
inc
jge
jnp
data16
jnp
pop
je
mov
int3
cmpb
hlt
aad
mov
shll
adc
cli
jnp
xor
jnp
add
loope
daa
mov
jne
lock
adc
outsb
repnz
iret
pop
fs
inc
mov
xor
stos
and
push
xchg
add
mov
mov
outsl
mov
cld
mov
mov
arpl
jg
push
clc
jnp
mov
lret
xor
dec
mov
adc
mov
push
sub
js
add
mov
xlat
arpl
push
jae
xor
sub
jo
pop
mov
ds
scas
aaa
xchg
xor
cli
push
mov
xchg
cmp
sarl
mov
test
mov
adc
fdivp
fstpt
sub
push
jnp
sahf
and
rcrb
imul
clc
xor
pop
xor
fnstsw
in
jno
pushf
gs
dec
in
negl
pop
dec
out
aam
stos
jnp
jp
clc
arpl
pusha
adc
dec
mov
cmpsl
lock
lods
pop
repnz
add
je
out
xor
dec
lret
lds
test
cmc
call
testl
outsb
adc
popa
rclb
jnp
call
mov
jnp
push
lret
test
sarb
jge
pop
sbb
in
scas
aaa
mov
fstpl
fidivl
mov
outsl
cmp
pop
mov
jnp
jb
lds
imul
flds
int
test
sub
ja
into
dec
and
push
push
test
cwtl
cld
mov
mov
out
add
push
push
and
jnp
xor
push
sahf
pop
cli
mov
insl
movsl
mov
jnp
mov
sbb
rolb
jae
xor
xchg
ss
pushf
js
hlt
jae
mov
jnp
or
scas
test
call
and
cld
hlt
jnp
adc
mov
lds
jg
xchg
test
jnp
jno
xchg
or
sbb
jnp
mov
and
pushf
and
cld
sbb
repnz
and
insb
pop
xor
sbb
enter
int
test
push
jnp
icebp
fbld
lret
sbb
mov
das
jnp
in
jns
sbb
jnp
imulb
ss
mov
jnp
dec
add
mov
and
dec
loope
lock
xchg
insl
out
lock
jmp
cmpsl
ja
jnp
cmp
mov
mov
cmp
xor
mov
add
dec
sub
push
imul
stc
repnz
insb
aas
jno
xchg
cmp
bound
push
sub
scas
jnp
inc
jp
xchg
cli
and
pop
sub
add
jo
or
jae
popa
ja
scas
inc
shll
test
aas
mov
push
xlat
push
js
mov
xor
arpl
in
stc
xchg
ss
sub
sub
cli
pushf
int
outsb
ret
jnp
fidivl
push
sbb
xchg
aaa
test
push
insb
pushf
push
or
aad
and
jno
push
mov
shll
call
cli
or
xchg
add
adc
inc
outsb
jnp
notb
push
sti
scas
fstpt
addr16
mov
aam
xchg
hlt
jb
jnp
mov
push
xchg
and
add
loop
testl
bound
out
cmp
inc
xchg
jnp
xchg
mov
xchg
fidivrs
test
mov
clc
xchg
mov
jnp
xor
add
addr16
jle
and
add
hlt
rcrb
in
push
mov
add
adc
hlt
jbe
es
pushf
dec
ss
jnp
mov
outsb
js
mov
std
jnp
add
cmp
inc
push
or
adc
movb
lret
jnp
dec
out
cmp
mov
sbb
ds
int
mov
jnp
xchg
push
inc
dec
jno
cmp
mov
cli
cmp
add
aam
push
push
repnz
test
orl
adc
xlat
mov
cmp
int
outsl
xchg
mov
pop
fsts
add
ret
jnp
insb
xchg
sbb
out
push
or
cmp
jnp
xchg
sbb
cmp
add
imul
add
cmc
pop
dec
rcrb
out
insl
js
or
movsl
out
mov
sbb
dec
jle
popf
ret
mov
lahf
test
add
mov
mov
or
insb
pop
sub
and
mov
xor
push
jmp
popa
insb
jle
jnp
insb
mov
jmp
add
or
lock
mov
idivl
movsb
xor
push
aam
jnp
repnz
or
pop
or
sbb
inc
loopne
xchg
inc
fcoml
jnp
fs
ficomps
imul
jnp
mov
xchg
data16
lcall
mov
add
clc
cs
in
jbe
nop
xor
jnp
or
loop
lret
cmc
pushf
repz
arpl
dec
rcl
out
fisubrl
inc
lods
mov
loope
and
push
cmp
add
jnp
cs
ss
jnp
mov
jnp
push
jns
in
insb
data16
sub
ret
or
and
sbb
mov
mov
into
pushf
jnp
pop
ja
repnz
ljmp
add
ja
and
mov
push
mov
xor
shrb
popf
outsl
jnp
mov
jb
cmp
iret
adc
lret
dec
ljmp
insl
and
mov
ret
lds
jbe
lahf
and
add
cltd
mov
xor
inc
or
ja
jp
or
sub
inc
testl
shll
push
xor
mov
idivb
cmp
cmp
push
lock
mov
sbb
pop
cmpsl
aam
jae
mov
xor
pop
cmp
xchg
mov
insb
dec
sub
xchg
sub
sub
insl
cmp
jnp
mov
inc
int
jnp
inc
fstpt
ss
jnp
or
mov
dec
pushf
mov
jnp
arpl
xor
addr16
or
je
ret
sbb
jae
outsb
aad
cmp
in
outsl
cmpsb
cmp
push
dec
sahf
jnp
mov
adcl
stc
pop
ljmp
jmp
push
mov
aad
test
dec
in
lods
mov
xor
rorb
mov
xor
sbb
outsl
dec
xchg
cli
sub
stc
out
or
jns
test
fwait
xchg
inc
jo
pop
jge
jnp
imull
jnp
hlt
daa
pop
lods
sbb
jmp
mov
mov
ljmp
negl
movsb
jne
stos
loope
outsl
lods
outsl
jmp
mov
mov
or
insb
lock
cmovns
pop
xchg
int3
ss
lret
cmpb
jo
popf
hlt
sti
imul
cmp
pop
aaa
xchg
jnp
mov
negb
cmp
js
ja
loop
jge
insl
push
jnp
adc
cli
xchg
dec
test
insb
inc
mov
jmp
cwtl
jnp
push
in
jnp
xor
int
imul
xchg
repz
jo
cmp
cmpsb
stc
mov
jg
mov
lods
rorl
push
sbb
dec
outsb
je
loope
xor
popa
cmp
jae
test
pop
outsl
test
or
jbe
rcl
negb
cmp
mov
mov
xor
test
fnstenv
mov
jnp
xor
mov
mov
cmpsl
mov
jnp
mov
and
adc
or
js
jnp
mov
jnp
dec
sbb
jnp
dec
dec
xor
in
ljmp
fmul
mov
push
push
outsl
in
adc
dec
cmp
fnsave
add
je
aaa
in
in
cmp
xor
mov
mov
call
jecxz
lcall
push
or
fcomps
and
call
mov
sub
in
cmp
sarb
enter
dec
adc
orb
sti
push
mov
negl
jno
add
lret
or
gs
mov
add
bound
inc
push
jnp
xchg
pop
pusha
shlb
hlt
push
jnp
lock
jmp
loope
jnp
dec
or
jns
mov
jnp
xchg
adc
push
push
adc
js
jecxz
cmp
lds
hlt
mov
jno
aaa
push
pushf
mov
inc
mov
int
jne
pop
cld
xor
mov
data16
sub
mov
jnp
cmc
xchg
xor
lcall
shl
cmpb
das
call
jnp
lea
push
push
inc
dec
sub
sub
adc
mov
roll
mov
jnp
mov
jmp
jnp
mov
lods
sbb
pop
xor
pop
push
lret
fwait
add
sub
pop
addr16
mov
outsb
lret
xor
pop
fildl
rclb
push
and
xchg
setg
cmpsl
jp
jnp
push
nop
jecxz
jl
or
negb
jnp
sarb
lcall
xchg
imul
dec
out
mov
xor
mov
jnp
jg
inc
cmp
jnp
cmp
pop
repz
dec
mov
clc
mov
jnp
xor
loop
shlb
fwait
push
mov
int3
xchg
lock
jnp
jg
loope
into
cmpl
cmpsl
inc
xchg
push
and
push
sbb
jnp
aad
xor
popf
mov
in
lcall
sbb
repz
jb
test
scas
and
aas
iret
icebp
xor
sbb
dec
rcrl
pop
jnp
ror
fldt
xor
adc
repnz
cwtl
imul
scas
insl
xchg
in
xor
jnp
cmpb
sbb
push
imul
jae
jo
je
jnp
das
std
arpl
loope
jge
mov
pushf
and
inc
cli
shr
mov
jbe
out
mov
mov
arpl
xchg
outsl
add
data16
scas
xor
mov
mov
dec
movsl
sbb
xchg
mov
and
enter
add
inc
jnp
and
push
inc
jae
call
insb
subb
in
aaa
popf
mov
push
mov
inc
adc
jb
minps
mov
mov
imull
mov
add
fistpll
sbb
push
push
test
mov
les
or
push
and
dec
lret
mull
sahf
jno,pn
rorb
lods
adc
fsubs
and
in
xchg
jnp
das
jno
incb
jnp
jp
stos
bound
sahf
sbb
fadds
out
imul
pop
outsl
inc
pushf
jnp
arpl
orl
stos
out
stc
fidivl
jae
ret
bnd
cmc
dec
adc
cli
sbb
je
and
push
jnp
cmp
sub
push
xor
xchg
clc
jae
mov
insl
lds
int3
or
test
gs
sub
sahf
push
pushf
arpl
inc
xchg
jnp
negl
fistpl
dec
mov
cmp
jnp
sti
inc
push
aam
imul
mov
jg
xchg
pop
xor
add
push
not
dec
in
push
jnp
inc
fwait
data16
xor
mov
out
icebp
aad
aaa
jnp
sti
pushf
lahf
in
out
mov
sub
shll
adc
mov
call
pop
test
fisubrs
pusha
push
push
cmpsl
cmp
hlt
jnp
jae
fiaddl
jecxz
adc
daa
dec
out
mov
hlt
in
pushf
decl
mov
or
add
out
cmp
jb
jnp
mov
in
int
jge
jnp
jno
cmp
gs
jnp
push
movsl
add
ss
sbb
jnp
cmpsb
in
out
xchg
jnp
pushf
test
aas
int3
jo
pop
lock
enter
jnp
std
scas
jns
mov
mov
jnp
jae
push
int
jnp
sub
repnz
mov
add
jae
int
imul
iret
push
mov
lods
jnp
xor
add
out
jb
jbe
out
loopne
or
inc
bound
imul
imul
xchg
lods
push
fstpt
xor
xchg
fs
cmp
inc
cli
mov
popf
imul
divb
xor
sub
fwait
jnp
cmp
dec
or
jnp
out
shl
pushf
mov
sub
imul
jge
mov
ja
in
cmp
pushl
jae
pushf
imul
dec
jnp
sti
loopne
cwtl
cmp
adc
dec
pushf
xchg
add
pop
push
insb
jecxz
out
loope
jnp
dec
popl
dec
mov
jns
bndstx
fxch
in
sbb
push
add
cmp
jnp
cmp
cmp
jnp
sub
lods
lcall
jnp
dec
lahf
mov
jnp
into
lret
mov
mov
imul
in
add
iret
dec
movsb
mov
jnp
or
or
xor
mov
jnp
ss
mov
xor
mov
cmp
or
or
xor
push
inc
xlat
jnp
mov
push
les
push
dec
mov
inc
outsl
sbb
cmp
mov
lds
jnp
lods
sub
push
pop
movsl
fnstcw
gs
lea
stos
inc
push
sub
outsl
imul
jno
mov
test
mov
inc
jge
imul
imul
outsb
mov
shl
pop
dec
xor
in
out
popf
or
xchg
jne
xchg
dec
insl
sub
jbe
das
cwtl
out
outsl
jl
repnz
int
in
pop
data16
in
dec
rclb
insl
sub
add
jl
iret
push
jns
fmul
outsb
out
jnp
imul
push
mov
fimuls
cmpl
sub
movsb
mov
add
lods
push
cwtl
clc
cli
mov
js
jnp
push
mov
mov
mov
stos
inc
sub
dec
les
icebp
mov
mov
cmp
sarb
loope
lods
jmp
push
adc
xor
nop
jae
inc
lock
jno
mov
cmpb
je
rcrl
dec
movsb
jge
jbe
inc
ja
test
scas
repnz
jo
mov
inc
aam
xchg
jp
mov
test
cmp
push
pop
or
lods
adc
jnp
movsl
icebp
pop
mov
jnp
mov
cmp
jp
pop
loope
jb
js
clc
jnp
into
mov
out
in
call
cmp
mov
mov
test
out
ret
mov
mov
fwait
push
test
jno
lcall
enter
sub
jnp
daa
push
xchg
and
fs
jnp
dec
shlb
push
gs
mov
xchg
arpl
sub
push
test
faddl
aaa
ret
mov
jnp
jmp
popf
leave
sbb
sbb
js,pt
jnp
inc
cltd
sbb
dec
or
shll
add
or
in
jnp
lcall
mov
lods
fwait
xor
outsl
insb
pop
sub
frstor
loopne
adc
add
fcomps
sarl
add
cmp
lods
pop
scas
pushf
sbb
outsb
dec
adc
jnp
xchg
pop
les
push
aaa
push
or
mov
stc
arpl
mov
sbb
jge
loopne
pop
lret
xor
cmp
cli
lock
sub
ja
jl
in
pop
hlt
jnp
push
lods
loop
mov
push
ljmp
dec
out
push
sub
cli
mov
jnp
hlt
outsb
push
jnp
ret
fwait
dec
inc
divb
insl
or
dec
insb
jbe
xor
jnp
in
lret
hlt
inc
cmpl
or
pop
xor
jnp
mov
pop
enter
jnp
pushf
mov
sbb
gs
repz
jnp
or
inc
pop
jmp
or
sbb
jnp
xor
sub
dec
js
outsl
push
loope
insl
mov
cmp
rorb
push
jnp
and
add
xchg
je
in
in
cwtl
cmp
jne
inc
mov
sub
lret
jnp
mov
loop
sub
rorb
push
ja
sub
lret
emms
push
loopne
mov
sbb
in
pushf
jnp
in
jg
stc
ljmp
fnstenv
repz
pushl
sti
sarb
pop
jae
xor
sbbb
xor
mov
jnp
jb
jno
repnz
pushf
fsubs
lcall
fsubrs
ss
andb
lahf
jnp
in
adc
lret
jnp
sub
ret
mov
dec
inc
sbb
insb
mov
shll
inc
jb
mov
jo
loop
adc
popf
test
bound
xlat
jnp
adc
push
cmp
mov
jnp
iret
sbb
adc
push
jnp
xor
sub
add
data16
jnp
sbb
jmp
pop
or
jnp
dec
or
popf
jnp
push
sub
arpl
cltd
lahf
shrb
mov
jmp
ret
xchg
xchg
or
sub
pushf
fdivp
mov
cld
cmp
or
loope
mov
loopne
inc
or
push
xchg
jbe
mov
inc
sarl
jnp
imul
jnp
xchg
mov
adc
nop
shlb
rcrl
cs
pop
call
or
jnp
push
dec
cmp
lods
push
fcmovbe
repz
cmp
jnp
pop
fs
cmp
dec
arpl
push
xor
adc
aas
mov
fsubrs
out
push
and
xor
lret
mov
or
arpl
test
or
je
pop
enter
mov
popf
dec
loopne
xchg
imul
fstpl
cmpl
dec
xor
sbb
pop
cmpsb
sub
inc
jecxz
sbbb
je
fwait
xchg
ja
adc
add
push
sbb
xchg
and
pop
adc
sbb
aam
mov
cli
or
cwtl
adc
aam
or
mov
lods
dec
pushf
adc
imul
add
adc
sbb
sysenter
jnp
shll
ja
in
lods
add
aaa
dec
loop
addr16
sub
arpl
outsb
ljmp
cmp
jae
sbb
ret
adc
jnp
xchg
fdivr
pushf
mov
mov
or
ja
addr16
push
fistpll
insb
lret
mov
inc
lcall
sbb
or
gs
in
add
mov
sbb
lock
xchg
fstl
pop
sbb
outsb
push
fcos
ss
inc
ja
jnp
fdivl
in
push
jnp
ficomps
pop
sbb
jnp
mov
cmp
sbb
mov
fisttpl
jnp
test
or
jnp
mov
imul
mov
movsb
insl
hlt
xor
mov
incl
lods
test
lods
lret
cmp
adc
sbb
cmpsb
add
xchg
out
stc
sbb
lods
push
fwait
sbb
test
xchg
jnp
dec
cmp
call
in
in
jnp
loope
adc
les
cmp
jge
cmpsl
jnp
cmp
sbb
rol
dec
les
insl
mov
stc
mov
xchg
lret
sbb
add
jae
mul
sub
out
jl
call
scas
imul
add
icebp
mov
idivb
stc
lahf
jae
and
jnp
ljmp
or
cmpsb
add
sbb
jnp
adc
push
in
mov
mov
cmpsl
out
testb
jnp
or
fwait
insb
in
sbb
xchg
pop
mov
test
das
js
jnp
sub
pop
call
pop
shlb
test
add
mov
jo
jnp
jns
insl
cmp
pop
and
xor
insb
mov
jnp
jecxz
mov
inc
hlt
jnp
lock
ljmp
je
imul
mov
scas
je
call
fmull
pushf
rorb
cmp
ret
xlat
daa
in
xchg
dec
mov
aas
cmp
inc
jnp
stos
repnz
ljmp
jp
lret
inc
jnp
int
fld1
stos
xchg
cmp
or
cmp
lds
push
ljmp
xor
std
jge
orl
pop
outsl
xchg
push
pop
push
push
push
pushf
xor
push
in
fcmovnu
add
inc
mov
cmpsb
gs
jb
in
imull
sub
inc
repnz
imul
lock
and
mov
xchg
cmp
xchg
jnp
mull
push
xchg
adc
in
fwait
xor
sbbl
lds
sti
jecxz
sub
lea
pop
mov
int
aad
add
xchg
jnp
rorb
popf
pop
lahf
push
cmp
and
shll
cltd
inc
adc
cld
faddl
push
mov
cmp
jne
xor
jno
jnp
mov
rcrb
out
xlat
push
testl
fwait
and
mov
je
xchg
pop
lret
push
sbb
nop
jnp
xor
and
add
pop
pop
jle
sahf
adc
dec
add
daa
pop
xchg
cwtl
shrl
mov
repnz
dec
add
pop
mov
jge
cs
lret
jnp
insb
dec
dec
and
or
jno
inc
ss
jno
repnz
outsl
insl
push
jnp
repz
mov
jg
rorb
js
in
xchg
and
cmp
lcall
cli
push
pop
cltd
dec
lcall
sarl
aaa
pop
cmp
cli
into
jg
and
mov
mov
xchg
sbb
jmp
roll
dec
or
ja
add
jne
imul
and
mov
in
xor
xchg
xor
outsl
lret
mov
ss
adc
or
loopne
movsl
sub
daa
mov
mov
mov
jae
pop
inc
out
mov
insb
lods
in
push
pushf
sub
repz
jb
addr16
jno
push
inc
jmp
add
jnp
js
pusha
xor
sbb
inc
jnp
sahf
ret
jle
sbb
mov
cld
popf
inc
and
dec
push
jnp
cs
stc
aaa
xor
fidivrs
sub
icebp
fstps
push
lret
clc
xchg
hlt
mov
inc
pop
out
and
jnp
mov
in
daa
jnp
in
lock
jmp
stos
push
out
mov
pop
hlt
ret
ja
xor
cmp
cmp
jecxz
inc
mov
jnp
stos
fs
test
sbb
in
lods
jmp
lcall
xor
jnp
mov
push
mov
lods
aam
dec
cltd
jnp
int3
xlat
sub
dec
fwait
and
jnp
sbb
inc
out
and
cmpsb
pop
inc
jnp
scas
or
jecxz
test
jnp
cltd
sub
jnp
leave
adc
in
rol
push
pop
in
ljmp
jle
or
pusha
mov
xchg
dec
add
push
jbe
out
mov
aaa
mov
pop
push
and
mov
hlt
outsl
loop
jp
dec
jnp
jne
push
jnp
push
or
in
sti
loope
in
sub
js,pt
mov
and
fdivrs
dec
stos
into
in
mov
push
jnp
mov
pop
lods
jnp
cmpsl
mov
jmp
jp
jnp
test
push
jnp
fnstcw
xor
push
inc
js
lods
dec
inc
scas
sbb
jnp
call
or
push
jnp
pop
bound
stos
pop
insl
mov
pop
nop
adc
jg
push
jns
push
arpl
xor
and
inc
jnp
lods
push
dec
cmp
xchg
lret
inc
pop
push
pop
mov
jnp
sub
jnp
xor
ret
xchg
jnp
mull
push
xlat
repz
jnp
jno
jg
sub
mov
dec
idivb
mov
mov
in
or
sub
into
jnp
sbb
dec
mov
adc
xchg
loopne
mov
cltd
jle
nop
jnp
hlt
inc
mov
out
add
inc
nop
aam
xor
mov
pop
sbb
lret
outsl
test
dec
andnps
sbb
mov
es
or
push
js
js
jmp
and
cs
rcr
fwait
jnp
mov
pop
jo
mov
orb
jnp
ret
pop
pushf
jmp
inc
cli
stos
aaa
push
and
dec
int3
jae
stos
add
or
pop
lret
mov
jnp
and
sarb
fwait
jnp
sti
sbb
cld
dec
in
mov
push
jl
insl
pushf
cmp
mov
sub
int3
flds
je
add
add
sarl
sbb
scas
fidivrs
test
xor
cmpsl
fs
inc
arpl
out
mov
xor
fidivs
mov
shlb
xor
imul
cmp
mov
test
push
insb
out
imul
lret
bound
pop
xor
add
into
out
jnp
jne
ja
out
jnp
repnz
repz
inc
cmpb
sub
fdivl
nop
jnp
sti
enter
pop
cli
jnp
cmp
jae
or
fistl
pop
mov
das
mov
add
aaa
lret
pop
loopne
cmc
lods
loopew
fldt
xchg
insl
dec
mov
sbb
pop
jmp
inc
outsl
imul
aaa
stc
bound
mov
jo
notl
gs
cmc
mov
xor
subb
jl
inc
or
lods
es
mov
inc
sarb
lahf
loop
es
das
xor
jnp
cld
in
push
fldt
fwait
int
mov
imul
lret
push
mov
and
and
jae
arpl
out
lods
loop
les
jnp
cmp
mov
iret
mov
lds
adc
mov
aad
pop
adc
arpl
jae
xlat
sub
arpl
aaa
xor
imul
nop
mov
popa
subl
test
mov
add
jno
xor
mov
mov
sub
popf
gs
jle
inc
int
inc
scas
sbb
loope
mov
cs
sbb
inc
or
in
daa
addr16
scas
jmp
popf
ret
lods
cmpsl
addr16
pop
loopne
pop
xor
or
xor
out
jnp
jno
sub
xlat
in
cmpb
xchg
dec
sahf
lods
jnp
jg
push
clc
ja
cmp
pop
mov
lock
xor
sub
out
out
data16
lods
inc
dec
in
push
out
loope
imul
stc
jo
cmp
and
push
outsb
jno
mov
movsl
mov
or
imul
mov
push
xlat
stos
adc
rol
jae
inc
jg
repz
and
push
xlat
inc
jge
imul
fldcw
push
jmp
xchg
add
sbb
and
jg
dec
fsubs
mov
gs
mov
dec
hlt
fwait
jnp
je
dec
rcrl
ljmp
push
mov
leave
fdivs
pop
xchg
mov
out
addr16
jnp
call
and
dec
push
bound
jns
pushf
jnp
daa
inc
pop
xchg
push
mov
jge
xchg
mov
jno
sbb
dec
fdivrs
fwait
lahf
xchg
out
add
ss
data16
in
out
xor
jnp
arpl
test
dec
outsl
cmp
dec
stos
cmpsb
out
insl
jecxz
andb
lods
jbe,pt
jg
xchg
loop
mov
xlat
sbb
sub
pop
jnp
sahf
lret
bound
push
mov
int3
xor
jg
push
jnp
jbe
in
into
cmpb
sub
xor
mov
jmp
xor
xchg
ss
out
jnp
cmp
mov
call
in
adcl
cmpxchg
push
repz
jnp
sahf
fdivr
pop
cmpsl
lahf
jecxz
cmc
and
dec
pop
lods
jnp
xchg
cmp
jnp
and
pop
inc
add
or
mov
cli
jecxz
or
inc
std
jg
xor
icebp
call
mov
sbb
test
pushf
xchg
add
mov
int3
lods
sub
push
adc
mov
or
shrl
xchg
test
mov
mov
stos
cwtl
fistpll
ss
aas
jo
add
loope
sbb
in
xorl
cmp
es
jbe
inc
push
imul
pop
and
sti
jnp,pt
movsb
inc
sbb
loop,pn
jnp
aam
pop
cmp
mov
gs
dec
xchg
lods
pop
je
movsl
dec
jge
cmp
aam
jne
pusha
test
push
xlat
mov
xlat
and
ja
lods
mov
mov
xor
pop
adc
outsl
adc
loope
xchg
sub
xchg
pop
test
jnp
popa
sub
cmp
jnp
test
idivb
xchg
push
mov
or
jnp
pop
fwait
cmc
cmp
into
sub
jecxz
jae
pop
cmp
dec
or
dec
das
pop
or
imul
out
fcoml
sbb
xor
pop
jle
jae
push
cmp
js
lcall
sub
and
adc
jo
arpl
test
lret
adc
or
pushf
inc
jnp
or
sub
jnp
cld
pop
push
jae
jle
mov
ja
mov
jnp
jp
pushf
pop
testl
adc
mov
mov
ljmp
stc
or
sbb
jbe
sub
dec
stc
test
call
and
jnp
aaa
jne
inc
or
push
jnp
dec
stos
arpl
mov
shrb
pop
clc
cmpsl
jnp
or
add
movsl
cmp
mov
sbb
jg
lea
jnp
jne
das
enter
jnp
mov
sub
or
add
mov
pushf
jmp
xchg
push
mov
push
jmp
and
mov
into
nop
in
lods
mov
jne
dec
jnp
dec
in
icebp
lea
out
ret
jnp
lcall
test
jnp
jecxz
xor
fildll
xor
cmpsb
jnp
jl
xchg
mov
faddp
xchg
repnz
jnp
es
dec
or
or
cmp
xchg
fisttpll
jnp
int
test
jnp
imul
in
inc
test
cmp
lock
fldenv
es
hlt
cmpsl
xchg
dec
icebp
jnp
cmp
xor
mov
int3
stc
mov
sbb
jnp
inc
push
sahf
in
js
cmp
inc
xor
or
jnp
jge
or
ret
fmul
push
xor
shlb
push
mov
or
jnp
xor
add
sbb
cmpsb
pop
in
cmp
ja
mov
push
insl
out
mov
out
jnp
sahf
int3
pop
insl
into
jnp
mov
lods
lea
and
or
pusha
mov
movsb
mov
xor
jnp
pushf
pop
sub
repnz
mov
sub
imul
xor
or
int
jnp
add
sub
cmp
mov
push
daa
dec
inc
test
mov
mov
or
test
ja
lods
pusha
fnstsw
pushf
hlt
loop
pop
cmc
adc
sarb
xchg
sbb
insb
dec
jae
xchg
and
push
mov
push
imul
sub
in
jmp
inc
cmpsl
sub
sub
push
and
or
mov
jae
mov
adc
inc
or
addr16
int3
mov
repz
ljmp
insb
movsb
repnz
jnp
cli
cmc
add
inc
or
or
inc
fwait
mov
es
jo
sbb
jge
jnp
inc
push
psubb
dec
cmp
rorl
mov
imul
int
js
ja
add
and
or
and
aam
add
jnp
fisubrs
lcall
xlat
shll
call
add
sbb
inc
into
iret
inc
les
and
int3
adc
jecxz
mov
cmp
jbe
mov
mov
out
fldt
sub
cli
shll
fisubl
jnp
cmpsb
adc
jnp
mov
inc
push
inc
mov
xchg
out
pop
loope
jae
xchg
pushf
stc
cmp
mov
das
inc
enter
ret
jae
push
rcrl
jnp
pop
adc
or
aad
divl
mov
test
jnp
mov
aam
jnp
dec
sahf
sub
cmp
push
jnp
cmp
and
dec
roll
sub
or
jo
test
fldt
dec
sbb
xchg
sub
dec
scas
insb
and
sub
je
aad
out
xor
jge
jo
sub
or
mov
fadds
bound
aad
mov
andl
mov
adc
xchg
nop
xlat
insb
jbe
mov
sarb
xchg
adc
lods
stos
cmpsl
jne
cmpsb
in
fwait
sbb
pop
shrb
sbb
popf
js
data16
mov
push
out
jnp
inc
lods
mov
shr
movhps
in
mov
pusha
xor
lea
xor
pushf
ljmp
scas
mov
jnp
sahf
cmpsl
lods
mull
and
in
dec
dec
pop
les
pop
cmp
cmp
fs
pusha
test
gs
arpl
mov
xor
adc
out
out
insl
lods
jb
cmp
pop
inc
fdivl
mov
pop
dec
push
cmp
ret
jb
test
sbb
jnp
cmpb
or
notl
adc
imulb
push
js
scas
out
fldln2
es
repnz
jnp
pop
mov
cmp
lock
mov
jnp
loop
sub
jnp
push
or
jnp
rcr
fidivl
in
insl
pop
cmp
cs
mov
pop
mov
popa
dec
aad
mov
icebp
xchg
sbb
cld
lret
jnp
rolb
jns
jnp
mov
and
add
aam
lock
ds
das
pop
dec
mov
push
out
lret
jnp
inc
adc
leave
sbb
scas
in
loop
push
inc
mov
insb
lods
cwtl
add
scas
pop
fsubs
fisubrl
sarl
xchg
fwait
cmp
scas
lock
outsl
shl
lret
jnp
cli
imul
inc
in
test
or
test
adc
jnp
xchg
cmpsl
mov
in
repnz
cmp
lahf
jl
orl
cmp
jnp
mov
sbb
insl
test
or
add
mov
sbb
into
imul
pop
out
xor
pop
pop
push
out
inc
adc
shlb
ret
inc
mov
lret
fwait
push
add
js
mov
in
adc
jbe
xchg
out
mov
f2xm1
in
jmp
sti
jno
into
bnd
in
jb
mov
jge
and
out
cmp
arpl
outsl
jb
cli
hlt
fnstsw
popf
adc
fdivrp
jnp
sti
rolb
mov
icebp
jnp
mov
scas
xlat
sbb
dec
push
mov
push
lock
jo
dec
pop
jg
loopne
dec
out
inc
cli
jae
xchg
sub
sub
jae
sarb
popa
fsubrs
int3
sbb
popf
lods
jp
insb
jae
mov
pop
cmp
lret
jae
mov
fstpl
jo
mov
mov
ficoml
mov
aas
mov
xrelease
mov
pushf
dec
jo
ret
lods
dec
push
xor
in
or
jnp
daa
and
fisubs
pop
mov
shrl
adc
xchg
aas
pusha
jnp
test
jae
mov
inc
inc
jns
jecxz
lcall
jnp
pop
out
lea
cli
movsl
jnp
fisubrl
inc
pushf
ret
cmp
dec
pop
jg
sub
dec
jnp
push
jge
mov
inc
or
mov
push
fdivl
mov
insl
enter
jnp
mov
adc
sub
pop
pop
pop
jge
es
dec
imul
jnp
mov
mov
cmp
jl
inc
xor
add
ret
xor
push
or
out
or
jae
mov
xor
sub
cmp
enter
jnp
or
mov
sbb
push
sbb
lret
pop
jae
push
xor
out
or
mov
jae
popf
aaa
mov
jmp
lret
jnp
out
push
inc
mov
jp
insl
mov
bound
aas
inc
int
jnp
dec
repz
jnp
lock
add
enter
sbb
jnp
pushf
shll
int
movsl
stos
into
test
jg
cmp
push
adc
popf
in
ret
in
cmp
inc
jno
xlat
dec
mov
adc
and
outsb
fwait
jnp
clc
inc
jp
xor
jnp
int3
popf
jae
sub
jg
ja
adc
or
icebp
mov
jl
push
xlat
lret
xor
shlb
int
stos
fstpt
daa
cmp
pusha
xor
lret
jnp
mov
or
jnp
test
rorl
jo
in
nop
cmpsb
stos
pushf
jnp
and
mulb
iret
enter
xchg
sahf
cmp
dec
ds
jg
push
push
mov
jnp
jmp
mov
push
orl
sub
xchg
aas
jnp
push
mov
adc
push
adc
aad
mov
xor
es
imull
cmpl
cmp
out
and
cwtl
mov
shll
adc
fiaddl
pop
movsl
hlt
fcomi
jnp
dec
in
push
cmp
aaa
lea
pop
or
push
and
jnp
shlb
sbb
pushf
jae
imul
scas
jnp
cltd
test
and
movsb
popa
cmpl
mov
or
lock
jnp
pop
pushf
pop
push
xchg
imul
jnp
mov
push
daa
lods
sbb
inc
clc
cmp
mov
pusha
inc
dec
jno
sahf
sbb
push
sbb
or
icebp
pop
jnp
imul
push
jmp
fists
pusha
sbb
rcrl
insl
ret
xor
mov
xchg
cmp
push
mov
cmpb
in
push
out
lcall
or
mov
or
adc
loope
mov
pop
stos
or
in
xor
imul
out
or
jnp
mov
mov
sahf
xorb
adc
mov
pushf
notl
gs
xor
shrl
mov
mov
clc
jnp
out
adc
xchg
repnz
lret
pop
popa
mov
jbe
je
scas
dec
xor
lea
outsl
lret
test
inc
xlat
lods
call
or
test
aaa
cmp
jnp
fiaddl
mov
jns
cmpsb
out
dec
xorl
ljmp
test
push
add
int
in
push
enter
call
jno
mov
or
fstp
pop
cmp
push
jae
mov
sbb
popf
rorl
xor
test
sub
push
pop
mov
jnp
int3
add
fwait
jnp
inc
jb
loop
cmp
popf
jnp
imul
lods
repnz
jnp
ret
pop
mov
xchg
jnp
add
insl
push
mov
insb
movzwl
or
jnp
arpl
add
jnp
pushf
push
mov
dec
dec
jnp
lods
outsb
push
insl
aaa
mov
inc
or
nop
mov
sarb
inc
loopne
jnp
mov
pusha
mov
shlb
rolb
lds
xchg
and
out
add
mov
ja
mov
dec
jno
mov
iret
pushf
sbb
int3
mull
xor
call
xor
pop
xchg
add
sti
lock
aaa
and
jnp
mov
sbb
jb
jo
mov
mov
movsl
sahf
jae
adc
pop
jnp
loop
xor
jnp
sbb
adc
push
push
lods
jp
mov
in
cltd
movl
dec
mov
jp
inc
imul
mov
jnp
inc
fdivs
test
sbb
lret
push
jnp
lock
pop
or
and
dec
mov
pushf
sbb
adc
mov
jle
ja
fstps
and
or
pop
lret
in
test
xchg
fwait
dec
aaa
insb
add
push
js
out
repz
jnp
fdiv
ljmp
inc
loope
out
mov
and
dec
cld
mov
cmp
pop
cmpsb
jne
cmp
mov
and
cmp
ret
push
add
loop
mov
inc
jmp
mov
jnp
xchg
fcomps
mov
jp
cmpb
dec
sti
mov
int
test
push
adc
xor
bnd
fldcw
add
fwait
mov
jnp
sbb
int3
shrl
shlb
xchg
call
icebp
xor
jae
or
subl
lret
ret
cmp
mov
es
dec
xor
and
stos
jb
or
loopne
jnp
jbe
sti
jecxz
mov
cltd
fcmovnbe
in
and
mov
inc
testl
xor
jnp
or
push
je
jnp
pusha
bnd
dec
fwait
mov
pop
imul
pusha
aad
movsl
aas
loopne
mov
add
sbb
mov
data16
xor
pop
jnp
jg
add
jnp
mov
xlat
in
in
jnp
fucomip
insl
subb
inc
mov
cmp
lods
sbb
popa
adc
jo
jnp
lcall
mov
pop
jnp
cmp
test
xchg
adc
add
dec
jmp
cli
scas
xchg
jbe
xchg
cmc
pop
fwait
test
pop
pop
pop
jecxz
add
je
xchg
jnp
mov
sub
jnp
das
nop
add
sub
jnp
pusha
or
sub
cli
das
push
neg
mov
sub
pop
ja
jnp
dec
aam
dec
fsubs
stos
jnp
mov
mov
cmp
jnp
mov
jnp
call
in
jnp
popa
push
dec
out
outsl
and
or
mov
jnp
nop
adc
in
mov
mov
cmc
andl
rorb
jnp
ds
jb
mov
mov
or
push
out
sub
lahf
stos
xor
jae
fidivl
or
jnp
stos
dec
and
pop
call
add
xor
mov
add
jg
and
jnp
in
mov
pop
cmp
cmpl
mov
jnp
test
sbb
insl
lods
pusha
jnp
cmp
add
jnp
xchg
jnp
test
and
mov
lock
lret
repnz
jnp
fcomp
js
fnsave
and
das
enter
and
dec
jnp
es
filds
cmp
loop
inc
test
pop
jnp
inc
cmp
cmp
arpl
dec
out
xchg
cmpb
sub
scas
mov
inc
mov
xchg
jnp
sbb
mov
jnp
movsb
ds
jnp
sbb
and
cmp
or
imul
and
xchg
xchg
jnp
fiaddl
xor
push
ss
fwait
pop
pop
icebp
roll
push
insl
or
adc
jmp
cld
xchg
pop
or
pop
adc
cmp
insl
adc
or
sub
dec
jnp
fs
js
jp
cmp
xchg
and
fstps
or
stc
jae
jns
jmp
jno
in
jae
outsb
xor
push
inc
ja
mov
out
stc
push
lock
repz
fsubs
insb
cmp
and
dec
loop
jnp
mov
jnp
or
or
cmp
sbb
sbb
pop
fiaddl
test
test
push
hlt
out
imul
cmp
sub
dec
mov
mov
fsubl
ficoml
fbld
xor
test
jae
add
loope
sbb
stos
scas
mov
aam
sub
pop
testb
dec
popl
or
mov
and
mov
dec
mov
roll
xor
ds
lret
pop
pushf
das
loop
andl
sbb
aas
xor
sbb
popf
stos
adc
jnp
xchg
cmp
imul
jo
xchg
mov
fcmove
dec
and
gs
mov
adc
movsb
fisttpl
mov
jnp
daa
or
xchg
mov
cmp
inc
pop
sbb
fisubrs
test
and
dec
leave
inc
xor
into
mov
test
in
dec
xor
xor
jmp
xchg
push
mov
scas
mov
mov
xor
inc
cmpsb
cli
push
pop
adc
lcall
cmp
ss
fimull
outsl
lret
into
sbb
lea
mov
adc
jae
sbb
inc
outsl
mov
scas
jnp
in
inc
test
idivl
pushf
inc
mov
lds
ljmp
dec
in
jl
push
mov
lret
fistpl
nop
in
mov
jnp
aaa
push
push
pop
inc
addr16
sub
sbb
lods
sbb
jae
and
or
movsb
adcb
mov
sub
repnz
push
and
jnp
mov
sahf
dec
cmpsb
repz
fmull
out
pop
jnp
ret
push
mov
ret
jnp
xchg
popf
inc
pushf
fnstenv
mov
or
xor
sub
js
xor
mov
jnp
dec
jo
clc
daa
or
cmovb
ja
push
mov
push
lcall
and
jnp
sub
cmp
jg
arpl
in
cmp
jnp
popa
into
cmp
pop
mov
ret
jne
in
or
mov
jp
mov
mov
push
sti
jno
jbe
idivl
mov
sahf
js
push
shrb
xchg
movsl
in
mov
push
mov
test
or
data16
movsb
jne
mov
in
dec
push
xchg
sbbb
jg
push
repz
cwtl
lcall
cmp
cltd
adc
push
mov
jo
stos
out
pop
movsb
sub
add
aad
fldcw
mov
jno
insb
xchg
or
sbb
rcr
imul
or
mov
movsl
sub
fdivrl
jle
aam
divb
in
test
in
adcl
mov
sub
pop
scas
sub
jnp
bound
mov
lea
and
mov
dec
int
insl
sbb
add
ja
bound
call
or
sub
jnp
mov
dec
jnp
sar
xchg
sub
or
or
test
and
jnp
aaa
sbb
cmp
inc
out
xchg
adc
idivl
push
jae
test
nop
or
out
push
mov
mov
jbe
in
adc
jnp
sub
test
xor
in
push
popf
sub
jno
mov
mov
mov
cmp
js
fisubs
xor
mov
mov
xchg
sbb
iret
mov
loop
and
xor
movsb
ss
push
mov
inc
mov
lret
mov
movsb
rcl
xor
test
lret
popa
xor
ror
es
jnp
repnz
push
xchg
pop
adc
addr16
insl
imull
lret
dec
cli
push
sarb
shlb
scas
clc
sbb
jnp
xor
rcrl
icebp
subl
into
jnp
push
int3
arpl
mov
out
jnp
sub
sar
mov
das
pusha
outsl
int
and
mov
scas
int
fcmovne
lods
xor
popa
jge
mov
pop
insb
loopne
mov
cli
push
sahf
cltd
or
or
mov
mov
sub
mov
stos
outsl
jnp
stos
mov
jbe
push
loope
clc
jg
sub
test
popa
cmp
inc
jnp
inc
or
call
jecxz
cmp
mov
jo
jp
fisubrs
add
pop
add
dec
lret
jae
in
jae
fcmovnb
and
sar
jnp
stos
cmc
loope
mov
lret
jb
jno
fcoml
push
dec
cmp
imul
jnp
pushf
aaa
xor
mov
add
mov
jnp
rclb
test
cmp
inc
mov
cltd
add
das
jnp
outsl
dec
insl
push
jnp
push
cli
adc
insb
fnstcw
mov
subl
fucomi
sbb
or
jbe
sub
dec
out
ret
shl
loope
fsubrl
ljmp
and
inc
lret
jne
xchg
loop
in
adc
jle
jae
or
bound
fistl
sahf
jno
int
ss
mov
mov
mov
insb
sar
hlt
mov
inc
mov
stos
pop
pop
jo
call
adc
imul
int
lret
jmp
jnp
push
repz
ret
push
js
inc
mov
fwait
das
dec
mov
fidivrs
insl
or
xor
lods
jnp
mov
or
out
pushf
mov
outsb
xchg
lret
stc
test
les
lds
ja
scas
lret
mov
jbe
popa
in
mov
cmovnp
cli
dec
int
sbb
lods
xor
cmc
fucomip
inc
lea
jns
pop
mov
mov
adc
lods
js
mov
mov
push
push
and
shl
sahf
xor
xor
pushf
push
sbb
pop
stos
lods
and
divb
rcr
adc
jnp
shl
lea
xchg
subl
pop
loope
jnp
mov
or
jnp
mov
fwait
sub
xchg
jnp
fstpt
dec
sti
inc
call
repnz
push
insb
pop
mov
pop
cmp
push
lea
adc
inc
mov
mov
xor
jnp
cmp
jbe
push
mov
add
cli
xor
push
jnp
sub
xor
mov
pushf
out
int
xor
mov
dec
mov
cwtl
mov
xlat
mov
outsl
adc
out
xor
test
push
sahf
ds
fistpll
mov
dec
add
jno
jno
push
call
add
lock
cmp
ret
inc
and
cli
jo
push
popa
fstpt
mov
push
roll
loopne
inc
lods
xchg
xchg
jnp
mov
mov
xor
test
divb
jnp
int3
mov
sbb
jno,pt
cs
push
cli
outsl
pushf
sub
les
into
ja
and
push
pop
rcrb
mov
je
mov
pop
and
jnp
and
inc
cs
jnp
inc
loope
or
aaa
pushf
add
jnp
aad
insl
fs
or
mov
mov
into
mov
pop
insl
pop
rorb
fucom
or
dec
jnp
pop
xor
and
rcrl
jno
negl
jo
jnp
mov
cmp
push
jnp
gs
jmp
push
fs
lods
or
and
mov
push
dec
add
lret
adc
lret
not
dec
imul
lods
test
sti
js
jg
sbb
mov
sbb
jnp
sub
arpl
lret
jecxz
sbb
or
sub
sub
mov
mov
mov
sub
jne
mov
clc
xlat
add
push
cmc
jnp
adc
inc
jnp
push
and
out
in
jnp
pop
or
aad
test
adc
fcmovu
pop
testl
jnp
into
xor
dec
icebp
adc
js
and
mov
subl
push
mov
in
imul
add
in
lds
gs
inc
clc
movsl
xor
push
ljmp
pop
push
imul
adc
pop
int3
jp
jg
cmpb
adcl
mov
sub
sub
sti
and
inc
clc
ret
xor
imul
inc
add
pop
loop
repz
ja
pop
insb
jnp
and
out
cli
aad
jnp
test
std
sub
xchg
cwtl
xchg
cmp
mov
inc
jnp
dec
int
jb
push
out
imul
ret
test
fsubp
insl
fs
xor
aam
xchg
dec
jge
popf
outsb
in
andb
xchg
daa
push
fwait
push
pop
dec
aaa
xchg
pusha
leave
jnp
lods
cmpsl
loopne
stos
cwtl
jbe
aad
lret
pop
mov
xchg
jne
or
mov
leave
mov
xchg
andl
fwait
inc
aas
loop
xrelease
add
mov
jnp
cmp
inc
or
xor
add
mov
jge
push
es
jnp
pusha
pop
inc
mov
jae
inc
xchg
push
lret
imul
push
enter
mov
or
rclb
mov
mov
mov
or
pop
jnp
hlt
or
jnp,pt
mov
pushf
stc
jnp
add
or
lcall
jne
xlat
push
stos
add
xchg
mov
imul
out
or
cmp
inc
xlat
scas
imul
jne
ja
stos
fistpl
mov
stos
imul
mov
cwtl
fsubr
lea
ja
idiv
pop
and
jnp
je
adc
lock
mov
aas
jae
xchg
popa
bndstx
clc
inc
outsl
cmp
mov
ss
sahf
aas
sub
mov
iret
mov
cmpsb
cmpsl
lahf
movsb
jnp
lods
xor
daa
xchg
sarb
icebp
sahf
dec
dec
push
fistpl
jnp
cmc
sub
fwait
out
pop
daa
in
inc
mov
xor
imul
mov
lret
lahf
into
lea
xchg
push
cmp
jnp
lcall
dec
lret
pushf
jbe
in
fwait
or
inc
jns
fidivl
mov
push
jnp
dec
push
push
xor
cwtl
jnp
imull
jns
loop
jno
cmp
dec
fwait
push
push
fldcw
in
pop
or
pushf
adc
jnp
out
ret
rcrl
call
mov
idiv
imul
clc
std
add
in
or
test
jno
jnp
mov
sahf
test
clc
jnp
xchg
inc
inc
dec
daa
push
sbb
gs
cmp
add
into
loop
dec
sub
jnp
push
addr16
dec
mov
xchg
jge
and
or
jnp
pop
jmp
mov
ss
pop
mov
out
lods
in
xchg
idivl
inc
das
jmp
sbb
imul
sub
sbb
arpl
or
insb
aas
cmp
outsb
and
ljmp
pop
sbb
and
sbb
aaa
insl
mov
jnp
mov
mov
jnp
mov
repz
push
fnstenv
mov
jnp
shl
movsl
dec
js
mov
inc
pop
adc
lea
adc
dec
insb
testl
jecxz
push
hlt
stos
mov
in
repz
ja
mov
fistpll
push
int
insl
insb
lret
into
test
adc
sbb
call
xchg
ljmp
sub
rorb
xor
and
pop
add
or
insb
and
mov
jnp
lcall
sub
cs
bound
push
push
pop
cmp
in
pushf
mov
aad
jnp
jae
inc
sub
or
xor
mov
mov
cmpb
pop
adc
fwait
push
js
jnp
mov
je
jg
mov
repz
jnp
or
adc
andb
sub
imul
jb
xlat
pop
jae
jmp
insb
aaa
mov
rcrl
lds
inc
sub
pushf
addl
pop
shl
jae
add
je
loope
aam
sub
dec
xchg
test
sbb
cli
add
insb
sbb
pop
je
mov
dec
test
inc
mov
test
jnp
scas
out
enter
insb
sbb
xchg
inc
mov
into
adc
sahf
sti
int
jnp
sbb
xor
dec
lcall
mov
fwait
jnp
js
scas
lds
push
mov
dec
sub
call
leave
test
cmp
fstpt
xchg
fs
cmpsl
stos
jne
mov
jg
mov
mov
pushl
or
mov
incb
push
in
cli
je
jnp
dec
cmp
lret
pushf
or
jo
and
push
jp
jnp
sub
cltd
sarb
leave
mov
into
fisubl
fcom
inc
jnp
jns
jae
gs
jnp
int3
sbb
xchg
repz
add
clc
lret
int
sbb
lods
in
test
insl
jnp
mov
xlat
out
mov
jp
mov
not
or
fisttpl
inc
sub
rcrb
outsl
push
lret
push
imul
xor
inc
cmp
insb
sub
sbb
xlat
pop
scas
ss
dec
pop
lahf
and
rcll
push
and
xchg
jnp
add
call
add
insb
lahf
jae
shl
mull
pop
inc
sti
sbb
sbb
jnp
add
and
adc
pop
xchg
adc
push
fnstsw
xor
gs
daa
add
jmp
push
mov
pop
ret
cmp
inc
sbb
jnp
in
adc
dec
adc
movsb
lret
lock
cmpsb
idivl
into
or
jnp
mov
test
out
cmpsl
xchg
push
pushf
or
jae
mov
inc
pop
jne
fcomps
xor
in
or
push
push
dec
pop
sub
xor
mov
add
dec
add
lret
sbb
mov
or
cli
sbb
ret
jnp
mov
sub
jl
mov
lods
xchg
les
mov
mov
dec
pop
add
jnp
testb
enter
mov
movsb
in
mov
xchg
jnp
mov
dec
data16
stc
jnp
dec
mov
ss
sarb
rol
inc
jnp
jae
fstl
lods
hlt
jno
jle
loopne
jnp
mov
jnp
lods
mov
je
rorb
sub
mov
stos
jne
pop
jnp
lods
add
ret
mov
sbb
push
imul
test
ja
mov
pop
movsb
hlt
pop
sbb
mov
nop
inc
mov
cmp
push
in
add
div
sarb
dec
stc
addb
outsb
cmp
in
sbb
ja
or
out
sub
lods
jae
and
cmp
push
xchg
inc
pop
pop
js,pt
inc
jl
jmp
mov
lods
insb
lods
call
imulb
ss
cmpsl
jge
test
in
push
repnz
push
loop
sbb
mov
mov
jmp
lds
jl
rorb
xor
mov
add
push
jo
repnz
inc
jnp
jne
outsb
push
cmpb
jb
adc
mov
cmp
inc
js
adc
sub
cmp
ja
push
pop
icebp
jl
loopne
jmp
in
inc
push
pop
dec
lock
adc
xchg
movsb
mov
ja
mov
jnp
mov
jl
jnp
pop
mov
loop
inc
js
mov
jmp
jae
int
jnp
fmulp
imul
iret
mov
dec
fincstp
test
sbb
fdivs
imul
or
or
rcll
jnp
pop
dec
mov
xor
int3
mov
sub
push
addl
sbb
call
dec
mov
jnp
sub
sbb
imul
mov
mov
lahf
popa
or
sbb
add
jnp
in
sub
pop
jnp
jecxz
les
lret
push
mov
dec
ss
dec
adcb
scas
mov
lea
sub
sbb
jmp
ret
lret
jne
and
daa
pop
xor
lret
sub
sub
pushf
mov
stc
insl
lods
jno
imul
scas
push
jnp
mov
pushf
cmp
pop
mov
add
int
or
sub
nop
lods
sub
mov
ja
outsb
add
popf
pop
dec
not
leave
pop
pop
test
pop
push
mov
jnp
inc
inc
push
or
test
dec
pop
or
jnp
outsb
dec
shl
mov
xor
shrl
das
push
mov
lret
cmp
fisubs
pop
pushf
mov
xchg
pop
jnp
jns
ljmp
mov
dec
in
cld
sbb
inc
fsubrs
dec
sbb
mov
sub
jg
shrb
pop
xchg
adc
pop
fidivrl
sub
scas
or
jne
movsl
fwait
sti
jnp
ja
jmp
push
cmc
pop
jnp
or
sbb
pusha
mov
jge
test
add
jmp
aad
cmp
jnp
jp
fwait
mov
jnp
sbb
leave
pushf
cwtl
cld
add
push
into
xor
lods
pop
push
pop
push
imul
jl
cmp
jnp
jae
lods
out
test
jnp
mov
gs
inc
int3
int
jnp
xchg
jbe
call
adc
xlat
xchg
mov
jnp
les
ret
mov
fwait
jg
imulb
jmp
or
loope
and
xor
adc
add
dec
jnp
sub
xor
dec
xchg
rorb
ja
daa
pop
cmp
dec
and
pop
pushf
inc
cmpsl
mov
jnp
dec
fdivl
push
and
loopne
cs
dec
test
lcall
cwtl
jnp
adcl
sbb
mov
inc
cld
fucomp
or
ljmp
mov
mov
jmp
fidivs
add
shlb
cmp
jbe
pop
mov
or
inc
cwtl
ja
aas
sub
jb
mov
add
mov
outsl
sbb
pushf
xor
xchg
jnp
scas
pop
xor
mov
mov
dec
mov
test
jnp
mov
test
mov
mov
lea
insb
test
mov
and
scas
mov
or
sub
xor
orb
ja
pop
cmc
jae
out
mov
jne
imulb
inc
mov
fs
fidivs
sbb
jecxz
iret
lods
or
xchg
fstl
push
sbb
add
sub
jo
cmp
addb
jnp
xorl
sbb
cmp
sbb
lods
jnp
cmpsl
push
fwait
cli
mov
ret
adc
or
out
xor
insl
xor
out
pop
aaa
int
fadds
insb
daa
imull
fwait
sub
mov
in
mov
mov
test
xor
dec
jg
lea
jbe
lret
mov
or
inc
mov
out
xchg
jae
repnz
jnp
clc
cmp
jp
mov
jnp
addb
pop
inc
rorl
daa
jns
in
jge
mov
insl
data16
testl
jge
test
arpl
aad
lods
xlat
jecxz
lret
pushf
dec
mov
pop
dec
sub
adc
push
fdivs
add
ja
or
lods
iret
xor
dec
mov
negb
mov
shll
push
inc
mov
ret
scas
cmpsl
jnp
scas
out
mov
xor
fucomi
pop
xchg
je
xlat
jnp
xor
push
fdivrs
mov
or
or
cmp
lret
data16
cmpsb
js
push
jb
cli
mov
and
call
dec
dec
or
and
popa
xchg
add
xor
inc
inc
xor
jnp
mov
popa
push
jnp
mov
cli
inc
dec
lret
fcomps
outsl
jae
cwtl
imul
shlb
push
js
push
mov
insl
cwtl
mov
loop
out
mov
pushf
lret
sbb
test
shll
jb
and
or
xor
out
arpl
or
or
mov
mov
cld
in
iret
inc
jnp
dec
cmp
xchg
lods
jne
jnp
movsb
mov
es
fs
push
and
dec
cmp
cmp
in
loopne
hlt
int3
xchg
mov
fistl
rcl
xor
sub
jnp
jo
mov
lds
jecxz,pt
push
add
pushf
sarb
push
cmpsl
mov
repz
faddp
jnp
push
inc
pop
cld
jnp
dec
push
fidivrs
mov
xchg
les
mov
outsb
adc
jbe
out
imul
test
push
ret
int3
xchg
lods
jnp
mov
in
jnp
xor
jmp
out
jne
xchg
jnp
sub
or
push
lcall
ljmp
adc
int3
pop
jnp
jl
mov
pushf
std
icebp
dec
and
lods
inc
mov
add
mov
xor
out
cmp
cli
xchg
adcb
dec
push
pop
push
iret
addr16
sbb
shlb
lea
jnp
pop
xchg
je
sahf
pop
testl
pusha
push
out
xor
jb
sub
repnz
push
or
pushf
outsl
xor
in
jmp
jae
or
cmp
sub
int3
inc
dec
insl
dec
into
in
ret
xchg
repz
mov
jnp
ret
mov
xchg
jp
jb
sbb
xchg
jnp
pushf
scas
sahf
mov
fwait
jnp
insl
cmp
jl
sub
push
inc
jnp
adcl
hlt
in
jae
movsl
jns
sub
jnp
into
or
mov
mov
sub
sbb
rolb
xor
movb
out
or
and
or
cmp
arpl
xor
pop
hlt
out
jnp
insl
fcmovnb
cs
lret
shlb
or
jae
jecxz
ret
aaa
lock
mov
sti
pushf
push
jnp
mov
sarl
lret
inc
or
push
in
ret
cmp
push
outsl
mov
dec
loopne
sub
inc
movsb
push
mov
mov
pop
xchg
out
inc
movl
or
lret
pop
jns
mov
jge
sarl
push
pop
xchg
sub
jmp
sub
pop
test
cmp
jnp
out
pop
leave
jnp
cmp
and
pop
mov
ja
outsl
push
aaa
pop
jnp
push
xor
mov
push
stos
lret
xor
stos
aam
fs
xchg
lds
test
insl
dec
mov
loope
jl
dec
sarb
lods
xorb
jnp
xor
gs
lret
or
mov
clc
mov
pushf
mov
or
mov
jg
xchg
loopne
sbb
es
jnp
leave
cmpsb
sbb
jnp
mov
xchg
cmp
addr16
dec
je
mov
cld
ljmp
jnp
std
inc
sbb
cmp
out
mov
paddsw
test
fisttpl
and
inc
adc
nop
xchg
sbb
insl
jbe
sarb
pushf
das
push
sub
popf
and
jmp
xlat
or
bound
pop
in
cmpsb
test
xor
pop
sub
outsl
mov
push
lods
movsl
mov
or
dec
mov
sub
push
cld
in
mov
dec
or
xchg
cmp
jnp
hlt
lahf
in
mov
mov
sub
pushf
arpl
lahf
jnp
mov
jne
fidivrl
xor
push
xchg
notl
int3
mov
jnp
ljmp
push
xchg
jnp
call
cmpsl
jnp
loop
adc
out
pop
cmp
movzwl
in
adc
jnp
xchg
fimuls
mov
jb
loopne
mov
sbb
jnp
pushf
adc
jbe
mov
or
sbb
mov
pop
add
mov
cmp
pop
jp
lods
xchg
mov
xchg
int
lock
jnp
ja
cmp
xor
mov
dec
jb
sbb
lods
repnz
mov
ljmp
pushf
stos
out
sar
dec
leave
or
or
imul
popf
in
fwait
add
mov
sub
add
mov
inc
adc
push
and
mov
mov
sahf
jnp
jmp
lret
xor
daa
xlat
cmc
jmp
mov
push
icebp
test
int3
xchg
mov
jnp
xchg
push
jno
push
cli
dec
repz
mov
int
cmc
bound
sub
and
dec
paddsb
jnp
mov
fstpt
xchg
cmp
mov
sar
loop
scas
jnp
mov
sti
cmpsb
stos
imul
lahf
xchg
jne
pop
jnp
ret
cld
mov
jnp
push
bnd
mov
xor
sbb
cmp
xchg
dec
jnp
jne
lock
rcl
jnp
xor
mul
hlt
ds
jnp
ret
sahf
out
dec
jmp
scas
add
ss
mov
xchg
xchg
fildll
popa
mov
idivl
or
pop
fstl
sbb
mov
and
jnp
lods
sbb
or
xchg
jb
xlat
or
jnp
lret
xchg
iret
pop
and
jnp
push
sub
sub
bound
mov
mov
jmp
ljmp
outsl
loopne
jae
in
lcall
cmp
mov
mov
shlb
sbb
lret
mov
insl
insl
xchg
fistpl
inc
push
sub
rolb
cmpsl
jnp
add
loopne
push
sbb
xchg
jle
pop
pop
jnp
sahf
sbb
adc
or
jnp
psrlw
cli
or
and
jo
jnp
ficoml
repz
ret
xor
mov
jne
mov
fisubrs
sub
jns
nop
sub
scas
imul
in
pop
jns
cmp
cmp
lods
mov
pop
sub
sbb
out
les
adc
sub
addr16
mov
mov
daa
fidivrs
lds
dec
fldcw
jnp
push
mov
add
and
jnp
fwait
outsb
or
loope
movaps
mov
push
inc
notl
aaa
repnz
scas
dec
adc
pop
jnp
or
or
loopne
and
mov
mov
call
or
testb
lds
outsb
lock
imul
push
scas
mov
adc
bound
jb
mov
push
push
lcall
cmpl
outsl
and
ja
pop
outsb
sbb
add
arpl
cmc
jnp
mov
loopne
jnp
and
imul
push
vpaddsb
or
js
jnp
ss
fcomps
in
xchg
cli
lahf
ss
jnp
jno
data16
mov
fists
xchg
sbb
jnp
inc
xchg
and
cmp
das
cmp
push
clc
xor
dec
cs
push
xlat
jg
jno
movsl
pop
call
ljmp
or
mov
insl
pop
dec
insb
fdivrs
mov
inc
int
mov
pop
jnp
dec
xor
jnp
sub
in
cld
jo
jnp
mov
ret
sbb
aad
jnp
xor
pop
adc
inc
mov
les
mov
dec
scas
jnp
dec
xchg
movsb
rclb
mov
data16
mov
jnp
cli
mov
mov
lret
repnz
sarb
addr16
lock
inc
pop
jne
adc
outsb
lret
aaa
mov
xchg
addb
sahf
in
lods
fldcw
jnp
aaa
inc
jg
mov
cmp
or
jnp
jl
ljmp
xor
movsb
stos
pusha
out
stos
jnp
mov
xlat
cmp
inc
jae
jmp
jns
pushf
jnp
mov
insl
testb
cmp
adc
pop
jb
js
aas
cmp
xchg
pop
xor
popa
xchg
fwait
pushf
jnp
jmp
stos
out
pop
jg
sahf
jb
and
adc
add
fisubrl
arpl
cmc
lea
jne
and
push
xor
cmp
mov
push
push
xchg
jae
add
cli
push
cltd
rcrb
dec
jns
lret
out
jp
or
mov
aas
push
imul
mov
inc
fsubrs
stc
add
stos
adc
add
jmp
xor
dec
push
rorb
push
mov
mov
ljmp
add
jnp
mov
orb
adc
inc
jnp
bound
icebp
jnp
mov
jp
or
addr16
jl,pn
xor
mov
xchg
std
pop
stos
repz
and
mov
mov
testl
sub
mov
in
jnp,pn
xor
out
mov
jnp
lahf
ds
clc
in
popf
sbb
sub
xor
jnp
mov
sub
jnp
shll
outsl
arpl
mov
jnp
addr16
out
cli
pusha
gs
shll
out
scas
pop
push
pop
xor
test
stos
jo
out
pushf
ret
or
das
jae
xchg
xchg
mov
mov
dec
out
cmp
adc
cmpsl
test
jno
jle
push
jnp
decb
outsb
and
rcrb
insl
cmpsb
or
xchg
repnz
jno
in
lock
xor
mov
pop
out
mov
cmp
mov
int
jnp
pop
outsb
lret
push
xor
jecxz
jne
mov
jg
mov
imul
fwait
outsl
shr
daa
int
xor
xchg
pushf
cwtl
sarb
arpl
inc
aas
pusha
adc
jnp
std
sub
gs
les
xor
mov
aad
je
sbb
jecxz
push
pop
push
mov
mov
out
jae
imul
sbb
stos
stos
sub
add
xchg
loope
mov
jnp
dec
add
push
pop
cmc
push
jnp
add
fs
popf
xorl
jnp
jmp
mov
mov
aaa
jae
sbb
int3
jnp
mov
das
cmp
cmpsl
loope
or
xchg
cwtl
jae
xor
jnp
and
push
mov
shrl
xor
mov
in
nop
or
dec
sub
jne
cmp
or
inc
add
imull
cmpsb
rclb
bswap
pushf
jmp
out
pop
mov
jecxz
cmp
push
in
inc
shl
jmp
pushf
mov
cld
insl
mov
pop
xchg
mov
sub
push
hlt
testb
inc
neg
and
subb
mov
scas
nop
pushf
jnp
fs
js
jmp
jnp
add
jecxz
cli
jo
jnp
adc
aad
not
jnp
sbb
mov
jnp
push
pushf
pop
jb
sub
mov
adc
daa
movsl
push
dec
mov
mov
dec
inc
or
mov
fcoms
jnp
icebp
negb
repz
push
ja
mov
jbe
hlt
and
ljmp
and
xorb
sub
mov
sbb
outsb
add
pop
call
imul
push
js
cmpl
clc
inc
rcll
add
mov
sub
inc
into
stc
aaa
pop
inc
jb
jnp
hlt
mov
out
jnp
mov
lret
mov
lret
jbe
std
mov
pop
lods
or
mov
xor
arpl
mov
xchg
fcmovnbe
mov
repnz
fimull
aam
xor
jbe
inc
iret
out
jnp
cmp
call
fnstsw
and
jnp
sti
pop
mov
and
jnp
pop
xorl
dec
iret
push
adc
jo
movsb
or
inc
in
test
bound
jnp
into
mov
arpl
mov
repnz
push
ss
jecxz
iret
mov
jle
outsb
cmpsl
insl
lods
dec
ds
fadds
out
and
add
dec
sbb
jno
in
mov
hlt
jo
pusha
pop
aaa
fucomip
adc
in
imul
std
stc
jo
add
int3
inc
jnp
movsl
lret
or
icebp
jge
aad
jne
cmc
inc
xor
idivb
cld
pushf
insl
movsl
add
imul
sub
jo
and
mov
js
nop
mov
push
mov
jnp
fsub
clc
pushf
and
jnp
add
cmpl
sbb
sbb
sub
adc
jnp
movsl
cwtl
mov
xchg
repnz
jnp
lcall
jnp
mov
pop
mov
xor
in
leave
ss
dec
jnp
outsl
mov
or
cmp
inc
mov
inc
push
imul
jnp
shlb
shlb
out
je
in
mov
jae
push
loop
mov
or
jl
pushf
outsb
mov
xchg
das
cmp
ljmp
sti
sarb
stos
mov
add
jnp
loopne
cwtl
push
out
dec
sbb
jo
add
lods
sbb
mov
pop
cmp
outsl
pop
loop
fsubrs
gs
popa
cltd
call
sahf
lea
mov
daa
push
imul
lcall
imul
scas
sahf
test
fstpl
sbb
push
in
in
les
adc
inc
and
das
jnp
push
sbbb
inc
cmc
jnp
inc
sub
mov
iret
sbb
push
mov
push
pop
das
ret
dec
mov
jne
mov
cmpb
xor
out
sarl
jae
pusha
cmp
test
in
repnz
mov
addr16
arpl
lahf
add
sub
imul
int
pop
or
mov
ja
cmp
pushf
jnp
dec
imul
push
xchg
lea
jae
cmp
jl
inc
daa
sub
dec
fdiv
sub
ss
dec
mov
mov
fcmovb
lods
leave
xor
xor
inc
xchg
fadds
test
jnp
insb
imul
or
cwtl
fwait
jb
or
mov
xchg
jne
cmp
mov
cmp
ds
cli
push
int3
cmp
push
arpl
aam
push
and
jnp
xor
lods
mov
jp
cmp
popa
mov
jnp
test
repnz
mov
jnp
xchg
jp,pn
out
sbb
jmp
sbb
adc
mov
mov
lret
pop
repz
inc
mov
pop
shll
cmp
mov
pop
xor
dec
ret
test
int3
outsl
mov
push
xchg
adc
adc
and
stc
out
lret
mov
mov
dec
daa
je
aam
lahf
or
psubsb
fbstp
pop
scas
jg
xchg
in
jae
or
sbb
jae
add
xchg
cmp
mov
mul
fdivrp
jnp
xchg
lods
push
lds
pop
or
in
or
out
or
sub
pop
outsl
stos
fnsave
mov
lods
outsb
call
icebp
xchg
push
mov
push
jnp
mov
pop
and
jne
mov
mov
repnz
sti
data16
jne
push
xchg
jnp
mov
js
cwtl
pushf
fidivrl
sbb
orl
adc
jae
aaa
pop
data16
jae
enter
sti
insb
imul
push
jne
or
divl
lods
out
cmp
clc
add
cwtl
divb
or
and
stc
pushf
jnp
jns
pop
sub
cmp
xlat
push
shl
mov
and
fisttpll
repnz
rol
sub
gs
inc
and
jae
mov
pop
jnp
mov
in
mov
stos
sub
adc
jnp
cltd
dec
add
das
push
lahf
jnp
inc
xlat
fnsave
mov
xchg
pop
push
ja
or
or
movsl
cmp
jne
push
xor
pushf
jnp
and
push
mov
imul
flds
imul
shl
sbb
and
mov
jge
out
jnp
aaa
ret
xor
cli
inc
jnp
xor
push
cmp
inc
pop
imul
lea
dec
cmp
xchg
imul
insb
mov
ja
int3
or
shll
xchg
adc
jnp
lods
mov
sti
jnp
jae
mov
fwait
mov
push
iret
je
pushf
dec
jb
fstpt
jg
xor
lods
hlt
movsb
or
ffree
ja
pushf
pop
jnp
cli
ret
jecxz
rorb
je
fists
mov
cmp
jnp
addr16
lods
jge
xchg
mov
cmp
sub
mov
dec
mov
xchg
jnp
nop
cmc
test
xchg
fcomps
mov
pop
enter
xor
push
loop
cltd
adc
jnp
mov
test
jnp
inc
fnsave
jno
jnp
lcall
add
or
fdivs
dec
icebp
lods
pop
insb
repz
push
mov
pop
arpl
das
sti
cmp
jnp
xor
cmp
jnp
add
out
jb
popf
dec
shl
pop
cmp
pop
std
roll
mov
jnp
jmp
dec
jbe
jnp
pop
cli
jb
std
push
or
or
mov
bts
cmp
jnp
rcrb
cmp
aad
int
jnp
jne
shrl
jp
addl
lods
divb
or
push
aas
int3
rorl
cmp
ss
jae
hlt
std
dec
bound
ja
stos
xchg
outsb
lods
jo
imul
inc
sub
insb
add
fwait
push
in
adc
xchg
iret
addr16
jge
sti
mov
lret
push
pop
stc
pop
jae
mov
fwait
sub
testb
mov
push
mov
push
bound
jnp
cmc
dec
insl
jno
xor
in
das
jmp
shll
cld
mov
popf
jae
call
cwtl
insl
xor
jnp
pop
fnstsw
or
adc
xor
popa
pop
push
stos
faddp
ja
fiaddl
pushf
or
xorb
add
xor
xlat
lcall
sbb
push
mov
or
push
gs
lods
sub
mov
mov
mov
xchg
jnp
stc
out
pop
stos
loopne
push
pushf
jnp
or
xor
xor
ret
dec
lret
pop
jno
dec
iret
inc
aam
inc
test
sbb
jecxz
into
sub
mov
orl
push
fistpll
lods
mov
mov
ss
push
out
jno
jge
lods
rcrl
push
jnp
add
push
mov
sub
dec
mov
mov
jae
insb
test
push
lods
rolb
addr16
lret
mov
outsl
jno
sub
shrl
or
ret
jnp
mov
push
mov
adc
xchg
pop
push
and
push
jnp
mov
pop
pushf
push
daa
out
in
mov
loopne
in
shrb
andl
push
imul
in
xor
rorl
mov
xchg
sub
loope
daa
add
xchg
inc
negl
mov
dec
xor
mov
loop
lods
mov
inc
add
or
das
jae
pop
popa
xchg
inc
cmp
adc
scas
dec
cmp
cmp
or
lret
push
stc
xor
ljmp
aaa
dec
int3
jae
inc
pop
xor
jnp
xorb
pushf
hlt
pop
jnp
xor
mov
jnp
cmp
push
sub
dec
pop
mov
mov
mov
pop
jnp
inc
popf
and
inc
push
push
adc
bnd
pop
and
dec
dec
or
pushf
adc
inc
pop
jp
ss
adcl
mov
ljmp
fwait
push
popf
jns
inc
jae,pn
mov
add
and
movsb
jnp
add
shlb
daa
cmc
dec
pop
push
jnp
pushf
faddl
jnp
adc
mov
daa
sti
jnp
push
flds
pop
mov
lods
jg
icebp
test
push
and
sbb
in
and
dec
nop
sub
in
lock
xor
gs
xchg
or
cmpsb
ret
ds
mov
pop
dec
or
push
sub
push
popf
shl
pop
jne
lock
jne
and
fs
xor
dec
inc
adc
js
out
rorb
pop
lock
xor
jge
jnp
imul
enter
jb
outsb
dec
pushf
push
mov
adc
pop
lods
insl
test
adc
fsubrp
pop
mulb
xchg
jnp
arpl
jo
ss
mov
aad
in
pushf
mov
and
push
fdivrl
jne
xor
and
sarb
std
notb
jnp
push
das
ss
adc
mov
jnp
movsb
repz
mov
jo
pop
imul
daa
ss
xchg
cmc
rolb
fcomp
sbb
xlat
dec
repnz
leave
jnp
fiaddl
pushf
jecxz
push
repnz
insb
lea
cld
mov
int3
xor
add
jae
scas
jp
popa
call
inc
jnp
les
jno
addr16
jnp
mov
dec
jmp
xchg
jg
push
icebp
add
adc
pop
pop
xor
mov
push
and
jnp
push
lods
notl
ret
sahf
js
mov
sbb
inc
or
xor
mov
inc
outsl
sti
loop
cmpl
test
sub
pushf
jnp
and
push
cmp
cmpsl
lds
pop
jnp
pushf
xchg
sub
or
or
adcb
cmp
lret
sahf
ljmp
add
add
cmp
out
pusha
jno
xor
cmp
mov
pop
push
jnp
js
out
jno
adc
es
inc
jnp
xchg
mov
cmp
mov
fldenv
xor
jmp
cmpsl
inc
addr16
daa
pop
stos
outsl
mov
sub
sahf
dec
mov
jo
xor
push
jne
lea
jnp
push
lods
in
xor
lods
out
mov
ss
orb
inc
aam
jnp
xor
pop
inc
hlt
jnp
test
rcll
xor
jnp
sbb
sbb
sbb
sub
push
jge
mov
xor
xchg
push
xchg
cmpsl
and
or
aas
cmp
push
clc
jnp
mov
call
jnp
push
jg
jnp
push
daa
xor
add
jbe
pop
pop
dec
xorb
inc
mov
pushf
jae
jbe
sti
mov
lahf
in
sahf
out
movsb
xchg
jnp
jns
add
cmp
in
sub
or
add
sbb
jnp
cs
dec
test
jnp
inc
inc
or
xchg
jae
xchg
lock
mov
jmp
pop
mov
stc
jnp,pt
pop
fstpt
dec
enter
add
jnp
push
dec
into
das
push
push
orl
dec
jae
cmpb
mov
jnp
adc
xor
sub
lods
mov
mov
xor
stos
insb
or
jnp
sub
mov
jnp
xchg
xlat
iret
arpl
inc
jae
loopne
negb
mov
fisubrs
rorb
add
stos
pop
mov
inc
jb
sbb
xor
js
mov
sbb
add
cld
dec
and
cli
lods
push
pop
mov
ret
jo
adcl
daa
mov
dec
call
push
in
dec
sub
lods
jnp
pop
int
jne
lret
add
push
jnp
lock
leave
cmpsl
add
fldt
inc
push
jae
pop
or
push
pushf
arpl
sub
mov
jnp
pop
cmp
sub
mov
ret
jae
push
mov
jbe
inc
icebp
push
mov
sbb
adc
dec
pushf
mov
adc
popa
inc
hlt
pop
mov
jl
mov
mov
jnp
sbb
bound
insb
jne
pop
jbe
popf
mov
repnz
daa
inc
testl
cmp
or
mov
dec
movsb
mov
sarl
or
leave
jne
jnp
dec
sub
dec
push
jmp
pop
addr16
mov
xchg
push
adc
hlt
sarb
aas
sbb
sbb
mov
repz
xchg
push
sbb
aas
bound
lcall
int3
inc
xchg
jnp
sub
insl
adc
jp
lods
repnz
sarb
notb
xchg
in
lods
jo
jge
inc
int
cli
mov
sbb
push
sub
sbb
jnp
cmp
inc
mov
sbb
mov
icebp
push
inc
push
imul
jnp
clc
jbe
jp
outsb
xchg
lock
cli
lcall
pop
pop
push
cmp
jo
insl
insb
mov
aad
daa
add
sub
outsb
jnp
mov
lds
pop
jle
cmp
dec
or
je
xchg
jmp
pop
lret
movb
scas
stos
pop
ljmp
fcoml
jnp
test
mov
or
test
popa
fst
out
push
cmp
inc
loope
mov
out
clc
insb
jnp
std
lods
cmp
daa
xchg
add
outsl
dec
fsub
jae
jnp
pop
fbstp
push
dec
push
mov
scas
dec
jno
adc
xor
outsl
cltd
dec
arpl
out
jp
push
out
pushf
pop
sbb
sbb
xchg
stc
shlb
ljmp
push
jnp
popa
xchg
popf
leave
add
adc
in
lret
ss
add
push
or
pusha
dec
shlb
iret
add
outsl
or
in
sub
jnp
lods
adc
test
and
fcompl
jnp
aas
imul
xor
cmpsb
jnp
xor
xchg
fst
insb
jb
jnp
pop
mov
sarb
leave
movsl
adc
daa
xchg
mov
ja
jnp
gs
cs
jnp
repnz
or
sbb
or
bound
lds
inc
sbb
jnp
aaa
out
je
push
aam
imul
cmp
mov
shrl
out
sbb
jg
cltd
pop
jecxz
dec
pop
fwait
es
out
push
sti
jnp
cs
mov
jnp
andb
jnp
sub
std
scas
or
sbb
aaa
adc
xchg
in
je
lcall
mov
jno
cmpsb
jnp
and
rcr
pop
cmc
jnp
jne
push
and
push
inc
jae
repz
jnp
sbbb
aam
jnp
cmp
jnp
mov
iret
or
fadds
add
repnz
mov
shrl
rcrb
xor
jae
ret
pop
mov
in
mov
lods
sbb
sahf
and
mov
jnp
cmpsl
icebp
cwtl
ss
mov
cmp
stos
jnp
ljmp
jecxz
das
sbb
mov
xor
pop
ja
lcall
jnp
xor
mov
inc
jbe
fnstsw
arpl
adc
mov
or
or
iret
xchg
movsb
repnz
jae
push
push
push
or
jecxz
insl
fstps
aad
test
inc
in
jns
jg
or
and
xor
or
mov
int
push
adc
mov
mov
jecxz
and
jnp
mov
repnz
jnp
mov
and
push
pop
or
jnp
lret
stos
add
jecxz
mov
jnp
in
jmp
jnp
fwait
or
dec
das
aam
fs
jnp
xor
rcr
out
xorb
int
and
jae
stos
repnz
or
add
fwait
jnp
lods
or
daa
mov
jnp
in
sbb
sahf
scas
mull
cmp
inc
outsl
mov
push
jne
mov
stos
cmp
jmp
dec
insl
imul
insb
mov
movsl
subl
out
pop
mov
mov
call
pushf
jnp
jmp
or
inc
inc
fdivrs
jae
mov
jnp
or
inc
fimuls
cmp
imul
lea
cmp
dec
jnp
sub
cltd
mov
or
lock
jnp
add
dec
cmpsl
popf
outsb
in
imul
jno
or
insl
or
idivb
scas
or
jae
pop
pop
les
mov
mov
xor
xlat
cmpl
sbb
xor
jp
mov
or
subb
aas
add
mul
sarb
adc
mov
sahf
mov
divb
jp
jnp
and
sbb
andl
into
sahf
xchg
jb
and
jno
lret
cli
mov
mov
insb
jnp
sub
pop
jnp
rcrl
xchg
inc
stos
fnsave
add
lock
sub
adc
push
je
mov
xchg
jae
daa
int
lock
iret
das
mov
pop
inc
or
ror
js
or
mov
sar
cli
stos
mov
mov
mov
stc
dec
mov
out
mov
xor
pop
stos
xchg
dec
cmpsl
jnp
add
push
sub
mov
fnsave
push
push
jge
sbb
add
and
je
cmp
mov
pusha
jne
loopne
mov
js
xchg
xchg
cmp
mov
bound
lods
imul
and
das
ret
insb
mov
jbe
hlt
aaa
cmp
adc
xor
mov
lods
jnp
adc
mov
cs
lahf
jp
mov
fwait
aaa
mov
mov
ljmp
movsl
jnp
rcrl
les
and
insb
and
cmpsb
in
out
jne
into
push
jg
jnp
fstps
pop
clc
mov
aaa
aad
addr16
nop
cmpsl
or
movl
add
jnp
or
in
fimuls
dec
jno
xor
out
and
mov
jne
xor
jb
mov
mov
sub
lcall
xor
sbb
cmp
sti
mov
lods
inc
add
or
sub
outsl
imul
cmc
int3
in
jns
xchg
jnp
bound
adc
data16
sbb
xor
or
or
sahf
sub
mov
pop
mov
xor
fstl
lods
mov
mov
cmp
pushf
lods
xlat
jnp
and
push
insl
jnp,pt
or
ss
fwait
sbb
clc
loopne
mov
xor
mov
pop
adc
aam
sti
dec
das
jne
mov
in
les
jno
sub
lock
cltd
jb
cmp
pop
fisttpll
fisubrl
loope
mov
cmpsb
push
push
into
cld
jae
jnp
dec
addr16
jo
add
cmp
sub
imul
xlat
sub
jns
lret
cmp
cmp
pop
pop
xor
mov
out
inc
rolb
fsts
sbb
pop
xchg
cmp
pop
fwait
sub
in
imul
mov
dec
insl
cmpsb
ss
jnp
or
das
mov
pushf
push
xchg
repnz
lods
and
xchg
dec
jae
cmp
idivl
inc
dec
xor
sbb
xlat
or
xchg
rorl
push
sbb
lods
in
push
cld
mov
lcall
nop
js
lds
jnp
xchg
int3
repz
xchg
sbb
jnp
cmp
jp
jnp
mov
ljmp
mov
bnd
fnstsw
inc
inc
xchg
dec
push
adc
mov
jae
test
or
sti
mov
fs
push
add
jnp
push
cmp
cmp
fidivl
mov
cmpsl
cmp
pushf
jno
cwtl
xchg
jnp
xchg
inc
jp
ret
and
jnp
cld
icebp
out
mov
jnp
popa
notl
addb
adc
ljmp
lods
and
scas
lcall
mov
bsr
jnp
cmp
aam
gs
cmp
mov
pop
leave
or
insb
pop
enter
divb
xor
jnp
sub
scas
lods
mov
fisubrl
test
sub
pop
dec
and
sbb
sbb
or
mov
lcall
shll
pop
xchg
adc
in
mov
enter
pop
jnp
outsl
out
add
lods
mov
xchg
jae
pop
xchg
adc
int
jnp
into
xchg
cmc
test
fs
sbb
shr
lods
fwait
jno
mov
lods
bound
mov
jo
sub
mov
or
mov
loope
mov
test
xor
mov
sub
popf
test
lods
jnp
xor
dec
lcall
mov
jnp
fimull
imul
std
fsubp
or
shlb
sbb
cmp
cmp
mov
xchg
mov
inc
femms
dec
ret
rcrl
daa
nop
stos
pop
push
pop
jae
fwait
jg
lods
iret
or
xchg
lods
jns
cmp
or
jl
mov
pop
je
sbb
push
jnp
insl
mov
push
jnp
dec
inc
mov
cmpsl
xor
sarb
gs
imul
inc
sub
push
xchg
hlt
scas
xchg
jnp
mov
imul
in
jnp
rclb
jae
dec
inc
or
in
inc
popa
and
ss
mov
pushf
and
fldl
pop
fidivrl
iret
push
xchg
sub
or
testl
cmp
push
and
dec
cmc
mov
jnp
outsl
mov
sti
sub
clc
jnp
and
sbb
lock
sbb
nop
pop
jb
cmc
jnp
add
pop
pop
ljmp
jnp
mov
inc
in
and
pop
cmp
pop
adc
fistl
lock
push
cmc
inc
dec
repz
dec
xchg
jb
fdivrs
lock
mov
or
ja
js
push
add
jp
xchg
pop
or
jle
lock
ret
repnz
jne
jnp
lea
cmp
outsb
ljmp
mov
aaa
add
jnp
pushf
pop
adc
lea
subb
xor
sti
out
stos
add
test
jnp
mov
or
adc
jnp
daa
push
aaa
jg
jmp
iret
inc
push
sbb
adc
imul
push
sub
test
mov
cli
cmc
data16
sbb
xchg
push
jnp
sub
or
hlt
jae
mov
mov
jnp
push
cli
mov
out
pop
xchg
jnp
xor
pop
jp
lods
mov
sarb
mov
iret
jo
sbb
andl
or
pop
ret
sar
jnp
adc
sbb
iret
js
xchg
jecxz
jae
pop
sbb
pop
adc
or
pop
xchg
jnp
fnsave
jmp
pop
lds
int3
sub
mov
and
mov
insb
imul
lahf
pushf
and
in
mov
mov
and
xor
jb
movsl
mov
or
mov
cmp
xlat
jnp
sbb
mov
adc
inc
cmp
mov
in
je
fadds
out
add
outsb
lret
mov
mov
loope
ja
adc
jnp
cs
and
and
jnp
sub
inc
call
add
xchg
mov
mov
pop
push
popf
mov
je
out
shlb
pop
inc
not
jbe
insl
xor
mov
adc
jb
jnp
ljmp
pop
lods
pop
fstps
outsb
idivb
mov
mov
lret
jmp
out
fmull
adc
cs
ret
dec
cmp
negl
mov
shr
les
xor
or
scas
stos
popf
fidivs
rolb
lods
out
outsl
pushf
jnp
or
das
or
bnd
sub
mov
and
sbb
movsb
jnp
out
fdivs
jnp
lea
scas
jmp
pop
xchg
and
fisubs
and
pop
jg
jae
es
pop
mov
xor
mov
jno
pcmpgtd
out
jnp
enter
mov
bound
mov
xchg
lahf
ljmp
mov
cmpl
jnp
fistpl
pop
lcall
jg
sub
sbb
mov
xchg
imul
out
shlb
repz
sub
adc
aaa
xor
mov
lods
xorb
lret
push
jnp
stos
cmp
pushf
arpl
pop
imul
dec
sub
popa
pushf
shrb
push
lret
cmpsb
inc
xchg
jnp
push
stc
or
addb
stos
cmp
xor
dec
and
inc
sbbl
lods
sbb
sub
shll
jmp
and
cmpsb
or
lods
jb
cmp
push
mov
ljmp
std
insb
cwtl
mov
mov
hlt
jnp
icebp
ret
inc
add
aaa
sbb
xor
test
or
jo
lahf
fwait
jbe
jnp
mov
cmc
outsl
iret
shlb
loope
stos
adc
mov
inc
dec
loop
ljmp
int
sub
xor
sub
cwtl
jnp
xor
nop
jnp
outsl
push
xchg
push
pusha
sahf
jmp
cmc
lock
sub
xchg
lret
jnp
mov
rcll
mov
mov
push
lret
out
jno
jnp
stos
out
rcr
inc
das
add
je
or
daa
negl
or
jge
push
jae
pushf
shll
cmp
bnd
dec
cli
lret
pop
in
cmp
mov
jae
jo
aam
jnp
xchg
fwait
imul
lcall
inc
cmp
pop
mov
xchg
loopne
jnp
into
leave
sub
inc
fwait
jnp
shll
mov
push
or
pop
imul
cli
js
js
sub
mov
aam
mov
jmp
sahf
jnp
fcmove
sbb
testb
jnp
aas
dec
daa
iret
or
mov
sub
pop
lea
mov
stos
fstp
popa
aas
in
fstpt
jg
push
jnp
xlat
sub
aad
stos
sbb
add
sbb
push
sbb
xor
add
mov
mov
lock
int
pushf
fidivl
popf
jnp
pop
es
mov
dec
outsl
shrb
mov
jecxz
jnp
ds
aad
sub
sbb
xchg
pop
movsl
xorps
jb
inc
jecxz
mov
jnp
jo
xor
loop
dec
test
jnp
enter
xor
jns
sub
shrl
jnp
push
or
cmp
mov
jns
ficomps
jnp
gs
jnp
mov
mov
cmp
ja
add
pop
jnp
cmp
bound
push
push
add
scas
out
cmp
push
int
dec
arpl
movsl
inc
scas
out
adc
cmpsl
sarl
outsb
test
jnp
ret
push
ljmp
inc
xchg
out
fdivrs
push
jnp,pt
in
or
jnp
sti
or
clc
int3
push
ret
outsb
cmpsl
mov
movsb
xchg
jnp
imul
cwtl
fdivrs
inc
icebp
cli
jns
pushf
mov
sbb
push
jnp
shll
mov
ja
mov
icebp
rcl
inc
data16
sbb
aaa
adc
and
jnp
aad
lret
adc
loope
into
pusha
es
jnp
pop
sarl
sbb
test
decb
jnp
mov
cli
jp
int3
or
aad
sbb
outsl
jo
adc
dec
fisubl
cwtd
sbb
cmp
jb
cmp
or
cmp
or
cli
push
mov
enter
addr16
sub
push
in
test
mov
imul
cmp
mov
cld
sbb
scas
imul
pop
dec
addr16
cmp
test
pushf
mov
jg
mov
push
adc
insl
jnp
out
stos
pop
rcll
adc
jg
pusha
jnp
inc
mov
js
cmp
mov
mov
xor
ds
mov
sbb
push
mov
inc
and
dec
out
lret
or
jnp
cmp
mov
push
in
and
std
xchg
jnp
out
cmp
sahf
jbe
jnp
xchg
popa
popf
cmp
js
ds
lods
clc
jnp
cmpsb
push
out
stc
jecxz
mov
or
sbb
dec
stos
test
shr
jae
push
rep
ss
jnp
lods
jb
cmpsb
and
jnp
xchg
mov
sub
sub
bound
dec
out
jnp
xor
jnp
pop
pop
imulb
mov
adc
adc
fdivp
rcrl
xchg
push
or
dec
sub
xchg
addr16
push
mov
out
adc
cmp
and
out
jae
add
inc
lods
in
dec
jmp
pop
jnp
sbb
lret
sbbb
jnp
xor
adc
jnp
int
outsl
roll
out
jnp
mov
inc
shrb
negl
ficompl
test
jne
iret
inc
sub
lahf
cli
inc
dec
sti
jl
shrb
pushf
in
stos
popf
jnp
fidivl
dec
bound
aad
mov
into
or
jo
lahf
cs
negb
jae
mov
sub
pushf
mov
das
addr16
jb
jnp
mov
mov
mov
sbb
shll
shlb
out
idivb
icebp
push
cli
stos
inc
cwtl
lds
cmp
pop
jnp
lods
xor
pop
sbb
mov
fwait
sbb
es
mov
push
insl
addr16
jnp
sbb
arpl
cwtl
mov
dec
test
jnp
test
pop
sahf
jae
jnp
mov
stos
mov
pop
imul
and
dec
pushf
out
fwait
mov
ja
js
mov
aas
jno
stc
sbb
cwtl
adc
scas
cmp
xchg
lock
out
add
push
inc
jnp
pop
or
and
aaa
and
loope
ja
inc
mov
jnp
loopne
sub
mov
stos
test
jae
xor
pop
int
cmp
add
xorl
add
mov
jnp
push
lahf
out
test
sti
in
jbe
mov
rolb
jnp
mov
test
loope
dec
adc
fmul
and
jae
mov
pop
mul
je
dec
dec
repnz
mov
mov
aam
movsl
jecxz
imul
scas
and
arpl
hlt
jnp
push
in
sbb
lods
mov
lcall
cli
mov
sti
dec
pop
adc
inc
loope
inc
sub
gs
fmull
cmp
jnp
and
in
jnp
call
scas
cltd
jnp
inc
fsub
pushf
shrl
fisttpl
push
jns
repnz
outsl
jnp
jno
loop
push
mull
xor
movsl
adc
imul
mov
aad
mov
pushf
and
jb
fistps
adc
jmp
sti
xchg
push
sbbl
shrl
xchg
jnp
sbb
sbb
cmp
insl
inc
mov
insl
daa
lods
icebp
jnp
ss
mov
pop
cmp
fdivrl
sbb
push
out
fists
iret
jne
rolb
pushf
mov
add
sub
aad
push
sbb
push
imul
repz
insb
pop
mov
mov
adc
jae
rcrl
dec
jnp
mov
lods
pop
std
or
cltd
aad
subl
subb
popa
ficompl
movsl
mov
arpl
jnp
mov
movsb
jno
fistpl
mov
ja
push
push
lret
fs
cld
lcall
inc
pushf
xor
iret
adc
in
and
inc
cmp
mov
jmp
cmp
jns
lea
jnp
jecxz
ja
inc
or
adc
idiv
int3
dec
jne
shrl
push
js
repnz
dec
mov
or
mov
cmpsb
or
jo
jnp
arpl
jnp
clc
jg
mov
in
imul
addr16
aaa
imul
les
adc
aad
mov
xlat
addr16
loop
xchg
jnp
mov
roll
sti
pop
arpl
jb
mov
jnp
jg
daa
shlb
pushf
mov
jnp
sub
scas
mov
leave
cmp
into
lods
and
xlat
jne
adc
and
inc
sbb
fstpt
xor
cltd
test
cmp
jnp
push
pusha
xor
lcall
jnp
push
outsb
mov
or
sbb
xchg
aad
mov
jno
push
aam
iret
pop
mov
shll
jnp
inc
bound
sub
shlb
xchg
or
pushf
mov
mov
push
inc
ds
insl
push
add
sub
dec
mov
shll
pop
aas
imul
push
fs
and
dec
inc
clc
push
mov
sbb
cmc
xor
ss
xor
jnp
js
cmp
push
pop
in
or
sarb
rorl
test
nop
mov
loop
fucomp
add
mov
xchg
or
sub
arpl
je
std
pushf
add
jnp
add
call
mov
xchg
ja
pop
movsb
jnp
stc
insb
or
jnp
xor
mov
arpl
sbbb
xchg
add
jnp
data16
jecxz
cmp
xchg
push
pop
adc
sbb
loopne
jae
test
repz
clc
jae
cmp
fimull
jnp
movsl
outsl
cmp
stos
inc
mov
sahf
mov
fnclex
bound
xor
xchg
jnp
adc
mov
pop
adc
mov
out
push
pop
sbb
push
mov
or
lea
sbb
sbb
dec
pushf
pop
inc
xchg
dec
lds
or
lea
mov
mov
in
mov
xor
btc
jecxz
add
mov
lret
jb
push
mov
add
scas
and
mov
dec
sti
inc
popf
jnp
push
fistpll
jge
jnp
mov
outsb
sbb
insb
adc
mov
adc
jnp
insb
jecxz
out
xchg
mov
jg
pop
mov
or
push
outsb
mov
mov
andl
lret
lods
xor
fistpll
fsubs
ss
sub
jnp
sti
ja
ljmp
jg
mov
cmp
dec
and
jb
cmpsl
loope
adc
testl
inc
hlt
push
insl
arpl
jnp
push
mov
repz
mov
add
xchg
adc
sub
jp
popf
stc
xor
pop
jnp
pop
add
scas
mov
outsb
or
fsubrs
jmp
or
adc
cmpsl
jns
mov
stc
adc
ret
dec
inc
xchg
adc
or
imul
and
xchg
xchg
iret
jno
inc
jnp
clc
inc
mov
jnp
sarb
daa
jnp
fbstp
adc
cmpsl
call
cmp
inc
jnp
movsb
cltd
xchg
dec
pusha
xchg
nop
jnp
iret
mov
jnp,pn
push
lahf
jle
xchg
cmpsb
adc
mov
sbb
inc
sbb
lret
rcrl
add
loopne
jnp
mov
scas
fdivrs
int
jno
cmp
jnp
mov
lock
and
and
jnp
test
lret
pop
inc
repnz
lcall
out
shlb
lods
jnp
outsb
push
ja
dec
mov
jnp
shrl
push
dec
sbb
mov
insb
jle
aas
jnp
push
fadd
lods
ret
xchg
mov
xchg
jae
mov
or
cmp
outsl
jbe
mov
movups
xchg
das
ror
fwait
xchg
sahf
sbb
mov
push
lods
stc
cmpsb
outsl
jnp
add
xchg
adc
pop
pop
andl
xchg
xchg
mov
pop
div
iret
push
cmp
insb
mov
add
and
add
cmp
pslld
jb
pop
xor
push
lods
mov
jnp
xchg
push
test
mov
jnp
insb
push
xor
je
stos
into
mov
or
lock
jnp
in
jo
fisubl
mov
xor
out
sub
or
mov
insb
push
jnp
sub
or
cs
stc
mov
mov
jnp
fnstsw
jg
push
adcl
xchg
sarb
lret
xchg
mov
mov
jnp
es
in
xchg
add
mov
cli
lods
sbb
mov
scas
shlb
iret
or
ja
mov
push
mov
inc
in
mov
xchg
lds
pop
push
in
and
mov
cmp
loop
cli
mov
mov
and
jnp
and
sti
arpl
push
jnp
sbb
push
push
in
xchg
fstps
fs
pop
rcl
push
xchg
xchg
add
xorl
in
or
mov
lods
push
sbb
jnp
enter
mov
subl
push
mov
inc
fwait
cmc
mov
pop
push
fcmovne
imul
mov
cmp
pop
cli
jnp
xor
je
pushf
xor
js
cmp
jnp
fbstp
movsl
pop
cmp
mov
sub
sbb
mov
mov
mov
jnp
sub
lods
and
push
mov
jge
cmp
dec
out
dec
pop
jbe
clc
insl
xlat
gs
jnp
push
xchg
test
jnp
aaa
or
call
popf
jnp
clc
xchg
test
dec
ljmp
cmp
or
jnp
push
into
mov
daa
and
xor
xchg
push
and
shll
jle
daa
je
lods
push
adc
outsl
jnp
stos
pusha
and
fwait
jno
add
rclb
cmpsb
dec
call
lea
jg
mov
or
sub
cmpsb
mov
scas
xor
repnz
fisttps
jnp
xlat
sbb
or
pop
push
adc
jnp,pt
dec
sbb
shlb
jnp
and
lock
cmc
jle
stc
imul
rorl
sbb
jne
push
iret
fnsave
adc
mov
lock
or
jnp
clc
fstpt
cmpsl
mov
out
divb
arpl
and
fwait
mov
add
pop
imul
arpl
push
add
fstpl
sbbb
pop
out
push
sbb
jns
pop
imulb
dec
loop
cwtl
mov
sub
cltd
out
in
xor
jnp
loop
add
xchg
inc
xor
mov
leave
dec
adc
mov
mov
mov
outsl
mov
inc
adc
lret
std
jnp
adc
pop
add
pop
lcall
mov
pop
iret
sbb
fldt
das
imul
pop
jnp
or
test
sbbb
in
sahf
pop
clc
sub
sub
arpl
mov
jl
xor
xor
mulb
sub
dec
mov
cs
daa
xor
jne
bnd
jg
xor
push
call
jnp
pushf
sub
js
dec
andl
inc
xchg
sarl
lock
pop
and
shll
mov
push
jb
mov
sarb
push
mov
adc
pop
xchg
sub
enter
and
jmp
dec
mov
lock
xchg
rcr
imul
xchg
aaa
jnp
out
adc
insb
imul
test
mov
sub
inc
dec
clc
adc
sub
pop
lea
jne
movlps
mov
cwtl
dec
adc
mov
jnp
daa
dec
loop
fidivrl
fimuls
imul
jnp
and
icebp
push
jmp
pop
xchg
jnp
xchg
js
or
jnp
mov
in
mov
lcall
jnp
mull
add
dec
jbe
cli
ja
jae
ret
fwait
jnp
inc
aaa
pushf
cmpb
adc
mov
rcrb
cli
push
jnp
dec
push
in
jno
push
fnstcw
mov
aam
jnp
cwtl
icebp
pop
mov
push
js
mov
inc
nop
fwait
xlat
and
lods
and
mov
and
jnp
call
ret
xor
inc
cmc
mov
xor
sbb
stos
push
loope
jnp
xor
int3
and
add
push
push
rclb
imul
mov
xchg
add
fucomip
push
popa
sbb
xchg
push
inc
jae
fdivrl
out
outsl
jo
pushf
mov
pop
inc
cmp
jle
mov
outsl
xor
jnp
int3
sbb
cmp
std
mov
xchg
sti
out
outsb
dec
lret
test
jnp
lcall
dec
es
jmp
inc
pushf
jae
stc
ror
stos
jnp
and
inc
push
dec
es
jnp
hlt
jmp
inc
lock
sbb
xlat
sub
jbe
imul
push
je
adc
sub
in
and
jnp
pop
push
repnz
jmp
jl
push
bound
stos
jbe
repnz
lods
sub
ss
rcrb
and
imul
xchg
jecxz
add
cmp
inc
imul
insb
inc
cmp
loop
aam
jmp
divb
inc
xor
sahf
or
jnp
loopne
cli
popa
pop
dec
sbb
shlb
jbe
in
jnp
pop
cmpsl
mov
ss
jnp
dec
and
loopne
pop
lock
mov
dec
shlb
adc
push
test
jnp
mov
pop
xor
adcl
pushf
es
mov
sbb
stos
rcll
inc
and
ss
jnp
fwait
test
lret
cli
jnp
jae
in
idivl
jnp
and
pop
xor
xchg
call
sbb
lret
jb
jnp
mov
pop
jne
mov
push
fstpt
aas
les
inc
aam
jnp
xor
xchg
push
pop
in
sahf
stos
jmp
sarl
fs
mov
jnp
ljmp
pop
pop
mov
cmp
xchg
call
in
js
and
push
imul
ret
mov
pushf
jne
or
cmp
dec
data16
cmp
not
pop
jno
xchg
push
in
cmp
das
jnp
or
gs
jnp
xor
lods
push
cmpsl
cmpsb
les
out
lret
mov
cmp
loope
aas
rolb
sbb
ja
xor
xor
push
mov
jbe
lods
cmpl
jns
jecxz
aam
imul
inc
loopne
mov
jle
idivb
sarl
arpl
out
bound
gs
jo
daa
adc
add
out
fisubl
xchg
int
repz
out
call
cmpsl
jnp
sub
xlat
adc
aas
lahf
nop
sbb
jnp
mov
aad
lods
sbb
andl
shll
fcmovnbe
cmp
insl
mov
cs
sarl
lods
mov
pusha
mov
scas
jg
mov
xor
adc
dec
jmp
jnp
jb
dec
arpl
mov
div
icebp
inc
fmull
jnp
mov
xor
pushf
adc
lea
jnp
pop
scas
mov
jecxz
data16
mov
adcl
cmp
mov
ljmp
lahf
jnp
sbb
dec
sbb
mov
pop
test
dec
sub
fmull
and
rol
mov
stos
test
push
pop
jnp
hlt
ret
jo
cmpsb
mov
jecxz
iret
sub
xchg
movsl
jns
lret
in
inc
mov
pop
adc
dec
ret
jle
xchg
int
out
arpl
and
incb
pop
adc
shl
jnp
ret
sbb
gs
and
sarb
and
pop
add
clc
lret
mov
push
push
repnz
idivb
adc
int3
sub
xor
in
lods
adc
push
ja
jae
mov
lret
xor
jns
pusha
jnp
sub
jnp
jne
stos
jb
daa
or
test
test
xorb
call
mov
dec
jnp
push
stc
cmp
arpl
aam
xor
adc
push
out
sahf
ret
or
dec
sbb
jae
mov
enter
testl
mov
jb
jnp
pushf
push
or
push
mov
jnp
jecxz
aad
gs
jnp
mov
lcall
cmp
jnp
push
pop
jnp
imul
sarl
mov
add
and
lock
stc
repz
jnp
pop
sbb
and
mov
pop
adc
xchg
jnp
pop
lea
hlt
mov
cmpsl
outsl
dec
gs
jnp
aaa
mov
daa
aad
mov
xchg
xor
gs
sbb
mov
arpl
and
and
stos
jge
arpl
jae
dec
dec
in
stos
jecxz
mov
hlt
pop
imul
xchg
mov
cs
cmp
shr
lods
jnp
jo
push
mov
and
add
add
push
pop
and
imul
scas
into
push
popa
add
and
adc
push
jnp
lods
dec
adc
rclb
pop
test
fldt
mov
mov
fidivs
std
fiadds
in
jae
sbb
xchg
call
adc
jnp
dec
and
pop
jb
jnp
jg
int
subl
loope
gs
push
adc
decb
repnz
sub
push
sbb
int
popa
cmp
scas
inc
in
and
mov
lods
outsl
or
pop
pushf
insl
inc
nop
fisubl
jnp
cmp
cmc
stos
rcrb
dec
repz
dec
inc
fcmove
iret
jp
lods
aas
jg
loopne
fs
enter
jns
scas
adc
and
addl
mov
jp
pop
in
addl
jnp
fidivrl
add
pop
dec
dec
add
mov
jnp
test
inc
mov
pop
xor
cmpsl
mov
inc
arpl
call
int3
mov
cld
dec
xchg
add
rorl
leave
jae
ret
sbb
jge
jnp
pop
enter
jnp
push
outsb
mov
ljmp
shll
or
lock
jne
jb
sarl
popf
rcl
inc
sub
ljmp
dec
stc
rcrl
outsl
mov
jnp
push
fs
sarl
add
fnsave
pop
jnp
push
out
mov
or
inc
aam
outsl
jb
push
mov
pop
mov
jno
movl
pop
sti
jae
imul
mov
in
pop
jae
jnp
jecxz
ss
sbb
pop
cmpsb
hlt
add
mov
jae
nop
adc
push
mov
mov
stos
pushf
sub
xor
sbb
notb
jnp
lock
loopne
out
dec
shlb
mov
jecxz
enter
push
jnp
hlt
pop
bound
sahf
sti
loopne
adc
sub
jmp
jle
cmp
mov
inc
imul
ss
mov
fstpl
fdiv
or
inc
xor
sbb
sub
or
mov
jge
pop
cmp
mov
ljmp
jnp
js
ret
add
jnp
xchg
mov
inc
repz
dec
and
jae
cmc
iret
push
lret
jge
or
nop
movsb
jnp
mov
jnp
sbb
jb
faddl
inc
inc
insl
or
jnp
cli
es
jae
pop
mov
fimull
xor
fstpt
in
into
sbb
jb
loop
out
mov
ss
pop
fmul
sbb
mov
and
jnp
fwait
pop
jge
dec
or
sbb
sub
cmpsl
jnp
in
inc
in
mov
mov
mov
jnp
push
sbb
mull
jo
fwait
xchg
int
xor
lods
std
xchg
mov
cmpl
imul
push
roll
mov
cmp
or
jle
std
add
mov
outsb
cmp
stc
or
xchg
subb
cli
jnp
jge
lret
inc
mov
pushf
pop
push
jnp
pusha
aaa
sahf
mov
jns
sub
mov
out
ljmp
call
add
cmc
shl
jnp
lret
push
addr16
push
in
pushf
out
ja
nop
lcall
sahf
insb
divl
inc
roll
ljmp
jecxz
fs
sbb
jl
jnp
aas
divl
lods
push
pop
sbb
cmpsl
movsb
sahf
mov
mov
sti
and
mov
cmp
out
lahf
pop
aad
jbe
in
insl
cltd
cmp
jle
xchg
lea
cmp
inc
dec
jmp
jne
push
inc
jnp
aad
xor
fistps
jnp
inc
add
jnp
inc
sbb
mov
test
lahf
xchg
ljmp
adc
push
pop
stos
cmc
adc
test
outsl
sbb
insl
shl
add
xor
js
xchg
add
push
popa
adc
test
cmc
mov
jo
jnp
mov
out
jnp
lock
jnp
out
sbb
inc
fbld
jns
mov
jae
or
js
aaa
rclb
popf
pushf
xchg
mov
jnp
ud2
shlb
sti
insb
sarb
repnz
cmp
out
jo
jmp
jmp
subl
or
cmp
sbb
dec
jge
stos
adc
mov
pop
out
dec
lods
jnp
hlt
adc
or
mov
cmp
outsl
shll
mov
mov
insb
xor
push
xchg
ja
cmc
pop
jnp
adcb
and
repnz
sbb
cli
mov
xor
sub
jmp
xchg
jbe
insb
insl
shrb
iret
std
imul
inc
lods
xchg
mov
sbb
pop
jnp
xchg
adc
movsl
jnp
lret
stc
adc
push
push
jge
ss
add
jnp
xorl
jnp
xchg
dec
jp
in
das
jnp
subl
js
cmpb
jmp
jae
or
jnp
leave
aas
lods
push
or
js
outsl
and
sbb
sub
int3
jae
ljmp
inc
shlb
outsb
dec
nop
lods
jnp
ret
pusha
xchg
mov
cmpsl
jnp
xchg
cmp
call
cli
mov
pushf
xchg
cmp
cmp
xchg
adc
outsl
sbb
or
pop
push
inc
pop
mov
int3
jo
push
outsl
lret
jnp
mov
or
mov
divb
mov
lret
xchg
lcall
bound
aas
sbb
insl
jnp
rorb
out
andl
imulb
cmp
js
push
jnp
xor
mov
cltd
aaa
subb
pop
out
mov
jnp
data16
cltd
jns
loope
push
mov
adc
and
scas
iret
jno
loopne
test
jnp
push
pop
xchg
idivb
mov
mov
push
jae
daa
jne
dec
xchg
inc
adc
push
out
imulb
hlt
sahf
pop
insb
jno
jnp
or
push
lcall
loope
sarb
test
xor
dec
clc
dec
cld
xor
mov
leave
mov
xor
xchg
mov
jns
and
xchg
or
stc
int3
mov
insl
sub
mov
repz
dec
or
cltd
jae
xchg
xorl
jnp
bound
mov
jnp
dec
lods
stc
adc
mov
jnp
cltd
jbe
loope
dec
fstl
iret
or
das
ds
mov
lods
stos
xor
arpl
shr
cmc
adc
mov
jnp
add
sub
ficoml
jnp
mov
shlb
adc
jnp
dec
mov
jnp
jle
pop
add
pop
jnp
xor
fidivrs
lods
cmpsb
negl
fists
adc
fnstsw
jl
pop
jb
add
xchg
lahf
pop
in
dec
sub
jnp
cmp
mov
mov
or
in
cmp
mov
jo
addr16
clc
sbbl
xor
jae
lods
fisttpl
or
mov
dec
mov
stc
push
pushf
jnp
xchg
negb
mov
jbe
and
push
es
mov
or
scas
jg
aaa
xor
lahf
sub
loope
ja
dec
mov
cmc
cld
mov
mov
jb,pn
mov
sarl
inc
repnz
xor
into
sbb
out
jnp
ss
mov
push
jnp
adc
stos
xchg
sbb
enter
dec
add
lahf
sub
mov
cmp
jecxz
lea
loope
jae
jae
add
out
imul
or
test
outsl
ss
cmpsb
movsb
mov
jnp
les
stos
divl
fidivl
pushf
jmp
mov
imul
rcll
inc
test
add
iret
les
sti
addr16
mov
xor
inc
sbb
push
mov
or
lcall
add
inc
rorb
jnp
popa
sarl
dec
push
mov
sub
rcrl
push
xchg
jb
jnp
iret
test
pop
inc
xor
addr16
shr
pushf
dec
dec
mov
pop
outsl
outsl
xchg
dec
iret
out
xchg
ret
lea
outsb
jo
xchg
mov
lods
adc
mov
and
sbb
push
subl
test
pushf
lahf
jnp
mov
jge
mov
jnp
dec
scas
scas
daa
cmpl
jnp
inc
fildl
out
dec
jnp
leave
sbb
sbb
mov
and
clc
daa
sbb
and
sbb
add
mov
sar
dec
jns
lods
or
or
cmpsb
xor
jecxz
jnp
mov
in
jmp
imul
sbb
iret
push
dec
add
jae
repz
cmp
aad
bound
leave
or
mov
inc
jae
mov
jo
push
cmc
jbe
mov
mov
dec
rorb
repnz
jno
push
cmp
pop
mov
scas
and
lods
push
jbe
fisubrl
out
mov
jnp
sub
jnp
adc
pop
adc
ret
cmp
into
mov
jnp
mov
jmp
jnp
popf
pop
mov
clc
fimuls
mov
sarb
xchg
xor
ljmp
mov
sbb
aaa
test
dec
faddl
push
push
insl
pusha
pushf
sbb
push
shlb
out
sbb
js
ficoml
stos
pop
negl
xorl
xor
cmp
pop
or
mov
mov
xlat
pop
movsl
callw
mov
stos
jp
add
sbb
jnp
sub
add
cmp
mov
out
fwait
cmpsb
outsl
or
mov
sub
ljmp
testl
in
jecxz
cmp
inc
jnp
mov
push
movsb
or
push
gs
movl
mov
cltd
sti
nop
aaa
lahf
pushf
jnp
mov
inc
movb
lods
jnp
lock
iret
rolb
push
and
pusha
xor
xchg
mov
mov
iret
in
ja
fstpt
pop
je
mov
ljmp
push
sub
sub
rcrl
pop
pop
sbb
jns
ss
jae
daa
xor
call
jnp
nop
sbb
push
cmpsl
popl
testb
xor
or
lahf
imul
mov
mov
call
add
out
jnp
int3
ss
nop
bound
fsubrs
gs
aad
or
loop
call
sub
jnp
loopne
sbb
enter
push
pushf
jl
xor
cli
jae
imul
mov
in
xor
push
daa
movsl
xor
aad
lock
dec
imul
xchg
scas
call
dec
cmp
mov
jno
dec
and
xor
pushf
mov
dec
mov
jg
or
dec
js
lret
outsl
pop
fisubrl
push
call
stc
lods
and
hlt
add
cli
dec
sahf
sub
loope
in
mov
push
lods
imul
adc
dec
push
sahf
lods
repnz
inc
bound
inc
or
outsl
pop
sbb
pop
bound
dec
cmp
jg
scas
lods
jae
fisttpl
out
jno
xchg
imull
add
ljmp
push
push
popa
call
rol
jbe
jns
lods
popf
push
jnp
and
in
movsb
lods
mov
add
mov
jbe
fldl
xor
stos
push
pop
ret
shll
jns
daa
hlt
cmpb
imul
push
fildl
jns
push
mov
push
jnp
outsl
or
sub
pop
or
lds
cmc
dec
mov
sbb
lcall
sbb
pop
xchg
imul
push
jne
push
cld
nop
aas
or
jo
fsubrl
lock
and
test
pushf
test
dec
sub
rol
xchg
testl
jnp
lea
adc
insb
das
dec
cld
loop
inc
dec
fcomi
stos
pop
and
xchg
clc
jnp
insb
icebp
shll
out
mov
test
sbb
xchg
mov
jg
in
or
pop
cmp
insl
pop
mov
scas
jne
fidivs
movsl
dec
enter
jnp
xchg
int3
lret
cli
mov
or
sub
popf
je
pushf
imul
sahf
and
cmpsb
sub
loope
inc
cltd
mov
mov
push
xchg
lods
push
jnp
loope
inc
mov
fisttpll
pusha
lods
mov
jnp
in
jno
insl
mov
jbe
in
mov
mov
push
add
xor
insl
cmp
dec
mov
xchg
jae
inc
inc
mov
ret
inc
xor
jae
mov
imul
add
lret
mov
mov
cmovae
aaa
hlt
lock
les
push
jns
mov
ljmp
or
in
and
xor
movsb
mov
sbb
cmp
sub
lret
inc
pop
jno
arpl
xchg
pushf
call
pop
jnp
sub
jmp
in
fnstcw
jns
nop
movsl
xchg
jnp
enter
fisttps
inc
lods
idivl
cmpsb
pop
ja
mov
daa
lret
cwtl
insb
jecxz
jnp
test
adc
popa
mov
jnp
out
mov
or
xchg
sti
xor
std
dec
lods
pop
sarl
mov
insl
xchg
in
jnp
xchg
adc
jnp
mov
xor
add
inc
jnp
inc
inc
pop
out
and
jnp
lods
ds
mov
out
or
sbb
in
dec
sub
jnp
push
mov
movsl
imul
fisubrl
push
jnp
in
imul
jnp
insl
out
mov
icebp
push
jnp
aam
cmp
push
pop
dec
sbb
js
xchg
push
decb
std
scas
jmp
cmc
shl
jnp
out
sub
das
test
mov
lock
jge
loopne
cwtl
aaa
popf
lods
adc
push
lret
push
mov
xchg
jnp
into
inc
in
add
imul
jecxz
push
cmp
ret
into
jnp
sub
sub
xor
jnp
call
pop
cmpb
mov
xor
outsl
add
and
cltd
and
mov
mov
mov
js
call
inc
sub
and
push
rorl
mov
sbb
iret
mov
xchg
xor
ja
inc
cmp
and
jae
push
popf
out
add
xchg
jae
or
lret
or
mulb
adc
dec
push
mov
in
insb
insl
fidivrs
inc
scas
push
lret
rcrb
pop
xorl
sbb
dec
pop
data16
out
or
cmpsl
sub
in
inc
jb
jnp
jecxz
xlat
ss
enter
push
mov
cmpsl
loop
aaa
ja
jnp
pop
sbb
jne
fiadds
hlt
jnp
mov
cmp
lods
dec
lcall
push
popa
icebp
adc
add
add
imulb
jb
ds
jnp
xor
push
in
ja
es
ljmpw
aas
popf
xor
cmp
jnp
out
push
lods
push
in
sti
or
dec
mov
jnp
cmpsl
mov
mov
mov
push
xor
mov
shlb
mov
jp
outsl
insl
cs
sbb
adc
fnstcw
jae
pop
cmp
xorb
mov
mov
sahf
mov
shll
jmp
rol
add
cmp
dec
adc
ss
inc
sbb
mov
jnp
mov
jnp
dec
cld
dec
enter
jnp
cli
jmp
addr16
sti
xor
inc
in
mov
push
fstl
jnp
sbb
lret
cmp
mov
mov
insb
jno
notb
mov
jae
mov
pop
pusha
xchg
inc
div
dec
xor
jnp
sub
mov
dec
hlt
jmp
jnp
jg
std
pop
enter
sarl
sbb
pushf
mov
mov
xlat
mov
cmp
cmpsb
or
daa
and
mov
or
jnp
push
in
ret
mov
ds
push
push
jnp
fidivl
int3
cwtl
cmc
lcall
push
aaa
insl
dec
mov
int
jnp
imul
ljmp
lds
negl
mov
sub
sbb
movsb
lock
bound
shrl
out
js
pusha
sbb
fstpl
popf
mov
pop
jbe
push
adc
jnp
pushf
lds
insl
gs
lock
lods
int3
sub
fistl
or
out
mov
pushf
xor
sub
test
mov
mov
mov
xchg
jae
decl
hlt
dec
outsl
sub
cmp
dec
inc
lea
xchg
out
and
add
mov
aam
add
pop
xor
ja
lods
inc
lret
lods
push
jnp
adc
fimuls
rcl
jnp
and
outsl
jl
or
test
lret
jnp
loopne
movsb
fsts
out
jnp
and
mov
xchg
imul
jns
out
mov
pop
add
sbb
cmp
ljmp
cli
sbb
mov
jnp
fimuls
xchg
jnp
arpl
daa
jg
jp
rolb
popa
lods
mov
fisubrl
adc
out
loop
jl
adc
enter
or
lahf
push
outsl
xor
enter
sbb
loope
lret
fldl
lahf
sahf
jnp
or
insl
jns
jnp
mov
push
cmp
out
popa
cmp
fdivs
jnp
fdiv
adcl
jbe
bound
and
sbb
adc
push
rdpmc
add
add
ja
gs
mov
insl
mov
test
xchg
jnp
js
shlb
push
xor
sub
mov
mov
jnp
addb
pushf
mov
cmp
jmp
xor
stos
xlat
jnp
or
jo
jae
inc
xchg
jns
jnp
gs
or
loope
or
sti
dec
outsl
outsb
in
mov
and
adc
dec
pushf
or
jnp
test
dec
jnp
dec
popf
rorl
cmp
xor
jnp
push
lahf
insb
sti
pop
mov
lds
jl
cmp
mov
or
popf
pop
add
in
mov
call
xorl
push
jp
mov
xlat
jnp
lods
jo
cmp
pop
add
rcll
idivl
adc
arpl
jne
stos
shll
test
adc
cmp
imul
out
popf
push
daa
aas
adc
pop
pop
fisubl
jnp
sbb
enter
pop
inc
pop
and
xchg
bnd
mov
ret
mov
popa
test
cld
imul
push
sub
or
pop
imul
sbb
mov
call
push
iret
inc
lcall
adc
mov
mov
mov
xor
push
addr16
sub
cmpsb
ljmp
mov
pop
cmp
pop
lods
in
ljmp
sahf
mov
jnp
stos
inc
inc
push
nop
dec
scas
call
add
jmp
imul
in
dec
jnp
rorb
mov
mov
inc
lea
test
loopne
sub
out
jl
dec
inc
icebp
insb
jnp
in
xor
jg
mov
jnp
adcl
cmpsb
scas
push
pushf
sub
dec
andb
jb
jnp
pop
jb
sbbl
lahf
inc
jo
bt
mov
xchg
adc
jnp
fwait
dec
int3
lret
jbe
sarb
into
cs
adc
xchg
in
jb
or
jnp
dec
mov
scas
mov
cmp
push
ljmp
add
cltd
adc
mov
sbb
inc
cmp
mov
pop
jnp
lahf
sbb
mov
hlt
mov
movsl
in
add
push
lea
jnp
lret
xchg
cmp
call
jnp
xorl
or
inc
push
dec
sbb
loopne
ja
cmp
outsb
lcall
hlt
test
cmp
in
adc
popf
sub
sbb
adcl
adc
cmp
xor
arpl
push
sbb
cld
outsb
mov
sbb
cld
push
adc
sub
int
xchg
fidivrl
in
xchg
mov
pushf
sahf
cltd
stos
adc
aam
push
outsl
sarl
ljmp
lods
fistpl
mov
jmp
dec
call
jno
les
pop
and
pop
sbb
aas
mov
sbb
adc
outsl
mov
imul
stc
jecxz
xor
pusha
inc
jae
stos
sbb
mov
xor
pop
jo
insb
arpl
adc
pushf
pop
imul
das
pop
sbb
scas
adc
cmc
pusha
test
push
inc
jnp
xchg
int3
or
repz
vpermq
bndstx
adc
mov
dec
jnp
and
sub
xchg
xor
not
movsl
inc
sub
adc
xchg
dec
pop
outsl
dec
shr
jnp
pop
inc
repz
xchg
or
out
bound
jnp
test
daa
jae
mov
mov
sub
jnp
rclb
fistps
lcall
dec
sbb
xor
mov
cmpsl
gs
sahf
insl
out
sub
mov
jnp
dec
sar
stos
pushf
lods
int3
jnp
fisttpll
pop
jnp
jns
sub
std
in
sarl
cli
adc
jl
jbe
in
and
or
xchg
xor
fwait
scas
cmp
out
in
pop
lds
shll
sti
push
shr
lods
add
aad
mov
cwtl
shrb
add
cmpsl
push
cmp
pushf
jnp
in
xor
loop
sarb
jle
dec
fdivr
in
pusha
jnp
mov
sub
or
lods
dec
push
mov
mov
jae
mov
dec
push
ljmp
scas
inc
ficoms
and
arpl
out
loop
repnz
scas
dec
jae
or
xlat
icebp
insb
daa
std
and
pop
lcall
xor
pushf
jecxz
mov
add
inc
jnp
mov
or
aad
daa
gs
jnp
xchg
jg
sbbl
ja
mov
data16
in
jnp
sbb
nop
push
jne
in
pushl
adc
hlt
popa
int
into
mov
jg
cmp
jnp
or
pop
imul
imulb
idivb
repz
add
mov
mov
repnz
bound
sub
jecxz
and
and
jo
sahf
cmp
movsb
lds
icebp
mov
loopne
jnp
dec
clc
or
dec
mov
mov
fldt
pop
jnp
rcl
jge
dec
or
xor
jns
cmp
mov
pop
lods
das
addr16
mov
loop
loop
stc
fisttpl
imul
cmp
mov
je
dec
jnp
inc
incb
mov
rcll
leave
ja
ds
into
lret
jnp
sbb
jp
mov
jbe
lahf
mov
dec
jnp
inc
in
ljmp
pop
xchg
popa
ja
dec
sti
xlat
cmpb
adc
pop
mov
loopne
sbb
js
jnp
pusha
push
mov
sti
jbe
xchg
cmp
push
mov
stc
jae
cmp
push
jl
dec
push
rcrb
shl
cmpsb
sub
or
ja
ret
xor
iret
sti
fwait
daa
add
stos
imul
gs
shl
iret
adc
add
inc
sahf
cs
idivb
scas
or
jnp
or
add
jnp
call
fcompl
xchg
idivl
jae
add
insb
lret
jnp
mul
mov
repz
jnp
aas
ret
mov
stos
xor
jnp
xor
inc
pushf
fidivrl
add
jnp
roll
xor
sbb
clc
test
idivl
jecxz
xor
hlt
inc
cmp
pushf
scas
fisttps
movsl
mov
sbb
cli
sbb
jnp
mov
pop
add
inc
jnp
fstp
loop
xor
push
jnp
insl
cs
jnp
int
and
push
jnp
cmp
xchg
bound
jnp
sbb
loope
mov
push
add
jnp
or
jnp
xor
imul
jne
fadd
push
sub
mov
pusha
jge
in
pop
mov
adc
ss
jnp
xor
xchg
lods
andl
mov
push
or
jnp
jb
and
jne
dec
cmpsl
sub
or
xchg
arpl
inc
movsb
xchg
jnp
push
and
mov
add
shll
outsl
cli
lahf
not
sbb
sbb
pop
mov
xor
cmp
mov
cwtl
sbb
pushf
push
lods
jns
je
jnp
lds
xor
jo
cmp
repz
push
mov
lret
shlb
cmp
jnp
fstpt
fcomps
mov
jnp
add
rolb
lods
es
add
mov
lahf
outsl
lock
jnp
mov
pop
aam
jp
ljmp
lods
jnp
push
data16
mov
pop
jnp
pusha
jle
xor
jnp
and
ret
jnp
or
add
jnp
pop
jb
cli
lea
or
inc
mov
test
adc
sub
jnp
movsl
jg
call
xchg
pop
jnp
mov
inc
mov
xor
xchg
xor
jnp
push
lods
jno
dec
rorb
adc
push
mov
cmp
cli
addr16
mov
aas
or
ja
lods
mov
das
movsl
jnp
stos
lods
jae
lock
sti
mov
rorl
out
xor
inc
mov
jnp
call
cmp
dec
add
jecxz
mov
mov
and
mov
inc
ficomps
fs
push
das
out
mov
decl
jnp
push
jp
jne
dec
iret
and
insb
pushf
jnp
cmpsl
jns
lret
inc
mov
jbe
push
ret
insl
cli
add
test
test
in
repnz
mov
cltd
or
and
fsub
aad
int3
inc
xor
xor
pushf
jnp
test
push
sar
pop
cmp
sub
scas
sbb
sub
mov
jnp
lods
mov
sbb
ss
sub
lods
push
jnp
icebp
push
insb
out
add
xchg
lea
push
cmp
xlat
mull
add
out
mov
add
outsl
cld
push
ljmp
lcall
icebp
dec
dec
add
aam
lods
int3
lock
divl
mov
xchg
cld
and
jbe
dec
sub
sub
loopne
es
and
pop
mov
jne
lcall
daa
mov
jnp
insb
mov
pushf
repnz
cli
jnp
lods
and
cld
and
imul
xchg
js
sbb
xchg
ja
ljmp
jbe
cmpsl
or
call
stc
push
mov
shrb
mov
mov
loopne
or
mov
mov
cmp
add
jbe
into
lds
lcall
cs
aaa
xorb
inc
sub
sbb
scas
mov
cwtl
fistpll
sbb
lods
sub
cmp
inc
push
mov
repz
popf
fidivrl
mov
xchg
fwait
sub
loope
sub
push
cmp
jnp
lcall
jnp
lahf
push
sub
gs
cmpsl
pop
scas
cwtl
jp
loopne
or
rorb
jnp
hlt
push
pushf
js
jo
add
adc
test
mov
js
mov
or
inc
lds
add
xor
hlt
mov
add
lods
shll
or
aaa
jo
or
push
cwtl
ja
imul
bound
cmc
test
popa
in
push
jbe
outsl
jns
mov
call
lret
imul
or
push
aam
or
jae
or
nop
fwait
pop
gs
in
mov
mov
jns
mov
in
push
mov
incb
leave
xlat
clc
cmc
addr16
pop
mov
jnp
mov
push
in
out
std
call
mov
mov
jae
gs
push
in
shrb
out
hlt
inc
leave
scas
in
jnp
fidivs
lods
lahf
aad
jnp
dec
ss
or
jnp
stos
xor
cmovne
jb
in
pop
lods
pop
or
divb
xchg
sbb
in
addb
in
or
jnp
and
dec
mov
fchs
jb
jnp
aam
push
fisttpll
shl
jnp
sbb
mov
enter
mov
xor
cltd
mov
or
stos
call
push
sbb
or
in
mov
inc
stos
jnp
inc
inc
movsl
lods
jnp
lret
jl
int
sub
sbb
rclb
in
push
jae
cmp
cmp
jnp
lods
mov
inc
or
clc
mov
ret
imul
xor
adc
stos
adc
push
bound
push
cmp
jl
or
add
mov
stos
fs
jnp
and
and
loop
das
outsl
push
push
add
xor
popf
dec
adc
xchg
pop
adc
sbb
outsl
jmp
in
out
daa
pusha
adc
testb
lret
mov
jnp
stc
pop
jp
outsl
jecxz
adc
jnp
push
js
push
jp
and
and
mov
out
int3
add
enter
pop
daa
stc
int3
mov
sbb
inc
jae
jg
cmpsb
repnz
stc
pop
pop
scas
or
ficomps
pop
adc
in
mov
ja
fmull
jnp
xor
insl
mov
pop
and
addr16
inc
add
jno
cmp
clc
popa
cltd
into
out
mov
andl
aas
aaa
iret
stos
adc
jl
in
jnp
xchg
cmpsl
stc
out
mov
jg
notb
pop
push
mov
fadds
mov
mov
jnp
scas
jl
xor
jnp
mov
push
cwtl
jnp
dec
cmp
out
xchg
jnp
add
inc
mov
mov
jl
lahf
lods
mov
arpl
jecxz
cli
repnz
or
ror
push
lcall
fdiv
ja
mov
fsubs
jae
lock
dec
xor
mov
loope
aad
xchg
jnp
jno
add
rcrb
cltd
insl
rorl
xchg
into
fimull
divb
cmp
mov
sub
imul
ror
js
cmp
mov
push
pop
ja
je
insb
jnp
jle
dec
icebp
addr16
imul
mov
xchg
lock
mov
mov
add
mov
and
inc
mov
mov
or
shll
xlat
xor
xchg
mov
ljmp
or
inc
stos
jnp
pop
cmp
and
cmp
sbb
jb
and
xor
mov
mov
jae
mov
jnp
sti
or
mov
mov
dec
push
movsb
adc
std
rolb
aaa
test
pop
pop
and
imul
popf
dec
pop
andl
pop
sbb
out
push
in
inc
cmpsb
lods
daa
je
xlat
jnp
sbb
sahf
pop
or
pop
mov
out
mov
jnp
mov
and
gs
xor
pop
push
arpl
lods
popf
jg
je
stos
fs
sbb
inc
out
jae
or
jnp
int
and
sub
imull
mov
jnp
ret
scas
mov
movsb
jmp
or
hlt
jnp
pop
pop
jo
or
sub
mov
in
insl
jnp
jmp
adc
cmp
outsl
mov
test
cmpsl
cmpsb
pop
dec
in
jnp
mov
dec
adc
xor
jnp
das
pop
repnz
pop
aad
loope
mov
incb
inc
jnp
sub
push
mov
cmc
aad
jnp
mov
jg
xor
add
push
idivb
fiaddl
scas
jnp
js
ljmp
jnp
hlt
mov
sub
cmp
and
test
jnp
jae
aad
sar
imul
dec
testb
imul
lret
mov
in
rorl
jns
movsl
mov
adc
jno
adc
ds
sbb
jnp
jns
stos
clc
vpsubsb
jp
push
pusha
adc
jae
mov
btc
outsl
mov
pop
mov
maskmovq
divl
dec
mov
fiaddl
mov
mov
pushf
jbe
jnp
sbb
push
js
mov
and
dec
sbb
xchg
pop
sub
ret
adc
fstps
aaa
jns
pop
lds
xor
or
sti
pop
inc
dec
data16
dec
sbb
pop
jae
test
jnp
scas
xor
jno
sbbl
mov
ja
int
divl
enter
stos
cmp
dec
adc
sub
shr
push
jns
clc
cmp
inc
sub
jnp
insb
sub
or
sbb
jp
jnp
insl
test
jnp
cs
dec
xor
jo
jp
jnp
mov
mov
lret
sbb
ljmp
jnp
sub
jnp
mov
cmp
xlat
or
scas
inc
aaa
or
jnp
dec
inc
pop
and
add
scas
jbe
mov
in
fidivrl
scas
xor
pop
aaa
dec
sti
jae
cmp
shlb
mov
dec
xor
mov
mov
add
shl
lret
jnp
ss
mov
jnp
jb
xor
mov
jnp
test
xor
cmp
addl
cltd
scas
and
sbb
fwait
dec
ja
adc
jnp
mov
pop
cmp
popl
imul
add
jnp
jecxz
add
jnp
cmp
repnz
bound
sti
mov
js
sub
push
jbe
push
scas
aam
xchg
mov
and
or
cltd
xor
mov
sbb
or
jnp
pop
and
jo
xor
sti
mov
insl
push
outsb
xchg
jp
dec
jno
cmp
push
or
insb
push
add
sub
cmp
sbb
xor
cmpsl
pop
dec
imull
sub
jnp
cwtl
adc
sub
jnp
fisubl
xchg
xor
and
leave
cmp
jnp
scas
lods
dec
sbb
icebp
test
jb
int
mov
jne
xchg
jnp
std
lret
cmp
int
test
scas
insl
into
mov
push
shl
scas
cmc
test
push
decl
jne
or
outsb
sub
adc
lret
scas
mov
sbb
push
ret
jnp
loope
imul
pusha
mov
insb
jnp
sbb
pop
jnp
sbbb
cwtl
lock
je
mov
cmp
xchg
outsb
mov
nop
stos
jo
and
xor
bnd
sbb
movl
daa
inc
nop
sub
ljmp
and
sub
pushf
jne
inc
pop
loope
gs
adc
lods
mov
adc
mov
jnp
xor
sarb
in
into
pop
sbb
lock
ss
xchg
fsubp
mov
sub
cmp
mov
push
testl
jnp
fsubrs
out
shll
clc
jnp
cmp
lret
sti
sub
jnp
fnstcw
fists
std
idivl
mov
mov
imul
jae
pop
push
xor
cmc
hlt
sbb
mov
jmp
mov
mov
push
icebp
jo
repnz
jnp
js
add
stos
pop
sahf
insl
ja
sub
fs
stc
aam
divb
movsb
imul
add
jae
xor
xchg
pop
inc
cli
sub
xor
scas
cmpsl
dec
outsl
mov
push
jb
jo
jnp
lods
test
out
or
hlt
movsb
push
jnp
cs
mov
sub
ja
fistps
sbb
sbb
sub
lcall
sarl
add
cmc
sub
jnp
push
or
pop
lret
insb
jp
dec
sahf
outsb
add
mov
xor
rcrl
das
cmp
mov
ret
mov
mov
aaa
cmc
sahf
movsb
jne
or
ficompl
pop
push
mov
sbb
out
jle
imul
std
and
add
mov
xor
ja
adc
adc
test
pop
sub
jnp
push
lret
js
inc
sbb
cld
mov
add
pop
jnp
mov
pusha
test
cmp
clc
les
loopne
jp
pop
imul
pop
xor
xor
lds
and
jo
jnp
mov
lods
stc
jnp
cmc
push
ljmp
inc
jnp
in
pop
xor
mov
jecxz
ds
ret
mov
daa
mov
dec
cmpsb
pop
int
cmp
pop
stos
cld
shr
popf
mov
xorl
fnstenv
clc
xchg
push
xchg
jb
jnp
and
aam
pop
inc
es
repz
xchg
or
or
or
push
in
lock
jnp
jp
jecxz
rorl
jae
ljmp
dec
insb
add
stc
xchg
in
aad
jnp
add
and
lods
xor
cmc
lcall
or
push
les
movsb
jno
xchg
add
aad
int
fdivs
mov
xchg
cs
xchg
jge
sbb
pop
mov
or
popl
scas
loopne
stos
xlat
cltd
mov
jnp
ret
dec
movsb
ja
repnz
mov
cwtl
repnz
movsl
jnp
cs
sbb
inc
lock
cmp
mov
fs
sbb
jnp
cld
cwtl
out
out
mov
mov
cmp
loop
jns
nop
mov
adc
hlt
xor
jge
out
cmp
mov
pop
xor
jnp
mov
inc
jne
cmp
dec
test
and
jns
cmc
mov
fisttps
or
cmpsb
jmp
add
scas
sub
sub
lds
jnp
and
arpl
jnp
mov
sbb
add
cmp
imull
sub
mov
inc
jnp
sbb
out
mov
xor
jae
sbbb
xchg
adc
testl
jae
repnz
insl
cmp
jnp
sub
lret
add
jbe
imul
das
ss
hlt
bnd
push
mov
and
xor
xchg
fcmovu
push
call
cli
or
in
and
js
cld
mov
mov
jnp
movsb
mov
sub
pop
hlt
mov
sahf
adc
jmp
inc
testl
mov
in
dec
ljmp
aaa
fisttpl
int3
cmp
dec
lods
jmp
or
test
lahf
jnp
cmpl
shrb
ffree
mov
sbb
dec
xchg
fistps
stos
dec
or
sub
sub
cmc
popa
mov
inc
lock
outsl
clc
lret
dec
xchg
jnp
repz
push
dec
shlb
dec
sahf
pop
xor
pushf
imul
and
sub
xchg
mov
repz
xor
out
and
or
es
leave
arpl
sbb
lret
jno
xchg
testb
jnp
mov
scas
mov
pop
std
cmpb
and
lds
jnp
jg
div
inc
push
outsb
adc
sbb
dec
adc
sarl
lret
int
je
lods
jp
add
sub
jmp
dec
cmp
cmp
add
roll
lods
mov
nop
jb
jnp
pusha
jecxz,pt
adc
in
jnp,pn
imul
jle
out
xchg
and
in
xchg
jae
mov
or
cmp
loop
imul
sub
std
push
test
dec
daa
jnp
xor
jnp
xchg
mov
gs
adc
daa
stc
lret
jnp
int3
shll
jle
mov
mov
gs
fwait
aaa
mov
mov
imul
jae
out
out
add
mov
out
jns
sub
int3
insl
jae
icebp
aaa
hlt
or
mov
jnp
xor
lock
mov
je
stos
rorb
fidivrl
inc
lods
test
mov
push
outsl
mov
cmpsb
sub
add
push
jb
jnp
jl
sub
mov
push
jnp
cmp
push
imul
mov
mov
aas
faddl
cmpsb
sub
xor
bnd
nop
mov
lretw
insl
lea
and
pushl
add
fadds
sahf
dec
icebp
divl
or
dec
xchg
popf
adc
sbb
lea
rcr
jno
mov
cli
push
inc
jnp
fcompl
daa
jnp
aad
mov
jnp
or
dec
setnp
out
insb
cmp
shll
cs
fcomps
jnp
mov
jmp
imul
mov
aam
je
sbb
ficomps
or
bnd
jnp
mov
push
or
or
and
xor
idivb
sbb
inc
popa
or
cltd
mov
add
jnp
jecxz
out
in
mov
repnz
cld
ss
les
inc
daa
sbb
insb
je
rorl
repnz
or
sub
inc
add
das
pop
cs
lods
sub
mov
cmp
sbb
insl
xor
cmpsb
lret
sbb
jnp
lret
sti
stos
jnp
sub
or
dec
cmpsl
movsl
jnp
xor
cld
jb
rcrl
inc
pop
gs
xchg
mov
data16
jne
mov
fsubrp
xchg
ss
mov
sbb
js
jbe
pop
lods
stos
push
popf
lret
mov
jns
and
lods
arpl
push
mov
jno
dec
sbb
dec
aaa
and
lahf
fdivl
sub
xor
push
jl
jo
xor
jns
xchg
sub
call
mov
int
je
shll
pcmpeqw
cvtpi2ps
cmp
or
loop
in
inc
lcall
loopne
sub
stc
jae
jo
ret
jnp
cmp
popf
ss
enter
mov
in
jbe
jmp
js
jb
xchg
clc
cmp
mov
xchg
bnd
gs
cli
jo
adc
jnp
scas
dec
mov
jnp
sbb
insl
add
out
mov
movsl
jne
sti
push
xor
mov
jnp
ret
lock
lock
mov
jg
xchg
lods
jnp
nop
ljmp
int
out
mov
sub
jne
jbe
sub
aad
sub
pop
call
shrb
cmp
jbe
xchg
fimull
dec
int3
xchg
js
in
cmp
gs
shrl
mov
sbb
js
outsb
sub
xchg
push
jae
or
loop
jnp
stos
into
ss
mov
jnp
sbb
mov
jnp
enter
push
xor
jnp
inc
pop
mov
mov
xor
loope
mov
test
sub
sti
jno
cmpsb
inc
push
pop
jbe
jl
jnp
cltd
ss
cmc
outsl
xchg
jne
sub
repz
aam
jnp
cmp
pop
jl
mov
imul
add
add
in
js
jnp
cs
daa
push
ljmp
jae
jno
out
js
jnp
outsb
xor
fwait
repz
sub
mov
cwtl
jnp
inc
icebp
ja
xchg
sbb
aaa
cmp
mov
cwtl
add
jnp
repz
fiaddl
scas
pop
clc
aam
les
xor
fdivrs
push
inc
jmp
testl
jnp
mov
ss
ljmp
jae
sbb
jnp
cmp
xchg
fiaddl
das
lock
out
repz
repnz
jnp
cmp
mov
imul
xor
call
ljmp
mov
jnp
mov
lret
nop
mov
inc
rcll
outsb
xor
outsb
jnp
xor
or
jnp
mov
xlat
push
jnp
cmp
hlt
jg
movl
ret
jae
negb
mov
dec
sbb
out
cmpsb
pusha
daa
mov
jb
stc
outsb
mov
shrl
add
jl
mov
add
inc
lahf
lock
outsl
mov
imul
and
push
popa
dec
test
dec
pop
scas
jnp
mov
cmp
inc
fnstcw
out
aam
mov
je
mov
xchg
mov
jnp
push
in
jnp
subl
xorl
dec
jnp
out
repnz
cwtl
stc
jnp
push
test
pop
ljmp
mov
fidivrl
dec
jnp
aad
sbb
aaa
jp
sub
insb
test
mov
mov
sbb
xchg
sub
pop
pop
repnz
sub
jnp
jne
and
popf
mov
pop
xor
stc
mov
mov
and
sets
sub
inc
rorb
jb
fstpt
pop
pop
push
mov
cmp
shlb
jnp
loopne
xor
repnz
jp
in
xor
mov
jnp
outsl
mov
dec
sbb
stos
sub
jae
and
lahf
jnp
dec
inc
mov
mov
mov
hlt
repnz
sub
jl
mov
sahf
push
stos
adcl
inc
xorb
jno
xchg
dec
cli
dec
fwait
sbb
inc
shl
pop
lock
pop
xchg
push
push
or
jb
stos
mov
or
pop
mov
lcall
sub
fistpl
push
pop
es
cmpsb
pushl
sarb
repnz
lods
loopne
cmp
xchg
sub
cmp
cmp
ret
ret
loope
xor
jo
clc
jnp
jecxz
cmp
mov
test
xor
idivb
jp
cli
mov
call
outsl
pop
in
in
or
aam
jnp
sti
mov
pop
jnp
js
add
popa
sub
xchg
or
mov
bnd
xchg
lcall
jle
push
adc
mov
fidivl
addb
les
xor
mov
pop
sub
outsb
jnp
dec
sbb
add
int
repz
or
lret
lret
movsl
pop
lock
jae
imul
cmp
or
shlb
jnp
pop
repz
outsl
arpl
adc
inc
clc
xor
adc
and
arpl
mov
cmp
outsl
dec
mov
mov
insl
in
data16
lcall
add
stc
add
cmp
lds
js
sbb
jbe
mov
jmp
dec
adc
jb
pop
stos
sbb
xor
cmpl
clc
jnp
aad
fcmovu
pop
rcl
cmp
cmc
out
fcmovne
jnp
xor
adcl
shrb
cmp
mov
daa
sub
and
mov
inc
jle
xchg
xchg
jnp
scas
adc
jo
int
fldt
dec
xor
xchg
shrl
fistpl
adc
aam
mov
jnp
add
adc
mov
sbb
cld
cmp
and
lds
add
jmp
inc
mov
into
stos
and
push
jb
mov
sbb
lds
clc
leave
jae,pn
in
mov
js
cmp
xchg
stos
xor
jno
jne
int3
adc
repnz
sub
in
inc
cmp
hlt
pop
imul
mov
into
je
jnp
stos
leave
xor
fcoml
subl
sbb
out
loopne
pop
out
or
xor
test
jno
cltd
out
jnp
cmp
xor
arpl
or
xor
jnp
ret
pop
and
inc
fisubl
xor
scas
jnp
mov
xlat
sbb
jb
jnp
push
xor
xchg
xor
fwait
lcall
mov
in
ljmp
ss
fcomps
inc
jnp
xor
repnz
les
fcoms
jnp
dec
clc
cld
outsb
push
sti
sbb
ljmp
inc
mov
jnp
repnz
adc
jnp
ss
xor
cmp
jnp
test
outsb
ljmp
jae
jns
stos
mov
std
mov
in
mov
xlat
pop
jnp
repnz
jnp
in
jmp
jns
mov
jmp
js
jnp
sti
nop
or
mov
out
out
jnp
stos
xchg
idivl
cmp
imul
out
ljmp
ss
stos
pop
das
push
int
inc
inc
es
gs
fstps
in
ja
mov
movsb
dec
pop
insb
outsb
xor
out
call
mov
dec
scas
xchg
cmpsl
insl
xor
or
ljmp
mov
pop
rolb
jbe
mov
sub
sub
xor
jno
pusha
out
pop
jnp
lods
mov
add
mov
xor
jb
push
jnp
scas
stc
in
mov
jnp
sub
mov
jnp
push
jge,pt
stos
cld
fdivrl
add
das
mov
mov
fldenv
lcall
arpl
ss
fisubrl
inc
xor
test
lds
mov
mov
xorb
lret
gs
pop
nop
jnp
push
rolb
mov
inc
xor
ja
ljmp
cmp
arpl
fcmovnu
testl
jbe
mov
inc
jnp
mov
jns
push
mov
cmp
jae
push
lcall
ljmp
or
jmp
push
sub
mov
stc
cmp
jle
ss
pop
pop
popf
mov
stos
xor
fwait
mov
push
jb
or
out
jne
cmpsl
inc
jnp
fiaddl
bound
xor
je
jnp
test
aaa
inc
or
jmp
pushf
jg
lock
push
jnp
shrb
sbb
sub
adc
imul
xor
push
mov
shrl
imul
jbe
andb
outsb
jnp
movsb
pop
sub
lds
cmp
arpl
inc
fsubrl
jmp
sbbb
jnp
lahf
in
scas
mov
push
pop
pop
xor
sar
xor
jae
leave
pop
dec
jnp
in
aaa
inc
jg
dec
clc
pop
sbb
ficompl
sub
ja
and
dec
sahf
inc
mov
div
push
dec
insl
out
test
jnp
shrb
lods
popa
mov
loope
movsl
jnp
inc
jno
sbb
mov
jne
call
hlt
mov
lret
xor
mov
jnp
dec
mov
fsubrs
lret
sub
testb
fimull
mov
lea
in
sub
sahf
jnp
fwait
int3
outsl
xchg
mov
mov
out
mov
arpl
pop
xchg
cs
adc
repnz
sbb
stos
jmp
mov
sbb
rol
imul
rcll
jns
fwait
jnp
sarl
scas
lahf
imul
jp
cltd
ljmp
jnp
int3
mov
js
cmp
int
jnp
mov
rcrl
sub
cmpb
insl
sbb
fdivrs
clc
cmp
out
fcomip
hlt
les
jnp
mov
jmp
sbb
sub
mov
jp
xor
cli
shll
out
jnp
je
mov
push
sub
ret
dec
nop
popf
jnp
addr16
and
sbb
cmp
xor
xchg
vmread
ret
insb
cmc
jnp
lock
sbb
int3
xchg
xor
popa
les
fwait
jnp
into
mov
jae
lret
or
xchg
stos
jl
xor
outsl
inc
pushf
scas
scas
decl
arpl
push
jle
jnp
in
or
outsb
aaa
mov
jnp
in
stos
push
mov
psllw
call
inc
jnp
fsubrl
sbb
sub
imul
js
inc
sbb
jg
cmc
sbb
xchg
xor
push
lock
jne
jnp
mov
pop
movsl
jnp
cmpsl
clc
ret
fistpll
insb
les
ret
cmpl
jl
fldt
push
jnp
fcompl
mov
mov
cmp
jb
jnp
add
push
addr16
jl
inc
pop
mov
out
js
jnp
sub
into
movl
shrl
test
stos
das
sub
cmp
add
mov
lds
mov
int
out
mov
jnp
jbe
mov
lods
or
adc
aas
int3
push
xchg
mov
in
daa
mov
inc
jg
jnp
pop
cmp
cli
sbb
stos
jnp
mov
sub
jo
idivb
and
leave
jnp
mov
jnp
cmp
sub
push
xchg
jnp
ficompl
jmp
and
daa
fwait
ret
cmp
sbb
movsb
jnp
push
lret
inc
lea
dec
loop
inc
lock
xchg
jnp
ja
or
insb
dec
jmp
lods
dec
mov
jae
sub
jnp
dec
dec
cmc
push
hlt
shr
cmp
imul
inc
or
loopne
cmp
jle
test
ret
mov
add
scas
cld
jnp
sti
movsl
adcl
jnp
stos
insl
mov
sbb
jp
mov
and
inc
fistps
lods
pop
jnp
cmp
mov
xchg
out
pop
sbb
push
push
jnp
outsb
bound
leave
and
jbe
jae
cs
mov
stos
dec
in
pop
mov
pop
es
cmp
mov
inc
stos
sbb
lock
lret
xor
jae
fldcw
testl
add
xchg
jnp
xchg
fdivrl
push
fstps
lock
xchg
insl
mov
jmp
imul
jae
xlat
and
xor
in
or
lret
int
sbb
sub
jecxz
push
jmp
inc
fnstcw
mov
divl
mov
push
fimuls
adc
cmp
dec
push
mov
adc
gs
push
outsb
ss
jnp
cli
cmp
or
mov
dec
mov
jnp
ret
fwait
jnp
or
pushl
dec
das
or
repz
jae
xor
mov
push
jno
fst
outsb
cmp
xchg
imul
mov
sub
sub
add
outsb
imul
fs
mov
mov
cwtl
adc
andb
jae
cld
and
ret
mov
loop
dec
fs
clc
gs
dec
cmpl
mov
mov
cmpsb
cli
imul
push
mov
repnz
imul
mov
scas
popf
cli
jnp
inc
mov
sub
in
xchg
scas
xorb
cs
xor
int
jnp
sbbl
mov
gs
jno
test
jnp
dec
pop
arpl
adc
mov
push
lods
jne
adc
pop
sbb
dec
ja
scas
fsubr
mov
repnz
dec
psadbw
in
push
adc
stos
jnp
sbb
insb
jb
mov
call
hlt
sub
movsl
xor
jnp
imul
jnp
enter
call
ds
jae
pop
dec
sbb
out
pop
lods
jecxz
ja
mov
mov
sub
dec
fiaddl
adcb
sub
mov
inc
mov
mov
jns
pop
push
clc
dec
jnp
cli
xchg
push
stos
int3
lock
into
xor
scas
xchg
mov
jne
xchg
stos
and
cmc
movsb
lods
inc
jnp
mov
dec
lahf
cmp
xor
fstpt
adc
jmp
fwait
or
test
jns
je
fisubrs
aaa
or
sub
or
jle
mov
cmp
and
jb
push
out
mov
jnp,pn
cmpsb
sub
mov
mov
jnp
outsb
cli
loop
insl
shlb
jb
ljmp
xor
xlat
or
loop
frstor
cmp
adc
jnp
mov
or
xchg
mov
std
adc
test
xchg
sarl
jnp
add
nop
cs
fsubrs
add
dec
or
jnp
xor
js
repz
sub
jns
imul
cmp
je
and
cmp
lret
inc
movsb
fidivs
mov
mov
shll
sbb
xchg
in
push
imul
inc
outsb
xor
jnp
pop
fisubrs
ja
jns
jnp
adc
mov
sahf
fcoms
mov
mov
mov
int
cmp
mov
sub
sti
test
pop
add
aas
jae
mov
lret
mov
jns
or
mov
xor
and
enter
jnp
test
int
sub
cli
jnp
xor
sub
mov
int3
lret
jns
jmp
lahf
jno
ja
nop
jnp
cmp
cmp
and
and
xchg
adc
test
in
fwait
and
jge
scas
xchg
add
mov
hlt
xor
ja
mov
out
lea
jnp
xchg
jae
out
xchg
pop
add
dec
mov
mov
jae
pop
mov
mov
jmp
aaa
jnp
stc
pop
ja
cmpsb
sbb
push
das
jle
jmp
jnp
fnstsw
xchg
adc
jnp
add
cmc
xorb
and
mov
jo
sub
int
imul
arpl
jns
es
pop
and
lret
inc
and
shlb
shl
xchg
dec
or
dec
jae
pop
bound
and
cmp
imul
sahf
fadds
cmc
mov
mov
cwtl
jnp
pushf
cli
jle
push
in
fst
jp
xor
jnp
xchg
pop
cmc
jns
and
aaa
jnp
cs
ja
mov
jnp
jno
xor
or
cli
jnp
sbb
sbb
sub
jnp
xor
cmc
pop
dec
aaa
lea
rorb
and
sbb
fistpll
jnp
in
xor
push
or
testb
lea
mov
xchg
jnp
push
not
jp
cld
repz
nop
loope
mov
ja
gs
scas
pop
out
in
repnz
dec
sbb
lock
cmp
xor
or
rep
lea
push
rolb
pop
pop
ljmp
xor
js
sub
movsl
in
rcrb
jb
jnp
lret
lret
or
adc
pop
xor
addb
pusha
test
movsl
jo
js
mov
inc
bound
inc
ja
sub
mov
scas
or
xlat
lcall
push
mov
cwtl
push
mov
stos
xchg
push
jnp
dec
mov
nop
jnp
mov
xor
test
inc
jnp
mov
jnp
rcrl
cmp
insl
fdivr
divb
fisubrl
jmp
jnp
mov
enter
icebp
jnp
ss
sub
jnp
mov
fs
idiv
jp
ljmp
jae
in
mov
iret
jno
cs
and
sub
jnp
sub
xlat
adc
sub
adc
out
push
daa
in
jnp
and
les
je
das
or
cmp
mov
insl
or
and
repz
sbb
ljmp
aaa
jb
jnp
cltd
ret
das
cs
lds
jnp
into
xchg
xor
jg
jnp
or
je
dec
dec
jnp
ds
sti
hlt
mov
mov
repnz
leave
xor
jae
gs
jl
insl
xor
insb
lea
repz
xchg
jnp
inc
sub
mov
fucomi
dec
arpl
movsl
jnp
pop
mov
outsl
notl
dec
xor
push
xor
insb
cmp
divl
jnp
sahf
mov
mov
cld
cmp
das
popl
mov
xor
insl
fwait
hlt
ljmp
imul
outsl
loop
mov
ja
mov
jnp
ljmp
jnp
pop
sub
in
in
push
in
scas
mov
shll
hlt
mov
sub
pop
imul
mov
mov
std
fistps
lret
in
jnp
xor
stos
sbb
jnp
fldl2t
aad
imull
mov
sub
jecxz
test
movsb
arpl
cs
jnp
shlb
jmp
sbb
popa
imul
fwait
push
jne
mov
int3
sub
sub
sub
sbb
test
mov
outsl
mov
into
std
jnp
pop
mov
xchg
popa
xor
pavgw
lds
jmp
imul
cmpsl
sub
dec
pop
mov
in
add
add
jno
pop
cli
fiaddl
shll
xchg
jl
aaa
clc
les
jnp
imul
mov
lods
mov
adc
xchg
or
mov
add
les
xor
or
icebp
js
shrb
imul
mov
cs
jnp
in
push
pop
aaa
and
jnp
push
or
lret
ja
sti
jle
jp
jns
aaa
lcall
mov
dec
rorb
jne
inc
push
sub
lcall
js
lods
xor
stos
mov
pop
mov
cwtl
fwait
sub
movsl
pop
and
pop
sub
out
jnp
ret
cmp
mov
movl
jnp
add
hlt
push
or
sti
sub
sbb
inc
or
lcall
dec
jge
je
jle
test
lock
xor
xor
pop
cld
jmp
mov
mov
in
jnp
xchg
rorb
cmp
stos
push
jnp
xchg
sub
cmp
idiv
jnp
rorb
out
das
jnp
je
cmp
repnz
in
mov
mov
jnp
hlt
xor
jnp
push
pop
push
aaa
dec
repnz
jnp
jo
push
fs
jp
jnp
in
mov
ljmp
mov
or
sbb
push
jmp
cmp
lcall
imul
leave
mov
in
jnp
lds
mov
xor
les
lret
into
dec
sub
lock
sarl
in
pop
pop
aad
add
push
jo
xor
cmc
xor
inc
outsl
test
fidivs
push
negb
sbb
cmpl
push
add
ja
aaa
ss
sbb
inc
mov
jne
fidivrl
sbb
outsl
lea
inc
push
push
ja
stc
pop
jnp
mov
mov
fcoms
xchg
mov
es
rolb
jnp
mov
lahf
idivb
addr16
enter
jnp
inc
outsb
pop
in
jae
sbb
in
arpl
inc
stos
jnp
repnz
jnp
jge
fidivrl
xor
aad
je
adc
cmp
jge
push
pop
mov
test
fiadds
mov
mov
out
les
push
and
stc
test
enter
leave
ret
in
popa
xchg
pop
je
fidivl
jp
insl
ds
pop
cmp
cmp
in
xchg
aas
in
xchg
outsb
push
sub
in
mulb
jnp
je
cmpsl
mov
clc
jnp
repz
loope
mov
mulb
mov
outsl
rcrl
test
sahf
lods
jbe
test
jno
sbb
or
into
mov
je
fadds
loopne
int3
loope
clc
jnp
xor
mov
xchg
adc
call
arpl
aad
icebp
imull
xor
imul
das
mov
outsl
xor
or
into
pop
ja
ja
pop
lret
dec
insb
mov
jnp
mov
test
xor
jle
mov
add
out
lea
popf
cltd
cmp
test
imul
les
mov
fs
or
mov
or
jnp
ffree
sahf
pusha
es
sbb
sub
xchg
icebp
jnp
and
adc
jnp
js
test
jnp
lea
rolb
jnp
xor
and
lods
adc
mov
mov
jnp
jno
jne
cmp
push
loope
mov
cmp
or
xchg
pop
stc
adc
mov
scas
xor
ljmp
lods
xor
jno
mov
pop
adc
cmp
in
lea
xchg
outsl
push
ret
add
pop
mulb
jae
and
jnp
outsb
xor
ficoml
jnp
lcall
sub
shlb
cmc
sbb
cmp
inc
imull
fcompl
dec
enter
sbb
jb
and
imul
ficoml
lds
in
mov
ljmp
in
mov
sbb
jbe
imul
out
pop
xchg
mov
mov
jns
jnp
mov
and
push
bnd
dec
lds
call
sbb
jno
xor
push
outsl
sbb
je
xchg
jnp
aaa
stos
daa
sahf
stos
scas
jl
insl
jle
or
xchg
lods
xchg
sub
int3
clc
jg
imul
mov
sub
push
sub
insb
fiaddl
jnp
or
pop
mov
cmpsl
ljmp
xor
push
jnp
gs
sbb
cmp
inc
mov
add
cs
divl
cmp
sbb
jge
jmp
fisubrl
arpl
jae
pop
shr
jns
add
ja
int
dec
popa
out
cwtl
fimuls
xor
pop
jle
or
aaa
mov
outsb
sbb
stos
in
mov
jo
or
stos
sti
testl
mov
mov
mov
sbb
xchg
out
or
hlt
pop
inc
cmp
fdivrl
cs
mov
jnp
mov
sub
outsl
mov
jnp
sub
add
mov
sub
jbe
jnp
xchg
cli
cmp
jnp
lods
sbb
repnz
cmp
lret
movsb
cwtl
shlb
in
xchg
outsb
jg
mov
lods
stc
lods
inc
cmp
xchg
pop
insl
sub
imul
pop
insl
mov
outsl
stos
or
aaa
imul
lods
mov
mov
jnp
notl
mov
insb
mov
and
out
repz
jnp
lods
rol
mov
cmc
movsl
ljmp
ds
mov
sbb
int
mov
aaa
mov
pop
or
mov
mov
sbb
xchg
push
xor
cmc
dec
lret
es
cmp
ds
push
dec
dec
inc
out
pop
jb
js
imul
add
fdivrs
adc
fisubrl
or
mov
xchg
jnp
call
mov
sbb
jp
jnp
sbb
mov
repz
cld
or
inc
xlat
gs
pop
or
jnp
in
repnz
add
jae
mov
lock
sbb
push
jp
gs
repz
push
cmp
imulb
jnp
data16
inc
js
sti
xor
icebp
pop
idivl
cmpsb
or
push
testb
js
adc
inc
dec
jb
jl
ljmp
in
ret
sbb
xor
lahf
test
dec
sbb
mov
sub
jnp
xlat
xchg
dec
out
cmp
xor
aad
push
lock
jnp
ret
xchg
fidivl
push
pop
pop
jnp
xor
icebp
xor
jnp
adc
ja
sti
cli
insl
fs
cld
sub
mov
jnp
or
and
mov
push
pop
out
mov
jnp
cs
outsb
stos
dec
adc
call
stc
int3
lock
outsl
adc
notl
jae
or
out
cmp
mov
jnp
and
vmwrite
fdivp
adc
or
outsl
mov
inc
mov
cmpb
scas
subl
add
mov
jnp
cld
push
orb
lcall
sub
jnp
fimull
cmp
jnp
rcrl
and
jnp
pxor
jnp
insb
insl
sbb
pop
aaa
jns
stos
push
hlt
pop
test
sub
icebp
xor
jae
push
sti
jp
int
sub
ss
jnp
dec
inc
mov
add
and
jnp
repnz
jne
int3
jmp
jbe
push
inc
dec
icebp
shll
or
jnp
js
dec
cmp
outsb
movsb
dec
sbb
cld
cmpsl
js
ficompl
jg
jnp
or
popf
mov
jnp
rolb
fcmovb
inc
dec
sub
sarb
mov
push
cmp
gs
pop
loopne
test
cmpsl
jnp
aam
int3
fisubs
push
aaa
jo
jnp
fisubl
xchg
cltd
aam
mov
enter
lret
push
jmp
jmp
jnp
in
hlt
scas
dec
imul
push
jnp
fsubp
xchg
mov
push
xor
clc
popw
adc
mov
in
adc
js
mov
jae
test
std
scas
xor
je
imul
das
ret
insl
es
cmpl
sbb
mov
ja
cmp
in
and
xor
jnp
stc
sub
jnp
into
aaa
mov
jnp
inc
sbbl
xor
popl
divb
scas
sbb
lcall
jne
sub
mul
jbe
repnz
rorl
in
pop
dec
cld
jae
sarb
icebp
push
insb
insb
push
jnp
aad
sbb
ljmp
scas
jnp
xchg
dec
mov
jnp
sbb
mov
in
mov
mov
or
xor
sub
insb
arpl
sbb
or
mov
or
xor
xor
fstpl
loopne
push
int
mov
jnp
out
mov
stos
xor
adc
dec
repz
jo
clc
test
and
adc
aaa
cmp
mov
sub
jp
pop
mov
insl
scas
fiaddl
inc
das
test
pop
jnp
xor
subl
aam
fwait
repnz
xor
push
btr
imul
loop
jnp
into
mov
jae
add
pop
jo
leave
fnstcw
jnp
aas
sub
xor
test
lret
ja
mov
and
xor
xchg
jge
out
sub
mov
xchg
je
add
repz
fistps
clc
or
lods
jnp
mov
roll
jnp
aaa
sbb
mov
jmp
icebp
jnp
out
pop
jns
push
mov
in
outsb
out
ljmp
mov
push
xorl
cld
or
call
scas
jbe
or
fsubrl
and
lcall
xchg
loop
aam
les
cli
sarl
pop
or
mov
jnp
out
sbb
neg
xchg
bnd
loop
pop
pop
pop
jmp
in
cld
jnp
lds
jb
sti
push
push
out
jnp
daa
dec
pop
cmp
jnp
or
out
push
cmp
jnp
and
jnp
cs
push
lret
and
xor
mov
inc
pop
inc
nop
imul
add
call
pop
jns
cmp
sub
jbe
pop
lahf
imul
repnz
push
pop
add
aad
jbe
fs
sbb
ljmp
push
sbb
dec
in
add
xchg
push
mov
adc
ss
or
fidivrl
sub
mov
push
mov
cli
ljmp
ss
jg
push
mov
jno
jge
xor
sbb
xor
enter
lods
mov
add
sti
mov
mov
fcom
dec
ljmp
fistl
and
jae
sub
xor
ret
xor
inc
clc
sub
inc
jnp
in
xchg
add
popf
or
loop
lret
cmpsb
jno
cmp
and
mov
inc
pop
push
add
cmp
xor
imul
mov
sar
cmc
rorl
xor
cli
mov
jnp
loop
add
pop
inc
negl
dec
cmp
and
lods
jnp
stos
cwtl
xchg
dec
push
ja
mov
xor
cmpsb
dec
or
testb
fimull
push
jnp
outsl
pop
ret
xchg
mov
fwait
lahf
cld
push
mov
lret
fmuls
cmc
testb
add
mov
jnp
push
mov
xor
xchg
lods
pop
sub
mov
stos
mov
insl
gs
or
insl
shrb
push
jp
imull
pop
sarb
lods
and
movsl
out
mov
hlt
sbb
mov
and
stos
sti
inc
mov
sub
fucomi
xchg
leave
clc
fidivrs
add
inc
push
jnp
cs
scas
jno
sbb
sub
cmp
pop
data16
mov
jne
cli
xor
stc
push
jnp
jl
jno
outsb
mov
xchg
mov
pop
imul
in
push
mov
push
mov
loopne
mov
cmp
sbb
adc
jl
lret
mov
insb
aad
jnp
pop
push
lahf
xor
and
repnz
dec
mov
int3
adc
fs
jnp
sahf
cmp
in
mov
jb
in
jae
in
test
and
mov
jnp
mov
aam
movsb
xor
jnp
push
loopne
push
ja
adc
lea
outsb
mov
xchg
dec
jmp
cmp
inc
idivl
lds
in
and
fcomps
aaa
jb
jnp
fimull
xchg
jnp
je
fs
add
pmuludq
sbb
jnp
ss
out
test
jnp
test
pop
jnp
xchg
jle
clc
add
imul
test
je
adc
popf
imul
test
mov
sahf
jecxz,pn
jne
dec
mov
je
xor
pop
mov
add
sub
xor
lret
jae
mov
scas
add
jo
sub
dec
jbe
xor
add
imul
ret
ss
test
jne
add
insl
ja
sub
jnp
mov
xchg
fidivrl
fldt
push
sub
imul
jnp
cmp
xor
mov
fmull
lret
xchg
sub
dec
pusha
mov
shll
xor
add
jnp
or
jno
rorl
jg
leave
das
xor
mov
pop
je
fidivl
jno
mov
fwait
adc
sbb
push
inc
jnp
sti
cwtl
testb
push
and
lcall
stos
scas
cmp
imul
insl
fnstcw
in
test
push
pop
cmpsl
jnp
inc
call
jnp
icebp
cmp
sub
shr
push
into
cmp
xchg
pop
mov
sub
ret
outsl
xchg
out
and
add
jnp
mov
dec
dec
dec
outsb
push
xor
stc
idivl
mov
int3
js
or
cmp
cmp
out
lret
adc
addr16
inc
scas
sbb
sarb
xchg
sbb
sti
jnp
mov
fisttpll
js
imul
shll
xor
sbb
js
lret
and
int3
jnp
cmp
mov
repz
lods
adc
mov
cli
mov
dec
outsl
addl
jb
pop
xchg
jnp
xchg
in
xor
sub
jmp
pop
sbb
xor
cmp
imul
adc
dec
scas
jns
mov
cmpl
shll
dec
dec
xchg
sbb
xchg
push
mov
test
repz
or
jnp
testb
dec
repnz
js
pop
dec
jnp
mov
sub
mulb
xchg
add
in
repz
jo
xor
jle
out
mov
ds
js
pop
mov
jge
insl
xchg
movsl
test
cs
pop
repnz
or
mov
push
repnz
outsl
inc
js
imul
xor
hlt
loope
pop
gs
xchg
cmp
cmpb
adc
mov
push
dec
mov
jbe
sahf
mov
aas
sbb
or
sbb
cmp
jnp
stos
fsubr
lods
in
ss
jnp
add
inc
mov
mov
cmp
outsl
mov
jnp
cmp
xor
xor
sarl
jnp
pop
js
jne
cmp
ret
mov
add
jle
cwtl
out
mov
sbbl
xchg
or
or
jnp
and
xor
sbb
mov
mov
jns
jnp
loopne
daa
mov
inc
jp
and
fmulp
adc
aas
sub
push
pushf
mov
add
inc
push
inc
scas
jae
js
test
jnp
jbe
rolb
cmpsl
stos
mov
outsl
popa
jns
jmp
imul
sar
sarb
imulb
xchg
jnp
sbb
sahf
add
test
or
movsb
icebp
xor
xchg
jnp
inc
ss
or
ds
lds
dec
rcrb
dec
jnp
cmpsl
scas
or
jnp
mov
cli
cmpl
xor
inc
lods
pop
lcall
imul
dec
out
loopne
in
clc
push
dec
daa
pop
mov
aam
jnp
pop
out
xchg
shrb
sbb
test
add
fiaddl
orb
lock
cwtl
inc
daa
cli
jne
jle
sbb
adc
mov
jbe
sub
int3
mov
icebp
xchg
inc
imul
sbbl
call
gs
xchg
pop
cmp
mov
jnp
xchg
cwtl
dec
lahf
das
xor
jnp
lods
adc
mov
adc
jle
enter
fwait
ss
fisubs
roll
and
or
repnz
mov
sahf
xorl
mov
aad
int
movsb
jae
stc
jnp
jg
hlt
loop
into
outsb
jge
or
insl
mov
and
push
push
jnp
cmpsl
stos
mov
jnp
loopne
mov
jnp
mov
sbb
lods
cld
jnp
jle
out
add
cltd
jnp
add
outsb
push
fdivs
jnp
je
xor
mov
daa
dec
add
cmp
adc
sbb
xor
fwait
ds
cmp
or
out
pop
and
xchg
cmp
lock
pop
xor
jnp
sub
shlb
pop
pop
jnp
jbe
sbb
jnp
insl
outsb
cs
cld
daa
imul
jno
mov
push
ja
sti
mov
mov
adc
mov
scas
dec
loope
mov
ss
add
stos
pop
sbb
ja
and
jmp
mov
push
jae
or
adc
jnp
xor
fstp
push
or
or
xchg
mov
cmp
cltd
jnp
mov
and
mov
cmp
scas
in
jnp
call
aad
jnp
inc
ret
mov
add
mov
sub
cmp
insl
inc
xchg
mov
mov
sub
inc
jnp
mov
icebp
dec
aam
jnp
xchg
mov
and
cmpsb
enter
mov
leave
movsb
arpl
int
inc
inc
jnp
pop
sub
xor
mov
mov
lcall
fstps
mov
jnp
and
mov
jnp
ss
inc
fistps
jle
inc
fnstenv
out
xchg
jnp
push
adc
cmp
sub
or
xor
mov
or
pop
mov
in
cmp
or
push
push
adc
push
jne
ss
jnp
lea
fcoml
int
movsl
pop
jno
mov
xor
inc
mov
repz
sbb
fnstsw
jnp
lods
mov
xor
les
fucomi
sbb
fcmove
test
test
jnp
js
lods
push
pop
ss
std
push
hlt
cmpsb
jg
xor
add
jnp
adc
cs
add
ret
jnp
loope
sub
jnp
popa
lea
mov
in
sbb
ja
sti
pop
lods
inc
mov
or
xor
pop
add
les
fimuls
or
outsb
out
stc
subl
insb
jge
jmp
inc
insb
cmp
jle
ljmp
dec
jmp
js
mov
cs
sahf
jnp
jmp
xchg
fdivrp
cmp
cmc
sub
insl
mov
xorb
cmp
pop
jnp
xor
and
dec
xchg
jae
stc
mov
mov
mov
inc
divb
js
pop
movsl
out
sahf
or
jnp
cmc
fwait
jle
inc
scas
cmp
ret
pop
mov
push
jnp
push
dec
mov
lret
xor
int
cmp
mov
sub
in
or
popa
cli
es
cmpb
inc
sbb
xor
jmp
mov
push
jnp
rorl
mov
jnp
mov
mov
mov
sbb
jbe
outsl
int
imul
cmp
test
test
mov
mov
push
mov
sarl
and
mov
cmp
hlt
add
mov
mov
mov
jnp
fists
into
nop
icebp
sbb
loop
fldl2e
mul
jb
jp
jae
jge,pn
iret
xor
jnp
aaa
out
pop
mov
je
sbb
jnp
sub
jp
fidivrl
subl
mov
imul
testl
mov
jp
fstpt
push
push
xor
add
lret
xchg
or
dec
cltd
icebp
sti
cmpb
or
pushl
jno
adc
jnp
xchg
ret
cmp
dec
js
jnp
jecxz
je
gs
pop
jnp
xchg
pop
cmp
mov
mov
jnp
test
mov
jl
mov
jnp
repz
nop
fistpl
lods
mov
adc
je
bnd
lret
cli
cmpsl
repz
lea
sub
jmp
sub
jnp
rcrb
loopne
push
or
jae
ficompl
lods
jle
pop
mov
dec
pop
leave
loope
sahf
push
outsb
mov
pop
adc
jnp
dec
jbe
divl
cli
test
lods
sbb
in
les
jnp
adc
mov
jnp
add
sti
pop
aaa
jns
jnp
loop
mov
inc
jnp
mov
cli
add
cmp
fs
jne
jne
inc
push
sub
mov
jae
icebp
outsb
fadds
cmp
outsl
push
push
add
das
xchg
inc
mov
mov
clc
jae
call
and
mov
jnp
lret
mov
jbe
pop
inc
mov
sti
xchg
jnp
in
ss
imul
cmp
outsb
pop
sub
jp
sub
hlt
or
fcmovbe
or
insl
push
adc
push
std
cmp
jnp
xlat
jb
lahf
lods
aam
cmp
fldt
push
push
jnp
rorb
xchg
mov
repnz
mov
and
enter
notb
mov
pop
imul
jnp
ficompl
mov
ja
xor
sub
jnp
mov
sbb
leave
inc
mov
pop
aas
xchg
jb
cmpsl
mov
idivl
jae
inc
add
in
mov
jnp
and
lock
sti
or
cmp
out
fcmovb
cwtl
testb
mov
in
jno
mov
outsb
xor
jns
lods
fdivrs
cmp
jnp
and
sub
sub
gs
mov
imul
lds
imul
xor
xchg
aas
jne
out
sahf
clc
pop
int
movsb
sub
std
push
rorl
pop
jnp
notl
jbe,pt
mov
decl
mov
mov
loope
sub
imul
subl
mov
jbe
ret
jnp
push
push
fcomip
ss
xlat
or
gs
adc
push
pop
mov
das
outsl
inc
js
jnp
mov
popa
xchg
outsb
xor
jnp
mov
pop
dec
cmp
imul
pop
mov
mov
sub
mov
cmpsb
sub
xor
cli
inc
xor
mov
mov
dec
xchg
mov
es
mov
fsts
lcall
aaa
ljmp
mov
int3
mov
push
jne
jae
sub
js
jnp
out
loop
push
leave
les
push
jecxz
xor
xor
jmp
repz
stos
push
mov
add
pop
lds
test
call
pop
cmp
and
sub
dec
insl
and
divl
popa
sub
sar
mov
movsb
mov
mov
fidivrl
test
in
ja
in
lock
clc
mov
jnp
push
je
mov
sbb
clc
cmp
test
les
outsl
and
push
mov
sub
and
sbb
xchg
enter
cwtl
lret
jns
ja
xlat
arpl
mov
outsb
mov
ret
push
std
mov
push
jnp
in
add
stc
popf
stos
adc
pop
aaa
mull
or
jnp
imul
jnp
pop
movsb
cmp
push
sub
jecxz
dec
fldt
cmp
jnp
out
ds
fucomip
jne
imul
adc
aaa
bnd
ja
lock
mov
jnp,pn
fistl
mov
negb
fwait
ret
or
jne
inc
or
scas
pop
aas
scas
je
in
inc
xor
sbb
pop
push
outsb
jp
or
jecxz
outsl
cmpsl
sti
and
cmp
cmpl
jmp
jge
icebp
div
cmp
jnp
adc
sbb
xor
lods
xchg
cmp
hlt
xor
sub
cmp
jbe
mov
stos
xchg
push
jnp
fcmovu
ret
sarb
xchg
repz
cmp
jnp
adc
leave
jnp
fisubs
loope
lahf
xor
push
pop
mov
lods
jnp
and
ja
xor
repnz
je
fidivl
rorl
xor
test
fwait
mov
cmc
jnp
gs
stc
pusha
sbb
jnp
xor
inc
repz
lret
jnp
outsl
adc
aam
jo
jnp
sarl
jnp
stos
mov
jnp
push
jne
testb
pop
daa
faddl
jle
mov
out
or
outsb
pop
lret
fstpt
jnp
int
in
adc
sub
mov
add
inc
and
mov
or
cmp
les
clc
push
cmpl
in
ret
sub
mov
arpl
pop
outsb
clc
xchg
lret
mov
cmp
fiadds
cwtl
jnp
scas
sub
aaa
xor
sti
cmp
sub
pop
rol
cmpsl
fisubrl
lahf
or
jmp
cmp
ret
push
xor
xchg
popf
mov
je
cwtl
jnp
imulb
mov
mov
ja
cmp
xchg
and
cld
jnp
out
or
pop
repz
or
clc
or
sti
xchg
pop
push
add
xor
test
push
jnp
sub
and
jnp
jecxz
mov
gs
mov
cmc
inc
pop
scas
xchg
pop
jnp
mov
inc
push
mov
icebp
outsl
mov
lock
repnz
lods
pop
sbbb
ret
jae
mov
cmp
fstps
xor
adc
lea
fisubs
lret
jnp
dec
inc
jno
mov
push
cltd
mov
test
in
jnp
push
out
subb
adc
lret
in
jnp
or
sub
icebp
mov
inc
shl
jnp
mov
jns
jae
jnp
fstpt
inc
jnp
xor
in
sub
outsb
pusha
xlat
inc
jbe
repnz
aas
testb
mov
push
call
outsb
sbb
mov
xbegin
out
xor
ror
xchg
cmp
and
push
cmpsb
sbb
jp
lret
int3
xchg
adcl
jnp
clc
dec
call
jne
jae
fistl
cmp
jnp
sbb
rcr
jns
jnp
loop
dec
movsb
scas
ss
pop
stos
enter
lcall
lret
insl
pop
shlb
xor
or
pusha
mov
sbb
ja
jne
or
and
pop
and
jnp
rcll
std
ja
insl
pop
dec
out
clc
in
test
repnz
outsl
add
mov
cmp
mov
jnp
mov
shrl
aas
cmpsb
cmp
and
mov
pusha
popa
jl
pop
mov
push
movsl
stos
mov
outsl
push
lahf
or
scas
lret
mov
mov
mov
aam
lahf
and
jnp
push
nop
and
xor
jnp
fwait
jge
arpl
cmc
loop
and
js
push
cmp
mov
ss
jnp
mov
xor
sub
and
addr16
dec
or
cmp
push
mov
mov
mov
shr
dec
pop
jnp
cmp
scas
xchg
dec
mov
jl
lds
sarb
hlt
dec
rol
jnp
icebp
sub
add
inc
lock
nop
mov
test
jns
jnp
mov
fs
cmpsb
stos
imul
pop
lods
sub
cli
jnp
jp
aam
mov
and
es
sub
dec
hlt
int3
dec
mov
mov
jnp
repnz
or
hlt
je
mov
jae
inc
ljmp
pop
mov
cmp
pop
call
add
in
aam
out
cmp
shlb
jnp
push
out
and
hlt
mov
out
or
or
jne
mov
cmpb
cmp
dec
sbb
out
xchg
call
sub
loopne
lret
mov
jge
sbb
push
sub
jnp
ljmp
jnp
cmp
xor
jae
xor
out
push
mov
pop
orb
jnp
ud1
js
and
ljmp
xor
je
test
in
daa
scas
xor
hlt
xchg
aas
jnp
jbe
or
mov
jnp
int3
pop
aam
xor
jnp
fwait
ds
call
mov
inc
outsb
repnz
and
pop
mov
cs
stos
popf
jne
pop
ljmp
mov
dec
push
jae
fwait
bnd
jo
aaa
cs
sbb
sarl
push
out
sub
nop
addr16
mov
push
sub
jp
vpcmpgtb
fidivrl
fsubs
outsl
inc
jns
mov
std
xor
cmp
add
cmpsb
fwait
xor
test
jb
das
mov
pusha
mov
pop
dec
jae
in
or
or
cltd
jl
stos
fimuls
dec
mov
pop
jo
pushf
mov
inc
stos
lcall
mov
imul
xchg
sub
fdivrl
mov
arpl
mov
jmp
mov
data16
lods
outsb
inc
negl
jb
cli
jnp
mov
lds
fldt
je
mov
or
sti
jae
es
repz
das
jnp
dec
sub
sub
adc
mov
scas
popfw
jp
cli
dec
js
jl
jbe
outsl
subb
fcompl
aad
mov
jnp
cmp
call
cmp
jl
jnp
scas
push
jge
js
aaa
pushf
jp
xlat
xchg
jmp
xchg
mov
int
or
jb
clc
in
inc
xor
mov
cmp
mov
inc
jnp
ja
adc
inc
pop
cmp
mov
in
push
dec
mov
stos
adc
cmp
push
xchg
fisubrs
jnp
sbb
sbb
inc
out
in
xor
mov
pusha
data16
imul
jae
test
pop
arpl
or
mov
sub
out
jp
cs
jnp
mov
ljmp
outsb
cmp
hlt
bound
cld
jo
sbb
pop
jbe
push
aad
push
ds
mov
mov
adc
push
add
mov
mov
pop
cli
mov
ja
les
gs
adc
shll
rcrb
stos
sahf
rolb
xor
insb
xor
cmp
into
jns
mov
cmpsl
xorb
and
jo
jnp
stos
add
xchg
daa
out
jnp
pop
mov
cmp
loopne
dec
sbb
repz
jnp
outsb
scas
and
xor
or
rolb
ja
sbb
popa
js
aad
sbb
stos
push
aaa
xor
mov
stos
jnp
rcl
das
mov
int
mov
cmp
xsha256
cmpsb
push
jne
mov
mov
mov
loope
lods
fld
xor
mov
out
shll
sub
add
and
popa
sti
mov
dec
cmp
adc
imul
in
lahf
xchg
cltd
fstpl
daa
sbb
cld
and
fistpll
jp
xor
jnp
pop
mov
mov
fwait
dec
outsl
sbb
pop
lods
call
push
mov
mov
pushf
jnp
sub
sub
xchg
out
insb
dec
or
imul
sub
pop
cmp
jne
xor
mov
mov
call
fwait
sub
push
or
jbe
xor
jnp
push
jno
mov
dec
jnp
sti
mov
das
sub
push
into
test
insl
je
popa
cmp
sbb
arpl
je
fildll
xor
faddp
push
loope
in
cld
outsl
sub
or
stos
xchg
mov
icebp
cmp
sbb
aaa
pop
push
stos
jnp
scas
call
outsl
push
ds
mov
int3
dec
jp
sbb
xchg
repz
test
test
call
push
out
popf
mov
imul
arpl
sbb
js
sti
jnp
lret
std
mov
inc
arpl
pop
fstpl
sub
mov
pop
push
jnp
leave
fdivs
jnp
jo
int3
sbb
cwtl
cmp
jae
jmp
leave
jnp
jl
pop
insb
and
jnp
xchg
sub
xchg
jecxz
xor
call
jnp
inc
pop
and
push
icebp
mov
xor
shlb
push
lock
jnp
cmpsl
xchg
inc
in
adc
cmc
mov
scas
pop
jp
js,pt
jle
cmp
gs
imul
sbb
cmp
jnp
add
pop
sub
push
lret
jnp
jp
or
jg
cmc
sub
lods
aad
imul
push
lods
cs
jnp
shrl
inc
jnp
inc
mov
cld
mov
outsl
and
push
push
jnp
mov
xor
jbe
mov
ss
sti
imul
lods
sbb
sub
mov
cltd
mov
jnp
xor
add
out
mov
sbb
jnp
mov
xor
mov
pop
jo
jnp
push
clc
adc
sbb
jnp
fsubr
jbe
ficompl
cltd
mov
jnp
sub
bound
into
jnp
js
ss
ret
inc
jnp
cmc
sbb
cmp
or
sbb
jo
jo
jnp
lds
int3
bnd
sub
inc
mov
cmp
stos
xor
out
jnp
adc
or
stc
lret
jnp
sub
cmp
fisubrs
popf
jnp
jmp
and
int3
push
sbb
ficoml
jnp
cmp
cs
jnp
push
idivl
sbb
sub
sbb
pop
sarb
out
or
mov
or
roll
jnp
nop
into
add
ret
pop
push
js
mov
cmp
jle
mov
adc
inc
cmpsl
add
mov
stos
xchg
sbb
cli
jnp
into
push
pop
fs
clc
dec
fsubrl
mov
sbb
pop
ja
insl
dec
cmpsb
adc
xor
loope
je
push
lods
lret
mov
adc
jae
int3
adc
icebp
jns
aas
shll
push
jecxz
sub
xchg
xchg
js
in
jo
fs
lret
and
add
stos
movsb
das
jp
int3
jae
jns
nop
stc
aaa
mov
and
pop
and
jmp
aas
lock
js
das
push
jnp
es
xchg
insl
ljmp
jb
jle
dec
jnp
dec
pushl
add
leave
mov
push
fs
clc
cld
jnp
aas
out
lds
in
repnz
xchg
dec
inc
add
dec
lret
add
data16
jp
ffree
mov
jae
popf
dec
cmp
mov
cli
hlt
mov
mov
dec
jae
fwait
testl
mov
cs
fs
jbe
jge
lods
sarl
out
pop
scas
das
mov
jnp
fwait
loop
mov
jp
mov
jnp
je
push
callw
sbb
hlt
jnp
in
add
jp
pop
push
mov
jb
xlat
jmp
xchg
mov
aam
sub
movsl
jne
loop
idivl
insl
jnp
xlat
lds
loopne
jno
pop
cmc
jb
int
das
testl
adc
jae
les
scas
fcmove
lods
adc
sub
arpl
call
push
repnz
mov
mov
jnp
ficoml
vrsqrtps
mov
lahf
popf
arpl
aam
rorb
punpcklwd
sub
jae
imul
cli
aaa
mov
call
sbb
icebp
stos
jb
fs
xor
and
fidivrs
int
arpl
imul
sbb
ficoml
fsubl
mov
add
dec
jecxz
das
fiadds
outsl
in
sbbl
cmp
inc
jnp
mov
and
cmp
je
aam
subl
jno
jnp
inc
enter
xor
and
sbb
stc
cmp
mov
xor
lret
add
mov
ljmp
mov
mov
test
insl
xor
push
pop
jnp
es
ds
mov
popa
jae
ja
js
sbb
lea
clc
push
jne
jnp
nop
sbb
mov
mov
jns
xor
or
xor
loopne
jae
rorl
jne
jnp
daa
test
divl
sub
js
popa
repz
xor
test
loop
jg
xlat
push
xchg
mov
pop
scas
movsb
sbb
ja
inc
xor
mov
push
fcomip
addr16
jnp
jno
cs
and
stos
jnp
pop
fildl
clc
sub
mov
jae
out
enter
aaa
outsb
xor
jnp
ja
lods
popa
and
or
aaa
jns
sub
lret
or
insb
pop
xchg
jns
cli
adc
jnp
mov
ss
lea
cmp
mov
lock
scas
decb
lcall
mov
imul
pop
into
insl
mov
pop
out
leave
add
cmc
lods
out
add
pusha
jnp
bound
fs
jb
jnp
ret
pop
push
arpl
jbe
xchg
imul
insb
jnp
imulb
or
repnz
test
stc
or
jle
cmp
mov
in
scas
sbb
and
in
xchg
jnp
ds
adc
mov
fucomip
je
fisubl
dec
out
mov
imulb
jnp
mov
ljmp
shl
insb
jne
adc
mov
mov
stc
or
mov
aad
jnp
test
fdivrs
loop
and
popf
sbb
fimuls
lret
cmp
movsb
add
jns
in
cli
sub
xchg
or
jnp
mov
insl
mov
jl
jnp
dec
fistl
adc
mov
or
push
mov
or
or
shl
movsl
mov
or
cmp
pop
mov
loope
mov
cmp
lock
aaa
jp
adc
or
fstpt
clc
xor
stos
pop
jnp
xor
mov
pop
in
leave
test
xchg
pop
pop
outsl
jmp
outsl
add
andl
ljmp
in
xor
aad
cmp
sbb
sub
jnp
cmpsl
jns
insl
lock
imul
cmp
jae
outsl
sbb
jnp
adc
popw
xchg
mov
pushf
push
jnp
out
jp
cmp
out
mull
xor
and
mov
aas
mov
test
js
jecxz
pushf
or
das
stos
les
cmp
sub
sub
js
pop
jnp
imul
mov
cli
push
arpl
xor
xlat
pop
sub
ljmp
jne
jge
adc
in
shlb
jp
out
jge
jnp
sti
push
fwait
in
sub
and
sub
sub
cli
jae
int
jge
int3
or
call
sarb
jecxz
sbb
xor
int
adc
js
cmp
and
sub
pop
xchg
or
pop
outsl
push
push
je
lret
jnp
popa
jns
in
or
jnp
jl
popf
mov
divl
inc
arpl
leave
lods
xchg
out
cli
icebp
cmpsl
js
xchg
push
scas
fsts
mov
and
jnp
sar
aad
pop
adc
jnp
not
enter
jb
cs
cmp
mov
mov
fcmove
add
insl
mov
sub
sbb
je
adc
jne
stos
jnp
or
popa
movsl
movsb
adc
inc
call
jno
cmp
imul
sub
xlat
cmp
xor
xchg
fiaddl
jb
outsl
mov
jnp
jae
ds
xchg
cmp
fcom
out
pop
mov
jnp
xchg
int3
gs
jnp
mov
xor
jnp
mov
mov
movl
idivb
je
in
stos
es
repnz
fwait
jnp
sbb
mov
mov
xor
shl
or
aad
fwait
mov
cmp
jp
or
sahf
divb
jnp
mov
repnz
packssdw
int3
add
mul
insb
xor
or
xor
rorl
inc
das
js
scas
cmpl
fidivl
out
push
and
jnp
fdivr
inc
fcomp
cmc
jno
jle
and
outsl
jle
gs
jnp
lret
adc
cld
outsb
mov
jnp
aam
movsb
arpl
testl
xchg
jne
repz
popa
ja
gs
fstpt
mov
sti
sbb
push
jnp
xor
negl
sbb
sbb
xchg
outsb
mov
xor
push
sbb
shrl
jnp
push
repz
ss
test
cmc
imul
mov
xchg
ret
jnp
and
cmpsl
sub
or
pop
jbe
push
mov
push
jnp
cli
jae
movsl
js
cmp
je
lods
mov
cmp
and
imul
lret
mov
in
xchg
outsl
mov
ljmp
xor
mov
cs
push
js
jbe
pop
mov
xchg
in
stos
jnp
push
sbb
mov
xchg
jnp
jb
or
mov
clc
ss
jnp
pop
mov
jnp
test
and
cmc
pusha
ljmp
lods
jae
jne
out
xor
out
mov
jnp
sub
mov
jnp
xor
or
jae
dec
cli
add
test
jb
rcrl
cli
xchg
outsl
jbe
jge
jnp
into
stc
xchg
imul
hlt
and
pop
inc
lods
or
outsl
push
push
test
push
clc
cmp
je
inc
mov
jnp
dec
jbe
xor
clc
call
xor
out
jae
jmp
cmp
insl
and
movsl
sahf
neg
sbb
stos
ret
sub
mov
mov
addr16
cli
dec
aaa
mov
pop
or
inc
call
ficompl
das
in
idiv
sbb
sbb
or
dec
lcall
push
mov
jmp
xor
cs
push
scas
xchg
mov
sbb
lods
sbb
jnp
add
cmc
cmp
sub
les
lods
outsb
jnp
scas
push
das
sbb
add
xor
push
lock
in
mov
std
movsb
pop
int3
cmc
into
repnz
dec
add
inc
ja
dec
outsl
nop
scas
jnp
jl
or
call
lock
stc
mov
pop
fidivl
jnp
push
mov
sub
in
jnp
test
lds
jne
repnz
mov
or
dec
push
getsec
pop
or
jnp
jbe
enter
cmpl
or
int
icebp
sub
imul
xor
outsb
ja
jbe
std
mov
test
stc
or
out
imul
aam
xor
xchg
jae
imul
or
mov
jo
cld
jnp
jge
cmp
pop
jnp
dec
test
sbb
test
cmp
mov
sub
mov
shll
jno
aad
lods
lret
mov
aas
test
jmp
imul
or
sub
repnz
in
add
xchg
adc
fsubrs
lods
leave
cmp
ljmp
dec
lds
pop
imul
fs
sub
or
cmp
jne
cs
sub
cmp
fimuls
pop
jns
inc
or
jae
cmp
xchg
fdivrl
daa
clc
lds
sub
pop
or
mov
outsl
push
pop
or
repnz
and
cmp
ret
jnp
dec
pop
testb
cli
fstps
mov
adc
call
cmp
cmp
mov
nop
in
sub
inc
je
jnp
lret
sbb
aam
mov
or
out
jl
and
or
cmpb
mov
repz
mov
xor
jmp
movsl
jnp
hlt
mov
movsb
mov
push
stos
pop
push
loope
jl
pop
or
xor
stos
sahf
adc
ljmp
sub
lahf
std
add
out
repz
cmpsl
pop
dec
jge
fistpl
in
clc
xchg
xor
jnp
call
jnp
mov
jg
mov
out
cmpsb
xlat
call
ja
jo
or
jae
in
stos
idivb
jnp
xchg
jbe
cld
sbb
in
add
dec
daa
pop
jns
add
lock
dec
addr16
sub
shrl
mov
cmp
sub
mov
add
ss
xor
lret
das
fildl
test
scas
mov
int
pop
mov
sub
es
fldt
fidivrl
stos
repnz
sub
dec
sub
mov
insb
psllw
cmp
outsb
repnz
neg
inc
lods
adc
push
lret
inc
add
mov
pop
add
cmc
push
pusha
je
jnp
int3
xor
fsts
imul
dec
out
in
adc
dec
inc
lods
sub
ja
adc
fsubrs
testl
jo
xor
lock
jbe
cmovl
cmp
push
add
mov
xor
bound
push
jae
inc
rcll
outsb
mov
dec
mov
jb
and
je
pushf
sub
lahf
or
mov
mov
jnp
sbb
adc
mov
or
clc
aaa
jnp
push
dec
or
sbb
push
dec
lret
xchg
fadd
pop
jnp
fidivrl
sub
push
xor
stos
ljmp
aad
fbstp
jnp
frstor
out
push
xor
adc
outsb
inc
xor
adc
sbb
js
leave
negl
in
jne
mov
xchg
xchg
jnp
insb
xchg
cli
lea
and
mov
inc
pop
outsl
jno
inc
and
jp
cli
xchg
imul
in
pusha
lahf
jnp
aam
adcb
out
fwait
sub
insl
push
xor
fnstenv
shrb
cmp
jnp
popa
add
scas
and
xor
icebp
push
push
inc
loope
outsb
outsb
or
imul
fcomps
dec
mov
push
ret
call
xchg
mov
dec
out
xor
movb
cld
out
ss
jnp
jbe
rol
mulb
jnp
mov
jne
sbb
sbb
enter
das
mov
jne,pn
jnp
arpl
sbb
cmp
sar
dec
shl
iret
jnp
in
fiaddl
rcrb
sti
mov
jnp
aam
ret
mov
jnp
je
add
into
pop
push
jnp
out
aad
data16
jbe
mov
and
add
xchg
mov
push
fistpll
js
lods
lods
sbb
mov
arpl
test
cmpsl
add
mov
nop
es
dec
testl
outsl
sub
adc
pop
stos
sub
jne
jnp
mov
leave
lods
les
or
mov
gs
insl
fs
mov
pop
call
sub
testl
add
cmp
mov
xchg
jnp
insl
aaa
mov
lret
lret
sub
jns
outsl
popf
out
and
sbb
mov
jnp
sbb
and
aaa
mov
fiaddl
inc
or
loope
adc
mov
js
loopne
push
jb
mov
jnp
daa
lods
outsl
ss
test
jmp
jnp
pop
xor
sub
sbb
nop
mov
jno
clc
pop
jnp
sub
jns
jnp
or
andl
sub
cmc
mov
je
sub
sub
inc
insb
pop
ret
cmp
and
jne
sbb
xor
mov
inc
incl
jnp
mov
xchg
jle
cmp
pop
mov
fsubrl
jno
dec
and
outsl
pop
lods
adc
jnp
sbb
ss
fmuls
jne
xor
out
dec
arpl
outsl
cs
sarb
sbb
xorb
dec
jnp
mov
lret
mov
cmc
jae
jl
inc
jnp
jns
xor
movsb
imul
jnp
loop
pop
inc
inc
enter
dec
and
sub
repz
mov
aam
jnp
movsb
pop
sbb
pop
xor
mov
jmp
xchg
or
cmpsb
pop
js
push
test
xor
jnp
cld
outsb
xchg
jmp
int3
int
mov
add
in
into
dec
or
outsb
jnp
stos
fcomip
ret
cmp
lea
mov
mov
rcrb
sbb
adc
fisubrs
pop
and
jnp
jp
sub
decl
mov
sbb
test
test
inc
jo
adc
jmp
popa
popl
xchg
pop
mov
jnp
mov
pop
lcall
cmp
jnp
sbb
scas
sti
fcoms
jns
call
or
jae
enter
or
jne
mov
jmp
out
xor
sbb
cs
loop
xchg
je
xor
jne
pop
scas
bnd
ss
cld
scas
mov
call
push
bound
roll
ja
lret
mov
jo
and
xor
insb
xchg
xor
outsl
jae
cmc
mov
aaa
jnp
cli
stos
pop
stc
xor
sub
lret
dec
sub
imull
jp
fidivl
icebp
jmp
jb
fs
mov
or
cmpsl
mov
shll
out
sub
cmp
xor
add
stc
jnp
mov
mov
pop
xor
js
and
loope
sub
pop
push
adc
dec
inc
push
insl
insb
imul
enter
jnp
xchg
ss
jnp
pop
push
sub
sub
pusha
imul
das
sbb
inc
jnp
shrl
outsb
jp
jnp
adc
repz
fcomps
icebp
les
outsb
and
sbb
mov
inc
out
xor
fistpll
cmp
xchg
aam
pop
lahf
jnp
xchg
sub
ret
jle
jnp
repnz
sbb
xor
jnp
mov
sub
xlat
push
jnp
push
in
cltd
mov
sahf
mov
daa
sti
fidivrs
cmp
aaa
cwtl
loop
inc
testl
pop
mov
mov
ja
pop
pop
add
pop
lret
ret
or
mov
jnp
sti
add
dec
jnp
xchg
inc
cld
push
and
jnp
and
push
shrb
xchg
xor
in
jecxz
sbb
sbbl
pop
cli
jnp
dec
aam
jb
sub
movsb
and
popf
mov
and
mov
mov
cld
lods
jno
xorb
mov
test
mov
mov
xor
fstpt
hlt
push
fimuls
or
push
ljmp
rolb
and
jnp
adc
mov
push
push
mov
cmp
jnp
out
fsts
ds
test
sub
add
aaa
jnp
dec
gs
xchg
ljmp
jnp
es
dec
shr
ja
pop
and
mov
jl
test
jnp
ret
cmp
sub
jmp
and
jnp
xor
arpl
sbb
jae
add
fistpll
xor
repz
pop
lret
mov
dec
xor
ja
pop
mov
popf
andl
push
push
pop
enter
cmc
mov
pop
sbb
loop
std
movsl
or
lods
mov
add
adc
fidivrs
mov
or
sub
xor
and
push
je
rcrb
imul
inc
fadd
sub
add
and
mov
adc
jnp
call
outsl
jmp
push
xor
insb
mov
fadds
imul
jbe
fisubl
add
inc
and
inc
call
or
xchg
adc
pop
cs
ret
jo
cli
sbb
sbb
inc
sarl
neg
add
xor
addr16
ja
repnz
push
stos
pop
and
hlt
outsl
jbe
ljmp
pop
shrl
push
pop
lods
imul
aad
lret
in
pop
xchg
jnp
mov
clc
fmuls
in
fcmovnbe
insl
xor
hlt
sbb
cs
ss
jmp
mov
push
shlb
mov
add
jb
inc
int3
shrl
cs
xor
jnp
repnz
mov
fisubl
popf
sub
test
push
adc
clc
pop
scas
mov
out
sbb
jnp
push
or
mov
add
lcall
push
int3
jnp
pop
cmc
mov
clc
jnp
cwtl
dec
daa
out
mov
jnp
cmp
xor
push
mov
int
jnp
stc
jp
test
jae
cmp
or
bound
jnp
mov
test
mov
jmp
ljmp
jns
jnp
add
sbb
cmp
idivl
xor
and
mov
mov
loop
jne
jp
sbb
push
xor
jnp
rclb
mov
mov
les
xchg
cmp
out
xor
scas
sahf
pop
repnz
nop
jg
hlt
in
ljmp
out
jo
cs
js
adc
xchg
jnp
adc
mov
ja
mov
xor
or
xchg
pop
xor
sbb
dec
jnp
popf
cmp
mov
les
push
jnp
test
lds
sbb
mov
push
stos
jae
and
mov
jae
jne
mov
dec
lock
jnp
jle
push
pop
fadd
cltd
jo
mov
cmp
or
jnp
cmp
add
scas
push
cmp
jae
and
jmp
mov
sub
ljmp
mov
xor
std
jnp
dec
push
into
mov
jns
insl
aas
sbb
lods
jnp
je
das
xor
in
mov
xor
inc
pop
cld
sub
dec
mov
mov
outsb
xchg
inc
stos
fs
sarl
jae
ja
mov
sub
sbb
insb
inc
jne
cmp
movsl
sbb
notb
insl
sub
sub
sbb
dec
sbb
ja
mov
jnp
or
and
jnp
sub
xor
je
mov
gs
sbb
aas
int3
and
mov
xchg
stos
xor
add
push
sarl
add
ss
lcall
out
jnp
inc
pop
sub
pop
sbb
push
jnp
push
leave
xor
cltd
out
jne
mov
into
mov
ja
popf
dec
pop
adc
ss
add
mov
jnp
pop
addb
or
int
mov
ljmp
ss
sbb
or
movsl
add
jns
lea
jnp
dec
lcall
push
sub
push
push
xorl
sarl
lods
sti
stos
sbb
cmp
insb
cmp
pop
xlat
mov
fldl
pop
dec
dec
or
out
adc
dec
and
jne
mov
repz
testb
push
popa
mov
test
ja
jp
movsl
jnp
into
fs
mov
addr16
test
lock
jne
cmp
push
add
out
xchg
idivl
adc
in
mov
mov
xor
mov
lods
dec
xchg
out
out
xchg
add
mov
ds
and
notb
dec
pusha
outsb
jnp
cmp
out
dec
jnp
cmc
cli
stos
cmp
andl
fidivl
jne
cmp
and
mov
pop
les
jp
sarb
add
leave
lock
hlt
jns
adc
out
sbb
shl
jbe
fwait
sarb
sbb
push
xchg
or
dec
lds
cmp
push
add
cmp
stc
int3
les
fwait
dec
call
or
lds
imul
or
insl
jg
dec
and
scas
sbb
inc
pop
mov
test
xor
sub
sbb
mov
push
pop
pop
fidivs
jne
bound
xlat
jl
lock
dec
mov
daa
jae
xchg
cmp
or
jne
mov
enter
jae
insl
in
sbb
mov
xor
push
jnp
or
mov
sbb
dec
arpl
xchg
inc
int3
cmp
test
jnp
ja
mov
mov
add
shlb
jae
push
jnp
in
xor
lret
lahf
mov
js
out
int3
loope
scas
mov
ljmp
jecxz
sbb
lods
std
cmc
jnp
rorl
mov
mov
scas
cs
jnp
js
or
jnp
insl
xchg
mov
jnp
or
xchg
jbe
gs
jp
dec
out
ss
repnz
sbb
insl
xchg
out
ds
aad
cmp
sub
lea
jge
pop
cli
es
jns
jo
or
cmpsb
pop
arpl
loopne
scas
xor
out
mov
or
mov
cltd
sub
pop
cmp
repz
popa
mov
aam
loopne
aad
adc
cwtl
imul
roll
sub
jns
cmpsb
pusha
sbb
mov
pop
ss
icebp
mov
or
sub
lods
jnp
loope
cmp
je
xor
test
pushf
out
push
shrl
add
mov
clc
push
ljmp
lds
jp
xchg
xor
bound
pop
ret
idivb
sub
pop
hlt
bts
pop
jge
in
or
es
inc
mov
xor
cmp
ss
sub
call
jnp
push
gs
insl
xor
ds
or
and
cmpsb
pop
dec
call
in
jmp
pop
idivb
add
or
les
cs
ret
lcall
leave
xor
jo
js
xor
test
cmpb
jbe
inc
push
mov
mov
fimull
fdivr
push
xchg
pop
shll
inc
jnp
ljmp
insl
movsb
jnp
xor
pusha
push
outsl
mov
sub
jae
cli
cmpl
xchg
cmpb
jnp
loop
pop
ss
and
push
ja
mov
pop
jecxz
or
bound
inc
in
jnp
jo
cld
cwtl
ds
out
aam
xchg
mov
dec
jb
cmpsl
jnp
jns
andl
inc
fnstenv
rolb
movsl
mov
int3
out
adc
and
pop
mov
fwait
mov
mov
adc
ljmp
xor
xchg
jle
scas
mov
push
pop
dec
or
fidivl
in
xor
outsl
mov
push
xchg
lds
fwait
dec
imul
mov
dec
sub
or
lods
jae
xchg
test
and
les
add
xor
sbb
mov
mov
or
push
jae
cmp
mov
jnp
lock
jns
fdivl
jl
jnp
sti
loop
sbb
jmp
jnp
push
insb
subb
mov
jnp
sub
sbb
sbb
adc
push
aaa
mov
mov
xchg
idivl
adc
inc
xor
test
cmc
aas
lea
pop
outsl
jl
mov
sub
sbb
cmp
pop
jae
cli
sbb
int
adc
scas
cmp
ja
cmp
lock
sub
cli
jae
mov
mov
les
loop
push
sbb
notl
mov
mov
fsubrs
out
and
insb
lods
mov
cmp
test
jo
mov
outsl
daa
mov
mov
push
mov
addr16
jmp
sub
mov
shl
cmp
in
cmp
xchg
addr16
add
xor
cld
cmp
hlt
adc
insl
cmp
sub
das
jnp
or
sub
shr
fdivrs
cmp
inc
push
xor
in
mov
cmp
cmpl
icebp
dec
jae
xor
sbb
jnp
pop
sbb
lfs
jnp
sahf
fildll
sbb
and
mov
jo
imul
cmpsb
adc
sbb
mov
jnp
pop
faddl
shll
inc
jnp
or
push
mov
lods
add
xor
lret
popf
jnp
std
pop
mov
mov
fnstenv
scas
jle
clc
jnp
imul
cs
in
jnp
adc
clc
mov
test
dec
jae
sub
sub
aaa
je
out
inc
stos
add
jnp
mov
fldpi
cmp
xchg
push
mov
aas
repnz
push
scas
ja
cli
fstpt
mov
jle
das
mov
inc
pop
mov
pop
rcrb
push
sbb
xlat
in
and
idivb
stc
out
lret
scas
clc
sti
insl
les
out
mov
jnp
into
outsl
pop
jmp
cmp
jae
sub
imul
stc
imul
lds
fistl
sub
pop
inc
and
int3
add
lahf
loope
sub
jnp
popa
and
sahf
lcall
fiaddl
jnp
ss
lock
cmpsl
cmovo
shr
fsubrp
icebp
jnp
sbb
jnp
cmp
je
xchg
sub
in
call
clc
sub
call
cmpsl
int3
in
jnp
mov
cmp
sbb
cmp
dec
jp
roll
ljmp
in
sub
sbb
js
xor
mov
stos
cmp
aas
jae
pop
fwait
adc
adc
sbb
aaa
movsl
push
dec
jnp
mov
imul
fbld
icebp
push
inc
dec
or
out
sub
in
fmull
jnp
mov
mov
icebp
push
pop
lods
sub
jae
sarb
mov
mov
or
lods
in
imul
repnz
int
or
sub
call
sbb
roll
out
imul
inc
pop
stc
mov
insl
or
mov
jmp
add
cmpsl
jmp
or
ret
sbb
or
outsb
jnp
in
mov
test
lret
jo
jo
jnp
repz
sbb
xor
pop
lret
sub
jno
adc
mov
negb
and
pop
ss
movsb
push
pop
jecxz
mov
inc
jle
fdivl
mov
xor
test
mov
or
repnz
jnp
dec
sbb
leave
jge
mov
imul
sti
movsl
adc
xor
loop
push
jle
mov
dec
cmc
lret
je
and
jmp
jnp
aam
sahf
push
xchg
jne
sub
xchg
shrl
xchg
jnp
lods
mov
cmp
movl
jp
imul
sbb
xchg
sbb
sarl
dec
lock
and
cmp
mov
jno
inc
mov
mov
xor
inc
jo
jnp
inc
mov
jnp
not
sbb
sbb
pop
ja
inc
jnp
clc
dec
sub
sbb
stos
jnp
xor
push
jnp
rorl
sarb
lahf
xor
pop
jns
sub
jne
mov
cmpsb
sbb
outsl
xchg
lahf
fs
push
lock
jnp
jns
inc
call
aaa
insl
mov
mov
lret
xor
jnp
sbb
fldcw
aam
xor
lret
dec
ret
arpl
shl
cltd
sahf
in
call
fwait
std
push
aam
dec
add
scas
ss
outsl
push
insl
jmp
imull
outsl
jns
fneni(8087
ret
mov
xchg
adc
mov
dec
jle
mov
loope
test
fidivrl
mov
adcl
push
sub
jnp
pop
fnstcw
sub
and
jnp
jmp
xor
jnp
mov
idivl
adc
pop
mov
jnp
xor
jmp
pop
stos
mov
imul
inc
ljmp
pop
nop
fdivrl
jno
jne
pop
push
jnp
mov
mov
mov
cmp
or
mov
adc
mov
popf
jl
jnp
pop
adc
mov
fidivrs
lret
add
in
push
dec
mov
jmp
leave
pop
inc
int
cmp
ja
xor
lods
push
lock
leave
scas
sbb
mov
es
fisubl
enter
mov
jno
into
jne
shlb
jnp
nop
aad
push
fnsave
jnp
aaa
cmp
jnp
mov
lret
fwait
jnp
pop
inc
mov
jnp
outsb
daa
sub
icebp
jns
dec
xor
pop
call
fidivrl
shrl
nop
pop
mov
cmc
ja
jae
sub
xor
jnp
ficoml
jnp
xor
jnp
movsl
aaa
bswap
jno
add
dec
jb
jnp
jo
xor
jnp
inc
mov
cmpsl
dec
mul
or
shr
mov
push
dec
test
call
sbb
jecxz
mov
mov
mov
out
dec
cmp
cltd
xlat
dec
stc
sub
cmpsl
ss
cmc
push
mov
imul
scas
clc
cmp
in
mov
adc
xor
repnz
jnp
hlt
cmp
sbb
sbb
clc
mov
xor
xchg
adc
aaa
jae
fcom
jnp
ret
mov
enter
fcmove
adc
repnz
jb
push
or
mov
jae
xchg
cli
lret
mov
popa
jne
fidivrl
dec
pop
mov
in
idivl
sbb
loope
stc
jb
jnp
scas
jmp
fwait
push
js
mov
fdivs
fsts
jnp
pop
in
imul
jnp
xor
adc
lds
add
out
insb
jnp
pop
loop
repnz
fxch
dec
lock
sbb
jnp
ror
xor
stos
xor
js
inc
pop
outsb
movsl
sub
dec
push
loope
mov
scas
lahf
outsb
jnp
bound
adc
jnp
je
and
inc
inc
mov
mov
or
leave
jbe
push
cmp
jnp
sbb
sub
scas
xor
cmc
sub
mov
ss
pop
lea
lcall
std
mov
pop
mov
dec
jmp
jnp
xor
cmp
lret
mov
mov
negl
lods
lods
sti
jnp
mov
mov
in
jmp
lods
loopne
sbb
mov
stos
sbb
inc
call
pop
inc
stos
fnsave
aam
pop
push
xor
jnp
dec
xorl
sbb
leave
ficoml
xchg
push
jne
stos
je
fmull
imul
mov
mov
lea
add
cmp
outsl
pushf
jne
in
gs
nop
push
fldt
js
push
jp
mov
pop
outsl
jnp
test
cmp
imul
xchg
adc
cmovl
mov
dec
lods
jae
ja
jp
into
push
movd
xchg
cmp
dec
sbb
stos
shll
xchg
push
mov
jnp
fnstcw
cltd
mov
jnp
lods
insl
popf
mov
push
sar
fstpt
xor
out
jno
and
or
inc
aaa
insb
mov
aam
mov
jl
dec
xor
jnp
xchg
ret
inc
addl
cmp
out
jo
sub
arpl
lock
outsl
repnz
test
pop
insl
in
jp
in
stos
ja
mov
insb
rcr
gs
jnp
jno
cmp
or
jns
lret
mov
int
loop
popf
daa
cltd
fs
cli
imul
jmp
sub
sub
aas
scas
push
or
mov
jg
jb
jnp
and
faddp
js
or
mov
aam
push
cmp
pop
xor
stos
jnp
push
pop
xchg
repnz
dec
mov
dec
in
fistpll
mov
repnz
aad
mov
jmp
jnp
push
mov
lahf
jge
call
adc
sti
xor
dec
cmp
cmp
repz
add
adc
xor
jnp
jp
call
jnp
filds
xor
std
mov
jno
adc
jmp
mov
outsl
xor
out
cli
xchg
jnp
fsubrs
icebp
mov
aas
push
imul
lock
inc
mov
stc
sbb
icebp
ss
push
insl
lea
std
test
sub
mov
jmp
nop
lret
sbb
xor
push
fucomip
sbb
jae
repz
jnp
out
sub
or
pop
jnp
enter
es
cmc
mov
mov
cld
movb
xor
jnp
pop
in
call
fstpt
inc
notl
push
cli
pop
shll
popf
add
jmp
int
sbb
mov
gs
sbb
pop
test
test
sub
leave
rorb
jo
jnp
dec
lret
dec
xor
cmp
push
sahf
enter
data16
jae
lret
stos
gs
dec
fdiv
negl
inc
dec
pop
xorl
and
cmp
jb
lods
sub
enter
int
jnp
ja
xchg
sbb
lock
in
rcrl
mov
gs
mov
jnp
inc
dec
cmp
jnp
fdivrl
mov
divb
fwait
xor
sarb
ficompl
pop
testb
mov
sub
fdivrl
jp
and
cs
cmp
jne
cli
sbb
jno
in
movsb
mov
add
sbb
movsl
mov
arpl
rcl
dec
loopne
jmp
cmp
inc
js
jnp
push
mov
dec
loope
add
xchg
jb
sbb
jns
cmp
mov
cltd
in
mov
ja
daa
and
cmp
test
stc
xlat
push
jnp
and
dec
idivl
clc
push
lret
push
aas
mov
in
cmp
xchg
lret
leave
add
mov
cs
sub
mov
lods
jnp
mov
mov
je
imul
std
cmpsb
scas
lods
stos
jnp
pop
rorb
shll
jnp,pn
gs
push
lock
dec
jnp
pop
leave
mov
stc
cmp
into
jnp
mov
jo
sub
pop
and
maskmovq
divl
and
jmp
jb
pop
xor
jae
jno
add
sub
shll
loopne
les
jmp
jge
cmp
or
mov
pop
std
outsl
jge
jle
or
dec
jl
pop
daa
lahf
jns
jnp
mov
cmp
in
jnp
loopne
ljmp
pop
mov
mov
pop
sub
mov
shll
jbe
icebp
outsb
jnp
push
sbb
cmp
cmp
fs
fdivr
sub
mov
je
outsb
jne
call
and
movswl
or
decl
loop
push
je
pop
sarb
fwait
es
and
dec
mov
sub
and
sbb
lahf
mov
mov
mov
test
jmp
int
jno
push
and
mov
popf
cli
aam
jnp
xor
pop
call
pop
push
jl
xchg
cli
and
jnp
jmp
int
or
imul
out
adc
in
dec
jnp
push
mov
cmp
call
inc
aad
jae
adc
pop
scas
fldl
fwait
in
pop
push
enter
sbb
mov
inc
jp
fldt
mov
jb
pop
int3
outsb
jnp
fisttpll
inc
jnp
mov
mov
pop
cs
jb
or
insb
and
jno
rcrl
out
jnp
add
into
jnp
cmc
in
insb
push
pushf
jns
mov
popa
cmpsb
data16
mov
jne
repnz
fs
or
insl
jae
into
cmp
jnp
jge
pop
cmp
mov
mov
sbb
xor
jb
icebp
imul
adc
or
ljmp
jns
test
rclb
xor
jnp
lret
adc
jae
mov
cmpsb
loope
ficompl
cld
xchg
out
jmp
ljmp
inc
outsb
mov
adc
lds
in
xchg
mov
mov
mov
mov
sub
mov
xor
test
push
jnp
gs
xabort
jnp
add
jne
jnp
ror
das
arpl
mov
enter
mov
mov
movzwl
jp
sub
enter
or
inc
pop
jnp
je
adc
sbb
inc
clc
test
loop
mov
cmp
pushf
in
shrb
push
lret
test
jmp
jl
fxch
cmp
mov
push
mov
enter
lahf
fidivrl
js
aam
es
jnp
fsubr
inc
imul
jnp
and
mov
push
outsl
or
sarl
adc
subl
pushf
adc
jns
shr
pop
cmpsl
jnp
cmp
add
inc
dec
jnp
mov
mov
sbb
rcll
push
push
or
xchg
scas
cmpsl
jne
mov
push
icebp
xlat
shlb
xor
imul
pop
hlt
pop
push
es
lret
jnp
push
mov
lds
int
add
pop
cmpsb
dec
add
jnp
fs
inc
sbb
xor
jnp
or
je
loope
jnp
add
sub
fildll
pop
mov
in
mov
test
xor
imul
sbb
repnz
pop
mov
imul
aam
daa
ja
cmpl
scas
int
arpl
inc
lock
jae
mov
fwait
mov
and
xor
or
hlt
cmpl
add
xor
push
cld
jp
aam
enter
leave
clc
adc
lret
icebp
pop
xor
xchg
jno
and
out
add
cwtl
jnp
repnz
subb
out
outsl
mov
add
pop
push
xor
cmpsl
jmp
sbb
imulb
outsl
popf
or
sub
stc
das
ja
lods
mull
mov
test
adc
out
inc
shlb
je
cmp
push
subb
or
sarb
stc
lds
mov
xor
sti
adc
jnp
popf
mov
cs
lods
addr16
sbb
in
fadds
or
movsb
mov
aas
xlat
jle
jnp
lock
and
ja
ss
jne
mov
cmc
sub
repz
and
lret
sbb
lds
imul
add
sub
dec
and
stc
insb
mov
push
aaa
xor
insl
jo
pop
jnp
mov
jns
sbb
subb
add
add
mov
adc
into
aas
pushf
stc
int3
pop
mov
pop
and
scas
inc
repnz
cwtl
ljmp
push
and
mov
jno
jns
int3
or
jmp
sub
ja
icebp
fwait
xchg
pop
ss
in
jae
imul
push
sbb
xchg
add
rorl
and
out
pop
and
movsl
cmp
jg
cmp
insl
mov
pop
xor
les
imul
out
mov
dec
cmp
jb
es
jnp
and
xor
scas
clc
repz
cmp
push
jnp
std
outsb
jae
xor
popa
mov
scas
test
fists
xor
fistl
jnp
inc
imul
jnp
pop
add
xor
jnp
pop
mov
jne
or
add
mov
lock
movsl
nop
jmp
or
jnp
test
mov
pop
js
mov
sub
pop
jnp
lret
mov
mov
dec
ficoml
stc
daa
mov
imul
cs
jnp
sub
pop
jnp
xchg
cmp
int3
das
dec
icebp
jnp
fnstenv
hlt
in
pop
ljmp
push
test
outsb
jne
out
jnp
repnz
popf
cmpsl
cmp
inc
mov
sbb
pop
jns
rorb
jnp
mov
cwtl
sub
sti
jnp
shrb
bnd
cmp
leave
cli
jnp
xchg
adc
push
pop
clc
jne
std
jnp
insb
lcall
pop
cmc
push
xor
mov
jnp
mov
out
loope
jle
test
loopne
jnp
push
inc
cmp
inc
jae
aaa
xor
insl
xchg
jecxz
cli
jmp
mov
or
push
and
jnp
sub
sbb
pop
xor
inc
inc
cmpxchg
js
scas
lds
jnp
divb
jns
into
dec
lods
sbb
pop
xor
pop
inc
shlb
mov
imul
lret
out
repnz
in
out
jnp
xor
fcompl
pushf
mov
jno
xor
or
inc
xlat
mov
and
lret
jne
jle
sub
push
mov
push
fnstsw
lea
or
inc
pop
pop
jns
mov
rcl
js
sbb
mov
je
jnp
fs
push
pop
ss
cmpsl
jnp
hlt
out
outsb
cmp
jns
fimull
xor
jnp
sbb
jmp
cmc
outsb
clc
call
cmpsl
jnp
pop
out
dec
adc
shrd
mov
jne
or
xor
jnp
repnz
out
xor
push
jecxz
ja
sub
lods
lret
dec
pushf
mov
mov
outsb
stos
test
lret
int3
loop
push
inc
rcl
icebp
mov
pop
xor
insl
ss
mov
and
mov
inc
push
cmp
sbb
lea
outsl
dec
or
movsb
lods
lods
push
lock
jge
xchg
xorl
jnp
adc
cmp
popf
xor
dec
sbb
out
popa
icebp
cmp
scas
andl
sub
cs
push
clc
inc
cmc
jnp
pop
and
and
jnp
lock
aaa
jp
and
push
or
mov
xor
add
jb
fidivs
imul
mov
mov
push
insl
cmp
sbb
mov
jo
mov
mov
shlb
and
icebp
movsb
add
scas
fisubrs
cmp
pop
push
inc
rcrb
stos
jg
lock
mov
inc
and
gs
or
aaa
adc
xlat
das
mov
or
mov
insb
sbb
in
pushf
or
or
jnp
pushl
jnp
inc
aas
shl
jge
ss
cmp
push
divb
mov
lods
cmp
mov
or
imul
add
xor
xchg
scas
xor
jmp
popf
arpl
mov
sub
int
jnp
dec
dec
xor
xlat
push
loopne
jmp
pop
movzbl
jle
xor
add
jnp
outsl
pop
mov
cltd
mov
cmpsb
pop
fmuls
mov
jno
arpl
dec
ja
inc
fdivrl
cmp
push
xor
xlat
cmpsl
js
stc
cmc
out
sub
scas
arpl
int3
in
out
repz
std
repnz
pop
sarl
cmp
mov
test
jnp
mov
mov
daa
pop
mov
stos
or
rep
inc
insl
subb
or
jnp
test
int3
icebp
xor
xor
cmp
cmp
movsb
test
sbb
insl
jns
push
out
arpl
adc
mov
jnp
scas
add
sbb
xor
inc
jnp
sbb
cld
and
into
stos
sub
pop
push
leave
pop
pop
mov
imul
sub
dec
jne
dec
xor
icebp
fimull
insb
push
jle
test
outsb
ljmp
fistpll
sub
shll
jl
ss
and
jnp
push
sbb
outsl
jnp
xchg
lahf
sub
jmp
push
shl
mov
mov
xchg
hlt
lods
jno
lcall
inc
xchg
jp
inc
jnp
pop
cld
mov
gs
dec
cmp
lea
or
cltd
jnp
adc
clc
std
mov
jnp
jne
testb
fiaddl
jnp
movsb
into
mov
xor
sbb
sub
fldcw
sub
movsl
jp
sub
cltd
jnp
into
lds
sbb
dec
mov
dec
shl
jo
or
int3
lret
mov
mov
lock
jnp
jae
dec
cmpsb
movsb
sbb
es
lea
jo
sbb
jnp
mov
xor
clc
xor
std
mov
dec
loop
imul
in
xor
sbb
add
hlt
pop
sbb
lret
xor
dec
fisubrl
cmp
outsb
or
aaa
stos
dec
jnp
xchg
cmp
mov
push
fnstsw
cwtl
mov
xchg
lea
pop
outsb
sub
push
add
and
dec
mov
ja
sub
xor
pop
cmp
sub
jnp
push
jns
int3
out
test
stos
subl
ljmp
push
add
push
jne
mov
dec
cmc
stos
and
pop
je
dec
lret
xlat
loope
pop
int
jne
pop
jnp
sbb
std
cli
push
jp
cmp
ficoml
cmpsb
mov
clc
scas
ds
mov
jae
xchg
addr16
sbb
rorl
in
jnp
cmp
fwait
repnz
sub
rcl
mov
pop
sbb
stos
jnp
negl
xchg
jo
jno
and
fdivrs
jl
xchg
xor
in
cmp
nop
sbbl
pop
jmp
cmp
sub
cmp
jnp
adc
jb
xlat
fcmovb
jnp
sub
pop
xor
jp
sub
idiv
je
ljmp
pusha
div
jne
adc
int3
les
nop
sub
dec
lahf
movsb
add
jnp
xor
lret
sbb
test
pop
sub
and
mov
les
jnp
lods
fadds
into
in
jne
mov
divl
outsb
xchg
cmp
jnp
inc
daa
push
pop
insb
jp
xor
cltd
push
in
or
jnp
out
sub
testl
cs
jae
mulb
sub
dec
jl
jnp
or
les
push
jns
repnz
push
inc
xor
pop
adc
and
sbb
jmp
pop
jnp
fwait
cmc
dec
mov
adc
or
ret
mov
dec
inc
xlat
fwait
inc
outsl
mov
inc
pop
mov
testb
imul
das
mov
cltd
xchg
sahf
sbbb
icebp
and
pushf
sub
xchg
ret
push
xor
cmp
movsb
pushf
out
stc
cmp
outsl
sub
negb
int
test
or
mov
jnp
imul
repz
stc
popa
jle
mov
or
xor
mov
jns
or
lock
push
mov
push
jnp
lods
ficoms
jno
push
mov
test
fistpl
mov
stc
es
xchg
jnp
movq
out
das
jnp
icebp
pop
imul
mov
arpl
mov
add
xor
inc
and
push
add
dec
jnp
xchg
mov
andl
cmc
negl
dec
mov
arpl
lret
insl
insb
mov
xor
sbb
dec
dec
add
and
setae
jnp
popa
sar
fwait
mov
je
call
das
jp
xor
in
push
mov
xor
mov
pushf
jb
jnp
inc
out
add
jb
xchg
jnp
dec
ret
jns
and
mov
sahf
aas
push
imul
or
jnp
repnz
inc
mov
int
add
inc
adc
call
hlt
sbb
and
lods
sbb
jb
outsl
ljmp
es
push
in
negb
imul
jp
jnp
push
dec
ljmp
jo
cltd
lahf
jnp
and
mov
stos
or
jnp
movsl
ljmp
or
jno
adc
push
pusha
lods
notl
mov
xor
sbb
das
cmpl
cwtl
stc
fldcw
mov
ret
mov
outsl
or
jmp
sub
jnp
or
mov
sti
data16
or
xchg
outsb
aas
clc
cmp
outsl
pop
push
pop
adc
movsl
jnp
pop
shr
rclb
icebp
sbb
mov
xchg
jmp
into
sub
push
les
cmp
movsb
pop
jnp
sarl
push
xor
aam
pop
cmp
pop
mov
es
psllw
jnp
je
dec
cmp
addr16
or
xchg
fidivrl
sbbb
jnp
call
cmp
inc
jnp
xchg
dec
pop
jecxz
pop
xchg
jnp
cli
xor
arpl
push
jnp
jbe
mov
dec
loop
jnp
dec
lods
ljmp
insl
xor
std
orl
and
sbb
xlat
lea
cmp
inc
js
mov
jno
outsl
push
adc
xchg
jnp
icebp
push
lock
mov
xor
in
xor
inc
dec
ds
ss
push
mov
insb
jge
loope
jbe
jb
or
pop
jb
dec
mov
xorl
jnp
imul
call
pop
adc
or
xchg
inc
mov
mov
xchg
or
ficomps
jb
addr16
in
popf
je
jae
or
arpl
jnp
mov
std
pop
jnp
sub
sti
ja
ret
cmpb
push
es
lods
push
ficompl
pusha
and
mov
ss
jnp
mov
pop
insl
into
lcall
jnp
fisttpl
idivb
jo
mov
outsl
int3
stos
lahf
scas
jnp
insb
cmp
cmp
out
lods
pop
fidivrl
ljmp
mov
sbb
xor
and
add
jae
pop
or
arpl
xchg
jae
incb
lret
ljmp
mov
cmp
mov
sbb
sub
cmp
push
xor
add
add
inc
mov
mov
mov
xchg
das
sub
inc
jns
imul
je
fidivrl
jns
orl
mov
inc
popf
mov
aaa
cmp
incl
outsb
les
adc
push
xchg
ja
push
and
repz
lcall
mov
jno
lahf
ror
xor
fwait
js
repnz
dec
out
mov
scas
lds
jnp
pop
inc
mov
cltd
fwait
dec
xchg
in
pop
lcall
js
dec
push
imul
xor
pop
lds
jnp
dec
test
jne
pop
dec
imul
or
inc
mov
imul
mov
pop
fdivrl
in
mov
in
aas
lss
pop
jmp
rcrb
add
pop
cmc
push
cmp
fwait
pop
xor
movsb
inc
and
scas
jnp
jmp
test
fldt
repz
or
jmp
jae
mov
jp
fsub
mov
and
cltd
outsb
mov
mov
mov
js
shll
jnp
jp
fcompl
lods
xor
jne
pushl
lods
or
sbb
sbb
inc
sbb
xchg
jb
and
movsb
dec
rorl
jo
int3
out
imul
jle
inc
mov
jns
mov
jnp
xor
fdivr
jnp
sti
lret
daa
cwtl
hlt
pop
inc
or
nop
mov
out
cmp
pop
jae
cmp
sti
imul
sbb
cmp
jnp
aam
inc
fisubs
lods
jnp
idiv
sub
mov
cmp
fsubrs
xor
lret
sub
es
jnp
push
add
pop
mov
ss
mov
push
idivb
ljmp
pop
mov
pop
mov
jp
jno
cwtl
push
sbb
jb
out
jno
sub
jbe
sub
and
sbb
insb
and
jnp
repnz
sahf
push
notl
sub
mov
add
movsb
pop
dec
jnp
adc
add
mov
sub
aad
std
pop
xchg
outsl
sbb
sbb
in
insl
js
in
sahf
jnp
dec
cmc
jbe
and
movsl
ss
inc
or
gs
popa
and
cmp
jnp
lcall
mov
out
shrb
sub
cs
jae
add
xor
cmpsl
leave
int
xchg
stos
and
mov
xlat
adc
sti
mov
pop
jns
push
pop
mov
dec
bnd
shl
sub
sbb
mov
jae
add
je
mov
repz
aas
xor
jnp
dec
mov
or
cmp
or
in
jns
xor
fwait
pop
mov
imul
or
mov
imull
test
adc
in
je
leave
ljmp
divb
add
hlt
pop
mov
jmp
mov
sti
mov
pop
sbb
hlt
dec
mov
dec
ja
xlat
enter
mov
jnp
or
pop
mov
xor
subl
test
repz
addr16
xor
xchg
jecxz
arpl
pop
insb
das
int3
inc
jnp
jbe
or
orl
imul
scas
repnz
shrb
js
xlat
lret
sbb
lods
dec
jnp
in
pop
mov
sub
mov
push
lcall
xchg
fidivl
sar
int
jnp
div
xor
cltd
xchg
pop
jnp
bound
and
call
mov
sub
outsb
scas
xor
daa
xor
jnp
shl
lcall
jb
lods
push
outsb
lock
jnp
out
sub
mov
jne
jb
adc
mov
xor
jnp
std
inc
jmp
mov
clc
sub
imul
imul
hlt
sub
sbb
and
push
imul
comiss
and
lret
pop
cs
mov
xor
xor
and
mov
adc
inc
fisubrl
mov
jmp
js
outsl
nop
subl
jo
incb
jnp
sarb
outsl
xor
lods
int3
mov
sbb
dec
cmp
orb
xor
add
jnp
xlat
data16
adc
mov
and
gs
dec
mov
ja
test
sbb
pop
mov
shrb
in
add
mov
imul
jb
scas
inc
and
stc
jns
mov
add
popf
push
lret
jp
mov
pop
sub
and
fmul
aaa
dec
sub
push
test
lods
sahf
mov
push
push
cmpsl
push
add
imul
or
inc
sub
add
xor
jnp
ss
dec
movsb
shrl
jnp
fstpt
aas
or
or
xor
mov
dec
aas
mov
scas
jnp
or
dec
jne
addr16
jnp
adc
mov
mov
lods
mov
push
stos
jae
repnz
jnp
mov
jns
aad
add
outsb
jmp
jae
or
jnp
add
cmc
sub
adc
sub
pop
movsb
push
jnp
or
or
outsl
lock
cmp
xor
and
sahf
sbb
js
jns
sti
push
or
jnp
or
sub
jle
imull
push
sub
sub
jae
xchg
cmp
mul
cli
pop
mov
xchg
test
cld
adc
jp
loop
outsb
push
jns
or
cmp
sub
lahf
lods
sbb
jne
clc
cmp
inc
cli
fimull
jbe
dec
stc
jnp
jl
lahf
xchg
sub
pop
mov
rcrb
xor
mov
add
push
or
imul
xor
sub
jnp
or
mov
xchg
mov
ss
lret
dec
fisubrs
mov
adc
mov
js
mov
jl
sbb
arpl
mov
mov
jne
aad
mov
xor
out
and
pop
pop
daa
repz
add
mov
mov
jmp
push
xor
imul
loope
outsb
push
imul
js
in
cmp
dec
icebp
cmp
mov
pop
jb
insl
sti
jnp
xchg
cld
mov
dec
mov
sbb
idivl
jnp
and
ds
not
adc
sub
imul
inc
lock
addr16
push
in
jnp
xor
cmp
imul
aaa
cmp
js
dec
and
jnp
mov
mov
jnp
jl
ds
jecxz
lock
aaa
repz
loope
xchg
mov
xor
jp
std
dec
adc
jle
mov
jno
outsl
cmp
js
lret
sbb
sti
adc
jnp
mov
fsubs
pop
xchg
adc
les
mov
jno
pxor
inc
lods
or
xor
dec
mov
in
into
pop
pop
pop
ss
cltd
push
fwait
ja
jb
jno
ljmp
jns
pop
push
mov
pop
push
mov
bnd
mov
xchg
sbb
out
out
inc
jnp
dec
imul
or
inc
jp
repnz
cmp
mov
jnp
mov
rol
clc
sti
jnp
mov
jl
mov
out
dec
cmp
insb
loope
jnp
ss
sbb
xlat
add
sbb
daa
aam
insl
insl
adc
mov
into
mov
jnp
sbb
fcomi
adc
jnp
repz
in
into
or
je
cmp
fnstsw
inc
mov
mov
mov
out
lods
xchg
adc
jnp
mov
xor
mov
je
insl
test
pusha
push
mov
insl
xor
jnp
imul
cmp
ljmp
jnp
scas
mov
or
mov
cmp
lret
dec
ret
jne
mov
mov
imul
mov
ja
lcall
mov
lock
adc
cltd
hlt
dec
out
test
jnp
xlat
in
adc
testl
ss
cmp
jp
mov
pop
stos
je
xchg
pop
out
push
fidivs
clc
jnp
xchg
push
hlt
ss
mov
out
imulb
fldl
insl
sbb
dec
jbe
outsl
shll
not
mov
xor
addr16
into
jnp
insb
xor
xchg
int
fwait
call
shrb
pusha
cli
xor
xor
push
sbb
repnz
test
mov
mov
jnp
pop
cmp
jge
jnp
dec
pop
add
sbb
or
inc
dec
xorb
insl
add
sub
or
jns
lret
adc
jnp
xlat
mov
pop
test
enter
push
jnp
out
and
xor
jne
jg
bnd
jle
xchg
cs
mov
add
jnp
add
mov
jnp
cmp
sub
xor
aaa
xchg
cmpsl
mov
fnstenv
mov
push
insl
jnp
xor
lock
sub
addr16
imul
stos
pop
adc
imul
xchg
movsl
jne
mov
push
aam
pop
jnp
je
leave
in
icebp
dec
testl
stos
stos
xorb
mov
push
or
jg
jmp
je
data16
add
cmp
enter
inc
or
insl
xor
xchg
jp
movsl
sbb
xchg
lret
stos
jnp
out
jns
pop
ss
jnp
fisubs
cs
lds
pop
outsl
lods
stc
cmp
nop
ja
mov
cli
xor
and
adc
xor
arpl
xchg
jnp
or
outsl
imul
jnp
dec
scas
das
mov
call
test
out
adc
notl
jnp
adc
mov
popf
jo
jnp
ljmp
fs
mov
cmp
push
repz
jbe
or
pop
mov
pop
add
aaa
cwtl
pusha
out
sbb
dec
in
shlb
mov
cmpsb
xchg
push
out
insl
jle
clc
push
lock
cmp
pop
ret
lahf
inc
jl
mov
or
out
lcall
test
add
hlt
ficoml
xor
out
lahf
jnp
jne
sbb
xor
jo
sub
xor
xor
shrl
mov
pop
jnp
mov
dec
inc
mov
sarl
mov
pop
pop
dec
fbstp
test
dec
jnp
cs
pop
jnp
jp
divb
xchg
dec
jno
and
divl
roll
and
mov
cmp
adc
jae
imul
jae
pop
out
dec
jns
cltd
jbe
jnp
lea
outsb
cmpsl
scas
sahf
push
mov
mov
stos
jae
jp
mov
mov
mov
cltd
jno
mov
push
nop
mov
ljmp
jb
mov
js
insb
jbe
sub
mov
mov
cmc
sbb
shrl
add
jo
popf
insl
jbe
pop
aaa
jmp
jnp
out
cmc
sbb
sbb
mov
stc
xchg
adc
sti
scas
xor
in
aas
insl
and
sahf
cmp
sbb
jmp
ret
jnp
mov
jecxz
imul
cmp
jnp
fwait
cmp
ss
sbb
jle
xor
and
lea
sbb
cmp
jnp
add
inc
push
xor
outsl
out
cwtl
dec
inc
push
adc
outsl
push
mov
insl
pop
sbb
jnp
fsubrp
popf
icebp
cmp
jnp
cli
lock
mov
fs
enter
cmp
xor
and
in
shrb
inc
adc
sti
fiadds
arpl
test
xor
idivl
cmp
imul
jnp
sub
inc
aaa
dec
out
or
adc
add
xor
lret
es
leave
dec
jnp
icebp
clc
xor
ror
loope
push
repnz
aad
jb,pn
jnp
dec
fstp
dec
gs
inc
and
xchg
xor
push
stc
or
adc
les
pop
insl
call
sbb
sub
lock
xchg
push
mov
xor
cmp
mov
enter
and
mov
imul
nop
cld
loope
jg
pushl
imul
clc
imul
cmpsl
pop
fidivs
js
scas
jnp
incb
xor
xchg
mov
cmp
mov
notb
ud2
aaa
testl
jnp
lock
push
cli
mov
jnp
addb
jnp
imul
daa
scas
into
jbe
and
icebp
sbb
shr
add
mov
jmp
jp
jns
mul
data16
dec
aam
xor
gs
jnp
jg
stos
pop
cmp
xor
jecxz
xchg
outsl
push
jb
ds
cmp
outsb
cmp
push
loope
in
dec
fdivrl
and
jnp
into
mov
inc
mov
or
stos
jnp
ret
dec
imul
inc
pop
add
sarb
xor
jnp
repnz
xor
call
lods
idivl
mov
mov
scas
sub
addr16
jnp
in
dec
mov
mov
sahf
or
popf
jnp
add
imul
mov
mov
ljmp
sbb
ljmp
ja
aam
hlt
jge
jp
jne
sbb
shll
cmpl
repnz
fucompp
insl
jnp
icebp
push
adc
imul
js
out
das
negb
or
lret
sub
lahf
add
jns
jl
ljmp
xchg
jge
mov
in
mov
sahf
jnp
mov
and
pushf
imull
jns
ficoml
push
cltd
cmp
in
jnp
and
xchg
pop
dec
xor
adc
mov
aaa
cmp
sub
adc
mov
xor
jnp
jns
pusha
mov
jnp
notb
push
mov
stc
xchg
or
or
lcall
jg
outsl
mov
aas
mov
fcmove
sub
xor
js
xor
out
dec
ss
sti
mov
lds
imul
sub
xchg
push
dec
insl
fisubrl
pop
jnp
mov
jnp
arpl
push
mov
hlt
jae
lds
filds
adc
sti
mov
mov
mov
jle
das
sti
mov
jnp
imul
sub
jnp
push
aaa
jp
lock
cli
jnp
push
clc
imul
movsl
mov
jnp
mov
mov
dec
push
jnp
mov
addr16
dec
jp
and
pop
mov
cmpsb
jle
scas
or
fstpt
fcmovu
inc
jbe
repz
push
jnp
aam
dec
mov
pop
sub
fisttps
jnp
mov
sub
mov
push
or
jnp
push
out
test
insl
xor
sbb
sub
int3
mov
movl
and
jbe
testb
pop
jl
pop
jnp
je
push
lods
push
mov
leave
out
cmp
inc
fdivrs
xor
insb
mov
aad
mov
push
outsl
cvtpi2ps
pop
scas
insb
xlat
divb
js
stos
or
int
movsl
outsl
enter
jnp
testl
mov
cli
jno
aam
in
jl
pop
fimull
sbb
push
jae
cld
push
sbb
scas
stos
cmp
pop
loop
xor
jae
cmp
ljmp
sub
xor
xchg
negl
loop
insl
mov
dec
fs
mov
jmp
add
lret
imul
daa
mov
xlat
dec
lods
int
cmp
imul
inc
lods
jns
jnp
jo
divb
inc
scas
mov
xchg
push
jnp
mov
test
mov
nop
outsb
jns
movsb
inc
xor
push
xchg
jnp
das
pop
int
pop
mov
mov
mov
mov
jnp
cmpsb
push
xor
cmp
sti
fidivs
ret
jnp
add
outsb
jnp,pn
cmp
mov
jnp
mov
mov
into
dec
jnp
mov
mov
stos
sub
test
pop
or
fsubr
or
fisubrl
mov
scas
adc
fldl
pop
std
scas
insl
leave
sarb
jnp
adc
adc
clc
stc
notb
add
mov
insb
cwtl
cmpsl
ss
gs
jae
pop
push
sti
xor
cmpsl
pop
cmc
jnp
xor
push
jnp
jle
leave
insl
push
mov
enter
jnp
and
ljmp
rcr
jnp
ret
scas
movsl
or
mov
jns
dec
jnp
push
loope
sub
jb
jnp
ljmp
or
mov
xlat
jns
popf
jnp
cmp
sub
or
cltd
or
test
cld
xor
mov
xor
jae
popf
out
dec
lods
in
imul
pop
ds
outsb
ja
jnp
cmp
movsb
scas
jnp
incb
jno
adc
fwait
out
jns
cs
xor
xor
je
sub
imul
mov
jbe
lea
jnp
lahf
rclb
mull
mov
adc
jnp
mov
jno
fidivrs
fstpt
mov
xor
scas
loope
pop
enter
jo
mov
loopne
mov
and
jnp
jae
pop
ret
lret
cltd
sub
jnp
sub
mov
fmuls
cld
sub
jnp
lods
sbb
adc
jns
or
jnp
fimuls
cmc
insb
jno
cltd
lock
jnp
cmp
cmp
fildl
xchg
bound
jnp
cmp
ja
int3
or
xlat
mov
jnp
pop
xchg
jnp
ror
hlt
mov
add
mov
xchg
call
pop
adc
jge
jae
imul
jns
mov
add
adc
adc
jnp
out
sarl
inc
mov
adc
push
or
ljmp
xchg
xchg
out
loopne
inc
sub
xchg
sub
out
cmp
cmp
jmp
sbb
clc
jnp
and
cmp
jmp
stc
rorb
xor
in
mov
fistpll
in
data16
inc
jg
outsl
test
fsubrs
xchg
mov
outsl
hlt
in
cs
aad
adcl
mov
sbb
lods
sahf
jnp
jbe
xchg
lea
enter
or
pop
sub
outsb
jae
xor
push
pop
jnp
ljmp
adc
aaa
fstpt
divb
adc
clc
sub
pusha
inc
xchg
sbb
js
cli
pop
orb
jnp
in
cmp
and
xlat
ljmp
pop
lds
or
fcomps
cmp
push
ret
jl
pop
cmp
cmpl
pop
mov
xorl
sbb
adc
cmp
loopne
push
and
mov
out
je
jnp
mov
popf
mov
clc
push
cli
rorl
jnp
out
stc
test
xor
aas
outsb
mov
jnp
lods
lods
rcrl
hlt
cli
idivl
jnp
cli
int
das
xor
notb
mov
xor
xchg
and
scas
ja
sarb
imul
and
aas
insb
cli
mov
or
imul
jnp
mov
mov
pop
push
mov
xor
ret
pop
aam
in
or
repnz
cli
inc
dec
sbb
lahf
fs
adc
push
pop
shll
daa
das
and
sbb
mov
mov
dec
or
jno
lds
add
cltd
dec
les
sub
pushf
ljmp
xor
bound
mov
int3
jnp
test
or
mov
jne
sbbb
mov
sbb
add
lahf
fnstsw
jnp
pusha
jae
dec
inc
nop
cmpsb
xor
int3
test
jno
xorl
xor
jnp
add
idivb
mov
icebp
les
aas
fisubrs
mov
jnp
mov
jle
fldt
adc
inc
clc
jae
cmp
xchg
pushf
out
mov
pop
xorl
addr16
xchg
leave
xor
lret
sahf
ret
pop
das
cld
jae
push
xchg
mov
jnp
xchg
jnp
xor
dec
mov
add
jnp
aam
insb
xor
inc
imul
push
test
adc
in
mov
or
in
fsubp
jnp
ss
dec
mov
inc
dec
mov
jnp
das
mov
ss
fs
or
jnp
mov
movsb
and
scas
sub
mov
jns,pn
sbb
aad
jb
pop
pcmpeqb
dec
push
xchg
js
mov
or
sbb
or
pushl
sbb
sbbb
dec
mov
cmp
jb
jnp
cwtl
jmp
stos
pop
popl
rorl
and
jnp
dec
xlat
divl
popa
rcr
jns
ret
mov
sti
adcl
dec
mov
insb
mov
stc
sbb
repnz
jg
testl
mov
fsubs
scas
jnp
std
popf
adc
inc
notl
sub
sub
xor
cmpsb
dec
sbbl
cs
aam
push
push
pop
jp
lods
les
jl
stos
jnp
dec
xchg
jo
sbb
lret
jae
aad
popa
lcall
mov
jle
fstpt
xor
xchg
test
insb
pushf
mov
xchg
aad
fwait
xor
insl
sbb
mov
jo
jae
outsb
negl
inc
mov
add
nop
inc
popf
mov
jb
jnp
ljmp
jnp
xor
push
and
mov
push
popf
cmp
sti
adc
xchg
imulb
push
aam
jo
mov
stos
xor
out
in
jnp
jbe
ljmp
ret
outsb
repnz
stos
xor
jg
cli
push
es
pop
jnp
adc
clc
xor
fmuls
xchg
dec
mov
fwait
in
or
jle
dec
lret
cmp
add
popa
sbb
xchg
scas
xor
imul
cmpsb
adc
jno
jae
pop
sbb
test
jnp
imul
or
jle
je
xchg
push
pop
xchg
stos
jnp
cmp
js
pop
lods
aaa
lds
out
jmp
xchg
jg
cmp
loope
jne
sbb
ret
mov
imul
add
fs
adc
enter
loop
jae
lahf
mov
int
jnp
out
jo
fidivl
jnp
repz
out
mov
jnp
mov
scas
jns
push
fdivrs
jae
aas
jg
flds
clc
repz
jmp
fwait
xor
jne
jle
cmp
mov
insb
bswap
push
jnp
dec
fwait
dec
dec
cmp
xchg
jnp
cmpsb
lret
lret
lods
sub
cs
lcall
in
jg
add
inc
pop
popf
jnp
lock
sbb
adc
jae
and
jnp,pn
xchg
mov
jge
jb
add
mov
mov
ljmp
shrb
dec
jne
stc
sub
pop
jo
adcl
xor
sbb
add
lods
adc
xor
ja
xchg
jnp
je
inc
lcall
ficoms
enter
loope
mov
jns
xchg
shll
sahf
jb
and
xor
negb
pop
xchg
xchg
clc
jnp
xchg
aaa
shrb
ret
or
dec
xor
xchg
cmp
mov
jnp
xor
movsl
in
mov
or
jmp
cmpsb
cs
jg
outsl
jnp
sub
cmp
xchg
ss
mov
jmp
mov
js
cmpsl
clc
xor
inc
lods
lret
out
call
push
cmpsb
jge
or
cmp
cmpsl
scas
gs
lret
cld
mov
sbb
mov
pushf
shll
je
int
sbb
call
mov
or
mov
or
sbb
or
mov
jnp
daa
sahf
js
push
mov
sub
cmp
adc
push
mov
push
mov
mov
je
clc
imul
mov
mov
ss
jns
aaa
fdiv
dec
lock
sti
outsl
or
mov
add
jnp
mov
test
jnp
cmp
adc
xor
xor
lock
jnp
mov
test
shlb
dec
es
adc
and
jnp
outsb
cs
xor
outsl
jnp
fidivs
out
clc
lods
and
cld
jmp
sub
lcall
jne
xchg
int
cmp
pop
cltd
adcl
push
fwait
cmp
mov
repz
popa
cmpsl
inc
add
sti
xchg
jb
lret
push
jnp
test
aaa
imul
or
push
push
jnp
cld
jns
xchg
fdivrs
pop
sub
sbb
js
inc
in
or
lcall
cmp
mov
xor
add
imul
sbb
js
in
dec
imul
jmp
pusha
push
cmp
jne
or
jnp
mov
xor
shr
and
ja
lds
insb
jne
push
mov
mov
mov
sub
int3
cmp
mov
ret
sbb
popfw
jns
jne
test
je
cmc
inc
aam
decl
add
xor
insb
mov
jo
lret
je
push
jnp
addr16
sub
lret
xlat
jg
jp
sub
jb
cmp
dec
and
shr
xchg
ret
imull
dec
imul
aaa
cmp
jle
mov
push
mov
adc
adc
mov
int
scas
icebp
sbb
mov
mov
ljmp
adc
clc
loop
mov
ss
mov
pop
mov
mov
jecxz
pusha
mov
adc
xchg
sbb
jnp
jne
and
out
data16
lods
jnp
pop
pop
es
test
inc
or
sbb
sub
out
jnp
aaa
test
sub
cmp
cs
adc
xor
jnp
test
push
xor
sahf
fildll
jns
insl
in
jmp
stc
jge
mov
es
sub
xchg
push
lods
idiv
jnp
mov
and
dec
scas
outsl
xor
inc
shrl
sbb
rcrl
not
push
fisubl
rcrb
or
pop
push
jnp
sub
icebp
je
sbb
adc
sub
jnp
lock
xor
xlat
mov
ljmp
mov
jnp
ret
add
mov
imul
cmc
cmp
jbe
scas
push
add
jo
in
or
aad
or
clc
jno
sub
xor
into
test
sti
les
repnz
xlat
push
cmp
pop
sbb
mov
and
outsb
add
sarb
or
xchg
inc
in
or
jnp
scas
js
dec
mov
test
pusha
pcmpeqw
mov
fcmovb
mov
pop
and
ret
jnp
mov
in
shlb
std
fcomps
jp
xchg
out
sbb
out
pop
lret
insb
sti
push
mov
jo
cmpsb
mov
enter
or
ss
xlat
jnp
sbb
and
std
pop
bound
inc
js
jo
arpl
jnp
mov
add
push
cmc
stos
pop
fmull
lea
jae
clc
fidivs
pop
jne
mov
test
dec
jnp
mov
dec
mov
fsubrp
or
add
xor
push
push
sbb
sbb
mov
and
fisttps
imul
mov
test
outsb
mov
imul
fwait
ljmp
and
jnp
cmp
stos
jae
sub
xor
inc
arpl
dec
cmp
aaa
lcall
cmp
adc
mov
jg
int3
jnp
add
clc
jnp
ljmp
jnp
cmc
or
scas
jnp
repz
jbe
jb
orl
cld
cmpb
push
pop
mov
xor
cmpsl
jne
jp
jnp
rcr
or
negl
movsl
dec
jo
jo
jnp
outsb
inc
mov
cli
insl
lods
int3
aaa
and
std
pmaxsw
pushf
popf
ror
fidivl
and
cmc
xchg
imul
mov
or
aam
ljmp
sbb
arpl
ds
dec
jnp
xchg
mov
xor
lret
sti
xchg
jnp
pop
xchg
aad
cmpl
cmp
or
xchg
fwait
push
in
jae
into
aad
dec
or
outsl
sbb
cmp
ljmp
int3
repz
pushf
pop
cld
jnp
pop
or
xor
dec
sub
ss
jmp
jne
push
jl
jnp
mov
clc
stos
xchg
pop
insl
jnp
movsl
ja
dec
ljmp
divl
or
sbb
adc
mov
jnp
jecxz
xor
test
pop
mov
jno
fbld
inc
pop
int
xchg
xorb
sbb
dec
lret
scas
fwait
stos
jnp
mov
mov
or
add
or
addl
cltd
imul
insl
jnp
mov
mov
ja
call
inc
xchg
push
arpl
jnp
sub
xchg
jne
sbb
int
push
lea
xor
and
push
jnp
pop
xor
mov
xlat
or
add
mov
mov
dec
cmp
xchg
or
xor
fisubrl
dec
mov
imull
cmp
dec
sbb
hlt
sbb
in
repz
fwait
or
lock
and
insl
push
incl
sbb
fcomi
lods
jnp
rolb
sub
pop
add
push
pop
xchg
aad
sub
sbb
stos
and
js
or
divb
sub
sbb
jnp
outsl
stos
ret
mov
int3
mov
cmpsl
lock
jg
jno
stos
dec
pop
in
mov
jns
xor
jnp
pushf
dec
loop
testl
mov
sbb
jnp
xor
jno
pmaddwd
jp
and
cld
pop
mov
mov
aam
xor
int3
xchg
aaa
sub
cmp
and
loopne
dec
jp
pop
dec
repnz
pop
rcll
xchg
enter
mov
test
mov
nop
push
pop
popf
and
jnp
mov
or
jnp
jmp
add
mov
pop
cmp
or
adc
cli
push
cwtl
in
adc
mov
fmuls
jge
fstps
cmpsl
call
lods
addr16
add
xor
lret
cmp
cltd
jnp
popa
loope
inc
jnp
sub
sub
add
popf
in
popa
fcmove
jnp
push
sub
test
outsb
das
inc
sbb
sub
rorl
mov
sbb
sub
cs
call
fwait
insb
jmp
xor
addr16
repnz
inc
jo
mov
or
xchg
cmpb
sbb
repz
imul
add
mov
mov
bound
push
sbb
fdivl
jnp
sbb
mov
jne
cmpsl
fwait
or
sbb
mov
ljmp
ror
out
and
stos
lods
mov
clc
scas
mov
ror
push
lret
jle
sbbl
fistl
pop
outsl
mov
scas
lea
dec
cwtl
sti
clc
jnp
out
push
jno
js
jnp
adcb
push
mov
and
mov
push
lds
mov
jp
jnp
or
sub
inc
mov
mov
add
fs
or
and
shlb
cmc
insl
adc
jnp
mov
mov
xchg
ss
push
mov
cmpsl
lds
call
jnp
mov
int3
mov
mov
testl
mov
jnp
inc
fsqrt
movsb
inc
sahf
push
aaa
outsb
test
pop
aad
hlt
jnp
xor
jmp
add
adc
cmp
push
pop
outsl
or
mov
out
fldenv
jnp
int3
rorl
loopne
jb
ss
cltd
pop
pusha
xchg
mov
cmpsl
jne
pop
mov
pop
sub
popf
jnp
leave
jecxz
jbe
adc
ljmp
sub
cmp
inc
jae
sub
cmpsb
adc
fdivrl
iret
mov
pop
pop
dec
movsl
cmp
arpl
aaa
jnp
or
imul
into
outsl
stos
jbe
popf
inc
jnp
scas
jns
push
cwtl
jnp
lods
xor
hlt
cmp
push
insb
mov
int3
jnp
lods
xor
fwait
js
pop
jmp
or
sub
cs
outsl
lods
idivl
xor
ficompl
pop
jne
jnp
pushl
clc
sti
sbb
mov
pop
mov
shlb
in
jnp
je
test
pop
inc
fldt
cmc
scas
leave
mov
xor
xchg
dec
jnp
fsubrs
hlt
jnp
push
inc
mov
jmp
mov
mov
xorl
les
sbb
lock
jne
pop
cmp
xor
mov
fsubr
dec
jnp
gs
js
sbb
add
adc
xor
fsts
jb
ds
push
cmp
inc
mov
in
cs
pop
aad
adc
dec
push
jne
sub
push
jne
pop
or
cmp
icebp
repnz
mov
movsb
jnp
insl
fsubl
ret
jnp
xorl
imul
addr16
je
insl
in
sti
jnp
add
xchg
divb
jp
jno
jmp
jnp
mov
fcomip
mov
push
test
aam
sub
xchg
enter
sbbl
cld
push
cmc
pop
pop
scas
lock
xchg
das
sub
idivb
jnp
fwait
xor
mov
xor
sub
or
cmp
jnp
xor
ljmp
xor
add
clc
int3
inc
jnp
mov
cli
push
js
push
lcall
push
cld
fidivrs
pop
aam
sbb
sbb
cmc
das
and
je
fildl
notl
std
jnp
inc
not
cmpsl
sub
mov
mov
xchg
jg
sbb
push
lds
test
jl
fisttpl
aaa
jge
daa
xor
mov
stos
pop
xor
jnp
lret
and
jne
test
loope
shlb
adc
insb
lret
and
jmp
dec
sub
push
scas
fildll
jo,pn
inc
insb
xchg
pop
negl
jnp
fimull
cli
jns
add
in
je
mov
adc
es
mov
push
sub
jae
insb
push
test
ss
jnp
jae
lods
inc
pop
adc
jg
xor
mov
addl
cli
lods
or
sbb
adc
clc
cmovnp
scas
xchg
cmpsb
mov
ja
lret
shll
push
jo
cmp
test
cmpl
je
lods
outsb
rcrl
mov
insl
jnp
es
loope
pop
fidivrs
leave
cli
sahf
add
lods
inc
xor
rcrl
cmp
xor
sbb
jbe
das
imul
jp
call
cmpsl
lods
les
cmp
scas
imul
cwtl
jne
jg
cmp
cmpsb
mov
mov
sub
xchg
jae
decl
sub
jne
out
cmp
gs
mov
mov
scas
mov
nop
bnd
pop
jb
pop
add
sbb
stos
mov
dec
mov
sbb
loopne
pop
mov
jns
jns
or
cli
xchg
jnp
imul
scas
cmpsb
std
cmpl
mov
outsb
call
xor
mov
or
jnp
cld
outsl
mov
adc
jns
sub
jb
push
lcall
lock
pop
pop
adc
mov
mov
jg
insl
jle
jnp
jno
lahf
push
fnsave
jnp
mov
adc
insl
ds
or
mov
push
test
ret
jge
popf
insl
sahf
dec
jno
test
imul
pop
xorl
mov
scas
push
jnp
or
jno
faddl
jb
scas
pop
or
cmp
xor
movsl
sub
cmc
sbb
ffreep
lods
cmp
mov
mull
repnz
aad
xorb
lcallw
or
xchg
pop
jnp,pn
xor
dec
paddq
pop
or
jne
stc
or
cld
cmp
movl
bnd
jmp
jno
xor
jnp
mov
fimull
lret
xchg
xchg
or
lret
sti
sub
push
enter
pop
stos
dec
sarl
outsl
cmp
inc
dec
jnp
xor
jnp
jbe
scas
inc
insb
test
mov
repnz
aad
std
or
or
mov
ret
mov
xor
imul
xorl
jnp
lret
pushf
mov
insl
lds
into
or
in
fisubl
js
lcall
sub
add
dec
int3
shlb
mov
cmp
cmp
ljmp
push
mov
mov
call
mov
xor
inc
add
jnp
inc
imul
jmp
scas
cmp
inc
imul
sub
ljmp
jnp
push
pop
add
ss
or
leave
xor
mov
clc
cmp
lcall
pop
jnp
outsb
cmp
jnp
inc
xor
imul
cld
mov
lods
lods
aad
jnp
stc
mov
jl
ret
jmp
shrl
pop
outsl
sbb
cmp
mov
out
imul
ja
test
fistpll
sub
jmp
outsb
lods
xorl
stos
mov
sub
in
adc
sub
mov
mov
inc
cmp
imul
lds
les
mov
sub
mov
fsubr
cs
jae
push
jmp
or
xchg
mov
fidivrl
jle
imul
mov
fbld
sub
cmp
xchg
push
adc
stos
cltd
jns
fisttpl
sbb
fwait
and
mov
pushf
lods
js
int3
cwtl
mov
xchg
shrl
push
jae
xchg
sbb
cmp
in
test
push
icebp
jnp
and
sbb
jbe
jnp
mov
call
lods
fisubrs
repz
xchg
out
xor
jp
jnp
mov
aad
lea
and
in
fwait
popa
mov
in
div
jbe
dec
cli
lret
stos
ja,pt
lods
mov
jnp
outsb
sub
pop
test
jnp
mov
in
pop
jnp
scas
in
pop
jns
lods
mov
mov
lods
sbb
movsb
push
push
inc
sbb
push
stos
jnp
enter
test
jno
out
inc
add
sub
xchg
fisubl
fldl2t
mov
pmulhuw
jnp
mov
xchg
or
jnp
and
loop,pn
mov
je
stos
jnp
inc
popf
fbld
lods
sti
jnp
ljmp
aam
jnp
sahf
in
imul
xor
push
push
insb
mov
pop
jg
mov
sub
push
jnp
sub
mov
pop
dec
popf
ss
dec
jne
in
adc
xchg
repz
fistpl
fsubs
ljmp
rorb
inc
in
test
or
jnp
mov
out
push
fwait
push
mov
pop
sub
mov
mov
sbb
mov
stos
fnstcw
mov
notb
ljmp
subl
and
push
and
pushf
jnp
jp
and
cmpsl
cmp
imul
dec
icebp
pop
jnp
mov
in
out
jnp
pop
inc
cld
jmp
fwait
jecxz
push
sub
jnp
lret
mov
ljmp
shrl
pop
scas
cmp
call
outsl
sarb
fistps
mov
and
aaa
mov
mov
fs
jle
insl
or
push
jg
js
adc
add
xlat
or
xorb
cld
mulb
jnp
mov
imul
jnp
inc
lea
mul
mov
ljmp
or
sbb
clc
add
mov
jnp
and
mov
lret
xor
cmc
popa
jmp
jae
imul
jnp
movsb
fisubl
mov
pop
jae
mov
sub
push
sti
cltd
shrb
jnp
test
imul
stc
jae
ja
inc
dec
lods
outsb
and
jae
cs
xorl
in
lods
jnp
sub
mov
lcall
idivb
sub
add
sbb
push
push
outsl
shrb
jns
mov
dec
and
insl
and
xorl
xchg
fwait
repnz
jl
jns
lds
es
pop
jnp,pn
sub
xor
jnp
cmpsb
mov
imul
or
sarl
cmp
inc
mov
mov
or
imul
mov
sbb
lods
cmp
or
add
js
stos
arpl
mov
mov
f2xm1
sti
cmp
jns
ficoml
ret
jnp
pushf
mov
inc
mul
adc
aaa
icebp
mov
je
imul
cmpsl
add
int3
outsb
mov
or
sbb
fwait
mov
pop
dec
enter
clc
lock
sar
outsb
jnp
movsl
sbb
jnp
mov
adc
repnz
mov
imul
cs
mov
or
xor
xchg
jne
das
outsb
dec
jbe
mov
shl
into
jp
jb
mov
xor
pop
cmpb
sub
aaa
dec
xchg
jnp
mov
sub
mov
ss
sub
fildl
jnp
insb
pop
idivl
bound
mov
xor
icebp
sti
data16
in
jae
adc
dec
and
outsl
lret
dec
out
imul
sbb
int3
leave
sub
and
jnp
lcall
jnp
jns
cli
mov
out
lods
sbb
subb
jnp
stc
cmp
cmc
out
es
mov
enter
insb
out
xor
lock
push
ficompl
mov
jnp
insl
aaa
jne
test
cmp
and
inc
jnp
icebp
dec
or
aas
mov
cmp
cwtl
aad
push
jl
lret
pop
jns
scas
jnp
cs
mov
les
out
idivl
ss
pop
mov
jnp
ret
loop
add
outsl
out
sbb
mov
jnp
cmp
clc
adc
jns
pop
mov
pop
add
sub
rolb
mov
xor
xchg
cmp
fdivrs
shll
sub
stos
ret
lret
cli
jnp
imul
add
stos
xor
dec
ja
scas
and
lods
jbe
and
dec
ljmp
mov
cmp
jnp
je,pn
lods
jg
inc
sbb
aas
fwait
test
xor
aam
in
je
jnp
jp
push
push
inc
shlb
cmp
insl
stos
mov
adc
jp
jns
rorl
and
fwait
xchg
ja
stc
xchg
outsl
pop
mov
notl
sbb
jnp
pop
or
jnp
jns
pushf
cmp
sti
pusha
jnp
popa
leave
lret
push
pop
lock
dec
push
sub
aas
cmp
jnp
bound
rorl
cmp
inc
mov
jl
jo
dec
jb
dec
fidivl
fnstenv
cli
xchg
push
mov
leave
fwait
xor
and
sbb
jnp
imul
jnp
cmp
pop
subb
jp
lods
ja
ds
cltd
stos
xchg
sbb
add
fimuls
jp
gs
stos
lcall
arpl
imul
stc
ljmp
cmp
sti
fdivrl
filds
add
clc
cmp
divb
sahf
sbb
fldt
pop
mov
push
jnp
cli
cpuid
push
jl
jnp
negl
outsl
mov
jmp
cmp
xor
mov
dec
pop
jnp
imul
cmc
xchg
sahf
pop
mov
mov
lret
aaa
in
mov
cmp
jae
jns
inc
sbb
insl
stc
mov
inc
and
jnp
in
nop
mov
cmp
xor
add
push
arpl
or
pop
xor
add
sub
push
pusha
ljmp
cmp
cmpsl
arpl
push
mov
jnp
lea
sub
notb
xchg
in
xor
jnp
inc
ljmp
fptan
les
int3
sub
dec
cltd
lds
stc
mov
xchg
shrb
push
jnp
push
mov
pop
sub
cmp
stos
decl
and
adc
push
jnp
mov
jmp
insb
xor
les
bound
jnp
scas
pop
push
cmpsb
sti
add
jns
pop
fdivrl
mov
js
scas
frstor
mov
int3
enter
xbegin
jg
inc
repnz
cmc
and
insb
sbb
ljmp
je
jnp
jmp
dec
lods
insb
dec
xor
lret
icebp
xor
mov
outsl
mov
jns
std
xor
jnp
dec
mov
mov
inc
sbb
lea
xchg
mov
cmp
dec
movsl
aaa
jp
lock
inc
cmp
dec
xor
xor
cmp
inc
dec
cs
fbstp
mov
je
or
push
insl
push
repnz
cmp
pop
sbb
lret
xor
jae
shlb
popa
pushl
mov
push
add
sbb
mov
xchg
push
xor
mov
pop
xor
out
cli
in
cmp
xchg
add
addr16
jnp
cmp
testl
pusha
add
or
cmp
adcl
ljmp
insl
xor
testl
mov
fs
jmp
pop
cwtl
or
jae
push
cmp
bnd
stc
push
inc
fcomps
add
hlt
aam
shl
das
jnp
aaa
xor
lods
nop
pop
lret
pop
arpl
jnp
orl
and
jnp
das
sbb
ss
xchg
mov
ret
pop
mov
add
mov
jp
icebp
cs
jno
xchg
xor
loope
testl
lds
sbb
decl
xor
jno
loope
mov
jnp
xor
mov
mov
add
mov
mov
mov
add
cmp
clc
test
dec
sbb
insb
sbb
rcrl
inc
les
jle
sbb
adc
outsl
dec
cmp
jnp
fwait
stc
js
mov
inc
mov
and
mov
das
sub
pusha
mov
ss
fisttps
adc
insl
in
imul
sbb
mov
mov
stos
mov
jo
jnp
test
aad
lcall
in
andb
mov
push
pusha
jnp
push
push
inc
and
insb
jbe
cmp
out
add
mov
outsl
or
and
sub
imul
xor
shll
jmp
jnp
xlat
clc
sub
pop
pop
cli
lahf
fisttpl
cmp
pop
or
aad
jmp
int
sahf
pop
sub
call
aaa
in
or
fdivs
jnp
into
lock
ja
mov
jnp
ss
fcompl
or
jnp
and
push
fs
and
jo
sub
jnp
push
sub
jns
mov
push
pop
xlat
xor
mov
pusha
and
pop
pop
cmp
cltd
and
jnp
cmp
aas
mov
cmp
ja
test
jnp
jb,pn
mov
xor
cmp
fisubl
aas
push
jnp
lea
mov
cmp
sti
push
pop
jnp
pop
jl
neg
mov
dec
cmpsb
xchg
mov
test
mov
push
or
mov
cli
mov
dec
push
pop
push
jnp
sahf
xor
inc
js
jne
call
int
pop
test
test
aas
aad
jns
push
push
mov
repnz
jae
and
gs
fcmovu
cli
negl
dec
mov
inc
jae
jmp
jne
int
jno
popf
aaa
pop
jnp
and
shlb
sbb
mov
outsl
outsl
xor
pop
lods
hlt
gs
int3
fs
outsb
sub
pop
pop
push
or
xchg
mov
testb
pop
sbb
fnstenv
jnp
ss
fiadds
add
sub
pop
jbe
jnp
out
inc
fwait
sti
popf
lods
jnp
jecxz
imull
push
xchg
mov
inc
lret
cld
in
imul
popf
mov
in
fcomps
loop
jnp
xchg
cld
jg
xchg
in
imul
mov
jle
int3
jecxz
xchg
mov
lock
stos
enter
in
jg
mov
xchg
mov
mov
mov
push
shlb
xchg
adc
ret
push
jb
insb
outsb
bound
or
aaa
fwait
ret
jnp
xor
test
cmp
mov
jnp
scas
fidivrl
pop
test
mov
cmc
dec
xchg
xchg
ljmp
ss
push
lods
and
jnp
lret
and
xchg
xchg
xchg
pop
add
sbbb
setle
jnp
repz
xchg
cmp
insl
dec
ss
dec
or
enter
add
sbbb
xor
push
sbb
adc
lock
imull
loopne
push
sbb
push
mov
lds
hlt
insl
nop
loope
outsb
jp
fidivrl
fcoml
pop
sub
xor
mov
adc
jb
cmp
jp
pop
mov
fidivrl
sti
mov
xchg
add
inc
mov
fidivrl
dec
movsl
pop
or
clc
cmc
mov
cmp
add
xchg
std
mov
push
addr16
jb
stos
dec
idivb
push
stc
pop
test
enter
jnp
and
subl
add
mov
jae
xor
cmp
sbb
js
repnz
stos
sbb
jnp
ss
sbb
adcl
jo
mov
jnp
popf
cmp
jno
sbb
lds
and
test
mov
mov
repz
ja
mov
scas
imul
inc
aaa
jp
cli
das
mov
lea
stos
or
hlt
clc
jae
mov
jnp
jns
or
mov
mov
mov
sbb
jmp
mov
xchg
xchg
int
mov
jnp
vmovd
aaa
xchg
lds
jmp
jp
stc
cmc
jnp
rcrl
lret
mov
pop
ss
xor
enter
cli
aaa
xchg
sbb
insl
or
test
mov
and
or
bound
dec
ja
loop
lods
out
mov
and
aaa
and
daa
fwait
aam
jnp
cmp
ja
sbb
mov
clc
xor
jnp
push
fildl
jns
adc
dec
mov
mov
and
or
adc
in
xchg
int3
sub
pop
mov
and
shll
das
adc
aad
mov
jge
jnp
fbld
idivb
lods
shr
insb
inc
stos
xchg
idiv
jnp
imul
js
mov
outsl
in
push
jnp
jo
int3
fdiv
idivl
cmp
and
jnp
pop
imul
add
pop
loope
out
push
xor
aam
mov
mov
sbb
pop
jbe
jecxz
jnp
inc
xchg
push
jnp
hlt
in
lods
fnstcw
mov
xor
fstl
push
into
mov
jle
jnp
std
lcall
jae
add
jnp
add
pop
cltd
scas
sbb
jnp
pop
mov
xchg
in
add
jnp
adc
lock
xor
gs
mov
mov
nop
imul
fimull
add
les
icebp
mov
inc
dec
fstpl
pushf
in
out
ss
jnp
jb
jae
repnz
jnp
mov
out
and
rcrl
mov
mov
jnp
xchg
push
lea
jnp
insl
cs
lret
pop
cwtl
jnp
and
xor
jnp
pop
mov
jbe
mov
shll
insl
insl
jnp
sbb
int3
stos
or
mov
add
and
enter
sub
in
jae
xor
insb
repz
out
icebp
mov
xor
cs
pop
jnp
jecxz
idiv
sti
sub
jnp
jl
mov
lock
imul
test
jg
jns
xor
jnp
sbb
in
push
outsl
cwtl
cmpsl
lea
fwait
jnp
ret
sbb
mov
movsb
mov
test
cwtl
add
arpl
cmp
mov
jp
xchg
ret
fsubl
sarl
mov
in
dec
mov
mov
xchg
mov
and
mov
add
insb
dec
adc
xchg
jae
scas
mov
jnp
sbb
movsb
push
jo
dec
jnp
jp
daa
inc
sbb
inc
test
jmp
cmc
outsl
aaa
add
mov
or
bound
xor
pop
xor
xor
push
jnp
ljmp
scas
call
je
push
jg
inc
jnp
test
pop
movd
stos
add
sahf
sub
jl
lret
dec
loopne
leave
dec
fdivs
jo
mov
jae
insl
mov
cmpl
ficompl
jnp
cmp
dec
mov
mov
lret
adc
aad
mov
mov
ss
add
call
clc
push
sti
lods
dec
push
idiv
clc
add
jecxz
jno
dec
mov
lds
sbb
add
pop
jnp
ja
dec
push
inc
jnp
movsb
cmc
xor
mov
out
mov
xchg
pop
test
mov
cld
jnp
in
imul
outsb
lods
mov
inc
jnp
inc
test
std
jnp
int
sub
pop
ret
out
cli
jae
movsl
outsl
into
jl
gs
cmp
aam
jnp
pop
lret
das
popf
xchg
xor
jnp
js
mov
mov
or
outsl
data16
inc
xchg
imul
mov
je
jnp
ljmp
jo
jnp
bound
mov
int
sbb
dec
sbbb
fistps
add
push
data16
mov
ja
pop
jbe
jnp
clc
sub
lret
imul
jb
push
dec
loop
adcl
insl
leave
leave
iret
jnp
fistpll
fadds
int3
scas
sahf
jnp
and
inc
adc
push
jne
testb
je
outsl
imul
add
dec
in
mov
mov
jge
sbb
inc
ja
in
iret
shl
jnp
repnz
orl
and
enter
insb
sbb
sub
jnp
movsl
jb
sti
pop
mov
jnp
xchg
ljmp
push
js
add
into
jnp
gs
inc
xor
lret
push
cmp
fsts
leave
outsl
lods
arpl
mov
cmpl
out
pop
call
lods
ja
mov
jno
dec
mov
rorl
into
xor
sbb
clc
jnp
ret
xchg
out
or
jnp
stc
lds
fisttpl
fnstsw
xor
and
cmpsl
insl
and
push
pushf
or
mov
imul
ficomps
push
add
jmp
jmp
sbb
movsl
cmpsb
stos
into
stos
and
outsl
xor
or
enter
lahf
or
xchg
adc
mov
sub
jnp
jle
out
insl
jbe
cmp
pop
or
mov
cs
test
jnp
outsb
xor
and
jae
mov
jg
jnp
mov
xor
dec
into
xchg
dec
sub
gs
sub
popf
aam
jnp
xchg
pop
ljmp
jb
xor
mov
lahf
inc
lock
jnp
test
cs
jae
test
fimuls
sar
sub
ljmp
imul
fnstsw
xor
jnp
xchg
add
mov
out
or
cmp
int
enter
xchg
cli
mov
out
sub
outsb
repz
fidivrs
sarb
in
sub
mov
clc
in
xchg
jnp
loope
in
cmp
mov
jnp
lods
scas
cmpsl
leave
aad
xchg
mov
repz
scas
mov
dec
jmp
mov
dec
loop
mov
dec
lea
clc
cmc
jnp
fisubrl
fldcw
cmp
push
or
xor
imul
mov
cmp
in
fnstsw
jnp
adc
in
push
jnp
jb
aam
stc
push
dec
jnp
sbb
cmp
mov
test
dec
jnp
movsb
test
jnp
cmpsl
pushf
sbb
inc
js
cmp
idivl
jnp
fidivl
lcall
jnp
sub
and
jae
sbb
js
cmp
das
jge
or
cmpsl
cli
addr16
sub
test
jae
mov
movsl
jg
mov
cmc
ds
and
jle
outsl
push
mov
test
adc
jns
or
in
jbe
push
dec
and
and
push
sbb
lahf
fldcw
or
scas
jnp
mov
aaa
cvttps2pi
cmp
sti
je
test
jns
movsl
cli
sub
xchg
mov
repz
movl
scas
jnp
push
aas
xchg
mov
stos
sub
clc
jnp
cmc
adc
or
insb
gs
outsl
pop
mov
jnp
xchg
cli
xchg
adc
mov
jnp
lcall
mov
pusha
scas
mov
cltd
nop
jnp
push
ja
xchg
int
inc
jnp
insl
call
stos
pop
push
cmp
mov
std
jnp
insl
cmpsl
mov
xchg
aaa
jecxz
dec
dec
je
xchg
pop
loop
jns
inc
mov
mov
mov
call
in
mov
mov
dec
jns
inc
jnp
xor
pusha
add
fstps
xor
sti
in
movsl
stos
daa
out
cmp
cld
xchg
fdivl
xor
adc
cmp
mov
ja
aam
xchg
popa
clc
enter
xor
ja
js
lret
inc
test
xor
mov
pop
inc
push
jnp
clc
repz
mov
xchg
inc
sbb
mov
add
or
adc
or
add
mov
and
dec
stos
es
add
jno
lea
pop
daa
dec
ss
mov
ja
pop
fnstsw
pop
adc
lods
mov
pusha
call
pop
movsl
dec
mov
mov
test
sarb
shll
mov
pop
inc
dec
or
test
das
movb
pop
int3
shll
push
fmuls
sub
xlat
movsl
ja
xor
inc
shl
mov
popf
jno
jle
sbb
imull
mov
mov
jae
inc
lret
xchg
mov
je
inc
jns
sub
insb
jnp
sti
sub
jnp
les
ds
jne
and
jnp
cmp
xor
add
insb
cld
mov
mov
jns
xorb
imull
add
jnp
push
fisttps
mov
pop
jnp
gs
out
aaa
jns
mov
lods
mov
and
and
lcall
cmp
xor
mov
mov
ds
cmp
fmull
add
jnp
push
fnsave
stos
jnp
repnz
jl
fcmovb
mov
cld
cmp
jnp
push
jmp
jnp
ss
pushf
adc
negl
xor
jbe
mov
stos
sbb
pop
jnp
add
jo
dec
sbb
call
fidivl
push
lods
or
inc
mov
pop
jnp
and
mov
fstpt
in
rcrl
dec
mov
je
sti
pop
nop
bnd
add
jb
shrl
cld
sbb
push
rdtsc
sbb
aam
cmp
mov
loop
or
mov
and
cmp
pop
jnp
sbb
lea
int
or
divl
enter
dec
add
cmpl
and
cs
insl
mov
aaa
clc
push
or
lods
ret
fcmovnb
dec
sub
mov
icebp
lock
mov
mov
mov
sbb
shlb
cmp
movsb
enter
aam
xor
push
imul
push
jns
pushf
jb
sbb
inc
popa
inc
jo
lcall
ja
jb
movsl
fidivrl
xchg
inc
adc
pop
xor
int
mov
int3
cmp
sbb
mov
ja
fbstp
lea
pusha
and
je
pushl
sti
push
das
jnp
test
aam
test
mov
xchg
xlat
adc
insl
xchg
pop
jnp
cli
pmulhuw
mov
cmpsl
mov
cld
mov
mov
js
mov
lock
xor
dec
imul
hlt
fidivl
repnz
and
fbstp
cld
idivb
outsb
out
popf
mov
jae
rorl
das
cli
test
cmp
jnp
shrb
call
sub
mov
sub
jb
jnp
mov
rcrl
mov
jno
sahf
loopnew
jg
cmp
lea
das
jnp
sti
les
jnp
mov
push
mov
cs
shlb
lret
cli
inc
pushf
adcl
lcall
cmpsb
jbe
push
jnp
ljmp
push
mov
or
jl
jae
inc
faddp
mov
pushf
mov
je
inc
lret
out
movsl
icebp
pop
int
jnp
pop
int
out
out
mov
jnp
mov
mov
inc
sbb
cmp
jae
ljmp
int
cmp
xchg
jnp
shll
dec
fcmovb
or
cmpsl
pusha
sub
ljmp
ss
adc
sbb
mov
fstpt
inc
push
and
jnp
and
xor
sti
fwait
cli
fs
inc
and
jnp
int3
int
pop
cs
mov
adc
xor
dec
loop
xchg
sbb
jnp
mov
fistps
sbb
adc
lea
lods
insl
in
mov
xor
cli
cld
jbe
in
jae
jnp
movl
mov
sbb
insl
mov
push
ja
and
xor
in
popa
jb
mov
jnp
daa
sbb
mov
mov
dec
xchg
rcrb
add
lods
into
jnp
mov
jge
jnp
int3
ret
ja
imul
mov
dec
test
push
jnp
push
ljmp
jae
pop
dec
cmpb
cmpsb
sbb
jg
jo
stc
inc
lods
lods
jnp
xchg
or
sbb
mov
jnp
das
movsl
in
xor
or
lcall
jb
jnp
fcomps
sub
jle
lea
mov
jnp
pop
popa
fistpl
test
mov
sti
cmp
pop
mov
and
sbb
pop
add
stc
je
or
jbe
cmc
jnp
arpl
mov
gs
jb
mov
insl
dec
outsb
jb
jnp
shll
lret
bound
jnp
jns
jp
lods
fst
jnp
cmp
jmp
ljmp
adc
outsl
test
push
sub
mov
add
jne
out
jnp
sub
fs
insl
xor
pop
jg
test
dec
fnstcw
scas
or
jnp
pop
push
in
jp
adc
testl
mov
mov
and
xor
aad
cmp
cld
hlt
imul
fwait
jg
sysenter
jae
cli
sti
in
cmpb
addr16
popa
xchg
push
sbb
mov
mov
ds
jg
inc
jmp
gs
pop
push
jae
lds
mov
jnp
dec
shlb
cmp
mov
roll
or
sub
test
jnp
aaa
cmp
push
jnp
les
adc
out
add
xchg
xor
imul
xor
sti
or
xchg
mov
jmp
inc
mov
jbe
mov
ss
jns
xor
in
sbb
pusha
or
jae
fiaddl
and
shlb
jnp
jne
inc
leave
mov
cmp
dec
cmp
jg
jecxz
repz
outsl
mov
ss
fidivrs
stos
mov
xor
pop
mov
outsl
push
in
xor
mov
addl
mov
jnp
lahf
cmp
push
ljmp
inc
jnp
ficoml
in
clc
repnz
jae
test
add
in
ljmp
lock
aaa
jl
pop
out
dec
testl
imulb
ja
or
jae
sub
mov
in
jnp
push
je
push
mov
mov
dec
movsl
mov
xor
scas
je
jb
sub
xor
data16
mov
xorl
ja
mov
shrl
repz
push
imul
adc
sub
div
cld
cmovp
inc
jnp
jge
jns
js
popf
jnp
or
xchg
jnp
lods
mov
into
jnp
sbb
repnz
pushl
jp
mov
mov
adc
stos
mov
fbld
sub
sti
ljmp
lret
xchg
or
jb
xor
xchg
jecxz
divb
pop
push
loope
add
xchg
mov
sbb
shll
outsl
xchg
pop
xor
scas
int3
jns
mov
insb
mov
out
in
xor
xchg
ds
mov
jnp
mov
xchg
lock
or
imull
dec
icebp
les
sbb
daa
sti
jnp
fcoml
subl
hlt
jnp
cmp
sub
decb
cmp
insl
cmp
scas
repnz
clc
lods
stos
addb
jge
jnp
movsl
cs
mov
and
xor
push
jne
and
fdivrs
ret
jb
cli
mov
popf
shll
pushf
and
in
xor
imul
dec
hlt
cld
ja
mov
outsl
jnp
pop
dec
insb
cmp
inc
mov
sbb
jnp
pop
popa
hlt
push
inc
or
mov
daa
jbe
lods
jp
sbb
jnp
mov
ss
dec
cwtl
xchg
rcll
mov
clc
dec
jns
pop
jo
jne
adc
pop
or
jnp
ljmp
adc
sub
loope
sarb
sub
push
jbe
shrl
cmpsl
std
jecxz
jae
scas
icebp
call
and
and
sub
dec
jne
or
push
sar
out
and
cmp
cmp
jnp
mov
jnp
lret
fdivrs
cmp
push
sub
sbb
sti
pusha
push
sbb
mov
jb
rol
mov
and
clc
jae
idivb
push
fildl
fstpl
pop
vmread
int
jae
xor
add
mov
or
int3
idivl
lea
jb
push
jnp
ja
push
pusha
mov
je
popa
and
mov
negl
jnp
adc
mov
or
shlb
push
push
mov
inc
bnd
stos
sub
je
jnp
pop
sahf
shll
ret
mov
popf
pop
or
xor
outsb
jg
jnp
cs
mull
les
xchg
mov
pop
jl
pushl
jnp
sub
clc
bound
pop
fimull
dec
neg
lret
cwtl
and
int
mov
fisubrl
out
or
jnp
pop
pop
adc
sub
aas
imul
add
pop
fldt
in
insl
xchg
test
in
xor
test
ss
pop
jnp
in
cmp
xchg
mov
add
sub
jnp
les
lret
sbb
push
jge
mov
test
jnp
jns
inc
mov
jnp
push
inc
mov
enter
sub
sbb
out
mov
or
sub
je
jnp
and
inc
xor
fdivp
lods
mov
lock
bnd
std
inc
sub
sub
push
push
int3
hlt
xlat
mov
mov
pop
cmp
test
pop
orb
ss
pop
jns
jnp
je
repnz
shrl
std
and
jne
adc
dec
cmc
lea
cltd
enter
daa
cmp
pop
jb
fiaddl
push
dec
jno
outsl
sub
ja
fistpl
jno
jnp
jae
add
mov
mov
cmp
sbb
jnp
jecxz
outsb
cs
jns
jnp
insl
pop
loop
div
ljmp
shlb
add
gs
xor
subl
jnp
xlat
jbe
cmp
add
cli
pop
fcmovb
mov
vmwrite
and
mov
sbb
pop
add
stc
or
sbb
fidivl
insl
es
mov
jo
jnp
shrb
mov
imul
movsl
xor
int
das
test
jle
outsl
mov
test
sahf
mov
pop
insb
cmp
fdivs
imul
push
mov
jnp
xchg
inc
inc
out
clc
jnp,pn
in
sti
out
xor
jnp
pop
js
fcmovne
in
mov
jecxz
jnp
outsb
repnz
jmp
fcmovb
lret
aad
and
aam
outsl
mov
add
jnp
sahf
ficomps
je
jnp
add
jbe
cmp
popf
xchg
jae
cli
mov
aas
jle
pop
dec
stc
push
jne
or
dec
xor
push
insl
ret
sti
lds
sbb
ljmp
fisubrl
jae
adc
pop
out
mov
jb
mov
xor
aad
ret
mov
ss
and
rep
xor
mov
ja
scas
cmpsl
xor
mov
xchg
pop
and
cmp
jnp
mov
mov
jnp
ficoml
add
int3
repnz
jnp
movsl
mov
ja
in
sub
roll
outsl
into
pop
adc
gs
sti
fisttps
xchg
outsb
xor
push
jle
xor
rcrl
jae
adc
xchg
pop
imulb
fisttps
push
jnp
cli
aaa
mov
out
stos
jnp
jecxz
pop
mov
ljmp
cmc
arpl
jp
lods
clc
dec
or
std
lds
sbb
jmp
jnp
xchg
dec
shrl
cmpsl
call
cmc
mov
jnp
outsb
and
jle
or
mov
push
lods
cwtl
adc
cmp
cmp
es
cld
fcom
fidivl
stos
into
push
mov
sbb
or
and
ret
mov
fnstsw
push
jo
outsb
inc
jp
out
mov
pop
xor
call
mov
pop
and
mov
aam
adc
and
mov
or
dec
in
xchg
inc
xor
call
cmpsl
das
repnz
sahf
scas
cmp
add
out
inc
pop
imul
hlt
out
cmp
test
je
pop
jnp
mov
fdivrl
or
das
cli
ss
aad
pop
mov
jnp
lret
inc
push
sti
mov
ja
xor
cmp
jnp
repnz
fisttpl
sbb
sub
dec
loop
test
sub
ss
ljmp
jno
int3
pop
push
sti
xor
jne
fs
cli
xor
ss
inc
cmpsl
adc
imul
pop
ja
sahf
sub
mov
in
in
not
jnp
add
daa
pop
stc
mov
movsl
pusha
stos
fstpt
notl
lods
sbb
pop
sbb
dec
stos
push
push
or
ds
xor
pop
hlt
imul
or
jp
js
nop
pop
movsl
cmp
jnp
sub
int
out
sub
xor
or
xchg
insl
mov
adc
popf
aad
jb
pop
je
jnp
orb
nop
sub
jnp
xor
into
mov
sbb
cmpsb
mov
sub
xor
lcall
jnp
pop
rcrb
lahf
insb
sbb
mov
movsl
push
jns
jle
pop
and
jo
js
xor
pusha
bnd
aaa
mov
int3
xchg
xchg
jnp
xor
int
sbbl
dec
or
xor
dec
jg
das
jnp
cmp
mov
test
push
jnp
test
rcrb
push
jnp
xor
sbb
lret
lea
or
clc
jl
mov
outsl
cmp
jnp
fwait
icebp
enter
adc
shrl
nop
sub
lahf
fidivrs
scas
jnp
add
imul
int
push
sbb
jnp
sbbl
scas
or
sbb
xorb
test
mov
xchg
mov
jb
jnp
jo
cmp
aas
ja
xchg
testb
jnp
cmp
mov
test
imul
pop
push
jnp
clc
add
pop
mov
scas
lret
shlb
jnp
in
lret
sbb
xor
outsl
xchg
es
icebp
sbb
jns
xor
fs
pop
mov
imul
dec
pop
test
je
xor
xor
mov
mov
stos
jnp
popf
push
sub
mov
mov
fnsave
cli
imul
andl
insl
out
push
outsl
repz
aas
sub
out
jnp
cmpsb
clc
sbb
stos
fdivr
aad
addr16
push
pusha
pop
repnz
pop
mov
push
ljmp
or
dec
lods
jb
jle
or
pusha
scas
sub
lea
data16
mov
jnp
imul
repnz
ljmp
in
cwtl
push
jnp
xor
adc
or
call
ds
out
stos
cld
or
scas
lret
sub
mov
inc
testl
aas
shll
jnp
pop
imul
xchg
dec
fstp
mov
xor
repnz
push
push
clc
lahf
test
sbb
push
dec
int3
jnp
cmp
jnp,pt
aaa
push
idivl
mov
je
adc
xor
jnp
pop
add
arpl
sub
imul
das
sub
dec
xor
jnp
mov
jns
jge
test
and
mov
imull
jb
mov
jnp
pop
shlb
enter
aam
lods
stc
rcrl
or
in
test
aam
jnp
cld
roll
jnp
aas
mov
sti
jnp
dec
adc
adc
xor
adc
lods
repnz
out
insl
cli
ret
mov
cmp
push
cmpsb
dec
ljmp
idivl
push
arpl
repnz
add
mov
sbb
fstps
sub
xor
sbbl
jae
mov
mov
scas
je
dec
jnp
and
in
sub
repnz
pop
rorb
icebp
cmp
pop
push
int
jnp
push
in
test
leave
jnp,pn
xchg
loope
lahf
mov
jnp
dec
icebp
sub
jnp
mov
add
jno
addl
ucomiss
sub
repz
jnp
xor
aas
das
clc
jp
jnp
dec
js
sub
cmp
jecxz
cmp
mov
int
in
in
addr16
or
add
jno
push
lcall
test
add
outsb
mov
jnp
stos
repz
cmp
jnp
aaa
cmc
mov
sar
jnp
std
js
xchg
add
test
xor
pusha
lahf
jo
addr16
repz
add
repnz
call
in
push
sub
jae
addr16
mov
sbb
outsl
lcall
pop
ja
jl
pop
jnp
in
aas
jae
jo
lods
cmpsl
loopne
add
mov
and
jae
inc
sub
add
inc
popf
mov
xor
ret
loop
lahf
dec
negl
jnp
in
mov
data16
jnp
jns
mov
jnp
je
xor
mov
shr
dec
jmp
sub
cmp
lds
mov
outsb
pop
cmp
movsb
mov
mov
cld
insl
jbe
mov
sub
or
jae
sub
cwtl
cli
or
int3
stos
jnp
mov
add
lods
test
movl
pop
sub
jmp
xchg
stc
ljmp
or
rdpmc
mov
adc
je
xchg
mov
call
cmp
mov
add
lcall
out
cmp
xchg
cs
fdivs
adc
xor
or
jnp
out
insl
clc
das
xor
imul
cld
rol
sub
hlt
jnp
movsb
cmc
addl
sub
ret
xor
inc
dec
mov
loop
sbbl
jne
xlat
cmc
gs
jnp
adc
es
stc
das
enter
jecxz
pop
jns
xchg
sub
adcl
outsl
mov
ss
or
mov
dec
cmp
xchg
pop
add
pop
je
jnp
push
idivb
loope
movsl
hlt
bnd
mov
cwtl
mov
loopne
fwait
mov
sbb
or
jge
jg
cltd
mov
jp
jnp
dec
loope
sahf
loopne
add
sub
xorl
arpl
fisubrs
shl
jnp
loop
insb
jne
stos
sbbb
dec
imul
fimull
jnp
lds
sbbb
mov
sti
repnz
push
in
jnp,pn
es
pop
inc
sub
cmp
hlt
les
jg
xchg
jnp
xorb
or
test
adc
jae
mull
dec
jnp
mov
fimull
loope
xor
icebp
inc
jno
push
movsl
cmp
dec
fidivrl
or
stc
aaa
clc
leave
aas
dec
lret
test
inc
std
jo
scas
cmp
insl
cmp
stc
mov
jnp
out
mov
mov
icebp
lret
add
cmp
lods
insb
in
or
imul
in
jle
jno
loope
stos
mov
and
jnp
add
jns
mov
or
cld
jb
lret
mov
in
cmp
adcl
jnp
push
shll
arpl
jae
xchg
scas
add
push
jae
pop
daa
lcall
jno
out
cld
jnp
lods
inc
push
mov
aad
out
cltd
or
arpl
cmp
jnp
cs
push
jmp
adc
mov
std
stos
mul
jbe
testb
into
xor
inc
dec
mov
icebp
or
jnp
sub
sub
mov
push
pop
outsb
xor
mov
ss
xchg
xchg
sar
jae
stc
push
cmp
inc
ss
push
cli
pop
or
inc
push
sub
jnp
ret
xor
xchg
aad
push
mov
out
out
sub
cli
js
scas
inc
xchg
xor
adc
shl
dec
inc
jmp
data16
xchg
jae
mov
in
jg
ret
sahf
jae
add
jb
pop
fimull
adc
cmp
and
in
je
outsl
rep
je
inc
jnp
cmp
push
xlat
push
stos
ret
lret
sahf
lds
jnp
inc
shll
mov
mov
mov
insl
jo
mov
movsb
push
sub
test
dec
repz
std
cmp
jmp
lcall
btr
addr16
cmp
mov
xor
outsl
sub
mov
int
mov
add
ret
jnp
out
and
outsb
cmp
push
jnp
loopne
lret
jnp
jecxz
mov
lock
pop
jnp
cmpsl
push
pop
lods
scas
and
xor
xor
arpl
mov
jecxz
mov
jno
test
shlb
or
mov
sub
lret
cmpsb
cli
pop
fdivs
jmp
adc
inc
ss
xor
jnp
mov
daa
add
sti
jnp
mov
scas
push
mov
adc
mov
mov
cmpb
cmp
or
jnp
sbb
jg
jnp
xchg
cmp
xchg
dec
daa
sub
shlb
outsb
xlat
test
sub
clc
in
mov
repz
outsl
mov
dec
in
fildll
sar
test
jnp
data16
sub
out
cs
pop
jae
insl
xor
mov
imul
dec
lods
sbb
dec
xor
repz
orl
pop
or
je
sti
in
xor
add
sbb
inc
into
sub
ja
pop
jnp
outsb
xor
jl
cs
fisubrl
pushw
lahf
mov
mov
mov
jae
sub
mov
dec
dec
mov
jnp
cmp
jne
push
popf
out
mov
lock
sbb
jnp
popa
js
xor
mov
and
add
aas
jl
xor
or
push
ja
repz
xchg
lods
jnp
pop
or
push
jnp
mov
jnp
lods
pop
aaa
jp
rorb
insb
and
adc
nop
mov
mov
ret
add
outsb
je
imul
outsl
lcall
pop
and
cmpsl
jnp
outsl
ficompl
jnp
hlt
add
dec
jnp
and
mov
jnp
in
jmp
mov
jnp
cmpsl
mov
jnp
cmp
mov
mov
dec
sub
jnp
sbb
jmp
add
idivl
mov
mov
popf
jnp
mov
xchg
movl
jge
xor
loop
ret
and
dec
cmp
xchg
xor
mov
pop
ja
mov
je
add
jnp
mov
mov
cmpsb
jne
fwait
xchg
jnp
test
or
sub
mov
in
aas
jnp
add
sub
sbb
xor
lock
dec
inc
mov
pop
push
lods
js
jo
xor
sub
add
dec
dec
inc
aad
fistl
jnp,pn
insl
pop
in
das
fwait
sahf
je
les
jns
fldt
pop
jmp
sub
je
xchg
push
add
lret
jnp
cli
dec
push
jnp
sub
push
lods
sbb
les
sbb
aas
fstpt
shlb
jnp
jns
cmpsb
das
flds
cmp
inc
mov
cmp
movsl
nop
fisubrs
jnp
mov
and
repnz
clc
call
fs
in
jg
scas
jns
xor
ret
sbb
mov
jo
jnp
pop
fwait
cmc
std
jne
ss
sti
fistl
mov
fstpl
jnp
jmp
jo
int3
test
int
jns
and
dec
jge
pop
fstpl
xor
and
cmc
loop
mov
jno
add
jns
inc
cmp
div
insl
and
lcall
cmc
cli
pop
fistps
sub
mov
xor
stos
hlt
jbe
push
test
into
mov
icebp
stc
dec
out
jnp
mov
daa
jnp
and
lret
sbbb
cmp
xchg
popa
ja
mov
jnp
add
inc
and
push
jge
fstpt
jo,pt
or
repnz
pop
sahf
jmp
jnp
pop
cmp
adc
pop
stos
jg
mov
lock
pop
mov
dec
cltd
pop
jnp
sub
popf
sbb
push
or
mov
outsl
insb
xchg
jnp
xchg
xchg
imul
sbb
scas
mov
mov
cmp
je
insb
pop
gs
mov
gs
stos
aam
push
ja
outsl
sbb
xchg
lret
jb
or
jnp
push
inc
outsb
xorb
jnp
ss
xlat
ljmp
mov
decl
aaa
jnp
in
mov
push
and
mov
xchg
int3
push
adc
pop
sbb
ja
mov
ja
clc
jns
idivl
inc
pop
lods
cs
jnp
lea
cmc
jnp
mov
cwtl
mov
jnp
leave
pop
nop
dec
mov
mov
cmp
pop
popf
jnp
or
insl
mov
outsb
xor
jg,pn
jno
int3
mov
push
cmpl
jge
hlt
adc
outsb
mov
ljmp
add
cmp
mov
clc
mov
test
in
sti
or
dec
inc
lea
dec
xor
imul
cld
jmp
inc
fs
cmpsl
jns
jo
or
sub
push
add
dec
sbb
cli
pop
lods
jae
dec
sti
stc
jns
jae
xchg
addr16
jnp
mov
les
setle
jnp
mov
jg
jnp
ljmp
jnp
jne
pop
js
and
jnp
xchg
clc
dec
xor
mov
lock
cmp
cmp
movsb
adc
mov
sub
in
sbb
inc
fistpll
push
fdivrl
cpuid
dec
into
imul
xchg
jnp
daa
ljmp
jb
arpl
cwtl
push
addr16
adcb
sub
add
mov
jae
or
pop
ss
jnp
jle
es
dec
jbe
insl
jne
cmp
inc
jns
jnp
mov
and
sbb
xchg
ret
inc
push
cmpsl
jnp
in
std
mov
and
and
push
jno
stc
push
les
lret
nop
shrl
sub
fs
aad
lret
je
jns
out
add
jnp
jl
mov
or
cmp
test
xchg
enter
jnp
push
push
pop
repnz
out
xchg
and
sbb
and
cmp
out
std
out
mov
push
pop
imul
jae
imul
mov
divl
pop
adc
popa
mov
sub
push
std
sub
adc
jnp
out
cli
dec
call
cmp
cld
ljmp
jge
idivw
mov
sbb
sti
inc
pop
xor
lret
push
out
sub
jg
int
mov
sbb
pop
dec
outsb
jne
mov
jnp
mov
dec
cmp
mov
jnp
pop
add
jecxz
mov
out
ja
or
jnp
fistl
or
stos
add
xor
repz
negl
aas
scas
iret
jo
push
dec
orl
int
xlat
shrb
outsl
mov
lea
xchg
lret
js
mov
mov
cli
mov
mov
aas
jbe
cs
mov
add
imul
aaa
and
stc
jns
mov
call
into
push
pop
xor
pop
xlat
mov
ja
int3
mov
adc
jae
lds
fiadds
ss
data16
cmp
push
jecxz
fisubrl
ret
push
subl
jns
pop
shlb
fldenv
aaa
cmp
or
sarl
push
lock
lds
xor
jae
pop
rorb
jmp
xor
loopne
mov
jnp
sub
push
inc
mov
loope
popa
lahf
in
pop
int3
je
jae
lret
push
mov
cmp
jmp
je
loop
or
cmpsl
jnp
movsb
sbb
cmp
mov
mov
jnp
or
adc
adc
lret
push
in
mov
scas
ret
mov
lea
negl
adc
jno
cmp
or
dec
push
mov
mov
and
mov
fmull
dec
outsl
jp
aas
call
mov
shrb
nop
jg
and
pop
sub
jnp
decl
add
addr16
xor
sub
jne
idivb
in
cli
inc
push
add
mov
xchg
inc
jnp
jecxz
mov
lock
jnp
imul
insl
jo
ja
fbstp
adc
sbb
fldt
mov
insb
cli
aas
dec
inc
mov
add
cmpl
out
sbb
dec
clc
xor
xchg
pop
jbe
xor
sbb
in
sti
std
cmp
sub
mov
enter
aaa
push
xor
clc
cli
loop
push
push
sub
enter
xchg
pop
add
sti
imul
outsl
aam
adc
ret
insb
or
jmp
sbb
stos
jnp
out
jo
xchg
leave
push
push
mov
xorb
cmp
fcomps
push
mov
xlat
enter
test
cmp
jnp
call
jne
jnp
cmp
divl
in
xchg
jnp
ficomps
mov
jnp
ret
sti
ret
pop
popf
mov
mov
or
cs
jnp
jg
add
sub
cmp
pop
pusha
xlat
test
push
pop
loop
push
adc
stos
dec
inc
xchg
jb
je
jnp
xchg
mov
mov
cmp
call
jecxz
cmp
xchg
xor
jno
cmp
imul
xchg
cltd
fildll
pushf
or
out
sti
nop
or
jnp,pn
lcall
jnp
xor
sub
push
clc
jnp
pop
divb
mov
lret
dec
lods
outsl
mov
cmp
jnp
inc
mov
and
enter
jnp
adc
sub
xor
jnp
push
mov
arpl
fs
and
xor
stos
xor
mov
dec
fldenv
fidivrl
arpl
aad
pop
pop
insl
jno
sarl
add
cli
mov
lock
std
sarl
bnd
cmp
mov
gs
sub
dec
xor
jnp
pop
pop
in
lcall
sbb
pop
lods
mov
sub
test
icebp
or
scas
mov
lea
xchg
into
stos
jge
xchg
sbb
mov
dec
addr16
not
scas
jnp
fcmovb
jb
popa
bound
pop
xor
nop
mov
cmp
push
idivb
insl
jg
add
insb
leave
repnz
mov
data16
int3
test
ja
pop
rorb
jnp
test
push
jnp
out
enter
jnp
sarl
mov
push
andl
dec
jnp
pop
clc
fucomi
add
sbb
pop
insl
scas
cs
lds
ja
clc
aad
push
in
xlat
imul
jge
lahf
mov
inc
inc
add
lcall
insb
mov
xor
sub
pop
fwait
dec
jl
test
jnp
cmp
cmp
jnp
jge
in
add
mov
pop
dec
ja
and
xchg
or
lds
sub
clc
jnp
nop
loop
lahf
mov
insl
in
and
xchg
call
xor
jnp
je
cs
stc
dec
movsb
jnp
sbb
fadds
lret
push
push
push
fwait
jnp
mov
aas
pop
jnp
xor
sahf
jecxz
sti
stc
cli
sub
push
ljmp
cs
or
ret
mov
jne
cmp
mov
xor
in
jl
sti
sub
stc
xlat
movb
cli
fildll
jnp
pop
shrb
jnp
push
mov
dec
sbb
clc
pop
cmc
stos
imul
xor
test
xor
sbb
pop
gs
or
movsl
xlat
jnp
in
fdivp
and
xor
jecxz
cmp
scas
lods
in
ficoml
arpl
je
jmp
rorl
mov
mov
inc
jo
popa
ja
insb
mov
stos
push
test
cmp
or
test
jne
inc
clc
stos
push
jo
jnp
mov
outsb
add
leave
inc
call
dec
inc
sbb
or
repnz
loopne
mov
jnp
adc
clc
mov
js
scas
xlat
hlt
icebp
push
jnp
movsl
pop
add
lods
jp
mov
call
shrl
mov
push
xchg
enter
aaa
repz
fwait
mov
daa
lock
dec
inc
add
mov
jle
push
lods
ja
ficomps
call
repz
or
movsb
sub
pmaxsw
cli
pop
push
xor
jnp
mov
ja
jnp
mov
gs
add
jnp
imul
dec
mov
xor
sbb
xor
pushf
stos
jnp
inc
jge
adc
les
sbb
mov
in
imull
imul
cli
outsb
pop
ror
popf
jnp
dec
in
fcmove
mov
adc
mov
cmp
xor
lret
out
popf
or
imul
imul
insl
pop
xchg
pop
clc
jl
jnp
or
rol
or
stos
xchg
data16
sub
jg
or
lods
outsb
jnp
or
inc
dec
pop
pusha
shlb
fwait
jnp
add
xor
fstpt
cli
add
rclb
les
xchg
lret
sbb
add
xor
cmpsl
jne
dec
neg
jns
jbe
lods
push
mov
mov
xor
cmp
inc
inc
popa
sbb
in
adc
jnp
arpl
add
inc
pop
lret
cmp
ljmp
cmp
jnp
sub
test
cwtl
xchg
aaa
mov
cmp
jnp
dec
lock
and
pop
fwait
repz
jnp,pn
mov
pushf
mov
scas
xor
outsl
adc
and
and
in
sbbb
insl
inc
icebp
repnz
repnz
fbstp
xor
sub
xor
jae
sti
in
xlat
aad
jnp
cmc
lods
sub
cmp
mov
xchg
xor
test
xor
nop
icebp
sub
dec
aad
jnp
int3
mov
jnp
add
mov
outsl
cmp
jnp
inc
cli
jp
xchg
jl
inc
jmp
js
scas
jae
dec
sar
imul
cwtl
int3
popf
inc
outsl
sub
lock
fwait
push
xor
out
jnp
call
mov
std
pop
lock
jae
clc
sahf
pop
mov
push
cmp
orl
daa
jb
fxtract
mov
jp
xor
insb
scas
sti
ret
lea
in
popf
test
jnp
mov
repz
xor
test
lret
push
and
jbe
jnp
cs
stos
xchg
mov
mov
stos
jns
imul
lods
and
sub
mov
pop
xchg
add
inc
sahf
jg
enter
addr16
mov
ret
aaa
mov
and
stos
push
inc
push
add
insl
dec
jnp
cmp
dec
dec
jnp
imul
ljmp
leave
out
hlt
xor
or
jp
out
rclb
adc
jnp
add
jno
outsb
add
jnp
les
push
sti
xchg
sub
add
ss
cmp
shll
lds
out
mov
sub
sarl
or
add
ret
lret
clc
mov
mov
jnp
les
js
lds
outsb
jnp
ja
or
mov
jnp
daa
sub
out
pop
fidivrl
fcoms
lods
mov
sbb
jae
je
jg
test
push
or
neg
jbe
pop
sbb
or
jle
incl
ja
jne
cmpsl
scas
sbb
pop
ss
jno
pop
jmp
lahf
sbb
xchg
outsb
push
jno
inc
cmp
jnp
aad
pop
roll
sarl
pop
std
fstps
pop
jnp
mov
icebp
adc
mov
xor
insl
rcrl
pushf
ds
sub
movsb
cs
push
jnp
adc
xor
mov
out
jne
or
divb
jnp
mov
jns
xchg
sub
notb
xchg
add
repnz
cmpb
fs
jno
sti
and
cli
in
rorl
daa
jnp
test
cmp
mov
jnp
gs
jmp
and
dec
pop
or
mov
mov
xor
push
aam
ret
mov
sub
cli
outsl
mov
inc
jle
inc
jnp
insl
xor
jnp
jecxz
xchg
sub
mov
pop
lahf
xor
fdivs
or
repnz
icebp
call
sbb
or
aas
outsl
inc
jb
pop
jnp
pop
push
and
dec
sarl
arpl
int3
mov
aam
jbe
push
sub
jnp
push
sbb
stos
mov
inc
inc
ljmp
jnp
in
sbb
out
je
fidivrl
xchg
lods
xchg
call
in
xor
adc
pop
xchg
dec
stc
jnp
out
in
mov
xchg
test
pop
dec
jnp
fcomps
sahf
mov
push
jae
popf
jae
xchg
xor
jae
pop
scas
adc
les
mov
popf
ss
jp
dec
pop
add
jnp
jae
pop
sbb
jnp,pn
jne
add
jnp
popf
ja
jno
cmpsb
out
scas
dec
sbb
das
jb
shr
outsb
cwtl
adc
lea
jmp
jle
jnp
sub
jl
mov
rcrb
outsl
and
paddusb
divb
loopne
std
out
movsb
in
jnp
hlt
sub
push
jecxz
jnp
jp
pop
mov
repnz
sub
sbb
sti
test
js
jo
adc
mov
add
push
out
mov
mov
fwait
jbe
test
xor
xor
push
mov
mov
sub
stc
hlt
icebp
and
jnp
std
xchg
cwtl
lock
jb
jnp
out
mov
pushf
daa
mov
cli
pop
inc
xor
push
pop
sahf
jmp
jnp
mov
sub
loope
inc
mov
ja
or
push
sbb
fadd
clc
xor
imul
int
or
popf
jnp
cmc
pusha
mov
dec
dec
outsb
jnp
jmp
loop
jnp
mov
xor
xlat
and
lea
popa
pop
shll
jnp
mov
pop
and
outsb
lds
sub
sub
jno
sub
cltd
xchg
aas
adc
jl
sahf
adc
inc
dec
mov
sub
dec
cmc
idiv
aad
xchg
sbb
or
outsl
xor
lret
mov
mov
pop
lea
insb
imulb
xor
jns
mov
test
inc
mov
cwtl
push
loope
xor
popa
mov
jnp
push
jno
stc
inc
dec
hlt
inc
xchg
scas
or
insb
lret
mov
jnp
fistpl
mov
popf
sbb
dec
jl
cmp
popa
outsb
gs
enter
jne
loop
sbb
cltd
xor
fwait
notb
ljmp
outsl
mov
jnp
adc
call
sbb
jns
mov
fdivrs
mov
sbb
sub
jge
jae
jae
stos
std
mov
out
or
ja
mov
imul
insl
repz
mov
daa
pop
rcrb
dec
or
dec
jae
push
add
jnp
cld
fs
out
jp
mov
call
psubb
and
cmpsl
dec
push
call
adc
pusha
push
jg
jae
and
jnp
scas
enter
push
cmp
jo
or
jnp
in
lods
xor
je
fidivrs
cmp
stos
jnp
push
das
mov
in
pop
mov
mov
push
test
lods
jnp
mov
cmpsb
dec
dec
ss
jnp
movsb
nop
repnz
subb
sbb
les
push
shll
mov
push
adc
push
xchg
fisubl
les
jnp
jmp
cmp
jnp
mov
xor
and
jbe
cmp
inc
insl
xorb
cs
daa
inc
imul
dec
sub
int3
jnp
xor
mov
popf
and
mov
in
mov
shrb
xchg
std
sbb
pop
add
add
dec
jnp
pushf
ss
fnstsw
test
push
ja
in
xchg
jnp
aam
shr
jp
or
mov
sbb
sahf
popa
fdivl
cltd
icebp
pop
subb
lret
jae
push
pmaddwd
daa
outsb
dec
pop
cwtl
hlt
les
mov
cmp
adc
inc
and
inc
dec
xchg
idivb
insl
jbe
add
fidivs
sbb
ja
sub
inc
aam
xchg
mov
testb
fwait
dec
inc
or
das
cmpsl
jne
imul
add
ja
push
xor
jnp
frstpm(287
mov
cmp
daa
pop
imul
movsb
jne
pop
pop
cmp
jo
jnp
popa
pop
movsl
sti
imul
insl
int3
test
cmp
and
inc
jns
ss
mov
inc
bound
pop
sahf
mov
jle
stos
cmp
or
cli
jnp
jecxz
mov
dec
cmp
jnp
or
dec
enter
stos
mov
sbb
orb
testb
sbb
dec
cmc
sbb
jno
stos
das
jnp
dec
loope
ret
sti
xorb
imul
gs
adc
js
es
sbb
cmpl
aaa
mov
jnp
inc
je
push
imul
mov
outsb
icebp
or
shrl
jae
fstpt
sbb
or
jnp
lods
or
loop
outsb
test
jnp
fdivrs
pop
lret
fs
jae
loope
pmuludq
clc
dec
movsl
xchg
sbb
jae
insb
jne
sbb
js
out
jmp
cmp
cld
and
inc
adc
cmp
sub
sub
cmp
and
cs
dec
sbb
push
jnp
shlb
mov
dec
dec
jg
dec
jno
das
sti
xor
dec
out
or
cmpsb
jg
mov
jg
sarb
cmp
and
pop
imul
or
or
fdiv
jnp
mov
mov
jnp
rcll
pop
sbb
jnp
jp
adc
sub
mov
mov
fidivrl
adc
out
pop
mov
mov
jle
scas
jnp
cli
sub
xchg
pop
dec
sahf
jnp
sub
push
outsl
lahf
icebp
jnp
pop
add
inc
lea
and
cmp
out
mov
push
lods
ret
imul
sub
jnp
popa
arpl
inc
les
sub
jnp
push
ss
into
sbb
sub
cmp
jb
imul
mov
mov
dec
mov
mov
stos
or
in
cltd
jno
scas
imul
cmp
sub
mov
lahf
hlt
mov
pop
adc
stos
or
pop
movsl
mov
dec
es
lret
std
sbb
jp
xor
ss
out
sti
je
jnp
gs
cmp
dec
std
mov
fsubrs
sbb
jp,pn
or
repnz
inc
jmp
mov
jnp
mov
arpl
adc
jnp
outsb
sti
xchg
cli
xor
clc
dec
xor
push
mov
pop
int
cs
dec
cltd
or
sbb
insb
cmpsb
ja
push
jb
stos
jle
lods
lods
cmp
adc
mov
dec
fadds
sub
jnp
cld
xchg
nop
push
add
ss
jnp
or
cmp
push
fldt
je
imul
cli
pusha
jae
and
dec
dec
or
mov
jnp
mov
in
xchg
mov
adc
pop
stos
or
mov
outsb
mov
dec
shrl
mov
cmc
mov
cld
mov
js
cmpsl
mov
push
int3
imul
in
push
jns
xor
add
push
mov
mov
in
mov
cmp
mov
icebp
pop
push
pop
gs
cmp
xor
in
mov
jp
add
out
jnp
xchg
lods
daa
ja
jno
cmp
hlt
rclb
cmpsl
jnp
xor
fistps
out
mov
subl
mov
testl
cmc
jae
sti
xor
sbb
loope
jbe
out
fwait
jnp
clc
or
cmp
pop
lods
stos
sub
movsl
in
insl
sub
pop
test
negl
cli
lock
stos
sub
mov
fwait
in
mov
int3
xchg
push
xchg
push
jmp
inc
jne
inc
lret
inc
imul
cmp
mov
jnp
das
call
xor
mov
aas
xor
jae
insl
mov
push
pop
cmp
mov
or
push
aas
push
and
inc
in
inc
ds
imul
xchg
jbe
dec
cmp
outsb
mov
loop
js
jg
imull
outsl
jmp
adc
pop
mov
mov
das
data16
add
jnp
jno
mov
jnp
jp
fistps
dec
jge
mov
push
ja
push
sti
jg
sarb
jne
aad
idivb
jnp
out
mov
mov
outsl
mov
sub
int3
int
movsl
mov
dec
inc
das
pop
sbb
xor
mov
sub
addr16
jo
cmc
lret
jb,pn
cmpsb
jnp
mov
mov
pushf
sbb
inc
and
outsl
mov
js
call
push
or
int3
push
xor
jnp
or
mov
sbb
stos
fwait
push
pop
movsb
jb
int3
outsl
mov
seto
insb
mov
ret
xchg
jnp
shll
mov
jp
icebp
imull
ja
dec
or
fisubl
hlt
je
jnp
dec
sbb
cmp
xchg
jnp
adc
mov
nop
or
jmp
lcall
das
cltd
pop
imul
lret
mov
jnp
out
repnz
cmp
loop
cli
sbb
ja
dec
xchg
stos
aas
aad
aam
sbb
jmp
jmp
push
imulb
loopne
cmpsb
xchg
lret
sub
jno
jnp
add
fistps
jns
sub
adc
int
fcomps
push
sbb
jl
in
cmp
test
js
push
or
xor
icebp
jnp
ljmp
testl
call
dec
and
in
sbb
push
repnz
sbb
fwait
das
into
xchg
popf
jnp
jecxz
pop
cmp
enter
cs
jno
push
xor
cwtl
pop
mov
xor
cmp
and
in
mov
js
insl
sbb
loopne
adc
call
stos
push
pop
imull
xor
mov
jmp
ds
or
jnp
test
rcr
jnp
mov
pushf
pop
xor
fdivrs
inc
jmp
imul
fwait
in
imul
leave
xchg
sub
sub
and
fisttpl
xchg
mov
xchg
subb
aam
jnp
sahf
and
addr16
jl
mov
lea
xlat
jne
add
sbb
cmpsb
aaa
dec
sbb
ds
inc
subl
scas
mov
jnp
les
fsubrs
push
lcall
jne
lds
jmp
or
jns
xor
ljmp
outsl
ds
sti
push
lock
cs
subl
jmp
mov
mov
fmuls
jnp
enter
inc
or
mul
pop
jnp
mov
pop
pop
ss
rcl
aas
jae
add
pop
mov
test
fwait
and
or
mov
pop
scas
sbb
mov
jne
dec
jnp
cmp
test
jnp
fistpl
jnp,pn
int
sub
xlat
icebp
xor
xchg
dec
sbb
add
lods
or
repz
popf
cmc
push
sub
clc
cmp
jnp
jl
or
scas
sub
mov
push
cltd
rcrl
jp
dec
cmp
out
dec
pop
mov
insl
imul
mov
xor
pop
xor
stos
jno
cs
inc
sub
or
dec
das
xor
cli
out
leave
or
aaa
andb
lret
inc
notl
aaa
jae
cmc
or
pop
jnp
loop
scas
pop
cmp
and
xchg
jae
pop
jnp
xor
aaa
push
jnp
adc
js
or
inc
fldl
int
cmp
test
dec
mov
pop
xor
pop
loope
divb
sti
out
mov
or
sbb
in
mov
pushf
cmp
xor
rol
call
jnp
xor
decl
dec
mov
rorb
jbe
popa
clc
jnp
sar
mov
incb
icebp
push
popa
insl
out
stos
jnp
out
lahf
xor
xor
jmp
hlt
sbb
cmpsb
inc
xor
fcomps
cli
push
mov
pop
hlt
aaa
lock
scas
daa
xor
xor
jnp
lret
jmp
in
jnp
pop
jbe
inc
aad
add
xchg
fs
clc
ret
jnp
jae
repz
adc
mov
cmp
add
jnp
gs
stos
dec
mov
orl
push
lods
jbe
ficoml
pop
imul
cmpsl
mov
les
in
imul
add
nop
mov
test
cwtl
jnp
or
inc
mov
dec
push
lods
mov
ret
hlt
aam
js
and
in
int
pop
adc
sbb
repz
xchg
lods
jo
je
xor
pop
nop
icebp
fisubrl
adc
lahf
lods
cmp
adc
in
or
repnz
xchg
mov
mov
loope
pop
jnp
jecxz
mov
notb
mov
mov
mov
xor
cmc
inc
stc
adc
mov
sub
mov
jae
push
rolb
in
push
pop
add
jp
hlt
imul
icebp
sub
js
xor
pop
xchg
repnz
stos
jnp
fidivs
add
lock
daa
xor
xor
imul
mov
mov
jae
pop
fcmovnb
jle
pop
lret
lods
and
imul
stos
shrl
jle
jns
outsl
das
in
xchg
jnp
xor
jno
xor
xchg
sub
ror
or
inc
dec
ss
add
jae
inc
rol
xor
sub
jmp
sbb
lahf
imul
add
imull
fwait
mov
out
jb
or
popa
fidivl
imul
jns
pop
jecxz
push
jnp
push
fmull
clc
or
xchg
enter
push
aaa
pop
jne
jns
call
mov
cmp
xor
sahf
mov
jnp
mov
out
jnp,pt
or
inc
jb
jnp
adc
outsb
jnp
cmpxchg
cmp
lods
jnp
int
add
in
sarb
jnp
pop
mov
push
test
das
pop
outsb
sub
lcall
sub
insl
xor
cmp
call
jnp
add
rcrb
clc
mov
subps
adc
jbe
sbb
cmp
or
lods
sbb
rclb
dec
inc
jnp
out
shll
xor
push
or
sbb
xchg
jnp
cmp
test
mov
sarl
in
into
mov
imul
xor
mov
hlt
jnp
pop
jmp
jns
xchg
mov
scas
fwait
mov
add
mov
pushf
jnp
jmp
lods
cwtl
jnp
ss
sahf
add
dec
imul
mov
imull
test
jns
imul
addb
ja
jne
sarb
push
cmp
sbb
jnp
inc
or
or
rclb
sbb
jae
jp
out
cld
ss
jl
fwait
jo
pop
mov
inc
call
lods
or
mov
jnp
jo
push
orl
push
fwait
sub
scas
cmp
lds
sub
in
test
push
loop
sahf
insl
loope
push
jnp
cmp
in
insb
jbe
jnp
mov
das
push
xchg
sub
dec
lret
mov
ret
in
test
lock
and
in
mov
push
in
push
gs
add
mov
faddl
sarb
bnd
jb
mov
jnp
add
push
std
jecxz
test
jnp
push
ljmp
lcall
ja
imul
jnp
mov
mov
sub
adc
mov
jnp
xor
mov
scas
jnp
xor
pop
aaa
mov
adc
movsl
sub
sbb
dec
mov
in
out
dec
popa
mov
add
jnp
mov
adc
popf
mov
dec
push
mov
jnp
lahf
mov
es
mov
insl
sub
mov
repz
sbb
or
jb
pusha
jnp
rol
xor
cmp
in
movsl
push
sub
cmp
and
jnp
jne
sbb
aas
stos
jnp,pn
lret
cmp
sbb
mov
dec
fdiv
jne
jno
or
push
lods
pop
aad
xor
adc
fmul
fnstsw
clc
scas
jns
pop
shr
sub
adc
fildl
out
iret
and
mov
jmp
enter
leave
pusha
xchg
jne
rorl
xor
sbb
and
mov
jnp
cmpsb
mov
leave
lock
in
jg
mov
cli
dec
cmp
lds
loop
pop
and
jp
or
and
jnp
cmc
xchg
int3
jle
fsubrl
imulb
jnp
sub
fisubrs
dec
ret
mov
or
jne
mov
movsb
js
pop
jo
pop
jnp
clc
hlt
scas
fsubrs
idivb
in
mov
sub
dec
lret
lahf
mov
ss
or
jnp
pop
inc
sarl
or
fmuls
jnp
sbb
neg
jnp
clc
and
stos
into
ss
cmpsl
jle
mov
jnp
fsubs
jnp
ret
jmp
int
pop
adc
add
cmp
mov
je
je
jnp,pn
and
stos
lods
aam
jnp
inc
push
pop
gs
insb
xchg
insl
call
push
outsl
cmc
jo
jp
and
cmp
aas
jnp
mov
insl
dec
cmp
jnp
mov
jnp
fldt
idivb
sahf
pop
lea
scas
jnp
mov
jae
mov
jnp
mov
jno
in
sbb
mov
insl
stc
add
or
notl
adc
mov
in
adc
xor
mov
jno
jbe
xor
push
cmc
xor
pop
dec
mov
movsl
out
cmp
mov
jns
jae
jnp
dec
cmpsl
adc
cmp
or
jae
jnp
xor
mov
jnp
imul
test
jnp
rol
jae
outsb
lret
sti
pop
sbb
and
push
jns
je
sub
mov
jae
aaa
repnz
mov
jb
inc
ret
pop
jnp
mov
xchg
add
lret
sub
and
divb
pop
jbe
lea
and
push
int
test
add
cs
das
ror
roll
loop
aad
scas
jne
cli
jnp
or
icebp
fisubrs
jnp
sbb
bound
lock
sub
cmc
cli
jnp
in
jecxz
out
adc
push
loope
lods
mov
mov
sbb
jle
fstpt
fdivrl
in
lock
jnp
cmp
aaa
das
xchg
add
loope
mov
leave
movsl
fwait
cmp
jnp
icebp
int3
sbb
popf
outsb
xor
xchg
mov
and
push
insl
jge
sahf
mov
lds
cltd
xor
and
inc
mov
sub
test
jns
inc
jnp
fwait
icebp
mov
jnp
cmpsb
daa
mov
adc
xchg
or
mov
cs
or
subl
cli
mov
dec
and
aas
cmp
dec
sarl
fidivs
mov
adc
push
clc
inc
cmp
cmp
add
popf
mov
push
popa
add
outsb
sub
test
jnp
ss
jle
push
cmp
pop
jp
jns
sub
jnp
xchg
push
int3
in
out
std
jnp
or
mov
aas
push
stos
adc
or
insl
repnz
scas
fdivrs
imul
mov
or
xchg
mov
jnp
xor
clc
xlat
xchg
mov
and
pop
and
aaa
sbb
dec
sbb
aad
pop
xor
sti
cwtl
imul
daa
and
xor
jnp
cli
sbb
insl
jnp
pop
es
mov
xchg
lcall
and
out
cmp
insl
cmpsl
xchg
mov
adc
stc
add
jno
call
orb
mov
js
pop
jae
outsl
movb
fs
mov
mov
jmp
enter
push
pop
jl
cmpsl
out
jb
in
jnp
jne
cli
int3
cmp
je
sub
test
xor
lods
and
jnp
movsb
and
mov
cmp
sbb
jnp
mov
andl
fcompl
repz
jbe
jnp
lret
pop
push
push
insl
sbb
cld
in
cmc
jae
scas
jge
cli
pop
adc
pop
mov
negl
lcall
mov
mov
ss
cwtl
in
cmp
cmp
or
out
stos
insl
movsb
mov
sub
cmp
jle
pop
aad
stc
pop
dec
mov
jnp
lods
jge
pop
inc
js
dec
sti
mov
mov
jmp
push
nop
jae,pn
dec
xrelease
out
cmp
add
insb
popf
cmp
dec
fdiv
ljmp
xor
lcall
stc
cli
ficoml
inc
imul
dec
daa
pop
xlat
jne
mov
pop
or
les
mov
outsl
lret
pop
dec
jnp
js
and
and
stos
sahf
sub
stc
jne
pushf
imul
cltd
lods
sub
mov
push
aad
mov
cmc
mov
inc
push
pop
cmp
jnp
adc
cmpsl
sbb
lods
testb
sub
xchg
outsb
inc
outsl
xor
inc
aas
dec
les
stos
shr
je
imul
adc
mov
xor
std
push
testl
pop
jbe
addl
imul
std
das
bswap
pop
insl
and
in
fildl
lahf
mov
enter
sub
cmp
scas
outsl
pop
icebp
outsb
or
xchg
fiaddl
jno
movsl
jnp
mov
xor
or
dec
insb
in
cs
nop
add
call
icebp
mov
sti
jge
jb
jnp
jp
leave
jne
cld
aas
jnp
mov
fwait
scas
jnp
mov
mov
adc
dec
mov
stos
mov
loopne
pop
sub
jbe
xor
dec
outsb
mov
lods
and
add
or
ja
sub
loopne
mov
cwtl
xor
jnp
jge
outsb
sbb
shll
imul
jnp
pushf
pusha
clc
and
mov
sub
mov
xchg
test
cli
push
jnp
std
loopne
bound
mov
mov
sbb
sbb
call
aad
pop
pusha
cmp
out
pop
sbb
jnp
cmpsl
mov
push
cmp
repnz
or
imul
xor
nop
pop
repz
hlt
add
shlb
push
stc
mov
outsl
push
sub
xor
in
pop
dec
popa
jnp
shrl
mov
sub
mov
jbe
addr16
je
mov
fildll
stos
pop
ss
or
mov
js
lods
jg
cmpsb
jnp
insb
and
jnp
pop
inc
divl
push
mov
jnp
xchg
test
jp
cli
adc
inc
outsl
mov
cwtl
jle
mov
jbe
and
jnp
mov
outsl
insl
ljmp
cmp
out
jnp
mov
and
imul
jns
int
insl
cmp
jo
xor
data16
push
sbb
imull
adc
iret
or
popf
cs
jnp
cmp
xor
fdivrl
jno
dec
je
cld
rcrb
data16
sbb
out
or
ss
inc
dec
int3
das
out
jb
into
icebp
cld
cmp
imul
fstpl
aaa
outsb
iret
jnp
mov
popf
dec
jl
jnp
loop
cmp
out
pop
sbb
adc
ja
outsb
out
ds
mov
pop
jae
imul
sub
xchg
ficomps
jns
or
jae
pop
aad
or
jno
fbld
sti
lahf
jne
inc
jnp
aaa
mov
sub
sbb
gs
mov
jnp
pop
and
push
sarl
jnp
jg
push
sbbl
sub
mov
aam
pop
ljmp
adc
mov
pushf
jnp
rorb
cwtl
sub
jnp
pop
cltd
fstpt
test
jne
lea
mov
cmp
jnp
call
cmp
jnp
push
scas
xlat
mov
popa
cmpsl
hlt
add
and
sbb
jp
jo
fldt
shrb
jmp
push
ljmp
loop
mov
add
dec
lods
xor
bound
push
mov
or
jbe
jnp
inc
ds
pusha
daa
sub
push
mulb
insb
popa
sub
jnp
or
fidivrs
xlat
xchg
lcall
lods
in
or
std
jae
sub
xchg
sbb
jnp
pop
inc
ss
call
xor
jmp
cmpsb
cmp
xor
jnp
fwait
in
cli
or
ss
jle
add
or
sbb
das
jne
enter
jnp
sbbb
dec
sub
mov
sbb
insb
lahf
jo
out
cli
sub
out
inc
fistpll
sbb
pop
pop
push
movsb
pop
in
sbb
sbb
outsl
mov
popa
fwait
xor
cmc
imul
arpl
adc
jne
add
sub
jnp
lods
ja
in
or
js
cmp
xchg
sbb
cmp
pop
imul
jnp
fidivrl
mov
pushf
dec
jp
lods
cmp
insb
test
mov
push
loope
add
jnp
mov
lock
or
jno
sbb
loop
call
mov
jne
mov
pushf
je
jnp
pop
in
push
mov
cmp
enter
jnp
scas
frstor
sbbl
cmp
std
int
sbb
or
push
test
je
js
sahf
xchg
inc
xchg
outsb
mov
adc
mov
xor
inc
sahf
arpl
xchg
out
sbb
pop
pushf
js
iret
fstps
mov
imul
jo
mov
shrl
shrl
push
jnp
and
jnp
repz
jnp
dec
cli
sbb
ja
repnz
js
push
xchg
aad
int
sub
and
cmp
imul
or
nop
mov
inc
fistpl
insb
out
jle
ja
mov
movsb
fwait
jnp
xor
aaa
cs
shrl
jns
repnz
and
rorl
outsb
or
xor
fdivp
mov
dec
ljmp
mov
xor
test
mov
xor
or
jnp
mulb
dec
and
jnp
addr16
pop
dec
cmp
sbb
pop
xchg
out
cmp
inc
scas
dec
cmp
jne
shlb
cmc
js
imul
aam
fnstenv
jnp
pop
or
mov
mov
in
xchg
xor
daa
jnp
cs
repz
push
sbb
mov
outsl
sbbb
shll
test
sub
fwait
mov
mov
arpl
jmp
cli
in
xor
jnp
rorl
pop
testb
ljmp
add
adc
or
arpl
insb
sbb
jmp
in
les
xor
test
insl
sti
pop
mov
mov
clc
mov
add
mov
sbb
and
fstpt
inc
dec
mov
je
jae
mov
push
jne
scas
sbb
movb
jecxz
loope
sbb
mov
sbb
cmp
or
jle
ss
sbb
imul
jbe
repnz
fcmovb
sub
xchg
jnp
xor
orb
std
adc
cmp
mov
test
dec
sarb
jnp
mov
in
jle
clc
imul
pop
lods
fisubrl
divl
cli
jnp
and
xchg
cmp
cmc
jnp
ficompl
jg
jp
insl
sbb
sub
fninit
mov
jnp
movsl
and
or
mov
xor
mov
addr16
sbb
mov
int3
cmpsl
in
inc
jnp
mov
sarb
insl
jno
add
sub
dec
adc
jge
push
jns
adc
movsl
mov
test
lods
sbbl
mov
dec
jnp
aam
cmpsl
and
jnp
int3
mov
notl
ja
pop
lock
fsubrl
addl
int
fisttpll
jnp
lods
aam
cmpsb
dec
inc
jne
jmp
mov
inc
or
js
cltd
jno
push
mov
fcmovu
mov
jnp
pop
xchg
xor
sti
mov
mov
shlb
xor
xchg
jnp
movsb
jae
fnsave
jnp
add
or
lahf
jnp
or
in
stos
cmp
aas
movsl
push
jae
shrb
je
mov
dec
push
lods
jnp
xor
int
outsb
or
clc
call
jnp
xor
das
inc
sbb
cmp
les
rorb
jo
push
xor
addr16
scas
in
sarb
pop
dec
cmpsl
repnz
mov
enter
dec
mov
aaa
push
ljmp
xor
mov
mov
or
sub
dec
lock
inc
daa
jnp
outsb
jne
pop
add
cmp
movsl
int
inc
xlat
dec
fistpll
mov
or
dec
test
mov
imul
sub
stos
ret
fwait
mov
shlb
popf
jnp
jp
mov
dec
dec
fwait
mov
shr
imul
out
xchg
lds
cmp
cmp
cmp
test
push
xor
mov
fldt
adc
fbstp
mov
imul
movsl
out
pop
jmp
adc
sbb
shll
out
test
arpl
stc
js
xchg
rolb
mov
jnp
stos
dec
rcl
xchg
cmp
mov
jno
ja
jnp
fcoms
mov
pop
cltd
fwait
scas
sarb
fiaddl
and
gs
outsl
je
sub
mov
mov
adc
jnp
in
imul
jnp
mov
and
pop
mov
idivb
mov
paddsb
jnp
je
xchg
ja
nop
or
ds
push
fs
jnp
stc
into
std
jle
je
cmp
sbbl
sbb
js
push
sahf
jnp
xchg
pop
jl
scas
out
push
jnp
push
dec
xor
push
sub
out
imul
lret
sub
xor
add
mov
and
sbb
mov
ljmp
xchg
movsb
mov
dec
xor
ss
int3
push
scas
cmp
aam
sub
lcall
sub
sub
jnp
aaa
fnstcw
add
out
pop
jnp
xor
test
jnp
or
xchg
int
bnd
popa
cli
adc
daa
cs
add
icebp
fiadds
lret
call
fs
push
jne
mov
sub
add
testl
sub
inc
aas
mov
hlt
push
fcompl
pop
ret
loop
and
xor
in
push
and
inc
repnz
adc
in
mov
outsl
testl
ds
jne
inc
mov
incl
test
fucom
or
cs
pop
popa
sbb
xorb
xor
cli
cld
psubusw
in
insl
or
jnp
sub
outsb
stos
push
sub
jnp
aaa
mull
mov
add
jnp
add
imul
aaa
out
sbb
mov
mov
aam
insb
or
cld
sbb
jb
xor
cmp
xchg
jae
adc
fsubs
sti
jnp
pop
cmp
pop
stos
sub
jmp
data16
addr16
stos
clc
fucomp
sahf
jae
inc
xor
notb
mov
xor
sbb
ljmp
jnp
cs
jmp
or
jnp
push
adc
xor
adc
jnp
pushf
ljmp
idivl
test
mov
icebp
cmc
outsl
pop
jnp
xchg
out
cli
xor
adc
jnp
adc
push
jnp
js
adc
cmp
ss
rorl
fwait
je
hlt
pushf
adc
dec
testl
jns
inc
jnp
sub
lods
xor
jbe
test
push
arpl
mov
mov
push
dec
pusha
push
sbb
sub
adc
or
call
xor
stos
push
pop
in
dec
cmp
cmp
sub
jo
mov
jnp
ljmp
cmp
xchg
add
pop
push
jae
aaa
stos
and
inc
jecxz
xchg
jnp
sub
jnp
int
jmp
xchg
cld
or
sbb
icebp
gs
jo
imul
add
sub
inc
cmp
cli
mov
cld
ret
sub
lds
js
ficoml
out
pop
xor
cmpsl
mov
dec
inc
jnp
in
dec
xchg
fdivrs
jnp
inc
xor
and
jp
jnp
out
xor
ss
xchg
mov
mull
and
aas
fcmovne
push
xchg
es
mov
jne
shrb
push
or
sub
insb
mov
cmp
cmpsb
push
outsb
jno
inc
cli
mov
sti
add
sub
mov
fisttpl
out
mov
jg
jne
sbb
pop
jnp
insl
sbb
cmp
sub
in
push
mov
mov
lea
scas
jnp
push
jl
out
cmp
lods
dec
sbbb
dec
lahf
lock
sub
fs
inc
dec
shl
in
movsl
clc
ret
call
xchg
stos
sbb
dec
or
mov
ja
mov
sub
mov
add
inc
xor
jnp
lods
and
imul
or
fidivrl
int3
decb
cmp
js
stos
sahf
sti
bound
add
jnp
mov
adc
stos
mov
outsl
aad
jmp
add
xchg
or
dec
pop
fsubr
int3
fcomps
insl
jle
clc
sbb
cmp
fcompl
decb
and
push
mov
movsl
jmp
xor
jae
lds
ret
pop
and
sahf
jnp
inc
hlt
in
jbe
pop
imul
mov
scas
push
cld
je
out
pushf
and
jmp
test
mov
xor
sbbl
repnz
icebp
int3
inc
mov
ja
stos
jbe
sbb
ret
shll
test
in
sub
fidivrs
out
jb
mov
insb
dec
movsb
jae
add
pop
jnp
fcmovnb
clc
mov
sbb
dec
pop
int
mov
insb
sub
push
adc
cmp
dec
lret
fnstcw
andb
in
aaa
clc
out
push
push
stos
imul
lods
sbb
mov
fists
jnp
js,pn
jae
xor
sbb
icebp
lods
pop
jne
cmp
xor
mov
daa
or
outsl
insl
mov
xor
sbb
ja
push
lret
movl
jne
sbb
push
std
lret
out
jnp
mov
sub
inc
test
cli
sub
dec
popf
insl
add
cs
jl
lret
int
or
addr16
cmpsb
push
jns
cli
jnp
outsb
cs
mov
test
xor
jnp
daa
outsb
into
xchg
sbb
dec
arpl
jae
push
sub
shr
jnp
cmp
pop
cmp
fidivl
jb
jnp
rorl
xor
lret
int3
ja
mov
addr16
rolb
mov
jo
xor
dec
es
fwait
adc
nop
mov
sub
jnp
or
or
mov
jno
inc
aaa
mov
push
sbb
push
mov
pop
mov
jb
jne
dec
jnp
pop
mov
mov
stos
cltd
sbb
mov
push
jnp
je
lods
add
sub
xchg
in
aaa
cmp
imul
fisubs
dec
jmp
cmp
jae
rcr
ds
test
dec
xchg
das
jnp
xchg
loopne
and
jnp
mov
mov
sbb
or
and
xchg
jnp
inc
mov
dec
arpl
sbb
mov
jns
or
test
xor
sahf
clc
imul
mov
insb
bswap
notb
cmp
cltd
fwait
jp
cli
jnp
repnz
test
cmp
jnp
cwtl
add
push
sub
fdiv
fcmovne
ja
lods
jae
sbb
out
mov
mov
imul
mov
lret
fcomip
dec
jle
sarl
dec
xor
outsl
jnp
xor
adc
stc
test
jnp
scas
xor
jnp
arpl
movsl
jnp
aam
scas
mov
je
icebp
arpl
mov
jae
sbb
shrl
cmp
cmpsb
in
cmp
mov
dec
jae
repnz
stos
inc
fwait
and
xchg
in
lret
sbb
or
or
mov
dec
xor
gs
jmp
xchg
adc
insl
addr16
mov
mov
add
nop
rol
insl
mov
jb
push
outsl
jo
test
outsb
stc
aaa
xchg
rorb
cmp
insb
scas
jnp
mov
mov
jnp
pop
push
iret
fidivl
jnp
cmp
fwait
dec
in
fisubrs
jnp
sbb
test
mov
daa
xchg
jae
out
and
push
xchg
mov
xor
jbe
ret
outsb
mov
in
ret
cmp
fwait
dec
mov
cmpsl
mov
xorb
sub
xor
sbb
dec
mov
jnp
sbb
in
sub
jnp
mov
jns
sbb
pop
xor
push
ret
mov
or
pop
shlb
or
pop
pop
lcall
push
sub
xor
mov
and
fimull
adc
dec
jne
jno
jnp
jne
out
sbb
dec
mov
int
pop
xchg
push
jnp
arpl
jnp
add
jb
jnp
jp
jo
orl
xchg
mov
mov
cmp
cmp
jae
lock
js
jmp
jb
das
jae
fcmovbe
mov
cmp
mov
xor
and
call
jno
xchg
cs
xor
movsb
and
clc
jl
pop
dec
push
lods
jg
imul
jnp
ljmp
xchg
mov
ret
repnz
jae
pop
dec
and
inc
xlat
jge
push
xchg
clc
jnp
mov
xchg
mov
cmc
jnp
mov
xchg
in
jnp
mov
xor
adc
jnp
push
pop
fs
pop
mov
jnp
mov
xor
xor
and
in
gs
cli
jnp
in
sub
hlt
pop
cmp
sbb
lods
dec
in
sbb
and
add
xorb
int3
xor
sbb
cmp
popa
sarl
call
pop
daa
data16
lods
pop
jnp
ficomps
int3
jnp
ds
out
je
hlt
imul
in
and
sbb
cmp
jmp
mov
fidivrl
mov
fwait
call
in
repnz
ja
into
xor
mov
mov
add
test
add
add
mov
sbb
push
fnstsw
push
and
or
jnp
rclb
xor
xor
jnp
popa
mov
mov
sbb
xor
xor
cli
pop
sub
pop
adc
push
dec
imul
in
shrl
add
mov
mov
inc
inc
mov
testl
pop
push
jnp
insl
xor
mov
inc
pop
in
sub
fisttpl
enter
jb
cmp
or
jecxz
xor
dec
inc
mov
ss
test
sbb
mov
pop
inc
adc
jo
imul
je
jns
xchg
xor
add
fistps
insb
xor
cmp
loopne
push
pushf
dec
pop
adc
fsincos
pop
pusha
fidivl
jnp
cmpsb
cmp
push
xor
xor
mov
ja
push
jnp
ds
or
and
cmp
pop
and
sub
cmp
fmull
and
shlb
nop
jnp
pusha
add
cmp
cld
scas
pop
jnp
xor
jmp
jbe
mov
dec
dec
or
xor
cmp
add
add
pop
test
jae
dec
test
jae
pop
negb
movsb
jbe
cmp
cli
xor
jnp
mov
jnp
cmc
inc
out
movsb
mov
add
loope
or
paddsb
or
lret
jno
mov
mov
clc
mov
loop
pop
jbe
mov
imull
flds
cld
mov
adc
test
sub
ja
notb
pusha
jnp
jb
sub
dec
fs
mov
lods
mov
pop
lods
pushf
cmp
jnp
cmpsl
shll
ja
mov
mov
loopne
jnp
add
arpl
pop
xchg
imul
jb
mulb
sub
jnp
mov
pusha
bnd
test
push
adc
flds
push
sti
lds
movsb
lret
push
insl
and
and
test
cmpsl
inc
or
in
imul
div
fwait
mov
or
std
mov
jnp
push
and
lods
and
push
rolb
sbb
jnp
mov
leave
sti
xchg
dec
imul
jne
cmpsl
outsl
jae
sahf
and
jnp
xor
and
xlat
ss
dec
mov
negl
mov
lea
xorl
jae
cmp
xchg
add
jb
jnp
test
loop
push
and
jnp
fidivs
push
push
push
aam
sbb
xor
sarb
fdivrs
jnp
sub
sub
cmp
sbb
icebp
imul
jmp
sti
add
sbb
ja
hlt
idivb
scas
pop
mov
jnp
clc
inc
sub
lods
pop
jge
popf
insl
aam
ss
jnp
adc
ds
jae
push
dec
and
sub
jnp
mov
ror
mov
fldz
ljmp
ss
in
push
jnp
scas
mov
ljmp
xchg
push
xor
jnp
push
dec
mov
and
ljmp
xor
push
or
sti
lret
rorb
push
mov
scas
cs
sub
push
cmp
sbb
or
mov
push
ret
sub
std
jmp
sbb
test
or
add
rcll
jae
shlb
popf
xchg
in
jnp
push
dec
xor
je
mov
sbb
jnp,pn
popa
outsb
sti
cli
xorb
jg
or
leave
insl
les
xor
mov
rcrb
xchg
cli
cmp
jb
lret
jnp
xor
dec
add
push
jo
daa
lahf
pop
pop
ret
ss
jnp
or
scas
add
jecxz
mov
imul
mov
ja
addr16
cmp
lahf
hlt
push
xor
and
or
dec
sub
cmp
mov
sub
mov
pop
cltd
jnp
mov
int3
sbb
lock
shll
pop
inc
jl
jmp
imul
adc
fmul
sub
and
mov
mov
out
mov
mov
jnp
loop
insl
sbb
jnp
popf
jmp
ljmp
cmp
aam
scas
xchg
dec
daa
sub
sub
sbb
jnp
adc
data16
jnp
mov
cmp
jnp
sub
mov
jnp
mov
in
negb
xor
or
mov
cmp
cmp
in
out
fsubr
repnz
jp
sbb
cltd
cmpsb
jnp
dec
in
add
adc
push
imul
movsl
sbb
jle
jmp
insl
jo
dec
dec
lods
es
scas
cmp
orb
ret
xchg
jnp
mov
xchg
jl
xor
not
inc
cmp
xor
adc
sub
fidivrl
xor
ret
dec
mov
leave
jae
test
jnp
jae
inc
jno
mov
das
pop
inc
mov
daa
adc
xchg
idiv
ljmp
jnp
push
mov
icebp
and
cmp
cmpsb
pop
cmp
sub
outsl
movsb
in
insl
sbb
leave
stos
cmc
sti
test
xor
lret
hlt
dec
sbb
loop
std
sbb
jnp
push
test
jp
push
insb
and
push
stos
dec
and
rorb
outsb
push
stc
and
jnp
inc
xor
xor
dec
dec
and
jnp
xchg
je
push
stos
xor
jbe
xorb
push
gs
sub
fidivrs
lods
inc
mov
fisttpll
jnp
xchg
idivl
adc
sbb
fdivrs
push
movsb
aas
inc
and
jae
mov
jnp
je
jg,pn
scas
sbb
adc
mov
inc
lods
repz
xchg
pushf
int
jg
mov
data16
nop
insl
sub
outsl
xor
jnp
cli
in
test
adc
push
jne
dec
mov
jnp
or
jnp
in
xor
aad
jne
cmpsb
jmp
cmp
stos
xchg
lods
jnp
lcall
mov
jp
inc
sub
pop
aaa
push
cmp
in
repnz
movsl
dec
jnp
xchg
into
xchg
jb
push
dec
pop
sbb
pop
ja
mov
mov
mov
std
lret
push
jnp
xor
or
cmpsb
daa
popa
jnp
or
movsl
xor
mov
add
sub
repnz
mov
or
icebp
outsb
je
pop
jnp
jmp
cmp
jnp
in
xchg
sbb
test
jnp
loopne
cs
nop
or
or
ds
in
lcall
adc
imul
jo
mov
jmp
aaa
jnp
dec
clc
je
out
stc
aam
incl
ficoml
xor
imul
clc
xor
stos
stos
loop
sbb
mov
jb
cmp
sub
sub
jnp
fwait
popf
int
insl
cmc
int3
jnp
je
sub
push
mov
rolb
and
daa
int
dec
cmp
cmpl
cli
xor
fcoml
jnp
stos
int3
clc
adc
jge
jnp
incb
sbb
cmp
or
out
test
jnp
xchg
fidivrl
stos
mov
jae
stc
cmp
mov
aaa
inc
jns
in
std
imul
cmp
cli
sub
cmp
push
adc
sbb
and
sti
jnp
insl
adc
sti
mov
cs
xchg
shll
mov
mov
jmp
sarl
or
sbb
pop
jmp
rorl
ja
adc
pop
cs
lcall
jnp
xchg
ror
loopne
inc
jnp
cli
xchg
pop
add
daa
jnp
add
jo
jl
sbb
jbe
xchg
mov
jnp
jp
sub
hlt
mov
test
lea
mov
xchg
mov
in
jnp
and
jae
mov
addr16
jmp
mov
imul
fisubl
push
lods
je
fistpll
es
jnp
ss
lahf
sbb
testl
shrl
sub
push
imull
push
xchg
xorl
jo
inc
cmp
jae
jg
iret
repz
gs
cmp
and
jb
sbb
mov
testb
jnp
subl
rclb
divb
xor
jmp
in
jl
lret
jne
in
js
scas
hlt
les
jnp
sub
aam
lods
sub
cs
mov
jle
stos
or
mov
xchg
jnp
jge
outsl
pop
cmp
int
jnp
daa
pushf
frstor
mov
ret
jnp
jb
jmp
jnp
jns
fsqrt
sahf
xor
gs
mov
mov
inc
es
jl
sub
out
mov
push
push
pop
jle
xlat
popf
pop
fwait
mov
sbb
ss
fisubrs
aam
jnp
jo
and
scas
dec
adc
call
add
pop
jnp
push
mov
test
jnp
ljmp
shrl
xlat
mov
fwait
icebp
test
outsb
xor
jmp
mov
test
push
jnp
jns
adc
das
xchg
jnp
cli
cmp
sahf
mov
and
lret
jbe
insb
sarb
adc
mov
mov
lret
cmp
clc
inc
lcall
adc
scas
aaa
add
je
jnp
pop
dec
xor
test
jecxz
lods
arpl
lock
es
inc
cwtl
jno
hlt
xor
mov
mov
ljmp
mov
js
pop
jl
loop
inc
jb
jnp
inc
imul
dec
movsl
jae
add
xchg
jl
jecxz
jle
test
jnp
mov
sbb
jnp
mov
test
mov
mov
lea
sbb
outsl
movsl
sbb
jl
or
lret
jnp
inc
stos
sbb
mov
sbb
pop
pop
mov
cmc
daa
jb
xor
xor
aad
stc
sub
adc
jbe
jge
dec
jnp
mov
lock
jmp
mov
mov
call
pop
enter
jmp
in
idivl
out
jae
ss
mov
cmp
rol
mov
mov
cmpsb
or
test
in
shrb
cmc
jmp
mov
mull
or
test
jae
cmp
jnp
in
pop
sbb
sub
jecxz
mov
aaa
sub
pop
outsl
add
mov
hlt
fidivl
push
sub
sub
fsubl
jnp
lds
add
or
dec
testl
call
lret
mov
add
jae
xchg
jbe
sbb
scas
mov
enter
or
push
jae
adc
mov
arpl
mov
jnp
jns
stos
loopne
pop
jnp
repz
and
or
dec
dec
jbe
out
mov
nop
outsl
data16
jp
cwtl
xor
scas
sbb
sbb
sub
popf
pop
jp
cmp
ss
sub
test
xchg
ret
jnp
lcall
or
add
cmp
pop
pop
pusha
imul
push
push
test
cld
jnp
outsl
xor
cwtl
pop
xor
dec
push
test
xchg
xor
imul
shlb
mov
jmp
sbb
ljmp
pop
imul
mov
popa
jle
je
jnp
cli
lcall
xor
adc
jnp
xor
cmp
jbe
subb
nop
mov
aad
je
add
push
insl
xlat
cmpsl
dec
or
push
pop
mov
jnp
push
call
imul
mov
push
jb
xor
jg
mov
outsb
inc
cmp
cmp
out
test
das
scas
mov
je
push
mov
xor
adc
or
test
xchg
xor
mov
inc
inc
xor
or
insb
cmp
mov
clc
mov
inc
pop
jns
sub
lock
dec
push
lock
jnp
dec
xchg
xchg
mov
lcall
sbb
or
dec
insl
bnd
mov
cli
sbb
into
adc
clc
dec
sub
ss
cmp
js
ja
cmpl
inc
mov
mov
arpl
lods
and
int3
ret
jnp
mov
pop
jne
lock
jnp
mov
lds
loopne
or
xchg
pop
jnp
mov
sti
js
stc
aam
mov
ss
mov
js
jo
cmp
fstl
jnp
inc
fcompl
repnz
jnp
cmpsl
add
xor
es
xor
loop
jnp
fidivrs
push
int3
mov
leave
jnp
fstps
mov
pop
lods
jnp
push
mov
mov
cli
jle
jne
mov
xchg
mov
out
jnp
xor
adc
or
mov
jb
inc
mov
clc
test
inc
jp
jnp
imul
sub
cmpsl
das
jae
or
stos
daa
sub
sti
lcall
xchg
push
push
es
int3
pop
inc
cmp
jnp
or
icebp
jnp
dec
sbb
cmpb
ljmp
mov
cmc
jnp
sbb
mov
test
or
lea
in
ret
jp
jnp
push
out
aas
xlat
mov
ljmp
jnp
cmp
or
push
cmpsb
cmpl
lock
jl
fisubrl
in
jp
jnp
mov
ss
pop
mov
sahf
call
js
neg
jnp
cli
jno
out
mov
in
push
inc
ds
test
xor
inc
jns
fidivl
lret
push
cli
shll
rolb
adc
cmp
push
jae
ss
pop
stos
sti
pop
icebp
fisubrl
sub
cs
push
divb
sub
add
adc
mov
xor
adc
cmp
xor
imul
ljmp
shrl
push
or
dec
and
in
dec
imul
push
cmpsb
cmp
outsb
cmp
pop
lret
in
and
push
repnz
pop
or
in
mov
lock
cld
enter
mov
mov
insb
pop
jae
mov
jo
dec
mov
jnp
clc
es
jnp
jmp
outsb
xchg
and
jnp
scas
fcmovnb
or
negl
inc
mov
dec
jp
push
dec
inc
jnp
dec
or
xacquire
lods
mov
xlat
pop
ljmp
cmp
stos
lods
xchg
push
add
lock
pusha
jne
sub
or
jne
lods
jle
jbe
ret
mov
adc
imul
or
push
mov
inc
in
jmp
popa
cmp
fisubl
cmc
pop
and
sub
hlt
cld
dec
cmp
jnp
push
push
xor
aam
xor
cmp
xor
rol
jnp
mov
and
mov
jnp
movsb
ljmp
cmp
in
inc
push
mov
and
push
jnp
mov
or
cli
out
add
mov
lock
cmp
pop
enter
sub
lahf
jnp
or
cli
outsl
mov
push
imul
push
jne
imul
and
dec
xchg
outsl
sbb
xchg
jmp
insl
clc
lock
cmp
jnp
ja
int
xchg
mov
pop
into
add
xor
add
ret
sbb
stc
fisubrs
ljmp
ja
loope
popa
jnp
pop
outsb
in
push
lret
jnp
ret
jo
int3
add
hlt
jnp
aas
mov
cmp
sbb
push
jnp
xor
mov
jnp
es
cs
sbb
xchg
xor
xchg
jg
jmp
js
insl
jnp
sub
mov
pop
jbe
stc
out
ret
in
cltd
and
lock
scas
jno
mov
xor
and
sbb
xlat
fisttps
sbb
cmp
sti
fs
lret
cs
inc
in
pop
lods
cmp
aad
fidivrl
fldt
jnp
jo
in
mov
mov
insb
mov
sarl
jns
fimull
mov
lahf
jb
fdivs
cmpsl
jne
test
outsb
jp
cli
push
push
push
test
jnp
lret
or
mov
cmp
xor
jae
jecxz
pushf
aam
mov
cltd
fsubl
xchg
mov
dec
xor
adc
jnp
jmp
mov
dec
pusha
sub
repz
mov
jnp
and
ss
jne
or
shlb
inc
pop
pop
lret
jae
xchg
xor
dec
mov
mov
jo
mov
ljmp
mov
jnp
dec
mov
or
in
mov
add
jnp
addl
jnp
adc
test
or
pop
xor
pop
and
sub
inc
dec
fisttpl
aad
test
jb
adc
dec
and
jb
cmp
mov
jnp
insb
or
stos
fwait
ret
sub
shr
dec
jae
jp
lret
cmpb
mov
je
inc
jnp
adc
inc
mov
enter
jmp
hlt
sub
xor
cmp
xor
inc
cli
repz
repnz
sub
aam
jnp
mov
xchg
jnp
xor
and
stc
xor
xor
scas
cld
bound
mov
cmpsb
out
mov
cli
mov
jnp
push
jmp
mov
outsb
out
in
ficoml
jae,pt
adc
sub
movsb
jnp
imul
dec
add
cli
cmp
adc
ja
in
vpcmpeqb
jnp
xchg
jb
es
jl
jnp
movsb
mov
dec
in
fucompp
clc
adc
mov
repnz
sub
push
testb
jnp
fucomp
fbld
mov
jnp
ss
sub
jnp
ficomps
push
xchg
jnp
aaa
add
lcall
or
push
int
mov
insb
into
sbb
sub
lods
sbb
data16
jnp
jl
cmp
or
jnp
pop
ss
sub
std
aad
outsl
and
lods
jns
out
jnp
push
xor
lret
jmp
push
into
mov
xchg
sbb
js
stos
movl
fidivl
pop
aaa
xchg
mov
fimuls
movsl
mov
xchg
cmp
roll
mov
xlat
jbe
sbb
aam
fucomip
lcall
cwtl
add
jnp
mov
fs
xchg
jne
xor
jns
cli
movsl
ds
ljmp
jae
jo
lock
insb
loopne
out
xor
jnp
inc
mov
imul
jg
lcall
xchg
pop
call
comiss
cmp
lret
and
jmp
jae
arpl
cltd
negl
push
lods
jnp
insl
movsb
cmpsl
adc
xchg
sub
mov
mov
push
jnp
pop
es
in
inc
cs
loop
push
sbb
xchg
cmp
jge
adc
jnp
daa
mov
mov
shl
idivb
js
jnp
bnd
sarl
mov
in
lods
jp
fidivrl
xor
mov
mov
xchg
jg
ret
dec
mov
imul
mov
sahf
addr16
dec
arpl
jle
jnp
adc
mov
fs
push
insl
mov
pushf
sar
out
jp
jnp
ja
jg
in
push
jnp
lahf
icebp
test
inc
out
jle
cs
jnp
adc
or
shl
dec
andb
add
mov
fiaddl
shr
jnp
xor
fmull
cmp
mov
int3
push
das
fstcw
dec
std
jnp
sbb
popf
pop
push
out
shr
je
mov
sbb
inc
movzwl
out
into
sub
lock
xor
adc
adc
imul
sti
in
idiv
int
dec
arpl
pop
imul
fimull
fwait
sub
scas
inc
xor
hlt
jle
add
add
jnp
je
ficompl
mulb
pusha
rcrb
insl
inc
mov
jnp
mov
mov
jnp
dec
mov
pop
cmp
fsts
sbb
jnp
jo
sti
jae
xor
sub
xor
sub
push
dec
jns
cs
and
pop
xchg
jnp
push
sub
mov
mov
xchg
jnp
sub
jnp
aaa
mov
dec
aad
roll
xlat
jecxz
xchg
leave
outsb
add
adc
jnp
ss
imul
mov
jg
jnp
cmp
jp
add
inc
dec
add
or
ljmp
lods
adc
insb
xorl
hlt
popw
adc
jnp
xor
fdivs
push
sub
cld
mov
jb
jmp
xchg
stc
mov
in
loope
sub
das
add
add
bswap
and
outsl
fcomps
jmp
cmp
sub
jnp
test
adc
sbb
xchg
jnp
bound
idivb
mov
cs
imul
test
push
pop
out
jb
and
fdivs
add
daa
sub
sbb
int
xchg
call
jae
test
ljmp
push
jb
jp
push
adc
inc
cwtl
into
data16
frstpm(287
mov
jnp
xor
xchg
call
sub
daa
test
push
sahf
inc
aas
mov
int
sahf
jnp
fstp
insb
dec
enter
cmp
imul
dec
out
sbb
outsl
dec
xchg
add
cmp
outsb
icebp
dec
stos
mulb
movsb
lahf
insb
push
sub
jnp
sub
jae
jbe
add
pop
pop
mov
and
outsb
cmp
jnp
adc
add
xor
nop
jnp
jmp
outsb
mov
mov
aam
insl
mov
int
aaa
out
ficoms
fistpll
pop
lods
movsl
pop
negl
jnp
clc
and
lods
out
or
fnsave
jne
jnp
mov
outsb
xor
jnp
jmp
out
dec
daa
jnp
cmpsl
xor
cs
aam
mov
outsl
ja
add
mov
mov
popa
jnp
xor
jnp
repnz
sub
or
or
jno
or
cli
mov
dec
mov
dec
scas
lret
aaa
clc
jnp
dec
pop
lods
cmp
or
hlt
jne
sub
mov
ljmp
leave
in
mov
adc
fcomps
in
clc
lret
jle
neg
jnp
pop
cmp
ret
cwtl
popa
aas
dec
imul
and
dec
ja
sti
jnp
jbe
int3
movsb
mov
push
jnp
ja
sbb
pop
sbb
xor
clc
fiaddl
pop
stc
mov
and
xchg
in
push
cmpsb
ss
jmp
out
pop
pop
xchg
jnp
mov
adc
jnp
gs
scas
sarb
xchg
je
lods
xchg
xor
sbb
mov
cmp
pop
mov
out
or
fwait
dec
insl
cli
lret
xor
ss
arpl
pop
xchg
sbb
int3
jno
lret
xor
pop
add
or
mov
jmp
outsl
mov
add
jnp
rclb
cmc
inc
fwait
stc
dec
xchg
mov
jno
std
or
int
cmp
add
mov
lods
jnp
cmc
out
mov
mov
repz
sub
scas
pop
or
jno
jle
cmp
or
fs
ja
loopne
jnp
add
xor
mov
sub
xchg
pushf
jb
dec
lods
addb
je
pop
pop
dec
movb
xorl
mov
outsl
mov
inc
lock
jnp
jp
and
inc
jnp
stos
fwait
es
outsb
js
jnp
icebp
imul
imul
jmp
lods
cmp
cli
jo
inc
aaa
jecxz
jnp
xor
imul
lret
movsb
es
mov
xor
pop
and
jnp
test
sbb
mov
lods
jle
cmp
and
inc
std
ljmp
inc
js
add
cmpsl
jnp
jle
fidivrs
subb
mov
xchg
popf
clc
and
jnp
stos
fimull
mov
jmp
jmp
xor
dec
mov
or
adc
mov
sbb
lea
mov
stos
inc
pushf
pop
jnp
mov
jecxz
aaa
mov
push
mov
in
lret
pop
and
xor
add
repz
je
jnp
clc
stos
jle
push
jb
mov
or
int3
add
cmp
jnp
mov
enter
xchg
scas
cmp
mov
stos
bnd
outsb
sbb
jl
testb
jb
and
xor
xchg
stos
lods
hlt
jae
xor
cmp
pop
ljmp
es
dec
fimuls
pcmpeqw
icebp
nop
add
sahf
add
cmpl
and
xor
pop
xchg
cli
inc
push
mov
sbb
and
dec
jns
mov
ljmp
sti
push
adc
jnp
jbe
pop
je
pop
or
add
and
shrl
push
mov
cmc
sbb
cpuid
hlt
out
test
add
jne
inc
lret
adc
sub
jmp
push
jnp
jecxz
scas
and
rorb
adc
mov
adc
call
data16
pop
jae
mov
sub
inc
mov
xchg
loope
jg
shlb
sub
leave
jnp
mov
jnp
shlb
mov
xor
jnp
fidivrl
or
stos
cld
cmp
cmc
rcr
mov
jnp
xchg
cli
mov
hlt
mov
mov
mov
jnp
xchg
add
lret
jne
mov
stos
or
repz
loope
jne
outsl
mov
cmp
xlat
sub
fwait
lret
popa
push
leave
mov
imul
cs
or
aas
mov
scas
imul
sahf
sti
xor
jbe
mov
pop
inc
mov
jmp
imul
jg
call
jnp
cli
cmpsl
fdivrs
pushl
insb
xor
testl
into
fiaddl
fistpl
pop
xchg
aas
xor
notl
in
ljmp
sti
lret
lahf
jae
and
leave
scas
ss
inc
outsb
jmp
xchg
sub
jns
mov
jo
pop
rorb
out
xchg
imul
das
jle
jnp
lods
in
jl
jbe
testl
adc
jnp
gs
ss
insb
stos
mov
jg
mov
mov
or
cmp
js
or
js
jnp
and
sub
jo
xor
and
into
mov
cmpb
out
inc
pop
insl
jbe
icebp
imul
cmp
mov
testb
in
mov
pop
mov
and
sub
jmp
outsb
sub
jge
sbb
mov
insb
jmp
mov
cmp
loope
cld
jns
mov
mov
call
xor
lret
xorl
cld
jnp
cltd
hlt
fistpl
jnp
je
insb
mov
test
lret
hlt
in
jg
jmp
mov
test
push
jnp
lret
jecxz
popf
mov
into
rcrb
and
or
jg,pn
jnp
adc
std
out
add
lods
sti
cs
pop
mov
jnp
add
push
addr16
jnp
repz
mov
or
in
inc
insl
jnp
cmp
cmc
sbb
mov
or
xchg
pop
fsubr
nop
dec
jnp
cmp
sub
cltd
sbb
mov
push
psubsb
cmp
add
xchg
out
jnp
mov
or
adc
aas
and
fdivp
cmpl
repz
mov
pop
push
mov
sti
and
mov
jnp
jno
repnz
cli
push
pop
jnp
xor
fwait
jnp
pop
cmp
or
pop
jmp
xor
sti
cmp
pop
stos
pusha
and
insb
sbb
roll
xor
jl
push
and
arpl
ss
cmp
mov
sbb
aaa
xor
or
xchg
jg
add
sbb
jp
jnp
sbb
push
imul
cltd
lret
lcall
outsb
imul
lods
jbe
pop
mov
mov
jns
ja
das
sbb
je
jg
int3
inc
jbe
add
jnp
imul
mov
fisubl
aad
xor
sbb
data16
pop
je
mov
push
mov
popf
jnp
mov
xchg
lret
dec
out
insl
or
mov
mov
sti
vcvttsd2si
sbb
mov
mov
sti
jnp
ja
inc
aas
gs
jae
idivl
outsl
cli
jae
mov
cmp
xchg
scas
xor
movsb
xchg
xor
loop
imul
or
pop
out
loope
outsl
pop
stos
mov
movsb
sub
movsl
mov
inc
mov
sahf
jnp
aaa
scas
jns
cs
inc
push
add
pop
jge
mov
add
ljmp
fidivrl
pop
jnp
stos
mov
repnz
jns
mov
ret
cmp
pop
dec
jnp
idivl
sub
dec
cs
jne
stos
jo
inc
jnp,pt
or
mov
imulb
mov
jno
dec
ja
dec
jnp
sarb
mov
cmpl
lods
or
test
out
jns
xor
call
push
call
imul
xor
outsl
pop
int3
pop
add
ljmp
jbe
dec
dec
enter
stos
jae
xor
arpl
in
outsl
pop
cmpl
and
popa
pop
aad
std
imul
cmpl
mov
xor
xor
jnp
jmp
xchg
sbb
add
hlt
push
clc
sub
sub
shll
add
push
pop
mov
test
fmuls
xor
loop
and
jp
pop
dec
jne
std
sub
adc
adc
cli
lds
movsl
adc
pop
jns
xor
mov
aaa
mov
pop
pop
js
sub
mov
adc
xlat
into
mov
outsl
mov
fimuls
mov
jae
cld
jns
rorb
ljmp
cmp
roll
jnp
jns
je
add
in
jnp
lds
jbe
scas
cmpsl
fisubrl
clc
mov
stos
jb
xchg
icebp
test
xor
sub
data16
cmp
loope
cmp
xchg
jae
fs
rclb
cmp
mov
cmp
cltd
cmpsl
adc
out
shll
jmp
xor
lahf
jae
lods
jp
and
dec
lea
jnp
repz
lods
pushf
pop
ret
mov
sbb
rolb
aaa
jnp
out
rorb
dec
idivb
adc
gs
jge
fidivs
jnp
or
sub
sbb
sbb
idivl
xchg
fstpt
mov
fsts
in
jmp
cmp
cs
inc
lcall
add
iret
jnp
fldcw
mov
shrl
pushf
insb
shlb
mov
in
jmp
faddl
lcall
mov
and
fwait
imul
adc
fbstp
lahf
nop
push
mov
mov
movsl
in
fcomi
cmp
mov
add
mov
outsl
sbb
outsl
push
xor
out
jecxz
lods
or
mov
pop
jmp
in
js
pop
push
dec
outsl
ret
add
lahf
bnd
cs
mov
ja
test
cmp
hlt
sbb
jnp
stos
ret
fistps
mov
push
dec
pop
dec
leave
lret
or
enter
or
jae
or
pop
push
jne
das
ret
and
lods
jnp
push
mov
xorl
cmpb
fadds
mov
jns
sbb
test
mov
pop
pop
jg
mov
jo
sbb
inc
push
enter
nop
sub
stos
aaa
leave
ret
lods
mov
xor
push
stos
inc
xor
ss
push
xchg
out
jnp
pop
insl
lret
out
cmp
inc
aad
push
jnp
ficompl
out
bnd
or
jnp
dec
inc
scas
push
insb
mov
pop
or
jae
daa
icebp
into
bnd
xor
push
mov
aas
scas
jnp
sub
sbb
mov
jnp
cs
xchg
stos
push
fstl
mov
out
jnp
xor
cltd
std
stc
jnp
mov
lcall
lahf
sbb
pop
jnp
outsb
mov
sub
xor
jae
into
testb
stos
cs
outsl
stos
fisubrl
xlat
fwait
sub
sub
adc
xchg
div
jnp
ficoml
push
mov
rcrl
jns
pop
inc
movsb
sub
jl
mov
int3
scas
jecxz,pt
mov
mov
notl
in
jnp
mov
xor
pop
xor
lea
xchg
in
jnp
xor
push
popa
mov
ljmp
cmp
pop
outsl
addr16
sbb
loope
and
cld
jnp
and
xor
jnp
mov
cltd
fisubrl
jnp
nop
pushf
frstor
mov
cwtl
popa
mov
std
dec
lock
imul
cld
and
int
pop
pop
push
cld
sbb
in
jnp
add
and
push
adc
test
jne
clc
mov
jnp
xorl
imul
or
sbb
hlt
jns
inc
push
mov
jnp
jo
insb
in
add
or
and
xchg
or
mov
int3
mov
xor
cmpsl
jnp
les
sub
idiv
jnp
outsb
sub
jbe
cld
xor
xor
sub
jo
or
pop
fists
xchg
loope
fisttpl
add
dec
shr
cmpsb
idivb
push
mov
sbb
add
scas
jne
stos
mov
in
cwtl
jge
xchg
insb
mov
rcll
jnp
js
or
add
push
cli
data16
jp
xchg
test
insl
xchg
mov
xor
mov
fiadds
outsl
cwtl
addb
mov
out
lahf
and
pop
lock
pop
into
outsl
push
push
mov
mov
idivb
xor
lods
loope
shl
jae
repnz
xor
jae
and
mov
mov
je
cli
jno
insl
stos
sbb
sub
xor
push
inc
mov
jnp
test
pop
jno
gs
int3
add
mov
jnp
pop
xor
mov
jnp
xor
adc
mov
mov
mov
insb
loop
jb
or
ljmp
xor
and
test
mov
insb
xor
jnp
lahf
push
xlat
shrb
imul
js,pt
jb
aaa
add
data16
mov
xor
and
ds
sub
jbe
lods
test
cmp
jmp
mov
mov
xor
xchg
pop
jnp
out
inc
or
out
cmp
lock
mov
outsb
cltd
xor
add
outsb
and
mov
bound
xor
xor
mov
mov
pop
jnp
dec
lret
lahf
sbb
incl
dec
mov
arpl
mov
fiadds
testl
dec
adc
movq
test
dec
outsb
jnp
sbb
dec
xchg
pop
add
mov
or
stos
jae
pop
jns
sti
inc
test
and
jnp
mov
inc
les
adc
pushf
mov
fldt
aam
adc
cmp
add
mov
cld
mov
pop
cmc
push
or
lock
dec
mov
jecxz
xor
jnp
xor
mov
ret
mov
ss
jecxz
push
jge
mov
push
call
xor
arpl
lock
fwait
mov
ss
mov
jnp
sub
clc
fidivrl
pop
mov
xor
popf
cld
aas
popf
jb
sub
sarb
idiv
test
mov
arpl
pop
stos
dec
xchg
mov
pop
incl
sub
adc
icebp
pop
jmp
cmc
or
xor
and
xor
pop
jae
push
sbb
xor
xor
xchg
cwtl
jnp
xor
or
push
lds
cmp
fistpl
jnp
jecxz
filds
sub
test
and
enter
movsl
lods
jl
out
jnp
pop
jne
ret
clc
lret
xor
and
lock
test
mov
lods
ja
xor
inc
push
xor
inc
mov
push
cmp
hlt
insl
outsl
fwait
or
mov
aaa
sub
and
les
jnp
jne
andl
xchg
pop
int3
pop
xchg
dec
mov
cld
out
lea
add
jb
sub
jbe
jge
jnp
push
cmp
in
insb
sub
imul
jmp
test
cmp
push
sub
fisttpl
test
and
outsl
sahf
in
data16
xor
push
cmp
int
cmp
lods
pushf
xchg
dec
jnp
push
imul
clc
es
outsl
cmp
in
sbb
ss
sbb
adc
jp
outsl
mull
stc
icebp
notb
mov
pushf
lock
stos
pop
ljmp
cli
add
xor
jb
cmp
mov
xor
pushf
insb
jns
jnp
mov
pop
cmpsb
fwait
mov
inc
push
or
cmp
out
out
cmpsb
pop
mov
adc
cld
push
jno
enter
push
andb
jnp
ljmp
jnp
or
mov
cmp
aam
lret
and
das
mov
fscale
cli
fst
mov
leave
pop
outsl
insb
int3
sbb
scas
outsl
cmp
mov
clc
negl
dec
pop
and
popf
cmp
and
xor
cmp
pop
xor
mov
inc
aam
mov
cmp
ja
or
xchg
cwtl
push
mov
xor
ret
jae
jo
xor
sbb
outsb
or
gs
ja
jmp
mov
sahf
testl
mov
jnp
xchg
jno
cmp
insb
stos
dec
inc
sbb
ret
aaa
add
pop
sarb
cmp
cwtl
loop
clc
sbb
xchg
lea
icebp
movsb
jnp
pop
pop
fdivl
cmp
repz
aas
pop
sbb
scas
cltd
arpl
out
jnp
sbb
pop
imul
mov
jb
jnp
dec
xchg
cltd
jno
xchg
lods
lock
push
xor
fsubrp
test
pop
jnp
xchg
add
pop
cmp
and
mov
mov
sub
adc
dec
add
inc
jnp
pop
sub
pop
xor
xchg
je
xchg
sub
in
aas
insb
or
aad
icebp
insl
xor
jg
dec
scas
push
out
mov
mov
fsubl
cmpl
insb
negb
insl
mov
push
or
aaa
loopne,pn
es
or
sbb
and
call
cmp
adcl
fptan
cmp
adc
jnp
jp
pushf
aad
dec
cmp
repnz
jecxz
xchg
or
popa
outsb
ja
inc
push
jp
pop
les
clc
je
jne
push
jnp
mov
dec
mov
outsb
outsb
arpl
jo
jnp
cs
pusha
mov
pop
test
xor
push
cmp
movsb
adc
sub
ret
cmpsb
adc
jae
xor
push
mov
sti
stos
jne
pushf
into
jecxz
ljmp
lock
sub
xor
movsb
out
mov
jnp
pop
pop
fdivrs
js
jae
aam
jno
pop
repnz
fnstsw
aaa
push
insl
mull
push
inc
jnp
pop
jmp
mov
fistl
leave
and
xor
aad
fldcw
arpl
ja
je
imul
adc
std
pop
add
mov
xor
and
mov
mov
jo
int3
jnp
lds
scas
movsb
out
insb
daa
cmp
jle
dec
xor
jnp
rolb
xor
jb
jnp
mov
imull
lahf
or
test
in
sub
fcmovnb
pop
bound
sbb
jnp
mov
fsubs
push
jnp
cmp
sub
adc
fwait
mov
ja
jnp
pushf
in
arpl
jge
fdivrs
xchg
add
xor
scas
mov
jb
repnz
and
xchg
repnz
sbb
sar
push
pusha
sar
out
test
je
fiaddl
aaa
sbb
mov
fbstp
jnp
mov
xor
dec
mov
jnp
sbb
mov
into
lret
std
jge
ss
inc
push
lret
pop
jnp
jb
insl
xor
ljmp
test
pop
stc
cmp
mov
jnp
insl
aam
add
add
xchg
mov
inc
lds
jecxz
cmp
movsb
mov
mov
lea
pushf
mov
xor
arpl
filds
cmp
stos
jbe
repnz
fisubrl
adc
insl
jecxz
jnp
lea
insb
push
lahf
fistpll
mov
xor
mov
lret
ss
cmp
in
add
pop
insl
cmp
sbb
xor
jnp
mov
cs
mov
mov
out
and
popa
xchg
jnp
xchg
movsl
fdivs
shll
xor
lods
xor
sbb
pop
mov
jno
mov
pushf
pop
stos
pop
xchg
or
jmp
xor
stc
or
mov
inc
xor
jge
sbb
fisubrs
imul
inc
fiaddl
jg
push
stc
addl
or
jnp
push
ljmp
cmp
ret
add
int3
arpl
sbb
jnp
lahf
jl
nop
xor
fwait
xchg
sub
popl
cmp
mov
cld
sbb
stc
push
push
dec
lret
and
jnp
mov
scas
jnp
movsb
in
xor
aaa
jnp
jmp
push
lods
jnp
je
in
mov
divl
cli
pop
and
jnp
add
mov
js
pop
dec
out
imul
aaa
or
jae
addr16
add
ss
add
adc
cmpb
dec
and
jo
ss
jns
sti
test
movsl
pop
jp
jnp
popf
in
xor
or
and
jne
inc
test
lock
cs
mov
outsl
lods
xor
and
cld
fsubrs
lea
inc
outsb
dec
mov
sti
out
cmp
mov
xor
pop
ja
js
pop
jnp
ljmp
jnp
pop
lahf
cld
push
lcall
movsb
je
div
aad
adc
pusha
pop
xchg
jnp
lret
push
int3
dec
in
jnp
xor
testl
movsb
lock
clc
jno
mov
sbb
scas
sub
insl
xor
xor
sbb
mov
andb
jne
pop
dec
nop
cmp
mov
test
xor
aaa
mov
jnp
push
icebp
jb
xchg
lret
or
add
out
jno
daa
jnp
sbb
shl
sub
pop
or
add
mov
outsb
or
xchg
mov
xchg
insl
push
cwtl
into
js
sub
out
lret
fdivrl
fs
ljmp
mov
mov
or
or
je
mov
jbe
insl
sbb
nop
jae
lock
mov
lahf
mov
jnp
jmp
jno
cmp
adc
inc
inc
mov
roll
rdpmc
fwait
arpl
in
jnp
add
xchg
sub
fisubs
in
jno
mov
movsb
cmpsb
ljmp
ss
mov
pop
les
pop
xor
jnp
push
imul
and
xchg
or
jnp
clc
pop
lret
repz
or
aaa
js
and
popa
shrl
jnp
mov
cmpl
and
jae
pop
aam
push
jnp
or
jns
loop
mov
jp
popa
dec
jnp
int3
pop
das
mov
outsl
ja
push
repnz
xchg
ret
mov
je
mov
sbb
stos
push
outsl
jnp
pop
cmc
outsb
xor
push
flds
mov
xchg
jnp
push
cmp
inc
mov
adc
sub
dec
ja
dec
clc
inc
and
call
mov
jmp
push
jnp
cmp
out
jnp
mov
repz
cmp
sbb
lret
loop
loope
jnp
insl
sub
and
dec
pop
jg
mov
cmc
mov
call
lea
insl
mov
xor
xor
cltd
jae
movsl
jnp
fistl
jp
pushf
sbb
sub
dec
in
fisubrl
sbbl
sbb
adc
sahf
lret
mulb
jmp
insb
jge
and
mov
xor
dec
xor
or
cmpsl
jbe
scas
lods
sti
dec
sub
loopne
out
int
ja
je
dec
imul
xlat
xchg
in
jne
cmp
mov
ja
sti
sarl
dec
push
push
adc
pop
jnp
stos
push
jp
aam
dec
imul
fsubl
mov
das
mov
fcomps
lea
jnp
jns
out
mov
pop
sub
xor
push
ljmp
xor
nop
or
test
sbb
sub
xor
test
mov
xchg
negb
stos
dec
in
mov
jo
aas
xchg
addr16
hlt
lret
xorl
pop
fimull
dec
inc
xchg
inc
mov
mov
pop
jle
cmp
push
mov
shr
lahf
sub
inc
jo
bound
and
xchg
or
and
lods
aad
cmp
out
leave
divl
cmp
jne,pt
or
sbb
jle
into
jae
jnp
jb
mov
test
or
jbe
imul
lret
push
out
jg
in
ja
scas
mov
or
jae
shll
jae
inc
and
hlt
loopne
mov
je
dec
sbb
jnp
pop
xor
jnp
push
cmp
jbe
mov
xchg
xor
xor
mov
push
movsl
cltd
mov
pop
jae
mov
jnp
fstl
lret
jnp
xchg
scas
or
insl
insb
jnp
pop
fwait
nop
outsb
xor
xchg
jnp
and
fimull
es
les
push
sub
jo
jno
hlt
fisubrs
jecxz
sub
mov
insb
or
leave
in
cmp
insl
or
mov
sub
int3
fbld
shrb
iret
aaa
push
sbb
lcall
xor
add
add
or
outsb
in
inc
jb
repz
jnp
fdivr
jp
scas
jnp
sbb
mov
cmpsb
add
ss
jmp
pop
dec
scas
jnp
mov
lock
and
lock
sub
adc
loopne
mov
jnp
xor
fsubrl
pop
mov
cli
xor
or
jnp
jb
mov
aas
jnp
dec
and
int3
add
jnp
cld
and
or
lret
pop
in
rorb
outsb
lret
jnp
pusha
repz
daa
push
sub
sarl
xorl
stos
ljmp
in
loop
add
mov
imul
cwtl
jnp
xchg
lods
push
idivl
mov
sbb
mov
mov
les
dec
mov
add
sarb
jecxz
sti
fiaddl
adc
jnp
push
popf
das
in
lahf
jnp
orb
mov
dec
jnp
cli
mov
mov
cmc
mov
adc
jae
cmp
mov
mov
cmpsl
pop
jns
jnp
or
xor
fldl
aas
out
mov
js
jnp,pt
shrl
jmp
and
xchg
or
jge
gs
push
cmp
mov
lods
rorl
lret
and
jnp
mov
loope
jne
lcall
aam
jnp
mov
add
inc
xor
jmp
lock
jae
sarb
or
lret
aam
push
popa
int3
add
enter
jnp
push
icebp
cs
mov
add
test
insb
fdivl
mov
jg
stos
pop
push
enter
call
cli
and
cmc
movsl
jnp
adc
call
jnp
js
fnstsw
pop
inc
fwait
icebp
out
add
outsb
jnp
into
in
roll
test
and
xor
icebp
ds
loope
cmp
cmp
xor
fisubrs
xlat
jne
jne
push
mov
call
in
movsb
shr
jmp
mov
cld
icebp
pop
call
in
ret
fisubrs
jnp
fcmovu
rcr
jb
insb
jnp
cmp
sub
dec
add
shll
fdivrl
test
pop
xchg
jnp
xor
fsub
rorb
xchg
jnp
mov
cmc
jnp
cmpl
jnp
shl
push
push
cmp
mov
lahf
out
arpl
pop
lret
int3
jne
test
jnp
repnz
jno
mov
leave
hlt
cmp
push
into
arpl
repz
test
jnp
add
dec
cmp
cmc
stc
das
lret
aas
xor
push
and
cmp
popf
xorl
nop
mov
cld
mov
fwait
sbb
mov
mov
cmp
scas
hlt
and
mov
push
jnp
adc
or
jo
idiv
sbb
das
popf
sub
sbb
add
mov
test
jnp
dec
sbb
sahf
js
cltd
add
sbb
testl
xchg
xor
clc
cmp
pop
arpl
aaa
and
jno
je
pop
aam
jnp
fisubrl
push
cltd
lods
cmp
sbb
cmp
push
js
ret
pop
sub
jnp
dec
or
inc
ja
fildll
imull
mov
outsl
xor
jge
push
jnp
fists
stos
jnp
mov
shll
aaa
mov
sbb
cmc
pop
xor
cmp
mov
mov
cmp
orb
lock
lea
xlat
mov
jne
sbb
loopne
adc
sub
push
dec
insl
sbb
xchg
cmp
jnp
sti
scas
xchg
pop
xchg
xchg
xorb
xor
or
xchg
hlt
test
in
mov
icebp
sbb
mov
mov
mov
mov
mov
jmp
and
in
add
and
icebp
cmp
or
loop
lahf
push
imul
dec
insb
out
fwait
mov
cwtl
stos
dec
outsl
ja
mov
jb
and
add
ds
cwtl
pop
cmp
sub
pushf
aas
jns
jns
sub
mov
mov
jnp
or
out
add
enter
es
insl
ficompl
jnp
mov
in
jnp
cmp
xchg
or
mov
pop
xor
and
outsb
js
sub
hlt
in
mov
lods
cmc
mov
cmp
mov
jns
push
data16
stc
push
pop
insl
jnp
int3
mov
lock
add
or
jnp
repnz
ljmp
vzeroupper
mov
rorb
mov
jae
ret
pop
je
je
sbbl
lret
nop
insl
sub
into
dec
out
les
enter
gs
sub
mov
int3
or
outsl
cmp
jnp
lock
in
mov
sarb
data16
cmpsb
push
ljmp
stc
ret
mov
popa
sub
jnp
je
lea
sub
or
sti
mov
push
shll
leave
jp
sub
imul
push
ucomiss
aas
je
cmp
test
je
adc
lret
daa
into
dec
rorb
cmp
cmpsb
jns
ret
dec
dec
xchg
insb
jnp
fidivl
aam
out
sti
fwait
rorb
mov
cli
inc
cmpsl
insb
out
and
sub
jo
sbb
mov
pop
cmp
sbb
pop
jnp
in
sbbl
inc
sti
mov
ss
jnp
jmp
cmp
loopne
in
sub
scas
fwait
push
mov
js
cmp
push
sub
movsb
loopne
test
rolb
jbe
inc
jae
sub
sahf
pop
fisttpl
xchg
into
jnp
nop
inc
cmp
jmp
sbb
mov
out
imul
xchg
dec
mov
aad
cmpsb
std
ja
add
mov
mov
ss
push
je
xor
fadd
aad
xor
clc
aaa
inc
out
jnp
fcompl
imul
add
cmp
lods
sub
call
outsl
fnstcw
sub
push
jnp
in
cmc
mov
iret
popa
mov
fisttps
cwtl
jnp
nop
scas
lret
push
push
jnp
jg
jb
adc
cmp
or
in
push
fs
jmp
outsl
mov
or
pop
mov
ret
or
jnp
mov
dec
or
sub
mov
divl
jnp
lahf
jl
push
enter
cmc
addl
sub
imul
and
nop
in
fimull
fdivrs
jnp
and
mov
push
es
es
stc
mov
pop
or
fdivrl
repz
cmp
sti
xlat
pop
mov
inc
pop
jnp
inc
xor
xchg
adc
or
or
jae
insl
testl
data16
icebp
push
pop
cmc
pop
out
mov
mov
push
out
xor
inc
jnp
ds
js
sbb
xor
adc
jnp
hlt
mov
popa
icebp
mov
or
mov
jnp
add
mov
dec
sbb
push
jl
in
jnp,pt
adc
jbe
or
sahf
jnp
sub
mov
sbb
in
fs
test
loopne
mov
mov
cwtl
jmp
in
jnp
mov
push
pushf
mov
dec
leave
mov
sti
nop
cmp
sbb
out
dec
imul
lds
jnp
fcoml
sub
xor
cltd
push
mov
mov
sbb
jge
in
cmp
scas
cli
in
jae
pop
mov
outsl
push
icebp
es
jp
aaa
cmp
fstpt
mov
cmpsl
cmp
adc
call
add
insb
ret
jnp
jns
shl
add
jnp
cmpl
jmp
in
jae
sbb
and
push
jnp
fdivl
mull
jp
jnp
jl
fidivs
xor
jnp
inc
xchg
and
push
jle
jbe
xor
jnp
mov
rcl
lock
sub
mov
test
jae
xchg
das
sub
aaa
or
inc
jnp
sbb
adc
dec
and
or
jns
insl
lock
jnp
cmp
adc
sbb
shll
dec
push
pop
ja
add
dec
insl
xor
sub
xchg
jae
jns
idivb
iret
mov
cmp
mov
push
lock
fistpl
stos
test
imul
mov
push
das
fcomip
xor
xchg
cmp
imul
out
add
shrb
imulb
mov
sub
and
inc
jno
cs
in
cmp
mov
ja
or
jnp
fwait
es
adc
mov
cmp
call
xor
jb
imul
dec
outsl
pop
fisttpl
ds
ja
jae
push
imul
jge
jno
jle
pcmpeqw
add
out
jmp
movsb
pop
add
mov
and
and
stos
and
int3
mov
jno
sub
and
fisubs
or
imul
je
sub
stos
adc
cmpsb
xchg
cmp
pop
test
mov
add
or
jl
outsl
cs
bswap
sub
jnp
push
fidivs
jnp
or
mov
jmp
jnp
cld
sahf
jae
jnp
jb
xchg
mov
mov
jnp
xor
and
xor
mov
jecxz
lods
pop
icebp
or
cs
jae
nop
jmp
stos
jnp
negl
xlat
cmp
add
mov
jnp
ja
popa
mov
ss
jns
push
vmread
xchg
pusha
bnd
lds
mov
ljmp
std
cmp
jnp
pop
adcl
scas
jno
fwait
jecxz
mov
mov
xchg
jnp
dec
sahf
and
cmc
pop
cwtl
leave
xor
jp
mov
and
jae
icebp
movsl
pop
repz
enter
mov
imull
aad
jnp
mov
sarb
adc
push
outsl
sub
movsl
scas
xchg
and
or
jnp
test
jnp
mov
adc
mov
lret
in
add
sub
pop
cld
rcll
ja
sbb
pop
insl
mov
cli
shrb
dec
dec
mov
scas
and
mov
addr16
cli
fdivrl
push
mov
xor
stos
stc
adc
mov
mov
xor
das
ret
xchg
mov
pusha
ljmp
dec
cmc
lds
fisubl
add
lret
push
or
dec
push
mov
imul
xor
jae
ljmp
int
cmp
shrd
sbb
or
jne
adc
xchg
test
into
adc
dec
pop
xchg
mov
mov
movsl
sbb
mov
std
fcoml
mov
sub
xchg
movsl
cmpsb
das
fidivrl
stc
mov
daa
jnp
in
add
movsl
jo
or
or
jmp
and
sbb
or
mov
loope
jp
jmp
mov
pushf
ret
adc
popa
bound
or
jnp
int
xor
pop
fdivr
adc
jnp
fsubrp
sarb
std
adc
divb
sbb
push
sti
pushf
es
cmpsb
sbb
jnp
mov
in
jle
mull
jmp
sub
in
xor
dec
jae
push
xor
jmp
mov
mov
popa
sub
repnz
test
pop
add
xlat
cmpsl
jnp
imul
add
push
lds
push
pop
sub
fs
sti
jnp
mov
lock
jnp
mov
push
test
out
cmp
aam
idiv
xchg
pop
nop
jnp
imul
dec
mov
ret
outsl
cmpsl
lods
sbb
xchg
ss
add
mov
outsb
sub
lods
adc
sar
sbb
inc
sub
test
jnp
push
inc
addb
dec
movsl
dec
jnp
mov
dec
ss
xchg
ret
pop
xor
dec
cs
xor
pop
ljmp
inc
cmc
inc
or
lods
lcall
dec
les
jnp
sarb
imul
pop
mov
cli
data16
sarl
push
test
push
scas
push
jnp
shrl
or
and
bnd
cmp
xchg
jnp
or
dec
imul
or
jne
mov
push
jp,pn
ja
cmpsb
repnz
xchg
out
cli
negb
pop
jnp
ss
jbe
mov
sbb
jno
mov
lcall
sub
inc
mov
xlat
dec
pop
popl
jae
jnp
cmp
jecxz
jnp
mov
lret
push
aaa
mov
sbb
pop
cmp
stc
loope
rclb
mov
jnp
js
or
pop
es
jmp
in
cmc
outsl
xchg
cltd
subb
loope
fisubs
lods
daa
add
jns
and
enter
xchg
imul
das
je
icebp
dec
cs
xlat
mov
mov
popa
sub
push
lods
mov
pop
jbe
pop
xchg
lret
es
aas
repnz
test
lds
xor
out
out
sbb
dec
ja
mov
imul
mov
lcall
jnp
and
push
test
push
adc
ja,pt
xor
shr
cmp
sarl
out
out
cmpsl
ret
push
sbb
pop
or
mov
jl
dec
mov
dec
out
std
cli
scas
jnp
push
out
mov
sbb
imul
add
xor
mov
dec
dec
jne
lock
sub
ja
sti
js
jnp
lret
scas
jne
in
mov
jnp
imul
or
cli
xor
clc
pop
mov
cltd
je
nop
sub
adc
and
xor
jnp
pop
push
sbb
cmc
cmpb
js
addl
imul
pop
sbb
imul
dec
xor
push
sbb
dec
cmp
dec
cli
outsl
adc
pop
bnd
fcoms
push
jge
repz
mov
mov
mov
jmp
pop
pop
jno
cli
mov
mov
jae
hlt
pop
in
or
jp
lock
pop
fildl
push
imull
mov
ja
sub
mov
lret
dec
jo
imul
in
aaa
inc
dec
sbb
xor
dec
cld
jmp
in
lahf
cs
sub
push
fidivrs
add
jp
decl
mov
and
sub
repnz
or
mov
lock
sub
outsl
mov
xchg
jnp
jp
hlt
stos
fwait
loope
jnp
sahf
mov
dec
ljmp
ss
arpl
jnp
cmc
mov
mov
imul
aaa
xor
or
mov
daa
push
inc
mov
shr
and
jae
fs
sahf
pop
in
jnp
sub
jne
jnp
jl
dec
mov
push
in
icebp
in
mov
sub
call
stc
ficoms
fs
scas
or
jnp
cld
xchg
das
fidivrs
cmp
or
mov
mov
cmpsb
jnp
je
aaa
clc
sub
stc
jnp
adc
xchg
add
mov
lds
jnp
jns
mov
jnp
gs
inc
jnp
jp
aam
mov
mov
cld
mov
sbb
lock
sti
cltd
mov
push
daa
mov
lods
cmpsb
xchg
dec
jb
lods
jnp
and
lret
sti
mov
jns
cmp
jnp
scas
xor
inc
adc
fistpll
mov
pop
test
lock
mov
mov
jnp
jmp
test
clc
mov
aas
rcll
in
jle
scas
lods
pop
ljmp
adc
jnp
shrb
insl
int3
jnp
mov
idivb
mov
jge
addl
push
test
jl
mov
jnp
xlat
gs
pop
or
repnz
push
mov
xchg
mov
enter
dec
imul
es
dec
xor
mov
cmp
jo
jmp
cmp
or
jg
jnp
xor
lahf
mov
sarl
jp
cmp
mov
sbb
adc
lods
std
inc
imulb
lock
cmp
mov
xlat
clc
xchg
cmp
pop
lock
sub
fildll
jnp
mov
pop
or
insl
js
sub
push
xor
jns
pop
movsb
jnp
cmp
fs
xor
mov
pop
push
jno
pusha
jnp
lret
jge
xor
pop
jnp
fsts
test
cmp
call
adc
jnp
std
and
xor
adc
in
pop
mov
jecxz
xlat
jnp
mov
mov
cmp
pop
mov
cmp
sbb
sahf
lods
shlb
enter
mov
fdivrp
loop
mov
jnp
cmp
dec
xor
jnp
jmp
jp
inc
jnp
cli
dec
fwait
sahf
std
jnp
decl
test
lock
jnp
add
repnz
and
fnstsw
call
and
inc
mov
ja
mov
in
xchg
lock
or
call
jns
adc
jnp
xchg
adc
mov
mov
sahf
scas
rorb
pop
aas
and
pop
lock
outsl
jnp
jae
xor
dec
cwtl
mov
mov
rolb
push
jnp
adc
out
dec
clc
das
jnp
loop
dec
sub
jp,pt
dec
fimull
push
mov
stos
mov
int3
out
jnp
cs
popa
pop
rol
dec
or
in
mov
ss
gs
cld
lret
pop
leave
in
mov
lock
data16
mov
or
jnp
pop
adc
xchg
outsb
ss
push
cli
fadds
dec
mov
jnp
mov
sahf
cmp
inc
mov
sbb
jnp
js
xor
jge
jb
jnp
outsb
sbb
adc
mov
add
iret
jnp
xor
popa
mov
or
add
fdivl
in
roll
add
fs
jp
lret
aam
mov
push
in
aam
pushf
stc
shrb
movsl
xor
test
mov
outsl
ds
lcall
lahf
jae
xchg
push
mov
repz
push
pop
jo
dec
jnp
jge
xchg
jecxz
xor
lods
shrl
out
insl
ss
xor
jmp
shlb
sub
cmp
pop
xlat
pop
fsubrl
mov
jae
fcmovnbe
pushf
test
das
inc
xor
insb
xor
and
jnp
inc
xor
repnz
and
ds
jmp
cmc
jp
je
jnp
sub
pushf
sub
cmp
cmp
jne
cmp
mov
fwait
or
ljmp
ret
mov
mov
leave
jne
push
cmp
or
lahf
jnp
pop
call
jnp
inc
cli
jae
dec
sti
push
jnp
in
insb
rorl
scas
repz
jecxz
insl
xchg
mov
jnp
fidivl
and
dec
sbb
xor
jnp
andl
jnp
jae
inc
and
pop
ss
fsubrs
fistpl
mov
push
mov
pop
add
push
pop
mov
int
mov
inc
orb
mov
fisubrl
or
add
ss
jae
sub
pop
mov
jg
bound
mov
xchg
jne
dec
dec
int
mov
movsl
cmp
mov
jnp
mov
fisubrs
jg
hlt
outsb
pop
add
mov
iret
ss
inc
sarb
pop
test
jnp
fwait
jbe
add
lods
mov
fsubrl
enter
adc
fwait
add
int
sahf
push
jae
mov
rcll
pop
in
jae
test
xacquire
les
dec
adc
insl
divl
adc
or
pop
sarb
mov
pop
cs
jnp
jns
inc
test
popa
lods
sbb
insl
dec
fnstsw
fwait
lods
inc
mov
mov
imul
inc
dec
pop
scas
jns
pop
jnp
aad
fwait
adc
xor
notl
es
or
cltd
mov
jnp
xchg
in
mov
inc
pop
jnp
xor
les
in
xchg
jnp,pt
cmp
popw
pop
xor
inc
lds
dec
icebp
and
add
jnp
pop
sub
jp
sahf
pop
jnp
mov
pop
xlat
jns
addr16
test
out
or
pushf
insb
mov
fimuls
pop
jae
fdivrl
pop
jns
jnp
out
lock
clc
jno
xor
adcb
or
mov
lret
jle
inc
cmp
test
imul
out
ja
jnp
out
lods
sti
pushf
dec
insl
imul
sub
add
jns
inc
stc
add
xchg
sub
nop
jp
divb
jnp
inc
in
mov
xor
popf
stos
shl
jp
jnp,pt
adc
and
mov
mov
cmp
jl
xchg
and
jnp
sbb
cs
scas
fldl
jnp
xchg
loopne
cli
aad
andl
push
test
call
xor
shrb
inc
mov
jp
jnp,pn
int
sub
sbb
mov
ja
push
in
outsl
mov
stos
push
test
test
dec
mov
out
test
xor
in
xor
pop
jae
gs
idivl
sbb
sbb
mov
and
jp
xor
enter
xor
imul
cmp
dec
pandn
outsb
addl
inc
mov
outsl
std
mov
jge
imul
jo
clc
cs
jnp
aaa
lahf
sbb
jnp
sub
add
repnz
sysexit
test
sar
test
mov
xchg
pop
inc
mov
sbb
add
movsl
jl
xor
jnp
push
xchg
mov
or
xor
push
mov
into
adc
inc
repz
fwait
jno
shl
insb
jle,pn
push
pop
mov
rorb
mov
bt
and
jnp
lret
mov
dec
mov
pop
scas
jnp
jne
and
stc
test
jnp
imul
dec
les
mov
mov
hlt
jo
jnp
dec
lcall
in
pop
sub
pop
cli
loopne
jmp
add
mov
sub
jnp
aad
fiaddl
rcr
mov
outsb
inc
repz
js
lock
dec
dec
test
jns
cmp
cmp
insl
jnp
xor
adc
imul
mov
mov
int3
pop
cmp
lock
cmp
pop
inc
int
cmp
cmp
cld
loopne
or
mov
mov
inc
cmp
adc
aam
xchg
dec
fmul
insl
sub
movsb
mov
jle
jnp
shrl
out
mov
xor
outsl
scas
pop
jnp
inc
cmp
mov
lcall
jp
mov
pop
ret
xor
pop
pop
adc
pop
gs
jnp
in
ljmp
or
or
insl
aaa
imul
es
out
mov
jnp
add
cli
sarl
lret
jl
mov
ret
mov
dec
or
in
outsl
xchg
jae
test
cmovnp
and
push
or
push
mov
mov
add
in
inc
or
push
pop
insl
push
ds
mov
sub
mov
stos
sbb
and
outsl
xor
push
xchg
cwtl
mov
mov
popf
and
pop
outsl
push
call
fimull
cmp
movsl
xor
leave
lret
xchg
adc
mov
mov
lods
js
jnp
sahf
mov
xor
xchg
jb
inc
sti
hlt
xchg
push
lock
or
pop
jae
pusha
inc
xlat
inc
mov
push
jmp
jp
sub
mov
and
movsb
icebp
xor
stos
jnp
pop
adc
test
dec
and
stos
cmc
xchg
mov
lcall
cli
into
shr
sub
or
lcall
mov
loope
or
mov
mov
cmp
test
push
sbb
ljmp
lods
mov
sub
cwtl
jnp
pop
mov
xor
jnp
and
pop
scas
stos
cwtl
mov
ret
repnz
jmp
dec
jnp
sbb
dec
test
jne
imul
cmp
mov
push
cmpl
aam
mov
jecxz
aaa
mov
jnp
jge
mov
jnp
and
ja
mov
jnp
es
xor
adcb
xchg
mov
sub
test
lret
xor
ja
xor
xor
jp
outsl
add
es
popf
jnp
in
cmp
repnz
jnp
xchg
aam
xchg
sub
ficompl
shlb
xor
mov
mov
dec
fdivl
dec
popf
out
inc
insb
xor
mov
xchg
ljmp
or
jnp
scas
ret
add
push
jnp
adc
popf
jne
cs
imul
faddl
pop
clc
outsb
jns
dec
sub
pop
pop
movsl
je
add
jp
push
xor
loop
inc
jbe
mov
sbb
cld
jae
mov
jnp
daa
mov
je
pop
lods
jnp
jge
aaa
stc
mov
fidivrl
push
call
xchg
or
add
je
aaa
jnp
fs
pop
stos
or
rcrl
aas
lea
outsl
pop
filds
cmpsb
push
repnz
pop
mov
or
pop
push
scas
jnp
popa
push
lods
xor
cmc
mov
sti
xor
repnz
jnp
sub
js
movsl
loope
jnp
add
lret
jnp
scas
mov
cli
cmp
jecxz
std
shlb
jne
jmp
testl
mov
cs
mov
and
add
in
xor
add
adc
push
mov
dec
jns
jae
inc
rorb
daa
data16
mov
stc
jnp
cmp
xor
movsb
mov
out
add
ja
jmp
pop
push
dec
outsb
cmp
lahf
mov
sub
cs
jns
js
xchg
cmp
shrb
btc
inc
push
int3
jae
leave
cmp
jne
cs
popf
int
in
jnp
ret
idivb
cld
in
sbb
mov
jl,pn
imul
mov
cltd
inc
jnp
and
add
imul
cmpsl
jge
push
jne
cli
stos
ucomiss
sbb
mov
pop
dec
sub
jecxz
mov
jnp
aad
jl
dec
xchg
jnp
loope
push
icebp
inc
mov
jnp
int
aas
mov
push
sbb
call
stos
in
ja
adc
insl
add
or
mov
lret
sbb
dec
jo
mov
push
jae
mov
lea
ret
outsb
jnp
mov
and
ss
arpl
push
stos
lods
icebp
mov
cmp
movsb
outsl
inc
subb
push
jnp
fistl
sub
sbb
sbb
jnp
scas
mov
stc
add
insl
cmp
cmpb
int3
imul
ljmp
jo
jnp
mov
in
jno
les
loopne
aam
jo
pop
jb
divb
outsb
cltd
mov
cmp
je
hlt
fs
lods
imul
add
call
idivb
jae
dec
loope
cli
cmp
push
xchg
fisubrl
pop
add
sarl
xchg
mov
xchg
ds
repnz
stos
jle
cmc
add
fs
jnp
cs
inc
or
icebp
jns
cli
and
mov
int3
fildll
jnp
mov
sub
aaa
or
jp
popa
daa
jno
pop
stos
sub
xchg
xchg
lret
pop
sub
call
lcall
mov
test
pop
icebp
pop
jnp
jmp
mov
aas
push
subb
test
jnp
push
int3
loope
repnz
jnp
mov
cmp
jnp
sub
aad
cmp
push
jnp
lods
mov
std
call
jno
out
int
sahf
jnp
pop
idivb
jno
mov
cmc
mov
pop
int3
pop
xchg
mov
push
insl
mov
repz
out
jne
les
xor
jae
sub
add
jnp
das
mov
cs
cmpsb
jne
mov
je
pop
jnp
mov
movsb
add
clc
inc
lods
cmp
jg
insb
bnd
pop
jnp
xor
shlb
sub
aas
lea
std
stos
jnp
xchg
lods
clc
fcmove
dec
mov
ja
xor
out
sahf
aam
aaa
push
pop
jns
or
stos
out
cld
mov
jl
aaa
mov
inc
push
icebp
data16
jnp
mov
mov
jnp
fidivrl
xor
jae
adc
daa
dec
jbe
aad
xor
mov
in
xchg
mov
movsl
stos
add
xor
jnp
jne
xchg
xor
add
jno
push
xchg
mov
cmp
cmp
sbb
mov
pop
push
cmp
and
sbb
je
xor
sbb
imul
cmp
lods
insb
fldcw
lret
sbb
mov
nop
mov
xor
mov
lods
jb
stos
sbb
pop
add
repz
push
cli
cmp
sbb
insl
in
rcll
ss
jnp
fs
push
int
or
shr
ja
daa
and
mov
jnp
gs
xor
or
jnp
cli
loope
negl
ss
adc
pop
jb
jnp
jmp
sbb
or
stos
sarl
outsb
insl
out
sub
jnp
lea
outsl
repnz
add
lret
scas
add
inc
out
mov
cmp
lods
in
push
scas
jbe
insb
enter
cmp
push
inc
int
jnp
shlb
negl
add
loope
and
mov
xchg
sub
leave
push
shl
jnp
aaa
pop
mov
fcmove
fdivrs
cmpsb
add
insl
rcrl
push
mov
jns
pop
pop
xchg
idivl
clc
int3
add
dec
adc
push
pop
pop
popf
jae
xor
or
aaa
int3
stos
gs
loop
xor
jnp
or
loope
pop
dec
jnp
testl
clc
push
lock
ds
jp
into
aam
lret
mov
mov
jae
pop
xor
or
mov
mov
jns
ljmp
jb
popa
out
dec
or
cli
cmpsl
jnp
fsubl
cld
or
sub
cmc
mov
cld
jle
inc
jnp
imul
repnz
inc
jnp
mov
shr
clc
fstpt
ss
loope
js
jnp
insl
dec
iret
ficoml
repz
pop
mov
cmpsb
jnp
jns
adc
pop
push
cmp
sub
mov
adc
int3
cld
push
xchg
mov
xchg
std
xchg
cs
je
into
jnp
cmp
xor
sub
or
jnp
pop
add
inc
mov
out
sub
and
in
shrl
imul
jp
sub
pop
jae
scas
daa
mov
ret
jae
jo
sbb
jns
inc
hlt
jno
sti
jnp
push
repz
jnp
add
xor
idivl
lret
mov
inc
jnp
fwait
jmp
lahf
mov
mov
and
aam
loope
jne
incl
cmp
push
mov
leave
sbb
jnp,pt
mov
icebp
mov
push
push
loopne
jae
cli
js
xor
sbb
jae
lret
test
jmp
xchg
out
sbb
fisubrl
fiaddl
jnp
stos
lcall
or
outsl
ds
xor
dec
push
out
mov
sbb
sbb
jmp
in
jo
test
cli
dec
mov
xchg
mulb
mov
add
push
mov
jb
call
insl
sub
pop
daa
dec
jns
or
imul
arpl
mov
jnp
pop
or
jae
push
ficoml
das
jnp
in
sub
bnd
inc
or
dec
jnp,pn
hlt
inc
or
push
jno
cmp
jb
jnp
int
data16
addr16
xor
mov
adc
pop
jnp
mov
cmpl
fisubrl
cld
jnp
imull
enter
jnp
lahf
lock
daa
pusha
xchg
cmp
sub
in
mov
mov
mov
jl
cmp
xlat
jns
adc
ljmp
outsb
jb
stos
das
mov
jbe
repnz
mov
cmpsl
in
mov
stos
jmp
jnp
ss
jno
jecxz,pt
push
add
sbb
jae
mov
inc
andl
out
push
insl
sti
mov
push
ret
outsb
xchg
pusha
js
jnp
sub
xor
or
stos
jno
jae
aaa
mov
call
je
mov
les
lret
jnp
add
mov
sub
jnp
or
cmp
dec
addr16
xor
repnz
push
pushl
mov
clc
fsubrp
jae
mov
adc
mov
dec
test
int
cmp
sbb
icebp
xchg
je
mov
lods
and
insl
or
popf
les
fidivrl
adc
jge
insb
adc
jmp
ljmp
fcomps
adc
xchg
std
and
sub
jnp
rcrl
imul
pop
jns
mov
jnp
not
xor
mov
jne
push
fwait
imul
out
cs
outsl
mov
cmp
aas
test
stos
mov
jnp
xor
call
jnp
jb
mov
mov
les
js
xchg
xchg
imul
clc
add
pop
int3
and
jnp
and
fucompp
jg
xchg
cmc
or
out
sti
scas
negl
push
jnp
mov
orb
adc
je
lods
dec
jae
ja
cmp
into
jnp
xchg
ret
cmp
testb
pop
popf
push
xor
repz
mov
mov
test
jnp
hlt
outsl
test
paddsw
cmpb
pop
ficomps
rcrb
jp
mov
or
fldt
ja
mov
icebp
stc
mov
add
pop
fisubl
pop
xchg
cmp
jo
jnp
call
add
push
lods
into
aaa
inc
cmp
sub
jge
sbbb
enter
out
fdivr
jae
jnp
cmp
jnp
jne
repnz
imul
xchg
ficoml
fdivl
mov
rcll
test
mov
xor
aas
arpl
adc
add
dec
ja
jbe
jb
sarl
sbb
mov
ja
jnp
iret
jge
or
arpl
cmpsw
cmp
lret
cli
inc
adc
bnd
jnp
mov
test
push
cmp
pop
ffree
jae
cmovnp
out
xchg
jns
lods
add
sub
je
jne
jl
jb
xor
pusha
xchg
dec
loope
xchg
cmpsl
fs
mov
sti
xchg
shlb
sub
imul
adc
mov
in
insb
or
push
lods
sub
cmp
or
adc
lods
jg
in
mov
imul
xchg
stos
imul
out
aad
dec
gs
out
dec
repz
lds
and
xchg
cmc
jnp
sbb
jnp
std
cmp
xor
xor
jnp
leave
push
inc
movsl
clc
jnp
lods
mov
stos
jnp
bound
mov
rclb
jmp
cmc
lods
pop
pop
fildll
sbb
outsl
fimull
push
insb
or
mov
push
insl
out
inc
mov
fisttpl
xor
pop
jbe
fmull
push
xor
sub
cmp
imul
ret
xchg
jnp
inc
sub
add
push
jg
mov
mov
adc
sub
fidivs
out
sub
loope
jnp
iret
adc
stc
xchg
bnd
sub
sbbb
das
sbb
dec
push
lahf
loope
sbb
mov
xchg
inc
fs
cwtl
dec
test
sbb
or
test
in
in
iret
sub
adc
jnp
frstor
in
cmpsb
pop
mov
call
outsl
sarl
cmp
inc
jo
jnp
enter
rorb
jnp
sti
call
xchg
jnp
scas
xor
xor
les
jae
mov
pushf
enter
insl
out
jae
mov
mov
test
xor
push
or
jecxz
jnp,pn
or
mov
pop
jne
jno
nop
pop
xchg
mov
cltd
pop
scas
inc
jnp
out
loop
shlb
inc
sub
cmpsb
xchg
scas
in
and
mov
imul
ja
sub
fsqrt
in
test
lret
cmp
fmul
jnp
test
or
cmp
add
xor
push
jnp
pop
and
test
inc
xor
mov
cmp
popa
data16
cld
xchg
jne
jns
ret
ds
es
cmpsb
adc
test
fcmovnb
shrb
inc
jnp
xor
addr16
in
xchg
flds
or
and
jno
mov
and
add
addr16
xchg
mov
pusha
outsl
call
push
insb
push
cmpsl
mov
sbb
mov
inc
imul
js
add
nop
scas
xor
call
jnp
xchg
ljmp
ret
je
pop
mov
jmp
cmp
push
jae
bound
xchg
insl
add
push
or
fwait
push
popa
xlat
xor
ret
cmpsl
clc
inc
cmp
into
imul
mov
leave
out
les
jnp
adc
out
je
jnp
lea
and
stc
ss
jnp
cmp
xchg
cmp
nop
sbb
inc
lahf
xchg
mov
orl
jnp
iret
cmp
sbb
mov
mov
or
cltd
dec
ja
jnp
adc
jbe
or
outsb
dec
int3
js
bound
ja
dec
ss
imul
jmp
stos
adc
movl
lds
add
fdivs
push
insl
js
xor
mov
mov
ja
inc
push
or
jne
ret
mov
fistpl
fdivrs
mov
jo
inc
scas
insl
jnp
popa
pop
or
ljmp
cwtl
subl
pop
idiv
pmaxub
cmp
test
add
jns
cmp
loopne
popa
mov
or
rcr
js
jl
jnp
cmp
shlb
jg
jae
jns
mov
vpaddq
icebp
cld
mov
adc
jo
cli
mov
jae
ror
dec
lret
jno
mov
jnp
das
dec
es
jmp
call
cld
mov
sbb
xor
daa
mov
mov
sti
jg
imul
mov
pop
or
sub
lcall
ss
icebp
aaa
je
std
mov
shll
sub
jnp
xor
inc
xor
jecxz
sbb
cs
ja
adc
movsb
sub
jnp
mov
xor
or
mov
xchg
inc
jbe
loop
and
scas
call
and
stc
sbb
insb
mov
or
xor
imul
pop
loop
jp
lods
push
cmp
repz
jns
xor
dec
mov
dec
xchg
test
pop
push
adc
outsl
sub
jl
dec
add
xchg
aam
dec
inc
jmp
mov
jmp
pusha
cmpb
xchg
outsl
sarb
lret
imul
fdivrs
mov
fcmovnu
imul
cmp
je
mov
nop
in
push
or
cmp
notl
inc
and
inc
pop
jnp
dec
stos
xchg
jg
or
jnp
call
add
enter
ret
leave
mov
insl
mov
or
sbbb
pop
jnp
pop
xchg
daa
adc
mov
sbbl
cmp
fwait
outsl
xor
mov
sub
sbb
push
mov
xor
lods
shlb
shll
dec
mov
test
dec
jp
cmp
cmpsb
aaa
loopne
jnp
aad
loope
or
ss
cld
sub
cltd
ficoml
outsb
pop
enter
ja
add
lods
jnp
ficoms
dec
push
or
or
pop
mov
mov
xor
xchg
loope
int
jnp
arpl
stos
jnp
mov
pop
sub
outsb
loope
and
sbb
mov
ja
sub
insl
cmp
ss
es
push
jnp
repz
dec
mov
lods
cmpsb
cwtl
insl
addr16
gs
pop
jnp
jne
test
out
test
jnp
xor
in
imul
inc
call
xchg
imul
jo
out
jnp
and
inc
lock
test
andl
lods
lret
pop
mov
js
movsb
or
jnp
shll
in
lret
lods
movsb
mov
outsb
lea
jnp
or
dec
mov
data16
aas
enter
adc
cmp
pop
jnp
xchg
mov
pop
inc
stos
mov
mov
jnp
jl
insb
sbb
xchg
sub
fmuls
jnp
or
stos
and
add
mov
cmp
imull
or
pushf
addb
insb
imul
dec
mov
inc
jae
push
cs
aas
or
mov
sbb
cltd
in
out
idivb
add
ret
pop
stc
mov
outsl
imul
fbld
aam
jnp
mov
lret
dec
add
or
addr16
divl
pop
sbb
jno
outsl
push
push
and
mov
dec
js
mov
in
sbb
int
imul
ret
mov
jne
cmp
push
xchg
shrl
add
iret
dec
xor
xor
loope
mov
xchg
jns
fs
fstps
add
mov
sbb
mov
mov
arpl
sub
jnp
notb
sub
push
into
insl
xor
incl
jnp
sarb
pop
test
pop
adc
stc
das
inc
sbb
pop
push
jnp
test
push
jae
jle
sub
jnp
ss
cltd
jnp
xchg
icebp
les
jnp
add
jnp
push
pusha
cmp
int3
pop
jnp,pn
movsb
pop
fsubp
sub
sub
mov
pop
popf
cmp
push
and
pop
data16
pop
and
popa
jae
push
add
xchg
sub
sbb
jno
subl
push
fmuls
jnp
add
sub
xchg
lock
sbb
in
inc
pushf
je
int
fdivrl
les
nop
dec
fidivrl
mov
ljmp
cmp
push
into
xchg
jnp
ffree
loope
sub
testl
xlat
adc
fiaddl
or
inc
cmp
loop
push
mov
jecxz
dec
xlat
mov
js
jnp
cmp
sbb
imul
repnz
mov
mov
jo
imul
aas
aad
jns,pn
mov
leave
xor
cli
sbb
sub
jnp
rcr
int3
arpl
ljmp
or
cmp
sbb
push
loopne
dec
push
jl
cmp
dec
xchg
daa
decl
jnp
mov
add
ret
sub
fstpt
jnp
mov
pop
lods
enter
lods
icebp
inc
xchg
outsl
adc
rol
out
and
jnp
scas
xchg
xor
jl
loop
mov
insl
pop
gs
jnp
dec
xor
xor
and
jge
add
enter
outsb
sbb
mov
js
stos
xchg
cltd
and
mov
lret
xor
clc
jnp
mov
inc
jnp
add
cmpsl
lret
cmp
outsl
rorb
mov
outsl
daa
jnp
dec
call
bound
sbb
jge
push
dec
sarb
xchg
sub
testl
or
lret
subl
movsb
repz
fstpt
repnz
stos
in
sbb
push
test
ja
lods
insb
jnp
jb
and
enter
xor
mov
imul
or
xchg
pop
cmp
aas
mov
out
ret
aam
lahf
ficoml
push
mov
push
jnp
in
xor
pop
imul
js
adc
and
mov
fidivs
push
sub
cld
jle
jb
lods
aaa
pop
sub
bound
jnp
or
mov
jmp
aas
into
cmpsb
jae
xchg
cld
aad
sbb
in
ja
adc
ss
mov
fs
nop
dec
aas
int3
ds
andb
ja
mov
jnp
mov
in
jnp
lahf
rcrl
xor
lea
dec
dec
mov
and
mov
lret
aad
or
dec
jecxz
pop
jnp
mov
mov
in
jnp
xor
insl
popa
or
ficoms
xchg
addr16
orb
lret
fnsave
shlb
sbb
cwtl
sub
aas
aaa
jne
cmp
out
push
mov
test
mov
iret
xchg
push
sub
jnp
pop
mov
mov
fdivs
dec
inc
inc
fnstenv
stos
cli
dec
and
scas
outsl
add
mov
xchg
pop
xor
lret
pop
or
fsubr
and
cltd
andb
jnp
xchg
xor
mov
fiaddl
jae
jge
jl
sbb
mov
repz
lcall
xchg
dec
lock
pop
jnp
sbb
dec
imul
sbb
dec
or
aad
mov
jns
jnp
push
dec
xchg
scas
xor
cmc
jecxz
push
sti
decb
pop
add
jnp
mov
jnp
les
mov
ljmp
jnp
adc
jp
outsb
mov
dec
fmuls
orps
out
loopne
test
js
icebp
mov
sub
push
popa
inc
jnp
adcb
jnp
popf
test
outsl
std
mov
jnp
lret
aam
popa
cmpl
enter
xchg
sti
jnp
in
and
lret
jnp
aam
ja
out
jno
jnp
stos
mov
fs
jnp
lea
outsl
lods
mov
ss
jnp
mov
adc
in
jnp
sub
cmp
insb
ja
dec
mov
sbb
enter
push
inc
ja
add
fisttpll
jnp
inc
cld
push
cmp
cs
dec
pop
push
lahf
stos
fwait
gs
or
stos
jmp
arpl
rorl
push
lds
int3
adc
mov
rorl
imul
call
or
mov
out
call
and
inc
xlat
lock
lret
jmp
and
xor
push
cmp
and
xlat
imul
xchg
test
xor
xor
leave
sarl
sahf
xchg
repz
sbb
clc
jnp
cs
scas
fisubrs
or
push
xor
lds
lea
cmp
outsb
sub
das
mov
pop
mov
jl
mov
gs
pop
int3
xchg
leave
pop
repnz
addr16
jnp
lock
sub
push
dec
jnp
loop
adc
add
lret
je
xor
jmp
sbb
jnp
insl
inc
mov
dec
cmp
jae
xor
test
mov
cmp
jmp
nop
and
jnp
imulb
cli
arpl
minps
inc
sub
sbb
adc
fwait
pop
mov
dec
outsl
fwait
add
sbbl
pop
ss
push
insb
xor
jae
sub
sub
jb
push
jg
or
insl
inc
xchg
shlb
pop
aad
fwait
and
jnp
jmp
pop
ss
cltd
dec
xor
jnp
daa
lcall
rorl
push
xchg
aad
pop
xchg
or
js
dec
int3
jnp
enter
icebp
mov
jnp
cld
mov
jo
imul
mov
out
pop
loop
adc
push
lahf
dec
lret
add
pop
jb
sub
in
fs
pop
dec
js
leave
enter
xor
test
push
cltd
lock
pop
cmp
and
cmp
testl
int
or
imul
icebp
sbb
pmaxsw
inc
dec
repz
inc
mov
sbb
sbb
mov
daa
insb
shlb
jg
xchg
int3
sbb
or
mov
jnp
ss
xchg
fisttpl
jnp
out
sub
loop
or
in
fdivl
ja
adc
xlat
insb
xor
outsl
jo
pop
ret
addb
dec
jae
mov
imul
dec
imul
into
jnp
out
sbb
adc
cli
ss
out
pop
cmp
cmpsb
dec
pop
adc
arpl
mov
neg
imul
outsl
cmp
imul
and
js
outsl
mov
imull
int
cmp
lods
mov
frstor
aaa
dec
xor
mov
jnp
cmc
lahf
cld
cmpsb
cmp
test
aad
mov
inc
pop
cmp
pop
xor
and
movsb
stos
pop
mov
xor
mov
stc
and
sahf
iret
loope
inc
and
sbb
mov
int
pop
mov
jne
lea
mov
clc
sbb
mov
rolb
aam
pop
fisubrl
loope
sub
adc
jnp
inc
ds
or
jnp
add
jnp
hlt
cmpl
mov
sub
out
or
jnp
dec
lcall
out
push
jl
adc
xlat
iret
pop
imul
cld
andb
xor
jnp
call
adc
insl
jb
inc
cwtl
jnp
xchg
jo
jp
and
sbb
jbe
xorl
test
mov
jmp
inc
push
xchg
jnp
imul
or
and
out
fcmove
cltd
nop
addl
adc
repnz
pop
jecxz
or
inc
in
sbb
mov
popf
jbe
sbb
push
jnp
mov
or
push
dec
lahf
pop
scas
xchg
aas
cs
ja
push
adc
stos
pusha
fnstcw
mov
imul
shrl
push
mov
inc
xchg
xchg
movsb
loop
jae
stos
mov
nop
test
repnz
ja
fwait
jnp
inc
popa
mov
xchg
sub
mov
mov
cltd
cmp
dec
dec
loop
movsl
push
mov
test
xchg
test
sbb
bound
in
mov
pop
cltd
jnp
insl
roll
in
jno
test
out
cmp
test
or
jp
jns
stos
aaa
push
mov
inc
jnp
cmpsl
push
mov
repnz
pop
fdiv
imul
adc
test
cmp
movb
fildll
data16
inc
push
adc
inc
lock
cwtl
out
xchg
lds
imul
and
arpl
mov
or
sub
lods
divb
mov
out
cmpsl
sahf
sar
jae
xchg
cmp
xor
dec
out
push
mov
jns
sub
inc
es
int3
test
jnp
xchg
je
jle
xchg
dec
jnp
push
cld
xor
mov
mov
jnp
xchg
jns
mov
sahf
adc
push
sub
ficoms
xchg
add
inc
xorb
jnp
rorb
jnp
jle
sub
imul
mov
pop
lret
ret
inc
jne
mov
jmp
xchg
mov
or
mov
loope
mulb
sbb
fsubs
testl
jnp
xor
mov
sbb
adc
inc
jle
out
addr16
das
andb
pop
jp
orb
je
jnp
cs
sbb
mov
cmp
mov
xlat
repnz
testb
and
mov
pop
mov
ret
cmp
jg
outsl
jmp
xor
or
sbb
xor
sbb
jbe
mov
test
inc
xchg
or
or
sbb
pop
mov
dec
dec
stos
cmpl
js
add
mov
imul
outsl
push
jmp
dec
push
sub
dec
addr16
repnz
or
gs
jg
push
xor
mov
jnp
add
mov
or
ja
pop
cmp
push
icebp
sub
jp
jbe
mov
andl
jle
loop
popa
xchg
inc
test
cmp
dec
jb
dec
fstpl
push
cli
imul
ja
xchg
jge
push
sub
xchg
cs
sbb
lret
sub
hlt
jnp
aaa
test
cmc
jnp
cmp
mov
mov
or
jnp
fldl
mov
jnp
sub
ljmp
xor
xor
dec
and
inc
mov
pusha
fsub
and
jnp
in
ss
arpl
ret
add
les
imul
mov
jne
jmp
sub
into
int
sbb
mov
push
push
imul
int3
push
lret
insb
aas
repnz
and
sbb
pop
cmp
mov
mov
imul
inc
xchg
cmp
and
jge
mov
lahf
in
lods
fst
sub
push
dec
pop
pop
pop
push
es
ja
out
fistpll
sbb
sbb
lret
cmp
pop
nop
jae
add
cmp
jmp
jnp
jle
xor
shrl
bound
mov
jnp
inc
xchg
mov
dec
clc
jnp
stos
cmpsb
pop
push
aad
mov
xchg
ss
and
and
dec
imul
mov
sbb
lods
xchg
aas
jnp
sub
mov
push
test
jo
jnp
mov
inc
pop
dec
cld
jnp
clc
lea
jnp
add
mov
scas
repz
fcomps
mov
imull
loope
lea
push
adc
sbb
ds
pop
sarl
sub
push
jnp
out
loopne
cmp
inc
mov
push
xchg
ja
jns
pop
aad
mov
out
jnp
jmp
subl
push
cld
and
loope
outsl
or
xor
sub
mov
jnp
inc
sub
jo
xchg
jnp
xor
add
dec
jnp
cmp
adcl
lods
imul
pop
jnp
pop
jns
sbb
pop
shr
jae
jb
fwait
scas
pop
mov
xchg
xor
popf
loopne
subb
cmp
jecxz
mov
or
sbb
shlb
jnp
sub
cmp
repz
imul
fldcw
mov
xchg
lods
adc
cwtl
shr
iret
stc
jne
dec
lcall
test
outsl
clc
shll
jo
ljmp
jecxz
roll
cli
inc
sub
xor
sbb
clc
jns
xor
je
sbb
shll
pushf
jnp
pop
xchg
lret
jnp
scas
mov
in
fidivrl
aam
insl
push
std
mov
jns
jnp
lds
pop
sbb
pop
add
mov
xchg
push
xlat
aas
jnp
insb
mov
dec
jnp
jl
xchg
sahf
inc
cmp
sbb
lea
lods
jnp
adc
lret
rcl
cli
sub
add
andl
jns
in
fsubrl
out
lret
rclb
jnp
push
incl
js
lret
dec
mov
sub
aas
lock
add
sbb
mov
jnp
xchg
arpl
jnp
out
lds
std
mov
cmp
movsb
xchg
pop
inc
pushl
lds
or
mov
adc
loop
inc
cmp
in
and
and
mov
sahf
inc
xchg
push
jnp
mov
mov
lret
jnp
outsb
xchg
or
imul
add
test
dec
add
arpl
cs
mov
sbb
or
mov
mov
sbb
imul
pop
jecxz
mov
dec
gs
out
mov
mov
mov
or
jo
out
sub
mov
jnp
rcrl
jmp
sbb
jnp
jg
cltd
sub
sub
dec
and
pop
sub
bound
mov
shrb
pop
or
adcb
aam
cmpsl
or
cmp
sbb
xchg
adc
cmp
loop
loopne
push
push
sbb
xchg
dec
or
add
fs
jne
sub
daa
mov
jb
pop
addr16
dec
out
enter
cltd
outsl
push
add
pop
jnp
or
jnp
xchg
imul
jnp
arpl
mov
adc
lret
cltd
pop
xor
jbe
ss
js
fnsave
out
loop
push
or
sub
xor
js
filds
arpl
cmpsl
or
pop
scas
mov
sub
popf
aam
insl
and
xor
cmp
jl
outsl
add
jnp
orb
fnsave
and
dec
and
inc
mov
jnp
fildl
jge
sub
inc
scas
sub
pop
imul
nop
or
scas
dec
fsubl
popf
jns
jnp
int3
mov
mov
mov
dec
fstl
jnp
cmp
jns
push
jnp
out
orb
lea
cmpsl
mov
pop
imul
xchg
repnz
adc
sub
sti
pop
push
dec
jnp
adc
sub
lret
out
in
jnp
push
cmp
sar
adc
inc
mov
mov
dec
cltd
jno
movsl
outsb
sub
mov
sub
pop
or
mov
imul
pusha
mov
adc
sbb
jbe
iret
jnp
popa
data16
stos
test
inc
sbb
outsl
push
lret
cmp
jnp
popf
jae
ljmp
cs
push
das
dec
push
jle
lock
lods
adc
pop
or
jnp
mov
cmc
add
and
popa
dec
or
loop
xor
or
test
sbb
xor
mov
and
jne
fmuls
and
xor
pop
push
add
xchg
subl
pop
mov
fisubl
lea
jge
rolb
xor
jnp
add
mov
jnp
sub
cmp
bnd
xorb
loope
xor
jnp
rcrb
adc
pop
nop
jnp
insl
out
or
jns
jae
popf
cmp
ja
or
mov
push
mov
jae
pop
enter
cwtl
lret
repnz
out
sub
test
xchg
fisttpll
iret
or
jo
xor
int
and
xchg
xchg
inc
das
jnp
inc
mov
jnp
sub
jns
insl
dec
or
loope
add
mov
xor
jp
les
insb
dec
ror
leave
jnp
repnz
sub
inc
jnp
fidivrl
mov
sbb
aaa
ja
add
jecxz
adc
in
jae
lahf
test
pop
mov
outsb
and
decb
pop
jnp
xchg
mov
pop
andl
pusha
cltd
dec
loop
mov
imul
sbb
push
xor
sar
shrb
jnp
push
dec
sbb
fsts
stos
add
inc
pop
jno
aaa
out
imul
jnp
adc
xchg
jne
mov
jp
ret
jl
fsub
push
imul
test
pop
sahf
xchg
popa
xor
out
outsl
jne
jnp
ret
xchg
jmp
in
sub
jnp
push
movsl
mov
mov
std
cmp
imul
jno
out
in
jnp
inc
pop
insl
cmp
mov
dec
jnp
and
or
or
cmc
test
lcall
dec
imul
ret
adc
repz
or
fsub
adc
aas
aad
jnp
xor
shl
fdivrl
push
icebp
aas
mov
mov
adc
rclb
xchg
xrelease
sbb
or
adc
lds
push
shll
jae
into
jne
jae
cmp
cmp
arpl
inc
mov
mov
cld
inc
push
lahf
jae
mov
jnp
and
pop
icebp
dec
ret
cmp
xchg
lcall
mov
adc
xchg
jecxz
hlt
les
pop
mov
sti
dec
or
sahf
mov
pop
int
sub
push
add
in
mov
neg
and
add
add
cmp
lea
fbstp
sub
xor
mov
sub
mov
stos
push
sbb
xchg
jle
fwait
lds
int3
jnp
mov
dec
inc
dec
fsubrs
and
add
push
jnp
shr
jb
add
jnp
loopne
nop
jne
clc
testb
pop
aad
into
lock
scas
mov
fwait
imul
pop
cs
je
mov
push
xchg
mov
sub
pop
outsl
jnp
cmp
cmp
and
pop
mov
insb
xor
jo
mov
enter
int
push
std
aas
jnp
mov
fmuls
subb
push
mov
leave
xchg
cld
jne
testb
call
sub
xchg
jns
lret
mov
mov
jmp
jge
or
dec
dec
int3
mov
xor
sub
adcl
add
adc
decl
sub
in
int
enter
jne
jle
jne
mov
shll
xor
push
jnp
andnps
popf
jge
loop
mov
add
stos
sub
dec
js
ja
jg
jbe
cmpsl
push
fldcw
ljmp
mov
imul
fs
lret
push
jae
shl
mov
leave
popf
mov
or
add
fsubrp
in
jnp
imul
fs
cmpsb
dec
dec
jnp
outsl
xor
jecxz
cmp
sub
xor
dec
adc
xchg
jnp
xchg
mov
add
pusha
sub
inc
imul
jmp
add
or
jnp
push
xor
jnp
xor
in
aam
adc
jnp
cmp
insb
and
lock
jge
xor
jnp
cmpb
sbb
pop
outsl
xchg
pop
sahf
mov
or
add
lahf
xlat
dec
jnp
lcall
sbbb
mov
mov
ja
jno
sbb
xchg
jb
and
jnp
loope
sub
adc
push
jnp
les
pop
sbb
jnp
insb
out
fisubl
ds
mov
cmp
jnp
cmc
push
in
cmpsl
cmpsb
lods
mov
push
insb
or
mov
inc
dec
test
loopne
arpl
xlat
lods
push
dec
jnp
cmp
jbe
lret
sub
mov
scas
mov
push
adc
xchg
pop
fs
jnp
clc
lea
mov
xor
jnp
cmp
or
fdivl
sub
std
lock
leave
adc
jl
shrb
popa
cmp
push
jnp
test
jl
push
jnp
sbb
xor
pop
les
mov
jnp
push
in
test
or
pop
iret
ret
loope
cld
add
jge
jnp
dec
mov
jnp
adc
pop
inc
fsubl
divb
jnp
pop
and
fstpl
dec
jnp
mov
adc
imul
dec
cmp
je
inc
sbb
leave
pop
shrl
and
rorb
mov
mov
mov
jnp
pop
aaa
jnp
fcmovnb
jecxz
xor
mov
jnp
ja
cli
aas
pop
aaa
xchg
imul
dec
divb
orb
cwtl
xor
mov
add
xchg
in
ret
xchg
fistpl
pop
and
pop
cmp
mov
xor
pop
jl
mov
ljmp
aas
fimull
cmc
cld
and
ja
push
addr16
and
test
mulb
imul
lods
xchg
mov
sub
nop
push
in
inc
jae
shll
ffree
jb
std
iret
dec
ja
int
mov
out
sub
xchg
mov
add
scas
jno
push
or
push
jge
jne
ret
jnp
in
xor
sub
or
xor
jo
mov
jne
js
ja
push
fstps
pushf
jbe
jnp
sarl
mov
jnp
cwtl
xor
aad
and
jnp
lahf
jge
jg
dec
inc
jnp
and
test
sub
fldt
loopne
add
mov
movsb
xlat
mov
jnp
jl
fwait
add
sub
dec
neg
add
sbb
into
add
jnp
and
push
mov
int3
xor
adc
inc
sbb
add
mov
dec
fwait
mov
mov
pop
mov
mov
subb
dec
push
int
jmp
out
add
adc
jnp
hlt
inc
sahf
lret
into
pop
int
xor
fdivs
inc
jnp,pn
fisubrs
rclb
sbb
sub
outsb
ja
subb
repnz
pop
jae
ss
mov
xlat
int3
mov
gs
fdivrs
mov
pop
dec
jnp
test
dec
jmp
lret
xor
das
int3
push
insl
imul
add
jns
pop
loopne
out
nop
jae
ss
adc
imul
ret
test
or
mov
fwait
xlat
pop
inc
jnp
adc
mov
jnp
loopne
xchg
rcrl
ss
scas
and
daa
mov
add
imul
add
mov
mov
scas
stc
jae
addr16
cmp
popl
push
mov
xor
jnp
fs
mov
jnp
sar
fsubs
add
stc
outsl
das
sarl
xchg
jmp
shll
dec
pop
addr16
outsl
shrb
sub
xchg
push
sub
mov
cs
push
cmp
cmpsl
pop
fmul
ja
mov
push
inc
insl
lds
mov
ja
push
push
push
xor
loop
xchg
add
dec
sub
outsb
jb
lcall
outsl
adc
orb
cmc
scas
out
mov
lds
jb
sbb
into
hlt
jnp
pop
or
int3
sbb
pusha
add
cmp
jae
stos
fucomp
ljmp
les
xor
jg
jae
jmp
stc
in
jnp
loop
pop
mov
mov
cwtl
xchg
mov
out
cmp
jbe
in
sub
movsb
mov
jae
jnp
orl
sub
or
jnp
push
lods
sbb
adc
imul
and
inc
pop
jns
push
or
mov
jae
lret
dec
notb
xor
jle
loop
dec
pop
or
mov
stos
test
pushf
test
mov
pop
dec
fucomip
outsl
in
jp
cmp
fsubrs
jne
pop
mov
mov
xchg
jb
xor
jnp
push
aad
lods
hlt
jnp,pn
bound
push
mov
ret
mov
ljmp
fildll
jnp
lret
xorb
cltd
jmp
out
cmpb
fldl
in
jnp
xlat
sbb
and
sbb
inc
push
jecxz
call
pop
jmp
sti
outsl
cltd
cmp
dec
mov
ss
imul
inc
out
sarb
adc
in
sub
loope
insl
push
adc
stc
sub
cmp
insl
repnz
push
les
push
jae
call
dec
insb
mov
outsl
push
dec
fs
add
xchg
jb
imul
add
in
jnp
movsb
dec
xor
loopne
xor
pop
cmp
jge
inc
repz
ja
and
nop
dec
inc
jnp
arpl
lods
lret
in
xchg
pop
jnp
mov
sbb
jnp
cmpsb
sbb
pusha
icebp
jnp
mov
fidivl
jnp
dec
or
and
cmp
imul
jecxz
cltd
mov
mov
out
ja
sub
pop
pusha
punpckhdq
pop
jne
fistpll
pop
mov
jnp
xor
je
jmp
nop
stc
mov
sub
fldenv
xor
adc
xlat
or
push
fadds
mov
xor
mov
test
xor
adc
push
mov
outsb
ret
in
inc
call
jae
movsl
xchg
adc
mov
add
xor
mov
mov
into
ds
inc
add
or
fbstp
and
push
mov
cmp
jnp
test
scas
mov
inc
jo
jnp
push
or
test
push
pop
repz
jnp
mov
sarl
adc
lahf
xor
push
rcr
mov
dec
shl
lods
les
aad
aaa
jno
lret
push
mov
addb
jmp
mov
lahf
aas
fwait
shlb
jb
jnp
std
popa
imulb
cmp
pop
mov
or
jmp
jnp
in
out
int3
clc
pop
adc
inc
mov
pop
and
insl
sarb
mov
std
sub
popf
jnp
xchg
cltd
mov
or
test
pop
xchg
mov
ss
lds
or
jnp
lods
inc
sub
int
dec
mov
fldcw
scas
inc
int3
jnp
add
xchg
shlb
outsb
xchg
mov
push
push
pop
add
shlb
test
es
out
lods
cmp
imul
dec
jne
lock
lahf
lea
fsubs
sbb
add
pop
adc
outsl
mov
or
and
dec
xchg
jne
rcrb
jnp
scas
mov
in
or
mov
or
fstl
jae
scas
cmp
xlat
jns
add
add
cmp
dec
xchg
jnp
or
loopne
mov
push
sbb
les
pusha
xchg
xor
pop
cmp
fistps
stos
adc
xor
lret
aas
add
mov
fcmovne
sbb
mov
jno
ret
and
add
sbb
jge
push
jmp
sbb
sahf
add
jae
addb
push
and
test
sbb
pop
jnp
mov
lock
pop
enter
icebp
xchg
rcrl
out
int
lea
or
stos
dec
loop
add
jmp
pop
fwait
movsl
jnp
push
in
jb
fcom
js
jns
enter
mov
mov
dec
scas
fisttpl
mov
flds
sub
lret
je
jnp
hlt
outsl
cs
popf
and
jnp
int3
cmp
xor
loop
pop
jnp
test
inc
in
jnp
mov
dec
add
jns
test
jp
xchg
jnp
cli
xor
jl
repnz
dec
mov
push
pushaw
out
adc
fnstcw
xchg
and
imul
sti
add
sbb
jne
imul
adc
shl
inc
push
divl
dec
fnstcw
cmp
insb
cs
frstor
aas
arpl
pop
iret
jns
jg
xchg
orb
imul
mov
xchg
outsl
repnz
mov
mov
fistpll
push
ss
adc
stc
pop
movsb
out
inc
xor
pop
pop
mov
jb
scas
xchg
jnp
cmp
xlat
sti
sbb
out
sbb
push
ss
enter
jb
pop
lods
add
jbe
bound
sahf
outsl
les
mov
lret
pop
fistl
idivb
or
xchg
pop
ss
xor
jb
jnp
adc
mov
mov
mov
jbe
sar
and
push
mov
dec
sub
mov
cld
stc
pop
or
shrb
mov
clc
push
out
jnp
mov
rclb
popa
mov
enter
inc
jmp
bound
fsubrs
out
iret
jnp
sub
adcl
in
add
fs
enter
int
xchg
mov
lret
jae
test
jno
push
iret
stos
test
outsl
jle
xor
fwait
inc
ljmp
in
repnz
mov
arpl
sub
cmp
cmpl
cmpsl
mov
or
icebp
pop
cmpsb
sbb
and
jnp
repnz
push
mov
adc
daa
insb
je
fdivrs
mov
cmp
mov
mov
shlb
inc
cmp
lock
int
jnp
pop
cli
sbb
pop
xor
imul
outsb
xor
mov
lcall
in
test
ror
jle
stc
jae
mov
sahf
out
push
jae
mov
je
repnz
ljmp
insb
xchg
inc
and
cmc
pop
jp
push
mov
jo
xchg
mov
pop
in
repz
cmp
jmp
testb
xchg
jnp
jns
ret
ss
in
jnp
aam
mov
imul
pop
lcall
mov
jp
xor
mov
int
lea
add
and
sbb
or
pop
test
cli
jnp
mov
ftst
and
loop
ret
dec
imul
sbb
pop
dec
jne
rorl
mov
add
jle
into
xor
imul
or
mov
mov
je
imul
push
rclb
sbb
lret
movsl
jnp
add
sbbl
sbb
aas
fdivrl
cmpsl
outsl
icebp
testl
mov
cltd
jno
jge
out
pop
clc
adc
inc
insb
sarb
dec
inc
and
push
mov
dec
jo
mov
jbe
repnz
mov
pop
aaa
push
mov
xchg
in
lret
sti
imul
xor
inc
sahf
jns
ret
int
inc
out
add
xor
mov
mov
sub
pusha
cld
sub
das
cmp
pop
in
shll
cvtps2pd
lret
mov
mov
std
out
push
add
jnp
xchg
fsubp
cs
mov
lcall
mov
lret
pop
add
sub
jmp
sbb
outsl
sbb
int
sub
mov
add
pop
dec
jnp
mov
lock
jnp
sub
cmp
mov
nop
rorl
test
mov
mov
sbb
add
insl
hlt
and
add
call
mov
xchg
mov
inc
sarb
sbb
call
jnp
mov
jmp
js
insb
imul
imul
jb
sbb
stos
mov
push
jae
in
add
or
mov
cmp
adc
dec
mov
scas
jae
jmp
push
in
pop
push
rorb
jnp
sbb
movsb
dec
cmp
enter
icebp
xor
testl
jne
push
dec
jnp
xor
mov
lods
jnp
sub
adc
push
jno
jnp
jp
sub
roll
lods
dec
outsb
cwtl
pop
in
stos
cltd
js
jge
pop
push
sub
mov
pop
insb
jnp
inc
inc
dec
hlt
test
and
int3
jnp
push
cli
add
lcall
ret
fwait
jnp
std
dec
or
mov
adc
mov
test
add
cltd
jl
fnstsw
mov
jnp
or
loopne
sub
int3
jnp
mov
sti
test
movsb
cltd
imulb
invd
hlt
ret
sub
imulb
movsl
push
sbb
and
insl
insb
fsubrs
jnp
adc
pop
mov
xchg
idivl
loop
les
or
xchg
sub
lcall
jno
addb
ret
or
push
pop
scas
xor
test
mov
mov
dec
enter
les
push
jnp
sub
aaa
xchg
jle
iret
dec
lods
scas
fs
push
or
pop
mov
cmc
insl
and
popa
aad
daa
add
or
jnp
mov
dec
sbb
pop
push
cmp
jns
mov
cmp
jnp
jmp
mov
jnp
mov
lret
cmp
cmpsl
cwtl
jnp
mov
ljmp
lea
stc
insl
clc
or
mov
rcrb
dec
das
jo
outsb
dec
jnp
loope
testb
adc
jnp
mov
mov
dec
cmp
sbb
push
lock
std
dec
add
jnp
mov
sub
add
imul
in
scas
push
add
ret
sti
fildll
iret
sub
js
pop
imul
cmp
call
insb
mov
ret
jo
jae
and
in
jmp
dec
and
aaa
jns
fildll
out
jnp
test
cmp
add
lods
shll
imul
sahf
cwtl
or
mov
pop
aaa
dec
rcrb
loop
out
pop
or
inc
cmpsb
jb
ja
nop
or
inc
sub
pop
lret
or
jnp
inc
pop
sub
pop
mov
inc
jnp
xchg
xor
or
shld
inc
jp
sub
jnp
push
jl
jge
xor
jg
in
jmp
inc
or
pop
dec
inc
sti
das
or
add
mov
lock
jne
mov
ljmp
push
jnp
jg
xor
ror
lods
jnp
lods
sbb
lret
aam
outsl
std
lds
pop
jnp
xor
in
and
jnp
cmp
dec
jnp
jno
dec
sbb
and
xchg
and
lds
test
subl
xor
fldcw
out
mov
jmp
test
add
in
jnp
sub
pushf
sub
mov
icebp
in
mov
jnp
idivl
xchg
push
cmp
mov
mov
je
loopne
sbb
xor
push
push
stos
sub
test
jno
pop
mov
adc
movsb
bound
mov
cli
mov
push
testb
jo
jnp
cmp
test
mov
dec
sbbl
jmp
subl
aas
movsb
shrb
and
aaa
dec
or
outsl
loopne
repnz
sbb
jns
cmpsl
pop
xchg
pop
out
enter
in
dec
ss
sbb
int
adc
imul
cwtl
dec
cs
and
or
adc
jns
inc
jno
jp
outsb
imul
and
in
cld
sub
fnsave
mov
gs
mov
cmp
std
imul
lods
sarl
add
jb
ja
lahf
sub
jbe
insl
cld
leave
inc
jo
dec
loop
fwait
popa
jge
imul
pop
sbb
mov
ret
lret
inc
pop
lods
shll
xor
jbe
xor
fdiv
int
je
add
lret
cmp
add
insl
aaa
cmp
dec
or
cltd
mov
mov
add
fs
cmp
lcall
add
mov
addr16
jnp
scas
lods
pop
push
leave
jne
or
ja
stos
sub
aad
jo
cmp
add
add
pop
cld
jmp
sbb
rcll
jge
cmp
jae
das
add
subb
cmp
jnp
outsb
push
mov
scas
pop
xchg
jnp
xchg
icebp
mov
mov
mov
mov
pop
xor
loop
scas
cmpsb
adc
jnp
push
dec
mov
xor
test
pop
sub
cmpl
in
mov
jnp
imul
movsl
lock
push
pop
mov
jnp
popf
incl
int3
jge
jnp
cmp
sub
test
inc
push
dec
pop
arpl
lods
jns
in
stc
sub
pop
dec
cmp
jl
jae
outsb
mov
sbb
imul
test
sbb
out
imul
jnp
jb
ret
jns
jb
imul
daa
dec
jne
cmp
insb
addr16
bound
stos
les
pop
mov
lea
fwait
mov
gs
dec
and
jnp
leave
insl
out
cmp
xor
jnp
xlat
pushf
outsl
pop
mov
sub
fisttps
movsb
inc
jnp
adc
clc
cmp
push
data16
pop
pop
stos
xor
gs
ja
push
mov
push
cmp
lods
fildll
mov
jbe
incl
mov
mov
cmc
mov
cmpsb
sbb
and
jnp
add
or
jnp
das
sbb
jp
out
jnp
movsl
jbe
adc
mov
popa
adc
fisubl
sti
je
push
adc
out
mov
sarb
pop
stos
mov
jnp
mov
jmp
imul
add
aaa
inc
pop
or
jae
adc
jnp
lret
and
repnz
sbb
dec
jg
subl
pop
mov
and
jae
lods
repz
fwait
mov
cwtl
imul
dec
xorb
add
dec
push
cld
dec
mov
push
test
push
dec
scas
adc
cmp
inc
and
jnp
push
add
lret
jnp
outsl
xorl
fsubrs
cmpsl
pop
xor
xchg
jnp
iret
sub
jnp
ucomiss
jb
dec
test
or
mov
mov
arpl
outsb
cmpsl
jnp
or
inc
add
cld
ja
or
pop
shrl
pop
xor
sti
jnp
dec
inc
cmp
lahf
xchg
lret
sub
sti
pusha
cwtl
stc
stos
mov
jnp
mov
decb
xchg
mov
mov
ljmp
test
xchg
inc
sbb
sbb
andb
dec
jnp
in
push
inc
cmp
mov
mov
outsl
adc
popa
mov
pop
sbb
in
ret
jnp
pop
jg
xorl
jnp
cmp
es
icebp
std
xlat
jnp
in
sub
sbb
frstpm(287
pop
imul
test
dec
inc
scas
jno
lret
and
sarl
push
repnz
fisubrl
mov
mov
cs
sbb
rcrb
push
movsl
xchg
cld
pushf
cmpsb
jne
shl
pop
push
arpl
fstpt
mov
xchg
adc
mov
fsubrl
repnz
les
inc
fs
imul
sub
in
jnp
and
hlt
cmp
mov
mov
push
in
mov
jmp
inc
negb
push
inc
or
jnp
cld
decl
aad
or
out
jb
cmp
pop
in
jno
dec
clc
lret
lock
shlb
in
js
dec
dec
inc
xchg
jae
mov
jnp
inc
push
js
xchg
cmp
jl
fchs
xor
or
out
sahf
or
mov
jnp
add
dec
cs
les
mov
jae
or
adc
sbb
jnp
ljmp
jnp
sub
aad
mov
jnp
scas
mov
pop
add
in
jb
xlat
gs
or
repz
fisttps
les
fcoms
cli
push
lret
lcall
imulb
addb
jae
jne
fnstsw
and
pop
cld
jnp
fwait
mov
in
js
dec
jnp
jmp
pop
mov
mov
jno
lret
jbe
loop
jnp
push
pop
aad
add
subl
mov
fwait
dec
ficompl
outsb
mov
mov
sub
js
lcall
xchg
jnp
pushf
dec
mov
sbb
pop
mov
out
out
addr16
lds
dec
jae
mov
leave
jl
pop
ss
inc
jnp
scas
stos
mov
xor
cld
lsl
add
mov
lods
stos
jmp
xor
test
loop
jnp
sbb
sub
push
add
in
pop
in
jnp
mov
pop
adc
ss
lcall
pop
out
sbb
jae
mov
cmp
lret
jnp
xor
xor
cmp
jo
mov
nop
outsl
xor
call
out
int
cmp
imul
imul
cltd
jno
outsl
pop
stos
push
mov
hlt
jnp
mulb
int3
test
into
repnz
cmp
jne
and
movq
jno
jns
repz
sub
and
test
pop
mov
test
jnp
lds
loopne
pop
jnp
ret
call
mov
movsb
clc
lods
insl
jae
sbb
xchg
or
mov
fdivrp
in
pusha
div
mov
clc
pop
xchg
insb
scas
sub
repnz
sbbl
fidivrs
scas
fsubs
mov
lock
leave
loop
dec
jo
add
out
lea
pop
jo
imul
xor
jbe
mov
mov
sub
adc
cmp
jns
lret
jae
cs
inc
push
cmp
jnp
stos
mov
loopne
bound
fimull
jnp
pop
in
cmc
lret
add
inc
ret
xor
js
or
das
xrelease
iret
jnp
mov
sbb
mov
imul
shlb
jbe
outsl
pop
insb
jnp
mov
dec
lcall
add
into
xor
pop
cltd
xor
and
jb
jne
mov
insl
fsubl
dec
rorb
xchg
xor
dec
ja
sarb
mov
inc
jae
fldl
lcall
aad
xor
mov
cwtl
mov
and
jnp
ljmp
jnp
xor
into
mov
xchg
shlb
test
cmp
insl
mov
or
fnsave
jne
mov
call
jae
pop
pop
inc
aaa
jnp
mov
out
and
mov
lret
or
jle
lods
or
in
les
pop
jnp
repnz
je
mov
xor
push
cld
das
or
jnp
cs
xchg
outsl
mov
lret
jnp
scas
push
jbe
and
jnp
or
ja
jb
pop
jnp
in
cmp
pop
movsl
sti
mov
andb
inc
mov
int
jnp
lcall
jnp
adc
lea
cmpsb
gs
inc
lret
in
jmp
popf
fsubrp
jo
pop
imul
pop
sub
sub
jp
cmpsb
cli
es
les
imul
dec
imul
movsb
lods
cmc
xchg
jnp
cmpsb
add
nop
jnp
pop
int3
and
lahf
mov
cmp
sub
loopne
into
in
fstpt
pop
inc
call
sub
lods
jno
dec
jnp
and
or
sbbl
xor
movsl
pushf
push
lods
dec
xor
ret
fs
in
arpl
rcrl
add
xor
inc
xchg
mov
mov
cli
xchg
xchg
pusha
je
dec
mov
jmp
pop
push
in
das
push
in
jnp
imull
xor
and
jnp
mov
fwait
adc
in
jnp
shr
test
cmp
cmp
cmpsl
and
cmp
jmp
pop
jae
out
jl
imul
inc
mov
fstpt
jnp
dec
fisubrs
pop
xchg
sub
jnp
test
in
xor
xchg
sub
pop
jno
es
jnp
pushf
scas
jae
fistl
iret
mov
imul
stc
mov
jo
pop
adc
lods
cmc
inc
pop
hlt
int3
jnp
mov
jae
jnp
pop
addb
cmpsb
cs
loopne
gs
jnp
sbb
xbegin
lock
cli
jnp
lahf
mov
cmpsb
jnp
into
xor
jmp
sbb
mov
mov
jb
and
pop
lock
mov
lods
clc
adc
jl
jns
popf
movb
jne
insl
shrl
sbb
cltd
cmp
cmp
xchg
hlt
loopne
mov
aaa
sbb
mov
mov
pop
cmp
jnp
out
mov
imul
gs
dec
mov
ret
adc
sbb
leave
lods
xchg
ja
cli
dec
or
jl
mov
jnp
rol
in
add
xchg
jnp
les
push
jmp
jns
insl
adc
dec
fildll
lahf
mov
inc
sbb
xlat
imul
jnp
cmpsb
cld
outsb
call
lcall
mov
icebp
mov
cmp
pop
pop
jnp
xchg
xor
bound
cmp
or
xor
push
push
stos
cmp
lret
ds
jnp
cmc
mov
hlt
mov
scas
sbb
cmp
sub
cltd
sub
sub
jnp
cmp
call
jnp
xor
imul
add
loope
jl
push
fnstsw
jle
xor
add
je
dec
inc
pop
cmp
jns
fisttps
leave
sub
xchg
nop
sbb
ja
mov
and
notl
xchg
gs
dec
pop
cmp
pop
mov
dec
lock
fldt
or
jp
sub
test
in
outsl
cmp
push
cmpl
cmp
insb
jnp
mov
and
imul
enter
xor
cmp
add
outsl
stos
decl
out
sub
add
jae
fistpl
mov
shl
pop
imul
xchg
xor
out
js
mov
mov
sbb
mov
cmp
cmpb
lock
lret
sub
or
std
jle
mov
stos
lods
or
xchg
adc
jo
mov
jnp
scas
imul
imul
pushf
jne
or
and
ss
push
loopne
out
lock
sbb
mov
aas
push
sub
jnp
jbe
imul
push
movsl
out
jnp
adc
adc
lea
add
mov
jnp
ror
push
inc
aam
jnp
mov
ret
test
pop
mov
loope
mov
scas
and
lea
ljmp
cmp
dec
push
or
jnp
xorb
mov
jnp
out
cmc
mov
push
dec
imul
jb
pop
popf
cltd
out
loop
test
movsb
jl
xor
bound
adc
push
inc
sbb
outsl
push
jo
rcrl
ds
dec
pop
es
aad
aaa
imul
mulb
enter
cmpsl
outsb
shr
dec
or
bnd
mov
lock
lret
jnp
bound
adcb
push
mov
or
jnp
mov
ja
cmp
jnp
xor
lods
pop
js
bound
subb
or
imulb
jnp
shlb
jnp
out
stos
mov
inc
insb
jnp
lods
xor
out
push
xor
arpl
pop
sbb
or
pusha
sbb
inc
addr16
jnp
pop
es
in
jnp
test
cs
jp
jno
popa
sub
jmp
sarb
in
pop
repz
stos
pop
jnp
or
test
mov
sbb
xor
xchg
mov
mov
sub
sub
imul
xorl
mov
dec
lock
lods
mov
data16
imul
outsl
outsb
ret
insl
repz
jmp
push
mov
pop
xor
add
mov
sti
pop
mov
push
sub
lcall
jb
jnp
sub
ret
adc
jnp
ds
pop
fwait
daa
inc
in
fildll
xor
mov
lods
pop
cmpsl
mov
jg
push
leave
ficompl
cmp
jb
notb
cmp
popf
inc
mov
arpl
lods
pop
and
das
iret
dec
mov
aad
mov
mov
mov
xchg
imul
cmp
lret
xchg
add
pop
sub
mov
jns
stos
je
inc
cmpsb
jmp
ja
ja
sbb
sti
cmp
jae
je
fnstcw
mov
push
xchg
jne
fldt
mov
lods
jb
pop
test
je
add
add
sbb
or
pop
cmc
jg
sbb
mov
inc
adc
lods
jne
xorl
sub
pop
jg
das
mov
push
fcomi
fstpt
sub
imul
add
ja
dec
arpl
test
mov
std
push
outsl
mov
mov
jg
jnp
and
sbb
jnp
pop
mov
sbb
int3
add
adc
mov
enter
bound
pop
das
leave
loop
push
popf
cli
push
or
stos
jnp
test
shlb
mov
add
insb
adc
in
jae
sti
push
jmp
or
and
mov
mov
outsl
pop
xchg
ret
or
notl
jnp
dec
mov
mov
fistps
jb
mov
jnp
enter
icebp
out
inc
in
imul
loopne
nop
push
clc
in
sarb
pop
loop
int3
cmpl
adc
test
dec
in
pop
jno
mov
jmp
mov
push
jge
adc
jnp
imul
cld
jnp
adc
arpl
dec
hlt
ret
jnp
loope
in
jl
cmp
lret
xor
xchg
jnp
icebp
cmpsl
fstl
pop
sbb
rolb
nop
jnp
dec
lods
pop
pop
jns
xor
sub
loopne
dec
lret
xor
jl
fidivrs
mov
jnp
or
xchg
jnp
gs
in
out
sti
jnp
lret
movsb
fisttpl
sbb
cli
fdivrp
sbb
sub
jnp
xor
test
in
fwait
jnp
mov
cmp
fnstsw
int3
sub
pop
jle
pop
sbb
xor
and
shll
loop
int
lods
or
mov
out
jp
cltd
stc
lahf
mov
inc
fs
pop
test
pop
mov
jecxz
cmp
sbb
jno
cmp
adc
jae
jb
sub
rcrl
cltd
push
iret
lock
jle
in
hlt
lods
notb
xchg
je
mov
std
lock
cmc
jle
jne
test
xchg
out
sti
or
lahf
xorb
out
das
mov
aas
sub
sbb
fscale
sub
lahf
jnp
cmp
xchg
subl
jnp
mov
push
lea
fisubrl
pop
sbb
dec
mov
shrb
adc
mov
mov
xor
sbb
adc
mov
pushf
in
in
insl
js
and
mov
push
xor
add
das
mov
adc
stos
push
inc
rclb
dec
mov
out
aad
adc
iret
mov
or
jp
and
lcall
cmp
inc
sbb
jo
int3
push
and
cmp
sarb
data16
and
jg
rcrl
jnp
xchg
or
inc
sbb
je
dec
mov
jl
es
jnp
fidivl
out
or
aaa
js
and
cli
outsl
adc
loop
ja
mov
xchg
inc
pop
fnstcw
bound
mov
shll
add
ss
inc
jnp
rolb
stc
dec
in
jnp
stos
mov
call
mov
jne
out
lcall
aaa
and
inc
jbe
adc
in
add
lods
adcl
mov
imul
scas
xor
xchg
mov
or
jnp
in
mov
cmc
movsl
xor
jnp
aam
dec
mov
std
cmp
imul
in
aad
push
pop
mov
sub
sub
lcall
lret
imul
test
mov
loope
push
outsb
es
mov
ret
fs
repz
sbb
stc
pushf
push
jnp
rcrl
add
xor
xchg
fdivl
pop
outsb
icebp
int3
inc
push
sbb
jnp
out
dec
jo
or
dec
pushf
pop
xchg
xchg
imul
arpl
pop
mov
jnp
lds
lea
or
mov
sti
outsl
cmp
lcall
sbb
cmp
and
out
cmp
add
mov
sbbb
andl
fwait
or
adc
xchg
dec
mov
pop
adc
xchg
push
out
les
or
jne
sahf
test
int
sbb
sub
or
fisubs
mov
mov
or
ja
sub
loop
pop
jnp
push
cmp
xchg
or
jnp
sti
xor
cmp
into
jmp
add
jnp
adc
rcr
loope
dec
add
stc
cs
jmp
sbb
scas
inc
imul
imul
into
jecxz
and
jnp
stos
movsl
mov
inc
mov
arpl
jmp
js
bound
movsb
insl
jno
imul
mov
xlat
into
jmp
dec
add
sub
jnp
xchg
and
mov
jmp
imul
push
out
sbb
sub
sub
mov
cmp
jge
add
pop
orl
jnp
in
stos
pop
and
mov
les
jnp
aam
out
mov
shlb
shrl
je
push
in
push
mov
cmp
jnp
push
out
mov
pop
jnp
xor
lcall
jnp
xor
cld
mov
out
push
shrl
xor
inc
movsb
lret
jnp
pop
scas
psrad
cs
mov
popl
in
jnp
pop
ss
dec
in
cmp
cmp
inc
sub
scas
lock
ja
jae
test
and
lret
lea
cmpb
or
fistpl
scas
jnp
popl
cmp
dec
fnstsw
push
mov
lods
jnp
jns
mov
jnp
ja
cltd
pop
xor
push
jnp
fstpt
mov
es
jnp
jns
inc
xchg
or
add
lret
jp
and
mov
jg
ljmp
jne
insl
adc
cmc
jnp
cmp
pop
lods
das
test
sbb
ret
and
sub
or
jns,pn
outsb
jnp
pop
lret
mov
jnp
cmp
mov
insl
out
mov
lahf
pop
in
jnp
adc
lock
rclb
mov
fisttps
pop
mov
xchg
jae
dec
add
cmp
loop
cmp
jae
push
inc
mov
bound
mov
sub
dec
mov
mov
fildl
mov
jge
mov
inc
push
jnp
ss
dec
loop
pop
jnp
xor
push
mov
aas
jns
or
jbe
cmp
hlt
ja
push
pop
mov
cmp
jmp
dec
popf
jnp
loop
sti
mov
clc
and
and
mov
adc
jge
jns
sub
loope
jbe
clc
adc
jl
jbe
push
outsl
imul
push
sbb
push
pop
sarb
stos
jnp
jns
fs
sub
cwtl
cli
adcl
sbb
or
stc
push
cld
sub
outsl
mov
mov
fcmove
adc
inc
addr16
cmpsb
jo
jnp
cmp
dec
cmp
repz
subl
inc
jnp
pop
into
orb
cmp
dec
lds
repnz
mov
je
cwtl
rorb
imul
mov
mov
idivb
int3
adc
je
ja
push
sub
pop
sbb
or
roll
inc
cmpb
cwtl
mov
mov
data16
loopne
insl
dec
jnp
rclb
stc
cmp
jnp
clc
stos
adc
fldcw
jnp
out
add
fldt
aam
cmp
sub
sub
jnp
or
andb
inc
jnp
and
xor
es
imul
push
mov
ds
jg
mov
add
cwtl
push
jmp
push
icebp
in
mov
cmpb
std
nopl
xor
cs
in
inc
mov
mov
dec
sub
inc
jbe
fbstp
sbb
lret
and
or
jnp
push
lds
mov
xchg
jnp
jae
cmp
out
adc
sbb
in
mov
in
and
outsl
cs
adc
push
and
and
je
sub
jg
sub
cli
or
cmp
insl
jle
mov
mov
or
cld
jnp
imulb
cwtl
cmpsl
ss
and
mov
fidivl
xlat
jnp
cmpl
mov
pop
loop
adc
pop
outsb
jns
xchg
clc
lret
inc
mov
sub
jb
iret
dec
jnp
adc
dec
jnp
push
out
push
loopne
in
cmp
sbbl
jnp
sahf
cmp
inc
int
push
xorl
sti
push
jnp
loop
inc
nop
xor
fisttpll
mov
andb
addb
cmp
jns
pop
stc
ss
jnp
xor
push
jnp
movsl
aam
xchg
xchg
fcomip
aad
sub
call
inc
stos
fcom
pop
xor
xchg
int3
jne
fisttps
jmp
sbb
push
cmp
or
lods
dec
jnp
imul
and
pop
imul
mov
xchg
or
test
dec
imul
fistpll
xlat
dec
jecxz
cwtl
add
dec
out
dec
cmp
jmp
fsub
cmpsl
in
cmp
dec
cmp
add
js
xchg
mov
rclb
lret
jnp
shlb
mov
xchg
mov
push
lds
orb
mov
enter
jb
jae
stos
or
test
push
sahf
add
sub
lret
inc
jmp
jb
sub
je
dec
shr
xor
dec
fists
movsb
daa
jnp
std
fs
inc
pop
int3
mov
push
lcall
pop
push
cmp
adc
rcr
or
shll
mov
jnp
push
aam
cmp
sbb
fcomp
out
adc
in
jnp
dec
mov
jmp
enter
scas
and
pop
lret
xor
add
lahf
imul
scas
add
jnp
out
or
popf
aam
adc
insl
in
fmull
cmp
sbb
cmovl
inc
mov
jnp
and
dec
jnp
sbb
cmpl
mov
pusha
or
clc
lret
lds
ss
movsb
sub
sub
fistl
mov
cmpb
loop
in
sbb
mov
inc
cmp
cmc
lret
mov
and
pop
jnp
icebp
push
jg
xlat
pop
mov
ss
adc
mov
out
fmul
lcall
and
jnp
je
inc
outsl
pop
sbb
imul
sarl
pop
sub
in
xor
ret
int
sub
lods
jle
ljmp
cmp
out
mov
sbb
imul
cmpsb
lret
sub
insb
jmp
or
xlat
ss
add
sbb
hlt
jns
sbb
xchg
sbb
mov
aaa
cs
leave
pop
jnp
push
stos
push
sub
pop
jbe
orb
mov
insb
sbb
mov
rolb
jnp
or
sub
sub
js
fldenv
adc
inc
pop
sub
jae
insl
shlb
jae
and
xchg
test
rol
mov
test
jnp
test
pop
cmp
mov
out
packssdw
sub
ja
iret
jns
pusha
imul
aam
xor
jne
daa
jnp
pop
dec
adc
jp
outsl
jo
pop
mov
adc
dec
leave
xchg
inc
jne
int
shrb
pushf
sub
or
stos
xor
rcrl
repnz
fisubs
jo
imul
push
jae
aaa
ja
push
ret
jecxz
or
arpl
ja,pn
xchg
cmp
jnp
test
xchg
cmc
les
inc
stos
call
push
fimull
cmc
xor
mov
xor
lahf
stos
call
sbb
icebp
in
and
jnp
xor
pop
cmp
mov
call
mov
dec
jb
jp
mov
gs
sub
fcoml
or
imul
fwait
mov
xchg
jae
shll
hlt
in
sarb
sbb
fimuls
cmp
adc
stos
pusha
mov
xor
scas
fcoms
jnp
nop
pop
pop
dec
pop
imull
lret
jno
push
inc
dec
and
popf
rcll
pop
mov
adc
push
mov
xor
repz
cmp
fstpt
pusha
lret
xor
mov
sub
lods
mov
jae
je
out
mov
imul
outsl
jno
cmpl
pusha
xchg
arpl
fwait
push
adc
jnp
mov
cmpsb
or
into
pop
mov
cwtl
jmp
push
das
cmp
jnp
shl
js
adc
imul
lret
and
cmp
aas
imul
dec
ss
sub
mov
cs
orl
bound
jnp
in
fcmovu
lds
ja
jmp
cmp
mov
cs
in
jmp
sarl
lea
pop
add
add
jae
xor
pop
mov
jnp
pusha
popf
mov
push
gs
or
push
mov
sbb
push
lock
and
jae
call
addr16
jnp
jae
mov
xlat
bnd
sbb
mov
outsl
mov
bound
pop
jnp
stos
mov
dec
scas
cltd
and
scas
cmp
lods
nop
mov
push
mov
jnp
mov
xlat
mov
push
mov
adc
cmp
jnp
loopne,pt
lods
push
imul
ljmp
dec
mov
mov
cmp
jnp
outsl
mov
sbb
std
popf
cs
rorb
enter
push
mov
inc
out
stos
mov
mov
add
mov
pushf
or
pop
loop
mov
test
cli
scas
dec
and
movsb
outsl
lods
insb
data16
imul
push
or
fs
pop
aad
repnz
jnp
adc
add
je
ret
enter
icebp
loope
mov
popf
xchg
rcll
sbb
push
lret
sub
xor
mov
mov
dec
iret
dec
add
jb
sub
outsl
push
mov
ret
jb
sbb
mov
aam
jae
mov
repz
hlt
or
std
sub
cmpsb
int3
movsb
jnp
push
add
cmp
iret
dec
fnsave
add
inc
jl
fmuls
lret
scas
jnp
outsl
pushf
sub
out
sbb
dec
jae
mov
jne
imul
mov
and
cmp
rcll
xchg
mov
outsb
xor
ss
jnp
movsb
jge
clc
push
xor
imul
sub
and
inc
push
enter
cmp
insb
add
pop
and
add
push
addr16
jg
sub
jnp
push
imul
push
idivl
dec
push
cmpb
xor
into
pop
and
subb
cwtl
aad
fcomip
loopne
sbb
in
movsb
jae
cmp
and
jae
aaa
lds
jnp
andb
jle
repnz
lods
sbb
lret
add
mov
or
mov
cmc
mov
jno
push
adc
adc
fistpll
mov
cmp
adc
out
push
lret
lahf
sbb
scas
aam
fs
sahf
jbe
stos
insb
pop
jnp
adc
notl
pusha
or
scas
adcl
sub
bound
les
mov
clc
test
mov
in
adc
push
or
pop
repz
adc
pop
lds
sahf
roll
mov
inc
push
stos
imul
xchg
je
cwtl
jnp
cmp
pop
sub
repnz
clc
mov
fistps
es
cld
fadd
fidivs
xor
xchg
in
mov
inc
cmp
cmp
loopne
dec
nop
jae
rolb
divl
cmp
mov
mov
lahf
aaa
xchg
bnd
in
mov
sbb
pushf
cmp
and
popa
jnp
push
xchg
jecxz
dec
adc
add
inc
mov
jns
inc
aaa
jle
jnp
jno
pop
pop
lods
test
or
out
imul
lea
xchg
data16
ret
jnp
aad
shrb
mov
jnp
sub
stos
jae
bound
in
sahf
popf
sbb
aaa
xor
fnsave
ljmp
test
ja
and
sub
jb
in
pop
jnp
popl
mov
lods
ljmp
jnp
lret
ret
inc
std
lock
xor
movsl
fnsave
pop
aam
dec
jnp
sub
xor
dec
mov
mov
lret
add
mov
push
mov
and
push
pop
xor
pop
insl
incb
or
dec
xor
dec
and
mov
jns
jb
int
out
rcll
lods
sbb
xor
jno
loop
mov
movsb
inc
adcb
jo
imul
mov
cld
dec
inc
sub
enter
xchg
in
jnp
adc
fwait
test
lds
mov
in
jnp
dec
cmpsl
repz
lret
cmp
imul
cmp
push
jns
and
lods
inc
hlt
sarl
pop
and
dec
shll
testb
aad
in
adc
push
lret
xchg
jnp
jg
mov
arpl
sub
in
sub
jnp
lahf
cvttps2pi
mov
jnp
std
add
jo
jnp
ficomps
jae
adc
lea
dec
ljmp
sub
adc
jnp
mov
lea
mov
gs
lret
add
add
xor
xlat
jnp
test
fdivs
xor
mov
pop
stos
insl
stos
aam
xchg
jae
jae
push
fsubrl
mov
and
pop
jmp
loop
mov
adc
scas
jo
pop
mov
fcmove
icebp
mov
loope
cmp
adc
push
dec
clc
mov
xlat
jnp
xchg
insl
test
bound
call
pop
test
adc
jnp
lahf
ss
ret
das
test
ficompl
jnp
mov
sub
lret
addr16
fnstcw
leave
push
jnp
jp
xchg
jno
sti
stos
jnp
sub
int
lahf
add
mov
dec
das
push
or
lret
jmp
pop
push
jnp
sbb
xor
jg
daa
lods
jno
mov
jae
cli
inc
lods
mov
xor
shr
jnp
jl
out
enter
jnp
icebp
test
push
divl
push
xor
xor
mov
cmp
adc
jae
dec
sub
sbb
jae
add
dec
jp
push
repz
jbe
scas
cwtl
dec
imul
mov
jnp
nop
hlt
add
xor
popf
jnp
pop
test
insb
std
jnp
cmp
adc
stos
mov
nopl
pop
pop
jnp
cmp
hlt
jne
dec
jb
jl
inc
fbstp
js
pop
stos
jo
xchg
jp
aas
arpl
lock
jnp
add
or
dec
imul
ja
loopne
ja
int
in
mov
jnp
sub
insb
push
jae
dec
and
push
pop
jbe
jle
dec
jg
lret
fucomip
icebp
cmpsb
imul
cmp
mov
out
jnp
das
dec
lahf
add
sbb
jg
fnstsw
cmp
sub
fistpll
int3
jo
js
mov
pop
jae
fldt
imul
sub
fldenv
jbe
fdivs
dec
mov
lret
jb
mov
jmp
cs
aad
pop
jnp
or
sahf
stos
daa
and
clc
dec
sbb
out
jbe
pop
jmp
and
mov
cmp
or
mov
or
push
aad
jne
mov
mov
or
ja
shlb
pop
sub
jnp
xchg
lock
jnp
loope
or
pop
adc
jnp
insl
ds
jb
scas
jo
jnp
sbb
jns
lcall
push
movsl
test
sbbb
jnp
jae
out
hlt
mov
outsb
testl
sahf
xor
push
pop
call
adc
push
lea
cmpsb
jo
inc
mov
fcomip
or
jnp
fsubp
aam
jnp,pn
lods
mov
mov
push
add
pop
sarl
stos
repnz
lahf
das
mov
cmp
insl
jl
adc
mov
sahf
sbb
or
adc
test
mov
je
jnp
pop
or
jno
pop
lock
and
and
int
jb
pop
ja
adcl
cmpl
sub
in
jnp
sub
std
loopne
or
pop
push
call
or
shrl
jp
sbb
es
inc
cmp
out
insb
shll
mov
push
popa
xor
frstor
loopne
pop
fs
in
add
jmp
loope
lods
xchg
or
std
inc
or
xor
aas
hlt
dec
jnp
adc
pop
mov
sti
jnp
inc
pop
out
jno
cmpsb
jnp
and
lcall
arpl
mov
jae
repnz
jnp
sahf
mov
mov
stos
mov
jae
or
add
mov
dec
lret
fdivl
imul
jnp
cltd
xor
je
stos
jns
imul
or
xchg
inc
jnp
xchg
into
mov
mov
xor
popa
in
lret
test
xor
into
js
push
dec
incl
insl
lods
scas
out
std
nop
lcall
xbegin
daa
shll
and
jge
and
cmc
mov
push
repnz
xchg
jecxz
les
dec
push
imul
arpl
push
lods
xchg
int
inc
cmp
into
push
cs
mov
fsubp
stos
jb
adc
pop
jnp
inc
stc
xor
arpl
jnp
and
mov
push
pop
cmp
popa
push
mov
mov
push
gs
cmp
movsl
push
xchg
pop
jae
xchg
scas
push
faddl
or
cmp
jns
ja
jmp
sbb
adc
lahf
lds
imul
loopne
loope
stos
inc
inc
mov
subb
pop
dec
jnp
sti
and
mov
or
cli
push
insb
mov
jnp
xor
xlat
sbb
cmp
add
out
cmp
ja
pop
loopne
adc
mov
std
jnp
lret
pop
js
test
jnp
inc
inc
sub
push
imul
pop
insl
cld
mov
and
call
mov
mov
aas
outsl
and
stos
mov
loope
adc
es
loop
insb
jmp
and
shrl
imul
imul
sbb
dec
or
out
jnp
cltd
and
mov
pop
add
outsl
lcall
add
and
inc
jae
mov
sub
cmp
mov
scas
xor
adc
jnp
jp
sub
cmp
dec
cmp
push
jb
aaa
in
jnp
xchg
inc
jns
jnp
mul
jge
jno
xchg
xor
mov
mov
jae
cltd
and
jecxz
fnstcw
sub
sub
int3
popf
xchg
cmpb
add
cmp
aas
mov
fisttpll
xchg
and
sbb
enter
xor
mov
jae
adc
jl
pop
xor
pusha
jae
inc
xor
lret
lret
sbb
loope
fdivrl
imul
enter
jnp
inc
subb
xchg
pop
jnp
xor
das
push
lods
imul
cmp
imulb
mov
ret
inc
pop
aaa
dec
mov
push
jno
jp
cmp
bound
sub
or
jnp
cmp
mov
pop
jnp
pop
cld
lock
jnp
leave
repnz
sbb
dec
jae
inc
jae
mov
jb
push
daa
mov
jnp
in
lods
pusha
jecxz
sbb
sub
xchg
cmp
push
jae
cmc
sbb
push
cmpsb
jb
addr16
aad
movsl
xor
sbb
in
ss
jae
out
loop
sbb
out
cmpl
adc
jbe
inc
imul
outsb
cs
lcall
pop
dec
mov
out
jnp
pop
sbb
dec
sahf
lea
jnp
jne
loopne
sub
clc
jnp
jg
mov
jnp
sti
jno
or
mov
jnp
decb
dec
mov
jnp
ds
mov
jnp
sbb
add
adcb
mov
outsl
pop
clc
fs
adc
pop
cwtl
cmp
jnp
out
or
cmp
iret
cmp
enter
jns
mov
int
push
jnp
mov
iret
leave
inc
stos
xor
lret
aas
dec
fisubs
jbe
fnsave
cmpsl
subl
lods
push
mov
hlt
or
xchg
xor
adc
test
add
jnp
mov
or
in
jo
cmp
pop
jp
jecxz
jns
jae
adc
xchg
dec
out
ja
and
pop
or
push
shll
call
mov
sub
mov
xor
rorb
dec
scas
jnp
cltd
lods
fstps
dec
bound
sbb
ds
sbb
in
inc
jmp
push
dec
inc
mov
mov
into
es
mov
in
push
mov
enter
outsl
imul
cmp
xchg
jae
pop
ret
cmpsl
sbb
mov
movsl
int
jg
lahf
fimull
xor
addr16
jae
xlat
pop
ret
adc
mov
adc
insb
loop
pop
xor
sbb
jnp
push
inc
mov
es
das
in
stc
insl
xor
or
scas
xor
jp
hlt
jo
jnp
lahf
push
xor
scas
push
fsubrl
ret
data16
xchg
je
enter
je
and
sbb
jnp
ror
mov
push
mov
xchg
lds
add
mulb
cmpsl
and
lods
add
cmp
loop
add
sub
cltd
pop
push
jge
test
les
insl
add
and
sub
jnp
push
pop
rolb
pushf
mov
xchg
mov
call
jnp
in
mov
stos
jnp
int
sbb
outsl
add
ja
dec
fidivrs
sbb
filds
sbb
shlb
mov
loop
xor
adc
push
jnp
lret
sti
mov
gs
les
pushf
in
imul
lock
pusha
mov
jnp
add
adc
test
dec
jnp
push
or
jmp
mov
or
jnp
dec
jne
mov
lds
fs
jae
cmpsl
mov
insl
pop
scas
rolb
xchg
pop
jnp
and
nop
xor
stc
adc
jmp
ja
mov
xlat
sbb
fwait
clc
add
fsts
es
dec
nop
loopne
lea
sbb
cmpsb
push
dec
sbb
lods
out
sbb
outsl
orl
and
mov
cli
mov
mov
rcrl
mov
or
sub
ja
sbb
lcall
cmp
jnp
push
mov
jnp
sbb
xor
xchg
jns
push
mov
push
or
fimull
cs
sbb
jnp
lea
adc
enter
icebp
xchg
js
add
shll
cld
cmpsb
push
jmp
imul
jae
pop
push
loop
dec
mov
adc
jb
movsl
pop
jae
pop
sbb
dec
ja
jnp
jge
jo
scas
jmp
pop
in
hlt
mov
add
and
fbstp
cmp
lcall
cmp
jnp
cli
fnstsw
imul
xchg
sub
sub
jg
dec
jmp
popa
dec
mov
jnp
pusha
inc
jecxz
adc
jnp
out
lret
jmp
add
loopne
outsb
or
shrb
ret
push
in
and
push
jb
enter
jns
push
insb
cmp
jnp
scas
inc
sub
pop
mov
cmp
inc
jnp
shrl
ljmp
mov
pop
dec
imul
imul
pop
push
mov
lret
addl
sbb
jnp
and
cmp
pushf
jnp
daa
sbb
jb
pop
jnp
adc
test
jnp
cmp
cmp
jae
inc
mov
sub
adc
cmc
imul
jae
xchg
mov
xchg
out
ss
clc
jno
mov
push
sbb
dec
mov
jbe
divl
and
bound
jg
in
pusha
outsl
jmp
push
sbb
lret
repnz
scas
mov
clc
mov
dec
jb
in
sub
pop
dec
or
jnp
pop
sub
loope
jmp
jne
push
adc
jae
insl
sbb
jo
sbb
push
outsb
out
mov
xor
cmp
fimuls
int
outsl
cmp
rcrl
test
jnp
xchg
iret
push
arpl
inc
xor
mov
cmp
in
out
inc
scas
jnp
lret
aas
fmuls
jb
or
xor
lods
test
data16
jmp
rol
dec
jnp
repnz
mov
jnp
fdivs
call
les
into
or
inc
out
shlb
xor
maxps
sub
xor
test
push
pop
sub
sbb
adc
stc
jno
mov
into
mov
push
imul
fidivrl
fsub
sbb
inc
push
jnp
mov
mov
add
xor
aas
cltd
sbb
popa
rcll
inc
cmp
jnp
leave
mov
lret
inc
pop
movsl
pop
pushl
aam
jae
and
int
and
movsl
sub
xchg
jae
pusha
inc
inc
outsl
lcall
and
ja
push
pop
cltd
or
mov
add
mov
push
mov
jae
jnp
add
inc
jnp
pushf
jg
outsb
rcrl
add
mov
xor
jnp
pop
fcoml
test
cmpsb
inc
dec
repz
popa
out
mov
xor
outsb
xchg
jnp
mov
dec
sbb
arpl
nop
mov
bound
cmpsl
jnp
test
sbb
jbe
dec
cmp
jae
adc
and
insb
adc
jle
inc
sub
sub
es
and
jae
xchg
xchg
test
mov
lret
inc
xchg
je
jae
les
sbb
xor
int
jnp
push
add
in
xor
mov
mov
testl
outsb
jne
pop
loop
sub
and
iret
mov
inc
lods
daa
mov
gs
ret
ljmp
jnp
sbb
cmpsl
mov
lds
or
fsubs
es
push
xor
lret
inc
push
jnp
js
inc
subl
flds
and
jecxz
repz
mov
arpl
xchg
je
imul
mov
mov
sub
cmpsb
cmp
jmp
jnp
add
add
jnp
loopne
mov
sbb
dec
xor
sub
imul
ss
push
jnp
xor
lret
std
jnp
jg
addr16
jnp
xchg
dec
xchg
leave
sbb
int3
xor
icebp
jnp
adc
add
sbb
xor
jae
fwait
push
jmp
sysret
in
imul
inc
dec
data16
ja
sub
fstpt
pop
movsb
mov
lret
jl
and
jnp
loopne
sbbl
jnp
and
sbb
mull
mov
rorl
pushf
mov
gs
in
jns
lds
daa
loop
out
mov
dec
pop
dec
adc
ss
cwtl
cmpsb
or
push
cmc
xchg
xor
pop
out
arpl
pop
shl
scas
sbb
adc
sbb
mov
fs
xor
stos
lret
xor
push
push
jae
loope
insl
add
mov
mov
sbb
dec
mov
jnp
dec
mov
adc
sub
xor
dec
mov
mov
lret
jno,pt
insl
cs
pusha
sarl
push
xchg
jecxz
sbb
mov
add
leave
bound
cs
or
mov
or
lahf
in
jecxz
insl
push
jnp
std
lock
or
fldenv
jae
mov
cltd
mov
jnp
pop
ja
sbb
xchg
clc
or
adc
iret
imul
and
or
cmpsl
jns
idivl
dec
cmp
lea
jnp
cmp
and
mov
pop
cmp
outsl
arpl
inc
sub
subl
call
pusha
bound
cmp
bsf
sbb
add
cmpsb
push
repnz
inc
insl
mov
xchg
xchg
pop
jb
popf
out
lcall
xchg
aas
test
jnp
jbe
sbb
and
inc
lahf
xor
mov
out
and
pop
add
jle
or
jnp
clc
rcrb
fbstp
fidivs
or
xchg
repz
clc
loope
dec
lret
imul
or
movsl
jns
pop
imul
mov
sub
fistps
xor
dec
inc
dec
jns
and
push
cwtl
fwait
jnp
inc
mov
out
imul
mov
and
movsl
leave
jae
dec
dec
cld
jnp
xor
xor
in
and
leave
mov
or
test
jne
sub
xchg
sbb
and
cmp
dec
aad
movsb
sub
push
mov
lods
jmp
cs
and
aad
xchg
scas
sub
lods
shr
test
pop
adc
mov
and
or
mov
dec
bsr
stc
repz
dec
shll
ds
out
mov
out
shlb
mov
data16
pusha
xchg
sbb
leave
rorb
adc
stos
addr16
or
outsl
outsb
sbb
sub
jnp
ljmp
jnp
inc
inc
xor
push
jp
or
mov
sahf
scas
std
test
in
adc
cmp
mov
jge
push
mov
movsl
jnp
pop
xor
or
and
imul
and
xor
jae
mov
bound
pop
xchg
mov
cmp
int
sub
adc
jns
test
lcall
sub
rep
mov
fistpl
shll
add
jae
pop
rcr
lret
lds
jno
inc
imul
sub
dec
jnp
push
std
xchg
dec
test
mov
xor
jne
sub
dec
movsb
and
lds
cwtl
out
leave
testb
push
sbb
into
mov
jb
mov
jle
out
jbe
xchg
adc
jns
inc
cmp
fsubrs
jnp
or
and
ljmp
xchg
aam
cvtdq2ps
insl
pop
xchg
xchg
dec
add
imul
data16
loope
sbb
icebp
leave
jnp
add
shrb
pop
jnp
ficoms
fsts
in
jnp
inc
push
xchg
sbb
fmull
sub
aas
lods
or
mov
les
jnp
cmp
cmp
lods
sbb
lahf
cmpsl
fdivr
pop
ja
cmp
mov
jmp
sti
sbb
mov
cwtl
orl
sbb
outsl
add
push
loope
scas
lods
sahf
outsl
rcrb
adc
mov
testl
mov
or
andb
xor
adc
cwtl
loopne
jnp
cltd
sbb
mov
sbb
xor
mov
jnp
jo
lods
mov
pop
dec
mov
fisttpl
jno
test
push
call
insb
in
jnp
das
iret
sti
rorb
sbb
mov
sub
jnp
cltd
lret
xchg
add
mov
mov
es
arpl
push
jo
pop
cmpsl
sarl
pop
pop
lcall
leave
or
icebp
js
fdivrs
test
and
out
xor
jnp
loop
mov
cmp
sbb
dec
pop
cs
mov
dec
dec
push
loopne
or
rorb
xchg
imul
push
jae
lret
cld
dec
sbb
hlt
jne
or
int3
mov
jns
add
cmp
jnp
fisttpll
push
leave
jnp
dec
aam
push
jns
in
jnp
sub
pop
dec
inc
popf
jnp
lods
jl
call
movlps
xchg
mov
xchg
push
sub
push
divps
movsb
dec
loope
sub
or
mov
loopne
add
iret
xchg
jb
cmp
insb
loop
leave
and
mov
jnp
repz
in
test
xor
xchg
push
push
mov
xchg
out
hlt
idivl
repz
jae
mov
mov
in
xor
or
fistpll
sbb
popf
sbb
cmp
sbbl
sub
jecxz
and
sbb
or
cmp
adc
mov
pop
int
out
cmc
cld
stos
mov
cmpsb
sbb
adc
iret
or
lock
mov
arpl
jnp
jns
sub
add
jnp
mov
in
jbe
cmp
xor
and
insl
push
add
pop
subl
imul
cld
jne
rorl
mov
sbb
dec
int3
shl
pop
scas
pop
or
imul
loope
jo
insl
adc
pop
bound
insl
repnz
loop
mov
addb
in
jnp
ret
mov
mov
jl
out
xor
ss
jnp
iret
sub
insl
fidivrs
scas
call
jnp
inc
rcrl
cwtl
div
jnp
and
jmp
pushf
lret
xor
jnp
andl
cmc
push
jae
mov
inc
test
ja
in
xor
xchg
add
cmp
out
or
cmp
aaa
cli
add
ja
push
jg
leave
out
popa
fnsave
rcll
and
shlb
or
push
sbb
lods
scas
and
pop
lret
jae
dec
stc
xlat
mov
stos
std
jb
add
jnp
xor
sub
and
cmp
or
dec
xchg
jnp
inc
cli
mov
repnz
jnp
xchg
fistl
mov
dec
test
dec
cltd
mov
fistpll
or
xchg
cmp
xchg
pop
pop
jae
xor
cmc
cwtl
sub
shl
dec
lret
std
jl
jle
aaa
aad
in
push
jnp
push
sbb
js
jo
jb
jnp
cltd
jno
movq
aam
dec
jb
push
loope
test
cs
mov
inc
or
cmpsl
mov
pop
pop
repz
adc
shl
sbb
add
subb
cmc
cltd
sub
jnp
adc
adc
je
jmp
shll
sub
adc
aam
mov
xchg
stos
inc
sbb
cld
arpl
push
fwait
les
lds
stc
adc
notb
or
into
jo
ljmp
cmp
add
out
jnp
lock
adc
xor
nop
sub
cmp
dec
mov
xchg
xchg
cmp
aad
out
aad
sbb
inc
jg
mov
push
jne
js
adc
int
stos
cmpsl
lock
mov
outsl
daa
ficomps
or
adc
and
inc
sub
sub
mov
sub
sub
lahf
lods
jnp,pt
pushf
imul
cmp
add
xchg
js
imul
xor
lock
mov
fsubrs
pop
dec
add
pop
mov
sub
xchg
ficoms
out
jb
pop
mov
jnp
rcrb
pop
sub
scas
ret
cltd
outsb
pop
xchg
cmp
mov
sbb
jno
stos
notl
frstor
sbb
push
test
cmpsb
jnp
cmp
push
loopne,pn
scas
or
dec
data16
ljmp
jl
sub
cmpl
cld
rcll
mov
nop
gs
jnp
test
outsb
jno
inc
cli
jnp
push
fsubrl
jnp
daa
mov
add
jnp
lret
pop
jmp
inc
cs
scas
dec
ss
scas
lahf
push
daa
jae
sbb
mov
cld
xchg
fnstcw
cs
dec
enter
lcall
jb
jnp
test
into
mov
aaa
shll
mov
xor
jnp
mov
inc
xorl
clc
jb
ja
push
jbe
jle
stos
dec
jmp
subb
xchg
ja
call
cmp
adc
xchg
lea
cli
int3
aas
aad
add
jbe
in
neg
bound
jnp
push
packsswb
dec
pop
jnp
pusha
mov
pop
ljmp
das
fwait
repnz
lret
int
out
pusha
xor
inc
jnp
xchg
inc
shll
call
sti
sahf
hlt
movsb
fcomps
jnp
jge
imul
sub
mov
push
mov
cmpsb
jnp
fsubrl
lea
and
imul
jnp
js
jg
jnp
cmc
mov
daa
jnp
jae
push
lret
mov
sahf
test
add
into
jnp
stc
cltd
ljmp
xor
jnp
sbb
fwait
imul
out
jae
ja
sub
ret
jnp
cmp
or
adc
mov
fistpl
inc
dec
jo
mov
mov
cmc
push
jae
pop
cmpsb
mov
inc
aad
sub
xchg
ss
jnp
mov
out
insb
cmp
jnp
add
fnstcw
jnp
mov
jne
mov
jnp
dec
fwait
subl
pop
pop
out
lea
out
jnp
mov
mov
xor
ds
add
or
lret
pop
sub
imul
push
adc
xchg
gs
ds
jbe
mov
outsl
dec
test
aaa
push
dec
push
pop
addb
or
shll
xor
repnz
stos
les
out
add
xchg
gs
imul
cld
fistpl
sub
inc
out
imul
adc
mov
lods
aas
in
jae
fs
mov
mov
ljmp
lods
ja
jnp
dec
xor
xchg
sbb
or
and
repnz
mov
sub
inc
push
jnp
or
sub
int
cmp
or
inc
fcoms
xchg
pop
add
mov
sub
sbb
mov
ja
test
popf
xchg
sti
jb
mov
mov
mov
repz
pop
sbb
sub
lods
cltd
or
cmp
fiadds
fnstsw
or
or
add
cmp
push
xor
xchg
jmp
ja
ret
jae
inc
in
dec
pop
test
jnp
aam
popa
xor
cmp
xor
test
in
dec
fisttpl
rcll
outsl
out
mov
imulb
bound
test
mov
xchg
pop
test
and
ja
out
mov
push
and
in
je
sub
repz
in
jnp
mov
shll
push
js
jns
fmuls
fdivrl
add
jecxz
and
cmc
pop
or
mov
fisttps
inc
xorl
cli
pushf
rcrl
lds
out
cmp
pop
adc
cmp
add
outsl
mov
bound
xchg
orb
lods
outsl
jnp
mov
sbb
insb
jnp
pop
mov
jns
cmp
xchg
or
lock
push
mov
enter
mov
les
mov
or
push
jb
xor
fistpl
lahf
jnp,pn
mov
fidivs
mov
cld
std
pop
mov
sub
mov
pop
lret
push
dec
jnp
test
mov
jle
jnp
add
mov
push
aas
lods
test
add
pop
cld
xor
adc
imul
inc
sbb
mov
int
cli
jnp
adc
out
sbb
pop
cmp
jnp
xchg
lods
shrb
fs
imul
pop
sub
mov
jnp
push
mov
xchg
xlat
ss
sti
sbb
enter
and
push
jnp
dec
pusha
outsl
sbb
xlat
shrb
sbb
ss
mov
mov
jae
mov
mov
pop
addr16
outsl
imul
inc
test
cmp
insl
mov
sarb
hlt
lds
jnp
sub
jmp
subl
adc
pop
aaa
sbb
outsl
flds
push
push
sahf
lods
push
jnp
lret
mov
jge
jnp
xor
stos
jnp
lcall
jnp
icebp
into
ljmp
cs
sbb
push
stc
pop
lock
insl
mov
test
adc
jnp
mov
cmp
scas
push
test
mov
inc
or
cmpsb
rorl
cmp
cmp
jnp
lret
popa
pop
sub
mov
jb
jnp
pop
cld
call
jnp
add
das
test
xor
xor
dec
ss
out
jb
jnp
out
loopne
cwtl
sub
jnp
test
push
mov
pop
lcall
xchg
or
sub
lret
out
sti
imul
sahf
movsb
mov
xor
imul
or
std
stos
pop
ret
in
test
pop
push
jnp
lods
sub
lea
and
in
jl
add
dec
cmc
es
push
xchg
jnp
xchg
das
add
mov
leave
out
push
sbb
popa
xor
cmpsb
push
gs
dec
jnp
aam
lret
out
fistpll
xchg
das
sbb
fstpt
jnp
cmp
mov
stc
mov
loope
push
das
mov
jle
lods
mov
insb
lret
cld
jb
add
mov
dec
std
cmc
jnp
addr16
cmpsb
add
aad
jnp
mov
int3
or
in
jnp
mov
out
pop
sbb
into
out
aas
xchg
mov
add
add
jecxz
jnp
cmpb
mov
xchg
addr16
repnz
push
fidivl
xor
xor
enter
test
testb
in
cmp
mov
push
loope
sbb
adc
fsubrs
ds
xlat
enter
dec
iret
bound
outsb
adc
jecxz
aas
mov
jb
push
xor
inc
mov
push
mov
aas
jnp
scas
xchg
jo
mov
jnp
iret
xor
cld
adc
fwait
xor
cltd
mov
or
cmpl
or
jo
mov
pop
and
mov
dec
ds
cwtl
pop
andl
jnp
lods
call
dec
jmp
xchg
xchg
jmp
in
rcl
imul
lret
ds
jnp
stc
ljmp
movsb
xchg
pavgw
test
aas
or
out
sub
decl
pop
jb
lock
clc
hlt
xorb
insl
mov
cmp
test
mov
loope
xchg
mov
shrb
lods
stc
jnp
pop
add
jnp
cld
mov
xchg
xlat
iret
in
ljmp
adc
inc
aam
cmpsb
jp
imul
jns
push
lods
shr
dec
incb
out
jmp
les
pop
call
idivb
ret
in
sub
jnp
xor
mov
mov
xchg
enter
jnp
pop
in
jb
pop
int
mov
pop
ss
loop
ficompl
sub
subb
out
mov
mov
push
mov
jae
bnd
mov
in
jnp
movsl
pushf
sarl
dec
jbe
pushf
add
jge
xor
scas
fdivl
jnp
ret
jp
inc
aaa
fmuls
cltd
je
jnp
sub
gs
in
jnp
inc
xchg
clc
sbb
jecxz
shll
insb
pop
cmp
xor
call
jnp
into
iret
push
stc
lcall
mov
and
xchg
inc
jnp
xchg
sub
inc
pop
xor
mov
dec
aaa
inc
and
div
jae
test
pop
xchg
cmp
mov
ljmp
adc
jnp
in
push
adc
pop
pop
jnp
xor
pusha
or
cmp
cs
pop
fidivrs
pshufw
jae
addb
lahf
shrb
pop
push
jnp
inc
ret
pop
add
jnp
mov
jnp
gs
icebp
xchg
shll
jnp
scas
xor
lock
test
popa
test
mov
xor
push
fldcw
sub
lock
xor
nop
push
mov
cmp
or
not
xchg
nop
xor
pop
or
imul
mov
jnp
sbb
sub
or
cmp
mov
or
sbb
xor
dec
ja
sarl
js
lret
sbb
ljmp
mov
mov
adc
jb
stos
shrb
mov
push
jae
mov
ss
lret
ja
test
dec
xor
das
out
andb
jmp
lods
aad
dec
or
inc
inc
outsl
pop
shrl
daa
cmpsb
sub
push
xchg
fidivrl
mov
cmpsl
sbb
pop
popf
pop
dec
lcall
movsb
ja
icebp
push
clc
jns
mov
lods
push
jae
dec
popl
popf
sbb
dec
xor
mov
dec
xor
cmp
push
scas
inc
cmp
jae
push
sbb
jno
sbb
hlt
inc
jge
and
int
imul
enter
lret
cmp
push
hlt
jnp
pop
popf
in
pop
lret
int3
sub
lods
enter
xor
jns
dec
xchg
or
imul
push
add
scas
in
inc
aad
inc
cmp
jne
orb
fs
lret
inc
mov
lods
xor
pusha
sbb
leave
lock
xchg
and
push
lret
insl
add
arpl
imul
adc
sub
scas
push
mov
in
cmp
in
push
dec
lret
cli
mov
cmpb
insb
mov
and
xor
pop
ficompl
stos
dec
lret
cmp
dec
add
inc
jnp
ret
cmp
jnp
or
negb
ja
insl
mov
cmpsl
jnp
xorl
sub
jno
sbb
cmp
test
xor
sub
outsl
jno
push
ret
idivl
jnp
adc
mov
popf
lret
pop
mov
sub
or
xchg
shlb
jnp
sub
push
pop
ss
scas
mov
push
sbb
cmp
jnp
sbb
pop
xor
and
xchg
jnp
das
push
mov
rolb
mov
inc
fstps
call
comiss
push
clc
jnp
pushf
imul
xchg
pop
or
and
sub
loope
and
jg
pop
xor
jae
test
pop
dec
cmpsb
push
and
mov
mov
or
rcrl
jo
fdiv
js
mov
mov
mov
test
xchg
aaa
shrl
jnp
pop
fwait
cld
pop
jo
in
sbb
hlt
pop
call
ja
mov
inc
leave
adc
jb
mov
jbe
dec
mov
jnp
adcl
imul
mov
dec
shll
cmp
mov
fmulp
in
adc
jnp
imul
lds
mov
aaa
jecxz
iret
cmp
pop
or
or
inc
jnp
xchg
ja
jae
fwait
pop
or
lds
jae
jno
outsl
jnp
setb
imul
jmp
pop
pop
push
sarb
jnp
cmp
bound
idivl
sub
fldcw
mov
cmp
loopne
jns
or
xchg
mov
sub
dec
mov
lock
cli
sti
test
push
mov
fisttpll
ja
out
jnp
fadd
leave
push
xor
jnp
movsl
pusha
push
xor
inc
cmp
std
test
sbb
mov
adc
in
pop
push
pop
lods
filds
movsb
inc
mov
jae
dec
push
inc
stos
push
pop
shrl
lret
xchg
out
push
mov
jnp
cmp
lret
jo
dec
out
push
mov
push
push
out
pop
rorl
jnp
dec
add
icebp
lea
jnp
cld
nop
push
mov
incb
je
xchg
cmp
jg
aas
push
sbb
popl
outsl
jnp
arpl
cmp
fwait
in
jnp
pextrw
shl
sbb
mov
cmp
pushl
mov
cmp
in
imul
adc
outsl
clc
iret
clc
jnp
call
jo
popf
mov
jns
insl
cmp
ja
subb
xchg
jnp
test
cmp
or
in
jnp
loopne
scas
sahf
and
or
sub
xorl
ret
cwtl
lock
adc
test
outsb
int3
scas
lds
mov
pop
rorl
sub
mov
gs
mov
lahf
jns
mov
sbb
sti
add
mov
fdivrs
aaa
in
jae
add
out
lcall
mov
jle
daa
dec
insb
sbb
lods
scas
xchg
jne
inc
cmp
jnp
pop
dec
mov
mov
repz
xchg
scas
repnz
nop
cmp
sbb
adc
jnp
neg
jg
aad
mov
mov
insb
xchg
jnp
cmp
jecxz
clc
loopne
jnp
inc
sbb
sarb
mov
outsl
dec
test
pop
mov
jnp
mov
addr16
mov
sub
cli
or
cmp
xchg
sarb
out
add
ss
jnp
cmp
cmp
adc
lods
js
push
push
daa
xor
out
mov
in
test
lods
pop
xor
sub
lcall
mov
icebp
jae
xchg
mov
jnp
in
imulb
pop
jg
jnp
cmc
dec
cmp
adc
test
dec
pop
mov
cmp
push
test
pop
ja
jge
pop
lods
scas
cmp
jae
imul
lret
inc
xor
hlt
mov
ss
repz
in
sbb
push
fnsave
add
xchg
cwtl
mov
or
cmpsb
or
mov
sarl
nop
fdivrl
loope
and
mov
sbb
xchg
jnp
subl
iret
sub
pop
or
movsb
nop
outsl
cmc
cltd
fisttpl
divl
jle
jnp
push
lds
xor
insb
rolb
aam
xor
lret
pop
jg
add
sbb
sarl
mov
jb
mov
mov
mov
jnp
add
xchg
push
stc
mov
icebp
jnp
pop
jbe
inc
cmp
or
pop
jae
lret
sub
sub
cltd
int
arpl
mov
jnp
dec
bound
xor
mov
js
scas
sarl
push
aad
jmp
cmp
movsl
pop
and
out
outsl
or
sbb
mov
test
data16
push
sub
in
je
jp
insl
je
pop
pop
iret
mov
sbb
lret
popa
clc
push
mov
mov
jge
jle
inc
adc
adc
jne
cmp
loope
icebp
inc
pop
or
mov
and
call
mov
mov
sub
mov
rcrb
or
aas
cwtl
jnp
cltd
mov
out
mov
xchg
test
jnp
jae
jns
jmp
cmp
sub
je
cmpsb
call
pop
adc
and
pop
cmp
addr16
popa
and
cltd
xchg
ret
and
scas
outsb
lods
inc
push
pop
mov
push
orb
outsl
stos
loop
lds
in
jae
pop
mov
xor
sbb
fs
jecxz
mov
call
test
sbb
dec
sbbb
xchg
jmp
out
push
push
lret
orb
je
jnp
xlat
data16
dec
push
or
and
jnp
or
xor
fnstenv
pop
jnp
int3
call
cmp
js
orl
inc
idivl
xor
sarl
cli
cmpsl
test
sbb
or
xchg
popa
xor
and
jl
in
jae
movsl
iret
jnp
hlt
add
cmp
std
les
or
roll
stos
imul
pop
sbb
mov
lods
mov
pop
out
scas
jno
shll
and
mov
pop
push
and
cmp
pusha
lea
mov
jnp
pop
stos
cwtl
sub
pushf
and
movsl
shl
mov
sbb
pop
cld
mov
mov
out
cmp
lcall
adc
pop
je
jb
shrb
lods
push
push
sbb
or
xchg
stc
jns
mov
fiadds
jnp
fwait
mov
in
rcrl
notb
jnp
pop
into
lods
insl
xor
mov
xchg
in
cmp
mov
cmp
inc
jnp,pt
test
cmp
test
cmp
push
lods
ljmp
xor
test
ffreep
lret
lods
int3
aaa
in
lahf
jnp
sub
jnp
iret
cmp
std
xor
push
jns
pop
loop
adc
test
inc
jo
or
xor
jne
mov
loopne
mov
mov
mov
jnp
push
bound
jnp
nop
fstl
mov
lock
jb
jnp
and
jnp
or
xor
jnp
sub
fidivrl
inc
insl
imul
sbbl
mov
ret
push
jb
movsl
pop
fmuls
xor
imul
fs
ja
dec
mov
xlat
jae
daa
add
jnp
test
push
cld
out
sub
insl
sbb
int
or
lret
cld
ja
push
cmp
jnp
mov
test
mov
int3
sbb
addr16
jae
mov
xor
jl
stos
and
arpl
add
jne
das
addr16
cmp
mov
out
pop
mov
jnp
test
sub
shll
jge
cmp
jnp
push
out
arpl
jle
mov
test
jnp
inc
or
jnp
push
adc
scas
cmp
pushf
push
mov
mov
jmp
imul
std
or
and
jns
sbb
pop
cltd
xchg
jb
jnp
sbbb
cmpl
sub
icebp
mov
imul
sub
jp
jnp
lret
push
pop
or
shrb
sub
popf
repnz
int3
je
push
adc
cmp
js
fstpl
out
jns
mov
je
test
sub
push
dec
push
jnp
ret
dec
jl
rcr
in
or
jnp
insl
push
cli
xchg
cmp
jnp
into
lret
sti
fnsave
mov
movsb
arpl
push
fildl
xchg
jnp
lds
jp
sub
cmp
in
cwtl
das
jbe
cmp
ret
xor
insb
push
pop
cmp
movsl
out
lahf
pop
jnp
arpl
icebp
enter
cs
repnz
xchg
stos
or
jae
inc
jns
xchg
out
inc
dec
sbb
lahf
adc
lret
rorb
cmp
mov
fnsave
icebp
mov
fbstp
cmpb
cmp
mov
mov
in
jae
push
pushf
jecxz
pop
jle
mov
popf
outsb
vpermi2pd
mov
insb
lret
cmp
aad
sub
or
arpl
cmp
out
shrl
sub
mov
xchg
mov
jmp
cli
jnp
adc
or
xor
iret
stc
pop
movsl
cmp
jnp
lea
aad
push
jnp
fmul
lahf
mov
shrb
xor
or
lods
sub
loope
mov
sahf
jmp
ds
inc
and
sbb
mov
ljmp
gs
jno
fwait
insb
jb,pn
mov
in
pop
jnp
out
sbbb
cltd
inc
mov
imul
jae
mov
pop
call
jnp
push
mov
insl
dec
jo
scas
xchg
mov
sbb
adc
imul
arpl
xchg
jnp
cvtps2pi
std
repz
sub
jp
les
cmpb
push
or
std
imul
dec
lods
or
mov
inc
jae
and
jnp
push
and
fdivs
push
imul
out
sbb
cmp
cmp
sub
jne
sbb
jnp
stc
sahf
lret
ja
push
pop
adc
inc
jnp
xchg
cmp
dec
push
jnp
stos
sbb
addl
adc
cld
jp
lcall
arpl
inc
outsl
stos
test
sub
mov
cmp
scas
xchg
push
fwait
loope
ret
dec
sub
in
test
movsl
dec
push
jnp
lret
mov
xor
in
stc
push
sub
inc
outsl
jns
out
jnp
icebp
jno
sub
add
lods
bound
test
jnp
xchg
mov
push
mov
jnp
push
fwait
cmp
shl
mov
inc
fwait
xor
arpl
lret
push
ret
std
pop
jle
xor
mov
out
sti
inc
push
jnp
stos
movb
mov
repnz
outsl
test
xor
mov
jnp
outsl
or
push
adc
add
decl
fsubrs
out
clc
imul
mov
inc
push
outsb
fwait
cmp
pop
test
mov
jno
ret
mov
pop
test
jb
dec
push
or
shr
jns
and
cwtl
mov
jbe
push
cmp
bound
nop
cld
mov
dec
gs
test
arpl
or
mov
jmp
cs
mov
jmp
mov
jnp
mov
data16
dec
mov
inc
sub
xbegin
jnp
pop
pushf
test
fcoms
push
and
mov
shr
add
xchg
sbb
int
cs
jnp
pusha
jne
mov
dec
and
pop
and
mov
dec
sti
das
scas
push
lret
pop
stos
mov
aas
pusha
jb
jo
pop
jnp
fs
insl
lea
xchg
imul
movsl
incb
jae
cmp
cmp
fwait
mov
insl
dec
fildl
testl
insl
cltd
sbb
jge
jnp
push
sub
lret
stos
imul
xor
dec
ds
cmp
jg
push
inc
cli
jnp
push
stos
mov
inc
cmp
xor
push
and
jnp
das
mov
xor
jnp
inc
dec
popl
push
outsl
adc
bound
pop
adcl
aad
cmp
mov
pop
sbb
nop
xor
enter
jnp
or
cmp
jnp
fcomp
push
jnp
cmp
xchg
loop
inc
stc
jnp
adc
xchg
sti
aam
insl
jnp
aad
cmp
dec
in
and
outsl
xor
jnp
out
ficoml
cltd
insb
into
and
lret
sub
repnz
imul
mov
lea
jnp
add
cmp
std
fnstsw
mov
jp
mov
dec
insl
jno
mov
sub
sbbl
stc
jne
and
lahf
xchg
mov
xchg
outsl
mov
lret
jmp
jb
imul
cli
fstpt
ja
or
sbb
out
lock
imul
and
icebp
orl
lods
and
jo
pop
inc
fidivrl
jg
mov
movsl
sbb
imul
pop
add
insl
pop
jno
lahf
out
nop
jnp
sbb
icebp
cmp
xchg
outsl
pop
xor
add
xlat
push
and
arpl
or
cmp
jnp
testb
push
ss
pop
dec
jle
pop
dec
xor
mov
mov
ja
mov
cmc
sbb
lea
sub
jp
dec
jns
negb
fildll
ss
push
out
imul
add
sub
jae
push
and
fcmovu
push
and
ret
cmp
jnp
loopne
pop
lea
cld
jae
xor
push
sub
xor
mov
or
dec
jmp
sub
loope
jnp
mov
call
or
insl
xchg
insl
les
fwait
cmc
pop
push
push
pop
lret
sbb
fs
adc
cwtl
sbb
daa
ja
lds
outsl
out
xlat
cltd
lahf
and
jnp
jae
iret
int3
dec
in
jnp
pop
mov
xor
and
inc
push
adc
rep
ss
jo
sbb
in
cmp
mov
enter
cmc
sub
rcrb
nop
lahf
lret
mov
cmp
mov
mov
push
cmp
stos
or
out
aaa
sarb
pusha
jecxz
outsl
aas
in
jnp
jg
inc
pop
pop
mov
icebp
jnp
mov
pop
lret
jae
test
lret
sub
jnp
inc
je
enter
jnp
mov
mov
sti
imul
cmp
push
xchg
ss
call
or
bound
lret
jnp
mov
stos
mov
in
aad
cmp
mov
sub
push
jnp
cs
dec
repnz
jnp
or
pop
movsl
mov
iret
out
add
insl
or
std
sub
xchg
icebp
xor
sbb
in
add
inc
pop
jae
mov
aaa
mov
jnp
je
fstl
mov
insl
test
add
xchg
mov
mov
ret
call
push
in
pushf
add
roll
add
mov
xor
cmp
pop
fmul
pop
xor
xchg
jnp
rolb
fs
je
sbb
imul
lret
xorb
jnp
push
sub
scas
mov
jo
pop
jecxz
sbb
or
mov
in
jnp
aad
pop
push
mov
loope
inc
imul
int3
push
push
inc
mov
decb
adc
and
jns
pop
dec
xchg
adc
add
push
adc
xchg
repnz
sub
and
xchg
lret
lahf
sahf
lea
jle
cmp
push
test
and
cmp
fcmove
jg
inc
pop
sarb
rcrb
sub
loopne
outsb
mov
mov
or
mov
gs
mov
xchg
jnp
pop
adc
sti
cli
int3
jbe
insb
loop
jnp
xor
stos
or
jnp
add
sub
jmp
sbb
or
inc
sub
hlt
push
and
pop
out
cmp
sbb
inc
scas
in
lods
ja
sub
jnp
xor
cmp
push
imul
add
xor
cmp
loopne
mov
sbb
cld
daa
jnp
dec
mov
dec
daa
imul
pop
notl
dec
mov
sbb
mov
cld
or
sbb
mov
adc
xor
cli
or
imul
fists
aad
add
cmp
lret
negb
jmp
and
adc
je
pop
cld
outsl
cli
mov
in
jnp
push
shl
add
movsl
clc
inc
xor
and
pop
jecxz
mov
cs
in
icebp
test
cmc
jae
into
rcll
adc
test
inc
push
jecxz
je
cmpsb
imul
dec
inc
add
jae
shlb
push
in
jnp
cld
dec
jl
icebp
jge
insl
sub
adc
sbb
pop
stos
cltd
or
ror
pop
push
sub
adc
jmp
pusha
ss
cmp
data16
and
in
jnp
test
mov
paddw
push
dec
inc
hlt
cmp
xchg
jbe
dec
cmp
jg
xor
out
xor
pusha
dec
xlat
jb
xchg
ja
leave
lret
add
ds
fstpt
pop
popa
lret
mov
jnp
lea
shl
xor
mov
cmp
jnp
mov
mov
lock
pop
add
js
outsl
mov
imul
xchg
add
cmp
xlat
out
jnp
insl
inc
cmp
mov
sub
pop
xor
add
sbbb
dec
push
ss
lahf
shr
jae
cmpl
inc
cmpsb
imul
popf
xor
and
inc
cltd
mov
xchg
jnp
repz
ljmp
push
leave
cmc
js
je
cmpsb
jnp
cs
aad
daa
lret
pop
dec
aas
ss
cld
jnp
in
imul
jnp
xor
repnz
mov
and
fistpl
cs
jnp
adc
push
stos
mov
outsl
mov
mov
clc
cmp
xor
push
shrb
iret
and
or
jecxz
jnp
stos
sub
or
mov
pop
insl
and
pop
sbb
push
fs
jnp
subb
out
mov
cmp
pop
insb
in
aaa
je
cwtl
sbb
stos
ss
insl
add
iret
pop
loope
fdivrp
mov
mov
dec
call
adc
add
mov
jo
adc
pushf
mov
data16
cld
dec
mov
adc
xchg
lods
cmp
jnp
in
ret
adc
sub
bound
repnz
jnp
mov
fisubrl
sahf
xor
bound
test
or
jecxz
push
insl
or
jb
jnp
xor
test
pop
das
jnp
jns
pop
xchg
mov
or
imul
inc
xchg
cwtl
mov
loop
jecxz
repz
or
cmp
fnstcw
out
mov
push
mov
push
jnp
iret
dec
or
addb
jnp
mov
jp
sahf
jae
jnp
nop
push
sub
lods
sti
or
jno
jae
popa
and
xchg
xchg
das
mov
jnp
in
gs
push
movsl
jnp
mov
ds
adc
aam
sbb
out
lea
dec
or
push
push
jnp
shrb
jb
ja
scas
mov
jnp
mov
lock
test
push
jnp
pop
mov
mov
jnp
repz
dec
adc
rcll
mov
repnz
jnp
fcmovu
lahf
inc
cmc
push
jnp
fldl
inc
movsb
lret
mov
js
sub
pop
push
add
jnp
popf
jnp
arpl
aad
sub
lds
mov
js
outsb
cmpsl
mov
into
cmp
or
mov
popf
adc
movsl
out
mov
imul
inc
mov
lret
lods
out
jb
and
out
rolb
jnp
negl
push
jmp
mov
outsb
outsl
in
pop
push
in
jnp
xor
jbe
sbb
ljmp
cmp
xchg
sub
lock
mov
into
outsb
cld
adc
xchg
push
mov
pop
xor
lods
mov
fadds
jecxz
gs
dec
xor
pop
xchg
sbb
lock
test
fdivs
adc
xor
out
jmp
inc
mov
pop
bnd
mov
cmpsl
jae
pop
mov
into
insl
xor
and
shl
jle
xchg
mov
insl
dec
cwtl
pop
test
xchg
ss
inc
add
mov
or
jnp
adc
or
inc
mov
js
jnp
cmp
sbb
and
cmp
dec
jae
mov
jg
mov
in
jnp
lods
add
daa
xor
int
adc
jmp
pop
push
jae
fwait
out
aam
or
jno
fldt
or
jnp
loope
cs
push
or
dec
icebp
and
outsl
stc
add
and
jnp
cmp
js
pop
js
imul
xor
enter
aas
icebp
repnz
jnp
or
push
pop
push
push
sti
dec
pop
jnp
xor
bnd
adc
decl
lock
or
mov
mov
dec
cmp
mov
fsubl
imul
dec
or
jae
call
adc
int3
jnp
sbb
add
lret
sbb
cmpsb
fnsave
push
and
iret
stc
pop
movsl
scas
jnp
cmp
pop
xor
dec
add
imul
gs
add
call
mov
cmpl
or
test
mov
push
popa
imul
stc
rol
or
je
addr16
sub
sub
in
jae
dec
push
jnp
pop
cs
repnz
adc
pop
outsl
jg
xchg
std
mov
pop
imul
xchg
xchg
das
jl
and
shr
jno
jle
fadd
push
jnp
sbb
dec
pop
stc
sub
mov
jae
mov
jge
jbe
sbb
jae
cwtl
mov
jb
test
jnp
mov
inc
mov
lea
mov
rcl
ss
mov
cmc
test
cmpsb
outsl
dec
movsb
jl
jnp
push
push
or
push
jmp
xchg
out
mov
mov
adc
das
jnp
jbe
repnz
push
jae
inc
subw
cs
es
or
jg
mov
xor
xchg
in
push
mov
or
or
sub
das
jnp
mov
ds
jno
adc
shl
out
push
xor
jnp
test
adc
fs
jnp
out
and
out
xor
or
cmp
inc
loop
mov
outsb
pop
divb
sub
lret
mov
fwait
cmpsl
push
jo
jnp
mov
hlt
or
scas
dec
jnp
xor
and
js
lods
sbbb
dec
in
cltd
xchg
shll
aad
pop
add
cmp
mov
jbe
push
dec
dec
inc
aaa
outsl
lret
pop
jecxz
sub
sbb
add
inc
int3
in
or
pop
jo
mov
pop
jae
call
inc
pop
jnp
jmp
sub
addl
cmc
stc
cmp
fidivrs
sub
test
and
mov
xchg
shr
jo
dec
push
or
xor
clc
inc
jne
inc
dec
sbb
adc
or
xchg
push
idivl
mov
test
mov
aas
hlt
jb
jnp
loope
lret
pop
inc
ret
adc
cs
mov
sbb
xchg
aam
iret
push
std
add
js
cld
in
jnp
call
inc
sub
addb
scas
dec
push
inc
inc
and
mov
dec
cmp
call
lds
ret
das
inc
imul
jecxz
shrl
add
int
sbb
xor
and
sub
jo
push
insl
mov
js
xor
cli
nop
lret
xlat
sub
jae
push
dec
sub
data16
jae
xchg
fldenv
jnp
insl
in
popf
sbb
pop
fmul
aas
xor
or
std
in
fistl
jnp
and
jo
jnp
rcll
mov
push
inc
cmpb
lods
loope
adc
and
aaa
push
mov
xchg
mov
xor
rcll
les
cmp
sub
cli
and
sahf
in
dec
dec
ja
add
lock
add
or
fisubrs
dec
mov
jo
outsb
movsl
jmp
sbb
jmp
xor
pop
and
sbb
jns
mov
gs
and
xchg
idiv
clc
sarl
mov
mov
fdivrs
jge
in
mov
and
stc
arpl
dec
ret
inc
push
lods
jne
mov
es
or
add
dec
adc
lret
aad
jbe
loopne
pop
sub
insl
test
cmp
xlat
int
movsb
add
sbb
jnp
cwtl
inc
in
loopne
into
mov
cmpsl
xor
cmp
mov
or
xor
push
adcl
cmp
call
cld
enter
sti
outsb
jno
mul
lds
cli
call
xchg
jnp
or
pushf
sub
add
in
scas
das
sahf
pop
jbe
jmp
fs
adc
dec
jnp
mov
outsl
add
mov
daa
ss
stos
lods
or
mov
aam
mov
pop
ljmp
mov
jmp
mov
inc
sub
jnp
sti
pop
inc
push
rcrl
mov
ja
push
fucom
dec
mov
daa
ss
dec
rep
pop
xor
outsb
jae
push
push
push
jnp
dec
pop
mov
jnp
cmp
or
loope
movsb
lret
mov
jnp
clc
hlt
cvtps2pd
popf
dec
pop
insl
imul
inc
pop
mov
cmp
mov
fstp
jnp
in
aaa
loope
push
dec
mov
cmpsb
sbb
arpl
enter
xchg
aaa
adc
adc
xor
mov
jnp
sub
cmp
into
lahf
sti
sub
dec
jge
mov
or
std
rep
mov
xchg
jecxz
jb
dec
scas
push
dec
push
imul
mov
fistpll
mov
jg
xor
insb
jnp
out
xchg
or
or
dec
xchg
call
mov
lods
out
add
add
in
or
ss
ret
sub
push
cmp
push
fists
push
add
mov
jnp
sub
loope
adc
xchg
cmp
push
bound
lods
jae
jnp
mov
mov
jnp
into
inc
aad
and
mov
mov
xchg
sub
sub
sbb
and
pop
add
jnp
int
jnp
cs
insb
sub
jnp
pop
jmp
jge
mov
clc
sub
test
insb
lahf
or
shrb
std
or
jl
sub
loope
mov
jnp
int
out
and
insl
dec
mov
pop
sbb
lcall
lea
mov
movsb
jbe
rorl
cmp
jnp
stc
add
ss
jnp
imul
iret
inc
sub
cld
jb
jl
xor
aad
call
pop
adc
jae
dec
jo
outsl
jmp
and
add
dec
sub
sub
jnp
lods
into
adc
pop
aaa
fld
jnp
xchg
xchg
pusha
repz
scas
jnp
push
sahf
les
inc
fiaddl
xor
inc
mov
aaa
insl
js
jnp
mov
stc
or
in
inc
push
pop
ja,pn
out
cmp
pop
xchg
jnp
repz
into
out
in
jnp
push
mov
mov
and
ja
sbb
sbb
sub
stos
or
icebp
fnstcw
adc
sbb
or
cmp
ljmp
rcll
in
je
xchg
sbb
cs
lods
nop
shll
xchg
dec
test
mov
ss
cltd
dec
cmp
outsb
or
ret
push
in
jl
lock
jge
mov
aam
jnp
pop
std
adc
xor
jnp
lret
in
mov
mov
insl
xor
and
int
inc
jnp
or
sub
push
fsts
imul
repz
scas
shrl
push
dec
insb
popf
dec
imul
fdivrl
lea
outsb
imul
stos
fldenv
je
lods
push
lcall
fs
inc
roll
mov
pop
arpl
fistpll
mov
jbe
hlt
scas
jmp
lcall
jne
sar
enter
cmp
cltd
mov
jnp
adc
fiadds
clc
iret
xor
and
shl
dec
jne
pop
jnp
xchg
dec
jnp
lods
push
and
jmp
scas
les
jnp
pop
in
test
dec
or
int
outsb
jnp
sub
pop
cs
fidivs
call
jnp
cmp
xor
or
mov
jo
scas
pop
jnp
and
cmp
ss
mull
js
pop
mov
arpl
lock
ja
pop
test
fdivrs
lret
jp
repz
jecxz
pusha
imul
cmp
xchg
lods
jnp
inc
jne
mov
imul
or
scas
xchg
jb
jnp
pop
loopne
push
fstp
dec
mov
lods
or
mull
mov
fiadds
nop
pop
adc
push
adc
lret
sbb
call
cli
popa
je
je
lock
push
pop
mov
mov
jnp
pop
mov
push
arpl
jo
inc
scas
leave
dec
lret
sbb
push
cmp
adc
shrb
ja
add
sbb
sbb
adc
dec
rol
je
outsl
push
xor
ret
lock
push
inc
mov
lret
lods
mov
pop
lcall
dec
std
enter
mov
or
arpl
lock
jmp
push
xlat
sub
mov
loop
js
cmp
in
cmp
jnp
mov
or
lea
dec
sub
sbb
stos
inc
jge
cmp
push
imul
cltd
lods
cs
inc
hlt
cmpsl
mov
stc
stos
imul
lcall
cmp
sbb
mov
ss
jnp
lret
addr16
dec
lock
jl
ljmp
mov
xchg
lods
cltd
jae
int
js
stc
sti
out
insb
je
mov
jg
or
es
insb
in
and
pop
lret
cmp
xor
jnp
dec
icebp
cmp
pop
mov
sbb
pop
mov
imul
push
sub
jmp
mov
out
push
iret
jne
lahf
and
dec
xor
int
cmpsl
xor
pusha
ss
sbb
jecxz
pop
cmp
sub
into
scas
sub
ja
loope
stos
mov
das
jle
outsl
cwtl
shrl
out
xchg
test
jmp
sub
outsl
stos
xorl
jnp
or
dec
ss
outsl
out
inc
out
inc
xor
sbb
ja
aas
sbb
jno
and
out
push
imul
mov
inc
addr16
clc
jno
shrb
sbb
cmp
ret
cmp
imul
or
sub
sbb
adc
xchg
jnp
ds
lcall
scas
sbb
jnp
dec
or
les
hlt
andl
movsb
mov
sbb
pop
outsl
imul
idivl
imul
negl
sbb
outsl
push
call
adc
mov
lret
push
and
cmp
les
and
in
jnp
out
pop
cmpsl
rcrl
cmp
fstpt
js
repnz
imul
jae
cld
arpl
ficompl
push
fcmovne
xchg
aaa
shll
fsub
add
aam
or
inc
mov
in
dec
sub
sbb
pop
in
add
aaa
mov
and
data16
insl
and
or
jnp
shlb
jnp
push
stos
jecxz
mov
sub
jmp
and
or
int
jnp
xchg
insb
movb
dec
add
jp
xor
es
jnp
cli
sbb
jnp
pop
clc
cmp
cltd
xchg
mov
ja
mov
cmp
jae
movsl
adc
sub
aaa
in
imul
arpl
loopne
insb
clc
in
xor
pushf
push
jne
std
pop
out
jno
and
push
ja
fwait
ljmp
ja
jg
mov
push
mov
mov
pop
repz
fstpt
pushf
es
rorl
mov
xor
adc
daa
or
xorl
cmp
pop
ljmp
sub
js
xchg
sbb
and
jnp
popa
push
dec
sbb
lods
lds
push
test
scas
test
inc
cmpsl
or
fmul
xor
fdivrs
jmp
das
in
cmp
fiaddl
js
adc
in
enter
push
mov
dec
movsl
push
outsl
xchg
xchg
jmp
cmp
mov
jnp
xchg
xor
push
les
pop
mov
sbb
imul
dec
dec
add
jnp
insl
sub
mov
adc
in
jecxz
cmp
pop
fsubrl
mov
mov
das
orl
mov
xor
sbb
aaa
testb
cmp
and
mov
insl
mov
xor
jnp
into
sub
sbb
mov
sbb
inc
cmpl
and
xchg
pop
xor
mov
jnp
loopne
cs
test
stos
subl
addr16
dec
in
cmp
mov
jnp
or
fisubrs
ja
xchg
repz
cmp
and
dec
out
adc
js
add
adc
push
cld
insl
decb
mov
jnp
insl
addr16
or
leave
int3
jb
cli
jnp
lret
stos
inc
nop
subb
inc
aaa
add
imul
xor
pop
outsb
jns
cmpb
outsl
jge
jmp
sub
push
jb
pop
scas
dec
imul
movsb
cs
pop
jnp
nop
loopne
xor
insl
enter
sbb
in
jnp
mov
rcll
imul
out
xor
stos
insb
adc
fnsave
dec
int
mov
jnp
popf
push
mov
and
mov
sbb
mov
sub
dec
shlb
cltd
dec
cltd
lcall
hlt
in
and
jnp
mov
xchg
pushf
dec
add
cmp
mov
mov
ffree
mov
in
dec
mov
std
jns
out
or
sub
outsl
jne
dec
outsb
mov
cmp
dec
and
jnp
test
pop
jnp
inc
call
push
jb
sbb
mov
sbb
ret
pop
int
fsubrl
cld
mov
sub
daa
jnp
pop
push
repnz
jg
jnp
mov
imul
dec
outsl
xchg
inc
sbb
jnp
push
sub
or
je
cwtl
xchg
pop
daa
pop
sbb
iret
fistpll
cmp
sahf
jno
outsl
xor
pop
lcall
push
dec
cmp
adc
jnp
mov
fsubs
dec
xchg
dec
mov
sub
rorl
mov
cmpsb
cmp
sbb
aad
in
push
jns
movsl
jnp
nop
sbb
pop
out
jnp
insl
cs
sarl
pop
sbb
mov
jnp
jmp
aaa
jns
je
dec
sbb
mov
cmpsl
out
pushf
pop
les
sti
lea
fildl
mov
imul
sahf
cwtl
mov
aas
rorb
out
out
loopne
xchg
popf
jl
loope
call
repz
push
rcrb
mov
mulb
imul
insl
test
jb
inc
mov
xchg
jnp
jp
xor
cmp
mov
dec
cmp
dec
cmpsb
cmp
out
outsl
vcvtsi2sdl
fidivs
xor
testl
inc
enter
push
cld
push
and
mov
fcmovb
sbbl
lods
in
mov
xor
mov
sahf
shll
inc
repnz
jmp
mov
or
stos
jb
aaa
imull
test
scas
out
dec
xchg
jnp
mov
push
ja
aad
jne
adc
inc
pop
mov
pop
test
mov
int3
push
data16
or
xchg
fldcw
jnp
xor
sub
dec
jnp
jp
scas
insl
hlt
adc
push
xchg
cmp
jg
ljmp
movsb
dec
std
inc
stos
out
outsb
jp
xor
es
aam
inc
push
push
adc
xor
sub
cli
xchg
jnp
iret
cmp
inc
lock
in
mov
in
xor
jnp
icebp
lret
jne
cmp
xor
cmpsb
mov
dec
mov
out
pop
mov
jnp
sbb
test
sbb
and
push
mov
lds
sbb
push
or
adc
insl
dec
stos
cmp
repz
aam
adc
rcll
jno
mov
cmp
mov
in
ss
je
dec
pop
jbe
outsl
fbld
je
dec
js
rsm
fs
test
mov
push
jnp
lds
outsb
sbb
mov
cmpsl
cli
aam
into
gs
sbb
jnp
push
cmp
int3
mov
mov
pop
mov
insl
mov
adc
cmp
push
cmpsb
dec
cmc
sbb
mov
fnstenv
jnp
cmp
xchg
ret
mov
adc
in
pop
inc
xor
fisubs
jnp
pop
add
testb
adc
dec
adc
jns
inc
jnp
fnstsw
imul
dec
ss
push
add
and
mov
gs
sub
push
jnp
movl
lret
xor
ja
jae
fsubrs
xchg
jnp
xor
cmp
xchg
push
or
lret
imul
fnsave
inc
sub
mov
pop
and
pop
jnp
aam
nop
cmp
lcall
jnp
cs
jp
inc
les
add
jnp
fdivrl
jge
sti
sbb
jg
ja
sbb
dec
call
fidivrs
xor
push
sbb
in
imul
cmp
xor
pop
mov
dec
xchg
rep
lock
jnp
and
mov
sbb
stos
int
movsb
rcr
jnp
dec
add
imul
push
in
jbe
inc
cmpb
adc
lock
jecxz
outsl
sub
pop
daa
lods
mov
jnp
push
sub
mov
jnp
xor
mov
inc
jnp
lcall
jnp
icebp
or
jecxz
mov
shrl
pop
push
cmp
cli
xor
mov
js
xor
leave
adc
adc
dec
lods
sub
xor
or
jnp
fimull
mov
mov
pop
imul
push
jns
cmp
mov
add
ss
int3
js
pop
jmp
insb
pop
xor
mov
pop
xchg
jnp
into
jo
xchg
xor
dec
jns
ja
fwait
sub
int3
es
incb
cmp
mov
inc
psllw
data16
out
xchg
jns
sub
or
shlb
adcb
jno
and
je
or
loopne
sub
inc
cld
sub
popf
cmp
jg
xor
lahf
xorb
dec
pop
and
pop
sub
jg
mov
jnp
mov
push
mov
inc
add
out
sbb
aaa
lahf
cld
fldt
cmp
mov
insl
lods
fildll
jg
sbb
adc
out
sbb
pusha
into
insl
push
pop
sahf
jnp
push
lar
shrl
imul
cmp
fiaddl
shl
cmpsb
loop
mov
into
or
or
movsl
enter
sbb
pushf
jnp
ret
aas
jb
fstpt
jbe
imul
adc
cmp
mov
dec
mov
pop
or
sbb
jne
jp
dec
clc
rcl
sbb
sarb
pop
mov
repnz
icebp
loope
lahf
test
adc
shl
sub
and
sti
das
sbb
jnp
je
adc
dec
stc
jmp
cmpsb
add
jnp
cwtl
popa
mov
mov
out
sti
xchg
inc
out
test
imull
iret
xor
cld
in
je
sbb
popa
call
adc
insl
ret
inc
push
lods
or
mov
sbb
cmpsb
dec
jb
adc
lds
andb
xchg
add
cli
mov
pop
mov
ret
mov
in
dec
dec
fidivrl
clc
or
mov
add
lods
or
inc
test
mov
xchg
lcall
shr
lods
mov
fldt
sub
inc
xor
rolb
adc
stos
xor
dec
cltd
outsl
incb
adc
jae
xor
jo
jnp
push
addl
jbe
jb
jnp
popf
es
xor
imul
mov
imul
or
ret
pop
dec
and
in
stc
adc
movsl
outsl
call
mov
imul
adc
push
lret
insl
pop
das
or
jbe
jno
outsl
mov
test
or
cmp
popa
mov
dec
push
out
mov
sarb
repz
lods
pushf
enter
shll
xor
in
ds
imul
mov
mov
inc
cwtl
jmp
dec
je
jnp
adc
nop
sbb
push
mov
shll
push
cmp
mov
add
arpl
nop
fwait
mov
je
popf
hlt
testb
lret
into
jnp
bound
dec
cmp
sbb
fwait
inc
cmp
stc
and
inc
loopne
mov
sub
and
mov
jnp
shll
mov
xor
mov
push
les
inc
in
mov
jb
jnp
cs
stos
jnp
add
xor
jbe
mov
call
out
fcomi
push
inc
clc
sbb
xlat
outsb
sub
and
js
mov
jae
mov
gs
jae
xchg
aaa
and
or
jge
xchg
jnp
inc
movsb
push
add
mov
fcmovbe
mov
aaa
icebp
lret
adc
sbb
ss
jnp
push
sub
cs
sbb
pop
jnp
cmpsb
jg
inc
mov
jnp
xchg
push
add
jnp
nop
push
add
jnp
mov
sub
sbb
scas
add
in
lret
jnp
cmp
sub
mov
jnp
mov
cmpsl
jnp
js
arpl
sbb
jnp,pn
or
ret
mov
ss
sub
dec
jnp
cmp
add
xor
jnp
stos
test
mov
ljmp
das
sub
iret
jmp
pop
cltd
xchg
adc
jnp
or
sbb
jbe
mov
es
lds
jb
mov
pop
cmc
jnp
lcall
shll
mov
jnp
xor
sub
or
insl
pop
push
jnp
push
push
loop
jecxz
adc
test
test
jnp
xor
mov
cltd
popa
dec
mov
jge
cltd
jp
call
imul
lret
fmuls
hlt
jnp
cmc
popf
jge
fstpt
xor
jae
cmp
push
push
call
ret
mov
mov
in
jns
cmpsb
mov
inc
mov
jo
sbb
outsb
xchg
xor
pusha
mov
pop
ja
mov
sti
adc
movsb
out
lret
push
fcmovnb
xchg
jae
or
dec
sub
cmp
xchg
in
decl
xchg
cmp
insb
adc
xor
and
jo
ja
ret
jl
ret
sub
xor
fwait
mov
out
dec
jnp
movsl
lahf
xchg
pop
js
pop
dec
ja
pop
or
xor
jb
out
int3
stos
shlb
in
sbb
push
mov
xchg
and
in
sub
test
push
and
cld
inc
jle
jnp
mov
bound
jnp
cwtl
adc
jnp
aas
pop
cmc
or
insl
negl
jmp
orb
jnp
lretw
pop
xchg
out
movsb
cmp
sbb
inc
lea
jbe
xchg
andb
in
jnp
push
cltd
xchg
movb
mov
das
icebp
pop
and
or
and
jecxz
popf
clc
sub
aaa
inc
mov
jnp
ljmp
sbb
loope
mov
clc
push
cmp
xor
insl
cmp
pop
sbb
push
aam
imul
out
out
imul
cwtl
sub
mov
out
add
dec
test
jnp
icebp
iret
xorb
sar
imul
mov
add
dec
cmp
shr
repz
stos
test
jo
shl
jnp
jg
sahf
dec
rolb
adc
jnp
jg
outsb
jnp
ror
jne
scas
and
mov
fisubrl
push
hlt
insb
jle
push
pop
shlb
enter
jne
ss
inc
insl
xchg
movsl
and
jnp
gs
mov
out
pop
clc
adc
mov
jae
aas
leavew
xchg
jnp
mov
xchg
jnp,pn
fisubrl
push
jbe
dec
popa
jnp
inc
pop
mov
cltd
mov
shr
cmp
cmp
or
icebp
je
test
jnp
push
inc
lret
fidivrl
rcrb
jnp
or
mov
movsb
sub
mov
push
pop
cmpsb
lret
les
push
movsl
mov
sub
pop
add
xor
ficoms
pop
jnp
ss
jns
jb
mov
sbb
lahf
and
ds
jbe
mov
aad
inc
sarl
stc
sahf
mov
fdiv
mov
js
repz
pushf
mov
adc
fimull
jnp
xor
aam
call
push
or
lods
js
fistpll
inc
je
inc
push
sub
and
cmp
jnp
mov
enter
outsb
fwait
lret
ja
jno
cmc
jnp
mov
popf
sti
hlt
lcall
shlb
pushl
adc
jnp
cmp
mov
nop
aaa
cpuid
jnp
andl
clc
sub
and
cmp
jnp
int3
mov
mov
fldenv
stos
xor
add
cmp
and
std
jae
ljmp
lret
addr16
sbb
add
and
lret
jb
adc
sub
outsb
cmp
stc
sbb
mov
cmp
cmp
jae
mov
loop
add
xchg
ret
sarb
dec
movsl
lock
in
fdivrs
or
lret
xor
add
mov
xor
mov
fwait
inc
cmp
cmpsb
mov
pop
movsl
lret
pop
test
push
js
scas
dec
xlat
inc
mov
xor
cs
sub
cmp
jnp
ficoml
neg
pop
lcall
xlat
sub
fnstsw
fmul
imul
push
fcoml
mov
dec
sbb
lret
xchg
xor
rcll
orl
mov
cmp
addr16
lcall
push
cmp
jnp
mov
stos
sbb
imul
orl
cmp
insb
jmp
mov
push
cmp
pop
cmpb
cltd
mov
or
dec
push
test
mov
jnp
jmp
pop
xchg
fstps
push
jnp
pop
adc
push
jnp
cmp
sbb
or
push
mov
lret
adc
jnp
adc
dec
lods
dec
push
enter
jb
xor
push
lretw
mov
dec
int
cltd
jo
inc
lods
jnp
scas
cmp
sub
sbbl
or
loop
adc
pop
xor
outsl
cmp
mov
sti
pop
dec
out
fnsave
clc
sub
arpl
jns
ss
jb
stos
sbb
dec
test
adc
jl
jmp
mov
dec
xchg
push
jnp
lret
jle
sbb
jbe
nop
fistpl
push
and
lahf
jnp
in
lcall
ja
js
xchg
insb
das
jnp
dec
cld
and
mov
je
xor
imul
pop
xchg
in
xor
out
push
dec
aaa
cmp
push
adc
test
fistps
sbb
scas
mov
lret
pushf
fsubrs
insl
std
mov
push
jae
sbb
scas
loopne
dec
bound
insl
mov
lret
aaa
mov
cmc
test
lds
int
or
add
jnp
out
and
xor
mov
sarb
dec
push
jae
jbe
mov
cmpb
test
jo
or
gs
jne
push
push
mov
xlat
sbb
mov
clc
fnstsw
addr16
mov
sarb
dec
bound
cmp
mov
lahf
lods
adc
ds
jnp
insl
adc
es
mov
or
mov
dec
mov
jnp
xchg
mov
mov
jae
jnp
push
cld
cmp
pop
ja
push
iret
push
dec
ja
or
sub
jnp
movsb
inc
clc
adc
loopne
dec
cmp
pop
pop
jo
inc
test
jb
dec
push
or
loope
lods
pushf
ret
pop
fst
jo
sarb
rcrl
dec
pop
adc
cmp
mov
cmp
out
push
xor
adc
repz
or
xchg
insl
ja
jp
xchg
pop
sub
rcrl
es
xorb
mov
mov
inc
jnp
push
lcall
ret
rcr
fwait
stc
je
jnp
add
mov
sbb
adc
sub
cmp
jnp
aad
inc
or
cld
add
adc
lret
jo
jp
cmc
xchg
mov
push
lcall
inc
mov
lahf
cmp
fcoms
xchg
xchg
loopne
push
ret
mov
jnp
inc
in
push
subl
jnp
jmp
fidivl
add
jnp
ljmp
jnp
jb
xor
xchg
mov
jnp
fiaddl
xchg
jno
xchg
lret
ss
clc
sbb
push
push
shl
jnp
pushf
or
mov
push
ret
mov
repz
jb
xchg
leave
rorl
call
stos
lahf
mov
outsl
cmp
pop
sbbb
jae
repnz
jns
xchg
clc
in
pop
sub
adc
lods
jnp
inc
push
xchg
mov
adc
arpl
pop
sbbb
lds
xchg
fistpll
mov
rcrl
mov
imul
cmp
loopne
xor
fs
ss
icebp
clc
les
mov
and
bound
int3
and
and
pop
mov
pop
shrb
and
scas
xchg
jae
fs
les
adc
scas
sahf
adc
mov
cmp
call
jno
int3
fsubp
leave
imul
inc
les
adc
sub
jnp
cmp
aam
aaa
mov
mul
mov
in
jnp
mov
jge
jb
jbe
push
xchg
jnp
inc
pop
cmp
and
add
push
jnp
jmp
cmp
jo
jnp
add
jne
jecxz
dec
and
pop
je
out
lods
mov
data16
cmp
outsl
out
repnz
push
rorl
xchg
pusha
mov
jnp
in
shr
add
pop
cld
jnp
cmp
scas
jnp
sbb
mov
push
jo
sbb
outsl
aam
push
mov
lods
jmp
hlt
stos
insl
fisubrs
into
leave
or
xor
jnp
mov
subl
out
cwtl
das
sbb
push
jmp
arpl
adc
dec
pop
imul
jnp
add
pop
inc
mov
xchg
pop
lcall
and
enter
xorb
push
ja
js
mov
rcrl
fs
jnp
enter
loop
cvtdq2ps
adc
xchg
mov
ja
in
insl
xchg
dec
jnp
ret
cmpl
scas
xchg
push
mov
popf
mov
xor
hlt
imul
cmp
sbb
int3
fdiv
icebp
add
in
or
jmp
or
cmp
mov
and
lods
sub
jnp
inc
dec
mov
mov
inc
push
mov
das
xchg
pusha
push
cmp
ljmp
jnp
test
xor
movsb
jnp
sub
sub
mov
pavgw
add
push
jne
jp
aas
ss
or
shrl
or
sbb
jg
or
mov
imul
xchg
andl
and
xchg
mov
in
dec
jnp
ss
xchg
dec
pop
or
push
xor
insb
rcr
cmp
jge
jo
and
cmp
mov
test
testb
ss
enter
jl
loope
xor
jnp
aam
bound
test
mov
jo
outsl
call
repnz
loop
fbstp
inc
stos
mov
or
mov
lock
pop
out
mov
outsl
xor
stos
jnp
jbe
mov
push
sahf
sbb
jnp
mov
mov
int
lcall
les
clc
iret
mov
mov
sarb
xchg
add
sub
lahf
sub
loope
std
sbb
adc
ja
aas
sbb
mov
sbb
push
ljmp
cmp
inc
push
mulb
gs
cwtl
xchg
push
cmp
add
out
in
js
sub
cmp
sbb
xor
ja
mov
cmp
scas
jae
jl
test
js
lock
imul
and
rolb
pop
aas
adcl
lods
insl
jge
xor
mov
shr
jnp
repnz
sbb
mov
int3
sahf
xor
jnp
pop
mov
lahf
dec
in
mov
hlt
scas
sub
mov
ja
jae
mov
mov
addr16
in
jnp
dec
xorb
xor
sbb
push
mov
loope
out
jp
pop
stc
idiv
pushf
stos
jnp
cltd
fnstenv
lret
jnp
jno
push
xor
add
popf
push
jbe,pn
pop
addr16
jnp
sbb
movsb
jp
sub
sbb
cmp
mov
test
push
shlb
cmp
sbb
lods
inc
xchg
lret
ret
sub
dec
es
movsl
jae
inc
add
or
cmp
adc
jnp
in
ljmp
cs
pop
or
icebp
sub
addr16
shrl
test
jae
ljmp
lcall
lret
xchg
xor
ror
std
jns
mov
xor
sbb
stos
push
sbb
leave
mov
dec
je
cmc
or
cmp
js
dec
push
cld
sbb
xchg
mov
mov
mov
icebp
jns
mov
lahf
ja
outsl
or
cmpsl
jnp
sbb
sbb
sahf
mov
stos
xor
cwtl
cmp
test
out
stc
sub
adc
xlat
inc
sbb
xchg
pop
fcmove
enter
scas
sbb
dec
adc
add
cmp
mov
jnp
sbb
adc
jle
les
test
fs
sahf
call
lods
ja
add
sub
jnp
ficoms
mov
imul
outsb
mov
aad
sub
fs
fwait
dec
or
dec
pop
imul
mov
lods
mov
stos
sbb
outsl
dec
aas
sbb
lock
dec
test
xor
add
jae
imul
loopne
pop
push
sbb
adc
inc
fwait
jnp
shll
sbbl
das
jns
pop
insl
jl
mov
pop
inc
scas
sub
or
push
out
mov
jnp
inc
xchg
testl
jae
call
adcl
out
push
cmp
jnp
daa
sbb
outsl
jo
jnp
mov
jbe
jnp
dec
mov
sti
jnp
push
and
cmp
pushf
jae
movsb
adc
pop
aad
cli
in
jns
fs
outsl
adc
adc
mov
imul
jns
sahf
pop
aam
jb
push
daa
ja
sub
imul
jnp
sbb
mov
cmp
cmpsl
jnp
lcall
jnp
mov
mov
insl
shll
cs
xor
jno
cmp
dec
jns
fs
jb
push
mov
outsb
inc
jae
dec
aad
mov
jae
scas
and
imul
pop
cltd
push
arpl
jnp
or
or
lock
jne
xchg
lahf
ror
lret
push
popf
cmp
pop
inc
cmp
fistpl
jnp
dec
jns
dec
xlat
sbb
lret
outsl
dec
xchg
pushf
sub
js,pt
jl
jnp
jno
subb
pusha
pushf
aaa
leave
and
xchg
mov
or
imul
inc
adc
jnp
mov
sbb
jnp
xor
jnp
fcmovnu
cmpsl
mov
adc
sbb
insb
nop
outsb
insl
inc
and
lahf
push
ja
jg
mov
mov
inc
imul
cmpl
sub
adc
out
sti
fmull
cmp
or
js
mov
sahf
xor
xchg
lock
jnp
or
nop
cmp
outsb
sbb
jae
cmc
cltd
sub
or
scas
push
lcall
lods
pshufw
bound
sbb
jne
xchg
or
cmc
jnp
add
jnp
sbb
std
sub
ss
jge
out
sti
cltd
test
bnd
into
aas
mov
jae
jbe
outsl
mov
and
insl
mov
in
or
movsb
sbbl
pop
nop
imul
aam
imul
clc
adc
xlat
mov
xchg
rcrb
lea
sub
mov
sub
mov
jnp
dec
jmp
insl
pop
pop
stc
ficoms
push
mov
or
addr16
fs
arpl
mov
out
ss
mov
mov
cmp
jnp
xor
xor
jnp
call
cmp
jnp
jmp
jo
sbb
lds
insb
jmp
addr16
xchg
lods
or
push
lret
ds
rorl
jbe
mov
fidivl
in
cwtl
jnp
aaa
xor
sub
sbb
aad
rolb
js
test
aam
mov
pop
jnp
orb
or
cwtl
js
outsw
sbb
pop
rorb
fidivl
mov
jnp
fxch
xor
incb
ss
and
xor
int3
jnp
mov
pop
inc
lret
jnp
jp
xorb
les
mov
jnp
mov
sbb
popa
xor
xchg
dec
jb
ret
cltd
lods
xchg
in
pop
xor
std
jnp
add
pop
or
jg
shlb
lret
jge
xlat
in
jns
lods
ja
jno
inc
mov
add
push
and
test
push
mov
jl
sarb
outsl
and
mov
add
pop
cmp
add
repz
je
pushf
jmp
cmp
adc
jne
xchg
mov
loopne
push
dec
sti
ss
mov
mov
cmp
or
shl
cmp
inc
mov
outsb
arpl
fwait
ja
xor
dec
mov
and
mov
ror
outsl
fld
sbb
aas
dec
ja
cmp
push
out
inc
xor
mov
jns
pusha
inc
jp
out
fisttpll
sub
add
insl
cmpsl
push
int3
jae
shl
pop
pusha
les
lret
ja
or
ss
pop
fnstenv
sbb
mov
fisubs
xor
dec
sub
cmp
cltd
push
outsb
stos
jnp
mov
mov
xchg
outsl
int
addr16
shlb
mov
xchg
mov
ja
sbb
outsb
jnp
lock
pop
mov
aad
test
std
sbb
ret
je
jo
dec
in
inc
loop
cltd
jne
pushfw
stos
pop
and
aad
pop
inc
lret
mov
nop
in
jnp
push
imul
fwait
pop
loop
jmp
lock
mov
scas
xlat
push
xchg
mov
push
xor
cmp
mov
std
jnp
dec
mov
sbb
stos
or
into
orl
sub
push
pop
push
imul
mov
test
addr16
xchg
push
mov
jno
test
or
imul
movsb
fldl
lret
std
lods
out
jnp
es
pop
or
add
popf
sbb
dec
dec
cs
imull
imul
daa
dec
nop
mov
xchg
xor
leave
mov
inc
mov
sub
or
mov
xchg
cmp
sub
stos
jnp
fbstp
pop
xor
xlat
shll
movsb
jnp
inc
xor
loop
subl
out
pusha
dec
jnp
test
dec
loope
push
fildl
dec
in
xor
pop
dec
jnp
shrb
in
imul
cltd
pop
mov
lret
fnstenv
jne
cwtl
jnp
adc
dec
jnp
insb
xor
jne
in
pop
fstpl
jnp
divps
std
mov
jnp
add
cld
add
sbb
cmp
in
notb
xor
pusha
das
jnp
popf
cli
add
dec
pop
jle
jmp
xor
movsl
and
out
movsb
sub
or
add
outsb
dec
jl
in
xchg
sub
inc
mov
addl
sbb
test
cmp
pop
dec
and
test
sub
dec
jg
xchg
fdivrl
imul
mov
sbb
or
jnp
lahf
fxch
adc
cmpl
lods
fwait
inc
jmp
adc
jns
xor
xlat
test
push
mov
stos
dec
inc
or
sub
cmpsl
push
pop
outsl
out
adc
cmpsb
sbb
mov
mov
lret
lret
mov
sbb
pop
ja
scas
fstps
and
out
inc
mov
leave
pop
xor
sub
loop
cli
mov
jnp
test
es
xor
cmp
nop
imul
inc
js
fmuls
sub
pop
mov
clc
movsb
jnp
icebp
mov
rcrb
xor
arpl
add
xchg
sub
xor
mov
dec
lds
jns
pop
add
push
jnp
loop
mov
push
in
jnp
sub
es
out
jnp
fs
fwait
test
jbe
jnp
and
mov
jmp
add
iret
mov
cld
add
sub
xor
mov
negl
jnp
les
outsb
jle
jnp
and
scas
aaa
dec
mov
mov
pop
lods
push
xor
sbb
ja
adc
rol
lea
repnz
mov
push
mov
ja
mov
lods
aaa
add
jnp
cmp
inc
jnp
out
cmp
mov
test
inc
jnp,pt
adc
mov
jb
idivb
mov
cld
stc
fdivl
stos
jnp
or
xchg
dec
insb
jae
decb
cmp
arpl
lock
or
mov
inc
enter
jp
fcomp
jmp
pop
push
add
inc
mov
mov
pop
outsl
cltd
and
jnp
stos
xchg
adc
xchg
imul
jnp
sbb
lcall
lret
in
sbb
leave
das
or
aad
jnp
repz
lret
out
mov
test
enter
cmp
subl
mov
ja
pop
jnp
adc
inc
push
pushf
js
cmp
shll
mov
sbb
lock
jb
cld
push
scas
jnp
mov
lret
lret
std
imul
jle
sub
push
ljmp
mov
arpl
insb
ja
cld
mov
ljmp
jnp
cltd
cmp
stos
std
ss
xchg
ljmp
jne
xchg
cmp
jge
stos
lret
sbb
insl
inc
or
lods
sahf
cmpsl
pop
and
dec
dec
nop
jae
stos
xchg
test
shll
cmpsb
add
xchg
loopne
stos
jg
les
xor
int
jnp
int
jl
scas
fidivrl
push
mov
pop
adc
jnp
inc
or
xor
jno
inc
add
hlt
cmp
xlat
mov
mov
cltd
mov
sbb
bound
add
jae
lock
lock
gs
mul
fcoms
faddl
dec
lods
inc
xor
jnp
popa
or
leave
dec
in
jnp
scas
add
inc
in
push
cmc
jnp
jne
daa
push
and
pop
ljmp
cmpsb
jmp
sbb
addr16
dec
sbb
clc
xor
outsb
negl
push
jae
dec
mov
in
add
adc
cmp
mov
lods
test
mov
xlat
dec
arpl
popf
sub
push
cmp
and
ljmp
mov
addr16
andb
jne
mov
repnz
jnp
popa
mov
lret
repz
pop
add
xor
jne
or
jmp
xor
adc
dec
pop
jnp
outsl
int3
loop
daa
aam
out
sub
dec
mov
or
pop
neg
jge
jae
xchg
enter
jnp
icebp
aad
mov
mov
sar
loop
push
push
sbb
or
cmc
and
lcall
scas
mov
lds
std
jnp
sbb
sbb
jg
pop
jnp
xor
pushf
cltd
mov
add
pop
pusha
jnp
and
lret
jnp
push
lds
addr16
mov
jnp
sbb
pop
rdtsc
mov
or
movsb
jnp
popa
aas
sub
test
inc
mov
insl
fsubp
jnp
pusha
jae
rcl
sbb
mov
lret
sbb
sti
idivb
mov
mov
stos
aad
jp
lcall
es
dec
jae
push
mov
lcall
insb
jne
pop
mov
mov
add
mov
jnp
mov
push
mov
imul
jo
jnp
and
out
pop
cld
push
lahf
lock
movsl
inc
mov
dec
mov
xor
fdivrl
lods
sbb
mov
sub
and
sub
mov
mov
pop
jle
jnp
mov
mov
imul
mov
addr16
push
cmc
in
movsb
cmpsb
jne
pop
sub
mov
lods
test
cs
je
jno
out
jnp
aas
nop
pop
mov
rcll
jnp
cmp
or
pushf
push
frstor
mulb
je
mov
mov
insb
jnp
lea
mov
sbb
clc
dec
add
scas
mov
jnp
enter
adc
push
sub
loope
mov
les
sahf
cmp
ds
mov
jecxz
sbb
and
dec
pop
orb
data16
jnp
add
pop
mov
ds
daa
mov
out
cmp
jne
iret
mov
data16
xor
imul
lea
outsl
xlat
jo
loopne
add
and
test
mov
cmpl
xchg
lods
fbstp
ret
and
xchg
daa
insl
mov
sarl
xor
push
ficompl
mov
sub
icebp
or
jnp
data16
push
repz
xor
or
or
jnp
sub
mov
sub
jae
in
push
addb
mov
data16
cltd
jnp
lcall
je
inc
jae
stc
mov
push
stos
push
in
jnp
mov
mov
add
ljmp
sub
lahf
jp
push
mov
loope
push
iret
lret
mov
xor
andl
and
in
in
xchg
test
push
hlt
mov
lods
and
std
jnp
out
mov
pusha
imul
fcoms
cmp
cmp
inc
jno
inc
jnp
and
lret
push
inc
imul
mov
mov
mov
push
mov
repz
jnp
jle
enter
inc
dec
mov
popf
inc
xor
jne
jno
fcompl
sbb
jmp
lahf
or
sbb
jle
mov
imul
enter
cli
sub
arpl
sbb
fwait
cmp
xchg
pushf
and
imul
xchg
lcall
jae
lret
xchg
cmp
stos
jb
add
popl
push
xor
push
jnp
push
cmp
dec
cmpsl
stos
test
xchg
out
rol
push
dec
push
xor
or
jb
fsubrs
into
inc
pop
js
sahf
push
out
pop
and
stos
pop
icebp
dec
add
jnp
imull
mov
pop
mov
jnp
inc
sbb
cmp
cmp
fsubrl
cmp
dec
imul
mov
in
gs
outsl
push
xchg
int3
divl
mov
lret
lock
stc
pop
adc
fcomps
cltd
jbe
test
movsb
jmp
cmp
inc
in
or
jne
cmp
pop
mov
loop
sbb
and
jae
nop
xor
adc
std
xchg
mov
inc
jae
and
mov
popa
fcmovu
dec
loopne
stc
sub
int
sbb
jbe
lods
js
sub
sbb
fildl
jnp
mov
lds
adc
sarl
pop
add
push
ret
pop
cli
mov
stos
lds
mov
fisubrs
xchg
sbb
sbb
dec
popf
mov
jne
daa
imul
ficoml
scas
xchg
jl
icebp
loop
mov
movsb
dec
repnz
or
stos
pop
mov
popa
or
mov
cli
jnp
dec
push
pushf
imul
add
push
jnp
add
dec
push
or
jb
xor
push
ss
outsl
cmp
enter
cwtl
imul
scas
shlb
outsl
ficompl
lcall
aam
es
or
fildl
mov
fldl
jnp
jp
add
xor
sbb
cld
sub
push
jno
hlt
xor
shlb
imul
mov
ss
pusha
out
adc
jnp
xchg
pop
test
lock
or
lods
dec
out
scas
or
inc
sub
pop
in
fnstsw
push
inc
outsl
cmp
jnp
jl
sbb
inc
jnp
mov
pop
fnstcw
add
jnp
fmul
sbb
sbb
ja
outsl
insb
mov
out
jae
push
adc
or
dec
pop
cmp
xor
or
jnp
rcrl
mov
aam
lea
insl
dec
xor
add
int3
push
sbb
addr16
jnp
je
hlt
lods
or
jnp
les
jnp
stos
je
imul
add
mov
dec
cmp
and
movsb
jo
imul
or
sbb
insb
sbb
jbe
xor
and
push
lods
ret
cltd
cmp
ficomps
pop
jnp
or
add
push
push
mov
mov
rclb
in
jnp
cmp
addr16
xchg
adc
pushf
push
ds
fidivrl
gs
or
sbb
push
pop
imul
xor
mov
push
lods
jnp
mov
int3
cwtl
xlat
outsb
xor
xchg
and
lds
outsl
call
mov
pop
lret
xor
or
mov
cmp
idivl
scas
inc
enter
jo
rclb
and
push
push
dec
lret
adc
and
cmp
maxps
jnp
sbb
ljmp
xor
sbb
cmp
fisubl
pop
les
jl
enter
jnp
jecxz
sbb
xor
jo
les
lret
in
mov
jne
mov
sub
mov
push
sbb
mov
clc
xchg
push
push
cld
cmp
cmp
sub
out
scas
jae
fldcw
xor
mov
jnp
mov
ljmp
and
jae
adc
jp
pop
jne
es
add
fdivrp
dec
test
xchg
and
mov
xor
mov
mov
cli
xchg
ret
fwait
enter
movsl
shlb
aam
and
std
cmc
stos
sbb
xor
add
ljmp
idivb
and
jae
dec
push
push
sbb
add
jnp
push
mov
jnp
insl
ret
push
repz
jmp
pop
pushf
pop
jae
jge
sbb
sub
add
jmp
push
fsubrl
repnz
gs
jnp
mov
cmp
cmpsb
je
jnp
sbb
sub
cmp
cltd
lret
mov
outsl
xchg
arpl
cmp
mov
fwait
loopne
out
jnp
lret
jle
cmpsl
jno
mov
out
jae
push
push
int
jnp
xchg
das
adc
sub
in
cmp
lret
dec
jp
lcall
jp
test
mov
dec
in
jae
bound
out
push
sahf
jnp
rcrl
int
xchg
add
add
hlt
add
mov
xor
adc
dec
pop
outsb
int3
shrl
je
int3
add
pop
in
xchg
in
or
fwait
mov
mov
gs
call
mov
aam
lock
out
mov
test
fdivs
dec
data16
jb
inc
out
xor
jmp
sbb
daa
adc
iret
add
jne
jnp
xchg
and
pop
jnp
push
fimuls
jnp
stc
call
out
cmp
push
fs
in
jnp
pop
mov
lret
out
jmp
mov
or
push
xor
jno
dec
cmp
js
pop
je
scas
adc
mov
rorb
mov
jae
addr16
pop
out
in
out
mov
cli
jae
arpl
stos
lret
push
xchg
lock
fwait
mov
cmp
jbe
fldl2e
sti
sbb
jno,pn
test
jnp
lods
jns
outsl
mov
daa
cmp
push
mov
jo
mov
cmp
mov
lcall
mov
mov
push
out
shl
jnp
adc
xchg
xor
cmpsl
lret
push
adc
int3
pop
and
fsts
insl
inc
call
dec
push
jg
xchg
dec
sbb
stos
stc
jge
fmull
xor
lds
lret
inc
in
sbb
jle
aaa
inc
popf
lods
inc
aad
int3
out
xor
jns
cmp
push
stc
fst
outsl
jnp
setne
xor
pop
jns
xor
sub
dec
sbbl
cltd
ja
ret
sbb
loop
rorb
testl
jnp
mov
movsb
fwait
jnp
je
lods
out
cmp
or
mov
fbstp
jnp
test
lret
xchg
jl
insb
xlat
das
nop
jns
ja
sub
mov
testl
jbe
adc
jnp
imul
jb
jnp
jne
repz
mov
jg
sub
pop
jnp
cmp
xor
jg
or
cli
push
outsl
jae
inc
test
lcall
bound
cmp
jnp
or
lret
xchg
scas
mov
cmc
stos
jnp
je
imul
xlat
jnp
or
std
dec
ss
imul
pop
dec
arpl
jne
ret
jnp
aas
cli
jge
jbe
sub
lock
fstl
sbb
cmp
mov
mov
jnp
mov
jnp
adc
push
push
clc
pop
jnp
mov
shlb
jne
cmc
sub
clc
mov
clc
xchg
or
insl
sub
scas
test
cli
sbb
mov
mov
and
fs
inc
std
lcall
iret
int
out
je
jmp
in
cli
mov
pushf
dec
cld
insb
lds
or
ret
add
test
in
lahf
cmpsb
insl
pop
push
lcall
dec
sbb
scas
sbb
lods
inc
sbb
jo
xchg
stos
jg
jo
cmp
sub
enter
out
ds
fimull
mov
cmp
jmp
cld
or
inc
add
jne
test
dec
jnp
xchg
push
jg
push
imul
xchg
xchg
int3
adc
fadd
jae
push
xchg
stc
sbb
dec
inc
push
flds
sahf
xchg
insl
jg
jne
mov
jae
mov
jae
mov
mov
pop
es
push
mov
add
daa
sbb
jnp
sbbl
jne
aad
or
in
ja
movsl
imul
cli
repz
jno
loop
shr
jg
mov
insl
pop
lods
sub
out
scas
insb
jno
call
sbb
push
ss
push
test
aas
or
mov
push
jecxz
out
mov
rep
les
push
pushf
jbe
lahf
or
jnp
in
cs
dec
mov
push
xor
jl
adc
lods
sub
or
mov
ss
pop
xchg
cmp
sti
cmp
jae
mov
jnp
notb
and
into
mov
jbe
sbb
cmp
jns
and
adc
fwait
jne
inc
test
ja
cmpsl
pop
push
jnp
and
rorb
add
pop
scas
mov
jnp
mov
repz
adc
out
or
jnp
add
xor
jnp
sahf
in
pop
sbb
or
lret
add
jnp
sbb
inc
fidivrs
push
jb
or
sub
pop
ss
xchg
outsb
gs
lret
test
jnp
pop
fistpll
jns
mov
fwait
jnp
adc
mov
cs
xchg
jnp
adc
pop
cmp
test
fmul
xor
enter
dec
in
cmpsb
fucompp
mov
jnp
sbb
xor
inc
sub
jge
xchg
shlb
xor
pop
adc
inc
mov
ret
ja
or
insl
pop
shrl
xchg
jae
mov
data16
push
jnp
not
std
aas
clc
mov
xor
jne
xor
push
sbb
xor
dec
push
lret
mov
ret
push
dec
divl
jnp
loope
shlb
in
loopne
mov
lods
leave
lods
dec
insl
gs
mov
sbb
jnp
rcrb
push
and
in
das
sahf
push
mov
rcpps
ret
outsl
mov
or
add
xchg
inc
sub
mov
pop
das
aaa
pop
cmp
pop
jle
enter
sub
jae
andl
lods
jnp
ljmp
dec
jnp,pt
loop
lahf
jns
fstpl
add
jb
stc
enter
and
sub
pop
jge
lock
scas
mov
je
jnp
lahf
lret
lret
push
hlt
jnp
xor
stos
pop
clc
popf
add
push
jnp
xchg
add
test
and
lea
stos
sub
cmp
cmpsl
mov
sub
jb
push
jnp
dec
sahf
dec
pop
lcall
shlb
pusha
je
jnp
xchg
jg
hlt
lret
sbb
mov
loopne
push
jnp
cs
dec
fstpt
js
in
les
cmp
mov
and
push
jnp
insb
popa
ja
sub
pushf
jnp
pop
pop
mov
lret
inc
xchg
mov
int3
arpl
insb
xchg
jns
push
jnp
mov
in
jnp
lahf
sbb
jg
shr
inc
xor
mov
loopne
hlt
fwait
or
sbb
xor
test
jae
insl
and
pop
dec
pop
push
stos
and
push
cmp
imul
test
aaa
stos
mov
sub
inc
mov
dec
xchg
test
cmpsb
push
icebp
out
jl
pusha
jmp
lret
or
jnp
lock
dec
loopne
and
xchg
out
sbb
jnp
leave
ret
sub
push
adc
xor
cmpl
dec
or
pushf
pop
xor
mov
clc
jecxz
cmp
xor
shrb
push
mov
inc
push
test
loope
cmp
jae
adc
test
lods
in
jnp
insl
dec
cli
or
add
clc
in
push
mov
imul
push
xchg
dec
rcrl
imul
xchg
call
sti
cld
jnp
dec
push
xor
push
inc
mov
lods
ljmp
jo
dec
imul
add
jnp
imul
inc
sub
cli
jnp
lods
xchg
mov
sub
mov
roll
repnz
cmpl
add
jns
lret
call
scas
push
jecxz
jae
pushf
or
inc
mov
mov
pop
ror
inc
jo
ficoml
jno
xor
inc
jae
jp
aaa
xor
add
stc
movsl
lods
imull
test
xchg
mov
js
ljmp
jle
lods
inc
add
cmpb
jnp
cli
es
sbb
mov
xor
mov
lea
popa
stos
shll
icebp
ret
push
pop
mov
jae
outsl
xor
insl
pop
cmp
fstps
imul
xor
cs
pop
ds
dec
stos
out
xchg
mov
jae
ljmp
or
jp
shrl
jne
and
mov
mov
psllq
sub
fldcw
out
in
xor
int
cmp
mov
lcall
stos
sbb
into
sub
jecxz
push
sbb
xor
ja
divb
xchg
sbb
in
mov
lcall
mulb
pushw
jbe
repz
into
dec
and
lahf
mov
out
out
sub
addb
xchg
jae
scas
or
and
aad
cwtl
xchg
daa
lret
shlb
in
imul
les
subb
cmp
mov
jmp
int
notl
sub
movsl
mov
fsubrp
add
adc
dec
scas
inc
cmp
jp
mov
mov
xor
out
mov
cltd
mov
popa
js
add
inc
outsl
inc
loope
xor
xlat
pop
test
jnp
nop
aam
add
adc
add
aad
jnp
mov
cmp
jnp
and
and
enter
ss
idiv
jge
push
jnp
mov
movsl
jg
nop
stos
dec
bnd
jae
adc
imul
out
mov
or
jnp
ljmp
imul
sub
sbb
xor
push
mov
push
in
scas
cmp
push
mov
pop
sub
dec
mov
jnp
cmp
mov
mov
imul
sub
mov
jnp,pn
lods
cmpsl
mov
std
adc
mov
jb
outsl
cs
daa
adc
adcb
jnp
mov
mov
insb
in
mov
adc
jne
xlat
insl
stc
cmpsl
enter
mov
into
dec
les
fstpt
cmp
inc
mov
push
mov
pop
dec
xor
imul
les
adc
push
mov
jge
push
jb
jnp
es
ljmp
adc
les
mov
cld
cmpsb
cmpb
or
cmp
jmp
popf
xchg
popa
aaa
daa
mov
add
fstpt
bnd
sub
and
jne
sbb
outsl
jnp
outsb
rcl
sub
lcall
cmc
mov
xchg
dec
inc
pusha
dec
leave
jne
push
xchg
sbb
cmpsb
jnp
xor
cli
jg
fistl
cmp
push
inc
sub
out
or
setp
out
jnp
lret
cmp
insb
mov
sub
xchg
pop
sbb
sbb
jnp
popa
mov
imul
and
insb
mov
jnp
xchg
ret
out
xchg
and
fmulp
aad
xchg
and
or
lret
fildll
mov
and
mov
sub
jnp
jae
jp
lock
jnp
push
cmp
sub
sbb
sahf
lods
ja
mov
cmp
mov
jno
mov
cmc
jnp
aas
mov
aad
sub
jae
or
lock
subb
jmp
mov
push
jnp
aas
aam
jns
jbe
jnp
subb
cmp
push
push
jnp
push
cmpl
fdivrs
jle
lea
sub
jnp
les
cmp
cmp
sbb
or
add
pop
shl
sub
imul
test
adc
js
movsl
imul
lods
sbb
push
push
js
jmp
and
mov
mov
je
jae
aas
add
mov
stos
out
ficoml
and
jnp
movsl
cmp
mov
or
xlat
xor
aas
call
cmp
subb
in
jnp
nop
call
jg
xor
push
loope
pop
lock
jnp
leave
xchg
testl
cmp
test
cmpl
stc
or
ds
rorb
dec
or
inc
popa
imul
adc
stos
pushf
adc
lahf
outsl
mov
xor
mov
clc
push
or
and
xchg
xchg
ja
mov
mov
dec
stos
test
sbb
sbb
jmp
xchg
lcall
or
bnd
inc
sbb
xchg
ja
mov
call
inc
xchg
fs
cs
xchg
xor
ret
cmp
les
mov
movsl
jae
xor
jnp
mov
std
or
out
push
jnp
stos
repz
mov
inc
jnp
mov
xchg
inc
enter
jno
sub
jnp
ficoml
out
fadds
mov
cmp
jae
mov
add
mov
sbb
repz
outsl
cli
pop
roll
ja
add
js
out
adcb
mov
inc
insl
mov
je
jg
pusha
sub
sbb
push
clc
xchg
jmp
mov
jae
bound
jnp,pn
fwait
or
shrb
divb
dec
cmpsl
ja
ret
or
ret
mov
fdivrs
pusha
lcall
add
popf
inc
mov
jnp
cmpsl
fbld
mov
jnp
dec
cmp
mov
xchg
in
jnp
inc
push
xor
jae
sub
inc
in
lret
fs
sahf
xchg
cmp
mov
and
repz
sbbb
out
mov
inc
jnp
out
push
outsb
cmp
das
popa
jnp
xchg
cwtl
pop
or
cmp
mov
sbb
mov
gs
jnp
adcl
jnp
test
lock
adc
inc
fsubrs
or
test
cmp
jmp
xchg
xorb
outsb
mov
and
cli
or
mov
clc
out
sbb
ja
nop
jae
enter
dec
mov
adc
and
icebp
lods
xlat
jne
stos
add
jnp
jns
xor
jnp
sbb
mov
mov
aaa
and
and
ret
cmp
mov
fadd
cmp
es
aad
cld
adc
clc
jnp
xchg
xchg
sub
add
xor
jnp
mov
test
jnp
data16
das
mov
scas
loop
adc
pop
dec
loope
mov
jnp
add
daa
jmp
adcb
imul
mov
movsl
pop
or
std
stos
lcall
out
dec
icebp
jb
bound
mov
sarl
pop
mov
in
repnz
xor
cmp
xchg
subl
push
jb
jg
push
and
dec
mov
mov
pushf
imul
cltd
inc
sub
mov
daa
xchg
imul
int3
gs
lret
and
mov
lcall
dec
ljmp
cs
sub
andl
jl
inc
inc
mov
repnz
daa
inc
xchg
jns
xchg
aam
int3
sti
dec
cmp
addb
jns
push
imul
xor
out
in
xchg
mov
jnp
cmp
ret
jecxz
into
or
mov
cs
lret
es
movsl
mov
imul
jnp
incl
mov
adc
ja
scas
pop
fadds
fisubs
xchg
fistps
mov
leave
ja
out
testb
pop
lods
lock
cli
int
sub
pop
jae
testl
fwait
inc
jnp
sub
dec
lret
cld
mov
jnp
xchg
cmpsb
sarb
mov
jnp
sti
fmull
pop
cld
cli
mov
out
fisttps
test
and
jbe
inc
ret
fdivrs
push
icebp
mov
xor
sbb
sub
pop
mov
lods
jnp
mov
clc
lret
cmp
sub
fiaddl
testl
sub
jnp
mov
adc
and
insl
push
in
popa
sbb
push
arpl
cmp
cs
into
cld
fs
div
inc
jae
pop
jg
int
inc
data16
pop
scas
adc
iret
fdivrl
sar
cmpsb
mov
js
call
adc
add
shll
imul
outsl
imull
cmpl
mov
xchg
jnp
notl
cmp
shlb
pop
inc
repnz
rolb
mov
and
popa
jecxz
pop
mov
lods
inc
xchg
jo
outsb
ja
mov
jg
sbb
pop
jb
jnp
xorb
sbb
test
out
xchg
xchg
es
jnp
jbe
mov
stos
lret
neg
mov
or
mov
ljmp
lods
jnp
inc
imul
jnp
lods
inc
push
and
xchg
scas
mov
sub
mov
mov
mov
outsb
ret
or
mov
and
dec
jle
xchg
lods
cmc
es
in
dec
cmpsb
pop
imul
gs
sarl
jno
dec
mov
into
aaa
test
std
jnp
sub
push
mov
imul
cmp
or
mov
lret
xor
std
pushf
jns
pop
mov
adc
js
xor
sub
fcompl
cmpsb
je
rclb
stos
mov
inc
jae
cmp
scas
jnp
sub
shrb
cmp
into
hlt
lea
dec
sbb
aam
and
mov
xor
testb
into
and
lahf
jnp
add
cmp
je
dec
fcoms
in
xor
ljmp
cs
lret
scas
imul
push
shll
cmpl
dec
in
and
cs
pop
in
jnp
int
mov
sbb
leave
jnp
dec
fiadds
xor
or
dec
adc
xor
sub
adc
jnp
mov
out
mov
dec
jnp
xchg
xchg
sub
and
pop
lock
jle
daa
cmp
outsb
xchg
pop
add
cmp
pop
jmp
jnp
pop
call
sbb
jae
jge
and
imul
aad
scas
cmp
and
pop
cs
jnp
push
add
shll
cmp
xlat
cld
out
jnp
add
gs
mov
loopne
cli
or
sbb
outsl
push
pop
add
bnd
scas
fsts
push
cmc
insb
sarb
mov
inc
mov
or
mov
insb
and
jnp
in
stos
push
cli
dec
adc
jg
shrb
dec
ret
jo
dec
das
adc
std
arpl
jnp
stos
fcoms
les
imul
je
inc
mov
mov
lods
jb
pusha
mov
pop
mov
mov
xor
imul
jle
icebp
pop
stc
loop
mov
rcrl
cli
mov
sbb
test
adc
adc
dec
out
jnp
jb
jg
push
leave
scas
in
jnp
pop
mov
sarb
cmpsb
daa
hlt
and
aad
dec
cltd
cs
lret
cmpb
dec
mov
popf
out
out
push
dec
int3
mov
dec
addl
sahf
fnstsw
orb
jb
es
dec
ja
mov
das
cmp
cld
jae
gs
les
ljmp
sbb
sub
lock
xor
xor
mov
sti
lcall
inc
imul
add
or
aam
test
jnp
mov
push
pop
jo
jnp
cmp
xor
jnp
jb
and
and
jnp
mov
imul
imul
pop
lds
pusha
inc
lahf
shll
idivl
add
pop
clc
in
jnp
test
fistps
add
push
xchg
mov
jnp
incb
jae
dec
push
imul
aam
sub
fnstenv
mov
jl
lds
nop
jns
dec
bound
cli
xor
xor
xor
ss
nop
das
int
ret
jno
xor
out
cltd
or
xchg
mov
jl
sub
jecxz
jbe
cmp
jae
xor
push
jnp
sub
sbbl
adc
inc
jae
mov
clc
cltd
push
fstl
or
mov
cmpl
xchg
adc
ds
inc
insl
jb
mov
sbb
mov
push
outsl
outsl
mov
jnp
bound
or
cwtl
jnp
aaa
std
cmp
mov
shrb
iret
mov
test
sub
jp
cmp
test
inc
cltd
or
cwtl
jnp
mov
jb
jnp
dec
pusha
fistps
and
jnp
dec
lods
mov
pop
inc
cld
ja
mov
shll
pop
lret
mov
cmp
outsl
jb
lea
inc
stos
jnp
or
inc
jnp
popf
ja
push
xchg
mov
or
or
mov
mov
fsubl
xchg
outsl
stc
loopne
repz
je
xor
mov
mov
flds
inc
stos
mov
inc
aas
imul
mov
dec
enter
outsb
inc
cmp
add
dec
lret
bnd
sti
test
sub
mov
sub
jb
or
jnp
fadd
adc
mov
movsl
xor
jae
aam
dec
push
std
aas
inc
jle
fidivl
in
xlat
pusha
adc
cmc
jae
dec
inc
sub
pop
jb
and
sub
mov
rol
cmp
jae
push
and
dec
jnp
ret
fdiv
inc
push
or
xlat
pushf
xchg
jno
shll
or
aas
push
aas
icebp
fdivl
imul
inc
dec
push
test
pushf
icebp
jb
sub
or
ja
lods
push
xchg
sub
mov
xchg
js
arpl
cmpb
lds
sub
aad
stos
cmpsl
jmp
jnp
into
insl
movl
out
out
push
jg
adc
test
ljmp
rorl
jnp
cmp
orb
hlt
fwait
push
out
pop
push
xor
xchg
push
pop
xor
or
loop
sahf
lcall
scas
jbe
inc
cltd
popa
fdivrs
fisubs
cld
mov
mov
push
outsb
test
scas
sub
pop
and
dec
mov
jne
repz
cld
xor
shll
pop
xchg
dec
cmc
mov
cld
insl
test
cmp
or
mov
pop
dec
xor
jmp
sbb
jno
inc
pop
add
cmc
jne
ja
sub
pop
push
jae
fwait
mov
lcall
xorb
pop
jnp
int
nop
shlb
fisubrl
divl
pop
add
inc
xlat
insl
mov
insb
imul
sub
pushf
and
jecxz
mov
dec
xchg
cltd
inc
arpl
nop
mov
xlat
pop
fists
clc
jnp
or
lods
sti
mov
cmp
insb
add
adc
and
cli
filds
test
shlb
int
mov
dec
dec
movsl
rorl
call
jnp
pop
mov
ret
xchg
outsl
jnp
mov
daa
mov
mov
test
mov
sbb
imul
jns
aaa
xor
push
das
sbb
and
test
rol
xor
inc
inc
pop
or
push
test
xorb
inc
xor
or
daa
jge
ret
xor
int3
sarb
imul
or
stos
mov
push
leave
sbb
int3
shlb
in
push
pop
push
and
je
paddusb
jnp
cltd
fwait
and
data16
sub
in
std
jl
dec
ret
push
cs
pusha
mov
mov
or
add
daa
pop
jnp
fildll
fisttpl
or
or
testl
bound
and
or
outsl
mov
pop
in
sbb
mov
jnp
popf
movsl
in
xchg
out
faddp
jae
xor
out
test
repnz
jnp
dec
dec
es
push
mov
ret
xor
out
lods
fisttps
push
jmp
mov
in
sbb
mov
fmull
cmp
inc
lret
mov
and
mov
jnp
cmc
xor
xor
pop
mov
cmp
or
iret
xchg
jnp
test
rcrb
sub
mov
std
inc
pop
in
jnp
cmpsl
dec
and
cmpsb
pop
push
lods
push
dec
lcall
push
push
js
lea
int3
push
mov
clc
push
jmp
xchg
mov
sarb
jg
jns
sub
loope
out
int3
adc
ficompl
jae
insl
xor
sbb
mov
mov
jnp
fisubl
inc
cwtl
jae
sti
mov
out
les
lcall
inc
sbb
cld
jnp
andb
jnp
cli
xchg
mov
stos
lds
mov
shl
and
das
ret
fmuls
cmpl
and
jnp
shlb
xchg
nop
mov
dec
pop
ret
dec
iret
mov
sbb
or
aaa
test
ss
scas
leave
mov
or
jb
jae
ja
in
xlat
pop
dec
scas
or
jnp
int
mov
sbb
data16
insb
lcall
stc
loopne
sub
add
stos
or
lahf
aaa
push
mov
or
xor
jae
addr16
jnp
sbb
jp
repnz
jnp
fwait
pop
lahf
push
test
repnz
icebp
ds
jnp
and
popa
pop
mov
jb
jnp
or
pop
pop
mov
lds
sub
movsl
test
adc
sbb
std
insl
adc
pop
jnp
push
in
out
sbb
jae
xor
aam
pop
jne
and
jmp
lods
xor
dec
jbe
adc
dec
mov
stos
push
jnp
or
mov
jae
pop
rcrb
jnp
mov
xchg
xor
push
push
movsl
dec
adc
adc
jno
pusha
mov
sub
pop
out
push
arpl
mov
jnp
imul
jnp
fs
mov
cmpsb
dec
pop
cmpsl
lcall
adc
cmp
cmp
cmp
idiv
out
jmp
mov
iret
push
out
inc
xchg
and
jae
xor
scas
pop
dec
sbb
jnp
jbe
add
in
cmp
and
mov
arpl
pop
jl
in
mov
and
sahf
jnp
xlat
mov
add
orb
push
fisubrs
test
jno
dec
je
inc
add
les
sub
jnp
aam
repz
mov
jnp
mov
cmpsl
sbb
xchg
outsl
sbbl
movsl
ret
int
cmp
mov
jnp
add
and
clc
test
sbb
jnp
shlb
jne
les
jnp
jge
dec
pop
arpl
xor
imul
jmp
xor
call
dec
mov
negl
cmpsb
add
in
cli
dec
xlat
push
add
xchg
incl
call
sbb
sub
push
cli
dec
jmp
outsb
js
jnp
dec
sbb
insb
cwtl
dec
push
jnp
pop
xor
cmp
iret
stos
addr16
outsl
lret
mov
repnz
jnp
xor
sub
mov
sbb
or
sarb
mov
dec
das
neg
dec
out
jmp
adc
ret
xor
dec
rcl
xchg
jnp
pop
inc
js
mov
jl
and
mov
inc
push
mov
pop
pop
inc
cmp
jae
push
jecxz
aad
js
icebp
call
cmpsb
ja
rorl
mov
add
sbb
loop
xchg
xchg
adc
clc
jnp,pt
dec
rcrl
jb
sbb
pop
push
outsl
and
push
dec
sub
or
jnp
scas
add
out
sbb
lret
pop
call
stos
xor
popf
das
out
push
int3
cltd
lret
push
sahf
add
cmp
insl
outsl
jbe
dec
scas
andb
mov
aaa
jnp
pop
mov
dec
pop
sahf
cmc
jnp
jl
out
mov
cmp
sbb
xchg
or
es
jnp
test
cmpsl
movsb
jnp
aad
fistpl
mov
jnp
push
fcomps
test
inc
inc
hlt
sbb
jnp
cmp
out
xor
xchg
jbe
xchg
jbe
jg
add
mov
repnz
jnp
mov
mov
dec
xchg
sub
jae
sub
cmp
sub
pop
int3
in
jnp
xor
test
imul
in
sbb
pop
inc
xchg
cmp
sbb
or
out
mov
call
iret
jle
jae
lods
jae
or
stc
aam
cmp
jmp
fistpll
xchg
jae
popa
icebp
cmpsb
sbb
jnp
add
dec
sbb
ja
out
cli
and
and
or
shlb
stos
in
jnp
ljmp
stos
mov
loope
pop
js
lret
lea
jns
clc
mov
mov
inc
cltd
push
xor
jnp
pop
push
sub
loope
seto
enter
insl
jnp
lea
das
out
mov
jmp
andb
mov
jnp
mov
sub
jl
sub
add
pop
cmp
sbb
dec
iret
jnp
mov
adc
xor
stos
xchg
call
mov
push
sbb
inc
insb
and
pop
insw
and
xlat
cmpsl
cmp
xchg
lods
pusha
sbb
in
xchg
movsb
lret
rorl
repnz
jnp
mov
ficompl
lret
or
jae
arpl
ss
jnp
or
inc
movsl
sbb
fwait
lret
pop
out
sub
imul
jp
call
aas
jnp
xchg
adc
js
sbb
enter
in
mov
adc
stos
ljmp
je
and
dec
or
div
outsl
mov
repnz
dec
int
jp
fwait
pop
cltd
jns
xchg
jnp
push
push
enter
movsb
jnp
xlat
mov
xor
jae
sahf
dec
daa
jnp
jbe
std
cli
in
punpckhwd
push
movsl
cs
es
aas
je
jno
lret
xor
push
loopne
in
in
inc
pop
sbb
jle
inc
add
jno
cmp
jmp
and
das
in
jnp
pop
mov
mov
push
mov
sub
sub
adc
sarl
dec
jnp
mov
jp
fcompl
scas
xchg
cmp
mov
dec
je
and
sub
sbb
insl
xchg
push
out
arpl
incb
fwait
dec
inc
sbb
lds
test
cmp
imul
mov
xchg
or
stos
xor
adc
out
imul
orb
inc
xor
pop
jae
mov
cmp
xchg
stos
cwtl
cld
xchg
add
and
lods
push
cmp
xchg
bound
in
aam
ja
jnp
ds
add
mov
mov
loope
adc
stos
mov
jae
outsb
mov
sub
pop
and
jnp
pop
loop
fdivrs
xor
xorps
lods
pop
lock
jnp
test
loop
lock
movsl
and
jmp
sbb
aas
imul
and
pusha
pop
das
or
mov
gs
jnp
sub
pop
pop
lret
jnp
nop
mov
das
movb
mov
arpl
repnz
out
jmp
loope
int3
jnp
jp
and
mov
aas
ret
or
jnp
jbe
mov
jecxz
sbb
pop
push
mov
mov
or
mov
lcall
adc
xor
cli
cmp
add
sub
aaa
rorb
outsl
movsl
in
negb
or
jnp
jg
cmp
and
fsubrl
jns
daa
lret
add
xor
xor
pop
and
andl
fsubr
jnp
les
imul
sbb
leave
sbb
mov
jnp
add
test
dec
dec
jnp
fstpl
lods
fcom
dec
sbb
fimull
xchg
push
decb
fcomps
je
in
jnp
hlt
repz
popf
int3
or
jmp
mov
pop
jae
in
shll
fnstsw
dec
shlb
jns
orb
sub
popf
jnp
insl
lahf
and
mov
pop
mov
sub
pusha
xlat
xor
pushf
fwait
jecxz
lret
mov
out
jg
lods
sbb
jnp
faddl
imul
cwtl
or
loop
jge
addr16
push
ret
push
cmp
insb
or
mov
lds
inc
jb
jg
sbb
ja
imul
jo
aas
mov
cmpsl
mov
out
aam
inc
lahf
mov
jns
clc
mov
sbb
lds
xor
mov
mov
jb
jae
mov
out
or
push
inc
jnp
ss
inc
mov
cmp
aaa
cmp
js
mov
es
mov
cmc
mov
push
loope
inc
xor
popf
sbb
cmp
rcrl
out
jnp
aas
rcrb
cmp
scas
jnp
sub
daa
jbe
xchg
xor
jnp
xor
mov
imul
out
ficomps
int3
sti
stos
mov
outsl
repz
clc
or
add
jns
sub
rclb
sbb
adc
sub
loope
je
add
or
fbld
pop
sbb
push
movsb
decb
cmpb
cmpsl
jae
mov
xchg
mov
mov
cwtl
push
cmp
mov
popf
inc
lret
test
loop
iret
xor
fidivrs
xor
out
imul
inc
jne
sbb
jo
in
and
stos
cmp
xchg
cltd
xorl
fldcw
pop
sub
js
or
jmp
push
hlt
bnd
xchg
je
mov
jno
fisubl
popf
sub
in
jnp
shl
icebp
mov
aas
jbe
pop
pop
stos
ja
outsl
aad
jnp
sbb
cvtdq2ps
lock
jne
xchg
push
movsb
jnp,pn
dec
and
mov
mov
dec
stc
jne
lock
jne
mov
fpatan
ret
ss
jnp
in
mov
data16
xor
inc
repnz
aaa
jne
idivb
out
addr16
or
push
jnp
scas
mov
lds
pop
jnp
jp
inc
ret
inc
mulb
mov
movsl
filds
aam
lret
mov
push
std
je
das
jnp
sub
sbb
in
imul
outsl
push
jnp
inc
es
sub
mov
in
and
scas
pop
push
fwait
lcall
mov
push
mov
lcall
rep
in
jnp
iret
imul
insb
add
cmc
jae
sub
xchg
or
in
fwait
jns
jecxz
sub
test
pop
or
jmp
les
pushf
mov
pusha
icebp
mov
sub
jnp
dec
in
fwait
xor
imul
test
ljmp
pusha
popf
out
sbb
int3
outsl
lret
sub
mov
jae
imulb
xchg
insl
lcall
call
outsl
xchg
xchg
cmp
popa
les
outsb
mov
jecxz
je
gs
enter
dec
sahf
mov
cmp
jnp
add
sbb
sbb
adc
jns
inc
jnp
inc
inc
outsb
dec
ja
cwtl
mov
mov
pop
daa
mov
xorb
xchg
imul
dec
fldcw
jae
adc
in
stos
mov
mov
mov
aam
imul
inc
sbb
jmp
jne
std
jae
pop
sub
lock
jbe
mov
push
add
jp
inc
pop
mov
nop
dec
inc
pop
lea
in
jnp
add
pop
mov
xlat
repnz
jnp
add
sub
jns
orb
xchg
aaa
sbb
push
je
dec
imul
gs
ds
lods
sbb
imul
mov
pop
xchg
sbb
addr16
xchg
cmp
and
jbe
lea
imul
and
mov
jnp
dec
jbe
dec
xor
cmp
out
jnp
xor
jle
xor
cmp
scas
mov
mov
sub
jo
repz
imul
lcall
and
xor
lahf
jo
imul
xor
dec
mov
jnp
jge
loop
jg
adc
push
lods
outsb
dec
sub
fimuls
push
add
jns
dec
imul
subl
imul
lret
mov
cld
jnp
setge
and
int3
ja
xor
inc
fistpll
sbb
loop
ja
push
aad
movlps
and
dec
jns
adc
or
or
jg
fnstenv
in
jnp
inc
xchg
je
cld
lret
jae,pn
fldcw
jnp
loop
xor
cmp
jns
mov
pusha
out
in
movsb
jnp
scas
push
nop
mov
imul
push
sub
and
jb
mov
jg
push
jmp
jb
enter
xchg
mov
out
mov
stc
stos
lahf
add
rcl
mov
add
xor
test
loope
das
pop
jnp
inc
leave
in
jae
jnp
sub
adc
dec
push
jmp
scas
jle
mov
shrl
sub
aas
mov
insl
mov
cmc
stos
fwait
cmpsb
push
aad
int
lea
mov
ss
mov
xlat
mov
jnp
aas
jne
cli
jbe
dec
sub
out
lds
aaa
jb
or
outsl
repnz
sbb
push
jnp
sub
cltd
jnp
sub
aam
jb
jnp
cmp
rorb
or
mov
and
adc
in
dec
mov
jnp
out
xor
jmp
jae
dec
jae
inc
cli
push
mov
pop
stos
add
add
outsl
push
or
shr
test
jo
and
sbb
in
jnp
pop
cs
call
add
inc
push
outsl
stc
popf
jo
imul
and
cs
sbb
lods
jns
mov
out
adcb
mov
jnp
repnz
pop
jnp
xor
ja
sub
or
push
aaa
lods
mov
pop
cli
or
inc
ret
inc
xchg
mov
jne
repz
or
scas
gs
mov
data16
leave
xchg
in
jnp
mov
adc
stc
xor
ss
mov
jnp
arpl
jmp
cmp
ljmp
mov
jae
mov
dec
xchg
sbb
std
push
aaa
cmp
js
test
imul
div
cltd
jnp
pop
jl
mov
dec
xchg
imul
cmp
xor
aam
sub
std
inc
dec
push
jnp
xor
das
loop
adc
jae
mov
lods
jnp
mov
push
cli
repnz
lret
aas
ds
mov
push
mov
cltd
ret
mov
stos
cmp
shrl
mov
ds
pop
xor
jnp
xchg
mov
je
lret
mov
mov
fwait
inc
mov
in
mov
or
push
lea
test
xchg
mov
arpl
mov
lock
notb
inc
jae
into
cs
mov
push
scas
out
pop
rclb
imul
push
inc
leave
pushf
outsb
pop
and
mov
dec
jae
lcall
mov
jae
dec
push
or
jecxz
les
jnp
in
lods
xchg
nop
sbb
cmp
pop
add
ljmp
fdiv
dec
les
cli
pop
insl
inc
sti
lcall
jae
sbb
pop
out
pop
fs
lret
mov
mov
gs
pop
mov
jae
frstor
jmp
scas
cmp
jae
mov
test
fadds
fcmovnb
add
rcrl
xor
jmp
sbb
mov
jnp
movsb
aam
cltd
imull
mov
xchg
scas
mov
sti
inc
imul
nop
adc
inc
imul
or
push
out
lods
mov
xlat
adc
jnp
mov
cmp
dec
scas
loopne
pop
push
movsl
cmp
sub
dec
fdivrs
mov
out
jg
xor
jnp
push
sarl
das
mov
fisttps
mov
jne
loopne
dec
jnp,pn
aaa
or
imul
aam
jnp
sub
stos
mov
shl
jnp
add
das
fdivrl
rcll
pop
mov
outsl
jnp
inc
das
daa
cld
or
cmp
in
jbe
mov
mov
or
add
out
shrb
icebp
jnp
out
mov
shll
jnp
test
cld
xchg
mov
xor
js
loop
imul
mov
test
jb
lock
push
push
cwtl
adc
dec
ja
into
or
jae
out
sub
imul
fcomi
xor
push
arpl
popf
test
jb
jnp,pn
and
inc
inc
rep
cmp
xor
adc
and
popf
mov
hlt
jns
call
test
out
dec
aam
repz
rcrb
xchg
aaa
andb
mov
jecxz
std
in
xchg
lret
pop
and
or
fisubrs
sarb
ret
or
inc
outsl
hlt
sub
pop
jmp
in
cld
jnp
push
sahf
push
les
lods
cwtl
mov
jnp
and
xchg
pop
pop
xor
mov
jae
std
sbb
mov
xlat
pop
xchg
and
sub
nop
out
orb
adcb
pop
std
clc
push
xor
xor
insb
test
jmp
push
inc
jle
jb
nop
jnp
jmp
and
jnp
jle
lock
mov
sbb
mov
aaa
jnp
loop
cmp
aad
out
push
mov
imulb
rcrl
jnp
dec
out
inc
cmc
jo
jnp
aam
and
mov
sub
mov
or
pop
sub
jnp
lea
loop
daa
in
clc
pop
insb
adc
fst
cmc
pop
rorl
jnp
out
jp
or
jnp
enter
adc
jmp
ds
out
sbb
push
dec
decl
mov
push
ljmp
jb
cwtl
xor
jbe
mov
add
cmpsl
xor
ficoms
mov
cld
lret
outsb
or
push
xchg
xchg
call
rcrl
popf
ret
jp
das
insb
test
mov
insb
ss
add
jnp,pt
out
sbb
aaa
pop
xchg
jnp
lods
xchg
shrl
xchg
mov
jo
jnp
jmp
or
mov
in
out
jo
or
inc
xchg
mov
push
jae
pop
push
adc
ss
cwtl
imul
js
pushf
jnp
shrb
mov
test
cmp
stc
pop
int
stos
dec
push
imul
fstps
mov
outsl
adc
dec
pop
push
ljmp
dec
adc
inc
xchg
bnd
cwtl
out
cmpsl
es
jne
push
and
insl
push
or
popa
cmp
or
dec
jns
ret
test
add
das
pop
aam
xor
shll
xchg
fstl
in
mov
xchg
pop
mov
xor
sbb
rcrl
movsl
mov
push
jne
loope
test
dec
aas
push
out
mov
outsb
jmp
movsl
aam
or
outsl
pushf
jnp,pn
shll
add
dec
ja
xor
insb
pop
fcoml
sbb
inc
pop
or
inc
jnp
punpckhdq
push
push
movsb
cli
mov
pop
mov
xor
fsubr
fwait
jnp
ss
lds
inc
imulb
loop
cmpsl
int3
dec
cmp
into
jae
push
mov
adc
jnp
sub
shl
enter
jle
sbb
fdivr
sbb
jnp
loop
and
sub
dec
pop
in
mov
fdivs
pop
mov
xchg
gs
imul
xchg
sahf
xor
les
sbb
or
and
addr16
mov
cmp
andl
jae
movsb
adc
shrb
les
sti
cmpb
into
sub
mov
ja
cwtl
clc
je
lock
sbb
jnp
frstor
cs
dec
push
ja
or
fcomps
jg
cmp
xchg
inc
xor
jmp
sbb
sub
mov
and
mov
jnp
movsb
mov
ja
scas
mov
dec
pop
jnp
and
scas
insb
subl
mov
in
mov
dec
xlat
es
mov
cmp
leave
loopne
out
jnp
sbb
xor
cmp
lcall
push
push
jnp
enter
fwait
cmp
mov
sub
xlat
and
sbb
or
mov
pop
jp
dec
stos
das
cs
cli
shlb
mov
shrl
ret
outsl
jle
jnp
sub
loopne
sbb
imul
jae
xor
cmpl
jnp
int3
test
xchg
jnp
insb
test
lcall
aas
les
stc
dec
jnp
call
mov
adc
outsl
xor
loop
scas
je
je
fistpll
dec
add
sbb
fwait
push
popa
ss
jno
xor
cmp
clc
lahf
scas
dec
inc
sbb
mov
cli
insl
ret
cltd
stc
cmp
jo
hlt
jmp
sti
enter
or
add
pop
out
ljmp
mov
pop
lahf
enter
add
jns
roll
or
es
jl
dec
in
scas
mov
mov
inc
mov
fildl
mov
iret
or
mov
jae
sti
scas
mov
pop
clc
mov
rorb
push
cmp
jecxz
or
test
clc
and
out
xor
int
dec
mov
adc
pop
enter
jg
inc
insl
mov
jnp
jno
xor
enter
mov
adc
xchg
lahf
insb
push
fs
aam
jnp
sbb
mov
mov
mov
fildll
dec
popa
sarb
sbbb
js
add
add
sbb
int
lods
mov
repz
das
mov
je
insb
sub
in
add
cmc
pushf
pop
test
adc
xchg
stos
lods
jb
or
push
insb
stos
sbb
stos
in
mov
out
and
mov
jnp
jmp
mov
dec
jnp
ficomps
jns
in
dec
into
jnp
mov
mov
jnp
xchg
mov
mov
fmuls
fldenv
jnp
loope
jmp
adc
jnp
ret
nop
lahf
insl
scas
mov
jae
push
fimull
movsl
mov
insl
inc
pop
fs
out
jnp
cwtl
mov
dec
jnp
out
lcall
fstpt
iret
push
mov
dec
fidivl
pop
mov
call
jnp
cmp
es
mov
aam
jo
or
cmpsl
and
adc
lret
or
stos
cmpl
das
lods
mov
jnp
shr
xchg
in
sbb
sbb
and
mov
es
lret
push
or
adc
sbb
jecxz
ja
int3
or
inc
jmp
jno
cmp
aaa
pop
and
sub
jnp
jle
frstor
imul
xchg
sbb
shl
nop
stc
add
sub
stos
sbb
jnp
fldenv
mov
push
sub
int3
and
or
test
inc
cli
xchg
add
push
sub
and
dec
xchg
lret
test
cmp
mov
roll
ja
ffreep
pop
ret
mov
imul
in
dec
add
movsl
jnp
sti
paddq
stc
mov
xor
sbb
in
insl
sub
pop
mov
cltd
push
lret
sub
hlt
jno
xchg
mov
inc
push
jnp
ljmp
mov
push
mov
outsb
mov
repz
out
stos
imul
lods
adc
jnp
aas
mov
sbb
into
jnp
push
xchg
push
add
inc
cmc
jns
mov
cltd
inc
cmp
stos
divb
mov
xchg
setb
arpl
cmp
fwait
lcall
jl
imulb
out
cmpsl
stos
int3
imul
mov
jmp
push
jnp
cmp
loop
mov
and
pop
sti
ja
inc
sub
cmp
cmp
push
jnp
popa
in
xchg
stos
ds
mov
xchg
mov
adc
jnp
or
imul
in
adc
ret
sbb
jnp
js
add
cmp
repz
shr
pushf
adc
push
roll
mov
xchg
jne,pn
fstpl
mov
daa
js
inc
pusha
jno
mov
mov
add
rol
jne
xor
popa
pop
jbe
sub
pop
cwtl
xchg
fcomps
decl
jnp
pop
mov
jnp
pop
cmc
jge
or
cmpsb
lahf
jnp
orl
lods
mov
and
or
inc
scas
pop
decl
leave
adcb
rcrb
lahf
divl
xor
jmp
cli
push
mov
add
mov
mov
icebp
loopne
stos
ja
sbb
stc
inc
jnp
and
icebp
mov
sbb
dec
ja
mov
mov
xor
jnp
mov
ss
ror
sbb
cmp
imul
jg
rolb
out
mov
jg
mov
imul
lcall
daa
pop
mull
inc
jnp
add
mov
mov
clc
jnp
and
popa
jns
cmp
mov
mov
mov
dec
cmc
imul
xor
loopne
mov
adc
sub
dec
jnp
in
sub
cmp
negl
loop
jnp
push
lret
scas
xchg
push
add
enter
inc
jg
jnp
lret
hlt
cs
std
insb
fistpll
aam
int3
jmp
xor
mov
incb
insl
addr16
dec
pushf
dec
mov
pop
or
sub
jbe
scas
xchg
inc
mov
cmp
pusha
aad
aaa
lods
xchg
push
pop
cld
jae
cmp
ret
jbe
mov
pop
sar
fldt
mov
push
sbb
in
lods
cwtl
or
ja
mov
ds
jnp
insb
cmp
mov
and
jmp
sub
mov
jnp
mov
pop
push
imul
dec
mov
jnp
mov
mov
jnp
ds
popa
jne
xor
cmp
outsl
jnp
sbb
sub
jae
jnp
repnz
mov
mov
xlat
jle
pop
lret
lods
lret
loope
mov
cmp
mov
jnp
mov
or
cwtl
mov
jnp
lds
fidivrl
fsubl
mov
jl
add
stos
sarb
stos
lods
in
jnp
and
pop
and
sub
movsl
jmp
lcall
outsl
neg
jnp
lret
in
pop
add
mov
roll
enter
mov
scas
mov
push
or
fdivrs
sub
and
inc
sarl
je
ds
cld
mov
arpl
sbb
jmp
xorb
iret
imul
dec
mov
xchg
lods
fstpt
mov
out
sarl
test
jecxz
jnp
gs
loopne
es
jnp
xor
stos
mov
cmp
lods
aam
inc
xchg
test
cmp
nop
xor
and
mov
iret
xor
push
mov
push
lods
jnp
xchg
jb
sbb
xchg
mov
fucom
es
jae
sbb
fisubrl
stc
or
pop
scas
jnp
mov
sub
jnp
or
cmp
and
lods
or
popf
or
xorb
imul
xor
and
popa
xchg
adc
out
push
pop
mov
jnp
movsl
mov
cmp
jmp
insb
or
jo
insl
jnp
and
popf
cmp
movsb
shr
or
mov
popf
inc
loope
inc
imul
in
es
xchg
push
jnp
sbb
push
sbb
xor
test
xchg
mov
jne
in
jnp
push
stos
movsl
and
nop
pop
aam
repz
lods
jne
shlb
jbe
cld
insb
and
jnp
pop
mov
fidivrl
dec
jno
idiv
or
adc
push
int3
repz
aaa
ja
dec
jne
push
xchg
cltd
xlat
sbb
sbb
xchg
lods
outsl
repnz
pushf
adc
inc
rcr
imul
jp
jbe
in
test
lea
lock
sbb
les
jl
dec
push
inc
sbb
outsl
xchg
pop
fnstsw
xchg
dec
mov
jmp
jnp
into
fwait
sahf
test
mov
cwtl
testb
int
jnp
iret
imul
xor
mov
jnp
out
fldl
mov
pop
mov
jno
sub
mov
xor
jne
ret
pop
mov
or
cmp
mov
xchg
pop
decl
outsl
jbe
lahf
mov
inc
sahf
jecxz
jp
int
adc
cmp
cmp
pop
dec
repnz
pop
and
outsb
xchg
shlb
sub
xchg
pop
outsl
mov
fnstsw
cmp
pop
inc
out
cmpsb
jmp
insl
inc
ds
lock
repz
jnp
hlt
insl
and
ss
sbb
mov
jmp
lret
jb
jnp
lcall
jnp
and
cli
jnp
mov
mov
hlt
scas
lods
js
or
push
ja
lcall
fldln2
or
dec
sbb
cmp
ja
xor
add
aaa
cwtl
push
cmp
jnp
popf
loopne
push
imul
sti
dec
or
jnp
popf
sbb
inc
jns
sbb
or
imul
push
mov
dec
pop
add
lds
rclb
int3
add
dec
mov
jmp
fwait
outsb
insl
stos
adc
jnp
mov
cmp
daa
jae
cwtl
push
pop
mov
sub
enter
xchg
pop
jnp
lock
mov
jnp
outsb
out
mov
jb
jnp
mov
shll
dec
int
push
insl
notl
in
imul
adc
shrl
pop
jnp
lret
mov
stc
iret
dec
shlb
ret
in
imul
bound
les
lret
decb
in
inc
hlt
inc
jns
xchg
int3
mov
jnp
add
mov
int
adc
pop
idivl
xchg
jnp
shrl
cmpsb
jnp
mov
jg
cmp
stos
jl
imul
mov
fimull
jle
cmpsl
sub
xchg
aaa
mov
jnp
lret
pop
sti
sbb
shlb
jnp
or
jnp
jne
and
xor
push
mov
inc
leave
cmp
xchg
jne
mov
xor
sbb
cmp
cmpsl
jnp
mov
negb
jnp
xchg
push
aad
mov
insl
out
ss
lahf
inc
dec
lret
dec
mov
jnp
sahf
or
pop
insb
lcall
sbb
sub
dec
xor
mov
xchg
sub
jnp
push
dec
and
jle
jnp
push
lods
push
das
pop
bound
ljmp
cltd
or
jnp
cmc
push
cmp
int3
cmpsb
pop
jnp
inc
aad
mov
repnz
ss
mov
mov
adc
add
fidivl
xorb
or
js
pop
pushf
sub
lea
fwait
imul
aad
fisttpl
jnp
sbb
mov
mov
or
adc
jnp,pn
lret
lods
loope
call
cmp
jne
insl
imul
pop
sbb
daa
mov
xchg
pop
addb
lea
lds
jnp
inc
mov
sub
mov
or
dec
cld
xor
mov
jnp
call
jnp
dec
mov
inc
lcall
aad
cmp
cwtl
dec
or
sbb
dec
xchg
lods
or
adc
sub
cmp
or
mov
jnp
mov
mov
in
cmp
mov
jnp
jecxz
inc
scas
or
and
ja
jb
mov
pop
stos
jnp
pop
jg
pusha
cmpb
aad
popa
imul
scas
subb
xchg
in
or
sbb
cmp
pop
jnp
stos
pushl
add
sub
jnp
sub
inc
mov
jne,pn
test
pop
ljmp
dec
jae
inc
in
lods
jp
mov
mov
jb
test
insb
sub
mov
ret
jne
in
imul
movsl
mov
out
arpl
int
mov
je
imul
sub
jb
adc
jnp
movsl
and
jno
mov
jle
in
jmp
js
test
enter
cli
sub
jnp
pop
mov
sub
jnp
repz
divl
rcr
cmp
jnp
xchg
xor
push
aam
cmp
fcoms
test
inc
iret
jnp
cli
xchg
sub
cmp
lds
into
cwtl
ja
cld
jnp
adc
cmp
lock
test
testb
mov
orb
into
jp
cmc
xchg
in
sub
inc
sbb
cmp
aad
and
dec
aaa
xor
inc
jae
lret
nop
and
dec
mov
xchg
cmp
mov
xlat
mov
arpl
les
lods
mov
add
int
insb
add
rclb
fsubp
and
push
adc
fisttps
inc
das
jnp
popl
sub
pop
xor
pop
test
sahf
shll
dec
and
dec
xchg
jb
arpl
pop
shlb
lock
test
jge
jnp
sub
add
mov
jl
sbb
call
in
lock
jnp
mov
and
dec
fisubl
sbb
jne
jmp
mov
nop
outsl
xchg
lahf
stos
push
pop
and
insl
mov
xlat
mov
mull
das
and
loopne
cmpsb
mov
jae
dec
adc
js
jnp
xchg
cmp
xchg
push
mov
mov
pusha
mov
addr16
adc
int3
ja
xchg
leave
jo
pop
insl
cli
push
in
adc
jae
push
cmp
pop
das
jnp
add
jnp
adc
dec
dec
jnp
xorl
inc
jnp
dec
mov
add
xchg
icebp
mov
dec
dec
movsl
pop
es
lods
xchg
stos
icebp
jg
jns
outsl
and
sarl
lock
inc
lods
xor
imul
mov
dec
outsl
mov
jb
ja
sub
jnp
lock
mov
je
stos
outsl
xor
imul
pop
mov
lret
pop
sti
add
popl
push
in
int3
dec
in
mov
dec
cmp
ss
mov
movq
xor
and
repz
loopne
js
adc
jb
test
jnp
lret
lods
cmp
pusha
jnp
ss
ljmp
shll
cmp
movsb
and
jnp
decl
imul
jb
xor
stos
cmp
insb
push
and
jmp
pop
pop
push
int
sbb
sub
pop
ja
lods
imul
jae
mov
mov
lahf
sarb
jecxz
dec
sub
imul
xor
dec
js
sbb
mov
sarb
xchg
ret
pop
jae
xlat
outsb
sub
and
ffree
jle
sbb
push
jnp,pn
ljmp
jnp
mov
dec
iret
jnp
sub
and
movsb
xor
pushl
xor
out
dec
sbb
mov
pop
push
jbe
test
or
jnp
fldcw
jl
mov
dec
inc
xchg
pop
popa
push
lods
je
pusha
imul
pop
cmp
jne
jle
js
and
push
shrb
sub
lret
jnp
incl
pop
dec
loope
or
das
adc
sub
or
xacquire
cmp
adcb
mov
call
ds
cmp
jmp
xor
jnp
push
iret
enter
mov
fcmovbe
mov
mov
push
adc
mov
jnp
jne
adc
and
sahf
imul
cmp
aas
sub
pop
jae
out
xchg
lret
adc
shrb
or
mov
fiaddl
jnp
jecxz
or
insl
sbb
xchg
xchg
push
cmp
inc
fidivl
imul
nop
ja
xchg
pop
push
jnp
test
mov
mov
xor
xchg
jnp
movsl
hlt
jns
int3
cmp
pop
pop
mov
xchg
lret
mov
jns
and
or
jmp
ljmp
inc
sub
inc
lret
aas
lods
jnp
iret
sub
rsm
imul
or
dec
mov
cmp
xor
lock
xchg
jnp
clc
push
ret
in
in
sub
cld
repz
aam
dec
std
aad
ja
mov
dec
jno
daa
jnp
mov
fwait
inc
lods
iret
gs
jnp
sbb
stos
leave
imul
mov
jnp
pop
movsb
mov
jnp
icebp
cmp
mov
dec
mov
ret
xor
aas
pushf
int
imul
add
xchg
xor
rcrb
sub
jle
test
push
jb
je
mov
shrl
add
push
jmp
mov
pusha
jnp
arpl
or
lock
jnp
test
sbb
push
cld
cmp
jnp
fwait
mov
mov
and
mov
adc
pop
push
and
lret
aam
xchg
mov
mov
fidivs
push
call
andl
jnp
add
sbb
cmp
mov
shrb
pop
jmp
fidivrs
lahf
popf
jnp
or
in
xchg
ss
jnp
sub
mov
pop
pop
js
mov
sbb
aam
and
xchg
out
mov
repnz
lock
jnp
test
push
sbb
adc
lret
jnp
mov
sbb
insb
out
cld
jne
cmc
mov
cmp
jp
mov
mov
scas
or
push
push
jnp
imul
popa
pop
xor
and
loopne
sbb
add
xlat
jnp
adc
cmpsb
call
push
jnp
jbe
cmc
cmp
int
in
roll
jnp
inc
push
aas
mov
mov
cmp
mov
add
cld
imul
cli
lods
mov
jo
dec
shlb
jb
jnp
aam
mov
js
push
jnp
sbb
xor
adc
dec
adc
outsl
lods
shll
pop
mov
les
sbb
test
xchg
mov
aad
shll
into
leave
mov
dec
add
icebp
jae
pop
fbld
shr
inc
imul
in
clc
roll
jl
push
pushf
jnp
jns
stos
dec
imul
jb
xchg
outsl
push
ss
add
negb
jge
lret
push
scas
xorl
ss
rclb
cltd
jg
xchg
arpl
imul
xor
jnp
push
int3
jle
fwait
addb
out
jnp
stc
dec
cmp
sub
xchg
repnz
int3
in
sarl
xchg
sub
dec
xor
mov
inc
xchg
mov
lcallw
test
das
push
lret
in
jo
jle
shll
cmp
lret
sbb
ja
fs
push
pop
fisttpll
lds
cmpsb
cmp
insb
js
int3
and
mov
or
xchg
arpl
insl
jne
mov
imul
mov
mov
inc
out
dec
or
push
or
xor
ret
xlat
jnp
out
inc
sbb
add
imul
scas
ss
push
cmp
xchg
jnp
pop
mov
lods
cmc
mov
loopne
aaa
xchg
lock
mov
cs
mov
adc
imul
sub
ss
mov
sub
jnp
inc
out
xor
jg
xchg
xor
xchg
testb
add
aam
push
call
test
out
push
sbb
jg
stos
lea
cmp
sub
mov
or
jecxz
cwtl
jae
fsubp
lcall
xor
outsl
lds
sbb
pop
mov
sbb
push
mov
adc
and
dec
mov
or
fsubl
mov
jnp
mov
out
xchg
pop
add
jge
adc
mov
mov
ffree
cmp
mov
jo
jl
loope
add
push
jnp,pn
dec
rolb
lods
loop
std
pop
sub
and
mov
jnp
repnz
popl
xchg
jnp
cmp
setnp
cmp
shrb
testb
test
inc
sbb
mov
daa
fs
pop
pop
xchg
imul
aam
sarl
sbb
nop
into
dec
xchg
test
adc
sbb
mov
popa
and
fstps
mov
jmp
ljmp
jae
push
inc
jp
in
outsl
adc
dec
es
jnp
push
fisubrl
leave
lcall
insl
lea
popa
jnp
dec
xchg
sbb
clc
cmp
jnp
lret
cwtl
mov
jnp
xor
mov
mov
loop
fnstenv
or
aaa
jge
jnp
pop
pop
xlat
lcall
inc
jno
pusha
sub
and
scas
insl
test
sbb
jl
outsb
stc
or
cmp
add
xor
ret
sub
repz
jae
movsb
pushf
ret
lods
fcom
lret
inc
sbb
shlb
cmp
dec
xorb
scas
mov
push
xor
repz
je
int3
out
pop
sub
push
mov
lock
sub
mov
in
jnp
cmp
ss
insb
mov
cmpsb
imulb
lret
cmpsl
fstpl
jnp
jmp
sbb
rolb
adc
imul
bound
out
rcr
fwait
and
cld
call
imul
in
cmp
xchg
out
scas
bound
jnp
fbld
xor
mov
or
sahf
dec
mov
clc
add
inc
inc
jnp
scas
cmp
fimuls
mov
dec
out
xchg
loop
xchg
cmp
int3
mov
jnp
and
xchg
jnp
lds
int
mov
icebp
imul
cs
mov
mov
addb
fidivs
xor
jmp
mov
mov
insb
xor
mov
mov
test
scas
jnp
inc
fistps
lods
nop
sbb
cs
movb
in
je
jns
mov
xlat
xor
out
mov
and
in
jo
xchg
mov
or
sbb
jns
sbb
and
mov
push
fwait
in
fistl
enter
lock
ss
int3
sahf
jo
mov
imul
mov
jg
jmp
mov
add
add
fs
cmp
scas
ljmp
xorb
dec
test
call
lds
sbb
lahf
test
lcall
jnp
int
fs
mov
gs
loopne
push
jmp
mov
jae
imul
xor
dec
push
adc
fsts
les
xor
std
decb
jae
js
fwait
mov
jecxz
cs
ret
lret
je
sbb
hlt
xor
mov
and
dec
sti
add
adc
add
or
test
jg
movsbl
orl
jb
jns
xor
lahf
dec
repz
adc
sbb
mov
xor
cmp
cmp
mov
lret
loop
lds
mov
movsb
add
mov
sub
clc
gs
out
dec
mov
fidivrs
push
inc
dec
mov
cmpb
insb
adcl
and
enter
or
in
jnp
push
mov
push
jnp
jmp
xchg
mov
arpl
sti
out
fcompl
cmp
pop
scas
fst
jno
jb
xor
sbb
fbstp
push
jnp
mov
pop
lret
cmp
add
sbb
jnp
sub
mov
sbb
les
stos
jle
add
add
bound
cmpsl
ja
lret
mov
cmc
xor
pushl
cmpsb
cltd
and
jnp
out
and
aas
mov
dec
xchg
ret
inc
sbb
nop
lods
fisubs
sbb
jbe
imul
and
sbb
mov
sbbl
dec
jnp
stos
leave
cld
jge
mov
clc
or
aas
cmp
push
aad
lea
pop
out
outsl
js
push
loope
pop
push
jl
adc
iret
ds
mov
in
sbbl
fs
outsl
inc
mov
push
xchg
cmp
sub
add
mov
push
test
fsubrl
jnp
sti
cmp
popa
jmp
cltd
xor
jae
mov
insl
jg
pop
adc
sbb
lret
add
dec
and
iret
dec
jmp
frstor
jae
jmp
lods
mov
in
pop
mov
mov
sub
repnz
jae
stos
mov
ficompl
push
sahf
or
fnsave
int
adc
xor
lret
sbb
lods
pop
pop
out
cmp
dec
pop
sub
out
mov
lea
pushw
cwtl
mov
insl
sarb
push
xchg
and
jae
js
inc
jo
mov
pop
test
ljmp
and
inc
and
mov
inc
pop
es
mov
cld
push
jnp
push
test
aad
cmpsl
mov
lds
jns
movsb
jnp
ret
lret
icebp
xchg
and
bound
in
inc
pop
sarl
std
hlt
insl
push
mov
pushf
js
enter
jmp
mov
xor
sahf
or
cmp
push
adc
or
mov
rorb
adc
push
push
cmp
pushf
dec
push
stos
mov
sbb
mov
xor
jle
fsubl
jnp
push
pusha
aaa
mov
add
jnp
jno
data16
dec
cmpl
xchg
xchg
shlb
jmp
fldt
pop
inc
jnp
idivb
mull
into
mov
lods
mov
pop
mov
jno
push
jno
pop
stos
xlat
cmp
insb
aaa
inc
xor
cmp
dec
jge
adc
xchg
jne
mov
es
cmp
push
jnp
xchg
aas
jge
les
imul
add
ljmp
mov
dec
cmp
mov
movsb
into
jnp
adc
gs
or
cmp
ret
pop
fcomi
clc
jnp
mov
mov
jmp
or
xchg
out
xor
mov
pushf
cmp
imul
or
fdivs
mov
inc
jae
xor
jmp
cmpxchg
mov
dec
and
pop
inc
pop
mov
cs
in
idivl
dec
jnp
lods
and
or
adc
cld
ds
jnp
mov
leave
or
mov
push
in
sbb
jnp
loopne
lods
pop
sbb
into
cld
jae
mov
adc
outsl
lods
push
scas
mov
rcll
adc
jns
cltd
loopne
and
jo
pop
adc
push
cltd
rorb
cmp
cmp
mov
int3
sub
in
jnp
mov
dec
scas
outsl
mov
es
xor
roll
mov
fwait
lret
mov
cmpsb
pop
ss
mov
enter
icebp
mov
in
aaa
push
outsl
je
rcr
jbe
insl
push
jnp
inc
and
push
aas
loop
ss
jnp
adc
gs
dec
mov
jb
adc
ds
jnp
cs
mov
lcall
mov
pop
push
hlt
test
test
jg
int3
in
call
out
repnz
add
test
stos
nop
aam
dec
push
cld
jnp
jns
xchg
adc
test
xor
or
add
pop
adc
fstpl
subb
fcomps
sti
push
sbbl
xchg
sub
and
or
sub
pop
add
and
add
jnp
sub
jbe
cltd
fidivl
insb
outsb
out
popa
xor
jns
jg
out
mov
or
rcll
mov
mov
xchg
mov
fdivs
insl
xchg
fdiv
in
mov
mov
cmp
jnp
mov
shr
fisubrl
jnp
sbb
in
lock
repnz
push
hlt
mov
pop
dec
sbb
mov
insb
mov
jnp
inc
mull
xor
push
add
repnz
jne
stos
lret
jnp,pt
fistpll
in
scas
jle
mov
and
or
lods
nop
popa
dec
sbb
out
in
mov
mov
sbb
pop
clc
dec
mov
dec
mov
movsl
out
mov
push
sbb
loope
or
out
adc
jns
inc
movsl
fstpl
adc
cmp
mov
cltd
jnp
stc
lret
add
jnp
scas
int3
xor
or
jl
ljmp
stos
mov
test
mov
jae
sbb
scas
xor
pop
xchg
call
adc
jns
xor
jo
test
lods
jae
inc
dec
sub
jnp
and
sub
inc
pop
pop
scas
in
xchg
sbb
jnp
sarl
sub
mov
mov
in
jae
xchg
jnp
push
cmpsl
cmp
dec
pop
jecxz
fistps
pop
and
xchg
sub
xchg
cmp
pop
jnp
xor
cmpb
ljmp
mov
fs
xchg
jnp
inc
jo
or
add
stos
mov
loopne
or
pop
mov
lods
daa
dec
ljmp
mull
inc
jbe
push
aad
or
out
es
mov
push
jnp
push
jbe
jmp
ljmp
iret
cltd
xchg
test
ss
aam
out
in
jns
jnp
sahf
movsl
notb
push
fdivr
xor
cmp
mov
dec
mov
popf
pop
or
jmp
jnp
and
adc
push
jns
sbb
sub
push
sub
push
mov
dec
pop
or
jnp
cmpl
std
add
inc
xor
sub
clc
in
jnp
enter
sar
fmull
lock
push
das
jnp
inc
adc
sbb
mov
jnp
pop
sub
ss
mov
js
jnp
push
xchg
fwait
xorb
pop
mov
xchg
into
mov
jnp
incl
sbb
jecxz
mov
jnp
jne
xor
cmp
stos
out
and
in
out
aaa
dec
std
stos
rcr
inc
mov
fnsave
or
adc
sbb
mov
mov
imul
int
sub
add
out
jnp
sbb
ficomps
aaa
xchg
sub
cmp
jl
outsb
push
jae
add
ljmp
insb
mov
gs
sti
inc
mov
xchg
mov
add
xchg
mov
jno
test
fadd
insb
jl
add
pop
pop
xor
jmp
sbb
sub
loop
jne
in
cltd
and
pop
punpckhwd
mov
les
or
pop
dec
nop
jnp
inc
and
pop
xor
dec
imull
jae
mov
xlat
lcall
and
pop
lods
std
pop
dec
cmp
sbb
push
jnp
dec
js
jge
sbb
jnp
sub
push
inc
mov
cmp
cmp
mov
jnp
sub
lret
int
push
jbe
add
jnp
mov
mov
stos
mov
jae
pop
or
add
cmp
das
popa
push
mov
movsl
push
loope
sbb
outsl
ret
xor
mov
jb
jne
cld
jmp
inc
icebp
sbb
sbb
jnp
lcall
add
jnp
shl
lret
mov
inc
adc
mov
sub
jmp
adc
insl
js
dec
divl
jecxz
jns
add
and
adc
cmp
scas
stos
scas
sarb
das
jae
jno
stos
lret
pop
and
push
jnp
mov
push
cld
sbb
int3
or
fwait
add
pop
jnp
test
mov
jb
jnp
dec
mov
jns
add
outsl
sub
test
movsl
jp
jl
xlat
sarb
pusha
outsl
test
test
lret
cmp
out
pop
insb
movsb
gs
jmp
dec
push
orl
sub
cmp
adc
cli
push
jnp
dec
gs
insb
lret
ja
cmpsl
jnp
mov
jg
jnp
dec
outsb
mov
jnp
mov
xchg
jnp
cmp
sbb
ja
jb
pop
jge
js
xor
pop
mov
sbb
aam
cmp
aas
or
sbb
pop
jnp
int3
mov
js
xchg
dec
in
xor
mov
cmc
shlb
add
cmp
out
jnp
xor
jnp
mov
xchg
sub
mov
arpl
dec
jbe
fdivs
adc
je
js
mov
mov
ret
jns
sub
inc
xor
pop
xor
jle
fwait
mov
lcall
jnp
xor
shrl
decb
int
jp
jnp
out
popf
add
cltd
or
lret
jnp
insl
mov
pop
cld
xchg
xor
sub
dec
lods
mov
mov
or
push
xchg
fstpt
push
sbbl
jg
into
jbe
fidivl
xchg
stos
mov
or
ss
adcb
push
and
xor
inc
jp
lods
mov
push
cmpb
mov
dec
jnp
or
into
xor
jg
bound
jb
adc
pop
mov
lods
fnstenv
iret
cmp
dec
lret
stos
or
aad
insl
mov
jno
cld
add
mov
sub
push
xor
dec
imul
xor
pusha
adc
stos
clc
mov
mov
xchg
cmpsb
ljmp
popf
jnp
mov
xor
sbb
xlat
sub
aaa
lods
jmp
push
shlb
dec
cmp
xor
xor
popa
xchg
sahf
lret
mov
aad
pushf
call
sub
dec
ja
ret
inc
loop
xchg
lods
mov
cmpb
fsubs
popa
pop
pushf
rorb
and
inc
mov
mov
shlb
jnp
xchg
in
jae
lcall
aam
sbb
adc
outsl
inc
in
cmpsb
xor
test
test
and
or
scas
mov
pop
jnp
rol
mov
mov
jbe
cli
mov
xor
int3
cmp
fidivrl
adc
popf
jnp
mov
jecxz
ja
mov
xor
aaa
sarb
xchg
mov
shr
outsb
jnp
repz
scas
testl
jae
stos
jmp
sub
jbe
jo
or
and
lcall
js
in
test
jnp
aaa
fstpt
jnp
shlb
cmpsb
dec
add
lods
int
fwait
loop
ret
dec
sub
fistpll
fs
and
mov
or
mov
xchg
lcall
das
push
jg
sub
ljmp
fistpll
clc
mov
jno
pop
dec
daa
xorb
jae
adc
lret
or
jnp
mov
ret
sub
adc
xchg
pop
lcall
jnp
out
repnz
stos
pop
sbb
mov
cli
sub
es
scas
stos
cmp
jnp
mov
fwait
outsb
fistps
jnp
jge
sbb
mull
inc
adc
mov
push
jb
clc
jo
jae
jle
lods
lods
cmp
jmp
xchg
jecxz
jae
mov
jns
ss
icebp
mov
and
mov
xor
xchg
jns
adc
adcl
mov
jbe
pusha
sbb
ret
dec
cmp
lock
ret
js
pusha
or
xor
xlat
jae
sub
xchg
jge
jnp
fbstp
cmpb
sub
xor
repz
pushf
pop
pop
sub
add
popf
jb
cmpsb
rcr
gs
xchg
mov
sub
loop
mov
popa
push
ret
lret
in
lods
cmc
jnp
rorb
mov
jno
iret
adc
mov
rorl
les
mov
ljmp
dec
hlt
cmpsb
add
jnp
mov
cwtl
mov
sbb
jbe
jle
ret
jnp
cmp
jge
ljmp
scas
pop
dec
mov
sub
jg
fdivrl
lret
mov
outsl
fucom
ja
or
inc
jae
pop
adc
jnp
mov
mov
mov
mov
cld
pushf
jnp
push
cs
fdivrl
mov
cmp
mov
test
sub
pop
xchg
or
and
xor
mov
xchg
cmpsl
xchg
jnp
sbb
lock
inc
or
mov
imul
je
mov
jns
pushf
pop
in
sarl
cmp
mov
mov
adc
movsl
aaa
sub
and
inc
jbe
mov
pop
pop
jnp
sbb
call
jnp
pop
cli
ljmp
pop
dec
testb
scas
movsb
dec
lock
jnp
mov
xchg
cli
jnp
sub
xor
adc
dec
mov
mov
mov
jmp
movsl
jnp
dec
subb
cmp
dec
jp
bnd
xor
mov
int3
fistpl
cltd
clc
nop
inc
jnp
xor
mov
jbe
std
mov
testb
xlat
cmpsl
pushf
dec
dec
gs
pop
cltd
pop
stos
cmpsb
iret
pop
mov
and
or
mov
jnp
and
jnp
xchg
pop
shl
mov
enter
lods
push
lahf
jmp
out
call
sub
in
mov
pushf
jno
xchg
push
stos
aam
xor
lds
icebp
push
and
pop
cmp
inc
sbb
jnp
jge
xor
mov
call
xor
pushf
test
jbe
hlt
mov
test
outsl
imul
bound
xchg
stc
xor
push
pop
push
hlt
push
aaa
pop
push
jae
outsb
icebp
xchg
fidivrl
adc
or
xchg
add
ret
bound
fisubrl
adc
call
movsb
out
pop
cmp
or
xchg
into
mov
pop
cmp
cmp
sbb
mov
cmp
xchg
sub
lods
xchg
jnp
xchg
and
inc
js
mov
fdivs
mov
mov
jnp
xchg
mov
lret
lahf
push
insl
stos
clc
add
mov
mov
call
inc
mov
xchg
sub
fisubrl
inc
cmpsb
arpl
in
hlt
iret
aad
cli
lock
and
mov
mov
mov
or
mov
pushf
imulb
popf
sbb
data16
mov
sub
cmp
ja
and
jnp
jbe
adc
xchg
xor
cmp
jnp
arpl
mov
cmc
fmull
lea
loop
out
jnp
loopne
ret
cmp
xor
fidivs
adc
inc
jns
lods
jnp
sbb
pop
roll
stc
imul
add
mov
test
div
movsb
sbb
mov
sahf
push
iret
std
hlt
pushf
or
into
mov
punpcklbw
scas
mov
js
push
push
jnp
jmp
adc
nop
cmp
adcl
dec
push
pop
jnp
lret
in
sarl
shrb
dec
cli
nop
inc
sarl
xor
js
es
or
jl
ret
fdivrs
jnp
clc
mov
data16
cmp
lret
das
mov
call
out
jnp
push
loop
test
pop
and
jle
fidivs
mov
sub
sbb
mov
jns
cmpb
fsub
shrb
stos
xchg
adc
inc
out
cmp
jnp
sub
sarb
loop
lods
negl
das
ja
mov
sahf
dec
out
clc
cmp
arpl
stc
rcrl
xor
insl
mov
jnp
lret
jmp
xor
jae
les
jnp
sub
mov
jnp
xchg
dec
lea
xor
xor
xchg
cli
mov
sbb
rolb
mov
xor
stos
adc
ret
jnp
movsl
sbb
add
xchg
jnp
cmp
pushf
jnp
add
sahf
cli
mov
mov
inc
pop
rcr
bound
outsl
and
sbb
mov
shl
dec
cmp
dec
add
faddl
adc
bound
lcall
nop
push
jne
jnp
xchg
dec
dec
and
xchg
fwait
jo
test
cli
outsb
push
jg
cmp
xor
or
adc
xor
fcomp
out
lods
pop
stc
pop
sbb
lock
shrb
arpl
push
push
jnp
xchg
das
cwtl
adc
add
cmp
add
ljmp
sbb
dec
imul
subb
sub
sub
push
sahf
sar
jnp
roll
dec
jno
push
jnp
xchg
mov
fs
lcall
adc
jnp
stc
loopne
xor
das
insb
std
js
lock
sub
adc
add
int
jnp
arpl
cwtl
jnp
out
sbb
sbb
mov
pop
js
mov
mov
shrb
icebp
inc
sub
mov
mov
cld
push
lods
insl
mov
movsb
mov
push
xor
jg
test
jae
pop
add
bnd
xor
sub
xor
jecxz
pop
jo
pop
jl
gs
call
imul
int3
lods
cmc
mov
xchg
loopne
mov
push
mov
jnp
pushf
ret
push
xlat
mov
cmpsl
jnp
clc
pop
ss
cmpsb
cld
jnp
xor
pushf
add
mov
pop
inc
cwtl
cli
cltd
xor
jnp
sub
fstps
test
pop
jns
sub
adc
es
or
mov
xor
cmc
mov
add
sub
movsb
scas
cli
xor
inc
xchg
xor
xchg
pop
mov
lods
mov
aaa
outsb
jae
cmpsb
mov
mov
clc
bnd
mov
sbb
mov
jbe
rcr
mov
dec
hlt
sub
sbb
in
sub
mov
insl
or
xor
imul
inc
ljmp
out
cmp
das
or
or
in
sti
inc
jno
into
pop
jp
stos
aaa
sub
aas
mov
jnp
addr16
cmp
fsubrs
xlat
insl
pop
jo
repz
lods
cmp
cli
test
out
and
jnp
add
sbb
xchg
mov
fwait
data16
mov
addr16
mov
addl
std
ljmp
inc
jnp
stc
ficomps
cmp
xchg
shll
ret
jnp
pusha
adc
out
fsubs
jnp
xchg
inc
mov
adc
adc
jg
mov
jno
scas
nop
sub
mov
shrb
in
mov
and
sub
sub
xchg
lcall
jbe
mov
sbb
jnp
fwait
mov
sub
cmpsl
idivb
xchg
inc
and
dec
jnp
fcoml
jnp
loop
push
xchg
stc
rclb
jnp
lods
rolb
pop
xor
mov
dec
dec
jnp
and
push
mov
cmp
pop
cs
ds
lods
mov
mov
sub
jge
jo
dec
mov
mov
fistl
mov
jnp
mov
shll
div
sub
mov
jbe
mov
js
and
ss
dec
mov
icebp
sub
out
bswap
jnp
mov
mov
cmp
dec
adc
outsb
fisttpl
sbb
cltd
pop
and
aaa
jnp
pop
or
cltd
dec
or
cmp
mov
push
call
inc
hlt
imul
scas
dec
jnp
sbb
and
clc
mov
cli
inc
jnp
stos
aaa
push
adc
sub
fsubl
out
clc
icebp
popf
shrl
jnp
or
jnp
push
aaa
mov
adc
add
jnp
mov
add
jnp
xchg
cli
fisubrs
dec
fdivrl
mov
loop
in
jp
mov
loope
std
imull
jnp
shl
mov
stos
jnp
imul
ds
push
cmpsb
jae
stos
aam
jnp
not
cld
shr
pop
xor
mov
jnp
lods
mov
sbb
cli
pushf
xchg
adcl
jnp
pop
push
or
jge
xor
add
pop
js
push
dec
sub
cmp
jnp
xchg
imul
or
test
clc
mov
cli
xor
xor
lret
hlt
adc
es
pop
pop
lock
idivb
jnp
or
dec
dec
mov
mov
jle
fld1
jnp
andl
je
leave
imul
stos
popf
adc
ss
and
les
mov
push
cwtl
clc
xchg
cmp
sub
outsl
out
pushf
not
loope
add
adc
in
mov
imul
push
jns
icebp
repnz
fucomp
jmp
pop
sti
mov
sbb
mov
fbstp
jmp
add
lds
sub
pusha
nop
adc
leave
jnp
ret
mov
ret
jnp
aas
mov
xchg
shl
dec
dec
and
call
pop
test
insl
inc
jnp
pushf
mov
aaa
mov
jnp
jg
mov
aam
stc
cmp
in
jnp
dec
xchg
in
jl
lret
sbb
aas
sbb
lods
cmc
mov
jnp
inc
mov
cmpsb
jnp
push
ficomps
dec
lods
jp
clc
xor
jnp
adc
mov
stos
mov
lods
pusha
hlt
movsb
mov
movb
mov
mov
pop
repnz
xor
inc
ja
pusha
sahf
js
cmp
sarl
shl
cld
outsb
push
ret
in
cli
jge
add
pop
xor
and
add
test
push
loope
inc
push
sub
fidivrs
jae
lret
cmp
add
mov
sahf
add
shlb
adc
call
mov
pop
dec
sbb
pop
jbe
inc
movsl
in
bound
imul
mov
repnz
inc
lret
nop
fs
xor
popf
ds
mov
pop
jnp
lret
dec
push
jbe
sbb
cmpl
mov
fidivrs
mov
lea
xor
lret
xchg
jbe
xor
std
int3
sub
and
push
push
call
jge
rcll
mov
and
or
ja
xor
stc
push
lods
shll
mov
dec
jo
inc
and
mov
push
jl
gs
fldcw
rcrl
adc
add
pushf
movsb
cmpl
jne
mov
adc
stos
movntps
jnp
cmp
mov
jnp
mov
idivb
cmp
sbb
jbe
jnp
fmuls
or
dec
cmp
lret
inc
fildl
jns
jmp
outsb
stos
jnp
xchg
mov
pusha
outsl
jl
lret
dec
sbb
push
test
imul
lock
cmp
jb
insb
pop
mov
mov
movl
jmp
jnp
popf
push
stos
mov
iret
jnp
mov
push
mov
xchg
or
pop
test
js
and
mov
jmp
pop
jnp
rcrl
inc
mov
mov
or
repnz
ja
sub
sbb
push
jnp
testb
jo
cwtl
jnp
pushf
xchg
hlt
das
call
rcll
cmp
mov
in
and
push
pop
adc
fsubrs
test
mov
insl
sti
es
hlt
jae
ljmp
or
mov
dec
mov
sti
push
lods
mov
sbb
mov
lods
jnp
inc
imull
mov
leave
dec
xor
adc
mov
int3
add
repnz
sti
into
mov
cmp
mov
mov
sbb
test
das
stos
jbe
xchg
pushf
pop
jnp
adc
xor
in
mov
dec
jne
lock
adc
pop
or
fidivrl
mov
cli
sub
jnp
mov
dec
fwait
jne
xor
xor
sbb
movsb
mov
aaa
mov
inc
add
scas
dec
cmp
int
push
add
pop
pop
into
push
mov
je
xchg
sahf
lods
sbb
test
fnstsw
ss
mov
jb
sub
mov
or
adc
and
and
xor
pushf
stos
ret
jo
adc
imul
jns
sub
mov
dec
cmp
sub
pop
push
push
jo
mov
mov
jnp
and
repz
das
or
xchg
push
jne
gs
cmp
aam
inc
pop
adc
stos
mov
cli
push
into
rcrb
cmp
gs
movsb
cmpsb
cmp
sti
cmp
jns
jnp
mov
pop
stos
test
cmpb
orl
xor
mov
sub
lock
ja
mov
sbb
cmp
outsl
mov
pushf
jnp
loopne
mov
cmp
jecxz
sbb
jo
mov
or
adc
and
pusha
jnp
jmp
sbb
outsl
mov
push
jnp
scas
push
pop
notl
push
outsl
aam
mov
jle
dec
ret
jnp
dec
rcr
pop
mov
fwait
sbb
jnp
int3
leave
pop
aaa
ljmp
movl
sbb
xor
dec
loop
xor
or
ficompl
fdivrl
add
mov
iret
rolb
jnp
sub
mov
fwait
mov
dec
mov
outsl
inc
sub
clc
inc
aaa
insb
sbb
cs
or
pushf
ficoms
insb
aas
test
and
jne
cmpsb
jbe
cmp
push
sbb
mov
cwtl
inc
std
fisubrs
dec
mov
inc
add
les
inc
jnp
hlt
xor
mov
ret
ja
fucompp
jnp
lods
dec
cmp
lods
test
addr16
lea
jne
inc
stc
mov
in
fwait
rcl
pop
dec
jnp
fistl
xchg
sahf
jp
imulb
scas
mov
push
dec
jnp
mov
pop
leave
jnp
mov
dec
push
into
outsb
popa
jnp
int3
in
and
xchg
dec
imul
cwtl
sbb
repnz
ljmp
mov
add
in
imul
xorb
sbb
shll
scas
pushf
jnp
sbb
test
repnz
fimull
and
stos
dec
cwtl
pop
pop
rolb
inc
pushf
jae
push
loopne
out
insl
and
test
mov
cwtl
add
or
mov
inc
jmp
pop
jg
sarb
fwait
repz
addr16
or
cmpsb
cli
lcall
cmp
fistl
lock
sahf
sti
dec
mov
fldl
insl
xchg
cmp
jecxz
cwtl
mov
mov
outsb
mov
add
cli
dec
jnp
and
pop
pop
lock
jnp
aam
jmp
jnp
sbb
es
xlat
stos
inc
imul
lret
sti
jne
mov
addr16
xor
sbb
test
and
aam
test
imul
pop
mov
jns
push
jae
dec
movsl
xchg
das
js
jnp
fs
mov
jmp
jg
mov
mov
cmp
mov
pop
jno
push
imul
add
shrl
mov
push
test
scas
mov
xor
sbbl
add
jnp
pop
inc
cwtl
arpl
jp
pushf
push
sub
lods
jge
push
jne
and
je
cmp
lods
sub
jo
arpl
xor
jnp
add
nop
ret
sbb
clc
imul
push
fbld
rolb
fisubl
dec
js
fwait
stos
popf
stos
mov
negb
leave
jb
jnp
inc
jno
arpl
pop
dec
cmp
inc
jns
imul
jge
aaa
das
xchg
add
push
lods
cmp
mov
jnp
syscall
shl
push
jne
imul
or
lods
ja
jnp
fs
jns
jbe
and
imul
mov
mov
loop
rorl
xor
outsl
in
xor
mov
mov
jg
int3
and
aaa
call
iret
repnz
mov
lods
jno
pop
xchg
add
cmp
jnp
loope
mov
pop
ficomps
aas
fbld
fldcw
jnp
dec
fs
or
sub
int
push
jnp
sbb
or
jnp
loope
xlat
flds
sbb
stos
adc
xor
mov
aas
xlat
jnp
das
push
and
push
enter
jp
test
cmp
xchg
testl
jp
mov
cmp
popa
ljmp
xor
scas
mov
or
mov
loopne
outsl
imul
dec
or
mov
out
sbb
jnp
push
ja
fistpl
sub
call
lret
aaa
insb
sarl
pop
out
cmp
pop
sbb
sbb
fdivr
xor
mov
jnp
jne
cmpsl
mov
arpl
insb
push
jnp
xor
shrb
outsb
or
dec
xor
jnp
push
mov
or
mov
imul
jnp
movsl
jle
add
lret
jp
adc
inc
jbe
icebp
jbe
test
shl
lret
daa
in
mov
iret
ds
add
push
cltd
cli
pusha
dec
jnp
pop
out
mov
jecxz
enter
rcrb
xchg
ds
mov
outsl
xor
ret
push
jnp
inc
xchg
xchg
fists
push
movsl
jmp
insb
mov
or
or
mov
rcr
out
insl
rcl
mov
sbb
testl
sarb
jp
push
into
data16
mov
cmp
stos
fwait
or
aaa
ds
jnp
xchg
dec
cmp
jbe
cmp
out
lods
and
adc
xor
outsl
sub
cmp
jns
lret
into
sub
mov
test
test
lock
fsubrs
jnp
mov
mov
fucomi
ljmp
jg
inc
negb
or
lods
or
ret
sahf
xor
data16
or
xor
mov
mov
jns
fidivl
pushf
or
jnp
rcll
fwait
add
sub
fidivrl
cmp
hlt
fcmovnbe
fdivr
lock
jae
jl
mov
rclb
clc
and
divl
jnp
adc
icebp
fildl
leave
imul
out
popa
cmp
dec
sub
popf
test
push
jo
lock
cmp
add
mov
popf
jnp
call
jae
jnp
fmul
cmp
bound
xchg
jecxz
sbb
sub
sti
sbb
or
xor
pushf
sahf
mov
arpl
lea
add
jnp
pusha
push
cli
dec
mov
test
push
inc
mov
jb
mov
subl
ror
fidivrl
pushf
ret
inc
mov
pushl
jnp
call
in
fnstsw
xchg
xchg
adc
fsubr
sub
es
ja
mov
dec
adc
mov
xor
mov
push
inc
xchg
jnp
push
and
lds
outsb
pop
xor
mov
inc
fdivrs
call
inc
sbb
dec
insb
adc
loop
jb
cmp
rcll
jne
cwtl
jnp
nop
xlat
call
jnp
mov
cmp
cli
xor
pop
pop
jmp
sbb
adc
lock
xor
sti
xchg
fmuls
or
rcrl
je
sbb
mov
test
push
xor
js
sbb
ds
inc
xor
pop
loope
mov
mov
push
sub
call
sub
inc
in
je
xor
xor
ret
mov
jns
fcmove
pop
jmp
insl
xchg
cmp
sub
dec
rorl
add
cmp
ja
scas
clc
xor
imul
out
push
aad
imul
insl
mov
cmpsl
jae
pop
sub
inc
or
cmp
and
movsl
mov
sti
lret
mov
lods
mov
xchg
outsl
pop
or
cmpsb
jnp
scas
mov
push
jnp
negb
test
mov
repnz
in
insb
lret
insl
sub
xchg
jnp
es
js
cmp
lods
pop
adc
pop
movsb
std
das
jnp,pn
xchg
pop
lahf
mov
movl
mov
sub
jmp
test
in
loop
jp
loopne
sbb
leave
push
outsl
jnp
xor
aaa
lods
lods
pop
push
jnp
ret
xor
mov
jnp
ds
movsb
add
add
jnp
hlt
lods
loop
mov
cmpl
test
sti
testb
dec
nop
loopne
push
inc
cmp
mov
sub
scas
jo
mov
xlat
js
lret
insl
pop
jnp
add
mov
imul
icebp
mov
jmp
sub
jbe
aad
cmp
jnp
cmp
xor
fwait
aaa
inc
add
fldcw
sarb
dec
into
sub
jnp
jp
adc
lret
jne
cli
dec
aam
xchg
int
imul
neg
pop
cs
push
imul
inc
test
xchg
stos
outsb
mov
cld
std
lock
pop
fwait
xchg
xor
cmp
jnp
jne
push
cmp
jmp
xchg
cmc
clc
loop
test
mov
sti
mov
jnp
movsb
insb
lret
mov
clc
jnp
xor
mov
and
cmp
sub
pop
scas
push
or
cmp
xor
sbb
lea
pop
push
loopne
mov
pop
jnp
flds
test
inc
cmp
xor
sub
jae
inc
mov
mov
mov
jnp
insb
sub
arpl
lds
enter
icebp
cmp
and
js
mov
mov
outsl
mov
repz
iret
jnp
ss
rorl
stos
cmp
imulb
rclb
cwtl
test
mov
sti
push
and
jmp
jnp
out
fwait
sbb
mov
push
jp
cld
jae
insl
pop
jae
rolb
mov
addr16
cltd
es
dec
jnp
lret
sbb
mull
aam
fsubl
insl
jmp
mov
xchg
stos
idivb
adc
lret
sub
add
mov
sub
or
jp
pop
subb
push
inc
repz
mov
cmp
lods
or
mov
jns
dec
pop
insl
arpl
out
cmp
jnp
inc
sub
fidivs
dec
movsl
es
or
ja
mov
test
jnp
imul
test
xor
lcall
inc
mov
jge
jae
sbb
daa
lods
call
jecxz
movsl
and
mov
jg
stos
fisubrl
pushf
les
jnp
mov
pop
mov
je
out
call
fnstcw
jmp
aad
jns
aaa
jae
add
int
jnp
loop
pop
ljmp
xchg
mov
or
ljmp
xchg
outsl
int3
jle
xchg
dec
push
push
sbb
fmuls
fidivrl
scas
lods
aas
jg
sar
jno
mov
inc
push
pusha
fisubrl
js
add
cmp
xchg
add
aad
int
insb
stos
jnp
stos
cmpsl
out
lods
mov
cmpsb
jbe
pop
mov
jge
fcmovu
popa
out
and
mov
imulb
pop
repnz
fnstcw
mov
push
mov
cmc
sbb
test
xor
jns
and
dec
or
lods
aam
bnd
or
mov
shrl
jecxz
insl
pop
mov
jae
test
xchg
adc
imul
sbb
mov
sbb
cmp
loope
jnp
add
xchg
cmp
in
xor
lahf
sbb
not
mov
addr16
jp
push
lods
aad
test
pushf
push
or
dec
mov
ja
jns
cmp
mov
mov
add
or
xor
mov
mov
or
insb
jnp
mov
pop
mov
imul
jnp
dec
push
es
push
cmpb
xlat
jo
ret
shl
in
mov
and
lods
jne
mov
cli
cwtl
into
jnp
out
adc
pop
ds
je
jnp
inc
jae
mov
aas
xchg
jnp
mov
jb
int3
stos
or
mov
in
shlb
cmp
jae
test
push
fwait
xor
ffree
divl
add
fcom
cmp
cmpsl
arpl
push
insb
pop
cs
jne
sub
int
loopne
out
jnp
cmpsb
daa
dec
xchg
out
lret
leave
jecxz
push
xor
and
jnp
cli
frstor
in
stos
insb
mov
pand
popa
imul
cmp
sbb
or
gs
jae
imul
xchg
jnp
jae
xor
and
push
jp
push
jnp
lret
sub
jnp
jbe
or
sarb
out
sub
das
push
ja
repnz
into
cwtl
andnps
lods
cmc
or
jnp
negl
inc
insb
dec
rcr
jae
dec
insb
mov
lcall
push
into
aad
xchg
fnsave
sbb
fwait
clc
cmp
and
fisubl
andl
inc
mov
jnp
test
in
frstor
repz
leave
or
ljmp
test
jns
inc
sbb
xchg
sbb
jp
inc
adc
insl
addr16
or
addb
mov
lcall
cmp
das
jnp
fcompl
lcall
inc
fwait
or
mov
gs
hlt
cmpsb
sub
ret
rclb
js
jae
inc
je
lock
iret
adc
addb
mov
xchg
mov
mov
stos
mov
push
testb
testl
js
mov
jnp
push
iret
mov
inc
pushf
dec
mov
rcl
and
sbb
jg
bound
es
das
lds
popf
fs
jnp
aad
sub
movsb
pop
adc
idivl
test
sbb
jne
mov
dec
lret
sbb
mov
fprem1
mov
cli
cmp
lret
pop
icebp
hlt
pushf
mov
js
dec
mov
dec
stos
mov
stos
dec
insl
mov
and
and
jnp
mov
outsl
mov
out
dec
in
jnp
jae
outsb
sbb
jnp
lods
cwtl
out
lock
imul
inc
mov
xchg
sub
add
dec
xchg
lods
in
idivb
popa
pop
ss
jnp
mov
pusha
stos
jnp
fldcw
push
imul
out
adc
lods
jnp
and
or
mov
push
int3
dec
jp
loope
bound
subb
sub
in
sbb
rcrb
or
addl
loop
or
mov
lods
xchg
mov
cmp
jnp
inc
and
dec
sti
sub
lret
setl
mov
addr16
cmp
jb
jecxz
arpl
out
mov
pop
add
lds
xor
mov
fistl
adcl
or
icebp
rcl
add
jo
pop
call
lods
dec
jnp
sahf
xlat
and
and
pop
ret
idiv
adc
cltd
shll
push
mov
push
push
pushf
out
mov
or
sbbl
mov
adc
sub
jns
inc
sub
out
cmp
mov
xor
xchg
sbb
out
cmp
jno
dec
call
mov
addl
repz
jnp
ror
cmc
sub
dec
lret
addr16
mov
pusha
sarl
idivl
jl
sub
mov
dec
jp
mov
lahf
push
xor
insl
and
jns
add
outsl
cmp
jecxz
push
or
pop
add
cwtl
xchg
ja
ljmp
lods
jnp
push
and
andl
sbbb
push
lret
roll
xchg
pop
mov
push
lcall
mov
push
push
pop
cmpsb
mov
jp
out
mov
sbb
jp
scas
dec
xor
sbb
sahf
repz
pop
push
push
jne
fcoms
sbb
mov
pop
sbb
xchg
mov
cltd
scas
cltd
or
push
lods
push
and
jnp
cmp
mov
clc
mov
fcmovnu
fcomps
adc
pop
pop
dec
sbb
add
push
lock
mov
imul
aaa
jns
push
jnp
shrb
sbb
fistpll
jnp
int3
into
dec
rolb
xor
lods
or
lock
inc
jnp
mov
add
mov
adc
insb
out
mov
jnp
pop
add
jnp
add
cmp
mov
cmpsb
jnp
cmc
push
sub
mov
inc
mov
mov
test
in
mov
sbb
pop
jecxz
dec
or
mov
push
or
push
cli
and
jnp
aaa
es
jo
xlat
jnp
shlb
xchg
sub
xor
out
jae
dec
sbb
xor
sbb
cs
jae
jne
rdtsc
or
stos
lret
xchg
cli
shrb
jbe
jno
xor
push
fistl
outsl
pop
mov
imul
jp
gs
add
ja
or
cmpsl
repz
or
cmp
add
jb
add
mov
cmp
jnp
movsl
jo
dec
jae
or
lcall
in
stc
lcall
outsb
cwtl
ds
mov
jnp
push
lds
subl
popa
xor
cmc
sarl
cmp
lods
adc
ljmp
dec
fsubs
movsb
jnp
add
aam
aaa
mov
adc
jnp
mov
push
cmc
jnp
lret
orl
movsb
hlt
into
jnp
shrl
jbe
mov
xorb
repnz
daa
xor
call
ret
jg
mov
xchg
int3
mov
in
pop
js
push
jnp
xor
cmpl
gs
mov
add
sbb
sti
es
xor
mov
jecxz
fwait
bound
ja
outsb
pushf
lret
jnp
iret
scas
aam
pop
fnstsw
popa
aaa
popf
arpl
push
in
rorb
inc
pop
int
mov
cmp
pushf
mov
xchg
test
sbb
cli
insl
jl
imul
cwtl
call
or
mov
and
in
mov
cmp
inc
ljmp
jnp
xchg
cmp
mov
shlb
movsb
mov
inc
jnp
jge
hlt
pop
cmp
imul
test
popa
dec
add
jns
jg
jae
dec
ljmp
jecxz
jno
xchg
dec
mov
arpl
jae
mov
sbb
push
inc
cmp
data16
push
cmp
sti
lret
insl
ds
lahf
lods
and
flds
mov
dec
addb
dec
dec
jnp
pushf
inc
outsl
xor
xchg
jnp
and
ret
cltd
out
and
movsl
stos
sti
dec
idivb
loope
nop
push
cmpsb
mov
sbb
or
pop
ss
dec
xor
iret
bound
jnp
and
mov
cmp
lret
pushf
sub
jge
add
push
add
imul
mov
insb
pop
imul
out
mov
call
mov
lret
mov
or
aam
lods
jnp
sbb
ret
fnstcw
mov
and
jns,pn
push
in
stc
inc
test
jmp
pop
jecxz
xor
jae
xor
pop
outsb
push
insl
mov
cs
mov
shlb
shll
jae
sahf
pop
inc
popf
das
jnp
mov
mov
mov
mov
loop
rclb
gs
cmp
aam
jnp
sbb
jae
mov
sub
mov
or
cmc
sbb
adc
ret
scas
adc
aam
jne
mov
pushf
xchg
pop
js
test
imull
sbb
push
dec
jne
pop
jnp
test
jp
pop
sub
orl
mov
inc
add
jae
movsb
iret
jnp
xchg
sbb
lret
jnp
test
imul
jns
stos
lods
or
sbb
bound
cmp
mov
call
pop
mov
dec
push
pusha
lret
loop
imul
insl
in
cmpl
das
clc
mov
dec
xor
xor
cli
in
mov
cwtl
push
scas
fwait
sbb
gs
pop
outsl
mov
ret
lods
mov
jp
pop
mov
push
shrb
pushf
jnp
pop
xor
mov
popa
sbb
cs
mov
clc
imul
sahf
push
jns
xchg
mov
xchg
es
mov
fdivp
cli
or
mov
jo
call
cs
in
xor
movsb
sbb
xchg
mov
outsl
push
int
cli
pop
jnp
mov
and
or
fmull
jo
dec
movsb
sbb
cmpsl
cwtl
stos
inc
jae
mov
pushf
jnp
les
ss
subl
pop
or
fidivrs
xor
dec
mov
mov
or
js
inc
mov
mov
jnp
adc
jbe
pop
orl
mov
pop
jnp
pop
add
and
cld
mov
or
lods
or
add
sbb
sarb
iret
push
filds
jae
mov
cld
dec
sub
sbb
sbbb
jo
jnp
iret
push
dec
push
clc
push
loopne
scas
mov
ljmp
into
jns
iret
ss
push
sbb
mov
adc
lcall
nop
rcrl
sbb
xor
add
sub
nop
out
imul
sub
out
das
push
dec
shlb
inc
xor
jbe
loop
jnp
lods
mov
aas
negb
jnp
adc
pop
into
push
orb
jae
pushf
mov
jnp
ss
xor
sbb
dec
mov
mov
adc
jnp
and
stc
mov
iret
jnp
xchg
lods
insl
or
sahf
xchg
fidivs
pop
adc
cmp
jnp
cmp
shl
sub
or
pop
test
push
xchg
lcall
lret
cmp
out
add
pop
xlat
fisttps
jnp
push
faddl
xor
arpl
xchg
call
mov
imul
popa
jnp
mov
mov
imul
mov
das
sarl
rclb
lea
jl
dec
sbb
shll
jns
jnp
iret
int3
cmpsl
mov
mov
call
sbb
jmp
repz
cs
pusha
and
mov
mov
ja
cmp
jnp
addr16
iret
std
shl
cmpsb
imul
loopne
cmp
gs
sub
scas
jnp
fwait
sbb
ret
jnp
inc
mov
xor
xchg
jnp
or
adc
jnp
lahf
mov
push
jnp
jne
mov
pop
ds
dec
cmp
out
lds
stos
push
idivb
inc
and
sbb
sbb
popa
or
mov
bound
push
in
fwait
rcr
call
mov
out
out
pop
jnp
pusha
es
loop
insl
lea
fistpl
lods
in
pushf
pop
cmpsb
cmpb
es
jbe
push
jno
insl
sub
ret
fsts
and
faddl
jne
pop
imull
inc
pop
cli
lods
xchg
dec
outsb
popl
inc
fists
imul
jbe
jo
out
mov
mov
sbb
mov
mov
js
icebp
jne
iret
mov
cmp
hlt
pop
jnp
sbb
mov
inc
lods
into
pop
add
lock
insb
push
adc
sbb
pop
lods
jbe
inc
jnp
pushf
pop
mov
sub
jnp
mov
aad
mov
push
push
xchg
lods
xchg
and
jnp
dec
fs
out
mov
icebp
insl
repnz
call
lock
test
shl
jnp
push
mov
pusha
jp
inc
pushf
mov
jnp
xchg
or
sbb
mov
jns
push
mov
add
cs
cmp
shl
dec
jnp
ret
sub
or
ds
insb
stos
jnp
or
jnp
fidivrl
sub
sub
jnp
xchg
add
ljmp
ficompl
mov
out
into
je
push
push
jecxz
jnp
lods
pushf
fiaddl
mov
xchg
sbb
imul
jns
mov
fsubr
add
pop
xor
movsl
iret
jbe
movsb
mov
adc
sub
add
mov
jnp
in
mov
and
cmp
iret
pop
inc
insb
shlb
call
aam
jl
lea
pop
xor
jp
rol
hlt
daa
or
push
and
mov
imul
inc
jnp
shll
inc
mov
lds
push
xor
iret
aaa
push
nop
mov
daa
push
jns
adc
cmc
jnp
sahf
dec
xchg
ja
call
jge
inc
addr16
mov
mov
push
xor
addr16
sub
sub
inc
jnp
cmp
jo
xor
pop
scas
dec
imul
mov
jnp
jecxz
adc
xchg
outsl
icebp
jnp
popa
shrb
repnz
into
inc
sti
mov
xchg
mov
js
push
jnp
inc
cmpsb
divb
nop
ret
cmp
test
dec
sub
jae
sbb
pusha
pop
push
push
mov
mov
nop
cmpsl
mov
xchg
outsl
xchg
cmc
jmp
cmpsb
cmp
jnp
ja
mov
cmp
fldt
push
sub
addr16
lods
mov
jge
jnp
and
lret
mov
jnp
in
test
jecxz
inc
xlat
mov
push
dec
or
push
aad
add
ret
stos
xor
inc
cmp
outsb
or
sbb
mov
test
push
cmpsl
aas
clc
dec
jae
xlat
and
lret
dec
jnp
sub
adc
jnp
mov
push
mov
lret
xor
xlat
cmp
jns
mov
sti
ja
inc
rorl
inc
stc
bound
xor
adc
aaa
or
jnp
pop
aad
jae
push
in
stos
or
push
fisttpl
sub
lock
cmp
add
jnp
mov
cmp
ret
jnp
lods
es
nop
clc
lea
addr16
mov
dec
std
and
xor
divl
ret
jnp
cltd
mov
mov
jg
mov
jae
pop
gs
xor
mov
pop
dec
inc
in
out
int3
fwait
outsl
mov
in
inc
mov
sub
ja
mov
jle
mov
jnp
and
push
inc
fcmovne
scas
mov
pop
aaa
push
xor
jnp
push
or
lods
jle
sub
aam
test
sub
aaa
ljmp
or
testl
cmpsl
cmp
pop
mov
push
sahf
rclb
daa
in
mov
add
inc
pop
push
push
dec
test
xor
or
xor
mov
ljmp
lret
mov
insb
xchg
into
in
pushf
and
bt
scas
mov
imul
xor
pushf
jnp
add
sub
shll
inc
cmp
out
jae
stos
pop
mov
test
sarl
mov
jnp
lods
add
xor
cmpsl
stc
imul
cmp
pop
scas
or
ret
jnp
pop
jle
dec
je
cmp
mov
shlb
daa
sbb
jnp
mov
rcrb
loopne,pn
imul
cmc
mov
xchg
mov
mov
or
jae
pop
lcall
ss
aaa
movl
cmp
cmpsb
or
loop
imul
inc
add
scas
ds
jnp
pop
cmp
sbb
xchg
cmp
insl
test
ljmp
lret
jnp
xor
and
cmpsl
test
or
test
push
bound
in
push
jnp
adc
das
push
into
mov
mov
lcall
xchg
out
loope
gs
idivl
mov
jnp
xchg
mov
repnz
ja
cmp
loop
dec
jnp
ljmp
jnp
cmp
sbb
inc
sarb
pop
pop
mov
jnp
ret
daa
lret
in
loope
jnp
rolb
sbb
cmpsb
sbb
mov
lahf
mov
inc
jnp
jae
mov
fcomps
xchg
pop
ss
ja
mov
jnp
mov
aaa
jg
dec
test
jnp
pusha
sbb
aaa
stos
push
pop
sahf
mov
lret
jnp
pop
mov
stos
movsl
mov
neg
xchg
cmp
xchg
fwait
push
jnp
jp
or
pop
jae
imul
push
xchg
sub
pushf
adc
jno
nop
iret
sbb
mov
lret
or
addr16
xor
dec
add
int
pop
push
push
mov
out
mov
shlb
fldt
mov
sbb
inc
push
jnp
sub
shll
outsb
imul
test
jnp
mov
lods
outsb
lahf
js
jnp
push
pop
popa
sarl
jnp
out
dec
xchg
jb
jnp
lods
xor
mov
dec
dec
xor
xor
imul
dec
movsl
popf
mov
stc
and
adc
dec
jnp
ficoms
dec
sbb
and
add
jnp
into
push
pop
out
addr16
and
call
insl
mov
push
jae
cmp
dec
mov
aaa
cmp
sub
jnp
and
mov
add
dec
insb
xlat
xor
call
outsl
pop
fwait
adc
dec
mov
jb
ja
dec
cs
lret
jnp
mov
and
pop
arpl
add
cwtl
sub
es
jnp
cld
pop
lcall
cmp
aam
je
push
inc
xor
mov
mov
dec
pop
pushf
sbb
or
jnp
inc
imul
cmp
dec
out
mov
mov
add
int3
jae
je
arpl
stc
inc
jnp
jl
jb
ljmp
sub
addr16
jnp
ret
cmpsb
mov
sbb
fmull
outsl
cmp
sub
rcrl
pop
mov
sub
int
aas
cmpsl
xchg
shlb
sbb
push
mov
fisubrs
idivb
xor
or
rorb
cmpsl
pop
jne
lods
into
fcmovnu
jnp
jl
movsb
rcll
in
lods
imul
insl
out
inc
lcall
push
cld
int3
dec
and
enter
insl
aam
cmp
pop
mov
xchg
into
or
jge
jnp
cmp
aaa
lods
mov
sbb
mov
insl
xchg
aas
xor
inc
stos
call
ss
or
jbe
add
sahf
and
adc
ss
push
xlat
fidivl
outsl
pop
pop
loopne
add
inc
mov
push
ss
hlt
inc
cmp
fildll
pop
divl
pop
push
cmp
sbb
inc
xchg
int
jns
rorl
adc
dec
sub
hlt
pop
popf
stc
std
push
inc
xchg
loope
repnz
add
sbb
jnp
inc
test
gs
mov
dec
loop
mov
call
jecxz
sub
negb
nop
js
push
ljmp
sbb
cli
je
jnp
pop
sbb
in
mov
lds
lods
xor
sysenter
jae
pop
roll
or
xor
bound
ss
jnp
or
int
sahf
push
lret
popf
in
mov
add
cmc
xor
pushf
jno
xchg
cmp
or
push
mov
cwtl
jnp
xchg
mov
lods
in
jnp
fdivl
lods
jnp
hlt
repnz
mov
jle
enter
push
mov
jnp
ljmp
repnz
in
adc
movsl
push
xor
dec
lods
jae
iret
je
idivl
jnp
jecxz
mov
inc
lods
xchg
jnp
mov
fwait
ss
icebp
in
jnp
jne
xchg
sub
mov
insb
adc
aad
cmp
ja
shrl
inc
sbb
xchg
movsb
pop
daa
jnp
cmpsl
bound
jnp
divl
mov
shl
jae
jb
or
mov
outsb
and
push
adcl
push
fsubr
loop
testb
pushf
repz
ljmp
add
add
outsl
push
adc
inc
jnp
mov
ret
push
jnp
push
pushl
inc
lahf
xchg
sbb
dec
bound
add
mov
sub
fdivrs
stos
or
and
add
add
dec
ja
aad
mov
test
out
jg
stos
jnp
arpl
jb
dec
push
jnp
ficoml
popf
sub
sbb
or
sbbb
rolb
jnp
mov
mov
ss
inc
test
out
sub
and
jnp,pt
xlat
stc
mov
popa
out
shrb
or
mov
mov
into
in
jmp
lods
andb
daa
xchg
in
pop
das
test
cli
rcr
cmp
mov
movsl
dec
pop
pop
pushf
in
mov
enter
outsb
or
cmp
jnp
int
mov
dec
inc
out
jnp
clc
arpl
or
xor
xor
mov
inc
cmp
jnp
rcll
add
fcmovu
mov
ljmp
shrb
imul
ficompl
dec
or
xchg
push
loope
ljmp
pop
mov
dec
loop
ds
xlat
iret
and
jae
adc
inc
xor
dec
jae
jnp
inc
push
fsubs
push
scas
jnp
or
clc
cmc
or
add
iret
add
scas
ffreep
fwait
and
dec
push
jg
enter
imul
clc
das
jne
mov
imul
sbb
dec
repz
xchg
jnp
pop
shr
lret
mov
jnp
in
loope
and
test
mov
inc
mov
mov
insb
xorb
fisttpl
lock
inc
inc
rolb
sbb
clc
mov
pop
jnp
cmp
jo
ds
xlat
pusha
push
hlt
and
pop
jp
jnp
lcall
int3
cmp
sarl
mov
dec
xlat
fisubrs
fwait
or
jnp
stc
sub
xchg
idivb
movsb
mov
mov
fnstenv
jecxz
xlat
shlb
pop
ja
inc
and
gs
int
jnp
push
jo
push
mov
xor
mov
xlat
outsl
test
shrb
cmp
arpl
pcmpeqd
insl
or
or
test
loop
into
jno
push
mov
lods
and
cmpsb
lret
call
mov
in
or
ret
jae
movsb
divl
pop
inc
xor
jnp
roll
loop
cmpsb
mov
jnp
cmp
sbb
mov
push
pop
pop
jge
jbe
push
sbbb
popa
mov
add
in
xorl
popf
xchg
cmp
adc
ja
push
sbb
lret
hlt
sbb
xchg
dec
enter
mov
sbb
jnp
pop
pop
stos
add
xor
xor
imul
mov
push
jnp
dec
mov
stc
jnp
in
lock
repz
lods
jnp
mov
fsubrs
arpl
stos
push
xor
pop
data16
pop
pop
sub
fnstenv
xlat
jnp
movsb
sbb
imul
lret
jae
jae
cmp
data16
mov
sbb
daa
pusha
jmp
neg
jnp
pop
add
jg
mov
sub
sub
jnp
stos
nop
dec
xor
or
jnp
or
mov
imul
add
ja
cld
stos
sahf
mov
jg
aas
out
in
add
jge
sbbl
mov
jnp
bound
adc
mov
in
push
sbb
jp
dec
fnstenv
jno
out
dec
jno
add
stos
mov
xor
or
jns
pushf
xor
mov
xchg
iret
cli
in
insl
lock
cwtl
fldt
jnp
stc
and
mov
mov
jno
insl
popf
ret
sbb
cmc
lods
inc
sbb
jnp
pop
mov
lcall
jge
cmp
or
adc
mov
jmp
fadd
cmpsl
jnp
dec
and
ss
or
jp
xchg
imul
sahf
cmp
cwtl
mov
mov
call
repz
pop
lret
imul
inc
pusha
push
lea
xor
cwtl
jnp
out
popa
xor
fs
or
jge
jg
mov
lods
stos
pop
lods
sbb
adc
mov
or
loop
data16
inc
jno
iret
lahf
xlat
outsl
out
mov
stos
and
aaa
add
mov
sub
sub
lods
xor
jnp
lods
mov
push
test
mov
add
insl
pop
scas
jnp
mov
in
xchg
mov
test
jae
enter
jnp
cli
inc
daa
xor
push
adc
xor
sub
outsl
inc
in
jg
and
sbb
adc
loop
jmp
stc
shr
mov
popa
inc
fwait
xchg
mov
sahf
int3
enter
pushf
sub
loope
jne
pop
pushl
dec
js
fsubs
xor
stos
stos
divb
cmp
xchg
dec
es
lret
inc
clc
or
add
mov
jg
adc
bound
stos
or
mulb
jnp
sub
sbb
jnp
cmpsb
out
ficomps
int3
mov
imul
and
ret
jnp
pop
ja
lock
imull
clc
outsl
in
or
repz
add
cld
sub
std
mov
lock
fimuls
pop
aad
sbb
sub
insl
shlb
loope
push
jnp
inc
sub
fcoms
repnz
lods
cs
xchg
pop
dec
inc
stos
enter
jnp
xchg
mov
mov
jnp
push
scas
xor
xor
inc
pop
xor
xchg
mov
outsb
jl
stos
stc
push
cmpsb
jne
pop
pop
sub
js
aam
mov
out
jae
lods
jbe
das
push
cs
dec
and
push
xchg
loop
jae
imul
movsb
in
cmpb
xchg
xchg
add
insl
out
scas
cltd
sti
jnp
xchg
adcl
inc
stc
cmpsb
mov
mov
jbe
jnp
mov
pop
jle
cmpsl
push
cmp
arpl
inc
je
imul
dec
iret
sub
dec
xchg
aas
jb
sbbb
dec
mov
bound
repz
es
pop
xchg
outsl
or
and
cmp
cltd
xor
mov
dec
inc
insl
cltd
adc
mov
jb
dec
or
jnp
push
inc
xor
shlb
aad
push
stos
les
jp
mov
cli
mov
jae
add
cld
add
jnp
cs
jg
arpl
xchg
jnp
mov
cmc
jnp
mov
bnd
xchg
inc
inc
insl
mov
cli
imul
sbb
jnp
inc
fwait
mov
jnp
fsubs
pandn
scas
xor
add
fiadds
stos
movsl
mov
xchg
insl
push
cmp
div
imul
jnp
fistps
jnp
adc
cmp
mov
imul
insb
mov
push
rcl
shl
jnp
sub
addr16
mov
push
aam
adc
mov
loopne
inc
lcall
sub
jnp
jbe
movsb
mov
adc
mov
push
cmp
fmul
push
imul
fstpl
add
jnp
adc
iret
push
cmpsl
sbb
xor
and
adc
inc
mov
inc
out
mov
stc
rorb
mov
jp
icebp
and
or
jecxz
or
xchg
add
dec
hlt
sbb
cmpsl
loopne
test
xor
mov
jnp
lods
inc
mov
pop
sub
mov
test
pusha
insl
cs
out
pop
jnp,pt
sarb
cmc
mov
pop
jnp
clc
push
xchg
push
or
xor
cmpsb
adcl
shrl
call
mov
xlat
fiaddl
xchg
or
mov
aad
es
pop
mov
or
lret
mov
sbb
je
dec
sbb
arpl
sahf
aam
mov
or
xchg
or
mov
jnp
popa
jns
leave
clc
cmp
mov
not
push
xchg
in
sub
out
sbb
dec
nop
adc
int
insl
aas
outsl
sbb
dec
jae
or
orb
inc
lods
push
out
add
sarl
faddl
and
imul
cwtl
ljmp
jnp
aaa
rclb
jnp
dec
insl
lahf
push
jecxz
mov
add
ljmp
shlb
idiv
hlt
test
cmp
jnp
inc
cmp
sub
jnp
push
cmpl
inc
sarb
shrd
sub
popa
xchg
sahf
mov
repz
jnp
jae
scas
testb
jnp
sbb
and
pop
clc
xchg
pusha
sbb
and
out
push
imul
xchg
pop
test
lds
add
xor
ret
dec
cmp
mov
jae
and
xchg
nop
or
das
jnp
stc
add
jnp
mov
popa
fucomp
xor
fs
lods
cltd
subl
sbbb
sub
cs
inc
mov
mov
insb
andl
or
dec
pop
xor
ret
mov
xchg
lock
cmc
jnp
divl
fisubrs
fsubrl
jnp
insl
jecxz
in
inc
test
adc
xchg
and
test
push
int3
jnp
sbb
jnp
repnz
rcl
test
cltd
cmp
lods
mov
push
adc
mov
inc
lods
jnp
jb
pop
sbb
jnp
mov
fcmovu
imul
pop
push
ljmp
cmp
cli
mov
or
lea
pop
mov
jnp
inc
mov
fwait
add
scas
mov
jnp
js
incl
gs
mov
pop
and
jnp
mov
dec
mov
mov
xor
push
push
sub
xor
jno
fstpt
aam
push
fs
jnp
mov
xchg
cmp
mov
insl
insl
adc
xchg
lods
jnp
xor
xlat
adc
das
mov
push
dec
in
jg
rcr
jnp
xchg
cwtl
mov
mov
mov
cmpsl
lods
mov
popa
out
scas
dec
js
pushf
test
mov
ds
in
jnp
das
ret
mov
or
sahf
popf
lcall
sub
mov
jnp
sarb
push
int3
in
or
inc
jae
sub
adcb
pop
addr16
aas
push
leave
insl
fmulp
outsl
jnp
add
xchg
xor
aas
pop
push
cmpsl
sbb
push
adc
cmc
pop
jge
cmpsb
add
adc
stos
adc
ss
jnp
aaa
cwtl
test
lret
imul
mov
imul
popa
stos
jae
sbb
fstpt
shr
cli
jno
pushl
into
pushf
adc
push
incb
sbb
mov
xchg
inc
cmp
mov
or
dec
jae
sarl
sti
or
cmpsl
popa
ret
xor
cmp
or
jp
clc
js
stc
xor
in
push
dec
xor
lods
aam
loope
mulb
mov
push
sbb
sahf
fiadds
jnp
test
ljmp
push
mov
jnp
loopne
mov
sbb
mov
cmpsl
lret
mov
pop
pusha
orb
push
jns
or
mov
mov
call
bnd
adc
sahf
lea
dec
jno
hlt
insl
adc
jmp
mov
daa
jae
out
mov
jne
xor
mov
push
mov
push
jnp,pn
jp
mov
jnp
fisubl
jne
push
hlt
test
movsb
jp
lock
mov
push
mov
push
jnp
mov
jo
jnp
cmp
or
cmp
dec
pushf
dec
jbe
fcoml
mov
out
subl
sub
out
jnp
ljmp
dec
ret
cmpsb
rorb
adc
imul
outsl
xchg
jmp
sbb
inc
lods
and
inc
idivb
adc
or
inc
out
je
pushf
xchg
outsl
ds
and
pop
nop
lea
movl
mov
xchg
enter
out
sbb
mov
cmp
mov
pop
xor
int3
mov
ja
mov
daa
sub
orl
jae
dec
addr16
pop
ljmp
stos
daa
sbb
jnp
data16
stc
test
cli
cmp
mov
imul
sub
jnp
lahf
ret
dec
pusha
adc
adc
gs
xchg
push
or
aaa
scas
sbb
jnp
mov
divb
sub
push
in
ret
call
and
js
dec
in
push
or
mov
out
loop
and
inc
out
stos
mov
push
ss
ret
mov
sub
jge
xchg
jnp
xchg
scas
jmp
and
stc
or
inc
jnp
mov
xor
stos
clc
dec
dec
or
outsl
push
add
jnp
cli
adc
mov
scas
jnp
bound
push
stos
sbb
jnp
sbb
ja
cmpsl
mov
sbb
arpl
adc
jb
or
in
inc
xchg
mov
cmp
jnp
icebp
mov
push
call
sub
lcall
xrelease
jnp
scas
pushf
jbe
inc
decl
jnp
ret
aaa
loope
adc
adc
test
pop
mov
push
movsb
fwait
push
repz
mov
test
loope
sbb
push
mov
call
pop
jge
mov
sti
cli
cmp
xchg
jbe
lock
jb
xor
sub
call
orb
loope
arpl
cmpsl
sub
test
cmp
in
mov
sub
lods
jo
cmp
add
fidivrl
icebp
push
xlat
xchg
popf
scas
mov
cmp
in
sahf
jo
out
arpl
shll
lods
jnp
into
mov
dec
sbb
add
inc
enter
jge
les
insl
into
hlt
imul
dec
test
jne
pop
jl
mov
repnz
jne
or
jmp
push
mov
jae
addl
push
fwait
add
jnp
jbe
add
jp
sub
mov
xor
cmpsb
fwait
out
ss
scas
test
outsl
or
std
mov
sbb
or
xor
xor
stos
dec
push
mov
sub
clc
jae
or
jae
sbb
mov
xchg
jnp
pop
lock
jnp
mov
nop
dec
fsubrs
notl
jg
push
loop
jnp
scas
pop
aaa
arpl
xchg
pushf
pop
repnz
jl
andb
mov
xor
sbb
aaa
ja
insl
enter
loop
xlat
add
fnstsw
jnp
cmp
les
xor
lods
js
imul
mov
mov
fildll
jns
sub
in
adc
or
cmpsb
rcrb
dec
stos
sbb
inc
mov
xchg
test
jnp
and
sti
hlt
cmp
aam
push
cmp
leave
jmp
lahf
mov
lds
xlat
cmp
dec
and
inc
lcall
fwait
sbb
sbb
out
xchg
cmp
imul
rol
scas
jnp
xchg
in
stos
dec
adc
rcl
jmp
mov
cmc
enter
fstpl
imul
arpl
out
fldt
add
xlat
out
jecxz
inc
cmp
xchg
jnp
movsb
aas
or
mov
pop
jnp
xor
mov
mov
xchg
sub
stos
scas
pop
mov
inc
das
lods
mov
xchg
inc
or
dec
xor
pop
push
jnp
call
fdivs
push
aad
lret
pop
bound
jnp
jp
pop
push
daa
jecxz
subb
das
popf
in
arpl
scas
mov
aam
jmp
pushf
jmp
adc
aaa
or
js
lock
adc
out
sarl
push
pop
push
fbstp
inc
jnp
xor
lea
stos
and
in
sbb
jnp
adc
pusha
ss
into
push
add
sbb
js
push
mov
stc
jnp
fs
xor
mov
lods
mov
jnp
inc
mov
in
sbb
ret
jp
adc
or
mov
add
ret
cmp
jnp
ja
pop
mov
arpl
jecxz
mov
iret
or
cmp
into
or
orl
daa
lret
jb
andb
jg
push
sub
add
mov
jp
lods
mov
adc
pop
aam
mov
jnp
dec
cld
sbb
bound
jmp
cmp
xor
adc
decb
sbb
call
ja
and
push
sub
mov
cmp
add
out
inc
sub
daa
dec
mov
dec
je
enter
scas
add
xorb
adc
lock
and
pop
daa
bnd
mov
xor
ret
insl
pop
xchg
mov
icebp
sub
pop
jnp
push
mov
sbb
cwtl
incb
rorb
jnp
sbb
cmp
or
sbb
in
sub
jae
mov
loop
push
cmp
xor
dec
in
mov
or
jae
dec
pushf
mov
sbb
loope
js
iret
inc
jnp
sahf
aaa
in
or
roll
lock
mov
lods
or
inc
ss
and
stos
enter
insb
sti
push
cmp
dec
jnp
adcl
jnp
mov
lods
push
adc
je
inc
push
pop
jne
mov
cmpsb
outsl
mov
lret
push
hlt
ljmp
in
adc
ret
mov
push
imul
fmul
inc
jnp
mov
fnstsw
mov
imull
push
pop
jae
mov
jne
or
ja
dec
rolb
jnp
add
pop
jnp
mov
cld
add
add
int
jnp
cmp
movsl
sbb
push
jnp
lods
mov
mov
clc
setnp
xlat
sbb
out
out
cmpsb
lcall
repnz
dec
dec
sahf
jnp
pop
iret
hlt
incl
push
movsb
loop
bnd
jnp
xchg
and
aas
jno
push
cmp
andl
xor
mov
pusha
mov
xchg
insl
lods
jnp
idiv
repnz
inc
cmp
push
nop
push
mov
adc
cli
jo
jnp
loop
push
lock
xchg
jnp
out
xchg
mov
jnp
and
sbb
sbb
mov
pop
stc
pop
inc
scas
scas
imul
sarb
xor
rcl
aam
lods
inc
ja
lret
pop
lcall
scas
mov
sbb
scas
ds
call
ss
mov
repnz
outsb
test
sbb
cmp
mov
insb
imul
mov
jnp
stc
cld
jle
or
pushf
jmp
pusha
bound
lea
and
jnp
cmp
test
lods
mov
mov
mov
sbb
mov
sbb
xor
jnp
pop
adc
mov
and
cmp
hlt
les
lahf
push
sbb
push
jnp
aas
mov
cmpsb
imul
dec
clc
sub
insl
std
inc
jnp
cmp
dec
push
ret
outsl
dec
scas
int3
jnp
test
mov
dec
cmc
in
fs
mov
sub
lods
cmp
lea
aas
test
cmpb
mov
fidivl
rcrb
xchg
jnp
idivb
fists
jbe
push
popa
jnp
dec
push
test
sbb
dec
aaa
jl
push
mov
repnz
mov
std
push
enter
call
mov
mov
or
push
lods
mov
orl
add
cltd
mov
inc
cmp
pop
pushf
nop
xchg
jnp
into
cmp
mov
testb
jbe
stc
jo
mov
ret
xor
inc
jnp
fisubrl
xchg
test
jnp
or
jo
sbb
fdivrs
add
mov
push
lcall
push
add
insl
inc
cli
idivb
inc
adc
add
sub
dec
out
out
pushf
jnp
cmpsb
rorl
dec
fwait
jnp
sub
mov
test
js
xor
jae
jmp
jnp,pn
stc
mov
push
cmp
dec
scas
jecxz
jnp
mov
sbb
sarl
inc
push
in
lds
adc
pop
jnp
dec
add
sbb
fistps
sub
push
rolb
xchg
div
movsb
dec
cmp
jnp
sub
mov
ret
fnsave
and
js
out
jl
and
cmp
jbe
pop
cli
jnp
fwait
mov
mov
es
and
jnp
rcrb
adc
mov
idivb
mov
outsl
mov
mov
xlat
lods
pop
xchg
data16
movsl
in
inc
lock
xor
imul
cmp
rolb
lods
hlt
jnp
jmp
push
ret
push
sbb
xchg
bound
inc
insb
mov
sub
sbb
movsb
adc
scas
add
sahf
adc
sbb
add
xchg
add
ljmp
xchg
lret
lahf
inc
ja
jnp
fsub
dec
inc
jnp
dec
call
inc
je
jnp
add
and
dec
enter
dec
dec
fs
gs
mov
into
lods
in
fidivs
inc
negb
jecxz
jmp
jae
cwtl
gs
lock
cmc
out
stc
xor
dec
or
stos
inc
insb
ljmp
inc
inc
fidivrl
jnp
sub
mov
stc
shrl
sub
fists
jnp
pop
rclb
ds
push
adc
arpl
insl
push
and
popa
pop
rcl
cmp
scas
stos
jnp
lods
int
push
sbb
mov
jnp
add
cmc
mov
scas
adc
imul
arpl
push
pop
xor
aam
movsl
enter
jg
scas
nop
jo
inc
bnd
pushf
das
cmp
sti
pop
jnp
loopne
push
xchg
int
fidivrl
pop
lods
adc
ja
and
mov
daa
push
pop
xchg
pop
add
push
jnp
mov
mov
std
enter
jnp
scas
jge
mov
fwait
es
or
pop
jnp
fstpl
dec
pop
cmpsl
loopne
xchg
into
stc
insl
sub
orl
push
shrb
push
or
rcll
nop
aaa
cmpl
cmp
cmc
xor
pop
lods
sbb
lret
mov
adc
pop
push
or
jbe
sbb
add
xor
push
es
out
dec
shll
hlt
dec
popl
xchg
dec
daa
icebp
inc
push
and
push
lods
jne
rorb
jae,pt
sarl
inc
and
mov
push
scas
into
mov
mov
jnp
outsl
and
jnp
xor
mov
rcl
dec
dec
nop
inc
jae
pop
scas
cmp
int3
in
jg
movsb
lret
xor
jge
ja
jnp
subb
repnz
fwait
xchg
cmp
add
mov
std
in
jnp
idiv
pop
xor
test
mov
pop
ja
idivl
cmp
pop
in
ja
jnp
pushf
addl
cmp
cmp
lods
lods
imul
push
jne
sti
jnp
dec
adc
shll
in
enter
loop
subl
cmpsb
cmp
mov
jnp
addr16
dec
sub
mov
je
jnp
bound
push
adc
insl
pushf
scas
jecxz
loop
sbb
pusha
daa
roll
pop
inc
push
or
outsb
loopne
jno
ret
dec
push
sbb
ja
mov
stos
loope
cmp
jnp
and
or
andl
add
cmp
lods
jnp
movsb
cmp
jnp
mov
mov
imul
out
push
xlat
add
xchg
or
imul
fcmove
jnp
fstpl
jle
xchg
stos
jnp
leave
out
out
dec
sub
test
push
cmp
int3
sub
cwtl
inc
jb
into
outsl
xor
push
fstpt
jnp
and
sub
jnp
xor
jmp
fs
or
adc
cmp
cmpb
xor
dec
lret
jnp
aas
sub
inc
or
jnp
fwait
ds
pushf
repz
or
movsb
into
insl
repnz
std
shr
xchg
mov
jae
adc
loop
rcrb
jnp
jae
popa
shl
jns
jnp
sub
and
cmpsb
in
imul
pop
jnp
push
mov
aaa
scas
mov
into
mull
fsubrs
add
xor
push
stc
loopne
fidivrl
lods
pop
scas
les
mov
pop
sarl
outsl
and
xchg
jns
mov
jnp
mov
aam
in
push
dec
mov
and
dec
jnp
and
xor
xor
in
add
ror
ret
cmpsb
lods
mov
sub
sbb
outsl
notl
call
mov
add
jnp
pop
fwait
stos
jecxz
in
jnp
pop
push
sbb
jnp
adc
push
jle
mov
mov
pushf
cmp
out
iret
jnp
arpl
fwait
in
lret
aaa
lea
add
jl
sbb
sarl
sti
mov
mov
repnz
je
xchg
popa
enter
dec
or
movsb
repnz
mov
outsl
insl
mov
xchg
xor
xor
mov
out
popa
shrb
loop
imul
pushf
mov
jnp
cwtl
mov
fcomps
test
shrb
lahf
arpl
stos
jnp
fldcw
pop
andb
decb
jae
cltd
push
dec
mov
ss
loop
jmp
sarl
mov
movsb
jnp
outsl
out
gs
pop
mov
pushf
mov
sub
int
fstpt
aam
cld
sahf
sbb
jnp
inc
pushf
or
or
mov
inc
loopne
mov
or
jp
shrb
jmp
xlat
pop
ret
dec
aas
add
insl
jno
mov
hlt
and
stos
lret
aad
jnp
mov
inc
ficompl
sub
das
fsubr
leave
mov
fs
jnp
adc
mov
push
std
ja
xchg
jae
mov
ja
jnp
scas
es
adc
mov
push
sub
xchg
nop
jnp
stos
inc
push
push
push
mov
clc
roll
cmpsb
cmp
dec
mov
ljmp
iret
or
pop
mov
sti
lcall
ss
insl
jnp
or
and
xor
push
fsubl
jnp
xchg
daa
lods
leave
cmp
push
call
cmp
int3
sbb
nop
sahf
lds
stos
mov
dec
jae
xchg
les
popf
add
sbb
sbb
hlt
aas
dec
lods
push
sub
dec
push
dec
int3
fisubrl
loop
jnp
pop
gs
je
jnp
or
hlt
les
lea
sarl
clc
cmp
and
mov
or
jnp
out
push
pusha
cmp
sbb
int
and
shr
xchg
es
xor
lock
insb
pushf
test
cmp
cld
cmpb
shll
jae
pushf
mov
xchg
xor
push
shlb
in
mov
jnp
gs
jns
out
mov
or
cmp
or
mov
dec
fidivrl
scas
mov
xor
xchg
daa
jae
jecxz
shl
loop
sub
rolb
jnp
sub
and
lock
add
sbb
cltd
adc
repz
jle
jnp
mov
fldcw
pushf
xor
int
cmpsl
mov
mov
sbb
push
and
inc
xchg
out
mov
push
fndisi(8087
adc
add
fsubl
push
mov
jnp
and
or
sarl
push
mov
jnp
mov
fwait
mov
shlb
xor
inc
add
push
jnp
mov
dec
jnp
pusha
arpl
pop
fdivrl
mov
test
movsb
cmp
outsb
mov
stc
fsubl
aaa
jnp
mov
rclb
lea
lock
ljmp
dec
inc
pop
xchg
int3
push
jno
bound
push
arpl
sarl
data16
inc
mov
mov
shl
mov
sbb
jnp
in
daa
mov
shl
dec
mov
lods
enter
push
shlb
xchg
and
imul
pushf
aaa
cmp
add
test
out
push
xor
or
jno
test
sub
jnp
push
xor
hlt
stc
les
jnp
and
or
pop
sbbb
inc
lret
into
mov
jnp
mov
sahf
sarb
cmc
sbb
mov
ret
jnp
xor
fwait
jnp
xlat
add
jp
pushf
js
pop
sub
mov
sub
sbb
push
aaa
add
jnp
ljmp
mov
jecxz
jb
xchg
xor
add
pop
cli
icebp
imul
rcll
repz
idivb
or
push
out
sub
jne
iret
push
in
popf
lea
mov
andl
inc
xor
xor
cmp
popf
ficoml
dec
sbb
or
cli
pushf
fcomps
jae
xor
sahf
mov
sub
stos
xchg
cwtl
js
shrl
repnz
push
subl
cld
sub
out
inc
imul
cmpb
jp
pop
cmp
jb
sbb
sbb
jo
mov
dec
jp
cmpsb
inc
out
arpl
and
adc
test
ja
jl
dec
dec
jnp
mov
mov
jnp
jno
rorl
sbb
push
jne
std
push
popf
jnp
inc
mov
pop
sub
jnp
arpl
xchg
cs
ja
inc
lret
cmp
cmp
popa
into
test
sbbl
insl
add
sbbb
sub
jbe
sub
clc
mov
inc
pushf
out
xchg
dec
cmc
add
or
in
lea
jnp
lret
fldenv
inc
lcall
dec
xor
mov
in
xor
inc
cmp
jns
xor
jnp
int3
sbb
mov
inc
addl
cmp
jnp
test
cmp
rcll
inc
aaa
movsl
dec
popa
jnp
xor
clc
repnz
mov
dec
xchg
inc
nop
cli
sbb
neg
ja
jg
stos
pop
jnp
jmp
add
addr16
fimuls
sub
mov
add
stos
iret
imul
mov
aaa
xor
xlat
xchg
mov
mov
xor
fldt
add
and
sti
scas
insl
ret
imul
pusha
leave
ss
je
lods
cltd
hlt
add
mov
xchg
inc
and
xchg
loope
fs
pop
fwait
jnp
jb
mov
mov
outsl
in
pushf
inc
push
jns
ret
imul
into
dec
or
fnstenv
stos
stc
dec
xor
pushf
mov
les
jnp
lahf
and
xor
imul
push
mov
and
or
scas
cli
loope
dec
jnp
jl
mov
and
stos
mov
xor
mov
xchg
lods
or
lea
js
movsl
jae
pop
inc
adc
jnp
xchg
cmp
cmp
xchg
sub
add
mov
adc
fstps
sahf
stos
test
xor
std
jnp
int
mov
jmp
test
sbb
jnp
loopew
lods
lds
push
and
lods
pop
sbb
mov
fidivl
or
mov
movsl
inc
sbb
paddb
iret
lcall
imul
xor
jnp
jge
into
movb
cmp
cmpb
mov
add
es
push
jno
dec
imul
das
lods
hlt
sub
pushf
jnp
aad
or
jge
or
dec
ja
push
mov
mov
mov
xor
clc
jnp
out
loop
rcll
mov
ljmp
sub
sub
jmp
jnp
js
stc
xchg
push
dec
add
cmp
out
jnp
push
rcrl
cmp
fcmovnbe
cmp
mov
or
sti
ja
orl
sub
cld
test
jnp
dec
divl
pop
cmpsb
sbb
fcmove
outsl
scas
in
repnz
sbb
jge
pop
mov
mov
and
cmp
xchg
jmp
inc
jnp
adc
sarb
xchg
lea
jg
sub
lods
pop
sbb
stos
push
jnp
inc
mov
dec
bnd
in
and
xchg
lret
mov
fistps
push
sub
xor
sarb
add
xchg
rolb
jl
in
sbb
cmp
jp
xlat
stos
cmpl
lret
sahf
insl
test
mov
cmp
mov
fmulp
mov
adc
lret
out
mov
mov
scas
jnp
mov
insb
xchg
stos
inc
push
jnp
sarb
xchg
and
call
outsl
lods
jmp
mov
dec
mov
jnp
rolb
andl
cmp
and
jmp
sub
or
jnp
leave
xor
push
jno
jnp
in
data16
jecxz
add
cmp
bound
nop
int3
movsl
aam
cmp
mov
repz
out
mov
imul
push
sub
and
lods
in
idivb
popa
cmpb
and
jecxz
into
fistl
stos
xor
jnp
cs
loope
fs
stc
jnp
xchg
or
int3
lret
repnz
in
cmp
mov
jnp
leave
sahf
sarb
push
icebp
add
lcall
push
sub
adc
imul
mov
jnp,pn
out
pushf
ds
arpl
dec
jmp
add
mov
jne
cmp
mov
cmp
cmc
scas
movsb
pop
xlat
add
scas
sbb
jnp
call
inc
sub
cmc
stos
outsl
daa
sub
imul
jne
lods
scas
push
jne
stos
xor
mov
and
sub
fstpt
add
cmc
mov
push
lods
sub
mov
outsl
pop
mov
pop
mov
mov
or
stos
jnp
mov
jnp
lock
jnp
pop
add
xlat
jb
mov
xor
jnp
loop
outsl
test
popf
fnstcw
ss
mov
or
adc
aas
inc
or
cltd
pop
jmp
jnp
mov
xor
jnp
lret
sub
pusha
push
sub
pop
cli
mov
popf
sti
ja
and
xor
outsl
int3
dec
xchg
lcall
ret
lods
pop
jnp
add
push
testb
mov
dec
testl
fistl
ljmp
mov
mov
xor
pop
or
sub
adcl
jae
arpl
dec
gs
pushf
insb
jae
sub
jnp
pop
repnz
cmp
jae
xchg
jnp
fists
mov
fwait
pushf
sbb
sbb
mov
das
add
sub
sub
dec
push
imul
cli
cmpsb
push
std
push
lock
dec
xchg
jae
mov
int
sub
cmc
dec
sub
or
cmp
cmp
dec
xor
call
cmp
bound
or
or
loopne
insl
scas
inc
incb
jp
arpl
sub
jnp
fidivrl
adc
push
sbb
mov
inc
test
imulb
js
jnp
cmp
jnp
cmp
mov
sub
cmpl
push
pop
les
mov
outsb
cmp
je
or
jne
xor
aam
sub
ficompl
jmp
jb
idivb
xchg
jmp
out
push
popl
inc
jnp
jl
mov
jnp
jb
inc
cld
shll
add
jae
or
incl
cli
sahf
xor
scas
cmc
mov
jecxz
imul
call
sahf
jnp
repz
shl
mov
fimull
dec
pop
outsl
sub
mov
or
xor
mul
jnp,pn
lds
dec
out
and
bound
and
gs
es
sbb
mov
xchg
lock
ja
clc
out
xchg
add
inc
jno
ficoms
sarb
lock
push
out
inc
sbb
mov
mov
jae
jp
shrb
lock
jae
ret
dec
fbld
call
cmp
push
in
scas
imul
push
call
inc
jnp
jecxz
xchg
mov
push
in
jns
mov
mov
push
insl
jb
xchg
loopne
adc
stos
pusha
or
xor
fiaddl
or
or
test
sub
or
rcl
jg
rorl
xchg
adc
mov
xchg
mov
inc
push
ja
mov
mov
fcoms
lret
and
xchg
sub
inc
jnp
mov
mov
dec
mov
out
jnp
cmp
dec
jnp
test
push
or
outsl
mov
cli
jnp
or
insl
cltd
or
hlt
jnp
es
test
shll
cltd
mov
mov
and
int3
mov
and
lahf
pop
jne
cwtl
jbe
fsubs
mov
xchg
lods
mov
stos
mov
cmp
sub
insl
jg
movsl
sbb
mov
pop
jnp
sti
fcoml
iret
lret
jnp
rolb
jns
popa
cmp
jnp
pop
sti
cmp
xlat
mov
push
mov
jne,pt
jnp
and
push
int3
popa
jnp
sbb
bound
fcomi
lock
mov
lret
inc
push
js
das
in
pop
jnp
or
aaa
cltd
fistpll
push
sub
or
push
call
jnp
jo
and
jnp
int
inc
or
psubw
xor
jae
mov
jb
bound
dec
subb
mov
jae
repz
cld
stc
jnp
mov
or
lods
dec
mov
scas
mov
insl
xchg
push
jmp
xor
jnp
dec
fwait
adc
inc
adc
or
mov
jnp
shlb
lods
dec
jnp
hlt
cwtl
fcoms
mov
cmp
sbb
cmp
jbe
repnz
dec
jnp
jecxz
mov
mov
or
cs
out
mov
sti
mov
lods
into
popa
idivb
loop
push
arpl
add
outsb
jns
shll
sarl
xor
mov
mov
repnz
xlat
sbb
mov
jnp
imul
xchg
or
stc
ja
cmpsl
push
mov
mov
inc
aas
mov
or
shlb
adc
add
push
dec
mov
jno
jmp
pushf
mov
imul
mov
or
pushf
cwtl
arpl
js
cmp
data16
mov
mov
ficoms
xor
mov
mov
adc
jnp
inc
ss
arpl
mov
test
mov
insl
mov
popa
jle
cld
jnp
add
in
jnp
xor
or
lods
enter
shr
mov
aas
add
int3
sub
loop
jnp
push
mov
loope
jae
fdivrs
inc
loopne
iret
push
jnp
ret
xor
in
push
arpl
push
shlb
jo
out
cmpsb
and
pop
es
or
mov
adc
dec
rcrl
inc
loopne
cmc
cmp
mov
shlb
lret
inc
sti
jnp
or
cwtl
mov
iret
push
sbb
mov
jo
mov
movsl
jmp
ljmp
jge
push
cli
gs
call
out
or
add
out
adc
jnp
xor
mov
sbb
sbb
cpuid
mov
mov
fsubrs
xor
scas
dec
fs
cmp
cwtl
jnp
fmuls
sbb
fwait
mov
mov
test
ja
int
std
cli
cmp
cs
insb
icebp
adc
imul
jnp
aas
lret
sti
cmc
mov
cwtl
fisttpl
jbe
dec
es
push
sub
sub
in
xlat
mov
insl
ret
cmp
mov
cli
mov
outsl
stc
scas
pop
int3
and
ss
mov
stos
divl
mov
mov
jns
subl
outsb
lods
stos
xchg
mov
add
mull
xor
loop
mov
mov
sbb
scas
int3
cli
ja
sub
jnp
cmpsb
daa
lock
shll
pushf
or
cmp
ret
or
xchg
popa
subb
dec
jbe
aad
ret
test
fucomp
jnp
mov
sub
push
addr16
movsl
push
cmp
cmp
lods
mov
icebp
ss
cltd
cwtl
jnp
adc
xchg
mov
or
sbb
cmp
in
dec
jp
sub
iret
out
jae
xlat
scas
pop
or
inc
jp
test
add
pop
scas
test
jnp
test
push
mov
jnp
negl
mov
and
arpl
stos
outsl
jnp
les
or
nop
popf
fcompl
xor
push
lea
inc
jnp
sub
pop
repz
scas
mov
cli
in
inc
insl
jmp
ljmp
lahf
xchg
push
loopne
jnp
and
jns
jb
push
or
jmp
xchg
sti
jno
lods
and
or
pop
je
and
jns
mov
pushf
sbb
mov
inc
dec
fs
xchg
test
lock
lahf
xchg
jg
or
and
das
cmpl
pop
adc
pop
xor
jo
dec
or
mov
cmp
jge
lcall
enter
add
cmp
pop
xlat
pop
jnp
jns
dec
sub
inc
mov
dec
rolb
xchg
fwait
sti
xchg
imul
sub
test
xchg
in
cltd
jnp
pop
cs
jbe
repz
or
xchg
outsl
xchg
sub
inc
mov
jne
xchg
or
or
dec
jp
mov
mov
adc
dec
bound
movsb
imul
test
les
push
lock
jnp
dec
pushf
pop
test
adc
dec
jnp
ja
jns
stos
je
jnp
lock
cmp
or
popa
hlt
jno
loopne
sbb
jnp
int3
repnz
lods
in
cmovnp
lock
cmp
xchg
ja
jnp
mov
clc
adc
loope
push
ficomps
mov
jnp
addr16
dec
fcmovnu
jnp
nop
adc
lods
lock
fsubrs
push
aas
pop
sahf
ljmp
sub
jo
stos
xor
outsl
enter
inc
push
jnp
cmp
ss
nop
mov
aas
push
jnp
mull
jnp
cmpsb
jg
mov
bnd
test
mov
and
mov
mov
dec
fs
jg
jo
pop
pushf
orl
insl
push
adc
cmp
fimull
mov
adc
ja
rcll
fnsave
or
xchg
sbb
inc
call
popf
lods
mov
mov
outsl
pop
mov
add
push
fists
scas
jnp
jg
rorb
fmull
jnp
sub
test
xor
test
in
add
push
imul
xor
sbb
out
es
cli
xor
mov
jo
sbb
jnp
negb
aaa
fisttpll
cwtl
lods
mov
mov
mov
jnp
andl
jnp
ljmp
insl
cmpsl
mov
jnp
pop
xor
push
jnp
fistl
cmp
bound
and
out
jnp
repnz
and
cmp
jnp
or
ljmp
jbe
and
cmp
aaa
in
jnp
mov
xlat
repnz
pop
pop
ds
push
icebp
pop
xor
inc
sub
jecxz
jno
adc
push
xchg
outsl
sti
xchg
sbb
add
js
aas
lret
jne
cmp
shlb
cmp
jmp
loop
jo
inc
mov
mov
xchg
add
xor
imul
out
sbb
jnp
in
cmp
xor
jp
daa
mov
mov
outsl
loope
lods
and
and
pop
fs
sti
insb
jnp
sarl
outsl
push
fiadds
je
inc
push
dec
adc
cmp
pop
aad
enter
pop
int
mov
mov
scas
mov
cli
adc
xchg
negb
icebp
cltd
cmp
push
shrb
aad
jnp
je
mov
adc
pusha
cmp
addr16
mov
jae
lods
add
xchg
jecxz
inc
dec
add
mov
aad
nop
xchg
mov
in
lret
jnp
mov
fisttpll
jns
push
pushf
jnp
shll
into
ljmp
jle
xchg
mov
cmp
mov
loop
mov
fcoms
fs
add
aas
push
clc
int3
iret
sub
orb
xlat
ss
jnp
jno
sbb
inc
push
insl
mov
imul
mov
das
out
shrb
dec
xor
stos
mov
lock
cmp
pop
cmp
daa
lods
jnp
adc
inc
mov
mov
jnp
mov
inc
mov
or
cmp
les
scas
and
andl
fildl
pusha
mov
push
lock
mov
lods
inc
pop
push
jno
imul
call
jno
ret
mov
and
mov
cld
insl
lods
mov
xor
push
push
sub
sbb
mov
jnp
jb
mov
subb
rolb
and
outsl
dec
out
push
aaa
cmp
jnp
xbegin
jnp
jg
lock
fldcw
jnp
hlt
sub
or
shr
jnp
cmpsb
fisubs
dec
adc
sub
test
and
lcall
mov
mov
out
cld
pop
cmp
lods
cmp
xchg
lods
test
xor
jnp
in
mul
addb
or
add
jne
fistpl
add
push
aam
jnp
adc
in
xor
jae
int3
test
cmp
sbb
cmpsb
push
xchg
jnp
popf
mov
jnp
mov
lfs
push
mov
cli
jnp
int3
xor
dec
fs
sub
jo
sub
cld
jnp
out
test
aaa
adc
push
or
hlt
cmpsb
or
pop
clc
imul
mov
inc
mov
jnp
cmp
test
imul
push
push
loopne
rorl
push
lret
sbb
dec
rorb
jg
dec
cmpsl
icebp
bound
jns
lret
imul
xchg
movsl
jnp
xor
test
int3
mov
jnp
and
call
sahf
pusha
mov
sahf
xor
or
inc
lret
xor
clc
inc
std
inc
outsb
pop
sbb
dec
out
mov
jnp
or
sub
arpl
xchg
cli
push
push
andb
test
add
jb
mov
icebp
into
sahf
jnp
xor
mov
mov
int
dec
andl
loop
idivl
imul
push
push
lahf
outsl
frstor
xchg
jecxz
push
push
and
xor
stos
jnp
movsb
sub
ret
add
fidivl
mov
loopne
pop
jnp
xchg
sub
lods
jnp
out
call
push
fdivs
es
pop
jnp
mov
xlat
les
xchg
outsl
inc
jo
rcr
mov
or
scas
jnp
insl
gs
fwait
inc
int
leave
or
mov
dec
jb
shl
jnp
pushf
xchg
or
call
or
movsl
jmp
sub
dec
adc
jnp
outsl
xchg
xor
xor
jnp
cmp
lock
or
push
shr
jae
cmpsl
cmp
push
xor
sti
jnp
scas
adc
imul
xchg
mov
cmp
fadds
pop
dec
daa
sbb
sti
das
jnp
cld
push
and
adc
ret
jnp
popa
andb
cmp
jae
inc
or
push
sbb
aam
out
and
xchg
mov
jnp
dec
cmc
push
cmpsb
cli
scas
mov
push
imul
jae
add
jnp
sar
inc
inc
mov
nop
in
add
fistps
cmp
pop
fwait
sub
mov
jo
jnp
push
pusha
mov
cmp
adc
adc
out
xchg
or
cmp
mov
jnp
mov
cmp
out
or
ss
stos
fwait
dec
ja
std
fisubl
sahf
jnp
xor
lods
cmp
lcall
pushf
jae
sti
in
sarb
adc
jo
xlat
sub
xchg
sub
insb
jnp
loope
lahf
jp
xor
jnp
sbb
sub
jnp
pop
jno
ficoms
aaa
dec
fcmovu
push
mov
lods
adc
out
shll
cmp
push
popf
jae
sbb
lahf
jnp
js
jmp
cld
jb
enter
scas
mov
xchg
jnp
shlb
and
and
xchg
out
adc
inc
push
into
or
mov
out
sti
sbb
cmp
mov
jbe
enter
mov
cmp
ja
imul
sub
xor
jae
or
out
pop
cmp
sub
jne
aaa
sti
jecxz
sbb
push
std
cmpsl
mov
inc
pop
or
stos
inc
inc
test
lods
leave
xor
jnp
push
xchg
stc
outsb
negl
insl
jno
fwait
inc
mov
jnp
push
mov
mov
cmpb
outsl
rolb
mov
test
dec
push
ljmp
das
jnp
fwait
inc
adc
enter
lock
dec
data16
fcomip
dec
jnp
mov
add
ret
notb
dec
jnp
test
mov
dec
in
ljmp
aam
jnp
and
cltd
out
sub
jnp
ffreep
push
outsb
jl
jnp,pn
js
and
popa
add
push
jmp
rorb
jae
imul
fwait
std
jmp
xorl
stc
push
mov
adc
popa
mov
inc
je
mov
mov
jbe
push
sub
clc
xchg
int3
fwait
cli
xchg
popa
dec
imul
or
xchg
ja
fnstcw
jnp
or
stos
sub
loop
mov
add
inc
jl
rolb
popa
inc
mov
mov
imul
cmp
js
and
lods
dec
clc
arpl
add
jnp
add
sbb
sbb
pushf
jp
inc
push
push
fwait
imul
sbb
cs
jnp
insl
loopne
lods
mov
pushf
jnp
ss
xor
push
add
adc
ljmp
jnp
lret
movsb
pusha
cmp
test
lds
mov
lods
in
insl
mov
inc
dec
aad
outsl
in
je
stos
jnp
add
xor
dec
daa
dec
out
rcl
outsl
cltd
jo
popf
lock
jl
add
int
dec
popa
xchg
pop
clc
scas
stos
jbe
repz
pop
gs
mov
xchg
add
jnp
gs
or
jne,pt
adc
aas
ljmp
test
in
aad
jnp
jbe
insl
cwtl
aaa
mov
jnp
shlb
int
mov
jnp
fdivl
sbb
jns
cmp
bound
in
jnp
jbe
fidivl
or
roll
and
fsubrs
xacquire
or
pop
push
jne
xchg
rcl
add
push
add
mov
mov
and
sbb
pop
xor
sbb
adc
or
jnp
jae
enter
insb
mov
mov
inc
jbe
xlat
shlb
jnp
xchg
inc
shrl
push
repnz
icebp
nop
js
call
xchg
pusha
add
mov
dec
ret
and
xlat
stos
outsb
mov
cmp
mov
jnp
cli
adc
ds
dec
sub
jb
sbb
int
and
lods
cli
jnp
push
cmpsb
sub
push
pop
js
into
cmp
call
adc
xor
xor
jg
cmp
mov
push
ja
add
mov
adc
jg
clc
cmp
mov
pop
xor
or
fisttpl
xchg
dec
sub
aas
jae
test
mov
inc
xchg
lea
sbb
xchg
pop
add
mov
leave
jnp
adc
sub
imul
sarb
jnp
xor
lret
jne
jnp
jns
insb
call
sbb
jnp
lods
push
jbe
jb
les
in
sub
jp
xor
pop
sahf
or
sbb
test
imul
dec
les
inc
xor
iret
or
mov
push
mov
mov
and
aam
jnp
xchg
cs
and
adc
je
lods
ss
jnp
lods
mov
jnp
rorl
push
repz
xor
call
cli
iret
sbb
or
daa
movsb
rorl
sub
lods
aaa
fidivrl
je
cmp
imull
jnp
mov
icebp
repz
jnp
andb
jp
and
pop
sbb
inc
jnp
repz
sub
rcr
jnp
lret
pop
jno
call
mov
mov
out
popf
in
cmp
stos
sbb
mov
clc
adc
cmp
pop
jns
cmp
in
lea
jnp
aas
pop
testb
mov
icebp
pop
shll
jnp
in
lods
push
cmp
add
jecxz
sub
pop
jnp
xchg
xor
lods
icebp
bnd
pop
call
aaa
jnp
scas
dec
mov
divl
or
add
outsb
movl
mov
cmp
jecxz
inc
iret
mov
cli
adc
mov
cld
das
xlat
pushf
lcall
outsl
push
loope
jnp
jp
mov
mov
ss
enter
mov
aam
aaa
idivl
dec
mov
adc
xchg
lods
imul
inc
outsl
mov
mov
push
orl
aad
jnp
mov
int3
xchg
sub
decb
cmpsb
lock
lret
imul
lock
mov
pushf
testb
lahf
push
cwtl
hlt
ss
xor
sub
cmpsb
xchg
aam
fwait
jecxz
pop
loope
mov
nop
pop
stos
jnp
int3
pop
imul
and
xlat
shr
jb
test
push
pop
sti
sbb
mov
or
mov
xor
sub
jnp
pop
popf
add
stc
jnp
adc
jbe
inc
hlt
test
into
xor
fidivl
in
lods
inc
jnp
sbb
cmp
lcall
jnp
add
lds
cmp
inc
jnp
mov
sub
daa
pop
lods
jne
mov
inc
inc
dec
dec
stc
loopne
sahf
jb
jae
negl
add
xor
adc
dec
dec
shll
xchg
testl
jb
inc
sub
cmp
jnp
std
sub
stos
mov
dec
or
sarl
push
jno
mov
jnp
orl
loopne
xchg
mov
stc
les
jo
pop
notb
inc
imul
jnp
mov
into
cmp
or
ljmp
inc
test
lds
jnp
out
cwtl
jne
cmpsb
bound
and
lahf
repz
jb
stos
pop
mov
sahf
xor
jnp
movsb
ret
inc
dec
mov
adc
repz
cmpsl
inc
inc
jnp
out
imul
add
push
add
mov
jmp
shl
xchg
dec
push
cltd
in
clc
dec
xchg
ds
jnp
shl
mov
cmpsb
pop
mov
and
xor
jo
je
or
sub
jne
cmp
mov
rolb
push
in
add
mov
cmp
fildll
or
xor
or
xor
xor
push
mov
jne
jno
pushf
cmpsb
jnp
push
lds
dec
cmp
jmp
cmp
push
mov
and
in
add
cmove
outsl
fistl
adc
jnp
push
popf
pop
jecxz
fidivrl
push
lea
jmp
xor
out
shll
sbb
xor
outsl
xorl
fsubs
lods
dec
outsl
leave
pushf
jnp
inc
jmp
inc
clc
sbb
jae
or
inc
mov
and
jae
jp
enter
repz
scas
loopne
xchg
pop
lock
mov
sub
or
jns
sub
mov
jae
mov
sub
lea
daa
sub
pop
imul
pop
int3
orps
and
outsb
pop
xchg
call
orl
xchg
lock
lret
lock
ds
jns
push
xor
daa
aas
push
jp
out
jnp
dec
sbb
jnp
fdiv
jecxz
clc
lods
mov
push
and
jnp
pop
sti
ret
jbe
jb
je
sub
pop
fildll
mov
sub
mov
cwtl
out
jg
int
testb
neg
in
mov
push
mov
rolb
pop
clc
add
mov
movsl
jnp
pop
inc
out
sub
and
add
fsubr
jns
rclb
dec
inc
cmp
daa
outsl
xchg
jnp
cmpsl
mov
clc
fistpll
mov
std
jnp
dec
pusha
mov
sbb
push
sti
in
repz
or
or
sbb
loop
cli
test
push
pushf
jo
cmp
pop
scas
sahf
loope
jnp
xchg
mov
sbb
das
push
cmc
and
jnp
lods
or
aad
sbb
pop
mov
sub
rcr
pop
inc
repz
jnp
cltd
or
testl
aam
mov
fs
outsb
sbb
jne
insb
sbb
xchg
iret
pop
cmp
addb
fs
bnd
idivb
jmp
jp
add
mov
outsl
jo
in
daa
jnp
push
call
jnp
add
xor
lret
mov
mov
insl
in
std
xchg
jnp
stos
out
cltd
imulb
dec
idiv
addb
jo
jo
push
jnp
cli
fstl
mov
mov
jmp
std
jnp
jp
sahf
hlt
xor
mov
add
addb
imul
data16
mov
cmp
jnp
loopne
mov
jnp
sbbl
jp
inc
inc
adc
mov
adc
call
es
lods
outsl
repz
sarb
push
mov
inc
insl
or
subl
and
sti
lock
jecxz
xchg
arpl
jnp
insb
cmp
push
jg
adc
xchg
mov
jnp
arpl
pushf
jnp
dec
mov
push
pop
mov
sbb
push
cmc
es
sub
sub
add
jnp
push
cmpl
mov
cli
mov
popa
cld
fisttpl
sarb
inc
fistpll
jnp
insl
dec
bound
out
repnz
imul
jp
lea
mov
int
push
mov
jnp
popa
nop
ret
and
mov
cli
adc
inc
cmp
mov
stos
push
pushf
rclb
call
shrl
jnp
pop
ss
and
sub
mov
sbb
ds
fwait
das
mov
mov
mov
dec
mov
pop
xor
add
outsb
ret
aas
fldt
ss
add
or
les
cmpb
mov
rcrb
sbb
xor
dec
mov
dec
jnp
cmpb
enter
sub
mov
jmp
jecxz
aaa
push
data16
pop
cmpl
out
pushf
xchg
dec
aam
or
mov
into
or
mov
out
mov
jns
fisttpl
jnp
fsub
cltd
int3
jns
jg
pusha
imul
mov
out
xor
dec
ja
inc
dec
jle
xchg
inc
jnp
cmpsb
xchg
pusha
cmp
pop
mov
insb
jle
inc
adc
ljmp
notb
imul
xor
daa
stos
scas
lods
fisttps
mov
rcr
sbb
adc
xlat
iret
outsl
imul
fcmovnb
imul
jmp
push
mull
outsl
inc
gs
dec
push
aas
sahf
push
insl
cmc
jnp
jns
in
outsl
or
mov
out
mov
out
push
dec
sti
xor
jnp
repz
mov
push
lock
jmp
pushf
sbb
push
int3
clc
sbb
pop
jnp
stc
or
cmp
add
and
bound
cli
test
inc
lret
ja
xor
jae
jp
sub
jnp
mov
mov
dec
sbb
mov
outsl
clc
mov
roll
outsl
xor
add
jnp
ss
mov
in
jnp
xor
out
lcall
xor
insb
dec
cmp
data16
cmp
xor
jno
cmpsb
mov
push
fistpll
xchg
mov
jmp
mov
mov
cltd
sbbb
pusha
sub
cmp
stc
outsb
or
testb
jnp
jbe
cmp
int3
imul
fwait
pop
lret
pusha
jecxz
aaa
outsl
jnp
fidivl
jnp
and
and
dec
mov
jnp
mov
mov
inc
sbb
sbb
aaa
mov
adc
cmp
sub
gs
or
repnz
iret
repz
push
cmpsl
bound
fsubrl
lret
fld
fwait
xchg
add
nopl
dec
rol
xchg
jnp
fistps
and
push
hlt
cmp
iret
popf
rcrl
adc
jnp
add
lret
cli
pushf
jnp
insb
push
fdivrs
fs
jnp
mov
mov
mov
movsb
lock
fdivrs
int3
jnp
jmp
push
and
es
dec
outsl
push
mov
xchg
nop
push
push
mov
push
bound
mov
data16
movsl
and
pusha
sub
add
nop
stos
outsb
mov
aas
pop
sub
push
lret
jnp
mov
fidivrs
jnp
jb
test
push
xchg
imul
lods
lcall
testb
jnp
fdivp
mov
insb
jae
jecxz
lret
daa
jnp
cld
es
push
sbb
dec
dec
outsb
fildl
mov
pushf
xchg
cltd
pop
cmpsb
pop
jae
push
insl
insl
aaa
push
mov
mov
dec
or
cmp
pushf
cmp
jg
in
mov
cli
ret
add
imul
rol
sahf
jp
adc
sti
push
inc
cmp
fnstcw
jns
mov
sbb
push
mov
xchg
outsb
sub
pop
adc
xchg
adc
sub
lds
mov
stc
jnp
aam
fdiv
fisttpll
std
insl
mov
out
cmpsb
stc
jno
add
cmp
sahf
dec
jnp
cwtl
dec
notb
mov
and
ss
xor
cmp
cmp
pop
or
data16
mov
mov
dec
cmpl
cwtl
mov
jnp
test
cmp
add
adc
xchg
dec
outsb
daa
jne
lods
pop
nop
imul
push
xlat
xchg
out
imul
loopne
js
out
ljmp
mov
lods
lods
push
fdivrl
popf
pop
or
inc
or
rcrb
jns
and
xchg
lods
call
mov
jbe
das
lret
rorl
or
jnp
push
insl
jecxz
push
pushf
insl
mov
jnp
mov
push
cmp
jo
xor
and
pop
out
mov
jnp
dec
daa
jecxz
pop
testl
jge
xchg
rcrl
and
add
mov
lret
dec
push
enter
sbb
or
dec
xor
xor
push
aaa
jnp
insb
arpl
add
test
icebp
lds
out
das
pop
add
roll
fistpll
popf
pop
mov
jnp
clc
and
or
xchg
mov
ja
insl
pushf
scas
lret
mov
mov
jg
stc
jnp
jb
pop
int3
ret
or
lret
mov
jnp
fidivl
add
jne
mov
mov
inc
pop
loop
scas
js
mov
mov
jnp
pop
sub
imul
sbb
sub
inc
push
pop
xchg
adc
or
in
pusha
push
or
mov
hlt
lods
icebp
jnp
jp
loope
mov
pop
enter
nop
loop
jnp
cwtl
inc
out
pop
pop
xchg
insb
es
loopne
jns
jae
mov
lcall
xlat
mov
xor
jnp
jmp
pop
adc
xchg
pop
xchg
dec
mov
inc
lods
gs
pop
mov
xchg
xor
jnp
repnz
das
inc
xlat
daa
jnp
dec
pop
push
movsl
data16
mov
cmp
bound
dec
insl
mov
ja
xor
jbe
ss
and
dec
mov
shll
jmp
jbe
jnp
and
push
lcall
ffreep
lods
mov
pop
in
ds
cmc
lods
or
out
mov
jnp
stos
cs
out
fsubr
fwait
jnp
fbstp
xchg
jle
imul
pop
fistpl
lea
jnp
sbb
inc
shlb
xor
mov
dec
iret
mov
xchg
inc
jp
daa
or
mov
hlt
shl
push
add
push
xor
jnp
add
cmp
sub
mov
int3
xor
insb
mov
ret
adc
imul
inc
test
lcall
jp
pop
call
sbb
sbb
fnstcw
movsb
jnp
fwait
sub
fisubs
jnp
fisubl
sub
jo
shr
pushf
call
lcall
jnp
fcomip
out
orl
lret
daa
bound
lods
scas
mov
jb
sbb
out
jae
or
and
dec
hlt
inc
cmp
scas
sbb
push
repz
iret
mov
popa
out
or
xor
in
add
xchg
cmp
pop
add
pop
insl
ja
sub
xor
sbb
fisttps
jl
loope
shll
dec
sbb
dec
lods
movsl
insl
outsl
adc
sub
dec
imul
inc
cmpl
pop
mov
jnp
out
sahf
imul
xor
bound
popa
add
fcmovbe
fcomip
idivb
jnp
in
xchg
fistl
jb
lods
dec
insl
inc
subl
jnp
push
gs
push
test
push
dec
lea
mov
das
imul
enter
xchg
lods
mov
push
negl
dec
je
into
mov
lret
in
insl
mov
jecxz
jnp
rcll
out
mov
xor
mov
adc
scas
mov
pop
mulb
ret
sar
pusha
xchg
push
jnp
inc
sub
bound
scas
ds
sbb
jnp
adc
inc
xchg
or
cli
mov
jae
decl
sub
or
push
faddl
nop
jmp
pop
shlb
popa
jnp
inc
mov
mov
xor
jnp
addr16
sbb
loop
ds
cmpsb
xchg
mov
jnp
add
scas
stos
inc
lods
jnp
adc
dec
sahf
jecxz
xchg
jnp
jbe
rolb
adcl
aad
jne
test
add
pop
push
leave
fisttpll
clc
divb
dec
xor
mov
das
dec
push
xchg
cli
or
jnp
cmp
into
data16
jne
mov
daa
inc
push
fnstsw
adc
mov
lods
scas
ss
outsl
mov
add
cmp
jg
xor
insb
faddp
xchg
sbb
xchg
and
push
jnp
push
sahf
cmp
hlt
jnp
fbld
aaa
repnz
jnp
test
cli
dec
rorl
mov
mov
popf
jnp
mov
sahf
popa
jnp
xrelease
enter
mov
jmp
jno
add
inc
shrl
or
setp
mov
or
jae
in
pushf
scas
jnp
hlt
jae
mov
fsts
lret
cmp
loopne
out
pop
lods
xlat
pop
call
jo
incb
call
sarl
sub
or
insl
lea
es
cld
pop
add
and
jnp
pop
xor
dec
ss
and
inc
dec
cmp
jae
jp
sarl
pop
arpl
jnp
ja
ds
sbb
pop
cmp
jnp
mov
xchg
outsl
int3
adc
pushf
rolb
jnp
jl
lods
aad
mov
sbb
push
in
arpl
pushf
sub
inc
jnp
mov
mov
jnp
jae
sub
shrl
jnp
xchg
stos
cwtl
xor
cmp
cmp
pop
pop
addr16
ficoms
xor
push
mov
adc
mov
arpl
and
les
rcll
pusha
pop
out
scas
imul
in
xchg
jg
dec
mov
jbe
mov
shrb
ja
daa
dec
int3
sub
jns
pop
mov
js
mov
mov
jl
or
push
or
insb
fldl
std
test
cmp
into
ja
adc
xchg
jp
add
mov
out
mov
mov
pop
lods
jnp
nop
xchg
sbb
stos
mov
mov
popf
cmp
xchg
mov
push
push
jnp
inc
mov
sub
sub
push
cmp
cmp
push
jb
xor
imul
fiaddl
je
push
jnp
fucom
in
clc
sbb
shlb
dec
jnp
mov
rclb
popa
inc
jnp
or
imul
leave
jnp
xchg
pushf
or
sub
fwait
push
jo
pop
shll
outsb
in
fnstsw
movsl
push
mov
imul
roll
jnp
mov
lods
shll
mov
sbb
xor
mov
pop
inc
pushfw
xor
xorl
je
sbb
or
loop
enter
adc
push
loope
xchg
pushf
jae
lock
aam
adc
ss
sbb
lds
in
inc
fwait
jnp
cmp
push
test
xchg
push
insl
inc
shr
cmp
ror
add
ret
jb
shr
jnp
lock
push
jo
jnp
xchg
jnp
addb
aam
ficomps
inc
into
jno
stos
pop
dec
push
test
gs
xchg
shll
jnp
push
mov
sub
xchg
ds
dec
xchg
ret
jno
pop
mov
outsl
cwtl
push
mov
dec
ret
pushf
pop
mov
mov
outsl
sbb
xchg
jnp
mov
jnp
out
inc
xor
jnp
or
enter
invd
pusha
adc
and
mov
or
dec
data16
mov
mov
mov
mov
cmp
jns
jl
jp
test
hlt
enter
jnp
mov
jnp
inc
jns
sahf
pushf
leave
sbb
in
push
xor
adc
xor
or
stos
and
xor
mov
xor
lahf
test
push
and
cmp
jnp
xchg
clc
jnp
fdiv
fidivl
mov
dec
fldt
insb
das
sbb
jnp
stos
scas
mov
jnp
les
xchg
or
xchg
jae,pt
fstpt
pop
aam
mov
ja
fnstsw
xor
jne
js
jb
sti
xor
jnp
loop
popa
sbb
ss
mov
out
ljmp
jbe
out
stos
pop
sbb
sbb
xor
add
mov
xchg
xlat
mov
test
pushf
jo
arpl
mov
insb
cmp
aaa
scas
jnp
mov
sti
lcall
mov
mov
add
clc
mov
gs
data16
pop
xchg
push
arpl
xor
xor
cmp
cli
in
les
outsl
mov
and
popa
xchg
mov
bound
push
lcall
jmp
jae
mov
cmp
lods
pop
imulb
and
cld
jnp
test
dec
cmp
jp
pushf
or
lods
rcll
push
mov
push
jae
outsb
sbb
jnp
inc
popa
cmp
lret
jge
mov
mov
push
jnp
test
loop
pushf
mov
jnp
std
sub
fwait
mov
push
jnp
ffreep
clc
data16
mov
mov
jnp
pushf
adc
push
add
push
testb
cmp
xchg
jnp
icebp
rorl
in
mov
jecxz
ja
cmp
jnp
pop
sbb
lahf
mov
jnp
xor
sarb
cwtl
sahf
sbb
jo
jnp
shl
bound
sbb
lret
js
jle
mov
hlt
cld
jnp
in
sub
enter
arpl
adc
outsl
pop
lret
mov
aas
mov
add
arpl
or
ret
sub
nop
rcl
xchg
jae
or
aad
xchg
jmp
fnstsw
sub
pop
mov
mov
jg
sbb
repnz
sub
into
mov
aaa
xchg
insb
lods
lea
xlat
mov
sub
lock
dec
fidivrl
mov
lods
xchg
iret
jnp
adc
insl
test
jnp
fdivs
mov
xor
scas
mov
hlt
xlat
mov
daa
insb
jo
fwait
mov
cmp
mov
adc
jnp
push
mov
imul
and
mov
into
mov
jmp
nop
test
mov
xor
dec
lret
pushf
fsubl
cmp
inc
jnp
push
xchg
pop
repnz
out
mov
cmpb
push
cmp
mov
jnp
cmp
negl
sub
ja
xchg
icebp
test
xor
inc
xchg
mov
dec
fistpll
scas
ljmp
mov
sub
fucom
lea
jnp
mov
xor
push
or
push
lret
mov
mov
sub
add
and
inc
cmp
in
sub
enter
xchg
call
push
jnp
push
fldt
sbb
stos
jnp
ljmp
xlat
mov
call
jne
pusha
jnp
pop
add
inc
mov
xor
clc
dec
jnp
mov
dec
xor
push
pop
jnp
fs
mov
mov
cmp
sbb
bound
in
les
inc
clc
pop
daa
shlb
jp
mov
dec
push
jnp
int3
pop
test
fimull
jae
pushf
mov
lcall
test
incb
xor
or
sub
stos
ja
adc
mulb
cmp
adc
jae
mov
fsubrl
add
jnp
cwtl
sbb
test
or
jp
pushf
and
jnp
aaa
decl
jnp
cltd
xchg
popf
mov
cmc
sbb
into
movsb
jnp
adc
jnp
or
mov
jnp
rcll
and
sbb
jbe
orl
movsb
mov
lcall
daa
out
filds
jnp
mov
dec
fldpi
in
xor
negl
das
into
xor
mov
jnp
jno
push
or
ja
shrl
jnp
cmp
xor
mov
icebp
daa
xor
xchg
out
sub
jnp
xchg
dec
roll
or
aam
add
dec
lret
mov
lock
jecxz
cmp
test
or
jbe
lods
mov
pushl
ja
out
lret
dec
lods
out
jnp
xor
insl
aaa
add
lods
jnp
mov
push
ljmp
aam
sbb
or
movsl
outsb
test
hlt
jnp
repnz
cmp
or
jnp
inc
pushf
ret
sub
icebp
sbb
hlt
out
insl
or
sti
lock
mov
or
in
add
adc
clc
mov
lds
sub
mov
cmp
add
jge
adc
je
hlt
push
xor
clc
mov
loopne
and
lahf
mov
xchg
outsl
jb
call
push
mov
mov
mov
pusha
cli
sub
dec
and
outsb
jnp
hlt
push
aam
mov
test
mov
sbb
xor
jae
pushf
subl
lods
jnp
jne,pt
lea
std
dec
aad
mov
sbb
push
inc
jmp
and
xchg
shl
jp
cmp
aaa
fdivr
movsb
cmpb
inc
mull
dec
mov
ret
divb
imul
jg
dec
js
mov
cmp
movsb
and
jo
sbb
test
testl
dec
push
pop
lods
xor
mov
sub
push
inc
ficompl
mov
ljmp
xchg
jnp
or
adc
pop
xchg
adc
shll
aas
aad
jp
fcomps
cmpl
jb
out
jg
cmp
ffreep
cs
fstl
jnp
lods
rcrb
aas
mov
jae
inc
je
notb
jnp
pop
scas
sarl
imul
jb
scas
xor
xchg
jnp
shrd
call
out
lea
orl
aaa
and
and
push
xchg
mov
mov
xchg
cmp
adc
jnp
repz
sbb
dec
subb
xchg
idiv
sub
mov
jae
arpl
lods
aaa
adc
push
push
loop
mov
in
repnz
jl
movsb
mov
insl
inc
lds
xchg
mov
mov
int3
or
mov
call
mov
test
out
sub
ret
sbb
in
std
mov
mov
subl
cmp
loop
mov
stc
mov
insb
and
mov
dec
js
inc
fwait
ret
call
cmp
push
jnp
sub
popf
or
jo
mov
mov
andl
xor
cltd
mov
xlat
pop
loopne
outsl
pusha
jp
loop
ds
mov
and
iret
gs
jg
cmp
inc
data16
insb
xchg
dec
jo
jnp
cmp
xchg
pop
mov
scas
mov
jnp
cmp
lret
es
jecxz
jnp
sub
and
xchg
inc
jnp
lods
push
mov
pop
test
sbb
insl
jnp
stos
mov
cmp
dec
loope
stc
rol
push
jo
sbb
stos
mov
pop
xorl
xchg
mov
mov
push
and
pusha
fs
sbb
push
and
mulb
jnp
outsb
xor
pop
popf
push
jmp
sahf
addr16
jbe
hlt
pop
lods
jnp
imul
testl
jle
stos
xchg
cmp
imul
sbb
mov
outsb
in
add
mov
jl
ds
pop
jb
int3
push
mov
ja
mov
aam
push
loop
es
jnp
das
mov
fiadds
push
data16
adc
in
outsl
cs
jnp
sbb
mov
dec
mov
pushf
xorb
stos
jnp
repz
lock
inc
loopne
stos
popa
jnp
mov
xchg
pusha
jnp
rcr
cmp
repz
dec
negl
outsb
jae
dec
inc
repz
xchg
jnp
sbb
int
push
mul
aaa
stos
pushf
push
jnp
mov
decb
add
jne
jnp
pop
mov
data16
or
mov
mov
inc
dec
jnp
imul
fidivrl
cmpsl
or
lods
sub
or
jnp
jmp
cmpsl
pop
fucomip
test
inc
sti
lods
test
jnp
push
insl
lret
mov
scas
jnp
jne
cli
pop
mov
and
fnstsw
cmpsl
cwtl
fs
xor
jnp
je
mov
jnp
xchg
aad
mov
int3
mov
pushf
cmp
jnp
jae
adcb
imulb
lods
mov
cmp
xchg
jl
xor
lods
insb
jp
jo
int
or
cmp
xchg
adc
pop
stos
mov
push
pushf
or
xlat
lods
dec
sub
sahf
ret
jnp
jb
push
jnp
enter
scas
lods
ret
add
jne
pop
inc
jnp
sbb
or
sub
jnp
es
push
aaa
enter
or
cmp
fcoms
sahf
in
xchg
jge
sbb
cmp
arpl
mov
jnp
dec
xor
into
addb
call
mov
cmc
aam
jnp
xor
jnp
cmp
clc
les
jnp
shll
jns
mov
aaa
cmpsb
fwait
jnp
lea
pop
clc
dec
mov
mov
mov
insl
cmpsl
jae
dec
pushf
jb
jnp
rcl
ds
lods
mov
out
add
mov
jnp
sub
int
mov
popf
dec
mov
aam
insl
dec
xchg
pop
sub
jno
adc
les
repz
test
repnz
dec
mov
mov
jnp
xchg
mov
push
iret
pop
int3
jnp
inc
pop
into
dec
gs
jnp
pop
xchg
push
dec
out
js
es
in
inc
jl
bound
fwait
xchg
dec
jnp
jp
pop
scas
dec
jnp
inc
push
adc
xor
jnp
in
test
lock
lret
push
repnz
sahf
negb
jb
pop
cmpl
mov
clc
jae
pop
sub
xor
mov
cmp
jg,pt
mov
cs
and
lret
cmp
jnp
lock
scas
add
mov
jns
je
jae
cli
in
jnp
push
ror
mov
or
add
mov
inc
ja
xorl
xchg
jle
js
mov
mov
enter
push
clc
dec
jnp,pn
dec
roll
xchg
sti
popl
insb
scas
jnp
push
test
ret
push
stos
std
bound
dec
frstor
aad
clc
push
aaa
sub
jae
push
mov
pop
sbbb
cmp
insl
mov
lods
dec
cld
jns
inc
mov
jnp
adc
les
sbb
es
lods
loopne
ror
pop
or
int
cwtl
outsl
mov
sbbl
clc
mov
fstl
das
jnp
pushf
push
push
cmp
xchg
mov
inc
cmpsb
addr16
cli
insl
push
loop
sub
sarb
pop
add
cld
mov
jnp
dec
cmp
jnp
lahf
or
mov
lods
adc
jnp
mov
sub
push
jnp
sahf
lods
fnop
notb
pop
jg
in
jnp
lret
mov
jmp
lods
dec
mov
push
outsl
mov
rcl
dec
pushf
test
dec
clc
lret
shr
cmp
jnp
or
add
cmpsl
xor
mov
jnp
dec
inc
insb
cmp
xlat
and
ret
adc
and
pop
mov
lcall
xor
das
xchg
outsl
mov
adc
ds
jnp
inc
das
xchg
lods
and
call
add
dec
lret
mov
imul
xchg
dec
push
cs
jnp
mov
sub
inc
imul
jns
enter
jmp
pusha
sahf
and
sbb
cmp
mov
lahf
sti
imul
int3
dec
cmp
ss
fcmovbe
cli
jnp
add
outsb
ret
aam
jnp
mov
call
int3
xor
in
jge
lods
sub
lods
xor
jnp
fs
mov
nop
insl
sub
push
mov
mov
stc
sbbl
jb
dec
or
xchg
pushf
pop
or
jnp
stos
fidivl
xor
lret
sub
in
clc
jae
adc
aaa
and
xchg
mov
jnp
pusha
cmpsb
inc
lret
inc
into
pop
cmp
dec
in
mov
les
xchg
fidivrl
sarl
mov
adc
mov
insb
lahf
xchg
jnp
jg
je
in
shlb
mov
lods
stos
stos
insl
inc
jb
jnp
mov
push
imul
adc
pushf
mov
loope
stos
orl
push
js
fsubr
repnz
mov
mov
sbb
jae
cs
add
loope
jnp
ljmp
out
test
testb
pop
shrb
xchg
adc
imul
pushf
add
das
ja
pop
sbb
dec
push
push
popf
mov
out
adc
inc
loopne
hlt
inc
add
insb
pop
fnstsw
or
pushf
push
addr16
orb
js
jo
sbb
push
adc
notl
sub
jnp
inc
mov
pop
or
and
mov
jnp
sub
arpl
push
jg
add
fsubr
repz
jb
dec
arpl
repz
jnp
sahf
test
rcr
int3
lods
pop
jmp
adc
sahf
cli
jnp
ljmp
cli
pop
ficompl
sub
dec
pop
insl
jecxz
je
mov
out
lods
bound
imul
add
out
outsb
das
out
cmpsl
jns
xor
mov
jmp
sub
cmp
xchg
fisubl
gs
je
lahf
mov
cli
inc
dec
mov
push
adc
jecxz
xchg
call
in
sarl
sub
pop
or
fmul
cmp
dec
sub
vpmaxub
stos
push
jg
dec
insl
outsl
mov
pushf
add
jnp
jae
dec
cmp
mov
incl
shlb
lea
lret
movl
cwtl
sub
hlt
es
minps
jns
orl
bound
push
inc
ss
mov
imul
test
xchg
adc
ljmp
sbb
std
xchg
lcall
shrl
rclb
jno
hlt
loopne
sbb
cmpl
stos
nop
jnp
pop
jmp
sbb
xchg
xchg
jnp
lret
stc
adc
mov
or
rcll
inc
jnp
push
popf
sahf
nop
xlat
jnp
test
or
sub
jnp
dec
push
sub
stos
mov
push
repnz
cmp
xor
or
jnp
cmp
dec
pop
sub
mov
outsl
testl
mov
aaa
lods
out
imul
push
loopne
enter
dec
enter
lret
mov
mov
or
call
loopne
daa
imul
jp
jbe
fldt
int
jo
mov
push
daa
test
inc
cmp
insb
enter
and
notb
out
push
sub
mov
adc
jnp
js
lods
mov
lahf
jnp
or
les
mov
fmuls
push
mov
add
xchg
xlat
jo
jnp
es
jmp
cli
rorl
cs
cld
jl
mov
cmp
cmpsb
mov
jno
sbb
sub
jb
xchg
mov
cmp
jne
add
mov
push
out
outsl
cmpsl
stc
dec
in
lret
jb
mov
jnp
ljmp
sub
lods
mov
xor
and
xor
lahf
cmp
popa
cmp
mov
clc
mov
shr
dec
adc
sub
inc
mov
jb
mov
imul
push
in
outsb
pop
jnp
loopne
ja
je
lods
mov
adc
or
sub
clc
pusha
shrl
inc
arpl
daa
lods
pop
loopne
cltd
push
sbb
pushf
ret
dec
mov
xchg
cmpsb
jnp
mov
int3
rol
lret
mov
repz
mov
rcll
or
lock
icebp
lahf
popf
arpl
hlt
cmc
imul
xor
outsl
enter
jnp
sub
arpl
jnp
and
cmp
push
adc
push
ljmp
jnp
jmp
loopne
jnp
add
push
repz
jo
mov
insl
cmpsl
mov
add
jae
clc
xchg
lcall
mov
into
mov
out
fst
pop
negl
ret
sub
ljmp
mov
xor
icebp
subl
movsl
fsubrl
push
gs
xor
cmpsb
inc
orb
insl
int3
sahf
mov
cmc
imul
inc
not
jnp,pt
xor
cmp
lods
lret
adc
pop
lods
sub
jnp
and
bound
sbb
add
mov
cmp
jnp
xchg
inc
inc
imul
lods
jne
leave
jecxz
pop
jnp
cli
bound
jnp
pop
mov
push
fimull
jno
jnp
fistpl
imul
mov
lods
mov
gs
or
divl
jnp
xor
rcrb
lods
mov
jnp
stos
jle
jnp
xchg
cld
imul
insb
divb
push
jnp
lcall
andl
inc
and
push
cmp
loopne
lods
movsl
imul
xor
shlb
aaa
clc
inc
notb
addr16
outsl
fcom
sbb
pop
jns
pusha
lods
int3
mov
mov
jnp
or
jnp
push
mov
mov
fstp
divl
add
or
jnp
cld
jae
enter
add
xchg
aas
fdivrs
jnp
push
mov
or
mov
add
inc
sbb
mov
test
jmp
jnp
pop
lods
jp
add
imul
frstor
jnp
subl
jnp
cmp
pop
insb
cwtl
xor
dec
or
add
pop
sahf
shlb
or
sbb
or
mov
notl
adc
sahf
lret
adc
mov
jno
or
out
aaa
ja
lcall
arpl
sbbl
sbb
push
jae
inc
push
sbb
pop
fcom
lret
pop
sub
ja
mov
add
mov
jg
or
shl
jns
push
je
sub
cmp
add
sub
imul
mov
mov
push
lock
jnp
xlat
ljmp
xchg
mov
push
mov
out
mov
cs
jecxz
setl
mov
mov
scas
pop
jno
int
repnz
aaa
cmp
into
jp
jae
push
and
cmp
je
xor
aad
mov
ss
imul
mov
add
jnp
int
bound
mov
mov
pusha
fld
icebp
outsb
cli
jb
outsl
adc
stc
xlat
sub
stos
out
sbb
jne
jns
sarb
in
ret
mov
jp
mov
or
aad
mov
jnp
xchg
test
sbbl
push
lahf
sbb
mov
xor
xchg
shll
fcmovnu
mov
ds
fdivrs
xlat
dec
xor
jae
enter
xchg
or
popa
or
outsl
adc
mov
jnp
icebp
mov
xor
push
cli
and
cmp
js
jnp
add
popf
push
xchg
jnp
movsl
sub
jnp
dec
sbb
add
inc
push
jnp
jae
xor
clc
les
cmpb
jnp
jb
inc
jmp
adcl
subb
jae
in
arpl
fcmove
imul
pop
push
test
int
mov
lods
inc
xor
mov
das
rorl
push
jbe
sub
push
push
jnp
xor
out
fistl
test
jnp
lods
aas
sbb
orb
push
mov
pop
ljmp
cmp
mov
dec
js
aaa
and
jnp
ss
int3
jnp
xor
fimull
jb
xor
mov
jnp
idivb
push
jnp
mov
rcll
scas
mov
lods
fwait
xchg
dec
lock
cli
pop
bound
cmp
int
xchg
dec
add
mov
popa
cmp
jnp
add
pop
mov
sti
stos
mov
stos
jmp
mov
xor
dec
pop
cmc
cmpsl
into
lods
stos
push
sub
out
in
iret
ss
dec
push
sbbl
cmpsb
jae
roll
jmp
pop
mov
adc
and
sbb
mov
lods
mov
sub
mov
mov
jnp
lret
inc
pop
lods
ret
jnp
mov
xor
arpl
pop
xchg
out
mov
bound
and
cmc
push
xor
jnp,pn
adc
in
and
dec
pop
adc
xlat
pushf
sbb
jnp
sbb
mov
stos
mov
xor
pop
arpl
pusha
mov
cmp
or
insl
pop
xchg
mov
add
popa
xor
and
arpl
pushf
xor
js
div
pop
jnp
add
test
ja
or
loopne
aaa
and
packuswb
cmp
std
sahf
aam
in
mov
xor
rcl
insl
xor
inc
data16
repz
add
jnp
arpl
jno
in
cmp
jnp
movsl
jbe
xor
mov
aad
jecxz
in
and
jmp
popf
popa
call
das
sbb
loopne
outsl
push
adc
mov
cli
and
repz
jbe
pop
fidivl
sub
inc
mov
loope
and
mov
xor
out
jnp
and
cltd
repz
jbe
and
mov
in
push
arpl
negl
lahf
mov
add
subl
je
dec
stc
cmpl
push
fwait
jnp
movsb
pop
adc
mov
and
dec
and
rcrb
pushf
stos
pop
mov
sarl
cltd
pop
jnp
out
inc
stos
imul
jnp
and
ficoml
bound
jnp
sbb
repz
fistpl
push
pop
mov
icebp
pushf
inc
aam
dec
fwait
daa
mov
scas
movsb
out
cmpsb
inc
mov
bound
xchg
push
inc
test
xchg
jbe
data16
scas
jae
dec
orl
inc
jnp
xchg
mov
mov
loope
mov
adc
jae
shll
or
xchg
jno
cmp
hlt
adcb
jnp
or
cwtl
jnp
pop
pop
testb
ja
cmp
testl
mov
xlat
jnp
lret
mov
stc
sahf
sub
mov
out
pushf
pusha
jnp
test
sub
mov
push
jnp
ret
sarb
ss
outsl
lds
sbb
insb
jnp
adc
push
icebp
fwait
jmp
sbb
sbb
fistpl
nop
aad
idivl
fidivrl
mov
out
xor
insl
pop
fdivl
sti
jmp
pop
sub
jo
jecxz
cmpsl
clc
aad
jae
jns
mov
xchg
cmp
push
data16
rcrb
pusha
fcompl
jne
clc
ret
jnp
loopne
lods
outsb
int3
out
mov
pop
int
sti
dec
jnp
rcll
or
cmpsb
inc
adc
mov
jnp
jecxz
push
and
inc
les
cwtl
in
cli
pop
ss
jnp
popf
xchg
mov
mov
jmp
in
cmp
sub
lods
or
dec
push
jmp
pop
popf
loope
sarb
aad
jnp
cmp
ds
shl
mov
jne
cmpsb
mov
cmp
mov
lea
dec
in
adc
jnp
lods
push
insb
dec
pop
mov
cmpsl
xorl
mov
push
out
jecxz
jnp
imul
bound
mov
std
cmp
in
and
push
pop
sbb
xor
push
insb
stos
je
or
jnp
pop
aaa
adc
cwtl
sbb
testl
mov
ja
lods
add
fstl
fidivrl
xor
jnp
mov
rorb
jnp
xchg
push
pop
jecxz
lods
jno
mov
add
mov
or
xor
sbb
pop
lret
push
fwait
sarb
sub
pop
or
and
adc
inc
cli
mov
inc
fdivrs
inc
dec
xor
in
negl
or
loop
scas
jno
sahf
xlat
push
pop
jnp
lods
xchg
rcll
pushf
jnp
push
cmp
adc
cld
jnp
es
xchg
pop
inc
jnp
add
loop
fnstenv
popa
jae
scas
jle
orb
xor
fsubrs
jnp
mov
adc
jnp
jo
dec
movsl
lret
imul
ss
pushf
mov
push
mov
inc
mov
dec
or
scas
outsl
pushl
pusha
push
movsl
dec
jnp
cmc
sbb
sub
pop
popf
imull
sbb
push
jne
ljmp
fidivrs
lcall
jnp
bound
jecxz
aas
stc
adc
fstl
jno
xor
jnp
mov
or
out
imul
ljmp
jnp
cmp
in
cmpsb
ja
es
sub
rorb
jnp
lods
add
xchg
xor
jg
mov
mov
pushf
dec
cmp
insl
repz
jnp
or
adc
dec
jnp
lods
sub
imul
fwait
jns
adc
fisubrs
jae
pushf
sbb
cmp
xorl
fidivs
mull
xchg
xor
pop
stos
test
pop
mov
xbegin
mov
ss
lods
jnp
fsubrs
xor
sub
inc
cld
pushf
xor
cmc
add
mov
cli
stos
push
jnp
outsb
dec
movsb
sbb
push
xchg
mov
mov
add
call
outsb
push
push
aaa
pop
jb
movsb
iret
fmull
mov
es
gs
and
sbb
popa
lret
add
int3
outsl
mov
mov
cmp
xchg
data16
arpl
test
popf
das
adc
imul
sbb
jl
outsl
fsubp
dec
popa
insb
stos
jnp
outsl
call
mov
es
sbb
insl
lods
jnp
mov
repnz
push
pop
or
hlt
ss
mov
lret
outsb
xchg
sti
and
add
mov
jnp
push
sbb
dec
jb
xor
lods
or
rorb
in
pop
xchg
cmc
sub
dec
sbb
cmp
mov
fdivrl
or
pop
lret
or
nop/reserved
in
mov
inc
gs
movsb
arpl
cli
popf
in
jnp
lods
addr16
xchg
fstpt
mov
test
xor
add
arpl
sahf
mov
jle
jbe,pn
and
jb
jnp
xchg
iret
mov
jnp,pn
pusha
dec
xor
aam
inc
jnp
lea
mov
into
jnp
cmpsl
in
jae
push
push
fsubr
out
and
mov
cmpsb
xchg
outsl
xchg
fbstp
xor
clc
ss
or
add
loop
into
xor
repz
jnp
movsl
xchg
mov
lock
popf
imul
push
sub
lea
scas
jns
sbb
divb
pusha
sbb
testl
test
hlt
sahf
in
sub
out
mov
cmc
pop
mov
mov
xor
insl
pop
cmp
and
mov
jae
stos
cs
lahf
jnp
cmp
cmp
sbb
outsl
xlat
jns
test
add
jno
shl
or
jnp
dec
pop
or
lods
mov
adc
into
daa
xchg
or
pop
outsb
jp
iret
movsb
lock
jnp
fisttpl
sub
push
scas
cmp
mov
adc
cltd
mov
jle
sti
outsb
aam
dec
push
pushf
pop
jnp
cmp
mov
jnp
das
xchg
cmp
nop
test
pop
sub
jnp
xor
add
cmp
call
lret
dec
orl
jb
cmp
pushf
mov
pop
out
dec
cmp
aaa
fbstp
insb
icebp
lock
push
mov
xchg
dec
mov
xchg
out
push
pop
dec
sbb
fwait
je
or
add
or
pop
push
jne
mov
sarl
js
sub
push
rolb
mov
in
jnp
sbb
sbb
jnp
and
addb
jl
jno
jo
jne
jnp
icebp
addr16
insl
cld
lods
fists
push
lea
or
jnp
js
clc
push
or
or
inc
push
sub
push
rcrl
mov
or
or
adc
ljmp
adc
jnp
jp
jbe
or
sahf
or
inc
jae
jne
mov
mov
push
sub
aas
clc
sub
rcrb
add
xchg
mov
sbb
fbstp
jo
insb
push
inc
push
jnp
sub
cli
inc
and
bts
outsb
fidivs
jae
repz
dec
fstps
scas
pop
out
and
mov
jae
push
sbb
aam
sub
and
test
popf
repnz
jnp
pop
lcall
outsb
call
adc
inc
pop
mov
and
rclb
leave
loopne
into
jnp
es
jp
std
cmpl
xchg
mov
cmp
jnp
adc
mov
lods
sti
mov
jno
pop
mov
sub
mov
cmpsb
divb
or
jnp
pushf
gs
lods
cmp
in
sbb
lods
jnp
jmp
mov
test
mov
jnp
ret
shrl
mov
sub
in
dec
jnp
adc
sbb
add
jge
pop
cmp
inc
jnp
repz
sub
sarl
jecxz
out
rcl
fs
jo
clc
add
xchg
inc
jnp
pusha
not
out
adc
insb
and
int3
lock
js
imull
loope
jmp
sarb
fstps
sbb
out
les
call
xor
popa
ja
xchg
lods
insl
hlt
jnp
pop
notl
sub
fcmovne
sbb
pushf
jnp
lret
pop
out
push
orb
ja
sti
pop
loope
jns
fwait
cmp
roll
add
popa
xlat
cmpsl
imul
in
sarl
mov
push
sbb
inc
xchg
mov
dec
popf
test
shll
in
xor
and
data16
call
jnp
cmp
jnp
sub
pushf
mov
and
repz
sub
dec
not
mov
jnp
pusha
or
jnp
aaa
jae
sahf
gs
jnp
adc
lods
popa
or
lods
dec
je
shlb
cwtl
insl
bound
xchg
out
push
add
cmp
jae
loope
mov
out
lcall
jnp
das
xlat
loop
dec
fldenv
jnp
mov
and
pop
inc
jecxz
mov
cmp
insb
jne
orb
imulb
ss
in
sbb
inc
adc
fstpt
dec
pop
lea
xor
xlat
pop
sub
jnp
jmp
adc
inc
out
inc
pop
jns
inc
jnp
outsb
mov
jmp
push
inc
or
pop
popa
ja
cmpsl
adc
add
adc
push
add
xchg
insl
cli
adc
dec
pop
andb
subl
test
addr16
jbe
xor
in
mov
sti
inc
sub
mov
pop
stos
pop
jnp
cmpsl
mov
ja
movb
lahf
arpl
sub
subb
fdivrs
inc
cli
mov
push
lcall
xchg
std
xlat
daa
clc
divb
add
or
add
jnp
ss
call
and
cmp
orl
pop
fucomi
into
add
xchg
frstor
stos
sub
shlb
mov
cmp
pop
jno
add
mov
js
pop
imul
jae
xchg
xlat
cld
sub
mov
leavew
add
ficompl
jnp
push
pusha
xchg
xchg
aam
sarb
cmp
sbb
xor
repnz
das
stc
lods
mov
in
cmp
and
or
xlat
fs
repz
mov
pop
jnp
negb
mov
xchg
inc
pusha
fcompl
pushf
add
push
jnp
jg
mov
mov
cwtl
push
ficomps
or
repz
aaa
mov
lea
jnp
movsl
out
dec
xchg
pop
jl
sub
or
gs
xchg
scas
pop
lcall
fsts
dec
daa
outsl
adc
pop
mov
mov
lods
sti
mov
mov
mov
mov
dec
fnstcw
xlat
adcl
call
xchg
dec
fdivrs
cmp
lods
or
jae
out
add
cli
shl
mov
enter
jns
pusha
fsubrp
jnp
xlat
orb
loop
dec
xchg
jnp
push
xchg
dec
aaa
gs
add
inc
sbb
popa
idiv
pop
stc
jnp
mov
ret
dec
jo
jnp
jmp
ljmp
jnp
sbbb
outsl
andb
pop
dec
jnp
lea
mov
outsb
test
pop
call
mov
xchg
or
or
fs
dec
arpl
aas
dec
jmp
repnz
in
fistpll
mov
sbb
mov
inc
mov
jnp
add
and
jle
mov
insl
sbb
int3
or
jb
testl
lock
push
out
jne
bswap
jnp
mov
cmp
xor
jns
cmp
or
adc
and
or
push
sub
xlat
lret
pop
loope
jnp
pop
dec
xchg
mov
or
aam
rol
pop
cli
mov
jb
sbb
pushf
adc
jnp
cmp
mov
imul
out
ds
imull
mov
pop
fisttpll
jnp
jo
popf
dec
idivb
push
imul
mov
mov
orl
insl
or
rorb
fsubrs
sbbl
loopne
dec
push
push
push
clc
cmp
cli
add
std
cmp
jnp
mov
mov
jnp
in
sub
jnp
add
inc
dec
leave
lahf
imul
xchg
jno
lcall
sarb
mov
mov
push
sbb
outsl
jnp
inc
and
inc
outsb
dec
sub
sti
repnz
nop
pop
pop
and
jnp
push
or
hlt
imul
int
jno
leave
sahf
lahf
jnp
popa
add
pop
ret
in
jnp
std
mov
jecxz
adc
sbb
mov
sbb
fisubrs
testl
int
decl
mov
dec
ja
jle
mov
mov
jnp
roll
push
mov
loopne
dec
sub
mov
imul
lcall
mov
out
ja
mov
testl
imul
addl
sub
push
xor
push
sahf
jnp
shr
mov
jnp
xor
mov
dec
test
ss
cwtl
imul
loope
ret
in
clc
rolb
xor
lea
dec
mull
out
sub
mov
aam
or
hlt
cli
push
mov
js
cmp
push
imul
pop
imul
jns
pusha
jne
nop
jnp
jbe
sub
negl
lods
add
cmp
xor
jnp
fldcw
out
mov
sub
rolb
out
in
jae
and
jnp
call
or
jmp
xchg
mov
das
or
lods
jae
arpl
mov
mov
sbb
ret
jnp
or
push
jb
gs
inc
add
adc
mov
jmp
and
into
pop
cmp
je
xchg
leave
shrb
idivl
inc
sub
sbb
jnp
cmp
lahf
addr16
dec
imul
cs
ss
insl
fidivs
inc
filds
jnp
jge
lods
rclb
xor
xor
insl
cmp
cmp
sub
ja
push
inc
ja
cmpsl
jnp
jp
out
scas
ds
xor
ret
or
xchg
cli
mov
es
xchg
sbb
ss
jnp
xor
test
lock
cmp
pop
stos
insb
or
push
pop
jp
pop
jnp
test
jge
pop
jnp
aam
push
dec
lahf
sarl
jnp
in
xchg
rclb
dec
sub
addr16
mov
pushf
pop
push
push
jnp
mov
sbb
or
rcrl
mov
mov
mov
sbb
test
inc
xlat
out
push
loop
and
add
push
int3
inc
jnp
mov
xchg
cmpsb
adc
mov
sbb
jnp
mov
fdivs
aas
movsl
xor
xor
cltd
xchg
ljmp
dec
jae
pushf
je
ja
notl
push
sbb
iret
jno
jle
xchg
stos
fwait
pushf
pop
lds
mov
inc
and
lcall
jno
ret
or
jae
mov
mov
sub
push
ja
xchg
sub
sbb
add
xor
or
jmp
mov
mov
cmc
packssdw
mov
lods
addr16
jge
or
cmp
insl
jnp
loop
cmp
or
pop
pop
lods
es
mov
inc
sti
outsl
jno
add
and
add
jecxz
push
lock
mov
sbb
lea
scas
fbld
cwtl
mov
js
cli
jnp
xchg
clc
lret
lret
pusha
jnp
dec
xor
jnp
pop
pop
sub
out
rolb
jno
loope
test
pop
dec
leave
push
aas
push
jnp
mov
pop
sub
into
cmpl
jl
adc
stos
dec
push
aam
adc
push
lock
lods
in
jnp
lods
and
cmp
daa
test
inc
mov
outsl
add
xor
sbb
mov
inc
into
inc
jle
lcall
emms
aam
jnp
add
data16
sub
lods
or
jg
lahf
cmp
or
jnp
mov
mov
bound
push
test
xlat
cld
cs
jnp
adc
push
out
cmpsb
loopne
sbb
ds
jnp
rolb
pushf
jg
push
sub
out
repz
jno
popa
fidivrs
stos
jns
xor
inc
js
clc
cld
mov
xor
call
or
ljmp
fisttps
lock
sar
pusha
jmp
add
mov
xchg
gs
testb
call
mov
add
orl
jnp
inc
xchg
dec
sti
and
push
loopne
or
mov
dec
push
xchg
stc
inc
and
cmp
jnp
adc
jmp
xor
mov
pop
pop
xchg
push
flds
call
cmp
pusha
jnp
xchg
mov
adc
jnp
adc
pop
data16
int3
mov
out
mov
pop
in
add
int3
shrl
fiaddl
jnp
or
inc
sahf
jnp
jg
xor
inc
int
ret
fiaddl
mov
or
fmuls
dec
jnp
pusha
jge
icebp
cli
aad
pushf
ret
dec
inc
sarl
jmp
pcmpgtd
lret
jnp
lock
ds
out
and
mov
lret
out
mov
jnp
in
insl
test
mov
sbb
or
and
xchg
out
aaa
jp
sub
lret
outsl
mov
xor
aad
cli
pop
mov
ret
ret
jb
lock
jae
and
jnp
stc
or
inc
pop
cmp
mov
push
mov
pop
xor
insl
xchg
pop
sbbl
or
push
cmpsl
jnp
mov
push
sbb
subl
imul
xchg
in
xor
mov
mov
dec
lods
hlt
fcmovnbe
cmp
jnp
addr16
out
mov
outsb
imul
fldt
add
jecxz
jo
and
sbb
loop
sub
push
mov
or
jbe
dec
mov
fs
jnp
outsl
mov
xchg
dec
xor
mov
xor
mov
mov
or
in
not
push
pushf
sub
movsb
fs
mov
in
jnp
les
scas
and
xchg
lods
inc
imul
cmp
cli
lret
xor
out
inc
neg
jnp
imul
or
push
inc
rorl
mov
push
jnp
dec
and
lods
call
cmpsl
pop
shl
jno
jnp
pop
mov
ret
mov
fwait
aam
jne
pop
stos
sbb
push
jnp
test
fistpll
pop
cmp
xchg
inc
sarl
mov
dec
dec
addr16
push
jg
das
jnp
pop
mov
lods
push
pop
sahf
cmp
lods
fadd
jnp
xlat
pushf
rol
jg
aad
repz
pop
mov
jnp
pushl
outsb
in
add
repnz
dec
jnp
jbe
pop
sbb
pushf
or
cmpl
jnp
sahf
push
fwait
sub
jnp
js
adc
in
stos
test
dec
rolb
sub
inc
stos
stc
add
lods
or
dec
push
mov
or
mov
dec
inc
push
mov
insl
push
jnp
xor
fwait
add
aam
jnp
rcrl
fstpt
lods
gs
jnp
ss
icebp
mov
xchg
loopne
adc
mov
loope
iret
je
dec
cli
pop
pushf
jb
jge
stos
out
add
pop
xor
cltd
mov
gs
and
scas
xchg
sbb
pop
jnp
sahf
aas
daa
test
aam
push
cwtl
push
es
lods
mov
addr16
inc
sbb
push
jbe
xlat
outsb
push
lods
mov
cmp
add
jnp
ss
mov
sbb
gs
jmp
dec
mov
popf
in
fdivs
mov
arpl
sbb
call
xlat
ja
mov
lahf
outsl
addr16
sbb
sarl
ficomps
jae
clts
sub
scas
jnp
ret
push
sub
jnp
sub
dec
cmp
xor
push
popa
repz
movlps
es
das
push
jnp
jle
mov
push
ja
jnp
pusha
dec
pop
cwtl
mov
ficompl
or
xor
fists
jnp
daa
js
or
sub
repnz
insl
das
or
and
leave
ljmp
call
or
xor
mov
call
shll
xorl
cmpl
or
and
jnp
sbb
xchg
sub
int3
sti
jo
jnp
stos
xor
jnp
push
jmp
xchg
fistpll
inc
mov
xor
adc
cmpsb
out
jnp
inc
xor
inc
nop
es
push
gs
dec
pushf
jne
mov
and
mov
push
pop
jnp
dec
sub
xchg
lds
int
call
jnp
fcompl
xor
or
divl
fsubp
aad
outsb
sbb
lcall
out
scas
xlat
mov
xchg
mov
movsb
cmp
sahf
out
mov
nop
xlat
xchg
adc
daa
loopne
pop
aad
ds
mov
cmp
jae
or
jnp
xchg
xor
dec
dec
xor
repnz
lcall
xlat
out
fdivs
and
stos
push
jnp
dec
jp
cmp
sub
xchg
cli
xor
test
xlat
jnp
out
push
jbe
aad
jnp
mov
aaa
xor
mov
or
or
jmp
xchg
stos
cmp
pushf
repz
mov
out
bound
push
cmpsb
test
cmp
xchg
push
lret
push
lock
xchg
sub
outsl
fistps
adc
dec
daa
out
mov
mov
jbe
mov
adc
test
cmp
int3
popf
sbb
jg
xlat
jp
push
leave
jns
jnp
xor
loopne
call
xlat
testl
dec
mov
push
out
sbb
aaa
shrb
pop
test
out
repnz
jnp
das
or
lret
aam
fnstenv
and
jnp
mov
xchg
insl
js
mov
jecxz
mov
inc
aas
jae
lahf
inc
stos
outsl
jnp
pop
shlb
cmpb
popf
add
inc
mov
movsl
jg
jnp
call
movsb
cmpsb
adc
jnp
inc
xor
dec
rcrl
sti
cli
mov
cmp
cltd
enter
js
lret
stc
pop
mov
popa
or
push
arpl
outsl
xor
mov
call
jnp
pop
or
xchg
shl
ss
in
jnp
cld
cpuid
jg
jae
pushf
es
inc
lret
xchg
push
mov
push
insl
je
data16
mov
mov
xchg
jnp,pt
xor
cld
xchg
repz
inc
cmp
jecxz
outsb
imull
popa
fs
into
gs
jnp
idiv
fisubs
ss
fnstsw
in
cmp
inc
xor
mov
or
mov
stos
lods
jnp
loop
xor
add
mov
test
add
add
jb
cwtl
daa
loop
mov
outsl
fdivs
xor
stos
and
cmp
sbb
sarb
mov
push
xchg
andb
dec
cmp
mov
movsl
push
jnp
sub
or
sub
or
gs
lcall
mov
jnp
daa
bound
fisubl
pop
jnp
aas
out
fbld
xchg
lock
pop
addl
jnp
add
xchg
jnp
pop
das
inc
mov
sbb
add
dec
lahf
add
mov
cltd
jnp
scas
out
push
arpl
push
push
mov
sbb
xlat
mov
lock
xor
lret
jnp
mov
xchg
ljmp
jnp
mov
mov
imul
inc
xchg
adc
leave
test
fs
ja
dec
cmpsb
push
push
push
sbb
xor
loope
mov
adc
test
jnp
mov
xor
iret
jl
test
jno
or
add
ljmp
leave
jnp
ljmp
sbb
xchg
sbbb
or
divb
and
scas
jmp
mov
xor
mov
je
mov
xchg
jnp
loopne
or
fs
jnp
leave
xor
cmp
pop
popf
jnp
xor
mov
in
xor
push
mul
dec
xchg
in
rcl
shrb
xor
push
mov
into
lods
cmp
mov
das
adc
in
mov
xchg
xor
outsb
test
stc
and
sub
ljmp
mov
out
adc
pusha
xorl
sub
jnp
jno
xchg
xor
pushf
leave
jnp
mov
ja
mov
jge
in
pushf
dec
cmpsl
loop
push
cmp
ja
call
jnp
testl
jb
push
cmp
xor
or
mov
dec
fsub
inc
jnp
sbb
frstor
cmpsb
data16
stc
sub
and
jnp
or
imul
push
call
sarb
xchg
sub
or
mov
jnp
mov
rcll
fstpl
jnp
push
xor
pop
andl
inc
dec
lahf
fiaddl
lcall
lcall
xor
jnp
mov
cwtl
xor
mov
jnp
mov
jecxz
fadd
and
dec
std
push
in
mov
fwait
icebp
cmp
inc
popw
pushf
jne
repnz
negl
and
repz
sbb
imul
mov
xor
jge
fdivs
divb
sbb
les
ja
jo
cmp
das
sbb
push
repz
lahf
hlt
pop
in
jp
or
mov
jae
ficomps
jae
mov
jnp
mov
inc
in
pop
repnz
jnp
lock
or
pop
clc
pop
push
mov
and
jb
hlt
or
mov
cmpsl
dec
mov
jnp
and
lds
add
sub
out
mov
pop
out
push
loope
mov
xor
jnp
sbb
lods
mov
leave
jno
into
add
stos
fidivl
fmuls
outsb
lods
mov
jo
xlat
mov
add
fcmovbe
pushf
mov
mov
adc
arpl
jae
sti
out
or
xchg
cmp
cmp
mov
sub
dec
clc
js
jmp
dec
jg
add
subl
lret
jl
outsb
pop
dec
mov
jnp
sbb
pop
imul
pop
aad
push
add
mov
inc
mov
lods
fcmovnu
and
jo
fidivrs
mov
inc
sti
jnp
bound
sahf
jb
push
sub
xor
jnp
aad
icebp
pop
fdivrs
call
adc
je
dec
mov
lods
push
sbb
and
icebp
push
mul
aas
imul
rcrb
mov
push
mov
fistl
cmp
push
or
dec
je
jno
scas
jns
xor
jnp
leave
imul
jo
imul
popf
push
ss
leave
jae
sub
mov
data16
enter
and
addr16
adc
js
cmc
mov
jmpw
cltd
lahf
repnz
ljmp
sub
jns
sub
mov
jns
jmp
mov
sub
mov
dec
stos
addr16
xor
xchg
ror
ret
in
scas
repz
daa
out
pop
and
cmpsb
ret
icebp
in
imul
insl
addr16
js
inc
pop
xlat
push
cli
cmp
mov
push
mulb
in
and
jnp
cmp
mov
and
jnp
mov
add
xor
call
and
jp
stos
sbb
jae
int3
jnp
pop
dec
mov
or
lea
shrb
lods
cmp
imul
push
jmp
jb
jne
xor
jnp
ljmp
jnp
mov
or
xor
mov
lret
call
scas
lods
insl
or
sbb
mov
or
sarb
dec
mov
adc
jne
jnp
mov
repnz
aaa
sbb
xchg
jae
loopne
fdivrl
jnp
or
jecxz
inc
mov
xor
jp
pop
cmpsl
out
test
mov
or
xor
mov
in
cmp
add
inc
mov
jmp
ja
mov
jnp
mov
stc
xor
xchg
push
cmp
jnp
clc
mov
push
int3
mov
testb
pop
xor
popa
rcll
insl
sbb
fistpll
sub
jnp
dec
call
fsqrt
in
jbe
cmp
jnp
not
pop
sti
add
inc
jnp
mov
xor
add
addr16
lahf
or
mov
lret
lock
add
inc
mov
idivb
inc
fwait
call
dec
and
icebp
shl
jmp
in
pop
mov
xlat
mov
popf
xor
scas
lahf
out
mov
aaa
jnp
push
lret
jae
aas
cmp
push
insb
xor
push
xor
mov
je
sub
pushf
das
jno
sbbl
cmp
into
push
xor
stos
testl
pushf
mov
repnz
imul
aaa
push
int
adc
jnp
es
inc
push
push
addr16
xor
or
addl
and
jnp
iret
push
jnp
sbb
into
jo
icebp
pop
je
cmpl
mov
cmp
pop
lret
cmp
mov
ss
out
xor
call
scas
adc
enter
int
or
xor
sarb
fs
jbe
xor
pop
and
jns
mov
lds
js
mov
sbb
jno
iret
addr16
sbb
loope
out
imul
mov
outsb
stos
mov
dec
inc
xchg
mov
fdivrs
mov
and
imul
aas
pop
sbb
sub
jnp
in
out
cmp
arpl
add
cli
and
xlat
push
mov
fistpl
mov
add
das
mov
inc
in
loopne
subl
outsl
ficoml
or
add
repnz
inc
jnp
lcall
fmuls
jbe
into
inc
cmovo
jb
mov
or
pop
inc
push
les
push
jnp
dec
hlt
rcll
adc
test
pusha
lahf
imul
sbbl
adc
lods
in
jae
faddl
mov
loopne
mov
jo
pop
fnsave
dec
pop
dec
leave
adc
adc
inc
and
mov
inc
dec
mov
adc
js
inc
movsb
imulb
dec
sub
and
popa
sub
jnp
adc
mov
xor
dec
stos
jnp
push
fwait
sub
jnp
dec
cmp
insl
mov
stc
mov
loop
scas
inc
std
mov
mov
jne
jge
xor
mov
lods
in
cmp
ja
cmpsl
cmp
jnp
out
pop
ret
sahf
imul
jge
xchg
mov
shl
or
sti
sub
dec
outsb
icebp
jnp
cs
cmp
es
xchg
or
aaa
gs
jnp
cmp
andl
jnp
sbb
frstor
xchg
aam
lea
jnp
and
pop
ret
jnp
jecxz
cmp
mov
xor
rorl
insb
push
loopne
fdivl
movb
test
push
dec
int3
mov
jnp
bound
lods
lret
cmp
outsb
xor
rep
int
lcall
out
xlat
jle
sti
cmp
mov
pop
jg,pt
addr16
xor
pop
jnp
pusha
rcrb
xchg
jnp
mov
lock
sub
lret
push
mov
push
out
je
repz
mov
hlt
mov
push
inc
dec
outsl
inc
pop
jnp
mov
int3
insl
fs
mov
shll
lahf
mov
loop
jnp
repnz
lret
add
addr16
lods
mov
jnp
adc
out
stc
or
fs
mov
add
mov
or
jnp
mov
lcall
das
push
pushf
imul
sub
jnp
in
cmp
outsb
xorl
idivb
lock
inc
loope
pop
and
nop
in
mov
into
sbb
sbbl
and
lock
inc
mov
insl
data16
pushf
jle
iret
xchg
mov
out
insb
in
mov
push
adc
jnp
add
dec
arpl
jnp
fucom
and
or
mov
icebp
add
mov
jg
imul
cwtl
jae
fpatan
jnp
xchg
aaa
jb
inc
sti
mov
or
les
add
sub
jge
add
fdivrs
cmp
jecxz
stos
add
jae
mov
popf
push
pop
jmp
lods
iret
sbb
mov
cwtl
sarl
jns
jbe
push
inc
xor
lcall
jnp
out
add
stc
iret
xchg
pop
push
out
mov
jns
dec
cmp
xorl
in
cmpb
shll
mov
lods
outsl
inc
cmc
xchg
stc
or
les
test
cmp
lret
jne
icebp
movsb
sbb
orb
aas
cmp
mov
jnp
mov
aam
sbb
ss
jne
loope
jl
sub
push
ja
iret
push
add
flds
loope
mov
inc
mov
cmp
sbb
xor
lods
and
jnp
cmc
imul
pushf
into
out
mov
fstpt
xchg
jo
xor
jmp
push
inc
jae
lret
pop
mov
and
mov
sahf
out
fildll
xchg
cmp
stc
xor
icebp
arpl
xor
jge
jecxz
out
pushf
fcomps
and
dec
cmp
sbb
or
add
and
adc
xchg
jnp
pushf
pop
jae
adc
jnp
bound
jge
stos
movsl
call
shll
outsl
notb
fcomps
and
imul
fstl
shl
jnp
or
pop
dec
dec
pop
lret
in
jp
lods
movsb
adc
push
es
jb
mov
aaa
cmp
cltd
mov
inc
ds
dec
lcall
mov
insb
push
inc
cmp
pop
pusha
jnp
xor
fildl
fdivrs
push
fdivl
xchg
ss
mov
add
mov
push
sub
xchg
add
stc
mov
stos
inc
add
xor
frstor
or
test
test
in
call
lret
insb
jp
mov
xor
mov
shrb
insl
lods
mov
maskmovq
divl
arpl
popf
sub
fistpll
push
cmp
fwait
or
popa
sbb
xor
xchg
int
fwait
jp
add
add
mov
std
int3
push
jnp
xor
pop
stos
and
jnp
sbb
into
pop
mov
lods
adc
jnp
xchg
jge
jbe
insb
popf
jnp
jle
adcb
daa
push
test
pop
add
and
xor
fiadds
adc
lods
dec
scas
fsubs
stos
push
jnp
jg
push
xlat
pop
xor
mov
jnp
nopl
cmp
out
jle
fcoms
rclb
outsb
aad
mov
orl
icebp
lods
add
je
jnp
test
push
sbb
jnp
add
sar
or
mov
xchg
mov
imul
lret
imul
addr16
inc
dec
cmp
inc
incl
mov
fsubrs
imul
or
cmp
cli
imul
mov
mov
les
and
stos
jae
sub
or
lds
shrl
sti
loop
ds
subl
popa
and
icebp
sbb
xor
cmc
cld
push
push
das
xchg
js
es
sti
sub
dec
mov
cmp
or
jae
mov
fcoml
outsb
mov
add
mov
jae
int3
xchg
push
movsl
push
jnp
pop
bound
mov
add
pop
shrb
js
sbb
inc
js
cltd
pop
mov
mov
or
daa
jnp
xlat
mov
loope
iretw
jnp
jne
adc
in
jnp
cmp
sub
insb
shlb
mov
sbb
repnz
pop
or
out
mov
dec
scas
repnz
mov
jle
and
sbb
mov
inc
xchg
cli
imul
push
xor
aaa
mov
inc
cs
push
xor
or
std
add
hlt
dec
icebp
pop
loopne
fwait
jnp
xor
mov
jnp
inc
jae
cmp
jnp
and
mov
pop
int
sub
icebp
sbb
jno
rclb
dec
in
cmpsl
jnp
mov
and
jnp
sbb
adc
jnp
xor
pop
fldcw
aaa
jnp
cmp
lahf
mov
push
pop
lods
mov
les
add
and
pop
jbe
pop
imul
mov
sub
iret
not
dec
fcoms
imul
add
jge
jnp
in
sbb
ss
cmc
inc
ja
fdivrl
mov
push
sti
xor
jnp
sbb
rcll
mov
push
jnp
shlb
or
xor
xor
fdivrl
push
in
push
mov
sbb
push
pushf
gs
jbe
lret
test
pop
sub
jns
dec
popf
and
orb
inc
mov
insb
out
xchg
icebp
cmp
fisttpl
jnp
mov
popa
or
push
pop
sbb
clc
js
repz
dec
add
add
movsb
pusha
and
into
jnp
pop
jbe
mov
and
mov
incl
jnp
push
scas
sbb
fisubs
lods
cmc
pop
aam
ss
jle
outsb
out
fldt
test
popa
mov
jae
xlat
xchg
test
pop
jo
cmc
xor
test
or
jl,pt
pop
imul
cmp
jne
sub
sbb
dec
rcrb
ret
out
fidivrl
mov
xor
lds
push
adcl
dec
out
lock
arpl
sahf
in
outsb
je
jnp
sbb
stc
in
mov
movsb
fdivs
and
pop
mov
mov
push
dec
addb
fucomp
jnp
pusha
or
pop
arpl
add
jl
test
push
inc
xlat
sub
imul
fs
inc
jnp
loope
pop
and
push
inc
sub
jne
test
pop
pop
insl
repnz
push
jae
mov
stc
arpl
sub
cmp
jne
repz
call
pop
std
push
jle
aas
cmp
lock
mov
mulb
sub
imul
jnp
lods
scas
or
mov
test
mov
jnp
and
add
sub
add
popa
mov
xor
dec
adcl
push
mov
ljmp
add
mov
rolb
jae
push
push
rclb
push
and
pusha
nop
insb
aam
hlt
sbb
out
sti
add
mov
cmp
fidivrs
js
and
daa
iret
sarb
sbb
arpl
fidivl
sub
leave
jae
xchg
jne
cmp
xor
jnp
dec
and
jbe
loope
loopne
outsl
sub
shrl
jne
outsl
xor
gs
out
jnp
ja
lahf
add
mov
sub
arpl
aad
cmp
movsl
aaa
jnp
mov
dec
int3
int
or
cmp
pushf
or
mov
mov
inc
xor
mov
jnp
push
shrb
lea
out
mov
mov
or
mov
xor
adc
mov
dec
cmp
mov
out
add
push
xor
cmpsl
call
fwait
jnp
mov
hlt
stc
sbb
movsl
push
mov
sub
or
jne
or
mov
push
cmc
pop
jnp
pop
push
aam
fbstp
mov
or
sbb
jmp
loopne
cmp
pop
subl
andb
or
fimull
fwait
movsb
mov
lods
pop
lock
in
ret
stos
mov
fisttpll
adc
test
mov
lods
fnstcw
sbbl
stos
lods
cmp
dec
cltd
les
ljmp
cmp
mov
fadds
outsl
shlb
jnp
push
pminsw
sbb
pushf
sbb
sbb
dec
jnp
lret
dec
stos
lods
rol
mov
sarb
mov
fidivrl
mov
dec
push
push
inc
lret
jnp
jo
leave
test
cmp
sub
popa
data16
mov
out
iret
mov
cmp
jl
cmp
adc
mov
pushl
jns
cmp
jnp
rcll
fsubrs
xchg
loope
or
jmp
jnp
dec
jbe
in
sarl
shll
enter
lea
mov
push
push
fadd
int3
adc
jnp
cmp
stos
inc
inc
int
negb
mov
enter
fwait
xchg
call
jnp
lock
add
sahf
lods
mulb
jnp
mov
push
cmp
xchg
cmpsl
add
repnz
out
jnp,pt
dec
xchg
mov
jnp
pushf
call
cmp
add
jecxz
outsl
leave
fst
cli
lcall
enter
sbb
js
jo
sahf
mov
repnz
js
mov
lahf
fdivs
pushf
jnp
and
mov
in
sub
xchg
jnp
loopne
das
mov
xor
pop
and
jnp
mov
cmc
pop
jbe
bound
xchg
jns
ret
push
sbb
jnp
shr
pop
sbb
pop
jnp
scas
mov
subb
dec
pushf
mov
mov
jnp
decl
dec
fiaddl
cmp
and
lea
jnp
iret
xchg
mov
sub
inc
jnp
or
cmp
repz
adc
cmp
mov
cs
or
fsubrs
adc
sarb
cmp
mov
nop
int3
jnp
aaa
jae
dec
inc
sarb
loop
div
das
cmpl
dec
popf
pop
jne
test
daa
call
adc
sbb
outsl
test
hlt
cmp
orl
imul
popa
push
push
cmp
inc
jne
fs
insl
lods
push
mov
repnz
imul
iret
insl
mov
or
lret
out
jae
xlat
adc
or
sub
jge
push
sbb
adc
jns
add
dec
jnp
push
lods
adc
sbb
imul
rclb
mov
sahf
int3
xchg
mov
jnp
ljmp
jnp
movsl
dec
test
mov
or
fistpl
inc
mov
call
bound
pusha
jnp
and
xor
jnp
adcb
inc
jo
imul
aad
mov
psubsb
inc
fcmovb
and
jnp
pop
xor
cmp
testb
jnp
daa
jg
cli
cmp
jnp
mov
sahf
andl
push
divl
das
mov
fdivs
jnp
mov
subl
push
jnp
jne
lret
scas
jl
imul
je
dec
push
outsl
and
pop
push
pop
aaa
mov
dec
insl
aas
dec
or
lock
push
bnd
and
xchg
push
mov
stc
dec
ja
pop
xor
retw
xchg
inc
sbb
dec
inc
negl
pop
mov
out
ret
iret
fstpl
and
inc
call
sbb
int
dec
cs
push
movsb
sub
inc
repz
add
jg
sahf
and
lods
adc
dec
inc
jnp
aam
mov
jnp
mov
in
cmp
push
push
call
fbld
sarb
xor
sub
dec
or
ret
popa
or
jnp
pop
into
push
jg
and
pop
cli
int3
lock
std
jecxz
pop
jnp
xchg
xor
jnp
sbbl
shl
sahf
mov
scas
push
add
xchg
mov
mov
inc
dec
insl
imul
cmp
mov
es
test
hlt
xchg
jecxz
repnz
xchg
add
add
call
push
adc
imul
lods
loopw
xlat
insb
or
jnp
adc
push
cmp
jb
pop
out
mov
pop
adc
xlat
or
xchg
or
jecxz
in
or
or
jnp
sub
dec
aas
mov
pop
int3
shll
addr16
or
jne
inc
dec
andb
ss
jae
sbb
push
ror
sbb
scas
push
jl
mov
in
ret
dec
js
push
mov
jb
or
repnz
lret
inc
pop
jnp
enter
fcomps
sbb
in
out
fldcw
ss
in
and
adc
in
and
dec
jp
cmp
and
rclb
sub
pop
xlat
sub
xchg
cmp
imul
movsl
sub
inc
jns
xor
cmp
jnp
test
mov
stos
ja
jnp
mov
mov
sbb
mov
xchg
lods
sbb
mov
fdivrs
sarl
adc
inc
sahf
in
or
xor
sar
in
dec
and
imul
jb
inc
lret
push
insl
scas
dec
sbb
mov
sbb
pop
jnp
std
stc
mov
pushf
dec
xchg
lock
mov
jnp
and
nop
jnp
xorl
jnp
jle
or
sub
jg
jnp
shlb
jnp
push
out
mov
call
jae
push
ds
js
in
inc
push
xchg
xchg
les
sub
inc
iret
mov
xchg
jae
cmpsl
sbb
push
jb
lods
push
sbb
andb
call
movsb
and
push
jae
push
das
adc
int
fisubs
xor
mov
stos
clc
xor
repz
das
pop
fidivl
xchg
and
scas
or
push
out
jnp
loop
insb
sarb
push
addr16
and
daa
gs
xchg
xor
push
jnp
arpl
mov
divl
xchg
lret
pop
dec
lea
outsl
push
in
sub
negb
cmp
pushf
ja
mov
jge
fcmovnbe
stos
jnp
push
adc
xchg
ss
mov
or
pushf
jno
out
push
jnp
aaa
mov
sarl
fnop
ss
cwtl
jl
aam
and
mov
push
out
aas
mov
jb
add
sub
das
sub
insl
pop
out
sub
outsb
and
jbe
sbb
cli
cmp
sbb
in
xchg
jnp
adc
movsb
or
pushl
pop
imul
sbb
dec
pop
jbe
aam
dec
xchg
int3
jns
insl
shl
int
lahf
lods
sub
jae
bnd
repz
adc
mov
cmc
sub
jno
movsl
pop
mov
jo
xor
loop
xbegin
loopne
das
js
ficoms
mov
xlat
addr16
cmpsb
fisubrl
or
and
jne
shrb
lods
shl
test
inc
mov
aaa
or
shrl
mov
adc
out
lock
cli
jnp
inc
or
incb
out
jnp
int
ret
bound
imul
push
loope
dec
repnz
arpl
pop
mov
lock
in
sub
loop
je
mov
push
inc
out
jns
jb
in
inc
xchg
nop
jnp
pop
mov
pop
stos
sbb
sbb
sti
mov
pop
jnp
xor
inc
dec
cli
rorb
xchg
les
adc
pop
inc
xchg
mov
add
cld
js
sbb
xchg
inc
fcmovb
pop
fdivs
jnp
mov
sbb
xor
mov
lods
push
push
subl
fistpl
imul
pushf
popf
sbb
popa
sub
fucomp
call
jnp
xor
inc
pop
adc
out
loope
jne
rcl
stos
call
push
leave
dec
in
push
sub
stc
jnp
jns
mov
fwait
mov
pop
repnz
outsb
das
and
out
lods
rorb
jnp
faddl
and
jge
mov
sbb
jns
jnp
add
cmpsb
je
or
or
mov
stc
jnp
mov
xlat
xchg
cmp
fcom
lods
jae
mov
mov
in
imul
mov
jbe
fidivs
push
jmp
and
dec
jmp
pushf
clc
jnp
mov
mov
mov
aaa
xchg
dec
into
faddl
je
sahf
or
popf
lret
addb
or
dec
fs
repnz
push
sub
adc
xor
cmp
stc
enter
jns
pop
xchg
fs
popa
ret
imul
addr16
out
jne
out
jnp
pusha
sbbb
pop
lods
xorps
and
loope
mov
jnp
stos
jle
xor
test
jne
dec
repz
movsb
pushf
cmp
jnp
lods
jb
lods
stos
push
std
dec
insl
fnstsw
jo
mov
sahf
jnp
shlb
inc
fs
ja
ss
push
lods
in
mov
push
shlb
jnp
ja
nop
fcomip
add
pop
jno
pop
dec
cmp
inc
ljmp
daa
sub
jae
stos
lods
enter
jae
mov
jbe
mov
jnp
mov
pop
jnp
jmp
insl
ljmp
mov
sbb
jns
jnp
loop
xor
dec
cmp
push
pop
jnp
test
dec
adc
xor
daa
xor
popa
mov
fwait
aas
dec
jnp
mov
shl
imul
push
jmp
popa
jnp
push
popf
adc
xchg
clc
xor
lods
insl
adc
cli
jae
ficompl
pusha
movsl
iret
stos
outsl
leave
and
mov
mov
sub
pop
scas
aaa
jbe
pop
jnp
arpl
mov
add
rorb
cmc
and
testl
dec
jg
jmp
cmpsb
es
push
in
dec
and
lcall
imull
popf
jnp
int
mov
dec
push
inc
mov
ljmp
xchg
sbb
aaa
hlt
inc
mov
out
jnp
push
repnz
cmp
mov
jnp
mov
popa
adc
jo
push
call
outsb
xchg
jnp
and
jae
mov
inc
xchg
jns
mov
sub
in
mov
jno
adc
out
stos
xor
jl
cmpsb
push
outsl
pop
xor
or
add
insl
scas
cmpsl
cmp
ljmp
cmc
orb
jnp
pop
and
xchg
sub
mov
lods
je
and
call
and
jae
dec
lods
add
repz
mov
in
pop
aam
insl
add
mov
outsl
cli
arpl
xor
mov
addr16
cmpsb
iret
mov
mov
mov
jnp
cltd
fiadds
cmpsl
dec
lods
je
dec
sub
cmpl
xchg
or
out
cmp
je
dec
fidivrs
shlb
push
dec
inc
hlt
stos
mov
dec
int
outsl
enter
dec
aaa
mov
repz
in
add
sub
mov
xchg
jnp
or
fs
fsubl
lret
lods
cmp
pop
dec
pop
mov
insl
mov
cld
jnp
int3
xchg
jmp
dec
pop
adc
push
cli
push
jnp
push
loop
adc
cmpsb
xchg
xchg
and
jnp
repz
mov
outsl
push
mov
aam
xor
jae
jnp
mov
xlat
xchg
jnp
jge
pop
add
or
or
and
and
cmp
popa
push
dec
cwtl
xor
inc
or
mov
std
sbb
push
repnz
loopne
pop
push
call
jne
xor
rcl
cmp
mov
mov
popa
sub
mov
jb
jb
jnp
lds
loopne
xor
or
jnp
xor
pop
push
pop
jnp
add
mov
and
jge
int
in
das
inc
mov
pop
jae
aaa
jnp
xor
mov
dec
negb
dec
push
aad
add
mov
jnp
cmp
xlat
js
lahf
imul
fwait
push
in
mov
inc
xor
js
shrb
divb
jnp
cwtl
xor
gs
adc
jnp
incl
faddl
cmpl
lea
icebp
mov
pop
mov
add
jns
fidivs
loopne
jg
arpl
dec
xchg
cmc
rcrb
mov
lret
out
xchg
xor
jnp
and
into
xchg
or
or
add
mov
sbb
cmp
stos
mov
cmp
jnp
mov
pushf
iret
push
in
push
add
xchg
cmp
jnp
ret
jmp
cmp
pop
call
fs
jmp
jnp
sub
ds
cmp
adc
jl
pop
jnp
call
mov
sub
in
pop
orl
cmp
xlat
jnp
shll
pop
jnp
sbb
fwait
icebp
hlt
or
jnp
punpckhwd
inc
scas
repz
arpl
shll
daa
jnp
in
leave
xchg
cltd
lea
pop
repz
cmp
push
xor
adc
pop
outsl
fsubrs
loopne
or
daa
jp
adc
jnp
in
xchg
mov
mov
jnp
xchg
pop
cmp
pop
push
inc
jnp
mov
pushf
jnp
rclb
pop
popf
in
push
popa
and
dec
cmp
fidivs
popf
orl
ljmp
cld
jnp
inc
test
jb
jnp
jecxz
daa
pushf
or
js
test
cmpsl
or
icebp
mov
dec
imul
std
inc
mov
jae
xor
inc
cwtl
shll
sub
mov
xchg
icebp
or
or
fbld
inc
shl
lods
mov
fdivs
mov
fstps
jle
das
pushf
jnp
push
and
pop
es
out
aaa
xchg
fdivrp
mov
imul
and
inc
pop
mov
sbb
sbb
xchg
mov
or
jbe
imul
adc
lods
cmpl
cs
cmp
jmp
jnp
pop
adc
or
icebp
cmc
into
xor
jne
jbe
pop
pop
mov
cmp
ss
subl
sub
add
xor
in
fsubl
lods
pop
jnp
clc
push
jg
or
jnp
mov
dec
jmp
mov
insb
mov
xor
popa
shll
sub
call
lret
out
lods
cltd
inc
lds
xchg
adc
in
call
bound
shl
aad
aaa
mov
jp
pop
xchg
cmp
icebp
in
into
shr
test
jnp
jne
or
sub
lret
cmp
sub
pop
gs
imul
sbb
outsl
cmp
clc
mov
mov
int3
pop
fsubrs
jmp
ret
outsl
xchg
test
xchg
inc
push
mov
js
ss
cmc
jnp
fwait
pop
test
sbb
jnp
ljmp
dec
scas
mov
repnz
jmp
jnp
mov
ds
jnp
repnz
sub
cs
sarl
test
test
outsl
sub
xchg
xor
pop
mov
push
cmc
pushf
jno
sub
enter
pop
cmp
or
scas
arpl
jnp
data16
sub
insl
mov
hlt
imul
cmp
jl
sbbl
push
rorb
sub
jae
cld
das
jo
outsl
rorb
icebp
xor
scas
add
movsl
in
lea
sahf
cli
add
sbb
mov
in
cmp
push
insl
pusha
gs
movsb
cmp
and
sub
imul
jnp
cmp
push
sub
xchg
jg
subl
adc
lret
sti
mov
les
xchg
xorb
fimuls
negl
addr16
mov
repnz
sub
adc
dec
shll
jnp
jmp
data16
jnp
test
jmp
hlt
cmp
ficompl
fildll
add
je
imul
mov
pop
xor
mov
cmpsl
xchg
or
jnp
cld
cwtl
jb
jg
jnp
xor
outsl
pop
sbb
lret
cmpsb
sub
xchg
xchg
add
out
ljmp
cmp
dec
aad
xor
clc
cwtl
test
das
adc
movsb
jmp
in
jnp
mov
jle
jbe
das
addr16
inc
and
in
mov
repnz
jbe
sub
imul
pop
push
icebp
clc
xchg
jae
xlat
testl
xchg
outsl
repnz
sbb
xchg
jnp
pop
xor
lret
lcall
pop
or
in
lds
mov
jnp
and
mov
and
icebp
dec
lods
outsl
xor
outsl
or
cmp
mov
cli
xorb
or
shl
pop
xor
sbb
mov
fisubl
jae
fcmovne
mov
aaa
jno
push
stc
stos
data16
daa
sbb
fcmovne
int
jmp
and
gs
jo
in
push
adc
cmovb
scas
lods
rorl
dec
or
mov
arpl
xchg
aas
insl
dec
push
icebp
cli
jnp
out
push
fnstcw
sbb
test
lds
push
in
ret
scas
sbb
sti
mov
xor
sbb
xchg
jnp
add
push
and
and
fdivs
pop
sub
jne
shrl
mov
jb
push
and
mov
and
clc
jmp
xlat
out
jnp
ljmp
jnp
mov
jle
mov
imul
push
subl
jecxz
xor
lret
cwtl
mov
sub
arpl
iret
pop
in
pop
xor
lods
imul
adc
push
and
jge
dec
pop
push
pop
ret
jg
jnp
cmp
lret
fcomi
or
stos
imul
arpl
add
cmp
lcall
jecxz
mov
jnp
cmpsb
dec
cli
lcall
movsb
test
test
sub
mov
mov
movsl
icebp
jns
popf
sub
jns
and
sub
aam
fmuls
inc
mov
rcll
lret
dec
pop
jnp
add
cmpsb
fstpt
fists
in
jnp
pop
int
jecxz
ss
jnp
divb
add
mov
mov
aas
in
jnp
sbb
aam
sub
div
aad
pusha
pop
sub
mov
ss
jnp
dec
in
pushf
xor
mov
sbb
test
or
jae
js
movsb
aam
movsl
or
testb
rol
push
sbb
stos
cmp
jmp
in
pop
jnp
jl
aaa
push
jae
repnz
bnd
out
loop
lods
adc
test
lock
cltd
mov
sub
inc
insb
add
jbe
daa
lret
std
push
jnp
adc
clc
jnp
les
mov
dec
fistl
inc
je
in
or
popa
push
jne
fbld
mov
jnp
sarl
add
fiaddl
mov
mov
sub
inc
cmp
stc
aad
aaa
das
sub
jae
enter
adc
sub
dec
aaa
jno
adc
xor
cmc
sti
jns
jge
out
jbe
pop
je
movsl
cmp
mov
xchg
repnz
imul
stos
and
jo
sub
and
std
xchg
adc
jnp
inc
loop
aaa
cmp
pop
enter
insl
lods
les
negl
lds
mov
in
ret
sub
dec
cmc
pop
adc
addb
jnp
outsl
ljmp
add
stos
insl
scas
test
add
jnp
mov
rclb
sub
dec
adc
push
and
or
aam
jne
jmp
das
xchg
in
cmp
ficoml
movsb
out
fs
adc
out
das
loopne
dec
cmp
mov
push
rcrl
add
xchg
cmp
sub
es
push
call
movups
lods
jnp
pop
lods
jg
xchg
mov
jnp
loopne
adc
lret
clc
cmp
cmpsl
jae
test
out
fxch
lock
cmc
data16
jae
stos
repnz
les
sbb
mov
stos
ss
loop
bound
adc
orb
repnz
and
ja
xor
xchg
test
vzeroupper
jae
gs
mov
andl
jnp
xor
xchg
or
and
hlt
and
fdivrs
out
test
shr
cltd
xlat
xor
scas
sub
ds
xchg
inc
cmp
movsb
call
jmp
iret
inc
in
mov
clc
sarl
and
repnz
jns
mov
xchg
pusha
stc
cmp
rorl
clc
inc
fwait
mov
es
repz
call
lahf
iret
xor
sub
jnp
loopne
sbb
sub
fcoms
lcall
xchg
cmc
pop
fsts
xlat
jnp
jb
mov
test
mov
jnp
cli
loope
adc
mov
out
ret
lcall
xchg
lret
and
jnp
clc
lret
cmp
add
mov
jnp
mov
call
mov
outsl
mov
lods
rorb
jnp
rcl
push
push
sbb
pop
mov
jns
lock
imul
mov
in
cmpl
mov
xor
jne
inc
mov
cmp
push
dec
fstpt
in
adc
or
and
aaa
pop
insb
jne
test
adc
xchg
loopne
iret
xor
pop
fdivrs
shlb
mov
stos
lcall
mov
cmp
cmp
stos
jnp
into
lods
xor
jnp
sub
fwait
cmp
leave
in
dec
jb
ss
cli
push
stos
out
jnp
inc
in
repz
lds
loopne
fisubrs
sti
repz
cmp
or
sbb
jno
inc
dec
mov
and
imul
sub
js
xchg
jnp
pop
mov
ljmp
cld
inc
mov
ja
insl
cmp
dec
ficoml
adc
inc
loop
out
lds
loopne
xchg
in
dec
mov
or
imul
push
adc
popf
cmpl
lahf
jnp
enter
ja
sbb
sub
adc
stc
lock
dec
fdivs
mov
pop
fmul
pop
dec
scas
jmp
push
xor
cmp
pop
aad
cmc
cmp
outsl
ret
ret
stos
jnp
mov
pop
jnp
insb
mov
scas
sub
jbe
dec
imul
or
shlb
push
and
push
outsb
in
test
mov
xlat
and
cli
mov
testl
jmp
xor
in
and
orl
mov
adc
push
xor
ficoml
insl
inc
jnp
pop
sub
and
jnp
iret
ficomps
imul
cmp
mov
jne
js
sbb
adc
es
popf
out
stos
pop
cmp
cs
jmp
pusha
leave
ror
mov
or
lahf
pop
ss
into
cwtl
arpl
ret
pop
cmp
mov
dec
lods
jnp
sub
cli
cs
jmp
pop
mov
ljmp
mov
cltd
cmc
shrl
mov
or
sbb
lret
sub
xchg
cmp
sbb
std
subb
xchg
outsb
jno
mov
ja
pop
scas
dec
leave
aad
inc
mov
jmp
jnp
xchg
orb
ljmp
push
mov
ja
outsb
jecxz
mov
ret
jnp
leave
rclb
in
lods
push
insb
mov
sbb
or
testb
mov
sbbb
cmp
cmp
jg
adc
out
sahf
or
aad
cmc
dec
xchg
jmp
and
cs
mov
mov
leave
imul
push
adc
or
sbb
cld
pusha
jae
orb
push
sub
jle
jl
lods
jge
mov
jae
test
jle
jl
mov
xchg
test
cltd
imul
push
adc
jne
add
lods
xor
aad
cmc
jg
jnp
mov
xor
test
push
pop
jnp
sbb
mov
iret
ret
jns
ret
and
xorl
in
in
inc
insb
jnp
sub
test
sbbb
lahf
adc
stos
pushf
int3
sub
test
jbe
ja
push
xor
jb
testl
cli
cmp
push
sub
sub
out
mov
mov
jb
add
mov
jnp
sub
imul
repnz
xchg
lods
outsb
ljmp
sahf
xor
jle
adc
jmp
mov
push
rcl
aaa
repnz
imul
jae
stc
mull
insl
insb
mov
fs
xor
aad
cmc
inc
xchg
jnp
fstpl
pushf
shrl
pop
pop
xchg
lahf
xor
xor
shlb
mov
jnp
aaa
xor
cmp
mov
decl
lret
push
sarl
mov
stos
leave
xor
cmc
jnp
xchg
push
mov
push
out
jne
pop
jnp
stc
mov
adc
sbb
jmp
and
push
or
mov
jnp
xchg
les
sarl
dec
fildll
sbb
sbb
mov
mov
aad
cmpsb
movsl
imul
imul
jo
jnp
mov
lods
sub
insb
jp
jnp
sbb
adc
fdivrp
or
jno
repz
arpl
or
sub
jnp
xchg
pop
push
adc
ljmp
stos
dec
pop
ret
lods
cmpsl
jnp
test
insb
jnp
jge
mov
cld
in
imulb
lods
xor
mov
cmpsb
pop
jmp
add
or
cmc
inc
xchg
add
add
insb
inc
jnp
or
loop
scas
or
mov
test
inc
aas
imull
movsl
mov
xrelease
pop
ljmp
inc
into
dec
and
adc
imul
ret
sub
gs
mov
or
mov
or
jns
clc
push
int3
adc
add
icebp
cld
adc
out
adc
int
in
xor
mov
rcl
xchg
mov
push
and
xorb
mov
xchg
sbb
jb
cmpl
inc
scas
cmc
sub
aad
imul
pop
mov
outsl
jns
jnp
arpl
jmp
xor
xor
jno
lods
es
sahf
add
repnz
shll
adc
and
push
or
pop
xchg
sbb
lods
clc
imul
mov
addr16
xor
outsl
lret
mov
pop
popf
outsl
repnz
sbb
stc
inc
mov
jnp
test
jns
jnp
es
enter
mov
jmp
pop
leave
call
sub
das
sahf
inc
sub
mov
sbb
stos
dec
sti
xor
xchg
lods
push
insb
ja
mov
pushf
dec
in
sbb
imul
pop
pop
rorb
or
adc
rcr
pop
int
sub
or
and
aad
clc
cmc
cmp
arpl
ret
jmp
pop
cltd
fisubs
pop
adc
jno
insl
jnp
call
shlb
mov
cmp
sbb
cmp
das
negl
dec
add
dec
popf
subb
pop
mov
sub
cltd
jae
xorb
jnp
sbb
sbb
sahf
or
in
jnp
call
mov
or
insl
cmpsl
lods
hlt
insb
das
lods
aas
dec
and
cmp
fdivs
jae
cmp
add
fnstcw
mov
sub
mov
inc
iret
sahf
inc
and
pop
cli
clc
test
jnp
pop
adc
xchg
add
sbb
sar
dec
mov
cltd
and
outsl
sub
imul
inc
mov
inc
test
and
mov
clc
pop
mov
pop
shl
pop
mov
ret
cmpb
fdivrl
sbb
jns
sahf
cmpsb
pop
sbb
ljmp
pop
stos
dec
sub
jae
cltd
cmc
inc
fs
jnp
rcll
mov
and
je
or
pop
jnp
outsb
jmp
sub
ds
in
lods
data16
loop
lods
in
shl
mov
jae
lock
fmuls
lcall
mov
inc
pop
nop
adc
outsl
shl
xor
mov
xor
test
lcall
mov
jns
imul
popa
iret
pop
and
les
ds
dec
pusha
jae
scas
cmpsb
push
mov
popf
dec
xchg
sbbb
mov
mov
fisubrs
das
and
pop
dec
adc
push
dec
lahf
inc
mov
sub
sahf
imul
shll
das
push
xor
sbb
pop
cmp
ret
stc
test
mov
cmp
add
ror
insl
ja
shl
xor
sub
lods
movsb
insb
arpl
mov
sbb
lock
dec
pop
cltd
pushf
push
jnp
ljmp
ret
icebp
rorb
lcall
in
outsl
sub
or
dec
jnp
cli
pop
ds
jmp
enter
pop
mov
insb
mov
mov
pusha
sarl
sahf
test
jnp
lret
pop
sbb
xor
je
out
sti
fmuls
shll
jnp
sub
sbb
cmp
jnp
mov
fldenv
mov
stc
bound
icebp
hlt
dec
xor
lods
jnp
dec
js
pop
aaa
sarl
mov
add
sbb
sahf
lret
scas
pop
sub
sbb
outsl
in
outsl
iret
sub
imul
aad
imull
imul
fistpl
dec
ja
xor
pop
jnp
sub
xor
icebp
xchg
jnp
int
cmp
mov
sbb
cmp
scas
lea
in
cwtl
imul
call
repz
aaa
cmp
pop
ja
ret
add
xor
sbb
enter
adc
jmp
outsl
xor
xorb
mov
lods
imul
cmp
jnp
fnstenv
mov
jne
xor
pop
lret
jnp
pop
mov
imul
mov
lret
jecxz
imul
je
or
pop
mov
mov
icebp
mov
jecxz
cwtl
jne
mov
ljmp
jne
fwait
jnp
test
cmp
jnp
xor
hlt
push
mov
cmpsl
cmp
xor
clc
xor
adc
repz
mov
jae
xor
adc
adc
adc
adc
adc
clc
movsb
test
pop
sub
je
adc
xchg
in
mov
mov
mov
fnstsw
mov
sahf
cwtl
mov
in
roll
mov
pop
jp
dec
idivl
and
adc
mov
mov
int
sub
cmpsb
jnp
add
xlat
decb
jnp
icebp
jne
mov
rcl
mov
sarb
sarl
add
sub
jae
jp
lret
in
add
sub
leave
lahf
sbb
stc
imul
ret
xor
mov
jl
inc
test
repz
mov
jae
xor
lock
sbb
xchg
xor
pop
or
jno
cs
push
out
outsb
push
das
and
sub
mov
jnp
xchg
mov
cmp
dec
pop
and
jnp
nop
lret
hlt
mov
jae
mov
in
mov
cmp
mov
idivb
in
test
xor
hlt
jb
jmp
jae
scas
decb
xor
mov
out
ret
ja
mov
mov
lock
int
in
add
jnp,pn
scas
shrl
in
sbb
lock
into
jae
mov
cmpsb
jnp
lods
pop
xorb
out
mov
jg
repnz
insb
mov
in
and
lret
sbb
mov
pop
cmc
shlb
jae
insb
ja
dec
aad
mov
imul
cmp
imul
pop
lahf
scas
add
push
imull
in
test
call
mov
hlt
ret
je
mov
arpl
jne
mov
pop
scas
outsl
mov
mov
xchg
out
adc
scas
stos
outsl
imul
lods
lods
lret
js
js
cmc
xchg
xor
lds
dec
xor
clc
repz
and
cmc
stos
pop
mov
jne
ss
ja
mov
neg
sub
cmp
rcll
mov
cmp
jnp
pop
hlt
ficompl
lods
sbb
pop
roll
jl
or
icebp
das
sub
stc
sti
jmp
adc
js
mov
sbb
cltd
mov
insb
clc
sub
cld
cmp
cmpb
cmpsb
call
stos
adc
repnz
outsl
enter
dec
rcr
shr
or
fdivrs
xor
ss
lret
sbb
cmpsb
out
cltd
mov
aad
pop
mov
ss
stc
fcmovu
jnp
ror
sub
mov
jnp
sub
push
imul
iret
jl
or
push
jae
sbb
xor
and
orb
dec
sahf
and
sub
loope
clc
outsl
jl
imul
stc
mov
jnp
jns
sahf
pop
das
mov
lods
inc
xor
hlt
es
scas
pop
out
mov
inc
jnp
and
rcrb
lea
repnz
aam
lds
ja
insl
xchg
xchg
xchg
sub
mov
ds
arpl
es
dec
popf
std
fucomip
jnp,pt
push
lds
jnp
imul
mov
fidivrl
jl
and
sbb
xor
xchg
jge
popf
xchg
sarl
adc
sub
insb
or
mov
jnp
add
andb
jle
clc
mov
sub
imul
cmpsb
std
sub
cs
cmpl
cmp
sub
sbb
mov
jnp
incl
mov
sub
and
adc
mov
nop
mov
xchg
int
mov
sahf
fimuls
ficomps
scas
gs
insb
std
mov
sahf
rcrb
lahf
stos
jnp
or
push
sbb
sub
mov
cmpsb
push
or
lods
cmc
in
inc
and
sbb
mov
add
repz
or
sar
andl
dec
sbb
add
mov
jnp
lods
fidivrl
aad
cmc
cmp
or
popa
or
push
in
lock
cs
insl
and
xchg
cld
inc
call
lock
jnp
addl
push
das
lods
push
loopne
push
pop
cli
add
mov
push
jnp,pt
and
iret
popf
scas
mov
adc
add
push
push
jnp
test
in
pop
jnp
cld
sbbb
mov
jo
mov
jmp
pushl
in
movsl
xor
insl
jb
shll
adc
fstl
fsubl
xor
int
scas
fisttpl
pop
aad
scas
pop
lret
pop
sub
jnp
push
js
je
xor
leave
push
jnp
xchg
shll
jnp
mov
xchg
stc
lods
in
jnp
icebp
cmp
fcmovnb
fsubrs
sub
pushf
js
in
cmpsl
xor
scas
mov
hlt
dec
bound
rcrb
jmp
test
stos
sti
fidivrl
aas
sbb
aaa
cs
mov
fbstp
cld
cmp
sub
aam
insb
jnp
sub
adc
adc
sub
and
mov
mov
ret
shrl
sarl
jae
scas
insb
dec
mov
adcb
repnz
xchg
lods
sbb
insl
pop
test
inc
bound
clc
lcall
sub
mov
cmpb
jle
fmull
ss
movsb
inc
add
jno
xor
mov
call
mov
pop
js
cmpsl
out
pop
sub
int3
cmp
clc
lods
mov
add
sub
mov
addr16
ret
mov
int
lods
jnp
xor
push
xor
lea
pop
das
out
adc
jnp
es
insb
popf
sub
jecxz
je
out
mov
jnp
sti
scas
scas
add
lea
xor
outsl
movhps
xor
adc
mov
fcmovb
jb
sti
xor
lods
jnp
lahf
daa
mov
pop
movsl
dec
jnp
jns
stos
fcmovu
dec
mov
xlat
je
imul
fdivs
cmp
cmp
out
xlat
ljmp
int
mov
push
repz
xchg
in
bound
or
decb
cmp
mov
xchg
pop
dec
ret
rol
shlb
or
xor
dec
mov
fldln2
cmp
cmp
jne
dec
or
push
mov
inc
sub
pop
jnp
data16
jae
jbe
push
cmp
mov
arpl
jnp
mov
fdivl
repnz
cmpsb
and
sbb
jns
pop
mov
rclb
or
sub
sahf
in
mov
dec
xchg
cmc
fsubrp
daa
mov
jecxz
into
mov
mov
sub
mov
ja
xor
mov
pop
ss
xor
flds
leave
movsb
in
adc
arpl
das
xchg
out
ret
mov
cltd
cli
ret
mov
cmp
lock
insl
xchg
add
sub
mov
cmp
sti
pop
mov
ds
fidivs
js
cmp
stc
pop
mov
insb
negb
aaa
dec
pop
stc
test
jne
rcrl
mov
jns
call
xchg
test
or
repnz
ficoml
cwtl
stc
mov
shlb
mov
mov
jnp
lods
xor
std
das
pop
cmp
mov
in
idiv
lret
enter
xchg
inc
or
mov
fcomp
adc
ss
cld
leave
xor
pop
pop
je
les
add
mov
jne
sub
lods
testb
lods
dec
jle
dec
pusha
call
outsb
lock
in
sahf
fsubrs
lods
imul
or
sub
iret
jnp
xchg
cmp
pushf
mov
cmp
mov
and
orb
jnp
in
mov
in
call
fsubrs
cli
jnp
ss
jp
cmp
imul
insl
cmp
clc
out
mov
aad
das
mov
jnp
testb
jnp
pop
mov
mov
adc
sbb
jl
cli
or
stc
jns
je
dec
mov
inc
imul
jae
mov
mov
jnp
cltd
pop
push
adc
call
out
pop
xor
jmp
mov
jnp
or
jnp
sbbl
imul
xor
in
sub
std
mov
push
or
imul
idiv
cltd
xor
cs
sub
adc
and
and
jnp
je
pop
icebp
dec
mov
lret
jno
fdiv
jnp
mov
fistpll
enter
test
imull
sbb
repnz
xor
mov
ss
jno
cmp
push
or
pop
jnp
mov
js
or
sbb
sub
pop
sti
or
cli
cs
cld
lods
and
dec
fcmove
insl
movsl
mov
outsb
out
xor
push
jmp
jae
jbe
shl
mov
aaa
repnz
hlt
jns
mov
xor
jne
leave
repnz
sbb
sbb
test
mov
out
mov
fmuls
xor
imul
negl
sti
imul
shlb
insb
pop
pop
das
jnp
cli
sub
in
xchg
pop
jnp
or
mov
repz
cmc
into
notb
sub
shlb
mov
xchg
sub
insb
lods
imul
notl
hlt
outsl
xor
xor
push
dec
push
rcll
fidivs
data16
mov
jbe
rcrb
das
sub
negl
pop
fs
and
or
ljmp
push
jle
fidivl
jns
jbe
cmpb
pop
ret
test
clc
push
shlb
fstpt
lret
jnp
out
jmp
jnp,pn
xchg
mov
and
aaa
jns
sti
pop
mov
cs
scas
xor
or
ret
cmp
jns
mov
jo
shrl
push
mov
rcrb
mov
jae
jo
jb
call
ret
jmp
dec
in
aaa
sbb
jnp
cmp
xchg
jnp
ss
pop
hlt
jae
cmpsl
dec
dec
imul
mov
call
repnz
out
out
lods
scas
cmp
outsl
xor
and
in
subl
jb
jo
dec
cli
cmc
mov
repz
popf
cmpsb
mov
jne
nop
pop
fld
sahf
mov
and
cmpsb
clc
jo
clc
repz
stos
mov
add
jb
jnp
in
imull
mov
sub
or
into
mov
insl
sub
test
sub
iret
cmpsb
jnp
push
test
mov
push
mov
mov
scas
insb
cmc
and
xchg
pushl
out
js
jb
and
cmp
jns
xchg
mov
cs
stos
stc
iret
jnp
dec
mov
cwtl
fwait
sbb
xor
js
cmpsb
bsr
push
mov
into
cmp
lahf
outsb
jmp
sbb
cwtl
dec
push
xchg
jns
push
xchg
insl
movsl
jnp
jno
lock
in
lahf
icebp
dec
inc
stos
sub
outsl
xchg
mov
jnp
sahf
aam
jg
stos
sbb
sub
jae
imul
leave
ja
rorb
adc
jo
aas
icebp
lods
icebp
mov
sbb
mov
cmp
xchg
cli
mov
aad
enter
lods
call
fistps
in
jmp
pop
scas
jnp
mov
movsb
lods
lret
insl
jns
mov
jnp
popf
add
jnp
mov
daa
fisubrs
dec
scas
xor
insl
mov
addb
jmp
cltd
mov
jnp
pop
aad
sbb
jnp
sub
es
mov
cmp
mov
outsl
stc
aad
sub
in
pop
lods
insb
imull
jmp
scas
sub
enter
xchg
inc
outsb
outsl
jp
cmp
dec
jnp
sub
imul
iret
std
insb
mov
aaa
or
xchg
in
add
ljmp
jo
mov
xchg
outsb
aaa
lret
loop
cmp
movsb
outsb
orb
push
dec
add
adc
jne
in
ret
enter
test
mov
imul
jecxz
mov
pop
leave
cmpsb
mov
sbb
or
or
subl
push
pusha
lock
ja
arpl
jnp
push
lods
push
sbb
imul
rcrb
es
sbb
call
out
leave
ret
stc
imul
push
cli
pop
sub
ds
pop
pop
pop
or
imul
push
cmc
scas
pop
stos
jb
sub
ss
jnp
lret
test
movsl
adc
mov
adc
fsts
lret
mov
aad
arpl
sbb
jnp
aaa
sub
pop
movsb
dec
add
jnp
lret
push
adc
and
cmp
lock
fnstcw
mov
das
jns
ljmp
mov
sub
loope
cmp
cmp
jnp
xor
in
mov
sub
cmp
jae
les
mov
lcall
daa
neg
and
mov
xchg
outsl
jne
clc
repnz
lods
pop
mov
pop
movsb
jnp
scas
cs
inc
mov
divl
imul
repz
mov
outsl
xor
jnp
push
mov
outsl
xor
icebp
dec
xor
push
repnz
jns
jnp
test
das
lret
jno
insl
sub
lahf
jmp
lret
or
xor
pop
in
xor
sub
test
ja
mov
in
inc
movsl
dec
jns
xor
cmc
out
xchg
and
lea
adc
xor
divb
sbb
and
xor
jmp
sbb
mov
adc
inc
addr16
insb
clc
in
jns
mov
dec
pop
pop
or
std
daa
push
push
insb
mov
mov
insl
xchg
xor
jnp
leave
push
outsl
popf
mov
sbb
scas
jnp
push
lret
stos
mov
cmp
mov
jns
ja
dec
or
inc
push
out
dec
sbb
std
out
or
pop
mov
jb
insl
mov
dec
jne
aaa
push
or
xor
stc
sub
jae
mov
dec
sbb
mov
into
mov
mov
inc
inc
sbb
lds
jnp
or
mov
mov
movb
or
mov
mov
mov
sarb
add
adc
jp
gs
or
stc
aad
add
push
out
and
inc
lahf
mov
mov
mov
jnp
add
adc
lret
and
mov
jo
inc
adc
dec
rorb
cmp
xor
pop
fwait
jns
shrl
lcall
ja
insb
push
mov
sbb
divb
jns
adc
sbb
insl
jecxz
ret
loopne
jbe
jno
cld
jnp
fwait
in
and
je
sub
lea
shlb
sub
push
addr16
lret
jne
xor
inc
in
call
cli
aas
aam
jne
lods
insl
mov
push
xchg
jno
xor
jnp
add
pop
sub
or
lea
stc
cli
je
mov
leave
xchg
push
insb
outsb
aad
cwtl
and
shll
jnp
mov
mov
or
sarb
movsb
jns
dec
dec
jnp
xor
popf
jnp
fcmovnbe
aad
out
cli
jne
jno
jo
jns
ljmp
sbb
test
lock
jnp
push
pushf
xor
iret
fsubrp
insl
dec
jnp
add
fstpt
leave
pop
sbb
mov
ret
mov
js
push
mov
xchg
scas
cs
mov
mov
push
sub
mov
imul
xchg
xor
xor
or
clc
in
test
jns
imul
popf
or
ret
add
notl
dec
test
aaa
inc
dec
jb
scas
mov
mov
or
sti
sub
and
lods
aad
push
sub
fwait
sbb
cmpsb
outsl
aaa
mov
mov
xchg
imulb
insb
mov
sbb
dec
leave
pop
and
pushf
pop
inc
sbb
dec
mov
aaa
xor
and
lods
mov
lahf
insl
es
jnp
sub
pop
dec
daa
push
inc
mov
into
in
scas
scas
jnp
jb
pop
xor
rclb
mov
int3
lds
mov
leave
jnp
mov
insl
shll
push
clc
cmp
sbb
mov
sar
jne
lret
xchg
sbb
lret
adc
mov
imul
out
inc
ds
into
dec
push
lods
and
orl
out
sti
rorl
jnp
fildl
bound
dec
mov
enter
call
cmpb
and
repz
jb
jo
pop
sub
pop
cltd
loope
or
ret
lsl
mov
iret
ja
fdiv
stc
pop
ss
dec
cltd
push
out
jnp
js
and
xor
jae
mov
loope
into
sbb
pcmpgtd
sbb
cmp
ss
call
or
into
outsb
inc
mov
sbb
or
mov
adc
stc
dec
mov
jmp
ret
loop
jnp
lods
dec
rol
dec
mov
dec
imul
pop
jnp
cmp
int
mov
mov
or
aad
jbe
insl
xor
mov
jnp
scas
cwtl
lret
sub
push
and
sahf
push
mov
jnp
scas
push
in
jp
in
ret
and
cmpsb
dec
inc
in
adc
lds
ljmp
fdivs
cwtl
jnp
jmp
jo
shrl
push
xor
dec
repnz
outsb
xchg
adc
int3
push
rclb
push
inc
mov
iret
adc
into
push
sahf
sub
pop
shr
and
jne
stos
jnp
lcall
jnp
cs
mov
sub
jnp
lcall
lcall
push
pop
pushf
and
out
mov
cmp
mov
xor
iret
insb
out
sbb
mov
aaa
or
js
mov
stc
or
pop
fwait
adc
or
jp
pop
arpl
addl
sbb
xchg
lret
jnp
xor
bswap
dec
ljmp
jne
sbb
ja
sub
cmp
orl
cmpsb
fdivrs
arpl
and
ss
mov
jns
aaa
lea
mov
ja
sbb
mov
sbb
jnp
xor
lock
imul
ss
xchg
insl
jo
jnp
sbb
cmp
imul
lock
dec
cwtl
int3
sub
insb
cltd
jnp
mov
mov
imul
mov
push
push
stos
cmp
movsl
jo
fwait
push
mov
stc
xchg
xor
mov
enter
jbe
insb
aas
shll
arpl
inc
outsl
into
clc
scas
mov
ljmp
outsb
call
mov
lods
shlb
mov
xor
jnp
popa
arpl
dec
mov
xor
repnz
xchg
call
ja
xlat
push
jle
iret
adc
xchg
lcall
mov
addr16
jnp
scas
mov
and
fisttpll
pop
jl
cli
call
jnp
or
out
inc
scas
sub
out
shlb
sarb
out
sbbb
loop
mov
push
pop
in
cmp
pop
ljmp
cmpb
sbb
or
jnp
jne
imul
mov
pop
scas
dec
popf
divl
and
dec
sub
imul
lret
push
xor
icebp
cli
test
adc
ja
mov
hlt
dec
mov
and
or
xor
sub
dec
aam
and
push
repz
xchg
mov
sbbl
cmp
sub
xchg
mov
or
shl
xor
movsb
adc
and
sbb
insb
outsl
sbb
daa
jnp
or
mov
int3
add
jnp
push
cmp
or
insb
pop
mov
ljmp
inc
xor
andb
sbb
bnd
lods
lcall
cmp
out
daa
jnp
rcrb
hlt
pop
jnp
mov
imull
into
jnp
sub
idiv
sbb
jnp
popa
repnz
packuswb
dec
cwtl
or
fistpl
outsl
xor
push
pop
jecxz
negb
xchg
imull
test
mov
repnz
inc
cmpl
in
push
cmp
fwait
lods
shr
add
cmc
adc
fldenv
int3
outsl
or
cmpsl
cmp
jae
cltd
incb
lods
pop
sub
ja
pop
jns
ret
rol
sub
imul
scas
out
cs
test
jb
fisubrs
or
aaa
push
sbb
divl
lods
mov
dec
or
cmc
and
xor
in
orl
negb
insb
sub
xchg
adc
jnp
ljmp
movsl
push
add
and
sarb
adc
lea
rorl
push
aam
dec
jnp
adc
jb,pt
jnp
insl
arpl
jmp
pop
jns
mov
sub
fnstcw
mov
cmp
sahf
lds
sub
mov
xchg
xchg
ja
repnz
mov
push
loope
inc
or
mov
sahf
push
incl
cmp
pcmpeqw
dec
fldt
ljmp
jle
sbb
mov
jg
stos
sub
push
jns
cld
xor
jnp
add
xchg
inc
and
jmp
cltd
aad
jae
mov
imul
sti
int
lret
jnp
xchg
pop
inc
incl
lret
adc
popf
xchg
jnp
add
cmp
xchg
imul
jns
push
jnp
mov
andb
or
imull
aaa
imul
mov
iret
movsb
cmp
jae
aad
lock
push
dec
ficoml
lock
push
jnp
and
sbbl
stc
jnp
mov
cli
xchg
mov
insl
in
mov
ss
jno
xor
xorl
push
push
jb
lock
jmp
stc
jmp
push
insb
and
and
movsl
sbb
inc
pushf
imul
inc
scas
call
xchg
pusha
insl
inc
jecxz
fdivs
fistpll
dec
mov
sbb
dec
hlt
sahf
mov
mov
insl
sub
lret
lods
cld
insb
pop
jno
pop
test
cmp
mov
rcrl
xor
mov
fldt
mov
jecxz
outsb
imul
lret
sub
imul
mov
int3
mov
je
dec
arpl
ljmp
jnp
jns
mov
and
jo
pop
push
mov
test
push
insb
inc
jnp
jb
mov
call
out
push
jnp
iret
pop
lcall
or
out
mov
out
outsl
pop
adc
jnp
ret
int
mov
imul
fwait
repnz
lock
dec
imul
repz
lods
insl
ror
jnp
out
pop
bnd
or
loopne
mov
arpl
out
jnp
cmpsb
lcall
ret
inc
rclb
addr16
jnp
mov
pop
or
push
add
cld
ja,pn
xchg
outsb
and
xor
sbb
sbb
mov
pushf
hlt
push
jae
je
mov
push
popf
cs
jnp
add
jnp
into
jno
and
int
repnz
jnp
sbb
mov
push
jnp
adc
lahf
or
aad
inc
out
rorb
in
xchg
pop
ret
jo
imul
fwait
or
mov
addr16
jnp
fs
xchg
jb
pop
clc
adcb
orl
insb
sub
jnp
adc
dec
jnp
subb
jmp
dec
sahf
test
aad
adcb
mov
mov
lods
fisttps
jae
lods
jno
mov
jnp
es
or
imul
xor
mov
dec
and
sbb
adc
mov
arpl
pop
xor
inc
gs
iret
imul
stc
enter
and
loop
xor
add
into
mov
loopne
shlb
sub
lods
insb
aam
in
jnp
jno
test
imul
cmp
mov
repnz
pop
or
aaa
cmp
jle
mov
mov
mov
sbb
push
iret
lods
jl
or
push
ja
inc
repnz
jo
rorl
pop
ret
dec
jnp
xchg
lods
mov
sub
pop
stos
in
cmp
das
scas
pop
mov
ds
insl
es
and
add
lods
repz
dec
jmp
data16
out
xchg
call
sbb
shrb
maxps
sub
cmp
shlb
xor
dec
mov
hlt
jae
xchg
pop
xor
shll
inc
pop
or
sbb
jae
xor
mov
arpl
mov
mov
adc
outsb
ja
sub
mov
shrb
mov
adc
orl
or
jnp
mov
imul
push
xor
ss
jnp
xchg
dec
out
leave
outsb
and
int3
pop
lods
mov
jnp
mov
or
add
cld
jnp
xchg
push
inc
cmp
or
pushf
sahf
pop
arpl
mov
xor
push
leave
pop
cltd
cmpb
jnp
stc
cmpsb
sahf
dec
or
insl
pop
sub
dec
repnz
pop
sub
ret
xor
subb
aaa
fidivl
jnp
push
outsl
rcl
xor
into
jnp
sbb
jmp
adc
mov
push
sbbl
stos
xchg
lcall
mov
jnp
shll
fistl
dec
ret
int
das
outsl
xorl
pop
jae
out
mov
rcrb
push
lods
dec
jae
sub
mov
pop
sub
divb
mov
ret
lds
jo
adc
push
or
jbe
out
mov
jo
jno
hlt
lret
fidivl
xor
mov
dec
cmpsb
push
sub
pop
dec
ret
shr
push
xchg
push
jnp
mov
jecxz
das
cltd
push
stos
push
sbb
jo
call
out
xchg
xor
pop
fldt
pop
pop
adc
call
pop
out
sbb
sbb
pop
sbb
xor
mov
test
dec
lcall
out
mov
int
sub
dec
jmp
sbb
inc
sbb
scas
sbb
stos
jp
es
pop
cmp
nop
mov
jnp
mov
into
hlt
mov
jns
sbbb
dec
ss
jns
jae
jne
sbb
imul
jge
cmp
scas
mov
outsl
mov
jne
mov
es
cmp
hlt
mov
fwait
nop
sub
mov
insl
pop
sub
jmp
jl
sbb
pushf
arpl
es
scas
xor
loop
jnp
push
ret
je
or
mov
fdivrl
sub
mov
js
pop
xchg
add
jnp
xorb
in
push
mov
sub
jnp
loope
pop
insb
popf
mov
ss
mov
push
jnp
jne
inc
ror
jb
int3
xchg
clc
push
add
jmp
xchg
sub
ror
in
sti
push
divb
fwait
xchg
jae
int3
scas
mov
js
jnp
inc
cmp
js
pop
pop
lret
loope
fwait
aaa
hlt
jnp
mov
sbb
pop
sahf
test
xor
shrb
cld
jno
pop
int3
mov
sbb
xor
rcrl
inc
inc
stos
jo
lock
mov
cwtl
cmp
sub
in
jnp
lods
subl
jp
mov
es
js
dec
insl
mov
jb
sbb
insl
inc
sbb
stc
add
repnz
jo
pop
jnp
pop
iret
push
xor
cmp
adc
ret
rorl
clc
xor
outsl
sbb
mov
inc
cli
and
adc
jnp
xor
jnp
dec
mov
push
pop
xor
fwait
arpl
sbb
jnp
pushf
scas
das
xor
cmp
adcb
xchg
mov
insb
mov
hlt
sbb
ret
pop
jnp
push
fcmovbe
cmp
mov
test
scas
or
pop
push
mov
into
sbb
fstpt
mov
dec
call
dec
sbb
or
sahf
mov
fmull
sub
dec
js
sub
dec
fwait
sbb
es
push
jnp
les
adc
or
jo
sbb
sub
ss
enter
aad
inc
push
mov
cwtl
in
inc
sub
dec
sbbb
rcrl
jne
fwait
dec
int3
push
jmp
sub
jecxz
xor
cmp
idivl
shlb
mov
jnp
aaa
clc
pop
inc
stos
dec
mov
sbb
outsb
mov
je
pop
shrb
push
out
cmpsb
ds
jnp
jg
stos
adc
rorb
pop
je
shr
xchg
mov
pushf
xor
or
cmpsb
aam
testb
pop
jb
xchg
mov
sbb
fwait
pop
pop
sbb
mov
lock
or
dec
enter
mov
mov
rorb
adc
or
roll
sbb
sahf
sub
fpatan
imul
mov
jae
ja
lahf
mov
pushf
jmp
es
xor
mov
jnp
sub
ja
call
xor
insb
cmp
rclb
fisubrl
lcall
adc
sbb
lahf
pop
pop
sbb
xchg
sbb
mov
push
fwait
add
mov
push
pop
sub
jnp
shrb
sbb
xchg
fdivrl
adc
fstpt
fdivr
dec
mov
push
out
adc
int
aaa
xor
jmp
jb
mov
mov
sbb
das
and
xor
mov
int
repnz
or
jnp
xchg
sub
divb
ljmp
cli
xchg
std
or
sbb
iret
lods
xchg
outsl
cmp
mov
add
stc
pop
cltd
jae
dec
mov
cmpsl
push
pushf
aaa
js
call
and
rorb
icebp
cmc
int
outsb
je
aas
out
jnp
cltd
sbb
sub
fidivrl
mov
dec
jmp
imul
cmpsb
scas
pop
sub
outsl
mov
mov
jns
mov
rolb
dec
in
mov
xchg
call
xlat
jg
clc
pop
sub
mov
xchg
imul
push
xchg
and
cmp
push
pop
pop
lahf
xor
iret
jnp
mov
or
into
pop
xchg
mov
cld
adc
loopne
mov
mov
dec
dec
sarl
push
enter
ret
jns
clc
xchg
jnp
lods
and
add
gs
and
pop
or
jecxz,pt
nop
inc
arpl
stc
ss
or
insl
mov
push
xchg
or
jae
fisttps
pop
call
loop
pop
insl
mov
fstpl
dec
pop
pop
mov
adc
jnp
cli
fldcw
jnp
jmp
stos
mov
sub
sarb
das
jnp
ljmp
jae
ret
rcll
shrb
jnp
ss
cmp
jle
add
mov
xchg
cmpsb
xchg
and
out
lret
aam
xor
xchg
test
and
outsl
jns
jnp
inc
mov
and
or
decb
mov
in
cmp
xchg
lcall
xor
mov
icebp
dec
fisttpl
jno
jecxz
jnp
jg
cld
into
mov
push
lea
and
jnp
es
or
push
or
jae
inc
stos
aam
int3
jnp
mov
cmp
push
jbe
test
nop
leave
inc
sahf
jnp
sbb
sarl
popf
push
fistpl
shl
and
lock
loopne
xor
sbb
or
mov
mov
jnp
lahf
int3
pop
testl
mov
fnsave
cld
pop
subb
jnp
mov
jmp
in
stos
lods
imul
push
call
testl
cwtl
or
jnp
scas
push
pop
jno
xchg
cli
cltd
jns
xor
or
jns
in
cmp
in
subb
mov
je
xchg
or
jnp
sub
jnp
jmp
call
or
cmpsb
aad
jnp
mov
xor
cwtl
in
xchg
sbb
xlat
or
ja
orb
sbb
call
xor
push
jo
shlb
and
insl
lds
dec
jnp
ds
push
jnp
mov
hlt
pop
jnp
rclb
xchg
test
xchg
das
cli
lods
jns
mov
mov
xchg
sub
jnp
aaa
aam
pop
sub
fwait
hlt
sub
pop
fs
test
stc
pop
sub
jnp
xchg
mov
jp
fisubl
sahf
in
jnp
or
loope
push
cmpsb
sub
or
lods
or
lret
pop
xor
nop
ja
jne
clc
int3
fwait
jnp
out
and
push
imul
push
add
jb
mov
lcall
loop
sub
dec
adc
cwtl
ficoml
jnp
sub
pop
scas
mov
cmpsb
in
jbe
sbb
dec
roll
jno
push
popa
add
xor
sti
xor
jnp
or
roll
shrb
adc
enter
or
in
call
notb
mov
ret
sbb
jnp
cmpsb
xor
insl
jnp
andl
jp
in
jnp
jae
lret
adc
repnz
pop
loop
lods
push
imul
mov
adc
mov
cmp
adc
dec
das
pop
xor
mov
mov
in
inc
imul
stos
aad
clc
adc
imul
push
shr
mov
jns
fstpt
lret
or
loopne
xor
stos
push
aam
aas
into
scas
push
or
sbb
jl
cmp
std
outsl
jp
imul
test
jae
sbb
add
mov
lods
xlat
inc
sbb
push
int
jne
mov
sbb
dec
movsb
sahf
inc
adc
ret
jnp
into
idivb
jbe
lahf
push
or
popf
jb
adc
push
stos
mov
sbb
jle
insb
mov
aad
push
ds
adc
sbb
mov
ljmp
adc
jnp
xor
jae
jno
and
cli
adc
pop
mov
ss
ja
into
repnz
jnp
add
inc
inc
fistpl
clc
sbb
cwtl
pop
imul
jnp
cs
pop
add
mov
pop
test
repnz
popf
lret
jnp
scas
and
or
outsl
xorl
jp
insl
sub
xchg
call
add
clc
mov
cmp
ja
sub
dec
and
lods
sarl
lods
push
mov
xorl
jne
jnp
popf
dec
and
jnp
sbb
xor
push
popf
je
sub
mov
rolb
adc
rep
jns
hlt
pop
jnp
movsb
sbbb
add
jmp
mov
lret
into
sbb
clc
xchg
jae
xor
mov
jnp
lods
stos
mov
and
pushf
and
daa
sub
xor
repz
jnp
jne
out
mov
mov
mov
mov
jnp
push
mov
mov
lods
jmp
movsl
push
cmp
sub
pop
lds
sub
ljmp
jnp
movsl
pop
pop
push
pop
sub
jnp
int
mov
fsubrp
lahf
dec
jb
stos
pop
mov
iret
sub
sbb
jnp
movsb
mov
push
mov
pushf
xor
sti
and
or
jnp
mov
xlat
lret
cmp
cltd
mov
xor
cmpsb
xchg
movsb
inc
mov
mov
mov
pop
sub
push
sbb
daa
gs
mov
push
pop
inc
ds
outsl
push
mov
jnp
fidivl
repz
movsl
notl
rcr
sub
and
icebp
mov
stos
jp
fldt
jnp
aaa
adc
dec
shrb
pop
inc
into
lret
dec
sub
mov
ret
scas
shll
mov
dec
sarb
cmc
jns
insl
sub
es
pop
in
fisttpl
divl
jnp
and
jb
jecxz
xchg
push
mov
inc
cmp
hlt
mov
jnp
dec
sahf
jo
in
arpl
sub
and
stos
popa
mov
or
adc
mov
pop
popf
sbb
jnp,pn
fucompp
mov
pop
pushf
adc
dec
daa
lret
in
fs
jmp
sahf
pop
fisubs
das
cmp
ja
mov
dec
in
outsb
sbb
lret
fnsave
lods
sbb
icebp
call
jnp
sub
cmpsb
adc
es
mov
notb
enter
dec
iret
data16
imul
insl
adc
clc
push
push
dec
fldt
into
int
push
jo
in
scas
jecxz
fcomps
or
xchg
mov
or
mov
xor
jnp
clc
popa
sbb
mov
jnp
or
idivb
in
pop
jbe
pop
idiv
stos
mov
ja
push
outsl
xchg
into
sub
aam
dec
scas
jne
jnp
gs
push
pop
jnp
fcmovnbe
mov
in
push
aad
repz
or
cld
inc
lods
jp
cmp
xchg
jne
mov
insl
stc
rorl
jnp
jne
lret
jbe
sbb
repnz
in
xor
mov
mov
or
cmc
jne
sbb
or
jb
xor
repz
lock
adc
outsb
int3
scas
xchg
cmc
or
scas
call
cmp
cmc
je
insl
jb
je
repz
shll
cli
icebp
lock
aad
jo
push
adc
rolb
out
pop
adc
mov
negb
call
popf
outsl
sbb
rcr
lods
sub
ret
sbb
paddsw
cld
or
div
imul
shlb
lock
or
clc
push
insl
inc
cmp
xchg
xor
cmc
mov
inc
jne
adc
inc
stc
xor
jmp
push
je
enter
insl
insb
mov
jbe
addr16
jne
ret
and
cli
fdiv
xor
mov
pop
xor
repnz
lods
outsb
mov
imul
sub
mov
or
cmp
fldenv
imul
pop
sbb
mov
dec
mov
cld
js
jbe
sub
repnz
lret
jb
push
pop
inc
xor
std
jb
repnz
jb
jnp
cmp
sahf
out
and
outsb
jnp
sti
jb
xor
xor
pop
aad
push
jns
sub
out
xor
xor
sbb
xorl
mov
insb
or
int3
bnd
aam
jge
pop
stos
outsb
sub
dec
hlt
sub
repnz
xor
push
test
fwait
xor
and
sub
jle
imul
mov
in
jp
cld
insl
xchg
sti
sbb
dec
movsb
jbe
hlt
cmpsb
jnp
repz
stos
xchg
out
scas
jnp
in
cmpb
or
je
xorl
outsb
imul
ds
lods
negb
jne
idivl
pushf
repz
or
into
xor
lock
js
dec
mov
ja
and
out
dec
jp
push
testb
sub
lea
in
cmp
iret
dec
pop
sbb
mov
or
jno
bound
jle
ss
jbe
pop
hlt
repnz
je
jns
xchg
mov
int
pop
cmp
jae
loop
outsb
lods
fstps
stc
jo
jns
jnp
jne
rcll
xor
icebp
jnp
dec
cmp
push
mov
cwtl
je
hlt
lock
mov
push
cli
and
push
or
out
je
mov
mov
out
sarl
outsl
mov
ret
clc
xor
andl
repnz
mov
jno
dec
xor
push
outsb
mov
repnz
jno
out
and
int3
flds
mov
jb
lock
outsl
repnz
movsb
xchg
push
repnz
cmc
sbb
outsl
xchg
mov
sbb
cmp
popa
mov
shl
scas
scas
push
mov
cli
dec
jnp
repnz
shrl
push
imul
rorb
js
divb
jb
sbb
lods
insb
ja
lock
jbe
sub
xchg
pusha
xlat
loope
jae
arpl
pop
push
movsb
insb
jnp
cli
clc
pop
ss
in
dec
repz
sbbl
popf
jnp
inc
mov
imul
sti
cmp
push
testl
push
sub
jbe
dec
jae,pt
push
mov
scas
popf
outsl
into
xlat
adc
mov
xor
push
pop
xchg
jnp
outsb
mov
dec
ss
sbb
xor
adc
push
lock
clc
jo
in
xor
lods
cs
adcl
jno
pushf
jnp,pt
imul
arpl
xchg
inc
jno
dec
shll
icebp
inc
js
adc
aaa
adc
jnp
cmpb
idivb
jnp
jne
outsl
pop
pop
adc
imul
sahf
repnz
xchg
push
jne
popf
jnp
mov
cwtl
xor
mov
sub
xor
jo
inc
jnp
fsubr
lods
nop
mov
or
sub
rcrb
adc
push
mov
les
jnp
addl
in
out
push
fistpl
cltd
out
xor
pop
sub
jns
jnp
sbb
scas
push
fdivs
sub
stos
iret
je
adc
jae
subl
in
or
sti
dec
imul
xchg
ja
cmc
in
push
lock
nop
out
popf
insb
dec
sbb
adc
mov
or
fidivl
shll
in
icebp
mov
xor
jnp
cld
mov
je
stc
cmc
imul
idivb
jnp
fdivl
mov
sbb
push
jno
cmp
adc
mov
aam
jnp
mov
xor
hlt
sbb
clc
jne
cmpsb
push
pop
das
add
mov
sub
hlt
mov
mov
stos
adc
lret
jnp
push
fstl
mov
mov
ja
ja
push
cld
repz
xor
scas
test
mov
lds
call
push
iret
jae
sub
leave
jnp
mov
jecxz
jp
xchg
addr16
sbb
aad
pop
sbb
fistpll
sub
mov
inc
insl
call
mov
iret
jo
adc
outsl
rcll
outsl
xchg
jns
shlb
adc
int
jnp
pop
xchg
adc
lret
xchg
repnz
sub
pop
jnp
cmc
xchg
jp
insb
fisttpl
jp
idivl
sbb
push
jnp
jns
xor
fisubl
mov
push
or
mov
in
imul
xor
jnp
pop
cs
mov
mov
shlb
pop
lret
xor
rolb
int3
jno
in
out
mov
aad
mov
ss
cmp
jnp
add
push
adc
jb
imul
fdivs
sbb
sub
fistpll
cli
lret
mov
cmpsb
jne
es
mov
out
imul
jp
aad
stos
lock
iret
xlat
arpl
out
xor
jnp
insl
mov
insb
xchg
call
xor
cltd
mov
cli
dec
je
mov
ja
sarl
mov
dec
pop
jp
mov
pavgb
adc
jnp
mov
pop
hlt
pop
mov
aaa
outsb
sbb
jecxz
inc
dec
jb
repz
mov
add
shll
in
cmp
leave
pop
sbb
data16
outsl
call
call
fsubrl
sbb
in
mov
jecxz
jne
mov
lcall
scas
lret
jo
das
xor
call
enter
jnp
pop
mov
dec
cs
call
jnp
cwtl
mov
mov
or
insl
out
jns
push
dec
inc
jnp
or
imul
js,pt
sbb
xchg
aaa
jae
sti
mov
mov
fnstcw
mov
jmp
jnp
jo
je
mov
sbb
loope
popf
in
ds
divb
jnp
or
mov
dec
jge
ss
sbb
mov
fimull
jb
aam
lret
mov
int3
jbe
dec
sbb
xlat
adc
icebp
jne
movsb
out
cmp
xchg
cmpsl
push
lods
sbb
cmp
push
cmp
jnp
push
lods
push
fdivrs
jae
insb
xchg
mov
lods
fildll
lcall
inc
mov
xor
add
jecxz
mov
out
js
jbe
aaa
jnp
notl
xor
jno
out
dec
cmc
iret
cltd
into
jne
or
cmp
push
or
out
adc
push
jno
mov
and
mov
xor
outsl
lret
mov
or
xorl
dec
insl
and
cld
outsl
in
sub
adc
or
mov
aad
cmpl
call
push
jno
mov
or
mov
inc
cmp
push
push
sbb
call
sbb
in
lcall
lock
sbb
shr
push
jae
jbe
icebp
adc
sbb
dec
mov
cmp
xlat
mov
subl
arpl
sub
les
lret
sbb
repz
arpl
cmpl
daa
cs
das
sbb
jnp
cli
ja
fnstsw
inc
xchg
cmp
pop
sbb
push
scas
addr16
sbb
xorb
mov
dec
xor
inc
jnp
jae
mov
jmp
sub
stc
lods
repz
bound
ror
adc
sahf
mov
jae
xor
dec
mov
dec
mov
adc
enter
test
shll
cmp
jnp
out
mov
dec
jnp
clc
rcl
call
mov
dec
sahf
xor
in
fcomi
out
jnp
rcll
inc
sbb
test
clc
push
mov
icebp
clc
outsb
jae
imulb
fwait
cmp
stos
xor
outsl
stc
cs
jnp
insl
andb
sahf
jmp
lock
xor
sti
mov
add
enter
shll
in
fwait
out
scas
ja
xchg
xor
dec
jns
aaa
call
outsl
test
fucomi
sahf
mov
cmp
insl
jnp
sub
jb
loope
xor
insb
int3
bnd
mov
fsubrs
out
jb
adc
testl
mov
negl
push
pop
sti
jnp
mov
jnp
fmuls
daa
paddb
jnp
clc
adc
rcl
call
lret
jnp
inc
repz
jbe
xor
fdivs
in
lahf
or
sub
stc
daa
adc
aaa
imul
xor
ror
je
stos
mov
mov
imul
sbb
cmp
mov
pause
inc
cmp
scas
xchg
arpl
sub
aam
hlt
mulb
xchg
lahf
jns
xor
mov
mov
cli
outsb
sbb
xor
scas
mov
daa
xchg
js
out
outsl
pop
adc
mov
jge
xchg
jnp
iret
jne
add
fnsave
das
mov
dec
subl
icebp
bnd
cmp
jns
scas
out
mov
nop
enter
xor
out
adc
out
repz
pop
enter
ja
insl
fmulp
mov
int
jae
out
stc
nop
insb
push
xor
sbb
xor
xor
sbb
jno
fnstenv
outsb
push
cmp
sub
lods
lods
mov
jbe
and
jnp
hlt
push
stc
addr16
sbb
or
jnp
xor
mov
fsts
mov
fdivs
jnp
stc
xchg
outsb
jnp
rclb
outsl
imul
jp
mov
xlat
imul
mov
adc
bnd
movsb
or
insl
sbb
inc
mov
xor
mov
ss
push
sub
jnp
iret
cmc
sub
stc
aad
jnp
js
adc
repnz
adc
cs
sbb
push
jb
jnp
mov
or
ret
je
xchg
repz
push
lock
data16
mov
aas
dec
repz
mov
jnp
cmp
pop
mov
cmc
lock
bnd
repz
push
xchg
or
stos
adc
push
outsb
aas
mov
ljmp
push
enter
dec
je
lea
push
jnp
jb
icebp
stos
outsl
scas
adc
jnp
call
sti
jns
mov
jne
push
add
outsl
adc
jnp
jp
out
pop
stc
stos
icebp
or
jnp
mov
mov
idivl
into
xor
mov
and
lret
jne
pop
mov
xor
stc
scas
cmp
mov
aaa
int
ret
mov
pop
xor
in
sub
jp
cli
push
insl
insb
push
sub
mov
mov
outsb
fidivl
push
imul
in
scas
mov
cmp
mov
sub
jne
repnz
jo
mov
cs
dec
data16
pop
call
xor
mulb
das
sbb
xor
ss
ds
enter
pop
insl
push
int3
addr16
call
or
xchg
jbe
mov
cwtl
push
int3
mov
insl
out
add
cmc
in
push
jnp
cli
and
sti
or
cmp
stos
js
xlat
divb
or
jnp
ja
hlt
cmc
xor
mov
sahf
icebp
pushf
jnp
out
js
sbb
lea
fcoms
xchg
jb
jnp
mov
movsl
xchg
fcomi
int
negb
icebp
or
jnp
mov
clc
mov
jne
stc
or
mov
out
insl
das
xor
in
pop
jns
mov
int3
ret
arpl
shlb
outsl
jne
scas
rorb
mov
xchg
cli
jp
scas
aaa
outsb
sbb
push
loope
push
jbe
adc
push
hlt
jnp
cmc
repz
xor
cwtl
das
xchg
insb
mov
stos
scas
sub
jne
cmc
dec
in
xor
and
or
xor
outsl
mulb
jnp
xchg
rorl
jbe
lods
ja
xchg
mov
in
xchg
sub
and
mov
out
and
jnp
xor
pusha
lret
push
and
xchg
xlat
push
jnp
jne
adc
das
jnp
data16
ds
loopne
sbb
inc
adc
push
xor
icebp
xchg
lcall
int
in
loopne
push
idivb
pushf
jbe
sbb
xlat
inc
push
sub
dec
das
in
aaa
jne
lods
jno
sarb
mov
mov
xor
test
imul
cmp
mov
mov
xor
mov
push
das
cmpl
cmpsb
adc
mov
or
cwtl
je
dec
movsl
mov
mov
jae
mov
cmpsb
jno
mov
push
ds
dec
adcl
jae
cmp
adc
or
xor
cmc
outsl
mov
jae
xor
mov
scas
testl
or
in
dec
iret
xlat
mov
outsl
lret
xor
mov
insb
loop
push
mov
loop
mov
imul
jbe
xor
addr16
mov
es
jnp
popf
in
leave
xlat
sbbl
push
rcl
pop
outsl
add
ja
pop
in
mov
sti
lods
push
push
outsl
movsb
ja
ror
sahf
pop
je
in
ja
negl
clc
aad
sub
adc
xor
jae
insb
mov
xchg
sahf
mov
pop
outsl
sbb
fcomp
lret
clc
and
ret
cmp
dec
cmc
jae
fwait
bnd
jnp
das
test
cmp
nop
jnp
xor
adc
imul
lds
repz
xchg
cwtl
lock
test
sbb
add
cmp
je
mov
xor
mov
lods
ljmp
fdivrs
js
or
aaa
lcall
add
and
outsl
in
sub
sbb
je
xchg
outsl
lcall
pop
jnp
xor
mov
jnp
outsb
lcall
dec
in
lret
jbe
mov
js
addr16
dec
mov
pop
mov
push
ja
rcl
lcall
jno
or
sti
sub
outsb
in
dec
repnz
in
jnp
test
cmp
inc
jns
xor
xor
roll
fsubrp
scas
js
repz
or
mov
in
hlt
dec
mov
iret
stos
xchg
mov
lock
jb
sbb
xchg
in
lods
insl
sub
sti
jno
mov
xor
mov
imulb
fdivrp
cld
cmc
lods
jne
and
scas
ja
xchg
aaa
ss
jae
xor
mov
nop
ja
cmp
ja
stos
repz
arpl
xor
push
jnp
pop
cmp
clc
sti
xchg
or
lock
pop
mov
cmc
push
imul
lock
icebp
sub
mov
mov
jbe
and
mov
mov
lods
ss
imul
adcb
mov
addr16
pop
push
or
jno
test
out
xor
jb
es
out
jnp
into
mov
sbb
int3
arpl
movsl
jne
xchg
mov
out
jbe
int
lock
pop
xor
mov
movsb
jnp
mov
push
jnp
insb
ds
int3
or
mov
xorl
call
lods
stos
stc
cmp
or
mov
es
jb
sbb
sub
loopne
fsubs
jns,pn
cmp
in
out
shll
rol
nop
int
in
jmp
xor
mov
jne
stos
pop
lock
rclb
insl
xor
cmp
mov
lgs
js
cwtl
xor
in
jnp
cmp
jnp
aam
negl
mov
or
das
pop
pop
fsts
push
add
xor
inc
scas
or
fstpt
pcmpeqb
mov
xor
push
push
or
imul
jo
xchg
ss
insl
sub
mov
sub
and
jmp
pop
outsb
aaa
jae
mov
mov
ror
add
cli
int
jmp
xor
rorb
xor
mov
and
mov
into
jnp
js
xor
stos
fidivrl
lcall
push
jnp
shrl
scas
stos
sti
sbb
stc
pop
movsb
fidivrl
xorl
repnz
mov
idivb
add
scas
in
int3
popa
jnp
fdivr
mov
sbb
cmpsb
jp
lods
aam
lret
jae
mov
dec
sub
push
jnp
stos
lret
jo
mov
mov
js
jae
in
insb
jb
cmp
movsl
in
push
call
bound
int3
mov
adc
lods
xchg
ja
rcrl
repnz
push
jnp
xchg
insl
dec
jb
stos
push
cmp
negl
jbe
movsl
int3
loopne
xchg
enter
or
adc
scas
sub
mov
lods
pop
or
push
jae
out
iret
jno
add
mov
mov
arpl
and
hlt
cltd
or
push
push
or
adc
mov
fldt
or
rcrb
sub
jnp
sbb
cmpsb
mov
adc
scas
and
js
cs
stos
sti
sub
roll
xor
insb
xchg
adc
ja
ret
rclb
mov
cwtl
and
adc
mov
mov
push
mov
mov
pop
ds
jns
icebp
cmp
shr
cmp
sub
adc
push
popl
arpl
xor
mov
shlb
je
xchg
and
js
divl
mov
arpl
ss
cltd
stc
sbb
jnp
clc
dec
fldt
push
outsl
dec
push
cli
jns
aad
cmc
sahf
cmp
cmpsb
sbb
je
int3
jnp
repnz
out
jp
jo
sarb
push
in
dec
jns
lods
jecxz
inc
pop
mov
xlat
aas
sti
or
jnp
push
mov
mov
loope
daa
jns
add
pop
pop
cmp
mov
sbb
pop
add
jnp
or
push
in
icebp
inc
das
or
popa
gs
xchg
daa
pop
push
cmp
jp
mov
push
push
cmpsb
lods
jp
and
sub
jnp
jo
pushf
mov
push
outsl
adc
adc
or
xchg
mov
xchg
mov
out
cli
cmpsb
js
sbb
push
or
mov
mov
cmp
lock
vmwrite
js
mov
cmpsb
xchg
push
jp
xchg
mov
adc
lock
cmp
push
jnp
adc
jbe
inc
sets
add
inc
xor
push
stos
insb
jbe
fcoml
call
sbb
fstpt
mov
sar
cmpsb
das
js
das
arpl
inc
cli
js
cmp
lahf
mov
lret
sbb
div
dec
outsb
adc
jbe
out
xor
mov
or
pop
dec
sahf
jae
jmp
sbb
adc
nop
sbb
shrb
cmp
lahf
dec
or
mov
mov
js
aaa
mov
pop
pop
cli
adc
pop
jnp
andl
dec
clc
xchg
add
lret
or
lahf
push
fwait
stc
shlb
js
jnp
ja
sbb
insb
jbe
mov
insl
pop
inc
jnp
outsb
lods
rolb
sahf
cltd
push
jnp
xchg
scas
dec
xor
shl
mov
sbb
inc
fincstp
aas
aaa
pop
pop
jbe
les
mov
lcall
mov
pop
in
clc
clc
ja
jns
lods
hlt
pop
pop
dec
cli
mov
arpl
outsl
ja
push
hlt
lods
hlt
in
popf
insb
pop
xor
jnp
insl
jno
add
adc
adc
jp
or
out
outsb
sbb
dec
fwait
mov
aam
icebp
out
outsl
pop
roll
fidivs
or
fcoms
int3
mov
jecxz
mov
aam
cmp
xlat
xchg
lcall
dec
mov
idivb
dec
adc
dec
mov
lcall
adc
in
shlb
jp
jnp
js
inc
hlt
aaa
shll
or
lock
push
rcrl
sbb
fildll
sub
inc
sahf
sub
fnstenv
xor
int3
pop
test
jp
mov
fcmovnbe
cmpl
push
aam
mov
jne
and
jnp
loop
jno
xchg
mov
push
scas
insl
outsb
jae
sbb
rcrb
ss
cmp
les
repz
cmp
jg
push
jp
push
test
outsb
mov
push
ror
cmc
sbb
cltd
jo
jnp
lods
push
adc
movsb
jnp
mov
pushf
sarl
sbb
mov
jne
push
push
push
jae
jns
scas
or
outsl
testb
cs
push
lret
mov
xchg
roll
fistpl
jecxz
mov
jnp
out
jne
mov
cmpsb
mul
mov
jae
adc
cmpl
jns
out
pop
mov
jne
cwtl
out
call
lods
jp
scas
ja
xchg
movsb
inc
or
lea
outsb
pop
repnz
hlt
jnp
cmpsb
xor
mov
xor
fcomi
dec
cmp
int3
cmp
jge
mov
out
sahf
sti
dec
lret
outsl
in
mov
jo
iret
dec
push
or
jnp
push
sub
nop
call
aaa
cli
jnp
mov
xchg
sahf
xor
xor
and
sbb
fwait
jns
cmp
ret
pop
nop
idiv
jnp
or
loop
lods
fildl
call
lret
sahf
dec
inc
xchg
ror
lea
outsl
je
popa
inc
das
outsl
repnz
xor
imul
cwtl
mov
jno
lods
and
movsb
push
sbb
jp
adc
or
jae
imul
dec
xor
xchg
jp
idivl
test
cli
pop
dec
mov
lea
clc
xor
icebp
push
scas
jnp
dec
pop
lret
int3
cvttps2pi
mov
adc
mov
test
or
je
es
insb
push
hlt
jno
mov
or
cmpsl
out
jp
insl
dec
mov
jae
sahf
das
add
int
sarb
or
loopne
aaa
pushf
or
inc
call
pop
mov
sbb
adc
inc
mov
stc
icebp
fwait
xor
pop
lock
push
int3
mov
sbb
sarl
cmpb
mov
popf
scas
dec
lahf
pop
dec
push
cltd
jnp
stc
jge
ss
mov
xchg
sub
scas
mov
shrl
mov
mov
xchg
jg
jbe
fcoms
sub
roll
sbb
scas
fwait
out
arpl
xor
clc
sbb
stc
cmpsb
jle
loopne
inc
mov
daa
icebp
sbbb
push
aaa
nop
fadds
outsb
mov
into
jnp
jno
push
sahf
xor
imul
nop
out
push
push
pop
out
pop
push
fildll
mov
jnp
sub
aam
sub
pop
push
jae
jp
xor
jg
jb
add
jne
dec
fistl
call
cmc
push
idivl
ja
clc
mov
push
insb
lock
scas
pop
out
cmp
arpl
add
push
sbb
in
adc
jb
jbe
mov
loopne
scas
arpl
mov
insl
push
mov
test
mov
js
negl
scas
jnp
xor
out
mov
jnp
or
pop
insb
and
add
mov
clc
sbb
push
mov
scas
testl
xor
pop
cwtl
mov
dec
ret
mov
outsb
mov
xor
test
in
push
ss
idivb
repz
cmp
into
jnp
insb
fistl
mov
je
jnp
xor
lcall
sbb
ljmp
in
fstpt
mov
cmp
sti
push
adc
adcl
xor
cmp
jl
cmp
cmp
in
sub
sbb
mov
sbb
xor
xor
xor
mov
push
sub
outsl
mov
lret
sbb
out
push
lods
fstpt
cmp
mov
outsl
test
ss
repz
jnp
or
xor
jne
mov
xor
cmpl
dec
das
mov
outsl
cmp
sub
sbb
out
jne
adc
stos
xor
adc
das
int
int3
push
or
loop
mov
lock
jecxz
jbe
dec
stos
or
mov
pop
xor
jnp
data16
push
cwtl
cmp
arpl
int
into
adc
or
mov
jns
sub
xor
mov
dec
repz
inc
jnp
lock
jns
pop
test
call
pushf
repz
fcomi
clc
icebp
xor
out
popa
in
ss
sarb
xchg
loop
popf
outsl
jnp
lock
push
insl
fisubrl
pop
dec
sbb
jae
sbb
or
fsubr
cwtl
sub
fldlg2
cltd
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lock
sub
sub
sub
sub
add
push
fcoml
fcoml
fcoml
add
aad
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
adc
mov
popf
dec
or
mov
dec
cli
cltd
pop
clc
mov
mov
out
jnp
fisubrl
xor
orl
cmp
aam
sbb
xor
imul
jae
aaa
clc
jne
stos
mov
sbb
mov
jmp
insl
loope
jnp
jl
mov
jnp
cwtl
xlat
cmp
idivb
jno
mov
test
ja
imul
call
dec
xlat
sub
dec
dec
ret
jns
repnz
sub
mov
mov
imul
inc
stos
sub
sub
pop
mov
inc
stos
jnp
xchg
andl
jns
clc
fstps
sbb
rolb
imul
cld
outsl
push
pop
cmp
in
add
test
sbb
lret
jmp
jg
mov
jnp
divb
mov
xchg
lcall
mov
rcll
test
je
or
xchg
xor
imul
push
or
insl
dec
call
ret
xor
shrb
stos
nop
jb
mov
repz
xor
jnp
cli
pop
sub
mov
xchg
clc
stc
add
repnz
sbb
jb
ja
subl
mov
mov
fndisi(8087
dec
xchg
or
test
pop
imul
ja
lock
movsb
jbe
mov
xchg
xor
cwtl
fstps
in
data16
les
stc
jnp
ret
xor
cltd
inc
jb
jnp
pop
sbb
or
movsl
inc
lret
jnp
loopne
jle
ds
adc
dec
mov
inc
iret
aad
jnp
sub
sub
adc
push
and
or
inc
add
jnp
pop
std
pop
xor
in
pushf
lods
and
stos
mov
fisttps
addb
or
ret
adc
shrb
xorb
sbb
add
mov
sti
sbb
ret
add
add
cs
dec
mov
lcall
mov
fistpl
cld
mov
js
lock
aaa
or
jo
jno
cltd
push
jnp
lods
ss
jnp
ret
rclb
imul
outsl
stos
or
jmp
pop
dec
dec
jae
outsb
fcmovu
sbb
and
cmc
pop
repz
and
mov
outsb
inc
xor
or
jae
in
pop
jnp
mov
adc
ljmp
inc
sbb
shlb
fcoms
jns
sbb
jo
jnp
cmp
push
lret
jge
lret
dec
stc
fcmovnb
loopne
pop
stos
lods
sub
adc
imul
pop
in
call
andb
mov
pop
outsl
inc
add
dec
xor
outsb
mov
daa
jnp
xchg
out
xor
inc
fdivl
aas
fsubrl
sub
or
mov
jnp
add
jmp
mov
lods
dec
ret
rcrl
test
xchg
stos
sbb
clc
cmpsl
inc
ret
test
or
and
test
fcoml
cmp
sbb
or
lock
mov
pop
imul
xor
ret
in
std
mov
lea
xlat
fstpt
add
mov
inc
jne
jnp
push
mov
jo
loope
jnp
add
or
cs
mov
clc
out
cmp
mov
lods
call
add
in
out
cmp
fldcw
add
mov
or
jne
add
dec
adc
ds
cli
mov
cmp
add
jae
xor
scas
mov
pop
fwait
xlat
stc
jnp
lret
mov
jns
popa
fidivs
and
add
outsb
mov
lock
adc
imul
and
fs
jle
cmp
ljmp
lods
pop
bt
pop
jg
insl
stc
jnp
mov
xchg
lods
sub
cmc
jae
push
mov
stos
cmp
pop
jg
mov
jnp
xor
loope
imul
ss
dec
jnp
das
cmp
sbb
gs
stos
aam
orb
adc
cmpsl
push
insb
jge
mov
jnp
fidivrl
push
jnp
push
cmc
push
inc
jmp
push
clc
push
rorb
jp
adc
adc
scas
scas
xlat
ds
enter
push
sbb
test
push
mov
loop
dec
jne
ja
mov
dec
xor
jmp
fwait
or
sub
outsl
stos
push
pop
cmpb
xchg
push
add
jnp
popf
ret
cmp
imul
mov
sub
dec
cmp
pop
xchg
out
out
push
movb
jnp
mov
cltd
into
sahf
fs
xor
sub
jnp
add
cs
fidivrl
inc
js
jnp
out
pop
sbb
lods
xchg
jnp
ss
xor
enter
cs
sub
ljmp
lret
stc
xchg
cli
jmp
sbb
jnp
push
sbb
das
out
pop
pop
pop
mov
pop
mov
push
adc
cmc
clc
enter
jae
and
jnp
loopne
test
and
clc
in
cmp
cmc
or
insb
adc
or
inc
mov
ja
es
xor
sbb
sbb
bnd
dec
mov
jnp
test
stc
loope
sahf
aaa
jnp
sub
shll
sbb
dec
mulb
xchg
daa
add
mov
xchg
jnp
adc
insb
lods
cld
fisttpl
popf
call
add
xor
mov
pop
lret
jnp
pop
dec
decl
ljmp
stc
or
mov
inc
outsl
push
call
es
mov
aas
in
push
lea
lods
xor
xor
jns
jmp
ljmp
rolb
mov
or
movsb
adc
aad
jno
sbb
fistpll
inc
stc
mov
cltd
imul
sbb
ficompl
aaa
mov
out
add
lods
test
repnz
and
ret
cmp
pusha
sub
movsl
ftst
cmp
or
xor
stos
push
andb
inc
dec
or
out
adc
sbb
xlat
por
push
bound
sbb
mov
daa
and
inc
jecxz
xor
mov
push
in
xchg
sbb
cmpsl
addr16
jae
iret
int
jne
test
cwtl
mov
pop
arpl
adc
dec
cli
inc
mov
or
fidivrl
dec
dec
imul
movsb
mov
mov
xchg
push
js
js
pop
or
pop
push
stc
fsub
jns
aad
in
pop
jnp
xor
sbb
cmp
adc
pop
mov
imul
fwait
sbb
and
jo
aam
xor
jnp
pop
push
or
clc
neg
mov
jbe
lock
pop
jo
jo
or
jecxz
stc
jae
loope
xor
jne
int
pop
ljmp
xchg
fdiv
cmp
idiv
jb
cmp
jnp
sub
push
cmp
outsb
mov
and
push
sbb
add
subl
aam
jnp
mov
or
cmc
sbb
pop
sbb
jno
ret
or
imul
and
or
add
mov
notl
mov
cli
ja
imul
xchg
and
jns
clc
add
jnp
mov
pusha
into
je
sub
sbb
insb
mov
inc
out
jnp
out
iret
mov
fistps
sbb
xor
in
cmpsl
stos
push
call
sub
sbb
jno
lds
ss
ja
mov
cmp
gs
add
je
sbb
ficoml
xor
cltd
aad
cmpsb
lahf
dec
adc
repz
and
lock
sub
pop
jae
das
cmp
clc
lods
in
es
dec
fisttps
and
jnp
mov
shll
insl
sub
insb
cmpsl
jae
push
or
adc
xor
jnp
dec
sbb
je
mov
pop
sbb
ja
cld
mov
and
pop
mov
cmp
mul
jnp
call
imul
ljmp
jnp
pop
lahf
out
iret
pop
xor
jo
or
nop
stos
insb
repnz
stos
mov
jnp
push
mov
jne
cmp
insl
in
dec
jnp
ret
sbb
mov
imul
and
sub
sub
pop
pushf
mov
jnp
xor
inc
jnp
xor
xchg
fcoms
xorl
lea
sub
adc
arpl
dec
adc
jae
and
mov
sub
insl
sbb
mov
sub
jnp
jmp
jp
sub
mov
mov
aam
and
xchg
cmp
dec
out
or
jns
sub
cmp
jnp
std
mov
fnstcw
sbb
xor
lods
adcb
mov
pop
sub
stos
or
or
xor
lcall
jns
leave
jnp
pop
jbe
and
cwtl
clc
jnp
sub
pop
cmp
push
imul
dec
test
jnp
jnp
sbb
sbb
arpl
dec
jl
add
test
in
test
aam
jne
pop
cwtl
sarl
repnz
in
jnp
cmp
xor
mov
sbb
gs
push
fnstenv
je
jnp
leave
cmp
imul
mov
xchg
clc
jnp
cmp
xchg
jae
movsb
imul
push
ja
fwait
cmp
fldcw
stc
jnp
gs
xor
mov
out
xor
lret
mov
mov
or
ja
and
sbb
roll
jnp
sub
xor
imul
sub
int
icebp
adc
add
jnp
inc
sbb
clc
or
in
notl
imul
xor
jnp
jo
scas
xor
je
jnp
cmp
adc
ret
rorl
add
dec
loop
movsb
xor
mov
push
dec
mov
xlat
dec
mov
lds
push
jmp
dec
sub
enter
xor
jnp
mov
shll
jnp
arpl
sbb
int3
aad
data16
sbb
sbb
xchg
leave
out
xor
or
sub
jo
jne
cmp
mov
mov
or
cltd
mov
push
jnp
shll
sbb
dec
pop
hlt
sub
jnp
or
sbb
sbb
stos
jbe
push
divb
clc
repz
sub
ret
adc
out
jnp
lods
leave
or
ror
cmp
test
xchg
in
add
cld
dec
js
out
repnz
cmp
imul
loopne
das
mov
sub
sub
sbb
ja
aas
xorb
test
mov
ljmp
or
cmp
call
pop
push
mov
ficomps
gs
repz
jnp
mov
inc
cmp
dec
or
sarb
push
orl
in
movsl
xorl
mov
push
sbb
jnp
xorb
inc
iret
dec
sub
adc
xchg
pop
xchg
dec
cld
cmp
outsl
xchg
push
test
popa
ja
mov
stc
cmc
pop
xor
loop
dec
arpl
addr16
stos
jnp
leave
movsl
clc
push
int
mov
and
and
hlt
shll
mov
pop
inc
push
push
js
cli
mov
jnp
pop
pop
mov
sbb
das
in
jnp
imul
lods
cmp
sub
out
pop
jnp
mov
adc
jg
in
aam
cmpsl
in
lock
fdivrs
sbb
mov
filds
jnp
subb
and
lret
rorl
or
or
das
jnp
lds
dec
jecxz
xorl
sbb
and
sbb
dec
mov
xchg
ds
shrl
jmp
pop
xor
sub
mov
xchg
es
lahf
cmc
jnp
imul
or
lock
inc
xlat
test
sub
mov
int
leave
mul
loop
sbbl
adc
sbb
fsubrs
or
pop
sbb
sub
cs
fidivrs
int
push
xor
dec
je
jnp
push
mov
repnz
mov
sub
scas
shl
cmp
addr16
xchg
sbb
sbb
stc
fidivrl
push
sarb
dec
jnp
jge
outsb
pop
clc
cwtl
push
clc
adc
arpl
cmp
push
js
je
and
outsb
cwtl
ss
aaa
loopne
mov
jnp
stc
adc
mov
pop
sbb
incl
shl
cli
mov
std
or
es
jge
xchg
cltd
mov
pop
and
fldcw
aam
ljmp
fldt
imul
cmp
and
jnp
pop
ret
lahf
push
push
or
xor
push
lret
jecxz
jnp
jbe
fwait
push
sub
or
adc
jae
cmp
lea
jnp
pop
sub
dec
sbb
xor
pop
xor
in
in
sub
rcrl
add
das
jnp
push
push
inc
into
lods
dec
fstpt
pop
push
add
lret
dec
sub
cmp
mov
imul
cmpb
cmp
out
or
out
in
mov
xor
or
cli
ja
mov
pop
jne
fisttpl
ret
mov
cmp
ja
sahf
iret
pop
lret
sbb
jnp
sub
inc
jnp
push
and
shl
imul
cli
insb
inc
mov
push
lods
int
xchg
hlt
sbb
bound
xor
ss
jmp
cli
out
dec
jns
dec
jnp
sar
aam
mov
mov
push
lock
mov
cmp
movsl
in
fnstenv
test
pop
daa
lods
jb
icebp
sbb
jnp
shll
jnp
retw
push
dec
das
mov
sbb
cmp
or
xor
xor
mov
orb
ret
mov
sarb
mov
dec
subb
sbb
push
mov
dec
fcompl
out
out
cmpsb
loope
sbb
iret
mov
lods
push
fmuls
jp
sub
aaa
mov
jo
imul
jnp
aas
ja
js
clc
repnz
leave
or
aam
rcl
jnp
sbb
cltd
jnp
mov
push
jnp
pop
pop
cmp
adc
outsl
jmp
sub
jmp
shlb
sbb
mov
sarb
adc
das
frstor
jno
or
dec
and
cmp
mov
out
scas
aaa
dec
jmp
mov
arpl
icebp
clc
sarb
js
icebp
lret
ficomps
ss
push
fwait
add
jnp
dec
pop
fsubrl
test
mov
cmp
cmp
das
mov
loope
add
xor
imul
push
out
clc
xchg
cmp
divb
mov
jbe
outsl
jnp
push
lret
test
cmpl
scas
pop
in
hlt
xchg
pop
dec
sbb
cmp
pop
jae
stc
sbb
pop
insb
int3
test
cmc
es
adcb
neg
xor
mov
jb
xor
mov
das
jb
jae
mov
mov
jnp
lods
clc
js
scas
jae
mov
sub
out
fldt
mov
and
cmp
pop
fdivp
xor
mov
mov
bound
divl
sub
push
sbb
into
scas
insl
jnp
push
xchg
push
dec
stos
mov
mov
jbe
xchg
out
jnp
into
pop
jbe
xor
pop
push
and
pushf
jnp
insb
adcl
dec
loopne
pop
ret
imul
xor
imul
mov
fldcw
in
dec
xchg
jns
jnp
idiv
push
movsl
pop
push
in
and
dec
xchg
dec
cltd
pop
into
in
jnp
hlt
xchg
sahf
subb
pop
or
shl
jnp
pop
loope
mov
sbb
into
and
fwait
xor
fpatan
sbb
es
iret
hlt
push
pop
push
testb
xor
lcall
nop
xlat
push
xor
pop
cli
shl
cmc
mov
imul
xor
sbb
mov
stos
imul
jle
jae
out
pop
stc
mov
jp
scas
cli
jnp
sub
mov
ljmp
ret
out
lret
je
and
xchg
js
out
xor
adc
hlt
jnp
test
pop
mov
sbb
lret
mov
cwtl
sbb
cmc
push
ja
or
cs
popa
cmp
shrl
idivl
push
dec
cmp
jnp
mov
lods
push
sbb
jno
dec
xchg
test
cmp
jns
push
sbb
lods
or
sub
cli
mov
lock
repz
sbb
pop
xchg
repnz
fincstp
inc
or
mov
xor
jg
adc
cli
add
jge
pop
mov
add
dec
addr16
pop
xor
jnp
imul
and
cltd
cmp
jnp
popf
hlt
ja
loope
ss
dec
and
or
push
xchg
jmp
ficoml
push
fwait
jnp
dec
cmp
es
in
jnp
pop
sub
dec
lret
sbb
dec
out
or
out
jno
cmp
add
pop
pop
vpaddsb
mov
leave
sahf
cmpsb
xor
jg
cltd
lcall
ja
ss
inc
jnp
pop
and
xchg
cmp
jnp
jne
jmp
cmp
mov
imul
pop
imul
sbb
xchg
aam
dec
adc
pop
add
sbb
inc
cmc
pop
jo
pop
adc
cmp
jno
cld
jmp
test
fcmovu
jnp
mov
mov
in
out
scas
fidivrl
clc
fwait
xchg
les
cmp
adc
xor
cli
mov
jnp
data16
dec
mov
sbb
test
push
sbb
lods
pop
inc
jnp
sbbl
pop
cmp
lods
cmp
fsts
jp
cmc
mov
pop
lods
dec
sub
loope
mov
inc
jmp
sbb
xchg
dec
imul
int3
jnp
mov
jnp
out
and
cmp
arpl
int
fiaddl
jnp
leave
sub
imul
mov
adc
int
push
or
in
or
jns
incb
sbb
insl
fidivrl
cmp
or
stos
adc
jmp
cmp
mov
sbb
sub
sbb
xor
cmp
fdivrl
jne
mov
jns
sbb
outsl
sbb
xchg
or
jecxz
mov
lret
pop
ss
mov
cld
movnti
mov
out
das
fdivrs
mov
outsl
into
fwait
xchg
in
mov
xchg
fwait
push
jnp
addr16
std
dec
mov
mov
mov
outsl
sub
pushf
rcrb
mov
outsl
out
jp
mov
mov
repz
ss
cmc
outsb
dec
outsl
mov
insl
je
repnz
xchg
jae
push
pop
jns
jnp
or
fdivrs
test
dec
mov
dec
insl
adc
sbb
fistpl
cmp
aam
outsl
cli
cmpl
adc
lea
mov
cli
aaa
test
call
push
jnp
add
jnp
in
mov
popa
iret
js
add
cmp
jnp
addb
push
push
pop
cmp
cwtl
test
arpl
or
mov
in
ret
aam
pushf
sub
dec
mov
int3
js
xchg
jg
inc
dec
int
test
mov
in
cmp
xchg
fdivr
sbb
lods
inc
push
jecxz
in
jae
dec
dec
in
jne
int3
cld
jns
cmp
xchg
jo
xchg
fnsave
xchg
sub
add
jno
lods
add
repnz
or
testb
dec
pop
jnp
loopne
fcompl
xchg
push
or
xchg
jae
pop
push
xor
mov
jmp
pop
jp
sub
jmp
sub
mov
or
xor
xchg
add
pop
repnz
push
enter
push
adc
xchg
rcr
nop
xchg
fdivrl
mov
mov
adc
insl
sbb
inc
popf
js
jnp
or
fstpl
aad
cmpsb
sub
jnp
push
pushf
stos
sbb
ljmp
dec
pop
cmp
cltd
fidivs
xchg
mov
xor
adc
aaa
fldenv
imul
jmp
dec
lahf
stc
jnp
jecxz
sub
inc
out
pushf
testl
fisttpll
pop
in
jp
scas
mov
jbe
sub
or
mov
fucomip
inc
idiv
imul
inc
xchg
lods
xor
sti
sbb
in
and
cwtl
sub
xor
dec
jb
in
std
sbb
mov
mov
sub
adc
mov
out
scas
lods
out
cld
jnp
xor
adc
fisubl
or
mov
pop
inc
outsl
cmp
mov
jb
cs
sbb
mov
aaa
and
test
in
in
pop
add
jnp
imul
add
sbb
jnp
std
pop
fldpi
scas
cmp
mov
jno
imul
arpl
xchg
imul
xchg
jne
pop
ss
xchg
dec
jne
and
cmp
xor
es
ss
pop
int3
enter
aam
scas
jnp
bound
das
adc
adc
aaa
sbb
cmp
aas
jae
fsubs
into
lods
jnp
mov
add
addr16
popa
push
aaa
and
jnp
das
add
repz
std
cmp
int
pushf
push
jb
out
pop
adc
insl
cld
pop
mov
imul
cli
fistpll
mov
loopne
in
cs
jnp
push
iret
pop
add
add
push
jae
push
lea
pop
notb
jne
mov
cltd
cmp
fadd
out
imul
icebp
sub
adc
xor
add
into
test
or
adc
test
pop
aad
mov
mov
mov
les
in
cmp
in
ja
lods
sbb
test
push
jno
loop
out
cmpsl
jnp
cmpsb
enter
test
xchg
or
and
mov
jmp
pop
mov
int3
or
lods
jae
jnp
dec
fs
ffreep
xor
push
loope
add
insl
jnp
inc
pop
mov
sbb
arpl
inc
xchg
les
lock
jnp
and
ljmp
dec
aad
jnp
xchg
lds
loope
pop
fst
push
mov
imul
cs
jnp
sub
dec
imul
sbb
mov
cs
dec
add
sbb
xor
jge
daa
add
icebp
test
or
jge
dec
pop
cmp
pusha
inc
leave
in
jnp
jns
incl
loop
imul
sub
shlb
aad
inc
xor
imul
jae
data16
das
mov
jnp
xor
pop
ret
mov
push
outsl
jnp
xchg
xchg
sub
adc
lret
imull
xchg
jnp
pop
mov
lods
ds
cmpsl
push
push
paddsw
push
jg
jp
sti
outsl
lock
ficoml
into
adc
cmc
mov
jnp
out
rol
xor
jnp
and
mov
jnp
test
fdiv
pop
pop
rcr
enter
or
mov
aaa
icebp
fwait
inc
jnp
cmp
pop
jnp
mov
ss
test
jnp
mov
pop
mov
sub
outsl
cmp
mov
pop
or
loope
jne
outsl
xor
or
cmp
movsl
jb
or
xor
push
or
test
jne
popa
xchg
cmp
cld
xchg
stos
jnp
mov
adcb
jnp
cmp
mov
jb
mov
in
ret
dec
psllq
loop
jnp
push
sub
ss
popf
test
push
ja
cmc
sbb
jbe
push
cmp
inc
push
cmp
dec
jmp
jecxz
mov
push
imul
pop
aas
addl
inc
fstpt
loope
jecxz
repnz
in
sbb
xchg
xor
pop
sub
add
pop
stos
push
outsl
ret
dec
jnp
inc
jg
pop
mov
jnp,pn
out
scas
fbld
lea
inc
add
jbe
mov
and
adc
sub
shll
pusha
push
mov
das
xlat
movsl
scas
xacquire
jnp
jns
in
dec
add
pop
lods
sarb
xlat
add
lods
repz
movsl
insl
adc
push
sub
sub
cmp
xchg
testl
sub
jb
push
mov
repnz
in
jbe
add
test
test
dec
mov
mov
push
add
push
dec
xchg
inc
out
mov
xchg
mov
cmp
insl
jnp
cli
imul
push
test
call
ficoms
mov
fwait
inc
push
add
mov
out
add
rorl
popf
inc
xor
sub
mov
or
mov
out
je
jne
lret
jb
or
mov
pop
cmp
add
push
push
sbb
jne
xor
cli
in
push
sbb
jne
mov
jae
push
std
outsl
testb
movsb
loop
sub
dec
inc
cwtl
push
mov
ja
gs
mov
movsb
stos
push
movb
sti
jnp
dec
push
mov
jnp
inc
aam
jg
adc
pop
test
dec
sahf
mov
outsl
lcall
aad
imul
jnp
xchg
inc
dec
test
push
insl
imul
fcoml
pushf
in
das
push
inc
mov
cmpsb
fstpt
leave
mov
sbb
inc
mov
lahf
mov
jnp
mov
or
add
cwtl
jnp
jg
jecxz
pop
jnp
ret
out
and
arpl
inc
or
inc
mov
cmp
jnp
add
in
jnp
call
cwtl
pop
enter
shlb
xchg
ret
dec
xchg
jae
out
add
mov
inc
xor
pop
popf
xor
mov
aas
stos
dec
push
dec
imul
scas
push
fstpl
push
je
xor
mov
mov
jnp
aad
enter
jnp
mov
push
or
dec
push
jle
addr16
mov
mov
cs
pop
and
xchg
idivb
jnp
add
dec
push
sub
jnp
add
mov
popa
scas
xor
push
adc
ret
jmp
mov
icebp
xchg
or
cmp
imul
dec
shlb
bound
push
int3
xchg
lret
adc
ss
add
and
jae
push
fs
jnp
cmp
xchg
cmp
jp
xchg
cmp
push
push
xor
cmp
ds
add
cmp
call
sti
lret
pop
mov
push
push
arpl
adc
mov
insl
sub
ja
cmp
stos
loopne
inc
sbbl
jne
push
and
jnp
push
sbb
cmp
fmul
and
leave
rcl
fsubrs
ljmp
in
jp
lock
insb
out
addr16
push
outsb
ds
les
enter
aam
decl
jo
pop
shrl
inc
icebp
lods
jp
mov
mov
sbb
pop
xor
aam
jnp
outsl
mov
test
add
mov
in
loope
popf
and
imul
jb
loop
lret
inc
shlb
jnp
aaa
adc
cli
jnp
sub
sub
icebp
jle
ljmp
cmp
cmp
jnp
mov
push
pop
adc
lds
repz
es
ret
xchg
insb
fdivr
jnp
cmp
mov
jo
lret
dec
lods
gs
mov
and
and
je
int
jnp
lods
jno
loopne,pt
fs
imul
jb
inc
xchg
jns
jnp
bound
in
ret
test
sti
jnp
pop
daa
jns
rcrb
jnp
sub
repnz
mov
mov
dec
pop
lock
imul
data16
cmp
rclb
adc
pop
adc
xor
jae
pop
fistl
cld
cmp
mov
out
xor
lock
rclb
push
movsb
dec
sbb
add
sarl
mov
push
xchg
popa
test
or
mov
out
mov
cmpb
or
jnp
and
mov
jnp
adc
idivl
jnp
or
iret
jnp
in
in
jne
push
or
inc
or
sub
imul
inc
bound
mov
pop
cmpsb
outsl
and
jnp
ret
rcrl
xchg
and
jnp
push
push
mov
call
sbb
sub
xchg
repnz
lds
pop
xchg
in
pop
jl
mov
cmp
pop
js
mov
mov
dec
sub
enter
sbb
jnp
cmp
stc
shl
leave
cmc
mov
pop
into
mov
sahf
shlb
jnp
int
loopne
jne
stos
jne
jge
addr16
or
negb
jnp
lahf
lds
fst
in
pop
xchg
cmc
mov
mov
insl
divl
loop
jne
cmp
pushf
imul
repz
sbb
lret
jnp
fs
fisttps
cli
unpckhps
xor
sub
or
insb
enter
movsl
sub
cmp
inc
jnp
mov
scas
adc
pop
lds
cmp
out
cmp
cltd
ret
jnp
cmp
or
push
jnp
aaa
imul
mov
pop
icebp
inc
inc
gs
fs
xor
push
insb
add
imul
pushf
mov
jnp
call
int
jnp
popa
xchg
das
test
jb
jnp
xor
cmp
lods
out
jecxz
and
jnp
inc
fwait
shrl
xchg
adc
movsl
and
sub
jo
les
or
into
jnp
sub
and
loope
xchg
hlt
cltd
jb
fwait
popf
cli
adc
push
fwait
xor
cwtl
dec
gs
jnp
sar
js
cmp
jae
insl
rcrl
fcom
jnp
jg
jge
push
dec
xchg
sbb
push
call
inc
inc
ja
jnp
inc
fisubl
jnp
inc
movsb
sub
ret
mov
jnp
rclb
adc
or
add
mov
xchg
cmc
mov
lock
jnp
dec
movsb
inc
movsl
pop
and
insl
loope
push
icebp
ja
pop
pop
jae
and
sbb
and
js
sarl
imul
mov
and
pusha
sub
jb
mov
lea
or
cmp
lret
mov
xchg
jnp
cmp
lds
dec
mov
bound
add
sbb
out
fwait
xor
pop
into
jg
jnp
fbld
and
jle
push
aas
in
mov
adc
icebp
inc
pusha
adc
push
lcall
lahf
dec
cmp
fisttps
sub
fcom
sub
mov
dec
bound
push
addr16
sbb
adc
fisubs
dec
xchg
xchg
jnp
cmp
shll
xchg
inc
adc
cmpsb
fs
cli
pop
jae
xchg
add
or
das
cmp
fwait
mov
gs
or
and
pop
ss
and
jnp
out
pop
mov
lock
ret
push
sub
mov
mov
cwtl
xor
cmp
scas
pop
in
pop
jnp
xor
adc
sub
mov
imul
mov
cmp
int
mov
sarl
or
inc
sbb
lods
rcr
pop
push
push
inc
xor
jnp
lret
ret
lea
arpl
jnp
sbb
sbb
in
push
int3
mov
mov
lcall
sub
adc
adc
testl
inc
xchg
xchg
xchg
sub
mov
cli
sub
fbstp
push
pushf
xchg
outsl
jo
jnp
mov
sub
imul
mov
fcmovnbe
fistpll
and
hlt
adc
outsl
in
xchg
cmpsb
mov
mov
movsl
cmc
insl
orb
or
xor
push
ds
dec
pop
outsl
mov
cmp
dec
iret
mov
lret
inc
das
adc
mov
dec
pusha
sbb
inc
or
addr16
repnz
jnp
xor
jle
xor
stos
adc
add
scas
mov
mov
sub
test
xor
inc
in
jge
inc
lds
jnp
sahf
sbb
xor
mov
jnp
js
pusha
daa
mov
je
and
cmpsl
mov
mov
test
jae
xor
call
scas
bound
xchg
or
jae
mov
inc
and
cmp
int
push
scas
lods
cwtl
lock
jb
mov
jnp
dec
mov
lret
inc
rcll
pop
dec
push
imulb
ret
cmp
jnp
imul
xchg
jl
mov
repnz
jb
pusha
icebp
dec
sahf
xor
cmp
stos
scas
mov
jp
in
cmp
movl
mov
mov
mov
dec
js
dec
hlt
outsb
insl
jle
xchg
test
xchg
cmc
add
add
push
stos
mov
rclb
mov
or
fmul
jge
pop
mov
fisttps
or
nop
adc
pusha
jnp
sbb
iret
movsl
cmc
test
adc
enter
pop
sub
mov
das
outsb
ret
test
fldt
cmpl
mov
and
aam
out
jno
or
push
inc
repz
xor
sbb
out
cmc
inc
jo
sbb
outsl
imul
xor
lock
pop
outsl
adc
push
aad
ja
cwtl
sti
enter
cmpsb
xlat
xor
mov
xchg
in
ret
jb
ffreep
jnp
and
fdivrs
pop
stos
ljmp
cli
adc
jno
insb
mov
jnp
push
mov
popf
jnp
popa
cmpsb
out
stos
test
dec
mov
in
outsb
and
out
fs
mov
stc
push
mov
mov
sub
addl
jnp
dec
std
icebp
scas
pop
subl
pop
loope
outsl
jnp
sub
bound
fwait
testl
lea
mov
dec
dec
sbb
aaa
jbe
ret
push
jo
scas
pop
imul
or
lods
mov
sti
cmp
test
lahf
or
cld
stos
jmp
ror
mov
loope
das
jl
cmpsb
lock
incl
or
jne
test
adc
or
iret
jnp
lods
lods
hlt
ficompl
sahf
shlb
adc
ja
hlt
bound
jnp
call
in
mov
and
push
jp
pop
push
xchg
jnp
mov
rclb
sti
push
sar
insl
xor
sub
adcb
add
mov
dec
cmc
inc
daa
into
test
adc
add
int
pushf
and
jmp
fwait
in
jnp
xchg
shr
pop
arpl
mov
jg
je
outsb
cs
jnp
or
jmp
fisttpll
jnp
and
lock
shrb
cmpsb
adc
inc
stos
dec
mov
push
jl
jno
imulb
fisttpl
jnp
imul
pop
mov
out
leave
jnp
into
notb
jnp
aad
jne
call
add
dec
and
cmp
dec
popa
sub
and
jns
in
dec
into
das
push
pop
test
repz
push
add
and
das
insl
and
jnp
ds
jae
mov
ljmp
icebp
sbb
repz
hlt
jns
sbb
pop
insb
mov
incb
jnp
mov
pop
int
lds
pop
dec
out
push
jnp
dec
rorl
cwtl
or
call
jnp
sub
stc
jae
aam
arpl
cmc
scas
loop
les
shr
adc
out
shlb
push
jnp
pop
in
inc
fndisi(8087
dec
mov
push
xchg
lcall
push
test
sub
dec
les
or
ret
pop
mov
aad
mov
jle
mov
js
add
mov
into
lahf
call
xchg
and
mov
or
mov
test
add
or
rorb
sarl
jecxz
cmpsb
xchg
lret
shlb
fwait
insl
ror
sub
push
dec
data16
sbb
sub
and
jae
popa
aas
xchg
ja
insb
jl
sbb
fidivrs
dec
sbb
insl
outsb
sub
xor
jnp
rcl
fwait
mov
movb
cmpsb
push
dec
add
jae
mov
fwait
mov
jnp
out
mov
test
mov
jnp
nop
and
imul
sahf
push
and
in
outsl
pushf
jnp
jle
sti
or
mov
xchg
xchg
fiaddl
testl
or
jmp
or
dec
jnp
mov
jecxz
ret
pop
insb
inc
mov
loopne
xchg
lds
xchg
ffreep
fmull
ret
jae
das
and
inc
jnp
in
scas
dec
cli
xchg
sbb
cltd
pop
dec
jno
imul
jge
sarb
insl
outsl
nop
shrl
jnp
out
bound
scas
lret
mov
jae
mov
cmp
je
xchg
stos
aaa
dec
in
std
jnp,pt
sbb
jbe
dec
dec
outsb
jnp
pushf
cs
stos
in
add
inc
pop
popa
les
jmp
sub
lcall
movsl
push
pop
xchg
or
mov
jnp
xchg
pop
sbb
mov
divl
push
mov
jne
push
jnp
icebp
adc
xchg
loop
adc
jae
adc
mov
mov
mov
jnp
adc
inc
xchg
lock
fwait
jnp
pop
addb
lea
push
pop
sub
mov
imul
rcr
outsl
inc
or
jnp
cld
jg
cmp
sbb
loop
insl
mov
insb
out
cmp
out
add
aad
pop
gs
fisttpl
rorb
fcmovu
xchg
fcom
addr16
jle
nop
stos
frstor
mov
jae
pop
into
mov
mov
outsb
in
ret
jp
mov
or
repnz
sbb
push
jp
jns
or
or
mov
inc
and
push
inc
jnp
jno
and
mov
jnp
pop
mov
mov
push
pop
lock
jl
subb
mov
jb
or
dec
inc
pop
stos
cmp
sbb
sbb
sub
sarl
xchg
movsb
gs
xor
fnstsw
jnp
stos
xor
add
adc
jnp
push
insl
repz
mov
inc
or
jnp
mov
dec
mov
pop
out
sub
jnp
addr16
pop
icebp
cmp
mov
subl
sahf
lret
cltd
imul
sub
pop
inc
es
sbb
sbb
jnp
sbb
sub
mov
sbbb
cmc
or
cmp
push
jae
inc
and
cmp
ret
dec
and
cld
jp
push
push
push
jnp
push
nop
sbb
inc
adc
mov
in
dec
aaa
cmp
sub
cmp
mov
xor
xchg
mov
sbb
sbbl
insb
sbb
loop
mov
mov
lea
cmpsb
enter
or
xor
mov
jle
inc
push
jnp
jg
bound
pop
adcl
mov
adc
or
inc
push
sub
jnp
xchg
enter
pop
jnp
push
fcoml
pop
mov
movsb
shlb
inc
mov
mov
sbbb
mov
dec
dec
iret
jge
std
or
mov
test
aas
push
and
in
ds
mov
gs
ret
jae
in
mov
test
fnstenv
dec
sbb
cmp
mov
arpl
int3
jmp
mov
pushl
cmp
pop
push
jnp
enter
in
dec
rorb
jno
lds
fidivrl
push
lods
lea
sbb
xchg
insl
push
mov
mov
jnp
sub
loopne
mov
dec
dec
lcall
jae
insl
imul
imul
outsl
repnz
mov
hlt
push
and
and
push
outsb
sub
jnp
push
pop
dec
jmp
sahf
inc
jnp
or
mov
dec
cwtl
cmp
cmp
lcall
int
mov
pop
ficoms
pusha
push
mov
addr16
mov
dec
insb
jnp
xchg
mov
mov
nop
bound
add
jge
repnz
ret
jnp
mov
or
sbb
or
lret
fcmove
loopne
imul
data16
jno
mov
mull
fisttps
jae
sub
outsb
scas
jnp
sbb
sbb
jnp
lcall
or
xchg
mov
xor
fstp
out
test
loope
xchg
xchg
and
jae
pop
dec
jo
fcomip
lods
loopne
xchg
add
loop
scas
fldenv
adc
pop
jnp
lret
dec
pand
jnp
mov
ret
cs
jnp
cld
into
inc
or
idivb
call
sub
sub
popa
insl
pusha
test
leave
add
add
jnp
scas
mov
mov
push
or
jnp
in
int3
and
ss
stos
sub
outsb
push
rorl
jnp
popa
test
aas
test
jnp
add
test
aam
xor
jbe
jae
movsl
bound
cmp
sahf
mov
cmp
jnp
fwait
mov
mov
and
xchg
jl
inc
push
dec
inc
pop
jp
xor
mov
lcall
or
test
xlat
jnp
in
mov
add
ss
hlt
pop
jno
add
sti
test
add
mov
call
das
pop
mov
lods
imul
idivb
xchg
push
fidivrl
sbb
xlat
jnp
outsb
fbld
sbb
lret
in
mov
pop
sbb
jae
or
jmp
clc
pop
stos
xor
pop
sub
jno
push
inc
xchg
mov
int3
imul
sahf
aam
jnp
into
cwtl
loop
test
pop
xchg
lods
bound
int
mov
push
jae
sahf
or
jnp
pop
jl
aam
sbb
xchg
out
xor
mov
shlb
mov
out
je
fstpt
push
sbb
cwtl
jnp
jno
add
pop
cs
ss
dec
in
and
loope
imul
test
les
mov
mov
imul
in
pop
dec
mov
jae
add
dec
push
push
mov
aaa
push
cmp
mov
js
jae
push
jb
cmp
out
pushf
xchg
jb
push
fdivrs
mov
and
jnp
test
dec
xchg
fdivs
lret
add
jno
in
test
inc
ficompl
rcr
adc
add
cmp
jl
adc
mov
dec
dec
jle
in
sub
add
in
pop
ds
dec
xchg
mov
add
outsb
jnp
fwait
cltd
testb
lret
daa
jne
or
jg
push
inc
stos
jnp
or
test
push
add
jnp
mov
jmp
mov
insb
cwtl
pop
popf
stc
jmp
adc
jae
imul
or
gs
call
jge
enter
sbb
mov
xlat
pushf
push
add
mov
sub
insl
sbb
push
dec
inc
jbe
xchg
lcall
std
mov
jle
test
adc
mov
mov
fisubrs
pop
call
mov
js
movsl
movsb
out
xor
repnz
mov
lds
mov
mov
and
jmp
imul
mov
inc
lret
pop
and
sub
add
and
clc
jnp
jl
dec
mov
push
dec
jnp
or
loopne
adc
pop
fs
clc
testb
pusha
mov
lds
pushf
cmc
jnp
std
mov
pop
gs
jge
das
and
out
mov
andl
mov
pop
jnp
push
add
xchg
jnp
mov
std
adc
fs
jnp
push
push
or
sbb
dec
fidivl
inc
mov
xchg
leave
icebp
jnp
lods
aad
mov
jge
xchg
pusha
movsb
aaa
sbb
fucomp
loop
jnp
xlat
adc
mov
dec
cmp
dec
out
and
push
stos
hlt
jge
pop
jmp
pop
add
into
jnp
inc
or
les
jnp
and
hlt
mov
jmp
int3
sbb
es
lods
mov
sbb
cmpsb
outsl
mov
aas
rcrb
arpl
cld
jg
cmp
push
push
jae
mulb
push
pop
cmpsl
push
or
enter
pop
jg
mov
cmp
pop
pop
pop
push
pop
popa
mov
mov
jnp
jl
leave
inc
fstps
shlb
pop
jnp
push
pop
loope
dec
movsl
cld
cmp
loopne
lds
mov
adc
sub
add
xchg
adc
shlb
dec
dec
aas
jb
notb
mov
clc
jno
dec
gs
mov
or
push
push
repnz
lea
push
inc
cmp
sbb
ret
jne
out
dec
adc
xchg
jo
add
pop
loop
outsl
xchg
xlat
xchg
jnp
pop
gs
sahf
sbb
sub
mov
push
xor
jae
jb
mov
lret
adcl
xchg
icebp
cmc
jnp
aaa
push
jne
jge
jo
sub
bound
pop
mov
jmp
mov
aas
sbb
xor
add
cwtl
test
cmc
movsb
sarl
jae
and
mov
cltd
mov
add
and
xadd
imul
cli
movsl
xchg
jnp
add
xor
cmpsb
jl
pushf
inc
inc
pop
xlat
jo
jg
jnp
scas
and
mov
pop
jnp
xchg
outsl
popf
sbb
repnz
jnp
adc
pushf
add
insb
iret
jnp
add
sbb
cpuid
decb
loop
dec
xorl
shlb
stc
into
bound
outsl
int
insl
rclb
clc
jnp
mov
stos
mov
push
out
mov
sub
jge
xchg
jnp
test
nop
in
xor
popa
jnp
mov
mov
outsb
dec
jae
stos
ds
into
jg
pop
mov
sbb
mov
push
cmp
xchg
stos
aad
inc
dec
xchg
into
jbe
nop
rorl
aam
or
and
sbb
js
jae
vmptrld
adc
mov
or
cmp
push
and
pop
jnp
and
int
movsl
mov
mov
fmuls
and
dec
insl
mulb
push
mov
xchg
dec
fisubrl
frstor
jl
aas
lock
decl
outsb
pop
or
bound
lahf
mov
filds
jnp
add
fldt
insb
mov
push
adc
and
imul
enter
or
aam
xor
mov
push
imul
loope
shlb
imul
inc
rorb
int
pusha
xchg
in
lods
cld
cmc
jnp
das
lret
fnsave
fs
pop
xor
inc
push
inc
jae
jmp
jle
xchg
movsl
jecxz
lods
ds
in
js
dec
xchg
push
ja
dec
add
xor
mov
fwait
sub
pop
gs
xchg
dec
and
or
mov
rcrl
out
sahf
dec
sbb
sbb
sub
mov
icebp
adc
aas
adc
out
test
das
test
jb
jnp
loopne
fcmovnb
and
mov
outsl
daa
xor
cmp
dec
mov
in
sub
jnp
cmp
jp
daa
cmp
jno
popf
adc
jnp
add
or
jb
dec
loopne
lahf
jnp
sbb
sub
add
cltd
mov
imul
sbbl
jns
jle
cmc
jnp
lahf
leave
or
out
data16
push
xchg
out
xchg
mov
sub
cwtl
cmp
dec
aas
and
lahf
and
outsl
loopne
push
dec
insl
push
inc
mov
mov
cli
movsb
jbe
or
inc
sub
dec
mov
shlb
std
jae
mov
dec
stc
push
adc
jnp
ffree
rcr
popa
jnp
inc
sub
shll
mov
jecxz
cmp
cmc
mov
dec
out
outsl
scas
popf
out
cmp
mov
push
test
ds
jnp
pop
hlt
push
push
sub
or
aaa
jnp
sbb
and
mov
lea
call
sbb
mov
jnp
fisubl
pop
lcall
dec
mov
stc
cmp
dec
push
cmpsl
xor
fchs
stos
cltd
dec
sub
cmp
jae
pop
int
in
ficomps
mov
xor
inc
dec
push
sub
xchg
mov
jnp
add
xchg
mov
lahf
enter
add
xchg
sbb
rcrl
fnop
ja
mov
cmp
lahf
loopne
jnp,pt
insb
call
je
cmpsb
out
xor
mov
roll
cli
and
popa
push
mov
je
sbbl
outsl
pop
sub
daa
jnp
dec
xlat
ss
pusha
in
lods
popa
jnp
jmp
sar
fisttps
jle
jge
dec
insl
push
push
iret
jbe
inc
lods
test
push
aam
popf
pushf
mov
daa
jle
and
mov
fdivr
test
xlat
cli
ljmp
lcall
js
cmp
mov
dec
dec
jnp
ss
push
mov
dec
lcall
ja
fsubrl
shll
sti
andnps
xchg
out
jnp
jno
or
add
sub
mov
and
iret
loopne
test
ss
imul
jnp
mov
xchg
mov
call
sbb
fsubr
fnstcw
and
stos
lods
rol
xor
dec
mov
mov
jnp
push
xlat
std
fdivl
dec
push
imul
movsl
stos
and
push
dec
scas
xor
clc
popa
jmp
jmp
add
sti
dec
mov
push
out
call
lahf
imul
mov
xorb
jp
aam
scas
outsb
xorb
aas
sub
push
cmp
in
push
insb
mov
push
jnp
jmp
shrb
xchg
mov
and
jnp
jp
or
dec
sub
notl
adc
mov
shlb
mov
sahf
add
out
ss
sbb
inc
lds
jae
dec
out
outsl
ljmp
lcall
jmp
nop
jnp
je
ret
push
inc
mov
jp
jnp
ret
cmp
cmc
stc
push
test
add
fs
mov
mov
int3
mov
push
jb
mov
es
jnp
cmp
arpl
mov
scas
inc
sti
cwtl
in
xchg
xlat
leave
jnp
mov
jns
mov
jnp
adc
int3
dec
mov
ljmp
and
xlat
lock
jnp
push
test
mov
dec
popf
cmp
inc
pop
stos
push
jnp
push
in
out
lods
dec
and
mov
mov
leave
cmpsl
aad
push
pushf
jnp
jge
ja
pop
mov
and
dec
cwtl
inc
lods
mov
dec
out
insb
and
jnp
daa
lods
ds
sbb
mov
inc
aaa
pop
and
lock
mov
cmc
ljmp
imul
cmp
xor
aad
mov
sub
mov
jg
mov
sub
sbb
dec
sarb
jnp
cmpsb
push
and
fstpt
mov
js
cld
scas
sbb
in
mov
in
mov
lahf
popa
sti
dec
insl
rcr
sub
cmc
or
xor
bound
add
xor
mov
and
lds
cmp
jae
in
mov
jnp
push
mov
pop
jnp
rcrl
repnz
mov
cmp
cmc
cmp
jmp
push
sbb
jnp
cmpsb
lret
rcrl
mov
pop
pop
jno
es
and
inc
adc
push
jbe
cs
aas
xchg
fs
mov
mov
les
lret
ja
pop
dec
fdiv
gs
jecxz
cmp
and
add
add
int
scas
in
aad
pop
loopne
fmuls
aam
mov
repnz
in
pop
jnp
and
jae
out
pop
in
pushf
inc
jmp
inc
dec
aad
je
in
insb
ret
cltd
int
cmpb
lock
add
scas
pop
imul
pop
xchg
dec
cwtl
xor
inc
mov
or
mov
mov
xchg
xor
mov
push
mov
adc
fs
inc
lcall
lea
jnp
in
mov
cmp
jnp
pop
cmp
sub
and
sbb
test
xor
or
es
pop
cld
and
insl
cmp
inc
in
dec
jnp
pusha
iret
cmc
or
dec
sbb
jae
mov
pop
movsl
insb
mov
xor
mov
cmc
jmp
cltd
cli
in
pop
xchg
fwait
jnp
jl
dec
gs
jne
sub
sbb
in
cmp
and
xlat
dec
xchg
outsl
xor
loopne
dec
imul
call
cli
push
lahf
lret
mov
xchg
xchg
jnp
enter
inc
jnp
icebp
push
ja
call
jg
imul
fstpt
jnp
movsb
mov
repz
jnp
aad
and
int3
mov
imul
inc
pushw
stc
sub
ss
pop
sarl
or
lret
mov
aad
rorb
dec
iret
fistps
mov
lea
daa
lret
xchg
dec
jo
stc
jnp
sub
mov
pop
pop
orl
and
sbb
std
cld
jns
pop
mov
xor
scas
add
inc
sarl
add
aam
lea
out
adc
sbb
ret
adc
cmp
repnz
cmpsl
or
outsb
xlat
pop
dec
jnp
push
sbb
mov
inc
sha256rnds2
jmp
xchg
mov
flds
dec
cwtl
cmpsl
stc
insb
outsl
pop
jno
push
or
in
push
jno
mov
cmp
fildl
push
pop
lods
push
lcall
jne
in
gs
adcl
cltd
push
lods
jnp
jge
mov
jnp
enter
pusha
xlat
lcall
push
xor
push
testb
in
div
and
shl
sbb
js
sub
dec
fwait
lods
dec
rep
or
ret
scas
pop
ja
xchg
in
xor
loop
sbb
jo
add
cmp
je
fcoms
rol
dec
js
insb
dec
icebp
mov
inc
pop
mov
sub
jnp
cwtl
testb
cmpsb
int
cmpb
insl
je
inc
jnp
shlb
imul
loopne
jb
dec
cli
cmc
mov
inc
test
cmp
les
lods
xor
cmp
ja
mov
mov
adc
cmp
xchg
mov
enter
lahf
or
loopne
je
dec
xor
adc
dec
lock
leave
mov
add
sbb
icebp
enter
jbe
cmpl
outsb
jge
inc
push
xchg
dec
lret
loopne
or
mov
lods
jl
or
fisttpl
mov
hlt
jae
xor
test
push
and
lret
pop
push
or
jae
mov
push
jle
jp
subb
mov
sub
aam
insl
scas
jnp
popa
rcr
adc
sarb
mov
sbb
jnp
cli
in
test
sbb
mov
push
sbb
pusha
mov
inc
call
and
repnz
adc
push
push
jb
push
fstpt
or
sub
jae
shlb
jb
into
mov
flds
sbb
fistpl
mov
in
insl
inc
mov
jbe
jge
jnp
pop
mov
adc
add
stos
in
jne
mov
in
mov
jnp
pop
enter
fistpll
jnp
sub
jecxz
add
jnp
out
daa
roll
ds
imul
dec
jb
push
mov
mov
jnp
jmp
or
mov
xchg
hlt
jnp
frstor
adc
cmpl
imul
popf
cmp
aaa
mov
aad
popa
xchg
gs
stos
insl
in
push
leave
and
mov
or
cltd
mov
scas
outsl
pop
dec
popf
subb
je
out
dec
fcomps
out
pop
mov
jnp
mov
addr16
psubw
out
gs
xor
filds
andl
lcall
out
jnp
jecxz
sub
loopne
insb
mov
xor
add
add
jnp
and
pop
adc
jmp
imul
cmpsb
sub
outsb
sbb
test
jnp
lldt
loop
lods
jnp
dec
and
jnp
pop
repnz
dec
cmp
jnp
adc
insb
xchg
imul
stos
sbb
cmp
js
addr16
jle
jo
js
inc
jnp
xor
xchg
push
pop
mov
jae
in
xor
test
mov
aaa
jno
sub
icebp
mov
das
jnp
push
xchg
mov
scas
jl
mov
outsl
cwtl
mov
lods
imul
adc
jnp
icebp
out
add
aam
cmpsl
mov
test
jns
cmp
pop
loop
shlb
push
or
in
das
sti
sar
enter
inc
sub
and
mov
jnp
gs
fisttpll
and
mov
scas
sub
xchg
test
outsl
in
fndisi(8087
movl
mov
mov
hlt
add
jnp
mov
shrl
or
dec
fs
loope
fdivrs
out
out
jnp
das
cs
jno
jnp
cld
std
cli
sarb
mov
adc
int3
mov
inc
data16
lahf
aam
and
jb
movl
nop
cltd
outsl
cmpsl
dec
or
dec
push
or
sahf
fwait
stos
inc
inc
jnp
and
xor
cmpb
pop
xchg
ds
arpl
pop
dec
mov
in
repz
jg
imul
mov
jnp
out
pop
in
popa
out
dec
pop
xchg
std
pop
es
sbb
xor
xor
push
fmull
pop
sub
jnp
test
aam
jmp
inc
add
mov
cs
outsb
ret
lcall
adc
add
pop
cltd
imul
jnp
and
arpl
add
jne
call
outsl
clc
or
lock
cmpsb
movsb
daa
dec
rolb
jnp
cli
js
mov
dec
fnstenv
stc
jae
add
lret
rcr
and
iret
enter
pushf
xor
dec
pop
jg
or
sbb
and
mov
jnp
lea
jb
clc
in
push
inc
sbb
ficoml
cmp
pushf
sbb
pop
jmp
iret
ret
xor
jnp
mov
test
leave
mov
sti
mov
fiaddl
jmp
jnp
cmp
and
xor
sbb
and
dec
sbb
jne,pt
push
movsl
call
cmp
jns
lds
pop
stc
jno
rorl
rcrb
jmp
mov
pop
cmpsl
xlat
or
sub
icebp
dec
in
adc
mov
in
inc
adc
jnp
jns
jne
andl
pusha
mov
mov
mov
and
in
pop
push
sub
sbb
push
and
in
iret
or
dec
add
or
cltd
xor
and
scas
sub
les
rol
cld
jnp
setb
adc
stos
add
jl
xchg
inc
ret
lock
inc
push
ds
rcrl
mov
leave
mov
sub
mov
icebp
loop
mov
iret
xchg
fisttpl
jae
sub
push
mov
aad
adc
lcall
js
cmp
mov
ret
and
adc
inc
push
fnstsw
imul
xor
sbb
xchg
loop
ljmp
xor
repz
das
mov
cmp
cmp
jnp
mov
out
loopne
or
add
les
pop
aam
push
mov
mov
sbb
xchg
loopne
icebp
sub
popf
xchg
xchg
and
pop
xchg
pop
push
push
jnp
testl
incl
test
or
lea
and
mov
mov
xor
or
mov
or
fbld
mov
adc
mov
lcall
in
dec
jg
dec
ja
movsl
adc
imul
sarl
inc
push
cmpsl
jnp
gs
inc
fwait
dec
sbb
jnp
sbbb
sub
push
inc
idivl
sub
dec
push
sbb
mov
dec
fstpl
inc
addr16
add
mov
push
xchg
jl
adc
xor
stc
idivl
inc
mov
loop
enter
jb
imul
jecxz
ss
jo
sub
xor
jnp
popf
leave
movsl
repnz
test
mov
shrb
inc
jge
lret
leave
jnp
push
inc
ja
or
popf
jnp
xchg
mov
out
fdivl
pop
xlat
in
cwtl
mov
imul
cmp
call
hlt
mov
or
mov
pop
clc
or
jae
xorb
lcall
cmp
xchg
sbb
adc
sar
jmp
jp
inc
jae
ds
sub
sub
pop
dec
filds
cmp
daa
arpl
sbb
cmpl
cmp
in
lea
fstpl
add
or
pusha
or
push
jne
xchg
sub
cmp
mov
mov
stc
push
outsl
loope
xor
mov
imul
fstl
jns
pop
jnp
in
xor
jmp
sarl
jnp
cmp
and
dec
ret
test
jne
loop
jae
add
jnp
add
adc
sbb
fiaddl
jnp
ror
aam
adc
cmpl
bound
xor
loopne
fdivrs
mov
lret
push
push
enter
xchg
imul
call
and
lret
cltd
push
sbb
sar
sub
xchg
jg
and
push
jnp
dec
ret
or
imul
cmp
addr16
insb
and
movsb
jg
sub
adc
outsb
or
sbb
lods
clc
add
cmp
xor
arpl
fstpt
fisttps
enter
adc
mov
pop
and
push
push
mov
pop
out
leave
or
scas
xchg
repz
jbe
std
jbe
push
fwait
xchg
mov
mov
mov
adc
mov
cmpsb
je
mov
mov
cltd
and
jge
dec
lretw
mov
clc
and
sbb
push
push
dec
aas
mov
jnp
int3
jle
imul
jp
push
mov
mov
imul
add
jnp
mov
pusha
repnz
add
adc
outsb
fsubrs
iret
push
push
cmp
cld
mov
lahf
or
mov
sbb
cmp
lcall
pop
adc
out
iret
stos
jge
hlt
negl
pushf
subl
bound
inc
xor
gs
cltd
stos
imul
pusha
data16
shrl
clc
inc
sbb
ljmp
in
call
xor
movsb
inc
jno
nop
xchg
repz
or
pop
repnz
fucomi
fbstp
sub
jg
pop
adc
or
cmp
dec
mov
jmp
mov
jae
sbb
test
mov
mov
popf
jae
jnp
sbb
push
adc
rorb
repnz
lods
lret
in
dec
mov
push
pop
sbb
js
mov
enter
jp
gs
xchg
or
adc
iret
sub
negb
movsl
pop
mov
repz
roll
aam
aas
jae
inc
int3
push
pop
and
das
adc
inc
adc
mov
adc
clc
adc
popa
pop
fs
add
inc
lea
aad
adc
mov
lods
mov
out
ljmp
fimull
sub
mov
jnp
push
outsw
cs
bound
gs
fwait
xchg
sub
sbb
rcrl
shr
sbb
lds
sbb
mov
jnp
jne
ret
addr16
xlat
hlt
fsts
sahf
test
les
pop
aad
sbb
cmp
dec
adc
jnp
stc
mov
je
lret
imul
sub
mov
pop
in
sbb
or
adcb
ja
add
inc
xor
jg
push
sarl
sarb
sub
xor
ficompl
jnp
sahf
jne
aas
out
imul
xor
lods
sarb
je
jnp
push
jb
add
inc
jnp
cld
sub
dec
jnp
mov
inc
mov
mov
push
jnp
mov
in
cmp
test
jnp
xchg
mov
ja
cli
cmc
mov
jnp
outsb
jmp
aad
call
xchg
xor
imul
mov
add
shl
insl
sbb
xchg
jnp
sahf
fs
mov
clc
and
jnp
sbb
xchg
stos
sbbl
imul
gs
loope
or
dec
push
jg
scas
stos
aaa
cmp
dec
push
or
jge
jnp
add
cmc
xchg
push
add
cmp
jmp
outsb
inc
inc
add
popa
mov
inc
mov
jnp
test
push
in
into
add
sbb
aaa
fisubl
decl
sahf
mov
ret
jnp
mov
lcall
cmp
aaa
les
mov
cmp
xchg
xorl
insb
push
lods
xchg
insl
aas
jnp
fcoml
push
std
gs
jnp
imul
test
or
mov
scas
ja
nop
scas
xchg
hlt
shll
int
jnp
imul
das
lret
mov
lock
test
jne
dec
xor
je
ds
xchg
push
xchg
xchg
inc
adc
js
mov
or
push
jp
inc
sti
jnp
into
mov
jbe
jl
orl
xchg
shll
fstpt
outsl
adc
xor
jnp
jecxz
jp
subb
sbb
das
xor
js
loop
clc
mov
xor
stos
ficomps
adc
jns
fwait
pop
pop
in
mov
push
insl
stos
pop
jne
es
jp
insl
sbb
mov
jnp
arpl
pop
jnp
nop
lea
or
sti
stos
xor
faddl
lahf
push
repz
mov
jbe
jnp
cmp
cmp
repz
idivl
dec
mov
inc
outsl
in
jb
test
enter
jp
in
pop
dec
mulb
inc
xchg
dec
xchg
lds
iret
je
mov
pop
xchg
and
in
push
lcall
push
aas
loope,pt
or
cmpsl
sub
jae
jbe
or
dec
imul
jo
js
lods
data16
mov
pop
repz
or
test
mov
mov
fistl
jae
pop
add
orb
sub
cmc
jnp
scas
lock
test
ret
cltd
xor
in
dec
jl
jmp
fisttpll
fdivrs
or
inc
repnz
xchg
sbb
aad
mov
pusha
and
jb
lods
xchg
mov
jo
adc
jl
mov
mov
xor
jnp
js
xchg
movsl
jb
in
in
testb
leave
xlat
int
sbb
repnz
add
fs
imul
aam
sti
mov
xchg
mov
insb
addr16
push
cs
bnd
add
jae
and
pop
pop
pop
push
adc
iret
insb
mov
lahf
xorl
mov
jnp
or
push
mov
pop
lods
jnp
in
mov
into
rcr
movsl
inc
dec
pop
bound
or
fidivrs
push
je
aas
ljmp
out
adc
insl
movsl
jnp
jge
ret
cmp
jnp
cltd
mov
push
call
or
pop
xchg
push
es
into
adcb
jle
lahf
insl
jo
dec
int3
push
cld
jmp
scas
ja
rcrl
jnp
mov
imul
call
adc
mul
repnz
test
cmpl
push
and
mov
pushf
jo
in
ret
scas
mov
out
in
mov
push
jle
and
lahf
inc
jmp
jnp
push
into
adc
cwtl
sbb
push
add
jp
mov
or
mov
adc
movsb
pop
jnp
mov
inc
addr16
insl
iret
jne
dec
push
cmp
jp
dec
xchg
cmpb
xor
aas
ljmp
pop
outsl
mov
push
jmp
clc
gs
or
lret
aam
sahf
sbbl
imul
mov
jg
jnp
pop
dec
and
jnp
enter
test
icebp
outsl
cmpsl
cmc
lods
shr
jnp
arpl
shrb
adc
call
push
sti
or
addl
xor
jnp
jmp
imul
mov
jo
cltd
jecxz
stc
outsb
jg
outsl
inc
dec
xchg
mov
aas
cmovl
fst
pop
jnp
dec
dec
jle
xchg
or
sub
dec
xor
jnp
jge
and
push
xchg
mov
ja
pop
pop
ret
jnp
sub
mov
cmp
mov
jecxz
into
xchg
dec
jnp
sahf
adc
jnp
out
push
or
ljmp
fldl
or
xor
decb
cmc
mov
adc
jnp
std
rcrb
lods
outsl
xor
adc
mov
fstl
je
or
ss
out
mov
les
mov
pop
jne
jbe
incl
rcrl
mov
mov
cmpsb
sbb
fst
popa
add
sbb
dec
movsb
mov
jl
imul
lds
mov
ficompl
jne
pop
cmpsl
ss
js
push
movsb
imull
pop
pop
add
xchg
adc
jbe
test
imul
jae
or
paddsb
jp
mov
js
push
test
jnp
and
jmp
jnp
and
pop
sub
lods
arpl
enter
sbb
fdivl
nop
and
jne
addl
cli
mov
xor
movsl
push
lods
add
sub
cltd
xor
adc
add
cmp
xor
mov
push
insl
std
pop
jnp
sti
outsl
test
jnp
push
mov
enter
jnp
mov
ja
dec
les
loop
addr16
and
jnp
push
ret
roll
aam
jnp
fisubl
enter
add
insb
xchg
mov
rol
sbb
or
bound
lea
jns
push
jnp
inc
aam
daa
in
cmp
mov
and
sarl
jl
pusha
repnz
jnp
test
imul
rcrl
sbb
jg
icebp
lahf
outsl
xor
or
hlt
jb
push
sub
pop
jmp
sbbb
dec
int
ret
fnclex
jg
and
jnp
xchg
mov
sbb
jmp
cmp
iret
xor
je
or
aad
or
jp
inc
xchg
or
jg
mov
sub
insb
je
sub
clc
pop
call
jne
insl
jmp
fs
je
cmp
ja
inc
imul
jge
dec
mov
xor
jecxz
push
sub
jnp
popa
jl
xor
imul
mov
xchg
cmc
in
cmpsb
repnz
sub
hlt
push
pop
lods
jnp,pn
out
or
ja
test
in
lock
xor
xchg
jnp
test
sbb
sti
insb
or
mov
jnp
cmp
cld
pop
sbb
push
ss
push
push
sub
inc
mov
js
or
lret
push
fisubrs
cmp
inc
xor
jbe
stos
push
or
lar
shlb
and
adc
dec
sti
data16
insb
jne
xchg
stos
arpl
sbb
and
sub
push
or
test
push
je
pop
jnp
decb
mov
or
push
sub
jno
cmp
lret
jle
lahf
and
scas
push
dec
nop
jnp
xchg
mov
mov
pop
add
xor
sbb
insl
lret
addr16
dec
pushf
add
popa
lahf
orb
in
imul
xor
dec
xchg
jnp
dec
stos
add
fwait
sub
jnp
in
out
in
jge
jo
jnp
fstpl
mov
push
jnp
stc
sbb
fnstsw
and
jbe
outsl
outsl
jne
jo
cld
jnp
mov
pusha
leave
in
pushf
mov
jns
jns
popa
jnp
fdivrs
cmpsb
ficompl
mov
lock
les
jnp
lahf
xor
enter
sbb
iret
mov
lea
sub
scas
mov
add
mov
jnp
cmp
mov
jb
jnp
mov
fwait
jmp
ja
xchg
xchg
and
sbb
imul
xchg
inc
mov
inc
sahf
sti
fisttps
xorl
imul
cmpsl
add
jno
jmp
shr
jnp
push
rcrl
pusha
in
jnp
out
loope
hlt
lea
or
xor
or
push
pop
outsl
cmpb
adc
cmp
repnz
sahf
out
ret
idivl
pop
mov
cli
jnp
adc
and
std
ja
add
imul
inc
sbb
xchg
icebp
xchg
fwait
xorb
pop
pop
xor
push
xchg
or
push
mov
cmp
sti
sub
out
stos
leave
test
sub
mov
shlb
inc
mov
pop
dec
scas
push
inc
and
cmc
outsl
mov
nop
sub
jp
aad
sbb
mov
test
jnp
jbe,pt
pushf
in
jnp
movsb
loopne
cmp
xchg
sbb
mov
mov
cmpl
repz
jnp
xor
jmp
bound
stos
icebp
push
xor
pop
adc
jnp
jmp
adc
jmp
xor
and
sahf
xchg
inc
cmpl
mov
pop
icebp
jae
cmp
lcall
in
imul
pop
jecxz
or
sti
ljmp
mov
outsb
jo
sbb
jp
push
sub
inc
mov
dec
test
inc
cmpsl
mov
jp
outsl
sbb
jecxz
addr16
pop
jge
jg,pn
stos
fstl
into
mov
sbb
filds
fsubp
mov
int
push
jnp
fcmovnb
jns
in
fwait
js
fstl
out
fdivrs
dec
fmull
xor
enter
js
fadd
sbb
xchg
or
bound
aas
daa
rdpmc
pop
cmpb
enterw
jmp
and
in
in
idivb
cmpsb
in
gs
or
or
pop
movsb
and
add
js
add
adc
loopne
mov
loope
jg
mov
inc
leave
popa
out
shll
cmp
test
dec
in
push
sbb
cld
ljmp
adc
testb
test
sbb
lret
imul
mov
popa
int
cmp
insb
mov
ret
in
call
clc
jae
cvtps2pi
jnp
xlat
push
int3
popa
icebp
fwait
aas
jnp
or
sbb
adc
push
cltd
jnp
or
outsl
popa
arpl
shll
test
or
jno
dec
pushf
dec
imul
mov
mov
test
push
sarb
lcall
cmp
mov
repnz
fiadds
shll
push
jecxz
ja
in
jns
hlt
jnp
or
pop
push
cmp
pop
jnp
lret
pop
loopne
pop
mov
jnp
inc
add
dec
lahf
outsb
ss
add
lret
xchg
jnp
adc
fistpl
loopne
pop
orl
in
les
mov
incb
addb
outsb
es
orb
xlat
fwait
test
jnp
mov
loop
imul
adcb
jae
shrb
sahf
xchg
loope
and
out
jns
dec
push
mov
push
mov
xchg
hlt
decl
pop
and
popa
push
lcall
out
sbb
adc
dec
and
jnp
xchg
mov
out
jnp
sbb
and
arpl
out
fs
jnp
shl
mov
lds
fnsave
or
add
sub
in
mov
lcall
jnp
imul
mov
adc
mov
dec
push
ffree
xchg
test
mov
sub
hlt
jnp
or
insl
inc
pop
mov
lods
cmp
jge
jae
scas
mov
xor
push
test
cmp
repnz
jae
add
mov
lahf
or
mov
pop
jbe
movsb
inc
sub
jnp
movsl
gs
mov
testb
push
std
push
loope
stos
jnp
nop
cmpsb
cs
pop
pop
mov
fnsave
xchg
arpl
pop
push
imul
imull
ret
cmp
data16
xchg
clc
das
pop
or
sub
in
lcall
pop
lods
lods
or
push
and
jp
cli
in
loopne
stc
mov
jecxz
fwait
sbb
xchg
mov
fdivp
lods
pop
cmp
pop
add
xor
add
cmc
mov
in
popf
push
lods
pop
mov
mov
push
sub
pop
push
mov
inc
movzbl
mov
jne
ret
pop
stc
outsl
test
xor
xchg
push
fwait
push
lcall
stos
pusha
cmp
mov
push
test
jnp
sbb
adc
mov
jnp
pop
jg
push
sbb
mov
es
cmp
aaa
jnp
ret
dec
mov
add
xchg
or
xchg
xor
insl
outsl
dec
mulb
or
jp
in
mov
jnp
mov
pop
and
jne
cmp
imul
sub
loopne
insl
lods
mov
mov
adc
out
add
in
push
lret
pop
adc
sub
bound
scas
popa
jo
cmp
push
cmpsl
jae
fnstsw
jno
repz
inc
jg
dec
insl
icebp
lods
imul
mov
jmp
cmpsb
icebp
cmp
adc
dec
xor
xchg
int
cmp
imul
xchg
in
pop
inc
jge
push
adc
jns
sti
mov
and
xor
xor
jnp
adc
mov
sub
xor
jnp
cltd
repz
popa
or
add
mov
jae,pn
xor
pop
shrl
jnp
and
add
mov
jnp
stos
fwait
push
ljmp
push
sbb
test
or
fnstcw
add
pusha
jg
sub
filds
jnp
sub
add
jnp
inc
pop
and
lock
ljmp
iret
mulb
cmpl
sbb
dec
aam
lret
lahf
mov
jecxz
adc
test
std
cmovno
aas
adcb
mov
out
arpl
add
dec
mov
mov
sarb
jno
sbb
cmp
jnp
lret
daa
or
in
pop
mov
outsl
inc
jmp
dec
enter
sub
ss
and
cli
add
sub
dec
inc
outsl
pop
cmp
jecxz
ret
xchg
mov
add
ja
push
xlat
es
cmpsl
jnp
mov
adc
push
jge
jnp
mov
cmp
pushf
sbb
xor
lock
add
aam
lcall
incb
dec
jae
jnp
insb
add
mov
sbb
jb
mov
orl
clc
add
cwtl
in
imul
push
and
adc
test
repnz
jnp
push
scas
test
mov
inc
jnp
je
pusha
cmp
mov
pop
jnp
in
mov
fists
xchg
jnp
imul
xchg
push
mov
sbb
ljmp
xor
cmp
mov
sbb
mov
sub
sub
mov
std
sub
cli
jnp
hlt
and
xor
lock
push
add
jl
inc
imul
testl
jnp
sbb
cmp
das
pop
adc
mov
jg
ss
ja
into
push
inc
jnp
xor
add
jnp
fcomp
mov
subl
xor
add
jnp
movsb
nop
dec
inc
cwtl
mov
sbb
insl
mov
dec
fists
sub
es
lahf
mov
std
jnp
adc
push
int3
mov
jnp
mov
repz
stos
aas
arpl
add
hlt
mov
cmp
mov
popf
orb
outsb
inc
clc
push
jnp,pt
sbb
iret
pop
jne
pop
push
stos
jnp
cld
out
add
and
cmpsb
cmp
and
mov
pop
sbb
xchg
dec
and
inc
or
scas
mov
mov
fdivp
sub
test
add
out
imul
mov
xchg
sbb
xor
imul
loop
mov
daa
or
hlt
jnp
push
std
push
adc
mov
or
ficompl
mov
sbb
sahf
adc
out
pop
mov
jne
shlb
sub
sub
jnp
xor
mov
fwait
call
adc
jle
push
push
ja
sbb
cli
inc
js
push
push
gs
mov
data16
divb
jnp
enter
dec
or
clc
imul
insl
ret
lods
adc
push
imul
cmpsb
popf
pop
lock
aad
imul
das
arpl
jmp
ret
xchg
out
pop
and
jp
jnp
inc
fsts
pop
jne
mov
mov
pop
push
sbb
je
les
push
int
shlb
cmp
sbb
xor
into
shr
or
lods
lret
cli
sbb
outsb
ja
pusha
lcall
xchg
xorb
jnp
jl
cmp
mov
loop
jnp
rcl
mov
pushf
lods
sbb
lock
xor
aad
push
mov
mov
jo
cmp
cmp
aam
sbb
xchg
mov
jnp
int
sar
mov
jnp
inc
loopne
push
call
jnp
mov
cld
push
call
call
jbe
add
ljmp
mov
pusha
jnp
imul
adc
mov
test
lods
int
xchg
adc
jnp
ret
inc
or
mov
rcll
stos
loop
imul
jnp
inc
xchg
jnp
ss
push
call
dec
dec
test
mov
xor
push
jnp
outsl
adc
cmp
je
xchg
outsb
inc
or
outsb
sarl
xchg
aas
xor
fidivrl
stos
std
fldenv
lods
leave
cmp
jnp
jb
lret
ret
imul
fstpt
inc
cmp
popa
xchg
mov
inc
jno
imul
arpl
push
dec
lret
out
nop
insb
dec
jnp
lds
dec
jnp
test
sbb
mov
adc
cmpsl
cmp
xor
ljmp
push
mul
aad
ret
ds
xchg
lock
jnp
pop
add
test
addr16
stos
mov
xorl
sub
int3
lret
aad
dec
cmpsb
xor
mov
stos
jae
and
or
mov
lock
mov
sbb
into
insl
mov
movsl
into
mov
pop
adc
mov
mov
leave
and
int3
ret
jle
sub
xor
xchg
insl
fstpt
lret
ljmp
push
xor
xor
pop
jnp
shll
or
inc
pushf
and
aaa
in
jnp
adc
push
cltd
mov
mov
inc
shld
lea
adc
sub
jno
add
pop
or
stos
jnp
cmpsl
jb
andl
jne
or
je
mov
adc
cmp
add
je
push
imul
inc
fmull
jbe
jle
movsl
outsb
jl
mov
push
pop
pop
lret
mov
out
fisttpll
mov
rcrb
push
addr16
mov
pop
sbb
sahf
pop
int
jmp
push
insl
je
push
adc
lods
mov
jnp
push
mov
dec
cmp
jnp
imul
xor
mov
fcoms
jnp
mov
je
inc
inc
out
sbb
test
jnp
rcll
xor
jnp
and
inc
in
loop
mov
push
notl
xchg
sbb
insl
sub
xchg
std
pushf
ja
leave
cli
mov
jnp
add
ret
inc
mov
fstpt
xlat
adc
jnp
popf
and
add
cmp
push
or
jecxz
stos
shr
jb
data16
sbb
jne
cmc
xor
mov
in
jecxz
jne
lret
or
lods
push
stc
jnp
outsl
xor
test
inc
jno
and
jns
jnp,pt
insl
cmp
add
ret
jnp
adc
jnp
fwait
or
sahf
mov
sbb
adc
or
adc
jnp
orl
ja
loopne
pop
xlat
jne
orb
pop
jbe
mov
pop
stos
outsl
sub
adc
jne
push
sbb
lret
and
jnp
nop
inc
movsl
jae
mov
adc
cmp
push
inc
shll
sub
jb
mov
ret
jecxz
pop
or
xor
cmc
arpl
repz
jbe
or
push
imul
pushfw
insl
roll
movsl
xor
mov
xchg
sub
out
outsb
adc
mov
and
jnp
pop
xchg
cmp
cmp
movsl
jnp
sti
jg
add
leave
pop
jnp
sub
orl
pop
jnp
sti
mov
add
dec
lahf
clc
xchg
add
enter
and
sub
movlps
sahf
lcall
jnp
pop
inc
jno
out
push
jnp
mov
cmp
mov
pop
adc
les
loopne
or
mov
cmp
jge
add
jae
pop
fistl
in
sbb
add
mov
sahf
fdivs
push
dec
sub
dec
cwtl
adc
jnp
mov
or
scas
adc
movsl
aaa
push
jnp
jb
mov
int3
fs
jo
sub
jns
add
ds
pop
out
xor
cli
cmp
lret
mov
and
vaddsubpd
sarl
dec
out
sbb
xchg
sub
mov
test
push
mov
jnp
xor
jnp
and
xor
aas
push
push
lret
mov
arpl
adc
in
ljmp
sbb
xlat
jp
xor
dec
inc
enter
stc
mov
fwait
test
xchg
pop
fsubr
fsubr
je
dec
xor
mov
aad
mov
pop
or
mov
lcall
cmc
jp
fwait
das
sbb
mov
xlat
in
xchg
dec
ja
or
cmp
daa
les
inc
enter
pop
cltd
fidivrl
push
jnp
hlt
or
enter
jo
out
adc
or
or
call
push
jno
lods
out
dec
nop
xchg
or
mov
xrelease
lret
jns
insb
pop
cmp
jmp
ds
mov
out
push
push
xlat
arpl
aam
mov
push
imulb
pop
mov
sub
jnp
push
pop
arpl
scas
jb
mov
ljmp
sub
imul
mov
js
and
xchg
int
popfw
inc
cmp
mov
push
loop
popa
mov
std
sbb
adc
fwait
jbe
dec
jnp
xchg
fadds
jnp
and
sbb
push
cmovl
mov
cmp
adc
cli
ja
jo
dec
mov
jns
jge
pop
jnp
add
mov
jnp
push
sub
dec
aas
fistpl
and
imul
or
pop
outsb
scas
out
pushw
shr
insl
les
lock
mov
pusha
and
repnz
outsb
mov
popa
jns
inc
setae
imul
aas
cmp
xchg
jecxz
cmpsl
fwait
ret
sarb
jae
cwtl
dec
jecxz
test
leave
jb
sub
mov
fldl
dec
jp
xor
jecxz
sub
imul
insb
or
in
push
jb
cmp
jnp
and
and
int
jne
je
inc
sbb
jnp
push
push
outsl
cmc
mov
sub
lock
mov
jno
dec
add
ja
in
sub
mov
pop
add
or
sub
sub
dec
cmp
xchg
xor
jnp
mov
xor
adc
jnp
cmc
xchg
jl
filds
imul
nop
outsb
cld
mov
out
mov
jnp
jmp
and
call
lock
or
pop
jae
jb
shlb
cmc
xchg
movsl
dec
dec
push
jnp
test
lret
icebp
pop
cmp
push
aaa
mov
std
push
stc
push
or
jo,pn
dec
sbb
cmp
xchg
mov
subl
jnp
jns
mov
dec
add
push
loope
xor
jae
mov
outsb
sbb
in
push
and
jb
imul
fbld
je
sub
sbb
pop
xor
xchg
andb
rcll
movsl
push
cmpsl
xchg
je
int
or
dec
aam
add
addl
cltd
and
cmpsl
mov
lret
and
je
imul
dec
jae
xchg
out
repnz
jnp
fwait
adc
das
fildll
mov
out
push
arpl
movsl
dec
insl
test
daa
and
jg
push
mov
aad
add
popf
mov
shll
in
aas
int3
push
jnp
test
mov
mov
jnp
dec
and
push
jnp
ds
xchg
popa
aaa
pop
and
imul
movsl
jns
outsb
adc
lods
xchg
xor
cltd
outsl
mov
jnp
xchg
jnp
xchg
pop
test
mov
cmp
movb
push
out
cmp
adc
jnp
sub
les
int3
jae
xchg
jle
jge
push
ljmp
cmp
adc
cmp
test
insb
bound
adc
pop
stos
int
push
pop
cmp
fcoms
and
sbb
jnp
cmp
mov
inc
cltd
inc
lea
pop
inc
jne
or
push
ljmp
frstor
repnz
loopne
mov
xadd
leave
clc
rcrb
jb
rcrb
rcrb
dec
cmp
out
ret
adc
xchg
push
jnp
loope
sub
cmpsl
in
jnp
adc
pop
mov
add
jnp
dec
lret
mov
jnp
sub
test
cmp
sbb
push
dec
or
jnp
ficomps
test
jnp
push
xor
int
jo
imul
lret
xchg
or
push
add
in
xchg
xlat
mov
outsl
js
cli
pop
or
cmp
xor
jo
push
cmpsb
jno,pt
cmp
pop
mov
add
outsl
pop
mov
orl
mov
xor
lods
cmc
mov
in
or
out
ljmp
pop
pop
sti
jmp
pushl
xor
test
dec
je
addr16
cmp
mov
push
add
jnp
xchg
out
dec
push
adc
decb
fidivs
int3
jns
fnsave
das
push
add
rorl
jae
repz
jecxz
adc
mov
in
bound
cmp
xor
ret
out
rep
dec
js
sahf
or
call
icebp
pop
xchg
in
pushf
mov
outsl
adc
in
lock
jbe
cmp
dec
add
sti
fcmovnb
divb
fwait
jmp
idivl
out
repnz
pop
in
sbb
loop
cmp
jnp
test
jbe
jne
imul
inc
jbe
ss
fwait
out
mov
mov
mov
xchg
insb
sub
push
dec
dec
push
rcll
adc
xchg
divl
xlat
mov
cli
inc
test
pop
je
fistl
jnp
cmp
dec
into
mov
hlt
mov
push
jmp
je
out
mov
fisubs
test
into
mov
xor
mov
int
sbb
js
adc
std
cmp
pop
rcrl
cli
mov
dec
out
rolb
sar
push
mov
inc
je
je
mov
sub
add
cli
sti
adc
fmuls
inc
pop
js
push
imul
scas
push
cmp
sbb
les
mov
jae
test
mov
add
icebp
xchg
inc
or
add
int3
scas
sub
push
mov
outsl
jnp
roll
jnp
loope
mov
fstps
jno
or
js
dec
or
rclb
inc
movsb
sub
cltd
enter
aaa
lret
fstpl
or
inc
mov
jae
aad
aam
jnp
lret
jbe
sub
xor
or
xor
or
pop
loop
pop
imul
pop
fstpl
outsl
jne
rcr
test
insb
jno
pop
and
jnp
leave
ret
mull
and
cmp
pop
jnp
imul
jnp
adc
cmp
mov
jnp
push
xchg
add
cmpsb
dec
ja
dec
daa
lods
mov
and
das
dec
outsl
jnp
notl
ljmp
movsb
jnp
and
xor
pop
fnstcw
inc
xchg
or
pushf
jno
dec
xchg
pop
jnp
iret
push
push
cli
inc
fs
or
mov
rcll
sbb
push
mov
jae
mov
adc
lea
jo
scas
push
push
popa
dec
mov
in
adcb
and
repnz
bswap
ljmp
mov
jnp
pop
leave
enter
mov
fcomp
push
fwait
popf
fcomip
jnp
les
pop
or
inc
mov
cwtl
repnz
lock
or
mov
xchg
adc
dec
push
sub
jne
inc
jnp
pop
jmp
lods
rcl
pop
jnp
out
dec
fldcw
dec
pusha
inc
push
dec
es
adcb
sbb
clc
ja
xchg
sahf
jmp
mov
fisttpl
adc
jb
dec
ret
outsl
xchg
mov
into
subb
xchg
mov
mov
js
fs
inc
mov
jnp
fisttpl
sub
cmp
sub
cmp
cli
divl
jnp
and
pop
jmp
in
jnp
arpl
outsb
jnp
adc
iret
jnp
cmc
daa
loopne
fisttps
mov
sbb
adc
or
jl
xchg
push
inc
addb
lea
xchg
adc
inc
sub
mov
outsl
push
mov
jns
cmp
xchg
mov
cmc
xor
sbb
enter
cltd
dec
lea
push
mov
out
mov
je
outsb
sbb
fxch
rclb
jnp
sbb
sub
mov
cmp
notb
ljmp
lds
sti
fmull
cmp
fdivrs
jno
fildl
into
dec
jnp
push
sbb
imul
sub
mov
arpl
mov
sub
ret
xor
dec
js
iret
in
inc
jnp
in
loope
jecxz
or
test
jmp
xchg
insl
repz
dec
jo
aad
lods
dec
pop
inc
mov
jae
push
js
push
mov
rclb
jp
mov
or
sarb
jnp
fsts
out
jnp
and
loop
pop
jnp
lods
icebp
lahf
int3
lock
int
in
or
arpl
mov
pop
fcoms
xor
lock
or
inc
stc
jnp
inc
push
mov
xchg
sub
cmc
push
adc
xchg
mov
leave
inc
xchg
mov
inc
jb
jnp
cltd
ret
adc
orb
lahf
and
stc
and
add
jnp
pushf
movsb
out
fdivr
cmp
or
sub
sbb
push
jnp
movsb
adc
out
sbb
int3
dec
inc
icebp
cmp
test
fiaddl
icebp
xor
pop
pop
push
pop
push
sub
lea
adc
add
sbb
and
jnp
and
ret
les
addr16
mov
or
xor
pop
mov
inc
or
das
fdivr
adc
orl
push
idivb
cli
push
push
fs
jnp
adc
mov
mov
and
pop
dec
dec
jnp
sbb
pusha
imul
bnd
sub
fisttps
int
lds
jmp
sbb
imulb
jnp
dec
add
jnp
roll
loope
ss
shlb
xchg
sbb
jmp
scas
adc
jbe
mov
mov
gs
movsl
xchg
pop
iret
jnp
jge
dec
xchg
fidivrs
out
stc
in
outsl
pop
or
outsb
dec
adc
je
inc
xchg
inc
lods
popa
bound
mov
jnp
nop
repnz
mov
xchg
cmp
popf
jnp
mov
jnp
mov
sub
sbb
in
lods
mov
negl
dec
or
inc
jnp
xor
cmc
xchg
loopne
leave
fs
insl
pop
cmpsb
mov
adc
jecxz
roll
call
cmc
xchg
xchg
int
mov
push
mov
jnp
inc
xlat
cmp
jnp
xchg
es
jae
and
into
mov
fnsave
mov
lahf
insl
pop
jnp
int3
out
lock
sti
into
clc
jnp
xor
fidivrs
ret
mov
mov
loopne
and
lods
imul
aaa
mov
bound
cld
xchg
jae
jnp
in
scas
inc
aaa
xchg
test
movsb
jle
sbb
xorl
and
in
in
lods
add
imul
xchg
fnstcw
and
adc
aaa
test
imul
cmp
je,pt
push
leave
bound
outsl
aam
mov
xor
outsl
adc
jnp
mov
test
std
jle
push
add
jnp
mov
pop
sub
adc
jne
negb
lods
popf
jnp
je
les
xchg
dec
stos
inc
or
jae
mov
dec
jnp
sub
les
sub
scas
jne
xchg
cs
mov
mov
xchg
jnp
stos
fcomps
dec
xor
and
inc
xchg
add
es
mov
js
adc
imul
das
outsb
lods
and
mov
loopne
cmpsb
or
insl
adc
jns
test
and
clc
adc
adc
fldcw
push
jbe
stos
jl
mov
je
cmp
outsb
or
adc
cmp
sarl
adc
call
imul
ja
and
jmp
xor
inc
jnp
fistpl
sub
sbb
js
cmp
mov
jge
mov
movd
int
jnp
cmpb
rcrb
cld
imul
jnp
jle
and
cmpsl
lea
and
fidivrl
pushf
cltd
push
std
jmp
scas
cmp
ja
add
out
insb
ret
jg
jnp
and
addb
jno
jecxz
out
cltd
es
jnp
cmp
and
inc
dec
decb
cmp
jecxz
cmp
mov
imul
movsl
rcll
fisubrs
ror
and
mov
sub
pusha
imul
sbb
mov
jnp
cltd
push
das
fst
std
sbb
mov
adc
sarb
push
aam
jne
lret
inc
stos
xor
mov
mov
jle
xor
inc
inc
jnp
fsubrl
paddsb
push
aad
add
lock
pop
out
jo
pop
insb
sub
or
scas
cmpsb
jnp
mov
and
popf
add
faddl
jp
insb
clc
aas
mov
testb
pop
ds
jae
stos
lcall
or
mov
ret
jnp
sti
cmc
sbb
fsubl
xorb
ss
or
lea
push
insb
dec
mov
je
cmp
sahf
imul
mov
pusha
mov
xchg
push
hlt
sub
xor
les
mov
xchg
movl
or
or
shl
adc
int
dec
jnp
gs
pop
push
scas
sbb
jae
lcall
cmp
pop
jnp
add
mov
dec
loopne
and
cmp
fdivrl
inc
jecxz
daa
pop
pop
fildl
add
cmc
dec
jnp
int3
popa
js
sarb
fs
cmp
stc
xor
popf
sahf
push
arpl
push
inc
iret
out
pop
jnp
adc
aas
mov
jns
sti
jle
dec
mul
std
mov
push
push
push
cmpsb
jnp
xchg
jo
lea
xor
xchg
imul
push
ja
jp
push
int3
cltd
mov
lcall
jno
jns
inc
leave
push
sbb
pop
stos
outsl
pop
pop
dec
xor
jno
imul
out
jbe
filds
sbb
lret
add
jnp
aaa
lods
fisubs
sar
in
imul
icebp
sbb
js
out
imul
xchg
testb
mov
jae
pop
ja
cltd
add
pop
shlb
sub
jge
cmp
dec
adc
lods
add
enter
jnp
fcomip
rorb
jnp
add
lods
jae
xchg
sub
icebp
fidivs
fcmovnb
and
mov
push
pop
repz
ljmp
and
movsb
in
jnp
adc
jnp
mov
fnstcw
fstpl
lods
inc
out
jge
or
pop
repz
add
insl
aad
sbb
jmp
scas
lock
clc
arpl
xor
cmpl
movsb
int
push
sti
cmp
rcrl
in
jns
sub
cmpb
push
mov
int
testl
jecxz
dec
mov
jp
jne
icebp
out
repnz
cld
mov
xchg
mov
mov
es
push
mov
jl
lret
sbb
jge
jmp
mov
pop
add
aad
sbb
jbe
shll
in
out
sti
das
jmp
call
scas
cwtl
dec
adcb
mov
pop
test
sahf
mov
push
jnp
jge
jns
xchg
jle
jnp
ljmp
jnp
ret
mov
gs
das
mov
outsl
xchg
int
jnp
sub
out
loop
dec
adc
and
dec
sti
dec
je
inc
pop
xchg
cltd
jb
cmp
loopne
pop
incb
cmpsb
push
jnp
mov
mov
in
push
aas
add
test
cmp
jge
aam
jb
jnp
stos
mov
xor
mov
pop
adc
cmc
mov
mov
add
inc
fstpt
cmpb
es
jnp
addb
loopne
adc
cmpsb
mov
jg
mov
push
jnp
es
and
shrl
cmp
jns
fidivs
xchg
fwait
inc
pop
cwtl
les
cmpsl
pop
push
movsl
cmp
lret
xchg
fwait
xchg
jo
pusha
mov
loopne
outsl
jge
jae
cli
cmp
lcall
push
popf
lret
int
jnp
scas
adc
sub
jge
push
in
loopne
add
adc
out
sbb
pop
lods
imul
scas
pusha
add
lods
add
pop
adc
stos
enter
push
inc
fs
adc
repnz
aam
and
das
push
ljmp
xchg
pop
jnp
fisttpll
cli
negb
sub
ret
imul
in
add
in
jbe
daa
or
jns
mov
sbb
jb
shrl
mov
pusha
rcl
mov
xchg
enter
jnp
lret
int3
pop
adc
gs
mov
xchg
bound
mov
add
or
jns
mov
push
jnp
arpl
rcll
push
nop
stc
shlb
stos
ds
ret
cmp
icebp
push
and
data16
xchg
xchg
ret
jno
adc
push
xor
cmp
js
mov
adc
mov
insl
jnp
rcrb
add
pusha
js
lock
leave
divb
jnp
lods
cmp
fs
xchg
cmp
jg
inc
out
pushl
push
dec
aad
in
imul
movsb
scas
lea
int
divl
inc
dec
jnp
in
lret
jmp
in
outsl
and
je
pop
dec
fistps
mov
mov
and
fstl
icebp
xchg
cmp
in
stc
inc
add
jl
loop
inc
int3
jmp
std
or
jnp
lds
xchg
or
sub
push
dec
pop
lock
dec
insl
rolb
add
push
neg
cmp
xchg
push
jae
push
mov
jnp
or
out
clc
popf
push
adc
cmp
leave
scas
sbbb
ja
mov
jnp
jo
loopne
mov
sub
push
mov
or
adc
outsb
std
mov
and
mov
jnp
scas
fs
jmp
xchg
push
mov
sbb
jnp
pushl
mov
pushf
mov
out
js
movsl
adc
push
test
fisttpl
out
dec
mov
rorl
insl
sbb
adc
fwait
pop
cmp
mov
jnp
repz
mov
adc
jl
jmp
cmp
xor
jnp
push
lods
jno
xchg
imul
packsswb
and
test
ss
sub
mov
mov
cmp
xchg
out
cli
cmc
outsb
jae
in
icebp
mov
jo
cs
pop
or
les
sti
pusha
dec
mov
jae
sbb
popf
outsl
repnz
add
lret
stc
outsl
xor
push
and
in
loopne
fsubrl
cld
lds
cmp
idiv
push
fucomip
fmuls
adc
mov
fstl
out
jnp
arpl
ja
das
in
jnp
jmp
and
push
push
cmc
cld
popa
jnp
dec
xchg
fdivr
push
mov
ds
mov
sub
and
or
xchg
les
in
rcr
cld
je
mov
cltd
cmp
cmp
push
cmp
idivb
fdivrl
pop
pop
mov
xchg
jnp
icebp
xchg
pushf
xchg
cwtl
ljmp
add
sbb
jnp
and
adc
pop
xchg
and
rcrb
push
dec
xchg
sbb
mov
push
fstpl
xchg
hlt
loope
movsb
mov
lcall
mov
pop
adc
arpl
and
add
cmp
or
push
hlt
and
jno
sbb
jnp
lods
outsb
inc
adc
pop
in
xor
and
test
fcom
jne
imul
sbb
bound
out
mov
out
loop
cmp
push
shlb
xor
mov
repnz
or
pusha
jnp
add
daa
or
aaa
jle
sub
test
scas
in
test
jnp
jno
rcrb
push
mov
mov
push
test
jnp
add
mov
sub
jnp
outsb
mov
or
cmpsl
aas
jnp
ret
fs
enter
adc
in
sub
pop
jbe
adc
push
sub
jnp
push
out
scas
sti
xchg
jnp
mov
loop
jnp
int3
popf
jo
popa
out
jnp
jg
push
stos
sub
mov
mov
jae
add
jbe
iret
mov
loopne
push
daa
adc
xorb
js
xchg
push
dec
push
jae
test
xor
add
push
lret
and
xchg
stos
dec
xchg
out
cmp
inc
xchg
mov
sub
mov
ret
dec
jbe
enter
stc
jnp
lahf
dec
mov
jmp
orb
enter
enter
in
dec
inc
jp
addr16
jnp
mov
call
jnp
mov
adc
add
sbb
push
notb
mov
in
dec
pop
mov
pop
mov
add
mov
aas
test
xlat
ret
je
jnp
arpl
add
data16
fsqrt
les
cmc
fs
jb
dec
jnp
or
popf
xchg
stc
mov
repz
arpl
jb
and
sbbl
ss
js
xchg
std
sahf
xor
int3
aaa
int3
ja
jbe
outsb
push
pop
fnsave
ja
jg
orb
jmp
call
mov
cld
cmp
cmp
dec
cmp
dec
out
outsb
loop
jmp
int3
xlat
and
push
in
scas
add
mov
sub
mov
or
xchg
ds
insb
mov
ss
bnd
clc
outsb
outsl
cld
ljmp
cmp
jp
fs
jae
stos
in
push
int
stc
adc
dec
inc
in
mov
push
adc
mov
xor
sub
inc
insl
cmp
sar
sbb
iret
rcrb
outsl
pop
mov
jnp
xor
mov
jnp
into
pop
push
xchg
mov
je
or
cmp
out
es
and
addr16
insl
aam
movsb
push
jnp
cltd
lret
addb
inc
jnp
lahf
mov
jnp
inc
inc
add
lods
push
icebp
mov
pop
dec
dec
sahf
xchg
mov
shrb
mov
ds
jp
negl
sub
push
mov
add
call
insl
jl
dec
jnp
cld
inc
les
xchg
out
sub
outsl
std
aam
sahf
jecxz
sahf
sti
sub
test
jae
imul
scas
sub
push
cwtl
xchg
int
cmp
ret
sti
lcall
je
subl
imul
outsl
push
out
jnp
enter
dec
sub
and
jnp
ror
inc
cli
repnz
decl
mov
scas
fldt
and
gs
sti
lret
dec
jnp
mov
out
int3
pop
imul
mov
sub
jmp
adc
xlat
testb
sbb
cmp
les
xor
notl
jnp
jb
rorb
dec
rorb
pop
test
negl
popa
and
xor
inc
fists
mov
icebp
pop
je
orb
add
jg
movsl
push
jnp
sbb
cmp
pop
push
dec
lea
or
cmpsl
xor
loopne
mov
xlat
scas
out
mov
jnp
nop
ret
jns
xchg
in
push
jnp
test
pop
mov
insb
ret
imul
hlt
movsb
rcrl
mulb
xor
dec
fdivs
jne
test
add
add
lds
pop
js
add
sbb
sahf
jae
pop
cld
fdivp
and
pop
pop
aaa
stos
xlat
stos
lods
aam
mov
test
test
mov
push
sbb
jl
sti
jnp
icebp
pop
or
jnp
orl
imul
in
xor
fidivrl
or
test
clc
out
jnp
ret
test
jnp
les
sbb
jnp
sub
test
or
mov
js
insl
jno
lea
sub
pop
jne
cmp
sahf
xorl
mov
dec
push
mov
lret
cmp
popa
jnp
mov
inc
pop
fnsave
aas
mov
jnp
mov
push
out
push
add
mov
xor
call
mov
stc
shlb
jno
mov
push
lea
test
mov
add
xchg
stos
mov
hlt
and
jl
lret
jae
icebp
and
jecxz
inc
inc
in
adc
jge
xchg
mov
jbe
out
cmc
ret
push
mov
fdiv
inc
adc
scas
sbb
data16
inc
cmpsb
lock
lds
dec
mov
add
imul
add
jnp
test
fstpl
mov
adc
cmp
stos
cmp
in
pop
in
dec
fs
insb
stos
push
out
call
iret
adc
jo
mov
xchg
xchg
ret
test
inc
mov
aad
adc
gs
sbb
jmp
push
fldln2
or
jmp
in
jnp
mov
jnp
sub
push
push
mov
test
mull
je
pushf
sbb
xor
adcl
sub
or
outsb
lock
xor
mov
shr
cmp
addr16
mov
inc
cli
test
inc
shrb
dec
mov
inc
add
push
jb
sbb
jnp
sbb
xchg
jg
push
xlat
jnp
push
shlb
inc
popa
inc
dec
bound
or
or
jb
jnp
popf
add
mov
gs
xchg
nop
call
and
stos
arpl
fucomi
in
pop
pop
in
jnp
dec
add
push
leave
mov
and
lods
int
inc
sbb
sti
icebp
mov
jb
imul
inc
jecxz
push
in
lahf
xchg
dec
sbb
xorl
mov
xlat
cmp
cltd
mov
sub
mov
mov
aad
test
stos
sahf
arpl
cmp
jle
dec
inc
in
mov
jo
sbb
adc
mov
in
mov
xchg
jnp
lret
rclb
jl
sub
pushf
mov
out
fildl
jnp
addr16
mov
out
fucomip
int
sbb
insb
or
ja
adc
call
jbe
sub
imul
inc
lcall
mov
sbb
jo
rclb
mov
cltd
inc
xchg
ret
mov
jns
push
cmp
add
fidivs
and
rol
push
cmpsl
xchg
jnp
stc
gs
imul
mov
mov
adc
jno
cld
dec
fwait
ret
push
fyl2xp1
push
xor
repnz
sub
push
mov
or
cmp
lcall
mov
cwtl
xor
jp
sbb
xchg
sbb
jne
clc
lret
sarb
pop
dec
jp
mov
add
cmp
pop
sub
dec
popf
in
prefetchnta
xor
jge
fcoms
jle
push
scas
mov
arpl
js
inc
insb
cltd
cmpsb
in
rorb
pop
jnp
jae
movsl
test
xbegin
xor
shrb
xor
insl
pop
adc
and
stos
add
push
pop
or
xor
add
ds
and
jl
icebp
sub
xchg
cli
or
adc
ja
xchg
push
mov
in
pop
insl
out
pop
xchg
jnp
cmp
movsb
jne
inc
sbb
sub
jnp
int
aaa
cmpsl
addr16
insb
jle
jp
jnp
mov
jnp
inc
adc
and
js
adc
pop
ror
jmp
jb
aad
lock
jae
clc
mov
jnp
jecxz
imul
sub
dec
and
jge
cmpsl
nop
cmp
bound
jnp
ret
movb
aam
pop
call
lahf
iret
or
jae
push
shrl
ja
pusha
pop
cmp
repnz
insb
and
clc
inc
js
cmp
sbb
add
lods
test
or
sub
adc
xor
and
push
mov
clc
lret
mov
imul
push
and
outsb
insl
and
or
cld
push
inc
fcomp
cmp
cmpl
arpl
imul
shrb
jae
je
imul
lds
jns
sbb
and
aas
or
call
mov
aad
jne
jmp
inc
jnp
in
push
and
data16
jnp
loopne
stc
sti
rol
jnp
bound
push
fmul
jae
sbb
jne
jnp
imul
xor
sub
test
daa
cmp
and
dec
hlt
fildl
add
dec
jae
and
test
inc
mov
jnp
popa
imul
test
lods
or
pusha
jp
jnp
cmp
clc
jo
adc
or
sbb
cld
out
jnp
sar
mov
jmp
jnp
ja
pop
cmp
jnp
push
call
jge
sti
push
call
jb
add
xchg
pop
adc
iret
call
xchg
sahf
cmpsb
jnp
popf
mov
or
jnp
xchg
pop
fneni(8087
mov
in
adc
test
jnp
lret
inc
xor
xchg
jnp
jmp
xchg
jnp,pn
mov
pop
lret
jnp
jbe
inc
mov
stc
jmp
test
pushf
ja
and
cltd
jnp
int3
ljmp
outsb
cmp
ret
popa
jae
aam
arpl
or
fisttpl
int3
cmc
or
xchg
imul
cmp
sub
sub
jecxz
lret
lret
jbe
sbb
inc
gs
sbb
pushf
sbb
push
jae
sub
scas
lahf
jnp
jge
ror
aas
leave
xor
frstor
inc
outsl
push
mov
lds
jle
test
mov
xchg
mov
popa
sti
xchg
iret
mulb
insl
aam
pusha
sbb
and
jnp
pop
sub
xor
lret
arpl
xchg
ss
test
push
or
push
jnp
xchg
rcr
add
sbb
dec
inc
test
incl
dec
cmp
mov
push
pushf
pop
in
jnp
mov
or
cli
shll
sbb
lods
sub
mov
hlt
adcl
add
jnp
not
test
fcmovnu
dec
cmp
jae
lcall
sub
pop
test
movsl
std
jae
dec
jnp
xchg
push
pusha
pop
jl
mov
mov
xchg
inc
push
jnp
xchg
push
lret
fcom
je
mov
ja
test
mov
cwtl
in
mov
lret
and
jmp
idivb
lods
xor
fdivr
dec
jnp
and
in
xchg
pop
cli
jnp
bound
stos
sub
dec
cmp
jo
jnp
adc
fcomps
ret
mov
dec
rorl
cmp
lock
dec
mov
mov
jnp
xlat
jl
inc
stos
mov
mov
mov
jnp
pop
cmp
sub
int
mov
idivl
jnp
jecxz
fistpll
or
or
cmp
jge
inc
jnp
sbb
xor
cmpb
stc
outsl
lds
jnp
scas
lea
jno
jnp
inc
jge
clc
ds
add
dec
push
test
jnp
mov
jb
dec
dec
dec
mov
outsl
jl
aaa
ss
cmp
dec
dec
hlt
push
xchg
push
jnp
in
rcl
inc
pop
or
rcr
fnstsw
cmp
lods
sbb
pop
sub
stos
sbb
dec
xor
add
xchg
fstl
lret
or
out
jnp
fstps
lods
jecxz
out
sysenter
js
cmpb
lret
mov
add
lods
stos
sbb
insb
xchg
mov
and
jae
stc
aas
es
push
leave
push
lods
insl
pop
dec
jnp
push
lret
mov
sub
clc
jg
test
jnp
call
xchg
into
jnp
fldenv
aam
push
add
inc
inc
stc
push
shl
pop
xchg
or
mov
popa
dec
jbe
sti
arpl
sub
or
call
ficoml
mov
xchg
push
lds
cmp
jnp
adc
lret
adc
cmp
arpl
inc
jnp
andl
mov
push
xchg
sarl
jno
pop
addr16
xlat
jnp
xor
push
dec
imul
cmpl
sbb
add
sub
jmp
and
jae
jno
jbe
jnp
jns
sbb
stc
pop
xor
addr16
mov
inc
pop
mov
stos
xor
or
cmp
out
jns
std
popf
repz
scas
clc
cmc
and
pop
inc
imul
pop
sarl
lret
jne
xchg
adc
cmp
or
insb
aas
add
in
in
xchg
jnp
fucomi
nop
sbb
push
sbb
stos
std
fwait
ja
pop
pop
jo
imul
jmp
outsb
sbb
push
enter
sub
in
ljmp
ja
adcl
jne
mov
mov
jnp
hlt
lea
in
mov
ja
out
fnstsw
dec
add
daa
out
ljmp
push
inc
or
jnp
test
pop
rep
push
pushf
sub
nop
jnp
insl
mov
cli
sbb
jb
insb
outsl
pop
mov
or
pop
std
adc
dec
or
sti
int
lods
jo
loop
nop
mov
mov
xor
fbstp
clc
push
cmpsl
jae
pop
jnp
mov
inc
pusha
pop
dec
iret
xchg
sbb
leave
outsl
pop
aad
sub
movsl
xchg
pop
jnp
jne
push
jnp
xrelease
ja
addl
jp
push
loop
jae
loope
cmp
jl
std
mov
imul
pop
movsl
add
add
sbb
xor
sub
sarl
cmp
dec
pop
jnp
outsb
fcmovbe
fucom
sub
lcall
fbld
jnp
inc
loopne
in
add
sbb
xchg
jnp
sbbl
cmpsl
ss
mov
jnp
or
clc
imul
int
sub
scas
imul
lods
xchg
sbb
test
rorb
stc
mov
scas
mov
int
pop
rorl
test
mov
xchg
arpl
cltd
sahf
int3
jnp
push
mov
int
popa
pop
sbb
mov
mov
dec
mov
jbe
and
pop
inc
jnp
pop
negl
aad
rorl
jno
mov
jo
ret
cmp
jp
or
pushf
jnp
test
orl
jo
dec
xchg
sbb
out
stos
outsl
cmp
cmpsl
jnp
enter
jnp
sub
mov
push
ja
loop
and
js
into
push
mov
dec
jnp
lods
jae
pushf
pop
sub
cmc
xchg
movsl
scas
mov
aas
or
jno
push
mov
sti
or
rcll
sbb
iret
loopne
xor
xor
insb
inc
inc
xor
out
bound
insl
shrl
testl
stos
add
test
cmpsb
jnp
mov
jecxz
mov
inc
or
dec
std
in
jnp
jne
cmp
out
xchg
jnp
sti
mov
mov
sbb
xchg
jmp
bound
adc
xchg
aad
push
ret
scas
fidivs
pop
dec
cmove
inc
add
mov
jmp
mov
cmpsl
push
push
movsl
jnp
dec
rolb
mov
jno
shll
or
in
into
mov
jae
call
repnz
cwtl
jnp
jo
mov
mov
repnz
mov
add
and
or
jnp
test
jnp
pop
mov
aaa
ljmp
dec
sahf
or
pop
mov
sbb
sub
mov
mov
jo
adc
scas
mov
sub
adc
jo
jae
cmp
cwtl
ja
lahf
div
mov
js
mov
cs
mov
pop
dec
push
xor
out
loop
jnp
inc
subb
adcl
lret
cmp
mov
jnp
test
es
mov
jbe
insb
addb
jne
outsb
push
sub
movsl
stc
mov
sarb
xor
fidivrs
into
insl
xor
mov
cld
sub
mov
fcomi
lret
add
sub
mov
jae
ret
or
out
aad
cs
jnp
fs
clc
cli
jmp
cmp
adc
popf
dec
into
mov
mov
xchg
xor
push
fstpl
sarb
bnd
add
add
mov
jae,pn
push
xor
or
lea
dec
lock
push
jno
xor
je
adc
xchg
cltd
pop
faddl
and
icebp
sbbb
adc
and
dec
xchg
jns
fsubrl
sub
fdivs
leave
pop
pusha
sub
out
cltd
jbe
test
call
sbb
popf
dec
gs
jnp
inc
adc
jnp
shl
cmpsl
mov
iret
jnp
pop
leave
lods
stos
add
sbb
sbb
pop
inc
aaa
sbb
fucomp
je
jnp
data16
rolb
out
aam
or
inc
loopne
int3
inc
dec
clc
ret
push
jo
fucomi
jnp
ja
jns
jmp
negl
jnp
jbe
inc
xor
xor
imul
xor
fwait
aas
pop
fiaddl
sti
jae
jne
pop
cmc
adc
xlat
jnp
lret
into
std
lea
outsb
adc
xorl
cmp
xchg
fs
loopne
jae
test
fidivs
jbe
xchg
loope
fisttpl
lods
push
push
or
lods
lret
xchg
push
jnp
out
repnz
out
cmp
pop
or
jnp
add
in
out
jle
hlt
jnp
xchg
icebp
push
mov
xorb
lcall
inc
dec
inc
jnp
ljmp
outsl
add
sbb
fucomp
mov
jl
jae
int3
mov
jnp
jge
sbb
xchg
jnp
xor
sbb
loope
pop
jle
cmc
dec
popa
push
xchg
jmp
add
push
jbe
pop
or
test
aas
xchg
xchg
mov
popf
xor
fldenv
shll
xchg
jnp
push
cmpsl
lea
btc
in
jge
cmp
adc
das
xchg
dec
jnp
mov
mov
incb
sub
xlat
dec
sbb
mov
movsb
mov
stos
sbb
and
ss
cli
std
insb
stc
or
mov
jno
lods
aaa
ja
aad
test
dec
sti
xlat
pop
movsb
fldcw
inc
and
lea
jne
dec
fnstsw
jae
dec
fnstsw
arpl
repnz
sbb
mov
andl
xor
lock
daa
push
call
jnp
pop
pop
and
stos
or
mov
das
sbb
imul
cmpsb
push
cmpsl
or
xchg
jnp
or
push
pop
fnsave
repnz
add
pop
sub
insl
dec
gs
jnp
adc
repz
inc
mov
pop
movsb
divb
jns
pop
pop
push
cmp
pop
and
rorb
mov
das
jnp
outsb
cmp
or
imul
aas
and
test
jo
out
pop
out
iret
inc
xor
jnp
imul
or
push
adc
idivl
mov
mov
addr16
test
out
pop
movsb
jnp
or
outsl
mov
iret
jo
mov
pop
jae
adc
in
addb
ret
rclb
adc
lret
pushf
dec
mov
outsl
daa
mov
repnz
xchg
cmp
imul
or
lods
mov
mov
adc
mov
push
jbe
inc
sarl
lock
inc
imul
jb
jnp
sbb
push
push
pop
inc
dec
or
inc
mov
outsl
and
jp
std
sub
test
lret
ret
mov
call
stos
and
lock
and
mov
jecxz
mov
jbe
dec
fucom
rcr
fidivrl
xor
stos
dec
xlat
ret
out
mov
adc
sub
rcrb
pop
push
cmpsl
sbb
sbb
stos
jmp
add
int
xor
push
xchg
adc
sbb
fadds
cltd
bound
jns
shlb
insb
and
sub
add
xchg
stos
adc
mov
stos
cmp
adc
mov
pop
pop
inc
mov
jnp
cmc
cmp
dec
cmp
jae
inc
push
add
mov
dec
mov
hlt
in
jo
jnp
sbb
xor
je
push
jae
iret
frstor
push
push
xor
in
mov
ljmp
pop
xor
fs
jno
cmp
or
call
repnz
xchg
mov
rcr
mov
outsl
sbb
das
cmc
scas
jnp
jo
xlat
jge
mov
cld
pushf
ss
enter
sbb
insb
ja
jne
ror
pop
jnp
xor
mov
neg
popf
lcall
jb
or
jae
insb
sti
mov
test
loope
pop
addr16
jnp
adcl
int
xchg
fs
pusha
lahf
push
test
pop
jnp
mov
ficoms
pop
mov
mov
xchg
sub
or
add
mov
mov
sbb
fsub
inc
sub
jne
cmp
cli
clc
push
movsl
xor
je
movsb
xor
xchg
imul
mov
cli
push
in
cwtl
add
mov
icebp
jae
lds
data16
test
add
sub
in
jg
movsl
sbb
pop
fsubrl
icebp
mov
outsb
mov
push
test
jl
fisubrs
push
aaa
out
add
leave
jnp
sbb
jge
jnp
xchg
xor
rorb
mov
gs
das
push
int
xor
push
lds
pushl
mov
xchg
sub
adc
push
test
lret
lds
mov
push
imul
push
outsb
xchg
daa
xor
pop
mov
and
mov
test
adc
push
aad
out
ss
and
pop
lods
movsb
das
cmpsl
jnp
pop
repnz
xchg
pause
lret
outsb
gs
or
jnp
cmpsb
outsl
mov
fsubrs
mov
jae
lret
in
les
mov
push
imul
imul
gs
jb
aam
fcmovne
jnp
mov
mov
push
subl
das
sbb
mov
jnp
mov
xchg
ja
lret
mov
pop
loop
sub
inc
dec
fbstp
out
pusha
jg
jnp
mov
mov
das
testl
cwtl
mov
loop
fcmovnb
ss
cmpl
jns
sub
jnp
mov
pop
inc
dec
sarb
and
pop
lahf
inc
pop
xor
mov
add
pop
dec
mov
cmp
xlat
and
cli
subl
ljmp
hlt
or
sub
cld
cmpsl
add
mov
and
cmpl
inc
xchg
push
or
or
std
lea
push
and
es
imul
scas
or
dec
jnp
xor
dec
js
in
orl
or
cld
sub
jnp
mov
enter
pop
sub
xor
lods
shrb
notb
jno
cmp
lret
xchg
sahf
push
sti
jns
popf
inc
adc
lods
cs
pop
or
dec
or
jnp
lods
dec
negl
push
cmp
insb
ja
shll
jns
inc
test
icebp
insb
mov
cmpsl
orl
ljmp
pop
push
in
scas
pop
enter
repnz
inc
fs
out
and
bound
mov
scas
jae
testl
sbb
cmp
incb
pop
jnp
dec
fldenv
mov
fisubl
out
js
bound
jb
or
rclb
ret
mov
rcll
movsl
cmp
jg
pop
xchg
push
or
xlat
pop
ljmp
pop
popa
mov
stos
push
cmpsb
mov
inc
jae
dec
es
or
outsb
stos
jg
pop
jne
sub
sbb
js
dec
cld
es
cmp
jmp
out
in
fs
jnp
inc
gs
push
jle
mov
add
je
mov
imul
stos
jnp
out
pop
push
hlt
std
into
jle
or
xchg
push
test
daa
enter
sarl
jae
inc
and
xchg
sbb
bnd
arpl
lock
stc
cmp
pop
cmp
sbb
jo
dec
imul
loop
out
outsl
jnp
jp
xchg
pop
jno
inc
jnp
popf
pop
xchg
inc
clc
push
jl
jle
jnp
xchg
in
stos
dec
cs
imul
into
add
jbe
push
mov
repz
outsb
jnp
fdivrs
int3
xorl
sarl
xlat
lds
test
xor
icebp
adc
scas
jnp
mov
insb
mov
xor
jnp
sub
mov
mov
movsl
inc
dec
adc
test
cli
jno
jmp
jle
adc
insl
insb
jae
lds
aad
aas
jae
test
inc
fldt
inc
je
sbb
adc
and
pop
arpl
fstl
imul
jnp
jo
test
or
jmp
or
icebp
adc
jnp
mov
cld
push
pop
pusha
sub
mov
inc
popa
dec
ror
sarl
xchg
test
popf
jle
faddl
push
movsb
test
addr16
lcall
mov
add
dec
jne
and
jnp
cld
jbe
jae
or
fnsave
lahf
imul
jg
insb
xchg
lods
inc
sbb
mov
xchg
adcl
imul
xor
movb
jnp
stos
movsl
arpl
sub
and
pop
inc
jne
ljmp
push
sub
hlt
sub
jns
dec
out
adc
outsb
add
jo
add
adc
stos
fstpt
or
jl
cwtl
jnp
leave
cmc
xor
jno
or
cmp
ja
jae
shr
sub
pop
lods
das
repz
jnp
hlt
cmp
jnp
push
adc
fs
lret
mov
orl
inc
aaa
in
btc
dec
push
or
aam
mov
stos
add
cmpsb
sub
push
inc
leave
jmp
mov
ja
icebp
mov
mov
pop
lods
pop
insl
cli
pop
jecxz
pop
enter
shll
mov
or
stos
inc
das
lds
sarl
jnp
sahf
mov
lahf
fdecstp
mov
or
sub
sbb
cmp
cld
jp
jno
js
inc
in
xchg
and
divb
jecxz
outsl
push
scas
or
pop
sub
xor
jb
sub
call
dec
adc
stos
insl
sbb
lret
inc
jae,pt
push
xchg
fsubs
jnp
mov
lahf
push
popa
sub
or
loop
pop
jnp
sbb
and
cmp
neg
sub
lock
popa
add
jnp
sub
aas
stc
mov
lea
in
nop
and
xchg
inc
mov
jle
fucomp
sub
in
loope
adc
rorb
jnp
pop
lock
imul
repnz
pop
dec
jecxz
push
movsb
addb
push
jp
jne
add
data16
xlat
ss
jnp
adc
inc
dec
xor
jecxz
pushf
mov
daa
shl
jnp
shrl
cmpsl
xchg
push
clc
lret
fucomip
mov
push
dec
jnp
sti
rcrl
jo
jnp
xchg
jns
outsb
aad
not
hlt
imul
in
mov
jbe
add
jnp
pop
push
pushf
cmpsb
call
sub
pop
in
aas
stos
jnp
adc
xor
jnp
imulb
or
out
fdivr
push
jnp
push
in
outsl
dec
lea
sub
in
pop
and
xchg
mov
or
daa
imul
jnp
mov
jecxz
fs
pop
sti
jae
pop
es
jnp
movsb
or
jbe
jb
jnp
mov
and
repnz
flds
jae
mov
sub
int3
mov
out
gs
jb
adc
push
or
inc
outsb
push
shrl
jl
lcall
les
sub
mov
xlat
outsl
dec
xchg
sahf
mov
sbb
iret
fstps
mov
sbb
daa
jnp
movsl
xor
jnp
and
cmpsb
mov
inc
ds
xchg
jnp
clc
je
cmpl
sub
add
jnp
cmp
cmp
jnp
mov
pop
cmpb
test
xchg
cld
test
cs
dec
aas
sbb
jb
inc
lods
jno
jno
jnp
adc
pop
push
jbe
out
aad
add
pop
jnp
lahf
rcrb
jnp
push
cs
jnp
or
inc
inc
push
jp
dec
and
cmpsl
inc
jns
into
adc
mov
pop
cmp
hlt
mov
icebp
cli
shlb
pop
add
jnp
or
dec
dec
test
enter
push
push
fisubrs
pusha
cmp
sub
jnp
mov
sbb
test
adc
jnp
dec
call
cmp
test
cmc
cmpsb
fs
jnp
cmpsl
lcall
xchg
shl
push
push
and
xor
cld
push
jnp
lock
fwait
repnz
sahf
cs
dec
lods
in
mov
in
rorl
rorb
sub
jecxz
sahf
mov
mov
xor
push
dec
repnz
in
xchg
dec
imul
fdivs
jnp
sbb
sub
sbb
ss
fnsave
mov
xor
lods
cmpl
adc
fwait
jnp
stc
xlat
in
mov
fnstcw
mov
movsl
cmp
add
icebp
hlt
cmp
cmp
out
mov
jnp
lretw
ret
repnz
jnp
sub
cmc
push
subl
adc
jnp
sub
inc
jnp
add
dec
and
pop
lock
sbb
aas
xor
out
jnp
bnd
mov
dec
rclb
ja
in
popa
push
and
cltd
pop
popf
jnp
sub
dec
ss
push
lock
jnp
stos
fwait
cmpsb
mov
in
adc
sbb
aam
cmp
xchg
mov
xor
dec
fdivs
in
jnp,pt
jae
mov
or
add
movsl
push
imul
cs
icebp
or
aam
inc
xchg
and
lahf
fcom
jnp
push
xor
and
mov
sbb
scas
leave
pop
jnp
jno
jne
das
mov
adc
jae
inc
cmp
pusha
inc
push
add
lods
dec
cmp
leave
rcr
pop
outsb
mov
outsb
les
pop
sub
jno
lods
add
jecxz
fnstsw
test
fldt
divl
pop
std
in
insl
jo
or
in
popf
lcall
in
jne
pushf
sbb
and
daa
jb
sbb
xor
lret
cld
shr
pop
or
test
ret
sub
nop
inc
jnp
imul
xlat
enter
popa
adc
ja
inc
jnp
adc
dec
push
or
stc
in
push
in
bnd
and
test
jge
xchg
jnp
ja
cmpsb
xchg
jmp
xlat
js
cmp
stos
insb
outsl
push
mov
cmpsb
leave
jnp
daa
lahf
add
je
scas
cmp
jno
jae
aam
pusha
add
cmp
enter
out
inc
xchg
or
dec
mov
mov
in
sub
call
mov
push
movsb
inc
cwtl
pop
ret
mov
mov
sub
fsubs
jae
cld
insb
xchg
or
iret
sbb
mov
ja
and
xchg
loopne
mov
xchg
inc
arpl
ljmp
loop
popl
mov
mov
push
sub
test
mov
dec
pop
jnp
cld
jne
enter
jnp
out
sub
jnp
cmpsb
das
xor
jno
jp
inc
in
movsb
fdivr
and
fs
imul
jnp
ret
les
and
mov
mov
jnp
out
xor
jnp
xchg
xchg
jmp
arpl
pop
inc
mov
lods
loopne
rolb
outsl
jge
cmp
jmp
shl
addr16
insb
stos
jnp
int
jo
adc
cmp
and
xlat
dec
je
addr16
pop
jnp
mov
lods
popa
mov
out
jnp
lds
out
imul
jmp
outsl
pop
test
mov
xchg
mov
push
add
or
dec
fildl
fisttps
outsl
jnp
mov
jnp
push
enter
fwait
test
xchg
lahf
xlat
imul
mov
ljmp
bnd
cmc
inc
cli
xlat
add
clc
xchg
mov
ret
int
ja
jnp
pop
push
push
jecxz
push
sarb
bound
xchg
jle
mov
repz
adc
in
sbb
out
push
repnz
pop
ret
jnp
sbb
jno
jo
mov
iret
mov
fbstp
sbb
ret
xchg
sbb
pop
clc
push
pop
enter
lds
aaa
dec
cld
repz
mov
fnstcw
cmp
std
insl
imul
cld
das
sti
orb
das
dec
push
pop
jo
dec
mov
add
lock
adc
arpl
jge
movsl
sarl
loop
fistpl
cmpsl
inc
pop
jnp
jo
sbb
jg
lahf
or
repnz
nop
into
cld
pop
mov
inc
mov
mov
mov
sbb
out
jl
ret
stc
push
repz
sbb
call
jae
ljmp
nop
add
js
adc
jnp
xor
adc
sti
shr
pop
movl
jnp
sbb
scas
fistps
mov
sub
out
push
adc
fstpl
cs
fisubrl
add
xchg
ja
dec
push
in
jnp
hlt
jecxz
mov
loopne
leave
lahf
jmp
hlt
jmp
jle
nop
mov
lret
add
fiaddl
pop
mov
mov
das
jne
jno
mov
dec
add
mov
sub
mov
mov
jne
sub
jnp
fisttpll
or
xchg
xchg
popf
arpl
pop
sbb
lcall
mov
stos
rcr
add
mov
ja
push
and
and
out
jne
xor
and
mov
movsb
push
aad
rcl
lcall
jnp
xorl
or
inc
in
mov
sarb
mov
rolb
int3
push
sbb
std
subl
lret
xor
in
inc
push
jnp
imul
stos
in
pop
adc
lods
jnp
repz
nop
lcall
sarl
mov
les
xchg
cmp
shl
fisttps
iret
mov
add
mov
mov
mov
jae
xchg
outsb
fdivl
or
sahf
jnp
pop
xorl
ja
pop
cmp
jl
jnp
sbb
daa
andb
jmp
rolb
cmp
sbb
xchg
or
scas
xchg
in
cli
lret
pop
mov
popa
andl
or
or
and
mov
fwait
iret
jmp
gs
jmp
ljmp
push
jne
fldl
mov
cmp
xor
nop
dec
sbb
dec
jl
pop
sub
shll
testb
inc
in
mov
imul
aaa
sub
call
jmp
xchg
sub
jnp
push
outsl
subl
dec
dec
mov
mov
or
cltd
xor
lahf
loopne
adc
pop
jg
xor
lods
inc
jne
insl
sub
xorl
push
dec
xchg
imul
out
out
dec
sbb
xchg
enter
dec
push
hlt
pushf
cltd
lds
and
addl
lods
dec
xlat
cmpb
xor
mov
or
test
shlb
jnp
mov
sbbl
mov
dec
jnp
and
jmp
faddl
cs
out
outsl
aad
addr16
test
add
adcl
mov
iret
fmuls
fwait
mov
push
inc
pop
lret
sbbl
or
je
push
mov
push
cmpsl
pop
lret
imul
mov
pop
jnp
scas
fisubrs
jmp
jae
and
roll
loope
jb
sbb
outsb
aad
repnz
bound
mov
jmp
dec
test
movsb
mov
mov
aad
dec
or
mov
scas
es
inc
repz
sbb
sbb
sbb
outsl
or
cli
pop
cltd
sti
adc
mov
dec
push
ja
jnp
imul
sbb
xchg
lea
aad
pushf
jnp
sbb
insl
mov
dec
lret
cmp
lahf
jecxz
clc
and
push
mov
scas
dec
mov
add
push
aam
fstpt
mov
sbb
out
sub
aas
das
cmp
stos
fstps
stc
loopne
cmpl
nop
jl
xchg
sub
and
pop
sbb
lods
les
or
push
ja
imul
pop
outsl
inc
aaa
or
mov
scas
add
adc
daa
mov
aaa
loope
mov
popf
add
in
cmp
jmp
ds
in
fdivr
addr16
lods
xchg
inc
mov
stc
dec
sbb
pop
sub
arpl
xchg
gs
aad
pushf
movsl
pop
or
fwait
daa
push
jo
cld
jb
mov
aas
outsl
sub
sub
xchg
sub
and
ljmp
xchg
stos
jno
cmpb
and
les
jnp
and
movsb
cs
inc
idivl
test
add
adc
insl
addr16
fadd
fnsave
lcall
xchg
jae
inc
arpl
sub
es
xlat
in
jnp
aas
leave
daa
rclb
or
sbb
push
pop
ret
pop
mov
lods
mov
jnp
mov
call
sbb
jg
fldcw
jle
push
daa
popf
jnp
inc
movsl
pop
jp
jmp
sub
pop
pop
testl
in
dec
outsl
popf
dec
or
les
mov
fsub
dec
push
sbb
push
sub
pop
adc
mov
xchg
stos
call
mov
inc
mov
pop
test
mov
cmc
repz
jmp
ja
xchg
or
movsb
push
push
sbb
mov
fdivrs
repnz
gs
stc
sub
jnp
adc
in
jo
jnp
push
nop
adc
jnp
cmpsl
orl
mov
xlat
dec
icebp
ffree
jnp
out
sbb
fsubs
xchg
inc
mov
into
lret
cmpsb
imul
scas
mov
in
cmpsl
jnp
pushf
dec
dec
pop
mov
jnp
dec
jno
jl
out
cmp
pusha
jb
daa
icebp
lcall
mov
xor
jge
push
imul
mov
in
inc
mov
jbe
and
addr16
jecxz
xchg
xorb
and
jnp
stc
sarb
enter
xchg
push
outsl
es
sbb
enter
sub
gs
mov
pop
adc
or
add
mov
mov
mov
inc
jae
lea
dec
or
push
jnp
imul
cmp
rol
adc
into
insl
jnp
sub
cmp
dec
stos
mov
jnp
lods
in
std
inc
or
xor
jnp
and
inc
inc
push
movsl
jl
loop
jnp
subl
sarb
push
sbb
add
ja
gs
push
jnp
pop
inc
dec
out
lds
adc
dec
in
data16
mov
jo
xchg
jnp
dec
adc
dec
add
shl
xchg
aam
cmp
mov
jp
add
mov
cmc
bound
xlat
out
adc
sub
mov
in
cmp
aam
jnp
or
sub
mov
scas
inc
pop
call
jnp
ficomps
jae
cmpb
xchg
jnp
or
dec
or
cmc
mov
pop
movsb
xchg
call
addr16
incb
adc
btrl
cltd
ret
or
in
clc
push
mov
mov
push
repnz
jne
dec
cmp
sub
lds
rcr
stos
dec
jno
mov
sbb
movsl
outsl
mov
cwtl
je
jns
fcoml
stc
cmp
dec
insb
xchg
imul
das
push
imul
pop
adc
les
mov
pop
mov
xlat
or
pusha
mov
jo
push
push
push
enter
adc
jne
mov
jno
pop
or
dec
leave
jae
dec
or
xor
jg
push
add
xor
add
subl
loopne
push
pop
int3
enter
jnp
int
cmpsb
test
adc
jnp
xchg
in
call
addr16
je
out
mov
jnp
mov
repnz
cmp
inc
jne
out
jno
mov
imul
fstpl
in
inc
inc
jnp
mov
or
ljmp
imul
jmp
lds
xchg
repz
push
pop
gs
mov
insb
jnp
insl
inc
dec
stc
sub
mov
sbb
push
scas
jnp
idiv
jne
pop
stos
decb
lahf
rcr
mov
inc
jmp
sarb
mov
scas
pop
xchg
jnp
push
jns
add
lret
push
or
jnp
nop
mulb
mov
adc
outsl
push
hlt
pop
mov
jnp
fldt
cmp
lds
pop
pop
in
jnp
or
fstps
hlt
fistpll
dec
cld
stos
xchg
push
bound
jg
outsb
cmp
or
lea
xchg
sbb
xchg
mov
clc
xchg
out
test
jnp
xchg
xor
mov
jo
sbb
mov
dec
cld
js
mov
dec
imul
pushf
xlat
and
xor
jnp
mov
pop
or
sbb
es
jmp
lea
jnp
cmp
mov
mov
sub
in
sub
sahf
sub
fdivp
mov
imul
adc
pop
out
jae
cmpsb
mov
push
lret
pop
repz
xchg
and
xor
mov
jae
jo
mov
jae
mov
fldl
and
sti
dec
iret
fwait
jae
pop
jg
mov
jne
testl
cli
push
cld
ret
inc
sti
pushf
pop
stc
popa
repnz
sti
sub
repz
mov
stc
mov
push
and
or
pushf
dec
mov
pop
jnp
fs
outsb
adc
cmp
shlb
xchg
inc
cmpsb
sbb
jg
mov
cltd
pushfw
jmp
or
sub
iret
lock
mov
mov
int3
mov
xchg
mov
lret
xlat
jnp
out
xchg
xrelease
lea
cltd
adc
jnp
out
pop
nop
enter
ficoml
adcl
ret
into
inc
cmpsb
sub
mov
jnp
pop
gs
sbb
and
outsl
std
sub
orl
mov
mov
call
iret
dec
icebp
pop
or
in
cmp
inc
imul
jo
add
loope
cmpsb
aas
lret
jge
lret
fmull
cmp
pop
cli
jne
sbb
ret
add
jbe
adc
insl
adc
jnp
out
cli
add
jnp
or
in
cmpsl
pop
mov
pop
mov
fxtract
fdiv
pop
shrb
jae
push
and
fbld
nop
cmpsl
sbb
test
insb
out
subb
mov
mov
stc
ds
cmpsl
pop
pop
pop
imul
add
xchg
mov
scas
pextrw
jnp
and
icebp
push
sbb
adc
cmp
cmpsl
stc
inc
add
jae
and
pop
jb
jnp
push
mov
fs
mov
mov
jnp
sub
mov
or
addr16
pop
mov
imul
je
pop
jnp
stc
lds
data16
dec
mov
dec
popf
cmp
outsl
and
repz
sbb
or
pushf
add
fabs
adc
cmp
js
incl
pop
cmp
push
sub
test
sbb
fidivrl
and
ret
xchg
push
lret
stos
mov
adcb
xchg
mov
stos
push
jae
xor
ja
mov
test
pushf
jnp
arpl
std
enter
jnp
xchg
fs
adc
jo
or
push
cmc
xor
loope
sub
ljmp
pop
and
or
mov
sub
andb
sub
lods
ret
cmp
leave
mov
or
add
es
sub
in
push
and
jnp
or
leave
dec
jnp
ret
push
jae
sub
jp
or
jp
in
mov
add
cmp
cmp
sbb
mov
jnp
and
push
sahf
out
or
mov
dec
jnp
sbb
iret
jp
imulw
out
add
jno
add
inc
jno
xchg
mov
xlat
inc
or
outsl
jmp
mov
sub
or
xchg
xchg
aad
pushf
imul
sbb
mov
mov
push
jb
insb
or
jmp
sbb
xchg
addr16
ret
mov
jnp
or
mov
test
loope
mov
pop
int
mov
in
outsl
fsubrs
fdiv
pop
lock
and
jmp
aad
call
cmp
sahf
outsl
cmp
mov
lods
cltd
mov
aas
jnp
pusha
cmp
push
mov
jnp
inc
adc
rcl
pop
xchg
sub
jno
sbb
mov
jnp
mov
xchg
mov
popf
in
push
add
inc
inc
call
jnp
js
adc
and
or
and
pop
arpl
pop
fnsave
outsl
xor
bound
pop
mov
inc
cmpsb
mov
sbb
imul
cmpb
or
lock
xor
or
sub
iret
shll
cmp
push
sti
into
mov
push
leave
pusha
mov
pop
jno
aam
jnp
aaa
push
mov
lds
test
xchg
cmc
push
xor
xchg
loopne
gs
jnp
cli
fimull
lods
inc
adc
jnp
daa
jns
rcrl
jnp
in
pop
pop
cmp
je
stos
ret
shlb
xchg
pusha
jnp
dec
int3
and
fimuls
pop
imul
xor
sbb
lock
lret
shll
je
call
ja
push
mov
cltd
psubusw
sub
jne
imul
lahf
incb
inc
pop
jne
addr16
lods
addl
repz
in
mov
popa
sbb
sbb
push
pop
add
pop
or
adcb
cmp
int
test
iret
stos
jle
mov
cmp
add
and
imul
fdivl
pop
popf
xor
dec
fwait
dec
push
jnp
insb
fdiv
adc
mov
jmp
jae
mov
mov
divb
jnp
xorl
cltd
add
inc
and
mov
ret
inc
jnp
xlat
in
xchg
xchg
dec
insb
jnp
jecxz
test
xor
sbb
into
jae
das
or
outsb
or
std
test
or
dec
nop
movsl
sub
vsqrtsd
inc
shrb
pop
jno
jo
cmp
es
adc
mov
dec
jnp
ss
les
jnp
or
inc
idivl
leave
sub
inc
inc
push
jnp
cmp
push
sub
and
push
jno,pn
lcall
and
bound
jnp
inc
insl
xorb
mov
and
cltd
idiv
cmpl
stc
jle
mov
adc
cmp
xor
sub
xchg
repnz
dec
cli
jnp
ret
repz
xchg
xchg
shrb
or
adc
xchg
adc
outsl
bnd
pop
fmul
leave
cmp
mov
std
xchg
xor
stos
or
adcl
mov
xchg
mov
test
xor
mov
mov
aad
dec
loopne
lahf
jnp
adc
andl
jo
out
mov
repnz
mov
movsb
fwait
pop
jnp
call
jno
or
xchg
inc
pop
fmulp
repnz
push
adc
jo
inc
sub
outsb
mov
mov
in
addr16
or
add
roll
mov
lcall
sbb
je
js
gs
aam
sbb
mov
popa
lret
das
xchg
lods
outsb
and
mov
imul
xor
or
sbb
mov
shr
or
mov
les
addr16
pusha
push
jnp
test
or
cmp
dec
repz
insl
fcoms
mov
or
push
push
or
add
lahf
fldl
xor
or
aas
sub
out
aam
push
fmuls
in
push
jp
push
cmp
mov
sub
cmp
cltd
mov
sub
jne
push
sub
mov
jnp
fcom
int3
and
std
xchg
jnp
mov
dec
mov
push
sbb
lret
xchg
cmpb
xlat
jnp
lret
in
xor
lcall
out
cmp
fidivrs
int
insl
popf
insb
or
jnp
shrb
andb
xchg
dec
sub
lea
in
outsl
aad
mov
insl
test
jbe
adc
cmpsb
and
iret
out
jp
daa
mov
push
fimull
std
mov
je
mov
dec
sub
in
jecxz
popa
mov
or
and
push
imul
and
or
cmc
out
idiv
jnp
lds
repnz
xchg
fistpll
cltd
pop
test
int
fstpt
or
push
out
out
jmp
add
ret
mov
mov
mov
inc
movb
mov
or
push
dec
cli
mov
cmp
mov
and
jnp
mov
dec
subb
lret
mov
jmp
jae
sbb
pushf
push
in
cld
jnp
mov
imul
cmpsl
sbb
jnp
inc
ja
pop
mov
jnp
sub
aas
push
sti
sbb
je
xchg
sbb
push
sub
gs
mov
fstps
dec
lret
inc
jnp
movsb
pop
subl
jns
mov
jnp
or
inc
cmpsl
orl
sub
leave
mov
and
in
mov
mov
outsb
jb
pop
pop
jno
mov
xor
dec
inc
mov
jnp
push
sub
add
jnp
mov
adc
imul
inc
repnz
mov
push
jnp
aad
xchg
les
xor
mov
outsl
sub
mov
scas
fdivrs
cmp
aas
aad
shrl
fisttpll
sub
mov
insb
clc
or
and
enter
jno
push
mov
add
mov
mov
dec
cwtl
test
iret
sarl
pushl
sbb
and
in
jnp
pop
xchg
jno
jnp
scas
push
cmpsb
iret
mov
cmp
jns
gs
shlb
adc
jo
xchg
cltd
jg
sub
shll
out
clc
sbb
adc
mov
dec
fldl
jp
fidivrs
jecxz
add
mov
inc
adc
jnp
adc
mov
movsl
or
xchg
bound
and
dec
push
test
out
insb
mov
sarb
mov
outsl
cmpb
jnp
int
or
mov
add
mov
das
rorl
jae
mov
lcall
fidivrs
jns
mov
jnp
inc
enter
test
out
jb
jnp
add
jno
in
mov
inc
jnp
mov
call
into
fistpll
ss
and
mov
jge
add
mov
jecxz
xor
cmpl
pop
sub
mov
fisubs
pop
jnp
jle
mov
jge
rorb
push
jns
mov
gs
cmpsl
ja
xchg
jnp
mov
nop
mov
mov
xchg
rol
mov
popa
insb
mov
cli
mov
shl
jne
je
ficoml
sbb
dec
nop
jnp
testb
test
imul
sub
pop
ja
pop
std
ret
movsl
sub
int3
shrb
fwait
jne
sbb
or
mov
insb
jecxz
xor
pop
mov
jmp
aam
adc
dec
in
jne
mov
sti
nop
cmpsl
js
inc
jnp
ret
scas
dec
sbb
lods
pop
popa
xchg
jno
outsb
stos
mov
mov
mov
out
jmp
lock
cmp
inc
add
mov
xchg
sahf
jne
inc
or
dec
dec
aaa
int3
push
or
jne
daa
jge
aad
lods
std
dec
push
jnp
aam
xor
jnp
jne
shlb
aaa
add
xchg
xchg
mov
pop
insb
sbb
add
mov
shll
lock
add
dec
adc
scas
stos
inc
jae
xor
stos
xor
arpl
fnstsw
lcall
into
jo
xor
outsl
inc
jae
cld
xor
popf
js
jl
fcomip
mov
cmp
dec
into
xlat
cmc
lret
push
std
mov
inc
bnd
xor
lahf
pop
jmp
add
or
xor
mov
push
xor
test
je
icebp
in
out
cmp
pop
addr16
sbb
pop
jnp
cwtl
dec
repz
sahf
and
jns
xor
cmpsl
imul
je
imul
jle
adc
cs
sbb
movsl
xor
cmp
mov
insl
pop
cli
imull
ljmp
movsl
sub
xor
jne
pop
loope
dec
jecxz
mov
jnp
pop
xchg
daa
xorb
dec
jnp
and
fbstp
cltd
mov
push
setb
lods
add
and
jl
dec
idiv
push
jnp
out
test
adc
jnp
or
add
push
fdivl
inc
mov
outsl
cltd
ja
out
jnp
xchg
mov
sub
fptan
lea
jnp
insb
insl
dec
dec
dec
xor
sbb
ja
dec
jp
out
jnp
aas
mov
fsts
fsubp
sub
daa
jnp
jno
push
int
mov
test
imul
stos
mov
dec
mov
ja
sahf
popa
or
ret
mov
jl
mov
inc
fnstsw
add
xlat
fisubrl
jecxz
sbb
jg
cmp
cmp
jbe
pop
add
inc
inc
mov
testb
aad
jns
outsb
in
jnp
shll
push
mov
mov
push
out
mov
jnp
sub
mov
test
lahf
push
xorl
out
loop
jns
xchg
pusha
imul
push
push
in
jae
xor
jb
cld
icebp
inc
repz
arpl
sub
inc
jnp
pop
stos
setno
inc
mov
jnp
mov
cmp
lcall
shrb
add
insb
iret
pop
rep
inc
cmp
jmp
xor
xlat
out
dec
cmp
fstpl
or
faddl
jb
jnp
cmpsb
dec
fisttps
inc
sub
push
dec
ret
push
pop
mov
mov
sarl
mov
lods
sbbb
xchg
jnp
loop
outsl
xor
jnp
add
mov
lock
bnd
cmp
jns
les
cmp
lcall
mov
push
je
pop
movsb
jle
sbb
inc
add
and
sbb
das
dec
fidivrs
incl
jo
rorb
test
rcl
in
jnp
and
mov
push
jns
xor
cwtl
movsl
push
andb
cmp
ljmp
scas
imul
loopne
int3
cmp
inc
dec
jnp
mov
pop
fisubrl
addr16
or
jnp
xor
mov
fwait
mov
jnp
mov
and
push
aaa
movsl
les
mov
jnp
cmpsl
xor
pop
cs
push
cli
pop
call
jbe
and
sbb
ja
bound
dec
jnp
mov
or
and
sub
divb
movsl
jbe
aam
jnp
jge
adcb
pop
xchg
cld
repnz
jne
mov
sub
jnp
inc
mov
lods
and
sahf
jg
sbb
jmp
sub
add
in
mov
ror
popf
imul
jmp
movsb
ficoml
jnp
pop
test
outsb
cwtl
movsb
into
jnp
jp
adc
cmp
jnp
arpl
or
ret
out
jae
sbb
jo
mov
fcoms
lds
mov
and
mov
call
daa
jno
fists
add
mov
adc
idivl
movsb
inc
push
xor
btr
and
jnp
fstps
dec
clc
mov
cmp
jg
ljmp
in
push
pusha
in
mov
jb
add
jnp
push
push
jg
scas
and
mov
aaa
jnp
les
daa
mov
jnp
sub
lods
jb
add
mov
pop
xchg
jno
outsb
das
adc
inc
cmp
push
lret
sub
rcrl
in
jnp
jno
sbb
push
cmpsl
imul
sarb
or
adc
jbe
scas
shrl
mov
mov
loope
aam
xor
inc
jae
pop
mull
sub
daa
push
jnp
jno
jmp
push
std
imul
pop
jae
mov
or
dec
pop
adc
imull
cmp
lea
or
pushf
jge
pop
ja
sub
inc
jb
jnp
ret
test
xor
mov
cmc
outsl
jmp
in
call
arpl
mov
lahf
jnp
orl
loopne
mov
out
cmp
lret
dec
mov
sub
in
daa
jb
dec
imul
outsl
jnp
hlt
adcl
pop
cmp
mov
in
in
jne
push
sub
test
cs
jnp
sbb
movsl
repz
jnp
and
das
lea
jmp
arpl
cmp
pop
into
mov
jmp
cmpsb
repz
push
pushf
outsl
jbe
and
cltd
add
test
iret
lods
push
enter
cmc
jnp
in
lock
mov
cld
aaa
out
jno
and
mov
cltd
cmp
add
mov
xor
rcrb
xor
outsb
ret
jp
shlb
mov
mov
jnp
lea
xchg
jnp
jge
dec
pop
lods
into
jl
mov
or
dec
outsl
sbb
cmp
jae
push
xchg
ja
jnp
hlt
mov
fs
or
inc
cmp
jnp
test
or
add
ret
inc
cmpsb
dec
sbb
sbb
jno
or
loopne
mov
jnp
out
push
xlat
push
std
aaa
jnp
jb
xchg
lcall
js
jae
adc
xor
bound
pop
add
mov
jecxz
inc
adc
jle
and
fdivl
push
or
outsl
dec
and
hlt
mov
out
fimull
jbe
repnz
push
dec
mov
cld
in
xchg
jecxz
jbe
jb
xchg
jnp
dec
movsb
repz
subl
mov
jns
push
das
sbb
fildl
movsl
sbb
jno
pop
subl
sub
icebp
mov
mov
and
xchg
cmp
add
jnp
mov
popa
add
jnp
icebp
mov
push
outsb
lock
inc
lret
ja
jne
insb
adc
cmp
dec
jb
push
inc
lock
clc
jnp
and
mov
dec
ljmp
and
aad
jae
xlat
lcall
dec
ds
aas
imul
inc
paddd
lods
jge
pop
in
out
lcall
mov
imul
leave
jns
ss
scas
fistpll
lcall
sbb
add
dec
push
aaa
insl
es
pop
pusha
pop
sub
addr16
movsl
jbe
and
xchg
sahf
imul
hlt
mov
pop
int3
aam
pop
lret
pop
adc
xchg
push
sub
mov
xor
mov
sub
adc
pop
mov
cmpb
sbb
sub
inc
aaa
mov
cmp
or
sbb
mov
divl
mov
mov
jge
add
ds
mov
aas
xor
insb
mov
cmp
test
popa
dec
or
ja
mov
inc
xor
xor
arpl
in
mov
das
addr16
nop
out
imul
lahf
insb
rorb
pop
sbb
ja
mov
dec
sbb
aas
xchg
loopne
add
in
mov
fdivrs
insb
out
dec
jbe
fmull
arpl
ss
xchg
ljmp
pushf
dec
enter
mov
xor
xchg
jbe
mov
adc
inc
data16
clc
mov
cmp
jo
lcall
popf
test
fsubl
lret
pushf
jnp
dec
add
adc
adc
ror
into
xor
jp
out
pop
imul
jnp
jae
cmp
cmp
jnp
pop
xchg
jnp
adc
cli
sbb
pop
das
jnp
cmc
ret
rcll
les
jb
stc
mov
dec
pop
pushf
push
pop
inc
cs
mov
or
add
inc
xchg
arpl
jnp
std
movsb
sub
sbb
jnp
mov
int
int3
out
jnp
ud1
lea
jns
jnp
outsb
cmp
dec
rcrb
jnp
sub
fadds
mov
jb
mov
insl
movsb
outsb
testl
filds
aad
testb
cmp
push
outsb
fs
or
sub
jnp
orb
adc
and
xchg
cmp
pop
or
fisubrl
shrb
mov
push
inc
sub
cs
xchg
and
shrb
mov
and
jge
fstpl
or
stos
mov
pop
clc
testb
shl
push
xor
ljmp
or
aaa
rorb
pop
push
xlat
pop
inc
outsl
xchg
cmc
jnp
cmpsl
mov
fcomps
mov
and
lods
jne
sub
jnp
xor
cmp
dec
ja
jp
pusha
jnp
dec
mov
dec
jnp
add
cmp
call
in
add
test
mov
mov
mov
adc
jne
sbb
jmp
outsl
je
jae
int3
inc
roll
push
dec
stos
jl
cltd
xchg
jnp
fxch
scas
bound
xchg
jnp
adc
push
jnp
sbb
loop
and
cs
sarl
xor
jns
jl
lods
and
cmp
lods
cmpsb
mov
scas
dec
push
popa
jnp
sbbb
push
xor
mov
clc
rorl
cmp
mov
jae
mov
xchg
pop
cs
cmp
cmp
stc
stos
icebp
fisttps
ret
or
aaa
jae
jmp
addr16
mov
jno
imul
inc
mov
push
rol
cwtl
add
dec
add
fdivrs
jb
lock
loop
xchg
lahf
mov
scas
push
push
lret
push
or
mov
cs
lahf
icebp
cmpsl
dec
push
push
mov
pop
addr16
idivl
mov
jbe
fiaddl
fbstp
outsl
mov
in
lcall
loopne
lcall
jecxz
push
sbb
inc
lahf
xor
aaa
aam
xchg
mov
ja
addr16
iret
cmp
pop
push
clc
ja
imul
pop
outsl
lock
stos
cmpb
loope
add
adc
jp
pushf
jbe
inc
stc
lret
inc
add
fimuls
bnd
or
mov
pop
inc
insl
fs
scas
dec
jmp
sbb
lods
pop
push
jnp
adc
aaa
cli
jnp
js
xchg
insl
xor
stos
lock
sbb
jnp
mov
les
std
inc
push
jb
into
xchg
repnz
int
out
xor
fdiv
cmp
and
pop
nop
les
xlat
pusha
dec
ret
mov
add
or
and
in
pop
mov
inc
mov
leave
jnp
cld
das
sarb
adc
jnp
hlt
sahf
iret
test
dec
call
xchg
lret
les
cld
jnp
arpl
jo
ja
mov
outsl
cwtl
dec
je
xor
test
mov
cli
hlt
lcall
aaa
mov
mov
aam
mov
mov
lods
jnp
mov
mov
mov
lods
lahf
subl
test
inc
inc
std
mov
mov
mov
mov
cld
fs
arpl
pushf
lods
sub
mov
sbb
aas
mov
jnp
mov
pop
out
movsb
cmp
mov
lods
inc
sarb
sub
adc
mov
ds
negl
cmpsl
cmp
mov
xor
jb
lods
mov
add
loop
mov
in
dec
fdiv
pop
movsl
js
jnp
ds
jmp
jnp
mov
popa
lods
movsl
adc
sub
mov
sahf
pop
rol
fsubl
mov
jnp
mov
rcl
pushf
adc
jmp
ja,pt
mov
jnp
add
jecxz
or
imul
adc
sbb
pop
jnp
or
je
pushw
push
in
into
lcall
ds
mov
adc
arpl
imul
out
testb
xor
pop
imul
cmp
sbb
sbb
imul
test
movsl
ja
mov
in
mov
inc
cmp
aaa
in
jnp
fisubrs
insl
sub
cmp
mov
in
jnp
and
xor
sbb
insb
inc
ss
jnp
mov
mov
jge
arpl
movsl
push
xor
rorb
addr16
fidivrs
sbb
cs
sub
push
lock
pushl
add
push
mov
and
xchg
out
lods
jnp
adc
cmp
xchg
add
sub
xlat
xor
mov
mov
add
rcll
cmpsl
jns
and
test
cmp
pop
jae
pusha
jnp
aam
jbe
in
in
mov
fidivrs
lahf
fsubrl
dec
aad
cmp
cld
fnstcw
shrl
sub
jnp
ret
sbb
insl
xor
pop
imul
addr16
push
lods
and
dec
fstps
sbb
push
decl
push
dec
icebp
in
jnp
div
pusha
mov
pop
es
fildl
mov
cmp
movsl
lods
jmp
repz
jno
xchg
jnp
inc
xor
cmp
loopne
xchg
cmp
inc
sub
mov
sub
jnp
jbe
lret
jecxz
jnp
scas
xor
jnp
aad
dec
mov
loope
test
jae
mov
cmp
cmc
xchg
imul
cld
lods
mov
xchg
iret
inc
stos
loopne
in
ja
fisubs
ja
lds
rcll
jno
push
cmc
cwtl
mov
negb
call
jmp
mov
bound
out
mov
mov
xor
adc
xchg
mov
mov
clc
dec
leave
jnp
and
fidivrl
mov
jnp
mov
xor
sbb
scas
push
sub
movsb
in
mov
cmpl
imul
ss
mov
je
mov
adcl
push
mov
add
int
push
js
testb
jp
mov
inc
or
add
adc
pop
fidivrs
jnp
ret
cvttps2pi
adc
cmp
dec
sub
jnp
jo
aam
cmp
pop
cli
scas
pusha
jns
adc
ss
popa
jb
inc
mov
outsb
dec
cwtl
insb
mov
imul
push
jae
adc
cmpsl
hlt
dec
jnp
int
arpl
lcall
iret
push
in
mov
lods
pop
rorb
cmp
pop
lahf
cld
jnp
xchg
ss
sbb
mov
cltd
sbb
outsl
cmp
mov
inc
pop
jnp
and
movsl
sub
cmp
sbb
xorl
xchg
movsb
jno
jnp
sahf
cmp
mov
sbb
jnp
outsl
and
jnp
sub
stos
pushf
xchg
and
shlb
mov
cld
cmpsb
nop
lret
js
push
inc
fiadds
in
mov
aas
outsl
lock
jmp
pop
shlb
cmp
sbb
movsb
daa
ja
push
and
popf
jae
sub
cli
jnp
or
cmp
ret
ret
lret
push
sarb
mov
bndstx
imul
out
push
cmpsl
jne
fsubl
adc
lock
and
xchg
push
mov
xor
dec
outsl
cmp
aam
mov
sbb
stos
fdivl
jecxz
aad
cld
or
mov
lds
in
jnp
xchg
int3
aaa
and
sub
mov
stos
jae
movsl
ds
sub
pushf
mov
and
inc
cmp
mov
xor
in
jnp,pn
iret
popf
push
adc
cmp
ret
mov
jns
stos
jnp
push
xorl
xchg
sbb
jnp
out
iret
cmpsb
cmp
mov
inc
push
or
pop
dec
cmp
shlb
cmc
ja
outsb
mov
cmp
sub
fsubr
fisubl
outsl
sbb
add
mov
pop
fmuls
dec
out
jnp
sbb
cmp
jnp
leave
mov
mov
into
sub
cmp
push
pushf
shlb
jae
xchg
hlt
ljmp
cmp
icebp
sub
lahf
test
inc
dec
sub
jnp
adc
mov
sub
lret
cmp
jnp
cmp
or
xlat
jnp
sbb
ss
mov
jnp
jmp
aas
bnd
fistpl
outsl
aaa
insb
lock
push
inc
repz
jnp
mov
into
leave
ljmp
mov
add
shrb
iret
mov
or
adc
cld
mov
jmp
jae
inc
icebp
pusha
jnp
fldcw
lcall
in
pop
int
lods
hlt
inc
jnp
jo
mov
dec
out
cmp
popf
dec
inc
xchg
jmp
out
int3
adc
dec
lret
jnp
xchg
sbb
lods
fldenv
cmp
push
mov
jl
inc
add
sahf
dec
xor
dec
push
jae
mov
jnp
mov
insl
mov
jnp
in
push
inc
jecxz
pop
and
sbb
clc
movsb
ja
outsl
pop
sub
xor
int3
mov
lods
aaa
add
scas
aaa
pusha
xchg
jnp
inc
push
out
adc
and
dec
pop
pop
jns
stos
jbe
xlat
arpl
inc
pop
outsl
sub
or
jno
cmp
jnp
or
sub
rcrb
xor
ss
js
stos
movsl
int3
or
cmp
jge
add
mov
dec
in
fs
sub
ja
test
ss
cmp
or
cmp
dec
cld
pusha
je
cmp
jb
cmp
inc
mulb
jo
cmp
or
xchg
into
cmp
enter
sar
sub
lcall
dec
xor
adc
jmp
mov
mov
or
push
stos
dec
pop
and
cwtl
adc
lock
jnp
aad
sub
stos
mov
cmp
cmp
jnp
ror
sub
scas
cmpsl
popf
xchg
cmp
xchg
data16
stos
cli
jnp
mov
mov
cs
cmpb
push
cmp
mov
jbe
mov
ds
sub
rorl
adc
shlb
xchg
cwtd
inc
jnp
subb
popa
daa
cs
sbb
imul
aad
dec
push
dec
dec
fwait
ds
jb
jnp
add
scas
inc
int3
inc
jnp
mov
sbb
dec
adc
mov
mov
sti
insb
daa
mov
test
xchg
jno
lods
data16
bts
pop
xor
incl
fucomi
ds
jnp
inc
addb
lcall
mul
out
es
push
mov
mov
xor
cmp
xor
xchg
arpl
mov
scas
mov
cmp
jmp
rcrl
leave
into
jnp
mov
mov
mov
sub
idivl
jo
shl
scas
int
dec
es
in
mov
xor
ss
mov
das
bound
orl
jb
mull
sbb
pop
sbb
mov
or
ret
subb
and
outsl
jmp
xor
cmp
cmp
mov
dec
sbb
testl
sbb
jnp
sub
mov
sbb
xor
jae
mov
push
fnstenv
leave
lea
stos
orb
aad
popf
ljmp
mov
push
bound
sub
stos
je
lret
sti
cli
mov
mov
sbb
or
mov
outsb
les
jnp
sub
mov
je
mov
mov
fmuls
pushf
fisttpl
mov
or
pop
add
sbb
in
pop
xor
fcmovu
lret
fsubr
in
lcall
pop
mov
jp
fsubrs
sbb
inc
insb
sbb
lret
sub
fwait
or
mov
insb
dec
sub
imul
cld
cmp
sub
add
enter
cwtl
or
or
or
or
or
or
add
add
add
add
add
add
add
or
jmp
add
add
pop
add
sbb
add
add
add
add
dec
out
xchg
or
cld
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sub
jg
je
pushf
or
dec
stos
idivl
adc
mov
jbe
in
fcmovnb
clc
jb
mov
mov
das
sbb
adc
xchg
or
sub
dec
fdivs
fldt
clc
adc
roll
add
pop
adc
cli
imul
idivb
movsl
mov
xchg
or
or
or
or
jnp
psubq
clc
out
xchg
movsb
fdivs
testb
xor
mov
or
cld
or
mov
cmc
int
or
arpl
icebp
add
paddd
lods
push
jge
lret
aam
or
inc
jnp
je
in
sbb
fldcw
hlt
jae
into
mov
adc
data16
adc
adc
es
lret
xchg
jl
test
xchg
rcrb
add
jns
fs
movsl
jnp
movb
sbbb
jmp
cmc
in
negl
jnp
xor
pop
imul
pop
aaa
lock
in
popa
pop
clc
sarb
js
pop
insb
clc
mov
jnp
andb
movsb
aam
aad
inc
jae
xchg
cmc
loop
subl
fwait
out
push
ja
jnp
movsl
adc
loop
std
xchg
xchg
hlt
add
jnp
sbb
sbb
or
push
jnp
in
stc
mov
push
ret
dec
dec
mov
clc
idivl
add
jmp
jmp
cmp
jnp
pop
dec
flds
mov
enter
ja
pop
xor
fistps
sahf
xchg
mov
jge
or
jae
pop
cmpsb
rorl
add
cli
movsb
imul
arpl
subb
jle
jnp
les
cli
iret
call
adc
jge
aam
xor
xchg
fs
dec
mov
fiadds
dec
fsubs
xor
repz
lds
test
jnp
xchg
insb
xchg
out
cmc
or
repnz
loopne
mov
jnp
fsts
inc
enter
pop
stos
pop
adc
jb
and
rcl
outsl
repnz
mov
sub
and
xchg
bound
call
leave
imul
insl
data16
cmp
lods
lcall
sti
and
pop
inc
jbe
sbb
ja
add
es
jnp
ret
fs
sti
xor
inc
inc
jnp
cld
add
loop
movsb
cmp
icebp
lds
add
xor
jne
stc
jae
clc
dec
jp
xchg
or
insb
mov
imul
in
push
aad
xchg
dec
jnp
lcall
pop
sbb
dec
sbb
jnp
pop
or
mov
testb
xchg
imul
daa
xor
subb
push
push
mov
sub
xchg
sbb
or
data16
icebp
stc
fdivr
push
xor
adc
test
pop
fistl
adc
mov
push
lret
mov
popa
mov
and
xlat
fadds
aad
and
mov
rclb
jnp
mov
stos
mov
inc
or
pop
aam
repz
out
add
mov
jge
lock
sbbl
or
fnsave
mov
jnp
mov
ffree
pushf
mov
gs
es
loopne
mov
daa
outsl
sti
dec
rclb
out
pop
and
shrl
mov
pop
mov
adc
sbb
lods
jg
pop
out
in
lock
push
push
fmuls
movsb
xchg
fwait
add
jnp
mov
mov
out
cwtl
mov
fs
lods
sbb
in
dec
mov
ja
idivl
pop
xor
and
jnp
mov
fldcw
aam
jnp
inc
cmp
jnp
mov
imul
sub
add
iret
icebp
test
js
test
jb
mov
jnp
int
jns
xor
lret
stc
jae
and
and
push
jae
icebp
sub
lods
aaa
and
test
ret
push
xor
sbb
dec
pop
addr16
sub
dec
sub
sbb
jae
insl
loop
mov
imul
dec
outsl
mov
push
bound
fisubl
jns
xor
push
jmp
in
mov
int3
push
mov
mov
xchg
sbb
jnp
inc
or
hlt
cmp
leave
stc
jnp
sub
dec
jnp
fstpl
add
or
sub
cmp
pop
rcll
das
out
popl
xor
js
rcrl
sub
insb
xor
mov
push
fdivrs
and
insl
or
jae
xor
xor
pop
jb
sbb
mov
push
or
gs
cmp
sub
outsb
sub
or
testl
sub
lret
movsl
jnp
lcall
jnp
stos
in
ss
bnd
ficompl
xor
inc
movsl
jnp
mov
jnp
stc
mov
test
mov
or
cmp
fidivl
clc
test
jnp
outsb
sub
jnp
outsl
ja
cmp
xor
xchg
mov
sub
imul
xchg
jmp
inc
mov
leave
lods
sub
fwait
xor
clc
adc
jnp
nop
adc
dec
cmp
jae
lcall
push
shlb
mov
sub
xchg
jnp
mov
ret
adc
jnp
jl
inc
ds
cltd
cmp
mov
test
xor
jnp
lahf
hlt
sbb
jnp
push
and
mov
cs
jnp
popa
mov
repnz
cmpl
hlt
add
mov
inc
nop
jnp
mov
fnstsw
int3
jp
sbb
mov
das
out
popf
cmp
lret
mov
cmpsb
addr16
sub
jnp
lods
mov
jnp
ss
fmuls
imul
pop
xlat
or
repnz
fsubrs
movb
jae
sub
or
lock
mov
jbe
les
xor
and
imul
sbb
div
lods
lahf
stos
lret
mov
xor
outsb
sub
adc
stc
icebp
xor
int
or
sbb
sar
jnp
pop
int
mov
mov
daa
or
popf
sbb
sbb
jnp
in
mov
lods
sbb
dec
movsb
jnp
and
and
or
sbb
sub
or
aam
enter
and
jno
add
cmc
cwtl
add
lahf
fld
insl
frstor
jnp
push
cmpsb
pushf
add
sti
dec
popf
fisubrl
cmpl
mov
mov
mov
jnp
adc
loopne
movl
jnp
dec
jle
cmp
aam
in
ret
or
out
push
sti
sahf
pushf
lods
push
popf
dec
or
sbb
jge
stc
in
adc
mov
dec
jnp
lods
pushf
cmpb
xor
jnp
aaa
arpl
sbb
sub
stos
cmp
dec
fisubrl
sub
ss
xor
cs
jne
insl
mov
xor
push
leave
push
xor
add
sbb
mov
lret
or
ljmp
hlt
lods
stc
insb
jnp
sub
jl
mov
aam
movsl
outsl
jo
jge
pop
jnp
mov
nop
lds
je
and
xor
jmp
inc
stos
divl
adc
cmp
insb
xchg
outsb
jnp
cmp
bound
loop
mov
in
out
js
dec
mov
jnp
cmp
ret
lods
xchg
cmpsb
movsl
int
mov
cltd
sti
loop
fprem1
push
sbb
ret
rcrb
fdivrs
lret
or
addr16
into
add
mov
aaa
jmp
and
cmpsb
inc
push
jnp
mov
mov
jnp
bswap
sub
fisubs
aad
pop
into
and
dec
dec
mov
cmp
shrl
xchg
aaa
stos
xchg
mov
mov
mov
xlat
or
addl
mov
pop
dec
fildll
sbb
sbb
rcll
add
mov
jnp
cmp
lds
adc
jp
test
faddl
xchg
jns
cmp
xchg
add
stos
sahf
jne
sti
aam
jnp
dec
imul
mov
xchg
and
mov
or
addb
cmpsb
aaa
imul
cld
leave
push
js
ss
cmp
xchg
movups
jnp
add
and
scas
and
jg,pn
push
sbb
scas
inc
mov
pop
hlt
push
in
add
jnp
cmp
jnp
dec
pop
push
nop
inc
pop
clc
ss
mov
idivl
xor
popa
ret
cltd
xchg
mov
fcmovb
outsb
das
adc
pop
inc
imul
test
mov
adc
testl
hlt
or
rcr
cltd
outsl
ds
pop
cmp
cmc
outsl
xchg
jp
cli
in
std
mov
sarb
popf
fdivr
mul
movsb
jnp
sub
jnp
mov
mov
jnp
adc
dec
iret
inc
mov
xor
lock
xor
nop
jns
add
xor
loopne
jnp
ret
and
and
dec
stos
mov
mov
jge
mov
sub
cmpsb
ret
stos
mov
orb
imul
inc
sub
aas
xor
repz
mov
or
aad
popf
mov
aas
std
cmp
icebp
jnp
xor
sbbl
pop
pop
icebp
iret
das
fnstsw
cli
xchg
testb
jnp
mov
movsb
sub
cmp
pop
and
jns
sbb
dec
cmp
cmp
fcom
cmp
in
lea
xchg
fdivrl
jl
pop
ss
test
or
cmp
mov
jnp
jg
ja,pn
test
mov
xor
jb
jnp
scas
pop
pushf
es
int3
rol
outsl
icebp
imul
push
incl
jnp
sub
clc
and
imul
ja
mov
mov
leave
imul
testb
add
les
cmp
das
xor
test
ficompl
fistpll
lds
fwait
sbb
movsb
or
fs
js
dec
lock
call
pop
xchg
lods
aad
in
imulb
jnp
cmp
cmp
pop
jne
mov
xor
pop
jbe
sbb
dec
jnp
stos
sahf
shrb
clc
lahf
xor
or
mov
nop
aam
out
pop
push
pop
jo
sub
out
xor
testb
mov
jne
fwait
jmp
lcallw
dec
jge
outsl
cmp
jnp
and
mov
sbb
aam
sbbl
repnz
gs
scas
sahf
dec
jnp
inc
jae
cmp
jg
jp
inc
sti
fildl
sbb
and
sub
ljmp
cmp
int
mov
jae,pt
mov
mov
sarb
clc
popf
mov
rorb
orb
push
rcrl
test
push
jnp
into
aas
outsb
adc
lea
andl
int3
icebp
sub
into
cmp
jge
out
and
leave
aam
inc
iret
xor
movsb
mov
cmp
shlb
sbb
roll
in
pop
je
popw
inc
pop
lret
das
cmp
jnp
hlt
rolb
fdivl
jne
mov
mov
outsl
and
pop
jnp
lcall
jnp
sbb
xor
imul
jo
sbb
loop
mov
gs
dec
jno
out
repnz
insb
shlb
idivb
stc
xor
lcall
pushf
mov
popf
int3
mov
mov
jnp
inc
ja
mov
adc
cmp
cmp
add
aaa
jne
fidivrl
cmp
mov
jnp
mov
pop
mov
jbe
jp
adc
pop
loope
scas
or
lods
cmpsl
subl
out
xchg
out
pop
sahf
jnp
jno
icebp
leave
mov
sub
mov
jnp
repnz
popf
mov
rclb
ja
mov
lods
lock
inc
es
push
cmc
not
mov
inc
popf
or
mov
and
push
in
sti
adc
jnp
dec
fisttps
xor
movsb
jo
or
adc
sar
pop
jne
iret
pop
mov
stos
lods
dec
jle
in
fs
les
xor
mov
mov
sbb
lea
test
cmp
and
xor
push
iret
out
sahf
lcall
in
pusha
insb
pushf
std
aad
mov
dec
fcompl
repz
dec
aas
enter
pop
adc
jnp
jle
lret
outsl
sarl
mov
fstpt
pop
jns
outsl
sbb
je
xcrypt-ecb
cmpsl
int3
mov
imul
movsb
sti
hlt
or
dec
fsts
clc
sub
sbb
xor
je
ss
sbb
aaa
mov
cmpsl
test
fidivrs
dec
pop
ss
xor
jnp
es
jae
xchg
hlt
lcall
je
movsl
or
jae
jg
or
sub
cmp
outsl
push
jne
hlt
jmp
dec
xchg
mov
lds
push
sub
test
xor
jnp
pop
mov
imul
xchg
popa
jnp
or
mov
cmp
movl
dec
jnp
push
daa
imul
mov
test
sub
pop
inc
fists
dec
mov
and
or
out
xchg
and
sub
fdiv
sbb
or
sub
lret
xor
xchg
in
jnp
enter
fwait
sbb
jnp
insl
cmp
aam
jge
jnp
mov
sbb
fisubs
fsubs
sbb
lcall
loopne
test
sbb
out
jmp
insb
pop
mov
jno
fimull
pop
outsl
imulb
pop
popf
call
outsl
dec
or
stc
add
pop
idivl
dec
fxch
pop
mov
jae
out
insl
scas
jnp
jno
xor
dec
in
int
cmp
adc
stos
xor
jp
ja
dec
mov
pop
jae
mov
jnp
push
cld
imul
aam
test
test
test
imul
iret
das
dec
mov
divl
imul
jmp
pop
enter
call
or
outsl
xchg
ss
nop
xlat
cmp
add
jg
push
clc
sbb
js
jne
inc
sbb
cli
mov
in
and
push
xor
lret
jnp
adc
add
jnp
lods
stos
sbb
sub
sbb
mov
jbe
pop
divl
and
test
jnp
repz
adcb
adc
sub
sbb
pop
sub
fs
push
movsb
sti
sub
jnp
aad
into
outsb
push
lret
xchg
sbb
cli
or
ja
jb
sub
sbb
sbb
stos
adc
jne
negl
andb
dec
jmp
mov
mov
mov
jnp
stc
pop
jo
aaa
out
cmp
lcall
js
ror
jnp
aas
test
repnz
mov
xor
adc
xlat
outsl
sbb
das
ret
jnp
lods
dec
mov
sub
cmp
xchg
jnp
or
inc
jnp
scas
das
sbb
sub
jnp
cli
arpl
ficomps
inc
jnp
pop
and
jnp
jns
clc
jb
bound
jnp
aad
push
adc
pop
xchg
insl
cli
xchg
ds
cwtl
mov
xchg
sub
xor
xchg
mov
movsl
outsl
xlat
mov
addr16
fnstenv
xor
jnp
das
sub
pop
dec
sti
cs
mov
mov
outsb
imul
jae
cs
xor
jg
inc
and
outsl
in
lcall
jmp
jo
mov
ja
ret
cmc
js
cmp
pop
cmp
inc
inc
dec
mov
pop
outsb
daa
pop
into
jnp
xlat
xor
das
mov
lret
clc
mov
jnp
mov
ds
stos
cli
aaa
or
pop
xor
outsl
movsl
out
mov
jp
mov
mov
repnz
jnp
and
daa
lods
movsl
sti
jnp
adcl
xor
dec
sahf
in
mov
xor
sub
jnp
shl
ljmp
mov
jp
std
push
insb
jnp
pop
mul
cmp
dec
fstenv
mov
add
xor
jmp
mov
ret
xor
adc
dec
aaa
mov
xchg
ret
jnp
inc
testb
aad
into
jnp
mov
xor
in
imul
sti
and
jecxz
mov
test
addb
xchg
jnp
int
clc
sbb
repnz
pop
insb
cmp
leave
lea
push
jbe
jle
pop
jp
js
sub
xor
ss
push
js
outsl
cmp
test
jnp
in
cmpsb
bound
sbb
jnp
or
stos
js
xchg
mov
or
lods
or
dec
sbb
and
cmp
repz
mov
repz
ss
inc
jnp
ljmp
cmp
mov
or
hlt
xor
insb
or
std
sub
sarl
push
lcall
into
and
popf
push
ss
dec
xchg
xchg
repz
pop
arpl
stos
sahf
sbb
push
aaa
sbb
sub
mov
ret
jnp
push
int
jge
pop
dec
jnp
inc
push
sbb
jne
imul
push
jnp
mov
into
jnp
sbb
lret
or
insl
jp
dec
xor
lods
inc
or
jno
xor
or
jnp
xchg
inc
sub
stos
inc
enter
xor
scas
push
hlt
ljmp
clc
aad
mov
jmp
sub
int
sbb
movl
dec
xor
add
jnp
sub
mov
out
lcall
mov
outsl
iret
mov
sti
xor
sbb
lret
aaa
cmp
mov
or
jno
pop
mov
call
out
leave
je
lods
sub
mov
hlt
es
aaa
insb
sbb
jnp
push
push
sbb
shll
or
mov
jnp
mov
add
imul
ret
jbe
clc
cmp
cmc
lret
jb
sub
fimull
in
cltd
lret
repnz
mov
aad
adc
jp
mov
es
fistps
mov
pop
ljmp
les
jmp
dec
push
in
xor
xchg
push
popa
cmp
fcomps
cs
jae
lods
sub
fcomip
sbb
inc
push
mov
aaa
jp
mov
mov
sbb
cmpsl
stos
cs
mov
xor
lret
mov
jnp
das
clc
gs
loop
jnp
imul
add
pop
fdivrs
out
cmp
stos
xchg
hlt
lret
jp
lods
call
into
lock
cmp
jnp
mov
adc
dec
push
jp
mov
and
lea
call
insl
sub
jbe
jnp
fwait
xor
bnd
mov
fistps
sbb
jne
push
test
push
in
jnp
xor
jnp
xor
movsl
cli
test
jnp
mov
mov
pop
cmpsl
out
jb
jne
leave
fimull
mov
mov
dec
lods
scas
xchg
jnp
rorb
fdivrs
je
mov
sub
add
push
imulb
sbb
inc
add
je
or
imul
stc
push
xor
jo
ss
jnp
clc
movsl
cmpsb
repnz
xchg
mov
mov
and
xor
xor
jmp
bound
sub
inc
jnp
ret
pop
jmp
pop
sbb
jnp
mov
xor
lods
cmp
aaa
sub
jnp
xchg
mov
aas
inc
cmc
int
or
out
shlb
and
lcall
pop
stos
insb
insl
aad
sbb
pop
sbb
jnp
xchg
mov
cmp
jnp
stc
lods
out
mov
jmp
jnp
inc
jns
mov
cmc
pop
lds
lods
mov
test
sub
sbb
mov
in
jns
jnp
dec
xor
fstpt
jnp
aam
lcall
mov
mov
cmc
outsl
dec
stos
mul
pop
push
mov
push
sti
sbb
sub
xchg
aaa
push
in
inc
push
popf
jbe
imul
sub
fprem
dec
jnp
cwtl
xorb
imul
xor
cltd
das
pop
push
jbe
mov
jae
shll
push
push
add
jb
clc
insl
mov
add
or
clc
add
lret
mov
cmp
pushf
sub
mov
stos
pop
sub
mov
add
pop
imul
xor
mov
pusha
jnp,pt
xor
aad
clc
mov
sbb
lods
mov
fucom
jae
dec
popf
fidivrl
mov
pop
pop
mov
mov
mov
xor
xchg
jnp
ret
adc
lret
mov
mov
fnsave
cmp
bound
jae
jnp
xor
xor
xor
sti
into
xchg
insb
jb
fwait
mov
sbb
lret
jnp
mov
lcall
fisubl
cmp
mov
gs
jnp
clc
inc
jb
sbb
ret
ljmp
cmp
jnp
xor
mov
ss
add
cs
cmp
push
mov
mov
sbbl
aas
loop
push
fdivs
jae
sbb
mov
fwait
push
lret
jg
pop
add
in
xor
outsl
stos
jnp
inc
pminub
popf
sub
js
cld
in
jp
out
ss
lcall
stos
jne
push
push
dec
mov
jnp
ret
cmp
jne
leave
aas
xor
leave
int
ret
and
pop
stc
dec
jnp
pop
pop
or
xor
lret
fcoms
jnp
ret
mov
jbe
sbb
jnp
in
mov
xchg
sarl
nop
mov
mov
lret
sub
jb
cmp
xlat
jnp
test
mov
scas
mov
fcmovne
jne
cltd
cli
mov
dec
js
sahf
mov
divb
or
inc
xchg
lds
out
push
popl
insl
sub
in
lcall
mov
aad
cltd
lods
mov
cwtl
fisubrs
xchg
or
mov
lcall
jo
mov
inc
jmp
push
lcall
imul
xchg
push
bound
lcall
add
jnp
lret
cmp
jns
mov
iret
in
stos
lods
or
cmp
imul
xchg
outsb
jns
xchg
outsl
jp
out
xor
js
push
insb
idivl
mov
and
xchg
jnp
jp
inc
gs
pop
or
loop
xchg
in
stos
or
mov
or
add
jecxz
clc
jnp
cmpsb
inc
and
js
scas
cmpsl
mov
pushf
es
jns
sahf
push
call
sub
jae
push
stos
mov
sbb
aaa
mov
mov
push
cmp
jnp
cmp
rol
out
mov
mov
sarb
cmpsb
dec
rcll
dec
pop
in
mov
sti
mov
jae
aas
arpl
dec
mov
or
mov
add
aam
push
in
cmp
pop
sub
fnstenv
push
jae
mov
pop
cli
sub
xor
jnp
aaa
sub
orl
jnp
repnz
xor
or
shrb
add
cli
fisttps
lcall
jnp
jp
aam
push
push
pop
call
push
pop
in
mov
jecxz
cld
xchg
jl
jo
dec
xchg
ret
stc
inc
cmp
or
pop
cmp
sbb
mov
lret
out
clc
jmp
xchg
and
mov
xchg
jmp
mov
js
popf
mov
sbb
popa
xor
out
insl
fcmovu
negb
call
or
mov
pop
cmp
ret
je
lea
cmp
gs
or
mov
fsubs
mov
fnstcw
jnp
mov
mov
call
into
jnp
pop
cmp
inc
mov
jnp
mov
xchg
or
sarl
daa
mov
fwait
ret
jne
cmp
or
cmp
stos
pop
mov
jae
or
jnp
cltd
lret
dec
pushf
push
jnp
sti
mov
mov
or
scas
lret
clc
sub
sti
shrl
insl
addr16
and
push
cmp
push
lock
js
sub
hlt
in
fbstp
outsb
fistl
cli
jne
and
mov
and
mov
mov
bound
mov
lock
mov
xchg
test
insb
outsl
jle
fstpt
es
mov
jnp
mov
add
jnp
xor
mov
jg
cltd
sbb
pusha
or
outsb
pop
cmp
out
sbb
std
movsb
data16
xor
mov
jb
sti
inc
dec
stos
xchg
add
xor
in
les
je
cli
jnp
mov
and
pop
xchg
jle
pop
mov
lods
icebp
push
xor
adc
push
xchg
call
sbb
cmp
sub
inc
jle
lods
cmpb
jecxz
divl
cs
jnp
inc
cmpsl
jae
ficoms
xlat
and
cmp
in
mov
ret
jno
push
push
movsl
jnp
imul
pop
ss
jnp
xchg
sub
in
mov
jmp
mov
cmp
pop
ret
jle
mov
popa
mov
test
icebp
sub
je
xor
mov
fisubrl
cltd
out
pop
jnp
mov
cmp
insb
cmp
push
and
mov
jbe
jnp
punpckldq
sub
mov
cmc
lret
push
sub
lret
jnp
js
mov
es
pop
jp
fwait
push
adc
jnp
out
lret
outsl
out
push
jnp
pop
cmp
ds
aam
mov
xor
jnp
mov
adcb
jnp
ljmp
dec
adc
sbb
jae
call
mov
aam
and
xor
dec
sbb
jns
mov
push
repnz
mov
push
cmc
imul
lret
movsb
push
sub
aad
jae
mov
xor
cmp
lret
push
mov
stos
sti
mov
push
es
sbb
lret
inc
mov
ret
aas
in
jnp
jp
cld
in
mov
pop
rorl
jne
add
adc
cmpsb
xor
psubsw
jns
jb
jo
mov
pop
mov
and
xchg
xchg
in
mov
lret
mov
mov
or
ss
jnp
mov
bound
mov
sbbb
mov
hlt
xor
xchg
cli
jnp
addr16
ret
jge
dec
daa
xchg
xor
clc
out
cmp
ret
ss
add
cmpsb
jnp
and
sbb
sti
lahf
mov
push
inc
cltd
dec
insb
in
fdivl
ret
xchg
add
pop
aaa
imul
xor
in
dec
and
shll
mov
fwait
mov
jnp
xchg
and
lock
leave
insb
sahf
mov
ror
dec
dec
es
jo
push
mov
sbb
mov
outsl
push
xchg
dec
sub
mov
fstpl
test
cmp
push
fdivrs
and
jnp
mov
ja
jnp
das
into
cmpsb
or
jns
mov
mov
cmp
cmp
mov
sbb
cmpsl
adc
xchg
test
jbe
lcall
inc
ret
push
sbb
add
jp
loop
mov
cmp
pusha
jnp
les
aaa
dec
sub
mov
cmp
jnp
insb
mov
int3
jb
mov
jmp
push
fisubl
cmp
and
aaa
cld
push
js
or
cmp
jnp
sub
sub
push
mov
xchg
test
loope
outsb
in
in
mov
sbb
jmp
and
ja
jnp
jbe
js
cli
lret
into
jns
clc
adc
movsb
mov
pop
dec
and
jmp
clc
sub
jbe
lret
fnstsw
dec
mov
int3
mul
mov
inc
int
or
nop
inc
jg
mov
test
lds
fwait
dec
cmp
jnp
in
stc
mov
in
js
xchg
jne
jnp
xor
imul
sub
fcmovne
cmpsl
scas
dec
push
lock
sbb
aas
test
mov
lods
test
jnp
push
sbb
push
adc
sti
addr16
pushf
mov
outsb
rcll
sub
das
negb
and
mov
pop
push
inc
insl
adc
jp
lret
ret
sub
mov
xor
aaa
sbb
int3
or
les
mov
addr16
imul
xchg
push
jnp
cld
es
gs
dec
js
imul
cwtl
xlat
insl
jnp
fwait
lcall
gs
push
or
jnp
dec
in
cmp
xchg
mov
dec
jmp
inc
test
jle
pop
cmp
mov
lods
add
test
xchg
jbe
jnp
fisttpl
pushf
enter
mov
inc
jnp
xchg
push
mov
jnp
in
mov
jae
cmc
or
ret
arpl
jnp
push
mov
mov
int
sub
jnp
dec
xchg
lods
loop
lea
push
cmpsb
jo
rorb
sbbb
jnp
mov
dec
mov
adc
sbb
aaa
pop
out
or
or
sub
cmp
in
repnz
nop
sbb
jnp
pop
xchg
sub
lods
scas
nop
xchg
jnp
into
mov
fdivrs
aaa
inc
cmp
lcall
jo
dec
xchg
imul
jb
xchg
jecxz
fdiv
xor
hlt
jmp
loopne
cld
pushf
aam
jae
test
jns
jnp
sahf
xchg
lret
int3
cli
sbb
fmuls
pop
cmpsl
dec
mov
fcomi
in
and
sti
pop
ret
jns
ret
adc
or
jnp
sub
pop
fdivrs
cmp
and
pop
cmp
stos
jp,pt
inc
jnp
mov
fs
xchg
dec
repnz
pop
jnp
clc
push
cli
jo
mov
jns
xor
fcomps
sub
mov
cmp
or
jae
xor
push
in
sub
mov
jnp
ret
call
stc
jnp
add
outsb
sub
xor
rorb
push
xor
xchg
lret
mov
mov
dec
lock
jnp
inc
jle
decb
mov
jnp
das
ret
leave
into
dec
sbb
mov
and
insl
arpl
enter
pop
clc
xchg
jnp
aad
or
cmp
ficompl
pop
bound
pop
push
dec
cmp
outsl
insl
mov
stos
inc
push
sub
mov
xchg
jae
cmp
mov
out
and
push
jno
insl
je
jnp
and
pop
lea
jge
test
inc
pop
or
dec
insl
or
mov
dec
fstpt
mov
in
sub
add
cmp
ficompl
in
insb
fldenv
jnp
cmp
scas
sti
push
cmpsl
pop
dec
enter
add
stos
or
jno
jecxz
sbb
fisubrl
push
push
scas
mulb
fidivrl
mov
lea
aas
adc
xchg
sub
and
mov
mov
jg
lret
imul
xchg
hlt
std
dec
xor
sub
add
lcall
sbb
add
in
mov
mov
cmp
repnz
xor
sub
jno
clc
data16
lods
mov
add
xchg
fiadds
mov
repnz
out
jnp
int3
jnp
xchg
adc
mov
lret
cli
push
sahf
adc
daa
jecxz
xor
popa
ds
js
les
sub
adc
dec
idivb
jnp
inc
out
push
shll
xor
es
xor
in
out
jnp
xor
jnp
cli
aad
xchg
jle
jnp
arpl
loopne
xchg
cmp
push
xchg
xchg
jne
bnd
sub
shlb
jnp
cmp
fnclex
xchg
jnp
sub
imul
subl
pop
mov
cmp
or
fcom
dec
inc
cwtl
push
inc
fiaddl
in
push
push
mov
dec
push
mov
mov
sti
bswap
jnp
jecxz
popf
and
movsb
jae
pop
rcrb
jbe
lret
jnp
in
push
sarb
mov
movsl
push
pop
jmp
pop
icebp
jp
push
or
jnp
mov
push
mov
fdivs
lret
pop
push
mov
sahf
jae
mov
inc
jnp
fistpl
sub
xchg
aad
add
in
mov
or
repnz
sti
ljmp
aaa
push
xchg
das
sub
loop
scas
ss
mov
ljmp
mov
in
push
out
lret
int
loop
jnp
mov
xchg
mov
jnp
and
test
scas
sub
aaa
push
es
fidivs
lahf
popa
jnp
clc
inc
jl
scas
pop
push
mov
aas
imul
out
inc
jae
lods
mov
lcall
pop
aaa
bound
cmp
pop
ss
xchg
adc
fnsave
xchg
jnp
insl
mov
add
mov
mov
ja
jnp
bound
sub
into
sub
jnp
push
repz
adc
clc
jnp
fiaddl
sub
jae
xor
shrb
mov
out
sub
outsb
cmpsb
mov
jnp
sahf
pop
push
mov
jbe
jle
ret
push
cmp
dec
push
dec
mov
fnstcw
push
jae
pop
push
test
cmpsl
jnp
arpl
push
cmp
imul
icebp
xchg
clc
out
adc
jnp
in
push
pop
lods
mov
ljmp
push
mov
sub
imul
pop
lret
push
js
das
jnp
or
shlb
lds
sti
xchg
add
int3
bnd
mov
lcall
repnz
out
loop
fwait
jnp
pushf
sbb
add
dec
mov
es
or
je
jnp
xor
dec
jnp
pop
sbb
mov
orb
xchg
jnp
fidivrl
add
cmp
mov
jle
outsb
loop
jnp
cmpsb
jmp
pop
cwtl
xchg
ret
or
cmp
clc
xchg
loopne
mov
mov
or
je
stos
imul
imulb
dec
adc
mov
lods
push
insb
insb
inc
lock
sub
mov
test
sub
jnp
lock
mov
idivb
jnp
ljmp
jp
dec
push
jmp
fs
testl
mov
jne
cmpsb
jns
clc
sbb
or
in
jae
sbb
or
sbb
popf
sub
imul
jnp
stos
mov
stos
xor
dec
sub
pop
repz
sub
out
lock
push
xlat
jb
dec
jnp
mov
push
or
add
dec
xchg
push
in
jns
pop
cmp
xor
in
jno
in
mov
pop
or
mov
sti
jnp
push
cli
cmp
mov
out
iret
clc
adc
mov
and
stos
mov
ja
jnp
push
mov
lods
mov
inc
repnz
push
dec
sbb
insl
sar
adc
inc
jb
jp
sbb
in
aaa
jnp
pop
cmp
jnp
test
mov
jnp
clc
sub
arpl
mov
lods
inc
insl
test
sub
jecxz
cmp
das
mov
xor
pop
test
jne
xchg
cmp
das
xor
lcall
xchg
ljmp
mov
outsl
out
jb
sub
aaa
subb
cwtl
push
test
or
cmp
outsl
jle
xlat
pop
dec
lret
mov
dec
or
or
jnp
fwait
cld
mov
or
inc
mov
add
xor
push
xor
sbb
and
or
iret
jnp
lcall
jnp
in
popa
das
nop
cmp
cli
xchg
addl
outsb
dec
xlat
and
mov
insb
mov
imul
int3
pop
insb
mov
aaa
jnp
stos
loopne
jb
inc
mov
enter
push
stos
mov
mov
cmp
cltd
pop
shrb
arpl
in
aad
pop
sub
pop
in
dec
insb
mov
jnp
call
sbb
add
out
xchg
jno
rclb
sbb
jae
adc
aas
and
cmp
dec
clc
xor
cmp
mov
adc
dec
addr16
sbb
clc
fisubrl
and
mov
mov
mov
mov
lea
sub
pop
fmuls
outsl
mov
and
push
jge
jo
repnz
jnp
sub
xchg
sbb
lret
fyl2x
or
pop
pop
jp
or
ud1
dec
mov
incb
aas
adc
cltd
hlt
sbb
push
cmp
movl
or
sti
jge
into
cmp
add
jnp
lahf
jle
repnz
loope
cld
in
in
lret
dec
jbe
out
adc
mov
fldt
add
aad
jnp
test
mov
popf
ret
jnp
subb
jl
xor
sbb
and
and
jnp
rorl
sbb
pushf
mov
cmp
inc
cs
mov
mov
ret
std
or
mov
jp
push
push
sbb
cmp
xchg
shlb
icebp
push
xor
out
insl
clc
call
jnp
xchg
xchg
push
sub
int
test
sub
pop
jnp
jmp
mov
dec
aam
cli
pop
pop
das
in
sbb
mov
mov
sub
sub
push
pop
and
push
aas
mov
js
rcrb
in
out
xchg
jb
push
enter
cmp
xor
push
jnp
pushf
pop
mov
sub
jnp
negb
jnp
adc
jnp
jge
and
or
jnp,pt
push
sarb
nop
into
mov
pop
lret
xchg
test
jnp
scas
cmpsb
clc
jge
sar
jnp
push
jno
xor
call
ljmp
push
mov
scas
jnp
out
pop
pop
imul
jnp
cli
aaa
push
jnp
mov
in
arpl
in
out
jo
ret
outsl
jnp
sbb
sub
xor
scas
or
cli
mov
ljmp
repnz
xor
in
loopne
mov
pop
je
jmp
cli
dec
aaa
dec
mov
aad
ret
cmp
jmp
mov
sub
js
mov
es
mov
test
insl
jnp
movsl
loop
std
cs
decl
fidivl
cmp
mulb
jmp
sbb
insl
insl
mov
or
or
in
int
or
push
jnp
mov
sub
jnp
push
dec
cli
push
ret
jnp
pop
lret
push
inc
inc
sub
dec
mov
jae
lds
sub
mov
jae
jge
sub
mov
push
jmp
in
not
mov
cmp
bound
mov
mov
cs
out
lcall
cmp
aaa
lret
dec
mov
inc
frstor
jnp
out
inc
jecxz
lret
mov
xlat
repz
pop
je
addr16
xor
idivl
ljmp
push
cmp
sti
inc
sbb
adc
fiaddl
xor
add
jg
popa
jnp
call
out
jnp
sti
mov
ss
cmp
sub
mov
sub
aaa
push
jbe
cli
test
in
push
mov
fidivl
inc
sub
mov
xchg
push
arpl
fwait
andl
cmpsb
in
mov
mov
clc
in
jnp
jne
mov
jnp
or
subl
dec
jnp
xor
repz
add
dec
jnp
in
push
call
mov
or
pop
lods
stos
lds
gs
rcl
sbb
mov
adc
pop
mov
call
cwtl
rclb
dec
repz
scas
rcrb
sub
mov
jge
and
sbb
mov
imul
jmp
sbb
lret
jp
nop
int3
xor
adc
daa
decb
leave
mov
mov
ss
stc
lock
dec
xchg
mov
sti
push
mov
jnp
adc
or
movsl
lods
mov
ljmp
fucomi
xchg
scas
jae
jp
jnp
lret
adc
iret
jnp
lea
outsb
in
cli
ja
xor
stos
mov
sub
sub
mov
sti
es
lods
pop
insl
pop
imul
cmp
ljmp
fs
xchg
fsubp
mov
dec
or
pop
xchg
mov
out
sti
hlt
mov
xchg
jns
xor
gs
push
adc
hlt
enter
pop
push
lods
cmp
aaa
gs
jnp
dec
mov
jnp
into
stos
and
inc
lods
cld
loop
and
imul
popf
inc
adc
dec
jmp
jmp
ret
jae
insl
leave
aad
jl
sub
inc
dec
dec
scas
repnz
lahf
je
jnp
cmp
adc
mov
inc
pop
lds
insl
inc
mov
test
repnz
mov
jae
cmp
mov
jno
jbe
aas
dec
cmc
jnp
sti
mov
call
mov
call
aam
dec
mov
lds
sbb
push
out
ja
jb
and
jnp
inc
jne
mulb
lret
xchg
xor
jnp
pusha
cwtl
daa
or
dec
sub
add
repnz
xchg
jae
and
sub
test
pushf
stc
push
jnp
mov
incb
cmpsb
jbe
test
test
jnp
ds
sub
pop
sbb
cmp
inc
jb
jnp
popf
mov
cmpsl
dec
cld
stc
imul
pop
mov
push
jnp
jl
scas
jbe
mov
js
fsubrs
ret
fwait
dec
aam
mov
jnp
icebp
int3
mov
lret
ja
notb
stos
jnp
push
or
mov
mov
sub
clc
dec
pop
or
push
jae
xchg
pop
add
xchg
jnp
loope
add
dec
jbe
sarl
iret
cwtl
lcall
mov
pop
jnp
fstpt
dec
repnz
cs
das
push
fwait
jne
aaa
lock
adc
shll
fdivrs
jnp
adc
xor
lcall
test
into
mov
jnp
mov
add
sbb
mov
dec
out
jnp
jne
add
inc
test
ljmp
out
inc
sub
dec
sbb
xchg
jp
stos
mov
add
sub
mov
insl
test
push
mov
test
cli
lret
jnp
cltd
sbb
leave
bound
pop
dec
imul
jae
dec
rorb
inc
xor
mov
jnp
movsb
xor
push
push
insl
or
lret
mov
sbb
addr16
xor
xchg
jnp
cmp
cmc
xor
sahf
in
lods
push
jnp
out
es
sbb
xor
dec
std
mov
out
insl
cmc
sbb
pop
push
cli
ja
cmp
pop
sub
pop
jp
in
dec
icebp
xchg
dec
jnp
inc
sbb
pop
mov
ret
push
cli
lret
lahf
ljmp
ja,pt
rcl
scas
sbb
xchg
jnp
cmp
call
mov
mov
shlb
popf
cwtl
cmp
inc
jnp
jge
mov
jnp
push
clc
cld
cmp
jl
pop
sbb
sub
xor
popa
mov
scas
cmp
test
jnp
sub
lret
mov
insb
or
fldl
insl
int3
jle
jnp
sub
std
decb
push
out
jmp
or
sub
aas
stos
gs
sbb
rolb
adc
call
or
lret
pusha
dec
add
xor
xchg
jno
fsubr
sbb
xchg
movsb
jnp
jp
lods
inc
jnp
pop
lods
in
lret
in
push
jnp
push
fimull
sub
imul
enter
insl
lds
jnp
out
insl
dec
pop
adc
push
cmp
mov
leave
mov
in
fcompl
cmpl
aas
adcb
pop
dec
lret
filds
xchg
jnp
enter
push
xchg
mov
ljmp
dec
jnp
in
or
pop
js
sbb
sarb
fnstsw
outsl
cmp
mov
stos
mov
aas
sti
xchg
jmp
sbb
xorb
stc
sti
incb
mov
push
data16
pop
mov
iret
dec
ret
or
jae
enter
fnstsw
mov
adc
and
insl
or
mov
insb
jnp
sbb
mov
dec
xor
movsl
gs
pop
sti
pop
jnp
mov
cli
sub
mov
cmp
outsl
xor
mov
pop
xchg
fwait
cmc
imul
sbb
mov
iret
das
bound
xchg
jnp
movsl
leave
cli
test
fldt
stos
mov
cmp
sub
xchg
and
xor
mov
dec
cli
jb
dec
ret
and
lcall
shll
adc
dec
es
or
icebp
pop
push
in
das
jmp
add
push
or
or
ret
imulb
jns
mov
cli
or
lret
or
or
cmp
pushf
inc
lahf
sbb
lods
jnp
and
scas
xchg
cli
imul
in
dec
xor
bound
cmp
sbb
xlat
dec
test
mov
sbb
pop
jmp
loopne
jae
cmc
fcoms
mov
jp
push
lea
cmp
mov
aad
jnp
mov
cmp
cmp
into
xchg
das
repnz
das
pushf
dec
int
cmpsb
mov
push
aaa
lahf
sbb
adc
mov
dec
push
pop
or
into
jnp
fisubrs
jb
or
das
jge
jnp
cmp
scas
sub
or
or
clc
mov
dec
cmpsb
insl
mov
mov
ja
lcall
lock
sbb
nop
jle
ja
adc
and
add
fwait
push
lret
mov
jle
mov
lea
push
pop
jnp
dec
into
dec
popf
cmp
dec
inc
jnp
repz
sbb
jne,pt
jnp
or
xchg
mov
rcrb
fnstsw
loopne
adc
mov
mov
stc
mov
ss
or
outsl
fsts
mov
loop
jbe
mov
mov
sti
je
pushf
jnp
insl
lods
push
lds
cwtl
jmp
cltd
add
aad
sub
xchg
jae
cmp
jnp
je
mov
or
fidivrl
push
sbbl
push
or
lcall
or
push
sub
cmp
sbb
testb
jge
insb
sub
imul
dec
adc
jecxz
jnp
movsl
mov
hlt
jnp
sub
adc
xchg
mov
mov
xor
je
lods
outsl
lods
repnz
jnp
insl
mov
push
sarl
dec
or
mov
stos
jnp
aaa
mov
mov
sub
cmp
or
push
push
out
mov
in
mov
pushf
les
jo
fcmovnb
test
cmp
int
dec
cs
xchg
ds
jnp
scas
test
faddl
lcall
jnp
cmp
aad
pop
cmp
inc
test
stos
mov
sub
pop
testl
xor
insb
test
jnp
bound
stc
call
sahf
jnp
cmp
aam
jnp
pop
test
rcll
aam
sbb
sbb
xlat
add
mov
jnp
test
adc
ret
jg
repnz
push
or
in
and
jnp
xor
dec
ss
mov
stc
ss
xchg
push
jnp
aas
in
hlt
jns
mov
orl
xchg
jnp
jge
lock
sahf
dec
push
dec
lods
les
mov
loope
sbbl
sub
pushf
adc
jnp
imul
jnp
fwait
add
lcall
stc
or
lea
pusha
or
jno
stos
dec
jnp
stc
stos
push
test
mov
jnp
mov
clc
into
cmp
mov
out
movsb
aad
or
sub
cs
xorb
xchg
es
repnz
mov
xorb
sub
clc
icebp
add
ss
pop
scas
jl
fwait
mov
hlt
jnp
sahf
iret
insb
das
inc
test
cmp
or
mov
pop
aaa
outsb
bnd
sub
jnp
ret
notb
mov
sbb
jp
dec
fnstsw
fs
sti
sbb
mov
sub
ljmp
mov
jmp
jne
push
jnp
call
mov
stc
jmp
push
mov
jae
mov
mov
jecxz
imul
out
add
ret
sub
jnp
cmc
cwtl
call
jnp
in
and
dec
ret
cmp
sub
or
loop
add
int
ret
mov
cmc
fcmovnbe
dec
and
js
sti
popf
insb
xorl
dec
sbb
inc
jmp
scas
sbb
push
fnstenv
sti
test
adc
js
adc
and
cmp
jns
int3
or
sbb
iret
testl
mov
inc
jnp
push
loop
lock
and
pop
out
or
imul
daa
dec
stos
fidivrs
push
mov
lods
outsl
mov
dec
mov
aad
jge
inc
lahf
mov
pop
cmpsb
sbb
sub
sbb
cmp
dec
mov
out
xor
fs
cmpsb
push
jmp
lret
xor
stos
jnp
dec
outsb
scas
bound
clc
or
pop
faddl
mov
xchg
dec
imul
cli
shrb
adc
fidivl
push
cmp
push
jnp
push
mov
ret
adc
pusha
sbb
jnp
xor
mov
jnp
scas
and
lcall
xor
test
jno
stc
call
popf
mov
ss
fstpt
hlt
add
imul
dec
jne
test
in
inc
push
cmp
movsl
sbb
lret
jnp
xlat
imul
jae
mov
inc
xor
cmp
stos
mov
mov
nop
add
jp
inc
into
mov
das
mov
xchg
imul
mov
test
iret
pop
jne
mov
sarb
data16
in
int3
mov
jnp
rcll
test
inc
mov
xchg
xchg
and
xchg
out
sbb
mov
mov
popa
jp
mov
jns
or
cli
outsb
imul
cmp
ss
pop
dec
xorb
jae
jp
movsl
pop
mov
stc
in
cmp
and
ja
dec
mov
jmp
dec
fsts
adc
add
jecxz
out
fmull
jnp
aaa
mov
movsl
push
call
hlt
mov
push
fdivrs
in
lods
xor
imul
xchg
add
jb
jnp
mov
in
pop
inc
xor
adc
jnp
aam
test
cmp
jp
jo
cli
imul
mov
sti
cmpsl
jnp
ljmp
lods
adc
sahf
push
shrl
jmp
sbb
sbb
sbb
mov
aas
enter
stos
pushf
adc
fdivrl
sahf
lods
cltd
inc
push
je
or
and
imul
lret
stos
jae
scas
fildl
outsl
jnp
in
dec
add
jae
jnp
not
cli
dec
cmp
dec
or
fisubrl
add
out
sahf
repnz
sbb
xchg
pop
or
fisttpl
xchg
stos
push
pop
cmpsb
aam
pop
mov
fnstsw
data16
mov
out
das
or
jnp
cmp
jnp
imul
cli
mov
jnp
sarl
or
aas
enter
rclb
xchg
sbb
jnp
addr16
icebp
dec
enter
outsl
mov
sub
fstpt
sahf
aas
rol
add
icebp
xchg
dec
ds
mov
or
fdivs
xor
cli
fidivrs
xlat
clc
mov
jecxz
and
icebp
popf
and
mov
negl
sbb
jbe
xchg
bound
out
cmp
xor
xor
fwait
inc
sbb
fnstcw
aaa
dec
xor
repnz
into
xchg
mov
add
jnp
push
fdivs
mov
loope
stos
pusha
in
scas
fwait
outsl
add
in
lods
jnp
cwtl
sbb
mov
nop
mov
and
jae
push
cmp
xchg
inc
jnp
movsb
push
fidivl
sbb
clc
jp
imul
stc
jns
enter
test
mul
mov
jmp
mov
movsb
push
mov
push
jnp
dec
cmc
les
jns
cli
and
out
mov
push
outsl
jle
sarl
dec
out
push
fstpt
dec
dec
test
sbb
and
sarl
xlat
sbb
pop
subb
and
lea
lods
lods
mov
in
and
mov
mov
mov
or
push
mul
lods
jnp
sub
jecxz
dec
test
scas
jp
jnp
outsl
stos
cmc
xor
jnp
jg
lret
lods
mov
lahf
jnp
addr16
popa
sub
or
mov
out
pop
scas
dec
mov
movsb
out
hlt
or
mov
imul
outsl
cli
out
fstpt
jb
leave
push
sahf
add
fwait
mov
xor
and
cli
loop
jns
sbb
ret
or
cmp
sub
mov
cmp
sti
xor
lods
mov
ljmp
jnp
in
push
iret
sbb
stos
xchg
inc
jnp
pop
icebp
lock
bound
imul
ret
lret
jge
jnp
lahf
mov
jae
xchg
in
jnp
data16
jnp
lcall
dec
pop
jnp
iret
je
pop
dec
loopne
jnp
xor
bound
popf
mov
test
dec
lret
cli
es
jae
sub
push
popf
mov
sti
mov
adc
and
cvtps2pi
mov
and
jnp
mov
push
sbb
pop
fsub
jnp
in
and
jno
pop
enter
adc
jnp,pn
mov
or
xor
sub
lret
xor
stos
cs
mov
js
mov
xchg
or
js
idiv
insl
mov
gs
xchg
inc
inc
dec
addr16
stos
mov
je
and
push
nop
dec
inc
cmp
inc
or
jnp
mov
cli
xchg
cs
sbb
outsl
sti
pop
lock
ja
mov
or
icebp
jnp
jno
out
out
pop
push
imul
cmpsl
cmp
push
pop
je
loopne
lea
jle
in
inc
jnp
and
jne
jnp
ficompl
dec
sbb
jnp
cwtl
repnz
call
imul
hlt
stos
lods
sub
lret
test
xchg
jnp
iret
out
xor
cmc
jnp
imul
ss
outsb
mov
mov
fcmovbe
stos
sub
es
adc
sarl
mov
iret
mov
push
jnp
xchg
pop
sti
jb
in
scas
or
xchg
xorb
jnp
xor
movsb
mov
lret
or
cli
jae
mov
sub
movsl
cmp
jnp
xchg
or
push
int
dec
shll
sbb
cmp
and
jb
jns
bound
jnp
aaa
cmpsl
aad
or
divl
pushf
js
push
dec
xor
sub
sbb
mov
js
es
pop
stos
sahf
xor
cmp
fidivrl
adc
or
mov
iret
test
mov
jb
adc
sbb
imul
jnp
sub
cmp
jmp
push
clc
xor
ss
and
gs
jp
jnp
xor
mov
ss
scas
jnp
pop
ljmp
cmpb
jmp
sub
jnp
mov
or
sbb
jp
cmp
je
jnp
rorb
lcall
jnp
pushf
push
idivl
mov
pop
outsb
cmp
push
xchg
mov
jnp
lods
mov
sub
imul
xchg
lods
insl
aad
lods
outsl
mov
mov
outsl
jmp
call
in
cmpsb
mov
outsl
es
inc
sub
pop
jnp
mov
pushf
mov
jno
adc
sti
iret
sub
push
mov
jnp
in
insb
es
sub
enter
lahf
sub
int3
pop
jnp
sub
mov
in
fists
cmc
push
xchg
jnp
aad
in
je
sbb
fdivr
ds
jnp
sbb
ja
lcall
cwtl
fdivrp
stos
push
jnp
sub
jmp
jnp
sub
mov
ja
pop
imull
sti
pop
pushf
cmp
js
or
cwtl
in
jge
mov
dec
hlt
jne
out
mov
sbb
ja
idivl
mov
xchg
sub
sarb
inc
mov
inc
out
leave
jnp
xor
daa
shr
outsb
in
imul
mov
outsb
and
int3
in
sbb
movl
loop
jbe
dec
clc
sti
add
shlb
adc
pop
mov
repnz
xchg
dec
or
ficoml
push
jno
sub
insb
mov
sbb
dec
add
gs
call
imul
pop
or
aaa
lods
js
and
pop
jnp
mov
out
in
movsl
ljmp
outsl
mov
sbb
aad
xchg
inc
mov
lahf
pop
mov
pop
push
mov
or
sahf
push
jp
pop
sub
pop
jge
in
push
test
jnp
mov
pop
adc
sbb
mov
out
mov
dec
jno
hlt
mov
aaa
aad
sbb
fldt
jae
nop
and
leave
jnp
es
stos
push
divb
fisttpl
adc
mov
push
rolb
add
or
lahf
movsb
stos
stc
mov
aad
xor
adc
icebp
lods
das
jnp
mov
mov
sbb
clc
mov
or
mov
sti
pop
sub
jo
pop
or
pop
scas
push
jnp
mov
sbb
enter
mov
add
movl
repz
jnp
popa
xchg
adc
xchg
xor
jnp
mov
inc
mov
movsl
in
add
push
mov
movsb
sbb
cmpsb
pop
jnp
xchg
testb
es
cwtl
xlat
cltd
cmp
cmp
mov
and
je
or
add
adc
dec
clc
rcll
add
xor
mov
nop
pop
in
pop
or
test
leave
mov
popf
je
jnp
movsb
inc
test
call
in
cmc
xchg
hlt
int
sub
xor
xchg
push
sarb
mov
or
xchg
pop
pop
and
mov
mov
dec
test
mov
insb
mov
sub
lods
sahf
xor
hlt
lds
jae
adc
pop
adc
push
shrb
stc
pop
inc
sbb
clc
sub
adc
jnp
inc
push
fmuls
inc
cmp
dec
sub
aad
dec
or
lcall
in
inc
sarb
mov
pusha
cmp
mov
fcom
jnp
xchg
cmp
mov
jnp
mov
in
imul
and
xchg
cmp
add
test
sbb
dec
mov
mov
mov
data16
sbb
into
pop
leave
xchg
js
xchg
jg
cmp
dec
mov
and
aaa
xor
stc
pop
addr16
jne
or
aaa
sub
jnp
fistps
inc
sbb
sarb
mov
sbb
stos
push
inc
dec
inc
mov
jne
xor
jp
clc
sub
jo
jecxz
cld
call
mov
cwtl
and
fsubrs
cmp
mov
jge
in
cmp
stc
adc
jnp
je
dec
bound
adcl
jns
divl
jno
xor
je
cmp
mov
sub
fcompl
fs
lahf
xchg
ret
lret
cmp
das
stos
movsl
std
jb
or
xchg
jnp
sub
mov
jnp
mov
cmp
pop
add
pop
lcall
xor
es
adcl
lock
test
icebp
cmp
mov
jnp
ljmp
jnp
les
jnp
in
call
adc
cmp
arpl
idiv
in
mov
ss
cltd
lcall
hlt
mov
mov
pusha
or
xchg
push
imul
lret
sub
mov
jns
cmp
shr
in
es
dec
cli
mov
call
stos
jnp
sti
ret
and
mov
add
nop
test
icebp
or
into
sahf
jno
jae
sbb
jnp
lods
jp
mov
xchg
mov
sub
inc
xacquire
ja
and
sub
pop
insb
loope
dec
jle
test
dec
sub
inc
lret
cmc
mov
fnstsw
jl
ficompl
les
jp
pop
inc
out
xlat
lds
mov
push
and
sbb
gs
mov
addr16
sub
jbe
or
jnp
out
mov
adc
in
inc
in
mov
outsl
cmpsb
cmp
test
pop
je
inc
fwait
in
pop
adcb
loop
data16
xor
cltd
jnp
jbe
pop
pop
dec
mov
mov
pop
push
sbb
in
jae
xchg
and
lds
push
test
gs
insb
jns
cmp
and
pusha
jo
push
cli
cmp
rcll
or
std
jl
js
jnp
out
jne
inc
push
hlt
push
jmp
jp
sbb
cmp
sarb
xor
jo
sbbl
scas
sti
pop
jnp
or
fs
add
or
jb
clc
xlat
sbb
fadd
fmull
mov
mull
out
mulb
sbb
dec
addr16
pop
dec
xor
aad
rcrl
hlt
in
js
insb
stos
idiv
sub
add
sbb
bound
out
ja
mov
xor
shl
stos
into
outsl
call
outsl
xchg
gs
mov
shlb
or
jnp
sub
cwtl
sbb
fstpl
arpl
pusha
sbb
pop
cltd
mov
mov
movsb
arpl
cs
int
inc
push
sbb
leave
sub
ja
mov
xor
dec
jne
add
mov
lods
repnz
int
repz
and
enter
shll
jecxz
jnp
or
mov
mov
fadds
xor
xchg
pop
dec
imulb
jns,pn
out
dec
js
inc
push
jo
fdivrl
xchg
sbb
jbe
sbb
cmpb
or
ljmp
sbb
data16
inc
mov
cmp
xchg
lock
jbe
xchg
pusha
sub
fldenv
inc
mov
xchg
jnp
jne
xor
jnp
fwait
mov
cmpl
movsb
mov
in
jno
sub
jnp
sub
sbb
cmp
fldt
jmp
ss
das
adc
cmp
jns
lea
dec
fidivl
sbb
fdivrs
testb
clc
mov
roll
add
jae
std
mov
adc
cwtl
jae
sub
lret
jns
outsl
inc
xchg
sub
lods
dec
in
jp
push
outsl
scas
mov
and
inc
int
push
jae
ljmp
imul
adcl
mov
jp
ljmp
iret
push
shl
aam
cmc
jnp
lahf
cmp
jg
jnp
push
lds
into
out
inc
dec
pop
movsb
jno
fisubrl
jo
or
in
jnp
pop
call
jb
jnp
and
sbb
jnp
sti
xchg
sub
dec
out
sbb
movsl
je
jnp
out
ljmp
jae
inc
cmp
push
jnp
xor
repnz
adc
sahf
sbb
jbe
sbb
jae
and
aam
dec
jl
cmp
xorb
jnp
cmp
push
pop
out
adc
mov
xchg
movsl
sarl
subl
and
popf
lea
frstor
ja
cmpsb
and
mov
imul
das
push
sub
jnp
or
loopne
arpl
sbb
or
jnp
shr
popf
cli
mov
jecxz
pop
hlt
pushf
ja
fidivl
fwait
jnp
xor
mov
adc
in
gs
and
fdivrs
lret
mov
clc
jns
or
sti
insl
pop
cmp
idivb
dec
lock
mov
je
and
jbe
insl
cld
add
mov
inc
cmp
test
cmp
aam
lcall
test
xchg
add
xorb
jnp
iret
cmp
cmp
mov
xor
movsl
call
jnp
mov
and
add
insl
cmp
push
xor
push
rorb
pop
sub
and
fdivrs
cmp
shll
imull
faddl
sub
push
and
pop
daa
je
dec
stos
dec
sbb
cs
push
into
fldcw
sub
fisubrs
jae
cmc
mov
mov
xchg
sub
jecxz
out
cmp
push
sub
cmp
cmp
test
ret
stos
subl
mov
lret
jno
mov
push
mov
or
in
pop
aad
mov
or
push
mov
cmp
and
sbb
xchg
jg
jae
scas
fdivl
jnp
stc
xlat
mov
sub
jne
je
and
cmp
xor
jo
nop
jnp
xchg
icebp
test
mov
ret
aad
adc
outsl
push
adc
in
dec
aad
lock
adc
jnp
sha1nexte
mov
fsub
shrb
jnp
mov
sbb
enter
dec
pop
fcom
cltd
and
sbb
inc
cld
dec
hlt
outsl
movsb
pop
jns
inc
js
push
cmc
out
jnp
mov
sub
jne
mov
cmpsl
out
jb
insl
in
lods
jnp
in
and
lods
in
mov
imul
outsb
mov
sbb
sbb
jns
jae
mov
repz
or
or
or
or
add
add
add
add
add
add
jbe
pop
cmp
mov
clc
sti
mov
mov
hlt
and
jo
in
mov
das
xor
imull
in
xlat
jae
cli
mov
nop
jne
mov
mov
sub
jnp
divl
push
aaa
mulb
dec
jb
addb
jnp
enter
and
clc
push
mov
and
orl
sub
cmp
pop
stc
out
pop
nop
scas
fadds
mov
cmp
jmp
or
sub
test
jp
lret
jnp
mov
sub
divl
mov
lods
mov
cmpb
scas
xor
jnp
mov
sbb
scas
shlb
jp
pop
enter
pop
jb
cs
adc
stc
jnp
xchg
push
xor
addr16
cmpsb
outsl
pop
dec
or
sub
mov
std
push
repnz
jge
xor
or
xor
in
jae
jae
ficompl
sub
jb
lahf
arpl
cmpsb
packssdw
xchg
xor
stc
leave
or
hlt
int
cmp
jae
fs
jnp
loop
adcb
push
xchg
mov
cmp
lahf
push
pop
je
jmp
lcall
sbb
cmpsl
in
test
push
jnp
data16
ljmp
test
mov
inc
hlt
loop
xor
jp
out
pop
sub
div
scas
jnp
les
xor
test
adc
rorb
mov
pop
xor
mov
aad
jnp
push
dec
inc
imulb
lds
mov
js
dec
cmp
jne
nop
lret
lods
ret
jae
je
push
sarb
sbb
jns
pop
daa
jnp
cltd
repnz
mov
clc
cmp
ss
stos
pop
mov
jnp
repz
das
jnp
pop
mul
mov
fs
mov
cmp
pop
mov
xchg
insb
jnp
mov
jb
jnp
fadd
mov
xor
aaa
cltd
test
or
xor
mov
out
aam
push
xor
idivb
in
stc
das
inc
xchg
mov
sahf
mov
and
out
inc
in
jbe
jnp
xor
add
fdiv
jnp
insb
lock
scas
rsm
addr16
dec
jae
sub
mov
jecxz
and
shlb
lcall
mov
push
mov
inc
sti
or
sbb
out
jg
push
inc
insl
jmp
bound
js
cwtl
pop
addr16
in
and
cmp
push
sub
xchg
insl
lcall
fwait
cmp
les
lea
push
pusha
push
in
add
insl
stc
int
ss
in
push
jae
imul
insb
sbb
jns
les
jnp
xchg
scas
pop
push
int3
rol
int
add
fwait
sub
jo
add
js
das
or
mov
aaa
scas
jp
sub
mov
cld
jp
jns
les
ja
outsb
arpl
mov
out
outsb
into
jnp
fisttpl
fcmovbe
adc
jno
in
push
sub
jae
dec
stc
push
and
lret
dec
xor
mov
xor
adc
push
outsb
mov
xchg
ja
xor
repnz
jno
ja
xchg
xor
data16
out
mov
std
fdivrp
in
mov
xor
xor
push
sbb
lret
and
sub
mov
mov
xchg
cmp
pop
dec
cmp
jns
jb
testl
icebp
cmp
sbb
out
std
cmp
pop
jp
dec
idiv
cmp
ja
pushf
pop
xor
cmpl
jmp
repz
sub
clc
stc
add
imul
pop
loop
pop
idivb
fs
push
push
lahf
mov
aaa
imull
fildll
pop
xor
jl
jns
pop
ja
mov
mov
mov
sti
cmp
movsb
mov
arpl
inc
mov
jl
ja
mov
aaa
mov
shll
push
xor
adc
dec
jnp
pop
pop
jno
cmp
sub
pop
jge
scas
testl
jnp
test
adc
std
or
mov
in
push
jmp
push
and
filds
sub
jns
cmp
cmpb
xchg
and
add
loopne
xlat
xor
adc
repz
incl
add
lods
jbe
sub
inc
stos
call
and
leave
cmp
and
outsl
jnp
mov
call
dec
cld
shlb
mov
ret
adc
sarb
dec
movsl
ja
imul
jnp
sarb
push
xor
add
sbb
shrl
orl
pop
add
scas
mov
mov
icebp
and
hlt
cmp
xor
imulb
cli
xchg
jnp
mov
adc
jbe
repnz
jnp
in
cs
inc
aaa
je
stos
cmpsl
and
inc
rcrl
aam
ret
mov
push
mov
xor
ss
cmp
movsl
mov
cmpsl
or
pop
inc
jnp
xor
cmp
xchg
mov
sbb
ret
or
push
cmp
aaa
stos
and
lock
ljmp
jnp
push
jmp
sbb
cmp
xlat
jnp
ret
enter
mov
xchg
mov
stc
sbb
lahf
pop
or
arpl
mov
aaa
sbb
sti
sub
jnp
pop
inc
jo
insb
sbb
lcall
jecxz
sti
roll
sahf
jnp
xor
stos
imul
lock
and
jae
mov
and
call
dec
fsubs
inc
xlat
jmp
out
ret
jnp
mov
jp
stos
dec
and
adc
cmp
ljmp
xlat
or
in
jnp
sarb
addr16
lret
mov
imul
pop
ss
subl
jnp
xorb
fisubrl
mov
test
xor
imulb
mov
push
insb
sub
shlb
stos
imul
dec
or
dec
insl
or
and
jne
outsl
lock
push
dec
xor
jnp
or
push
imul
mov
mov
enter
test
xor
mov
jnp
sbb
jns
inc
and
outsl
cmp
add
pop
inc
jns
pop
adc
fwait
inc
repz
sbb
in
test
in
mov
inc
add
ror
jnp
sarb
xor
mov
int3
mov
mov
outsb
jns
inc
mov
je
movsb
xchg
pop
imul
xor
jnp
repnz
inc
xor
dec
adc
jno
sub
out
sub
enter
arpl
dec
in
jnp
fs
mov
enter
xorl
pop
addr16
sti
push
push
inc
or
testb
cmp
not
mov
xchg
in
or
jmp
and
and
aad
dec
mov
clc
xor
add
pop
sub
sbb
pusha
jmp
mulb
push
mov
xchg
aam
cmpsb
sub
xor
and
add
jo
call
rolb
stos
jne
sub
jnp
lods
call
mov
push
stos
and
int
mov
daa
and
jnp
push
frstor
lock
scas
pop
push
sub
test
and
mov
jnp
negb
int
jnp
sahf
jg
ljmp
ret
mov
jnp
jle
lea
idiv
cmp
sub
bound
mov
push
shlb
leave
mov
or
aaa
sbb
push
xlat
jnp
imulb
jb
sarl
inc
inc
lcall
push
stos
mov
cmp
sub
xor
leave
lret
cld
sti
imul
popf
cmp
jg
add
cmp
popf
jnp
push
mov
push
lahf
imul
cmp
nop
sbb
sahf
aam
pop
dec
sbb
sbb
sub
cmp
dec
jnp
stos
jns
imul
sub
mov
loopne
xor
sub
sub
sub
sub
pop
sbb
sub
and
mov
les
aad
icebp
fisttpll
mov
fstenv
or
push
clc
jne
jnp
leave
push
arpl
imul
add
cld
ja
cli
stc
pop
dec
mov
xchg
fldcw
andb
jle
jl
pop
and
jnp
sbb
jmp
pop
adc
pushf
xchg
sbb
fcomps
sub
in
pop
jnp
mov
xchg
jnp
mov
push
sbb
push
push
and
inc
xchg
shl
aam
xor
adc
adc
je
clc
jp
jnp
fsubrs
adc
or
pop
add
cld
xchg
sub
mov
mov
xchg
andb
cmp
sbb
test
les
pushf
outsb
sbb
jnp
pop
call
lahf
jnp
sbb
pushf
scas
sbb
jne
stc
dec
push
fucomi
pop
mov
pushf
into
sub
dec
jnp
imul
adc
mov
jnp
mov
add
dec
sub
or
push
or
sbb
sub
jnp
sahf
sbb
pop
lahf
push
sbb
daa
pushf
mov
mov
mov
pop
scas
loop
dec
fmul
mov
aad
cmc
cltd
ja
push
aam
mov
dec
pop
or
aas
adc
adc
fisttpl
add
lahf
jae
rcll
or
inc
insb
mov
sbb
cmp
jno
jp
sti
mov
xchg
aam
imul
push
jle
jl
out
adc
sub
push
sahf
xor
inc
subb
in
push
loop
adc
jnp
pop
int3
lahf
jl
and
aam
jnp
adc
repnz
and
push
orb
test
sub
xchg
sbb
push
in
add
fsubrp
das
sub
pop
lods
pop
pop
aad
cmc
jae
test
leave
push
dec
pop
jne
xchg
incl
xor
inc
adc
mov
ret
xchg
mov
inc
lods
xor
adc
jo
mov
jo
sub
in
call
lods
xor
in
subl
fistps
cmp
jnp
cmp
cmp
sbb
cmp
aaa
add
fbstp
insl
repz
dec
pop
xlat
cmp
adc
cmp
stc
pop
daa
add
pusha
xor
adc
hlt
jno
cs
adc
adc
jnp
mov
clc
rcrb
sarl
mov
sub
jnp
les
lock
mov
leave
adc
adc
mov
add
cld
adc
mov
mov
or
add
push
jne
mov
push
mov
sub
in
mov
fbstp
lock
outsl
aas
jnp
add
cmpb
mov
nop
je
cmp
imul
dec
arpl
lods
mov
ret
sbb
pop
jnp
jmp
fisubl
xor
sbb
dec
shrl
mov
pop
sbb
cmc
je
fnstcw
pop
push
jne
push
iret
lods
scas
in
mov
imul
mov
push
dec
jne
push
push
xlat
mov
xchg
xorl
sbb
arpl
or
mov
xchg
movsb
push
popa
jnp
sub
scas
lahf
repnz
imul
lods
xchg
in
mov
js
fstps
pop
ret
fildl
inc
cld
or
icebp
jmp
sbb
in
xor
stc
adc
mov
lods
and
jmp
dec
add
fwait
xor
aad
xchg
cmc
pop
xchg
stc
mov
push
movsb
in
sbb
shlb
cmp
shl
cmp
mov
pop
inc
push
jnp
mov
xchg
cmpsb
lea
lock
aad
cmc
pop
xchg
movsb
mov
and
push
adc
sub
mov
or
test
jnp
jns
imul
outsl
sbb
in
lcall
jnp
pop
jns
jnp
arpl
adc
or
add
fdivrp
sub
jl
dec
cmc
jnp
sub
pop
fs
cmc
jnp
mov
jne
xor
repnz
jl
and
in
adc
xor
push
jnp
test
sbb
repz
mov
lcall
in
mov
shl
fwait
leave
push
push
jns
in
mov
negl
je
iret
jno
outsb
scas
cmc
cmp
jnp
scas
pop
push
xor
jp
hlt
in
jae
lock
jo
icebp
in
jnp
lods
out
insl
outsb
rcll
in
pop
push
in
js
cli
mov
pop
sti
dec
arpl
mov
ja
je
xor
jb
js,pn
inc
mov
add
jmp
aad
mov
jbe
aaa
mov
push
mov
imul
pop
xor
in
jne
jmp
pop
or
fiadds
jae
jo
cmp
dec
jo
pop
sbb
dec
push
add
add
hlt
aam
xor
adc
adc
adc
pop
sub
bnd
dec
mov
aad
push
xchg
cmp
ja
pop
out
cmp
jnp
std
in
sub
into
arpl
jg
loope
jo
or
das
cmp
dec
pop
pop
xor
into
lcall
pop
inc
gs
out
sbb
add
dec
jg
outsl
mov
fbld
lcall
push
insb
jnp
cmp
outsb
cmc
aaa
or
fnstsw
dec
jg
ret
insl
shrb
and
and
cs
pushf
sub
push
test
pop
icebp
push
in
in
mov
cmp
mov
in
xchg
jg
sti
sarl
jp
shll
repz
hlt
add
sub
lock
jnp
cmp
xlat
sub
in
jnp
fidivrl
andb
sarb
lret
stos
push
ss
sbb
mov
fwait
hlt
adc
jnp
mov
out
ficompl
mov
sub
clc
ljmp
and
cmp
enter
xchg
jno
jecxz
jnp
add
adc
or
sub
mov
fstpt
fmulp
imul
call
ljmp
mov
stos
jb
jp
xlat
mov
or
push
test
cli
mov
jns
mov
jmp
mov
daa
shl
jnp
add
imul
popf
or
sti
adc
xchg
pop
stos
loope
or
pop
mov
inc
dec
cmc
jle
in
pop
xchg
jnp
mov
sahf
cli
jp
sbb
lock
aaa
mov
add
xor
push
or
lret
sbb
cmpsb
mov
mov
ljmp
adc
pop
fisubl
add
jnp
push
inc
pop
dec
cs
jle
mov
mov
pop
or
push
sub
outsl
sbb
pop
xor
lcall
jae
push
pop
shlb
inc
sbb
sarl
jp
std
sub
fdivrl
mov
sbbl
mov
jnp
xor
cmp
imul
xor
cmpsl
mov
lahf
lods
cmpsb
sub
std
dec
mov
cltd
outsb
das
cwtl
mov
sti
or
daa
aad
pushf
or
sub
jnp
stos
fisttpll
mov
int
push
sbb
cmp
pop
fldpi
sub
ljmp
jb
mov
jnp
je
scas
nop
sub
mov
mov
jnp
sub
sub
cmp
xor
sub
cs
scas
dec
jns
mov
lret
xlat
cltd
jnp
dec
mov
sarb
fildll
movsl
mov
and
repnz
xor
sbb
leave
pop
dec
ja
or
ja
push
out
sub
lock
jp
ljmp
jnp
lret
and
sub
lahf
scas
cs
mov
or
jp
stos
int3
dec
dec
pop
aaa
mov
mov
in
ds
cmp
inc
mov
or
enter
mov
jnp
cmpsb
lret
sub
cmp
xor
sub
scas
dec
jnp
cmp
sbb
test
cs
fildll
popa
imul
mov
dec
or
lret
mov
negb
mov
call
jnp
push
jo
mov
or
js
sub
jno
imul
sbb
sub
fsubrs
or
insb
outsb
mov
enter
mov
aas
xor
jnp
js
aaa
adc
jnp
mov
shl
fisttpll
inc
pusha
jb
sahf
insb
sbb
dec
or
clc
jne
dec
push
daa
test
mov
cmp
scas
js
adcb
repnz
lret
pop
aaa
sti
jp
jnp
mov
ljmp
xor
cwtl
dec
icebp
jnp
hlt
outsl
lahf
int3
shll
mov
stc
stos
out
clc
jge
jnp
fidivl
lret
mov
sti
sbb
adc
jp
out
sub
or
mov
ret
lcall
and
js
in
jnp
es
scas
add
daa
xchg
jo
out
lods
jnp
jb
pop
scas
mov
into
jnp
cwtl
sti
xor
mov
jnp
clc
mov
jnp
xor
aaa
push
dec
push
stos
repnz
test
mov
add
imul
divb
dec
xor
push
mov
outsl
ret
pop
mov
xlat
xor
movsb
jp
stc
jae
clc
scas
ds
mov
pop
mov
cmp
in
push
in
sbb
lods
fstpt
idivb
loop
jg
fsubrl
mov
xchg
push
pop
roll
jnp
pop
notl
jnp
test
cli
sub
add
jnp
xor
outsb
jecxz
cmp
imul
mov
popa
addb
sarl
adcl
imul
stos
push
pop
mov
or
or
pusha
jnp
subb
add
xor
mov
lds
outsb
mov
stos
or
cmp
push
jo
imul
stos
gs
jae
xor
push
jns
jnp
mov
notb
mov
lret
das
js
out
insl
scas
jns,pn
inc
movsl
dec
scas
push
lcall
push
pushf
sti
mov
xchg
adc
and
inc
lds
insl
sbb
jnp
xchg
std
imul
dec
push
ds
push
lret
mov
pop
pop
push
fmuls
xchg
popa
inc
mov
out
js
cmp
jnp
dec
dec
push
rcl
adc
insl
stos
test
je
cltd
jb
jnp
stos
mov
imul
jl
push
mov
ret
jnp
mov
clc
jno
adc
push
add
mov
sbb
scas
cmp
mov
incb
jae
clc
subl
pop
jnp
out
add
outsl
dec
fdivrs
cmp
adc
into
in
jnp
cs
ds
hlt
ss
push
xor
test
mov
shrb
test
mov
pushf
push
outsb
roll
xchg
cmp
cmc
jnp
fcompl
jno
lods
xchg
mov
cmp
in
jb
push
stos
jecxz
jnp
in
sub
cmc
cmp
xor
mov
jmp
sbb
mov
jg
movsl
fnstsw
push
insb
je
lahf
jnp
dec
popf
cltd
dec
loope,pn
jnp
adc
inc
or
xor
insl
dec
add
cmp
repnz
mov
jnp
cmp
push
dec
ja
mov
jns
loope
mov
repnz
cmp
sub
mov
repz
sub
rcrb
lahf
sbb
cmc
pop
outsl
sbb
cmp
mov
mov
or
jnp
lock
cmp
aaa
mov
jnp
fstpl
sub
dec
adc
lods
pop
or
int3
dec
insl
push
bound
and
mov
jne
and
ja
or
rcrl
lret
lods
mov
dec
mov
sbbb
adc
jnp
pop
xchg
sbb
mov
xchg
ljmp
jnp
out
inc
out
push
ret
mov
jnp
imul
dec
add
dec
insb
jge
add
sub
bnd
movsl
cmpsb
cltd
adc
testl
call
jns
ja
mov
out
xor
sbb
jnp
or
pusha
mov
arpl
jnp
sub
xchg
imul
or
jnp
aad
sub
cmpsb
insb
jnp
mov
lods
aaa
or
jnp
imul
call
pop
int
xor
inc
pop
mov
pop
ja
sbb
int3
cmpsb
ja
cmp
cmp
push
daa
pop
inc
dec
mov
pop
outsb
rcll
mov
pusha
nop
and
insb
sbb
pop
cwtl
js
xchg
fistl
pop
ja
sbb
sub
mov
lods
jae
cmc
add
mov
jnp
insb
aam
xchg
daa
jns
jnp
pop
pop
dec
cmpsl
inc
movsb
push
or
call
ja
gs
lock
or
sub
cmp
jns
cmp
dec
xchg
fidivrl
pop
dec
cmp
cmpsl
push
push
cmp
test
jnp
and
pop
inc
fdivrp
hlt
pop
jnp
inc
bound
xor
hlt
daa
jb
jnp
adc
dec
dec
pop
push
in
aam
jnp
fidivs
lret
and
call
pop
jnp
leave
pop
mov
es
jnp
and
pop
cmp
jnp
mov
outsb
pop
outsl
in
push
jnp
dec
lahf
dec
test
sarb
fmuls
jnp
rcrb
jnp
movsl
fbld
je
fdivl
jnp
jae,pn
lahf
pop
jge
jnp
xor
sbb
gs
fisttps
sti
push
lea
lcall
jnp
shlb
in
push
fbstp
je
subb
jnp
pop
jle
mov
jne
mov
lock
and
ja
jae
push
xor
dec
arpl
sub
add
sub
push
xchg
mov
mov
and
xor
jnp
stos
cmp
shll
jnp
leave
insb
xor
jnp
mov
and
pop
cltd
sbb
fildll
xchg
adc
add
lret
inc
orb
jns
cmp
jae
mov
ljmp
fiaddl
xor
jnp
mov
jp
cltd
leave
sub
or
push
jnp
sub
mov
or
or
loop
sbb
xchg
lcall
fdivr
test
push
push
sub
xor
sahf
jbe
cmp
inc
ja
sub
fimull
xor
cmp
mov
repnz
jnp
jge
pop
mov
fwait
cmp
pop
or
cmp
sbb
jmp
ljmp
xor
lret
jnp
cs
cmpsb
fisubrs
and
mov
jb
xchg
aad
ljmp
shr
mov
sub
cmp
pop
cld
outsl
sbb
lret
mov
and
jbe
xor
sub
sub
call
shlb
push
inc
outsl
sbb
push
sub
lret
sti
mov
fcomp
inc
repnz
inc
out
xor
jge
pop
jl
dec
jne
pusha
inc
push
xchg
mov
jnp
test
jo
push
jnp
jp
addr16
in
jnp
sub
shrb
xor
js
mov
jb
aas
mov
sbb
cwtl
out
xor
mov
stc
dec
cs
xor
imul
loope
push
cmpsl
fistpl
cli
movsb
stos
popl
sarl
imul
lock
or
jae
xlat
jnp
push
cmp
xchg
and
inc
jnp
sbb
xchg
mov
sahf
jnp
and
cs
dec
inc
jno
aas
and
jne
das
add
xchg
test
or
push
sbb
loopne
je
inc
shl
fistpl
cmpsb
mov
pop
out
in
jo
mov
pop
outsl
ds
and
push
xchg
mov
pop
jnp
fidivl
inc
xchg
jnp
mov
int3
packssdw
cmpsl
stc
mov
cmp
mov
js
sbb
lcall
push
push
shrb
xor
jnp
out
bound
das
scas
cmpsl
hlt
or
jbe
pop
mov
sbb
sbb
jnp
test
fimull
mov
into
sbb
mov
stos
das
dec
pop
mov
out
mov
or
sbb
xorb
ljmp
adc
adc
inc
sub
lret
int3
fsubl
stc
sbb
mov
xor
jnp
inc
jb
cli
pop
sub
jnp
xor
outsb
or
jecxz
xor
lods
int
mov
jnp
fs
mov
adc
std
or
adc
cmp
stos
jmp
andl
inc
push
shr
jnp
pusha
dec
push
popa
pop
inc
cmp
jnp
js
sub
mov
dec
jae
sti
fldcw
or
fdivs
mov
insl
mov
sahf
ja
or
jnp
push
aaa
xor
and
jg
ror
int3
dec
into
fmuls
xchg
xchg
add
stos
jnp
repz
sarb
dec
xor
pop
test
das
outsl
cmp
loope
push
or
clc
jecxz
mov
ds
mov
ror
loope
jae
pop
iret
or
scas
fimull
js
lods
mov
roll
iret
push
mov
js
xor
fwait
mov
pop
or
push
cli
cmp
fldenv
xchg
js
cmp
jnp
iret
out
dec
popa
xchg
mov
mov
jne
mov
push
mov
aam
imul
and
fimuls
shlb
adc
std
and
sub
jp
outsb
stos
adc
dec
pop
inc
lock
outsl
loope
sub
fs
lods
cmc
add
mov
xor
cmpsl
pop
imul
sub
mov
in
sbb
scas
mov
outsl
and
or
sub
push
jne
out
jnp
add
jmp
jnp
mov
fimull
sar
sbb
inc
mov
mov
adc
enter
add
addr16
sub
in
adc
int
mov
fcmovnu
das
xchg
jp
sbb
lock
jnp
scas
adc
inc
mov
xor
repz
mov
mov
les
hlt
mov
mov
int3
inc
call
dec
pop
sbb
aad
dec
mov
cmp
shlb
or
sub
cmp
jp
out
mov
pop
int3
cmp
add
scas
jno
mov
fnstcw
sbb
sti
leave
sub
into
dec
insl
in
sbb
shrb
orl
mov
pop
dec
mov
jnp
ficoml
in
test
or
in
mov
push
lods
lcall
icebp
and
push
js
jnp
ret
pop
sahf
sti
jnp
and
pop
push
mov
jnp
and
mov
je
ja
lock
add
mov
insl
cmp
cltd
dec
jnp
dec
sub
cmp
in
lea
aas
imul
enter
sbb
aaa
out
adc
jae
outsb
out
lea
cmpsb
dec
push
mov
pop
test
lahf
test
push
xchg
shrb
scas
lcall
cmpsl
and
mov
ds
jo
icebp
iret
out
mov
fisubl
mov
jnp
clc
push
and
ss
xchg
es
jno
sub
mov
cmp
and
jnp
cmpsl
mov
cmp
scas
outsb
lret
scas
sbb
or
cmpb
mov
jnp
mov
jl
jnp
lcall
jmp
mov
sub
lahf
mov
mov
cli
sbb
dec
jno
sbb
cli
lahf
fsubrs
pop
mov
outsl
rorb
sub
jno
lods
cmp
mov
mov
inc
pop
dec
inc
cmp
push
xor
jnp
divb
adc
aaa
mov
cmpsb
test
jae
push
cmp
mov
pop
and
cld
fsubrs
pop
divb
lret
or
xchg
xor
fwait
jmp
jo
xchg
sub
jnp
mov
data16
or
push
jns
add
lcall
cmp
enter
notb
mov
das
cwtl
mov
sti
push
sbb
jb
add
cmp
test
mov
std
jne
xor
pop
inc
mov
mov
enter
scas
jnp
shrl
or
sbb
cmp
mov
lds
imul
cmp
repz
mov
and
popf
cli
sub
jae
imul
mov
icebp
std
cli
dec
sub
jne
xor
jle
in
mov
imul
int
mov
cmp
jne
xor
repnz
lds
jns
aad
xor
std
sbb
arpl
jae
in
jno
push
imul
mov
sub
lods
int
jnp
mov
fbstp
sub
mov
sub
addr16
xchg
lods
xor
outsl
les
jnp
cmp
mov
imul
cmp
imul
lods
jne
push
jmp
mov
movb
mov
cld
pop
xor
sub
xor
fisttpll
mov
xchg
outsb
cs
cmp
dec
mov
xor
mov
jbe
xor
sbb
cmp
frstor
scas
lret
adcl
push
sbbb
cmp
cmp
mov
test
jb
mov
lret
insb
repz
es
fisubrs
lea
shrl
jnp
mov
adc
int
sbb
xor
enter
bound
adc
lea
repz
icebp
jne
nop
jge
ljmp
push
das
sub
repz
ss
mov
mov
sub
mov
jecxz
jnp
pop
sub
jns
sub
mov
cmpsl
push
rorb
cwtl
cmp
push
jnp
lods
dec
mov
dec
lods
mov
lret
sub
xchg
cmp
stc
and
xorl
xor
and
jnp
scas
aaa
int3
jnp
popa
mov
jne
enter
into
xor
cltd
daa
mov
xor
xor
or
sbb
cmp
or
daa
cs
insl
cmp
dec
in
xor
lret
xor
scas
adc
mov
in
test
mov
mov
mov
int
in
insb
sbb
push
addr16
loop
dec
ja
repnz
mov
nop
push
jg
mov
sbbb
push
push
mov
outsl
cmp
mov
popf
loope
cs
ja
cmp
sub
mov
ljmp
xor
adc
mov
insl
sbb
mov
pop
sbb
test
cmp
int
xor
iret
arpl
sub
pop
jno
fldt
pop
mov
jno
mov
push
jnp
xor
cmp
push
sbb
mov
xor
xor
out
xor
adc
scas
mov
shlb
in
jnp
and
mov
aaa
xor
popf
ss
out
mov
jnp
xor
int3
cmp
mov
cmc
push
lods
cmp
and
jnp
popa
push
cmova
sbb
imul
das
in
xchg
sbb
ss
or
ljmp
fcmovnb
shrd
pop
xor
cmp
scas
aaa
iret
pop
pop
xor
jne
into
faddl
mov
xchg
mov
add
xor
cli
mov
scas
sub
sbb
cmp
or
jnp
mov
ja
scas
or
sub
sub
es
jl
lods
outsb
push
fimull
adc
dec
jae
mov
jns
cld
mov
mov
das
imul
in
lcall
lret
clc
sub
ret
fldcw
jnp
mov
repz
jnp
push
and
xchg
int
ja
cmp
fldcw
cmpl
inc
popf
jp
outsl
outsl
xchg
psubusb
mov
aaa
jne
or
repnz
outsl
insl
sub
lret
mov
lds
xorl
testl
jnp
xchg
hlt
movsl
es
mov
imul
lds
les
inc
xor
mov
push
divl
jns
subl
mov
scas
sub
and
and
sub
dec
add
ja
mov
test
push
xchg
shrl
stos
push
shlb
xor
xor
ficompl
imul
xor
addb
sub
loop
outsb
and
cld
jo
sub
inc
shlb
ss
cmp
mov
xor
aaa
outsl
inc
xor
aaa
cmp
imul
jno
cmp
call
sub
dec
imul
mov
in
push
call
cli
push
xor
sub
dec
jmp
mov
pop
mov
ja
lret
cmp
jbe
sub
sub
push
cli
mov
adc
out
gs
icebp
dec
stos
xor
mov
sub
xor
test
scas
pop
inc
cmp
mov
pop
rol
jg
dec
jnp
je
test
jno
xlat
or
lods
adc
pop
int3
xor
jp
mov
mov
sbb
xchg
mov
sbbl
lret
jecxz
dec
or
mov
outsb
sub
shl
lock
xchg
fiaddl
aaa
fwait
xchg
mov
das
jnp
arpl
cmp
jnp
call
subl
hlt
mov
jecxz
pop
sub
cmp
es
jbe
mov
cmp
jnp
mov
shrb
add
in
shlb
xchg
outsl
loopne
icebp
aad
mov
mov
sbb
sbb
outsl
ss
xor
dec
sbb
and
mov
out
pop
scas
cmp
push
dec
setg
sub
je
mov
adc
out
enter
push
popa
cmp
arpl
mov
in
pop
mov
mov
scas
jmp
xor
xor
outsl
mov
mov
aam
bound
lods
mov
dec
xor
xchg
ds
add
icebp
dec
das
insl
cmp
mov
insb
aaa
data16
xlat
inc
imul
or
sub
mov
ja
cli
nop
mov
jbe
or
lret
or
dec
lcall
sbb
xor
mov
dec
cs
fidivrl
jmp
push
cld
jae
dec
sub
mov
jnp
fcoml
lods
imul
jb
arpl
mov
sub
pop
or
fwait
mov
push
pop
push
lods
js
bound
les
stos
mov
inc
sub
stos
sarb
sub
sub
sub
sbb
sub
mov
test
jnp
lods
push
das
cmpsb
lret
ss
sbb
xor
mov
movsl
aaa
mov
inc
scas
imul
pop
lret
mov
sub
xchg
xor
sub
jno
mov
in
push
or
xchg
mov
mov
movb
dec
ss
hlt
sbb
repz
jle
fstps
das
outsb
pop
lds
addr16
mov
loopne
cmp
jnp
xor
xor
sub
into
and
cwtl
lods
das
fucomip
xor
mov
aam
dec
mov
lret
add
in
xor
fcomps
cli
and
test
xchg
and
enter
insb
shlb
cwtl
int3
loope
mov
mulb
cmp
leave
mov
insl
out
xor
sti
cmp
push
pop
cli
adc
out
imul
xor
pop
push
mov
pushf
loop
xor
push
mov
sahf
xor
push
mov
gs
inc
jno
mov
jbe
shll
xor
jnp
cs
cmp
data16
or
pusha
std
and
and
je
mov
cmp
mov
inc
mov
mov
addr16
imul
cmp
and
mov
out
and
sub
adc
xor
out
es
cmp
pop
js
pop
inc
loopne
outsl
xor
pushf
popa
ret
add
jnp
clc
mov
pop
lods
sbb
cmc
adc
sub
xlat
ret
mov
push
xor
mov
pop
fldenv
aaa
jns
inc
lock
testb
iret
test
pushf
insl
sub
andb
loopne
loop
out
push
pop
xor
and
jnp
and
cmp
into
daa
cmp
cmp
dec
sti
push
mov
jnp
and
jnp
inc
fwait
add
pop
cmp
xchg
outsl
int
or
jp
mov
xorb
dec
push
xchg
and
sub
jb
mov
mov
and
jmp
sub
orb
jnp
dec
fstps
out
and
ss
insb
adc
js
cmp
or
movsb
mov
iret
sub
xchg
rol
enter
inc
sti
mov
xchg
push
repnz
dec
dec
pop
mov
xchg
arpl
insl
xor
jae
mov
cmp
sub
adc
sbb
jae
xor
fmuls
stos
pushf
pop
xor
jae
jp
cs
andl
sbb
push
sub
xor
repz
scas
jp
xor
aaa
loopne
xorl
xorb
into
xor
jl
adc
imul
cmp
mov
je
sub
xor
pushf
popa
inc
push
pop
adc
jae
cmp
mov
push
jecxz
sub
mov
test
jo
cmp
out
sub
insl
inc
mov
adc
push
addl
jne
or
push
xchg
xor
cmpsb
xor
test
jnp
lods
insl
sub
loop
aaa
in
sbbb
enter
or
or
jae
in
out
mov
or
mov
mov
xor
dec
popa
sbb
cmp
ja
stos
das
push
cmp
lret
idivb
sbb
sub
mov
mov
sub
sbb
xor
aas
mov
cmp
push
add
sub
mov
icebp
xor
jbe
into
fucomip
xchg
and
addl
lret
inc
outsl
or
sahf
das
mov
mov
mov
pop
xor
cmp
scas
loopne
sub
pop
test
jb
mov
fcomi
clc
dec
pop
sbb
ret
subb
pop
scas
stos
sub
orl
cmp
push
mov
jnp
mov
pop
ljmp
insl
aaa
dec
add
jnp
cmp
xchg
mov
jb
or
call
clc
xor
sbb
stc
outsl
push
stos
mov
jne
mov
clc
or
jnp
xchg
sti
aaa
push
out
jnp
rorb
sub
cmp
fcos
pop
stos
inc
clc
sbb
addr16
sub
imulb
lods
mov
cs
push
jae
xor
fidivs
inc
cmp
fdivs
inc
insl
lds
mov
lret
dec
cmp
push
xchg
clc
mov
aam
cmp
mov
lcall
or
mov
jae
dec
push
mov
ss
jp
xor
jnp
mov
mov
ret
fistl
stos
in
divb
mov
aas
or
sub
hlt
and
aaa
sub
and
jl
mov
sub
je
aam
das
int
xor
dec
add
mov
jle
or
jnp
sbb
addr16
aad
out
mov
pop
xchg
outsb
imul
mov
ljmp
xor
xor
jno
ret
pop
add
das
pop
js
pop
dec
dec
mov
std
cld
mov
xor
aaa
jb
je
ja
rol
jns
add
scas
mov
stc
in
dec
cmp
jae
jle
jge
mov
in
jnp
div
cmc
inc
inc
inc
inc
dec
subb
test
clc
in
dec
sti
out
dec
cmp
aas
out
mov
jg
mov
mov
pop
hlt
repz
inc
inc
inc
fiaddl
jnp
sub
sbb
cmp
push
jo
or
sbb
pop
rcl
rcrl
aad
pop
ja
push
and
and
popa
gs
fcmovne
sbb
or
sbb
pop
push
pop
rcl
rcl
adc
and
daa
pusha
fs
arpl
addr16
dec
pop
insl
mov
test
jmp
push
push
dec
xchg
xchg
xchg
xchg
mov
loop
out
in
dec
jb
dec
cwtl
mov
fwait
stos
lahf
call
push
push
ja
push
nop
xchg
xchg
xchg
jnp
movsb
sub
test
jnp
lahf
mov
or
imul
jne
repnz
push
mov
and
jnp
sub
mov
jmp
into
int
dec
sub
sub
push
fisubs
out
ss
sub
fisubrl
jp
push
pop
sbb
fwait
and
or
cmp
sub
mov
sbb
lods
stos
dec
xor
jnp
push
aas
and
ss
call
jnp
cmp
sub
imul
outsl
jo
out
and
enter
sub
mov
fwait
sub
sub
xchg
lret
jnp
mov
ficompl
pop
and
dec
ss
repz
jb
es
push
mov
mov
addr16
mov
fnsave
jmp
in
sub
insw
stos
and
dec
imul
out
cmp
sub
cmp
popf
and
scas
pushf
sbb
dec
xor
dec
or
cld
ja
or
std
pop
sub
push
dec
movsl
add
js
in
mov
pop
xor
fdivl
push
jl
and
and
jnp
cmp
sub
repnz
sub
xor
xor
and
and
les
sarb
ss
xchg
sub
test
outsl
sbb
es
jnp
jo
pusha
ss
add
add
adc
inc
incl
movsb
push
mov
cmp
mov
testl
std
adc
push
jns
sbb
cmp
push
popa
and
ss
icebp
cs
cmc
xor
mov
push
cmpl
aad
shrl
and
mov
sub
rdpmc
and
sti
ss
sub
jnp
xor
sarl
push
xchg
mov
xor
jno
repz
imull
jae
ja
insb
arpl
or
add
adc
add
call
js
shll
mov
mov
mov
mov
cmpsb
outsl
mov
jnp
and
push
ret
push
adc
mov
jbe
jb
negb
repnz
loop
xchg
sub
es
call
enter
mov
into
inc
sub
lret
insl
add
clc
cmp
in
test
cwtl
rcr
in
xchg
lcall
nop
adc
outsl
pop
fnstenv
test
sbb
outsl
xor
and
mov
xor
outsb
jnp
fisubl
outsl
inc
jb
mov
mov
in
test
mov
outsl
or
jnp
pmulhw
cmc
jnp
rcr
xor
sahf
rcl
mov
leave
je
outsb
mov
mov
jnp
test
cwtl
mov
jmp
push
pushf
mov
cmp
jae
aam
das
sub
inc
ss
lea
sti
sub
hlt
shl
cmp
loope
or
aaa
sbb
jb
mov
int3
dec
jmp
icebp
mov
adc
pop
jnp
pop
xchg
imul
and
jnp
insl
adc
sbb
iret
jnp
mov
cmp
jnp
aaa
lods
mov
jnp
test
out
lcall
out
push
push
mov
ds
push
lods
lods
adc
inc
jle
mov
cmp
or
neg
dec
scas
pop
cs
jnp
jno
and
or
jo
lock
jnp
cmp
div
imul
pop
mov
cmp
rcrl
repnz
cmc
jnp
add
mov
stos
jnp
mov
xor
or
mov
dec
inc
iret
mov
push
dec
jbe
in
jae
pop
outsb
mov
sbb
xor
sti
sbb
adc
divl
pusha
je
ljmp
inc
out
movsl
mov
jnp
cmc
das
push
stos
fcmovb
cs
sub
stos
xor
jnp
stos
les
jne
cmp
xchg
div
je
cmp
pop
loope
lods
sbb
inc
sbb
push
adc
dec
cmp
fstl
outsb
mov
xchg
xchg
stos
enter
mov
fwait
cli
xchg
scas
lret
cld
enter
outsl
add
or
shlb
insb
jnp
stos
jbe
pop
adc
and
sub
jnp
xor
out
fldt
pop
inc
imul
lret
sbb
rcl
mov
fdivrs
pop
mov
or
imul
lea
in
testl
push
mov
or
or
mov
jo
push
xor
pushf
sarb
adc
mov
aas
sbb
jnp
outsl
movsl
or
fistpll
xor
jbe
xchg
stos
popa
jne
push
mov
and
xor
dec
cmp
pop
int
xor
mov
jnp
es
gs
jnp
sub
in
pop
fs
movsb
loope
in
jle
loop
ret
sbb
ja
inc
hlt
push
popf
aam
pop
insb
jae
in
pop
ja
sti
je
mov
jnp
or
push
jnp
bound
cmp
outsl
in
es
jnp
and
xor
int
cmp
cli
inc
pop
xchg
push
iret
inc
loope
loopne
in
mov
jnp
mov
sahf
inc
lret
ss
jno
mov
in
ja
out
push
outsl
cmpsl
ja
pop
inc
jo
lahf
imul
xor
jg
lret
fwait
and
add
in
icebp
sub
fucomi
rcll
or
popa
mov
adc
fisubrl
mov
cmp
pushf
dec
and
or
jbe
mov
imul
mov
xor
outsl
jb
lcall
iret
jns
pop
cmp
std
mov
jo
xchg
lcall
jns
mov
rcrb
xor
mov
pop
xchg
mov
inc
push
push
sbb
fs
mov
sub
cmp
mov
cmp
mov
or
pop
jecxz
xor
loopne
dec
push
cmpb
xchg
or
mov
outsb
pushf
sbb
jae
jne
mov
pop
lret
push
lods
mov
out
cmp
data16
push
jno
ror
inc
out
es
add
jecxz
jl
jp
lock
jae
pushf
movsb
insl
lahf
adc
mov
pusha
das
mov
dec
dec
lds
cli
neg
imul
rorl
pop
push
jnp
jne
pop
or
ljmp
fmull
mov
jnp
mov
or
loop
xor
out
xchg
mov
jnp
sbb
imul
dec
jnp
das
xor
mov
jle
lret
shll
jmp
cmp
jae
push
cs
dec
mov
pop
xchg
roll
jp
insb
mov
and
test
test
int
jnp
cwtl
aas
cli
ret
in
jnp
dec
les
lret
fs
push
inc
jmp
lods
lcall
jnp
arpl
stos
ret
pop
mov
jnp,pn
adc
mov
jnp
or
cmp
mov
cmp
int3
addr16
jnp
ds
xor
stos
jl
inc
adc
imul
dec
mov
dec
cmp
push
pop
test
insl
iret
adc
jnp
sub
xor
lods
jnp
ss
ret
pop
and
or
cmp
xlat
int
pop
sbb
mov
lcall
shll
jnp
dec
mov
lea
jnp
xor
cli
es
mov
out
test
movsl
jae
movsb
xchg
jb
shll
out
jnp
jno
iret
add
mov
jecxz
test
lret
mov
mov
or
jnp
push
fidivrs
imul
icebp
dec
cli
push
sarl
pop
jg
sub
das
jne
inc
adc
lahf
js
adc
inc
push
xor
les
sbb
pop
ret
fisubl
or
sbb
test
xchg
rclb
jecxz
ja
mov
adc
dec
and
dec
jnp
jp
adc
shll
xchg
fistpll
cmp
cld
jnp
dec
out
mov
jnp
sbb
mov
mov
dec
cld
pop
fwait
jb
and
jnp
lea
jnp
cmpl
jnp
dec
dec
lcall
sub
adc
add
mov
fidivrs
je
mov
pop
jne
or
test
rorl
and
test
mov
data16
sbb
push
push
pop
adc
push
lahf
xchg
jnp
add
mov
sub
mov
jnp
push
call
xchg
jnp
popa
cmp
push
dec
or
nop
shl
ljmp
jae
pop
test
or
testl
sbb
dec
shll
dec
mov
ss
adc
and
or
xor
ljmp
push
lock
stos
insl
mov
xchg
sbb
jne
divb
clc
stc
push
mov
or
mov
or
push
fdivr
pushf
jno
sbb
int
inc
jne
in
or
orl
mov
xor
ja
mov
movsb
shrl
imull
jnp
es
mov
jae
push
cmpsl
mov
or
add
mov
xor
cmp
nop
cmp
jbe
xor
ss
test
outsb
and
mov
xchg
dec
enter
push
das
sbb
sbb
sbb
cmp
mov
mov
xor
adc
in
sub
pop
stc
arpl
enter
scas
clc
in
adc
jnp
xor
test
imul
xchg
outsb
scas
mov
in
data16
and
in
cmp
je
js
repz
dec
jp
jp
aad
jns
ja
xlat
jnp
fstpt
in
rcl
test
cmp
jnp
and
scas
fsubr
adc
cmp
test
lds
push
enter
scas
mov
aad
test
push
jnp
pop
and
scas
pop
in
push
sbb
push
test
xchg
fcomps
out
cmp
cltd
clc
test
xchg
enter
jo
lcall
insb
imul
jae
enter
scas
sbb
outsl
sbb
dec
test
jno
enter
scas
pop
fdivrl
idivl
outsb
daa
ret
sub
and
jne
and
sub
shlb
and
adc
int
test
jb
scas
test
sub
test
test
out
jmp
aaa
jo
sub
fwait
in
jmp
in
call
pushf
loop
out
dec
add
addr16
imul
imul
push
add
bound
and
aam
cmp
adc
int
test
test
jmp
nop
mov
ret
mov
inc
xchg
xor
dec
scas
popf
inc
pop
dec
push
push
xchg
pop
cltd
inc
jno
in
lea
jo
cltd
mov
lea
mov
andps
aad
jle
fwait
xchg
and
jbe
nop
push
aaa
enter
int
test
cmp
pop
pop
pop
sahf
push
ja
sbb
and
xchg
dec
and
in
sbb
xchg
mov
je
sti
jns
int
stc
cmp
loope
int
pop
pusha
jns
pop
ja
pop
js
popa
rcrl
and
mov
jnp
popf
mov
mov
inc
cmp
popf
inc
ja
inc
mov
jle
sbbb
int
imul
dec
lcall
sbb
js
add
jnp
aaa
ljmp
test
movl
scas
cli
daa
enter
cmpsl
cmp
out
mov
lock
lret
jno
cmp
stos
jnp
push
jbe
xchg
sbb
cmp
ss
fidivl
and
mov
lcall
cli
push
xor
lret
sub
cmp
jb
in
mov
test
jnp
push
jae
clc
cmp
xor
maskmovq
imull
mov
jnp
xor
cmp
adc
or
leave
lods
movb
movsb
test
jnp
push
cld
and
aad
jg
dec
outsl
cmpsb
pop
sub
ljmp
stos
mov
dec
mov
or
jnp
lret
clc
mov
out
test
dec
leave
mov
sub
movsb
lds
mov
sbb
mov
cli
sub
stc
js
test
out
aad
stos
clc
push
sub
and
and
mov
js
fcmovb
in
cmp
nop
cli
or
inc
mov
je
lods
or
inc
pop
clc
mov
push
xor
and
out
jge
cmp
in
jae
xor
sub
aas
jmp
mov
int3
in
lds
xchg
add
cmc
mov
lcall
or
stos
jns
mov
rcll
lods
xchg
pop
jnp
cs
mov
cmp
and
add
inc
inc
pop
cmp
xor
scas
lret
lea
cmc
jnp
and
fidivrl
push
jnp
jmp
xor
sbb
jae
mov
sub
mov
lods
sbb
jae
scas
adc
cmpsb
jnp
mov
cmp
cmp
icebp
pop
outsl
lods
cmc
in
imul
out
les
pop
cmp
adc
jnp
cmc
loop
and
stos
xor
es
movsb
in
mov
lds
push
jmp
fisubrs
aam
ror
jg
loope
insb
mov
int
mov
jnp
fdivr
mov
jnp
cmp
lcall
arpl
inc
popf
mov
and
jl
jle
cwtl
dec
jnp
in
mov
mov
mov
scas
lods
add
imul
inc
mov
inc
sub
out
int3
sub
mov
testl
adc
jnp
es
cmp
jnp
inc
xchg
dec
xchg
jbe
icebp
testl
aaa
inc
enter
scas
and
xchg
cs
outsl
or
test
mov
in
repz
lods
aaa
jp
mov
sti
mov
in
cli
movsb
in
cmp
mov
lds
cmp
pusha
mov
in
jnp
mov
lods
fcomps
cmp
jp
ja
xor
mul
jno
and
movsb
mov
sbb
ja
testl
sbb
and
daa
and
jbe
mov
out
iret
sbb
mov
or
js
aad
dec
cmp
mov
ss
js
lret
lahf
rorl
test
in
stc
jp
stos
imul
mov
pusha
and
gs
fnstsw
cwtl
ss
mov
mov
test
xor
stos
dec
cmp
jle
inc
les
cwtl
mov
ja
xchg
jns
cmp
scas
enter
cmp
xchg
imul
sub
and
sub
es
or
mov
mov
lret
aam
mov
jns
sbb
enter
jnp
xor
xchg
lods
sub
jae
xchg
cmp
shll
jbe
cmp
and
mov
das
pop
jnp
push
dec
int3
mov
aad
jnp
mov
jno
lahf
jp
jnp
inc
jae
cmp
in
inc
sub
push
movsl
negb
fsts
outsb
out
and
jnp
lret
sbb
jnp
xlat
add
mov
in
jnp
out
jle
into
sub
push
clc
jg
jne
add
adc
data16
loope
jle
mov
fcompl
fwait
scas
mov
jnp
sarb
data16
cmp
jo
jnp
mov
int
movsb
xchg
cmp
mov
jle
mul
cmp
shrl
test
shlb
das
ljmp
mov
negb
pushf
jnp
jp
mov
sub
mov
ljmp
xor
insl
stc
sub
cltd
or
fstps
cmp
mov
enter
dec
dec
out
mov
adc
jnp
test
dec
xor
cmp
sub
sbb
sub
repnz
std
mov
outsb
mov
xchg
or
lcall
ror
jnp
cmp
in
das
dec
adc
push
xor
cmp
cmp
pop
mov
sbb
and
or
scas
out
inc
xor
aas
out
aam
mov
sbb
xor
rorb
es
xchg
sbb
push
sti
stc
fxch
in
aas
imul
pop
lds
test
or
je
and
mov
xor
idivb
xchg
outsl
mov
pop
pop
dec
or
pop
stc
push
dec
or
adc
jae
sahf
cmpsb
addr16
dec
insl
lds
mov
stos
xor
aaa
dec
jnp
sti
iret
inc
pop
jnp
imul
pop
add
ja
push
cmp
sbb
fistl
stos
pop
les
cmp
adc
es
test
int3
xchg
jl
jnp
fwait
mov
jno
inc
lods
lcall
movsb
xor
sbb
lret
sbb
sub
push
sahf
lock
imul
shll
or
insl
fiaddl
call
jge
jnp
jg
shll
imul
add
sarb
ss
jno
leave
hlt
xor
sub
jnp
lods
repz
pop
test
loope
mov
lret
pop
pop
into
arpl
je
mov
cmpl
and
jecxz
test
mov
pop
clc
sbbb
jnp
cmc
mov
dec
fmull
jnp
scas
push
lods
xlat
jae
negl
cli
mov
jnp
inc
notb
test
sub
fbld
jnp
fdivs
pop
sub
aad
cli
insl
xor
lock
das
es
mov
xor
jnp
mov
xor
enter
pop
mov
cmp
ljmp
insb
and
js
mov
enter
add
fadds
rclb
ja
mov
sub
cmp
xorl
addr16
dec
scas
iret
jnp
xor
pop
sbb
lods
jne
jnp
mov
ss
jo
jnp
sub
into
mov
loopne
js
lods
imull
out
aaa
jae
fmull
gs
adc
sub
pop
imul
push
mov
sbbl
mov
jnp
les
stos
ss
mov
movsl
mov
xlat
sub
cmp
inc
in
jne
pusha
jno
mov
jnp
mov
add
adc
sub
outsl
sub
jb
mov
mov
outsl
cmp
je
jae
jp
sbb
mov
arpl
gs
or
repnz
sbb
mov
sub
xor
call
jno
lods
test
push
pop
sbb
jnp
cld
lock
out
xchg
in
aas
stos
cmp
aaa
aad
imul
sbb
sub
jne
ja
mov
jnp
add
dec
aad
cld
or
mov
cmp
sub
jo
scas
fbld
shll
ds
inc
inc
jo
std
cmpsl
daa
sub
cmpsb
pop
add
js
cmp
pop
jnp
mov
mov
cld
cs
js
sbb
sub
jnp
xchg
jnp
stos
xor
arpl
lcall
insb
aas
xchg
popa
int
sbb
jo
push
xchg
dec
jnp
mov
jno
and
jnp
cli
sbb
mov
add
ss
and
inc
pop
xchg
arpl
inc
mov
mov
add
jnp
jo
fcmovb
mov
xchg
jnp
addb
movsl
sbb
out
inc
out
insb
scas
ss
and
int3
xor
jnp
jbe
add
hlt
in
inc
lea
or
adc
outsb
push
and
in
in
ja
fisubrl
jnp
inc
mov
hlt
not
sarl
inc
mov
lcall
bound
ja
adc
jb
dec
es
pop
inc
pop
jmp
jnp
in
mov
lods
pop
and
clc
cmpsl
dec
cmp
jae
sub
jnp
lods
mov
mov
clc
push
dec
cmp
or
dec
aaa
arpl
repnz
lods
mov
movsb
dec
mov
and
shll
pop
push
jnp
je
dec
mov
dec
cmc
jnp
pop
lds
aaa
xchg
jne
sub
int
cmp
cmp
sub
sub
fadd
andl
sub
mov
mov
pop
ja
xor
pop
adc
sub
clc
mov
mov
inc
jo
jnp
mov
mov
cmp
in
sub
cltd
push
les
testb
call
and
cmp
dec
pop
jp
test
scas
xor
sahf
shrl
js
sti
aaa
cmc
push
fiaddl
mov
xchg
test
sbb
and
dec
lcall
cmp
bnd
dec
jnp
mov
and
xor
xor
outsl
cmp
cmc
scas
fdivs
jnp
mov
cli
pop
mov
cmp
or
sbb
inc
push
lcall
sbb
or
out
std
add
or
jnp
call
or
jnp
cmp
lret
mov
test
sbb
mov
jle
mov
jnp
cmpsb
ss
imul
mov
out
ss
loop
filds
outsb
jo
inc
mov
push
cmp
outsl
scas
imul
cli
xorl
fsubl
pop
jae
lods
and
icebp
mov
shrb
jbe
sub
cwtl
mov
mov
mov
int
gs
jae
jnp
je
or
aaa
xlat
clc
xchg
filds
or
inc
adc
gs
cwtl
mov
and
xchg
movsb
inc
negl
jnp
out
or
pop
decb
jns
loopne
or
sub
test
ja
js
push
lods
outsl
jnp
add
jnp
push
inc
stos
out
pop
cmp
cmp
xchg
mov
jnp
inc
insl
push
mov
or
sub
sbb
jl
sbb
enter
in
cmp
lds
sub
inc
cmpsl
mov
imul
sub
jae
insl
push
sbb
jnp
jp
sub
and
xchg
arpl
cmp
sar
in
in
jno
sbb
sub
es
cmp
lds
bnd
mov
sbb
push
pop
hlt
dec
ljmp
rcll
gs
cmp
jnp
sub
dec
or
sub
je
into
aad
or
loop
jle
insl
or
sub
lock
call
push
sarb
pusha
cmp
aam
out
je
hlt
cwtl
cmp
insl
xchg
and
mov
je
lea
js
arpl
mov
jnp,pt
cmp
aad
sti
dec
and
dec
fnstcw
jns
add
inc
stc
hlt
dec
shll
arpl
test
cmp
bound
movsb
xor
or
sbb
sbb
xchg
adc
push
cmp
lahf
jnp
mov
test
jmp
ret
arpl
jnp
pop
sub
add
mov
jnp
and
mov
icebp
clc
mov
daa
cmpsl
mov
sub
icebp
rep
sbb
sub
lret
pop
jnp
mov
loop
call
xlat
mov
mov
xchg
sub
xor
push
ret
lret
push
out
push
jnp
add
stc
ljmp
lock
fnstenv
mov
add
pushf
xor
scas
and
scas
xor
mov
push
inc
testl
xor
mov
lahf
iret
jbe
cmp
mulb
enter
jnp
lahf
cmp
imulb
jp
iret
ja
popf
pop
xor
xor
mov
cmp
push
stos
sbb
outsb
in
xor
xchg
or
repnz
mov
mov
and
jp
jnp
inc
loope
mov
and
ficompl
imulb
dec
jp
mov
mov
mov
mov
fs
sti
lods
jnp
mov
mov
and
in
adc
and
jnp
pop
xchg
sub
mov
cmpb
neg
xchg
mov
mov
cld
into
pop
outsl
popa
lock
lret
pusha
enter
mov
jmp
cmp
lods
mov
jb
scas
sbb
dec
in
mov
xor
es
mov
aaa
mov
insb
scas
in
adc
xchg
adc
cld
ja
sub
in
lods
gs
or
or
outsb
outsb
and
repnz
jns
xor
sti
xor
ja,pn
mov
sub
lods
aaa
mov
std
pop
xorl
mov
jae
dec
mov
or
push
mov
dec
ljmp
mov
dec
push
scas
mov
dec
jbe
fsincos
mov
out
mov
mov
xchg
mov
push
scas
in
ljmp
lods
sbbl
mov
xor
in
mov
outsl
fsubrs
stc
sti
sbb
fmul
xchg
lods
mov
movsl
in
cs
mov
mov
sbb
cwtl
mov
jne
xor
bound
lods
insl
mov
movsl
mov
pusha
pop
mov
jbe
pop
mov
popf
jns
or
sub
bnd
cltd
mov
dec
mov
shll
cmpl
cmp
mov
mov
mov
les
inc
adc
mov
jne
sbb
sbb
mov
scas
mov
movsl
scas
or
or
arpl
mov
mov
push
stos
or
sbb
jle
into
add
lods
fidivs
dec
mov
sbb
mov
stos
cli
inc
aaa
outsl
sub
dec
mov
jnp
xor
mov
negl
jns
mov
scas
enter
scas
dec
and
imul
jno
push
mov
mov
cmp
dec
push
mov
pop
mov
xor
xor
cld
push
mov
pop
mov
xor
xor
jp
scas
xor
rolb
subl
xor
ja
clc
das
ss
sbb
push
mov
xor
inc
add
dec
insb
lods
sti
aam
inc
ja
cwtl
mov
sti
mov
pop
or
mov
enter
or
or
cwtl
in
cmp
outsl
xchg
scas
aaa
jle
push
add
mov
js
mov
push
sub
jno
in
dec
aaa
fdivr
xor
push
stc
xchg
mov
jno
shrl
xor
mov
jmp
mov
cli
mov
and
shrl
fmuls
jns
mov
hlt
mov
cmpsl
mov
push
std
pop
sub
rcrb
cmp
pop
xchg
gs
rolb
adc
in
sbb
rolb
out
jp
hlt
ja
int3
xor
mov
jmp
dec
cli
imul
in
scas
int3
enter
pushf
scas
dec
jle
cmp
das
sahf
pop
cmp
mov
pop
test
popf
mov
xor
repz
popa
adc
cmp
push
ret
xor
in
test
mov
xor
jns
sub
aaa
pop
lods
sbb
loop
insb
sub
jnp
sti
fcoml
pop
mov
mov
sbb
mov
cld
lods
out
jae
sar
mov
pop
ja
jnp
mov
mov
imul
cmp
out
in
xor
sub
and
mov
movsb
addr16
cli
ljmp
daa
fisubrl
cmp
or
cmp
pop
mov
adc
mov
movsl
movsb
mov
jnp
sub
xchg
cmpb
sbb
decl
add
scas
xchg
lods
and
lret
sub
sbb
aaa
in
lret
mov
sub
jnp
insb
fadds
or
fidivrl
lods
mov
dec
inc
mov
insl
movsl
push
imul
cmp
jnp
fldt
call
sub
lods
addr16
sti
out
and
inc
pop
out
jb
hlt
jnp
push
dec
enter
or
jnp
xor
cli
mov
mov
xor
jbe
mov
mov
add
inc
xor
xchg
repnz
out
out
fidivrl
inc
mov
dec
ja
cmpsl
xor
lcall
xor
scas
aad
mov
enter
sub
dec
test
xor
cmp
sub
aaa
jmp
jne
lods
mov
les
and
jbe
inc
imul
inc
je
xchg
xor
jnp
adc
enter
sub
inc
mov
and
dec
movsl
das
shrl
sbb
jb
xor
jp
jno
mov
xor
divl
and
sbb
xor
xchg
sbb
js
js
xor
and
cs
insl
dec
scas
lcall
cmp
or
cmp
inc
rcrb
mov
bound
das
dec
addr16
dec
lock
jmp
xor
jo
adc
xor
adc
mov
dec
ret
xor
mov
mov
clc
lods
inc
bound
sub
outsl
mov
adc
stos
sbb
sub
pop
jbe
sbb
lret
inc
fdivrs
jnp
jp
xor
cs
nop
pop
mov
shlb
jne
cmpb
outsl
cmp
mov
jns
jnp
xor
sub
idiv
popa
push
mov
adc
lahf
mov
mov
pop
lock
mov
fldt
sbb
cs
test
in
fnstcw
in
cmp
ret
repnz
sub
ja
lds
cmp
sbb
mov
mov
repnz
xor
lods
jbe
xor
lods
loop
mov
rclb
jnp
leave
cmpsb
mov
sbb
in
xchg
fstpt
pop
fidivrs
int3
xor
idivl
adc
out
repz
lret
fdiv
xor
sub
fstpt
xchg
mov
cmp
sub
sub
insl
push
pop
mov
hlt
out
movq
add
inc
add
fmul
xor
adc
adc
faddl
mov
cmp
mov
cs
sub
mov
and
mov
mov
ss
mov
imull
outsl
int3
das
fcomi
and
scas
fwait
aam
sbb
mov
sbb
mov
jnp
jb
dec
lock
pop
xor
cmp
mov
ret
mov
mov
cmpb
fists
pop
das
adc
ja
jns
stc
inc
test
xor
fxch
xor
test
sub
dec
lods
jno
sub
pusha
mov
imul
int
add
push
xchg
sbb
aaa
mov
jnp
xor
ljmp
clc
mov
enter
mov
xchg
and
or
jns
jle
iret
mov
sub
imul
mov
mov
jnp
stc
fisttpl
mov
and
push
sbb
jl
jl
jl
mov
mov
lock
and
or
sti
add
jmp
paddd
decb
outsl
lods
stos
mov
inc
jecxz
lahf
jnp
sub
fdivr
insl
mov
cmp
imul
or
mov
test
cmp
adcl
add
mov
in
jmp
clc
orl
fdivrs
sub
cmpsb
xor
call
fwait
int
jae
push
and
pop
aas
jns
pop
ja
xchg
arpl
pop
aam
xor
insl
xchg
jns
inc
mov
ja
iret
arpl
or
bound
pop
pop
cwtl
fwait
stc
mov
sbb
jnp
out
sub
xchg
jnp
loopne
mov
jnp
bound
mov
or
jmp
xor
mov
test
int3
and
jnp
push
cs
xchg
cli
xchg
hlt
jnp
ss
and
scas
mov
in
scas
or
adc
and
cmp
sarb
sbb
pop
ss
aaa
mov
xor
xor
imull
adc
mov
mov
cmpb
adc
jnp
xor
xor
sbb
and
cmp
adc
xor
int3
jno
lret
daa
mov
ss
mov
xor
lds
xchg
xchg
fnstsw
test
mov
jo
lcall
sub
stos
sbb
mov
mov
mov
mov
add
jp
sub
or
fidivrs
and
push
sti
dec
clc
cmp
jmp
mov
cmp
jmp
jae
jae
xor
test
sub
lods
incb
ss
jnp
inc
ret
cmp
fsubr
stos
jae
ja
je
pop
js
lods
aaa
imul
mov
js
mov
mov
aad
clc
test
leave
xor
mov
mov
push
lcall
jno
jb
jnp
pop
stos
mov
jnp
mov
adc
jmp
xor
and
add
lock
es
aaa
and
lock
repnz
dec
sbb
xor
jnp
mov
rcl
leave
movsl
pusha
outsl
mov
lods
clc
push
mov
ja
das
popa
jo
adc
in
sub
sbb
repz
cmp
sub
and
mov
nop
ss
xor
mov
repz
mov
scas
mov
outsl
mov
stos
ret
dec
cmp
cmp
or
xchg
sub
push
dec
pop
test
cmp
xor
mov
dec
dec
mov
xor
int
loope
mov
cmc
mov
lods
sub
repz
in
stos
jnp
mov
adc
jnp
sbb
aaa
out
push
mov
xor
jb
fsubrs
aaa
mov
scas
fsubrs
mov
rolb
jecxz
jns
sub
mov
repz
jo
hlt
jns
das
lret
xchg
imul
sti
imul
in
out
pop
mov
dec
mov
adc
dec
mov
pop
xor
out
jecxz
dec
inc
pushf
xor
insl
jmp
mov
xor
scas
aaa
shll
mov
out
ret
in
adc
lds
mov
sub
outsl
out
mov
mov
test
in
std
lret
lock
aaa
adc
adcb
mov
xor
mov
xchg
int3
sbb
mov
and
dec
xor
jnp
dec
mov
in
stos
js
mov
ss
das
dec
xor
stos
xchg
mov
leave
or
shll
in
pop
lods
clc
jnp
fsub
fidivrs
into
xor
xchg
mov
dec
pop
out
jb
aam
sbb
mov
ss
lock
cli
mov
mov
mov
fdivl
addl
jbe
dec
mov
call
cmp
sti
or
xchg
nop
int3
cmp
ss
sahf
jne
xor
aaa
outsl
jnp
mov
and
int
inc
xor
or
imul
ja
dec
repnz
dec
mov
sahf
adcb
sbb
xor
sub
sub
sbb
mov
xor
jno
pop
mov
pop
sub
outsl
mov
adc
loop
push
cmp
sub
cmp
outsb
jecxz
repnz
or
js
xchg
shll
mov
mov
pop
scas
xor
scas
mov
out
jmp
xor
jnp
mov
adc
jmp
mov
mov
ja
sub
cmp
lea
lods
movsl
xor
out
cmp
in
mov
stc
or
or
in
hlt
aaa
jae
fdivs
mov
push
and
mov
jbe
mov
lret
ljmp
mov
pop
sbb
pop
int3
cli
aam
fildl
mov
pop
mov
negb
cmp
lahf
les
xor
pop
enter
jae
lods
push
sti
cmp
scas
inc
mov
inc
sbb
cmp
adc
and
jo
push
or
into
jmp
push
jb
fisubrs
mov
leave
mov
popf
out
lods
sub
or
ss
fwait
call
mov
ja
test
arpl
scas
inc
lahf
call
fwait
jno
jle
arpl
jb
or
test
push
mov
mov
stos
arpl
mov
jnp
cld
mov
mov
mov
cld
or
or
add
mov
sbb
sbb
sbb
sub
test
or
and
bound
sbb
sub
rcrb
ret
mov
insl
xor
lret
mov
mov
mov
ja
pop
dec
enter
or
xor
jns
ja
daa
arpl
pop
fs
cmpl
rcrl
lcall
mov
or
add
mov
fistpl
adc
xchg
fstpt
fdivr
cltd
fwait
es
aam
jne
sbb
sbb
jns,pt
jnp
mov
jnp
imul
fisubrs
jmp
cmp
inc
xor
mov
xor
jns
sbb
insb
imul
movsl
mov
shlb
xchg
xor
mov
cld
in
cmp
jnp
mov
and
jp
rclb
xor
es
jbe
fwait
les
fwait
ja
mov
ret
mov
add
add
pop
aam
fistpll
jbe
mov
dec
test
mov
jno
mov
ss
mov
imul
ss
xor
xor
xor
jnp
or
xor
dec
xor
sub
int3
rorl
xchg
sahf
clc
push
shlb
adc
ja
lods
nop
sub
xchg
shlb
xlat
xor
cmp
call
fidivrs
cmpl
inc
clc
insb
mov
cli
jae
aad
mov
shll
sub
pop
jo
adc
mov
xor
and
mov
mov
sub
add
mov
cmp
sub
adc
int
jae
scas
mov
mov
push
push
test
ret
mov
xor
mov
mov
clc
ret
sbb
sub
jne
jnp
mov
loope
xor
jo
outsl
push
mov
loopne
cmp
enter
jmp
mov
scas
jle
mov
cmp
mov
xor
or
test
loopne
jl
ss
pop
mov
mov
inc
orl
push
pop
lea
pop
sub
jne
mov
pop
loope
repz
scas
or
sbbl
cmp
lea
lret
ja
push
data16
cmp
or
jnp
cmp
jnp
xor
jnp
addr16
pop
sbb
fdivs
test
mov
ja
cltd
int3
jl
lods
adcl
mov
pop
sbb
cli
outsl
sbb
jnp
cmp
and
push
or
xor
loopne
cmp
out
fisttpl
nop
xor
sub
orb
jae
mov
jle
insl
xchg
sub
or
or
sarl
pop
imul
fisttpl
and
scas
xor
insl
in
push
pop
xor
mov
cli
fisubrs
aas
daa
sbb
in
insl
ftst
cmp
sub
lods
fdivrp
std
out
shrl
mov
xor
jo
addb
ret
dec
pop
xchg
inc
int3
das
or
mov
mov
xor
enter
mov
daa
out
test
cmp
test
enter
push
mov
push
cli
mov
das
not
mov
leave
cmp
sbb
sub
movsl
enter
mov
cmp
movsl
sub
stos
adc
jo
enter
cli
sub
movsl
xor
mov
dec
xor
lcall
and
inc
push
insl
in
enter
subl
mov
xor
aaa
mov
daa
sbb
pop
xor
mov
jnp
sbb
sub
inc
xor
and
inc
mov
mov
jnp
mov
sbb
imul
xchg
or
add
into
dec
outsb
hlt
cli
or
mov
sub
and
divl
inc
inc
fiaddl
rorl
jg
jo
lods
sub
cmp
pop
inc
arpl
mov
mov
sbb
mov
inc
sub
mov
xchg
or
lds
mov
mov
sub
jno
outsb
scas
inc
jnp
dec
leave
lods
mov
incl
fiadds
jb
mov
jne
mov
jnp
pop
xchg
sub
fadds
stos
cmp
mov
push
jns
lret
daa
jns
or
inc
arpl
jnp
ss
dec
repnz
lcall
scas
das
imul
aaa
cmp
pop
pop
mov
cmp
dec
cmp
and
jno
movsl
ss
sahf
mov
mov
outsl
out
fisubrl
xchg
mov
mov
mov
fdivl
cs
adc
jo
dec
call
mov
lret
ja
or
or
test
scas
dec
cmp
sub
add
xor
insl
sub
inc
aaa
fwait
aas
jne
jo
lcall
nop
cmp
mov
sub
jp
pop
mov
repz
or
mov
jnp
lahf
mov
aaa
ja
call
mov
insl
rcr
adc
repz
cmp
scas
cmp
adc
xor
insb
lcall
jne
sub
fidivl
push
insl
pop
mov
scas
and
jnp
adc
lods
mov
movsl
xor
cmp
and
xchg
outsl
jbe
test
mov
jbe
adc
scas
test
sbb
cmc
cmc
jg
jle
sti
xor
das
hlt
dec
aaa
je
outsb
lret
ja
out
loopne
shlb
jno
adc
adc
rorl
sub
sub
std
outsl
pop
or
repz
push
sbb
mov
xor
loope
lea
jnp
std
lods
jmp
cmp
xchg
hlt
sub
les
imul
das
outsb
xor
add
call
aas
dec
mov
jb
mov
mov
pop
and
dec
and
lods
mov
push
mov
mov
dec
aas
dec
sti
scas
pop
sub
ds
sbb
jns
mov
cmp
lods
scas
or
stos
mov
mov
xor
loope
imul
cmp
das
aaa
lods
ds
mov
aaa
bound
sub
lods
jnp
sbb
push
clc
stc
sub
jecxz
mov
sbb
sbb
sarb
das
mov
sub
insb
cmp
mov
imulb
sbb
mov
jns
lods
xor
xor
lcall
jl
cmp
mov
in
addr16
and
mov
stc
dec
rsqrtps
mov
xor
or
out
sub
fucomip
xor
pop
lret
jnp
icebp
sti
stos
jp
imul
sarb
pop
lcall
fcmovbe
jne
ds
daa
test
inc
mov
push
mov
xorb
xor
js
lods
jnp
dec
mov
stc
out
das
pushf
or
in
pop
std
mov
mov
enter
inc
xor
xor
mov
inc
cli
fbstp
jp
lahf
mov
iret
jmp
mov
pop
bound
mov
insb
movsl
aaa
mov
stos
out
cli
xchg
mov
sbb
fisubrl
jp
stc
mov
hlt
xor
jbe
dec
mov
xor
mov
mov
mov
mov
cmp
sub
fs
pusha
xor
mov
rcll
adc
xchg
das
cmp
icebp
stc
test
xchg
mov
out
int
les
aaa
jge
cmpl
ja
xor
cmp
idivl
ja
jne
scas
mov
mov
sub
int
loope
sarl
cs
mov
jns
jmp
mov
loope
sarb
jg
int
fbld
adc
pop
sbb
imul
insb
ja
mov
and
xchg
jns
idivb
sub
sub
imul
jbe
mov
sub
cmc
in
xor
mov
shlb
mov
out
inc
mov
mov
and
in
or
jnp
sub
jnp
das
mov
enter
or
das
stos
clc
mov
movsl
scas
or
cmp
imul
ficompl
xor
movsb
loop
jnp
mov
adc
cwtl
jb
insl
scas
sub
jnp
aam
pop
repz
mov
enter
mov
mov
aaa
icebp
fwait
push
dec
mov
out
in
jns
jo
mov
insl
lods
add
js
shrb
sti
sub
push
int3
outsl
push
mov
ss
lret
insl
lret
pop
dec
in
xchg
mov
mov
int
mov
jnp
cmp
lret
adc
in
mov
jnp
imul
xchg
ss
mov
pop
in
mov
out
jp
jb
frstor
mov
pop
aad
mov
push
jnp
repz
mov
sbb
cmp
push
cld
add
outsl
push
fisttps
or
pop
sub
cmp
outsw
add
mov
pop
lea
cmc
jnp
fs
ss
pop
aad
inc
push
sub
and
cmpb
mov
rdmsr
pop
adc
jno
leave
cmp
push
fwait
in
addr16
mov
cld
fists
xor
cmc
push
push
leave
cmp
push
and
rep
movb
stos
movsl
aaa
daa
push
lods
imul
mov
jae
or
jnp
mov
jo
addr16
jnp
jge
mov
je
decb
inc
jb
push
push
inc
xchg
jns
xor
jns
cmp
mov
ja
lods
dec
mov
sub
add
insb
xor
and
mov
scas
push
push
es
adc
outsl
xor
fnstsw
mov
adc
mov
fistl
add
fdivrs
dec
ss
mov
clc
je
aas
and
cwtl
or
or
dec
lods
mov
aaa
or
ja
divb
fistl
clc
mov
xor
movsb
push
sbb
stos
stos
int
sbb
jae
mov
test
or
and
mov
push
cvtps2pi
push
dec
sbb
mov
xchg
mov
popf
jb
push
or
iret
add
dec
lea
outsl
in
sbb
push
xor
sub
mov
sbb
pop
fdivrs
mov
outsb
stos
scas
testl
leave
dec
cmp
in
ss
movd
dec
and
stc
mov
and
push
repnz
xchg
divb
clc
mov
mov
outsb
push
sarl
pushf
or
fdivs
testl
fsubr
pop
jae
jg
lods
dec
jge
jge
popf
rcl
jae
xchg
fdivs
add
add
add
popa
add
scas
insl
fnstsw
mov
setno
xor
mov
mov
or
jmp
not
lock
mov
jecxz
and
or
or
add
sub
jnp
adc
iret
mov
xor
jnp
divb
mov
hlt
or
or
or
jb
jnp
mov
in
lahf
popf
stos
scas
lret
fldt
clc
into
test
lock
idivb
ss
js
pop
mov
or
xor
pop
ja
popf
or
pop
stos
cltd
mov
dec
cmp
add
jbe
or
into
andb
xor
jnp
loop
iret
insl
jbe
jns
jae
ljmp
xchg
mov
notb
clc
xor
pop
xlat
and
aaa
jnp
mov
insb
and
bound
mov
int3
and
sub
scas
mov
push
jnp
push
fistl
jnp
hlt
fmuls
pop
std
idivb
pop
mov
aam
mov
and
shll
push
cwtl
mov
jno
stos
cltd
bound
lea
dec
adc
clc
jae
adc
in
jnp
lcall
outsl
ja
lods
cwtl
mov
es
adc
ds
test
jnp
pop
cltd
dec
dec
movsb
outsl
stc
scas
mov
clc
mov
dec
cld
repnz
dec
cmp
shr
mov
iret
mov
out
shlb
aam
xlat
inc
jmp
imul
dec
lods
fmuls
out
mov
pop
scas
pop
rclb
sub
sub
jnp
repz
and
cmp
xchg
mov
mov
mov
jle
jbe
notb
decb
adc
mov
push
int3
dec
jae
sub
fwait
pop
imulb
jnp
fdivs
div
xor
jnp
xchg
push
int3
cmpsl
outsb
stos
out
sahf
stos
mov
cltd
mov
jle
jne
lret
sti
fincstp
test
ja
xchg
fnstenv
lret
mov
jb
or
stos
stos
jg
int
jnp
in
outsl
lock
or
dec
mov
ljmp
xchg
ja
stc
repnz
jbe
sbb
gs
sub
jl
jns
jnp
xchg
inc
mov
jnp
in
std
push
mov
mov
xchg
aaa
cmpsb
mov
xlat
insl
mov
jnp
adc
cmp
dec
lret
cwtl
in
jnp
xor
shll
cmp
nop
imul
or
xor
outsl
ss
or
lods
inc
outsl
fdivrs
jae
loopne
jb
out
jnp
push
and
testb
push
and
push
lret
xchg
push
call
push
mov
xchg
xor
dec
inc
mov
jnp
lret
mov
mov
lods
imul
or
push
hlt
sub
and
inc
inc
pop
ds
stos
jnp
aam
or
sub
in
ljmp
mov
int
jnp
out
decb
jnp
fcmove
test
xchg
sbb
jnp
fnstenv
mov
out
fistpl
sub
cmc
jns
mov
movsb
jnp
cmp
jnp
jg
pop
fdivl
ss
and
in
jmp
or
mov
hlt
mov
insb
dec
cmp
jnp
insl
mov
or
cmp
push
and
aam
out
adc
mov
and
repnz
sbb
mov
loope
in
imull
jnp
dec
pop
and
fnstcw
jnp
cmpl
dec
imul
push
shlb
push
jnp
nop
cmp
pop
out
mov
sbb
push
je
xor
jnp
hlt
cmc
loopne
adc
stc
jnp
mov
pop
inc
or
rcrl
sbb
clc
stos
imul
mov
ret
xchg
pushf
add
cmp
xchg
xor
and
bnd
xorb
jg
addr16
jle
cmp
and
jno
cs
sub
in
xor
lods
jnp
mov
lds
cmpb
and
cmp
xor
cmp
mov
addl
js
mov
rorl
xor
jmp
adc
clc
xchg
jnp
xchg
inc
inc
ss
mov
jo
in
sub
cmp
jnp
ret
rorb
pop
cmp
pop
fwait
dec
out
insb
inc
icebp
jnp
jle
sbb
jnp
xchg
adc
imul
pushf
cltd
jnp
bound
lcall
cmp
and
rol
divl
out
or
lods
movsl
jp
jecxz
ja
xchg
sub
js
cmp
pusha
mov
scas
fisubrs
jae
cmpl
mov
sub
cmpsb
jae
mov
push
sbb
push
mov
daa
sbb
ret
mov
je
jnp
mov
mov
iret
out
aam
adc
mov
pop
adc
jnp
or
or
xor
ds
ja
mov
subl
jnp,pn
mov
push
mov
dec
sub
add
outsl
adc
jns
cmp
lods
ja
daa
jl
mov
xor
cmp
jmp
add
cs
fadd
add
test
dec
jnp
xlat
xor
jl
fidivrs
or
jnp
clc
aaa
inc
cs
xor
rcll
and
repnz
jnp
imul
jnp
cmp
cmp
cmp
jmp
aas
fwait
jecxz
in
xor
or
negl
je
out
push
jnp
xchg
psadbw
pusha
in
xchg
jnp
mov
clc
imul
out
sbb
and
add
sub
gs
pop
imul
lret
pop
insl
mov
aas
jl
ja
cli
inc
jnp
pop
stos
jb
ljmp
sub
fld
outsl
scas
lds
dec
push
or
lcall
shrl
xchg
and
cmp
mov
adc
test
jb
sahf
stc
sub
cmp
inc
xchg
dec
xor
jnp
rcr
stos
mov
test
js
xor
pop
scas
push
jnp
mov
xor
in
aaa
pop
push
jnp
xor
sbb
movsb
mov
lods
mov
or
xor
pop
mov
mov
mov
gs
cmp
fwait
sub
icebp
loop
cmp
loope
jl
inc
xchg
or
orl
pop
inc
cmp
cmpb
sbb
sub
fnsave
iret
fistpll
adc
daa
mov
mov
jnp
push
sbb
jnp
mov
stc
cmp
insb
jnp
mov
xchg
mov
jge
xchg
jnp
arpl
jp
das
dec
repnz
sub
mov
cmp
insl
push
sub
mov
jnp
imul
xor
xor
and
imul
subl
out
xor
arpl
arpl
jnp
loop
dec
inc
pop
jnp
shll
movsl
jmp
push
fdivrl
push
xchg
cmp
sbbl
jnp
xor
js
mov
jns
mov
aad
pop
mov
jnp
mov
popf
dec
decl
add
sub
imul
in
ret
xor
cs
imul
lock
jae
and
popa
and
jp
cmpsb
lret
push
mov
jo
stos
inc
lds
ret
ja
cmp
mov
fstpt
fistps
add
xchg
pop
fstl
lret
subb
and
addr16
fdivrs
xor
pop
mov
es
lds
lea
lock
xchg
jno
pusha
mov
push
and
or
jnp
xor
jnp
cltd
call
sbb
cmpb
jnp
stos
adc
mov
and
insb
mov
in
je
test
jp
pop
nop
xor
sub
aaa
ret
and
stos
jo
jnp
cld
sub
push
icebp
cmp
sbb
inc
testl
jmp
jnp
fnstcw
je
push
jnp
mov
dec
mov
push
mov
rolb
add
or
fs
lods
insl
icebp
adcl
sub
subb
mov
sub
pop
inc
enter
int
bound
shrl
inc
mov
test
clc
sahf
lret
ret
cmp
ja
cmc
shrl
test
inc
adc
jl
lods
add
or
jne
mov
shlb
sub
into
ja
dec
das
add
push
out
jnp
xor
xor
cmp
push
mov
jns
cld
jnp
scas
jae
jmp
daa
pop
mov
sbb
adc
adc
mov
jmp
cmpsb
push
jno
inc
lret
ja
inc
fnstcw
sbb
jg
test
mov
mov
pop
jnp
push
pushf
dec
sbbb
in
jnp
jmp
and
adcb
xor
xor
push
xchg
out
pop
scas
rclb
jo
sahf
jnp
cmp
aad
cmpsb
loop
xorb
les
out
lock
mov
mov
jae
rcrb
push
dec
jbe
shlb
lock
out
xor
popf
mov
lret
cwtl
ret
fs
dec
cs
ds
insl
dec
sub
jnp
pop
fcmovne
pop
lock
ljmp
cmpsb
adc
aam
jae
xor
push
mov
testl
push
sbb
dec
pop
scas
push
add
xchg
scas
fisttps
xchg
jns
jnp
rclb
jae
loop
call
pop
jnp
dec
mov
leave
jnp
negb
scas
lret
pop
lcall
mov
jne
push
insb
or
push
fstpl
andb
clc
push
sbb
adc
aad
xchg
push
jo
adc
fs
jns
adc
out
in
imul
jno
pop
push
fisttpl
lea
and
out
xor
sub
outsl
xchg
mov
fwait
inc
enter
scas
jnp
lret
addr16
in
gs
aaa
mov
insb
scas
mov
push
push
jns
sub
jnp
cmp
cmp
xor
sub
arpl
mov
and
dec
sarb
mov
in
daa
sub
jnp
mov
in
mov
js
ljmp
ret
decl
dec
cmp
cmpsl
pop
cmp
fsub
xchg
or
outsl
clc
pusha
jnp
arpl
mulb
cmc
push
push
jnp
rcrb
loopne
cmpb
adc
cli
repz
ret
jo
lret
pop
jnp
stc
ret
jge
lods
jnp
push
sub
out
and
add
mov
dec
mov
cmpsl
add
add
xchg
push
cmp
cwtl
jb
cs
jp
xchg
mov
adc
outsb
outsb
push
sbb
lret
das
pop
mov
jae
mov
jnp
dec
jl
cmp
sbb
jge
adc
push
jno
int
bound
mov
das
outsb
and
jg
popa
mov
mov
dec
inc
outsl
dec
ja
xor
add
jnp
cmp
xchg
lods
lret
push
adc
jecxz
mov
jnp
fadds
shlb
mov
stos
iret
pop
mov
das
jae
hlt
xchg
dec
jno
push
je
lcall
push
sarl
shlb
lea
pop
subl
in
xchg
sbbb
pop
popa
subb
loop
adc
dec
cmpsb
mov
and
xor
or
lret
test
pop
dec
cmp
cmpb
aaa
xor
mov
dec
xor
sbb
ja
push
mov
xorb
jmp
ret
cmp
sub
clc
imulb
popf
stos
jnp
int3
add
xor
call
cld
jle
stos
and
jnp
popl
cmp
dec
push
adc
push
or
pop
int3
hlt
add
rcrl
or
jnp
imul
and
testl
xor
sub
pop
mov
sbb
sub
test
push
and
inc
cs
jae
xchg
sbb
sti
jnp
sahf
pop
lret
sbb
jnp
and
cmpsl
push
sub
jnp
xor
inc
mov
sbb
mov
popf
add
inc
mov
xor
adc
out
ficoml
mov
sub
test
ss
or
bound
lret
dec
mov
jnp
lcall
jnp
fwait
in
jmp
jnp
stc
movsl
cs
xchg
mov
and
jecxz
jl
cmp
divb
jnp
scas
insl
bound
inc
jnp
and
xorl
mov
xchg
jnp
mov
cmp
lret
sahf
push
lods
cmp
shlb
shrb
ljmp
push
inc
add
xlat
ret
repnz
sub
jnp
int3
mov
sub
pop
jp
push
adc
push
fsub
sub
jnp
fdivl
add
imul
lds
lret
aam
or
xor
js
fcmovnu
pop
jnp
jge
pop
xor
sub
and
cs
mov
divl
or
push
sub
out
dec
mov
stos
inc
jno
xor
jle
lret
addr16
movsb
lret
scas
jnp
imul
sbb
fldenv
shll
negb
adc
push
jnp
adc
lock
add
cmp
mov
sbb
loopne
cmp
cs
jg
movsl
stos
fsubrp
jnp
sub
xor
add
jnp
pop
ret
jp
xchg
mov
jnp
sbb
lods
mov
iret
jg
pop
arpl
jbe,pt
sub
popa
inc
xlat
cmp
imul
pusha
test
pop
ss
cmpl
mov
imul
cs
and
fisubrl
dec
adc
jnp
pop
xlat
insl
shl
sub
ret
arpl
ss
pop
mov
adc
mov
or
fidivrs
mov
xor
push
jnp
sbb
push
mov
lds
mov
aad
sbbb
pop
push
push
outsl
xor
ret
sbb
and
decb
jl
cwtl
insl
mov
fisubrl
sub
popa
out
fstpt
out
lods
jnp
mov
jnp
adc
xor
lea
lret
mov
stc
jnp
cmp
lods
inc
sbb
int
jge
jnp
enter
adc
test
imul
jb
je
cmp
movsb
xor
es
clc
fwait
addr16
sub
mov
mov
lret
mov
clc
jnp
xor
mov
lcall
sbb
cli
jnp
inc
sahf
daa
in
das
push
data16
jo
xor
add
popf
gs
lcall
mov
inc
jnp
xor
negb
xchg
xlat
xchg
outsl
mov
clc
ss
cld
mov
lahf
jnp
cmc
enter
add
test
cmp
push
jnp
test
int3
dec
cld
jb
jl
out
xchg
push
repz
jnp
jmp
dec
dec
jnp
xlat
cmpsl
adc
push
add
sub
lcall
daa
inc
hlt
sbb
push
push
pop
jnp
inc
test
lret
cwtl
in
stc
imul
scas
and
call
add
adc
pop
out
jnp
ja
or
mov
mov
pop
lock
mov
ret
cmp
xchg
mov
out
cmp
jnp
and
cmc
roll
ja
insb
cltd
pop
popa
imul
mov
jl
dec
lea
std
push
js
loope
cli
jnp
or
and
cld
xchg
xor
popf
jbe
fisubrs
sbb
les
jne
mov
cmp
fcom
xor
mov
ljmp
mov
into
scas
repnz
jnp
and
shr
push
and
or
inc
adcb
jae
jp
jne
fnstcw
lods
or
cld
test
lock
pmaxub
movsb
jnp
leave
test
jnp
int
loop
xor
mov
mov
inc
or
in
sub
lret
je
push
sbbb
xchg
ja
xor
mov
ljmp
and
xor
andb
jnp
in
jmp
jae
jnp
pushf
push
adc
mov
mov
sub
lret
sub
adc
push
stos
or
enter
inc
jnp
cmpsb
fsub
insl
cmp
jnp
in
adc
clc
push
into
jnp
in
add
cli
and
in
xchg
lods
iret
cmp
lahf
or
jnp
jno
cs
sbb
mov
sarb
push
xchg
sub
mov
jnp
cmpsb
jmp
lods
jmp
jbe
sarl
jae
inc
xchg
sub
push
dec
fidivrs
lods
add
enter
or
jae
int
adc
mov
clc
or
or
xor
jne
jnp
add
sbb
imul
push
push
sti
sub
jnp
inc
and
jnp
fwait
sub
push
mov
lds
psubd
mov
rcl
ja
sub
cmp
inc
imull
jnp
sbb
and
push
jnp
push
mov
fldcw
mov
imul
cmp
or
or
xor
lods
mov
jb
cmp
pushf
mov
xchg
jge
sub
cs
jnp
daa
ljmp
jnp
ret
xchg
sub
jo
jnp
sbbb
decl
mov
repz
cltd
lds
jnp
jl
pop
cmp
xchg
jnp
aaa
push
sar
xor
icebp
jnp
fs
mov
dec
jae
aaa
jns,pn
jnp
inc
push
sti
iret
ret
jnp
fmuls
lret
dec
insl
sbb
jne
ja
ror
jnp
xor
cwtl
movsl
or
adc
jae
shrl
mov
ret
lds
mov
sub
jnp
push
in
sahf
xor
stc
pop
and
lods
les
adc
cli
and
add
jne
push
ljmp
xor
loop
scas
pop
push
xchg
mov
inc
idivb
jecxz
jbe
sbb
imul
pusha
jae
mov
mov
jne
mov
ret
jnp
clc
xor
lret
jnp
shll
xchg
mov
cmp
repz
aam
add
push
add
fs
adc
pop
negb
cmc
dec
cli
das
ds
adcl
jnp
mov
sub
cwtl
adc
xlat
jno
mov
inc
imul
pop
scas
xor
sub
pop
stos
push
out
mov
mov
add
mov
xor
fidivl
inc
repz
dec
bnd
inc
fmul
stc
or
sbb
imul
add
pop
mov
orb
mov
jle
jo
dec
jnp
adc
cmp
cli
imul
shr
pop
jnp
cltd
sub
dec
aad
cwtl
imul
lock
mov
inc
outsl
pop
mov
jp
xor
xchg
jnp
mov
cmp
sbb
imul
cmp
ret
xor
sub
xchg
and
mov
imul
inc
or
add
bound
add
inc
cltd
dec
lahf
jnp
fwait
xor
jnp
test
insl
aam
scas
cmpsl
jnp
jb
xchg
cmp
dec
sbb
jp
or
int3
addr16
pop
push
jnp
lock
mov
jne
pop
insl
sahf
adc
mov
mov
mov
pushf
mov
dec
mov
aas
ja
jnp
pop
push
jnp
xor
test
add
jae
dec
inc
or
ret
in
pop
sbb
outsb
cmp
jnp
lcall
sbb
call
inc
stos
mov
scas
mov
sub
enter
xchg
jnp
mov
push
repz
cmp
insb
sbb
imul
mov
sub
jnp
clc
adc
cmp
dec
jnp
ljmp
jnp
aaa
xchg
pop
pop
jns
insb
jbe
jg
mov
lods
jp
push
outsl
xlat
dec
push
cmp
add
and
aaa
pop
adc
xchg
out
cltd
mov
ficoms
lcall
repnz
nop
pop
mov
mov
gs
int
jmp
jecxz
out
imul
je
xchg
or
notb
jae
in
or
adcl
scas
in
sub
jnp
loope
pop
push
xor
mov
ficoml
idivl
or
jae
ja
mov
cmp
or
lock
mov
mov
shrl
arpl
jbe
sub
clc
gs
jnp
push
cmpsl
pop
sub
jnp
jbe
cmp
mov
add
jecxz
push
fsub
imul
dec
imul
insb
add
jnp
and
mov
cs
sbb
cmc
mov
add
test
cltd
xor
jnp
call
xchg
movsb
jnp
add
outsl
mov
dec
lahf
cmp
push
out
cmpsb
jne
push
pop
jnp
fbld
lods
jnp
aam
sub
sub
push
cmc
jo
outsl
mov
mov
sub
jae
addr16
cmp
out
daa
mov
pop
pop
mov
pop
rorl
aam
jecxz
mov
jae
sbb
pusha
or
dec
pop
jnp
jg
adc
jnp
push
lock
js
jb
mov
xor
repz
ss
push
pop
push
mov
adc
call
jnp
outsb
mul
inc
mov
inc
jnp
pop
nop
imul
jmp
dec
mov
outsb
mov
mov
cmp
mov
dec
adc
xchg
or
add
imul
pop
jnp
jge
fwait
push
inc
clc
insl
jle
jp
inc
aad
js
les
mov
jo
mov
insb
mov
mov
lret
popa
ljmp
rcrb
cmp
dec
fcomps
inc
insl
push
jmp
or
and
mov
sub
jnp
adc
sbb
jne
jnp
and
add
pop
mov
sub
push
sub
jmp
lock
mov
jnp
add
sub
imul
loop
std
xor
insl
add
jge
pusha
sbb
das
ljmp
pop
enter
sub
leave
jae
push
es
scas
cmp
sub
inc
inc
test
pusha
push
mov
scas
notl
jnp
enter
ss
test
push
negb
inc
jp
cmp
pop
in
aas
mov
pop
insl
mov
jo
hlt
push
jnp
xor
fildl
aaa
jle
sbb
test
jbe
dec
dec
cli
sub
and
mov
mov
push
negb
ja
shlb
scas
hlt
jne
ljmp
sub
jnp
adc
pushf
inc
lods
mov
sbb
jne
pusha
push
test
js
cmc
in
cli
std
mov
dec
xor
xchg
imull
dec
ja
ret
cmp
xchg
sti
repnz
push
mov
xor
ja
rcr
jge
inc
sbb
iret
jnp
adc
jle
or
push
xor
pop
jnp
cmp
sub
or
mov
inc
xchg
sub
int3
jnp
or
and
and
pop
dec
popa
push
xchg
mov
icebp
push
adc
sbb
cli
or
ja
ja
push
push
adcb
jnp
ljmp
jnp
or
sahf
pop
cmp
mov
call
add
mov
dec
jnp
cwtl
insl
divl
int
cmp
cmp
in
loop
jnp
cs
jge
pop
jno
jnp
xchg
mov
xor
aad
das
jnp
mov
jns
jnp
movsl
cmp
inc
movsb
xchg
jnp,pt
and
pop
jnp
mov
mov
jnp
ljmp
cmp
inc
loop
sbb
xor
test
sbb
mov
jae
sbb
into
imulb
jnp
es
mov
cld
outsl
xchg
outsb
push
hlt
mov
bound
imul
push
cwtl
mov
dec
mov
das
jae
xor
or
aad
or
cmpsb
pop
lret
pop
data16
fldt
jnp,pn
or
lahf
xor
xchg
rcr
lcall
push
enter
mov
pop
outsl
rorb
dec
lret
in
imul
fnstenv
in
jnp
mov
mov
jnp
cld
xor
lods
jnp
cmp
adc
mov
jnp
and
mov
aaa
push
out
mov
or
xchg
inc
xchg
jnp
or
push
mov
jns
push
sbb
cmp
imul
sub
xchg
into
push
or
xor
lock
mov
jo
and
mov
add
jae
mov
jnp
dec
or
sbb
mov
hlt
dec
jnp
xor
std
orb
and
lcall
jns
jne
add
jnp
xchg
xchg
jnp
sub
xchg
and
in
jnp
mov
in
mov
or
dec
loop
lock
aas
sub
xchg
ja
sbb
add
aaa
enter
sarb
jnp
xor
cmp
pop
xor
cmpsb
mov
inc
icebp
xchg
adc
stc
in
es
imul
imul
fs
xchg
or
sub
jnp
push
lahf
das
xor
lods
jne
xlat
jnp
mov
out
sub
dec
jnp
dec
in
js
mov
sub
int
lds
jnp
sbb
lock
imul
cmpl
sbb
js
pop
jnp
hlt
imul
inc
test
imul
jb
pop
sub
notb
stc
jl
jae
subl
out
fidivrs
xchg
adcl
pop
mov
jnp
shlb
cmp
pop
cwtl
test
fidivrl
and
stc
inc
je
not
out
sbb
movsl
mov
outsb
out
ss
sbb
fwait
and
imul
rclb
sbb
xchg
jne
sub
xor
mov
or
test
fnstsw
mov
push
xor
and
dec
sbb
mov
jnp
lret
inc
mov
cmp
add
mov
popf
cmp
fwait
orb
lahf
pop
or
cmp
jnp
jno
mov
pop
cmp
pop
add
xchg
and
mov
outsl
inc
bound
cld
pusha
test
sti
dec
cs
mov
outsb
jae
jbe
jnp
push
mov
cmp
adc
gs
xchg
jmp
jae
lods
xor
ss
out
push
mov
jbe
jnp
lea
testb
ss
jnp
xor
mov
in
dec
fildll
xchg
xor
cld
fcoml
test
outsl
push
or
mov
jb
push
fdivrl
xor
outsb
jnp
in
lea
mov
fistpl
icebp
ds
xchg
cmp
inc
or
cwtl
lea
jae
sbb
call
ja
push
popa
pop
sub
pop
jnp
stos
rcrl
jnp
and
dec
repnz
jnp
cmp
shll
cmp
push
ret
mov
jle
cs
jnp
cmp
or
fs
xchg
stos
xchg
outsl
or
xor
sbb
mov
outsl
pop
mov
jnp
mov
or
jb
jnp
stos
test
jnp
lret
xchg
jno
mov
jnp
cs
add
xchg
pusha
and
dec
cmp
lock
scas
out
jle
or
and
imul
xor
mov
lea
jmp
pusha
jnp
xor
test
cmp
imul
sub
ja
pop
push
cmp
sbb
mov
jne
inc
clc
cmp
xor
dec
push
scas
jae
ds
imul
xor
ss
jne
imul
loopne
out
sbb
out
das
mov
test
ja
js
jno
mov
lahf
xchg
in
mov
clc
jle
or
adc
pop
push
mov
or
ds
or
jnp
fadds
fisubrl
dec
imul
cmp
fxch
loopne
sub
fisttpl
lods
xor
pop
jae
ss
bound
iret
lods
je
jnp
jae
movsl
mov
loop
mov
insb
notl
jmp
mov
dec
sub
or
pop
dec
insb
sbb
inc
xchg
ljmp
testl
and
test
sbb
cmp
mov
repnz
int3
addr16
cs
adc
mov
jnp
jns
pop
loop
outsb
or
jnp
pushf
pop
cmp
dec
jnp
cltd
mov
mov
xor
pop
repz
cmp
popf
jo
jmp
imul
lcall
outsl
fcmovnu
jnp
ss
xchg
mov
xor
jne
xor
jnp
dec
mov
lcall
arpl
pop
sbb
sti
int
xor
ror
outsl
pop
sub
mov
dec
cwtl
lock
jbe
jne
jae
dec
push
lret
mov
fdivl
sbb
or
mov
addr16
aas
xchg
into
ja
mov
loopne
sbb
dec
iret
in
add
xchg
repnz
jnp
aam
shlb
lret
int3
sub
cmp
movsb
jnp
adc
adc
pop
lods
arpl
mov
fsubrl
jl
jno
dec
push
add
push
push
sbb
iret
jnp
repz
stc
pop
sbb
lods
rcr
lret
pusha
jb
fidivrs
xor
adc
and
das
push
cmp
jne
pop
cmp
xor
jne
push
scas
xchg
enter
sub
call
jnp
test
cmc
nop
dec
mov
fmull
mov
out
jge
adc
test
loop
mov
push
les
mov
mov
jg
or
jnp
mov
loope
cmp
popf
ljmp
jnp
lods
lds
sbb
xchg
and
subl
outsl
ja
movsl
out
aaa
jnp
adc
mov
cs
idivb
ret
fsubl
out
jno
xchg
jnp
lods
mov
into
imul
in
movsb
leave
jmp
jae
sub
or
mov
cmpsl
inc
mov
cs
jnp
fisttps
push
nop
push
add
jnp,pn
mov
les
clc
and
mov
xchg
jnp
shrl
jnp
inc
test
loopne
je
mov
add
out
add
adc
pop
jnp
cmp
jmp
lods
dec
pop
call
sbb
sbb
inc
adc
xor
sbb
xchg
in
insl
pop
jnp
mov
sbb
cs
mov
ja
ret
adc
sub
cs
imul
pop
mov
ret
lods
or
adc
lcall
fildll
data16
std
bound
pop
mov
insl
int
fnstcw
cmp
cmc
insb
sub
fstpt
adc
imul
ss
jnp
popa
cmp
mov
mov
test
shlb
sub
pop
enter
sbb
imul
cmpsb
fstpt
xchg
inc
mov
data16
or
jae
outsb
sub
and
sub
cmpsb
fmull
sbb
jb
xchg
sub
int
jnp
cmp
fdivrl
mov
ja
inc
ror
repnz
fnstcw
shll
into
push
icebp
outsb
adc
je
and
cmp
mov
out
pop
int
sbb
adc
ja
jmp
xlat
sahf
or
jne
fdivrp
add
aad
scas
mov
rcrl
cmpsb
sbb
jnp
mov
fildll
mov
loope
fnstsw
lock
cltd
test
push
xchg
dec
dec
adc
pop
jns
ja
xchg
das
stos
push
add
push
mov
fucom
inc
pop
sub
and
loopne
outsl
loop
scas
mov
jnp
scas
lea
mov
sub
fldt
xlat
dec
cmp
mov
jg
out
push
and
jnp
cmpsl
push
mov
aam
jnp
pop
arpl
sub
push
std
jle
jae
jne
cmp
sahf
mov
fsubr
jnp
sbb
jmp
add
pop
pushl
outsl
insl
xchg
xor
dec
pop
outsb
out
jo
pushf
imul
mov
sti
mov
cmc
mov
and
cwtl
lods
jle
in
fucom
cmp
insl
sub
and
mov
sub
ds
dec
int3
aaa
pmaxsw
test
jnp
sbb
incb
je
addr16
outsb
pusha
hlt
lock
inc
pop
shl
sbb
adc
cmp
pop
cmpsl
imul
fwait
sub
in
sub
pop
mov
movsb
jge
jo
rcll
jae
push
and
sbb
repnz
inc
cs
aaa
cmp
loopne
out
or
jnp
push
ljmp
push
outsl
into
xchg
in
lcall
add
cmp
stc
cmp
in
push
mov
cmpl
jno
jnp
int
adc
pusha
cmp
scas
jae
mov
test
jnp
bound
into
jnp
add
cmc
rorl
xchg
sbb
xchg
jnp
popa
xchg
hlt
lcall
dec
inc
dec
jbe
cmc
fcomps
push
dec
xchg
adc
push
push
add
scas
mov
aaa
fistps
cwtl
push
and
int
sbbl
imul
push
in
call
jmp
aas
lods
mov
xchg
jae
jp
mov
dec
jnp
push
jge
xor
jnp
addr16
repnz
jle
mov
fdivr
sub
pop
ss
mov
push
sbb
incl
add
mov
loope
jbe
outsl
bound
inc
cmp
mov
and
or
insb
stc
rorb
pop
and
psllq
jbe
vmread
inc
pop
pusha
mov
xor
ret
push
jae
mov
test
lcall
jnp
leave
push
rorb
xchg
mov
ss
push
fadd
or
pop
sub
lahf
out
jno
jnp
fnclex
xor
jnp
icebp
jmp
mov
insl
add
mov
push
jae
push
fisubl
cmpsl
mov
xor
in
mov
jnp
packsswb
xorb
out
enter
outsl
push
in
jo
jnp
dec
adc
and
push
cmp
nop
shrb
or
bound
jnp
iret
and
in
xor
jge
push
inc
mov
arpl
cmp
mov
dec
mov
push
es
mov
imul
add
cli
das
out
lods
xor
les
jnp
inc
jp
cli
sbb
test
jne
push
cmc
outsl
movsl
imul
aam
sub
add
jl
push
lds
icebp
rolb
pop
popa
fisttpl
inc
leave
dec
sub
xor
lret
and
cld
adc
and
cmp
pop
jp
push
sbb
push
dec
ds
jb
jne
ja
xchg
push
adc
cmp
sub
xchg
sbb
repz
mov
outsb
mov
cltd
lahf
inc
fidivrs
sub
ds
data16
or
lds
dec
bound
in
push
mull
lock
mov
and
dec
leave
add
repz
jnp
test
adc
and
movsl
cs
or
scas
shll
enter
imul
lahf
cmp
int
pop
mov
mov
push
adc
adc
jnp
sub
into
icebp
mov
int3
jnp
fwait
js
jmp
xor
jnp
push
jle
test
call
dec
pop
push
dec
xor
sub
jnp
push
mov
aas
pop
scas
jae
cmpsl
jnp
in
adc
and
or
add
sti
mov
sbb
sbb
sub
mov
jnp
pushf
and
jnp
add
cmp
js
fisttps
or
add
jnp
jge
inc
jb
sarb
aam
icebp
adc
jnp
xor
dec
pop
jnp
nop
outsb
es
push
inc
imul
mov
ja
orl
mov
add
sarb
cli
leave
les
add
inc
push
rclb
jnp
or
loopne
inc
cmp
jnp
ja
jge
mov
jl
and
jnp
jg
popf
ss
ja,pt
les
jnp
popf
cs
test
or
sbb
push
daa
out
jnp
sub
or
mov
jnp
dec
or
dec
fcmovnbe
divl
fldcw
cmp
shll
test
xor
ja
call
push
lret
repnz
aaa
adc
mov
jnp
jp
scas
mov
addr16
push
shll
mov
int3
dec
ret
jnp
cmp
pop
imul
pop
or
pop
movsl
jg
jne
in
jnp
lods
mov
cmp
dec
sub
mov
fcoms
cmp
out
adc
mov
cmp
jb
ja
xchg
jnp
out
xchg
lock
push
int3
sbb
lret
inc
sub
inc
push
jnp
not
xor
xchg
enter
push
jae
sbbb
cmp
sarl
aas
hlt
dec
test
mov
cmc
sbb
movb
addr16
xor
mov
inc
cmp
add
insl
fstpl
pushf
shr
ja
mov
call
mov
inc
adc
sbb
fsubrl
sahf
shl
add
enter
aad
inc
lret
adc
cmpsl
rcr
mov
inc
dec
mov
das
jl
shrl
ficoml
jnp
xchg
push
insl
mov
or
fadds
je
lds
jbe
cltd
sbb
loope
xchg
fcmovu
mov
jnp
adc
lea
mov
add
movsb
mov
push
fimuls
std
dec
pop
outsb
xchg
je
xchg
jg
in
out
movsb
jo
xchg
ss
cmp
xor
ja
pop
sub
jp
dec
cmp
jnp
lock
cltd
out
lret
hlt
jnp
cmp
pop
movsb
outsl
mov
mov
lods
pusha
daa
sbb
push
push
add
push
lea
in
pop
stc
and
or
mov
sbb
mov
fwait
movsl
pop
jnp
nop
xor
sub
lea
jnp
mov
fstl
mov
mov
pop
sub
xor
ja
enter
jnp
xchg
adc
cmp
dec
ljmp
in
aam
jne
inc
jnp
icebp
lods
mov
adc
punpckhwd
sub
insl
sbb
lcall
lods
popf
jnp
in
lods
repnz
sarl
iret
sub
out
lods
int
jnp
cmp
mov
sub
fcmovnu
adc
arpl
jo
sar
xchg
out
jnp
bnd
add
das
sbb
or
sbb
out
or
push
dec
push
jmp
sbb
pop
pop
jns,pn
push
sub
jo
xchg
push
or
test
add
hlt
outsb
and
sbb
fsubl
out
mov
or
lret
xchg
sbb
mov
cwtl
jne
mov
push
sub
jnp
and
adcb
enter
int3
lods
xor
jmp
iret
lcall
dec
jne
pop
xchg
pop
daa
cmp
ss
js
xor
or
or
mov
cmp
or
in
mov
in
jae
in
xchg
addr16
dec
popf
cmc
mov
push
or
mov
pop
dec
js
mov
mov
loope
pushf
jne
stos
sbb
cwtl
lods
ja
in
push
pop
sub
bound
imul
mov
out
mov
mov
bound
or
or
je
mov
jne
sbb
fdivp
int
sbb
dec
iret
fdivs
stc
push
sub
jecxz
sahf
inc
lods
sbb
setl
das
jnp
mov
test
jns
fucomi
insb
shll
sbb
cwtl
xchg
jmp
jb
loop
jbe
jnp
push
mov
inc
mov
jae
fmul
ljmp
test
push
mov
adc
lret
and
cmp
sub
hlt
std
jnp
dec
imul
sbb
adc
out
jmp
or
cwtl
or
ja
or
xor
jb
dec
xor
pop
jmp
jnp
push
subl
dec
cli
hlt
mov
call
and
jne
sub
sub
push
sbb
sub
inc
jle
inc
pop
jnp
mov
shrb
jne
cmp
or
and
pop
outsl
sub
fimull
jnp
mov
lea
pop
in
jnp
mov
addl
pop
cmp
das
jnp
arpl
cmp
xor
andl
mov
popf
add
sbb
adc
je
push
aas
pop
aad
in
outsb
dec
pushf
dec
cmpl
xor
flds
cmp
lods
mov
cmpsl
jnp
sbb
add
in
loop
or
sub
adc
adc
shll
mov
jne
sub
dec
stc
int3
ja
xor
dec
test
mov
in
shlb
js
std
imull
leave
mov
aam
jnp
in
add
aas
jmp
sbb
lcall
movsl
sub
mov
aam
and
and
sbb
test
adc
dec
scas
mov
repz
jne
dec
es
aas
fwait
mov
dec
add
incl
xor
fidivrs
test
cmp
jnp
push
xlat
mov
jmp
jge
fistpll
loop
stos
adc
push
mov
dec
sbb
sub
call
imul
ffree
sbb
add
cwtl
test
xor
jp
or
adc
and
data16
mov
mov
frstor
push
xchg
or
inc
mov
or
mov
fstpl
mov
jp
js
imul
roll
inc
lahf
pop
pushf
push
add
stc
stos
je
pop
add
mov
pop
mov
adc
jp
mov
out
fwait
lods
adc
pop
imul
cmp
push
lret
int3
outsl
jnp
jecxz
sahf
push
xchg
sub
fbld
pop
ja
std
adc
jp
adc
jmp
stc
sahf
bound
and
mov
imul
mov
mov
xchg
out
xor
scas
and
mov
je
push
mov
mov
add
xchg
jecxz
or
xchg
lret
cmp
rol
repz
sbb
add
loope
scas
stos
clc
fldl
pop
jbe
in
mov
punpckhdq
cld
int
cmp
cmc
adc
jne
jp
fisttpll
push
dec
pop
lds
cmc
add
inc
lea
clc
xor
adc
jne
fldl
pop
inc
jl
jno
scas
pop
outsb
sub
ss
jbe
fstp
pop
pop
sbb
mov
popa
pop
dec
dec
push
ret
stc
nop
pop
jnp
mov
jp
icebp
adc
arpl
addr16
pop
pop
imul
fwait
or
pop
pop
jecxz
jmp
xor
xor
popf
cmp
mov
sbb
mov
dec
push
mov
sbb
repnz
cmc
fcmovnbe
mov
into
stc
scas
mov
push
mov
xchg
push
fwait
mov
in
out
push
push
pop
pop
cmc
shrb
inc
in
ret
jbe
jp
jge
mov
repz
arpl
xchg
xor
outsb
leave
addr16
scas
pop
sub
clc
cmp
xchg
gs
and
and
ja
gs
test
push
push
insb
mov
sbb
xchg
mov
jae
imul
pop
stos
mov
imul
xchg
aas
jns
pop
negl
mov
repz
inc
mov
loop
mov
push
rclb
cmc
leave
sub
lock
jg
cmp
push
shr
mov
stc
pop
jle
sbb
ret
fdivr
xchg
jns
arpl
ret
aam
cmp
pop
je
cmc
xor
push
xchg
or
icebp
lcall
or
mov
outsl
mov
cltd
imul
pop
inc
jecxz
or
xor
mov
jle
cmp
out
stos
jmp
mov
aas
popa
iret
ffree
sub
pushf
pcmpeqw
or
dec
fstp
int
jbe
pop
shll
mov
lods
mov
xchg
insl
jne
or
sub
movsb
addr16
cld
js
fimuls
outsb
pushf
ja
iret
jae
push
js
out
jo
in
out
outsl
xor
cmp
out
mov
sub
divl
arpl
jp
imul
xchg
pusha
ja
cwtl
cmp
pop
dec
pop
sub
adc
lods
dec
add
cmc
pusha
enter
into
xchg
fiaddl
push
movsb
mov
mov
xor
jb
jne
test
mov
pop
imul
fsubl
insb
jecxz
in
xlat
jns
cmc
mov
cmpsl
cmpsb
icebp
mov
hlt
mov
adc
jle
adc
clc
movl
mov
addr16
or
int3
call
clc
fucomp
scas
push
adc
mov
xchg
arpl
shll
fwait
in
lods
divl
loope
inc
mov
jo
hlt
loope
je
div
xor
mov
inc
cmpsl
aam
mov
push
pop
mov
lret
js
jns
loope
sar
in
push
mov
cmp
rorl
stc
fisttpll
cmp
aaa
jmp
lret
pop
jae
mov
dec
jb
jmp
mov
outsl
xor
and
push
push
push
jp
cmp
add
jae
out
cltd
testb
cmp
push
repnz
inc
push
jecxz
fnsave
icebp
testl
mov
push
pusha
test
mov
sbb
jle
pop
dec
jmp
mov
ret
jbe
fdivrl
jns
outsl
movntq
xor
loop
in
daa
stc
jmp
jne
frstor
inc
imul
lock
push
jmp
inc
mov
test
inc
xor
fs
push
sbb
add
jne
adc
fnstsw
or
leave
inc
jbe
out
cltd
mov
xchg
cld
popf
js
adc
jp
call
jg
mov
and
push
push
xchg
scas
sbb
dec
cmc
pop
xchg
fldt
xor
js
scas
cli
sahf
jle
xor
xchg
out
xor
xchg
pop
sbb
sti
mov
dec
mov
sbb
push
ja
pop
or
fwait
in
jecxz
mov
jge
fsubrl
cmp
xor
push
lea
mov
push
mov
sbb
push
jmp
cmp
sub
sbb
sub
into
jne
pop
insb
outsl
call
mov
dec
movsb
and
pop
dec
fcoml
mov
pushf
pop
push
out
fimuls
mov
lea
pop
stos
iret
fcmovnbe
dec
jnp
and
push
push
je
mov
pop
nop
dec
and
aaa
cmp
cmc
dec
jns
stos
xor
es
lret
cwtl
repz
popf
mov
leave
push
mov
xor
sub
test
scas
out
in
jmp
cmc
xlat
xor
xor
mov
sbb
pop
xor
jge
mov
repnz
mov
loopne
xor
cld
arpl
sbb
cmc
sbb
jb
jne
mov
push
xor
mov
cmpsb
sbb
ret
daa
mov
fwait
das
or
out
mov
xor
imulb
outsl
std
stos
sahf
mov
pushf
in
or
jg
jnp
mov
out
cmpsl
jp
xchg
mov
add
pop
popf
pop
sarb
adc
jmp
shl
pop
fidivl
js
fisttpll
or
inc
test
sbb
call
testb
out
repz
ds
pop
or
int3
mov
cmp
cmp
dec
repz
addr16
push
ret
cmpsb
mov
jne
or
popa
pop
dec
add
cli
xor
inc
data16
das
mov
and
dec
dec
mov
add
inc
ss
dec
sbb
xor
idivl
cmp
and
fst
pop
push
xchg
jecxz
cmpsl
cmp
cmp
les
jb
inc
out
push
lret
jae
push
cmp
jno
stos
mov
mov
xchg
in
fwait
dec
ljmp
aad
pop
mov
mov
imul
push
add
aas
leave
jnp
clc
jge
insl
mov
in
cli
jmp
ljmp
jns
in
cltd
pop
jp
and
iret
jno
or
fnsave
push
jl
pop
pop
sarb
sub
loopne
jne
dec
jmp
mov
or
aam
cmc
stos
pusha
clc
dec
out
repz
movsb
aaa
int
push
sbb
pop
in
stos
fucomi
scas
popa
pop
dec
es
cmp
loope,pn
mov
push
dec
mov
jae
sbb
inc
jge
pusha
js
into
cmp
xlat
rcrb
imul
pushf
iret
xor
pop
adc
push
lret
in
dec
insb
add
push
pop
push
xor
jnp
xchg
repz
into
scas
ret
cmp
jmp
push
add
rcll
fsubrl
sub
aas
sti
inc
push
push
inc
fdivl
mov
stc
mov
stos
or
lret
fildl
inc
fists
pop
pushf
fdivrl
call
lock
mov
jp
adc
cmp
pop
lcall
jl
movsl
pop
adc
mov
mov
scas
pop
xchg
shrl
stos
stc
push
xor
ja
jmp
push
pop
sbb
sbb
aam
mov
call
scas
cmc
pop
hlt
add
mov
push
fucomip
sbb
push
push
mov
jmp
stc
mov
jecxz
adc
mov
nop
xor
pusha
sub
jle
cmpsb
aas
pop
jmp
ret
fmulp
loop
test
xor
cmc
sbb
cmp
and
sbb
and
rorl
gs
mov
xor
or
mov
repz
in
sti
pop
mov
xchg
add
divb
sbb
push
in
scas
jmp
mov
lcall
cmp
in
mov
xchg
and
loopne
mov
push
ret
or
push
ljmp
imul
adc
pop
xchg
bnd
cmp
js
shr
add
mov
xor
in
mov
sbb
cltd
sub
mov
push
loope
add
dec
cmpsb
mov
mov
daa
clc
iret
stos
pop
ds
loopne
test
cli
xor
jl
movsb
sar
push
pop
repz
mov
in
jmp
jns
test
call
ss
dec
clc
jp
mov
iret
and
lret
call
cmpsb
in
insl
push
mov
inc
cltd
mov
pop
test
and
sub
or
sti
enter
das
mov
sbb
mov
jb
xor
or
pop
fwait
je
push
ja
idivl
ja
push
rcrl
xchg
push
divb
mul
mov
popa
cmc
js
jl
jae
cmp
jmp
js
add
cmp
aaa
mov
pop
cmp
out
hlt
pop
imul
imul
adc
sub
mov
jmp
cmp
aaa
sub
dec
jmp
push
sub
sti
scas
push
jbe
mov
insb
mov
push
jno
mov
jns
mov
in
pop
jno
ja
js
cmp
and
xor
inc
cmc
push
repz
in
jb
xor
mov
dec
jbe
jp
aad
sti
iret
mov
mov
push
jo
xor
outsb
mov
stos
cmc
jns
jp
mov
scas
imul
cmp
sbb
repnz
jp
clc
sti
addr16
jp
outsl
cltd
jns
mov
je
cmp
sub
das
inc
aam
aad
mov
pop
bound
dec
aaa
jo
stc
jp
xchg
cmp
cmp
xor
xor
xor
mov
jae
jo
jne
jae
jne
xchg
fistpll
jp
hlt
xchg
jb
mov
cmpsl
lods
popa
cmc
jp
outsb
xor
push
jae
jp
mov
cmpsl
out
jp
xor
sti
repnz
stc
divb
jp
cmp
imul
jno
js
jb
gs
hlt
mov
mov
sti
jb
inc
inc
icebp
jae
das
out
mov
inc
mov
cmpsl
cmp
popa
jae
cmc
jb
sbb
mov
out
pop
mov
ss
jecxz
dec
jnp
inc
dec
cmp
outsl
mov
cmp
lret
cmp
sbb
cvttps2pi
adc
xor
push
inc
mov
sbb
call
mov
jp
enter
jbe
dec
dec
pusha
into
pop
lods
dec
pushf
xor
mov
lcall
mov
data16
test
cmp
into
jl
push
fildll
xchg
outsl
int
imulb
mov
pushf
outsl
cmovbe
dec
adc
mov
fdivrl
outsl
fnsave
shr
pop
arpl
jp
or
test
pop
fwait
iret
or
idiv
mov
mov
lods
or
cmc
mov
icebp
sbb
enter
std
jbe
mov
or
jne
repnz
push
cmc
sbb
jae
xor
cwtl
jg
shll
dec
mov
fsubrl
mov
dec
cmpsb
jne
fucomp
ja
jg
cld
cmp
in
jmp
push
fnstenv
gs
mov
sub
add
push
scas
cmp
pushf
cmpsl
jnp
in
and
sbb
das
cli
inc
pushl
jno
insb
mov
sbb
jecxz
sbb
dec
clc
and
cmp
fstpl
imul
sbb
push
push
sub
inc
inc
pop
int3
jge
cmp
in
lret
outsl
movsl
cmc
push
sbb
into
xor
arpl
cltd
pop
pop
mov
jle
dec
fmulp
dec
push
repz
scas
push
mov
mov
jne
xlat
imul
inc
out
push
dec
ljmp
sbb
sbb
ja
mov
pop
pushf
pop
out
sbb
sbb
sub
in
dec
movsl
cmp
jne
dec
orl
cmpsl
cmp
push
in
cmp
jl
imul
in
mov
addr16
loopne
pop
aad
xor
mov
jmp
aad
popf
jno
inc
push
xchg
imul
sbb
adc
les
jl
popa
jnp
lahf
ret
daa
sub
cmpsb
and
pop
xchg
fldl
xchg
movl
mov
jg
jp
add
and
sub
sbb
cwtl
jecxz
xchg
enter
inc
imul
loop
test
jae
mov
mov
mov
mov
into
fdivl
pusha
inc
imul
in
jecxz
jae
jno
jne
mov
dec
fdiv
cmpsl
jns
dec
push
arpl
fstpt
mov
jb
idiv
maskmovq
negl
aaa
scas
dec
mov
mov
dec
jl
xor
sti
out
push
jo
fsubrs
in
pushf
shrl
dec
push
inc
adc
outsb
sbb
shrb
xor
mov
jne
push
mov
add
mov
or
std
in
xchg
int
pusha
ds
or
cmp
or
push
inc
jae
xchg
dec
xchg
lret
mov
push
clc
aas
jb
mov
sbb
inc
jno
pop
pminub
jl
adcb
jle
cmc
ljmp
fstl
stc
pushf
arpl
xchg
jge
mov
in
pop
and
or
in
test
jmp
and
jp
jnp
scas
movsl
jmp
adc
cmp
add
fisttpl
cmpl
jne
fldl
std
sbbl
xchg
xchg
ficoml
cwtl
js
clc
fnstsw
lret
push
lcall
cmp
push
push
jmp
test
in
xchg
out
in
pop
and
sbb
mov
mov
push
xlat
icebp
fsubl
xor
cmp
cltd
cmp
fisttps
xchg
lahf
imul
sbb
call
fstpl
jnp
sbb
push
lds
mov
adc
mov
push
mov
rorb
dec
in
clc
cmp
xor
dec
lcall
in
adc
mov
mov
xchg
push
ficomps
mov
das
nop
or
mov
jne
cmc
adc
hlt
push
and
gs
imul
in
xchg
push
mov
sbb
dec
orl
add
mov
pop
xchg
cwtl
jg
and
pop
mov
sub
mov
push
push
cmp
sbb
cmp
and
aas
inc
xlat
fmull
in
jae
outsl
jns
mov
sub
inc
jg
pop
mov
dec
test
mov
push
jecxz
mov
pop
push
push
mov
in
mov
aaa
mov
fisubs
mov
cli
mov
push
push
mov
mov
sbb
outsl
test
out
cmc
in
in
cmp
sti
lods
sbb
icebp
mov
lahf
xor
les
movsl
xchg
and
cmp
outsl
imul
shll
test
outsl
iret
testl
std
sub
and
dec
sbb
cmp
mov
and
fwait
or
inc
and
lcall
cmp
addl
ja
jns
cld
test
jne
sbb
in
repz
jae
scas
push
jmp
js
ljmp
mov
lods
mov
jmp
mov
xlat
xor
cmc
or
dec
cli
call
ljmp
out
or
rep
cmpsb
outsl
inc
scas
fucomi
add
sub
pop
cld
dec
or
dec
inc
fxch
aad
movsb
fldcw
mov
and
loope
das
push
aaa
cltd
lods
daa
xor
mov
xchg
cmpsl
stc
stos
fbstp
mov
sub
jno
data16
jns
dec
stos
xor
fisubrl
sbb
scas
and
sub
les
mov
dec
jne
mov
fdivrl
in
push
jmp
daa
mov
inc
xor
jae
int3
insl
mov
pop
jg
jecxz
xchg
xchg
cmp
sahf
stos
cs
xchg
mov
mov
stc
test
push
pop
pop
and
js
sbb
or
jg
ljmp
sbb
lds
ret
outsb
test
mov
out
xchg
mov
jg
pop
mov
iret
arpl
xchg
mov
lods
bnd
outsb
mov
xchg
jbe
and
pusha
pop
or
inc
mov
add
icebp
add
pop
sbb
orl
push
in
jb
dec
jne
sbb
out
jmp
call
fucomp
pop
std
jmp
idivb
mov
or
dec
out
or
dec
int
daa
cmc
insb
es
jl
xlat
cmp
mov
push
sub
jle
stc
andl
cmpb
scas
inc
mov
in
out
out
jne
clc
jge
mov
dec
in
mov
out
sub
rcll
cmp
mov
sbb
les
jl
stos
xchg
loope
js
std
cmc
in
repnz
movsb
jne
cmp
int
loop
icebp
movsb
jns
mov
pushf
cmc
or
push
push
ror
lock
rep
ficoms
fwait
out
fucomip
nop
mov
ficoml
mov
pop
pushf
jecxz
sub
cmp
fildll
mov
jno
fidivrl
xor
push
jne
clc
pop
aas
mov
mov
in
and
fidivs
pop
fwait
scas
xchg
sub
jnp
jl
test
pop
hlt
sub
ja
inc
or
outsb
mov
dec
push
jp
arpl
adc
mov
push
mov
inc
mov
push
stos
jl
test
lds
dec
xor
imul
jmp
sub
jle
leave
pop
lods
leave
out
push
sub
mov
in
arpl
cmp
push
or
mov
pop
mov
xchg
dec
mov
clc
xor
xchg
jo
jbe
mov
xchg
nop
mov
push
mov
aam
pusha
or
repz
jecxz
sub
cmc
inc
cld
popf
sub
out
pop
idivl
mov
or
fmull
jns
mov
pushf
test
frstor
sub
add
pop
pop
dec
sbb
call
or
sub
int3
mov
sbb
in
shlb
add
lods
mov
test
faddl
dec
mov
sub
lahf
idivl
jae
xor
cmp
lock
outsl
push
ds
stc
push
cmpsl
mov
xchg
jecxz
or
adc
sbb
les
std
jmp
jns
mov
mov
std
ret
add
jge
mov
and
jns
scas
jne
icebp
in
xchg
icebp
mov
jmp
cmp
orl
sub
lods
outsl
push
daa
add
pop
or
cmp
xlat
fucomi
push
jno
xor
mov
stos
jmp
mov
fistps
mov
repz
lods
mov
sub
sub
dec
aas
mov
dec
lock
adc
hlt
jae
sub
cmp
sub
rorb
arpl
pop
cmc
test
lret
and
jne
das
mov
lock
pop
das
jbe
or
lcall
lahf
xlat
ljmp
adc
or
mov
adcb
jecxz
test
dec
or
sti
sub
inc
aaa
sahf
inc
pop
iret
lret
lcall
xchg
movsb
mov
lcall
jae
stos
lods
out
mov
mov
repz
gs
repnz
mov
dec
inc
jae
sub
lcall
pop
jns
mov
cmpsl
insl
loopne
loop
mov
fucomip
aas
mov
dec
fadd
out
insl
mov
jne
adc
cmp
mov
ja
shlb
mov
or
dec
jbe
in
inc
inc
mov
out
ljmp
loope
jno
arpl
mov
icebp
pop
cmp
dec
cmp
mov
inc
mov
mov
jbe
pop
stos
pop
pusha
push
fwait
jbe
aad
scas
mov
lods
fstl
mov
pop
lret
outsl
int
mov
add
jnp
mov
adc
out
dec
push
cmpsb
xor
pop
mov
jp
inc
add
push
jne
cmp
repz
rcr
add
lods
or
mov
push
cmc
push
mov
xor
and
icebp
pop
outsb
std
scas
or
testl
pop
inc
iret
mov
repz
icebp
ret
mov
cmp
mov
insb
insl
push
jmp
loopne
das
adcb
jo
fsubrl
mov
pop
xchg
add
mov
cmpsb
aam
cmc
jg
decl
shrl
jmp
imul
lret
jo
add
mov
push
cmp
cmp
mov
sbb
push
mov
movsl
aaa
dec
or
jbe
inc
jle
and
xlat
pushf
cmpsl
sarl
fldl
insl
aas
jb
out
mov
xlat
nop
inc
jp
pop
pushw
xchg
int3
adc
mov
jg
xchg
aas
jge
js
pushf
repnz
or
test
repz
mov
xor
outsl
adc
xchg
sti
jmp
ficompl
lock
adc
dec
mov
repnz
int3
sbb
push
pop
jp
popf
xlat
dec
testl
mov
shll
and
mov
imul
xor
or
push
jecxz
cmc
popa
les
mov
push
adc
jecxz
mov
fmull
lea
jmp
divb
mov
fnsave
push
jecxz
mov
jmp
mov
mov
xlat
mov
popf
push
stc
xor
push
jno
sti
dec
cwtl
lret
xor
testb
rcrl
jle
jbe
je
sti
cli
xlat
lods
lods
mov
aad
mov
add
jecxz
push
adcb
lahf
vpmaddwd
push
pop
xchg
call
jae
iret
inc
jnp
or
and
faddp
mov
inc
mov
jp
dec
dec
aam
push
in
out
rcl
push
dec
aas
sub
xlat
out
adc
dec
mov
aam
int3
or
sbb
or
dec
xchg
jo
or
pop
scas
sub
dec
in
test
and
dec
push
stc
fstl
push
dec
push
sbb
cmpsl
imul
inc
cmpsl
mov
call
jmp
in
imul
sbb
push
adc
dec
push
pop
mov
add
push
cmp
rorl
mov
fsubrs
push
or
es
in
sbb
mov
mov
in
mov
jns
dec
push
insb
ffree
or
stos
xlat
dec
mov
push
int
xchg
mov
sub
aam
out
xchg
or
bnd
shll
mov
add
pop
in
or
std
imul
in
mov
dec
jecxz
in
fs
dec
mov
sub
cmc
fmul
out
jecxz
xchg
cmpsb
popa
aas
shrb
in
pop
in
xchg
dec
outsl
jl
sbb
insl
mov
addr16
addr16
add
pop
dec
xchg
lods
movsb
pushf
mov
sbb
ret
push
iret
sbb
cmc
lret
jp
daa
cmp
sbb
in
stos
cmc
andb
mov
in
out
std
movsb
in
std
dec
add
jmp
mov
mov
sub
mov
mov
dec
sub
adc
inc
enter
out
pushf
fcompl
sti
push
pop
stc
push
mov
ss
dec
pushf
xchg
jae
sbb
outsb
cmc
dec
out
sub
fdivp
or
dec
or
popf
scas
jecxz
cmp
push
inc
xchg
lret
or
sti
sbb
pushf
in
js
insb
push
inc
scas
pushf
and
inc
scas
mov
mov
dec
mov
xor
xor
pop
ret
ja
xchg
pop
add
sti
cmpsl
lea
imul
mov
jl
sub
adc
jecxz
xor
std
cltd
inc
fisttpl
int
out
jo
movsl
fs
fs
xor
icebp
hlt
xchg
pop
rcrl
push
pop
stos
and
mov
jbe
push
mov
pop
mov
xchg
xor
outsl
inc
fcoml
pop
sti
push
jecxz
lea
dec
pop
in
mov
and
cmp
xor
repz
cwtl
insl
fisubrs
mov
not
xchg
jb
pop
insb
or
or
fidivrs
cmc
call
adc
mov
push
ja
insl
in
mov
mov
sbb
xchg
std
push
cmp
sbb
cmpsb
imul
jne
fwait
jecxz
je
sti
jl
dec
lret
sbb
add
out
scas
insl
push
pop
mov
gs
mov
cmp
mov
repnz
mov
push
pop
jp
or
add
in
push
lods
movsl
jnp
sub
mov
dec
inc
aad
jge
jns
movsb
ret
icebp
rclb
mov
pop
or
push
insb
repnz
scas
fdivl
shll
cmp
and
mov
imul
cmp
pop
out
stos
jp
cmp
clc
cmp
pop
sbb
cmp
pop
stos
pop
outsb
cli
jo
fdivs
mov
ljmp
mov
movsl
inc
icebp
jb
cmp
mov
cmp
pop
test
iret
mov
cmp
js
out
adc
scas
fcoms
pop
cmp
outsl
jb
xchg
js
aaa
cmp
enter
mov
sub
jb
mov
xchg
or
mov
outsl
sahf
dec
mov
mov
inc
in
scas
xor
iret
lods
out
mov
dec
outsb
lahf
ficoms
sub
imul
scas
out
inc
fnstsw
add
xorl
mov
xor
pusha
ljmp
cmp
scas
into
insb
mov
sub
jnp
daa
cmpsl
xor
lods
inc
sbb
dec
sbb
dec
mov
mov
xor
popf
punpcklwd
lret
cmp
jo
je
jg
dec
jns
add
jl
or
fucomip
mov
dec
orb
lahf
inc
popa
inc
ss
imul
pop
mov
mov
aas
outsl
sbb
movsb
pop
movsl
push
sub
jne
aas
ja
orb
data16
add
xchg
inc
jp
movsl
cmp
or
xorb
ja
jae
imul
mov
test
push
jp
sarl
jp
outsl
jp
mov
ljmp
out
dec
xor
jmp
pop
loopne
dec
push
jp
adc
dec
jns
scas
mov
cmp
addr16
pop
xchg
mov
pop
scas
jmp
push
mov
pop
mov
popf
jp
in
pop
out
sbb
cmp
loopne
add
adc
push
mov
cmpl
add
pushl
outsb
scas
cld
mov
dec
or
adc
inc
fdivs
xchg
adc
inc
cli
inc
in
movsl
and
mov
in
repnz
pop
add
inc
cmpsb
jle
popa
je
or
roll
adc
gs
in
add
dec
or
pop
movsb
cmp
xlat
xchg
sub
sub
fwait
cld
add
xor
iret
repz
xor
mov
in
sbb
or
sub
or
loope
adc
scas
adc
outsb
icebp
inc
mov
icebp
jo
aas
jnp
mov
add
aad
cmp
fwait
mov
mov
jl
outsl
sbb
das
dec
mov
andl
inc
xor
nop
pop
sbb
int
push
inc
sarb
xor
cmp
inc
pop
out
jl
decb
cmp
push
dec
icebp
mov
jae
rorb
mov
loope
jnp
dec
shlb
mov
push
push
pop
jnp
psrlw
das
or
andb
or
mov
dec
mov
scas
inc
xor
pusha
insl
dec
int3
outsl
test
imul
nop
or
mov
jbe
jae
data16
das
sbb
cmp
mov
lods
pusha
out
mov
push
popf
jp
pop
mov
sbb
fildll
ret
cs
jnp
push
push
cmpsb
xchg
mov
or
jmp
jo
mov
jle
mov
dec
enter
push
gs
inc
bound
gs
jns
cmp
loopne
idivl
mov
lcall
add
cmp
mov
jbe
ja
and
mov
nop
pop
dec
dec
jmp
clc
fistl
jne
scas
adc
lock
push
push
in
dec
outsb
dec
aam
enter
scas
fisttps
cmp
dec
or
insb
adc
lock
push
pop
addr16
cs
shrl
push
jecxz
jno
xor
mov
cmpsl
cli
imul
imul
ja
fbstp
outsb
hlt
sar
iret
sahf
xor
scas
and
pop
mov
sti
add
adcb
test
mov
sbb
sub
out
jg
lods
dec
dec
and
mov
inc
cmc
outsb
pusha
loopne
jb
stos
pop
in
sahf
adc
arpl
push
pop
cmp
scas
int3
pusha
out
outsb
cli
mov
scas
sub
dec
and
xor
mov
push
mov
pop
test
jg
jae
adc
lods
in
push
lcall
cmp
sbb
xor
lcall
in
sbb
test
js
mov
lret
jb
mov
pop
inc
jbe
sbb
pop
rcrb
ja
xchg
call
movsl
xchg
mov
fwait
fwait
xchg
je
xor
hlt
xor
gs
and
jns
lret
cmp
gs
mov
inc
xor
mov
jl
test
mov
push
mov
into
xchg
mov
jmp
dec
nop
sub
jns
dec
lret
sub
jno
pop
push
aad
xchg
stc
pop
test
and
fadd
rcl
push
pop
mov
data16
icebp
xchg
popa
push
sub
pop
and
jmp
add
dec
jge
pop
xchg
jns
xchg
pop
push
jbe
add
sbb
xchg
rcrb
and
outsb
cmp
pop
test
subl
dec
out
push
jns
pop
in
mov
mov
out
push
mov
in
push
add
push
push
cmpsb
jb
shll
sbb
cmp
mov
call
dec
pop
dec
cwtl
sbb
out
push
js
inc
or
insb
enter
aaa
insb
or
js
dec
ficompl
push
inc
mov
xchg
xor
jmp
out
dec
xor
outsl
insl
ficomps
ss
sbb
sub
les
cmp
jno
sti
sti
lret
and
cmc
mov
cwtl
pushf
dec
fidivrs
pop
pop
outsl
sbb
aas
fcmovnbe
in
je
vmwrite
sbb
jno
sub
xchg
in
js
add
fnsave
in
cmp
xor
xor
stc
fsub
xor
pop
out
lock
mov
cmp
movsl
mov
add
mov
xorl
fistpll
in
orb
dec
push
push
arpl
cmpsl
hlt
je
dec
inc
cli
clc
gs
in
pop
popf
inc
or
sbb
cmc
in
push
inc
cmp
mov
test
inc
jp
cmc
adc
pop
pop
int3
inc
mov
mov
test
mov
xchg
rorb
inc
fnstcw
add
js
xor
xchg
push
cmpsl
push
inc
cmp
pop
pop
xchg
das
imul
push
mov
pop
mov
inc
mov
sbb
push
mov
jp
mov
jbe
test
les
stc
inc
movl
pop
mov
shrl
and
jp
ljmp
fsts
mov
pop
pusha
xor
cmp
loopne
mov
addr16
imul
mov
in
iret
mov
push
sub
leave
jl
push
testl
outsl
scas
into
push
add
aas
mov
pop
pop
test
push
mov
push
cmc
mov
mov
dec
sbb
pop
mov
bound
mov
aaa
lahf
scas
mov
inc
xor
jmp
movsb
pop
dec
je
push
int3
popl
xor
mov
xchg
and
push
mov
jne
push
mov
mov
or
into
xor
jno
push
fisttpl
out
pop
jne
bound
push
into
je
leave
pop
pop
jmp
pop
xlat
pusha
je
inc
clc
in
sbb
pop
mov
xor
dec
dec
popf
cmp
in
xchg
mov
cwtl
push
sub
js
stos
out
pop
pop
pop
xor
sub
cmp
pop
pop
mov
fwait
ret
cli
testl
jle
sbb
jp
push
sbb
lock
jp
lret
daa
jb
sub
mov
lock
js
jmp
or
jge
mov
fwait
pop
imul
push
sbb
pushf
jne
push
lock
sub
pushf
fsub
xchg
fwait
mov
sbb
sub
mov
push
xlat
dec
das
dec
dec
bound
pop
or
gs
push
test
pop
lods
aaa
mov
cmp
test
or
jae
pop
pop
dec
fnstcw
adcb
cmc
mov
mov
aaa
imul
repnz
mov
imul
jae
inc
mov
jmp
aaa
mov
cli
jp
mov
mov
stc
sub
lret
jb
mov
lds
mov
insl
outsl
jae
sub
in
imul
icebp
stos
mov
xchg
cmp
push
inc
bound
lock
imul
and
push
aaa
mov
push
lahf
pop
js
movsb
sub
mov
mov
mov
pop
push
js
sti
and
pop
outsl
and
cmp
dec
cwtl
pop
es
jbe
fldt
outsb
insb
inc
lods
inc
pop
mov
jo
xor
xor
inc
cmp
stc
push
pop
imul
sbb
sarb
mov
mov
stos
cli
jne
or
adc
stc
inc
test
js
sbb
fnstcw
xor
sti
push
cmpsb
xor
ficompl
push
outsb
aas
jb
out
arpl
sti
inc
in
dec
es
sbb
sub
imul
dec
dec
cmp
loop
cld
pop
lock
ret
aaa
sti
push
in
in
adcb
mov
sarl
or
movsb
mov
pop
or
jne
roll
and
push
jbe,pt
inc
xchg
addr16
jge
loopne
mov
jns
xchg
cmp
jmp
xchg
leave
fsubr
sub
adc
mov
flds
push
stos
push
dec
cli
lcall
xchg
inc
cmpsl
sub
jp
cmp
xchg
cwtl
dec
jecxz
push
imul
sub
xchg
dec
mov
pop
add
xchg
jg
fidivrl
mov
lret
jp
jb
arpl
cli
and
cmp
call
inc
lods
ret
and
xchg
jns
pop
data16
jmp
xchg
je
or
jmp
mov
dec
jnp
outsl
push
jbe
gs
jae
mov
cmc
ljmp
stos
cmp
mov
mov
js
aaa
pop
inc
stos
xor
push
jne
sub
inc
clc
js
push
scas
and
or
xchg
sarb
xchg
xchg
sti
jg
ja
mov
test
cmp
jbe
sub
add
inc
outsl
aam
adc
cmp
ret
pop
sarb
sbb
add
orl
dec
bound
dec
mov
sub
leave
out
pop
dec
mov
inc
xchg
sahf
imul
ret
bound
orl
or
push
stos
jbe
addl
jo
lret
xchg
or
insl
out
imul
mov
and
sti
int3
cs
cld
mov
xchg
movsb
jbe
pop
aam
daa
fwait
push
cmp
push
mov
out
cmp
mov
push
jbe
clc
in
xlat
add
xchg
mov
fdivrs
mov
test
mov
imul
repz
stc
mov
inc
xlat
in
pop
lret
jne
push
out
cmp
or
shrl
jecxz
push
cld
inc
pop
sub
bnd
sub
mov
insl
sti
dec
fildl
clc
sti
je
inc
movsb
jmp
mov
out
mov
inc
inc
clc
popa
jp
pushf
sti
aam
mov
sahf
addr16
leave
dec
push
aam
mov
cmp
mov
movsb
mov
fistl
cld
sti
push
cmp
movsb
stos
in
push
dec
mov
ds
icebp
cmpsl
xchg
mov
lret
mov
jbe
outsl
notb
pop
cmpsb
ret
sub
mov
movsb
xchg
mov
dec
jmp
sub
cmp
cltd
inc
or
cli
add
pop
movsb
cmp
cmp
xchg
inc
lock
dec
cmp
mov
mov
jp
mov
jge
xchg
push
jbe
mov
lods
cltd
test
push
imul
sti
mov
scas
sti
cwtl
aad
fwait
jae
and
fwait
test
jae
sbb
cmpb
cmc
testl
pop
aas
popa
mov
xchg
cmc
mov
in
int
pushf
mov
mov
xor
dec
push
mov
aas
int3
mov
add
flds
call
movsb
push
sti
scas
mov
js
mov
repnz
sub
push
repz
repz
ret
pop
fwait
sbb
stos
jnp
and
insb
push
dec
repnz
ret
pop
or
jno
inc
sbb
repnz
xor
jns
cmp
mov
sub
jecxz
ja
cmp
dec
mov
cmp
jmp
xchg
loopne
stos
enter
sub
mov
in
scas
mov
jmp
in
cmp
mov
outsb
cmp
xor
mov
jmp
cmc
pop
cmpl
je
cltd
rcrl
clc
inc
cmp
mov
div
jno
sti
in
roll
jecxz
sbb
mov
gs
jne
fs
sbb
xchg
xchg
jbe
movsl
lret
cmp
aaa
sub
iret
or
mov
clc
cltd
mov
repz
aam
jecxz
sti
aad
leave
outsb
xor
repz
repnz
aas
inc
mov
inc
mov
mov
enter
xchg
mov
stos
sub
jp
cmp
js
fstl
push
xchg
pop
dec
mov
add
mov
std
jb
imul
mov
pop
mov
inc
lods
div
inc
sbb
jae
je
xor
inc
bswap
dec
pop
jp
test
jns
mov
stos
xchg
jmp
xchg
fnstcw
inc
hlt
sbb
pop
inc
sbb
and
xchg
stos
stc
mov
jns
push
and
jecxz
gs
imul
lcall
mov
sbb
cmp
mov
cmpl
xchg
adc
cmp
repz
gs
inc
cmp
pop
sti
sbb
test
stos
outsl
mov
insl
aad
jp
xor
int3
fwait
mov
fisttpl
mov
mov
fdivl
clc
sarl
dec
icebp
jle
pop
sbb
lret
push
jae
aaa
cs
dec
ret
bts
pop
fcompl
insl
or
cmp
mov
arpl
mulb
xor
ror
repz
xor
dec
mov
lods
inc
cmp
arpl
sarb
lds
pop
aad
idivb
xor
jno
out
sbb
inc
lods
jge
mov
cmp
jecxz
repnz
jo
cltd
fwait
jae
mov
pop
mov
add
sub
inc
mov
loopne
jns
mov
xchg
mov
fistpll
push
nop
adc
xor
push
mov
jo
icebp
xchg
inc
imul
sub
mov
push
mov
jg
sbbb
jnp
push
dec
cld
cwtl
in
loop
fildll
cltd
shrl
repz
pop
sub
sub
or
lock
ret
test
pop
dec
cld
or
fdivrs
inc
pop
cmp
pop
imul
and
in
mov
je
repnz
enter
mov
movsl
push
push
jmp
outsl
int3
fnstenv
push
enter
call
movsb
ret
sub
or
pop
cmpsb
or
icebp
or
repnz
mov
or
mov
adc
int3
dec
jne
je
fbld
cld
xchg
mov
or
sub
push
sbb
add
inc
dec
fbld
hlt
adc
out
dec
addr16
in
push
sub
popa
jbe
inc
pop
mov
ret
or
cli
mov
movsb
cmp
fidivs
sub
inc
popl
jns
or
imul
cli
push
push
push
push
std
fcoml
xlat
xchg
xor
in
cmpsb
mov
notl
inc
repnz
dec
loop
sar
fdivrs
scas
xlat
movsb
jp
dec
cmp
imul
imul
add
pop
movsb
mov
shll
ja
int3
mov
test
push
imul
cld
lahf
pop
cmp
jo
jecxz
sahf
cmp
test
push
pop
stos
xor
ror
out
inc
ds
mov
pop
les
jmp
test
movsb
das
in
dec
imull
bound
inc
movsl
cli
mov
sub
pop
cmp
mov
cli
out
sarl
mov
mov
inc
xchg
dec
xchg
movsb
pop
filds
jl
inc
cmp
push
jmp
and
adc
pop
and
fwait
cmp
dec
mov
sub
dec
imul
or
pop
mov
addr16
inc
mul
mov
fcmovnb
movsb
cmp
pop
icebp
mov
inc
jae
rcr
ret
mov
es
fdivrs
mov
cmp
idivb
or
lea
push
mov
loopne
push
or
dec
mov
mov
es
dec
xlat
popa
das
ret
inc
xor
pop
stos
dec
mov
pop
pop
cmp
movsb
fistpl
push
xlat
ja
das
ret
mov
push
cli
int
push
pop
push
add
mov
ja
jbe
mov
sub
cli
movsb
fdiv
mov
js
add
js
ja
ficoml
sti
out
dec
lcall
mov
out
mov
sbb
cli
and
cmpsb
jbe
into
mov
daa
mov
jno
lret
xor
ret
jmp
mov
je
aas
mov
aaa
xchg
addr16
sbb
mov
sbb
jg
in
sbb
std
ret
pcmpgtw
incl
lret
shrb
jmp
xor
pop
dec
outsl
jns
es
out
or
fdivs
xchg
arpl
daa
stos
movsb
mov
mov
sbb
roll
ja
loope
imul
inc
lock
repnz
add
cmc
inc
jno
mov
sti
mov
xchg
fiaddl
hlt
jmp
pop
xor
imul
fstpl
cwtl
scas
ja
cmc
sbb
aam
pop
jns
push
cli
mov
test
dec
outsb
dec
push
and
stos
imul
dec
shrl
sub
sti
jnp
add
cmp
in
addr16
ljmp
pop
adc
mov
sahf
inc
add
ficompl
out
mov
mov
bound
jno
dec
lock
cmp
test
pop
in
jbe
mov
sbb
cmp
jns
xchg
lods
js
push
out
in
les
jae
call
ljmp
inc
imul
pop
or
rcl
dec
mov
fisttpl
cli
into
aam
dec
adc
cmp
push
fwait
out
pop
dec
int
rcll
mov
dec
mov
dec
arpl
jb
sar
jno
cwtl
in
inc
movsl
ret
or
aas
or
xlat
icebp
fucom
mov
cli
fstl
lret
push
or
test
pop
adc
ret
xor
push
not
popa
test
xchg
and
movsb
xlat
xchg
imul
push
jns
ja
lods
dec
sub
loope
push
and
cmpsb
sub
fldt
cld
cwtl
push
lcall
pop
outsl
sahf
inc
mov
xor
psubw
cmp
pop
cmpsl
mov
add
inc
inc
jl
xchg
mov
inc
sbb
cmpsl
fidivrs
ret
cwtl
enter
popf
xor
push
fnstcw
jns
in
cli
lret
popa
outsb
mov
out
adc
mov
in
out
xchg
call
xor
stos
sti
dec
fcomip
bnd
enter
lret
adc
addr16
arpl
push
pop
push
mov
aaa
dec
push
mov
in
out
cmp
repz
inc
xchg
pop
cli
pop
jb
aaa
sbb
inc
inc
dec
cli
xor
mov
ds
stos
push
jns
dec
xchg
dec
and
in
ljmp
cmp
fwait
mov
insl
sti
aad
cmp
mov
dec
xchg
inc
cwtl
jne
jp
insb
inc
xorb
mov
sub
nop
xor
lret
mov
imul
inc
scas
mov
cmp
mov
mov
fistl
fsubrl
xor
push
fistps
mov
xor
jp
bound
out
cmp
pop
dec
xchg
mov
adc
call
or
test
dec
jp
mov
lret
ja
cmp
fsubl
mov
fs
lds
jmp
hlt
ss
adc
iret
mov
jp
lods
fnstcw
xchg
pop
jnp
pop
fcomi
mov
push
push
pop
dec
lcall
dec
outsb
fcmovne
fstpt
mov
ljmp
push
push
shrl
mov
divb
cmp
sarl
stc
mov
inc
outsb
mov
fcmovnbe
popa
and
test
cli
addr16
adc
or
mov
lods
inc
or
test
mov
dec
adc
push
dec
call
test
inc
mov
sub
xor
movsb
xchg
mov
addr16
and
lods
enter
cmpsl
test
fcomps
cld
fists
mov
frstor
ljmp
push
pop
fwait
lods
mov
cmp
mov
aas
add
mov
out
sub
scas
or
jg
in
rorb
mov
bound
mov
dec
dec
xchg
or
cmp
sti
rcll
mov
mov
mov
jbe
lds
inc
adc
xor
push
mov
or
pop
push
sub
insb
jb
push
sub
cmpsb
into
sub
ja
cmp
cmc
mov
pop
shll
aaa
adc
pop
stc
scas
or
das
xorl
imul
nopl
fildll
out
fst
xchg
dec
cli
sbb
or
jnp
fwait
out
in
dec
ljmp
xor
jmp
sub
mov
mov
stos
jmp
cwtl
jbe
sarl
mov
mov
pop
ds
pop
in
mov
js
out
lcall
repz
aas
push
dec
xor
mov
and
inc
xlat
push
addr16
mov
ret
leave
push
jp
mov
js
and
mov
and
and
mov
addl
and
lahf
jns
cmp
sub
mov
jmp
sub
sti
mull
pop
fnstcw
cmpsb
mov
imul
loopne
mov
lret
cld
in
jb
jl
pop
pop
mov
stos
shrl
mov
xor
or
pop
ret
sub
cld
fs
adc
outsb
inc
insb
sbb
inc
pop
mov
arpl
pop
dec
pop
lods
sbb
push
and
pop
mov
int3
inc
sub
or
sti
stos
sbb
or
cmp
ljmp
repz
mov
push
cmc
push
lret
push
xor
sbb
aad
jp
lds
push
mov
push
jmp
popl
pop
repz
sti
mov
xchg
add
mov
stos
and
lods
out
pop
bound
dec
cwtl
cmp
pop
aas
mov
push
sub
xlat
add
ljmp
xor
jb
out
out
cltd
sub
sti
movsb
mov
fstl
sub
add
dec
lock
push
clc
cmp
cli
mov
jle
js
sub
inc
call
in
mov
std
enter
out
ja
mov
sbb
inc
dec
inc
add
movsb
in
cmp
shl
jbe
or
and
or
daa
std
push
jae
pop
fiaddl
ret
push
nop
and
repnz
mov
jae
repz
ja
or
jne
and
cmp
mov
imul
jnp
jg
mov
push
jb
divl
stc
xchg
pushf
addr16
scas
cld
fldcw
int
mov
jg
stos
push
and
jbe
out
gs
rclb
insb
clc
imul
inc
imul
test
push
sti
mov
rcll
pop
inc
fcmovbe
push
cmp
test
mov
mov
pop
dec
stc
rcrb
rcrl
adc
clc
xor
push
push
mulb
lret
fnsave
adc
repz
out
xchg
jns
sub
mov
movsb
fcomp
pop
cli
js
cld
test
sbb
stos
jp
outsl
sub
or
outsb
stc
fidivl
outsb
inc
mov
inc
jo
int
fldt
xchg
insb
dec
dec
jae
lock
jg
inc
cmpsb
pop
fwait
pop
sti
sti
push
pop
xchg
pop
xchg
jns
out
sub
mov
mov
xchg
xchg
jbe
std
xchg
std
push
lcall
ja
adc
or
mov
sub
push
lods
shll
sbb
mov
cmp
loopne
and
dec
enter
leave
out
int3
xor
addr16
dec
ret
test
bound
rcll
rcrl
cld
arpl
movsb
outsb
push
aad
in
repz
sub
jmp
sti
les
and
jp
cmp
sbb
test
xchg
mov
sbb
imul
and
inc
xchg
jae
mov
mov
lcall
or
cli
mov
std
cli
jns
pop
loopne
cmp
mov
imul
out
lcall
fcmovnbe
push
aaa
add
mov
add
gs
dec
dec
fcmovnbe
test
inc
pop
fdivrs
frstor
adcb
nop
mull
movsb
pop
aad
in
cli
stc
adc
stos
pop
ss
push
push
movb
scas
lock
lods
imul
enter
jno
or
hlt
xchg
and
mov
fdivl
sti
push
jmp
mov
ret
stc
jg
sub
inc
fnstsw
sub
push
insl
or
out
js
jno
inc
ljmp
push
xor
cs
lret
shrl
fwait
repz
xchg
imul
in
pop
nop
add
ja
jg
es
lret
cmp
out
cmp
sbb
imul
fiaddl
ja
add
xor
ss
mov
aaa
mov
cmp
jecxz
add
bound
mov
sub
mov
lods
mov
in
mov
sub
in
stos
push
mov
adc
out
mov
jno
jmp
bound
cmp
push
adc
cmp
ficompl
mov
into
icebp
lret
cmp
mov
adc
call
cmp
sub
or
ficoms
jmp
jb
fcoml
jp
sbb
clc
ljmp
dec
lret
rcll
inc
pop
xchg
into
loop
jns
mov
or
xor
nop
movl
xchg
lcall
xchg
jae
jmp
lods
sub
cltd
mov
repnz
mov
cli
mov
bound
sti
jns
shlb
mov
inc
jns
pop
sub
jmp
mov
push
nop
inc
repz
jp
mov
mov
rol
scas
andl
cli
cmp
movsl
xlat
in
popa
cmp
and
arpl
enter
sti
jbe
in
das
sbb
cli
mov
mov
test
stos
jae
xchg
mov
sub
mov
cmp
lcall
pop
xor
mov
pop
jmp
mov
call
push
js
jmp
inc
push
push
cmp
pop
notb
sti
jp
jecxz
int
call
inc
dec
mov
mov
push
imul
dec
jl
jp
add
jecxz
lods
adc
jae
cmp
mov
aad
xchg
in
shlb
dec
lret
popa
push
xor
jno
adc
dec
sub
jbe
ljmp
dec
jg
xchg
idivl
mov
ret
out
cmc
mov
jno
inc
cwtl
lock
cmpsb
in
or
push
sbb
add
iret
xchg
stos
addr16
out
dec
pop
add
inc
mov
popf
test
cmp
or
mov
fwait
jno
mov
icebp
js
adc
imul
popa
xchg
pop
jns
arpl
jae
cwtl
pop
cmpl
push
repnz
mov
sbb
into
cli
mov
imul
pop
mov
jp
mov
jle
xchg
dec
push
xchg
in
subb
jb
lcall
push
cmp
xor
clc
xchg
dec
nop
loopne
cli
imul
lcall
mov
sbb
shrl
fwait
inc
ret
out
pop
insl
jb
mov
jl
pop
sub
push
clc
fimuls
loope
dec
pop
movsb
sbb
aas
pop
lret
xchg
pop
pop
fildl
xor
dec
dec
mov
pop
cld
and
stos
dec
mov
movsb
sub
test
mov
cmp
xlat
lea
pusha
int
aas
ret
push
sub
out
mov
xor
std
sbb
lcall
mov
mov
sub
push
sahf
or
je
xchg
sbb
sub
outsb
sub
sti
xchg
test
adc
imul
xchg
loop
and
fisttpl
inc
lret
jp
lret
jns
mov
push
push
ja
insb
int3
mov
xor
mov
dec
clc
insl
sbb
addr16
movsl
cli
or
and
mov
rorl
ds
and
jg
test
adc
cmp
push
jl
inc
fimuls
sbb
cmp
cmp
mov
fcoms
fs
jl
mov
xorb
and
fnstsw
jbe
stos
mov
fwait
sub
pop
sbb
jbe
cmc
add
jo,pt
lods
ja
movsb
push
imul
test
sbb
cmpsb
xchg
add
push
jecxz
mul
jg
and
xor
jns
sbb
cmp
lods
sti
or
gs
mov
leave
jbe
arpl
js
push
mov
outsl
mov
and
or
test
dec
data16
jmp
sbb
dec
imul
fistpll
imul
ret
sbb
mov
pop
pop
sub
mov
mov
jge
lods
inc
xchg
sub
cmp
pop
aas
ret
sbb
pop
movsb
adc
sbb
mov
xchg
dec
aad
ret
xor
inc
enter
aaa
jns
inc
sbb
loop
mov
ret
mov
ss
jmp
stc
rcll
mov
insl
imul
scas
imul
mov
arpl
lods
jecxz
lahf
sbb
dec
push
aas
mov
push
push
std
cmp
mov
sub
pop
mov
mov
push
xchg
pop
ret
fldl
cmp
jecxz
enter
and
popa
mov
mov
cmp
js
ds
mov
arpl
dec
mov
push
insl
or
pop
addr16
fs
or
out
jecxz
mov
repnz
mov
pop
fwait
lods
dec
xchg
sub
into
or
xor
mov
sub
push
je
inc
inc
cmp
jmp
movsb
jne
fnstcw
arpl
daa
or
jle
ljmp
sbb
xor
adc
or
push
jp
test
sarb
int
mov
loopne
jmp
push
xchg
mov
mov
jl
popa
adc
pop
lcall
sub
test
aaa
pop
pop
sub
dec
idivl
xchg
or
dec
adc
mov
dec
jmp
sti
icebp
or
test
inc
mov
inc
into
idivb
or
inc
mov
pop
in
jae
jl
icebp
jmp
jne
mov
or
cld
xchg
in
xchg
cmp
ret
dec
inc
mov
mov
ret
lea
mov
outsl
scas
aaa
push
movsb
data16
mov
orb
pop
in
sub
enter
xchg
ja
and
ds
inc
cmpsl
jmp
data16
mov
dec
jmp
push
cmp
sub
adc
mov
insb
pop
dec
pop
fdivrl
and
fstps
mov
push
cmp
jp
xlat
inc
in
ds
ss
fldenv
int
xlat
pop
jge
ljmp
negb
or
jmp
es
dec
push
jge
movsb
or
ret
into
scas
out
mov
mov
xchg
mov
jg
inc
push
sti
lds
jmp
clc
cltd
stc
sub
cmp
in
clc
scas
xor
mov
sbb
rorb
out
dec
xlat
pop
ret
inc
loopew
cld
sbb
outsl
fisttpll
mov
mov
int3
out
cmpsb
add
jb
mov
xor
mov
jecxz
mov
pop
je
cmpsb
sti
push
test
loope
and
fmull
enter
or
or
jnp
lret
jle
fstpl
repnz
dec
cld
adc
out
aaa
pusha
shld
test
jne
mov
imul
ret
xor
fdiv
leave
or
or
pop
inc
outsb
or
jge
out
aaa
jl
push
imul
pop
call
cld
mov
ljmp
clc
jbe
lods
dec
sub
adc
lret
or
movsb
clc
cmp
cwtl
sub
lret
iret
pop
cmp
fiaddl
fists
jp
sub
dec
cltd
fwait
aam
test
adc
js
mov
mov
outsb
rcrl
xchg
adc
and
loopne
mov
outsl
fwait
arpl
lret
and
jo
repnz
push
test
jne
ds
jmp
enter
fdivl
add
sub
pop
insl
out
cmpsb
jmp
adc
sbb
cmp
add
lret
jecxz
iret
pop
imul
add
movsb
test
xchg
imul
cwtl
sbb
sbb
fcmove
sub
sbb
ror
into
mov
je
test
push
mov
sub
sub
dec
cld
icebp
jo
js
lret
jecxz
sbb
repz
enter
jecxz
ret
fbld
cmc
scas
addr16
pop
aaa
jo
push
push
lods
out
cmc
jecxz
sub
sbb
aad
cmc
lret
jns
fldt
stos
xor
fidivrl
sbb
int3
pop
adc
pop
lock
inc
bound
fisubrs
inc
pop
mov
out
pop
xchg
js
test
bound
inc
pop
aas
gs
in
mov
ss
fcompl
jl
sti
or
mov
pop
jge
push
push
in
xchg
jp
jae
mov
and
push
mov
mov
andb
mov
int3
test
xchg
xchg
cmp
dec
repz
pusha
sub
jg
fisubrs
inc
sbb
shl
mov
daa
mov
sub
mov
pop
push
pop
cmp
push
cs
in
and
and
cmp
jp
cmp
mov
xchg
inc
in
push
cmp
pop
in
movsb
mov
rclb
dec
imul
lods
jbe
inc
inc
cmpsb
sub
pop
push
adc
mov
adc
pop
cmpb
test
aam
jno
sahf
ret
xacquire
mov
sub
inc
xchg
iret
lock
enter
lods
imul
sti
stos
mov
mov
test
jmp
mov
cmc
adc
mov
mov
pushf
test
daa
stos
rcrl
dec
inc
sbb
or
dec
xlat
dec
pop
lea
repz
sbb
push
xor
cmp
movsl
fwait
lock
sub
add
and
pop
jno
mov
mov
shll
mov
xrelease
or
xor
xchg
add
xchg
push
in
dec
call
jb
jecxz
inc
inc
mov
inc
push
pop
mov
sarl
push
jb
mov
pop
mov
stc
xchg
es
mov
mov
sbb
movsb
call
rorl
jmp
xor
mov
inc
or
push
sub
xor
mov
cmp
inc
repnz
sub
arpl
mov
mov
jbe
shrd
in
cld
movsb
cltd
js
and
jns
bound
pop
push
imul
and
enter
fcmovnbe
inc
pop
or
jbe
mov
mov
xor
mov
sub
mov
or
gs
enter
cld
cmc
dec
mov
fdivp
sbb
adc
out
xchg
insl
imull
pop
sbb
mov
test
lret
xchg
jl
idivl
jp
fdivrl
sbb
add
nop
push
jp
jae
repnz
mov
add
pop
push
mov
jmp
imul
or
sbb
xchg
aaa
jl
xchg
adc
cmpsl
add
inc
adc
jns
jg
vpcomuw
jno
enter
jmp
fadd
or
insl
mov
push
mov
push
mov
sbb
jg
push
xchg
shl
push
out
xchg
jp
xchg
lret
pop
inc
jg
cli
cltd
cltd
in
mov
dec
ret
mov
xor
daa
or
in
xchg
pop
dec
cltd
loop
inc
hlt
jno
xchg
enter
push
dec
xchg
sbb
stos
fldl
xor
or
sti
fnstsw
stc
imul
adc
pop
add
sbb
inc
nop
or
cs
dec
or
mov
fnstsw
dec
leave
jl
or
lea
cmp
or
rcrb
montmul
cmpsb
shll
std
xchg
ds
pop
insl
jo
jbe
shl
sub
lock
lock
in
xchg
in
mov
dec
mov
sub
loopne
dec
mov
adc
cltd
lock
jae
lods
pusha
movsl
ret
add
xor
jg
lock
out
popl
scas
jno
movsb
mov
jecxz
lahf
cltd
fucomp
mov
inc
call
mov
outsl
dec
stos
fwait
xchg
fistpll
adc
dec
divb
and
add
in
xchg
loop
mov
in
mov
mov
jo
repz
out
mov
mov
xchg
mov
ds
sbb
jmp
push
mov
mov
hlt
adc
call
imul
pop
ja
imul
jns
inc
cmp
mov
hlt
testb
fstl
jae
outsl
mov
lock
mov
cmp
inc
sar
mov
mov
test
je
mov
jl
inc
xor
jb
jo
nop
loope
sbb
jmp
lret
mov
ret
sahf
aas
mov
dec
push
loop
in
and
jle
jl
adc
mov
rcrl
mov
or
negb
jmp
inc
xor
push
shl
adc
push
mov
dec
jmp
idivl
scas
outsl
dec
test
je
push
dec
test
negl
fisttps
lcall
dec
add
xor
jge
push
cmc
jno
adc
outsb
test
inc
jns
cmc
mov
or
jae
mov
jmp
stc
je
cwtl
inc
mov
fimull
cmp
xor
push
arpl
popa
div
push
inc
pop
fcomp
aas
cli
mov
pop
jmp
in
ss
push
cmp
push
movsb
fsubrp
stc
mov
inc
and
sub
lock
sbb
pop
xchg
mov
mov
push
jns
mov
inc
cmp
imul
pushf
dec
leave
jmp
aas
fmul
shll
roll
repnz
xor
xchg
inc
ljmp
cmp
lcall
negl
lods
cmp
popl
mov
cltd
pop
bound
mov
ffree
xor
fisttpl
jecxz
repz
pusha
shl
mov
aaa
or
out
in
sub
shrb
mov
in
fsubrl
mov
ficomps
mov
leave
pop
mov
jae
ret
out
mov
jp
iret
scas
mulps
roll
adc
jg
lds
inc
mov
mov
adc
popf
jle
stc
divl
mov
push
inc
sti
sub
xchg
inc
mov
aas
add
jg
cmp
or
in
inc
mov
cld
test
jmp
sbb
test
in
idivb
or
sbb
stc
cmp
ret
cmp
divl
xor
mov
imul
add
mov
stos
mov
xor
jmp
jp
arpl
mov
dec
lretw
dec
push
sbb
xor
ret
sub
mov
imul
sbbb
out
dec
scas
outsb
negl
xchg
adc
divb
int3
xlat
jecxz
in
push
lret
and
jb
jl
xchg
popf
jo
cmpsl
push
enter
dec
xchg
pop
ficoms
inc
imul
testl
push
add
cmpsl
xchg
cmpsb
in
lds
inc
mov
es
mov
dec
hlt
cmp
mov
loope
out
xchg
mov
push
test
add
add
gs
rdtsc
add
lret
mov
movsb
sub
stos
es
scas
or
dec
jmp
jbe
cli
popa
in
in
test
das
lock
cmp
movsl
in
outsb
cmpsl
cltd
sub
in
repnz
inc
cmc
jo
aam
fcmovnbe
out
outsb
lea
call
pop
fwait
push
cmpsl
xor
das
fisubl
pop
shl
jg
jns
pop
inc
call
fistpll
or
or
mov
sub
sbb
fwait
cli
mov
out
fwait
cmp
push
std
push
jle
loope
push
fildll
daa
aam
push
in
or
mov
scas
pop
ja
xchg
jns
out
jecxz
leave
pop
lods
enter
xor
lret
iret
mov
dec
fmuls
ret
scas
test
cmp
pop
rclb
or
push
aam
lret
inc
shlb
mul
pushf
daa
popa
dec
lret
push
test
out
enter
mov
ja
cmp
enter
sbb
mov
inc
lds
xchg
shrl
fbstp
mov
mov
es
jb
subb
mov
xchg
mov
mov
jb
mov
mov
and
push
cmc
jns
mov
outsl
xlat
dec
jns
cmpsb
jb
fnsave
sbb
and
outsl
scas
sub
pop
mov
ret
pop
out
jo
mov
leave
or
dec
sbb
lret
pop
push
in
xor
popa
hlt
stc
mov
negb
push
push
xchg
loop
shlb
xor
sub
inc
arpl
aad
testb
sbb
mov
stos
popa
ss
dec
cmc
mov
fldl
test
mov
es
cli
outsb
adc
fbstp
cli
add
inc
or
cmp
int
lods
addr16
mov
mov
mov
sub
insl
xchg
out
inc
fcoms
push
popa
xchg
or
dec
das
pop
in
ds
jecxz
outsl
sti
movsb
mov
movsb
push
dec
inc
repz
out
aam
add
mov
jns
inc
adc
sbb
das
push
out
sub
push
sbb
jle
dec
in
movsb
fisubs
aad
push
mov
pop
mov
mov
mov
imul
cmpsb
mov
sti
stc
inc
sub
jo
int3
cmpsl
jno
or
testl
add
mov
push
arpl
adcl
inc
je
and
push
add
in
mov
mov
sti
adc
mov
icebp
loop
fistpl
loopne
loop
jmp
mov
mov
jbe
jb
subb
lods
sbb
fidivs
xor
mov
mov
loope
into
movsb
fwait
xchg
shrb
sbb
sti
xor
mov
sub
imul
push
test
mov
outsl
cmpb
out
jp
or
pop
cld
pop
push
bound
or
repz
out
push
sub
cmp
fistl
out
sarl
mov
ja
movsb
xor
call
lahf
pop
test
divl
insb
jne
xchg
dec
divb
or
dec
xchg
je
xor
cmpsl
outsl
fld
outsl
popa
divl
lret
popa
divl
fidivl
das
or
cmp
jmp
bound
pop
mov
sub
mov
divl
imul
jmp
insl
daa
lcall
lret
cltd
in
ljmp
outsl
imul
mov
ss
mov
xor
mov
xor
mov
xor
outsw
sarl
sub
jmp
pop
arpl
mov
in
jno
ret
mov
test
fsubl
arpl
sbb
jne
cltd
insb
arpl
add
stc
or
xor
leave
push
dec
lea
call
and
fistpl
jb
inc
pop
insl
ja
bound
dec
imul
lock
inc
push
ret
frstor
inc
insl
stc
out
inc
icebp
xchg
cmc
push
cmc
ss
imul
xchg
dec
sbb
adc
loop
ljmp
jp
xor
mov
or
mov
lahf
push
or
xchg
jb
scas
in
stos
xchg
or
inc
dec
ret
xor
test
dec
sbb
cmpl
cld
movsl
cmp
jbe
inc
data16
jnp
and
fldl
xchg
insl
and
js
xchg
scas
lods
dec
sbb
addr16
imul
gs
xchg
inc
insl
or
lahf
dec
sub
push
cmp
movsb
sub
pop
sub
sub
pop
mov
mov
jg,pt
jecxz
fdiv
and
cmp
jb
mov
sbb
insl
cmp
sub
stos
pop
push
aas
mov
clc
idiv
out
mov
pop
cmp
mov
inc
mov
push
iret
js
lret
sub
mov
pop
mov
sti
mov
mov
jns
stc
cltd
jb
in
mov
mov
jae
sub
in
cs
test
lea
stos
out
test
sub
bnd
pop
xor
push
cld
xchg
dec
mov
iret
fucom
outsb
or
ret
fiadds
mov
mov
add
imul
fisubrs
pop
enter
push
aam
lods
addr16
adc
aad
mov
sbb
loope
pop
mov
jmp
sbb
fwait
mov
cli
add
ljmp
out
stos
cmp
jg
lea
test
mov
mov
pop
int
out
jns
movsb
cltd
lods
jl
sub
xor
cmpsl
mov
lea
enter
mov
mov
xchg
imul
rol
push
cmpsb
push
dec
fdivs
add
das
jp
sub
cli
mov
bound
dec
sti
lods
out
xchg
mov
xor
test
mov
arpl
into
iret
inc
pop
sbb
mov
pop
shr
pop
popa
push
pop
loop
add
pop
ja
push
and
test
adc
fstps
mov
adc
movsl
fsub
mov
aad
loop
idivb
mov
clc
inc
pop
push
push
xchg
sti
mov
pop
fcom
pop
and
out
fildll
cmp
sbb
pop
lods
aad
cmp
dec
mov
hlt
pop
push
ds
lret
cld
test
lds
xor
cmc
sti
push
jbe
ljmp
mov
mov
shll
pop
jmp
mov
das
jecxz
pop
mov
in
jp
fisubl
pop
clc
mov
jecxz
pop
hlt
mov
lock
dec
mov
pop
xor
jecxz
pop
push
mov
adc
mov
mov
outsb
pop
in
sbb
lds
pop
cli
mov
sbb
sbb
mov
adc
adc
mov
loop
jmp
pop
fldt
push
clc
sti
push
dec
xchg
aaa
pop
push
adc
mull
add
adc
mov
cli
sbb
and
js
lock
sbb
lods
add
sub
sti
mov
mov
in
jns
pop
lods
out
inc
xchg
dec
mov
daa
addr16
cltd
pop
jae
cwtl
js
clc
pop
sub
jp
push
xor
in
add
aam
cmc
add
stc
mov
xchg
movsb
test
aas
inc
je
inc
dec
notl
in
call
clc
cmp
mov
test
je
inc
push
notb
mov
or
mov
mov
xchg
mov
mov
imul
je
inc
pushl
cmp
in
mov
adc
push
fidivs
jb
dec
mov
jg
xor
cmc
popa
outsl
gs
cli
pop
leave
inc
lds
cli
cs
test
push
in
into
push
fwait
cmp
push
and
push
out
ret
sbb
call
push
test
and
idivl
clc
mov
movsb
mov
inc
shll
gs
cmp
test
in
ror
test
push
movsl
mov
jns
lods
roll
add
int
inc
mov
xor
imul
je
push
cmp
test
pop
mov
cmp
mov
jp
pop
inc
cltd
sbb
xorb
les
pop
xchg
in
mov
js
stc
jp
xchg
adc
outsb
cmp
inc
add
adc
hlt
mov
xchg
push
mov
sub
mov
xchg
and
jmp
jp
cmp
lods
push
jmp
fsubs
mov
push
jns
movsb
popa
jmp
inc
dec
out
or
sub
pop
jbe
pop
sti
addr16
mov
push
mov
ss
add
xchg
int
or
je
stos
pop
addr16
adcb
jb
xchg
testb
hlt
sti
mov
and
cmc
pop
xchg
movsl
les
cmp
fsts
idivb
aaa
mull
mov
in
addr16
cmp
mov
mov
xchg
adc
mov
jmp
xchg
stos
int3
cli
sub
daa
adc
movsb
sti
cmc
repz
push
js
stc
mov
mov
pop
es
inc
shll
add
data16
inc
dec
xor
mov
cmp
hlt
jmp
movsl
push
jae
jmp
int3
lahf
sbb
pop
pop
loop
addr16
push
fldt
iret
insb
adc
dec
in
popa
mov
push
cs
push
jge
pop
fiaddl
inc
je
leave
stos
cmp
cmpsl
push
inc
pop
divb
xlat
popa
cmp
in
movsl
test
in
stos
incl
pop
pop
cmpsl
hlt
mov
inc
mov
pop
sbb
pop
cmpsb
adc
cmpsl
adc
rorb
push
testb
cmp
sub
or
ficomps
sub
insl
out
cmpl
mov
cwtl
mov
aaa
sbb
iret
add
mov
fidivs
or
xchg
inc
cvtdq2ps
pop
mov
orl
dec
je
jl
mov
iret
adc
mov
out
mov
scas
xor
test
rolb
or
addr16
mov
cmp
or
push
xor
cmpsl
xchg
xor
in
push
sbb
rol
mov
iret
mov
mov
stos
loop
stos
jmp
mov
mov
in
sbb
sbb
ss
into
push
arpl
fdivr
mov
jmp
inc
mov
jno
add
fwait
mov
movsb
fcoms
push
dec
bound
cmpsl
xchg
sbbb
inc
inc
ficoml
gs
js
cmc
int
add
push
in
pop
fwait
mov
divl
insl
cltd
adcl
jmp
scas
cltd
in
lds
mov
mov
dec
and
mov
pop
sub
jo
out
inc
stc
loop
lock
pop
xchg
lea
cmp
xor
inc
pop
aaa
in
not
pop
jmp
jp
mov
xor
ljmp
cmpsb
loop
negb
loop
push
jbe
add
fidivl
pop
cmpsl
daa
cmp
shlb
sbb
sbb
pop
fnsave
stos
outsl
lods
imul
and
mov
loope
outsl
pop
jp
xchg
fsubp
mov
aaa
cmpsl
xchg
and
out
repz
aaa
cmp
xchg
sub
je
js
mov
imul
cmpb
imull
imul
dec
xchg
jbe
imul
push
cmp
sti
js
jmp
mov
jmp
ljmp
cmp
mov
ja
sbb
jmp
negl
mov
push
jecxz
pop
jb
icebp
testl
mov
arpl
imul
pop
mov
jb
jb
insl
fldt
insl
cmp
cs
mov
popa
aas
mov
mov
mov
mov
pop
inc
xor
xchg
fildl
mov
sbb
movsb
push
mov
dec
pop
jbe
jp
jle
std
roll
cmpsb
out
fsub
xor
call
xchg
sub
xchg
lods
jecxz
push
mov
pop
mov
inc
movsb
push
xor
lock
xorb
pop
sub
cli
jno
movsb
push
in
out
inc
mov
inc
loope
sti
sub
xorl
mov
popa
lret
in
pop
push
jge
js
andl
inc
sub
sbb
cmpsb
adc
lock
sub
sbb
dec
cmp
mov
lret
addr16
out
mov
es
dec
inc
lahf
outsb
std
arpl
out
gs
les
cmpb
outsl
push
stos
adc
aam
push
mov
inc
lcall
mov
fwait
enter
push
push
pop
push
scas
negl
jno
dec
mov
cli
jecxz
pop
ljmp
gs
pop
mov
cmp
hlt
pop
xor
aam
aaa
mov
mul
cld
pop
clc
sbb
out
ret
stos
sti
xor
jns
jp
insb
ret
pushf
repnz
fwait
outsl
lret
xchg
cmp
xchg
out
and
out
adc
add
imul
jb
cmp
pop
jmp
mov
fcomi
imul
lret
dec
jne
in
imul
sti
dec
popa
mov
sub
ja
inc
jae
icebp
gs
inc
into
lods
jns
insl
dec
arpl
sti
ja
mov
cmp
lods
repnz
xchg
popf
hlt
in
xchg
jne
adc
data16
adc
into
push
out
push
pop
pop
lret
jae
out
push
insl
fdivl
adc
mov
popf
shlb
dec
repz
imul
call
rcl
mov
cmpsl
cmp
stc
jp
mov
lods
sti
lret
pop
mov
mov
pop
sub
pop
cmp
cmp
xorl
or
mov
mov
mov
mov
jp
lods
inc
push
jbe
mov
xchg
sti
inc
xchg
out
mov
cli
out
and
mov
push
adc
inc
fwait
js
jae
mov
sti
iret
push
jns
inc
push
mov
mull
jmp
popa
loopne
mov
je
adc
jns
jle
cli
mov
cmp
mov
xchg
pop
dec
stc
lcall
pop
xor
arpl
pop
imul
pop
push
pop
mov
cmp
ds
mov
loop
inc
daa
mov
pop
fistl
dec
div
xor
mov
jmp
imull
pop
in
mov
jecxz,pn
pop
das
mov
xor
mov
repnz
pop
jb
xor
repz
hlt
jecxz
pop
je
cmc
divl
bound
mov
cmp
pop
mov
lock
ja
lods
out
jmp
lock
outsb
imul
outsl
jmp
inc
add
je
loop
scas
scas
jae
out
cli
insb
add
aaa
push
jbe
add
aaa
xlat
xor
jno
adc
jns
adc
jb
pop
sbb
pop
sbbb
jecxz
inc
pop
js
jmp
cmpsl
and
out
scas
test
xchg
bound
jp
or
daa
jecxz
mov
imul
bound
xor
jecxz
pop
idiv
stc
pop
imul
stc
je
cli
bound
jno
scas
mov
pop
cli
lock
subl
icebp
mov
popa
jne
mov
mov
mov
dec
dec
lock
dec
rcrb
arpl
mov
mov
pop
or
loop
lret
ss
jno
sub
clc
in
adc
out
mov
inc
add
js
clc
jmp
cmp
cmp
das
out
stos
movsl
fisubs
inc
jae
mov
aad
xchg
loopne
data16
aam
cmc
test
mov
jb
test
sbb
movsb
das
jmp
sub
ds
pop
fldcw
movsl
gs
mov
jne
cmp
fisubrl
mov
mov
xor
das
cwtl
je
cmp
repz
jno
sahf
xor
push
scas
stc
notl
cwtl
push
lret
mov
xchg
push
movsl
inc
sub
xor
sub
xor
mov
stos
mov
sub
lret
sbb
loop
test
push
in
and
sub
jmp
stc
sub
das
sbb
xor
outsb
sbb
mov
jp
out
imul
daa
testb
mov
mov
pop
inc
pop
in
je
in
ljmp
inc
push
mov
jb
in
mov
hlt
lret
xchg
mov
inc
mov
jmp
fistps
push
push
test
ja
lods
into
gs
jo
popf
shll
mov
jns
mov
out
push
jmp
sbb
and
pop
mov
jp
je
adcl
push
arpl
sti
add
jns
inc
xchg
je
addr16
in
pop
inc
mov
pop
sub
pop
fwait
scas
pop
insb
aad
pop
test
xchg
cltd
pop
insl
es
and
mov
data16
lock
jns
insl
xchg
in
fucomi
mov
mov
lods
clc
jns
insl
dec
push
aas
ja
pop
xor
jns
insl
enter
sbb
call
mov
in
sbb
test
jns
insl
dec
inc
push
lods
fucomi
mov
dec
dec
lret
push
insl
sbb
sub
jns
insl
cs
inc
outsb
je
addr16
pop
mov
test
dec
mov
je
dec
pop
or
sub
pop
lret
das
cmp
je
iret
pop
mov
je
scas
pop
dec
mov
pop
push
adc
sti
xor
jns
insl
mov
lock
sub
pop
pop
nop
mov
je
jo
icebp
mov
je
rcrb
mov
je
jb
rorl
mov
addr16
xor
mov
divl
sub
push
mov
jb
cs
jp
je
push
pop
push
mov
pop
inc
mov
nop
pop
insl
sbb
push
mov
pop
fmull
insb
pop
push
pushf
jmp
mov
pop
cmp
xchg
stc
pop
insl
pop
push
aas
cmp
std
pop
cmp
mov
push
mov
jns
jo
cs
jp
je
mov
stc
pop
insl
cmp
pop
addr16
enter
pop
pop
insl
push
inc
push
fstps
sti
mov
mov
je
jle
jbe
pop
jns
insl
pop
inc
push
ds
pop
clc
jns
insl
cmp
pop
sbb
jns
insl
filds
jg
sti
lahf
clc
jns
insl
aas
inc
push
jp
sti
pop
clc
jns
insl
add
and
sti
sar
loopne
adcb
je
addr16
dec
mov
jnp
pop
push
pusha
shll
xor
push
int3
sub
sbb
aaa
cld
mov
jbe
shl
pop
jl
mov
call
sub
inc
adc
std
or
pop
pop
pop
xlat
test
and
pop
or
test
arpl
push
add
adc
dec
dec
test
add
aaa
inc
push
ret
ljmp
dec
mov
dec
mov
ja
testb
or
mov
push
pop
xor
inc
popa
leave
in
lret
and
cmp
add
push
xlat
xorb
push
cmp
pop
pop
add
mov
jecxz
xor
mov
gs
mov
es
mov
ss
adcl
xchg
movsb
add
ret
jbe
pop
cmpsb
jmp
imul
roll
in
push
imul
add
jecxz
adc
jbe
les
xchg
sub
or
sarb
or
sub
mov
jnp
sub
xor
jne
cmpb
jbe
pusha
sub
mov
or
xor
adc
test
cmpl
push
cmp
repnz
int
sbb
or
adc
adc
andl
movsl
mov
fld
xor
test
sub
or
clc
insl
addr16
fbstp
xchg
fidivl
adc
jb
popa
out
pusha
xor
jbe
leave
push
pop
addr16
push
stos
movsl
jnp
inc
cltd
xchg
dec
cmp
adc
js
and
jo
push
nop
movsl
lods
push
stc
inc
add
jnp
mov
test
out
dec
add
test
ja
subb
ljmp
call
and
je
in
outsl
addr16
loope
mov
push
jb
negl
mov
aas
xor
arpl
ja
mov
cmp
add
jbe
nop
or
aam
push
roll
arpl
icebp
lret
dec
and
jmp
leave
jns
add
and
fadd
popa
xchg
push
inc
and
jnp
jbe
aam
shll
and
jae
lds
xchg
push
lods
call
cmp
sub
inc
dec
xlat
adc
ljmp
inc
mov
cmp
in
cmp
pop
sub
jge
push
xchg
mov
jae
adc
sbb
adc
repz
push
cmpsl
icebp
imul
ja
and
mov
and
push
test
or
addb
es
mov
mov
add
push
push
stc
fs
movsb
cmp
sbb
pusha
ja
push
mov
jecxz
aaa
pop
mov
sbb
insb
das
push
push
xor
clc
jb
sbb
mov
aas
aad
push
xchg
push
das
out
xor
mov
testl
jmp
ljmp
in
test
clc
pop
jecxz
aam
mov
dec
push
repnz
pusha
mov
add
loop
aaa
scas
cmpsb
lods
out
aam
sbb
jp
not
xorl
push
or
push
loope
cli
inc
push
pop
adc
jle
stos
outsl
sub
je
inc
push
cmpl
jg
mov
mov
jns
aam
and
pusha
cmc
leave
rclb
leave
inc
xor
loop
jno
or
jbe
jmp
xor
mov
nop
addl
jnp
push
dec
decl
mov
faddl
jae
dec
ljmp
sub
push
push
roll
xchg
push
mov
push
rcrl
pop
aaa
imul
js
push
int3
enter
sub
or
or
out
jbe
repnz
or
or
sbb
jmp
lret
add
faddl
cmc
fsubl
fmul
fdivrl
pop
push
cmp
aam
xor
cmp
dec
shll
dec
sub
adc
or
cmpl
fiaddl
addr16
jge
jge
jge
jge
jge
pop
stc
test
fists
adc
fstl
fcompl
fsubrl
insb
fmull
push
jns
stc
xchg
sub
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
mov
and
fsts
negl
pop
add
or
mov
mov
out
lds
lock
jge
pop
jmp
or
fisubs
pop
ret
pop
dec
fdivr
mov
mov
pop
mov
fmull
fmull
enter
pop
cli
fiadds
fisttpll
mov
push
int
dec
sub
and
adc
mov
xchg
sbb
or
mov
xchg
sub
sbb
pop
data16
pop
push
fsubl
fsubl
pusha
fsubr
fsubrl
fcompl
push
xchg
mov
pop
aam
xor
adc
adc
adc
pop
cmp
sub
sub
adc
sbb
add
xchg
stos
push
testl
inc
or
or
or
mov
add
cmpl
mov
test
jg
jge
jge
pop
imul
outsl
subl
fidivrs
arpl
add
lahf
adc
clc
mov
adc
jg
pop
fucomi
ljmp
pop
pop
faddl
rcr
add
mov
fsubrl
or
fcmovnu
push
mov
add
add
jmp
aas
dec
enter
inc
testb
jae
adc
fistpll
cmp
sub
sub
sub
sub
sub
sub
sub
sub
call
enter
sub
sbb
mov
repz
add
mov
int3
pop
push
jns
mov
cmp
js
mov
jmp
pushl
ljmp
scas
out
ljmp
ljmp
fimull
jns
mov
aas
xchg
adc
insl
inc
insb
aam
push
shlb
and
bound
orb
add
add
in
sub
aam
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
daa
emms
or
cltd
lods
mov
dec
sbbl
mov
pop
sub
mov
stos
fmul
and
stc
adc
sbb
inc
sbb
cmp
jmp
fists
pop
and
jge
pop
sti
enter
pop
pop
fidivrs
pop
cmp
mov
hlt
fcom
inc
xor
adc
adc
adc
adc
cmp
xchg
lret
aam
xor
adc
adc
adc
adc
cmp
push
and
sub
cmc
or
and
insb
out
js
out
fisubrs
dec
mov
xchg
lods
hlt
fdivrl
dec
pop
fildl
pop
fisttpl
or
inc
sbb
jb
mov
pusha
sub
fmuls
cmp
sti
mov
xchg
mov
xor
adc
adc
jo
push
push
mov
xchg
sbb
pop
clc
sbb
aas
push
ds
cmp
dec
adc
call
xchg
in
fs
xor
adc
adc
stos
mov
repnz
orl
mov
cmc
sbb
or
or
or
or
fistl
testl
rolb
lahf
or
jge
sub
mov
enter
sub
jae
mov
jge
jge
jge
jge
jge
lods
push
inc
jo
push
shlb
push
jbe
mov
jmp
call
push
lret
fwait
inc
aaa
pop
inc
inc
movsl
inc
hlt
inc
mov
lcall
add
lods
imul
mov
cld
aas
xor
out
mov
scas
sub
sbb
je
js
cmp
lods
xor
mov
xor
xor
scas
sub
push
xchg
adc
lods
jno
lods
or
mov
enter
sub
sbb
or
or
pop
hlt
xor
jb
ret
pop
cli
test
out
ja
push
divl
aam
xor
adc
adc
jo
adc
adc
adc
adc
adc
out
repz
or
mov
repnz
or
mov
icebp
or
or
mov
add
add
scas
add
add
add
scas
add
add
add
lods
add
add
notb
xchg
cmp
jp
push
xor
adc
adc
mov
xor
imul
xor
or
push
lea
stos
mov
mov
jne
jp
pop
cld
or
cmpsl
mov
jecxz
pop
cld
add
inc
in
adc
decl
sti
cld
jb
mov
sub
mov
call
push
es
int
les
cs
sub
addr16
add
int
xor
xor
loope
loopne
or
pop
fwait
in
addb
pop
jle
mov
mov
mov
aaa
push
sbb
movsb
mov
jbe
movsl
xor
imul
outsb
push
fdivrp
movsl
addr16
mov
std
adc
xchg
ss
test
pushf
sti
mov
cmp
stos
stc
lods
push
fwait
sti
jmp
pop
jbe
pop
and
pop
sub
stos
mov
ljmp
adc
jns
sti
outsl
insl
jnp
addr16
cmpsl
mov
icebp
jp
and
pop
push
js
jb
xchg
jnp
xlat
aaa
daa
pop
pop
jbe
push
inc
mov
xchg
xchg
jnp
gs
inc
mov
xchg
jnp
cmc
in
lds
je
push
jnp
movsb
xchg
test
jmp
leave
or
pop
clc
cli
jbe
mov
hlt
mov
jmp
push
adc
cmpsb
pushf
add
xchg
inc
rol
in
cli
mov
mov
inc
adc
sbb
fdivrs
push
ds
sub
pop
je
mov
je
leave
inc
cmc
pop
shlb
fmuls
inc
aam
add
and
lret
into
je
les
or
test
adc
cs
scas
or
mov
or
or
fdivp
cmp
push
push
fcmovnb
and
std
xchg
xchg
ret
test
int
data16
adc
mov
and
pusha
imull
ljmp
and
inc
cmc
aaa
inc
mull
insb
push
xchg
push
addb
aaa
jbe
mov
mov
mov
push
xchg
pop
mov
data16
jns
cmp
pop
test
inc
add
add
xchg
fisubl
mov
inc
dec
mov
jne
pop
fildl
mov
sbb
sbb
js
lods
mov
inc
sub
xchg
aam
add
xchg
std
cltd
ds
inc
jp
test
xchg
inc
lcall
movsl
push
bound
lret
push
stc
jmp
testl
movsb
fldcw
mov
sbbl
shl
adc
stos
xor
jp
jp
or
inc
fisubrl
adc
xchg
mov
mov
and
and
sarl
push
sbb
sbb
aaa
filds
stc
xlat
push
lret
xchg
mov
push
xor
inc
pop
jno
ret
lret
subb
imul
mov
scas
or
out
das
pop
push
xor
xor
mov
lods
cmpsb
je
aaa
add
inc
mul
leave
leave
mov
out
jp
cmpsl
outsl
mov
not
lock
push
or
movsl
inc
mov
sahf
mov
and
mov
shll
je
scas
jmp
adc
imul
shll
out
xor
ja
mov
movsl
sbb
shrb
dec
out
ljmp
dec
or
jmp
cmp
inc
jp
aaa
sub
mov
and
pcmpgtd
fidivrl
sbb
sub
fstpt
fwait
test
mov
bound
stos
mov
scas
or
fcoml
sti
mov
dec
pop
pop
jae
mov
inc
fdivs
xchg
pop
mov
mov
stos
push
push
sti
cmpl
popa
in
sbb
mov
adc
out
mov
sbb
jae
jo
and
pop
clc
cld
xor
sarl
les
mov
mov
mov
stc
pop
jmp
add
xchg
xor
out
pop
xchg
mov
or
mov
jbe
popf
stos
std
inc
icebp
dec
and
sub
mov
stc
inc
push
mov
fwait
stos
iret
ljmp
pop
dec
inc
add
int
cwtl
jg
insl
ss
ja
pop
dec
ficompl
xor
sbb
enter
dec
fwait
pop
icebp
cmp
mov
push
aas
sbb
push
inc
ljmp
bswap
hlt
and
jbe
sbb
push
jb
test
bound
jns
outsb
mov
out
sub
lock
imul
xchg
sar
imul
das
pusha
outsb
clc
stos
js
mov
es
sbb
push
pushf
lret
test
mov
stc
jp
fcomps
insb
or
fstpt
jmp
lods
cmpsl
sti
mov
xor
ljmp
ds
stos
ds
or
clc
sbb
push
jae
jo
sub
movsl
mov
adc
int
cmp
ljmp
pop
aaa
push
ret
loop
in
stos
es
int
ds
popa
testl
adc
cs
cli
dec
pop
ss
testl
fstps
icebp
iret
stc
ds
cmp
or
push
dec
mov
popa
decb
jp
fsubrp
insl
inc
div
push
cmpsb
nop
outsl
test
stos
jbe
idivb
in
pop
fstpt
aas
pop
int
pop
std
sub
in
push
test
outsl
cltd
stos
cmp
push
dec
dec
insl
jp
adc
push
lods
dec
push
js
jmp
jp
sbb
and
jno
lahf
in
push
data16
inc
and
sbb
jne
movsl
and
stos
push
pop
mov
sbb
pop
and
repnz
cmp
dec
repnz
xor
mov
outsl
mov
pop
ljmp
cltd
das
sti
lock
sbb
xchg
pop
fistpll
das
jle
mov
icebp
xlat
cmp
push
mov
add
fisubl
out
fildll
pop
aas
xor
jns
gs
add
call
dec
mov
cli
pop
or
test
lret
divl
cmp
in
clc
cmp
je
push
xor
cli
cli
push
jae
mov
mov
fsubp
dec
ss
repz
sbb
pop
cwtl
inc
lcall
sbb
pop
push
cmp
jne
or
cmp
out
fwait
inc
outsl
lcall
mov
dec
dec
out
mov
inc
xor
repnz
or
adc
lcall
jl
mov
cmp
dec
neg
mov
inc
mov
inc
cmpsb
mov
xlat
cmp
mov
cmp
lock
mov
pop
cmp
out
mov
pop
js
aas
lock
hlt
out
lods
add
pop
mov
jb
jle
popf
popa
mov
insl
adc
fisttps
mov
outsb
mov
mov
mov
push
test
push
jnp
cmp
icebp
sub
inc
cmp
jb
andl
ljmp
aam
sbb
lret
jae
adc
cmp
imul
dec
subb
das
jno
inc
ljmp
push
or
xor
xchg
dec
jmp
repnz
ljmp
pop
bound
sarb
xlat
dec
mov
or
ret
add
jne
nop
xor
pop
dec
fisttpll
xchg
clc
sti
adc
sbb
push
ret
adc
sub
insb
pop
in
sbb
iret
mov
fs
in
xlat
pop
adc
or
adc
mov
clc
xchg
hlt
in
iret
sub
push
push
addr16
sahf
sub
test
or
adc
ljmp
jle
int3
jl
pop
cmpsl
fs
je
cmp
fs
jnp
mov
jmp
mov
sbb
out
imul
cmpl
mov
and
jnp
cld
subl
pop
pop
push
jns
adc
dec
rcr
mov
sub
mov
xlat
jnp
push
jmp
addl
outsl
test
stos
outsl
push
inc
fst
jnp
inc
add
jp
in
sbb
out
inc
popf
sbb
inc
pop
fistpll
jmp
xor
xlat
jmp
fmull
ja
push
imul
sbb
test
sahf
push
inc
push
cmp
dec
adc
imul
iret
out
mov
jmp
pop
pop
inc
sarb
stos
gs
or
test
pop
mov
pop
sub
push
add
repz
incl
mov
pop
dec
enter
jnp
cmc
inc
add
adc
in
jnp
push
push
filds
and
into
fidivrs
jg
pop
pop
fcmovnbe
loopne
push
pop
stos
jnp
inc
mov
mov
fcompl
fs
cmp
and
iret
shll
gs
sub
jmp
mov
test
add
add
mov
xor
in
mov
test
mov
jns
fistl
imul
int3
ret
jb
lods
jnp
push
ss
sub
adc
or
add
xor
jae
or
cwtl
adc
cs
mov
cmpsl
and
test
cmp
scas
jb
pop
sbb
mov
push
and
and
shrl
cmp
sbb
jns
mov
adc
imul
and
inc
inc
dec
iret
fs
xchg
inc
mov
xchg
fidivl
dec
pushf
cmp
sub
ror
jns
aad
popw
shll
es
inc
imul
and
iret
fistpll
cltd
popf
fists
rcr
ss
push
and
loopne
and
in
xor
sbb
jmp
data16
lods
arpl
enter
push
sbb
pop
dec
sub
test
push
cmp
jg
andb
pop
pop
stc
lret
sbb
out
xlat
int3
pop
test
out
lahf
mov
and
pushf
je
in
mov
mov
iret
pop
fildll
out
hlt
mov
outsl
ret
test
fucomi
add
fsts
jnp
daa
pop
aad
jmp
cmc
lret
pop
lods
adcb
fmulp
jmp
jbe
jne
ss
lcall
xor
lds
loopne
jnp
jl
daa
jo
pop
cld
sub
sahf
xchg
mov
fwait
sub
cmp
ret
sahf
or
xor
fisubl
repz
jg
push
subb
ss
scas
shll
push
mov
mov
ret
insb
flds
fisttpl
call
in
out
sarl
jne
lcall
imul
dec
sub
imul
cwtl
sahf
test
rcll
jnp
and
push
ret
test
mov
inc
jb
jno
mov
push
js
xor
jbe
jb
cs
lahf
out
push
imul
dec
imul
and
loop
fistpl
push
xchg
cmp
xchg
stc
js
hlt
sbb
ljmp
push
sub
ja
sub
mov
jno
fbstp
xchg
jl
scas
ss
insl
push
dec
pop
jp
js
mov
push
fisubrl
or
jl
cmp
adc
xchg
out
sub
xor
out
pop
mov
hlt
cld
loope
xor
dec
sbb
repnz
imul
bound
loope
in
push
sbb
xchg
jg
imul
jmp
jnp
mov
fisubrl
ficomps
mov
gs
icebp
mov
jnp
loop
insl
lret
test
xlat
mov
cs
int3
jnp
mov
lahf
lds
dec
jne
jl
jge
aaa
leave
xor
roll
jmp
fs
test
out
enter
xchg
jnp
movsl
inc
jmp
stc
cwtl
jnp
call
jnp
out
adc
ds
sbb
cltd
jne
cmc
xchg
loop
pop
outsl
xchg
es
cmp
inc
out
push
sub
fcompl
mov
mov
push
sub
jno
mov
push
xlat
fdivs
je
sub
js
xchg
arpl
jnp
inc
sbb
clc
gs
pop
push
int
pop
ret
hlt
int
ss
hlt
imul
sbb
nop
xchg
jp
or
mov
jo
cmp
push
mov
or
fcomp
repz
jmp
xor
das
push
xchg
adc
inc
sub
cmp
into
aad
int3
aas
xor
pop
outsl
bound
fistl
mov
sar
jbe
mov
xchg
xchg
cmp
push
test
fldln2
movntps
xor
sub
into
inc
imul
and
ljmp
fisttpl
pop
or
roll
div
divb
xchg
loop
push
test
ljmp
xor
cmpsb
adc
sbb
addl
pop
test
mov
xor
pop
and
mov
mov
pusha
inc
mov
jae
call
pop
mov
or
and
jnp
pop
mov
in
jnp
cmc
sbb
test
in
sbb
or
adc
imul
or
aam
lods
lcall
jno
jns
pop
xchg
lret
jg
dec
popf
fimull
int3
cpuid
or
jnp
insl
xor
add
sub
jmp
mov
sbb
jmp
push
xor
add
test
sub
loopne
test
and
pop
xlat
fldt
loope
lret
cmpsl
xor
stos
mov
leave
scas
aaa
mov
cld
pop
pop
sti
inc
imul
cmp
pop
jne
mov
out
mov
xlat
movsl
jmp
or
popa
mov
clc
push
pop
jecxz
pop
imul
mov
shrb
leave
xchg
repz
fs
mov
pop
xchg
adc
popf
mov
dec
push
inc
xchg
mov
mov
out
pop
lahf
or
out
imul
and
push
lahf
adc
push
ds
and
scas
dec
rorb
pop
in
std
jl
inc
outsl
add
mov
adc
in
mov
jmp
pusha
leave
mov
int3
jecxz
imul
daa
mov
icebp
push
inc
or
sarl
xor
scas
pusha
adc
sbb
dec
movsl
in
ljmp
pusha
or
and
in
cltd
push
cli
and
orl
mov
pop
iret
jmp
je
cmpsl
andl
xor
notl
jmp
mov
mov
enter
das
movsl
fwait
ret
jl
loope
lods
jnp
pop
mov
jb
cwtl
push
mov
stos
stos
hlt
pusha
push
repnz
fbld
clc
pop
rorl
cmp
push
xchg
icebp
stos
and
jg
jmp
stos
orb
jecxz
dec
icebp
test
cmpsl
sti
add
mov
sbb
out
xor
mov
outsb
inc
test
insl
repz
pop
pop
repz
add
sub
cld
out
pop
fwait
jb
pop
mov
jae
push
leave
xchg
addr16
sbb
jne
insl
sti
fwait
mov
mov
fnstsw
out
ja
cli
hlt
pushf
jnp
data16
out
cmpsl
out
sbb
push
clc
jbe
inc
bnd
and
cli
ja
cli
jne
sti
loopne
cli
pop
pop
or
pop
pop
inc
ja
js
pop
in
cmp
inc
jmp
scas
call
jmp
test
je
cmp
mov
ljmp
scas
or
rol
inc
idivb
inc
fwait
cli
sti
pop
xor
sbb
shrl
pop
jo
push
and
and
jbe
icebp
push
clc
pop
jb
imul
pop
jp
outsb
js
push
push
ljmp
push
jbe
add
pop
je
xchg
mov
and
scas
cmp
pop
cmp
shll
pop
jb
pop
fistl
xor
mov
call
bound
mov
pop
mov
push
sti
mov
arpl
push
ja
add
insl
jae
je
xor
mov
lock
ja
jne
sti
sti
repz
jbe
push
pop
cli
or
cmp
and
adc
cmpsl
jp
jne
stos
xchg
or
test
push
cmpsl
sbb
fldt
cli
fidivrs
jbe
pop
leave
mov
mov
xchg
pop
ss
imul
js
inc
stos
cli
mov
insl
mov
jmp
insl
in
jns
lock
sub
orl
mov
push
jns,pn
sub
fildl
jae
imul
jb
dec
cli
lret
or
jo
out
test
mov
jnp
jb
enter
ja
push
and
lock
ja
sti
add
ljmp
jb
cmc
je
sub
or
imul
dec
js
stos
pop
adc
mov
mov
jnp
divl
push
dec
jae
push
sti
stc
sbb
inc
mov
jns
jae
push
stos
cmp
push
dec
incb
jno
out
sbb
lahf
jae
clc
in
xchg
jno
jmp
ja
push
in
sbb
cli
dec
fsubrl
imul
loop
scas
jo
add
out
out
dec
in
jns
inc
jnp
jp
jns
outsb
cmp
push
lods
cli
mov
dec
dec
jbe
imul
mov
sbb
sbb
jns
addr16
popf
popa
popf
insb
por
popf
xor
je
add
push
cli
push
sub
aaa
cli
stos
add
jns
or
je
out
pop
fsubrl
sbb
clc
push
loop
mov
jbe
sub
out
jnp
pop
jae
pop
add
mov
xchg
cmpsl
outsb
dec
jae
outsl
pop
or
pusha
js
push
clc
repz
dec
imul
aad
mov
ja
fmull
lock
jae
mov
dec
add
clc
fidivs
divb
in
jns
notl
sub
jne
pop
outsb
mov
mov
int3
sbb
int3
add
jmp
into
push
out
out
outsl
fildl
shlb
jnp
jae
jns
jp
out
push
push
mov
mov
mov
jne
stos
add
push
data16
outsb
jbe
inc
push
jo
sbb
xchg
outsl
js
jnp
jo
insb
outsl
fidivs
push
sbb
cmp
repnz
push
push
je
pop
testb
or
in
dec
jae
push
sub
mov
je
mov
jne
pop
in
iret
push
jns,pn
xor
insb
inc
out
xchg
js
push
fdiv
ljmp
scas
jp
add
adc
jne
stos
jnp
mov
jae
js
push
xor
pop
js
or
cmpsl
js
jo
cmp
adc
cli
imulb
addl
pop
js
jae
outsb
cmp
jns
sub
imul
cmc
outsb
je
and
push
stc
sbb
in
pop
lock
xor
jecxz
or
outsb
push
xor
fcmovu
clc
pop
insb
pusha
jo
push
sti
fs
jns
dec
push
push
js
dec
xor
jno
jp
sub
inc
mov
cltd
out
dec
sbb
lret
jo
in
xor
jne
ja
jp
mov
repnz
jmp
lret
pop
clc
pop
jbe
insl
cwtl
add
shr
in
adc
js
clc
jbe
js
sarb
xchg
sti
mov
jbe
negb
lret
shl
clc
xchg
mov
inc
subl
jb
pop
negl
jno
imul
or
lock
addr16
in
mov
ljmp
jbe
mov
xchg
imul
xor
mov
jae
cmpsl
arpl
add
xchg
cmp
xor
test
jp
das
ljmp
jmp
ljmp
dec
ja
sub
cmp
leave
lret
cmp
sub
mov
lret
stc
pop
jp
popa
cmp
dec
xchg
xor
inc
mov
sti
mov
cmp
xchg
pop
outsl
add
lock
outsb
jae
je
ret
push
addr16
jae
mov
mov
cmp
sti
outsb
ret
lods
bound
ret
insl
ret
insb
jg
jp
xlat
out
push
jp
sti
mov
and
jno
ljmp
scas
pop
jae
mov
or
outsl
xchg
push
outsl
je
add
jbe
inc
inc
pushf
mov
mov
jmp
jns
jge
jp
pand
decl
faddl
les
scas
dec
sbb
insl
stos
push
jno
leave
mov
into
div
jp
mov
in
mov
imul
jo
jmp
sub
ja
js
je
push
push
xor
fistl
mov
lret
push
enter
js
cld
pop
sti
jns
sub
sbb
dec
cmp
adc
jo
sub
sub
cmpsl
or
jbe
push
mov
push
fwait
movsb
daa
fs
sti
ja
insl
xchg
xchg
jp
push
das
push
hlt
sti
scas
jmp
xor
movsb
cmp
mov
out
jbe
imul
push
shl
int3
fnstcw
push
push
pop
js
sti
cmp
jno
cmp
arpl
fwait
outsb
iret
stc
mov
inc
test
sub
cmp
imul
je
insb
jbe
push
push
sbb
gs
outsl
in
push
fabs
pop
dec
dec
adc
aaa
js
nop
notl
ja
push
bound
jae
xlat
dec
jne
jne
sbb
jo
jns
psadbw
out
xor
hlt
push
dec
pop
cltd
jae
pop
mov
mov
scas
jbe
sti
movsl
push
cmpsl
jns
jns
pop
jns
test
repz
mov
stc
jbe
scas
jp
lds
ds
test
je
push
inc
in
jno
sub
jb
stc
cli
imul
cmc
cmp
sbb
cmp
in
ja
pop
jae
sbb
repz
ja
bound
mov
mov
cmp
fs
fxch
jns
jns
adc
and
in
fstp
fstps
enter
fs
jns
cltd
js
or
outsl
shrl
jno
in
jmp
js
inc
enter
fadd
push
out
pop
jbe
push
cmc
mov
sub
fisubrs
outsb
test
fcmovne
cmc
lods
cmpsl
out
adc
jnp
ja
push
imul
xlat
clc
push
outsl
cmpsl
sub
jno
mov
stos
mov
popf
fwait
mov
mov
inc
mov
xchg
repnz
insl
sti
outsb
cmp
ficomps
inc
sbb
cmp
repz
cs
subl
xor
sti
outsl
inc
or
mov
in
add
stc
jp
adc
push
rorb
jo
ja
hlt
sub
faddl
xchg
jae
clc
dec
insl
xor
jo
jp
mov
jno
insl
lds
je
sti
jns
mov
push
sub
call
in
je
and
sbb
mov
adc
cmc
push
in
jp
mov
pusha
lock
inc
inc
in
out
repz
imul
or
sbb
outsl
mov
sub
jno
or
ja
mov
lock
mov
pop
jo
clc
cmc
in
jbe
mov
jp
mov
cli
pusha
sub
mov
mov
jo
outsb
push
jns
js
mov
mov
xor
jge
sti
movsl
pop
push
jno
sti
pop
idivl
mov
jb
xbegin
je
je
mov
xchg
clc
xchg
mov
jns
and
fsubp
dec
jns
jae
mov
outsb
ret
outsl
lock
sub
jbe
mov
inc
jns
lcall
ja
inc
repnz
js
mov
js
xor
sbb
adc
addb
jno
push
push
repz
push
mov
outsl
inc
mov
clc
test
std
outsl
nop
aam
pop
jo
sti
insl
fxtract
jbe
pop
mov
mov
adc
mov
repnz
dec
ja
mov
divb
push
mov
je
mov
iret
add
js
dec
shl
jp
dec
pop
es
mov
push
sbb
gs
mov
pop
ja
cmp
lods
repz
xor
xchg
jb
mov
es
xlat
cli
xchg
cmpsl
jbe
mov
mov
xor
out
stc
shll
hlt
insb
in
mov
adc
jbe
xlat
sbb
jae
aaa
mov
lods
jo
test
push
insl
sbb
int
push
mov
inc
ja
rolb
es
bound
jns
insb
dec
mov
mov
lods
mov
jo
cmp
int
mov
jne
imul
or
jg
mov
add
lcall
xchg
pop
cs
xchg
dec
cmp
mov
xorl
call
push
bound
push
cmp
std
orl
pop
scas
pusha
fwait
ja
add
adc
cmp
popa
stc
outsb
mov
pop
cld
xchg
push
sbb
je
les
hlt
mov
jnp
cwtl
pop
push
hlt
pop
jo
cmp
insl
aaa
int3
repnz
stc
outsl
cmp
js
mov
adc
sbb
mov
imul
pop
push
fstp
push
jne
jmp
sbb
outsb
cmpsl
jns
notl
mov
jbe
cli
inc
pop
mov
out
out
rolb
push
fs
shll
je
cld
bound
jo
cmpsl
adc
dec
cmpsl
enter
enter
pop
imul
dec
sub
in
push
or
lret
outsb
cmp
or
gs
jo
pop
jp
jb
cmpsl
push
sub
jne
imul
ss
jp
popf
fucomp
sti
jo
cmpsl
cmpsb
adc
pusha
adc
xlat
stc
fldcw
mov
cmc
fdiv
icebp
sub
in
mov
pop
cmpsl
sarl
jbe
xchg
in
sub
add
stc
pop
dec
jnp
enter
shll
cmpl
fisubrs
jbe
loop
insb
insb
or
bound
dec
push
push
cli
pop
ja
mov
push
pop
jb
hlt
push
jp
lret
sub
inc
and
jne
pop
lock
je
stc
sub
and
repz
xchg
je
and
ja
mov
fsubrs
dec
jmp
jb
jae
pop
repnz
repz
dec
sti
test
jp
dec
int3
repnz
mov
cli
jmp
jns
jecxz
pop
lret
xchg
mov
xchg
add
pop
jmp
cmpsl
lret
mov
orl
pop
icebp
fsts
call
test
inc
dec
mov
mov
cmp
dec
pop
fdivrs
sub
mov
mov
sub
cwtl
pop
or
or
scas
ja
pop
pop
mov
push
popf
jae
imul
fcompl
mov
arpl
push
pop
sub
in
insb
jecxz
pop
outsl
mov
jo
lahf
idivb
add
jp
fwait
pop
inc
pop
icebp
push
dec
imul
imul
lret
js
cli
jo
cmp
mov
push
jp
add
sub
xor
jne
jp
enter
aas
mov
je
clc
outsl
jp
mov
stc
xor
cmp
pop
adc
nop
mov
xor
cmp
sbb
std
testl
jnp
add
jge
jnp
push
std
push
outsb
dec
pop
idivb
dec
add
outsl
sarb
aam
pop
jnp
rcll
icebp
pop
jnp
js
cmp
cmp
mov
dec
cmp
ljmp
ja
jnp
xor
xor
inc
inc
jnp
add
add
insl
jp
outsb
cmp
dec
jnp
or
or
jno
jb
jbe
xor
inc
jnp
add
clc
jnp
mov
mov
jg
jl
div
jnp
mov
mov
ret
mov
addb
lods
mov
jnp
mov
jle
cmc
bnd
mov
mov
rol
jnp
addl
prefetcht0
pop
push
sub
push
push
jnp
adc
adc
addr16
jnp
and
and
dec
pop
jnp
sbb
push
pop
sub
push
jnp
adc
bound
and
fdivrs
fwait
cwtl
mov
fucomip
jnp
stos
lahf
test
rcl
sarb
xchg
xchg
nop
xchg
jecxz
loopne
in
cmpsl
mov
jnp
cltd
lea
jnp
test
aad
jnp
xchg
xchg
xchg
xchg
loope
loop
out
movsl
mov
jnp
ret
rorl
movsb
sub
sub
xchg
cmp
add
push
lret
ss
adc
xchg
test
repz
mov
cs
out
mov
jb
outsb
jmp
cmpsl
movb
icebp
dec
outsl
imul
jb
pop
xor
in
pop
xor
insb
lret
dec
cmc
stc
push
xor
andl
fs
jecxz
cmp
lods
int3
divl
jo
jmp
add
dec
js
dec
imul
cli
lods
ja
pop
or
repz
cmp
pop
cmp
sub
jge
je
jo
cmpsl
mov
stc
mov
jmp
mov
mov
insl
ljmp
lds
xlat
mov
negl
cwtl
je
imul
sub
gs
sti
ss
jns
push
mov
jmp
cmp
test
jne
lret
cmp
pop
outsl
arpl
or
aas
je
jae
addr16
add
hlt
fwait
hlt
mov
jg
jnp
lahf
arpl
das
outsl
cmp
addr16
je
pop
mov
arpl
ja
mov
or
mov
outsl
mov
jae
addr16
sub
cli
sub
fidivs
pop
mov
ficompl
sbb
push
sbb
jnp
imul
sub
cmp
jnp
pop
scas
arpl
jle
mov
addr16
mov
dec
hlt
pop
hlt
dec
ss
jnp
pop
arpl
jp
imul
push
pop
mov
dec
ja
mov
jae
imul
lods
jnp
pop
sub
jnp
ja
imul
or
sbb
sbb
sbb
sbb
cltd
jle
call
ja
clc
hlt
stc
hlt
in
hlt
fnstsw
imul
hlt
int
or
je
stos
sub
arpl
outsl
mov
popf
jnp
pop
jge
lea
cltd
hlt
pop
hlt
dec
hlt
cmp
outsl
imul
jno
jne
gs
imul
arpl
push
fs
xchg
pop
subl
movsl
jae
addr16
arpl
xor
ja
imul
mov
adc
aad
lds
loope
sbb
ja
sbb
sbb
sbb
jnp
imul
les
aam
rcrb
adc
xor
clc
add
pop
and
ja
jnp
mov
mov
movsb
addr16
dec
pop
andb
xchg
inc
push
aas
push
aas
inc
outsl
inc
imul
fs
addr16
ficomps
jnp
bound
imul
or
addr16
or
sbb
arpl
xor
jae
clc
and
pop
add
ja
repnz
insb
jnp
loop
out
mulb
insb
rep
imull
jecxz
dec
pop
ret
arpl
ja
inc
pop
aas
adc
add
imul
outsl
daa
jae
xor
pop
mov
arpl
outsl
xchg
jae
addr16
or
push
or
inc
sbb
pop
arpl
inc
ja
push
das
cltd
cmp
cmp
cltd
push
movsb
mov
xchg
inc
push
shll
sysexit
mov
jmp
jb
jb
pop
pusha
popf
stc
jecxz
adc
cmp
mov
shll
loope
adc
inc
movsl
or
cmpb
scas
je
shld
and
xchg
pop
push
push
jnp
sbb
push
ss
jmp
jp
sarl
pop
cltd
mov
loopne
into
pop
insl
adc
stc
xor
jae
mov
outsb
push
ret
testl
bound
push
sbb
leave
jnp
jmp
test
jb
xchg
mov
adc
ljmp
das
inc
mov
inc
cmp
mov
xlat
test
fdivl
jmp
dec
jnp
cmpsl
mov
rol
mov
mov
fwait
adc
in
daa
jbe
icebp
sbb
jae
ss
bnd
std
ljmp
cmp
pop
xchg
xor
insl
xchg
push
mov
jbe
aas
add
gs
ret
push
push
pop
mov
jns
pop
imul
out
mov
pop
and
dec
ds
cli
jge
jmp
lret
jp
ja
hlt
jmp
aaa
pusha
movsb
jbe
or
jbe
pop
dec
cmovbe
jno
lods
jmp
scas
jmp
outsb
fsubr
out
daa
ss
mov
jbe
xor
bound
jnp
cli
mov
sub
or
outsl
imul
test
je
mov
xchg
jp
push
or
inc
push
add
pop
push
xchg
jns
or
hlt
jne
xchg
inc
jo
js
insb
test
mov
dec
data16
das
inc
ljmp
pop
imul
dec
pop
lods
dec
xor
add
lods
adc
mov
fwait
mov
inc
push
sti
ret
mov
fucomi
lret
lods
cmp
or
xor
xor
push
mov
fldt
dec
sub
imul
mov
stos
pop
neg
mov
sub
sti
pop
imul
lods
mov
addr16
sbb
mov
push
aaa
jnp
js
test
sbb
loop
scas
and
aad
test
inc
fldl
jnp
adc
mov
cs
add
or
jnp
jmp
xor
adc
sub
jge
sub
jb
jp
cmpb
jo
mull
jnp
adc
into
fimull
lods
push
and
jg
jnp
inc
xchg
repnz
lds
sub
pop
imul
jae
or
pushf
sub
and
jns
enter
aaa
jnp
addr16
push
test
pop
jnp
cmp
mov
mov
int
jnp
repnz
push
mov
sarb
cmp
ss
cmpsl
ljmp
mov
out
imul
js
cltd
fsubrs
push
jae
jle
lcall
mov
dec
scas
inc
xchg
loop
imul
or
pop
stc
jnp
rep
push
push
fidivrs
jnp
pusha
xorl
test
gs
jnp
sub
xchg
jnp
fs
repnz
sahf
std
jecxz
pusha
in
or
lods
add
dec
scas
jnp
in
push
fisttps
or
icebp
jmp
cli
repnz
shrb
add
sub
mov
imul
lea
lods
lds
push
gs
out
js
mov
or
mov
jnp
push
xchg
jnp
movsl
jbe
sbbb
jnp
ret
xor
loopne
sub
push
out
into
stos
cmp
xor
aaa
scas
mov
testl
jnp
inc
dec
js
scas
imul
xlat
jle
out
jae
scas
pop
mov
lods
mov
aad
in
sub
adc
test
outsb
lock
into
inc
sub
jnp
push
aaa
fcmovnbe
fbstp
mov
cmp
bound
mov
lret
jnp
xchg
jns
fildll
inc
mov
xchg
loopne
jnp
gs
push
push
repnz
fsubrp
pop
jno
jo
icebp
jle
jg
sub
arpl
in
sbb
jnp
and
jns
inc
lock
cmp
pusha
mov
xchg
jnp
stos
cltd
mov
jnp
pop
lret
inc
cmp
mov
aad
sub
sahf
aam
lcall
imul
adc
pusha
or
mov
ja
insb
dec
inc
sti
jnp
cmc
dec
imul
dec
fwait
jnp
xchg
mov
fs
xor
adc
or
leave
jecxz,pt
jnp
into
jp
xlat
push
test
inc
std
adc
inc
repnz
in
inc
mov
inc
pop
popa
scas
jnp
out
clc
push
dec
incb
pop
sbb
xor
jnp
push
test
dec
lret
mov
dec
insb
jne
mov
adc
cmpsb
xchg
push
xchg
xor
mov
xor
add
cmc
push
mov
jnp
lret
shl
pop
pop
or
stos
cmpsb
adc
rcrb
push
push
mov
mov
cmp
outsb
jnp
ret
adc
cmp
adc
or
jo
mov
cltd
dec
inc
sub
movsb
fildl
pop
loope
fwait
jmp
or
mov
es
xlat
add
dec
adc
pusha
clc
jnp
nop
cmp
adc
sub
sahf
popf
cmp
xor
or
mov
xchg
push
dec
out
pop
in
jnp
push
cmc
adc
jnp
adc
cltd
loopne
pop
cmp
cli
js
je
aad
cld
iret
enter
sbb
imul
movsl
add
adc
in
ds
lds
lahf
xor
jnp
or
inc
mov
dec
call
cmpl
jnp
mov
aad
jnp
cs
mov
xchg
lret
decb
insb
enter
insb
xor
lahf
jnp
rorb
call
fisttpll
mov
repz
in
jnp
inc
inc
xchg
inc
mov
stos
sbb
jle
jmp
jnp
fimuls
aam
inc
lock
gs
pop
lret
mov
leave
add
mov
or
cmp
outsl
stos
and
pop
pop
sub
scas
sub
mov
jmp
idivl
bound
jmp
mov
out
cmc
or
add
cld
sbb
inc
scas
push
pop
fmull
jmp
jne
lahf
xor
sti
push
pop
mov
inc
push
iret
addr16
movsl
je
sti
js
fs
outsl
or
jne
jns
jno
jp
aaa
sti
jae
inc
ja
jmp
out
imulb
inc
addr16
dec
hlt
clc
out
outsb
bound
push
cmc
out
stc
popf
jo
jp
sti
mov
push
mul
jns
ss
adc
cmpsb
push
push
jae
call
xchg
dec
sub
out
mov
jne
call
adc
sti
dec
ss
jns
repnz
out
cmp
adc
lock
cmp
mov
push
aaa
loop
in
ss
adc
lods
inc
push
dec
call
xchg
out
pop
lods
mov
pop
call
xchg
dec
fisubl
out
inc
lods
aam
fsubr
scas
cmp
xchg
dec
fldenv
out
fldt
lods
cmp
lcall
dec
lods
xchg
push
cwtl
call
xchg
out
fwait
lods
xchg
push
xchg
call
push
cmp
adc
adc
sbb
adc
xor
bound
out
pop
popf
sub
jnp
inc
push
jnp
std
jnp
fs
push
adc
imul
lods
addr16
dec
sbb
push
dec
in
call
in
jmp
lods
jecxz
out
dec
or
bound
imul
or
bound
push
mov
add
out
sub
xchg
dec
into
lods
and
cmp
adc
int3
lods
push
cmc
dec
adc
dec
inc
call
bound
dec
lods
xchg
mov
jne
call
sarb
push
lret
or
enter
lds
leave
adc
ret
out
lods
mov
adc
dec
test
mov
lsl
out
mov
cmpl
adc
or
xchg
or
dec
add
adc
pop
fisttps
out
popa
or
pop
dec
bound
bound
pusha
add
or
loope
fisttpll
lods
loopne
dec
fmull
lahf
dec
mov
mov
dec
mov
pop
or
sub
add
fsubl
or
sbb
bound
sub
add
fdivrl
or
inc
or
cmp
mov
dec
mov
mov
mov
dec
sbb
or
jle
orb
jl
dec
faddl
or
std
or
add
bound
sub
repz
inc
jno
xchg
test
ret
push
jp
pushw
dec
push
out
mov
es
ja
ja
dec
divb
imul
mov
fcoml
outsl
jp
jne
leave
pop
jae
arpl
ljmp
fwait
repz
ljmp
jp
push
js
sub
dec
cmp
lods
inc
cmp
add
pop
add
sbb
fstpt
scas
repnz
push
movzbl
test
mov
in
adc
ljmp
push
push
sub
test
lret
clc
jno
gs
lds
add
mov
std
mov
loop
mov
jae
xchg
hlt
inc
lret
cmc
leave
or
mov
or
dec
pop
leave
mov
inc
pop
inc
mov
inc
jecxz
pop
inc
mov
pop
or
sti
mov
imul
ljmp
ljmp
gs
arpl
test
mov
loop
sbb
cwtl
cmp
sti
lods
add
test
scas
jns
mov
jne
popf
loopne
rorl
mov
js
push
clc
or
push
xor
xchg
add
mov
jo
and
mov
popa
jmp
insl
repz
xchg
pusha
pop
mov
fidivrl
xor
mov
jns
arpl
in
les
imul
jp
cmp
xchg
jae
outsl
dec
insl
mov
mov
icebp
shlb
xchg
mov
imul
pop
lret
pop
jae
ja
je
lcall
push
sbb
pop
fisttps
fdivrl
xchg
repz
jle
stos
push
lret
jno
test
push
clc
out
mov
clc
in
sbb
not
div
sti
xchg
jge
mov
inc
pop
add
je
test
mov
hlt
inc
push
test
jecxz
int
js
xchg
lcall
sti
cmp
xchg
push
dec
xor
mov
mov
test
sarl
repz
lds
pop
imul
xor
push
imulb
imul
jne
mov
or
push
jnp
aaa
mov
jns
pop
mov
mov
jb
adcl
cli
sub
cmc
sar
xchg
cli
inc
or
loop
cli
lret
inc
xor
jmp
bound
push
popa
repz
arpl
push
cmp
jns
xchg
cmp
and
je
mov
xchg
cmp
mov
data16
mov
outsl
cmc
xor
dec
push
test
pop
jbe
inc
pushf
mov
call
stc
insl
push
in
mov
je
inc
jns
xchg
add
insb
ja
push
imul
movsl
icebp
mov
jns
push
in
cmp
cmp
movsl
mulb
cmp
lock
sub
push
rcll
jmp
repz
jecxz
and
and
pop
push
insb
and
inc
movsl
push
pusha
aaa
jge
xlat
stc
xchg
mov
rol
cltd
cmp
jb
inc
ss
jmp
pop
xor
mov
push
jp
push
pop
jl
cltd
push
mov
jno
sub
cs
stc
gs
jo
xor
js
jecxz
pop
loope
fidivs
outsl
pop
cld
repz
xor
adc
movsl
add
jne
lret
dec
test
pop
push
cli
and
mov
cli
jbe
push
sbb
adc
les
pop
lret
add
enter
jns
mov
jno
shl
pop
movsl
jp
jp
mov
inc
mov
test
test
icebp
push
imul
push
xchg
inc
cmc
inc
push
push
fbstp
mov
xchg
cli
xor
inc
cmp
or
pop
test
jg
dec
gs
add
add
mov
mov
scas
push
sbb
aas
cmp
movsl
xor
inc
jns
gs
mov
cmc
clc
jg
mov
or
scas
mov
je
incl
testl
ja
bound
mov
mov
mov
lods
dec
cmp
mov
pop
adc
mov
test
jp
sbb
sti
in
fwait
addr16
push
xchg
lret
js
pop
sti
in
jb
stos
sub
mov
or
fwait
push
sbb
and
bound
cmp
ficompl
pop
cmp
stos
mov
stos
lret
or
in
arpl
pop
fnstenv
or
andb
adc
sbb
stc
js
xchg
xor
js
jae
xchg
hlt
pop
xor
mov
push
dec
fiaddl
xchg
push
rorb
test
jo
mov
pop
sub
push
int
sub
sub
sbb
mov
adc
add
cmp
xchg
or
cwtl
cli
pop
xchg
jmp
jno
and
mov
mov
lret
jp
int3
mov
rolb
repnz
in
shll
repnz
jbe
stos
adc
fwait
xchg
test
dec
inc
xchg
and
insb
jne
sub
or
mov
push
imul
mov
dec
mov
jecxz
out
push
mov
jp
mov
inc
cmpb
je
inc
cmpsl
hlt
mov
pop
ss
cmp
mov
xor
xchg
jo
jns
jb
or
pushf
lahf
repz
outsl
jno
or
hlt
lret
ja
in
popf
jbe
sbb
ss
gs
out
gs
mov
or
jp
xor
popf
pop
es
adc
jne
pop
stc
inc
push
movsb
mov
insl
cmpsl
repz
out
push
inc
sub
jns
xor
mov
repz
xor
jns
addr16
pop
lock
pop
outsl
sbb
ss
xor
out
mov
clc
push
scas
cmp
loopne
push
mov
xlat
xor
js
adc
jae
xchg
testl
inc
negl
xchg
push
shlb
ficoms
gs
clc
xor
push
mov
push
or
push
loop
inc
mov
test
in
pop
xor
hlt
repz
arpl
out
sub
imul
adc
imul
jp
cli
jp
addr16
jb
mov
imul
pop
je
call
jno
ja
sub
mov
xchg
and
fiadds
push
xchg
push
sti
out
jmp
bound
imul
jp
ja
jb
fadds
insl
push
mov
inc
cmpsb
push
pop
in
add
mov
mov
adc
loopne
sti
jae
imul
sbb
clc
outsl
inc
jns
jne
sub
fdiv
jmp
add
xchg
jnp
addr16
mov
add
dec
cmc
jp
mov
hlt
idivl
mov
xor
jbe
push
movsl
xchg
sbbl
test
dec
and
scas
cmp
ret
nop
jp
adc
loopne
inc
or
cmp
add
xlat
out
inc
pop
push
lods
push
in
jno
sbb
out
inc
shll
arpl
sar
imul
clc
imul
fsubs
mov
add
test
mov
sub
repnz
xor
inc
je
mov
mov
jo
es
gs
pop
xchg
in
adc
fldt
repnz
push
jle
mov
sbb
insb
loope
fcomps
rcll
sahf
xchg
xlat
fidivs
hlt
pop
lret
testl
push
outsb
or
into
jle
cmp
add
dec
jb
in
imul
push
repnz
jae
addr16
inc
lcall
cmp
lock
lods
fbld
mov
adc
insl
out
bound
lcall
pop
inc
ljmp
aam
jbe
xor
xor
fdivr
je
mov
jecxz
mov
pop
push
lock
push
jbe
fwait
or
jp
jb
in
cmp
clc
and
stos
jp
push
mov
lods
test
pop
mov
jecxz
jne
jo
push
repnz
jp
ja
imul
cli
pop
jmp
xchg
dec
hlt
mov
xchg
clc
dec
incb
fdivrl
fs
lea
cmp
rcr
push
fmull
jecxz
push
imull
adc
mov
push
jae
leave
bound
cmp
inc
jg
jmp
pop
rcll
jns
stc
pop
andl
cmpsl
je
xor
jb,pn
scas
push
jno
fiadds
xchg
inc
mov
jbe
xor
inc
clc
rcrb
jecxz
int
cmp
lret
repz
cmp
or
repnz
xchg
daa
outsb
jp
loop
in
daa
gs
je
leave
mov
jno
jp
insb
fisttps
dec
dec
loop
mov
mov
add
je
mov
out
push
outsb
pop
inc
lods
shl
jp
cli
mov
fs
jmp
xor
lods
and
out
lock
mov
dec
cld
filds
mov
mov
shlb
mov
inc
es
xchg
dec
pop
mov
jns
jecxz
jae
jae
cmp
inc
arpl
dec
ja
js
jecxz
and
sub
fwait
jns
ja
in
push
inc
ja
popf
dec
scas
xor
mov
dec
cli
adc
or
sti
cmpb
in
rorl
inc
idivb
insl
popf
icebp
pop
repnz
ret
mov
mov
mov
fdivrp
lret
outsb
testl
aaa
movsl
cmc
push
cmp
out
lret
push
xchg
and
dec
insl
jg
xchg
dec
gs
sarl
hlt
pop
jg
popf
pushf
repz
in
movsb
pop
mov
sti
adc
inc
pop
insl
mov
imul
cli
shr
xor
pop
scas
jns
xchg
mov
jo
xchg
les
jmp
add
repz
pushf
mov
push
das
out
loopne
mov
call
xor
divl
cld
les
jo
jp
pusha
sti
mov
repnz
fildll
fldpi
add
jmp
mov
shll
shlb
or
push
fildll
shr
cli
and
test
test
imul
mov
sti
sub
scas
lret
lret
mov
mov
lahf
ljmp
inc
mov
loop
js
std
sti
xchg
jno
hlt
data16
aaa
sub
jmp
mov
cmp
sbb
hlt
mov
cmpsl
lods
mov
popa
jp
dec
loop
mov
mov
cmp
inc
dec
pop
ja
das
mov
push
imul
cwtl
cmp
push
je
xchg
inc
push
pop
mov
xor
faddl
repnz
lock
or
shll
fnsave
repz
aaa
xor
cli
pop
js
push
popf
jp
pop
jmp
mov
sbb
jge
or
adc
mov
in
push
mov
div
aaa
mov
mov
in
bnd
jae
add
fdivrs
cwtl
push
shl
mov
test
insl
notb
xchg
and
mov
mov
jp
test
jmp
mov
xchg
adc
push
cli
aaa
push
shrb
push
xchg
dec
repz
jnp
xchg
in
test
insb
mov
insb
out
mov
jno
cmp
jbe
jbe
push
outsl
stc
test
adc
rolb
fisubs
mov
pop
scas
out
mov
mov
jb
jo
xor
xor
inc
dec
js
loope
jb
lods
mov
push
int3
or
and
mov
repnz
sbb
pop
mov
fidivl
pop
imul
mov
mov
clc
pop
imul
jns
sbb
ja
cwtl
test
bound
mov
lock
repz
jecxz
pop
outsl
leave
in
scas
dec
cmc
pop
imul
cli
out
cmp
xor
push
mov
or
or
cmp
loop
repz
shlb
pop
adc
repz
push
jp
xor
jns
and
adc
pop
jmp
add
andb
pop
jno
xorl
add
divl
pop
ds
jp
icebp
sti
mov
leave
ja
xor
pop
sahf
das
pusha
aas
clc
lcall
jmp
jp
dec
adc
xchg
pop
mov
outsb
push
loope
das
mov
test
icebp
ja
cmp
ljmp
movsb
xchg
subl
sahf
sbbl
mov
pop
mov
ljmp
data16
jecxz
mov
xchg
xlat
aaa
lods
dec
in
icebp
scas
cwtl
inc
arpl
jmp
pop
jbe
stc
js
mov
das
imul
jmp
rcrl
daa
jmp
arpl
mov
dec
jecxz
pop
dec
mov
jbe
repz
test
into
dec
jae
scas
jae
pop
stc
jmp
jo
cmp
cmc
xchg
lock
push
jmp
testl
push
das
or
out
mov
test
hlt
fildl
dec
icebp
cmp
mov
shl
cmc
div
mov
outsl
xchg
hlt
adc
xor
cmc
aad
pop
testl
fsubs
mov
mov
mov
ja
pop
loop
mov
xchg
insb
mov
sub
jp
mov
ss
cmp
sub
jmp
and
pop
jmp
cltd
popa
addr16
jmp
xchg
lods
ss
out
jmp
loop
imul
and
mov
cmp
imul
sbb
mov
inc
ret
sub
in
push
imul
mov
xchg
dec
negl
movsb
inc
in
fsubrs
stc
push
movb
jbe
out
arpl
data16
push
add
insl
jl
cmp
aas
add
fwait
jl
imull
fwait
inc
aaa
inc
out
pop
pushw
adc
mov
int3
add
cld
addb
mov
jl
inc
xor
xchg
fdivs
push
adc
jns
and
pop
and
mov
xchg
mov
in
sti
test
cmp
lds
add
pop
jns
xchg
push
popa
inc
and
es
cmp
leave
or
jae
mov
cmc
adc
dec
sub
xchg
pop
adc
cmp
cmp
insl
and
dec
cmp
or
lcall
test
add
mov
push
mov
dec
xchg
movsb
mov
push
cmp
scas
mov
pusha
daa
in
push
leave
mov
hlt
sub
rcrl
add
mov
sub
mov
xor
jg
xor
cmpsl
repz
fildl
addr16
addr16
cmpb
mov
cmp
xor
cs
in
cwtl
mov
divl
or
imul
mov
mov
cs
clc
mov
mov
repz
xor
xchg
movsl
bnd
rcrl
mov
dec
mov
repnz
insb
bnd
loop
jno
jmp
sti
out
scas
bound
in
jns
shlb
stc
xor
je
sbb
movsl
mov
je
gs
cmc
repz
leave
sub
cmp
pop
ss
imul
lret
jp
lret
mov
shrl
leave
fmuls
xchg
cmp
test
mov
lock
out
negl
sbb
pop
cmp
pop
and
movsb
add
test
adc
sub
movsb
add
js
outsl
adc
test
addr16
dec
push
xchg
inc
or
pop
into
mov
jle
outsb
jl
jns
shl
lret
lea
leave
outsl
sbb
sub
pop
test
cmc
imul
or
sbb
push
ret
xlat
ja
repnz
outsl
sti
dec
ja
insb
add
pop
push
in
jmp
xchg
mov
cs
jge
jmp
cmp
cmc
in
add
push
in
jnp
mov
jns
or
jp
test
out
jns
pusha
jle
sbb
or
stc
xor
pop
xchg
sti
ret
jp
push
cmp
xchg
stc
cmpsb
inc
sti
push
or
dec
nop
test
inc
sti
mov
jns
add
pop
sbb
xor
sti
mov
jp
jmp
xor
je
mov
pminsw
fs
mov
push
cmp
sbb
cli
dec
fldt
xchg
cli
jo
mov
out
cli
cmc
xchg
movsb
jp
jmp
fwait
iret
mov
xchg
dec
jp
pop
or
stos
imul
idiv
mov
mov
xor
imul
mov
lcall
cmp
or
stos
stos
or
mov
das
stos
push
jmp
decb
fnsave
cli
mov
cmp
out
je
push
pop
cli
pop
sti
sbb
je
andb
out
jb
int3
rorb
xor
arpl
push
mov
je
xor
mov
inc
repnz
dec
sahf
add
lods
imul
adc
jnp
leave
sbb
push
jmp
stc
rcrb
mov
punpckhdq
xchg
or
cmp
or
add
push
inc
push
aaa
pop
add
jno
fsub
mov
jne
out
stos
xorl
dec
add
pop
mov
setge
mov
dec
sub
insl
inc
fadds
cmp
scas
mov
xor
bound
insb
outsl
xor
pop
pop
push
jnp
xor
pop
pop
std
fidivrl
sbb
add
stc
dec
ljmp
ja
dec
jns
add
decw
sbb
mov
jae
popf
fisubl
adc
jbe
add
lahf
pop
jns
mov
jbe
inc
jp
outsl
fdivs
xchg
dec
mov
imul
push
pop
insb
stos
jb
cld
xor
jp
mov
add
jp
xchg
or
imul
and
subl
mov
inc
fwait
dec
mov
jb
sub
subl
cmp
out
sub
sbb
jb
sbb
or
sub
subl
lcall
dec
ljmp
jo
cltd
js
jno
mov
pop
subl
stos
or
fwait
adc
mov
cmp
js
jl
adc
je
add
and
jne
xor
xchg
mov
push
push
pop
dec
lock
pop
jno
jmp
pop
jbe
mov
aaa
out
mov
imul
stos
jns
rorl
xor
not
jbe
pop
pop
jne
arpl
fmull
pop
repnz
mov
dec
mov
mov
mov
pop
in
mov
orl
rorl
pop
mov
clc
shrl
jbe
outsb
mov
jne
mov
jno
repz
clc
fisttpll
repz
stos
mov
pop
mov
out
xor
mov
xor
pusha
stc
xor
mov
xor
pop
mov
loop
jo
ja
outsb
and
bound
hlt
inc
dec
icebp
sbb
lock
mov
insl
add
and
mov
and
jo
ja
mov
cmc
and
ja
jae
jbe
mov
loop
cli
pop
jbe
lock
out
data16
jbe
mov
xchg
mov
insb
sti
adc
jns
inc
clc
mov
jne
dec
hlt
sbb
jb
mov
pop
in
mov
repz
in
jecxz
jmp
xchg
repz
cmp
leave
ja
cmc
xor
test
stc
sub
jb
fs
aaa
hlt
in
icebp
and
jno
inc
lock
insl
add
aaa
jp
jo
outsb
outsl
sub
orl
outsl
lahf
cmc
and
loop
icebp
pop
jbe
jno
repz
xchg
lock
mov
out
mov
jp
jo
push
pusha
lods
jns
movsl
out
enter
pusha
adc
in
aaa
mov
notb
jno
inc
outsb
mov
in
in
mov
jns
inc
stc
mov
sub
and
jbe
stos
mov
dec
mov
mov
shl
jbe
stos
mov
pop
mov
insb
xor
xchg
mov
cli
mov
cmp
and
stos
xor
pop
fs
push
hlt
xor
ja
jb
mov
lock
inc
dec
outsb
nop
jbe
mov
aaa
mov
sti
mov
sti
jns
dec
stos
mov
pop
mov
divb
je
jno
inc
jae
pop
jns
sbb
jp
mov
mov
dec
test
mov
loop
jne
add
in
out
icebp
jp
mov
mov
notl
nop
jbe
mov
aaa
mov
repnz
mov
ja
sbb
sti
xor
nop
jae
mov
cmp
js
mov
notb
test
aaa
repz
div
jo
out
lods
insl
mov
sti
push
xor
xchg
mov
insb
jne
ret
hlt
jbe
mov
xchg
mov
pop
jo
addr16
add
out
jbe
stos
mov
pop
mov
pop
adc
mov
lock
mov
stc
mov
repz
or
xor
divb
cmp
push
imul
jmp
mov
mov
cmp
xchg
mov
jp
loopne
lock
xchg
jb
inc
xchg
mov
adc
loopne
and
loop
js
test
loopne
imul
out
aaa
mov
sti
shrb
dec
cli
shr
mov
stc
mov
xchg
jbe
cmc
sbb
hlt
aaa
mov
fdivrs
dec
outsb
in
mov
insl
mov
jnp
rclb
shlb
ja
adc
jne
jbe
xchg
hlt
jbe
mov
repz
div
jo
test
mov
mov
dec
icebp
fcomps
hlt
mov
insb
fsubrs
cli
shl
xor
push
jmp
mov
xor
and
repz
jnp
xor
out
jbe
mov
out
mov
out
repz
xor
jae
pop
jno
xor
fmull
js
jmp
pop
dec
fdivrl
cwtl
cli
arpl
hlt
aaa
mov
and
pop
mov
loop
insb
pop
jbe
jp
add
adc
insb
and
adc
js
or
adc
cwtl
jbe
mov
aaa
mov
cmc
cmp
out
jmp
adc
cmc
pop
mov
loop
icebp
pop
cmc
scas
cli
add
sti
icebp
cmp
mov
inc
sti
fs
jbe
mov
xchg
mov
lock
addr16
inc
jnp
and
repnz
push
sti
outsl
mov
outsl
lods
jbe
not
mov
mov
mov
mov
ja
je
sub
in
out
cs
dec
jmp
jmp
rep
mov
cli
dec
mov
xor
ja
jno
idivl
pop
mov
hlt
pop
xorb
jbe
mov
into
mov
out
mov
push
dec
mov
cli
dec
dec
stos
mov
push
mov
jns
data16
sbb
push
sbb
pop
dec
xchg
jae
outsb
mov
jb
mov
jbe
je
sbb
in
outsb
pcmpgtb
push
lfs
je
aaa
push
aas
pop
jne
out
lods
outsl
or
fs
mov
aas
lods
enter
or
icebp
jecxz
or
outsl
int3
stos
mov
dec
mov
lods
enter
scas
imul
jns
inc
clc
mov
jne
jo
or
hlt
int3
stos
mov
pop
mov
jo
aad
xchg
jbe
mov
out
mov
jp
ja
cli
adc
in
js
lahf
jb
inc
xchg
mov
cmc
sar
jae
jbe
mov
xchg
mov
stc
imul
mov
dec
in
in
mov
in
mov
insb
jp
lock
and
mov
pop
js
or
jae
cmc
fldl
jo
repnz
into
stos
mov
push
sti
dec
outsb
nop
clc
adc
mov
mov
sti
jg
jbe
jns
cmp
js
mov
repnz
insb
in
repz
jno
fnsave
mov
sub
push
test
outsl
popf
cmp
mov
nop
hlt
jae
jp
inc
idivb
clc
pop
out
lds
jbe
lods
mov
pop
cmc
dec
jno
mov
mov
mov
stos
outsb
out
idiv
pop
pop
dec
cli
fbld
fldt
js
mov
cmc
dec
cmp
jp
xchg
div
iret
cli
jp
xchg
mov
cmp
ja
test
stos
cs
addr16
jo
popf
js
idiv
lahf
clc
repnz
and
jbe
mul
sti
jne
pop
ret
ret
js
xchg
iret
dec
jae
stc
pushf
lret
in
lret
in
lret
insl
hlt
outsl
iret
inc
hlt
sbb
inc
push
iret
cmp
iret
je
iret
add
in
arpl
addr16
stc
xchg
mov
jns
xchg
stc
pop
jne
sbb
test
mov
inc
dec
clc
icebp
outsl
and
jne
cmc
call
out
sti
das
mov
outsl
push
scas
add
jns
outsl
je
in
jae
jbe
ret
iret
sbb
das
and
insl
leave
jno
out
mov
out
lret
mov
stc
mov
jbe
pop
stc
arpl
hlt
clc
idiv
ret
pop
mov
bound
xchg
ret
sbb
clc
movsl
jae
stc
fwait
mov
jne
icebp
iret
inc
jno
pop
jbe
xor
push
jecxz
hlt
dec
in
les
push
lret
push
hlt
cmp
xchg
cmp
cmp
cmp
xchg
jmp
stc
iret
inc
clc
mov
idiv
bound
xorl
mov
outsb
sbb
push
sub
fs
lret
lods
dec
divl
imul
hlt
mov
jne
jae
sbb
jb
jo
repz
leave
out
stc
out
repz
xchg
lock
popf
clc
lds
outsb
arpl
out
cmp
negl
inc
pslld
push
dec
jns
mov
xchg
out
dec
ja
mov
mov
inc
sti
movsl
gs
cli
in
hlt
dec
jp
fs
repz
insb
and
push
pop
jno
fistpl
pop
cmp
xor
divl
jb
outsl
in
out
insl
jno
xchg
pop
mov
jmp
push
jp
mov
mov
add
clc
ja
and
jne
cmc
lahf
paddsw
jae
out
cmp
xchg
sti
inc
inc
je
adc
mov
pop
cmp
lds
outsb
in
lods
in
add
sti
push
in
mov
cs
jns
push
leave
jne
out
mov
dec
xchg
bound
pop
dec
xchg
dec
mov
xor
cmp
push
testl
jecxz
jb
insl
jae
outsb
call
dec
jp
fs
cmp
jecxz
stc
jp,pt
testb
dec
inc
stc
dec
scas
inc
sbb
sti
mov
cli
pop
xchg
stc
inc
clc
pop
movsl
loop
cmc
cmc
mov
jae
repz
scas
xor
insl
mov
in
scas
in
icebp
lcall
sahf
dec
pop
jg
inc
stc
out
mov
iret
jae
mov
pusha
stc
lahf
icebp
vmulpd
jp
pop
test
repz
sbb
xchg
loop
pop
dec
xchg
in
sahf
dec
jp
mov
je
xchg
stc
mov
imul
jb
dec
jae
stc
bound
sti
lock
hlt
outsl
cmc
dec
lock
test
js
mov
pop
cmc
dec
loop
lret
mov
js
lret
stc
out
lret
or
jae
repz
inc
jb
leave
repnz
dec
out
mov
dec
insb
mov
out
fwait
repz
out
cs
scas
xor
sti
xor
dec
ret
sbb
iret
jmp
in
popa
cmc
out
cwtl
je
jae
pop
jbe
fistpl
out
lret
mov
pushf
clc
out
and
je
xchg
stc
out
or
fdivp
jo
out
repz
femms
imul
insb
xor
fstpl
leave
jno
in
or
out
stc
idivb
inc
negl
cli
dec
sbb
psubq
cs
ja
mov
bound
jne
inc
cmc
cmc
pop
inc
arpl
xchg
jns
bound
jnp
testb
push
inc
insl
out
out
push
insl
mov
jns
dec
stc
in
or
in
sub
mov
loop
xor
lock
mov
inc
jno
xor
outsl
mov
js
xor
cmpsl
in
dec
cmp
inc
outsl
sbb
sbb
jle
cmpsl
sti
pop
sti
jp
cli
cmp
mov
stc
popa
jno
jne
mov
bound
jb
jne
stc
dec
lock
cmp
insl
lret
jae
icebp
pop
sti
jo
lock
cli
push
outsb
cmp
mov
insb
leave
mov
subl
js
jp
out
outsl
shll
mov
scas
in
inc
clc
pop
imul
xchg
stc
scas
xchg
dec
pop
notb
jno
icebp
adc
fwait
xor
mov
mov
jmp
jecxz
pop
lods
mov
sti
cmp
pop
sub
pop
or
mov
jecxz
pop
pop
mov
push
pop
mov
adc
mov
rcrl
mov
ljmp
test
mov
sub
or
sbb
into
mov
jnp
dec
dec
lock
js
js
jne
mov
div
push
cmpsl
jae
insl
hlt
inc
jae
xchg
dec
sbb
sbb
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sti
fwait
mov
pop
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
pop
cs
dec
push
dec
sub
mov
push
push
dec
jnp
insl
cs
shl
popf
jo
out
jne
xor
lock
dec
dec
xor
sbb
jns
idiv
mov
bound
jo
imul
out
jecxz
mov
pop
lock
xlat
cs
out
ss
in
xchg
sti
xchg
call
jp
stc
cmc
insb
and
push
push
inc
ja
adc
inc
jnp
dec
push
mov
jae
adc
icebp
dec
outsl
call
js
in
pushf
pop
negl
pop
jb
insl
cmp
popa
mov
cmp
cmp
out
mov
jne
mov
leave
dec
mov
lcall
hlt
sbb
sti
shrb
cli
pop
pop
xchg
jnp
ficoms
xor
push
xchg
mulb
mov
bound
pop
aad
sub
or
mov
and
pop
pop
dec
mov
mov
mov
xchg
in
pop
lods
in
jnp
movsl
jg
adc
imulb
jg
jecxz
jnp
dec
data16
imul
mov
adc
cli
adc
divl
push
dec
test
sti
popf
push
ss
cmc
dec
js
stc
mov
popf
cmp
out
or
cli
jmp
xor
mov
jae
pusha
js
cli
clc
pop
cli
inc
pop
cli
pop
cltd
stc
jmp
stc
out
movsb
bound
ret
jecxz
pop
xchg
mov
mov
dec
ljmp
cmpsl
out
sub
sub
imul
lea
sti
dec
push
adc
or
xlat
xorl
je
jge
stos
out
clc
xor
rcr
imulb
dec
fidivrs
jge
jmp
test
mov
stc
out
je
insl
dec
subl
jns
bound
ja
mov
in
and
jne
push
cli
in
mov
out
sti
mov
xchg
mulb
loop
getsec
cli
fsubp
pop
pop
lods
call
repz
jp
cmp
out
js
insb
lret
lods
pop
mov
fstl
pop
mov
icebp
fstp
stc
insb
pushl
lock
js
icebp
dec
mov
xor
sub
cmp
mov
stc
mov
mov
jbe
gs
inc
dec
inc
stc
jb
mov
imul
add
sti
mov
lods
cmp
xchg
hlt
cmp
hlt
mov
ja
clc
int
sti
ja
femms
or
je
jbe
push
cmp
test
lret
repnz
lret
lods
out
push
cmp
adc
cli
mov
cltd
js
leave
xchg
cmp
clc
pusha
jbe
inc
jno
hlt
stc
mov
loop
xchg
aaa
jp
mov
jo
stc
bound
outsb
xor
sub
js
mov
imulb
imul
repz
inc
push
hlt
iret
lock
inc
jbe
cmp
out
add
sbb
lahf
je
cli
hlt
loop
jae
sti
repz
stc
jnp
sbb
cmp
xchg
ja
push
outsl
loop
out
stos
mov
lahf
pmaddwd
jae
out
cmp
jp
jge
jnp
stc
push
js
xor
sbb
xor
xchg
sti
xchg
adc
inc
dec
or
sti
jb
xchg
hlt
or
and
icebp
jb
xor
in
lret
scas
xchg
adc
sti
xchg
std
cmp
dec
outsb
stos
dec
clc
std
cmp
mov
mov
mov
ja
jno
dec
jno
pop
inc
inc
mov
cltd
jp
jns
in
std
and
xchg
insb
cmp
push
pop
jbe
fistpl
insb
lret
mov
jecxz
jae
insb
adc
xchg
iret
lock
mov
nop
in
dec
insb
mov
jge
push
lock
xchg
jne
in
jb
sarl
fldl
repz
pop
and
jnp
js
jne
stc
xchg
out
dec
jae
insl
dec
and
lods
outsl
cmp
lods
insl
push
mov
adc
cmp
mov
int
dec
jo
mov
insl
xchg
cmc
insl
cmp
scas
jns
stc
and
cmp
stos
repnz
dec
cmc
mov
mov
cmp
out
pusha
jnp
dec
push
adc
sbb
dec
fidivrs
push
dec
sbb
test
xor
inc
xor
adc
xor
test
jg
repz
repz
repz
repz
fwait
mov
cmp
jg
repz
repz
repz
dec
sbb
out
sbb
mov
hlt
fs
xor
hlt
xorl
push
xor
and
mov
push
testl
dec
mov
idiv
bound
pushf
jecxz
stos
xchg
sub
jmp
lcall
mov
sub
mov
or
mov
mul
push
pop
push
inc
sub
lock
inc
xor
popa
xor
add
hlt
and
hlt
mov
hlt
jge
hlt
pushf
xor
sbb
or
sub
enter
dec
sbb
sbb
arpl
add
and
rorl
dec
fidivrl
pop
jnp
in
push
dec
insl
sbb
mov
dec
or
mov
adc
jne
dec
jbe
mov
repz
push
je
mov
pop
sub
jnp
test
bound
shll
lret
stc
idiv
jl
scas
insl
cmp
or
lret
in
lret
in
lret
in
lret
hlt
sti
in
and
lods
outsl
push
sub
jae
mov
std
inc
je
scas
imul
xchg
idivb
mov
sub
inc
xchg
cmp
xchg
cmp
xchg
cmp
cmp
xchg
cmp
mov
clc
iret
xchg
mull
loop
jg
hlt
dec
adc
xchg
repnz
in
icebp
bound
dec
mov
pop
repz
xor
jne
and
pop
push
ljmp
cli
pushl
cmp
je
pop
jp
outsb
mov
out
repnz
mov
jo
js
lock
insl
dec
pusha
insl
out
je
ja
out
cmp
pop
fnstcw
push
dec
push
inc
jp
dec
lret
pop
mov
cli
mov
sti
iret
push
ja
es
sarl
je
je
hlt
aaa
sti
jae
mov
repz
mov
fs
shr
iret
outsl
jne
out
cmp
and
xchg
icebp
lods
mov
js
out
lret
lods
stc
test
repz
sub
xchg
rorl
idivl
jne
sti
jbe
hlt
imul
jae
repz
jnp
js
push
jno
out
icebp
push
inc
outsl
out
out
outsb
push
xchg
in
bound
inc
in
jp
push
lods
clc
jnp
and
lods
jle
jns
xor
lds
ja
clc
jb
and
movsl
jne
test
mov
xchg
leave
jno
arpl
ja
jno
imul
in
lret
stc
idivb
and
dec
jp
xor
jne
ljmp
pushf
ja
pop
ja
or
in
fsubrp
jp
jbe
ret
xor
movsl
repnz
xchg
dec
outsw
push
call
sbb
insb
lock
mov
cld
repz
jb
mov
hlt
xor
xor
mov
mov
jge
in
lahf
repnz
jb
or
mov
lods
mov
into
xor
insb
cmp
insl
out
mov
leave
vmwrite
out
jns
cltd
es
insl
mov
adc
jne
out
jae
xor
imul
jae
jmp
jne
mov
in
lahf
out
pop
hlt
insb
mov
sti
dec
pop
xchg
push
push
repz
repz
pop
cmp
push
pop
jp
leave
scas
cli
mov
mov
jae
push
lods
in
nop
jp
clc
inc
insb
pop
jbe
jns
jno
jmp
cs
mov
icebp
mov
out
jno
mov
jnp
test
jb
jl
push
inc
je
hlt
push
inc
jb
jno
xchg
pop
xchg
out
dec
outsb
pop
jae
mov
inc
insb
push
push
lock
jl
cli
inc
shll
mov
and
movsl
jbe
div
xchg
js
icebp
dec
je
hlt
cmp
jb
bnd
roll
test
ret
pop
jnp
mov
iret
out
ja
cmp
clc
aad
mov
scas
cmp
bound
jns
stc
xor
mov
outsb
and
loop
je
hlt
mov
fs
stc
dec
clc
in
or
in
cmp
repz
jno
std
sub
xlat
jne
outsl
in
stc
dec
in
in
cmp
repz
mov
test
ss
jne
jp
icebp
mov
hlt
xchg
cli
arpl
mov
inc
push
ret
test
shrb
mov
out
lahf
sub
psllw
fwait
lock
fdivrl
mov
out
or
outsb
adc
adc
xor
jecxz
into
cmpsl
in
repz
jg
repz
cmc
div
mov
inc
repnz
out
repz
scas
jecxz
push
cmpsl
out
bound
test
xor
out
mov
shl
lea
xor
push
hlt
shlb
jp
xor
jecxz
in
adc
test
sub
mov
inc
jecxz
stc
adc
clc
hlt
add
push
dec
push
dec
xchg
out
push
dec
mov
or
jg
repz
repz
repz
ret
xor
jo
je
mov
jge
dec
js
jb
ret
jp
jecxz
jnp
jmp
clc
jmp
add
cmc
vpcmpeqb
sub
cli
pop
sti
jp
clc
scas
jno
pop
js
sti
enter
xchg
scas
xor
jne
cmc
out
imul
fldt
push
jae
out
js
xchg
jecxz
lret
jae
out
push
lock
push
aaa
cli
fldl
and
cli
sti
pop
fsubr
jnp
js
jns
stc
sub
xchg
cli
lods
mov
lods
imul
push
push
jne
out
testb
jae
repz
pop
js
leave
pop
outsb
imul
mov
mov
dec
out
in
cmp
adc
dec
or
jg
repz
repz
jecxz
in
idiv
cmp
jo
xchg
mov
xchg
adc
jp
repnz
jns
lahf
shr
fidivl
outsl
stc
out
lret
in
lret
mov
sub
stc
and
jbe
pop
jne
sti
cmc
cmp
cmp
mov
cli
push
lcall
jno
inc
icebp
icebp
out
outsb
push
push
outsl
imul
in
push
xchg
mov
mov
out
repz
jnp
js
jns
stc
jbe
and
dec
mov
pop
push
push
cmp
and
divl
adc
jecxz
mov
cmc
mov
out
out
lret
popf
jo
js
or
repz
popf
insl
cmp
jbe
js
jp
push
jns
push
cmpl
jmp
outsl
add
sti
iret
jae
mov
push
jb
dec
sti
jp
jo
cmp
div
push
imul
dec
icebp
cmp
in
mov
je
jb
in
mov
in
lret
pop
adc
leave
in
stc
out
mov
mulb
push
repz
dec
xlat
ja
mov
inc
insb
mov
mov
out
lock
aas
cmp
lods
insl
push
mov
jecxz
pop
imul
scas
leave
jmp
dec
out
jo
cli
dec
out
jns
inc
stc
stc
lahf
repnz
push
clc
pop
fwait
xchg
divl
sub
je
in
insb
repnz
xor
xchg
push
jnp
pop
mov
popa
notb
cmc
mov
bound
jae
dec
mov
jnp
clc
push
outsl
call
repz
dec
and
cmc
mov
cmp
xchg
cmp
jmp
cli
iret
ja
movsl
negl
jbe
pop
div
loope
xor
jb
icebp
xorb
mov
stc
iret
jno
mov
push
jmp
sti
mov
imul
in
in
loop
insb
cmp
adc
outsb
clc
lahf
or
cmc
add
js
add
pop
inc
sti
xchg
scas
repnz
pop
cltd
stc
jmp
out
push
lods
and
sti
adc
cmp
mov
sub
iret
out
sahf
bound
insl
je
mov
stos
pop
jns
cli
stc
xchg
js
mov
push
idiv
in
xchg
lahf
push
cmp
lods
jae
sti
jmp
add
icebp
cltd
mull
js
outsl
stc
idiv
lcall
ja
pop
mov
cli
adc
insb
sbb
mov
cli
mov
data16
repz
push
jbe
out
lock
xchg
insl
and
movsl
xor
xchg
js
jp
lock
bound
lods
adc
out
je
fs
xor
or
adc
out
outsb
push
xchg
test
bound
push
mov
pop
and
cmc
push
out
leave
jns
fidivs
jns
stos
xor
outsl
ja
jmp
lock
add
jecxz
cli
xchg
scas
and
sti
testl
jmp
lock
popf
clc
jno
jge
jecxz
jo
cmc
js
outsl
xchg
stc
xchg
jb
scas
sbb
xchg
insl
dec
sub
mov
and
jmp
xchg
js
mov
clc
sbb
xchg
icebp
dec
jne
xchg
outsb
dec
mov
xchg
in
dec
repz
scas
xor
mull
lods
jo
je
lods
scas
inc
out
mov
inc
cli
insb
hlt
lret
repnz
stos
insl
je
out
jmp
lock
out
aaa
and
jp
insl
loopne
imul
cli
aam
adc
sub
daa
ja
scas
pop
ja
push
test
or
int
xor
ja
repnz
cs
lret
sbb
jb
cld
dec
insb
fucomp
sti
jno
addb
ret
jp
imull
jae
imulb
dec
je
mov
stos
jg
dec
jae
ja
dec
out
jb
cld
dec
insb
lods
scas
mov
or
pop
sbb
repz
dec
xlat
idiv
mov
scas
out
clc
mov
inc
jnp
clc
xor
subl
repz
jmp
inc
imulb
lds
insb
out
push
pop
sbb
or
lock
das
andl
insl
andl
lods
andl
sti
inc
lret
repz
push
inc
cmp
pop
xchg
cli
mov
mov
mov
jbe
lods
divb
cmc
jne
repz
stc
out
lret
lods
pop
imul
push
xchg
sti
imul
jae
mulb
out
lods
in
lret
js
jo
repz
fs
mov
lahf
jp
push
pop
sub
xchg
test
leave
js
jae
idivl
in
js
mov
xor
js
repnz
lock
popf
outsl
cmp
sti
xchg
dec
dec
cs
js
push
sub
inc
stc
out
or
in
or
in
or
in
or
dec
mov
xchg
stc
dec
xor
pop
pop
jbe
bound
cmp
scas
jb
mov
mov
cmp
mov
ja
hlt
xchg
out
hlt
push
jo
loopne
pop
inc
jnp
test
stc
mov
out
jbe
insl
sbb
andl
stc
andl
cmp
xor
cltd
cs
mov
ja
inc
hlt
out
cmc
push
inc
xor
jb
cmpsl
jno
cs
call
cltd
pop
lock
jnp
mov
mov
sbb
out
leave
stc
stc
out
mov
pop
jo
out
scas
clc
mov
testb
mov
push
sbb
iret
out
clc
mov
cmp
jnp
stc
lret
or
jnp
stc
push
mov
notb
mov
dec
jae
imul
pop
push
pusha
icebp
stc
sbb
js
add
out
jae
mov
insl
jmp
out
mov
js
js
imul
mov
jmp
inc
cs
out
repz
mov
sti
hlt
xor
js
outsb
call
xchg
jp
in
out
out
in
dec
sti
dec
jns
in
mulb
jbe
mov
sti
jp
jnp
fldenv
in
dec
xchg
je
test
add
out
mulb
and
jnp
repz
xchg
imul
out
xorl
stc
xor
rcrl
imul
jnp
leave
in
cmp
or
repz
dec
out
pop
mov
cmp
jb
xor
aaa
sbb
cltd
clc
fs
clc
out
mov
xor
scas
mov
add
js
lock
mov
sub
negb
jp
push
jnp
loop
pop
stos
push
jnp
clc
xor
mov
aaa
adc
icebp
add
jp
mov
sbb
dec
adcb
jnp
divb
repz
dec
sbb
xchg
fs
push
sub
sbb
dec
hlt
push
push
sbb
ja
add
dec
jbe
popf
js
fimull
sbb
scas
or
xor
out
out
in
add
dec
or
negb
dec
push
rorb
jne
inc
je
or
lahf
cmpsb
mul
lock
repz
cs
jge
sti
leave
in
js
sub
stc
push
js
jp
pop
repz
push
inc
mov
clc
out
repz
xchg
pop
dec
xchg
jo
jne
js
pop
sbb
in
mov
push
clc
lret
in
lret
lods
pop
div
jno
xchg
dec
fyl2xp1
mov
push
xchg
xor
out
sbb
jo
pop
push
mulb
in
stc
mov
mov
cwtl
mov
insl
mov
ret
lods
jae
insl
popa
cmc
pop
cli
hlt
pop
or
pop
cmc
clc
xor
inc
ret
outsl
repnz
insl
test
jne
dec
sti
imul
jae,pn
jmp
inc
xchg
dec
jnp
dec
imul
xchg
pop
mov
imul
dec
xchg
outsl
dec
xchg
clc
xchg
mov
insb
daa
negb
or
mov
add
mov
stc
push
jne
xchg
repnz
mov
xchg
outsl
dec
xor
xor
stos
imul
js
xchg
test
outsl
stc
sti
mov
mov
lods
sti
div
bound
lock
xor
push
add
out
mov
in
test
div
sti
cwtl
push
push
in
iret
insl
movsl
cwtl
sbb
aas
inc
xchg
jp
stc
mov
jmp
mov
cwtl
sbb
imul
loop
pop
push
cwtl
fcoms
test
bound
pop
pop
inc
mov
mov
sti
dec
bound
push
push
call
xchg
dec
nop
movsl
jnp
mov
in
xchg
js
insb
pop
dec
xchg
jae
mov
cwtl
je
mov
lock
je
pop
or
mov
cmp
dec
jp
je
stos
sbbl
stc
push
aaa
sbb
outsb
dec
repz
sbb
imul
cmp
push
imulb
insb
or
lret
mov
push
clc
clc
xchg
call
jne
lods
fnstsw
jb
inc
jno
lock
cmp
imulb
or
jp
jo
rorb
js
ja
mov
dec
cmc
mov
dec
bound
imul
pop
fldt
jne
outsl
fcoms
jo
mov
adc
insb
jp
enter
hlt
jns
mov
xor
enter
adc
add
cmp
pop
jnp
cmp
enter
pop
mov
push
popa
in
jnp
cmp
data16
jnp
aas
lea
pop
mov
xchg
fnclex
dec
pop
fdivp
and
jb
jp
scas
dec
test
shr
jnp
mov
nop
stos
add
jnp
jmp
cli
fmuls
jns
out
lret
pop
sub
xor
scas
cwtl
fwait
in
cmp
test
dec
cltd
xchg
mov
sub
test
shrl
das
sub
and
jae
daa
insb
or
into
push
jnp
pushf
sbb
xor
std
mov
adc
cli
shrd
clc
sub
xor
push
icebp
inc
mov
jnp
into
lret
and
sbb
jnp
out
insb
xor
data16
fisttpll
andb
jnp
cwtl
in
test
pop
loopne
test
jne
adc
pop
mov
dec
push
jnp
std
pop
dec
divl
in
jnp
mov
repnz
push
into
and
dec
push
jnp
iret
fcom
mov
repz
mov
xchg
or
testl
icebp
jbe
outsl
incb
mov
leave
sub
pop
mov
mov
mov
outsb
inc
gs
sarl
in
aaa
sbb
in
out
jecxz
movsl
jo
js
mov
dec
xor
adc
mov
pop
imulb
js
ljmp
outsl
jae
outsl
imul
xchg
gs
jmp
mov
jecxz
pop
xchg
mov
pop
pop
sbb
lods
jecxz
push
cmpsb
pop
fstps
push
jmp
dec
mov
jmp
shl
rcrl
mov
xchg
pop
xor
fcomps
mov
or
jecxz
jmp
pop
into
mov
shl
jo
mov
shl
jb
xor
je
aad
jecxz
pop
jbe
jae
jmp
mov
jecxz
pop
xor
mulps
insb
or
stc
xchg
arpl
pop
xlat
mov
xor
jb
xor
mov
lods
jp
xchg
arpl
pop
xchg
jne
je
mov
adc
repnz
xchg
mov
sub
add
adc
pop
xor
pop
int
mov
jmp
bound
push
in
ja
in
jecxz
pop
xor
es
mov
mov
xchg
out
jmp
bound
ja
sbb
mov
insb
ss
insl
bound
nop
mov
shl
xor
mov
cwtl
pop
sbb
pavgw
pop
mov
icebp
notl
mov
ss
pop
cmp
fstpt
pop
or
pop
nop
mov
xchg
pop
mov
push
pop
jecxz
pop
cmp
or
push
pop
outsb
mov
jb
lods
mov
jmp
pop
cmc
mov
fnstenv
clc
ret
lods
divl
je
push
mov
adc
push
pop
iret
mov
mov
mov
divl
pop
adc
adc
or
clc
idivl
bound
pop
cmp
sub
maskmovq
testl
mov
jecxz
pop
jbe
push
idivl
mov
insb
icebp
mov
insl
sti
movb
push
in
jbe
or
jmp
bound
pop
mov
mov
mov
idivl
mov
mov
loopne
popa
pop
mov
fwait
fwait
push
fucomi
mov
or
xor
and
inc
or
jmp
jae
push
mov
sti
scas
jmp
push
sti
in
bound
xchg
icebp
push
jmp
repz
out
out
cmc
pop
notb
jns
aaa
xchg
repnz
jmp
xor
jbe
arpl
dec
mov
pop
jmp
mov
sti
lea
pop
iret
mov
shl
xchg
pop
xchg
mov
mov
fwait
repz
jbe
int
outsb
mov
jno
adc
pop
idivl
fstpt
pop
pop
sub
out
jmp
repz
push
pop
out
mov
push
jecxz
pop
jae
adc
pop
js
jns
repz
push
arpl
pop
out
mov
jo
push
mov
aam
mov
cs
fimuls
jmp
mov
repnz
repz
je
push
pop
push
mov
cli
pop
fwait
jns
pop
mov
dec
jecxz
pop
sarb
adc
mov
ss
pop
sbb
lcall
int
jecxz
pop
lock
xchg
pop
xchg
mov
ss
pop
idivl
mov
insb
aaa
pop
lods
pop
pop
inc
fwait
scas
push
push
jmp
notl
mov
push
jecxz
pop
push
mov
mov
mov
xor
shl
pop
out
mov
mov
mov
pop
enter
cs
mov
mov
push
pop
sbb
or
cmpsb
fstpt
dec
in
mov
in
pop
in
cwtl
or
nop
jecxz
pop
xchg
mov
pop
pop
divl
pop
cmpsb
arpl
xchg
jmp
jns
das
fs
out
mov
pop
bound
imull
stos
push
xor
pop
mov
gs
or
mov
int
jbe
sub
push
push
popa
jmp
pop
mov
mov
ljmp
mov
scas
xchg
jmp
jecxz
arpl
out
xor
jae
and
in
push
int
xchg
sarl
adcb
jecxz
xchg
push
mov
mov
inc
cmp
fmuls
jbe
xor
xchg
cmp
int
sub
pop
jg
and
jnp
je
xor
movsb
pop
dec
jnp
divl
xchg
mov
sub
insb
push
icebp
sti
xor
cmp
jnp
xchg
fidivs
lret
subl
pop
sub
shlb
mov
jmp
mov
sbb
repz
cli
xorl
nop
jne
mov
insb
or
jnp
sbb
push
mov
ss
jnp
xchg
pusha
test
pop
je
jnp
int
subb
dec
xchg
and
std
imul
and
inc
jae
popf
test
in
or
mov
xchg
cmp
jp
xor
fidivrl
aaa
mov
outsl
xchg
fcompl
rolb
adc
adc
mov
loopne
je
pop
fs
movsb
mov
add
cmpsb
lahf
jnp
inc
in
jnp
lock
add
and
jle
add
scas
sub
or
movsb
sbb
mov
les
sbb
add
push
cwtl
sbb
scas
cs
inc
nop
jns
push
xor
inc
dec
mov
dec
add
loop
jns
jbe
mov
jnp
fsts
cmp
jge
shrl
lods
and
cs
or
pop
fcmovbe
popf
hlt
jnp,pt
mov
fwait
addr16
adc
mov
pop
imul
mov
pop
jae
adcl
inc
fwait
into
mov
xchg
push
add
jae
xchg
cmpsl
push
inc
pop
out
pop
js
cmpsb
push
fildll
frstor
scas
aam
jno
cli
scas
sub
jae,pn
jmp
sub
inc
loop
sub
jae
mov
jae
pop
mov
mov
and
bound
mov
sbb
insb
jg
jae
fwait
imul
mov
lcall
inc
xchg
sbb
sub
sti
out
dec
jne
cmp
jne
and
xchg
ret
mov
mov
testl
mov
jl
mov
add
shll
inc
fdivl
movsl
push
aas
mov
ss
ja
pop
insl
mov
push
jnp
adc
lods
dec
rcr
mov
mov
sarb
inc
mov
rolb
push
jne
mov
movsl
mov
sub
jae
push
mov
int3
jnp
pop
dec
pop
icebp
push
and
cmp
arpl
daa
cmp
push
iret
xchg
jno
push
mov
sbb
adc
lock
xor
xor
icebp
push
cwtl
push
and
cmp
mov
sub
sbb
mov
inc
stos
repz
les
lods
popa
stos
jge
jmp
js
movsb
jae
inc
jecxz
inc
mov
popf
xor
jmp
mov
jnp
jno
mov
lret
jne
cltd
cld
xorl
or
and
and
imul
test
scas
jp
lods
sub
jne
mov
gs
sarl
ret
adc
js
fnstcw
xchg
into
jnp
inc
mov
pop
jnp
dec
jp
pop
push
sub
ret
jmp
repnz
push
add
or
xor
jnp
adc
cmp
sbb
fdivr
ja
jecxz
fldpi
ds
movsl
mov
mov
cli
das
lret
popf
or
clc
imul
divl
andl
inc
adc
and
cmpl
or
dec
lcall
sub
xchg
dec
pusha
adc
in
pop
hlt
jns
loope
stos
arpl
lcall
outsl
or
mov
fdivrs
cmc
js
int3
call
jno
cmpsb
mov
xor
add
int
xchg
imul
inc
fnstcw
jnp
pop
xchg
jno
sarl
cmp
and
mov
sbb
jae
imul
sbb
cmp
mov
push
aad
decb
repnz
sub
cmp
jns
sub
call
jae
iret
lods
out
dec
jl
add
jnp
push
jmp
nop
pop
adc
xchg
sbb
push
lret
fidivrs
push
cmp
mov
lods
leave
inc
cmp
mov
sub
sbb
arpl
xchg
outsb
mov
jp
push
and
aas
ret
ds
or
cwtl
xchg
jnp
push
dec
sarl
add
mov
cs
hlt
jnp
push
imul
movsl
sbb
ret
pop
aas
jnp
or
push
fwait
inc
push
push
out
fisubl
mov
sub
dec
mov
fnsave
or
sbb
jge
jae
addr16
push
xchg
dec
mov
push
aaa
sub
or
xorb
nop
cmp
cmc
jnp
sbb
bound
scas
out
lods
mov
insb
outsb
fs
pop
fucomi
dec
push
xchg
xchg
in
adc
icebp
shrl
jnp
dec
jp
mov
lods
lds
aam
imul
inc
mov
mov
jae
inc
mov
jp
jnp
clc
xchg
inc
sahf
pop
fistpll
mov
arpl
jne
add
xor
in
jnp
inc
test
pop
sub
xor
or
mov
cwtl
jl
popa
adc
stos
pusha
lods
mov
cmp
pop
mov
ficoml
cld
cmp
xor
jae
aad
adc
pop
jmp
outsb
sbb
xlat
jl
add
add
pop
hlt
sbb
dec
dec
or
pop
mov
lcall
out
xchg
or
fldt
nop
rorl
add
cli
push
dec
pop
adc
je
push
jnp
jmp
pop
js
in
xchg
iret
outsl
jnp
push
leave
push
fsubrp
cmpsb
movsl
fwait
push
cwtl
movsb
stos
cmc
mov
mov
fdivs
push
decl
jnp
mov
sub
in
xchg
inc
push
pop
in
or
mov
sub
mov
cltd
inc
jnp
sub
cmp
mov
inc
xor
lret
or
ficoml
xchg
push
jnp
cmc
pop
lock
clc
mov
jnp
ret
lods
popf
mov
pop
cli
loop
insb
neg
jne
mov
cld
add
adc
ljmp
dec
fildl
or
xlat
shrb
orl
cli
jnp
iret
aad
cltd
mov
shrb
jne
or
jl
jg
loop
pop
test
sbbb
sub
cmp
cltd
sahf
ret
bound
popf
daa
bound
fs
jnp
icebp
inc
cmp
dec
push
add
mov
imul
push
insl
jl
ja
cmpsb
jmp
mov
fwait
fs
cld
adc
push
xor
pop
and
dec
inc
push
jae
loope
push
subl
scas
jnp
int3
icebp
push
dec
repnz
jne
xor
mov
pop
cltd
add
ss
jnp
fisubrl
addr16
dec
and
int
dec
shl
in
xchg
jae
or
and
sbb
sarl
or
cltd
imul
dec
jg
das
jnp
pop
shrb
sbb
popa
iret
adc
fwait
cmpsb
ljmp
cltd
test
push
test
push
push
jnp
icebp
ds
jb
subl
lea
add
or
or
or
jae
orb
jnp
mov
sahf
push
mov
jo
dec
cmpsb
testb
insl
or
push
xor
inc
or
sbb
je
jnp
lods
into
and
mov
insl
jnp
std
sub
imul
sbb
push
pop
inc
mulb
inc
aaa
int
jmp
add
fdivrp
lahf
sti
xchg
nop
inc
test
clc
add
orb
mov
push
inc
mov
icebp
fucomip
call
adc
jp
jnp
iret
movsl
mov
lds
cmp
dec
jnp
aad
daa
scas
pop
jnp
enter
out
sbb
jns
stc
imul
mov
out
jnp
mov
pop
dec
sahf
test
outsl
js
mov
cmpsb
stc
xchg
dec
mov
jl
es
sbb
and
or
jnp
imul
in
push
rcrb
imul
cmp
xchg
sbb
inc
outsl
or
dec
and
add
and
aad
repnz
push
add
scas
sub
jnp
sbb
mov
pop
and
sub
cmp
jnp
and
divb
lods
int
mov
add
or
cbtw
pop
aam
outsb
push
pushf
bound
cmp
test
dec
push
cltd
aad
insl
xchg
and
jl
mov
lea
jne
push
mov
imul
outsl
mov
imul
jae
xchg
sub
mov
bound
push
lds
pop
adc
mov
xor
cwtl
mov
mov
dec
daa
or
or
loop
jne
mov
outsl
fimull
test
xchg
leave
jle
insb
jne
xor
jnp,pn
jp
shrb
sarb
cwtl
gs
mov
jnp
ja
mov
fidivs
js
sahf
mov
xor
jnp
sbb
cmp
jmp
cld
js
mov
insb
ljmp
in
jns
and
mov
dec
mov
les
jge
popa
loop
inc
scas
jnp
xchg
and
das
xchg
shl
push
sarl
mov
les
xlat
outsb
jb
mov
aad
push
ret
jnp
fucom
push
push
cmpsl
into
aas
cmp
in
dec
fnstsw
jge
repz
ljmp
daa
mov
pushf
les
add
add
mov
dec
pop
inc
cmp
fwait
inc
jnp
lock
popa
adc
push
stc
cmp
pop
les
pop
movsb
popa
jb
imul
push
loopne
imul
add
xor
pushf
jnp
call
push
pushl
jmp
outsb
addb
adc
aam
mov
mov
addr16
es
cmp
jb
inc
push
jae
pop
jmp
cmp
mov
xor
stc
icebp
daa
add
hlt
push
jne
cli
stos
repz
hlt
dec
inc
inc
add
xchg
lea
jnp
jmp
shll
push
adc
dec
mov
mov
cltd
jmp
int
stos
sub
dec
pop
jne
mov
sbb
imul
jne
in
cmp
mov
pop
sti
pop
fidivl
outsl
into
repz
fisubs
xchg
jnp
outsb
xor
adc
sti
sub
or
adc
mov
aam
xor
jnp
loopne
jecxz
xchg
jle
push
cmp
pop
arpl
daa
pop
inc
sub
sarl
jno
clc
push
mov
mov
stc
pusha
or
pop
jg
add
sbb
mov
jns
jmp
test
mov
lock
sbb
les
xor
adc
sti
arpl
adc
jnp
pop
mov
cwtl
sbb
jmp
enter
aam
out
out
and
jns
outsl
es
repnz
adc
pop
jbe
dec
sub
lahf
xor
or
mov
or
es
mov
mov
adc
jnp
ja
mov
shlb
mov
cmp
fdivrs
push
jle
jae
jecxz
imul
enter
cmp
mov
mov
loopne
or
xchg
je
xchg
xchg
or
mov
xchg
popf
in
pop
ja
mov
loop
aaa
mov
mov
clc
mov
or
jle
lock
cmp
bound
sbb
jg
mov
mov
int3
notl
and
and
pusha
mov
sub
jae
jecxz
mov
iret
or
jp
inc
jge
fnstsw
mov
pop
cmp
mov
jnp
subl
stc
push
jge
cmpsb
js
inc
jecxz
push
jns
adc
lret
jae
xchg
cmpsb
outsl
cmp
sub
sub
mov
or
sbb
mov
cs
jbe
clc
dec
pop
lds
add
jnp
cmp
std
out
insb
sbb
out
jns
xchg
inc
jnp
arpl
fstps
cli
jnp
or
push
stos
mov
xor
xchg
rorl
mov
sarb
sarb
je
test
jnp
out
push
decb
and
cmpsl
add
fildl
testl
fwait
mov
jnp
xchg
dec
cltd
cmpsl
test
fidivrl
call
xchg
movsl
jnp
ljmp
aam
dec
mov
push
mov
jnp
popf
xor
and
dec
push
push
imul
mov
outsl
lock
in
mov
in
adc
gs
mov
sub
repnz
fs
or
clc
mov
cli
stos
fwait
in
imulb
push
js
icebp
jns
jg
sub
or
loopne
jno
leave
mov
cs
mov
sahf
cmp
es
or
test
cmc
jae
in
cmp
ljmp
push
imul
cmc
jae
shl
or
add
scas
lret
inc
imul
in
negb
in
adc
xchg
hlt
jp
ljmp
jae
add
sti
jmp
or
outsl
cmp
push
jae
push
mov
sub
jns
pop
outsl
mov
xchg
jno
stos
lods
in
lods
cmp
roll
mov
addl
mov
push
jae
hlt
fbstp
call
out
jbe
sbb
or
pop
and
lods
ljmp
pop
sbb
mov
inc
cli
daa
cmp
out
lock
pusha
dec
outsl
cmp
lods
andl
jnp
sbb
push
add
lock
sbb
sbbb
aad
out
adc
push
outsb
pop
imul
or
xor
roll
in
or
movsl
dec
inc
ja
insl
jae
mov
jge
clc
pop
jae
das
mov
les
xchg
sub
ja
jnp
push
int
movsl
xor
lret
es
mov
inc
sub
inc
jnp
in
lods
jp
test
and
dec
stos
sarl
icebp
test
nopl
xchg
icebp
scas
imul
jnp
jbe
into
fincstp
sbb
outsl
cmc
jle
lods
jb
stos
mov
adc
jnp
jbe
loope
xor
jne
mov
aaa
cltd
cmp
cs
mov
jle
popa
movsl
adc
fwait
mov
sbbl
mov
push
sar
lret
es
into
test
sbb
cmp
aam
data16
mov
pop
and
jnp
fwait
push
cmp
xor
dec
dec
xchg
outsb
inc
int
mov
jbe
aas
scas
setae
jnp
jae
inc
pop
js
add
or
mov
dec
ja
popf
rorb
jnp
std
sbb
mov
aam
daa
les
push
test
add
mov
nop
mov
stc
mov
imul
sub
pop
cmp
das
dec
cmc
test
xlat
xchg
ljmp
leave
test
maskmovq
idivl
inc
dec
jecxz
cmp
mov
fwait
imul
aas
arpl
jnp
cli
xor
inc
loope
cmp
jno
cmp
dec
scas
mov
imul
shrl
popf
lods
jl
aam
jmp
sub
sub
imul
add
and
imul
loopnew
int3
fyl2xp1
dec
jnp
jb
out
push
das
sub
mov
negl
dec
insl
addr16
ss
nop
stos
inc
push
adc
mov
inc
mov
xor
jnp
xor
lea
pop
lret
cmp
loop
shll
popf
cmpsb
outsl
jnp
xchg
dec
mov
insl
inc
and
mov
jns
mov
adc
add
mov
ret
jnp
popa
xchg
adc
nop
mov
jae
jmp
sbb
xor
cld
mov
jae
dec
mov
adc
push
outsl
or
mov
cwtl
mov
cmpl
mov
notb
jo
cmp
push
leave
movsl
xchg
jnp
xor
aam
loope
cmp
out
jnp
sub
adc
pushf
loop
js
test
loopne
sbbl
mov
rorb
fidivs
xchg
lcall
das
dec
movsl
cmp
data16
jmp
inc
jnp
push
dec
push
insl
int
jg
test
popf
movsb
mov
cmp
xchg
popa
jnp
aaa
pop
pop
or
clc
fdivrl
dec
cld
xor
imul
hlt
cmp
cmp
ss
pop
lea
jnp
jae
xchg
shll
sbb
cltd
out
add
adc
lret
out
jnp
jl
jns
ljmp
jp
add
fnstsw
mov
das
xor
dec
dec
ret
xor
ja
rcll
out
jmp
add
loope
inc
scas
test
into
sbb
icebp
jnp
ds
imul
orb
pop
push
imul
mov
cs
cmp
clc
inc
test
mov
inc
out
sbb
in
adc
div
sub
shl
dec
push
int
aad
mov
mov
imul
rcll
aaa
xlat
dec
test
lcall
icebp
ljmp
or
pop
sub
mov
sub
imul
dec
scas
dec
ret
iret
cld
or
sbb
add
cltd
xor
adc
mov
jle
jns
xchg
pop
negb
and
aaa
sbb
pop
bound
pushf
mov
jnp
jl
jmp
into
icebp
test
roll
jnp
fcomi
hlt
aas
orb
cmp
sbbl
pop
ret
dec
mov
and
sub
shlb
ss
out
pop
add
jne
adc
mov
fmuls
in
jecxz
repnz
jno
xor
scas
pop
nop
cmp
adc
add
call
xchg
loopne
push
ja
mov
hlt
cmp
jle
stos
test
sbb
out
adc
sbb
clc
jg
sbb
inc
xor
pusha
hlt
jnp
mov
mov
mov
popf
not
fldl
jnp
pusha
xlat
sub
push
insl
dec
jnp
mov
adc
jnp
jge
int3
mov
es
sbb
mov
imul
fnstcw
loopne,pn
scas
pop
orl
xchg
fdivrs
push
aaa
dec
das
mov
inc
out
call
pop
jnp
xchg
and
sub
xchg
neg
jnp
mov
and
decl
ljmp
iret
sbb
jp
jnp
decb
ret
push
pop
mov
jnp
pop
mov
jo
push
iret
lret
inc
lods
add
dec
jnp
dec
jns
jae
jnp
pop
sub
clc
dec
ret
mov
or
lret
movsb
sbb
inc
repnz
adc
lret
daa
sub
jb
jl
lods
xor
pop
enter
fdivrl
push
clc
xor
imul
sbbl
in
lods
ljmp
insb
cmp
adc
sub
jne
mov
fstpt
mov
push
mov
fbld
repnz
idivb
outsl
pop
mov
push
aad
jecxz
add
lods
stc
jnp
jno
stos
lea
minps
call
adc
stc
jb
inc
in
sub
adc
pushw
mov
pop
sub
enter
xchg
imul
test
mov
test
mov
in
lea
push
xchg
jmp
pop
call
mov
cltd
inc
jo
jnp
popf
jno
or
out
test
lret
icebp
insl
std
cmp
xor
pop
jecxz
push
or
sbb
outsl
push
and
shl
jbe
push
ss
mov
leave
outsl
popa
xchg
cmpb
jl
jnp
shrl
mov
mov
mov
inc
fucomi
int
xor
test
xrelease
out
ss
inc
sbbb
stc
sbb
pop
mov
jae
lock
ljmp
xor
jnp
jbe
inc
jnp
jns
mov
cmp
adc
imulb
sarb
insl
jb
nop
mov
pop
loop
in
repz
xchg
jnp
xchg
jecxz
xor
and
call
imul
sahf
lret
popf
lcall
mov
gs
or
xchg
aad
lea
cmp
sub
xchg
pop
or
mov
repnz
pop
mov
dec
cmp
fucomi
in
dec
js
jnp
orl
pop
cmp
mov
adc
ret
sbb
sub
cmp
push
inc
xchg
jmp
push
jg,pn
push
cmp
stos
mov
mov
jno
xor
jne
mov
in
inc
jnp
test
test
jnp
out
sbb
pop
push
fnstsw
pop
push
cld
sbb
or
fs
pop
jns
push
push
shrl
push
adc
ja
pop
les
movsb
cmp
addb
repnz
dec
cmc
and
into
rol
inc
fmuls
jnp
push
pop
aad
push
jmp
scas
push
add
lahf
cmpb
sarl
pusha
icebp
imulb
loop
jle
xor
adc
xchg
ja
sub
sub
cmc
outsl
in
sub
sub
and
push
out
pop
call
imul
jge
push
mov
and
test
pop
pop
adc
xchg
mov
xchg
sbb
or
cmc
xor
test
xchg
icebp
inc
pop
inc
xor
leave
add
mov
pop
clc
repnz
imul
adc
or
gs
jnp
fcmovnb
xchg
or
inc
aas
outsl
jbe
xchg
sub
dec
jg
fldt
sarb
in
xchg
or
imul
data16
nop
test
lods
imul
fdivs
adc
jmp
push
dec
imul
out
fnstcw
or
pushf
pop
sub
imul
fmul
dec
sbb
data16
sub
sub
test
test
fs
and
or
cwtl
mov
cmp
sbb
imul
lcall
std
push
out
enter
mov
pop
xchg
jecxz
das
out
cmc
jbe
test
jno
push
arpl
push
mov
jecxz
cmp
mov
push
mov
mov
mov
jae
fcoml
xchg
or
outsl
movsl
xlat
out
in
jb
and
into
adc
push
test
xorb
jnp
sbb
enter
xor
jnp
mov
jnp
xchg
push
andl
push
in
inc
das
and
ficomps
adc
hlt
mov
jmp
lret
add
out
sbb
insl
test
aam
hlt
sub
pusha
ror
cmp
pop
xchg
mov
jae
shl
mov
jns
int3
mov
and
outsl
adc
adc
in
dec
xor
mov
popl
xchg
ret
jae
das
pop
jns
jnp
loopnew
push
jge
ss
shr
jnp
xchg
pop
add
jecxz
imul
pop
xchg
mov
sub
fdivl
test
rclb
loop
scas
dec
jne
mov
jnp
movsl
and
pop
lea
push
aam
jnp,pt
insb
loop
jne
push
cwtl
inc
dec
or
jae
insl
ja
sahf
ss
jne
mov
xor
shr
loop
jb
jns
jae
leave
fstl
jo
aaa
push
sarl
arpl
scas
insl
divb
jnp
stc
loop
sub
mov
hlt
popa
or
mov
add
pop
or
mov
pop
pop
sbb
lods
jnp
push
mov
imul
mov
xchg
mov
mov
add
cmp
insb
data16
popa
mov
sbb
outsb
and
inc
cmpb
adc
call
insb
pop
shlb
insl
loope
inc
mov
pop
xchg
adc
cmp
mov
das
repz
scas
adc
mov
xchg
sbb
inc
sub
shr
dec
add
add
mov
jne
cmp
push
fistps
aad
add
mov
push
jnp
and
and
mov
xor
jnp
adc
xchg
mov
fistpl
pop
jae
lret
clc
sti
push
add
out
mov
mov
or
cs
dec
jnp
insl
mov
pop
testb
jno
sub
or
xchg
movsb
push
inc
lock
arpl
jnp
add
int3
sbb
mov
das
iret
imul
insb
jb
sbb
mov
ja
inc
push
fldcw
popa
add
cmp
xchg
fwait
popf
jno
mov
aam
jnp
insl
xor
in
mov
jnp
test
test
mov
jecxz
dec
fsub
add
lahf
mov
jae
cmp
sbb
cmp
shl
adc
out
mov
shrb
inc
mov
std
cmp
jae
cmp
push
mov
xchg
jge
iret
pop
jbe
bound
jg
mov
insb
cmp
and
push
or
fwait
adc
xchg
mov
xor
fmulp
jns
mov
add
mov
xor
dec
std
ret
mov
jns
into
insl
jb
dec
or
xchg
ror
ljmp
aam
daa
sbb
stos
jbe
or
lahf
push
pop
pop
mov
ja
push
ret
ja
mov
outsb
and
fiaddl
adc
xchg
jne
and
mov
push
lcall
jnp
mov
sbb
pop
jb
gs
xor
sarb
sbb
fstl
mov
mov
dec
lcall
push
insb
in
jmp
jnp
pop
test
pop
sbb
pusha
imul
int
int3
sub
adc
insb
pop
out
es
fildll
mov
jnp
test
fnsave
repnz
jns
cwtl
enter
insl
jnp
popa
jb
test
inc
jnp
aad
or
clc
mov
ret
mov
fdivrs
sbb
es
cmp
pop
andl
or
mov
jnp
and
xchg
imull
xchg
outsl
cmp
ds
and
fstpl
lret
jp
out
mov
xor
mov
jae
popa
jmp
movsl
hlt
sub
push
sub
arpl
hlt
imul
int3
imulw
js
and
out
sahf
imul
stc
lods
out
cltd
jne
popa
imul
xchg
insb
mov
jb
pushf
push
stc
lret
sub
and
jnp
jne
xchg
repnz
insb
outsb
fildl
sbb
jb
sub
sub
push
cmp
in
lahf
sti
mov
mov
xchg
mov
mov
mov
insl
add
mov
outsl
rcrb
dec
dec
fwait
aad
enter
xchg
and
rclb
hlt
jae
lods
lret
adc
loopne
repz
or
cmp
pop
imul
popf
bnd
jnp
lahf
icebp
pop
cmp
inc
idivl
cmovae
pusha
add
aam
cltd
outsl
shr
stos
jnp
and
inc
mov
adc
push
loopne
xchg
int3
insl
mov
dec
dec
cmpsl
sti
mov
jae
mov
xchg
aaa
jmp
jb
aam
or
jmp
hlt
idivl
insb
jns
push
adc
adcb
stos
jns
and
mov
fdivrl
negl
js
or
and
outsl
jnp
xor
out
cld
outsl
mov
fistps
pop
lahf
xchg
lret
fwait
test
into
mov
shrb
cmp
xor
enter
hlt
jnp
mov
lcall
jl
jnp
inc
cli
sub
and
sti
rcll
fwait
push
inc
aaa
jnp
test
xchg
adc
or
out
lahf
imul
jno
pop
pop
and
lahf
mov
sbb
push
lds
mov
jae
inc
xchg
cli
mov
lret
jnp
push
and
adc
pop
pop
pushf
mov
jae
test
fdivrs
js
push
jnp
adcb
xlat
jnp
pop
pop
fdiv
lcall
mov
pop
scas
mov
jnp
aas
jb
xor
xchg
jg
pop
int
std
call
hlt
int3
ficoml
bound
lods
pop
es
pop
shlb
mov
inc
pop
xor
inc
repnz
jne
lahf
or
jnp
arpl
cmp
aaa
inc
jnp
test
mov
and
outsl
lock
imul
sub
mov
xor
push
sbb
push
je
aas
dec
in
imul
mov
pop
inc
pop
lret
xlat
daa
rclb
jb
orl
jmp
aad
mov
dec
xor
addr16
cmp
or
js
mov
adc
jnp
xchg
sbb
inc
jnp
sbb
pop
das
ljmp
mov
movsl
mov
mov
jbe
sbb
lods
jmp
mov
inc
lock
int3
xchg
and
hlt
rorb
xchg
jb
lds
or
ret
jnp
dec
fisttpl
jnp
cwtl
icebp
aam
or
jge
jnp
xlat
dec
push
insl
or
jae
cmc
stos
addr16
push
sbb
fmul
adc
scas
jnp
or
dec
pop
xchg
mov
pop
aas
jnp
or
adc
mov
je
jnp
and
lret
int
out
pop
dec
mov
jecxz
imul
jns
fstpt
lock
add
sub
jnp
or
addr16
or
imul
jne
ja
sbb
mov
ljmp
lcall
mov
lret
aad
mov
pushf
ds
into
cmp
mov
dec
lret
insl
adcb
mov
rclb
and
aam
sbb
xchg
ret
test
testl
iret
stos
push
adc
fwait
mov
or
scas
xor
jge
iret
popa
sbb
and
fwait
mov
pop
pop
divl
test
test
mov
mov
pop
mov
and
ret
call
xor
xor
or
cli
int3
ljmp
movsl
das
push
xor
in
pop
jp
xchg
fcoml
repz
add
sub
fistps
lea
dec
mov
xchg
sub
insl
and
push
add
mov
push
sbb
lock
loop
mov
lea
pop
fdivrs
jl
sbb
or
push
or
mov
je
add
xchg
insl
fldt
jle
outsb
aam
shlb
aam
in
shr
movsl
into
push
adc
sbb
mov
mov
pop
dec
gs
inc
ja
push
xchg
cs
push
pop
fldlg2
outsb
adc
mov
jo
test
faddl
or
je
ret
mov
out
pop
or
mov
sub
test
imul
jae
aas
or
mov
sub
fmul
in
inc
sbb
nop
push
mov
push
mov
sahf
push
pushf
push
mov
add
lods
test
nop
out
pop
cmpsb
sahf
and
cmp
fmull
mov
dec
push
pop
push
lret
test
adc
xchg
fdivl
or
add
fldenv
and
xor
ret
jo
add
stos
cmp
cmp
push
push
data16
in
pop
cmp
mov
fildl
push
cli
jl
mov
xchg
cli
nop
mov
repnz
fmull
out
jecxz
pop
jnp
cmp
pop
sbbl
sbb
inc
mov
inc
cmc
out
pop
cmpsb
sbb
out
mov
mov
je
mov
mov
dec
jl
pusha
jbe
cli
pop
aad
mov
pop
push
negb
faddl
xchg
out
out
leave
or
out
addr16
cmp
movsl
mov
push
mov
stos
xor
out
pop
cmpsb
jp
xchg
leave
mov
mov
fwait
in
jnp
pop
sbb
adc
lret
icebp
out
dec
cmp
mov
sub
test
cmpsl
mov
test
fwait
push
pop
jge
rorb
cmp
adc
rorb
add
daa
dec
pop
mov
shlb
enter
adc
lea
repz
or
mov
push
inc
adc
std
dec
inc
push
inc
frstor
cmp
pop
xor
scas
js
adc
and
adc
hlt
pop
out
pop
cmpsl
push
lock
lahf
das
push
push
dec
popa
push
inc
push
sbb
out
push
sbb
negb
rcrb
mov
call
push
rcr
fwait
or
movsb
sub
mov
sbb
adc
mov
cwtl
xchg
fiadds
lds
ljmp
aam
cli
js
rclb
int3
fisubrs
mov
add
adc
add
adc
sbb
pop
cmpsl
repnz
cmp
push
jmp
jmp
repnz
sbb
in
hlt
out
loop
out
mov
lods
pop
push
inc
ret
sub
adc
test
fcom
insb
fsubl
outsb
lea
ja
out
je
mov
dec
ljmp
mov
push
scas
sbb
dec
jecxz
jbe
sbb
mov
cmp
adc
mov
mov
scas
add
xchg
je
push
mov
int3
ds
pop
iret
dec
push
incl
inc
jmp
pop
test
in
shrl
insl
pop
in
xchg
cli
cwtl
cwtl
lcall
and
adc
cmp
test
mov
mov
and
pop
sbb
push
mov
fmul
mov
imul
sub
inc
lock
lcall
mov
inc
std
push
ffree
sub
sbb
add
rclb
test
fildll
out
insb
sahf
push
mulb
js
pushf
push
xchg
ds
pop
test
neg
incl
call
pusha
jbe
pop
push
jbe
inc
loopne
xor
outsb
push
lea
aam
and
mov
jno
ja
imul
and
push
pop
add
popa
adc
ljmp
fs
xchg
inc
lcall
xor
out
sbb
in
add
and
and
cmc
rorb
test
lock
sbb
imul
leave
imul
pop
test
mov
test
sbb
out
jecxz
out
pop
int
sbb
daa
sbb
stc
js
loop
lahf
lods
dec
in
push
xor
push
idivl
cmpsl
mov
mov
xchg
sbb
repz
imul
inc
pusha
lea
jp
push
lea
jb
clc
cmp
bt
push
cmp
push
pusha
lea
jae
xor
test
mov
mov
shl
sub
mov
mov
and
mov
stc
push
sub
clc
clc
repnz
pusha
mov
pushf
push
lea
jne
bts
mov
shl
btr
sbb
sub
adc
adc
call
pushl
mov
push
call
add
dec
outsb
je
jb
gs
jb
arpl
jb
inc
add
loop
lret
cmova
xchg
mov
jbe
jle
dec
divl
xor
movsl
mov
sbb
in
sub
cmpsl
mov
es
jae
xor
pop
in
jmp
pop
call
orb
adc
or
sub
pop
pop
jmp
roll
rolb
cld
push
out
pop
stos
jge
jl
cmp
and
shl
xchg
cli
sub
sbb
sbb
sbb
sub
sub
sbb
rorl
subb
daa
pusha
arpl
inc
xchg
mov
sbb
icebp
mov
and
mov
cmpsb
xchg
lcall
ja
adc
outsb
dec
int3
adcb
mov
cmp
pop
out
cli
fcom
inc
repnz
and
addr16
rcr
jge
je
sub
bound
repnz
add
in
je
insb
cli
inc
loop
or
out
pop
stos
xor
or
or
push
jns
push
inc
jge
dec
arpl
shll
gs
pop
pop
scas
ret
xchg
push
popa
jmp
and
ljmp
mov
loope
test
pop
mov
mov
test
or
push
xor
aam
stos
mov
shl
mov
push
insl
jmp
cld
out
sbb
pop
sarb
loopne
aam
enter
or
pop
lods
mov
ficoml
in
lret
xor
sub
xor
je
or
adc
scas
aam
dec
insb
out
push
cmc
lea
insl
data16
popl
sbb
rorb
out
into
xchg
or
cmc
add
xor
ret
les
push
cmp
inc
lods
in
mov
sti
jb
pop
xor
xchg
inc
hlt
mov
sbb
push
push
pop
sub
bound
inc
inc
enter
xchg
daa
mov
push
jnp
or
mov
push
pop
lods
sub
adc
or
out
pop
lods
inc
mov
call
out
dec
out
lods
jbe
dec
push
xchg
subb
mov
loop
cmp
mov
test
popa
jmp
loopne
xchg
je
xchg
and
push
mov
cmp
xor
sub
in
fcoms
pop
lods
cmpl
fstpl
out
in
aam
loopne
test
call
imul
ja
cmp
dec
ror
push
fldcw
inc
iret
lea
jbe
xlat
bound
dec
push
mov
pop
cmpsl
or
repnz
in
insl
in
add
cmp
mov
mov
sbb
out
fnstcw
daa
sbbl
lods
loop
adc
xor
mov
test
mul
push
sbb
lods
mov
sub
xchg
dec
out
cmp
sbb
push
jecxz
mov
cmpsl
popa
jne
mov
minps
sub
jg
mov
add
mov
int
das
xchg
pop
sub
inc
or
or
sub
out
pop
scas
jge
imul
lds
push
add
xor
sub
adc
int3
outsb
loopne
or
add
mov
repnz
iret
add
popa
das
stos
and
movsb
pop
mov
dec
add
or
es
outsl
ss
jg
das
roll
push
sub
adc
mov
fwait
std
out
mov
fbld
jno
xor
imul
lret
lods
cmc
clc
sub
lea
ja
ror
call
mov
adcb
sahf
push
sub
push
adc
or
cmp
add
cmp
xchg
cs
jb
icebp
pop
dec
pop
clc
outsb
call
les
sbb
mov
in
cmp
push
loop
in
out
cwtl
insl
fwait
cs
aam
inc
outsl
test
dec
dec
adc
jp
inc
or
cmp
js
pop
adc
ss
icebp
jae
adc
mov
orb
mov
adc
orl
sbb
jne
sbb
in
lsl
add
pop
out
pusha
sub
jo
inc
jbe
or
inc
js
js
dec
pop
xchg
mov
push
aaa
mov
mov
mov
cwtl
inc
dec
fistps
xlat
sbb
adc
inc
cli
js
mov
test
mov
push
shll
gs
pop
push
pop
dec
fbld
in
cmp
movsl
xchg
fimuls
adc
mov
pop
adc
mov
sub
mov
push
push
dec
pushf
push
mov
rep
cltd
xchg
push
inc
ror
pop
cmp
xor
ss
outsb
xor
or
data16
int3
outsb
fdivs
pop
scas
cmp
xchg
cli
sub
sti
cmc
push
pusha
out
add
inc
pop
push
popa
dec
jno
popa
push
jns
jne
mov
sbb
dec
adc
lcall
mov
lds
adc
in
mov
mov
scas
insl
mov
outsl
jg
xchg
sub
and
xlat
lahf
pop
jno
add
cmc
loope
cmc
popa
cmp
mov
sbb
inc
adc
add
mov
cmp
cmp
sbb
inc
jecxz
sarb
pop
jnp
push
lds
fldenv
stos
sbb
pop
mov
and
outsb
rcr
pop
push
mov
xchg
ret
sbb
xlat
popf
aas
cld
or
xchg
mov
lcall
and
lret
mov
inc
imul
push
mov
mov
cmp
xor
bound
or
mov
mov
out
call
xchg
setge
in
push
aam
call
shlb
jl
and
add
in
jae
pop
mov
pop
dec
fwait
shl
out
pop
pop
arpl
shll
jbe
push
add
cmp
and
sbb
cmc
mov
fwait
test
dec
dec
shrl
leave
xchg
out
imul
dec
call
mov
sti
inc
cmp
pop
add
ja
les
cmp
mov
lock
hlt
lret
mov
faddp
dec
ret
xor
jne
jge
inc
fistpll
mov
pop
out
pop
mov
in
fdivp
sar
sbb
nop
pop
addr16
jae
addr16
jae
ja
dec
adc
dec
jnp
scas
hlt
xor
lcall
cmpsb
dec
je
fstps
ret
sbb
xchg
test
aam
scas
fcmovnbe
pop
in
out
xchg
pop
mov
sbb
xor
iretw
imull
repz
pop
mov
lahf
orl
dec
inc
xor
cs
insb
add
sbb
mov
sub
pop
and
xlat
rcll
mov
or
pop
push
add
dec
sub
lods
and
js
imul
sbb
je
cwtl
aam
push
mov
mov
xchg
lock
call
mov
push
xor
push
outsb
insb
cmp
bound
xchg
xor
out
stc
in
pop
adcb
cmpsl
xchg
pop
lea
movsl
adc
out
inc
out
pop
mov
xor
lea
je
cmc
pushf
sub
movb
pushf
cmp
pushf
jmp
cmc
sub
call
test
test
add
push
nop
mov
mov
hlt
dec
add
mov
ds
fdivp
jl
adc
mov
dec
cmpsb
pop
lret
fcoms
mov
dec
xlat
pop
psraw
dec
lods
inc
xchg
stos
call
sahf
and
cmpsl
jmp
shll
xchg
shlb
push
popa
inc
jb
or
cmpsl
mov
aas
das
inc
mov
jno
mov
sub
test
jo
inc
je
dec
push
mov
pop
testl
rcrb
in
pusha
out
push
mov
imul
dec
out
rorl
pop
cmc
faddp
inc
and
mov
fs
jae
pushf
clc
push
cmp
jmp
xor
lea
call
inc
pushf
pushf
mov
inc
inc
add
rcr
xchg
inc
or
xor
shr
mov
pushf
setbe
sar
mov
add
cmc
jmp
xor
fisubl
adc
cmp
in
hlt
rcrb
arpl
insb
adc
jno
or
inc
pop
pushl
mov
jb
sub
les
jnp
mov
adc
test
inc
rolb
loope
jne
insl
xor
outsb
fcoml
mov
aas
or
mov
and
iret
movsb
leave
add
sub
xchg
popa
roll
inc
sbb
notl
xlat
ret
push
xchg
push
push
repz
loope
imul
imul
push
pop
sbb
sub
sbb
and
adc
into
jne
gs
xor
cmp
adc
or
cmpsl
in
push
sub
jno
repz
shld
shr
mov
push
cmp
add
movsl
ret
dec
pop
and
cwtl
jae
cwtl
orl
push
aad
roll
inc
sti
jge
mov
mov
xchg
mov
fld
push
lea
jae
pushf
test
cmp
pusha
jmp
not
pop
push
mov
lea
ja
mov
seto
pop
bswap
mov
pop
call
cmp
clc
add
test
call
jmp
scas
xchg
fisubl
jb
ljmp
mov
rolb
push
and
pop
cmp
test
jg
repz
mov
cmc
and
xchg
shl
cmp
mov
push
clc
jl
cmp
notl
push
icebp
data16
adc
xchg
ja
sub
sbb
movl
sub
lods
mov
fwait
jae
sbb
insb
xchg
jle
cwtl
sbb
mov
out
pop
mov
mov
fsubr
stc
shll
call
imul
outsl
jne
mov
mov
jl
jae
pushf
sub
inc
ret
outsb
xor
call
push
adc
loop
dec
test
adc
fucom
xor
mov
inc
aad
icebp
jge
push
call
jns
popf
das
lcall
xor
xchg
call
push
jl
cld
pop
int3
inc
hlt
dec
enter
and
pushf
mov
xchg
sbb
das
mov
adc
push
sbb
pop
and
mov
pop
pop
clc
xchg
into
data16
adc
mov
mov
mov
cmpsl
mov
test
cmp
insb
lahf
jecxz
jmp
jbe
pop
fiadds
or
mov
mov
jmp
mov
int
push
jl
xor
and
mov
mov
inc
xor
rclb
jl
mov
enter
aam
loopne
out
pop
mov
mov
lret
rep
xchg
pushf
xchg
ja
dec
push
lock
mov
dec
jl
orb
xchg
addr16
nop
scas
cs
xchg
repz
cltd
or
mov
dec
and
push
mov
jae
sbb
fwait
or
sub
jg
jbe
and
cmp
push
jnp
pop
push
arpl
insl
pop
gs
jne
nop
sub
jns
sbb
pop
inc
push
pop
arpl
pop
in
stos
mov
push
pop
cmp
inc
push
adc
push
sub
fstpt
outsw
mov
loopne
arpl
test
mov
jecxz
popf
das
jge
jl
rcl
jae
sub
arpl
inc
std
push
std
addr16
arpl
push
call
int3
xchg
xchg
xchg
mov
or
jbe
sbb
cli
shrb
outsl
insb
mov
mov
aam
xorl
in
fsubrl
aas
jae
and
out
daa
lret
jge
movsl
mov
ja
shrb
cmc
lea
mov
idiv
jecxz
ss
xor
adc
pop
add
jmp
push
in
scas
ljmp
insl
shll
pop
mov
enter
xor
and
push
mov
mov
loop
sbb
out
pop
mov
sub
sbb
mov
packssdw
push
jb
jle
bound
pop
inc
pop
repnz
shll
inc
jmp
jbe
mov
push
jnp
fsts
inc
mov
or
mov
dec
push
xchg
movb
xchg
mov
xchg
inc
mov
xorl
pushw
lret
dec
pop
lods
and
mov
testb
jg
outsl
out
push
xchg
mov
cwtl
rcl
ljmp
inc
repz
sti
fstp
mov
lret
lds
push
cmp
out
rcrl
mov
fsubrl
test
mov
sbb
mov
insl
out
aas
mov
dec
je
sub
cld
inc
inc
les
push
xchg
ficoml
inc
cld
jbe
mov
ret
mov
loopne
adc
fdivl
dec
jge
add
lods
mov
addr16
sbb
mov
dec
push
aam
adc
lret
mov
rcl
ljmp
dec
jl
fiaddl
push
xor
mov
adc
scas
lret
aam
shrl
cmpsl
xorb
add
push
pushf
popa
sbb
or
data16
push
or
les
imul
and
bound
aas
adc
in
ficomps
call
jmp
xor
or
pop
dec
mov
cld
cwtl
stos
push
mov
mov
nop
ret
rclb
fs
nop
sub
or
xchg
or
ljmp
scas
xchg
add
mov
notl
and
mov
pop
arpl
incl
inc
mov
jne
xor
add
adc
fsubr
fcom
enter
in
sub
jmp
pop
loope,pn
mov
aas
xchg
dec
inc
pop
lds
inc
lret
jge
jb
mov
imulb
jge
shrl
xchg
dec
jp
in
fs
std
mov
aam
les
mov
jle
je
hlt
jb
push
push
dec
test
loopne
sub
scas
mov
int3
data16
push
lock
cld
inc
rclb
add
mov
xor
stc
sbb
shld
mov
cmp
cmc
sub
call
hlt
repz
jge
arpl
jmp
xchg
mov
mov
mov
pop
sub
mov
addr16
outsb
into
jge
mov
stc
incb
ljmp
daa
imul
push
pop
inc
mov
popf
rcr
jns
add
cmpsl
xchg
gs
mov
insb
shll
jle
clc
sub
stos
mov
sbb
adc
adc
push
pop
insb
xor
sbb
push
out
pop
mov
mov
jne
imul
test
nop
mov
pop
pop
fs
push
sbb
daa
mov
pop
dec
out
and
das
and
xchg
inc
rolb
xorl
lods
subb
inc
adc
rolb
jmp
push
add
adc
aaa
enter
pushf
fists
aas
sub
pop
adc
faddl
pushf
xchg
sbb
cs
inc
sbb
mov
jo
ret
jae
popa
sub
daa
jnp
jnp
aas
stc
inc
int
xchg
or
inc
dec
mov
dec
push
addr16
xor
pop
cmp
pop
mov
mov
sub
ds
aaa
orl
xor
cmpsb
mov
jmp
rorl
or
mov
inc
cmp
out
sub
into
call
sub
mov
imul
or
xor
push
cld
inc
xorb
daa
inc
inc
les
xor
hlt
add
jnp
sarb
xchg
mov
jge
lea
scas
mov
jb
jp
jp
push
clc
out
pop
mov
out
add
mov
idivl
jne
ds
call
ret
in
je
arpl
mov
dec
test
sub
mov
push
insl
aas
jns
rcrl
jns
gs
in
sub
push
sbb
mov
sarl
lods
inc
sarl
lret
and
push
mov
pop
cli
lods
mov
push
jbe
jbe
es
pop
mov
mov
push
movl
pushl
ret
pop
ja
jg
pop
in
cmp
stos
or
push
push
dec
pop
out
pop
pop
mov
out
xchg
sub
add
mov
jns
sbb
into
fs
jne
push
mov
fidivl
sbb
ret
push
inc
and
data16
jb
cmp
and
sbb
add
or
xor
sub
jle
push
shlb
pop
mov
nop
ret
xor
pop
pop
cld
jg
or
push
jns
xor
arpl
fnstcw
xor
jae
push
lret
pop
repnz
jg
test
stos
enter
or
jne
vphaddubw
xor
and
std
rol
data16
test
loop
rcl
mov
pop
icebp
fs
ja
popf
les
xor
xchg
addb
add
outsl
xlat
aad
in
stos
loop,pt
mov
nop
mov
outsb
push
push
fistl
cs
movsb
nop
inc
sub
xor
loopne
push
clc
fcoml
shll
sbb
and
gs
addl
jae,pt
jo
je
xor
sbb
repnz
push
popa
dec
xor
loope
ret
jle
push
adc
data16
adc
jl
sbb
rcl
push
loopne
adc
push
inc
push
idivl
mov
ret
out
inc
push
sbb
icebp
enter
test
sbb
mov
adc
inc
fnstsw
lret
mov
and
sub
arpl
test
push
mov
sub
pop
inc
in
mov
add
and
sbb
or
shlb
inc
shrb
out
pop
mov
repnz
lea
call
pushf
lea
jae
setbe
mov
pushf
pushf
pusha
sete
inc
pushf
setg
not
jmp
jae
dec
or
cmc
mov
add
int3
sbb
mov
dec
add
pop
int3
sbb
and
enter
sub
push
add
call
cmp
push
fs
cmp
dec
nop
lcall
sub
push
adc
mov
cwtl
es
jns
fists
dec
cmp
cmpsb
mov
cmp
sbb
dec
test
sahf
lret
sti
cmp
sahf
mov
pop
jle
pop
xchg
std
inc
inc
data16
movsb
sbb
mov
jae
dec
pop
dec
mov
nop
les
add
xor
and
les
jle
pop
mov
mov
lods
movsb
dec
xor
and
syscall
sbb
push
aad
mov
pop
scas
jno
out
pop
mov
pop
or
or
push
add
pop
lea
clc
pop
mov
xchg
adc
sbb
or
out
pop
sar
or
xchg
mov
in
dec
adc
sbb
rol
jecxz
lret
in
mov
sahf
adc
fdivp
or
out
mov
mov
cmp
ja
push
and
pushf
fucomip
sub
fcompl
inc
cmc
in
ret
jle
jno
cmp
aaa
push
xchg
jo
xor
sub
and
pop
rcl
push
push
jle
call
outsb
or
adc
and
dec
adc
adc
leave
xchg
pop
inc
lea
jbe
shlb
cmp
leave
xchg
movsl
leave
out
stos
fnstenv
and
adc
adcl
xor
jmp
fs
sub
cmpsb
mov
outsb
pushf
add
add
or
or
or
cmp
out
pop
rcll
add
add
sbb
push
stc
clc
xchg
shr
mov
jmp
fnsave
pop
add
cmp
xor
sbb
cmp
add
cmp
daa
mov
into
xor
mov
jmp
mov
lds
pop
push
nop
cmpsb
fcmovu
fnstsw
fdivs
nop
out
xor
xchg
and
xor
pop
fsts
sti
mov
jmp
jne
cltd
lahf
jg
bswap
pushl
dec
enter
repnz
adc
pop
add
jecxz
pop
sub
std
and
mov
test
mov
pop
xchg
and
pop
shr
push
inc
enter
aam
dec
cmp
jno
jns
push
dec
jne
pop
jg
sub
sub
ja
ja
add
sti
pop
adc
xchg
adc
test
aam
pop
cmovl
mov
sti
xor
sbb
popf
xchg
push
inc
ret
jle
xchg
inc
xchg
shlb
mov
and
push
pop
add
fs
mov
lock
mov
aam
addr16
jno
rcrl
cmpsl
and
out
pop
ret
rorb
add
xchg
mov
jecxz
mov
jle
pop
js
jl
inc
jo,pt
inc
mov
push
cwtl
gs
in
sub
addr16
fisttpll
inc
das
inc
repnz
jb
sti
jmp
sbb
into
or
jle
pushf
popa
mov
add
hlt
inc
sbb
ljmp
add
or
in
xchg
arpl
fidivs
cmp
add
xchg
and
adc
in
shlb
clc
pop
out
pop
ret
mov
or
cwtl
mov
mov
and
into
add
sbb
or
arpl
fwait
xchg
fwait
and
xchg
jl
sahf
fcos
test
mov
mov
xor
or
pop
fcoms
decb
pop
pop
add
jbe
rcrb
cmp
out
pop
ret
jmp
sbb
xor
mov
sti
mov
mov
nop
xchg
inc
mov
pop
sbb
xor
dec
mov
sub
sub
mov
cmp
fdivl
bnd
mov
jecxz
lods
xchg
jbe
ss
cmp
lret
push
dec
mov
and
xor
pop
push
push
sarl
jge
push
pop
adc
jno
jo
je
add
in
ja
jmp
pop
repnz
in
xor
add
pop
mov
test
xchg
sbb
pop
les
lret
icebp
arpl
je
fcomps
movsb
cmpsb
pushf
cmpsb
mov
js
arpl
push
push
add
cltd
mov
loope
out
fs
push
shll
gs
in
or
lods
adc
dec
push
mov
mov
loopne
mov
fdivs
mov
inc
xor
adc
cmpsl
sub
rolb
jmp
jp
push
gs
jno
imul
xor
push
or
int3
cmp
scas
sub
cmp
or
sbb
out
pop
les
in
add
inc
insb
outsl
jae
inc
insb
imul
add
test
shr
decl
cwtl
movb
jmp
cmp
outsb
in
mov
mov
push
pusha
cs
inc
cld
testb
sbb
hlt
insl
ja
mov
sbb
mov
iret
into
mov
xor
jo
push
mov
mov
ss
mov
repz
mov
stc
arpl
pop
sbb
cmpsl
lods
xor
rcll
push
in
dec
aad
or
sub
add
dec
bound
hlt
dec
loop
lahf
fucomi
cli
int3
out
xor
sub
and
sbbb
and
jb
inc
cmovae
mov
adcb
loope
test
add
imul
inc
dec
ret
mov
lock
lods
or
mov
pushf
clc
sarb
sbb
push
sub
sub
jo
mov
stos
movsl
xor
and
flds
push
rorl
orl
test
mov
pop
lds
test
xchg
int3
cli
je
mov
jg
push
pop
inc
dec
dec
jne
xchg
mov
hlt
mov
test
jl
jnp
sahf
pop
lahf
sub
add
sbb
add
cvtdq2ps
fldcw
fisubl
xchg
xchg
jmp
mov
cmpsw
mov
mov
adc
test
sub
adc
loop
int3
push
in
fwait
pop
lods
sub
cltd
aaa
insl
xchg
sub
mov
and
xchg
lds
out
pop
stc
pop
sub
pushf
lret
out
movl
mov
push
movw
mov
lea
jmp
cmp
push
in
dec
dec
cltd
xchg
mov
loopne
aam
sub
sbb
add
adc
and
push
loopne
int
xor
out
pop
cmp
cmp
in
sarl
testl
xchg
or
fwait
cmp
mov
jo
mov
or
mov
outsb
pusha
fucomp
jb
mov
xorl
fldenv
fdivrl
or
pop
arpl
cmpsl
jns
gs
dec
ret
push
divl
pmaxsw
mov
dec
push
push
and
xchg
sbb
sbb
or
lret
shr
ret
lods
xor
int3
or
add
mov
mov
jbe
sub
inc
pop
and
mov
add
cwtl
push
in
fidivrl
add
dec
sub
movsl
jb
jmp
outsl
dec
inc
ds
roll
stos
xchg
sahf
cmc
and
push
sub
adc
fstpt
jge
addr16
rcrl
stc
jae
jae
inc
jmp
or
and
jae
push
pusha
pusha
lea
jne
push
lea
js
push
stos
pusha
pushf
push
lea
jmp
jmp
test
cmp
repnz
jmp
shl
call
outsl
sbb
cmp
arpl
mov
popf
or
bound
add
sbb
push
jg
scas
pushf
scas
popf
sub
inc
out
adc
insb
add
xchg
mov
xor
xchg
and
xchg
jge
repnz
xor
jae
insl
mov
mov
or
mov
xorb
add
push
cli
out
pop
enter
inc
adc
and
sub
arpl
pop
pop
imul
jecxz
sub
out
jp
fsubl
test
mov
frstor
add
add
shr
mov
push
in
sbb
lods
sahf
mov
push
xchg
stos
add
cltd
aas
lahf
addr16
sbb
daa
lea
pop
mov
push
ljmp
imul
inc
mov
pop
sub
or
bound
lods
xchg
addr16
imul
and
jl
in
xchg
mov
adc
ficoms
inc
clc
cli
mov
maskmovq
notl
xor
mov
inc
xor
ljmp
scas
mov
int
ret
mov
push
jmp
imul
pop
fisttpl
pop
out
pop
leave
mov
pop
outsl
fucom
mov
movsl
test
sbb
sub
adc
add
mov
mov
lahf
mov
push
jle
les
or
pop
sbb
fidivrs
sub
les
sbb
scas
lea
addr16
xor
mov
adc
cmp
mov
jne
cltd
testl
push
aam
addr16
inc
dec
rorl
outsb
fsubrl
inc
pushf
pop
enter
sub
out
pop
leave
ds
clc
cmpsb
dec
sub
xor
sub
sbb
sbb
aas
xchg
daa
insl
xlat
sbb
jo
subl
dec
pop
stc
mov
xor
jne
shll
sbb
stos
cmp
mov
push
pop
mov
jnp
cmp
mov
pop
cmpl
imul
out
push
dec
jb
nop
dec
mov
pop
in
in
jecxz
jmp
sahf
jg
sub
adc
cli
jo
lock
cmp
aas
lret
pop
les
pop
in
sbb
cmp
add
pop
lret
cli
push
jo
inc
cmp
shrl
in
xchg
xchg
lods
jb
push
jo
push
jecxz
popf
add
or
ror
jb
sbb
mov
xor
push
dec
hlt
scas
insb
test
vmovmskps
inc
data16
inc
fadd
xorb
popf
jp,pn
or
lret
rcr
mov
cmc
mov
mov
adcb
je
inc
inc
orb
lret
lods
dec
pop
icebp
cli
push
inc
shlb
and
fsub
fadd
loopne
xchg
fimull
loopne
fcoms
adc
inc
pinsrw
in
ret
leave
mov
adc
dec
popa
into
xchg
xor
xchg
lahf
xlat
fdivp
add
insb
mov
pop
jno
jmp
sbb
lahf
jnp
jo
subb
movsl
mov
push
dec
adc
out
repz
adc
mov
mov
pushf
push
and
fsubrp
pop
lret
push
repnz
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
xor
jbe
xchg
mov
mov
jne
mov
data16
xor
fsubl
xor
pushf
aaa
and
out
pop
pop
mov
xchg
repz
adc
or
fwait
adc
push
or
and
jns
mov
adc
outsl
xor
mov
pop
mov
xchg
cwtl
push
mov
push
push
cmp
negl
jmp
sub
rcrb
ss
pop
inc
lock
ljmp
pop
push
lods
out
pop
int3
push
mov
jg
fwait
cmp
jne
adc
add
mov
ret
leave
repz
outsb
rolb
push
adc
xchg
outsb
cmp
mov
mov
cltd
aad
mov
mov
popa
lea
nop
lock
popa
out
sub
clc
mov
in
outsl
or
in
mov
adc
mov
xor
pop
flds
lcall
inc
lock
cmpsb
xor
adc
in
or
lea
jmp
pop
push
ja
sahf
fsubr
ror
std
lret
stc
lret
xchg
shl
out
std
push
decl
mov
mov
jg
dec
in
test
fisubl
ja
mov
push
outsb
push
push
cmc
popa
mov
ficoms
dec
rcrb
imul
pusha
loopne
sbb
icebp
push
lcall
adc
or
pop
int
inc
jle
sahf
mov
add
or
push
and
push
dec
je
pop
dec
push
iret
mov
and
xchg
lret
test
mov
xlat
dec
cltd
add
call
xchg
in
outsb
mov
ss
add
pop
arpl
popa
cli
pop
sti
out
cmc
addr16
add
jne
add
jns
dec
imulb
test
xchg
sub
or
pop
lcall
out
pop
into
movsb
pop
aas
mull
cli
arpl
mov
lahf
mov
test
fwait
aam
testl
inc
arpl
pop
mov
inc
jbe
fstps
cmp
adc
sub
adc
out
fstps
int3
mov
mov
mov
int3
dec
adcb
mov
ficoms
js
inc
jle
mov
mov
movsb
xor
smsw
xorl
flds
imul
lds
dec
lds
pop
into
jno
lahf
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
xor
jle
cwtl
clc
xchg
lods
xchg
movsb
cmpsb
mov
sub
insb
fsts
in
mov
adc
inc
mov
cmp
mov
ja
add
mov
dec
movsl
int3
outsb
pop
insl
scas
sbb
sub
test
dec
pop
pop
xchg
mov
xchg
jae
inc
or
mov
cmc
or
jb
mov
dec
mov
xor
fstps
test
insb
clc
pop
into
hlt
into
ficoml
cwtl
scas
pop
mov
cmp
or
movl
lods
aaa
xchg
lret
popa
filds
inc
out
pop
iret
outsl
mov
mov
mov
addb
mov
test
jne
adc
js
xorl
popf
ret
andl
pop
push
sub
mov
or
js
xor
movsb
sub
js
push
jl
cmpb
mov
les
add
xchg
fmuls
int3
adc
lock
cmc
mov
mov
inc
pop
loope
insl
fsubrl
jp
and
jnp
jae
jg
pop
leave
lahf
adc
and
shr
mov
insl
mov
movsl
fs
dec
push
pop
jg
pop
cmp
push
jno
lods
out
mov
fwait
jg
cmp
cmp
out
push
pop
leave
pop
outsl
aad
std
jge
addr16
push
jecxz
mov
cmpsl
mov
add
xor
or
pop
xchg
nop
daa
lds
lods
sub
mov
into
add
fildl
xchg
inc
add
push
in
sub
jl
cmp
into
mov
pushf
es
xchg
fisubs
out
sbb
pushf
nop
cmp
dec
add
add
pop
test
pop
rcll
push
dec
or
pop
outsb
inc
jp
jle
out
cmp
out
sbb
jecxz
stc
push
cmp
and
imul
ret
jmp
pop
and
int
jge
fisubl
lods
dec
jp
fstl
mov
xchg
test
mov
cs
inc
repnz
fidivrs
movsb
inc
mov
push
mov
dec
out
repnz
imul
pop
rcrl
fmulp
push
lea
jne
clc
mov
pusha
add
call
pushf
jmp
lahf
shr
mov
dec
call
pushf
lea
je
push
call
sbb
and
sub
adc
pop
push
add
cmp
adc
jecxz
jge
sahf
movsb
push
or
stos
jge
jns
pop
fimull
mov
mov
and
add
pusha
inc
sbb
adc
or
lret
pop
test
jns
jae
jge
mov
jl
mov
and
cmpb
and
push
enter
pop
jecxz
pop
fisttps
mov
sub
xlat
decb
sub
jl
pop
mov
shrb
outsb
in
aam
in
lret
and
out
pop
sarb
scas
xlat
sar
insl
jg
cmpsl
xchg
scas
lods
scas
mov
dec
dec
xchg
movsb
sub
mov
dec
imul
sar
dec
lret
xchg
sbb
inc
sub
jbe
inc
cs
in
or
mov
jecxz
xchg
rorl
cmp
mov
fstps
jg
fimull
popl
bound
into
xor
ds
pop
cmp
into
cmp
adc
sub
clc
out
pop
rol
xor
in
jmp
test
and
test
out
fwait
test
mov
test
loop
loop
ljmp
mov
lea
jge
nop
inc
nop
lcall
test
or
push
mov
xchg
outsb
cmp
fistps
hlt
imul
xchg
into
out
ficompl
sbb
sub
push
mull
or
mov
leave
bound
jno
jge
lcall
inc
pop
sbb
push
imull
fnstcw
inc
loope
aad
roll
aad
pop
sar
std
jmp
xor
imul
out
aam
fsubl
insb
ficoml
jne
ds
jns
insl
xlat
cwtl
mov
and
notb
and
and
js
pop
scas
mov
imul
negl
fnop
lret
fisubrs
jne
jne
imul
push
pop
or
mov
pop
lea
call
call
add
mov
lods
fnsave
adc
xor
sbb
push
xor
sbb
mov
xchg
mov
inc
xchg
loopne
sbb
mov
push
aam
sete
sahf
and
rorb
cmp
xor
push
repnz
dec
rorl
loope
jg
jecxz
lret
jmp
aaa
sub
add
adc
xor
push
sub
mov
push
mov
scas
enter
push
testb
divl
add
cli
cmp
add
cltd
icebp
std
dec
stc
mov
pushf
mov
push
jmp
cmpsl
mov
dec
mov
jl
clc
xchg
sbb
data16
pop
insl
les
mov
jge
pop
lret
jge
movsl
and
arpl
rorl
xchg
ret
inc
not
pusha
inc
push
add
setns
shl
xchg
lea
jmp
std
mov
cmp
cwtl
loop
iret
std
out
std
cmp
and
sub
fldt
je
lods
mov
adc
mov
xchg
icebp
pusha
mov
add
jno
outsl
sub
sbb
adc
movsb
inc
in
fdiv
rorl
jo
imul
into
inc
sbb
loope
imul
pop
add
xchg
and
lock
fmull
push
lcall
scas
pop
jo
push
cmp
pop
aad
mov
es
xor
xchg
sbbb
mov
nop
mov
push
mov
in
add
add
cli
cmp
sti
jae
dec
pushf
bswap
lcall
repz
shr
mov
push
in
and
test
lock
pop
cmp
pop
lret
fwait
movsl
movsl
mov
jnp
adc
cli
jge
lds
sbb
lcall
jbe
dec
popa
jge
dec
iret
or
inc
jb
or
inc
hlt
lock
fsubl
pop
fsubr
pop
out
and
outsl
sbb
scas
mov
out
rol
hlt
and
mov
lahf
insb
fwait
mov
daa
rol
push
pop
jp
les
imul
xchg
sbbl
mov
lods
call
xor
xor
and
pop
mov
sbb
aas
xor
cmp
fiaddl
ja
or
jl
and
mov
sti
call
cmpsb
and
lcall
adc
or
push
out
pop
pusha
cwtl
mov
jmp
cmp
pusha
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
clc
sub
pushf
pushf
lea
call
jmp
addr16
inc
out
mov
sub
and
xor
or
xchg
sub
test
push
sub
nop
mov
inc
push
pop
enter
xchg
loopne
fwait
or
or
fidivrl
cld
jp
push
pop
gs
sub
notl
subb
push
push
pop
enter
adc
les
sbb
add
pop
lds
outsb
lods
outsl
popf
cmp
adc
cmp
and
out
pop
xlat
pop
sahf
sub
fpatan
test
adcl
fistpl
lock
pop
fisttps
test
cltd
pop
xchg
hlt
fucomi
inc
divl
jns
xor
test
push
mov
mov
cmp
push
pop
cmpsb
mov
roll
xor
cld
mov
lcall
test
push
or
js
adc
mov
test
sbb
dec
int3
pop
call
ficomps
xchg
sub
pop
fdivr
add
add
pushf
mov
pushf
push
pushf
lea
jmp
sbb
sbb
sbb
jnp
imul
cmpsl
lods
fwait
xchg
cmp
inc
mov
lret
std
dec
mov
dec
movaps
rcrl
inc
clc
ret
push
out
push
cmpsb
or
or
and
loope
pop
addr16
xchg
imul
jmp
pop
sahf
push
inc
rolb
out
pop
fsubs
mov
cmpsl
add
cld
sbb
adcl
jnp
pop
leave
jnp
jl
hlt
xor
iret
xor
mov
rcrb
xchg
sbb
call
mov
es
mov
bsf
aaa
jnp
sub
jbe
sahf
in
dec
clc
test
pop
xchg
xchg
push
fildll
pop
fildl
testb
cwtl
push
rcr
cmp
dec
mov
mov
insb
insb
cmp
sbb
pop
mov
mov
pop
mov
sbb
sub
mov
mov
mov
out
pop
fprem
add
rol
pushl
lea
call
call
mov
push
bt
pusha
movw
repnz
pushf
lea
jne
call
pushl
popl
push
cmp
jmp
inc
pop
add
sub
cltd
stos
test
les
mov
jge
daa
push
jbe
dec
pusha
shrb
mov
fstpl
adc
mov
fcmovne
xchg
in
fldt
mov
aad
and
insl
dec
mov
xchg
insb
or
test
and
add
arpl
dec
std
ja
das
jmp
inc
imul
add
andb
lods
lahf
lods
mov
push
dec
outsl
mov
and
adc
xor
and
imul
test
pop
fisttpll
orl
mov
mov
jmp
mov
xor
add
and
push
pop
cmp
loop
iret
push
cmp
int3
jbe
mov
call
outsb
pop
mov
jb
shll
pop
xor
mov
mov
shll
inc
decl
jge
jns
pop
call
jne
pop
fiaddl
mov
mov
stc
cmpb
call
dec
jl
dec
fcmovu
vmread
rorb
sbb
or
or
lods
push
dec
mov
sub
sbb
pop
rcl
je
xor
shll
jae
mov
dec
dec
jns
ja
xor
lods
das
subl
dec
addb
inc
insb
inc
push
fists
das
das
sahf
jbe
mov
rcr
dec
fdivs
out
pop
fcmovnb
ss
inc
and
nop
test
and
push
lea
jmp
push
pushf
jmp
rol
out
jb
neg
out
mov
movsl
mov
test
ret
loope
adc
mov
lock
xor
xor
inc
les
jno
js
out
mov
mov
xchg
mov
jae
xchg
lret
cmp
jle
mov
out
jns
leave
enter
or
inc
pop
mov
popa
je
cli
mov
loop
and
push
flds
shlb
movb
fs
dec
outsb
lods
out
pop
fistl
mov
inc
push
pop
fstps
stc
in
out
out
cmc
ret
icebp
jmp
div
jns
mov
mov
fcoms
aam
fwait
push
push
mov
and
jb
add
aad
jp,pn
aad
dec
je
xchg
mov
dec
sub
sti
jno
mov
outsb
xor
xor
out
lods
sub
push
jns,pt
icebp
jnp
add
fstps
push
xor
add
push
inc
repnz
sbb
mov
jb
jb
fdivrs
cmpsb
or
and
lret
scas
movsb
sahf
adc
scas
xorl
clc
lock
mov
loope
loop
sub
mov
push
jle
aam
adc
cmp
pop
mov
xor
je
repnz
cs
in
jl
dec
add
or
push
add
jge
jg
aas
mov
jno
inc
push
dec
int3
dec
xor
sahf
and
add
out
pop
fstpl
call
mov
jg
test
add
das
or
sub
out
sar
inc
idivl
icebp
jns
out
fucomi
or
fcom
jne
adc
lahf
mov
or
dec
jecxz
push
scas
add
pop
xchg
inc
cmp
inc
movsb
sub
mov
andl
add
inc
jbe
push
or
add
or
fcompl
xor
iret
cmc
fistl
loop
loopne
xchg
andl
mov
jb
mov
shlb
and
xchg
into
stos
sub
mov
jl
popa
arpl
lcall
pop
dec
sqrtps
in
sbb
cltd
not
mov
testb
shll
das
mov
jns
outsl
leave
cld
push
mov
in
imul
mov
popf
adc
fldl
movsb
pushf
mov
mov
pusha
pushl
ret
pop
and
les
sub
ljmp
xorb
fidivrl
dec
rcrb
sti
enter
push
sahf
mov
rol
js
mov
cs
sarl
sub
jmp
or
jge
and
lcall
pop
mov
cmpsb
add
mov
sahf
loop
mov
pop
arpl
mov
mov
pop
stos
test
jne
into
dec
enter
xor
xor
add
pop
fimuls
xchg
lods
test
mov
stc
test
push
lea
je
test
cmp
add
test
cmp
jmp
lds
bound
repnz
int3
ljmp
sbb
test
push
test
clc
divl
stos
in
lret
popa
in
jnp
jg
push
decl
enter
pop
loop
fwait
mov
in
push
inc
cmc
negb
into
shr
fisubrs
test
shlb
lret
inc
jecxz
daa
add
sar
pop
dec
or
popa
cmpsl
or
sub
insb
mov
in
in
jle
pop
sbb
and
les
pop
cwtl
pop
fsubrl
jb
jecxz
or
ret
call
les
pop
xlat
pop
aad
fnstcw
std
out
pop
dec
add
ds
cli
repnz
sbb
push
add
push
ss
xchg
fdivrl
roll
push
sar
loopne
jns
jne
jne
push
les
mov
test
xchg
rclb
cwtl
and
lds
ror
mov
add
fwait
cmp
sbb
dec
fistpl
mov
cmp
ja
jae
aaa
or
jp
out
je
jg
sbb
xchg
enter
xchg
aaa
add
push
call
xor
push
mov
mov
rolb
adc
pushf
out
pop
loopne
push
inc
xchg
popf
xchg
imul
sarl
mov
push
addr16
jg
xor
sub
jmp
or
mov
shll
and
js
lods
mov
sbb
inc
dec
sub
add
popa
cmova
or
out
mov
aas
js
and
lret
insb
adc
mov
xchg
or
rcr
inc
fimuls
mov
dec
lret
pop
out
lock
jae
flds
ffreep
dec
or
pushl
pop
pushl
push
out
pop
loopne
fwait
test
je
sbb
sbb
jmp
call
sub
testl
mov
push
dec
inc
push
inc
insb
ret
lea
cmp
dec
mov
xor
pop
divb
in
sub
cmp
cld
inc
test
ret
gs
or
sub
and
dec
add
cmpsb
inc
je
jbe
mov
inc
sub
push
ljmp
and
push
xchg
pop
mov
sbb
out
sbb
jnp
sti
dec
pop
popa
mov
or
or
xchg
xor
ljmp
mov
mov
aaa
popa
lret
out
pop
loope
push
xor
incl
add
popa
insb
inc
jb
add
xlat
fdivr
aam
xchg
fwait
xchg
mov
popa
inc
jge
imul
std
mov
xchg
cmp
rcrl
mov
cmp
push
ud1
add
setns
xor
mov
and
es
sub
repz
add
stos
das
movl
adc
lods
call
mov
jecxz
insb
mov
in
lret
mov
adc
mov
inc
shll
jle
fcmovne
inc
stc
enter
inc
mov
fmuls
popa
xlat
gs
insl
xlat
jns
pop
fistl
out
pop
loop
and
lret
mov
js
adc
xor
cld
ljmp
enter
aaa
ds
mov
jnp
pop
aaa
bound
cltd
mov
aam
leave
shr
jmp
lahf
mov
outsl
add
add
or
cmpsb
sub
jmp
outsl
roll
push
pop
lret
dec
sbb
mov
in
sub
fwait
xchg
test
mov
jmp
fwait
pop
cmp
adc
mov
outsl
leave
addr16
mov
ljmp
jno
jge
push
jae
cmp
loop
xchg
add
xor
orb
jge
jae
jae
dec
push
addr16
or
pop
pop
mov
jne
mov
dec
mov
scas
scas
jns
jmp
push
and
push
adc
rcrl
pop
dec
sbb
fidivl
sahf
cmp
pop
lret
xor
jns
xlat
push
mov
jae
fstps
pop
dec
or
leave
aad
icebp
fs
pop
push
in
mov
jns
and
add
stc
aad
add
ljmp
push
push
int3
xchg
and
adc
add
sub
into
rep
movzbw
movzbw
mov
pushf
pushl
push
lea
jmp
pusha
push
lea
jne
aaa
neg
sub
setbe
mov
cmp
clc
add
inc
mov
push
clc
test
lea
jl
pusha
movl
lea
je
stc
clc
push
jmp
in
ror
or
lods
in
mov
movsl
xchg
std
mov
mov
test
jb
jle
xchg
add
pop
int3
mov
sub
push
shll
add
incb
les
int3
fstpl
cs
cmp
mov
sbb
push
repnz
mov
lods
and
push
stos
and
add
sbb
divb
pop
jg
jb
bound
mov
jno
inc
arpl
imul
stos
in
sbb
add
xor
flds
test
int
lea
sbb
mov
fbld
jbe
jl
das
test
sbb
arpl
xchg
std
cmp
mov
inc
shrb
fdivl
mov
or
add
pop
sbb
dec
popf
lcall
aad
ret
jns
mov
addr16
sar
cmp
jbe
inc
cld
outsb
aam
or
xor
pop
in
cmp
aad
jecxz
hlt
mov
inc
push
adc
or
pop
sbb
and
cmp
add
jne
sti
js
dec
dec
sbb
stos
sub
imul
loopne
sbb
dec
push
or
test
gs
or
aad
dec
mov
sbb
in
dec
jmp
aam
data16
mov
ror
icebp
pop
or
rorb
add
inc
xlat
insl
fildl
out
hlt
push
adc
inc
sarl
sub
xchg
fcmovnbe
jbe
xor
data16
push
lock
out
pop
in
nop
mov
sbb
sub
jle
dec
xchg
push
push
divl
xchg
mov
lcall
dec
roll
sbb
iret
popa
jne
leave
dec
in
fsts
cmp
dec
pop
in
lods
add
test
pop
fnstcw
jae
xor
outsl
sub
lods
dec
jnp
aaa
xor
movsb
daa
push
dec
lea
xchg
scas
mov
xchg
movsb
bound
scas
jle
mul
inc
pinsrw
mov
arpl
sbb
cmp
jae
mov
inc
int
or
loop
add
in
mov
mov
pop
adc
addb
add
jns
fistps
out
push
arpl
dec
divl
insl
and
fidivs
test
pushf
jo
push
mov
dec
fldenv
imul
mov
push
loop
outsl
lret
orb
push
jbe
into
je
mov
loope
clc
dec
into
out
adc
lahf
mov
popa
call
sub
xor
mov
xlat
mov
inc
pop
mov
mov
jbe
fwait
lods
xor
faddl
in
rcrl
mov
testl
cmp
stos
add
shrb
fmuls
push
cld
out
pop
out
xor
call
popa
adc
add
mov
gs
push
aaa
imul
cmp
add
movsl
jecxz
aas
jo
mov
dec
push
xchg
clc
mov
orb
jns
inc
ss
push
cwtl
sahf
xchg
stos
dec
lret
out
imul
mov
push
gs
es
mov
data16
inc
pop
repz
aam
dec
push
in
push
xchg
mov
subb
add
cmp
pop
out
mov
test
cmp
movl
pushf
lea
je
pushf
movb
lea
jmp
repnz
sbb
mov
push
jp
inc
pop
bound
push
push
jle
push
pop
stc
test
add
adc
sbb
jb
das
cmp
jb
add
push
and
push
pop
push
xchg
hlt
pushf
es
or
lret
add
mov
hlt
les
decl
mov
push
inc
in
add
loopne
xchg
cmp
xchg
xlat
fdiv
dec
ret
leave
sbb
cwtl
or
push
cwtl
dec
mov
out
pop
call
jnp
orl
ret
in
icebp
sti
jmp
iret
cltd
adc
int
adc
aam
in
lock
in
imul
cli
cmp
pop
hlt
push
pop
setg
xchg
sub
roll
mov
cmpsb
lcall
popl
xor
push
nop
adc
push
mov
sbb
stos
call
aas
xlat
or
in
lea
mov
cmpsl
adc
mov
rorb
sbb
pop
ljmp
sbb
shrb
int3
push
push
adc
inc
insl
jl
push
xchg
leave
mov
or
add
cmc
inc
inc
cld
jae
cs
mov
sti
aas
mov
and
cmc
lahf
shll
xchg
sub
cmpsl
add
cmpl
pop
jmp
xor
pusha
call
outsl
insb
gs
cs
insb
add
push
dec
inc
dec
xor
cs
insb
add
add
mov
jecxz
mov
adcb
sub
jmp
jg
loope
xchg
inc
insl
sti
leave
test
ficoml
pop
clc
add
xor
es
jl
xchg
inc
test
jbe
bound
mov
repz
add
or
in
xchg
lods
lods
mov
xor
or
add
ss
subb
push
add
mov
scas
sub
mov
adc
pop
shll
pop
ljmp
ret
add
mov
or
mov
lea
ja
jmp
repz
cli
int3
mov
mov
mov
mov
push
mov
ret
mov
xchg
fmull
test
sahf
and
dec
mov
and
jmp
jae
xchg
mov
sub
inc
and
cmp
cwtl
rcrb
stos
icebp
xlat
mov
lods
divb
cmp
leave
dec
repnz
movlps
iret
inc
sarb
adc
cmp
adc
out
pop
ljmp
and
xchg
stos
jmp
pusha
bt
imul
call
repnz
adc
add
inc
inc
jl
push
bound
in
xchg
cmp
clc
push
cmpsl
cli
out
test
and
aaa
mov
popf
cs
add
jno
arpl
jmp
cwtl
int3
jp
push
and
dec
into
or
lock
popa
xchg
inc
jo
cli
sahf
push
insl
stos
and
pop
mov
sub
shrl
inc
jb
data16
pop
enter
fsubl
ss
pop
jmp
and
cmp
sub
in
lea
fwait
subl
cld
mov
mov
rcrl
clc
inc
jae
dec
jmp
hlt
data16
int
add
cmp
mov
pop
shlb
movsb
mov
mov
fsts
mov
mov
push
pop
rcrl
push
out
add
sub
fwait
mov
fst
lds
mov
popf
lahf
xor
push
or
cmp
enter
xchg
shlb
pusha
ss
pop
mov
pop
fs
add
or
sub
adc
pop
in
shlb
jno
dec
es
mov
mov
inc
mov
iret
imul
icebp
inc
or
lahf
lods
gs
les
mul
pop
out
push
sti
lods
adc
xchg
mov
int3
pop
xchg
push
jge
xchg
adc
jl
js
inc
loop
pop
in
adc
call
dec
cmc
cmc
mov
test
test
add
clc
test
jmp
mov
popf
mov
jge
lret
aam
hlt
call
xchg
sub
rcrl
push
fs
incl
push
hlt
inc
inc
lds
mov
imul
arpl
push
mov
repnz
push
nop
sahf
filds
xor
mov
inc
pop
adc
xchg
imul
fbstp
fs
clc
adc
out
into
je
dec
fisubrs
sub
mov
push
pusha
stos
out
xlat
ror
clc
push
add
rcrl
xchg
push
and
push
push
push
mov
xor
adc
cmpsb
mov
outsl
jge
outsl
out
dec
jmp
mov
outsb
shll
adc
sahf
dec
and
mov
imul
movsb
clc
bound
cli
pop
dec
fsts
push
cmp
js
fistpll
dec
push
aad
std
imul
sbb
lahf
aad
adc
adc
out
ljmp
add
pop
in
push
lods
lahf
pushf
bt
imul
cmp
add
lea
push
pushl
call
shr
fistl
or
pop
pop
jns
pop
arpl
imul
sti
ret
xor
out
pop
shlb
dec
gs
mov
cli
or
and
cmp
cmp
jmp
notl
xchg
rorb
add
sub
out
out
pop
out
adc
xor
mov
insl
inc
push
addr16
jns
jns
lods
lahf
inc
rcll
mov
xchg
lods
adc
cmp
leave
inc
out
adc
jle
xor
insl
lret
jbe
andb
xor
into
stc
imul
xchg
ljmp
jg
stos
mov
xchg
fcomps
or
aam
aam
outsb
inc
dec
and
mov
mov
rcll
mov
adc
sub
xchg
pop
sub
scas
jmp
arpl
ja
pop
out
aas
mov
jmp
push
push
xor
xor
fs
insb
add
sbb
call
pushf
pushf
imul
bt
cmp
add
pushl
pushl
movb
pushf
lea
jmp
mov
pushf
pushl
lea
jmp
push
pop
and
lcall
jmp
fucomip
jmp
cmp
nop
mov
mov
stos
test
xor
dec
in
mov
cmp
nop
cltd
add
sub
push
push
mov
and
mov
inc
or
add
mov
nop
insb
gs
fs
add
cmpsl
mov
mov
js
stc
in
inc
inc
aad
mov
xor
scas
roll
lock
sub
jle
inc
hlt
inc
add
mov
cmp
jmp
pusha
movb
mov
lea
pushf
lea
call
pushf
pusha
call
mov
sbbb
or
push
sbb
sub
and
fsub
in
loopne
call
lds
add
cmpsl
adc
xchg
adc
scas
cmp
jno
outsb
in
outsb
jae
mov
or
ss
inc
or
push
std
jae
mov
jnp
and
stos
negl
cmpsl
nop
fsubl
mov
fisttpll
jecxz
xchg
adc
mov
lret
pop
lcall
pushf
out
pop
lock
mov
jne
cli
arpl
add
jl
mov
mov
cmc
pop
or
xchg
add
push
and
test
cmp
scas
addl
ja
int
cltd
adc
rcrl
data16
cwtl
cmc
sub
out
jno
test
clc
cmp
insb
add
stos
popf
leave
hlt
push
fnstsw
push
repnz
addr16
cli
je
xchg
pop
scas
cli
rclb
arpl
aad
fldenv
scas
jns
xor
pop
icebp
lahf
pop
outsb
xchg
popf
jecxz
jnp
fsub
sub
pop
dec
push
inc
pushw
dec
dec
bound
mov
movsb
adc
mov
std
jmp
ds
mov
mov
lods
outsb
jle
adcb
add
notb
jp
mov
and
outsb
or
mov
aaa
not
loope
sbb
push
pop
aad
aam
rcr
gs
leave
jecxz
push
negl
sub
je
or
sbb
or
push
cli
popf
lea
call
jmp
add
movb
mov
lea
jmp
cmpsl
xchg
nop
mov
jae
jns
pop
push
dec
xchg
mov
adc
les
add
jge
sub
push
jl
push
adc
inc
mov
mov
adcb
jg
stos
out
jecxz
hlt
insb
cmp
faddl
or
sub
nop
sub
or
popf
jp
sub
call
mov
and
pop
repnz
sub
incl
add
xchg
sbb
jae
aas
sub
and
xlat
fst
loope
jno
mov
insb
out
arpl
cmp
or
cmc
fcmovbe
ja
lcall
or
xchg
stos
sub
push
cmp
mov
mov
rolb
insb
push
push
mov
xchg
shl
out
jns
xchg
pop
xchg
sub
out
pop
repnz
mov
add
inc
js
je
jb
arpl
jae
pop
xor
xor
or
mov
mov
xchg
test
gs
popa
imul
sub
mov
mov
mov
cli
je
xor
jmp
pop
lahf
adc
addr16
jae
pop
cmp
rolb
shlb
jae
and
cwtl
mov
xorb
dec
push
repz
and
mov
divb
mov
or
data16
pop
repz
sub
or
xchg
and
adc
xor
jmp
cld
xlat
jl
or
cmp
ss
fsubr
cwtl
fdivp
fcmovb
ljmp
inc
mov
fisubs
or
aaa
sahf
or
dec
inc
lcall
xchg
popf
xchg
adc
mov
or
mov
in
ret
mov
sub
push
mov
dec
ljmp
xchg
sub
lret
or
pop
repz
scas
mov
mov
sahf
push
add
pusha
test
sub
clc
test
stc
cmp
repnz
jmp
xor
ds
testb
mov
mov
test
fstl
xchg
bound
cmp
aam
int
andl
call
sbb
lods
test
mov
xchg
popf
stos
jno
daa
aaa
jnp
inc
es
sbb
test
sbb
sbb
movsb
xor
xlat
push
stc
jg
mov
cmp
test
mov
lahf
xchg
mov
rep
cwtl
sbb
add
in
inc
mov
clc
dec
in
inc
out
pop
hlt
dec
test
mov
pusha
pop
movsbw
mov
pushl
pushl
push
pushl
ret
pop
xor
pop
sahf
fcompl
or
or
xor
xlat
push
xlat
nop
push
pop
fs
sbb
int3
adcl
mov
jns
inc
in
mov
adc
inc
dec
lahf
les
xchg
xchg
and
dec
inc
lcall
sarl
clc
push
and
jmp
scas
cmp
sbb
ficompl
pop
ds
mov
int
popf
lock
ret
dec
pushl
test
mov
test
pop
cmc
shll
add
lea
jne
shl
bsr
mov
clc
add
cmc
call
sub
and
bound
cmpsb
popf
jnp
pop
jno
cmp
dec
loope
or
addr16
fildll
shlb
icebp
pop
out
jnp
jge
add
out
aas
dec
sahf
test
aad
cmpl
clc
pop
loop
cld
pop
gs
fadd
cmc
mov
leave
fnstsw
scas
mov
dec
shrb
sbb
push
mov
mov
and
mov
jmp
pop
push
mov
sub
lods
pop
test
daa
jns
jge
call
pop
idivb
inc
pushf
clc
ror
call
add
inc
jb
popa
je
push
outsb
add
imul
das
dec
push
lea
popf
cmpsl
mov
push
lea
sahf
sbb
stos
adc
inc
imul
sub
in
push
cmpb
mov
mov
mov
push
jp
insl
std
inc
sub
fmulp
call
mov
jbe
shlb
push
jmp
push
outsb
rcrb
fsubs
mov
sbb
pop
imulb
popf
cmc
inc
dec
dec
insb
adc
jo
js
cmp
inc
push
dec
in
jp
xchg
adc
rol
ss
mov
adc
int
adc
jbe
xor
shrb
adc
in
push
inc
and
sti
das
cmp
cli
xchg
lea
stos
popf
add
or
mov
pop
test
lahf
loope
inc
shrl
insl
ret
inc
out
leave
setge
out
pop
negl
cmp
ret
lock
pop
inc
push
dec
inc
fs
fs
dec
jb
xchg
add
jmp
mov
repz
je
push
pop
fwait
adc
adc
cwtl
mov
inc
hlt
ret
scas
icebp
stos
jns
adc
and
cmp
ss
insb
xchg
or
and
fsubl
cwtl
je
es
les
ja
push
jle
jb
jle
es
pop
idivl
ror
fs
call
jmp
dec
pop
add
aam
push
mov
mov
lock
fcomp
sbb
sbb
and
adc
icebp
and
jp
sub
sub
movl
inc
adc
popf
inc
insb
imulb
push
mov
push
dec
and
mov
imulb
aad
pop
cli
pop
mov
clc
pop
mov
bnd
call
out
or
pop
idivb
scas
js
das
lcall
pop
sbb
insl
int
xchg
add
dec
xor
lcall
sub
or
aam
lock
aam
call
clc
into
push
insl
pushf
pushf
lea
je
shrd
setge
add
dec
shl
adc
sub
shr
movzbw
add
sar
shr
rcr
mov
call
lret
cltd
or
push
dec
jmp
cld
repnz
cld
imul
mulb
dec
cmp
xor
lds
xor
mov
adc
int
in
push
adc
xchg
popa
xlat
lock
and
mov
lock
mov
dec
lret
es
cmc
loope
xorl
outsl
mov
repz
popa
jmp
out
out
pop
stc
mov
outsb
test
ds
xor
lds
add
daa
and
fwait
push
or
jnp
mov
ja
sar
aam
jle
mov
ljmp
push
adc
out
mov
xchg
push
mov
sarl
and
daa
in
inc
cli
jg
mov
push
inc
and
or
xchg
js
pop
dec
ret
cltd
jo
jmp
mov
out
out
lret
dec
fwait
pop
sti
out
pop
stc
sub
testb
pop
pop
sbb
push
je
mov
mov
mov
outsl
and
repnz
test
sbb
imul
shlb
daa
enter
call
cmpsl
adc
and
cltd
fucom
in
fistpl
scas
call
mov
bound
js
addr16
or
push
or
out
aas
mov
mov
lret
inc
pop
cmp
mov
inc
loop
es
push
test
test
mov
test
sub
cli
mov
aaa
sbb
and
push
dec
popa
out
subb
mov
mov
cmpsb
mov
mov
push
and
mov
xor
test
dec
aad
sbb
xchg
lahf
les
cmp
cwtl
mov
loopne
stos
pop
mov
jb
xor
cli
jge
jge
lods
dec
nop
mov
and
daa
pop
push
and
add
sub
sbb
stos
add
xchg
add
pop
cli
or
add
movb
lea
ja
push
movb
pushl
imul
push
clc
stc
push
add
push
pusha
lea
jmp
clc
repnz
pusha
mov
mov
movl
lea
jne
adc
mov
bt
stc
btc
add
sub
push
stc
movsbw
movsbw
lea
push
bt
clc
sub
test
pushl
popl
pusha
cmp
pusha
lea
ja
rcl
rcr
call
aam
int
jns
adc
std
jns
push
push
mov
cwtl
mov
dec
push
out
adc
mov
clc
in
push
add
add
adc
test
insl
mov
jbe
movsb
adc
xor
inc
movsb
sbb
dec
sbbb
or
mov
jp
jle
push
rcrb
push
test
pop
sti
dec
lods
mov
ret
jg
lea
popf
fcmovb
in
shl
cld
lret
cld
pop
hlt
mov
dec
jnp
inc
cmp
mov
divl
or
push
frstor
push
xor
adc
or
test
repz
aam
mov
add
scas
mov
jno
imul
rol
popl
xor
sbb
xor
dec
inc
sub
icebp
repz
dec
stc
ja
imul
out
pop
cld
cltd
addr16
rolb
cmpb
pusha
lea
jne
dec
sub
mov
bswap
mov
call
dec
xchg
mov
gs
push
push
add
jnp
insl
fistpll
mov
inc
or
cmp
das
inc
and
js
xchg
adc
mov
add
sub
sbb
lcall
and
sbb
test
xchg
lea
sbb
mov
cltd
int3
pop
jmp
mov
xlat
inc
repnz
dec
inc
repnz
and
mov
sbb
sbb
es
push
jge
mov
int3
stos
adc
mov
inc
sbb
and
sub
pop
pusha
cmp
daa
mov
loop
imul
jg
push
jno
mov
xor
arpl
es
movsb
repnz
dec
pop
mov
xlat
out
cli
mov
js
mov
mov
sbb
test
je
sub
pop
stos
std
mov
mov
icebp
fcomps
cld
in
adc
dec
insl
lret
popa
dec
fstpl
lahf
roll
sub
or
push
and
ret
jle
cli
ret
inc
mov
movsb
fadd
push
in
jae
jecxz
xor
inc
adc
scas
out
add
cmpsl
mov
inc
and
popa
hlt
fdiv
insb
repnz
cld
cmp
mov
push
test
sub
and
pop
lcall
mov
or
aas
or
or
xor
and
sbb
dec
sarb
stos
fldenv
jle
xchg
adc
out
pop
movsb
push
pop
fldcw
dec
pop
imulb
out
into
nop
hlt
pop
loopne
sbb
dec
out
movsb
mov
sub
inc
cltd
fdivp
in
adc
adc
divb
in
iret
dec
pop
setns
test
jb
ror
test
ljmp
jb
jp
push
and
push
gs
into
int3
jb
push
enter
rorb
out
pop
decb
in
push
pop
jmp
movb
pusha
lea
jne
movzbw
movb
not
push
movsbw
lea
pusha
movl
pusha
jmp
je
insl
push
rorl
xor
jmp
add
sbb
sbb
lcall
cmp
jl
ficoms
xchg
inc
out
inc
testb
hlt
cmc
in
xor
sub
inc
xchg
aad
xlat
arpl
divl
push
cld
sub
mov
pop
mov
loopne
idivl
aam
push
arpl
or
push
mov
inc
outsb
aas
lods
lods
mov
mov
ja
mov
pop
fwait
mov
sub
arpl
push
lds
dec
aad
std
out
pop
jmp
fucomi
mov
add
call
lea
cpuid
clc
cmp
pusha
sub
cmp
cmpl
pusha
movb
mov
pushf
push
mov
push
call
jmp
shr
add
adc
lea
call
pusha
cmc
pushf
sub
jmp
dec
aaa
daa
mov
bt
bswap
cmc
stc
sub
call
pushf
mov
pushf
popl
push
call
jmp
dec
and
add
ror
add
btc
pushl
lea
sub
sets
clc
xor
test
not
pushf
xor
bsr
add
ror
xor
movzbl
call
rcr
call
das
movsbw
mov
dec
mov
bt
pushf
push
sub
cmc
clc
shr
pushf
mov
jmp
test
push
xor
jmp
movw
mov
pushf
pushf
pushf
movl
lea
jmp
push
cmc
mov
movzbw
btc
rcl
ror
shld
rol
jmp
push
pushf
pushf
mov
push
pushl
mov
lea
jmp
call
sub
mov
mov
mov
pusha
lea
jmp
shr
bsf
setne
mov
cmc
add
pushf
movb
pushf
mov
push
lea
ja
mov
pushf
mov
lea
jmp
not
ror
movzbl
mov
movsbw
rcr
ror
lea
push
rcr
clc
lea
push
xchg
bswap
clc
push
movsbw
pushl
btr
not
push
not
mov
pusha
ror
lea
adc
mov
bt
sub
cmc
jmp
jmp
call
jmp
jmp
jmp
mov
bt
btr
mov
cmc
bt
mov
call
bts
clc
bts
mov
rcr
ror
xchg
sar
sub
call
jmp
shld
rcl
mov
call
movb
mov
mov
mov
lea
jmp
mov
rcl
bt
rcl
pusha
mov
rol
stc
mov
bts
lea
push
bts
push
xchg
jmp
neg
bswap
lea
mov
pusha
pushf
pushf
lea
jmp
call
push
pushl
call
movb
push
dec
call
jmp
pushf
call
sets
mov
or
sub
mov
clc
test
call
bts
setno
pop
stc
pop
sar
bsf
pop
aam
aam
and
pop
cwtl
cltd
bsf
pop
pusha
inc
lea
bt
mov
call
bsf
xor
mov
rcr
neg
inc
test
mov
cmp
jmp
rcl
bt
call
lea
jne
push
pushf
pushl
call
mov
call
not
aad
mov
bsf
mov
cmc
add
jmp
add
pusha
pushf
test
pushf
sub
jmp
shrd
jmp
sub
pushf
mov
jmp
pushf
push
call
jmp
pushf
mov
push
push
pushf
lea
jmp
call
push
not
cmc
test
and
movw
call
mov
mov
cmc
bt
cmc
pushl
popl
movzbw
not
rol
movl
cmc
push
mov
cmc
ror
push
clc
shl
sub
btc
neg
not
bswap
pusha
lea
push
pushf
lea
jmp
sub
jmp
movw
mov
pushl
call
lea
call
sub
test
cmp
lea
shrd
neg
bswap
movsbw
mov
pushf
lea
jmp
call
call
call
jmp
pusha
shl
pushf
lea
jae
pusha
pusha
mov
push
movl
pushl
pushf
pushf
popl
movw
movb
mov
pushf
pushl
popl
movb
movw
lea
jmp
stc
xchg
lea
bswap
not
mov
clc
mov
pop
mov
movw
lea
push
rol
call
jmp
cmp
mov
movb
bt
sub
pushf
pushf
pushf
call
pushf
lea
jno
xchg
pushf
jmp
test
xor
pusha
pushf
not
cmp
stc
cmp
add
call
mov
mov
bswap
pusha
jmp
lea
movl
pusha
mov
pushl
lea
jmp
pushf
pusha
dec
push
call
cmc
push
cmc
jmp
lea
movw
pushf
lea
jmp
not
mov
jmp
add
add
push
mov
mov
pushf
push
lea
jmp
cwtl
mov
dec
shr
sbb
rcl
mov
pusha
cmc
clc
pushl
not
test
add
jge
bt
push
not
jmp
pushf
jmp
clc
lea
jnp
pushf
rol
cmp
xor
jmp
test
push
stc
xor
mov
cmc
cmp
add
cmc
sub
jmp
pushf
popl
pushf
jmp
mov
movb
pushf
popl
pusha
movw
pushl
popl
push
push
mov
lea
jmp
mov
pushf
pushf
dec
lea
jbe
pusha
pusha
mov
push
push
push
lea
jmp
sub
stc
test
cmc
shl
movb
movb
mov
call
pushf
popl
stc
mov
bts
bswap
rol
mov
btr
mov
clc
cmc
mov
bswap
btr
bswap
mov
pop
lea
push
rcr
push
pushf
bt
rol
rcr
mov
stc
push
bts
call
movsbl
mov
pushf
divl
pusha
pusha
pushf
mov
mov
mov
jmp
movl
push
clc
mov
ror
bts
btc
movsbw
ror
movsbw
sub
call
mov
jmp
shl
sub
ror
cmp
mov
clc
add
push
lea
jmp
pushf
movb
mov
push
pushf
pushf
jmp
push
mov
push
rcl
lea
push
ja
movsbw
push
rcr
ror
lea
push
btc
mov
pushl
mov
movsbw
pusha
push
movl
btr
pop
clc
cmc
mov
bt
ror
btc
dec
shl
bsf
sub
sbb
bts
rcr
neg
movsbw
call
xor
push
notl
aad
shl
mov
jmp
sar
mov
cmc
mov
rcr
sbb
setge
mov
bt
cmc
sub
test
push
call
movb
xchg
pusha
lea
jnp
pushf
push
movl
push
jmp
pusha
push
bt
add
call
pushf
mov
mov
pushf
lea
jmp
movzww
push
cmc
cmc
xchg
clc
stc
jmp
push
sub
call
xchg
mov
mov
rol
movzbl
ror
rcr
mov
ror
bswap
clc
cmc
lea
push
pusha
clc
pushf
rcr
xchg
rcr
pushf
btr
mov
btr
pushf
push
movsbl
pushl
popl
jmp
pushf
popl
jmp
pusha
jmp
pushf
pushf
popl
push
pushl
popl
push
mov
push
lea
jmp
pushf
pushf
pushf
pushl
popl
pushl
mov
pushl
lea
jmp
jmp
stc
jmp
movsbl
dec
test
setg
shl
xor
movzbw
movzbl
jmp
sub
mov
stc
ror
rol
bswap
btc
add
pushf
movsbw
rol
clc
and
bsr
shl
sub
bswap
movsbw
mov
jmp
and
mov
call
mov
push
lea
jmp
bt
pushf
cmc
pushl
popl
jmp
btc
clc
cmp
mov
cmc
mov
push
pusha
clc
add
jmp
shr
pushf
mov
jmp
sub
jmp
pushf
popl
movb
pushf
pushl
pusha
pushl
popl
mov
pushf
push
lea
jmp
setne
movsbw
movzbl
setg
mov
jmp
pusha
mov
pushf
cmc
push
bt
sub
movw
clc
push
add
call
jmp
ror
sub
dec
sub
pusha
shr
bt
neg
mov
movzbw
lea
push
mov
pushf
lea
jmp
mov
pushf
lea
jmp
lea
ja
aaa
stc
mov
jmp
cmp
clc
movb
cmp
mov
lea
jae
pushf
lea
ja
xchg
btc
rcr
mov
bswap
das
sbb
lea
aaa
adc
aam
sub
shr
sbb
not
lea
inc
shr
mov
and
neg
bt
btr
sub
not
lea
push
mov
jmp
mov
pushf
mov
lea
jmp
pushf
push
bt
xchg
cmp
mov
pusha
movb
sub
call
pushf
popl
call
shr
pusha
or
jmp
mov
pushf
popl
pushf
call
jmp
movb
pushf
popl
pusha
mov
push
pushf
pushl
popl
movl
push
lea
jmp
stc
mov
call
jmp
call
jmp
push
rep
rcl
cmc
shrd
clc
mov
neg
xor
mov
movl
pushl
popf
pusha
lea
jmp
stc
test
sub
mov
mov
pusha
mov
pusha
pushf
pushl
lea
jmp
mov
movb
movb
dec
movl
pushf
lea
jmp
pushf
stc
add
jmp
pusha
pushf
popl
mov
cmc
movw
mov
xchg
pushf
pushf
mov
bswap
cmc
mov
mov
clc
mov
bts
rcr
lea
lea
push
lea
push
ror
push
lea
clc
bswap
pushl
clc
bt
rol
jmp
jmp
mov
bt
pushf
pushf
mov
rol
pop
bswap
lea
push
bt
bt
push
call
shr
mov
shl
bswap
shrd
bswap
pushl
popf
movsbw
pop
bswap
mov
movb
push
pushl
ret
pushf
pusha
jmp
bt
xor
pushf
call
cmp
sub
clc
rol
test
movl
stc
neg
call
lea
jge
pushf
pushl
popl
mov
pusha
pushl
pushf
lea
jmp
shld
lea
bswap
rol
sub
aaa
bswap
not
pushf
lea
stc
cmp
add
and
neg
shld
bsr
sub
movsbw
pop
bswap
push
mov
call
jmp
rcl
bts
pushl
btc
push
rcr
stc
bts
mov
movzbw
ror
btr
not
sub
sub
xor
sbb
neg
push
movzbw
lea
pushl
pusha
pushf
lea
jmp
movw
mov
call
pushl
mov
mov
push
push
lea
jmp
dec
sar
push
movzbl
push
lea
jne
add
clc
pusha
pushf
sub
jmp
xor
pushl
pusha
pushf
not
pushf
add
stc
sub
jae
pushf
movb
cbtw
test
pushf
mov
pushf
cwtl
pusha
mov
jmp
call
push
pushf
popl
push
pushl
popl
movb
mov
mov
lea
jmp
movb
sets
mov
pushf
mov
pusha
push
pushl
lea
jmp
mov
push
pusha
lea
jmp
movzbw
pushf
not
push
mov
mov
jmp
mov
push
push
pushl
lea
jmp
pushl
pushf
pushl
popl
movb
pushf
lea
jmp
pusha
pusha
call
neg
jmp
mov
pushl
pusha
mov
ror
jmp
jmp
bsf
mov
btr
add
bt
not
btc
and
sub
test
stc
and
mov
jmp
mov
jmp
not
push
push
jmp
xadd
pusha
mov
sar
mov
add
cmp
mov
clc
mov
clc
add
pusha
sub
jp
bt
shld
pushf
lea
jp
pushf
mov
jmp
call
dec
not
pushf
shr
sub
adc
mov
cmp
setp
mov
test
jmp
push
mov
inc
sub
clc
sub
movzbw
shl
rcl
call
push
mov
sub
ror
mov
mov
sub
cmc
shr
pushl
pushf
call
pusha
push
jmp
push
xchg
jmp
pusha
pusha
mov
jmp
push
pushf
popl
push
bt
cmc
xchg
push
mov
movw
call
clc
add
mov
lea
js
push
mov
pushf
lea
jmp
shrd
mov
setg
inc
sub
and
mov
pusha
test
sub
test
jmp
shrd
mov
neg
pop
bswap
lea
pusha
pusha
movl
mov
lea
jmp
ror
ror
jmp
pusha
pushf
popl
push
xchg
pop
not
btr
movw
mov
movzbl
btc
btc
bswap
mov
stc
movsbw
btc
mov
pop
jmp
mov
clc
mov
rcl
lea
push
rol
pusha
rcl
xchg
ror
ror
call
pusha
pushf
mov
pushf
jmp
mov
mov
lea
jne
stc
cmp
clc
sub
pushf
jmp
xor
push
pusha
dec
jmp
pushf
popl
pushf
push
pushl
popl
push
pushf
lea
jmp
mov
pusha
mov
jmp
pusha
pusha
lea
call
pusha
push
movb
add
movb
pushl
rol
test
cmc
sub
cmc
bt
bt
sub
mov
call
pushf
mov
pushf
call
push
not
mov
mov
pusha
lea
jmp
or
adc
mov
clc
jmp
pusha
mov
lea
jns
push
push
pusha
pushf
popl
call
mov
pushf
lea
jmp
cmc
sub
push
call
pusha
pushf
mov
pushf
mov
mov
movb
lea
jmp
pushf
popl
cmc
xchg
bts
btr
mov
mov
movzbw
clc
call
add
push
pushl
popf
push
lea
jmp
rol
sub
shr
shl
neg
not
lea
pusha
pushl
pushf
movb
lea
jmp
dec
btr
ror
neg
push
lea
mov
lea
jmp
jmp
shld
neg
jmp
jmp
jmp
movzww
bt
xchg
stc
pushf
stc
sub
stc
rol
cmc
pushf
neg
call
xchg
shl
pushf
and
mov
shr
add
setbe
mov
pusha
mov
mov
movb
mov
pusha
lea
jmp
and
movw
pushf
movb
pushf
popl
jmp
mov
pusha
pushl
ret
lea
cld
jmp
or
movzbl
push
sub
call
pushf
popl
push
mov
call
movzbw
xor
btc
dec
not
mov
bswap
neg
bts
and
inc
push
setae
bsr
mov
bt
add
pusha
mov
mov
push
pushf
push
pushf
lea
jmp
jmp
movb
sub
jmp
pushf
stc
add
movb
sub
stc
call
pushl
popl
bswap
bts
rcl
movl
cmc
mov
btr
rol
stc
rcl
ror
neg
shl
sub
shl
cmp
neg
pusha
lea
pushf
pusha
pushf
push
lea
jmp
pushl
pushf
movb
mov
mov
pushf
pushf
pushl
pushl
ret
cld
jmp
sub
test
pushf
sub
push
mov
push
push
push
pushf
lea
jmp
aam
btc
lea
push
mov
test
mov
cmc
add
jmp
mov
push
pusha
pushf
popl
movw
pushl
popl
pushl
lea
jmp
lea
jne
pushf
pusha
mov
pushf
movb
lea
jmp
pushf
jmp
mov
pushf
pushf
push
pushf
lea
jmp
pushf
popl
cmc
xchg
rcl
movzbw
movzbl
btr
mov
pop
call
jmp
pushf
movl
pushf
pushf
pushf
jmp
jmp
rcr
pop
pushl
popl
btc
movl
btc
mov
rol
pushf
push
call
pusha
lea
jno
pusha
dec
clc
sub
cmc
bt
cmp
sub
pushf
mov
bt
cwtl
jmp
pusha
lea
mov
mov
call
mov
pusha
lea
jmp
pushf
xchg
clc
rol
rcr
mov
not
movsbl
lea
btc
mov
movzbw
jmp
call
pushf
movw
dec
call
mov
push
movb
pushf
lea
jmp
pushf
jmp
not
push
clc
add
test
cmp
add
js
sub
pushf
dec
mov
jmp
sub
test
stc
sub
jmp
push
lahf
bswap
cwtl
mov
call
jmp
movb
pushl
mov
push
pushf
lea
jmp
lea
jns
pushf
pusha
pushl
popl
mov
movb
pushf
mov
lea
jmp
lea
mov
setne
mov
jmp
jmp
push
pushl
pushl
mov
push
push
pushl
lea
jmp
shl
jns
stc
shr
stc
cmc
or
test
xor
jmp
pushl
pushf
decl
call
shl
mov
cmp
push
pusha
sub
pushf
stc
stc
clc
add
pushf
pushf
pushf
popl
call
inc
call
pusha
mov
jmp
jmp
xadd
mov
shld
add
shld
or
pop
xchg
jmp
mov
call
rcr
setle
rol
stc
mov
pushf
movb
push
sub
jmp
call
test
lahf
sbb
mov
stc
mov
clc
stc
push
add
pusha
mov
pushf
lea
jmp
push
call
pushf
mov
pushf
push
pushl
lea
jmp
clc
clc
pushl
popf
mov
movw
lea
jmp
call
shr
movzbl
rcl
pushf
not
call
pushf
popl
cmc
clc
call
btc
lea
push
push
btr
mov
movsbl
bts
rcl
ror
push
rcr
pushl
rcl
clc
movsbl
push
rcr
rcl
ror
mov
pusha
cmc
pushf
rol
ror
ror
ror
sub
shl
neg
jmp
mov
push
pushf
pushl
ret
cmc
test
pushf
xor
rol
ror
dec
not
setge
neg
bswap
jmp
sub
jmp
pushf
movw
pushf
popl
pusha
push
pushl
popl
pushf
movw
lea
jmp
pushf
pushl
popl
movw
lea
jmp
clc
call
call
shl
xor
mov
add
mov
test
test
stc
add
jmp
xchg
sar
pushf
mov
pushl
jmp
pusha
mov
call
mov
cmp
bt
or
jmp
movsbw
not
pushf
popl
not
push
not
xchg
pushf
push
call
clc
pushf
movl
stc
mov
rcr
bswap
ror
rcl
ror
shrd
shr
sub
mov
call
pusha
mov
push
call
push
rol
xchg
call
jmp
push
pushf
dec
jmp
mov
pusha
push
jmp
pushl
popl
pushf
lea
jmp
mov
pushl
mov
pushf
push
lea
jmp
push
pushf
pushl
popl
pusha
pushl
movw
push
lea
jmp
add
jmp
ror
and
rcl
bt
mov
cmp
lea
js
bt
pusha
sub
pushf
movb
mov
pusha
pushf
mov
lea
jmp
mov
pusha
pushf
lea
jmp
movsbw
aas
mov
push
adc
test
bts
mov
movb
jmp
pushf
mov
pushf
jmp
jmp
pusha
jmp
pushf
not
lahf
mov
jmp
movl
call
mov
dec
pushf
pushf
movzbl
pushf
dec
test
clc
stc
stc
sub
bt
clc
pusha
pushf
sub
clc
bt
test
stc
xor
pushf
dec
push
sub
test
mov
pushf
pushf
clc
cmp
sub
push
jmp
mov
call
decl
movb
push
jmp
bswap
stc
rcr
movl
call
movb
pusha
pushl
popl
push
push
push
pushl
lea
jmp
pushl
popl
pushf
mov
lea
jmp
jmp
jmp
push
jmp
jmp
mov
jmp
aas
bsr
inc
mov
stc
test
add
push
mov
pushl
call
pusha
pushl
mov
call
push
mov
mov
push
push
lea
jmp
not
mov
bswap
mov
pusha
pushf
movw
mov
movw
mov
jmp
sub
jae
push
mov
pushl
pusha
movl
pushf
lea
jmp
mov
rcr
btc
pop
pop
lea
push
push
xchg
mov
push
btc
mov
mov
ror
pushl
jmp
pusha
mov
pusha
mov
push
pushf
mov
lea
jmp
test
cmc
cmc
test
shld
pusha
pushf
mov
movb
pushf
popl
jmp
clc
add
pushl
stc
test
call
not
mov
not
sar
call
mov
pushf
popl
pusha
xchg
rcl
stc
mov
movw
mov
rcr
not
btc
mov
mov
jmp
pushf
pusha
movb
mov
mov
movb
pusha
movb
lea
jmp
lea
jne
rcr
mov
cmc
pushf
and
test
pushf
cmp
pushf
lea
jne
bts
cmc
shl
xorb
jmp
sub
pushf
dec
pusha
call
push
pushf
pushl
mov
lea
jg
pushf
push
movb
pushf
popl
pushl
pushl
popl
mov
mov
lea
jmp
pusha
cmc
add
mov
lea
jmp
lret
add
add
jge
jae
jge
imul
add
sbb
call
jge
pop
sbb
dec
add
xor
jge
or
add
sbb
mov
jge
fdivr
jl
lods
add
xor
jge
jbe
jge
imul
add
sbb
add
jge
and
jge
push
adc
jge
xor
jge
mov
push
jge
push
or
xor
jge
fwait
sbb
or
dec
add
xor
jge
inc
sbb
jge
inc
add
add
jge
sbb
jge
sub
add
jge
lar
imul
add
add
jge
sub
add
add
xor
jge
fdivr
jl
sbb
jge
xchg
adc
xor
jge
pop
add
jge
mov
jge
xor
jge
or
add
sbb
fdivr
jl
stos
push
jge
cltd
or
cltd
or
test
jge
pop
sbb
jae
jge
inc
sbb
jge
aas
sbb
inc
sbb
in
jge
lods
add
lods
add
adc
jge
stos
push
jge
jbe
jge
or
add
jge
lar
and
jge
dec
adc
add
jl
dec
add
add
jge
and
add
add
sbb
mov
jge
or
sbb
adc
jge
fdivr
jl
jns
jge
inc
sbb
or
mov
adc
jge
sbb
jge
inc
sbb
mov
jge
mov
add
jns
jge
pop
sbb
add
jge
sub
add
jge
lar
lar
or
stos
push
jge
mov
add
lods
add
pop
sbb
adc
jae
jge
adc
jge
and
jge
dec
adc
add
jge
push
jge
call
jge
dec
adc
add
add
imul
add
jge
dec
adc
add
add
sbb
add
jge
mov
jge
lret
add
adc
add
pop
jge
push
jge
inc
add
add
or
sub
add
jge
push
adc
jge
jae
jge
dec
adc
add
jge
lret
add
jge
lods
add
xchg
adc
fwait
add
dec
adc
add
pop
jge
adc
jge
gs
jge
dec
add
dec
add
dec
adc
add
jge
or
add
jge
push
adc
jge
fdivr
jl
dec
adc
add
and
add
adc
add
jge
push
or
inc
add
add
jge
test
jge
xchg
adc
fwait
add
inc
sbb
jge
fwait
add
jbe
jge
push
or
pop
sbb
adc
fwait
sbb
sub
add
jge
imul
add
jge
call
jge
fwait
sbb
add
jge
fdivr
jl
stos
push
jge
xor
jge
fwait
add
cltd
or
mov
add
dec
add
pop
add
jge
adc
pop
add
jge
pop
sbb
xor
jge
xor
jge
lret
add
add
jge
gs
jge
sbb
jge
push
adc
jge
mov
jge
imul
add
sbb
add
jge
adc
xchg
adc
push
jge
inc
add
add
or
and
jge
inc
sbb
jbe
jge
pop
add
sub
add
adc
push
jge
test
jge
mov
jge
repz
lar
and
push
pushl
mov
mov
pusha
pushf
popl
jmp
mov
pushl
lea
jmp
movb
call
shrd
mov
xor
not
neg
mov
mov
sete
and
mov
test
call
lea
pushf
popl
call
push
cmp
sub
cmc
sub
cmp
pushl
sub
jmp
mov
pushf
inc
call
push
mov
jmp
mov
pusha
lea
jmp
pushl
popl
pushf
push
pushf
lea
jmp
push
mov
mov
pushf
mov
lea
jmp
pushf
jmp
movzbw
movzbw
movsbw
mov
jmp
pusha
daa
mov
bt
inc
mov
cmp
cmp
jmp
pushf
rol
call
shrd
mov
push
mov
jmp
sub
bt
clc
cmc
shl
jmp
call
clc
mov
rol
push
rol
ror
push
mov
lea
bt
pushl
rol
rcr
bswap
push
stc
bswap
mov
cmc
pushf
btr
bt
ror
stc
adc
btc
pop
sub
bt
neg
push
pushf
lea
pusha
push
pushf
pushf
lea
jmp
shrd
rdtsc
cmp
call
clc
pusha
rol
call
clc
rcl
mov
setnp
pusha
push
add
mov
cmc
test
add
jmp
call
inc
btc
neg
btc
lea
add
or
rol
bsf
sub
inc
cmc
or
mov
btr
xadd
push
mov
pushf
dec
shl
xor
add
lea
adc
mov
rcr
xor
movzbw
inc
lea
pusha
call
shl
clc
bswap
push
mov
pushf
add
jmp
pop
lea
push
not
rol
push
movsbw
rcl
bts
push
jmp
cmp
push
test
sub
jmp
pusha
mov
pusha
mov
call
jmp
jmp
mov
movb
push
lea
jmp
btc
bt
cmc
push
bts
bt
rcr
bt
mov
bswap
bts
ror
add
sub
bts
pushf
neg
pop
pushf
pop
mov
push
movw
lea
jmp
bswap
mov
pushl
inc
pushl
movb
bt
cmc
add
mov
push
mov
dec
jmp
mov
call
call
push
lea
push
lea
jmp
cmc
movzbl
jmp
mov
pushf
movb
pushl
pushl
ret
bts
mov
push
rol
not
mov
stc
btc
mov
rol
lea
push
bt
ror
push
bswap
bswap
push
push
pushl
popl
stc
rol
rol
rcr
push
clc
pusha
movzbw
ror
mov
stc
pop
lea
jns
rcl
ror
shr
sub
test
pushf
neg
neg
movsbw
lea
pusha
movl
movb
push
lea
jmp
lea
bswap
mov
pushf
push
push
cld
pushl
rep
call
clc
clc
not
pusha
not
clc
test
movb
sub
stc
bt
cmc
jmp
rol
mov
rol
ror
push
clc
pushl
pusha
jmp
call
add
not
call
pushf
popl
stc
clc
push
xchg
rcr
call
lea
je
jmp
jmp
call
mov
pushf
mov
push
lea
jmp
sub
cmp
call
cbtw
clc
pushf
cwtl
pushf
movw
call
push
movb
mov
pusha
pushf
popl
pushf
pushl
clc
xchg
not
movsbl
lea
mov
push
mov
ror
pop
pushf
mov
rcl
lea
push
btr
clc
rcr
rcl
push
movsbw
push
btc
pushl
rol
cmc
not
call
mov
cwtl
movb
cmp
call
pushf
pushf
popl
clc
call
push
xchg
pushf
clc
bswap
pushl
popl
rcl
push
xchg
rcr
mov
rcr
pusha
ror
add
sub
movsbw
add
jae
clc
neg
mov
lea
not
mov
push
pushl
mov
pusha
lea
jmp
pushf
popl
movb
pushl
popl
pushl
lea
jmp
pusha
pushl
popl
pushl
push
pushf
mov
lea
jmp
