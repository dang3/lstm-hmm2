les
in
cmp
sub
pop
or
jno
shrb
xchg
jb
push
stc
pusha
shrb
in
mov
jg
inc
and
pop
std
cmp
dec
lret
je
sbb
mov
movsl
stos
add
fldcw
cmp
sti
push
mov
cmpsl
mov
iret
jl
adc
pop
jnp
push
jmp
lret
or
or
xor
jecxz
xchg
or
cmc
push
xchg
mov
xchg
mov
mov
mov
addr16
jb
mov
add
adc
cs
addb
jnp
sbb
ret
addr16
xchg
xchg
push
sub
sub
adc
xchg
fisttpl
sub
leave
pop
and
fs
js
xor
pop
mov
mov
jmp
shll
lret
pop
mov
scas
insl
lods
movsl
test
imul
insl
data16
js
xor
sbbl
js
movsl
and
dec
lods
lods
lods
pushf
fildl
mov
sbb
and
fsubs
or
push
rorl
xchg
arpl
pop
popf
add
xchg
push
ss
and
scas
mov
fyl2x
outsl
scas
sbb
add
mov
xor
lds
dec
pop
into
aad
ret
clc
sbb
xor
push
in
xlat
dec
sbb
fs
lods
call
add
js
cs
cmp
cmp
sbb
sub
and
sti
ret
sub
xchg
xor
cmpsb
decb
xor
sbb
or
inc
add
adc
scas
xchg
pop
out
mov
pushf
xchg
scas
test
push
fwait
popa
push
les
pop
pop
cmp
push
xchg
mov
mov
pop
inc
shlb
icebp
in
pop
dec
sbb
into
lds
scas
cld
lods
jnp
test
test
sbb
ret
cmp
add
lea
arpl
cmp
outsb
cmpsl
mov
popf
out
incl
outsl
cwtl
cmp
mov
call
cld
pop
add
outsl
or
pop
bound
and
sub
leave
std
lcall
fldenv
xchg
test
mov
cltd
nop
and
fsubs
sbb
cmp
test
mov
imul
fistps
cs
loope
ss
mov
pop
push
push
add
mov
lcall
xor
icebp
mov
cwtl
jmp
adc
test
cmpsb
adc
dec
xlat
push
fcmovnbe
loope
adc
dec
lret
xchg
repnz
aaa
cmp
and
pop
stos
js
mov
adcb
test
mov
cmpsl
and
lret
and
pop
xchg
sub
xchg
pop
mov
popf
cmpsb
or
jl
fwait
fildl
push
lea
mov
pop
mov
jbe
leave
xchg
mov
leave
pop
orb
sub
out
icebp
addr16
enter
pop
ret
and
mov
cltd
pushf
push
dec
inc
jmp
aas
pop
adc
inc
ss
sbb
mov
add
jg
out
mov
leave
mov
dec
xchg
js
aaa
adc
jecxz
punpcklbw
cmp
or
imul
mov
add
std
sub
cld
mov
stos
jae
int3
movsl
lret
sub
fs
xor
and
jle
mov
sub
jp
call
sub
mov
cmp
mov
inc
scas
xchg
mull
cmp
fs
inc
into
jo
stos
loopne
sub
or
cltd
fs
stos
xor
sahf
add
loope
or
push
jbe
js
xchg
xchg
and
dec
rorb
jbe
std
inc
jecxz
sub
dec
out
adc
js
not
fimuls
stos
shlb
and
dec
mov
jns
stos
fdivrl
or
xor
lret
inc
das
in
inc
call
clts
shl
ret
out
mov
mov
mov
push
lock
cmp
push
push
lods
dec
xchg
mov
jl
pop
pusha
or
jmp
xchg
jp
mov
or
xor
into
cmpsb
and
xchg
dec
ficompl
mov
sbb
negb
pushf
cmp
inc
push
mov
xchg
xchg
cmc
repz
fistpll
jno
mov
popf
aad
cli
test
jbe
cmp
dec
outsl
mov
das
cli
int3
lock
and
subb
cmp
cli
xchg
cli
push
adc
jp
jae
sub
xchg
int3
push
xor
sbbl
pop
pop
sbb
pop
fdivrl
mov
xchg
fistl
pop
xchg
pop
or
outsl
ljmp
xor
xor
xchg
xchg
or
adc
inc
out
not
clc
daa
roll
movsb
jb
mov
or
imul
movl
leave
sarl
or
cltd
fidivs
mov
mov
ficomps
int
sbb
js
dec
sbb
loope
repz
and
outsl
mov
in
xchg
sbb
pop
sub
push
cli
lret
push
test
fdivl
into
lret
cmp
lock
mov
movsl
fbstp
repz
dec
popf
xchg
fldcw
movsb
jo
repnz
add
les
adc
adc
das
mov
out
mov
adc
mov
inc
dec
pop
das
push
xlat
cmpsl
add
pushf
mov
sbb
sub
fisubs
cmp
pop
pop
push
sbbb
ljmp
add
test
jg
mov
mov
mov
sbb
xchg
clc
imul
outsl
xchg
movsl
add
jne
ljmp
ret
pop
les
addr16
push
pop
jne
mov
pop
test
cmp
mov
cltd
in
out
push
int3
shrd
cmpsl
mov
push
sub
pop
add
je
mov
jne
mov
push
and
jno
les
fstl
scas
pop
xor
dec
dec
jl
jp
mov
xchg
mov
shrl
ljmp
and
cld
mov
cltd
dec
jno
inc
or
outsl
sbb
aaa
push
push
xlat
xor
sub
lahf
es
mov
or
mov
fiaddl
pop
xchg
cmp
orl
pop
mov
repz
push
mov
push
adc
jge
mov
movsl
push
fsubrs
pop
pop
sbb
test
jno
mov
test
mov
add
in
lahf
inc
cmpsl
js
sbb
addr16
push
loopne
loopne
sub
loopne
jo
jne
pop
je
jbe
mov
inc
push
movsl
xchg
pop
xchg
lret
pushf
mov
mov
out
push
mov
sub
push
les
leave
cmpsb
inc
pop
filds
jle
data16
sbbb
data16
andl
lret
outsb
or
loope
dec
xorb
sub
add
inc
jns
mov
fisttpl
dec
add
movsb
and
test
push
in
cmp
movsb
sbb
imul
xchg
fs
adc
outsl
clc
das
std
sbb
movsb
and
dec
popa
mov
dec
inc
das
mov
push
mov
aaa
add
sub
cmp
xchg
mov
dec
mov
insb
mov
test
cmp
mov
adc
mov
pop
ljmp
imul
pusha
cmp
add
pop
pop
mov
popf
jne,pn
xor
inc
push
and
mov
and
insl
push
popa
mov
pop
push
lret
outsb
mov
mov
sbb
out
inc
adc
and
dec
fmul
repz
lods
cmp
mov
sti
scas
adc
xchg
sbb
jbe
lcall
jmp
int
lret
and
xchg
xchg
test
or
xchg
adc
nop
jno
pop
mov
aaa
loope
ficomps
mov
xchg
pop
cli
cmp
out
repz
in
mov
nop
int3
xchg
jb
jb
aaa
xlat
addr16
aad
sub
scas
sahf
push
inc
cmp
aaa
and
imul
mov
outsl
ds
popf
inc
mov
ret
in
fmull
xchg
sub
dec
cmp
int3
sti
inc
jge
out
xchg
add
out
lcall
jp
stos
sub
int
mov
mov
push
mov
adc
sub
mov
sbb
jp
ret
stos
and
aas
pop
mov
scas
fistl
inc
pop
sbb
mov
cltd
popf
cmc
call
out
loop
fwait
lret
lret
fsubl
inc
test
test
cli
jp
xchg
repz
mov
outsl
inc
cmp
and
daa
test
and
les
fists
les
and
into
jb
cmp
mov
imul
lret
in
cmpsl
call
test
lods
jns
rcr
jmp
movsb
or
or
mov
aas
cwtl
test
lods
push
cmp
mov
repnz
bound
adc
shlb
lcall
or
xchg
sub
cmp
dec
arpl
ret
call
mov
clc
aad
xchg
nop
sbbl
xchg
xor
es
nop
jle
jae
andb
pop
mov
add
daa
mov
jg
test
jne
lods
dec
push
jns
mov
lahf
cmp
rolb
xchg
in
shlb
or
push
loopne
std
cs
out
out
fsub
pop
pop
repnz
daa
orl
sub
add
sub
bound
push
and
in
icebp
out
sbb
loop
pop
pop
jg
dec
push
xchg
jne
out
or
jne
push
push
sbb
ret
xor
mov
pop
stos
sti
jbe
out
cwtl
pop
xor
nop
inc
jmp
mov
adc
push
loop
aas
insl
inc
xchg
pop
cmpsb
in
inc
mov
lret
xor
cwtl
aad
xchg
pop
nop
pop
push
enter
xchg
jmp
cmp
in
pop
push
cmp
aaa
xchg
push
dec
push
mov
jle
mov
add
sub
jne
popf
test
pop
mov
int3
cmp
lods
sub
and
in
cmpsb
outsb
fsubr
pushf
inc
outsb
mov
xchg
inc
rorl
aas
cmpsl
mov
jb
and
xchg
sub
leave
arpl
sbb
bound
push
movsl
or
out
mov
or
mov
scas
fs
dec
sahf
or
cmpsb
iret
cmpsl
stos
mov
push
sub
sbb
sub
mov
mov
mov
cmp
outsb
pop
out
outsb
orb
add
jle
lock
addr16
lret
sub
xchg
add
dec
out
adc
cld
push
nop
xchg
jecxz
out
out
and
pop
add
dec
in
out
lret
movq
push
cmp
cmp
int
jnp
sbb
cmp
insl
les
out
cli
orb
or
sbb
pop
std
add
push
dec
call
daa
add
sub
scas
mov
jno
lret
fwait
xchg
mov
stc
jns
int
loop
push
cmc
xchg
pop
mov
mov
imul
and
imul
mov
jmp
cmpb
mov
test
sbb
sbb
jg
pop
jnp
push
rol
and
int3
out
lock
mov
pop
int3
mov
mov
mov
fstps
dec
push
fsubrs
jle
mov
int3
cmpl
jmp
repnz
outsl
sub
adc
jo
dec
dec
or
insb
mov
mov
ljmp
scas
jno
rcrl
cmp
arpl
dec
and
adc
stos
mov
stc
das
lahf
cmpsb
push
push
jbe
fistl
cmp
or
mov
cld
mov
xchg
xor
xchg
out
jp
pushf
scas
mov
pusha
or
ds
lcall
inc
test
frstor
ret
mov
mov
sarl
in
mov
xchg
icebp
rorl
jno
jmp
cmp
int3
inc
push
inc
xor
add
fisttpl
std
fidivrl
data16
and
jae
iret
rcrl
into
add
or
adc
hlt
les
in
dec
or
sahf
xor
adc
inc
pop
dec
mov
sbb
dec
mov
pop
xchg
es
jae
push
adc
test
test
repnz
pop
nop
dec
mov
testb
mov
popa
je
push
pop
fsubrs
shrl
ss
imul
scas
in
mov
mov
es
mov
iret
mov
fistpl
mov
enter
cmpsl
jns
in
pop
pop
inc
imul
adcb
push
mov
ljmp
mul
xor
test
add
nop
mov
pushf
cmpsl
and
cmp
in
sbb
imul
dec
loopne
loope
xchg
push
push
push
jp
in
jg
or
shll
ficompl
inc
mov
ret
movsl
testb
sahf
js
lret
fsub
fmull
and
stos
dec
jb
mov
cmp
shll
scas
je
mov
test
add
xchg
xchg
in
insl
mov
push
fcmovnu
inc
mov
cltd
cmp
push
cmc
je
or
mov
ret
inc
or
push
xchg
cmp
es
loop
sub
jne
sub
es
cmp
cmc
daa
cwtl
fsubrp
mov
in
fbstp
sub
adc
sbb
mov
pusha
inc
int
std
jns
jb
sbb
arpl
bound
addr16
pop
xor
mov
or
pop
inc
arpl
mov
out
lahf
testl
inc
dec
gs
inc
incl
push
sbb
test
dec
xchg
lret
es
push
loopne
mov
aam
add
push
jecxz
and
dec
xor
jno
fdivp
push
ficoml
push
mov
das
push
fistpl
aaa
mov
in
dec
push
jg
or
jns
and
aad
mov
and
and
bound
sahf
arpl
subb
xlat
lcall
cmp
pop
pop
inc
mov
pop
or
and
fs
subb
push
mov
mov
mov
pop
add
rcrl
sahf
shlb
push
add
inc
shrl
es
cmp
das
mov
test
movsb
mov
sbb
fstpt
jge
fwait
inc
jne
or
in
sbb
xor
mov
mov
sbb
jg
adc
mov
mov
bound
and
icebp
std
sbb
call
add
enter
adc
scas
lret
add
int3
andl
xchg
int
mov
cltd
lret
jmp
xchg
lret
dec
pop
andb
rcll
lret
sub
push
jl
xchg
sbb
push
sbb
mov
inc
jae
mov
movl
jp
dec
xchg
decl
cmp
std
xchg
fisttpll
jge
dec
dec
loop
inc
jecxz
fbstp
fiaddl
adc
add
sbb
xor
lret
mov
cmpsl
fstpl
fsubs
mov
andl
sub
push
out
mov
xchg
xchg
mov
jbe
inc
scas
cmp
add
ljmp
jecxz
push
fnstenv
out
out
filds
mov
cmp
xchg
ds
mov
sbb
sbb
sbb
mov
mov
mov
insl
xor
pop
mov
xorb
adcl
sbb
jecxz
rorb
jg
lret
pop
dec
dec
iret
in
dec
test
add
or
inc
aas
sbb
pusha
pop
ja
fldl
clc
inc
out
mov
xor
scas
fwait
xchg
xchg
je
cmp
test
inc
test
cmp
ja
jne
fcoms
loope
adc
insl
clc
push
jge
clc
mov
jg
aas
mov
adc
aaa
jne
jle
jle
push
fstpt
inc
push
mov
sub
cmc
inc
cmp
cmp
call
or
andb
sbb
or
scas
fildl
inc
xlat
daa
roll
or
int3
loope
daa
cmpsb
xor
imulb
movsb
lahf
add
fs
mov
es
cmp
add
xchg
inc
sbb
jle
mov
fiaddl
push
jmp
fsubl
jl
test
test
fwait
imul
fadd
dec
arpl
rclb
inc
lret
sbb
fs
int
cmp
jle
mov
pop
mov
xchg
dec
pop
fbld
rcrl
daa
fstpl
bound
fcmove
add
or
inc
sbb
dec
mov
les
test
sti
xchg
mov
pusha
clc
push
adc
mov
cli
sbb
lock
lds
mov
jp
aaa
clc
lcall
dec
test
aad
gs
inc
dec
push
inc
fbld
adc
fsubl
xor
mov
push
dec
pushf
push
xchg
pop
arpl
pop
dec
xlat
test
enter
push
fsubrl
int3
xchg
xor
sub
aas
movsl
out
fisttpll
fbstp
pushf
fld
inc
adc
movsb
outsl
pop
daa
mov
insl
mov
xchg
adc
xor
cmp
loopne
cmp
jle
fwait
outsl
xor
xor
or
scas
dec
mov
popf
sub
int
loopnew
rorb
mov
sbb
insb
icebp
mov
mov
add
mov
jecxz
std
enter
mov
into
cli
push
dec
lret
idivl
into
mov
cmp
cli
or
pop
mov
sbb
mov
mov
mov
xchg
cwtl
jo
js
sub
daa
inc
mov
mov
hlt
push
sub
inc
lods
adc
lds
dec
pop
cmp
or
fistpll
call
outsl
cli
xor
jg
sub
outsb
movsl
inc
test
cs
add
fstps
insl
mov
adc
adc
cmc
jmp
xor
dec
dec
sbb
xchg
cli
or
inc
rcrl
fwait
and
iret
dec
mov
stc
movsb
xor
mov
push
or
pushf
pop
dec
test
lds
dec
jo
stos
insb
enter
jle
pop
inc
ret
mov
test
daa
shr
mov
sbb
out
cltd
sti
call
mov
test
inc
ret
mov
cmp
pop
cwtl
or
jp
xchg
or
push
sarb
iret
sub
lret
mov
mov
xor
js
dec
fmull
jp
push
mov
sub
push
aad
mov
pop
lahf
mov
dec
dec
mov
pop
loopne
mov
inc
ficomps
jb
push
js
add
pop
cmp
dec
mov
sbb
cli
push
dec
sbb
mov
movsb
fldcw
ficoml
xor
jg,pt
cltd
cmp
sbb
jecxz
add
cld
sti
push
xchg
aas
mov
pushf
mov
cmpsb
aam
fildl
popf
sub
cld
arpl
sarb
ja
mov
xor
mov
inc
iret
fwait
mov
xchg
adc
les
imul
lret
mov
mov
jmp
dec
inc
push
lods
repnz
sbb
leave
sbb
fwait
aaa
cmp
scas
cmp
xor
insl
sbb
push
cmpsl
mov
mov
fsqrt
aam
jae
aas
jne
push
push
pop
adc
push
dec
push
or
jno
mov
call
adc
fisttps
xchg
aaa
inc
icebp
xchg
mov
shll
add
sub
mov
push
fwait
in
adc
ja
stc
xchg
mov
jne
mov
push
rcrb
je
pop
imul
je
into
out
outsb
adc
scas
cmp
andb
in
in
loope
cmp
xor
dec
and
adc
xorb
out
rcl
xchg
xor
jns
xchg
int
cmp
lods
push
cltd
xlat
sbb
add
xchg
or
lahf
andl
cmpsb
fucomi
das
mov
out
push
outsb
data16
inc
cmp
add
pop
and
ficompl
ret
pop
int
push
xor
or
scas
jmp
stc
fidivl
cmp
push
scas
sar
les
add
add
call
ja
cltd
cmpsb
inc
sub
and
movsl
cmp
xor
push
sar
and
out
push
pop
push
repz
fsubrs
lea
ljmp
fstps
mov
sbb
push
push
adc
in
lods
fnstcw
inc
dec
pushf
pop
divb
and
push
pop
xchg
repnz
lds
xchg
aam
push
push
push
push
cmc
mov
or
mov
add
and
rol
cmp
inc
in
mov
imul
jle
in
sti
ds
xchg
popf
test
fucomp
es
push
inc
repnz
call
cmp
test
testl
pushf
adc
out
xor
cmp
xchg
dec
adcl
lahf
ret
push
outsb
mov
fisubs
lret
icebp
out
pop
and
aam
sub
sub
jge
push
adc
jnp
lcall
int
imul
mov
xorb
fisubl
imul
negb
bound
and
sub
imul
scas
lods
jecxz
shlb
jno
push
mov
andb
jb
rcl
pop
pop
test
inc
insb
sbb
ret
jae
in
cmp
outsl
sarb
mov
popf
ficoms
icebp
cwtl
divl
ret
mov
adc
mov
scas
imul
lea
pop
push
ja
pop
dec
lahf
daa
jmp
cmp
aas
maskmovq
mov
sub
lret
mov
roll
cli
rcll
fisttps
ret
shll
fwait
out
repnz
adc
pusha
sbb
mov
xor
sub
das
out
mov
pop
call
testl
cltd
int
xchg
test
sub
stos
aaa
lret
jae
sbb
xchg
subl
sbb
daa
sub
xchg
arpl
mov
or
pop
mov
sbb
rcrl
jo
or
les
pusha
and
int
xchg
icebp
into
xchg
iret
jne
mov
sub
or
into
sbb
xchg
imul
movsl
jecxz
popa
jmp
mov
mov
mov
mov
into
pop
dec
xchg
inc
xchg
rolb
jns
ss
mov
add
in
push
xchg
test
stos
pop
xchg
push
loope
lods
test
or
in
push
dec
mov
aas
lock
mov
and
sbb
fwait
outsl
mov
popa
or
or
ds
in
or
inc
addr16
jae
mov
prefetcht2
inc
ret
inc
loop
in
clc
cmp
jle
aam
fwait
mov
cli
rorl
inc
mov
fisubs
xor
cmp
dec
adc
repz
sub
cld
push
add
dec
rcll
push
mov
cmp
sbb
sbb
aas
push
adc
imul
repnz
ss
mov
mov
idivb
test
scas
pop
lcall
imul
sarl
mov
mov
gs
push
mov
stc
cmp
out
lock
sahf
stos
test
in
xchg
subl
cmp
lret
jne
loopne
in
mov
shl
lea
cmp
inc
push
xchg
fsubp
pop
xor
les
mov
test
push
mov
mov
cmp
arpl
clc
aas
fcomp
into
dec
fcomi
data16
lds
pusha
xchg
mov
adc
pop
jmp
sbb
int3
cmp
push
push
arpl
xchg
jp
sub
xchg
xor
mov
movsl
sub
stc
and
or
stos
xchg
sbbl
jp
sti
in
push
aad
xor
pop
out
push
icebp
movb
xlat
push
pop
lock
pop
xorl
push
xchg
scas
pushf
cmp
push
loope
add
xchg
xchg
push
push
inc
xchg
adc
or
aaa
and
xchg
std
mov
rcrl
lret
push
cwtl
and
in
cwtl
aad
sub
mov
in
cli
lock
in
dec
adc
sub
inc
ja
ret
icebp
pop
leave
or
sahf
xchg
and
or
enter
sub
adc
test
adc
jl
xor
outsb
jno
mov
sub
add
pop
cld
fs
and
clc
pusha
dec
js
cmp
ds
in
xor
hlt
push
lea
fiadds
xchg
andl
jns
sub
ds
adc
aad
xchg
lds
mov
sbb
xor
dec
and
inc
mov
mov
and
or
jo
pushf
sbb
cmove
or
push
fistl
mov
lcall
imul
xor
fcmovb
sub
iret
jmp
fsubp
xor
mov
sarb
jl
cmp
xor
push
jb
add
clc
jns
cwtl
push
iret
jmp
jmp
ret
cld
add
and
je
adc
cli
sub
mov
out
movsl
test
insl
scas
add
adc
pop
hlt
test
mov
rorl
lds
test
sbb
fistpl
cmp
jg
sti
xor
fmuls
sbb
cltd
lret
pop
ror
xchg
adc
push
mov
xchg
pop
inc
mov
xchg
add
stos
cmc
inc
jbe
adc
xor
gs
clc
push
inc
or
xchg
cmpsl
xchg
scas
add
lods
mov
add
js
dec
sub
rep
fstps
add
inc
xchg
mov
fs
sub
loope,pt
lods
cld
insl
fisubs
add
and
sub
icebp
cmp
xor
subb
fsubp
sub
aam
and
xlat
mov
insb
js
xchg
sbb
xchg
sahf
aam
rorl
hlt
lcall
sbb
shl
das
hlt
mov
push
sbb
sbb
imul
sub
and
mov
adc
outsb
cmp
jo
aam
push
or
xchg
adc
leave
pusha
or
mov
std
adc
pop
std
mov
mov
mov
xchg
sub
push
roll
push
cli
out
jmp
push
xchg
divb
sahf
push
and
pop
fcompl
popa
loop
stos
sbb
dec
xchg
pop
imul
xor
push
xor
cmp
sbb
inc
jno
nop
cmp
mov
jmp
in
out
ficoml
cmp
fstpt
fcoms
xchg
sarb
sbb
out
ja
cs
and
sub
lds
and
pop
jp
and
sub
aas
or
lock
inc
addl
shl
daa
sti
sub
fsubl
aaa
arpl
inc
pop
cmp
insl
fimuls
push
ret
xchg
out
call
mov
popa
add
mov
xor
adcb
xorb
mov
xchg
pusha
imul
cmp
or
sub
push
lea
mov
inc
jne
iret
sbb
mov
outsl
call
imul
mov
inc
cwtl
or
and
inc
lock
ds
movsl
sbb
mov
insb
cmp
mov
or
shlb
insl
out
scas
push
jge
cs
cmpb
into
ret
insb
xchg
ljmp
xchg
gs
mov
push
fs
mov
ficomps
out
or
hlt
xchg
and
jp
lret
movsb
inc
push
or
out
mov
mov
add
push
pop
inc
lds
push
es
imul
iret
and
push
aam
test
pop
pop
and
pop
js
rcll
pop
mov
push
ror
lret
add
adc
push
inc
icebp
push
cltd
push
das
movzbl
mov
adc
cmp
arpl
andl
sti
cld
inc
std
push
cmpsl
pop
lret
jl
loopne
test
neg
xor
cwtl
pop
sbb
test
nop
jbe
push
notl
cmp
sbb
mull
xchg
inc
icebp
lock
jp
daa
lret
and
imul
sub
lods
rclb
dec
pop
sub
in
jle
cmp
jge
lea
jnp
arpl
inc
cmp
sub
popa
test
add
lods
mov
sbb
test
insb
push
fwait
xlat
ss
sbb
mov
insl
mov
es
jp
push
xchg
jns
lret
pop
inc
jnp
or
ret
loop
jg
mov
inc
xchg
mov
mov
cli
pop
ljmp
inc
xor
aas
push
repnz
loopne
in
push
popf
mov
xor
mov
push
loop
mov
movsl
stos
sub
bound
add
arpl
xchg
das
fistps
pop
mov
rcll
sub
xchg
repz
in
cmpsb
mov
aaa
lea
pop
jo,pt
cli
mov
sbb
jnp
or
cmp
xor
aaa
fiaddl
ret
in
pop
subl
pop
stc
lret
cld
or
push
decl
cwtl
jns
in
pop
adc
ficomps
in
cld
clc
jle
in
subb
cmp
mov
mov
inc
sti
mov
jp
pushf
pop
loop
mov
xor
and
mov
cmp
pusha
cld
mov
add
insl
jnp
mov
sub
sahf
fisubrl
fs
add
and
aaa
and
mov
nop
out
xlat
stos
and
add
push
fbld
cmpsb
fcmove
lret
clc
inc
pop
out
and
shlb
int3
cs
jecxz
or
sub
fwait
lahf
stos
sub
fld
sub
frstor
aad
lcall
aam
adc
pop
mov
data16
shlb
int3
mov
aad
mov
js
xlat
mov
push
in
hlt
push
xlat
ret
xchg
test
push
and
out
icebp
mov
std
sbbl
xchg
iret
pop
insl
sub
call
popf
fs
call
mov
repz
jg
pop
add
pop
add
outsl
mov
into
sub
testb
adc
ljmp
fsts
std
repnz
mov
je
loopne
les
sub
out
imul
popf
ljmp
cmp
scas
stos
fucomp
insl
push
push
cmpb
hlt
insb
push
in
mov
pop
or
lret
repz
int
or
adc
mov
rcr
bound
aad
and
mov
and
xor
fnstsw
fadds
xchg
ljmp
push
pop
loopne
dec
push
pop
mov
nop
inc
xchg
adc
cmc
lcall
cmpsl
push
sbb
aas
loopne
xchg
pop
es
movsl
inc
add
adc
sub
addr16
outsb
decl
and
ja
popf
xchg
adc
xor
mov
les
xchg
leave
dec
dec
adc
jg
popf
cs
sub
and
in
aas
adc
mov
add
unpckhps
or
pop
movsbl
sub
cld
mov
xchg
sbb
dec
jmp
xchg
fwait
sub
sbb
push
insl
mov
sub
xchg
in
inc
stos
cmc
repnz
fs
xchg
test
bound
int
imul
das
mov
push
inc
sub
mov
pop
inc
movsl
pop
test
int
cwtl
xor
ja
fbstp
mov
outsb
fildl
adc
enter
mov
pop
imul
jmp
mov
inc
aam
adc
adcb
mov
test
and
dec
jnp
pop
call
mov
mov
shl
jno
push
sbb
fisttpl
orb
negl
iret
stc
lds
jae
iret
push
add
and
or
cmpsl
icebp
add
shlb
push
iret
out
dec
pop
lcall
sti
sub
insb
in
jb
xchg
insb
jp
pop
daa
test
test
dec
js
int3
pop
mov
ljmp
lods
fstpl
or
push
pop
pusha
dec
scas
or
lfs
addr16
hlt
push
or
push
or
dec
jge
scas
xor
mov
dec
loop
or
xchg
pop
jne
gs
jp
stc
and
notl
hlt
repz
stos
push
adc
loop
inc
pop
sub
sti
inc
cmp
jbe
cltd
and
pop
mov
pop
cmp
fdivs
lahf
push
xchg
lcall
add
div
mov
adc
in
lds
mov
ret
cmc
sbb
and
pop
cmp
sbb
faddl
lods
push
add
xlat
xor
mov
faddl
mov
cmc
ficomps
adc
popf
mov
hlt
cmp
mov
loopne
sub
jns
jns
or
cwtl
cmova
jmp
shrb
and
pop
mov
mov
iret
ret
mov
iret
into
add
dec
pop
mov
stc
and
inc
dec
and
adc
pop
or
jnp
daa
sti
push
in
test
test
jnp
clc
inc
jp
jnp
pop
mov
in
jno
dec
adc
cmp
popf
mov
adc
xor
test
adc
ret
movsl
adc
cmp
ds
cmpsl
mov
fnstcw
dec
mov
or
insl
dec
mov
fwait
xchg
lods
cmp
sub
sahf
imul
mov
sbb
jns
popa
cmpsb
xor
mov
nop
push
mov
mov
fcomip
popf
pop
adc
pop
dec
mov
gs
cmp
fs
adc
imul
imul
inc
mov
jns
fidivrl
pop
push
mov
fldenv
push
push
add
cmp
call
sti
ja
add
mov
fistps
cmc
sub
mov
test
or
mov
subb
sar
insl
sbb
fstpt
cs
adc
daa
push
fstpt
int3
int3
cmp
mov
adc
mov
je
pop
mov
mov
mov
dec
mull
into
adc
out
and
jbe
cltd
mov
jp
dec
pusha
shrl
xor
sbb
pcmpgtd
cltd
lods
enter
jne
sub
leave
lea
adc
stc
cmp
and
push
test
in
cmpb
aad
enter
or
pop
dec
push
sub
outsb
mov
jne
sbb
and
lret
out
mov
push
insb
mov
and
ja
test
les
scas
shl
push
outsb
lods
les
mov
mov
lds
subl
cmp
pop
lods
jmp
imul
mov
sbb
pusha
daa
outsb
cmp
icebp
and
sti
subb
dec
cmp
push
cli
dec
stc
lret
mov
cltd
sbb
cltd
rcrl
adc
mov
daa
hlt
or
pop
ret
sbb
stos
pop
inc
aad
int
push
mov
sti
int3
cmp
pop
aad
les
push
adc
lret
dec
sub
inc
ja
dec
std
adc
test
mov
sub
clc
ret
aaa
mov
cmp
jmp
sbb
cmpsl
push
fwait
aad
push
lahf
mov
fisubl
add
lcall
jns
in
mov
cltd
mov
hlt
lret
jl
inc
xchg
push
addr16
or
mov
jbe
dec
cmp
dec
pop
pop
outsb
xchg
add
jae
ret
pop
sarl
pop
or
and
shr
pusha
les
test
jne
lods
xchg
add
adc
subl
orb
cli
lock
push
pop
out
cmpsl
inc
pop
out
out
pop
and
add
inc
out
in
jns
inc
scas
stos
xchg
mov
cmovns
insl
xchg
dec
jb
add
and
or
aas
fcoml
fidivs
push
dec
pop
mov
fistps
pushf
push
dec
pop
in
pop
imul
mov
push
gs
jg
fwait
mov
mov
mov
jge
pop
out
lea
insl
ds
push
loopne
insb
sbb
lock
jbe
out
pusha
sti
xchg
repnz
lods
in
mov
insb
clc
inc
sbb
cmpb
or
fldl
mov
mov
adc
xchg
adc
inc
inc
adc
adc
mov
int3
loop
push
mov
inc
pop
call
in
bound
aam
cmp
fcomps
push
and
arpl
lock
loop
fs
mov
iret
xchg
and
test
adc
mov
mov
add
rcrb
outsb
mov
xchg
and
lock
inc
xor
sub
cs
ljmp
pop
js
jbe
imulb
jae
shl
ret
lahf
lret
fucom
ficoml
and
addr16
repnz
push
push
xchg
push
jo
cltd
jge
adc
pop
xchg
xchg
fistps
sti
jge
shll
xor
icebp
xorl
push
es
xchg
xor
fs
call
inc
mov
mov
insl
fdivrl
test
aas
or
push
xor
or
mov
pop
add
cmp
push
ss
lods
push
dec
push
dec
mov
sbb
imul
jecxz
add
pop
mov
setl
adc
mov
in
ds
lods
adc
lret
and
and
sbb
into
scas
jg
in
cmp
icebp
out
aas
ret
mov
mov
push
push
iret
inc
filds
adc
insl
cmp
jecxz
cmp
mov
rorl
outsb
stc
xchg
add
inc
xor
insw
mov
cltd
xchg
out
or
push
call
cltd
jbe
inc
or
mov
sti
aam
lret
std
popf
jns
scas
test
fwait
shrl
cltd
pop
jo,pn
hlt
adc
loope
xchg
xchg
mov
xor
push
loope
mov
dec
test
mov
or
dec
jmp
sub
test
cmp
mov
push
inc
jns
mov
pop
insl
mov
mov
add
popa
inc
mov
shrb
push
faddl
adc
mov
or
incb
sahf
lock
mov
repnz
insl
cltd
cmpsb
push
cwtl
or
mov
sti
adc
cwtl
mov
pop
frstor
push
filds
jecxz
mov
hlt
cmpsl
mov
xor
insl
jno
push
push
testb
mov
cmp
or
pop
adc
jb
out
pop
push
fsubrp
mov
ret
adc
enter
cmc
decb
and
lcall
jp
movsb
gs
sbb
push
sub
adc
repnz
lods
xor
cwtl
sub
jmp
imul
sub
add
dec
test
adc
xor
sbb
add
movsb
dec
sti
dec
mov
add
xchg
lds
and
pop
sti
orl
mov
dec
divl
idivb
xchg
adc
mov
pop
call
stos
jecxz
or
push
stos
pop
sbb
ret
std
mov
cli
sbb
and
push
popa
mov
pop
xchg
aaa
cmp
cmp
jb
cmpsb
ss
test
dec
mov
or
mov
push
in
in
cmpsb
push
mov
cmc
insb
or
cmc
dec
inc
subb
aam
stos
arpl
daa
stc
push
adc
xchg
xchg
mov
pop
mov
popf
jbe
stc
pop
jp
jmp
sbb
add
jecxz
insl
inc
leave
lcall
dec
mov
push
pop
std
ljmp
int
push
push
movsl
fadd
mov
dec
xchg
or
vpcmpeqw
mov
testl
or
out
cmp
addb
jne
cmpsl
inc
lock
jmp
mov
cmp
sbb
mov
in
ficompl
fwait
movsl
mov
push
daa
dec
jmp
lret
repnz
xor
imul
out
adc
pop
lret
inc
into
or
sbb
or
and
xor
sbb
mov
ss
push
repnz
jb
push
xchg
test
mulb
stos
mov
sub
push
aaa
std
stos
sub
std
push
pushf
or
sbb
dec
jecxz
xlat
or
or
fbstp
sbb
insl
orl
and
mov
into
test
in
push
fdivl
dec
mov
bound
pop
fcompl
xor
sbb
cltd
jp
mov
lods
xchg
mov
cmpsl
xchg
pop
jne
or
dec
fisttpll
pop
scas
mov
sub
insl
xchg
int3
lods
aam
ss
dec
out
loopne
sub
int
jne
lods
test
sbb
popa
ljmp
insl
mov
and
adc
and
pop
dec
jmp
sti
jp
dec
arpl
outsb
xor
stos
push
pop
lods
cmp
clc
repz
lahf
stc
imul
fcmovnu
int3
adc
cmp
fs
and
lods
add
push
mov
mov
aad
das
push
dec
cmp
fwait
call
pop
dec
test
xor
xor
in
cmp
dec
xchg
fwait
mov
in
adc
subb
mov
cmp
mov
cld
enter
push
in
call
or
jecxz
mov
aad
mov
adc
enter
and
cs
sahf
inc
adcb
mov
imul
inc
sbb
ja
jle
movsl
imul
inc
aas
test
sbb
nop
lret
xor
add
insb
pop
jnp
push
aas
jno
shrb
in
shl
xchg
or
sub
test
mov
outsl
pop
cmp
aaa
mov
mov
cmp
fisubs
outsb
jnp
call
stc
dec
mov
loopne
push
ljmp
repnz
jg
test
scas
mov
or
aam
push
xor
andl
aad
outsl
cmpsb
jns
dec
dec
les
dec
cmc
mov
jns
push
xor
sub
nop
jno
repz
push
leave
cmovl
ds
mov
jecxz
cmp
enter
or
repz
inc
ret
dec
add
sbb
mov
rcrl
mov
and
sbbl
xor
sbb
lods
xchg
negb
sarl
lret
js
fmuls
jbe
movb
shrl
call
push
mov
int3
sbb
jmp
sbb
mov
fs
jb
inc
push
inc
xor
dec
out
dec
loop
mov
filds
sahf
pushf
pop
jp
xchg
into
mov
ud0
push
inc
or
in
mov
dec
es
cmp
movsl
fcoms
jno
or
or
xchg
sbb
sub
mov
add
je
push
or
rcrl
mov
roll
jae
mov
mov
cmp
subl
inc
fcoms
test
jns
fsubrs
adc
dec
fcmovbe
dec
outsl
shll
sub
dec
xor
stc
mov
in
stc
es
cmpsl
push
mov
pop
adcb
mov
cmp
test
arpl
adc
fwait
rorl
xchg
dec
pop
inc
xchg
hlt
stos
jge
bound
repnz
loopne
lret
mov
out
lret
push
clc
push
pop
into
xchg
out
aad
out
jns
addr16
mov
ljmp
mov
leave
and
rcrb
call
mov
icebp
fcom
out
aas
int3
sbb
insl
jb
jp
js
cs
lods
fcmovnu
dec
push
pop
aaa
mov
add
jl
or
inc
mull
das
and
xor
fxch
ret
inc
inc
add
arpl
adc
and
hlt
popf
and
repnz
jg
mov
xchg
dec
sub
pop
mov
jnp
cli
stc
adc
ds
push
push
mov
outsb
jae
int3
inc
xor
cwtl
sbb
ret
and
sub
jmp
pop
and
inc
add
mov
sbb
add
fsubs
or
mov
shll
add
inc
hlt
pop
out
xor
pop
out
mov
sbb
push
sarb
add
jne
setae
filds
adc
shlb
and
sti
in
int3
sti
fstpl
lds
cld
push
aaa
fldt
pop
loopne
jmp
and
add
add
cmp
sub
xor
aaa
adc
fistpl
jb
inc
push
out
aaa
stc
icebp
and
mov
mov
push
mov
js
sbb
ret
popf
dec
jae
pop
sar
pop
data16
fimuls
jnp
cmc
sub
xor
in
fisttpl
inc
jmp
loopne
aas
inc
push
movsb
push
push
ljmp
sti
push
mov
or
jecxz
mov
push
ds
jno
adc
lea
das
mov
jbe
xlat
pop
into
pop
push
sbb
adc
cmc
mov
pop
sbb
and
daa
jge
add
cmp
or
adc
push
idivl
jb
xchg
aam
stos
dec
scas
cmp
xor
and
fnstenv
orl
pop
test
adc
xchg
dec
aam
push
mov
mov
cmpsl
mov
sub
lcall
fwait
add
jo
inc
jns
mov
sbb
mov
push
pop
fwait
pop
js
mov
mov
adc
sbb
jne
hlt
push
jp
loopne
int3
fstp
xor
lods
fmuls
mov
mov
fsts
repnz
call
push
pop
and
daa
inc
pushf
inc
inc
add
gs
dec
enter
or
xchg
loopne
std
out
js
xchg
and
mov
push
std
cmp
repz
jg
aas
cmp
cltd
mov
cltd
push
inc
sbb
loopne
sub
ficomps
dec
fs
out
call
int3
pop
out
cmp
in
or
loop
out
test
mov
into
mov
jno
jge
sbb
aad
sub
push
pop
scas
jp
pop
fstps
outsb
pop
rcrl
dec
inc
imul
or
scas
push
xchg
js
cli
dec
mov
mov
fs
add
sbb
push
pushf
pop
pop
test
loope
test
int3
in
fcompl
push
jle
popf
ret
jne
jg
daa
dec
cltd
imul
mov
in
pop
xchg
scas
mov
jns
imul
xor
inc
or
adc
popa
jnp
mov
jg
fstpl
mov
or
lods
mov
fisttpl
popa
repnz
in
inc
or
rolb
pop
inc
pop
push
dec
enter
mov
pop
mov
sub
pusha
inc
fildl
inc
mov
inc
push
sbb
sub
mov
xchg
mov
test
rcrb
add
pop
xor
test
mov
sbb
fbstp
hlt
pushf
dec
add
mov
jnp
or
pop
call
sbb
and
cmpps
mov
lea
movsl
lahf
inc
rcrl
push
inc
push
xor
or
cmp
fwait
add
jnp
js
add
in
dec
sbb
incl
xlat
adc
jmp
cmp
pop
les
ret
cmp
or
lods
imul
mov
das
cwtl
push
fdivrs
loopne
sbb
fstps
dec
pusha
jp
orb
nop
outsb
sbb
sbb
outsl
ljmp
lret
and
jle
ds
xlat
inc
nop
fsubr
xchg
hlt
mov
xbegin
pop
pop
call
mov
xor
mov
leave
ss
stc
pop
xchg
inc
outsb
mov
and
jmp
daa
lods
out
xor
push
mov
jecxz
leave
xorl
iret
stos
and
push
cmp
mov
mov
mov
js
and
cld
frstor
mov
imul
out
mov
loop
jno
inc
or
pop
jns
pop
adcl
and
icebp
xchg
out
icebp
subl
add
and
xor
js
shrb
push
sbb
std
mov
xor
jg
sbb
xchg
dec
jp
inc
pop
movsl
adc
sub
stos
xor
inc
dec
dec
and
dec
xchg
jg
sub
nopl
fcompl
adcl
les
dec
inc
std
jns
cmovo
shll
lods
add
rcrb
jns
mov
jb
js
xor
rcr
das
gs
xchg
aad
add
mov
pop
dec
cwtl
orb
and
pop
inc
and
in
jnp
xlat
shlb
out
mov
xchg
mov
aaa
dec
fmulp
test
dec
notl
push
mov
lret
lret
mov
aad
clc
ficomps
pop
add
pop
xchg
xor
inc
mov
dec
iret
cmpsl
cmp
dec
movsl
jno
js
cmp
dec
nop
loope
cmpsb
push
popa
movsb
out
xchg
mov
jne
aas
xchg
and
xchg
xor
sbb
aad
js
fucom
xor
pop
add
mov
pushf
mov
cwtl
pushf
pop
inc
imul
cmc
jmp
aaa
adc
in
cs
adc
shr
jne
sbb
das
xor
out
xchg
sub
jnp
stos
xor
dec
xchg
shll
aad
pusha
lret
inc
lcall
dec
dec
mov
in
adc
lret
xor
test
push
mov
shl
and
sahf
pusha
test
testl
fdivrs
jge
mov
and
xchg
xor
push
xorb
in
add
jo
movsl
cmp
push
repz
add
cmc
clc
lsl
shll
roll
push
out
leave
fnstenv
xchg
fisubl
out
xchg
dec
int3
in
outsl
mov
movsl
mov
in
push
sbb
mov
sub
loope
and
cmp
fs
pop
jb
cmp
xchg
inc
test
sbb
mov
loop
ds
hlt
inc
in
adc
add
jecxz
sub
test
cmpsb
pusha
adc
das
int
or
push
pusha
cmp
fwait
mov
cmp
sub
shlb
mov
ja
ret
mov
pop
xchg
mov
iret
adc
xchg
lods
clc
jno
sarb
popa
aam
mov
int3
scas
test
fiadds
xchg
mov
stos
and
push
mov
out
pop
mov
add
dec
daa
int
inc
roll
mov
mov
jge
popf
add
nop
loope,pn
fidivs
add
sahf
lods
pop
push
cmpsb
mov
dec
push
hlt
mov
repz
lret
idivl
fists
xchg
xor
rolb
das
mov
xchg
jbe
imul
in
cwtl
xor
cmp
mov
pop
clc
cmpsl
mov
test
cmp
mov
xchg
fisubs
pushl
jno
setne
mov
adc
pop
and
adc
das
xchg
jl
outsb
stc
inc
sbb
cmpsb
clc
lret
add
fwait
dec
loop
xchg
loop
popf
call
in
pop
pop
or
aaa
loop
pop
cmp
fsts
enter
inc
pop
in
ja
test
xchg
mov
pop
scas
out
cmp
mov
pop
jmp
das
ja
test
cmp
cmp
dec
mov
rcr
dec
jb
sahf
pop
inc
cli
lret
sub
push
dec
dec
mov
movsb
or
pop
js
xor
lcall
sub
pop
loopne
and
push
mov
pop
data16
dec
pop
jno
jo
cmp
mov
mov
adc
jp
mov
loopne
xchg
jns
add
imul
push
cli
jmp
push
cld
cmp
add
int
repz
mov
sbb
pop
xchg
xchg
in
aaa
jne
sub
hlt
repz
push
and
mov
mov
pop
sub
sbb
lret
adc
pop
or
outsb
in
xor
jg
cmpsl
adc
cmc
aad
cmpsb
push
pop
inc
shl
mov
xchg
aam
scas
cmc
shrb
pop
mov
sbb
loopne
test
and
ds
xor
push
dec
aad
jno
lret
ljmp
inc
pusha
mov
out
out
adc
pusha
rolb
mov
mov
jo
ja
hlt
scas
xor
mov
inc
cmp
test
iret
inc
mov
aaa
daa
xor
dec
xchg
mov
loopne
add
lahf
xor
popa
mov
ds
shl
ss
lock
xor
and
pop
adc
cmp
or
jg
and
or
or
cmpl
cmp
dec
or
pop
and
in
or
mov
adc
lock
ffree
je
lds
add
push
popf
mov
int3
mov
push
insl
jne
bound
push
stos
repnz
shr
pop
cmp
addr16
xchg
xchg
pop
sub
mov
or
add
nop
ss
and
sbb
cmp
mov
adc
aaa
jmp
adc
adc
lock
ss
dec
push
ret
lock
je
adc
fidivs
xchg
mov
adc
loope
xchg
int3
loopne
cmp
and
vmaxpd
sar
divl
out
lock
inc
icebp
mov
in
dec
mov
ss
mov
out
xor
push
insl
pop
mov
mov
mov
and
fcompl
sbb
mov
fnstcw
cmp
or
rclb
jno
adc
mov
sub
jmp
mov
aaa
test
mov
jmp
lret
dec
inc
ret
aaa
cmc
daa
or
jnp
clc
mov
adc
jg
out
outsl
shll
pop
insb
or
in
stc
daa
arpl
xchg
push
jg
pop
and
pop
outsl
pop
test
movsl
add
nop
sti
cmpsl
push
mov
sbb
pop
in
add
xor
inc
outsl
or
pop
add
clc
stos
inc
mov
inc
aam
leave
dec
fwait
xchg
xlat
int
push
jmp
mov
mov
lret
mov
push
lds
jno
fisttps
imul
fsubl
cmpsb
dec
adc
mov
lds
ss
xchg
mov
in
jecxz
insl
adc
sub
mov
jecxz
push
add
sub
and
adc
pusha
ja
or
mov
sub
dec
xchg
push
idiv
cmpsb
clc
hlt
xlat
inc
xlat
das
push
iret
pop
adc
negl
sub
sbb
popf
push
dec
test
cld
adcb
mov
push
fnstsw
push
sti
xor
pushf
dec
aas
mov
and
jo
in
ja
imul
push
popa
shlb
xor
dec
rorb
and
cld
xchg
adc
mov
and
dec
adc
test
std
in
or
xor
popa
dec
or
ret
int
cs
repz
lea
push
xchg
insb
in
cli
xor
push
test
inc
jae
mov
mov
enter
cmpb
lcall
sub
lds
mov
cwtl
ja
and
cli
push
xor
push
push
xor
jle
or
cmc
push
add
loope
lods
clc
jne
call
xchg
imul
ds
jnp
int3
dec
sub
clc
add
stos
lea
xchg
aas
xor
fistps
xchg
jno
stos
sbb
xor
xchg
add
stos
xor
in
gs
daa
aaa
xor
and
daa
in
sub
dec
sub
aas
nop
mov
xchg
push
xor
int
loope
nop
int3
push
js
stos
hlt
inc
fwait
aam
cwtl
jns
jmp
ljmp
mov
and
pop
xchg
stc
repnz
inc
cmp
mov
nop
mov
rclb
mov
add
add
add
xchg
fdivrl
push
shlb
pop
call
jbe
test
repz
pop
aam
jecxz
pop
out
dec
and
pop
xor
movsb
lret
pop
xchg
loop
and
scas
push
jbe
lcall
jbe
mov
pop
or
pushl
sbb
cmp
cltd
shr
mov
cmp
mov
test
xchg
popa
pop
lcall
cltd
pop
fucomp
es
adc
stos
popa
jge
cmp
push
in
xchg
add
pop
jnp
sbb
mov
mov
aas
mov
xorb
fcmovnbe
mov
inc
rcrl
or
adc
lcall
mov
jl
fstpt
jecxz
rorl
outsl
add
insl
in
imulb
and
mov
add
aam
loopne
xor
out
inc
add
clc
xchg
mov
xor
dec
clc
sbb
push
mov
stos
xor
aas
adc
iret
xchg
ja
mov
cmc
insb
lahf
call
repnz
stc
jmp
cltd
mov
xor
jo
stos
pop
mov
ja
jecxz
js
dec
push
sbb
bound
xchg
lret
cmp
adcb
aad
pop
fcomp
xchg
jmp
call
mov
cld
clc
pusha
fstpl
rcrb
inc
xor
ljmp
dec
mov
out
call
pop
aaa
cwtl
ds
ret
rorb
pusha
out
pop
inc
mov
ss
out
dec
xchg
cltd
jae
cmpsb
jnp,pn
enter
scas
fwait
inc
cmpl
cmp
mov
leave
or
pop
je
idiv
fcmove
lds
int3
push
push
cltd
xor
xor
and
jne
loope
int3
mov
pop
aas
in
mov
xchg
insb
ds
dec
scas
das
or
and
repz
gs
ja
pop
mov
and
push
lock
test
xor
aam
add
pop
mov
xor
cmc
pop
mov
pop
mov
lret
enter
mov
or
jb
sub
lahf
fs
or
in
ds
lahf
stos
lock
iret
pop
pop
mov
sub
je
xor
das
imul
fistpll
ss
xor
scas
iret
nop
mov
call
or
hlt
push
inc
test
xor
dec
jae
mov
sub
sbb
popa
popl
loop
mov
nop
sub
push
idiv
repnz
addr16
aad
movsb
stos
pop
mov
scas
test
mov
sahf
rcrl
mov
inc
data16
ljmp
outsl
fcoml
xlat
insl
jne
push
push
sub
push
rcll
dec
pop
lods
push
enter
pop
loopne
xchg
mov
mov
scas
dec
sbb
loope
push
mov
into
lahf
push
adc
cltd
mov
mov
mov
sbb
std
pop
pushf
dec
cmp
mov
mov
jle
add
cmp
shl
outsl
jle
push
out
add
jo
xchg
mov
inc
jmp
and
add
lds
mov
fs
idivl
xchg
loop
mov
pop
and
inc
shll
test
xchg
shrb
icebp
cmp
mov
xlat
cmp
movsl
les
sub
add
in
out
lock
push
mov
nop
fnop
lret
mov
xor
adc
ret
inc
imul
cwtl
cmpsl
mov
cwtl
push
inc
fcmove
jo,pn
fstps
je
xor
fidivrs
jg
ja
mov
shlb
movl
stos
pop
xchg
out
mov
mov
mov
outsl
or
mov
cli
je
inc
stos
out
sub
stos
daa
or
add
push
mov
mov
xchg
push
add
and
lahf
pop
inc
xchg
ss
out
mov
push
les
js
adc
in
pusha
mov
fistpl
or
iret
pop
add
addr16
pop
sbb
pop
stos
add
adc
dec
xchg
sti
scas
cmp
movsb
cli
leave
arpl
lock
xor
out
mov
xchg
inc
or
jne
and
mov
js
mov
jg
inc
mov
jmp
in
outsb
or
cmp
add
jg
div
push
jno
loope
inc
aam
mov
fildl
pop
mul
int3
xchg
mov
jle
dec
cmp
or
add
xchg
call
out
shlb
adc
mov
fistl
loopne
sub
inc
lcall
dec
add
ljmp
fcomps
mov
jecxz
cmp
push
sbb
test
aaa
xchg
cmp
xor
in
push
out
pushf
and
cmp
stos
cmpsl
jae
iret
jl
mov
adc
mov
jle
call
push
lea
inc
sahf
ss
aas
out
sub
adc
xchg
dec
jmp
xchg
add
push
cli
sbb
outsb
inc
fwait
xorb
pop
stos
imul
ror
dec
into
push
add
pop
int3
push
cs
insb
mov
sbb
fiaddl
divb
dec
in
mov
pop
popa
mov
jne
imul
xchg
mov
lret
push
mov
aaa
popf
cmp
pop
es
loop
fpatan
xor
add
lcall
sbb
cld
sub
idivb
push
mull
inc
jns
xor
jns
jge
sti
mov
lds
andb
mov
xchg
dec
mov
adc
inc
xchg
ljmp
push
dec
clc
ljmp
inc
pop
daa
inc
mov
push
leave
in
adc
popa
lods
sub
jnp
faddl
and
jmp
imul
push
addr16
mov
push
idivl
pop
leave
pop
in
sub
sbb
iret
adc
push
and
and
xlat
out
sub
push
jge
outsl
jnp
lea
pop
repz
or
sbb
fptan
fidivl
sub
pop
jle
cli
jae
dec
test
cmc
lahf
mov
inc
xchg
cmpsl
sub
add
adc
stos
adcl
daa
sbb
pop
mov
dec
push
test
lcall
sbb
arpl
lods
mov
lods
mov
xchg
dec
fiadds
cmp
jnp
nop
shll
adc
inc
mov
mov
and
pushf
into
incb
out
hlt
loopne
test
cs
and
inc
clc
nop
int3
leave
je
push
mov
lock
lds
adc
push
add
inc
add
push
in
loope
ljmp
cmpb
lock
mov
or
jno
lds
sbb
mov
out
popf
imul
jno,pn
cmp
je
pop
std
mov
mov
mov
mov
bound
jbe
mov
push
sbb
out
push
xchg
call
into
sbb
int
insb
adc
out
testl
or
adc
scas
pushf
test
loope
xor
xchg
push
les
je
int
daa
mov
and
into
addb
xchg
sbb
fiaddl
popf
push
scas
pop
es
xchg
add
xchg
mov
movsb
mov
dec
mov
jae
mov
mov
jno
xor
lds
pushf
push
testl
les
ret
pop
out
adc
lock
mov
sahf
xchg
sbbl
dec
mov
jo
mov
sahf
or
dec
cld
clc
mov
addr16
jbe
enter
mov
rclb
into
jle
dec
roll
sub
sbb
std
test
push
sbb
arpl
frstor
inc
rcr
push
sub
pop
outsl
mov
xlat
xchg
xchg
cmp
sbb
add
movsl
jmp
fiadds
dec
or
js
adc
mov
adc
decl
sti
loop
sub
adcb
jne
ljmp
xor
inc
repz
mov
sbb
and
icebp
xchg
imul
inc
sbb
hlt
lods
popa
std
jne
enter
mov
cmp
pop
sahf
inc
sub
cmc
xor
flds
mov
add
sub
dec
mov
sbb
sub
mov
xchg
imul
mulb
clc
add
scas
push
or
mov
jae
clc
sbb
and
lods
xlat
and
sbb
in
sbb
imul
hlt
sub
cltd
dec
adc
hlt
and
xlat
adc
add
sbb
repnz
mov
inc
out
fwait
inc
mov
sub
imul
test
xchg
sub
mov
ja
jmp
and
into
int
push
ss
stos
incb
mov
movsl
mov
xlat
adc
push
lods
mov
jne
xchg
xchg
cmp
js
mov
int3
repz
pop
sub
pop
xor
xlat
xchg
in
clc
sub
xor
pop
adc
lods
movsl
xlat
cmp
cs
addr16
jle
int
or
sub
push
hlt
xor
aam
inc
pop
outsl
and
mov
lret
jnp
sub
jecxz
enter
pop
xor
shrl
sbb
les
pop
mov
mov
out
iret
insb
movsb
test
gs
movhps
xchg
pop
ja
mull
sbb
aaa
inc
jb
int
aas
mov
push
sub
repz
or
lret
in
cmp
movsb
insl
scas
xchg
cmp
out
inc
gs
adc
mov
mov
push
stos
sbb
mov
cmp
ficoms
push
pop
rcl
scas
rcrl
popa
pop
mov
adc
xchg
cwtl
call
and
push
daa
inc
sub
lods
sub
dec
cmpsb
xlat
xchg
push
out
mov
jb
sbb
sub
or
mov
dec
mov
xchg
pushf
stos
mov
iret
hlt
pop
loopne
push
test
aaa
push
xchg
scas
sub
dec
popa
mov
dec
jmp
adc
call
or
fwait
sbb
xlat
inc
pop
inc
fnstenv
pop
sub
mov
xor
out
adc
or
inc
sbbl
repnz
sbbl
mov
ja
stos
jmp
inc
gs
xchg
cmc
push
xchg
pusha
fwait
pop
mov
cmp
dec
xor
sbb
mov
push
sub
cli
dec
xor
outsl
inc
add
mov
mov
jb
cmp
pop
cmovb
xlat
jne
jecxz
arpl
jae
iret
xchg
lods
mov
mov
sub
add
cmp
sbb
fdivs
mov
mov
sbb
test
jae
adcb
push
loope
aaa
data16
test
adc
fwait
jbe
lahf
sbb
int
lods
dec
pop
shr
rorb
dec
push
adc
or
out
mov
cmp
cmc
leave
out
in
cs
jb
stc
add
add
dec
push
imul
outsb
jge
mov
js
inc
cmpsl
fidivl
and
jbe
lods
addl
jl
mov
jge
dec
fsts
loope
lods
cwtl
sub
mov
xlat
fdivrl
loop
fnsave
jo
ljmp
dec
notl
into
call
arpl
cld
add
cmp
mov
aaa
fwait
cltd
cltd
insl
jbe
jae
insl
sarb
push
pop
sbb
clc
gs
or
push
jmp
xchg
pusha
jl
xchg
hlt
jp
or
jg
jnp
in
fidivs
lock
shr
lock
xadd
inc
add
pop
cltd
out
jb
js
mov
push
imul
add
mov
les
inc
xchg
sub
orb
fldt
pushf
pusha
aam
sub
cltd
test
roll
pop
push
fdivr
cmp
dec
mov
sbb
fmull
std
ror
inc
xor
inc
push
jmp
jns
push
negb
mov
push
in
xor
sub
mov
mov
je
xchg
push
fmull
jecxz
movsl
inc
pop
lock
xor
cs
push
sbb
jge
repnz
add
int3
sbb
xchg
daa
mov
push
sbb
adc
cmpsb
adc
mov
cld
lret
out
jo
ret
call
xchg
addr16
xchg
loopne
mov
sbbb
dec
imul
push
pop
lock
dec
jb
inc
mov
into
lret
dec
sub
shll
pop
out
sub
xchg
sbb
mov
adc
sbb
xor
add
cmpsb
push
pusha
mov
ljmp
adc
data16
sarb
shr
dec
cmpsb
std
mov
lcall
adc
movsl
push
imul
push
cmp
shrl
xor
aad
aaa
stos
repz
cmp
push
je
mov
les
cmp
fmuls
fs
sub
xlat
pop
mov
adc
pop
push
inc
sarb
push
cmp
xor
xor
movsb
push
rorb
mov
outsb
jg
inc
add
pop
inc
add
inc
mov
repnz
aas
lahf
stos
pop
das
add
inc
xchg
flds
inc
push
addb
lock
into
jno
imul
mov
xor
popf
adc
or
or
push
out
xor
mov
lods
pop
or
cltd
loop
dec
pop
jg
movntps
or
jnp
leave
es
faddl
ljmp
sub
sub
nop
add
push
les
das
pop
push
icebp
sahf
js
rolb
mov
dec
xchg
pushf
sti
ret
xchg
and
mov
jle
jmp
adc
mov
and
and
bound
push
aas
lds
stos
push
and
jecxz
or
and
mov
mov
arpl
lret
xchg
inc
std
mov
test
pop
inc
fwait
push
bound
sbb
gs
cmp
or
and
imul
add
loop
adc
adc
ds
sarl
lret
stc
adc
outsb
add
aam
insb
pushf
pop
xchg
leave
fstps
dec
lods
js
data16
bound
subb
or
fadds
sbbl
inc
xchg
rclb
into
mov
jns
jmp
jp
enter
scas
inc
sub
lret
sub
or
and
or
or
aas
xchg
fdivr
fidivl
int
mov
jbe
int3
loopne
push
xchg
int3
test
mov
jge
ja
xor
fcmovu
scas
ljmp
repz
aam
test
push
movsb
out
mov
add
pop
sbb
and
push
inc
inc
add
add
mov
adc
orb
pop
sti
adc
mov
f2xm1
dec
mov
ficomps
int
inc
fbld
inc
ret
pusha
push
scas
ret
nop
xchg
repz
mov
stos
and
pop
dec
fisubs
jne
xlat
cmp
mov
sti
dec
nop
dec
push
jb
push
mov
icebp
orb
jo
pusha
ljmp
push
mov
xor
mov
adcb
ret
ret
iret
shrb
out
movsl
xchg
loope
xor
ja
dec
inc
pushf
mov
testb
mov
pop
add
push
sahf
leave
dec
inc
dec
adc
and
xchg
insl
pop
lods
and
movsl
mov
mov
fidivl
mov
loopne
jne
fst
push
add
outsb
outsl
pop
std
lods
test
cmp
and
fmull
inc
adcl
inc
mov
movsl
mov
testb
not
ljmp
or
sbb
xor
mov
das
lahf
test
fmul
cmp
jmp
inc
jp
mov
int
stos
xor
jne
out
push
fisubrs
jb
inc
inc
pop
stos
adc
scas
jmp
adcb
xchg
mov
std
jnp
test
imul
lods
pop
stos
mov
lods
push
ljmp
mov
rcrb
add
dec
cmp
and
addr16
dec
out
add
mov
out
insl
push
sar
daa
fldt
xchg
fidivs
xor
mov
ja
testl
jae
bound
scas
mov
sub
daa
inc
push
arpl
mov
clc
and
ud2
idivb
mov
rcl
and
lods
dec
jmp
pop
popa
std
mov
push
stos
fincstp
cmp
jno
xor
sub
mov
mov
aam
and
pushf
pop
iret
mov
mov
outsl
or
cltd
inc
mov
jp
sub
adc
xchg
rsqrtps
push
stc
pop
sub
xchg
inc
jmp
xor
mov
nop
and
or
test
bound
test
cmpsl
insb
inc
push
mov
add
shll
dec
out
ja
push
scas
and
xchg
dec
and
push
mov
or
out
popa
jae
xchg
icebp
clc
out
dec
shl
iret
jg
and
jbe
test
push
lods
add
cmp
dec
ljmp
push
inc
push
je
pop
insl
mov
lea
out
cltd
lock
push
es
cmpsl
repnz
stos
jo
repz
fidivrs
mov
jbe
std
cwtl
and
xor
in
into
fucom
mov
movsl
xchg
mov
int
jno
es
sub
jno
je
dec
fld
dec
xor
xor
lods
push
fadds
dec
fsubrs
popa
mov
jp
dec
push
loop
fcoms
push
pop
not
mov
dec
mov
sub
add
or
loopne
xchg
xchg
test
and
push
pop
add
fsts
add
lock
jl
inc
push
add
mov
sub
inc
js
add
mov
jp
fcmovbe
les
lea
inc
cs
js
sub
pushw
mov
jge
push
xor
inc
pop
sbb
sub
mov
xchg
test
dec
in
mov
and
adc
test
mov
or
mov
push
sub
adcl
lcall
dec
jmp
sub
lods
cmp
shll
out
sub
fs
push
ss
add
cmp
pop
in
loop
xchg
in
iret
cmp
mov
movsb
rcrl
ds
and
out
hlt
mov
pop
jo
dec
inc
loope
xchg
pcmpgtd
cmp
fucomi
notl
sub
sbb
movl
push
dec
test
ret
insl
pop
or
jnp
xlat
pop
insb
or
out
gs
inc
push
pop
mov
inc
push
fstpl
loope
cli
mov
rorb
mov
mov
inc
leave
and
mov
mov
jno
xor
cmpl
xor
inc
inc
xor
lock
cmp
fistpl
sub
lcall
sbb
into
jp
and
add
loope
jo
movsb
xor
mov
jge
je
xchg
sub
mov
push
jl
ds
xchg
bound
lret
add
in
andb
mov
cmc
rorl
subb
or
push
xchg
mov
sbb
inc
xchg
mov
es
push
jl
mov
jl
dec
sbb
adc
loope
lcall
imul
xor
xchg
jmp
repnz
loopne
push
into
dec
and
scas
sub
pop
ljmp
xor
push
inc
and
or
inc
adc
out
mov
sub
mov
or
test
les
inc
jge
fwait
jl
aam
adc
icebp
xchg
out
in
inc
push
sub
push
ja
mov
aam
andb
ds
lea
jns
inc
and
sub
jp
mov
xlat
iret
aam
mov
ffreep
push
lret
xchg
cmp
pop
sub
shrb
inc
popa
pushf
add
loopne
xchg
xor
lods
repnz
pop
and
lret
insl
push
addr16
in
inc
je
cmp
sub
jb
sbb
inc
mov
add
out
add
out
hlt
xor
pop
test
sbb
inc
je
ds
nop
shrl
sbb
std
pop
shrl
lea
gs
fisttps
insl
push
cld
test
jmp
fucom
xor
adc
add
rol
in
iret
mov
data16
xor
xchg
mov
lods
js
leave
sarl
pop
jns
rcrb
shl
pop
xchg
push
add
xchg
jle
jno
adc
es
repnz
mov
rorb
call
enter
test
leave
pushf
xchg
ret
xchg
cmp
dec
push
lret
mov
add
push
push
add
shll
and
xor
leave
outsb
mov
add
test
std
pushf
notl
inc
stos
adc
mov
imul
mov
repnz
lret
adc
repz
pop
push
pop
mov
mov
sbb
iret
pop
xchg
das
rorb
mov
out
movswl
sbb
dec
sub
js
std
lock
sti
fildl
out
hlt
jns
sbb
jo
iret
cmp
add
push
ljmp
fcmovb
cmpsb
pop
roll
cwtl
jb
shlb
fwait
lods
fidivrl
in
pop
xchg
jp
daa
jmp
pop
push
push
clc
mov
sub
adc
xabort
adc
mov
xlat
mov
adcb
negl
dec
dec
push
mov
mov
arpl
jle
iret
mov
sarb
les
mov
addb
mov
ds
jmp
cmp
mov
scas
xor
pop
jb
in
jp
movmskps
dec
push
icebp
add
rcrl
push
mov
mov
inc
fsts
push
fstl
mov
mov
and
cmp
inc
or
decb
pop
mov
test
je
int3
jg
xchg
icebp
imul
pusha
popa
jge
mov
mov
sbb
mov
xchg
jns
in
mov
in
lcall
jle
or
adcb
cmp
test
dec
cmpb
inc
hlt
jb
jbe
iret
adc
push
xchg
idiv
dec
xor
frstor
adc
jb
dec
and
jmp
lods
pop
mov
mov
shll
mov
lahf
adc
test
subl
mov
gs
mov
adc
icebp
rcl
in
cwtl
andb
jmp
sbb
adc
cmc
mov
imul
loope,pt
inc
imul
data16
cmp
pop
aad
insl
inc
imul
push
test
inc
fiadds
std
ret
test
sub
and
jmp
in
scas
and
cltd
movsl
lret
daa
inc
mov
inc
shll
mov
adc
adc
lock
adc
add
adc
push
and
pusha
cmp
sbb
xchg
insb
xor
sbb
add
sti
cwtl
jnp
adc
ret
dec
mov
mov
wrmsr
ljmp
mov
jb
mov
rorb
pop
push
sbb
fmuls
fcmove
fadds
in
shlb
sbb
xor
xor
xchg
outsl
sarb
movsl
cmpsb
rcr
out
ljmp
mov
clc
add
test
push
xor
inc
lds
mov
stos
cmpl
outsl
lods
daa
in
dec
fsts
xchg
test
stos
aam
iret
push
inc
jbe
cmp
inc
idivb
fcompl
mov
negb
mov
xchg
popf
push
aas
adc
or
stos
js
clc
inc
retw
ds
mov
or
mov
pop
ljmp
lods
jae
fwait
mov
mov
lods
lret
jae
out
ds
dec
cmp
mov
rorl
loopne
ds
pop
jno
daa
jp
scas
lock
cld
xor
in
or
insb
iret
ud2
dec
repz
fnstenv
ret
cmp
outsl
insb
and
pop
call
add
xchg
loope
lahf
jmp
pop
in
push
aad
fstp
in
rcrl
stc
or
jmp
in
cmp
push
cmp
cmp
jno
jmp
sbb
sbb
in
orl
sbb
outsl
dec
stc
push
outsb
xchg
pop
jg
fistpll
lahf
ret
pop
call
mov
das
sbb
push
out
jle
pop
aaa
push
cli
sub
icebp
in
outsb
insb
mov
fsts
jbe
leave
in
daa
or
and
xchg
jmp
sub
xor
insl
popf
jno
sub
inc
mov
lock
std
stos
mov
int
daa
cli
push
scas
movb
lcall
add
sbb
mov
sbb
jecxz
dec
notl
pushf
cmp
out
insl
test
fbld
cmpsl
inc
out
stos
ficoms
xor
dec
dec
push
kmovw
pop
out
pop
fiadds
loope
flds
jnp
adc
xlat
mov
leave
cmp
out
fsub
fiadds
adc
xchg
sbb
xchg
movntq
mov
shlb
push
jp
inc
es
mov
lahf
aad
add
xor
add
popa
push
add
fnstenv
cmp
xor
or
xor
in
es
sbb
int3
insl
cmp
sub
fsubr
popa
iret
adcl
and
pusha
arpl
push
jge
adc
sub
pop
pop
pushf
sub
ss
aaa
aam
xor
ret
xor
mov
mov
std
pop
mov
pop
sub
sti
enter
inc
and
sbb
add
mov
iret
cmp
pop
pop
cld
fnsave
cwtl
cmc
cmp
jge
repz
cli
jb
jg
aas
lods
sub
xchg
xor
jecxz
push
inc
pop
cltd
cmp
andl
mov
sub
test
xor
xor
sub
imul
jle
xchg
mov
mov
cmp
aas
pop
outsl
addb
jp
xchg
add
mov
sti
nop
xor
xor
loope
ljmp
add
mov
es
cmp
loop
test
push
out
xlat
sbbl
xchg
das
push
pusha
mov
jmp
cli
push
push
pop
add
arpl
mov
cmp
adc
adc
dec
and
ret
cld
testb
pusha
pop
test
adc
cli
mov
or
scas
add
or
scas
push
lret
data16
mov
sbb
jnp
dec
jnp
cmp
cmpb
and
mov
data16
stc
sbb
pop
lods
xchg
sbb
xor
mov
into
sbb
ja
mov
arpl
mov
mov
push
enter
lds
ret
cmp
dec
in
stc
das
jge
in
dec
push
sbb
icebp
jnp
push
out
cld
out
xchg
jns
into
jp
pusha
sub
xor
test
nop
ja
push
into
xchg
inc
clc
mov
push
pop
xchg
aas
jecxz
rcl
orb
cmpsb
daa
outsl
aas
and
icebp
cli
push
or
add
loope
mov
push
cmp
cmpb
rolb
mov
sar
push
fiaddl
mov
fcompl
stos
lret
add
mov
fmull
mov
mov
fmull
shll
out
mov
out
cmp
inc
xchg
dec
and
aad
dec
push
aaa
fists
inc
adc
jl
insl
lcall
subb
inc
push
loop
pop
mov
fdivrs
or
inc
cmpsl
and
stos
push
sub
in
pop
in
in
jae
push
add
loopne
andb
pusha
pop
out
test
pop
fstpt
les
icebp
jb
jo
cltd
insb
push
inc
or
pushf
sbb
fdivs
xor
scas
cwtl
ss
idivb
mov
fcmove
mov
jl
and
xor
pop
sub
xchg
inc
fildll
sbb
scas
pop
sub
mov
jl
pop
mov
popf
lret
bound
mov
and
iret
ds
cmpsl
decl
scas
xchg
cmpsl
jae
push
cmp
xchg
pop
jns
int
out
and
mov
rcr
orl
dec
out
mov
insl
add
push
cmp
mov
dec
test
ja
push
sub
xchg
std
pop
out
sbb
lahf
in
enter
dec
pop
pusha
lcall
lds
stos
mov
test
cmpsb
mov
stos
xchg
out
xchg
lods
test
repnz
mov
cmpsb
fadd
jl
inc
test
movlps
push
cli
mov
push
add
pop
or
jns
inc
aad
xchg
fbstp
cmpsb
jmp
dec
or
dec
ret
add
dec
dec
shl
mov
ret
mov
and
push
lods
mov
ja
cmpb
or
mov
push
jle
mov
sub
xchg
sahf
and
jle
jno
or
mov
shrl
into
lret
or
aaa
movsl
fsubrl
adc
lods
inc
push
les
iret
gs
jp
cli
dec
sbb
fistpl
lods
cmp
and
adc
repnz
cmpsb
outsl
mov
orl
sub
aaa
sub
loope
aas
loop
pushf
cli
ficomps
dec
scas
scas
ret
add
sahf
xlat
and
pop
mov
or
jae
adcb
cwtl
mov
aam
es
jl
rcrb
jae
lock
fisubrs
cwtl
test
inc
cli
sbb
xchg
mov
adc
inc
mov
gs
mov
push
pushf
ret
imul
fisttpl
leave
stc
cmpb
stc
popa
aad
jb
mov
negb
lcall
das
lods
mov
pop
push
lahf
jb
mov
and
popa
or
in
inc
lcall
fiaddl
mov
js
xor
sbb
stos
test
xor
fstpl
je
loop
loop
xor
mov
shlb
pop
cmpsb
or
or
pop
mov
fwait
adc
imul
aaa
stos
stc
cmp
and
or
arpl
imul
test
and
enter
or
mov
sahf
mov
push
fucomip
fwait
test
fwait
and
outsb
loop
inc
sub
fstl
and
outsl
cmp
fistps
sbb
pop
test
ret
insl
mov
test
jns
dec
roll
pop
pushl
mov
shll
mov
jo
aam
cmp
push
cwtl
outsl
out
xor
jp
xor
or
cmp
stc
and
sbb
inc
stos
sti
cmp
inc
dec
push
push
inc
call
sub
xor
lea
ret
cli
out
or
xchg
roll
nop
fists
mov
xchg
dec
divl
inc
ds
mov
lret
pop
in
jecxz
data16
fwait
cmp
mov
fdivl
icebp
mov
loop
mov
push
jecxz
in
push
test
ret
push
xor
das
xchg
mov
adc
inc
sbbl
mov
push
into
movsb
adc
push
add
loop
push
lret
pop
or
push
loopne
fnstcw
add
shl
mov
lahf
adc
xchg
mov
pushf
inc
cld
fdivs
ja
sar
cld
inc
aad
xchg
lret
out
jg
scas
in
adcb
adc
ljmp
xchg
cmp
test
insl
lods
and
push
dec
lea
div
cltd
and
nop
cmc
cmpsb
adc
mov
test
mov
push
inc
test
jbe
dec
sbb
pop
dec
dec
add
mov
popa
divl
repz
in
lock
ret
out
sbb
jg
sbb
cmp
inc
neg
lcall
addr16
lcall
imul
leave
pusha
jl
cld
xor
mov
add
xor
push
or
aas
inc
test
mov
adc
mov
xor
xor
xchg
mov
or
out
mov
inc
les
movsl
shlb
sub
pop
nop
pop
add
divb
mov
jbe
pop
and
or
jae
xchg
mov
repnz
pop
leave
mov
out
mov
dec
icebp
or
fsubl
xchg
inc
aaa
je
sahf
je
imul
fs
dec
enter
mov
pop
shlb
push
ret
andb
fwait
sub
stc
test
sub
hlt
adc
into
clc
fadds
pop
sbb
out
sti
aam
mov
idivb
movsb
nop
and
inc
xchg
clc
mov
clc
cli
stos
xor
xchg
pushf
xlat
daa
test
and
aam
mov
cmpl
bound
cmp
arpl
cltd
mov
sub
adc
sub
add
add
dec
test
movsb
cmp
xlat
or
push
addr16
test
ss
roll
mov
inc
loope
lods
mov
inc
addr16
mov
loope
jle
adcl
push
sbb
loopne
dec
popf
xchg
sub
clc
add
sub
adc
push
adc
dec
inc
test
in
incb
stc
aas
xor
pushf
xchg
jp
mov
aad
rcrl
xchg
sbb
xor
inc
push
mov
xor
ja
push
bound
sub
cmp
inc
push
xchg
and
hlt
adc
add
arpl
arpl
stc
das
push
shlb
adc
adc
pop
and
js
dec
popa
shr
and
cltd
mov
je
xor
fisubl
aad
sub
daa
stc
outsl
shlb
mov
mov
adc
outsb
push
fmull
jae
mov
push
psrlq
jl
rcll
pop
sub
imul
bound
sti
push
roll
repnz
into
mov
jecxz
mov
aam
pop
jmp
mov
jns
push
mov
icebp
out
cmp
fldt
and
int3
sub
lock
add
dec
xchg
xlat
pop
les
dec
sub
pushf
shrb
jnp
lahf
into
or
rorb
pop
cmp
rorb
pop
mov
jl
xor
shrl
or
xchg
mov
jmp
mov
or
add
sbb
xor
lret
call
lahf
into
xchg
dec
std
ja
xchg
inc
ret
jecxz
loop
imul
out
mov
sbb
out
xor
rcrb
sbb
inc
in
or
loope
inc
faddl
adc
pop
sub
jbe
in
mov
cmp
mov
xor
and
loopne
mov
mov
pop
and
ja
aaa
cmp
int
push
mov
in
gs
pop
or
icebp
ds
test
push
mov
lock
mov
js
adc
jle
jns
test
clc
mov
movsl
das
mov
pop
push
shrd
and
aam
fmull
sbb
jecxz
jae
aas
adcb
push
popa
ds
add
xor
jmp
jo
add
push
mov
mov
es
xor
xor
fidivrs
push
lcall
cmp
out
mov
dec
sti
jp
and
icebp
js
sarl
movsl
and
pop
shrl
stc
imul
ffreep
lock
mov
clc
leave
xchg
pop
xchg
mov
cltd
push
adc
in
jg
xchg
mov
xor
nop
inc
inc
cmpl
pop
add
cwtl
jmp
stos
imul
cmovle
cmp
loopne
int3
std
daa
xor
fidivrs
sarb
clc
lahf
cmp
jmp
test
push
sub
mov
and
adc
js
shll
inc
xchg
addr16
out
aaa
cmpsb
imul
sarl
movsb
inc
cmp
inc
out
fnstcw
test
mov
push
adc
repz
lret
xchg
or
mov
sbb
lret
mov
push
jp
gs
and
and
push
inc
xchg
js
mov
repnz
sub
test
sub
and
stc
bound
inc
lea
jnp
nop
jo
ret
cmp
fdivrl
aaa
mov
add
sub
jge
sahf
mov
and
aam
in
fsubr
jbe
or
jp
arpl
inc
dec
scas
loopne
add
jecxz
dec
sbb
or
add
dec
and
fisubrs
sbb
add
sbb
add
movsl
xchg
sub
shll
sub
jne
mov
hlt
mov
mov
xchg
xor
testl
adc
addr16
ret
popa
mov
jge
push
test
arpl
es
jns
push
sub
aas
cmp
fnsave
jo
fcompl
nop
arpl
int
lret
xor
pop
xlat
lods
test
mov
cmp
add
in
cs
in
pop
xor
data16
ljmp
push
int
lcall
push
xlat
sbb
or
popf
cli
rorl
jno
in
xchg
iret
leave
dec
lahf
cmc
add
or
or
and
cmp
lea
mov
out
sbb
daa
scas
into
orb
lret
pop
dec
xor
in
fstpt
pop
mov
popf
lods
mov
or
mov
mov
jmp
fstl
xor
push
sarb
stc
cmc
xchg
jno
push
lods
pop
subb
push
hlt
fbld
pop
dec
incb
cltd
mov
jno
out
in
mov
sub
pusha
lahf
add
add
imul
sub
xchg
pop
idivl
fwait
rorl
gs
hlt
call
inc
fcomps
lods
fildl
data16
test
roll
fwait
inc
adc
lods
js
adc
dec
lahf
std
out
push
sub
arpl
jmp
testl
push
aam
outsb
cmp
jbe
adc
sub
sbb
outsb
hlt
fistl
ret
cwtl
in
mov
shll
cmovno
gs
addr16
add
pop
mov
repnz
fs
dec
xchg
test
rcrb
aaa
jns
pop
or
sti
jbe
xor
out
xchg
sbb
popl
fadds
adc
out
pop
es
lahf
mov
or
xchg
jnp
fcomp
mov
sub
mov
adc
push
jb
out
stos
nop
sub
movsl
inc
lock
pop
les
lcall
pop
test
xchg
outsb
aam
xor
xlat
mov
scas
xchg
push
xchg
negb
lock
dec
insl
loop
orb
jle
xchg
mov
dec
popl
lea
scas
mov
fwait
or
sahf
or
and
ljmp
mov
dec
enter
loop,pt
lret
xchg
movsl
jle
add
add
scas
dec
lods
jg
jge
repnz
das
mov
dec
ja
repnz
sub
aad
mov
arpl
nop
xorl
push
inc
mov
imul
loopne
cmp
mov
mov
jne
and
movsl
call
arpl
dec
and
mov
xor
sti
imul
sub
dec
pop
lcall
mov
dec
bound
aaa
push
or
adc
xchg
jo
cwtl
stos
mov
subl
rcl
ljmp
xlat
cld
jp
mov
sti
in
jmp
imul
xor
rolb
sbb
xchg
stc
mov
add
mov
mov
mov
and
jb
sbb
pop
fistpl
fildl
mov
dec
fwait
fwait
sbb
cltd
filds
mov
adc
mov
pop
inc
xchg
pushf
iret
in
daa
and
ja
sub
outsb
movsb
add
mov
mov
dec
adc
loopne
add
imul
stc
sub
fxch
cmp
pop
cmp
cmp
cmp
and
cltd
xchg
shlb
shr
movsb
scas
and
xchg
leave
or
lret
pop
inc
push
cmp
xor
out
es
mov
and
sub
xchg
xor
jnp
jl
mov
xlat
push
out
or
in
icebp
shl
bnd
xor
xchg
add
aaa
inc
dec
inc
loop
fwait
push
jmp
cwtl
and
imul
int
jb
je
iret
bound
stos
aad
sbb
mov
xchg
aas
dec
adc
inc
or
cmp
movsb
movb
ficoms
lock
lods
lods
adc
in
test
fistl
xor
fstpt
das
sub
mov
pop
jge
in
rorl
sub
push
fs
inc
lock
add
mov
adc
mov
dec
jbe
stos
mov
into
add
xchg
cmp
cli
and
add
js
icebp
push
cmc
xchg
jnp
sub
mov
dec
cld
fsubrp
icebp
push
cs
pop
cmp
cmp
rcl
popa
daa
pop
jl
push
jp
xchg
pop
enter
xor
movl
or
adc
dec
push
je
jb
xchg
gs
das
rcrb
repnz
jno
xor
cltd
xor
pop
add
mov
lcall
dec
sub
cmpsb
jge,pt
xchg
addr16
loopne
lds
idivl
aam
in
gs
lock
adc
push
mov
lea
push
fs
hlt
movsl
xlat
push
repnz
sbb
into
sub
insl
inc
addr16
ret
dec
repz
push
jo
cmp
mov
mov
dec
sbb
idivl
or
push
xor
push
jge
push
lret
ljmp
stc
pop
movsl
and
adc
mov
int3
mov
notb
shll
adc
cmpsb
pusha
test
push
lods
in
out
stos
push
jnp
imul
imul
into
jno
jne
push
rclb
fisttpl
aad
stos
je,pn
mov
jmp
sti
mov
test
adc
popa
push
jecxz
pop
lods
pop
cmpsl
mov
sbb
out
jno
push
ret
inc
outsl
test
sahf
xor
cmp
cmc
jbe
sbb
mov
popa
fnstenv
rcr
sbb
mov
divb
adc
nop
xor
call
std
fisubs
sbb
jecxz
xor
stos
inc
mov
mov
pop
iret
push
or
cmp
scas
xor
lock
add
add
or
cmp
xchg
xchg
mulb
pushf
jns
lock
inc
clc
cmpsb
repz
cmp
cmp
xchg
test
ss
push
xor
cltd
aad
push
shl
cltd
dec
sahf
mov
icebp
mov
ja
xchg
stos
repz
fcmove
aad
xchg
dec
ja
ret
mov
add
xor
or
popa
lods
pop
insb
pop
fmul
lcall
mov
in
roll
mov
adc
adc
inc
xor
fiaddl
pop
jmp
cltd
loopne
out
or
push
pop
out
out
xchg
pop
repz
pop
sti
fisubrs
in
cmp
lock
addr16
jae
add
ret
sbb
push
pop
jge
mov
sar
icebp
lret
icebp
and
imul
clc
mov
push
jg
mov
cmp
test
pop
inc
iret
loop
jne
loope
fists
adc
rolb
xchg
inc
daa
dec
ljmp
mov
xor
add
mov
push
mov
es
xor
jmp
js
leave
addr16
les
xchg
in
cmc
lods
bound
adc
mov
inc
aad
sub
mov
cmp
push
aam
xlat
loop
fnsave
pop
icebp
xor
cmp
xor
insb
cmp
int3
ljmp
testb
xlat
sarb
out
adc
pop
and
jb
fmuls
fadds
fwait
dec
scas
cmp
or
out
out
push
in
gs
dec
fiadds
leave
fnsave
scas
mov
xchg
mov
inc
or
push
inc
dec
xchg
loope
add
scas
xor
jmp
popf
out
mov
cs
xchg
inc
inc
addl
test
outsb
sub
push
mov
pop
mov
pop
pushf
and
xchg
cmc
shll
fisttpl
nop
mov
jo
and
mov
xor
push
and
movsb
in
mov
cmpsb
jae
jo
hlt
pop
push
sub
dec
xchg
shll
add
push
push
jl
push
into
test
pop
mov
es
in
xor
add
and
or
dec
out
repz
sub
shl
adc
hlt
pop
jae
xchg
cmc
xor
mov
mov
aaa
gs
fcompl
fmuls
pop
aad
mov
dec
ss
pop
arpl
fwait
jl
push
push
push
xor
push
mov
cld
test
test
xchg
pop
pop
cmp
push
jl
inc
adc
je
testb
xlat
dec
mov
out
popf
enter
xchg
ss
cmp
sub
bound
push
push
xor
xor
xor
or
ja
cs
xchg
mov
repnz
loopne
add
fs
push
mov
fisubs
cld
cltd
dec
mov
jp
jp
and
stos
pop
test
repnz
shlb
sarl
cmp
or
aaa
lods
mov
xor
cmp
pop
inc
xchg
sbb
iret
addr16
mov
mov
fcomi
add
adc
or
mov
adc
call
dec
xor
jmp
pop
js
mov
inc
das
aad
push
arpl
outsb
daa
mov
es
sbb
or
imul
pop
dec
mov
fcmovne
dec
jecxz
ljmp
inc
ret
cmp
ds
sub
pop
popa
mov
ja
addr16
movsb
push
outsb
adc
out
cmp
mov
dec
or
fildl
lcall
sub
sbbb
outsb
or
popf
out
xchg
and
ret
movsb
cld
sbb
inc
ja
mov
fsts
mov
je
pusha
stc
and
jp
xchg
dec
outsl
sub
xchg
inc
les
repnz
jno
insl
xchg
xor
lds
xchg
imul
push
or
xchg
loope
fcomps
out
push
sub
mov
subb
adc
cli
stos
fwait
pusha
inc
outsb
cmc
aas
xlat
fsubp
dec
jge
ficomps
repz
pop
ss
sbb
mov
inc
mov
fwait
subl
dec
mov
shlb
scas
es
mov
adc
out
ror
cld
cmc
dec
jbe
loop
or
int3
shlb
xchg
and
cmc
gs
dec
sbb
pop
jnp
clc
aam
ret
jno
je
jle
enter
cmpsb
pop
mov
mov
cmp
jg
sbb
das
lret
iret
out
or
repz
stc
dec
jp
push
cs
cmp
adc
xor
fwait
stc
mov
imul
pop
fstl
xlat
xor
jnp
movsb
xor
mov
imul
xchg
pusha
mov
out
inc
arpl
adc
pop
inc
nop
sub
sub
cli
in
insb
out
stos
imul
bound
mov
imul
dec
fcoml
adc
or
fstps
mov
push
xor
aas
jb
mov
push
mov
neg
dec
insb
in
mov
adc
or
push
test
lock
mov
jns,pn
stos
sub
bound
addr16
mov
push
xlat
fcoms
xorb
aad
shlb
rcrl
je
icebp
insl
mov
pop
cmp
pusha
inc
subb
dec
fisttpl
scas
mov
popa
rcr
testl
cmp
je
xchg
jmp
jb
mov
jae
jge
sub
mov
jne
std
mov
jns
lods
adc
in
cwtl
and
lahf
out
or
aad
mov
inc
cmpsl
pop
inc
das
popl
xor
xchg
xor
aaa
jne
outsb
push
and
cmpsl
pop
push
jecxz
sbb
repnz
insb
xor
and
mov
and
jae
rolb
adc
in
aaa
pop
mov
mov
xor
push
mov
pusha
iret
movb
xchg
lods
mov
or
xor
into
movsl
jnp
or
cmp
add
movsl
push
sub
mov
sub
sbb
pop
rclb
mov
inc
cmp
pop
add
xor
in
test
loop
out
shlb
lods
insl
jno
and
aad
pushf
sahf
cmpsl
push
lret
sub
xor
xlat
and
dec
ret
lods
inc
push
pop
push
mov
cwtl
mov
js
push
mov
in
and
fmuls
add
push
mov
or
add
stc
loop
pop
test
lods
mov
adc
out
or
gs
mov
or
fdivr
fwait
enter
mov
cmp
stc
adc
push
fidivrl
movsl
faddp
adc
popa
popl
dec
repz
xchg
jne
add
jmp
aaa
stos
push
arpl
prefetch
popa
clc
xor
push
js
arpl
jp
or
in
cld
mov
pop
test
sub
dec
pop
outsl
pop
inc
adc
xchg
adc
in
sub
mov
js
mov
inc
pop
shl
mov
push
or
lret
push
test
insl
rcrl
in
jge
leave
jae
mov
xlat
ret
in
test
or
lock
push
push
test
mov
jl
push
jle
mov
lea
pop
xlat
dec
test
loope
mov
dec
shrb
or
jbe
scas
xor
or
sti
clc
stos
xor
xchg
imul
push
into
or
fcompp
stos
shrl
adc
cld
test
ds
mov
cs
insl
imul
mov
inc
pop
jge
dec
cmp
adc
rcll
gs
popf
mov
inc
dec
cs
int3
mov
jbe
adcl
cs
sub
mov
cmpsb
fwait
inc
test
roll
sbb
repnz
sub
cli
cmp
inc
xlat
push
jmp
push
sbb
xor
adc
jle
pop
or
idiv
and
fdivs
ljmp
adc
lea
cwtl
mov
dec
xchg
jg
mov
std
jle
stc
cmp
mov
xchg
add
xchg
lcall
xor
popa
cs
les
mov
pop
push
fwait
xchg
lods
xbegin
inc
cmpl
leave
push
cli
push
sub
daa
jae
rcrb
test
push
add
inc
mov
jnp
out
xorl
cltd
icebp
pop
lods
mov
leave
lods
into
mov
xor
jle
cmpsl
lock
aaa
mov
pop
call
aad
add
test
rol
jmp
iret
mov
mov
cwtl
adc
loope
jno
and
adc
pop
inc
mov
outsl
cmp
test
xchg
fildll
testl
test
push
fadds
adc
cmp
out
into
xchg
push
mov
repnz
jno
jmp
idivb
push
sub
and
push
xor
xchg
or
movsl
sub
xor
fcoms
call
jae
jmp
les
sbb
lods
je
jl
cmp
fldt
and
in
fwait
xchg
mov
mov
jge
adc
mov
aam
or
clc
xor
cmp
mov
mov
fwait
mov
cmc
outsl
push
and
mov
sub
mov
push
movsb
jnp
cli
xor
addr16
out
cmpsb
loop
insl
xchg
sbb
gs
xor
lcall
or
call
jle
gs
js
push
adc
or
clc
aaa
popa
ret
xchg
add
arpl
push
stc
inc
add
push
daa
adc
ret
fwait
std
lds
scas
aam
mov
idivl
lahf
cmp
inc
mov
xchg
icebp
push
jns
or
mov
pop
aad
movsl
fnstcw
xchg
repz
pop
pusha
movsb
inc
call
adc
or
jo
push
arpl
js
int3
fsubs
inc
int
fsubrl
idiv
out
mov
xor
dec
lds
mov
cmp
inc
pop
jae
jne
cmp
or
pop
jbe
rcll
jle
mov
cwtl
cmp
into
stc
clc
lcall
std
addl
pcmpgtb
xor
cmp
sti
mov
cmp
pop
cltd
jmp
es
adc
addr16
xchg
cld
lock
loop
ja
into
movsl
in
push
aad
das
test
fisttps
je
inc
mov
jp
sbb
push
jp
shrl
nop
test
popa
inc
movups
push
call
sbb
jge
fildll
std
sbb
sbb
ds
dec
lea
lret
xor
loop
hlt
data16
inc
or
ror
jge
jbe
aaa
loop
movsb
out
push
shrb
cld
les
stc
in
jle
cmpsl
cs
pop
loope
pop
daa
mov
jnp
insl
aad
inc
out
movsl
ljmp
sbb
inc
add
out
push
dec
mov
or
sub
into
sbb
sub
addr16
lods
sub
xchg
push
int3
or
ljmp
das
les
and
out
jp
mov
mov
jbe
stos
jb
daa
or
push
rol
pop
mov
lds
xchg
mov
add
pop
lds
mov
sub
fisubl
pop
xchg
out
mov
mov
lret
lahf
leave
inc
push
mov
push
adc
or
sbb
push
push
sub
mov
dec
in
sbb
ficoml
cmp
or
and
mov
mov
mov
push
loope
sub
xchg
rorb
arpl
add
aaa
sub
rorl
cwtl
push
xchg
xor
and
push
or
js
sub
shll
adc
jns
gs
scas
adc
inc
mov
sbb
repz
cmp
data16
ja
and
scas
push
cmp
fdivrl
or
or
xlat
cmp
stc
sbb
or
cmc
shlb
xchg
loope
and
inc
fcomps
mov
test
xchg
add
sbb
push
xchg
cmp
lret
dec
lods
mov
jecxz
sub
cmpsl
xchg
sahf
xor
and
lahf
and
pop
movsl
lcall
inc
je
arpl
movsb
repnz
cmp
arpl
iret
cmpsb
lahf
insb
fadds
jecxz
test
iret
and
inc
test
scas
or
popl
pop
daa
arpl
addr16
into
loopne
mull
inc
sti
ja
lcall
pusha
lds
add
adc
sub
sbb
push
and
pop
test
mov
push
mov
arpl
push
pop
mov
lcall
push
cmp
add
inc
mov
dec
test
jmp
mov
and
aas
pop
sahf
fadd
fcomps
push
loope
ret
sub
cmp
pop
jecxz
clc
out
add
add
jle
inc
mov
inc
lret
push
pop
jle
gs
adcl
fcmovne
mov
adc
mov
sbb
jmp
xor
or
xor
ljmp
sub
stos
sub
imul
dec
mov
clc
das
adc
jp
cmp
xchg
xchg
pop
aaa
pop
mov
xor
imul
fbstp
cmc
je
jb
orl
xor
lahf
add
lock
ja
daa
mov
push
add
pop
std
cmpsb
pop
xor
pop
cmp
xor
push
ret
xchg
or
pop
xchg
mov
or
aam
cmpsb
imul
subb
xchg
add
test
xor
iret
data16
dec
cmp
les
repz
jl
negb
sub
adc
sub
icebp
sub
rorl
sub
push
stos
dec
cmpsb
xchg
in
roll
inc
pop
jecxz
iret
jne
aas
push
cmp
push
lret
mov
addb
ja
into
push
and
or
jl
xchg
in
shrb
call
popa
pop
mov
push
out
sbb
push
push
jecxz
cmp
jg
dec
les
outsl
jo
sub
mov
push
dec
daa
aas
xchg
cmpb
add
sbb
fistpl
jno
ficoms
xor
adc
xchg
mov
push
jl
sub
loopne
and
pop
jbe
in
push
cld
xchg
fdivs
nop
push
or
scas
dec
or
outsb
push
int3
mov
nop
arpl
mov
or
sti
lret
pop
stos
js
xor
jnp
test
cmp
insl
aas
mov
sub
js
push
lea
mov
adc
xor
ljmp
stc
push
testl
or
xchg
xor
inc
push
push
std
lock
jns
daa
lods
dec
push
jns
in
test
push
daa
mov
pop
ret
subb
jp
jbe
xchg
cmc
mov
stc
sub
mov
lret
xor
enter
add
mov
sub
test
loopne
ficomps
push
xchg
loope
sbb
jno
ret
sub
sbb
mov
fisttps
mov
xlat
sub
mov
and
cmp
add
add
fnstcw
lock
push
insb
mov
ss
mov
fdivrp
movsb
lock
shlb
addr16
aaa
dec
dec
std
enter
push
js
aas
mov
mov
xchg
divb
xchg
cs
pop
dec
fucomip
sarl
data16
jns
sti
test
aaa
popf
and
jnp
push
aad
in
ds
xchg
adc
inc
test
mov
sbb
push
js
lods
mov
jmp
test
lods
cmp
arpl
dec
faddl
inc
pop
mov
in
hlt
jecxz
loop
inc
lock
or
mov
inc
dec
cmc
lret
out
mov
or
stos
pop
outsl
xchg
repnz
ja
and
pushf
inc
pushf
ljmp
cltd
ret
inc
push
push
pop
xor
mov
popf
add
shlb
and
xchg
fldenv
nop
or
jp
daa
dec
jmp
test
repnz
les
fnstsw
xor
cltd
shr
xchg
add
pop
popf
out
lds
jg
ds
shl
jp
and
adc
or
xorb
dec
test
enter
dec
lock
imul
scas
inc
xchg
gs
mov
and
mov
mov
inc
cmp
pop
add
adc
daa
sbb
push
mov
push
push
std
shlb
xor
mov
gs
cmc
rol
repnz
test
xor
cmp
sbb
adc
loope
push
jae
adc
or
sbb
xchg
or
jns
and
lea
sbb
cmp
dec
xor
ja
adc
in
dec
mov
push
in
xchg
fwait
mov
mov
stos
xor
addl
xchg
sub
ret
cld
andl
cmovnp
enter
xchg
in
mov
jge
xchg
in
int
movaps
mov
popa
lcall
mov
aaa
jp
mov
stos
mov
mov
dec
adc
notl
and
dec
xchg
mov
sahf
jo
inc
aam
movsb
pop
cmp
mov
rol
leave
cmp
repz
cmc
pop
push
xchg
je
pusha
es
or
jge
or
hlt
ljmp
fs
test
and
add
hlt
dec
xchg
pop
sub
pop
ret
stos
movsb
add
rorb
sbb
imul
repnz
jp
xchg
and
popf
adc
mov
inc
rcrb
sbbl
jbe
aad
fistps
sbb
sbbl
fcmovu
adc
dec
jb
add
sub
xchg
loopne
push
xchg
sbbl
outsl
shll
enter
add
and
test
js
addb
mov
mov
adc
fs
testb
pop
lds
out
leave
push
repnz
lods
push
jle
mov
scas
pushf
rclb
adc
mov
and
es
mov
mov
daa
das
fsubp
fadd
mov
orb
adc
pop
es
pusha
add
xor
inc
xchg
popa
jo
test
mov
xchg
mov
xchg
ss
or
add
or
jl
sub
push
cs
add
loopne
cwtl
add
out
xlat
sub
das
out
in
stc
dec
adcb
lods
ret
sti
ret
mov
or
ficomps
sbb
call
mov
pop
arpl
sbb
insb
pop
int
adc
sub
jge
into
inc
sar
xchg
xchg
rol
lds
sti
add
push
lret
outsl
dec
popf
push
jmp
mov
loope
data16
mov
jge
test
inc
dec
movsb
pop
outsl
and
xor
cmp
les
orl
push
out
push
ss
push
sahf
subl
cli
cmpsb
out
sub
sub
xchg
insb
and
mov
nop
in
xor
mov
inc
fidivrs
shl
mov
adc
or
push
pop
pop
mov
jne
cltd
inc
mov
jl
jmp
nop
aad
mov
push
daa
or
lret
insb
dec
cmp
push
xchg
addr16
cwtl
insl
cmp
sub
xchg
popf
out
mov
xchg
and
movsb
lods
inc
shll
xchg
into
leave
or
pusha
and
arpl
or
inc
mov
adc
cmp
dec
fsub
or
inc
xor
jg
jmp
pushf
testl
loope
jp
cmp
push
lcall
push
int
in
mov
jge
das
in
in
es
sub
push
jne
test
insb
into
mov
out
stos
test
inc
jg
leave
clc
fcmove
addr16
mov
sub
push
out
jecxz
cmp
jne
mov
mov
icebp
les
in
fucom
call
in
sub
orl
xchg
adc
es
call
push
fmuls
stos
dec
js
daa
sbb
cld
lock
adc
pop
mov
or
mov
cwtl
loop
dec
das
cmpsb
in
ds
daa
jp
cmp
mov
sbb
mov
mov
pusha
jnp
push
cltd
or
cmp
sub
mov
xor
in
adc
pop
repnz
xor
lock
lret
adc
sbb
fdivrl
dec
repnz
sahf
in
cwtl
xor
xchg
and
push
ret
xchg
aaa
sarb
dec
loopne
imul
mov
jle
or
jae
inc
cmp
pop
out
xlat
and
pop
jmp
lods
or
push
mov
mov
push
or
fdivl
pop
aad
sub
push
mov
xchg
inc
inc
sti
das
push
xchg
pop
subl
outsl
mov
push
rcrb
test
and
xchg
jle
inc
imulb
out
call
mov
sbb
sti
sbb
adc
loope
fmul
cwtl
cmp
mov
xchg
mov
movsl
adc
loopne
mov
mov
xor
sbb
cld
sub
je
imul
aam
mov
and
roll
sub
cmp
add
xor
sub
mov
cmpsl
xor
fdivrl
jb
mov
sbb
aaa
push
mov
add
cmp
xor
jmp
data16
mov
shlb
repz
cmp
nop
mov
aad
lahf
push
lret
aam
insb
xchg
addl
ficoms
mov
mov
sbb
mov
cmpsb
jp
in
icebp
idivb
pop
jno
test
clc
and
adc
cvtps2pd
adc
in
subl
fnstcw
mov
mov
mov
mov
xchg
pop
icebp
bound
in
cld
repz
out
or
enter
addr16
and
xchg
jg
cmp
adcl
xchg
addr16
inc
sbb
push
mov
dec
xchg
lods
insl
add
jo
cmp
mov
xchg
aam
sub
addb
mov
int
push
jg
outsb
jecxz
ret
dec
inc
xchg
imul
jmp
mov
and
push
clc
mov
popf
scas
mulb
add
popa
mov
cmp
movsl
movsb
loop
out
stos
shl
jmp
jp
mov
mov
mov
fwait
sbb
aaa
std
fisttpll
mov
cmpsb
mov
mov
mov
and
adc
adc
push
lds
add
push
orl
push
add
mull
cltd
pusha
xchg
mov
std
out
dec
repz
test
ss
push
sub
dec
cld
fwait
repz
pop
lds
or
gs
fldl
or
cmp
test
scas
mov
mov
mov
push
mov
aam
jle
pusha
sub
lret
xchg
pop
cmp
inc
roll
jae
mulb
outsb
mov
popf
fcompl
lods
imul
loopne
leave
rclb
outsl
jbe
push
jecxz
cmp
ja
push
sarl
rcl
cmp
inc
jnp
push
jnp
and
in
push
jge
loop
mov
dec
mov
lds
stos
push
enter
push
nop
lcall
cmp
xchg
mov
or
jge
loope
out
icebp
jns
push
dec
mov
or
rcrb
or
shr
pushf
mov
movsl
movsl
ds
cwtl
add
mov
shll
ds
cld
inc
jo
jmp
xchg
das
fdiv
out
xorb
lock
cmpl
testb
rol
pop
iret
mov
or
mov
fucom
mov
mov
out
in
sbb
cld
and
jo
pop
bound
subl
sub
pop
push
jmp
addr16
notb
lahf
ljmp
popf
mov
push
idivb
or
inc
inc
sub
adc
je
adc
pop
loop
stos
gs
jecxz
addr16
cld
daa
enter
adc
dec
sbb
test
fwait
add
pop
mov
xchg
loope
jmp
pop
sub
xchg
jl
in
dec
mov
jb
loop
stos
mov
xor
pop
addr16
mov
shlb
sbb
data16
mov
in
icebp
das
mov
sub
push
xchg
mov
lock
repz
ss
ss
test
movsl
cli
mov
scas
pop
stos
adc
sbb
xchg
mov
ja
mov
add
jb
pop
cmc
test
inc
push
mov
and
in
and
lret
push
push
idivb
daa
dec
xchg
jecxz
mov
or
adc
dec
mov
push
xchg
mov
jbe
jecxz
insl
sti
adc
iret
lahf
push
jp
push
je
sub
xor
rorl
push
sbb
jo
cmp
mov
cmp
dec
scas
jg
xchg
dec
in
xlat
lods
mov
das
xor
mov
in
fwait
lahf
in
fisubrl
xor
std
cmp
dec
jg
sahf
pop
fwait
sti
not
and
sbb
aaa
addr16
inc
mov
cmp
jnp
xor
push
popa
stc
add
icebp
fiadds
loop
test
and
mov
jmp
push
push
cmp
jg
int3
jp
xchg
movsb
cmp
outsb
push
mov
imul
mull
xchg
test
adc
mov
js
das
xchg
js
push
mov
add
je
fidivl
pop
dec
in
sbb
mov
sbbb
lods
pop
in
or
inc
mov
sbbl
inc
mov
jecxz
nop
enter
add
mov
jmp
add
lds
test
sbb
mov
pop
das
adc
les
test
int3
aaa
jl
push
push
mov
add
cmpsl
outsb
inc
enter
scas
jp
xchg
ficoms
add
jp
mov
mov
mov
hlt
je
inc
es
out
push
dec
sub
popa
cli
out
repnz
test
ret
loope
nop
push
adc
inc
or
and
jle
mov
push
mov
inc
push
push
sub
data16
test
mov
cmpsb
mov
cmpl
xchg
mov
xchg
inc
rcrl
arpl
push
dec
mov
int
and
int
pop
mov
aad
jp
mov
adc
fstps
sarb
dec
popf
cmc
mov
xchg
test
sub
mov
push
and
ret
push
rcl
imul
adcb
push
xchg
or
repnz
outsb
scas
ja
popa
sbb
fdivs
adc
sbb
mov
jg
imul
pushf
push
add
mov
and
rcr
fsubr
into
inc
pop
fs
arpl
xor
mov
int3
aad
dec
js
add
inc
test
test
or
cmp
ret
fnstcw
fsts
mov
outsb
ret
push
dec
js
push
leave
pop
fwait
or
rcll
les
aaa
sub
inc
subb
repnz
sti
xchg
fld
outsb
cmp
andb
fcomps
jb
into
and
adc
dec
cmpsb
popf
sbb
daa
mov
mov
adc
std
inc
in
mov
shr
xchg
mov
dec
xchg
dec
in
cmp
stos
mov
out
sahf
std
sub
sub
sub
mov
and
adc
mov
xchg
in
test
roll
lret
arpl
scas
jecxz
lock
push
lds
lock
cmc
incb
ljmp
xchg
loopne
pop
sub
nop
fisttpll
xlat
data16
ja
pop
mov
fadd
push
aad
insb
mov
sbbb
rcrl
mov
jae
push
js
out
movsl
fcompl
addr16
arpl
xchg
add
stos
cmp
clc
fcomip
fs
mov
cmp
in
aaa
jne
adc
jo
test
insl
dec
dec
mov
imul
and
cmp
add
out
out
cmc
out
inc
sbb
cmp
push
sub
and
aad
ss
ljmp
aaa
shlb
addr16
mov
dec
jb
fstps
movsb
push
push
cmpsl
popa
xchg
inc
lret
dec
outsb
push
sti
or
cmp
roll
lret
ret
sub
inc
into
jge
movlps
js
pusha
jge
xchg
dec
loopne
je
and
jl
xlat
push
sub
mov
sub
mov
fmuls
mov
int3
in
jbe
je
mov
adc
jb
fbld
and
ror
js
mov
pop
cmpsl
je
or
cmpl
adc
push
sub
or
fnstenv
in
mov
notl
xchg
mov
push
test
lret
jmpw
rcrl
sbb
add
push
mov
cmp
dec
int3
pop
pop
adc
sbb
jnp
ss
add
sbb
das
pushf
lods
pop
mov
sub
inc
int3
adc
xor
test
inc
andl
sub
xchg
shl
pop
and
and
fstpt
xchg
xor
push
out
sub
push
cld
mov
xchg
mov
jnp
mov
ljmp
jl
outsl
pop
xor
sub
cmpb
das
add
xor
stos
fldt
dec
xor
add
fstps
xor
jns
or
and
push
or
or
mov
or
sbb
xchg
add
xlat
insl
pop
inc
mov
imul
push
cltd
push
pop
js
dec
xchg
imul
sbb
or
dec
ljmp
insl
repnz
out
push
aas
dec
es
jge
pop
push
in
mov
addr16
jb
pop
xor
jl
fstl
push
xchg
popa
aam
mov
js
je
fidivs
test
and
push
sub
and
insb
pop
movsb
nop
mov
adc
mov
lods
mov
add
adc
scas
mov
push
ret
sbb
sbb
sub
popa
leave
mov
push
clc
mov
rolb
ljmp
stos
insl
mov
or
cmp
repz
leave
pop
test
pop
cmp
pop
gs
adc
fwait
ds
insb
test
imul
or
mov
out
std
push
ret
sub
inc
mov
pop
dec
lea
dec
cmp
test
aam
lock
ljmp
dec
mov
sub
adc
jno
cmpsb
clc
fldcw
mov
dec
cs
fistps
xor
rolb
and
push
and
xor
sub
imul
in
mov
aad
adc
fs
sub
xchg
dec
pop
jp
imul
mov
out
jb
mov
xor
mov
out
inc
and
lret
test
sbb
jmp
mov
mov
adc
out
ret
xchg
sahf
jo
stc
mov
pushf
jo
sbb
jno
mov
rorl
fidivs
mov
jl
clc
pusha
pop
xlat
int
stos
ficomps
aas
mov
test
subl
xchg
pop
jns
outsl
mov
jb
xor
fldcw
jg
xchg
imull
sahf
outsl
ja
xor
and
subb
jle
idivl
lcall
je
popa
js
or
xchg
bound
mov
cmp
fisttps
out
xchg
mov
cs
jns
cmc
stos
xor
lahf
jl
push
leave
pop
je
test
iret
jmp
inc
lret
cmp
mov
sub
xchg
inc
sbb
cld
lods
add
decb
push
shr
cld
lret
je
adc
adc
fsub
cmpsl
jbe
out
xchg
jbe
loope
lock
mov
enter
cmp
ja
xchg
pushf
movsl
jmp
cmp
push
aaa
fwait
or
ficompl
mov
cmp
fisubs
mov
shrb
jb
mov
adc
hlt
jg
cli
loopne
adc
test
es
add
or
jae
std
mov
popf
sahf
sbb
popa
loope
mov
dec
mov
xchg
mov
xchg
popf
scas
sub
das
pushf
popa
ja
mov
arpl
test
ffree
add
dec
lcall
pop
jbe
push
ret
lret
ja
pushf
aam
pop
sub
jns
mov
pop
decl
and
loopne
or
lret
jbe
pop
loopne
pop
dec
shl
sbb
xor
mov
movsb
iret
dec
pop
cmp
pusha
mov
push
jbe
cmc
dec
xor
in
push
or
lds
mov
ds
cli
or
rorb
test
mov
imul
fisttpll
mov
xor
mov
mov
sub
mov
fldcw
jae
nop
inc
int3
pop
loopne
pop
orl
push
cs
ljmp
into
cmp
adc
arpl
mov
mov
faddl
rolb
rcr
push
outsl
or
add
and
cmp
jbe
mov
cli
dec
inc
sub
and
dec
test
nop
outsb
jnp
mov
jmp
mov
jge
push
cmp
mov
daa
jp
push
int3
in
lcall
outsb
pop
mov
ja
add
fwait
aaa
xchg
lcall
inc
mov
ds
ja
pop
push
fnstenv
push
test
add
mov
out
leave
cmp
dec
or
pop
out
pushf
cmp
jecxz
push
xchg
push
mov
test
dec
movsl
lahf
lods
enter
jnp
xor
pop
leave
ds
aad
adc
lret
sub
and
add
popf
ficoms
and
and
sbb
sti
push
sub
mov
push
leave
push
insb
inc
icebp
insl
mov
mov
pusha
adc
aad
adc
daa
lcall
and
xchg
mov
push
xchg
mov
incl
jae
pop
lcall
jmp
sub
mov
dec
rclb
nop
test
mov
outsl
add
std
lea
aas
mov
adc
jecxz
lods
xor
mov
repnz
mov
pusha
nop
nop
mov
in
mov
push
push
pop
dec
xor
into
out
cmpb
stc
lret
xor
mov
subb
cltd
gs
imul
sbb
pop
xor
scas
test
or
xchg
add
fcmovne
push
scas
je
inc
aad
movsl
popa
mov
rcll
dec
or
mov
aam
fmull
out
mov
adc
xchg
dec
daa
sub
add
inc
sti
dec
insl
xor
fistl
or
stos
fcmovnb
test
daa
fs
inc
decb
leave
out
sbb
loope
sarb
test
cld
cli
imul
inc
mov
mov
push
adc
push
xchg
daa
jg
into
in
mov
and
dec
mov
int
and
outsb
dec
lods
jg
xchg
sbb
xchg
aaa
cmp
in
jne
cli
call
mov
cmp
sbbb
push
stos
es
pushf
lahf
sarl
dec
mov
lods
cmp
imul
pop
pop
lcall
bound
testb
xchg
dec
fs
add
cmp
jmp
jnp
push
daa
pop
sub
xlat
sub
fdiv
mov
or
in
aad
jns
cmpsb
sbb
sbb
push
lds
in
bound
fidivrs
mov
sub
lahf
dec
or
clc
cwtl
pop
into
arpl
jbe
pop
push
lea
dec
fnsave
loop
stos
int
int3
add
int3
push
ficompl
push
cwtl
out
inc
int
dec
daa
fstpt
lock
xchg
insb
js
icebp
lret
inc
scas
leave
in
jle
sub
xchg
lret
fcomps
shrl
pop
outsl
imul
jg
dec
imull
ds
scas
push
out
enter
outsb
sub
ret
call
sub
pushf
into
cmp
das
jne
xor
inc
push
push
lcall
xchg
mov
xor
mov
fs
and
out
ljmp
in
hlt
sub
ret
ret
sub
out
mov
mov
jmp
into
nop
ja
sbb
mov
pop
aam
ficoml
push
iret
dec
mov
lds
push
clc
jb
repnz
es
push
xor
outsb
pop
mov
iret
clc
push
ficompl
xorl
sub
add
push
mov
js
outsl
stc
xor
rcrl
adc
inc
inc
push
or
mov
jge
out
and
inc
mov
cmp
lahf
movsl
xor
bound
fcomp
aas
adc
enter
mov
xor
test
dec
jmp
xor
js
stos
mov
push
or
outsb
adc
mov
call
sbbb
push
movsb
adc
add
fs
jecxz
mov
sub
add
cs
dec
cltd
test
sbb
imul
and
sub
mov
mov
inc
out
cmp
scas
adc
ljmp
dec
neg
scas
xchg
jae
push
sub
mov
shrl
cltd
and
stos
mov
adc
lret
cli
aad
pop
sti
hlt
dec
bound
cmp
xor
inc
jp
or
mov
outsb
push
sbb
imul
scas
jno
dec
addr16
into
loop
mov
or
test
divb
and
cmc
imul
mov
rorl
lds
add
in
in
add
cmpsl
xor
mov
xor
mov
cmp
and
js
mov
rcrl
ja
test
push
scas
pop
mov
pop
sbb
xor
repz
add
outsl
js
xchg
add
je
fcoms
add
imul
sub
ljmp
lds
or
adc
into
sub
addb
adc
and
xor
sarb
pushf
enter
dec
xchg
ret
call
push
mov
nop
in
add
sbb
cli
pop
lret
cld
xchg
shrl
jne
pop
sahf
aad
ja
daa
punpckhwd
pop
imul
clc
adc
les
movsl
aaa
mov
xchg
fistpll
arpl
repz
jbe
jae
bound
in
int3
cmp
mov
mov
xor
in
ret
pop
jp
fisubs
nop
leave
jecxz
test
fcmovbe
xor
xor
ficoms
cltd
or
sar
cwtl
in
je
xor
cmp
loopne
dec
sbb
cmp
or
data16
shld
inc
add
sti
xor
dec
mov
cltd
mov
mov
jnp
cmc
mov
and
dec
xor
sub
mov
imul
push
shll
lcall
enter
jle
and
pop
sub
pop
jecxz
into
mov
inc
outsl
xchg
lds
xor
adc
adc
xchg
out
fstps
pusha
and
push
pop
mov
sub
fwait
lock
es
mov
sub
mov
xor
jp
test
or
and
jnp
in
inc
mov
adc
dec
xchg
repnz
clc
in
mov
jp
loop
mov
adc
inc
das
push
push
mov
add
sahf
push
inc
add
and
fs
inc
scas
xchg
test
js
mov
int3
test
pop
test
fadd
push
mov
imull
data16
out
in
subb
add
stos
dec
pusha
push
mov
fldt
aam
fildl
add
mov
or
xor
iret
outsl
roll
test
cmp
inc
sbb
mov
mov
add
pop
dec
sbb
xchg
adc
hlt
push
cmpsb
sbbl
sahf
mov
adcb
leave
add
push
push
mov
cmpsb
inc
jo
inc
add
xchg
jp
ljmp
cmp
jl
ss
add
add
aaa
cmp
cli
cmpsl
inc
popf
dec
jbe
xchg
xor
xchg
sti
inc
popa
mov
movsl
imul
pusha
mov
stos
lock
or
loop
push
or
out
int3
bound
lret
adc
inc
mov
cs
bound
and
cli
rcll
jg
cs
mov
xor
xor
mov
xlat
xor
mov
loope
icebp
adc
jns
sti
rcrl
sub
push
add
add
cmp
mov
pushf
or
mov
lret
ret
xor
fistpll
bound
decb
mov
pop
jl
lret
push
insb
xchg
movsl
fbstp
insb
jmp
lret
sbb
hlt
stc
lret
xor
cld
or
bound
aam
sub
add
ficoml
mov
stc
in
sti
clc
int3
stos
sub
arpl
pushf
cmp
jmp
mov
jo
pop
ret
or
out
bound
loope
data16
xor
nop
imul
and
push
sbb
jae
mov
inc
out
pop
jmp
cmc
dec
repnz
aam
add
adc
mov
cmpl
jg
mov
test
cmp
push
pop
das
negl
mov
aam
popa
xchg
adc
nop
cmp
dec
dec
adc
and
imul
int3
mov
mov
clc
pop
cmpsb
pop
and
fmull
mov
icebp
aad
adc
insl
movups
xor
jecxz
mov
cmpsb
jbe
outsb
cwtl
sub
cmp
icebp
std
cmp
cmp
rorl
xor
inc
lcall
mov
inc
ror
push
xor
mov
sub
xor
lret
aas
push
fidivrs
scas
scas
xorl
or
ja
in
mov
jle
lahf
jmp
stos
jmp
sub
mov
aad
mov
mov
mov
add
adc
fbld
addr16
xor
xchg
sbb
pop
test
insb
pop
push
mov
sbb
das
jns
loope
adc
xchg
xchg
lds
popa
das
fbstp
adc
js
ret
dec
cmp
aad
loop
mov
rcrl
mov
jo
inc
lods
std
mov
add
daa
sbb
es
enter
push
cmp
fldl
jg
es
loop
es
pop
and
lret
xchg
lea
lret
hlt
ss
pop
xchg
loope
cli
fnsave
adc
xor
jl
repz
and
xor
das
lea
cli
xchg
ud2
je
add
sub
nop
shll
adc
cwtl
add
pop
not
out
inc
push
lods
lods
mov
negb
pop
and
xchg
mov
pop
inc
je
xor
iret
and
fcmovu
sbb
jp
or
iret
fidivl
mov
addr16
fisubrl
jb
or
pop
and
iret
pop
ljmp
and
addr16
imul
cld
push
lsl
sub
mov
mov
xlat
mov
inc
push
add
nop
mov
mov
aaa
dec
cli
jbe
mov
insb
jno
xor
movsl
mov
push
and
pop
out
inc
cltd
idivb
adcb
adc
repnz
jp
sub
pop
jle
movsb
pop
aad
adc
mov
dec
mov
lret
scas
inc
into
pop
adc
out
xchg
pop
jnp
add
pushf
cmp
and
jb
loopne
loope
pusha
cld
mov
aam
dec
popa
dec
loope
or
shlb
nop
lods
xchg
xchg
mov
inc
sub
popf
adc
test
or
lods
push
jae
xor
cs
scas
jecxz
xchg
mov
inc
xor
and
incb
xchg
xchg
jg
jo
pop
xor
sti
std
or
stos
sbb
sbb
dec
imul
fcoms
insb
dec
ret
movl
fldenv
mov
mov
cltd
xchg
insb
shrl
mov
jmp
fpatan
add
mov
xchg
cmp
pop
mov
fists
shlb
cmp
dec
cmc
test
test
mov
pop
pushf
lds
mov
js
or
sbb
jecxz
lods
and
and
mov
loop
in
in
stos
mov
jno
lds
cmp
dec
and
cmp
andb
mov
pushf
pop
in
scas
xchg
cld
lds
cmp
push
jecxz
pop
test
mov
aas
stc
mov
add
and
ljmp
cli
gs
mov
pop
adc
xor
nop
cmp
enter
fs
shll
cld
lret
xchg
out
les
fildll
pop
add
insl
mov
sub
imul
mov
lock
cld
jmp
les
outsb
daa
push
movsl
dec
stos
xchg
xchg
daa
xchg
sbb
jmp
push
mov
stos
aaa
aaa
add
decl
cmp
cs
ss
loopnew
cmp
cmp
dec
bnd
xor
ret
jp
and
add
inc
stc
push
or
mov
xchg
jne
in
lret
or
push
sub
imul
aad
lahf
aam
testb
cli
jecxz
int
outsl
dec
adc
xchg
std
movsl
sbb
jns
int
sbb
stos
sub
jnp
pop
ds
divb
jmp
xor
pop
xor
or
pop
sub
int
cmpsl
jbe
dec
sub
ret
sbb
in
pop
outsb
xchg
loopne
lret
push
dec
cmp
xchg
dec
inc
mov
xchg
push
outsb
cmc
imul
jb
cmp
ja
repnz
xchg
pop
addr16
xor
mov
aas
sbb
push
jb
or
cli
push
es
stc
jge
mov
and
mov
and
pop
cmp
pop
cltd
inc
jecxz
daa
btsl
test
inc
imul
pop
push
inc
dec
xor
or
jo
test
cmpsl
inc
pushf
lcall
and
jb
jmp
mov
push
les
jnp
es
fistps
fisttpll
into
mov
repz
call
mov
call
int
hlt
push
push
test
dec
insb
aam
or
add
or
stos
dec
adc
xchg
divb
and
pop
push
lds
out
sbb
fstps
sbb
rcrl
clc
inc
jne
or
ss
lock
mov
nop
sbb
int3
aad
sbb
push
and
add
mov
in
jo
jmp
sub
hlt
or
adc
fsubp
xchg
test
out
or
xor
fsubs
mov
mov
adc
data16
dec
cld
int
sub
inc
dec
and
fidivs
jmp
jnp
add
fcompl
xbegin
push
movsl
test
ljmp
aas
and
addl
push
inc
mov
sbb
and
sbb
adc
push
and
add
in
push
scas
push
inc
pusha
aad
test
mov
pushf
sub
mov
pop
sbb
frstor
fimull
scas
inc
jne
int3
lahf
or
jne
sub
test
fbstp
mull
dec
cmp
fs
pop
jae
fcoml
cmpl
jmp
inc
push
xchg
sti
xchg
data16
lahf
or
jge
cmp
mov
push
int3
push
dec
dec
mov
leave
dec
imul
aas
jo
or
cmpsl
mov
ds
movsl
cmp
out
sbb
sbb
jle
loopne
jp
push
inc
outsb
xor
rorl
lahf
int3
xorb
jae
loop
incl
int3
aaa
int3
push
sub
mov
fwait
pop
xor
test
mov
lcall
inc
jne
and
loope
fmul
mov
pop
jmp
sbb
testb
inc
jno
push
mov
test
cmp
sub
push
in
cmp
inc
call
mov
jmp
xchg
cltd
in
xchg
outsl
pop
pop
dec
mov
mov
andl
inc
inc
bound
mov
mov
pop
test
inc
mov
aas
outsb
aas
jbe
es
jne
cmp
or
leave
pop
lock
out
mov
lretw
add
icebp
sbb
sub
push
sbb
addr16
movsl
add
xor
fsubs
sub
cmp
jmp
push
fsubrs
or
mov
aas
mov
or
ljmp
test
sbb
mov
push
jbe
pop
mov
mov
push
cmp
out
sub
into
in
adc
xchg
pop
in
popa
xor
jge
movsl
pop
push
lahf
adcb
enter
sbb
shrl
adc
les
fdivrs
cmpsl
dec
push
mov
sub
pop
iret
dec
dec
scas
setne
loop
aam
add
sti
cmpsb
popa
jbe
jmp
pop
movb
dec
xor
movsl
dec
test
inc
xlat
jmp
shll
mov
lods
lds
add
cli
test
mov
in
inc
fldenv
mov
fwait
int
or
dec
ficomps
pop
pop
aad
ds
scas
dec
mov
cmpsl
mov
dec
insl
lds
int
ja
loopne
fbstp
mov
cmc
xchg
aaa
cmp
mov
push
sbb
or
shlb
imul
push
sub
cld
je
adc
pop
je
pop
bound
mov
xlat
lcall
push
add
sti
sbb
xchg
jae
inc
insl
into
rcrl
inc
dec
incb
imul
jecxz
mov
aad
into
push
aad
jp
or
pushl
mov
das
cs
cli
add
jb
mov
inc
inc
je
xor
pusha
push
mov
ss
and
jp
mov
scas
lret
aas
subb
aas
sub
push
sarl
loope
mov
dec
pop
mov
pop
add
ljmp
push
and
addr16
and
imul
fs
dec
adcl
jmp
add
out
popw
andb
ret
add
imul
sbb
sbb
inc
cmp
pushf
dec
ret
shl
lahf
fdivs
push
sub
adc
sub
shlb
pushf
cmp
mov
bound
push
push
in
in
pop
dec
push
daa
jns
jl
ljmp
jno
in
xchg
add
outsb
das
xchg
out
popf
dec
sub
mov
and
fsubrl
ss
add
ljmp
push
pushl
fnstcw
cmp
in
sti
mov
shll
push
jae
mov
jns
jne
loop
mov
xlat
lcall
sub
pusha
jle
and
test
mov
sub
cs
loopne
cwtl
loopne
ret
inc
ret
xchg
leave
jno
lret
aad
fisttpl
xor
out
out
loopne
icebp
cmc
push
xchg
out
movsb
leave
scas
lret
nop
sub
adc
lds
aad
incl
pop
nop
or
cmp
mov
rolb
ficoml
and
xchg
mov
aas
push
mov
jb
sub
test
or
push
and
xchg
pop
xor
xchg
pop
in
cmp
cmp
mov
ret
daa
adc
rcl
adc
or
in
clc
nop
movsl
jle
jns
sub
jg
mov
xchg
mov
imul
xor
popa
daa
lods
cmp
imul
outsw
iret
dec
mov
xchg
dec
out
adcb
lcall
xchg
stos
mov
cmp
aad
fxtract
movsl
dec
mov
ljmp
out
and
mov
mov
popf
or
int3
fs
les
leave
aam
mov
or
mov
lods
add
xor
sbb
sub
mov
fwait
mov
sbb
in
imul
sub
dec
cs
add
mov
inc
mov
mov
jne
cltd
int3
enter
int3
daa
jnp
push
inc
gs
push
sub
mov
jle
mov
xor
mov
or
add
imul
add
mov
mov
lock
push
sbb
movsl
addb
mov
les
jne
mov
addl
sub
orl
mov
push
sbb
inc
insl
out
xor
dec
ja
push
xor
push
cmp
outsb
sbb
cmp
xchg
and
in
test
popa
ja
in
cltd
mov
mov
push
cmpsl
packuswb
push
sbb
jle
test
sarb
pop
cmc
stos
lret
fwait
scas
push
or
inc
push
lock
push
push
insb
into
gs
jmp
adc
mov
mov
ljmp
mov
dec
cltd
cmp
nop
pop
adc
arpl
loop
daa
imul
xlat
or
xchg
pusha
clc
cmp
mov
addr16
in
fwait
dec
xor
fwait
je
mov
adc
sub
ljmp
mov
jo
pushf
jl
mull
jae
sbb
push
movsbl
pop
xor
dec
or
outsl
lret
jle
mov
inc
ret
sbb
cltd
cmp
mov
js
f2xm1
push
popf
push
xor
xlat
mov
call
das
fs
nop
push
insl
adc
popf
cmc
mov
in
mov
sbb
sub
mov
pop
xchg
popl
jle
in
and
pop
jg
or
sub
mov
enter
aam
dec
xor
arpl
push
fstps
or
inc
ljmp
aam
nop
pop
lods
mov
jge
dec
test
je
inc
in
adc
cmp
scas
enter
inc
sub
push
clc
push
arpl
cmp
xchg
scas
jne
mov
jl
sarl
xor
sbb
mov
outsb
cwtl
mov
mov
cmp
jmp
fdivrl
aas
sub
movsl
lahf
popl
jb
divb
orb
flds
lea
inc
push
or
xlat
aaa
inc
dec
jle
hlt
push
pop
add
rcll
fsubrs
out
addl
test
cmp
mov
inc
insl
loopne
ret
and
leave
aaa
inc
pop
add
rorl
cmp
call
or
sbb
push
push
pop
in
xchg
mov
lea
repz
and
jb
push
rcrl
jbe
scas
decb
mov
cmpsl
mov
push
bound
dec
xchg
dec
push
popf
inc
movl
cmp
push
fiadds
dec
fwait
sub
pop
cli
sbb
daa
into
mov
fsubrl
sub
jp
jp
and
repz
mov
fmull
jge
stos
aam
inc
lcall
adc
xchg
or
fwait
or
cmc
sbb
stos
ja
addr16
xor
push
adc
mov
pushf
xchg
and
or
mov
push
popf
out
adc
push
and
xchg
test
ret
lret
lahf
and
or
mov
mov
fbstp
inc
mov
adc
push
test
in
jp
mov
sarb
fcomp
or
push
jg
mov
jmp
pop
sbb
xor
xor
scas
and
in
fistps
sbb
adc
in
sbb
or
mov
push
sti
in
std
sub
pop
push
sbb
and
andl
test
inc
mov
mov
lcall
sti
and
into
std
mov
shlb
inc
push
mov
outsl
lods
repnz
xor
pop
sub
enter
stos
mov
sub
sub
jnp
imul
push
sbb
inc
jg
inc
idivb
cs
dec
mov
lods
xchg
incl
dec
jne
jp
ss
push
clc
or
clc
cmpsl
mov
add
dec
fwait
repnz
lds
sub
inc
out
aas
test
cmc
xchg
aam
jbe
sbb
insl
les
lcall
mov
popa
mov
stc
push
mov
adc
xchg
js
data16
jno
sub
mov
dec
xchg
add
sarb
ss
xchg
sbb
fwait
adc
pop
cs
jl
insb
mov
add
lock
test
sub
shl
popa
mov
mov
idiv
add
sbb
cmp
cmp
sarl
orl
fldt
cltd
xchg
fistpll
or
pop
sbb
push
push
pop
adc
mov
cli
xchg
test
clc
cltd
jmp
dec
dec
cmp
in
jnp
add
sbb
les
cmp
shl
xchg
or
and
mov
push
pop
std
adc
mov
loop
mov
dec
sub
sti
rcll
mov
arpl
push
fsubrs
andl
and
push
add
movsb
out
dec
in
mov
adcl
adc
sub
adc
pop
divl
idivl
lret
jge
cwtl
add
cmp
mov
xchg
lds
fucomp
test
inc
jecxz
cmp
test
and
xchg
lock
or
push
and
and
lahf
lcall
push
mov
loope
pop
fldt
xchg
int3
stos
push
mov
and
ror
mov
pop
nop
xchg
bound
sbb
or
jne
or
lcall
test
xchg
stc
adc
repz
popa
stos
lret
pop
mov
scas
fidivs
fisttps
mov
out
lods
rcl
jge
sub
or
arpl
push
pop
js
ja
mov
and
dec
clc
jp
xchg
dec
stc
subl
out
test
xor
mov
xor
jmp
fildl
adc
scas
dec
mov
xchg
stc
add
fmuls
sub
lods
inc
idivb
bound
pop
outsb
lcall
popf
test
jg
mov
or
lret
xor
lods
repz
xor
popa
mov
and
mov
aas
jb
pusha
nop
subb
push
dec
push
aaa
nop
cli
mov
jbe
mov
push
pop
in
call
push
call
dec
fcmovnbe
push
fbld
dec
aad
psubsb
xchg
inc
add
hlt
sbb
aad
out
lea
scas
dec
mov
sbb
fwait
xor
fnsave
decw
call
mov
outsb
lods
mov
cmp
pop
out
xor
push
lock
mov
fdivrs
or
aad
pop
add
mov
nop
push
sbb
aaa
mov
xchg
cmp
aad
mov
movsl
push
in
out
in
cmp
fdivr
xchg
stos
cmc
dec
adc
leave
xor
shrb
jg
lds
ljmp
hlt
fistl
iret
inc
shrl
ret
and
loop
push
push
int
popf
jl
adc
inc
std
mov
cmc
sub
mov
mov
push
adcb
and
out
mov
push
in
into
dec
xor
xor
mov
loop
out
jnp
test
push
sub
push
inc
jp
movsb
xchg
movsb
sbb
movsl
insb
arpl
movsb
aaa
jg
out
sub
xchg
mov
fstps
adc
iret
jnp
out
lods
fs
inc
or
ficoms
stos
jns
adc
leave
es
rcrl
xchg
mov
pop
dec
push
data16
jne
add
adc
dec
out
addr16
daa
sbb
or
sub
push
add
adc
adc
negb
idivl
je
add
or
or
mov
adc
push
jae
xchg
int3
je
test
lds
in
dec
mov
test
cmp
repnz
sub
xchg
call
lcall
cmpsl
pop
jg
lea
sub
test
jne
insb
dec
es
add
dec
pop
xchg
lock
sub
jp
xchg
and
add
aas
and
jl
in
add
inc
fisubs
mov
xchg
cmpsl
dec
lods
imull
pop
xor
in
adc
jns
shl
popf
jle
dec
jns
jg
dec
pop
jecxz
sub
sbb
testb
adc
mov
cmp
cmp
int
addr16
xchg
pop
lret
das
pop
aad
and
xchg
mov
and
mov
mov
mov
mov
push
clc
in
jns
or
shr
es
sbb
mov
push
jp
pop
stos
out
addl
ret
push
sub
insl
xchg
pop
lock
pushf
mov
jp
mov
mov
cmc
movsb
ret
mov
dec
movsb
lods
fdivrs
leave
pop
into
jne
push
jo
test
movsl
and
rolb
jge
mov
mov
add
rolb
sub
and
push
mov
mov
addr16
insb
push
jae
mov
aas
and
lret
adc
orb
xor
lcall
push
incl
or
stos
sbb
mov
add
hlt
and
cmovo
sub
pop
sbb
mov
jle
adc
fildl
add
cs
and
mov
outsl
scas
lds
add
push
jecxz
sbbb
in
dec
cwtl
jmp
rclb
push
mov
jp
mov
inc
dec
test
vmovntps
lock
test
orl
cmp
fstpt
lret
fsubl
ret
pop
mov
lock
sub
daa
cmp
cwtl
mov
imul
divb
lea
pop
push
xor
hlt
pop
mov
xchg
imul
mov
adc
cmp
pop
pusha
sub
inc
fsub
mov
ret
and
rolb
dec
mov
in
push
mov
mov
dec
notb
xor
frstor
jo
in
inc
sbbl
jae
subb
push
mov
and
dec
xchg
stos
dec
call
popa
test
mov
insl
dec
fdivrl
lods
cmp
lods
mov
push
mov
dec
leave
outsl
ja
jle
cmp
int3
jmp
inc
fwait
fidivs
outsb
push
mov
xchg
mov
insb
pop
sub
pop
inc
mov
xchg
addr16
fidivs
xor
cmp
icebp
mov
pop
pop
push
pop
adc
pop
arpl
gs
cmp
sbb
xor
in
jg
and
mov
mov
adc
or
jae
fists
xor
or
cmpl
jecxz
insl
fldl
es
lcall
dec
sti
push
pop
test
sahf
fidivs
gs
pop
and
pop
stc
adc
out
cmp
fsubp
sub
cmc
add
jl
jo
add
icebp
xchg
or
paddb
cwtl
call
push
call
outsb
test
imul
xchg
fbstp
xchg
sbb
pop
hlt
fiaddl
shr
pop
cmpsl
enter
in
popf
sbb
push
sbb
adc
add
mov
cmpsl
imul
leave
ds
mov
jns
out
aaa
lret
jmp
mov
jl
mov
fcomi
outsl
das
insb
aas
cwtl
in
jmp
arpl
insl
insb
mov
and
call
aam
or
shlb
aam
xchg
lahf
inc
mov
repnz
gs
mov
stc
or
mov
mov
xchg
cwtl
push
fstpl
loope
mov
mov
mov
mov
sbb
inc
xchg
scas
push
cli
mov
stc
addr16
mov
out
aad
xchg
adc
aam
ljmp
pop
mov
outsl
std
insl
jl
lahf
test
inc
cld
pop
xchg
push
adc
mov
jmp
hlt
add
jp
jmp
dec
repnz
sbb
pushl
sbb
push
shr
inc
imul
pminub
dec
xor
mov
es
jne
jnp
sub
test
testl
dec
outsl
pop
int
ret
test
test
pushf
fbld
ret
cmpsb
or
pushf
cmp
xor
and
dec
inc
enter
ds
and
addl
adc
les
maxps
lods
ret
sbbb
in
imul
ljmp
push
cmpsb
fsubs
adc
notb
adc
sbb
and
push
icebp
mov
dec
repz
fdivrl
js
xchg
int
in
movsb
add
xor
ret
push
mov
lods
aaa
push
and
test
xchg
out
das
xchg
sub
adc
call
fsubrs
popf
xor
popf
leave
clc
insl
mov
shr
daa
pushf
dec
lret
stos
lods
js
das
pop
adc
cmc
push
cmp
repz
jae
pandn
push
shld
stc
enter
pushf
add
mov
dec
cs
in
les
insb
mov
jmp
pop
jmp
mov
stos
ret
dec
xchg
xchg
and
fldenv
add
cwtl
aad
rdmsr
dec
imul
and
add
or
imul
hlt
or
add
mov
out
jmp
ret
or
sbb
add
test
fstl
popa
sub
in
mov
dec
es
cmc
push
rorl
cmp
lcall
mov
push
jo
lret
outsl
adcl
push
xchg
push
mov
iret
ret
cmp
jle
fwait
xchg
pop
push
pop
rol
inc
out
dec
push
and
pop
or
add
xor
xor
ja
sub
jns
cmp
test
add
popf
fcompl
into
out
push
js
jecxz
ret
inc
inc
add
ljmp
mov
sub
adc
addb
jo
std
into
insl
enter
cmpsl
pop
mov
jns
jg,pn
xchg
add
sarb
fists
aas
jae
jb
cmp
movb
xchg
maxps
leave
jno
into
adc
mov
dec
test
sub
lock
jae
jne
and
xchg
cmpsl
push
mov
out
out
jnp
jb
cld
mov
cmp
sub
ja
call
push
xchg
rorb
pop
push
adc
rclb
ret
decl
or
insb
daa
repnz
gs
movsl
or
outsb
mov
mov
mov
repz
mov
cltd
mov
shll
lds
lods
lcall
pop
sbb
dec
out
in
jg
push
mov
cmpsl
xor
lods
out
push
dec
jnp
push
cmp
jl
jne
fcom
xchg
ficoml
jo
rorl
sahf
adc
push
mov
dec
push
loope
rclb
rcrl
mov
adc
xchg
fldcw
mov
xor
mov
sbb
cmp
sub
and
lahf
xchg
adc
cmp
inc
dec
inc
mov
outsl
xor
sbb
and
push
in
mov
mov
mov
loop
ljmp
mov
cmp
push
orb
popf
dec
test
inc
and
jmp
jecxz
pop
lcall
mov
fstps
jae
test
daa
sti
outsb
inc
lea
or
addr16
subl
jo
sbb
jno
dec
insb
inc
mov
jge
nop
dec
loopne
fld
sbb
jno
imul
or
mov
sbb
in
lods
out
aas
and
out
and
inc
std
fdivrs
rcrb
inc
xchg
out
imul
cmp
hlt
mov
sarl
mov
sahf
pusha
scas
mov
popa
mov
in
aaa
and
int
ja
mov
mov
inc
lea
jno
mov
jl
xor
inc
sbb
lods
call
dec
fisttpl
push
test
push
leave
push
int
leave
sarb
or
adc
pop
mov
jge
cwtl
inc
scas
sbb
or
imul
dec
push
mov
fcompl
movsl
mov
mov
adc
mov
icebp
je
fwait
insl
jg
dec
loopne
test
jnp
test
pushf
jg
jg
jbe
leave
repz
sarl
mov
imul
and
rol
mov
or
cli
mov
shrb
jmp
mov
push
sti
sub
push
aaa
call
sbb
ja
notl
adcl
scas
mov
cs
into
xchg
sbb
loopne
rcrb
arpl
pusha
lods
outsb
jmp
inc
lea
cmp
out
mov
add
cmp
scas
repz
je
imul
xchg
cmp
xlat
popa
push
gs
sub
cmc
mov
mov
cmp
notl
sbb
inc
call
jbe
jmp
mov
xchg
push
dec
pop
dec
mov
add
or
inc
stc
stos
js
outsb
adc
dec
loop
push
xchg
test
sbb
out
and
ret
mov
stos
jg
push
out
sub
lods
in
adc
sub
cmpsl
es
jno
pop
pop
pusha
fistps
adc
sti
outsb
jns
jbe
daa
push
cmpsl
and
pop
mov
in
xor
mov
add
mov
scas
cwtl
hlt
aas
dec
cwtl
push
les
nopl
mov
fs
xor
or
call
fimull
sbb
adc
mov
sahf
xchg
mov
cmp
mov
sbb
xor
jmp
lret
lock
and
push
jb
mov
pop
stc
pop
sahf
call
ror
lahf
inc
or
pop
jbe
fucom
jge
xor
xchg
sbb
sub
ljmp
jnp
clc
jb
pop
cmpsb
das
arpl
enter
testb
add
scas
andb
lret
movsb
mov
je
js
popa
push
idiv
scas
lretw
lock
jb
pop
sbb
mov
push
cld
mov
add
decb
into
aas
movsl
cmc
testb
mov
push
xor
mov
fisttps
into
jbe
jns
int
add
mov
movsl
sbb
pop
fucom
fiaddl
mov
cmp
lret
lds
mov
pop
xchg
mov
ret
xchg
push
cmp
les
cli
sbb
mov
mov
cs
dec
fldt
xor
dec
popa
insb
scas
sbb
notl
xor
dec
pop
cld
popf
cli
jle
lods
add
cltd
lods
xchg
dec
lea
rcrb
ret
stos
pop
test
mov
add
sbb
mov
and
sbb
xor
test
mov
int3
negb
adc
add
dec
das
xor
sbbb
lret
mov
lods
sub
mov
push
lods
psubusb
imul
test
mov
pop
lret
inc
pop
movsl
stos
jbe
dec
xchg
call
and
sbb
lock
jne
daa
xor
js
stos
xor
push
xor
jmp
mov
xchg
cmp
insl
adc
xor
mov
dec
jae
pop
sbb
in
dec
xor
packsswb
int
lea
rcrl
jae
fmuls
inc
jecxz
aam
xorl
inc
xor
xor
sub
scas
int
lods
jp
in
pop
pop
mov
scas
lods
mov
dec
adc
out
xchg
mov
xchg
jne
lds
fsubs
mov
mov
stos
adc
xchg
jnp
xor
leave
xchg
xor
push
jge
mov
jno
xchg
ret
sub
lahf
fistl
pushf
loop
sub
cmpsb
xchg
pushf
pop
popa
xor
lea
orb
hlt
xor
and
mov
xchg
xchg
pushf
mov
jb
aas
xor
xchg
jns
jecxz
xchg
lea
sub
dec
fwait
pop
adc
xchg
dec
aad
sti
adc
mov
aaa
jnp
cmp
mov
mov
imul
rolb
add
xor
loop
push
dec
mov
fwait
and
int
and
xor
inc
inc
sub
add
adc
sbb
dec
ret
imul
mov
xor
cmp
gs
sbb
jnp
and
nop
cltd
jp
xlat
mov
scas
into
and
push
jbe
or
in
jg
push
jo
in
dec
jge
pop
popf
and
mov
adc
inc
das
ret
movsl
hlt
scas
and
adc
scas
fsub
in
add
sub
inc
sbb
imul
cmpsb
add
lods
lods
mov
jecxz
or
gs
lahf
cmp
xor
add
aad
add
lods
hlt
inc
jne
mov
push
pop
or
mov
fiaddl
cmp
hlt
iret
icebp
aam
std
aad
mov
xchg
pop
adc
adc
inc
popl
in
jp
sub
ret
popa
fists
push
into
inc
sti
movsl
or
cmpsb
fcomi
cmp
call
sarb
mov
in
push
push
sbb
sbb
xor
push
jg
out
sub
jno
insl
shll
insl
cs
mov
fbld
sbb
jmp
cmp
pop
mov
inc
mov
imul
test
aas
push
xlat
cmc
xchg
xchg
push
dec
mov
mov
push
mov
cmp
lcall
mov
mov
push
add
push
jecxz
aad
daa
ret
cmp
es
scas
or
in
stos
leave
das
xchg
xchg
cs
xchg
mov
mov
lret
cmp
je
gs
cmpsb
out
sbb
add
add
jno
lret
sbb
rcl
and
into
and
dec
js
cmp
ret
mov
in
cmp
xor
cmp
fdivl
scas
movups
sbb
xor
xlat
xor
rcrb
xor
push
xchg
gs
int
in
sbb
jge
bound
inc
rclb
and
jle
sbb
rcrb
adc
repz
test
cmp
adc
ss
jb
adc
call
das
dec
inc
pushf
fsts
scas
sbb
jge
test
pop
fldcw
dec
adc
pop
jge
push
or
fisttps
ret
imull
inc
cmpsl
clc
jmp
cmpsl
xor
nop
fidivrl
or
pop
imul
inc
movsb
dec
or
mov
inc
jp
xlat
call
movsb
rcll
pop
mov
outsl
repnz
mov
sub
or
in
fsubrs
jmp
pop
fdivs
mov
test
pop
out
js
mov
mov
out
inc
mov
scas
push
jne
daa
inc
insl
xor
inc
pusha
jae
xchg
mov
xor
ret
or
pop
outsb
aaa
inc
negl
cmpsl
xchg
push
nop
mov
mov
push
mov
add
lcall
jb
sbb
mov
fdivp
sub
mov
fnstenv
pushf
push
aad
dec
inc
popa
push
sub
pop
pop
push
push
pop
xor
ljmp
mov
cmpsb
sbb
outsb
dec
icebp
and
push
ljmp
dec
push
mov
dec
dec
lret
adcl
jmp
scas
push
in
pop
or
and
out
shrb
imul
jo
movsb
jecxz
dec
adc
or
push
das
cld
sarl
idivl
jmp
popa
enter
out
gs
scas
xor
nop
test
repnz
and
enter
jge
xchg
roll
leave
lahf
pop
hlt
cs
sbb
mov
dec
xchg
or
int3
sbb
sbbb
stc
push
xchg
out
push
popa
aad
or
push
and
sub
jbe
mov
aas
and
cld
in
or
loop
or
xchg
pop
and
inc
push
mov
fstps
sbb
repz
pop
in
push
movsl
std
xchg
scas
cmc
fadds
xlat
jmp
push
out
add
dec
jp
jne
cmp
cltd
jmp
cwtl
ss
xchg
paddb
mov
pop
lret
inc
pop
mov
xor
shll
cmp
or
mov
adc
mov
test
mov
movsb
xor
or
scas
nop
jecxz
stos
cmc
xchg
xor
adc
mov
jno,pn
stos
mov
mov
sahf
fnstenv
ss
mov
add
repz
sub
lret
pop
mov
xor
jecxz
dec
fildll
stos
or
or
jo
sbb
orb
pop
lcall
dec
push
repz
and
fnstsw
dec
sub
xor
arpl
dec
insb
icebp
pop
ffreep
imul
mov
fcmovnu
cmpsb
mov
xorb
push
test
aaa
cmc
xor
push
out
mov
insl
fs
into
push
repz
fmuls
cmp
mov
dec
or
mov
lock
cwtl
push
fiadds
push
movsb
adc
or
pop
dec
pop
outsb
mov
mov
cmpsl
xchg
dec
in
movsb
mov
lret
adc
pop
cld
cmp
bound
cli
pushf
adc
test
out
mov
int
push
lret
xchg
in
xchg
stos
and
dec
xchg
jb
test
out
mov
test
jns
and
scas
loop
dec
pop
and
sbb
in
and
insl
sub
loope
ljmp
adc
imul
inc
jnp
mov
or
mov
inc
imull
hlt
out
xchg
aam
out
adc
pslld
mov
inc
jle
movsl
push
sub
fbstp
leave
dec
mov
lret
inc
daa
dec
insl
jmp
shlb
xchg
mov
popf
sti
inc
sbbl
fiadds
lcall
in
insl
fsubrs
jmp
pop
add
xchg
lcall
cwtl
aam
push
push
loope
popa
mov
mov
fcmovnb
out
addr16
out
loopne
test
dec
mov
jmp
dec
fstps
dec
inc
add
add
out
inc
or
sahf
cmpsb
jne
insb
xchg
add
fcomps
pushf
jp
nop
xchg
pop
notb
sahf
lret
insb
aam
dec
sarl
mov
insl
xchg
dec
dec
dec
test
out
pop
call
ficoms
das
push
int
testb
mov
xor
ret
xor
adc
push
stos
scas
fmuls
in
adc
cs
lods
aad
movb
repz
mov
lret
nop
outsb
adc
fimull
shll
mov
and
xor
adc
mov
pushf
dec
xchg
jecxz
int
sar
cmp
inc
and
in
pop
cwtl
push
mov
jecxz
inc
sub
pop
mov
xchg
or
in
adc
mov
dec
hlt
adc
dec
scas
out
pop
mov
fwait
test
bound
fnstcw
sbbl
push
shr
push
ss
sbb
adc
xchg
notl
int3
repz
cmp
sbb
push
movsl
mov
fisttpl
lods
scas
stos
stc
ja
lcall
or
test
daa
dec
mov
pop
xchg
ffreep
cmpsl
or
dec
or
ss
and
add
out
mov
pop
lret
mov
test
cmp
push
popf
jle
sub
shlb
mov
jle
hlt
ja
fstl
sar
mov
jmp
inc
push
cwtl
inc
mov
mov
jg
xor
xor
and
out
in
or
push
jb
xor
rorl
mov
push
in
mov
mov
xor
sbb
test
adc
ret
pop
and
cld
pop
jecxz
das
mov
fdiv
mov
xor
in
addr16
enter
xchg
mov
push
mov
push
adc
xchg
and
pop
test
jmp
jp
and
xchg
cmp
push
push
lods
rorl
pop
daa
jbe
mov
or
sbb
xchg
lahf
or
cwtl
push
xchg
scas
inc
pop
nop
jl
and
cltd
gs
jb
fisttpll
movsl
lret
outsl
mov
inc
mov
dec
test
loope
inc
insl
mov
push
enter
lcall
enter
cmp
sub
enter
dec
mov
pop
push
xchg
mov
lea
push
out
out
inc
mov
mov
jnp
fidivrl
or
push
mov
inc
call
inc
jbe
xor
popf
addr16
and
mov
pushf
lods
mov
or
icebp
mov
inc
pop
adcb
xchg
sub
jb
fsubs
mov
out
mov
dec
out
jnp
or
push
and
repnz
lods
sbb
xchg
movsl
lods
sbb
push
push
mov
cmpxchg
ret
mov
ljmp
lahf
loopne
fmul
mov
in
fsubs
loop
aad
mov
xchg
outsb
nop
out
shlb
imul
jmp
sbb
sbb
imul
leave
hlt
fsub
push
shll
data16
add
mov
rcrl
mov
jns
sub
out
add
and
and
xchg
lds
jle
jo
adc
ljmp
jl
mov
cmpb
repz
adc
icebp
xor
test
mov
sbb
add
jbe
xor
es
test
sbb
sbb
rcll
popa
or
pop
push
add
call
loope
mov
mov
mov
mov
mov
sahf
mov
imul
jle
xchg
int
xor
fcompl
and
push
mov
cmc
lcall
mov
fcom
cmpb
xor
push
loop
pop
icebp
mov
sub
sub
pop
ret
shrb
icebp
add
cmp
aam
aaa
int3
je
pop
push
out
and
rcrl
mov
push
or
jmp
jmp
pop
std
add
pop
xchg
mov
inc
jmp
scas
rcr
mov
adc
pop
inc
cltd
fisubrl
lock
cmp
sbb
fnstenv
ret
in
jecxz
stc
pushf
dec
mov
lds
ljmp
stos
imul
fs
mov
pop
add
dec
in
xchg
jne
test
insb
imul
out
dec
sbb
mov
ds
scas
push
push
or
mov
sahf
cltd
cmp
mov
dec
push
jo
cmpsl
setns
add
repnz
fwait
mov
xor
mov
jo
int
sbb
xor
mov
hlt
xchg
cs
xchg
or
ja
mov
pop
push
es
sti
shll
jecxz
gs
stos
cmpsl
ds
fildl
popa
mov
sub
les
loope
ret
and
jmp
cmp
jmp
adc
mov
out
insl
push
sbb
popf
push
out
in
xlat
testb
pop
imul
insb
xlat
faddl
sbb
clc
mov
inc
ss
icebp
jge
adc
mov
lahf
xchg
cmpsl
fidivrs
test
adc
jge
mov
add
sbb
jb
adc
scas
ja
aad
mov
add
pop
clc
imul
xchg
push
fwait
push
add
push
inc
int
jb
jne
cmp
fs
dec
lea
cmc
lds
and
lods
out
mov
and
pop
enter
adc
test
mov
aas
mov
cmp
push
popa
clc
addr16
loope
add
loopne
pop
enter
std
fdivrs
sub
mov
jb
push
push
xchg
fnsave
xor
lock
pop
subl
sbb
jg
mov
jmp
mov
pop
repnz
mov
dec
or
out
fbld
cmp
shr
or
icebp
mov
mov
inc
call
inc
add
lods
dec
adc
cmp
xor
hlt
jae
adc
cmp
mov
int
iret
pop
mov
lds
sub
aam
call
jge
xor
lods
repz
push
fdivrs
xor
iret
pop
jbe
cmpb
gs
inc
or
push
in
mov
mov
adc
jo
aas
test
and
bound
dec
push
xchg
jp
add
frstor
lods
cmp
xchg
mov
push
or
adc
push
mov
aaa
adc
lahf
inc
rcr
push
adc
mov
xchg
or
int
aaa
mov
bound
jns
repnz
mov
xchg
push
es
movsl
jae
outsb
mov
jecxz
test
movsb
sbb
bound
inc
xor
rclb
xchg
xor
dec
icebp
mov
mov
call
mov
mov
jle
or
jbe
lods
aas
mov
imul
aaa
call
std
push
or
imul
movsl
xor
jnp
insb
iret
mov
jnp
insb
jae
fwait
and
outsb
push
dec
xor
js
mov
jae
mulb
cmp
lea
xor
xor
jb
rcll
jle
push
inc
flds
inc
add
repnz
shr
fmull
inc
out
test
jbe
jns
scas
jns
aad
mov
cmpsb
jae
sub
add
xchg
pop
or
adc
and
push
in
jb
push
add
fsubrl
cltd
aam
outsb
lret
ljmp
adc
or
pop
push
lds
test
adc
aad
jo
call
ret
mov
mov
adc
or
jmp
and
loop
jecxz
aaa
and
sar
jne
ss
loope
pop
or
cmp
jnp
inc
movsl
cmovge
out
sahf
rcll
js
sub
into
lahf
test
scas
sti
adc
xchg
imul
dec
lods
adc
dec
or
or
xchg
mov
jnp
inc
xchg
jg
lret
inc
shll
jb
sti
push
jg
enter
jo
jecxz
mov
xor
clc
push
imul
dec
inc
out
pop
fidivrl
test
shll
add
xchg
scas
mov
push
aas
enter
sarl
fdivl
popl
push
loope
nop
hlt
movsl
mov
pop
scas
imul
mov
sarl
pusha
sbb
ja
cwtl
negl
xchg
add
mov
outsb
jae
sbb
in
push
test
sub
pop
cmp
fisubs
out
jp
es
scas
sbb
sub
daa
mov
ret
jnp
sti
add
out
cmp
movsb
adc
mov
jnp
push
pop
push
shrb
inc
cwtl
icebp
xlat
das
add
add
pop
pop
push
inc
mov
mov
clc
sub
jbe
cli
test
jbe
mov
lock
pop
sub
push
xor
xchg
mov
addr16
test
and
ret
fsubs
aam
mov
mov
jmp
ja
movsl
xchg
lods
sbb
mov
sub
cs
arpl
mov
hlt
mov
mov
dec
aad
xchg
sbb
popa
inc
pop
mov
jg
adc
adc
dec
es
jecxz
inc
sub
mov
or
stos
cmp
sub
aas
jle
inc
dec
jae
jp,pt
jmp
sbb
push
jmp
repnz
push
inc
ja
add
test
pop
sub
sbb
push
out
in
or
sbbl
clc
dec
xor
ss
jo
push
stos
push
push
aam
stc
shr
sbb
pop
mov
mov
sbbl
jg
lret
add
idiv
xchg
out
and
dec
jp
xchg
or
movsb
inc
inc
scas
daa
xchg
xlat
mov
daa
jae
aad
movb
xchg
arpl
call
cmc
sub
imul
das
mov
sarb
mov
movsl
pop
push
push
rclb
lds
movsl
fildll
xor
pop
pop
mov
mov
popf
lods
mov
cwtl
in
fcom
fimuls
add
inc
sbbl
gs
repz
inc
std
cwtl
inc
add
xlat
cs
psubusb
mov
sub
mov
add
pop
lods
out
push
cmp
pop
outsb
sbb
dec
adc
scas
jo
lods
incb
hlt
dec
dec
ljmp
add
inc
inc
pop
bound
mov
stos
andb
filds
ret
xchg
je
or
inc
adc
enter
insl
rcrl
les
filds
jp
sub
push
fcomps
int
sub
movsb
pop
mov
add
pop
inc
enter
pop
insl
rcr
push
sub
inc
xor
mov
dec
mov
outsl
mov
or
rorl
rcll
fistps
push
sub
cmp
imul
les
pop
push
mov
test
jecxz
mov
scas
xchg
sub
cmp
dec
into
div
outsb
hlt
jne
loopne
push
ds
jge
sub
mov
jne
lock
in
icebp
call
xchg
sub
test
push
xchg
add
mov
mov
mov
lcall
jge
aam
dec
cmp
mov
sti
sub
xchg
or
sub
shlb
mov
imul
dec
pop
fwait
pop
mov
sub
pop
or
cltd
les
in
aaa
stc
push
xchg
adc
das
mov
xor
and
add
push
jecxz
adc
xchg
dec
scas
mov
inc
mov
sub
push
sti
jmp
mov
out
orb
pop
fisubs
inc
inc
pop
fstl
push
lods
stos
or
notb
mov
cmp
fldt
xor
int3
arpl
jecxz
fisubs
dec
add
cltd
cld
das
push
xchg
inc
scas
bound
inc
fdivrl
out
imul
mov
or
daa
sahf
in
push
ljmp
xor
inc
sahf
or
das
lds
adc
ss
dec
loope
add
popa
std
movsl
mov
sub
popf
or
addr16
jno
leave
pop
and
aam
std
outsl
cmp
scas
mov
mov
add
pop
cwtl
sbb
fsubr
insl
or
sbb
mov
cmp
sbb
dec
sbb
push
push
repnz
dec
inc
and
adc
pop
push
push
pushf
lods
dec
mov
dec
cmp
iret
lcall
pmaxub
cmp
in
notb
or
jp
mov
pushf
dec
bound
jo
jnp
cltd
cmp
stc
xchg
jp
or
xchg
inc
xor
nop
push
xchg
repnz
cmp
cmc
sahf
push
xor
push
scas
push
push
inc
or
filds
inc
movl
jae
mov
les
and
push
popf
cmpsb
test
fdivl
jno
int
inc
ja
pop
imul
inc
fcompl
fdiv
pop
lret
or
es
or
xor
xor
adcb
aas
jne
sub
mov
sub
insb
inc
add
add
lock
imul
xchg
sahf
jg
mov
lahf
js
pop
xchg
mov
es
inc
bnd
mov
ret
jg
mov
test
dec
cld
xor
loopne
or
clc
sub
and
loope
jmp
cmp
andl
or
dec
sub
jno
je
xchg
jo
jecxz
mov
movsb
xor
mov
add
or
popf
xor
add
popa
pop
insl
lret
int3
aaa
scas
xchg
xor
dec
sbbl
ljmp
leave
nop
and
pop
stc
arpl
add
jp
pusha
add
xchg
mov
aad
sbb
push
nop
icebp
or
lahf
popf
test
aas
inc
mov
test
fwait
mov
jle
push
or
mov
inc
push
and
jno
xchg
lret
sub
adc
enter
icebp
movsb
rorb
adcb
mov
mov
jle
push
cmp
js
mov
das
rcll
shrl
xor
push
or
inc
push
mov
test
mov
and
mov
aas
fcom
int3
arpl
mov
inc
rclb
inc
and
arpl
bound
clc
xor
lock
jmp
push
and
mov
sub
mov
mov
pusha
loope
out
loop
sbb
push
xlat
shl
mov
dec
cmpsb
stos
out
xchg
jg
mov
mov
xor
lods
pop
xor
adc
add
loope
int3
add
mov
add
fs
mov
cs
scas
xor
push
inc
mov
fwait
test
sub
insb
lret
outsl
mov
loopne
cmp
pop
fisubrl
cmp
lods
cld
outsb
jge
push
pop
mov
rcr
jne
mov
fistl
mov
test
sbb
jge
pop
cmp
jle
test
jns
push
jp
inc
faddp
inc
mov
loopne
jecxz
int
push
xchg
in
int3
sbb
xor
adc
xchg
cmp
push
xlat
mov
pop
inc
stos
ljmp
sub
shl
mov
jns
mov
sbb
idiv
icebp
xor
out
leave
dec
or
or
cltd
shll
jb
loopne
leave
push
cmp
pop
mov
jmp
ret
jg
mov
mov
cmp
sbb
or
mov
lods
mov
lret
pop
js
cmp
xchg
sub
mov
idivb
dec
push
sub
pop
enter
test
inc
addr16
insb
cwtl
out
lea
pop
icebp
pop
out
mov
pushf
xor
imul
ret
jb
mov
imul
pushf
shll
clc
mov
int
lods
xlat
fidivrs
jmp
xor
popa
push
cli
fisubs
lds
and
and
push
orb
iret
in
push
jmp
mov
lahf
add
or
dec
xor
iret
mov
jnp
fwait
jae
xlat
mov
lock
arpl
lret
push
cli
or
push
stc
xchg
mov
lods
shlb
fdivl
mov
imul
daa
xlat
stos
sbb
add
mov
cmpsl
xor
cmc
int3
daa
inc
test
ret
pop
ficompl
xorl
subb
adc
xor
jge
repz
jl
mov
mov
cmp
maskmovq
notl
xchg
dec
jae
sti
push
inc
scas
stc
ljmp
xchg
push
cmpsl
ds
push
incl
or
loope
pop
mov
mov
lcall
pop
and
push
cmp
lods
xor
mov
inc
ljmp
jp
jmp
clc
sub
and
cli
mull
dec
lcall
orl
fwait
jb
jo
mov
push
mov
jge
nop
mov
testb
addr16
outsl
shlb
xorb
xchg
xchg
mov
mov
dec
lea
cmp
jne
dec
icebp
mov
loopne
adc
mov
xchg
into
enter
or
dec
or
push
repz
lret
nop
clc
popl
clc
push
lods
jmp
push
enter
hlt
add
jns
sub
push
push
repz
cli
inc
test
cmp
lahf
cmpsb
data16
rcrb
ficomps
test
mov
inc
xchg
in
shl
outsl
sbb
and
jne
sbb
lea
mov
add
add
xchg
add
ja
test
mov
mov
pop
mov
cmpsb
jle
xchg
or
adc
vmovddup
fbstp
mov
sbb
cmp
stos
add
jno
and
lcall
repz
and
mov
pop
mov
mov
pop
push
jge
push
imul
push
sub
inc
dec
sbb
adc
xchg
push
sbb
out
cmp
cmpsl
lea
sbb
jb
pop
sarb
sbb
jns
push
mov
push
scas
sub
imul
cli
les
fwait
imulb
sbb
push
adc
testl
mov
repnz
push
shll
dec
js
imul
jl
and
pushf
jo
out
jo
repnz
jb
fwait
mov
mov
mov
mov
fs
rcll
dec
dec
mov
pop
clc
cmp
aaa
arpl
xchg
sbbl
std
sti
subl
push
and
inc
test
add
insb
xchg
jb
mov
fistpl
in
push
and
iret
or
scas
jns
scas
mov
and
add
scas
ja
mov
inc
jmp
xor
jmp
pop
sti
js
pop
inc
adc
push
imul
and
pop
add
dec
mov
xchg
mov
addr16
push
pop
fsubs
mov
test
pop
sti
cmpsb
cmc
out
cmpsl
and
mov
jge
and
cmp
arpl
movsb
gs
or
sbbl
xor
mov
subl
insl
xchg
dec
notl
int3
fstpt
mov
ja
push
jg
adc
js
clc
adc
bound
cmc
cld
add
add
push
xlat
cld
push
jmpw
out
adcb
lds
dec
mov
mov
xchg
pop
dec
pusha
shrl
in
daa
jecxz
mov
sub
or
push
shll
daa
out
sub
xchg
push
movlhps
lds
leave
cmp
adc
pop
jb
stc
out
cmp
stos
gs
xchg
jbe
jmp
or
cmp
fidivs
clc
hlt
mull
outsl
sub
bound
hlt
dec
jbe
loopne
mov
adc
rcr
addl
or
xor
and
dec
sub
jns
xchg
sti
inc
setnp
cmp
icebp
push
push
fildll
push
mov
sub
prefetch
mov
int
push
mov
push
loope
xor
pop
inc
sahf
out
add
pop
notb
fcompl
inc
and
cmp
adc
push
mov
push
insb
jnp
rcrl
mov
lds
mov
sbb
pmullw
test
mov
push
pop
je
inc
imul
btsl
inc
mov
jg
mov
jle
sub
mov
ss
xchg
pop
jns
test
stc
mov
ljmp
mov
out
cmpsb
ret
outsl
sub
push
pop
or
or
mov
loopne
rcrl
adc
xlat
add
dec
dec
ficoml
ret
pop
push
mov
mov
sarb
fwait
sub
bnd
ficomps
sub
xchg
sub
xor
ss
lcall
bound
pop
sub
fists
sub
mov
mov
ror
mov
xor
icebp
repz
pushf
je
loopne
cmp
mov
inc
and
add
outsl
jge
adc
adc
stos
idiv
pop
repz
mov
lods
in
sar
inc
add
ds
rcll
push
jge
cmp
hlt
sbbb
lock
add
push
rclb
xchg
int3
xor
stc
pop
inc
add
inc
test
pop
out
sbb
daa
push
lds
jecxz
test
das
fcmovbe
dec
pop
pop
jae
cld
int3
pop
enter
imul
imul
mov
fwait
xchg
inc
mov
mov
jl
shl
out
ljmp
fbld
mov
shlb
sarl
int3
leave
push
pop
ja
and
aam
aas
push
jno
lods
jl
lods
mov
imul
push
rcrl
shl
clc
and
or
dec
arpl
std
jns
out
mov
push
xchg
push
ljmp
fdivrl
rep
pop
ror
pop
cmpsl
pop
pop
jne
outsl
add
popa
push
add
jge
out
rorl
pusha
add
jg
pop
push
hlt
cs
dec
cmp
fwait
into
mov
imul
or
test
rorl
jp
push
loop
lret
xchg
addl
aam
jg
cmpsl
and
mov
sbb
add
add
inc
adc
mov
sub
std
lahf
aas
cmpl
xchg
mov
xlat
or
sahf
add
lahf
lds
data16
shll
push
xchg
or
or
incb
cmp
dec
je
shll
or
xorb
cmp
push
push
mov
popa
xchg
or
pop
cltd
adc
mov
fldl
dec
inc
sbb
shr
nop
int
adc
mov
popa
ficomps
sbb
inc
pop
mov
inc
mov
dec
pop
es
mov
or
lods
sar
jmp
call
xchg
bound
shl
out
aam
mov
shrd
jnp
mov
pop
sub
and
or
fstpt
push
sbb
addr16
xchg
xor
xchg
out
adcb
pop
pop
sarl
shrl
stos
imul
mov
jp
insb
pop
push
je
incb
int
pusha
add
mov
pop
pop
cmp
cmp
mov
mov
xchg
adcb
ret
jbe
pop
xor
gs
sti
inc
loope
and
sub
mov
cmp
cld
addr16
jns
das
test
js
sbb
push
fdivl
cld
sbb
xor
adc
js
adcl
das
mov
xor
testb
pop
and
xchg
sbb
xchg
jne
aam
xor
mov
lret
push
pop
xchg
test
adc
movsb
cld
cmc
cmp
movsb
push
jl
sti
jecxz
popf
dec
and
push
jp
mov
cli
movsb
fildll
and
out
arpl
fstpt
mov
insb
mov
incb
les
xchg
and
scas
cmp
cli
mov
mov
jmp
test
outsb
in
mov
pop
xchg
lahf
push
out
in
es
xchg
aas
mov
out
addr16
andl
sbb
cwtl
push
scas
and
rcr
les
inc
inc
push
enter
push
xchg
adc
nop
outsl
xor
mov
aas
mov
mov
xchg
cmp
enter
push
addr16
xor
sub
idivb
cmp
mov
or
adc
aam
xchg
jbe
xchg
pop
in
push
jns
les
shlb
fisttpll
rcrl
lret
pop
xchg
and
clc
std
ret
adc
sub
lock
mov
mov
inc
leave
mov
mov
stc
cmp
into
es
lcall
stos
fildl
scas
fnsave
and
mov
push
ljmp
mov
int3
sbb
xor
xchg
xchg
dec
ror
ds
add
lret
or
mov
push
pop
xchg
call
pushf
jbe
in
jno
or
ja
sbb
cli
inc
lcall
add
lods
jmp
addb
jmp
add
or
push
pop
mov
add
pop
or
or
push
inc
mov
movsb
cmp
js
lock
repz
jns,pn
repz
sub
jp
add
and
fnstsw
mov
sbb
popa
insb
repz
jns
xchg
das
cltd
mov
or
pop
or
pop
pop
addr16
scas
sub
sub
gs
xchg
sbb
jae
cmc
js
mov
mov
test
aam
out
push
mov
cmpsl
jg
arpl
cltd
sbb
sbb
xchg
scas
xchg
out
push
or
push
and
xor
je
xchg
jno
push
push
insb
mov
aas
pop
mov
pop
js
fidivl
pop
shll
repz
leave
loopne
in
scas
stos
pop
pop
xchg
bound
sahf
std
push
mov
sbb
arpl
dec
and
xor
rcrl
in
mov
and
ja
loope
adc
mov
cmp
insb
fldenv
enter
mov
mov
xchg
mov
mov
dec
cmp
inc
or
aas
or
and
mov
xchg
xor
push
adcb
push
sti
popf
stos
pusha
or
push
push
fistps
xchg
mov
sub
mov
pop
mov
push
lock
xchg
inc
mov
push
xor
push
dec
stos
pop
push
popf
lret
pop
mov
fwait
cmc
xchg
ja
pop
lahf
adc
call
jno
cmp
aam
lret
cli
inc
cmp
fcmovu
xlat
push
js
test
xor
push
adc
cmc
roll
int
inc
arpl
das
movsb
jle
inc
ja
rorb
call
aad
mov
push
jg
xor
lods
mov
inc
bound
xor
movsl
add
push
rclb
stc
push
sub
or
add
adc
push
sub
cld
fnstenv
addb
or
and
out
push
or
stos
movsb
dec
lcall
jno
arpl
out
jle
ljmp
fwait
repz
inc
mov
mov
in
jbe
dec
arpl
fisubs
inc
jbe
stos
fcoml
lds
jmp
dec
push
push
jp
call
add
insb
daa
add
arpl
stos
js
xor
lret
push
xor
xlat
hlt
scas
loop
fs
lret
inc
sbb
sbb
mov
xor
jbe
out
arpl
cmp
out
shll
dec
mov
stos
xor
test
sub
addr16
jg
sbb
cmp
pop
sub
fistps
sub
push
shl
clc
mov
xchg
cmpsl
fisubs
cli
lahf
mov
push
sahf
je
push
dec
std
inc
es
push
dec
std
inc
int3
orl
popa
sbb
mov
das
pushf
push
fisttpl
ljmp
jns
xor
add
jg
sub
xlat
push
pop
sub
or
xchg
xchg
andb
xchg
ljmp
mov
adc
clc
scas
enter
mov
jp
mov
mov
pop
push
testl
enter
cmp
and
cmc
imul
aaa
cmpsb
out
lahf
lcall
mov
xor
mov
xchg
cli
jg
outsb
jnp
pop
pop
ja
sbb
icebp
in
push
and
repnz
idivb
push
mov
popf
scas
jns
rolb
sub
jno
fidivs
push
pop
mov
add
fldcw
out
or
sbb
stos
mov
cmp
jb
stos
shrb
push
pop
fisttps
xchg
nop
shlb
dec
popf
pop
stos
out
xchg
insl
sbb
nop
sti
sahf
psubusb
ja
add
shrb
pop
pop
shll
clc
mov
or
test
pop
mov
daa
movsb
sbb
out
pop
add
es
mov
mov
and
mov
mov
ds
cwtl
nop
ja
xlat
fisttpll
ds
jle
cmp
add
aad
in
jmp
call
fisubs
rorb
js
int
add
fisubs
lods
xor
arpl
cmp
xchg
lcall
adc
mov
gs
adc
mov
xchg
jl
int
mov
lods
rcrb
and
icebp
fadds
mov
mov
popa
mov
cltd
outsl
pop
ljmp
cli
fsubl
dec
jmp
mov
push
scas
test
sarb
in
push
leave
into
or
enter
sub
jg
push
pop
rclb
add
and
mov
inc
dec
std
xchg
jp
jmp
cmp
mov
jmp
lock
add
cmpsl
sbb
xor
shrb
sbbb
push
push
std
lds
inc
rcr
fnsave
mov
aas
outsb
add
cld
test
sub
stos
test
mov
mul
adc
push
pop
fwait
cmp
testb
push
cmpl
mov
testl
mov
aaa
jno
or
xchg
mov
dec
cmp
ror
das
test
jle
rcrb
adc
jmp
sahf
aam
pop
xchg
sbb
or
and
sbb
push
mov
popa
test
imul
icebp
mov
ja
pop
dec
dec
pop
leave
sbb
xchg
adc
sub
daa
xchg
mov
out
dec
jne
sarb
and
test
sub
repnz
mov
ror
test
mov
jmp
add
int
add
hlt
push
jbe
stc
shl
add
iret
mov
dec
cmp
mov
ss
push
shlb
cld
mov
popf
sub
mov
mov
jo
pop
inc
ret
flds
sub
test
int
cltd
mov
imul
xchg
push
or
sub
push
mov
cmp
xor
iret
andb
lds
push
sbb
pop
test
xor
scas
int
and
sbbl
dec
lret
xor
jle
mov
lods
xor
insb
jg
jnp
leave
mov
leave
insb
aam
add
fimull
and
sti
pop
mov
add
adc
adc
push
cmpsb
and
pop
mov
inc
add
test
test
cmp
pop
pop
mov
xchg
fdivrl
je
enter
push
cmpsl
xchg
cmp
push
inc
add
push
or
sbb
mov
xchg
out
gs
ss
xlat
jg
popa
sbb
rorb
out
dec
lcall
mov
ds
adc
pop
cmp
sbb
lds
sbb
sbb
inc
jmp
iret
out
movsb
jae
mov
inc
loope
in
xchg
xor
cmp
rcrl
xor
cmp
and
pusha
xor
fdivrs
mov
dec
aam
and
dec
outsb
dec
push
mov
mov
xchg
mov
and
mov
push
and
mov
ljmp
incb
push
lahf
imul
dec
je
fdivrs
xchg
sub
and
push
cmp
sbb
ds
xor
dec
cmp
dec
jb
aaa
mov
push
cmpsl
cmp
add
sbb
pop
js
add
cmp
sub
push
pop
adc
mov
cltd
add
push
testl
es
jp
and
mov
int
sbb
mov
push
pop
push
sti
fcmovbe
imul
out
ffreep
pop
rclb
and
test
jecxz
divb
cld
push
mov
push
inc
inc
outsb
arpl
adc
inc
jge
adcl
mov
loope
addr16
xchg
lahf
push
jnp
cmc
xchg
adc
xlat
sub
sbb
add
mov
sub
push
lcall
leave
outsb
mov
add
shlb
xchg
adc
jno
mov
fwait
sub
int3
inc
loope
pop
sbb
xlat
sub
ss
test
adc
sbb
jmp
jg
xorb
dec
lfs
dec
inc
lock
shrl
int3
sahf
iret
dec
mov
add
jne
and
mov
xorl
pushf
cld
jmp
and
dec
sbb
loopne
lds
incl
ret
or
into
push
mov
lds
out
sub
inc
adc
rolb
outsb
cltd
cmpsb
aad
inc
insb
mov
outsb
mov
scas
or
push
andb
iret
cli
inc
jp
stc
mov
sub
cmp
ret
aaa
test
pusha
stc
fs
fwait
adc
aas
test
xor
pushf
jmp
pop
inc
add
fwait
xor
dec
inc
popf
or
out
adc
jp
aam
xchg
or
inc
cwtl
add
ret
jle
adc
mov
mov
sub
hlt
cmp
push
jmp
pop
aam
push
ret
xlat
or
mov
jmp
roll
ficomps
xchg
lret
pop
out
cmp
mov
stos
mov
aaa
and
inc
popl
xor
add
in
ror
push
push
cmova
cltd
inc
push
mov
rorl
jmp
pushl
and
mov
lods
adc
leave
pop
mov
xchg
enter
mov
mov
and
sar
push
xchg
scas
mov
fpatan
pop
push
bnd
or
in
or
das
xchg
push
jge
cmp
push
and
ljmp
popa
push
aad
push
les
xchg
inc
mov
loop
loopne
loop
addr16
test
push
adc
jb
dec
pop
mov
gs
in
mov
mov
lret
rcll
fwait
mov
in
das
rcl
add
sbb
rcrl
push
cmp
mov
mov
out
test
scas
mov
lret
sbb
mov
data16
push
fists
adc
out
shr
pop
mov
inc
mov
out
ss
lock
rcll
jns
lret
or
pusha
aaa
adc
sub
insb
mov
cmpsl
or
hlt
sub
rcr
and
dec
loopne
inc
dec
add
push
mov
cmpsl
pop
or
mov
sahf
push
xlat
mov
js
or
int
imul
int3
xchg
and
sbb
test
loopne
aaa
push
aad
rcrl
test
inc
push
and
out
sub
pushaw
test
lahf
pop
mov
add
or
and
and
jmp
mov
sahf
push
loop
lock
push
out
lock
sbb
out
stos
cmp
sbb
add
inc
ficoml
inc
push
pop
adc
mov
or
push
mov
or
sbb
push
outsb
or
cld
jnp
in
push
push
je
inc
out
jns
push
jge
jg
add
ret
in
aad
fstpt
std
sbb
xor
std
in
jp
mov
jo
add
pop
fists
loop
iret
pusha
outsb
or
inc
aas
jo
shrl
sahf
and
add
cmpsb
pop
out
fwait
and
mov
adc
aas
jns
outsl
shlb
and
mov
sbb
inc
xchg
int
mov
fildll
outsb
inc
jp
lret
test
xor
xchg
mov
cmc
rcrb
testb
and
pop
xlat
shll
cmp
mov
cmp
pop
scas
test
and
in
ds
aam
cmpsb
ja
das
jo
pusha
add
dec
add
inc
out
inc
xchg
jecxz
enter
cmp
pusha
adc
mov
jecxz
xlat
outsl
test
dec
adc
rol
sti
sbb
jecxz
add
out
fs
adc
xchg
jno
out
fwait
ss
adc
aam
cmp
ficoms
movsb
mov
push
hlt
std
push
pop
leave
add
je
adc
cs
xor
les
pop
cmc
xchg
mov
pop
lcall
xchg
add
mov
popa
test
mov
fwait
iret
add
mov
push
mov
adc
out
cmp
cltd
lock
cmp
popa
pop
mov
fs
dec
jnp
jle
in
inc
push
jecxz
sbb
push
sbb
cmpsl
imul
cltd
data16
nop
inc
pop
sub
popf
mov
loope
aaa
ljmp
fisubrl
pushf
push
inc
pop
fmull
aad
inc
das
jno
insl
sub
adc
cmpsb
inc
cli
cmpsb
sbb
dec
sbb
cli
push
andb
inc
sahf
rcr
in
loope
mov
mov
das
lods
add
adc
and
scas
xorl
mov
or
pop
aas
stc
cmp
fimull
testl
jp
mov
fst
dec
dec
clc
xor
xor
idivb
dec
loope
lahf
out
mov
sbb
pop
hlt
es
arpl
mov
in
xchg
imul
push
sahf
rolb
and
add
fstl
mull
fidivrl
mov
pop
imul
add
cmp
fnstsw
fsubl
orb
arpl
je
jbe
into
fisttpll
jo
xchg
or
sbb
or
xor
and
in
inc
pop
sbb
cwtl
in
lret
sbb
addb
xchg
movsl
fs
mov
leave
test
push
stos
cltd
roll
push
shlb
scas
pop
lcall
dec
out
mov
add
mov
and
shlb
pop
push
sub
pop
pop
movsl
pop
lret
fstl
sub
outsb
and
sub
pop
pop
int
dec
inc
xchg
nop
adc
push
mov
inc
or
jb
cmp
jnp
pop
pop
cmpsb
loop
inc
add
mov
or
je
filds
sti
xchg
push
inc
out
sarb
nop
das
inc
xchg
xor
ret
subb
adc
or
and
cmp
imul
xchg
les
test
inc
xor
shl
into
lcall
repnz
ss
shl
ss
aad
push
jb
lahf
pop
in
ds
outsl
jmp
int
imul
or
lret
xor
cli
jno
sub
cmp
cmp
fsubrs
ss
push
scas
ljmp
add
adc
arpl
cs
int
popa
mov
mov
cmpsb
mov
mov
push
test
xor
jno
int3
sub
imul
jno
cwtl
jae,pt
push
inc
test
cli
mov
sarl
repnz
lods
jmp
rorb
xchg
inc
adc
xor
add
sub
ret
in
pop
pop
out
vshufpd
and
sub
push
mov
mov
sahf
sub
adc
xchg
test
ss
lock
mov
nop
mov
push
outsl
cwtl
cmpsb
fimull
dec
jb
dec
xchg
cmp
lcall
mov
shrb
ja
mov
sub
jno
jbe
xchg
pop
hlt
rcll
stos
cltd
lea
out
mov
loop
mov
sub
adc
imul
js
mov
daa
dec
or
fadds
sub
sti
inc
sbb
jbe
or
jmp
enter
jb
sbb
pop
ljmp
lcall
mov
jo
mov
dec
test
in
ja
xor
mov
push
push
sub
adc
test
sbb
sarb
ret
int3
adc
add
mov
fisubrl
mov
sbbb
fwait
xor
imul
in
sub
adc
or
aas
mov
out
in
jge
xchg
out
push
push
inc
leave
or
pop
mov
stc
cmp
lret
bound
and
adc
outsb
cmp
cmp
jp
push
jb
mov
fldcw
fwait
bound
scas
out
aad
mov
xchg
popf
or
or
pop
fwait
jo
mov
mov
repz
loopne
insl
jmp
push
jl
notb
ja
xlat
adc
pop
jb
aam
sub
add
outsb
scas
xlat
jne
lods
or
inc
out
and
xchg
mov
push
jle
adc
add
ja
lea
les
hlt
add
stos
daa
lds
or
mov
aaa
mov
in
sub
in
push
push
jne
test
xor
hlt
test
popa
loope
jae
push
outsb
fcompl
xchg
mov
cmpsl
hlt
or
cmp
aas
mov
loopne
test
movsl
cmp
andb
jle
out
stc
push
pop
add
adc
scas
test
ss
into
arpl
repz
cmp
push
es
jno
fs
push
push
inc
xlat
das
jns
int
xchg
or
in
dec
faddl
imul
shrb
das
xchg
cli
cltd
or
lahf
push
push
mov
test
mov
inc
gs
mov
enter
stos
push
lahf
pop
xor
leave
lea
mov
mov
dec
sti
imul
cwtl
xchg
push
ficoml
ljmp
push
xor
jmp
imul
xchg
dec
jmp
aas
dec
mov
das
push
or
cmp
mov
out
lret
or
pop
jbe
cmpsl
cwtl
out
pop
sarl
fisubs
jno
shrb
inc
xor
and
add
inc
test
addr16
sbb
pop
movsb
std
ret
dec
jge
or
lods
push
pop
jg
inc
add
mov
adcl
push
push
jo
rol
adc
mov
imul
mov
sbb
es
xchg
fsin
mov
pop
into
mov
pop
jmp
test
xchg
cmpsl
push
fmull
pop
sbb
sub
sbb
subl
sarb
sub
lret
stos
mov
movsl
xchg
sbb
out
mov
dec
out
pop
push
mov
sti
int
das
jle
pop
test
movsl
sub
sub
lret
cmpsb
out
dec
popa
and
mov
fsts
push
mov
jno
repnz
add
and
pusha
jle
fs
mov
inc
loopne
and
in
sub
jo
jl
cmp
or
or
inc
mov
inc
cmpsl
xor
and
xchg
and
rolb
xchg
push
or
push
and
jo,pn
and
enter
fwait
mul
je
push
shll
hlt
adc
inc
cmp
sbb
mov
repnz
push
push
test
in
roll
dec
cltd
dec
and
cmp
ficoml
mov
and
dec
or
jo
mov
mov
and
and
cmpsb
jnp
in
xor
xor
mov
ja
lret
or
mov
jecxz
inc
enter
xor
mov
test
rorl
cwtl
inc
jecxz
inc
aaa
add
adcl
jno
stos
adc
cltd
sti
sbb
in
lods
or
fwait
or
mov
in
jl
cmp
jmp
test
hlt
xchg
or
lcall
inc
xchg
sti
cmp
pop
testb
adc
xchg
mov
xchg
lretw
mov
lcall
mov
mov
rorl
clc
sub
sub
inc
inc
scas
sbb
xchg
imul
adc
sbb
xor
andl
fcomps
pop
inc
push
hlt
adc
ja
loop
inc
test
std
sbb
repz
jb
lods
pop
xchg
push
inc
int
xlat
imul
dec
lds
hlt
jmp
xchg
scas
out
mov
dec
cld
push
xchg
xchg
and
jg
jno
and
sub
ss
pop
and
les
add
js
leave
pop
adc
jae
int
and
loopne
out
pushf
sbb
out
push
scas
cmp
jp
in
in
jnp
xchg
lcall
outsb
lret
pop
mov
inc
sub
js
xchg
jle
jge
dec
inc
xchg
sbb
inc
dec
jbe
mov
in
sub
outsl
xchg
xchg
andl
jl
xchg
add
or
pop
mov
xor
xor
lcall
jmp
lahf
or
dec
xor
dec
cmp
insl
enter
imull
mov
aaa
add
enter
jae
lock
ss
stos
xlat
scas
insb
das
ja
and
arpl
push
hlt
sbb
jo
xor
add
inc
mov
sub
adc
lods
inc
lahf
lea
mov
lock
pop
fwait
or
mov
inc
jae
mov
ret
and
mov
or
stos
mov
sbb
int
adc
xorb
push
subb
mov
adc
jl
push
outsl
sub
push
sub
pop
inc
jecxz
xlat
fistpll
sbb
xor
das
add
fwait
xor
mov
sbb
xchg
inc
subl
outsl
mov
sub
xchg
pop
or
or
sarb
shlb
jp
scas
test
in
outsb
xchg
fists
lahf
test
lods
jge
lea
pop
ljmp
cmpsb
shll
ljmp
fnstsw
popf
xchg
out
sbb
lret
add
mov
sti
mov
inc
cmp
out
inc
sbb
sub
fidivs
outsb
push
jae
popa
or
sarl
push
push
or
aas
adc
iret
sbbl
std
dec
push
std
add
mov
pop
inc
shlb
push
pop
int
or
xchg
xchg
leave
pop
aas
or
aad
mov
xchg
movsb
jns
or
js
mov
or
and
nop
push
mov
and
sub
dec
dec
loopne
test
xchg
cmp
jbe
xlat
ret
fnstsw
jnp
mov
ljmp
xchg
clc
cld
xor
adc
or
jno
aas
dec
int
or
jmp
push
mov
movsb
ljmp
mov
xor
mov
mov
mov
popf
sub
arpl
ret
push
adc
jp
mov
fisubrl
fimull
lods
stc
jae
mov
imul
jnp
pop
xchg
lods
stos
int
cld
sbb
push
scas
nop
pop
cmp
xor
pop
push
mov
cmp
fldenv
in
mov
loop
dec
es
cmp
push
or
mov
in
jo
pop
ljmp
and
mov
popa
mov
hlt
je
xor
xor
call
cs
inc
inc
or
lods
icebp
add
push
lock
pop
sub
dec
fdivrl
adcl
mov
cmpl
sbb
notl
cmp
add
cmp
insl
cmpsl
push
repnz
fistpl
insl
pop
mov
inc
push
ds
in
mov
xchg
subb
test
enter
popf
and
dec
sbbl
cmc
jmp
and
inc
xor
gs
popf
aam
cmp
into
jle
out
pop
int3
xor
push
mov
movsl
ljmp
sub
ret
xchg
shlb
dec
cld
lods
mov
pusha
inc
aam
test
mov
inc
mov
scas
fdivrl
inc
leave
or
pop
cmp
mov
cli
lods
xlat
adcb
mov
test
out
xchg
or
xor
pop
pop
sbbl
ss
mov
popa
jle
mov
es
cwtl
pushf
fistl
cmp
sub
xchg
fld
xlat
xor
or
call
xor
fbstp
inc
fimuls
fildll
aam
shll
iret
insb
stos
fld
out
jnp
aam
call
mov
mov
mov
push
push
xor
and
outsb
pop
loop
push
inc
mov
jns
scas
jmp
loope
sbb
pop
cmp
xchg
mov
inc
xchg
ret
sbb
test
iret
push
mov
aam
out
xlat
lret
rcl
outsl
addb
jb
xor
pop
mov
mov
cmp
sarl
rorl
rorb
sahf
xchg
repz
fadd
mov
cmp
adc
push
xchg
lods
push
in
movsl
cmc
outsb
into
pop
xchg
lret
cmp
or
mov
popa
xchg
mov
in
lds
dec
and
sbb
inc
push
xor
sbbb
scas
jnp
add
shll
ljmp
mov
cmp
push
hlt
dec
cmpsb
xchg
mov
cmp
aam
xchg
xlat
sub
mov
and
and
aam
sarb
jp
jno
jle
das
les
lret
pop
cmp
outsl
add
rclb
dec
adc
xchg
fisttpll
xor
mov
stc
jb
pusha
dec
mov
mov
push
pop
sub
pop
fchs
test
push
movsb
movsl
jge
and
lds
cs
loopne
call
xchg
mov
sbb
mov
ss
mov
or
mov
jl
lock
insl
insb
ret
mov
gs
inc
mov
mov
js
cmp
movsl
cmpsl
and
negl
mov
adc
cli
movsl
adc
ret
xor
mov
test
stos
daa
xor
mov
and
and
ds
mov
out
hlt
or
cld
and
std
shrl
mov
push
cmpl
mov
stos
imul
cld
mov
test
xchg
xchg
adc
std
jo
and
sub
mov
jle
aam
sbb
nopl
sub
in
pop
or
mov
aad
fcomps
jg
out
mov
mov
outsb
dec
imul
fisttps
cli
imull
loopne
inc
sbb
and
sbb
cmp
lahf
mov
and
cmp
iret
mov
and
lret
add
pusha
lcall
int
les
xchg
xor
jo
cmp
sarl
stc
pop
adc
cmp
push
push
test
pop
clc
adc
push
and
pop
ja,pt
test
ja
pop
cli
scas
push
push
xor
lret
add
nop
push
fldl
jecxz
sbb
and
xchg
lds
cmpsl
sub
mov
jnp
sub
je
clc
cld
movsb
pusha
cli
repnz
lcall
inc
and
lret
pop
sub
out
push
mov
insb
pop
xchg
fs
cmc
rolb
iret
clc
mov
jl
mov
ret
cmp
and
es
jg
scas
jg
jecxz
std
lcall
inc
fldt
or
pusha
movsb
mov
sub
cmp
mov
pushw
icebp
daa
or
test
data16
imul
out
icebp
xchg
andb
push
adc
adc
jne
xchg
push
inc
out
jne
add
adc
inc
lret
jnp
push
xchg
out
stc
movsb
cmpsb
or
stc
cmp
sub
dec
insl
or
sti
out
std
rcl
or
or
movsb
fldt
ljmp
push
orl
stos
test
pop
add
sbb
mov
les
scas
jb
iret
or
das
adc
nop
mov
negb
adc
les
call
and
push
ljmp
mov
out
inc
sbb
cmp
icebp
add
push
sub
imul
mull
mov
lods
adc
mov
xchg
push
sbb
inc
jge
mov
or
hlt
ss
aam
aaa
dec
jge
scas
xchg
fstpt
jo
je
rorb
push
subb
inc
jae
jp
mov
add
std
cwtl
sub
pop
inc
xchg
sub
hlt
shrl
push
push
movsl
es
pusha
loope
and
mov
xor
cwtl
scas
or
sbb
sub
aas
jl
cmp
arpl
lea
mov
scas
fsqrt
sbb
sbb
and
addl
xchg
jmp
xchg
dec
ret
sti
adc
xor
fistpll
fs
dec
add
adc
adc
repnz
add
mov
jmp
fimull
sbb
mov
and
adc
mov
test
hlt
mov
adc
inc
popf
addr16
orl
sbb
dec
and
rorl
mov
cmp
outsl
pop
shlb
inc
pushf
aaa
fidivrs
testl
xchg
inc
push
inc
mov
or
mov
jo
pop
mov
int3
add
aas
add
ficoml
insl
jnp
ss
cmp
xchg
shll
xchg
dec
cwtl
fwait
cli
lock
in
mov
aam
pop
fcomp
fcomps
lds
adc
mov
mov
mov
jne
add
out
lea
sahf
pop
xor
xor
jno
ljmp
pop
dec
ja
loop
xor
cwtl
xor
lcall
repz
out
xchg
cmp
outsb
pop
cwtl
jae
cmp
and
inc
sti
push
sub
jae
xchg
push
les
pusha
int3
or
lret
add
add
mov
std
push
inc
cmp
popf
xchg
clc
ret
cltd
test
cmpl
adc
ljmp
fstl
je
rcll
sub
sub
cmpsl
mov
lret
call
xchg
stos
mov
mov
push
fadd
loopne
arpl
jge
stos
and
bound
popa
aaa
das
inc
add
or
ficomps
faddl
in
mov
aad
xor
mov
lar
ds
test
push
leave
mov
mov
lea
push
mov
inc
sub
in
mov
stos
es
int
pop
adc
stos
bound
sub
mov
cmp
rcrl
fsubrs
dec
mov
mov
dec
push
xchg
pop
data16
fbld
insb
fs
cli
inc
mov
pop
sarl
mov
sbb
jns
or
push
repnz
inc
adc
test
or
insl
add
repnz
repz
and
push
or
xor
int3
mov
pop
daa
div
sub
mov
mov
int3
repz
push
or
adc
ret
cmpsb
inc
call
roll
sub
sbb
mov
jmp
scas
lods
xchg
and
sub
gs
mov
dec
sub
mov
xchg
aaa
ss
adc
inc
fwait
testl
repnz
hlt
cmp
stos
mov
sysenter
lock
jecxz
xor
push
cwtl
jecxz
aaa
pushl
fsts
jns
imul
mov
rcll
cmp
in
cmp
push
mov
ret
jg
bnd
inc
push
pop
sbbb
mov
xchg
cmpsb
loop
in
push
repz
dec
push
cwtl
pand
adcl
xchg
mov
fldcw
dec
fidivs
or
cmp
adc
push
mov
cmc
jno
cwtl
mov
scas
push
or
inc
fcompl
adc
xchg
test
jbe
xchg
jae
movb
xchg
jecxz
cli
add
leave
cmp
xchg
inc
stos
call
rorb
leave
dec
jge
rcll
mov
adc
adc
pusha
mov
ljmp
mov
repnz
dec
ljmp
sub
mov
or
outsb
ret
cmpb
jo
mov
xchg
and
dec
xor
icebp
lods
pop
cmp
enterw
inc
mov
aam
pop
mov
sbb
mov
dec
test
mov
add
push
cmp
mov
jge
and
sub
mov
popf
in
call
mov
jo
and
sbb
test
mov
clc
xchg
stos
dec
or
imul
adcb
and
mov
push
pop
add
icebp
mov
or
fisubs
inc
jns
adc
mov
loopne
adc
pop
aam
fcomps
mov
outsl
jae
pop
fisttpl
jae
jle
stc
mov
jno
lock
repz
repnz
fdivs
pop
pop
sbb
div
cmp
or
inc
sub
enter
lds
mov
add
adcl
xchg
sbb
dec
std
inc
out
into
cmp
xchg
xor
ss
insb
sub
aas
inc
xor
push
movsb
std
inc
push
insb
cs
les
test
cmp
aam
repnz
sbb
or
arpl
mov
push
ret
jp
xchg
xor
popf
rolb
std
out
loopne
xor
data16
outsb
mov
cli
cltd
sbb
and
stos
xchg
mov
fistl
pop
jbe
mov
push
out
sub
xor
push
pop
lret
dec
dec
jb
pop
out
mov
cmp
test
sub
les
push
or
mov
sbbl
mov
mov
lret
hlt
push
inc
repnz
mov
cmp
sahf
mov
lcall
popf
mov
sub
test
or
lea
jmp
mov
ret
fwait
popa
xor
add
mov
lods
inc
jle
pop
fdivl
mov
lds
mov
insl
lcall
inc
sub
push
mov
stos
sbb
jbe
dec
es
inc
jmp
lock
add
das
pop
shlb
and
jo
jb
cltd
mov
xchg
mov
or
decb
in
xor
sbbb
popa
inc
pop
and
mov
out
mov
push
jns
or
or
sub
jae
fldl
out
xor
psrad
aad
pop
pop
dec
rorb
mov
adc
leave
push
and
mov
stos
mov
xchg
pop
jns
mov
mov
cli
stc
mov
and
shlb
sbb
sub
xor
add
pop
in
call
xor
aam
movsb
sahf
lds
fbld
stos
dec
pop
inc
outsl
in
daa
iret
aaa
test
ret
xor
cmp
cmp
sbb
inc
insb
xchg
in
xchg
mov
mov
cmpl
pop
pop
movsb
jb
and
mov
ja
ljmp
xor
in
lahf
cmpsl
and
pop
add
popa
stos
lcall
xchg
daa
mov
mov
and
ret
movsl
push
fsubrl
loopne
or
add
dec
pop
add
mov
sbbb
push
ljmp
inc
call
and
adc
ja
add
xchg
in
xor
mov
fistpl
mov
push
mov
mov
cmpsl
test
fistpll
les
leave
pop
testl
js
cmp
pop
lret
push
clc
rcll
andb
shlb
in
bound
cld
testl
popa
pushf
js
outsl
imul
inc
adcl
sti
inc
std
rorl
inc
ljmp
movsl
arpl
sub
cs
ds
mov
out
sub
lock
stc
into
pop
lods
inc
mov
dec
outsl
add
rclb
xor
les
daa
mov
fcmove
es
jmp
and
dec
push
xchg
ljmp
push
sbb
je
xor
or
adc
loop
fs
or
inc
jno
shrb
pop
stc
cmp
lea
jno
and
and
aad
pop
int3
push
hlt
lret
mov
inc
cmp
cmp
clc
fwait
jbe
push
in
clc
nop
fs
pop
popf
xchg
addr16
mov
dec
jns
dec
aaa
mov
mov
in
mov
lcall
iret
inc
add
call
lret
outsb
std
cmc
fisubs
or
sub
popf
adc
stos
insl
rolb
lcall
or
and
dec
imul
push
jp
rcr
jo
cmpsb
push
jl
pop
jl
cmp
cmp
push
or
in
imul
mov
test
movsb
outsl
jns
ret
out
movsb
and
fldenv
iret
sbb
adc
jmp
fwait
add
fbld
push
fdivrl
mov
or
clc
cmp
lret
loop
sbb
xchg
ret
fwait
push
cmp
cli
ss
pop
lds
sti
add
clc
ja
push
cmp
inc
mov
sub
arpl
shr
or
mov
loope
xor
scas
ffree
rclb
inc
mov
out
mov
in
mov
mov
mov
outsb
negb
test
push
repnz
shl
mov
mov
enter
xchg
push
icebp
loopne
out
or
push
adc
jge
stos
mov
movsb
das
loope
mov
incb
gs
xor
fwait
xchg
repnz
cltd
push
clc
adc
jp
pop
ficomps
or
jno
jecxz
sbb
jle
pop
push
sub
into
scas
sarl
xchg
xlat
mov
and
mov
cmp
xor
sarb
xor
mov
dec
rorl
lea
mov
stos
mov
leave
popa
push
pop
lods
jo
jecxz
xor
fists
out
and
sbb
xchg
loope
or
sbb
inc
add
aaa
jne
dec
test
pop
adc
aas
les
ficoml
stos
jmp
js
int
rorb
mov
mov
inc
pop
inc
bound
scas
cli
ljmp
cmpsl
add
mov
mov
popa
and
call
dec
movsb
xor
mov
add
push
dec
mov
stc
daa
cs
mov
rcr
sub
and
subb
jg
pop
out
sub
incl
in
pop
inc
call
push
shll
mov
cmp
adc
sbb
jp
mov
jge
aad
addl
in
iret
out
push
lret
movsb
sbb
inc
adc
dec
adc
sub
fucomip
jecxz
jmp
and
or
push
xor
ror
sbb
sbb
sbb
inc
mov
fnstenv
fldenv
imull
hlt
out
or
out
adcl
rep
inc
std
movl
xor
cmp
push
fmuls
mov
mov
xchg
add
pop
jmp
cld
enter
dec
fcomi
nop
insb
or
cmp
dec
xchg
push
call
es
data16
pop
out
push
dec
mov
aad
push
aam
in
and
jae
shrb
mov
mov
jbe
test
mov
mov
arpl
mov
mov
fs
xor
adc
mov
or
and
cltd
hlt
and
jnp
mov
cmp
lock
movsl
mov
aas
push
xor
jl
fsubrl
xor
add
imul
fs
lea
hlt
orl
ds
loopne
adc
es
mov
inc
insl
mov
pop
push
sub
jae
xchg
out
jg
and
push
lcall
sbbb
daa
cs
loopne
repz
shl
mov
mov
push
fisttps
insb
push
lods
in
lcall
sub
in
ds
into
push
or
adc
jle
inc
jmp
jmp
add
in
jecxz
imul
dec
lahf
movsl
inc
dec
imul
paddusb
xchg
std
int3
arpl
push
xor
stc
adc
jbe
imul
adc
pop
lcall
lret
and
jbe
and
rcl
xor
jae
fcmovne
xchg
push
stos
jle
testb
add
xor
lret
mov
ljmp
or
loopne
push
scas
loope
push
in
outsb
mov
cmp
or
or
push
sub
into
push
inc
mov
mov
imul
ret
lret
xchg
out
push
xchg
mov
jne
enter
cmp
iret
ficomps
out
cmp
in
incb
xchg
jno
pop
mov
movb
lcall
out
push
stc
xor
sub
fdivrs
test
mov
fisttpll
mov
and
push
ja
sub
or
xchg
jle
test
jecxz
scas
jbe
mov
mov
jp
mov
insb
js
scas
sub
clc
pop
cmp
adc
outsl
sbb
push
mov
pop
fwait
test
mov
and
js
sub
or
sbbl
scas
jbe
jl
dec
shlb
inc
xor
cmp
movsb
push
push
lock
mov
lcall
xor
pop
mov
mov
mov
mov
jae
fdivrs
add
mov
bound
flds
shrl
repz
in
inc
fstl
xor
inc
lds
push
loopne
cwtl
pushf
shl
push
push
and
mov
movl
ficoms
cmp
fnsetpm(287
mov
push
mov
pop
movsl
jae
xchg
push
xchg
iret
push
pushf
mov
dec
jnp
sti
pushf
outsb
xchg
mov
cltd
xor
repz
out
xchg
stos
push
pop
mov
cld
test
sahf
jle
xchg
xchg
adc
int
out
imul
jmp
hlt
sub
jo
cmpsb
or
mov
adc
jg
test
jp
mov
cmc
jg
pop
dec
or
mov
lret
lret
jl
pop
push
shll
inc
xor
fsubrs
sbb
sbb
imul
push
sti
and
push
sub
cld
xchg
jbe
rcrl
cmpsb
mov
sbb
push
jbe
jg
inc
inc
mov
and
push
xor
out
cmpsb
mov
push
insl
or
pop
imul
enter
push
test
jbe
popf
int
es
lret
aam
iret
push
insb
ret
in
push
mov
aas
mov
out
addr16
sti
pop
ja
cmp
jg
push
push
aam
mov
out
push
mov
ljmp
stc
sbb
int
push
mov
mov
mov
and
jo
rorb
repnz
mov
cmp
scas
sti
jns
es
ret
mov
pop
mov
pop
inc
insb
test
jecxz
xlat
cmpsb
or
push
jne
nop
push
mov
repnz
repnz
dec
nop
xor
nop
sbb
cmc
outsb
jo
dec
movsb
out
fs
insl
out
stos
cmp
mov
jae
sbb
sub
sbb
or
lods
pop
out
xchg
push
mov
cmpsb
sbb
sahf
jp
gs
mov
cmpb
ret
repnz
xchg
inc
push
jns
imul
dec
cld
xchg
ja
or
add
mov
and
call
adc
lea
in
cmp
mov
sub
or
jo
jl
add
push
or
xor
int
dec
mov
add
loope
xor
mov
cmc
sub
jge
test
or
shlb
jle
mov
pushf
icebp
inc
loop
push
jmp
out
outsb
sbb
fisubs
mov
test
jnp
cmp
cmp
mov
jbe
sub
cmpsb
pop
fildl
popf
hlt
sub
pop
mov
jns
dec
inc
and
push
xchg
mov
mov
or
push
and
sahf
xor
sahf
push
insb
rcl
push
sub
pop
dec
mov
push
or
and
add
sbb
call
push
mov
mov
or
and
sub
cld
lret
pushf
xchg
mov
xor
aad
and
fbstp
lock
xchg
test
cvtps2pi
jecxz
jno
ss
test
mov
leave
outsl
shl
loope
mov
mov
pushf
adc
outsb
push
test
stc
mov
jno
dec
push
aaa
mov
cmp
nop
xor
mov
jno
and
mov
inc
adc
iret
lods
push
mov
lret
jl
std
mov
icebp
cld
orl
gs
jae
bound
imul
retw
aaa
add
mov
mov
mov
inc
ret
xchg
test
sub
xor
call
mov
push
rol
sub
mov
jmp
insb
mov
mov
mov
xchg
add
sbb
outsl
fwait
xchg
inc
xchg
fidivs
mov
dec
inc
push
lret
cmp
popf
sub
rcrb
mov
clc
cmpl
gs
jae
jbe
imulb
jno
mov
jo
mov
adc
stc
call
andb
jmp
nop
xor
cmp
jo
sub
mov
pop
cmp
xchg
movsl
test
mov
dec
sbb
pcmpgtw
arpl
imul
lcall
cmp
cld
scas
sub
jb
mov
clc
fwait
scas
sbb
add
jnp
mov
and
inc
int3
pop
lock
jge
jmp
jl
cmpsb
enter
pop
push
sbb
mov
sub
jb
adc
mov
jnp
outsl
dec
mov
and
andl
movsl
dec
mov
frstor
mov
rcrl
push
mov
cltd
mov
mov
mov
shlb
fsubl
push
pop
inc
dec
cmp
js
test
mov
and
lahf
xchg
push
add
dec
jo
cmp
adc
std
inc
dec
nop
mov
jbe
mov
imul
cmpsb
dec
loopne
jno
fiaddl
mov
adc
fdiv
pusha
cmc
lret
subl
push
mov
cmp
pushf
mov
test
cmc
cmp
js
imul
enter
inc
aaa
push
sub
test
in
mov
adc
mov
xor
les
sbb
sbb
lds
repnz
fimull
jmp
adc
cld
shrl
mov
mov
and
mov
push
fildl
je
jo
cld
sub
shrl
xor
clc
jno
and
incb
leave
out
add
sub
or
lods
mov
in
into
in
mov
lods
mov
inc
out
push
jne
mov
jp
adc
pusha
nop
into
iret
pop
sub
std
cmp
push
out
push
das
loope
sbb
sbb
out
aam
push
leave
faddl
mov
test
cmpsl
inc
add
xor
aas
mov
cltd
cmpsl
repnz
mov
inc
jns
xchg
pop
rcrb
insb
push
or
mov
jge
mov
cld
sbb
lret
rcr
ficomps
in
jmp
fbld
cmp
push
nop
subb
push
mov
and
pop
stos
xor
pop
mov
call
rcrl
push
je
sbbb
xchg
fadds
cmpsb
inc
sbbl
jbe
movsl
fiaddl
inc
inc
addr16
or
lods
xchg
sbb
jle
cmp
inc
in
das
mov
mov
push
fstps
pop
xchg
sbb
xchg
es
repz
into
cmp
repnz
fst
and
adcb
add
mov
int3
jne
add
push
rcrl
add
mov
movsbl
into
dec
sub
jecxz
mov
repz
xor
push
in
mov
cmp
ret
mov
adc
stc
add
dec
xor
pop
and
or
fmul
das
lret
popa
xchg
lods
sub
pop
mov
dec
mov
testl
cmp
imul
movsb
lods
dec
and
mov
add
shl
inc
dec
cli
aaa
push
inc
sub
outsl
dec
in
or
scas
cmp
jge
loop
test
pop
mulb
imulb
in
rol
in
dec
cli
aam
in
fiadds
xchg
xchg
ljmp
sahf
lock
std
sub
fcom
push
jne
fldenv
adc
adcb
cmp
mov
adc
addr16
ret
popf
ljmp
adc
insb
xchg
pusha
or
out
lcall
pinsrw
rcrl
ss
xor
or
xchg
icebp
fwait
sahf
and
call
inc
fmulp
dec
add
bnd
jb
loopne
imul
aam
dec
stos
repz
pop
out
daa
add
push
sub
xor
mov
mov
mov
pop
cli
leave
push
or
jp
bound
ljmp
sti
xchg
sbb
fists
add
pop
push
pop
xlat
push
push
cmpb
mov
imul
xor
insb
and
mov
ja
push
mov
push
jl
sahf
insb
pushf
into
mov
push
test
add
into
iret
mov
dec
jl
daa
cmp
cmc
cmpsb
or
mov
mov
ret
test
adc
push
daa
push
ret
js
cmp
pop
cmpl
rol
and
push
out
gs
in
cmpb
rcr
cmpl
mov
xchg
xor
adc
jl
xor
arpl
lods
cltd
fwait
in
imul
xor
test
sbbb
mov
out
arpl
aam
jmp
jp
push
push
cmp
xor
and
mov
in
imul
rol
add
mov
aas
ljmp
xor
sbbl
inc
jns
or
xchg
adc
lock
leave
or
lea
xchg
lds
rolb
push
xchg
ds
sahf
mov
repnz
jp
inc
faddl
imul
adc
pop
cmc
jge
daa
push
imul
outsl
bt
std
lods
les
cli
jl
imul
das
not
push
std
inc
sbb
mov
loopne
sti
xchg
mov
push
movsl
mov
push
xchg
mov
cmp
or
fcompl
push
mov
sti
repz
add
nop
jp
or
push
test
jo
inc
or
mov
arpl
pusha
jns
ds
aam
dec
sbb
jmp
loop
iret
es
mov
pop
jae
ljmp
adc
lds
mov
imul
sbb
popf
and
pop
out
add
mov
or
mov
or
mov
push
icebp
std
inc
insb
out
and
pop
test
xchg
shlb
inc
add
test
jno
repnz
aad
pop
es
cmpsb
jl
mov
call
out
xchg
pop
fsubrs
int3
adc
or
adc
rcrl
or
or
sarb
in
pop
xor
add
mov
je
sbb
mov
lahf
cmpsl
sbb
scas
jmp
popa
ret
bound
sbb
adc
ja
jle
xorl
arpl
push
jbe
test
jle
mov
and
ds
or
fisttps
push
pop
and
out
sbb
cmp
insb
or
push
jo
hlt
jno
call
in
fstpl
sub
popf
or
andb
ja
cld
mov
mov
inc
push
pop
in
pop
scas
daa
inc
pop
pop
in
les
add
dec
inc
das
inc
popf
sub
adc
xlat
dec
je
jo
push
pop
rorl
jle
jmp
rclb
sbbl
aad
insl
test
lcall
mov
in
shll
jle
lea
lcall
xchg
sub
push
add
addr16
jne
jmp
jne
mov
jne
enter
or
jle
sahf
dec
inc
sbb
js
loopne
and
sbb
es
repnz
dec
out
daa
sub
pop
pop
fldl
push
stc
and
adc
xchg
lods
push
xchg
mov
aad
mov
cmpsl
sbb
jp
dec
push
mov
pop
insl
mov
fidivs
cs
or
jecxz
hlt
stc
ds
js
sub
sub
int3
pop
and
push
sub
sub
mov
outsb
and
sub
lock
outsb
pop
cltd
jae
outsl
cwtl
or
inc
jp
xor
aad
leave
lret
leave
push
outsl
aas
ret
pop
arpl
fimull
or
mov
mov
push
xchg
or
in
sarb
jbe
shrb
mov
push
mov
testl
xchg
aad
dec
iret
jmp
loopne
push
jbe
cmp
inc
and
push
jnp
push
incl
inc
test
ret
movsb
out
idiv
fucomp
xor
sarl
and
mov
adc
fsubr
test
xchg
in
cmp
xchg
mov
mov
cmp
push
or
cmc
add
lock
jb
test
push
xor
fstpl
pop
test
dec
and
lods
jg
sbb
sub
cmp
mov
cmp
fisubs
cmp
and
fcoms
sbb
movsl
mov
ljmp
mov
ds
jnp
movsl
in
iret
push
outsl
data16
cli
es
sbb
imul
dec
pop
jae
and
mov
pushf
mov
shl
dec
movsl
xchg
inc
unpcklps
daa
out
ret
movsb
mov
fwait
mov
das
jb
fiaddl
push
aas
in
rcrb
mov
cmp
xchg
sahf
add
ret
test
ret
movsb
cmp
jno
add
add
add
dec
add
lds
rclb
add
adc
push
arpl
pushf
mov
xor
cmpsb
pop
insl
call
lods
bound
mov
mov
fcoml
loopne
mov
pop
inc
adc
mov
insl
and
cli
testb
mov
leave
jb
lods
pop
nop
das
push
cmc
aas
and
jg
ljmp
scas
push
daa
movsb
and
call
iret
shl
push
int3
push
insl
add
cmp
daa
jbe
mov
xchg
pushf
push
cmpsl
xchg
dec
or
fsts
add
sbb
pop
dec
sbb
mov
shll
lods
scas
xor
jo
mov
jnp
setge
xchg
push
ret
cmpl
jne
sbbl
daa
push
pusha
sbb
jmp
jbe
sbb
in
push
sub
dec
mov
cmpsb
aam
sub
mov
lret
inc
cld
int
mov
rcll
jmp
jne
insb
test
fcomps
jae
and
mov
faddl
sbb
js
mov
test
mov
jnp
pop
push
pop
out
inc
dec
push
add
fwait
mov
and
xchg
scas
movsb
and
outsl
imul
sbb
jns
mov
jmp
shr
mov
fildl
jmp
cs
inc
mov
or
dec
in
in
popa
sub
jb
jno
xchg
and
cld
lret
fildll
inc
inc
loope
jmp
jmp
jae
popl
mov
push
sbb
dec
mov
das
push
ffreep
jp
repz
jp
jae
pop
repz
push
cld
pusha
mov
adc
pusha
and
fistpl
sub
aad
sbbl
outsb
js
and
scas
es
mov
mov
das
std
fadds
cmp
sbb
adc
mov
lea
push
notb
inc
sahf
and
push
mov
nop
cmpsb
in
pop
push
fadds
jg
mov
mov
stc
xchg
cwtl
or
ja
enter
lods
movsb
adc
stos
or
mov
leave
xchg
push
mov
or
push
inc
sbb
dec
mov
pop
cltd
cmp
sbb
testb
jecxz
mov
jnp
lret
clc
int
push
ficoms
and
lds
cmp
dec
fwait
mov
cld
es
jecxz
and
pop
mov
movsl
jbe
rorb
mov
and
ja
or
dec
int
mov
cld
lea
adc
xchg
fstpt
cmp
push
in
outsl
sbb
mov
add
xor
outsl
add
arpl
xlat
pop
push
cmpl
je
ljmp
jbe
push
shl
ret
jns
jg
and
jge
dec
push
xchg
add
gs
xor
cmp
stc
and
cs
push
fisubrs
jecxz
add
inc
sbb
jle
cltd
inc
push
mov
fs
push
add
call
and
fldenv
mov
lret
push
push
stc
jge
lods
mov
and
xlat
sbb
lahf
pop
xchg
inc
sbb
push
xor
jo
xor
pop
mov
and
inc
fdivrs
stc
add
ficoml
jmp
fwait
mov
mov
dec
lods
scas
iret
cmc
adc
jno
out
sbb
or
arpl
cltd
stos
adcl
insl
arpl
inc
into
lods
mov
pop
adc
sub
mulb
hlt
mov
cli
jl
adc
push
xor
inc
test
jp
push
out
stos
out
inc
repz
jp
out
jns
cmpsb
ljmp
mov
xchg
cmp
xchg
adc
sub
xchg
adc
pop
into
xlat
sub
jl
icebp
push
inc
jo
repnz
jne
sbb
ss
clc
leave
mov
out
push
ret
ret
arpl
mov
fwait
das
inc
dec
pushf
shr
out
test
fcomi
mov
cmp
test
stos
mov
and
ds
repnz
cmc
pushf
test
mov
addr16
pop
lds
pop
pop
in
cmpsb
mov
mov
add
stos
mov
out
je
jbe
dec
sti
stos
xchg
lea
dec
andb
ret
adc
dec
cmp
push
lahf
inc
daa
fs
dec
test
or
mov
aas
insb
xchg
hlt
jb
xchg
fimull
scas
push
jg
fstl
inc
cmpsb
mov
js
mulb
out
and
xchg
in
cmpsb
sub
xchg
push
insb
and
ss
aam
xlat
divb
fstl
outsl
cmp
out
add
push
mov
cmp
sti
aas
out
cmc
hlt
ds
fs
and
stos
xlat
mov
pop
add
arpl
int3
in
pushf
sahf
mov
mov
lods
imul
lds
lods
mov
pop
mov
stc
push
int3
je
jmp
out
jmp
fwait
xlat
mov
mov
xor
mov
adc
addl
daa
jnp
pop
inc
sbb
fs
sbb
lods
dec
or
push
outsl
pop
leave
push
mov
mov
shl
fsub
pop
mov
xchg
and
shll
cld
jb
rcrb
imul
mov
lock
mov
movsb
jnp
mov
pop
mov
xor
andl
sub
aam
sbb
cmp
loope
sbb
bound
mov
cltd
movups
adcb
out
addl
mov
call
dec
mov
cmp
dec
sbb
aam
mov
daa
or
je
mov
jbe
lods
shll
mov
divb
cli
or
loope
out
xchg
mov
cmp
stos
sbb
mov
pop
adc
dec
xor
loopne
shl
mov
nop
mov
xor
adc
jp
out
pop
stos
sub
sbbl
push
das
adc
adc
cltd
in
xchg
cmp
cmp
fcmovnb
jne
dec
out
imul
in
sbb
pop
mov
jmp
cld
dec
leave
addr16
mov
scas
test
ss
pop
push
dec
pop
add
mov
or
cmp
clts
mov
ljmp
cmp
dec
fldenv
sbb
mov
mov
bound
out
jbe
push
and
rorl
mov
sub
inc
jmp
xchg
mov
sbbl
jl
inc
or
aad
aad
sbb
mov
xor
jnp
mov
in
push
sti
mov
inc
aam
and
mov
das
sbb
and
fistl
mov
imulb
sarl
or
hlt
jb
nop
lret
inc
fadds
push
je
jno
ret
fcmovnbe
add
andb
push
lahf
sub
or
push
int3
cld
push
in
lret
inc
and
mov
shlb
in
jp
fsubrp
addr16
push
lock
mov
add
jmp
and
sbb
je
leave
adc
imul
scas
clc
push
push
push
je
rol
js
jle
fstpl
mov
pop
mov
popf
xchg
jns
sbb
pop
add
pop
test
sbb
int3
movsb
popa
repz
fcoml
cmp
add
int
adc
iret
mov
pusha
sbb
xor
nop
fbld
xchg
jnp
lahf
scas
jge
push
arpl
cmp
xor
loop
sbb
sbb
xchg
movsl
jecxz
xchg
ret
scas
adc
xchg
icebp
mov
jl
pop
xchg
lock
push
xor
cli
lock
or
add
das
js
inc
mov
push
pop
push
shl
fimull
fdivrl
daa
dec
adc
sub
daa
mov
popa
aaa
in
ffree
mov
ja
add
or
or
cld
cmp
mov
out
xlat
inc
pushf
mov
cmpsl
cmp
sahf
mov
enter
inc
jmp
pop
arpl
daa
lock
cmp
bound
push
pop
xor
mov
ja,pn
and
pop
xchg
lcall
popa
jle
inc
push
insb
adc
and
xchg
mov
jle
xchg
sbb
lock
inc
repnz
sub
loop
or
adc
lcall
iret
call
dec
jle
push
push
shll
popf
repnz
mov
pop
out
imul
lods
imul
xchg
sbb
mov
sbb
jne
in
push
fwait
aaa
dec
xchg
jecxz
iret
sub
inc
push
xor
mov
icebp
lock
es
push
pop
js
or
mov
inc
lret
les
cmc
add
xchg
cld
lret
lods
and
push
push
xchg
mov
sub
insl
sub
push
push
shl
enter
rcrb
and
movsl
ljmp
jg
fcmovb
loopne
push
fbstp
test
mov
imul
shlb
pusha
outsl
pop
fcmovne
ret
leave
data16
mov
mov
mov
ja
jne
ja
dec
xor
dec
arpl
jno
mov
adcl
cmpsb
cmp
or
push
inc
jecxz
mov
fwait
outsb
ret
jae
inc
adc
ret
mov
das
aaa
xchg
xchg
out
pop
mov
int
jno
sbb
fcmovnu
or
insl
xor
push
mov
leave
xchg
mov
rclb
or
ljmp
inc
test
inc
test
pop
push
push
xchg
dec
xchg
out
sbb
push
xchg
fnstcw
movb
fimuls
cmp
out
jne
push
xchg
inc
fwait
fucomp
mov
and
outsb
andb
sbb
push
xor
sti
ljmp
mov
pusha
or
push
jne
mov
mov
test
hlt
xor
jp
jb
or
pop
mov
cltd
lods
pop
adc
and
mov
loopne
andb
pusha
mov
mov
rdtsc
je
das
addr16
je
add
gs
jb
out
pop
sbbl
mov
icebp
das
jl
rol
fildll
mov
dec
pop
jae
push
xor
js
into
sbb
jmp
jbe
je
jle
cmp
into
mov
jb
mov
in
inc
mov
mov
jg
inc
push
mov
pop
mov
add
xchg
push
pushf
stos
push
dec
dec
cli
fcompl
sahf
xchg
and
cwtl
aaa
or
ficoml
pop
push
insl
adc
sbb
leave
and
pop
in
and
pop
out
scas
inc
sub
and
jecxz
into
jo
lods
sbb
cmp
mov
mov
ficoml
mov
test
fwait
mov
pusha
lahf
mov
sti
jae
std
push
mov
mov
adc
les
jmp
inc
mov
and
faddl
adc
stc
fidivrl
push
mov
mov
mov
fsubrs
sub
cli
adc
mov
inc
das
inc
cwtl
hlt
mov
dec
or
sti
or
sbb
mov
and
add
vmwrite
pusha
mov
movsb
jno
mov
cmp
rorl
mov
inc
mov
pop
clc
int
adc
jnp
jb
loope
in
imull
js
cmp
adc
push
fdivl
mov
xor
sub
cltd
pop
jge
mov
leave
mov
hlt
cmp
stc
and
sbb
popa
add
mov
lahf
cmp
enter
sahf
sti
cltd
pop
sbb
pop
sarl
mov
je
addr16
ss
mov
cld
push
nop
mov
push
cmc
stos
ds
xor
pop
sti
lret
xchg
dec
dec
jle
lods
movsl
mov
fsub
test
leave
lods
mov
xor
or
fmull
cmp
arpl
dec
mov
adc
mov
jp
xchg
push
inc
push
test
test
lret
int
testl
fadds
and
cmp
adc
fs
leave
mov
cmc
test
bound
lods
jbe
dec
and
push
rcrl
xor
sbb
and
icebp
cmpsl
adc
fs
dec
mov
ljmp
bound
imul
push
mov
movsl
pop
pop
shr
test
scas
push
and
int3
mov
mov
lods
mov
xor
dec
jnp
sub
mov
sarl
imul
dec
insb
pop
push
outsb
decb
movl
and
jae
iret
jmp
pop
je
xchg
lret
stos
cltd
cmp
add
adc
popa
push
mov
ret
push
xlat
or
or
insb
std
test
fiaddl
mov
push
jmp
and
sub
push
xchg
sub
or
and
das
dec
ret
ret
iret
imul
jae
outsl
xor
dec
inc
mov
out
sub
lret
cmp
adc
add
test
dec
iret
xchg
out
and
leave
js
aaa
jg
or
mov
mov
popf
imul
mov
stos
xor
hlt
adc
lea
lret
xchg
sbb
fiadds
shll
in
sub
call
mov
fnsave
inc
cmpsb
leave
repz
insb
xor
mov
lcall
out
and
test
jecxz
daa
dec
xchg
jnp
addr16
or
jmp
fldt
ficompl
int
daa
inc
cli
push
outsb
inc
testl
sub
andl
jmp
xchg
movb
cwtl
inc
cmpsb
jbe
adc
adc
inc
mov
and
push
out
arpl
inc
dec
lock
cmp
repz
lahf
dec
mov
jmp
cmpsl
push
lret
xor
adc
std
pop
fimuls
loopne
push
jae
mov
adc
lds
inc
insl
les
sti
pop
call
cwtl
jns
dec
shrb
push
std
xor
imul
into
xchg
and
pushf
inc
pop
mov
lods
inc
add
test
scas
xchg
or
fs
loop
in
es
adc
jmp
xor
out
fimuls
ss
pop
out
push
jo
arpl
cmc
mov
aas
mov
out
add
xor
leave
pop
xor
hlt
and
in
push
pop
jo
icebp
adc
add
sbb
incb
xor
jp
inc
sbb
in
and
mov
cs
mov
jg
jl
or
xchg
mov
mov
push
enter
mov
cmp
loope
dec
mov
cmpb
xchg
or
call
fs
push
xchg
xor
sahf
mov
and
in
loop
jge
cmovp
subl
inc
dec
addr16
jne
out
addb
cmp
mov
xchg
and
xor
rcl
sbb
xor
inc
xor
cmpsl
or
arpl
push
jns
leave
jmp
insb
test
pop
mov
rol
xchg
outsl
aad
shrl
xchg
mov
xchg
push
jp
icebp
mov
negl
push
fiadds
jb
mov
pop
movb
push
daa
jns
popf
nop
pop
roll
ret
pushf
adc
xorb
jo
clc
pusha
fwait
and
inc
data16
lret
jne
shlb
xor
xchg
pusha
and
dec
mov
mov
jp
arpl
or
lods
xchg
dec
ret
xor
push
dec
dec
jp
in
xchg
loop
pushl
mov
add
testb
sub
es
bound
jo
fidivrl
mov
ret
mov
jecxz
pop
ficoms
mov
lods
enter
std
int
or
xchg
jo
std
repnz
push
dec
mov
idivb
lock
dec
lds
jae
ret
repz
imul
jg
and
cmp
push
or
jns
cmp
xchg
and
mov
sahf
addr16
mov
jns
push
inc
jb
js
push
cli
add
adc
aad
cwtl
sub
out
mov
in
outsb
lea
loopne
xor
lea
xchg
sub
lods
imul
sbb
aas
mov
jb
pop
cmp
decl
sub
mov
fwait
push
jo
jbe
fldenv
xchg
mov
aam
inc
xchg
fstps
pop
daa
das
mov
data16
in
test
and
cmp
out
add
cmc
scas
scas
arpl
inc
insb
rorl
addr16
lock
inc
jo
popf
int
shrb
xor
sahf
inc
lods
fiadds
pop
mov
and
icebp
mov
xor
and
fldenv
loop
loop
pop
dec
popl
push
sbb
mov
pop
xchg
scas
mov
pushf
push
je
pop
jg
pop
adc
cwtl
pop
stos
and
adc
fmul
popa
dec
and
ret
lods
ds
lret
push
in
mov
push
sub
clc
and
shl
add
cmc
aam
xchg
out
fwait
mov
cmp
pushf
ljmp
lcall
movsb
ljmp
ss
jge
or
es
mov
xchg
popf
dec
call
mov
scas
pushf
frstor
fs
icebp
ret
mov
subl
les
daa
imul
out
cwtl
sbb
rorb
mov
cli
pushf
mov
sub
pusha
pop
sahf
dec
inc
std
repz
outsl
insb
cmc
in
loope
popl
mov
push
out
inc
gs
popa
iret
push
data16
out
mov
xor
mov
xchg
js
mov
and
lods
xchg
shll
mov
push
lods
jmp
sub
ljmp
mov
test
cmpsl
test
xchg
in
mov
icebp
mov
bnd
shrl
mov
jg
jno
or
rclb
and
add
cmp
xchg
mov
add
push
mov
mov
jle,pt
pop
mov
fdivs
out
jb
lea
push
mov
mov
fnsave
sbb
jbe
movsb
push
mov
pop
or
inc
adc
ret
aad
lcall
mov
mov
mov
mov
mov
in
fisttpll
jmp
push
loope
jmp
fdivs
fimull
adc
pop
sub
sbb
xor
xorl
mov
popa
mov
aas
cmp
xchg
repz
leave
gs
xchg
inc
paddb
pop
sub
mov
jb
mov
xor
mov
xor
mov
jge
sbb
fnsave
dec
or
addr16
mov
mov
test
ja
push
mov
lahf
int
push
and
outsb
sub
mov
das
dec
sub
cmp
push
mov
sub
lds
adc
sbb
into
xor
lods
aas
repz
js
outsl
outsl
out
sbb
jmp
mov
xchg
sbb
sahf
mov
test
ror
test
lahf
push
dec
jne
lcall
mov
dec
mov
xor
outsl
add
push
movsl
lods
not
rclb
mov
push
sbb
nop
pop
lds
mov
inc
add
loope
lcall
outsb
pop
push
xor
xor
cs
pop
jp
in
xor
jns
push
inc
sbb
jp
data16
inc
mov
fsubr
mov
nop
mov
add
test
pop
xchg
mov
nop
xor
mov
mov
cli
push
jecxz
movsb
bnd
movsb
into
push
test
int3
sahf
leave
bound
and
aad
pop
and
cld
test
test
ljmp
xlat
out
mov
add
pop
int
jnp
repnz
mov
add
lods
lods
pusha
push
outsb
aam
sub
cltd
loope
insl
das
cmp
pop
addr16
xchg
out
outsb
jle
and
jmp
inc
mov
mov
lret
push
imul
lea
jmp
lcall
add
int
xchg
add
out
repnz
and
mov
icebp
dec
icebp
js
stc
shl
cs
nop
pop
or
pop
xchg
int
pop
cmc
sbbl
xor
loope
push
mov
xchg
fscale
push
sub
mov
jno
addb
cwtl
or
ss
iret
jg
test
scas
mov
mov
and
sub
jp
push
fmul
dec
iret
add
cmp
xor
pop
xchg
adc
inc
fs
movsl
mov
addl
mov
std
dec
aas
adc
mov
push
stos
and
mov
addr16
cmp
jecxz
fisttps
cmp
adc
mov
dec
cwtl
inc
xor
xchg
in
iret
add
adc
cmpsb
inc
inc
js
mov
cmp
push
icebp
les
jp
shlb
test
fidivrl
inc
test
cmp
ss
les
sub
add
mov
pop
sahf
in
cli
push
stos
inc
imul
frstor
loop
push
or
jp
adc
ret
or
testl
repnz
fmuls
pop
or
aas
xor
rol
jmp
ss
ret
cwtl
jp
sbb
push
out
lret
ljmp
xchg
aaa
call
push
aad
loope
mov
xchg
push
jle
or
popa
xchg
aam
push
cltd
cmp
dec
mov
sbb
jl,pt
xchg
xlat
scas
jp
fidivs
cwtl
das
sub
les
cmc
sbb
adc
jl
lods
pop
sbb
add
fistl
rclb
mov
addb
lahf
dec
mov
loope
xlat
xchg
lds
ja
sub
xchg
sti
jmp
dec
dec
stos
pop
pop
inc
iret
mov
fcomps
fucomi
cmp
push
jp
jno
mov
jp
addr16
sub
out
xor
dec
int3
lock
and
xchg
jmp
sub
push
loope
outsb
push
push
popa
ret
xor
rcrb
jg
fwait
fwait
sbb
add
mov
xchg
shll
dec
scas
adc
inc
inc
sub
inc
add
pop
xor
cwtl
jns
and
or
pop
and
push
jnp
dec
pop
mov
mov
xchg
scas
jns
add
push
dec
push
call
jae
cmc
pextrw
sub
loop
mov
jge
push
mov
push
sahf
roll
in
or
out
sub
aam
ja
fsubl
cld
jmp
std
inc
in
cmp
add
jmp
mov
mov
push
sbb
and
ret
push
rcr
xor
out
imul
jns
xchg
ds
mov
mov
push
daa
mov
test
out
lock
sbbb
push
fidivl
loop
jmp
jne
mov
test
adc
maskmovq
imull
jp
pop
and
adcl
mov
sub
adc
cs
jg
xchg
xchg
mov
or
push
cmp
js,pn
cli
pop
cmp
outsb
lea
std
sub
cmp
mov
enter
ljmp
sub
sahf
mov
sahf
inc
and
and
ss
pop
mov
jg
cmp
pop
loop
in
mov
adc
sbb
pushf
inc
and
jl
push
inc
push
dec
push
in
mov
cmp
dec
outsb
sbb
in
mov
pusha
data16
pop
adc
scas
jnp
pusha
shll
nop
je
fstpl
stos
and
adc
mov
dec
imul
jae
roll
jnp
xlat
cmpsb
stos
sub
ret
mov
mov
das
mov
pop
push
jo
xchg
push
mov
jb
mov
icebp
loopne
hlt
pop
adc
adc
shll
sbb
inc
aas
hlt
dec
fldenv
scas
mov
jmp
sbb
shll
sahf
movl
lcall
or
cmp
mov
fadds
mov
imull
fs
repz
mov
int
inc
clc
jp
xor
mov
call
jmp
stos
mov
fnstenv
mov
fsts
add
pop
pop
mov
mov
pmulhw
ret
sbb
mov
add
mov
arpl
andb
lock
bound
popf
inc
cmpsb
ljmp
les
js
nop
pusha
gs
fwait
sbb
sub
add
pcmpeqb
int
data16
cwtl
lea
adc
mov
std
movsb
movb
in
popf
xor
shrl
mov
adc
shr
adc
sub
imul
out
xchg
add
bound
idiv
mov
mov
incl
movsb
add
fyl2x
gs
sahf
jle
sub
adc
mov
xchg
addr16
cmp
out
xor
sub
jb
pop
insl
mov
sub
adc
jnp
je
push
pusha
mov
scas
in
dec
adc
cld
cltd
xor
int
xorl
adc
mov
sub
sbb
sbb
and
ret
sbb
hlt
mulb
jmp
repz
outsb
in
jnp
iret
mov
sti
sub
jle
sub
pop
divl
rcrb
push
inc
mov
push
dec
pop
push
rorb
out
push
pop
lods
jo
test
add
pop
inc
push
mov
insb
ret
idivb
xchg
dec
ja
mov
hlt
lahf
aas
scas
mov
jns
jle
mov
pop
es
mov
cwtl
cs
fiadds
pop
dec
jp
sbb
xchg
outsl
sub
dec
bound
in
mov
stos
xchg
outsb
jl
lods
push
pop
ja
inc
pop
mov
imul
push
notb
fcmovne
cmc
xor
in
pop
mov
ss
push
arpl
jmp
xchg
dec
idivb
out
and
in
lret
add
pmuludq
lea
adcb
cmc
jns
xchg
push
sub
stos
inc
popa
aas
les
sbb
cs
mov
enter
fisubrl
mov
xlat
js
pop
sub
push
scas
stc
aam
jmp
in
ret
ret
ss
inc
pop
in
and
mov
mov
cmp
icebp
in
sbb
pop
lds
arpl
adc
std
mov
xor
addl
and
addr16
ficoms
imul
add
mov
call
or
popf
outsl
xor
jbe
or
ret
jge
pushf
and
iret
mov
std
stos
jnp
fnstcw
jmp
push
je
adc
inc
adc
pop
dec
jnp
sub
pusha
mov
sbb
subb
imul
mov
aaa
mov
xor
ja
adc
xor
add
pop
scas
aad
adc
inc
imul
fwait
sarb
pop
xor
lock
test
cld
jnp
inc
scas
movl
call
pusha
jae
add
ljmp
icebp
push
call
push
jno
insl
add
xorl
adc
test
dec
shll
test
pop
aad
icebp
cmp
in
mov
push
inc
loopne
cmp
push
adc
jl
xchg
inc
cmp
jmp
ds
outsb
popa
adc
dec
sbb
mov
subb
rorb
mov
lea
mov
lahf
and
cmp
add
sub
sub
mov
cltd
mov
sahf
and
iret
js
mov
iret
fyl2xp1
cltd
nop
fwait
ret
xlat
mov
ljmp
jg
ret
stos
add
imul
and
sti
cmpsb
xlat
movsb
je
adc
adc
cli
cmpsl
imul
hlt
dec
bound
or
pop
mov
int
adc
call
hlt
cmpsl
scas
dec
sbbl
xchg
lret
add
pop
and
jge
jns
xor
mov
xchg
cmp
jg
dec
pusha
sbb
fcoml
or
mov
push
pop
sbb
js
in
loopne
ret
jbe
mov
dec
push
fnstenv
popf
inc
stos
jmp
mov
and
dec
addr16
rorb
mov
ss
mov
xor
sbb
and
mov
dec
loopne
stos
rorb
sub
sub
lret
mov
adc
xchg
xchg
aaa
pop
imul
push
js,pn
nop
inc
dec
insl
loopne
insb
xlat
or
mov
pushf
jg
outsl
enter
mov
and
mov
daa
inc
add
xchg
mov
cltd
lret
xchg
sub
xor
mov
cmp
push
gs
bound
push
inc
cmpsb
add
mov
inc
movsb
mov
aam
scas
stc
rcrl
jo
cltd
xlat
inc
push
rclb
into
push
call
add
and
rcl
pop
data16
inc
mov
int3
aam
sub
int
aas
ds
fstl
lcall
out
mov
xchg
mov
in
mov
nop
in
loop
sbb
repz
xchg
js
js
das
ljmp
add
cmc
test
dec
shll
and
sbb
jne
xchg
mov
pop
idivl
sub
xchg
imul
mov
rclb
stos
ljmp
mov
and
fs
scas
sub
dec
push
inc
out
xor
lahf
xchg
fidivrs
pop
push
jp
cltd
cmp
aam
and
ret
inc
push
or
mov
les
push
hlt
and
add
popa
dec
jp
mov
pop
arpl
and
or
jg
adc
inc
mov
jb
fptan
mov
xor
xchg
mov
pop
jl
pusha
fwait
inc
pop
sbb
stos
cmpb
icebp
add
cs
cmpsb
insl
out
push
dec
in
cmp
push
arpl
jnp
jne
or
aaa
mov
cld
fcomps
divb
pop
rcrb
stos
mov
pusha
cltd
scas
fmull
cwtl
enter
test
popf
sbb
push
jmp
insb
aad
mov
sbb
ss
inc
loop
jge
or
pop
ljmp
in
out
lret
fcomps
push
adc
iret
mov
or
and
dec
inc
mov
add
xchg
xorl
and
sbb
or
push
mov
add
ret
dec
in
inc
xchg
mov
sub
lods
popf
mov
mov
lret
mov
mov
ljmp
nop
imul
xorb
jno
dec
jno
jg
jae
mov
in
adc
pop
stc
lret
cltd
pop
inc
xchg
adcb
call
and
sbb
pop
lds
mov
outsl
dec
subl
loop
pop
out
daa
mov
jmp
shlb
data16
out
mov
mov
fsubl
clc
push
jge
xchg
jo,pt
je
cmp
mulb
ds
ret
inc
jbe
ljmp
mov
sbb
movsb
call
int3
add
add
adc
xlat
loop
outsb
sub
sub
aaa
jmp
jl
mov
lahf
scas
mov
test
loop
je
aam
mov
mov
inc
dec
push
loop
inc
sahf
leave
xchg
adc
dec
mov
push
stos
sub
iret
xchg
push
js
je
test
aam
loop
mov
sub
hlt
sbb
ud0
mov
out
fbld
aas
mov
aas
fbld
fistpl
popa
xchg
sbb
sbb
dec
and
xor
jae
dec
jno
cmc
sub
jmp
xchg
inc
out
pop
and
mov
cmp
add
std
mov
lret
iret
scas
loop
lret
pop
pop
cmc
in
xchg
lock
pop
mov
pop
inc
or
gs
cmp
rcrl
jp
and
aad
movsl
jecxz
ret
mov
jo
xor
cmpsl
jle
imul
aaa
mov
stos
dec
inc
jg
and
fisubrl
jmp
imul
cmp
mov
cmpb
inc
sbb
gs
fdivs
rcl
fdivrl
cwtl
push
clc
add
mov
pop
loop,pt
in
outsl
jnp
xor
icebp
add
or
out
mov
es
in
out
rcr
mov
push
jp
movsb
lcall
xor
adc
xchg
or
int3
or
mov
push
repz
xchg
loopne
push
jno
ret
mov
inc
enter
stos
jns
fld
filds
adc
clc
imul
sub
or
inc
xchg
xchg
ret
push
daa
or
dec
sti
in
lea
aam
or
out
psubw
ljmp
mov
sub
stc
or
ds
cld
fistl
and
cmp
push
fwait
jbe
jno
inc
and
leave
mov
jge
pop
nop
adc
ja
fstpt
mov
data16
xlat
dec
jle
fcomps
call
sbb
cld
insl
loop
rolb
test
sbb
xor
inc
xchg
std
rorl
ret
lcall
mov
fdivs
add
add
pop
push
das
mov
dec
and
es
sbb
ljmp
shl
shll
movsb
es
ss
mov
testl
or
cmp
mov
dec
jb
ljmp
aad
cmpsl
gs
sbb
sbb
mov
iret
sbb
dec
shlb
aam
sbb
mov
push
mov
ret
adc
loopne
sub
scas
jnp
movsb
xchg
dec
lahf
ret
and
and
mov
mov
nop
je
jmp
push
in
mov
repnz
add
xchg
or
aam
adc
cvtps2pi
xor
add
or
xor
sbb
sub
xchg
hlt
lcall
movsb
sbb
testb
pop
in
testl
mov
sbb
sbb
push
pop
push
sti
es
xchg
test
add
scas
adc
pop
xor
jne
enter
push
xchg
lea
push
rcl
add
popa
test
pop
inc
in
les
shll
incl
adc
lahf
out
and
add
xchg
mov
jne
xorl
push
mov
or
add
in
inc
addb
fstps
cmp
xor
jne
imul
cld
in
and
mov
dec
ljmp
mov
jmp
into
jg
pushl
dec
fwait
push
mov
xor
pop
cmp
mov
lods
jb
in
xor
fs
xor
stos
push
fs
adc
sub
xor
dec
gs
fistpll
fwait
cltd
nop
mul
add
test
jl
das
in
loopne
lods
into
lret
dec
xchg
mov
movsb
or
cmp
mov
imul
push
popa
add
daa
pop
cmp
add
mov
add
mov
or
jb
xchg
leave
push
aas
sbbb
lods
in
lret
pop
aas
fcom
mov
xchg
test
or
cmp
pop
sbb
out
dec
xchg
xor
neg
movsb
lret
fisubl
mov
mov
cmpsb
out
jns
sbb
ljmp
bswap
stos
xchg
ret
sti
stos
insl
dec
fsubrs
jg
lcall
repnz
test
imul
jb
jecxz
mov
sub
dec
shll
insb
fs
adc
or
loope
popl
out
arpl
dec
not
mov
adc
adcb
mov
pop
xchg
enter
in
mov
or
or
xor
fdivs
mov
lds
enter
push
adc
mov
sub
out
aam
in
sarb
dec
mov
sub
bound
push
outsl
jecxz
xchg
es
mov
jecxz
jmp
push
outsb
jae
int
fildll
scas
cmp
pop
inc
mov
ret
lret
adc
push
pop
les
cmp
mov
cmpsb
sti
inc
add
into
dec
inc
ja
cli
cltd
cmpsb
pop
inc
arpl
aam
sbbl
inc
sbb
sbb
imul
push
ds
outsb
mov
sbb
mov
sahf
in
and
pushf
mov
adc
and
lods
pop
cmp
jns
fimuls
adc
into
dec
jg
mov
xchg
adc
mov
mov
ljmp
fcoms
sbb
enter
lods
or
jo
cmpsb
fnsave
or
jg
stos
insb
stos
fs
out
mov
lea
pop
mov
mov
dec
or
cmpsl
in
pop
push
mov
lock
push
xchg
mov
mov
test
pop
das
cmpsb
out
sbb
stos
mov
adc
leave
int3
and
pop
ljmp
sahf
movsl
cltd
cmp
mov
lret
insb
loope
or
adc
stos
mov
orl
int
push
inc
insb
addr16
mov
mov
mov
outsl
mov
mov
repz
mov
sbb
fstpl
aam
subl
and
cwtl
outsl
les
xor
shlb
jnp
pop
inc
fnsave
lcall
or
sbb
adc
fdivp
sub
sarl
cs
sbb
adc
mov
and
pop
jmp
adc
out
pop
loopne
sbb
mov
shll
xor
aam
psubq
dec
les
scas
das
lea
lods
pop
xchg
test
inc
hlt
std
cmp
or
loopw
mov
enter
sbb
xor
inc
xor
test
inc
inc
mov
aam
nop
mov
adc
popa
pop
divl
mov
loop
movsl
lret
mov
push
pop
push
int3
mov
ret
mov
cmp
pop
xor
xor
sahf
mov
jecxz
data16
xor
mov
sbb
mov
and
test
jle
ljmp
loop
rorb
dec
fdivr
stos
popa
and
loop
in
call
lahf
stos
cmp
push
nop
lret
lcall
inc
mov
push
push
dec
adcb
jne
pand
popa
mov
pop
in
aam
popf
bound
icebp
aaa
pop
add
and
iret
adc
jecxz
out
out
insl
test
lahf
cwtl
lret
lret
inc
xchg
and
add
scas
inc
sub
pop
cld
sub
cmpl
pop
fnsave
scas
in
movsl
das
rorb
sti
aam
mov
add
ss
xchg
push
int3
dec
jge
sbbl
xchg
jmp
cmp
sub
push
push
xor
push
sub
dec
inc
mov
loope
cwtl
out
adc
jb
add
lahf
fistl
jg
cwtl
test
cmp
mov
bound
stos
aad
sbb
cltd
test
sub
andl
cmpsl
cld
lret
fiaddl
and
cmp
shr
cmpsb
pop
out
xor
jecxz
mov
enter
inc
scas
out
cs
push
out
add
aaa
sub
mov
inc
pop
xor
ret
dec
lret
daa
inc
movsb
jg
cli
daa
andl
cltd
insl
scas
mov
jb
popa
pop
push
cmp
xorb
pop
mov
pop
jbe
aas
test
push
in
frstor
bound
lods
fstpl
mull
sub
mov
or
push
inc
loopne
sarb
cmpsb
outsb
jmp
mov
leave
sub
in
cmc
mov
ss
out
ret
cmp
lret
or
cmp
mov
xor
mov
or
out
and
pusha
mov
insl
rcrb
ror
cwtl
mov
jg
or
lock
lret
enter
mov
clc
mov
jbe
nop
adcb
ljmp
sbb
mov
gs
push
pop
adc
loopne
icebp
scas
xor
in
jl
imul
icebp
add
cmpsb
insb
movsl
pop
lret
cmp
leave
aaa
iret
mov
mov
adc
xchg
mov
or
sbb
and
jnp
and
mov
add
std
cmpsl
shrl
ja
data16
hlt
xor
lods
call
push
push
push
pop
jmp
repnz
xchg
fwait
inc
push
inc
jo
daa
push
les
lock
pop
scas
fdivl
pop
jae
and
cmpsl
inc
sbb
adc
sub
cmp
inc
lds
scas
jle
in
xchg
aas
imul
sahf
dec
adc
jge
mov
mov
int3
dec
mov
jbe
push
sub
ljmp
cmp
std
jecxz
cmp
lahf
sbb
pushf
xor
fstpl
popa
mov
mov
fbstp
in
push
aaa
xchg
cmpsb
jp
sub
jne
lcall
sbb
and
daa
mov
das
xor
push
and
inc
mov
or
lcall
pushf
pop
sbb
or
flds
pop
insb
xchg
inc
push
fmul
test
pop
and
jp
in
pop
lret
add
push
aaa
movsl
rcrl
pop
sbb
mov
in
inc
and
and
stc
aas
sahf
jmp
sbb
sub
sub
inc
xchg
xor
testl
pop
xchg
movl
pop
dec
test
sbbb
in
adc
test
aaa
scas
jl
ljmp
cmp
dec
ficomps
push
std
xchg
xchg
xchg
jae
xchg
jb
pop
aas
test
outsb
insb
and
jne
shrl
jnp
xchg
mov
xorb
cmp
jecxz
inc
ror
mov
cmpl
ficoms
add
mov
xchg
mov
fmuls
adc
pop
sbb
push
std
mov
jg
lahf
outsl
lods
rcrb
mov
repnz
fldenv
lahf
sub
lret
outsb
xchg
iret
sbb
jo
adc
lock
and
push
pop
mov
adc
push
jae
mov
lods
aam
pop
mov
bound
test
cmp
adc
mov
cld
lds
jecxz
dec
cmpsb
in
push
adc
out
divb
push
imul
add
push
cmp
pop
add
popf
dec
stos
xor
fdivs
mov
das
mov
xor
movsb
lods
not
sbb
mov
repz
pop
dec
add
lods
shr
add
dec
inc
aas
outsl
ret
jns
mov
aam
in
xor
pop
cmpsl
add
insl
and
inc
rolb
icebp
sbb
push
jmp
xor
mov
xor
pop
push
inc
pop
sahf
outsb
pop
nop
int3
rorl
daa
cmp
mov
ficompl
ds
push
jbe
insb
and
lods
xchg
sbb
jl
jmp
push
fisttpll
xchg
decb
ret
loopne
xchg
addr16
push
xor
leave
into
popa
into
fwait
mov
loope
and
aas
pop
xor
xchg
xor
aad
enter
aaa
shl
push
sub
lea
loopne
dec
add
shlb
jne
test
cltd
sbb
push
mov
push
add
dec
pop
cmp
sbb
push
aam
sub
mov
jge
jl
shlb
stc
and
pop
test
roll
arpl
fisttps
mov
inc
out
add
std
js
or
push
cmp
fistpl
mov
sbb
push
test
mov
add
imul
push
push
loopne
xchg
mov
sti
das
icebp
xor
insl
sbb
pop
popf
call
cmp
xchg
mov
mov
loop
ss
movsb
cwtl
loop
test
cmpl
in
divb
mov
inc
outsl
mov
jns
ja
jnp
test
xor
fisubrs
out
jp
jo
rcrl
mov
fldt
loop
rol
adc
mov
mov
lods
push
js
xchg
mov
or
rorb
mov
addb
and
adc
jo
js
ds
pop
pop
or
out
divb
jmp
jno
test
push
icebp
gs
add
jb
enter
adc
push
mov
or
xchg
inc
stos
incl
xlat
outsl
push
lock
aam
test
fwait
cmp
xchg
mov
inc
ja
aaa
rclb
out
call
out
ds
notl
imul
and
push
stc
inc
mov
and
out
into
in
data16
test
enter
xchg
xchg
mov
cwtl
scas
pop
lcall
push
lds
push
call
lcall
mov
ljmp
mov
inc
insl
aaa
or
fcomps
stos
int3
sbb
shrb
mov
iret
jp
push
test
test
push
js
xchg
stos
sub
sbb
cmpsb
fwait
in
push
mov
sbb
mov
loope
mov
push
in
mov
mov
jo
js
pop
mov
jbe
lods
dec
inc
mov
or
cli
jecxz
test
mov
in
cmp
ljmp
in
xorl
mov
pop
mov
and
hlt
fs
xchg
xchg
and
dec
lods
xchg
jae,pt
je
aad
test
rclb
push
xchg
push
adc
lahf
ss
in
push
jmp
mov
jo
aaa
inc
or
push
or
inc
jae
xor
lea
aaa
out
push
test
popa
repnz
push
push
pop
loopne
cmp
aaa
sub
xchg
or
adc
divb
cs
arpl
cmp
xchg
imul
cmc
cmp
sbb
push
xchg
pop
push
push
xor
xor
addr16
les
rcl
fnstcw
cmp
jns
fwait
cmpsl
hlt
sar
out
pop
mov
push
mov
setnp
sti
mov
repnz
inc
pop
aam
xchg
mov
mov
cmp
sbb
gs
sbb
rcrb
jb
add
in
fisttps
shrl
in
ss
pop
sbb
lods
aam
lahf
jo
stos
xchg
testl
repz
fs
or
mov
fs
sbb
test
xchg
adc
ret
loopne
fs
sbb
fisubrl
mov
js
xchg
lret
sarb
call
sbb
pusha
jg
aad
clc
lea
xchg
xchg
pop
push
fwait
jnp,pn
xor
das
in
xchg
test
pop
xor
adc
and
inc
add
int
outsb
xlat
jb
sarb
jnp
and
jecxz
push
repnz
jno
repnz
fists
sbb
lahf
mov
repz
hlt
pop
add
imul
xchg
sub
xor
xorl
gs
xchg
das
sub
and
mov
int
jo
mov
sbb
shlb
lods
mov
mov
inc
jbe
rolb
scas
and
aaa
inc
mov
pushf
and
sbb
jp
or
hlt
subl
and
int
pop
lret
cli
in
xchg
std
cld
iret
stos
stos
jbe
mov
xchg
inc
dec
stos
out
mov
scas
out
ret
cs
mov
mov
out
mov
cmp
lock
mov
pushf
fs
mov
imul
adc
pop
pop
cmp
repz
pop
outsl
inc
stos
lods
mov
sbb
add
pop
mov
push
sar
xor
pop
push
sar
and
push
shlb
sbb
push
fildll
lahf
jbe,pn
pop
jl
test
xor
out
rol
shr
stc
rorl
push
jns
add
mov
std
aas
sub
jge
jg
mov
xlat
cmpsb
aad
xchg
int3
js
aam
ret
and
stc
pop
xchg
sbb
and
dec
sbb
add
push
push
push
lock
ss
sbb
ds
jns
mov
jno
sahf
in
pop
ds
push
out
mov
and
sbb
push
icebp
mov
std
add
es
jnp
popf
jbe
jns
lahf
icebp
mov
jp
test
push
adc
std
xor
aaa
movsl
fmull
arpl
stos
in
cmp
mov
arpl
sub
mov
psubsb
pop
fimull
stos
jmp
pop
stos
cmc
cltd
jl
rcr
imul
dec
adc
mulb
adc
jp
adc
mov
das
xchg
sbb
clc
sbbb
and
loop
push
sub
jle
scas
cmpsl
mov
push
and
in
inc
jmp
lods
stc
in
add
in
xor
inc
and
insb
cmpsl
icebp
mov
xor
or
pushl
sbb
adc
orps
inc
mov
pop
sbb
add
lahf
ficomps
dec
mov
xor
cltd
inc
pop
inc
sub
fdivrl
jnp
and
into
mov
fdivrs
xor
sbb
mov
clc
mov
loopne
xor
repz
pop
icebp
pop
cmc
mov
loopne
push
or
pop
xchg
xchg
mov
aas
jo
add
leave
pop
insb
imul
dec
outsl
or
cmp
inc
leave
lods
popa
jg
pop
bound
loope
add
xchg
out
das
and
jo
xlat
loopne
cmp
gs
mov
cltd
pop
sbbl
and
xchg
xor
fistps
out
out
enter
sarl
mov
pop
push
mov
iret
xchg
in
xchg
jecxz
pop
push
pop
push
in
cmp
dec
ret
rcrl
stos
cpuid
shll
addb
das
ret
fdivs
inc
push
sub
xchg
fwait
jmp
insl
in
mov
insb
mov
pop
out
icebp
insl
jmp
sti
lret
pushf
inc
inc
cmpsb
ss
pop
loopne
dec
mov
adc
lret
mov
out
daa
xchg
push
aas
in
shl
adc
scas
jno
or
pusha
dec
insl
mov
fwait
push
or
jecxz
pop
sti
rolb
mov
xor
jne
outsl
jne
add
mov
in
divl
inc
int
dec
push
pop
sub
dec
jbe
lret
call
push
stos
and
sbb
in
lret
out
cmpsb
pop
out
fsubrs
outsb
mull
sbb
fnstcw
mov
sbb
pop
cmp
mov
bnd
repnz
sbb
xor
jecxz
pop
xor
das
test
mov
xor
lahf
push
iret
fcomps
fcmovne
popf
scas
sbbl
sbb
mov
mov
mov
popa
cld
xor
scas
xchg
push
xchg
adc
lods
int
push
rorb
inc
add
gs
mov
jg
push
fdivrs
xchg
std
pop
sti
test
pop
push
mov
jmp
xor
andl
adcl
dec
dec
sbb
sarb
or
scas
adc
inc
enter
divl
addr16
into
mov
or
loopne
addr16
xchg
aas
push
rcr
add
aas
imul
jb
push
int3
sbb
push
mov
roll
push
xchg
inc
mov
testl
int
aaa
iret
jne
xchg
in
mov
xchg
loope
pop
dec
sbb
das
or
aad
mov
orps
push
push
push
js
lahf
pushf
push
test
cmpsb
sti
pop
cmc
iret
stos
inc
push
cmp
loop
pop
enter
scas
push
push
ja
das
and
and
add
dec
cmp
sub
scas
xchg
pusha
stos
push
pop
arpl
shrl
mov
xchg
pop
cmp
fcom
push
imul
sar
mov
sbb
push
xor
push
cmp
or
popf
xor
pop
int3
stc
jg
movsl
jae
cmc
shrb
push
andl
jnp
insb
jbe
shll
cld
cmp
in
movsb
ret
movsb
loop
and
mov
or
cwtl
fadds
mov
jnp
lret
jecxz
mov
mov
xchg
stc
pop
stos
imul
lock
push
sbbb
popl
roll
pop
loope
xchg
lret
cld
xchg
push
lret
push
pop
or
jno
call
cmpsb
add
in
sub
stos
push
daa
fists
add
sbb
call
jo
pusha
pop
mov
icebp
movsb
xor
lret
inc
jns
xor
jo
fidivl
mov
cli
fidivrs
ret
xorb
sarl
mov
mov
popf
aas
hlt
shl
loope
es
mov
inc
pop
jns
idivb
add
adc
sub
das
pop
stos
subl
mov
loope
fcoml
call
pop
sub
jmp
and
aad
sbb
dec
popl
shrl
push
popa
pop
push
inc
repz
dec
decb
mov
pop
fsubp
mov
pop
mov
pop
xchg
aam
ja
jge
js
in
popa
and
lods
pop
arpl
bound
fistpll
test
xor
dec
dec
push
lods
mov
call
inc
mov
mov
std
pop
mov
ret
jne
pop
pop
fs
mov
jb
mov
std
xor
jb
sahf
outsl
and
mov
loopne
add
shrb
clc
insl
xlat
fadd
sbb
insl
mov
outsl
clc
cmp
dec
into
xor
mov
dec
sub
jg
jb
insl
xorb
cwtl
mov
cmp
outsl
add
pop
insb
repz
mov
mov
sbb
sub
inc
icebp
cmp
sub
lahf
pusha
mov
jmp
xchg
outsl
dec
jle
fsubrl
mov
push
cld
xor
jp
inc
cltd
filds
mov
xor
xchg
imul
mov
hlt
mov
out
xor
nop
push
xlat
sub
cmp
mov
jnp
fistpl
jbe
jl
xor
and
scas
or
add
add
fdivr
je
les
and
cmp
mov
ja
mov
fisubrl
daa
or
arpl
sbb
mov
xchg
jmp
nop
jmp
or
cmpsl
inc
ret
loop
int
cmp
add
adc
sub
out
mov
data16
jle
sub
lea
lods
out
sub
in
mov
bound
cli
sbbl
add
sti
pop
and
jmp
jmp
repz
jo
mov
cmpsb
jecxz
scas
fwait
pop
xchg
enter
bound
push
xlat
pop
movsl
jno
push
test
mov
loop
mov
or
sbb
sub
cmp
sub
xchg
add
das
add
push
sahf
jae
mov
shlb
jg
lods
jo
sub
sahf
lods
pop
push
dec
lods
dec
aad
rorb
cld
xor
push
outsb
sbb
iret
mov
aas
popa
sub
je
fsubrp
out
dec
xchg
in
xchg
mov
in
xor
mov
in
push
aas
les
movsl
add
mov
sub
adc
ret
and
xor
jecxz
lds
sub
sub
mov
mov
mov
sub
pop
lods
sub
fcompl
movlps
je
xchg
or
lcall
jb
mov
inc
mov
sub
mov
loope
in
fucomip
or
push
cmp
lods
aaa
adc
jne
xchg
rcl
out
inc
enter
mov
das
push
mov
mov
push
sbb
int
and
jle
jl
rorb
mov
adc
aam
lods
mov
adc
pushf
stc
push
das
inc
jns
sub
sbb
hlt
add
iret
inc
push
and
movsl
mov
mov
ret
je
test
dec
and
adc
in
adc
add
pop
xchg
sbb
push
pushf
sbb
push
outsl
incl
lahf
insb
mov
inc
jbe
lcall
gs
xor
pop
pop
shr
roll
in
pop
push
dec
mov
ljmp
jbe
cmpsl
adc
push
pushf
dec
or
jo
mov
cmp
lret
fnsave
orb
or
mov
and
sbb
lods
addr16
jecxz
mov
sar
imul
fldpi
sarl
adc
cmp
stos
jecxz
add
and
enter
fstl
xor
ds
xchg
inc
test
leave
mov
lret
pop
ja
and
std
push
sub
jo
subl
xor
stc
inc
dec
aad
mov
dec
pop
stos
jmp
pop
mov
or
mov
in
dec
loopne
enter
mov
inc
adc
mov
ljmp
das
orb
ss
shll
imul
pop
nop
dec
mov
dec
movsb
fs
clc
sarl
call
ret
icebp
fstpl
sbb
addr16
ret
test
inc
pop
fucom
sub
test
mov
jae
notl
fadds
lea
cltd
ss
repz
enter
inc
aas
lods
test
inc
jge
xchg
xor
push
or
int
ud2
sub
ss
nop
fisubrl
sub
sarl
push
pop
push
push
xor
aam
test
mov
mov
add
xchg
fwait
packssdw
xchg
jne
imul
and
jle
data16
xor
xlat
movsl
addr16
mov
adc
dec
lcall
out
rclb
adcb
sub
cmc
ja
aaa
xor
push
hlt
sub
imul
fisttpl
sub
pop
clc
jno
dec
sub
rcrb
xchg
pop
jne
inc
mov
out
cmpsb
lret
in
scas
dec
popa
push
jns
inc
sub
and
imul
test
cmpsb
fmul
and
or
or
mov
push
pop
dec
xchg
leave
test
gs
xor
pop
cmc
clc
stos
enter
icebp
cmp
imul
pop
sub
xchg
or
addl
fwait
test
sbbb
xchg
jecxz
mov
push
lock
pop
jp
xchg
lods
es
aaa
rcrb
xlat
bound
or
pop
icebp
push
mov
daa
xchg
xor
stc
push
push
mov
mov
in
mov
lods
mov
aam
fwait
inc
cmp
cmpsb
hlt
das
adc
scas
add
xchg
test
jp
jle
jecxz
pop
sarl
jne
ss
enter
shll
xor
mov
mov
jle,pn
push
fidivs
gs
int
dec
adc
fdivs
es
sbb
sti
sbb
fwait
aas
scas
jo
in
mov
inc
mov
leave
push
inc
mov
mov
cs
push
lea
pop
mov
mov
pop
aam
pop
into
dec
enter
or
add
jmp
js
xor
pop
pop
add
jne
xchg
lods
pusha
stc
jae
cs
sahf
xor
adc
lret
fcmovb
mov
cwtl
ja
xchg
lret
inc
fldl
inc
lock
data16
lds
mov
add
ja
ja
mov
in
mov
hlt
push
jne
jl
mov
into
fidivl
insb
fisubl
cmp
push
xchg
repnz
pop
xchg
mov
out
in
xchg
mov
cmp
sahf
sbb
enter
jmp
rclb
push
out
call
stc
sub
mov
lret
cmp
and
sub
push
sub
adcl
or
xor
cmpsb
dec
sbb
mov
out
rorb
push
or
and
or
addr16
pop
push
fists
cmp
inc
into
aas
push
andb
outsb
xchg
jae
jp
test
pop
push
out
mov
mov
test
data16
test
xchg
ljmp
and
jb
mov
mov
ljmp
xor
inc
mov
adc
cmp
jnp
pop
fmul
cltd
ret
loopne
mov
dec
sbb
jle
inc
ljmp
js
push
out
out
or
rcr
adcb
push
fucomip
shrl
jb
inc
fstpt
aam
into
stos
movsb
int3
loopne
test
lret
and
add
add
mov
jl
clc
inc
stos
insb
adc
or
loopne
or
aaa
xor
into
mov
insl
pop
das
cmc
push
sahf
cmp
mov
mov
push
int3
rorb
inc
cli
loop
loope
xor
rcrb
lahf
out
ret
jg
ret
xor
idivl
xchg
lret
cmc
inc
stos
mov
xor
cmpsb
push
mov
and
lcall
es
sbb
push
jbe
dec
xchg
mov
mov
push
push
roll
mov
jmp
xchg
xchg
in
leave
add
push
mov
stos
outsb
cmpsb
sahf
outsl
shll
shrl
subb
xor
sti
mov
mov
enter
pushl
ror
cmp
xchg
dec
fcomi
dec
xor
aaa
xchg
gs
jmp
push
pop
add
mov
js
leave
test
push
xor
xor
mov
aas
or
jns
fs
divl
test
jmp
aad
aad
xor
mov
add
lods
fmuls
cs
or
cmp
notl
sub
adc
mov
pop
cmp
std
rclb
cmp
leave
push
fprem
xlat
and
or
jb
cs
dec
inc
xor
inc
test
xor
ss
scas
sahf
gs
add
inc
scas
and
loop
test
mov
dec
adc
insb
sub
sbb
cmp
push
divb
pop
movsb
shl
or
inc
ret
cmp
ljmp
mov
loop
popa
jbe
fildll
outsb
cmp
push
adc
jge
mov
sub
lret
je
push
mov
mov
cs
xor
xchg
ss
push
call
fidivs
sbb
testl
loop
mov
outsl
xor
inc
xchg
mov
incb
stc
aad
inc
inc
out
jbe
lods
fsubrl
pushfw
mov
dec
int3
flds
and
pop
int3
outsl
stc
adc
aam
es
js
jbe
adc
pop
bound
ret
arpl
push
push
testb
dec
xor
sub
jmp
push
call
push
mov
mov
cmp
mov
shlb
and
push
scas
pop
gs
jbe
lds
mov
or
sti
mov
sub
lcall
fimuls
and
ret
int3
xchg
sahf
mov
clc
or
mov
and
cs
add
push
repnz
inc
test
mov
inc
loop
jl
mov
jp
or
rorb
inc
out
push
mov
sbb
pop
loop
movsl
xchg
test
inc
inc
sbb
xchg
cmp
icebp
xchg
adc
leave
loope
orl
loopne
test
lcall
adc
movsl
mov
repz
popa
cmp
sbb
jo
loope
ljmp
test
cmp
push
rcr
sub
cmp
xchg
int
lret
jnp
pop
out
aaa
push
adcb
mov
push
add
inc
lcall
lods
dec
in
xchg
pop
outsb
xchg
xchg
pop
jecxz
xchg
fcmovbe
enter
jbe
pop
sbb
pop
xor
fdivs
popa
push
bound
mov
and
pop
cmp
lcall
jmp
mov
call
push
mov
movsb
pop
adcb
int3
push
push
data16
insb
fimull
mov
mov
cld
jns
mov
pop
cwtl
mov
ljmp
out
jmp
push
mov
cwtl
out
repz
fs
enter
ss
loope
cmp
add
mov
mov
stos
daa
lds
push
cs
mov
imul
xchg
ja
jns
jmp
adc
outsb
nop
std
jge
orb
dec
sub
mov
std
movl
xchg
push
mov
adc
add
xchg
stos
mov
stos
mov
test
sub
aad
sbb
fsubrl
mov
imul
in
push
stc
fxch
mov
cmpsb
repz
push
stc
in
aaa
pop
or
mov
mov
mov
shrb
add
nop
mov
or
adc
xchg
dec
pop
int
add
rorb
cmpb
sub
push
je
cmp
lcall
das
jnp
adc
mov
test
divb
sti
jp
std
and
inc
outsb
je
movb
popf
iret
mov
neg
xchg
mov
insl
mov
adc
lahf
in
aas
cmp
mov
fyl2x
sub
pop
push
aaa
xor
pop
inc
cli
mov
push
mov
inc
xor
xchg
fistps
xchg
iret
mov
ja
int3
xor
mov
pushf
int
mov
inc
aad
sbb
ret
add
mov
shl
shll
fisubrs
ffreep
stos
scas
test
xorb
je
cwtl
fldenv
repnz
fidivrs
sub
loop
inc
sti
dec
push
mov
sbb
por
repz
jbe
xor
test
cmpb
jg
pop
mov
inc
cld
jmp
icebp
lret
out
xchg
cld
inc
mov
scas
push
out
shl
cli
aaa
out
lods
jle
lods
xchg
mov
les
jg
xor
push
js
notl
out
sbb
aaa
xor
shrl
aas
fmuls
scas
outsb
mov
call
add
mov
mov
push
add
cmc
push
and
adc
cmc
dec
aam
mov
lret
pop
cltd
xchg
mov
pop
je
cli
xor
mov
arpl
ret
mov
aam
dec
es
jns
cmc
mov
pop
rcrl
imul
fwait
add
mov
iret
subb
mov
sub
cmc
push
ja
sbb
cmp
push
arpl
mov
inc
mov
mov
jle
pushf
push
hlt
cs
push
lcall
aas
push
xlat
pop
cmpsl
or
stos
int3
cld
pop
dec
mov
dec
mov
push
add
push
shll
add
loope
xchg
xchg
mul
pop
fsubrs
cli
daa
and
xchg
ret
lods
mov
repnz
enter
and
dec
lret
sbb
cmpsb
addr16
mov
aaa
xor
fistps
repz
dec
push
test
dec
and
sub
andb
mov
scas
loop
and
mov
sbb
cmp
daa
mov
rcll
std
das
out
and
mov
inc
inc
push
out
push
adc
mov
leave
int3
dec
dec
into
push
clc
pop
pop
and
pop
lahf
pop
lds
xchg
sti
adc
aas
xchg
pusha
mov
int3
test
arpl
pop
mov
dec
test
in
lods
dec
popa
push
adc
cmpsb
xchg
vunpcklps
ret
jnp
jne
imul
cmpsl
sarb
daa
insl
sbb
add
outsb
call
and
jne
push
adc
pcmpgtd
ret
adc
dec
mov
lods
test
daa
repnz
icebp
jb
test
lods
insl
pop
push
sahf
lahf
fmull
sbb
pushf
cmp
push
leave
or
mov
in
fs
enter
mov
aas
lret
call
mov
lahf
test
scas
pusha
pop
je
cmp
paddb
adc
in
js
mov
fcoml
roll
mov
jmp
mov
fcmovnu
lock
cltd
mov
sbb
leave
adc
pop
lcall
mov
add
into
or
outsl
addl
jle
and
mov
iret
stos
nop
ja
cs
xchg
rcrb
mov
pusha
lods
enter
fsub
mov
adc
xchg
out
jmp
lea
xlat
xchg
pop
push
lock
xchg
add
aam
cli
pop
cmpsl
inc
mov
adc
ss
repz
addr16
pxor
push
inc
pop
test
add
xor
in
lea
mov
cmpl
jbe
pop
jo
mov
cmp
cli
call
ja
imul
jle
dec
xor
into
rcll
inc
xchg
ljmp
dec
and
sbb
jo
mov
inc
xchg
mov
push
icebp
add
cmpl
jae
mov
push
mov
popa
repz
mov
out
fnstenv
mov
or
icebp
loop
xchg
negl
test
call
mov
out
jecxz
adc
lods
sbb
cld
and
aaa
loope
mov
sub
les
fs
or
movsb
out
and
loope
shr
jbe
pop
in
popa
lea
lahf
movsb
sbb
xchg
imul
mov
imul
mov
cli
push
xchg
popa
dec
int
sahf
dec
in
mov
out
add
cld
pop
dec
inc
outsb
outsl
push
das
les
cmp
add
test
mov
add
xchg
sub
pop
mov
leave
test
inc
popf
verw
fisttpl
push
frstor
or
dec
idivl
push
inc
repz
sahf
out
je
cli
out
sbb
fsts
lcall
idivl
push
adc
and
xchg
cltd
add
lods
mov
jbe
mov
pop
mov
ss
rcrb
addl
xchg
inc
mov
mov
push
jb
jo
xchg
jb
xchg
pusha
out
int3
pop
adc
jmp
loope
loop
inc
dec
sub
mov
js
shlb
jp
cmp
into
and
mov
and
cmp
jg
dec
lcall
mov
mov
sahf
mov
iret
or
cmp
lds
push
xchg
jmp
cli
adc
das
fbld
inc
push
jge
mov
fistpll
cs
mov
mov
jae
sete
fldl
ret
xor
xor
cwtl
and
ljmp
xor
out
sbb
mov
xchg
shlb
in
pop
mov
add
fwait
push
pop
add
loope
jno
pushf
sbb
into
dec
repz
jecxz
or
out
in
test
test
jg
out
dec
push
mov
lock
xor
inc
fwait
imul
es
lods
adc
xchg
cmp
mov
mov
movsb
aad
add
lods
test
mov
leave
popa
in
scas
sbb
int3
movsl
mov
or
imul
ret
mov
pop
jb
sbb
mov
or
inc
mov
testb
dec
fdivl
mov
fwait
stos
mov
mov
ss
xchg
pop
xor
loopne
mov
jae
lret
mov
ror
stc
into
pusha
es
jmp
jle
mov
lea
xchg
movsl
sbb
lcall
sub
sub
into
push
or
pop
scas
test
fwait
jns
cmpl
sbb
ret
push
and
cld
mov
ss
mov
pop
std
ss
jne
pop
inc
or
hlt
out
mov
mov
repz
jbe
mov
mov
cld
cmp
or
add
xchg
xor
je
add
inc
in
dec
rol
pop
xor
xlat
repz
dec
roll
test
xchg
lahf
fstpt
std
sub
mov
pop
mov
dec
adc
xchg
daa
xchg
test
xchg
sbbb
dec
dec
into
xchg
lret
iret
push
inc
outsl
and
scas
orl
stos
je
push
fdivrl
dec
pop
repnz
test
clc
xlat
add
jns
push
int
push
inc
and
add
shlb
leave
enter
adc
push
dec
sbb
scas
inc
hlt
lret
clc
mov
shr
imul
frndint
mov
adc
pusha
xchg
dec
out
hlt
ss
adcb
mov
jb
mov
nop
sub
repnz
inc
mov
test
cmpsb
stos
mov
lahf
test
scas
leave
xchg
je
cmp
fmulp
xchg
jg
jl
lds
stos
in
dec
xchg
popf
dec
add
loop
test
jecxz
movsl
xchg
push
or
lock
enter
rcll
lcall
mov
adc
and
xor
imul
das
sbb
push
cmp
testb
jno
xor
fstl
cmpl
fiaddl
dec
cltd
xchg
sbb
lret
loope
sub
rcl
js
mov
pop
jne
test
testl
xchg
cld
shrb
adc
das
outsb
jg
sbb
cs
mov
lods
cmpsb
inc
xchg
pop
mov
loopne
fdivrl
fwait
lret
out
sar
aad
mov
mov
fsts
popa
imulb
mov
xor
inc
loope
or
inc
mov
scas
dec
pop
outsl
push
mov
shll
xchg
mov
mov
hlt
cmp
mov
subl
inc
push
fnsave
xchg
scas
pop
sub
nop
js
repz
xchg
aas
ds
test
mov
enter
out
les
xchg
sub
pop
insb
adc
xor
or
loopne
xorl
jns
cmp
leave
nop
push
mov
aas
popf
imull
pop
jle
jnp
fdivrl
xchg
dec
int
sbb
xchg
por
mov
pop
xchg
pop
dec
add
fstpt
inc
notw
imull
lcall
jp
out
mov
sub
or
in
adc
fnstsw
sub
repnz
test
std
lret
sbb
xchg
addr16
sub
mov
mov
fldenv
ljmp
aam
int3
xchg
test
lcall
loopne
lock
bound
mov
shlb
or
stos
iret
std
out
scas
xor
dec
ds
in
nop
std
adc
mov
dec
outsb
jmp
sbb
lea
sub
js
ja
pop
bound
xlat
fbstp
fsubrl
in
lods
fildll
xchg
scas
sub
out
shll
je
adc
popa
mov
mov
jb
shl
lahf
jmp
lock
dec
add
cmp
cs
rclb
xor
out
lret
mov
lea
mov
addr16
pushf
and
loopne
gs
ror
push
stos
jl
outsb
and
fidivrl
or
cmp
sub
or
dec
scas
inc
and
test
ficoms
sbb
add
cli
inc
stos
loopne
psubb
sub
out
jnp
dec
out
xchg
iret
sti
out
repnz
frstor
pop
je
pop
mov
insl
sub
fwait
mov
mov
jle
stos
outsl
pop
ljmp
lea
adc
push
fdivrs
js
dec
push
loopne
jae
aas
sbb
xchg
fdecstp
fidivl
cmc
test
xlat
push
jl
sbb
rclb
add
mov
loop
in
mov
jmp
mov
pop
sub
push
sahf
gs
loope
hlt
test
or
dec
fisubrs
outsb
sti
dec
mov
repnz
icebp
ss
cmp
into
mov
popf
push
pop
xchg
cli
jns
pop
pop
lods
xor
sub
mov
push
rclb
mov
in
jb
frstor
adc
sbb
call
cmpsl
cmp
aas
je
arpl
mov
jmp
inc
cmpsl
out
fdivrl
cli
fsts
jns
aaa
stos
pushf
add
pop
cltd
cmp
lods
rcl
nop
ret
loope
push
mov
pop
in
or
pop
mulb
ja
pop
jge
and
push
aad
xchg
fwait
mov
lock
imul
push
bound
scas
loope
jns
xchg
xchg
daa
sub
and
sbb
aas
inc
aas
loopne
daa
cmp
vhsubpd
sbb
movsl
mov
dec
mov
jmp
jle
int3
xor
enter
lcall
add
dec
in
or
pop
out
add
pop
dec
cli
inc
lret
and
ret
sti
adc
fimull
fnstsw
pop
cld
adc
jle
jp
dec
sti
fcmovnbe
std
mov
add
cmp
inc
sub
stos
enter
test
add
jg
sub
dec
cli
fmulp
scas
jl
mov
jp
mov
or
movsl
or
push
mull
in
and
xor
push
aaa
cmc
jg
adc
xor
adc
adc
xor
mov
mov
jecxz
inc
fiaddl
pop
add
mov
in
jecxz
pusha
inc
push
insl
int
pop
sub
iret
dec
xchg
pushl
lcall
jbe
and
mov
subl
add
pop
aaa
inc
rorb
movsb
sub
in
jg
mulb
sbb
les
mov
push
popa
gs
cwtl
xchg
lcall
imul
xlat
xor
movsl
push
cmpb
leave
jae
jle
fwait
mov
lahf
push
inc
arpl
addl
xchg
test
dec
pop
or
jno
sbb
shll
popf
or
dec
mov
sbb
out
mov
or
xchg
sar
les
sbb
adc
sub
out
sar
inc
pop
inc
scas
ljmp
loopne
bound
outsb
and
scas
stos
or
jp
xor
lea
lret
add
mov
cli
fwait
fwait
mov
pop
xchg
xor
rcrb
jns
inc
mov
mov
dec
adc
add
push
aaa
in
push
insl
mov
insb
jle
enter
pop
into
and
push
push
iret
dec
scas
dec
jle
andb
jnp
cmp
jns
mov
int3
xchg
cs
cmp
mov
push
mov
js
mov
or
add
dec
add
mov
xchg
adc
aam
jecxz
inc
imul
inc
sub
sbb
push
repz
sub
xchg
mov
lret
pop
jnp
ds
aam
fdivl
and
and
jle
xchg
mov
and
and
dec
jns
hlt
sub
mov
sahf
sbb
mov
imul
enter
jp
inc
cmp
imul
in
int
outsb
dec
xor
adc
cli
xchg
xor
sbb
aad
lea
mov
xchg
push
push
jo
mov
ds
push
aaa
lahf
cmc
mov
or
adc
sbbb
rclb
cmp
stc
xchg
jb
or
mov
xor
mov
es
stos
subb
mov
mov
mov
into
mov
daa
jmp
fcoms
cmp
clc
cmp
data16
sbb
clc
rclb
cmp
sub
jg
inc
mov
popa
dec
fcomps
xchg
lods
add
std
cmp
movsb
xchg
cmp
add
repz
shl
xchg
and
mov
ss
adc
orb
xchg
repz
jecxz
xchg
notl
jb
enter
jns
int3
pop
rorl
jle
daa
and
xor
sub
lcall
or
fst
xchg
pop
pop
mov
mov
stos
or
mov
sarb
sti
mov
cmp
lds
insl
les
mov
call
jnp
test
dec
test
jmp
xchg
sub
or
xor
pop
dec
push
aad
pop
aam
outsl
movl
and
lds
insl
mov
fdivl
push
inc
fucomip
mov
loop
xlat
stc
jae
add
push
sbb
out
pop
push
push
addr16
cmp
int3
mov
push
mov
adc
lret
and
rol
adc
into
mov
jb
sbb
or
xchg
pop
and
int3
adc
dec
or
arpl
mov
pop
dec
mov
jge
xor
mov
cmp
cmp
dec
sub
jg
icebp
iret
scas
mov
sub
sbb
nop
xor
sub
test
es
std
jb
ret
gs
scas
cmpsl
aaa
js
cmp
pop
sbb
push
in
or
and
or
and
outsl
cmp
or
mov
loop
popf
nop
inc
arpl
scas
jo
mov
imul
ja
fistpll
sub
xchg
bound
divl
lods
sbb
push
push
lods
pop
mov
mov
iret
repz
and
mov
inc
mov
and
sub
xchg
ret
xor
or
ljmp
test
cmc
pop
adc
push
mov
imul
jb
pop
lods
adc
mov
push
pop
neg
addr16
xlat
fldenv
fcmovb
scas
imull
popf
mov
jns
pop
add
push
cwtl
mov
cmp
adc
inc
mov
insb
movsl
frndint
int
mov
popf
out
mov
xchg
movsl
sub
fs
aas
int
jecxz
adc
lcall
pop
test
push
mov
sbb
mov
cs
mov
and
jbe
jo
out
sub
jnp
push
aaa
pop
pop
sbb
out
push
mov
xchg
fs
clc
loop
pusha
int3
imul
insb
sbb
lds
fs
push
frstor
stos
and
jno
mov
dec
int
mov
std
mov
xchg
xchg
ds
mov
cmpsl
rcr
out
and
lods
add
cwtl
xor
jno
cli
in
imul
lcall
iret
add
pop
jae
out
incb
lret
push
pop
inc
push
ret
cmp
out
js
insb
outsb
out
pop
mov
jp
fcmovbe
lahf
cmp
loope
adc
xchg
in
outsl
push
les
fdivs
mov
clc
cmp
imul
sbb
push
out
or
sub
cmp
mov
mov
dec
push
push
sahf
sbb
sub
push
mov
leave
loopne
mov
jmp
push
int
mov
push
cmp
stos
ret
push
mov
lods
dec
mov
shrb
or
pop
das
pop
xor
add
fsubrs
xchg
outsl
dec
jns
and
fsubs
inc
popa
mov
xlat
dec
mov
xchg
inc
andl
sti
pop
jno
in
dec
sub
inc
subb
mov
test
xor
cmp
lock
bound
in
clc
outsb
xor
sarb
cmpsl
hlt
cmp
push
fcomps
mov
pusha
jl
lock
or
fwait
or
pop
pop
out
rol
stc
dec
mov
test
mov
xor
push
js
fwait
imul
xlat
dec
jl
insb
mov
mov
xchg
cmp
jge
fs
xchg
call
int3
adc
or
lret
test
dec
mov
inc
insb
fs
inc
mov
xor
pop
pop
cs
mov
mov
jle
mov
clc
int3
call
popf
lcall
inc
movsl
aas
or
jecxz
ret
push
mov
jle
adc
out
scas
pop
pop
pusha
gs
jle
push
push
in
sarl
cmpsb
loop
js
es
popa
xlat
add
fidivs
lds
sbb
and
aaa
shlb
jle
frstor
push
mov
mov
jb
pushf
sub
in
mov
sbb
ss
pop
repnz
stos
mov
inc
js
jae
jmp
sub
lcall
call
mov
into
cwtl
pushf
ss
lds
inc
cs
nop
mov
lods
pop
enter
mov
jge
mov
je
mov
ffreep
cmp
push
mov
push
mov
shl
out
popf
test
cmp
test
cmp
add
fs
push
cld
xchg
out
subl
sti
insl
lea
arpl
lahf
lahf
mov
into
add
pop
lods
add
cli
dec
push
popa
adc
jb
mov
aas
pushl
pop
or
aas
pop
call
sar
fsubrl
cmp
pop
je
rclb
jae
ds
repnz
idivl
push
sub
js
add
jcxz
pop
arpl
test
mov
jno
scas
fcompl
sub
mov
jmp
inc
adc
mov
mov
sub
lods
nop
add
pop
lods
xchg
or
push
jb
inc
das
icebp
adc
dec
inc
dec
dec
outsb
or
sub
xchg
lret
test
adc
testb
xchg
adc
data16
unpcklps
iret
add
xlat
push
mov
dec
or
inc
dec
mov
pushf
leave
adc
and
inc
test
sbb
xor
pop
adc
pop
or
inc
mov
or
into
mov
arpl
sti
and
sub
push
rcll
push
xor
mov
stos
xlat
adc
xchg
jbe
fiadds
xchg
test
sub
icebp
lahf
push
mov
aad
lock
repnz
lret
pusha
in
dec
bound
popf
inc
push
pop
jb
imul
repnz
dec
ss
aam
mov
pop
orl
jmp
ljmp
push
jl
inc
mov
xchg
inc
mov
mov
add
decl
lods
pusha
sub
jne
loopne
pusha
iret
adcl
psubq
mov
pop
sarl
inc
sbb
andl
jl
mov
lahf
pushf
mov
mov
aad
rcl
mov
jns
push
jbe
pop
mov
adc
in
jb
add
addr16
mov
and
adc
push
and
outsl
arpl
push
xor
insb
mov
fistl
fincstp
xor
aad
aaa
inc
lods
mov
and
clc
mov
inc
jmp
enter
and
mov
xchg
jge
mov
pop
or
outsb
add
fisubl
insb
mov
xor
ss
xchg
ja
cld
loop
imul
stos
insb
xor
mov
pop
sbb
cs
aas
add
push
les
fsub
xor
aas
shlb
sbb
adc
mov
fdivr
cmp
outsl
mov
mov
mov
das
or
cmp
andb
pushf
lock
mov
lret
or
ss
mov
mov
jo
enter
lock
lea
sub
or
ficoms
imul
and
xchg
icebp
fisubrl
scas
and
js
mov
out
dec
push
mov
dec
and
xchg
ret
arpl
dec
inc
inc
or
inc
data16
pop
out
das
adc
mull
mov
dec
mov
out
cmp
inc
mov
mulps
mov
lret
sub
in
test
movsl
xlat
cli
push
inc
std
popa
dec
cmp
adcl
xlat
xchg
shll
inc
mov
daa
shlb
push
test
cmp
cltd
dec
pop
xor
out
aaa
fnstsw
inc
lods
jmp
and
and
fldl2t
jg
lcall
mov
in
mov
testl
jge
pop
aam
add
adc
stc
mov
mov
data16
xchg
pop
out
mov
fdivl
leave
cli
or
or
add
rclb
mov
rcrb
out
jp
dec
mov
movsb
inc
pop
insl
pop
xchg
sub
lret
inc
out
cld
sbbb
add
sub
lcall
mov
xchg
fcoml
mov
add
imul
loope
inc
pop
dec
dec
jle
push
xor
icebp
aas
mov
mov
inc
ret
and
fdivrs
fwait
andps
sbb
inc
gs
cmp
sti
popf
xor
mov
pop
insl
ds
jnp
xchg
push
lds
pop
xchg
mov
mov
cmp
call
cmp
repnz
out
or
push
mulb
mov
inc
movsl
test
push
mov
aas
cmp
out
jno
push
push
adc
dec
push
lcall
pop
fwait
sub
pushf
lcall
rcl
push
adc
sbb
fsubs
jo
mov
cmpb
jbe
mov
inc
in
lcall
jle
push
mov
add
or
push
and
mov
inc
add
imul
push
mov
pop
movsl
sub
cmp
cmpsb
in
popf
hlt
int3
stc
inc
add
lods
test
out
mov
loope
push
xchg
in
push
adc
imul
cmpl
inc
sti
daa
sub
sbb
jo
frstor
jp
sub
xchg
insb
in
scas
mov
adc
and
xor
pop
and
mov
or
ds
cmp
data16
idiv
imul
outsb
je
pop
add
popf
imul
jb
add
add
push
jne
jg
inc
fstps
push
pop
cmp
stc
dec
and
mov
jg
push
inc
idiv
cld
outsb
mov
xor
es
jmp
or
cltd
push
loope
hlt
jns
mov
imul
fisttpll
mov
mov
and
jne
xor
cwtl
subl
sub
push
mov
mov
fildll
mov
pop
add
sub
fildl
xor
xor
xor
fiaddl
into
push
fldt
lods
pop
xor
roll
push
xchg
or
pop
xchg
lods
clc
cltd
lahf
loop
mov
adc
jb
lahf
xor
cwtl
dec
mov
movsb
xchg
cmc
testb
repnz
jae
inc
mov
mov
and
lret
mov
into
divb
inc
pop
lcall
push
mov
and
aam
xchg
out
mov
lret
xor
jno
mov
or
mov
push
cmp
cmpsl
mov
jo
movsb
rclb
ljmp
outsl
pop
int3
or
je
dec
lret
enter
xor
js
xor
jae
das
inc
push
jmp
es
je
icebp
fisttpll
push
cltd
sub
mov
incl
or
adc
pop
je
jns
cmp
andl
scas
js
fdivs
jns
mov
push
sbb
aam
add
and
adc
add
call
sti
mov
sbb
into
out
cwtl
lcall
jno
sar
hlt
je
in
or
movsb
or
inc
pop
dec
scas
sub
dec
pop
mov
pusha
gs
lret
add
aaa
add
sub
scas
cs
divl
pop
out
pop
mov
xor
dec
imul
insb
cmp
push
cmp
stos
dec
out
push
push
stos
int
push
push
lods
fcompl
push
inc
js
xchg
or
ja
decb
sbb
outsb
pop
mov
sbb
jo
add
mov
sub
roll
fcompl
dec
pop
adcb
shrl
punpcklwd
xchg
xor
sub
inc
mov
dec
lods
inc
pop
scas
mov
jne
stos
cmp
fldenv
clc
imul
xchg
test
lea
mov
adc
leave
sub
ficomps
pop
addr16
imul
popa
enter
push
lret
fstps
adc
ret
pop
enter
imul
inc
shr
push
popa
xor
fs
mov
inc
mov
xchg
in
xchg
addr16
scas
jb
sbb
mov
xchg
mov
pop
adc
out
cs
push
outsb
in
sub
in
inc
stc
lahf
outsl
pop
icebp
push
sbb
faddp
jne
mov
add
add
adc
or
test
xor
pop
adc
mov
inc
into
xchg
inc
cli
in
mov
bound
bound
stc
or
pop
push
imul
push
jo
sbbl
jb
shl
jecxz
mov
and
xor
cmp
loop
mov
pop
cmp
out
sub
pop
push
cmc
inc
out
xchg
in
dec
mov
or
into
mov
mov
scas
mov
jbe
iret
out
xor
jbe
cmp
or
movsb
les
dec
mov
xor
pop
xchg
loope
sti
dec
mov
push
and
xor
fsubrs
rclb
and
and
outsb
cmp
in
das
nop
push
pop
xchg
cmpsb
cmpsl
adc
xchg
push
push
inc
and
scas
cli
dec
pop
lock
push
mov
clc
add
js
clc
dec
pop
popa
je
adc
xchg
das
jl
or
pop
or
dec
scas
dec
mov
push
inc
sbb
daa
cmp
out
movsl
cld
stc
push
pop
js
popl
xchg
inc
xchg
mov
mov
pop
ljmp
add
ljmp
mov
je
jmp
and
insl
fadds
dec
jnp
rcl
push
ret
in
jl
inc
dec
mov
pusha
push
jnp
mov
jnp
stc
jl
jle
lahf
filds
fnstenv
or
pop
ss
fnstcw
scas
dec
jg
sub
test
mov
out
adc
sub
or
fs
cli
xchg
jns
clc
add
stc
out
je
cmp
mov
xor
daa
outsl
clc
sub
lret
push
out
jo
push
jb
ret
sub
and
or
xchg
adc
jge
pop
dec
xchg
add
xlat
pop
inc
testb
jl
push
mov
leave
add
inc
jecxz
cwtl
or
sbb
je
daa
mov
out
or
push
or
fcoml
movsl
sbbl
repnz
and
stc
xor
loope
add
push
ss
repz
outsl
cli
les
inc
push
clc
xchg
push
fwait
das
fldcw
mov
add
sbb
loopne
rolb
dec
movsl
pop
pop
mov
dec
je
arpl
dec
add
inc
hlt
int
jmp
xor
lret
and
push
push
adc
aam
xor
add
xchg
icebp
sbb
pop
jle
jbe
fcoml
xor
xchg
mov
mov
hlt
lods
lcall
je
repnz
inc
std
stc
and
pop
les
dec
push
adc
xor
sbb
and
enter
mov
jo
pop
adc
jnp
pop
adc
inc
jp
xchg
inc
dec
or
mov
sbb
adc
add
or
xchg
or
loopne
mov
cmp
cs
mov
pop
aas
call
lods
movsb
mov
into
int
popf
push
mov
sbb
dec
arpl
mov
and
hlt
jno
xor
mov
add
call
call
push
shl
andl
or
pop
mov
in
cmc
nop
xchg
jle
ja
and
les
adc
scas
fdivl
adc
or
dec
leave
out
mov
test
outsb
and
sbb
mov
jle
pop
jle
in
sub
adc
xchg
stc
dec
xchg
je
xor
inc
sbb
loop
lret
dec
mov
xchg
xor
in
and
cli
pop
pusha
int
loopne
test
lret
out
nop
push
mov
scas
sub
inc
sub
shlb
mov
sub
ds
xchg
cwtl
or
popa
jg
dec
iret
cltd
rolb
inc
adc
pop
and
movsl
sub
or
test
push
fsubs
xor
push
lcall
lods
ret
iret
mov
or
jo
sbb
popa
outsb
inc
cli
gs
inc
sub
xchg
out
pop
cmp
push
out
dec
dec
int
mov
jmp
xor
cmp
mov
flds
push
insb
int3
jae
in
cwtl
jo
aad
pop
push
xor
pop
dec
dec
fnstsw
jo
or
cli
xor
in
jp
adc
fmuls
test
xchg
sbbl
push
push
cmpsl
push
cmpsb
test
cmp
cmpsl
negl
je
adc
out
mov
mov
lahf
adc
push
mov
pop
lea
ret
push
cmpsl
cmpsb
cltd
fidivs
jmp
push
xor
xchg
pop
clc
lret
ds
out
xlat
pop
outsl
adc
cmp
fwait
enter
inc
and
in
push
lret
js
repz
ds
xor
cli
cmc
sbb
xlat
aas
dec
inc
in
lods
repnz
daa
rorb
inc
outsl
movsb
fdivrs
test
sbb
mov
leave
xchg
inc
mov
pop
jae
je
sbb
xor
push
les
sarb
pop
into
jg
ja
cmp
dec
test
adcb
add
mov
mov
fcomps
push
cmp
insb
adc
push
jns
in
arpl
lret
fdivs
movsl
jmp
jmp
xor
roll
adcb
push
jge
fldl
or
data16
or
pop
push
fsub
push
movl
sti
popa
mov
sub
jnp
mov
inc
mov
sub
mov
fidivrs
cmpb
sub
push
dec
cmp
and
arpl
imul
jge
into
or
sbb
rclb
and
stos
orl
jmp
pop
mov
gs
data16
pop
ret
cmp
sarl
mov
addl
pop
and
adc
pop
push
mov
push
ret
std
push
mov
xor
inc
and
fistpll
lret
icebp
enter
fisubrs
mov
add
in
add
push
mov
push
fnstenv
fs
aaa
jbe
int
pop
mov
or
add
stc
loope
mov
mov
addr16
pop
fimuls
shll
out
sub
stos
pop
cmpsl
mov
test
dec
xchg
popf
into
inc
rcll
jo
outsl
xchg
mov
movl
mov
lds
pop
scas
mov
icebp
pop
stos
lahf
lods
push
push
out
mov
mov
call
or
nop
lcall
jnp
hlt
xor
jo
sub
pushf
test
inc
leave
mov
xchg
les
dec
dec
imul
push
sti
push
ret
jmp
cmp
xchg
shll
iret
inc
dec
flds
fs
movsl
push
xchg
xchg
inc
xchg
adc
and
mov
mov
out
sub
test
lret
data16
rcrl
pop
sti
lret
out
int3
adc
stc
jecxz
push
daa
sub
mov
out
inc
clc
sbb
cmp
and
inc
shlb
cmp
cmp
jge
movsl
pop
mov
stos
lcall
and
ffreep
in
add
mov
adc
mov
xchg
test
lcall
mov
mov
dec
mov
call
cld
push
cmp
xchg
pushf
mov
pop
pop
adc
sbb
xor
xchg
push
cwtl
sbb
mov
insb
add
aaa
push
rcl
ret
int3
cmp
mov
xchg
or
aad
insb
stos
std
inc
es
imull
pop
adc
es
pop
pushf
repnz
int
test
xchg
jle
testb
xchg
test
fadd
call
test
enter
dec
xor
lret
cmp
fimull
in
out
lahf
call
jle
or
mov
cs
jge
shrl
clc
dec
fxch
xor
lock
aam
sbb
pop
sahf
cli
inc
stc
addr16
dec
out
mov
mov
inc
inc
fs
rclb
inc
cmp
or
ficompl
dec
or
ljmp
mov
js
insb
imul
or
in
cmp
test
aam
addl
cmp
imul
sbb
push
push
mov
pop
xchg
test
subl
cmp
jne
jns
xor
outsb
inc
push
xchg
push
sub
pop
sub
mov
ret
aaa
insb
adc
sbb
xor
das
sbb
or
mov
pop
or
adc
mov
sbb
in
leave
dec
xchg
mov
in
rorb
cmpsb
mov
lods
dec
loope
rcrb
inc
mov
leave
add
insb
rorb
fdivrl
aaa
push
jne
daa
and
dec
sbbl
add
adc
push
repnz
xchg
dec
test
or
mov
push
push
adc
pop
addr16
and
cmp
dec
cmp
xor
jmp
gs
adc
and
jnp
mov
jecxz
sub
lds
pop
jns
sbb
scas
in
jecxz
sbb
sahf
xchg
gs
stos
fnsave
call
scas
pop
in
or
mov
inc
out
mov
dec
sub
pop
and
ret
cmpl
ret
mov
pop
mov
jae
lods
cmp
cltd
lock
sub
imul
fildll
jge
xlat
adc
ficoms
sub
mov
jmp
sbb
scas
dec
lahf
sbb
jne
lds
jo
cmp
pop
mov
addl
and
lock
fbstp
fisttps
xor
lods
ljmp
inc
adc
push
sub
xchg
pop
stos
lods
pop
rcpps
xor
test
mov
sbb
addl
mov
in
out
testl
test
lock
jecxz
shll
mov
cmp
movaps
aaa
dec
rcll
mov
pop
lds
jecxz
lea
push
stos
xor
cmp
sbb
stos
jmp
jg
cwtl
inc
dec
adc
jge
lods
sbbb
lahf
mov
lds
fisubrl
out
pop
jb
in
lret
roll
sbb
pop
mov
loope
scas
dec
les
mov
fistpll
iret
shll
push
cmp
int
ja
jmp
pop
xchg
loopne
push
jnp
ds
xchg
fsubl
jp
inc
xor
pop
jl
fsub
mov
gs
imul
imul
dec
sti
ds
loopne
mov
adc
jg
mov
testb
lock
out
or
dec
cmp
sub
jno
sbb
les
xchg
orb
inc
stos
dec
cmp
xchg
inc
push
icebp
ss
pop
shlb
sbb
inc
sbb
jne
mov
loope
inc
icebp
sub
and
jp
inc
scas
pop
ds
push
cwtl
xor
popa
rol
pop
mov
xchg
dec
and
or
adc
movsl
ret
lcall
movsl
loop
in
cs
gs
dec
push
mov
dec
into
fstl
lret
adc
cmp
fwait
push
fnstsw
mov
aaa
jo
xor
hlt
push
adc
jno
xor
cmp
jge
fdivr
push
mov
ficompl
stc
mov
fadd
adc
hlt
jl
lock
mov
dec
aad
jge
int3
fdivp
add
mov
lds
pop
es
and
mov
xchg
lock
leave
insb
mov
stc
hlt
jo
pushf
insb
dec
add
xor
test
mov
and
mov
mov
ljmp
es
in
in
mov
fstpl
and
mov
jmp
jg
mov
mov
mov
cs
xchg
xor
scas
xchg
cmp
push
push
jge
ret
mov
and
mov
shrl
cwtl
scas
std
js
sub
mov
sbb
dec
into
mov
add
mov
dec
into
xchg
cmp
ja
sbb
out
js
xchg
imul
xchg
fstpl
mov
ret
mov
pop
xor
mov
mov
dec
dec
sub
xchg
in
cs
lds
sbb
addr16
ret
push
or
sub
mov
cmp
and
std
xchg
sub
dec
arpl
xchg
sbb
scas
push
push
mov
out
pop
addr16
mov
mov
das
cmp
pop
rorb
test
or
inc
xor
sbb
fisubl
in
orl
iret
jbe
xchg
shlb
pusha
loopne
ljmp
jo
in
mov
sub
loopne
sarl
bswap
dec
cmc
dec
sbb
push
push
scas
das
sbb
testb
aas
out
xchg
in
rcl
push
stos
fldenv
mov
jmp
mov
fidivrs
data16
shl
scas
out
add
lods
pop
cli
sbb
cltd
mov
pop
imul
jmp
mov
sbb
fdivrs
rol
inc
mov
dec
jg
and
jl
push
rcrl
imul
sub
es
jb
cmpsb
subl
lods
push
add
add
mov
popa
mov
mov
sbbb
incb
out
std
outsb
loop
adc
out
fadds
shlb
stos
lret
repz
cs
mov
test
ja
mov
mov
movsl
fnstenv
vpcmpgtd
pop
hlt
scas
pop
sbb
mov
inc
addr16
dec
push
js
cmc
movsb
or
jl
icebp
fwait
adc
insl
je
adc
cmpsl
cs
sbb
sub
mov
mov
ret
cmp
cmp
adc
dec
xor
adc
cmp
add
ljmp
sarb
cld
nop
jle
mov
pop
faddp
into
icebp
push
mov
pop
xlat
and
ds
iret
cmp
jb
mov
sti
and
mov
nop
add
fs
bound
aad
mov
popa
imul
push
pop
xchg
ret
fstpl
add
movl
cwtl
pop
xchg
test
pop
pop
cmpsb
sahf
ficompl
and
and
hlt
leave
pop
lds
sbb
inc
push
lahf
into
mov
sub
das
inc
hlt
or
adc
outsl
mov
pusha
mov
sub
outsb
jecxz
push
push
xchg
mov
add
or
mov
sub
aaa
scas
mov
dec
cmp
pushf
repz
fs
clc
pop
add
xchg
sarb
testb
jmp
push
cmp
adc
cmc
mov
add
lock
daa
and
in
add
int
mov
lret
jge
xchg
and
push
cmp
sbb
or
out
mov
mov
test
loop
pop
xor
mov
icebp
add
cli
mov
in
in
cwtl
out
pop
imul
push
pop
iret
sub
fiadds
cli
into
sbb
jbe
mov
es
xchg
insl
add
test
neg
lcall
push
faddl
imul
daa
bound
lcall
in
test
and
mov
cmp
aas
jbe
test
adc
xchg
cmp
loop
fcompl
stos
push
outsb
xorl
imul
mov
cli
and
rclb
popf
xchg
cmpsb
jne
jmp
add
adc
adc
add
cmpsb
or
addl
test
scas
test
mov
mov
dec
mov
mov
push
cld
sbb
mov
dec
loopne
loope
mov
xlat
xchg
jbe
addr16
mov
sub
adc
fwait
clc
push
adc
fisttpll
adc
pop
sti
sti
pop
mov
or
aaa
cmp
cmp
pop
shlb
shl
xor
mov
sbb
arpl
hlt
adc
pushf
pop
bound
test
ror
sbb
je
xchg
add
xchg
cmpsl
mov
out
jmp
inc
out
jae
jge
and
adcl
testb
fidivl
pop
pop
cmp
test
data16
iret
fldt
mov
dec
jmp
jno
push
rcrb
mov
cmc
imul
cvttps2pi
inc
jge
mov
fcomip
loope
dec
sub
arpl
mov
jo
sbb
stc
push
jo
bound
imul
dec
int
mov
cltd
inc
loope
stc
dec
or
push
xor
sbb
adc
xorb
aam
lods
pop
int3
add
cmp
das
insl
pop
and
sbb
out
xor
and
add
cmp
into
add
fnstsw
mov
push
in
inc
push
sub
inc
jmp
pop
dec
ffreep
pop
fs
lea
push
jecxz
addr16
cmp
jae
lcall
inc
mov
inc
out
subb
hlt
rorb
out
or
daa
addr16
xchg
inc
inc
rorb
add
or
lods
mov
adcb
push
lods
ret
sbb
notl
xchg
pop
incl
stos
shl
inc
fldcw
or
jle
addl
and
shlb
sub
popa
iret
jmp
mov
mov
cs
mov
call
pop
push
cmp
mov
aad
pop
dec
xor
lret
mov
cmp
je
pop
frstpm(287
pusha
dec
test
ret
sbb
jmp
jecxz
push
inc
xchg
icebp
sub
mov
iret
addr16
cltd
imulb
cltd
add
inc
dec
mov
gs
mov
adc
idivb
sti
hlt
inc
stc
jb
and
cwtl
inc
add
les
mov
add
mov
or
ret
movsl
iret
jge
push
dec
ja
bound
lretw
rclb
xor
jmp
add
les
bound
hlt
mov
sti
test
mov
int
push
jns
xor
dec
dec
stc
sub
int3
inc
mov
into
pop
push
loope
gs
or
test
aad
popf
inc
push
outsl
mov
mov
push
repz
jnp
aad
test
and
shl
rol
inc
sbbl
mov
nop
jmp
nop
aad
cmpsb
imul
sub
or
jmp
in
lret
jb
dec
mov
shlb
and
jb
orl
test
insl
iret
xor
out
jne
push
jbe
mov
jg
xchg
cmpsb
pop
inc
orl
filds
shlb
stos
jge
xchg
dec
add
out
cmc
xchg
mov
xor
dec
and
sahf
out
mov
sbb
jmp
xor
pop
pop
loop
add
fsts
in
cmp
sub
clc
pop
push
push
iret
outsb
mov
push
cli
inc
push
mov
in
cli
stos
bound
cmp
cli
jmp
mov
jnp
xor
xchg
movsl
rcrb
mov
iret
test
aam
adc
gs
pop
ret
and
stc
push
jp
pop
notb
jno
inc
aam
iret
loop
jmp
cs
mov
fisttps
pushf
jge
inc
dec
jle
mov
adc
fnsave
aas
or
and
cs
lcall
mov
cmp
repnz
rcrl
mov
ds
mov
test
test
loope
pop
mov
mov
out
icebp
sbbb
inc
loop
leave
mov
fadds
xor
test
jno
mov
iret
popf
xor
test
orl
mov
hlt
dec
inc
sbb
je
shrb
lahf
cmpsl
or
adc
loope
jb
cmp
mov
out
and
cmc
jle
mov
addr16
fidivs
subl
sbb
push
or
add
test
push
roll
add
lret
repnz
inc
push
and
xchg
and
xor
pop
mov
cmp
mov
imul
sti
or
enter
adc
pop
or
push
sti
xor
fnsave
cltd
mov
fisubrl
sbb
xchg
pop
jbe
out
mov
stos
rol
pop
outsl
xlat
rcll
leave
sub
pop
push
fld
adc
push
push
pushf
lods
mov
mov
lds
xchg
add
dec
fisttps
mov
in
jns
ss
pop
gs
xchg
push
sbb
mov
mov
pusha
icebp
jge
mov
popa
jb
add
mov
ror
stos
and
mov
in
lds
adc
jae
imul
les
lods
or
movsb
inc
cmp
rcll
push
popa
mov
adc
enter
bnd
dec
out
jge
leave
xchg
insl
or
push
aam
scas
out
out
fcoms
stos
jmp
sti
or
and
std
in
pusha
jp
pop
and
lahf
gs
ficoms
out
mov
insl
pop
dec
mov
mov
nop
mov
adc
into
addr16
sub
jns
mov
sahf
and
incb
test
push
jge
rorb
dec
mov
push
daa
inc
push
adc
jo
test
jno
dec
test
push
inc
test
mov
sub
mov
stos
xor
repz
idivl
mov
pushf
mov
dec
xor
pop
fsubl
jnp
iret
clc
imul
test
std
ret
xchg
adc
aaa
test
adc
enter
rcll
inc
mov
jg
jns
xchg
adcb
loopne
hlt
in
je
pop
mov
test
dec
call
or
iret
inc
jecxz
pop
xor
leave
gs
mov
sbb
push
mov
and
mov
inc
mov
pop
test
subl
out
or
adc
sbb
dec
or
test
ja
nop
adc
sbb
lcall
sub
jg
mov
adc
int3
lods
or
xchg
jp
adc
push
sub
xchg
lock
test
pop
popf
inc
mov
jb
pop
fldl
insl
bnd
push
or
add
xchg
lret
push
xchg
iret
mov
xchg
cmp
xchg
in
dec
jl
in
outsl
sbb
std
add
xchg
push
adc
cltd
rcrl
icebp
pop
inc
add
and
aaa
or
int
jo
xchg
jb
les
jmp
sub
daa
lods
test
shll
iret
sub
jo
jl
dec
int
mov
push
inc
inc
or
dec
jae
imul
push
subl
pop
mov
lock
mov
jle
mov
std
xchg
mov
mov
dec
push
dec
pop
add
mov
divl
xlat
lods
ret
jno
in
bound
sbb
xchg
xor
dec
out
and
aam
cmpsb
push
jp
sub
xor
cmc
sbb
mov
orl
push
xchg
frstor
fmull
dec
dec
push
cld
mov
inc
lret
or
fisubrl
cmpsb
leave
pop
sub
xor
aad
mov
rorl
sub
lods
cld
jecxz
enter
adc
cmp
shl
icebp
and
mov
ret
outsb
clc
sbb
jg
ljmp
adc
sbb
bound
push
cmc
xchg
jbe
inc
xchg
or
dec
inc
imul
sbb
andl
or
lock
imul
mov
cwtl
mov
pop
aas
ljmp
js
pop
les
and
fnstsw
sahf
scas
test
cmp
jle
out
sbb
dec
lret
xchg
scas
rcrb
jp
addr16
lods
mov
mov
ds
xchg
xchg
rclb
mov
in
jne
hlt
mov
sub
mov
and
sub
fldl
pushw
jo
jne
jb
xchg
adc
and
push
adc
cli
fdivrl
leave
pop
pop
mov
lret
pop
addr16
cs
add
cli
in
decb
pop
jne
mov
je
imul
adc
aad
int3
lret
cmp
and
mov
insb
std
arpl
mov
scas
jmp
xchg
lea
in
ror
add
add
lea
fwait
data16
insl
movsb
lock
movsl
pop
sbb
mov
jae
lcall
pop
pop
lds
int3
arpl
gs
stc
or
pop
stc
test
push
sub
mov
js
arpl
mov
mov
jo
test
or
sbb
ss
lahf
int
lock
sbb
les
adc
fildll
shll
repz
aam
rcll
jo
adc
push
inc
daa
decb
adc
out
jmp
roll
hlt
xchg
dec
imul
loop
fwait
sti
into
push
sbb
mov
fnstsw
lods
push
jo
lea
lock
jb
rol
call
xchg
movsb
or
inc
adc
and
xchg
cmp
insl
outsb
movsb
repz
test
pop
outsl
jae
cmc
dec
test
sbb
lods
fdivl
add
fwait
sbbb
fmuls
jmp
aaa
lods
popa
add
inc
xchg
repz
ds
mov
and
mov
mov
sbb
sub
dec
cli
in
lret
add
shll
and
jg
ds
sub
mov
sub
iret
adc
mov
pusha
cmp
insb
sub
ficoml
mov
xlat
mov
push
dec
sbb
sbb
add
ret
or
and
add
xchg
sub
xchg
fiadds
dec
stc
pop
sub
jl
mov
sbb
fcompl
pop
dec
xchg
xor
jecxz
and
fcoml
xchg
sub
dec
getsec
push
into
fstps
add
int
cli
mov
popa
negb
aad
jns
cmp
pop
add
sub
negb
xorb
lcall
sbb
sbb
popa
jno
fcompl
stos
cmp
mov
fsubs
push
inc
push
add
add
mov
jae
dec
inc
ret
and
mov
xlat
aam
pusha
cmp
lea
adc
mov
xchg
fsubrs
and
cmp
sbb
push
push
iret
call
sbb
mov
pop
and
imul
loop
push
xor
pop
dec
data16
mov
in
fwait
dec
ja
hlt
add
fcoml
and
and
push
jnp
mov
scas
sahf
sahf
in
in
push
outsb
dec
imul
fisubs
cmp
mov
and
cmp
xor
and
cmpsl
addb
mov
adc
xchg
mov
push
adc
aas
call
pop
sbb
sub
mov
stc
pop
fidivl
daa
push
cmp
enter
mov
push
push
test
jg
inc
push
lods
pop
shrl
mov
out
les
out
leave
dec
xor
mov
cli
loop
xchg
xor
fwait
pop
xchg
test
stos
es
and
repnz
js
call
movsl
sti
add
or
jle
lea
mov
push
cmp
pop
dec
mov
mulb
push
std
xor
jnp
pop
adc
fidivl
les
pushf
sub
outsb
pop
jb
push
add
scas
push
sbb
mov
enter
xorb
std
adc
and
cmp
mov
and
or
enter
ror
fdivs
gs
movl
in
sub
pop
cmp
adc
sbb
nop
enter
mov
fsubrs
xchg
stc
and
dec
rclb
inc
arpl
lds
cmp
enter
xchg
sub
or
xorb
cmp
adc
xor
sub
cltd
hlt
adc
mov
repz
cmp
outsb
cmp
rol
cltd
sub
jo
fucomip
repz
xchg
xchg
outsl
and
push
push
pop
ffreep
lds
pop
cwtl
sub
fadds
movsl
out
dec
or
mov
repnz
jecxz
sbb
test
fadd
mov
dec
cs
mov
popf
mov
ret
push
bound
out
insl
leave
negb
dec
stos
adc
data16
hlt
icebp
xchg
stc
sub
clc
mov
cmpsl
xchg
ss
lret
icebp
pop
or
cli
test
sub
aad
jg
xchg
mov
cmp
dec
test
jb
andb
pop
roll
add
sub
xor
icebp
or
insb
or
in
adc
cld
jp
in
push
jnp
fmuls
add
or
add
jb
push
daa
and
lea
xlat
aas
je
or
je
stc
cmp
lock
jp
out
lret
jmp
rclb
ds
inc
cmp
ds
mov
in
cs
push
jecxz
or
fcoml
jmp
dec
and
loop
je
sbb
sbb
xchg
sbb
fnstenv
lahf
xchg
loop
sub
cmp
jmp
adc
outsb
mov
shll
dec
and
jmp
and
sarl
movsl
mov
jne
push
les
push
pop
inc
jecxz
aas
out
subl
mov
sbb
enter
inc
push
jo
jo
adc
cltd
or
sub
mov
leave
pusha
jp
sub
push
cld
mov
push
xor
push
adc
push
test
ret
std
cmp
push
mov
out
bswap
jp
add
rclb
int
out
std
or
xor
arpl
mov
sbb
test
addb
pop
imul
sub
daa
jle
and
inc
jb
jmp
adc
ss
add
mov
pop
sub
sarb
fimull
loopne
out
add
jge
mov
add
cmc
es
xor
mov
pop
or
jae
jno
sbb
stos
push
std
ret
aam
out
lds
sar
dec
mov
xchg
mov
sbb
pop
aaa
mov
xchg
popf
and
jbe
pop
es
push
lcall
lods
inc
pop
imul
sbb
lea
sarl
daa
popa
in
mov
mov
or
xchg
insb
adc
mov
sbb
nop
into
mov
inc
cmpsl
cmc
mov
xchg
mov
shrb
adc
lock
push
cwtl
test
lret
ror
data16
inc
lods
add
sbb
mov
sub
aas
pop
movsl
fadds
inc
mov
pop
out
mov
xchg
lods
adc
fisubs
lahf
sub
dec
loop
jg
xlat
ljmp
hlt
sub
mov
push
adc
aad
mov
dec
push
ret
cld
add
test
add
inc
in
inc
mov
imul
pop
adc
mov
bound
pop
outsl
mov
js
dec
in
mov
insb
jge
js
xor
dec
jecxz
cwtl
and
data16
dec
movsb
leave
and
out
enter
rolb
cmp
push
xchg
shrb
aas
pop
rcrb
ds
cs
mov
ret
shrb
pusha
mov
mov
jae
out
add
jge
xchg
imul
pop
jge
or
sub
popa
das
and
iret
call
cltd
jnp
ss
popa
repz
js
adc
imul
inc
jmp
int
clc
mov
mov
pusha
dec
clc
mov
sub
outsl
jle
dec
out
imul
in
mov
sbb
add
cmpb
sub
cmp
jecxz
xchg
stc
int
inc
test
sbb
jmp
and
out
push
inc
test
mov
xchg
movsl
ljmp
fstpt
and
dec
inc
xchg
lods
and
in
push
xchg
jmp
mov
lret
and
pusha
in
or
cld
mov
pop
fwait
mov
or
ljmp
inc
in
push
mov
jne
ja
dec
inc
or
push
rclb
aam
lock
cmp
data16
push
fcompl
fsubs
jp
fcmovne
mov
call
repnz
cmc
mov
cmp
ss
mov
pop
arpl
mov
xchg
shl
mov
cld
fisubs
cmpsl
and
cmp
sub
sub
xchg
push
shlb
mov
lahf
mov
jno
mov
loop
int3
lods
pop
jbe
mov
sbb
in
or
or
lods
fidivl
je
push
popa
dec
pop
stos
aaa
inc
inc
adc
sti
dec
sub
cmpsb
jo
aad
sub
ss
cmp
push
xchg
ds
jp
inc
cli
cmp
or
cmpsb
or
mov
pop
pushl
xchg
loopne
aaa
sub
cmp
or
xchg
pop
xor
sti
ret
and
jns
push
jle
imul
pushf
inc
sub
mov
popa
pushf
sbb
inc
fcmovu
movsb
lods
adc
jp
out
add
jmp
pop
pop
push
push
clc
jmp
cmp
push
add
mov
mov
mov
pop
and
cltd
icebp
mov
cmc
icebp
jecxz
sbb
lcall
js
and
adc
insb
inc
sbb
cli
ljmp
and
sbb
dec
cmpsb
mov
xor
loop
dec
or
loopne
inc
icebp
or
xchg
inc
aam
fs
add
add
adc
jns
cmp
fisttpl
nop
xor
movsl
adc
rcl
add
mov
cli
add
or
gs
call
out
jbe
dec
push
cmp
jl
push
mov
scas
mov
or
scas
xlat
loope
push
repz
test
jle
sub
xor
xlat
pop
lock
repnz
sbb
push
sti
lods
cli
test
push
mov
lea
lcall
adc
jge
rcll
ljmp
out
lret
cmpsl
jae
or
outsl
pop
lods
jmp
jno
cvtps2pi
repz
sbb
push
push
stos
pop
jns
adc
dec
lret
mov
sub
lds
je
mov
jno
mov
fbstp
mov
push
adc
stc
lds
jne
mov
lock
fsubl
clc
mov
ror
inc
mov
sbb
ljmp
or
or
add
dec
cmp
push
mov
scas
mov
jnp
mov
lods
xchg
neg
add
sub
lods
addr16
cltd
dec
flds
or
or
ljmp
sbb
outsl
aam
mov
sbb
test
push
sub
add
push
inc
int
cld
and
stc
lods
jae
test
adc
cmc
jo
sbb
test
rcrb
dec
push
fdiv
and
jp
sub
xchg
enter
push
inc
test
inc
sbb
cli
sub
xchg
lods
adc
add
faddl
repnz
mov
mov
add
mov
data16
pop
loope
aam
mov
xor
lods
jle
rorl
lods
sbb
sub
cli
mov
jl
rol
sub
ret
loope
sbb
push
sub
xchg
mov
push
cmp
popf
cli
xor
mov
sub
xchg
xor
jnp
mov
movsl
mov
mov
dec
mov
jns
sbb
out
fstpl
fsubp
pushf
sbb
pop
xor
and
add
mov
cmp
jno
xlat
dec
cltd
or
bound
stos
or
push
jle
jmp
movsb
fcoms
daa
inc
mov
xchg
adc
mov
stc
dec
sbb
jmp
scas
mov
shl
test
es
mov
adc
daa
xchg
sbb
dec
cld
idivb
lea
out
imul
aad
jmp
mov
add
test
cli
lret
lahf
pop
adc
xchg
and
sarl
pop
roll
scas
imul
dec
shr
enter
cmp
repz
popf
jae
fildl
mov
and
das
test
out
daa
repz
mov
movsl
xorb
enter
in
push
add
and
test
test
inc
les
loop
jmp
mov
jbe
leave
inc
cli
and
adc
push
fsts
es
lahf
xor
xorb
stos
xor
loop
xor
call
clc
nop
adc
sti
es
loopne
sahf
mov
push
nop
fstps
stos
xor
repnz
and
lret
rcrl
pop
dec
fbld
xor
pushf
lret
in
push
jl
mov
and
dec
fldl
or
scas
cmp
dec
bound
push
and
jno
xor
sub
jg
mov
jecxz
jns
xor
int
jns
mov
ficoml
lock
aaa
sub
and
dec
stc
rcrl
lds
add
mov
inc
mov
outsb
sbb
fwait
cld
inc
mov
xchg
ja
fdivl
sub
incl
inc
ret
mov
stos
sbb
xor
ljmp
out
imul
iret
cmpsb
mov
pop
sti
cwtl
adc
cmpsb
call
cwtl
movsb
jo
in
pop
cli
jo
aas
pop
cli
push
je
cmp
jge
sbb
xor
pop
loope
cmp
and
jp
les
pop
fucomip
out
ret
or
jbe
stc
mov
pop
ficoms
mov
loopne
mov
in
sbbl
rolb
inc
iret
xchg
inc
sub
adc
xchg
or
mov
stc
int
add
repz
cli
sub
xchg
in
jl
push
sub
adc
and
inc
adc
lcall
ret
mov
pop
hlt
lock
test
mov
test
rcrl
popa
sbb
mov
into
cmp
or
xchg
sti
pop
aad
insl
and
aam
push
or
xor
loop
push
addr16
outsl
fisubrl
xchg
insb
dec
lods
leave
adc
sub
cmp
mov
mov
cmp
xchg
jbe
jno
and
sub
cmpxchg
aaa
push
fisttps
fwait
push
fwait
xchg
rolb
mov
push
aas
inc
js
lods
pop
and
xchg
cmp
clc
mov
mov
and
cmp
mov
pop
sarl
mov
push
adc
jb
inc
mov
sti
xor
or
jp
push
add
sar
clc
cmp
lcall
loopne
cmp
sub
hlt
aam
popf
xor
das
out
fucomp
adc
mov
stc
out
fwait
add
mov
pusha
andb
lods
or
xchg
lods
imul
sbb
lock
jmp
lea
lods
mov
sbb
xchg
mov
into
mov
les
xchg
mov
inc
pop
in
js
jo
mov
in
insl
xor
mov
push
or
mov
xchg
lcall
dec
push
sub
test
les
loopne
cwtl
dec
rcrb
cmp
fistps
or
pop
test
inc
lods
sub
pop
mov
repz
pop
fldt
nop
cmp
out
jl
fcmovu
andb
pop
cmp
test
or
dec
mov
pop
loop
add
cli
idivb
mov
pop
insl
inc
nop
mov
cmp
sbb
test
and
sbb
rcrb
xor
nop
pop
cs
dec
sbbb
aaa
adc
pop
outsl
jnp
int3
lcall
cmp
gs
sti
dec
xchg
and
subb
pop
lods
out
push
mov
push
ss
shl
push
dec
jmp
push
pop
std
jmp
arpl
cmp
sbb
or
jne
bound
loope
xchg
sahf
xchg
das
cmp
pop
into
sbb
mov
jl
aam
cmpsl
add
aam
jne
loopne
jmp
in
xchg
adc
mov
pop
std
ds
push
addr16
lock
sar
jg
out
hlt
jb
pop
pop
das
push
sub
shll
out
xchg
test
in
sbb
insb
add
jne
aam
test
stos
jmp
pop
insl
dec
mov
test
xchg
mov
decb
dec
into
insl
js
clc
ds
or
or
das
mov
mov
cmpsl
jg
aad
enter
adc
inc
pop
sbb
orl
nop
pushf
flds
pop
cmp
mov
add
fdivrs
cs
mov
jge
pop
aaa
stos
adc
pop
sbb
pop
aad
stos
mov
scas
jle
clc
xor
pop
out
xchg
clc
dec
lods
idivl
les
or
xchg
mov
mov
bound
shrb
xchg
mov
mov
mov
ret
in
loope
adc
mov
int3
dec
jge
inc
fimull
inc
jns
ja
addl
popa
jg
xchg
jl
popa
push
xchg
jns
and
std
aaa
xchg
bnd
sbb
je
sub
mov
pop
sbb
jo
fsubrl
cld
pushf
test
and
push
jae
dec
addl
mov
xor
scas
mov
insb
inc
call
xor
xchg
pop
imul
mov
xchg
mov
outsl
fwait
xorl
fwait
xor
and
mov
inc
cmp
ret
xor
or
or
cwtl
lods
nop
in
sub
ror
or
adc
addr16
loope
jae
addr16
pop
ss
fidivl
and
shlb
nop
mov
mov
and
shll
mov
pop
inc
aas
fidivrs
sti
mov
insl
je
out
jns
es
cmpsb
dec
pop
imul
and
aaa
cmp
cld
inc
add
popf
mov
push
dec
inc
push
push
or
mov
dec
pop
icebp
fwait
test
jge
lds
leave
jb
loopne
or
pusha
pop
cmp
je
jmp
add
dec
push
in
aas
out
xor
fcmovnu
sti
lock
adc
fisttpll
and
int3
fwait
sti
cltd
jp
mov
dec
popa
call
push
mov
inc
xorb
movsl
add
cmp
insb
xlat
inc
fwait
lcall
outsl
jg
push
outsl
xchg
pop
xlat
mov
mov
roll
push
std
lods
jnp
cwtl
jp
jmp
scas
repz
jge
fcos
add
test
rcl
cltd
mov
ds
pop
add
in
addr16
jge
test
sub
scas
jg
inc
mov
in
sarl
aad
mov
and
enter
jno
aam
mov
cmp
icebp
sbb
push
cltd
jns
stos
sbb
pushf
fcmovb
sbb
outsb
jge
sub
add
lret
mov
pusha
xor
stc
pop
push
mov
push
and
ficomps
lea
cmp
inc
pop
jge
ja
not
lods
inc
rclb
testl
jecxz
cmc
add
lods
cmp
iret
cmp
push
mov
int3
stc
rclb
sub
lahf
xor
fadds
add
inc
dec
out
adc
jno
and
in
ret
les
in
inc
xchg
add
das
fwait
cwtl
iret
lcall
add
ret
inc
in
sbb
insb
movb
shrb
scas
aas
mov
negl
addr16
icebp
lock
rcrl
ljmp
jns
test
push
aad
add
jo
inc
and
stc
dec
cmp
xlat
mov
inc
push
xchg
stc
movsb
or
or
dec
add
out
pop
mov
outsl
dec
or
sub
xor
jl
lods
jecxz
jl
mov
gs
jg
cmpsl
pop
add
insb
mov
movsb
push
lret
and
mov
adc
gs
shll
pop
adc
inc
jae
mov
pop
sub
je
adcb
ss
jl
xor
pop
and
push
inc
xchg
pop
outsb
cmp
movsl
push
mov
cmp
cmp
leave
ss
push
mov
adc
and
mov
leave
cmp
pop
jns
je,pt
sbbl
push
mov
adc
jle
dec
inc
adc
adc
int3
adc
jle
test
ret
pushf
aam
and
std
gs
and
sub
push
or
xchg
ds
pop
mov
dec
pop
mov
jl
fmuls
jmp
cld
dec
gs
pop
xchg
mov
pop
add
loop
jne
pop
popf
aad
test
pop
sbb
mov
xor
mov
imul
fists
mov
aad
loopew
mov
rcll
and
add
pop
or
outsl
adcb
or
arpl
adc
dec
decb
push
xor
in
ret
and
ret
in
jae
stc
sub
mov
mov
jp
jmp
adc
in
scas
aam
add
out
int3
jecxz
sub
stos
mov
jae
xchg
rcrl
clc
push
sbb
add
imul
stc
mov
jle
jno
xchg
sbb
cmp
dec
loopne
add
rclb
add
pop
data16
fs
iret
dec
popa
jae
adcl
jmp
push
aas
xor
mov
pop
fldcw
push
cld
push
sbb
xchg
add
fwait
sbb
sbb
data16
xchg
jne
fdivrs
shrl
xchg
mov
sarl
fstpl
arpl
mov
add
scas
jecxz
and
int
mov
jg
int3
gs
aaa
jb
sbb
mov
insl
mov
cmp
loopne
dec
loope
xchg
and
fists
repz
nop
mov
sub
sti
mov
mov
xchg
xchg
sub
lods
cmp
dec
int3
pusha
jno
jl
sbb
push
mov
add
ljmp
push
test
mulb
ja
leave
js
insl
scas
js
sub
mov
mov
rcll
mov
add
push
es
xor
jmp
jne
or
xor
sbb
fsubl
sub
bnd
insl
jg
mov
fisubrl
and
xor
push
rclb
fidivs
add
or
stos
jae
lds
cld
into
pop
mov
jle
xor
cltd
and
adc
add
subl
sbb
mov
fs
jo
rorl
cltd
xchg
jae
mov
xor
pushf
pop
mov
and
stc
out
cmpsb
mov
shl
mov
hlt
push
jbe
fwait
pop
mov
push
das
gs
cmp
mov
jge
inc
aam
or
stos
lret
jg
int3
inc
andb
cltd
and
ja
add
sti
dec
lods
jmp
in
lret
mov
fstps
pop
into
int3
inc
mov
aaa
xor
xor
xchg
subl
iret
test
aas
insb
inc
ss
je
mov
cmp
fucomp
mov
inc
pop
jecxz
push
pop
mov
mov
dec
jns
cltd
sub
lds
lods
dec
inc
pop
cmpsb
lret
pop
push
dec
insb
mov
cltd
bound
mov
lahf
out
jns
xor
sbb
int3
and
mov
lods
add
pop
xchg
movsl
lcall
nop
adc
xor
cld
lret
enter
leave
pop
scas
cld
jb
test
mov
js
xchg
pop
fstpl
shlb
mov
xchg
inc
lret
leave
insb
pop
into
idivl
aam
imul
notb
stc
push
out
mov
sti
fisubrl
pop
jns
ss
or
ss
in
push
shl
jbe
jl
jne
rcrb
mov
cmc
jne
jge
mov
mull
fidivl
shrl
movsb
add
pop
repz
inc
pusha
mov
int3
aad
fimull
inc
scas
mov
jmp
add
int
cwtl
jmp
inc
mov
imul
mov
mov
sbb
es
jmp
stos
xchg
popa
push
and
or
sbb
fcoms
addb
mov
ss
fistps
sbb
lods
cmpsl
insb
dec
mov
ss
xor
mov
sahf
mov
push
int
pop
jle
cmpsl
movsl
bound
lcall
lcall
cld
push
das
xor
pop
aad
nop
int3
addr16
fscale
mov
insb
fstpl
mov
cmc
shll
loopne
mov
inc
jecxz
cld
and
xor
cmc
stc
loopne
and
adc
lcall
scas
sub
fs
or
mov
jmp
push
lods
mov
icebp
lock
je
mov
xchg
loop
test
xchg
clc
stc
out
lcall
js
jmp
sub
push
aaa
mov
pop
jae
mov
mov
lds
mov
mov
pop
repnz
jns
rclb
mov
adc
or
rcr
ljmp
add
add
xor
repnz
mov
xor
pushl
xchg
cmp
imul
cltd
or
fcmovu
lods
movsb
fstl
je
shrb
neg
mov
dec
pop
push
inc
in
stc
ret
lret
add
ret
fistpll
popa
mov
or
dec
adc
pop
jno
inc
sub
insb
adc
and
es
and
in
pop
mov
sbb
clc
adc
je
in
loop
mov
aas
mov
shlb
mov
sbb
cmp
outsl
inc
lahf
insb
mov
cld
sbb
mov
in
cmp
loop
fadd
outsb
dec
test
pop
dec
mov
repnz
mov
sbb
lahf
xchg
clc
inc
cs
jp
mov
sub
or
push
loop
fstps
imul
jge
mov
mov
mov
pop
ficoml
cmp
jne
and
aad
ljmp
and
mov
in
cld
fwait
das
xor
and
sub
cmp
inc
ja
and
or
out
pusha
dec
test
rcr
cwtl
sub
pop
sbb
push
int
jns
xchg
je
test
mov
dec
pop
adc
cmp
repz
xchg
pop
out
cmpsl
test
cwtl
into
cld
pop
adc
ss
les
sub
je
inc
lret
int
xchg
mov
inc
adc
aad
push
cmpsl
notb
cmc
mov
mov
mov
movsl
aad
dec
dec
insb
test
mov
sbb
push
dec
xor
out
hlt
dec
pop
js
mov
and
push
pop
jb
test
sbb
fmul
add
mov
hlt
out
and
in
je
jnp
cmp
pop
fsts
and
rclb
push
dec
cmp
loope
fwait
jecxz
jnp
cmp
push
mov
scas
mov
or
or
mov
mov
fmulp
jne
xchg
sub
mov
mov
je
cmp
jl
pop
loope
jg
stos
cmpsl
movsl
adc
leave
fisttps
cmp
mov
int
pusha
pop
inc
pop
incb
std
inc
adc
aam
jbe
movsl
and
cld
mov
int3
add
insb
push
sbb
mov
icebp
mov
mov
sub
pop
out
shl
negl
sub
bound
mov
push
push
inc
cmp
movsb
test
add
push
mov
lock
outsl
cmp
and
sahf
or
lds
push
sub
inc
lret
xor
mov
pop
add
fwait
mov
push
mov
scas
andl
bnd
jns
inc
lret
cli
dec
xchg
jmp
lret
fidivrs
adc
jl
mov
sbb
pop
pop
fwait
or
clc
push
data16
jno
je
mov
pusha
xchg
mov
adc
jne
add
hlt
lock
mov
mov
push
xchg
pushf
testl
push
fmulp
movsl
push
std
push
mov
jg
loop
icebp
jl
jg
and
les
jne
out
jle
cld
push
dec
cwtl
aam
mov
fisttpll
push
push
fwait
and
das
xor
aad
scas
mov
sub
repz
cmpsl
sbb
lods
inc
xchg
mov
mov
adc
clc
ds
xlat
ret
sbb
js
dec
xchg
push
daa
mov
adc
pop
mov
outsl
push
push
stc
sbb
push
push
addr16
jl
mov
sbb
nop
stc
sub
mov
push
mov
push
ljmp
lea
cli
mov
mov
gs
or
test
mov
leave
push
jb
jecxz
push
pop
add
xor
repz
into
add
adc
mov
xor
jmp
or
jg
in
adc
sub
dec
test
cmp
dec
imul
imul
lods
mov
mov
xor
mov
add
cmp
imul
mov
mov
sbb
int
cmc
inc
inc
movsl
test
pop
pop
es
add
pop
or
jo
and
inc
inc
movsl
sub
xor
insb
les
std
and
cld
in
inc
dec
icebp
push
pusha
aaa
js
cmp
enter
sub
cmp
stos
sbbb
dec
xchg
mov
xor
sti
sahf
lcall
mov
ret
pop
lock
jnp
ficompl
jne
sub
xor
testb
inc
xchg
hlt
mov
aas
push
pop
mov
push
or
xor
xor
and
push
hlt
xchg
out
ret
aam
dec
pop
pop
movsb
cmp
mov
sub
push
addr16
adc
push
loope
cwtl
add
add
bound
xor
into
inc
jo
cltd
stos
rep
push
lret
lds
push
push
push
inc
sub
out
push
cmc
out
data16
scas
lret
maskmovq
idivl
xchg
bound
cld
aas
pop
dec
out
cmp
or
test
pop
push
jmp
add
adc
hlt
lahf
test
xchg
xor
mov
add
jns
or
imul
cmp
push
push
cmp
sahf
pop
jb
or
cmp
insb
ficoml
test
add
or
push
pminsw
jb
fisubrl
sub
hlt
or
mov
out
push
stos
mov
inc
lcall
je
daa
shl
add
push
shlb
in
inc
aaa
jne
in
rcr
mov
dec
jno
mov
clc
loop
xlat
cmp
dec
cmc
nop
mov
xchg
push
cmp
inc
imul
es
daa
adc
mov
push
jmp
jbe
mov
iret
sbb
jmp
push
and
cmp
shl
cli
cmpsb
in
ds
push
rol
fwait
mov
inc
xor
sahf
xor
insb
movsl
and
sub
fs
push
nop
inc
jbe
enter
push
sub
inc
rclb
and
andl
or
xor
dec
in
in
cmp
shll
ja
push
mov
add
insb
sbb
and
in
jmp
shr
dec
inc
jo
jp
push
push
mov
loop
adc
imul
jmp
inc
push
cmpsb
jmp
cltd
es
mov
xchg
movsl
ljmp
int3
repnz
outsl
cmc
push
sahf
pop
stc
imul
xchg
inc
cs
push
popa
cmp
loopne
jmp
jle
dec
movsl
stos
ljmp
pop
cltd
push
pop
push
cwtl
adc
ljmp
xor
mov
test
pusha
sahf
mov
jecxz
sub
jmp
js
shll
bound
sbbl
xor
out
popf
dec
out
xor
jnp
mov
jne
aad
or
cmp
and
fsubr
jmp
popa
add
rorl
push
sbb
and
insb
mov
mov
stc
push
pushf
fdivl
mov
cmp
pop
mov
push
adc
pop
cmpb
pop
cld
cmpsb
fcoml
and
insl
mov
mov
adc
sbb
mov
sarb
outsb
add
adc
jmp
pop
xlat
stc
or
pop
cli
add
cld
cmp
sub
out
mov
int3
test
rcrb
mov
aad
add
and
fucom
cwtl
gs
xor
adc
test
add
sti
pusha
adc
fwait
adc
sbb
repz
push
xor
imul
sbb
xor
mov
lock
test
push
je
stc
xchg
jbe
out
jl
arpl
push
ficomps
iret
mov
fstpt
xor
sbb
dec
xchg
mov
sbb
in
xchg
outsl
add
cmp
js
sub
notl
xor
push
in
sub
jns
ret
insl
dec
sbb
popa
push
das
in
loopne
sbb
mov
int
sub
and
sub
fistpll
outsl
or
imul
mov
out
push
leave
in
mov
dec
mov
jb
jae
pop
sbbb
cs
arpl
inc
cmp
add
sbb
jno
je
pop
inc
scas
addr16
add
aad
mov
jne
iret
mov
cmp
daa
cmpsl
cltd
push
add
outsb
xchg
xor
mov
pop
lods
ror
xchg
mov
rcl
gs
adc
pop
add
dec
imul
sti
xchg
mov
je
and
lcall
jmp
popf
dec
sbb
iret
in
dec
fldcw
imul
lret
xor
or
add
add
adc
lret
test
jb
leave
push
addb
dec
add
mov
es
jl
gs
pop
push
jp
xor
loope,pt
int3
ret
push
ss
ret
mov
push
movsb
add
sub
add
cmp
dec
mov
pop
repnz
jecxz
xchg
shll
add
out
mov
mov
rdpmc
rol
mov
imul
cli
sahf
mov
xlat
mov
insb
js
jb
movsl
inc
sbb
int3
push
push
or
pop
push
add
fiadds
adc
pop
dec
clc
mov
insl
in
cmp
in
pop
movsl
xchg
lret
popa
or
divb
mov
jns
mov
into
lcall
mov
scas
cmp
xor
add
mov
jnp
push
das
push
or
xchg
int3
lds
pusha
sbb
push
sbb
xchg
mov
cmpsl
pop
cmp
cmp
sub
jmp
xor
mov
jg
mov
rcll
fbstp
sbb
and
lds
mov
inc
jmp
scas
xor
and
daa
jecxz
lcall
add
jmp
xor
mov
mov
adc
cmp
in
xlat
lret
popa
int3
int3
fsubl
sbb
sbb
or
push
ret
cmp
into
pop
imul
subl
xchg
add
lret
pop
jae
scas
out
mov
pop
xor
pop
lods
jmp
inc
cmpsb
out
jg
xrelease
mov
mov
pop
pop
daa
push
or
xchg
sub
sub
add
ror
mov
xchg
test
pop
bound
jns
fwait
je
js
push
add
fiaddl
ret
cmp
loope
cli
push
out
mov
cltd
aam
sub
aam
or
popf
add
xor
cmp
push
push
aaa
lods
cli
adc
and
cmp
sbb
cmc
aad
lock
mov
jno
das
ds
mov
sahf
push
scas
push
out
cmp
cmpsl
inc
push
orb
mov
or
popa
mov
xor
sbb
mov
fistl
mov
xchg
into
add
xchg
fsubs
js
dec
adc
push
or
jae
int
jae
sahf
ja
loope
inc
loope
ss
mov
fbld
jns
int
and
leave
and
loope
push
ja
push
insl
pop
mov
packsswb
into
std
mov
adc
dec
aad
push
scas
ja
push
or
hlt
imulb
inc
adc
js
popa
sbb
incl
nop
addr16
ljmp
dec
hlt
adc
mov
mov
pop
cli
loopne
dec
sub
xor
add
sahf
cld
into
sbb
push
jno
xchg
inc
push
xchg
pop
pop
cli
mov
jp
lock
cmpsl
jno
jns
movsb
pusha
ljmp
stos
ja
sbb
cltd
mov
mov
xchg
lds
clc
sbb
imul
mov
xor
mov
hlt
dec
pop
jbe
ss
fcomps
movsb
gs
imul
dec
inc
jg
cmc
cmpsl
pushw
lods
dec
adc
xchg
mov
mov
sub
push
push
sub
jge
push
into
mov
mov
inc
fldl
sub
adc
and
mov
inc
fbstp
pop
lret
stc
mov
mov
loop
insb
cmpsl
inc
into
cmp
sub
enter
mov
inc
ljmp
mov
cltd
scas
aaa
lahf
mov
int3
adc
enter
sti
push
xchg
add
stos
fcmovbe
sbb
out
cs
lock
cli
dec
ss
nop
jle
pop
in
xchg
mov
inc
sub
popa
lods
mov
pop
mov
and
cmpsl
cmc
cmp
inc
cmp
fldt
in
movsl
cmp
mov
js
or
fistl
movsl
pushf
cmp
or
testl
fdivrl
add
hlt
mov
imul
gs
rclb
ljmp
pop
xchg
addl
sti
inc
out
sarb
js
and
push
pop
insb
inc
or
lcall
adc
inc
xor
imull
and
sub
adc
pop
lret
mov
dec
inc
add
mov
mov
mov
xchg
ficoml
mov
fisubl
pop
mov
xchg
inc
fildl
pusha
nop
cmc
fstpl
and
daa
sub
out
add
hlt
mov
mov
test
jle
cmp
repz
adc
subb
and
adc
xchg
and
push
std
pop
mov
push
lret
cmpsb
or
roll
aas
in
aad
cltd
aas
testb
push
push
pushf
ss
aad
jae
and
jnp
imul
inc
or
mov
xor
inc
je
outsl
jle
and
mov
dec
scas
or
in
in
pop
filds
dec
int3
pop
add
xor
sub
xrelease
add
add
shlb
sub
aaa
mov
ljmp
loope
sbb
stos
test
lea
and
stos
pop
pop
stos
dec
xor
fldenv
inc
int
out
cmp
jne
jg
in
add
loop
fwait
mov
xor
shll
inc
inc
imul
gs
xor
idiv
shlb
daa
add
repnz
sub
xor
popw
in
jg
dec
sbb
push
lea
ds
addr16
fucom
push
xchg
mov
mov
in
call
push
or
gs
loope
cmpsl
stos
cltd
std
insb
insl
stc
mov
sbb
shr
notb
aas
dec
mov
scas
into
pop
sub
and
icebp
inc
jbe
pop
and
lret
lock
mov
jmp
sbb
jp
mov
dec
rorl
mov
fldcw
lcall
add
insl
out
movsl
loop
jp
push
jnp
hlt
push
adc
call
repz
push
cmp
sub
fwait
adc
xor
lods
js
mov
add
push
mov
xor
or
push
cwtl
movsb
sbb
gs
lock
scas
popa
popl
test
xchg
ja
fadd
and
les
xchg
sub
leave
imul
add
mov
fldl
movsb
das
daa
les
imul
jae
cmc
push
sub
cs
add
sahf
lods
stos
xor
test
xchg
leave
and
or
or
loopne
jns
jbe
lea
insl
das
or
aaa
std
lea
push
ret
test
dec
rcll
int
sub
lret
pop
mov
xchg
pop
lea
leave
dec
push
mov
inc
mov
cli
xor
xor
pop
pop
bound
sub
push
pushw
loopne
mov
ret
mov
ds
dec
mov
sbb
sub
je
xor
push
dec
test
push
js
sbb
xchg
cmp
cltd
out
imul
nop
push
adc
mov
stc
dec
out
adc
sarb
or
sbb
pop
outsl
shr
cmp
shl
ds
mov
pop
or
adc
mov
push
cmpb
loopne
aam
out
add
or
mov
xchg
dec
and
and
dec
aas
dec
pop
push
mov
mov
stc
ja
test
orb
int3
es
mov
jp
test
sub
gs
leave
call
mov
xchg
cmp
pop
or
or
push
push
loope
arpl
and
out
movsl
xchg
fwait
xor
add
push
fmul
lods
sbb
outsb
or
xor
sbb
int3
push
stc
inc
or
movsb
imulb
mov
leave
jmp
mov
mov
push
cmp
rol
stc
mov
sub
je
outsl
rorl
mov
xlat
movsl
ja
in
loopne
jl
mov
jb
nop
ss
add
ja
sbbl
insb
fcmove
or
sbb
lds
jae
popa
fnstcw
sbb
lret
icebp
dec
incl
sarb
push
loop
es
test
loope
pusha
jmp
sti
jns
xor
inc
gs
mov
aas
imul
add
stos
shrl
pop
fs
out
adc
mov
repz
and
push
and
sbb
inc
mov
dec
mov
pop
pop
sbb
xchg
mov
rcrl
inc
mov
mov
push
dec
adc
xchg
add
pop
lcall
and
aad
and
test
xlat
data16
sbb
sbb
add
int3
ja
hlt
fstl
movsb
jns
xchg
in
xor
mov
outsb
fildll
jmp
xorl
shrl
mov
xor
insb
dec
pop
pop
pop
mov
call
adc
int3
loope
adc
in
rcrb
mov
pop
stos
pop
sbb
cmpsb
faddl
pop
cmp
jb
jle
cs
jo
inc
xchg
int
mov
cmp
lcall
pop
test
loop
aas
in
orl
jbe
add
xchg
frstor
insl
dec
mov
xor
sbb
mov
push
in
loope
insb
rcll
mov
jp
ljmp
enter
inc
mov
jmp
and
pop
cmp
test
jp
lods
outsl
out
inc
mov
xor
popa
pusha
sbb
sbb
cmp
pop
std
xor
in
mov
xor
je
xorb
xchg
pop
add
sbb
mov
out
insb
cmpsl
inc
out
mov
fs
inc
ljmp
cmp
inc
jp
enter
cs
and
jno
cli
and
lahf
in
xor
mov
movsb
xor
stos
cwtl
aam
scas
xchg
push
out
sub
pop
dec
cmc
icebp
cmpsl
out
out
insb
stc
call
pop
fcomps
and
jno
xchg
mov
jmp
mov
mov
pushf
out
and
mov
sbb
dec
scas
jae
add
dec
repz
idivb
adcb
xchg
rolb
test
and
ret
insl
push
test
sub
inc
daa
outsl
mov
scas
popf
jae
xchg
jnp
movsl
aad
aam
in
sbb
dec
or
stos
lods
out
in
mov
imul
sub
xor
pop
hlt
sti
adc
into
lcall
mov
pusha
push
sub
jmp
iret
cmp
scas
adc
mov
icebp
jp
cld
insl
sbb
xchg
mov
adc
sbb
adc
andb
jbe
inc
xor
lods
andb
jg
push
shrb
adcl
mov
mov
xchg
xchg
leave
push
jecxz
sub
scas
imul
mov
cmp
insb
xchg
lods
add
jmp
pop
lret
loopne,pt
aaa
mov
add
sub
sbb
sbb
out
and
jge
xor
sbb
sarb
and
out
dec
js
xor
es
aad
jl
cld
or
ret
mov
notb
jg
pop
mov
jge
scas
arpl
pop
pop
cmp
add
xor
push
out
imul
sbb
iret
push
mov
popf
jb
stos
inc
push
push
lea
pop
pop
mov
fcoml
enter
pop
shrb
cmp
mov
mulb
cld
leave
or
loop
rclb
xor
jmp
or
and
out
js
push
mov
pop
iret
mov
lods
add
cmpsl
orl
test
adc
ret
dec
or
mov
cmp
dec
sar
push
jle
push
push
xchg
pop
rcrl
das
or
lods
xor
cmp
push
inc
or
fldl
sbb
jle
push
jmp
mov
dec
les
cmp
outsl
and
roll
mov
and
mov
push
jp
xchg
aad
test
insl
sti
pop
loope
int3
in
int
mov
iret
rcr
pop
out
dec
je
icebp
enter
mov
xor
rcll
cmp
mov
leave
pop
pop
insl
sub
repz
sti
mov
data16
mov
adc
jo
pop
outsl
jae
fcmovu
insb
in
push
lds
mov
add
lods
sti
out
add
cwtl
dec
mov
lock
inc
sbb
dec
inc
and
mov
xchg
cmc
push
pop
jmp
leave
cmp
mov
cli
popa
js
pop
shll
mov
jne
shrl
mov
cmc
xor
and
in
loop
push
sti
dec
sub
mov
mov
pop
pop
nop
xlat
iret
and
fld
lret
lods
or
jle
inc
nop
rclb
mov
rcll
add
or
pop
dec
fwait
mov
jp
cmp
es
mov
add
test
insl
ret
aad
push
jp
fdiv
sbb
pop
xorl
xor
outsb
out
sub
push
std
mov
loope
stos
and
cmova
jecxz
sbb
mov
or
mov
test
gs
arpl
push
test
cmpsl
cmpsb
xchg
inc
nop
daa
call
xchg
pushf
inc
push
push
dec
or
sbb
loop
jp
pop
inc
add
fstps
pop
dec
cmp
lahf
mov
jle
pop
xchg
je
cli
dec
outsl
out
or
fsubrl
pop
cmp
stos
or
jno
mov
mov
int3
enter
add
aas
nop
lcall
mov
outsl
inc
popa
cmc
push
push
xchg
stc
and
js
popf
imull
jae
jo
fnstsw
imul
jbe
clc
enter
push
insb
inc
or
inc
and
lcall
into
in
lret
xchg
repz
cmpsl
mov
fistps
xchg
jg
pop
lock
sahf
daa
gs
push
cmc
xorb
pop
mov
mov
push
push
and
cmp
cltd
push
ds
jle
pop
into
mov
xchg
push
mov
loop
orl
cs
aas
sbb
stc
enter
hlt
jge
sbb
jne
shlb
clc
mov
orl
mov
or
lcall
aaa
adc
pop
dec
sbb
sbb
std
push
xlat
cmpsl
sbb
repz
mov
mov
and
sub
cmp
daa
or
inc
or
outsl
pop
out
adc
mov
mov
or
neg
xchg
andl
lcall
test
imul
popf
jne
dec
push
cwtl
cmp
inc
movsb
aad
scas
iret
bound
jae
jns
add
mov
add
sub
insb
in
push
fcmovbe
and
call
and
dec
aam
jmp
adc
test
out
loopne
std
in
adc
lret
lea
pop
aaa
and
cltd
cld
mov
aam
push
and
cmp
cmpsl
mov
or
push
mov
push
add
jno
test
cmp
push
lds
cwtl
xor
inc
jb
nop
add
sahf
mov
lret
scas
subb
int3
pop
xlat
mov
and
testb
inc
or
dec
sti
sbb
xor
adc
xor
cmp
xchg
pop
pusha
in
mov
dec
int3
in
pusha
xor
and
mov
lods
pusha
pop
jle
push
out
cmp
jle
enter
fldl2t
enter
mov
mov
call
popf
push
daa
xchg
mov
xor
mov
js
cmpsl
js
adc
mov
pusha
lods
or
aam
jle
dec
out
xchg
lcall
jnp
mov
js
jb
adc
fimull
pusha
vpavgw
cmp
scas
push
call
loopne
mov
fdivs
in
cltd
xchg
cltd
push
inc
lret
adc
sbb
mov
cli
push
scas
mov
sbb
xor
or
dec
mov
or
enter
cmp
push
inc
mov
sub
aas
fildll
mov
shrb
ret
xor
xlat
xor
pop
cs
mov
stc
mov
mov
push
imul
xor
in
out
inc
mov
mov
and
test
pop
inc
stc
fwait
mov
outsb
xchg
push
cmc
push
mov
xchg
sahf
mov
and
mov
cmp
popf
adc
addr16
dec
ret
sti
dec
pusha
add
push
sub
sbb
jo
mov
bound
push
sub
sbb
es
in
ds
data16
mov
jo
popf
mov
xor
in
mov
xor
pop
mov
xchg
fimull
fisttpll
js
dec
sub
pop
sbb
sbb
xchg
push
ret
xchg
xor
jle
ret
movsl
test
or
push
fistl
xchg
jae
add
fstpt
cwtl
lret
push
push
mov
jbe
test
mov
mov
dec
test
rolb
outsb
add
cltd
mov
xchg
add
jbe
lcall
cmpsl
out
sahf
fcmovb
xchg
addr16
pushf
pusha
and
ds
push
inc
xchg
mov
cs
hlt
mov
mov
mov
push
inc
xchg
xchg
push
mov
orl
out
dec
mov
daa
xor
xor
or
daa
or
mov
lods
pop
mov
push
inc
sahf
loop
pop
sub
insb
jle
jne
loop
sbb
inc
and
clc
lds
mov
lods
mov
popa
in
roll
mov
mov
insb
inc
jecxz
push
hlt
push
add
xor
xlat
sub
sbb
mov
movl
into
mov
test
mov
in
scas
leave
cmp
sbb
push
and
iret
xor
and
and
je
in
fisttpl
mov
addr16
cmp
pop
cwtl
inc
nop
aad
arpl
bound
sub
out
pop
mov
dec
or
in
push
jno
hlt
xchg
lods
add
cmpsl
addr16
add
inc
jae
stos
or
push
insl
mov
imull
movsb
pop
repz
lds
mov
das
lods
xlat
add
fdivrs
daa
adc
icebp
psadbw
push
cmp
mov
xor
scas
add
inc
test
push
shll
mov
je
xor
sbb
or
xchg
stos
lock
xchg
xchg
in
pop
and
es
jno
out
push
fldenv
enter
xlat
adc
fucomp
mov
cwtl
cmp
cmovnp
jecxz
fs
or
mov
scas
sbb
mov
cmc
sub
jb
jne
inc
xchg
std
and
jbe
jle
xchg
mov
jns
sbb
jg
sub
notl
mov
jb
adc
cs
popa
cli
notl
int3
loopne
jbe
mov
jne
dec
js
xchg
inc
daa
sbb
or
out
insl
pop
iret
test
adc
hlt
in
movsl
cmpsl
cli
add
mov
out
fs
cli
sub
test
mov
cmpsl
loop
je
cld
xchg
in
mov
test
pushf
mov
into
addb
add
aas
xchg
and
repz
inc
in
xor
inc
pop
lcall
mov
test
jo
lods
and
dec
lahf
pusha
adc
dec
jne
into
push
inc
adc
arpl
leave
stc
jo
leave
xlat
fdivrp
cmp
ret
roll
data16
pop
test
gs
lods
sub
push
lock
in
and
test
push
fwait
in
cli
ss
push
push
mov
xchg
imull
xchg
in
test
aad
push
in
push
mov
push
mov
mov
pushf
inc
mov
fldl
or
mov
dec
movsl
jnp
adc
rorb
fisubl
fidivl
pop
es
jns
push
pushl
mov
and
outsl
lods
into
or
and
mov
mov
xor
dec
mov
add
pop
popf
push
mov
push
mov
pusha
add
cmp
stos
mov
add
dec
shlb
add
mov
dec
repnz
xchg
dec
dec
push
lods
mov
mov
pop
cltd
xchg
add
leave
lods
pop
outsl
imul
adc
jns
jns
ror
lods
inc
pop
andl
or
aad
push
or
xchg
adc
sbb
pop
fists
pop
mov
sub
stos
inc
addr16
cmp
adc
int
rcl
sub
das
insb
sbb
jmp
cltd
pop
sub
sub
hlt
fld
fucom
mov
mov
cmp
daa
sub
inc
or
pop
mov
shrb
pminsw
icebp
jle
std
mov
and
std
in
repnz
mov
adc
sub
sub
dec
lret
xor
into
add
xor
jge
aaa
mov
jl
repnz
jne
mov
adc
adc
or
sbb
mov
mov
rcrb
out
leave
lock
mov
cld
lods
imulb
and
movsl
imul
xor
scas
aam
add
sub
mov
mov
jmp
insb
loop
xchg
mov
sub
xor
fwait
cmp
add
test
and
push
xor
addr16
or
popa
or
insb
mov
out
pop
mov
cld
mov
adcl
hlt
xchg
mov
ret
je
aaa
dec
clc
pop
and
pop
add
jmp
cmpsl
mov
push
cmp
shrl
inc
push
enter
mov
cmpsb
andl
jmp
outsb
jle
sub
loope
jg
out
push
xchg
mov
fnstcw
xor
ret
pusha
inc
push
and
push
loop
mov
jae
ss
push
inc
dec
cmp
dec
mov
add
fisttpll
outsb
xchg
mov
test
lock
cltd
jne
stos
sub
mov
jg
cmp
jecxz
cwtl
xor
jmp
lahf
sub
jg
cs
hlt
cmp
mov
mov
fsubl
lds
rolb
in
or
cmp
fs
insb
test
adc
not
outsl
lods
call
pop
mov
icebp
mov
repz
scas
sub
push
mov
pop
int
pop
sub
stos
dec
sarb
clc
pop
mov
cmp
xlat
or
jb
repnz
call
jg
sahf
cltd
mov
or
jl
or
xchg
lods
push
mov
pop
push
in
cmp
scas
les
mov
mov
dec
cmpsl
shl
mov
insl
add
lahf
mov
or
in
mov
insl
add
jno
push
xchg
sbb
mov
mov
dec
scas
cwtl
sahf
arpl
imul
push
mov
push
mov
add
mov
xchg
pop
hlt
jno
mov
push
fimull
inc
cltd
and
add
xor
cwtl
mov
sti
aas
pop
or
stos
mov
ds
dec
scas
xorb
mov
js
xchg
lods
jge
mov
loope
ret
in
jp
push
cmp
mov
adc
rcr
mov
mov
test
pop
in
add
cwtl
mov
gs
lret
je
jo
clc
adc
mov
lock
or
aaa
jecxz
repz
cmp
js
fwait
xchg
loope
pop
add
lock
rclb
mov
iret
add
jle
push
rcl
xchg
lahf
fcomip
jb
inc
lods
dec
test
ss
test
xor
inc
sub
dec
aas
inc
lret
push
orl
sbb
fldl
pop
mov
xchg
sbb
mov
lock
and
mov
movsl
ficomps
xor
sahf
int
cmpsb
stc
inc
jp
sub
adc
jle
cmp
fwait
jp
fs
sub
pushf
or
insl
fldenv
xor
movsl
fnsave
mov
loopne
jns
add
sbb
fists
out
test
jp
ja
xchg
adc
sbbb
pop
nop
inc
dec
push
jge
xchg
insb
testb
mov
clc
jne
mov
and
cmpsb
std
dec
push
aas
ss
loope
or
mov
imul
data16
lcall
in
call
mov
cmpsl
stc
lds
fisubrl
lahf
sub
sub
sbbb
cwtl
cmc
pop
pushf
mov
sub
sbb
pop
je
and
push
dec
in
fcomps
rcrl
jmp
mov
in
cli
push
and
jmp
ja
icebp
cmp
rcr
jge
and
inc
popf
sti
fdivrl
outsl
cmpsb
stos
push
movsb
xor
mov
aas
inc
fwait
stc
push
outsl
je
dec
nop
enter
xchg
fiaddl
out
jecxz
adc
sub
pop
mov
das
jns
ss
and
loopne
out
jns
aam
adc
js
hlt
push
int3
push
inc
add
mov
je
add
popa
lcall
push
jge
push
mov
mov
in
jb
mov
sub
iret
xchg
adc
test
lods
les
test
lea
inc
dec
push
call
popf
out
mov
shrl
loop
bound
pop
sarl
iret
lcall
lods
addb
shrl
fisubl
push
mov
push
cli
cmp
mov
test
ss
ds
in
push
ja
insb
test
sbb
dec
stos
lahf
jecxz
mov
fwait
sub
mov
jnp
xlat
push
fs
mov
mov
mov
testb
fidivl
lret
fdivrs
int3
test
mov
insb
outsl
pop
push
or
or
ss
pop
or
hlt
adc
xchg
and
mov
lahf
loop
scas
fnsave
mov
jae
paddsw
rorl
stos
lcall
mov
xchg
outsb
repnz
fsubrp
mov
mov
jbe
les
xchg
ds
mov
mov
sub
push
fiaddl
and
aaa
imul
xchg
cmp
jmp
cmp
or
es
idivb
mov
aaa
sub
ret
push
jae
iret
xchg
inc
pop
cmpsb
sbb
shlb
mov
movsb
add
adc
dec
jp
and
push
ret
stos
mov
insb
scas
inc
out
xchg
repnz
addr16
sub
mov
imul
adc
xor
dec
xchg
aad
mov
sub
pusha
in
xchg
cmp
mov
add
outsb
test
outsb
adc
repnz
xchg
cltd
inc
ret
popa
int
cmp
jle
xor
inc
lcall
roll
jp,pn
dec
sar
xor
cmp
dec
pop
pop
sbb
lcall
rcll
popf
jp
mov
mov
out
cmp
test
inc
movsl
mov
cmpsl
imul
push
adc
mov
sahf
push
add
fsubrs
cmc
int
test
inc
out
jb
lret
les
push
push
mov
push
and
mov
into
and
das
mov
movsl
jns
cmp
sti
xchg
out
adc
enter
xchg
jns
sub
or
aad
rorl
sti
sbbb
cmp
movsl
outsl
mov
cmp
adc
fnstcw
lock
in
rcl
cmp
inc
xchg
cmpsl
push
inc
enter
pop
xchg
or
out
mov
divb
pushf
sub
cmp
pop
mov
or
mov
fstps
jns
cmp
push
stos
inc
stc
sub
daa
push
add
mov
aaa
xchg
imul
sbb
and
push
imul
cld
in
and
mov
push
sub
fs
lock
iret
adc
into
sbb
and
fsubp
mov
aad
or
or
adc
rep
scas
adc
lds
into
subb
and
outsb
xor
and
dec
inc
sbb
shl
adc
mov
dec
push
cmp
inc
icebp
sbb
pop
cmpsl
sbb
aaa
lods
xor
push
cmc
pop
shrl
push
cwtl
push
cmp
dec
mov
je
leave
iret
pop
fcomps
shrb
adc
jg
mov
clc
data16
xchg
test
push
loopne
mov
jae
mov
sub
add
mov
inc
popa
in
insl
test
cld
test
in
push
data16
cmp
sbb
sbb
mov
lret
lods
inc
gs
aaa
cmp
sbb
arpl
shlb
outsb
je
mov
testb
insb
jg
aaa
pop
dec
mov
incl
or
mov
dec
add
nop
nop
es
clc
sbb
add
adc
ret
adcl
sub
fstpl
dec
addb
andl
loop
fisubrl
call
adc
mov
inc
push
movsl
push
cmp
stos
add
fcomps
mov
cmpsb
popf
jle
mov
pop
shlb
imul
sbb
jmp
mov
aam
gs
jecxz
mov
out
repnz
pop
push
sti
xchg
jecxz
cltd
icebp
divl
inc
adc
jns
jl
mov
pop
sbb
mov
roll
jno
sbb
cmpsb
pusha
in
aam
mov
add
pop
mov
xchg
add
xlat
xchg
inc
mov
jbe
rorb
enter
fdivs
nop
sbb
xor
xor
loopne
sbb
xchg
iret
sti
pop
add
add
pop
inc
inc
pop
fdivr
test
adc
out
cmp
das
inc
iret
insb
mov
inc
xchg
and
or
mov
sahf
fwait
jmp
sar
incl
repz
xchg
and
ja
jmp
enter
rol
push
or
lret
std
pop
and
pop
add
js
cmp
fildll
push
leave
shll
inc
and
sbb
in
sbb
adc
frstor
imul
push
mov
stc
test
pop
mull
psubb
mov
add
fprem1
inc
adc
cmpsl
push
call
or
sbb
mov
mov
ret
stos
inc
inc
insl
inc
cltd
push
cmp
adc
jecxz
add
mov
adc
push
daa
push
add
xor
aad
test
xchg
movsb
pop
ja
loope
aas
loope
mov
mov
in
jp
repz
mov
lock
jne
orl
inc
and
pop
pop
shl
in
mov
xchg
cmp
popa
lcall
xchg
xor
jmp
xchg
gs
dec
ds
int3
add
push
jb
lods
inc
dec
lret
and
in
in
pop
div
xchg
cmp
gs
into
bound
adc
outsb
testb
dec
cli
loopne
jle
lods
cmpsl
repnz
pop
push
jmp
adc
rsqrtps
lea
mov
push
testl
dec
cmp
lret
fdivrs
add
sbb
sub
in
and
fidivl
call
inc
jb
pop
call
jle
push
stc
xchg
in
les
add
inc
jecxz
push
outsb
sub
test
fsts
mov
lds
add
adc
mov
xchg
adc
adc
cmp
sub
test
jl
push
test
jg
mov
pop
enter
aad
sub
push
inc
adcl
rorb
sbb
std
mov
push
push
mov
fsubrl
addr16
inc
ja
pop
push
outsb
sbb
cmc
dec
js
push
jge
aad
iret
xchg
lea
nop
fcmovb
dec
ds
lret
cmp
cwtl
fcmovnb
mov
addl
cmp
mov
movsb
pushf
daa
cwtl
cltd
fidivs
lret
enter
cltd
jp
testl
mov
js
iret
xor
adc
sub
hlt
jmp
cli
dec
mov
addl
lea
in
cmpsb
lret
scas
sti
dec
mov
mov
push
stos
pop
cld
cwtl
mov
lods
je
dec
clc
add
pop
mov
sti
jns
push
clc
pop
nop
imul
out
int
add
and
mov
jecxz
add
inc
mov
fwait
jecxz
mov
ror
sub
dec
lret
cmp
les
dec
lods
mov
into
lock
xchg
add
lret
aad
into
or
ftst
or
fcoms
xor
mov
xchg
cmpsl
pop
cmp
mov
push
gs
mov
mov
push
jae
mov
rclb
or
fstpt
pop
outsb
mov
inc
and
outsl
lahf
test
ss
jns
in
out
not
outsl
imul
sub
push
or
std
sbbb
lods
mov
loop
lds
push
outsb
inc
adc
cmp
push
js
andl
mov
aad
xchg
push
imul
mov
cwtl
mov
das
cmp
cmpsb
in
jge
pop
or
data16
lahf
push
jb
and
pop
mov
sbb
mov
sub
mov
sbb
pop
or
in
adc
cs
mov
stos
mov
fldl
popa
dec
das
pop
test
in
lods
dec
rclb
xlat
ret
jl
sub
scas
testb
fldcw
pop
jns
or
cltd
mov
cmp
adcb
in
sbb
lahf
loopne
inc
movsl
cmp
aam
jns
test
call
aam
and
mov
inc
sbb
je
std
push
nop
mov
jno
push
stc
clc
int
fistpl
out
out
add
aad
data16
call
sbb
repz
in
fsubs
push
ja
mov
sbb
andl
or
xor
idivb
xchg
add
dec
or
int
movsl
outsl
cwtl
mov
aam
fucomip
daa
sbbb
mov
or
mov
jl
pop
dec
and
movsl
loopne
push
push
gs
mov
les
test
imul
into
fistpll
pop
lock
dec
inc
hlt
jo
repz
sbb
mov
in
xchg
mov
pop
int
popf
dec
rcl
lock
dec
jnp
jle
xchg
inc
lods
jne
imulb
enter
sbb
jmp
mov
notl
dec
sub
pop
rcll
pop
mov
cltd
sbb
and
imul
sub
movsb
xchg
adc
xor
adc
test
ja
je
mov
push
pop
jbe
fistpll
pop
ljmp
cmp
stos
scas
and
daa
out
arpl
data16
xchg
mov
test
fmulp
and
sub
pop
dec
xor
pop
add
pop
out
test
in
xchg
pusha
xor
out
ret
cwtl
mov
xchg
jne
in
call
lcall
test
es
lock
and
stc
inc
and
nop
pop
sbb
sbb
inc
and
dec
fisubl
xchg
and
jg
dec
jmp
mov
pop
xchg
push
and
mov
xor
mov
in
mov
inc
inc
ficoml
rol
fstpl
clc
repz
pop
adc
aas
pop
into
pushf
in
fsubrl
and
rcrl
adc
fistpll
out
and
ds
stc
jne
lds
sbb
mov
fsubp
inc
mov
cmc
lretw
push
sbb
add
int
aam
cmp
xchg
lea
mov
jg
in
fstl
dec
shlb
fiadds
out
inc
movsl
test
into
dec
and
mov
data16
in
jl
std
sub
lods
ss
orb
push
dec
lock
fwait
and
jae
lods
in
adc
mov
cwtl
ret
dec
pop
dec
dec
jno
fbld
ret
sti
lea
cmp
xchg
sub
imul
add
push
dec
jp
jns
or
prefetchw
cld
inc
xor
ror
sub
aas
lret
in
cmpsb
inc
mov
fcomip
inc
xchg
js
cmp
pop
cmpsb
jns
in
mov
push
jbe
adc
pop
sarl
xchg
xchg
js
cmp
cmp
lock
in
popa
pop
cmp
int
shll
lods
cmc
mov
stos
stos
inc
mov
xor
fldt
les
mov
test
insl
push
and
stc
gs
mov
mov
push
fwait
dec
repz
xchg
inc
mov
cs
je
cmpsb
mov
add
mov
dec
mov
xchg
or
popa
mov
lcall
mov
sbb
pushf
pop
dec
inc
outsl
cld
test
xor
subb
jge
jo
sub
and
dec
jp
sbb
aas
sbb
out
xchg
sub
cmp
ds
aad
xor
cli
push
jmp
pop
in
or
cmpsl
xchg
inc
push
iret
das
xor
fdivrl
fiaddl
aad
push
test
push
pop
sbbl
insl
out
xor
and
adcb
xor
adc
sub
test
into
or
sbb
insl
repnz
imul
xchg
loope
lock
sub
sti
pop
inc
movsb
and
movsb
xorb
sbb
jle
and
xor
mov
mov
js
in
orb
inc
and
cmpb
inc
xchg
inc
add
jmp
push
adc
mov
imul
cmp
in
shrb
sub
mov
in
adc
ljmp
into
xchg
addr16
mov
inc
out
mov
jl
addr16
push
inc
flds
into
popa
pop
mov
xchg
push
cmc
fwait
cmp
mov
pop
in
stos
shrb
out
mov
jge
rclb
dec
int
movsl
add
jecxz
sbb
mov
xor
and
into
js
fimuls
outsl
and
notl
popf
cwtl
xor
cmp
ljmp
out
stos
mov
pop
add
or
fwait
push
filds
xchg
xor
repz
out
ficoms
int
clc
outsb
out
int
gs
aas
push
lods
pushf
testb
xor
push
loope
call
addr16
ja
xchg
sbb
add
cmp
sahf
xchg
cmp
mov
pop
xchg
xlat
add
jne
int
outsb
into
push
std
mov
jg
cwtl
jle
adc
inc
mov
gs
xchg
fdivrl
inc
data16
mov
xlat
outsb
push
jecxz
jno
cmpsl
movsl
jecxz
sbb
popa
das
cmp
icebp
out
out
cld
sbb
inc
cmp
mov
add
fcmove
xchg
pop
sub
mov
sub
les
mov
stos
mov
or
xor
sbb
cmp
xchg
andb
dec
lret
les
stos
xchg
rcl
flds
push
clc
movsl
add
push
fidivs
lds
ljmp
fldenv
pop
adc
stc
cltd
add
cmpsb
bound
popf
mov
pop
push
out
inc
rcrl
push
imul
or
push
pop
out
scas
or
adcb
mov
out
mov
xchg
leave
cltd
sbb
shr
inc
jns
leave
inc
idivl
or
lret
mov
xor
pop
aam
stc
jo
add
pusha
mov
out
adc
jne
lcall
mov
testl
push
xchg
test
ss
loop
stos
cli
fwait
out
icebp
jns
push
ss
sbb
lcall
jl
ja
jmp
scas
mov
insb
iret
lds
pop
adc
sbb
fistpll
push
jne
shl
je
fcmovnbe
insl
call
jo
push
leave
fwait
or
ja
jl
pop
dec
jg
int3
mov
rcrb
push
pop
call
mov
mov
sub
dec
and
cmp
sbb
xchg
lret
cmp
fidivs
add
clc
bound
bound
or
or
add
cmp
dec
lea
ret
ss
and
dec
pop
or
ficoml
clc
cmp
cmp
lret
add
ja
loopne
sbb
je
ds
cli
pop
aaa
insb
inc
inc
fadds
pop
xchg
lcall
mov
enter
gs
mov
push
inc
pop
adc
push
mov
movsb
outsb
movsb
mov
adc
dec
lret
xchg
sbb
jno
and
and
cld
xchg
imul
pop
aaa
out
aad
sarl
cmpsb
dec
insl
dec
and
rcrb
out
cwtl
leave
jo
mov
mov
pop
test
xor
ret
jns
add
jecxz
iret
mov
cmp
dec
jo
popa
sub
add
mov
pop
out
hlt
push
shll
xchg
mov
mov
enter
pop
cmp
rcl
in
repz
lahf
call
movsl
sbb
das
jge
push
ja
cltd
outsl
pushf
out
or
lock
push
fwait
jl
and
scas
shl
int
rorl
cmp
dec
xchg
lcall
jl
adc
jne
xchg
sub
xchg
leave
leave
rcrb
jae
popf
stc
std
paddq
jl
les
ss
or
xor
imul
mov
jns
cmpsb
hlt
dec
jle
ja
xchg
pop
fsts
int3
and
gs
leave
neg
and
lods
add
mov
ret
out
shrb
sahf
daa
stc
push
dec
dec
mov
out
lods
inc
sbb
jo
pop
mov
pop
arpl
in
or
inc
in
popa
cmc
cmpsl
xor
sbb
mov
fwait
jno
jb
add
in
shll
addr16
out
popf
jns
cltd
mov
fisubrs
xchg
aam
dec
ja
pusha
jb
lret
popf
fstps
jecxz
push
lea
fnstsw
insl
xlat
les
stc
mov
push
arpl
pop
dec
ret
fnsave
dec
push
mov
jnp
and
adc
inc
and
mov
dec
push
rcll
popa
dec
leave
adc
scas
cli
sti
push
dec
jg
test
sbb
sahf
sbb
out
and
lahf
xchg
jecxz
nop
aad
pop
fs
outsl
push
rep
aas
pop
xchg
or
xchg
jge
sub
xchg
lahf
xchg
cmp
add
jg
aaa
pop
adc
sub
pusha
mov
xchg
xchg
int
push
sbb
push
pop
cmc
mov
mov
mov
push
enter
movb
pop
les
out
movb
loope
sti
mov
fisubrl
dec
pop
or
add
out
mov
jns
dec
mov
and
cmc
mov
call
xchg
iret
sahf
iret
dec
aam
pop
mov
cmp
ret
push
dec
xor
mov
imul
sub
int3
cmp
lahf
push
push
adc
push
inc
adc
jmp
lret
mov
rolb
lret
aas
std
std
gs
dec
push
cltd
jae
mov
das
inc
push
push
xor
mov
push
dec
mov
mov
outsb
pop
dec
adcl
sbb
pmaxsw
or
mov
sub
cld
out
mov
divb
jp
ljmp
fwait
jbe
push
adc
aam
fdivr
outsb
repz
nop
jbe
out
iret
jb
jnp
gs
repz
jbe
test
push
dec
xchg
xchg
in
mov
shr
icebp
in
mov
sbb
or
inc
nop
cmp
outsl
add
fisubrl
je
or
ret
enter
dec
xor
mov
sahf
mov
jg
mov
pop
testb
adc
jb
mov
aas
mov
dec
divl
sub
in
rorl
jno
jbe
in
mov
xchg
pop
jecxz
in
jo
ficompl
fbld
xchg
jle
push
cltd
xor
pop
repz
fisttpll
pop
test
in
bswap
inc
fs
pop
ljmp
xor
cld
movsb
sub
xchg
sub
push
adcl
pusha
bound
jle
mov
lods
ret
push
cmp
insb
lret
aam
mov
or
push
daa
mov
jae
cmp
nop
xor
aas
fwait
loop
shl
mov
arpl
dec
cmp
add
dec
sub
les
pop
xchg
lret
xor
add
pushf
dec
arpl
in
mov
movsl
add
lods
hlt
and
jg
jp
notl
fists
xchg
mov
in
xchg
ja
cmpsb
scas
fisttpll
pusha
sbbb
dec
mov
jns
or
jne
fsts
jne
mov
add
lret
or
dec
std
rcr
push
enter
shlb
sub
int
mov
call
inc
dec
mov
push
xchg
inc
cmp
insb
out
movsb
shl
push
dec
add
xor
imul
xchg
xchg
cld
in
idiv
pop
jo
and
push
popa
mov
jmp
cmp
push
ret
mov
cmpsl
pextrw
outsb
in
xor
xor
nop
push
pop
sbb
mov
pminub
xchg
das
add
ds
pusha
add
leave
bound
arpl
adc
pushf
push
sub
fdivl
jns
xor
adc
dec
pushf
jge
xchg
int
aaa
mov
movsb
loopne
cld
and
mov
push
pop
cmp
inc
pop
cmp
in
sub
fistl
call
test
roll
ss
sub
sarb
pop
mov
cmp
pop
lret
pop
ds
test
or
xor
addb
testb
bound
shrl
add
mov
stc
std
mov
and
xchg
xchg
inc
rolb
mov
jns
inc
shrl
test
les
xor
dec
jge
and
out
adc
add
dec
cmp
mov
adc
movsb
les
nop
jo
fcompl
or
aaa
and
repnz
push
push
test
ret
sub
stc
test
imul
fwait
mov
pop
xchg
jle
dec
jecxz
pop
je
push
jae
aam
mov
sub
sub
ss
lods
inc
dec
imul
cmpsb
int
popf
cld
inc
mov
push
xlat
push
fildll
and
pop
adc
push
sub
dec
or
in
inc
dec
add
and
and
push
dec
outsb
xchg
das
pop
xor
sbb
dec
push
mov
leave
mov
ds
aam
push
pop
pop
xor
push
lock
jns
dec
adc
xor
cmp
inc
inc
and
test
mov
jl
hlt
stos
fbstp
jno
add
cld
shlb
fdivrl
ja
shll
xor
jo
ja
es
adc
ss
in
test
push
je
insb
cmp
loop
sbb
adc
mov
or
ja
ljmp
jg
scas
imul
and
xor
xor
aam
dec
mov
pop
or
mov
gs
jg
loop
and
lds
ja
lods
enter
dec
aam
push
cmpsb
out
rcl
add
jb
mov
cmp
ss
pop
lret
xchg
xchg
xor
dec
dec
out
push
push
fmulp
push
lods
inc
repnz
insl
cmp
fdivl
jmp
xchg
sub
pop
fsubs
std
or
imul
xor
fsts
push
pop
rcrb
and
cmp
mov
inc
pusha
jb
into
adc
jnp
aaa
mov
mov
fistpl
push
ret
test
jg
cli
ljmp
repz
push
mov
dec
out
pop
loope
inc
cmp
or
nop
dec
enter
jg
add
mov
ljmp
mov
lret
pop
inc
repnz
pusha
loop
iret
aam
cmp
sbb
lods
cmp
in
dec
lds
adc
rcll
sbb
std
jmp
idivb
sub
mov
jns
jae,pt
gs
aam
mov
and
mov
data16
cli
subb
mull
push
cld
push
shll
insl
fwait
adc
fxch
adcl
jnp
jne
outsl
gs
hlt
in
scas
cmp
cmovb
adc
dec
dec
fists
scas
push
mov
je
xchg
jnp
test
pop
adc
fists
pop
inc
xchg
mov
or
xchg
bound
adc
shll
repz
pop
loope
push
mov
mov
cli
dec
and
jo
dec
adc
add
and
lret
push
enter
xor
mov
xchg
ja
insl
insl
and
mov
pusha
adc
stc
into
sbb
test
pop
and
push
icebp
fwait
les
push
mov
sarl
fs
rcr
xorb
push
jbe
lcall
dec
loope
xor
sbb
mov
shrb
rorb
push
pop
dec
lretw
mov
insb
push
imul
add
ja
test
mov
test
xchg
clc
pop
or
notb
insl
movsl
loope
cmp
mov
pop
dec
fldcw
add
test
cli
inc
cs
mov
adc
sbb
adc
xor
or
idivb
jne
jg
and
in
fnstenv
inc
lods
rorl
gs
push
call
lods
imul
dec
cmp
icebp
ja
pusha
mov
cli
dec
dec
clc
dec
inc
xchg
jae
imul
outsb
add
or
xor
dec
pop
movsl
jle
and
rcr
mov
out
cmp
ror
scas
or
test
dec
shrl
in
push
adc
das
xchg
pushf
mov
xor
xchg
push
pop
mov
icebp
and
divb
pop
nop
lahf
mov
aaa
dec
pushf
and
push
push
xlat
hlt
push
mov
push
dec
xchg
jbe
sub
rorb
mov
negl
sub
in
cltd
cs
sub
aaa
es
ret
mov
adc
in
mov
sub
loop
mov
mov
adc
cmp
push
or
imul
cmpsl
add
lcall
movsl
movsb
mov
fisubrl
leave
out
loopne
popf
addb
add
testb
js
sbb
sbb
dec
cmpsb
les
inc
es
xor
jo
pop
add
stos
and
in
loope
dec
jbe
in
inc
cmp
rolb
push
xchg
jno
add
xchg
movsb
add
into
es
xchg
nop
jecxz
loop
jl
sbb
jl
dec
push
into
cmp
mov
pop
inc
rol
push
aad
into
jge
pop
dec
add
pop
into
imul
cltd
mov
jmp
inc
xchg
push
icebp
shr
es
add
xor
fwait
push
sub
imul
out
pop
js
pop
mov
lea
and
and
inc
rcll
das
dec
adc
push
cmp
pop
cmp
lcall
pop
fsubs
or
fldenv
ret
mov
sbb
js
mov
xor
push
mov
cmp
xchg
mov
pop
loope
xchg
sti
fiadds
sbb
sub
add
fwait
push
mov
lock
rcll
fidivrl
sub
imul
jecxz
mov
dec
nop
lea
out
mov
mov
out
ljmp
push
adc
and
rcrl
and
sbb
jge
leave
adc
lcall
adc
push
xor
in
add
repz
mov
pop
fwait
xchg
inc
cmp
in
repnz
jl,pn
sub
push
push
int3
jl
nop
and
sub
inc
repz
movsb
dec
xchg
mov
cli
data16
xchg
ja
fs
dec
mulb
into
jmp
repnz
stos
pop
imull
das
cmp
mov
jmp
adcb
int
mov
push
dec
nop
jecxz
mov
mov
in
cmp
dec
push
jae
daa
mov
outsb
popf
adc
ds
or
xchg
inc
push
cs
xor
push
imul
pop
loopne
scas
pop
push
mov
jecxz
jl
cld
sahf
es
cmpl
sbb
sub
hlt
mov
ror
mov
lods
fwait
xchg
push
xchg
and
imul
mov
test
and
push
fsts
outsl
test
in
pusha
xchg
xchg
pop
mov
dec
mov
daa
insl
in
xor
popf
cmpsl
shll
jne
fisttpll
mov
rclb
pop
adc
jle
sub
pop
add
rcr
adcb
call
mov
mov
mov
cmpb
lock
jmp
insb
pop
in
dec
out
dec
stc
andl
pop
and
imul
cmpsb
cmpsl
sub
inc
aad
fistl
pop
jle
mov
testl
jmp
insl
inc
cmc
scas
lret
movsl
out
ret
push
and
add
lods
mov
dec
shll
mov
or
cli
push
orb
mov
aaa
mov
iret
dec
popa
add
sub
xchg
ss
jle
sub
push
aam
nop
jnp
mov
and
jg
cmp
test
movb
mov
push
xor
loope
adc
add
dec
xor
cmp
test
test
mov
ja
loopne
out
inc
test
push
stos
lret
add
mov
stc
mov
cmpsb
rclb
movsb
or
sbb
psrlq
xchg
outsl
xor
adc
cmp
mov
adc
push
xchg
adc
adc
lcall
sub
out
in
jmp
jae
and
jecxz
pop
addr16
mov
sti
jmp
mov
scas
or
stc
das
enter
xor
les
cmp
add
push
or
dec
xchg
mov
aam
outsb
mov
ljmp
cmpb
mov
icebp
rorl
fadds
push
insl
xor
in
jle
decb
add
push
pop
lcall
pop
in
mov
insb
push
daa
sar
test
icebp
xor
loope
pop
sbb
xor
repz
sub
test
fdivl
jbe
rclb
enter
xor
mov
repnz
adc
sub
push
inc
popa
es
jbe
in
test
out
cmp
push
cmc
and
mov
rorl
bound
xchg
push
sub
rcrb
popa
pop
das
dec
popa
fnsave
mov
and
cld
roll
int
cld
inc
mov
fs
dec
dec
cwtl
sbb
arpl
ja
or
push
dec
cmc
out
imul
sub
sti
pusha
adc
mov
or
inc
push
jbe
jl
sub
sub
inc
les
repz
mov
dec
js
scas
jbe
sub
mull
es
lds
dec
adc
push
lods
call
dec
lahf
cwtl
xorb
shll
jl
addr16
rclb
xor
add
ljmp
sub
pop
cmp
mov
clc
xchg
pop
jnp
std
incb
jge
test
or
int
rcl
dec
mov
out
mov
ret
pop
push
xlat
insl
push
mov
fld
dec
jecxz
stos
or
xchg
scas
xor
sbb
mov
mov
repz
pop
jnp
in
xchg
popf
pop
push
cmpsb
inc
daa
push
cmpsl
push
aam
lods
lea
ljmp
lock
cmc
call
dec
cmp
mov
mov
or
hlt
mov
pop
mov
aam
fsubrs
flds
sar
dec
std
pop
jbe
jnp
mov
imul
push
inc
xchg
xor
dec
aam
movsl
mov
movsl
lods
xchg
incl
mov
outsl
cwtl
into
into
and
sbb
les
push
jno
xchg
dec
mov
clc
lods
daa
pop
and
and
or
test
sub
dec
test
lcall
gs
mov
lcall
or
popf
add
adc
push
add
cmp
push
je
aaa
cmpsb
or
shll
rcrl
push
mov
scas
in
xchg
jae
pop
xchg
push
lods
imul
mov
int
push
push
mov
add
test
inc
out
push
pop
aam
int
inc
mov
fwait
ds
xchg
and
jle
call
inc
or
xchg
dec
jecxz
xor
sub
mov
call
stos
push
push
push
and
lods
cmp
test
repz
cwtl
and
inc
ljmp
loope
mov
jno
jl
lods
cltd
inc
data16
inc
mov
mov
popf
fsubl
ret
ficomps
fisubrl
add
push
in
lret
and
in
mov
aad
pop
fiadds
pop
bound
cmp
iret
int3
rclb
mov
mov
jle
fidivrl
dec
mov
popa
rcrb
xchg
push
cmpsl
jae
push
decl
mov
cmpsb
jmp
and
mov
jge
sub
mov
inc
movsl
shrb
inc
cmp
cmc
pop
sbb
jecxz
inc
mov
jmp
push
fidivrs
dec
cmp
adc
inc
in
outsl
rorb
sbb
push
mov
enter
add
inc
xor
jl
add
push
or
or
push
pop
shrb
addr16
lods
vpmullw
cwtl
dec
icebp
mov
aas
test
int
ficompl
push
mov
mov
push
or
dec
xlat
push
rcrl
adcl
scas
out
add
stos
fdivrp
cwtl
outsl
jmp
and
pop
aaa
int3
icebp
dec
out
das
sahf
repz
and
popl
sbb
lret
movsl
sarl
adc
push
mov
clc
jecxz
adc
repz
jno
xchg
xor
inc
test
add
jp
cs
adc
test
push
dec
inc
mov
lods
lds
jne
int
sbb
sar
or
inc
movsl
test
inc
pop
les
mov
xchg
mov
cmp
call
loop
adc
ret
sbb
cmp
pop
cmpsb
mov
mov
push
and
pop
mov
push
or
sub
lret
jne
repz
ret
lahf
and
push
fs
stos
loope
insl
push
add
mov
or
dec
inc
and
cmp
mov
gs
jo
mov
outsb
sub
sbb
xchg
and
out
test
sbb
mov
aad
dec
loop
adc
in
jmp
loop
or
mov
dec
sahf
fsubl
je
pop
je
mulw
movsl
fnstenv
stos
push
popf
insb
sbb
mov
pop
mov
jmp
fisubrs
jns
dec
daa
jns
fst
jmp
mov
jbe
inc
mov
sbb
rolb
int
iret
sub
mov
ss
pop
out
xchg
push
adcl
xor
jns
sbb
or
enter
aad
adc
nop
adc
arpl
int3
dec
pop
xchg
fdivrl
or
lea
repz
pop
push
or
sbb
test
adc
add
sub
pop
push
pop
movsl
lds
mov
dec
jnp
sub
xchg
cltd
es
adc
dec
and
fs
mov
xor
jbe
sbbl
cli
xlat
faddl
test
mov
aad
mov
ret
sub
ret
mov
pop
jnp
data16
movsb
int3
adc
mov
inc
out
pop
xchg
loopne
cld
xchg
mov
mov
add
mov
cmp
push
or
into
ror
inc
rorl
orl
pusha
popf
stos
mov
push
es
mov
mov
xor
mov
enter
leave
mov
roll
out
ficomps
pop
nop
mov
test
mov
out
push
fldl
sub
jo
dec
lock
sub
fisubrl
int
pop
push
daa
lahf
icebp
xchg
test
pop
int3
jns
ss
cmpsl
testl
ljmp
push
dec
loopne
test
xchg
push
out
and
xor
sub
mov
inc
scas
insl
lods
mov
gs
inc
icebp
outsl
xor
in
ljmp
cmpsb
sub
sar
daa
cmpsb
popa
add
cltd
pusha
scas
aaa
cltd
lea
dec
popf
xchg
sub
jne
outsl
xchg
push
mov
push
pop
lea
jo
ret
loope
jns
lret
xor
cltd
add
mov
icebp
addr16
xchg
xchg
rcrb
mov
ret
ja
imul
out
add
ss
fadds
mov
mov
mov
xchg
jbe
aas
mov
rcll
test
aaa
xor
mov
loope
cld
xor
cli
or
sub
push
jb
lea
cmc
aas
add
js
mov
or
add
and
stos
sarb
outsb
sarl
leave
fstpt
clc
jl,pn
push
shll
and
cmp
and
mov
xor
inc
pop
and
dec
fisubs
dec
ret
cmp
sbb
jae
iret
decb
cmp
cwtl
mov
mov
aas
jmp
dec
xor
sbb
pop
ud1
xchg
or
inc
shll
bound
push
rclb
push
and
daa
sbb
and
sarb
fs
iret
push
jl
add
les
dec
push
mov
jae
cli
pop
into
add
lret
xor
in
pop
jp
into
and
mov
cwtl
mov
loop
std
movsl
push
ror
inc
out
add
or
aaa
inc
enter
xlat
pusha
test
pop
mov
pop
mov
pop
jmp
sarb
imul
dec
fcmovnb
jno
mov
cmc
push
xchg
or
jge
adc
cmc
and
pop
and
lret
xor
dec
xor
xchg
insb
push
sbbb
xorb
repz
mov
xor
imul
notb
nop
fnstenv
adc
sbb
or
mov
dec
shrl
sbb
add
decl
cmpsb
adc
iret
mov
jge
xchg
lds
out
pop
mov
or
sbb
mov
mov
cmpb
subl
roll
test
jns
shll
inc
push
lea
xlat
subb
xor
ret
mov
jb
roll
cvtpi2ps
cmpsl
rcll
push
dec
mov
adc
mov
fisttps
cltd
std
jmp
shrb
xor
rclb
fsubr
mov
mov
cmpsl
cmp
mov
popa
jns
cmpsl
cld
pop
mov
mov
sub
jmp
inc
bnd
into
mov
dec
sbb
pop
and
mov
call
or
sbb
xchg
imul
xchg
push
ds
mov
shr
mov
imul
mov
rcl
and
push
jp
xor
mull
shll
xorb
or
fcoms
mov
pop
pop
pop
and
adc
jb
cltd
dec
icebp
adc
mov
push
inc
pushf
add
lea
fsubr
and
aas
inc
xchg
adc
cld
xor
dec
movsb
out
jnp
nop
jne
dec
in
scas
mov
add
ss
mov
adc
sbb
out
in
stc
fidivs
xor
out
push
aaa
jmp
push
xchg
lcall
imul
adcb
sub
dec
fisttpl
arpl
jnp
pop
adc
rcrl
ja
xchg
call
sti
sub
imul
mov
pop
fistpl
sub
imull
jl
jge
cmp
enter
movb
xchg
aad
xor
mov
cwtl
mov
mulb
jnp
dec
rcrl
push
add
pusha
ja
jg
int
lcall
bound
mov
xchg
xor
cmp
xchg
cmc
test
mov
mov
out
mov
shl
push
push
lret
mov
mov
pop
sbb
push
mov
push
xor
nop
pusha
sbb
sti
or
push
mov
cmp
adc
dec
mov
into
data16
xchg
imul
and
mov
movsb
iret
inc
pusha
inc
jo
es
jno
in
cwtl
or
repnz
xchg
gs
das
dec
or
dec
sub
fs
sbbl
je
test
int
stc
or
mov
jle
cmpsl
test
into
roll
test
in
inc
dec
int
in
sbb
xor
rolb
and
and
mov
loop
je
shr
shrd
lahf
stos
bswap
cmpb
stos
xchg
data16
pop
sbb
aad
mov
and
and
xchg
push
pop
pop
xchg
test
cmp
jns
scas
cmp
pop
ss
into
cli
sti
scas
mov
push
dec
pop
mov
notb
pop
cmp
adc
in
loop
hlt
jo
in
cltd
call
push
jg
mov
std
outsl
push
mov
inc
out
mov
or
or
fwait
lock
sbb
popa
push
push
xor
leave
mov
mov
cltd
push
mov
adcb
and
and
mov
push
push
into
mov
xorb
into
xchg
add
aaa
mov
aad
repnz
sub
sarl
dec
inc
mov
mov
or
sub
or
jo
popa
jno
add
into
adc
jmp
call
std
sbb
sti
push
sbb
dec
pop
or
stos
jb
and
and
mov
push
js
jbe
cmpsl
aaa
xchg
jo
js
push
inc
int3
push
sub
imul
push
xchg
dec
std
push
test
stc
pop
mov
addr16
orl
pop
lret
inc
mov
imul
pop
sub
popf
push
xchg
ljmp
inc
adc
inc
dec
lcall
imul
sbb
and
cmp
mov
jne
push
push
test
mov
test
jo
ja
sbb
imul
lcall
xor
add
adc
aas
mov
dec
cmpb
jg
test
mov
jnp
mov
inc
fs
test
clc
jle
xor
ficoms
pop
int
lods
aad
sub
or
cmp
fstl
rcll
popa
cmpsl
inc
jmp
jl
jecxz
mov
ja
cmp
cwtl
out
hlt
jmp
rcrb
pop
das
cmp
push
filds
in
mov
mov
lcall
and
mov
xchg
fisubl
push
inc
mov
mov
cwtl
arpl
xor
orl
or
sahf
in
mov
insb
or
push
imul
mov
and
or
nop
adc
dec
aad
dec
out
enter
push
lods
mov
dec
sub
stos
xchg
into
fnstsw
adc
mov
bound
inc
lods
dec
push
addl
push
push
lahf
and
push
scas
push
inc
xor
push
xchg
push
jae
jecxz
jno
xlat
jno
jmp
mov
sahf
dec
cltd
jg
movsb
sahf
out
cwtl
xchg
repz
maskmovq
negl
mov
push
out
call
sti
insb
mov
mov
xchg
imul
movsb
subb
nop
sarl
testb
cld
mov
addr16
adc
ret
cmc
lahf
pop
js
out
das
dec
mov
fs
and
jne
test
xor
sbb
imul
js
orl
push
jge
outsl
adc
add
pop
jb
mov
mov
push
add
and
cs
cld
mov
mov
out
push
mov
test
inc
push
sub
stos
shlb
fldt
fwait
std
adc
cltd
ds
adcb
aas
popa
inc
push
das
cmp
xchg
mov
mov
inc
mov
inc
lcall
imul
incl
into
jl
add
mov
lret
in
sub
adc
cmp
cmp
mov
jg
mov
icebp
divl
mov
push
push
and
pushf
sub
mov
leave
popa
dec
ret
ljmp
xchg
inc
mov
testl
lods
add
loopne
mov
aaa
inc
xchg
cmp
dec
push
pop
xchg
mov
sbb
xor
and
es
div
repnz
das
jp
rcl
mov
jl
cmp
and
mov
mov
iret
mov
inc
divl
popa
inc
jnp
arpl
outsb
outsb
dec
jo
pop
and
add
js
pop
ljmp
mov
nop
adc
xorl
lahf
int3
addl
sub
fisubl
les
xchg
outsl
and
stos
divl
pop
mov
sbb
push
or
add
ret
cltd
mov
sti
xor
jbe
dec
out
jno
gs
jae
push
das
inc
push
aam
out
in
ds
mov
lods
add
addb
push
inc
movsl
or
mov
mov
fsts
xor
nopl
jle
jp
into
loopne
inc
xchg
and
mov
leave
mov
and
pop
sarb
xchg
jnp
out
cmp
aam
icebp
sbbb
int3
cmp
fs
dec
loopne
fldenv
cmpl
aam
fsubl
pop
ret
adcl
jle
stc
add
mov
push
lret
out
mov
daa
ss
cmpsl
hlt
mov
ja
cmp
mov
cld
popf
jl
jno
daa
xor
in
sahf
stos
xchg
ds
lret
sub
mov
push
jbe
cmp
push
dec
jno
mov
dec
out
push
outsb
shl
ds
mov
mov
mov
ret
push
cmp
or
jle
stos
sub
cmc
ss
push
jle
js
clc
mov
add
imul
mov
add
fstps
cmp
xchg
insl
sub
lods
popl
pop
dec
or
cmp
lock
sahf
repz
daa
hlt
push
add
or
repz
insl
pop
addr16
and
lcall
mov
jbe
imul
outsl
inc
faddl
pop
xor
loope
ret
pop
ds
mov
mov
lds
inc
lret
scas
rolb
sbb
lea
mov
rclb
push
pop
inc
add
push
sbb
movsl
xchg
cmp
ret
outsl
fwait
dec
mov
lahf
sbb
arpl
or
orl
roll
imul
enter
adc
ja
scas
adc
push
jnp
mov
aad
or
vmread
xlat
sub
std
sub
pusha
scas
rorb
rorl
enter
or
jns
mov
cmp
in
data16
pop
out
push
aad
mov
add
sub
rorb
cwtl
and
inc
xchg
jecxz
fdivr
adc
push
cmc
mov
sub
test
int
cltd
sub
lcall
mov
popf
mov
push
dec
xlat
dec
adc
popf
cmpl
inc
clc
and
data16
mov
jne
mov
test
repz
cs
push
jbe
mov
inc
call
jge
loopne
ficomps
pop
jle
movsb
pop
mov
mov
adc
inc
pop
pop
or
aas
pop
adc
aaa
lds
je
jo
push
dec
fs
jl
xchg
and
outsb
pop
or
jmp
mov
lods
and
in
into
sbb
iret
jg
sti
out
sub
mov
add
sbb
mov
xor
push
adc
mov
loop
rcrl
sahf
push
push
loope
iret
or
push
clc
or
add
ror
stos
rcrl
fistpll
lret
mov
push
push
loopne
mov
push
pop
jp
iret
ret
and
push
inc
enter
mov
cmpl
dec
add
and
negb
sub
shlb
or
mov
cli
ss
jmp
sub
adc
cmp
or
mov
out
xchg
cltd
inc
test
jns
rcpps
cmp
xor
add
mov
out
cwtl
ret
popl
inc
scas
enter
in
pop
idivb
push
cmpsb
or
or
lcall
sub
jns
es
push
inc
cwtl
cld
mov
cmp
iret
movsl
popa
adc
dec
or
pushf
mov
add
imul
inc
imul
cmp
popa
aaa
inc
add
stos
stos
cmpsl
icebp
and
mov
out
insl
cmp
rclb
pop
rcll
fstps
inc
push
out
movaps
loope
imul
outsl
popl
push
outsl
stc
popa
inc
leave
insl
jl
stc
clc
out
repnz
pusha
adc
insb
enter
mov
or
std
pop
cmp
negl
out
ret
dec
cld
into
scas
data16
cmp
aad
data16
xchg
pop
lock
push
daa
stc
cmc
rol
mov
mov
xchg
fistpl
loope
stos
inc
out
pop
movsl
mov
push
rcrb
cmp
cmpsb
lret
and
inc
cmpsl
sub
sarb
mov
xor
dec
jns
ja
js
cmp
pop
add
xor
sub
cmp
push
clc
inc
bound
lret
fnstcw
mov
mov
pop
sbb
je
in
mov
lret
shll
xchg
popf
fiaddl
jb
pop
das
dec
xor
lret
ljmp
add
adc
fsts
inc
sbb
xor
xor
jae
shrb
inc
test
dec
or
sbb
int3
aas
cmp
mov
pop
mov
add
mov
inc
iret
mov
pop
movsb
lret
dec
pusha
lcall
mov
shlb
fisttpl
pop
popf
push
sahf
push
aas
inc
cltd
ret
xor
inc
sbb
sbb
loopne
mov
adc
mov
je
paddq
jb
popa
lods
sub
in
jbe
pop
in
and
xchg
mov
andb
nop
aam
jb
arpl
cmp
cltd
outsb
mov
test
lret
out
fidivl
and
cmc
pop
repz
lret
pop
cmp
jmp
imulb
incb
pop
push
ficompl
or
dec
push
lahf
push
lds
scas
filds
xchg
testl
ja
push
loop
xchg
inc
mov
hlt
leave
push
outsl
addb
sahf
xorl
pop
add
jnp
mov
ljmp
add
scas
or
add
mov
sbb
mov
mov
je
loop
or
mov
cmpsl
pusha
inc
push
les
sahf
imul
push
sbb
xchg
pop
mov
mov
mov
dec
fldl2t
lahf
enter
popf
cwtl
jp
jo
add
pop
lds
adc
std
and
test
push
sbb
add
rcl
sahf
cmpsb
mov
mov
cwtl
int
cld
sahf
mov
mov
test
and
pop
lods
in
xor
nop
pop
mov
imul
std
mull
sbb
mov
mov
out
sbb
or
lods
in
adc
mov
xchg
aad
lcall
inc
lock
mov
loop
sbb
call
xor
movsb
jge
stos
cmpsl
pusha
lods
xor
outsb
mov
adc
jnp
ss
jecxz
inc
movaps
xchg
push
adc
loop
push
and
jo
idivb
mov
mov
ret
movsl
ljmp
jns
rclb
inc
test
andl
or
bound
push
bound
fcoms
orl
sbb
aam
jo
idivb
rolb
xorl
jb
sbb
insl
mov
insb
pop
jns
jns
cmp
fisubl
daa
dec
popf
pop
mov
subl
inc
cmp
and
rcll
sub
adc
pop
nop
push
pop
mov
xchg
les
sbb
ss
xor
popf
lock
js
pop
cltd
enter
xor
aas
lds
jne
push
insb
adc
pop
gs
push
nop
sub
outsl
xchg
add
in
arpl
dec
leave
in
bound
ja
les
xchg
and
cmp
sbb
ret
call
dec
ret
pop
hlt
repnz
fcmovnbe
xor
sub
lds
dec
pop
test
clc
notb
loopew
in
repz
ljmp
mov
jo
push
jle
sub
jge
push
das
insl
mov
xorl
xchg
mov
fisttps
test
ja
out
and
xor
imull
xor
sub
mov
stos
xchg
adc
jo
ds
fs
and
push
fwait
lret
mov
mov
ret
lods
push
pop
xchg
push
cwtl
in
scas
push
neg
mov
lret
mov
mov
fstpl
xor
pop
xlat
fsubrl
sub
fcomp
dec
ja
pop
ficompl
aaa
sarb
aas
pop
xlat
test
push
sub
aaa
fadd
cmpsl
or
aaa
pop
pop
rol
sbb
dec
mov
imul
test
jg
or
push
rorb
in
lock
jno
mov
and
xor
fwait
out
sub
ficoms
aam
ret
pop
repnz
jecxz
mov
rcl
or
mov
push
subb
xor
add
dec
aam
add
lock
add
mov
lret
fs
out
jg
cmp
push
out
mov
in
leave
imul
xchg
lcall
jmp
in
dec
cmpsl
cmpl
jne
and
push
fisttpll
mov
cmp
mov
fmuls
cmpsb
mov
mov
xchg
ficompl
fnstenv
push
pushf
es
repnz
sbb
xchg
push
dec
adc
and
aaa
loop
mov
mov
and
pop
vpshufd
js
inc
iret
popa
out
fisubrs
mov
mov
dec
orb
test
and
push
js
dec
pop
hlt
inc
mov
mov
les
jo
pop
movsl
mov
jbe
cmpsb
pushf
xchg
lret
icebp
mov
cmpl
cmp
pminsw
je
jle
sub
cmpsl
or
inc
xor
stos
jge
and
dec
rolb
add
lds
push
or
push
mov
pop
push
jg
data16
lret
cli
dec
imul
push
pop
jno
xchg
xor
jp
sub
lcall
sbb
xor
int3
std
adc
mov
xorl
inc
jmp
jmp
movsb
ret
int3
andl
loope
enter
shr
sbb
jge
sub
adc
sbb
outsb
mov
mov
mov
mov
xchg
negl
aaa
cmc
mov
fcompl
inc
sub
addr16
xchg
movsl
pop
dec
dec
fwait
cmp
imulb
gs
sbb
inc
stos
js
rorl
popf
adc
hlt
fldenv
ljmp
es
pop
xchg
dec
adc
and
sbb
out
or
pop
mov
xchg
jbe
outsb
js
xor
inc
lock
sbb
jmp
cs
loope
mov
loopne,pn
pop
into
into
fldl
jl
adc
daa
aam
mov
sarl
insb
cmpsl
imul
xor
and
addr16
lcall
mov
daa
add
jb
adc
and
loope
inc
push
je
rolb
push
dec
fs
dec
xor
aam
mov
dec
fnstcw
jg
in
es
ds
adc
mov
pop
rcl
adc
jmp
addr16
or
push
enter
test
popf
adc
rcl
adc
insb
sub
mov
insb
ret
pop
jo
hlt
adc
in
in
add
push
lcall
xchg
adc
push
mov
sub
mov
mov
fldl
sub
inc
shl
das
adcb
cld
inc
addb
jnp
aaa
sbb
add
shlb
test
sub
ss
mov
xor
cmpsl
pop
push
andb
cli
test
push
pop
testl
jno
sub
into
mov
mov
neg
ljmp
jne
nop
cltd
shll
mov
sub
cmp
nop
je
and
les
fmull
add
cmp
push
pop
jno
or
lock
roll
or
repz
roll
icebp
scas
ss
mov
pop
das
xchg
mov
jmp
sbb
mov
clc
fstl
inc
sub
cltd
sbb
fiadds
rcrb
rolb
cld
fsubrs
mov
lcall
push
idiv
fistps
and
push
sub
jge
xor
inc
push
jnp
lret
lock
adc
repz
lock
mov
imul
xchg
icebp
fstpt
fistpll
adc
pop
jge
xor
mov
repz
pop
cmp
and
push
lret
adc
popa
lret
lcall
inc
fnstenv
jbe
insb
rorb
nop
ja
cmp
rcrb
out
fstl
adc
mov
daa
fsub
inc
and
adc
rdpmc
xor
loope
test
lahf
push
cmp
sub
mov
js
je
ljmp
dec
jmp
sti
xchg
or
jl
add
out
loope
fwait
or
lcall
testb
fucomp
insl
test
push
aam
aam
repz
push
insb
das
sub
sar
fbld
sbb
out
flds
xor
setg
mov
in
xor
daa
push
mov
inc
loopne
movl
jle
mov
push
lods
imul
pop
lea
sbb
sub
or
je
dec
and
stc
mov
xor
pop
imul
out
test
jg
aas
ror
xchg
rep
sub
dec
and
sub
cmpsl
js
mov
test
jecxz
stc
pusha
sub
push
das
adc
outsb
xorl
fstpl
xor
lret
xchg
jl
inc
cltd
cmp
nop
dec
js
clc
call
push
out
into
stos
je
mov
mov
mov
shr
adc
std
push
add
shll
cltd
lods
pand
sbb
insb
sbb
pcmpgtb
jno
lods
adc
bound
inc
xchg
in
push
xchg
adc
das
pop
mov
jb
or
dec
mov
loope
push
or
pushf
xchg
loopne
add
pop
mov
jbe
inc
dec
lahf
filds
dec
rclb
mov
clc
xor
lea
sti
push
xchg
ds
xlat
mov
adc
push
pop
push
and
cld
adc
pop
mov
rolb
and
stos
rcll
jo
mov
test
stos
adc
js
fisubl
or
sbb
sbb
mov
adc
mov
imul
cmp
xchg
xchg
pop
sub
insl
popf
mov
test
enter
sbb
hlt
xchg
pop
cmp
rclb
jl
xchg
into
push
xor
push
fnstsw
rorb
jmp
stos
int3
mov
in
xchg
fdivr
insb
pushf
lcall
sbb
xor
mov
jmp
or
in
das
add
lods
dec
inc
aas
xchg
xchg
ja
gs
pop
aas
cmpb
cmpsb
sbb
ja
pop
pop
out
repz
call
and
sub
mov
testl
dec
xchg
out
mov
and
or
xchg
cmp
daa
push
cmc
out
cmp
push
xchg
enter
dec
fadds
int3
mov
jns
sbbl
sbb
outsl
adc
rolb
out
jnp
stc
pop
dec
xchg
xlat
sahf
das
add
jae
inc
mov
fildll
test
mov
pusha
in
push
lods
ret
fistpll
clc
push
push
stc
xchg
add
and
lock
fsubs
pop
mov
loopne
fnstcw
icebp
xchg
push
mov
dec
decb
mov
fisubrs
mov
sub
movsb
pop
and
or
xor
xchg
xchg
push
dec
xor
inc
daa
int
in
inc
test
lcall
adc
adc
mov
push
js
fincstp
scas
mov
outsb
jne
sbb
jo
push
insl
push
sub
sub
adc
mov
loopne
pusha
in
mov
pop
stos
adc
decb
scas
push
aad
add
cmpl
adc
dec
pusha
mov
insl
ror
inc
cmc
lock
mov
adc
imul
repnz
mov
cmpsl
jg
cmp
xor
adc
adc
hlt
sub
stos
lds
imulw
sub
imul
ret
lret
fdivp
call
in
fdivrs
dec
adc
call
cmp
loope
dec
inc
xor
lahf
rcr
lea
aam
ss
lea
adc
pop
loope
dec
vmovdqu
xchg
xor
imul
mov
pop
cmc
add
xchg
dec
sarb
mov
xchg
clc
std
mov
std
cmp
xchg
add
bound
mov
jne
int
addr16
or
push
xchg
rcrl
das
mov
push
and
inc
sub
pop
jp
sbb
sbb
imul
scas
das
mov
popa
inc
fwait
or
jnp
dec
sti
xchg
add
jg
mov
xorb
pop
lret
out
xchg
addr16
push
sub
gs
pop
mov
sub
fnstsw
aaa
push
pop
mov
out
aaa
sbb
and
dec
mov
mov
and
movsb
in
sbb
mov
sub
loope
xchg
push
mov
in
out
add
rcl
jb
stos
and
iret
xchg
divl
jbe
adc
iret
cltd
subb
ljmp
pop
or
mov
data16
nop
dec
push
pop
ljmp
aam
scas
imul
fstpl
call
in
mov
and
daa
jno
in
lahf
into
or
dec
add
pusha
jmp
in
scas
xor
cmpsl
xchg
cmp
mov
in
push
adc
fs
jno
into
addr16
mov
aam
inc
sub
lods
popa
sub
arpl
dec
jle
stc
int3
rep
or
push
push
stc
pop
leave
leave
jns
sub
fiaddl
adc
shlb
stc
in
call
pop
imul
sbbl
ret
push
xor
pop
hlt
imul
jns
jge
push
fdivs
xchg
mov
fwait
in
test
sti
push
scas
in
es
cmc
ret
dec
pop
sub
aam
xchg
mov
rcrl
dec
out
mov
mov
mov
addr16
out
mov
cmpsb
in
dec
xor
das
jecxz
push
test
icebp
mov
outsl
fwait
pop
out
repz
nop
jo
jl
and
addr16
pop
xchg
dec
aam
mov
inc
cmpsl
cmp
xchg
std
push
js
mov
add
je
or
icebp
lcall
xor
xchg
jmp
lds
jge
adc
pop
inc
adc
shrb
out
push
jle
out
mov
out
jnp
inc
lock
arpl
adc
push
rol
mov
ljmp
imul
push
outsb
fcoms
mov
outsl
outsb
jp
repz
jg
mov
ret
dec
pushf
cmp
fisubrl
daa
sti
cmp
jg
test
sbb
jbe
inc
lods
jbe
pushf
jo
pop
aad
add
rcll
mov
ss
bound
adc
lcall
imull
jns
pop
outsb
pop
inc
xchg
clc
cmp
xchg
cld
out
pop
push
mov
cmp
xchg
mov
int
jecxz
sbb
addr16
dec
mov
cli
sbbl
xchg
mov
cmp
lock
in
sbb
ficomps
sbbl
mov
ja
adc
xchg
sub
sub
loope
js
jnp
push
popf
notb
push
pop
mull
xchg
fs
xchg
cld
cmp
subb
lahf
pop
jle
das
push
push
mov
out
shl
imul
add
sbb
adc
xchg
mov
xchg
enter
mov
push
xor
out
in
and
xchg
mov
rcr
aas
push
scas
mov
xor
push
fisttpl
or
movsl
shr
cmp
repnz
enter
sub
aas
dec
call
xchg
xor
sti
lahf
jno
mov
xor
dec
in
jnp
aad
push
add
cmpsl
mov
xchg
int
xchg
dec
rcrl
jecxz
cwtl
add
cmp
cmp
cmp
sbb
clc
call
xor
hlt
aaa
test
mov
pop
std
in
and
mov
mov
lret
addr16
and
out
loope
pop
mov
andl
inc
add
mov
mov
sarb
shlb
aas
jmp
lds
dec
stos
fmuls
xor
mov
shlb
scas
cmp
push
loope
xor
pop
push
lcall
mov
cmc
insl
jns
xchg
sub
inc
or
mov
sub
call
data16
cltd
or
out
ds
iret
xchg
fwait
clc
in
scas
pop
add
mov
mov
repnz
xchg
xchg
inc
ljmp
xchg
sub
and
jp
pop
mov
pop
clc
test
pop
mov
inc
push
shlb
jns
mov
push
sub
mov
mov
loop
push
stc
adc
push
xor
imul
push
jb
ss
xor
rolb
shl
imul
ror
enter
btc
aaa
enter
xchg
mov
jp
dec
aas
push
cmpsb
jne
or
mov
sub
aam
lahf
in
jmp
sbb
or
jecxz
jnp
lret
or
mov
rolb
je
xor
mov
fdivrl
fs
push
das
push
jp
mov
popf
jne
ret
adc
cmp
dec
loopne
pop
or
or
inc
in
xchg
xchg
push
pusha
and
cmp
cmp
jo
xchg
add
dec
insl
in
xchg
fnstcw
mov
lds
push
or
push
fisttps
jp
out
negb
ja
push
insb
sub
adc
push
push
mov
pop
in
xor
cli
cmc
push
pop
scas
sbb
cmp
sub
xor
aad
mov
bound
out
sub
lock
fstpl
cmp
cmpb
cmpsb
xlat
aam
adc
aad
js
int
push
xchg
clc
icebp
bound
lods
testl
test
adc
leave
cs
inc
mov
pop
pop
pop
inc
popa
aam
rclb
xchg
mov
mov
inc
ss
jge
mov
insb
scas
popf
add
cltd
lret
lods
inc
repz
add
mov
inc
cld
hlt
push
stos
sbb
add
lcall
test
stos
push
adc
roll
cvtps2pi
pop
repnz
lahf
mov
aam
mov
push
repnz
xor
xchg
pop
ds
push
mov
mov
pop
dec
mov
dec
pop
iret
cld
mov
pop
pop
into
das
jle
adc
cwtl
leave
out
inc
aaa
pop
sets
mov
test
rcr
sbb
std
test
sbb
xor
sub
lea
fsts
rorb
xor
mov
jns
sbb
xor
fdiv
clc
imul
ds
fs
in
aas
pop
inc
push
rclb
loop
fs
jo
jle
push
loopne
sub
or
sbbb
aad
movsb
movsb
sti
dec
or
out
sbb
decb
out
lret
shrl
fadd
push
pushf
sbb
sbb
dec
cmp
xor
mov
lahf
sbb
sub
sub
mov
mov
pop
cmp
pop
cmpsb
mov
and
inc
mov
xor
sbb
std
outsl
xor
push
mov
inc
js
cmpb
adc
iret
xchg
in
sbb
mov
bound
jle
pop
imul
xchg
lcall
lret
xor
pushf
rcll
repz
inc
cli
mov
xor
jge
jmp
xchg
jecxz
sub
gs
int
or
push
js
loope
pushf
ljmp
adc
daa
xchg
lcall
scas
mulb
mov
push
mov
pandn
xor
cmp
rol
cld
push
sub
in
shl
mov
sbb
xchg
dec
push
out
arpl
or
movsl
inc
or
notb
imul
clc
scas
fucomi
sbb
test
push
lods
xor
fildl
push
data16
mov
movsl
jecxz
mov
dec
pop
test
xchg
test
inc
mov
iret
loop
mov
jge
or
cs
jmp
fmuls
orl
jns
ja
mov
sbb
in
jmp
add
xchg
das
int
out
mov
mov
cmpsl
dec
ss
push
mov
add
loopne
rcr
cwtl
push
lea
adc
clc
sarl
mov
call
insb
mov
xchg
stc
por
cld
lock
in
and
dec
dec
jl
mov
mull
cs
xchg
cmp
push
fisubrs
in
adc
push
sub
ja
jo
cmp
call
jbe
jo
gs
sbb
fildll
js
cmpsb
jno
into
xor
xor
ret
dec
xchg
cmpsb
inc
sub
lock
int3
pop
xchg
push
mov
insl
sub
addr16
sti
jns
not
aam
push
push
mov
cmp
inc
xchg
xchg
dec
cmp
scas
inc
mov
out
fmuls
mov
mov
repz
idiv
dec
test
cwtl
xchg
lds
inc
lcall
mov
outsl
insl
sbb
push
mov
pop
stos
pop
and
mov
imul
sbb
ds
mov
int
push
xchg
sbb
nop
mov
in
jle
jbe
adc
sbb
sbb
jle
inc
jge
xchg
inc
lahf
es
aad
inc
sarl
or
inc
jmp
sahf
sbb
es
sbb
jle
pop
fcmovb
add
scas
cwtl
mov
mov
out
cmp
arpl
sub
push
cmpsb
std
ror
and
das
mov
lds
or
inc
mov
push
fwait
insl
pop
aaa
sbb
les
sbb
xorl
ss
xchg
jle
add
movsb
movsb
lahf
or
mov
sub
xchg
call
stos
pop
fimull
hlt
xchg
aam
push
scas
push
mov
jno
loopne
cltd
sub
fstpl
aas
mov
popa
ret
mov
mov
add
sbb
pop
call
loopne
cmp
inc
mov
lock
push
fmull
push
jle
jp
in
cmp
and
mov
ret
mov
out
sub
mov
xchg
add
sub
movsl
cmp
dec
outsb
adc
test
push
add
adcl
mov
daa
jb
mov
inc
mov
mov
xor
or
xor
sbb
repz
movsl
fwait
ja
xor
pop
ficomps
sub
xchg
pop
and
nop
clc
sub
sbbl
movsb
and
das
adc
inc
fstps
into
repz
std
mov
lock
imul
arpl
nop
xor
xlat
imul
fwait
arpl
lcall
add
ljmp
leave
dec
subl
and
xchg
test
ljmp
mov
lock
arpl
jmp
fimull
or
mov
cmp
jae
sub
fists
fsub
and
cld
jbe
sti
or
mov
cs
or
mov
test
xchg
test
insb
fdivl
add
adc
into
aas
sahf
out
mov
pop
ljmp
cwtl
add
sub
pop
dec
daa
lds
xchg
push
das
mov
xor
out
mov
fldl
div
push
aas
cltd
into
sbb
lahf
bound
arpl
and
cmpsb
movsl
mov
addr16
shll
popa
pop
fucomip
mov
lds
lods
push
mov
cli
je
inc
aam
mov
ret
cli
sbb
mov
mov
out
push
popa
or
leave
cmpsb
xchg
mov
and
jmp
pop
fldcw
ret
adc
lret
lock
nop
jle
mov
cmp
inc
and
pop
inc
repz
sub
mov
std
inc
imul
in
xchg
les
dec
adc
cmpb
and
sbb
mov
repz
in
das
adc
jmp
sahf
inc
sbb
sbb
jo
fucom
xchg
jo
sub
js
or
dec
fisttpll
inc
adc
add
movsl
xorb
and
pop
cld
mov
cwtl
push
push
inc
fcoms
gs
and
push
adc
int
out
jbe
leave
inc
lds
enter
mov
xchg
sub
xor
cmp
cmp
and
into
rclb
adc
movsl
fidivl
clc
push
rcrl
ss
loop
push
lods
pop
and
pop
cwtl
sbb
xchg
fldenv
pop
std
pop
mov
insl
jo
sti
mov
jbe
stos
pop
or
pop
clc
cmp
mov
cmp
loope
push
jne
xor
inc
mov
mov
xchg
or
mov
push
and
or
in
dec
imul
jg
clc
sti
lea
in
filds
hlt
jl
and
jno
mov
add
and
or
inc
sbb
or
hlt
int3
dec
mov
jo
mov
sahf
inc
mov
movsl
or
mov
sbb
ds
jno
cltd
lock
mov
cmp
fbld
dec
jb
test
out
imul
sub
ficompl
pop
xor
out
into
jecxz
pop
or
pop
adc
adc
js
xor
jle
inc
ljmp
imul
rol
lea
in
jno
sbb
xor
scas
fld
loop
or
leave
jge
cli
das
xor
dec
insl
xchg
jle
adc
xchg
cli
lods
jbe
inc
aaa
arpl
popf
rcr
push
inc
repz
lret
icebp
leave
sti
mov
mov
pop
sub
movsl
ret
jno
sub
xor
mov
and
add
push
and
aad
push
or
test
clc
pop
imull
pop
data16
xor
fldpi
js
pop
cmp
mov
cltd
repz
dec
push
adc
sarb
and
in
ss
jg
mov
imul
cmp
cmpb
mov
call
inc
mov
dec
pop
cmp
inc
xchg
jbe
cmc
cli
cmp
sub
or
adc
mov
pop
sbb
mov
mov
shll
sub
dec
and
shll
sbb
imul
lcall
dec
out
adc
push
xor
test
insb
jge
mov
and
cmc
pop
in
jg
mov
in
lea
rorl
mov
das
mov
fnstsw
aad
jl
jmp
cltd
pop
jl
cltd
outsb
xchg
test
mov
and
push
test
fsubl
inc
xorl
in
sub
sbb
ljmp
and
scas
aam
add
dec
pop
dec
pop
lods
shll
add
cmp
jbe
sub
lods
add
cwtl
imul
xor
test
mov
lods
inc
sub
push
les
cwtl
push
xor
aas
loopne
adc
mov
int
lock
outsl
adc
xor
cmp
mov
fmul
dec
fistpl
outsl
imul
mov
pop
sti
fisubrl
push
imulb
cmp
push
aas
sti
dec
mov
sub
or
xchg
testl
insb
aad
cmp
cwtl
mov
and
addr16
jle
jae
aad
sub
mov
ja
fidivl
jg
addr16
xchg
cmp
jmp
data16
data16
pop
mov
pop
dec
push
dec
lret
in
or
dec
inc
push
pop
lret
test
push
out
icebp
xor
sub
cmp
cmp
int3
in
test
mov
jecxz
sbb
les
jb
mov
ret
jecxz
pop
mov
test
xor
cmc
outsl
jne
push
pop
in
inc
xchg
push
mov
jne
fistpll
lret
js
add
inc
xchg
jle
clc
loop
fadds
and
rclb
cwtl
adc
clc
mov
lds
imul
lea
mov
repnz
inc
mov
pop
test
jg
xlat
jb
mov
adc
into
jne
loop
fldpi
push
or
cmpsl
test
imul
jbe
test
push
iret
or
sub
sbb
std
sub
in
mov
in
push
xlat
jge
pop
adc
out
incl
and
add
icebp
fisubrl
imul
aam
in
fidivs
mov
mov
je
or
aas
out
add
xor
aam
adc
das
aas
or
push
je
mov
xor
lods
cs
jl
push
cs
jne
aam
cmpsb
sbb
outsl
out
push
or
scas
cmp
fidivl
and
imul
pop
inc
scas
xchg
sbb
pop
cmp
fdivs
dec
mov
sbb
jns
mov
mov
cmpsl
stos
sub
fwait
push
out
and
lock
xchg
add
mov
sub
push
dec
mov
add
mov
sarl
stc
clc
inc
mov
ds
test
sub
pop
mov
loop
inc
xchg
enter
add
add
repnz
inc
cli
jg
test
cmp
scas
and
test
sub
dec
leave
ja
inc
jb
ret
test
cmp
daa
ja
in
xor
std
mov
pop
and
cmpsl
jno
repnz
inc
lahf
jns
xlat
push
jbe
jnp
xchg
fdivp
xchg
ret
dec
imul
pop
sbb
movl
pop
or
mov
roll
mov
push
scas
icebp
add
push
stc
outsb
add
inc
int3
mov
test
int3
dec
movsb
lret
dec
js
cmp
and
icebp
sahf
sub
mov
pop
mov
push
cmpsl
inc
jl
clc
insl
xchg
test
inc
push
mov
xor
dec
jmp
sbb
mov
pop
xchg
int3
int3
mov
adc
je
jnp
or
mov
iret
mov
push
cmc
dec
inc
push
jbe
jne
cs
hlt
pop
mov
in
fisubrl
fs
mov
in
push
add
shlb
jmp
mov
lock
sbb
xor
addr16
xchg
stos
in
mov
cltd
movsb
cmpl
dec
ret
std
xlat
jge
in
out
sbb
jo
jmp
mov
pusha
or
inc
mov
inc
rcr
dec
pop
sub
sub
or
add
insl
or
or
pop
dec
xchg
arpl
push
jp
das
xor
rorb
push
repnz
jo
pop
ja
sbb
xor
sbb
stc
mov
aam
or
pop
push
and
xchg
ret
mov
jmp
inc
sub
leave
es
popf
jo
mov
pop
or
mov
mov
inc
jbe
pusha
or
xchg
adc
jl
clc
cmpsb
int3
mov
pop
sbb
and
test
pop
icebp
test
adc
fists
mov
lods
cld
in
ljmp
pop
in
xchg
pop
ja
arpl
mov
je
adc
sbb
in
push
bt
stos
xchg
and
lea
roll
and
sub
sbb
fmull
je
mov
mov
data16
sub
xchg
loopne
in
push
je
mov
dec
sti
push
lods
lock
jmp
dec
add
sub
out
xor
roll
lods
pop
mov
popa
pop
shll
test
dec
or
imulb
testb
add
and
xor
leave
lea
and
insl
les
cwtl
cli
lea
scas
inc
mov
shll
inc
jo
sbb
and
mov
aaa
mov
test
inc
imul
jle
addb
jmp
das
repz
jae
inc
loop
push
cmp
mov
jmp
cmp
cmpsl
js
out
cmc
xor
nop
insl
mov
xchg
arpl
aam
mov
mov
mov
mov
test
icebp
mov
dec
cmp
ds
and
fmull
shll
lea
lret
lret
aad
push
int
lock
out
push
push
push
sub
xchg
dec
inc
aad
stc
push
scas
sbb
arpl
mov
pop
jb
sub
jge
subb
fisubl
push
and
aaa
hlt
fadd
es
aad
mov
shrb
subb
popa
pop
stos
jno
movsb
xor
repnz
xchg
add
dec
jg
jae
mov
int
push
in
test
je
mov
push
inc
in
inc
pop
mov
mov
xchg
sub
xorl
adc
dec
jo
mov
xchg
inc
mov
and
xchg
scas
inc
xchg
add
popf
shrl
movsl
ja
jg
outsl
hlt
adc
adcl
fxch
mov
and
lret
outsb
cwtl
mov
jo
stc
inc
cmp
cmpsb
mov
lock
shll
xor
xorl
xchg
xchg
or
adc
mov
out
stos
inc
cmp
adc
out
adc
xchg
int
out
les
xchg
in
aad
fwait
mov
add
outsl
ficoms
sbb
inc
ja
or
jns
mov
sbb
xchg
mov
subb
sub
xchg
lds
adcb
push
mov
mov
xchg
sub
lret
fisubrl
pusha
dec
fs
jno
pusha
sbb
xor
scas
inc
gs
inc
std
dec
sub
idivb
gs
addr16
xchg
stos
rcll
shr
lret
sbbl
push
pop
jb
orb
lret
or
xor
jae
rclb
cwtd
jb
ja
shlb
aad
pop
xor
test
inc
push
les
jno
or
jnp
and
sbb
insb
mov
cmp
xchg
mov
push
in
inc
push
aas
mov
push
clc
cmp
inc
mov
sti
in
mov
loope
xchg
outsb
push
lret
fwait
cmpsl
cmpsl
dec
cmp
shl
jne
pushl
cwtl
stc
or
and
outsl
jl
mov
jo
in
pop
test
bound
test
xor
mov
cmp
jmp
cmp
roll
mov
mov
push
xor
rcr
lret
mov
pop
mov
xchg
cmpsb
sub
jecxz
fs
adc
and
inc
pop
js
mov
and
mov
fnstcw
pushf
adc
out
push
xor
loope
loope
mov
add
test
lret
mov
xorb
adc
adc
push
js
sbb
xlat
xor
inc
jp
popa
mov
xchg
enter
adc
stos
loope
jg
lret
pop
test
sub
add
stos
dec
dec
repz
xchg
mov
pop
test
andb
push
mov
fnstcw
mov
adc
add
out
mov
pop
das
adc
cmpsl
pop
cmp
dec
dec
bnd
cmp
test
xchg
lods
sub
mov
mov
outsl
rsm
fdiv
aaa
test
test
mov
push
or
adc
xchg
mov
inc
ret
pop
ret
out
add
and
ret
push
enter
pop
mov
dec
and
jae
std
dec
aad
sahf
jge
fwait
pop
jo
dec
outsb
xor
call
mov
push
in
mov
jge
or
mov
mov
aam
je
fdivs
fildl
nop
add
adc
mull
mov
xlat
aad
pop
mov
sbb
icebp
gs
or
push
jb
push
cmpl
lret
jae
push
dec
fbstp
push
push
mov
sbb
xor
imul
jns
popf
pop
stos
loopne
ret
xchg
push
sbb
lea
das
pushl
hlt
xlat
fs
mov
jo
cltd
mov
lock
leave
pop
sti
test
pop
lret
fmuls
js
xchg
das
inc
lods
scas
ret
lock
push
pop
leave
jns
push
xchg
test
fnsave
fcmovu
mov
popf
xchg
fdivrl
cmpsb
add
popf
lods
cwtl
out
arpl
addr16
mov
das
sbb
je
sub
test
jbe
lret
cli
int
mov
ds
mov
fildll
dec
sub
cmp
dec
aas
dec
imul
int
jle
adc
repz
mov
pushf
and
lods
mov
push
mov
xchg
pushl
xchg
in
fwait
lock
cmovnp
arpl
jmp
add
jge
call
mov
mov
push
fidivrl
and
rorl
add
popl
push
lahf
or
add
inc
ss
dec
sti
pop
mov
cmpsl
xor
mov
arpl
data16
and
popf
cmpsb
mov
dec
mov
adc
enter
faddl
les
leave
jle
mov
sbb
cmc
jl
out
xor
icebp
rep
js
loop
testb
cmp
cs
cld
fs
push
inc
int
lock
pop
shlb
fs
pop
dec
test
jle
jle
and
sbb
pop
data16
mov
mov
jle
jne
xor
shrb
pop
mov
je
fs
rcrb
mov
pop
sbb
sub
hlt
or
cmp
sub
test
dec
add
inc
int
repnz
cmp
adc
aaa
sbb
mov
push
aam
xchg
lods
jmp
enter
xor
mov
or
repnz
movsl
in
les
mov
iret
inc
jns
les
mov
and
mov
int3
sbbl
pop
push
dec
ror
cmp
mov
out
push
pop
mov
xchg
in
jne
jnp
jmp
cld
repz
icebp
push
cmc
call
jg
hlt
pop
dec
cmc
dec
pusha
pop
insl
enter
dec
ret
ss
imul
cmp
addb
mov
push
mov
test
pop
xchg
mulb
and
leave
jp
repz
lcall
pop
insl
les
xor
jbe
fs
xlat
fdivl
jp
rorb
sub
or
xor
dec
xchg
test
fdiv
sbb
arpl
aas
movsb
jbe
addr16
mov
test
out
out
cmp
or
cs
fldcw
loop
sbb
mov
xchg
por
add
das
or
inc
pop
xlat
mov
xchg
pop
xchg
pop
sbb
rclb
mov
jl
cs
mov
movsb
inc
or
imul
testl
jmp
sbb
mov
mov
ja,pt
and
scas
mov
dec
test
mov
lock
and
push
jne
fcmovb
pop
mov
insl
and
ficoms
in
mov
test
decl
fucomp
xchg
pop
jo
enter
sbb
xchg
pop
clc
mov
mov
push
movsl
dec
fs
ljmp
or
dec
das
pop
mov
mov
fisubs
mov
test
sub
push
cli
ljmp
cmpsl
dec
mov
cmp
js
nop
mov
cmp
aam
xor
add
out
fsts
ljmp
lcall
das
inc
movsl
repz
pop
fisttps
mov
jnp
scas
ljmp
fdivs
pop
jp
cwtl
or
pushf
xor
sbb
rcll
sub
es
add
ljmp
jns
inc
call
test
pop
rcrb
jnp
popf
mov
cs
addl
and
fldcw
mov
add
ficoml
cmp
add
mov
xchg
jmp
int
pop
mov
adc
incb
pop
cld
push
pop
cmpsl
sbb
loopne
jge
mov
pop
mov
mov
jg
jb
fldt
jecxz
mov
out
inc
sarl
inc
outsb
fcomps
mov
imul
jmp
add
xor
into
push
lods
cwtl
lcall
jge
out
and
mov
mov
js
mov
movsb
push
dec
mov
mov
cmp
adc
jl
rorb
push
lock
inc
jbe
lcall
jecxz
cmpsl
adc
push
dec
and
test
mov
xor
imul
in
lea
add
xor
lcall
insb
and
out
jmp
divl
sbb
out
and
cmp
xor
mov
sub
cmc
push
test
je
inc
xor
mov
dec
fdivrp
loope
lret
loop
pop
fsts
cmp
fisubs
shll
pop
adc
rorl
adc
test
loope
mov
data16
int3
stos
xchg
div
jmp
pop
sub
push
loope
add
lock
lahf
cmc
inc
mov
cwtl
jle
in
jp
adc
les
adc
pop
neg
push
pop
dec
cmp
push
sub
adc
push
and
push
std
dec
repnz
jle
sarl
out
jp
xchg
dec
rorw
js
cmp
dec
out
push
cmpsb
es
push
mov
repnz
mov
gs
pushl
mov
adc
fidivrs
lret
xchg
jne
leave
imul
idivb
fwait
jp
mov
add
inc
std
mov
enter
dec
icebp
sahf
dec
in
clc
mov
negb
iret
sub
out
in
jns
lods
aad
mov
stc
dec
hlt
inc
xlat
add
aad
adc
mov
and
pusha
jo
test
jo
ljmp
in
push
mov
xchg
shlb
pop
dec
stos
push
jae
test
inc
cmp
frstor
sbb
jo
xor
sbb
popf
sbb
xor
test
pop
pusha
mov
movsl
mov
addr16
fsubl
push
popl
xchg
lods
popa
insl
push
push
inc
adc
insb
aam
inc
cld
js
mov
stc
jb
movsb
inc
aam
xor
add
mov
mov
inc
lock
lret
aam
or
xchg
mov
sbb
adc
or
jae
hlt
aad
dec
cmp
dec
push
adc
idiv
sbb
jmp
ljmp
sbb
arpl
jecxz
iret
out
cmp
jo
out
xchg
imul
js
or
push
cmpsb
cltd
rorb
jo
mov
jecxz
dec
fistpll
jmp
mov
cs
sbb
out
out
mov
and
out
loope
push
adc
pop
stc
dec
insb
andl
inc
mov
lds
daa
test
mov
lods
mov
aas
push
ss
mov
pop
sub
xor
jl
cvtps2pd
sub
inc
add
aas
or
aas
cmc
rcr
mov
fcoms
xor
pop
sub
adc
arpl
jae
fs
movsl
cltd
mov
mov
test
xlat
and
and
loope
aad
inc
imul
sub
arpl
sub
cmp
pushf
ss
clc
mov
and
jp
jle
ret
fwait
aas
out
sbb
xor
fcoml
ja
ds
xchg
fisubs
movsb
push
arpl
pop
loopne
mov
fsub
mov
pop
test
call
push
mov
iret
ret
mov
nop
mov
mov
xor
inc
and
fidivrs
mov
dec
dec
fiaddl
cmp
push
je
pop
cltd
ja
mov
inc
push
and
fisubrs
int
data16
push
gs
div
out
mov
or
je
out
xor
scas
das
push
mov
mov
mov
test
cmpsl
mov
xchg
nop
lea
imul
leave
bound
or
loopne
les
inc
das
xor
loopne
xchg
jge
fs
repz
adc
int3
scas
loopne
leave
push
mov
push
add
outsl
shll
pop
in
cli
pop
cli
add
int3
in
add
in
xchg
in
mov
lds
mov
adc
dec
xchg
daa
fnstcw
mov
jl
aad
push
sahf
sbb
ljmp
dec
pusha
ret
sbb
xor
lods
in
sub
jo
pusha
mov
add
mov
xchg
or
dec
mov
inc
jmp
jo
cld
inc
cmpsl
jb
xchg
mov
push
icebp
roll
mov
popa
add
inc
loope
jmp
push
fnstsw
pop
mov
sahf
shll
rol
inc
popf
dec
inc
jbe
stos
into
daa
jmp
mov
push
fisttpll
mov
mov
sbb
sarl
fidivrs
rcrb
jecxz
xor
mov
add
imul
fwait
lods
xchg
mov
dec
jg
sbb
les
mov
test
mov
aam
sbb
pop
pop
daa
or
cmc
out
or
add
xor
pop
arpl
cli
and
xor
lahf
xchg
cmp
cld
or
sub
loopne
cmp
clc
into
clc
fiaddl
xchg
jmp
fnop
ss
pop
shrb
jbe
mov
mov
push
mov
scas
test
push
ds
lods
loope
and
adc
repnz
je
dec
icebp
aam
pop
or
test
add
sub
sbb
mov
jae
adc
dec
sub
sahf
xor
es
test
lret
mov
out
xchg
mov
jne
push
inc
leave
clc
mov
mov
aam
loopne
js
inc
mov
mov
ror
sub
js
inc
and
xchg
rol
js
stos
call
sub
adc
scas
add
push
push
adc
or
xchg
sub
imul
mov
sbb
nop
mov
leave
mov
sbb
jl
bound
dec
jnp
push
lret
sarb
dec
aam
out
es
into
js
pop
mov
jmp
sbb
jns
loope
xchg
in
in
xchg
cmp
jmp
jmp
sbb
iret
or
pop
mov
inc
loop
mov
mov
xchg
jl
and
mov
orl
lret
sbb
rclb
mov
jae
outsb
adc
mov
dec
xchg
int
push
ds
lcall
jb
push
ss
das
sbb
sub
push
mov
cmp
jno
push
jmp
adc
add
mov
arpl
xchg
push
roll
xchg
cmp
adc
cs
mov
call
xchg
cmc
cmp
js
fxtract
mov
fucomip
ja
lea
pusha
fdivp
mov
xor
aam
xchg
lods
aaa
daa
test
out
add
pop
xchg
mov
arpl
mov
daa
leave
jge
filds
fcom
movsb
sub
dec
shll
cmp
push
mov
lock
push
jecxz
mov
pushf
cld
outsb
cmpsl
cs
pop
pusha
pop
lahf
insb
mov
jge
fnstcw
mov
cwtl
inc
adc
jb
nop
js
xlat
lds
or
xchg
adc
and
push
ljmp
int
into
jl
sub
push
sti
fcompl
add
cmpsb
int
pusha
inc
loope
sahf
and
pop
jecxz
jg
pop
in
mov
mov
mov
popa
jp
ja
fcomp
or
mov
aad
mov
and
adc
jo
cwtl
loop
mov
aaa
ss
inc
sub
inc
pusha
in
sar
insl
mov
sbb
or
out
or
cmc
ljmp
adc
mov
pusha
sub
std
or
cltd
mov
jne
push
jl
inc
in
or
hlt
dec
mov
lods
or
mov
cltd
pop
and
cmpsl
cs
shll
cld
shr
ds
dec
mov
aaa
cmpsl
and
mov
subb
ret
mov
sbb
std
mov
pushf
push
lds
and
and
dec
sbb
cli
cltd
cld
rcll
lock
sahf
pushf
sub
dec
add
icebp
dec
cs
fbld
xchg
test
aas
or
sbb
mov
sbb
pop
mov
out
cmc
mov
jg
pop
fisttps
dec
lahf
push
cmp
lods
nop
pushf
add
mov
mov
mov
inc
shlb
std
jo
fdiv
inc
sbbb
leave
add
xchg
push
out
sub
xor
xor
and
inc
mov
jae
dec
stos
or
lahf
mov
ss
mov
movsl
hlt
sarb
inc
sub
add
mov
in
mov
or
les
add
cmp
scas
cli
jl
mov
pushf
xchg
roll
jg
outsl
scas
push
imul
cld
mov
xor
fldcw
or
sbb
xchg
loopne
scas
jl
movsl
addr16
push
inc
xlat
push
cs
inc
insb
sub
adc
mov
or
add
sub
xchg
icebp
out
cmpsl
push
inc
inc
cmp
adc
sub
aas
cli
xchg
mov
or
cmc
pop
dec
sbb
jns
stc
js
cwtl
jns
pinsrw
add
mov
shrb
je
cli
pop
std
icebp
sub
arpl
lcall
pop
addl
fwait
add
xor
push
sbb
pushf
bnd
adc
and
das
fcmovnbe
sar
pop
add
test
adc
add
cmpsl
loope
push
divb
or
push
cmp
movsb
loopne
xchg
push
aam
popf
xchg
enter
pop
mov
jmp
inc
movb
enter
cmpsb
aaa
mov
mov
cwtl
outsb
cmp
xchg
xchg
inc
xchg
int
mov
xchg
pop
add
xchg
xor
or
outsl
push
push
inc
sbb
xchg
lcall
jne
mov
add
sbb
mov
sbb
jmp
or
add
pushf
das
test
lret
fs
adc
jns
inc
in
xor
push
gs
in
xor
xchg
shll
xchg
mov
aad
loope
cld
dec
xchg
push
xchg
pop
aas
jge
sub
test
adc
fyl2x
lcall
aaa
mov
out
xor
subl
mov
test
dec
adc
mov
or
daa
inc
insl
std
add
push
jno
jne
or
aaa
push
jle
xchg
pop
sub
mov
cld
fisubl
fisttpl
pop
lds
inc
inc
lahf
lret
lock
fldcw
mov
hlt
xor
push
mov
repnz
fimuls
loope
sti
push
sbb
adc
inc
xchg
clc
or
ss
push
mov
xlat
in
xchg
or
cld
mov
idivb
push
loopne
jp
stc
push
adc
adc
pop
push
inc
xchg
cmp
loop
dec
push
imulb
cld
imul
jbe
push
add
push
test
repnz
scas
sti
mov
daa
xchg
fsts
mov
adc
into
xchg
push
inc
mov
cltd
adc
cwtl
imul
int3
or
das
inc
sti
lret
pmullw
xor
cld
sbb
rcrl
lock
mov
xchg
jne
arpl
mov
bound
or
push
push
bound
sti
stos
mov
fmull
cltd
arpl
mov
mov
dec
cli
xchg
mov
pop
inc
pop
adcb
or
lods
arpl
sub
xchg
test
lds
popl
pop
xlat
lret
fistpll
dec
lods
mov
sbb
xor
sbb
push
cmp
repnz
mov
leave
in
push
push
fbld
imul
js,pt
movsl
insb
aad
add
push
or
or
daa
push
mov
sub
rorb
cmp
clc
and
outsl
xor
jo
pop
cmp
je
fsubrp
test
int
cli
movb
pop
arpl
inc
divb
cmpb
cmp
xchg
call
fimuls
xor
jnp
movsb
dec
addr16
cmp
add
push
jle
sbb
and
fbstp
jl
sub
fstl
mov
xchg
inc
jb
fsubrp
inc
pop
jns
inc
cs
rcll
sub
cmp
add
scas
int
cs
dec
mov
adc
in
lock
nop
cmpsl
mov
or
scas
fildl
jb
sub
xor
aaa
std
cltd
sub
stc
jp
test
jl
int
pop
rclb
fwait
outsb
addr16
test
popf
ror
mov
outsl
insl
mov
movsl
mov
rolb
sbb
je
jg
push
faddl
out
imul
xchg
push
sub
arpl
mov
or
aas
mov
cmpsl
and
ljmp
sub
inc
clc
loop
fists
repz
xchg
push
sbb
sub
pusha
mov
sbb
pushf
addr16
xchg
addr16
ss
aaa
outsb
or
aaa
lcall
lea
es
in
jmp
mov
adc
push
std
cli
lods
lret
mov
dec
mov
cmp
subb
mov
filds
hlt
out
sub
pop
mov
arpl
push
mov
or
jns
dec
fsubrl
shlb
push
jno
adc
frstor
jo
xor
fists
mov
gs
dec
sbb
sahf
cwtl
scas
jmp
jo
mov
imul
jns
aaa
adc
dec
cmpsl
addr16
loope
or
pop
push
mov
add
jg
push
hlt
pop
fwait
insb
icebp
dec
mov
shrb
neg
fsub
shl
pop
jmp
lea
mov
inc
push
lea
pop
xlat
fwait
shl
mov
xor
enter
lock
cmp
add
add
xchg
dec
mov
arpl
jle
push
arpl
fisubs
sub
push
inc
mov
adc
stos
mov
and
add
movl
test
push
out
and
jae
adc
repnz
shrb
aad
fdivrp
mov
cs
std
add
pop
outsl
push
adc
mov
out
add
in
mov
and
cmp
xor
insb
out
js
aam
inc
ret
jo
dec
cltd
push
or
pop
pop
or
fs
jmp
stc
nop
push
mov
xchg
cmpsl
push
push
aas
xchg
packuswb
xchg
jmp
jle
xchg
fisubs
mov
mov
rclb
cmp
jb
jmp
inc
jbe
mov
out
mov
cli
addr16
push
sbb
mov
stos
gs
mov
aad
pop
inc
mov
lods
outsb
sub
mov
jmp
push
push
cmp
jno
xchg
inc
push
pusha
mov
dec
cld
test
repnz
mov
mov
ja
jno
jno
sub
loopne
xchg
lds
inc
out
dec
xchg
imulb
stc
and
push
push
mov
cmp
sahf
in
push
sub
mov
add
xchg
in
in
popf
sbb
mov
gs
add
push
adc
and
orb
xchg
lods
adc
inc
fdiv
dec
sahf
std
imul
jo
mov
cmc
in
cmp
sub
or
xchg
mov
mov
cmpb
mov
add
pusha
inc
out
aaa
xchg
dec
sbb
addr16
aam
mov
clc
xor
push
pop
sub
mov
lods
int
addr16
hlt
aaa
push
shrl
loop
add
xchg
rolb
lret
pop
adc
stos
xchg
and
daa
inc
and
out
outsl
adc
jl
aas
cltd
aam
inc
jp
je
mov
pop
push
push
cli
xchg
and
and
xchg
pop
adc
mov
xchg
sub
rcll
in
push
repnz
push
pop
and
popf
mov
dec
out
dec
push
ja
xor
gs
cld
movsl
push
pop
fstp
push
inc
mov
mov
ja
popa
mov
adc
out
sub
sahf
cmp
dec
add
dec
clc
xchg
adc
mov
mov
shlb
in
jnp
mov
or
call
lods
adc
cmp
and
aad
ret
mov
loopne
or
stos
or
loope
in
sub
sub
sub
inc
roll
std
pop
pop
jae
xchg
cli
mov
movsl
ret
add
pusha
out
ljmp
aaa
insl
jbe
add
mov
les
insl
xor
mov
imul
fwait
jns
sub
cwtl
aas
stc
fnstenv
xor
xlat
shlb
jl
lods
pop
fs
add
xchg
jno
push
adc
add
sbb
notl
cmp
sbb
adc
int3
cmp
rcl
lret
cmpsb
loope
adc
in
ficoml
in
mov
push
xor
imul
push
xchg
int
cli
test
cld
pop
xor
nop
cltd
stos
or
bound
sub
lret
insb
push
call
cmp
push
shrb
push
jae
sbb
push
ret
lods
xchg
scas
push
loope
es
sub
std
jmp
pop
pushf
xchg
loop
mov
xor
insl
loopne
jnp
mov
and
adc
hlt
mov
fisttpl
xor
bound
push
imul
int3
mov
test
xchg
ss
popf
jae
and
xchg
fadds
adc
scas
ret
imul
or
mov
es
push
adc
cmp
sbb
mov
sahf
jnp
das
push
outsl
push
sbb
push
popf
in
push
fists
test
push
xor
loope
mov
sahf
push
sub
pop
cmp
xorb
sbb
add
fmuls
push
xor
outsl
push
mov
add
mov
jecxz
pop
xchg
idiv
sub
daa
imull
and
movsl
sbb
jbe
popa
fsubl
push
pop
and
sbb
fdivrs
lret
fcomps
dec
outsl
stc
sbb
insb
mov
fadds
frstor
daa
stos
bound
pop
arpl
shl
and
jo
mov
pop
testb
cmp
jmp
lods
jb
frstor
adc
les
jae
xor
repnz
xor
rolb
fwait
aas
rcl
cmpsl
outsb
data16
sub
std
dec
xchg
dec
xor
cmpsb
jge
outsl
loope
movsw
pushf
pop
cmp
lea
fcompl
jmp
push
pop
in
rcr
or
add
lret
aas
or
mov
add
out
rcrb
addr16
fdivrl
pop
and
pop
push
lods
fisubs
fcmovnbe
cmpsb
sub
ret
fistpll
fxch
imul
cli
dec
adc
pop
mov
ds
push
gs
cmp
push
lahf
add
mov
cmp
xor
mov
sahf
ljmp
sub
in
sbb
stc
cmpsb
loopne
adc
in
push
ljmp
decb
js
mov
pop
pop
in
insl
mov
adc
xchg
xchg
outsb
in
sbb
cwtl
pusha
sbb
or
or
jecxz
mov
cmp
out
test
sti
xorl
hlt
xchg
fwait
pop
push
hlt
mov
xchg
lret
xor
cltd
pop
xorl
pop
in
cmc
or
jp
ret
out
dec
stos
les
add
cmp
mov
test
stos
loopne
sahf
lock
push
repnz
push
repz
out
call
inc
push
imul
outsb
jle
ret
popf
int3
cld
dec
aad
push
sbb
dec
popf
call
adc
cmp
inc
jg
iret
cmpb
pop
xlat
mov
pop
sbb
jge
cmp
mov
inc
sti
mov
popf
out
rorb
std
mov
sbb
pop
jbe
xchg
pcmpeqw
shrb
or
fidivs
adc
mov
xorl
and
cs
icebp
loopne
addr16
add
and
pop
adc
data16
jecxz
jo
fidivl
inc
xor
push
pop
jge
ljmp
into
pop
movsb
sub
pop
outsb
xchg
rolb
icebp
lods
out
cmpsb
lods
aas
push
xchg
mov
out
xchg
movsb
xchg
mov
push
add
push
xor
repz
iret
sarb
int
add
xchg
jo
fwait
mov
mov
jno
lret
xchg
out
jmp
sub
xchg
adc
les
dec
pop
push
in
pop
xchg
rcrl
lock
clc
inc
jg
dec
out
jge
jae
aas
xchg
fisttps
fstp
fsubs
mov
repnz
movsb
mov
jnp
inc
push
sbb
fstl
add
inc
ljmp
pop
pop
xchg
nop
cmpsb
mov
popa
dec
repnz
bound
aas
mov
int
mov
mov
cmp
jmp
add
cmpsb
jg
xchg
xchg
adc
mov
int
bound
add
fmull
fwait
push
sahf
idivl
or
out
loopne
dec
xlat
push
push
sbb
mov
je
sub
inc
std
clc
test
sbb
pop
test
xchg
mov
pop
add
clc
fmull
mov
mulb
pop
sahf
shll
xchg
mov
adc
gs
stc
jge
hlt
aas
inc
cmp
jg
mov
sbb
cmc
testl
addb
in
sbb
mov
ljmp
fmul
in
or
push
fsubl
add
jb
fnsetpm(287
lret
shr
xor
ss
or
repz
fwait
fwait
mov
jmp
rorb
push
fldcw
sub
dec
pusha
aas
sub
out
xlat
lock
inc
and
adc
mov
arpl
fmull
fxch
inc
add
shll
push
dec
pop
test
or
jmp
dec
cmpsb
cmp
lahf
mov
mov
mov
stos
je
pop
fwait
jno
out
add
mov
dec
xorl
arpl
lock
aas
sbb
mov
enter
addr16
mov
mov
push
lret
imulb
repnz
int
push
push
inc
in
clc
imul
cmpsl
into
mov
je
test
jg
mul
mov
cmp
and
lcall
add
and
mov
pop
push
mov
jp
es
dec
jo
push
and
popf
fiadds
loope
adc
outsl
out
fistps
push
repz
add
xchg
mov
rcrl
sbbb
and
mov
leave
daa
xor
hlt
sbb
les
adc
push
loope
sahf
jmp
dec
iret
and
and
mov
mov
adc
cmpsb
sbb
subl
ret
mov
jge
cltd
sbb
jge
fsubl
push
repnz
xchg
insb
lods
movsb
sub
cmp
xor
add
and
in
xor
jnp
mov
mov
out
repz
or
enterw
push
fnstcw
cmp
loop
ljmp
nop
and
repnz
lods
out
adc
test
jns
imul
cmpb
pushf
divl
inc
pop
clc
inc
mov
fdivrl
adc
or
sub
stos
gs
dec
pop
cld
xchg
das
inc
inc
pop
push
xchg
cmpsb
addb
sbb
ret
dec
adc
popa
adc
inc
push
clc
push
xchg
lods
xor
mov
or
lds
sti
inc
and
and
adc
lock
or
pop
inc
mov
and
ss
sub
sub
dec
loop
inc
shlb
scas
enter
fsubrs
xchg
pop
sbb
mov
fsub
xor
and
jno
outsl
fcmove
jp
inc
call
fstps
xchg
movzwl
push
in
pop
outsb
pop
mov
xchg
or
hlt
push
push
jae
sbb
test
cmp
xchg
or
sbb
shrl
cmpsb
push
mov
jnp
sub
pop
push
xchg
add
mov
loop
xor
popf
mov
inc
pop
and
bound
ja
jge
jle
pop
repz
mov
test
lods
sub
fwait
jb
outsl
stc
rcrb
loop
mov
inc
cmc
filds
imul
mov
test
adc
filds
push
pop
test
sbb
push
jb
shll
sahf
test
fimull
dec
mov
arpl
fcompl
jne
sub
inc
imul
pop
and
test
movsl
outsb
xchg
fwait
mov
mov
clc
push
mov
in
icebp
gs
dec
xchg
lds
fistpl
je
stc
stos
sti
cld
fs
xor
xor
cmp
repz
and
mov
adc
add
push
jmp
loop
or
xor
stos
outsb
shrl
scas
addr16
dec
js
xor
push
lea
lahf
inc
inc
mov
stc
inc
pop
push
mov
popa
jle
jae
and
jmp
enter
cmc
shrb
fsubrp
inc
bound
cmpsb
negl
add
mov
mov
or
rclb
adc
jg
mov
loop
inc
adc
leave
mov
and
ljmp
sbb
sub
ds
cmp
inc
enter
mov
add
adc
sbb
push
jle
cld
loop
fidivrs
mov
jp
xor
pop
out
aaa
cmpsl
pop
add
cmp
mov
mov
lret
xchg
repnz
lea
and
sbb
sub
addl
inc
pop
call
into
ss
roll
mov
inc
test
jnp
aad
shl
in
jge
dec
jae
xchg
cltd
xchg
in
and
mov
add
ja
fwait
ret
cwtl
or
loope
sbb
scas
sets
xor
icebp
lea
fcmovne
int
idivb
jp
repz
or
add
pop
je
lods
in
mov
ret
fwait
jno
stos
push
adc
push
mov
jns
sub
push
cmp
sbb
sbb
mov
mov
cmp
pop
sbb
push
outsl
mov
inc
enter
aam
xchg
jecxz
call
and
xchg
lock
mov
movsb
out
fcompl
mov
sub
addr16
push
test
test
push
add
mov
cmpsl
cli
sbb
fisubrs
sahf
or
shll
bound
jge
imul
mov
mov
and
pop
repnz
push
mov
mov
in
icebp
sbb
cmp
aaa
adc
push
add
mov
mov
jle
sub
addr16
jo
or
daa
sbb
push
xlat
mov
fsubrp
sub
lods
lock
inc
and
hlt
repz
lahf
push
das
rclb
sub
fadds
inc
lock
push
pop
testb
out
jne
xchg
js
and
divl
loopne
sarl
mov
mov
adc
xchg
cwtl
mov
jp
insl
adc
leave
test
stos
rolb
ret
lahf
jg
add
int3
mov
dec
pop
repz
jg
loopne
lret
xchg
jne
and
arpl
xor
mov
sbb
and
stos
nop
cld
mov
repnz
jmp
ljmp
mov
pop
mov
inc
or
aam
and
adcb
faddp
adc
push
mov
imul
pusha
mov
je
adc
mov
pop
mov
int
jae
repnz
dec
inc
xor
ja
ret
filds
mov
sbb
jge
fldt
shr
xchg
pop
add
sbb
fnstcw
aam
into
mov
stc
inc
sbb
test
dec
push
movsb
mov
mov
enter
loopne
mov
aad
jne
loopne
inc
int
subl
fs
and
adc
jecxz
mov
ret
xor
or
pop
push
aas
out
xor
push
and
std
int
xor
mov
rcrb
fcomip
pop
adc
notl
mov
pop
and
dec
mov
xor
cmp
sub
loope
out
ret
mov
dec
lret
inc
inc
testb
out
lods
int
push
mov
cmp
pop
mov
ss
cmp
adc
fists
test
lcall
xchg
js
shrb
push
inc
imul
pop
pusha
nop
pop
push
sbb
or
jge
pop
jecxz
lret
xchg
out
and
pop
adc
cmp
inc
jge
dec
shrl
add
mov
icebp
repnz
fs
mov
in
inc
in
mov
daa
jo
test
hlt
or
lods
aad
mov
out
and
jecxz
cmp
in
pop
add
scas
mov
add
lods
mov
fistl
cmp
je
sar
adc
gs
inc
sbb
cmp
or
lahf
or
jns
adc
mov
lods
test
mov
inc
in
aaa
pop
ret
mov
stc
ljmp
push
fwait
test
test
imul
adc
lcall
loope
insb
nop
dec
jmp
cmpsb
daa
pop
jmp
jmp
adc
jmp
jmp
int3
inc
sbb
pusha
mov
inc
mov
pusha
mov
mov
lret
xchg
jbe
dec
add
or
sub
push
flds
add
notb
add
stos
adc
push
or
sahf
mov
add
mov
or
ja
pop
xor
ret
out
sar
dec
and
lahf
faddl
out
mov
into
pop
mov
cmp
push
testl
xchg
push
cmp
mov
jge
ja
sub
mov
xchg
roll
add
dec
sub
and
mov
or
mov
rorl
sbb
lea
add
cmpsb
dec
push
mov
lock
cld
jmp
adc
fcoml
jg
ja
cmpsb
xlat
loop
iret
loop
aad
iret
bound
in
inc
sub
jns
stos
xchg
pop
mov
fs
int3
lea
push
js
pop
xor
push
imul
xchg
push
xchg
push
in
call
inc
adc
mov
cmp
pop
es
push
add
ja
xor
stos
mov
inc
testl
cmc
xorb
or
jae
jno
xchg
dec
cmp
cmp
jg
push
cltd
push
push
push
out
addl
stos
jo
sbb
add
jo
mov
inc
bswap
or
andl
xor
push
popa
xchg
mov
mov
pop
mov
push
mov
sti
in
lret
cmp
and
lds
sub
movsb
lret
xor
cmp
loope
mov
mov
mov
subl
out
inc
mulb
loopne
sbb
mov
push
std
cltd
dec
in
aam
dec
sahf
xchg
add
jle
add
or
outsb
fidivl
jae
dec
dec
mov
sbb
push
ret
mov
cmp
ss
iret
mov
andb
loop
xchg
inc
push
jno
pop
movsl
mov
cmpsb
jns
lahf
add
fsubrs
push
fdiv
xor
lds
popa
aam
or
push
sahf
incb
bound
enter
insb
insb
shl
in
inc
jne
jl
dec
push
jle
shrl
jle
outsl
push
stos
mov
popf
mov
repz
dec
mov
fbld
fcompl
daa
dec
insb
dec
mov
or
cmp
fcomps
xchg
ret
in
mov
stc
pop
cmp
icebp
int
ljmp
test
lds
js
xchg
outsl
cmpsl
mov
sbb
jb
lea
xchg
jo
mov
jne
push
sub
lods
pop
dec
in
or
jbe
mov
jbe
mov
mov
jmp
push
or
push
cmp
aas
cmp
lahf
inc
and
movsl
inc
mov
sub
jo
rcll
das
xchg
lods
outsb
inc
test
jae
mov
cwtl
dec
jns
inc
push
cmp
mov
in
out
mov
ja
push
cmpsl
mov
xor
and
jmp
mov
into
pop
lea
pop
cli
in
loopne
leave
mov
loopne
loop
mov
add
ss
mov
inc
push
add
repnz
fdivs
adc
mov
mov
xchg
pop
mov
faddl
int3
xor
cmpsl
push
cmpsl
jne
icebp
xchg
rcl
rcrl
adc
xor
aaa
shrb
pop
or
cs
imul
out
pop
pop
outsl
jnp
sub
movsb
sbb
test
out
lea
std
cwtl
scas
adc
decl
mov
mov
popf
dec
pop
mov
repz
in
mov
mov
mov
mov
xor
jnp
int
mov
movsl
sbb
stos
jbe
std
std
int3
stc
push
stc
test
jge
out
imul
pusha
push
jge
cltd
mov
push
scas
ja
add
adc
dec
xor
insl
pop
xor
jp
sub
xchg
cwtl
lcall
inc
push
sub
inc
mov
jg
mov
dec
mov
adc
sbb
cltd
xor
pop
das
push
stc
xor
ret
nop
rclb
andl
cs
xor
pop
or
clc
pop
ljmp
dec
mulb
cli
enter
jnp
pop
mov
cmp
mov
in
icebp
inc
inc
cli
sbb
mov
iret
sbb
pop
pop
pop
cmp
lret
push
sbb
int
cmp
cli
push
cmp
in
pop
xchg
sbb
and
xchg
xor
push
aad
shrl
mov
mov
repz
incb
push
dec
js
lds
or
sub
call
xchg
push
aam
repz
cmp
inc
ja
sbb
xor
lds
sub
or
xchg
xchg
sbbb
jl
daa
sub
lods
xchg
aaa
adc
adc
xor
cltd
mov
and
push
push
or
pop
jge
or
adc
mov
movsl
xor
push
cmp
push
inc
hlt
mov
imul
and
and
pop
aad
cmc
jmp
and
cmp
lea
inc
shll
xor
mov
adc
push
jmp
jno
pop
dec
add
test
push
aad
call
xlat
fadds
mov
pop
adc
xor
aaa
loop
cli
fs
imul
cltd
iret
sbb
fs
mov
mov
clc
push
dec
xchg
mov
imul
dec
sub
bound
gs
and
pop
jmp
fsubrs
xor
jns
cmp
xor
test
fcomi
jbe
icebp
clc
or
out
fwait
js
sarb
push
lcall
cs
cmpsl
and
in
popf
push
andb
test
mov
push
xor
or
insl
dec
mov
notb
jecxz
sbb
imul
es
rcl
pop
fdivl
jg
push
loop
jne
inc
jne
int
mov
mov
push
into
pop
mov
pop
mov
int
daa
or
mov
hlt
or
cmp
iret
mov
jns
pop
dec
fwait
xor
jns
push
fdivr
andl
fadds
mov
adc
add
adc
test
out
xchg
shll
pop
and
popf
jb
fsubr
push
dec
mov
movsl
mov
dec
div
fistpl
sarl
sbbb
jmp
icebp
jmp
xchg
mov
cmpsl
dec
out
call
stos
out
sti
outsl
pop
stc
outsb
push
pop
push
xor
testl
or
jne
mov
neg
in
loop
cmc
repz
mov
inc
add
xor
shl
cmp
pop
xor
test
dec
add
nop
sbb
popa
push
sub
push
pop
pop
ja
sti
or
outsl
pop
lcall
repz
ret
stos
mov
mov
ficompl
pop
stos
sbb
mov
fucomi
sahf
and
push
push
cli
push
in
xchg
cmp
push
pop
jle
adc
addr16
and
cmpsb
or
and
loop
ds
js
sar
add
xchg
sbb
scas
mov
mov
or
jbe
lods
mov
lea
sub
or
jmp
arpl
sub
push
enter
es
cld
sub
xchg
out
pop
pop
mov
cmp
xor
adc
xchg
pop
fnstsw
pop
jns
js
inc
out
es
out
je
lods
fists
cmp
jne
or
loopne
cmp
xchg
push
aam
cmc
mov
inc
iret
loope
inc
adc
sti
inc
pushl
in
pop
xchg
hlt
loope
das
push
mov
xchg
jbe
xor
cmpsl
stos
lahf
and
lea
test
iret
test
jnp
addr16
push
add
in
xor
pop
and
adc
or
aad
cld
jge
test
jp
std
lods
inc
and
icebp
jbe
cmp
pop
sub
std
insb
dec
in
push
jmp
lret
call
int3
fistps
scas
xchg
lret
ja
and
imul
jbe
loop
in
or
mov
mov
ss
dec
sub
int
and
push
jecxz
mov
jno
cmp
xor
xchg
stos
icebp
push
cs
shl
xorl
pop
mov
fwait
or
lahf
in
jl
xchg
scas
fsts
xor
jmp
movl
mov
jp
push
enter
sti
push
mov
lret
js
adcb
pop
jne
xchg
mov
pushaw
lret
gs
dec
and
lods
jae
dec
xchg
int
push
push
fwait
or
add
jb
mov
imul
out
test
inc
testb
mov
mov
push
outsl
sbb
jmpw
popa
dec
ljmp
fsubrp
and
ficoml
and
mov
cmp
push
inc
jmp
inc
inc
div
push
lret
lret
sub
sub
arpl
xorb
push
mov
lret
push
xor
int3
jnp
pop
in
xchg
mov
mov
mov
inc
dec
dec
adc
adc
lret
mov
xchg
in
aad
pop
fnsetpm(287
lcall
or
and
adc
inc
into
push
push
int
jle
lret
scas
and
out
push
xchg
jge
cmp
pushf
mov
adc
test
xor
inc
inc
mov
dec
mov
out
mov
mov
xchg
cmpsl
sbb
ja
mov
movsl
stos
and
stc
and
mov
enter
lahf
lret
sub
cmp
pop
mov
and
mov
enter
pushf
pushf
sub
sbb
cmpsb
xchg
pop
ja
xchg
lea
ret
inc
in
ret
cmp
rolb
rolb
sub
inc
add
or
cld
xor
mov
pop
push
imul
mov
cmpsb
dec
cmp
and
push
inc
jge
inc
xchg
sti
and
mov
stc
jne
pop
lahf
dec
push
imul
push
sub
or
lods
mov
aad
xchg
nop
pop
xchg
jno
int
fbld
rclb
loope
inc
pop
int
jecxz
cmp
dec
jge
and
sbbl
in
call
sub
cwtl
push
in
stos
inc
mov
jmp
sbb
insl
imul
sahf
cmpsb
movlps
jb
add
add
popa
jmp
mov
jne
mov
adc
mul
sbb
dec
push
pop
mov
dec
and
loopne
xchg
mov
push
mov
aaa
push
insb
mov
call
out
enter
or
or
push
adc
rcll
out
daa
xchg
pusha
jle
xor
jecxz
xchg
aam
xchg
shlb
stos
adc
int
lret
xchg
fwait
xor
push
shll
xchg
insb
ljmp
das
out
push
out
push
cmp
scas
movb
pop
sub
stos
pop
sub
pop
pop
jns,pt
outsb
mov
loopne
lea
cmp
call
xchg
dec
and
jbe
xchg
cmp
sarb
lcall
pop
lods
ljmp
aas
test
push
add
cmp
add
push
adc
xchg
andl
rolb
adc
mulb
aam
jecxz
sti
test
pop
into
cli
mov
cld
test
sbb
aam
lret
inc
mov
popf
enter
mov
fildll
add
pop
inc
mulb
fcom
lret
fcompl
mov
mov
xor
cmpps
sti
in
mov
mov
or
add
xchg
nop
in
data16
sar
int
lds
aaa
popa
push
sbb
cwtl
cmpsl
mov
fistpll
mov
cmc
lods
cmp
sarb
popf
loopne
jl
adcl
cli
or
stos
mov
adc
sbb
and
lea
jge
push
sub
cmp
movsb
scas
js
jmp
jl
cmp
into
push
adc
xchg
add
insb
loope
movsb
mov
or
pop
xchg
pop
inc
cltd
dec
mov
rcrb
enter
rcll
pop
fldcw
popf
cs
or
mov
dec
int
in
enter
loope
mov
mov
add
add
insl
cmpsl
push
out
out
xor
sbb
pop
mov
pop
cmc
lea
aam
outsb
jb
stos
xor
or
mov
jmp
pop
xor
push
and
in
inc
sahf
rcll
iret
fisttpll
inc
in
ja,pn
dec
cmpsb
cwtl
lods
fs
cmp
repnz
inc
add
int
rcll
fsubrp
jg
pop
int3
jmp
outsb
sub
aaa
cmc
sub
jbe
lods
xor
cmpsl
pop
cli
rcr
fsubrs
les
arpl
pop
pusha
ljmp
jmp
pop
or
inc
jae
sbb
fildll
adc
mov
loope
outsb
fyl2x
cli
and
mov
push
xor
lcall
daa
outsb
stos
dec
into
lcall
push
or
xchg
divb
bound
shrb
cmc
fidivl
xor
fidivs
add
imull
mov
push
mov
dec
mov
movsl
stos
ljmp
and
ds
jb
sahf
pop
add
dec
insb
lcall
rorb
pop
push
enter
inc
jecxz
sbb
mov
xor
jp
xchg
notl
adc
jne
dec
jecxz
jecxz
fimuls
callw
mov
mov
insb
les
adc
out
aam
xor
add
imul
leave
hlt
fdivs
rcll
sub
scas
xchg
gs
rclb
add
or
dec
mov
leave
sbb
fldenv
or
mov
sub
add
lahf
lds
jl
mov
inc
loop
or
rorl
call
data16
aad
push
pop
mov
sahf
lods
xchg
ffreep
aam
nop
xchg
jmp
stos
cmc
arpl
cs
xchg
mov
jno
mov
fldcw
gs
sub
ja
sub
and
ffree
mov
aas
inc
or
aad
shrb
daa
movsb
sub
inc
in
out
out
cld
inc
stc
js
not
sub
clc
pop
loop
jns
aaa
xchg
cmpl
mov
mov
xchg
aad
pop
cs
pop
les
gs
mov
rcll
test
mov
push
jae
popf
js
fidivrl
xchg
dec
sti
icebp
cmp
mov
enter
in
pop
gs
push
mov
lahf
inc
lock
xchg
fsubrl
adc
xor
int3
or
inc
addr16
inc
lea
xor
fbstp
pop
xlat
push
stos
cmpsl
jno
loope
enter
pop
loopne
jle
inc
cli
clc
mov
mov
data16
sbb
ret
adc
mov
and
ljmp
call
and
sub
cmpsl
cmpsl
mov
call
push
push
cld
jnp
mov
aaa
mov
cmc
bnd
push
andb
push
push
mov
mov
cmp
dec
pushf
fistpll
in
and
inc
outsl
scas
add
mov
bound
fwait
mov
jbe
mov
mov
negl
loope
or
lret
pushf
sbb
xor
cmpsb
mov
leave
inc
mov
outsb
les
xor
stos
sbb
mulb
subb
xchg
sahf
pop
dec
and
pop
push
dec
mov
push
out
std
out
mov
ficomps
jbe
call
cwtl
in
iret
jp
pop
mov
mov
mov
insb
jle
dec
sti
jae
leave
inc
fidivs
mov
dec
mov
jnp
rclb
int
adc
jmp
pop
xchg
loop
stc
jle
insl
add
fistpll
sti
mov
shll
mov
inc
pop
stc
movb
fcmovbe
adc
sbb
add
jns
rcrl
mov
add
dec
sbb
or
ret
push
jne
jl
sbb
repnz
out
xor
dec
push
xchg
lock
sbb
or
mov
repnz
or
mov
cmp
inc
arpl
fisubrl
mov
jns
xchg
icebp
inc
orb
cs
popf
mov
lock
lea
mov
int
pop
addl
pop
cwtl
jg
bound
xchg
out
cmpsl
js,pt
bound
inc
xchg
or
ret
inc
sar
ss
and
inc
imul
ljmp
bound
popf
push
gs
lahf
int3
xchg
js
iret
mov
add
lret
add
or
aas
aas
test
lcall
sub
int
adc
push
sub
addb
fstps
in
jo
js
mov
adc
incl
pop
fwait
ljmp
add
mov
cld
xchg
stos
fwait
sub
les
adc
sub
adc
outsl
push
cmp
lcall
rol
mov
jo
popf
jae
and
notb
and
in
adc
lds
jecxz
sti
scas
outsb
dec
sti
inc
into
cmp
out
divl
outsb
test
ficoml
pop
cmove
mov
test
jne
inc
sbb
pop
xor
cwtl
cmp
xor
repz
insb
mov
stc
mov
jg
inc
das
xor
dec
jge
fbld
int3
std
push
mov
outsb
leave
sbb
pop
sbb
aaa
or
insb
cmp
dec
push
outsl
jmp
int3
scas
dec
cmp
pop
sub
lea
outsl
daa
stos
xchg
mov
mov
fisubrs
jmp
mov
push
lods
shll
mov
stos
xchg
addr16
pusha
stos
mov
fists
into
mov
dec
rcr
cmp
or
scas
and
push
mov
repz
shll
xchg
leave
in
es
clc
outsb
shlb
sbb
jbe
lods
loope
int
xchg
cmp
daa
jbe
out
imul
sarb
lahf
incl
in
xchg
insl
add
inc
and
push
subb
push
sti
xor
pusha
out
popf
mov
out
leave
push
cli
push
xor
lcall
dec
push
lahf
pop
icebp
call
fidivrs
fstpt
icebp
add
sbb
adc
dec
mov
adc
imull
dec
es
sbb
out
nopl
inc
cmp
push
dec
mov
sub
popa
loopne
lahf
imul
out
iret
inc
sti
mov
lock
stc
push
fistpl
test
xchg
in
lds
pushf
xlat
pop
adc
inc
inc
andb
cmc
pop
das
aas
or
lahf
mov
sbb
cmp
jae
mov
mov
mov
mov
push
scas
mov
mov
jp
dec
rolb
jle
mov
mov
add
dec
and
sub
and
jns
mov
bound
cmp
data16
jns
shr
mov
inc
push
mov
test
lods
mov
xchg
and
outsl
cmp
xor
int3
adc
mov
les
cmp
pop
ljmp
jo
mov
shll
push
scas
and
mov
push
ljmp
adc
dec
inc
push
jne
rcrb
xchg
fdivr
dec
mov
ds
dec
cmp
test
scas
add
cmp
sbb
fptan
fs
adc
push
ror
dec
xor
into
jno
cmp
pop
push
hlt
jp
mov
mov
mov
repz
scas
mov
push
sbb
xchg
or
rolb
sbb
test
data16
xchg
fwait
push
xor
stos
shll
push
pop
mov
sti
mov
inc
push
push
jnp
shrl
dec
mov
dec
inc
aaa
xchg
icebp
imul
out
lock
jo
sar
mov
sbb
in
in
lahf
xchg
cmp
aaa
sbb
sub
xchg
loope
xchg
scas
pop
mov
cwtl
jle
add
fdivs
push
in
mov
jae
jecxz
sahf
mov
sarl
push
out
not
shlb
lock
sahf
mov
push
sub
jae
subb
es
push
in
adc
ret
repz
aad
ret
lret
lret
adc
repz
cs
xor
inc
loopne
adc
cmc
mov
jmp
arpl
cmpsb
test
pop
lods
fwait
popf
mov
rcl
and
ret
rclb
inc
push
loop
ret
inc
fwait
call
push
das
outsb
mov
xor
pop
lods
or
inc
popf
adc
push
inc
or
dec
jb
idiv
fwait
xchg
movsb
sti
dec
cmc
out
mov
lcall
jno
sub
insl
in
xchg
adc
mov
mov
mov
std
add
push
aas
repz
cmp
lret
xchg
push
ja
scas
scas
and
hlt
arpl
fdivrp
push
pop
mov
mov
es
fisttpl
xchg
lea
leave
inc
pop
xchg
adcb
rclb
mov
or
ret
or
add
and
repnz
test
inc
call
smsw
sbb
pop
jne
loopne
mov
orl
adc
mov
scas
mov
nop
and
cmp
out
repnz
inc
cmc
mov
cmc
or
test
xor
das
pop
std
out
ret
sbb
cmc
jbe
sub
iret
mov
sub
das
sub
std
sbb
push
jb
adc
mov
mov
and
mov
scas
sub
cld
add
jno
arpl
push
mov
mov
dec
fsubrl
cmpsb
push
cmp
clc
scas
movsl
xchg
mov
shrl
mov
repz
and
push
jmp
in
mov
dec
lret
adc
xchg
xor
adc
jmp
lock
sahf
dec
into
ret
stos
or
lret
add
adc
notl
popa
xor
cmc
cmp
mov
xor
sbb
aad
jge
out
adc
xor
aaa
les
sbb
ret
push
adc
or
adc
add
sbb
push
fwait
fbld
rcll
sbb
push
mov
das
or
xor
or
lahf
jbe
leave
pop
test
rep
mov
cmp
jecxz
stos
pushf
adc
lods
pop
mov
xchg
mov
popf
sub
push
pop
fstpt
adc
mov
xchg
popf
out
inc
mov
fadds
imul
mov
iret
shl
push
nop
jmp
mov
or
push
fistl
repnz
sti
push
mov
shl
out
or
clc
inc
inc
rcrl
add
bound
das
aad
pop
dec
jmp
shlb
adc
xchg
mov
call
adc
cmc
lret
das
test
arpl
sub
sbb
sbb
in
mov
gs
cli
add
pop
xchg
pusha
dec
pusha
xchg
mov
popa
mov
mov
sub
pop
ds
data16
cmp
lods
sbb
mov
sub
aas
mov
in
pop
jl
lea
xor
fsubrl
pushf
out
test
or
mov
inc
pop
fistpll
add
jae
int
outsl
and
push
xor
enter
add
dec
pop
pop
fs
jmp
xchg
inc
sub
and
sub
cltd
mov
pop
sbbl
scas
ficoms
mov
mov
ja
add
and
sbb
sahf
aas
test
lock
and
sarl
add
pop
stos
xchg
in
leave
aas
inc
fsubl
repnz
ret
and
es
mov
lods
sbb
stos
and
mov
pop
rclb
xchg
or
mov
or
vmread
dec
cmpsl
xchg
inc
add
sub
bound
sub
cmp
movd
sbb
mov
push
test
mov
inc
xchg
xchg
dec
push
adc
jne
push
mov
dec
movsb
lds
xor
es
sbb
inc
in
xchg
cmp
add
ljmp
mov
lret
mov
test
lock
idivl
add
test
adcb
adc
cmpsl
imul
bound
jle
inc
les
or
pop
dec
mov
loopne
scas
pop
rdtsc
mov
jnp
xor
or
adc
inc
test
les
sbb
adc
mov
sub
jg
gs
adc
hlt
and
inc
xchg
pop
push
adc
mov
insb
repnz
xchg
stc
enter
enter
and
or
in
int
fistpll
pop
or
xchg
or
scas
js
add
jge
jg
pop
cmpl
pcmpgtd
mov
and
jb
sub
mov
enter
mov
mov
scas
adc
movsb
sbb
adc
mov
lret
cmp
je
push
mov
sbb
mov
js
arpl
jp
add
inc
pop
rcrb
cli
pushf
in
lcall
cmpsb
or
cmp
mov
loopne
jne
loope
lock
sub
or
call
or
mov
mov
or
and
jno
test
ljmp
mov
mov
sbb
loope
cltd
lods
stos
and
pop
mov
add
ds
or
fbstp
or
mov
inc
std
iret
cli
imul
xor
push
js
mov
and
loop
xor
mov
fwait
push
push
idivb
andb
cmp
inc
loop
mov
popf
sub
adc
test
dec
sti
data16
insl
arpl
cmp
bound
sti
faddl
out
cltd
repnz
stc
pop
and
xor
mov
enter
add
dec
push
movntps
sub
xchg
lcall
lea
cmp
scas
inc
test
xchg
nop
stos
adc
mov
comiss
mov
dec
xchg
xchg
xchg
in
iret
fs
push
stos
into
ficompl
or
out
shlb
and
and
mul
cmp
or
mov
hlt
push
xor
repz
jb
inc
shlb
xchg
xlat
test
shlb
pop
enter
xor
rorl
hlt
inc
mov
sbb
xor
aaa
lahf
inc
je
test
mov
mov
nop
insb
dec
mov
in
mov
and
inc
and
jb
clc
lcall
outsb
xchg
les
js
in
popa
mov
pop
iret
and
xchg
or
pusha
mov
cmp
in
or
jno
add
pop
sbb
shlb
dec
loope
dec
movsl
dec
add
lds
or
jg
xor
cmp
lds
sti
cmp
rorl
push
inc
sbb
dec
sbb
pusha
arpl
xchg
or
mov
jns
adc
push
xor
test
fwait
out
mov
call
pop
data16
or
ret
ja
jno
std
popf
stos
sbb
mov
sbb
dec
fcmovb
aaa
rcrl
xchg
mov
or
inc
out
mov
inc
or
or
les
shl
add
push
rcrb
out
or
dec
leave
call
outsl
jg
rcrl
inc
mov
mov
clc
inc
pop
push
jne
inc
movsb
xchg
fisttps
aam
push
iret
leave
adc
mov
sub
rol
cmp
mov
ljmp
pushf
je
dec
xchg
stc
cltd
push
addr16
out
push
sub
or
out
xchg
mov
aad
icebp
setle
mov
jo
std
push
bound
push
adc
hlt
and
out
pop
je
scas
ret
push
out
add
adcl
jmp
mov
mov
cs
jmp
cld
inc
in
add
xchg
shll
xor
pop
cmc
fwait
add
mov
shl
xchg
aas
cmp
pop
push
loope
idiv
mov
and
les
jne
leave
push
xchg
mov
xchg
jno
lea
loopew
bound
pop
rcrl
sbb
dec
lods
jno
and
sbb
add
mov
pop
dec
sti
imul
adc
sti
sub
out
or
push
sub
jo
sbb
outsl
pop
imul
and
jge
ljmp
clc
sbb
jl
xchg
fidivrl
adc
mov
stos
orl
lret
data16
or
stos
rcrl
pop
lock
ficoms
scas
dec
dec
sbb
pop
xchg
testb
mov
or
outsb
pop
inc
jno
in
push
out
test
mov
test
xchg
outsl
sub
lret
loopne
imul
push
xchg
or
lock
in
aam
mov
cwtl
arpl
xchg
sub
roll
ss
mov
ret
jnp
or
adc
clc
rcr
and
sub
test
push
xor
pop
gs
mov
cmc
lock
pop
sub
xor
add
jo
fisubs
mov
fcomps
or
pushf
sahf
inc
stos
xor
sub
pop
sbb
adc
cltd
add
mov
test
lds
pop
xchg
push
jl
mov
arpl
xor
into
jae
filds
les
cwtl
or
negb
dec
movsb
fldl
imul
pop
and
aam
add
push
mov
jns
pop
cmp
lock
in
cmpsl
shrl
adc
mov
ss
pop
in
fbstp
fldcw
fstpl
cmpl
ss
mov
and
lcall
lret
fdivrs
push
mov
pminsw
imulb
ja
clc
jle
loopne
sub
sahf
out
mov
mov
lock
sub
xlat
jmp
dec
sub
enter
mov
xlat
in
xchg
push
call
in
stos
cmpsb
jp
ja
sbb
mov
nop
fisubl
add
cmc
adc
jns
pop
jnp
mov
jbe
mov
cs
adc
adc
stc
cli
add
sti
push
test
jl
adc
mov
cmp
or
sahf
or
and
push
push
mov
aad
xor
or
mov
mov
xchg
push
lock
lea
test
fists
loopne
pop
imul
sbb
push
mov
push
mov
fstpl
pop
inc
mov
jnp
push
dec
mov
incb
lods
fldt
xor
push
xlat
movsb
cmpsb
inc
das
mov
rcrl
jl
sbbb
sbb
ret
sbb
jge
dec
fdivs
insl
fisubl
gs
cmp
lock
repnz
popl
pop
pop
cmp
mov
cmc
fcom
bound
fiadds
cmpsb
lock
out
cmc
shrb
aas
fmull
std
jb
aam
clc
inc
mov
mov
scas
mov
nop
scas
pop
and
add
adc
test
ret
ds
inc
subl
pop
sbb
aaa
dec
push
adc
push
mov
fcmove
mov
das
addr16
hlt
sub
pop
in
cmc
inc
inc
xchg
iret
push
dec
jae
loope
scas
mov
xchg
pop
cwtl
cmp
movsb
jmp
sub
pop
xor
push
mov
mov
mov
fimull
pop
lods
push
insb
xor
jae
sub
pop
dec
pop
push
pop
sub
dec
lcall
fidivrl
cwtl
or
push
ja
sbb
scas
xchg
ss
mov
cld
xor
xor
push
inc
dec
pusha
mov
iret
jnp
ret
das
clc
fxch
cltd
das
bound
jno
or
repz
jmp
test
aad
js
mov
or
popa
repz
xlat
mov
loope
imul
inc
sti
dec
leave
cld
gs
mov
stos
inc
std
in
mov
mov
nop
clc
jno
pop
clc
and
xor
xchg
cmp
lds
pop
push
shlb
popf
push
cwtl
or
pop
mov
adc
ja
loopne
and
pop
inc
ljmp
pop
pushf
and
lods
mov
filds
inc
cmp
adc
and
iret
mov
sarb
fldenv
xor
jbe
dec
test
mov
add
xchg
and
pushf
repnz
jb
jnp
scas
pusha
cwtl
push
je
jmp
fdivrs
jno
ret
mov
aas
or
or
jnp
mov
sti
daa
mov
push
fcmovne
aad
jp
cmp
rcll
rolb
mov
jle
repnz
fisubrs
sub
jle
subb
xor
push
in
mov
int
fldt
pop
das
mov
lret
repnz
jg
lods
push
and
repz
fisubrl
aaa
mov
adc
xor
inc
ss
out
or
sbbl
orl
pushf
xchg
js
lods
sahf
xchg
sbb
mov
jmp
orb
or
sub
jmp
decl
je
call
dec
lcall
adc
pop
fsubr
ja
dec
loope
pop
int
mov
push
pop
dec
push
dec
inc
cmp
xchg
popf
mov
sbb
add
sub
push
rorw
fwait
jg
movsl
sbbl
cmp
test
insl
js
sti
sbb
lret
lret
imul
out
test
or
mov
not
mov
fdivs
sbb
ljmp
mov
dec
out
sbb
jns
mov
sub
pop
aad
andb
jecxz
pop
jecxz
adc
lahf
fisubrl
dec
test
jb
arpl
ficomps
mov
mov
cmpsb
inc
push
adcb
imul
push
mov
mov
dec
adcb
rolb
shl
aas
leave
and
out
dec
fiaddl
rclb
ficoms
push
jae
shlb
jno
repz
jae
jb
mov
adc
lds
push
xor
sub
fdivr
mov
sub
xchg
mov
and
les
xchg
dec
fcomps
dec
ret
test
mov
repnz
les
add
push
mov
jp
lock
lock
shr
int3
sbb
xor
push
push
ss
or
or
xchg
pop
adc
cld
lahf
rolb
cmp
negl
mov
test
js
push
inc
dec
mov
subb
shrd
and
es
test
adc
dec
cmp
xchg
jns
mov
push
adc
pop
iret
and
mov
sub
call
loopne
cltd
mov
push
mov
std
and
clc
sub
push
dec
loop
dec
push
or
push
mov
xchg
insb
aas
sbb
pop
ret
hlt
mov
push
daa
cmpsb
inc
dec
add
adc
add
sub
push
sub
js
testb
jno
out
jge
test
pop
mov
test
jns
adc
mov
leave
mov
and
roll
fwait
ljmp
loope
jnp
mov
add
addr16
jbe
cmp
mov
gs
mov
push
outsb
neg
mov
outsl
out
addl
xor
mov
add
gs
negb
out
rorl
in
push
mov
add
xor
aam
js
mov
popf
jnp
nop
xchg
xchg
adc
sbb
and
mov
mov
pcmpgtd
fbstp
cmp
repnz
mov
in
lret
xchg
mov
js
lahf
insb
xor
aam
cwtl
movsl
fs
cmpb
aas
inc
test
jmp
sbb
pop
and
lods
lea
or
xor
js
mov
xchg
xchg
fxch
and
adc
add
or
jge
stc
mov
xchg
jmp
push
sti
or
icebp
scas
jae
iret
xchg
mov
jno
bswap
fildll
jnp
movsb
test
mov
mov
and
xchg
movsl
sub
jl
idivl
push
call
cmc
push
pop
dec
aas
adc
cmp
push
push
adc
loope
cli
dec
fsubrl
out
sub
repnz
xor
das
loope
pushl
sbb
lock
pusha
mov
bound
mov
iret
iret
cld
aaa
mov
inc
and
push
test
add
insb
xchg
mov
dec
dec
jae
mov
push
in
sub
mov
push
and
stos
cmc
lods
mov
xor
shll
xchg
jne
loop
inc
lock
decl
scas
or
fisubs
pop
outsb
sub
stc
jb
sti
test
mov
or
mov
popa
lret
loope
hlt
dec
or
mov
push
and
or
dec
pop
or
or
mov
mov
jmp
cmpsb
or
inc
push
test
iret
call
fdivrs
push
call
mov
mov
sahf
adc
lea
dec
sbb
mov
lahf
push
pop
decb
arpl
push
call
add
ss
movsb
push
mov
sub
pop
mov
ja
cmp
rcrl
dec
ret
fstps
out
sbb
jo
xchg
inc
mov
adc
mov
add
dec
rorb
mov
lock
inc
jp
gs
icebp
pop
gs
int3
jmp
into
outsb
ja
scas
std
mov
out
jp
imul
js
insl
sbb
iret
dec
es
cmp
es
lahf
shlb
pop
das
mov
stc
xchg
test
push
mov
sarb
aad
imul
mov
xor
fidivrs
inc
loop
jp
inc
mov
icebp
adc
and
jns
push
clc
popf
inc
pop
and
sub
lds
repnz
sbb
dec
lcall
lret
cli
ss
push
fs
and
cmpl
or
cli
jl
fcomip
mov
fidivrl
movsb
add
pop
testb
pushf
and
mov
test
scas
and
filds
in
cmp
and
inc
je
popf
and
sbb
mov
add
or
rcrl
mov
sbb
jecxz
les
mov
add
je
repnz
pushf
cmp
test
jb
iret
xchg
test
loope
cwtl
and
sub
mov
gs
fldl
jg
fs
lahf
cmp
inc
push
pop
push
iret
add
loop
add
jno
aaa
jge
jae
stc
icebp
enter
idivb
cs
jns
cmc
sbb
lods
and
jecxz
mov
rcrb
adc
jg
inc
outsl
cmp
pusha
jl
pop
out
add
vmovdqa
mov
mov
dec
repnz
leave
cltd
shr
lret
xchg
jge
or
adc
or
jno
pushf
mov
sbb
adc
out
lret
mov
fistpll
test
rcll
call
negl
mov
rcr
aam
mov
scas
cmp
das
mov
jp
inc
lea
aam
in
aas
sub
mov
insb
lret
mov
pop
stos
repnz
in
sti
add
lds
cmpsl
push
mov
mov
xchg
test
repnz
lret
xchg
mov
mov
lcall
popa
lret
jge
out
test
pop
adc
scas
int
dec
lock
pusha
mov
aaa
imul
mov
xchg
adc
sub
pop
out
cmpsl
or
addr16
inc
lods
jl
inc
es
or
mov
xchg
inc
push
lds
cld
add
js
iret
pop
mov
cmc
mov
subl
adc
pop
jecxz
lea
repz
push
jle
mov
push
adcb
fidivl
sti
adc
jo
jno
dec
mov
js
jne
icebp
mov
xchg
hlt
adc
cmpsb
loop
repz
sub
mov
cmp
sub
sub
sub
dec
jp
clc
jmp
fldcw
mov
cmpsl
mov
and
aas
cmc
xorl
mov
xchg
pop
shlb
stc
popf
lcall
adc
pop
jl
out
jmp
dec
add
cmc
cli
adc
sbb
test
push
or
leave
push
outsb
push
mov
movsl
or
dec
push
out
mov
cmp
or
scas
in
sub
or
pushf
imul
mov
std
fdivl
pop
xor
sbb
and
cld
sarb
test
jne
mov
popa
and
mov
xchg
aas
loop
mov
dec
dec
adc
xor
fsubl
nop
daa
repnz
push
inc
test
mov
mov
inc
arpl
insl
jbe
dec
mov
jecxz
stos
cmp
scas
cmp
jmp
push
push
cwtl
jle
insl
dec
sub
bound
push
jae
sbb
test
lods
outsl
test
clc
cmp
sub
mov
sarb
out
roll
pushl
dec
cs
inc
sarb
push
and
cmp
cld
mov
dec
test
sbb
push
ret
inc
add
test
sarl
or
and
adc
sbb
lret
mov
sti
jmp
cmpsb
int
jno
jg
insl
insb
paddsb
mov
and
rcll
sbb
bound
push
mov
hlt
scas
rorb
mov
pop
outsb
fcoms
mov
pop
fwait
push
cmp
sub
push
xlat
mov
mov
cld
mov
push
xchg
popf
mov
xor
mov
aad
lcall
loopne
movsb
mov
ror
xchg
jns
mov
scas
inc
mov
mov
and
out
xchg
aas
xlat
cltd
xchg
data16
pop
fcmove
jnp
adc
add
jge
dec
cmp
shlb
fsub
insl
into
insl
mov
mov
popa
gs
aam
nop
inc
mov
mov
cmp
imul
cmp
add
pop
outsb
ss
mov
imul
pushf
jp
mov
mov
jge
popw
push
outsl
or
push
fbld
mov
lahf
outsl
loopne
lret
xchg
pop
add
add
pop
cmp
jl
ljmp
push
aaa
mov
aad
adc
add
or
push
pop
insl
rclb
or
push
cwtl
push
loop
imull
mov
nop
addr16
rorb
pop
ss
inc
adc
outsl
in
popa
mov
add
jb
movsl
clc
adc
inc
cmp
nop
out
shrl
sbb
lods
iret
shll
or
sbb
adc
mov
lods
mulb
cmp
scas
pop
mov
xsha1
cmpsb
dec
cmp
gs
dec
mov
inc
inc
adc
inc
cmp
jg
push
js
jno
clc
or
std
nop
insl
xchg
pop
mov
mov
aas
les
pushf
cmovne
cmp
cmp
cmpsl
jo
push
scas
cmpsl
mov
xchg
sub
push
jmp
dec
shrb
jl
cmp
fisubl
inc
ss
imul
mov
cmpsb
jmp
sub
mov
mov
xchg
int
mov
inc
fwait
sub
leave
movsl
xor
push
xor
jmp
out
xchg
mov
xor
into
mov
out
xor
aaa
push
pop
and
cmp
inc
mov
xchg
in
mov
ficomps
jle
push
adc
out
test
les
insl
andb
lahf
nop
adc
mov
lods
imul
dec
enter
push
cld
loopne
loop
clc
pushw
call
fwait
call
xchg
xlat
pop
mov
lret
adc
mov
fdivs
mov
inc
ret
clc
mov
mov
lcall
push
cmpsl
fcoml
out
sub
divb
lret
dec
push
adc
pop
jb
pop
es
out
sbb
lret
shll
stos
loope
out
mov
pop
pop
pop
test
mov
mov
inc
repz
push
scas
sahf
repz
das
or
sbb
xchg
jmp
aad
mov
ds
ret
and
jae
push
sahf
outsl
aas
andb
mov
pop
mov
xlat
js
adc
in
je
jae
jg
inc
push
mov
mov
stc
push
mov
les
pop
cmp
outsb
xchg
pop
stos
call
call
divl
sarl
jl
popl
cmpsb
subb
push
shlb
ss
cmpsl
imul
cmp
xor
sbb
sbb
mov
mov
mov
cmp
fidivs
jg
popa
cmc
mov
mov
shll
inc
adc
loope
leave
push
xchg
or
lahf
out
mov
mov
cmc
add
sti
push
shl
and
mov
mov
or
add
mov
mov
sub
lea
sub
add
pop
add
adcb
shll
bound
testb
pop
paddq
or
fwait
test
xchg
mov
sub
push
popf
arpl
sub
ret
rorb
push
out
push
inc
fsubs
lods
xor
ret
popa
sub
aad
addb
out
popa
pop
mov
jns
jne
sbb
in
jecxz
fbld
fs
sub
aas
or
mov
cmpsb
xor
dec
fmull
ss
daa
xor
pop
adc
cmp
jnp
dec
fsts
mov
push
pushf
test
mov
mov
cmp
mov
push
cmc
xor
js
sbb
or
leave
out
movsl
dec
lret
and
push
orb
fnstsw
lock
cld
xor
andl
mov
mov
and
xchg
lods
xlat
push
insl
mov
sub
ds
xchg
push
inc
nop
inc
call
xchg
cmp
adc
ret
flds
leave
xlat
push
xor
aas
dec
xchg
scas
bnd
jae
jl
mov
mov
repz
inc
lods
xchg
dec
mov
fcmovnb
xor
outsb
adc
cmp
xor
jns
outsb
mov
popa
cltd
jo
jmp
and
loop
outsl
call
jl
mov
int3
testb
add
inc
outsl
imulb
sbb
and
sub
add
xor
fmuls
daa
xchg
std
sahf
int3
aas
dec
punpcklbw
xlat
cs
sub
pop
push
iret
dec
js
scas
push
enter
lods
jns
scas
cmp
sbb
imul
repz
sub
test
inc
xchg
or
mov
dec
lcall
ret
in
inc
inc
call
jmp
push
out
lods
lock
into
mov
push
stos
insb
xchg
mov
inc
push
and
push
xchg
dec
sarl
mov
nop
fcmovu
sti
jae
push
popf
mov
sahf
leave
and
mov
and
movsb
sub
jo
mov
stc
imul
mov
in
call
jo
or
xchg
pop
adc
push
jp
mov
jmp
inc
call
mov
lahf
or
add
ret
iret
xchg
repnz
push
cs
or
mov
fisttpll
jne
popa
repz
mov
pusha
js
push
adc
sbb
lea
mov
and
les
out
xor
adc
or
orb
add
xchg
cmp
sbbl
in
outsl
mov
adc
lret
pop
sbbl
ret
jmp
popf
out
cmpsl
cmp
das
pop
pop
aaa
add
bswap
lret
or
stc
enter
jmp
sbb
jno
dec
pop
fldt
jl
xchg
mov
inc
test
addr16
mov
add
jl
jmp
and
jg
jns
pop
stos
pop
pusha
mov
fistps
xchg
adc
dec
repnz
mov
lea
aaa
inc
ret
sbb
mov
roll
lods
pusha
and
fwait
sub
repz
pop
mov
xor
test
xchg
cld
inc
sub
sbb
aad
js
out
jl
repnz
mov
push
jo
rcrl
pusha
adc
movsb
jg
aaa
push
inc
orb
es
lret
test
push
mov
push
dec
adc
xor
push
mov
or
nop
sahf
fwait
movsb
xchg
pop
imul
jne
xchg
stos
data16
into
jmp
add
sbb
lret
imul
jns
mov
dec
sbb
inc
jecxz
dec
ja
adc
test
icebp
ljmp
sti
cmp
pop
add
mov
aam
loope,pn
fadds
xchg
and
pop
daa
pushf
nop
adc
mov
sbb
mov
scas
loop
mov
push
cli
cmp
sub
sbbb
cmp
pop
icebp
sbb
sbb
int
adc
das
loopne
and
pop
dec
cmp
push
and
test
ds
dec
fbstp
mov
xor
jle
xor
jnp
mov
and
mov
adc
scas
ror
xchg
push
mov
lods
test
mov
or
jg
adc
cltd
cmp
fldcw
shld
jbe
imul
jno
sahf
mov
jle
mov
cltd
std
inc
and
adc
inc
test
mov
js
pop
push
sub
decb
sub
or
inc
pop
jle
inc
sub
push
jae
ljmp
mov
out
test
mov
add
pop
push
decb
mov
pushf
mov
ljmp
cmc
pop
inc
hlt
pop
xor
shr
mov
bound
test
outsb
int3
lock
insb
int
xlat
sbb
aam
sub
outsb
cltd
pop
mov
fldl
jmp
jge
pop
outsb
enter
xchg
push
dec
scas
jge
aas
inc
pop
dec
enter
cld
jnp
lret
dec
rcrb
xchg
aad
xchg
push
xchg
and
sahf
out
sub
ljmp
mov
and
call
aad
int
cmpsb
sbb
jne
idivl
jl
scas
pop
sub
pop
push
fwait
out
adc
jmp
adc
adc
lcall
out
push
int3
aam
push
push
sub
hlt
pop
test
jmp
inc
push
outsb
lods
push
js
bound
into
jmp
inc
call
mov
cmp
in
sub
mov
xchg
insb
sbb
sbb
cmc
les
xchg
sahf
mov
add
xchg
stc
or
imul
sbb
pop
jp
stc
or
rcrl
jle
outsb
and
inc
xor
bound
test
insb
flds
shl
inc
sbb
cmp
stos
jl
ret
push
dec
adc
filds
push
adc
jl,pt
movsb
xor
mov
cmpsb
imul
xlat
mov
ss
push
dec
int3
enter
add
adc
xchg
mov
mov
sbb
pop
sahf
sbb
or
mov
inc
xor
cmp
pop
sti
ror
cmpsb
es
sub
or
push
movsl
insb
scas
cmp
out
int
mov
and
rcrb
loopne
inc
cmpb
mov
cld
adc
jbe
movsb
adc
pop
outsl
pmulhuw
and
clc
mov
enter
dec
inc
out
enter
int3
int3
in
js
push
adc
xchg
fnstsw
xchg
push
call
incl
cmp
test
test
popa
lock
xchg
inc
cs
push
jno
sub
loop
aad
sub
sbb
jnp
sub
sbb
xchg
mov
loopne
dec
andl
scas
mul
mov
and
daa
int3
xchg
lahf
scas
mov
or
mov
notb
mov
lods
pop
sahf
hlt
or
or
fmull
mov
out
lea
mov
jp
in
lock
lea
adc
push
jmp
jo
push
xchg
xor
cmp
outsl
xor
popl
sbb
int3
mov
or
nop
aas
or
imul
icebp
cltd
test
mov
outsb
xor
xor
mov
xor
pusha
pop
mov
shr
cmp
call
xchg
adc
lret
sub
mov
fmul
hlt
add
sahf
mov
mov
xchg
xchg
sub
cli
dec
data16
push
jg
mov
sbb
repz
loopne
xor
mov
jge
out
pop
shlb
sti
or
gs
idivb
sti
movsl
xchg
out
ljmp
jno,pn
mov
fisubs
enter
lret
loop
inc
lcall
cwtl
dec
stos
mov
sbbl
daa
jle
mov
mov
dec
rclb
xlat
mov
add
imul
inc
mov
fucomi
push
pop
cmc
jno
cwtl
add
repnz
cld
mov
mov
jno
test
lret
adc
sbb
add
insl
inc
lods
sub
out
mov
addr16
cmpb
ds
mov
jmp
lahf
ss
sahf
add
xor
mov
data16
repnz
xor
imul
fistpl
pusha
xchg
sarl
notb
ds
shl
push
test
add
mov
or
aad
xchg
aaa
sbb
xor
mov
and
lods
sub
sub
mov
mov
lock
jae
xor
subb
lahf
mov
mov
shlb
out
leave
push
adc
repnz
push
lcall
push
arpl
stc
shlb
scas
out
mov
inc
imul
xchg
fs
jo
es
cmp
push
mov
fildll
pop
test
bound
test
mov
test
sub
adcl
fsub
xlat
xor
fcoms
jb
lahf
les
mov
hlt
rcll
jb
add
jae
in
xor
addr16
push
xor
sbb
das
jle
loope
lds
mov
sbb
mov
jge
aam
and
fidivrs
popf
stc
repnz
mov
mov
test
xchg
cmp
fwait
test
call
test
into
in
lods
dec
pop
pop
jb
push
loope
inc
rcr
andl
sub
pop
inc
clc
ja
inc
in
addl
adc
jecxz
inc
sub
aaa
aam
adc
jecxz
cmpsl
xor
arpl
or
cmpl
push
sub
dec
xchg
xor
gs
call
mov
stc
loopne
rolb
leave
inc
lret
or
inc
dec
out
pop
loopne
rol
xchg
dec
jle
lcall
leave
mov
mov
and
mov
test
outsb
inc
pop
jl
sbb
xor
jno
gs
jecxz
int3
lret
pusha
leave
xchg
mov
cld
js
aam
mov
sbb
jge
es
push
sub
or
rcrl
in
scas
adc
call
fs
fcompl
push
stos
cmp
cmp
xor
inc
dec
dec
arpl
outsl
cmp
cmp
pop
test
xchg
test
ss
and
movsl
es
scas
fmul
jbe
cmp
fldcw
cmpsl
out
mov
dec
hlt
rclb
dec
sub
frstor
out
int3
cmp
outsb
in
cld
adc
pop
and
sbb
mov
pop
sbb
xor
or
jl
cwtl
addr16
shl
lods
push
jle
leave
push
mov
roll
push
or
das
lahf
bound
mov
fcomi
sbb
push
mov
enter
cmpsb
sbb
adc
in
sub
jp
xor
test
data16
inc
or
xchg
es
mov
es
push
scas
mov
or
shlb
js
lock
ficoms
cmpsb
jbe
into
jmp
mov
repz
fbstp
xchg
push
add
scas
jmp
pop
adc
lahf
cld
pop
loopne
in
imul
xorb
add
insl
pop
xor
xor
inc
test
sbb
push
pop
cmp
xor
lret
mov
push
lret
mov
ja
movsl
cmpsl
les
mov
mov
movsl
cmp
pushf
pop
mov
jnp
mov
push
push
jne
inc
cld
push
stc
sahf
jnp
bound
scas
cli
push
mov
push
push
jecxz
popf
pop
sti
mov
pusha
pop
int3
fdivrs
rorl
js
dec
int
outsl
jp
push
addl
inc
add
arpl
cmp
and
push
push
inc
mov
aam
mov
dec
out
loopne
lods
cmpsl
sbb
popf
addr16
pop
lods
cmp
stos
outsl
outsb
lods
add
out
loope
lods
xchg
outsb
in
pop
mov
push
add
add
test
popf
and
vmovups
les
rolb
fwait
jbe
js
jne
or
ja
inc
test
shll
insl
jmp
nop
cli
repnz
pop
stos
sti
ficoms
xor
mov
in
pcmpgtd
pop
jae
mov
push
es
pop
mov
jns
jbe
pop
loopne
ror
xchg
loope
pop
mov
cmp
cmc
inc
bound
mov
push
push
jl
jnp
pop
sbb
add
fbstp
push
sub
leave
mov
push
mov
jnp
mov
add
sar
adc
cmc
mov
in
testl
push
inc
daa
fsubrl
xchg
or
pop
mov
stc
into
dec
shll
roll
inc
dec
daa
xchg
mov
shrb
mov
sub
or
orl
add
or
sbb
aam
in
pop
sti
ret
push
jb
fldcw
adc
push
or
clc
clc
jle
xchg
popa
lods
pop
or
xor
lods
jb
xchg
mov
adc
shrl
jbe
or
movb
loopne
daa
shrb
lods
xchg
fs
daa
sbb
lcall
roll
push
sbb
cmp
adcl
pop
sbb
or
cmp
hlt
pusha
sub
aas
sub
sub
das
repz
add
loopne
hlt
sbb
imull
jno
cli
adc
aam
push
rclb
dec
cmp
pushf
inc
mov
add
adc
aaa
mov
fists
cwtl
pop
cmc
sub
mov
jmp
fistl
in
jle
mov
les
mov
rcrb
leave
clc
scas
mov
pop
jmp
inc
dec
daa
add
jb
push
lret
pop
test
push
fisubl
inc
fldl
xor
adc
vpgatherqq
repnz
rcll
cmp
mov
ljmp
add
or
mov
push
inc
les
cmp
and
je
ds
xor
fdivs
arpl
jmp
sub
ret
movl
cmpsb
pop
insb
enter
loope
mov
lahf
inc
mov
mov
adc
test
or
fbstp
lods
stc
popa
sbb
pop
js
imul
mov
cmp
jne
movsb
imul
lock
sbb
rcl
cmp
sbb
enter
jnp
inc
call
test
jbe
popa
pop
stos
mov
dec
push
inc
out
mov
inc
out
mov
out
insl
or
xchg
mov
jbe
add
lcall
sbb
cs
adc
movsb
aad
in
push
pop
pop
dec
cltd
xchg
ljmp
push
inc
cli
mov
xchg
jae
cmpsb
shrb
xor
inc
lods
mov
mov
pop
ret
jg
or
in
out
aaa
sub
sarl
stos
daa
gs
dec
pop
aam
push
dec
xchg
into
adc
clc
fists
sti
int
jb
mov
mov
xchg
hlt
loop
movsl
fwait
ljmp
dec
scas
mov
mov
es
mov
jecxz
mov
negl
test
imul
leave
mov
sub
dec
cmp
ljmp
rolb
movsb
sbb
ret
into
push
mov
cmp
lcall
cmp
mov
cmp
jnp
insb
ja
setb
push
adc
aas
lods
jl
xor
dec
sarl
and
shll
mov
sar
inc
test
stc
jno
test
jno
in
fs
aaa
aad
push
movsb
pop
sub
imul
faddp
jo
xchg
adcb
or
out
fstpl
sbb
test
dec
or
popf
mov
jecxz
push
stc
inc
and
add
cmp
test
pop
sti
mov
in
or
cld
rol
loope
mov
loope
and
inc
mov
inc
pop
pop
push
imul
cmp
jecxz
enter
les
dec
xchg
mov
mov
test
mov
jno
mov
xchg
fstps
mov
adc
fwait
mov
rol
enter
into
lcall
fsts
push
imul
cmc
adc
cs
movsl
stos
mov
imul
cmc
adcl
out
mov
or
dec
addb
cmp
in
and
or
mov
xor
push
xchg
lret
inc
lods
jmp
mov
jb
sbb
dec
lret
jae
sub
out
dec
xchg
cmc
mov
pop
and
xchg
das
adc
je
dec
push
leave
cmp
jne
mov
jmp
sub
in
and
and
lock
insl
lret
fimuls
cmpsb
call
add
xchg
dec
cmp
add
mov
push
add
enter
shrb
cwtl
enter
xchg
cmpsb
out
cmp
xchg
xchg
mov
add
xchg
imul
fmull
add
lcall
addr16
sub
add
mov
mov
out
and
pop
gs
shll
push
rolb
mov
pop
imul
sbb
inc
jbe
lret
insl
mov
mov
cmp
pop
mov
mov
shll
cmc
and
cvtps2pd
mov
jbe
sbb
rcrl
inc
scas
mov
xor
fisubl
pop
and
scas
or
pop
add
or
lret
scas
movsl
mov
fs
rcll
js
push
lcall
stc
mov
sti
add
dec
xor
popa
in
setge
test
loope
shl
dec
shr
sarb
stos
addr16
mov
ljmp
das
jle
jmp
xchg
sub
jne
lahf
add
rorl
sbb
mov
stos
ret
in
push
mov
test
leave
insb
adc
sti
inc
xchg
push
sub
mov
adc
nop
mov
fwait
mov
mov
push
hlt
js
jl
pop
pusha
aad
popf
cmp
push
sub
sub
mov
bound
fimull
stos
inc
or
fnsave
ds
adc
sarl
xchg
frstor
pop
inc
ds
in
inc
sti
mov
call
xchg
mov
cltd
test
mov
and
mov
pushf
xchg
fcmovu
push
mov
andl
dec
add
mov
cmpsl
in
inc
adc
repnz
ffreep
jp
je
push
xorl
xchg
mov
sub
jns
adc
pusha
gs
test
out
das
sub
cs
stc
jb
xor
addr16
sub
dec
push
jmp
insl
sbb
stos
test
orl
js
or
jg
push
pop
outsb
js
xor
jno
push
pop
jbe
push
out
cs
das
pop
cmp
and
stos
pop
insl
sbb
mov
xor
mov
das
gs
sbb
movsl
adc
push
sbb
and
mov
adc
pusha
pop
fnstcw
pop
xchg
mov
jp
adc
dec
and
lahf
xor
mov
mov
xor
inc
mov
repnz
push
scas
jns
adc
pop
aaa
push
popf
mov
push
lahf
mov
mov
inc
mov
gs
fists
inc
add
mov
stc
fbstp
inc
stos
mov
jg
add
mov
jo
add
cs
outsb
jge
adc
lock
lahf
imul
leave
xchg
in
add
mov
sbb
mov
pop
dec
adc
dec
outsb
ret
enter
xchg
hlt
movsl
or
mov
inc
and
sbb
xorb
mov
mov
aad
imul
test
insb
cmp
xorl
lock
in
imul
ret
push
adc
sub
push
fwait
pop
push
xor
in
inc
adc
cmp
or
mov
repz
push
lods
mov
cmp
sbb
cmp
adc
clc
inc
stos
data16
testb
push
xor
push
cmp
push
in
mov
sub
xchg
rcrb
pop
mov
fs
ljmp
inc
pop
mov
dec
jge
lods
fildll
outsb
inc
clc
cli
out
and
mov
mov
shrb
xor
mov
cmpsl
fs
mov
and
lods
xchg
mov
mov
mov
and
cmp
pusha
je
popl
pop
sbb
mov
jae
jo
outsb
cld
pusha
aaa
addr16
cmp
repnz
jecxz
shrb
in
idiv
inc
in
addr16
mov
stc
sub
add
mov
ljmp
movsb
adc
rcrb
fstp
pop
jns
jmp
int3
icebp
lds
inc
dec
out
xchg
xchg
inc
repnz
push
inc
or
fwait
rcl
xchg
pop
mov
or
das
mov
dec
in
jno
decb
xor
push
adc
pop
je
lcall
ljmp
idiv
adc
jmp
sahf
jmp
icebp
out
cmpsl
jbe
xchg
rcll
iret
and
test
movb
popf
push
xchg
fisubs
add
push
sbb
mov
fcompl
or
arpl
ljmp
movsl
repz
xlat
push
mov
ret
into
fdivrs
mov
or
xchg
mov
xchg
jl
movsl
ss
dec
push
xchg
add
jne
mov
inc
jbe
fisubrs
cmpsl
ljmp
aad
push
loopne
push
mov
cmp
arpl
in
dec
cmp
aam
inc
xchg
fwait
pop
sub
shrl
xchg
push
jae
jae
data16
sbb
mov
or
int3
rcl
aam
and
mov
xchg
ret
pop
inc
jbe
iret
xlat
call
jbe
testb
pop
or
out
xchg
lcall
or
mov
push
fs
xchg
ja
es
pop
lods
sub
mov
cli
jecxz
out
aad
or
fstpt
cmp
bound
stos
movsb
cmpsl
iret
xchg
repnz
and
aaa
mov
dec
imul
xchg
push
repz
lahf
inc
jo
xor
cmpsl
mov
add
push
and
out
cmp
leave
nop
cld
stos
dec
push
push
cmp
pop
push
xchg
pop
push
xchg
in
push
es
addb
inc
jno
mov
push
iret
jle
lea
lods
testb
mov
dec
sti
or
adc
dec
push
sahf
in
jb
xor
inc
ljmp
fidivrl
stc
aaa
cld
int3
mov
adc
fcmovnb
rcrb
out
ret
roll
jo
or
jp
xlat
and
mov
cwtl
xor
movsb
in
and
mov
lahf
mov
test
out
push
fs
outsb
jb
lea
repnz
add
mov
movsl
cmp
jge
xchg
jg
or
popa
push
jbe
les
fcoml
mov
add
mov
mov
mov
jne
adc
or
lahf
call
sub
dec
push
stos
inc
jg
inc
xchg
lea
jle
movsb
scas
inc
test
loope
push
out
inc
das
test
pushf
cmp
lahf
dec
arpl
xor
inc
dec
push
push
in
popf
in
mov
popf
loopne
fisubrs
jae
push
std
add
bound
das
mov
xor
pusha
push
jo
add
push
sub
lret
shll
jge
sbbl
cltd
ds
stos
clc
push
test
mov
add
mov
movsb
jbe
movsl
ds
lods
jae
les
adc
pop
subl
and
shll
xor
out
dec
mov
inc
leave
sub
sub
aad
sbb
inc
das
icebp
adc
or
out
ss
iret
fsubl
or
sbb
mov
and
bound
sarb
mov
rcll
jl
jecxz
aad
jp
mov
fnstsw
fistps
movsb
push
cmp
cmp
fdivl
inc
inc
lret
jge
dec
pop
jbe
in
sahf
cmpsb
xor
or
negb
jmp
scas
fnstsw
insl
fldt
jmp
push
insl
cli
mov
pop
das
inc
movsb
movsb
cmp
pop
xor
adc
negb
jl
out
inc
sbb
test
bound
rolb
into
jns
jle
into
das
ja
lods
clc
sbb
mov
xchg
push
pop
out
fmulp
mov
pop
mov
dec
sbb
stos
pop
pop
inc
stos
dec
mov
mov
loopne
sbb
lcall
add
sub
jae
je
repnz
jae
loopne
add
jae
xchg
cmp
push
jno
jmp
mov
pop
lcall
add
mov
jnp
or
jne
enter
jge
ljmp
xchg
aas
mov
pop
xchg
xor
jg
mov
mov
dec
mov
push
setne
mov
jae
or
fidivrl
andl
out
xchg
pop
cwtl
and
test
bound
xchg
xor
pushf
pop
aam
jne
lret
fidivrl
xor
shrl
ret
aaa
call
arpl
jns
push
dec
les
data16
cmc
rcl
inc
adc
icebp
aam
movsl
ja
out
xchg
jl
xchg
cli
pop
cltd
sub
xor
xchg
or
lock
movsl
inc
test
fs
jne
xlat
mov
movsb
inc
movsb
dec
cmp
ljmp
cmp
add
nop
adc
dec
loop
rolb
mov
roll
ja
add
pop
mov
inc
push
das
call
sahf
dec
jo
into
sub
aam
shrb
sahf
insl
push
inc
jge
test
adc
dec
cltd
daa
adc
and
jmp
sbb
out
cmp
push
sbb
sbbb
shr
sub
std
jg
jno
addr16
sbb
mov
and
fdivp
std
and
lahf
cmp
fcmovb
mov
jecxz
mov
std
push
jg
fisttpl
insl
fs
and
jne
jle
test
sbb
ds
negl
hlt
dec
je
rcrl
cld
sbb
push
push
jbe
sub
lds
aas
cmpsl
fistl
aam
xchg
cwtl
cli
xchg
in
pop
aam
push
cld
add
xor
hlt
call
and
icebp
xlat
sub
leave
cmpsl
mov
push
arpl
mov
pop
std
add
rcrb
xlat
cs
test
jae
cld
adc
inc
pop
pop
addr16
je
out
xchg
cld
andb
mov
sbb
add
sub
les
aam
das
imul
test
cmp
pop
mov
adc
enter
mov
mov
insl
add
and
shlb
sub
inc
test
negl
int
sub
inc
notl
pusha
hlt
mov
mov
ret
pusha
sub
dec
sahf
rolb
stc
out
sbb
repnz
inc
fwait
ljmp
lret
or
or
cmp
loope
pop
push
adc
stc
jg
mov
icebp
imul
mov
int
aam
mov
lret
aas
inc
inc
stc
cmp
pop
sbb
xchg
mov
inc
jne
shlb
scas
mov
adc
daa
xchg
pop
inc
or
xchg
mov
cmp
addw
shlb
aas
xchg
sbb
ror
dec
arpl
std
icebp
sbb
sub
ds
mov
jns
xchg
sbb
push
call
jmp
in
int3
mov
adc
out
test
push
into
test
and
mov
mov
fwait
push
push
in
arpl
mov
std
push
fstl
cmp
xchg
movups
inc
dec
jns
rcrb
push
lret
flds
push
in
shll
pop
mov
imul
xchg
jns
lcall
aas
aaa
and
mov
sahf
dec
in
sbb
arpl
pop
lahf
push
ss
mov
les
mov
dec
xor
hlt
lcall
test
movsl
les
sarb
es
jp
push
add
jns
xchg
in
orl
aas
in
icebp
push
jmp
mov
jg
lret
pushf
insb
mov
dec
mov
lret
cwtl
jg
adc
inc
aam
mov
xchg
mov
sbb
pop
out
pop
push
and
dec
jbe
push
aad
in
xchg
rclb
aas
jg
scas
push
rcr
xchg
xchg
dec
xlat
mov
jae
ja
scas
mov
dec
mov
cmpsb
cld
jle
fdivrs
jmp
jecxz
pop
out
pop
outsb
or
shlb
push
scas
fdivl
pushf
mov
mov
pop
xor
mov
pusha
push
xor
jl
movsb
movsb
push
in
aad
stc
add
or
jg
xor
out
out
cmp
leave
andb
sbb
cmpsb
cmp
jecxz
cmpsl
sub
shr
sub
out
pop
clc
mov
icebp
stc
and
aaa
outsl
clc
sti
xchg
add
outsb
cmp
add
add
mov
mov
call
ret
aam
adc
xor
mov
mov
sub
mov
dec
cmpxchg
leave
subb
add
push
mov
call
mov
push
rorl
jmp
add
int3
insb
imul
in
stos
jl
fldenv
cmpsl
jne
jle
pushf
je
push
mov
int
fdivr
inc
jecxz
sbb
roll
pop
outsb
add
xchg
sbb
pop
arpl
pop
sub
sbb
mov
pop
sub
and
mov
mov
push
sbb
rcll
jb
jns
into
popl
dec
les
sub
fbld
out
pop
xchg
repnz
mov
fsts
js
insb
mov
mov
roll
fiaddl
push
sbb
shrl
and
sub
sbb
aad
sbb
xlat
stos
addr16
movsl
jg
out
pushf
aas
lcall
es
lds
lods
fnstsw
stc
hlt
out
repnz
repz
jle
sti
repz
pop
or
mov
daa
ret
popf
dec
push
and
in
cld
dec
dec
push
aam
sbb
addr16
fildll
dec
lcall
leave
xchg
jle
mov
add
test
int3
gs
jae
iret
sbb
mov
loope
xchg
jae
sbb
fbstp
mov
je
out
fwait
xchg
dec
push
mov
add
push
and
xlat
pop
pop
xchg
push
add
pop
pop
mov
lahf
jno
adc
cmp
lds
inc
clc
jo
adc
lahf
in
test
in
in
ret
push
jmp
push
stos
mov
jns
in
sbb
jbe
xchg
test
rcll
sub
addr16
outsl
jl
dec
mov
dec
pop
sub
xor
mov
push
sub
sbb
jo
bound
sbb
and
popa
loope
jne
loop
movsl
pop
sub
mull
sbb
dec
jecxz
push
push
call
mov
rcr
clc
or
push
or
mov
sub
xor
mov
pusha
lods
test
sbb
test
aad
dec
and
sub
mov
std
mov
push
jecxz
jp
sbb
in
call
push
xchg
xchg
jb
xchg
ss
cmpsl
cwtl
push
das
add
loop
ret
pop
fs
mov
cmc
pusha
push
loopne
xor
cmp
cmp
popf
jecxz
out
fisubl
sti
adc
stos
test
lds
adc
in
push
popf
ret
or
or
loope
mov
xor
mov
sbb
lds
test
outsb
in
cmp
inc
mov
dec
cmp
hlt
test
stos
cmp
ret
in
cmp
out
mov
sub
sti
dec
xor
cmp
in
and
loopne
cmc
fstpl
dec
repz
sbbl
mov
out
stc
push
rolb
mov
repz
adc
std
leave
dec
in
sub
pop
fs
inc
out
jmp
pop
lea
popf
cmpsb
fwait
dec
rcrb
pop
gs
xchg
lock
push
jns
xchg
andb
sbb
lods
sti
jle
rorl
jp
cmp
out
mov
mov
test
call
add
cmp
fldl
daa
int3
mov
mov
inc
leave
sub
dec
in
jle
inc
jne
adc
cmpl
push
mov
xchg
scas
inc
xor
fimuls
jae
adc
push
xchg
adc
es
mov
mov
xchg
roll
add
nop
pop
les
pop
stos
cmp
in
dec
pop
jle
in
mov
xchg
cmp
pushf
xchg
rcrl
fwait
push
loop,pn
loop
cltd
orl
mov
jae
jnp
push
push
jns
pop
mov
mov
fwait
shll
pop
cmc
fs
add
adc
xor
jecxz
lock
ret
ret
repnz
mov
rorb
jae
mov
xchg
imul
push
in
sbb
rol
cltd
jl
xchg
and
add
dec
sub
mov
jl
inc
ret
enter
ss
xchg
add
fst
inc
xchg
les
sarl
pusha
lahf
sti
lret
lods
mov
shll
mov
enter
pop
adc
subl
test
sbb
add
fstpt
jmp
sbb
sub
cmpsb
fsubrl
int
es
cmp
mov
inc
movsl
xchg
call
add
daa
pop
add
addl
mov
mov
push
sti
movsb
test
add
mov
insl
int
aam
repnz
dec
push
or
jp
jns
sbb
push
jno
xchg
push
mov
push
cli
cmp
xchg
jl
dec
repnz
and
leave
cwtl
cmp
insl
aas
jns
insb
mov
pop
pop
mov
outsl
adc
jae
add
push
sbb
xorb
sub
and
mov
cltd
fimull
dec
adc
mov
and
idivb
jle
inc
getsec
fildl
push
roll
mov
cmp
cli
jecxz
insl
lds
or
mov
xchg
cmp
arpl
push
mov
out
pop
jp
cmp
repnz
aam
mov
iret
mov
mov
xchg
arpl
xor
cltd
int
adc
sbb
cmp
rorl
adc
sbb
mov
test
int
pop
cwtl
pushf
ret
popa
scas
test
jecxz
xchg
popa
sbb
adc
loopne
pop
push
pop
ja
xor
jae
mov
cmpsl
lret
xor
cmp
aas
xor
addr16
cwtl
movl
pop
add
fisubs
clc
mov
popa
push
add
mulb
aaa
pop
lahf
lods
lea
hlt
mov
mov
inc
lds
es
xchg
fadds
gs
dec
mov
xor
into
ljmp
decb
xchg
test
mov
pop
adc
xlat
xor
inc
pop
test
xor
inc
dec
stc
lret
test
jae
jp
sbb
in
mov
or
and
int3
inc
lds
mov
pop
ud1
int
fcompl
xor
stos
push
js
xchg
mov
or
fs
xor
mov
sub
fbstp
fmull
sbb
pushf
andl
sbbb
mov
pop
cltd
cltd
sub
js
inc
push
sbb
sbb
mov
icebp
clc
fstpt
in
bound
xchg
int
arpl
pusha
mov
enter
popa
xchg
or
cmp
inc
xchg
dec
xor
sbb
jne
adc
mov
loop
mov
sub
sub
mov
push
les
je
and
push
sti
leave
jne
stc
fistpll
xchg
cmpsb
lahf
pop
sbb
das
ds
cmp
in
or
pop
in
or
nop
cmp
xchg
std
mov
sub
std
je
mov
lea
ret
pop
inc
ficoms
push
cmp
jno
xchg
mov
outsl
loop
out
inc
data16
pop
fdivrs
into
call
iret
push
or
sbb
mov
xorb
mov
fildll
mov
pushf
add
adc
push
mov
daa
jle
jp
sysexit
aam
es
stos
shl
outsl
pop
cmpb
dec
push
inc
fwait
sub
test
jns
push
stos
js
nop
ss
sarb
icebp
lds
xchg
jge
pop
movb
cmc
fadds
xchg
xor
in
scas
xchg
jge
or
lcall
ret
int3
fcomps
popl
jle
add
jp
test
into
notb
mov
cmp
lods
push
out
xor
adc
sub
jae
xchg
inc
push
sub
mov
test
loopne
jl
je
repnz
pop
mov
and
jae
xorl
loop
xchg
adc
or
iret
xchg
enter
xchg
lcall
sub
pusha
ja
pop
and
sbb
rorb
frstor
sub
mov
and
loop
gs
scas
popf
dec
addr16
pop
repz
orb
insl
xchg
fs
push
lods
mov
and
push
cld
pop
push
sbb
sub
idiv
rcrb
push
cwtl
enter
inc
mov
sbb
or
mov
xchg
mov
push
jo
pop
loopne
jl
popa
push
cld
mov
cmp
aam
push
xchg
or
or
mov
push
inc
repz
mov
add
ljmp
sarl
fsubs
nop
clc
outsb
push
push
inc
lods
lret
jne
dec
les
cmp
push
fs
sub
mov
inc
mov
adc
sbb
jbe
inc
add
stc
je
cmc
dec
adc
cltd
or
mov
jmp
mov
pop
hlt
lret
cmpsl
mov
popa
cmp
push
dec
sub
movsl
cltd
cli
es
test
inc
mov
mov
out
cmc
aad
push
adc
cmp
data16
shl
pop
rol
out
movsl
call
repz
bound
mov
shlb
push
mov
pop
scas
mov
out
jmp
cwtl
mov
inc
push
jle
fwait
mov
pop
or
push
mov
sub
and
mov
aam
push
and
jns
rcll
pushf
out
add
add
loop
sub
push
lret
mov
in
pop
xchg
mov
mov
js
out
jle
xor
insl
jno
jg
sbb
clc
into
fwait
xchg
push
or
mov
mov
lock
daa
push
lock
lcall
jno
inc
rolb
cmpsb
pop
push
mov
fisubl
es
repnz
push
cmpsl
fnstenv
jns
dec
js
inc
ftst
xchg
enter
in
inc
jle,pt
inc
or
pop
xchg
test
push
dec
inc
inc
imul
sub
mov
hlt
incb
mov
cwtl
dec
jne
adc
sub
push
sub
jg
sub
mov
insl
imul
rclb
and
cmp
bndstx
pop
push
or
call
nop
cmpsb
in
test
nop
std
shlb
adc
jge
dec
pop
aas
add
push
pop
mov
imul
mov
cld
cmpsb
ror
xor
shll
push
cltd
cmp
jecxz
mov
mov
fucomp
mov
bnd
fldenv
jp,pt
lds
cwtl
mov
push
out
mov
insl
xchg
xor
gs
popf
sti
test
in
mov
loop
repnz
test
xor
in
vmwrite
ljmp
push
jae
xchg
mov
and
and
mov
mov
fmull
inc
or
add
das
push
jnp
cmp
xchg
cmp
imul
add
push
pop
scas
addb
adc
inc
push
mov
cmp
test
je
in
push
and
in
mov
jmp
dec
mov
imul
xacquire
popl
xlat
push
das
in
ja
iret
shl
xrelease
fstpl
inc
jle
xchg
adc
fstpt
pop
jno
into
cltd
and
dec
test
cmp
sbb
sub
in
pop
popf
mov
icebp
iret
push
stos
jb
and
out
pop
popa
xor
in
sbb
xchg
fadds
dec
or
push
xlat
and
sbb
mov
mov
jge
mov
adc
sub
and
nop
popf
cmp
xchg
outsb
mov
ss
xor
sub
shll
sub
mov
or
adc
jae
push
mov
inc
sub
int
push
pop
jg
inc
rcrb
push
aaa
fsub
cld
push
dec
mov
and
int
lret
jb
jmp
lds
cs
clc
jno
dec
inc
mov
pop
jno
sub
mov
lcall
adc
xor
cs
int
cmp
andl
xor
mov
mov
sub
mov
loope
icebp
cmpsb
fwait
js
stos
sub
fidivs
addl
call
pusha
movsl
mov
pop
mov
sbb
and
ds
xchg
xchg
lcall
push
les
ficoms
push
int
xor
leave
dec
xchg
adc
test
cmpsl
cvtps2pi
or
cli
decb
cli
and
aad
xchg
pop
mov
ss
cmp
mov
repnz
movsl
mov
sbb
mov
mov
jns
dec
jnp
sub
stos
dec
out
mov
sub
rol
xchg
mov
jae
out
inc
out
les
fs
jecxz
aaa
push
pavgw
and
shll
insl
push
mov
les
sbb
lds
sarl
jae
repz
or
xchg
ja
ja
xlat
out
enter
inc
in
fdivr
js
shll
loopw
lahf
les
lcall
xor
andb
inc
jp
mov
cmp
subb
jle
cltd
rcrb
xchg
aam
mov
mov
xor
add
xchg
or
add
lds
jae
mov
sbb
pop
jl
cmp
lea
inc
fcomi
jle
scas
jge
jle
mov
out
and
jle
loop
lret
push
push
scas
addl
outsl
mov
xchg
lock
insb
adc
cmp
mov
shlb
pop
xchg
fbstp
insl
je
lret
aam
pop
push
insl
push
cmc
sbb
mov
mov
add
je
cmp
loop
subl
mov
cmp
sbb
cmp
mov
add
test
ja
mov
xor
mov
sti
mov
sbb
mov
subl
mov
les
push
jb
sub
fwait
pop
lds
sub
cli
adc
lods
push
aad
insl
pop
loop
adc
lret
insl
pusha
xor
out
pop
aam
pop
sarb
add
inc
dec
scas
loope
outsl
jns
add
inc
scas
xchg
imul
jmp
repz
testl
fsts
shrl
fcompl
outsl
fwait
shll
adc
scas
arpl
jbe
xchg
push
mov
fmull
xor
pop
sub
rcll
aam
jp
in
fldl
or
aad
test
add
xchg
pop
inc
lods
sub
in
xchg
ja
scas
roll
iret
fs
jns
mov
inc
adc
out
inc
jne
cmc
insb
jmp
push
movsb
jne
lock
ret
int
and
xchg
sub
xor
cwtl
pop
fdivs
out
push
and
divl
fists
inc
scas
leave
in
push
loopne
shl
sbb
inc
movsl
sub
mov
fistps
fisubrl
mov
jo
and
int
add
popf
adc
adc
jg
jle
repz
add
enter
lahf
or
adc
pop
lods
dec
cmpsb
mov
es
sbb
pop
loopne
mov
sub
add
jp
push
mov
mov
pusha
or
pop
and
pop
mov
imul
inc
ret
sub
mov
jb
dec
jo
sti
jns
dec
xor
mov
out
jbe
imul
add
mov
mov
data16
dec
mov
sub
cmpsb
add
mov
cmp
inc
sbb
js
fldenv
and
xor
out
mov
sub
and
shll
orl
rorl
int3
in
add
xor
nop
fadds
andb
dec
sahf
pop
pop
cmpsb
fstpl
stos
mov
sarl
xchg
clc
sbb
fmul
xadd
daa
aam
aam
into
int
push
out
pop
daa
stos
aad
ja
call
pop
mov
sub
jns
jns
sub
roll
ljmp
pushf
or
mov
outsb
rol
sbb
inc
pusha
nop
enter
stc
sbb
ds
lds
sbbl
adc
sbb
repz
daa
out
xor
mov
add
jo
inc
cmp
into
roll
fmuls
test
push
pop
out
call
pop
repz
icebp
stos
in
mov
mov
mov
dec
shrl
in
jg
inc
xor
pop
jo
push
sbb
add
jb
test
sub
addr16
pop
nop
jg
jo
cmp
or
stos
mov
js
inc
lds
incl
mov
iret
imul
daa
pop
jae
lret
xlat
add
addr16
iret
fs
sub
cs
fists
mov
aad
push
jnp
sub
bound
xlat
jae
call
push
pop
cmp
mov
jg
fldenv
mov
imul
imul
cmp
dec
sar
push
and
es
icebp
lods
push
arpl
jle
cwtl
cmc
cmpsb
mov
pop
xor
lods
adc
stc
or
test
ret
push
jmp
stc
test
pop
lcall
dec
lahf
cmp
aas
dec
pop
pop
push
sbb
mov
or
mov
mov
enter
push
test
lret
sub
pop
or
movl
cmc
int3
adc
inc
pop
pop
xchg
push
mov
add
xchg
push
adc
fmuls
push
pop
lock
enter
cmp
mov
dec
repnz
cmpsb
jbe
aad
imul
popa
xchg
and
fildll
add
mov
sbb
sbb
loope
jl
test
xchg
mov
shlb
sbb
or
xor
xchg
rorl
loopne
imul
cmp
imul
rcrb
pop
lds
jbe
lret
jno
jp
cmp
imul
rorb
outsb
into
out
mov
xchg
fst
push
in
adc
pop
push
sub
inc
mov
pop
sub
jne
jmp
lea
es
push
push
outsb
mov
sbb
daa
ds
inc
cmp
cmpl
mov
clc
inc
ds
mov
aas
test
push
mov
inc
push
dec
and
jle
add
jmp
pop
and
adc
adc
in
sbb
gs
pop
add
loopne
mov
push
les
jp
in
push
jp
cli
lods
lea
push
mov
jmp
jp,pn
mov
les
std
and
fs
test
mov
add
imul
xchg
ljmp
imul
sub
jb
sbb
and
pop
inc
pushf
mov
pop
cmpsb
cmpsb
jmp
test
add
ret
lods
or
iret
jbe
push
jo
and
xor
fsubl
fucomp
push
mov
push
enter
sub
and
jecxz
lret
out
test
mov
and
xchg
jle
sbb
mov
lcall
push
sahf
push
lds
mov
jbe
repz
pop
jp
pop
mov
pop
movswl
push
pop
imul
iret
jne
divb
adc
add
mov
mov
stc
xchg
movb
lea
hlt
je
pushf
mov
jge
cmp
sbb
sbb
or
repz
clc
scas
xchg
jbe
push
push
out
nop
jp
push
fisubs
fmuls
data16
into
scas
or
mov
clc
sbb
cwtl
jb
js
adc
or
xchg
and
or
movsl
xor
push
jns
mov
ffree
pop
ss
mov
pop
xchg
jne
pop
into
insb
sarl
bound
insl
frstor
stc
data16
rorb
in
mov
jbe
test
pop
push
lret
jo
mov
nop
out
and
lods
imul
fwait
xor
mov
push
cltd
adc
outsl
push
cli
test
idivb
xchg
imul
xor
jo
and
adc
lea
lds
inc
mov
cwtl
mov
repz
xchg
adc
push
adc
mov
pushf
jmp
cmp
stos
pop
lret
stos
push
sbb
in
enter
f2xm1
outsb
mov
ss
or
cwtl
mov
jg
xor
mov
fistl
in
inc
into
push
scas
popa
pop
cld
aaa
fucomip
loop
or
test
leave
mov
push
pop
adc
test
jg
js
cltd
sub
jmp
adc
add
ljmp
push
inc
stc
and
jp
cld
sbb
inc
fildll
sub
in
test
lret
inc
dec
inc
jp
sub
scas
pop
movsb
jb
push
mov
cld
push
push
iret
stos
sbb
dec
fsubrl
dec
cmp
pop
mov
mov
xor
fistpll
push
pop
add
jg
incl
push
lea
mov
incb
fs
in
inc
js
fistl
addb
push
or
and
cmp
or
push
xchg
js
loop
and
js
pushf
push
jns
xchg
into
scas
add
fcmovne
clc
scas
cs
mov
push
aas
pusha
mov
pop
jecxz
daa
out
sahf
addb
xlat
fidivrs
or
mov
or
iret
xchg
pop
xchg
jl
lcall
sub
jmp
popa
sbb
lea
scas
jae
push
xchg
das
mov
push
in
jne
std
call
flds
xor
popf
cmp
fildll
cmp
fnstenv
mov
js
xchg
mov
clc
lock
lods
div
cld
xor
leave
mov
mov
js
pop
adc
sbb
imul
popa
dec
mov
mov
idivb
xchg
xlat
mov
mov
push
dec
cld
repnz
sub
pushf
imul
pop
jmp
in
pusha
sub
xlat
or
jno
sbb
jmp
test
fwait
movsl
testl
sub
jo
arpl
inc
popf
adc
push
stos
jns
mov
or
outsl
fimuls
jnp
mov
popl
mov
iret
in
inc
into
loopne
jle
scas
jbe
xor
fldl
and
dec
mov
fdivl
push
ds
mov
lods
inc
mov
adc
or
std
scas
cmpl
cmp
iret
push
or
add
lret
fcmovnbe
bswap
pop
pop
lods
popa
bound
fcom
pop
jp
pop
xor
xchg
ja
mov
das
leave
int3
jno
lods
pop
mov
or
mov
out
jge
and
test
push
mov
add
test
adc
in
xor
in
jg
aas
mov
dec
mov
mov
fpatan
imul
popf
cmpl
mov
mov
pop
xor
add
fdivl
cmp
test
movsl
push
xchg
xor
xor
jg
sub
popf
mov
adc
sbb
sarb
aaa
push
xor
mov
or
jg
push
or
mov
imul
fstl
mov
rcr
lea
std
mov
ss
push
and
mov
jns
jo
mov
push
test
paddusw
out
mov
dec
jecxz
sub
test
adc
or
cmp
scas
push
cmp
pop
jnp
or
scas
jge
sbb
jle
dec
sub
mov
inc
mov
sub
test
jo
daa
or
jecxz
int
fwait
inc
mov
mov
notl
pop
jmp
pop
data16
fwait
std
push
dec
dec
shl
push
xlat
andl
mov
adc
dec
idiv
fincstp
roll
fs
jb
xchg
lds
or
jb
cmp
or
push
shll
leave
leave
and
sbb
add
sahf
inc
push
hlt
xor
dec
jne
movsb
arpl
rcll
pop
xchg
push
or
pop
pop
std
leave
jp
xor
and
xchg
cmpsl
out
push
mov
xchg
aaa
shr
mov
repz
and
jbe
xlat
iret
jnp
shlb
cld
and
es
xor
das
mov
or
imul
mov
lcall
sub
push
fwait
scas
sbb
and
mov
cmpsl
punpckhdq
adc
xchg
fisubrs
fdivp
xor
rcrl
loopne
and
cs
sub
fidivs
mov
push
int3
inc
test
pop
sub
lock
jns
sarl
push
sbb
shll
insl
or
loop
mov
hlt
inc
pop
or
popf
cmp
push
inc
jecxz
sbb
mov
ret
sbb
gs
jbe
mov
test
in
mov
sub
ja
mov
sub
mov
imul
dec
shr
loope
cld
cmp
cmp
and
jne
sub
into
cmp
loop
jg
and
pop
and
das
mov
iret
mov
push
sub
fdivrs
test
mov
mov
lods
enter
test
and
fs
dec
lods
incb
adc
in
sub
dec
push
xchg
inc
xor
jge
pop
and
and
jbe
clc
sub
into
jmp
idiv
js
stc
push
push
jae
xor
dec
push
fs
iret
xchg
xchg
mov
push
pop
sahf
int3
int
pop
in
pop
push
loop
scas
fcomps
iret
or
jno
jne
sub
ficoms
mov
mov
add
jb
insb
jg
push
fldln2
stc
cmp
adc
pop
adc
inc
pop
xchg
out
mov
loop
cmc
push
mov
test
int
xchg
mov
repz
inc
stc
cs
stc
mov
pusha
and
inc
popf
or
out
pusha
sub
jl
and
cli
xor
mov
xor
adc
lahf
std
movsbl
ret
sbb
loope
cmc
sahf
imul
les
pop
loope
imul
scas
orb
or
push
inc
sbb
xor
push
jo
mov
xchg
shrb
xlat
test
jbe
mov
sbb
cmp
ja
add
cwtl
lods
lret
leave
addr16
stos
dec
inc
xchg
sti
inc
xor
std
ss
cmp
mov
cwtl
adcb
ljmp
add
mov
mov
imul
jmp
pushf
xor
lods
cmp
pushf
mov
sahf
dec
out
out
out
mov
test
sub
loope
or
pop
enter
sub
out
inc
lds
shll
dec
lods
mov
sarb
sub
test
fs
inc
mov
cli
mov
cmpsb
rorb
js
lods
cmp
mov
xlat
dec
mov
pop
mov
add
jmpw
outsl
mov
mov
testb
enter
jl
or
std
lods
inc
or
mov
xor
adc
popf
adc
mov
dec
and
mov
mov
jp
mov
std
lods
ds
xor
mov
dec
fcmove
aaa
test
mov
arpl
ret
xchg
dec
mov
cmp
jno
sbb
loop
fistpll
inc
push
mov
and
push
scas
xchg
orl
mov
jbe
sahf
cmpb
add
or
xchg
and
jge
rcrl
xor
in
mov
into
xchg
std
mov
push
ss
jp
or
jne
lret
jecxz
or
xor
neg
mov
push
pop
stos
mov
icebp
mov
xchg
push
sahf
push
inc
mov
add
cltd
shl
inc
xchg
push
mov
jecxz
and
fisubs
cmp
add
push
or
cmp
push
dec
ljmp
fsubl
jecxz
or
inc
dec
push
fisubs
sahf
ret
or
jge
or
insl
inc
lods
scas
adc
mov
iret
mov
mov
popf
es
cmp
xchg
js
lds
cmp
mov
in
shlb
xchg
repnz
fdivrs
sub
sub
sub
lock
mov
shrb
std
aad
stos
xchg
mov
nop
push
jns
gs
cmc
repnz
icebp
jbe
out
mov
js
nop
in
inc
xor
push
push
call
sbb
or
xchg
xchg
out
xor
leave
and
inc
mov
lds
dec
dec
or
jbe
pavgw
jne
mov
cwtl
repz
out
in
lcall
fcomp
mov
out
shlb
ret
test
ret
inc
fs
in
sti
loope
push
mov
lea
sbb
pop
mov
xchg
pop
loopne
push
push
cld
mov
push
mov
movsl
into
pop
mov
bound
pop
outsl
scas
nop
dec
mov
inc
pop
pop
dec
adc
cld
and
scas
xor
clc
mov
add
and
arpl
cltd
lods
ds
mov
fbstp
add
aaa
sbb
std
gs
mov
push
jmp
xor
lahf
aaa
std
cmp
pop
nop
in
cld
or
jp
aad
insl
xor
mov
iret
repz
lds
cmp
push
push
inc
insb
enter
sub
enter
push
jge
lcall
dec
mov
lahf
in
dec
lcall
mov
roll
add
fists
add
add
sahf
loopne
push
add
or
push
adc
ret
inc
xchg
cmc
inc
imul
in
es
imul
xchg
stos
mov
lcall
dec
jns
fdivrs
nop
mov
imulb
add
inc
or
lods
pop
rolb
cld
and
dec
push
stc
dec
dec
leave
mov
addl
xlat
xor
sbb
adc
pop
addb
fidivl
mov
add
dec
mov
cmp
jnp
fdivs
jne
cwtl
cli
mov
fwait
and
gs
jmp
cmpsb
fucom
popl
push
sbb
in
and
es
xlat
lahf
inc
notl
xor
jge
aas
dec
mov
add
fs
jnp
ds
pop
sub
cmp
or
or
push
inc
loope
fcoml
sub
shrl
adc
mov
cmpsl
lret
dec
mov
xor
fmull
jmp
sub
push
xor
arpl
jecxz
fisttpll
orl
pop
cmp
movsl
cli
xchg
inc
cli
pop
jg
cmp
sub
out
dec
sti
pop
mov
scas
out
dec
mov
je
pushf
cmp
inc
loopne
pop
add
lahf
mov
faddl
mov
and
nop
test
pushf
xor
mov
or
aad
lcall
in
xchg
out
stc
fwait
in
pushf
or
mov
std
cmp
in
jo
sbb
sar
cmp
in
popa
pop
rcr
pusha
cmp
mov
jecxz
inc
outsl
enter
lea
enter
jae
inc
or
dec
sbb
mov
jo
cli
and
popa
ja
xchg
addb
mov
ja
daa
imul
jle
pop
or
sahf
addb
ror
into
in
jnp
into
xchg
out
or
push
insl
xchg
icebp
cmc
dec
outsl
xor
sbb
jge
cmpsl
leave
xor
daa
jne
cltd
test
in
push
mov
push
scas
js
into
in
or
push
pop
jmp
faddl
push
push
sub
sub
sbb
mov
push
sub
nopl
add
push
aas
mov
mov
jnp
pusha
cmpsl
mov
icebp
inc
xor
into
mov
data16
pop
adc
das
xchg
pop
or
mov
mov
cli
xchg
icebp
add
push
fidivrs
inc
fstpl
mov
jbe
xor
in
fs
pop
mov
or
shrl
lds
out
add
jp
ret
pop
fldcw
dec
add
cmp
inc
jl
sub
cmpsl
mov
push
add
and
cmp
mov
xor
js
aam
xor
adc
mov
mov
adc
addr16
enter
test
fwait
push
xchg
mov
xor
push
popa
lret
cs
mov
xor
cmp
mov
aas
xor
cmpl
pusha
repnz
fadds
lret
loope
cld
jle
in
mulb
xor
pop
xchg
xlat
movsl
mov
push
cmp
clc
or
sbb
gs
mov
mov
pop
imul
lods
mov
roll
jge
inc
or
stc
pop
bound
idivl
ljmp
mov
fsubl
ss
imul
xchg
sbb
add
shll
add
sbb
stos
imulb
aas
add
xor
pop
pushf
nop
popa
jecxz
xor
inc
mov
dec
nop
push
in
dec
mov
mov
xchg
ja
sahf
add
enter
pop
push
data16
pushf
divb
popa
xchg
adc
das
in
les
pop
pop
pop
sbb
sbb
cmpsl
bts
or
jl
outsb
and
xor
aaa
sahf
lret
mov
xchg
xchg
bound
mov
or
into
sub
in
push
pushl
xor
into
movl
fisttps
inc
add
xchg
sar
pop
or
mov
ja
inc
enter
mov
cmp
bnd
jns
outsl
xchg
fisttps
iret
adc
push
outsb
xor
fs
fisubl
iret
xor
mov
mull
push
fildll
scas
inc
pop
sbb
negb
dec
push
lcall
outsb
bound
push
nop
in
js
jbe
pop
sub
inc
cltd
call
stos
add
loope
cltd
out
sbb
xlat
in
adc
das
popa
mov
lods
repnz
inc
mov
aad
pop
jno
add
loope
dec
inc
divb
mov
push
sub
shlb
mov
mov
jae
jae
xchg
push
test
mov
rcl
mov
xchg
mov
test
ficoms
or
cmpsl
imul
cwtl
inc
bound
push
dec
dec
std
lret
and
sahf
lret
fs
ljmp
cltd
fisttps
lcall
data16
fldcw
int3
cmc
decl
sarb
lds
fstpt
aad
jp
fnstcw
jg
push
pop
and
ret
dec
xor
jb
insb
fistps
insl
mov
test
push
sarb
insb
xlat
sbb
add
lea
hlt
neg
out
enter
lods
inc
jne
shll
cmpl
mov
inc
test
jb
add
jo
pop
inc
xor
cmc
fiadds
or
mov
cld
mov
mov
mov
rorb
push
xchg
fildll
stos
push
mov
aaa
imul
xchg
mov
lds
xchg
into
xchg
inc
dec
jns
fcmovnu
pushf
xor
jb
ljmp
add
or
shll
cs
pop
pop
pusha
stc
jmp
xorl
inc
push
push
mov
pop
andl
add
idivl
stos
mov
das
test
lret
mov
shl
pop
aam
mov
testb
sbbl
test
ss
push
mov
outsl
lahf
or
ss
inc
dec
jno
jl
dec
push
aam
push
jno
adc
cmc
sbb
push
insl
or
pushf
dec
add
pop
icebp
mov
sub
loop
negl
fisttpl
scas
mov
push
jmp
pop
inc
idivl
sbb
dec
adcb
in
inc
pop
testb
es
fnstsw
cli
sbb
dec
xor
sbb
imul
xchg
push
sbb
imul
mul
mov
xacquire
into
pop
je
or
lds
in
pusha
icebp
fsts
xchg
sti
cmp
ret
inc
jns
push
pushf
xchg
pop
imul
sbb
mov
cmpsl
ja
mov
add
pop
pop
mov
adc
leave
mull
sbb
incb
pop
fucomip
add
flds
adc
hlt
in
mov
rcr
adc
pop
jecxz
ljmp
pop
loope
out
mov
test
push
aam
push
inc
rorb
fwait
jno
jo
cmpsb
outsb
fmuls
cmp
mov
aas
cwtl
pop
push
add
cwtl
inc
sarb
mov
sbb
je
inc
pop
sub
lds
shll
pop
adc
repnz
xchg
lods
and
jno
dec
int3
pop
pop
xchg
push
inc
test
xor
dec
int3
cmp
loopne
sbb
add
mov
fisttpll
or
and
add
jns
lds
pop
adc
sub
mov
mov
bound
imul
xchg
or
adc
loope
sbb
xor
xlat
adc
loope
xor
aam
subb
and
scas
xchg
cmp
jge
or
in
xchg
rol
sub
xchg
cltd
mov
cmp
data16
inc
jg
xchg
pop
sti
mov
push
aaa
bound
enter
notb
ds
push
hlt
call
push
jmp
cld
xchg
movsb
loope
cli
aaa
sub
out
loope
mov
xchg
mov
fwait
mov
adc
cmc
pop
mov
mov
stos
jnp
fucom
push
out
cli
dec
pushf
scas
inc
inc
cmp
stos
lods
std
outsb
xchg
lret
lods
cmpsl
fldcw
ss
and
cmpl
add
sub
call
imul
cmp
mov
cltd
in
mov
mov
fwait
popf
xor
sqrtps
xlat
les
test
mov
jl
xchg
fidivrl
filds
fstps
fsubrl
mov
adc
out
mov
stos
je
xchg
push
repnz
and
push
cmc
test
push
push
repz
mov
clc
imul
mov
mov
insl
xor
ret
or
stos
rcll
cmp
pop
and
fistps
jbe
sbb
mov
rolb
dec
mov
cs
sbb
insl
mov
aam
mov
leave
sbb
shlb
jne
gs
inc
or
adc
xor
adc
push
mov
dec
gs
sbb
mov
pushf
test
faddp
mulb
cmp
imul
lock
les
mov
inc
sbb
out
dec
shrl
ficoml
sub
cmp
clc
nop
inc
shrl
enter
xor
jmp
xchg
mov
xor
cltd
xor
mov
insl
lock
mov
das
add
dec
lock
into
sbb
mov
mov
adc
pop
jmp
insb
xlat
insl
mov
imul
icebp
out
jg
jg
mov
cmpsb
xchg
adc
fucomi
jle
js
mov
pop
les
das
loope
ss
cld
ja
mov
pop
pop
rorb
jbe
addw
mov
nop
ret
sub
lret
pop
fildll
cwtl
jnp
adc
icebp
and
or
sbb
sub
mov
outsl
push
iret
lods
adc
test
xor
fs
das
fidivl
pushf
pop
nop
cld
lds
cmp
dec
cli
lods
out
lock
mov
or
mov
jecxz
cli
adc
outsb
stc
jno
dec
cs
data16
lret
popa
or
inc
sub
sbb
js
pusha
or
sbb
mov
inc
push
add
sub
lods
shll
adc
dec
xchg
test
je
ret
or
pop
pusha
popa
add
xor
nop
xchg
out
push
ja
roll
adc
lods
test
in
add
in
push
sbb
shlb
call
pop
xor
adc
push
lods
cli
add
push
sbb
push
lret
movsl
pop
sub
xchg
repz
pop
sbb
bound
xor
pop
and
and
inc
je
inc
sarb
sbb
icebp
pushf
hlt
xchg
lcall
aam
jae
jl
dec
and
ss
xor
sbb
test
fcomps
shl
jae
mov
dec
lods
fdivs
push
mov
bound
inc
or
cmp
lret
pusha
mov
adc
es
fnstenv
xor
scas
mov
mov
sti
fwait
cltd
jg
and
arpl
test
pop
ljmp
adc
test
adc
aas
stc
mov
pop
dec
pop
loope
js
sbbb
sub
popa
sub
pop
xor
loope
les
popa
cmp
enter
push
lods
lods
sub
inc
imul
jbe
ds
sub
int3
hlt
iret
xchg
xlat
pop
and
jmp
cmp
ret
das
sahf
dec
cmpsb
cmpsb
push
cmp
mov
imul
cmc
pop
aam
testl
add
push
bound
mov
dec
ss
nop
dec
mov
pop
je
pop
add
adc
adc
cmp
jnp
test
mov
adc
fwait
cmc
sub
xchg
jge
adc
jb
dec
test
int
into
outsl
add
and
popa
sbb
adcl
mov
dec
mulb
aas
rcrl
sbb
xor
cmc
xchg
jb
cmpsb
lods
les
add
mov
scas
ffreep
movsl
ja
pop
pop
jb
xor
into
adc
movsb
ss
imul
decb
aas
xchg
jecxz
jecxz
cmp
out
or
loopne
adc
fisubrl
lods
daa
xchg
popa
xor
loop
jb
adc
leave
stos
pop
aad
mov
mov
mov
in
pop
std
arpl
and
pop
add
es
pop
mov
mov
popf
xlat
jbe
out
addr16
aad
and
stos
sbb
push
inc
outsl
xor
movsb
std
in
xor
out
outsl
popa
icebp
sbb
outsl
outsl
sub
pop
mov
or
ror
xchg
iret
sub
cmp
sub
inc
idivb
mov
test
pushf
xor
push
cld
pop
and
push
out
shr
sbb
mov
sbb
enter
icebp
out
pop
addl
arpl
push
cld
insl
jge
sti
lods
das
and
test
icebp
mov
nop
stos
adc
xchg
or
arpl
push
adc
mov
gs
add
inc
imul
and
mov
cmp
or
sub
in
out
ss
pop
sbb
inc
aad
xchg
fs
lock
clc
cmp
stos
xor
jo
stos
aas
xor
jmp
insl
cmp
xlat
add
mov
jmp
sbbl
mov
xchg
xlat
jge
xchg
mov
divb
out
jge
pop
aad
jle
aad
sbb
pushf
push
sbb
xor
out
call
leave
and
jecxz
inc
lea
imul
mov
xor
adcl
push
popf
lahf
sub
sti
xchg
mov
inc
pop
push
aad
jmp
inc
jl
dec
and
lea
ljmp
ficoms
inc
and
cmp
sbb
jnp
jge
xor
mov
sub
lods
daa
shll
sbb
xchg
mov
shlb
and
in
in
daa
push
xchg
fstps
mov
popl
pop
ret
stc
inc
cmpsl
or
mov
mov
mov
cmpb
jmp
sarb
lcall
xchg
out
rorl
pop
inc
pop
and
aaa
pop
mov
mov
push
into
add
cmp
call
mov
push
scas
pop
push
sub
push
rcr
icebp
repnz
inc
cmc
scas
int3
cmc
mov
rcll
xor
es
sahf
movsb
pop
rcr
mov
jne
aas
lea
adc
push
arpl
jecxz
mov
push
pop
mov
ss
ficompl
stos
or
cs
add
fwait
cmc
in
and
cmp
inc
test
fwait
popl
cmc
test
mov
ljmp
int3
insb
stos
xor
or
rcr
fdivrs
dec
aaa
movl
push
scas
js
movsl
in
sub
arpl
cmp
ret
sub
cmp
sbb
mov
popa
jmp
stos
sub
and
xor
xchg
std
movsl
cmpsl
cmc
cmpsl
cli
push
cmp
sub
fcom
aaa
jno
leave
push
mov
sbb
pop
jg
mov
or
aaa
shlb
jo
in
sub
mov
xor
or
push
xlat
cmp
stos
out
mov
fisubs
jnp
add
mov
inc
push
xchg
xchg
adc
mov
inc
jmp
inc
sub
inc
daa
das
nop
xchg
mov
int
inc
xchg
pop
testl
js
sti
arpl
xor
push
ret
inc
fldl
lods
push
cmc
sarb
adc
sub
clc
lds
jmp
movsb
push
mov
out
pop
cmpsl
push
jmp
shrd
push
cmpsl
xlat
push
rorl
hlt
adc
movsl
fwait
xor
or
div
fnstsw
inc
popf
or
mov
ja
mov
adc
inc
mov
lods
mov
lods
or
dec
adc
inc
push
mov
xor
mov
into
bnd
out
clc
lods
inc
add
xor
mov
std
mov
xor
nop
stc
fiadds
or
sahf
or
loopne
aas
or
pusha
mov
mov
jno
test
mov
insb
outsl
fisttpl
inc
outsl
xor
enter
fldcw
xor
loope
cmp
push
daa
xor
cmc
mov
adc
popa
movsl
lret
insl
push
xor
outsl
fbstp
mov
repz
sahf
in
and
test
push
ret
aad
sub
into
adc
mov
lds
mov
fwait
mov
dec
xchg
push
xor
xchg
add
movsl
sub
xchg
mov
test
push
iret
add
jns,pt
aam
movb
push
mov
pusha
imul
pop
adc
invd
sbb
xor
dec
inc
lret
clc
mov
jnp
std
cmpsb
xchg
mov
leave
xor
in
outsb
mov
xchg
sbb
jb
icebp
aaa
pop
cld
jbe
imul
xchg
sbb
sti
sbb
gs
out
test
xchg
inc
lahf
inc
cmp
out
xor
xor
scas
out
aaa
inc
inc
das
imul
sub
in
jecxz
dec
push
sub
iret
or
xchg
loope
mov
rcl
inc
sub
sub
das
jle
hlt
add
cmp
jo
sbb
lcall
lea
sub
push
arpl
xor
add
mov
mov
stos
xchg
inc
out
mov
jo,pn
xchg
push
lods
sbb
clc
mov
dec
cmp
jmp
out
lods
cmp
fnstsw
lret
inc
jge
iret
push
testl
stos
and
fnstenv
adc
je
and
sbb
cli
mov
mov
cwtl
addr16
jge
sbb
xor
std
dec
sahf
lea
into
add
jnp
adc
mov
pusha
popf
pushf
ss
lahf
sub
cwtl
dec
adc
push
mov
cwtl
or
leave
or
cli
scas
scas
stos
mov
fs
and
cs
std
xchg
cmp
add
out
mov
fwait
jns
bound
js
cmp
sub
jg
call
clc
int
icebp
imul
and
mul
jg
les
and
lret
lret
repnz
xor
pushf
cld
or
fdivrl
icebp
adcl
xor
push
je
shlb
pop
test
inc
lds
mov
inc
jb
andl
push
dec
push
xorl
mov
popf
xchg
fadds
dec
sub
rcr
es
xor
out
cmp
inc
rorb
adc
xchg
sbb
mov
pop
out
addr16
mov
pop
pop
js
push
in
or
jecxz
push
ljmp
jo
jge
out
out
cmp
mov
adc
daa
fcomps
jnp
add
or
mov
daa
pop
dec
inc
clc
jns
add
inc
or
ljmp
push
or
out
pop
out
adc
in
sbb
adcl
sub
iret
outsb
inc
mov
cmpsl
adcb
jecxz
movzbl
and
jno
cld
arpl
xchg
in
or
lret
pop
push
and
andl
fwait
push
pop
es
repnz
in
fstps
loop
cmp
push
test
jmp
test
cmp
imul
or
pop
pop
ja
or
sbb
sbb
dec
mov
sub
inc
xor
jp
cmp
push
push
loope
movq
cwtl
sub
aad
insb
ret
mov
test
jg
or
int3
xor
out
xchg
cmp
xor
dec
mov
pushf
popf
imul
decl
add
jnp
and
fiadds
iret
out
or
popf
push
jecxz
sub
xchg
aam
mul
repnz
les
stos
inc
bound
sbb
popf
out
push
imul
pop
gs
cmp
in
sub
je
hlt
repz
daa
mov
repnz
jbe
jb
mov
test
hlt
and
mov
fbld
push
inc
daa
cmpsb
leave
stos
imul
and
or
xchg
ret
sbb
fcompl
and
mov
adc
push
insb
adc
mov
insl
xchg
aas
inc
loope
aad
fdivl
mov
stos
fwait
out
fwait
mov
or
outsl
rorl
cmp
push
push
mov
pop
jnp
or
xchg
cmpsl
adc
movl
xchg
xor
xchg
cmc
movsb
cmp
fcom
sub
fwait
mov
sbb
push
rorl
mov
iret
outsb
sbb
idivl
adc
pop
mov
bt
sahf
bnd
mov
test
stos
push
mov
xchg
jno
jns
test
pop
lods
mov
mov
sbb
push
xor
sahf
sub
out
pusha
xor
adc
adc
xchg
test
insb
pop
sub
push
adcl
pushw
pop
xchg
cwtl
mov
lret
push
push
jge
outsb
pushf
cmpxchg
push
xlat
sbb
inc
popa
cmp
test
fistpl
enter
mov
std
ljmp
je
popa
dec
sub
ss
lcall
mov
dec
or
mov
and
sbb
mov
cmp
leave
cmp
mov
idivl
jl
jecxz
mov
test
sbb
mov
sub
cmp
xchg
sbb
test
nop
adc
push
ret
insl
sub
pop
xlat
push
cwtl
sub
out
jb
cmpsl
xchg
shr
imul
les
test
mov
sar
inc
mov
scas
sti
aas
ret
enter
xor
pop
enter
cmp
inc
mov
movsb
adc
and
inc
sub
jmp
cmc
shlb
or
pop
mov
mov
pop
popf
in
xchg
cs
xchg
mov
push
add
nop
jbe
popf
push
pop
int
int
in
push
jnp
cmc
adc
cmp
cmc
outsb
sub
sbbl
pop
inc
lret
pop
les
in
cmpsl
mov
and
push
pusha
fucomp
mov
pop
xchg
ffreep
fdivrs
test
mov
data16
push
dec
push
fdivl
outsb
or
into
repz
xor
push
je
add
in
shl
popa
pop
sti
fadds
pop
xlat
lock
add
sbbb
lret
pop
xchg
jmp
sub
out
pop
add
mov
sbb
push
jb
xor
loope
imul
hlt
jo
mov
shlb
sti
mov
pop
movsl
loope
dec
lcall
and
std
imul
lock
sbb
sarb
lret
adc
xor
mov
push
sarb
push
mov
iret
cwtl
mov
sbbl
sbb
xor
cli
incl
dec
xchg
es
mov
inc
jle
dec
dec
add
xlat
cmpsb
cld
jmp
movsl
add
inc
sahf
scas
xlat
mov
test
scas
lods
add
and
ffree
pushf
filds
cli
cmc
int3
lods
sar
popf
and
push
jb
jns
adcb
mov
inc
pop
xchg
mov
cs
add
ret
int
jo
inc
mov
insb
gs
add
push
fistpll
and
out
lock
idiv
test
sub
add
xor
xchg
mulb
ja
rcrb
movsb
push
inc
and
jmp
out
jl
iret
dec
cmp
ret
push
lret
lret
lds
sub
pop
aad
and
xchg
jno
les
or
sbb
scas
ret
pusha
xlat
ss
lret
leave
call
andb
pop
test
xchg
call
cwtl
js
rcll
xor
jns
mov
push
push
sbb
sbb
popa
jmp
fs
stc
fldenv
in
jge
popa
pop
inc
sti
popf
or
add
repz
outsb
push
adc
adc
dec
pop
jae
jne
xchg
rol
shlb
rolb
mov
mov
leave
jns
mov
fldcw
mov
jge
and
jne
movsb
mov
and
xchg
jae
xlat
andb
outsl
mov
cwtl
dec
test
add
mov
cmp
pop
fdivrs
mov
nop
out
repz
cmp
xchg
gs
xchg
pop
pop
fwait
add
pushf
cmp
int
xchg
in
xchg
and
stos
mov
mov
adc
loopne
mov
ficompl
scas
repnz
bound
popf
insl
adc
daa
xor
jle
sbb
mov
fistl
in
mov
add
dec
sahf
adc
mov
sbb
add
add
ljmp
adc
pop
pop
sub
mov
stos
aaa
cmp
fnstsw
mov
pop
mov
jb
es
cmp
cs
jl
popf
mov
sbb
jle
cmp
aad
into
lea
mov
aad
std
xchg
or
mov
hlt
add
pop
lock
test
fmull
push
mov
jecxz
sbb
xchg
jbe
push
pop
dec
or
repnz
sbb
cmp
fisubrs
inc
sub
pop
sahf
cmpsb
aas
lock
sti
mov
outsl
push
out
mov
mov
mov
jmp
std
mov
jnp
roll
push
mov
or
sub
ja
push
jbe
or
bnd
fld
mov
clc
xchg
and
in
fwait
and
loop
xchg
inc
xlat
cmpsl
es
fnsave
cmp
mov
out
sbb
repnz
leave
repz
jnp
iret
pop
cmpsb
test
mov
mov
movsb
push
outsl
scas
outsb
jg
mov
mov
js
cmp
push
xchg
or
out
pop
loopne
add
push
or
pushf
add
xor
dec
jo
call
imul
mov
test
inc
pop
imul
movsl
mov
mov
and
push
lret
scas
xchg
rorb
xchg
xlat
cmp
rol
jns
inc
xor
push
cmc
jmp
and
xor
and
movsl
jo
popl
outsl
jbe
and
push
int
or
and
dec
adc
arpl
dec
in
movsl
cli
jnp
jle
adc
mov
pop
or
arpl
mov
jnp
pop
add
shr
and
mov
pop
xor
cmp
xor
orl
and
and
shrb
mov
and
xor
xor
cld
xchg
rorl
push
jge
jmp
fidivl
fsubr
pop
sub
adc
std
mov
or
lock
sarl
inc
xchg
adc
in
or
push
sbb
es
xchg
push
jo
lret
pop
add
cs
mov
popf
mov
mov
inc
sbb
daa
sub
add
nop
mov
xchg
outsb
jecxz
pop
mov
dec
and
and
fwait
sarb
pop
sbb
adc
or
mov
push
pop
dec
mov
movsb
js
test
sub
jb
dec
pop
mov
fxch
or
je
sbb
arpl
call
mov
inc
gs
jecxz,pn
inc
lcall
push
scas
pop
push
cmp
add
sbb
fwait
cwtl
pushf
pop
insb
js
push
je
mov
mov
imul
push
rolb
sub
xor
icebp
and
cltd
xlat
dec
hlt
fstpt
mov
mov
out
fisttpll
mov
adc
mov
add
inc
frstor
mov
xchg
mov
movsb
sub
popl
sahf
push
aaa
sub
xorl
sahf
jo
mov
sub
xchg
inc
cld
in
jg
mov
lcall
pop
sub
shll
stos
add
daa
mov
test
xchg
add
ss
sbb
insb
test
mov
fistl
shrl
mov
sbbb
xchg
inc
outsl
pop
in
outsb
inc
dec
jl
scas
fsubrs
test
sbb
incb
outsb
lahf
rolb
mov
cltd
sbb
lret
cltd
pop
push
cmp
push
cmp
repz
jmp
and
ljmp
hlt
lea
adc
cmp
jecxz
outsb
lock
mov
arpl
jnp
fidivrs
push
pushf
out
mov
adc
pop
adc
xchg
in
sub
cmpsb
or
inc
or
gs
fcmovnbe
cmp
cmpsb
mov
incb
pop
sub
push
dec
cmpsb
and
and
flds
xchg
or
or
mov
pop
lret
and
xchg
jns
inc
mov
aas
push
leave
xchg
mov
adc
jno
repz
call
test
dec
in
cmp
sbb
pop
aaa
pop
cmp
inc
jge
mov
jns
pop
fwait
xlat
or
pop
scas
sbb
leave
add
inc
and
xchg
inc
xchg
out
int3
push
xchg
add
sbb
or
ffree
jge
repz
mul
mov
push
xor
xchg
xchg
shrl
fldcw
gs
sbb
sbb
aad
cs
mov
sbb
adc
fidivrs
in
and
xchg
inc
jmp
jg
inc
cmp
or
rclb
call
lahf
fldcw
jmp
or
cs
ror
mov
movsb
movsb
push
mov
pop
pop
jne
adc
ljmp
arpl
cwtl
loope
icebp
insl
mov
dec
push
std
adc
and
xchg
bound
jp
test
mov
aas
and
adc
adc
fidivrs
pop
mov
ret
mov
xor
lea
xor
xchg
test
movsb
dec
cmp
sti
sub
inc
sub
mov
jmp
sbb
or
lcall
dec
lret
les
or
mov
cli
bound
xchg
add
xchg
lods
test
mov
dec
cmpsb
add
cmp
ret
dec
pop
in
and
sbb
pop
and
or
xor
inc
test
cmpsl
ret
mov
in
inc
nop
vmovsd
cmpsl
jge
mov
mov
push
adc
jle
pop
test
inc
dec
pushf
xor
inc
clc
outsb
inc
cwtl
daa
xchg
xchg
rep
testl
adc
push
mov
ss
js
jno
jo
arpl
gs
mov
lea
pop
lahf
sbb
sub
outsb
in
inc
out
cmpsb
jne
or
je
dec
sbb
shrb
adc
shl
or
and
jo
pop
xchg
push
xor
mov
mov
rcll
push
test
lock
icebp
mov
xor
sub
stc
test
dec
lods
dec
imull
or
xchg
repz
ss
and
cmp
jnp
mov
pop
cltd
ja
sbb
or
adc
inc
loope
push
je
jne
cmp
jae
inc
pop
out
or
leave
test
jle
arpl
and
lar
cmc
adc
loope
jbe
movsl
mov
dec
or
push
jge
imul
mov
lods
xchg
sbb
xchg
loopne
mov
pop
push
xor
fwait
shrb
addl
mov
cwtl
ds
dec
stos
insb
fidivl
call
out
lahf
jmp
daa
jl
jmp
scas
sti
in
xor
or
push
dec
fiaddl
mov
outsb
push
xchg
dec
xchg
subl
sub
dec
das
push
stos
sub
adc
dec
add
je
push
mov
add
mov
mov
sub
cmc
sub
cwtl
inc
mov
jl
cwtl
adc
leave
pop
loopne
dec
lcall
adc
fwait
pop
jnp
insl
xchg
mov
pop
push
inc
pop
push
mov
push
push
mov
sub
mov
loopne
leave
jmp
sahf
nop
sbb
or
decb
sbbl
push
cmp
sub
jo
push
push
in
lds
orl
outsl
stc
mov
or
icebp
out
xchg
insl
jecxz
mov
mov
aaa
jbe
int3
sbb
jnp
cmp
inc
add
stc
repz
and
inc
icebp
leave
adc
lods
mov
lret
movsl
aaa
icebp
mov
fs
or
idiv
enter
test
into
mov
ss
insb
inc
es
jg
subb
dec
scas
sub
push
aad
outsb
into
es
pop
push
cmp
pop
push
lock
lcall
movsb
shll
xchg
push
and
pop
mov
ret
les
fwait
lret
imul
push
add
push
outsb
cli
push
lret
mov
xchg
cmp
cmp
jns
sbb
mov
pop
pop
rcr
fcmovb
insl
je
test
ja
movsb
jb
das
out
lods
jo
test
adc
cmc
pop
test
push
add
movsl
gs
std
adc
pop
sti
sahf
negb
loop
dec
and
addl
mov
xorb
cld
and
cmpb
xor
sub
dec
wbinvd
and
mov
inc
or
mov
dec
nop
popa
scas
stc
cld
adc
aaa
pop
lods
aaa
repnz
sbb
pusha
aas
dec
shlb
pop
scas
adc
pop
cmp
into
dec
or
ljmp
dec
jl
mov
adc
inc
iret
lock
rolb
sbb
pop
fsubrl
hlt
ljmp
lods
xchg
xchg
mov
adc
sub
xchg
adc
in
mov
aam
lahf
mov
inc
nop
mov
sbb
push
push
cmc
mov
mov
add
les
jp
mov
popf
push
xchg
push
push
sbbl
out
push
pushf
sbb
into
push
xchg
sbb
clc
loop
xchg
or
rcrl
mov
cmc
cmp
adc
add
inc
xor
and
and
lcall
imul
sub
push
cmpsl
out
incl
jno
sbb
ret
aam
xor
loope
push
int
add
jb
or
lret
sub
xchg
addl
adc
adc
jbe
fbld
add
push
adc
xchg
push
sbb
sub
call
sarb
in
xchg
sahf
in
lret
adc
stos
xlat
sub
xor
adc
test
cld
xchg
cld
test
push
jp
mov
cld
adc
adc
jecxz
es
push
dec
pop
fnstenv
scas
cltd
push
push
cmpsb
in
cli
xchg
cmc
loope
adc
mov
mov
and
mov
xchg
aam
aad
adc
out
push
jp
ds
xchg
icebp
add
jbe
arpl
aaa
fimull
cmc
pop
pop
xlat
sti
or
rorb
js
insb
sub
adc
call
xchg
js
pushf
xchg
xchg
inc
push
lret
sbb
sbb
test
repnz
stc
mov
popf
jb
jbe
and
lahf
dec
inc
mov
loopne
adc
stc
xor
lahf
rorb
mov
lock
scas
ljmp
dec
jnp
mov
cmp
dec
data16
loope
loope
fcompl
pandn
pop
int3
call
mov
in
shl
in
jno
mov
and
aam
lret
fildll
cmp
jb
rorl
jae
add
ss
mov
gs
outsl
out
or
fnstenv
pop
sub
pop
lahf
or
es
jb
or
out
mulb
push
sbb
inc
sub
cmp
xor
inc
out
mov
into
inc
lds
jns
sti
adc
out
jge
mov
es
push
fsts
xchg
inc
inc
sbb
int
jne
je
fucomp
ret
notl
or
dec
aam
pop
add
jb
dec
movb
jnp
mov
sub
dec
les
cmp
popa
shlb
push
shl
cs
icebp
cmp
mov
jmp
jle
mov
xchg
add
int3
iret
xchg
addr16
stc
add
dec
jb
js
fdivrl
add
pop
push
mov
fstpl
imul
in
faddp
pusha
js
push
lcall
push
dec
sub
xor
xchg
into
pop
jnp
es
jle
jae
sub
adc
jp
mov
test
loop
decb
aam
rolb
mov
cmc
jo
mov
pop
add
insb
inc
aam
cmp
int3
loop
loop
cltd
mov
inc
mov
aad
xchg
mov
mov
push
stos
adc
adcl
sti
dec
xchg
push
sarl
and
movsb
out
push
popf
sub
ret
jnp
cmp
or
mov
fmuls
mov
xchg
jp
aad
test
orb
mov
test
data16
scas
xchg
divl
jmp
push
shrl
mov
and
xchg
out
mov
je
mov
xlat
jae
add
loopne
sbb
mov
cwtl
dec
add
cld
xchg
adc
dec
loope,pn
sbb
jmp
orl
test
mov
adc
mov
and
repz
movsl
aas
aam
fadd
mov
mov
insl
pop
push
push
lcall
and
mov
movsb
xor
pop
sbb
sub
dec
popa
enter
addr16
addr16
cmp
cmc
xchg
insb
dec
xchg
push
les
sub
push
repz
inc
mov
aaa
xchg
dec
mov
arpl
cmpsb
scas
shll
cmc
daa
arpl
xlat
mov
popf
cmp
sbb
cmp
or
xchg
jle
sbb
movsb
loope
inc
rorb
out
jmp
mov
cmp
pop
es
addl
fcoms
jns
jmp
pop
shlb
inc
cltd
pop
sbb
push
jl
js
lods
xlat
bound
outsb
or
push
or
sub
ror
xlat
push
pop
insl
cmp
mov
pop
pop
lcall
sahf
idiv
push
sub
into
mov
mov
add
imul
xchg
stos
cs
or
ret
int
insb
jp
mov
inc
xchg
xchg
imul
fwait
pushf
stos
cmp
in
fucom
sub
mov
and
xor
mov
nop
aam
scas
stos
xor
push
sub
push
mov
xor
sbb
jns
xchg
mov
stos
loope
ss
mov
outsl
dec
push
xchg
push
lods
dec
sbb
adc
or
add
cs
push
jb
rol
mov
les
ss
cmp
insl
sub
mov
movsl
daa
int3
push
loop
xor
lret
incl
hlt
mov
cld
inc
outsb
in
aad
aad
int3
dec
sub
dec
jmp
jmp
jmp
sbb
push
xlat
aam
cli
aad
mov
inc
or
push
cltd
push
add
pop
rclb
aam
fucomp
or
xchg
pop
lds
mov
adc
shufps
pop
into
lcall
xchg
test
or
dec
int
xor
sbb
popa
decb
outsl
pop
inc
pop
lss
mov
push
inc
mov
fbstp
sahf
icebp
bswap
mov
addb
rcr
and
sbb
gs
dec
lret
int
push
jmp
add
and
outsl
insb
js
movsl
jmp
lods
inc
push
dec
les
shll
in
mov
mov
shlb
jae
cmp
mov
iret
mov
movsl
push
cmc
push
loope
or
dec
jno
outsl
pop
les
fcoml
mov
dec
pop
xlat
xchg
js
xchg
xchg
inc
rcrl
stos
ret
movsb
out
push
pop
out
repnz
push
sub
inc
xor
jno
xlat
lods
sub
je
aam
cld
cmp
mov
xor
ljmp
aaa
repz
lds
sahf
jno
lds
jbe
sar
outsb
add
leave
xchg
add
sbb
ret
add
int3
mov
es
sbb
insb
icebp
adc
stc
mov
xor
jne
jp
fistpl
and
jle
cltd
ficompl
sbb
nop
add
inc
fiaddl
pop
jo
sbb
nop
lret
dec
dec
or
lret
bound
or
adcl
xchg
outsb
int3
mov
icebp
pop
insl
push
mov
push
lahf
or
das
dec
xchg
jecxz
stos
jb
aam
push
dec
loopne
mov
loop
mov
jnp
push
adc
mov
enter
pop
or
adc
add
inc
dec
into
popf
pop
popf
movsb
outsl
dec
sub
xchg
dec
das
cmpsl
sbb
sarb
sub
pop
pop
sbb
pop
inc
pushf
cld
ds
lods
fdivl
insl
mov
adc
dec
jb
lret
mov
mov
lret
lock
or
add
jg
mov
xor
xor
arpl
mov
gs
adc
jge
out
fisubrl
ret
mov
dec
sti
dec
mov
mov
ja
outsl
xor
add
push
aaa
or
cli
fdivl
jne
mov
sub
and
adc
inc
pusha
dec
insl
ljmp
ficoml
dec
out
cli
add
in
and
aaa
lods
jg
jnp
cltd
dec
or
xchg
stc
into
pop
cld
stos
or
push
sub
xchg
sub
and
cmpsb
out
lret
icebp
pusha
fwait
jns
push
jecxz
stos
push
add
inc
or
aad
pop
push
mov
sub
and
fldenv
pop
push
lds
jnp
mov
pop
inc
fisubrl
lock
imul
push
mov
scas
or
mov
sub
xchg
das
mov
sbb
loop
mov
cmp
lret
dec
hlt
lcall
cmpsl
dec
push
data16
pusha
inc
in
push
idivl
push
addr16
fists
push
mov
mov
xlat
addr16
movzbl
xor
pop
out
jp
fld
adcb
aas
sub
lcall
sub
inc
in
mov
mov
leave
xlat
and
sbb
lods
dec
mov
cmp
or
xor
pop
inc
popa
addr16
ljmp
scas
lods
jge
lcall
jp
push
push
xchg
lret
sar
cmpsl
and
int3
fdivl
lret
sbb
mov
das
lea
and
cltd
xchg
adcl
mov
inc
pop
aas
cmpsb
aaa
scas
dec
lcall
pusha
cmp
or
jae
lahf
xchg
popa
lods
mov
stos
jmp
jbe
stos
rol
and
mov
xchg
movb
popf
fnstcw
push
and
inc
push
call
cmc
popf
or
xchg
inc
pop
mov
into
jp
mov
mov
stos
fwait
test
sbb
pusha
pop
pop
inc
sub
loop
cmp
pushw
int3
jp
mov
fcompl
stc
aam
pop
ljmp
in
adc
push
ljmp
pushaw
dec
xor
lock
hlt
mov
cli
iret
pop
mov
mov
test
cltd
push
lahf
and
xor
sbb
sbbb
out
inc
sahf
cmp
loop
push
lret
fucomp
mov
imul
iret
dec
mov
mov
pop
push
out
popa
push
mov
test
mov
jge
aam
testl
adc
mov
cltd
loope
mov
enter
movsl
xor
mov
mov
lret
inc
dec
shlb
ficoms
test
insb
or
fbstp
outsl
adc
push
roll
mov
test
das
push
decb
push
adc
cmp
sub
pusha
enter
in
mov
inc
test
dec
xor
jo
insl
add
stc
add
jb
xchg
and
add
lahf
mov
fcoml
sub
and
xchg
cmp
and
inc
movl
or
jo
jp
mov
insb
jle
out
stc
jne
das
data16
sub
pop
std
ss
xchg
nop
ljmp
clc
mov
mov
arpl
loope
cmp
shl
add
popa
or
pop
push
aam
xchg
push
adc
xchg
jno
push
lret
stos
and
je
cwtl
in
movsl
lcall
fwait
loopne
xlat
mov
sbb
inc
test
pop
jnp
or
push
sahf
and
xchg
mov
testb
mov
sbb
xchg
sahf
inc
shll
xchg
clc
aad
xor
pop
xchg
push
mov
sahf
iret
adc
dec
loopne
jmp
pop
pop
insb
push
in
shlb
aad
js
fdivs
scas
shr
movsl
ja
int3
js
in
pop
sub
xchg
xor
into
inc
cmp
fildll
add
push
push
popf
loopne
lcall
test
add
jae
test
jbe
cmp
loop
mov
inc
jmp
ret
adc
fs
dec
dec
movsl
into
lods
mov
inc
fadds
dec
mov
fmul
and
bound
pop
or
sarl
rorl
shrl
popa
fistpl
shlb
adcb
mov
mov
dec
xor
test
icebp
sarb
scas
xchg
lods
dec
ss
jecxz
loope
dec
sub
clc
mov
ret
jo
mov
les
pop
mov
rorl
mov
aam
jp
add
jge
inc
test
mov
ret
jns
lret
imul
dec
adc
pop
jmp
mov
mov
xchg
and
in
mov
lock
scas
mov
sti
ss
clc
pop
cmp
iret
repnz
cmp
sub
cmp
repz
push
aaa
out
popf
stos
or
mov
sbb
jnp
lcall
inc
pop
cli
sbb
dec
fldt
loop
loop
jp
and
sahf
mov
pop
mov
push
mov
push
sbb
push
mov
out
sbb
dec
aas
mov
lcall
lcall
adc
adc
add
jb
cmp
push
cmp
ljmp
leave
nop
or
or
or
xchg
lods
repz
call
push
cmpsb
into
call
rclb
das
movsb
lods
ret
imul
xor
in
cmp
lea
cmpsl
test
mov
fimuls
pop
sti
jnp
push
stc
ss
andl
mov
insl
addr16
or
mov
nop
mov
push
bound
outsl
aas
mov
das
xchg
mov
or
outsb
jmp
jnp
mov
ds
push
sub
into
shrl
dec
pop
add
mov
dec
pop
mov
pop
pop
or
stc
pop
lret
xchg
mov
xchg
clc
jmp
ds
loop
out
jl
aam
iret
or
xlat
ss
cmpsb
gs
lret
cmpsb
js
cld
daa
and
mov
mov
popa
adc
fwait
mov
scas
push
scas
push
out
xor
jmp
sbb
rolb
mov
add
pop
inc
dec
dec
cmpsb
jo
popf
inc
jecxz
dec
sbb
xor
outsb
in
push
test
and
insb
not
ret
mov
pop
sbb
cmpl
push
xorb
mov
imul
std
mov
push
js
sub
bound
pop
jns
aad
pop
ljmp
or
xor
push
add
aam
adc
push
daa
frstor
xchg
sub
ror
mov
cmp
aas
jmp
add
mov
mov
shll
ljmp
outsl
push
pop
lods
lds
cmp
xor
imul
rcrl
hlt
or
add
shlb
cmp
pop
xchg
sbb
jnp
mov
cmc
cmp
addb
lea
sbbb
cvtpi2ps
aas
popa
push
maxps
adc
int
dec
ret
xchg
mov
dec
jbe
popa
fsubp
fs
fimuls
push
adc
xchg
and
push
and
imul
sarb
cwtl
push
push
pushf
mov
push
sbb
xlat
test
jo
xchg
mov
mov
jae
cmc
lock
ljmp
aaa
dec
bnd
cmp
mov
lret
in
dec
cmp
fisttpll
popa
mov
cwtl
and
out
add
dec
movsb
lods
jb
sbb
jg
sub
xlat
les
pop
lcall
sub
stos
divl
fildll
mov
inc
inc
and
mov
xchg
sbb
lds
das
jnp
push
into
push
add
shlb
pushf
jecxz
outsb
test
arpl
inc
cmpsb
add
xor
jmp
pop
fidivrs
popf
adc
inc
fs
mov
js
rol
sbb
sub
jl
cs
fisttpl
xor
gs
faddp
es
cmp
lret
cmc
add
or
call
cmp
push
stc
xor
ljmp
cli
xlat
ljmp
cmp
adc
mov
popf
hlt
inc
ss
push
in
adc
mov
push
lock
lods
mov
clc
cmp
clc
ljmp
cs
adc
pop
jae
dec
sub
sbb
pop
cmp
fbstp
push
sub
movsb
dec
mov
mov
movsl
jne
data16
shll
sbbl
push
and
lea
nop
jmp
fnstsw
adc
rcrb
cmp
mov
ds
mov
jnp
cmp
test
xchg
jne
or
insb
mov
stos
popf
dec
loopne
cld
inc
and
mov
cmp
push
aad
inc
loopne
xor
pop
dec
adc
push
fsts
test
adc
cmp
pop
addl
adc
xchg
dec
out
dec
std
and
mov
popa
push
push
adc
and
mov
dec
jns
and
or
shr
adc
inc
inc
xor
test
and
aas
push
adcb
movsl
or
gs
mov
adc
add
fstl
add
stc
inc
fldcw
packsswb
scas
addr16
pop
lret
jne
ja
ljmp
fsubrl
mov
fidivs
mov
rclb
xchg
cmp
xchg
jb
and
test
pop
mull
xor
rorb
addr16
idivl
pop
ja
mov
cld
shll
loopne
cmp
jmp
popa
sub
cmp
in
or
push
pop
js
xchg
roll
add
push
int3
cwtl
dec
out
adcb
dec
push
fcomip
xchg
mov
and
inc
cmp
arpl
jnp
xchg
adc
and
in
inc
sti
xchg
cmpsb
sbb
repz
xchg
lahf
dec
jns
lea
test
pushw
mov
jg
sbbl
push
std
mov
dec
and
js
pop
mov
sahf
ds
hlt
add
mov
out
icebp
sbb
je
xlat
adc
adc
and
mov
add
sbb
xchg
sbb
mov
lret
repz
and
pop
inc
sarl
inc
adc
mov
aas
jg
decb
or
pop
inc
shrl
sub
mov
lds
stc
adc
lret
push
fiaddl
or
mov
mov
incl
push
fsubl
loop
mov
pusha
pop
pop
lret
jg
in
mov
loop
notb
fdivrl
pop
sahf
sub
xor
mov
pusha
cwtl
hlt
push
mov
sub
aad
cmp
mov
imul
push
jp
adc
add
ss
das
cmpsb
mov
cwtl
cld
add
or
insl
rclb
cmp
les
lret
mov
sbb
mov
or
dec
xchg
je
daa
lods
leave
push
pop
xchg
sub
push
leave
cmp
insl
sbb
data16
hlt
push
or
roll
lcall
push
scas
pop
sbb
inc
jno
pusha
pop
xor
out
test
fmul
dec
punpckhwd
fidivrs
loope
cs
or
stc
out
fimuls
test
jno
mov
loop
adc
or
arpl
push
add
popa
fiadds
add
mov
subps
add
stos
inc
test
out
repz
jp
sti
sarl
stos
pop
lds
cmp
jbe
push
test
lock
mov
lahf
orl
lea
sbb
sbbl
lds
ficomps
scas
pop
sbb
pop
notb
add
xchg
cmp
or
into
inc
mov
cld
cltd
jp
sub
lds
xor
data16
adc
or
or
repz
cmpsl
fwait
mov
sub
arpl
fs
mov
je
cmp
test
out
and
and
or
pop
sti
xchg
loope,pt
pop
int3
daa
push
mov
ljmp
icebp
lret
cwtl
fwait
movsl
add
insl
cmpsb
sbb
je
sbb
sbb
in
repz
outsb
into
xchg
xchg
xor
sbb
push
fmuls
mov
xchg
push
and
cmp
inc
jns
scas
mov
pusha
mov
mov
jns
gs
xchg
into
ret
push
sbb
int3
call
xchg
test
xlat
lds
jnp
mov
mov
inc
incb
cmp
xchg
push
jl
jge
jns
adc
jns
hlt
or
test
cmp
and
sbb
aas
pop
jbe
sarb
cmc
sub
mov
cmp
jbe
in
add
cld
xor
sbb
jmp
stos
fldcw
cmp
pop
in
inc
sbb
fdiv
dec
scas
iret
dec
fninit
repnz
cld
mov
movsw
jnp
dec
insl
aaa
inc
push
cmp
dec
xchg
xor
xchg
adc
lret
cmp
mov
inc
aas
push
mov
inc
xlat
cs
shr
mov
aaa
xchg
push
xchg
inc
pop
push
aad
shrb
in
stc
lock
int3
xchg
mov
cld
int3
out
unpckhps
fsubrl
stos
mov
mov
enter
fldt
sbb
jno
inc
scas
dec
mov
and
push
cs
xchg
push
bound
and
icebp
sbb
rep
rol
push
mov
jb
cmpsb
cs
xor
pushf
hlt
pop
jnp
inc
stos
and
adc
add
mulb
sarl
pop
dec
scas
xor
jb
sbb
adc
hlt
loop
and
xor
dec
lods
push
cmp
mov
pop
dec
mov
push
and
sarb
or
shlb
xor
and
mov
cmp
xchg
mov
mov
xchg
subb
sarb
inc
push
call
test
push
mov
fsubrs
jg
movsb
dec
xchg
xchg
outsb
insl
mov
mov
pop
dec
in
and
in
in
push
int3
or
xchg
jmp
xchg
cmp
or
in
mov
mov
push
lods
inc
xchg
push
cltd
ds
test
cmpsb
sti
out
scas
inc
mov
adc
aam
push
dec
adc
xchg
xchg
ljmp
inc
mov
or
mov
cmpsl
adc
std
ljmp
xchg
mov
jnp
repz
xchg
add
into
test
cmpsl
lret
fnstsw
add
pusha
xchg
ds
arpl
sbb
or
pop
mov
pusha
jo
xor
shl
addl
xor
pop
mov
sub
loopne
mov
inc
lods
xchg
jmp
sti
pushf
push
cmp
mov
fs
int
jnp
lods
loope
jbe
pop
add
adc
aas
pop
xchg
pop
aad
aaa
cmpsb
daa
es
push
adc
add
xor
call
repnz
cmp
leave
divb
loope
cwtl
xchg
jnp
sarb
lcall
mov
xchg
mov
mov
int3
pop
adc
inc
les
repz
push
add
push
hlt
fisubrl
shll
cmp
testl
sysenter
shrb
pop
sub
outsb
shll
insb
subb
mov
mov
xor
xor
mov
dec
ljmp
inc
ja
mov
cltd
or
test
jge
mov
jbe
push
jp
mov
mov
pop
shll
ret
test
mov
add
lock
andl
scas
inc
mov
scas
fwait
jbe
popa
jb
pop
mov
dec
mov
push
ljmp
inc
sahf
or
std
lods
mull
inc
adc
cmp
and
adc
repnz
aas
js
insb
jg
push
daa
add
or
jge
stc
insl
pop
sarb
xchg
push
cmp
stos
xor
or
mov
adc
mov
fisttpll
push
lds
jne
and
or
sbb
sub
mov
or
call
pusha
int3
mov
sub
leave
sub
and
rcll
mov
cld
addb
sbb
mov
enter
loop
inc
cld
into
or
push
adc
sub
push
ret
hlt
inc
std
mov
stos
pop
imul
cmp
psllq
jb
xchg
xor
fmuls
pop
mov
sub
mov
enter
inc
adc
ficoml
cld
push
xchg
push
xchg
jmp
fstps
sbb
or
enter
pushf
inc
pop
ret
inc
push
inc
dec
cmpsb
fwait
xchg
sarl
outsl
push
testb
ljmp
dec
pop
imul
cmp
into
jbe
push
popf
add
jbe
les
insl
pop
cltd
xchg
dec
add
inc
cmp
xor
test
push
add
imul
push
ljmp
xchg
stc
mov
dec
inc
xor
sub
or
icebp
fisubrs
adc
push
mov
dec
mov
add
push
pop
sbb
pushf
sbb
clc
pushf
je
loopne
fadds
xor
cld
fisttps
cmp
mov
sbb
ret
test
jo
test
repnz
xor
movsb
insl
out
or
fstl
jnp
ret
push
fldl
mov
mov
into
cmp
sti
sti
cli
rcr
stos
cmp
in
mov
leave
jno
aas
sub
lods
lcall
or
pop
inc
sahf
insb
inc
stos
jmp
jnp
ret
arpl
pop
testl
jl
mov
fucom
or
scas
int3
push
xor
subb
rcrl
stos
and
es
mov
imul
sbb
mov
mov
subl
lret
cli
push
push
mov
out
xor
mov
gs
out
mov
and
aas
in
ljmp
stc
std
mov
lds
and
imul
loopne
or
mov
fsubr
mov
std
or
push
mov
mov
or
jle
xchg
sarl
ret
bnd
xchg
push
sbb
dec
fsubs
cld
movsl
inc
xchg
jl
jp
sub
call
mov
je
xchg
arpl
xchg
adc
sub
outsl
cli
out
dec
push
out
fwait
mov
inc
cmp
add
cmpsb
xor
jne
add
call
pop
shl
lret
jl
push
out
daa
fisubrl
dec
scas
mov
decb
jg
mov
or
in
cmp
mov
ja
pop
mov
xchg
hlt
bound
cmpsl
mov
inc
ss
mov
repnz
sub
push
jecxz
add
push
xchg
or
loopne
test
jp
movsl
aam
inc
add
in
mov
adc
jp
addb
icebp
cli
sbb
cmp
push
stos
add
stos
ljmp
mov
fstpt
and
out
cwtl
shrl
sbb
and
xchg
adc
mov
cmpsb
test
movsl
mov
dec
mov
mov
nop
or
lret
xchg
dec
and
add
pushf
mov
shll
bound
scas
mov
and
push
aam
popa
outsb
jge
test
jbe
pop
jg
push
sbb
ret
ret
test
fmull
mov
out
mov
lret
mov
inc
adc
xlat
mull
sub
jns
insl
outsl
ret
mov
fidivl
and
je
mov
mov
jecxz
insl
jae
xchg
xchg
lcall
inc
pop
push
fistl
jo
shll
into
jno
stos
dec
pop
adc
xorl
xchg
mov
mov
sbb
sub
or
sti
or
popf
add
sbb
push
jo
xchg
loope
ljmp
test
sahf
mov
lods
cmpsb
in
dec
divb
dec
mov
or
mov
mov
std
mov
sub
in
outsb
cs
dec
test
int
out
sti
outsb
inc
cmp
ja
insb
clc
jb
xor
mov
mov
imul
cmp
loop
sahf
xchg
push
test
jns
outsl
mov
popl
sbb
mov
inc
fsubrp
pop
popf
sub
hlt
data16
mov
dec
ja
or
insl
sub
sbb
adc
sbbb
les
jp
adc
lcall
pop
and
pop
outsl
dec
pop
dec
out
push
js
adc
mov
xchg
mov
js
jle
lret
mov
inc
mov
insb
in
xchg
test
mov
lret
mov
ds
inc
xchg
paddsw
das
movsl
jnp
nop
or
in
cmp
cs
and
mov
mov
fistl
test
mov
rcll
shl
jo
xchg
mov
pop
inc
adc
sub
push
popf
or
pop
scas
lea
mov
dec
or
add
jle
adc
mov
test
data16
imul
imul
push
sub
iret
roll
in
mov
inc
fwait
orb
jle
mov
mov
adc
gs
add
imul
pushf
xchg
push
rorl
dec
mov
mov
push
jecxz,pn
push
mov
cld
cltd
jbe
clc
addr16
add
arpl
cmp
test
popa
insb
movsb
and
xchg
xchg
mov
cli
sbb
add
repz
push
xor
jl
push
inc
jecxz
adc
jl
in
xchg
push
fcoml
cs
aaa
add
adc
push
mov
call
js
lcall
js
jecxz
imul
lcall
sbb
mov
xor
xchg
xor
add
loope
jmp
jbe
sub
mov
push
adc
xchg
stos
adc
loop
xchg
rcll
xchg
out
aaa
bound
jo
jne
or
push
imul
jg
mov
pop
orl
cmp
and
xor
xchg
add
lea
pop
xchg
pop
mov
scas
jb
into
pop
mov
fadds
or
out
lret
lock
bound
out
ds
icebp
fdivrs
sub
push
dec
daa
and
out
push
outsl
fistpll
push
xorl
aad
pop
sbb
fdivl
stos
mov
call
sbb
lcall
xchg
and
rclb
xor
jne
lods
cli
cli
in
xorl
sub
lret
push
je
inc
xchg
mov
adc
jl
repnz
andl
xchg
push
sub
jp
mov
xchg
shl
stc
rclb
adc
test
ja
orb
pop
insl
cmp
fdivs
mov
fdivrs
out
sub
add
cltd
int3
add
sbb
sub
lods
sub
mulb
fstpt
mov
dec
push
push
mov
xchg
mov
scas
scas
push
mov
and
xchg
mov
push
sub
jb
add
ss
jp
fimuls
mov
test
dec
das
cs
mov
jecxz
dec
adc
cwtl
mov
mov
or
cmp
push
cmp
orl
xchg
inc
cmpsb
lods
movsl
aas
cmp
ljmp
outsb
xchg
push
js
sub
into
jae
push
test
aam
es
inc
sbb
jl
dec
notb
std
pop
cld
popl
daa
push
xchg
mov
es
test
les
mov
mov
push
cmp
out
testl
in
sti
sub
int3
jl
ds
imul
pop
sti
mov
jnp
and
jns
stos
xor
popa
loope
sub
adc
repz
push
push
jns
dec
test
push
and
scas
mov
or
nop
cmp
rcll
add
js
arpl
pushf
daa
cmp
push
arpl
cmc
push
jno
cs
adc
dec
cli
pushf
mov
fbld
mov
or
push
mov
je
adc
arpl
dec
cmovbe
mov
jne
sbb
xor
and
sub
fadds
jge
xchg
mov
ret
je
add
cmp
nop
xor
iret
sub
call
xchg
rolb
in
lods
ja
xchg
vpmulhuw
jnp
mov
cmp
in
pop
in
test
iret
divl
cwtl
test
int3
lods
mov
aaa
jl
icebp
aaa
mov
push
out
push
xchg
insb
fwait
xchg
out
cmp
lret
incb
xchg
mov
push
outsb
adc
lea
scas
stos
out
cmp
rcll
pop
pop
and
and
in
jge
out
xchg
cltd
cmp
out
mov
jg
mov
pop
addb
in
loop
scas
xor
jo
xchg
push
arpl
jmp
ffreep
adc
cmp
iret
cmp
ret
out
push
jns
inc
je
push
pop
fcompl
adc
test
pop
mov
bnd
outsb
test
push
sbb
je
cli
pop
inc
inc
lds
mov
mov
jle
pop
sub
out
fcmovb
and
pop
xor
inc
pop
lock
add
into
daa
pop
mov
out
sahf
push
aad
ja
or
fdivr
lea
outsl
pop
jg
mov
test
jl
lret
push
jmp
jbe
in
mov
fnstsw
sbb
pop
jg
sbb
mov
inc
lock
adc
add
rcrl
das
aas
sahf
or
nop
enter
sub
lahf
daa
iret
cltd
in
jle
mov
in
sub
roll
cmpsb
loopne
mov
imul
les
gs
out
movsb
pop
loope
data16
loope
mov
sub
aad
xchg
push
cmpsb
cmp
int
cmp
bnd
jnp
adc
xor
adcl
mov
push
lcall
call
loope
daa
lods
mov
inc
push
imul
push
shr
push
out
jg
leave
jecxz
loope
sub
inc
xor
clc
xchg
add
inc
mov
pop
in
ret
jle
push
jecxz
and
adc
push
mov
icebp
or
xchg
xchg
or
lds
rcll
adcb
mov
mov
mov
popa
gs
rolb
das
add
idivb
sbb
lea
cmc
pop
xor
mov
enter
cmpsl
test
fs
add
lds
shr
xlat
dec
mov
or
mov
adc
mov
xlat
xor
xchg
lret
push
pop
rcll
sahf
fs
das
inc
add
jno
fucomp
imul
loop
dec
sub
mov
xchg
enter
popa
add
ss
jl
sub
or
jmp
lods
scas
dec
imul
stos
push
pop
in
and
xchg
roll
leave
jge
lock
movb
outsl
ret
xorl
mov
cmp
xchg
inc
xor
or
or
push
and
mov
jo
sbb
mov
jnp
xor
push
jmp
sarb
in
sbb
repz
pop
add
pop
xchg
adc
xor
jbe
pop
gs
mov
in
adc
push
adc
icebp
cmp
stc
xchg
jle
mov
dec
mov
mov
ret
rclb
fs
and
adc
mov
test
xor
test
test
ret
pop
aas
mov
lret
or
pop
popa
in
jmp
cwtl
add
xchg
jns
jns
jmp
add
adc
lea
jg
sti
sbb
push
out
inc
les
shll
rcll
stos
push
sub
mov
xchg
and
je
mov
push
out
mov
lret
and
pop
mov
inc
mov
out
jmp
xor
test
lea
xchg
fld
sti
movsb
xor
or
imul
enter
and
rcll
shrb
push
leave
sbb
andb
out
test
out
push
rcrb
in
jmp
add
inc
mov
sbb
add
sub
jp
pusha
adc
sbb
xchg
in
adc
lret
cmp
or
sbb
aad
das
in
or
sbb
sahf
cmp
xchg
sbb
and
add
mov
pusha
mov
mov
and
cmp
xor
dec
jle
sbb
insl
fists
and
pusha
cld
adc
cmp
add
int3
insl
out
xchg
rolb
push
sub
loope
dec
add
mov
cmp
push
mov
call
clc
bound
enter
mov
add
ret
in
daa
mov
inc
das
data16
cwtl
sti
test
cs
mov
out
fstpt
xorl
jmp
and
ds
sbb
ss
mov
inc
mov
lahf
and
pushf
into
loope
add
xchg
shr
push
outsl
push
cld
mov
add
jnp,pn
test
sti
jo
sub
jns
mov
ret
add
lods
adc
in
or
std
cmp
pop
push
or
or
adc
mov
and
scas
and
add
shlb
movsl
sub
mov
dec
fsubrs
dec
fisubs
fcomip
pushf
sub
cmc
lahf
pusha
mov
add
and
cmp
imul
xchg
dec
or
push
pop
out
adc
cmp
xchg
dec
pop
pop
cltd
test
push
jmp
dec
cmpsb
enter
in
stos
jl
add
mov
xchg
movsl
scas
lods
pop
mov
divb
lcall
jb
divl
cltd
enter
clc
cwtl
pop
push
loopne
andb
mov
mov
add
gs
mov
ja
inc
cmc
mov
mov
mov
jo
out
out
sbb
in
dec
xor
lahf
popf
sub
or
pop
jnp
pop
bound
inc
mov
les
cld
adc
mov
jno
mov
cmp
xchg
mov
ljmp
sbbb
out
or
or
dec
jae
imulb
push
cli
inc
xor
push
cmp
lods
jmp
and
iret
insl
push
cmp
lds
pushf
add
icebp
pop
or
lret
int
jo
pop
out
sbb
mov
xorl
cs
mov
decb
negl
repz
pop
dec
fmuls
decb
push
in
pop
jmp
sti
push
call
mov
sbb
mov
in
jns
add
cld
push
sub
and
popf
mov
add
sbb
lods
sbb
xor
push
push
stos
cltd
sub
popf
test
into
cltd
lcall
jmp
cmp
outsb
in
popa
fadd
mov
rorl
xor
jne
pop
pop
jb
push
jbe
hlt
jge,pt
lock
imull
cmp
fistps
int
pop
repnz
sub
ret
movsb
sub
orb
in
or
cmpsl
stos
mov
pop
push
add
into
clc
imul
sbb
inc
lahf
decb
pop
push
sub
movsb
mov
add
shlb
sbb
test
sub
pushf
add
repz
jb
aam
push
adc
inc
lret
xchg
jecxz
call
test
xor
ret
in
loopne
pusha
loop,pn
rorl
jno
mov
sub
push
xchg
push
aaa
push
mov
push
insb
int3
xchg
cmpsl
out
in
icebp
pop
aaa
xchg
mov
inc
popa
daa
daa
iret
pop
sbb
cmp
in
scas
pop
pop
sbb
xchg
loope
ja
cmp
out
push
push
je
nop
insb
xchg
movb
mov
ds
push
pop
lds
out
mov
and
outsl
js
mov
paddusw
and
ficoms
popa
daa
stc
in
push
movsl
sbb
xchg
and
sbb
outsb
rcll
pusha
mov
or
xchg
imul
std
out
scas
push
sbb
and
pop
fstps
jmp
popa
mov
jmp
xor
and
das
mov
icebp
xor
push
arpl
dec
mov
ror
imul
or
dec
sub
cmp
out
cmc
into
pop
jnp
das
jns
jns
inc
in
cmp
pop
test
fsubs
jbe
inc
imul
mov
xor
fisubs
push
push
cmp
mov
arpl
fstpl
pop
mov
movsb
and
jg
xchg
arpl
scas
mov
sbb
push
out
loope
fsqrt
lcall
in
pop
scas
add
fsts
into
mul
aam
and
ret
lds
and
push
insb
mov
andb
mov
xchg
cltd
add
stc
adc
or
iret
rol
jmp
loopne
push
sbb
cld
jae
xor
shufps
cmp
addl
hlt
fisttpl
xchg
outsl
sti
fdiv
cltd
nop
mov
test
out
mov
xor
push
mov
pop
inc
dec
faddl
sub
xchg
clc
pop
loop
xor
add
nop
hlt
lds
xchg
cltd
nop
and
sub
pop
xor
or
outsb
icebp
ror
adc
imul
push
loop
dec
ljmp
add
jo
pop
aaa
incb
inc
js
lahf
pop
xor
into
inc
xor
mov
push
cmp
jecxz
xor
add
in
ja
dec
das
pop
ret
xor
clc
and
outsl
negl
lahf
adc
cld
mov
jmp
sarb
mov
out
lods
imul
aas
or
hlt
sahf
sbb
cmp
stos
jns
rorb
adcb
and
inc
in
inc
mov
arpl
rcrl
xor
cmp
mov
pop
mov
mov
lret
mov
outsl
add
push
lods
push
xlat
jecxz
jecxz
pop
add
out
or
mov
and
cmpsb
or
jmp
in
or
nop
sbb
dec
lcall
testb
dec
mov
fdivp
stos
and
nop
leave
xchg
movlps
inc
jae
popa
sbb
cmp
cmpsl
jbe
lret
xlat
sub
push
in
or
mov
lret
movsl
and
adc
ret
or
xchg
mov
jmp
mov
mov
push
add
int
pusha
mov
cmp
jge
psraw
and
out
scas
push
in
pop
add
fdivrl
out
stc
xchg
jp
aaa
stos
xlat
inc
cmp
mov
fcoms
dec
adc
jne
mov
out
test
pop
into
or
stos
sub
mov
xchg
inc
fisubl
div
icebp
ret
sbb
sar
ljmp
lods
ds
mov
or
cmp
daa
or
dec
push
mov
xchg
pop
mov
inc
int3
adc
enter
out
addb
xchg
ss
aam
cmp
sbb
sbb
fcomps
es
jmp
dec
sub
sub
jns
mov
mov
js
testb
pop
ret
xor
inc
xchg
add
scas
push
shlb
mov
mov
xor
or
sub
aas
mov
sub
stc
sbb
xchg
in
push
aad
fwait
stc
push
shll
gs
ja
jno
daa
xchg
xchg
aas
test
dec
test
sub
xchg
or
sahf
test
mov
add
mov
and
lret
sub
sub
mov
sbb
aas
test
inc
mov
into
pop
mov
insb
sub
dec
mov
inc
jecxz
sbb
lods
imul
sbb
lret
addr16
test
jle
cmp
or
fists
cmp
pop
cmp
les
jmp
addb
addb
fcom
in
lret
xor
xor
dec
leave
nop
push
test
cmp
xchg
push
adc
enter
cmp
push
aaa
jmp
ss
es
loope
mov
xchg
andl
xchg
daa
mov
add
pushf
js
mov
or
dec
push
out
cld
and
or
mov
loopne
push
inc
sbb
push
xchg
lahf
xchg
es
mov
mov
aaa
das
es
leave
out
push
test
jmp
xchg
mov
sub
xchg
push
inc
cmc
sahf
and
mov
sbb
or
sar
ret
cltd
fs
xchg
cmp
js
repnz
or
paddusw
je
lcall
mov
cld
pop
sub
out
repz
dec
fstp
mov
add
insl
aaa
in
repz
cmpsb
xchg
and
jo
cmpsl
cmpb
loop
sub
inc
cmp
push
sub
pop
jbe
jle
sbb
xchg
pop
wbinvd
dec
pop
dec
push
push
negb
jbe
pop
clc
popa
adc
scas
scas
push
cmc
cmpsl
inc
addb
lahf
inc
cmp
xor
add
mov
fdivrs
mov
jg
lcall
scas
stos
test
fists
pop
mov
or
les
ret
or
jne
push
test
adc
xlat
fcmovb
imul
popa
bound
pop
shrl
dec
lods
mov
gs
addb
movsb
mov
xlat
ret
daa
fdivrp
jnp
xchg
push
iret
pop
lret
test
or
pop
test
je
mov
lret
fs
push
nop
negb
jmp
xor
jge
pop
cmp
pop
xchg
pop
imul
loop
adcl
pop
jne
pop
ret
push
clc
sbb
cmp
or
iret
adc
int
mov
out
je
cs
dec
icebp
mov
jns
rorb
fisttpll
mov
adc
loop
fiaddl
aaa
pop
mov
or
scas
pop
push
adc
mov
into
mov
xor
dec
mov
inc
xchg
sbb
mov
and
movsl
pop
pusha
pop
cmc
les
aaa
or
sahf
pop
push
or
push
push
pop
adc
sub
fstpl
into
mov
add
pop
or
push
sub
lcall
mov
sub
pop
stc
sub
cs
lahf
mov
ljmp
xchg
adc
mov
xchg
decb
jmp
dec
xchg
adc
sbbl
ljmp
adc
add
aas
mov
shll
orl
inc
sahf
xchg
aad
pop
testb
sahf
sub
leave
fistpll
mov
fsts
std
adc
test
ret
cltd
push
aaa
fistps
mov
mov
sbb
add
push
into
loopne
push
shrb
and
and
cltd
xchg
xor
add
jb
cltd
lock
js
rolb
arpl
das
popl
push
ds
mov
sbb
es
popa
adc
adc
xor
mov
aad
leave
add
hlt
scas
sbbl
int
cmc
lock
xor
push
xchg
push
cltd
mov
xchg
jns
popa
scas
inc
jns
mov
sub
sub
cwtl
push
jns
insl
mov
fidivl
push
mov
nop
push
leave
dec
ret
or
fstl
cmpsl
add
movsb
adc
idiv
push
mov
out
xchg
rcll
sbb
or
add
xor
xor
scas
cmp
dec
das
xchg
push
adc
xor
int3
test
outsb
imul
ret
pushf
sub
and
push
mov
andb
clc
xor
xor
int3
jns
gs
mov
lcall
outsb
jge
aas
jmp
sbb
call
xor
cli
cli
cmp
cmpsl
xchg
inc
mov
push
cmp
shll
dec
push
es
push
dec
xchg
ret
arpl
lods
imul
iret
sbb
test
pop
rolb
and
push
mov
push
xor
jp
and
roll
add
divb
fbstp
cmpsl
mov
fwait
inc
push
mov
mov
mov
jp
push
push
out
int
ret
and
aad
lret
pop
sub
jp
mov
pop
mov
ret
ss
addb
xlat
fisubl
xchg
cld
ret
or
and
leave
push
mov
cmpsb
jb
ja
lcall
xor
gs
dec
dec
jno
cmp
adc
push
out
lret
nop
ret
pop
add
sahf
js
mov
mov
rcrl
pop
rolb
mov
pop
mov
or
jne
fcmove
out
gs
nop
andl
pop
mov
mul
push
and
and
sbb
nop
popa
or
shrb
mov
jecxz
cmp
insl
mov
inc
iret
int3
cmpsb
in
sub
or
mov
loope
ficoml
xor
jle
popa
cmp
push
das
mov
xchg
and
call
icebp
mov
stc
mov
mov
mov
jno
mov
out
mov
push
add
shll
clts
ja
inc
or
xor
mulb
js
push
out
sbb
mov
ja
test
xorl
xlat
outsb
mov
cmp
sbb
mov
push
fidivs
insb
dec
mov
notl
lahf
popf
inc
jecxz
push
leave
inc
push
pop
cli
repz
push
std
les
inc
add
sbb
decl
adc
adc
mov
jbe
adc
sbb
sub
mov
aad
sbb
jae
dec
mov
adc
cmp
clc
sarl
jnp
out
loope
ljmp
les
or
fbstp
dec
sub
lcall
sub
inc
jp
xor
pop
mov
sbb
add
mov
and
cmpsl
inc
push
dec
fnstcw
inc
mov
cmp
sti
lods
jnp
or
filds
ss
negl
cmpsb
and
push
xchg
loope
xchg
xchg
inc
mov
adc
xchg
or
push
scas
jmp
jge
dec
inc
xchg
movsb
sub
stc
mov
aam
sub
mov
ficomps
das
or
insl
cltd
ret
icebp
mov
xor
jmp
loope
aaa
pop
cwtl
lea
fs
and
add
lcall
pushf
or
adc
andl
stos
inc
rcrl
dec
mov
sub
dec
push
push
scas
jbe
aam
mov
mov
sti
jnp
and
or
lea
sub
pop
test
enter
insb
pop
xchg
add
out
mov
and
and
jne
lcall
xor
in
add
ja
movsb
mov
or
rcpps
pop
lods
out
rcrl
jns
repnz
mov
jne
enter
insl
aad
arpl
sbb
jae
std
gs
icebp
addr16
fbstp
jo
roll
mov
dec
adc
inc
sbb
sub
mov
jge
fimull
shlb
mov
test
aaa
adc
or
mov
gs
jno
sbb
movsb
cmp
cmpsb
inc
inc
ret
std
cmp
mov
cld
cmpsl
adc
push
cmp
mov
mov
fmull
out
mov
xor
mov
push
sbb
add
ss
das
dec
jb
jo
xchg
push
or
fwait
jle
dec
jp
mov
shll
fcom
call
dec
or
imulb
ljmp
inc
jge
sub
pop
pop
jmp
add
lret
push
insb
push
ds
orb
jl
mov
cwtl
pop
and
rclb
in
inc
inc
push
and
loop
sarb
int3
mov
cmovo
jae
jnp
test
xor
pop
jb
movb
ficomps
xchg
jno
mov
or
cwtl
mov
cmpsb
ficompl
in
enter
mov
cs
xchg
pop
bound
repz
inc
mov
pop
sub
mov
and
aaa
jb
fcompl
fsubs
dec
movsl
cmp
jbe
imul
ficoml
pop
fisubs
add
xchg
mov
int3
xchg
cmp
ret
push
mov
outsb
push
jne
pop
cld
daa
sar
fcomps
pop
gs
in
dec
xor
nop
or
stos
subl
dec
lret
imul
jle
xchg
loope
mov
add
cmpsb
loope
jne
incb
fsubrl
mul
push
jns
dec
into
mov
push
xchg
mov
pop
lock
and
pushf
fldl
in
aas
daa
repnz
dec
mov
idivb
iret
mov
shl
stos
les
movsb
sbbb
in
fcompl
push
or
lods
lret
loopne
and
cmp
or
push
and
cmp
cmp
or
stc
adc
mov
inc
mov
push
sarl
lock
mov
jg
ret
adc
jp
sbb
jmp
ud1
hlt
xor
imul
mov
add
out
push
cli
and
adc
pop
mov
dec
mov
cs
imul
mov
in
pop
push
mov
cmp
in
mov
fstps
pop
rcrl
icebp
jmp
dec
pop
repz
mov
xorl
clc
xchg
add
shll
dec
jle
in
and
push
sbbl
pop
add
ds
sti
out
pop
mov
cld
je
push
mov
test
push
pop
loopne
test
iret
add
mov
sbb
mov
movsb
pop
orl
ja
imul
inc
push
push
ret
push
dec
mov
pop
jbe
mov
loopne
push
fwait
addb
enter
ret
mov
nop
xchg
sbb
pushl
leave
mov
sub
sub
imul
arpl
add
std
jmp
test
xchg
mov
aad
pop
out
in
mov
or
loopne
insl
cwtl
pushf
cmp
mov
push
ja
aaa
mov
test
jns
xlat
test
mov
mov
cmp
shrl
mov
loopne
sbb
aaa
mov
cltd
sub
aad
xchg
mov
daa
jne
mov
divb
cmp
fnstenv
ds
push
mov
mov
lret
test
leave
mov
sub
aad
mov
and
xor
mov
adc
subl
mov
mov
xchg
push
mov
sub
test
movsb
sub
pop
fwait
inc
int
sub
inc
je
pop
push
aas
inc
sbb
and
in
jns
cmpsl
cwtl
subb
loopne
fs
or
jle
aad
shll
les
and
or
in
ret
jo
sub
dec
idivb
push
pop
in
mov
call
mov
pop
dec
and
pop
cmc
fimuls
mov
jae
mov
adc
xor
sub
aad
hlt
aaa
mov
mov
out
mov
cmpsb
mov
sbb
and
xchg
xor
mov
or
hlt
sbb
lret
daa
push
push
cltd
outsb
xchg
and
movsl
pop
pusha
mov
and
dec
push
test
jecxz
pop
fdivp
dec
mov
clc
xchg
outsb
fsub
adc
scas
in
push
bnd
std
inc
xchg
mov
int
ret
add
jo
lcall
mov
fcomi
pop
pop
stc
sti
push
scas
dec
testl
adc
push
fwait
inc
mov
gs
xchg
lret
xchg
stos
pop
jmp
or
fwait
repnz
scas
loop
aad
xchg
popa
testb
lret
add
jbe
sbb
lcall
lea
dec
nop
fildll
inc
test
daa
mov
pop
push
jg
push
fs
pop
inc
shl
inc
xor
jl
test
gs
and
test
int3
js
sbb
adc
dec
repnz
loopne
insb
jae
push
xlat
adc
adc
xor
divb
mov
ret
add
push
repnz
dec
dec
out
add
divl
sbb
inc
jp
cwtl
push
scas
aaa
or
sti
in
xor
xor
dec
insl
push
in
cmpsl
hlt
jnp
arpl
inc
mov
sbbl
popa
cmpsl
decb
dec
inc
mov
xchg
inc
into
lret
hlt
pop
repz
cld
rcrb
add
nop
mov
push
pop
sbb
decl
testl
das
jno
ret
shll
andl
or
std
into
sub
test
push
mov
paddsb
subl
and
adc
lcall
fidivl
mov
add
iret
mov
add
jge
shlb
or
fsts
sub
sub
movsb
and
mov
stos
lret
outsl
fiadds
repnz
imul
imul
daa
xchg
stos
xchg
mov
jae
popf
insb
push
dec
test
xchg
push
pop
in
dec
xchg
add
cmp
hlt
int3
dec
jbe
outsl
adc
js
jle
shr
out
arpl
test
jnp
arpl
arpl
ret
mov
shr
test
sahf
js
rorl
pop
je
sbb
sub
inc
cmp
push
sbb
ret
push
dec
ja
and
ss
add
adc
pusha
loop
and
in
dec
in
insl
pop
lea
lcall
out
daa
lods
shl
hlt
dec
mov
scas
sahf
loop
inc
push
mov
sub
scas
and
pushf
inc
test
jnp
sahf
andl
xorl
inc
divps
mov
das
add
repz
pop
lret
mov
pop
xorb
cmp
push
xchg
cmp
and
mov
in
mov
pop
mov
add
fwait
inc
xor
leave
fsin
push
imul
movsb
sbb
jp
add
flds
cmp
nop
jp
xlat
push
repnz
cwtl
jae
inc
inc
aad
clc
jno
dec
in
stos
out
lea
mov
cmp
pop
les
push
jl
mov
push
ja
mov
push
jb
sub
mov
inc
mov
shl
push
mov
les
dec
sub
fistl
das
xchg
popa
adc
sti
xor
insl
and
es
aam
out
jo
call
sub
mov
xchg
jbe
cmp
cmc
or
xchg
mov
push
shll
jo
xor
cmp
push
lock
js
xor
and
dec
scas
testb
js
xor
push
jne
in
sbb
pop
fbld
dec
mov
sub
test
mov
stos
xor
push
das
aas
pop
stc
dec
into
push
jnp
fwait
adc
inc
jl
pop
test
mov
sbb
add
mov
iret
push
pop
stos
sbb
sbb
xchg
roll
lcall
inc
mov
arpl
movb
fisubrs
mov
or
jge
out
int
movsl
dec
xchg
stc
out
aaa
and
cmp
and
sahf
push
inc
cmp
xchg
subl
ds
loopne
push
add
ss
fcompl
je
pop
out
popf
inc
gs
jne
xor
cmp
and
pop
pop
dec
xchg
cmp
xchg
push
daa
ret
mov
insl
xchg
mov
aam
arpl
outsl
mov
mov
shlb
jo
fcmovnbe
sbb
sbb
xchg
or
mov
stc
dec
lret
xor
jo
aad
sbb
pusha
jmp
mov
pop
jnp
xor
mov
pop
aam
cmc
es
popa
push
ja
leave
testl
mov
cmp
ret
pop
outsl
cld
loope
cmpsb
lods
dec
jge
xchg
loopne
mov
es
test
jp
cltd
fwait
mov
inc
ficomps
adc
iret
scas
sbb
dec
out
inc
jp
and
shrl
dec
dec
sub
and
imull
shl
mov
sarl
mov
or
pop
imul
das
add
pop
xchg
add
cmp
jno
mov
cmp
inc
sub
inc
inc
ja
cmp
das
sbb
fwait
sbb
sbb
adc
mov
xchg
cwtl
bound
cmp
sub
insb
call
or
pop
clc
mov
repnz
inc
mov
out
jg
jle
push
arpl
scas
popa
sub
ror
les
xchg
ss
add
insl
pop
outsl
test
xchg
xor
push
add
ss
fcompl
add
sbb
inc
add
testl
sti
push
jg
fsubp
mov
cmp
push
and
popf
mov
rolb
in
mov
push
ror
push
sub
test
dec
jbe
add
sbb
inc
std
stos
cmp
sub
xchg
fldt
adc
popa
xor
mov
xor
cli
jae
stos
sbb
and
icebp
sub
sti
cs
lds
enter
inc
ret
out
sbb
stos
mulb
mov
aas
jnp
jge
sahf
imul
out
mov
jle
jle
jo
mov
pop
adcb
pop
xor
inc
gs
inc
add
xor
sbbb
or
cmc
insb
xchg
sbb
inc
or
jg
mov
lret
into
cmovs
in
fldcw
aam
adc
js
movsb
pop
frstor
mov
fldenv
test
shrl
test
lret
xchg
mov
mov
bound
fadd
sub
clc
orb
lret
int
mov
mov
push
pop
xchg
jnp
cmp
mov
adc
sub
and
mov
mov
outsl
lods
adc
cmp
fsubrs
sti
sub
cmp
test
jne
add
mov
xlat
test
imul
dec
push
movsl
push
cmpsb
inc
jecxz
pop
loopne
push
pop
mov
push
xor
fildll
pop
in
mov
cmp
adc
jb
cli
mov
cltd
pop
xor
jae
cmc
popa
mov
mov
mov
add
mov
pop
add
jge
insl
stos
push
orps
test
push
xchg
mov
mov
adc
add
scas
pop
lock
mov
arpl
enter
cmpsb
shll
ja
sub
xor
xor
and
sbb
in
fstl
push
inc
push
mov
mov
or
and
push
push
mov
adcl
lods
add
test
add
pop
xchg
leave
sub
fs
jp
out
mov
mov
mov
xchg
dec
mov
testl
aas
cltd
push
push
push
sub
jno
dec
mov
fisttpll
xchg
mov
inc
je
sub
sbb
or
inc
leave
adc
jmp
dec
sub
insl
adc
push
repz
xor
dec
mov
mov
sub
mov
jae
sub
inc
mov
and
lds
mov
shlb
dec
adc
icebp
mov
jne
pop
inc
sub
fiadds
mov
cltd
xchg
in
testl
dec
enter
out
int
repz
sbb
ss
and
or
mov
lds
xor
jne
insb
insl
jp
test
cld
fisttps
push
stos
cmovbe
mov
cmp
sbb
insb
int
sbb
and
fwait
jp
adc
mov
or
pusha
std
xchg
rorb
call
pop
sbb
test
or
or
roll
ret
sbb
insl
jp
dec
or
mov
jb
rol
ret
fwait
mov
aad
xor
mov
ds
pop
xor
fsubp
out
sub
popa
xor
xchg
out
push
xchg
jnp
inc
mov
ljmp
mov
xchg
insl
sub
xchg
inc
pusha
cmpsl
cli
dec
and
xor
mov
adc
push
pop
aad
jae
dec
inc
ror
xor
jge
xor
push
push
rorl
repz
aaa
pop
add
push
sub
call
nop
cli
loope
cmp
xor
sbb
sbb
movaps
outsl
mov
add
pop
mov
sbb
dec
mov
pop
cmp
repz
jl
mov
add
gs
add
pop
repz
add
aas
push
pop
adc
xchg
popa
mov
adc
lret
mov
push
xchg
dec
pop
fistl
xor
lret
aam
js
cmp
jmp
xchg
shr
sahf
lret
dec
or
jmp
enter
sub
pop
jle
add
adc
std
jl
inc
data16
dec
xlat
in
inc
push
out
mov
cmp
bound
or
mov
or
cmpsb
dec
and
fildll
mov
das
gs
and
fnstenv
push
addr16
jmp
aas
xor
mov
jle
jge
outsl
lret
out
add
gs
add
cmpsl
stos
test
nop
inc
cmp
fdivrl
sbb
mov
cltd
bound
sbb
jne
xor
jbe
addr16
xorb
adc
pusha
dec
out
xchg
std
sub
lcall
xor
sub
or
or
lcall
push
sti
sbb
or
scas
rorb
vmulpd
lock
loope
pusha
insl
push
sbb
mov
xor
repz
mov
pop
movsl
bound
jnp
push
and
pop
mov
inc
mov
mov
add
sbbb
cmp
lock
add
dec
js
adc
xor
mov
dec
rcl
inc
mov
sahf
push
cmpsb
add
push
ss
add
aas
jbe
int
or
push
aaa
outsb
mov
inc
mov
xchg
mov
shll
mov
dec
push
xchg
std
fidivrl
xor
call
mov
pop
sahf
lcall
mov
loope
and
jmp
xchg
pop
insl
add
icebp
lds
ret
mov
sub
xchg
xchg
lock
pop
mov
jae
adc
jne
push
rcrb
mov
clc
mov
cmp
mov
imul
push
xchg
scas
cs
rol
dec
jnp
xlat
cli
or
cltd
ljmp
fsubl
fsts
stos
repz
mov
inc
insb
jbe
push
ficomps
and
adc
loop
dec
and
mov
les
sti
jnp
aam
xor
adc
clc
add
outsb
sub
add
xchg
push
or
sub
out
or
lret
mov
rolb
sbb
test
push
bound
hlt
lret
mov
rol
ret
mov
sbb
sti
das
sub
add
fscale
xor
sbb
lds
mov
std
add
mov
jnp
cs
push
adc
mov
pop
xlat
andl
push
filds
jne
cmp
xchg
cmc
ljmp
adc
outsb
mov
push
out
rcr
fisttps
sub
lods
push
adc
jle
xchg
inc
scas
xchg
xor
lcall
inc
mov
xchg
imul
loope
sar
test
jbe
cltd
test
roll
sti
adc
adc
jmp
sahf
movsb
cmp
popa
jnp
js
xor
mov
fwait
mov
lahf
xchg
dec
mov
dec
cs
pop
xchg
cmpsl
pop
js
xchg
dec
add
arpl
in
lds
inc
sbb
mov
cmp
inc
xchg
and
and
mov
das
filds
lods
lahf
popf
mov
add
mov
aaa
xchg
pop
out
sub
cs
push
push
fildl
pop
push
popf
sahf
fidivrs
sbb
testb
mov
das
js
pop
inc
stos
sbb
aas
sahf
les
mov
mov
xchg
sti
movsl
adc
mov
jp
addl
cmpsb
scas
inc
in
jnp
das
push
scas
mov
mov
or
push
lret
loopne
ds
push
xlat
mov
sahf
iret
push
stc
pushf
cmp
mov
jle
orl
push
icebp
minps
fwait
lock
lods
addb
push
decl
cmpsb
xchg
notl
pop
sbb
mov
addl
pusha
push
enter
cmpsb
lods
movsl
sub
jbe
cltd
inc
cwtl
dec
enter
inc
dec
mov
pop
mov
jmp
cmpsl
push
out
adc
es
xchg
jns
cmpsl
cmp
iret
jge
pop
ds
sbb
dec
cmp
test
xchg
pop
mov
popf
dec
jb
dec
sub
add
scas
insb
out
mov
or
ret
cmc
test
cld
or
das
pop
xchg
leave
sti
popf
inc
je
jns
test
mov
push
mov
xchg
adc
lcall
jno
test
jbe
pushf
scas
fisubrs
xor
mov
fwait
cwtl
push
out
aaa
repnz
lock
cmp
jl
shrl
shrb
rcr
push
jl
out
fidivrl
push
clc
jae
pop
dec
fists
mov
push
call
cmpsl
stos
leave
add
hlt
or
and
mov
jbe
in
xor
dec
xchg
jle
test
shl
xchg
sub
mov
push
pop
sbb
jb
pop
adc
pop
test
jle
popa
xorb
paddsb
pop
push
out
aam
fwait
jnp
push
or
ret
out
xor
in
imul
mov
jnp
je
push
pop
push
jo
sbb
xlat
cli
add
sbb
jae
lds
cmp
mov
mov
pop
mov
in
mov
lcall
xorb
jmp
jne
call
arpl
inc
jmp
mov
or
rorl
loop
imulb
dec
arpl
aaa
and
add
push
or
das
imul
dec
idiv
outsb
or
sbb
cltd
add
add
mov
pop
loop
jecxz,pn
and
out
xor
xchg
add
xor
imul
push
insb
xchg
out
and
mov
call
sub
sahf
jp
inc
jl
mov
clc
sbb
xor
xchg
dec
sbb
inc
lret
iret
add
mov
xor
xchg
adc
lcall
sahf
leave
jmp
sub
into
sbb
push
jp
iret
xchg
mov
gs
sub
sbb
sub
pusha
jb
mov
cmpsl
lds
jbe
ret
inc
xor
and
mov
sbb
bswap
cmp
subb
pop
sub
nop
lret
sub
scas
push
repz
jp
test
add
lock
aam
in
cmp
call
dec
les
scas
pop
daa
xchg
outsb
push
fisttpl
dec
inc
in
into
xor
shrb
mov
or
add
leave
icebp
stos
push
mov
flds
push
jne
and
roll
xchg
push
adc
pushf
xchg
jno
fstpl
dec
imul
jp
mov
popf
rorb
daa
add
xchg
jmp
and
aad
push
sbb
imul
dec
rorl
jnp
lods
jnp
jo
sbb
test
lea
sbb
fwait
adc
cmc
std
stos
fistl
aaa
mov
rcrl
xchg
sbb
add
pusha
test
pop
add
out
js
sti
sbb
cmp
pop
aad
icebp
inc
sbb
mov
xor
lret
mov
pop
dec
div
mov
fcmove
rclb
outsl
les
inc
and
fcmovu
fwait
cmp
sub
pushf
repnz
jp
shr
lock
cmp
adcl
mov
adc
loope
jp
sub
inc
pop
inc
imul
enter
xor
xor
lods
jbe
push
sbb
xchg
pop
pop
adc
mov
sbb
inc
mov
xchg
push
in
xchg
pop
lahf
cwtl
push
xchg
add
jle
arpl
out
in
xor
push
out
xor
lds
std
dec
fnstsw
mov
movsl
mov
and
pop
lea
jle
pop
out
sbb
or
lds
mov
insl
mov
or
push
sbb
movsb
and
popf
fldenv
loopne
pushf
jns
xchg
sti
ret
xor
push
adc
insl
insb
rol
mov
lcall
push
test
aam
imul
xchg
into
add
xchg
cmp
mov
sub
xchg
clc
inc
pushf
popf
mov
mulb
mov
jle
cmp
in
dec
data16
xchg
or
sbb
outsl
ret
js
enter
loopne
adc
loop
into
xchg
sti
adc
into
aaa
ficomps
mov
sbb
pop
push
rclb
jns
lea
lcall
lret
jl
cltd
adc
pop
cmpsl
add
jmp
mov
cmp
xchg
subl
test
aas
cmp
adcl
push
xlat
mov
mov
sbb
and
aas
dec
xor
pop
js
pop
ds
sub
lods
aas
fnstenv
cmpsb
shl
fcmovnbe
jmp
and
mov
inc
mov
and
cmpsl
rclb
xor
pop
push
popf
inc
cmpsl
mov
loopne
mov
xchg
je
mov
inc
test
imul
xchg
jp
fsts
jns
or
push
rclb
pop
jmp
fsin
icebp
and
mul
subb
sbb
push
push
fbld
dec
js
and
inc
mov
push
sbb
cmp
push
ds
sub
sbb
out
pop
cwtl
xlat
cwtl
dec
cmp
decl
cwtl
scas
mov
or
pop
push
je
pop
aas
mov
daa
test
jne
sahf
lock
outsl
sbb
pop
call
xor
in
inc
mov
imul
insl
imul
sub
mov
pushf
pop
push
fwait
jno
outsl
xor
push
std
adc
pop
mov
ja
push
mov
cmp
int
sub
sbb
fwait
cwtl
mov
or
cwtl
push
push
call
insb
rcr
stc
and
jecxz
xlat
add
divb
test
dec
mov
int3
cmc
pop
jb
nop
dec
movsl
cmp
inc
enter
rcrb
js
mov
popf
in
ljmp
push
mov
xchg
jne
mov
xchg
lods
loope
ja
xchg
inc
mov
gs
int3
cmp
mov
push
repz
ffreep
add
push
in
xor
in
mov
dec
push
and
cmovno
jne
inc
mov
test
cmpsl
enter
daa
sbb
inc
loop
iret
pop
and
shrb
mov
mov
pushf
mov
lret
inc
lock
sbb
in
or
rcrl
out
lds
lret
mov
cmp
loopne
jno
adc
xchg
gs
jae
dec
dec
mov
fstps
ret
xor
push
adc
add
in
out
push
outsb
xor
test
inc
inc
imul
loope
inc
add
rorb
movsb
jge
mov
xchg
sub
mov
jge
dec
xchg
inc
inc
fdivl
and
xchg
lret
sub
dec
stos
mov
test
adc
sub
or
mov
hlt
jne
push
stos
popf
fcmovbe
add
roll
jmp
inc
mov
inc
imulb
loope
dec
and
stos
aam
or
inc
insl
je
cmp
sti
loop
ret
lods
repz
pushf
cmpsb
pop
lods
fyl2x
les
loope
out
les
adc
cmp
sbb
enter
push
jg
icebp
add
pop
pop
push
arpl
loop
shll
add
andb
aad
in
sbb
push
insl
fsubl
mov
push
mov
mov
mov
rcll
test
cmp
ficomps
fbld
push
sbb
mov
jp
incb
cli
iret
cmp
int3
adc
icebp
xchg
aas
xchg
adc
fbld
xor
inc
into
xchg
outsb
rcll
in
scas
pop
inc
push
or
ret
ret
out
std
xchg
int
lock
sahf
adc
sbb
inc
leave
fistl
mov
mov
jae
in
or
sbb
mov
fs
mov
xchg
out
das
hlt
adc
or
pop
gs
mov
ret
das
pop
pop
daa
mov
cs
inc
adc
and
jae
pop
pop
aas
xor
fisubrl
jb
pop
adc
xor
dec
out
das
cld
inc
aas
fdecstp
cmpsb
jns
xchg
enter
dec
fwait
popa
scas
xor
repnz
push
bound
stc
psubq
pop
into
jns
adc
mov
es
fwait
rcl
mull
xor
imul
dec
adc
ds
cwtl
out
out
and
xor
xchg
lret
out
inc
and
lcall
xchg
into
shrb
xor
sbb
aad
mov
and
pop
xchg
mov
and
shll
sub
pop
inc
fidivrl
int
ss
out
lahf
lock
push
jle
das
rol
pop
push
add
mov
jmp
push
push
cltd
sarb
lret
aaa
mov
hlt
dec
arpl
lret
mov
xchg
lret
or
fisubrl
test
cwtl
mov
add
icebp
xlat
icebp
fsubrp
js
sbb
jne
aaa
pop
adc
or
scas
jno
or
lods
inc
inc
sbb
rclb
adc
xor
shrb
add
push
mov
dec
inc
js
xor
push
pop
mov
xor
icebp
enter
sahf
jle
hlt
push
cmp
and
lock
pop
dec
xchg
test
pop
ret
data16
sub
and
push
mov
inc
fsub
or
jo
int
out
fstl
decl
mov
cltd
mov
icebp
sub
ret
nop
mov
out
dec
loope
mov
add
or
into
cltd
popa
xor
inc
pop
mov
pop
test
data16
and
std
fisubl
in
repnz
push
mov
push
cltd
mov
xchg
jnp
push
sub
std
ret
out
int
ljmp
sub
push
in
or
out
lret
shll
push
dec
inc
and
xchg
out
and
or
out
mov
adc
stc
aam
std
xor
pop
ret
pop
inc
ljmp
pop
jae
jl
push
sahf
jl
push
repz
cmp
aaa
sbb
dec
dec
imul
movb
lret
jmp
cmp
sub
cmp
push
jle
mov
scas
aas
mov
movsl
xor
outsl
jp
into
popf
icebp
loop
mov
push
xchg
mov
and
or
fsubl
loop
jno
dec
out
inc
jo
jnp
pop
rcll
in
ss
cmc
adc
jo
mov
imul
add
xchg
aad
add
lret
shl
sub
pop
sub
test
xchg
push
mov
mov
inc
rcll
cld
mov
mov
pop
jecxz
add
or
jnp
push
inc
sar
daa
sub
rolb
sub
aam
das
rcr
adc
sub
sbb
ds
psubq
sbb
sahf
loopne
cmpsl
test
ror
push
mov
in
pop
mov
inc
out
sub
lret
xor
inc
fcompl
xchg
fidivrs
cmp
in
lea
dec
push
fs
xor
loope
and
std
lcall
mov
or
fsubl
outsb
mov
cmp
lea
inc
and
push
sub
test
fdivr
fisubl
rclb
or
push
pop
xchg
dec
pop
mov
push
repnz
loopne
daa
out
popf
pop
mov
cmp
fwait
inc
adc
pop
push
pop
shll
stos
in
popf
test
push
jmp
test
int3
pop
test
mov
adc
cmc
movsb
daa
cmp
mov
int
or
or
mov
leave
mov
loope
shrb
push
jo
xor
pop
imul
inc
mov
xlat
xchg
inc
xlat
cmp
js
mov
popf
les
sbb
or
lcall
cmp
shll
cmp
fstpt
incb
sarb
xchg
mov
cwtl
inc
imul
xor
jno
lahf
inc
cmp
push
jmp
jmp
inc
cld
push
cmp
ds
data16
inc
insl
pop
xchg
add
out
sub
inc
inc
stc
pop
aam
int3
or
movsb
sbb
adc
rcr
pop
repnz
aaa
mov
cli
lret
mov
shrb
xchg
sbb
mov
push
outsb
or
shl
xchg
dec
fs
adc
and
loope
dec
mov
mov
sub
mov
outsb
lcall
aaa
dec
xchg
loope
jb
dec
mov
sub
mov
sbb
and
dec
sbb
sti
fiadds
xchg
mov
jle
sub
sub
pop
and
mov
mov
mov
mov
into
sbb
insb
jbe
add
nop
nop
sub
or
xor
jle
arpl
out
dec
into
bound
inc
outsl
scas
mov
xchg
cmpsb
push
sub
dec
sub
mov
mov
out
cmp
dec
stos
daa
jnp
loop
addb
and
scas
mov
loope
lret
jge
in
int3
std
jns
rclb
out
out
test
jge
ss
jne
pop
inc
xchg
ja
inc
xchg
push
pop
adc
mov
sub
jp
or
jecxz
cli
adc
jnp
js
lahf
dec
cwtl
fs
outsl
cmp
aas
push
imulb
sbb
in
pop
inc
mov
arpl
cmpsl
repz
fdivs
scas
inc
fistpl
push
and
mov
in
cli
inc
mov
add
mov
sub
mov
mov
xchg
adc
stos
adc
aas
std
loop
mov
sti
mov
pushf
cmp
in
scas
int3
fsubrl
mov
popf
loopne
pop
jne
in
adc
std
call
cmp
aas
outsb
and
cld
xor
mov
jnp
aaa
or
dec
sbb
jmp
mov
jle
repz
push
jecxz
push
sub
lds
sub
sub
jmp
mov
xor
shl
addr16
sbb
jns
mov
loope
push
cmp
adc
xchg
and
push
sub
pop
out
push
xchg
loopne
pop
or
imul
pushf
mov
cwtl
and
dec
or
mov
mov
lcall
in
mov
sub
ja
pop
push
adc
seto
cwtl
jl
pop
rol
fwait
mov
jp
or
jle
test
inc
mov
ja
or
adc
lods
std
pop
push
adc
jne
movsb
xlat
hlt
jge
push
subl
xor
jb
xor
imul
xor
mov
pushf
leave
xchg
aad
in
test
rcll
imul
loopne,pn
or
mov
fmuls
xchg
jae
test
movb
daa
mov
jp
mov
dec
jge
std
mov
rorb
or
or
stos
add
sub
rcrl
mov
imul
int3
out
adcb
xorb
sbb
mov
sub
popf
bound
xchg
and
fidivl
fiaddl
nop
cmp
push
aas
out
mov
xor
push
in
sbb
test
xchg
inc
inc
mov
pop
clc
punpckldq
cwtl
inc
pushf
fsubrl
pusha
fcoml
xchg
inc
imul
and
jo
jae
aas
and
jo
cmpsb
insl
push
pop
bound
in
pop
jge
mov
cmpsb
xor
dec
push
jmp
mov
les
fidivrs
negl
push
or
push
jl
xor
xor
ficoms
jmp
sub
jge
jp
dec
lcall
call
push
in
mov
icebp
mov
push
jp
and
int3
imul
push
mov
movsl
pop
repnz
sub
or
insb
push
or
add
dec
addr16
push
sti
pop
pop
aaa
ret
xchg
add
xchg
xchg
push
imul
imul
mov
jg
jbe
dec
gs
sbb
adc
mov
sub
mov
cld
subb
adc
dec
iret
inc
insl
pop
mov
ja
rcll
adc
insl
mov
pop
repnz
pop
lds
sbb
mov
inc
xchg
pop
xchg
cmp
inc
cli
xchg
shrb
jecxz
sbb
cmp
dec
rcl
add
add
loop
arpl
cmp
sub
scas
inc
sbb
pop
popl
and
mov
gs
mov
test
cmp
loop
daa
loopne
sub
or
add
and
lcall
pop
adc
inc
popw
jl
jb
jns
es
add
mov
inc
imul
and
jne
test
shrb
inc
mov
and
cmp
jnp
inc
loope
fsubr
dec
cmp
inc
cmp
pushf
adc
xchg
dec
sbb
mov
lret
push
pop
rcl
cs
add
dec
jnp
lret
enter
out
arpl
sarb
test
jno
dec
fildl
scas
mov
imul
sbb
mov
adc
orb
lods
ret
cwtl
push
pop
xlat
test
cmpsb
test
imul
into
push
push
mov
call
repz
push
out
ret
mov
pop
jge
pop
cmp
push
lods
or
push
dec
outsl
int
je
mov
imul
jecxz
add
test
imul
or
jo
out
xchg
iret
xor
sbb
in
hlt
in
aas
rolb
xor
and
mov
lret
mov
lds
pop
fidivs
mov
arpl
jmp
and
adc
adc
fs
stos
fwait
or
fwait
lret
lcall
frstor
pop
call
push
ret
jg
stos
sub
mov
xchg
fmull
jnp
jb
jge
icebp
daa
adc
mov
dec
arpl
cltd
ret
xchg
push
imull
cmp
push
or
sbb
std
mov
inc
mov
xchg
lcall
test
enter
add
xchg
pop
scas
aad
and
push
or
add
and
inc
out
xchg
repnz
cmp
cmp
xchg
aad
dec
insl
mov
sub
shlb
mov
push
push
lcall
dec
pop
sbb
daa
ficompl
mov
mov
and
jbe
das
mov
roll
rcll
les
inc
sahf
dec
jbe
imul
mov
loopne
or
int
dec
cli
mov
jae
shll
in
push
scas
pop
dec
leave
aad
or
mov
lds
mov
push
xchg
adc
pop
in
addr16
pop
sbb
ret
js,pn
xchg
test
sbb
shl
or
xchg
aaa
iret
sub
add
pop
inc
pop
jecxz
rcrb
inc
cmc
sar
fcoms
adc
int
jle
sbb
imul
aas
add
daa
es
gs
adc
adc
push
adc
bound
adc
icebp
pop
movsl
call
out
push
loope
or
or
push
jae
mov
loope
stc
or
sbb
xor
mov
push
push
stc
or
mov
js
jo
sbb
ss
and
dec
aad
sbb
jmp
jne
push
ficoml
push
xor
fsubrl
cmp
lahf
cmp
stos
mov
pop
sub
orl
or
movsb
pop
out
inc
lret
jg
pop
pop
in
mov
dec
inc
addb
xchg
int
add
xchg
fsubr
scas
xchg
inc
test
xor
in
xchg
popa
pop
add
call
cmp
rorl
lock
xor
mov
pop
or
dec
lea
xchg
push
mov
in
xchg
pop
xor
adc
pop
inc
repnz
loop
or
stc
push
add
dec
push
cmpsb
sbb
loope
fnstsw
xor
in
sbb
push
stos
repnz
addr16
xor
sbb
mov
push
cwtl
mov
sahf
aaa
int
clc
fnsave
loop
pop
bound
xchg
das
jecxz
cmp
add
mov
js
lds
jno
fs
or
ret
mov
push
testb
add
xlat
cltd
or
nopl
fisttps
lahf
bound
or
pop
pop
mov
mov
xor
test
push
into
dec
sbb
addb
test
pusha
rorl
ljmp
andps
xor
loope
data16
xor
adc
pop
mov
shlb
pop
xor
jecxz
into
mov
sbb
xor
jnp
in
insl
inc
mov
shll
cmpsb
jl
mov
pop
ss
jle
inc
xor
mov
mov
push
nop
push
xchg
sub
jns
daa
mov
sbb
lcall
sbb
out
shll
mov
cmp
sub
jnp
ja
loope
jbe
cltd
and
in
jb
repz
fcmove
aaa
ja
icebp
add
jp
xchg
rorl
fisttpll
cmp
stos
sbb
push
sti
in
mov
or
jae
lcall
jb
mov
dec
rcrl
pop
loopne
rol
mov
out
shll
std
mov
jle
jmp
insb
rcrl
inc
in
dec
push
inc
adc
inc
dec
push
mov
hlt
mov
cmc
jae
jecxz
scas
fs
adc
lods
popf
test
adc
stc
gs
push
jb
mov
gs
pop
fs
subb
mov
jge
sbb
mov
lcall
xchg
sub
and
sub
push
sbb
or
enter
icebp
addr16
leave
cwtl
call
sbb
mov
push
push
jb
inc
out
sarb
cmp
mov
enter
test
fisubl
xor
inc
pop
iret
movsb
jae
aas
sysexit
pusha
cli
xor
lret
push
add
clc
pop
dec
adc
mov
jno
sahf
mov
xchg
jb
adc
sub
ljmp
sub
jne
cmp
mov
popf
test
cmpl
cld
push
push
aaa
cmc
jg
lods
mov
jl
add
cs
sti
cltd
pusha
stos
xor
lock
jmp
in
sub
lods
fsubs
cmp
xor
aas
mov
leave
loope
shlb
ss
in
test
and
xchg
andb
mov
jb
xchg
xchg
das
mov
in
pop
mov
pop
lcall
in
mov
sbb
pop
aad
mov
test
xor
xchg
pop
jno
in
mov
movsb
pop
pop
fimuls
popa
dec
inc
gs
iret
sbb
adc
add
fsubp
repz
mov
push
pop
sub
cmpb
inc
jge
xchg
out
lret
fld
push
cltd
dec
mov
push
xor
cmp
insb
es
int3
sbb
mov
rclb
mov
loope
add
into
or
aaa
shlb
lods
xlat
rcl
inc
mov
sub
cltd
jbe
cmp
lcall
popa
out
jp
popf
mov
mov
lods
hlt
xor
loope
repz
subb
cmpl
mov
jae
mov
out
fcomps
add
sahf
les
push
pop
stos
and
fistpll
out
jle
jmp
push
xchg
lahf
jns
aam
je
test
imul
aam
jg
test
mov
mul
rcrb
popf
dec
sbb
cs
xchg
jno
sbbb
adc
sub
dec
dec
dec
shll
aas
dec
scas
iret
mov
adc
or
xchg
ljmp
mov
mov
mov
lret
pop
les
sub
push
lods
dec
dec
test
pusha
movl
dec
sarb
in
fsub
into
mov
shlb
shl
scas
sarl
es
sarl
mov
js
arpl
icebp
inc
cmpsl
xchg
jbe,pt
inc
stc
xchg
imul
adcl
ds
scas
bound
stos
sub
push
mov
dec
loopne
pop
pushf
dec
mov
das
cmpsl
pop
dec
cmpsb
sbb
cmpsb
fwait
inc
lret
sbb
xchg
push
cwtl
aam
inc
repz
lcall
mov
dec
gs
repz
mov
jne
sbb
aam
push
das
inc
daa
sub
das
fs
push
dec
rcl
test
xchg
aad
or
add
ljmp
sub
adc
loop
faddl
int3
shl
adc
mov
adcl
cltd
push
add
jns
div
adc
sti
adc
mov
or
push
lods
push
pushl
std
sub
call
into
inc
hlt
or
jge
mov
ret
or
mov
dec
cmc
cwtl
cmp
pop
pop
loop
sub
xor
and
xchg
sub
lahf
jnp
dec
adc
mov
and
sub
and
jae
arpl
xlat
les
or
lret
mov
imul
cmp
jecxz
mov
cmp
pop
rclb
aaa
and
push
inc
jmp
pop
filds
leave
loopne
push
push
enter
std
sub
inc
repz
inc
xlat
stos
mov
sbb
sub
call
pop
mov
push
fs
iret
xchg
xor
pushf
fnstsw
les
pusha
jmp
sbb
sbb
dec
pop
adc
xor
dec
rcrl
inc
add
lods
cwtl
or
pop
xchg
div
popf
imull
mov
sub
push
pop
inc
sub
rcrl
fiadds
daa
push
imul
pop
xchg
jecxz
lock
dec
leave
mov
std
js
jbe
pop
push
mov
jmp
and
mov
pop
es
int
shll
gs
dec
push
je
not
pop
outsb
inc
lds
shlb
int
pop
cs
lods
push
xor
xchg
imul
adc
adc
jmp
dec
scas
lahf
push
gs
adc
cmpsb
ret
insl
bound
bound
lahf
adc
adc
push
inc
les
test
and
mov
xchg
std
jo
ds
pop
mov
lea
adc
jno
lea
xor
push
mov
ficoms
dec
fwait
cltd
mov
push
pop
xchg
dec
ja
lret
sbbl
fwait
mov
inc
icebp
pop
cmp
and
inc
and
sbb
cmp
out
lods
test
cmp
and
xor
inc
sbb
sbb
idiv
aad
jp
push
inc
dec
inc
into
push
push
das
mov
xchg
dec
scas
sbb
pushf
and
sub
pop
js
mov
lret
bound
push
test
sub
sbb
jg
cmp
out
in
andb
cwtl
loope
cwtl
cwtl
and
pop
pop
testb
movsl
cltd
and
stos
aad
push
sub
mov
icebp
fld
je
ja
pop
jno
mov
adc
push
sub
shlb
outsb
inc
jp
mov
sti
lds
aas
adc
data16
mov
fiaddl
and
cli
push
mov
dec
mov
in
sbb
out
sbb
xor
or
push
xchg
and
xchg
jns
push
fisttps
or
push
dec
jb
fidivrl
xchg
sbb
xor
pop
push
les
testl
sbb
push
mov
cltd
xor
idiv
mov
inc
jne
testb
add
add
jno
xchg
inc
add
xor
xchg
and
cmp
push
pop
sub
es
jae
add
xchg
and
test
mov
sahf
mov
adc
repz
add
push
sar
fimuls
ds
dec
or
sub
test
inc
leave
dec
sbb
es
xor
jo
jecxz
mulb
mov
jle
popf
inc
dec
repnz
cmpsl
dec
insl
adc
add
mov
and
icebp
sbb
das
or
xchg
in
push
nop
aaa
test
scas
xor
add
loope
stc
mov
inc
cmp
adc
nop
inc
rcrb
mov
imul
and
xchg
loope
pusha
push
ja
cltd
int3
push
fxch
cwtl
pop
or
cmpsl
test
lds
and
sahf
mov
ja
pop
in
jb
fldl
xor
jle
lahf
push
mov
mov
loopne
push
lret
add
gs
and
dec
loop
addl
cmp
cld
out
aaa
inc
es
cmp
dec
int
sub
xor
inc
aam
pop
rclb
cli
sbb
add
lret
insb
jecxz
push
jp
shl
mov
adc
into
mov
mov
lea
inc
push
add
push
out
sbb
in
xchg
fdiv
clc
insl
into
add
arpl
ja
inc
jo
icebp
mov
xchg
fstps
rcrb
ret
and
out
scas
adc
out
scas
pusha
mov
adc
mov
cmc
adc
dec
cs
int3
aad
and
jae
int
sub
test
stos
jl
lcall
and
stos
pop
mov
out
sbb
aad
fsubrp
cmc
mov
xor
outsb
add
pop
mov
lods
movsl
stos
pop
mov
call
mov
push
bound
dec
mov
into
mov
sbbl
stos
insb
out
hlt
pop
or
inc
ret
shlb
push
bound
push
mov
jge
aaa
and
stos
and
lock
inc
cmp
push
push
dec
adc
mov
imul
leave
mov
xchg
dec
xor
out
lds
jl
adcb
cmpsl
cmp
sbbb
jp
mov
data16
loop
mov
cmp
cs
loop
mov
cmp
jbe
and
sbb
loopne
mov
mov
and
mov
in
xor
fbstp
adc
addr16
mov
xor
mov
fucomip
lods
cmpsb
icebp
pop
jae
cli
fs
repz
loop
or
push
mov
lret
sbb
cld
outsl
orl
rcl
lahf
les
int3
dec
or
fmulp
cmp
dec
mov
push
cmp
mov
sub
mov
mov
imul
mov
leave
adc
inc
aas
icebp
or
jns
push
out
cmpsl
sti
sub
jae
mov
mov
test
add
sub
mov
adc
cli
pop
stc
out
cmp
mov
div
inc
enter
popa
xor
or
sbb
scas
movb
loope
and
cltd
stos
jb
xchg
test
or
mov
lea
insb
mov
shlw
sahf
in
adc
subb
jmp
ret
test
imul
sbb
cmp
ret
mov
repz
xchg
fsubrl
xchg
mov
mov
rcrl
cld
scas
mov
dec
xor
dec
adc
outsl
in
in
cld
gs
out
inc
push
lret
inc
or
int3
aas
fwait
pop
and
outsl
or
and
jno
sbb
cmp
jnp
fistpll
inc
pop
mul
xchg
xor
les
cmp
push
pop
hlt
inc
xchg
and
fldl
mulb
rcll
loopne
pop
or
mov
push
sbb
cmp
fmull
dec
xchg
imulb
enterw
xchg
mov
mov
mov
mov
cmp
sarl
aam
xchg
mov
mov
lods
xor
aad
das
mov
loopne
pop
dec
fldcw
push
mov
daa
inc
test
jge
xchg
pop
iret
push
pop
pushf
mov
jbe
cmp
sahf
push
cmpl
or
pop
arpl
dec
mov
xchg
or
pop
mov
test
xchg
ljmp
rcll
pop
mov
inc
sbb
rcl
xchg
loopne
sti
xor
sbb
or
stos
inc
lods
and
js
adc
lea
scas
iret
xchg
and
orl
or
incl
icebp
ja
aad
mov
inc
std
test
stc
sub
scas
xchg
push
test
mov
sbb
enter
sbbl
adc
lods
mov
push
imull
shl
xchg
push
jbe
popa
add
lret
fs
mov
fwait
cltd
mov
jg
adc
sbb
and
out
in
fwait
sub
adc
shll
shrb
adc
inc
notl
cmp
dec
int3
call
push
inc
jle
pop
dec
jecxz
add
jg
cmp
mov
daa
and
out
out
mov
or
sbb
dec
xor
mov
pusha
xor
fisttpl
xchg
sub
in
pop
fisubrs
and
adc
xor
mov
mov
sub
cmp
aad
cmpsl
lods
or
sub
jo
sub
mov
and
adc
int
inc
push
and
dec
dec
xchg
pop
daa
cli
jl
xor
in
push
lods
cmpsb
add
lcall
gs
cmp
rorb
add
jae
add
or
outsl
lahf
push
jno
cmpsl
aaa
int
lods
out
in
push
into
std
and
data16
fidivs
js
pop
or
mov
lea
mov
dec
aaa
fcomi
pop
xor
jae
sub
stos
test
inc
add
pop
mov
or
cmp
test
cmpsb
cmp
mov
and
mov
loop
daa
scas
roll
test
push
pop
popa
fisttpll
roll
mov
fsubrl
dec
stos
pop
nop
adc
jnp
inc
push
int3
sub
popa
bnd
fstpt
es
cmp
pop
arpl
sti
jg
dec
ds
cmpsb
xor
sti
push
xchg
mov
sbb
out
out
add
icebp
aad
cmp
mov
adcl
iret
movsl
jecxz
sahf
push
jmp
call
cmpsb
sahf
ds
sarl
ret
mov
outsl
xchg
jb
pop
cmp
xchg
jne
xor
test
jo
cwtl
or
ja
jecxz
ret
mov
inc
sbb
adc
ss
stos
xor
sarb
outsl
mov
push
cltd
jmp
xchg
mov
into
inc
sti
out
sbbl
ljmp
jnp
ja
xchg
ds
jecxz
lods
iret
sub
rolb
insl
lahf
ror
add
test
cld
ljmp
shlb
mov
stos
in
adc
pop
push
lods
jmp
rorb
pushf
in
ror
subb
fidivrl
cmc
fstps
mov
sbb
or
ficompl
shrb
cmp
pushf
repnz
mov
out
popf
fldt
add
out
cs
mov
js,pn
cmp
push
decl
stc
xchg
inc
xor
ljmp
imul
push
xchg
popf
xchg
xchg
loopne
mov
fs
pop
scas
cmp
mov
test
xor
pop
xlat
sub
pop
scas
cmc
sbb
or
dec
lods
push
xchg
movsb
xor
ret
into
out
dec
adc
cwtl
cmp
ja
mov
movsl
fcompl
negb
aaa
sbb
jecxz
dec
aam
sub
lret
push
lea
gs
inc
js
les
out
sub
sub
jl
insl
ud1
pop
mov
jp
adc
pop
pushf
cmpsb
rorb
dec
ja
loop
jecxz
push
xor
pop
stos
mov
dec
mov
sbb
cmp
jns
lcall
sbbb
add
adc
repz
popf
pop
adc
aad
cmp
push
popa
xorl
test
pop
into
xor
pop
lret
cmpsb
ds
leave
pop
lods
cmp
jo
adc
mov
leave
sbbl
push
xlat
insb
daa
and
mov
cmp
mov
in
push
adc
and
lods
jecxz
dec
leave
mov
push
add
nop
lea
sbb
movsl
or
je
cmp
jns
xor
andb
mov
cli
subl
xlat
outsl
lcall
mov
mov
mov
sub
mov
rolb
inc
xchg
mov
es
bound
repnz
dec
or
fcomps
in
inc
pop
sbb
mov
lret
mov
inc
adc
lock
adc
mov
aas
add
imul
jne
xchg
cmp
jmp
lods
mov
popa
insb
in
add
push
test
mov
adc
loope
ret
inc
popa
mov
fxch
xchg
ljmp
inc
pop
fisubrl
mov
lds
mov
insl
add
jp
sar
or
daa
cmp
inc
mov
loop
leave
nopl
or
in
xor
adc
int
pop
xchg
mov
lods
pop
push
push
lret
sub
push
mov
sahf
push
and
push
popa
cmp
and
sbb
cmpsl
call
in
lret
and
lods
push
mov
mov
test
add
add
pop
sbb
push
inc
adc
lock
stc
pop
sahf
iret
into
mov
std
cs
sub
cmpl
inc
jae
inc
daa
fucomp
rol
pushf
stos
daa
jbe
movb
sbb
andb
cld
mov
loopne
mov
push
sahf
enter
ret
mov
push
xchg
jns
cwtl
lret
mov
bound
pop
dec
and
mov
dec
addr16
aas
enter
fldcw
fildll
inc
scas
cwtl
popa
cmp
roll
jmp
sub
dec
rorl
adc
jbe
jae
and
cld
push
scas
add
pop
orb
cmp
bound
test
ds
mov
fisubl
push
mull
in
lods
faddl
mov
ret
arpl
mov
test
out
aad
rcrl
adc
arpl
fmull
or
incb
sbb
arpl
mov
sbb
jecxz
shlb
mov
ljmp
xchg
js
xchg
addr16
sub
stos
xchg
and
inc
insb
mov
and
mov
mov
lahf
leave
subl
inc
pop
lcall
fcmovnb
test
or
int3
lods
in
pop
test
stos
cmp
push
and
test
cmp
mov
divl
pop
lods
lock
xlat
icebp
stos
outsl
out
sahf
or
out
out
cltd
lock
add
mov
cmp
fcompl
jmp
insl
pop
rorl
pop
xchg
jne
shlb
ljmp
mov
sbbl
mov
xchg
es
add
mov
call
imul
push
repnz
cmp
mov
fidivrs
push
and
int
xlat
cmpsb
mov
or
js
iret
pop
mov
lods
mov
cmp
xchg
pop
rclb
repnz
mov
xchg
mov
jae
leave
sub
mov
adc
ret
push
mov
jg
sbb
jge
dec
rolb
cmp
lret
test
cmp
dec
mov
inc
cmp
adc
ljmp
repnz
mul
xchg
sbb
mov
int3
inc
mov
fisttpll
xchg
out
enter
in
pop
sub
inc
and
add
movl
iret
push
clc
sahf
cltd
sub
lcall
pop
movsb
and
lock
std
out
fdivrs
pop
leave
sti
fistps
popf
mov
push
shlb
mov
mov
stc
ret
iret
shr
dec
add
push
cltd
fnsave
sbb
movsb
jbe
fistpl
cmp
cmp
push
gs
mov
inc
pop
sub
div
mov
in
flds
xor
nop
cmp
hlt
dec
out
scas
jecxz
xor
cli
into
sub
push
xchg
sbb
push
sbb
or
aas
aas
jle
enter
xor
ss
aad
push
divb
stc
pop
mov
cmp
adc
ljmp
add
iret
mov
jp
lret
jbe
outsl
outsb
and
push
imul
loope
jno
dec
jnp
std
es
call
rolb
mov
mov
pop
cmp
dec
scas
sbb
in
pop
call
ret
lcall
xor
ret
xorl
jnp
and
fildll
test
xchg
dec
jmp
mov
gs
pop
xchg
pop
iret
loop
insb
jg
inc
popf
mov
xchg
call
add
xchg
sarb
fs
sub
xorl
cli
hlt
ds
outsl
insb
icebp
aad
and
iret
mov
into
leave
les
fnstenv
mov
arpl
sbb
daa
sbb
in
mov
rcl
xchg
cmp
sbb
outsl
sub
into
loop
and
mov
and
or
lods
mov
adc
fsubp
fmulp
or
inc
rcl
shrl
sub
js
xlat
jmp
ret
dec
pusha
dec
dec
pushf
in
and
stos
ljmp
add
mov
pop
jp
stos
xor
xchg
pop
mov
adc
shlb
insb
pop
shr
dec
jmp
xchg
sub
leave
call
fidivrs
fmull
inc
xlat
dec
inc
adc
lods
add
ret
xlat
stos
enter
mov
sbb
stos
ja
mov
insb
pop
pop
js
bswap
pusha
pop
jg
movsb
inc
in
cmpsb
xchg
mov
jae
in
fnstcw
jecxz
loopne
cwtl
arpl
sbb
or
in
dec
push
mov
into
fiaddl
mull
pusha
pop
cs
int3
psllw
addr16
xor
outsb
es
jno
adc
call
stos
out
in
addl
test
add
add
xor
mov
repz
sahf
lret
repz
mov
out
cmp
xchg
dec
push
stos
js
leave
add
mov
cwtl
push
bound
cmp
and
pop
inc
lods
sbb
outsl
sbb
pop
add
shlb
mov
dec
or
xor
lret
jnp
into
icebp
inc
jno
out
lret
add
adc
pop
jno
xchg
andb
idivl
push
das
sub
jbe
push
hlt
xor
subl
jae
in
and
jmp
push
stos
mov
sub
aaa
pushf
mov
mov
in
sub
xor
popa
shlb
sub
leave
xchg
negb
aas
and
sbb
ret
cmpsl
dec
xchg
je
sbbl
out
push
std
int
mov
cmp
pushl
xchg
mov
dec
xlat
lea
mov
loope
loop
adc
jb
mov
lds
dec
push
rcrb
push
mov
rclb
pushf
ret
cmpl
subl
lods
and
inc
das
les
jg
sbb
cmc
lret
cmp
push
cmpsb
int3
add
adc
xor
xchg
xor
ja
xor
cli
inc
pop
mov
push
jmp
lret
imul
movsl
pop
push
mov
ljmp
mov
adc
enter
aaa
jle
mov
jmp
cmpl
repz
and
mov
mov
dec
idivl
jp
gs
cmp
jae
adc
dec
outsl
ret
lea
adc
lods
outsl
or
mov
and
je
jno
and
inc
pop
mov
xlat
mov
push
pop
stos
loop
cmpsb
std
cmp
rcrl
pop
add
jno
test
add
jbe
loope
outsb
sub
inc
jg
ret
stos
fstpl
aaa
js
mov
aaa
movsl
sub
js
jns
rclb
and
jae
jg
loopne
lahf
stos
fisubrl
in
insb
xchg
or
or
ret
fldl
mov
cmc
cmpsl
sbb
lods
out
test
icebp
out
into
push
mov
cmpsl
movsl
or
loopne
add
scas
xor
and
je
pop
mov
imul
push
mov
add
popf
mov
push
mov
lods
add
jns
arpl
iret
cmp
leave
inc
lods
xchg
sbbl
ds
mov
movzbl
cmpsl
sti
shll
inc
xor
xchg
popa
jecxz
inc
cmpsl
hlt
into
push
or
mov
sub
notl
shll
icebp
mov
push
ja
xchg
fisttpl
dec
add
adc
sbb
xor
push
ret
loopne
pop
sub
les
inc
xchg
lret
add
xor
dec
xchg
and
shlb
lahf
mov
lret
or
or
push
add
xor
cli
mov
cwtl
push
jmp
movsl
jmp
movsb
aaa
adc
cmc
inc
sbb
repnz
lds
outsl
cmp
fiadds
fs
cmp
pop
sar
xor
mov
in
lods
adc
out
sub
sbb
or
notl
and
scas
fs
xchg
push
mov
call
je
pop
xchg
imul
mov
lret
cld
jmp
cld
jmp
mov
rcrb
pop
push
fwait
dec
imul
nop
adc
fcoms
jle
dec
out
push
inc
imul
inc
cli
pop
pop
sub
mov
or
or
pop
sub
in
dec
int
iret
imul
call
das
jbe
lds
dec
daa
pop
mov
sti
shll
mov
sahf
push
pop
xor
push
mov
xchg
cmpsb
jno
or
sub
adc
sahf
mov
imul
xor
stos
add
push
inc
jnp
mov
pop
mov
mov
xor
cmp
sbb
xorl
xchg
sub
pushf
push
pop
inc
rcll
dec
ftst
rcrl
out
mov
sub
inc
mov
sbb
push
js
dec
lret
adc
cmpsl
add
or
jns
fsubrs
and
fwait
sbb
dec
jl
mov
sub
fistpll
xchg
js
sbb
or
pop
out
mov
cmp
sti
sbb
lcall
iret
lods
fiaddl
out
add
jle
loopne
nop
lcall
xchg
jns
jbe
sbb
pop
mov
sbb
push
popf
aad
jmp
lahf
lahf
sbb
fildl
movsb
insl
mov
scas
das
push
push
icebp
rorb
cmp
add
cmpsb
push
push
pop
mov
or
lahf
push
push
inc
pop
sqrtps
inc
mov
fstpl
stc
test
cmp
push
mov
subl
scas
sbb
cmpsl
inc
push
pop
push
out
mov
mov
outsb
mov
out
sbb
or
dec
mov
cs
test
nop
xchg
or
push
call
jno
outsl
movsl
add
dec
inc
jp
lahf
inc
pop
andl
cmp
aad
sub
adc
and
sbb
push
sahf
fsubs
pop
jecxz
dec
adc
add
mov
or
lcall
push
inc
daa
push
sub
push
push
xchg
mov
mov
dec
mov
jl
in
icebp
sbb
xchg
loopne
inc
mov
adc
mov
jg
xchg
add
xor
pop
pusha
sbb
cmp
mov
out
mov
or
inc
jmp
cld
pop
sub
divl
mov
push
adc
out
pop
mov
gs
fdiv
push
cs
cmp
addl
push
fstl
jns
pop
adc
addr16
and
xchg
rcr
jge
fisubs
push
sahf
dec
or
jge
insl
in
repnz
xchg
std
xor
lahf
pop
cmp
or
xor
or
cltd
das
std
call
in
pop
test
jl
mov
cmp
mov
enter
pop
mov
fwait
out
dec
or
icebp
arpl
inc
add
sub
js
pop
sub
xchg
int3
push
push
mov
sub
push
mov
outsb
jne
mov
je
mov
cmc
push
imul
push
mull
adc
cmp
cli
jbe
fwait
lahf
pop
fcomip
mov
testl
xorb
sbb
push
notb
cmp
push
outsl
adc
lahf
incb
pop
popa
cs
pop
sbb
lret
mov
sti
sbb
add
mov
pop
sbb
aas
fiadds
pop
push
pushf
test
xchg
or
ret
aad
sub
lds
lret
jge,pt
fmull
idiv
xchg
inc
popa
fndisi(8087
push
or
aas
push
jb
dec
pop
lock
fisubl
jbe
and
inc
cmpsb
dec
ss
mov
movsl
xchg
out
pop
adc
push
jbe
lods
scas
adc
out
mov
push
fdivr
push
cmp
pop
push
jp
int
pop
dec
cs
test
adcl
fs
mov
or
pop
loop
std
add
fcmovnb
inc
fsubl
jl
stc
cmpsl
lret
cmp
subb
inc
mov
aaa
leave
jmp
fs
pop
stos
in
push
je
lods
push
mov
imul
jmp
call
inc
add
ss
test
adc
loopne
push
pop
in
add
leave
push
outsl
cmp
add
adc
or
add
test
std
mov
jp
filds
fcoms
mov
inc
dec
sub
insl
cmc
mov
jmp
leave
jle
test
adc
arpl
int
xchg
sbb
push
or
jbe
jo
popf
cmp
mov
xchg
add
mov
fst
mov
sbb
jo
mov
dec
cmp
pop
xchg
mov
rcrb
xchg
pop
aaa
lea
push
adc
iret
rorb
xchg
sbb
clts
test
push
mov
out
mov
lock
sbb
test
out
fdivs
jl
pop
mov
in
mov
cmpsb
jmp
mov
sbb
sub
mov
js,pn
mov
cmpsb
test
pop
aam
pop
addr16
int3
push
fs
sub
stc
mov
scas
out
hlt
jne
adcl
jl
lahf
cmp
cmp
jl
movsb
cld
mov
es
add
loopne
sbb
scas
jb
aam
jg
jl
cltd
xchg
lods
div
jg
inc
xchg
out
add
repz
mov
enter
popf
inc
cmc
leave
and
pop
sbb
pop
ret
data16
xchg
rcrl
push
aam
fdivr
pop
test
in
stos
ret
push
pop
cli
lock
sbb
popf
xchg
aam
popf
cmp
xlat
or
sub
push
xor
pop
jp
cwtl
repz
cmp
mov
cmpsb
mov
jno
push
sbb
fdivl
stos
stos
jo
mov
mov
and
xor
inc
outsl
mov
sub
js
sbb
je
cmp
add
addl
xorb
jg
mov
arpl
aad
cmpsb
mov
enter
stc
adc
fldl2e
sub
lock
xchg
xchg
inc
fdivl
mov
imul
es
arpl
cmp
jle
cli
pop
inc
aam
push
jb
shr
icebp
and
arpl
stos
stos
lods
pop
and
mov
dec
pop
in
mov
rorl
sbb
xchg
popa
sub
lock
cmp
les
pop
lret
fwait
data16
andb
xchg
dec
test
in
aad
pop
aad
scas
lods
xor
xchg
into
repz
mov
stos
pop
ret
fld
sti
mov
roll
sti
jecxz
cmp
rcr
adc
idivb
sbb
aam
mul
jp
aas
xchg
pushf
sbb
mov
jle
andb
mov
addr16
fimuls
cmp
sarb
sbb
xchg
mov
in
rcll
dec
pop
mov
mov
sbb
dec
jle
cmp
cmp
f2xm1
sbb
sub
mov
daa
lret
aaa
xchg
adc
mov
push
push
cmp
popa
add
mov
negb
cs
pop
jo
icebp
out
mov
dec
rcl
lea
mov
aaa
xchg
outsb
and
arpl
dec
cmp
mov
dec
add
mov
xchg
test
test
xchg
fwait
xor
mov
xchg
and
jb
int
sub
stos
xchg
test
sbb
lret
mov
idivb
cmp
push
jecxz
or
leave
push
lods
xchg
out
sbb
aaa
lret
or
add
cwtl
out
shl
notl
sbb
jae
in
mov
cwtl
das
in
sti
push
push
std
push
push
mov
jbe
and
xchg
sahf
aam
leave
stc
adc
loopne
mov
inc
sbb
jecxz
pop
adcl
cs
push
lahf
fs
fistpl
hlt
cmp
ret
mov
mov
dec
pop
xchg
and
dec
or
add
sbb
jb
cmp
lods
in
mov
mov
lret
and
cmp
xor
dec
fistps
repnz
test
loopne
pop
or
icebp
fs
testl
xor
jp
fcoml
cmp
aam
mov
cmp
cli
scas
jecxz
ljmp
dec
sub
cmp
xor
insb
iret
std
mov
fistpl
dec
jne
lods
sub
pop
fadds
pop
push
lods
mov
push
lret
and
scas
mov
rolb
cld
pop
jo
aam
cwtl
test
movsl
xchg
ljmp
ret
iret
push
add
push
add
cmpsl
outsl
mov
es
fwait
ja
and
push
jno
in
fisttpl
adc
mov
fldcw
or
out
movsb
push
jmp
pop
mov
sub
ficoms
and
jne
xchg
mov
ret
data16
push
aad
into
mov
or
push
pop
daa
lods
inc
cltd
add
sub
xchg
mov
pop
mov
mov
mov
popf
aam
dec
cmpsb
push
sbb
sahf
add
stc
jnp
insl
add
fldcw
xor
xor
in
push
add
jle
mov
aaa
pop
leave
js
shrb
mov
mov
pop
out
or
pop
adc
xor
mov
mov
xor
clc
lods
jge
aam
push
movsb
fwait
dec
nop
xorl
ss
and
xor
mov
add
jl
xor
pusha
cmp
jnp
lods
jno
imul
bound
inc
or
sti
mov
pop
push
scas
lcall
fmulp
jae
aas
push
pop
mov
sarb
shll
mov
jg
xor
inc
sub
cmp
inc
jmp
push
jg
lods
inc
pop
inc
and
cli
inc
or
mov
xchg
xor
and
push
inc
mov
outsl
daa
aam
test
leave
pop
adc
loope
push
xor
shl
mov
and
fldl
sub
push
shrl
lods
adc
pop
addr16
fldl
pusha
lahf
mov
or
pop
jnp
sbb
jge
pop
mov
jbe
sbb
cs
cli
mov
mov
pop
call
addb
push
scas
mov
dec
add
in
dec
fdivrl
add
stc
push
into
imul
cmp
adcb
ljmp
jne
inc
mov
xchg
pop
leave
loopne
test
jbe
xchg
or
sbb
rclb
push
imul
les
leave
lds
push
xor
sub
icebp
out
pusha
pop
cmp
popf
xor
sub
add
out
adcl
and
mov
pop
insl
inc
fs
jl
iret
xlat
call
pop
cmpsb
mov
or
lods
jnp
fstps
andb
sub
cmp
ret
leave
pop
adc
and
mov
fs
jae
test
jnp
sub
xchg
repnz
push
fwait
decb
cmpsb
inc
cs
cltd
insb
mov
adc
fistl
xor
pop
mov
sbb
lcall
jne
dec
cmp
push
jp
pop
call
std
mov
call
cwtl
xor
stos
daa
mulb
incb
mov
aas
sbbb
xchg
fs
mov
push
out
imul
aaa
mov
dec
sbb
or
xor
xor
aam
scas
cli
repz
adc
cltd
or
testl
cmp
in
inc
lock
loope
aas
lret
xor
or
cmpsl
imul
repnz
sub
mov
pop
push
adc
dec
ja
inc
xchg
and
xor
mov
mov
xchg
xchg
ljmp
pop
dec
mov
out
cld
popf
push
jb
insl
enter
sbb
aas
push
sarl
cmpsl
mov
lahf
adc
rcll
cmp
push
iret
and
inc
rol
scas
mov
or
fs
inc
cmpb
push
pop
mov
fstps
sbb
stc
adc
dec
in
jp
ds
in
cmpb
rcr
inc
lods
or
repnz
mov
test
dec
pushf
leave
mov
mov
xchg
ljmp
pop
test
dec
faddp
das
cmc
clc
push
fwait
scas
mov
push
sub
adc
call
imul
loope
adc
cmp
jmp
lock
push
mov
inc
xor
push
in
push
inc
fmuls
xchg
cwtl
dec
sbb
ljmp
test
mov
jnp
loop
fsub
sbb
scas
insb
fldt
lock
insl
jg
fwait
adc
cmp
xchg
cltd
and
mov
scas
repz
jne
pop
adc
repz
and
ss
push
sbb
cmp
fsubp
push
mov
negl
xchg
pop
lret
lock
mov
and
ss
mov
jno
xchg
imul
mov
and
repnz
imul
push
jecxz
cltd
cmp
pop
push
inc
dec
cmp
lods
xchg
gs
mov
push
lock
adc
insb
inc
stc
push
dec
jmp
pushf
inc
or
fwait
push
bound
aad
and
mov
push
fst
repz
lea
faddl
and
mov
std
jnp
jecxz
inc
rcll
pop
sbb
das
aas
xchg
mov
xchg
push
mov
sbb
rcll
repnz
pmaxub
lods
ds
mov
pop
mov
mov
push
les
xor
subb
imul
enter
xor
cmp
mov
fldenv
mov
ret
mov
out
pop
adc
fcompp
dec
cs
or
out
mov
outsb
mov
jle
cmpsl
add
inc
cmc
sbb
ljmp
xor
xchg
sbb
roll
mov
sub
ret
mov
sbb
pushf
loopne
cwtl
sub
jg
push
ljmp
clc
adc
cmc
idivb
idivl
fiadds
xchg
fisttpl
icebp
adcb
pusha
fisubrs
arpl
movsl
jmp
leave
sub
fstpt
add
mov
sbb
jbe
and
pusha
clc
pusha
fs
test
mov
push
fwait
lcall
std
push
nop
mov
mov
mov
sti
push
push
std
loope
cmp
sahf
and
loop
decl
xor
jbe
arpl
and
pop
or
and
sbb
lds
adc
mov
jno
mov
or
xchg
mov
pop
pop
daa
or
repnz
sbb
push
push
mov
mov
lcall
mov
dec
fdivl
sbb
push
inc
cmp
dec
or
ss
dec
jae
rcll
jne
dec
jnp
lods
cmp
cmp
repz
add
aaa
push
xor
xchg
mov
test
or
rclb
cwtl
jns
sub
xchg
test
sbb
lds
pop
cmp
sbb
fwait
repz
push
add
cmpsl
cmp
inc
dec
pop
xlat
xor
and
pop
xor
mov
sbb
insl
movsb
push
and
stc
push
dec
mov
mov
push
lds
fldl
repnz
scas
pop
mov
jecxz
cmp
xchg
mov
sahf
xchg
pop
jno
xor
test
enter
inc
sbb
dec
and
out
add
lret
lret
in
xor
inc
repz
pop
lds
xchg
imul
lods
std
adc
xchg
fisttpl
mov
movsl
out
inc
int
loope
pushf
sahf
insl
cltd
or
push
pop
orps
je
fisttpl
cmp
add
jle
fisubs
addr16
bound
mov
push
fcompl
pop
mov
scas
dec
inc
pop
push
mov
push
mov
idivl
xor
mov
adc
push
jle
insl
jno
cmpsb
pop
xchg
xchg
arpl
mov
aam
or
inc
aaa
shll
ret
add
out
dec
jo
mov
aam
xor
lret
cwtl
sub
dec
sbb
mov
cwtl
push
fstp
ftst
or
jne
sbb
pusha
loop
addl
fstps
xchg
cld
lret
in
jge
out
xor
daa
lret
imul
sub
adcb
jle
ja
xchg
insl
add
pop
es
lods
push
add
jge
push
mov
add
xchg
into
andb
outsb
push
push
ret
data16
rolb
push
rcrl
movsb
mov
and
dec
mov
pop
mov
adc
ficoms
test
adc
mov
subb
add
cmp
pushf
dec
mov
fnstsw
xor
ss
nop
dec
lcall
insl
daa
movsl
cmp
and
lahf
fldenv
cli
shrb
scas
sbb
adc
popa
ja
lock
push
movb
outsb
fstl
test
add
movsb
fbld
dec
mov
dec
dec
push
popa
stos
out
icebp
xor
sub
sti
fcomps
repz
inc
push
cmp
mov
leave
movsb
in
lock
addr16
mov
mov
xchg
lret
shl
fmulp
test
stc
inc
ljmp
mov
rorb
push
mov
fdivrl
push
mov
sbbb
xlat
dec
in
fmull
rorl
pop
adc
mov
sub
daa
mov
inc
inc
push
cmp
xchg
add
cltd
lock
shl
fdivrl
push
shll
outsb
repnz
in
pop
xlat
sti
movl
sbb
push
imulb
insb
repz
ljmp
xchg
fiadds
loop
mov
add
sub
nop
cmp
xor
push
mov
cmp
and
das
cmpsl
or
fstl
inc
movsl
cmc
sub
out
stos
jge
insb
mov
mov
mov
jmp
ss
lcall
inc
dec
pop
ljmp
pop
out
cs
jno
or
mov
ss
cmp
test
les
rcrb
pop
add
fmull
lods
pushf
jge
adc
into
jecxz
out
and
into
rcrb
sarl
mov
inc
idivb
mov
sti
push
arpl
loop
mov
add
iret
pop
ljmp
and
sub
dec
lock
out
fcoms
js
dec
loopne
clc
add
jmp
roll
mov
test
push
cmp
lock
fucom
push
jp
aad
cmp
jbe
pop
outsl
mov
shrl
js
mov
cmpsl
jo
fsubrl
ds
shlb
loope
adc
push
fmul
and
int3
push
mov
push
adc
cmp
rclb
sbb
inc
arpl
fbstp
mov
aad
ss
mov
in
adc
jp
scas
insl
arpl
sbb
or
fs
enter
adc
sahf
ficoml
test
aas
sbb
xchg
mov
es
decl
jge
fadds
jne
or
jmp
cmpsb
hlt
daa
jle
xlat
outsb
lock
push
push
mov
jle
lcall
sahf
jns
mov
mov
push
dec
cmp
into
into
dec
dec
dec
xchg
mov
orb
or
pop
stc
cltd
pop
fdivs
dec
mov
fsubs
loope
es
mov
pop
jmp
sarb
test
mov
addb
mov
fcomi
imull
mov
mov
adc
xchg
or
cli
push
out
addr16
das
xor
pusha
pushf
aas
cmp
jbe
mov
xor
jmp
and
jp
cwtl
pop
das
push
jl
cmp
je
loop
cmc
aas
ss
mov
mov
mov
or
inc
rcrl
dec
imul
cli
hlt
shll
adc
cmpsl
out
mov
adc
aaa
repnz
jg
mov
inc
out
sarl
jecxz
xchg
popf
insb
inc
sub
fbld
pop
inc
push
into
es
ss
adc
and
outsl
mov
mov
jl
pushf
int3
idivl
and
push
popf
lds
fldcw
mov
rorl
cwtl
mov
aam
int3
mov
icebp
out
mov
ds
jne
stos
and
in
pusha
in
test
ret
call
mov
scas
and
fildll
fwait
push
and
mov
jbe
popa
inc
ds
lods
mov
push
jo
xor
repnz
cs
outsl
shrl
movsl
add
lcall
sarb
mov
or
mov
push
mov
push
mov
jbe
repnz
in
fbld
inc
and
or
testl
pop
sub
stc
adc
cmp
divl
pop
pop
inc
lea
aaa
dec
jb
aaa
cld
in
push
movsb
lods
icebp
jp
cmc
push
cmp
in
xor
pop
sub
mov
mov
dec
jae
cmp
rol
cmpsl
pop
scas
inc
sub
out
sub
es
jle
adc
cmpsl
jmp
sarb
dec
cmpsl
jns
jns
push
outsl
ljmp
icebp
pop
add
icebp
sbbb
leave
sbb
add
cmp
test
clc
and
gs
fwait
mov
add
or
jno
or
shlb
jnp
add
js
popf
push
cmp
jne
sarb
add
mov
cmp
jmp
test
inc
aaa
ror
out
mov
cmp
sub
sbbl
push
lods
test
sti
andb
sbb
inc
add
add
das
clc
cmp
dec
jae
in
jne
mov
pop
cltd
inc
pop
mov
fs
adc
push
iret
mov
roll
pop
nop
test
loop,pt
and
jmp
ret
xor
les
mov
cmp
gs
sub
add
xchg
add
xchg
lock
or
in
ret
dec
or
out
xchg
cmp
cmp
push
push
push
rol
jb
mov
out
jecxz
mov
hlt
and
daa
mov
fidivrs
jnp
cmp
cmp
jg
pop
add
enter
inc
fdivl
xchg
or
mov
jl
stos
inc
leave
loopne
xor
ret
dec
mov
lcall
or
lods
call
lea
push
jmp
ret
push
imul
cmpsl
jge
sbb
stos
test
mov
ds
cmpsl
inc
lock
push
xor
xor
adc
sub
pop
xor
fldcw
and
jmp
add
dec
dec
sbb
test
fs
mov
xor
mov
out
jo
sti
mov
movsl
jb
push
stc
mov
push
mov
mov
xor
mov
bound
pop
dec
ss
inc
push
sbb
icebp
jns
addb
pusha
or
cmc
jo
andl
lock
inc
mov
mov
cmp
add
stos
loop
xchg
and
mov
stc
inc
mov
push
dec
clc
sarl
cmp
or
inc
xchg
test
and
stos
out
and
or
jns,pn
push
cmp
in
addb
cld
dec
inc
fstpt
dec
and
jo
popf
sub
dec
out
pushw
out
notb
lret
lds
in
rcrb
pop
push
jg
jnp
or
aas
aad
sahf
add
sub
push
mov
outsl
fdivl
aad
outsl
lds
and
lea
hlt
push
dec
jb
xor
jno
aaa
ds
push
je
jl
push
hlt
fcmovnb
fsubr
and
xchg
cltd
loopne
ja
xchg
shlb
push
sbb
movsb
pop
push
mov
lret
jp
sbb
mov
out
loopne
jmp
repnz
ret
sub
add
xchg
dec
pop
pop
cltd
dec
push
sub
sahf
mov
mull
fmul
stos
sti
mov
icebp
xchg
push
bswap
stos
push
pop
push
mov
pop
and
inc
xchg
ds
mov
dec
lock
fistpl
out
jl
ret
adc
fistps
fisubrs
arpl
dec
mov
sbb
fsubl
sbb
es
dec
pop
xchg
inc
xchg
cmp
mov
fs
inc
cld
and
push
add
test
data16
rorl
call
mov
fisttps
fldln2
rcrb
imul
in
mov
add
jne
add
arpl
fidivl
cltd
mov
adc
push
push
push
dec
cwtl
jp
push
arpl
les
clc
orb
dec
ficoms
aam
in
fmull
iret
inc
arpl
cld
dec
mov
imul
cmp
xchg
push
fisubs
inc
adc
in
popf
jle
push
xchg
push
push
inc
push
cmp
pusha
or
push
repnz
jge
push
mov
jmp
loopne
cld
jns
test
jle
loope
dec
cmpsb
jmp
xchg
fmuls
inc
xor
cli
scas
mov
jge
cmp
inc
lahf
jp
arpl
fistl
xchg
sahf
negl
lock
mov
lret
xlat
data16
mov
fnsave
push
lahf
mov
mov
cmpl
int
daa
mov
or
shll
fwait
mov
andb
sbb
aas
fisubs
adc
pop
in
or
xchg
daa
sub
stos
nop
cs
scas
push
sbb
inc
or
pop
mov
sbb
cmp
or
mov
js
mov
mov
movsl
xchg
push
mov
repnz
rol
fdivrs
shr
cld
mov
andl
mov
out
add
adc
mov
cmpsl
cli
stos
mov
inc
pushf
mov
out
adc
dec
lds
push
push
mov
lea
lret
sbbb
sarl
les
sub
mov
mov
cwtl
fwait
arpl
mov
sub
adc
jo
rolb
inc
jo
lock
decl
test
sub
adc
imul
loope
jnp
test
insb
or
repnz
orb
mov
cmc
mov
push
aad
popf
mov
xchg
outsl
add
sub
lahf
aad
std
loope
ficoml
mov
xor
fstl
gs
mov
sub
mov
jae
cmp
fmul
jb
inc
jecxz
xor
ljmp
sub
imul
push
sbb
in
or
mov
test
lahf
lahf
inc
incl
test
and
aas
mov
dec
cwtl
pop
es
sbb
repnz
lahf
and
int3
jb
aas
sub
cmp
popa
es
jae
es
sahf
cli
push
xlat
mov
cld
fsubs
dec
decl
push
lea
adc
ret
pusha
mov
andl
aam
outsl
iret
mov
add
pop
cli
or
fnstcw
push
jl
mov
sbb
imulb
out
dec
mov
js
adc
scas
xchg
cmp
fisubl
inc
repnz
unpcklps
mov
pop
xchg
fwait
and
aam
dec
sub
sub
lods
lahf
add
aaa
adc
sbb
popf
sarb
shll
scas
scas
mov
jecxz
adc
cmp
jo
enter
andl
dec
add
mov
cltd
ljmp
and
subl
cld
int3
stos
jecxz
xchg
lahf
movsl
pop
enter
shll
pop
inc
jns
es
inc
sti
fwait
or
lock
in
pop
adc
and
mov
lods
insb
je
icebp
jmp
mov
test
call
mov
ss
add
outsb
pusha
inc
mov
in
or
xor
xchg
pop
outsl
ja
push
lock
jle
in
adc
cmp
aad
inc
pop
or
dec
jecxz
dec
test
push
xchg
push
fisubrl
nop
and
fiaddl
rorb
xor
int
xchg
ss
inc
sub
mov
je
inc
push
mov
push
popa
loope
psubw
xor
scas
ja
mov
or
inc
mov
push
jne
call
addr16
push
mov
stos
repz
xchg
jmp
lcall
cmp
pop
arpl
adc
jo
jo
xchg
jno
test
in
mov
add
sub
or
xchg
pop
icebp
repnz
cs
mov
mov
inc
popa
adc
mov
cmpsl
icebp
pushf
push
push
icebp
pop
sub
mov
dec
sbb
int3
sub
sub
arpl
mov
push
data16
dec
cmp
test
stos
jbe
test
mov
mov
mov
cmp
adc
into
imul
adc
xchg
outsl
sbb
push
mov
mov
mov
call
xor
sub
mov
push
fildl
pusha
push
cmp
out
inc
out
movsb
xchg
aam
iret
sbb
insl
movsb
out
cmp
cld
mov
fmul
aad
inc
jge
adc
mov
in
inc
sbb
in
dec
shll
pop
push
cld
add
sbb
stos
xchg
mov
test
in
and
xchg
mov
pushf
rep
mov
xchg
lret
adc
inc
into
in
out
dec
insl
fwait
loop
sub
add
cmpsb
or
jae
mov
mov
loop
aad
adc
jbe
inc
aas
or
add
in
xor
aam
fcompl
ficoml
loope
jp
adc
add
out
mov
cmp
xchg
cltd
ljmp
or
push
sub
push
dec
jmp
or
mov
inc
mov
rcll
xchg
add
das
ds
mov
int
mov
pop
and
mov
mov
inc
and
pop
mov
jp
sbb
mov
fstpt
cmpsb
xchg
cmpsl
mov
pop
mov
shll
pop
mov
cltd
lea
or
mov
imul
dec
int3
pop
mov
mov
sbb
popf
imul
mov
bound
xor
gs
mov
mov
repnz
sbb
scas
cwtl
aam
shlb
dec
xlat
cmp
pusha
jmp
jp
imul
adc
addr16
shll
lcall
adc
outsl
pop
push
xchg
push
mov
outsb
scas
dec
sbb
adc
fmul
es
xchg
jb
dec
pop
sahf
inc
les
imul
lds
loope
xor
add
shrb
ficoms
fsubrs
fxch
pop
mov
scas
data16
jmp
in
xor
jno
add
nop
jb
inc
and
lret
add
jmp
jg
jnp
mov
shrb
aas
out
fstpl
fs
mov
add
mov
and
mov
iret
jmp
jb
aad
sub
icebp
jmp
loope
mov
and
and
fst
ss
mov
vpsrlq
jmp
jle
jmp
jmp
jl
mov
jmp
push
cmpsb
pop
ficomps
and
dec
or
push
lods
ljmp
je
ja
and
push
rorb
sub
push
pop
sub
arpl
stc
push
call
xchg
or
daa
jge
lods
and
bound
sub
fcom
iret
pushw
or
push
andb
mov
fyl2xp1
inc
insb
lret
dec
mov
jl
out
cli
imul
in
xchg
gs
add
pusha
out
mov
xchg
lahf
ficompl
out
ljmp
test
jl
pop
out
inc
pop
fcomps
jns
inc
test
mov
daa
jmp
hlt
out
xchg
lock
movsl
andl
xchg
push
or
fadds
aaa
xorl
jno
les
xor
pop
jp,pn
fst
int
sbb
cli
xchg
jne
pop
aaa
xor
lods
sub
loope
roll
gs
lret
xor
cmp
mov
divb
bound
iret
mov
sub
mov
and
lods
es
xchg
and
stos
orl
jecxz
fcom
mov
push
stos
or
in
jmp
push
jns
add
jne
inc
in
out
dec
int3
jg
pop
sub
ja
dec
scas
loopne
mov
rorl
xchg
aad
js
cmpsb
ds
push
fwait
shl
out
mov
push
lods
in
cmpsb
dec
test
push
test
sub
fcomip
push
out
xchg
pop
mov
jae
stc
sbb
mov
mov
mov
mov
mov
mov
fwait
pop
jge
push
pop
mov
repnz
aas
jle
jle
mov
icebp
mov
sub
inc
pop
loope
push
sar
dec
sbb
push
add
pop
push
lock
lock
ret
mov
movsl
data16
push
cwtl
repz
jge
xor
mov
cmp
push
add
pop
daa
jnp
or
xchg
sub
push
bound
test
push
lret
fmulp
inc
aaa
js
lods
mov
data16
inc
insb
sti
and
imul
inc
fcomps
cmp
cltd
lods
add
lcall
dec
xorb
and
adc
lret
pop
loope
int3
imull
pop
les
cmp
fnstenv
mov
lahf
add
cmc
out
xchg
les
mov
in
or
icebp
daa
sub
mov
inc
js
std
shll
pop
das
xchg
inc
push
fimuls
cmp
mov
or
push
mov
cmpsb
mov
lret
int
gs
cltd
push
xchg
adc
pusha
sbb
aad
movsb
mov
inc
test
in
movsl
push
xor
out
jno
or
pop
dec
repnz
dec
sar
xchg
outsb
and
mov
sbb
mov
lret
mov
test
fstps
pop
psadbw
and
cmpb
cld
cmpsl
jp
mov
dec
sbb
mov
inc
fnstsw
idivb
fwait
push
and
pop
movsb
sbb
sar
fwait
sbb
addb
cld
bound
test
out
out
mov
test
xor
push
jge
jge
test
loopne
das
into
mov
add
pop
pop
mov
inc
sbb
jp
fiaddl
push
push
jmp
stc
rclb
and
pop
rcl
mov
daa
test
into
xchg
lods
inc
pop
xchg
pop
xchg
pop
sahf
pop
fstpt
ljmpw
or
ret
push
inc
sub
test
pop
cmp
jl
mov
daa
cli
xorb
not
push
adc
fcomp
push
in
xor
lds
and
std
add
sub
xacquire
mov
sub
pop
stos
imul
in
leave
adc
fcoms
sbb
lods
pop
fdivs
dec
cmpsb
jns
lahf
mov
addb
lds
das
shll
and
test
daa
push
dec
adc
je
outsb
int3
push
iret
stc
push
jmp
shl
negl
pop
pop
cmp
dec
xchg
push
ret
and
hlt
adc
insb
lea
adc
dec
mov
dec
popf
dec
pop
lods
sub
es
mov
push
xor
and
jmp
cli
lods
repz
iret
aad
push
fsts
stos
pop
pop
cmp
xchg
stos
ljmp
das
pop
and
cs
adc
pop
push
aam
mov
leave
hlt
lcall
jp
negb
pop
in
inc
pop
xor
gs
adcl
psubusb
in
in
jno
mov
sbb
call
or
push
sub
dec
and
push
ret
sub
shl
aas
xor
fstpl
fildll
xor
inc
scas
mov
lahf
mov
push
xchg
and
sub
xorl
mov
fnsave
mov
push
pop
loopne
sub
adc
push
rorb
mov
mov
jge
xchg
push
pop
sub
movsl
jmp
pop
mov
xchg
out
push
lock
sbb
sbb
insb
push
xchg
fildl
push
xor
sub
pop
mov
rol
xor
shlb
sahf
daa
in
ljmp
pop
sub
cmpsb
sahf
stos
mov
push
test
mov
push
nop
fsub
add
or
int3
adc
jne
int3
sbb
sar
push
xlat
pop
mov
and
xor
cmp
jbe
xor
mov
cmp
jb
jg
outsb
stos
mov
sbb
xchg
dec
rolb
iret
ljmp
cmp
lahf
test
in
leave
faddp
adc
mov
arpl
jb
inc
leave
je
flds
ss
enter
push
inc
mov
xchg
mov
sub
mov
adc
xrelease
cmp
adc
pusha
xchg
nop
sub
adc
xchg
clc
arpl
pushf
mov
stos
xor
test
jl
dec
xchg
test
jno
mov
stos
mov
jo
stos
xor
or
xchg
repnz
inc
and
jge
inc
lret
notb
sub
mov
pop
lea
pusha
xchg
mov
cmc
sbb
sub
fmull
mov
mov
test
loope
dec
pop
dec
data16
fadds
dec
int3
ja
jge
ljmp
xor
xor
arpl
adcl
shlb
mov
add
push
loopne
jp
scas
xchg
pop
imul
add
push
shrb
nop
fldt
call
push
fisttpl
pop
and
pop
scas
js
frstor
jae
ss
fs
loop
paddusw
cmpsl
cld
push
cmp
movsl
fisubrl
push
loopne
in
sbb
xor
mov
pop
test
insb
aam
decl
in
mov
in
fimull
cmp
cwtl
push
fcomip
jp
movsl
stc
inc
out
repnz
das
rcrb
out
jp
sahf
mov
mov
test
inc
data16
mov
adc
dec
xor
int
jmp
adc
aas
pop
xchg
mov
negl
sbb
sub
stc
sarb
gs
jae
and
mov
jo
push
jmp
std
mov
outsb
test
sbb
push
arpl
add
cmpsb
cmp
dec
repz
repz
xchg
xchg
inc
int3
mov
xchg
pop
int
mov
mov
daa
and
stos
or
rorl
or
insb
stos
movsl
xor
fnstenv
xchg
adc
push
lret
shlb
xchg
inc
rcrl
mov
pop
push
out
pop
inc
ds
jb
pop
nop
sbb
repnz
stos
hlt
enter
jae
rol
jecxz
lahf
arpl
fisttpll
adc
cmp
ljmp
push
xor
xchg
clc
or
leave
cmp
add
test
add
ret
and
xchg
mov
or
jmp
xor
call
mov
jne
add
test
lods
xor
ja
shll
in
fidivrs
sub
ror
cmpsb
sub
lcall
ficoml
fs
mov
mov
rcrl
les
jo
enterw
mov
xchg
cmp
and
sbb
xor
mov
imul
sbb
cs
addr16
dec
ds
mov
or
outsb
movsb
outsb
lods
sti
fidivrs
pop
gs
adc
adc
or
fwait
dec
repz
sub
imulb
into
inc
fidivs
and
shlb
enter
popa
add
in
add
mov
shll
dec
jae
xchg
jbe
je
xchg
xchg
fsub
fisubrl
push
out
or
cmp
cmc
mov
test
pop
jge
xor
inc
movups
test
inc
and
out
or
adc
push
lret
adc
lcall
mul
std
or
cmpsb
cmpsl
popa
xchg
popa
addb
stos
sub
stos
imul
jl
and
or
xchg
sar
pusha
sub
imul
sbbl
mov
fcmovbe
insl
pusha
inc
cmp
jmp
dec
adcb
cmpl
sbb
inc
sbb
mov
jmp
xlat
subb
xchg
das
sbb
cmpb
lret
incl
lock
pop
insb
mov
negb
inc
dec
jg
mov
inc
jb
and
aas
in
pop
ficompl
or
jle
inc
call
sbb
mov
lcall
push
xchg
clc
and
adc
cwtl
push
jbe
aas
aas
pop
mov
pop
sub
cmp
ret
inc
testb
sub
mov
cmp
and
xlat
inc
shl
dec
push
or
adc
lods
dec
push
and
pop
and
xchg
and
in
dec
and
xchg
add
mulb
xchg
and
fdivr
push
scas
mov
cs
shr
sbb
add
sub
push
mov
pop
xchg
fsubrs
cmc
ret
xor
pop
cld
mov
mov
cs
mov
fs
add
stc
mov
daa
test
int
loopne
repnz
pop
dec
pop
xchg
cld
loope
jo
mov
mov
mov
outsb
mov
pusha
jns
add
lock
cli
mov
pop
dec
test
lahf
pop
mov
mov
ja
xor
fstpt
jbe
cmp
adc
movsb
fmul
inc
ss
jp
push
scas
xchg
and
sahf
rcl
lret
stc
test
mov
mov
cli
stc
pop
idivb
xor
sbb
aaa
bound
in
cmp
and
lret
clc
xor
jae
xchg
shl
nop
xor
xlat
test
cmp
or
jae
pop
dec
jecxz
das
inc
jb
or
mov
loopne
movsl
aad
cs
fisubrl
in
in
adc
push
xchg
test
sbb
fs
pop
pop
xor
rcrl
mov
sub
stos
in
aas
dec
mov
xor
imul
gs
fldcw
jnp
mov
and
or
ret
adc
ss
mov
xor
mov
cli
ret
jecxz
test
out
mov
fsubr
mov
lcall
jns
test
cmc
loopne
xchg
fs
fs
sbb
aam
xchg
outsl
js
rclb
pop
cs
and
test
aaa
lret
sub
adc
mov
inc
and
push
movsl
mov
add
mov
jb
sub
sarb
popa
xor
fwait
xchg
push
push
sahf
test
iret
push
test
shlb
cmpsb
mov
jmp
js
push
sub
aam
pop
lods
addr16
dec
fimull
rclb
pop
out
cwtl
mov
sub
push
lahf
cmpsb
xor
pusha
mov
mov
or
cmp
idivb
andl
lock
mov
movsl
movsb
incl
int3
fstps
ret
loopne
xchg
add
in
mov
dec
dec
sub
outsl
jl
call
fs
pop
dec
sub
test
jge
lretw
push
rcl
add
jg
sahf
mov
dec
cs
shrl
mov
sbb
push
aad
dec
int3
mov
push
adc
pop
movsb
sbb
adc
stc
jne
fwait
mov
xlat
jns
mov
cmp
push
mov
sub
bound
rcll
pop
cltd
mov
ss
ja
xchg
fsubrl
call
jo
push
aam
out
mov
int
cmp
stos
push
fldcw
mov
and
mov
das
jnp
adc
in
push
lea
xor
push
aad
push
iret
in
repz
test
scas
test
sub
aad
mov
sub
imul
aad
icebp
jb
push
in
cmp
and
push
mov
pop
int3
xchg
neg
jno
push
cmp
aaa
popa
pop
fnstenv
shll
lock
dec
sarl
lock
nop
xor
cs
loopne
mov
jg
fidivrl
inc
addr16
sub
and
jge
mov
inc
adc
mov
movsb
loopne
inc
ds
jp
inc
das
outsl
fcoms
adc
push
int3
shrl
pop
es
or
xlat
adcl
aad
mov
jb
enter
sub
jl
into
xchg
repz
mov
xchg
ja
cmp
mov
pop
inc
call
pushl
orl
push
inc
sub
int3
xor
adc
fwait
jmp
push
push
movsl
aas
aad
xor
rorb
mov
out
idivb
sbb
adc
popf
xchg
shrb
es
push
das
cmp
pushl
cmp
adc
adc
pop
jb
in
push
add
xchg
movsl
test
dec
in
adc
jns
mov
enter
js
in
aaa
jmp
rcll
lcall
xchg
push
cltd
lock
xorb
fsubrs
xor
push
pop
xchg
adc
sub
push
out
loop
loop
xchg
mov
arpl
xchg
jb
add
dec
mov
dec
mov
std
inc
test
insb
cmp
mov
sub
rorb
mov
hlt
cmp
fcomi
aas
xchg
mov
fld
sbb
stos
xchg
xchg
push
pop
and
pop
jbe
mov
cmp
nop
call
adc
add
lods
leave
stc
xor
fistps
inc
push
ret
pop
into
inc
xchg
dec
jmp
fldcw
xchg
and
jg
push
std
push
cmpsb
mov
add
imul
fdivrp
xchg
fidivrs
roll
sbb
push
cmp
fisubrl
mov
jbe
fs
outsl
push
push
je
jnp
cld
mov
mov
orl
and
mov
adc
in
popa
inc
xor
pop
or
mov
jmp
aas
dec
sti
insl
rolb
xchg
xor
cli
push
jp
frstor
sub
push
shlb
add
mov
shrl
push
out
imul
push
aam
pop
jmp
xlat
aam
push
cmpsb
mov
mov
aam
mov
cmp
pushf
sub
jbe
aas
sub
sbb
adc
mov
sub
and
loopne
in
or
sub
hlt
jmp
mov
sub
lea
xchg
mov
mov
in
cwtl
insb
inc
leave
pushf
xchg
jbe
outsl
mov
imul
loope
xlat
xor
inc
jnp
xor
sub
pop
jp
mov
sub
loopne
dec
test
jo
dec
mov
inc
fnstsw
scas
fstpl
mov
cmp
mov
adc
or
mov
lcall
and
aaa
xor
popf
and
sub
jp
cltd
push
jb
loope
hlt
fdivs
push
in
jbe
movsl
pop
test
insb
push
pop
push
jo
ret
jle
ficoml
int
jge
dec
adc
fs
imull
mov
in
mov
sbb
lret
ud1
addr16
or
push
xor
popa
out
cmp
and
test
jb
outsb
xorb
mov
xor
sbbb
sti
cmc
xor
xor
and
pop
test
xchg
push
cmc
fstpt
cmp
imul
mov
cld
xor
mov
or
jnp
pop
pop
mov
daa
sbb
mov
inc
clc
fcmovnbe
or
mov
xor
aam
adc
rorl
dec
mov
add
cmp
sub
aam
pusha
mov
pop
lret
push
push
lds
in
iret
adc
sub
mov
xchg
lods
mov
addr16
and
sbb
sbbb
xor
or
add
add
call
stc
mov
cmp
push
push
and
jnp
lea
sti
aad
jo
mov
push
jne
sub
dec
sahf
leave
das
subl
cmp
jle
add
jb
popa
xor
pop
xchg
movsb
test
pop
push
sbb
loop
test
shl
inc
cmp
push
jge
stc
es
inc
xchg
leave
mov
cmpsl
jl
xchg
xchg
jecxz
stos
mov
ficompl
xchg
sub
sub
in
mov
cmp
sbb
ficoml
mov
inc
or
push
bound
test
ja
or
testl
adc
fldln2
adc
dec
fdivl
sbb
sub
or
pop
push
cmp
add
mov
push
xor
mov
adc
cmp
pop
jo
adc
jl
test
cmp
in
mov
std
scas
mov
sahf
cmp
in
pop
in
lret
popa
inc
pushf
sub
clc
push
lret
xor
push
loop
jmp
js
fstps
pusha
pop
fcmovnu
gs
popa
cmp
or
push
fldl
scas
jnp
xchg
neg
stos
mov
pusha
mov
nop
xor
pop
mov
jae
cmc
das
jnp
xor
sub
loopne,pt
adc
sub
in
test
or
pop
shrl
insb
jns
push
add
mov
xor
xor
jmp
lret
jne
clc
pop
xchg
pop
popa
jb
mov
mov
push
insl
lret
pop
push
push
jl
xor
lahf
sub
ss
rcl
adc
add
mov
push
loop
lret
outsl
mov
test
xchg
lret
jne
pop
dec
loopne
push
sti
mov
inc
insl
mov
bound
mov
lahf
adc
insl
cmpsb
clc
xchg
jo
jl
lea
xchg
test
loopne
test
push
dec
jae
jl
lock
imull
cmpsl
mov
inc
test
mov
mov
and
loope
enter
adc
das
inc
or
pusha
xchg
out
lods
das
out
fimull
out
outsl
ret
sub
sbb
lods
mov
out
mov
out
jge
pmaddwd
repz
jmp
aas
cmp
fnsave
mov
sti
add
cmp
cli
sbb
or
inc
sarl
sub
addr16
sti
adc
jbe
sbbl
mov
cmp
insb
js
nopl
scas
repz
add
test
ficompl
add
daa
lds
cli
mov
pop
rolb
jo
jbe
xor
mov
sbb
sbb
mov
dec
and
jle
adc
sti
mov
fwait
pushf
test
adc
and
pop
inc
andl
jge
cld
push
or
call
dec
inc
xor
or
mov
scas
jo
outsb
loopne
cmc
bound
cltd
mov
lds
inc
iret
sub
xor
cld
pop
pop
fwait
cmp
das
sub
pop
in
mov
test
fs
dec
fcomps
stos
aad
call
cs
rcr
stc
mov
jl
cmp
out
insb
mov
fs
ret
mov
mov
dec
xchg
jecxz
pop
and
cli
shlb
iret
inc
sub
xor
pushf
ja
enter
adc
fwait
jge
aam
inc
outsb
idivl
repz
push
enter
int
xchg
push
fisubrl
push
stos
adc
imul
pusha
mov
nop
mov
sub
push
add
sti
xor
pop
dec
mov
enter
push
pop
push
decb
xchg
imul
stc
repz
cmp
or
aam
adc
lret
add
pop
mov
test
jge
mov
imul
jbe
and
imul
imul
or
inc
popf
add
dec
notl
xlat
mov
inc
in
xor
jne
xchg
stos
mov
or
ja
sti
lahf
in
mov
adc
cmp
imul
pop
pop
xchg
add
aam
jnp
fnsave
cld
cmp
fsubrp
pop
inc
xor
gs
push
arpl
popa
mov
out
test
pop
lds
cmc
adc
into
arpl
mov
xchg
adc
cli
or
jecxz
mov
fstpl
daa
aaa
cmp
stos
movsl
inc
lods
mov
sbb
mov
adc
jo
pop
mov
adc
addl
loopne
rclb
adc
mov
adc
inc
enter
sub
stc
mov
and
xchg
aad
push
cs
scas
sub
daa
add
xor
cmpsl
outsb
jns
inc
clc
sub
push
jmp
pop
fmull
or
in
in
lahf
test
mov
jle
and
lcall
jl
add
add
in
dec
mov
out
inc
push
sub
dec
push
cli
push
shlb
push
jge
mov
fdivrl
mov
push
int
xor
rcll
iret
add
imul
mov
adc
orl
fisubs
sub
js
mov
xor
xlat
in
int
push
push
mov
cmp
pop
fisubs
mov
xchg
add
iret
mov
push
push
shr
xchg
test
sbb
jl
sub
cmc
xchg
insl
jne
ret
movsl
test
sbb
rcrl
push
in
add
div
xchg
leave
jmp
cwtl
xor
adc
ja
andl
scas
lods
inc
cltd
hlt
dec
or
and
imul
inc
aaa
push
or
xor
fcmovne
fnstcw
mov
push
loop
in
cmp
leave
xchg
jl
fdivr
and
rcll
sbb
mov
loop
and
push
xor
jnp
mov
cmp
jne
stc
pop
sahf
sub
data16
xor
pop
mov
lret
test
jle
stos
pop
lcall
mov
mov
mov
insl
mov
mov
rorb
jo
fisubrs
xchg
push
sub
pushf
inc
lahf
popf
sbb
sbb
jb
cmpsl
push
call
cmp
sub
mov
pop
add
in
in
sti
mov
imul
or
add
je
cmpsb
pop
or
out
je
rorb
pop
add
imul
vpaddd
jo
aad
pop
and
rcl
mov
cmp
cmpsl
add
jmp
jmp
and
xchg
xorb
loope
sahf
sub
add
jae
cmp
sbb
add
cwtl
xchg
xchg
xor
push
adcb
in
xchg
dec
add
adc
mov
jl
ss
inc
call
decl
cmp
stc
dec
pop
and
xor
fsubl
js
sbb
lahf
popaw
lds
mov
add
addb
mov
mov
sub
xor
jb
push
leave
les
incl
rcl
lret
lock
cmpsl
xor
cli
inc
fisttps
xchg
addl
push
shll
or
pop
dec
popa
and
in
inc
scas
lods
dec
lods
cmpsl
sbb
clc
push
movsl
push
or
pop
lods
dec
sub
mov
mov
add
mov
fwait
dec
xchg
mov
dec
jo
out
lcall
cmpsl
mov
push
xchg
pop
pop
xor
sub
mov
xlat
and
or
lcall
and
mov
inc
idivb
push
sub
xlat
out
int
pop
jl
pushf
inc
stc
push
dec
je
rcr
push
mov
imulb
sti
adc
fwait
lods
and
inc
fwait
or
pop
jge
stc
scas
ljmp
jbe
ret
push
iret
jl
movsl
push
ret
cmpsl
orl
jne
scas
les
das
dec
nop
pop
orl
cmc
sub
mov
lds
iret
nop
fdivrl
mov
psubusb
inc
jb
scas
cmp
push
and
jp
push
ss
mov
pop
xor
xchg
js
cmc
cmc
ja
sub
leave
popf
cmp
pop
rcrb
xchg
int3
inc
pusha
int3
sbb
movsl
and
push
stc
lods
push
mov
jne
dec
fs
je
push
lret
pop
out
fistpll
clc
push
imul
fiadds
mov
push
jecxz
xchg
mov
and
and
mov
int3
adc
cmp
ret
in
outsl
ret
cwtl
or
mov
xor
hlt
cmp
push
sub
push
push
fstpt
int3
je
mov
lea
sbb
rorl
pop
push
jbe
das
xchg
imul
mov
and
shll
fs
jmp
std
xchg
push
mov
push
sub
pop
add
xchg
mov
rorl
ret
pand
fmull
lods
mov
mov
adc
xor
and
mov
push
test
xor
pop
and
push
jae
scas
in
add
push
in
xchg
xor
cltd
rol
sub
stc
jecxz
mov
add
or
je
jge
ds
mov
fstpl
sub
popl
xor
xor
mov
jmp
mov
mov
push
mov
scas
push
stc
mov
lods
insb
in
dec
aaa
sub
jbe
cmp
data16
sbb
add
cmp
add
ss
rorb
xlat
pop
sbb
jo
cmpl
cmp
add
loopne
xchg
mov
ss
into
jge
add
insl
addr16
in
mov
mov
xchg
mov
mov
bound
icebp
test
cmp
loope
lret
ret
and
inc
xchg
cmp
push
dec
xchg
xor
push
sbb
add
push
mov
push
xor
rcl
sbb
mov
mov
bound
scas
cltd
and
sarb
jbe
and
pusha
mov
iret
xchg
adc
xor
leave
sbb
shll
sub
pop
xor
push
std
std
cs
inc
mov
sahf
push
imulb
in
adc
add
aaa
jp
xlat
ret
and
or
testl
xor
lahf
xchg
pop
addl
testl
jo
pop
sub
jbe
sti
adcb
lds
iret
fnstsw
sarl
and
lds
pop
les
insb
iret
lret
fsubs
cmpsb
negl
add
add
leave
pushf
xchg
push
adc
gs
sbb
dec
rorb
cmp
sub
clc
jne
imul
hlt
out
and
cmpsl
js
lock
add
xchg
xchg
insb
jg
loope
in
ret
mov
cmpb
xchg
add
push
and
xchg
je
gs
adc
xchg
jns
cwtl
or
fchs
dec
int
js
inc
ja
mov
pop
in
lret
and
and
jnp
test
inc
xchg
sub
rorb
shlb
mov
fists
lret
jae
or
add
sbb
ss
dec
mov
mov
lret
fisubl
in
es
pop
stos
jl
mov
mov
inc
out
inc
mov
xchg
test
sub
xor
lods
mov
repnz
mov
push
cmpsb
addr16
inc
imul
xor
cmc
inc
xchg
jno
call
ret
cmp
stos
push
bnd
mov
push
sub
aam
out
div
pop
adc
mov
aad
jb
cld
sarb
std
push
push
dec
dec
ds
pop
test
dec
lret
push
pop
adc
in
or
inc
rclb
scas
adc
adc
lcall
insb
lret
mov
jno
idivl
aad
or
mov
jmp
insb
adc
push
cmp
hlt
jbe
fstl
mov
bound
pop
std
out
fisubrs
shll
and
cmpsb
jle
fstpt
push
daa
inc
xorl
das
shlb
mov
pop
cs
add
jl
fimull
punpckhdq
pop
or
clc
insb
inc
inc
xchg
dec
push
pop
fisttpll
ja
ljmp
mov
mov
insb
dec
call
push
add
mov
push
movsb
icebp
pop
cld
mov
dec
sbb
shll
mov
inc
in
outsl
hlt
cli
sahf
mov
push
dec
test
jg
fcompl
test
xor
sbb
or
xsavec
sbb
popa
fldt
pop
es
sub
xor
dec
aas
stos
mov
xor
sub
jp
notl
stos
add
iret
repnz
sahf
ja
clc
imul
sub
daa
pop
add
sbb
jecxz
xchg
add
mov
adc
push
test
cli
cmpsb
pusha
es
mov
xor
cmp
es
leave
jae
aaa
mov
add
stos
fidivrl
xchg
cli
lea
dec
pop
push
mul
mov
pop
punpckhwd
mov
faddl
hlt
push
fisubrs
jns
and
push
mov
aad
mov
sub
adc
sub
sub
pop
mov
inc
mov
addr16
xor
std
xchg
cmpsb
shlb
es
push
mov
scas
adc
repnz
lret
nop
std
sub
push
aad
pop
xchg
sbb
mov
test
sub
ficompl
outsb
cmp
popf
jbe
pusha
jne
mov
test
sbb
add
add
je
add
and
or
sbb
not
xchg
mov
lock
add
dec
lahf
cltd
lods
cli
adc
push
pop
pop
xchg
xor
dec
rorb
and
xor
sbb
ret
ret
inc
ss
daa
fdivl
sub
pop
pop
lret
xor
fiaddl
in
sub
pushf
and
jb
cmpsl
mov
jne
bnd
push
clc
jle
cmp
outsb
add
test
fsubs
hlt
nop
fisubl
pop
pinsrw
jno
into
mul
push
push
subb
jne
outsb
push
xor
or
and
jb
insl
fldcw
inc
sbb
int3
mov
xchg
scas
and
mov
mov
push
lods
shll
lret
fidivl
mov
mov
or
cmp
lock
fisubrl
cmp
and
cmpsl
inc
sbb
subl
out
dec
test
enter
mov
mov
popf
out
mov
pop
push
push
pusha
push
lcall
mov
mov
inc
pop
xchg
pop
outsl
push
or
sbb
or
dec
dec
inc
pause
ljmp
push
pop
and
fucomip
xchg
jge
mov
les
push
loop
or
sub
fimull
push
loope
aas
jbe
ja
fimull
cltd
cmp
lods
outsl
push
jmp
jbe
sahf
dec
adc
sbb
ror
mov
mov
pop
mov
ss
push
add
les
or
in
dec
cmp
insb
out
das
xchg
jle
int3
stc
xchg
inc
add
xchg
xchg
call
dec
ret
cmp
mov
or
push
mov
push
jae
cmpsb
lcall
mov
jmp
scas
jmp
leave
pop
out
sub
test
lea
lcall
shll
pop
add
test
ljmp
cmp
dec
dec
test
cmp
sbbb
jg
bound
fwait
adc
nop
sbb
xor
imul
xchg
je
popa
jns
icebp
fstpl
mov
mov
mov
mov
std
push
xor
mov
bnd
ja
inc
sarb
dec
pop
aam
lret
cmpsb
arpl
leave
dec
loop
icebp
inc
pop
test
test
pop
mov
sbb
sbb
pop
lret
push
pop
sub
and
xor
mov
shll
test
repnz
or
std
loopne
mov
or
xchg
sti
int
pop
int
mov
leave
mov
imul
out
jbe
out
adc
or
mov
mov
sbb
enter
fs
inc
fwait
in
lock
inc
lods
stc
xor
fcmovbe
cli
iret
ds
lcall
dec
push
push
out
push
outsl
and
out
sbb
mov
insl
dec
push
push
jle
shll
test
cmp
jmp
in
dec
mov
push
cmp
pushf
fadd
cmp
xor
xchg
sahf
sarl
stos
test
mov
adc
push
fnstsw
push
or
test
aad
test
hlt
in
push
jnp
fdivr
add
loop
cmp
xor
cli
lcall
lret
in
pop
mov
add
fsubl
daa
jno
xchg
int3
xchg
mov
in
mov
jmp
mov
fsubrl
cld
aaa
adc
frstor
lods
in
andb
jno
pop
sahf
in
dec
ret
mov
push
mov
mfence
adc
sbb
call
xchg
sti
mov
sbb
mov
push
or
imul
pop
or
mov
dec
nop
push
jmp
mov
dec
mov
aad
mov
in
xchg
nop
ja
adc
aas
xchg
mov
arpl
cmpsb
or
loope
nop
cmpsb
push
filds
mov
mov
movsl
in
mov
sbb
inc
movsl
mov
jne
roll
mov
sbb
leave
push
cli
lret
or
xor
or
arpl
adc
inc
pop
mulb
nop
xchg
jle
xchg
icebp
adc
stc
loope
sub
and
mov
cmp
push
repz
push
idivl
loopne
and
lods
push
dec
enter
shrl
loopne
lds
and
mov
inc
or
xor
loopne
pushf
lock
mov
das
cmp
inc
mov
mov
test
es
repz
push
pop
ficoml
mov
jns
in
testl
inc
inc
ljmp
mov
cmp
jecxz
mov
jge
sub
push
ret
out
je
mov
inc
pop
fidivs
bound
out
xor
in
loop
sub
push
add
insb
jp
push
pusha
aam
push
jo
mov
outsl
jmp
rcrl
dec
cli
xor
add
push
test
mov
mov
cmp
call
mov
or
int3
mov
or
pop
mov
ljmp
out
into
pop
mov
inc
mov
mov
mov
or
pop
or
or
pop
jns
jmp
jl
push
mov
ret
cltd
gs
sbb
pop
and
out
shrb
jns
xchg
jl
push
pop
shll
scas
addl
repz
xor
inc
add
outsl
xor
ret
cwtl
mov
out
enter
shrl
into
nop
cmc
mov
pop
inc
insb
icebp
test
inc
jecxz
mov
dec
push
call
jge
int3
fiaddl
movl
jno
and
pushl
sbb
sub
jp
jg
lcall
xchg
pop
mov
int
dec
daa
or
ror
push
sbb
mov
pop
jbe
push
and
ret
xor
sbb
clc
idivb
rcll
and
add
cwtl
fcomps
lock
cmc
xrelease
xlat
clc
fwait
arpl
sbb
push
pop
xor
adc
cmpb
add
cld
pop
xor
movl
out
pop
je
cmp
clc
jnp
lret
repnz
xchg
mov
or
or
les
cli
loop
mov
test
lds
into
jbe
stos
sbb
ss
sub
imul
sahf
and
cmp
xchg
shr
mov
push
dec
stos
xchg
mov
inc
incl
pop
jecxz
std
jmp
fidivrs
jp
pop
mov
in
sub
mov
rcr
stc
popf
mov
adc
ja
sub
xchg
pop
xor
lea
push
xchg
fsts
push
push
mov
xor
dec
mov
ror
les
push
sbb
sub
dec
push
or
ds
stos
fcmovnu
cmp
add
sahf
and
data16
ja
arpl
gs
sbb
dec
movsl
out
pop
lret
pushf
dec
pusha
ret
sbb
dec
push
adc
pop
enter
jg
bound
insb
mov
sbb
xchg
mov
nop
aad
cmpsl
popa
cmp
sbb
mov
loopne
lret
mov
pusha
dec
dec
loop
jns,pn
adc
scas
jns
jno
cmp
aam
ds
sti
repz
insb
mov
mov
push
push
mull
data16
lahf
movsb
negl
xlat
mov
pop
lock
bound
push
sub
mov
or
outsb
push
fs
clc
pop
or
xchg
lahf
mov
js
or
push
lcall
cmpsb
call
add
mov
cmc
or
mov
mov
popf
in
add
push
jp
clc
es
fwait
lcall
cmp
icebp
ljmp
lahf
sub
adc
cmp
in
sbb
adc
pop
decb
inc
lods
aam
std
incl
inc
jns
fcompl
adc
fdivrl
jle
add
adc
loopne
sbb
jbe
loopne
push
or
out
aam
sti
int3
mov
scas
lahf
or
inc
jbe
mov
add
sbb
sub
nop
pop
sub
stc
sbb
bndstx
ret
in
or
or
mov
push
out
aaa
aad
cs
dec
xor
dec
popa
push
in
cld
aam
icebp
push
fstpl
testb
lds
and
out
pusha
pop
adc
mov
xchg
out
popf
mov
in
pop
sahf
inc
stc
into
mov
pop
cmp
repnz
jnp
inc
dec
mov
add
xchg
mov
dec
cmp
cmp
jo
push
xchg
mov
or
cmpsl
adcb
push
ja
inc
aas
stc
jo
daa
inc
push
push
inc
cld
fmuls
mov
xor
sbb
loope
push
cmpsl
dec
push
mulb
lds
push
das
aaa
subb
mov
add
out
mov
mov
jns
push
mov
jecxz
rclb
insl
adc
xor
xor
push
icebp
xlat
push
inc
lret
mov
pop
dec
into
jns
aas
aam
cmpb
mov
aad
pop
into
push
movsb
adc
scas
push
in
inc
lods
lods
dec
mov
jnp
sahf
dec
add
mov
cmp
and
pop
mov
sbb
add
daa
push
pusha
out
movsb
xor
jmp
xor
aaa
enter
jge
call
xlat
adc
cmpsl
ret
jle
mov
das
jno
repnz
inc
sub
pop
pop
ds
clc
xor
insl
jne
loop
mov
pop
stc
lods
inc
repz
in
std
fndisi(8087
aam
fldl2e
movsb
inc
add
dec
cltd
xchg
mov
mov
cmp
in
xor
xchg
xchg
push
fwait
dec
pop
mov
cltd
pop
add
pop
and
or
fisubs
sahf
loopne
loope
roll
push
mov
xchg
fs
cmp
pusha
mov
stos
scas
jno
sub
jno
jmp
jmp
popa
pop
mov
jo
lret
or
inc
inc
movsb
ljmp
and
xlat
sub
cmp
sbb
call
push
pusha
push
lahf
jns
mov
and
aas
das
sar
inc
fisttps
sub
or
mov
rolb
pop
lods
xchg
inc
sbb
mov
jg
cli
or
lds
inc
ss
mov
mov
cld
mov
cmpb
xchg
xor
xor
xor
ret
sahf
cld
call
lods
stos
xchg
mov
pop
mov
lods
inc
push
stc
repnz
dec
and
lret
lods
push
lea
aad
iret
adc
lret
xchg
pusha
cmpsl
loope
addr16
popl
pop
popl
js
mov
dec
mov
imull
jae
ja
jae
fmull
movsb
fwait
cltd
cmp
xor
mov
push
subb
push
adc
push
fistl
xchg
inc
pop
jl
pop
pop
push
push
inc
mov
inc
mov
mov
push
js
mov
pop
adc
push
or
mov
in
mov
popa
adc
xor
and
mov
stos
adc
js
pop
insl
out
push
je
setnp
xchg
cltd
sbb
jbe
or
insb
mov
cwtl
imul
pop
test
jg
jl
insb
aad
fcoml
dec
lea
mov
and
mov
insb
mov
js
daa
shl
iret
and
sbb
pop
inc
insl
jo
xor
or
xchg
mov
sarl
ljmpw
movb
inc
xor
adc
add
jecxz
aad
dec
jg
outsl
or
pop
and
adc
mov
cmp
inc
ds
jbe
jbe
mov
or
imul
fucomi
sub
leave
adc
cld
fisubs
fsubl
movsl
bound
stos
pop
push
inc
mov
addl
pop
and
stos
inc
mov
jl
jae
dec
clc
or
out
clc
add
and
ret
sub
add
sbb
outsl
jb
dec
out
xor
jle
push
pop
pop
rol
pusha
arpl
add
xchg
cmpsb
xor
les
cli
mov
ja
mov
test
xor
mov
adc
lock
push
jb
xor
fs
loop
outsl
xor
in
push
jp
pop
aam
incb
dec
xor
in
fdivrl
sarl
add
dec
fsubr
fwait
inc
cmp
insl
push
and
push
sbb
dec
insb
jne
ret
mov
loop
insl
pop
sbb
and
out
dec
sub
lret
test
lock
cmpsb
cli
sbb
out
or
mov
call
push
fnsave
cmp
in
outsl
xchg
andb
sbb
xchg
xor
cmp
xor
push
outsb
or
iret
addr16
cmp
sub
ljmp
scas
je
jns
cmp
cmp
push
xchg
test
inc
push
in
fiaddl
inc
shlb
orl
mov
iret
pushf
mov
je
dec
leave
or
adc
popf
lret
inc
cld
fprem
and
leave
shl
loop
mov
sbb
ja
lods
imul
negb
movsl
pop
popa
mov
mov
push
mov
mov
jae
xchg
adc
mov
xor
lcall
cld
push
stos
pop
jb
fs
jmp
dec
out
out
mov
call
jl
icebp
subl
lcall
mov
icebp
xlat
mov
pop
movsb
stos
cmp
mov
lret
das
mov
ficoml
sub
test
incl
inc
mov
js
cmp
pop
pop
ficompl
or
arpl
loop
scas
sub
stos
and
push
dec
mov
mov
imul
lock
leave
jmp
cmp
mov
subb
ret
jp
and
fisttps
pop
dec
cmpxchg
inc
cmp
test
ds
dec
mov
fsubp
xchg
jnp
sarb
xchg
pop
xchg
std
lahf
add
mov
and
daa
dec
sbb
mov
xchg
push
mov
mov
add
cs
les
imul
fiaddl
pop
js
pop
xchg
xchg
int
or
in
insl
lods
int3
pop
xor
ja
in
sbb
int
aas
mov
lock
sub
xchg
add
mov
ret
cmp
jb
roll
pop
cmpsb
bound
pop
jg
out
lods
inc
push
xchg
sub
sahf
aas
dec
mov
or
cmp
lret
outsb
push
ja
fstps
roll
das
cli
imul
xchg
ret
or
pushf
ja,pn
mov
sti
cmp
xchg
bound
pop
sub
dec
mov
movsl
cli
push
adc
cwtl
inc
movntps
adc
xor
mov
xchg
xchg
lret
pop
les
sbb
pop
in
cmp
push
repnz
mov
dec
ss
sbbb
dec
and
orl
gs
mov
aam
sahf
stos
adc
mov
mov
addb
jge
xor
imul
mov
test
xchg
in
cmc
bound
or
addl
aas
add
cmp
nop
mov
es
fisttps
xlat
mov
cltd
pop
pop
je
jl
jnp
test
mov
inc
outsl
repz
cmp
stos
cmpsb
movsb
cmp
dec
or
in
mov
sbb
xchg
ja
or
out
add
insl
inc
xor
adcb
aam
jp
dec
lds
pop
sarl
jg
incb
enter
xchg
push
ficoms
push
insb
negb
push
mov
insl
lods
xchg
fstpl
lret
in
pop
mov
jl
jmp
ja
xor
mov
iret
cwtl
add
ror
sbb
jl
push
or
icebp
add
mov
test
jp
stos
iret
imul
mov
lret
rorl
push
inc
clc
dec
insl
mov
hlt
pop
inc
inc
and
and
push
mov
add
or
xlat
or
mov
jl
lock
fidivrs
mov
ljmp
rorl
and
push
sbb
test
or
div
jne
push
in
xor
mov
pop
insl
rcll
test
jbe
aam
or
mov
adc
mov
out
xor
repnz
lea
in
fistpll
insl
push
and
int3
push
sti
fstl
loopne
xchg
imul
pop
and
push
pop
mov
or
leave
sbb
sbb
xor
data16
icebp
push
adc
out
mov
jns
mov
jle
adc
hlt
add
mov
xor
rcr
add
jb
adc
adc
in
adc
cs
test
jnp
ds
mov
shrb
sub
roll
addr16
outsb
cmp
mov
cmc
pop
in
stos
jne
push
mov
leave
leave
mov
inc
pop
dec
inc
push
sahf
fwait
das
sbb
loop
xor
lret
out
adc
iret
test
out
add
sub
or
jbe
jb
cmp
scas
imul
out
pusha
scas
or
xchg
inc
addl
mov
out
pop
pushf
testl
mov
nop
mov
pop
outsb
and
xchg
mov
sub
scas
loope
mov
in
jns,pt
ja
mov
add
sub
rcll
repz
ror
out
cmp
mov
dec
push
mov
pushf
mov
mov
jmp
xchg
add
add
mov
cltd
pop
and
or
adc
jl
scas
inc
fimull
cmp
jae
outsl
dec
mov
mov
shl
mov
fdivrl
loop
jmp
inc
fs
mov
mov
xor
je
xor
mov
xchg
and
sub
inc
cmp
cltd
sub
and
shrb
jae
push
fwait
int3
mov
xchg
das
inc
ja
push
rcll
ret
scas
or
mov
aam
add
and
add
div
ja
lods
dec
pop
lcall
je
pop
pushf
aad
sub
movsb
inc
and
sub
or
sarl
mov
pop
out
dec
cwtl
mov
int3
je
add
jne
xchg
adc
jmp
mov
cmpsl
into
pop
stos
inc
or
or
inc
dec
out
add
push
lret
sub
fmulp
dec
enter
sub
enter
iret
mov
loop
jo
inc
std
scas
inc
mov
outsl
hlt
lods
jl
push
mov
xor
pop
dec
xchg
jle
sbb
rcrb
daa
pop
sub
loopne
icebp
fwait
lods
sbb
das
jge
push
xchg
daa
pop
jp
aad
adc
je
jo
inc
and
dec
imul
lahf
xorl
negb
stos
xchg
and
dec
add
shrb
das
push
cwtl
mov
push
je
dec
test
aam
sti
mov
daa
mov
pop
xor
aad
insl
jl
test
mov
in
mov
adc
in
pop
clc
jne
stos
inc
cwtl
fcomp
pop
aam
or
stos
inc
imulb
enter
out
int
fildll
add
or
xor
or
in
orl
and
push
nop
mov
fwait
test
jge
xor
and
push
pop
mov
adc
mov
incb
jo
dec
icebp
mov
fbld
ret
inc
jne
ss
push
mov
xorb
cwtl
mov
repz
sbb
enter
dec
pop
cmpsb
dec
mov
inc
sub
jae
ror
cmc
and
rorb
sub
adc
lcall
xchg
pop
stos
je
pop
out
hlt
outsb
imul
lock
xchg
jge
arpl
into
jnp
cmpsl
lret
fsubp
and
mov
inc
mov
xchg
fs
push
psubw
xchg
aad
lret
sbb
clc
ljmp
jmp
enter
push
pop
push
jb
mov
push
fsubl
test
in
push
jle
pop
lods
outsb
xchg
gs
inc
mov
sbb
arpl
les
xchg
rclb
loop
mov
jbe
jno
xchg
jge
xchg
sbb
mov
cmp
sti
je
ljmp
cs
test
add
mov
sub
xchg
pop
lcall
xor
pop
jmp
insl
and
int
mov
loopne
push
xchg
stos
popf
insl
out
mov
nop
cltd
fistpl
jae
push
push
inc
insl
fldcw
in
testl
dec
insl
cmpsb
es
jnp
mov
and
mov
or
fwait
aad
stos
push
add
shlb
imul
cmpsl
dec
div
enter
jmp
stos
inc
cmpl
movsl
jns
mov
arpl
mov
lock
mov
cld
pop
movsb
adc
ljmp
call
setge
xor
xlat
lcall
sti
xchg
js
or
push
imul
leave
sarl
and
std
rolb
into
shll
cmp
xor
or
nop
shr
push
sarb
pop
jae
jl
loop
arpl
mov
cmpsl
fmuls
std
aam
push
mov
ja
dec
pop
loopne
cwtl
mov
push
mov
xchg
pop
mov
pop
mov
add
sbb
pusha
ljmp
sbb
rcrl
imul
adc
sub
dec
lods
mov
clc
mov
and
cmpsl
lds
into
sti
cmp
incb
sub
arpl
push
outsb
dec
test
pop
aad
mov
mov
pop
push
inc
mov
shrb
or
xor
je
or
inc
rorb
pop
push
push
repz
ds
xchg
mov
jl
jge
pop
rcrl
out
int
push
jbe
add
push
jno
icebp
aad
insl
lret
mov
inc
mov
push
outsb
ret
stos
push
xorb
pop
cmp
push
or
leave
mov
or
jae
cltd
mov
mov
and
lahf
xchg
adc
jg
xor
mov
cmp
lahf
push
out
jns
sub
jmp
popf
sarl
loop
jno
sbb
sub
dec
stos
cmpsb
jmp
fistpl
std
shl
mov
and
dec
mov
xor
cmp
jae
enter
jp
sysenter
inc
mov
les
addb
arpl
mov
popa
fcmovbe
or
out
movsl
mov
pop
mov
rclb
mov
push
movl
xchg
dec
loope
aam
nop
pop
sarb
aas
int3
rcrb
fsubrl
mov
jmp
mov
jmp
xchg
mov
jbe
mov
std
bound
mov
sbb
std
repz
arpl
jmp
aad
push
jg
or
icebp
test
and
shll
xor
out
sub
pop
jb
jne
mov
dec
mov
fistl
xchg
outsl
xchg
arpl
xchg
outsb
lahf
or
out
sub
roll
mov
lock
lea
push
push
xchg
pop
icebp
add
mov
adc
adc
loope
cmp
test
jg
push
es
pavgw
mov
cmp
dec
insl
and
in
std
mov
call
out
and
pop
xchg
and
xchg
fsubl
scas
imul
pop
xrelease
insb
sub
rorl
cmp
repnz
fbld
mov
call
mov
lret
jmp
jns
sub
lahf
mov
mov
jmp
mov
lock
shlb
cmp
jg
ret
jmp
jnp
inc
jb
lahf
ljmp
mov
divb
inc
pusha
sbb
and
sub
jbe
cwtl
out
push
cld
pop
mov
jns
mov
cmpb
outsl
push
popl
inc
adc
inc
mov
adc
adc
jle
fdivrl
jge
movsb
adc
sti
xchg
xor
inc
mov
push
stc
jle
push
stc
cmpb
mov
gs
std
and
out
mov
pop
inc
pop
dec
sub
sti
jl
movsb
sub
test
xchg
aaa
lock
dec
cmp
jbe
jns
fwait
cmpsb
lds
mov
pop
add
fstl
mov
push
fwait
out
enter
pop
jbe
addr16
sub
sub
push
jmp
js
add
enter
or
jb
jns
addr16
push
lods
add
add
sbb
mov
arpl
wrmsr
cmc
jmp
into
or
xor
fs
sub
xchg
wrmsr
mov
mov
insl
test
jmp
push
mov
enter
jecxz
test
inc
je
aas
fimull
cs
ja
mov
add
fstps
in
push
divl
cmpsb
icebp
pop
fucomi
inc
popa
xchg
iret
dec
out
icebp
sbb
push
outsl
or
lods
lahf
xor
subl
ss
mov
sbb
arpl
cmc
cmc
mov
mov
repz
repz
fcomip
popf
cs
cli
fwait
iret
leave
cmpb
and
inc
data16
push
lret
cmc
mov
out
push
shrb
dec
sub
test
sti
int3
notl
xchg
ret
mov
insb
and
pop
cmpsb
frstor
pop
in
pop
xchg
xchg
in
aad
push
push
and
out
sub
mov
dec
rclb
cmp
test
xor
fistps
sbb
fldcw
fstps
std
mov
sbbl
ss
and
loope
sub
xchg
mov
sbb
inc
and
dec
mov
sbb
add
add
adc
repz
mov
sti
aad
leave
out
pop
jnp
xchg
ja
add
loopne
pop
adc
lahf
dec
insb
mov
iret
sub
jge
data16
sbb
jmp
gs
call
sbb
jo
mov
jne
mov
xor
dec
xchg
popa
xor
mov
lret
mov
mov
test
pop
fwait
sbb
aaa
pop
xlat
dec
jae
ljmp
aad
lret
fldcw
or
push
pop
das
pop
rcl
push
jae
jp
xchg
adc
sbb
sbb
lcall
iret
pop
outsl
leave
sbb
sbb
mov
ljmp
scas
dec
dec
push
in
int3
cmpsb
scas
popf
and
enter
gs
or
pop
movsb
int
popw
out
xchg
loopne
repz
mov
outsl
sub
subl
push
and
xchg
ljmp
dec
icebp
movsl
repnz
fidivrs
out
jns
sub
add
ret
fdivl
into
xlat
jae
dec
adc
xor
lods
xchg
xchg
aaa
ffreep
sbb
dec
mov
int
xor
sub
inc
push
mov
rorb
lret
adc
push
jge
mov
lcall
cmp
sub
jmp
sbb
bnd
sbb
shll
daa
or
jnp
xchg
popf
cmp
testl
mov
jnp
adc
sbb
jecxz
mov
cmp
jp
pop
push
sub
cli
shrl
popl
push
jno
push
out
dec
mov
xchg
xor
jmp
mov
and
loop
rcrl
or
and
out
cs
adc
inc
loopne
mov
add
mov
cmp
mov
jnp
lahf
xchg
xor
cli
xchg
sbb
fnstsw
mov
pop
into
mov
push
push
xchg
inc
push
jmp
sti
ret
insb
xchg
ja
lret
nop
mov
and
add
cmpsl
mov
into
loope
inc
insl
sar
mov
pop
in
dec
and
movsb
mov
jbe
jp
lret
mov
inc
add
mov
mov
xor
hlt
mov
jmp
pusha
stc
popf
test
fld
sub
sarb
and
cld
pop
jl
scas
fnsave
mov
in
lahf
cwtl
pusha
xchg
inc
pop
test
push
xchg
push
pusha
jl
into
lock
push
cs
pop
xor
repnz
mov
arpl
inc
lcall
cmp
and
addr16
mov
in
inc
cmp
icebp
pop
push
sub
hlt
and
jae
fdivrp
rorb
mov
lret
mov
add
out
xor
mov
or
ret
es
add
inc
jp
shrl
ljmp
add
ss
out
jmp
scas
xor
xor
push
movsl
sbb
int3
into
xchg
insl
dec
push
pop
fcmovu
leave
pushf
inc
cmp
inc
cmp
mov
movsl
les
rcrb
loopne
sbb
rcl
das
mov
call
xchg
lahf
fldt
xchg
cli
sbb
popa
arpl
ds
and
incb
sub
out
cmc
lret
in
mov
idiv
mov
jo
inc
icebp
mov
sub
dec
fisubrl
repz
sahf
call
ret
in
mov
mov
xor
mov
in
loope
jno
sub
xor
sbb
add
andb
insl
mov
fildl
xor
into
cltd
das
sbb
pop
dec
or
inc
pop
roll
scas
out
fdivr
mov
or
push
out
dec
movsl
icebp
mov
jmp
ljmp
sbb
repnz
mov
mov
push
ljmp
stos
pop
add
and
popf
push
subl
in
nop
pop
and
lret
xorb
xor
int3
scas
push
lods
sub
sbb
jecxz
stos
pop
adc
out
mov
orl
mov
imul
adc
icebp
fs
jmp
scas
dec
mov
push
ja
test
mov
daa
int
js
inc
push
fimuls
bound
cli
jp
mov
in
cli
or
jg
stos
push
dec
int3
in
xchg
js
mov
in
xchg
ret
mov
sbb
rorl
push
jb
mov
add
divb
scas
add
jmp
stos
fstps
inc
push
lcall
inc
adc
adc
jae
aas
push
sbb
xor
mov
inc
inc
push
mov
gs
add
or
lods
rorl
fiadds
push
mov
dec
sbb
dec
or
stos
hlt
fs
push
dec
dec
mov
orb
shrb
std
faddp
mov
jo
repnz
sahf
mov
xchg
fs
xchg
arpl
jmp
mov
mov
xor
cmp
cmp
les
mov
inc
mov
es
and
push
inc
mov
gs
or
adc
lahf
imul
pop
outsl
fwait
push
fdivl
adc
imul
ret
mov
mov
orl
outsb
xchg
cwtl
movsb
xchg
cmc
mov
test
test
jmp
rcll
xchg
in
cmp
in
imul
mov
cwtl
and
jno
dec
inc
xor
sub
daa
movl
jp
cmp
and
aam
andl
andb
dec
leave
loope
xlat
cmp
shr
in
ret
sub
ljmp
and
hlt
int
add
lds
xchg
pop
aaa
xor
outsb
rolb
loop
mov
es
xchg
cmp
shl
in
add
or
lret
or
dec
fmuls
enter
jbe
test
push
nop
sub
loop
push
pop
test
jle
xchg
jnp
xchg
scas
or
stos
adc
mov
and
sub
mov
lds
jnp
les
imul
insl
idivl
dec
ret
xchg
sahf
out
std
cltd
test
mov
mov
jno
pop
pop
movb
xchg
mov
xor
pop
sbb
test
movsl
and
adc
aas
add
mov
mov
mov
and
add
dec
jg
into
shl
ret
data16
cmc
xchg
sub
adc
nop
shll
enter
fiaddl
pop
fsubr
in
or
jb
adc
xor
pop
mov
pop
add
rcll
test
xor
ja
sbb
fs
repnz
stos
xchg
lds
sti
pop
in
dec
dec
inc
rol
in
mov
cli
in
pop
cmp
popf
fldpi
js
inc
out
xchg
jp
out
lret
inc
gs
jnp
shlb
nop
aam
sub
mov
jo
jp
xchg
ja
repz
sub
clc
add
rol
jo
pop
daa
cmp
sub
ss
test
push
push
neg
inc
ss
notb
jne
pushf
imul
jg
jmp
cs
lahf
inc
daa
rcr
call
xchg
xchg
loope
add
mov
lret
stos
loope
push
push
decb
sub
inc
imul
inc
jmp
fldcw
int
cmpsl
in
pop
lcall
pop
fstp
adc
sbb
pop
xor
xchg
in
xlat
ss
aaa
inc
aas
movsb
xor
dec
sbb
shll
pushf
xor
sti
out
fs
mov
mov
xlat
loopne
push
clc
les
lahf
pop
loop
dec
add
sub
add
fistl
cmp
es
jnp
adc
mov
pushf
mov
jno
push
add
jbe
jb
arpl
sbb
or
aas
add
cmpsl
int3
in
daa
inc
mov
jp
mov
push
int3
xorb
loopne
cmp
popa
adc
push
or
lds
or
outsl
clc
sbb
jno
rcrb
clc
stos
mov
aad
in
inc
mov
push
std
jle
add
sbb
mov
enter
cltd
in
jl
loop
inc
add
clc
jmp
sbb
jp
call
stc
cmp
fstp
jmp
push
mov
fldcw
pop
mov
sbb
xchg
cld
insb
je
jbe
les
mov
addl
push
jmp
or
nop
cmpsl
fildl
jge
mov
xor
sarb
mov
lds
cmpsl
xlat
cmp
pop
xchg
testb
xchg
sti
mov
add
cmp
push
or
pushl
sbb
pop
enter
mov
bswap
sbbb
es
xchg
jp
mov
das
fstl
loopne
ljmp
mov
in
sub
mov
mov
notb
lods
push
or
cld
jmp
pop
rorl
inc
dec
pop
movsb
bound
mov
shl
repnz
push
push
andl
sub
test
repnz
push
pop
in
push
inc
inc
jae
int3
cmp
cmp
pop
sahf
jp
outsb
mov
mov
ficoms
or
dec
mov
sbb
int3
mov
adc
inc
in
xor
jp
imul
add
mov
aaa
test
int3
ret
stos
dec
or
sbb
jmp
mov
gs
mov
lcall
jb
cmpsl
aad
aaa
mov
rol
ss
cmpsl
and
push
lahf
cltd
rcl
jbe
jnp
dec
ret
add
insb
xchg
push
mov
xchg
cmpsl
mov
data16
pop
lret
js
and
mov
push
xchg
ja
mov
aaa
add
mov
sbb
mov
daa
cmp
push
scas
in
test
sub
push
inc
push
pop
sbb
lret
fisttpll
mov
mov
or
sbb
gs
xor
mov
xchg
cmp
lods
inc
daa
push
cmpsb
aaa
cltd
iret
jp
lcall
sub
andl
lcall
xchg
pop
mov
loop
bound
popa
sarb
fstps
aad
repz
push
push
sbb
mov
xchg
mov
lds
es
mov
sbbb
sub
int3
mov
arpl
gs
push
add
jecxz
mov
push
clc
or
dec
lahf
outsl
adc
push
pop
sub
pop
add
mov
rsqrtps
pop
hlt
xor
xchg
pslld
in
fwait
jb
loope
mov
add
jg
repz
sub
mov
push
fiaddl
pop
add
xchg
in
pop
adc
or
adc
inc
out
xor
shlb
xchg
cmpl
adc
jbe
leave
fldl
push
out
push
mov
rcrb
ja
sub
lds
cmp
pop
cmpsl
push
mov
stos
xchg
and
sbb
or
stos
sbb
xor
pop
ljmp
movl
test
outsl
or
or
mov
icebp
mov
fwait
cmpb
inc
scas
xchg
fildl
bound
ret
pop
push
lea
mov
sti
test
test
dec
push
subl
daa
or
push
std
and
ret
xor
inc
pop
xchg
sub
jecxz
aaa
xor
jmp
test
icebp
loope
gs
push
cmp
lret
inc
dec
frstpm(287
push
sub
es
mov
mov
inc
push
jecxz
push
dec
inc
xor
out
insl
mov
xchg
addb
xchg
jnp
icebp
sub
ret
inc
rorl
mov
fcompl
ficoml
mov
add
je
lds
push
mov
shll
push
bound
jmp
idiv
outsb
push
cmpb
inc
xchg
clc
add
mov
and
test
mov
daa
jl
out
cmpsl
pop
out
hlt
add
mov
add
fisubrl
cmpl
mov
insb
movsb
mov
fwait
push
or
into
pushf
mov
cmp
fwait
adc
es
daa
lock
mov
pop
mov
mov
jp
mov
push
popf
loopne
push
shrl
std
or
rcrl
jecxz
shrb
cmp
xchg
adc
aad
sbb
or
ret
add
sbb
inc
or
inc
xor
add
lods
jle
call
sub
pop
int
dec
mov
into
in
cmp
xchg
das
pop
lret
cmpsl
jmp
stos
sahf
xchg
jo
je
jmp
mov
fmuls
and
les
dec
or
loopne
sbb
daa
jmp
loopne
mov
stos
shll
push
insl
ret
rorl
dec
jecxz
int3
inc
popf
cmp
xlat
loope
mov
adc
push
sub
inc
fwait
lcall
mov
jmp
sub
in
mov
out
or
add
lods
mov
movsl
xor
sub
pop
xchg
insl
pop
cmp
xor
outsb
aad
insl
and
ret
adc
push
das
cmp
test
outsb
sub
mov
popa
incb
jbe
jmp
in
clc
lahf
icebp
xchg
ficoms
loope
stos
int3
push
call
mov
pop
fbld
xchg
popa
inc
cmp
cwtl
mov
lahf
dec
mov
popf
pushf
enter
es
xor
inc
push
outsl
jecxz
push
jecxz
icebp
jmp
push
cmpsl
leave
mov
mov
js
divl
popf
ret
cmpl
test
mov
or
cld
cmp
adc
sub
jb
cmpsb
sbbb
imul
push
push
aas
xchg
sbb
movsl
pmaxub
cmp
and
pop
bound
jge
jbe
repnz
sbb
push
add
push
imul
add
sbb
mov
jg
add
je
ljmp
outsl
repz
cmp
xchg
xchg
cmp
pop
sub
lret
lock
dec
add
lret
aas
inc
mov
das
push
mov
dec
xor
mov
mov
or
movsb
adc
cmp
aam
jae
sbb
data16
out
jbe
jl
xchg
xor
xor
pushf
pop
push
xchg
movsl
imul
not
pop
mov
mov
xchg
in
imull
fdivl
inc
and
push
repz
cli
dec
mov
lods
mov
rorl
scas
pop
fbstp
stc
imul
ljmp
and
nop
divl
mov
stos
pushf
lahf
daa
scas
lods
into
xor
clc
lret
jne
add
push
sbb
jne
pop
dec
adc
dec
xor
jp
fimuls
fstpt
sahf
jmp
mov
push
mov
daa
pop
add
jno
inc
push
adc
cs
cli
xchg
push
push
aad
mov
dec
or
xorl
dec
fidivs
add
add
or
stc
sbb
mov
jl
gs
shlb
sub
int3
stos
rorl
lea
jmp
js
in
sbb
mov
pop
and
call
or
xor
jbe
into
mov
pop
clc
int3
mov
adc
adc
mov
and
mov
scas
lcall
cmp
scas
into
jl
jg
pop
aaa
dec
sub
adc
dec
insb
ret
out
push
push
pop
xchg
testb
int
das
nop
fidivrl
das
cmp
pop
loop
mov
jl
call
nop
test
mov
sub
pusha
stos
xor
cmp
adc
in
scas
mov
mov
jmp
lods
adc
jp
or
jae
out
rorl
push
rcr
add
mov
fwait
mov
inc
dec
mov
frstor
adc
push
xchg
pusha
repnz
lcall
int
jne
adc
xor
movsb
pop
or
ja
xchg
ja
pop
mov
out
or
outsw
shll
leave
mov
jmp
nop
mull
and
pop
test
aam
test
push
jle
outsl
mov
dec
xlat
push
sar
pop
repz
addl
inc
test
mov
outsb
je
sbb
push
push
lahf
dec
out
imul
orl
lods
xchg
add
add
push
fwait
sbb
in
mov
fwait
les
js
or
or
pusha
adc
xchg
int
xchg
pop
insl
insl
leave
cld
jge
out
inc
mov
pop
or
jge
add
adc
sub
gs
nop
xor
mov
mov
pop
lock
mov
daa
xor
insl
nop
imulb
divb
and
shrb
jne
push
daa
jecxz
iret
sub
jb
fs
popw
pop
xchg
pop
dec
loopne
shlb
sbb
fdivrs
mov
mov
pop
push
outsb
rcl
mov
push
add
loope
lret
inc
in
in
daa
sub
mov
dec
lcall
lock
push
push
test
test
nop
test
inc
rorl
and
stos
pop
fiaddl
ljmp
sub
cmpsl
call
ret
mov
cmp
lret
jno
call
add
outsl
data16
sbb
add
push
or
pop
shl
xor
add
cli
cmpsb
fwait
mov
insl
inc
lret
cmpsl
jmp
aas
cltd
sbb
jmp
fistl
clc
jmp
in
aas
xchg
push
inc
mov
cmpsl
pop
mov
and
mov
push
pop
jb
sbb
mov
mov
outsb
cmpsb
pop
icebp
add
pop
decb
inc
hlt
shrb
cmp
fstps
arpl
dec
addb
xchg
sub
adc
imul
in
dec
aas
les
inc
xor
xchg
test
sti
xchg
sub
pusha
stos
leave
in
rcrl
ljmp
sbb
xor
lds
and
test
adc
scas
std
pop
cmp
popa
cltd
lahf
pop
insl
mov
lahf
shlb
je
inc
js
push
push
xchg
call
mov
inc
cmp
xchg
jnp
inc
mov
push
outsb
mov
sbb
in
dec
xor
std
mov
das
xor
cmp
movsl
cmpsb
mov
nop
and
fbstp
jge
addl
push
mov
shrb
ja
mov
sbb
or
popa
leave
pushf
mov
sub
or
icebp
push
imul
popfw
mov
das
movups
mov
lds
stos
loop
and
je
and
add
mov
sbb
dec
and
in
and
add
xlat
cltd
jnp
cli
adc
jl
mov
inc
cli
es
enter
mov
bound
pop
and
iret
mov
and
jl
xlat
mov
xchg
aad
int
jbe
mov
and
xchg
inc
loop
cmpsl
int
pop
xor
jne
inc
loope
rclb
or
sub
in
xchg
add
std
xchg
lods
mov
push
fwait
in
cld
mov
add
lea
dec
out
or
sbb
fadds
rcrl
pushf
sar
lahf
xchg
sbb
mov
xor
dec
cmpsb
xor
jmp
lods
popf
lods
inc
dec
cmc
push
xor
cmpsb
lea
mov
pop
into
adc
xchg
adc
lcall
or
dec
in
in
stos
inc
jnp
lock
adc
inc
das
push
xor
fsubs
aaa
jbe
mov
das
adc
pop
call
xchg
xchg
or
xchg
xchg
or
std
sbb
outsb
pop
out
enter
ljmp
push
mov
or
xchg
mov
fcmovbe
cmp
cwtl
inc
adc
fidivl
hlt
mov
jb
mov
lahf
dec
jns,pn
push
inc
dec
cwtl
xchg
test
cltd
xchg
stos
sbb
insl
ss
shr
les
enter
push
stc
cmpl
push
pop
mov
imul
ret
sahf
sbbl
xchg
aaa
push
test
mov
jp
and
mov
pop
or
insb
adc
fcoml
dec
ss
xlat
loope
jmp
arpl
pop
fwait
mov
movsl
das
mov
mov
dec
lds
jge
jo
adc
jmp
sti
repz
pop
sub
lret
orb
je
test
push
loope
cmpsb
pop
push
popf
jno
cld
or
filds
arpl
sahf
jecxz
out
adc
mov
dec
cmp
fcompp
test
inc
push
push
leave
dec
push
xchg
push
mov
adc
jnp
fcmovnb
in
cmp
std
out
in
int3
aas
and
mov
test
ret
rcr
mov
test
test
imul
mov
and
xor
sbb
push
repnz
add
clc
fbstp
mov
enter
out
call
inc
popf
pop
aam
fcomp
in
out
mov
stc
mov
dec
inc
and
jge
cmpsb
imul
sbbl
mov
popa
arpl
daa
push
imull
sarb
adc
inc
fidivs
adc
out
dec
dec
mov
out
inc
adc
roll
mov
loope
enter
aas
jo
sahf
leave
hlt
sub
jbe
adc
out
ja
mov
mov
xor
push
ja
pop
test
movsl
xchg
std
cmp
cmp
loope
dec
adc
xor
pop
jo
jbe
adc
xchg
inc
dec
mov
mov
shrb
mov
cmp
xor
or
and
pop
add
or
lds
xchg
sub
ljmp
xchg
ds
pusha
fnsave
lahf
ret
push
adc
mov
jecxz
pop
out
bound
mov
fs
into
hlt
pusha
scas
shrb
dec
inc
xor
les
test
insl
mov
int3
inc
adc
add
lea
push
stos
jo
cwtl
push
icebp
out
fidivl
lock
sbb
lods
push
in
insl
lret
das
adc
mov
jmp
mov
out
addr16
sbb
pop
mov
mov
sbb
cmpl
cld
jae
mov
jmp
cwtl
mov
mov
std
cmp
inc
jmp
and
jne
inc
movsb
xchg
jae
mov
sub
cwtl
js
dec
mov
inc
and
jae
arpl
pop
pushf
adc
xchg
jns
xchg
jg
ss
nop
pop
jg
push
ror
data16
inc
jl
sbb
test
mov
jmp
sub
inc
stos
sarb
fs
jp
mov
xchg
add
jo
aad
pop
lock
mov
push
inc
pop
ret
icebp
and
pop
jp
cs
daa
adc
leave
mov
sbb
clc
int3
sub
out
pop
jne
imul
cmp
or
xchg
cmp
pushf
pop
out
and
cmc
ljmp
dec
in
xchg
fsts
xor
xchg
jp
dec
test
roll
mov
aaa
jl
scas
lret
jmp
in
xchg
out
and
mov
movsb
mov
std
mov
cmpl
cmp
lock
mov
out
aaa
in
js
iret
ffree
add
clc
nop
cli
scas
push
and
andl
into
xlat
incb
shll
lds
int3
ja
ficomps
add
int3
repnz
adc
xor
xchg
out
jg
xor
xor
or
push
xchg
lahf
xlat
decb
xor
movsb
jb
outsl
xor
mov
sub
pop
pop
mov
cmp
xchg
xor
int
and
shll
pop
ficoms
fcompl
in
nop
call
inc
xchg
jl
dec
dec
lahf
push
cmp
add
test
loope
jo
mov
fnsetpm(287
sbb
adc
push
fistl
inc
imul
mov
jno
in
test
loopne
xor
or
mov
mov
fnsave
inc
push
jmp
in
jb
jle
ss
insb
dec
sub
mov
jb
xchg
push
adc
mov
hlt
xorl
cmp
fidivrs
dec
pop
adc
dec
aam
or
out
movsl
insb
push
sub
std
out
cmp
js
adc
cmp
js
stos
pusha
push
cmpsb
jno
or
fadds
jmp
mov
repz
int
mov
ret
inc
mov
ja
cmpsb
sbb
dec
cs
loopne
xchg
pop
jle
out
pop
mov
xor
dec
sbb
loope
xor
aam
fdivrl
mov
inc
lods
jbe
push
cli
bound
fildl
aad
ljmp
pop
mov
aas
mov
insl
push
in
aad
pop
les
mov
xor
and
lcall
push
std
out
lret
fldt
push
flds
ljmp
mov
adc
add
xchg
iret
jae
test
outsl
mov
iret
fsubrl
lcall
mov
jl
push
cmp
clc
test
lret
adc
adc
xchg
je
in
cmp
pop
lcall
sub
pop
jns
fcompl
mov
das
in
push
pop
cmp
and
dec
push
pop
pop
es
push
jp
enter
lahf
out
push
testb
xchg
lods
jne
aas
ret
xor
and
cwtl
xlat
push
addr16
inc
in
insb
out
sbb
in
dec
jbe
mov
sub
jp
add
sub
pop
ffree
mov
xchg
cwtl
pop
xor
mov
jg
int3
lea
rolb
addr16
adc
ljmp
or
je
mov
lock
fstl
mov
pop
adcl
mov
dec
fdivrp
jbe
inc
sbb
mov
es
popf
outsb
xchg
mov
mov
mov
jmp
shll
fidivs
mov
into
popa
test
lods
leave
push
mov
ret
ja
movsb
add
rcrb
sub
push
mov
jp
inc
jo
pushf
inc
outsb
mov
lds
jle
stos
pop
xlat
mov
cmp
cwtl
mov
xchg
fcmovnu
xlat
fsubrl
push
mov
ret
mov
insb
jae
pusha
fcmove
mov
mov
andl
lahf
xchg
adc
stc
mov
fcomi
fwait
push
add
xor
faddl
dec
ret
clc
out
pop
ja
or
push
pop
or
pop
sahf
sub
jmp
lahf
iret
testl
add
int
mov
or
movb
pop
sub
cmp
pop
sub
pop
sub
xchg
or
sub
lcall
ret
cld
dec
sub
sub
mov
mov
push
add
jge
jge
nop
pop
aam
aad
iret
pop
shrl
stc
test
test
scas
jg
xchg
mov
rorb
ja
xor
sub
ja
enter
movsb
imul
in
movsb
test
int3
popf
xchg
rolb
dec
arpl
xchg
loopne
insl
add
lods
mov
mov
or
lret
jae
push
mov
in
mov
stos
mov
mov
or
sbb
jae
psubsw
sbb
shrl
push
jb
xchg
pop
lock
mov
bnd
sub
mov
mov
ret
dec
leave
add
push
jp
fidivrs
iret
jnp
shll
mov
cmp
xchg
mov
xchg
aaa
jns
aam
cs
ds
daa
cld
aad
negl
xchg
fimull
pop
lahf
jp
xchg
test
and
push
ja
inc
sbb
js
ret
test
xchg
fnstsw
ret
std
pushf
je
mov
push
push
mov
and
inc
scas
push
daa
jmp
mov
movsb
pop
push
imul
mov
mov
out
out
popa
xchg
lods
mov
mov
dec
jl
mov
add
xor
sbb
lods
or
int3
ret
dec
inc
repz
and
lahf
bnd
insl
cmp
pop
mov
cmp
jp
rclb
cmc
in
ljmp
cmp
out
fcoms
or
sbb
and
mov
cmovs
dec
loopne
jecxz
xchg
pusha
ret
xor
arpl
ficomps
and
in
lea
test
das
in
mov
ja
pop
sbb
sahf
mov
mov
jo
lock
mov
cmp
dec
insb
xlat
mov
jns
test
int3
std
sub
loop
pop
xchg
idiv
xor
popf
xchg
aaa
lret
xchg
pop
pop
mov
xor
out
pop
jne
outsb
repz
ss
add
lods
lds
in
xor
dec
in
fsts
int3
std
sbb
scas
lock
adc
mov
insb
sbb
xchg
test
push
lret
add
fiaddl
xlat
add
or
ds
sub
push
mov
test
cs
test
scas
fsubr
jns
xchg
mov
mov
adc
cmc
and
and
dec
push
mov
or
or
sbb
ret
sets
mov
mov
inc
sbb
es
push
sub
loope
stc
stc
lds
push
inc
xor
cmp
mov
inc
add
add
mov
cmp
aad
mov
xor
mov
sub
pop
arpl
push
sti
sbb
add
icebp
fs
fisttpll
hlt
in
sub
jmp
jae
jne
pushl
les
lahf
jle
int3
cmp
mov
roll
loope
outsb
and
mov
jo
jecxz
and
dec
cmp
push
or
fidivrl
pop
or
or
iret
cmpsb
sbb
push
jge
fnstenv
push
mov
sbb
mov
std
aam
sub
fsubrl
push
push
jae
inc
test
push
add
cs
mov
pop
scas
lock
xlat
sbb
jmp
push
movb
mov
cld
jmp
sbb
loopne
cs
xchg
inc
outsb
aad
es
pop
lret
pop
or
or
bound
jp
popa
inc
cmp
movntq
arpl
push
sbb
mov
add
mov
out
call
cmp
outsb
push
mov
xchg
xor
mov
stos
add
loopne
test
xchg
dec
pop
mov
aam
jb
loopne
or
inc
push
mov
and
mov
pop
ret
je
and
mov
push
push
xchg
inc
push
mov
out
mov
or
mov
mov
addr16
aam
and
xchg
pop
movsl
cmc
movl
cwtl
cli
aaa
pop
inc
loope
lods
mov
daa
es
les
mov
and
lock
or
add
shlb
cmp
test
mov
sub
sub
inc
ds
std
mov
jmp
mov
pop
mov
push
cwtl
mov
ja
sub
xor
iret
int
cmp
mov
jb
push
push
mov
stos
test
aas
and
mov
fcompl
jne
aaa
jge
loope
rcll
test
mov
out
js
ja
sahf
sbb
in
mov
insb
dec
mov
shlb
mov
mov
jge
movsl
push
push
test
aam
popf
mov
push
dec
call
jmp
push
pushf
jp
push
pusha
rcrb
inc
push
ljmp
scas
jb
out
nop
mov
push
mov
mov
aas
xor
enter
insl
mov
ja
outsl
fildll
mov
jl
pop
adc
test
xchg
pop
and
pop
outsl
imul
jnp
dec
mov
cld
lds
outsb
push
xor
xor
xlat
mov
mov
lds
cli
sbb
dec
lcall
xchg
stc
xor
ret
mov
out
pop
mov
jecxz
in
cmp
or
push
stos
add
push
leave
arpl
add
jg
loope
testl
or
popf
jp
loope
fsts
lock
js
or
sbb
orb
clc
daa
je
push
mov
mov
lods
loopne
cmp
xor
insb
in
sub
lcall
mov
inc
sbb
inc
dec
and
pop
and
xlat
inc
ja
adc
cld
push
adc
mov
cwtl
test
fsubrs
sbb
mov
pop
movsl
sub
mov
call
movsl
lea
aas
loop
mov
jno
xchg
cli
pop
xor
xchg
inc
movsb
popa
sbb
xchg
inc
jmp
dec
sahf
push
xor
push
fs
pop
out
push
arpl
add
jae
cltd
popl
xor
fbstp
xchg
xchg
js
xchg
xchg
cmc
xchg
lds
xchg
pop
notb
inc
sbb
pop
stos
mov
in
incl
mov
push
ret
and
pop
lahf
cmp
in
sahf
loop
push
cmpsl
lret
imul
lahf
mov
push
cmpsb
sbb
andl
push
mov
push
ja
jge
sbb
push
arpl
inc
iret
mov
mov
xlat
in
push
repnz
sbb
mov
enter
mov
ds
in
jmp
lea
sahf
sbb
mov
xor
fst
jge
adc
ja
jmp
pop
in
push
and
lahf
mov
fmuls
pop
ret
out
xchg
les
mov
adc
mov
fwait
xor
aad
sub
data16
fucom
ficompl
lcall
out
xchg
adc
lds
pop
test
pusha
addr16
enter
sti
adc
insb
push
cmp
mov
push
adc
loope
push
popf
loope
xchg
jbe
cwtl
subb
sub
inc
ret
jb
cltd
sub
ror
daa
mov
js
push
mov
or
call
and
scas
inc
inc
test
sub
xchg
and
popfw
sahf
sahf
mov
xorl
mov
mov
jb
cmpsl
pop
loop
loop
inc
movsl
lret
cltd
mov
insl
idivb
out
test
test
mov
mov
push
adc
xor
loop
cmp
repz
jmp
sub
repnz
imul
fcmovu
inc
cmp
mov
mov
dec
loope
iret
mov
inc
in
leave
xchg
and
cltd
xchg
sub
mov
hlt
movsl
push
repnz
nop
scas
xor
and
inc
loope
xor
pop
mov
dec
int
hlt
subl
sahf
mov
or
cmpsb
mov
addr16
mov
insl
aam
mov
jae
cmpl
cmp
and
cmc
fmull
jp
imul
lock
imul
xlat
aas
xchg
arpl
imul
xchg
rcll
stos
jle
js
cltd
aas
bnd
pop
insl
sahf
mov
fwait
inc
sub
rcrl
imulb
mov
out
je
addr16
xchg
adc
out
mull
mov
or
xor
inc
int
push
pop
mov
mov
hlt
decl
jge
mov
sbb
jmp
sub
gs
in
dec
sbb
call
ficoml
mov
mov
cmpb
les
leave
jecxz
cs
ds
out
cmpb
call
aad
aas
in
jle,pn
out
ror
inc
nop
mov
inc
pop
dec
or
mov
out
push
addl
sub
rorl
xchg
lret
fwait
adc
int
insb
rcrl
sbb
mov
into
into
lea
jle
inc
xor
pand
shrb
dec
lret
xchg
addr16
inc
cmc
lods
push
push
pop
mov
out
ret
or
fwait
cmp
subl
jp
cmp
test
dec
inc
shrb
out
mov
sub
mov
fidivs
lea
loopne
xlat
ret
pop
test
ds
sbb
push
inc
pop
adc
xchg
xor
lock
mov
xchg
aam
aas
test
inc
xor
leave
icebp
sub
xor
stos
mov
jmp
stc
jne
roll
loope
mov
or
or
sbb
pop
movsb
jmp
or
sub
sub
cmpsb
in
pop
mov
sbb
jne
addb
or
push
mov
or
inc
leave
and
scas
test
dec
jns
fcompl
xor
pop
insb
shlb
xlat
syscall
pop
push
scas
das
out
jl
push
mov
xchg
jle
aad
jne
sub
mov
pop
jmp
sub
incl
dec
test
aaa
adcl
jne
jns
push
jbe
pushf
dec
dec
xchg
sub
adc
ljmp
jb
rcll
xor
cmc
push
rolb
outsl
cwtl
xor
ljmp
pop
ret
fldt
in
pop
push
sbb
pop
das
adc
sahf
sar
xor
scas
jne
scas
clc
jmp
scas
push
jb
dec
shl
sub
pop
lock
or
int
xchg
inc
jge
mov
les
push
or
xor
stos
mov
xor
inc
mov
js
bound
jg
imul
inc
jmp
lock
int
dec
adc
mov
mov
and
cli
jge
pop
adc
adc
fstps
cmp
push
mov
push
cs
aad
push
mov
inc
mov
ja
test
popa
insb
sbb
rcll
mov
popf
ret
ja
daa
outsb
sti
ljmp
popa
insb
xor
rcll
shlb
jle
mov
or
cmp
es
btr
les
stc
dec
mov
rorb
jecxz
out
mov
cmp
cmp
aam
add
cwtl
pop
enter
pop
popa
in
nop
xor
inc
xor
repnz
pop
dec
jl
push
cli
fwait
out
test
pop
rcrl
fnstenv
mov
data16
mov
adc
stos
push
push
sub
rorl
test
inc
fiaddl
rorl
stos
cwtl
in
xchg
mov
mul
cltd
inc
sahf
fs
add
loope
out
aas
pop
neg
push
mov
stos
or
fstl
lret
pusha
es
add
push
mov
sti
inc
fdivrp
cmpsb
cmpsl
out
lahf
cmp
add
add
cmp
mov
andl
daa
pop
jno
or
xor
jb
loop
sahf
sub
adc
cmc
inc
dec
add
out
pop
dec
xlat
pop
test
sbb
pusha
adc
fisubs
or
dec
inc
std
and
jmp
fwait
xchg
mov
imul
cmp
popa
sbb
aad
dec
ss
lods
jmp
adc
in
ljmp
outsb
xor
lds
cmp
push
lods
pop
adc
test
and
push
cmp
pop
inc
dec
adc
bound
xchg
daa
cmp
sti
xchg
fs
hlt
rcl
cmp
mov
call
mov
rep
add
dec
sub
sbb
shl
inc
mov
mov
xchg
popa
popf
mov
stos
pushf
xlat
insb
push
aaa
call
add
push
mov
cmpsl
xchg
mov
aad
je
push
les
into
or
sub
sbb
jno
popf
and
lcall
mov
mov
mov
mov
icebp
and
xor
in
adc
cmp
cmp
push
pop
imul
ret
mov
int3
adc
xchg
sti
int3
inc
rclb
cmpsb
mov
mov
jbe
mov
ret
push
xchg
jecxz
dec
cltd
xchg
jnp
xor
fnstenv
xchg
dec
inc
and
and
mov
inc
pop
adc
jbe
pop
aam
xor
fstpt
addr16
or
xchg
into
icebp
push
pop
mov
xor
pop
out
sub
dec
lds
cmpsb
xor
jb
movsb
scas
repnz
xchg
pop
cmp
dec
sahf
xor
js
pop
adc
push
pusha
repz
mov
sub
ret
mov
fisubs
push
pop
jns
push
imul
fnstcw
popa
inc
and
inc
ja
xor
movsl
loopne
inc
jns
addr16
pop
add
dec
and
pop
xchg
or
cmp
and
sub
dec
sub
nop
pushf
jg
shl
out
test
arpl
xor
add
dec
pusha
movsb
sub
pop
cld
addr16
in
mov
ret
int3
pop
and
cmpsl
dec
pop
add
push
pop
fwait
sbb
pop
mov
xor
jns
dec
add
xchg
sub
movsl
push
cmpsb
xchg
cli
shll
sbb
push
nop
rolb
jns
aaa
jns
and
nop
aam
mov
adc
imul
imul
iret
sti
jb
mov
aas
test
repnz
mov
cli
lret
icebp
pop
testl
dec
arpl
leave
int
push
fdivrl
cmpsl
lods
test
sub
imul
fwait
gs
xchg
ljmp
loopne
mov
or
push
mov
rcl
adc
mov
mov
in
imul
dec
test
loop
push
psubsb
push
mov
mov
addr16
scas
xchg
push
xor
inc
jae
inc
mov
lods
inc
lods
push
xor
jnp,pt
sbb
das
sbbb
mov
jb
pop
iret
enter
movsl
jb
push
push
imul
and
pop
out
repz
and
ss
or
in
mov
outsb
pop
loopne
pop
fbstp
fcos
shrb
mov
and
xchg
mov
mov
sbb
mov
pop
xor
adc
movsb
in
loop
test
mov
test
jnp
mov
les
dec
aam
ljmp
cld
sahf
push
inc
mov
pop
and
xor
or
mov
adc
mov
stos
int
xchg
cwtl
fcoml
shl
fisttpl
cmp
xchg
jns
in
sbb
inc
daa
notb
pop
fistpll
lret
xor
push
pop
enter
mov
mov
push
add
mov
jne
mov
jg
inc
cwtl
pop
cmp
mov
lret
xor
jmp
jmp
je
push
aas
scas
adc
and
mov
test
sbb
gs
nop
jmp
in
inc
adc
push
sbb
jp
outsl
shll
and
dec
lahf
fmull
out
test
pop
or
gs
test
ja
fwait
jae
inc
xchg
test
fsubrl
insl
mov
out
popf
pop
mov
push
mov
insl
test
js
insb
incl
cwtl
shlb
cmp
adc
xchg
popf
dec
xor
jmp
cmp
cmp
scas
mov
pop
sbbb
sbb
and
xlat
sbb
jmp
sub
fnsave
sbb
ret
inc
lock
js
sub
sar
jns
icebp
adc
arpl
mov
hlt
sti
pop
push
test
outsl
xchg
push
push
mov
sub
sbb
mov
std
push
pop
pop
shl
or
fld
dec
xchg
sbb
ljmp
lahf
sbb
sbb
stos
inc
pop
mov
xchg
mov
or
lea
stos
xchg
mov
mov
div
iret
hlt
loopne
iret
sahf
lods
mov
add
dec
lret
jecxz
ljmp
mov
mov
ret
mov
in
xor
dec
push
sub
mov
cmp
mov
xlat
pop
xor
scas
jl
clc
lret
leave
dec
xchg
xor
add
lods
orb
pop
leave
mov
add
or
jmp
inc
daa
push
hlt
in
scas
xor
adc
imul
prefetch
cmp
jge
push
repz
movsl
clc
push
or
rcl
rcrb
fs
out
cmc
mov
mov
daa
mov
lock
fists
sub
jb
les
out
fsubr
pop
test
test
aad
mov
imul
test
into
andl
ds
mov
loopne
and
adc
and
fcompl
nop
pop
and
das
inc
push
adc
push
lods
mov
aad
mov
sbb
pop
add
or
sti
push
jp
icebp
fsubrs
xchg
call
fildll
outsb
jne
test
pop
cmp
loop
les
and
xchg
je
das
mov
out
push
dec
orb
mov
or
imul
sub
push
jns
dec
sbb
adc
cmp
dec
mov
fisubrs
call
subl
xlat
mov
dec
loopne
std
js
add
push
cmpsb
add
loope
adc
pushf
aas
cmpsl
sbb
ret
sbb
imull
leave
xor
nop
lcall
dec
cwtl
ds
mov
cmc
dec
push
push
in
sub
divb
cmp
repz
cmp
out
xchg
js
sub
sbb
mov
or
repz
and
and
leave
das
xchg
lods
xorb
xor
sub
and
pop
negb
pop
into
aaa
dec
pushf
push
mov
iret
out
cmp
sub
pop
sbb
jl
xlat
popf
jnp
cli
xchg
into
bnd
and
mov
fwait
lods
std
cmpsl
jno
out
dec
jno
lods
cmpl
xorl
ss
xor
cltd
push
lret
loope,pn
ret
cmc
mov
xor
push
and
push
bound
mov
pop
popf
fs
mov
ljmp
enter
xor
data16
movsl
push
into
inc
mov
ss
and
test
dec
lods
cmc
imul
mov
dec
inc
xchg
sub
jmp
push
dec
scas
out
sahf
cltd
addl
mov
add
inc
push
lahf
loop
push
dec
mov
mov
mov
daa
lea
andps
xchg
sarl
call
xchg
cs
sub
and
fstpt
testl
ret
mov
push
movl
push
daa
in
cmpsl
sbb
mov
push
push
mov
out
mov
jno
mov
mov
push
ja
pop
xchg
lret
into
outsb
xor
mov
and
repnz
cmp
mov
adc
movsl
clc
xchg
add
adc
add
dec
adc
add
les
mov
adc
pop
out
nop
xlat
jmp
mov
mov
std
lds
jbe
aam
aas
jmp
jno
stos
mov
ds
sub
scas
fucomp
push
adcb
push
jno
push
or
mov
xor
gs
pop
lcall
popa
and
lret
ljmp
sub
and
mov
stos
add
aas
sub
xchg
pop
xor
adc
jg
cmp
fucomip
imul
insb
dec
adcb
dec
insb
movsl
add
and
push
jp
inc
pop
pop
or
js
aad
sub
dec
stos
inc
push
mov
or
cmp
stos
mov
dec
inc
rol
lea
faddl
inc
mov
insl
js
stos
jno
sahf
mov
pop
sbb
push
outsl
and
jnp
jecxz
xchg
cmp
mov
andb
cmp
push
mov
filds
jno,pt
lret
push
push
das
pop
pop
sub
add
aam
jb
out
hlt
pop
icebp
stos
movsb
mov
sbb
nop
add
aad
je
int
jle
cmpsl
in
das
into
addr16
in
or
stc
data16
bound
movb
add
fnsave
and
or
push
add
cmp
ja
mov
xchg
sub
inc
divb
or
in
es
repnz
push
push
lcall
fs
xchg
mov
mov
fucomp
repnz
faddl
mov
adc
mov
and
or
outsb
popa
jle
pop
cmpsl
imul
stc
mov
bound
inc
ret
and
xchg
call
loope
rcll
mov
dec
xchg
arpl
inc
push
dec
es
gs
insb
and
and
adc
inc
orl
push
xchg
sti
sti
pop
lcall
cmp
mov
jge
pop
cmpsb
jno
inc
imul
loop
lahf
in
int
or
push
xor
ret
dec
sub
repz
test
mov
push
aad
mov
lcall
in
fs
cld
adc
out
out
or
ja
les
inc
fistl
les
scas
and
inc
lret
dec
lahf
push
in
lcall
dec
mov
jne
cmpb
aaa
push
test
jge
cmpb
sub
inc
daa
sub
mov
push
stos
inc
lret
call
nop
inc
sahf
test
fs
fadds
imul
xchg
dec
scas
fnstsw
and
jae
push
addr16
aad
jmp
sub
mov
icebp
adc
xchg
pop
ss
mov
testb
in
jge
jl
mov
loop
popf
jp
outsb
mov
pop
incb
cltd
xchg
fwait
and
ljmp
cmp
inc
scas
xchg
pop
ljmp
ret
add
jmp
mov
push
ja
or
mov
aam
sti
jp
adc
xor
jb
pop
test
fsubs
mov
mov
mov
inc
pop
mov
cmp
push
fs
xorb
dec
clc
orb
xchg
push
aaa
mov
xchg
stc
jb
sahf
arpl
es
add
ds
push
out
mov
mov
fdivrs
jne
inc
mov
dec
lds
inc
sub
fldt
xor
ret
mov
fs
daa
loope
ficompl
pop
inc
adc
fldt
test
stos
lret
push
mov
xchg
jg
mov
xchg
or
pextrw
add
mov
push
push
pop
jmp
mov
push
sub
jmp
or
jecxz
mov
lahf
inc
mov
jns
mov
leave
push
fldl
lret
mov
mov
outsl
fdivrl
jae
sbb
sbb
sbb
in
cmc
xchg
stos
mov
enter
cmp
in
adc
xor
push
orb
or
stos
sbb
dec
mov
in
int3
in
sbb
adc
jnp
lahf
cmp
adc
mov
lock
adc
sub
cld
gs
bound
sub
jno
stos
stos
push
and
int3
and
fisttpll
pusha
imul
xchg
test
jns
mov
out
pop
mov
rolb
lahf
decb
std
sti
add
push
cmp
fnstenv
pop
arpl
jne
mov
mov
data16
hlt
adc
push
or
xor
fisubrs
push
dec
inc
push
adc
xchg
xchg
inc
fcmovnbe
outsb
mov
sub
xchg
repnz
jmp
ret
push
or
mov
mov
pusha
call
scas
dec
ret
icebp
sub
and
mov
xor
repnz
and
mov
xor
mov
sub
daa
mov
rolb
push
jmp
imul
xchg
iret
xor
lock
scas
fisubs
aad
test
mov
fiadds
frstor
xor
mov
arpl
add
bnd
rolb
test
lret
mov
jo
mov
sub
inc
pop
pop
cmp
and
sbb
out
push
push
dec
aaa
xlat
and
loopne
out
cmp
pop
push
ret
ja
div
rclb
jg
mov
imul
mov
xorb
out
rolb
out
mov
je
xor
jg
jno
out
popa
iret
insl
pop
cmp
emms
xchg
ds
movl
xor
lea
ret
lea
lret
movsb
add
sbb
add
or
push
push
and
add
cs
add
jl
cmp
bound
je
mov
setp
fdivrp
je
ljmp
mov
nop
fstl
testl
in
cmp
push
mov
jp
test
xor
xchg
push
cmp
pop
std
ret
out
ret
xchg
test
lcall
sti
push
lds
in
mov
xchg
inc
sbb
out
hlt
clc
inc
xchg
push
push
or
shl
outsb
jae
mov
ljmp
loopne
or
ficoms
mov
fstpl
pop
inc
sub
inc
xchg
aad
mov
mov
imul
hlt
iret
adc
push
ljmp
and
inc
addb
bound
ljmp
push
adc
aam
int
cmpl
out
dec
mov
movsb
jp
imul
shlb
pushf
int
addr16
hlt
adc
lods
jae
jne
and
adc
rorl
add
jmp
mov
cwtl
push
mov
mov
xor
or
xor
fbstp
pop
mov
pop
jne
cmpsl
sub
clc
loopne
lods
mov
jg
inc
ja
push
inc
push
cmc
pop
xchg
out
adcl
mov
or
ds
iret
adc
mov
fsubl
adc
aaa
sub
mov
dec
lods
xchg
dec
add
daa
inc
inc
shll
cs
add
and
loope
jbe
cmp
hlt
daa
inc
insb
test
lea
fstl
or
popa
push
icebp
mov
xchg
cld
repnz
jg
sub
adc
gs
sbb
loopne
push
jmp
xchg
adc
mov
push
push
xor
cld
sbbl
mov
ljmp
or
push
mov
push
addr16
scas
inc
decl
loope
fwait
sub
stc
out
mov
xor
in
or
cmp
push
sahf
sbb
mov
xor
mov
fsubr
mov
push
int
pop
push
xor
cmc
add
sub
jno
pop
xchg
loop
lods
data16
cmp
js
mov
dec
outsb
js
cwtl
shl
repnz
mov
cmpsl
dec
xor
lcall
in
pushf
cmp
mov
popa
movsb
cmp
pop
add
sub
inc
sub
cs
fnstcw
repz
inc
cmp
pop
ja
push
mov
inc
sub
jnp
xchg
cmpsb
fimull
inc
dec
pushf
cmp
cmp
cmp
jge
mov
outsl
xor
adc
lock
je
es
test
out
movsl
loop
sahf
dec
push
dec
sahf
sub
aaa
into
in
mov
ffree
cli
mov
loopne
aad
cltd
dec
insl
jmp
int3
scas
cmp
adc
repz
rcr
pop
aas
mov
add
sub
pop
inc
andb
adc
rolb
dec
outsb
mov
mov
jp
sub
sbb
nop
aad
aad
stc
push
adc
lahf
mov
jb
push
adc
xor
bnd
inc
ret
cmp
push
fs
add
mov
xchg
insb
and
push
popa
cmp
sbb
and
mov
mov
scas
scas
in
cwtl
cmpsl
daa
xor
cmpsb
xchg
mov
decl
or
std
sub
adc
fldt
cmp
cltd
inc
dec
notb
push
jle
test
and
int
daa
out
add
fnstenv
gs
jp
sub
xor
pop
aaa
into
loope
daa
clc
nop
pushf
fwait
aad
add
sub
js
dec
or
dec
in
pusha
fcompl
dec
mov
mov
test
xorb
call
sti
sbb
push
mov
in
mov
pushf
mov
mov
dec
add
fcmovnb
pop
push
add
lcall
jno
pop
stos
mov
sub
adc
or
mov
out
fcmovne
loope
xor
jnp
pop
sarb
or
push
je
stos
lcall
jbe
std
jmp
mov
inc
sbb
jb
and
rorb
jno
stos
lcall
int3
adc
fidivrl
imul
cmp
cmp
inc
adc
lcall
xchg
aad
add
xrelease
xchg
add
pop
push
ljmp
insl
lds
in
sub
mov
addr16
enter
jp
mov
lahf
repnz
inc
add
dec
jns
jne
sti
pop
pop
inc
decl
les
add
pop
sbb
add
inc
aad
lret
pusha
and
mov
inc
inc
inc
mov
sub
mov
sbb
sahf
xchg
dec
cmpsb
loopne
jmp
jno
fcmovnb
dec
pop
sbb
adc
in
lret
cmc
stos
lea
pop
add
jne
leave
mov
iret
jge
scas
mov
rcrb
std
add
push
jp
and
mov
push
lcall
add
push
pop
or
repnz
pop
lods
and
adc
mov
jmp
in
inc
loop
xor
leave
or
fstpt
add
push
arpl
cwtl
sti
add
ret
call
cmp
lahf
or
stos
adc
mov
sbb
out
or
dec
push
out
movsl
inc
in
mov
data16
jae
aas
fs
pop
xlat
cmp
sub
stos
fcomps
adc
call
div
jge
push
push
inc
rolb
jp
pop
mov
dec
ss
dec
and
dec
sahf
fwait
pop
out
mov
and
xchg
mov
push
add
fcomps
jo
xor
sbb
sub
add
mov
mov
jo
add
sbb
pop
mov
stc
adc
push
sub
cmpsb
shrl
or
imul
ret
insb
popf
movsb
mov
xchg
fsubrs
pop
xor
xchg
popf
pop
xchg
mov
xor
push
in
mov
xchg
push
andl
jno
popa
inc
inc
jge
aad
or
inc
int3
push
out
movd
cld
or
test
dec
jns
ja
test
jno
sbb
sbb
sub
push
push
jl
add
cmc
sub
push
fcmovnbe
ret
xchg
cmpsb
scas
push
xor
movsl
repz
outsb
or
js
sbb
xacquire
addr16
inc
popa
les
ss
iret
out
fisubl
repnz
cmp
mov
fiadds
dec
push
jne
push
push
pop
push
stos
or
mov
sub
test
add
fdivrs
jbe
inc
loope
jne
stos
enter
cmpsl
js
mov
ljmp
push
mov
jbe
lock
mov
and
adc
mov
adc
sbb
xor
jmp
add
loopne
jne
loopne
sub
insb
push
shll
push
xor
mov
pop
clc
cmp
aaa
pop
add
jl
cli
ret
testb
jle
sub
or
inc
and
leave
sub
lods
popf
xchg
arpl
out
xor
shll
jne
adc
in
cmpsb
cwtl
sti
cmp
xchg
mov
arpl
dec
shlb
mov
xchg
imul
sub
xor
scas
xlat
mov
je
mov
xchg
cmp
jns
jle
outsb
mov
popa
in
loope
enter
in
loope
icebp
push
inc
lods
int
xor
lods
sbb
and
cld
nop
mov
mov
pop
cltd
imul
sti
movsl
stos
dec
movsb
or
push
jnp
mov
jmp
mov
pop
dec
loopne
outsb
cltd
sub
inc
jns
sti
imul
les
aad
les
lds
mov
jb
and
sahf
and
in
lahf
dec
mov
sbb
test
pop
and
pop
and
or
sub
adc
or
lret
fidivl
inc
mov
cmp
mov
pop
fsub
fiaddl
sahf
insb
scas
testl
push
dec
ja
xchg
popa
lcall
pusha
lret
ret
pop
sbb
ret
mov
cmp
dec
out
pop
sub
cmpsb
mov
leave
mov
out
push
mov
mov
mov
push
jg
pusha
scas
in
pop
fsubs
add
add
xchg
push
ja
les
shll
xchg
push
dec
add
in
jmp
or
add
pop
sub
lods
hlt
jb
ret
imul
xor
adc
and
mov
xchg
lret
call
stos
jmp
gs
pop
lcall
push
jl
ja
sbb
insb
jbe
movsb
mov
popw
mov
pop
in
in
push
sub
insl
inc
push
mov
add
jl
imul
vpsubusw
cmp
lret
arpl
cmp
leave
add
mov
xchg
pop
xchg
in
push
sub
lock
or
sbb
stos
inc
xchg
lret
sub
push
jecxz
cmpsb
xchg
jge
mov
fcompl
push
mov
fsubr
push
mov
sbb
add
cwtl
jg
push
test
test
push
stc
out
arpl
sub
xor
das
mov
inc
sbb
xor
je
js
sub
es
inc
ret
xchg
xor
push
jge
shlb
mov
jns
xchg
scas
in
aam
les
mov
jne
das
out
xor
pop
fstl
or
jno
je
icebp
call
sbb
sbb
and
xchg
into
jbe
sub
add
inc
inc
sarb
or
sarb
outsb
mov
aad
scas
lock
loopne,pt
adc
push
pop
and
and
xor
cmc
or
lds
cmp
pop
push
loope
out
or
faddp
fcmovnu
jnp
dec
stos
xchg
jbe
lock
dec
je
and
popf
cmp
jp
sbb
rcl
mov
shl
push
add
jle
fstpt
bswap
adc
cmp
add
out
dec
sbb
in
xor
dec
loop
and
lods
adc
mov
mov
aaa
adc
loop
pop
pop
cs
mov
leave
mov
in
lods
and
pop
sub
js
inc
and
fcmovb
cmp
sub
xor
aam
dec
add
out
aas
inc
outsl
loop
inc
out
push
mov
and
aas
xor
shrl
xchg
add
fdivs
les
adc
loopne
xorb
lds
pusha
push
popf
pushl
stos
mov
inc
jp
popf
dec
mov
adc
and
mov
idivl
loop
sub
mov
clc
shrl
sbb
mov
outsb
dec
mov
inc
jbe
cmp
lret
fstpt
out
lcall
fs
or
fs
dec
mov
xchg
stos
fwait
or
mov
inc
mov
in
push
push
xchg
ret
cmp
loop
add
les
sub
imul
lret
xacquire
lret
cmp
cmp
xchg
add
fistpl
addr16
xlat
xchg
dec
filds
mov
pop
xor
xor
in
ds
jbe
out
jbe
or
add
jo
cmpl
jmp
add
add
jg
in
xchg
push
sbb
xchg
in
cmp
or
mov
fs
inc
lds
in
data16
and
jle
les
ret
mov
out
inc
loope
pop
jecxz
shlb
jmp
aad
pop
pop
cli
into
pop
pop
out
mov
jge
cmp
mov
pop
xchg
shlb
pop
inc
jbe
xlat
decl
mov
sbb
xchg
je
mov
lds
cmp
arpl
jl
xchg
sub
lcall
je
jl
sete
ret
push
sbb
loop
das
es
rcl
push
jo
in
sub
inc
repnz
test
lret
imul
loopne
stc
add
mov
std
xchg
push
or
xor
repnz
xchg
mov
fcomps
shll
push
xor
jl
lret
jb
or
femms
pop
out
fs
cmp
lahf
and
pop
loop
divb
mov
imul
sub
inc
push
out
lret
sbb
insl
mov
mov
or
cmc
lcall
repz
mov
ss
les
and
pushf
les
cmp
cmp
dec
pop
and
dec
jmp
lods
jns
sub
dec
push
stc
andl
aam
lea
inc
popa
out
lret
fdivs
shll
mov
lds
test
mull
cld
mov
incb
fstps
imul
mov
leave
fimull
stos
cmp
lret
push
xor
jmp
arpl
fcmove
ds
cwtl
sub
push
fisubl
xor
add
dec
aas
jmp
xor
fildl
int
sub
test
add
call
out
add
out
shlb
in
jp
aam
push
pop
jae
mov
pop
outsb
insb
xchg
popf
ja
xchg
jb
jmp
addr16
rolb
cmp
jne
push
mov
pop
insl
lcall
jecxz
pop
pop
xchg
pop
mov
pop
pop
into
dec
lret
clc
std
mov
dec
push
test
fisubl
mov
pushf
cmp
test
xlat
cmp
cld
test
inc
imulb
arpl
xchg
and
sbb
filds
cmp
mov
mov
mov
cmp
arpl
xchg
ds
stos
fstl
or
xchg
popa
popf
pushf
inc
xor
imul
mov
sub
lahf
leave
lret
subb
cltd
push
push
jbe
inc
lds
jbe
mov
cli
icebp
mov
cmpsb
arpl
inc
out
and
xchg
in
ja
movsl
cmp
mov
dec
cmc
add
xchg
in
or
sub
mov
pop
movsb
dec
push
repz
scas
sbb
mov
xchg
ret
insl
jae
cmp
mov
cld
rcrb
std
pusha
pop
mov
adc
jb
je
cmp
js
add
pop
imul
push
arpl
xchg
xor
jge
pop
xor
pop
jmp
lds
fwait
push
out
pop
pop
clc
imul
out
rcr
xor
leave
repz
shlb
out
adc
sbb
mov
jge
jne,pn
cwtl
int
into
xchg
shll
loope
xorb
jb
lret
stc
in
les
stos
popf
push
xor
jno
adc
xor
adc
jle
pop
add
lds
adc
sub
int
xchg
xor
cmp
or
pop
push
cmp
sub
loope
decl
cmp
fstpl
lahf
mov
adc
cmpsb
fs
mov
xchg
push
mov
je
jge
mov
lea
scas
into
ds
fcmovne
stos
mov
push
xor
push
ret
movsb
or
adcl
cmc
fmuls
xchg
xor
mov
in
aas
xor
data16
pusha
cmp
sbb
add
fimuls
cmp
mov
ja
lock
fcoms
fisubl
out
sub
sarl
xlat
mov
sub
pop
inc
sbb
mov
imulb
mov
aaa
dec
xchg
stos
movsl
in
es
leave
lock
mov
jmp
jle
mov
push
incl
fwait
sbb
icebp
mov
cmc
test
pop
jecxz
insl
xchg
xchg
xchg
test
adcb
xor
cmp
out
insl
dec
mov
pop
in
push
cmp
jp
popa
pop
mov
mov
in
mov
or
xor
push
popf
cmp
or
mov
lcall
subl
jns
daa
je
out
leave
and
dec
mov
ret
mov
repz
rcrb
mov
jmp
shll
test
aas
mov
or
into
or
out
js
dec
inc
popf
das
outsl
cld
xchg
movsb
fisubl
cmc
cmpsb
imul
and
push
out
jbe
sbb
movsl
and
jbe
inc
lahf
mov
xchg
test
and
sbb
mov
lea
mov
jecxz
test
ss
popa
pop
cmp
mov
gs
clc
mov
test
cmp
out
jmp
xchg
outsb
sbb
push
add
jns,pt
imul
into
mov
sbb
fcoml
cmp
pushf
fildll
sub
dec
sti
mov
mov
not
mov
sbb
es
test
mov
cmp
push
push
pop
shlb
cmpsl
xor
bound
mov
stc
xchg
imul
push
test
das
cltd
mov
ja
pop
pushf
popf
loop
ja
fcoml
cld
movsl
or
jbe
stos
jne
lods
mov
ret
mov
cmpxchg
insb
inc
outsb
call
push
xor
jge
loop
lcall
lods
es
jecxz
jl
clc
pop
clc
inc
mov
adc
jnp
add
adc
jno
cli
push
cld
lcall
add
fcomps
cltd
push
movsl
inc
scas
xor
mov
les
pusha
out
xchg
fs
dec
jbe
aam
lcall
cmpsl
cli
push
ljmpw
pop
ret
out
pop
test
sti
test
push
push
orb
shll
push
lret
cmp
or
icebp
lds
and
mov
jnp
sbb
fcoms
and
daa
dec
add
sub
mov
rcrb
scas
xchg
xlat
sub
jmp
mov
cmp
dec
push
push
mov
and
out
mov
jmp
xor
ss
cltd
xor
mov
cmc
popf
push
jae
or
push
inc
push
fldenv
fdivrs
xchg
adc
lret
mov
cwtl
and
in
rcrl
in
mov
add
pop
jns
test
mov
ja
fucom
iret
dec
and
push
push
sub
mov
push
lods
lret
ja
movb
div
lahf
inc
mov
mov
das
push
cmp
or
andb
fcoml
rcl
pushf
inc
jnp
push
inc
out
mov
add
bound
aas
push
xor
jbe
mov
daa
inc
dec
mov
mov
test
sbb
stos
cs
shl
lahf
outsb
mov
sbb
dec
and
and
loop
jb
cmpsb
xchg
cld
lock
scas
movsl
out
mov
outsl
inc
push
fdivl
mov
add
lcall
mov
pop
sar
shrl
pop
mov
out
test
cmp
mov
push
adc
xchg
loope
push
push
fcomps
movsb
sub
scas
mov
xlat
bound
int3
out
out
cmp
std
cmp
je,pt
push
out
mov
sbb
add
or
popf
and
cltd
popf
sbb
ljmp
push
cmp
mov
call
in
ss
dec
add
fwait
movsb
dec
in
xlat
inc
push
jl
es
rcrl
mov
add
addr16
ret
inc
mov
jge
mov
dec
aam
leave
xchg
test
mov
into
addr16
aas
test
cli
and
mov
cmp
cmp
add
mov
cmpsb
sub
cltd
adc
dec
sahf
mov
test
enter
in
loope
jge
push
mov
and
mov
repnz
inc
jecxz
push
or
fs
push
jmp
sahf
pop
out
jne
cmp
dec
xchg
pop
xchg
clc
dec
xchg
cmp
inc
sahf
sbb
push
pop
add
lods
shll
pop
push
add
dec
mov
sub
mov
cmp
mov
inc
inc
jl
dec
xlat
sbb
inc
test
xchg
xchg
xchg
xlat
jo
cltd
ficoml
jl
xchg
mov
int3
lea
and
gs
repnz
jns
shlb
push
aaa
lock
sbb
cmp
add
xchg
mov
push
loopne
inc
push
cli
and
push
insb
lock
mov
cmp
cli
and
lods
mov
mov
jnp
push
notl
ss
rorb
mov
lds
or
inc
mov
xchg
cwtl
outsb
push
mov
inc
and
adc
fmuls
push
inc
mov
adc
aad
sbb
pushf
adc
notl
sbb
scas
jecxz
mov
and
cmp
bound
mov
mov
shrl
xor
out
iret
push
testl
in
testl
add
add
data16
lcall
mov
jle
dec
cmp
push
cli
in
stos
or
inc
test
mov
mov
push
fistl
je
add
lds
mov
pop
jns
cli
testl
mov
fadds
iret
and
repz
fisubrs
or
jmp
jmp
mov
mov
dec
stos
jno
aam
cmc
neg
inc
xor
cltd
in
in
sub
jae
testl
or
or
shl
mov
cmp
mov
cmpsb
add
dec
lods
pop
push
icebp
icebp
xchg
mov
fisttpl
and
jb
dec
shrb
in
cli
sbb
add
fisubrl
inc
mov
jecxz
movsb
adc
inc
xchg
bound
jg
inc
and
into
lea
lods
pop
sub
push
std
xchg
dec
fwait
xchg
out
push
push
dec
or
movsb
ret
inc
cmp
loop
jbe
notb
leave
push
jne
adc
fcomps
lea
and
pop
xchg
mov
lea
jnp
pop
cmp
jne
push
jle,pt
jne
bound
xchg
or
push
lods
sub
sti
into
jmp
mov
out
mov
inc
mov
loop
ret
shlb
int3
jp
pop
jecxz
cmovno
xlat
mov
fdivs
loopne
xchg
jmp
outsb
inc
pop
dec
xchg
jbe
mov
push
aas
pop
icebp
or
incl
pusha
fwait
icebp
pop
dec
push
aas
lahf
lods
fidivs
jo
cmp
mov
lahf
or
and
push
out
sbb
adcb
inc
push
pop
orl
mov
sbbb
cs
mov
movsl
mov
push
mov
imul
movsl
add
out
or
test
pop
jp
mov
fsubrs
mov
push
mov
inc
scas
mov
enter
das
jg
arpl
lret
in
movsb
lret
imul
jl
sub
lret
pop
fwait
xor
lcall
test
jbe
jmp
or
daa
fsub
sbb
add
xchg
movlps
nop
pushf
sbb
adc
pushf
adc
cmc
push
loope
dec
jns
lcall
xchg
stos
lahf
ljmp
lods
les
mov
push
sub
scas
iret
addr16
xor
inc
jnp
call
sbb
shll
or
jbe
and
mov
pop
ljmp
sub
jp
jne
cltd
call
mov
fwait
stc
popl
cmpsl
mov
sbb
push
cmp
ljmp
adc
or
out
cmpsl
mov
arpl
inc
xchg
jnp
stos
inc
xchg
pop
ja
pushf
les
and
into
jbe
rcr
mov
out
ret
xchg
fwait
arpl
clts
minss
lret
mov
or
cltd
ja
ficoml
int3
adc
adc
call
aas
dec
nop
mov
dec
mov
sbb
hlt
pop
add
int
xchg
push
mov
push
pop
imul
fisttpl
jl
sub
in
jmp
pop
cmp
xor
dec
push
pop
outsb
jno
je
loopne
push
mov
das
cmp
xchg
mov
ds
testl
daa
sti
ret
inc
adc
pusha
add
lahf
ret
pop
mov
lods
daa
jg
fbld
mov
xlat
cmpsb
test
aas
movsl
dec
cmp
scas
inc
jle
sbb
xchg
adc
scas
adc
cmp
mov
adcb
hlt
ljmp
jmp
add
rol
movsl
jns
movsl
xor
mov
adc
in
ljmp
mov
mov
sub
out
in
cmpsl
xorb
daa
das
jo
inc
jmp
pop
fcoms
daa
lds
inc
jne
or
mov
in
cmp
test
inc
or
dec
add
mov
fiadds
mov
and
test
xchg
xchg
ret
push
hlt
lods
push
jl
in
jl
outsl
in
mov
and
sbbl
movdqu
push
js
add
loopne
je
fmul
decl
pop
adc
fidivl
mov
xor
dec
adc
add
fimull
test
pusha
jmp
jl
test
cmpsb
in
sbb
sbb
fcoms
add
test
cmp
or
jl
adc
pop
leave
mov
fiaddl
loopne
xor
xor
push
sbb
sub
jo
sbb
mov
mov
test
sub
jne
xchg
mov
lret
sub
das
shll
adc
jnp
scas
loope
in
in
adc
mov
adc
xchg
or
jnp
jge
rorl
je
iret
or
pop
jmpw
cmpsb
mov
sbb
aad
adc
addr16
cmp
jp
cmp
and
rclb
dec
and
lret
sahf
jl
dec
jg
lds
in
push
push
pop
cmpsb
scas
jns
aad
mov
data16
or
iret
sbb
jl
jge
syscall
jnp
data16
xchg
ficompl
data16
mov
and
shl
sbb
popf
addr16
mov
fisubrs
jge
xchg
scas
or
inc
or
scas
mulb
inc
xor
je
addb
scas
addb
fcomip
jmp
das
lcall
dec
pusha
dec
mov
dec
sub
jle
mov
cli
stc
push
xchg
push
sub
lret
mov
shlb
nop
test
call
xor
push
cs
or
stos
jbe
mov
int
mov
dec
xchg
test
sarb
push
sub
in
push
and
ja
push
dec
pop
pusha
mov
inc
or
inc
xor
pop
pop
push
mov
xor
xchg
arpl
jmp
xor
lock
icebp
loope
xchg
xchg
loopne
es
push
jbe
insl
sub
jo
mov
mov
push
xor
cmpsl
daa
cld
cld
mov
add
pusha
inc
sub
mov
cwtl
pop
out
cmp
sub
int
xchg
add
mov
jmp
mov
outsl
mov
mov
aaa
daa
mov
outsb
jg
and
jo
movsl
jg
aam
fstps
add
push
or
rcl
sahf
clc
inc
dec
jne
rorl
jmp
ss
es
aad
push
lret
push
cs
xchg
es
movsb
outsb
outsl
orl
sub
aad
cmc
mov
andl
add
inc
or
arpl
into
lahf
pop
mov
jg
mov
test
movsl
dec
jl
xor
test
push
xchg
inc
pop
or
out
jmp
push
rcr
addr16
adc
sbb
push
and
cmp
mov
jge
push
jecxz
mov
mov
adc
mov
subl
in
stos
mov
dec
shrb
add
call
inc
stos
dec
pushf
icebp
lret
mov
fdivs
add
xorl
outsb
nop
movsl
ficomps
ret
sub
sub
pop
sub
mov
jbe
xlat
imul
lret
lret
or
add
sub
xchg
dec
mov
sbb
stc
push
loop
push
out
push
dec
scas
or
cmc
cmc
in
loope
adc
dec
mov
loopne
popf
xor
xchg
or
xchg
push
int3
or
decl
xor
cmp
mov
add
mov
sahf
jno
push
cmp
push
lahf
cmp
sbbb
sbb
aam
fcomps
int
div
int
hlt
bswap
jno
iret
popf
ds
mov
imul
push
and
cs
out
aas
ljmp
adc
mov
out
jbe
call
sti
je
pop
inc
stos
lret
and
dec
subl
mov
jmp
shr
lahf
stos
out
adc
dec
jl
or
push
pop
xor
inc
gs
imul
mulb
imull
dec
and
xor
or
mov
test
mov
movsl
mov
push
add
sub
enter
sub
pop
push
jns
scas
sahf
dec
gs
outsb
jle
mov
mov
mov
mov
call
daa
ret
dec
sahf
fisttpl
test
xlat
dec
aas
lods
rcll
ljmp
xchg
sti
mov
jne
cli
in
mov
add
mov
shlb
imul
jo
test
xor
jae
or
ds
or
mov
and
or
cmp
xchg
xchg
mov
xchg
ljmp
add
mov
inc
mov
push
pop
pop
mov
dec
dec
dec
outsl
lret
cmp
shrb
dec
out
jl
outsl
xchg
ss
inc
fs
mov
lcall
in
es
sbbb
ja
pop
mov
insl
mov
jg
cmp
rcrl
inc
adc
jno
int3
es
adcl
cmp
add
std
mov
mov
mov
mov
mov
outsl
mov
ss
call
sub
dec
rcrb
xchg
mov
xchg
mov
repz
mov
hlt
mov
ret
mov
pop
sbb
xor
jmp
repnz
sub
movsb
sbb
jecxz
orb
sbb
int
out
sahf
pop
mov
sbb
call
pop
rorl
testl
shlb
rorb
loope
dec
fadds
into
rcr
lcall
push
pop
push
fwait
lock
add
divl
imull
jge
loop
mov
and
cld
xor
call
dec
mov
fucomp
sbb
arpl
cltd
lcall
sub
and
les
pop
popa
jnp
int3
pop
movsb
lds
outsl
je
add
divb
push
test
roll
push
inc
leave
cmpsw
mov
push
xchg
or
push
inc
leave
dec
aad
insl
shll
hlt
cmc
negb
cli
mov
and
lret
add
ret
add
add
lea
shll
pop
addb
filds
testb
cwtl
fdivr
pop
fbstp
movsl
mov
dec
in
adc
scas
or
shrl
rol
cmp
std
insb
or
cmp
dec
sbb
and
jne
xor
xor
ljmp
push
cmp
push
push
mov
xor
pop
mov
sub
outsl
call
in
xchg
fstpt
imul
sub
mov
rcl
mov
int
xor
pushf
jmp
dec
xchg
xchg
and
loopne
les
sahf
adc
jo
jb
mov
jnp
std
dec
arpl
lret
dec
xchg
or
test
lret
xchg
bswap
ret
scas
insl
movsl
push
arpl
std
sub
mov
xchg
sbb
mov
dec
push
adc
lret
pop
and
daa
fs
inc
test
or
jb
jno
mov
loope
or
mov
test
cli
bound
cs
inc
pop
jle
xor
inc
aas
jl
lea
lret
jno,pt
dec
sbb
dec
dec
pop
out
pop
enter
dec
cld
cli
jge
jge
adc
push
dec
sbb
in
inc
mov
xlat
adc
fwait
inc
mov
ss
pop
adc
xor
adc
stos
mov
or
mov
sahf
mov
xchg
jne
xlat
je
cmp
aas
dec
pusha
lods
pop
xor
fisttpl
repnz
jb
sub
outsl
jp
inc
call
cmp
push
mov
test
dec
roll
push
call
jge
jbe
cmp
mov
enter
std
push
xor
out
add
mov
mov
mov
xchg
mov
sub
in
or
outsb
dec
lds
mov
push
stc
jae
sub
out
idivb
jne
rolb
testl
int
xor
jge
pop
das
or
mov
sub
es
push
push
cli
ss
aad
pop
lcall
ljmp
rcrl
add
sbb
push
mov
fsubl
add
xor
mov
or
fwait
imul
cmp
stc
ret
xchg
mov
fcmovb
jo
jbe
push
sti
in
mov
and
mov
cmp
cmp
mov
and
jmp
fists
aas
dec
mov
movsl
mov
mov
push
lret
shll
push
inc
or
arpl
pop
xor
cltd
sub
xchg
daa
sbb
and
xchg
stos
inc
mov
mov
adc
mov
adc
inc
and
lds
gs
js
fstl
outsl
dec
and
or
lret
addr16
sahf
movl
movsb
aad
stc
pop
ljmp
sbb
dec
xchg
xor
dec
out
idivb
xchg
mul
fcoml
sbbb
cli
out
cmp
mov
push
daa
push
push
aas
jbe
xchg
stos
pop
jmp
dec
lret
pop
or
addl
sub
sti
outsb
and
and
lds
mov
xchg
xchg
hlt
dec
lcall
mov
dec
ret
out
and
in
sub
ds
cmp
sbb
dec
lahf
ds
and
push
jbe
pop
shll
jmp
daa
push
fidivs
push
lock
push
pop
mov
sub
or
and
mov
addr16
and
cli
cmpsb
fildll
int3
dec
mov
repz
adc
stos
jl
xor
adc
fildl
inc
adc
scas
sbb
stc
xchg
aad
sbbl
push
pop
jecxz
shll
add
jbe
icebp
ret
inc
cmp
pop
mov
jns
adc
ja
sti
inc
cmp
sub
rorl
sbb
addb
icebp
ficompl
stos
mov
sbb
push
icebp
push
push
ret
pop
xchg
test
popf
clc
test
insl
or
adc
fbld
pop
pop
xor
inc
clc
cmp
xchg
mov
and
sbb
jp
psubusw
and
mov
lds
push
push
enter
pop
in
das
notl
cmpsl
loop
div
in
mov
nop
fdivr
je
mov
pop
and
push
shll
outsl
inc
mov
fs
push
fwait
std
popa
movsb
in
and
lods
test
sbb
rcll
or
sub
push
daa
dec
and
shrb
mov
and
jecxz
sti
scas
ret
div
push
gs
aas
icebp
push
outsl
loop
out
jns
jle
mov
or
xor
ja
push
iret
mov
sub
adc
aaa
jnp
jg
fdivrs
fimuls
mov
fmull
xor
xor
lahf
push
jns
jle
imulb
cmp
mov
jnp
ret
sbb
or
std
dec
shrl
arpl
mov
mov
in
popa
fildl
cld
push
mov
adcl
ljmp
lods
popf
pop
push
mov
and
outsl
insb
in
cmp
mov
popa
mov
loop
add
xlat
pop
jg
rorl
cli
sbb
cltd
add
pop
mov
hlt
xchg
push
out
add
popf
repz
loopne
or
xchg
push
fucomi
xor
sub
roll
mov
mov
imul
jge
adc
shll
pushf
cld
out
jge
es
stos
cmpb
push
frstor
jmp
popf
test
daa
sub
lods
inc
mov
mov
push
repnz
rorb
jb
inc
into
fcoml
idivb
mov
cmp
push
rorb
xorl
and
movsb
leave
cmc
lret
add
xchg
or
loopne
ja
xor
push
test
mov
insb
jae
lods
xchg
mov
pop
add
xchg
dec
pop
fsubr
sbb
xor
fsts
dec
pop
pop
out
movsb
push
gs
call
or
insl
aas
mov
xchg
xor
adc
clc
cmp
pop
lock
bound
shrb
push
xchg
add
std
add
fs
cmpsb
mov
stc
adc
cltd
mov
pop
dec
adc
cli
xchg
leave
xchg
scas
rolb
push
in
xchg
or
hlt
dec
popa
mov
sub
push
mov
lret
mov
in
mov
cwtl
enter
jnp
fildl
imul
mov
cli
mov
not
push
xlat
test
pop
dec
cli
inc
push
ljmp
movl
loopne
push
cmpl
dec
into
add
gs
sub
ja
div
cmpsl
lock
xlat
jge
insl
mov
dec
fbstp
cld
sbb
jp
xchg
test
sbb
xchg
insl
lret
adc
add
jne
loop
or
lods
stos
sahf
outsl
cmp
jecxz
out
lds
fs
test
push
sub
in
mov
ss
pop
xchg
mov
and
insl
push
push
mov
mov
adc
aam
xor
xchg
rol
shrb
in
repnz
sbb
pushl
inc
pushf
icebp
push
movsb
bound
pop
je
pop
je
loope
shlb
push
push
inc
adc
jp
cmpsb
sub
aam
lods
pop
and
and
sub
mov
jle
mov
mov
cmp
jb
cmp
mov
jmp
mov
add
mov
sbb
mov
adc
sbb
lret
and
inc
daa
std
jae
jg
mov
mov
jns
sub
in
bound
sub
mov
call
nop
add
fcomp
gs
and
loope
pop
cmc
add
or
insb
ds
jg
cmpsb
and
movsb
inc
xchg
orb
dec
mov
sub
adc
rcrl
pop
fisttps
data16
mov
out
mov
lock
push
xchg
jno
adc
sbb
mov
jg
popf
mov
lea
dec
les
movsl
sarb
push
js
test
out
push
popa
pop
gs
daa
add
aaa
rorb
aad
test
adc
sub
jno
leave
and
cmpsb
cltd
sti
and
fildl
pop
mov
call
inc
cwtl
sub
or
aam
or
fstps
clc
sub
sahf
pop
mov
xchg
loope
xor
int
jp
add
jnp
lahf
cmp
dec
rcrb
sti
jp
ret
jge
adcb
fiaddl
lahf
push
sbb
xor
pop
push
jb
cwtl
push
ljmp
and
out
xchg
and
sub
incb
testl
sub
shr
xchg
out
jp
xchg
les
cltd
repz
aaa
jecxz
bound
imul
or
cmpsb
call
sub
shl
xchg
mov
xor
aas
adc
mov
mov
jo
push
fwait
mov
rcll
jbe
push
pushl
daa
mov
xchg
mov
lds
mov
push
jb
lds
xchg
incb
sbb
sahf
xchg
arpl
inc
test
cwtl
jnp
xor
jmp
insl
jne
das
mov
scas
add
jbe
enter
int3
aam
rcl
jecxz
cmc
sub
outsl
or
push
gs
arpl
movsb
pop
pop
xchg
cmpl
cmp
lods
std
or
aad
and
mov
push
mov
xor
in
iret
mov
sbb
nop
vpackssdw
sahf
adc
push
xchg
lods
jno
shl
leave
add
inc
lock
xor
push
sub
fldenv
fcom
es
addl
mov
imull
mov
xchg
and
mov
pop
adc
add
jmp
add
lret
mov
scas
mov
aam
sub
notl
icebp
and
xor
inc
lret
inc
fidivs
mov
mov
es
xchg
outsl
xor
sbb
insl
cltd
sbb
cwtl
lcall
and
xchg
xchg
sbb
rolb
into
fwait
adc
dec
mov
pcmpeqb
out
pop
pop
mov
enter
cmpsb
testl
mov
out
shrl
pushf
jnp
mulb
mov
xor
jge
xor
push
outsb
mov
cs
jle
cmp
stc
jne
dec
jo
add
xor
aaa
ficoml
push
ret
xor
js
jmp
and
adc
xor
pop
rol
std
pop
mov
ja
mov
mov
and
data16
fldt
insl
xchg
mov
in
addr16
push
ljmp
repnz
sar
call
in
xchg
pop
and
mov
push
and
sti
ljmp
sub
xchg
mov
adc
sahf
popa
ret
call
add
scas
addr16
and
jp
add
mov
cltd
push
mov
xor
push
arpl
sbb
add
hlt
aam
xchg
ret
clc
push
loopne
push
popl
push
push
jl
movsb
xor
sub
cld
mov
inc
out
adc
push
or
daa
mov
jmp
jmp
addr16
adc
mov
rcll
popa
sub
ds
call
ja
shl
pop
lahf
movsl
mov
push
popa
xor
rcrl
xchg
loope
jo
fcmove
int
push
or
movsl
xor
jg
ja
cli
inc
xchg
loope
sbb
jmp
mov
push
shlb
in
mov
in
add
mov
mov
inc
inc
adc
test
mov
int3
clc
fdivs
dec
jl
jle
mov
mov
out
dec
jne
int
sub
out
pop
movsl
inc
cmp
and
mov
dec
out
ss
mov
popa
repz
testb
lret
sti
insb
std
frstor
mov
cmpsb
lods
mov
nop
cmp
popa
cli
jge
jecxz
cmpl
adc
push
stos
add
or
mov
js
sbb
lods
mov
in
test
add
ja
int3
inc
xchg
insb
push
dec
jle
enter
cvttps2pi
lea
xchg
cmpsl
jo
rorl
das
testb
push
repnz
js
or
mov
inc
jo
sbb
repz
mov
cli
call
push
mov
sbb
out
in
insl
jge
sbb
xchg
mov
xor
int3
pop
insb
mov
std
icebp
dec
lea
sub
test
sub
dec
and
out
testb
inc
ja
mov
mov
sbb
bound
jb
sbb
in
xor
fwait
lret
popa
xor
rcrl
mov
mov
add
call
inc
stos
es
imul
les
pop
loope
fsts
push
or
aad
sbb
pop
outsl
mov
daa
leave
jp
add
lea
clc
push
and
cli
lcall
jl
insb
jnp
jl
enter
mov
ret
stos
add
dec
not
fs
mov
aas
lods
ljmp
lret
int3
fwait
inc
ret
push
xchg
pop
push
xor
mov
xchg
into
lret
cmp
mov
cmc
mov
cli
out
push
test
xchg
push
xor
lock
jo
sbb
lret
outsb
rcrl
inc
add
shlb
pop
mov
mov
fstpl
sar
imul
adc
inc
ds
mov
fs
sub
movsl
xchg
addr16
or
jb
fisubs
pop
xlat
ret
xor
fbstp
pop
addb
pushf
add
xor
cmc
sub
dec
xor
sub
dec
mov
leave
dec
mov
xor
scas
push
les
rorb
push
cs
xchg
push
mov
popf
dec
mov
mov
out
sub
mov
mov
shrl
push
scas
push
faddl
cmc
mov
movsl
insl
jmp
inc
push
cltd
pusha
and
mov
sbb
bound
cmp
adc
sub
xor
mov
loope
lahf
es
dec
xor
rcrb
mov
pop
aaa
xchg
je
data16
xor
in
arpl
jns
fildll
add
mov
into
xor
rcrl
push
fcmovb
test
cltd
xor
ljmp
push
mov
xchg
cmp
cs
sbb
and
sbb
adc
les
mov
out
push
mov
jo
loop
test
in
sbb
fildll
aas
or
dec
inc
pop
and
sbb
mov
mov
repnz
sub
mov
sub
adc
cs
ja
sti
and
cmp
sti
cmc
stos
mov
mov
push
add
adc
shrl
mov
cmp
in
mov
cld
lods
ja
pop
sarb
lock
xchg
sahf
cmc
jo
sub
pop
fsubl
shr
in
adc
hlt
in
imul
push
sub
xchg
add
inc
jg
in
mov
shll
rcrl
pop
or
rcll
ja
xchg
lods
into
hlt
pop
and
iret
test
aad
lret
neg
mov
lods
xor
jmp
test
aad
jno
aad
lds
jle
push
inc
xchg
mov
adc
lahf
sbb
call
push
in
xor
or
mov
jnp
cli
fsubs
out
inc
scas
add
cmp
push
jp
add
clc
out
lret
pushf
in
jbe
add
ja
jmp
outsb
mov
cwtl
add
arpl
mov
fwait
dec
push
dec
xchg
ret
cmc
cs
sarb
cwtl
push
dec
scas
addr16
aaa
pop
and
fs
mov
adc
push
mov
add
in
cmp
ja
xor
scas
sarb
dec
shll
pop
stc
mov
jecxz
pop
cmp
mov
loop
in
scas
inc
cwtl
outsl
push
aas
rcl
aad
xor
add
push
lret
mov
lret
mov
dec
and
jno
out
popa
fdivrs
pop
cmc
xchg
fadds
mov
mov
aad
js
imull
test
mov
add
lea
xchg
into
or
cmp
stc
or
mov
shll
movsb
movsl
and
sbb
rorb
jp
adc
sti
xchg
dec
mov
mov
subb
fcmove
shr
lds
cmp
xor
dec
mov
inc
cmp
pop
or
cmp
out
cs
cwtl
add
stos
mov
stos
out
lock
cmc
mov
dec
mov
sbb
icebp
je
icebp
bound
aaa
jge
push
std
xor
movl
lods
xchg
std
stc
add
mov
xchg
add
add
and
mov
push
fadds
fstpt
mov
fists
push
jb
js
pop
outsb
les
call
inc
mov
cld
push
rorb
cmp
mov
pusha
and
add
addr16
xchg
loopne
outsl
mov
lods
and
cltd
cmp
aas
jmp
sahf
ret
push
rorb
sbb
jl
jp
push
mov
xchg
loope
movsb
and
mov
inc
mov
mov
into
adc
shll
decb
adc
data16
insl
pop
adc
daa
loopne
cltd
loope
push
xchg
adc
pop
mov
pop
lds
fwait
adc
sahf
cld
fbld
arpl
stc
sbb
roll
dec
dec
jno
adcb
add
mov
into
in
loope
subb
fxam
fdivrs
xor
ljmp
lock
pushf
idivb
fists
shrb
sub
mov
popa
push
gs
rclb
and
xor
pop
cmc
stos
mov
dec
xchg
mov
movb
lock
push
mov
lods
adc
jnp
loop
cmpsl
cwtl
jmp
lea
push
lock
jmp
aam
mull
std
popa
mov
test
jne
jg
pop
test
xchg
sub
pop
mov
mov
blci
lods
dec
xchg
sbb
mov
or
into
jo
pop
lret
int3
xlat
jmp
pop
xchg
das
orb
lds
sub
iret
xchg
sarl
sub
test
or
inc
inc
push
xor
sarb
enter
lods
dec
and
pop
xchg
xchg
outsl
push
insl
cmp
sub
sbb
cwtl
imul
ds
jne
xchg
inc
aaa
push
jmp
ljmp
add
pop
xchg
xor
or
shl
test
addl
sub
pop
push
int3
rcrl
pop
lret
inc
xchg
lcall
mov
outsb
mov
sarl
cmp
push
and
js
dec
fsubp
orb
hlt
cmp
pop
test
aam
cmp
bound
rolb
fistpl
in
xor
jo
and
stc
fcoml
mov
test
sbb
adc
repz
add
lods
aam
in
subl
out
inc
mov
push
into
int3
jl
scas
addr16
xorl
jmp
imul
sbb
jne
mov
jge
pop
aaa
mov
sahf
dec
movb
sbb
sbb
xor
add
mov
orb
leave
mov
adc
mov
mov
xchg
mov
sbb
adc
push
or
add
and
lcall
fs
ja
test
js
mov
and
roll
xchg
sub
addb
push
xchg
sbb
ret
xchg
stos
jg
sti
loop
dec
adc
jge
mov
or
movl
dec
mov
or
icebp
clc
mov
cmpsl
xor
and
inc
clc
fcompl
repz
inc
movsl
es
pushf
arpl
jge
dec
lock
xor
mov
sub
aas
mov
pop
stc
mov
out
push
xchg
push
insb
sub
pop
xor
subb
inc
lret
push
loope
loope
popf
outsb
fcomps
cwtl
adc
push
es
ror
and
rol
jbe
fwait
cmpsl
imul
mov
inc
idivl
lods
cmp
jne
dec
push
test
push
aaa
cmp
fisttps
into
mov
cmp
leave
jns
repz
daa
imulb
cmpsb
call
inc
cmpsl
clc
xor
cltd
jne
xchg
into
pop
ret
ret
dec
xchg
cwtl
shll
cmpsl
sub
ja
adc
xlat
sbb
stc
sub
sahf
movsb
sub
xor
cs
mov
insb
dec
sahf
cmc
imul
pop
adc
out
dec
shll
mov
push
mov
ret
xor
lods
in
cli
push
push
out
pop
mov
xor
sub
mov
ret
mov
lret
mov
addr16
inc
dec
repnz
pop
cltd
jp
out
ljmp
or
jmp
cmpsl
lds
fstpt
dec
popf
loope
mov
cltd
jmp
mov
inc
and
cli
push
jbe
cmpb
in
imul
jecxz
loopne
subb
xchg
scas
pop
bound
cmp
loopne
lea
mov
cmpsl
insb
push
vmwrite
or
jne
sbb
jge
push
sbb
popf
repz
pop
add
mov
or
cld
jmp
pop
mov
lock
out
xor
daa
xor
inc
shlb
insl
and
ror
aam
outsb
pop
mov
pop
sarb
out
sbb
les
out
call
cmp
dec
test
scas
mov
or
daa
dec
xor
fwait
jnp
bound
in
int3
rorl
lods
or
jo
push
adc
dec
adcl
lock
mov
popf
adc
or
test
push
enter
movl
push
fstl
cmp
cmpsl
add
cmp
into
pop
dec
shrb
push
aam
xlat
lcall
cli
insl
fidivs
loope
repz
mov
ret
mov
loope
adc
hlt
adc
scas
lcall
push
lock
xchg
imul
jae
pop
push
and
xor
jecxz
push
jno
cmpsb
sub
push
push
xchg
pop
iret
aas
xor
pop
mov
sub
lds
pop
fisubl
and
pop
or
shl
les
xchg
nop
hlt
jno
outsb
subl
ret
sub
inc
std
inc
test
xor
outsl
mov
pop
fs
jo
jo
or
dec
pop
popf
das
ret
enter
mov
fnstsw
dec
pop
xlat
mov
stc
mov
pop
mov
icebp
mov
ljmp
pop
sbb
pop
shl
stc
leave
mul
in
or
scas
fisubrl
add
pop
pextrw
push
lods
mov
dec
jbe
lea
inc
mov
sbb
push
adc
jl
icebp
lret
jnp
cmp
jl
adc
jg
xchg
pop
sub
lret
dec
mov
lret
mov
sahf
cmp
jbe
pop
bound
adc
dec
mov
into
mov
test
icebp
loope
cmp
mov
sbb
and
out
or
mov
ja
jl
push
es
es
nop
out
jbe
in
lret
mov
rolb
push
in
and
add
mov
sub
fcmovnu
dec
pop
xchg
xchg
loopne
add
push
int
inc
push
in
ffree
or
sub
lcall
scas
dec
pop
pushf
lret
sbb
out
std
pop
movl
lret
add
jp
dec
cltd
and
or
std
pop
pushl
inc
mov
push
cmpsb
mov
mov
mov
push
data16
mov
add
or
cmp
adc
add
push
xchg
fs
cmp
mov
jmp
lods
or
jp
mov
or
mov
pop
inc
sbb
ficompl
xor
mov
mov
sar
fsubr
dec
imul
pop
mov
cmp
xchg
inc
lcall
arpl
adc
int3
ror
lods
pop
cmp
sti
dec
int
pop
add
lret
mov
mov
adc
and
mov
push
adc
xor
mov
mov
adc
dec
or
adc
scas
push
mov
mov
shll
add
and
loope
bound
add
ret
stc
shll
je
mov
sarl
fdivr
lahf
sub
push
inc
mov
dec
sbb
in
jnp
movhps
cmpsl
ljmp
test
popf
inc
imul
pushf
jle
push
cld
push
pop
mov
ljmp
lock
inc
cmp
mov
xchg
test
outsb
mov
pop
sub
js
fucom
shl
inc
xor
fsubs
dec
rcll
imul
sbb
fs
pushf
sub
mov
sar
les
or
es
lea
cmp
jmp
cmp
xchg
cmpsl
pop
ss
dec
inc
stos
clc
cmp
enter
pop
adc
leave
gs
xchg
add
ficoms
inc
pop
aas
leave
sbb
lahf
mov
cmp
shll
fldcw
fisubrl
movsl
sub
mov
add
cmpsb
leave
adc
push
scas
sub
testb
sahf
sbb
inc
shld
test
pop
scas
cmp
push
or
xor
push
push
loope
mov
movl
dec
aad
fldl
aaa
and
loopne
aas
gs
xor
int
popa
dec
in
inc
mov
outsb
mov
inc
ret
mov
loopne
fwait
mov
inc
add
fisubrl
mov
test
jg
cmp
inc
arpl
pop
push
mov
add
outsl
rep
inc
sub
mov
dec
call
pop
inc
cs
icebp
or
dec
xchg
or
rcrl
mov
js
pop
out
and
call
inc
std
js
mov
jne
cmp
sub
test
jb
xor
cmc
sbb
jp
ljmp
scas
or
jno
jbe
or
outsb
sub
and
xchg
cmp
dec
mov
nop
cmp
fdiv
dec
or
xor
les
testl
cwtl
cmp
das
or
sub
shl
push
cmp
ss
jae
pushf
push
push
inc
jno
jle
jecxz
cmpsb
aaa
data16
cmp
repnz
mov
iret
pop
rorb
lods
mov
xchg
cs
mov
test
sbb
movsb
adc
xchg
aaa
dec
imul
rcl
stos
jbe
cmpsb
pop
out
ljmp
mov
push
test
ljmp
jg
out
scas
stc
jae
adc
in
jge
outsl
or
sbb
mov
aaa
adc
sub
addr16
cmp
mov
inc
mov
icebp
fnstsw
ds
add
shld
leave
add
sarl
adc
scas
pop
mov
mov
inc
add
mov
jae
mov
shl
jmp
xchg
lock
aaa
mov
xor
or
insl
adc
sub
aaa
and
js
fbld
outsb
cmp
rolb
negl
hlt
stos
mov
aad
push
std
adc
fld1
xor
pop
sub
addr16
and
mov
dec
adc
outsb
add
xor
bound
std
data16
xor
jge
orl
les
mov
movsl
ret
lcall
pop
xchg
xchg
pop
xor
cmp
lods
js
aam
cmp
mov
cmc
ja
cwtl
subb
mov
pop
test
jo
lds
adc
mov
jne
aam
jmp
or
mov
aaa
rorb
pop
lds
mov
push
fwait
sub
shlb
stc
xor
into
roll
add
cwtl
inc
push
pop
test
push
mov
loop
xchg
fs
jg
mov
rorb
fdiv
xor
test
insl
sbb
sub
test
cltd
cwtl
sub
xchg
fs
and
jne
push
sbb
mov
ljmp
sbb
jecxz
push
sbb
int
cmc
sar
mov
jno
imul
mov
inc
daa
in
inc
in
repz
jge
jg
mov
scas
movsb
jmp
movb
sub
push
jmp
mov
fldenv
jo
lods
arpl
pop
dec
push
insb
movsl
out
out
or
xor
out
jmp
mov
xchg
mov
cmp
mov
fimuls
mov
mov
out
dec
stos
push
jno
ds
js
xor
shrl
sbb
push
bound
or
push
repz
mov
scas
inc
fstps
out
out
lds
nop
jnp
sti
aaa
dec
xorl
sub
or
mov
out
jo
cmp
dec
mov
rcr
mov
in
out
jno
inc
gs
xor
outsl
adcb
xchg
or
pusha
orb
fwait
in
movsl
addr16
mov
pop
jae
cltd
mov
pop
xchg
test
and
mov
popa
adcb
cmc
inc
cmp
mov
cli
push
and
mov
cmp
outsb
cmp
jae
test
in
mov
lea
push
fisubl
mov
sub
dec
loop
jge
or
sbb
mov
and
ds
out
imul
rorb
dec
cmpsl
ja
pop
push
pop
popa
dec
and
dec
and
mov
clc
jns
fidivl
out
loope
cmp
mov
fwait
in
int
fsubrl
xlat
cmpsl
jno
fidivrs
jno
jg
push
ret
test
push
filds
imul
xchg
or
hlt
push
aaa
pop
inc
inc
ljmp
imul
sbb
enter
pop
mov
out
sbb
movsb
or
cld
clc
mov
fdivl
pop
cltd
in
ss
aam
loop
adc
nop
inc
pop
pop
cwtl
movsl
outsb
xchg
jo
out
lea
leave
lcall
mov
subl
sbb
mov
sub
lret
xor
int
jne
pop
adc
aad
fnsave
mov
or
fwait
adc
leave
rep
ret
sbb
xchg
rclb
push
into
fstp
xor
fwait
repnz
in
jmp
test
jae,pn
xlat
iret
je
xor
mov
mov
and
sbb
cld
or
test
out
stos
rcll
inc
add
or
mov
sti
out
ja
pop
and
fstpl
daa
pop
or
fstl
mov
mov
data16
test
imul
arpl
or
fdivr
mov
mov
adc
popa
and
stc
mov
addr16
inc
push
pop
xchg
mov
jno
in
push
jge
sar
pop
mov
cmc
repz
cmp
sub
mov
xor
shlb
xor
jmp
ret
dec
mov
fcompl
popf
mov
pop
imul
into
sbb
ljmp
lock
jns
mov
mov
add
sub
out
addr16
jmp
sub
mov
lds
mov
lret
push
jnp
mov
fisttpll
push
icebp
mov
cmp
mov
pop
sub
loopne
popf
test
aaa
sbb
push
xchg
xchg
mov
xorl
xor
movsl
jmp
ja
jmp
iret
hlt
popf
outsl
lds
inc
pop
das
and
xor
aam
data16
mov
jmp
mov
fs
mov
or
sub
ror
and
xchg
fsubrl
addb
punpckhdq
mov
push
push
shrb
or
pop
aad
inc
push
in
sub
add
cmp
mov
insl
das
xchg
push
js
fnstcw
xor
aam
leave
mov
idivl
inc
xchg
xor
jl
mov
bound
lret
sbb
scas
and
add
aaa
dec
aaa
jae
test
xchg
sbb
inc
fcom
fdivrl
sbb
out
mov
loope
cmpsl
push
and
dec
lds
sbbl
mov
aad
out
xchg
add
cmc
jnp
gs
sbb
cli
mov
fldt
add
jg
pop
jo
leave
sub
or
fadds
sbb
fxtract
cmp
inc
int
pop
pushf
mov
fisubrl
rolb
push
xchg
xchg
std
xchg
ja
xchg
xchg
lock
mov
sub
stos
leave
aam
lds
inc
and
stc
stos
jg
push
test
or
mov
insb
dec
push
adc
outsl
pop
xor
or
pushf
jmp
adc
loope
mov
inc
clc
sbb
ret
jge
bound
fwait
push
repnz
xor
out
shlb
popa
cmc
xchg
ljmp
ds
or
data16
and
fdivrl
add
xor
xchg
jno
rol
sbb
addr16
stos
fcmovu
xlat
std
mov
out
aas
sub
jge
in
jl
les
and
movsl
test
push
mov
add
push
add
in
sti
fld1
xor
and
int3
dec
fwait
mov
les
andl
pop
sarl
xlat
inc
jns
jnp
mov
fisttpl
lret
jae
cmpsl
std
sbb
jbe
addb
scas
sbb
mov
cmp
mov
aas
push
add
imul
mov
push
sbb
pushf
lea
jns
test
orl
jge
mov
lods
jnp
pushf
aas
push
hlt
out
and
lods
xchg
xchg
in
xlat
scas
and
lcall
and
add
mov
fldcw
kaddb
enter
les
jb
pop
int
inc
loope
shll
xchg
ja
or
dec
adc
jno
jle
inc
sub
gs
fsubrl
sbb
mov
jbe
cmpsl
mov
pushf
ret
dec
daa
int3
imul
popa
mov
pushf
xor
insl
sbb
and
adc
adc
cmc
pop
push
subb
inc
jp
push
push
cld
into
ror
fstpl
hlt
call
adc
mov
push
push
pop
int3
xchg
xor
pushf
mov
mov
out
pop
pop
jle
xor
inc
sbb
rclb
pusha
imul
enter
and
pop
cmp
inc
fwait
popaw
addr16
daa
xor
inc
loop
inc
and
mov
into
and
jmp
push
sbb
fsubr
add
in
cmp
cmc
sub
mov
xor
int
jo
mov
sub
test
jg
rorl
xchg
insb
pop
inc
test
mov
mov
mov
cmpsb
ds
xchg
fiadds
sub
repz
pop
shlb
jo
cmpsb
lods
push
aam
ss
scas
scas
and
pushf
mov
inc
or
shr
out
xchg
clc
ds
ja
and
xlat
mov
add
cmp
add
aam
mov
dec
notb
ret
popa
sbb
setp
dec
cmpsb
adc
or
mov
cmp
inc
repz
mov
ret
pop
ret
inc
sub
out
add
dec
push
lret
das
mov
or
rcrl
and
push
outsb
test
inc
es
xor
sub
xchg
aad
iret
out
imul
mov
cmp
and
dec
scas
cmp
sub
sbb
xor
or
out
xchg
std
insl
push
cmpsl
js
jge
outsl
and
push
mov
insb
sar
dec
sbb
fdivl
jg
cmp
mov
ret
hlt
xor
add
cli
jmp
jb
sub
push
fstpt
rcll
inc
lds
dec
mov
lods
mov
sub
int
ja
test
enter
xor
aaa
rcrl
jo
leave
icebp
mov
xor
and
or
inc
dec
mov
imul
and
cmpsl
sub
popf
push
mov
loope
inc
mov
dec
je
lods
mov
dec
je
dec
xor
out
gs
lods
sub
mov
or
xchg
in
jg
xor
xor
sub
scas
mov
mov
cltd
mov
ja
inc
jmp
pop
xor
adc
dec
or
mov
dec
mov
lret
stc
std
mov
fwait
push
cmova
push
jmp
addr16
shr
pop
push
xchg
or
nop
loop
cmpsl
sbb
test
hlt
inc
inc
enter
lods
xchg
es
neg
out
pop
js
jnp
sar
dec
inc
xor
jnp
int3
shrl
xchg
decb
es
movb
jae
mov
daa
es
jg
loopne
inc
outsl
adc
mov
jbe
int
push
and
int3
mov
scas
mov
test
jae
mov
enter
daa
mov
movsl
stc
lmsw
jmp
xor
mov
fcoms
sub
ljmp
mov
mov
lock
test
cmp
xchg
imul
push
add
cmpsb
scas
jmp
out
jmp
inc
mov
aas
and
mov
xchg
scas
or
cwtl
dec
inc
test
test
xor
out
cmp
cld
xor
xor
jns
ja
fsub
fwait
xor
lret
test
mov
cmp
dec
lea
add
xchg
lcall
int3
sti
pop
loope
push
push
sbb
fs
dec
lods
mov
dec
enter
jbe
loopne
scas
outsb
ss
test
lret
mov
mov
mov
mov
xchg
dec
or
mov
icebp
nop
add
add
les
dec
lret
dec
out
cwtl
push
sbb
nop
push
rcrb
or
sbb
inc
bnd
lahf
scas
add
movsb
xchg
jbe
pop
cmp
fsub
outsl
add
adc
fidivrs
xor
je
cmp
ret
xchg
or
add
arpl
push
mov
pop
call
pop
sub
inc
sub
sbb
lea
out
movsl
cmp
dec
cmc
push
mov
sub
inc
cmpsb
or
xor
jp
jecxz
or
les
dec
add
pop
stos
xchg
jp
dec
daa
mov
push
cmpsb
mov
sub
or
inc
mov
cs
loope
push
adc
inc
ja
aad
ror
and
sahf
out
add
cmp
cmp
mov
mov
movb
pop
test
rcll
call
pop
mov
lahf
fwait
nop
jb
push
pushf
mov
inc
lock
sbb
push
sbb
ret
jmp
add
push
and
es
mov
dec
stc
movsb
loopne
pop
sahf
aaa
xor
inc
jae
lahf
pop
push
jmp
jmp
aas
loop
lahf
xor
pop
adc
mov
mov
lahf
adc
pusha
pop
mov
and
push
inc
add
push
mov
pop
add
int
imul
inc
hlt
xchg
or
lahf
jg
fwait
imul
lcall
jle
lods
mov
cli
scas
aaa
pop
inc
mov
fldt
jo
jbe
js
bound
xchg
sub
xor
loop
arpl
imull
in
or
xchg
popf
mov
jge
adc
push
cli
sub
out
mov
shrb
ret
shll
pop
xchg
jg
lret
insl
dec
add
fldenv
mov
dec
jmp
lock
pop
jns
lret
in
lods
je
xor
test
mov
dec
adc
repz
xchg
aad
pop
sbb
jmp
mov
addl
mov
dec
stos
and
cmp
push
lret
inc
mov
sbb
das
outsb
add
mov
scas
cmp
stos
mulb
mov
and
icebp
icebp
test
xchg
push
lfs
cmp
jo
push
lcall
sbbl
adc
jb
dec
popl
mul
aaa
loop
in
inc
cmp
gs
scas
mov
cmp
pop
inc
adc
les
jecxz
push
sar
ja
out
lods
inc
xchg
pop
jge
push
pop
pextrw
sbb
imul
enter
add
movsb
rolb
dec
jmp
xchg
cmc
cmp
xchg
cmp
mov
jns
push
lock
and
adc
dec
loope
in
and
mov
pop
fcomp
fadds
jle
push
and
into
jmp
sub
ffreep
jl
xor
es
mov
stos
cli
sbb
fwait
pop
adc
scas
cwtl
in
div
sub
cmp
sti
lds
pop
fwait
scas
add
inc
pop
test
lods
xchg
mov
into
into
or
lcall
push
pop
cwtl
lahf
push
jmp
cmp
scas
clc
daa
push
adc
pop
scas
jle
in
loopne
lahf
mov
sub
test
je
ljmp
js
cwtl
adc
es
push
mov
jno
lret
push
and
or
les
mov
mov
or
cmp
jae
mov
mov
xor
inc
mov
pop
data16
cmp
mov
fcompl
adc
sub
mov
cs
mov
cmp
or
pop
push
fwait
mov
cmp
or
pop
add
lret
dec
sub
imul
adc
clc
mov
pusha
cmc
mov
adc
popf
or
mov
test
imul
fwait
sahf
or
call
sub
dec
in
testl
nop
pop
out
and
scas
cmp
sub
out
mov
add
test
jno
int3
scas
push
fdivs
mov
les
notl
jne
inc
mov
jecxz
int3
push
out
and
xchg
dec
inc
cmp
aad
scas
jno
cmp
iret
daa
in
data16
and
fidivs
sub
loope
andl
jns
inc
dec
out
mov
jge
jo
xchg
add
inc
and
push
cmp
adcl
push
push
sbb
lods
adc
cmpsl
add
adc
jmp
push
push
adc
int3
stc
loope
push
add
test
sbb
loop
inc
mov
stos
add
iret
dec
lock
pop
mov
sub
sub
mov
and
outsl
mov
cmp
ljmp
shl
movups
ret
test
aaa
fcmovu
insl
mov
sbb
fsubl
out
jns
inc
lcall
jl
incb
out
call
fptan
hlt
sub
pop
loop
dec
xchg
mov
loop
mov
gs
das
aam
cmp
enter
out
lods
mov
sub
aam
in
and
test
test
lret
xor
loop
test
mov
cld
dec
push
xor
mov
imull
ja
push
dec
inc
mov
xchg
mov
pop
es
popa
fdivl
lret
and
xor
lcall
jb
sbb
jg
adc
sbb
jns
xchg
das
add
pop
sbb
mov
dec
ja
sub
cmp
sbb
xlat
push
mov
dec
in
mov
cli
xchg
sbb
mov
decb
dec
sbb
mov
and
xlat
lods
cmc
mov
lods
xchg
bound
mov
or
add
fidivrs
mov
mov
stos
xor
nop
pop
pop
add
push
mov
stos
fidivrs
mov
pop
imul
sbb
add
js
pop
stos
mov
pop
push
mov
cld
sar
mov
xor
ljmp
scas
jecxz
sub
xchg
leave
test
stos
jmp
push
cs
add
shlb
xor
dec
pop
icebp
and
loope
jge
dec
sbb
jo
add
fcoms
mov
cmp
pop
sbb
xchg
and
aam
test
clc
or
loope
outsl
xlat
aam
mov
pusha
rcrb
adcl
ret
scas
or
or
cmp
dec
cld
pop
inc
xor
cmp
outsl
mov
cmp
bnd
lret
jne
pop
pop
cs
jne
ds
cmp
test
ljmp
outsb
cmpsb
cmpsb
notl
push
dec
sahf
push
inc
mov
inc
push
sarl
adc
mov
mov
dec
xor
inc
loop
xchg
in
mov
lods
in
xchg
xor
mov
inc
push
cmc
push
cmc
ja
jecxz
push
xchg
stc
aas
lods
sahf
gs
cmp
cmpsb
pop
enter
xor
pop
xor
lcall
xor
xchg
cmp
lods
cmp
mov
push
cmc
add
hlt
icebp
out
or
sti
pop
push
xchg
mov
xchg
insb
jmp
sub
frstor
push
stos
mov
push
pop
enter
cmp
cs
xchg
outsl
cmp
lahf
mov
sti
popa
adc
pop
out
mov
mov
sbb
popa
push
jnp
or
inc
pop
or
xor
inc
inc
andl
es
jbe
cld
je
mov
repz
je
push
loop
aad
pop
fisubs
xor
dec
pop
imul
xchg
arpl
in
mov
pushf
mov
ret
cs
in
popa
mov
sbb
scas
push
jmp
lret
xorl
sahf
lods
in
mov
and
xchg
mov
inc
mov
sub
stos
je
jmp
addr16
jp
hlt
pop
or
cli
and
mov
mov
lods
inc
jns
test
out
jle
loopne
faddl
in
mov
std
lock
pop
mov
mov
sbb
mov
push
xor
lods
pop
insb
test
mov
dec
jae
mov
addr16
je
sbb
sahf
stos
mov
inc
mov
outsl
xchg
or
pop
mov
xchg
jne
imulb
push
lret
dec
pushf
mov
jg
xor
sub
push
in
ljmp
mov
add
mov
push
lret
rcrl
dec
stos
push
mov
outsb
nop
sbb
dec
jp
mov
sbb
xchg
stos
push
shlb
inc
ds
push
mov
or
dec
xor
sbb
fcomps
jge
cmp
jle
mov
imul
add
jmp
insl
iret
jg
pushf
dec
xchg
or
out
add
cmc
arpl
jnp
cmp
stc
loop
ret
cmc
aad
movsl
or
xchg
loop
sub
xor
out
mov
bound
test
fsubrl
add
jae
mov
cmp
rcll
sbb
leave
mov
fmul
ret
and
sub
lcall
fstpt
fists
inc
adc
pushf
fbstp
cmpsl
mov
inc
mov
xor
shlb
rcrb
or
inc
addb
shrb
mov
xchg
jns
or
out
xchg
inc
dec
mov
jle
push
mov
add
in
and
adc
daa
js
dec
icebp
mov
or
mov
lcall
cli
iret
scas
cmp
fiadds
roll
mov
add
int
dec
mov
adc
sarb
sbb
sti
or
pop
jb
xchg
arpl
sub
mov
cmpsb
popw
insb
inc
in
fsubl
fcoml
std
xlat
push
jecxz
xchg
mov
add
push
cmp
mov
js
dec
es
cmp
daa
lcall
icebp
pusha
push
ds
lock
jno
pop
shlb
jle
mov
pop
lret
jnp
pop
mov
cld
mov
loop
test
in
popf
add
sbb
push
test
mov
pop
cmpsl
and
gs
cmp
xchg
into
jnp
mov
inc
jmp
clc
lods
cmp
cmpsb
xchg
and
jnp
mov
or
inc
xlat
adc
data16
push
idivb
cmp
leave
jbe
fidivs
test
mov
inc
pop
or
aam
fnsave
repnz
psllq
dec
or
jecxz
in
mov
sub
cli
add
clc
push
dec
adc
out
push
add
cmpsl
mov
xorl
cli
in
nop
jp
lret
fcmovnbe
xlat
push
inc
test
das
mov
adc
mov
lock
sbb
mov
imul
and
insl
xchg
mov
out
std
xchg
add
je
shlb
adc
mov
xchg
sar
daa
aad
mov
add
pop
dec
sbb
mov
mov
pop
insb
sub
stos
fisttpl
popf
stc
leave
mov
mov
push
repnz
jl
push
enter
lds
test
mov
test
or
cmpsl
push
xor
pop
mov
xor
jmp
das
insb
out
cli
int3
push
inc
xor
dec
mov
aad
dec
adc
fldt
int
es
movsl
dec
cmc
cmp
lahf
inc
pop
dec
idivb
icebp
data16
stc
test
jb
or
xchg
cld
mov
repnz
roll
rorb
jmp
mov
mov
int3
popa
lods
repnz
xchg
js
imul
and
out
or
imul
adc
jp
pop
stos
daa
subl
dec
jne
add
jne
mov
adc
popl
jb
jge
push
push
popa
xchg
repnz
roll
adc
popf
push
jmp
cltd
xor
dec
or
mov
cld
jbe
addb
push
popf
lret
xor
js
shr
xor
leave
push
cmc
adc
into
and
mov
push
xchg
adc
jbe
dec
push
aam
lcall
jns
xlat
mov
push
loopne
hlt
cmp
imulb
mov
scas
jmp
mov
dec
jle
sbb
pop
int3
lcall
fcompl
mov
js
scas
imul
xlat
out
sbb
dec
sub
xor
xchg
lret
cmpsl
jl
sub
mov
stos
into
pop
pop
sbb
data16
mov
or
test
outsl
fcmovnbe
fisttpll
push
mov
mov
fcmovnb
fsubrs
sbb
repz
pop
xor
mov
mov
xor
pop
dec
pop
pop
icebp
fwait
outsb
in
movsl
mov
mov
mov
mov
rorb
cmp
and
and
xchg
add
jbe
cmp
jae
dec
ja
jecxz
faddl
bound
and
mov
and
adcl
imul
inc
xor
clc
push
iret
or
and
cltd
notb
pop
xchg
pusha
call
mov
sub
vpgatherdq
add
leave
inc
ss
sub
pop
xchg
insl
dec
cld
aam
shll
or
inc
xlat
pop
and
andl
mov
fadds
sub
xor
cmp
sbbl
in
pop
cmp
jne
loope
jmp
in
pop
jb
dec
leave
stos
dec
xchg
xor
jmp
xor
push
jo
mov
mov
lahf
aaa
cs
add
push
scas
push
or
in
aaa
fldenv
test
jae
add
jle
or
mov
fs
lret
cli
pop
adc
test
xor
imul
jp
jl
push
icebp
addr16
mov
rcll
mov
filds
mov
lea
daa
jnp
push
dec
hlt
sub
popa
adc
xchg
pop
xor
mov
loopne
je
push
in
inc
inc
arpl
cmpsl
push
addr16
mov
add
cli
push
mov
into
push
fcoml
das
push
push
xchg
xchg
fs
imul
aaa
loop
jb
shl
sbb
inc
cmp
add
andl
ljmp
push
sub
js
and
insb
f2xm1
enter
out
loop
sbb
add
fnstcw
pop
jge
sub
int3
sub
mov
mov
cmp
fadds
les
es
xor
mov
push
test
iret
ja
pop
and
jg
sti
dec
cli
mov
insb
cli
das
inc
test
xorb
loopne
push
pop
mov
cmp
insl
divb
test
or
test
mov
jo
xor
xchg
dec
adc
aam
out
xor
jl
and
push
xchg
pop
jns,pn
aaa
dec
scas
xchg
pop
xchg
ficompl
xchg
inc
mov
or
push
shlb
stos
jne
pop
mov
sahf
enter
shll
es
adc
inc
add
xor
mov
inc
ret
aad
mov
inc
lock
and
stos
mov
pop
add
test
sbb
cmpl
jp
mov
sti
dec
pop
sbb
lret
sub
outsl
mov
outsl
inc
adc
sbb
repz
mov
sbb
test
addr16
ja
adc
dec
fcmovnb
aad
jae
lcall
test
sub
mov
push
out
xor
faddp
pop
or
mov
or
or
leave
jo
push
sub
das
addr16
mov
inc
pop
jmp
mov
dec
lret
lods
mov
hlt
adc
or
dec
mov
and
ret
cmpsb
dec
or
mov
out
das
fwait
dec
dec
jo
sub
xor
fwait
cmp
inc
shrl
pop
and
clc
push
push
mov
mull
pop
adc
pop
sub
or
and
cld
popf
imul
pop
in
add
cmp
sbb
mov
test
xlat
push
insb
ficomps
xchg
gs
dec
outsl
adc
jns
mov
jnp
xor
jnp
jg
pop
fwait
out
push
test
das
jg
push
cmp
fucompp
aaa
ja
mov
cmp
out
scas
sbb
mov
cmp
adc
pop
xchg
jp
mov
xor
or
cli
lret
cmp
pop
inc
push
dec
std
push
sbb
cmc
cmp
fidivrs
sti
loop
cmpsb
push
test
adc
mov
js
test
negb
push
xor
shrb
sbb
adc
push
sbb
mov
cmp
add
xor
sbb
xor
mov
and
mov
sbb
cmp
out
add
sbb
nop
cmp
xor
clc
idiv
cmp
jmp
mov
sub
xor
js
lret
jo
dec
mov
fucomp
push
dec
pop
stc
or
subb
cmpb
mov
xor
cld
jg
mov
mov
pop
sahf
in
sub
stc
les
repz
into
xchg
sbb
inc
int3
pop
xchg
or
add
popa
sbb
int3
mov
popf
out
adc
add
cs
xor
test
mov
lret
inc
cli
test
xchg
int3
cmp
imul
lret
negb
nop
sbb
loop
mov
mov
hlt
cli
xor
xor
mulb
test
andb
mov
adcb
int
mov
lods
lcall
xchg
mov
test
push
orb
mov
jp
les
cltd
outsl
cs
fs
out
int3
test
fidivs
out
jae
out
xor
out
in
out
daa
and
xor
cmp
inc
andl
cltd
sub
add
jnp
scas
xchg
jp
dec
and
sbb
rolb
push
fidivrl
idivb
mov
int
rolb
ret
out
in
dec
popl
and
cmp
push
cmc
sbb
scas
hlt
cltd
loope
push
jne
xor
les
int
sub
push
xor
jne
xchg
push
cs
add
mov
daa
xchg
in
push
lfs
push
clc
fsts
mov
cmp
cmp
mov
push
inc
mov
cmp
and
stos
push
push
lea
sbb
repz
jg
jmp
xchg
cmp
into
pop
cmp
scas
outsb
cmc
notl
cli
js
mov
ret
sub
cmp
std
addl
adc
insl
outsb
adc
addl
imul
lds
mov
sub
pushf
xchg
jl
sbb
mov
sarb
sub
cs
testb
jecxz
cwtl
push
sbb
inc
or
dec
push
sub
jno
jbe
int
arpl
push
inc
inc
rcll
fidivs
sbb
cld
cmpsb
cmp
fcoml
clc
addr16
nop
push
aam
rclb
push
and
loopne
addr16
pop
dec
mov
out
push
test
lahf
ljmp
push
inc
in
cmp
scas
cmp
dec
test
lret
cmpsb
xchg
lcall
outsl
insb
jmp
sbb
insl
iret
jne
in
es
fiaddl
phaddw
xchg
aam
push
and
push
cwtl
test
sub
int
cs
inc
lahf
addb
cli
jecxz
jne
outsl
cmp
push
push
insl
call
pop
ja
adc
add
and
jb
pop
je
test
mov
imul
iret
mov
sub
add
aaa
mov
jno
sbb
scas
stos
dec
movb
xlat
xlat
mov
mov
or
negl
jns
pop
push
jl
int3
daa
inc
nop
sbb
adc
aam
xchg
push
push
jb
leave
lret
inc
loopne
outsl
inc
mov
lret
adc
pop
push
sbb
xchg
popf
aad
lock
push
xchg
sub
jmp
es
jge
jno
es
xorb
std
pop
inc
jae
inc
dec
sahf
and
sub
loopne
mov
and
mov
pop
lcall
push
pop
sahf
cwtl
ljmp
mov
xor
jnp
or
lret
cmp
out
xchg
sbb
nop
test
lahf
int3
dec
lahf
aam
and
leave
push
mov
xor
inc
jbe
mov
xchg
mov
push
and
sbb
repnz
popf
adc
adc
jnp
inc
sub
aaa
fs
pop
cmpsb
imul
cmpsb
or
sbb
add
lods
add
filds
add
pusha
dec
testl
sub
lret
mov
mov
fisubrl
lcall
add
sbb
cmpsl
pop
int
mov
stc
xor
mov
lock
or
mov
inc
loop
repz
xor
jge
jns
add
mov
xchg
pop
inc
inc
mov
negb
push
popf
xchg
mov
mov
mov
sbb
mov
xchg
xlat
jl
test
sar
mov
fstl
cltd
out
jb
pop
inc
gs
cmpb
divl
lock
xchg
mov
cwtl
out
pop
push
insb
call
scas
push
dec
or
test
add
into
jmp
cltd
scas
mov
in
aam
mov
pop
jbe
imulb
aas
shll
mov
jnp
xchg
jns
pop
pushl
aas
jp
mov
sti
movsl
xor
rorb
inc
fstpt
stos
or
setg
xchg
roll
scas
aas
mov
sar
xor
mov
mov
xor
and
loopne
int
push
dec
pop
in
and
adc
pop
icebp
out
dec
insl
inc
les
dec
aam
pop
and
jo
mov
xchg
arpl
out
sub
inc
or
lock
jl
enter
mov
sbb
push
ljmp
dec
jg
movsb
lcall
hlt
dec
sbb
loope
stc
cltd
sar
mov
in
cli
sbb
adcl
cs
jnp
sub
xchg
push
dec
test
popf
pop
jmp
mov
push
ret
repz
jge
mov
jo
cmpb
adc
xlat
or
in
dec
daa
movb
sbb
sbb
out
pop
adc
dec
push
sbb
popa
xlat
inc
cmp
leave
jecxz
ss
mov
call
enter
popf
dec
movsl
sbb
lret
push
call
mov
mov
and
and
pop
shrl
cltd
hlt
ficoml
xor
imul
pop
cmp
int3
inc
mov
add
jno
in
sub
insb
repz
cmp
cs
inc
and
leave
mov
mov
push
xchg
pop
pop
lods
pop
adc
idivb
xorb
cli
dec
test
xchg
loope
fcoml
sarb
xchg
je
dec
pop
dec
jbe
dec
repz
push
adc
dec
mov
js
xchg
xchg
add
neg
popa
mov
je
mov
fs
data16
xor
test
push
loopne
jns
mov
mov
movsl
jecxz
imul
push
ret
mov
mov
mov
cmp
push
lcall
popa
lret
aaa
es
push
add
mul
stos
jns
scas
imul
ficompl
fstpt
sub
sub
das
aas
fistpll
adc
fisubrs
mov
cmp
lock
addr16
mov
sub
xchg
inc
or
mov
imul
lods
les
repz
in
adc
and
inc
jno
repnz
movsb
mov
insb
sbb
insb
pusha
pushf
sub
jne
aas
dec
lock
dec
sub
shll
mov
fcoml
and
ss
mov
add
xor
negl
xchg
sbb
adc
push
ret
xor
pop
jmp
fbstp
pop
or
lods
scas
mov
lds
stos
test
repz
or
das
test
shl
add
inc
rcl
adc
std
pop
mov
inc
adc
out
insb
bound
in
test
push
adc
jno
repnz
lahf
dec
int
dec
mov
or
push
lds
push
lea
and
pop
rorl
adc
imul
xchg
fadds
xchg
mov
mov
push
mov
jmp
pusha
nop
outsl
fucomp
mov
inc
pshufw
inc
cmp
mov
or
cwtl
jns
jb
scas
rorl
sahf
hlt
or
xchg
dec
dec
pop
mov
mov
enter
pop
lods
xchg
or
push
mov
shl
adc
loop
fldl
outsb
lods
stos
repnz
pop
std
shlb
mov
shr
adc
push
mov
xchg
aaa
mov
jecxz
xchg
push
mov
jno
jns
adc
pop
push
inc
icebp
mov
and
or
out
gs
dec
cmp
pop
xchg
stc
sub
scas
push
mov
scas
cmpsb
testb
dec
int3
js
dec
cmp
stc
sbb
and
imul
sbb
adc
mov
cmp
scas
inc
cmp
inc
ja
xchg
xchg
daa
pop
fcomps
mov
and
jnp
xor
push
sub
pop
loope
inc
cmp
jae
mov
sbb
out
fidivl
mov
mov
mov
mov
sti
arpl
push
cmp
mov
insb
notb
arpl
imul
ret
pop
icebp
xor
stc
pop
push
dec
mov
mov
inc
pop
sti
pop
inc
xchg
lcall
addr16
mov
xchg
es
xchg
and
lret
movsl
gs
out
unpckhps
lcall
mov
lret
jecxz
call
cmp
clc
addr16
pop
xor
xchg
and
dec
nop
mov
inc
add
sti
or
push
outsl
icebp
mov
or
movsb
shlb
mov
dec
test
rorl
scas
adc
dec
push
dec
sbb
pop
sbb
or
ret
js
mull
sbbb
xlat
jp
and
incb
les
xor
out
iret
mov
cmp
add
push
mov
push
addr16
testl
ss
dec
movsb
add
mov
adc
xchg
ja
ret
cmp
stc
mov
out
jne
xchg
test
cmpsl
sbb
incb
fcmove
inc
daa
add
jge
xchg
les
cmpsl
cwtl
or
stos
pop
xor
mov
leave
in
jp
fisttpl
mov
aaa
scas
out
jb
lds
push
or
push
adc
xchg
in
jmp
std
mov
xchg
mov
jo
pop
jo
mov
jb
loopne,pt
shlb
sbb
or
mov
or
mov
ret
insb
xchg
add
pop
fbld
mov
mov
and
fbld
gs
adc
adc
movsl
cmp
add
xor
das
into
inc
push
xchg
dec
or
lock
out
negb
dec
fistpll
in
and
cmp
adc
fldl
mov
cmp
add
lock
mov
in
aam
jp
mov
push
mov
fs
jae
test
inc
or
jecxz
fsubs
pop
shlb
sbb
clc
and
fwait
jp
mov
aaa
stc
pushf
std
mov
add
push
cmp
sbb
add
fcompl
add
in
mov
loope
xor
jnp
xor
and
ret
in
push
push
mov
mov
test
fimull
push
inc
daa
in
push
ljmp
pop
icebp
das
aaa
imul
sahf
xor
mov
and
jg
fisttpl
mov
push
jmp
add
dec
jecxz
aad
je
fwait
pop
fldt
mov
pop
inc
arpl
les
test
jecxz
jmp
dec
push
popf
jbe
pop
xor
jp
cltd
sub
out
xor
or
mov
in
divl
scas
rcll
push
mov
mov
popa
sbb
xchg
clc
imul
mov
nop
mov
xchg
outsl
mulb
inc
mov
pop
ljmp
sbb
popf
pop
dec
jle
and
cmp
or
cmc
pusha
clc
cmp
sub
lods
addr16
enter
cld
sbb
ss
fucomip
inc
cmc
popf
call
xchg
mov
add
arpl
rorb
cmp
cmc
iret
jno
or
jmp
pushf
xchg
fwait
stos
repz
mov
xchg
sti
add
fstpl
push
outsb
lret
and
push
and
push
mov
lock
ja
mov
push
je
and
aaa
addr16
or
movl
and
and
xor
jmp
and
push
lcall
fwait
imul
sbb
pop
popf
cmp
xchg
pop
adc
addr16
jae
imul
pusha
addr16
xchg
stc
icebp
add
fincstp
icebp
sarl
inc
sbbl
jae
cmp
add
or
fwait
rcl
or
movsb
pop
dec
addr16
mov
filds
into
and
pushl
mov
push
add
sbb
sub
repz
adc
sub
jo
and
mov
test
xor
mov
or
and
mov
imul
mov
into
sbb
and
xchg
xor
xchg
lret
rcrb
cmp
xchg
sbb
lret
mov
push
rcrl
or
xor
push
aaa
sbb
pop
mov
mov
jo
pop
inc
jecxz
cmp
hlt
imul
cmpb
mov
or
adc
lcall
adc
pop
ret
and
jns
add
int
mov
popa
add
mov
addr16
mov
jo
dec
in
sahf
out
jnp
aas
adc
dec
dec
cmpsb
sahf
inc
das
add
arpl
outsb
push
test
mov
das
fmul
inc
pop
and
cli
gs
stos
sar
add
arpl
in
sbb
cmp
in
mov
stos
mov
or
inc
and
mov
es
iret
movsl
adc
test
sbb
inc
lock
mov
sbb
xchg
mov
outsb
adc
xchg
sub
lret
mov
jno
cmp
into
push
mov
neg
mov
cmpsl
enter
push
enter
mov
and
loopne
push
mov
xor
jns
mov
out
imul
xchg
sti
test
jecxz
add
out
adc
sahf
aaa
adc
push
cmp
jbe
jne
lock
imul
xchg
and
and
add
shll
fiaddl
inc
adc
push
and
mov
xlat
lods
pop
out
jb
pop
jg
in
je
cmp
lcall
inc
insb
out
int3
test
mov
xchg
xchg
add
das
in
pushf
scas
adc
lcall
bound
lock
adc
adc
ja
jne
sub
imul
scas
ja
scas
ret
lret
out
mov
xor
or
mov
dec
cmp
ss
mov
leave
jmp
std
addl
jbe
fidivrs
jle
movsb
sbb
loopne
clc
mov
leave
pop
mov
push
cmc
pop
mov
out
push
mov
mov
into
dec
gs
fiaddl
fxsave
js
and
in
insb
mov
mov
mov
ret
mov
mov
hlt
jo
adc
pop
dec
dec
leave
hlt
andb
add
adc
cmp
jae
test
stc
stc
mov
mov
in
jnp
inc
or
std
loopne
add
outsl
cmp
mov
or
iret
and
roll
mov
test
inc
and
sahf
fidivrs
sub
aaa
cli
inc
dec
and
push
mov
fisubrl
or
push
leave
add
mov
outsl
cmpsl
xchg
add
xchg
add
out
icebp
dec
aaa
inc
pop
jle
mov
mov
sub
imul
mov
sub
enter
pop
inc
mov
dec
sbb
outsb
mov
bound
jmp
ss
in
movsl
pushf
or
jg
jb
cmpsl
xor
xlat
pusha
into
cmc
xor
or
fs
out
lods
ficoms
cmp
aad
add
sti
push
lds
mov
rolb
mov
or
mov
adc
pop
dec
outsl
inc
add
daa
scas
aad
jno
daa
mov
mov
imul
insl
rclb
cmp
les
insl
fucom
dec
xor
fbstp
punpcklbw
mov
ret
mov
xchg
aad
mov
xor
adc
or
int
out
cltd
movsb
mov
sbb
out
xchg
mov
mov
ret
pop
loope
mov
push
mov
push
jb
out
inc
lods
adc
and
data16
lock
rorb
inc
cmp
mov
jp
inc
jbe
jmp
addb
pop
cltd
pop
mov
gs
push
mov
inc
sahf
stc
fdivrs
out
sub
push
aam
push
sbb
mov
xor
jnp
jp
fcomps
or
sbb
dec
mov
sub
pop
mov
adc
sub
cmp
ljmp
lret
xor
clc
nop
xor
add
mov
add
inc
pushf
ffreep
xchg
cmp
xor
jnp
int
jo
jo
jg
ret
pop
psllw
data16
cli
cltd
aad
mov
sub
sub
ds
or
test
adc
and
in
xorb
lahf
out
mov
movsl
enter
fiaddl
popf
add
in
cltd
lcall
shll
or
xor
fsubl
in
jbe
or
add
test
jmp
pop
or
inc
and
mov
and
push
mov
xchg
and
push
mov
and
push
sub
addl
call
xor
ljmp
sbb
out
fs
sub
add
pop
notb
lea
sbb
add
lods
sti
or
test
cmp
push
xor
iret
dec
and
je,pt
pop
mov
pop
cltd
filds
icebp
call
cmp
adc
icebp
mov
shll
loope
xchg
push
ljmp
out
pop
xor
add
xchg
in
mov
jmp
xor
gs
scas
mov
addl
testl
sti
into
sub
out
sub
aad
adc
pop
rol
insl
jmp
pop
movsl
xor
testl
or
aad
lcall
add
xor
nop
xor
int3
aaa
stos
xchg
bound
insb
movsl
or
xchg
cwtl
xchg
movsl
inc
flds
adc
pop
adc
outsl
or
mov
cmpsl
pop
ljmp
lds
clc
adc
cmp
shrb
ret
push
mov
sahf
and
loop
or
arpl
pushf
aam
inc
arpl
push
cmp
mov
lea
sarl
mov
cld
mov
sub
imul
cmp
jns
loop
fcomi
int
mov
mov
std
ja
aaa
dec
jle
shlb
pop
loope
jmp
xor
mov
outsb
setb
pop
or
in
or
sti
mov
int3
shl
xor
test
fsub
out
ja
dec
inc
sbb
add
xor
xchg
sbb
push
jae
xor
rorl
push
push
imul
push
jne
jge
push
imul
adc
mov
jge
repnz
mov
dec
mov
in
mov
inc
out
add
add
aad
fisubs
mov
jle
mov
xchg
jge
mov
dec
mov
pop
hlt
push
sahf
daa
and
shl
in
mov
sbb
mov
sub
mov
push
ja
adc
enter
lret
in
lock
in
mov
ljmp
cmp
lcall
mov
into
jl
mov
lock
sbb
jg
sarb
jl
pop
jns
icebp
mov
or
ss
and
cs
sub
outsl
mov
aaa
addr16
mov
loopne
sti
arpl
leave
pop
or
xchg
lret
scas
add
sti
pop
pop
add
scas
in
ja
test
lcall
dec
adc
lods
jmp
dec
mov
push
ret
loop
fisttpl
ret
pop
loope
aaa
fidivrl
cld
fdivl
cmp
lock
cmp
or
sbb
adc
hlt
sub
je
sbb
gs
lahf
push
mov
ss
shlb
bound
mov
mov
xchg
cmpsl
push
mov
jno
arpl
jg
pop
jns
cltd
cltd
dec
and
fs
jns
test
xchg
repz
fwait
sub
push
inc
inc
mov
pop
mov
mov
out
popf
push
call
pop
aad
xlat
addr16
cmc
jecxz
nop
add
inc
mov
cmpsl
addr16
jl
ja
shl
fildl
sti
push
call
cmpb
sub
dec
push
jb
inc
in
movsb
mov
xchg
jne
push
inc
mov
mov
cmpsb
insl
push
xchg
ret
push
imul
cmpsl
cli
loopne
sbbl
in
ljmp
cs
push
push
sti
loope
and
cld
xchg
lods
xchg
pop
sub
icebp
stos
pop
ss
adc
sbb
cltd
jns
mov
jbe
xor
cmpsl
pop
fnstcw
mov
std
cmpsb
mov
cwtl
std
add
or
stos
sub
mov
push
jno
cmp
dec
xchg
lds
mov
jb
in
xchg
cmp
sub
xchg
xchg
jae
sbb
mov
leave
data16
mov
outsb
div
dec
cmpsb
data16
xchg
sub
add
movsb
pop
inc
sti
arpl
in
dec
loope
mov
or
fcoml
fldt
xor
cld
cmovbe
and
sarb
lret
jns
incl
nop
loopne
jp
xor
jmp
into
push
xor
inc
std
xchg
dec
mov
push
mov
add
sbb
dec
pop
aad
cwtl
call
orb
xchg
mov
jno
or
sbb
iret
mov
push
loope
in
movsb
cltd
or
aad
inc
out
fdivl
push
sahf
cltd
inc
inc
popf
pop
cmpsb
and
lahf
jne
data16
out
mov
sbb
and
je
movb
ss
add
bnd
fs
push
imulb
or
mov
mov
mov
ret
sbb
lock
push
mov
add
insb
or
or
jp
pop
add
std
stc
mov
pop
test
in
xchg
lods
mov
ja
aam
push
clc
js
adc
outsb
mov
push
cltd
fwait
imul
add
xchg
pop
jge
cld
mov
repz
fmuls
adc
movsb
dec
mov
adc
dec
add
mov
xchg
popf
pop
mov
fsubs
or
xor
dec
frstor
pop
shl
or
cltd
add
aas
mov
js
add
outsb
mov
cmp
out
mov
pop
mov
call
sub
push
into
shlb
stc
aas
mov
push
imul
sub
jge
inc
popa
test
dec
jge
mov
jne
fwait
int3
or
adc
pop
jne
jg
test
push
dec
sbb
or
test
and
cmp
sub
xchg
jecxz
ljmp
push
mov
ds
es
cmpsb
push
push
xor
adc
fistl
pop
testb
inc
ds
mov
cmpsb
icebp
adcb
inc
sbb
and
xchg
fsubr
inc
rcrb
xchg
sbb
and
xchg
xor
daa
push
xchg
and
ret
in
fsub
daa
mov
js
idivb
mov
sub
mov
in
pop
dec
cmp
aad
pop
cltd
add
mov
ficomps
lds
std
testb
les
rclb
push
sub
pop
es
cmp
into
cmpsl
xchg
enter
movsb
mov
dec
mov
add
mov
fs
pop
and
xchg
pop
jae
push
add
filds
xor
push
xchg
sbb
inc
fisttpl
xor
sbb
sub
jp
subb
ss
cmp
jmp
push
cmp
xchg
sbb
mov
dec
jecxz
adc
jp
in
fabs
out
imul
inc
es
jmp
cwtl
jo
iret
js
xor
lahf
sbb
fadds
push
hlt
arpl
stc
xchg
inc
nop
insl
inc
add
leave
mov
orb
push
xchg
mov
xor
push
stc
test
dec
icebp
pop
popa
or
push
adc
shrl
addb
lret
stos
fcmovnu
dec
sub
mov
xchg
clc
cwtl
xchg
shlb
rclb
mov
pop
mov
test
std
movsl
xlat
mov
sub
mov
xchg
repnz
addr16
cmp
cmpsl
inc
jp
jl
inc
pop
or
fistl
js
cmpsl
inc
mov
xchg
jle
cmc
dec
ret
push
rcrb
adc
pop
fistps
xchg
fldcw
mov
fistps
call
aad
mov
loop
ja
addb
test
divl
mov
sub
xor
adc
aam
sub
sbb
rolb
lods
cmc
aad
fwait
xor
ja
pop
jp
sbb
mov
adc
psubq
in
adc
mov
jns
scas
pop
cwtl
cltd
rcl
jnp
push
and
sub
rolb
mov
add
mov
repz
clc
movsl
or
orb
rorl
popf
pop
jno
orl
jmp
jb
inc
lods
xchg
cld
dec
mov
ret
cwtl
push
mov
icebp
jmp
ds
clc
aad
loop
mov
pop
andl
outsb
mov
or
mov
mov
add
mov
ja
mov
mov
imul
mov
bound
jb
loop
mov
jo
jecxz
stos
pop
iret
mov
sti
pop
sub
xchg
cltd
fcmove
repnz
mov
fsubp
sbb
xchg
add
push
out
adc
mov
cmpsl
add
push
cmpsl
iret
in
jl
add
popa
cmpsl
ret
cmp
xchg
fidivrs
xor
cmp
inc
or
int
adc
pop
sbb
or
scas
push
addb
fsubs
and
dec
mov
ret
out
fdivr
jo
pusha
gs
out
mov
shr
or
xor
loopne
pop
ja
push
jmp
sbb
fstps
push
or
jmp
iret
jae
cli
jb
mov
mov
dec
nop
pavgw
jl
dec
mov
add
cli
mov
mov
lds
pop
iret
dec
sub
out
lea
cmpsl
cmp
stos
fdivl
xor
mov
pusha
push
mull
sub
or
sub
andl
loop
or
push
jg
arpl
sbb
push
lcall
sbb
dec
loop
push
int3
mov
in
xchg
cmp
aad
inc
lcall
mov
in
incb
lret
ret
scas
jp
sub
popa
mov
loope
popl
loope
cld
in
das
popl
add
test
je
lods
sub
fcmovnu
mov
addr16
cli
out
adc
mul
cmp
mov
scas
xor
jp
aas
and
pop
inc
mov
cli
fs
sarb
jno
or
pusha
xor
loopne
xchg
in
sarb
push
jecxz
pop
fsts
cwtl
mov
xchg
testb
cmp
mov
je
daa
push
insl
mov
pop
decl
lcall
scas
mov
jne
xor
sahf
jno
popa
test
aaa
sub
pop
add
mov
mov
callw
int3
or
in
and
call
lret
lretw
xchg
push
jo
dec
cmpsb
jle
xor
adc
ds
int3
sub
dec
xor
repz
pop
push
shlb
sbb
mov
and
adc
mov
sbb
sub
adcb
loop
inc
inc
mov
movsb
jmp
daa
ja
pop
push
les
sahf
dec
push
fsub
pop
daa
test
fdivr
sbb
divb
fcoms
fxch
and
cmpsb
inc
inc
pusha
adc
pop
lcall
orb
stos
jl
cmc
sbb
xor
imul
dec
jp
xchg
add
andb
stc
ja
mov
loop
ljmp
sbb
rorl
subb
inc
ret
jae
movsl
rcr
adc
cmp
or
cmp
lds
loop
outsl
jne
or
push
lods
insb
lret
jns
push
pop
add
dec
ret
mov
stos
mov
xchg
pop
ja
add
ss
shll
sarl
ljmp
popa
leave
sub
popf
es
int3
icebp
mov
ja
cmp
or
or
dec
out
push
cld
lret
stos
sub
add
push
cmc
lock
mov
adc
cmp
pop
fidivs
mov
jae
and
xchg
add
xchg
cmp
or
loopne
cmp
jle
jp
sbb
inc
mov
mov
push
clc
or
xor
pop
testb
add
mov
inc
dec
js
push
pop
in
shl
mov
fisubrs
in
jo
movsl
out
pop
scas
jmp
push
aaa
fwait
jne
mov
xchg
stos
repnz
mov
pop
push
popa
jmp
dec
cmpsl
or
push
test
sub
dec
jae
nop
push
push
inc
ficoml
xor
mov
cwtl
adc
out
imul
ret
in
aaa
adc
xchg
push
jno
jno
or
jp
xor
in
mov
call
arpl
mov
es
mov
mov
sbb
mov
jmp
aad
enter
ret
in
inc
arpl
repnz
xchg
mov
shll
arpl
add
add
mov
push
in
push
mov
xlat
push
cmp
push
adc
xchg
sahf
ret
in
dec
stc
into
or
push
pop
or
push
outsb
xchg
outsl
pop
xchg
jbe
fdivs
jmp
pushf
mov
sahf
jno,pt
popa
sbb
adc
xchg
inc
repnz
add
mov
dec
pop
imul
movsl
pop
flds
fmull
mov
lods
rorl
popf
xchg
jl
jno
jb
scas
lea
push
sbb
jecxz
dec
es
popf
sahf
push
lret
inc
aam
and
rorb
inc
sub
lods
push
cltd
mov
inc
js
inc
jnp
cs
mov
mov
inc
push
fstpl
in
test
in
loope
lcall
pop
mov
dec
inc
ret
dec
cwtl
test
sbb
mov
inc
outsb
jo
mov
sbb
popf
and
mov
rol
push
js
pop
and
jle
sub
jle
mov
jmp
int
stos
push
insl
std
pop
jl
scas
pop
shlb
dec
and
call
in
test
repz
xchg
jnp
mov
icebp
sbb
push
mov
cmp
mov
mov
shll
fs
imul
lds
loop
aaa
data16
leave
push
sub
sti
stos
mov
imul
outsb
lods
xchg
cltd
inc
xchg
int3
pop
push
mov
push
xchg
cmp
mov
std
jne
cli
add
push
xor
insl
int
stc
push
push
cltd
dec
test
jne
sub
fnstcw
imul
pop
fdivs
xchg
push
sbb
ret
arpl
jp
inc
insl
test
xchg
pop
or
in
or
cmp
ds
xor
mov
aas
mov
bound
in
xchg
mov
xchg
jbe
aam
andl
lcall
ret
pop
jbe
sub
mov
divw
enter
ja
cmpsl
xchg
insb
popf
xchg
jp
std
outsl
lret
push
sbb
dec
loopne
mov
xor
or
fs
mov
cs
daa
and
dec
sbb
test
push
mov
rol
jecxz
rcr
jg
jecxz
pop
js
mov
and
pop
popf
adc
popa
xchg
sbb
test
iret
add
mov
cli
sub
push
inc
aas
xchg
movsb
popf
ret
inc
xor
jnp
mov
add
xlat
jmp
mov
aam
sub
mov
push
and
push
out
aaa
lods
shll
out
cmp
sbb
outsb
mov
cwtl
jbe
xchg
jmp
lahf
imul
jne
ret
dec
loopne
rcrl
push
pop
jb
cmc
push
je
xlat
push
pop
xor
adc
int
ss
lods
pusha
sbb
mov
mov
xchg
jnp
or
cmp
fwait
mov
and
das
xor
mov
push
scas
icebp
lods
xchg
sbb
jne
enter
loope
push
mov
gs
xor
aam
fistl
jo
dec
cmp
jp
and
ficomps
je
aas
jnp
stc
and
jnp
and
test
dec
fcmovnbe
and
jno,pn
xor
cmp
cld
pushf
test
or
lcall
pop
push
and
int3
or
inc
cmp
shr
pop
jne
push
div
sbb
xchg
and
std
adc
fcoms
pop
inc
pop
and
push
ficoms
imul
outsb
inc
mov
les
mov
jle
jno
lret
cli
cmp
jmp
fiadds
pop
xorb
jno
fcoml
jp
inc
dec
pop
xchg
enter
fisttps
roll
and
lock
push
pop
pop
mov
movsb
in
test
mov
xor
cmp
aam
leave
inc
lds
les
fs
or
and
push
inc
jbe
arpl
pop
aam
into
les
dec
int
mov
test
hlt
mov
in
movsb
in
ret
dec
cmpsl
lock
push
and
pop
and
pop
sarb
es
mov
xchg
mov
data16
pop
adc
dec
call
xchg
push
inc
cltd
stc
lds
sub
and
jge
mov
out
js
adcl
hlt
jbe
push
push
fst
int3
inc
fadds
ret
mov
jl
aaa
mov
dec
fs
xchg
stos
scas
sbb
scas
jle
pop
hlt
pusha
sbb
insl
inc
push
mov
popf
pop
enter
jns
je
cmpsl
loop
mov
sar
jbe
loop
jge
aas
mov
cltd
enter
cmp
dec
je
add
pop
or
lcall
popf
hlt
rorb
add
adc
cmp
push
cltd
pop
scas
sbb
add
inc
mov
cmpb
pop
shlb
sahf
roll
add
and
xchg
sbb
popf
jecxz
js
inc
outsb
jo
ret
cltd
xor
in
mov
popa
push
cmp
js
outsl
imul
dec
movsb
jg
sbb
adc
jmp
pop
add
sub
out
pop
and
sub
ret
mov
cmpsb
add
or
xor
loop
bound
pop
scas
push
and
es
ja
xchg
add
push
dec
mov
sub
inc
ret
pop
dec
cmc
call
insl
push
movsl
pushf
jl
loop
movsb
cmp
lahf
push
std
or
pop
bound
sub
sbb
loop
in
cmc
pop
pop
and
cmp
xor
add
add
test
push
out
outsl
sbb
outsb
jbe
push
mov
loopne
cwtl
mov
rolb
nop
or
int
pushf
repz
cltd
or
cmpsl
lret
fnstsw
je
sub
les
loop
test
pusha
add
lret
std
stc
inc
push
add
push
ficoml
repz
xchg
out
int3
in
lods
inc
insb
cmp
inc
push
xor
lret
mov
pop
mov
hlt
push
sub
add
outsl
and
inc
mov
or
add
gs
push
data16
mov
inc
aam
mov
movsl
scas
xchg
push
mov
xor
sub
push
mov
jge
std
pushfw
sti
cld
lcall
outsb
fwait
shrb
fnstsw
popf
inc
and
dec
inc
aam
sbb
mov
imul
std
mov
out
jae
jae
xlat
dec
mov
out
mov
push
mov
mov
popa
test
je
inc
pop
mov
imul
and
lock
mov
popf
push
cltd
cmpsb
add
mov
sarb
push
mov
add
sub
mov
arpl
sub
mov
cmpb
imul
jbe
mov
or
pop
repz
mov
fldt
mov
cmpsl
test
xor
push
stos
shr
sti
popw
sbb
inc
pop
jge
push
scas
xchg
xor
fcoms
std
in
jne
jb
shr
jle
mov
neg
mov
dec
insl
xlat
mov
call
lea
fnstsw
and
xchg
insb
mov
dec
mov
fwait
subb
add
sbb
ss
mov
andb
cmp
es
inc
cmpsb
in
stc
stos
push
repz
shll
sub
xor
in
jle
mov
mov
fadds
push
jae
fcmovbe
inc
stc
addb
mov
add
ds
addr16
pop
mov
in
jle
jecxz
jg
cmp
mov
xchg
cmp
imul
xchg
dec
xchg
shlb
push
cmp
movsb
sub
and
jecxz
or
push
jl
aaa
arpl
push
cs
loop
sahf
pop
iret
fidivs
push
sarb
cmpsl
imul
imul
fwait
imul
ss
pop
jnp
cmp
rorl
out
ljmp
adc
cmp
xor
inc
or
fdiv
xchg
fldcw
push
xor
out
popf
outsb
sbbb
shll
fstpt
int
add
mov
mov
pop
imul
stos
cmpsl
imulb
rolb
bound
jmp
dec
pusha
adc
pop
add
out
jae
mov
test
adc
pop
push
xor
enter
fstps
mov
or
adc
adc
mov
inc
sti
jae
cs
mov
test
out
cltd
into
decb
call
scas
stos
cmp
xor
pop
and
sti
cmpsb
lcall
das
shr
pop
sbb
repz
cltd
mov
mov
jle
test
inc
rcrb
lock
das
push
or
mov
divl
mov
sub
cmpsl
nop
les
aam
sbb
enter
xor
push
xlat
aaa
jns
fnsave
inc
inc
outsb
add
movsl
inc
pop
mov
into
pusha
fcmovu
iret
adc
adc
fdivrp
xor
out
lock
lcall
push
xchg
sahf
lret
add
sub
or
test
pop
clc
fistpll
dec
out
lods
clc
loop
outsl
xchg
pop
jg
cltd
sub
aas
sbb
dec
int3
ret
icebp
pop
aas
movsb
dec
int3
out
sub
adc
fadds
pushf
loopne
stos
loop
sub
or
dec
data16
shlb
lods
jo
fidivs
xchg
mov
iret
mov
xlat
stc
push
std
pop
mov
faddl
data16
aas
je
stc
push
jns
js
gs
fsubrs
pop
adcl
push
clc
cmp
notb
push
pop
mov
fisttpl
loopne
int3
jp
in
movsb
xchg
imul
sar
les
add
loope
mov
mov
hlt
out
movsl
enter
icebp
mov
imul
dec
sub
sub
xor
xchg
push
out
out
dec
xchg
lcall
lods
inc
inc
stc
dec
push
mov
inc
xor
insl
fsubp
ret
lock
xor
adcb
sbb
xor
out
das
leave
test
or
subl
ret
in
fisubl
inc
test
pop
insl
push
test
inc
fwait
jmp
adc
into
dec
pop
daa
mov
scas
inc
xor
sbb
add
clc
adc
inc
dec
mov
xor
addb
test
sbb
imul
push
sbbl
ret
inc
in
and
push
xor
arpl
xchg
push
inc
jge
push
mov
pop
or
mov
xchg
mov
fiadds
jb
mov
movsb
jb
jno
sub
lret
imul
cmp
push
lcall
xorb
push
mov
xchg
jns
daa
repz
mov
push
pushf
cld
mov
outsb
mov
sbb
xorb
daa
push
cmp
test
mov
mov
add
sub
out
mov
jp
cltd
sub
dec
mov
loope
shrl
test
std
insl
dec
and
or
movl
adc
pop
negb
in
add
sbb
pop
push
dec
test
sbb
addr16
cmp
ss
aaa
into
adc
mov
jp
jae
out
cltd
sbb
test
int3
jmp
stc
jecxz
lret
je
std
xchg
dec
push
in
jge
sbb
jb
out
cmp
test
stos
movsb
cmp
imul
sub
ret
pop
fdivrs
imul
shll
aas
popf
pusha
ja
out
mov
or
cmpsl
xor
sbb
mov
xor
add
cmpsb
fcomps
aas
push
pusha
mov
and
outsl
insl
insl
lret
xchg
jle
and
mov
cmp
mov
jp
mov
loop
sub
test
mov
xchg
je
dec
das
loop
cmpsl
xor
fdivrl
icebp
push
jns
or
xchg
orb
rcrl
xchg
xchg
test
sub
lods
jle
push
fwait
test
pop
inc
and
xchg
rclb
adc
in
inc
fdivs
lea
lcall
mov
xor
sahf
and
lds
inc
movsb
test
fisubrl
fistl
ret
xchg
or
sahf
or
jo
and
sub
cs
push
jo
cmp
loope
in
or
adc
lock
int3
or
xchg
sub
xchg
fistps
xor
in
adc
xchg
mov
mov
enter
mov
sbb
aad
and
es
stos
dec
xlat
dec
cwtl
jns
out
cmpsb
jbe
je
pop
sbb
idiv
jmp
sub
rcll
sub
mov
xchg
xchg
inc
add
int3
dec
pop
xchg
jno
and
test
add
loop
inc
cmp
dec
mov
imul
je
xorl
pop
xor
les
dec
push
sub
xlat
xchg
sub
repnz
lahf
test
push
mov
xchg
test
adc
loop
lret
push
nop
cmp
jl
cs
sub
popa
cli
pop
mov
pusha
xor
xor
push
add
mov
faddl
xor
push
dec
ret
jne
sub
rsqrtps
mov
sub
ja
inc
xor
fs
ror
sbb
test
mov
cli
movsb
leave
sub
push
sbb
shll
jns
dec
not
ljmp
iret
or
mov
pushf
push
jmp
das
jecxz
hlt
insl
push
or
je
xorb
out
test
pop
xor
jo
adc
outsb
roll
ss
push
cwtl
fimull
sub
test
add
xchg
add
lds
ja
mov
in
add
pusha
fnstsw
out
movsb
out
jg
clc
cmp
divb
sbb
xor
pop
inc
mov
movsb
scas
adc
mov
pop
or
mov
movsl
pop
jmp
adc
popa
xchg
pop
inc
cwtl
loope
out
cs
iret
fucomi
out
icebp
and
lret
xor
mov
xchg
lea
adc
xchg
insb
data16
jp
aas
pusha
test
fnstcw
rcrl
fnstsw
icebp
or
sub
pop
add
and
in
leave
mov
lcall
sbb
das
pop
xor
dec
addl
and
loop,pt
mov
mov
xchg
xchg
sub
xchg
xchg
xor
out
mov
or
repz
das
mov
shrb
int3
xchg
or
xchg
mov
add
out
mov
push
push
test
xor
aam
dec
pop
pop
les
pop
ljmp
add
leave
lods
test
data16
aad
inc
add
xchg
insb
dec
mov
dec
and
lds
cs
mov
add
pop
push
lret
jns
sub
leave
inc
in
cmp
lods
adc
mov
in
sub
xchg
shlb
mov
xchg
mov
mov
push
imul
sbb
icebp
aad
gs
arpl
les
xchg
mov
cmp
stos
adcl
mov
mov
out
adc
mov
lcall
movsb
mov
mov
out
test
dec
jno
mov
faddp
fwait
mov
xlat
incb
aad
fisubrs
scas
gs
push
sahf
test
out
push
aam
shl
push
cmpsb
cmpsb
shl
pop
cltd
xorb
movsb
movsb
lret
xchg
cwtl
popf
xchg
addb
cld
jmp
sbb
xor
fcmovbe
mov
lret
daa
sub
popa
lods
rcll
negl
movsb
stc
xchg
jmp
jmp
dec
push
push
fadd
loope
out
jmp
fsubrl
loopne
in
or
and
xchg
xchg
in
mov
enter
fwait
mov
mov
fldl
inc
add
cmp
lods
aad
insl
outsl
into
lret
ds
pop
arpl
in
dec
add
jno
dec
mov
inc
loope
xchg
fstp
cmp
imul
cltd
lahf
fsubs
jns
mov
loope
les
push
xchg
cwtl
inc
sarb
inc
jnp
xchg
xchg
and
cmp
or
mov
jo
or
int
jle
xchg
xlat
jp
inc
add
push
cld
ss
xchg
cli
pop
call
adc
int3
cmc
xor
cwtl
mov
or
and
jmp
cmp
or
int3
push
jge
xchg
mov
mov
add
ljmp
pop
mov
sahf
je
in
mov
mov
cmpsb
lods
mov
pop
inc
xchg
enter
aaa
hlt
add
fmull
xchg
outsl
rcrb
aaa
scas
in
or
stos
jb
xchg
jo
add
repz
jle
sbb
out
imul
repnz
sub
jo
xchg
gs
or
dec
add
and
cltd
iret
ljmp
or
sub
iret
inc
adc
or
mov
call
mov
int3
push
push
xchg
int3
repz
insb
pop
hlt
jecxz
sahf
aas
inc
aaa
push
mov
jb
psubsb
mov
sbb
mov
aam
or
or
mov
mov
dec
xchg
outsl
push
lods
adc
pop
push
xchg
test
mov
mov
pop
lret
push
stos
ljmp
test
fimull
lock
out
jle
dec
mov
inc
mov
repz
ror
xor
in
test
cmp
pop
int
and
andb
sub
jno
cmp
cmp
cmp
fisubs
or
push
cmc
ja
mov
lods
xor
and
repz
pop
int3
out
inc
push
dec
ficompl
cli
sbb
mov
jae
test
mov
rcr
lods
inc
push
scas
or
push
or
push
sbb
js
scas
xchg
out
std
in
mov
ja
sbb
inc
jae
sub
mov
adc
cmpsb
add
arpl
andl
incb
leave
pop
cmp
ficoml
aas
inc
repz
std
push
push
sub
xchg
jmp
pushw
xchg
icebp
icebp
rol
ja
test
xor
popa
adc
gs
xchg
fwait
mov
movsl
jo
sub
push
lods
sbb
insb
jmp
clc
out
mov
mov
gs
movsb
pop
les
jb
lahf
je
sbb
movsl
hlt
stos
push
mov
sbb
popa
hlt
adc
mov
xchg
icebp
adc
sbb
std
xlat
mov
jb,pn
cmp
jo
xor
inc
push
jmp
cwtl
pop
mov
lcall
ljmp
or
mov
jmp
pop
outsl
cmp
das
jnp
es
add
imul
stc
ljmp
mov
mov
rorl
jns
xor
scas
cltd
add
loopne
push
adc
xor
or
xlat
push
lret
mov
inc
popf
cli
lods
jg
aaa
stos
cmpsb
rcr
and
mov
lret
xchg
leave
add
push
cmp
addb
int3
dec
xchg
and
das
and
ficoms
mov
xchg
lock
and
dec
into
jo
cmp
sub
pop
jg
decb
ror
cmp
arpl
push
or
cli
mov
push
popa
les
dec
pop
inc
jge
lds
lcall
lret
mov
test
lods
dec
xlat
cli
lret
adc
aad
add
pop
hlt
nop
lcall
mov
iret
popa
out
lcall
or
je
jns
sub
aaa
loop
icebp
rcr
outsb
inc
dec
addl
jp
inc
lods
ret
in
dec
imul
scas
cmpsb
out
dec
xor
iret
rorl
lahf
shrl
xchg
popf
iret
xchg
out
mov
xor
pop
nop
popa
push
inc
imul
loop
daa
insb
inc
sbbb
adc
aas
movsb
push
rclb
int
js
repnz
jecxz
dec
loopne
cmc
fwait
std
test
xchg
xor
cld
mov
push
add
filds
inc
pop
sbb
sbbb
mov
incl
fildl
push
scas
cmp
inc
out
js
mov
jge
push
psrad
mov
jns
xchg
xchg
fstl
and
adc
mov
pop
sbb
ret
out
addr16
sahf
mov
sahf
jbe
jb
ret
mov
dec
mov
xchg
xchg
in
sbb
insl
adc
xchg
push
adc
inc
ret
fistps
xor
sub
lods
mov
bound
jae
and
xchg
dec
popa
xor
mov
es
and
ficoml
inc
mov
stc
adc
aad
in
mov
xor
and
mov
mov
test
cmp
out
shll
cmp
addr16
stos
aad
pop
in
imul
idiv
cmc
push
iret
inc
dec
fsubrl
outsb
mov
dec
xor
call
movsl
test
cmp
pop
testb
pop
mov
fildl
mov
shrb
aad
fildll
cmc
in
aas
outsb
idiv
xor
daa
push
out
mov
lret
sub
xlat
xor
jmp
xchg
in
imul
add
dec
test
out
jp
sub
loope
fdiv
xor
pop
pushl
cmpsl
adc
sbb
sub
jb
ds
add
and
out
cmp
cmp
jno
jl
xchg
or
push
stc
scas
fdivrs
icebp
cmpsl
mov
jbe
das
ret
push
dec
stos
lods
jle
shlb
ret
xchg
ss
loop
in
arpl
repnz
ljmp
insl
mov
je
cmp
mov
mov
ljmp
or
xchg
adc
insl
mov
andb
adc
add
pop
test
dec
mov
mov
xchg
std
fstl
sahf
repnz
cmp
xlat
push
scas
sub
aaa
sub
dec
mov
repz
stos
int3
mov
and
mov
inc
out
xor
add
rep
jbe
xor
or
insl
mov
adc
adc
cmpl
repz
jb
mov
xor
jae
out
add
inc
js
in
stos
in
test
sub
mov
xor
aas
and
dec
push
cmp
out
fs
jmp
gs
int
pop
shr
into
dec
cmp
pop
in
jecxz
or
mov
or
add
mov
pop
bound
mov
repz
adcl
cmpsb
jecxz
dec
pop
shlb
call
add
adc
ja
and
inc
inc
mov
jne
popl
jo
cmp
pop
xchg
sub
out
loopne
sbb
adc
lods
sbb
leave
and
cmpsb
xlat
ljmp
sub
std
jecxz
pop
popf
mov
cs
xor
inc
jle
xor
outsl
repnz
inc
mov
test
jae
push
sti
pop
push
ljmp
iret
mov
mov
cmc
jge
and
test
mov
push
cmc
outsl
jmp
scas
pop
mov
mov
mov
addb
testb
iret
pop
ret
cld
cmp
out
xchg
add
js
push
cwtl
xlat
xor
flds
std
cltd
mov
shll
inc
ljmp
rolb
fwait
push
jnp
jns
or
scas
xchg
loop
xchg
mov
jns
mov
andb
lock
out
mov
sahf
add
lea
pusha
dec
xor
and
jmp
stos
jmp
lea
cmp
inc
sbb
gs
jge
out
out
ss
bound
pop
xor
cltd
mov
pop
xchg
outsl
dec
adc
xor
fxtract
mov
je
fsubp
xor
out
pop
mov
xchg
push
subb
adc
test
sub
add
adc
inc
sub
xlat
mov
pop
xchg
movsb
pop
jmp
test
rorb
cmp
cmp
in
pop
repnz
movl
add
sub
pushl
fisttps
imul
jbe
xchg
int
mov
into
jb
lds
adc
sti
es
push
cmp
addl
dec
mov
or
call
push
mov
jg
test
test
mov
fadd
popa
adc
std
inc
addr16
lahf
lea
jno
push
xor
and
clc
pop
ficoml
pop
fistps
repz
stos
pushf
ret
es
hlt
sbb
pop
mov
sub
mov
pop
inc
ljmp
add
sbb
mov
imul
movsl
add
lods
xchg
rolb
sbb
je
test
lods
out
xchg
or
xchg
xor
ljmp
je
lods
dec
pop
fcmovb
mov
sysexit
insl
lods
mov
insb
nop
mov
sar
sbb
xchg
fidivs
fistl
dec
leave
or
mov
cmp
pop
add
mov
lahf
sub
fldl
sbb
jp
lods
or
cli
adc
sub
std
testl
pop
mov
jl
lcall
or
jbe
pop
fstl
push
jg
dec
sahf
rol
add
popa
lahf
ljmp
or
divb
test
jmp
aas
stos
mov
out
je
lods
jmp
adc
mov
add
mov
mov
ja
push
insb
test
lods
add
popa
mov
xchg
push
aaa
cld
ror
int3
test
div
cwtl
icebp
mov
jl
xor
test
repnz
sbb
jg
pop
iret
add
push
sbb
outsl
adc
ss
test
in
iret
addl
adcl
xchg
sahf
mull
test
fisttps
xchg
cld
push
fists
or
imul
loope
inc
sbbb
pusha
nop
jo
stos
jnp
cmp
jmp
inc
pop
cmc
sbb
add
mov
test
cmc
mov
adc
lock
ret
in
and
xor
into
push
dec
das
xor
add
adc
pop
adc
sbb
enter
mov
popa
outsl
pop
lar
push
loopne,pn
fstpt
lock
xorb
mov
cmpb
lds
fmuls
mov
fucomp
jle
mov
lea
clc
add
iret
rclb
daa
test
or
out
movsb
mov
mov
pop
jno
cmp
mov
inc
orl
call
aam
stos
aam
cmp
sbb
out
cmp
push
mov
mov
pop
jg
ror
das
int3
dec
cltd
aam
test
mov
mov
sahf
mov
fwait
pusha
lret
mov
xlat
in
hlt
add
test
add
mov
inc
cmpsb
mov
and
jecxz
out
inc
sbb
push
lods
je
aaa
add
stos
mov
cs
cmc
lods
sbb
rol
cwtl
loopne
movsb
addr16
jp
add
push
ret
data16
cmp
clc
sahf
test
lds
out
mov
xlat
push
add
inc
rcrl
mov
enter
leave
add
inc
std
pop
hlt
jae
out
popa
and
and
and
mov
shll
adc
add
mov
mov
dec
jbe
jle
lea
mov
fisttps
and
mov
ret
mov
sub
pushf
enter
push
xchg
loop
insb
dec
enter
inc
add
jmp
adc
rcr
or
cmp
cwtl
loope
je
push
iret
lds
mov
out
push
popa
xchg
stos
xchg
add
mov
xor
lahf
push
fadd
fs
leave
sbb
gs
movsb
adc
pusha
fdivs
inc
pushf
mov
daa
dec
dec
out
orb
mov
jmp
add
cmpsl
popl
sbb
push
movb
sub
mov
sti
inc
sbb
dec
or
jns
jl
loope
in
add
or
xchg
sahf
jae
inc
xorb
push
fnstenv
and
mov
jp
or
dec
and
push
in
jae
push
insl
jge
mov
pop
push
dec
incl
dec
sbb
xlat
mov
mov
sub
jg
dec
mov
mov
push
sar
lds
mov
jae
pop
sbb
in
testb
cmpsl
clc
xor
add
bound
cmp
lods
fwait
out
xor
shrl
push
xchg
shr
add
andb
aam
loop
js
sbb
lret
clc
jbe
jnp
dec
clc
sub
xchg
mov
mov
mov
inc
sbb
test
loope
or
cmp
jp
push
or
mov
call
jne
or
xchg
fucomip
mov
cmpsl
add
gs
cmc
cmpsl
test
lret
mov
cmp
mov
mov
xchg
es
cld
les
mov
sar
int3
xchg
xchg
std
jnp
fildl
jne
imul
sub
jns
imul
in
loop
mov
add
pop
sbb
cwtl
mov
stos
das
rclb
mov
fisubs
aad
mov
xchg
sbb
repz
cmp
add
pop
aam
inc
stos
add
scas
pop
mov
dec
jae
push
int3
arpl
inc
mov
push
xor
mov
enter
sub
lds
mov
inc
mov
leave
jne
rsm
gs
xor
cmp
cmp
mov
jle
pusha
inc
lods
hlt
mov
lods
scas
xor
rcrb
les
jl
mov
ficompl
scas
xchg
daa
clc
dec
xchg
pop
clc
add
out
mov
fwait
in
push
xor
repnz
mov
pushf
mov
jmp
jmp
ds
push
dec
inc
and
in
aad
pop
fidivl
imul
shrb
popa
icebp
mov
insl
loope
out
mov
pushf
imul
jbe
cmp
fdivr
inc
sub
test
jns
les
fidivrl
mov
mov
cmpsl
incb
ficomps
imul
dec
pop
jbe
dec
sbb
clc
cwtl
data16
adc
popa
cmp
sbb
sbb
pop
and
xor
aaa
xchg
sbb
adc
bound
mov
addb
add
jne
mov
inc
rcr
xchg
sub
imul
int3
enter
dec
mov
cmpsb
dec
mov
in
out
fisubl
sbb
push
cmpsb
loopne
popa
xchg
clc
cmp
daa
add
push
inc
outsl
fcomps
fwait
push
fcomps
sub
das
fiaddl
sub
push
les
mov
sbb
jno
mov
mov
xchg
mov
jne
sbbb
dec
pop
push
cmp
rorb
pusha
push
repz
pop
fstps
aaa
lret
push
rep
popa
fistl
loop
ja
cmc
or
xorl
imul
pop
lea
bound
push
lds
in
jmp
dec
dec
hlt
out
dec
or
xchg
dec
gs
push
push
or
mov
stos
fistpll
mov
push
adc
sub
pop
and
push
lds
adc
int3
sub
xchg
in
gs
jecxz
sub
das
arpl
insb
outsl
aad
rclb
jl
out
adc
mov
xchg
sti
pop
out
or
dec
mov
cwtl
ret
mov
cs
daa
inc
shrl
or
adc
jbe
sbb
cli
cmp
pop
push
pop
hlt
aam
movsb
add
push
loop
sbb
scas
mov
lret
jge
das
add
sbb
pop
stc
inc
movsb
sub
ret
mov
pop
and
xchg
pop
xchg
xchg
aaa
push
imul
pop
xchg
pop
clc
xor
inc
icebp
mov
or
ss
jecxz
and
lods
pop
cmp
imul
push
dec
les
fs
and
jle
scas
ffreep
mov
mov
sbb
sbb
sub
xlat
shr
lcall
ja
loop
mov
sti
inc
jnp
jne
cli
xchg
arpl
mov
pop
lret
fidivl
dec
sbb
arpl
ds
daa
cmpsb
dec
push
mov
mov
sbb
push
inc
push
cmp
pusha
mov
ss
test
movsl
and
pop
push
out
shrb
or
bound
lods
mull
jecxz
pop
cmpsl
dec
jecxz
mov
mov
pushl
mov
sbb
and
rcrl
adc
xchg
adc
mov
xlat
loop
and
stos
mov
in
dec
cltd
jg
dec
mov
inc
xchg
add
icebp
jno
mov
cwtl
ljmp
xor
pop
jecxz
out
lcall
imul
stos
sbbl
push
test
sub
pop
mov
adc
jnp
pusha
paddsw
ficomps
mov
fistpl
push
aas
int
aas
pop
mov
out
adc
pop
loopne
stos
cmp
enter
pusha
mov
jg
mov
in
push
data16
iret
popa
xchg
jae
and
test
hlt
out
dec
adc
xlat
mov
jnp
jns
inc
fstpt
cmp
sbb
jle
xor
xchg
xor
adc
dec
mov
or
test
adc
aam
mov
popl
sub
lods
push
jb
outsb
mov
cld
icebp
adc
mov
dec
lahf
les
push
in
out
fiaddl
or
inc
mov
sub
push
out
test
ljmp
pop
inc
les
sub
and
out
jl
xor
pushf
jl
and
adc
mov
call
rcrb
shr
xor
out
push
mov
mov
lock
xchg
push
test
aaa
movsl
stc
cwtl
cld
mov
ret
lock
sub
jne
adc
add
dec
in
xor
jg
daa
sub
inc
lods
aas
and
cld
push
lcall
push
or
int
notl
insl
add
pop
clc
lahf
iret
mov
add
and
push
insl
out
xchg
jns
xor
pop
add
mov
mov
cmpsl
sub
push
fnstcw
dec
inc
xor
lds
cmp
dec
idivl
in
aaa
mov
lods
nop
inc
jne
mov
push
popl
fidivrs
cmpsl
pusha
rolb
jnp
mov
fcom
pop
add
int3
inc
int3
push
fiadds
cmpsl
push
sub
test
cmp
mov
pop
mull
dec
fstpt
sub
or
popa
jne
sarb
xor
mov
dec
mov
fidivrl
and
inc
in
iret
jmp
or
inc
pushf
orl
xchg
xchg
cmp
add
cmpsb
outsb
out
or
je
and
stos
in
fxch
and
int3
mov
push
jmp
mov
insl
mov
xchg
jns
int3
rcll
je
inc
sarb
add
fs
inc
adc
leave
hlt
inc
push
mov
xor
push
add
les
lahf
fwait
mov
les
push
frstor
fdivr
mov
sbb
mov
and
popf
push
push
lods
aad
leave
cmp
mov
jecxz
jmp
push
mov
inc
mov
ljmp
lret
jbe
nop
sbb
mov
xchg
fs
pop
inc
scas
scas
repz
test
fmull
ret
cltd
jp
clc
les
jns
mov
andb
loop
and
jne
mov
fiadds
or
movsl
jae
xchg
jno
pop
xchg
test
xchg
pop
ret
adc
divps
inc
or
and
sbb
fsub
xor
xchg
cli
jb
insb
ljmp
test
push
push
xchg
add
cmp
mov
das
ljmp
cmp
mov
dec
pop
fildll
mov
out
fwait
mov
outsb
mov
inc
or
or
sahf
xchg
pop
icebp
pop
xor
leave
adc
dec
inc
pop
bound
and
adc
inc
push
out
sub
add
inc
dec
out
jae
cmp
xchg
stc
das
and
xor
or
into
pop
das
pop
lods
cmp
cld
pop
movsb
sbb
add
inc
outsl
clc
sbb
push
jmp
lock
in
loopne
movsl
das
aad
jg
lods
mov
into
push
push
into
mov
out
movsb
ror
nop
sbb
pop
push
xor
xchg
sub
stos
loop
mull
push
in
out
or
jno
dec
in
out
dec
and
dec
add
adc
mov
movzwl
lcall
inc
jns
adc
pop
iret
repnz
loop
std
lock
xchg
push
test
rclb
clc
inc
xchg
sti
aaa
mov
push
cs
icebp
jle
popa
sub
aam
add
xor
mov
in
push
mov
lahf
in
push
xchg
out
loopne
or
inc
leave
jp
xchg
aad
inc
lds
inc
sti
pusha
sbb
sbb
test
xchg
hlt
xor
jns
in
inc
outsb
call
fwait
adc
int3
sbb
or
xorl
lcall
fwait
arpl
scas
outsb
mulb
inc
jg
jbe
lds
jge
mov
insl
sbb
xchg
cld
ljmp
iret
imul
bound
insl
and
popa
push
jae
leave
dec
sbb
cmpsb
xor
xchg
push
lea
mov
rol
xchg
mov
jp
cmp
push
les
dec
pusha
mov
inc
xchg
insl
xchg
lock
lea
mov
jecxz
pop
cs
aaa
jl
cltd
daa
push
aam
sbb
jae
out
add
int3
shrl
mov
cmc
dec
add
dec
mov
mov
or
test
mov
scas
daa
xor
pop
fsubrl
pop
repnz
test
flds
divb
test
or
lock
adc
inc
jae
les
dec
mov
jecxz
data16
add
and
test
ja
pop
in
in
insl
sub
pop
mov
add
sub
mov
mov
icebp
or
jle
shlb
add
int
leave
int
bsr
push
pushf
and
inc
sti
ret
pop
or
jmp
xor
cld
adc
sbb
push
inc
dec
xor
das
and
iret
fstps
mov
jp
cmc
jns
cmp
cmpl
and
sub
cmc
cmp
pop
jo
xor
insl
adc
jo
fstl
mov
cmpsl
add
mov
scas
notl
cmp
insb
outsb
out
daa
mov
movsb
inc
test
pop
fwait
push
ss
test
push
push
and
inc
push
push
add
loopnew
mov
or
and
fisttpl
mov
push
push
addr16
data16
out
push
and
pop
xchg
js
ficompl
jle
test
sub
mov
xlat
icebp
jo
jns
addl
jl
dec
mov
cmp
aaa
mov
into
notl
sub
popa
adc
push
stos
dec
and
popf
stos
push
mov
and
or
sbb
xacquire
faddl
and
aam
daa
je
bound
and
pop
sub
insl
push
lahf
rol
orl
in
test
jecxz
xchg
push
bound
jl
idivl
mov
pusha
pop
fcmovnu
or
mov
cltd
jno
scas
mov
test
push
ja
xor
int3
jp
cmpsb
idivl
push
add
push
fimuls
sbb
fidivl
jmp
dec
cmpsl
cli
jg
mov
in
adc
xor
and
sbb
xchg
push
add
je
ss
scas
arpl
imul
test
inc
aad
adc
dec
jp
jge
in
ja
cld
xlat
jp
or
xor
xor
add
add
xchg
cwtl
push
push
pop
mov
inc
jb
or
pop
push
fwait
sahf
xor
in
shr
push
jmp
jmp
scas
in
xchg
mov
sub
stos
ret
fadd
inc
adc
pop
jge
pop
inc
ret
sbb
jo
sub
scas
lret
ss
mov
loopne
in
fwait
jo
and
lods
mov
das
xor
adc
xlat
xor
rcr
mov
rcr
mov
sbb
jmp
stos
xorb
dec
pop
out
inc
pop
lock
sub
or
js
xorl
test
sbb
stos
jno
popa
jb
arpl
icebp
mov
cmp
dec
cmp
sub
stos
inc
popf
or
fs
pop
fs
dec
mov
xor
add
dec
or
lea
test
mov
jb
stos
jmp
aad
js
in
or
pop
or
adc
ss
xchg
xchg
loopne
in
add
ficomps
inc
fs
lahf
mov
add
mov
popl
loop
mov
sub
push
cmp
cmpb
mov
adcb
sub
mov
xchg
stos
mov
mov
lahf
stos
ret
lds
lret
fistpl
lret
dec
jg
ja
dec
pop
insb
cmp
test
stc
cld
out
mov
xor
enter
xor
cmpsb
jnp
jno
std
mov
mov
rcll
lea
arpl
out
clc
jp
es
stc
iret
adcb
movb
pop
lret
mov
inc
sarb
or
pop
cmp
shlb
mov
ja
lret
insl
sbb
pop
arpl
insl
pop
jno
loop
or
cwtl
jmp
xchg
jecxz
les
cmc
mov
dec
jns
jmp
in
sbb
push
add
xchg
cmpsl
mov
enter
lods
fstpt
rcrb
or
fsubrs
test
sahf
pop
sub
mov
push
dec
inc
outsl
lods
ret
xchg
aad
out
dec
dec
mov
mov
bound
outsl
add
in
xchg
lret
xor
push
test
repnz
and
and
pop
call
sub
push
mov
fwait
loope
hlt
sti
jp
adc
ficomps
or
sub
push
mov
xchg
and
mov
or
or
cmpsb
and
stos
cmp
mov
cmpsb
mov
lret
les
add
cld
pop
cwtl
sub
adc
arpl
sahf
sub
xor
jg
xlat
inc
mov
repnz
dec
add
movl
testl
ret
cli
lahf
rolb
inc
test
cmp
sti
xor
jo
loope
aam
out
dec
jnp
ret
aam
shlb
imul
xor
addb
in
out
call
sbb
adc
lcall
loop
call
cmp
adc
sbb
xchg
stos
xchg
jne
andl
shlb
les
sti
out
pop
xchg
hlt
in
cltd
xchg
add
fs
or
mov
pop
xor
cmp
dec
mov
and
push
pop
pop
imulb
dec
insb
xor
adc
vmwrite
pop
pop
mov
mov
pusha
sti
cmpb
sbb
push
xor
mov
fidivrl
popf
lret
mov
jl
dec
out
fimull
test
int
pop
xor
sub
rcll
mov
push
mov
sub
pop
sub
fs
stc
in
add
lret
lea
fldl
mov
push
xchg
jnp
mov
or
ja
aaa
aaa
sub
ror
mov
hlt
fsin
scas
pop
jb
andl
mov
dec
xor
pop
jne
rorb
sarl
iret
fwait
sbb
adc
pop
into
call
sbb
call
andl
mov
jo
js
inc
mov
ret
xchg
pop
jae
pop
adc
push
fwait
adcl
sub
pusha
out
int
inc
insb
add
pushfw
push
mov
jl
pop
orl
stos
dec
mov
lods
shlb
fsub
mov
ja
add
jae
jb
dec
dec
or
gs
push
xchg
enter
mov
inc
sbb
or
lcall
jmp
cwtl
xor
imul
push
or
lea
cmp
lahf
sti
jl
in
dec
arpl
jne
and
sbb
xor
mov
dec
repnz
adc
mov
sbb
pushf
clc
push
int
lret
push
adcl
xchg
push
jnp
push
pop
pop
xchg
adcl
das
lcall
aas
repz
test
test
stc
fldenv
mov
sub
imul
mov
addps
xlat
push
inc
jns
sub
push
mov
inc
lods
ficomps
es
test
xchg
outsl
aaa
ljmp
and
dec
cwtl
sarl
pushf
icebp
js
imul
xchg
add
add
imul
icebp
mov
inc
xchg
xor
ds
mov
pop
cwtl
jns
lahf
xor
adc
jb
or
pusha
sbb
jg
insl
test
add
outsl
sarb
inc
pushf
and
xor
stc
xor
enter
xor
push
pop
xchg
pop
jo
mov
inc
movsl
cmp
imul
adc
adc
clc
pop
dec
dec
pmaxub
lcall
leave
aaa
jne
nopl
mov
jb
sahf
mov
ret
pop
jp
mov
mov
or
into
cmp
into
sbb
pop
dec
mov
out
mov
std
jl
and
imul
fidivl
pop
ret
insl
cmpsl
lahf
in
push
xor
inc
mov
test
test
push
decl
sbb
js
inc
bound
cwtl
xchg
scas
ja
movsb
pop
call
sub
dec
arpl
cmp
sbb
xor
clc
xchg
addb
xor
lods
aad
xchg
pop
add
shll
jnp
inc
nop
leave
out
jg
and
jno
popa
mov
sub
lar
mov
fwait
xor
cwtl
mov
mov
sub
stc
xor
mov
mov
rorb
int3
mov
insl
dec
daa
push
mov
xchg
outsl
in
loope
out
and
and
out
out
xor
js
stos
adc
mulb
ds
cmp
dec
sahf
add
out
inc
pop
sbb
pop
push
rcrl
mov
aas
pop
push
pop
lret
pusha
cmpb
movsl
cld
inc
add
dec
data16
jnp
push
orb
lret
sbb
cmpsb
xchg
pop
adc
adc
push
lods
daa
out
push
and
push
js
loope
sbb
mov
inc
icebp
std
aas
xchg
jge
into
rcrb
lret
imul
pop
jp
xchg
sahf
xchg
pop
mov
add
mov
adc
pop
pop
std
inc
call
mov
push
mov
outsl
add
inc
stos
cmp
adc
mov
imul
mov
shlb
enter
mov
pop
push
dec
out
push
mov
and
pusha
fcoms
sarl
mov
das
adc
xchg
das
or
lods
je
add
dec
jmp
fs
bound
and
inc
shl
and
test
cmp
dec
fwait
inc
inc
cmp
adc
ljmp
sti
mov
sub
xchg
inc
int
int3
mov
les
xchg
dec
cmp
pop
mov
sub
jp
loope
js
xchg
pop
jecxz
cli
mov
jnp
jge
jg
dec
or
cmpsb
repz
sub
push
lcall
lret
cmp
lods
test
sahf
or
xchg
jmpw
jl
or
mov
shll
fidivrl
mov
inc
popa
std
add
aad
data16
lods
pushl
fwait
hlt
int3
jle
mov
dec
ja
out
xchg
inc
sbbb
push
dec
and
int3
loop
repnz
jbe
sbb
adc
xchg
xor
inc
mov
mov
leave
ror
mov
movsb
add
sti
scas
fisubrs
jecxz
sbb
movsb
out
ret
nop
mov
popa
mov
push
pop
out
outsb
mov
in
sbb
outsb
stc
lahf
mov
pop
add
in
imul
mov
mov
cli
test
into
cmp
lret
xor
sbb
mov
ljmp
loopne
adc
daa
xor
sub
jae
pop
xchg
pop
jl
adc
xrelease
dec
ss
andl
mov
daa
fldt
adc
sub
inc
jae
adc
bound
outsl
and
in
mov
rorl
adc
imul
pusha
insb
mov
mov
nop
loope
leave
clc
cmc
sbb
dec
pushw
jg
mov
mov
rolb
call
push
std
gs
and
or
or
out
not
adc
lret
xchg
sub
cwtl
or
int3
jns
add
dec
and
and
adc
mov
cmp
jmp
sti
push
mov
shll
xchg
add
cmp
cmp
adc
xor
mov
mov
dec
sub
repnz
mov
loopne
loopne
fwait
push
mov
roll
lods
lods
xchg
push
inc
sbb
out
arpl
in
sbbl
fisttpll
lcall
mov
int
push
cmp
cli
xor
mov
add
loope
negl
cli
rorb
les
push
adc
pop
movsb
fistl
add
aad
cwtl
pop
cwtl
mov
call
adc
mov
pop
or
imul
mov
and
pop
cltd
pop
orl
xor
mov
outsl
jbe
mov
mov
push
sub
and
fstps
pusha
mov
xchg
in
adcl
or
and
in
and
call
xor
sahf
sbb
push
int3
push
repz
mov
mov
icebp
inc
call
test
inc
mov
sar
iret
aas
or
pusha
lds
clc
rorl
int3
sub
out
inc
cltd
jnp
pop
jo
jp
or
push
addr16
pushf
lret
mov
xchg
pop
or
mulb
xchg
xchg
or
add
dec
in
push
cli
idivb
ljmp
push
xlat
inc
mov
into
mov
dec
push
frstor
pushf
stos
pop
push
pop
dec
call
sbb
adc
bound
fldcw
mov
dec
and
xlat
jp
mov
jne
and
mov
das
test
mov
fcmovu
call
ljmp
bound
xchg
add
in
popf
outsb
in
jmp
pushf
out
push
clc
imul
rol
jmp
data16
mov
daa
mov
xchg
add
outsb
negb
push
jge
or
jmp
out
loop
cmp
push
xchg
stc
cmpl
inc
js
mov
movsb
es
jg
gs
les
inc
push
cmp
repnz
xchg
fwait
lods
add
daa
jnp
das
cmpl
mov
out
pushf
cmp
in
test
repnz
jmp
lret
mov
hlt
loop
imulb
fneni(8087
xor
xchg
iret
cmp
pop
jge
add
pusha
test
mov
pop
repz
cmp
jecxz
in
lods
inc
push
jne
fisttps
push
or
adc
pop
lahf
inc
inc
fs
std
jge
aam
lahf
outsb
inc
insl
rcll
add
inc
loopne
in
push
push
push
int3
mov
out
mov
or
cmp
shl
sub
fldl
loope
add
lret
fwait
mov
or
cltd
movsb
cmp
adc
mov
push
ljmp
ficomps
xchg
sbb
negl
pop
test
insl
roll
repnz
inc
xchg
mov
mov
xor
mov
clc
rol
and
addr16
and
sahf
xlat
add
inc
xor
mov
arpl
adc
scas
ljmp
jns
in
push
mov
test
sub
dec
outsl
jmp
int
bound
shll
inc
jnp
lcall
jmp
enter
out
call
leave
ficomps
sbb
adc
sbb
fwait
jns
mov
mov
or
or
mov
dec
aad
adc
dec
jne
ret
xor
inc
xchg
mov
push
and
adc
cmc
cmpsb
xchg
dec
js
addl
push
orl
movsb
add
add
xchg
ret
sub
or
dec
fldenv
ds
dec
cmc
pop
sbb
in
sub
dec
sbb
xchg
ljmp
and
push
dec
aaa
jp
mov
shr
cmpsl
xchg
and
push
jmp
arpl
mov
fimull
std
sub
mov
test
mov
xchg
insl
push
or
sbb
mov
jecxz
inc
cmp
decb
mov
mulb
int
xorl
mov
movsb
iret
stos
push
loope
lret
arpl
test
dec
lock
xchg
enter
pop
fldl
or
leave
mov
jecxz
cs
xor
aad
push
scas
push
or
dec
dec
std
fs
stos
jp
xchg
ds
add
and
xor
inc
int3
sbb
test
stc
adc
and
pop
push
jo,pt
test
and
nop
out
cwtl
xlat
jl
cltd
lcall
cmpsl
aam
out
mov
dec
in
push
scas
jp
mov
push
loop
adc
mov
or
mov
mov
fnsave
mov
enter
or
or
jns
adc
cmc
cltd
inc
jns
or
mov
out
and
pusha
sub
jl
mov
fsubl
or
sub
lret
sbb
es
lahf
jo
rcrb
fldcw
test
dec
aam
and
add
dec
sbb
repz
rclb
pop
cli
push
sub
mov
cmp
les
inc
push
out
scas
push
je
ja
insb
mov
stc
shr
add
movsb
loopne
ljmp
repnz
mov
dec
std
aas
mov
andb
pop
ljmp
push
cmp
insl
incl
inc
aas
jno
test
sbb
popa
add
fldpi
add
lret
cmpsl
lret
mov
mov
aad
gs
sbb
cltd
addb
dec
sbb
jo
popf
jecxz
add
mov
cmp
aad
imul
sarb
idivl
jg
outsl
mov
and
xchg
push
clc
xchg
fwait
jmp
rcrl
loope
jnp
or
sti
mov
addr16
paddusb
sub
fisubs
hlt
add
jnp
int3
leave
sbb
lret
jmp
adc
loopne
fimuls
dec
shll
aam
stc
adcb
test
mov
out
jg
dec
sbb
ret
idivl
pop
imul
fdiv
lds
lock
sub
mov
pusha
dec
popf
push
push
cmpsl
jo
fnsave
stos
sbb
adc
adc
lret
mov
imul
xchg
fists
and
push
push
fucomi
enter
sbb
cmp
pop
jg
xor
push
andl
int3
push
in
repnz
icebp
dec
mov
enter
sub
test
rol
aas
sbb
mov
les
pop
pop
push
popf
stos
xlat
cmc
add
cmp
test
imull
aas
xchg
ja
stc
inc
fsubrs
rcll
leave
mov
mov
mov
mov
fsin
xor
push
jnp
and
jg
movsl
adc
shr
xchg
adc
sbb
xor
mov
push
xor
ret
jecxz
jb
add
sub
push
pop
outsb
mov
xchg
aad
std
add
ja
cmp
fs
sub
scas
jge
mov
jmp
incl
cmp
fiadds
daa
enter
bound
push
cwtl
ds
sbb
scas
cmp
sub
xchg
or
sbbl
jbe
cltd
sub
cwtl
lds
lea
or
mov
push
ljmp
ret
add
test
outsb
jae
shlb
sbb
add
and
sbb
jecxz
ds
push
xchg
push
lret
dec
push
fildll
inc
mov
imul
dec
push
dec
bound
jge
lret
shll
lea
loope
inc
mov
test
lret
pusha
and
mov
adc
in
rcrb
mov
lds
repz
sbb
jle
xorl
lahf
aaa
icebp
int3
cmc
mov
pop
out
imul
nop
int
dec
in
push
push
pushf
leave
fst
fisttps
out
adc
jg
ljmp
sbb
or
pop
inc
js
js
jmp
test
pop
or
mov
clc
out
aas
adc
sbb
dec
fistl
cltd
push
pushf
mov
call
es
dec
popf
movl
movsl
fs
pop
and
jbe
je
mov
pop
das
xchg
ljmp
and
adc
adc
mov
or
gs
cld
in
call
jg
aas
xor
in
cmpsb
mov
gs
jbe
shl
cli
pop
push
stc
add
fistpl
or
xchg
fucomip
rclb
test
divl
xorb
cmpsl
push
mov
outsb
jns
mov
xchg
push
sbb
push
adc
sub
in
unpcklps
cmpl
std
in
fs
jl
pop
out
sbbl
push
add
testb
lret
jb
loope
xor
mov
adc
popf
cmpsb
mov
rolb
pop
mov
sbb
outsl
and
mov
es
fcomip
lods
xchg
xchg
cmp
gs
push
loop
fstp
sbb
cmp
jl
ret
movsb
push
mov
adc
in
add
jmp
ljmp
sahf
inc
data16
std
repz
call
fbstp
push
ret
scas
mov
hlt
std
adc
xor
xchg
into
push
sub
xor
jmp
xor
and
xor
sub
cmpsb
xchg
out
call
sbb
fsubrl
ficoml
lods
ja
js
insw
push
inc
mov
inc
or
inc
push
jne
xchg
int
ret
adc
imul
sub
test
sbb
xor
add
mov
push
aas
test
adc
pop
cmp
mov
mov
jge
test
push
dec
pop
mov
int3
push
repnz
add
ret
aas
and
adc
test
or
outsb
mov
sub
and
lahf
fisubrs
mov
insl
int3
roll
cltd
adc
or
lea
adc
xor
jnp
lahf
mov
or
sub
mov
lret
aam
fildl
rcll
jge
cld
cli
inc
jge
push
inc
into
pop
int3
xchg
and
test
test
icebp
lds
sub
aam
in
int
pusha
jg
mov
dec
pop
cmp
jbe
push
jno
push
add
push
fadds
in
movsb
js
xchg
mov
xor
ffree
add
dec
inc
jne
dec
cmp
mov
fwait
std
sub
scas
jmp
mov
dec
fimull
pop
pop
test
andl
movsl
rcrl
test
in
push
cmp
cmc
fwait
inc
xor
xlat
inc
sar
jnp
sbb
pop
sub
xchg
cmp
ss
mov
mov
sub
and
cmc
stc
cmp
mov
clc
sbb
sti
dec
xchg
dec
fistl
ss
mov
enter
pushf
xor
test
icebp
testl
jne
hlt
scas
fwait
push
mov
pop
mov
loopne
shrb
dec
mov
dec
or
imul
cmp
cltd
pop
in
ss
test
mov
faddp
push
lahf
shrl
repnz
mov
jbe
pop
adc
push
loope
fs
xlat
xchg
imul
gs
jbe
xchg
cmc
mov
and
js
cmp
push
pop
inc
data16
shll
xchg
mov
mov
mov
mov
nop
in
jecxz,pt
or
in
movsb
mov
sbb
jno
xor
imul
mov
lcall
sub
fwait
jno
and
mov
xor
add
rolb
sub
fimull
das
xor
mov
and
adc
cmp
mov
mov
int3
imul
fisubrs
enter
enter
push
pop
or
lods
call
jle
xor
dec
jle
xchg
inc
flds
movsl
inc
sub
push
xchg
pop
outsl
mov
test
mov
arpl
lahf
jle
push
mov
mov
shll
xor
inc
mov
cmp
xchg
aas
ss
repnz
mov
mov
adc
and
mov
push
rcrl
cmc
jb
push
cmp
mov
pop
mov
jle
fwait
jecxz
rcr
push
adc
mov
je
push
fmull
inc
std
mov
pusha
pop
jmp
inc
add
push
jbe
mov
out
xchg
add
jecxz
mov
pushl
and
add
loope
jg
dec
jbe
xor
ljmp
mov
fmull
aad
mov
in
movsb
mov
fwait
dec
call
jae
add
pop
or
stc
and
cmp
jg
icebp
xchg
stc
test
sub
cwtl
mov
imul
add
cmc
xor
gs
aas
and
test
sbbb
cld
sbbl
mov
xlat
into
imul
jle
inc
cmp
int3
gs
adc
adc
and
cmpsb
push
mov
dec
xlat
daa
and
xor
pusha
jp
and
in
mov
pushf
adc
xchg
cmpsb
inc
dec
adc
arpl
shrb
aaa
sarb
out
inc
mov
je
xor
mov
fidivrs
das
sbb
push
in
imul
mov
mov
jno
dec
lahf
into
inc
xchg
mov
rcl
push
inc
pusha
add
lret
ja
dec
jno
sub
imul
add
jl
in
dec
leave
inc
mov
sti
push
cltd
popf
mov
pop
lret
loop
sbbl
or
rcrb
outsb
cmc
or
jbe
ds
in
enter
push
cli
push
or
xchg
shll
dec
inc
ficoml
mov
sbb
mov
imul
fadd
pusha
mov
popa
jg
or
push
movsl
call
fidivrl
hlt
cli
cmp
cmp
mov
jg
xbegin
sti
test
jns
int3
xor
les
mov
test
test
or
cmc
mov
int
xor
jns
lods
or
test
imul
mov
jg
fstl
js
fdivrl
jl
adc
push
out
and
clc
enter
stos
mov
icebp
stos
mov
inc
shll
call
cli
jnp
or
arpl
arpl
fcmovb
stc
adc
cmp
mov
pop
cmp
mov
in
cmp
mov
in
sti
repnz
lcall
fistpl
jb
pushf
jo
fwait
mov
cmp
jns
testb
mov
test
lods
outsb
fisubrl
sbb
mov
cmp
xchg
jb,pn
loope
out
add
lret
pop
hlt
sbbl
mov
mov
push
popa
lcall
jbe
ljmp
dec
inc
cltd
cmpsb
mov
fisubs
lock
xchg
fnsave
clc
aam
aaa
pop
subb
testl
fadds
sbb
xor
lods
out
sbb
jno
les
inc
stos
shlb
data16
in
pop
add
popa
sub
addr16
cmp
std
dec
and
dec
idivl
jmp
outsl
ljmp
les
out
clc
or
ret
pushl
pop
push
pop
popl
xorl
out
sahf
and
das
sbb
sti
test
js
inc
pushl
push
adcb
fiadds
push
mov
scas
lea
out
iret
and
insb
dec
sub
loop
aad
arpl
sbb
test
jne
xchg
inc
out
inc
js
mov
or
sbb
dec
movsl
inc
jp
ja
pop
fadd
push
scas
pop
repz
or
notb
cli
jmp
mov
insb
mov
loopne
aaa
cwtl
outsl
popa
cmp
pop
lret
movb
pushf
jbe
dec
sbb
movsl
loopne
jp
ja
iret
data16
in
stos
clc
xor
mov
jecxz
in
lret
lret
xchg
or
and
bsr
nop
in
test
fistl
aad
mov
lods
xor
in
fstps
xchg
fcompl
lret
divb
add
xor
mov
sub
mov
adc
pop
negb
xchg
stos
mov
out
mov
dec
lret
xchg
outsb
dec
and
push
shrb
or
test
push
cwtl
movsl
add
xchg
dec
mov
in
pop
sub
sahf
int
cmpsb
mov
loope
mov
scas
xor
test
loopne
outsb
movsl
sti
jno
cmpsb
pop
scas
in
mov
fs
fcomip
push
cmp
pop
arpl
mov
mov
fdivrl
jo
pop
inc
movsb
push
add
sarb
andl
mov
out
lret
jbe
dec
xchg
out
and
jns
cmp
mov
std
pop
adc
mov
push
cmpsb
mov
imul
cwtl
jno
addb
or
lcall
mov
cmp
jg
fstl
or
test
fsubrs
test
aas
fistpll
imul
dec
stos
inc
fstl
add
imulb
mov
mov
and
iret
mov
outsb
jne
arpl
add
repz
sbb
out
xchg
pop
clc
cmpsl
xlat
xchg
ret
mov
jbe
sti
xchg
mov
leave
adc
or
pop
nop
adc
mov
push
lahf
pop
pop
mov
pop
adc
xchg
nop
or
bound
rcrb
and
sarl
mov
inc
pop
mov
inc
cmpsb
ljmp
insl
mov
test
shll
dec
jle
jecxz
add
cltd
xor
adcb
shlb
stc
mov
dec
jo
out
in
inc
ljmp
daa
jecxz
incl
and
mov
cmp
push
inc
incb
inc
or
push
clc
loop
daa
xchg
sbb
outsb
xlat
mov
flds
push
jl
addr16
les
insl
add
dec
in
jnp
das
testl
lcall
push
ret
mov
lods
mov
arpl
push
mov
and
xlat
addr16
mov
push
sbb
fistpll
inc
jne
hlt
add
xchg
stc
sub
or
lret
mov
cli
hlt
outsb
mov
inc
sbb
mov
lea
fsubs
and
sar
aaa
adc
fcoml
out
mov
dec
inc
xchg
mov
jne
call
mov
stc
mov
push
decb
add
movsb
add
adc
loop
fadd
dec
inc
xchg
hlt
mov
imul
jle
cltd
dec
add
sbb
stc
out
sbb
xchg
rolb
sti
in
adc
stc
stc
repz
rorl
or
cmp
sub
ljmp
in
cmp
inc
in
xchg
test
push
xchg
dec
and
enter
adc
cmp
or
sub
push
rcrb
jl
jp
inc
xlat
push
shll
movsl
je
aas
movsb
lods
jp
mov
ljmp
loop
adc
std
cmpsl
std
adc
jo
or
and
push
stos
cmp
push
dec
sub
dec
push
nop
pop
sub
add
ret
in
push
cmpsl
mov
cmp
mov
neg
pusha
inc
js
js
lock
mov
mov
insb
jbe
sti
pop
fdivrs
jge
pusha
cmp
push
xchg
push
adc
ljmp
loope
push
rcrb
cmc
adc
stc
dec
loope
push
push
add
lcall
push
push
in
mov
or
cmp
and
into
loope
or
xor
test
push
loop
mov
pop
scas
mov
mov
sub
mov
push
xlat
movsb
mov
xchg
dec
icebp
pop
mov
data16
ret
xlat
mov
sbb
xchg
jge
je
mov
mov
negb
cmpl
ret
and
lret
call
lcall
sub
cmpsb
jl
sbb
in
jnp
daa
cmp
scas
hlt
mov
and
sub
outsl
cmpsb
sub
add
test
add
flds
fs
out
ljmp
lock
mov
xor
mov
inc
dec
test
jb
adc
and
imul
insb
sbb
dec
rcll
data16
mov
push
in
sub
push
cmp
xlat
xlat
seta
loopne
add
or
lods
dec
cmp
sbb
mov
test
ja
xchg
in
cmp
mov
dec
loope
rcrl
sub
xchg
lret
push
out
xchg
fs
jb
cs
mov
fwait
in
ja
ror
aam
pop
pop
les
pop
cwtl
jne
popa
push
adc
scas
jnp
stos
test
es
pop
and
outsl
xchg
sub
outsb
loopne
xchg
mov
dec
insb
fcomip
into
xor
sbb
mov
iret
arpl
push
ret
add
adc
pusha
gs
out
sub
or
inc
jmp
test
inc
push
outsb
mov
data16
xchg
xor
xchg
mov
mov
adc
call
pop
ljmp
fcoms
pop
push
inc
xchg
and
lock
into
cwtl
adc
pushf
int3
inc
das
arpl
ss
lods
or
push
fstpl
xchg
movsl
call
ds
or
pop
pop
xor
mov
ret
push
pop
sti
mov
and
jne
call
pop
dec
jmp
jno
sahf
imul
outsb
fs
pop
jle
cmp
ror
pop
mov
imul
out
rcr
std
pop
cltd
out
pop
ljmp
xorl
mov
or
push
adc
pop
ret
jae
test
and
lds
xchg
leave
inc
rcl
imul
jns
xchg
outsb
jae
ret
mov
into
popa
daa
dec
loope
into
push
aaa
xor
cmc
mov
lds
xchg
mov
iret
lret
addr16
mov
inc
pop
les
inc
add
pop
fistpl
aam
imul
sbb
pop
xchg
cmpsl
bound
xchg
fstpl
fidivrs
add
arpl
sub
pusha
sbb
mov
test
sti
mov
jmp
cmp
cmpsb
mov
push
repnz
mov
nop
arpl
or
ret
movsl
imull
and
jl
jbe
xchg
mov
xchg
fwait
xchg
mov
clc
lods
aam
jno
mov
in
push
sahf
lahf
int3
mov
mov
test
lock
mov
movsl
mov
pop
std
lea
dec
adcl
int3
into
mov
cmp
inc
ds
sahf
and
cmp
dec
mov
lock
or
sub
mov
into
lahf
adc
mov
mov
inc
repnz
outsl
xor
sbb
es
pop
addb
imul
and
out
pop
push
cmp
inc
iret
push
lret
and
mov
or
mov
add
inc
lret
dec
sbb
and
js
popa
ds
xor
pop
xor
jne
xchg
mov
xchg
push
into
scas
lods
shll
mov
add
adc
mov
in
mov
cwtl
and
jne
std
fcompl
adc
call
fcoms
fimuls
out
pop
pop
mov
inc
cmp
mov
mov
add
xlat
mov
sbb
or
mov
add
push
js
wrmsr
sbb
sub
mov
mov
pop
xor
shufps
pop
push
stos
sbb
mov
cmp
lret
or
cmp
or
adc
loop
mov
inc
aad
popl
sbb
or
fidivs
sub
andb
add
daa
inc
ret
sbb
lods
jecxz
daa
lods
repz
mov
push
and
leave
mov
je
iret
pop
mov
push
mov
push
add
push
or
bound
sub
add
mov
fimull
cmp
sahf
push
add
pusha
jge
bound
icebp
lret
daa
enter
inc
dec
inc
mov
mov
aam
xchg
push
or
aaa
jecxz
ja
or
scas
mov
xchg
sti
xchg
mov
shlb
clc
jmp
dec
mov
mov
in
pop
mov
nop
lods
in
jl
push
movsb
xor
xor
xlat
add
jg
stos
mov
mov
jne
mov
cltd
gs
jne
movsb
jmp
mov
lods
clc
ljmp
xchg
xor
arpl
xchg
cmpsl
test
shlb
es
insl
pushf
inc
sub
loopne
push
je
mov
fstl
mov
adc
cwtl
push
jl
fisubl
je
ss
add
repz
ror
incb
xchg
movsl
das
stc
and
sbb
push
xchg
int3
out
clc
push
sbb
orl
xchg
lcall
out
push
mov
sbb
add
inc
jle
xlat
cmpsl
movsb
sub
clc
je
rclb
adc
outsb
add
adc
cld
insb
outsb
jge
inc
loopne
fldl
mov
ret
xor
clc
cmp
jne
testl
enter
add
xor
sbb
pop
aas
jmp
push
sbb
out
repnz
clc
xchg
clc
mov
mov
mov
fsubs
or
xlat
sbb
mov
push
xchg
mov
nop
insl
out
aad
xor
hlt
dec
jnp
pop
fs
xchg
popf
ror
xor
out
rorb
and
scas
sub
std
push
push
ret
ss
mov
jo
xchg
sub
ss
jno
and
enter
adc
mov
xor
xchg
mov
pop
and
out
fs
insb
roll
mov
sbb
lret
cltd
mov
imul
jecxz
sub
imul
xchg
addb
mov
xor
out
xorl
dec
adc
in
stc
push
fsts
out
jno
sarb
and
out
pop
jge
or
popf
int3
push
push
and
out
push
jg
idivl
jp
roll
mov
xchg
repnz
mov
fidivrl
adc
xchg
cmc
cltd
jne
sbb
loope
adc
loope
movsb
test
push
sbb
and
push
pop
int
repz
or
les
jae
je
adc
mov
lret
mov
clc
mov
rcrl
stos
popa
je
lock
in
fdivp
fbstp
jnp
nop
test
or
or
out
xchg
sti
in
sub
push
flds
arpl
stc
sbb
loopne
dec
not
inc
jmp
es
imul
lods
sub
scas
loopne
xor
je
cmp
mov
mov
jbe
jge
inc
leave
mov
inc
int3
inc
adcl
xor
js
jnp
and
jne
testl
xor
and
dec
mov
xchg
add
mov
pop
push
movsb
lahf
rcrb
jmp
adc
xor
dec
insb
xchg
cs
cmc
xchg
xchg
loop
movsl
xchg
into
std
aaa
in
cmpsl
mov
add
dec
xlat
out
clc
out
call
in
les
mov
jbe
stos
jne
xlat
popf
mov
insb
cmp
push
out
lea
cmp
ljmp
add
out
xchg
and
and
mov
mov
gs
std
xchg
stos
jp
ret
popf
xlat
leave
pop
decb
jg
jbe
sub
std
or
sub
es
mov
in
divb
sub
outsb
sub
xchg
leave
arpl
mov
and
sbb
hlt
enter
test
jle
insb
nop
jo
or
pop
cld
sarb
lods
cwtl
mov
jns
pop
loope
inc
add
ret
lea
icebp
outsb
jns
sub
popf
jg
iret
xorb
daa
cmp
adcl
testb
lods
jb
js
lret
cmp
mov
movsb
dec
out
mov
lret
or
stos
push
push
fwait
sub
int3
push
repz
out
nop
inc
pusha
dec
clc
sub
stos
test
pop
adc
sbb
jne
add
out
mov
mov
jns
pop
inc
popf
inc
mov
scas
mov
cmp
add
inc
jecxz
sahf
adc
jecxz
out
aad
stos
lret
xchg
sub
in
jmp
pop
lcall
mov
add
mov
mov
loope
loop
cwtl
imul
jg
jle
loope
add
call
clc
fdivr
lahf
or
das
push
cmp
xor
addl
jne
pop
rcll
pop
and
xchg
int
in
dec
add
fisubl
and
sti
pop
loope
int
fldcw
shll
test
sub
sahf
icebp
adc
sbb
push
jp
cmpsl
mov
mov
cmp
and
das
xor
in
mov
xchg
out
jecxz
mov
shrb
mov
xorb
adc
mov
testb
lock
sbb
outsl
xchg
push
int
mov
scas
add
push
test
xchg
loope
xchg
cmp
rcr
imul
jecxz
mov
addb
push
sbb
push
jmp
adcb
iret
test
loope
xor
aas
lahf
movsb
and
fstp
fisubrl
fdivl
sub
mov
or
adcb
sbb
or
in
and
loop
xchg
fs
adcl
mov
adc
jnp
cmp
leave
mov
mov
mov
dec
stos
xor
xor
inc
ljmp
sbb
mov
out
jns
lods
shrb
mov
nop
lds
int3
cmp
lds
incb
mov
sub
mov
les
mov
stc
nop
or
insb
adc
sahf
xchg
push
xor
subl
or
cld
add
jne
out
shr
xor
outsl
cmc
adc
mov
pop
mov
loope
add
gs
outsb
mov
aaa
dec
jl
pop
mov
pop
and
mov
inc
jge
ret
sbb
or
or
adc
scas
cmp
out
xor
mov
subl
xorl
repz
adc
call
pop
adc
outsb
xor
mov
popa
icebp
mov
fwait
ljmp
adc
and
loop
sbb
push
iret
mov
iret
sti
mov
loopne
inc
jge
inc
mov
insb
mov
pop
arpl
js
cmp
js
ljmp
inc
sbb
cwtl
ja
dec
xchg
repz
xchg
cmc
xor
stos
std
loop
pop
mov
loop
scas
xchg
mov
aad
sbb
sub
inc
xchg
pop
pop
icebp
insl
mov
insb
push
mov
xchg
or
decl
mov
jae
sub
aas
sbb
mov
clc
cmc
mov
loopne
pop
push
repnz
sub
daa
pop
sahf
out
icebp
cs
out
inc
mov
dec
xchg
adc
ljmp
adc
jle
mov
lods
sti
add
cs
jb
fidivs
loopne
sbb
mov
jg
push
movsl
cltd
sbb
cmpsb
jb
cmpsb
outsl
loope
scas
test
add
mov
jle
dec
ja
xchg
inc
fisttpl
addr16
nop
pop
mov
call
fs
jmp
adc
jo
outsb
dec
daa
jg
pop
fiadds
dec
mov
jmp
vpsadbw
xchg
pop
fcomi
sub
fsubrs
pop
xchg
pusha
sub
mov
cmp
int3
xor
pop
icebp
sbb
add
data16
mov
mov
and
mov
repnz
jge
addr16
aad
clc
sahf
cs
leave
fwait
pop
dec
leave
cs
jae
mov
popa
jbe
sbbl
xchg
nop
mov
pop
inc
lock
shr
push
call
mov
pop
and
add
cmp
xor
jns
push
push
test
je
mov
fnstsw
mov
ds
cmp
pusha
jne
cltd
dec
es
dec
xlat
sbb
pop
and
gs
enter
jmp
mov
jp
cwtl
pop
inc
aaa
mul
jmp
mov
shll
out
xadd
push
fistpl
and
mov
nop
pusha
pop
subb
cmpsb
inc
clc
xor
mov
adc
aad
jle
push
add
cmpsl
sbb
mov
push
mov
cmpl
lea
inc
aad
xchg
jae
push
loopne
add
pop
fildl
div
scas
pop
push
ss
stos
cltd
aas
pop
or
push
ljmp
fdivs
adc
inc
sbb
fstpl
enter
jge
rcr
jl
int
xchg
insl
in
call
mov
sbb
in
jbe
adc
mov
pop
jne
fnstenv
mov
fiaddl
mov
dec
xchg
mov
mov
mov
sub
sbbl
lahf
cmp
adc
push
jl
cld
pop
jmp
jnp
push
fstpt
scas
ja
cmpsb
movsb
ds
out
push
add
cmp
cmp
insl
in
mov
xchg
imul
iret
xchg
insl
mov
pop
dec
push
jle
fdivr
dec
jae
sbb
movsb
mov
loopne
rol
mov
clc
fcoms
fstps
movsb
outsb
inc
stos
or
push
or
push
movsl
iret
pop
push
jmp
pop
test
mov
push
pop
andps
and
mov
mov
movsl
add
test
lcall
iret
lcall
push
sbb
fsub
fistpl
cmp
loop
ja
call
pop
add
cli
insb
xor
test
xchg
stos
out
sti
inc
popa
jo
xor
mov
or
lahf
xor
jbe
movsl
popa
int3
xchg
hlt
mov
jae
daa
popf
shr
movl
adc
xchg
dec
imul
fnstcw
add
push
out
mov
jb
out
xor
sub
std
jns
rorb
or
lret
jne
addr16
leavew
mov
mov
add
insl
add
push
ds
rclb
pop
mov
xchg
in
mov
outsl
ret
stc
lds
lret
je
jne
sub
push
js
imul
outsb
rolb
jmp
stos
pop
fwait
out
push
xchg
dec
mov
sub
lock
jo
test
sbb
pop
mov
sub
mov
jle
cli
fnstsw
int3
dec
jmp
mov
mov
movaps
mov
adc
loop
imul
enter
mov
ror
popa
or
int
sub
lcall
fcmovnbe
fwait
xchg
pop
idivl
or
xchg
push
inc
out
ret
sbb
pop
loop
cli
add
cmp
pop
pop
mov
add
loopne
cltd
push
jne
xor
shl
inc
dec
lds
mov
outsb
std
jle
inc
arpl
jp
xchg
adc
jecxz
int
inc
repnz
sub
lahf
inc
xchg
add
lahf
addr16
sti
cs
iret
pop
out
pop
fisubs
test
mov
mov
xchg
fdivrp
inc
hlt
adc
jbe
decb
jg
push
jb
jno
dec
pop
cmpsb
xchg
mov
push
push
insb
sub
jecxz
shll
mov
or
fbld
jp
push
xchg
adc
sub
stc
iret
jp
int
ss
and
repz
sbb
jmp
xor
sub
push
pushf
mov
cltd
mov
lea
popa
repnz
stos
fs
ljmp
mov
lret
and
lahf
xchg
test
out
sub
add
xchg
insl
or
mov
mov
scas
jmp
cmp
fdivp
inc
ret
xchg
and
mov
jb
sub
call
lea
out
dec
lods
sub
mov
fildll
lret
sbb
mov
ret
repz
sbb
lret
push
les
aaa
or
repz
lret
loopne
cmp
leave
jge
hlt
inc
aam
jo
mov
aaa
faddl
decb
lods
xchg
nop
mov
xchg
fsubs
lret
add
mov
scas
pop
push
lahf
adc
jne
loopne
dec
pop
sub
hlt
dec
or
insl
std
flds
ficomps
rcrl
adc
lahf
dec
loope
or
bound
lods
and
jno
loop
jle
loop
adc
dec
pop
mov
mov
xchg
jnp
addr16
xor
or
fnsave
in
adc
iret
xor
or
xor
jno
and
cld
sub
nop
bound
cmp
outsl
sbb
inc
cmp
add
loopne
ret
adc
and
sar
das
mov
fwait
lcall
mov
mov
push
lock
mov
stos
jae
xchg
fstpl
push
mov
pop
inc
inc
stos
andl
notb
mov
inc
sti
cmpsb
mov
xlat
inc
jl
xor
ljmp
jle
xor
out
dec
push
sub
or
mov
mov
ds
mov
mov
movsb
iret
add
sti
push
sbb
aas
incb
lea
mov
mov
in
and
out
or
pushf
mov
and
mov
xchg
or
ljmp
dec
lock
into
lods
jp
filds
cmp
inc
mov
loope
or
mov
clc
jge
fmuls
iret
cmp
xchg
inc
cwtl
insl
shll
std
inc
dec
cmp
inc
leave
or
mov
les
ss
test
jl
std
pushf
sbb
push
std
fwait
fs
add
and
inc
lods
mov
fdiv
add
adc
xchg
push
popf
or
xchg
es
mov
ljmp
lahf
inc
out
imul
fcomip
aas
mov
les
jl
xlat
mov
nop
call
sbbb
rcll
std
out
and
and
movb
das
movsb
sub
cmp
rcr
imul
ror
push
adc
shlb
imul
dec
mov
push
mov
mov
xchg
test
pop
xchg
mov
rcl
mov
out
lea
nop
lds
outsb
xchg
je
or
mov
push
sbb
fwait
dec
rcll
xchg
loopne
pop
fidivrs
setnp
mov
or
push
mov
jmp
add
shl
fmull
es
pop
pop
ret
aam
dec
jnp
push
xlat
aaa
pusha
xchg
std
adc
jno
std
clc
popa
inc
cmp
adc
mov
cmp
bound
and
inc
test
jp
repnz
adc
sbb
mov
cmp
cld
xorb
dec
dec
mov
pusha
xchg
mov
mov
popa
xor
ret
jno
out
insb
or
std
xor
gs
iret
into
jecxz
pop
aam
xor
mov
incl
into
fwait
data16
cmp
or
fldenv
inc
adc
mov
roll
cs
shl
mov
cmp
pushf
inc
icebp
or
xor
mov
inc
jns
lcall
jmp
fs
shl
gs
sbb
test
jno
sti
mov
ljmp
fcompl
stc
inc
loop
or
cmp
jge
subb
fsqrt
arpl
or
popa
lds
xor
mov
fiadds
cmp
cmp
bound
out
repnz
jp
mov
or
mov
out
out
int
pop
lea
addr16
loop
and
jp
cli
aam
repnz
pop
pop
mov
jne
mov
xchg
adc
inc
and
and
daa
repz
pop
dec
aas
mov
mov
clc
sub
mov
popl
sub
lahf
xor
and
xor
xchg
out
cmpsl
je
aam
mov
repz
mov
jge
fcomp
aas
sbb
nop
mov
test
cmp
dec
lahf
push
inc
adcl
pop
mov
nop
pop
inc
andl
test
stc
push
negb
int
mov
and
add
lret
ljmp
inc
xchg
gs
jnp
sbb
mov
cmp
and
imul
jns
jo
or
aas
jl
add
dec
jmp
cmc
imul
dec
jo
or
in
fidivl
mov
adc
xchg
jnp
or
mov
adc
icebp
nop
or
loopne
std
push
enter
add
xlat
scas
jns
adc
inc
mov
les
and
inc
push
and
aam
fnstsw
test
lret
out
cmp
mov
xchg
jmp
into
movsl
cmpsb
dec
dec
mov
pop
jo
dec
test
mov
sbb
fdivrl
mov
cmp
stc
cmp
cmp
sahf
pop
inc
cmc
sbb
fisubrl
xor
or
neg
xorl
mov
inc
inc
xchg
cmp
mov
jne
xchg
push
mov
mov
pusha
or
aad
jl
cmpsl
mov
or
dec
into
js
scas
xchg
mov
push
xor
add
nop
das
mov
daa
sarl
cltd
outsb
dec
leave
and
movsb
mov
and
sti
cmp
sbb
mov
mov
repnz
pop
inc
mov
div
mov
cmovp
mov
xor
fld
rcrb
pusha
mov
mov
add
jbe
pop
mov
pop
pop
rcr
fs
loop
rcrl
jae
sub
repnz
repz
sbb
test
adc
dec
or
cmpsb
sub
daa
jno
dec
subl
repnz
cwtl
sub
lahf
pand
pop
jle
pop
push
mov
xchg
call
pop
jnp
cltd
push
mov
mov
sar
cmpsb
sub
addr16
lea
cmp
std
sbb
leave
sarb
xchg
sbb
mov
sti
mov
lods
test
push
adc
jle
and
pop
jo
wrmsr
fimull
std
lea
mov
or
xchg
scas
jb
sbb
sbb
inc
lret
xchg
push
add
sbb
lcall
out
xchg
inc
adcb
outsb
insb
test
test
lret
mov
adc
lods
loope
xchg
dec
imul
push
pop
pop
pop
enter
mov
and
sbb
jg
xorl
jae
loop
cwtl
je
imull
push
stc
je
xor
mov
movsb
addr16
stc
or
fs
gs
pop
or
pop
fimull
sbb
popa
dec
lahf
sub
xchg
sub
inc
test
scas
push
pusha
sar
mov
xor
notb
fucomip
xchg
addr16
insb
imul
pushf
arpl
adc
xchg
push
cmp
movsl
outsb
mov
icebp
das
dec
incb
fiaddl
ret
sti
cmc
dec
pop
test
lret
pop
mov
mov
cltd
fsub
popf
xchg
loope
mov
hlt
xchg
sbbl
mov
shr
pusha
call
ljmp
rcll
add
movsb
je
ret
cmp
enter
loop
test
adc
std
rolb
out
mov
lock
lahf
push
ljmp
or
dec
dec
xor
xacquire
pop
jnp
outsl
mov
cmp
nop
push
inc
add
pop
repnz
xchg
loopne
mov
das
inc
fbld
xchg
lods
lahf
xchg
or
cmpsb
andl
pushf
out
mov
es
sbb
and
mov
ficompl
cwtl
lods
mov
enter
call
mov
inc
sbb
sahf
dec
and
notl
imul
movsb
mov
mov
fwait
into
adc
adcb
mov
lcall
mov
mov
pop
adc
cltd
mov
sbb
add
jle
test
or
mov
cmp
daa
insl
jecxz
clc
hlt
mov
in
push
cmpsb
pop
or
cmpsl
cbtw
daa
or
shrb
mov
dec
dec
sub
push
cltd
jge
mov
stc
pop
mov
shr
inc
lcall
cmp
fcmovnbe
cmp
clc
movsb
idivl
push
negl
jbe
aaa
je
daa
mov
iret
pop
push
fisubs
stos
mov
inc
push
adc
pusha
push
push
mulb
pop
mov
in
imul
call
movsb
js
xor
inc
pop
arpl
mov
pop
aam
dec
sub
test
testb
lods
pop
mov
cmp
cwtl
jae
mov
in
repnz
adc
xchg
sbb
stc
mov
pop
mov
jecxz
cmpsb
add
jne
ret
cli
iret
mov
xorb
test
rolb
testl
inc
inc
shrl
rcrb
pop
into
mov
out
mov
pop
les
cmp
jbe
inc
loop
adc
mov
dec
push
push
insb
inc
repz
in
mov
push
fmul
mov
stos
insb
popf
and
push
adcb
enter
dec
xchg
das
lock
inc
popa
shll
sbb
mov
test
dec
mov
dec
adc
xchg
sbb
xchg
movsb
cld
lods
enter
mov
idiv
sbb
sub
jge
data16
sbb
sbb
loop
sbb
test
andl
jg
push
pop
inc
loope
jb
xor
test
cmc
push
xchg
aad
cmpsb
aaa
mov
pop
shlb
sbb
dec
and
pop
jae
mov
inc
call
in
inc
cmp
push
mov
inc
movsl
sbb
fstpt
mov
sub
pop
xchg
cmp
lods
shll
sti
or
add
outsb
leave
dec
iret
mov
add
and
add
out
push
sub
or
pop
cltd
movsb
sahf
aas
scas
sahf
fldenv
or
out
dec
lea
test
loope
incl
rep
mov
and
mov
stc
lahf
dec
adc
dec
scas
sbb
fldenv
jp
js
fcmovne
outsb
ja
cmpsl
repz
rclb
sub
je
imul
call
icebp
xchg
fs
cmpb
cltd
es
and
fdiv
sub
sbb
pop
fisttpl
sbb
test
jnp
out
iret
ret
cmpsl
test
pop
stos
add
iret
xchg
sahf
mov
push
lock
dec
in
arpl
sbb
fstl
arpl
movsl
or
ret
les
test
loop
sbb
or
adc
rcl
loope
pop
mov
lcall
mov
mov
stos
mov
flds
repz
imul
js
push
mov
jnp
stos
pcmpgtw
push
cmp
cld
aas
out
cmp
cmp
or
imul
fs
or
test
sub
mov
out
and
mov
sbb
pop
fstpt
jmp
into
mov
aaa
jbe
lock
mov
pop
fdivrp
push
nop
add
dec
stos
lock
sub
and
icebp
pop
loope
arpl
lret
ds
lret
push
js
cmp
sar
sub
xchg
cmp
lods
cli
mov
les
cmpsb
xchg
xchg
sub
stos
jb
adc
stos
int
ljmp
test
fldenv
xchg
inc
sub
xor
ds
sbb
lea
jnp
int3
int
mov
clc
push
in
pop
jg
jecxz
ficomps
loope
and
ficomps
daa
fadds
sbb
sti
loope
popf
jp
and
adc
test
mov
dec
inc
mov
mov
ret
xor
sbbl
add
jbe
mov
fimull
adc
mov
push
jae
xchg
adc
lahf
xor
dec
loopne
lods
popf
and
mov
xchg
pop
pop
xor
cmpsb
loopne
xlat
aad
pop
mov
imul
jl
push
or
cmp
inc
rcrl
sbb
inc
scas
or
stc
pushf
and
ret
mov
jmp
inc
ficoml
movl
lcall
outsb
mov
dec
pusha
xchg
mov
imul
jle
int3
mov
xchg
ljmp
cmp
adc
pushf
mov
xchg
pop
pop
jmp
lds
sbb
xlat
push
push
les
ds
mov
cmc
and
lcall
dec
je
arpl
into
cmp
gs
xor
mov
cli
jmp
push
or
or
in
in
cmp
rorl
push
ja
xchg
outsb
and
aaa
int
xor
push
mov
stos
mov
repz
inc
push
inc
mov
add
loope
xor
jne
cmc
imul
ja
andb
pop
test
int
sbb
xlat
pusha
and
inc
fwait
es
popf
js
add
aas
ljmp
jle
jbe
mov
mov
mov
repnz
int3
xlat
dec
arpl
jns
adcb
sbb
adc
mov
data16
insl
fwait
mov
jno
dec
push
jb
sbb
ret
cmp
xchg
cmp
cmp
mov
and
pop
mov
adc
scas
pushf
das
fistpll
out
les
aas
jmp
cmc
push
mov
dec
pop
test
jae
sub
jecxz
jae
push
cmp
in
outsb
imul
adc
aaa
xor
sbb
push
adcb
mov
insl
push
dec
mov
mov
in
add
add
add
enter
jae
ficoms
cmc
dec
push
xchg
iret
xor
mov
out
and
mov
mov
mov
mov
inc
xchg
ror
and
xor
rorb
cld
mov
loop
cld
xorl
or
xchg
ret
out
imul
ftst
or
std
cld
inc
ret
int3
in
jnp
jbe
push
sbb
loopne
push
dec
in
popa
and
lcall
xorl
das
push
scas
mov
fisttps
mov
mov
into
dec
sub
adc
jl
cld
pushl
cmpsb
add
je
pop
mov
cwtl
adc
jge
xchg
cld
movb
ficomps
xchg
or
repz
pop
std
mov
xor
popa
inc
imul
stos
pop
xor
mov
test
mov
sub
sub
xor
int3
jecxz
rolb
ss
adc
faddl
xchg
dec
test
or
test
lcall
mov
add
outsl
mov
fnstcw
repz
pop
dec
and
xor
js
test
mov
aas
jecxz
add
xchg
imul
stos
fld
dec
outsl
push
in
cmp
mov
cmpl
mov
sbb
popf
test
mov
push
loop
mov
lret
scas
xchg
xor
pop
mov
adc
push
and
mov
adc
sub
xchg
loop
mov
dec
arpl
push
add
inc
pop
sbb
roll
lock
movsl
ljmp
movsl
bound
mov
out
adcb
int
test
icebp
jb
in
subb
out
aad
js
sarb
negl
mov
sub
lret
dec
pop
fbld
mov
orl
sbb
loop
push
hlt
jp
jnp
ds
pop
repz
mov
mov
mov
call
cmpsb
imul
ja
call
std
xor
adc
jno
push
jl
sbb
add
pushf
hlt
stos
aas
int3
mov
or
nop
mov
xchg
lock
subl
or
ljmp
jl
faddl
xchg
test
lods
mov
lods
fisttpll
mov
add
push
clc
jmp
roll
fidivs
shr
or
push
pusha
mov
mov
mov
inc
aam
cmpsb
arpl
jmp
and
imul
xchg
fs
adc
stos
push
and
movsb
scas
pop
repz
push
or
fdivl
fists
je
push
clc
sub
add
fsubs
mov
push
dec
sbb
push
or
pop
pop
sbb
mov
pop
scas
cltd
pop
dec
outsl
inc
jae
xchg
imul
cmp
xchg
xchg
rorl
push
movsl
int
cmpsb
ret
mov
mov
add
fmul
mov
jns
clc
shll
insl
int
mov
fisubl
sub
mov
gs
mov
iret
add
mov
inc
jge
mov
sub
cltd
or
add
fdiv
in
stc
dec
dec
inc
out
dec
lods
push
stc
mov
xchg
iret
sbb
rcrb
sub
mov
add
pop
rorl
test
push
imul
push
hlt
dec
aad
pop
lahf
add
jo
jo
and
out
ret
jge
pop
xor
pushf
repz
and
pop
xorl
pushf
adc
inc
inc
push
jns
imul
sbb
lea
stc
jnp
push
sub
sbb
jnp
xor
sbb
cmp
cmp
sti
popf
imul
xchg
xchg
dec
cmp
outsl
out
loopne
cltd
orb
mov
xchg
cltd
pop
xchg
popa
or
cld
aad
loope
and
mov
stos
push
jmp
imull
cmp
or
jbe
popf
int3
es
arpl
fcoms
push
pop
mov
pop
mov
into
push
adc
sbb
mov
shl
pop
mov
in
mov
dec
add
inc
inc
imul
rorb
xchg
fwait
cmp
xchg
fwait
stc
stos
or
and
mov
pop
imul
lahf
outsl
dec
xchg
adc
mov
fisttps
orb
xchg
jno
pop
jns
pop
insb
aas
outsl
inc
add
pop
scas
call
ror
xchg
mov
jg
int
cwtl
sbb
jbe
jmp
sbb
inc
fimuls
adc
mov
icebp
cmp
es
addr16
xor
pop
push
xchg
dec
iret
mov
jae
sbb
sbbb
cmp
test
jo
iret
and
xchg
add
mov
sbb
and
dec
aam
mov
push
jnp
mov
je
mov
incb
pop
xor
test
test
nop
lret
scas
mov
repnz
xor
ja
fwait
test
and
mov
xchg
adc
mov
inc
dec
jmp
loope
add
adc
and
es
aas
xor
outsl
sub
inc
movsl
fldcw
aaa
xor
xor
fdivr
out
xor
adc
iret
stc
xor
mov
pop
mov
cltd
pop
add
int3
or
and
test
insl
hlt
cltd
lcall
lahf
in
pop
cli
or
mov
jb,pn
or
repz
filds
data16
push
sahf
call
fisubrl
test
addr16
xor
movsb
ss
in
push
or
stos
mov
jnp
dec
cmp
popf
gs
mov
loope
push
push
xor
mov
lea
mov
orb
addb
sbb
cmp
fstpt
fwait
push
loope
and
cwtl
dec
shr
movsl
loope
ss
sbb
pusha
sub
mov
cmp
jbe
aas
mov
mov
pushf
dec
fwait
jmp
mov
jae
jmp
xchg
push
add
inc
add
mov
cmpsb
cld
or
sub
adc
pop
jnp
mov
and
mov
xchg
mov
push
fstpt
fmull
icebp
movsl
fdivrp
lret
sbbl
mov
jnp
xor
push
push
cli
add
lahf
cs
cli
bound
or
mov
fstpt
mov
mov
push
or
and
xchg
cmp
mov
iret
and
mov
mov
jno
std
pop
and
or
mov
mov
inc
inc
lret
cltd
jb
and
fdivs
and
pop
iret
inc
push
loope
xchg
xor
jb
jns
cmp
in
cld
sub
pop
xchg
fwait
scas
mov
leave
push
test
fldl
jmp
out
add
dec
hlt
shlb
mov
inc
sbb
popl
mov
ds
fwait
push
sbb
rorb
fs
sti
out
iret
shll
fsubr
push
pop
jb
mov
xchg
in
push
repz
addl
push
mov
mov
sahf
xor
mov
ja
mov
push
pop
mov
stc
pop
inc
idiv
outsb
lea
cs
outsb
mov
add
inc
lret
cmpsl
stos
aas
xchg
ret
adc
jae
mov
mov
jle
cld
push
imul
push
lods
push
dec
ret
pushw
dec
repnz
leave
mov
outsl
jae
pop
jmp
pop
test
xor
cmp
sti
sahf
lcall
or
test
dec
xchg
bound
in
cmp
jnp
in
enter
imul
test
sti
push
jne
inc
mov
mov
int
in
dec
lock
mov
push
cmp
outsb
cmpsb
js
adc
dec
inc
into
jmp
adc
lret
out
loope
es
repnz
rclb
push
addr16
je
mov
dec
out
sbb
mov
fs
adc
les
jp
or
dec
pop
fistps
fistpll
jl
add
mov
adc
dec
lahf
inc
xchg
aad
fs
insl
cmp
push
mov
xchg
pop
es
adc
fucomi
inc
mov
and
pop
push
jecxz
orl
fisubrs
ficoml
jo
aam
jnp
jge
add
adc
es
ret
movsl
stos
es
pop
ss
cmpsl
xchg
push
in
adc
push
dec
dec
das
shrb
mov
fwait
into
int3
sahf
popa
repz
jmp
std
lds
jns
fucomip
mov
sub
jmp
stos
mov
lods
fildl
xchg
lds
clc
sbb
mov
fs
add
call
pop
fsubl
jl
pop
xor
sar
and
pop
or
lahf
cs
sbb
aam
fisubrl
xor
mov
push
xchg
inc
popf
xor
std
movsl
dec
nop
fmul
fs
mov
stc
adc
xchg
lds
push
cmp
mov
mov
subb
sub
popf
push
repz
mov
lock
or
xor
sahf
test
mov
add
insl
das
cmp
cli
out
xchg
test
cltd
cltd
arpl
stos
fimull
cld
jecxz
jno
mov
mov
arpl
sti
push
dec
cmp
xchg
imul
aam
scas
into
xchg
leave
xchg
daa
or
dec
fsubrs
mov
jl
aam
mov
out
inc
out
popw
add
mov
js
xchg
xchg
sub
sub
mov
cmpsb
movsb
pop
fucomip
or
int
iret
scas
mov
xor
in
jae
sbb
ljmp
inc
outsl
aas
repz
je
cltd
popf
iret
fcomip
inc
cmp
jl
pop
inc
rcrb
lods
lea
jo
sub
pusha
adc
outsb
mov
loope
inc
scas
bound
jne
test
dec
lods
dec
or
adc
jo
dec
jecxz
sti
js
sbb
leave
cmp
adc
aad
sbb
jmp
cmp
or
inc
ljmp
inc
or
cmp
jb
icebp
pop
insl
cmc
int3
mov
out
fistl
repz
shl
insb
out
adc
sti
xchg
int3
dec
pop
mov
push
push
lahf
xchg
fidivrl
inc
test
xor
xor
jge
test
bound
imul
pop
push
mov
rorb
jne
inc
dec
dec
popa
sub
push
jo
mov
xchg
out
and
icebp
fcoml
xchg
addb
sahf
adc
fisttpl
cli
lds
inc
mov
aaa
push
jb
int
push
pop
fs
lea
mov
arpl
cmpsb
mov
sub
cmp
pushf
push
add
stc
fmuls
scas
aad
imul
mov
xor
in
dec
mov
cmp
addl
in
insl
adc
push
xor
fldl
jne
adc
mov
lahf
sbb
imul
or
mov
andl
inc
leave
sbb
lcall
stos
adc
cwtl
mov
mov
arpl
fnstcw
loope
cmpsl
xor
inc
jb
frstor
repz
adc
xchg
insl
push
sahf
lahf
out
es
out
xchg
adc
jmp
nop
les
mov
sbb
cmpsb
lcall
sahf
jne
xor
sbb
mov
mov
fidivrs
ret
loope
mov
push
mov
outsb
enter
dec
jb
or
dec
sub
enter
push
or
jl
test
mov
shll
les
cmpsb
adc
or
repz
jnp
pop
sahf
adc
repz
mov
push
sub
out
cmpl
cmp
popf
and
in
aas
dec
mov
pop
cmpl
ja
daa
sti
add
cmp
dec
push
dec
sub
jns
jg
jno
into
jns
fwait
jmp
push
add
push
mov
loop
fnstenv
xchg
insl
add
cmpsb
into
mov
inc
in
push
addl
in
sub
cs
mov
popf
loop
dec
es
mov
dec
push
xor
sbb
lcall
sub
ja
add
shll
mov
jno
sub
mov
dec
sbb
pop
int
sbb
xor
imul
addb
mov
test
xchg
mov
inc
sbb
pop
call
int3
addr16
fiaddl
add
sahf
jg
mov
jb
push
mov
jge
mov
push
sbb
shlb
sbb
outsb
inc
jae
test
jecxz
shl
cmc
push
pop
mov
mov
rolb
adc
pop
out
jnp
movsb
mov
clc
pop
imul
and
mov
aas
xor
enter
test
aad
push
lods
std
sarb
repnz
pop
fidivl
out
out
mov
js
mov
pop
loopne
or
push
add
cli
psraw
push
adc
pop
pop
std
inc
push
cmpsl
out
into
inc
and
inc
div
seto
int
insb
test
xchg
mov
mov
xchg
mov
cmpsl
movsb
pop
icebp
sub
cli
pusha
sub
out
arpl
int3
std
xor
push
inc
ret
cmp
sub
test
or
aad
pop
or
loope
es
jp
fisubl
faddl
iret
add
push
cld
jae
and
push
sbb
fs
fisubs
jbe
stos
and
xor
imul
lea
mov
sub
jp,pn
out
imul
sub
push
nop
cmp
pop
sub
std
movsb
das
hlt
jp
stc
ja
sbb
jge
in
ret
repz
cwtl
loop
xor
add
jnp
test
add
push
in
icebp
rcrb
hlt
push
lret
sub
add
push
inc
bt
pop
out
cltd
lahf
sub
lods
scas
cltd
insb
inc
mov
adc
rcll
mov
jg
mov
out
or
fs
test
mov
movsb
stc
sub
paddusb
mov
adc
xchg
jae
sbb
out
fbstp
or
gs
inc
mov
mov
pusha
or
inc
pop
out
add
mov
lahf
inc
xchg
mov
shufps
xor
jecxz
pop
fcomps
out
mov
nop
pop
cmp
or
mov
pop
movsb
pop
add
or
movsb
fiaddl
dec
jae
cld
stc
xchg
nop
xor
adc
mov
and
push
ss
outsb
cmp
popa
int3
xchg
dec
cmp
stos
xor
ret
clc
out
bound
dec
add
and
cmp
jmp
lcall
pop
loopne
jne
cli
jge
push
scas
xchg
mov
sahf
into
xor
push
addr16
je
out
sub
mov
mov
shl
rcrb
mov
lods
pop
mov
xor
pop
jo
mov
das
cmp
pop
aas
jecxz
or
daa
and
fdivs
sub
inc
mov
ljmp
sbb
lods
and
aam
add
pop
out
xlat
lods
fmull
shlb
jnp
pop
jl
js
enter
test
fwait
repnz
push
sub
lahf
jno
inc
adc
xor
or
fwait
mov
xchg
dec
inc
std
cmp
push
stos
pop
mov
lds
scas
int3
sbb
call
outsb
pop
in
mov
cmp
and
push
sbb
popf
repnz
xchg
loopne
xchg
inc
call
aad
adc
pop
pop
bound
dec
mov
mov
idiv
dec
sub
imul
ror
push
sub
xor
mov
adc
pushf
into
mov
mov
pop
in
insl
mov
gs
mov
test
stc
mov
inc
jne
jmp
clc
fucomp
push
mov
int3
dec
cmp
sbb
cld
mov
in
addr16
or
rorb
je
fisubs
sti
pop
mov
addb
es
and
stos
sbb
sbb
mov
std
andb
rcll
add
fnstcw
stos
jp
pop
stos
leave
mov
in
push
adc
sub
xor
addr16
inc
sub
mov
and
mov
sub
mov
cmpsb
cli
subl
jge
xchg
adc
arpl
lcall
stos
int3
mov
mov
lret
dec
mov
mov
fsincos
mov
vprotq
daa
mov
lcall
fucom
sbb
pushf
push
sbb
pop
pop
xchg
jne
into
pop
outsl
cltd
adc
fyl2xp1
adc
sub
sbb
pop
sub
das
jbe
jbe
push
cmp
outsb
daa
jmp
test
sti
and
cwtl
test
lret
insb
and
jl
add
in
and
xchg
insb
mov
js
xchg
xchg
push
and
ja
sub
mov
pushf
inc
adc
or
dec
inc
ljmp
jb
sbb
mov
adc
push
pop
lods
fidivrl
jb
dec
xor
xlat
push
jp
stc
add
dec
orps
mov
in
push
shrl
mov
cs
mov
fnsave
dec
inc
out
mov
jnp
jmp
cmp
push
orl
jmp
pop
out
leave
fwait
call
mov
and
mov
push
rcll
sbb
std
inc
or
sbb
cmc
out
jle
pop
pop
pop
or
stc
sub
adc
cmp
jecxz
add
jbe
push
push
sarb
jl
inc
mov
add
adc
dec
inc
inc
xor
mov
xor
ret
xor
xor
or
bound
ficomps
lock
adc
add
sbb
pop
mov
push
jmp
cltd
pop
xor
dec
flds
xchg
xor
popa
jg
sahf
aas
add
or
push
xchg
lret
lahf
and
clc
stos
adc
rolb
jecxz
xchg
shrb
addr16
and
ud2
mov
daa
dec
dec
clc
fcmovnb
ljmp
ja
inc
shlb
lock
ss
add
push
sahf
xlat
mov
ja
mov
xorb
jne
je
lea
mov
fdivs
loopne
xchg
jb
fsubr
adc
or
lret
mov
fisubrl
arpl
dec
xchg
imul
cld
cmp
call
fsubrs
push
lds
pusha
neg
imulb
inc
pop
ret
push
lods
insb
insl
mov
dec
xchg
add
sbb
addr16
icebp
mov
stos
loope
in
cmc
add
fisttpl
push
push
inc
inc
int3
mov
lret
outsb
push
stc
pop
enter
out
jbe
mov
mov
inc
sbb
mov
cmpsl
mov
js
mov
adc
sbb
xchg
inc
cmp
xchg
imul
lea
or
movsl
dec
out
out
icebp
stos
and
pop
jnp
test
adc
ja
pop
push
hlt
orl
or
movsb
cmp
arpl
mov
cltd
mov
mov
jne
movsb
loopne
pop
mov
fimull
xchg
mov
je
adc
insl
mov
es
imul
sub
stos
add
sub
xchg
push
or
out
insb
jecxz
int3
mov
pop
sub
jbe
cld
jns
shrl
inc
stc
aaa
xor
das
ljmp
hlt
dec
xor
out
pop
add
dec
gs
or
test
push
pop
lds
lahf
xlat
mov
add
sub
adc
add
addr16
nop
shll
pop
mov
dec
mov
mov
out
mov
enter
sub
repz
fwait
aas
int
fs
push
movsl
xor
stos
and
xlat
adc
cltd
push
xchg
cmpsb
enter
xlat
outsl
pop
pop
iret
mov
xor
aaa
outsb
lods
dec
iret
mov
jle
pop
pop
add
add
jae
movsb
mov
aam
dec
mov
mov
xchg
outsl
in
gs
ret
sub
addr16
cmp
inc
and
mov
movsb
pop
jp
cld
mov
push
iret
xor
sti
cmp
mov
xor
fnstsw
or
add
cmpsb
dec
icebp
jno
push
xchg
cmp
jb
or
push
arpl
add
inc
lret
leave
loop
mov
test
loop
shrb
ljmp
fidivrs
or
mov
xchg
hlt
mov
ljmp
and
inc
jbe
aas
sbb
sub
push
jl
add
push
fucomi
or
adc
hlt
add
xchg
in
lods
cld
mov
icebp
push
dec
jns
sbb
xorl
mov
in
and
mov
pop
ljmp
jge
pop
xor
imul
xchg
outsb
jb
push
stos
int
xchg
ret
mov
stc
notl
pop
add
nop
lds
xchg
mov
add
out
loope
adc
pushf
mov
add
mov
xchg
xor
mov
jecxz
mov
in
jmp
push
sbbl
cmc
mov
dec
ja
aad
push
xchg
pop
outsb
mov
rcrl
add
inc
mov
mov
lret
aad
jno
sbb
into
js
adc
mov
call
arpl
sbb
or
dec
aam
aas
mov
xchg
jno
pop
sbb
lods
or
push
xor
loop
pop
push
imul
xchg
out
sub
add
or
cmpsb
and
lds
pop
loope
mov
or
ss
ja
push
mov
cmp
negl
push
jns
test
fidivrs
cmp
cmc
push
jae
push
testb
mov
cmp
popa
jnp
mov
push
inc
pop
out
push
add
sahf
aad
dec
aaa
xor
or
mov
test
xor
popf
fcmovne
icebp
sub
and
repz
push
sub
rcrl
mov
out
je
mov
push
mov
push
mov
add
mov
fbstp
xorb
dec
sub
fnsave
cmp
fisttpl
and
push
mov
out
sbb
fst
fsubrs
std
pop
mov
add
mov
pop
testl
mov
test
int3
setg
test
nop
test
lret
push
xchg
sbb
in
pop
cs
jle
mov
test
push
cmp
mov
lds
ret
pusha
cld
test
in
mov
xchg
mov
push
or
loop
mov
jo
jno
dec
add
outsl
inc
es
scas
imul
movsb
or
jg
outsl
mov
jae
adc
push
hlt
ja
in
insb
or
push
aad
inc
cltd
mov
mov
test
in
repz
or
mov
cli
jnp
mov
mov
or
push
mulb
xorb
mov
loop
mov
adc
cwtl
enter
stc
inc
mov
add
lcall
repnz
push
xchg
dec
push
std
loopne
pusha
pop
loop
push
js
cmp
scas
outsb
fcoms
xor
std
stos
mov
xlat
call
dec
lret
mov
repnz
sbb
pop
add
inc
jp
ja
out
iret
roll
mov
stos
outsl
xor
mov
cli
roll
scas
das
imul
dec
dec
xchg
add
push
mov
movsl
mov
jae
pop
bound
mov
es
leave
loop
ja
dec
inc
pop
ljmp
jecxz
push
dec
pop
sub
call
test
sbb
sub
and
push
mov
leave
dec
fwait
mov
pop
jmp
adc
icebp
xchg
imul
insl
pushf
test
setb
test
cmp
sbb
pop
mov
or
movl
testl
push
nop
mov
aam
fldcw
and
fstps
negl
push
push
rcrb
dec
and
imul
sub
lret
cmp
dec
mov
jecxz
push
adc
outsb
test
fmulp
pop
mov
xchg
jbe
and
out
cmp
push
mov
push
ja
in
fucomi
dec
push
push
mov
and
push
pop
xchg
outsb
ja
mov
rolb
xchg
mov
dec
popa
aam
and
sti
xchg
sub
inc
xor
sti
sub
dec
dec
jl
xchg
push
or
xacquire
sahf
int
and
in
mov
jae
mov
shl
or
scas
icebp
jle
sub
jp
pop
sahf
push
dec
sub
and
mov
sub
dec
ja
std
bound
jnp
out
push
mov
xor
push
jmp
pop
mov
add
and
jp
mov
into
aas
adc
mov
mov
adc
xorl
jne
out
test
lea
or
adc
mov
push
scas
pop
xchg
imul
imul
lret
mov
sbb
movsl
subl
xchg
mov
mov
and
mov
movsl
dec
pop
scas
clc
jb
xchg
xchg
jl
pop
fwait
insl
imul
shll
jmp
mov
shll
push
jne
ja
aaa
cmp
mov
test
xor
scas
mov
jg
jg
les
test
inc
mov
dec
jecxz
call
xor
andb
les
call
inc
push
pop
aas
aad
pop
and
pop
mov
and
add
std
push
add
fmuls
ja
pop
xor
scas
lret
lds
pop
insl
add
lods
pusha
imul
subl
imul
adc
fistpl
push
or
mov
cmp
pop
sbb
outsl
insl
inc
fisubrs
push
sbbb
sbb
mov
mov
add
mov
rorl
fs
adc
pop
jns
mov
mov
adc
push
dec
inc
and
xchg
mov
sbb
lods
mov
fwait
int
sbb
mov
push
jecxz
jp
adc
imul
mov
dec
cmp
cs
imul
sbb
jg
jg
imul
fildl
aad
push
mov
js,pn
stos
scas
and
popf
loopne
mov
adc
movsl
fwait
add
repnz
sub
cmc
lret
mov
fmuls
div
cmp
neg
int
stc
mov
pusha
in
push
lds
or
push
mov
mov
clc
addr16
cld
mov
stc
mov
inc
cmpsl
daa
stos
push
sbb
xor
xor
xor
xchg
mov
mov
sub
repz
lcall
mov
movsb
or
mov
add
cli
cmp
add
das
adc
jbe
dec
jl
cmpsl
rcl
push
outsb
jmp
fsts
je
mov
movsb
ret
dec
outsb
lea
dec
xchg
mov
ljmp
xor
jle
pop
mov
adc
in
push
jbe
in
fimull
inc
adc
cwtl
ds
or
rcrb
insl
mov
mov
mov
xorl
cmp
push
push
leave
mov
clc
mov
popa
shrb
xchg
pop
fs
jmp
leave
mov
push
jp
add
push
sti
ret
gs
insb
add
into
xchg
xchg
pop
fldcw
rorb
cmp
xchg
sbb
out
xchg
test
jns
arpl
int3
clc
insl
popa
insb
cs
inc
cmp
adc
adc
cs
test
or
inc
paddsb
lods
and
lea
in
lds
push
mov
push
mulb
decb
daa
sub
insl
dec
mov
data16
mov
clc
xchg
mov
mov
jnp
dec
mov
cld
pop
jp
rcrl
sub
cmc
nop
fsts
test
push
sbb
cmp
imul
rcrl
or
jne
jae
mull
pop
cmpsl
sbb
xor
or
mov
je
insb
fisubrl
jo
sbb
inc
mov
repnz
mov
lret
cmpsb
sbb
inc
fwait
movsb
sbbl
push
int
ljmp
adc
dec
in
adc
les
or
fisubs
stos
mov
mov
jbe
lret
dec
mov
xor
cmpsb
cld
mov
jecxz
push
inc
sti
add
popf
cld
test
sbb
adc
mov
insb
fildll
orb
fisttpll
in
sahf
xor
sahf
sbbb
outsl
add
or
mov
cmp
jae
pop
sbb
jo
add
out
mov
adc
in
pushl
rcl
dec
or
scas
push
jg
dec
xor
faddp
outsb
push
fsubrs
mov
xchg
jne
pop
lahf
popf
repnz
into
int
add
fwait
jnp
leave
mov
movsb
add
push
xor
sbb
mov
mov
inc
lock
movsl
push
cmpsb
pop
sub
rcrl
inc
call
clc
lods
rorb
push
repnz
jmp
adc
pop
ja
mov
sub
mov
test
in
xorb
std
pop
into
sti
push
sti
stos
out
mov
push
sbb
rcl
adc
repnz
adc
mov
mulb
sbb
rep
inc
pop
subl
mov
nop
mov
mov
push
test
test
pop
fmuls
enter
ret
and
jne
xorl
stos
push
mov
cmp
lahf
stos
sub
adc
outsl
hlt
mov
lret
sbb
adc
lds
add
sub
lods
add
or
movl
mov
test
dec
push
outsb
mov
sub
pop
sbb
xchg
scas
xor
rcrb
out
mov
les
cltd
outsl
xor
out
leave
sbb
mov
add
add
bound
jmp
enter
inc
in
and
insb
sbb
jns
mov
test
loop
aas
mov
xor
and
sub
or
push
f2xm1
inc
adc
adc
xor
adc
sub
lock
jg
das
push
das
popa
test
or
fbstp
add
lock
mov
rol
hlt
ss
mov
shll
adc
ret
hlt
cmp
pop
stos
imul
or
loopne
outsb
mov
lret
push
outsl
out
or
inc
lret
or
or
insb
xorl
push
mov
clc
inc
mov
mov
push
sub
outsb
or
jbe
nop
enter
xor
jg
aam
xor
add
call
mov
xchg
leave
mov
cmc
testl
cmp
stc
pop
xchg
push
pop
ss
xchg
jl
inc
rorl
dec
jo
gs
scas
dec
adc
sub
cs
leave
insl
mov
sbb
clc
jl
imul
adc
jnp
mov
cmp
push
cmpsb
out
and
int
jbe
vpaddq
and
mov
nop
lret
test
pusha
fidivrl
mov
cli
xchg
mov
ljmp
and
in
mov
hlt
add
xchg
clc
arpl
mov
push
imull
out
add
push
sub
sarb
mov
sarl
aaa
or
cmp
fmul
inc
mov
mov
xchg
loope
fnsave
jne
ret
mov
pop
or
sub
out
icebp
push
cmp
les
loop
or
ror
push
jmp
mov
adc
scas
shlb
jbe
and
or
mov
rcrl
ss
xchg
test
pop
xlat
sarb
adc
xor
xlat
xchg
pop
add
xchg
push
push
call
adc
data16
mov
jle
movsb
xlat
xchg
mov
iret
inc
ss
mov
mov
push
xchg
pop
xchg
mov
es
call
mov
mov
or
and
iret
mov
shrb
cmpsb
dec
retw
in
into
popl
test
jle
in
loope
push
imul
mov
cmc
ss
xor
movsb
fists
ret
lock
mov
test
scas
imul
or
rorb
mov
inc
xor
out
ret
xchg
adc
mov
stos
les
add
inc
mov
add
inc
test
sub
into
filds
dec
or
xchg
adc
notl
je
adc
dec
adc
jo
pop
and
push
clc
std
loopne
pop
mov
test
cmc
jo
mov
enter
xchg
push
stc
cli
add
or
daa
pop
dec
jo
inc
loopne
jmp
and
mov
cld
icebp
mov
ret
int
fstpt
in
das
sbb
pushf
cmp
in
mov
xor
and
out
xchg
xlat
cmpsl
shrl
adc
sub
xchg
cli
jl
repz
icebp
dec
das
jns
mov
scas
test
data16
xor
dec
ljmp
mov
xchg
push
hlt
test
adcl
mov
fidivl
adc
gs
lcall
mov
out
cmp
js
push
xchg
leave
mov
pop
inc
mov
and
imul
jae
add
rolb
cmpsb
leave
addl
mov
cmpl
or
mov
or
adc
adc
mov
out
das
cld
cld
popf
mov
stos
sbb
xchg
movsb
es
mov
jmp
or
sarl
es
mov
pushf
shr
sbb
add
push
mov
mov
pop
test
lcall
xchg
lea
stos
pop
rorl
lcall
xor
sub
mov
cmp
mov
pusha
fimuls
daa
cmp
into
jle
fstpt
aas
ljmp
pop
int
and
jge
push
into
pop
pop
mov
inc
inc
js
test
test
mov
sub
aam
pop
sub
in
adc
stos
mov
or
pop
adc
movsl
push
shll
js
rorb
movsl
dec
cmp
mov
loopne
jb
arpl
inc
xlat
adc
add
mov
adc
xlat
mov
bnd
fstpt
cmp
sub
push
stc
sbb
mov
adc
cmc
fincstp
ret
lret
jmp
xchg
cmp
imul
out
xor
fildl
ror
out
mov
dec
scas
cwtl
push
pop
lock
pusha
sub
jae
pop
icebp
andl
push
lods
or
data16
pushf
rcrb
xor
jbe
xchg
lods
or
add
jle
std
inc
xlat
xchg
cmp
stos
add
jno
cmp
jo
add
jne
mov
push
ret
pop
and
mov
cmp
les
lret
outsb
jp
leave
jnp
iret
popl
das
push
int3
fstl
adc
jns
fadds
orb
mov
mov
mov
inc
fnstsw
adc
ret
imul
jo
notb
int
sub
rcrl
iret
lea
shll
aad
popf
adc
ret
and
mov
jmp
pop
enter
or
mov
mov
inc
jp
scas
andb
sub
icebp
dec
or
sub
jmp
fidivl
lahf
mov
dec
aam
cltd
fwait
dec
sub
dec
xor
cli
nop
repnz
sti
rorl
mov
out
sbb
mov
cmpsb
mov
add
mov
cltd
inc
jae
push
out
push
enter
pop
dec
push
mov
in
imul
sbb
add
inc
aad
arpl
fdivrs
jbe
mov
js
movsl
std
out
push
add
cli
stos
mov
in
inc
and
jno
imul
sub
xchg
xchg
pushf
sbb
sarb
pop
das
push
or
call
in
adc
pop
notb
jno
pop
aaa
mov
into
adc
and
mov
stc
divb
arpl
lcall
imul
popa
pop
shlb
enter
jb
fdivrp
hlt
mov
jecxz
mov
and
jbe
xlat
xchg
fwait
and
or
loopne
fisttpl
adc
cmp
lret
sti
sub
cli
xchg
pop
mov
cli
adc
lret
xchg
xor
jns
adc
xlat
and
inc
iret
dec
movsl
fsubs
aam
cmp
mov
push
mov
fs
aas
testb
xchg
xor
mov
mov
and
popf
sahf
jecxz
push
or
sub
jp
lcall
jp
push
popa
cwtl
je
test
lods
and
add
stos
or
cmc
dec
movsl
movsl
nop
pop
pop
mov
jl
lcall
adcb
aad
cmpsb
lods
hlt
mov
and
xchg
adc
add
aam
movb
xorb
sbb
adc
push
jne
int3
leave
fsub
xchg
movsl
jmp
jb
dec
repz
cmpsb
jecxz
in
ret
add
push
lea
les
jnp
cmp
ljmp
rcr
xchg
out
pop
lcall
xchg
pop
aad
cs
call
into
xchg
jns
mov
enter
pop
clc
aam
mov
mov
mov
outsb
jg
outsb
cmpsl
lods
ja,pt
push
test
mov
cmp
push
ret
push
xor
and
ret
cmovge
sbb
jo
test
fldenv
jle
sti
or
pop
jne
pushf
fbld
aam
push
rclb
mov
xadd
cld
xchg
cltd
ljmp
icebp
xor
ljmp
mov
js
rolb
aam
jb
sahf
mov
push
jb
sahf
sbb
xchg
dec
pusha
inc
sbb
xchg
int
ss
lret
add
cmp
cmp
mov
insl
xor
insl
imul
enter
ret
fisttps
xor
mov
dec
jmp
sub
mov
dec
sbb
imul
add
lods
xchg
fistpl
fstpl
add
pop
jo
cmpsb
negb
sub
decb
add
cmp
aaa
xchg
arpl
xchg
push
ret
cmp
fadds
in
in
mov
push
jle
pop
cltd
add
add
lods
adc
jl
ljmp
into
mov
mov
out
sbb
lea
cmp
fs
mov
jnp
pop
cmp
add
and
and
decb
inc
enter
inc
pop
jp
fiaddl
outsb
push
cmpsb
inc
in
xchg
sub
mov
cmpb
push
sub
call
fisubrl
hlt
addr16
jp
push
sub
mov
mov
dec
pop
mov
bound
dec
mov
inc
cwtl
out
pop
pushf
sub
ds
nop
jp
inc
popa
iret
rorb
mov
test
mov
iret
je
push
pop
sbb
mov
xor
or
icebp
dec
xor
mov
cld
popa
cmp
and
push
stos
mov
and
mov
push
movb
mov
and
xor
cs
sbb
adc
mov
mov
cld
and
in
adc
push
les
sub
pushf
sarl
sub
scas
xchg
adc
shufps
push
clc
ja
loopne
imul
inc
push
mov
out
test
pop
mov
imul
fcomip
fwait
jmp
mov
push
pusha
pop
jge
adc
mov
cld
or
ret
movl
mov
pop
add
xor
add
int
xor
ljmp
xor
or
add
push
cmp
std
dec
movsl
in
in
sub
inc
dec
ret
repnz
push
xchg
das
es
icebp
xlat
dec
out
flds
icebp
sub
push
pop
and
inc
xchg
pop
mov
lds
faddl
inc
jmp
mov
push
int
clc
mov
adc
xor
add
arpl
push
or
jne
dec
cmpsb
mov
cmp
cwtl
fstps
or
jbe
clc
inc
lea
mov
adc
push
pop
xlat
repnz
insl
mov
int3
pop
ret
repz
fs
daa
es
mov
imul
aas
and
test
push
sbb
aas
imul
icebp
jp
sub
and
mov
into
in
jle
rcrb
les
ret
in
add
fcom
lcall
bound
push
jle
or
aam
enter
mov
mov
and
cmp
mov
sub
ja
sbb
mov
dec
pop
jl
sbb
test
popf
mov
paddw
sahf
mov
pop
scas
stos
fstps
movsb
jno
popa
push
mov
lods
xor
push
mov
int3
pop
outsb
nop
sub
push
mov
rolb
cltd
mov
test
es
stos
push
std
jle
loopne
jle
pop
lret
fidivrs
sub
xchg
and
mov
idivb
arpl
pusha
xorb
jae
add
cld
or
lds
rcrb
xchg
xor
mov
jns
jne
pusha
xchg
dec
cmp
mov
popa
ficoms
stos
rol
fiadds
mov
cmc
and
out
daa
fdivrl
shlb
lahf
outsb
outsb
imul
dec
or
add
push
shl
movswl
jae
nop
cmc
jno
test
cwtl
pop
das
add
lcall
hlt
pop
ret
pusha
jge
push
cmpsb
xor
aam
fidivl
cmp
inc
movsb
jbe
insb
loop
xor
push
xor
ficoms
pushf
push
std
xor
rclb
push
lret
arpl
cmp
inc
ret
cmp
mov
mov
add
mov
rcrb
cli
xlat
sbb
clc
popf
lcall
imul
std
scas
mov
add
lock
pop
xor
mov
pusha
loope
mov
ljmp
into
aam
es
pop
dec
xchg
sbb
loop
dec
pop
ret
or
xor
outsb
call
js
mov
mov
mov
fstl
and
das
sbb
xor
out
mov
sbb
fldenv
pop
les
add
push
imul
add
ret
mov
push
call
jno
or
jb
xchg
ljmp
jno
add
cmp
popf
stos
add
push
outsb
les
mov
lods
repz
mov
push
or
jb
adcl
inc
cld
xchg
test
xor
xchg
pop
sub
call
sub
inc
loope
and
push
and
sub
xlat
pop
push
out
inc
icebp
popf
push
pop
cmpsl
ss
sti
inc
sub
or
adc
mov
fistl
jo
and
movsl
stos
xchg
push
hlt
mov
jg
int3
mov
lahf
or
mov
dec
push
pop
cmp
add
mov
or
sbb
clc
rolb
or
xor
fsubl
loop
jbe
bound
or
add
fmuls
xlat
int3
xor
sbb
adc
int3
stos
sub
fisttpl
cmpsb
icebp
xor
jb
adc
xchg
inc
sub
push
and
in
mov
iret
pop
fimuls
jle
shrl
sbb
xor
into
andl
shl
mov
in
div
outsb
insl
insl
dec
pop
cs
xchg
add
and
bound
push
rcrl
dec
in
mov
add
xlat
mov
sbb
mov
imul
addr16
xor
jmp
stos
adc
add
rclw
xchg
fisttps
pop
pop
lds
or
les
sub
mov
hlt
test
lret
andb
push
push
push
pop
clc
inc
ret
sbb
mov
pop
aam
mov
sub
subl
adc
int
adc
or
mov
mov
inc
das
cld
sbb
lea
push
js
mov
fnstsw
inc
or
pop
sarb
fstps
fcomps
jnp
jb
scas
push
mov
xchg
lock
sbb
jbe
sbb
or
nop
rcrb
pop
roll
nop
loop
out
mov
push
movsb
ret
sarl
mov
xchg
in
call
mov
mov
and
arpl
mov
push
jmp
rcrb
mov
rorb
mov
lahf
mov
aad
jo
shr
jb
cld
mov
shll
cld
int3
rcl
idiv
or
mov
sbb
out
cmp
jmp
iret
cmpb
outsl
sbb
mov
imul
lds
lret
rcrb
or
inc
jg
and
xor
je,pt
mov
inc
dec
aas
push
mov
movsb
push
inc
sbb
out
fwait
inc
sbb
sub
sbb
and
std
bound
xor
xor
lahf
mov
dec
mov
adc
add
and
jl
xchg
adc
jp
iret
mov
or
shrb
int3
je
or
and
jo
in
and
mov
mov
stc
pop
cs
std
jmp
ds
aam
xor
test
es
push
enter
lods
out
xchg
and
aam
icebp
sub
mov
mov
dec
mov
outsl
movb
call
xchg
sti
cmp
loop
lret
pusha
rcl
mov
test
sarl
aas
mov
jmp
in
imul
push
ss
cltd
mov
or
or
xbegin
rcll
iret
adc
shlb
sub
iret
mov
mov
mov
xchg
out
dec
sbb
cmpsl
shll
movsl
movsb
aas
data16
ret
or
mov
mov
push
xchg
mov
push
jno
mov
push
inc
pusha
or
inc
fstpl
pusha
imul
out
addr16
push
push
popf
push
sti
notb
shrb
jne
adc
sub
add
add
jae
lea
cmp
addr16
inc
and
jo
adc
inc
in
test
sarl
popa
arpl
xor
mov
dec
push
cs
imul
adc
dec
aad
cli
insl
mov
fmulp
rclb
or
push
data16
in
stos
aaa
sahf
mov
xchg
fs
sbb
lcall
and
sub
and
add
xchg
push
push
mov
cmp
enter
sbb
ljmp
push
dec
std
lock
ret
push
cmp
out
mov
pusha
xchg
mov
bound
call
js
test
cltd
ja
xchg
iret
push
mov
insb
fsubr
mov
leave
jne
dec
loop
jb
mov
add
cmp
in
in
lods
lock
jg
mov
enter
loope
addr16
xor
hlt
jns
pop
or
xchg
sarl
xchg
jo
in
push
push
xchg
xchg
add
sbb
sbb
push
sub
fdivl
out
mov
jg
xchg
or
adc
rol
xchg
mov
pop
lods
shlb
js
sub
dec
icebp
mov
lods
dec
jne
sti
inc
out
sub
enter
dec
mov
sbb
lret
jecxz
push
ret
loop
sbb
clc
stc
test
movsb
push
mov
movq
adc
test
loope
xchg
dec
int3
shll
icebp
pop
fstpl
loopne
movsl
bound
mov
hlt
sub
jecxz
sbb
movw
sub
inc
stos
int
adc
sub
mov
pop
xchg
push
mov
inc
repz
sub
or
rclb
out
rorb
lea
or
ds
dec
xor
cmpsb
mov
fistps
dec
gs
es
les
dec
std
jl
outsl
mov
out
push
lret
push
add
dec
xor
fidivs
xor
scas
jecxz
cmpsb
pop
mov
pushf
sbb
iret
mov
scas
out
sarb
mov
push
adc
sbb
or
cmpb
jno
icebp
je
stos
gs
add
bound
cltd
fnstsw
pop
ror
sti
mov
mov
inc
jo
push
inc
sub
mov
sub
sbb
stos
sbb
jo
and
mov
out
pop
and
pop
push
lcall
xchg
or
or
add
jle
idivb
jns
lahf
push
lods
jb
popf
loop
cwtl
mov
xchg
sbb
jge
mov
adc
push
out
pop
push
sub
jnp
je
jle
std
cmc
inc
jmp
push
sub
mov
jle
jns
jae
push
sbbb
pop
pop
adc
les
push
jge
inc
popf
mov
dec
fisubrs
dec
xorl
sahf
cltd
jle
mov
enter
mov
jae
repz
mov
pop
dec
cltd
jo
fucomip
sub
les
mov
mov
test
addb
adc
dec
cltd
popa
jmp
xor
inc
in
push
rclb
nop
adc
popa
sub
xchg
sbb
movsb
mov
and
test
popa
jp
dec
mov
and
mov
sbb
sub
ja
jns
xchg
nop
out
add
sub
jae
add
jnp
inc
imul
lock
sbb
dec
inc
mov
cld
xchg
inc
dec
dec
cmp
sahf
pop
insb
push
fildl
and
fwait
iret
and
repz
dec
subl
add
shll
roll
adc
inc
push
cmp
enter
xor
push
mov
mov
roll
test
out
inc
adc
push
push
fnstenv
dec
pop
imul
inc
aas
jl
adc
mov
imul
dec
arpl
bnd
dec
sarl
mov
repnz
cmp
cmp
sti
negb
mov
ret
sub
popf
cmpsb
movsb
xchg
xchg
aam
sbb
push
push
outsb
pop
stos
or
or
mov
sub
js
and
test
dec
pop
pop
scas
popf
and
fidivl
popa
cltd
xlat
in
mov
inc
outsb
mov
pop
stc
mov
mov
test
add
lret
jno
or
dec
shr
xchg
adc
jg
sub
outsb
repnz
push
imul
inc
add
inc
push
dec
mov
adcl
arpl
adc
ret
push
pop
push
ret
dec
mov
xlat
pop
xor
in
sub
inc
les
mulb
xor
out
sbb
shlb
int3
lock
scas
xchg
mov
pushf
mov
or
pop
adc
push
jg
lods
and
sbb
mov
mov
outsl
insl
lahf
je
xchg
xchg
rcrb
mov
sub
sbb
pop
movsb
ss
je
jns
rclb
ja
jecxz
dec
into
xor
pinsrw
dec
mov
dec
push
es
addr16
push
push
pushf
data16
lret
das
adc
les
xchg
xchg
mov
int3
test
xor
jle
add
cli
cmc
mov
pop
out
cmp
sarb
inc
inc
jg
enter
xchg
xchg
add
outsl
cmp
cmp
inc
adc
sbbl
out
dec
mov
cld
cmc
push
icebp
in
jmp
sbb
outsb
adc
lock
jb
divl
scas
aas
xor
shlb
hlt
xchg
loop
sbb
inc
push
jge
adc
push
sbb
shl
sbb
sub
daa
jge
or
sbb
aaa
xchg
mov
adc
sbb
shlb
das
iret
mov
pop
xchg
mov
decl
jl
push
fsts
jl
js
call
or
sub
cmpl
test
shr
iret
rol
dec
push
in
xchg
adc
fldenv
jecxz
jno
xchg
stc
inc
or
out
pop
jae
hlt
or
push
adc
push
jb
pop
sub
aaa
adc
pop
push
fadd
loop
data16
lock
sub
shlb
pop
mov
stos
mov
das
push
sti
ds
jg
aas
sti
adc
adc
sub
push
lods
pop
addr16
pop
jnp
pop
sub
xchg
out
or
js
addr16
jns
adc
push
lds
sub
mov
xor
mov
lea
cmp
mov
loopne
ret
adc
fnstenv
dec
cmp
fimull
psubusb
jb
sbb
je
dec
rolb
je
mov
ret
cmp
cmp
sarl
push
in
dec
sbb
jnp
into
cmp
push
addps
das
xor
jmp
fisubrs
stc
mov
ja
addr16
jl
iret
aas
push
std
dec
testb
pop
add
loop
sbb
push
push
aaa
jecxz
xchg
std
cld
jle
stos
add
mov
loopne
mov
and
mov
adc
subl
jns
mov
into
nop
mov
lds
ljmp
inc
pop
scas
cmp
inc
or
cmpsl
cltd
in
pop
test
cs
out
imul
mov
ret
pop
mov
loop
in
inc
jl
add
add
push
adc
popa
roll
rep
cmp
xlat
add
or
or
aad
push
lcall
roll
push
jnp
enter
rcr
mov
into
cmpl
cmp
sbb
or
dec
xchg
ljmp
hlt
jecxz
adc
ficoms
pop
xchg
adc
cmpw
push
adc
in
fstpt
addr16
cmp
enter
fidivl
lahf
and
cli
cpuid
mov
int3
dec
and
and
push
adcb
pcmpgtd
dec
mov
test
add
sub
cmpsb
je
orl
xor
pop
ja
jmp
loope
int3
clc
xchg
jge
js
lret
in
int
jae
ret
push
and
shrl
jmp
add
out
subl
mov
adc
or
mov
adc
mov
push
cmp
lds
ja
inc
and
iret
pushf
xor
pop
lcall
mov
movsb
fisubl
xor
notl
lock
notl
lcall
lods
and
mov
pop
mov
push
shlb
pop
inc
jg
or
sbb
and
and
pushf
sbb
daa
pushf
sbb
mov
cmp
mov
adc
lods
mov
push
jp
push
mov
mov
test
loop
jne
outsb
push
dec
stc
ret
pop
add
mov
sbb
push
stos
aaa
push
dec
mov
cmp
inc
or
iret
push
mov
lret
out
jns
jbe
aas
fstpl
cmpsl
mov
lds
add
rclb
pop
sbb
jo
or
test
push
movsl
adc
mov
stos
js
sub
push
popf
jbe
adcl
push
outsl
shl
mov
mulb
call
mov
test
cmp
pop
test
es
into
lods
dec
dec
jno
or
pop
inc
or
les
push
fistl
loopne
aas
andb
lahf
jmp
imul
out
insl
sub
es
cli
mov
adc
mov
add
jg
insl
in
add
ret
ljmp
xchg
push
and
jmp
dec
fdivrs
lods
add
or
adc
aam
pop
arpl
push
cld
ret
fpatan
mov
lret
repz
sbb
push
sub
and
cld
andl
lds
cmp
das
mov
inc
mov
clc
addb
into
sbb
mov
mov
dec
test
cmpsl
movsb
cmp
push
cmp
jnp
popf
ss
cmp
mov
push
cmp
sub
leave
cli
inc
cltd
jae
int3
mov
mov
cmp
mov
jae
pop
mov
pop
aad
in
fnstsw
mov
xchg
arpl
and
mov
dec
stos
push
insb
xor
rclb
lahf
fistps
movsl
mov
dec
nop
stos
lret
in
xchg
inc
sbb
fsubr
and
jbe
mov
push
loopne
mov
test
leave
loopne
out
stc
lds
cmp
in
aad
stos
or
sbb
stc
add
sahf
push
lret
mov
mov
lds
inc
in
mov
jo
imul
hlt
dec
and
repz
mov
cmpb
push
mov
mov
icebp
dec
jp
jne
insl
mov
out
sahf
mov
iret
pushf
rorb
popa
fisubrl
push
pop
sub
sub
fincstp
mov
imul
push
mov
lds
dec
pop
mov
or
adc
mov
jb
xchg
adc
mov
out
lcall
aas
hlt
dec
test
cmc
sub
push
cmp
enter
push
push
icebp
jge
cmc
xchg
pop
jno
js
ret
and
mov
outsb
js
test
inc
and
mov
ds
cmp
adc
sbb
roll
mov
cmp
leave
test
aam
rclb
mov
mov
cmpsb
ret
mov
daa
in
in
loop
xchg
inc
mov
aas
divl
mov
dec
fsts
in
stc
lea
scas
stc
ja
test
addb
mov
lahf
out
mov
mov
jl
and
pop
jb
outsb
cmpsl
jl
test
xor
addb
aam
xlat
les
push
mov
mov
or
shr
cmp
mov
test
dec
movsl
movsl
push
fcoml
xchg
fndisi(8087
stc
mov
lds
xlat
fnstsw
pop
pop
mov
mov
jae
xchg
mov
jecxz
repnz
fists
sbb
out
enter
and
stos
iret
mov
add
repnz
push
xor
int
imul
scas
add
and
mov
cli
and
shr
lock
xor
and
cmp
add
out
aam
out
dec
test
scas
add
movsb
jb
orl
sub
stc
pop
and
mov
cmp
jae
add
test
or
fs
xor
ljmp
fnstcw
push
and
mov
fsub
hlt
inc
inc
hlt
ds
sub
in
xor
jg
test
lahf
mov
std
ss
cmp
cmp
call
pusha
mov
jnp
pop
dec
pop
pop
jno
stos
push
cmp
movsb
add
mov
sub
cmpsl
adc
push
push
adc
xchg
cli
cmp
movsl
repnz
cs
ljmp
jp
sub
add
test
mov
cltd
or
cmp
lds
adc
lcall
pop
mov
sub
xor
adc
aad
adc
lods
mov
and
mov
or
push
test
pusha
sub
sbb
imul
xor
sub
out
popf
and
cld
pop
xchg
in
or
aaa
out
push
add
ret
in
movsl
pop
xchg
shlb
push
cmp
push
arpl
iret
or
cmp
add
jns
pop
push
dec
js
lret
dec
orb
or
je
lcall
in
imul
dec
out
movsb
arpl
lcall
mov
mov
push
loope
test
mov
ret
sub
shlb
pop
test
jmp
std
xlat
fs
add
xor
fsubrl
fldl2t
push
jbe
lea
cmc
dec
jecxz
or
rcrl
jmp
bound
and
les
aas
les
test
inc
popa
sbbl
push
daa
or
in
sub
dec
jo
jmp
mov
dec
call
push
mov
or
adcb
cmp
add
or
add
incb
pop
xchg
mov
in
or
inc
ret
jnp
mov
pop
call
scas
pusha
inc
loope
adc
fisttpl
cs
sbb
dec
daa
testl
rcr
push
insl
lahf
in
mov
int3
popf
jge
jl
or
arpl
push
outsl
ficoms
out
testl
fwait
jae
insb
adc
in
mov
inc
mov
adc
dec
ds
sub
add
inc
out
les
out
ret
sub
jae
dec
mov
dec
xchg
xchg
fisttps
shll
out
subl
adc
stos
mov
stos
cmp
jo
pop
jb
add
inc
jge
inc
popa
xchg
je
cmc
in
add
xor
inc
sub
sub
sbb
lcall
jmp
popa
cs
jns
into
mov
pop
outsl
mov
sbb
sub
inc
dec
pop
aam
iret
lods
fildll
inc
mov
int3
xchg
mov
cmp
xor
adc
add
or
inc
jp
ljmp
add
pop
cli
push
lea
cmp
iret
pop
cli
adc
gs
push
lock
fcmovne
dec
cmp
jecxz,pt
xchg
sub
xchg
dec
loopne
ljmp
jae
dec
cmc
pop
xlat
xor
and
lods
arpl
insl
mov
add
jecxz
dec
ret
dec
jl
jecxz
sahf
sahf
sub
mov
arpl
mov
insl
sbb
scas
data16
dec
cmc
pop
xlat
and
and
lods
imul
dec
mull
cmpsw
jo
stos
nop
jecxz
dec
inc
or
divb
sahf
gs
cmpsb
cltd
arpl
ds
aas
cld
mov
xchg
loop
arpl
scas
lcall
xor
bnd
repz
lods
popf
mov
ret
int
inc
mov
daa
jo
stos
cwtl
jecxz
dec
inc
dec
arpl
gs
loopne
xchg
arpl
aas
das
cmp
clc
and
int
rcl
and
pop
repz
shrb
repz
insb
ficoml
outsb
jno
xlat
cmp
pop
jl
push
and
inc
add
icebp
push
mov
data16
stc
jb
xor
and
in
outsb
and
sbb
push
insb
rclb
dec
popa
mov
jl
push
and
inc
inc
dec
jo
push
mov
jbe
mov
stc
pushl
clc
and
int
rcl
and
pop
test
stos
fs
or
fwait
inc
mov
mov
adc
jg
fsts
push
sbb
out
push
add
adc
enter
imul
or
sahf
mov
adc
add
add
stc
push
add
test
mov
and
les
xor
cmpl
cmp
pop
xor
add
xor
mov
pop
lahf
cmp
sub
out
fdivrs
stc
inc
and
push
pop
icebp
mov
xor
nop
sbb
sbb
push
xchg
mov
jae
push
adc
pop
xor
adcl
push
mov
pop
lahf
cmp
sub
jle
add
fidivrl
stc
push
add
pop
pop
icebp
mov
cmp
xchg
sbb
xor
les
xor
cmpl
cmp
pop
xor
add
xor
mov
pop
lahf
cmp
sub
out
fdivrs
stc
inc
and
push
pop
icebp
mov
xor
nop
sbb
sbb
push
xchg
mov
jae
push
adc
pop
xor
adcl
push
mov
pop
lahf
cmp
sub
jle
add
fidivrl
stc
push
add
pop
pop
icebp
mov
cmp
xchg
sbb
xor
les
xor
cmpl
mov
pop
add
add
push
mov
jg
mov
pop
sub
das
xchg
jle
xchg
jo
sarb
in
inc
mov
mov
xor
cwtl
push
mov
test
push
or
sahf
adc
adc
adcl
push
mov
jg
mov
pop
sub
adc
cmpl
add
dec
stc
mov
cmp
lcall
or
sahf
lds
add
push
mov
pop
add
add
push
mov
jg
mov
pop
sub
das
xchg
jle
xchg
jo
sarb
in
inc
mov
mov
xor
cwtl
push
mov
test
push
or
sahf
adc
adc
adcl
push
mov
jg
mov
pop
sub
adc
cmpl
add
dec
stc
mov
cmp
lcall
or
sahf
lds
add
push
cmp
add
add
scas
mov
xchg
lock
or
das
aad
pop
sarl
scas
mov
aam
sbb
add
mov
orl
cmp
lea
movsb
pop
insl
adc
push
scas
fwait
push
mov
shlb
pushl
inc
fcmovnu
leave
dec
mov
and
cmp
in
or
in
push
orl
xchg
add
lods
mov
ljmp
daa
fisttpl
loopne
mov
jg
in
lahf
jg,pt
adc
xlat
inc
mov
in
mov
jp
rcl
pop
daa
mov
jae
xorl
mov
sbb
jb
out
test
jg
popa
mov
xchg
xor
rorb
in
cmp
cmp
add
stos
fcomps
mov
adc
jb
ficoml
sbb
fs
mov
outsb
iret
imul
mov
cmp
add
xor
enter
mov
lds
lahf
arpl
mov
mov
movsb
push
aas
imul
stc
popf
xor
push
and
ljmp
pop
int3
inc
adc
sub
sub
test
clc
repnz
loopne
jno
xchg
movsb
mov
sub
test
cmpsb
call
addr16
inc
cmp
add
sahf
mov
add
and
popf
nop
xor
cmp
loopne
mov
inc
adc
cmp
sbb
test
mov
repz
call
inc
push
imul
or
inc
and
pop
mov
addr16
mov
dec
or
mov
dec
int3
icebp
pop
std
pop
fstpl
jl
cmp
jle
addr16
cmc
mov
pop
or
aam
sub
sub
mov
and
pushl
mov
jp
mov
test
out
cmp
ret
cmpsb
mov
out
cmpsb
movsl
and
es
cmc
or
fmull
sub
mov
adc
or
fstpl
addl
sbb
mov
xchg
mov
xchg
sub
adc
lods
inc
pushf
mov
pop
out
dec
mov
pop
out
dec
pusha
je
mov
into
loopne
movsl
dec
aas
jb
lret
lds
jp
test
cmp
test
stc
and
adc
jmp
jl
aam
lods
lahf
aas
xchg
jmp
and
popa
sub
ljmp
in
stc
mov
loope
scas
ds
in
adc
aad
in
pop
push
inc
faddl
scas
dec
nop
pop
gs
add
mov
sti
rcrb
cmp
push
add
and
xchg
std
movsb
mov
test
rcl
shll
in
xor
dec
mov
add
ret
push
cld
lods
push
mov
xchg
cmp
scas
out
popa
add
stos
xor
jns
adc
scas
outsb
inc
jg
mov
cld
lcall
aad
pop
lods
xor
mov
mov
rcr
cmpsl
push
jns
push
popf
mov
leave
and
jl
xchg
cli
ret
mov
sub
popf
cmpb
or
jg
stc
sti
notb
stos
push
ja
mov
mov
arpl
cld
lds
add
pop
pop
fsts
push
sub
repnz
popf
dec
mov
outsl
sub
xchg
cmc
aam
aam
cmpsb
jl
or
pusha
cmp
or
or
lret
push
add
pop
movsl
repnz
mov
push
popa
movsb
push
clc
pop
das
test
pop
dec
mov
or
sub
sbbb
aam
xlat
mov
outsl
lret
sahf
loope
in
jp
push
xor
mov
pop
mov
inc
outsl
add
jp
inc
cli
adc
lret
jno
filds
mov
cmp
mov
stc
adc
es
fiaddl
popa
mov
and
inc
into
mov
mov
adc
aaa
mov
adc
xchg
push
jns
fnstenv
mov
daa
cmpsl
icebp
cli
push
mov
in
in
pop
dec
push
or
rcrb
in
loopne
xlat
rcl
out
frstor
in
inc
jle
cmpsb
mov
cs
clc
jne
loop
arpl
repz
hlt
inc
xchg
xor
xor
xchg
lret
stos
notl
pop
mov
dec
and
cmp
ror
popf
mov
jae
pop
xlat
out
xor
add
inc
mov
gs
push
subb
xor
pushl
int3
rcrl
mov
enter
add
push
dec
mov
lds
jno
pushl
imul
lds
pop
cmpsb
rcl
scas
lret
cltd
cmp
jne
cmp
fldcw
push
sub
cmp
clc
es
rcrl
cmc
add
scas
stos
sti
push
ret
or
jne
pop
loope
pop
fcom
and
dec
push
insl
cmp
xor
push
test
jb
lret
pop
sahf
dec
movsl
sbb
mov
ja
std
pusha
cwtl
push
mov
mov
push
jle
or
add
sbb
jb
int3
or
pushf
mov
mov
dec
pop
dec
jl
cmp
or
aad
popf
loop
loopne
or
and
lret
jg
and
bound
xchg
pop
mov
add
movsl
xchg
add
mov
roll
mov
shrl
pop
subl
mov
clc
es
sbb
push
mov
push
mov
or
bound
push
sbb
xchg
pop
cmc
ss
in
adc
xchg
imul
add
divl
idiv
or
fnsave
jns
or
mov
aaa
mov
inc
sub
std
cmp
mov
xchg
fnclex
hlt
mov
inc
mov
or
jge
cmp
jmp
das
push
add
iret
sub
fsubr
into
enter
les
pop
mov
cmp
mov
scas
sub
mov
fdivr
insl
movsb
add
push
dec
push
add
lods
enter
jg
and
mov
jmp
jecxz
jmp
aam
mov
inc
adc
scas
dec
mov
imul
lds
es
push
inc
cmp
cs
and
bound
xor
jge
fcoms
sub
repz
pop
leave
setle
pop
push
xchg
fucomp
pop
push
das
pop
cld
loopne
movsl
xchg
scas
mov
arpl
jbe
cmpsl
xchg
inc
xor
push
cli
adc
and
push
iret
aas
xchg
mov
js
cwtl
push
enter
cmp
push
jmp
mov
jmp
jbe
push
mov
in
inc
lea
cltd
lahf
jle
scas
xchg
add
xlat
popa
les
lds
mov
aad
into
pop
adc
mov
outsb
lcall
dec
aam
push
imul
ljmp
cmp
imull
popa
mov
push
ja
xchg
lods
movsl
leave
loopne
arpl
es
pop
mov
cwtl
push
scas
inc
push
lods
ret
push
pop
sarb
and
arpl
data16
push
cld
mov
mov
cmp
cs
sbb
add
orl
xlat
jno
jns
int
scas
fisttps
dec
add
mov
jo
repz
cmc
sub
test
or
xor
sub
mov
and
cmp
stos
ljmp
sti
scas
hlt
int
or
jge
cmpsb
cmp
mov
pushf
lock
jmp
fucomi
fdivp
jnp
test
int
mov
or
test
cld
inc
jmp
fisubl
jns
data16
or
ds
mov
pop
fmull
add
and
scas
xchg
fwait
mov
lea
fwait
add
aas
xchg
shrl
dec
clc
and
sbb
mov
xlat
push
pop
push
xor
mov
dec
ret
push
cmp
dec
lock
ljmp
aad
mov
mov
cmp
sub
jmp
inc
ret
shl
scas
insl
fbstp
push
imul
push
or
cmp
das
pop
mov
xor
call
test
jne
cmp
loop
sub
jno
das
push
loope
call
int3
mov
pop
and
hlt
stc
jne
xor
inc
jp
fs
aam
iret
stos
mov
and
loop
pushf
aam
adc
aad
inc
test
pop
and
jle
fs
ds
mov
lea
push
adc
xchg
xchg
jne
jno
jno
xchg
fld
or
rcrl
std
push
inc
bound
inc
mov
cld
call
jbe
out
hlt
sarb
xor
cmp
jnp
mov
mov
nop
inc
popf
data16
lcall
movl
fidivl
ret
jno
jns
pop
inc
mov
xor
mov
inc
mov
movsl
xlat
push
or
sbb
ss
xor
sbb
repnz
mov
loopne
push
fwait
lret
ret
push
loopne
or
lret
daa
pop
lods
test
mov
lds
sbb
add
addr16
or
push
test
mov
lods
xor
arpl
outsb
pop
daa
xor
pusha
adc
jle
sti
xchg
repnz
psubq
les
daa
mov
std
shll
mov
pop
jne
dec
xchg
popa
lcall
dec
mov
mov
jmp
lods
adc
int
sub
pop
stos
pop
mov
orl
mov
dec
fs
mov
sbb
jg
inc
push
and
loopne
stos
pop
adc
test
inc
and
cld
inc
xchg
fcmove
out
mov
sbb
arpl
jmp
outsl
pop
movsl
ret
mov
add
pop
enter
adc
les
loopne
mov
lahf
xchg
scas
je
cmp
sbb
jns
out
add
rol
push
mov
pop
std
pop
insl
repnz
sub
lcall
syscall
inc
push
mov
xor
pop
stos
sbb
xor
flds
and
add
ret
dec
push
xor
cmp
lret
cmpsb
dec
into
jmp
jnp
mov
cmp
out
test
out
inc
mov
js
and
outsb
je
add
repz
aad
mov
mov
inc
lret
mov
insb
imul
sti
and
dec
push
push
cmp
cltd
cld
sti
push
pusha
fwait
int3
jno
shll
movb
xchg
sub
pop
cmp
xchg
movsl
fnsave
mov
sbb
pop
jmp
aas
push
shll
jg
fldl
hlt
pop
mov
cmpsb
jg
adc
repz
subb
inc
in
fiadds
mov
pop
inc
jns
ljmp
sub
add
inc
cmp
mov
popa
leave
out
dec
stos
xor
xchg
sbb
cmp
push
in
dec
push
enter
enter
aam
int3
es
aad
leave
pop
test
mov
cmp
mov
faddl
jbe
jecxz
push
dec
mov
adc
imul
adc
cld
shlb
lea
clc
movsl
dec
push
je
lahf
daa
fistpll
pop
stc
jae
cli
xchg
mov
fsubl
int
mov
mov
or
stc
cmp
js
cmpb
jp
bound
cmp
shlb
lret
jge
or
jbe
aam
call
adc
jbe
sub
int3
sub
sub
dec
rcrb
sti
fisttps
fcompl
iret
scas
xlat
mov
ja
xchg
popf
dec
std
sar
repz
out
in
movsb
jno
loopne
sub
in
cs
xchg
insb
inc
lcall
pop
or
and
test
mov
push
pop
push
jge
mov
pusha
ffree
fsubr
aam
xchg
pop
fdivs
nop
pop
mov
loop
clc
fistpl
lock
xchg
jb
or
mov
cmpsb
sti
and
out
popf
not
xlat
icebp
xor
les
mov
mov
mov
mov
inc
test
arpl
xor
loope
sub
clc
icebp
xor
rcrb
int3
mov
jl
leave
out
cmp
xchg
adc
lret
cmpsb
inc
mov
pop
insb
mulb
push
fistl
xchg
mov
inc
push
popf
jne
je
mov
adc
pushf
mov
adc
js
dec
sbb
rclb
cmp
lret
xor
je
add
mov
fwait
xor
cmp
js
dec
jp
mov
mov
or
inc
mov
filds
rorb
out
sub
imul
lcall
mov
movsl
push
mov
lahf
mov
inc
fisubrl
es
pop
jl
adc
es
test
mov
mov
insl
je
xor
cmp
dec
enter
mov
imul
pushf
mov
dec
xchg
jecxz
int3
jae
ret
xchg
cmp
aad
sbb
lock
sbb
jb
dec
daa
cs
cmp
stos
cmp
cmp
cmp
pop
fidivs
ret
pop
mov
ljmp
or
and
movsl
jp
subl
mov
xor
or
pusha
push
aad
pop
xor
jle
jp
jg
inc
gs
jmp
inc
adc
add
stc
jnp
test
mulb
inc
jne
push
mov
adc
addr16
sbb
enter
xor
cs
cmpsb
add
mov
cmc
pop
mov
outsl
adc
pop
dec
pop
xchg
rclb
iret
popa
ret
pop
arpl
out
loopne
lret
sti
out
movsb
lock
les
cltd
jno
jmp
jecxz
lock
jns
push
jg
dec
xor
fadds
lret
stos
xor
or
and
fsts
popa
je
mov
lods
mov
adc
push
daa
jnp
inc
sub
repz
mov
inc
adc
ficoms
pop
rcl
dec
push
or
stos
outsb
std
test
ret
dec
xchg
pop
xor
sub
je
adc
call
mov
mov
rolb
mov
mov
cld
lods
sbb
cmp
lds
stc
xor
idivl
in
arpl
cwtl
pop
adc
stos
cltd
push
lret
mov
push
pop
mov
lock
xor
imul
shlb
test
imul
rorl
mov
mov
js
shrl
movswl
push
sbbw
lods
fdivr
mov
mov
cmp
mov
cltd
frstor
insl
sub
cmp
add
xor
push
inc
loopne
dec
push
sub
lea
ljmp
cmpsl
fstps
xor
push
and
inc
sub
lds
test
addb
out
add
jle
lahf
sbb
adc
mov
in
dec
stos
jg
sti
jge
adc
and
nop
aaa
add
shll
clc
jp
pop
jnp
popf
jb
call
fsubrl
ret
cmp
insl
fwait
dec
add
dec
push
mov
mov
int3
insl
aas
xchg
fwait
mov
cmp
aas
pop
repnz
es
pop
test
ffree
lret
int
xlat
cmpsl
lods
sahf
enter
adc
popf
or
gs
mov
inc
fildll
sub
leave
stos
out
adc
leave
fistpl
pop
icebp
sub
xor
sub
inc
pop
dec
xor
movsl
inc
cli
mov
add
lahf
and
cld
xchg
scas
sbb
repnz
dec
out
movsb
test
popf
jo
sub
dec
inc
gs
push
xlat
lods
les
sub
clc
enterw
je
xlat
inc
sbb
sahf
stc
lcall
cmp
jl
sbb
push
jmp
dec
lods
in
cltd
mov
andl
adc
xchg
test
mov
push
ret
inc
xor
pushf
fs
sbb
sub
mov
popa
adc
in
movsl
push
jno
fadd
cmp
mov
imul
ret
stos
sub
adc
pop
jne
mov
lock
out
adc
lods
inc
mov
cwtl
lds
pop
push
push
or
lret
mov
fadds
pusha
cmp
fstl
lods
arpl
pop
mov
adc
jmp
pop
fwait
jmp
ds
lea
sbb
divb
xlat
pop
or
loope
dec
xchg
mov
mov
pop
imul
stos
out
dec
data16
xchg
adc
add
hlt
cmpsl
fsubrl
jle
or
inc
stc
lcall
pushf
in
mov
cltd
mov
imul
push
xchg
stc
mov
call
lea
repnz
mov
push
lods
fimull
lds
shlb
cmp
cld
lods
dec
orb
push
pop
imull
outsb
insl
or
pusha
push
jmp
loop
xlat
stc
push
mov
push
lods
pop
push
hlt
inc
pushf
subl
sti
insl
jnp
cwtl
jns
mov
dec
xor
negb
mov
scas
out
push
add
cmp
sbb
add
pop
sub
out
stos
loop
in
inc
ret
fimull
dec
loopne
or
sti
sbb
pop
lcall
loop
fcmove
push
sbb
inc
stos
and
cmpsl
sub
loop
adc
mov
in
sub
pusha
dec
lret
fmul
shr
push
sub
lock
outsb
xor
xor
insl
aas
fsubrl
rcll
add
out
mov
ss
xchg
or
clc
pop
pop
gs
stos
pop
sbb
cwtl
cmp
or
dec
xchg
mov
jb
fcomip
and
add
popa
sbb
cwtl
cmpb
lds
cmpl
sti
dec
int
imul
jmp
cmp
iret
jg
test
daa
enter
sahf
adc
insb
add
popf
add
cmp
int
xchg
mov
test
xor
mov
cld
out
sti
cmp
lods
popf
ficoms
fmuls
dec
outsb
shlb
push
mov
orl
nop
fstpt
repz
cmc
mov
pop
fwait
or
fcmovne
jmp
mov
adc
aaa
rolb
cmpsb
cmp
ss
sub
inc
jg
int3
rcrl
push
sti
push
pop
mov
das
xor
or
xchg
cmp
stc
in
cmp
iret
fs
test
dec
mov
inc
out
fstps
outsb
lcall
or
cmpb
inc
sub
into
subl
mov
ss
add
or
jb
testl
fadds
mov
mov
adc
inc
or
pop
add
pop
int
and
mov
fstps
xchg
jmp
js
fistpl
bound
iret
aaa
out
pop
movsl
mov
jmp
popl
jne
mov
jb
test
je
sub
fucom
add
sbb
jge
inc
xor
mov
pusha
jge
jb
or
jns
adc
outsl
mov
mov
mov
icebp
jns
add
pushf
sub
sar
sub
inc
loopne
pop
popf
das
dec
add
push
push
mov
arpl
jmp
movsl
push
ret
inc
movsl
fucom
xchg
out
jmp
and
jb
lock
rorb
mov
adc
fsubrs
jg
mov
es
pop
movsl
cmp
xor
jb
sarb
fmull
fwait
in
mov
mov
into
in
lahf
sarl
mov
les
jne
out
sbb
cmp
test
push
jnp
loope
sbbl
hlt
scas
movsl
pop
pop
cmp
and
fisubl
add
aam
jns
push
mov
jbe
dec
outsb
push
andb
nop
adcl
sub
pop
out
sti
cmpsb
mov
subl
into
lea
cmpsb
mov
sub
lahf
xchg
ljmp
sub
test
ss
lcall
dec
push
pusha
mov
hlt
lock
inc
in
mov
scas
nop
mov
xor
adc
jns
cmp
shrl
rolb
scas
loop
sbb
mov
into
lcall
fistl
sahf
std
leave
ss
hlt
pop
pusha
jp
rcrb
mov
hlt
dec
testl
sbb
popa
mov
push
mov
xchg
mov
int
scas
ds
jle
inc
sub
push
mov
mov
adc
jno
dec
jae
xchg
loopne
lret
add
popa
imul
ss
inc
dec
ss
stos
mov
lods
lahf
add
lcall
inc
pop
jo
js
cmc
ret
inc
sub
in
arpl
jl
fistpl
adc
cli
inc
mov
dec
inc
and
popf
outsb
arpl
lahf
in
sbb
cmpsb
add
in
bound
orl
inc
lret
fnstsw
push
outsb
jmp
ljmp
les
nop
aaa
dec
aad
push
add
lcall
jnp
sbb
and
mov
ret
mov
sti
hlt
cmp
mov
mov
xor
pop
popf
sbb
xchg
data16
imul
sarb
int
or
and
rcl
mov
jne
jnp
xchg
sti
xor
push
xchg
out
jno
sbb
sub
xchg
mov
sub
xchg
push
cwtl
mov
add
sbb
sti
push
adc
xchg
in
cld
into
imul
xchg
adc
fwait
fwait
xchg
mov
fdivr
cs
lock
mov
popa
dec
sbb
xor
inc
cmpl
ljmp
nop
or
adc
incl
js
clc
mov
add
ljmp
fwait
xchg
iret
lods
hlt
ficompl
sbb
cmp
sub
dec
fimuls
fstpl
insb
cmc
lcall
dec
pop
xor
out
mov
ficoml
mov
outsb
jb
push
pop
xchg
mov
jge
lds
xchg
out
pop
sub
xchg
adc
push
and
imulb
mov
es
sub
jne
stc
or
or
popf
xor
mov
int
test
and
pushf
imul
pop
jnp
inc
icebp
je
test
xor
lcall
loop
xchg
sti
pop
incl
dec
cmp
cmp
std
mov
push
xchg
stc
sub
mov
push
xor
hlt
daa
cmp
aas
movsl
bound
pop
mov
adc
xor
inc
jg
mov
or
ss
pop
cmp
in
insl
jle
xor
lods
lret
and
dec
add
jns
cltd
scas
xchg
pop
cmpsl
lret
ret
sahf
add
xor
push
jno
and
mov
adc
dec
inc
xor
and
ret
pushf
loopne
movsl
aas
mov
add
dec
lret
or
mov
rorb
push
cs
loopne
jo
into
cmp
shll
sbb
pop
ds
inc
pushf
out
les
jecxz
cli
insb
jle
add
cmpb
adc
jle
fimull
pushf
aaa
inc
cmpsl
mov
adc
push
sub
mov
mov
jp
sahf
and
mov
stos
testb
rorl
pop
adc
enter
xchg
mov
aad
sub
xchg
dec
cltd
aas
cmpsl
xor
idiv
scas
fstpl
js
leave
subb
mov
pop
fstps
test
iret
fs
jg
jb
mov
inc
cmp
mov
mov
xor
mov
sbb
aad
cmpsl
lds
pop
imul
imul
in
es
into
push
test
push
nop
jnp
adc
dec
mov
or
jnp
jle
or
sub
xchg
mov
mov
dec
lahf
repnz
sbb
add
movsb
dec
cmp
movsl
out
out
fsubp
sbb
push
push
les
mov
xchg
mov
push
push
out
push
adc
mov
xor
mov
scas
imul
xor
xor
ja
dec
aad
popa
add
dec
pusha
mov
dec
lock
jno
sbb
lahf
mov
jne
lds
xchg
push
ror
mov
mov
jb
call
push
ss
in
push
and
jmp
inc
fstpt
mov
push
bnd
fidivl
mov
jg
call
dec
stc
cld
inc
sub
insl
or
ja
addr16
jl
push
sub
shlb
mov
cmc
out
dec
sbb
test
add
xor
inc
pusha
add
je
push
imulb
mov
prefetch
or
pop
xchg
xchg
mov
jns
xor
stc
aas
test
aam
loope
push
ds
int
movsb
jl
dec
repnz
sarb
popf
adc
mov
movsb
or
mov
inc
stos
pop
sbb
add
cmp
lcall
jbe
in
mov
das
ror
adc
add
lods
in
insl
mov
dec
jmp
jo
inc
jp
loop
pop
cmp
jmp
mov
or
cmpsb
adc
imul
in
xor
and
mov
mov
test
pop
lods
and
xlat
or
adc
les
loope
jecxz
fwait
jp
jmp
out
fdivrs
scas
rolb
aam
out
push
test
test
jne
aad
js
movsb
jecxz
xor
cwtl
sarb
pop
iret
push
stc
cld
push
mov
pop
mov
and
std
imul
hlt
das
mov
enter
nop
push
pop
enter
js
sub
negl
movsb
push
mov
lea
adc
cmp
filds
mov
cmp
jno
imul
jmp
movsb
lahf
and
add
pop
jmp
mov
jle
fwait
xlat
cmc
nop
inc
sub
js
mov
inc
adc
repz
lret
adc
add
into
push
rcll
jbe
cli
mov
in
sub
and
cmp
and
push
les
sbb
ja
xor
dec
das
gs
test
cmp
add
push
mov
xor
scas
xchg
inc
jecxz
scas
lods
dec
lods
fwait
inc
lret
fdiv
cs
repnz
insb
inc
jne
add
retw
in
push
mov
leave
xor
out
stc
push
mov
test
ficoms
mov
push
lock
sbb
movsb
add
push
mov
mov
pop
sbb
pop
xchg
clts
and
leave
int
arpl
nop
add
lods
add
shrb
jnp
cmp
out
and
sahf
add
aas
fadds
iret
mov
jnp
scas
aas
std
call
imul
int3
xchg
lcall
xor
mov
add
xor
xchg
jno
aas
daa
sbb
sub
xchg
icebp
dec
add
jo
sub
jl
push
add
lret
shrb
mov
das
pop
es
cwtl
xchg
repz
int
cmc
cmp
push
push
scas
mov
pop
fcomps
or
mov
or
push
outsb
lods
leave
add
pop
lea
mov
out
or
or
into
ficoml
call
xchg
test
loope
cmpsb
clc
cltd
pop
pop
int3
or
jns
and
fidivrs
mov
insl
mov
mov
sbb
sub
pop
test
jnp
mov
lret
lahf
fs
mulb
js
repz
call
add
xorl
pop
pop
mov
in
sbb
pop
cmc
adc
cli
sub
xor
jl
shl
pop
sbb
insb
push
inc
aam
ss
movsl
pop
es
push
adc
icebp
fidivrl
adc
sbb
fldcw
cmp
cmp
mov
adc
add
rcrl
jb
fsubl
sbb
out
ljmp
test
add
or
in
mov
lret
cltd
sbb
dec
es
iret
hlt
and
or
dec
jno
dec
stos
xchg
cmpsb
in
cmp
inc
and
sub
lock
movsb
jns
push
mov
push
lods
cmc
sahf
aas
shlb
mov
test
rol
jnp
jno
xchg
fstp
push
mov
ret
nop
fcoms
xor
lret
je
bound
sub
leave
mov
pop
mov
leave
push
sti
or
cwtl
shrl
sbb
mov
les
jmp
popf
mov
iret
push
pop
mov
jg
aaa
mov
movsl
add
rolb
sbb
sti
mov
jg
mov
push
mov
xor
fstpt
or
dec
bound
pop
jae
in
shr
mov
add
scas
xchg
ja
std
or
push
dec
sbb
test
or
inc
xchg
xbegin
push
lahf
push
mov
imul
in
cmp
pop
fisttps
cmp
cmp
jle
mov
insl
gs
jns
sbb
call
test
aam
ds
xor
xor
xchg
movsl
xchg
jmp
sub
mov
and
push
out
test
cmc
mov
pop
je
frstor
pop
cltd
adc
dec
xchg
sub
cwtl
lea
jbe
int
add
jmp
pop
inc
inc
cli
rclb
xchg
in
inc
fucom
add
lret
test
pop
inc
push
test
or
fnstcw
test
mov
es
mov
push
mov
xchg
inc
mov
out
sbb
push
ds
in
xchg
pause
dec
push
cwtl
push
xor
ret
lret
mov
jo
fcomps
pop
decb
xor
jg
int
mov
inc
xor
icebp
addr16
push
mov
notl
faddl
mov
inc
sbbl
adc
dec
jle
xchg
xchg
cs
ja
xchg
xchg
shrb
insl
neg
inc
cmpsl
xor
push
push
push
jae
mov
pop
imul
lcall
pusha
sub
jbe
mov
dec
in
mov
jg
divb
xchg
cmp
lds
arpl
js
xor
into
pop
lcall
dec
es
scas
jno
in
cmpsl
outsb
pop
imull
out
ds
cmpsl
shlb
scas
arpl
push
testb
sti
sub
sarb
ds
adc
mov
inc
dec
inc
pop
push
arpl
cmpl
in
out
test
sub
mov
popl
jmp
or
pop
push
jmp
test
sbbl
inc
incb
orl
ss
leave
add
adc
clc
add
subb
movsl
ljmp
pop
aaa
pop
in
mov
repz
lret
add
iret
lods
clc
jns
push
lds
bound
enter
inc
mov
mov
cli
mov
in
stc
sbb
mov
xchg
inc
gs
xchg
loope
adc
jmp
das
int3
hlt
mov
jne
in
js
aad
jmp
mov
pop
or
stc
lret
aad
cmp
mov
imul
jp
sub
sub
jnp
je
xchg
mov
out
loopne
loopne
add
daa
pushf
or
jo
add
adc
dec
lcall
mov
cmp
xchg
scas
shr
push
pop
dec
js
outsl
lret
icebp
rcrl
or
mov
sub
ljmp
cltd
les
cmp
jge
xchg
out
out
popf
mov
mov
mov
xchg
pop
inc
iret
jmp
imul
aaa
repz
mov
pop
push
sti
imul
lds
xor
lea
jecxz
jnp
pop
sbb
leave
aas
std
hlt
stc
data16
pop
mov
sbb
mov
dec
mov
out
cmp
les
ss
jle
out
sbb
imul
xchg
mov
mov
rclb
nop
fisttpll
jbe
sti
mov
movsb
push
or
insb
rclb
adc
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
.byte
.byte
.byte
