jbe
mov
jo
xor
xchg
mov
idivl
and
pop
mov
dec
or
push
dec
cmpb
push
xor
mov
mov
or
sub
mov
jmp
call
or
sub
pop
pushf
cmp
xor
loope
cmp
lret
repnz
mov
leave
pop
mov
mov
and
rclb
pop
dec
cmp
sbb
push
outsb
in
add
ror
scas
and
adc
icebp
out
hlt
push
mov
sar
or
pop
cmc
ret
notb
mov
jns
cmp
pop
add
and
cmp
pop
pop
js
push
in
ret
insl
lahf
test
repnz
mov
mov
fisubrl
mov
stos
jne
add
adc
test
xor
fsub
pop
mov
cltd
fldenv
mov
lock
sar
imul
shl
push
shr
rcl
mov
shr
shl
shrd
btr
sub
cmc
shl
rcl
and
push
inc
and
bts
xor
push
stc
bsf
push
aad
add
push
shl
lahf
mov
cmc
pusha
bt
bt
test
pusha
pushf
jmp
jmp
sub
lea
jb
cmp
call
xchg
pop
mov
and
or
js
xchg
xor
xor
xchg
outsl
inc
stos
movsl
jmp
jmp
mov
xchg
mov
and
mov
dec
es
xchg
mov
shr
add
add
sbbl
cmpsl
mov
jnp
cmp
xchg
ja
push
xchg
push
sahf
inc
and
jle
bnd
dec
dec
xchg
inc
jle
push
test
lods
push
inc
rcrl
xor
daa
dec
ret
push
hlt
mov
add
push
push
sti
cld
rep
jns
cmc
xor
push
xchg
push
xchg
mov
fcoml
and
sbb
add
nop
adcl
rep
xorl
aas
jmp
and
scas
mov
or
scas
mov
push
in
test
stos
mov
lods
xlat
fsubs
inc
sbb
jmp
xor
cmp
mov
cmp
out
xor
adc
leave
sbb
mov
les
pusha
movb
lea
je
stc
bt
stc
cmc
cmp
jmp
sub
sbb
je
xchg
push
mov
sbb
test
dec
imul
jne
out
xor
cs
cmpsb
je
push
pusha
or
in
das
cmp
ret
in
mov
in
cmp
push
and
int
xor
in
adc
neg
pushf
cmc
bt
ror
bt
bt
push
sub
clc
neg
pushl
call
out
xchg
sub
cmp
ljmp
aam
ja
fstps
add
inc
ffreep
out
or
in
aad
movsl
rol
push
dec
ficompl
fnstsw
fwait
jecxz
xchg
cs
scas
movsb
mov
sbb
jge
jg
sti
jo
not
out
pop
push
sar
dec
mov
jbe
xchg
int
xchg
sbbb
push
popf
ret
popf
adc
lea
je
pusha
lea
jmp
data16
push
pop
cmp
and
pusha
pop
in
test
es
movsl
sub
fistpl
dec
shrb
sub
popf
sbb
mov
cmp
cmp
sub
push
ds
adc
lcall
call
adc
jbe
pop
dec
roll
jg
rclb
inc
jb
scas
in
into
adc
mov
mov
lock
xchg
ja
cs
sarb
mul
shlb
add
lods
jl
lods
sub
scas
daa
pusha
sub
and
xchg
iret
cld
movhps
cs
pop
das
lock
lahf
lahf
cli
std
bound
rcr
xor
push
pop
mov
loopne
int3
aam
cmc
mov
lods
je
aam
movsb
push
mov
xor
add
or
jmp
sbb
mov
cmpsb
loope
push
add
bt
movzwl
sub
pusha
clc
movzbw
mov
cmp
test
stc
stc
add
pusha
mov
push
test
clc
test
movb
call
add
mov
clc
mov
mov
sbb
xor
pusha
pushf
lea
pushf
call
je
test
bt
cmc
add
push
pushf
lea
jmp
pushf
pushf
rep
jmp
lea
push
pop
lea
push
jmp
mov
pushf
mov
mov
pushl
ret
movl
push
pusha
pushf
lea
jmp
call
push
pushf
push
and
bt
pusha
call
movb
movb
lea
call
cmp
cmc
bt
clc
cmp
jmp
push
jl
xor
repnz
dec
mov
cmp
bound
pop
cmp
push
mov
out
add
mov
inc
flds
xor
fsubrs
shrb
push
das
vmovlps
ret
mov
dec
das
add
mov
jno
jbe
loopne
icebp
repz
std
sbb
fcmovu
sub
fisubrl
nop
push
push
and
mov
mov
push
lods
outsb
mov
iret
push
mov
inc
adc
lods
test
sbb
inc
fcmovu
ficomps
ds
jge
repz
add
stos
pusha
lds
jo
xchg
xchg
in
mov
lret
add
or
and
aaa
addr16
pop
lahf
stos
loop
mov
mov
sahf
lahf
les
sbbb
xor
fwait
rcr
jge
loop
sbb
es
scas
iret
outsb
xor
std
lods
pop
or
add
inc
push
stc
leave
std
sub
fdivr
xchg
insl
jl
sbb
mov
aam
mov
dec
prefetchnta
icebp
xor
dec
mov
and
push
sub
aam
into
xor
add
sub
adc
pop
fwait
sbbb
dec
aad
addr16
cmpsb
xchg
xlat
test
leave
fildl
ss
mov
xor
mov
sbb
movd
lods
mov
adc
gs
and
push
sarl
sbb
adc
dec
mov
inc
lret
shlb
idivb
cmp
cmc
xchg
rol
test
pusha
fadd
xor
fnsave
adc
jne
push
sbb
inc
push
cwtl
movsb
add
xlat
push
iret
jmp
sbbb
and
daa
addr16
dec
xor
and
sahf
mov
sbb
fidivs
xchg
xor
adcl
movl
fcmove
dec
sarl
mov
int3
sub
adc
popf
add
or
mov
sub
xchg
adc
outsb
xor
add
or
cmp
fldl
sbb
int3
popf
pop
je
in
push
push
mov
xor
adc
jmp
jmp
movb
call
movb
pusha
pusha
lea
call
jmp
mov
jmp
movw
not
mov
movb
pushl
pushl
lea
call
pushf
pusha
lea
jne
push
call
mov
or
mov
inc
lret
fs
shrb
lods
adc
int3
mov
addr16
jge
dec
jmp
sub
in
xchg
push
arpl
push
cmc
decb
les
aas
lods
repz
sub
std
sub
adc
mov
ljmp
out
je
jbe
test
pop
sub
popa
idivb
mov
xchg
sub
push
jno,pt
mov
icebp
cmp
fists
pop
iret
popf
jmp
jl
je
out
andl
jge
scas
mov
rcpps
xchg
adc
rep
movzbw
push
mov
movw
lea
jmp
jmp
hlt
mov
test
daa
cmpsb
cmp
hlt
mov
or
lret
cs
mov
mov
div
mov
test
jmp
cmp
adc
jmp
jnp
lahf
ss
push
jnp
cmpsb
mov
or
daa
add
inc
call
sti
dec
pop
push
fldenv
mov
into
adc
adc
and
and
hlt
mov
add
push
insl
cmp
imul
dec
movsb
mov
sub
cli
xchg
jns
push
xchg
insl
jo
ret
shlb
int3
stc
and
rcrl
lret
dec
and
enter
stos
push
daa
outsl
pmulhuw
fmuls
loop
sbb
cwtl
leave
sub
mov
jle
xor
mov
or
test
movsl
aad
pusha
mov
cmpsb
fwait
pop
pop
jno
and
push
inc
push
inc
xchg
mov
jge
add
ret
out
push
jno
les
ds
sahf
sarb
or
fisubs
add
cld
in
push
cmp
pushf
test
lods
mov
mov
out
movsb
mov
lahf
dec
sbb
shlb
jmp
xchg
jg
in
bound
mov
xchg
add
mov
nop
aam
fbstp
clc
out
mov
movsb
rclb
ficompl
mov
std
repz
scas
ret
inc
push
aaa
or
fiadds
dec
mov
pop
call
add
cmp
ljmp
mov
addr16
add
fs
adc
sbbl
adc
es
shlb
dec
add
add
sub
push
repz
cmp
clc
sub
xor
inc
imul
jno
mov
jbe
mov
pop
sbb
arpl
mov
mov
das
sahf
jae
mov
js
out
scas
pop
mov
adcl
nop
push
pushf
les
lock
je
or
aam
cmp
fildl
jno
push
nop
sub
adc
xchg
push
inc
mov
jl
mov
dec
sbb
jb
mov
push
in
subb
mov
and
push
adc
add
pushl
pushf
lea
jmp
aad
add
mov
or
sti
pop
xor
pop
dec
lret
lret
addr16
xchg
imul
in
jmp
pop
xor
fldl
fisttpl
pop
je
xor
int
pop
pop
pop
test
mov
inc
add
inc
or
test
pop
inc
ljmp
or
push
jo
add
push
test
pop
cmpsb
stos
fisubrl
cmp
out
imul
fimull
mov
pop
je
sti
mov
rcrl
leave
fwait
inc
test
rcll
adc
roll
or
dec
les
and
popf
mov
and
bound
aas
mov
jo
fistps
popa
adc
xor
adc
inc
rcrl
je
mov
adc
sbb
cli
out
mov
and
outsl
pushl
pusha
lea
call
cmc
cmp
jmp
add
bsf
mov
jmp
jae
stc
push
jmp
add
add
and
fisttps
mov
push
xchg
cmp
iret
and
adc
xchg
push
sbb
icebp
negb
fidivl
scas
cmp
test
mov
mov
sbb
mov
test
cmc
mov
jl
push
xchg
fmull
mov
mov
leave
add
or
cwtl
adc
add
cwtl
imul
out
ret
insb
sar
add
inc
fwait
pop
push
pop
sub
adc
sub
sbb
mov
cmp
jge
lret
sub
inc
frstor
aas
aad
gs
adcb
pop
xchg
fs
fisubrl
call
xor
call
int3
add
add
and
les
cmp
stos
jb
mov
ret
adcb
add
add
jmp
mov
dec
dec
sarl
push
outsb
sub
dec
icebp
and
xor
call
jl
mov
dec
push
xchg
cmp
jnp
mov
add
cwtl
pop
sub
aam
in
push
mov
test
aam
add
rolb
adc
inc
add
rolb
cmp
inc
add
js
add
add
add
icebp
hlt
jbe
push
inc
xor
jle
xchg
mov
ss
imul
fimull
addl
pusha
xor
xor
xchg
dec
xchg
or
mov
addr16
ret
jae
xchg
aaa
inc
call
fsubs
mov
scas
in
inc
mov
xor
lods
enter
lcall
push
fisttps
adc
lock
fistps
negb
jge
scas
lock
adc
jmp
jne
aam
or
ja
imul
jno
pop
mov
cmp
xchg
cmp
lret
or
movsb
testb
stc
lods
das
push
mov
adc
dec
loop
and
rcrb
nop
sar
xchg
pop
cmp
cmpsb
xor
arpl
sub
xchg
adc
ja
xor
xor
lret
mov
rcr
pop
test
int3
je
push
xchg
scas
fisubrl
dec
mov
sahf
ficomps
xchg
xchg
cmp
dec
loop
outsb
aas
mov
add
mov
or
mov
movsb
jecxz
lahf
push
movl
bswap
bswap
movsbw
jmp
movb
lea
ja
call
hlt
icebp
repnz
xor
aam
or
sbb
inc
test
or
into
xchg
pop
pop
std
out
insb
jae
leave
ror
or
ret
pop
push
int
jae
mov
repnz
shll
adc
mov
pop
mov
pusha
loope
push
mov
hlt
mov
es
aaa
pop
mov
stos
jp
push
pop
in
scas
fs
push
outsl
push
add
mov
fxch
pop
mov
add
adc
mov
mov
push
inc
lahf
sbb
call
adc
push
out
pop
repz
mov
popa
pop
mov
and
jo
adc
scas
push
dec
les
movsl
movsl
jp
push
or
repz
mov
inc
scas
js
jp
xchg
imul
xor
dec
xor
xor
cmp
push
sbb
mov
mov
movsb
mov
pop
mov
or
fisubrl
pushf
imul
and
mov
fs
inc
outsb
lock
xchg
sbb
repz
bound
mov
mov
into
repnz
inc
push
sbb
or
adc
das
add
sub
dec
and
pop
jle
mov
mov
sbb
dec
bound
inc
jbe
cwtl
xchg
leave
into
je
pop
jno
js,pt
movsb
or
sub
stc
mov
push
or
pop
lret
sbb
dec
adc
adc
lret
jl
mov
pop
jle
mov
lahf
inc
add
sbb
and
adc
adc
dec
fsubp
or
xor
dec
mov
inc
add
test
pop
in
inc
out
and
cmp
jns,pt
xlat
rcrb
lods
out
pop
loop
pop
rcrl
fmul
mov
mov
sub
das
and
sub
mov
pop
insb
mov
imul
sub
adc
inc
mov
sbb
and
fmuls
les
fcoms
sub
aaa
mov
ljmp
outsl
push
enter
xor
movsb
mov
or
into
mov
hlt
sbb
cli
in
mov
fneni(8087
dec
inc
je
dec
sbb
add
mov
push
inc
mov
lods
outsb
jecxz
jb
lods
mov
je
add
push
in
lods
xchg
in
addb
lods
xor
adc
cmp
pushf
call
call
movw
mov
lea
jne
shl
push
rcr
mov
stc
sub
bsr
rcr
sar
lea
add
stc
test
call
pop
lahf
pushl
popl
movb
lea
mov
pop
cwtl
movzbw
lea
jo
push
pusha
lea
call
popf
cpuid
nop
push
movl
jmp
mov
inc
popf
inc
push
adc
jmp
repnz
mov
addb
xchg
pushf
inc
and
push
scas
bound
call
jmp
leave
into
insl
dec
icebp
pushf
xchg
ds
xlat
shrb
push
push
inc
imul
mov
data16
or
mov
add
jnp
ljmp
adcl
out
adc
andb
xchg
pushf
outsb
xchg
lcall
incb
mov
nopl
adc
ret
shlb
xor
in
mov
in
arpl
loope
sub
lret
dec
push
pop
lcall
leave
and
mov
pop
in
stc
mov
pop
stos
xchg
shlb
aad
jl
push
pusha
add
jg
pop
push
bndldx
jnp
xor
pop
pop
and
xor
imulw
push
sbb
xchg
fcompl
lcall
sbbb
movsl
mov
dec
jg
sub
adc
in
lea
pop
push
push
pushf
pushl
ret
loop
leave
sbb
cmp
or
dec
dec
arpl
jecxz
and
insl
lods
jns
je
cmpsl
inc
adc
sbb
test
mov
mov
lock
cmc
mov
aas
xor
jmp
push
aas
or
mov
test
loope
adc
xor
and
lds
push
mov
movsb
jg
shrl
and
cmp
je
xor
fbstp
lahf
movsl
adc
out
pop
idiv
js
jbe
mov
notb
mov
adc
imul
pop
bswap
pop
push
mov
jmp
loopne
sub
repnz
outsb
mov
mov
shrl
adc
pop
jbe
cwtl
mov
fldt
test
or
in
test
or
jecxz
jno
xor
sub
xchg
loop
insb
or
xor
loope
push
xor
insl
mov
mov
leave
push
pop
mov
lahf
push
sti
enter
lret
js
or
and
jmp
and
xchg
aad
adc
fs
je
pusha
lea
jo
push
bswap
lea
lea
xchg
pushf
bswap
pop
movzwl
bswap
pushf
mov
lea
push
not
pop
mov
call
stc
clc
pushf
or
pusha
pushl
jmp
lea
je
stc
push
cmc
cmp
jmp
push
mov
pushl
movb
pushl
ret
imul
mov
lods
adc
lea
sti
adc
aaa
out
rclb
fsincos
pop
sub
sub
sub
fidivrs
mov
stos
test
js
mov
cld
int
fcmovu
sbb
adc
sbb
and
fisubrl
mov
test
mov
pushl
ret
xchg
or
push
fcmovb
leave
xchg
movsb
xchg
inc
adc
jno
add
movl
jmp
dec
push
int3
inc
cmp
xchg
notb
dec
test
enter
jmp
xchg
rcll
aas
dec
inc
scas
push
sahf
dec
je
test
sub
clc
push
inc
inc
rorl
lcall
lea
pop
xchg
pop
addr16
subb
lret
out
push
inc
pop
jmp
and
xorl
push
lds
dec
ja
adc
fisubrl
xchg
push
dec
add
int3
xchg
sub
cmpsb
clc
cmp
fadds
lret
sbb
ret
add
add
cmc
lock
or
rcll
jmp
addr16
cli
dec
pop
lcall
outsl
test
pop
das
rcll
xchg
mov
xchg
into
test
push
push
push
loop
and
pusha
or
rcr
pop
push
mov
sub
outsb
adc
rcrb
mov
sbb
stos
inc
sbb
fisubrl
mov
imull
xor
mov
mov
jmp
lea
jne
call
imul
gs
xor
cs
insb
add
loopne
jno
pushf
in
mov
jmp
lds
in
mov
ja
or
in
mov
push
popa
and
push
fcmove
and
pushf
mov
aam
xchg
scas
push
and
sti
push
inc
xor
mov
xchg
fsubrl
pop
mov
jne
es
lahf
stos
bound
add
push
xlat
jecxz
dec
mov
stos
std
sti
out
xchg
xchg
rclb
or
mov
adc
sar
pusha
shrd
dec
mov
cmc
bt
push
and
cmc
jmp
mov
pusha
pushl
pushf
mov
lea
jmp
or
addr16
mov
out
pop
jbe
mull
sub
push
mov
xor
sbb
rol
ret
neg
xchg
lret
lret
lock
mov
cli
inc
stos
loopne
insb
fwait
push
cltd
stc
fmuls
mov
mov
fdivs
mov
sti
jo
xchg
rcl
int3
pop
push
rorb
adc
out
leave
push
adc
pop
popf
push
out
scas
and
add
push
into
test
fstpt
xorl
xchg
xor
jno
popa
sub
movsb
js
adc
cmp
in
xchg
push
lea
scas
jp
fldenv
lock
out
arpl
push
xchg
cmp
mov
sti
jno
mov
adc
pop
push
iret
nop
loop
xor
and
cmpb
loop
shll
and
call
push
add
lea
jno
push
pushf
call
clc
loope
mov
aaa
jge
ss
sarb
outsl
icebp
into
push
mov
add
roll
lret
in
sub
mov
data16
lds
sub
pop
dec
jp
mov
inc
mov
and
std
outsl
mov
imul
inc
es
push
mov
in
jmp
ret
outsb
xchg
sbb
into
jnp
mov
sbb
sbb
test
and
and
dec
pop
or
push
dec
andb
aad
enter
sub
push
jge
jns
cmp
pop
in
out
out
es
shrl
pop
xchg
cld
or
sbb
aas
sub
les
outsb
xchg
popf
iret
cmp
ljmp
insb
or
aaa
sub
or
jp
fistpl
sarl
repz
inc
pusha
addr16
pop
or
xchg
dec
push
lock
lock
push
lds
mov
cmc
insb
bnd
adc
negb
fidivrl
sub
sub
gs
mov
das
test
mov
sub
iret
leave
add
loop
xchg
mov
or
pop
rcrb
jno
sub
outsl
cmc
addr16
loopne
dec
aad
fisubrs
jne
adc
pop
repnz
inc
dec
enter
test
ret
xor
bound
iret
adc
out
cmc
les
sbb
cli
je
rcll
add
add
xor
lods
mov
push
int3
push
adc
lods
outsl
push
or
in
add
inc
mov
pusha
cmpxchg
mov
mov
loopne
lahf
jl
xchg
push
add
imul
sub
or
push
xchg
rcr
fwait
outsl
test
test
movsb
les
imul
enter
roll
or
push
dec
xchg
lods
jno
jnp
cld
pop
mov
push
jbe
xlat
push
dec
cwtl
push
xlat
pop
inc
lret
mov
mov
ss
pushf
call
add
sub
jecxz
bound
sub
xor
or
jmp
fsub
daa
and
xchg
dec
mov
into
aad
push
fmull
push
xlat
dec
xchg
flds
mov
xor
std
inc
ret
sbb
std
ds
aaa
adc
sub
mov
push
xchg
adc
mov
shr
or
jno
add
aaa
sahf
and
imul
sub
lock
dec
pop
daa
xchg
push
mov
in
sub
sarl
jb
xchg
and
xchg
icebp
out
add
pop
pushw
sbb
data16
dec
jmp
insb
loopne
arpl
jnp
xchg
cmc
push
arpl
movsb
push
mov
out
int
or
and
sbb
add
flds
stos
sbb
repnz
arpl
lock
mov
and
dec
ret
rolb
jge
or
or
jno
cmc
mov
out
mov
inc
lea
pop
or
in
mov
or
mov
xor
cli
xor
mov
adc
xor
inc
add
adc
pop
filds
add
cld
popl
sete
push
jmp
push
lea
je
pushf
mov
jmp
mov
jle
push
lods
adcl
test
lcall
push
out
inc
jge
outsb
imul
jnp
jp
xchg
cmp
int3
add
pop
mov
mov
int3
jbe
pushf
ljmp
icebp
hlt
lcall
dec
push
das
push
clc
ja
xor
and
adc
je
fcmovbe
adc
jecxz
dec
mov
push
sahf
cmc
mov
sub
push
jp
dec
pushf
stos
mov
xlat
mov
repz
add
repz
sub
je
call
inc
pop
add
lods
mov
dec
stos
sub
xchg
in
mov
sahf
pop
inc
add
mov
scas
add
sub
lods
push
add
ljmp
data16
push
adc
add
sbb
cmpsl
aam
std
inc
sahf
loop
lods
das
adc
and
xchg
ror
sbb
stc
or
imul
and
jecxz
push
ljmp
cmc
out
shll
cmpsl
xchg
mov
iret
mov
sbb
inc
pop
inc
push
xchg
stc
adcb
pop
push
push
in
push
jecxz
sbb
add
mov
pop
lock
mov
mov
mov
or
inc
pop
mov
mov
lea
call
pushf
pushf
mov
push
pushf
pusha
push
lea
jmp
cs
cmp
mov
push
cs
push
cs
inc
cld
add
jno
mov
mov
or
dec
fld
cmp
or
cmc
lret
test
mov
mov
xor
cmp
jno
push
dec
sbb
sub
fs
adc
mov
fisubrl
sbb
fnstsw
mov
cltd
xchg
inc
xchg
cmp
push
shll
add
mov
or
stos
sub
jmp
xor
stos
xchg
call
xor
cmp
mov
mov
jl
mov
jns
aam
das
notb
pop
push
fstpl
sub
adc
add
push
xchg
popa
rcll
jl
in
or
aam
setae
push
mov
mov
sub
sub
xchg
in
mov
inc
or
pushl
pop
mov
imulb
cmc
loope
add
adc
push
xor
dec
sbb
aad
scas
jecxz
sbbb
adc
pop
push
and
xchg
push
pop
movl
movsbl
push
lea
pusha
movl
pushf
pushl
popl
push
pusha
movb
pushl
ret
stc
or
push
push
call
jmp
call
pushf
movl
call
lea
jne
xor
sar
mov
jmp
bound
std
jecxz
mul
fnstenv
fisttps
add
cld
add
sbb
pop
pop
daa
xchg
incb
add
sahf
mov
cmp
sahf
jbe
jno
jle
xlat
mov
xor
jo
lret
ja
mov
shll
dec
pop
dec
bound
cld
stc
imul
jg
mov
rcrb
mov
push
push
dec
je
leave
hlt
divb
sbb
lock
bsr
add
jecxz
fcmovnb
add
mov
sbb
cmp
sar
dec
inc
prefetch
aam
push
cmp
aam
push
ficomps
in
inc
push
cmp
cmp
xchg
aas
mov
fwait
and
adc
jno
sub
adc
fsubrp
rol
mov
adc
loopne
jecxz
ds
outsb
adc
cmp
xchg
push
xlat
jno
rolb
subb
sbb
pushf
and
cwtl
dec
xchg
push
stos
add
dec
movl
sub
cmp
or
std
mov
stos
mov
pop
xchg
scas
test
loop
pushf
cli
xchg
nop
cmp
xor
orl
xchg
and
sti
test
pop
arpl
stc
cmpsl
push
sbb
sbb
adc
push
sahf
xchg
mov
pusha
lea
jmp
add
add
jae
aad
push
and
mov
pushf
pusha
sub
pusha
mov
aam
sar
call
pushf
lea
jae
stc
pushf
cmp
push
call
lea
ret
lea
je
not
pushf
movsbw
pushf
mov
bswap
pusha
mov
lea
lea
call
cmc
cmp
movb
lea
jb
cmp
cmp
call
fnstsw
inc
dec
jg,pt
stos
or
ds
cld
inc
shrl
rcrb
testb
in
hlt
cmpl
add
cmp
push
xchg
mov
push
pop
cltd
cmp
out
pop
icebp
jp
arpl
jne
shl
insl
repz
pusha
pop
push
iret
xchg
rcrb
int3
adc
mov
sbb
lahf
mov
sbb
notl
jmp
and
add
out
xchg
xchg
nop
mov
pop
jb
sbb
add
insl
outsb
addr16
dec
pop
inc
mov
fstps
dec
pop
sbb
push
jo
adc
lahf
push
jbe
js
shll
subb
and
xchg
ret
add
js
sbbb
cmc
cltd
mov
push
imul
jge
mov
or
enter
jl
dec
mov
aaa
out
leave
popf
in
imulb
shrb
sahf
shll
mov
pop
jb
push
push
aam
stc
lods
cwtl
in
jecxz
insb
subl
and
bound
jb
es
loope
lods
test
mov
rorl
sti
scas
nop
fistpll
sub
xchg
or
mov
aam
fmul
cltd
imul
mov
adc
adc
test
imul
cmp
fidivrs
sbb
xorl
je
inc
add
inc
jbe
fcmovnb
dec
jnp
xorl
mov
mov
jmp
sub
cmp
dec
xor
dec
les
sbb
jno
sub
loope
jbe
fwait
idivl
xchg
and
mov
push
inc
sbb
sbbl
adc
inc
and
call
xor
test
adc
add
fwait
sub
jne
sti
jns
stos
mov
out
dec
pop
mov
lds
sbb
mov
test
xchg
mov
inc
sbb
clc
jne
movsb
jge
mov
mov
repz
mov
pushl
movb
xchg
pop
pop
cwtl
pusha
mov
cwtl
jmp
out
xor
lods
jno
xchg
aaa
jne
daa
lret
pop
jne
hlt
mov
leave
lahf
arpl
mov
fcomi
loop
loop
jo
push
sbb
fwait
movl
sti
add
hlt
push
addl
xor
icebp
add
into
sub
lahf
mov
dec
sbb
add
aas
movl
leave
test
and
insl
mov
dec
out
sarb
adc
push
mov
pop
add
popa
movsl
outsb
scas
fcoms
mov
insb
sbb
pop
pop
cmp
sub
scas
cmpsb
pop
rolb
cli
xor
idiv
fstpl
outsb
ss
push
test
adc
dec
loop
xor
sub
lret
push
imul
and
enter
ficomps
loop
mov
jo
outsl
int3
popf
frstor
mov
pop
invd
daa
or
sub
cmp
inc
fwait
sbb
popf
in
imul
push
inc
lock
xchg
iret
popl
adc
dec
jno
adc
push
or
mov
xchg
popf
in
imul
jl
outsl
fwait
orl
addr16
in
push
push
cmpsl
push
push
adc
and
outsl
mov
and
push
jnp
cli
cmp
cmpsb
push
sahf
inc
jae
clc
jnp
cltd
adc
jno
shlb
sbb
lret
sbb
stc
pop
daa
mov
mov
int
xlat
add
clc
or
xchg
sbbb
out
mov
add
inc
or
daa
pop
adc
std
mov
shll
xor
cld
sbb
in
sbb
aas
pop
push
jo
push
cmp
cmp
fcmovnbe
mov
inc
std
adc
in
mov
data16
cmp
push
stos
dec
pop
pop
test
pop
inc
pusha
jmp
leave
int3
sbbl
jmp
lock
adc
daa
or
es
bound
push
inc
pop
jnp
lahf
push
mov
xchg
fcmovnu
fs
dec
cmp
mov
inc
inc
or
sbb
cmp
mov
sti
enter
add
mov
test
subl
std
push
push
nop
fildll
push
add
lods
sub
loopne
fsubl
xor
daa
push
jnp
inc
fistpll
xor
jnp
rcrb
imul
mov
lret
dec
push
into
add
dec
mov
adc
mov
popf
out
cmp
pop
sbb
ja
subl
and
mov
cmpsl
outsl
or
mov
fistpl
xlat
test
cli
adc
clc
cmp
call
repz
jmp
inc
cmpb
add
and
xor
cmpsl
inc
jns
cmc
mov
clc
sti
stc
sbb
sub
inc
xlat
test
rol
sarl
iret
or
sbb
loope
in
insl
jbe,pn
xchg
shrl
pop
xchg
pop
xchg
pop
movsl
inc
cltd
mov
xchg
test
lods
aam
push
ljmp
rolb
test
sub
stc
sbb
stc
sbb
filds
ret
out
add
adc
adc
mov
int3
lahf
or
ret
roll
fs
mov
in
mov
repz
lahf
pushf
mov
mov
outsb
test
jne
sbb
sub
insb
les
lea
sub
pop
scas
test
mov
push
es
cmp
sub
lods
xor
imul
fsubs
rcr
test
testb
fisubrl
in
sbb
jbe
or
xor
sbb
aam
movsl
test
add
pop
lods
lock
push
mov
jbe
vandps
add
xchg
push
leave
aam
gs
inc
mov
rcrb
or
stos
sbb
lods
imul
push
xchg
int3
jge
insb
or
xchg
mov
jecxz
add
je
and
sbb
inc
pushf
out
and
ret
sub
mov
shr
inc
mov
les
adc
incb
rcrb
in
or
gs
rolb
push
pop
movsl
imul
xchg
adc
mov
in
inc
clc
xchg
xchg
in
test
xor
xor
jo
cmp
out
bound
nop
int
inc
in
dec
pop
cmp
sarb
jnp
dec
adc
repz
nop
xchg
xchg
sub
mov
ss
out
daa
add
cwtl
adc
push
test
mov
xchg
inc
jnp
xlat
adc
in
and
das
das
jmp
ficoms
fsub
jl
push
lea
call
jmp
lret
fiadds
loope
cmp
sbb
jb
adc
in
add
sbb
out
xlat
mov
scas
jmp
fwait
in
andb
push
add
sti
es
shll
add
lea
mov
mov
mov
add
movl
pusha
pushl
pushl
popl
pusha
pushl
ret
pushl
jmp
seto
lods
movw
inc
mov
push
pushf
bt
ror
test
push
stc
add
push
neg
mov
call
outsb
mov
or
fcos
in
sbb
pop
mov
shll
adc
lahf
cmpsb
pop
xchg
bound
sti
jmp
clc
adc
push
xchg
cmp
dec
add
sarb
loope
mov
cli
push
lcall
mov
lret
xor
push
bound
js
cmc
rcr
iret
cli
adc
mov
into
push
dec
add
adc
xor
int3
rclb
sarb
dec
cmc
in
pop
cmp
cmp
or
data16
lods
int3
pushf
test
fneni(8087
loopne
mov
mov
fisubrl
xor
cmc
cmp
mov
jecxz
bnd
fidivs
push
outsl
icebp
pop
iret
es
imul
xor
clc
inc
psubb
fisubrl
jmp
xor
aas
loopne
cltd
cmp
aaa
movsl
daa
js
out
mov
gs
jmp
sbb
xchg
test
es
adc
pop
sub
add
push
imul
mov
dec
ja
xchg
and
pop
mov
cld
sti
xchg
mov
jno
in
mov
push
dec
es
stos
in
jmp
shrb
icebp
inc
cmp
popf
ja
mov
jne
mov
mov
cmp
sbb
jns
addr16
insl
jge
clc
stos
cltd
addl
jecxz
jecxz
fst
jg
jns
aam
xchg
nop
mov
push
cmp
push
jge
jg
dec
and
pop
xor
in
jmp
push
dec
mov
lds
and
das
dec
pushl
dec
push
cltd
movsb
push
aas
add
push
jnp
lahf
adc
repz
add
and
lret
scas
jns
pop
mov
pop
inc
ds
xchg
iret
cmc
sbb
adc
call
jmp
stos
mov
mov
push
push
sbb
rep
cmp
cmp
jp
cltd
daa
and
imul
sbb
fiadds
aam
ret
mov
inc
icebp
shlb
adc
mov
xchg
add
push
inc
sbb
fcmovne
stc
dec
aaa
je
push
sub
and
mov
and
sbb
push
out
xchg
sub
sub
int
mov
push
hlt
jmp
adc
jns
sbb
xor
in
push
cmpsl
sbb
dec
mov
in
or
dec
sub
push
xchg
mov
bnd
fldl
and
je
out
inc
mov
pop
adc
mov
sbb
str
pushf
movl
call
iret
fiaddl
pop
add
xchg
test
cltd
fisubl
je
in
shrb
jbe
dec
dec
pop
xlat
call
sub
adc
sbb
into
ljmp
cmc
push
mov
xchg
jbe
cmp
test
xlat
push
xlat
sbb
cmpsl
cltd
aad
or
jmp
dec
adc
and
cltd
sti
dec
cmpsl
jl
inc
push
xchg
adc
sbb
es
or
int
push
and
aam
adc
sbb
sbb
pop
dec
aas
push
leave
into
jmp
dec
pop
add
add
call
ljmp
movsb
xchg
sub
cwtl
sbb
adc
pop
pop
xchg
add
fistpl
fcomps
mov
inc
adc
arpl
mov
mov
xlat
xchg
cmp
jnp
ret
loope
mov
xor
mov
in
lock
scas
mov
es
pop
xor
mov
push
daa
call
sbb
sarl
mov
mov
shl
out
push
sbb
mov
test
mov
in
test
mov
mov
add
sub
rcl
xchg
rolb
push
adc
cmpsl
mov
jmp
iret
cmpsl
mov
mov
push
add
aad
inc
cs
jbe
pusha
or
lock
push
inc
xor
sti
sbb
xor
scas
out
sub
inc
in
rcll
mov
cmp
adc
mov
in
fnstenv
mov
push
clc
lcall
add
popf
push
mov
mov
popa
icebp
lret
ds
insl
ja
stos
fildl
out
not
mov
push
or
cli
std
cli
jecxz
or
adc
cmpsb
leave
adc
fisubrl
jno
test
fstpt
xor
cmp
xor
cmp
jb
int
xchg
loopne
adc
movb
movl
movw
pushl
popl
pushl
mov
pushf
movl
pushl
ret
pusha
test
cmp
or
pusha
mov
lea
jne
bsf
not
mov
push
call
pusha
movl
mov
call
add
push
pusha
movl
pushf
lea
jmp
addr16
fldl
push
jae
mov
mov
xchg
cmpsl
xchg
cmpsl
jbe
inc
pop
adc
and
add
les
mov
loop
push
movlps
xor
leave
ret
add
jo
mov
mov
aam
jo
xorps
cmp
push
popf
xor
add
iret
fiadds
dec
adc
test
mov
sbb
push
push
fnsave
jb
repz
ret
inc
loopne
test
mov
mov
cs
jecxz
fsubs
idiv
cmp
add
add
mov
pushf
xchg
jmp
int3
mov
dec
iret
arpl
mov
cwtl
sti
lods
xlat
sub
dec
dec
sahf
xchg
or
push
mov
pop
hlt
cmp
xchg
mov
xchg
inc
fisttpl
push
adc
sarl
lret
jge
ds
adc
and
aaa
push
pop
xchg
or
dec
test
cld
arpl
int3
or
div
stos
cld
jne
lea
rcrl
xor
fwait
jl
insb
mov
inc
inc
lahf
lock
xor
movsb
add
nop
inc
ss
aas
mov
xchg
fs
or
and
arpl
sti
data16
out
lret
or
sub
sbb
pop
popa
sbb
jmp
xchg
mov
rcrb
or
test
adc
fnsave
pop
dec
jmp
popf
fucomp
insb
sub
shl
mov
mov
dec
mov
addr16
xlat
sbb
jo
pop
pop
or
jecxz
cwtl
and
fs
and
mov
jp
cmp
and
test
je
incb
push
mov
sbb
push
mov
push
test
dec
gs
mov
in
dec
cmp
xchg
arpl
pop
andb
repnz
faddl
push
pop
pop
push
test
add
pusha
xchg
stc
call
or
pop
jns
hlt
fistl
mov
inc
movntps
icebp
ror
or
imul
sahf
fstpl
scas
push
jg
and
nop
jo
orb
and
mov
cmp
mov
orl
xor
mov
daa
xor
pushf
push
lea
jmp
cmp
pop
pavgw
add
push
ficomps
repz
mov
fs
dec
dec
mov
test
clc
sub
xor
mov
dec
fimuls
sub
push
mull
sbb
pop
pop
inc
lcall
adc
push
mov
adc
add
jp
mov
jo
call
hlt
pop
inc
cli
jmp
sub
or
fs
or
sbb
sbb
and
dec
add
add
jge
dec
fstpl
mov
cmpsl
adc
mov
je
jp
movsb
ss
and
mov
mov
pushf
or
pusha
mov
push
lea
je
sar
shrd
add
adc
rcr
pusha
stc
sub
xor
shl
shr
btr
mov
lea
mov
not
add
inc
add
add
movzbw
pushf
xor
xor
mov
bt
bt
jmp
jmp
call
push
mov
bswap
movl
call
xchg
cmp
repnz
dec
jbe
or
dec
lods
cmp
sub
aam
push
test
cli
add
loopw
scas
ret
inc
push
mov
xlat
sub
mov
fs
dec
pop
sub
cwtl
and
mov
adc
sbb
stos
push
push
mov
bnd
adc
sub
pop
bt
fs
adc
mov
fimuls
fs
or
xor
pusha
adc
xor
fwait
incl
dec
or
roll
push
or
sbb
sbb
inc
cld
insl
add
adc
ds
repz
mov
xchg
xchg
jbe,pn
testl
push
push
or
xchg
repnz
dec
test
psrld
in
pusha
pop
mov
push
movsb
hlt
adc
rcr
clc
lahf
fisubrl
cmp
mov
not
dec
jmp
jae
mov
aas
jl
arpl
lahf
adc
movsbl
btr
and
rol
push
btr
bswap
bsr
mov
sar
btr
push
call
clc
shl
pushf
stos
pusha
ret
loopne
int3
mov
pop
fdivp
lods
nop
shrl
jae
cmp
pop
sbb
insl
cs
enter
loopne
mov
adc
xchg
gs
rolb
push
fdivs
sti
sbb
add
mov
cmp
fisubrl
mov
dec
mov
loope
adc
dec
cmpsl
stc
cmp
jnp
test
push
lret
adc
adc
fldpi
test
sbb
sahf
mov
dec
xor
sbb
cmpsb
cmp
sarl
mov
fwait
test
dec
fcomps
daa
sbb
pop
or
pusha
jns
jne
sub
adc
mov
aam
pop
dec
rolb
add
push
daa
mov
mov
mov
mov
and
sahf
popf
and
mov
inc
mov
repnz
cld
mov
jb
aaa
mov
repnz
insb
daa
dec
pop
jmp
imul
push
or
sub
sub
cmpsl
mov
xchg
lock
imul
mov
cwtl
cmp
int
pop
ret
je
int
mov
add
addb
or
iret
enter
loopne
cmpb
andl
mov
pop
fistpll
dec
adc
jnp
sub
icebp
pusha
and
cmpsl
xchg
movsl
pushf
loop
xor
jb
mov
mov
xlat
in
loope
hlt
mov
aad
and
adc
pop
push
push
mov
inc
sub
xchg
in
mov
xor
ret
call
jecxz
mov
adc
push
push
ss
or
popa
or
int
cli
cmp
es
pop
push
iret
xor
insl
jbe
push
dec
sbb
sub
mov
jbe
cmp
xor
scas
mov
mov
sbb
dec
in
enter
mov
push
das
cmp
pop
loope
mov
dec
or
cmovg
out
outsb
jnp
cmpsb
leave
nop
adc
ret
lods
int
fistpll
xor
shrl
mov
incb
ret
int3
ret
inc
xlat
mov
cmp
aas
sub
repz
cmpsl
in
pushf
data16
cltd
push
add
jmp
sub
inc
cs
mov
jmp
xor
jo
fxch
mov
mov
iret
ror
mov
into
movsb
jle
arpl
pop
lret
sbb
fld
mov
xor
dec
pop
ja
repz
add
imul
mov
push
or
cmp
imul
mov
rcll
pop
mov
jno
pop
lcall
jg
insb
iret
jmp
mov
je
fmul
imulb
mov
imul
and
or
cltd
xchg
adc
sbbb
je
pop
cmp
sub
xchg
mov
call
or
rorl
dec
inc
mov
fcoms
dec
mov
inc
cld
repnz
jge
adc
add
jle
jle
pcmpgtw
cmp
jl
mov
outsl
fisubrl
pop
mov
outsb
lods
pop
scas
ljmp
jge
outsb
icebp
jb
loope,pn
rcl
sahf
add
es
cmp
outsb
dec
daa
test
adc
sti
fstps
xchg
jbe
stos
aad
or
movsb
out
out
mov
out
int3
xlat
push
roll
movsb
mov
movsl
sbb
jne
sarl
cli
pop
pop
add
iret
sub
je
inc
mov
mov
cmp
or
inc
mov
pop
aas
push
int
sbb
icebp
or
lea
xor
sub
andl
mov
roll
adc
pop
je
jle
jmp
mov
pusha
jmp
adc
movw
movl
pushf
pushl
call
or
cmc
sub
mov
movsbw
mov
cmp
inc
mov
bt
cmc
clc
mov
test
stc
neg
pushf
cmc
sub
stc
push
rol
movb
jmp
cmp
stc
cmp
call
mov
repz
push
clc
or
and
or
lahf
cs
jg
jp
xchg
dec
mov
dec
sub
dec
aam
xchg
ret
adc
stos
pop
pop
pop
push
mov
aam
outsb
inc
jp
add
jnp
out
jns
test
in
cld
push
std
adc
sbb
dec
bound
aas
push
aaa
push
dec
sub
fildl
mov
in
inc
test
pop
adc
lods
lahf
fcoml
sarl
mov
mov
dec
ljmp
in
cld
subl
mov
cs
jge
lcall
sub
lcall
in
in
insb
out
movsb
stos
out
jg
cs
aas
sarl
sub
push
int3
in
and
mov
ljmp
clc
cld
imul
les
mov
mov
out
sti
test
hlt
in
call
icebp
and
in
jle
aam
js
mov
imul
cmp
or
pop
data16
outsb
hlt
hlt
jge
rcrl
mov
mov
lret
scas
mov
add
je
cmpsb
imul
jns
pop
lods
fsubrs
lret
push
outsb
sub
jge
inc
push
lret
cmc
inc
insb
data16
sti
in
out
jl
loop
out
push
pushf
ja
in
pop
out
fildll
in
bnd
mov
gs
xchg
insb
and
mov
gs
div
mov
and
mov
mov
push
cmp
cli
push
in
insl
jb
icebp
std
outsb
mov
and
fsubl
movsb
mov
mov
ljmp
push
push
out
testl
out
cmpsb
imul
add
mov
jno
out
outsb
addr16
ja
loop
out
mov
ljmp
jle
mov
enter
gs
loopne
in
push
fldt
push
cwtl
jns
cs
jmp
jbe
mov
push
push
loope
loopne
jae
bound
outsl
xchg
xchg
push
imul
xchg
popa
inc
push
and
aaa
repz
mov
cs
ficoms
sahf
jno
ds
add
lods
sub
repnz
fimuls
clc
add
loope
ds
inc
std
pusha
push
outsb
jnp
cmp
cmp
push
dec
daa
jno
fsubp
cld
lods
jp
nopl
insb
sbb
imul
pop
lods
fdivrp
add
imul
jbe
pop
imul
std
addr16
ds
loopne
inc
mov
out
ss
rcrl
add
shll
jae
sub
lret
inc
insl
out
cmp
jle
inc
xchg
or
mov
adc
sub
ss
cwtl
popl
jnp
ss
in
icebp
add
sub
adc
sub
repnz
insl
ljmp
pop
sti
popf
arpl
jbe
sub
pop
jmp
test
push
inc
cmp
mov
lods
notb
cs
adc
ficoms
int3
movsb
js
jae
lea
aaa
imul
adc
xor
jle
or
int
pop
popa
mov
ss
mov
jno
push
out
jecxz
dec
je
xchg
add
rcr
outsb
faddl
ffree
pop
scas
push
inc
and
popf
push
std
adc
loope
sub
cld
inc
and
sub
dec
adc
adc
push
pop
xor
xor
pop
scas
push
dec
movsl
divb
call
sub
mov
jnp
inc
jnp,pn
xchg
xchg
pop
jbe
or
xchg
repnz
fs
jge
xor
out
insl
pop
addr16
add
ljmp
iret
call
shrb
pop
push
pop
popf
mov
mov
insl
fucomp
outsb
jp
stos
or
cltd
fucomi
xor
loop
push
imul
ja
lret
leave
in
std
ss
out
push
jae
int
fsubrs
out
inc
stos
ss
fwait
test
loope
push
cmp
bound
call
cmc
lods
fnstsw
jmp
mov
pop
dec
push
je
dec
das
notb
xchg
aam
mov
cmc
jp
scas
cld
mov
outsb
mov
imul
scas
pop
mov
das
mov
cs
xchg
lock
nop
std
cmp
into
popa
pushf
jae
cs
jmp
sbb
movsb
xchg
mov
xchg
decb
and
sub
imul
sbb
mov
xchg
push
insb
sarl
addr16
leave
sbbb
int
mov
fstps
fisttpll
lea
push
xor
jg
outsl
mov
jne
cmp
popf
push
in
test
or
mov
test
mov
stos
lds
mov
pop
int
jbe
lods
jge
mov
xor
ret
popf
insb
shl
xor
push
outsb
test
int
xor
push
mov
insb
or
jge
pop
call
arpl
repnz
jp
in
fisubs
cmp
shll
stc
and
test
mov
mov
jnp
xor
iret
hlt
mul
loop
jg
enter
out
ja
out
xchg
sub
xor
repnz
mov
jle
gs
aad
mov
in
mov
xchg
xor
call
frstor
sub
cmp
jb
dec
repz
xchg
jne
popa
insl
loope
pop
xor
shr
inc
shr
mulb
divb
or
enter
pop
lock
es
bound
ljmp
pop
repz
ret
and
xlat
xchg
inc
mov
dec
cmc
or
mov
jnp
jmp
mov
cld
dec
xor
fcmovbe
xor
or
ja
jns
push
jle
xchg
xor
test
dec
loopne
rcl
dec
rcrb
jl
pop
sub
imul
mov
cmpsb
aam
xor
fistl
fdivs
push
dec
iret
cs
jnp
icebp
std
sub
sti
xor
pop
stos
xor
insl
icebp
push
dec
and
outsb
loope
cmp
lahf
jbe
mulb
pop
xchg
icebp
mov
pop
es
mov
inc
arpl
imul
lods
jns
mov
sahf
imul
test
insb
ficoms
roll
lahf
pop
mov
adc
xchg
lret
xchg
call
and
inc
stc
jnp
insl
ljmp
dec
testb
jnp
pop
into
addr16
fucomp
sub
imul
mov
cld
out
dec
xlat
orl
or
hlt
pop
mov
mov
dec
jmp
push
lds
outsb
mov
push
mov
xchg
fistl
jno
jnp
shll
push
fstl
and
repz
in
mov
outsl
mov
bound
shlb
lods
or
call
pop
inc
mov
cmpsl
ljmp
mov
movq
std
cmp
sub
js
push
sub
mov
sub
jmp
push
mov
jle
jae
sbb
ds
jmp
jbe
clc
in
add
loopne
inc
in
call
push
xchg
insl
into
fidivs
xor
daa
imul
aas
icebp
loop
cld
push
jp
test
jle
push
fidivs
jmp
inc
or
mov
push
cld
in
loope
mov
rcll
test
mov
or
sbb
push
xchg
add
stos
mov
or
inc
arpl
jbe
mov
leave
std
jns
mov
sti
outsl
test
mov
lea
or
orb
jae
pop
icebp
loope
xchg
adc
frstor
gs
insl
int
dec
mov
pop
and
outsb
mov
or
outsl
fs
popa
xchg
jecxz
jo
in
mov
sub
lods
nop
int
hlt
std
push
rolb
out
cmp
fldl
jmp
dec
out
repz
icebp
or
aaa
xchg
lret
pop
pop
pop
ds
or
ljmp
adc
shrl
call
out
xchg
das
push
and
hlt
push
leave
mov
out
loop
lods
out
int
std
jp
imul
movsb
rolb
mov
cmp
test
data16
mov
jnp
insb
ljmp
inc
cmp
cmp
mov
xchg
aam
cmpsb
icebp
mov
lcall
mov
dec
out
push
cs
cli
push
cmp
ljmp
icebp
les
adc
fadds
sub
icebp
mov
scas
mov
cld
lock
push
sub
loope
sub
push
push
mov
decb
out
clc
inc
arpl
mov
push
icebp
jg
icebp
shl
stc
dec
loope
lods
or
add
jns
mov
aas
loope
mov
and
jnp
lret
xor
fwait
outsl
xchg
inc
sbb
gs
ret
popf
jns
daa
dec
lock
adc
jno
cmc
and
int3
icebp
stos
out
imul
ds
out
add
mov
addr16
or
dec
sub
ret
enter
stos
mov
notb
mov
mov
mov
mov
mov
inc
sarl
lretw
push
std
jne
in
outsl
outsb
loope
out
xor
add
adc
insl
cmpsb
imul
mov
jmp
inc
dec
shrl
jo
sbb
xor
push
inc
cmovbe
mov
loope
jo
aas
mov
dec
pusha
xchg
xchg
loop
hlt
pusha
lcall
imulb
popa
dec
push
fwait
out
dec
add
and
icebp
iret
outsb
xor
aas
decb
jl
aad
jle
nop
loope
lods
jns
xor
cmp
mov
lods
je
mov
rorl
pop
in
testl
lods
push
shlb
mov
imul
push
in
cwtl
test
icebp
xchg
scas
gs
inc
loope
ss
outsb
xchg
inc
and
mov
or
or
repnz
dec
inc
cmp
test
adc
mov
ss
sub
std
cld
push
fsts
ja
xor
cmp
inc
adc
dec
push
pop
pop
xchg
adc
leave
cmp
loope
scas
xor
test
int
sarb
stos
icebp
sub
jmp
movsl
inc
stos
aaa
out
mov
cwtl
dec
enter
xchg
hlt
cltd
outsb
adc
inc
ljmp
pop
out
or
cmp
inc
bound
push
imul
outsb
das
arpl
in
dec
xchg
and
cltd
loope
xchg
dec
push
push
popf
inc
int3
scas
inc
sbb
dec
lods
addr16
loop
pop
sbb
loope
int
mov
divl
jb
ficoml
push
adc
fnstcw
mov
loopne
or
sub
push
or
lods
movsl
jmp
cmpsb
cmc
icebp
add
insb
out
mov
or
leave
or
cmc
out
js
inc
mov
cli
lahf
mov
and
clc
gs
les
in
jle
in
pop
cmpsl
adc
loope
jno
and
add
mov
xor
loope
inc
std
jecxz
xor
pop
push
jmp
and
icebp
jmp
gs
pop
adc
data16
scas
inc
imul
fcompl
pop
inc
lahf
leave
adc
sub
inc
scas
daa
imul
hlt
push
dec
icebp
pop
scas
push
pop
dec
test
jno
or
xchg
popf
push
bound
dec
inc
jo
sub
mov
push
bound
daa
insb
test
push
add
in
mov
in
pop
lds
lods
jnp
mov
icebp
cmp
int
fisubrs
xor
or
and
shrl
push
popf
sub
push
xchg
ja
jmp
xor
xchg
das
cmc
jmp
sub
test
xlat
rorb
ret
add
adc
bound
and
jl
sub
adc
int
out
movsl
fwait
hlt
dec
lods
icebp
repz
push
iret
sub
mov
mov
je
mul
fdivs
lahf
ljmp
or
dec
push
into
rcrl
loop
mov
out
ret
lret
mov
or
std
xchg
dec
dec
or
clc
mov
mov
jle
fnstenv
loope
scas
outsb
iret
icebp
nop
into
dec
fnsave
mov
inc
call
test
aad
dec
lret
nop
lds
shr
sub
add
shll
sarl
loop
loope
ds
mov
and
jmp
pop
mov
scas
fnsave
mov
repz
leave
call
icebp
repnz
outsl
aaa
xchg
bswap
adc
jle
adc
outsl
stc
out
or
mov
or
out
cmc
rol
test
cli
mov
or
mov
inc
js
loop
xchg
xchg
enter
scas
scas
insl
jno
jle
pop
mov
icebp
xlat
mov
xchg
push
jmp
pop
mov
mov
cli
push
and
outsb
push
fdivl
xor
movsl
loope
dec
dec
adcl
subb
push
movsl
ljmp
outsb
les
dec
jo
and
popf
imul
or
sub
cmp
xor
in
mov
inc
inc
hlt
add
xchg
inc
ljmp
scas
das
or
jne
lcall
fcom
sub
icebp
out
in
bound
push
rorb
mov
ljmp
out
xchg
scas
fstl
bound
lret
sar
aad
inc
rcll
xchg
mov
icebp
lds
out
and
cs
push
push
leave
testb
jb
jmp
std
mov
hlt
je
sub
shl
and
cmc
movsl
fstps
cmpl
aaa
fistpll
fcmovnb
fwait
out
cmc
cmp
icebp
xchg
sub
or
rcrl
xchg
fdivp
add
jp
or
push
jl
jns
mov
mov
lods
push
icebp
pop
ljmp
lds
jle
pushf
add
icebp
pop
xor
pop
test
hlt
inc
loop
mov
jge
stos
pop
lods
pop
orb
jb
xor
mov
cmp
imul
stos
rol
sbb
sbb
lods
mov
je
xlat
jmp
loope
adc
test
testb
xchg
ret
hlt
int3
insl
lods
jnp
nop
inc
dec
jp
movsb
cli
rcll
push
dec
std
inc
mov
enter
out
and
push
mov
pop
xchg
loope
mov
insl
xchg
add
cltd
test
xchg
ret
fisttpll
aaa
repz
dec
data16
in
mov
mov
sbb
xor
cmp
lock
inc
adc
dec
enter
xchg
inc
push
in
fwait
mov
ror
xchg
mov
add
punpckhdq
adc
mov
out
arpl
imul
push
out
iret
jecxz
push
xchg
pop
xchg
jp
mov
xor
jnp
jnp
stos
scas
aad
insl
dec
gs
out
fnsave
stos
and
mov
jmp
push
icebp
ljmp
cmp
clc
sub
insb
int
data16
lea
mov
mov
ds
inc
popf
jmp
int
arpl
lahf
xchg
pop
insl
mov
ret
insb
lock
andb
inc
lock
hlt
popf
xchg
xor
mov
iret
cmc
lahf
icebp
out
mov
add
in
mov
ds
test
mov
insl
push
scas
fiaddl
jns
push
loop
and
sbb
fs
icebp
fs
hlt
pop
adc
xchg
jmp
add
add
mov
lods
lret
adc
mov
pop
ds
mov
loope
cmp
push
mov
ljmp
or
popa
jae
and
mov
repz
or
mov
mov
adc
push
cmp
into
mov
lods
adc
push
jbe
lret
push
or
push
popa
sub
cwtl
aas
push
test
adc
xchg
and
xchg
fimuls
es
out
adc
ucomiss
mov
jo
push
sub
in
loope
pop
bound
ret
loopne
pop
add
arpl
je
call
mulb
icebp
lds
lods
out
lock
insb
sti
dec
lds
es
dec
sahf
scas
je
nop
mov
mov
or
insl
mov
push
sub
inc
and
push
mov
rcll
in
cmp
jmp
and
push
pop
push
rorl
fisubrl
lret
ja
aas
ret
mov
sub
xor
addr16
in
add
lea
aam
mov
test
addr16
icebp
arpl
stos
cmp
sbb
lea
iret
gs
mov
movl
pop
mov
mov
cli
dec
fcompl
pop
int
rolb
test
popa
mov
imul
std
icebp
addr16
lods
fldenv
mov
jl
mov
pop
lock
icebp
fistl
imull
in
fs
test
cmp
fstl
xchg
fimuls
jge
fiaddl
out
push
lock
dec
sbb
daa
mov
icebp
xor
adc
outsl
scas
jae
repnz
push
jb
push
in
jnp
or
shll
xchg
cwtl
ret
addr16
pop
inc
test
cmc
inc
add
fwait
jmp
sbb
out
out
rorl
and
jbe
notb
mov
leave
call
in
jno
orl
mov
fnstsw
jne
jmp
daa
push
jecxz
fs
or
cmp
mov
pop
test
decb
or
jmp
idivl
mov
popa
in
and
dec
adc
les
loope,pn
mov
js
data16
dec
cmpsb
in
rorl
xchg
insl
pop
hlt
fucomp
or
das
jne
cmpsl
lock
int
outsl
pop
lea
jecxz
outsb
jmp
push
xor
lds
inc
push
add
test
dec
sarl
aam
jo
imul
lock
sub
jmp
fucom
jne
jle
aam
iret
movsl
shll
nop
jl
xchg
loope
fisubrl
mov
icebp
nop
stos
xchg
mov
nop
fnsave
insl
fsubp
adc
shl
xchg
call
js
jle
pop
and
dec
std
addl
in
cmc
cwtl
gs
movsb
fs
jbe
lret
ss
or
or
int
jl
movsl
fstpt
and
fisubrs
lcall
adc
repz
or
mov
hlt
stc
or
inc
in
mov
and
pop
jmp
jl
outsb
xor
call
pop
jmp
outsb
dec
adc
mov
fstl
fcomi
mov
push
jp
mov
icebp
leave
fstl
cmp
insl
roll
inc
mov
rorl
lea
xor
subl
scas
rolb
test
or
mov
out
fidivs
adc
jmp
addr16
xor
popl
xor
lods
outsb
out
call
xor
and
push
mov
int
loope
jno
xor
jbe
movsl
add
push
fildl
repz
mov
ja
xor
or
fldt
ja
je
sti
mov
jb
das
push
js
jle
adc
cmp
mov
cld
sbb
xchg
push
mov
les
test
ffree
cmp
and
jb
xor
lret
mov
dec
adc
push
jle
cmc
lcall
pop
sahf
testl
movsb
fucomp
adc
leave
adc
mov
stos
pop
add
test
jb
orl
inc
mov
lock
scas
test
out
mov
in
fucomi
inc
pop
ss
mov
sub
jl
cmc
mov
lds
insb
or
adc
lock
aam
fcoml
adc
cmp
call
mov
enter
gs
je
ret
jp
test
popa
lods
cld
in
fldcw
fwait
and
jbe
gs
xchg
in
sub
in
repz
fs
cld
mov
dec
icebp
and
mov
sbb
push
imul
push
pop
xchg
movsl
imull
movsl
loop
popf
test
lock
scas
and
add
dec
ljmp
outsl
data16
bound
in
mov
mov
fs
xchg
in
loope
clc
icebp
outsb
je
and
cld
sahf
rolb
imul
sti
mov
jl
xchg
mov
icebp
jb
ljmp
popa
jmp
mov
in
mov
fs
push
mov
and
insb
pop
gs
aaa
mov
push
push
and
or
dec
into
and
mov
xchg
xchg
lea
xchg
xchg
mov
bound
mov
dec
lahf
ljmp
and
and
imul
cmpsb
xlat
in
add
mov
lods
rcrl
int
call
xorb
push
shrb
mov
sub
mov
loope
stos
lcall
int
inc
loop
sub
cli
insb
in
cmpsb
push
test
gs
int
icebp
cmp
fucomp
stos
xchg
shl
mov
xor
aas
xchg
pop
jg
dec
popa
enter
and
in
pop
jp
xchg
mov
in
cltd
sahf
icebp
dec
push
int3
xchg
rorl
pop
pop
mov
push
jb
test
sub
push
and
mov
lods
lret
sbb
jecxz
or
xchg
pop
dec
inc
pop
jbe
inc
xchg
add
lea
jnp
movsb
daa
shr
mov
arpl
push
mov
icebp
mov
shrb
in
and
test
jmp
cmp
std
clc
cmc
sahf
push
sbb
xchg
test
fcompl
inc
xor
out
in
test
je
lcall
mov
xor
pop
stc
jno
in
xor
cld
inc
inc
xchg
mov
cmp
dec
pop
inc
stos
test
lds
xchg
add
imul
arpl
fwait
and
movsl
inc
pop
fsubl
addr16
dec
cli
sub
popa
jnp
test
outsb
je
mov
lds
sahf
cmpl
out
popa
jbe
xlat
xchg
mov
pop
xchg
and
test
adc
es
pop
jp
cld
mov
xor
mov
cld
fwait
insb
rorl
push
and
out
popf
mov
jne
dec
dec
cld
adc
aam
cs
mov
fs
out
cmp
add
sbbl
cmpsb
out
and
ljmp
and
sbb
mov
jge
jmp
lea
inc
or
add
imul
jb
sti
lahf
imul
mov
or
jl
rorb
subb
int
ds
sahf
aas
sbb
mul
mov
adc
cmpsb
or
push
mov
push
loop
into
mov
je
cs
inc
lea
push
xor
stc
imull
fabs
mov
out
mov
out
mov
sbb
pop
insb
push
inc
add
loope
pop
gs
std
sti
aaa
and
jns
inc
gs
mov
mov
notb
sti
sbb
xor
fcmovbe
pop
cmpsb
mov
icebp
and
cmp
fwait
fwait
mov
pop
pusha
js
inc
xchg
mov
frstor
shll
pop
sahf
pop
cmp
int
clc
pop
sbb
popa
jl
xchg
mov
cmc
mov
add
sarl
rorl
lods
xor
pop
insb
icebp
inc
les
fsubrl
sahf
negl
icebp
and
inc
or
lock
mov
stos
cmp
inc
insb
jge
frstor
or
les
jp
icebp
bound
cld
jo
bound
rcr
fs
popa
mov
lods
mov
into
outsb
cmp
xor
fidivs
loope
subb
mov
out
loopne
sbb
pusha
and
stos
xchg
fnstsw
outsl
daa
cmpsb
rcrl
jae
pop
jo
pop
mov
xchg
mov
icebp
flds
xchg
insb
jbe
fcomps
stc
addr16
stos
sub
sbb
adc
or
push
add
inc
inc
fwait
std
bound
aad
inc
jbe
arpl
pop
popl
fstl
and
das
out
stc
dec
mov
add
xor
mov
add
fldt
fisttpll
out
add
sti
mull
pop
or
mov
jmp
adc
loop
jnp
insl
cld
cli
loope
movaps
js
in
jge
xchg
cmp
icebp
arpl
adc
out
lods
add
imul
mov
and
jl
ljmp
fnstsw
push
rcll
movsb
leave
xor
sarl
aam
mov
push
loope
jno
ljmp
lcall
dec
pushf
mov
cmpl
in
mov
dec
mov
movsl
ffree
jns
pop
adc
mov
cld
sarl
std
or
mov
or
inc
jmp
in
push
sbb
jecxz
arpl
test
in
ljmp
mov
leave
and
cmp
xor
mov
dec
insl
stos
cmp
js,pn
shll
pop
popf
dec
icebp
mov
pop
mov
jp
arpl
adc
cmp
dec
push
lods
or
divb
mov
lea
sbb
cmp
adc
jge
cmp
adc
repnz
test
or
jbe
out
or
and
dec
mov
sub
movsl
cmp
stc
ja
loop
cld
mov
fwait
mov
out
cmpl
in
add
mov
push
or
arpl
inc
clc
sbb
mov
insb
and
cld
fmul
jnp
dec
call
add
ret
out
dec
shlb
pop
cltd
add
xor
cltd
out
gs
inc
lret
cli
jns
arpl
pop
mov
mov
int3
jmp
jnp
pop
pop
mov
pop
dec
mov
fcmovbe
jecxz
in
aam
lret
scas
loope
cmp
or
add
mov
push
mov
lock
icebp
add
xlat
mov
adc
xorl
xlat
dec
rcll
test
inc
dec
imul
xor
and
fidivl
test
jp
addr16
pop
inc
mov
xorl
mov
and
jbe
cmp
add
lret
jne
cld
add
cld
cmpsb
jmp
lods
icebp
iret
in
cmp
sub
nop
scas
sub
std
enter
popf
lea
lods
mov
outsb
out
mov
arpl
xchg
dec
mov
push
push
mov
nop
push
dec
insl
fs
cli
test
lea
fs
push
lods
mov
push
sbb
sbb
out
rcr
mov
and
jmp
xor
inc
arpl
popa
mov
and
daa
lods
xor
repz
cs
sarl
inc
mov
sub
jg
sbb
xor
xlat
ds
jmp
pop
or
dec
mov
cmp
test
loop
add
lods
cmp
push
and
lods
icebp
lret
push
jno
js
into
out
inc
mov
stos
dec
mov
insb
hlt
loope
bnd
sub
xchg
xchg
xor
add
inc
pop
dec
cld
iret
pop
mov
ljmp
icebp
jnp
pop
xchg
movsb
and
mov
lret
push
mov
jb
andb
clc
negl
inc
xor
imul
icebp
pop
sub
nop
stos
cwtl
in
scas
addr16
cmp
inc
fstps
and
xchg
xor
xchg
mov
ret
or
or
dec
enter
loopne
icebp
cmp
fwait
mov
test
mov
int3
mov
push
sub
xor
dec
lret
push
dec
adc
xchg
jecxz
neg
inc
jbe
outsb
addr16
and
push
inc
in
test
call
insl
fdivrs
and
ffree
mov
jno
gs
into
ljmp
fstps
or
mov
imul
mov
mov
loope
icebp
xchg
subb
jo
or
mov
add
mov
cmc
out
scas
dec
ret
pop
mov
mov
out
out
push
pop
data16
push
jno
jge
fs
cwtl
popf
cmc
nop
imul
pop
cld
jbe
jnp
clc
cwtl
xchg
sub
inc
fldl
leave
call
dec
jnp
or
fsubrs
mov
mov
loope
cmc
out
iret
loopne
mov
xchg
daa
or
pop
mov
xor
xchg
mov
or
dec
rcrb
ficoml
inc
fstps
lret
int
icebp
add
out
jmp
sub
xchg
mov
outsl
jg
cltd
mov
arpl
fcompl
inc
in
push
inc
pop
scas
movsb
aaa
and
shr
loopne
xlat
fdivrs
call
outsb
ja
sub
and
lods
inc
iret
lcall
loope
xor
fidivl
xor
popf
pop
lds
sbb
dec
sub
jge
fnstsw
les
aas
out
insl
sbbl
bound
int3
or
jmp
sub
sarl
mov
sbb
ret
add
inc
cmpsb
xchg
jbe
js
sub
in
pop
push
rcll
fistps
pop
add
in
rcll
pop
ljmp
pop
push
push
adc
icebp
and
adc
mov
pop
mov
std
sbb
cld
leave
push
xchg
cmp
cld
in
xor
sar
popa
out
nop
pop
fcomi
lahf
mov
aam
push
movsb
loopne
mov
push
jmp
ja
imul
or
pushf
dec
xchg
sbb
jl
cmp
push
sbb
mov
mov
pushf
movsb
ljmp
jmp
xchg
mov
and
pop
int3
insb
pop
idivl
fadd
out
dec
mov
add
push
dec
mov
dec
shrb
mov
sub
xor
mov
scas
inc
insb
cmc
push
daa
dec
jbe
pop
lret
dec
inc
mov
ror
ss
and
push
sub
addr16
repz
mov
loope
scas
inc
xor
mov
addr16
rcr
sarl
out
mov
xor
fs
push
mov
mov
leave
sub
and
test
sub
in
jl
sub
adc
push
mov
jmp
jmp
sub
mov
hlt
sti
pop
js
jg
stos
roll
cmpsl
jmp
cld
cld
fnstsw
ja
or
mov
ret
ret
push
dec
icebp
test
mov
add
cmp
push
inc
lahf
or
out
pushf
xlat
aas
movsl
fsts
stc
mov
test
add
insb
or
or
push
fldt
push
xor
adc
mov
jge
cmp
cmc
mov
popl
scas
roll
cmp
xchg
std
scas
jge
js
imul
push
mov
int3
jnp
inc
mov
xor
push
int
or
cli
dec
and
inc
test
out
das
sbb
loope
jg
mov
int3
sub
sti
fsub
std
or
cmp
scas
in
dec
mov
js
fwait
insl
clc
xchg
out
popf
fstpl
pop
sbb
sbb
int3
inc
push
pop
jae
pop
cld
in
ljmp
in
add
cmpsl
pop
sub
pop
mov
sub
ret
cld
test
lods
std
adc
jl
int
mov
call
mov
push
xchg
sbbb
outsb
mov
rcll
xchg
or
mov
lods
or
push
icebp
xor
int
movsl
js
lock
pop
in
in
lods
stc
mov
aam
ljmp
loopne
cli
and
divl
dec
in
in
push
mov
int
vpunpckhwd
loop
xchg
adcl
adc
jge
sbb
push
shll
in
outsb
shll
xchg
sbb
jb
in
stos
mov
xchg
pop
mov
mov
das
xchg
lea
push
test
rcll
adc
in
lret
sahf
icebp
cmpsb
mov
sarb
test
lds
or
cli
pop
xchg
mov
xchg
inc
jge
daa
cmpsb
and
jb
push
dec
insl
loope
int
dec
sub
sub
je
dec
lea
stos
leave
or
icebp
push
lock
and
add
iret
pop
mov
fcompl
loope
mov
xor
cmc
adc
testb
fs
jle
dec
xchg
mov
out
insl
int
push
jns
xor
fwait
mov
inc
aaa
jae
xchg
dec
cld
movsl
mov
mov
shr
scas
movsl
cmpsl
aaa
mov
leave
imul
inc
pop
cmp
aam
pop
in
add
sahf
outsb
sub
add
negl
inc
adc
dec
nop
mov
mov
jecxz
cld
lea
cltd
fimull
inc
in
loope
stos
pop
rcl
mov
fs
loope
mov
push
in
mov
jno
call
out
insl
xor
loopne
adc
shl
outsb
add
loope
inc
ret
jno
and
cmpsb
loope
or
sbb
push
xor
dec
jb
fldcw
aas
outsb
gs
jle
test
and
cwtl
lock
dec
js
pop
ss
mov
mov
into
mov
push
std
in
mov
xor
or
incb
enter
lods
lods
sar
int
push
lahf
test
int
outsl
shrl
pop
or
mov
push
jmp
or
sub
pop
dec
xor
lods
push
fldenv
stos
sarl
enter
mov
out
js
inc
enter
or
add
lock
out
loop
jge
adc
mov
in
xor
int
cld
in
pop
stos
cmp
ret
xchg
xor
into
rol
fsubrs
sbb
in
ss
outsb
sti
mov
std
ds
lods
test
sub
loop
push
out
loope
std
xchg
jne
push
fsubp
iret
rclb
stos
cmp
test
mov
jmp
lds
jp
pop
jp
cmpsb
pop
jge
mov
pop
mov
vmaxpd
in
stos
pop
rolb
cld
xchg
ffree
or
addr16
out
loope
test
mov
int
mov
cmc
int3
stos
call
movsb
and
lret
icebp
mov
jns
mov
dec
ljmp
pop
ret
or
or
cs
dec
sahf
add
jmp
cmp
insl
push
jge
aam
inc
lea
dec
ret
pop
jns
xor
js
fwait
ss
das
xchg
sahf
sar
popa
or
sub
out
xchg
repnz
and
in
or
mov
shr
lahf
dec
cld
data16
mov
repnz
popf
sbb
mov
lods
rcrl
jae
adc
fs
ret
mov
lds
dec
add
lds
rcrl
lea
push
fdivrl
sub
fnstsw
ljmp
es
outsb
pop
fs
xor
call
mov
cmc
aaa
cmp
pop
sbb
cmp
and
je
std
xor
mov
cs
icebp
es
dec
mov
test
aam
int3
out
mov
push
les
int
and
xchg
fsubrl
icebp
shl
aad
sub
stos
sub
out
mov
cmp
cld
pop
cmp
or
iret
popf
test
xchg
jbe
pop
gs
icebp
and
xor
cwtl
mov
xor
popf
cmp
data16
loope
test
testb
inc
or
sbb
enter
inc
cld
pusha
sub
out
loope
sahf
rcr
pop
aaa
jmp
cld
ljmp
insb
pop
pop
cmp
adc
data16
mov
xchg
pop
into
inc
loope
sub
lret
xlat
clc
jge
les
sbb
inc
inc
mov
pop
cmp
pop
jne
stos
movsb
in
loope
cmp
lret
ljmp
fisubs
rorl
mov
sub
icebp
shl
sub
in
xchg
adc
flds
dec
lock
pop
dec
shll
pop
xchg
cwtl
fsubr
add
in
inc
int
into
hlt
mov
add
or
rorl
sub
dec
xchg
data16
sti
mov
popf
jmp
icebp
xchg
mov
cmp
dec
popa
mov
ret
push
lods
adc
pop
aaa
scas
xor
sahf
mov
daa
jo
imul
mov
pop
in
xor
testb
enter
iret
int
ljmp
addr16
clc
cmp
mov
jmp
lods
sub
loope
stos
pusha
cmp
or
lea
jl
sti
push
sbb
or
insl
rep
adc
lea
insl
inc
inc
pop
jns
mov
dec
mov
mov
testb
or
cmp
hlt
jae
call
lods
xor
arpl
xchg
aad
in
add
dec
jb
rcll
add
mov
jmp
nop
ds
popf
jp
inc
mov
pop
idivl
fcoml
sub
or
inc
out
xchg
cld
std
sti
bound
mov
icebp
ss
push
sub
in
movsl
lock
mov
mov
mov
mov
int
add
fcompl
pop
inc
ret
jmp
lods
sarl
out
adc
loopne,pn
jmp
lods
cmpsl
sbb
pop
mov
shrl
lret
lcall
and
dec
inc
cmpsb
shll
lcall
icebp
push
or
cmp
lret
shll
push
sbb
jae
sti
jecxz
lock
pop
push
pop
cmpsb
add
ror
or
call
push
adc
orl
xor
stc
sbb
jmp
test
mov
inc
fbstp
popf
aaa
std
or
dec
icebp
fwait
push
es
pop
push
aaa
std
pushf
push
mov
xor
cld
lea
out
add
nop
or
dec
sarb
pop
jecxz
loope
jb
push
and
into
js
push
inc
popf
jnp
sub
inc
adc
sub
mov
not
dec
xlat
aaa
pop
cmp
xchg
cmpsb
ja
jp
out
data16
loopne
int
add
pop
sub
mov
gs
bound
leave
je
pop
das
outsb
outsl
xchg
cmp
out
std
roll
mov
aaa
cwtl
jmp
add
jnp
push
daa
ret
ljmp
xor
sarb
mov
or
or
push
pop
jg
push
mov
or
out
es
dec
cmpsb
mov
mov
cmp
ret
cmp
out
sub
fldenv
repnz
int3
ja
add
hlt
insl
pop
aas
xor
and
nop
std
push
insl
dec
sub
pop
outsb
in
dec
mov
sarl
ror
cmp
adc
lds
in
jb
xchg
imul
pop
std
jge
inc
mov
out
ljmp
popf
inc
jnp
mov
aaa
test
xor
jbe
test
js
test
sub
lahf
lock
in
out
and
movsl
fcmovnbe
jmp
mov
ljmp
pushf
insb
shlb
daa
jle
adc
icebp
stc
shl
lock
mov
faddl
mov
push
or
or
fs
mov
push
mov
movsb
adc
icebp
sti
add
and
popf
xchg
mov
xchg
loope
out
je
sbb
outsb
loope
fmul
jbe
scas
xor
sarl
inc
fidivs
sbb
jnp
fidivs
imulb
mov
cld
add
mov
sahf
mov
mov
lock
es
in
lods
mov
push
or
xor
lods
xchg
out
movsb
test
or
pop
xor
fistps
sbb
pop
in
xor
cmp
rcll
ss
loop
xchg
lods
lret
sub
pop
out
aad
scas
mov
stos
sbb
imul
lret
mov
rcrl
rclb
or
fwait
and
cmp
scas
popf
fstpl
lds
les
movsl
stos
push
xor
mov
std
sti
into
fstl
and
sti
imul
dec
adc
ss
xor
ljmp
jns
mov
imul
ret
orl
or
inc
cmp
sbb
mov
sub
sti
and
out
sahf
loopne
and
or
lods
icebp
andb
cmp
and
mov
sbb
sahf
dec
fnstcw
aas
or
pop
lea
pop
cmp
inc
dec
in
adc
sbb
fcmovne
in
sub
pop
add
rolw
fadd
adc
pop
pop
imul
mov
dec
cmp
loop
inc
ja
fs
dec
mov
lret
loop
out
cli
inc
in
dec
xchg
or
mov
push
sub
cltd
fsubl
pop
mov
jmp
in
fnstcw
push
in
test
je
xchg
jecxz
pop
jl
imul
in
or
fldcw
push
in
rorl
cld
xchg
fistl
inc
jno
jl
sbb
test
mov
adc
xor
and
inc
pop
aaa
sti
arpl
loope
lods
mov
mov
pusha
ficomps
aaa
jl
ds
cvtdq2ps
dec
repz
clc
aaa
jo
aam
pop
in
lea
or
outsb
sub
scas
dec
push
sub
add
mov
push
das
mov
sti
cld
ljmp
pop
xchg
fsubs
imul
outsb
lods
jmp
loopne
push
ss
lods
ds
mov
loop
test
push
jg
xchg
loop
hlt
outsl
mov
mov
call
ja
xchg
icebp
sub
or
bnd
add
push
push
popf
mov
and
xor
leave
jl
dec
gs
mov
mov
in
lock
dec
pusha
or
ljmp
sub
pop
mov
icebp
sub
pushf
ss
jp
and
pop
xchg
xlat
adc
data16
pop
sub
aas
mov
lods
js
cld
movsl
lret
mov
in
lds
icebp
sahf
sarb
jnp
and
leave
int
les
mov
dec
loope
or
dec
in
pop
jnp
scas
lret
in
mov
lock
call
mov
out
int3
mov
jmp
test
into
stos
or
sti
push
scas
dec
cltd
imul
pop
repz
insb
test
jnp
push
es
insb
mov
pushf
xor
loopne
aam
pop
outsb
aaa
stc
sbb
cmp
cmp
add
fdivl
out
jle
pop
insl
push
pop
mov
xchg
lds
mov
cs
ret
test
ret
popf
jnp
stc
or
add
mov
gs
call
stc
testb
clc
add
test
sub
js
push
pusha
dec
arpl
insl
xchg
shll
mov
adc
mov
push
pop
jbe
dec
lods
call
lret
or
lcall
into
mov
fs
ret
mov
sub
cmp
stc
cmc
scas
pop
stos
insl
bound
lods
adc
add
scas
mov
loop
std
add
push
fistl
ret
ljmp
sbb
push
inc
jnp
push
xor
mov
cmp
adc
and
jecxz
pushf
in
filds
sahf
outsl
and
dec
xchg
mov
das
or
xchg
fnstenv
mov
outsb
scas
mov
loopne
mov
fs
mov
jnp
add
jo
pop
sbb
negb
jp
sti
es
imul
jae
cmp
outsb
pop
xchg
adc
ljmp
and
mov
jmp
inc
sbb
and
std
js
xchg
mov
les
das
in
out
add
pop
imul
das
xchg
pop
out
std
adc
sub
cmpsl
ds
in
fcom
insb
ljmp
arpl
push
jp
shrl
cmp
add
cld
jbe
loopne
mov
aaa
jb
mov
fisubl
es
std
mov
clc
out
movsl
dec
cwtl
shll
or
or
imul
dec
int3
out
pop
shl
push
icebp
and
pushf
gs
adc
bound
addb
or
mov
outsb
loop
mov
repnz
xchg
test
cmp
in
icebp
add
add
ljmp
adc
mov
cmp
jo
lock
push
lcall
icebp
clc
cmp
inc
mov
shrb
insl
out
pop
xchg
stos
in
cmp
push
cmp
ja
out
cltd
out
movsl
out
cmp
add
push
cwtl
mov
xor
ja
cmp
lock
ds
push
leave
fstp
ljmp
outsb
leave
sti
pushf
push
loopne
loop
mov
icebp
dec
adc
bound
outsb
loope
movsl
outsb
ja
fimull
pop
clc
jge
inc
sbb
arpl
dec
pop
or
in
in
push
ljmp
sub
jge
mov
aad
add
or
icebp
cmp
adc
sbb
subps
xchg
mov
pop
lret
and
jmp
jle
inc
outsb
call
test
or
or
das
out
jno
loope
or
jns
push
icebp
in
je
pop
add
ss
in
push
fsubrp
aaa
fcmove
push
js
jb
jl
andps
add
popf
xor
or
pusha
fcoml
push
movsb
sbb
addl
jnp
cmp
fisubrs
xor
inc
mov
loop
loopne
shll
lods
cmp
mov
out
mov
sbb
jbe
js
cld
div
mov
mov
lahf
leave
jb
and
mov
mov
pushf
dec
int
push
ljmp
sub
jge
in
lods
outsb
adc
adc
gs
enter
mov
std
je
dec
cmp
inc
mov
sub
sbb
fldcw
insb
cmc
pop
mov
mov
or
sbb
lds
gs
lods
xchg
mov
and
sbb
loop
cmc
mov
les
mov
fldcw
in
jle
roll
jmp
add
ljmp
scas
imull
int
xor
out
and
xorl
xor
sbb
repnz
lods
testb
pop
mov
xchg
rorl
dec
jne
int3
idivl
outsb
lock
pop
mov
adc
push
mov
pop
mov
es
pop
idivl
lea
rcrl
in
cmp
popa
lcall
jae
movsb
jnp
test
push
in
sbb
gs
xrelease
sub
pusha
stc
popf
mov
movb
in
test
loope
jns
or
sbb
add
lahf
dec
xrelease
stc
in
jge
fdivr
xor
dec
mov
jle
mov
mov
aaa
loop
insb
push
imul
fadds
add
data16
imul
lock
sbb
sub
addr16
add
js
cmpsl
add
mov
icebp
into
jle
stc
dec
clc
inc
jmp
out
les
inc
pop
mov
mov
dec
int
push
push
push
sarb
or
out
int
scas
push
cld
fdivr
pop
or
fnstsw
aaa
sub
lret
jle
xor
sbb
fwait
or
in
sub
mov
loope
jb
sti
icebp
xchg
and
addl
cmp
and
out
xchg
pop
bound
push
insb
and
ficomps
fstpt
mov
aas
push
jle
xchg
lods
add
test
data16
lods
xchg
imul
lods
das
mov
pop
cld
stc
cmp
loope
icebp
and
out
mov
jbe
divb
add
xlat
inc
sbb
cmp
push
shll
inc
and
add
sti
pop
call
call
inc
jecxz
lahf
push
out
mov
push
sub
xchg
outsb
cmp
loope
in
ffreep
inc
mov
cwtl
insl
push
push
jl
test
add
sbb
cwtl
and
pop
movsl
enter
push
jbe
or
test
pop
mov
jge
mov
xchg
movsl
cmpsl
jns
aad
xor
add
int
vpaddq
mov
lods
push
jnp
push
jecxz
inc
insb
cmp
xlat
sbb
aam
pop
or
jge
dec
test
aam
and
das
repnz
adc
push
notl
or
xchg
shll
mov
jne
arpl
aad
sub
jo
add
shlb
cmpsb
fsubrl
bound
ret
and
sub
pop
push
aad
sub
movsb
or
icebp
mov
sarl
sbb
mov
dec
bound
cld
push
outsb
rorl
xor
cltd
dec
cld
lods
inc
cmc
jbe
test
jge
test
mov
es
lea
int3
scas
pusha
loop
pop
push
push
cld
lcall
inc
clc
mov
inc
lods
shll
int
int
add
aam
aaa
das
cmp
pop
in
xchg
out
or
mov
cli
pushf
dec
fwait
sbb
in
add
mov
shlb
addb
loope
icebp
subb
pop
cltd
ret
lcall
mov
jg
icebp
jne
inc
imul
mov
adc
cmc
or
and
int3
into
loope
repz
leave
push
jb
ficoml
mov
or
test
icebp
rol
dec
in
push
testb
movsl
shr
fs
stos
shl
test
mov
cmpsb
repnz
cmc
sub
fmull
adcl
sbb
clc
sbb
adcl
icebp
test
in
loope
pop
stos
iret
xor
in
imul
mov
dec
dec
insb
lds
push
ds
inc
cmp
out
out
outsb
roll
stos
push
lock
stc
add
xchg
mov
jle
ljmp
mov
jns
ds
xor
cmp
jns
ficoms
inc
inc
ja
xchg
lods
cld
push
ja
loope
mov
fildl
int
push
xor
fdiv
int
mov
and
int
cli
and
orl
mov
dec
push
xchg
pop
xchg
mov
cld
inc
sbb
pop
popf
or
xor
loope
insb
add
sub
movsb
insl
mov
xchg
jle
vmovapd
out
shll
or
mov
mov
jecxz
xor
or
int3
mov
clc
bound
cltd
or
xor
xchg
lret
xor
mov
mov
in
push
cld
cs
adc
imul
sbb
or
mov
mov
dec
stos
cltd
xlat
push
push
push
cmc
push
mov
sbb
dec
xor
pop
inc
sub
fstl
pop
mov
push
xor
sti
jle
mov
les
inc
icebp
loop
push
or
imul
jns
jbe
test
adc
jl
adc
and
xor
pop
mov
xor
dec
fstps
or
rolb
aad
enter
fidivs
jns
cld
enter
gs
jmp
je
cmp
lret
andb
popf
xor
in
shll
les
mov
mov
jp
pop
mov
stc
mov
push
movsb
dec
faddl
shll
mov
out
leave
dec
stos
repnz
inc
rorb
dec
imul
mov
and
icebp
jecxz
cli
sbb
or
repnz
push
mov
mov
out
cld
mov
sub
roll
int3
mov
or
mov
pop
out
aas
movsb
lret
xchg
sbb
cmp
or
out
mov
rolb
stos
fildl
push
add
adc
xchg
xor
ficoml
pop
mov
push
subb
mov
xor
ret
xchg
inc
int
mov
test
dec
or
pop
lret
mov
lahf
mov
mov
es
js
imul
adc
jp
lret
imul
jl
shll
cmpsb
mov
push
adc
push
jge
in
ss
mov
fwait
xor
cmp
sub
mov
cli
push
mov
sbb
cs
ret
mov
add
mov
mov
in
jae
jb
rorl
add
push
cmp
xlat
xor
pop
leave
inc
mov
cmp
cmp
rorl
push
pop
scas
mov
das
out
sub
les
fstpl
aas
pusha
xor
cld
loope
int3
push
mov
jmp
int
and
shl
fcmovnu
jl
mov
arpl
aad
mov
jnp
into
vpsrld
lds
jo
sbb
xchg
cmp
rcrl
dec
ja
jbe
movsl
mov
mov
xchg
push
int
shrl
xchg
adcl
cli
into
push
push
push
stc
shrl
inc
lcall
incb
push
inc
int3
or
pop
call
cmp
xor
neg
insb
loope
lea
mov
mov
add
stos
push
or
in
cmp
in
push
mov
popf
fwait
xchg
cmp
shll
loopne
add
js
mov
scas
in
icebp
cli
dec
add
loope
mov
lea
or
cwtl
pop
mov
lahf
pop
mov
clc
add
xor
push
sarl
lods
fldl
decb
enter
dec
sbb
aam
call
gs
cmc
push
in
and
negl
pop
test
jle
cs
and
cld
stos
mov
out
dec
adc
movsb
mov
push
in
add
subl
cmp
mov
fidivrs
mov
lock
ja
stos
dec
pop
mov
enter
mov
fwait
in
adc
fldl
in
pop
mov
movsb
lea
adc
sbb
loope
sub
aaa
imul
ja
and
out
or
dec
fwait
pushf
mov
jp
push
test
cmp
push
sbb
loopne
pop
popf
cmp
repnz
mov
jp
mov
push
popf
icebp
adc
jae
or
std
xchg
inc
scas
push
rorl
push
or
cmp
ret
mov
mov
pop
mov
outsb
mov
pop
rcrl
mov
mov
insl
rorb
pop
mov
lret
scas
xor
fistl
loope
lods
test
ljmp
sarl
out
ret
pop
and
mov
dec
inc
cli
out
mov
into
stos
xchg
addr16
cmp
mov
pop
and
call
and
cmpsl
insl
push
push
sub
icebp
add
mov
addr16
in
roll
sbb
mov
icebp
inc
addb
adc
mov
fstpl
or
cmp
inc
in
cwtl
lods
lods
loop
mov
lret
aas
inc
dec
daa
mov
push
in
rcrb
cmp
mov
jnp
sub
push
ljmp
inc
pushf
fs
movsb
jecxz
pop
es
in
nop
push
or
cli
dec
mov
mov
je
dec
ret
loope
rol
xchg
std
inc
js
in
add
inc
stos
jmp
push
enter
test
cmp
loope
sub
sarb
pop
mov
mov
movsl
loop
sbb
scas
insl
cmp
xor
mov
out
or
pop
mov
and
push
call
std
or
jno
cmp
cli
cld
pop
outsb
dec
inc
sub
mov
pop
cmp
sbb
xorl
xlat
adc
jge
mov
mov
pop
fisubl
into
icebp
or
sbb
pop
rclb
mov
sub
hlt
in
movsl
ljmp
mov
bswap
mov
push
lods
push
xor
lods
pop
sbbl
add
mov
pop
fs
cmpsl
or
cmc
xchg
mov
loope
jbe
xchg
mov
sar
shrl
rol
mov
enter
imul
xchg
out
pop
out
sti
lahf
push
loopne
stos
add
out
and
out
push
bound
jmp
push
scas
cmp
roll
loop
push
and
stos
icebp
lds
mov
fdivrl
xchg
sbb
inc
push
sbb
dec
shll
fcompl
dec
jmp
out
push
lcall
fldenv
xchg
ds
ljmp
pusha
in
movsb
ficoml
test
call
loope
or
call
ret
sti
das
int
cld
movsl
add
sub
sti
popf
outsb
in
cmp
bound
outsl
cmc
sub
lahf
lods
ljmp
sbb
push
xor
mov
ret
mul
jle
xor
scas
mov
jp
pushf
icebp
out
jbe
or
adc
mov
or
adc
mov
and
loope
pop
mov
out
icebp
and
dec
cmp
pop
and
int3
mov
mov
les
inc
jp
in
cmc
push
mov
jp
std
out
jg
pop
adc
dec
sti
sbb
mov
push
xchg
cmc
push
mov
push
fstpt
ja
icebp
movsl
decb
xchg
dec
cld
aad
adc
fstl
lods
cmp
dec
loope
pop
jecxz
inc
jge
sub
scas
mov
daa
cmc
pop
sbb
mov
or
jne
roll
ret
fxch
xor
mov
cli
cmc
dec
cmpsl
imul
inc
jne
outsb
pop
cld
add
fwait
lods
mov
out
data16
movsl
insb
pop
rcrb
out
icebp
out
fnstenv
xchg
loope
xor
lds
jno
loop
cltd
and
jp
push
or
sub
mov
ss
mov
je
cmpsb
inc
xchg
or
pop
xchg
addl
jbe
dec
insl
jle
int3
mov
cmp
or
inc
in
jecxz
test
lcall
inc
sbb
arpl
add
push
ljmp
mov
add
jle
andb
pop
mov
dec
sbb
xor
mov
icebp
cwtl
push
sub
dec
test
mov
data16
add
and
or
gs
ss
in
sub
or
in
fcoml
push
sbb
pop
lods
stos
xchg
jle
fs
mov
xchg
call
sbb
xchg
mov
push
mov
stos
jl
std
std
cmpsb
in
fbstp
fwait
xor
adc
mov
add
push
jg
adc
out
test
xchg
inc
scas
mov
inc
mov
jnp
pop
inc
out
push
and
pop
inc
add
push
cmp
mov
scas
fwait
test
xchg
dec
rcll
push
mov
jno
or
mov
popf
xor
test
mov
std
mov
or
inc
sub
push
cs
add
jl
xchg
jns
sbb
icebp
inc
aad
adc
cmp
mov
cmpsl
and
out
or
xchg
mov
inc
dec
jmp
fdivrs
sar
in
in
add
movsl
fnsave
and
dec
push
xlat
and
insl
lahf
add
pop
je
cmp
out
push
rcrl
xor
xor
pop
lret
jnp
sub
and
call
loopw
pop
push
dec
fwait
inc
push
adc
insl
xchg
addr16
mov
dec
jnp
mov
pop
in
js
sub
rclb
push
outsl
dec
ficomps
sub
sbbb
inc
xlat
mov
call
inc
jl
icebp
sbb
popa
mov
out
loope
cmp
mov
insl
icebp
and
fists
dec
subb
mov
int
cs
stos
jmp
cmpsb
jno
pusha
test
sbb
or
js
mov
imul
les
pop
sub
ret
jnp
cwtl
sti
xorb
roll
push
jne
and
es
or
and
out
jnp
cmp
int
mov
mov
inc
lahf
das
enter
rcll
adc
xor
dec
je
sbb
cltd
fnstsw
outsb
ja
test
insl
insb
mov
mov
stc
or
push
frstpm(287
adc
stos
frstor
inc
xchg
sub
add
fsubrs
mov
enter
mov
sti
sahf
jae
xor
xchg
sub
into
into
mov
outsl
cmp
pop
or
pop
xchg
pop
cmp
pop
adc
or
int
fisubs
push
sub
push
push
or
es
iret
rcr
cmp
dec
or
xchg
nop
or
enter
movsl
int
cmp
mov
or
mov
mov
shll
push
enter
fisubrs
adc
cmc
pop
into
and
popf
gs
stos
popa
jecxz
inc
icebp
mov
je
loop
fmul
arpl
and
cwtl
xor
jns
adc
lea
aad
bound
bswap
adc
in
iret
jmp
popa
loop
outsb
scas
inc
or
mov
addr16
outsl
shl
push
add
stos
movsb
repz
pop
shl
out
pop
push
mov
sbb
push
dec
mov
imul
rclb
daa
pusha
sbb
fsubl
int
int3
push
repz
inc
adc
icebp
dec
dec
mov
or
out
fldl
fiadds
scas
push
shl
xor
adc
icebp
mov
dec
inc
jmp
into
std
xor
jae
push
iret
push
and
inc
daa
cmpsb
jge
and
mov
test
daa
cld
mov
shll
test
cmp
dec
mov
icebp
sbb
mov
test
sub
add
js
loope
jbe
out
or
dec
jmp
hlt
sbb
sti
jp
int
rcr
int3
into
test
std
xchg
jge
xchg
sub
aam
ret
hlt
stc
jns
stos
icebp
and
call
mov
es
sbb
pop
arpl
add
lods
and
pop
out
jae
mov
add
icebp
add
scas
adc
cwtl
insl
shr
icebp
sar
xlat
mov
ljmp
and
or
rcr
and
cmpsl
pop
jbe
ret
fistps
dec
loope
xor
popa
add
imul
fsubr
idivb
add
mov
js
sbb
fs
shrl
insb
pop
dec
test
push
and
fsts
imul
rclb
std
push
pop
dec
cmp
mov
daa
repnz
imul
or
or
lods
icebp
fsubrl
scas
lret
push
js
aaa
lret
aas
inc
dec
sahf
loope
xchg
fiadds
loop
pop
cltd
movsl
dec
int
or
js
shrl
lret
inc
imul
loope
cltd
jmp
ret
xchg
jge
cmp
cmp
push
cmpsb
out
int
pop
int
push
inc
xor
mov
adc
mov
mov
push
pushf
mov
mov
pop
fldenv
jg
mov
inc
ss
pusha
sbb
mov
inc
movsl
fcmovnu
scas
xor
repnz
add
test
sub
outsb
xchg
cmc
inc
aam
bound
fcoml
and
add
mov
daa
repz
mov
out
push
or
push
ljmp
jo
xlat
enter
mov
sahf
and
mov
fisttpll
push
and
in
int3
xlat
sbb
sub
jp
lea
mov
dec
ficoml
sbb
dec
inc
add
das
inc
shl
clc
lret
mov
mov
add
jp
pop
js
pop
pusha
imul
sub
fs
cmpsl
in
mov
dec
in
dec
inc
stc
std
xor
push
pop
jne
push
int
lahf
dec
faddp
cmp
push
lret
adc
popf
jnp
add
testl
nop
icebp
or
jne
scas
ljmp
mov
push
stos
or
or
push
xchg
xor
cmp
add
loope
mov
fistpl
mov
mov
push
imul
mov
pop
dec
insb
outsb
nop
mov
gs
addb
push
xchg
ret
lods
sbb
inc
out
pushf
mov
lcall
movsl
out
xor
fs
popf
addr16
pop
pusha
inc
in
push
or
mov
add
adc
inc
fsubr
mov
cltd
mov
fmull
cmp
test
outsb
dec
clc
outsl
ljmp
cmp
mov
mov
adc
jge
icebp
movsl
je
pop
jno
or
cld
inc
fsubr
xor
jecxz
dec
dec
in
popa
icebp
dec
leave
jbe
das
sub
cmpsl
scas
add
ret
ljmp
cld
icebp
dec
scas
data16
jg
sbb
and
fistl
push
and
fs
inc
loop
cmpsb
mov
dec
jp
mov
icebp
stos
fprem1
movsl
outsb
pop
sarl
xor
adc
data16
icebp
mov
insl
out
pushf
push
dec
sbb
mov
xor
xchg
fidivs
out
dec
imul
dec
in
cmp
cld
in
cmp
lock
loope
test
lahf
ss
out
push
lock
pusha
into
mov
xchg
loop
pop
mov
loope
or
jns
push
add
out
js
or
in
jne
daa
inc
loopne
push
cltd
lcall
loop
imul
cmp
cmp
shl
icebp
dec
push
dec
push
inc
xchg
add
xchg
loope
adc
and
cmp
mov
xchg
xchg
inc
jl
push
repz
jg
pop
orl
test
cmpsb
testb
mov
hlt
adc
push
cwtl
in
xchg
inc
fisubrs
rcrl
xchg
pop
movsl
xchg
sub
pop
pop
sub
nop
cmp
lcall
cmp
mov
popf
push
jnp
xlat
pop
jae
mov
mov
icebp
mov
sbb
int
jb
or
mov
mov
mov
popl
cmp
pop
mov
rorb
insb
push
sbb
jb
ljmp
cli
ljmp
fnstenv
outsb
notl
cmp
pop
fwait
pop
mov
in
icebp
and
jnp
test
add
int
push
ret
scas
std
insl
sbb
pop
mov
add
lds
inc
test
jmp
xchg
cmpsl
lcall
aaa
ljmp
xor
into
adc
jnp
mov
repz
in
in
rcr
popa
dec
sahf
xchg
std
mov
adc
icebp
sub
lock
jp
mov
jbe
dec
push
lods
xor
push
loop
sub
mov
ret
and
or
inc
jge
mov
add
gs
outsb
aaa
dec
scas
jge
outsb
push
stos
push
push
pop
jne
or
std
imul
insl
icebp
mov
jo
pop
in
cld
jne
cld
sbb
pop
sbb
lret
lea
notl
fisttpl
loope
cmpsl
mov
sub
insl
inc
data16
hlt
rcll
push
outsl
daa
cmp
incl
mov
mov
inc
arpl
sub
and
mov
inc
xlat
or
inc
jle
in
stos
pop
mov
cmp
fs
pop
jbe
out
cmp
jnp
repz
aas
enter
or
and
iret
insb
pop
cltd
mov
out
inc
rcll
mov
icebp
nop
pop
insl
mov
negl
mov
xchg
loopne
dec
xor
lea
push
and
imulb
aaa
jnp
xchg
rorl
pop
xchg
fmull
and
ror
mov
popf
fwait
push
sub
mov
ljmp
inc
je
cld
sub
imul
lret
sti
data16
nop
jae
jecxz
lea
test
lods
imul
loop
xchg
test
jmp
cmp
xlat
scas
test
jle
dec
stc
adc
leave
add
subl
dec
or
pop
mov
sub
or
rorl
cmc
pop
xor
out
jmp
inc
mov
imul
or
movsb
rorl
mov
pop
test
push
in
rcl
jle
pop
push
adc
jbe
sbb
fwait
jge
imul
sub
outsb
sub
sbb
xchg
and
jl
sbb
ljmp
loopne
or
mov
add
jae
std
cmp
mov
sub
xchg
in
jecxz
cmp
pop
pop
lods
icebp
push
push
push
ret
inc
sub
dec
cs
mov
and
insl
popf
mov
cmp
jp,pt
outsb
out
and
enter
aas
xor
loop
lcall
cmp
sbb
push
cld
loope
mov
push
inc
jnp
popf
fcomps
insl
pop
scas
loopne
mov
mov
cld
xchg
loop
popf
lahf
test
int
mov
je
cmp
enter
push
out
xor
xchg
loope
pop
cwtl
ja
movsb
iret
sub
mov
repnz
cmp
push
mul
dec
insl
movsl
jge
out
addr16
repz
dec
shll
test
imul
xor
ds
mov
shll
mov
mov
sarb
mov
aaa
xor
loope
pop
movsb
fstpt
cli
shll
push
test
stos
fcomi
mov
lock
mov
sbb
xchg
cli
inc
movsl
ja
roll
fildll
mov
scas
jecxz
out
fcmovnbe
bound
and
pop
jmp
popa
das
dec
clc
sahf
cltd
jecxz
adc
hlt
lcall
cmp
stc
push
dec
shll
jmp
popa
xchg
cltd
imul
pusha
imul
aaa
or
pop
jae
scas
ret
mov
jl
js
shlb
test
push
xchg
lea
pop
ss
repnz
sti
rorl
and
xor
shrl
lret
out
adc
fabs
fst
lcall
lock
mov
lret
sbb
outsb
sbb
push
pop
test
push
les
cmp
fsubrs
push
xor
and
loope
rorl
arpl
pushf
fnstenv
icebp
imul
loope
mov
hlt
outsl
outsb
fistpl
jae
xor
sbb
mov
and
shrl
scas
or
out
loope
stos
shlb
out
outsl
jo
and
out
mov
mov
loopne
pop
mov
arpl
fsubp
out
stos
call
xchg
int
stos
jne
insb
xchg
nop
inc
in
xchg
jecxz
or
jnp
bound
mov
ret
es
and
xchg
jo
aam
or
into
mov
dec
out
or
stos
clc
test
inc
out
shl
xor
repnz
outsl
dec
inc
les
jge
dec
cmpsl
ljmp
jbe
int
inc
add
neg
cmp
shll
jmp
gs
mov
dec
mov
push
mov
enter
mov
pop
mov
icebp
cmp
nop
int
ss
push
jecxz
ljmp
in
cmp
cmp
jno
mov
pop
hlt
test
mov
sub
test
mov
jle
ret
std
and
cmp
add
push
push
data16
out
or
ret
cmpsl
mov
mov
inc
mov
scas
inc
mov
push
jb
addps
int
in
in
dec
daa
or
loop
cmp
sbb
and
push
add
lods
inc
test
lret
xchg
popf
loopne
or
mov
mov
aad
stos
xchg
xor
lods
icebp
sahf
mov
xor
out
fnstenv
stos
mov
repnz
mov
movsb
sbb
jmp
addr16
outsb
inc
inc
hlt
add
and
xchg
out
or
cmp
jns
sub
push
xlat
jno
aad
test
stos
into
out
popf
fstl
clc
fmuls
xor
pusha
les
xchg
or
loop
cmc
cs
mov
jp
aaa
jb
adc
add
add
loope
cld
movl
faddp
xor
gs
dec
mov
sbb
loope
mov
dec
push
pop
pusha
fucom
out
pop
out
outsb
inc
ja
jmp
data16
aam
inc
das
dec
mov
jne
dec
mov
and
fnstcw
inc
icebp
push
xchg
mov
les
outsb
loope
decb
rcl
and
or
sbb
ljmp
pushf
out
aad
sbb
dec
outsb
ret
fcmovnu
inc
mov
pop
and
jnp
fldlg2
das
cwtl
andb
pop
mov
cmpl
popf
jbe
daa
jns
jge
int
push
lea
std
rcrl
jp
xor
pop
mov
call
int
shll
je
xchg
fisubs
icebp
mov
ret
cltd
ret
fcmovne
insl
loope
sahf
popf
icebp
nop
and
out
sub
mov
xchg
or
fiadds
ret
call
mov
inc
lods
dec
in
push
out
inc
mov
out
lds
pop
mov
jne
mov
jnp
push
insb
in
imul
sbb
decl
test
loope
lods
cwtl
sbb
movsb
mov
hlt
in
rorl
int
in
cmpsb
into
loope
push
add
js
sub
imul
inc
outsb
xor
cmp
daa
sbb
adc
in
and
loopne
add
repz
pop
bound
lea
icebp
xor
shlb
leave
addr16
dec
data16
loop
sahf
iret
cmp
lret
sub
and
mov
pop
xor
dec
idiv
idiv
roll
mov
jno
sbb
lock
push
add
lods
lret
frstor
das
scas
sub
add
inc
push
and
sbb
cmp
mov
inc
add
or
shrl
push
jle
icebp
mov
add
inc
mov
data16
in
popf
scas
sarl
adc
push
mov
xor
mov
aad
je
fcompl
clc
jbe
mov
aam
mov
imul
out
loope
mov
imul
out
aad
ret
popf
int3
cmp
ljmp
mov
dec
pop
mov
push
sbb
xlat
icebp
pusha
aad
inc
stos
notb
jns
mov
sbb
xlat
dec
scas
aam
lahf
add
sub
pop
fisttps
dec
sti
insb
jecxz
push
loope
sbb
jp
xor
imulb
cwtl
test
jp
pop
insb
in
ss
xor
aam
jo
fstpl
fsubr
stos
aam
imul
sti
mov
test
xchg
add
cmp
loopne
fdivrs
dec
addr16
pop
ss
mov
imul
push
mov
into
xlat
pop
and
pop
and
lock
loop
popa
lds
icebp
cld
dec
sbb
adc
inc
shlb
inc
mov
push
xchg
lret
clc
int3
icebp
hlt
ret
xlat
in
cmpsl
xor
push
hlt
inc
aas
icebp
mov
mov
or
adc
push
inc
pop
rorl
mov
cmp
mov
jbe
pop
push
add
and
insl
jae
out
out
adc
iret
jmp
icebp
sbb
popa
lods
sub
mov
mov
mov
pop
mov
mov
shll
mov
jb
loopne
and
xchg
in
call
mov
jge
xchg
adc
mov
xor
dec
lods
pop
ljmp
jae
sub
dec
mov
neg
loop
sbb
add
into
aas
and
andb
das
fsubs
jb
ljmp
fwait
xor
and
lods
icebp
aad
ljmp
dec
sbb
filds
in
mov
pop
jae
xor
stos
jo
cld
pop
pop
push
insb
mov
mov
in
pop
out
popl
test
loope
test
cmpsb
sub
cmp
mov
lea
push
shll
cmp
push
fldt
hlt
push
pop
push
mov
icebp
test
jo
mov
rcrl
mov
dec
mov
jle
ret
add
andb
ret
ljmp
arpl
cltd
pop
pusha
ficomps
arpl
xchg
test
scas
inc
std
cmp
inc
and
out
loope
pop
add
mov
push
mov
callw
js
dec
add
and
push
jecxz
icebp
add
wbinvd
ss
or
push
add
stc
and
dec
pop
lock
aam
pop
loop
icebp
xor
in
popa
stos
mov
pop
or
test
push
cld
push
icebp
nop
sbb
std
dec
arpl
roll
jl
js
cmpsb
push
xchg
int
fisubrl
sub
outsb
outsb
shl
ret
out
xchg
loope
insb
jmp
rcr
mov
in
jo
add
sbb
cmp
ljmp
add
push
inc
ss
adc
cmp
scas
cmpl
mov
dec
frndint
xor
sbb
cmp
mov
lock
or
jmp
or
push
fbld
inc
scas
test
sarb
dec
les
mov
inc
mov
cs
mov
mov
mov
test
add
xor
jbe
lods
mov
and
or
pop
out
loope
aas
dec
insb
xor
push
mov
popa
roll
stos
insb
sti
or
xchg
jmp
outsl
cmc
pop
jmp
sub
fisttps
xor
jmp
test
xchg
mov
mov
repz
pop
stc
push
pop
in
imul
mov
loop
ds
pop
fcompl
outsb
jo
icebp
jmp
movsb
clc
cmp
or
fdivl
sub
jg
cli
frstor
mov
mov
jo
xor
fldl
shll
add
pop
ljmp
scas
or
mov
jo
mov
rcrl
in
push
mov
dec
fisubrs
add
scas
add
sarl
mov
jge
and
mov
cmp
lahf
push
mov
call
and
test
loop
jp
aam
pop
outsl
cmp
outsl
pop
mov
push
xor
ja
cs
sbb
in
jecxz
sti
xchg
ror
data16
rcrl
insl
or
fwait
pop
xchg
jmp
jle
and
xchg
dec
and
imul
test
fs
push
dec
jge
add
mov
rclb
jmp
rcr
inc
pushf
aam
scas
xor
sub
sbb
iret
sub
inc
enter
dec
mov
xor
popa
mov
and
xlat
icebp
aam
mov
inc
pop
xchg
out
cmc
mov
lods
cli
mov
add
xchg
add
fs
adc
loope
xor
lods
cmpsb
mov
jns
push
and
jecxz
aas
in
pop
icebp
shl
loopne
push
xor
fnstsw
out
movsl
icebp
push
jg
ljmp
loop
mov
rolb
jmp
outsb
xchg
lods
insl
mov
outsl
icebp
or
pop
xlat
inc
push
repnz
lods
mov
insb
in
sbb
mov
hlt
gs
loop
das
int3
adc
into
imul
out
pop
lahf
xor
push
xor
xchg
mov
inc
call
popf
popa
fdivl
add
inc
in
pop
pushf
mov
int
ret
fnstcw
lods
stos
mov
data16
push
or
out
mov
rcll
dec
xor
mov
dec
mov
jecxz
lods
fisttpll
pushf
jle
lea
rcll
stc
lods
sti
jb
out
data16
outsb
fmuls
fsubl
jl
pop
movsl
loopne
fdivrl
mov
and
insb
pop
adc
loopne
scas
outsb
subb
insb
lret
mov
ljmp
les
mov
xchg
adc
ljmp
leave
sub
out
mov
mov
and
sub
std
push
pop
mov
in
rcll
xor
lcall
arpl
pop
aad
pop
dec
mov
cwtl
ret
inc
or
repnz
repz
push
iret
loope
in
nop
ja
adc
imul
scas
rol
stc
fs
icebp
sbb
rcrb
mov
int
icebp
inc
insl
add
clc
addr16
in
shl
inc
call
or
aam
sbb
lret
xchg
push
shl
xchg
jne
in
xchg
out
pop
pop
push
stc
leave
shrb
bound
jne
jg
in
dec
bound
cmc
mov
jp
icebp
in
jecxz
mov
pop
scas
xchg
mov
sbb
sbb
inc
ljmp
lods
pop
lods
cmc
sbb
push
stc
insb
add
inc
shlb
in
push
xchg
jbe
roll
icebp
repz
fisttpll
push
lds
bound
sarl
cmp
movsb
cmp
fs
out
pop
ss
pop
jae
dec
xchg
adc
jne
sbb
lahf
mov
icebp
pop
push
jo
and
add
dec
shrl
scas
aad
mov
jbe,pt
cltd
std
push
sti
popa
lret
andl
stc
xchg
xor
icebp
jl
inc
in
cmp
daa
jg
dec
dec
or
test
call
outsb
ja
jl
pop
add
pop
xor
mov
into
pop
push
or
dec
test
pop
jb
ss
shr
je
repz
test
cltd
repnz
jmp
into
cwtl
inc
fstpl
popf
mov
loope
pop
out
aaa
add
push
push
mov
lret
scas
pop
scas
dec
stc
mov
dec
jne
mov
arpl
mov
xchg
test
stos
mov
cs
dec
mov
int
push
out
js
shlb
gs
cmp
lret
cmpsb
mov
ret
bound
jno
loopne,pn
js
lds
lret
or
push
mov
insl
push
out
cltd
xchg
cltd
add
xor
ja
dec
scas
call
xor
aad
xlat
push
mov
push
jl
lods
rcrl
fstps
add
andl
mov
push
push
mov
cmp
aas
shrl
neg
push
pop
lods
mov
sub
xorl
mov
mov
dec
shll
jge
addr16
mov
xchg
cld
loope
gs
and
pop
shrb
gs
test
test
test
std
push
int
xchg
inc
out
jns
popa
push
test
xchg
je
into
lret
out
loope
add
test
adc
pop
jbe
ljmp
stc
dec
in
subb
mov
incb
out
imul
and
add
lods
push
aaa
add
ja
fstpl
loope
les
shrl
notb
fcmovb
mov
cmp
fidivrl
sti
test
lds
ret
lret
inc
cmp
or
add
mov
dec
xor
mov
jbe
adc
mov
push
ja
in
out
mov
loope
sbb
aad
cmpsb
out
add
sub
pushf
insb
outsb
push
dec
out
call
or
imul
ljmp
shll
int
scas
mov
test
scas
mov
adc
pop
cmc
out
testb
mov
sbb
icebp
enter
fstl
test
push
cmp
adc
pop
jmp
icebp
jbe
xorb
or
shl
sarl
pop
in
or
insl
les
cmp
cmc
jns,pt
pop
fwait
stos
shrb
insl
lods
icebp
mov
push
ret
vpaddusw
insl
jecxz
hlt
jbe
in
shll
cmc
arpl
jne
ret
xor
push
adc
push
stos
cli
xchg
fucomi
test
mov
cld
xchg
sbb
adc
jb
push
push
sbbl
or
imul
movsb
jno
sbb
test
call
xlat
leave
inc
jp
xchg
lds
shll
mov
sub
scas
cmp
loop
hlt
or
push
sub
out
mov
xor
fwait
mov
and
jnp
cmp
xchg
fxch
sbb
pop
xchg
rorl
sbb
icebp
or
add
rcl
lock
test
das
xchg
into
and
iret
cli
scas
shl
inc
dec
xor
adcb
int
imul
fidivl
or
cmc
addl
in
inc
in
inc
adc
fwait
fwait
mov
scas
pop
les
std
and
lock
std
jno
loope
inc
add
sti
xor
mov
mov
fstps
arpl
out
outsl
jno
int
icebp
or
mov
lahf
mov
xchg
cli
add
dec
outsb
enter
int
push
loopne
sbb
push
mov
mov
in
cwtl
call
mov
out
std
pop
shrb
ss
add
mov
dec
xlat
movsl
inc
sbb
shll
push
cld
jecxz
cld
rorl
add
mov
hlt
inc
mov
mov
mov
imulb
les
js
out
in
mov
lret
insb
into
imul
adc
sti
rcl
loop
ljmp
scas
xor
aaa
cmp
pop
shr
ljmp
pushf
cmp
or
fistpl
push
xlat
call
icebp
pop
shrl
fdivr
jne
gs
sub
mov
xor
clc
sbb
pop
icebp
or
movsb
or
mov
shrl
jne
fmuls
jp
loop
test
stos
popa
data16
cmp
mov
ja
sbb
push
jmp
das
ficomps
out
aam
insl
pop
fmuls
sbb
imul
loope
mov
movsl
or
fisubrl
int3
push
hlt
sbb
or
adcl
xchg
jecxz
mov
mov
js
test
fucomi
std
xor
cli
insl
or
sbb
cwtl
jnp
into
iret
pop
xchg
lods
ljmp
or
pop
ljmp
scas
cmpsl
lcall
call
and
loope
push
popf
repz
add
leave
leave
jle
or
inc
out
pop
imul
dec
jmp
mov
addl
fiadds
out
stos
scas
mov
ss
jg
sti
xor
ljmp
sbb
lock
jmp
roll
mov
lcall
mov
pop
ds
add
popf
out
sti
push
movsb
sbb
lods
icebp
sbb
pushf
cmp
mov
jmp
sub
pop
data16
or
frstor
mov
xchg
movsl
test
mov
lahf
cmp
xor
std
enter
lods
mov
int
call
cwtl
out
inc
testb
push
je
mov
loope
je
mov
mov
jmp
jle
mov
icebp
hlt
and
fildl
lock
loope
arpl
xchg
push
div
dec
sub
lcall
mov
fsubp
mov
repz
in
outsl
popa
test
outsb
cmp
inc
insl
jbe
dec
js
ja
sahf
rcrl
pop
jo
ret
xchg
mov
push
xlat
cwtl
mov
push
lcall
cli
lods
cld
pop
and
pop
or
dec
dec
mov
movsb
inc
lcall
mov
xlat
test
jmp
cmpsl
pop
mov
xchg
add
xchg
sbb
add
sub
pop
cmp
lea
xor
xchg
cs
jge
cmpsl
sub
in
data16
adc
push
pop
out
js
xor
lret
or
push
mov
push
gs
icebp
cmp
sub
adc
out
inc
cli
push
or
xchg
negb
inc
sbb
push
pop
test
sub
mov
cmp
shl
inc
ds
movsb
aas
mov
xor
cwtl
leave
call
aaa
xchg
stc
cmpsl
sbb
dec
in
das
lea
mov
movsb
cli
js
cmp
mov
clc
xor
call
fnsave
je
shl
int3
jno
scas
loope
movsl
nop
add
fstps
pop
cmpsl
sbb
fwait
aaa
js
pop
mov
mov
enter
xor
pop
dec
sti
outsb
mov
add
dec
lea
or
hlt
or
imull
aas
jno
ficomps
daa
std
insl
cmp
lcall
ss
cld
int3
clc
ja
rcll
mov
cld
mov
cmp
addr16
push
fwait
test
jmp
mov
xor
lret
outsl
scas
ljmp
movl
xor
shlb
and
push
jae
out
cmp
fdivs
push
in
hlt
dec
mov
shrl
mov
and
dec
pop
test
roll
dec
daa
dec
jbe
push
adc
sub
xor
ss
ljmp
pushf
rcll
xlat
addr16
mov
lods
aaa
xchg
adc
data16
push
jno
cmp
or
insl
pmaddwd
aaa
movb
or
dec
insl
pop
mov
pop
pop
pop
das
iret
push
aam
imul
push
insl
shl
movsl
popa
push
or
or
push
outsb
pop
in
les
aas
pop
cmc
addl
hlt
mov
xor
enter
push
cmp
sbb
test
ja
scas
push
push
sub
rcrl
cld
dec
shll
or
jns
cld
cmp
in
in
call
ret
jmp
jl
pop
in
mov
lcallw
idivb
jbe
pusha
xchg
sbb
mov
loopne
or
les
cld
jmp
pop
insl
fbstp
mov
cs
scas
xor
mov
inc
lods
icebp
scas
out
std
push
xor
test
xchg
mull
subb
in
or
pop
icebp
push
and
cli
or
inc
fs
jbe
out
dec
les
int
lods
ljmp
nop
push
or
int
fsubr
dec
jmp
mull
sub
dec
or
adc
and
iret
icebp
int
mov
add
ret
loopne
fwait
dec
mov
iret
xchg
add
sub
sti
add
or
shll
sti
stos
xlat
inc
mov
repnz
cmpsb
cld
dec
rcrl
jecxz
mov
pop
xchg
mov
xor
or
pop
scas
mov
inc
cld
hlt
jnp
mov
sbb
push
jmp
fsubrp
js
icebp
jnp
jg
jmp
and
pop
fldl
push
sbb
fstpl
aam
shrl
pop
leave
add
les
and
and
mov
mov
cmp
push
cmpsb
rcl
and
daa
lods
mov
xchg
out
sub
rorl
aas
inc
lret
shrl
int
push
nop
icebp
out
out
loope
jb
scas
cmp
cmpsl
mov
movsbl
enter
ret
mov
xchg
in
push
je
cmp
mov
push
mov
and
sub
cmpl
in
jnp
push
dec
xchg
dec
in
fisubrs
jne
push
dec
add
jo
stc
gs
sub
out
and
mov
es
add
je
rclb
cmp
fisttpll
dec
pop
mov
ffreep
mov
add
cltd
push
mov
mov
mov
iret
ja
jge
inc
in
rorb
mov
push
inc
test
and
ss
mov
mov
mov
arpl
fsubl
lods
sub
movsl
fucom
jb
xor
sub
or
mov
jbe
aas
icebp
test
push
out
out
icebp
mov
iret
dec
int3
sub
out
ret
lds
arpl
dec
or
xchg
fs
xor
out
mov
pushf
in
loope
pop
jnp
clc
cli
enter
sub
jmp
test
xchg
out
rol
sbb
mov
sbbb
test
push
and
sahf
mov
shrb
pop
jo
mov
add
mov
inc
jle
jno
jns
mov
movsbl
or
mov
xchg
loop
cli
mov
mov
ljmp
pop
jnp
and
mov
xorb
push
lret
sbb
cmc
or
loop
or
aaa
in
rorl
push
lret
jmp
push
mov
pop
outsb
mov
das
jge
sbb
rorl
movsb
out
loope
dec
mov
icebp
mov
xchg
xchg
movsb
roll
movsl
cmp
adc
push
ljmp
sbb
je
test
xor
icebp
xchg
std
push
or
sti
or
xchg
mov
lds
lret
hlt
mov
push
inc
push
ss
loop
xor
add
hlt
jbe
push
jmp
pop
in
adc
xlat
rorl
jp
and
xor
subl
sub
jnp
mov
pop
popa
bnd
dec
into
cmp
lcall
int
sbb
or
mov
ljmp
popf
std
leave
data16
sbb
shl
and
sbb
push
pop
mov
orb
adc
xchg
sub
dec
aad
add
ds
orl
mov
jo
bound
push
das
or
cmp
repnz
dec
dec
lret
iret
adc
dec
pop
jns
jno
mov
pushf
mov
das
pop
scas
loope
or
into
scas
mov
dec
lods
iret
sbb
adc
fdivr
jmp
loope
sbb
sub
mov
pop
mov
cmp
ret
jnp
jne
mov
mov
inc
mov
add
mov
fstpt
lea
and
icebp
jge
add
insb
or
notl
js
shll
inc
mov
lods
xor
jmp
inc
cmc
push
fs
mov
fwait
cmp
div
push
std
rclb
sbbb
int3
xor
das
xor
test
or
fstpl
out
push
push
in
test
mov
mov
mov
test
pop
jbe
and
ljmp
push
jge
sbb
shl
inc
aas
push
xorl
int
ret
psubd
inc
loope
dec
dec
incl
mov
pop
mov
cmc
es
leave
out
gs
cmp
pop
aam
mov
jmp
push
push
invd
fimuls
cltd
std
inc
mov
cld
int3
icebp
sbb
xor
push
xchg
repnz
les
out
in
repnz
in
inc
cmp
std
cwtl
les
sub
or
dec
out
popf
sub
adc
inc
pop
les
mov
out
cmc
xchg
pop
mov
dec
imull
sbbl
test
imul
mov
mulb
push
sbb
xlat
daa
dec
out
sub
or
jle
sarb
pop
or
xchg
ret
sub
inc
pop
cltd
and
or
mov
fs
arpl
mov
and
pop
mov
jns
mov
into
pop
imul
sub
cwtl
and
data16
pop
fs
adc
xchg
test
mov
adc
stos
and
and
dec
in
scas
jbe
icebp
stos
jne
xor
int
idivl
pop
fldenv
inc
dec
ret
adc
push
into
cmp
or
mov
fs
arpl
sbb
pop
stos
pusha
inc
gs
test
jns
jmp
dec
inc
addl
mov
nop
idivb
and
mov
inc
push
jne
rorl
imul
cmp
xchg
or
jmp
mov
mov
pop
dec
and
outsl
add
test
out
jmp
js
inc
call
das
mov
scas
dec
sbb
mov
ds
int
js
sub
test
fidivl
inc
jp
jl
clc
cmp
or
mov
shll
pop
sti
dec
sahf
add
into
add
rorl
push
sub
dec
jb
aam
sub
and
push
xchg
ss
inc
push
push
add
add
ret
popf
xchg
jo
ret
loop
or
lea
mov
add
lcall
fsubrs
loope
rcr
fisttpll
xchg
mov
mov
pop
dec
insb
aad
mov
sbb
inc
mov
push
mov
in
mov
in
jle
aam
jo
aaa
and
frstor
insl
mov
pop
pushf
inc
into
int3
or
mov
lea
and
sbb
mov
push
cmp
in
fwait
in
xchg
jl
jb
and
push
rcrl
cmc
sub
ljmp
inc
pminsw
mov
cmp
inc
dec
stc
pop
adc
int3
les
push
add
add
cmp
roll
sbb
stos
mov
cli
std
or
insb
xchg
insl
cs
pop
in
mov
dec
mov
scas
data16
stc
inc
jbe
sbbl
jnp
lea
sub
add
stc
sarl
movsb
aad
pop
stc
push
popf
insb
testl
cmpsb
jle
scas
sbb
push
clc
inc
pop
mov
shrl
cs
sbb
fistpl
xor
divb
mov
sbb
jnp
xor
rcll
je
das
dec
pop
notl
jo
outsl
addr16
jno
add
mov
pop
sbb
das
cmp
mov
or
sbb
ret
imul
imul
pop
sarb
pop
lret
rcll
outsb
push
sbb
xchg
jecxz
leave
scas
rcll
lods
sahf
mov
adc
pop
sbb
inc
push
lahf
hlt
push
cmc
imull
icebp
and
lahf
push
mov
leave
int
pop
subl
pop
xchg
dec
popf
add
in
icebp
addl
aaa
loopne
shll
lods
push
fcmovb
ficomps
rcrl
shll
stos
push
add
mov
or
cmpsl
outsb
pop
stc
or
xchg
cmc
outsb
test
mov
test
and
insl
shrl
sti
mov
call
dec
or
dec
xchg
jns
movsl
lods
in
in
push
cld
jecxz
dec
jge
fcomi
int3
sbbb
ljmp
xchg
and
cld
mov
inc
mul
repz
mov
rorb
jbe
das
xchg
inc
xor
sub
inc
xorl
imul
test
mov
push
std
cmp
test
mov
lcall
jge
out
test
adc
pop
js
sub
shl
or
mov
cltd
push
icebp
and
xchg
xchg
out
in
test
sub
rcrb
repnz
inc
sub
push
push
ret
movsl
dec
out
jnp
cmp
or
jbe
incl
dec
inc
imul
loop
fiaddl
icebp
cmpsw
out
out
or
idivl
mov
push
jp
movsl
cmp
movsb
cmc
pop
std
and
add
cmp
xchg
popa
cmc
cmpsb
insl
loop
mov
icebp
je
fcompl
cli
or
roll
sub
sbb
mov
mov
mov
enter
mov
idivb
pop
lock
sbb
subb
cltd
mov
pop
jne
jecxz
imul
divl
loope
xchg
scas
lahf
cwtl
sub
addl
or
push
pushf
fisttps
fisubrl
add
outsb
xchg
xchg
scas
add
fmull
cwtl
mov
pop
sub
outsl
out
icebp
call
ret
into
inc
pop
mov
jmp
aam
fnstcw
jnp
sbbb
out
dec
int
cwtl
mov
subb
loopne
pop
std
mov
mov
jecxz
jg
movsb
mov
mov
mov
scas
mov
cmp
cli
mov
mov
mov
or
push
sti
mov
pop
adc
nop
sarl
xchg
inc
and
mov
sahf
call
sbb
sub
sub
in
push
insl
adc
inc
ja
fwait
stos
sub
fs
int3
pop
xor
out
stc
push
movsl
in
sbb
sbb
mov
sti
mov
in
cli
outsl
mov
fimuls
mov
dec
pop
mov
les
pop
data16
mov
pop
test
sahf
icebp
movsb
inc
je
xlat
test
ljmp
int3
int
and
push
loope
popf
test
cli
lret
mov
fwait
shlb
and
or
fnsave
fisttpl
pushl
cmpl
mov
pop
ljmp
scas
scas
mov
mov
inc
xchg
ljmp
rcll
xor
xchg
sbb
sahf
mov
jae
inc
cmp
gs
shrl
jae
sarl
les
inc
shl
xor
jp
dec
lahf
les
fsincos
xchg
sbb
sbb
jns
addr16
jecxz
cmp
mov
fs
fcmovb
jle
ja
xor
imul
add
mov
ljmp
pop
mov
mov
std
jnp
or
out
xchg
bound
stos
in
out
in
inc
cmp
jae
fistpl
jecxz
inc
and
aad
in
push
test
inc
or
sti
test
pusha
xor
sbb
imul
sbb
cld
and
pop
sub
loopne
sub
jno
jb
mov
into
jo
mul
rorl
stos
mov
lea
in
mov
stos
icebp
xor
push
inc
xchg
xor
lcall
mov
jb
imul
sbb
popf
sbb
movsl
mov
fcomip
inc
mov
cmpsb
loopne
push
arpl
mov
pop
in
icebp
ja
fcomps
pushf
outsl
dec
jle
testl
dec
xorb
mov
cmp
or
mov
dec
in
sub
icebp
sbb
lds
mov
iret
clc
cmp
loope
cmpl
inc
mov
cmp
icebp
lds
add
shlb
inc
and
fidivrl
jb
pop
insl
xchg
mov
addr16
jnp
icebp
and
ljmp
stos
sbb
insl
loop
sbb
mov
mov
adc
loop
cmp
sub
and
leave
dec
test
push
mov
lret
out
nop
adc
mov
js
gs
out
aad
aam
lea
clc
lods
imul
btc
icebp
mov
test
test
add
mov
subl
and
fistpl
int
push
and
cs
dec
aad
fs
and
in
sub
xor
std
int
cmpsl
ret
loopne
xor
out
sbb
cmpsl
adc
mull
sbb
jecxz
and
sbb
lahf
jp
lods
ds
lea
outsb
pop
dec
sub
ret
jns
movsl
nop
xchg
add
aaa
and
sahf
inc
insl
sbb
jle
push
loope
fadd
inc
ja
test
scas
rcl
dec
or
pop
sahf
xor
pop
xor
lds
rorl
out
ds
add
cli
jns
testl
dec
jmp
jae
enter
das
jp
xor
mov
inc
cwtl
jmp
adc
pop
mov
loopne
sbb
int
dec
jnp
sbb
mov
lea
aam
icebp
dec
sbb
imul
pop
addr16
jno
jo
mov
test
push
rorl
sbb
adc
pop
arpl
pop
cmp
add
cwtl
jg
mov
mov
mov
testb
hlt
sbb
mov
ficomps
mov
and
shll
adc
push
aam
pop
fisubs
xchg
test
adc
pop
mul
mov
push
test
icebp
test
mov
movsb
xor
mov
cmp
xor
loop
dec
in
cld
push
insl
xor
sbb
jecxz
push
mov
mov
jb
pop
or
and
ljmp
shlb
dec
in
in
and
dec
in
int
lret
outsb
shll
cmp
xor
xlat
and
sahf
lods
insl
ss
sti
fidivrs
xchg
stc
adc
cmp
in
stc
or
loop
jbe
insb
shl
test
sahf
cmc
jnp
and
js
imul
adc
cmpsb
jmp
dec
mov
xchg
or
jmp
xchg
call
sbb
mov
outsb
scas
das
je
shll
cli
not
scas
pop
add
sbb
push
ret
js
dec
fwait
xchg
loop
into
push
cmovae
icebp
inc
pop
push
jmp
ss
cmpsb
push
mov
pop
dec
data16
enter
loop
pushf
dec
shll
fstl
mov
pusha
call
pop
ljmp
rcll
je
sti
mov
pop
fstl
xor
cmp
popf
mov
outsl
jnp
adc
xlat
or
pop
xor
adc
mov
icebp
mov
fcoms
insb
std
loope
fisttpl
xchg
imul
subb
pop
push
xchg
xchg
push
xor
loop
ficompl
negl
ret
leave
push
icebp
ds
ret
rorl
add
lcall
cmp
lcall
mov
cmp
push
mov
loope
mov
dec
stc
in
mov
add
fcmovu
das
imul
dec
and
mov
mov
dec
shll
jnp
jb
push
mov
pop
push
mov
xor
mov
jno
ljmp
cltd
pop
fwait
aam
push
mov
and
push
scas
call
lret
arpl
sbb
jb
enter
jnp
dec
rorb
mov
jb
adc
icebp
xor
pop
and
rorl
jo
mov
add
mov
inc
jns
outsl
daa
inc
add
fdivl
mov
and
aas
rcrl
popf
pop
mov
mov
pop
movsb
leave
mov
icebp
push
stos
into
loope
test
insl
lret
cwtl
sbb
ret
push
ret
pusha
lds
xor
sbb
aad
aaa
mov
mov
pop
iretw
pop
mov
aaa
aad
adc
and
lods
and
enter
rorl
shlb
sub
std
mov
lea
push
jae
int
sarl
cmp
mov
jge
stos
rorl
mov
dec
cmpsb
mov
and
subb
test
loop
fadds
lods
popf
mov
aaa
shlb
enter
ret
les
inc
inc
mov
inc
jmp
es
jnp
aam
sbb
sbb
jecxz
notb
push
xchg
loop
add
gs
or
mov
jecxz
and
inc
icebp
push
jg
cmp
jnp
mov
lahf
dec
addr16
roll
and
call
lods
dec
dec
test
insb
outsl
adc
lea
fdivr
in
mov
sbb
daa
ficoms
mov
loop
lea
inc
cmp
mov
xchg
adc
mov
mov
sub
and
xchg
or
mov
cmp
xor
fbld
loope
sbb
jmp
dec
xor
nop
sbb
shll
fucomp
repnz
sub
mov
sarb
jnp
adc
xchg
push
pop
mov
les
cli
sbb
cmp
inc
pop
das
out
loope
push
cmp
jnp
shll
sbb
xlat
cwtl
mov
add
scas
out
sub
push
and
in
shrb
pop
cmpl
ljmp
sahf
jg
mov
js
mov
adc
icebp
dec
mov
push
jge
in
out
cld
outsb
aam
adc
mov
pop
inc
sub
int
std
fs
mov
lock
int
xchg
xor
add
js
rcll
in
andl
push
mov
ret
mov
jmp
popf
out
or
pop
lods
jns
test
or
inc
ja
xchg
test
or
not
xor
dec
sub
dec
rcrb
cmc
lock
add
sbbl
adc
aaa
sbb
mov
test
xchg
add
pushf
xchg
icebp
ljmp
mov
xlat
pop
cld
std
sub
loop
daa
fucomp
jae
sarb
movl
xchg
mov
lahf
mov
int3
or
jbe
shll
adc
dec
add
and
and
push
sahf
rcr
cmp
out
bound
mov
adc
sbb
pop
inc
mov
sbb
dec
shlb
xor
dec
pop
mov
inc
push
dec
pop
cmp
xor
aaa
ljmp
scas
das
shr
stc
inc
inc
popa
int
jnp
fdivr
fnsave
cld
pop
es
ljmp
rolb
or
ljmp
cmpsl
push
lods
dec
ljmp
pop
jbe
jl
pop
jo
rorl
and
rorl
mov
cmc
xchg
lret
scas
push
and
add
lods
test
loop
fwait
mul
or
mov
out
sbb
mov
rep
inc
add
ss
es
popl
aas
adc
out
call
lds
dec
mov
jno
xchg
jge
adc
mov
xor
sub
or
mov
cmp
idivb
movsl
inc
ja
ficoms
andb
push
ja
inc
cmp
pop
or
xor
test
mov
xlat
add
mov
xor
fiaddl
fidivrl
xor
or
popf
ja
int3
push
cmp
loope
sahf
mov
cmp
sahf
or
clc
xchg
dec
sbb
xor
lcall
sub
dec
dec
mov
lea
jmp
loop
mov
test
ljmp
aam
rcrl
int
add
mov
fs
sub
dec
mov
mov
cld
inc
cltd
mov
lcall
lds
repnz
sbb
outsl
outsb
jge
xchg
fdivs
dec
test
add
ja
push
mov
xor
or
iret
pop
loop
loop
adc
jecxz
loope
pop
xor
jnp
push
insb
pop
mov
addr16
dec
loop
jp
faddl
jno,pn
mov
rcl
int
lcall
or
fcompl
scas
popf
or
rorl
mov
stos
dec
sbb
pushl
in
icebp
aas
pop
jmp
hlt
inc
push
mov
mov
jnp
pop
cli
cmpsl
aam
scas
fisttps
scas
inc
pop
int3
cmp
add
and
mov
scas
enter
cmpl
mov
xor
call
ret
mov
dec
in
mov
in
ror
in
outsl
sub
mov
xchg
and
jns
andb
sbb
cmp
das
loope
pop
push
movsb
and
and
loopne
in
addl
addr16
mov
cld
mov
ret
mov
decb
loope
rcll
fnstcw
sbb
int
jo
outsl
push
das
inc
push
add
jle
jb
shrl
loop
testb
sarb
fwait
mov
in
loopne
cmp
lret
sub
sub
or
sti
fnstcw
int
bound
test
dec
ret
addb
inc
push
ja
cmc
jle,pt
imulb
es
mov
jb
jge
mov
and
sub
sub
aaa
jno
inc
push
leave
lcall
lds
rcrb
cltd
sbb
aam
mov
cmp
mov
lahf
stos
jbe
popf
orb
bound
dec
dec
xchg
cmc
cwtl
ror
lcall
jp,pt
ljmp
divl
pushf
movsb
sti
push
add
inc
pop
mov
adc
adc
int3
enter
rclb
enter
outsb
fwait
pushl
pusha
cmc
mov
xor
jp
pop
cmc
fdiv
nop
in
mov
mov
or
or
dec
add
sbb
cmpsl
or
mov
or
aas
cmpsb
push
out
out
movsb
add
ror
mov
adc
in
mov
mov
cmp
mov
test
xor
or
ja
shll
push
in
test
ficomps
test
pop
xor
daa
xor
dec
jne
pop
inc
cmpsb
imul
xchg
dec
fisubs
out
ss
cltd
and
lock
jp
rcl
andl
sbb
rcrl
imul
or
pop
jne
loop
xlat
pop
pop
out
call
sbb
jb
and
ds
mov
pusha
jmp
xchg
iret
xlat
or
jno
aaa
test
inc
insl
mov
jmp
testb
xchg
data16
ja
mov
jo
xor
shl
mov
andl
add
sbb
std
inc
push
inc
mov
or
jnp
roll
shrl
and
pop
insl
loopne
rol
and
add
mov
shll
ljmp
sbb
icebp
into
loope
scas
lea
shrl
mov
lock
xchg
aad
add
add
popf
cli
insl
icebp
clc
xor
aaa
push
shlb
aas
mov
rcrl
and
dec
lods
outsl
insl
dec
dec
loop
inc
dec
inc
xor
push
pop
mov
in
pop
loop
enter
xchg
and
pop
sbb
stc
pop
push
int3
outsb
ds
and
ss
sbb
xchg
adc
outsb
in
push
mov
add
shl
jle
icebp
cmc
jmp
pushf
enter
xchg
aas
xlat
sbb
mov
jno
es
adc
clc
in
enter
into
and
push
mov
pushf
adc
cmp
loope
adc
test
mov
lock
adc
mov
sbb
fstp
loop
shrl
xchg
sti
paddsw
ljmp
pop
push
popf
lock
lea
dec
jbe
mov
in
pop
mov
insl
std
pop
gs
xor
mov
or
xchg
cmp
adc
cmp
push
jl
adcl
ret
sub
add
sbb
aad
leave
lods
xlat
subl
in
jp
shrl
stc
scas
push
ficompl
jl
cmp
das
int
and
add
and
leave
push
sub
leave
push
loope
dec
mov
lret
leave
sub
and
jmp
lods
and
out
ret
das
icebp
cmp
in
mov
sub
pop
rcrb
adc
mov
push
and
out
hlt
mov
mov
xchg
pop
jmp
into
roll
out
movsb
add
andl
or
ljmp
jmp
and
shrl
jmp
outsb
or
cld
aam
mov
or
cs
imul
jb
add
jp
pop
jge
in
mov
js
shr
cmpsl
sub
int
mov
out
loope
sub
adc
jae
outsb
es
mov
popf
xchg
push
pop
icebp
mov
out
leave
mov
call
xchg
jno
movsl
xchg
outsl
push
xchg
cmp
pop
pop
xor
cmpsb
adc
inc
fsubrl
fs
out
cld
sub
popf
jns
dec
sbb
mov
rep
cmpsl
aad
pop
jle
mov
daa
std
int3
fstl
mov
push
cmpsb
cmp
lds
cli
mov
inc
jns
add
test
mov
mov
cmp
scas
adc
pushf
pop
fimuls
dec
add
dec
mov
ljmp
iret
and
mov
scas
sahf
stos
roll
sti
add
mov
xchg
jmp
subb
mov
sar
mov
mov
sub
push
rorl
cmp
das
cli
cs
outsb
push
mov
icebp
fwait
into
cld
ss
inc
sbb
jg
cmpsb
icebp
or
jge
insb
ja
loope
imul
jo
or
sbb
mov
mov
mov
mov
fimull
leave
lea
in
sbb
adc
icebp
xchg
sub
add
test
popf
jmp
jge
mov
adc
adc
jg
xor
lahf
or
popf
ljmp
mov
icebp
push
cmp
cmp
mov
and
daa
inc
cmpsl
lret
xchg
jg
testl
pop
cwtl
pushf
stos
sahf
cs
xor
or
pop
int3
rcll
mov
xchg
jl
es
sbb
fsubl
jb
sub
idivl
push
jno
sbb
insb
scas
rcll
sbb
insl
andl
mov
out
imul
in
loope
ss
cmp
or
pop
icebp
divps
insb
mov
and
into
nop
pusha
add
mov
std
or
add
int
mov
cmpsl
lahf
dec
lea
jg
loope
pusha
sub
cmp
ja
cmp
jae
sbb
mov
and
mov
inc
inc
dec
sbb
clc
lds
loop
add
xlat
mov
xor
pop
pop
adc
sub
enter
inc
sbb
pop
lods
push
das
in
daa
rcll
decl
dec
pop
out
xlat
sub
inc
out
add
mov
mov
repz
sbb
jmp
mov
xor
aaa
cmp
dec
push
xchg
inc
xchg
shll
add
hlt
test
cltd
movsl
push
movsb
xor
outsb
mov
in
test
loopne
fnclex
push
shrl
jmp
sub
inc
pusha
inc
js
inc
cmp
fistps
mov
fucomp
leave
insb
sbb
mov
sahf
popa
stos
js
es
insl
xchg
sbb
xchg
add
sub
inc
add
aas
mov
jo
hlt
ja
dec
xor
sub
lcall
data16
repnz
shrl
fisttps
jne
nop
sbb
insl
es
mov
mov
jnp
rcl
add
xchg
mov
pop
fwait
and
jge
loope
pop
fcmovu
and
int3
nop
out
inc
es
fdivs
sti
mov
lret
sub
js
notl
jle
stos
push
add
stos
push
leave
cmc
fs
and
mov
inc
iret
stc
adcl
dec
or
xor
testb
pop
dec
xor
xchg
daa
push
fcmovne
xor
mov
xchg
push
xchg
cmpsb
rorb
std
imul
aaa
lea
add
insb
stc
push
aaa
stos
in
rclb
enter
xor
pusha
fnsave
aad
push
push
into
and
sub
aas
cld
loope
and
adc
inc
xor
ljmp
cmpb
and
popf
sahf
cmp
nop
mov
icebp
push
dec
scas
call
xlat
and
and
mov
popa
shrl
pop
scas
jae
pushf
ljmp
xlat
push
mov
sub
scas
sub
cli
mov
dec
icebp
call
xor
dec
sub
cmp
shll
out
jnp
orb
les
pop
mov
adc
mov
xchg
les
outsb
cmp
shlb
push
jle
repnz
add
sub
sarl
lods
mov
idivl
repz
mov
lahf
aam
test
push
dec
add
cmp
mov
jo
in
fcoms
adc
push
pushf
cmp
mov
clc
fnstsw
inc
dec
rorl
sbb
xor
jae
cld
mov
cmp
in
and
cmc
je
push
push
or
inc
loope
es
cld
mov
mulb
call
pop
loope
or
mov
dec
aaa
ds
lcall
or
push
fucom
sbb
ds
add
out
pop
mov
mov
int
lret
jbe
xor
xchg
int3
ret
scas
mov
and
jecxz
ss
outsl
ljmp
int
imul
sbb
mov
sub
shll
pop
in
bound
push
xlat
mov
bound
repnz
mov
or
mov
sbb
ljmp
mov
cld
lea
gs
or
mull
add
mov
enter
loope
das
ja
in
and
cs
out
bound
imul
in
rcrb
dec
in
jmp
icebp
stos
fs
das
jo
mov
call
movsl
pop
pop
int3
pushf
in
call
jge
jb
or
or
sbb
jnp
out
sbb
pop
movsl
add
mul
movsl
add
xchg
jge
xor
cld
or
icebp
pop
inc
dec
mov
nop
jg
mov
mov
rol
mov
mov
dec
incb
push
cmp
sub
cli
adc
jae
daa
xchg
push
jbe
inc
jmp
out
jle
shll
mov
sub
pop
hlt
or
dec
cmpsl
stc
lret
mov
fs
push
mov
sub
enter
leave
cli
mov
or
xchg
jge
sbb
movsl
and
aaa
and
popa
cmpsl
je
mov
jg
cmp
jae
dec
aaa
push
out
loope
pushf
repnz
xlat
sahf
hlt
mov
fstpl
pusha
inc
and
movsb
shrl
lret
mov
stos
push
push
test
addb
and
or
shll
cmpsl
mov
jge
mov
out
icebp
dec
rolb
mov
xchg
fwait
int
movsb
push
ds
adc
adc
das
jmp
icebp
call
jbe
mov
arpl
xchg
inc
xchg
lahf
mov
mov
test
lods
cmpsb
std
sub
sbb
aas
rol
mov
das
jge
cmp
mov
popf
test
imul
pop
mov
in
mov
jno
xchg
cli
jb
lods
stos
lds
nop
adc
ret
mov
push
sti
scas
les
into
scas
pop
xchg
dec
and
mov
ret
push
in
cmp
jns
cmpl
ja
fdivp
roll
bound
aad
ret
pop
into
rorl
mov
jl
dec
mov
sahf
icebp
cld
mov
data16
or
sbb
inc
push
lods
cmp
arpl
jge
jbe
testl
hlt
mov
int
mov
push
adcl
dec
outsb
loope
jle
scas
ja
dec
stos
jecxz
xor
pop
jo
lods
fdivr
fcmovu
clc
std
cmpsb
cmp
insb
imul
movsb
mov
cld
repz
xor
dec
mov
rolb
add
jnp
xchg
add
fildl
sbb
push
and
fldl
xor
shll
jnp
inc
xchg
rorb
push
outsl
sbb
mov
call
jg
enter
xchg
pop
decl
mov
jbe
sub
test
addr16
es
push
pusha
les
test
sub
out
ljmp
xor
mov
xchg
std
mov
and
outsb
rcrl
cmc
mov
push
outsb
rolb
pop
sahf
jb
xor
adc
out
in
std
loope
imul
sub
icebp
ja
adc
pop
or
mov
frstor
jl
pop
aam
movsl
test
ljmp
aaa
les
add
dec
leave
jnp
or
jmp
mov
jl
ljmp
loope
add
xchg
or
xchg
addr16
cmp
fs
xchg
rorb
out
scas
stos
xchg
cmp
testl
pop
and
fstpl
scas
fstl
jecxz
add
mov
pop
ret
outsb
and
icebp
mov
add
dec
xchg
loope
cmp
pop
add
pop
out
mov
clc
pushf
repz
cmp
add
adc
or
jo
or
cmpsb
rcr
in
lods
icebp
mov
xor
dec
scas
sti
out
imul
push
or
out
iret
sbb
in
call
xor
push
or
push
pop
xor
bound
in
movsl
xor
pop
das
pop
push
cli
mov
xchg
jbe
loop
loope
mov
dec
fsubrl
bound
push
nop
in
cli
push
sub
add
in
inc
les
push
fcom
call
movsl
xor
fsubp
xorl
dec
dec
mov
jo
sub
mov
ret
jl
negl
adc
sahf
xchg
test
out
loope
jle
xor
jnp
push
cmp
and
aam
jl
iret
sbb
shl
xorb
adc
mov
push
jmp
lea
xchg
popl
mov
mov
cmc
xchg
xchg
sbb
mov
fdivl
idivb
lea
outsl
std
sbb
outsl
cmp
sti
push
mov
repnz
push
cld
mov
dec
movb
into
shll
in
adc
shrl
stos
ljmp
or
fs
dec
adc
sub
popa
pop
sbbl
pop
mov
sub
rcll
repnz
cmp
movsl
fidivs
aad
mov
jbe
sbb
jb
push
int
lahf
lret
mov
roll
icebp
imul
rclb
push
adc
sub
aas
or
pop
dec
inc
out
in
cli
lods
xchg
push
sbb
xchg
inc
and
xor
xchg
push
mov
push
negb
dec
int
and
cmp
daa
shll
sbb
jge
repnz
insb
sbb
xor
xchg
ljmp
inc
sahf
mov
inc
mov
mov
sbbb
popf
mov
mov
repnz
pusha
lock
pop
cmpsb
push
incl
in
mov
or
xchg
xchg
negb
ds
or
test
inc
fisubs
imul
push
mov
mov
push
cmp
push
movsl
fldt
out
cmp
cltd
test
das
mov
mov
mov
mov
iret
mov
jo
fsubp
lahf
loop
inc
inc
xchg
icebp
roll
outsb
ret
xchg
xchg
out
loope
push
mov
and
mov
icebp
into
mov
xchg
sub
mov
leave
jnp
xor
dec
sub
mov
mov
int3
out
aaa
add
sub
jmp
icebp
test
dec
mov
ljmp
sar
in
sbb
mov
add
out
jle
int3
leave
int
add
inc
mov
add
ss
adc
add
push
xlat
rol
out
dec
mul
xor
fs
cli
loope
jnp
sub
xchg
jle
pop
mov
test
add
fwait
aaa
mov
adc
add
cmp
mov
inc
dec
add
das
insl
and
pop
pop
cmp
mov
add
stos
sub
loopne
jmp
in
add
cs
test
mov
das
leave
sarb
stc
arpl
jl
sbb
ret
dec
xlat
in
jnp
cmp
movsb
fldl
xchg
loope
lods
jno
ss
and
call
push
inc
popa
sbb
mov
sbb
icebp
sub
lock
cld
cli
and
loop
mov
cld
mov
xchg
jne
adc
or
and
mov
fsubrl
out
pop
fsub
test
cmp
inc
cmp
cmp
aad
imul
xor
lods
lods
dec
les
cmp
int
aam
orl
movsl
cmp
insl
fwait
ret
mov
pop
out
icebp
nop
andl
or
jg
jnp
xchg
je
movsb
add
xchg
lods
testl
shr
sbb
daa
push
jp
iret
fimuls
cmp
inc
push
jg
hlt
loope
pop
cmp
xchg
mov
movsb
and
xlat
mov
add
xchg
loope
roll
aaa
and
aad
mov
or
cmp
add
lods
cltd
fldl
fcomip
cmpb
push
inc
cmp
push
into
sub
cmp
mov
push
or
lret
aad
in
xchg
ret
pop
pop
xlat
aas
into
test
jg
jg,pt
mov
fnstsw
stos
dec
cwtl
in
mov
arpl
movb
xchg
mov
pop
rcr
mov
pop
out
dec
jmp
mov
push
lds
mov
scas
out
outsl
loope
and
xor
daa
jle
pop
fmul
push
mov
enter
addl
dec
sbb
add
push
aas
mov
add
pop
clc
rcr
lock
xchg
sbb
in
jecxz
push
add
pop
mov
inc
inc
mov
adc
int3
sbb
xor
imul
popf
loope
ds
sub
or
add
daa
test
or
arpl
jecxz
testl
jo
decb
mov
mov
pop
or
xor
jmp
dec
mov
loopne
cmp
adc
sbb
std
in
mov
mov
inc
mov
push
jmp
add
sub
pop
xor
cmpsl
data16
dec
into
rol
bound
or
xor
imull
sahf
insl
pop
dec
loop
jne
add
test
add
ss
pop
sub
mov
fisttpl
notl
sti
adc
push
mov
call
roll
pop
adcb
lea
adcb
aad
inc
xchg
and
dec
push
ficompl
dec
data16
pop
ret
test
jecxz
cld
xchg
push
xchg
cld
xor
or
hlt
lods
shrb
pop
jb
lds
add
insb
inc
adc
imul
insb
sbb
movsl
cwtl
in
outsl
dec
in
mov
adc
sbb
cwtl
data16
fsts
or
in
fsubl
enter
add
push
int
icebp
mov
push
loop
pop
cmp
iret
jp
out
xor
dec
jo
mov
adc
loope
mov
sub
leave
xor
test
in
inc
imull
inc
fcompl
int
add
push
mov
in
mov
sbb
and
xlat
xor
cmp
mov
fsubrl
add
and
std
fistps
jnp
ret
jl
jmp
insb
cmc
movsb
inc
int3
or
movsl
mov
and
dec
scas
in
or
lret
out
frstor
xchg
rcll
call
pusha
sete
imul
movsb
jns
movsb
fsubp
icebp
adc
mov
jmp
sbb
mov
out
out
lods
pusha
hlt
outsl
add
movsb
cltd
inc
jmp
pop
push
mov
pop
or
add
outsl
mov
cli
xchg
fimull
inc
push
les
jae
lds
adc
loop
mov
cld
push
sti
fstpl
mov
movsl
mov
xor
sub
xor
mov
rol
mov
jno
xchg
fdivrs
aam
aad
mov
mov
mov
iret
test
pop
scas
cmp
icebp
ficomps
aad
adc
inc
inc
ret
dec
mov
mov
inc
enter
dec
ret
mov
fnstcw
push
cmp
loope
mov
mov
xchg
xchg
mov
sbb
inc
mov
pop
loop
shl
imul
mov
xchg
in
fnsetpm(287
js
mov
test
cmpsb
jbe
les
mov
int3
pusha
cmp
call
adcl
sahf
mov
sar
cmpb
mov
rorl
in
pop
mov
mov
and
and
data16
int
mov
cld
inc
shll
push
dec
lret
aad
fmull
jnp
pop
loop
pusha
pop
subl
lods
pop
xchg
mov
push
push
pop
fstpl
sti
dec
and
adc
push
mov
mov
test
leave
jne
jmp
imul
and
jbe
jnp
cltd
rolb
and
popa
stc
out
js
xor
cmp
std
ret
addl
sbb
or
add
outsb
loope
cmp
cmc
js
inc
cwtl
xchg
adc
pop
add
jp
testl
dec
test
shll
jl
lea
jne
bts
aam
jge
jmp
in
incl
dec
jne
mov
add
cmp
fmul
bound
std
mov
xchg
dec
add
and
out
pop
cmpsl
jns
jno
pop
jne
jbe
repz
shll
sarl
and
jns
jb
ljmp
mov
repnz
jp
jmp
test
push
and
dec
sbb
mull
pop
loope
aam
iret
push
icebp
cmp
adc
jle
or
into
lds
ljmp
cmpsb
and
bound
push
pop
push
mov
out
bts
movsb
out
fnstsw
and
or
into
test
jmp
mov
pop
loopne
and
icebp
gs
fst
dec
push
fcoml
loop
jnp
add
pop
xchg
adc
in
sti
push
fimull
gs
jmp
sub
or
xchg
xor
in
fucomp
mov
pop
xor
xlat
iret
or
shll
jbe
xchg
incb
aad
jno
lret
lods
fisttpll
addr16
movsb
push
pop
sub
imul
imul
lcall
push
adc
iret
or
loop
in
das
ret
andl
lret
lcall
and
out
inc
sub
xorl
sub
lock
mov
addl
icebp
sub
cmp
xchg
push
pop
xor
and
bound
icebp
sub
sbb
cmp
movsb
daa
and
mov
into
icebp
arpl
subl
rcll
fdiv
das
add
jl
das
cmpsb
sub
sub
in
dec
mov
int3
icebp
decb
loope
movsl
fidivrl
ja
sbb
push
hlt
fcmovnb
or
into
cmp
pop
jl
clc
cmpsb
add
jg
xchg
pop
push
cmp
jbe
cs
cld
shrl
insb
push
or
std
dec
in
das
pop
or
jae
outsb
adc
or
js
iret
sti
sub
jns
adc
lock
fldcw
test
aad
scas
sub
sub
mov
std
cmp
inc
mov
jb
cmp
int
ss
jae
sub
es
scas
loop
mov
push
or
sub
out
loope
ret
pop
in
pop
pop
data16
xor
sti
loopne
cmp
pusha
lea
imul
filds
gs
fmull
mov
jb
gs
ljmp
sbb
lds
mulb
add
xorb
dec
nop
out
loope
sbb
stc
into
or
mov
jb
xor
pusha
add
das
dec
imul
push
aam
jne
loope
das
jb
into
scas
mov
xchg
out
lcall
dec
xor
clc
or
icebp
aad
fs
inc
cmpsb
push
mov
out
insl
inc
in
bswap
lods
dec
mov
mov
repnz
mov
fdivrl
test
lods
jo
out
cmp
loope
sub
pop
fnstsw
lcall
jo
mov
sbb
bound
rorb
xor
dec
lds
aam
jle
pop
jmp
adc
sahf
in
push
jecxz
shl
inc
inc
lahf
push
in
xchg
das
xchg
bound
loop
cmp
or
out
sub
insb
and
cltd
in
loopne
cmpsb
xor
les
in
ja
sbb
jbe
mov
fwait
sti
jae
ss
fs
aam
and
mov
inc
lret
jnp
idivl
into
pop
cmp
pop
push
pop
or
js
lret
fsubl
push
testl
fildll
add
stc
lods
sahf
cmp
movsb
mov
aam
shrl
dec
shl
jno
aad
push
mov
pop
aas
or
popa
push
lret
movsb
cmp
in
pushf
mov
cmp
xchg
dec
subl
aaa
cmp
jno
bound
cmp
xor
mulb
loope
pop
dec
dec
dec
jnp
iret
dec
icebp
cmpsb
rolb
cmp
jnp
mov
nop
xorl
pop
cmp
or
addl
mov
lcall
push
sub
push
inc
push
and
pusha
fdivp
testl
dec
pushf
clc
mov
jecxz
mov
dec
sbb
das
cmc
mov
mov
fsubp
cwtl
sbb
mov
repz
push
mov
fmull
dec
testl
push
jno
mov
mov
popf
mov
shrb
test
bound
sarb
out
aas
xchg
mov
lret
cli
xchg
push
orl
mov
xchg
sbb
cli
mov
ds
mov
add
cld
push
loope
mov
push
lret
vshufps
ror
push
fisttps
xor
lds
jns
loopne
and
aas
mov
pop
out
loope
dec
lahf
mov
add
lea
jecxz
mov
mov
jbe
inc
or
xchg
cmp
rorl
iret
push
sub
mov
stos
bound
cld
adc
xchg
xlat
pop
add
je
mov
lds
loope
jo
aaa
rorl
jno,pt
popf
in
addr16
cwtl
scas
loope
inc
stos
inc
scas
mov
xor
pushf
jg
inc
shll
mov
jbe
xchg
mov
stc
rcrl
pop
test
addb
pop
ret
cli
dec
mov
lret
mov
fstps
xor
lret
ret
mov
ffreep
ds
jmp
push
cltd
cmp
mov
pop
insl
inc
lea
call
sarl
push
inc
cld
xchg
icebp
dec
jecxz
xor
roll
cmp
mov
jl
fwait
es
cmp
shll
vorpd
stos
jbe
lock
loope
js
rcrl
sbb
sti
sbb
sbb
mov
add
aas
push
mov
jle
js
scas
mov
pop
aas
mov
sbb
popf
sub
adc
pop
mov
pop
outsb
loopw
test
in
shrb
mov
mov
outsb
insb
mov
testb
xchg
dec
movsb
jmp
lock
icebp
or
insl
mov
xlat
mov
out
xchg
in
std
add
loope
in
mov
sbb
je
push
les
rcl
scas
pop
or
negb
fstl
mov
imul
xchg
mov
hlt
out
testl
sub
daa
and
in
or
and
test
aad
mov
and
cmp
aaa
or
jnp
repz
push
push
pop
hlt
mov
movsl
cmp
cmp
inc
icebp
pushf
int3
jmp
or
loopne
add
mov
call
in
mov
inc
lods
cli
and
daa
shlb
or
ljmpw
das
in
or
mov
inc
jnp
repz
mov
jae
rcr
mov
dec
negb
sti
adcl
dec
popf
fsubl
mov
pop
mov
mov
sbb
or
fstl
mov
pop
andb
pop
into
mov
movsb
push
data16
cld
mov
pushf
addl
push
cmpb
sbb
cmp
insl
icebp
pop
rolb
fsubp
leave
inc
push
push
test
jle
cld
xor
jnp
std
pusha
pop
or
mov
push
js
and
cld
aaa
in
pop
shl
icebp
inc
ret
inc
fsubrl
fistl
das
fmull
dec
ljmp
jne
dec
adc
daa
testb
ret
mov
nop
and
dec
outsb
shl
push
popa
sbb
test
jnp
enter
and
out
jecxz
popf
pop
xor
mov
mov
hlt
add
icebp
or
les
push
lret
mov
inc
sahf
xor
lds
leave
xchg
fnstcw
in
sub
dec
lret
pop
jge
cmc
int
xlat
push
sub
add
movsl
fsts
call
or
mov
sub
movsb
cmp
pushf
js
aam
mov
aas
xor
ljmp
mov
or
mov
loopne
mov
xorl
or
icebp
push
mov
cwtl
out
std
mov
aad
mov
fmuls
iret
mov
mov
sub
aas
or
mov
ficoml
js
aaa
adc
or
xor
iret
xchg
int
inc
bound
push
adc
mov
roll
xchg
call
pop
icebp
add
imulb
out
test
hlt
lds
stos
out
loope
dec
and
xchg
jne
jne
icebp
call
shr
outsb
in
xchg
insb
gs
pop
and
xor
lods
xor
cmpsl
push
dec
xchg
dec
sbb
scas
insl
push
jmp
icebp
push
pop
fnstsw
daa
add
test
scas
aam
jne
decl
cmp
mov
cwtl
fcomps
test
and
and
jg
fsubr
addr16
call
ljmp
cltd
sbb
call
add
push
test
das
xchg
icebp
add
mov
pop
pop
outsb
outsb
push
iret
lahf
jge
dec
or
or
ret
jbe
add
sbbl
fsubp
or
pop
adc
imul
mov
std
adc
sub
xlat
cltd
inc
pop
js
clc
inc
rorl
mov
scas
jmp
fcompl
hlt
inc
test
shrl
dec
fs
mov
xchg
pop
push
mov
inc
jne
mov
movsl
sub
mov
xor
in
or
push
in
cmp
out
xor
dec
rcll
mov
sbb
cs
lds
das
orb
sti
int
xchg
push
ds
mov
outsl
inc
bound
lods
xchg
push
iret
mov
mov
ja
dec
inc
cmp
pusha
xor
adc
dec
ror
mov
xchg
sbb
mov
lods
popf
add
pusha
loopne
xchg
idivl
push
sahf
jae
insl
test
push
jbe
xchg
mov
movsl
cmp
xchg
and
loope
test
jmp
add
mov
push
lahf
inc
ss
lret
mov
sar
dec
fwait
out
icebp
fsubs
mov
cmp
xorl
xor
incl
aaa
mov
rcrl
icebp
add
into
pop
mov
push
sbb
pop
mov
movsl
and
xor
pop
outsb
push
fists
int
cs
xchg
dec
sti
loope,pt
adc
ja
inc
pop
mov
sti
fnstsw
jp
roll
adc
popf
test
lock
data16
xor
pop
fstpl
pop
mov
jp
aam
lret
mov
lea
test
mov
and
xchg
mov
mov
icebp
dec
pop
inc
inc
mov
in
fs
jl
loope
mov
or
and
inc
popf
test
icebp
ret
and
jae
loope
jae
jge
dec
ljmp
and
fildll
add
xchg
pop
push
mov
dec
out
stos
mov
push
cmp
ret
xchg
leave
add
les
jmp
inc
sub
mov
mov
fisttps
push
fcomp
xchg
pop
ljmp
loope
into
xlat
add
adc
add
out
adc
cld
add
pop
xchg
into
loope
addl
mov
mov
fisubrs
ja
scas
call
fwait
bound
jecxz
lea
sbb
cltd
subl
or
std
shr
inc
mov
in
aam
pop
or
dec
sarb
enter
mov
jp
bound
cmp
mov
icebp
jbe
out
mov
loope
in
mov
or
gs
icebp
pop
in
loope
adc
xor
and
pop
xor
pop
call
or
fidivs
sub
clc
in
add
loopne
and
in
jg
iret
and
push
leave
mov
push
loope
mov
mov
shll
scas
int
push
jge
dec
popa
lret
fs
shrl
popa
xchg
jbe
xchg
push
test
sub
adc
icebp
push
imul
cmpl
into
jne
stc
aad
or
rcrb
push
ljmp
mov
mulb
lods
out
ds
push
xchg
sbb
sub
fidivrs
lahf
adc
inc
loope
push
sbb
mov
and
mov
xor
into
out
icebp
jns
pushf
or
xchg
enter
or
lock
and
enter
mov
fcmovb
lds
icebp
shll
rorl
and
jge
ljmp
sub
loope
imul
inc
xlat
aas
icebp
and
data16
roll
sub
push
xor
shrb
leave
pushf
dec
or
das
sub
mov
add
sub
movsl
dec
mulb
sarb
rcrl
adc
add
arpl
pop
out
fs
pop
jb
scas
pop
jb
sbb
sub
jl
rorl
pusha
push
and
lret
lods
repnz
push
int3
incl
mov
xor
add
and
in
rolb
mov
fscale
in
rcrl
or
aas
ja
cmc
mov
andb
push
cld
or
sbb
aaa
pop
sti
jp
add
jl
adc
xor
rolb
mov
psubq
jae
inc
sbb
insb
inc
in
loope
dec
shll
dec
mov
push
loop
cld
jnp
in
icebp
movsl
enter
pop
cltd
jecxz
cmpl
mov
mov
adc
pusha
lock
fnstcw
lea
ja
adc
shrl
imul
pop
mov
inc
and
out
pop
outsb
outsb
sbb
and
icebp
cmpb
pop
mov
mov
jnp
mov
or
xchg
shll
std
cs
fstp
xchg
pop
pop
inc
ljmp
sbb
popf
inc
cmp
push
cli
icebp
fadds
movsl
loop
lret
cli
adcb
aad
inc
out
ljmp
ss
mov
imul
cmc
mov
xor
loop
jb
outsb
fstpt
insl
outsl
out
in
je
pushf
scas
mov
adc
stc
imul
decl
lret
ljmp
mov
loop
inc
dec
repnz
adc
sbb
sub
adc
jg
cmc
pop
mov
add
aam
mov
call
pop
sub
cwtl
ljmp
lods
clc
and
into
jg
sarb
daa
lret
inc
push
ret
pop
mov
mov
push
sbb
pop
lods
rcll
aam
stos
mov
scas
loope
mov
addr16
inc
dec
cmp
aad
mov
test
sbb
adc
lcall
cmpsb
mov
xor
jecxz
xchg
call
jb
loope
outsl
push
cmpl
ss
push
stc
adc
aaa
cmpl
push
mov
les
rol
mov
or
call
pop
sub
cmp
dec
add
sbb
fiadds
xchg
int3
adc
sbb
test
mov
mov
xchg
xchg
push
jl
fwait
add
out
in
mov
jne
dec
or
std
mov
push
jmp
mov
call
mov
xor
in
mov
roll
in
mov
sub
jg
test
mov
stc
adc
gs
icebp
int
je
addl
outsb
mov
xchg
mov
xor
xchg
pusha
or
fnstsw
aas
int3
jb,pn
mov
mov
or
test
sbb
hlt
aad
and
mov
in
dec
jp
shr
jnp
jg
fnsave
les
dec
out
fimuls
cld
and
mov
cmc
les
pop
ret
push
sbb
in
movsl
inc
pusha
dec
in
aad
push
repz
leave
xchg
add
xlat
mov
cwtl
jmp
test
in
sbb
mov
add
imul
or
xor
xchg
incb
push
pop
jno
jge
pop
dec
icebp
shr
add
inc
push
frstor
sar
mov
dec
in
cmp
inc
out
loope
sub
mov
push
ds
adc
je
leave
movsl
out
inc
pop
roll
movsl
in
sbb
lods
shlb
or
out
loope
adc
mov
push
out
push
mov
lret
sub
adc
les
sbb
shll
adc
push
ds
jb
add
ljmp
and
dec
movd
push
gs
scas
jle
inc
pop
mov
add
inc
or
inc
adc
jg
dec
adc
iret
inc
push
imul
push
pop
adc
test
shrb
add
loop
mov
push
rol
shlb
test
cmp
in
orb
stc
sub
in
push
sub
mov
lea
mov
inc
xchg
mov
cmovs
fsubrs
push
sub
fimuls
js
sbb
sub
lods
cwtl
pop
shlb
int3
int
sti
rcll
pop
ljmp
mov
xor
movsl
jp
addr16
sub
inc
mov
pushl
int
rcrb
xchg
push
jmp
jbe
xor
jmp
push
jp
shrl
lret
or
out
pop
std
xchg
adc
cmp
pushl
dec
out
in
and
imul
pmulhuw
pusha
dec
mov
ffreep
pop
mov
movsl
push
mov
mov
sub
shll
and
and
in
push
cld
mov
test
mov
movsl
mov
mov
ja
inc
xor
mov
push
test
cmp
dec
lret
mov
jb
mov
pop
jl
jg
ficoml
dec
pop
scas
icebp
mov
jbe
mov
out
loope
push
sbb
icebp
leave
push
adc
ret
inc
jne
xchg
je
sbb
into
lods
cwtl
mov
lods
shlb
and
or
mov
popf
icebp
hlt
fcomps
out
cld
xor
popa
test
ja
jl
push
inc
sahf
loope
dec
stos
sbb
cltd
pop
push
popf
pop
push
xchg
stc
mov
push
add
lods
pusha
lret
loop
sub
xchg
bound
mov
pop
fcompl
push
out
shll
push
mov
movsl
lret
ds
xchg
sub
mov
inc
cli
lret
xchg
outsb
xlat
shl
cmc
adc
sbb
jp
ljmp
in
push
aas
call
cwtl
jecxz
icebp
xchg
mov
int
test
test
xor
sti
push
std
fisttps
dec
sub
popa
jnp
or
xlat
arpl
in
icebp
outsb
mov
fisttps
ja
add
dec
sbb
in
xor
repnz
xchg
pop
add
out
jl
sbb
pop
xchg
push
cld
jl
scas
mov
add
add
loope
ficompl
xchg
jg
jmp
sahf
scas
jecxz
xor
ret
test
loope
xchg
mov
aad
add
jne
jl
lods
mov
insl
dec
lcall
or
rclb
aas
mov
push
push
stc
loopne
cmp
mov
mov
sub
in
xor
popa
jp
lea
inc
jmp
mov
jnp
icebp
arpl
push
addr16
add
push
andb
roll
mov
xchg
pop
xchg
movsl
jo
frstor
mov
in
or
hlt
and
int3
rcrl
adc
mov
sbb
jo
aaa
fs
out
icebp
notb
lea
mov
mov
fbstp
mov
jb
imul
mov
loope
mov
jnp
loopew
sbb
adc
arpl
push
pop
int
out
mov
dec
add
jle
idiv
aaa
pop
push
in
push
movsb
mov
jle
push
sarb
negl
icebp
aam
or
sub
sub
mov
jae
shlb
adc
cmp
and
stos
push
popf
in
int
adc
in
icebp
fcoml
aam
sub
add
add
not
mov
sbb
jmp
into
aad
jo
cmc
pop
xchg
leave
pop
xor
repnz
in
fidivs
fldcw
jg
loope
les
insb
pop
mov
cmp
ja
je
or
scas
hlt
mov
inc
shlb
jmp
lahf
mov
xchg
or
cmp
mov
cltd
loop
loope
xor
and
dec
add
cmp
xchg
sbb
inc
inc
sub
enter
imul
sub
sahf
je
insb
movsl
adc
gs
aas
mov
adc
adc
and
lret
mov
ss
ds
imul
ret
icebp
cltd
and
xor
sub
mov
mov
gs
mov
stc
outsl
jne
or
or
test
cmp
fstp
sarl
mov
cmpsl
adc
ret
xchg
mov
daa
lcall
daa
mov
cmp
pop
pushf
xchg
fs
dec
fsubrp
cmp
dec
jge
cmpsl
sub
dec
testl
shrl
leave
loop
iret
push
pop
cmpsb
push
shr
xor
shrl
stc
mov
rorb
xor
mull
andl
jecxz
lods
pop
xor
add
sub
iret
cld
lea
loope
push
push
or
mov
or
loopne
aad
shll
subb
fsubp
xchg
cmp
push
stc
popa
in
jl
xchg
sbb
mov
aad
scas
inc
and
lods
icebp
call
ss
mov
mov
and
dec
aaa
push
ss
adc
sbb
add
movb
test
pushf
jnp
jno
pushf
adc
jnp
pop
add
xor
pop
dec
ss
fstl
lds
push
lods
cli
test
cwtl
pop
in
sub
sbb
test
test
xor
mov
popf
lcall
imul
ret
and
push
fistpl
sub
ret
push
scas
loope
sub
cmp
add
xchg
popf
sbb
test
add
int3
add
push
push
xchg
out
xchg
ret
cmp
sub
test
scas
bswap
xor
adc
hlt
sarl
add
movsb
mov
ss
int
icebp
sub
push
mov
loop
icebp
or
mov
dec
call
xor
pop
stc
lock
and
cmpsb
mov
push
or
jnp
fildl
pop
and
dec
repz
inc
inc
add
loope
mov
aaa
jbe
adc
or
out
test
int3
lret
xlat
xchg
lds
or
cld
mov
jne
mov
inc
nop
mov
add
cmp
jecxz
mov
cmp
pop
mov
in
icebp
pushf
decb
test
mov
jnp
push
and
in
and
call
ret
icebp
in
push
sub
pop
pop
aad
mov
sub
mov
pop
push
sbb
fscale
and
pop
push
rcr
popf
icebp
mov
push
sarl
out
xchg
mov
or
andb
daa
cmp
jmp
dec
fsubrl
es
fisubrl
popa
lods
subl
popf
or
dec
es
lcall
in
testb
adc
jle
les
popf
shll
fmuls
mov
or
int3
ret
outsl
lds
stc
sub
mov
insb
sub
popf
dec
mov
cmc
daa
pop
or
test
mov
pop
or
mov
out
xor
cmpsl
sbb
stc
jmp
addl
insl
add
or
jb
lock
movsl
dec
das
lret
fwait
into
movsb
jnp
xor
lods
pop
inc
mov
mov
push
xchg
sub
mov
ljmp
push
vminsd
ljmp
cwtl
test
or
stos
push
fwait
leave
aam
das
cmp
add
jbe
shrl
xchg
fistl
and
push
movsl
mov
add
gs
out
fdivr
dec
daa
jns
mov
push
dec
call
pushf
fwait
test
inc
out
leave
out
xlat
or
stos
sbb
testb
jp
insl
cmp
mov
pop
push
mov
jne
ljmp
test
sub
xor
pop
mov
or
mov
scas
rorl
push
movsl
insl
sbb
lea
pop
adc
add
cli
imul
pop
outsl
sbb
ljmp
or
push
leave
inc
dec
loope
out
movsb
sbb
inc
jge
nop
aad
addr16
xchg
repz
sub
xchg
hlt
fidivs
aaa
out
scas
sbb
and
mov
and
mov
stc
test
inc
in
mov
in
ret
std
int3
in
in
imul
add
loope
adc
mov
lds
ljmp
xchg
into
push
loope
inc
xor
je
dec
push
push
lds
imul
mov
jnp
dec
lods
popf
ja
pop
icebp
bound
shr
pop
sbb
ljmp
or
add
shrl
pop
mov
jbe
movsl
in
mov
jae
xor
xchg
mov
shlb
outsb
jle
scas
loop
or
pop
or
cmp
mov
mov
jp
cmp
mov
xorps
aaa
pop
out
cmp
in
add
roll
repz
sbb
jo
jno
cmp
cld
out
sbb
xor
loope
sti
mov
mov
or
aaa
mov
insb
scas
adc
add
sbb
xchg
sbb
pop
inc
mov
cmp
bnd
jle
jnp
icebp
imul
jns
clc
xor
daa
pop
mov
jne
in
pop
jno
test
adc
inc
aad
sub
dec
adc
es
mov
dec
popf
or
push
xor
dec
imul
cmp
mull
les
gs
mov
pop
cli
sub
aad
arpl
pop
std
imul
cmp
pminsw
scas
loope
out
push
add
mov
test
ret
mov
jb
jecxz
or
rcrl
lods
mov
and
xor
fstpl
outsb
in
daa
loopne
push
scas
loope
dec
es
iret
out
leave
cmp
repz
insl
addl
movsb
pop
and
test
ja
jae
ret
popa
mov
pop
call
or
dec
pop
inc
and
imul
or
jne
das
adc
lcall
scas
shll
pop
jb
mov
outsb
int
adc
lods
cmc
xor
mov
mov
adcb
pop
jge
push
shll
iret
cmp
jge
icebp
dec
mov
shrl
or
mov
push
jmp
movsl
sbb
pop
push
and
daa
pop
icebp
lret
jmp
bound
jmp
mov
outsb
test
xchg
stos
xchg
loop
xor
and
inc
fdivs
stc
push
xor
icebp
jecxz
mul
lods
std
add
shlb
mov
movsl
fldt
lods
sar
fnstenv
mov
fcomp
pop
ficoms
repz
xlat
lods
icebp
xchg
mov
cmpsb
dec
ret
dec
xchg
add
ss
clc
ret
rcr
ja
aaa
mov
or
shlb
aad
sbb
insb
fimuls
inc
jnp
jmp
call
adcl
xor
stc
jae
loope
or
jmp
push
mov
mov
dec
add
mov
scas
jo
test
sahf
adc
cld
push
aaa
inc
pop
pop
data16
out
jne
int3
insl
cs
imul
xlat
xchg
lds
push
sub
mov
jge
jmp
rorl
cmp
fildl
sbb
ds
jnp
sbb
nop
pop
jb
aam
xchg
insl
xlat
ror
sub
out
aaa
push
jns
or
adc
ljmp
jae
mov
sbb
dec
push
jnp
repz
dec
icebp
push
or
add
sub
mov
arpl
sub
leave
cmpl
jl
push
dec
repz
nop
sub
jecxz
cld
add
pop
jle
mov
xor
or
jne
aam
icebp
in
mov
pop
xor
rclb
cltd
push
adc
pop
sbb
jge
bound
xchg
pop
aas
out
es
cli
xor
orl
fistpll
aas
out
lods
or
movsb
cltd
jge
mul
or
test
mov
dec
out
jge
icebp
mov
sub
test
mov
ret
sub
and
stc
pushf
sbb
shl
insl
lret
and
shll
jge
sbb
lea
ss
jb
or
sbb
je
insl
lahf
nop
into
fst
loop
hlt
jg
pop
cmpsl
adc
js
das
lods
mov
inc
das
std
shrb
and
or
mov
mov
and
ja
movsl
stc
stos
jbe
std
aaa
mov
cmp
mov
or
xor
adc
and
mov
icebp
cmp
icebp
xor
sbb
imul
ficoml
mov
cmp
out
pop
mov
insb
negl
jb
loope
dec
repnz
sub
jle
std
sbb
mov
xor
mov
aad
xor
xor
test
sbb
adc
lret
push
addr16
jae
test
idivl
in
and
xchg
scas
dec
std
fstl
add
jecxz
adc
or
add
mov
push
out
int3
lds
xlat
mov
jecxz
fisubrl
mov
pop
mov
sub
dec
lret
movsb
pushf
dec
mov
cmp
out
stos
pop
pop
outsl
push
es
test
mov
adc
jle
scas
rcl
lods
adc
push
mov
mov
mov
xchg
inc
or
shrl
in
push
adc
or
fwait
mov
shlb
sbb
data16
sahf
mov
loop
aad
stos
mov
sub
adc
ret
insl
bound
into
jno
cltd
test
cli
mov
adcl
movsl
pop
or
movsl
into
loope
loope
daa
int
inc
mov
mov
jecxz
dec
jl
dec
cltd
fldl
dec
xchg
stos
xor
sbb
data16
jae
lds
mov
das
insb
imul
mov
sub
mov
sub
ljmp
scas
std
insl
lea
shl
rcrb
sbb
pushw
sub
sub
pop
icebp
adc
inc
mov
stos
mov
mov
push
arpl
sbb
lahf
dec
clc
push
sbb
sbb
xchg
pop
out
cmp
outsl
fs
inc
or
pop
shr
xchg
cltd
leave
adc
fs
fdivrl
lret
je
add
ret
ss
mov
rcrl
pushl
jnp
movsb
icebp
cld
adc
adc
rorb
jecxz
sbbl
pop
push
mov
pop
pop
pushf
inc
outsb
mov
or
cmp
and
iret
mov
test
lock
aam
mov
mov
mov
jecxz
in
icebp
in
test
rcll
pop
and
bound
add
das
push
mov
sub
adc
shrb
int
cmp
push
sbb
shlb
mov
lea
jb
jl
test
loope
mov
rcr
and
inc
test
in
idivl
xchg
cmp
pop
fwait
pop
dec
mov
sbb
sbb
js
cmp
pop
add
fdivrl
lds
push
mov
xchg
mov
add
icebp
dec
shrl
jmp
shrl
inc
pop
sbb
loop
mov
or
data16
outsb
loope
fwait
push
jne
insl
add
and
fisubrs
icebp
pop
pop
or
imul
iret
movsl
in
fimull
mov
sub
xchg
push
or
inc
jnp
fsub
and
jg
pop
jae
les
sahf
mov
mov
sbb
cld
cmpsl
jl
xor
leave
test
jp
lret
outsb
lcall
add
ret
cli
outsb
mov
sbb
or
cld
icebp
call
je
xchg
in
out
cmp
jns
aas
sbb
movl
sbb
std
mov
in
mov
imul
out
loope
jge
pop
push
nop
repnz
xchg
jo
or
push
dec
mov
sub
add
std
jl
cmpsl
cmp
mov
ficoml
mov
movb
add
add
pop
js
in
test
shrl
in
pop
in
mov
pop
jo
icebp
js
in
sub
in
loope
cmp
mov
test
imul
push
icebp
fmull
jbe
mov
outsb
in
mov
into
stos
loope
add
mov
mov
jg
xor
cmp
into
and
lds
lock
and
cmpsl
scas
xor
loope
or
gs
outsb
rcrb
in
scas
icebp
loopne
jae
xchg
cli
jl
adc
es
jp
out
pushf
or
rcrl
js
pop
mov
ja
ljmp
filds
dec
jae
inc
stos
dec
dec
or
or
rorl
test
sbb
fiaddl
cli
shrb
mov
in
ror
scas
ret
pop
sub
in
icebp
cmp
icebp
iret
outsb
pop
roll
mov
or
test
cmp
inc
push
mov
lahf
xor
out
cmp
jp
cmp
rcrl
arpl
loope
daa
push
fidivs
scas
and
std
xchg
aam
test
daa
mov
add
fisubrs
mov
lea
xor
sahf
out
std
adc
jp
fldz
push
bound
add
cmpsb
insl
loop
call
imul
test
rorl
dec
inc
and
jecxz
inc
inc
mov
shrb
into
ficoml
subb
adc
mov
pop
cmpsb
sbb
xchg
jge
dec
cmp
pop
jo
loop
and
mov
sbbb
repnz
jno
pop
jge
ds
xor
mov
jp
outsb
mov
sbb
or
divl
mov
xor
push
push
sbb
sbb
mov
movsl
insb
jl
rorb
xchg
mov
fisttps
sbb
jo
xchg
outsb
loope
in
rcll
movsl
les
dec
lcall
mov
push
cmp
adc
dec
adc
pop
adc
mov
in
aas
xor
mov
push
outsb
int3
mov
int
popf
test
sbb
jno
mov
lea
dec
sbb
loop
jne
imul
cmp
adc
js
pushf
pop
jbe
cmp
xor
inc
lahf
pop
stos
jp
dec
xchg
mov
xchg
sub
cmc
call
mov
pop
hlt
xchg
mov
or
aas
cmp
mov
xchg
repnz
out
pop
jmp
add
xchg
ljmp
cmp
int
sbb
nop
mov
aas
repnz
and
hlt
inc
in
nop
rclb
xchg
aad
int
and
add
jmp
nop
movsl
lahf
cmp
into
loope
orb
es
and
icebp
xor
cmpsb
icebp
aam
cli
fsubrs
sbb
pop
adc
in
incb
cmc
cmp
sbb
idivl
xor
decl
dec
insl
dec
jo
mov
out
shl
int3
adc
clc
and
int
or
fimull
jle
mov
or
gs
and
out
mov
and
mov
mov
ret
pop
and
sub
mov
xchg
repz
loope
sbb
out
xor
cmpsb
dec
pop
icebp
xor
xchg
dec
mov
add
loope
mov
xor
adc
mov
add
pop
push
icebp
mov
out
sarl
pop
jb
lods
push
pop
bound
xlat
lock
sub
mov
faddl
cmp
rcr
cmc
mov
or
sarl
lret
lock
dec
imul
or
xchg
test
sarl
cli
notb
iret
cmp
pop
sahf
inc
push
push
or
and
sbb
mov
sti
add
mov
sbb
clc
loop
sbb
mov
mov
pop
into
test
dec
mov
push
jl
jne
cmpb
int
jg
fsubrl
dec
fs
jle
adc
pusha
mov
idiv
insl
cmp
icebp
lock
xchg
mov
in
icebp
push
ljmp
std
jbe
cmc
sub
lds
into
in
adc
jmp
xchg
shrl
loope
push
scas
dec
adc
adc
push
ljmp
popf
sub
aaa
mov
roll
testb
fdiv
sbb
test
call
cmp
arpl
sub
lcall
int
imulb
loope
lahf
pop
and
inc
and
mov
mov
shll
ljmp
push
decl
sbb
icebp
xchg
mov
rol
dec
vphadduwd
movsb
dec
mov
jp
xlat
push
insb
cmp
sbb
jnp
dec
fst
and
test
inc
test
out
and
mov
push
mov
sub
pop
cmc
cmp
fbld
xchg
dec
shll
shll
stos
mov
adc
xchg
outsl
out
popa
das
cmc
push
ss
dec
push
adc
mov
inc
lods
imul
push
cmp
clc
in
and
push
jp
loope
test
icebp
stc
cld
pusha
rol
call
in
loope
pop
sbb
cld
xor
rcl
add
jp
stos
scas
clc
ss
sbb
fbld
and
outsb
inc
sub
inc
cs
push
popa
inc
adc
pop
pop
aaa
aad
ljmp
dec
add
lods
out
jge
mov
roll
cs
nop
popf
les
jnp
test
or
int
lock
mul
hlt
pushf
fs
aad
pop
ret
js
mov
sbb
sbb
push
clc
scas
fstpl
pop
xchg
icebp
sub
or
call
cld
ret
icebp
aas
fs
stos
jb
cmp
pop
inc
cmp
movsb
and
icebp
mov
out
mov
and
sahf
test
ret
pop
scas
add
pusha
in
or
sub
sub
xchg
xor
add
in
shll
xlat
frstor
jb
cli
ljmp
imul
sub
pop
xor
push
sbb
jl
rol
aam
cmc
int
or
xor
movsl
nop
and
pop
testl
hlt
xlat
scas
data16
in
inc
imul
repz
pushf
cli
xchg
shlb
aaa
mov
xor
int
cld
push
icebp
aam
fstp
inc
icebp
stos
idivl
add
out
mov
push
jno
and
and
xchg
addb
movsl
xor
icebp
out
scas
arpl
xchg
ja
xor
pop
or
pop
pop
das
test
xchg
movsb
mov
adc
push
push
sbb
push
sbb
cmpsl
test
in
push
addr16
xchg
cltd
xchg
mov
push
ret
sub
test
push
adc
bound
das
add
jnp
push
out
loope
jns
jae
imul
insl
push
decb
mov
iret
loope
and
pop
rolb
mov
mov
or
sti
xor
testl
mov
lods
ljmp
scas
lods
fabs
lods
ror
iret
clc
pushf
jno
out
iret
inc
in
jle
inc
xchg
mov
iret
jge
aaa
aad
cwtl
xor
lahf
loope
test
icebp
ret
and
inc
ret
add
lahf
enter
ljmp
or
js
sarl
pop
pop
stos
es
das
andl
jnp
mov
mov
aas
movsb
addr16
or
dec
pop
into
jle
cwtl
sbb
bound
push
mov
cmpsb
mov
pop
mov
fstps
scas
or
negl
push
faddl
in
shll
in
data16
push
outsl
imul
gs
pushf
xchg
fisubs
shll
dec
mov
jb
xor
add
in
cli
add
pop
xor
aad
ret
mov
jno
lea
popf
fs
daa
loope
lods
push
mov
inc
imul
outsb
fucomp
dec
xor
hlt
mov
sarl
loope
jecxz
out
adc
jbe
cmp
clc
cmc
inc
sub
and
push
and
sub
iret
add
dec
das
dec
push
dec
xchg
jnp
jbe
loope
mov
fs
arpl
mov
icebp
push
inc
cmp
xor
popa
jp
lahf
nop
mov
icebp
push
xor
push
push
idiv
rorl
dec
js
roll
push
hlt
pop
xor
popa
dec
insl
mov
jle
ret
into
movsb
xlat
aaa
lds
pop
add
sub
rcll
cmp
icebp
and
jecxz
jo
pop
test
out
int
inc
sub
fcmovnbe
jo
or
mov
and
es
push
cld
mov
mov
mov
fwait
out
mov
xlat
imul
outsl
popf
add
or
cld
dec
xchg
sbb
mov
cmpl
lea
pop
repnz
inc
push
out
clc
or
lea
push
pop
ljmp
jg
loope
aaa
fs
jmp
cld
xchg
test
data16
adc
add
and
shl
sahf
dec
jnp
adc
push
lds
sbb
in
cmp
push
icebp
ret
mov
fisttps
insl
lea
inc
das
add
fstpl
aas
cmpsl
xor
inc
movsb
shl
jbe
adc
in
loop
test
les
mov
or
movsb
mov
pop
hlt
outsl
pop
push
fs
ss
xchg
loope
bound
fisubrl
xchg
lcall
mov
ret
fs
mov
sbb
stc
jl
add
pop
dec
test
mov
cmp
lahf
test
lods
es
pop
pop
and
imul
xchg
mov
mov
mov
rcrl
mov
lret
jnp
push
gs
adc
inc
push
mov
sbb
pop
and
jnp
sbb
mov
cmpsl
loope
jbe
sub
sub
ljmp
shrl
ljmp
roll
add
ret
sar
mov
ja
adc
inc
loope
dec
or
pop
mov
test
push
das
bnd
out
roll
movsb
aas
jmp
cmp
je
inc
fcoml
mov
jnp
inc
dec
ret
and
dec
in
add
dec
add
into
pop
icebp
cli
push
mov
aaa
push
dec
push
icebp
ljmp
fsubs
iret
das
jne
imul
xchg
std
fldcw
icebp
push
dec
bound
mov
cmp
sub
mov
icebp
lret
adc
aaa
test
cmp
shl
cmp
aaa
int
ja
aad
out
add
pop
pop
aam
loope
loope
scas
test
mov
icebp
loop
or
sbb
fsubs
add
or
aad
jmp
pushw
xor
push
test
pop
out
mull
ret
in
leave
bound
dec
cmp
sub
sub
push
call
push
add
jle
mov
imul
std
jmp
cmp
loope
xorb
inc
inc
cli
and
add
inc
pop
repnz
shll
or
jns
jle
enter
sub
popf
pop
inc
cmpl
stos
adc
or
push
lret
mov
jecxz
cmp
lock
pop
das
pop
insb
imul
cmp
jge
sub
cmp
cmpsl
sbb
enter
scas
insb
push
cltd
pop
nop
lods
leave
bound
shrb
xchg
imul
jnp
aad
mov
ret
push
ljmp
notl
movsl
out
repnz
fcoml
adc
mov
mov
push
sti
inc
rol
addl
fnstenv
sub
bound
decb
cmpsb
and
jg
mov
cmp
jo
icebp
movsl
inc
jo
data16
jns
mov
js
mov
rol
in
or
and
mov
mov
xlat
add
dec
call
cli
test
sarl
push
xchg
push
cwtl
mov
inc
rclb
fsubp
repz
jecxz
ds
movsb
dec
cmp
mov
inc
lea
push
rcr
gs
in
in
xlat
and
mov
lea
shll
loopne
xor
mov
std
pop
mov
cmp
cmpsl
je
or
cld
shlb
incl
ret
data16
arpl
fstl
repnz
cltd
call
xchg
dec
xor
repnz
dec
icebp
pop
and
rorl
sahf
or
mov
gs
arpl
mov
lods
xlat
mov
add
mov
repz
inc
lahf
icebp
popf
or
mov
shll
sbb
loope
scas
lcall
les
pop
movsb
int
pop
jl
stos
stos
adc
repz
jne
pop
jl
pop
por
aam
ljmp
shrl
in
scas
into
movsl
cmpsl
aaa
and
ret
outsb
icebp
mov
outsb
push
inc
cmpsl
cmpsb
push
xchg
mov
aad
fdivrs
icebp
push
jecxz
std
xor
add
sbb
insb
or
cld
shll
fcomps
pop
mov
clc
jbe
jbe
or
or
out
sbb
movsl
shl
mov
push
outsb
in
fiaddl
jmp
xchg
push
lret
mov
lock
xor
jmp
xchg
add
shr
mov
xchg
mov
sti
xchg
out
mov
xor
test
in
jns
ja
hlt
shrl
pop
in
mov
pop
aas
rcll
popa
fimull
inc
loope
add
lea
fdivp
test
push
sar
lods
insl
and
add
pop
mov
loopne
icebp
ret
mov
xor
push
stos
add
mov
or
mov
lahf
stc
bound
inc
cmc
in
sub
test
popf
cmp
inc
xor
ret
hlt
sbb
push
mov
into
xor
int
mov
imul
xor
mov
fsubp
daa
call
mov
test
pop
and
jne
dec
or
imul
popa
adc
imul
lds
jns
ss
rolb
icebp
loop
es
call
insl
or
pop
or
in
cld
jmp
mov
or
aam
test
popf
pop
mov
sbb
jno
mov
je
mov
pop
sub
hlt
dec
les
adc
mull
sbb
dec
loopne
shrb
notl
xchg
inc
int3
int
jae
and
das
fidivs
outsb
mov
adc
loop
loope
or
cld
lds
push
jns
int
popf
in
pop
add
ret
push
xchg
ljmp
roll
xchg
mov
pop
dec
gs
subb
mov
popf
gs
xchg
sub
cmp
pop
loop
movsb
pop
iret
push
das
loope
popf
push
mov
lods
outsl
push
pushf
sbb
subl
cmp
push
aas
sub
mov
idivb
mov
stc
lret
push
or
or
push
and
mov
xor
inc
cmp
jno
mov
mov
and
and
arpl
icebp
repnz
mov
std
sar
loope
jne
inc
pop
int
popa
sbb
fbld
in
shl
iret
test
mov
call
cmp
pop
or
lcall
push
pop
outsl
and
fmull
scas
mov
jo
hlt
fstpt
outsb
sarl
aaa
loopne
loope
ret
out
adcl
incl
test
adc
mov
subb
lds
xor
clc
dec
in
mov
mov
test
xchg
pop
or
into
loope
mov
xchg
add
stos
inc
add
out
mov
clc
movsl
test
xchg
adc
adc
cmpsb
out
and
fwait
repz
mov
push
das
nop
jne
in
imul
loop
loope
sub
jle
mov
in
inc
xchg
jns
inc
inc
cld
inc
dec
xchg
and
icebp
mov
mov
mov
pop
mov
fildll
fidivs
jl
lret
add
push
sub
cmp
mov
adc
paddw
rorl
sbb
je
mov
xchg
jnp
mov
jb
cld
scas
fstpl
push
jecxz
in
mov
test
ljmp
sub
cmpsl
pop
sub
push
inc
rol
mov
lahf
js
mov
fwait
mov
or
inc
icebp
lods
out
or
andl
icebp
call
mov
mov
dec
loope
mov
pop
adc
shll
xor
sti
sbb
popa
testl
stos
int3
jnp
jne
loope
push
pop
rep
push
test
xor
sbb
fmull
stc
cmp
mov
subl
add
xor
lea
xchg
push
insb
shll
or
sbb
fcmovnb
push
add
jmp
mov
lds
push
push
lds
iret
stos
lea
clc
sbb
cwtl
inc
jns
shlb
jge
dec
pop
mov
pop
xchg
fcmovnb
insb
cli
and
vpmacssdqh
hlt
std
lea
xchg
loope
lods
popa
pop
and
xchg
in
jne
aas
xchg
ja
jno
shll
imul
and
std
clc
es
bound
mov
jb
mov
into
outsl
ffreep
mov
or
in
sahf
icebp
pop
loop
sbbb
push
sbb
sbb
nop
in
pop
mov
or
arpl
mov
or
jo
sbb
push
sti
nop
stos
mov
inc
out
enter
add
mov
push
call
dec
dec
or
loop
mov
in
adc
pop
sti
jne
insb
loopne
xchg
jbe
pop
sbb
pminsw
xor
jne
imul
popa
inc
xor
pop
adc
jne
inc
pop
repz
outsb
aas
scas
mov
jno
jle
jmp
lcall
sbbl
jne
and
outsb
icebp
cmp
hlt
mov
cmpb
adc
test
mov
das
nop
movsl
and
xchg
hlt
arpl
aas
mov
jnp
or
test
mov
je
loope
dec
inc
stos
pushf
in
test
mov
fldl
adc
scas
jb
lods
pop
iret
out
mul
ss
jne
jl
pop
rcr
jmp
mov
outsl
mov
fists
mov
stos
notb
cs
scas
and
pop
jbe
and
pop
icebp
imul
outsl
sti
pushf
insl
stos
mov
or
mov
xchg
xchg
cmp
mov
mov
mov
lods
and
mov
loope
lock
add
jmp
inc
pop
insl
xor
lahf
mov
or
stos
mov
aam
cs
jo
jmp
outsl
and
push
mov
loope
insb
in
fst
jp
sahf
inc
or
jge
sbb
orl
outsb
loop
mov
lds
scas
call
pop
mov
jecxz
icebp
adc
enter
sbb
mov
fucomi
test
notl
pop
lods
jle
mov
out
mov
add
ljmp
lret
ljmp
hlt
pop
sub
lcall
in
push
mov
pop
pop
push
shlb
mov
xchg
icebp
or
fadds
mov
insb
mov
mov
cli
xchg
jl
outsl
es
andb
cltd
sti
int
pop
fabs
std
movsl
sahf
lea
dec
icebp
jg
imul
and
add
add
fstl
mov
call
push
pop
mov
adc
pop
in
fisttps
clc
cmpsl
outsb
push
fisubrs
dec
andl
lahf
xchg
ret
lret
xchg
or
test
loope
les
cs
jae
xor
test
roll
and
jle
stos
or
sbb
cmp
ljmp
out
out
pop
sbb
pop
and
mov
out
pop
cmp
pop
test
leave
stc
loop
ljmp
inc
push
ds
add
imul
adc
and
movsl
mov
jo
xchg
push
cld
dec
test
or
jmp
std
shl
dec
shrl
cmp
jmp
xlat
or
das
mov
push
adc
ror
test
aam
in
lret
add
fldenv
mov
mov
xchg
out
rcll
dec
or
mov
sbb
rorl
in
push
test
insb
hlt
lds
mov
out
push
and
jp
pop
out
cmp
jl
mov
lcall
shlb
stos
rorl
fistpl
add
adc
mov
inc
mov
add
pop
loop
sbb
inc
push
arpl
add
loope
mov
cmpsb
ror
mov
jo
pop
push
mov
pop
mov
xor
das
test
ret
dec
daa
lret
hlt
add
loope
xchg
push
shll
push
push
inc
outsb
jb
fsubrl
call
jb
scas
outsb
rcl
xlat
std
inc
ss
scas
in
inc
mov
and
push
loope
pop
frndint
mull
mov
rclb
aad
loop
rol
int
lcall
addr16
jle
xlat
lea
cs
fcmovnbe
insl
jl
loop
int
in
outsl
imul
inc
adc
push
sbb
vpaddsb
fs
ds
ror
ret
add
popf
cmpsl
outsl
fstpl
ja
in
dec
int3
mov
fidivrs
dec
les
lock
jmp
jns
pop
mov
aas
adc
js
mov
jmp
movsl
inc
jge
jnp
loope
inc
aad
cs
les
lock
or
jne
frstor
rcll
repz
xchg
mov
dec
mov
hlt
iret
aad
aad
dec
dec
sbb
hlt
lret
lret
mov
inc
jecxz
mov
and
mov
in
sub
push
das
xor
dec
pop
icebp
rorl
flds
or
mov
xor
pop
jb
test
scas
jbe
pop
push
dec
and
mov
ss
or
xchg
je
nop
in
adcl
add
sub
repnz
icebp
hlt
jmp
out
cld
xchg
pop
imul
outsb
inc
adc
sub
cmpsl
mov
sub
pop
insb
lret
push
cmp
sub
jge
sar
sbb
inc
mov
xor
lds
push
clc
jg
fnstenv
adc
rcrl
mov
dec
jbe
sbb
mov
in
or
js
sub
jns
test
pop
jbe
pop
and
iret
pop
incb
xchg
add
fbstp
xchg
jo
ret
arpl
pop
pop
dec
lock
push
mov
test
jecxz
add
cmp
fabs
int
inc
adc
out
xchg
mov
scas
cmpb
mov
sti
in
fstpl
rorl
mov
stc
or
std
add
shll
and
arpl
mov
scas
push
sub
xor
dec
and
cmp
jbe
loop
rol
jbe
repz
xor
jnp
pushf
xor
pusha
aas
cmp
bound
sti
test
mov
pop
fs
incl
aaa
mov
ret
pop
int
in
pop
int
lock
push
imul
addr16
and
and
mov
lock
es
dec
jae
or
loope
mov
stos
xchg
cltd
int
pop
fs
scas
push
cltd
mov
mov
mov
aas
imul
shll
inc
and
icebp
testb
dec
cld
mov
cmp
xchg
daa
sbb
out
lds
lahf
jnp
mov
cmpsl
hlt
getsec
hlt
loope
mov
adc
cs
out
scas
mul
adc
inc
mov
es
iret
or
dec
xchg
leave
int
loopne
jbe
or
hlt
fsubrl
loopne
negb
dec
sbb
lds
mov
adc
cmpsl
jnp
icebp
or
scas
jae
pop
xor
push
cmc
xadd
and
imul
add
subl
xor
popf
mov
lcall
mov
stc
daa
int
ret
and
loope
icebp
mov
cli
ljmp
mov
mov
lahf
jnp
jmp
shl
xorl
out
adc
outsl
add
jae
fwait
jle
ss
xchg
scas
loope
push
mov
jne
dec
cmp
mov
mov
sbb
cmc
sub
xchg
jg
pushf
dec
add
mov
adc
xlat
test
shrl
and
sbb
shll
push
imul
rcr
pop
push
add
pop
in
dec
decb
dec
mov
or
mov
push
jecxz
sub
pop
shlb
fldenv
or
xchg
shl
out
fistpll
xchg
mov
cmc
das
rorl
aad
into
push
leave
sbb
loope
hlt
notl
repz
les
cwtl
mov
mov
and
loope
sub
jmp
movsb
cmpsb
gs
mov
mov
push
out
lret
pop
js
xor
add
leave
sub
sbbl
sbb
push
in
jmp
stos
mov
or
pop
jnp
mov
aad
lahf
jnp
xchg
std
jae
pop
ficoms
inc
iret
sbb
enter
fs
xchg
aaa
add
in
cmp
push
mov
or
clc
cmp
jmp
int
in
xor
sarl
mov
pop
pushf
mov
ss
ss
loop
push
ss
and
out
and
dec
xchg
mov
add
imul
mov
rorl
pop
out
leave
loop
imul
pop
movsl
ss
test
mov
jg
hlt
stos
fisttpll
enter
and
gs
subb
jmp
mov
out
lret
movsl
repz
ror
arpl
adc
daa
push
mov
int
arpl
mov
and
rorb
mov
mov
loope
pop
xchg
adc
imulb
stc
std
mov
movsb
fnstsw
shlb
xor
rcrl
in
inc
sbbl
call
arpl
mov
into
out
mov
loope
mov
scas
mov
fldt
mov
lea
mov
test
sbb
test
adc
sahf
cwtl
icebp
js
mov
jg
cmp
andl
inc
movsl
outsl
rcll
mov
scas
lret
out
ss
xor
and
iret
lock
push
or
popf
sub
or
xchg
jge
lret
add
rorb
mov
sahf
cld
sbb
sbb
lea
mov
aaa
std
mov
movsb
daa
fs
out
loope
push
push
fwait
jnp
inc
lret
cmp
out
aas
jp
pop
shlb
pop
pop
int3
mov
mov
sbb
movsb
or
push
xor
push
das
mov
shrb
imul
bound
sub
adc
cmc
fnstsw
in
addr16
repnz
cmp
push
in
fadd
test
in
fsubrl
mov
pop
jle
in
cwtl
mov
lods
mov
hlt
test
jne
dec
sbb
jg
pop
or
shrb
loope
addl
mov
mov
out
insl
push
ss
sub
scas
push
jno
rcrl
and
pushf
loope
mov
pop
shll
pop
rorb
mov
jno
pop
loop
push
ret
inc
mov
jns
mul
jbe
fnsave
loopne
pop
or
mov
outsb
pop
cmp
dec
divl
lods
or
lret
sti
mov
xlat
or
mov
push
jb
dec
icebp
mov
repz
aad
js
hlt
mov
cmp
cli
sbb
push
scas
mov
xor
pop
xchg
popf
jge
nop
outsb
lock
push
xor
in
inc
stos
jle
lcall
sti
push
xchg
loop
pop
mov
and
mov
jb
call
nop
in
pop
outsl
xchg
or
insb
sahf
xor
shll
push
aas
ss
test
sbb
and
mov
push
int3
icebp
outsl
lcall
shll
xor
jbe
fs
in
sbb
cs
or
out
xor
shll
icebp
jge
in
scas
repnz
sbb
outsb
and
std
jecxz
push
fwait
cs
xchg
dec
loope
movsb
popa
cmpsl
ret
add
aam
in
jnp
adc
push
bound
lods
scas
leave
cmpsb
mov
fisttpll
call
rcl
les
rcrl
sarl
inc
jo
addr16
mov
imul
pop
push
dec
push
out
repnz
mov
cltd
jmp
jo
mov
jmp
inc
jns
push
scas
loope
jle
mov
xchg
mov
jo
test
xor
into
loope
mov
out
call
dec
mov
call
push
out
clc
js
push
adc
mov
ds
das
std
mov
pop
fdiv
mov
pop
pop
int
lods
in
adc
sbb
mov
in
sub
dec
fisubrl
inc
xor
je
xchg
mov
cltd
cmp
and
shll
pop
out
mov
rcr
fsubrs
jne
int
xor
outsb
pop
int3
scas
icebp
add
pusha
push
cmpsb
dec
cwtl
and
lea
jecxz
les
cltd
outsl
dec
xlat
test
and
pop
xor
fstl
icebp
dec
dec
adc
xchg
int
jno
xchg
sahf
ss
mov
addr16
mov
mov
jno
and
shll
sbb
mov
mov
ffreep
xchg
push
leave
sti
cmp
jo
mov
nop
lret
add
int3
adc
aaa
rol
add
test
cmp
pop
inc
sub
scas
negb
fstpl
jo
pop
dec
rorb
pop
jns
mov
nop
popf
dec
xor
in
call
je
aas
stos
roll
rcrb
test
or
cmpsl
lea
push
int
mov
aam
pop
jg
or
loope
or
icebp
inc
and
mov
cmc
cmp
insl
out
jl
sub
loop
mov
pop
andl
fs
jp
dec
mov
xlat
enter
in
pop
mov
lods
add
mov
pop
addr16
or
mov
or
js
adc
lcall
call
int3
adc
inc
pop
push
add
ret
mov
repz
out
in
scas
jo
pop
and
pop
cmc
in
jecxz
sbb
adc
or
stos
jl
mov
sub
gs
lds
or
loop
jne
jp
or
inc
sti
ss
mov
xlat
loope
dec
push
push
mov
call
push
jns
daa
inc
cmpsl
rcrl
out
xchg
or
push
xlat
into
dec
cmp
fwait
cmpsb
outsl
or
aas
pop
std
and
aaa
xchg
inc
or
enter
shll
test
pop
jmp
lock
dec
cmp
icebp
inc
stos
mov
or
cli
int
jg
jecxz
inc
dec
cld
cmp
jge
dec
lds
imul
sahf
lret
dec
sti
add
fwait
imul
sbb
jb
mov
insb
xchg
pushf
jl
jle
pop
sub
add
aam
sub
xchg
sub
lods
test
jle
les
jle,pt
add
cmpsl
dec
icebp
fidivl
leave
mov
je
shll
ja
loope
imul
sbb
inc
pop
mov
test
ljmp
lds
idivl
movsb
sbb
mov
add
stos
in
movsb
lahf
loope
or
adc
jo
cmp
lods
xor
icebp
enter
add
cld
jle
orl
jge
mov
lods
dec
scas
stos
push
inc
dec
hlt
sbb
imul
sahf
xor
push
ret
lret
sahf
lods
loope
es
pop
imul
push
xor
and
scas
pusha
xor
mov
out
cmp
and
cmp
test
or
popf
and
mov
fldl
cmp
cmpsl
lret
xchg
and
aas
push
mov
pop
xchg
lods
repnz
shll
pop
pop
or
mov
fs
lret
popf
jle
std
cmp
repnz
cmp
call
or
pushf
mov
mov
and
sbb
insl
jnp
cmc
inc
insb
push
jge
loop
mov
xor
or
dec
jg
mov
and
sbb
xchg
xor
mov
inc
stos
and
mov
push
stos
adc
pop
insb
cmc
sub
test
mov
imul
test
movsl
dec
das
repnz
xchg
jp
lods
add
sbb
rolb
in
into
out
loope
es
lea
aad
popf
in
outsl
lretw
cmc
outsb
mov
mov
inc
in
popf
jp
rcr
mov
jo
xor
xor
data16
dec
gs
dec
in
mov
cmp
movl
and
loope
arpl
mov
lods
in
test
jge
pop
push
mov
icebp
sub
das
mov
pop
mov
jno
xor
popa
test
adc
sbb
dec
out
out
je
jle
mov
add
push
ds
mov
int
pop
mov
mov
scas
jmp
flds
mov
dec
jmp
mov
lods
push
in
imul
stc
jg
sub
cmp
mov
xchg
xchg
mov
out
mov
jnp
lret
popa
roll
xor
cmp
icebp
push
jp
les
xchg
push
push
mov
mov
sar
outsl
adc
and
aas
add
mov
imul
push
loope
pop
dec
cmc
es
in
int
rorl
es
wbinvd
push
jnp
xor
std
push
in
out
jle
add
pushl
mov
dec
push
sub
rolb
test
mov
scas
pop
and
rclb
and
ja
mul
jbe
xchg
scas
mov
in
fwait
icebp
es
xchg
daa
jno
ss
sub
ret
add
adc
xor
int
data16
sti
gs
subl
lods
roll
loop
cwtl
and
add
das
cltd
bound
fs
ret
dec
mull
aad
icebp
cmp
or
lds
or
jmp
cmp
loope
lods
hlt
stos
and
sub
das
mov
sar
pusha
inc
insl
mov
aam
dec
movsb
adc
jb
dec
fsubl
push
outsb
arpl
lcallw
mov
add
in
adc
push
outsb
aaa
xchg
and
jge
mov
inc
test
inc
or
dec
xchg
shr
movsb
clc
adc
adc
jge
fld1
sbb
insl
adc
data16
ja
xchg
stos
ds
push
xor
mov
pop
mov
mov
lea
test
in
mov
mov
pop
mov
movsb
lds
xor
sbb
jno
mov
stos
test
data16
andl
dec
subps
enter
mov
mov
test
mov
jl
mov
aad
jo
sbb
sub
sbb
xchg
pop
sub
out
in
xchg
cwtl
xchg
movsl
mov
sub
scas
add
lcall
xchg
rcr
iret
loopne
test
mov
dec
rcrl
mov
push
mov
mov
das
inc
clc
jb
ljmp
mov
fbld
mov
sbb
lea
scas
cmpsb
cmpsl
icebp
aam
loope
popa
mov
mov
fptan
jmp
stos
push
shll
sbb
xor
stos
lea
aas
mov
loope
sub
popf
jg
lods
jbe
mov
sbb
and
repz
test
rol
shr
mov
into
loop
mov
mov
push
xor
xorl
push
out
iret
xchg
arpl
insb
fnstsw
insl
daa
inc
into
out
test
stc
mov
ret
fcmovu
pop
xor
mov
outsb
jge
lret
sti
sbb
inc
mov
in
in
xor
test
inc
jp
fcomps
aas
add
lock
and
push
in
xor
xlat
mov
mov
das
in
mov
jp
sub
ljmp
in
xchg
insl
out
aas
jp
inc
fistpl
dec
mov
mov
ret
in
sti
insl
sub
ret
lods
cld
jno
ljmp
xchg
gs
or
out
or
sti
outsb
cmpl
push
and
inc
jle
out
mov
pop
das
add
dec
jp
fisttpll
imul
fs
dec
clc
inc
jle
sub
addr16
jp
enter
and
mov
push
notb
imul
fbstp
jnp
mov
jb
je
cmpsl
cmp
xchg
cmp
fsqrt
insl
fnsave
fndisi(8087
sbb
pop
testb
jl
into
lock
sbb
insl
mov
shrl
adc
in
dec
scas
mov
das
fsubl
jmp
xchg
push
mov
call
push
or
mov
add
shrb
add
iret
mov
mov
test
xchg
in
lods
dec
fwait
lret
inc
jp
or
jmp
inc
aaa
dec
add
mov
daa
xchg
fldt
dec
jp
fsubl
out
xlat
addr16
imul
mov
pop
pushf
test
cmp
gs
scas
sbb
in
ss
dec
lock
mov
mov
hlt
mov
inc
out
inc
jp
dec
stos
lahf
mov
sub
cld
je
pop
xchg
sbb
in
pop
mov
jge
add
mov
push
mov
outsl
mov
std
ljmp
decb
cli
sub
jl
push
orl
in
into
data16
and
lret
mov
sti
push
aas
dec
scas
pop
jecxz
out
xlat
push
popa
add
lret
mov
xchg
push
add
dec
xlat
fdivr
push
jns
ja
lock
ret
aam
in
jbe
pop
xchg
add
or
insl
daa
push
xchg
jle
outsl
imul
int3
divl
shr
jp
outsb
push
outsb
hlt
mov
ljmp
loope
clc
gs
outsb
sbb
aaa
repz
outsb
fcmovne
mov
ljmp
push
ds
int3
xchg
inc
outsb
dec
mov
lds
icebp
movsl
subb
mov
mov
adc
cltd
lahf
cmc
in
push
sub
jbe
jle
inc
xacquire
push
movsl
inc
mov
xor
cmpsb
inc
imul
out
ds
jl
loope
popa
ja
ljmp
push
loop
enter
or
fiaddl
in
jnp
dec
or
inc
outsb
push
test
in
xor
out
fidivs
imul
cs
lret
xchg
xlat
mov
enter
cld
jge
push
insb
out
lods
pop
mov
out
aas
jo
inc
cmp
jle
int
loop
xor
test
dec
mov
outsb
in
pop
mov
adc
in
cmp
xlat
lock
xchg
shlb
jle
inc
xchg
push
pop
arpl
or
ds
loopne
call
into
inc
sti
scas
hlt
test
pushf
mov
out
fdivr
nop
jle
add
sbb
in
les
dec
outsb
adc
pop
mov
scas
popf
imul
jl
inc
testl
pop
out
pushl
pushf
ljmp
lcall
mov
mov
cwtl
addr16
cmpsb
cmp
in
in
pop
imull
stc
mov
jg
sub
pushf
mulb
push
pusha
sub
jno
stos
outsl
cli
shrb
sub
leave
cmp
cmp
clc
je
mov
mov
mov
adc
in
lret
loopne
inc
mov
add
fsubr
pop
mov
stos
sub
cmp
lock
imul
push
ja
jl
inc
pop
pop
adc
inc
jno
cwtl
mov
pop
in
jle
int
fldcw
pop
add
idivb
imul
arpl
out
insb
xor
out
fisubrs
jle
fisubrl
lock
imul
es
xlat
mov
jl
fucomp
pop
jle
leave
xchg
mov
sti
inc
pushf
pslld
daa
push
or
dec
loop
sti
jne
lods
inc
lods
pop
pop
gs
mov
scas
adc
loope
imul
call
outsb
nop
sbb
pop
sub
inc
xchg
nop
mov
loope
cmp
fists
test
inc
jbe
push
in
pop
into
mov
pop
rcrl
add
xor
in
inc
imul
outsb
sub
jno
ds
mov
cli
pop
sub
daa
adc
int
test
pusha
ret
or
pushf
daa
into
mov
in
fdivr
pop
daa
test
in
mov
jp
or
add
xrelease
imulb
dec
lea
out
outsl
xchg
out
push
cmpsb
fwait
pop
mov
mov
jl
js
pop
lea
pushf
pop
int
mov
popa
call
adc
pslld
xor
jl
clc
push
ljmp
ljmp
xchg
out
pop
cwtl
push
outsb
stos
jecxz
jno
ljmp
aam
pusha
loop
cld
and
pushl
and
mov
ja
lods
sub
sbb
aad
fildll
js
js
fnsave
out
lcall
in
dec
cs
vrcpps
loopne
sbb
sub
mov
adc
shr
mov
insl
jnp
lods
cmp
subb
inc
stos
sub
nop
xor
insl
shll
dec
out
loope
sbbb
pop
cmp
sbb
pop
jle
aad
insl
lods
aas
nop
fmull
ljmp
int3
out
jnp
mov
fldl
out
or
shll
jge
and
sbbl
in
sbb
stos
jb
movsl
outsl
adc
aam
ljmp
rolb
nop
push
mov
push
clc
xchg
ljmp
mov
xor
adc
shlb
loope
fisubrl
jnp
clc
pop
xchg
inc
arpl
mov
lcall
pop
lock
inc
mov
and
es
clc
mov
push
xor
mov
or
int
mov
out
loope
xlat
mov
shr
jp
insl
incb
enter
dec
les
test
and
jle
cmp
sbb
aad
popa
sub
call
bound
sarl
ljmp
and
scas
dec
sub
cltd
cmpsb
out
mov
int
fmull
data16
push
scas
or
xchg
xchg
lods
mov
ret
xor
inc
lahf
mov
or
loope
cld
adc
repz
pop
les
inc
push
pop
repnz
movsl
sub
ljmp
push
ror
xor
shll
inc
jmp
loope
mov
std
pop
addl
movsl
jbe
or
pop
int3
push
repnz
scas
xchg
jge
ds
repnz
push
fmull
sti
push
xor
pop
cltd
lret
pop
icebp
or
orb
mov
jmp
ljmp
inc
les
cmp
inc
add
aad
jmp
inc
lea
pusha
mov
push
inc
in
or
jbe
sbb
into
pop
jb
sub
mov
mov
repz
andl
cmc
enter
xor
xlat
lds
xchg
xchg
repnz
fisubrs
pop
mov
in
out
repnz
jb
cmp
imul
inc
loop
push
dec
int3
jnp
xlat
movsb
inc
mov
jmp
es
dec
add
pop
or
bound
mov
mov
jns
push
movsl
mov
mov
movsl
sbb
out
xchg
fdivl
loope
inc
or
test
mov
test
scas
into
es
mov
pop
loop
loope
cmp
mov
mov
scas
mov
pop
imul
mov
add
or
mov
jo
in
bound
inc
jns
aad
jb
ficomps
inc
int
mov
fisubrl
inc
out
push
scas
lods
cmc
adc
jbe
cs
fisubrl
int3
fidivrs
jge
loope
xlat
daa
and
shr
adc
and
cld
cmpsb
pop
pop
inc
out
or
ficoml
xchg
ljmp
add
xor
out
jne
cltd
decb
sub
sub
mov
dec
mov
in
mov
lret
sbb
xor
sbb
addr16
in
roll
enter
fstpl
cmpsl
xor
repz
aad
insl
inc
add
push
clc
les
pop
je
cli
mulb
jp,pt
lds
jae
jns
out
mov
sub
dec
add
pop
xor
mov
div
mov
icebp
push
popf
lret
aas
aad
adc
jbe
jle
movb
rorb
int
jae
xor
test
inc
mov
fistpll
pop
and
mov
shr
ljmp
popf
sbb
cmp
push
push
and
sub
pusha
out
sarl
in
or
adc
xchg
inc
cmp
xor
loop
dec
add
mov
xor
mov
jbe
or
icebp
pop
mov
pop
sarl
sti
jmp
adc
push
sub
push
dec
std
xor
movb
push
lcall
mov
aas
bnd
in
add
sbb
jmp
xchg
lds
icebp
or
push
es
insb
rcrl
cwtl
out
inc
cmpsb
jbe
outsl
stc
ss
lds
pop
jnp
push
sbb
jecxz
negl
lret
stc
shll
test
aaa
dec
and
lods
xchg
cli
cltd
frstor
mov
push
mov
or
mov
shrl
pop
sbb
mov
push
push
sbb
fs
jmp
inc
scas
push
and
xchg
outsl
insb
and
lahf
or
clc
icebp
mov
roll
sbb
movsb
xchg
xor
pop
ljmp
outsb
inc
nop
iret
mov
icebp
dec
cmpsl
es
rcll
arpl
sbb
jmp
out
xchg
xchg
mov
scas
aaa
mov
ds
rorb
adc
cmp
xor
xchg
in
loope
sbb
mov
cwtl
add
mov
push
add
and
sub
clc
sub
mov
mov
das
cwtl
adc
mov
sbb
or
flds
xchg
aad
adc
adc
sub
push
mov
shll
jge
stos
inc
rolb
cmp
call
fiadds
mov
dec
loope
sahf
mov
or
jnp
inc
adc
std
pop
cmp
jl
les
call
dec
loope
nop
cmpsl
mov
loope
insl
lea
and
lahf
cmp
int
icebp
ret
ficoml
pushf
fs
lahf
stos
nop
xor
xor
ljmp
popa
int3
jno
xor
mov
aam
jecxz
cmpsl
lcall
bound
daa
pop
push
jge
outsb
addr16
loop
dec
mov
and
inc
out
loope
stc
sub
ret
cmp
daa
shl
xchg
adc
adc
repz
cmc
pop
loope
inc
sbb
test
ror
mov
push
jb
out
push
sub
sbb
repnz
push
lret
ja
pop
aaa
xchg
adc
outsl
pop
sti
pop
fildl
loop
fildl
cmpsl
push
outsl
pop
lcall
xchg
ja
lcall
adc
add
es
mov
dec
je
int
dec
enter
push
loope
dec
ds
mov
fnstsw
rolb
mov
andl
shrl
mov
out
out
cmc
xchg
inc
inc
iret
daa
inc
imul
loope
xor
jle
or
scas
imulb
rclb
call
dec
and
int
and
push
sbb
cld
sbb
sub
push
xor
cmp
nop
into
in
in
jp
jb
sbb
ficoml
jns
push
pop
aad
sahf
subl
jmp
hlt
lea
pop
loop
outsl
int3
sahf
shl
int
cltd
fcoml
jbe
les
push
mov
in
data16
in
mov
push
lret
lea
jne
pop
shll
outsl
sbb
loope
imul
inc
mov
fimuls
mov
fmul
add
or
dec
add
cltd
scas
push
mov
jnp
xor
jle
lock
pop
jp
inc
push
pop
stos
std
push
inc
mov
inc
lea
lret
mov
mov
inc
stos
mov
pop
jo
mov
into
pop
xor
sbb
leave
inc
push
or
jl
loope
sbb
mov
pop
icebp
adc
imul
fwait
rcll
inc
rcll
in
into
out
decb
or
xchg
dec
mov
cmp
xchg
call
jmp
jo
pushf
push
and
icebp
xor
mov
mov
mov
iret
jmp
scas
pop
pop
stos
movsb
mov
scas
cmc
and
fidivrs
xor
nop
clc
arpl
cmp
insb
aam
jle
cmp
push
sub
out
loope
push
not
sub
push
pop
mov
das
sti
sbb
sbb
out
shll
or
outsl
cmp
jbe
test
imul
repnz
inc
cli
out
adc
test
ljmp
in
sahf
addb
das
aam
cmp
push
cmp
imul
fstl
loop
fistps
leave
xchg
inc
cmp
jmp
ljmp
add
cmp
cli
stos
jecxz
mov
mov
jne
jge
pop
xor
insl
mov
xor
orl
sbb
out
mov
inc
ficomps
shll
shl
xorl
dec
sbb
add
sub
out
jle
dec
or
fs
or
or
jge
icebp
or
jae
mov
fwait
sub
fidivrl
mov
mov
mov
aad
out
bound
lret
scas
fisttps
insl
aad
test
pushl
jbe
xorb
pop
fs
ret
push
fsubl
and
cli
leave
pop
es
arpl
popa
push
je
lds
lods
cwtl
fcmovnb
inc
xchg
xor
sub
cmpsl
out
stc
dec
mov
movb
outsb
push
in
popf
adc
stos
pop
iret
rclb
and
enter
fisubrs
mov
dec
add
adc
stos
push
pushf
ds
cmc
fistps
dec
sub
popa
jne
and
mov
jg
mov
pop
inc
mov
aam
xchg
mov
ficomps
loope
adc
lock
xor
stc
or
cmp
scas
mov
ds
mov
shll
in
test
mov
jno
jp
adc
jp
incb
movsb
pop
xchg
inc
mov
or
inc
or
lret
push
lcall
sbb
jnp
fnstsw
repz
jge
loop
and
jb
rcrb
hlt
aas
mov
rep
icebp
push
addr16
mov
sub
push
outsb
inc
adc
shll
fcmovbe
sahf
dec
xchg
test
fistpll
push
mov
and
pop
ljmp
sbb
push
int
jnp
fistpl
mov
and
js
dec
rorb
dec
fs
lea
sbb
adc
in
cli
mov
popl
stos
fistl
jno
jns
movsb
xor
in
pop
lods
cltd
pop
js
cmpsl
mov
test
outsb
fsubrs
xsha1
cmpsb
mov
add
aas
xorl
scas
loope
sarl
mov
push
lea
sub
or
xchg
cmpsl
pop
mov
mov
or
mov
sbb
rsm
dec
add
xchg
scas
shrb
mov
icebp
lret
loop
pop
or
jg
lret
rcll
shrb
mov
sti
adc
jg
into
in
push
push
icebp
adc
fisttpll
in
mov
cmc
lcall
cltd
rcll
sbb
ljmp
int
outsb
out
xchg
leave
sbb
insb
sub
repz
shr
mov
push
test
add
dec
lcall
arpl
fs
dec
add
daa
std
and
jmp
bound
rorl
inc
xchg
in
pop
nop
xor
and
addr16
std
test
rcll
or
jb
sbb
jecxz
imull
xor
hlt
xor
mov
in
loope
mov
xor
push
cmc
xor
fisttpl
sbb
out
cmp
mov
cmp
lahf
scas
xor
ror
add
out
mov
movsl
jg
sub
sub
cld
lret
push
xchg
aaa
cltd
push
inc
mov
loopne
lahf
push
sbb
add
call
and
lea
sarl
sarb
ljmp
loop
iret
add
adc
sbb
iret
or
or
jae
pop
subl
push
sbb
jmp
loope
or
mov
in
sti
scas
adc
neg
and
push
iret
jle
pop
int3
lods
das
icebp
ffree
outsl
xchg
insb
aaa
push
mov
outsb
dec
rcr
push
jno
fildl
in
cld
jb
scas
loope
xor
adc
ss
cld
ror
gs
or
sbb
xor
arpl
fucomi
std
adc
icebp
movsl
pusha
aam
sub
push
or
shr
push
adc
jne
jnp
push
xor
fmul
cmp
xchg
adc
out
sub
dec
and
xor
jp
sub
js
xchg
push
cmp
lods
sarl
jmp
pop
imul
inc
dec
inc
sub
xchg
and
lahf
aad
pop
push
push
and
jle
test
mov
adc
repz
dec
aad
clc
pop
jo
out
enter
mov
fldl
rdmsr
jnp
addr16
or
rcll
paddb
loop
mov
sbb
imul
inc
test
xchg
loop
xchg
movsb
add
mov
into
loope
repz
sbb
adc
push
std
stc
mov
mov
mov
lock
sti
mov
push
and
or
jne
push
test
fisttpll
adc
dec
aas
leave
push
test
or
cmp
scas
xchg
popa
and
push
and
jmp
lret
push
dec
dec
mov
imul
sbbl
dec
or
adc
pusha
pushf
xchg
and
insl
je
inc
call
jo
inc
mov
icebp
int
test
data16
xchg
or
pop
movsb
clc
add
bound
and
out
loope
add
adc
mov
adc
xchg
xor
push
orl
jns
test
aaa
dec
or
pop
cmc
push
mov
xchg
ljmp
xchg
adc
ss
sahf
cmpsl
sub
mulb
or
cmp
xor
and
pop
fdivl
sti
cld
arpl
mov
hlt
push
push
mov
xlat
push
test
dec
insb
shll
mov
cs
lcall
pop
rorl
into
aaa
loope
inc
popf
lods
lods
jno
xchg
out
ljmp
push
or
mov
lret
lods
imul
scas
xchg
push
movsb
adc
inc
ret
push
gs
imulb
outsb
jne
and
std
shr
gs
xchg
jp
pop
pop
aam
es
out
add
lret
das
adc
imul
int
adc
jb
push
inc
outsb
out
inc
add
mov
int
loop
and
cmpsb
or
ja
incl
mov
pop
or
add
jnp
in
mov
jb
cmp
jp
icebp
jmp
pusha
popf
push
and
scas
ss
rcrl
push
std
fldl2t
sub
cmp
xchg
xor
in
cmp
out
pop
loope
push
pop
popf
jge
cmc
push
ds
icebp
repz
lods
or
or
jnp
std
xchg
fiadds
pusha
leave
loop
dec
ret
push
mov
sbb
push
pop
mov
sub
jae
loop
push
test
mov
into
scas
inc
loopne
loop
loope
and
lahf
movsl
or
fwait
in
outsb
int
xlat
sbb
xchg
lods
dec
inc
in
loope
lods
xchg
std
aaa
nop
inc
lea
mov
push
mov
adc
lcall
mov
lods
enter
lret
popf
test
cld
arpl
roll
jle
cltd
mov
shrb
add
into
fdivl
mov
mov
addr16
adc
inc
dec
popa
fimull
adc
add
push
scas
in
mov
cwtl
loope
pop
mov
sub
inc
push
xchg
test
enter
push
push
popf
push
ljmp
add
pop
or
iret
xor
jge
adcl
add
jae
cmpsb
cmc
movsb
or
das
lcall
inc
ror
shll
test
dec
scas
testl
lods
icebp
ds
repz
add
roll
insb
and
dec
mov
pop
testb
or
dec
out
popf
push
mov
mov
push
loopne
test
divl
aas
out
test
dec
fldt
dec
mov
adc
in
or
into
push
loope
lds
mov
out
outsb
xlat
xchg
aam
dec
std
fsubr
sub
jle
lods
inc
pop
enter
pop
mov
es
cmp
mov
sub
pop
out
jb
push
pushf
xor
push
out
std
fidivrl
arpl
inc
and
or
mov
out
lahf
and
paddsw
sbb
lods
in
push
or
sbb
std
loopne
pop
cs
mov
out
out
push
je
les
dec
dec
jecxz
xor
jle
xchg
inc
sahf
into
aam
int3
mov
add
ret
xchg
xor
or
lret
mov
ja
jae
cmp
inc
lcall
jmp
bound
imul
push
or
ljmp
aas
stos
jae
rcr
hlt
loope
adc
inc
jne
jno
decb
xor
jle
lods
mov
pop
fcom
aaa
movsb
push
mov
bound
lods
jnp
mov
jp
inc
mov
xor
mov
in
je
call
idivb
out
mov
hlt
jg
ja
xchg
lock
dec
lret
insb
dec
and
outsl
inc
aas
pusha
scas
lret
push
enter
into
insb
je
push
mov
shlb
int
in
mov
xchg
dec
sbb
rol
stc
mov
insb
jbe
lcall
inc
int
jmp
jge
movsl
les
lods
xor
out
pop
sbb
out
ds
and
xchg
jbe
dec
adc
and
cli
je
mov
movsl
stc
ljmp
push
div
fdivp
ljmp
out
ss
sti
enter
mov
jne
or
aam
out
sub
inc
xor
push
out
sarb
divl
dec
and
jae
pop
idivl
negb
nop
jbe
or
cld
jae
in
add
out
out
add
loopne
repz
dec
imul
jecxz
jmp
hlt
jae
fsubrl
out
pop
ficompl
outsb
mov
outsb
cmp
pop
sbb
pop
xchg
out
icebp
mov
hlt
imul
out
add
aaa
mov
xlat
out
xchg
lea
outsb
or
or
in
outsb
sbb
call
imul
xlat
push
aam
test
je
ret
in
adc
lods
dec
icebp
mov
out
dec
cmp
cmp
xchg
sub
sub
stc
jbe
out
loope
or
mov
mov
push
cmpsb
negb
mov
mov
cmp
dec
ss
sbb
adc
popa
sub
jns
in
sub
fsubrp
out
jle
mov
mov
adc
mov
xor
cld
and
out
enter
fimuls
test
and
push
out
jb
inc
leave
cmp
lods
shl
out
addr16
xchg
movsl
jns
mov
pop
imul
mov
mov
call
cmp
dec
xor
push
push
dec
sbb
or
out
aad
mov
stos
aas
push
xor
add
sahf
out
mov
mov
out
clc
hlt
xchg
cmp
sti
flds
out
shrb
adc
jne
stc
imulb
ds
fnstcw
dec
xchg
out
mov
mov
js
movsl
add
push
ja
movsb
pusha
dec
lds
frstor
sbb
and
inc
bound
cli
pop
div
xor
jge
enter
mov
pop
mulb
push
fsts
test
out
cmp
loopne
cmpsl
arpl
test
out
and
idivl
jno
mov
out
ret
sub
xor
out
pop
mov
stc
jg
out
test
cld
or
out
leave
out
les
or
cmp
push
xor
push
andl
mov
xchg
scas
jl
out
sbb
movsl
push
aas
add
ljmp
xchg
xor
in
mov
lods
out
cmovbe
ret
bound
mov
cmpsl
dec
scas
movsb
out
repz
stos
daa
mov
push
out
clc
test
or
sahf
ljmp
fisubrl
int
pop
inc
fiadds
or
cmp
fistps
mov
push
mov
add
dec
xlat
daa
outsb
jb
xchg
scas
push
out
stc
inc
cli
mov
xchg
imul
sbbl
or
inc
xor
out
popa
fcoml
les
ret
jmp
xor
xchg
sbb
js
push
decl
xchg
pop
sub
shrb
in
into
mov
or
cs
sbb
adc
inc
fs
dec
hlt
mov
out
xorl
data16
in
out
sbb
les
adc
out
xchg
mov
xor
dec
mov
push
test
lock
add
or
and
icebp
xchg
out
dec
inc
in
fisubs
sub
lcall
pop
adc
inc
scas
cmpsb
out
mov
mov
pushf
js
dec
adc
int
or
mov
cltd
daa
stos
dec
adc
or
inc
sub
add
mov
sub
bnd
mov
lods
repz
int3
out
scas
add
rorb
pmuludq
or
loop
pop
cmp
mov
xor
out
xor
jne
stos
add
pusha
outsl
out
push
jns
aaa
jno
enter
testb
cld
mov
lea
push
popf
shlb
ljmp
scas
pop
sbb
pop
or
ljmp
test
push
into
adc
and
mov
out
pop
aad
gs
or
dec
sbb
mov
popf
sub
and
dec
sub
pop
lret
jo
daa
cmp
shll
ljmp
pop
into
mov
fmull
out
fwait
or
into
movsl
dec
sbb
and
in
xorb
daa
sbb
out
mov
daa
out
dec
nop
lahf
rolb
push
jl
addr16
repnz
mov
pop
jecxz
sub
or
out
lds
sbb
jno
sub
lret
cmp
out
add
mov
mov
pop
shrb
xlat
adc
pop
test
inc
pop
cmp
dec
push
loopne
mov
test
dec
sbb
outsl
and
jno
dec
cmpl
ljmp
jle
jmp
xor
fsubrp
xchg
mov
dec
fldln2
cmp
int3
mov
jbe
pop
je
push
add
push
loope
cmc
in
lods
scas
outsl
add
jle
bound
sub
push
mov
iret
jecxz
frstor
gs
jmp
sub
dec
adc
cmpsl
cmp
into
inc
data16
into
fidivrl
push
pop
dec
into
out
or
loop
sbb
roll
roll
pusha
loope
adc
and
fisubrs
stos
mov
sub
mov
out
loope
xor
out
push
xor
push
in
out
mov
dec
out
jg
mov
inc
ror
out
in
sub
popa
in
outsb
xchg
sbb
out
add
fisubrl
out
adc
xchg
test
mov
mov
sub
lock
adc
add
repnz
pop
and
add
jecxz
pop
and
imul
sbb
imul
fisttps
imul
out
sbb
imul
xor
xchg
sub
mov
psrad
xchg
jmp
inc
xor
out
inc
sbb
scas
jge
enter
loop
psubq
pop
out
push
mov
int
push
dec
sub
sbb
in
xchg
mov
out
ret
movsl
out
inc
or
shr
inc
addb
ljmp
xor
fcomip
pop
mov
js
push
out
repz
dec
daa
mov
dec
sbb
sub
mov
lea
xor
mov
clc
push
inc
ret
jmp
clc
shll
subl
jae
stc
jns
dec
scas
addr16
insl
cmpsb
shl
aad
out
sbb
cmp
icebp
sub
push
mov
in
cmp
imulb
popf
sbb
jmp
add
loopne
test
vcmpsd
movsl
push
fs
inc
add
lret
les
push
pop
pop
cmpsb
out
dec
mov
lcall
enter
out
sub
inc
mov
jae
jecxz
mov
test
push
pusha
adc
lea
sub
pop
scas
movsl
out
adc
loope
out
xchg
out
sbb
pop
mov
into
arpl
sbb
mov
popf
cmc
fs
sbb
gs
dec
push
sub
outsb
test
stc
mov
push
mov
out
xchg
inc
adc
cld
lods
cmp
stos
sub
cmc
push
pop
pushf
fucomi
or
in
ret
mov
inc
push
xor
out
or
sub
or
mov
xchg
out
fildll
mov
nop
clc
ss
add
icebp
mov
into
clc
in
jbe
push
outsb
test
lods
dec
adc
pushl
cltd
pavgw
sub
add
out
out
imul
popf
imulb
das
adc
enter
negl
outsb
stos
sbb
arpl
push
hlt
mov
das
sub
out
adc
jnp
mul
push
push
out
jecxz
jle
decl
mov
and
in
das
fldl
mov
inc
sbb
mov
xor
in
dec
inc
xor
or
and
data16
lds
out
in
sbb
push
mov
inc
fsubl
add
call
loope
cmp
xchg
dec
cltd
sti
pop
repnz
pop
sub
dec
in
xchg
pushf
aas
bound
fs
and
xchg
pusha
mov
jmp
pop
les
jecxz
jae
cltd
lods
lods
out
in
dec
jp
cld
out
std
gs
jmp
jnp
out
test
dec
adc
mov
jae
out
lret
test
pop
adc
and
dec
loop
hlt
into
out
jg
mov
iret
adc
mov
push
fcoml
stc
sahf
cli
pop
mov
fisubrs
movsl
pop
push
pop
out
mov
sar
or
fs
pop
cli
out
sbb
mov
mov
push
loop
adc
les
sets
cmp
test
inc
push
fisttpl
out
decl
out
repz
mov
mov
shll
xchg
mov
push
push
mov
into
dec
ret
clc
sti
cs
or
or
xchg
imul
pop
out
sub
fisubrl
xchg
insb
loop
cli
dec
push
inc
xor
daa
imul
stos
jecxz
callw
pushf
enter
test
cmc
lods
mov
repz
add
repnz
inc
dec
sbb
add
popf
aad
aam
repz
or
ret
dec
xchg
push
daa
popf
or
cmc
lods
xchg
cmp
je
popa
daa
sub
and
fsubs
call
xor
ja
aaa
test
dec
imul
paddb
adc
cmpsl
pop
cmpsl
xor
cmp
inc
dec
daa
mov
shrb
cld
fsubrp
mov
stc
or
jb
test
mov
mov
push
imul
or
addr16
lcall
gs
shrl
jmp
dec
ja
cli
stc
sub
or
sub
es
mov
mov
jmp
setl
cli
incb
addr16
out
xlat
mov
cwtl
pop
jnp
sti
std
and
mov
and
js
or
mov
push
dec
or
out
aad
hlt
ss
into
mov
daa
cmc
mov
inc
in
les
fisubs
call
ss
sub
and
xor
mov
jb
sub
cmpsl
jno
insb
pop
mov
lods
mov
aad
hlt
mov
and
fists
imul
mov
inc
dec
daa
insb
push
push
sahf
push
hlt
jp
dec
call
mov
jb
scas
test
lahf
mov
aad
hlt
cs
dec
std
push
enter
cli
inc
mov
push
sbb
mov
insl
cmpsl
mov
cmpsb
aam
repz
xchg
mov
pop
cmc
mov
inc
xchg
daa
cmp
repnz
push
cld
insl
test
insl
or
mov
sbb
and
jb
mov
pusha
addr16
push
jb
jp
and
repnz
mov
cli
inc
test
jb
sub
cmpsb
fisttps
xchg
sub
and
daa
pushf
pop
lcall
js
aaa
icebp
and
cltd
xchg
out
xlat
fidivrl
lahf
mov
cmp
sub
xchg
repnz
mov
sub
mov
dec
push
dec
mov
or
out
jb
mov
adc
subb
dec
pushf
fstpl
popf
daa
pop
jb
icebp
xchg
fisubl
jmp
mov
xor
enter
ja
push
mov
dec
xor
push
cmp
hlt
jno
or
repz
out
lcall
cmpsl
dec
lret
jns
cmp
mov
inc
dec
mov
xchg
into
pop
and
in
mov
xlat
test
mov
aad
hlt
dec
dec
mov
ljmp
out
push
or
xor
push
cmc
or
imul
addr16
ss
loope
outsb
cmp
insl
call
repnz
enter
pop
test
ficomps
pusha
push
es
or
xchg
aad
call
cld
mov
rcrl
lea
clc
scas
imul
outsl
in
out
imul
mov
ljmp
pusha
sbb
push
loope
push
aad
inc
insb
call
cmpsl
xchg
pushf
xchg
cli
dec
xchg
jb
icebp
sarb
add
cs
cmp
pop
pop
cmpsl
jb
push
jnp
scas
jge
jl
jb
icebp
lahf
sub
shll
daa
or
cmc
jecxz
mov
mov
cld
sar
dec
cmp
icebp
insl
movl
daa
push
jmp
psubsb
stc
sbb
jno
in
mov
xchg
imul
push
inc
inc
daa
ret
dec
lea
fldt
rcl
xchg
dec
or
cwtl
insb
inc
mov
add
ja
mov
fsubp
lods
mov
pop
enter
test
cmpsl
and
cmp
std
jle
push
cwtl
adc
mov
mov
mov
jnp
jae
add
mov
sub
lahf
cmpsl
pop
jno
sub
insl
sub
mov
pop
clc
out
imul
enter
test
stos
mov
loop
pop
push
pop
shlb
test
mov
movsb
or
push
sub
and
cli
cmpsl
hlt
mov
pusha
stos
loopne
into
jae
cmpsb
dec
mov
movsl
aad
push
fcmovnbe
je
pop
push
jne
bound
cmpsl
ja
addb
addr16
inc
mov
daa
cli
lret
sub
scas
fs
outsb
inc
mov
sub
cmp
xchg
cld
icebp
mov
and
jne
dec
mov
test
ficomps
jb
mov
lds
xchg
imul
sbb
imul
not
push
bt
add
not
rcl
push
xor
shld
bts
shl
push
cmc
sbb
push
shl
stc
mov
shrd
lea
bsf
shrd
mov
sbb
mov
shr
xor
mov
lods
rcr
rcr
not
sub
neg
shl
neg
stc
ror
sub
ror
sub
adc
dec
sub
neg
setae
call
push
call
movl
call
sub
pop
pushf
lock
push
and
mov
daa
sbb
xlat
fisubl
lock
pop
pop
in
sbb
push
pop
call
movsl
push
push
ljmp
dec
dec
test
or
pusha
mov
mov
dec
cmp
jb
scas
in
adc
cmp
insb
iret
dec
pusha
jle
mov
negb
lret
or
sbb
repz
xchg
sbb
jb
mov
pop
popa
add
add
adc
adc
pop
pop
sbb
test
fldcw
lea
or
idivb
sahf
push
xchg
adc
aaa
daa
push
adc
pop
pop
mov
pop
inc
jb
cltd
xchg
aam
inc
scas
std
xor
mov
xor
sub
and
lods
pop
add
outsl
dec
imul
das
jnp
xchg
jecxz
xor
add
mov
in
adc
add
call
fstps
cmp
fwait
add
jo
and
and
addr16
fimull
js
and
out
notb
sub
cwtl
stos
mov
and
mov
lods
sti
xchg
and
pop
dec
mov
inc
jo
outsb
out
xor
sbb
loop
mov
sbb
daa
jp
arpl
xchg
or
sub
or
ficompl
fdivs
or
nop
int3
aam
stos
mov
or
pop
js
mov
sbb
xor
orb
int3
xor
es
les
outsb
lock
dec
daa
or
jns
hlt
stos
aaa
sub
xor
adc
bswap
mov
bswap
pop
pushf
movw
jmp
neg
clc
jmp
lods
mov
mov
and
pop
pop
fidivrl
test
ljmp
dec
dec
aam
push
sbb
push
cmp
cli
cmp
push
mov
xchg
fwait
push
daa
pop
mov
pop
ret
xchg
cld
or
shrb
and
push
and
into
shlb
xchg
ja
out
movsb
jbe
cmp
aam
pop
adc
xchg
dec
and
push
or
jns
xchg
stc
cmp
insl
jns
mov
xchg
cmp
pop
mov
sbb
ret
lods
xchg
sahf
insl
xorb
insb
out
xor
iret
fnstenv
dec
cmp
sub
fs
imul
in
mov
loop
pop
or
lock
pop
popf
in
lock
adc
lea
ja
pushf
sbb
add
adc
cmc
mov
jmp
testb
push
and
je
das
jle
lock
cmp
jge
sbb
cld
and
cli
and
lahf
call
scas
inc
push
fs
push
leave
sarl
mov
pusha
mov
test
sarb
mov
xchg
jmp
add
clc
pop
jnp
adc
cmp
mov
adc
pop
mov
adc
lahf
cmp
shlb
sub
cmp
mov
jo
ljmp
fistpll
fs
and
push
or
push
hlt
sub
jne
pushf
in
pusha
push
sbb
fcomip
pop
arpl
push
adc
xchg
push
cmc
loop
out
jo
sbb
pusha
cmp
adc
imulb
stos
push
in
hlt
jns
mov
xchg
decb
mov
lea
jmp
popf
test
sub
test
loope
and
and
insl
rolb
mov
pop
loope
daa
cmp
insb
cmp
sub
dec
dec
push
test
dec
mov
push
out
addb
push
lcall
sahf
jbe
shll
mov
mov
sti
shl
xor
mov
mov
sbb
leave
aam
mov
mov
inc
add
inc
cs
insl
push
inc
aad
push
mov
cmpsb
mov
stos
or
fnstcw
xchg
inc
jne
push
fwait
cli
outsl
push
bound
inc
dec
mov
shll
push
out
jno
insb
movl
adc
ret
lret
dec
push
or
sub
dec
mov
and
rcrl
hlt
inc
cmpsb
jo
jns
jecxz
test
shll
shr
add
push
push
xor
int3
xchg
mov
add
sbb
fisttpll
inc
and
rcrl
jb
jo
mov
dec
adc
pusha
lea
jae
stc
jmp
push
lea
jb
pusha
movw
pushl
ret
mov
pushf
lea
shrd
mov
rcr
stc
bt
mov
and
dec
daa
sub
adc
rcr
stc
push
sar
push
setge
push
test
btc
aas
bsf
xor
cwtl
pusha
lea
push
mov
call
movzwl
not
pushl
pusha
call
xchg
lahf
bswap
pushf
movl
cwtl
bswap
movsbw
mov
lea
pusha
movl
pushf
pushf
pushl
popl
pusha
mov
pushl
ret
xchg
xchg
xchg
test
imul
cmp
testl
xchg
js
dec
dec
cmp
lock
and
sbb
call
insb
addl
jbe
add
jnp
bound
int
js
dec
pop
mov
inc
or
dec
adc
cltd
subb
lcall
dec
es
inc
cmc
sub
loop
clc
jl
xor
test
lahf
sarb
xchg
xor
pop
inc
shll
and
rcr
fcmovnb
rcl
cmc
in
cmp
xchg
or
xchg
jne
std
fidivrs
ss
sbb
mov
fsubl
mov
fistps
insb
or
leave
lock
cmp
inc
sub
std
jo
lods
adc
push
into
add
xor
int3
mov
adc
or
adc
insb
cmovg
push
xchg
sarb
jae
leave
movsl
out
xor
dec
arpl
adc
aas
add
ss
adc
mov
int
outsl
sbb
loope
dec
cmp
cmp
aam
cwtl
adc
mov
lock
mov
or
push
jecxz
fstl
shll
cmp
push
jne
add
push
jmp
cmp
shl
sbb
mov
arpl
mov
pop
aaa
mov
ljmp
inc
adc
fistl
pop
and
mov
xlat
pushf
mov
in
and
cmp
in
fsubrl
add
push
inc
mov
cld
mov
xchg
int3
push
stos
mov
in
sbb
pop
sub
in
call
lcall
cmpsl
aas
pop
in
sbb
dec
fs
fildll
pop
push
cmp
cld
push
push
fistps
jb
arpl
inc
mov
or
adc
add
addr16
fwait
lds
jbe
pop
jnp
mov
daa
daa
jp
adc
xlat
cmp
cltd
or
and
pop
arpl
ljmp
sub
dec
xchg
shll
push
cwtl
lods
stc
sbb
jne
pop
scas
ss
mov
test
ret
ja
xchg
ja
cwtl
es
sbb
jecxz
pop
jnp
gs
outsb
push
xchg
shll
popa
dec
adc
cmp
shrl
xor
mov
rolb
addr16
or
push
xor
pop
in
ja
or
or
cmc
mov
or
cmp
mov
bound
xor
popa
pop
addr16
js
mov
cltd
insl
xchg
add
pop
push
inc
xor
dec
test
je
push
mov
push
push
dec
inc
fisubrl
xor
ljmp
repnz
les
push
xchg
or
and
push
scas
mov
out
rcll
mov
cmp
imul
or
clc
bt
cmp
lea
pushf
pusha
call
push
pusha
movl
pusha
call
std
hlt
fsub
lret
or
xchg
mov
sbb
and
aad
dec
push
dec
cmpl
push
sub
adc
sbbb
gs
adc
fistps
adc
inc
out
cld
out
and
fdivp
mov
into
out
dec
ss
int
sub
js
push
lret
imulb
ljmp
ret
addb
or
sbb
cs
mov
bound
dec
mov
or
loop
lods
pop
lret
das
std
xchg
int3
bnd
scas
pop
or
pop
stos
in
movsb
roll
ljmp
lods
inc
mov
repnz
or
fldt
lods
mov
in
rolb
out
into
or
data16
loop
jmp
cmp
dec
xor
sarb
jmp
dec
lods
into
bsr
scas
cwtl
icebp
jnp
into
mov
inc
cmp
sbb
loop
loop
mov
lea
in
push
arpl
or
sub
int3
jbe
mov
jmp
scas
in
repnz
test
cmpsb
mov
sub
addr16
aas
push
loop
fadd
sub
in
in
xor
loope
icebp
in
mov
ja
shrb
cmp
ljmp
mov
leave
inc
in
pop
ss
cli
jmp
arpl
in
pop
adc
es
mov
lret
jmp
cmp
in
inc
ss
sbb
pushf
ljmp
mov
call
push
cli
cmpsb
out
sub
mov
enter
cmp
push
jmp
fists
aad
jne
scas
fimull
in
and
or
jbe
cmp
cmp
lret
in
enter
pusha
gs
dec
lahf
aad
pop
lcall
dec
adcb
jl
jmp
xchg
call
sti
pop
in
imul
int
sub
int3
mov
rorb
enter
sub
sub
fs
outsb
xchg
test
ljmp
inc
cmovp
out
xchg
cld
in
div
imul
jecxz
cmc
insl
ja
xchg
lret
jnp
push
outsb
test
mov
jo
jns
loope
xchg
lock
jno
pop
bound
js
gs
ljmp
icebp
cmc
mulb
test
lret
out
insl
clc
xchg
addr16
in
sti
test
lret
insb
insl
jae
xchg
lret
xchg
lret
push
test
lret
jmp
stc
lret
loopne
std
bound
loop
fs
bound
data16
loope
jmp
lods
icebp
lock
cld
test
int
push
out
xlat
jl
sub
sbb
mov
mov
xchg
inc
out
lds
mov
and
in
int
cmpsb
ljmp
pcmpeqw
out
mov
xchg
pop
out
push
idiv
cmpsb
pushf
xchg
mov
adc
out
cmp
jne
jns
pop
push
imul
mulb
and
sub
adc
data16
in
pop
mov
mov
and
dec
into
sti
cmp
and
jb
test
loopne
loopne
test
cs
popa
and
das
scas
pop
jne
ljmp
fisttpl
leave
jmp
aad
jl
movsb
scas
popa
pushf
fsubrs
out
cltd
mov
in
jp
sahf
scas
sub
in
nop
mov
mov
lods
push
in
scas
mov
cmp
int
fimull
fisttpl
adc
lret
jmp
mov
in
sbb
lcall
in
cmpsl
inc
fmuls
sub
bound
scas
cs
gs
in
stos
cld
rorl
fists
js
out
mov
or
mov
insb
jmp
les
loopne
call
out
mov
pop
cmpsl
out
mov
xchg
jnp
pop
imul
enter
mov
addr16
cmpsb
unpckhps
or
adc
outsl
int
or
jmp
and
adc
out
into
nop
repnz
cmpsl
shr
mov
mov
out
push
mov
mov
out
add
mov
jle
and
das
decl
bswap
sub
pop
in
shl
data16
and
ljmp
imul
or
out
lea
outsb
sahf
mov
sbb
stos
int3
scas
add
fisttps
psrlq
or
mov
test
popf
mov
push
ljmp
inc
inc
mov
or
dec
adc
cmp
xchg
roll
mov
outsb
std
mov
jecxz
lock
adc
add
xor
fmul
out
movsb
rclb
xchg
inc
and
push
es
imul
loopne
or
cli
xchg
into
sub
rol
add
adc
fs
add
push
cmpsb
mov
dec
or
int
insl
adc
push
jmp
or
push
outsb
inc
jmp
cmp
sub
out
mov
insl
jo
subb
mov
stos
inc
add
stc
jmp
mov
cmp
imul
out
mov
sub
stos
push
daa
call
xor
sbb
test
imul
push
or
and
mov
repz
mov
addr16
push
clc
loope
insb
cmp
jl
out
and
dec
lret
and
jge
pop
sub
outsb
push
mov
add
and
outsb
rol
mul
std
int
lods
lret
int
leave
std
lock
out
loopne
clc
cld
push
jl
aad
jle
jo
leave
loop
jne
in
cld
js
in
je
lods
in
arpl
int3
enter
out
imul
inc
xchg
out
out
out
jecxz
out
jmp
repnz
mov
push
lret
loopw
add
xor
sahf
movsb
ljmp
subb
dec
test
inc
push
dec
orb
xchg
insb
and
jae
popa
outsb
out
loopne
loopne
les
icebp
cli
mov
mov
addr16
mov
in
out
loop
dec
jge
ljmp
in
adc
fsubrl
scas
jo
into
loope
cs
sub
mull
ljmp
jl
popa
jp
outsb
lods
js
es
loopne
add
loope
imul
jbe
hlt
and
enterw
fs
movsl
in
popa
insl
or
stos
hlt
mov
movsl
loope
loope
int3
gs
mov
or
loopne
jmp
jnp
cltd
fmul
mov
aad
repz
das
lods
lea
icebp
imul
lods
scas
cmp
in
xchg
mov
mov
push
mov
loop
jb
in
adc
fisubs
outsb
push
cltd
rorb
stos
xor
sub
popa
fiadds
in
roll
hlt
xor
out
filds
mov
fwait
gs
push
xor
movsl
aaa
xchg
ja
stc
loopne
push
shrl
sub
sub
dec
mov
pop
nop
and
gs
cmc
stos
imul
scas
push
jne
sahf
and
jmp
call
data16
in
in
mov
inc
je
call
push
loopne
fildll
data16
into
pop
icebp
mov
jl
jnp
popaw
dec
or
divl
push
mov
das
inc
mov
and
popa
nop
xchg
adc
or
jl
repnz
cmpsb
inc
sbb
mov
std
or
aaa
icebp
out
int
mov
es
pushf
mov
sahf
cltd
mov
pop
cmp
sub
outsl
scas
dec
cli
loope
sbb
out
xor
lods
cmpsl
arpl
sarl
es
sbb
ljmp
cli
popf
inc
ret
lahf
test
jo
pop
arpl
cmpsb
out
sub
inc
add
sbb
jne
jo
and
jae
insb
mov
cmpsb
push
in
pop
mov
test
mov
andl
in
loope
test
mov
push
and
sub
insl
pop
aam
ror
inc
cmp
mov
mulb
pslld
inc
jp
div
push
push
ss
imul
je
out
ss
mov
iret
stos
sub
sub
fdivl
sti
mov
push
ret
xchg
dec
int
es
shll
arpl
bound
jmp
stos
and
sub
lret
ror
test
jne
pop
popa
jnp
stos
imul
push
jb
mov
add
testb
jp
jns
pop
add
movsl
mov
jne
shll
imul
mov
int
fiaddl
fs
push
ret
add
incb
test
jmp
xchg
jle
push
mov
add
loope
sbb
xabort
and
cwtl
adcb
stos
dec
in
stc
gs
adc
fs
mov
pusha
fsub
cli
imul
in
out
clc
daa
es
int3
icebp
cmc
addr16
jb
out
sbb
popa
scas
movb
xchg
call
in
in
addr16
shrb
gs
sbb
bound
push
data16
mov
fs
lret
jge
mov
in
loopne
inc
add
sti
push
loopne
jbe
gs
in
loope
repz
dec
gs
sub
mov
in
in
sub
loope
push
int
sub
imul
mov
dec
stos
in
xchg
push
out
cmc
mov
mov
push
inc
xchg
inc
push
jo
push
outsb
insl
gs
in
jge
js
jp
movsb
pop
mov
bound
stos
gs
cld
stos
lret
in
or
lods
test
hlt
jbe
or
cmp
sub
jmp
mov
xchg
and
cmp
daa
test
xchg
loopne
imul
in
lock
lret
stos
or
lahf
sub
jp
mov
pushf
inc
in
mov
ficompl
addr16
test
push
arpl
movsb
cmc
dec
push
pusha
xchg
jb
jp
xlat
lods
lods
pusha
mov
sub
jecxz
add
lret
and
dec
movsl
inc
insl
call
int
sarb
sub
int
ret
lahf
out
mov
int
std
scas
es
daa
cli
out
add
aas
lret
inc
test
scas
pop
mov
inc
mov
scas
shr
movsb
stos
and
test
xor
cmc
push
ljmp
push
shlb
xchg
jb
ret
pop
or
cmc
mov
xlat
push
insb
cld
stc
pop
inc
insb
sub
aad
or
faddl
scas
mov
out
sub
pop
repz
add
sbbb
dec
insb
ffreep
and
add
jp
pushf
outsb
add
adc
lds
lret
inc
ljmp
call
addb
insb
push
jae
gs
and
aaa
dec
and
cmpb
es
pop
cld
fimull
sub
shrb
in
cmpsb
mov
mov
insb
xchg
push
into
cmp
xchg
out
imul
push
out
jno
mov
inc
or
imul
push
addr16
imul
mov
jnp
in
imul
cmp
in
int3
sahf
insl
sub
addr16
fs
jmp
out
imul
icebp
fst
std
add
jbe
lret
data16
insl
ror
clc
gs
jecxz
js
mov
andb
loopne
popa
bound
push
jbe
mov
inc
shrl
sub
insw
loope
sbb
xchg
jl
dec
in
loop
data16
out
inc
jo,pn
inc
out
in
inc
xchg
sahf
repnz
fstl
outsl
ret
and
push
or
sub
cmp
jb
repnz
jae
repz
ljmp
sub
popf
dec
shll
out
and
sete
movl
dec
clc
mov
outsl
mov
insb
and
inc
je
add
push
pmulhuw
insb
pop
neg
lea
sti
add
popf
inc
xorb
adc
in
sbb
mov
jecxz
ljmp
inc
icebp
movsb
sub
rorl
in
or
xchg
in
add
aam
xchg
lods
outsl
std
and
pusha
bound
sub
movsl
fisubl
enter
mov
xor
mov
or
pop
and
hlt
pop
inc
jb
movsb
in
ffree
test
out
dec
int
pop
int
unpcklps
icebp
inc
fcomp
inc
repnz
mov
sub
out
or
dec
imulb
std
mov
push
in
xchg
les
movsb
add
adc
dec
jbe
test
frstor
popf
aas
in
sahf
jbe
jmp
add
mov
or
test
enter
dec
gs
lock
mov
add
bound
addr16
ljmp
xchg
push
jmp
xchg
call
popf
push
jb
sbb
mov
loope
sbb
sbb
bound
cmp
add
jle
dec
mov
cmp
lret
sbb
cld
push
jmp
sub
out
xchg
movsb
lock
jae
movsl
cmpsb
push
mov
xchg
insl
cld
xor
dec
out
push
push
jmp
js
imulb
scas
pusha
dec
sahf
ss
cmp
jo
mov
insl
lds
fwait
leave
loope
xor
aam
jae
mov
hlt
push
fidivs
dec
lea
call
neg
ja
cld
je,pn
jbe
js
fdivrp
scas
cld
push
mov
loopne
jl
insl
loop
in
out
in
test
jmp
in
lods
xchg
movsb
mov
pop
pop
leave
sahf
jbe
mov
pop
or
call
movsl
inc
lds
or
jmp
icebp
lcall
movsl
popf
insl
mov
sbb
jg
inc
cmp
xlat
scas
mov
negl
loope
and
cld
mov
mov
fcmovb
loopne
push
mov
stos
imul
andl
cmpsb
cld
push
lret
bound
data16
movsb
mov
in
inc
jns
cld
fcomp
fxam
sub
xchg
test
leave
jbe
aam
xchg
test
lods
lds
mov
mov
jle
cld
js
add
shrb
data16
inc
mov
jb
imull
pushf
inc
inc
mov
imul
insb
lcall
push
push
call
mov
faddl
push
and
sub
stos
repnz
inc
arpl
jns
mov
mov
and
inc
insl
les
lods
push
pop
xchg
int
sbb
mov
pop
les
lods
pop
fildll
in
pop
jns
mov
cmp
movsb
dec
and
ret
pop
pusha
stos
movsb
pop
lods
xchg
inc
scas
pop
int3
movsb
xor
movsl
cmp
rcrb
outsb
jp
jmp
and
divb
cli
test
in
les
jge
in
movsb
icebp
xchg
shrb
aad
cli
mov
mov
push
jb
push
out
insl
fsubl
push
std
loope
lahf
push
mov
cmp
fdivl
add
mov
jecxz
sub
lret
jb
icebp
mov
movsb
mov
int
in
sub
mov
push
push
mov
outsl
adc
loope
loop
lods
xchg
xor
outsl
outsb
pusha
int
js
shl
mov
movsb
mov
xchg
jbe
inc
popa
in
xchg
mov
xor
lods
jbe
sub
add
lret
sbb
insb
divl
cmc
insl
ja
dec
imul
insl
insl
test
xchg
pop
mov
push
xchg
jnp
cmc
out
in
outsl
out
xlat
popf
enter
pop
push
testl
cltd
xlat
movsl
fmuls
rorb
outsb
sahf
sub
fwait
pop
js
stos
insl
clc
scas
test
push
sub
int3
scas
lock
mov
outsl
cmpsb
sbb
fldl
push
sub
mov
in
icebp
xchg
mov
or
mov
das
jno
call
xor
out
jae
cmp
outsb
into
movsl
mov
pop
test
stos
imul
cmc
push
jle
add
mulb
and
adc
mov
stc
out
es
xor
sub
ret
faddl
mov
and
pop
dec
push
jb
xchg
cld
sub
lods
sbb
orl
fsubr
sub
or
ds
enter
test
or
movsb
xchg
jl
jmp
push
mov
test
pop
sbb
sbb
cmp
fistl
js
outsb
js
mov
lock
or
pop
icebp
push
xor
imul
std
in
mov
movsb
sarl
jno
inc
repnz
fdivrp
stc
xchg
inc
icebp
subb
cmpsb
in
ja
sti
sub
pop
in
out
fidivrl
sarb
mov
and
jecxz
cmpsl
sbb
xor
xor
sub
test
mov
pusha
and
mov
fnsave
call
icebp
sub
lret
int3
insl
addr16
lea
test
jmp
in
fsub
stos
lahf
data16
jnp
mov
in
std
scas
inc
int3
in
stos
stos
and
sub
out
gs
fsubl
pop
cmp
js
icebp
mov
hlt
fmul
repnz
xor
daa
fisubrs
in
fsub
stos
in
mov
add
lds
ret
lock
pusha
xor
sbb
in
add
pop
adc
shl
call
shll
inc
sub
jne
pop
cld
lcall
add
mov
pop
dec
sub
add
rorb
call
sub
call
push
and
push
xor
and
and
and
push
test
imul
adc
and
mov
inc
and
andb
jmp
cmc
outsl
pop
sbb
push
mov
push
sarl
pusha
mov
inc
mov
push
insl
and
adc
cmp
fucomip
lea
cmp
dec
stc
movsl
sub
xchg
in
mov
mov
adc
add
stos
jo
cmp
cld
movsl
mov
pop
sbb
jbe
sub
shl
mov
mov
hlt
mov
mov
push
sbb
movsl
push
jl
mov
inc
fnstsw
xor
je
imul
push
pop
push
sub
cs
bound
fsubr
es
test
jmp
std
or
enter
ror
outsb
scas
negl
into
cs
cmc
jmp
repz
lock
jae
or
test
jne
in
insb
shlb
icebp
scas
cmc
into
push
loope
test
dec
add
dec
lds
in
ja
and
jmp
jmp
mov
xchg
in
outsb
lods
cs
cmpb
add
fildl
dec
sbbb
jecxz
xchg
les
fs
jecxz
xor
jl
movsl
jns
fldcw
push
sub
lock
loopne
and
std
mov
loop
mov
cmc
jecxz
lcall
cmpb
adc
scas
insl
add
jecxz
test
call
loop
or
cmp
ret
cmp
fs
xchg
leave
roll
push
addr16
mov
pop
test
int
inc
or
xchg
sbb
out
jmp
xor
insl
addb
adc
and
push
jge
ljmp
xor
call
lods
add
cmp
iret
mov
sbb
lea
lcall
push
in
inc
rolb
jecxz
add
mov
pusha
mov
mov
das
sbb
lea
call
cmp
sub
pusha
pusha
lea
js
jne
call
lea
jne
and
btr
shrd
push
mov
test
stc
pushl
or
jmp
mov
not
mov
jmp
es
out
or
pop
fwait
xchg
lods
mov
inc
jbe
cltd
pop
cmp
cmp
inc
stos
or
insb
or
or
ficoml
ljmp
mov
adc
enter
xor
xor
imul
or
dec
pop
push
dec
xor
xor
jmp
into
pop
jbe
dec
insb
test
repnz
cmp
jae
or
and
arpl
cltd
sub
cmp
or
xchg
xchg
fs
xor
lds
jmp
xor
add
pushf
gs
lods
dec
push
inc
shll
and
pushf
pop
imul
pop
or
mov
adc
fcoml
hlt
push
cmp
or
push
and
fs
pop
addl
cmp
jno
popf
pop
int3
add
mov
mov
and
je
pushf
rcl
shld
rol
mov
jmp
lea
call
pusha
pushf
lea
jmp
adc
push
inc
or
pop
mov
cmpsb
mov
cmpsb
lret
or
mov
and
jmp
out
or
mov
cs
mov
mov
jbe
sub
push
xor
leave
inc
ja
shrl
mov
out
jmp
movsb
or
jae
sbb
xchg
cwtl
mov
xlat
pop
aam
pop
sbb
call
je
imul
ds
dec
xchg
jo
pop
and
dec
fld
ret
pop
xor
jbe
stos
cltd
xchg
pushf
shll
add
lods
mov
loope
jp
jecxz
js
bound
dec
aam
xchg
imul
pop
add
shlb
xchg
sub
pop
fisttpll
jecxz
inc
jns
pop
jne
cmpsb
xchg
lea
aaa
sub
mov
xchg
ret
stc
cmp
test
cmc
cmpb
call
jmp
pusha
lea
je
call
cmp
call
setno
mov
mov
mov
jmp
sub
mov
jmp
xor
cmc
and
mov
xchg
mov
ds
pop
sbb
or
inc
out
mov
add
push
mov
sahf
imul
leave
ret
push
into
dec
loopne
std
xor
and
and
sbb
fidivs
test
fisubrl
cmpsb
jg
sub
fs
jns
mov
push
push
push
jp
in
test
pop
or
gs
adc
stc
neg
bt
stc
test
shr
call
lea
jb
test
jb
cmp
jae
push
lea
ja
shl
add
rol
mov
stc
cmc
push
bt
cmp
pushl
jmp
call
inc
push
das
xor
xor
and
jg
adc
xor
xchg
xchg
mov
out
bound
mov
int3
cmc
hlt
hlt
dec
cmpsb
and
cs
or
test
add
ds
jbe
sub
jl
loope
outsl
mov
int
nop
js
xchg
jne
xchg
jb
fbld
pop
xor
stos
enter
jae
add
and
popa
pop
aaa
cmc
sub
add
ljmp
push
dec
dec
jb
aad
pop
cmp
lcall
cmp
xor
pop
inc
cs
fldt
rolb
mov
cmp
pop
shll
adcl
cmp
in
in
pop
xchg
jge
pushf
mov
and
push
cmp
xchg
sub
aad
and
lods
adc
orl
or
add
aaa
jae
in
mov
repnz
sbb
test
in
cmp
and
loope
mov
out
loop
lods
mov
jnp
pushf
popa
jg
add
inc
cmp
lret
sarb
mov
jp
mov
rorl
inc
mulb
cmp
xlat
pop
test
xlat
hlt
mov
sub
stos
rolb
call
adc
cmp
pop
fldt
fbstp
scas
les
cli
adc
in
std
bound
daa
dec
pop
mov
outsb
mov
int3
adc
scas
jno
adc
not
bt
pushf
movb
neg
pushf
bt
call
sub
clc
push
adc
int
int3
popa
sahf
pop
pop
sbb
mov
lock
fldt
jmp
jecxz
jg
xlat
sub
daa
dec
and
xor
sbb
jg
incb
mov
gs
mov
daa
push
jmp
daa
adc
dec
dec
xchg
loop
fwait
jbe
push
push
iret
dec
xchg
inc
pop
sbb
pushl
sbb
pop
pushf
in
popf
mov
jg
iret
and
xor
mov
dec
jb
adc
push
btc
bsr
mov
push
cmc
push
cmp
shl
mov
jmp
add
dec
outsl
arpl
inc
jb
add
shlb
and
jne
inc
mov
push
pusha
cmp
or
pusha
movb
mov
lea
je
lea
bswap
movzbw
lea
pusha
bswap
movzwl
not
movsbw
movsbl
lea
jmp
aad
inc
mov
cmp
or
mov
shlb
lcall
mov
jmp
xor
roll
repnz
dec
insb
shl
mov
repnz
ficoml
cvtdq2ps
adc
sbb
je
call
push
push
or
gs
or
jb
dec
dec
cmc
fisubrl
lds
sbb
enter
xacquire
mov
xlat
or
fildl
adc
movl
lea
jne
pushf
mov
pushf
lea
jmp
call
call
push
lock
std
std
addl
mov
and
sub
mov
jge
bound
mov
pop
mov
xor
jns
sub
jge
imul
jb
mov
add
loope
sub
xlat
test
or
sub
mov
aam
jbe
jecxz
xchg
push
cmpsb
stos
in
adc
pop
xchg
push
xor
jmp
sbb
dec
movl
push
lea
jmp
mov
mov
add
orl
lock
mov
shlb
lds
cmp
scas
mov
out
test
sbb
adc
ret
mov
mov
push
inc
sub
insb
dec
outsb
mov
into
mov
stc
push
add
imul
stos
scas
mov
sarl
mov
xchg
int
jo
mov
insb
lock
add
sub
ffree
pusha
test
cmp
jmp
movb
call
push
bt
pushw
popfw
movb
inc
movb
push
adc
lea
push
mov
movl
mov
pushl
ret
sbb
mov
fldt
inc
and
divb
push
bound
insl
xchg
or
icebp
stc
outsl
scas
jns
push
cwtl
xchg
mov
sub
call
cmp
repz
je
push
imul
mov
add
cld
jmp
fdivrl
loopne
jb
jle
and
cmp
pop
sbb
jmp
clc
sub
stc
rcll
add
pop
gs
imul
pop
sahf
nop
movsl
in
dec
add
pop
out
subb
es
ficompl
insb
inc
les
cmp
loopne
lock
push
lcall
aam
ret
push
negl
addl
mov
outsb
imul
mov
dec
ja
fwait
inc
js
jge
sbb
lahf
lcall
movsb
insb
dec
pop
sub
pop
fs
clc
shr
ss
mov
stos
inc
fndisi(8087
mov
mov
cwtl
gs
adc
xor
call
sbb
int3
or
shl
lods
xchg
fisubs
pop
data16
fidivrs
ucomiss
scas
mov
jno
mov
and
add
push
outsb
jg
lcall
dec
aam
cmp
adc
jnp
mov
or
sub
fsub
addr16
pop
cltd
dec
cmp
and
cltd
add
cmc
cmp
and
nop
int3
add
call
pop
mov
xchg
stos
xchg
addb
lret
mov
imulb
add
insb
sbb
jge
enter
clc
cmp
fisubs
pop
inc
xorl
xchg
xor
jl
and
jp
aaa
adc
and
sbb
cmpsl
sub
cmpsb
jne
and
mov
push
adc
add
sbb
xchg
jmp
jae
pop
xor
or
divb
into
jecxz
lcall
lds
jmp
fadd
lret
movhps
out
and
inc
add
push
and
mov
int3
xchg
lahf
mov
adc
dec
test
adc
imul
pop
push
pusha
out
movsb
idiv
in
xchg
sub
xchg
adc
sub
iret
push
dec
mov
mov
cmpsl
mov
sti
mov
int
mov
in
dec
pop
adc
pushf
call
push
outsl
andl
rcl
xchg
adc
in
repnz
and
out
add
mov
movsb
dec
fnsave
sub
fstl
and
xor
jb
mov
inc
out
in
pop
dec
movsl
cmpl
arpl
outsb
cmpsl
loope
aas
xor
lahf
sub
rorb
loop
stos
jmp
cltd
push
orb
shrb
adc
add
scas
push
push
pop
xor
mov
lods
jmp
lods
lock
loopne
stos
mov
je
xor
loop
out
and
mov
mov
lahf
mov
sub
jbe
or
rorb
into
stos
sbb
sub
push
bound
add
xchg
mov
cwtl
push
pushl
add
ljmp
sub
dec
scas
fwait
xchg
push
push
sbb
das
stos
xchg
adc
cmc
inc
mov
aaa
fs
iret
dec
dec
aad
cld
in
inc
loopne
lret
orl
add
arpl
xchg
in
add
xor
pusha
mov
call
cmp
fdiv
out
outsb
and
cmpsb
adc
pop
popf
shrl
andl
cmp
inc
arpl
negb
lea
nop
addr16
sbb
scas
mov
push
imul
sub
push
rcll
mov
cwtl
cltd
jnp
clc
adc
sub
jmp
ficoms
cmp
pusha
call
neg
push
call
push
daa
dec
sub
les
jns
fwait
jne
mov
fsubrl
iret
scas
mov
and
lods
icebp
mov
pop
es
mov
dec
movsb
mov
mov
out
negb
es
cwtl
lea
je
sub
mov
lea
je
not
movzbw
bswap
movsbw
mov
bswap
pushf
movzbw
lea
pushf
movw
jmp
rol
out
insl
xor
hlt
popf
mov
cmp
ja
xchg
call
nop
mov
mov
jp
sbbb
xlat
iret
cmpsl
stos
pop
cmpsb
pop
sbb
and
jne
mov
push
and
mov
adc
fs
lods
mov
sbb
push
mov
pop
ss
sbb
imul
sbb
fisttpll
inc
and
call
in
test
mov
popa
push
push
push
call
and
cmpb
jg
and
xchg
mov
js
movsb
jnp
inc
push
repz
mov
out
lret
dec
aam
rolb
pop
sub
inc
mov
push
sbb
pusha
bound
cmp
stc
test
mov
dec
push
fisubrl
std
ret
or
xor
and
scas
adc
iret
pop
outsl
scas
xor
adc
mov
pushf
call
adc
movb
movb
pusha
push
lea
jmp
sar
mov
push
test
jecxz
mov
jae
rclb
add
push
sarb
in
enter
sbb
push
sbb
test
lcall
call
in
sub
dec
mov
std
and
lahf
adc
dec
jge
jg
mov
cmp
lahf
fdivrl
bound
ja
lcall
cmp
out
mov
in
outsb
in
sbb
jo
cmpsb
mov
or
or
cli
pop
jne
fwait
adcl
call
bound
adc
inc
and
popf
pop
mov
pushf
lea
jmp
add
inc
gs
outsl
fs
gs
imul
add
lods
add
add
xor
pushf
xor
lea
jmp
mov
jmp
lea
call
call
dec
call
jnp
insl
cmp
mov
push
mov
scas
int
push
jle
adc
xlat
into
and
mov
in
sbb
repnz
iret
ror
jno
sbbl
add
shlb
mov
test
fidivrl
adc
push
call
test
stc
add
push
pushf
pusha
lea
jne
pushf
jmp
mov
pusha
push
pushl
ret
mov
test
add
jmp
pop
inc
outsl
lods
icebp
sub
pop
repnz
cld
adc
mov
pop
cmpsl
das
jnp
aas
xor
jmp
mov
pop
inc
push
imul
jmp
in
xchg
or
cmpsb
mov
jb
mov
pusha
in
stos
add
xchg
es
dec
push
xchg
or
mov
pop
dec
out
push
rcrl
repz
dec
jns
add
and
mov
lret
movl
pushf
push
lea
jmp
not
pusha
clc
jmp
lea
je
pushf
mov
push
jmp
pushl
popl
pushf
mov
pushl
ret
imul
xchg
movsb
nop
xor
das
mov
mov
out
add
sub
and
das
sbbb
and
add
jg
inc
insb
rorb
in
xor
loop
scas
mov
xchg
fidivs
das
out
arpl
ficoms
dec
sub
jae
in
cli
adc
popa
pop
es
test
scas
inc
dec
jns
je
cmp
jmp
jb
das
cmp
dec
add
or
out
mov
push
adc
rol
orb
adc
call
cld
stc
pop
daa
xor
ds
xor
int3
loopne
cmpb
in
cmp
stos
cmp
and
mov
and
daa
mov
mov
bound
xchg
popl
dec
push
jecxz
int3
xchg
imul
push
cmp
icebp
mov
jb
mov
xor
pop
imul
in
xchg
mov
in
pop
pop
xchg
inc
cmp
lds
adc
xlat
or
mov
mov
lds
jge
add
jmp
jmp
call
xchg
xchg
cmp
pop
test
adc
in
iret
push
push
mov
mov
vmovsldup
sbb
loop
add
ja
sub
rcrb
in
inc
xor
or
adc
clc
jmp
jnp
popa
and
dec
push
pop
mov
jmp
hlt
adc
add
jno
fisubrl
xor
clc
daa
enter
mov
fisubs
loop
ret
inc
insb
xchg
jb
insl
pusha
and
scas
xchg
mov
out
rcll
mov
cmp
insb
pusha
pusha
jmp
lea
jne
setg
lea
mov
pusha
pushf
lea
jmp
push
push
push
mov
add
mov
daa
sbb
inc
add
sub
stos
jp
mov
in
pop
sub
out
pushf
fwait
mov
nop
pop
insb
mov
push
sti
fdivrs
aam
bound
dec
les
jo
jno
xchg
notb
cmp
inc
sub
xor
rcrl
roll
out
mov
fisubrl
add
fmull
into
lods
inc
fcompl
xor
arpl
pop
int
push
pop
mov
inc
mov
repnz
adc
push
lock
std
std
test
xchg
outsb
jb
cmpps
int3
pop
or
mov
pop
test
xor
ficomps
popf
jge
sbb
add
dec
inc
xlat
and
aam
pop
les
loop
es
test
shrl
add
div
in
xchg
push
scas
aam
cmp
jnp
int
inc
shlb
inc
enter
aad
iret
cmpsl
dec
adc
mov
cmpsl
pop
mov
push
data16
inc
nop
dec
xchg
scas
add
clc
jecxz
out
dec
fnsave
pop
cmpl
fsub
sub
cltd
lret
sub
mov
pop
pop
movsb
adc
mov
movsl
out
jg
mov
mov
inc
mov
in
dec
sahf
mov
test
xchg
mov
cmp
adc
ljmp
fisttpl
sub
into
mov
insl
lods
movsb
imul
fimull
mov
cld
jmp
sub
xchg
mov
mov
mov
mov
mov
popl
mov
and
popf
and
or
inc
stos
lea
mov
out
pop
xchg
mov
outsb
icebp
ljmp
fmul
lret
adc
mov
lcall
mov
test
cs
cld
jbe
ficomps
lea
shr
pop
les
adc
bnd
cmpb
cmp
loop
aaa
movsb
jne
mov
lods
xchg
jns
popf
xchg
dec
jnp
in
add
and
insl
dec
jno
pop
inc
mov
dec
nop
jg
cltd
fbld
sub
or
sbb
jle
dec
cmpsb
cmp
call
ret
rol
push
mov
cmc
stc
scas
inc
xchg
jnp
xchg
test
cmpsl
fcomps
sub
leave
rcl
cmpsl
sub
cmp
push
cld
mov
call
adc
and
pop
xlat
fiadds
pop
jp
add
aad
lods
push
std
cli
test
sbb
inc
push
xchg
fidivs
aas
outsl
and
iret
sbb
loop
and
fsubrs
sub
hlt
sub
fsubl
xchg
mov
pop
dec
shl
xor
fisubs
dec
iret
test
push
lret
rolb
or
imul
and
mov
jl
inc
mov
aad
lret
enter
cmp
push
xchg
daa
leave
jp
mov
mov
fstps
iret
ror
repz
iret
leave
test
and
stos
lcall
dec
addr16
xor
nop
dec
scas
push
dec
mov
sub
movhps
pop
je
dec
mov
jmp
xchg
sub
sub
dec
pop
add
arpl
push
jno
jg
pop
jo
adc
and
shr
xor
fnstcw
loop
loopne
and
mov
xor
add
lret
in
mov
rorb
lahf
outsb
pop
push
inc
dec
scas
inc
loop
out
hlt
sbb
hlt
imul
push
sahf
push
push
mov
or
imulb
jg
sub
sub
lock
xor
jg
xchg
push
movb
lock
xchg
orl
loopne
fs
aam
movsb
jnp
lcall
mov
push
test
ljmp
sbb
sar
adc
je
outsb
xchg
sub
rcrb
rcrb
repz
add
int3
xlat
cmp
lods
pop
lea
push
cmove
mov
pop
and
sbb
dec
cmp
scas
jbe
sub
out
pop
adc
dec
stos
dec
dec
lock
sbb
cmp
sub
mov
jae
popf
loop
scas
mov
cmp
dec
pop
adc
lahf
out
pop
int3
adc
call
fildl
lret
adc
mov
dec
scas
add
sbbb
and
and
stc
push
rclb
mov
pop
loope
loope
sti
fwait
mov
in
ja
pop
shl
stc
stos
roll
mov
adc
mov
jl
daa
les
push
sbb
ja
adc
cmp
dec
jmp
pushf
push
cmpsb
xlat
lds
cmp
cmpsb
dec
push
les
mov
cltd
lcall
rcr
adc
ljmp
pushf
loopne
scas
out
add
jl
cld
add
jg
or
sbb
pusha
xchg
insb
add
fcmovb
xor
push
adc
xchg
push
jecxz
out
lock
xor
jecxz
out
and
aad
mov
sub
sub
divl
adc
pop
dec
aad
daa
test
dec
mov
xchg
ja
mov
sbb
rcr
es
mov
or
and
loop
sub
popl
mov
cmpsl
in
lods
cli
pop
or
faddl
outsb
rcll
pop
push
mov
jne
jnp
mov
rclb
mov
mov
imul
add
add
xchg
fcmovu
bound
test
movsl
pop
sbb
dec
sbb
lods
cwtl
xor
push
inc
fsubrl
rcl
adc
jle
mov
jb
mov
xchg
ja
popf
loop
inc
mov
fnsave
dec
rolb
sub
out
mulb
icebp
pop
movsb
repz
xlat
jne
das
ror
cmp
inc
jmp
push
out
sbbb
jmp
fisttpl
jmp
adc
mov
mov
stc
frstor
rcrw
mov
add
movsl
xchg
pop
loopne
cmp
xchg
xor
out
mov
out
dec
push
mov
mov
sub
pop
stc
cmpsb
cmc
push
jmp
pop
rclb
mov
test
pusha
aaa
lret
ds
cmp
xchg
std
ds
sbb
popf
and
xchg
inc
sub
jnp
push
sbb
push
cmp
fists
mov
adc
into
sbb
ja
dec
inc
push
mov
aaa
dec
lret
inc
dec
arpl
cld
sub
inc
clc
mov
cmp
incl
mov
xor
lock
fadd
inc
dec
clc
jae
dec
pop
stos
ljmp
mov
movsl
cmp
push
fldl
mov
addr16
pop
test
shl
mov
cwtl
unpcklps
add
enter
mov
adc
mov
jns
jl
jp
and
xor
js
mov
xchg
xorl
push
add
sti
fs
push
pop
rcl
cmp
xchg
and
cmpl
ret
jns
inc
mov
mov
insl
cmpb
dec
add
lahf
or
dec
lds
add
out
ja
data16
adc
sub
fcompp
cmpsb
cmp
sub
arpl
mov
les
mov
pop
movsl
push
add
pushl
ljmp
loope
fisubrl
inc
clc
daa
mov
xlat
pop
pop
repz
pop
out
into
sarb
push
xchg
mov
sub
xor
fcmovu
fistps
add
fidivrl
test
out
ljmp
adc
sbbl
push
testb
pop
scas
cli
loop
sub
popf
or
mov
pop
sahf
or
and
mov
lret
cs
les
out
inc
push
jnp
nop
imul
fisubs
push
fimuls
mov
sbb
call
fnstenv
scas
mov
fbstp
mov
push
jle
sbbb
xchg
arpl
xor
push
jnp
mov
les
push
sbb
add
jecxz
sbb
cmp
pop
adc
sub
rcrl
xor
pusha
mov
fisttps
in
cs
push
movsb
jnp
mov
sbb
sub
jmp
popa
rolb
fld
pop
dec
xor
dec
pop
xchg
loope
clc
sbb
std
bound
jp
js
test
xchg
arpl
and
fisubrs
lret
push
fadd
mov
sub
cmp
addl
sbb
and
addb
dec
push
mov
jne
mov
out
cmp
lods
mov
out
sarl
mov
je
xchg
and
xor
enter
aaa
sub
mov
adc
imulb
mov
out
xchg
fsubs
popa
ret
xchg
sbb
jge
rol
xor
int3
add
cmp
dec
inc
ljmp
nop
xchg
add
rol
jbe
push
mov
dec
imulb
lahf
ror
add
xchg
test
jmp
or
cwtl
cmp
iret
test
imul
faddl
adc
push
and
pop
test
shlb
mov
rcr
add
push
sub
mov
mov
inc
or
jo
dec
mov
jbe
and
ret
mov
test
xadd
or
adc
jnp
rcll
xchg
ficoml
dec
push
pop
xchg
pop
mov
ret
and
mull
mov
daa
fisttps
testl
adc
addl
adc
js
jg
mov
jg
loopne
jne
mov
loope
push
dec
sub
ret
jne
add
fcomp
pusha
mov
jb
leave
aas
hlt
jle
push
pop
clc
jecxz
jno
icebp
sbb
loopne
xchg
mov
or
fs
mov
fadd
sub
sub
ret
imul
test
sub
pop
ret
adc
bound
test
xor
insl
sub
lods
ss
adc
push
push
sub
sbb
int
push
mov
pop
pop
inc
pop
pushf
xchg
test
adc
daa
in
jno
mov
js
std
pop
shrl
xor
ss
sarb
sbb
and
mov
mov
xchg
mov
fcoml
dec
dec
rcll
xor
cmp
fisubrs
push
in
jne
loope
add
pop
std
fsubrl
mov
adc
mov
lods
sbb
mov
and
or
mov
dec
sarl
lods
push
rorb
pop
es
fisttpll
shrb
fmulp
ds
jae
mov
or
je
add
insb
mov
add
mov
fists
inc
sbb
and
imul
movsb
repnz
int
xor
push
add
xchg
mov
pop
lds
inc
sbbb
dec
mov
into
bound
leave
and
jg
xchg
xchg
lea
xchg
jns
pop
push
jns
loop
add
je
sub
adc
cmp
jnp
adc
add
leave
subl
cmpsb
fdivrl
mov
fiaddl
fimull
cmc
gs
fbstp
dec
ret
push
pop
bound
xchg
and
repnz
mov
ret
cs
into
rol
in
adc
sub
insl
push
cmpsl
into
adc
mov
dec
sbb
cwtl
fidivs
sar
es
sbb
inc
lret
les
in
cwtl
inc
push
xchg
sbb
fsubrs
mov
xlat
cmc
repz
push
push
adc
cli
add
xor
push
mov
fcmovb
pop
negl
iret
xchg
dec
loope
pop
movb
push
xchg
mov
in
cmpb
pop
aas
sub
inc
mov
movsb
out
jns
mov
fwait
out
inc
rorl
sarl
pop
dec
dec
xchg
test
push
bound
cmp
popa
stos
inc
test
aas
in
or
mov
out
and
cli
cli
mov
dec
aad
into
shlb
js
sub
inc
sbb
roll
adc
mov
sti
out
ja
xlat
bound
fidivs
int
fisttpl
lock
dec
in
pop
lea
mov
addl
imul
push
dec
push
inc
in
jb
pop
add
imul
push
das
int
jmp
jg
mov
sub
mov
or
xchg
in
mov
pop
pop
test
add
pop
nop
stos
scas
inc
cmp
add
xchg
int
pop
pop
pop
dec
aam
cltd
push
and
mov
fnstenv
in
cs
or
outsl
ja
xchg
lcall
gs
mov
xchg
push
mov
dec
dec
ret
mov
or
adc
xor
cmp
pushf
test
enter
mov
mov
push
and
pusha
jb
mov
jb
mov
mov
loop
shrl
mov
mov
icebp
orb
leave
push
push
sbb
cmova
outsb
scas
push
aas
inc
hlt
and
xor
add
mov
popa
inc
dec
mov
xor
insb
push
outsl
and
jae
sbb
add
fidivl
mov
jmp
lcall
push
les
sbb
aaa
int
stos
sub
or
push
mov
mov
test
pop
inc
lods
rclb
adc
les
sahf
inc
je
outsl
lock
xchg
aas
xchg
sbb
add
pop
sbb
dec
hlt
push
aas
mov
or
and
xor
pop
or
dec
mov
jmp
pop
mov
cli
int
outsl
adc
cmp
fcom
adc
sarb
ret
addr16
lock
nop
aas
insb
int3
mov
movsb
fcmovb
fnop
aas
jl
rclb
imul
adc
outsb
icebp
decl
xor
gs
add
sarl
jecxz
push
scas
push
dec
mov
xor
fcmovnb
cmova
call
lcall
add
icebp
mov
xor
das
inc
call
xor
push
cs
daa
dec
push
jle
cmpsl
lods
jp
outsb
xchg
cmpsb
inc
pop
in
ss
ss
inc
movl
xchg
xor
inc
pop
inc
mov
std
test
xor
push
arpl
int3
orb
sub
stc
lock
mov
and
add
or
dec
push
and
insb
ficomps
adc
mov
pop
sahf
mov
mov
ret
nop
sub
sub
mul
outsl
jno
lahf
idiv
sbb
mov
dec
cs
xor
add
push
js
xor
xchg
dec
inc
pop
xchg
popf
or
sbb
jg
mov
and
and
rcrl
in
pop
add
mov
jle
sahf
mov
mov
sbb
xor
int
or
bound
and
and
mov
lret
jb
add
leave
lret
sbb
and
outsl
je
hlt
push
sub
cmp
jl
sbb
andl
hlt
lds
fcmove
lret
je
add
movsl
add
fwait
in
or
repnz
sahf
int3
lcall
lcall
ljmp
testl
add
shrl
and
adc
cmp
shlb
xchg
add
int3
lret
aam
aas
jl
je
ffreep
fimull
stos
sub
sarb
sarl
scas
stos
out
jb
es
ss
shlb
pop
push
into
mov
out
pop
lds
jmp
jl
sub
fucomip
mov
mov
pop
mov
inc
scas
in
test
es
mov
dec
mov
xorl
pop
mov
imulb
jg
sahf
and
lret
stc
jmp
adcl
js
adc
mov
cld
out
test
das
sbb
dec
jl
cld
jne
scas
mov
mov
xchg
shr
mov
mov
fidivrs
in
in
mov
cmp
rep
jmp
shr
movsl
mov
notl
std
iret
rcll
jge
fdivrl
mov
popf
ret
fs
js
and
movsl
dec
dec
in
lret
mov
insl
and
mov
add
and
cmpsb
dec
add
cs
xchg
sub
sub
and
dec
insl
push
mov
dec
dec
push
popa
cmpsb
gs
pop
pop
sbb
mov
push
pusha
push
sub
xchg
testb
push
mov
push
push
mov
in
mov
push
adc
call
sti
mov
cli
stos
pop
sub
out
jmp
jp
das
pop
dec
stc
das
sbb
das
jp
or
stc
ljmp
mov
pop
sub
or
jp
pop
mov
jp
sbb
sub
test
pushf
lea
ja
inc
add
push
dec
mov
push
cmc
mov
clc
cmp
call
movsl
xlat
sub
add
pop
sbb
or
cmpsb
jp
mov
mov
fs
ds
loope
ret
and
insl
jo
inc
jl
insl
mov
gs
mov
pop
shrl
icebp
repnz
adc
push
mov
jp
cwtl
stc
hlt
dec
mov
and
sar
pop
pop
and
add
in
push
ljmp
arpl
or
fs
pop
test
inc
add
inc
fimull
push
or
stos
aam
stos
or
jno
das
iret
das
outsl
mov
xor
mulb
mov
xchg
mov
or
loope
notb
mov
adc
push
pushf
pushf
jmp
imul
cld
out
inc
push
mov
fwait
hlt
dec
cmp
hlt
push
push
inc
xchg
out
loope
dec
outsb
xchg
sbb
push
dec
icebp
leave
iret
stc
mov
lahf
mov
push
outsb
xor
and
jge
lods
sub
mov
adc
mov
or
mov
sub
bound
iret
adc
mov
jb
or
movsl
je
out
decl
jp
lods
pop
inc
dec
jns
fistps
sbb
cmp
lods
ret
sub
and
int
dec
pop
scas
insl
lcall
les
insb
je
jg
cmp
mov
sub
xorb
inc
pop
push
and
loopne
out
mov
xor
adc
lret
inc
ret
inc
mov
or
dec
stos
sub
flds
xchg
idivb
mov
mov
fwait
dec
jge
add
push
lock
jnp
std
sub
lock
shr
out
clc
xlat
lcall
das
aaa
sub
sub
pop
pop
mov
push
xchg
jge
xchg
movsb
rcl
into
add
pushf
mov
mov
ret
shll
jo
xchg
mov
jb
inc
adc
sub
xlat
int3
icebp
das
push
pop
pop
test
pop
push
mov
inc
sbb
mov
jns
push
flds
xchg
icebp
mov
dec
adc
or
ret
out
adc
es
fidivs
sahf
pop
movsb
inc
rclb
sbb
xchg
jmp
inc
fcoms
mov
out
mov
sti
inc
fstpl
inc
and
mov
inc
add
sbb
mov
jmp
lea
call
call
adc
cmp
push
daa
aas
cmp
jl
shlb
std
jle
mov
inc
inc
fwait
movsb
rorl
and
lds
sub
pop
outsl
xor
or
adc
stc
sub
and
aam
mov
es
lea
add
or
lret
imul
inc
sbb
hlt
push
mov
fldenv
pop
cltd
mov
push
mov
inc
fildl
push
pop
jbe
xchg
xchg
xchg
iret
vmwrite
bound
mov
mov
aam
add
add
cmp
cmpb
add
lcall
call
pushf
pusha
lea
jae
cmc
cmp
pushf
mov
movw
lea
jae
jo
push
cmp
pushl
pushf
pushl
jmp
cmc
xor
pushf
mov
stc
cmc
or
pushf
call
jno
or
jmp
sub
or
mov
jge
std
nop
je
jo
in
in
xchg
jae
add
fwait
sub
mov
mov
and
sbb
mov
aam
rcrb
outsl
xchg
pop
fidivrs
push
xchg
std
in
xchg
and
lods
sbb
gs
adcl
mov
mov
bound
outsl
popa
fs
imul
add
xor
jl
adc
inc
and
dec
push
pushf
pushl
ret
call
clc
shr
call
inc
rol
rol
xchg
add
rcl
das
aas
mov
pusha
mov
test
pushf
bt
xchg
mov
clc
mov
clc
call
bswap
lea
push
bswap
movzbw
xchg
movzwl
movzbl
movzbl
lea
not
pushf
movw
mov
lea
jno
pusha
movl
pushl
lea
call
pushf
jmp
bswap
out
lret
cmp
xor
push
ljmp
lods
adc
cmp
push
cmp
sbbb
shl
jmp
fnsave
clc
ss
cwtl
jo
push
out
push
movsb
push
std
and
pop
je
pusha
pop
adc
sbb
repnz
fnstcw
stos
jmp
ja
fnsave
mov
adc
sub
fnstcw
adc
movl
push
jmp
movsl
pop
cmp
lcall
mov
xchg
stos
push
stos
imul
jge
push
add
push
sahf
dec
pop
xchg
ret
pushf
fwait
pop
xorb
movsl
add
dec
loope
ret
pushf
jo
ret
mov
sbb
in
int
jb
arpl
imul
push
xchg
in
dec
mov
jae
lret
pop
mov
in
daa
mov
dec
mov
lea
cli
pop
adc
mov
int3
inc
cmp
jnp
test
lock
sub
cwtl
test
int
jecxz
gs
and
bnd
in
fdivs
cmp
test
pop
dec
jg
dec
jae
pop
insl
les
push
pop
inc
popf
mov
test
out
pop
pop
or
jbe
adc
and
enter
lret
dec
ljmp
js
jle
fwait
ret
dec
aam
insb
out
mov
into
fldt
sahf
adc
fcomps
mov
mov
fildll
lods
adc
aam
and
pop
clc
and
das
jns
sbb
and
xor
enter
sarb
fimuls
fucomi
mov
mov
sahf
loopne
jne
sbb
cwtl
cmp
out
dec
push
sbb
adc
sarb
pop
ljmp
pop
pop
pusha
iret
adc
lods
addb
xchg
jge
jns
xor
pop
loope
jns
repnz
adc
or
lock
in
fsts
cmpsl
xor
insb
mov
mov
or
cltd
inc
dec
andl
push
cld
jmp
inc
mov
cli
push
push
and
mov
stos
add
rep
fimuls
jg
mov
dec
jae
icebp
pop
or
outsb
jnp
cmp
clc
lahf
push
push
icebp
mov
cmp
mov
xor
jns
xchg
ss
dec
mov
loop
fwait
or
inc
xorl
xor
test
inc
dec
shll
dec
ss
daa
or
popa
mov
xchg
xchg
jmp
jmp
push
add
popf
or
inc
pop
fidivrl
inc
jbe
cmc
lods
jp
icebp
lea
scas
sub
fmull
mov
push
adc
mov
sbb
jmp
sub
std
or
push
add
sub
push
adc
push
push
loope
movsb
stos
sbb
lock
js
mov
call
mov
lret
jge
and
clc
sub
sbb
and
dec
cli
dec
push
or
sub
push
mov
xchg
pop
ficoml
xor
bound
movsl
out
and
xlat
xchg
or
and
cmp
jns
pop
dec
outsb
cmp
in
out
mov
cmp
lods
mov
sbb
fistpll
cmpb
or
sub
and
cli
pop
adc
ss
pop
adc
daa
sub
into
cld
mov
sbb
inc
addr16
ljmp
jge
inc
xchg
sbb
jnp
pusha
push
cld
dec
out
or
mov
mov
sbb
mov
push
cmpsb
imul
arpl
cmp
push
add
cltd
in
adc
cmp
push
add
addr16
fdivrs
mov
mov
mov
testb
adc
jmp
lods
rcll
xchg
add
jl
push
mov
jbe
enter
mov
sbb
aad
sbb
pop
movsb
add
scas
xchg
pop
push
pop
inc
sbb
push
add
sbb
pusha
add
or
fisttpl
sbb
xor
push
enter
call
jo
into
ret
loopne
adc
cmpb
adc
test
leave
lcall
pusha
xor
sub
icebp
mov
jno
xor
into
inc
xor
aaa
pop
mov
sahf
mov
testb
repnz
mov
mov
gs
popf
stos
int
or
mov
popa
sub
jb
add
fistl
movsl
xlat
mov
or
sbb
lcall
dec
sub
or
or
cmp
ljmp
sbb
aam
movl
pushf
lea
jmp
movl
pusha
jmp
stc
cmp
test
test
pusha
call
movsl
fstpt
sbb
inc
shr
shlb
int3
mov
pop
sbb
add
mov
add
lcall
or
mov
enter
in
sub
cwtl
mov
xor
mov
sub
and
fcmovnbe
ficomps
pop
lock
pop
jecxz
aas
cmpsl
add
int3
icebp
daa
es
js
cs
inc
adc
mov
dec
frstpm(287
stc
ficompl
mov
lret
xchg
jbe
test
inc
aad
cmp
aaa
adc
movl
push
movl
pushf
lea
jmp
outsb
out
enter
or
lcall
lods
cmpsl
jne
fwait
push
mov
in
jg
mov
and
cmp
xchg
or
push
dec
dec
outsl
sbb
imul
scas
mov
xor
clc
shlb
mov
gs
or
adc
dec
dec
repz
pop
cmpsb
ds
xchg
test
es
dec
and
push
scas
push
fwait
inc
add
out
mov
rorl
mov
inc
push
inc
aaa
jle
inc
and
fiadds
outsb
xorb
jae
sbb
or
push
or
jno
jae
dec
dec
mov
xor
aas
ret
cmpsb
adc
mov
stos
shl
cmp
push
mov
cmp
or
push
add
adc
test
fs
xor
jbe
daa
dec
jne
ljmp
call
or
clc
jne
sarb
inc
push
mov
jno
mov
jo
cwtl
fisttpl
adc
cli
nop
fcomip
inc
ret
cmp
push
mov
nop
js
fimull
pop
cwtl
cmp
enter
push
cmp
cmp
mov
imul
cmp
push
popf
push
data16
push
dec
dec
clc
movsb
rcl
out
ss
pop
ljmp
mov
jnp
inc
inc
mov
fdivrs
sub
enter
pushf
cmp
mov
sbb
fldenv
or
dec
iret
cmpsl
jmp
xchg
add
popl
ds
adc
mov
jge
aas
lea
call
fscale
rclb
mov
inc
rorb
mov
inc
push
imul
loop
ss
repnz
in
pop
call
imul
rorb
sahf
dec
mov
ret
js
lods
jle
nop
sbb
jb
inc
mov
and
ja
clc
cli
sbb
adc
push
pushl
jmp
pusha
movl
pushl
push
push
pushf
movl
pushf
push
lea
jmp
bt
clc
stc
cmc
imul
pushf
stc
stc
add
pushf
pushl
lea
jmp
mov
ljmp
mov
cmp
pop
pop
aaa
inc
addr16
pop
test
jb
pop
xchg
lret
dec
std
dec
cmp
rcll
mov
push
repnz
mov
jo
sbb
pushf
stos
in
pop
xchg
push
jmp
lcall
mov
mov
sbb
sub
add
fimull
jbe
push
or
mov
cmp
push
mov
xor
push
vorpd
mov
ljmp
sbb
lea
jae
pushf
xor
pusha
lea
call
jmp
cmp
cmp
pushl
pusha
jmp
in
and
push
mov
insb
dec
test
pop
cld
push
dec
outsl
adc
mov
sub
repnz
pop
jecxz
inc
mov
lea
sahf
jns
push
or
xor
mov
dec
ret
and
lahf
cwtl
gs
xor
cmp
call
fmul
rcrl
andl
cli
dec
pushf
jge
mov
insb
xor
mov
adc
data16
jb
cmpsb
pop
adc
adc
xor
push
push
ss
jmp
xor
and
xchg
xchg
cmpsb
xchg
lret
leave
movlhps
lret
cvtdq2ps
push
xchg
in
test
test
cld
add
loop
adc
cli
push
sub
bound
fdivs
leave
and
mov
xor
das
cmpsb
add
mov
nop
aam
enter
cld
addl
rorl
pop
inc
mov
push
xor
arpl
push
jnp
cli
daa
stc
enter
jmp
inc
popa
insb
sbb
je
cltd
lods
xor
mov
int3
ret
xor
mov
lcall
or
inc
push
ljmp
pop
test
add
inc
and
adc
jp
fstps
pop
movsl
dec
imul
lcall
ss
cmpsl
jns
xchg
mov
les
sub
mov
and
push
xchg
mov
int
lock
and
pop
xchg
xor
dec
mov
add
push
pop
imul
pushf
in
add
inc
subl
roll
mul
xchg
cmp
cltd
cltd
xchg
or
push
imul
mov
sub
out
push
and
adc
loopne
and
mov
in
inc
addl
fildll
sub
push
sti
lcall
sahf
mov
or
jecxz
fwait
popl
cmp
rcr
shrb
xorl
fldenv
push
sbb
js
cmc
mov
clc
adc
lea
movzbw
mov
bswap
mov
mov
pushf
push
jmp
call
in
pushf
push
pushl
pushl
movl
pusha
jmp
inc
pop
lods
add
dec
sbb
jbe
jo
scas
or
ds
arpl
ret
xchg
cwtl
mov
dec
scas
les
cwtl
inc
fsubp
or
xor
xor
mov
xchg
pop
dec
std
xchg
ja
sbb
ffreep
mov
rcll
and
or
inc
jmp
jmp
mulb
mov
mov
std
mov
mov
outsb
icebp
xchg
xchg
ret
dec
addl
mov
in
mov
pusha
cmc
pushf
call
add
stc
push
in
cmp
adc
pop
arpl
pop
and
xor
mov
mov
movsl
push
out
sti
dec
movsb
ss
push
push
sub
mov
xchg
aas
cmp
pop
or
cld
fs
pop
lds
pop
rclb
push
mov
add
clc
ret
mov
mov
cli
cli
idivl
out
xor
inc
pop
adc
shll
popl
iret
mov
xor
rol
jae
insb
andl
dec
icebp
jb
fldt
push
shlb
dec
fadds
mov
push
jo
inc
adc
fdivs
xchg
daa
push
mov
aam
and
ficompl
mov
daa
mov
push
mov
add
cmp
lret
lret
xchg
out
xor
jns
mov
jg
add
outsb
xchg
push
repnz
dec
inc
mov
mov
enter
ret
lea
jg
mov
scas
adc
mov
dec
rcrl
dec
or
xchg
and
jnp
push
xorl
movsl
fsubrs
sar
fsts
lods
lock
mov
inc
pop
test
xchg
sub
js
mov
popf
mov
push
stos
movb
push
mov
mov
mov
repnz
dec
lret
out
outsl
xchg
mov
divl
xchg
add
insb
mov
es
cmp
sub
push
pop
addl
push
pop
push
mov
pop
adc
bound
imul
cmp
jo
adc
mov
dec
xlat
icebp
inc
adc
pop
xchg
xchg
int3
pop
mov
ror
push
or
mov
scas
into
dec
pop
rcrb
popf
popf
push
imul
jbe
ret
pop
clc
cmp
cmp
add
mov
popf
fmul
lea
jne
setge
movzbw
mov
push
call
dec
lcall
repz
sbb
mov
mov
hlt
jbe
cmp
lock
push
jae
dec
icebp
push
and
dec
clc
imul
and
cmp
xor
cmp
fbstp
xchg
mov
dec
negb
inc
xchg
fcoms
test
mov
bound
add
cmpsl
xchg
mov
js
pop
xlat
xor
adc
lods
pop
stos
stc
stos
sub
cltd
sub
stos
dec
pop
das
ljmp
jmp
dec
sbb
lods
push
push
aaa
enter
popf
jo
lock
lea
mov
add
jns
aas
jmp
inc
inc
sub
dec
or
popf
repnz
sub
data16
adc
popf
xchg
fs
das
imul
pop
add
shll
jle
sub
daa
lahf
arpl
cmp
hlt
inc
repnz
nop
push
or
int
lahf
push
into
rcl
repnz
mov
mov
push
dec
push
aad
cmpsb
fcmovbe
insb
jmp
loope
fildll
xor
loop
hlt
stc
rclb
arpl
hlt
cld
lret
scas
sbb
xor
push
push
adc
pop
xchg
dec
fs
in
test
cmc
dec
mov
cmp
jno
inc
jl
add
test
add
xchg
cmpb
rorl
cmp
jns
inc
into
pushf
in
and
pop
lahf
xchg
or
and
addr16
sbb
mov
ja
lds
pushf
jbe
repnz
stos
push
aaa
jge
pop
mov
int3
lahf
mov
inc
sbbb
int3
pop
mov
ret
test
lahf
arpl
test
mov
dec
ja
in
xchg
cmc
test
cwtl
xchg
aas
je
mov
mov
aaa
clc
ljmp
std
lock
sub
jo
stos
add
push
ds
inc
js
rclb
jp
mov
jb
adc
mov
xchg
insb
adc
pop
dec
mov
leave
mov
lea
pop
lock
nop
lmsw
jmp
or
add
fbstp
mov
jae
add
ret
xor
test
mov
pop
dec
jns
mov
aas
pop
pop
push
inc
addr16
cmpb
adc
mov
das
mov
test
jle
das
jge
lret
push
push
add
enter
in
inc
pop
rorb
rcr
mov
cmp
inc
fs
inc
push
pop
pushl
loopne
hlt
das
insb
bound
outsb
sbb
xor
inc
adc
pop
pop
pop
sbb
ficoml
iret
jae
mov
and
or
or
xlat
test
sti
mov
iret
or
mov
ja
mov
or
das
rorb
les
in
cmpsb
sub
shll
fsubrl
or
or
cltd
bound
inc
cli
sahf
cwtl
and
push
rorl
cmp
scas
out
into
pop
sub
or
imul
and
sub
mov
ljmp
mov
pushf
sub
jg
arpl
xlat
fwait
adcb
mov
dec
insl
sub
ficoms
mov
adc
test
mov
and
mov
pushf
sub
pusha
rep
not
jmp
movl
movl
pusha
pushf
pushl
popl
mov
pushf
pushf
movb
pushl
ret
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
inc
pop
and
pop
mov
push
incl
sahf
mov
subl
lock
rclb
inc
adc
inc
insl
pop
loope
or
lea
or
jbe,pn
sub
out
xchg
mov
sbb
adc
push
or
lret
jle
mov
loope
adc
adcl
fisubrl
push
lods
sbb
cmpsl
mov
mov
test
leave
dec
les
mov
adc
inc
mov
int3
xchg
add
rcll
adc
mov
jge
jecxz
pushf
cmp
and
pusha
out
xlat
or
inc
into
xor
das
repz
imul
push
sub
cs
insb
push
les
mov
dec
push
xor
lods
pop
adc
inc
pushl
lea
jmp
mov
int
mov
pop
add
mov
dec
bound
idiv
sub
dec
sub
sub
add
push
add
push
cwtl
rorb
xor
push
ljmp
or
inc
fiadds
cmp
cld
cmp
push
stos
add
insb
movsl
and
sub
gs
pop
lret
push
shl
scas
push
stos
jno
jle
push
add
ss
or
and
cmp
bound
xchg
push
sbb
stc
fstpl
in
or
test
out
mov
push
nop
mov
adc
pop
pushf
pusha
mov
jmp
je
jl
sbb
jnp
leave
imul
lret
mov
jns
int
mov
inc
out
clc
out
out
stos
lcall
xor
add
adc
les
cli
mov
adc
inc
xchg
adc
mov
add
hlt
leave
fs
test
jl
es
je
push
loope
hlt
adc
push
xchg
xchg
mov
imul
aaa
xor
stos
cmp
mov
mov
and
lret
or
test
adc
out
ljmp
xor
fidivl
dec
dec
lret
ja
imul
sbb
sub
in
adc
cmp
push
mov
pusha
notl
pop
push
lret
pop
testb
push
pop
inc
mov
mov
adc
out
arpl
xchg
push
sbb
push
rolb
rorb
loopne
add
mov
mov
stc
xor
push
daa
mov
inc
fstl
add
jl
or
cmpsb
dec
leave
pushf
stos
adc
xchg
or
jmp
cmc
cmpsl
sbb
lret
pop
inc
adc
push
push
movl
pushf
pushf
lea
jmp
test
sti
in
inc
shrb
repz
push
out
push
sub
jmp
mov
test
sub
ffreep
push
and
out
cwtl
loope
lcall
sub
sub
inc
mov
adc
out
notl
add
add
add
add
daa
inc
lret
dec
jmp
sarb
fiaddl
jns
cmpsl
xor
adc
inc
bswap
setl
add
sar
mov
stc
stc
cmc
test
movw
lea
je
btr
clc
bt
add
pusha
rcl
adc
mov
bt
stc
pushf
add
pushf
jmp
lea
jne
mov
mov
movsbw
movb
push
mov
pushf
bswap
push
lea
pusha
call
cmp
jo
in
fiadds
hlt
sub
or
mov
jp
sub
movsb
pop
fimull
clc
test
movsl
cmp
out
ficompl
push
sub
fstps
xchg
nop
fmull
iret
xor
pop
adc
rcrb
test
cwtl
pop
pop
scas
dec
sti
loop
xor
push
fisubrl
aas
mov
or
inc
and
fimull
movsl
cmp
fidivrl
mov
mov
jecxz
shlb
pop
test
testl
loope
jle
pop
sbb
das
cs
xchg
cmc
loop
inc
jmp
ret
repnz
jbe
les
popa
push
cmp
je
movsl
fsts
jno
cmp
xchg
mov
mul
lock
sub
incb
nop
lret
ja
or
jp
sbb
imul
dec
xchg
lret
pusha
insl
push
fisttpll
fisttpl
fistps
and
fstl
xlat
hlt
call
push
dec
mov
mov
or
push
mov
cmp
imul
mov
xchg
scas
push
out
rorl
or
into
jg
pop
pop
and
test
jl
aad
iret
js
jo
sub
add
mov
stos
lods
pusha
sbb
cs
scas
cmp
or
rcl
inc
mov
and
andl
add
popf
xchg
nop
pop
in
adc
lea
jb
stc
cmpb
jmp
ror
movb
pushl
sub
bt
neg
jmp
jmp
or
in
iret
cmp
jle,pt
sub
int3
loopne
jo
dec
push
mov
sub
jo
jbe
fidivs
xchg
push
pop
pop
push
push
or
das
and
ret
adc
add
flds
mov
jnp
pop
push
or
push
dec
jns
adc
dec
fnstsw
sti
sub
insl
push
test
mov
dec
jecxz
icebp
jl
jnp
jns
add
mov
and
xor
cmp
subb
pop
sub
cmp
cs
ss
adc
cld
subl
ret
pusha
fldl
cmpl
adc
inc
mov
jl
mov
insb
out
cmp
call
ljmp
fdivp
sbb
jecxz
mov
xor
cli
rol
shlb
mov
pop
sub
mov
adc
jmp
mov
bsf
stc
neg
add
clc
shr
btr
shr
or
stc
ror
dec
mov
sub
btr
lea
add
lea
lea
mov
lea
push
pushf
mov
not
pushf
jmp
pushf
pushf
inc
mov
pusha
jmp
pusha
mov
cmp
shl
call
xorb
std
jo
pop
loopne
xchg
jb
sub
pusha
inc
shrl
ret
pop
hlt
and
sbb
pusha
cmp
cmpl
add
mulb
insl
outsb
push
leave
movsb
mov
mov
fldenv
and
shlb
mov
push
sbb
lods
enter
loop
loope
popf
imul
scas
push
or
ficomps
out
jae
fcompl
push
dec
nop
frstpm(287
push
and
inc
mov
mov
out
mov
cmc
mov
inc
dec
xchg
movsb
rcrl
sti
inc
sbb
pop
cli
movsb
sub
cs
lcall
cmp
sub
pop
loop
jbe
into
xor
popf
aaa
and
pop
mov
aaa
or
ljmp
mulb
das
mov
ror
cld
dec
mov
cmp
ljmp
data16
xor
lret
mov
iret
sbb
scas
mov
loop
inc
and
lock
lea
cwtl
mov
repnz
ret
push
fdivrl
cmp
std
adc
push
sbb
shll
shlb
pop
pop
in
add
cmp
cmp
lock
and
hlt
rorl
dec
push
jecxz
jnp
cli
aas
fstps
stc
imul
ds
aaa
movsb
js
jb
sti
jae
mov
push
loopne
imul
scas
adc
mov
in
loop
push
cld
aas
pop
pop
dec
inc
mov
adcl
adc
adc
inc
jnp
dec
jg
mov
add
shrb
and
sbb
inc
push
inc
jnp
push
add
add
test
jle
pushw
stc
mov
popa
pop
std
cli
std
jo
inc
mul
and
xor
stc
addl
jge
jl
adc
xor
add
fisubrl
ja
xor
out
xchg
push
mov
pushf
mov
inc
mov
sbb
mov
jmp
mov
je
inc
pushf
pushf
lea
jmp
sbb
icebp
out
in
das
xor
in
cmp
cltd
gs
fs
pop
fbld
dec
mov
shlb
dec
repz
dec
cmp
jle
push
dec
xchg
xchg
jg
xchg
and
jbe
mov
sti
mov
outsb
add
out
sub
call
push
into
fldt
sbb
imul
sbb
insl
adc
movsb
add
lea
mov
call
cwtl
pop
push
movsb
mov
mov
ret
pop
out
mov
mov
push
pop
adc
add
adc
outsl
mov
cmp
aad
movsb
fcoms
push
int3
loope
cwtl
inc
or
cmp
sbb
out
inc
push
sub
and
repnz
and
pop
hlt
jecxz
or
adc
ret
mov
and
cmpps
jns
outsb
shlb
fdivl
and
mul
int3
faddp
pop
imul
sbbb
hlt
out
and
icebp
test
cmp
and
pop
sub
pop
adc
fisubrl
add
push
or
lds
xchg
xchg
cmp
mov
scas
jo
ds
adc
test
repz
xchg
testb
lds
or
dec
mov
add
imul
stc
iret
jb
pop
and
das
jle
pop
inc
bound
ss
adc
and
hlt
mov
mov
push
push
aaa
fisubrl
outsb
push
xchg
pushf
add
mov
sbb
pop
ret
dec
xchg
or
rorb
or
xor
mov
roll
add
add
lret
add
mov
push
outsb
aas
fbstp
sbb
add
mov
and
sbbb
ds
xchg
rcrl
test
neg
rol
out
or
popa
clc
imul
int
cmp
rcrl
test
int3
mov
dec
push
jge
sub
jge
cmp
in
cmp
mov
push
cmpsb
stos
je
mov
xchg
aad
pushf
jmp
push
cmp
jmp
pusha
lea
je
jmp
xlat
repz
cld
inc
push
add
mov
xor
mov
fisttpl
movzbl
out
inc
fs
out
mov
pop
xor
ss
rcrb
lret
mov
cs
aam
jo
pop
jp
imull
and
sbb
and
adc
xchg
mov
push
pusha
dec
stc
stc
clc
shl
movb
lods
test
clc
cmc
lea
jbe
not
call
lea
pusha
call
and
iret
inc
push
push
call
outsl
fisubrs
pop
and
sbb
out
xchg
sti
cmp
je
sbb
sbb
and
leave
iret
lods
inc
imul
cmp
jg
jae
popa
ljmp
jb
lahf
nop
out
mov
xchg
jb
xor
adc
gs
incb
cmc
pop
fisubrs
lahf
mov
pop
not
ljmp
or
add
fbld
lock
imul
mov
loop
cli
add
mov
push
std
xchg
shrb
mov
dec
mov
jg
pop
stos
sbb
mov
insb
add
mov
mov
cmc
xor
dec
mov
ret
into
dec
shrb
dec
push
jno
adc
inc
cmp
shl
or
setl
xchg
dec
mov
push
or
stc
mov
movb
mov
shr
movzbw
lea
mov
mov
pusha
test
sub
pushf
call
ljmp
mov
std
nop
jg
and
popa
cmp
adc
add
and
imul
cltd
hlt
je
cltd
push
cmp
clc
inc
mov
pushf
xchg
cmp
jnp
fstpl
gs
mov
pushf
push
pop
fisubrl
mov
lods
gs
pop
sbb
stos
pop
es
cmp
xchg
mov
adc
lea
jp
pushf
adc
movl
pusha
pusha
lea
jae
call
mov
mov
outsb
adc
or
inc
xor
xchg
pop
ds
pop
sub
dec
or
add
and
inc
cmp
jns
push
push
pop
xor
pushf
mov
and
imul
shll
fildll
mov
cmp
insb
xor
addr16
sar
adc
mov
dec
push
xchg
or
or
testl
push
pusha
pushf
jmp
pushl
popl
pushl
push
mov
movzbw
not
movsbw
movl
pushl
lahf
lea
mov
push
call
stos
call
movb
cmp
movsbw
movzbw
lahf
lea
pushf
mov
push
mov
movb
lea
ja
call
sti
mov
dec
or
cli
jmp
pop
stc
sbb
pop
stc
das
out
or
or
jp
das
pop
dec
stc
das
sbb
das
jp
or
stc
ljmp
mov
pop
sub
or
jp
pop
mov
jp
sbb
sub
test
jecxz
xchg
inc
lcall
jo
lods
add
cld
pop
xor
roll
mov
adc
popf
add
imul
mov
or
mov
sbb
fwait
xchg
pop
leave
ret
jns
cld
sbb
inc
loope
scas
jne
push
jg
inc
add
cmp
inc
addr16
js
jp
lds
lock
lods
mov
cmpsb
xor
mov
push
cmp
sbbl
mov
xchg
movsb
dec
fidivl
orb
mov
bound
rorl
dec
dec
les
mov
pop
pop
add
mov
lock
sar
mov
jmp
jmp
rclb
add
mov
xor
mov
in
add
loopne
std
pop
out
ds
mov
and
decl
ss
roll
lods
cli
dec
sbb
push
xchg
adc
aas
subl
mov
call
scas
testl
sub
es
das
pop
jmp
push
sbb
mov
sbb
out
mov
mov
mov
imul
or
or
mov
popf
sub
and
pop
dec
cmp
enter
es
or
icebp
stos
jle
push
push
jecxz
xchg
test
push
rcrl
jle
mov
ret
sub
pop
notl
enter
mov
stos
icebp
push
jg
xchg
jp
sbb
sub
mov
not
enter
mov
cli
int3
les
aaa
test
adc
std
mov
mov
pushf
aaa
leave
es
xchg
lret
addb
iret
test
and
pusha
movsb
rolb
push
mov
scas
mov
or
shrb
jns
cmp
mov
pop
fisubs
xor
xor
xchg
sbbb
fcomp
mov
test
add
sti
mov
pushf
jle
mov
xor
lret
cltd
jp
les
stc
xchg
aas
mov
cmp
adc
ret
cmp
mov
testl
dec
stos
pop
movsl
sbb
mov
jmp
js
lahf
es
sti
scas
pop
cmp
or
sub
popf
aad
out
adc
pop
cmp
ret
mov
dec
xor
test
lods
mov
dec
cmp
push
sti
mov
inc
sbb
mov
pop
sbb
out
repz
xchg
stos
lods
rcrl
pop
and
lods
std
and
fimuls
dec
imul
pop
dec
mov
cltd
adc
add
or
aam
lea
mov
xchg
mov
mov
pop
addr16
pusha
lret
arpl
mov
lods
xchg
pop
scas
xchg
out
hlt
cmp
pop
iret
nop
ljmp
jnp
repnz
addb
clc
add
jne
insl
jl
pusha
cltd
mov
lcall
aam
add
sbb
xor
xchg
es
xor
aad
mov
mov
int3
sbb
or
add
cs
and
aaa
jge
cmpsb
sub
lock
lcall
mov
lods
xchg
pop
mov
xchg
test
adc
fneni(8087
call
repz
inc
inc
ret
sbb
stc
nop
xchg
or
imul
adc
xor
sarl
in
pop
dec
jp
jge,pt
sub
dec
leave
stos
jl
pusha
fst
fistpl
inc
add
mov
xchg
mov
dec
leave
xor
out
sub
js
or
mov
mov
testb
adc
pushl
push
mov
call
arpl
cmp
call
daa
sbb
inc
jmp
or
je
sbb
adc
sbb
imul
fisubl
add
das
out
filds
sbb
mov
mov
or
sub
or
imul
pop
lret
jl
sub
xor
das
mov
cmpsb
jg
jb
mov
pushf
out
out
out
hlt
mov
inc
lods
outsb
pusha
in
aaa
testb
out
jmp
add
in
adc
movl
mov
movw
pushf
push
lea
jmp
pushf
mov
dec
pop
inc
push
sti
imul
shr
push
push
push
in
push
dec
arpl
mov
inc
xchg
loop
and
cmp
call
jecxz
mov
mov
nop
lods
neg
icebp
pusha
inc
cmp
push
jns
and
adc
adc
add
popf
fisttpll
jge,pn
or
jb
rol
rcll
shll
lods
cmp
push
fwait
lahf
or
fcmovnb
pop
dec
mov
or
xlat
test
and
xlat
movsl
and
dec
mov
xchg
pushf
fstp
or
or
pop
stos
pop
loopne
inc
daa
inc
lret
mov
pop
aas
push
dec
cltd
inc
mov
xor
cmp
jle
dec
jb
mov
fisttpll
inc
and
test
xor
dec
insl
mov
int
push
adc
cmpb
ret
int
test
lods
lods
dec
lock
pusha
ret
scas
lods
xchg
push
adc
add
xchg
push
pop
pop
mov
mov
inc
jo
push
xor
xlat
cwtl
jnp
push
xor
inc
add
lahf
pop
inc
cmp
dec
and
sub
xor
mov
rorl
cmp
gs
dec
insl
jb
loopne
ficompl
xor
push
sub
sbbb
lcall
and
movl
popl
movb
movb
movb
pushl
ret
pushf
pushf
lea
je
call
stos
pop
xor
insl
rorb
cmp
mov
imul
inc
lods
xor
inc
push
into
bound
in
mov
pop
out
stos
daa
xchg
mov
pusha
test
out
scas
gs
imul
loope
inc
jg
xor
imul
mov
outsb
xchg
in
js
jl
in
clc
fisubrl
sbb
add
add
fwait
push
add
push
jne
or
addr16
in
mov
and
add
inc
js
je
jb
arpl
jae
pusha
dec
cmc
call
xor
mov
mov
sbb
arpl
decb
xor
add
or
jae
pop
cs
mov
push
jecxz
jmp
sub
mov
adc
aad
or
fdecstp
lcall
mov
rol
adc
pop
add
into
dec
adcb
cmpsl
ds
imul
call
movl
push
pusha
pushf
pushf
lea
jmp
int
sub
add
imul
and
arpl
cltd
and
jnp
and
shlb
rcll
call
fdivs
xchg
addr16
lahf
xchg
jle
add
sbb
call
xor
rcrb
or
sbbl
dec
dec
inc
cmp
pop
xor
mov
sbb
imul
mov
push
adc
sti
stc
fldcw
push
inc
mov
out
mov
in
gs
in
inc
xchg
scas
mov
add
sbb
lret
sbb
enter
aaa
icebp
xchg
xlat
pop
les
mov
mov
inc
or
adc
pop
inc
testb
rcll
fisubrl
sub
or
cmpl
sti
sub
sub
adc
mov
mov
push
adc
add
sub
out
xchg
rcll
icebp
dec
cs
movsl
cmp
out
sti
sbb
push
inc
pop
and
loope
mov
out
jp
xchg
or
sti
jbe
jl
lret
rclb
je
add
xor
and
insb
adc
add
and
pop
push
out
add
mov
lods
outsl
jbe
mov
cmpsb
loope
jmp
movb
mov
pushl
lea
jbe
mov
dec
ror
sub
bswap
and
rol
mov
mov
call
js
nop
in
outsl
lret
jg
jns
out
hlt
fsqrt
xlat
sub
jp
jne
aas
and
ret
mov
mov
repz
loop
add
mov
mov
push
mov
rorl
pop
or
cli
dec
mov
inc
cmp
and
test
add
xchg
jae
cmp
pop
mov
les
lret
lcall
int3
xchg
jl
or
in
les
pop
sbb
cwtl
mov
addr16
iret
or
xchg
test
inc
add
addb
shlb
xor
push
or
mov
out
cltd
icebp
fcompl
pop
pop
orl
mov
pop
outsb
pop
push
lahf
or
inc
push
addl
cmp
xor
cmp
int3
dec
cwtl
fxtract
lock
nop
mov
imul
lret
dec
lret
out
mov
and
addl
push
icebp
into
mov
loop
cmp
loop
jmp
add
push
aam
pop
add
lods
dec
pop
loope
fmulp
fprem1
mov
mov
adc
les
imul
stc
xor
fwait
icebp
mov
dec
jmp
mov
mov
push
dec
sbbb
aas
jge
adc
lea
ja
pushf
movzbw
call
jmp
jno
pop
cmp
enter
stos
aad
cmpsl
lret
sbb
cmc
sub
gs
mov
int
bound
mov
xchg
and
outsl
add
xor
dec
push
out
adc
lahf
push
std
fmulp
ficompl
int
es
out
flds
imulb
dec
dec
aam
divb
mov
xchg
fucomip
pop
out
out
mov
inc
push
fidivrl
test
dec
jne
inc
call
cwtl
test
and
sbb
das
push
hlt
gs
pop
stos
movl
lock
xchg
sahf
movsl
lods
inc
test
mov
fmull
mov
push
push
pop
inc
fistl
mov
jmp
mov
jle
inc
lret
shll
add
movsb
adc
bt
sub
bt
call
jne
gs
xor
fs
insb
add
mov
inc
sub
insb
iret
bound
push
push
bound
push
jnp
das
mov
icebp
fmull
xor
sbb
cs
push
sub
incl
mov
fstl
out
insl
in
sti
in
hlt
in
mov
add
push
xor
test
jae
shlb
push
push
push
sbb
or
out
push
pop
cmp
data16
ss
sbb
dec
je
lods
mov
sub
cmp
fs
push
adc
bt
sub
pushf
call
push
pushf
push
push
movl
pushf
call
sbb
ret
pop
bound
xor
jp
fldcw
stc
jns
mov
scas
jp
xchg
mov
pop
push
lds
mov
lods
push
fdivl
loope
dec
adc
test
loopne
sahf
in
das
mov
fdivr
or
sbb
insb
fsubrs
icebp
cld
in
insb
bound
sbb
aas
aad
xchg
sahf
in
inc
outsb
xchg
adc
mov
or
sbb
jmp
and
mov
stc
gs
jp
mov
mov
mov
cmp
inc
inc
and
cwtl
adc
and
jae
pusha
push
movl
pushf
lea
jmp
setb
jmp
push
push
xchg
xchg
ds
inc
push
mov
sar
pop
xor
sbb
xchg
add
out
lcall
ficoms
sbb
shrl
in
leave
rclb
mov
enter
adcb
jp
jae
cld
fisttps
out
repnz
sub
pusha
cmp
adc
inc
and
seto
or
add
fnsave
adc
shlb
push
mov
and
xchg
xchg
stos
mov
add
or
seta
jg
cltd
sbbl
add
jge
shlb
lcall
fiaddl
jo
jmp
push
shlb
int3
sbb
xchg
mov
in
pop
mov
mov
jl
cmp
inc
popf
and
jb
in
into
dec
inc
sub
mov
pop
out
movl
movb
movl
mov
lea
jmp
testl
cwtl
cld
push
pop
and
sub
and
out
push
inc
rorb
sbb
mov
in
clc
stos
xchg
mov
std
and
fwait
test
cmpsb
or
fnstenv
jbe
xchg
test
pop
std
in
mov
xchg
inc
push
mov
xchg
jge
jnp
sti
jae
sub
pusha
pop
push
push
adc
pushf
mov
insb
pop
cmc
xchg
lcall
mov
jl
mov
mov
pushl
popl
push
pushl
ret
cmp
jmp
lea
jne
jmp
or
pushf
lea
je
cmc
cmp
push
lea
jne
call
sete
pushfw
popw
or
rol
rcr
shr
mov
stc
pusha
call
push
push
pushf
lea
jmp
add
adc
xchg
les
js
ss
cwtl
ljmp
sub
arpl
inc
in
mov
lea
xor
push
imul
or
or
inc
clc
jns
call
pop
insb
ds
jp
xor
das
mulb
int3
dec
mov
in
xor
mov
ja
push
sbb
push
add
mov
lcall
fadds
nop
xlat
shll
scas
lock
psllq
xchg
lcall
mov
into
inc
inc
in
sub
push
cmp
add
fcmovnb
cs
xor
or
push
ljmp
jl
push
adc
add
stos
mov
add
fisubrl
pminub
xchg
cwtl
fsubl
iret
les
mov
stos
in
fcmovne
xchg
adc
and
shlb
shrb
cmp
pop
in
repz
popa
push
cmp
jecxz
lret
lcallw
arpl
jl
adc
xor
cmpsb
jmp
int
enter
mov
xor
push
jmp
xor
adc
jno
fistpll
ja
inc
out
mov
jb
push
dec
push
insl
sti
and
add
dec
and
adc
mov
insb
pop
xchg
inc
dec
xchg
ljmp
outsb
and
mov
mov
in
push
dec
xlat
dec
sbb
mov
nop
ret
or
arpl
add
and
lods
add
sub
add
data16
iret
jo
andb
loope
into
and
sbb
rorb
pop
out
jae
or
add
es
push
testb
jb
push
pop
xchg
cmp
inc
sub
ss
inc
fisubrl
inc
pop
test
into
and
pop
inc
aaa
cwtl
adc
enter
ficoml
aaa
adc
test
daa
out
loop
loope
sti
jnp
sub
or
gs
mov
and
and
mov
add
pop
push
pop
xorl
subl
and
adc
xchg
adcl
xchg
clc
mov
insl
push
mov
adc
fldcw
dec
mov
or
loopne
pop
ret
cld
mov
xor
aas
inc
adc
call
push
jp
fwait
inc
push
call
movb
es
gs
in
lret
adc
and
and
inc
std
in
cli
call
bound
or
jae
imul
movsb
je
aam
ljmp
xchg
cmpsb
xchg
add
leave
daa
imul
test
ds
jne
mov
stos
pop
js
aaa
mov
lds
xor
adc
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
movsb
add
and
cmc
insb
xchg
and
or
hlt
mov
pop
mov
xchg
xchg
shrl
nop
adc
mov
mov
push
arpl
divl
mov
clc
mov
adc
mov
in
push
mov
lret
popa
mov
movsl
adc
sbb
lods
pop
lods
shufps
push
imul
insb
sub
cmc
sbb
or
les
pop
ljmp
jmp
imul
xor
lods
cmp
lock
xchg
and
test
sub
shll
nop
mov
lret
dec
xchg
clc
cld
xchg
mov
sub
addr16
dec
cmp
push
mov
pop
adc
mov
cltd
jl
dec
cmp
rcrl
add
mov
subl
popf
mov
fs
lds
je
imul
pop
and
push
adc
cmp
fucom
movsb
pop
push
aas
lcall
mov
and
push
xor
push
jne
sbb
cmp
jge
push
movsb
dec
and
pop
jb
jb
jnp
and
pushf
pusha
stos
xchg
fcmovne
daa
test
jo
test
fxch
add
pop
xor
jle
inc
sbb
shl
lea
stc
repnz
jle
fdivl
ss
inc
sub
dec
lahf
sub
sub
loopne
shr
out
inc
lock
jb
push
lods
push
scas
pushf
in
cmp
call
cli
pop
mov
push
int3
stos
and
xchg
jb
fs
cmc
movsl
jnp
icebp
mov
add
push
adc
stos
pusha
jnp
lret
xchg
xchg
bound
inc
mov
imul
aam
xor
mov
cmpsl
push
cwtl
lahf
lock
shlb
hlt
mov
fdivrs
insb
ret
xchg
sbb
out
adc
hlt
pusha
sub
xchg
sbb
gs
xor
xor
dec
aas
loopne
sub
fistpl
xor
clc
pusha
dec
mov
fwait
cltd
lahf
xor
pop
sub
sti
jns
mov
loopne
addb
adc
rclb
enter
pop
daa
lahf
or
int3
sti
lahf
pop
mov
xchg
fimuls
mov
enter
loopne
into
inc
nop
inc
mov
ss
insl
pop
leave
andb
je
sub
popa
sbb
insl
out
sbb
mov
sub
outsb
clc
shrb
les
xlat
daa
sbb
sbb
push
movsl
fsubrs
outsb
mov
push
insb
jae
fs
aaa
add
mov
leave
rcll
push
mov
or
pushf
jnp
mov
sti
cmpl
or
jns
push
popf
testl
dec
cmp
sub
or
fidivrs
scas
inc
pop
mov
cmp
orb
mov
pop
outsb
inc
in
cli
insl
mov
add
cmc
pop
pop
mulb
imul
dec
dec
jecxz
test
xor
mov
pop
dec
cmp
nop
xor
fstl
lock
test
lret
cltd
jmp
and
xor
lds
ret
mov
in
gs
scas
sbb
cmpsl
xchg
pop
cmp
dec
arpl
push
adc
mov
cwtl
pop
push
mov
push
movsl
aad
call
cli
testl
push
adc
nop
roll
pop
shrl
lcall
jb
jb
lcall
jno
mov
arpl
or
or
mov
cli
push
lret
lods
stos
dec
pop
aaa
leave
cmpsb
mov
cmpsb
cmp
ret
xchg
movb
cmpl
xor
scas
inc
and
mov
inc
push
icebp
or
enter
fwait
jbe
fbstp
adc
sub
pop
in
aas
xor
inc
insl
mov
and
xor
sarl
inc
shr
lret
lock
push
test
sub
sbb
xlat
mov
pop
cmovle
xchg
pop
cmpsb
push
add
divb
xor
sub
mov
inc
mov
cmpsl
js
xchg
mov
ret
das
and
xor
test
movsb
jne
ss
das
jns
gs
cmc
cmp
sbb
in
sub
sahf
out
lahf
aas
mov
cmp
and
js
inc
lds
xchg
ljmp
xor
or
and
shl
push
pushf
sub
adc
ja
iret
mov
add
adc
mov
ja
and
mov
mov
mov
add
addr16
mov
xchg
jb
or
mov
inc
and
test
mov
and
scas
sbb
xchg
pop
sub
lret
mov
lret
cmp
mov
sqrtps
inc
out
jecxz
xchg
fidivs
push
xlat
scas
sbb
fistps
mov
sbb
gs
in
xchg
mov
pop
iret
xchg
cs
aad
sub
fsubrl
hlt
pop
pop
sub
jmp
xor
addr16
arpl
push
pop
mov
xchg
mov
jb
push
fistps
push
xlat
pop
push
in
jmp
mov
sarl
in
pop
and
repnz
push
jmp
push
sbb
push
jecxz
in
rcll
xchg
push
out
enter
mov
hlt
insb
shr
daa
imul
push
sbb
adc
mov
cmpsw
jp
xor
adc
leave
bound
pop
test
popf
imul
pop
and
rorb
mov
ss
lock
jecxz
je
xor
sbb
gs
scas
push
imul
stc
out
imul
mov
push
or
stc
out
dec
ss
mov
jae
push
pop
into
mov
push
lret
push
mov
cmp
cwtl
hlt
andb
lds
sub
jecxz
sbb
mov
and
cmp
aam
popa
pop
sbb
repz
mov
or
stos
jbe
fcmovb
jo
or
rcl
add
inc
repnz
movsl
xchg
jo
cli
das
dec
fadds
out
or
xchg
adcl
add
mov
fstpl
in
cmpsb
mov
xchg
inc
cmc
shl
mov
push
fucomip
push
dec
push
cmp
add
xchg
fdivrl
addb
xor
and
mov
inc
rclb
push
clc
push
sub
inc
xor
xor
les
cmp
inc
mov
or
idivb
leave
adc
or
js
dec
rorb
test
add
inc
xchg
shl
dec
mov
cmpsl
outsl
and
int
cltd
inc
in
xor
xor
out
sti
push
ret
jb
jle
int3
mov
pop
pop
pop
test
mov
loope
inc
mov
pop
or
mov
cmp
ficoms
es
ret
in
mov
pop
scas
stc
enter
in
push
inc
xchg
sub
mov
popf
inc
test
adc
nop
dec
xchg
stos
out
push
mov
lods
jnp
mov
and
and
adc
xor
lods
imul
arpl
test
cmp
stos
pop
cmp
int3
add
push
adcb
dec
scas
mov
mov
or
sbb
mov
shlb
jg
xor
ds
andb
es
out
mov
shrb
subl
es
rol
lods
and
lds
jb
cpuid
filds
sub
push
scas
push
test
pop
sbb
stc
clc
cmp
adc
shlb
ljmp
or
filds
adc
xorb
hlt
pop
sbb
push
addr16
aad
mov
and
das
ffree
lock
xchg
jle
loopne
dec
dec
jns
loopne
inc
sbb
pop
je
gs
loopne
sbb
cli
mov
lods
idivl
or
jae
push
jnp
push
xchg
int3
leave
sub
mov
imul
fstpt
cltd
cmp
fbld
pushf
stc
rcrl
dec
dec
mov
ja
out
pushf
mov
push
loope
pop
mov
bnd
lds
repz
and
dec
int3
sub
cmp
adc
das
xchg
sahf
shrl
mov
mov
pop
into
and
add
mov
push
mov
push
pop
xor
cmp
sub
jnp
test
icebp
sbb
popa
cmpsl
xchg
sbb
push
pop
push
andl
jns,pt
mov
lock
xlat
std
ss
sbb
in
inc
sub
test
mov
dec
jb
sbb
bound
lods
or
jle
jl
or
mov
aam
and
fcompl
fnstenv
push
std
into
movl
shrl
inc
pop
fwait
fwait
dec
scas
cmc
push
idiv
push
inc
out
mov
cmpl
or
aad
adcl
inc
ds
sub
push
ret
jge
adc
push
ds
inc
sbb
xor
stc
dec
inc
cltd
xchg
inc
cmp
or
dec
fildl
icebp
leave
iret
push
xchg
ds
adc
fsubrs
dec
sub
xchg
xor
cmovo
xchg
sbb
add
mov
lock
lahf
nop
jmp
daa
arpl
and
mov
adc
cmpsl
mov
add
push
mov
test
jmp
jg
or
aaa
xchg
enter
dec
xor
into
aam
sbb
xchg
sbb
push
mov
jbe
and
js
aaa
dec
sub
cmp
adc
ret
or
push
push
jne
imul
mov
fs
push
mov
pop
outsl
lret
lds
pusha
fists
and
inc
cld
adc
cmp
rcrl
insb
outsl
lods
mov
adc
lods
mov
xchg
dec
fdivr
cmp
das
mov
movsb
inc
mov
mov
dec
loop
xor
aad
lahf
cwtl
mov
xor
xor
jecxz
fnsave
dec
xchg
mov
adc
faddp
inc
imul
xchg
add
or
ret
in
xor
sub
cmp
or
popa
jbe
and
push
adcb
mov
push
adc
push
arpl
stc
loop
pop
xor
push
pop
test
jge
jmp
stos
mov
out
or
adc
repz
ja
insl
flds
fisttps
sbb
imul
cmp
roll
jmp
lcall
push
jns
adc
push
hlt
mov
push
js
dec
sub
pop
aam
stos
insl
add
sub
add
add
pusha
pushf
lea
je
pusha
not
lea
not
mov
bswap
lea
pusha
mov
jmp
movl
pushl
pusha
pushf
push
lea
jmp
dec
push
mov
inc
int3
aam
pop
mulb
lret
adc
das
cs
inc
lock
shr
sbb
ja
or
icebp
push
int
rcr
push
arpl
sti
test
jae
mov
mov
pop
cld
jo
aas
mov
rorl
adc
movzbw
movzwl
lea
lea
lea
pushf
pop
mov
pusha
push
push
jmp
mov
adc
push
test
sub
nop
loope
sub
xchg
repz
sarl
loop
out
sbb
enter
ret
test
sub
mull
gs
lahf
mov
adc
dec
add
daa
movsb
cmp
jp
fcomps
adc
adc
push
movl
pusha
push
lea
jmp
sub
pusha
pusha
pushf
mov
lea
jne
pusha
lea
call
pushf
movb
pusha
lea
jmp
xor
jmp
movl
push
pushf
lea
jmp
pusha
movl
pushf
movl
movb
movw
mov
pusha
lea
jmp
dec
pop
aas
frstor
iret
inc
push
out
push
notl
divl
jg
mov
sbb
sbb
jb
cmpsl
lahf
lahf
jg
adc
faddl
xchg
repz
xchg
lret
es
xchg
mov
pop
scas
and
mov
mov
scas
and
and
or
add
lret
jbe
andnps
jecxz
mov
sbb
clc
cli
cltd
pop
enter
test
mov
add
movsb
je
test
test
and
mov
xchg
ret
or
xor
shlb
pop
in
mov
rcr
bound
xchg
test
cmpsb
clc
fdivs
popl
vpunpcklwd
pushf
push
push
pop
imul
popa
or
test
inc
adc
movsb
or
shlb
stos
adc
jmp
pushf
add
movb
bt
jmp
repz
adc
loope
movsl
pop
fsubp
lea
add
push
das
or
ret
inc
test
ficoml
or
out
cwtl
out
out
popf
pop
imul
leave
scas
incb
or
and
or
jmp
push
adc
pop
pop
fsts
in
pop
adc
push
jmp
adc
test
mov
in
rol
fsincos
add
cmpsl
xchg
mov
push
nopl
add
out
aam
and
mov
insl
jge
pop
mov
sub
mov
jge
or
movsb
inc
aam
sbb
dec
ffreep
loope
insb
fisubrl
adc
sarl
rcr
insb
daa
scas
jae
cmc
call
mov
jns
lcall
xor
mov
je
pusha
push
lea
ja
push
inc
pushf
pushf
call
repz
nop
in
das
iret
mov
fiadds
mov
push
shlb
or
lret
fisttpll
add
mov
pop
jbe
fisttps
jecxz
les
pop
pop
pop
lds
mov
add
test
cmc
or
call
stc
test
push
pusha
cmp
pushf
call
pusha
add
jmp
jmp
movw
lea
jne
bswap
lahf
mov
push
pushf
pusha
pushf
lea
jmp
and
add
add
add
ret
roll
add
add
add
push
outsl
add
roll
xchg
add
add
mov
add
add
add
or
std
mov
fsub
push
shlb
popf
incl
rorl
mov
and
push
stos
jb
mov
call
icebp
sbb
sub
leave
shrb
es
int3
add
sbb
dec
cmpsl
mov
mov
subb
mov
scas
mov
and
jae
mov
xchg
aam
les
sub
enter
dec
cwtd
jnp
sbb
popa
insb
xchg
test
add
sub
sbb
xor
aad
dec
mov
fs
je
in
ret
adc
sub
jnp
cmp
xchg
mov
sub
ja
aad
fcoms
addr16
pop
cli
or
clc
in
inc
inc
or
cltd
dec
pop
cmpl
aam
add
daa
sub
add
jecxz
mov
and
cld
lahf
dec
push
pop
inc
push
fbstp
lret
fdivrl
insb
push
jae
iret
dec
pause
jge
outsl
mov
and
and
xlat
jecxz
cmp
xchg
aas
sub
inc
ss
sarb
lds
mov
movsl
mov
inc
out
cmc
sbb
jp
imul
xchg
leave
mov
inc
cltd
xchg
aam
mov
repnz
inc
mov
xchg
mov
ffreep
xchg
test
stos
push
aam
mov
icebp
and
lret
sbb
lcall
test
mov
or
fwait
add
outsb
or
mov
enter
add
xchg
jl
mov
lds
pop
mov
insb
sub
pop
data16
mov
mov
mov
sbb
dec
test
xchg
push
adc
pusha
call
pushf
mov
pushf
inc
lea
push
lea
call
pushf
pushf
adc
mov
jmp
rorb
push
dec
pop
inc
push
in
out
notb
jnp
push
mov
aam
pop
or
adc
and
lock
enter
fldcw
xor
leave
sarb
sahf
inc
aam
add
push
jbe
mov
and
repz
sbb
push
loope
pop
rclb
repz
mov
and
fs
negl
xor
lea
jmp
pushf
mov
mov
mov
mov
pushl
jmp
insb
imul
jns
fs
cli
jns
je
jp
or
pop
cmp
inc
inc
div
pop
stos
push
jnp
cmp
mov
inc
fwait
mov
fmul
sahf
stc
inc
push
sbb
or
inc
iret
mov
popf
or
mov
dec
adcb
rcl
and
fisubrl
or
xchg
dec
mov
jb
icebp
dec
push
pop
jae
repnz
pop
pushl
cmpsl
out
jmp
jmp
loop
ljmp
sbb
sub
test
pusha
jmp
cwtl
mov
or
jmp
mov
popf
mov
pop
subl
nop
mov
fwait
scas
loop
pop
add
fst
ljmp
bound
sub
movsb
mov
in
mov
dec
sbb
pop
popa
xor
pop
inc
xchg
lea
imul
push
push
pop
bound
lahf
andl
sub
xchg
adc
bswap
not
mov
mov
lea
jmp
pop
dec
push
mov
in
stos
xchg
and
in
hlt
xchg
cld
std
jmp
insb
cmp
stos
scas
mov
sti
fistps
sub
inc
push
cmpsl
stos
inc
add
imul
repnz
xorl
ret
xchg
pop
mov
fisubrl
cli
std
jle
std
jge
push
out
cli
sbb
or
or
add
jg
and
mov
enter
mov
or
mov
call
mov
mov
mov
sbb
sti
cmpsl
push
and
mov
and
negb
push
push
outsl
pop
aaa
adc
jmp
jbe
gs
in
pop
xor
adc
adc
outsb
arpl
fisubrl
test
pop
push
jle
cmpsl
jge
sub
cli
lcall
cli
jne
lcall
lcall
repnz
movsbw
bts
shl
push
ror
setne
push
sub
push
setns
clc
mov
not
push
mov
shld
shr
bsr
mov
clc
test
or
mov
lea
je
cmc
pusha
bt
pusha
or
pushl
lea
je
xadd
bsf
das
sub
movzbw
cwtl
or
xchg
mov
xchg
adc
cmp
mov
mov
sbb
shr
jmp
jmp
jne
push
pushf
call
pop
inc
das
roll
jmp
jmp
cmp
inc
in
divl
dec
repz
cli
std
ss
daa
into
jbe
lods
insl
sbb
clc
dec
or
aas
cmc
sbb
mov
cmp
pop
mov
mov
loopne
les
out
insb
xor
push
dec
cmpsb
or
and
sbb
xlat
xchg
and
sbb
pop
or
mov
jns
cmp
mov
push
xor
testb
xchg
call
test
and
ds
addr16
or
mov
pop
jp
fsts
dec
push
fwait
inc
add
pop
addr16
out
loop
pop
sub
sub
clc
add
jg
mov
pop
repz
test
inc
test
mov
pop
and
pop
cld
icebp
outsb
jecxz
sarl
xor
insb
or
mov
test
adc
xchg
push
fisubl
mov
movb
sbb
sar
cmp
or
mov
cmp
sub
jmp
icebp
negb
or
dec
int3
call
aad
js
jmp
xchg
dec
inc
dec
mov
adc
loopne
mov
jmp
adc
mov
cmp
in
shlb
insb
xor
mov
in
orb
jge
xchg
fbld
mov
popf
push
adcl
pop
pop
jmp
movsbw
lea
movzbw
call
lea
call
call
inc
sti
inc
cmp
in
cmpsl
cmp
out
ljmp
shl
xor
sbbl
xchg
and
pop
inc
push
dec
lret
pop
pushf
or
mov
mov
pop
data16
rolb
xor
lcall
cmp
fsubrs
dec
cmpsb
mov
into
xchg
imul
sarl
or
cltd
dec
jo
scas
mov
loop
sub
je
cmc
test
dec
dec
shll
xorb
xor
mov
shl
jno
mov
imul
mov
cli
add
push
mov
lds
push
repz
scas
xchg
jl
fnstsw
insb
loopne
sub
lahf
lock
negl
test
jge
mov
mov
imul
iret
cmc
int3
dec
sbb
mov
pop
test
int
popa
repz
add
cmp
sbb
mov
mov
ljmp
out
cwtl
mull
add
cmpsl
xchg
pop
mov
mov
lahf
dec
popaw
loop
lock
ds
adcl
rclb
mov
jo
into
clc
pop
jbe
popf
adcl
mov
lock
or
cmp
or
lods
jae
shll
dec
jo
push
cmp
dec
fidivrs
mov
xchg
xor
cmpsb
add
add
shl
lods
push
mov
orl
sarl
jbe
pop
shll
mov
mov
loope
aaa
shlb
insb
xor
jecxz
xor
jno
xchg
arpl
ss
sbb
daa
jmp
or
adc
aad
cmp
imul
insl
xchg
push
push
test
xor
dec
aam
xor
cld
and
adc
mov
insl
mov
dec
adc
bnd
insl
enter
mov
push
pop
and
pop
out
pop
pop
pop
popa
imul
fistps
inc
mov
inc
add
and
xor
cmp
mov
mov
lock
add
sub
xor
inc
orl
std
cli
lea
jae
push
pushf
lea
jne
call
imul
cmp
mov
jns
aaa
adc
sbb
stos
ficoml
insb
push
jne
adc
adcl
lret
fs
pop
sbb
mov
jge
pusha
pusha
push
sarl
mov
adc
lods
and
fstp
insb
xor
nop
xchg
mov
lds
das
outsl
add
push
fstpt
in
jns
sub
add
add
adc
add
mov
in
xchg
mov
or
cmp
add
push
daa
sbb
adc
jae
mov
call
pop
movsl
out
and
int3
gs
add
and
fisubl
dec
into
adc
insl
loopne
xor
mov
mov
sahf
mov
inc
insb
shrb
aas
in
sbb
or
jge
xor
into
lods
subb
xlat
adc
sbb
mov
cmp
mov
xchg
mov
leave
or
sub
xor
rorl
add
mov
mov
loope
sbb
movsb
inc
sarb
adc
ds
add
insb
outsb
mov
ja
hlt
sbb
and
mov
orb
rorl
adc
movl
lea
jne
pusha
mov
lea
call
push
pusha
pushf
lea
jmp
testb
nop
hlt
inc
fcompp
jp
mov
and
pop
and
push
cmp
xchg
mov
mov
sub
sub
dec
or
ss
fiadds
jge
fistps
jmp
or
popf
add
or
lds
mov
lret
popf
lods
jmp
xor
xlat
cwtl
loope
jae
fimull
jb
dec
aas
shrl
jl
push
push
int
xorb
in
mov
xchg
stos
hlt
mov
push
add
sub
cld
test
cmpsl
push
pop
movsb
inc
enter
push
jle
popf
xor
adc
idivl
addl
test
cmp
pop
or
add
mov
xchg
mov
lret
push
pop
int3
mov
repz
adc
dec
das
xchg
mov
data16
pusha
lock
cs
test
or
imul
sub
loope
jo
mov
stc
and
xchg
ja
cli
in
and
mov
stos
mov
mov
pusha
lea
jmp
lcall
je
fsub
fldl
mov
cmp
and
sub
add
movsb
and
hlt
repz
inc
xchg
pushf
mov
call
aad
sbb
mov
sbb
outsb
repnz
imul
std
jecxz
jmp
out
inc
xchg
sbb
mov
ja
and
outsl
loop
xchg
inc
cs
sub
ss
in
inc
jg
sahf
das
cmp
ss
out
hlt
cld
hlt
ss
repnz
pslld
sahf
loopne
in
push
xchg
icebp
xor
adc
cmp
or
lea
js
pushf
mov
lea
je
pusha
lea
bswap
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
cmc
add
push
mov
pushf
lea
jmp
pop
movzbw
pushf
mov
pushl
lea
jmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
and
decl
cmp
pop
pop
mov
pop
loopne
fistps
and
repnz
pusha
or
mov
jnp
dec
pop
jp
jbe
es
adc
xchg
jle
dec
lmsw
add
inc
push
loope
mov
add
test
sub
call
hlt
mov
sbb
mov
lahf
jl
dec
rorl
cmp
es
sti
shlb
or
enter
loope
andl
dec
data16
jb
and
inc
jne
test
cmp
add
data16
shlb
push
mov
mov
and
mov
xor
and
inc
out
sbbl
stc
xor
fidivl
mov
cltd
xchg
or
fcmovnu
fbstp
and
dec
fbstp
dec
jl
pop
add
incl
fmulp
test
iret
mov
push
imul
add
fisubs
mov
rclb
lods
sbbl
loopne
xor
outsb
scas
xchg
lret
lds
xlat
xor
ficompl
loop
xorl
xor
cmp
dec
pop
adc
jl
gs
es
shlb
pop
rorb
dec
sbb
xlat
cmp
push
pop
icebp
ss
sub
add
jg
mov
adc
jge
mov
cmpsl
icebp
dec
divps
ret
push
dec
cmp
hlt
test
jge
fwait
sub
lods
repnz
sti
ds
push
dec
mulb
les
jge
aas
add
int3
outsl
and
jbe
into
aad
lods
push
pop
mov
jg
mov
lock
mov
adc
sti
push
in
xor
lahf
xor
xlat
adc
je
ja
sub
gs
pop
mov
add
cli
cmp
add
pushf
jno
rorl
push
xchg
cs
mov
or
test
cwtl
dec
push
scas
mov
rcl
outsl
lds
mov
loop
cmp
mov
popf
ret
xchg
mov
icebp
adc
shl
sbb
aaa
movsl
cmp
repz
or
inc
ficoms
mov
in
stos
mov
jmp
subb
or
sbb
aaa
je
sub
fistpl
jns
sub
sub
mov
or
push
fstpl
imul
mov
push
mov
and
push
or
add
int3
push
mov
nop
and
mov
cld
or
fisubrl
fisubs
cmp
push
xchg
scas
test
pop
rcll
outsl
mov
in
adc
into
int3
ret
and
mov
cmp
jae
push
cmp
mov
push
ljmp
insl
jl
aaa
jo
fldenv
ds
pop
ja,pn
cmpsb
lret
or
mov
std
sub
ret
push
js
sbb
orl
jnp
mov
cmp
push
nop
movsl
in
pop
or
dec
jno
dec
xorl
fidivrl
or
in
push
mov
ficomps
pop
fidivrs
int
popf
test
scas
cmp
lahf
mov
push
or
mov
sbb
cmp
call
movl
push
lea
jmp
push
imul
sbb
xchg
mov
test
call
sub
and
adc
mov
repz
js
lret
jns
xchg
sbb
or
mov
mov
jb
cmp
pop
adc
inc
fcmovnb
mov
mov
sub
fwait
xchg
fnsetpm(287
iret
pop
jbe
retw
imul
mov
push
pusha
jno
add
xchg
xchg
stc
xchg
cli
sub
xchg
test
stc
call
iret
add
and
add
dec
inc
test
dec
mov
jp
sti
add
sbb
mov
push
dec
movsb
test
stos
xor
out
cmp
sbb
fisubrl
xchg
int3
ror
int3
mov
push
add
dec
movsl
sti
fistl
and
adc
adc
and
add
add
add
ret
roll
add
add
add
push
outsl
add
roll
xchg
add
add
mov
add
add
inc
and
int3
outsb
or
pusha
movb
lea
jmp
ds
mov
sub
fdivl
cmc
leave
lret
sub
mov
ja
out
hlt
sbb
jae
test
out
push
ss
add
lret
xor
adc
and
imul
sbb
xor
lods
int
adc
shr
pop
cltd
cmc
inc
push
ljmp
pop
fstps
ja
imul
sub
sbb
dec
insl
push
jle
cmpb
inc
push
cmp
dec
add
push
mov
dec
pop
add
shll
lods
out
jb
adc
dec
dec
enter
push
jp
pop
and
sbb
pop
mov
add
aas
int
roll
pop
add
mov
ss
fwait
test
int3
and
je
fsubrl
lahf
hlt
lahf
mov
inc
mov
adc
jmp
mov
sarl
sbb
adc
cmpsb
mov
rcrl
or
push
mov
mov
shl
jg
jecxz
and
xor
inc
adc
xorl
test
lds
jnp
loope
jae
cli
push
inc
pop
and
fnsave
cwtl
mov
scas
das
stos
push
fadds
sarl
inc
imull
push
or
cmp
mov
xor
fsubrl
jg
adc
adc
jo
xor
and
sub
sub
flds
inc
inc
lret
mov
adc
mov
cmc
loopne
mov
or
sbb
xchg
mov
scas
ss
sub
sub
sbb
dec
dec
fistl
cmp
mov
sbb
pop
sahf
inc
sbb
hlt
adc
fnsave
push
adc
mov
mov
jmpw
push
sbb
js
xchg
in
xor
push
push
dec
jmp
lahf
mov
sbb
call
ljmp
iret
movsb
in
iret
pop
or
pop
repnz
mov
call
mov
repz
out
sub
jbe
fiadds
pusha
xchg
jno
jae
lahf
ds
push
jb
pusha
loop
hlt
mov
adc
push
decb
fisubrl
stos
xchg
popf
pop
insl
jo
fcomip
pusha
mov
pop
mov
sbb
sub
fwait
inc
mov
mov
xchg
xchg
lea
not
movzbw
not
movsbl
mov
call
call
sbb
pop
adc
or
imul
pop
and
mov
adc
popf
outsl
dec
and
xor
in
insl
je
out
xchg
in
and
aas
lea
pop
adc
sub
iret
ret
and
or
stc
mov
call
mov
cmp
aaa
or
xor
xor
and
mov
jl
adc
push
pushf
sbb
mov
sub
lock
mov
call
outsb
xchg
inc
pop
xchg
adc
je
fs
mov
sbb
hlt
in
and
pop
pop
ljmp
ja
lret
ja
push
push
es
adc
adc
ss
jge
ja
arpl
loopne
mov
std
and
int
sbb
xchg
mov
addr16
lret
and
pop
addr16
and
lahf
mov
imul
loopne
scas
mov
jle
nop
mov
nop
ret
out
out
push
or
mov
arpl
pop
pop
fistps
pop
jg
push
jp
outsb
adc
jp
aam
push
cmp
lds
imul
test
dec
push
dec
dec
pop
jmp
mov
aad
popa
nop
lret
leave
xchg
mov
inc
pop
jecxz
sbb
bound
mov
xchg
cmp
jno
mov
mov
ret
mov
es
adcb
pop
adc
adc
inc
test
or
mov
and
inc
dec
sbb
addr16
and
jle
lahf
mov
negb
adc
jne
rcrl
div
addl
jno
outsb
lods
pop
rcr
in
xor
mov
lods
mov
mov
cmp
gs
adc
mov
mov
mov
cmp
mov
push
push
cwtl
adc
outsl
std
lret
inc
add
mov
mov
insl
cltd
cmc
aam
mov
push
movsl
xchg
aaa
pop
jge
mov
mov
push
movsl
xchg
aaa
bound
mov
lock
xchg
aaa
jno
fsubs
bound
ds
push
mov
mov
cmpl
loopne
lcall
aaa
outsl
cmp
mov
test
sbb
xor
xlat
mov
out
in
mov
xchg
aaa
push
sbbl
xchg
aaa
push
lea
and
sub
xor
lock
xchg
aaa
es
rcrl
stos
sahf
xchg
or
mov
mov
std
inc
std
sub
xchg
aaa
jno
add
add
mov
enter
jno
add
add
mov
shll
add
xor
xlat
mov
insb
xchg
int
mov
addr16
xchg
xor
mov
dec
lock
xchg
aaa
jo
add
lea
movsb
int3
mov
cwtl
sarl
aaa
cs
daa
rcr
mov
xchg
aaa
cmp
xchg
sti
sbb
xchg
aaa
jno
loop
pusha
mov
xchg
sahf
xchg
aaa
xor
sub
lret
xchg
mov
cli
or
int3
mov
pop
adc
jno
test
mov
mov
jo
mov
lds
loop
pop
jp
dec
shlb
jns
lds
lock
xchg
aaa
jno
test
or
xor
addr16
xchg
aaa
jno
adc
push
lock
xchg
aaa
jno
aad
or
popf
xchg
aaa
lea
push
cltd
sahf
xchg
ss
jge
cmp
xchg
xor
shlb
adc
cmc
int3
mov
pop
lock
mov
xchg
sahf
xchg
ss
jg
in
push
movsl
xchg
aaa
outsb
cmp
jns
lods
push
dec
cmp
push
dec
div
fidivrs
mov
loopne
mov
xor
fs
adc
adc
insl
test
jns
jg,pt
stos
repz
cwtl
dec
mov
sub
or
push
insl
nop
aas
push
cmp
mov
mov
inc
pushf
gs
push
add
lret
mov
fnsave
ss
fcmovnbe
lret
test
adc
movb
movl
call
into
jae
aas
jge
repnz
addr16
cld
cld
cmp
incb
sbb
bound
mov
popaw
and
cmp
adc
jle
lds
scas
push
rdpmc
xor
loop
fcoml
mov
aas
or
or
call
inc
cmc
shl
mov
xchg
call
jmp
sbb
jb
loop
xchg
pop
sbb
xor
outsb
xchg
rclb
mov
jecxz
pop
outsb
popf
les
mov
rep
repz
popf
mov
gs
xchg
ficoms
imull
inc
add
std
insl
out
jo
and
xchg
std
lds
mov
fisubrl
cld
mov
ljmp
mov
adc
lret
push
sbb
add
je
pop
jg
mov
sub
mov
adc
dec
iret
sbb
push
pop
or
loop
ss
push
xchg
scas
scas
pop
cmp
call
notl
out
jbe
call
test
adc
movsl
xchg
sbb
mov
fstl
push
pop
popa
insb
insb
insl
jne
add
mov
in
stos
xor
lcall
adc
xchg
xor
iret
pusha
shlb
sti
jle
add
popa
adc
sub
ss
rcrl
mov
fldenv
sub
push
aam
xor
xchg
inc
rcl
cwtl
adc
js
js
pop
outsl
inc
adc
popa
repz
sarl
sub
loopne
dec
scas
test
push
add
sahf
xor
add
lea
arpl
adc
mov
add
dec
push
jp
lret
not
mov
cmpsl
mov
adc
aad
jns
sbbb
sub
dec
pop
push
test
imul
xchg
and
and
cmp
xchg
and
cmp
cmp
lahf
mov
push
outsl
roll
out
inc
addr16
fwait
test
out
mov
mov
fcomps
jmp
lea
je
cmp
add
call
mov
push
lea
pusha
mov
push
pushl
ret
clc
bt
clc
bt
or
call
cmp
cs
add
cmp
pop
imul
and
fisttpl
inc
xchg
popf
aam
sub
jns
pop
sbb
stos
arpl
das
ja
pop
dec
loopne
xchg
xchg
sarl
jge
loopne
xorl
lods
cltd
icebp
rcll
push
int
pop
cmp
jg
mov
enter
pop
stos
cmp
mov
insb
add
cmpl
dec
test
mov
imul
out
out
mov
mov
jl
out
or
outsl
cmp
xchg
mov
mov
call
push
rcll
push
mov
outsl
mov
mov
pop
clc
insl
ficomps
std
mov
pop
or
cwtl
mov
out
cmp
xor
pop
sarb
js
mov
inc
aaa
jae
sub
aas
adc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
repz
inc
cltd
inc
call
scas
int
bnd
sbb
sbb
sbb
mov
xor
pop
loope
pop
lcall
mov
testb
fsubrl
add
sahf
cmpsb
insb
out
sbb
mov
aaa
data16
mov
jmp
insb
fwait
movsl
inc
in
pop
cli
mov
aas
mov
movsl
mov
rorb
mov
push
mov
sbb
or
repz
cmpsl
mov
xor
xchg
adc
add
add
jl
adc
xchg
fwait
ret
sets
inc
not
push
inc
inc
inc
pusha
xchg
pusha
pushf
and
cwtl
mov
not
xor
mov
stc
test
xchg
sbb
inc
mov
bt
cmp
test
sub
mov
call
mov
lea
jae
test
clc
add
jmp
pushf
lea
ja
bt
sub
shl
cmp
add
add
or
rol
lea
mov
stc
mov
push
cmc
repnz
mov
pushf
jmp
jmp
pusha
cmp
mov
pusha
jmp
mov
lea
bswap
movl
bswap
pushf
lea
mov
movl
call
stos
hlt
xchg
ldmxcsr
add
nop
into
xor
jo
les
imul
jne
add
lods
leave
shrb
jno
cwtl
sbb
rcrl
jl
ds
es
test
lret
test
out
adc
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
dec
scas
shrb
push
nop
in
outsl
jb
lods
mov
ret
jge
lods
push
inc
das
ds
es
adc
sbb
dec
xchg
jge
xchg
jne
push
jno
pop
mov
jmp
call
in
pushf
mov
fwait
pushf
inc
fnstcw
inc
xchg
jp
pushf
inc
sub
test
dec
and
aad
cwtl
xchg
sub
hlt
pop
shrl
in
fcoml
dec
int
mov
sti
mov
cmp
push
cmp
call
lret
jmp
mov
out
iret
fdivp
nop
mov
add
out
push
sti
inc
adc
and
lods
fsubl
pop
lea
lea
add
jecxz
sub
mov
mov
repnz
xchg
shlb
in
add
pop
cmp
adc
jmp
adc
dec
popf
cltd
aam
adc
repnz
movsl
test
mov
es
sbb
call
cmpsb
mov
inc
push
not
popa
sbb
inc
call
clc
xchg
sahf
out
and
cmp
sbb
call
xor
push
cmp
je
sbb
fcmovnb
pushf
cmc
mov
cwtl
and
repnz
mov
cld
int
xchg
pop
adcb
loop
insl
mov
pushf
lea
jne
pusha
movw
inc
push
jmp
cmpsb
mov
push
and
add
mov
movsl
out
stc
les
mov
pusha
and
arpl
and
ss
test
sbb
or
repnz
xor
fsubs
or
adc
cld
mov
xchg
mov
mov
xchg
rol
mov
sub
call
cmpsb
jmp
cmp
or
xchg
testl
hlt
test
jne
sub
pop
sbb
jl
mov
fdivs
fwait
ret
addr16
leave
jae
pusha
cmpsl
sbbl
lcall
push
jecxz
pop
ds
cmpsb
sub
imul
inc
push
cmp
lret
insb
dec
scas
addr16
jecxz
or
sub
sbb
jbe
sbb
les
cmp
mov
loop
dec
push
cli
aad
pop
inc
push
aaa
ja
lahf
inc
cmpl
mov
test
mov
test
push
inc
aaa
cmp
cmp
rclb
push
or
mov
insb
xchg
jno
push
xchg
stc
stc
or
ja
stos
mov
adc
into
lret
sbb
dec
clc
xor
cmpsb
ja
cmp
aad
sbb
clc
rol
push
or
adc
mov
sub
xor
fmul
fmuls
and
in
jnp
clc
xor
pop
inc
or
mov
outsl
add
sbb
jmp
pop
xlat
mov
add
aaa
and
pop
push
pop
xlat
pop
xor
rolb
xor
push
test
movsl
movsb
fisttpll
sbb
jno
scas
xchg
push
xorb
sub
mov
dec
or
fdivp
push
cmp
adc
shlb
lods
mov
jecxz
jg
int
jae
test
mov
sahf
and
das
insb
sbb
sahf
pop
or
pushf
jo
lds
out
dec
std
adc
out
les
sbb
lods
shrb
push
insb
and
js
xchg
pop
push
into
add
jecxz
jecxz
and
inc
fiadds
inc
push
dec
add
mov
mov
aas
pop
inc
push
sub
cmp
jns
mov
cli
mov
lcall
push
out
mov
xor
sub
and
dec
xor
cmp
jo
or
test
sbb
shll
mov
pop
loop
inc
cmpsl
sub
xor
mov
cwtl
xchg
sbb
sub
mov
xor
pushf
pop
out
pop
cmpb
repz
mov
cwtl
sahf
add
sbb
mov
icebp
sahf
out
pop
sbb
cld
ret
lret
sbb
mov
mov
fsubp
ret
imul
pop
push
lret
jo
inc
push
xchg
push
and
popf
mov
dec
les
lds
push
mov
insl
xchg
iret
int3
popf
pop
fcmovu
dec
scas
adc
xor
pop
jbe
mov
enter
push
and
lahf
out
sbb
insl
scas
xor
clc
stc
lods
push
cwtl
test
test
dec
movl
dec
pop
inc
std
jecxz
dec
pop
pop
mov
xchg
mov
xchg
xor
push
mov
sarl
call
imul
dec
and
pop
pop
push
push
rcrb
dec
movsl
outsb
inc
aad
lret
shl
dec
adc
dec
fisubrl
cmp
jl
stos
pop
or
outsl
repz
push
aaa
cmpsl
data16
test
xchg
jne
imul
mov
sti
sar
inc
cmp
and
bound
pop
cbtw
sbb
out
sbb
jne
ret
mov
dec
icebp
jne
stc
rcl
in
std
imul
std
fisttps
mov
andl
flds
loop
dec
arpl
inc
insl
lds
imulb
xchg
pushf
mov
add
aad
mov
hlt
adc
les
out
fisubrl
ret
out
sub
sub
sub
add
jno
pusha
insl
bound
pop
cld
xor
adc
fstp
sbb
mov
sbb
imulb
test
test
or
in
es
xchg
js
jmp
lret
mov
bound
scas
out
jbe
add
sub
out
repnz
dec
push
xor
aam
ret
pop
in
cmp
cmp
add
in
dec
stos
fisubrl
out
clc
sub
sub
mov
xchg
add
jl
cmp
rep
out
xor
adc
mov
jmp
in
pop
mov
xor
fbstp
mov
mov
fisubrs
push
sbb
lcall
adc
out
mov
xchg
test
sub
pop
dec
jl
push
loopne
popl
adc
push
adc
iret
jge
lret
cwtl
jecxz
and
add
fnstsw
jmp
xchg
push
pop
movl
push
ljmp
sbb
add
xor
setae
jmp
pop
sub
int3
rcr
stc
xchg
aas
push
add
mov
lret
fcomps
dec
hlt
mov
pushf
jne
out
loop
data16
outsl
cmpb
icebp
mov
inc
adc
pushf
mov
lea
jne
lea
cwtl
pushf
mov
pushf
mov
pushf
movl
lea
jmp
xchg
lods
push
xor
clc
jecxz
jg
notl
int3
std
in
nop
xchg
repnz
sbb
push
mov
dec
movsb
fbld
adc
mov
in
iret
ljmp
mov
lea
in
scas
jnp
insb
adc
lcall
xchg
push
cwtl
add
xchg
shlb
jl
jno
lock
xchg
shll
aas
in
outsl
adc
popf
rdtsc
nop
jmp
movl
pusha
lea
jmp
inc
pop
gs
push
inc
push
stos
dec
loopne
mov
je
cmc
pop
daa
pop
cmpsb
or
cltd
enter
out
in
push
mov
lahf
in
imull
roll
push
js
sbb
ss
dec
push
addb
stos
adc
inc
dec
aad
sbb
cmp
mov
leave
mov
add
sub
push
pop
xor
je
int3
xor
frstor
jecxz
arpl
mov
and
inc
cmp
dec
call
mov
leave
rcrb
arpl
daa
xchg
mov
or
sbb
jne
add
movsb
test
inc
or
mov
js
cmp
scas
decl
das
insl
icebp
and
ja
lock
bswap
das
push
adc
and
sbb
rorl
cltd
iret
adc
outsl
xor
mov
fstl
xchg
or
inc
xor
fmull
and
xchg
xchg
loope
pop
loopne
ljmp
jp
push
pop
out
lret
repnz
dec
sbb
je
sbb
outsb
pop
push
xchg
mov
sub
sbb
jbe
mov
iret
inc
sbb
add
stc
cmp
in
pop
mov
fdivrs
add
jmp
repz
js
test
sub
mov
xor
iret
pusha
data16
and
in
in
dec
clc
push
xchg
mov
fisttps
adc
and
xchg
cltd
jne
ss
jle
push
sarl
rolb
shrb
add
mov
lret
daa
jl
pop
add
and
mov
js
inc
movsb
push
dec
mov
enter
pop
jbe
into
mov
jno
loop
adc
lea
ja
pushf
pushf
pushf
movb
add
sub
pusha
jmp
ret
fidivl
int
mov
adc
mov
pop
leave
in
imul
gs
mov
jl
pop
out
pop
pop
fsubr
mov
idivl
jns
push
ja
insl
adc
cmc
mov
jmp
lea
jne
aas
bsr
lahf
sub
dec
movzbw
bsf
mov
and
cmc
add
cmp
mov
jmp
sar
movsb
or
xor
push
xchg
lods
stos
mov
stos
push
testl
pop
cmpsb
xchg
movq
jl
lea
cmp
sbb
repnz
shlb
xchg
lahf
sahf
js
into
sarb
ret
ret
scas
add
jge
lock
push
scas
mov
clc
loopne
adc
mov
lods
pushf
aad
mov
mov
mov
mov
enter
lea
jne
bswap
mov
pusha
pusha
pushf
pushf
lea
jmp
xchg
push
push
movl
movb
pushf
pusha
push
movl
pushf
lea
jmp
lea
call
pushf
pusha
pushf
lea
jae
inc
pushf
mov
not
setbe
inc
pushf
sete
mov
lea
push
pusha
lea
call
call
popf
dec
pop
xor
repz
aam
je
lcall
hlt
xor
imul
mov
push
pop
and
xlat
sbb
test
cmpsb
push
out
dec
jmp
ljmp
fbld
sbb
imul
push
dec
aaa
dec
gs
mov
cmc
mulb
sti
pop
clc
cwtl
js
gs
out
mov
and
pusha
push
movl
jmp
pushf
bt
cmp
pusha
lea
jae
pushf
lea
jmp
bts
mov
cmc
pushf
movw
pushf
and
test
pushf
add
add
clc
pusha
add
pushl
push
jmp
push
push
ljmp
xchg
lods
mulb
fdivrs
add
sbb
ret
lods
push
push
mov
int
imul
cli
add
scas
pop
dec
je
xor
jl
add
xor
loopne
in
out
sub
insl
mov
sbb
gs
dec
inc
data16
loope
icebp
stos
fists
fcomp
inc
adc
jns
icebp
popf
or
sbb
jg
pusha
pushf
jae
jo
adc
or
repnz
dec
sbb
and
pop
inc
iret
xlat
cld
in
pop
aaa
adc
or
or
mov
sbb
cmp
sti
push
adc
mov
stos
shrb
or
sub
or
mov
inc
jmp
jno
and
mov
into
ret
dec
adc
mov
add
push
mov
add
jbe
push
xchg
mov
call
pop
add
push
sub
adc
inc
dec
fistpl
insl
and
clc
mov
mov
pop
push
adc
sub
inc
ss
inc
dec
mov
or
sbb
test
xchg
int
or
adc
or
addr16
fildl
andl
sub
out
adc
nop
popa
mov
fisttpll
cmp
cmp
jbe
imul
dec
ffree
mov
mov
cmp
jl
xlat
sub
cmpsb
repz
pop
adc
push
test
jns
pop
mov
jnp
pop
fmuls
lret
emms
xor
cld
out
push
stc
jmp
ss
fnstcw
pop
dec
aaa
rcl
ficoml
fadds
out
ja
xor
xchg
stos
cmp
daa
sub
xor
and
cmp
shll
cmp
je
int
mov
push
dec
xchg
lea
out
lcall
imul
dec
mov
and
ja
adc
dec
addr16
jmp
push
cmp
or
cld
push
outsb
pop
into
outsb
xchg
push
jp
lahf
pop
and
jnp
call
inc
insb
jge
push
shll
cmp
xchg
xor
mov
push
insl
sub
mov
sahf
fld
jmp
pusha
mov
pushl
movl
call
pushf
mov
movl
movl
pushl
pushl
pushf
lea
jmp
bts
jmp
call
lea
jae
shl
xchg
mov
sub
neg
mov
setl
neg
movsbw
mov
push
pushf
sub
test
repnz
jmp
push
inc
push
cmp
mov
and
mov
movsl
xchg
add
das
les
out
jbe
sbb
adc
leave
rclb
popa
call
testl
shll
sbbl
pop
outsb
dec
rclb
mov
lock
call
pushf
mov
cmp
mov
movw
lea
ja
clc
add
bt
or
push
movb
push
lea
je
stc
call
imul
add
data16
mov
fisubs
mov
incl
cld
in
and
inc
ja
mov
call
push
and
jg
rcrb
fmull
adcb
sarl
popa
xor
movb
fstps
call
mov
push
adc
arpl
cmc
repnz
jl
andl
shrb
repz
int3
push
push
xor
jecxz
mov
add
add
mov
sub
push
lret
std
jmp
push
dec
mov
aad
xchg
dec
negb
ret
dec
and
mov
sti
xchg
sub
mov
sahf
jae
movsl
sbb
dec
cmpsl
hlt
aaa
jecxz
movsl
out
mov
testb
loop
movsl
aad
push
cwtl
pop
insl
sub
xor
ret
icebp
lock
push
mov
xor
das
pop
pop
sbb
test
dec
cmp
shlb
test
mov
jecxz
or
insb
lcall
jb
sub
outsb
das
popa
addr16
cs
cs
lea
push
inc
adc
xor
jecxz
dec
pushl
xchg
push
xchg
sbb
cli
out
fidivl
inc
sbb
mov
cmpsb
loope
push
jns
or
and
gs
fsubp
xor
and
das
into
jbe
push
cmp
cmp
jae
push
shll
pusha
dec
outsb
int
xor
or
add
or
or
arpl
pop
dec
sbb
sbb
and
icebp
push
mov
jnp
sbb
movsl
mov
ret
ss
dec
enter
out
repz
and
sub
lods
push
insl
scas
jp
mov
aaa
inc
or
mov
sub
repz
cltd
into
test
sub
sbb
dec
jae
jbe
aad
lcall
repz
add
test
gs
adc
jmp
pushf
call
xchg
nop
push
push
iret
mov
jno
jg
insl
inc
mov
lock
add
or
cs
mov
hlt
lea
mov
lahf
aaa
stc
pop
push
inc
rcrb
jg
popf
and
dec
fisubrl
mov
push
sahf
sti
movsb
xchg
adcb
fmul
rcl
fisubrl
jle
aam
dec
lock
pop
xor
dec
idivl
sub
jns
push
fisttpl
mov
loope
xchg
mov
aam
imul
fisttpl
inc
aas
jnp
aaa
test
jecxz
sbb
mov
push
adc
shlb
enter
push
frstor
jno
loopne
repz
bnd
int
dec
mov
dec
pop
jbe
jmp
fwait
jmp
push
pop
inc
add
mov
mov
mov
pushf
lea
jmp
inc
pushf
mov
lea
jmp
inc
pusha
push
jmp
leave
icebp
adc
adc
push
sub
shll
jmp
frstor
ds
inc
fbld
pop
sub
ret
sbbl
test
rcrl
inc
inc
pop
xchg
out
shrb
jne
pushf
mov
psubq
enter
addl
pop
leave
add
lret
shrb
loope
xor
push
mov
scas
mov
mov
mov
fs
es
jnp
fldl
pop
bound
rol
ret
loopne
imul
cltd
out
xor
pop
dec
mov
outsl
icebp
xor
sahf
push
push
out
hlt
cmc
repz
into
pop
loop
movsl
iret
shll
cmp
cmp
mov
push
xchg
sub
in
push
std
imul
loop
mov
adcl
add
rcrl
inc
sub
jnp
mov
cli
add
or
loope
out
mov
inc
repnz
ss
icebp
addb
lods
das
sub
inc
popf
cmp
mov
push
mov
into
sahf
push
ds
push
push
shl
jl
loop
pop
rcll
or
call
xor
loop
adc
inc
outsb
test
cmp
push
in
icebp
xchg
fimuls
idivb
pusha
std
jle
icebp
sbb
sbb
xchg
repz
aaa
test
shll
imul
push
mov
mov
insl
cli
mov
insb
ja
inc
push
sti
data16
in
push
xchg
ret
icebp
ds
mov
jno
mov
adc
mov
enter
cs
rorl
mov
fldz
or
imul
pop
dec
mov
ficoms
lock
std
mov
fs
in
pop
rcrl
out
iret
imul
cmp
stos
loope
xchg
test
out
push
mov
mov
icebp
push
mov
add
sbb
pusha
push
ror
or
fs
shl
jmp
stos
sbb
popf
aad
call
dec
fnsave
lods
out
iret
out
mov
fists
test
negb
push
pop
std
call
push
push
hlt
jno
sarl
mov
loope
insl
xchg
push
push
pop
sub
movsb
insb
fscale
popa
insb
add
fildl
enter
icebp
je
test
mov
mov
or
fucomi
jle
push
stc
rolb
cmp
icebp
inc
jmp
es
out
ret
fsubp
mov
in
inc
out
inc
cmc
int
sti
dec
lret
mov
in
cmpsb
inc
pop
enter
cs
outsb
insl
in
sarl
mov
in
jne
push
sbb
scas
ljmp
and
int
jb
and
in
aas
fcompl
int3
stc
fstp
call
jp
std
mov
jmp
jne
or
test
int
test
jne
loop
or
movb
popa
int
std
insl
jge
mov
fcoml
pop
ljmp
data16
popa
sbb
jns
xchg
hlt
in
into
sub
jle
fs
cld
lret
movsb
mov
pop
lock
stos
lea
push
shlb
vpavgb
fisttpl
lods
mov
loop
loope
mov
push
mov
sbb
insl
mov
in
aam
jge
repz
addr16
data16
sbb
arpl
lret
push
cli
push
jno
in
cld
insb
scas
in
sub
imul
in
faddl
mov
cld
xor
cld
jbe
pop
outsb
xchg
jp
imul
add
ljmp
pop
jmp
sub
loopne
cmp
iret
pop
pop
in
in
enter
leave
call
mov
out
loopne
fiadds
pop
xchg
in
sub
es
movsl
subl
ljmp
jae
sub
sub
daa
inc
mov
testl
sbb
in
lret
or
ret
dec
shrb
sbb
insl
mov
out
fsts
fiadds
insl
aad
push
and
or
sbb
fildll
scas
enter
sub
ds
clc
insl
dec
xor
dec
insb
in
or
mov
jmp
sub
cmpsb
jno
push
mov
push
movsl
or
gs
dec
inc
out
aas
cli
mov
repnz
in
repz
xchg
cmpsb
ss
xchg
mov
in
add
hlt
or
mov
push
inc
mov
mov
mov
repnz
popa
mov
andl
mov
stc
shrl
insb
push
jnp
insb
lret
insb
add
inc
mov
adc
jl
in
xchg
in
sub
add
adc
ds
adc
jle
lea
jecxz
insl
mov
mov
in
shrl
jmp
or
or
sub
and
or
jle
xor
test
jle
sti
xor
bound
pop
cltd
subl
mov
insb
jnp
and
mov
xchg
jmp
testb
fs
lret
lahf
loopne
mov
sarl
and
out
ds
fldt
and
loop
xor
fsubrl
cs
inc
ljmp
popf
lahf
lret
or
lds
sub
pushf
insl
bound
mov
inc
mov
sub
or
fs
sub
stos
movsb
mov
and
enter
sub
aas
jmp
lock
xchg
mov
mov
cmpb
rcrl
mov
stos
mov
test
jle
lret
cmp
popa
std
jbe
mov
jmp
adc
mov
cld
cs
push
fdivrp
xor
sbb
insl
popa
outsb
ja
insl
mov
daa
fists
add
in
sbb
add
inc
sar
push
cld
cwtl
mov
daa
in
fs
push
cmc
fdivl
inc
and
jmp
mov
jmp
push
mov
jg
inc
pop
push
mov
jmp
pop
mov
and
lret
dec
inc
call
enter
xchg
sub
fs
je
in
insl
stos
enter
stos
in
dec
bound
dec
movsb
xchg
cltd
push
insb
in
or
push
dec
mov
xlat
push
fucomp
int3
and
cmp
in
and
int
mov
loope
leave
stc
xlat
lock
scas
lret
int
mov
sbb
into
and
sub
cmpsb
jb
daa
jecxz
ljmp
inc
mov
xchg
adc
pcmpeqw
jl
fcompl
jp
mov
dec
cli
fisubl
insl
out
push
sti
push
xchg
gs
enter
scas
push
inc
cmpsl
add
and
loop
loopne
pop
into
ret
lahf
imul
loope
add
shll
xchg
stos
repnz
dec
popf
ljmp
es
adc
and
test
pop
js
mov
popa
mov
cwtl
push
pop
gs
in
dec
outsb
repnz
jne
sub
jmp
into
cmpsb
enter
mov
and
in
rol
push
cs
mov
scas
in
push
int
jae
push
in
scas
mov
into
add
push
cld
mov
push
in
in
fistpl
adc
xorb
stos
cld
shl
in
inc
cs
sbb
sti
shrl
stos
cs
cmpsl
loope
jl
in
int
mov
bound
mov
in
cld
or
xchg
inc
in
mov
lods
or
mov
push
loopne
jmp
dec
popf
pop
pusha
call
mov
hlt
call
je
adc
int3
aam
je
jb
imul
es
bound
push
aam
mov
sub
adc
iret
adc
add
out
das
jmp
mov
adc
or
nop
repnz
xor
shr
mov
cmpsl
mov
out
push
mov
adc
xorb
outsb
pushf
cmpsl
jmp
mov
int3
sub
and
iret
sub
ds
rclb
xchg
mov
data16
mov
cmp
stc
test
jecxz
sub
outsl
lds
xchg
jbe
adc
addl
jmp
in
dec
inc
mov
mov
or
sti
popf
outsb
into
movsb
lods
sub
mov
icebp
or
dec
add
loopne
test
dec
ret
aaa
jns
jmp
mov
add
add
cmc
adc
cmp
and
into
xchg
lret
int3
test
lds
mov
repz
call
dec
cmc
fs
mov
es
outsb
ds
sub
lret
cmpsw
arpl
ljmp
aad
jmp
test
and
lods
insl
jl
imul
push
js
xchg
inc
std
int3
dec
or
xchg
lods
push
fidivrs
pusha
jbe
and
lret
add
adc
jl
inc
mull
xor
popa
stos
mov
lods
ds
cs
add
mov
jmp
bound
insb
out
mov
test
in
pushf
addb
add
popa
sub
mov
subb
push
xchg
scas
or
cmpsb
dec
out
xchg
in
int
cs
outsb
and
push
repnz
add
orb
push
rorl
pop
imul
jl
mov
ficoms
in
subl
test
cli
cmpsb
shr
mov
shr
pop
bnd
in
pusha
je
adc
cmpsl
test
xchg
mov
mov
inc
and
popl
icebp
icebp
jl
loopne
icebp
test
adc
sbb
push
lds
aad
out
sbb
dec
or
pop
push
mov
inc
pushw
fnstsw
in
adc
pop
mov
push
push
jecxz
jmp
adc
sti
inc
imul
pop
jne
loopne
mov
mov
mov
sub
lret
or
mov
in
lahf
push
test
dec
test
mov
mov
dec
jge
jmp
mov
dec
in
cmp
mov
mov
ds
or
mov
int3
dec
dec
cmp
sub
and
scas
fcmovnb
in
aam
push
out
insb
sub
sahf
or
sub
lods
fcomip
adc
in
xchg
ljmp
mov
or
stos
jne
mov
loopne
or
ret
rcll
add
inc
dec
and
sub
and
pop
flds
idiv
jmp
test
push
mov
in
fwait
mov
mul
jge
cmpsb
in
mov
in
mov
loop
inc
imul
jge
into
sub
out
dec
push
imul
xchg
mov
out
in
and
enter
cli
das
jle
cmpsb
push
pusha
fldt
push
iret
dec
fimuls
inc
sahf
mov
call
js
aam
in
cmp
test
in
lods
faddl
mov
mov
mov
into
movsb
cmp
fsubrl
cld
mov
scas
inc
push
jecxz
int
pop
out
xchg
ljmp
mul
jmp
mov
mov
mov
test
out
sub
int3
imul
shll
mov
sbb
cli
in
fwait
jge
mov
mov
ljmp
movsl
jae
xchg
in
ja
pop
in
bound
push
addr16
aam
sub
imul
lods
popa
daa
cmpsb
popa
jo
into
in
mov
sub
lods
daa
adc
push
out
or
cs
fsubl
push
mov
sub
add
pop
jb
leave
arpl
cmc
arpl
fsubs
scas
popa
xbegin
xchg
mov
shrb
in
outsb
or
int3
push
jecxz
data16
mov
mov
jo
insb
cmc
fmul
fdivr
mov
dec
icebp
arpl
xchg
je
mov
notb
gs
in
shrl
int
in
loopne
and
leave
in
jne
loopne
loopne
loopne
out
xchg
enter
cmc
aad
and
ljmp
int
in
jbe
in
outsb
stos
stos
push
repnz
in
es
aaa
out
and
dec
lret
test
es
dec
int
xchg
jmp
sub
call
mulb
rcll
out
ja
lret
bnd
lret
fisubrl
xchg
xchg
cmp
mov
mov
fs
adc
clc
xchg
movsb
out
xchg
mov
adc
jge
lret
int
jmp
ret
std
scas
lods
push
out
add
cli
dec
sbb
mov
push
jns
ret
insl
xchg
jmp
ljmp
and
leave
mov
sub
dec
pop
push
jno
out
dec
inc
mov
lret
xchg
fstpt
or
addr16
jno
insl
decb
or
sbb
cltd
ret
or
cld
out
stos
mov
mov
pop
idiv
cmp
dec
pop
inc
xor
stos
into
or
or
ljmp
push
cwtl
or
mov
loopne
scas
in
fsubrl
mov
dec
push
ja
aam
xor
scas
fsubrl
cs
int
lods
lods
lea
in
fmull
sub
add
pop
lret
arpl
or
dec
stos
lock
into
movsb
inc
ret
test
adc
inc
inc
loope
add
popa
pop
cwtl
lds
lea
mov
imul
call
insb
jp
popa
mov
dec
enter
cli
jnp
imul
int3
fs
mov
inc
hlt
imul
pushf
je
sahf
in
dec
orb
gs
inc
cltd
stos
in
push
shll
and
out
and
das
shlb
jg
jle
movsb
out
or
lret
out
ljmp
jl
gs
shlb
cmp
repnz
mov
jns
jmp
cmp
inc
std
cli
jb
mov
jge
jnp
in
imul
mov
imul
cmc
bound
shl
jmp
cmp
std
sti
jb
shl
jmp
cmp
pop
cmc
call
cld
loop
push
mov
ja
jbe
mov
jge
push
std
std
arpl
ljmp
jns
mov
jge
jle
testb
and
clc
arpl
es
out
movsb
std
jns
bound
jge
testl
loop
imul
cmc
xor
jbe
mov
jae
test
in
mov
movsl
enter
cmp
loope
into
xchg
addr16
lock
or
insb
xor
jp
enter
enter
es
imul
cmp
mov
ja
sub
mov
into
loope
and
mov
cld
ljmp
notb
dec
and
lahf
xchg
daa
stos
push
or
mov
daa
and
lahf
pop
ljmp
push
loop
pop
dec
lea
sti
push
int3
popa
fisttpl
stc
add
lret
repnz
aad
lods
jge
lock
or
push
mov
data16
insl
mov
dec
jmp
cli
lods
imul
or
int3
std
lret
movsl
cli
test
jl
in
cmp
data16
fnstsw
jmp
in
jb
addr16
imul
cmp
push
stc
lret
jb
imulb
push
cmc
mov
push
jmp
imulb
jmp
insl
icebp
jl
cs
movsl
out
jmp
jmp
fucomip
jge
outsb
in
mov
or
in
les
cli
push
ja
scas
mov
enter
scas
push
or
ffree
imul
out
repnz
jmp
cli
jbe
xchg
pushw
jnp
cmc
cmp
xchg
les
int
pusha
xchg
stc
pushf
fmulp
mov
or
test
je
insl
mov
addr16
in
repz
addr16
les
push
std
clc
inc
jbe
movsl
into
jmp
mov
mov
jb
xchg
icebp
inc
ret
daa
fucomi
add
and
fdivrl
adc
stos
scas
pop
outsb
or
stos
sub
in
inc
lods
mov
stos
cmp
notl
insl
jb
in
mov
cmp
mov
into
arpl
in
test
dec
lret
insb
out
loop
and
insb
icebp
mov
pop
incl
pop
loop
repz
push
pop
cld
sbb
mov
shr
and
jno
pop
jb
jnp
fistps
fnstsw
mov
rorb
jl
cmp
pushf
std
add
lock
outsl
shr
push
repz
out
std
cmovb
pop
divb
cld
divl
fwait
addr16
imul
leave
in
dec
out
adc
stc
pop
enter
jp
cltd
psrld
pop
sub
push
std
addr16
clc
loope
cmp
cmpsb
mov
mov
cmc
pop
pop
in
sbb
mov
shr
and
cmp
in
cltd
into
std
jge
jbe
lret
test
insb
mov
push
jmp
data16
stc
movsl
lret
xchg
test
sub
pop
push
cmpl
push
fisttpl
in
mov
add
xchg
in
inc
ret
jbe
lret
jmp
jle
mov
out
or
cmp
andb
push
sbb
sbb
test
pop
popa
pop
mov
test
out
lock
mov
inc
jnp
jle
push
gs
jecxz
imul
sahf
mov
in
jp
and
pusha
jno
shl
je
movsb
outsb
call
lret
dec
test
std
cmp
push
mov
fsubr
lret
je
jge
fbld
int3
stc
xchg
insl
jb
pop
call
jns
jge
imull
hlt
dec
and
mov
imul
lea
imul
lods
pop
mov
sub
push
fs
loopw
stc
jmp
jbe
in
and
test
fs
or
mov
mov
push
imul
jb
mov
call
cld
test
fsubrs
sub
call
xchg
xor
fs
in
pop
filds
out
pop
mov
imul
fildl
mov
xchg
sbbb
frstor
insb
add
iret
inc
mov
mov
fistps
inc
mov
jno
out
xchg
enter
testb
call
add
cld
imul
fbstp
rcl
adc
arpl
out
xor
bound
xchg
addr16
add
inc
xchg
lds
and
cmpl
inc
jo
add
cmpsb
mov
inc
inc
and
mov
fs
mov
xor
sbb
add
dec
mov
lret
or
xor
jb
call
add
out
pop
imul
cltd
cld
jecxz
sbb
push
lret
or
pop
dec
add
sub
adc
cwtl
int
inc
lret
gs
movsb
fs
inc
addr16
ficompl
inc
faddl
out
mov
arpl
es
lds
mov
in
loopne
inc
and
inc
inc
inc
in
inc
movsl
movsb
and
and
out
add
es
js
repz
mov
cli
in
sbb
shr
out
jb
aad
push
int
stos
mov
das
mov
cwtl
push
out
jbe
outsl
scas
cli
loope
dec
sbb
out
inc
scas
mov
pop
xchg
mov
xorb
jb
add
inc
ret
lahf
test
jo
pop
arpl
cmpsb
out
sub
inc
add
insb
and
inc
cmp
sbb
jmp
mov
addr16
jne
jp
jb
cmc
popa
repnz
repnz
jns
shll
nop
pop
rcrl
icebp
xor
ret
pop
and
out
cmpsb
jle
mov
fs
add
lds
push
cmpb
test
outsl
push
jno
ret
push
mov
jbe
gs
fs
int
sti
jo
mov
test
repz
enter
mov
iret
mov
ljmp
and
daa
mov
cmp
pop
fstps
sbb
sbb
int
fbld
loope
test
imul
insl
leave
xor
insl
scas
outsb
iret
leave
mov
xchg
and
jge
xchg
in
xor
mov
jnp
jmp
fisubs
in
jecxz
pop
jbe
movsl
out
scas
lcall
in
dec
imul
out
inc
push
je
jmp
ja
imul
lods
ljmp
add
ret
int
rcrl
sub
stos
add
lret
inc
jmp
lret
and
xchg
inc
stc
jecxz
popf
push
jno
jo
mov
out
loope
idiv
dec
aaa
lods
push
push
or
cli
cmc
out
xchg
mov
mov
cld
xchg
inc
and
cmp
movsl
stc
pop
inc
jmp
sub
add
loop
cmp
insl
shr
movsl
sub
pop
bound
push
loopne
in
stc
cltd
dec
mov
iret
add
lods
loope
in
cli
jecxz
in
int3
in
mov
stos
lods
push
pusha
inc
cltd
ret
sti
dec
int
pusha
cmp
push
in
inc
test
leave
mov
mov
cmc
sub
flds
in
in
test
loope
push
in
in
test
int
add
test
arpl
gs
clc
jle
fucomi
lret
in
jecxz
fs
bound
inc
insl
mov
gs
jmp
data16
je
in
int3
stc
jo
push
aam
sub
sti
bound
add
mov
gs
jecxz
loop
push
pop
push
push
xchg
mov
in
arpl
aam
sub
jecxz
dec
inc
hlt
call
not
ror
gs
jp
loopne
fildll
inc
sub
hlt
in
lock
loope
push
dec
mov
mov
data16
out
jbe
loope
push
int3
data16
leave
jle
popa
mov
inc
movsb
daa
gs
add
mov
inc
movsb
add
cld
jl
std
jecxz
jl
jnp
jg
xor
jge
je
jae
je
mov
data16
out
sbb
test
lahf
out
insb
and
sub
imul
test
lahf
jp
push
fs
data16
loop
fmull
jmp
and
mov
sti
ret
test
mov
jne
clc
sbb
xchg
loope
mov
jnp
outsb
in
fs
jb
loope
push
in
outsb
add
adc
out
insl
mov
rcll
jecxz
jae
jb
int3
arpl
jne
sub
sub
repnz
and
cmp
inc
cmp
in
jl
jp
cmc
icebp
aam
sub
sbb
cmp
fsub
mov
fdivl
outsl
imul
mov
push
lock
in
push
loope
movl
in
fs
out
xchg
jmp
dec
shr
int3
pop
inc
pushf
dec
es
lcall
addr16
add
jge
mov
and
arpl
callw
fiadds
int3
sub
pop
mov
or
int3
and
pop
lret
add
insb
and
in
jbe
add
lods
cmp
mov
stc
test
push
lret
mov
imul
and
inc
ror
dec
scas
es
test
xchg
mov
cmp
xchg
and
add
add
mov
in
in
hlt
fbstp
lock
sub
dec
jmp
fs
ret
and
lret
add
ret
cwtl
adc
add
andb
int3
outsl
les
mov
in
jno
jmp
movsb
std
insb
jle
loopne
or
movsb
mov
insb
out
sbb
gs
pop
inc
mov
jmp
lret
jns
mov
mov
imul
dec
sti
sub
mov
jns
jae
js
sbb
loop
leave
fs
es
out
test
in
inc
jmp
xabort
xor
mov
and
in
xchg
or
fprem
sbb
jae
add
xchg
xorb
out
mov
jge
cmpsb
mov
sub
loop
jns
cld
in
enter
lods
jns
frstor
and
jle
daa
out
movsl
jbe
push
and
popf
jp
jmp
mov
call
cld
popa
lods
in
imul
test
leave
push
imul
imul
inc
mov
test
mov
addr16
inc
jns
sbb
stos
je
sub
cmpsl
ljmp
pop
fldt
imul
pop
cmp
dec
jnp
and
out
jbe
jl
and
aam
xchg
jge
xlat
cmc
subb
pusha
mov
sbb
cwtl
push
lret
lret
sbb
in
iret
mov
bound
fldenv
inc
or
mov
mov
jmp
aaa
lock
insl
xchg
dec
nop
push
sub
pusha
inc
cmp
icebp
insb
dec
xchg
movsl
dec
lds
loope
push
mov
data16
and
jns
cmp
add
loopne
and
fsubs
clc
mov
mov
aad
sarl
mov
pusha
in
icebp
jb
loope
push
int3
out
mov
push
sar
add
loop
in
loope
jl
stc
cld
jns
testl
adc
popa
mov
mov
shlb
out
push
xchg
mov
out
stc
jnp
sub
inc
cmp
js
cmc
pop
jno
and
out
ljmp
mov
in
test
or
loop
sarb
pop
sub
jbe
mov
into
outsb
fsubl
xor
mov
add
lcall
gs
mov
pop
out
js
lods
mov
loope
pop
inc
fadd
mov
scas
jbe,pn
rorl
inc
bound
test
mov
out
jl
dec
repz
mov
push
roll
pusha
ret
int3
jle
jge
sub
data16
jne
fs
mov
leave
ja
fdivr
mov
cmc
dec
sbb
push
mov
xchg
mov
mov
jp
jmp
fsub
shlb
pusha
sbb
mov
sub
mov
pusha
cli
test
stc
push
iret
mov
movsl
fcmovnu
scas
gs
js
lret
jns
ret
in
movsb
pop
pop
insl
mov
imul
in
cmc
mov
daa
data16
loope
loopne
mov
or
mov
xor
cmpsb
sub
aad
push
and
mov
shr
movsb
out
aam
insl
mov
and
jno
test
rcll
jmp
push
xor
int3
push
xchg
int
add
into
addb
insb
call
popa
out
and
add
out
add
mov
and
and
inc
or
insb
pop
mov
fs
int
rcl
lret
insb
dec
lds
xor
test
pop
imul
inc
loopne
cli
mov
sbb
sub
jbe
repz
insb
push
xchg
jl
popf
in
push
xchg
cwtl
mov
pop
add
mov
lock
idivb
insb
xchg
mov
and
in
loop
inc
pusha
add
mov
xorl
jnp
pop
push
jns
push
inc
cld
cs
push
insb
mov
jne
inc
loopne
lahf
imul
test
mov
popa
shrl
lcall
add
and
add
mov
add
and
add
in
cmc
cmc
xchg
in
in
pop
jnp
pop
subb
addb
imul
std
jb
push
sbb
jno
xchg
xchg
lcall
lock
sbb
jmp
ret
dec
or
mov
jmp
les
gs
cltd
jl
xchg
mov
mov
push
push
dec
dec
test
dec
or
repz
jmp
outsw
out
movsl
add
shll
mov
popa
insl
pushf
sarb
mov
pop
fdivrl
lods
into
jb
gs
insl
out
insb
out
sbb
dec
mov
cld
cmc
jo
jmp
ljmp
loope
aad
lea
enter
lret
gs
pop
push
jbe
jge
jle
es
sar
stos
jmp
subl
icebp
ljmp
out
rorl
pushf
mov
in
mov
test
jns
frstor
mov
pop
out
jns
adc
sub
pop
cmp
or
jns
filds
jbe
inc
sarb
cmp
dec
insb
cmp
icebp
out
mov
sti
out
shll
subb
xor
mov
mov
jbe
jl
je
mov
lea
in
inc
push
ja
xchg
imul
int3
call
add
loope
fs
lret
pop
pop
insb
push
pop
add
cli
gs
js
loop
loope
cmc
pop
jb
icebp
loope
add
cmp
mov
movsl
cmp
jbe
shll
mov
mov
push
fucomip
dec
in
in
lods
addr16
push
imul
in
out
lret
gs
jl
in
lock
js
outsb
mov
in
test
ret
cmp
shl
sub
pop
in
pusha
sarb
mov
popa
mov
add
les
data16
mov
daa
inc
dec
test
add
je
test
lds
in
bound
jge
jle
jge
out
fsub
loopne
inc
mov
add
data16
mov
lds
xorl
std
gs
pop
in
sti
adc
scas
xor
in
shrl
lods
lods
in
jnp
lret
les
pop
push
fsub
pop
jmp
mov
data16
out
and
outsb
mov
rorl
and
loop
js
ja
loopne
cmpsb
inc
and
popf
popf
ret
and
in
stc
cmc
not
cmc
sub
loop
mov
jl
shlb
lock
cmpb
in
xchg
cmp
int3
repz
xor
cmp
dec
fcmovnu
lea
leave
pop
in
cli
into
loopne
test
sub
mov
mov
inc
fst
cmc
lods
inc
mov
or
ffree
pop
shlb
gs
cmpsl
and
mov
fidivrs
ret
cmp
movsb
sub
xor
movsb
and
push
test
cwtl
jecxz
loopne
sbb
je
lcall
push
mov
test
scas
or
lods
pop
add
imul
pop
jmp
xor
pop
and
loope
je
inc
jp
and
sbb
mov
dec
xchg
fcomip
std
out
adc
fwait
addb
cmpsb
fbld
and
and
sbb
loope
pusha
aaa
lock
lret
loopne
push
inc
outsb
mov
add
lods
fs
jecxz
imul
hlt
inc
popa
sbb
outsb
inc
loopne
jl
out
gs
imul
mov
cld
adc
jle
cmp
imul
ja
jecxz
and
lods
je
shrb
test
in
mov
faddl
inc
jb
mov
add
inc
fdivrl
mov
dec
cmp
fsub
cmc
jb
mov
push
enter
push
lods
les
mov
jo
push
mov
mov
xchg
sub
jno
or
mov
pop
push
out
jnp
es
out
sar
dec
in
sub
repnz
pop
pop
fidivl
icebp
inc
out
loope
fs
push
in
jmp
mov
insb
stos
lret
in
mov
ljmp
ljmp
and
rcr
ror
ja
jne
fsubl
lret
repz
insl
push
sub
data16
mov
popa
insb
out
adc
loopne
popa
sbb
mov
gs
in
andb
pop
xorl
gs
std
mov
jecxz
jnp
addr16
arpl
bound
hlt
xor
repz
mov
lahf
or
loope
lretw
insb
inc
shlb
loope
in
subb
out
frstpm(287
pusha
stos
lret
arpl
mov
and
jl
data16
pop
in
std
mov
pop
jge
fnsave
jecxz
jmp
jge
jl
icebp
or
sub
mov
pop
ljmp
call
mov
in
stos
lret
fistpll
data16
imul
mov
daa
jecxz
jmp
arpl
fisttpl
std
cmc
ja
jbe
loopne
add
sub
ja
add
jnp
es
cmc
in
hlt
out
sbb
pop
add
and
adc
push
fdiv
inc
test
je
xchg
sti
iret
sub
fcom
arpl
hlt
cmp
es
icebp
cmpb
clc
shrb
into
mov
jae
popl
testl
ljmp
add
add
xor
in
aad
addr16
lcall
popa
jmp
insl
outsb
imul
out
es
imul
icebp
adc
xorb
enter
lret
repz
stc
cmc
in
shlb
enter
loopne
push
push
ljmp
stc
popa
mov
fwait
mov
xchg
bound
imul
jnp
xchg
std
sti
scas
lods
mulb
sbb
pop
imul
jnp
shll
jo
repz
cli
shl
and
pop
jg
insb
bound
subb
loope
jo
push
mov
enter
lods
outsb
mov
sub
test
insl
test
lret
push
enter
cld
mov
push
and
cmc
add
adc
aaa
xchg
iret
dec
mov
jb
cmc
add
adc
aaa
xchg
iret
dec
mov
inc
dec
mov
jb
cmc
add
adc
aaa
inc
loop
mov
cmc
add
mov
cmpsb
xchg
xchg
iret
dec
mov
jb
cmc
add
adc
aaa
xchg
xchg
and
iret
dec
mov
jb
lds
sub
adc
aaa
xchg
xchg
and
iret
dec
mov
jb
sub
or
enter
insl
mov
xchg
dec
xchg
movsb
dec
aam
js
add
lret
add
cmc
add
adc
aaa
xchg
iret
dec
mov
jb
cmc
add
adc
aaa
xchg
iret
dec
mov
inc
dec
mov
jb
cmc
add
shrl
imul
xchg
shll
add
loope
cld
adc
aaa
xchg
iret
dec
mov
jb
cmc
add
cmc
mov
aaa
xchg
inc
ret
sub
add
xor
data16
mov
fsubrl
call
mov
in
loope
js
test
call
lods
cld
or
cmc
retw
es
xchg
out
lods
lret
dec
dec
scas
in
cmp
sti
mov
stc
in
inc
call
mov
cmpsb
push
lea
cld
xchg
icebp
ret
call
push
pop
cs
sub
add
lret
push
imul
lods
mov
jbe
push
mov
cmpsb
stos
pop
mov
call
push
popw
add
and
add
dec
lods
mov
loop
data16
jmp
mov
mov
cmpsb
loopne
test
data16
es
outsb
ret
test
imul
cmpsb
sub
lea
lea
xchg
jl
mov
in
sti
mov
in
test
push
out
lret
je
mov
mov
sub
mov
sub
cmpsl
pop
imul
retw
es
mov
push
test
sub
xor
lods
jb
dec
scas
xlat
mov
cmp
add
lods
lret
dec
in
mov
pop
sub
test
sub
out
cmp
dec
lret
in
call
outsb
or
jg
in
jge
addr16
in
jmp
sub
gs
inc
cld
rcl
add
jle
in
push
or
add
enter
data16
xchg
std
repz
or
inc
repz
jg
gs
xchg
jg
icebp
xlat
daa
xchg
in
mov
inc
adc
movsl
std
hlt
jecxz
shrb
pop
jmp
into
cmp
cmp
xchg
push
aas
dec
bnd
sbbb
icebp
pop
xchg
cmp
fs
leave
scas
add
jge
dec
sbbl
cmp
sub
mov
out
jecxz
gs
lods
or
cmp
jg
jns
fs
inc
add
cmpsl
movsb
pop
testl
std
out
stos
inc
and
pop
in
fsubl
into
test
std
aas
cld
mov
leave
in
imul
scas
push
out
imul
outsb
cmp
shrb
leave
cs
push
lret
in
push
add
pusha
lcall
adc
pop
out
sub
call
push
or
jl
jmp
lods
jbe
je
outsl
std
jmp
in
push
mull
movsl
call
and
call
fcmove
imulb
push
cmpsb
pop
movsl
cmp
into
aam
mov
out
insl
aas
add
cmc
inc
mov
fcomi
int3
testl
out
clc
sbb
jmp
cmc
es
int
push
mov
loope
loop
lret
insl
int
gs
cmc
lret
loopne
fmull
imul
test
or
jg
scas
shrl
xor
pusha
dec
imull
in
add
insl
push
inc
aad
and
jge
mov
popf
jbe
inc
imul
adc
rclb
jmp
imul
jo
inc
out
lods
push
mov
inc
outsl
popf
lock
in
jne
les
pop
inc
jb
popa
icebp
cs
je
jbe
js
lock
mov
and
psraw
in
xor
insl
test
pop
push
cmp
pop
inc
je
test
andl
inc
js
lahf
jbe
les
jae
jne
mov
sub
insl
icebp
hlt
stos
jnp
push
and
pop
and
sub
popf
hlt
jecxz
cmovl
and
loopne
jbe
mov
bound
sahf
shufps
xor
inc
outsl
outsb
pusha
int
jbe
or
mov
insl
jecxz
movsb
in
add
icebp
pop
or
xchg
jp
scas
aaa
add
fs
xchg
stos
scas
lods
out
mov
jno
and
mov
push
inc
mov
outsb
dec
sar
dec
into
add
lret
cld
mov
mov
xchg
lahf
push
dec
in
xchg
call
bound
jbe
mov
inc
lock
insb
loopne
in
adc
jmp
imul
les
xor
loope
lds
les
icebp
push
not
in
mov
mov
mov
shld
movb
std
pop
clc
lods
push
out
lret
cli
es
inc
sti
lods
ss
repnz
xor
das
and
or
in
xlat
pop
divb
mull
mov
and
push
daa
fwait
movsl
outsb
in
cmpsb
cmp
jb
outsb
insl
paddusb
fmull
cmp
nop
inc
xchg
in
punpcklbw
sbb
lock
aad
repz
hlt
imul
xchg
popf
cs
and
cld
insb
add
cld
or
movsl
popf
lock
aad
jge
sbb
xchg
mov
lods
vandpd
shll
or
pop
in
inc
inc
cld
xor
pop
push
test
lods
or
xchg
adc
cltd
lods
outsb
mov
std
out
clc
sub
jb
pop
mov
jb,pn
repnz
jae
repz
aam
push
jae
nop
or
scas
inc
popf
out
in
movsb
add
or
xchg
sbb
push
loope
jne
add
aam
xchg
repz
cmc
stos
sbbl
hlt
nop
in
mov
outsb
movl
adc
mov
data16
ret
cs
test
mov
repz
int3
sub
out
lahf
jmp
xchg
cmp
insb
inc
stc
push
inc
cs
lock
mov
scas
arpl
dec
out
jae
icebp
jb
mov
call
mov
sub
shl
xor
call
into
mov
or
adc
int
mov
imul
repnz
jbe
adc
dec
xchg
dec
add
mov
sub
loop
mov
mov
pop
gs
out
cmc
jmp
xchg
mov
xchg
mov
test
in
dec
cld
in
out
in
outsl
mulb
scas
add
cmc
fstl
je
in
loope
insb
ret
out
icebp
std
add
pop
push
sbb
stos
lods
shrl
mul
cld
daa
dec
daa
jmp
fldl
jne
scas
add
daa
xchg
pop
outsl
inc
int3
ds
mov
in
lods
loop
add
fistl
lret
icebp
nop
data16
icebp
lock
cltd
lock
cld
stos
lret
out
inc
stos
fiadds
cmpsb
lcall
loope
xchg
lods
repnz
cld
push
sti
xlat
in
icebp
data16
shl
daa
mov
dec
loope
mov
insl
fnstsw
je
movb
cs
call
loope
lds
call
ficoms
cld
adc
incb
ljmp
stos
rcl
pop
mov
inc
lock
inc
sub
mov
jmp
xor
and
push
pop
add
jno
sub
lock
sub
mov
icebp
or
or
sub
stos
sahf
inc
data16
inc
in
pop
jb
push
movsb
into
mov
jp
lods
xchg
push
int
popf
sub
inc
cmc
inc
pop
movsb
jmp
lods
fistpll
int
insb
lods
xorl
imul
inc
cld
in
inc
jbe
and
addr16
cli
data16
fcompl
add
scas
int3
mov
scas
cmpsb
ja
loopne
lods
cmp
mov
dec
jecxz
movsb
cmpsb
std
jnp
clc
sarl
icebp
dec
test
lret
pcmpeqb
mov
repnz
les
add
outsb
jg
fisubs
sub
xchg
outsl
push
or
xorl
push
in
cmpsb
jae
pop
push
std
mov
int3
ljmp
out
les
push
push
fwait
xchg
mov
addr16
xchg
xor
inc
shlb
inc
and
mov
imul
negb
adc
arpl
push
ja
mov
sub
hlt
xchg
pop
push
push
jne
mov
sub
mov
movsl
mov
ljmp
jno
loope
fstp
adc
popa
mov
icebp
jp
pop
leave
sub
ja
sub
push
pop
fnstcw
cmp
fwait
xor
imul
mov
call
sti
fisubrs
mov
cmc
fldcw
xlat
inc
ja
xchg
fnstsw
imul
mov
into
pop
shll
bound
les
insb
fsubrs
jb
and
outsl
inc
mov
movsb
jecxz
xor
loope
mov
pop
push
imul
movsb
inc
adc
mov
sbb
outsb
pushf
and
push
pusha
sub
xchg
xchg
xchg
cs
das
inc
sbb
jl
lods
loope
mov
push
call
add
sub
and
mov
mov
in
or
inc
lock
jne
sub
or
idivb
addr16
mov
stos
repz
push
movsl
or
cld
fxch
mov
jbe
repnz
es
xchg
add
mov
in
and
fildl
jle
cmp
stc
mov
in
loop
lret
cmpsb
mov
fs
cmc
mov
mov
ljmp
into
mov
lret
fldenv
mov
mov
mov
pushf
or
mov
shrb
or
inc
xchg
data16
or
mov
dec
mov
inc
jle
dec
mov
cmp
cmpsb
in
mov
cs
dec
ret
mov
mov
mov
jae
cmpl
lods
test
lods
loopne
inc
in
insb
int3
sub
imul
insl
xlat
pop
jb
mov
jmp
adc
pop
arpl
insl
ficompl
push
jge
testb
cld
mov
dec
bound
std
in
jecxz
jl
push
test
xchg
jle
fwait
pop
ja
test
scas
in
jle
imul
push
pop
cmc
jle
ficompl
inc
in
insb
xchg
pop
push
fmulp
adc
mov
cwtl
in
outsb
and
icebp
addr16
mov
mov
fwait
out
mov
pop
in
lret
pop
mov
lds
stos
insl
nop
add
mov
aad
cmp
cwtl
sub
imul
stos
push
inc
leave
fildll
dec
lock
lret
loope
cmc
jbe
pushf
in
push
pop
mov
xchg
jbe
aam
push
lret
enter
fadd
push
jmp
dec
scas
movsl
push
jno
fs
or
popf
and
gs
xchg
mov
loop
mov
push
fbstp
or
fcomi
addr16
in
leave
loopne
flds
mov
ror
push
ja
and
rcl
out
scas
cs
dec
shlb
pop
dec
pusha
in
cmp
inc
mov
mull
icebp
sub
pop
int
je
dec
cli
fstl
jp
popa
movsl
mov
jmp
push
jge
push
aad
stos
in
fs
je
mov
lret
jbe
mov
scas
xlat
fisttpll
cli
ret
add
fcomps
jl
cmc
cmpsb
sub
lock
pop
ljmp
lret
jns
fistps
imul
sbb
mov
jp
push
mov
mov
lods
mov
shrl
fdivrl
jne
inc
push
into
aas
les
xchg
clc
sti
jg
xchg
lret
dec
xchg
push
mov
lock
cmp
jmp
inc
jle
fdiv
aaa
lds
pop
leave
pop
cmp
lahf
jae
fildll
mov
loopne
aaa
or
ret
jnp
sub
add
jae
pop
dec
pop
ret
sub
inc
or
jmpw
in
jecxz
pop
mov
xchg
cmpsb
or
lods
mov
and
mov
mov
mov
or
jl
push
jmp
clc
and
flds
lret
in
push
sub
jl
or
cmp
movsl
scas
inc
sub
mov
loope
pusha
scas
fnstsw
inc
lods
call
js
shl
mov
xor
lea
jle
clc
je
fidivs
inc
push
cwtl
in
jmp
hlt
fsubrl
aaa
mov
jne
jns
stc
in
jnp
sti
ljmp
inc
loopne
fsubrl
test
pop
pop
loopne
xlat
sub
fildll
loope
insb
and
and
ds
xchg
mov
das
das
cmp
dec
popf
dec
imul
insl
push
xchg
sub
ffreep
stc
lret
mov
xchg
or
pusha
push
and
ret
fst
mov
les
int
jo
mov
xchg
or
and
es
inc
leave
sbb
andb
icebp
dec
ja
mov
ljmp
cmp
mov
or
out
test
mov
fprem
in
cmp
icebp
mov
cmp
mov
jne
cmpsl
inc
mov
cli
dec
jnp
mov
xchg
jno
int3
lret
jno
jnp
pushf
mov
imul
iret
jmp
xchg
filds
pop
faddl
movsl
mov
and
mov
arpl
cmpsb
mov
ljmp
adc
fldcw
inc
stc
cld
push
call
pop
testb
add
push
paddb
or
shrb
cwtl
push
or
rcll
push
bsf
mov
fucomp
nop
xor
addb
es
lds
std
jecxz
test
jnp
sbb
dec
fnsave
jnp
out
loope
pop
mov
fisttpl
or
shlb
lods
xor
add
and
jns
mov
sub
xchg
int
jb
imul
mov
mov
clc
rcr
sub
insb
sbb
pop
or
pop
in
and
jg
mov
xchg
cli
std
out
insb
lods
inc
outsb
xchg
shl
sahf
xchg
das
test
or
js
push
outsl
or
xor
sbb
dec
jb
cs
jbe
popa
inc
mov
add
rorl
cmp
lea
shll
mov
rclb
addr16
in
jecxz
and
mov
and
fisubs
jns
in
xchg
call
lods
pop
inc
test
sub
int
mov
lods
data16
mov
and
in
movsb
arpl
or
shrb
orl
in
dec
inc
jne
lock
fsubrs
pop
jle
mov
ret
out
push
and
xor
fwait
loope
leave
sbb
cld
imul
test
rcll
mov
movsl
outsb
mov
cli
cltd
cmc
jmp
in
pop
mov
leave
mulb
int
jb
adc
daa
fs
adc
int
cmpsb
xchg
cmc
adc
mov
out
lret
mov
int
in
shr
cmp
dec
data16
jp
pop
cmpsb
cwtl
pushf
mov
stos
imul
clc
xchg
lods
jmp
test
push
ja
mov
pop
stos
and
add
push
in
jmp
mov
lcall
inc
jae
jno
sti
fisttpl
into
mov
dec
jns
cmc
stc
adcb
xchg
loopne
jecxz
mov
fwait
inc
cld
bnd
mov
imul
in
jb
repz
fdivr
fdivr
and
movsb
fwait
lea
jae
or
mov
dec
mov
pop
out
test
test
or
xchg
mov
addl
scas
das
outsb
jae
repnz
stos
sub
subl
hlt
dec
sbb
add
repnz
mov
repz
push
xchg
ret
into
repnz
mov
push
lcall
mov
dec
mov
jecxz
mov
adc
mov
jnp
push
insl
test
add
rorb
notb
insb
mov
cmpsb
xchg
fmuls
cmpsl
lock
cmpsb
mov
les
pop
rolb
test
lea
out
mov
sti
adc
adc
shll
decb
nop
mov
add
ss
jmp
push
in
mov
jo
lods
sub
mov
hlt
leave
inc
and
jb
ja
cwtl
and
pop
sti
sub
movsl
pop
jle
test
mov
lds
ret
ja
mov
clc
xchg
lcallw
pusha
cs
cltd
cmc
loopne
loope
jle
xchg
mov
xor
out
clc
pop
xor
mov
xchg
or
pop
popf
test
push
xchg
cmpsl
addr16
mov
inc
jno
xchg
je
add
push
int3
xchg
mov
mov
lret
mov
push
out
mov
out
jmp
stos
loope
shrb
inc
hlt
lahf
test
insb
mov
js
dec
loopne
shr
std
pop
cmp
cld
daa
mov
mov
sahf
pop
pop
addr16
mov
inc
mov
add
pop
cmp
ljmp
add
adc
mov
dec
adc
dec
cltd
fadd
push
mov
je
jl
dec
sbb
sub
push
pop
lahf
out
loope
fldcw
mov
int3
adc
xor
jbe
bound
cmc
push
icebp
push
in
imul
int
icebp
xchg
xchg
mov
jnp
clc
push
and
sub
test
hlt
xlat
lods
xchg
das
xorl
sti
shll
or
and
mov
adc
out
je
es
test
add
sub
lock
loopne
dec
cmp
out
frstor
mov
pop
pop
imul
stos
inc
cmc
repnz
jb
outsb
ja
stos
fs
js
sbb
push
jp
push
in
loopne
out
pop
dec
aad
clc
aam
in
inc
xchg
fildll
dec
sahf
lahf
mov
or
mov
ss
dec
ljmp
add
bound
jb
sub
cmp
shll
xor
sub
and
sub
push
inc
cmpsl
in
sub
jae
mov
movsl
cmc
sbb
inc
movb
pusha
sahf
insl
mov
loopne
xchg
fstl
and
mov
cli
cmpsl
mov
sub
test
in
movsl
fwait
hlt
jbe
dec
addr16
xlat
popf
test
negb
js
dec
pslld
nop
insb
cltd
xlat
movsl
pop
sbb
outsl
sub
lock
scas
cmpsb
sbb
mov
fists
add
push
std
movsl
stos
fildll
cld
loope
jecxz
in
ss
adc
mov
and
sbb
push
jo
push
negl
dec
loope
popf
out
cmp
inc
pop
push
sahf
loope
and
push
aas
push
fildll
sub
sub
lea
movsl
xchg
or
jle
movsb
dec
dec
test
sti
das
mov
ss
enter
xchg
scas
es
cld
std
pop
icebp
sub
and
cltd
and
dec
jns
pop
sbb
jle
push
fmulp
cli
cmp
lahf
mov
cld
arpl
je
in
cmc
cmp
ss
fisttps
movsb
clc
sbb
inc
cli
fsts
inc
xor
sub
jle
negl
out
lret
ss
loope
xchg
test
push
cmpsb
int3
sti
mov
mov
ret
xchg
outsb
push
popf
pop
pop
lret
scas
push
stc
imul
movsl
cs
pop
and
shll
sbb
bound
cmp
in
cmp
inc
cmpsb
mov
idivb
fwait
ja
jl
scas
fsub
in
divb
pop
mov
xchg
dec
inc
icebp
lret
add
cmp
xor
insb
je
sbb
or
std
push
dec
rol
cs
dec
scas
mov
stc
pop
in
push
mov
in
stos
push
push
pop
das
in
inc
pop
sub
push
and
mov
andl
or
lea
pop
xor
arpl
repnz
pop
pop
shll
aam
or
xor
sub
icebp
mov
adc
test
lahf
inc
iret
mov
inc
cmpsb
sbb
pop
in
in
js
fsts
xchg
pushf
fdivl
jbe
movsl
es
and
stos
pop
lcall
or
mov
loope
pop
push
ret
enter
int
loope
fwait
cmc
cmpsl
std
mov
sti
das
lretw
ficoms
jnp
lods
lds
pop
js
test
mov
ljmp
loope
jle
mov
hlt
jecxz
mov
fs
pop
sub
stos
fcomps
pop
inc
stc
or
in
divl
outsl
test
test
les
inc
sub
gs
loop
mov
add
test
iret
jmp
mov
inc
loopne
ret
insb
jle
push
jnp
jae
popf
aad
cmp
cmpsl
dec
repz
sti
rep
lret
int3
lret
inc
ret
imul
in
cld
ljmp
mov
and
cmp
popa
mov
bound
jge
sbb
cmpsb
inc
ret
faddl
mov
and
sub
sbb
sbb
call
rorl
push
mov
mul
enter
xor
movl
call
lcall
mov
clc
adc
push
cmc
in
shrl
push
xchg
mov
and
orl
inc
inc
xor
out
lods
fs
ret
dec
or
push
in
daa
ret
fadd
ljmp
sbb
mov
lea
lds
jo
out
repz
add
imul
mov
mov
mov
mov
jae
lret
je
hlt
add
ja
jns
arpl
dec
pop
inc
and
insl
arpl
gs
xchg
insl
fsubrl
outsb
jp
inc
stos
repnz
in
gs
mov
xor
adc
test
std
jg
mov
jb
mov
jns
add
sbb
mov
lds
jb
imul
lods
fstpl
push
sub
rcrl
or
add
ds
sub
xor
jecxz
sahf
in
mov
mov
lea
and
xor
into
pop
out
jbe
sub
dec
outsb
mov
sub
in
addr16
js
or
movsl
cmp
and
fdivs
ja
stos
sbb
orb
mov
fwait
inc
push
imul
and
and
aaa
push
test
or
sti
xor
dec
or
push
or
inc
and
pop
mov
rcll
cmp
fimuls
adc
sbb
adc
sub
fldl
bound
jg
or
std
jl
jge
dec
pop
lods
fdivs
call
stos
lahf
pusha
cmp
dec
movsb
mov
mov
insl
pop
popf
xchg
pop
jb
int3
pop
push
mov
xor
adc
xchg
test
popf
pop
scas
sub
lea
loope
or
popf
repz
cmpsb
mov
pushf
cli
jne
sub
nop
sbb
cmp
xorl
dec
leave
test
test
or
std
add
popf
push
push
or
mov
les
pop
inc
movsb
in
mov
or
mov
xchg
push
loop
jno
cmc
push
jp
jnp
mov
scas
addr16
pop
movsl
and
pop
aad
jecxz
jl
into
rorb
pop
ret
daa
int
insl
push
fiadds
add
push
cld
outsl
xor
push
xor
sbb
lret
push
fs
sub
jmp
mov
jne
aam
mov
notl
pusha
movsb
inc
mov
into
inc
mov
xchg
jbe
add
xchg
cmc
mull
sub
icebp
or
in
mov
dec
lods
in
xchg
out
mov
adc
rcll
pop
aad
outsb
sub
adc
inc
hlt
loope
inc
pop
rol
loop
outsb
subl
pushf
ja
ror
mov
mov
in
scas
pop
or
ljmp
cmp
test
and
jl
movsb
xor
neg
fs
ss
push
cli
ljmp
ljmp
loopne
loope
mov
aas
mull
je
push
hlt
jae
xchg
pushf
repnz
sub
daa
and
push
daa
jecxz
je
mov
dec
mov
lea
add
mov
std
repz
ret
push
loopne
jno
je
jle
pushf
mov
in
call
andl
lahf
shl
cmc
jns
or
roll
or
js
jnp
jbe
mov
pushw
je
add
sbb
out
hlt
jg
xchg
pop
cmc
movsb
mov
adc
mov
scas
jbe
hlt
lods
repnz
popf
sbb
popa
mov
mov
xor
out
in
mov
int3
mov
mov
push
enter
lds
sub
lret
sbb
add
aas
adc
jb
mov
icebp
aad
mov
ret
jno
xor
iret
push
fucomi
aad
sub
fs
sbb
lret
test
jmp
std
add
loope
sbb
in
push
push
jno
lods
leave
push
push
ljmp
arpl
push
lcall
std
dec
lahf
adc
in
sbb
cs
out
jnp
popf
push
in
int
lods
into
and
pop
add
lret
xchg
mov
push
fsubr
sbb
fldl
xor
mov
jo
out
and
pusha
sbb
sub
sub
mov
loopne
sbb
fisttpl
call
test
movsl
jnp
data16
cs
js
add
imul
rclb
fdivrs
loop
mov
xchg
mov
fnstcw
push
dec
lods
les
imulb
jo
hlt
mov
shrl
ss
mov
psubusw
adc
jbe
cs
jbe
sbb
in
leave
mov
loope
mov
jbe
or
mov
or
out
popf
imul
into
xlat
popf
mov
in
std
popa
cmp
cmc
sbb
adc
ret
jne
insl
dec
hlt
sub
insb
cltd
push
sbb
mov
into
fdivrl
lods
sar
push
sahf
jge
jns
jnp
call
push
test
movsl
into
xor
out
insl
in
fsubl
stos
and
mov
xlat
jne
mov
fdivl
outsb
int3
and
xor
data16
bound
push
in
fldt
int
lods
es
in
fdivrl
mov
int3
clc
int
lods
mov
xor
cmp
dec
into
out
fcmovnb
in
lret
sub
int
mov
leave
out
int3
call
dec
fcmovne
lret
int
mov
rcll
dec
inc
jl
jp
imul
lods
ss
in
fucomi
int3
jno
in
sbb
in
int3
lret
sub
int3
sub
out
enter
mov
int
stos
jnp
mov
mov
jecxz
out
cs
testl
int
push
gs
push
jne
and
cmc
jne
inc
int
jne
jle
mov
loop
jp
lret
aam
fmul
xor
icebp
data16
pop
int
inc
xlat
ja
int
stos
push
std
fadd
mov
sti
fldl
leave
mov
lret
cmc
in
int
int3
insl
mov
pop
mov
cmpsb
int
jle
stos
lret
int
fsub
stos
arpl
lahf
lods
mov
ret
int3
rcr
stos
mov
int
jl
stc
std
xchg
mov
in
fsubl
stos
and
loop
dec
cltd
cli
ret
icebp
sub
ds
es
and
loop
aas
ss
dec
jns
bound
sarl
iret
jnp
call
out
fnstcw
repnz
push
imul
sti
dec
addr16
sahf
ror
clc
push
scas
inc
mov
pop
lea
push
inc
mov
adc
scas
pop
pusha
cmc
lods
loope
jmp
sub
fucomp
jge
xchg
push
daa
mov
adc
mov
popa
out
and
mov
enter
cmc
mov
call
jne
out
outsb
xor
idiv
shll
sub
fst
push
mov
sahf
aad
icebp
mov
pop
mov
and
sbb
cmp
or
cld
shll
dec
icebp
repz
pop
out
les
and
into
cmpsb
cmp
repz
lret
out
out
scas
divl
pop
push
insl
mov
xchg
pusha
fucomi
out
add
js
mov
and
pop
mov
in
movsb
out
jnp
insb
push
mov
imulb
mov
frstor
push
call
adc
pop
sub
xchg
pop
pop
sahf
jmp
jnp
fwait
xor
cs
push
lea
push
push
sahf
negb
jge
mov
pop
mov
stos
repz
add
push
xor
lods
in
int3
test
into
fimuls
sub
mov
fimuls
or
mov
enter
cmp
mov
out
imul
andb
test
xor
xor
jge
aam
aad
ja
adc
imul
out
dec
rorl
lods
sub
inc
iret
jg
push
pushw
mov
into
fsubrp
leave
mov
es
cmp
cmp
or
lahf
aaa
push
lds
jge
jnp
xor
inc
mov
ficomps
popf
mov
push
cli
push
std
shll
lock
repnz
fs
mov
pop
cmpsl
push
jge
sbb
int
aad
pop
or
repnz
test
jl
xor
subb
inc
outsl
mov
dec
xor
call
xchg
idiv
lcall
insb
gs
movsl
call
psubq
jns
pop
pop
sahf
data16
sub
jnp
loope
dec
int3
xchg
js
in
cld
das
int
mov
sub
cs
ljmp
insl
das
xchg
cmp
xchg
lea
xchg
pop
inc
out
ljmp
adc
icebp
ret
shl
scas
in
in
dec
or
fiadds
rcr
mov
std
fs
imul
out
ljmp
lcall
outsb
mov
cmpsb
sub
inc
cmp
jnp
pop
dec
mov
sub
insl
scas
stos
lcall
test
xchg
loopne
ficompl
push
out
loop
fisubrs
clc
sbbl
loop
stc
into
call
xor
scas
cwtl
shl
jb
pop
mov
lods
hlt
push
loop
sbb
mov
jmp
jl
roll
xchg
into
enter
xchg
sub
fwait
shll
jae
icebp
cmp
fdivl
fsubs
jno
cmpsb
push
lcall
test
cmc
sti
fsubr
scas
icebp
add
sub
loop
je
imul
loope
mov
push
inc
int3
mov
push
jl
jbe
cmc
push
loope
sub
negb
mov
xchg
cmc
daa
xchg
mov
ljmp
mov
das
or
les
xor
jmp
add
fs
sub
sbb
mov
add
xchg
repnz
sarl
scas
shll
push
sub
imul
mov
rcr
clc
pop
mov
cmc
xor
loop
adc
test
lods
or
mov
nop
fsubrl
jns
leave
testb
ret
scas
mov
iret
mov
loop
outsb
cs
cmp
lds
cwtl
das
xor
test
imul
lahf
xchg
lret
icebp
fidivrs
sahf
inc
js
sbb
adc
fsubr
leave
lods
lret
sub
inc
sub
lock
bound
or
mov
jno
mov
shll
cmpl
icebp
in
or
sbb
mov
mov
jne
lret
or
outsl
and
fbstp
popa
cld
push
jmp
sahf
jp
rorl
jmp
mov
inc
out
not
das
loop
and
icebp
jl
sbb
loopne
outsl
add
pop
shll
xchg
insl
lret
inc
xchg
push
mov
dec
bswap
lock
in
dec
in
rcrl
test
icebp
loop
stos
mov
jns
popa
arpl
mov
out
jnp
lea
inc
and
shl
jg
jne
data16
jmp
inc
sub
push
push
ss
mov
inc
adc
cmpsl
pop
pop
mov
loop
in
xor
loopne
insb
out
in
or
test
xchg
sbb
xchg
cmp
scas
dec
xchg
daa
pop
cli
scas
aam
lcall
in
xchg
jge
int
push
adc
sti
jle
sub
scas
in
loope
mov
in
adc
cmp
lods
mov
aam
adc
dec
push
pushf
jbe
in
sbb
stos
dec
jmp
sarl
sbb
pop
imul
sub
mov
push
jae
fs
mov
and
roll
gs
out
imul
mov
fsubrp
ror
jnp
loopne
fisubl
cmc
and
js
test
jp
aaa
shrl
icebp
jl
lret
xor
add
cmc
aaa
dec
cmp
ret
mov
cmp
into
mov
sti
out
pushf
movsb
lret
jmp
popf
mov
mov
out
jmp
mov
test
and
ffreep
push
es
cld
xlat
fs
leave
shl
and
fnstcw
jmp
lea
mov
or
loope
nop
inc
pop
ret
adc
dec
dec
jg,pn
xorb
nop
cwtl
mov
divl
loopne
xchg
xor
insl
jnp
pop
mov
dec
dec
test
pop
sbb
outsl
cltd
push
sbb
call
in
or
sub
mov
sub
and
fs
fwait
js
inc
adc
lea
jne
pusha
pusha
mov
jmp
movb
lea
je
call
pop
mov
cmp
jbe
daa
push
sbb
mov
jge
out
clc
jge
outsl
xor
rolb
fwait
stos
mov
xchg
es
insl
je
push
mov
stc
sub
rolb
sub
xor
add
add
cmpsl
pop
insl
or
sbb
cli
das
jg
test
inc
xlat
es
lea
xchg
or
add
aas
aaa
inc
sub
loope
sub
test
adc
push
lea
ja
pushf
lea
jnp
cmc
imul
jmp
cmp
jmp
xor
rcrl
arpl
out
sbb
adc
mov
addl
sbb
addr16
arpl
push
sbb
cltd
int
outsb
push
mov
loop
xchg
mov
fiaddl
xor
cmp
jecxz
inc
loopne
dec
and
adc
jle
jl
insb
test
adc
inc
or
dec
add
xor
push
lock
push
sbb
pop
ret
add
movlps
bnd
ja
pop
inc
push
ja
or
jo
add
mov
shl
jo
pop
xor
out
mov
dec
call
push
cmp
leave
rcl
icebp
sbb
cmpb
outsl
xor
fstpt
mov
test
imul
push
leave
or
mov
ficoml
dec
ret
xor
jmp
subl
scas
addl
add
pop
jns
imul
xor
orl
jo
repz
shrb
fdivrs
lock
sub
stos
imul
mov
lret
or
testl
xor
and
out
out
imul
pop
ja
sbb
imul
mov
hlt
fmul
fdivl
pop
push
adc
mov
ja
mov
jns
mov
sub
push
sub
pop
std
insb
cmpb
dec
mov
xchg
mov
fucomi
incb
pop
adc
pop
sub
sbb
or
in
loopne
lock
and
adc
xor
into
mov
jecxz
xchg
cmp
and
sarb
sbb
daa
mov
lea
cmpsl
adc
jmp
lahf
mov
imul
in
cmp
rol
out
stos
js
mov
cld
test
xor
push
jo
outsb
fs
push
pop
jl
je
sbb
test
imul
jns
adc
jne
decb
dec
or
mov
xchg
mov
mov
sbb
dec
xchg
adc
pop
popf
mov
pop
sub
adc
mov
jo
popf
lods
fstpl
or
jmp
lods
das
mov
outsl
mov
fdivl
jb
outsl
sarl
xchg
mov
sbb
unpckhps
test
lcall
enter
pop
mov
adc
popa
popf
mov
fldt
in
clc
dec
test
push
cmp
int
pop
cltd
out
sti
jae
pop
pop
xor
pop
push
movb
icebp
xchg
push
iret
rorl
int
lock
das
std
ret
fistps
lret
mov
and
jae
pushf
mov
lea
jmp
mov
lea
jb
jmp
scas
mov
xchg
inc
push
push
addb
imul
cmp
out
stos
cmpsb
push
outsb
add
sbb
test
and
xchg
fsubl
leave
rol
pop
subb
hlt
xor
sbbl
and
idivb
push
xchg
cmpsl
stos
imul
xor
lahf
decl
or
out
jmp
sub
add
in
inc
in
pushf
xor
pusha
lock
jg
gs
imul
adc
xchg
mov
jmp
xchg
fcomps
aad
jns
sub
inc
sbb
or
mov
cmp
sbb
movsl
je
adc
sbb
dec
mov
mull
stc
adc
outsb
jecxz
cs
loope
das
jns
ljmp
ja
and
inc
adc
push
mov
push
pusha
fneni(8087
sub
dec
jp
cli
sti
mov
sub
adc
out
sbb
outsl
popf
jb
cmp
mov
pusha
loope
mov
mov
jmp
mov
test
sahf
scas
repz
pxor
pop
shl
rcr
sbb
fisttpll
cli
shrl
jbe
dec
xor
arpl
mov
or
adc
ja
pushf
mov
cmp
mov
lea
ja
sete
inc
setp
call
movl
jmp
movb
lea
call
push
call
pop
pop
pop
cwtl
inc
push
test
std
scas
inc
inc
inc
js
cmc
push
pop
addr16
js
xchg
sbb
sbb
or
cmp
pop
call
sbb
aas
aas
sub
sbb
sub
jae
adc
leave
pop
push
sub
cmc
sbb
imul
sarl
into
in
loope
xor
and
xchg
rcrl
mov
inc
add
in
aam
fidivl
adc
mov
pop
cmp
or
or
in
sahf
fmull
dec
in
mov
xor
mov
test
in
mov
and
mov
stos
xorb
out
xchg
add
sbb
sarl
in
pop
jge
icebp
jl
pop
dec
inc
push
shlb
jg
adc
add
pop
xchg
mov
mov
test
push
test
out
dec
push
push
pop
jbe
jmp
xchg
mov
insb
out
in
mov
fcomps
sub
inc
mov
mov
sub
push
mov
xchg
imul
jl
test
push
push
push
loop
dec
int
jae
hlt
mov
inc
scas
pop
mov
jo
lock
push
dec
xchg
inc
dec
out
cmpsl
jne
fcompl
gs
mov
sbb
js
test
mov
jae
xor
push
xchg
lods
push
lcall
mov
add
std
and
pop
push
push
add
ret
out
jecxz
lcall
sub
rorl
int
jne
imul
push
push
hlt
add
aam
mov
mov
aaa
lret
fldenv
outsb
sub
sub
jmp
pop
call
insb
scas
dec
lcall
stos
dec
xchg
out
dec
sbb
xlat
or
lcall
dec
xor
int3
adc
xchg
pop
jmp
hlt
std
jnp
out
add
sti
fwait
dec
out
sbb
jl
adc
mov
mov
lea
imul
fsubl
cmpsb
mov
xchg
and
xor
cmpsl
mov
mov
movsl
dec
xchg
popa
mov
insb
scas
mov
dec
add
sub
subl
and
cmp
das
outsl
xor
and
push
add
adc
call
test
pushl
movb
call
movl
call
lea
jb
jmp
pop
movsb
and
mov
aas
sub
jbe
cli
jns
out
sbb
les
push
push
shll
jmp
dec
dec
add
ja
outsl
icebp
aad
sub
and
xchg
orb
xor
cld
xor
xchg
adc
test
lea
xor
mov
pop
movsbw
movsbw
pop
pusha
jmp
mov
pushf
bswap
mov
bswap
lea
jmp
adcl
push
lahf
sarb
or
js
jne
test
add
es
loope
stos
arpl
sbb
inc
jp
sub
xchg
call
xor
sbb
in
aas
jne,pt
aad
les
mov
or
mov
mov
and
jp
test
push
push
movl
pushf
mov
lea
jmp
loop
scas
add
and
and
lock
ljmp
in
cmp
fildll
mov
insl
mov
mov
mov
icebp
mov
jmp
cmc
cmc
cmp
movw
call
lea
jne
ror
mov
pusha
cmp
or
call
movl
setp
lea
jmp
lea
ja
setno
pushf
inc
pusha
inc
lea
dec
jmp
jne
andl
dec
in
enter
add
pop
jnp
test
sub
outsb
mov
lret
hlt
mov
jecxz
xchg
ficoms
test
pop
lods
outsl
cmp
sbb
xchg
mov
mov
hlt
in
rclb
jmp
mov
push
data16
mov
hlt
adc
in
in
fisubrl
and
in
dec
jge
shl
mov
test
test
sti
in
fists
mov
push
add
and
decl
test
xor
cmp
stc
call
pop
inc
mov
dec
push
int
push
jmp
popf
pop
xor
int3
popa
arpl
jo
shrb
mov
and
aaa
mov
in
dec
jle
fadds
pop
aam
clc
psubsw
popf
sub
lea
and
insb
fwait
jge
fdivrl
xchg
cld
test
mov
mov
adc
fisubrl
jns
adc
cmpsb
and
mov
imul
mov
adc
ja
push
movl
jmp
push
call
pushl
popl
mov
test
pushl
test
cmp
jmp
movb
movb
lea
jbe
adc
inc
mov
rcl
sar
shr
and
add
add
bt
mov
bswap
add
rcr
sar
setle
shl
movl
rol
or
setno
dec
mov
stc
cmp
call
push
push
mov
jmp
inc
xchg
push
mov
cmp
dec
dec
pop
pop
popf
push
or
xchg
clc
mov
xchg
or
je
popf
lods
mov
aam
xchg
pop
ret
lods
and
cmc
or
jns
negl
mov
gs
lcall
movsl
mov
cltd
jo
std
xor
mov
scas
in
cmovg
mov
jg
rorl
inc
and
dec
fmull
and
jmp
jmp
pop
bswap
mov
lea
not
mov
pusha
movl
call
pushf
call
movw
jmp
jmp
jae
sbb
daa
add
mov
xor
add
call
add
mov
push
stos
ljmp
mov
outsl
add
push
push
imulb
adc
std
imul
push
xchg
mov
push
adc
add
mov
xor
or
cmp
sub
xor
sub
sub
push
push
push
pop
ljmp
adc
dec
fisubrl
pop
push
xor
lahf
dec
adc
pop
inc
lret
jge,pt
mov
dec
rorb
adc
or
adc
add
pop
movb
add
add
add
add
mov
add
add
jge
add
pushf
mov
add
add
sbb
add
movsb
mov
add
mov
movl
pushf
pushf
push
push
lea
jmp
sbbl
clc
les
xlat
jmp
jnp
mov
fs
push
ss
xchg
out
ret
and
cmp
sbb
cmp
int
sbb
in
mov
mov
aad
sbb
hlt
or
addr16
lret
lcall
stos
js
inc
fcmovnb
js
mov
jecxz
sti
xor
xchg
lret
sbb
xchg
scas
int3
mov
cld
or
fisttpl
gs
push
xor
add
inc
jns
add
fwait
or
nop
lods
cmp
xlat
rcr
cltd
xchg
and
das
or
xchg
mov
shrb
nop
stos
stos
data16
int
cmpsb
call
push
sub
pop
gs
jp
mov
hlt
sub
mov
fstps
mov
add
jb
lods
dec
jecxz
cs
push
jb
dec
lds
repnz
test
shl
in
jne
dec
mov
leave
pop
aad
push
aad
fcoms
nop
shrl
outsb
cmp
aas
stc
mov
or
sbb
mov
cmp
out
or
insb
jns
sbb
mov
fs
sbb
loopne
loopne
mov
xchg
icebp
lods
adc
int
mov
mov
add
int
mov
arpl
jl
adcl
dec
inc
adc
pushf
movl
jmp
push
jmp
jmp
cli
clc
adc
test
mov
faddp
mov
movsl
pop
fnstenv
sbb
and
and
mov
inc
adc
xor
xor
cmp
and
lahf
push
jmp
mov
ja
and
dec
inc
not
mov
add
mov
fisubrl
out
dec
repnz
loopne
test
mov
push
rorl
mov
jg
in
jae
mov
xchg
rol
mov
iret
mov
loope
mov
jge
mov
ljmp
and
enter
dec
movsb
mov
dec
push
fs
cltd
pop
jbe
in
push
push
xchg
in
jae
mov
xlat
adc
pushf
test
push
mov
or
mov
or
jne
negl
push
movsl
hlt
dec
stos
jbe
xorl
sub
cmpsl
mov
cs
sahf
js
sbb
mov
and
popa
fildll
arpl
xor
out
pop
adcb
sbb
mov
jle
xchg
je
adc
pop
jle
sarl
addl
or
adc
stos
push
mov
movb
pushf
lea
jmp
neg
mov
sar
mov
sub
stc
call
lods
clc
not
cmc
cmc
test
clc
neg
pusha
bt
ror
bt
cmc
bt
sub
jmp
pushl
pushf
call
push
adc
pusha
movb
call
call
pushl
pushl
popl
mov
pushl
pushl
ret
or
push
sahf
add
ss
mov
push
and
andl
icebp
ja
imul
sub
mov
movsb
pusha
fisubrl
out
sbb
dec
mov
enter
cmp
lds
adc
fwait
sbb
in
imul
aam
cmp
push
adc
call
not
mov
pusha
sub
jl
stc
cmc
add
push
pusha
mov
jmp
pusha
mov
pushf
pusha
pushf
lea
jmp
mov
jmp
jmp
pusha
pushf
repz
popl
pusha
movb
push
lea
jmp
push
mov
pusha
mov
movw
mov
pusha
call
mov
jmp
mov
sar
and
aad
lea
stc
pushf
cmp
jmp
mov
pusha
pushf
pushf
lea
js
divl
pushf
mov
pusha
mov
pusha
call
test
bt
add
lea
jl
bt
cmp
cmc
shld
push
mov
mov
call
cmc
xor
stc
sub
movzbl
shld
btc
pop
mov
cmc
add
jmp
movzbl
test
pushf
sub
pushf
call
jmp
cmp
pushl
not
call
sbb
aad
rcl
notl
das
neg
mov
push
pushl
clc
sub
clc
pushf
and
call
pushf
pusha
movb
call
push
add
clc
cmc
bt
jmp
setnp
shrd
movzww
clc
jmp
pusha
mov
push
movb
pushf
push
lea
jmp
jmp
lea
jne
mov
rcl
sbb
mov
jmp
lea
jne
pushf
clc
xor
push
call
lea
jg
push
mov
pusha
movb
call
mov
jmp
push
inc
shl
mov
inc
cmp
stc
sbb
mov
bt
sub
clc
shr
movb
jmp
jne
ror
adc
neg
dec
xorb
pushf
setg
setne
mov
push
push
pushf
pushf
lea
jmp
xor
test
push
sub
jno
push
mov
jmp
pushf
lea
ja
push
mov
call
pushl
sub
call
neg
btr
stc
and
add
jl
sub
stc
test
mov
cmp
pushf
cmp
sub
push
push
movb
pushf
mov
pusha
movb
lea
jmp
movzbw
dec
dec
btc
bts
stc
rol
rcl
sub
bsf
btr
sar
and
rcl
call
push
cld
pushf
call
lea
ja
mov
pusha
pusha
mov
lea
jmp
call
push
pusha
pushf
popl
jmp
mov
push
lea
jmp
call
clc
shr
movzbl
pushf
or
btc
shr
add
shrd
jmp
lahf
push
lahf
mov
call
pushl
popl
movb
movb
lea
jmp
movzbl
movsbl
bswap
mov
push
lea
jmp
lea
call
mov
cmc
pushf
bt
pusha
add
pusha
jmp
mov
push
movb
push
pusha
lea
jmp
pushl
popl
push
lea
jmp
pushf
repz
popl
pusha
lea
jmp
stc
call
call
sub
pushl
jmp
and
call
lea
jle
pusha
pushf
popl
pushf
call
bt
bt
push
clc
shld
jmp
mov
mov
lea
jmp
stc
sub
pushf
pusha
movl
mov
pushf
pushl
pushf
movb
lea
jmp
bswap
not
mov
pusha
push
lea
cpuid
stc
test
bt
call
sub
pushf
jmp
cmp
stc
mov
stc
sub
call
mov
pushl
pushf
pusha
lea
jmp
pushf
popl
call
call
pushf
push
dec
pushf
clc
cmc
stc
not
pusha
clc
movb
ror
cmp
pushf
movb
sub
jmp
call
jmp
pusha
pushf
popl
pushf
movb
pushf
pushl
popl
mov
pushf
pushl
push
lea
jmp
test
aaa
xadd
rdtsc
stc
clc
sub
jmp
shr
pushf
push
pushf
push
or
push
mov
clc
xor
jmp
and
movzbl
cmp
call
push
call
xchg
das
shl
btr
mov
sub
jmp
push
pushl
popl
movl
pushl
lea
jmp
jmp
jmp
stc
pusha
sub
mov
push
pushf
push
mov
push
mov
mov
jmp
sub
pushf
pushl
xchg
pushf
mov
call
pusha
mov
pusha
pushf
lea
jmp
call
call
mov
call
bt
jmp
pusha
decl
pushf
lea
jne
pusha
mov
pusha
movb
push
pushf
lea
jmp
lea
jne
stc
pusha
jmp
shrd
mov
sbb
bsr
bsf
sub
bswap
not
jg
dec
rol
ror
not
bswap
mov
not
ror
jns
bsr
rcl
sub
pushf
movb
dec
inc
bsr
movzbl
test
cmp
clc
pushf
mov
bt
call
mov
jmp
sub
call
pushl
popl
push
movl
lea
jmp
mov
rcr
xor
add
push
pusha
mov
push
mov
push
lea
jmp
mov
call
add
and
btc
mov
bswap
pop
pusha
adc
btc
std
mov
cld
mov
pushl
bswap
mov
not
mov
lea
std
movzbw
pushf
mov
add
jp
neg
rol
pop
or
pop
jmp
lea
je
bt
jmp
call
mov
pushf
add
jmp
jmp
mov
push
pushf
pushf
lea
jmp
jmp
jmp
call
pushf
call
mov
pushf
lea
jmp
cmpl
pusha
lea
ja
pusha
push
mov
pusha
mov
call
rcl
cmp
dec
pusha
mov
jmp
sub
cmc
pushf
xchg
cmp
mov
pusha
call
jmp
mov
dec
movl
sub
call
pushf
mov
pushl
pushl
jmp
ror
mov
stc
mov
clc
clc
pusha
clc
add
call
jmp
pushf
pusha
pushf
pushf
popl
pushf
pushl
popl
push
pushf
mov
movl
lea
jmp
movzbw
mov
sbb
mov
sar
shr
mov
test
add
jne
mov
pusha
pusha
pushf
lea
jmp
pushf
pushl
popf
pusha
pushl
mov
lea
jmp
repz
popl
pushl
lea
jmp
mov
mov
push
pushl
jmp
shr
pushf
pushf
pusha
mov
pushf
call
pushf
pusha
call
shl
das
or
shrd
mov
stc
cmc
clc
xchg
pusha
cmc
movw
add
pusha
clc
xchg
stc
push
movb
stc
ror
lea
jp
pusha
pushf
inc
stc
push
pushl
add
stc
test
cmp
sub
pushf
push
push
pushf
mov
push
lea
movb
pushf
lea
jmp
jmp
repz
popl
pushl
push
lea
jmp
jmp
cmc
call
call
pushf
lea
jne
sub
cmc
movsbw
mov
mov
pushf
test
cmc
clc
and
sub
jnp
clc
test
stc
cmp
jmp
push
pushl
popl
pusha
pushf
lea
jmp
mov
mov
lea
jmp
mov
pushf
movl
push
lea
jmp
jmp
push
pushf
repz
popl
lea
clc
push
push
mov
rol
rcr
stc
btc
push
pushf
lea
bts
pusha
mov
setb
xchg
not
mov
not
xchg
setl
bswap
xchg
bt
not
mov
jmp
cmp
cmc
bt
push
not
jmp
movb
jmp
bts
mov
shld
shr
test
rcl
mov
stc
call
mov
pushf
movb
movb
movw
lea
jmp
movl
pusha
mov
push
movb
pushf
mov
pushl
ret
rcr
not
jmp
call
mov
movb
pushf
push
lea
jmp
mov
lea
jo
mov
push
call
add
pushl
pushf
pushf
pushf
popl
pushf
mov
push
push
pushl
popl
movb
pushf
movb
lea
jmp
pushf
movl
mov
movb
pusha
pushl
lea
jmp
push
pusha
jmp
sub
bt
cmp
movw
and
jmp
cmc
push
call
pushf
pushf
std
mov
pusha
movzbw
push
lea
pushl
xchg
movsbw
std
mov
call
xor
mov
shr
neg
not
shl
mov
push
bt
sub
pushl
shl
pusha
jmp
shl
pusha
mov
call
shl
shld
mov
bt
bt
test
add
jmp
mov
jmp
jmp
mov
movb
movb
pushf
movl
lea
jmp
or
rcr
sub
push
movzbl
test
lea
pusha
pushf
cmp
cmp
add
clc
sub
cmp
neg
call
mov
push
pushl
push
movb
lea
jmp
mov
call
cmp
mov
push
pushl
cmp
sub
jmp
jmp
call
movb
xchg
pushf
movl
pusha
jmp
mov
movw
lea
jmp
pushf
popl
mov
mov
pushl
popl
pushl
pushf
mov
push
lea
jmp
pushf
movw
repz
popl
pushf
lea
jmp
call
mov
pusha
pusha
lea
ja
test
sbb
aas
rcr
mov
cmc
lea
movzbl
neg
test
sub
cmc
shl
movsbw
shr
lea
not
and
sub
btc
bsr
rcr
sub
jmp
pushf
repz
popl
push
mov
push
pushf
lea
jmp
call
mov
dec
call
mov
call
call
lods
add
xchg
repz
jge
es
jle
jge
ret
xchg
sbbl
xchg
dec
adc
jge
pop
push
jle
add
or
ret
xchg
jg
jle
jmp
jle
push
sbb
push
sbb
dec
sti
jge
dec
sti
jge
xor
xchg
xchg
or
xchg
push
add
xchg
xchg
push
jle
pop
sbb
add
add
sbbl
xchg
sbbl
xchg
pop
sbb
cmp
jle
adc
jge
dec
sti
jge
adc
sbb
sbb
jle
or
jle
enter
cmp
jle
push
jle
rolb
xchg
push
sbb
sbb
jle
rolb
xchg
adc
jle
aam
jle
xchg
or
xchg
lods
add
xchg
lods
add
xchg
dec
adc
jge
clts
jle
clc
std
jge
sbbb
xchg
enter
mov
jle
xchg
push
jle
insb
add
in
jle
call
add
xchg
lods
add
xchg
clts
jle
xchg
or
xchg
call
adc
dec
adc
movsb
adc
movsb
adc
clts
jle
pop
sbb
jg
jle
push
sbb
sbb
jle
cmp
jle
clts
jle
jge
sbb
jle
dec
sti
jge
dec
sti
jge
es
jle
xchg
or
xchg
sbb
add
cmp
xchg
mov
jge
mov
jge
sbb
jle
xchg
jge
lods
stc
jge
adc
jge
dec
sti
jge
xchg
or
xchg
mov
jge
jmp
jle
lods
stc
jge
sbb
jle
xchg
push
jle
mov
push
jle
ret
xchg
aam
jle
mov
adc
sbb
jle
sbbb
xchg
out
jle
lods
add
xchg
lods
add
xchg
es
jle
jge
lods
stc
jge
out
jle
xor
xchg
sbb
jle
cmp
xchg
xchg
jge
rolb
xchg
jmp
jle
insb
add
lods
add
xchg
lods
add
xchg
dec
adc
or
jle
xor
jle
mov
jge
cmp
jle
cmp
jle
xchg
cld
jge
add
or
push
jle
pop
push
jle
sbb
jle
loopne
jle
loopne
jle
repz
jge
xor
xchg
dec
sti
jge
dec
sti
jge
xchg
or
xchg
sbb
jle
xchg
or
xchg
rolb
xchg
add
adc
push
jle
movsb
adc
mov
add
xchg
cmp
xchg
movsb
adc
dec
sti
jge
dec
sti
jge
call
sbb
pop
push
jle
adc
or
jle
lods
stc
jge
sbbb
xchg
jg
jle
cmp
xchg
push
jle
sbbl
xchg
or
jle
sbbl
xchg
lods
add
xchg
lods
add
xchg
mov
jge
jl
jle
insb
add
enter
ja
jge
ja
jge
xor
jle
call
or
jle
mov
sbb
jle
lods
add
xchg
jg
jle
rolb
xchg
sbb
sbb
jge
or
jle
adc
out
jle
xor
jle
mov
push
jle
pop
sbb
sbbl
xchg
out
jle
push
add
xchg
dec
sti
jge
dec
sti
jge
adc
jle
jmp
jle
cmp
jle
or
jle
ret
xchg
cmp
jle
mov
jle
insb
add
pop
sbb
mov
sti
jge
dec
sti
jge
xor
jle
or
jle
xchg
or
xchg
repz
jge
jge
ret
xchg
cmp
jle
add
or
push
jle
pop
push
jle
or
jle
push
jle
call
adc
lods
add
xchg
movsb
adc
clc
std
jge
lods
stc
jge
movsb
adc
or
jle
insb
add
rolb
xchg
xor
jle
es
jle
mov
jle
lods
add
xchg
lods
add
xchg
mov
pushl
popl
push
push
mov
lea
jmp
mov
pushf
popl
pushf
pushf
pushl
popl
mov
movb
lea
jmp
movb
lea
jne
btr
btc
btc
xorb
not
pop
pushf
lea
jmp
jmp
push
mov
pushf
pusha
pushf
movb
lea
jmp
jmp
movzbl
cmc
sbb
pusha
mov
cmc
sub
pusha
mov
push
push
lea
jmp
jmp
das
push
shl
lahf
mov
and
bsr
mov
cmp
test
add
call
lahf
mov
btr
cmc
mov
mov
ror
mov
bt
push
call
bswap
or
movzbl
call
pusha
pusha
jmp
shr
mov
push
jmp
mov
pushf
pushl
ret
pushf
mov
pushf
pushl
pushf
lea
jmp
lea
pushf
movb
lea
jmp
pushf
pushf
movb
movb
repz
popl
pushf
movl
lea
jmp
cwtl
cmc
clc
push
cmp
sub
movb
pusha
jmp
pusha
jmp
mov
pushf
push
movl
lea
jmp
push
call
setnp
btc
bswap
movzbw
mov
jmp
pusha
mov
push
pushf
lea
jmp
call
not
movl
dec
call
lea
jne
jmp
movsbw
mov
inc
add
rol
sbb
mov
btc
btr
mov
lea
shld
pop
stc
mov
cmp
cld
pushl
popf
pushf
mov
pushl
ret
pushl
popl
pushf
pushf
lea
jmp
movsbw
mov
pusha
call
pusha
movw
jmp
bswap
lahf
mov
movsbw
mov
push
mov
call
cmp
add
call
adc
add
bts
neg
bt
dec
or
xadd
add
btr
bsf
bsf
lea
shl
adc
inc
sub
btr
mov
sar
sbb
mov
call
cmc
cmp
mov
jmp
jmp
repz
push
lea
jmp
movsbw
rcr
mov
add
rol
or
bt
add
bsf
xor
sub
adc
mov
cmc
shl
push
call
stc
push
pusha
cmp
cmp
pusha
call
add
clc
mov
xchg
pusha
bt
clc
ror
pushf
mov
lea
jae
pushf
inc
test
test
cmp
add
pusha
pushf
stc
call
pushf
push
mov
pushl
popl
pushf
mov
lea
jmp
seta
lahf
mov
call
add
pushf
cwtl
bt
bt
pushl
sub
jmp
bsf
sub
movsbl
inc
dec
add
shl
movzbl
pushf
mov
pusha
pusha
cmc
clc
or
mov
pushl
call
pusha
repz
popl
pusha
pushl
pushf
lea
jmp
push
movb
inc
cmc
call
shl
mov
movzbl
push
rcr
shl
add
ror
bts
sub
btr
mov
mov
mov
btr
xor
sub
sub
xor
push
xor
shr
cmp
shld
sub
rcr
inc
sub
neg
sbb
shld
test
neg
xor
add
sbb
movzbl
shr
cmc
shrd
mov
pusha
add
clc
cmc
bt
cmc
sub
cmc
cmc
test
add
movb
call
pusha
repz
popl
pusha
lea
jmp
and
sar
dec
mov
cmp
cmc
pushf
sub
push
mov
pusha
jmp
jmp
lea
jge
pushf
pusha
mov
pushl
pushf
popl
movw
lea
jns
push
pushl
popl
mov
lea
jmp
pusha
mov
repz
popl
pushf
pushl
pushf
movl
lea
jmp
lea
jne
rol
ror
adc
bts
mov
push
bt
test
bt
and
call
mov
adc
test
dec
adc
mov
call
pusha
mov
pushf
push
pushl
lea
jmp
pushf
rol
call
push
call
rcr
ror
rcr
ror
and
btc
add
add
xor
push
shld
mov
pushf
test
add
call
mov
push
mov
push
movl
pushf
popl
call
lea
je
mov
push
pushf
mov
movb
lea
jmp
clc
cmp
pushf
call
pushf
mov
push
mov
movw
mov
lea
jmp
push
bt
and
movw
cmp
cmp
call
call
push
rol
bts
shl
neg
add
sub
push
sub
add
add
shr
or
lea
xadd
pusha
mov
sub
and
shr
dec
mov
stc
jmp
pushl
popl
pushf
push
pushf
lea
jmp
sub
cmc
bt
test
clc
and
pusha
movb
movb
jmp
movl
bswap
push
push
pusha
sub
bt
pushf
pushf
stc
rol
pushl
cmc
sub
cmp
xor
stc
cmc
sub
call
jmp
pushl
pushf
call
pushf
jmp
pop
neg
movzbl
pop
std
test
popf
pusha
pusha
pushl
pushl
ret
cmc
xor
pushf
pushf
cmc
clc
ror
pushf
test
pusha
add
stc
jmp
shld
mov
inc
bts
mov
clc
shl
pusha
mov
call
jmp
sbb
jmp
pusha
call
push
jmp
add
pushf
pushf
push
pushl
lea
jmp
repz
popl
push
lea
jmp
pushl
popl
movzbw
cmc
movl
pop
lea
jb
not
bts
mov
btr
movzbw
movzbw
pushf
rol
call
jmp
push
movw
mov
mov
pushf
popl
pusha
pusha
push
call
mov
pushf
movw
lea
je
pushf
pushf
popl
call
inc
stc
push
stc
add
test
bt
jmp
pusha
pushl
call
add
pusha
movb
mov
pushl
pushl
ret
clc
add
pusha
push
push
call
pushf
mov
pushf
push
lea
jmp
call
mov
call
xchg
push
call
pushf
lea
jbe
mov
pushf
lea
jmp
lea
je
stc
xor
cmc
pushf
xchg
cmc
pushf
mov
test
bt
sub
movb
call
sar
jmp
push
mov
pushf
popl
pushf
movw
pushf
push
pushl
popl
mov
movw
movb
pushf
lea
jmp
mov
pusha
pushl
pusha
pushf
lea
jmp
movw
jmp
pushf
pushf
mov
jmp
push
call
pushl
popl
movb
push
lea
jmp
aad
mov
pushf
sub
pushf
pushf
pusha
jmp
repz
popl
push
mov
pusha
pushf
lea
jmp
lea
jne
sbb
jmp
jmp
pushl
popl
pusha
push
lea
jmp
or
call
cmp
shld
jnp
rol
mov
clc
mov
push
pusha
stc
add
pusha
call
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
mov
push
push
push
pushl
ret
lea
je
call
add
add
mov
pushf
movb
pushl
ret
pushf
push
jmp
lea
pusha
bsr
add
mov
sub
cmp
neg
stc
rol
pusha
dec
xor
add
clc
bsf
or
xor
mov
clc
jmp
call
mov
movb
movl
pushf
jmp
rep
shld
mov
shr
cmp
shl
mov
push
pushl
popf
mov
mov
mov
lea
jmp
jmp
pushl
jmp
pushf
push
mov
pushf
lea
jmp
and
cmp
pusha
call
pushf
pushf
popl
push
pushl
popl
movl
pushf
movl
mov
lea
jmp
call
pushf
popl
pushl
jmp
call
push
divl
mov
mov
mov
pushf
pushl
pushf
jmp
cmc
mov
pusha
clc
mov
call
pusha
pushf
mov
push
jmp
or
xorb
sete
bswap
movzbl
pop
pushf
pushf
push
push
lea
jmp
push
mov
mov
pushf
lea
jmp
add
lea
jns
push
mov
mov
mov
lea
jge
pusha
mov
movb
lea
jmp
lea
jg
mov
jmp
rcl
bsr
mov
inc
add
jmp
lea
ja
lahf
push
jmp
pushf
sub
test
clc
cmp
sub
jmp
jmp
pusha
jmp
clc
pushl
push
add
test
call
sub
movb
call
pushl
pushf
cbtw
movw
cwtl
push
pushf
call
add
daa
mov
daa
mov
pusha
cmc
cmc
sub
call
sar
mov
clc
pusha
clc
cmp
add
jmp
sub
rcr
setns
ror
mov
pusha
movzbw
xor
mov
stc
sub
jne
cmc
not
call
call
cmp
call
sub
jmp
lea
mov
call
push
xchg
pushf
movl
pushf
mov
pusha
movb
pushl
ret
pushf
mov
pusha
repz
popl
pushf
lea
jmp
pushf
pushl
pushl
lea
jne
not
btr
mov
pushf
call
rol
ror
mov
xor
movzbl
mov
push
clc
add
call
call
pusha
push
cmc
sub
push
push
add
call
call
movw
mov
pushf
popl
pushf
pushf
pushl
popl
movw
lea
jmp
pushl
popl
pushf
pusha
pushl
pushf
lea
jmp
xor
test
pushl
add
jmp
movb
pushl
add
pushf
jmp
mov
pusha
mov
jmp
lea
jne
pusha
bswap
push
bts
xorb
setno
setns
pusha
movsbw
mov
push
lea
jmp
pushf
movzbw
lea
mov
mov
pusha
call
sbb
mov
bt
sbb
or
jmp
add
add
pushf
mov
bswap
xor
pushl
cmc
movzbw
setbe
xor
movb
add
sub
push
cmp
bswap
mov
neg
jmp
cmp
bt
cmc
sub
bt
pushf
cmp
xchg
cmp
push
jmp
dec
shl
mov
mov
pushf
mov
jmp
btr
shrd
clc
mov
rcl
mov
pusha
stc
jmp
call
mov
pusha
pushf
pushf
push
lea
jmp
sub
call
pushf
jmp
jmp
inc
not
pushf
dec
btr
rcr
ror
not
cmc
pusha
btc
ror
cmc
sub
call
shrd
jmp
setge
call
mov
mov
mov
mov
call
xor
jmp
sub
pusha
shl
pushf
pushl
mov
push
mov
mov
movb
mov
mov
pushf
popl
pushl
mov
call
pushl
jmp
lea
jno
push
pushf
popl
push
pushl
popl
mov
movw
lea
jmp
pushf
lea
jne
rcr
xorb
movzbw
movsbw
pushf
pushf
mov
pushf
pusha
lea
jmp
jmp
cmp
call
pushf
dec
sbb
mov
cmp
add
pushl
pusha
lea
jmp
pushf
jmp
not
cmc
not
mov
and
lea
je
pushf
pushl
pushf
mov
pusha
jmp
cmp
pushl
call
pushf
not
lea
mov
lea
pusha
pushf
mov
mov
lea
cpuid
pushf
pusha
bt
cmc
sub
push
test
cmc
test
cmpl
pushf
jmp
mov
push
pushf
popl
pushf
jmp
pushf
pushl
mov
push
pushf
movb
pushf
lea
jmp
aas
mov
shl
mov
jmp
rol
shr
bswap
jmp
call
add
pushf
mov
cmc
jmp
call
clc
mov
ror
rol
jmp
mov
pushf
pushl
pushf
pusha
lea
jmp
mov
push
push
jmp
mov
mov
mov
pushf
lea
not
pushf
mov
call
stc
add
call
mov
jmp
sub
mov
mov
jmp
mov
pushf
pushf
sub
pusha
jmp
mov
push
pushf
pusha
pushf
lea
jmp
stc
not
cmp
cmc
call
lea
jne
mov
movsbw
movzbw
push
mov
pusha
and
test
jmp
pushf
lea
jne
jmp
add
pusha
clc
shrd
jmp
mov
lea
jg
pushf
pushf
popl
pushf
push
pusha
push
pushl
popl
push
pushl
mov
lea
jmp
mov
push
pushl
call
xchg
pushf
jmp
pusha
lea
jne
and
inc
xorb
pushf
setb
pusha
mov
mov
pushf
movb
pushf
lea
jmp
mov
cmc
sub
stc
clc
pushf
shr
mov
mov
push
pushf
pushl
movb
pushf
popl
push
call
pushf
pushl
pushf
pushf
popl
call
push
pushl
pushf
pusha
mov
push
pushl
lea
jmp
pusha
mov
push
pushf
lea
jmp
mov
mov
jmp
test
call
jmp
pushf
push
pusha
pushf
mov
movb
lea
jmp
mov
dec
pushf
rol
setg
movsbl
rcr
and
sub
jmp
pushf
dec
shl
clc
xor
movzbl
bt
clc
mov
bt
pushf
stc
or
push
call
mov
movw
mov
lea
jmp
sub
mov
add
bts
js
mov
stc
bt
add
pusha
call
mov
clc
and
push
pusha
cmp
call
pushl
popl
pushf
pusha
pushf
lea
jmp
lea
jne
ror
inc
bts
shld
xorb
lea
not
call
pushf
call
bswap
mov
push
pusha
lea
pusha
call
push
mov
pusha
push
mov
movb
mov
push
lea
jmp
mov
bsf
sets
bt
inc
mov
test
add
pusha
mov
movb
mov
pusha
pushf
pushl
lea
jmp
inc
jmp
stc
cmp
sub
stc
movb
call
ror
stc
cmp
jmp
pushl
popl
movb
mov
mov
mov
lea
jmp
mov
pushf
movb
pushf
movb
pushf
popl
jmp
mov
lea
jp
jne
bt
call
push
jmp
mov
push
movb
push
mov
lea
jmp
mov
pushl
push
pushf
popl
pushl
pushl
popl
pushf
push
lea
jmp
call
push
dec
bswap
xor
btr
ror
call
push
mov
pusha
push
pushf
movb
lea
jmp
pusha
push
push
repz
popl
mov
movb
push
mov
lea
jmp
mov
sub
bt
cmc
movb
call
pushf
test
sub
push
call
