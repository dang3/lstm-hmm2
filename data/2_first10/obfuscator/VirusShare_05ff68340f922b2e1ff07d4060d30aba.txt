push
call
ret
ret
cmc
enter
sarb
mov
mov
bound
mov
pop
lcall
mov
hlt
out
ds
add
sub
cs
aas
and
push
call
dec
into
leave
je
xchg
jle
inc
pop
pusha
movsl
xchg
jecxz
aam
push
add
mov
sahf
mov
mov
pop
cmp
std
pop
add
pusha
roll
out
dec
mov
or
mov
inc
cli
pop
mov
arpl
into
cmpsl
cmp
add
mov
cmp
sub
fisubrs
pop
or
movsb
test
and
in
jno
clc
gs
filds
dec
cs
cmpsb
push
adc
fstpt
insl
and
mov
ss
icebp
repnz
outsl
faddl
cmp
mov
les
or
cltd
bound
mov
ret
ja
jecxz
fwait
shl
adc
int
lret
sub
fisubrl
loopne
jne
inc
xchg
push
mov
jmp
mov
jecxz
mov
cmp
xlat
mov
imul
cwtl
sub
sub
dec
jmp
loope
push
es
jae
jo
and
push
and
in
out
lahf
mov
push
mov
inc
sbb
xchg
icebp
movsl
cmpsl
xor
inc
jns
inc
sbb
or
aad
jbe
pop
cwtl
or
inc
mov
mov
ja
int
aas
fdivs
inc
inc
andb
xchg
lcall
pop
popf
in
fistpl
inc
mov
pop
inc
iret
xor
rol
pcmpgtb
dec
das
fcomi
cmp
adc
les
lahf
leave
daa
dec
pop
cmp
cs
mov
scas
clc
out
or
insb
sub
mov
cmp
clc
scas
push
mov
les
sub
and
pop
inc
std
cmp
dec
inc
pop
ficoms
mov
mov
cmp
sbb
push
lret
fnstcw
lods
cmc
jnp
fldcw
sub
scas
leave
xchg
jle
into
push
es
pushf
into
mov
jg
pop
xchg
mov
xor
repnz
xchg
jne
add
push
inc
sub
hlt
daa
add
lret
push
pop
mov
pop
imul
lods
jecxz
cltd
ret
xchg
push
push
aaa
cmp
cmp
add
add
test
sahf
inc
xchg
push
push
repz
stc
xchg
mov
loope
aam
popf
dec
addr16
sbb
jl
mov
xor
fidivrs
popf
dec
repz
pop
cmp
jmp
arpl
fistl
xchg
cld
pusha
add
aam
notl
jge
mov
ret
rclb
pop
add
jle
add
imul
pop
cs
mov
aad
int3
not
mov
in
shl
or
pop
sarb
mov
mov
and
adc
dec
std
xor
xor
sub
cs
lea
mov
and
movsl
ss
lds
or
pop
test
xor
mov
mov
je
jbe
push
jecxz
cmp
bound
in
dec
sub
sbb
popl
out
cmp
out
mov
repnz
jo
inc
xor
lret
mov
pop
mov
subb
and
dec
dec
mov
inc
jno
inc
pop
mov
sub
jle
or
sbb
mov
icebp
inc
jge
jecxz
dec
cmp
lds
int3
subb
mov
lcall
test
cld
int3
jle
imul
jns
and
dec
add
fisubl
dec
mov
arpl
popf
outsb
in
int3
dec
push
push
sub
inc
and
or
imul
stos
rcl
xor
sub
mov
popf
lea
pop
into
add
scas
dec
or
ljmp
xor
lods
mov
lcall
sub
or
lret
lods
shlb
inc
push
mov
and
popa
pop
cmc
sahf
lds
in
mov
fs
jmp
mov
test
mov
xchg
mov
int
out
subb
pop
test
xor
loop
int3
lea
jb
fs
mov
cli
loop
ljmp
data16
aaa
push
inc
jge
mov
and
or
push
mov
gs
shrb
jge
lahf
sarl
and
dec
mov
in
add
icebp
lret
test
cltd
xchg
add
dec
cltd
insb
sbb
pushaw
iret
ljmp
mov
push
lock
imul
dec
imul
xchg
lcall
push
xor
adc
int
cmpsb
jg
pop
outsl
xchg
out
das
pop
mov
sub
mov
je
mov
pusha
aas
lret
fisttpl
movsb
int
pop
cmp
ljmp
ss
dec
subl
and
insl
sub
pop
mov
and
stos
mov
jecxz
ds
leave
or
pop
fcmovbe
int3
out
dec
add
xchg
add
sub
into
clc
xchg
adc
jmp
sbb
sub
js
sbb
xchg
push
orb
add
scas
aaa
cmp
push
pop
fcomps
scas
pop
jecxz
ret
mov
mov
call
fmull
and
dec
sbb
loop
clc
mov
xor
inc
pop
pop
mov
popf
std
fcoml
mov
test
jp
mov
je
bswap
xchg
xchg
mov
pop
jle
cmp
cmpsb
mov
add
movsl
shrb
fsts
mov
imul
jecxz
sti
cmp
shrl
in
in
mov
pop
mov
mov
movsl
ja
dec
int
dec
insl
or
pushf
adc
test
sbb
and
mov
inc
or
aaa
aas
scas
shll
pop
insb
pop
in
jns
sar
call
loop
sub
ds
jmp
arpl
xchg
mov
rclb
sub
jno
add
aas
sub
push
mov
mov
cmp
cwtl
adc
mov
outsb
xor
inc
push
push
call
jo
push
loope
in
lea
sub
mov
pop
mov
and
test
dec
mov
insb
stos
aad
cld
push
sbb
popa
repnz
jns
cmp
xor
cmp
xor
xchg
out
dec
and
xchg
or
dec
loope
mov
xchg
aas
xchg
das
mov
clc
fucomi
je
mov
cld
jg
movsb
mov
scas
lods
cmp
sub
js
int3
scas
mov
andb
add
fadd
xor
aas
jb
dec
xor
movsb
cld
repnz
inc
hlt
repz
das
imulb
pop
scas
shl
popf
mov
hlt
jecxz
adc
lods
insb
mov
and
mov
loop
mov
pop
mov
jno
sar
sbb
inc
icebp
add
das
xchg
in
cmpb
insb
mull
aaa
sbb
or
dec
aaa
add
push
out
outsl
call
add
push
andb
xchg
aam
out
inc
fldenv
xor
jnp
imul
out
imul
and
sarl
enter
and
ja
test
xor
out
cli
push
lods
pop
mov
bound
jle
mov
testl
and
push
xchg
jg
sbb
mov
test
xchg
andb
add
and
fdivp
push
pusha
movl
in
ret
mov
or
aam
jae
ret
das
xchg
call
std
movsl
jle
jnp
pop
xor
fcomps
sub
add
inc
je
cld
push
scas
mov
mov
sub
adc
divl
add
ret
in
adc
or
out
xor
cmp
je
jecxz
inc
aad
aaa
loope
cmc
cmp
movsl
fstps
mov
inc
fidivs
mov
les
cmp
xchg
lods
jmp
sub
and
and
fistl
push
mov
sub
add
dec
shll
pusha
jmp
sbb
xor
xchg
cmp
xor
pop
sarl
pusha
inc
fcomip
fucomp
pusha
stc
in
xchg
push
out
adc
fiadds
xchg
cmp
cmc
mov
sahf
repz
pop
sbb
ss
lcall
rolb
adc
fidivs
loop
push
adc
mov
leave
shlb
jg
mov
popa
fwait
jae
mov
push
inc
orl
bnd
jge
jno
or
jge
xlat
inc
out
sub
rcll
enter
flds
add
and
adc
jg
dec
std
mov
xchg
movsb
mov
iret
outsl
sub
push
mov
lods
mov
mov
dec
sbb
lahf
clc
addl
cmp
lods
mov
mov
inc
lods
repz
dec
cmp
cmc
add
les
div
aam
mov
pushl
in
clc
shll
scas
dec
pop
cli
dec
jmp
push
popf
jp
adc
pop
addr16
xor
ret
int3
sub
inc
or
add
hlt
push
mov
cmp
nop
cmp
ficoms
jmp
dec
icebp
cli
lds
push
xlat
pop
mov
ja
mov
ret
xchg
xorb
inc
adc
mov
jp
mov
sub
loope
aaa
adcl
divpd
push
sbb
add
mov
xor
sbb
or
cltd
leave
addr16
fldcw
push
outsb
jo
pop
jmp
test
or
repz
pusha
orl
test
fsubrs
mov
scas
rcrb
clc
outsb
ret
jle
notl
push
cmp
loop
mov
cmpsl
sbb
out
out
outsl
sbb
cli
pop
xchg
lret
sbb
mov
out
sub
mov
adc
popf
mov
sub
sbb
pop
outsb
rolb
ror
int
sub
out
mov
cmp
mov
mov
xchg
into
or
subps
sbb
cli
inc
mov
sub
cmpsb
mov
aaa
pop
jno
fmul
cmpsl
loop
outsb
jns
scas
fs
dec
lods
mov
adc
or
mov
cmpsb
outsb
sbb
adc
xor
dec
outsl
inc
jl
fbld
cld
call
sarb
lret
test
mov
insb
hlt
mov
add
or
pushf
push
jno
daa
imul
divb
cmp
add
inc
pop
imul
fs
xor
mov
sub
mov
xchg
cltd
outsb
inc
lods
cmp
adc
xchg
ja
rcrl
fmull
stos
pop
jmp
cmc
in
lahf
cmp
mov
and
add
shrb
fimull
aad
in
xchg
ja
sbb
imul
push
mov
and
mov
test
cmp
mov
daa
add
push
push
ljmp
lahf
mov
or
stos
add
and
push
mull
rorb
je
ret
jl
bound
sbb
lret
jo
insl
mov
xchg
jbe
pop
mov
out
adc
test
int3
mov
pop
add
rolb
call
jns
mov
sbb
movsl
popa
movsl
hlt
and
fwait
jns
push
sub
punpckldq
push
das
test
add
jecxz
repnz
jle
pushf
fcmovbe
loop
jp
jg
in
decb
loop
jl
and
stos
cli
sbb
fnstsw
bound
pop
and
sarl
lds
push
or
adc
jg
inc
fwait
inc
icebp
sub
es
decl
or
fs
xchg
xchg
xchg
xchg
imul
inc
ja
pop
cs
mov
sbb
in
hlt
and
outsb
out
xchg
push
mov
cld
rorb
call
out
sub
adc
js
xchg
mov
js
hlt
dec
mov
mov
cltd
jp
movsl
lahf
repz
jo
pop
and
push
push
xchg
jg
popa
mov
jb
fnsave
jmp
insb
in
lea
scas
push
pop
add
inc
fdivs
jae
filds
sub
pop
jp
imul
ds
add
in
dec
out
jo
mov
arpl
out
icebp
pop
inc
call
outsl
fldcw
xchg
sbb
repnz
jecxz
mov
es
movl
xchg
scas
pop
in
js
mov
mov
cmpsl
and
inc
je
jns
cmp
aam
dec
dec
mov
push
shll
lahf
sbb
js
jmp
idivl
in
sub
push
dec
adcb
movl
lcall
mov
std
test
sbb
cmp
fildl
loope
push
mov
scas
xchg
adc
test
adcl
add
cmp
popf
outsl
xor
dec
js
dec
xchg
stos
inc
fwait
or
cltd
dec
jmp
pop
mov
xor
xor
hlt
lcall
xchg
fidivs
or
or
in
roll
adc
xor
mov
leave
imul
int
into
or
into
out
in
pop
mov
xchg
aad
adc
cmp
in
inc
push
adc
jb
inc
mov
or
inc
and
aaa
push
push
repnz
es
and
nop
adcb
int3
pushf
cltd
or
test
stc
in
aad
fwait
add
sbb
push
ret
mov
sbb
fisttpl
inc
int3
cmc
mov
cmc
cs
into
testl
adc
cld
shlb
push
xor
xchg
outsb
fldenv
testl
pushf
loope
mov
arpl
sub
adc
cld
ja
add
lahf
in
mov
hlt
jnp
push
test
and
jns
mov
jne
xor
aam
mov
je
and
outsb
xchg
push
in
mov
test
xor
push
enter
mov
rorb
inc
sarl
int3
mov
fidivl
test
push
inc
dec
leave
xor
cmpsb
sbb
mov
push
movsb
add
insl
pop
or
sub
xchg
push
add
rol
jns
adc
outsl
cmp
add
cmc
lahf
sub
cmpsl
adc
lock
dec
in
cmc
jle
andl
xor
int3
aad
mov
test
das
out
jl
outsb
fidivrs
pop
test
sbb
mov
xchg
xor
pop
push
mov
xchg
xor
jecxz
and
movsb
mov
test
shrl
cmp
push
jp
addr16
pop
lds
cmpsl
jg
pop
push
pop
pop
push
fcomip
push
shll
adcb
jb
sbb
arpl
scas
cli
ret
repz
adc
pop
lock
in
add
call
test
push
pop
icebp
dec
cmp
push
movsl
repnz
mov
xchg
jge
ljmp
lret
mov
and
sub
mov
pushl
ret
sti
jne
out
into
shrb
xor
popa
out
pop
cmp
scas
push
inc
outsb
sbb
or
pusha
push
inc
xchg
dec
shll
daa
xchg
add
push
xchg
xchg
imul
shr
and
add
fwait
aam
jmp
shl
push
pusha
jne
mov
sbb
and
insl
mov
lret
mov
sub
cmp
ljmp
push
shl
fwait
mov
in
ret
mov
aad
mov
daa
int
adc
sti
sbbb
out
mov
mov
sti
pop
es
call
rol
aad
dec
push
and
sub
dec
pop
loopne
fdivrs
test
or
movsb
sbb
fs
cmp
xor
cmp
imul
dec
fwait
xchg
push
movsb
cmpsb
xor
call
xchg
xchg
lods
mov
and
mov
daa
shrb
inc
clc
dec
and
jp
adc
jne
ja
mov
cwtl
ja
and
inc
dec
imul
lret
adc
pop
xor
add
imul
or
lock
shlb
stos
mov
jp
dec
mov
mov
xor
out
adc
cmp
sbb
mov
andl
pop
test
pop
in
adc
nop
pop
cmp
loop
mov
adc
outsb
cltd
cmc
and
lods
push
mov
or
es
outsl
das
clc
aad
lods
cmc
cld
inc
idivl
cld
popa
rcll
sbb
adc
movsl
xchg
pushf
bound
add
or
in
push
adc
xor
or
jnp
lock
and
jns
movsb
aam
or
xor
mov
lret
mov
cmpsb
mov
add
lock
sahf
inc
sahf
lock
out
je
pop
repz
xor
movups
jns
inc
cmpsb
inc
in
add
loop
movsl
into
cmp
jge
push
push
nop
and
jl
ret
pop
in
jb
pop
or
jno
jae
cwtl
sbb
sbb
jo
stos
arpl
push
and
dec
mov
add
nop
or
and
mov
icebp
cmp
lahf
dec
cmp
push
out
test
push
loop
sub
je
jg
adc
loop
mov
pop
adc
enter
push
push
rclb
jo
inc
push
aaa
cmc
pop
pop
fs
out
call
jmp
fnstsw
sti
stos
lret
pop
xorb
pop
popf
sub
push
ds
lods
ficomps
xor
ds
mov
mov
je
mov
ret
pop
or
jmp
pop
fiadds
fistpll
in
dec
or
in
mov
add
mov
pop
cld
pop
adc
in
loopne
sbb
xor
cmp
out
pop
or
or
jg
repz
xor
sbb
int
and
daa
sbb
dec
lcall
out
insb
xchg
cltd
inc
inc
das
movsl
jns
add
dec
dec
mov
push
xor
mov
out
loopne
xchg
fadd
call
in
mov
mov
xor
ret
out
push
shlb
add
in
lret
xor
js
add
dec
fwait
cmpb
adc
aam
or
pop
rcr
loopne
in
test
push
sti
aad
fisubs
cmp
icebp
test
sub
inc
ja
insl
stos
sarl
push
stos
lock
stc
repnz
cwtl
and
mov
scas
jecxz
out
jae
cli
mov
cwtl
pop
mov
loop
mov
mov
movsl
mov
push
push
roll
enter
in
xor
push
xchg
and
sub
pop
add
dec
test
inc
inc
out
jecxz
pop
adc
loopne
push
lret
aaa
pop
sub
ror
add
xchg
xor
push
cmp
push
mov
rep
fs
mov
lcall
mov
je
xchg
and
stos
jb
jbe
fdivrl
push
mov
inc
push
sub
pop
loope
cmp
mov
pop
test
push
mov
mov
out
xor
test
outsl
inc
cmpsl
inc
adc
xchg
mov
pop
mov
mov
stc
scas
dec
jmp
in
arpl
loop
jbe
mov
mov
ja
icebp
lahf
stos
mov
outsl
sti
xchg
cwtl
xchg
imul
cmp
aaa
mov
sbb
fisubrs
into
mov
iret
sub
push
mov
aaa
andb
mov
pop
ret
mov
cs
test
push
pop
scas
push
push
scas
mov
lds
loope
gs
sbb
imul
mov
add
xor
dec
popa
add
push
das
jmp
inc
mov
pop
add
idivb
notb
mov
stc
iret
mov
les
inc
or
xchg
lock
mov
adc
mov
stos
aad
cmp
test
hlt
jg
sbb
rcrl
cmpsb
loop
sub
adc
sahf
xor
mov
pop
loop
in
xchg
dec
jle
outsl
inc
cmp
jne
jg
adc
jecxz
jg
dec
jns
rorb
pop
call
sti
cmp
out
push
fs
test
adc
cld
add
stos
xchg
aad
or
pop
add
mov
lcall
xor
hlt
pusha
movsb
cli
mov
les
pop
mov
xorl
je
or
scas
cmp
mov
jne
stos
aam
adc
and
fs
or
or
cli
cmp
hlt
adcl
and
or
mov
sub
test
sbb
sbb
dec
add
cli
enter
into
cmp
push
insb
jmp
jmp
sahf
pop
adc
xchg
mov
or
enter
inc
xor
inc
bound
add
cli
bound
push
imul
xchg
insl
icebp
push
daa
mov
inc
sub
mov
std
out
dec
cwtl
cld
daa
outsb
sub
sahf
xor
jecxz
xchg
and
call
stc
xor
in
cmpsb
mov
repz
sbb
sbb
xchg
or
inc
cli
mov
sbb
adc
sbb
rorb
lahf
jno
or
mov
mov
stos
jno
sub
xchg
mov
add
mov
out
push
pop
sbb
mov
sti
shll
or
rorb
imul
or
into
aas
jmp
cmp
scas
shrl
sbb
push
fsub
cmp
jmp
cs
xor
mov
sub
ljmp
pop
jb
hlt
mov
inc
and
imul
push
dec
bound
sbb
jecxz
jae
scas
movsl
add
fldl
fistpl
test
pop
mov
mov
ret
lret
test
lods
dec
mov
stos
fisubs
imul
add
aam
cmc
cmc
inc
das
push
mov
mov
decl
sub
pop
mov
or
sahf
mov
jecxz
repz
popa
mov
jns
and
push
ret
pop
sti
icebp
and
xor
leave
lods
pop
popf
scas
out
jns
push
pop
mov
jl
and
jb
push
and
lods
outsl
insl
adc
pop
scas
add
hlt
imul
pop
lods
aaa
xor
sub
and
sbb
sbb
outsl
cmp
inc
adc
add
aam
mov
jnp
or
xor
cs
out
mov
cltd
xchg
inc
lods
cmp
stos
ja
fcmovnu
nop
data16
push
sti
mov
pop
sub
mov
dec
call
rcrl
aad
adc
push
fnsetpm(287
mov
int
jnp
pop
add
add
pop
xor
in
add
inc
add
inc
pop
adc
and
pop
inc
imull
adc
mov
sub
cmp
xchg
repnz
lcall
call
push
xchg
into
mov
lock
pushf
xor
push
mov
fistps
test
mull
iret
sti
xor
mov
mov
push
iret
and
inc
jge
mov
push
cli
sub
inc
jge
rcrl
les
mov
test
mov
sbb
cmp
pop
push
gs
andb
cmpsl
cli
mov
mov
movsb
repnz
cmpsl
and
lahf
insb
mov
out
and
sbb
push
cli
adc
jae
cmc
pop
pop
mov
mov
out
push
test
mov
out
and
sti
adc
push
mov
pop
call
mov
rorb
add
ror
fdiv
ss
shl
fcompl
enter
outsl
cmpsb
lahf
sub
pushf
out
or
push
ljmp
or
mov
sbb
or
out
adc
sub
adc
mov
add
mov
stc
mov
mov
mov
std
fimull
jo
arpl
icebp
fstps
mov
inc
nop
rorb
pop
pop
icebp
mov
xor
cmp
adc
sub
or
xorb
xchg
pop
mov
dec
mov
mov
mov
adc
scas
sbb
dec
adc
jns
leave
xchg
test
insl
stc
mov
sub
jo
or
popf
sub
shlb
sbb
cmp
jbe
std
add
add
mov
pop
adc
cwtl
pop
lods
push
or
cld
xchg
dec
inc
rcrl
fimuls
jecxz
inc
mov
push
jmp
repz
loopne
lcall
lods
repz
pop
insb
mov
sub
inc
mov
cmc
lods
or
lahf
xchg
in
or
rorb
xor
pop
push
aaa
dec
lret
push
mov
adc
movsl
mov
test
cmc
call
insl
inc
xor
dec
and
adc
mov
jmp
push
push
cmp
jno
es
lds
outsl
and
outsl
nop
imull
lcall
sub
jecxz
test
leave
clc
xor
and
mov
int
inc
insl
xor
lea
push
insb
adc
fildl
sub
cmp
dec
js
test
jecxz
je
or
mov
aaa
pop
jno
or
dec
push
fstpt
movsl
lret
ss
ljmp
mov
or
mov
je
sub
loop
mov
jae
cwtl
scas
fnstenv
mov
imul
es
nop
outsb
shrl
xor
add
bound
and
das
jnp
jne
and
shr
push
repnz
xor
repz
mov
addb
push
or
fwait
sub
ja
and
mov
loopne
push
jbe
aam
outsb
faddl
loopne
sub
repz
mov
sbb
aas
sahf
xchg
repz
push
in
sub
xchg
dec
mov
popa
or
pop
cld
stos
jp
ljmp
adc
mov
and
fwait
ret
orl
dec
fcoms
add
mov
jp
jg
cmp
ja
fsts
mov
pop
loope
idivl
add
cmpps
and
test
hlt
sbb
sub
push
pop
inc
out
pushf
fwait
aaa
repnz
ja
mov
pop
imul
adc
or
mov
push
popf
dec
idivl
cli
sub
mov
fmull
js
lock
scas
popf
push
mov
rclb
dec
arpl
mov
cmpsl
and
add
cmp
in
push
out
dec
jecxz
dec
clc
adc
and
xchg
adc
push
push
fsubrl
pusha
push
or
movsl
mov
xor
dec
lcall
dec
push
sbbb
int
mov
adc
add
orb
dec
cmp
inc
push
jmp
stos
or
fsub
adc
popf
in
push
xor
gs
jecxz
test
sbb
xor
xor
mov
or
and
adc
and
mov
add
dec
es
and
adc
and
mov
or
lahf
jnp
mov
and
aaa
xchg
stos
enter
sub
xor
subb
sub
lahf
cmpsb
sub
push
pop
push
or
test
loope
sbb
ret
repz
ret
fs
je
out
gs
cmp
jb
jge
add
cld
sbb
lahf
aad
inc
ret
outsl
xchg
mov
lock
pusha
sar
pop
add
in
mov
jo
xor
adc
xchg
lret
mov
mov
ljmp
jns
shlb
jecxz
pop
sarb
sahf
test
movsb
imul
dec
aaa
and
push
cmc
stc
or
loopne
aad
and
jno
mov
outsb
int
arpl
mov
add
fmul
cltd
jae
ret
in
xor
mov
push
and
movsb
repz
fisubrl
popa
andb
inc
mov
arpl
push
popa
cwtl
insb
dec
pop
dec
fwait
fs
lahf
pop
fwait
push
out
movsb
xor
cltd
int
test
js
pop
ret
jge
cltd
imul
add
mov
stc
and
sub
imul
push
negb
sbb
subl
xor
scas
mov
pop
jb
pop
sbb
xlat
push
js
xchg
jb
stos
aaa
sbb
outsb
dec
je
dec
sbb
scas
popl
aaa
bnd
es
outsb
scas
ficoml
repz
dec
mov
mov
stc
clc
xchg
and
scas
fstps
gs
movsb
jbe
sbb
shrb
rcrl
inc
mov
sub
pop
cmp
xchg
dec
cmp
stos
xor
xor
movsl
sbb
adc
aas
mov
icebp
dec
outsb
xor
lcall
ja
xchg
cwtl
jbe
lcall
adc
daa
mov
dec
fwait
pop
sub
xchg
dec
outsb
xchg
out
mov
mov
push
pop
movsb
cltd
or
lods
pop
jg
xor
lods
dec
add
xor
clc
scas
push
xlat
jb
sbb
mov
enter
addb
jmp
js,pn
clc
xor
xorl
or
jnp
adc
pop
fs
les
fwait
das
aam
and
xchg
rcr
jb
mov
cmp
and
inc
dec
test
adc
cli
and
sti
sbb
dec
adc
push
add
stos
dec
ljmp
jns
sub
rclb
lock
mov
mov
and
pop
sbb
stos
xchg
in
adc
fs
repz
mov
outsb
cmp
sbb
leave
outsl
movsb
les
add
test
inc
add
stos
pushf
pop
int3
mov
xor
pop
loop
fimull
dec
mov
shr
repz
shll
cli
inc
pop
lahf
inc
lcall
stos
mov
or
cmpsl
xor
inc
mov
aaa
rol
fstpt
cmpsb
fisttpll
je
dec
pop
push
jae
push
or
fstps
xor
inc
xchg
inc
xor
adc
mov
in
flds
test
mov
sarl
aaa
lahf
adc
push
jmp
inc
fldt
cmp
cltd
mov
repz
clc
lock
pop
or
leave
add
addr16
outsb
fidivrl
fimuls
push
imul
inc
push
cmp
aas
mov
mov
dec
int
fistpll
outsb
arpl
enter
into
cmp
insb
dec
ljmp
inc
rcrb
mov
mov
enter
nop
push
cltd
sub
or
cmpsb
push
aas
out
loopne
mov
rorl
push
arpl
je
mov
push
daa
lahf
cmp
in
inc
aad
jmp
fwait
dec
jnp
xchg
inc
insb
lods
testb
dec
xor
push
mov
ds
sti
mov
or
and
nop
push
lods
mov
rcr
or
or
fbstp
cmp
jb
mov
pop
xchg
dec
sahf
pop
dec
out
jecxz
dec
adc
das
mov
in
data16
jge
fst
ja
pop
xlat
xor
dec
jnp
cmp
insb
notb
pushf
ds
leave
fs
or
and
xor
mov
stc
push
jmp
out
sbb
mov
xchg
lea
loop
mov
xchg
lret
aad
stc
sbbb
dec
push
dec
sub
mov
pop
dec
xor
int
push
sub
mov
icebp
rcll
ret
popl
xchg
pushl
jne
push
jo
test
dec
js
cli
pop
dec
dec
insl
jo
xchg
inc
mov
andl
and
add
mov
or
iret
ljmp
call
jge
mov
fcom
sub
cwtl
adc
mov
iret
push
mov
xchg
mov
adc
adc
xchg
daa
insb
jle
jp
adc
add
aad
jp
iret
shll
jmp
add
dec
and
fwait
mov
rcrb
inc
mov
xchg
xchg
mov
lods
xchg
or
mov
pop
stos
testl
stc
rcr
pushf
aad
movsl
rcll
push
sub
mov
mov
xchg
jmp
cmpsl
sub
lret
movsb
pop
and
js
cmp
jns
cltd
ds
sub
xchg
out
jmp
jl
fdivs
inc
lods
int3
push
adc
pop
sub
cmp
and
pop
nop
jae
stos
ficoml
lcall
push
fucom
xor
out
xchg
push
hlt
xchg
pop
mov
loope
in
fistpll
xchg
pop
jge
sbb
mov
mov
fdivl
mov
and
jmp
pop
sub
push
and
jb
clc
mov
sahf
dec
sbb
sub
mov
xchg
pushf
sbb
cmpsl
subb
and
sub
sub
mov
jns
fprem
stos
mov
jmp
out
push
sub
pop
shrb
bound
lods
cmpsb
fldenv
lea
xor
arpl
je
adc
dec
jmp
jmp
ret
imul
sbbl
js
icebp
outsl
fldt
xor
push
jg
add
xor
add
xor
inc
js
aad
rcll
push
mov
cmpsb
or
int
popa
add
cltd
dec
repz
jne
mov
int
add
cmp
aam
jbe
cld
aaa
outsb
push
dec
and
shll
addr16
stos
cmpl
or
dec
and
xor
jp
dec
cmp
mov
js
stos
inc
and
fdivrl
loop
push
clc
mov
in
test
add
add
lahf
loopw
movsl
inc
pop
std
and
repnz
inc
lds
push
cmp
inc
dec
popf
ret
lahf
sub
lret
xorl
and
fdiv
cltd
add
cmc
push
mov
cmp
sbbb
dec
sub
lock
xor
pop
sub
cmp
cmpsb
jnp
cmc
jmp
push
pop
iret
inc
xor
je
inc
ljmp
pop
pop
push
or
loop
xor
push
mov
sbb
andb
rclb
xor
xor
xor
pop
inc
mov
sahf
xor
push
and
ror
bound
pop
leave
pop
insb
xor
pop
lea
cmc
jne
cmp
dec
leave
je
jle
sarb
lcall
fwait
cmpsb
inc
and
mov
mov
inc
pop
addl
cmp
scas
imul
movsl
push
fwait
aas
dec
imul
xor
adc
adc
repnz
pop
out
push
cmp
lret
cli
pop
or
out
mov
std
jmp
leave
mov
je
xchg
push
fldcw
imul
mov
stc
mov
and
data16
aam
fistl
dec
sbb
in
add
sbb
fiadds
mov
xor
outsb
add
and
stos
adc
loope
xchg
scas
xor
xor
fidivs
inc
hlt
xchg
jno
hlt
loop
psadbw
sarl
into
dec
sbb
or
insl
call
int3
xor
jo
fwait
push
add
pop
adc
sub
rolb
jae
rolb
mov
mov
daa
sahf
pop
cltd
das
lcall
scas
jp
xchg
out
xor
mov
mov
sub
xchg
dec
das
pushf
data16
sbb
mov
popf
jge
js
dec
mov
pop
or
or
push
test
push
push
xchg
jbe
jge
mov
lods
mov
in
sub
dec
scas
sub
movb
xlat
rcll
stos
fists
add
xor
pushf
inc
andl
jmp
in
aad
add
inc
ss
or
inc
enter
out
adcb
xchg
rolb
xchg
dec
sub
scas
movsl
xor
dec
adc
cmpsb
dec
dec
dec
into
mov
xor
add
out
mov
add
hlt
fstpt
dec
pop
add
jl
xor
in
cmpsl
aaa
push
lds
sub
clc
stos
sub
cs
xor
inc
arpl
jg
pop
cmp
iret
dec
inc
movsl
pop
pop
xorb
xor
repnz
cmpsb
icebp
in
iret
test
cltd
cs
dec
mov
cmp
lods
cmpsl
popf
shrl
data16
jmp
cmp
pop
fadds
push
in
jno
dec
cmp
pop
adcb
mov
int
mov
daa
cmp
aas
negl
fldcw
rorl
mov
jp
cmp
and
push
sbb
sbb
push
mov
sbb
lret
test
mov
sub
in
xorl
cs
insb
mov
inc
or
fists
hlt
adc
inc
lret
inc
inc
mov
and
mov
xchg
xchg
xchg
push
mov
ret
out
cmp
push
mov
add
jge
mov
jge
sbb
inc
fisubrl
in
jle
or
and
test
stos
jno
insb
push
inc
lds
ret
dec
jg
dec
into
popa
enter
into
xchg
data16
lock
test
or
mov
mov
pop
repz
lcall
into
flds
rcrl
xlat
inc
mov
ss
xchg
mov
sbb
sub
jne
nop
xchg
xchg
xchg
ficomps
or
jae
cltd
js
jmp
insl
ret
pop
mov
ss
popf
add
scas
xor
and
and
andb
xchg
and
xorb
js
cli
pop
sub
push
jno
xlat
mov
xchg
ljmp
xor
push
jle
out
imul
out
xor
mov
pop
repz
sahf
movsb
inc
inc
add
popa
in
movsl
nop
adc
add
or
xchg
add
idivl
cmpsb
js
mov
inc
dec
por
inc
dec
and
pusha
push
mov
sub
cmpb
mov
ffreep
add
dec
fildll
sbb
in
and
out
in
dec
insb
jge
mov
mov
imul
push
aaa
inc
stos
ljmp
sarl
orps
mov
fldenv
push
je
into
sbb
mov
bound
xlat
push
vmread
inc
sub
xor
ljmp
mov
xchg
jnp
aaa
clc
xor
ss
mov
xor
add
stos
sub
popf
pop
lret
ss
push
adc
mov
lret
xchg
mov
pop
and
out
popf
jnp
fsqrt
rclb
stos
inc
pop
mov
jge
sbb
lret
out
jae
mov
xchg
icebp
aaa
mov
jb
clc
inc
ljmp
pop
ret
ret
scas
nop
mov
mov
sbb
jg
or
xor
sti
out
jne
inc
add
jne
aad
jnp
jp
push
mov
ret
mov
inc
lods
mov
out
and
loop
and
popf
inc
or
xchg
fldl
cs
loopne
mov
mov
xor
sub
imul
lds
mov
push
xchg
in
popa
jg
sub
inc
add
inc
and
xchg
jae
mov
negl
frstor
das
in
sub
xchg
mov
ja
adc
ret
int
jl
mov
daa
out
push
jecxz
mov
icebp
add
jge
or
cmp
push
push
repz
pop
sbb
push
dec
jge
cmp
mov
fsubrs
mov
cmp
fsubs
cmp
push
mov
dec
dec
adc
popa
lock
fsts
lret
sub
jne
add
sbb
mov
mov
pop
dec
add
jnp
mov
lahf
loop
mov
gs
push
sub
sbb
in
mov
pop
test
orl
push
pop
divl
ret
mov
rorb
outsl
shl
ret
hlt
xchg
data16
xchg
je
sub
xor
mov
xor
icebp
xlat
call
and
cmovbe
push
subb
out
je
mov
add
decl
or
mov
pop
fwait
leave
sub
push
ja
push
dec
sbb
adc
es
mov
ret
lea
pop
push
out
loopne
enter
ljmp
and
test
jno
jo
mov
jbe
xchg
lahf
xchg
fwait
repnz
movsb
pop
push
aas
mov
and
sbb
and
in
cltd
mov
and
pusha
add
push
dec
adc
cmp
ds
iret
sub
sbb
out
outsl
sahf
and
fisubrl
mov
int3
dec
mov
stos
movsb
or
jne
dec
movsl
jnp
dec
xchg
xor
sbb
cmp
daa
ds
mov
mov
outsb
mov
arpl
xchg
sbbb
xor
subb
punpckhdq
test
das
lcall
xor
imul
pushf
lods
clc
lock
or
mov
jle
sbb
clc
lods
inc
mov
fsubrs
in
or
xchg
push
jge
ret
or
in
push
jbe
int3
sbb
cltd
imul
call
dec
sbb
cmpl
arpl
push
inc
xor
rcrb
adc
ficoml
xchg
mov
hlt
aad
es
imul
jns
pop
stos
inc
enter
subb
out
ds
pop
pop
pop
nop
mov
push
lcall
lea
mov
imull
xchg
mov
inc
insl
mov
sbb
loop
daa
xchg
sbb
js
mov
pop
pop
inc
lahf
pop
pop
data16
add
loope
shlb
loopne
xchg
mov
and
lahf
inc
lret
out
outsl
iret
sub
stos
testb
ret
mov
inc
cmp
or
int3
pop
fwait
loope
fcoml
mov
push
fstl
lea
pop
pop
fwait
inc
test
imul
pop
loop
xor
inc
cwtl
ljmp
xchg
test
pop
dec
jo
inc
adc
lds
dec
ret
jo
sarl
inc
scas
repz
mov
pop
dec
and
xchg
pop
add
ss
cmp
mov
jmp
mov
xorb
dec
sahf
out
ss
jge
xor
addl
movsb
adc
sbb
shlb
push
insb
mov
imul
divl
sbb
lds
andb
test
dec
in
pusha
out
mov
outsl
cmpsl
dec
push
rorl
jl
mov
ficompl
xchg
lock
addr16
adc
jecxz
push
dec
mov
fisubs
mov
dec
sbbl
fcomi
pop
push
cmpsb
pusha
or
inc
mov
gs
add
cmpsb
jg
mov
add
lock
outsb
xorb
or
mov
and
sub
fldenv
scas
inc
pop
cld
bound
stos
test
xor
sbb
and
sub
shlb
mov
mov
rolb
or
ljmp
xlat
pushf
jbe
jp
cmp
insb
movsb
xchg
mov
mov
aas
sbbb
push
mov
or
fwait
into
outsb
cmp
aad
rcll
pop
filds
pop
outsb
xchg
stc
mov
add
call
dec
adc
adc
sbb
pop
das
stos
lods
pop
imul
dec
and
inc
stos
mov
jmp
lock
inc
daa
jl
sarl
scas
ss
stos
inc
push
leave
add
std
test
or
inc
divb
insb
or
xchg
imul
ffreep
xor
pusha
mov
rol
sti
jae
mov
rorb
cmpsb
stc
lahf
inc
add
or
add
adc
and
sbb
add
mov
orb
add
mov
mov
add
sub
mov
addr16
and
xlat
push
lods
out
or
shrl
mov
stc
cmp
xchg
adc
shll
mov
cmpsb
daa
push
je
aas
push
pop
mov
jae
lea
jge
dec
jne
sbb
push
adcb
cmpsl
psubq
rorb
push
fsts
test
add
mov
jbe
insl
popa
xchg
xor
test
push
repnz
outsb
inc
arpl
cli
aam
push
jecxz
or
cmp
int
ss
sbb
or
lock
xor
ja
xlat
aam
test
cmp
lds
jae
movsb
pop
movntps
adc
inc
mov
xor
jle
scas
repz
push
lock
sub
mov
sub
mov
movsl
add
stc
call
and
out
fldln2
repnz
push
push
or
fsubrl
lds
cmp
jns
push
out
insb
icebp
fstl
xor
cmc
movsl
add
push
dec
xor
fstps
xor
xchg
add
std
cwtl
repnz
adc
sbb
sbb
xchg
mov
push
fwait
push
out
jns
jle
or
mov
xor
into
jge
mov
inc
call
and
mov
adc
push
fwait
push
dec
call
push
xlat
lea
cli
adc
jecxz
in
push
mov
imul
jo
aaa
aad
and
fists
xlat
jae
sbb
sub
jle
jg
fistpll
sbb
push
icebp
cwtl
xor
jg
outsb
sbb
inc
dec
mov
cld
and
enter
int3
or
ret
shrb
icebp
push
add
ror
xor
call
aaa
sbb
jg
jb
xchg
clc
xor
sub
aam
mov
mov
sub
clc
orl
fnstenv
dec
rclb
adc
jo
sbb
sub
xchg
ljmp
int
loop
push
nop
pushf
jg
sbb
fcompl
das
or
movsl
xchg
adc
pop
add
ret
pop
inc
ret
and
out
test
mov
fcoms
mov
cmpsb
jns
push
cmp
enter
sbbb
dec
fsts
mov
mov
sbb
dec
or
pop
and
mov
push
mov
sbb
mov
int
push
adc
dec
jae
test
mov
fs
loope
cmc
add
int
sti
jno
lret
in
push
shll
or
inc
pushf
jbe
sbb
in
push
adc
inc
jnp
or
mov
icebp
rclb
mov
push
scas
xor
test
stos
ret
lods
or
inc
push
inc
ret
std
push
outsb
call
lret
mov
push
adc
ret
movsb
cmp
sub
outsl
cld
ss
or
mov
dec
pop
xor
lock
repnz
push
or
and
xchg
dec
mov
sahf
xor
adc
xor
mov
cmpsl
jnp
fildll
mov
push
mov
mov
test
repnz
stos
aaa
xor
adc
xchg
push
je
insb
sbb
xchg
rol
or
jecxz
test
jnp
shll
xchg
enter
xorl
in
shll
xchg
aas
dec
mov
call
lret
pop
mov
mov
jnp
push
orb
jns
jecxz
push
pushf
inc
stc
pushl
mov
icebp
sbb
dec
dec
dec
lahf
push
add
ficoms
in
push
push
loop
pushf
call
jmp
adc
stos
fwait
push
shrl
loope
jns
cmp
dec
clc
push
push
jns
clc
les
ds
xchg
imul
xor
ljmp
pushl
mov
negb
fisttps
nop
pop
xchg
sbb
xor
insb
inc
loopne
push
dec
inc
rcr
or
push
dec
xchg
or
mov
add
xor
call
xchg
stos
mov
enter
cltd
inc
jmp
or
xor
je
add
pop
fs
inc
insb
rol
sub
or
sub
cmp
lret
invd
jmp
xor
xor
lcall
xor
pop
movsl
jbe
ds
insb
stos
lods
lret
icebp
ror
shlb
pop
cwtl
outsb
movsb
fisttps
mov
scas
mov
divl
das
dec
es
insb
stos
aas
or
lods
dec
pop
cli
in
enter
sahf
rcr
bound
push
sahf
add
mov
inc
add
xchg
outsb
push
mov
mov
pop
pop
ret
or
xor
xchg
xchg
repz
addr16
aam
jns
and
call
xor
pushf
les
js
inc
inc
and
shll
xlat
in
xchg
nop
xor
popa
dec
dec
jo
push
outsb
ja
es
mov
sbb
cwtl
ret
pusha
cmp
cltd
cwtl
adc
sub
xchg
push
mov
sahf
pusha
into
fdivr
filds
sbb
push
mov
cmp
sbb
pop
push
aam
in
push
or
movsb
xor
repnz
addl
push
jmp
sub
fistpl
mov
fstpl
cmp
in
push
adc
xchg
jnp
hlt
mov
and
mov
push
sub
mov
add
ret
subl
mov
lock
pop
je
imul
and
lock
xchg
in
andb
movsl
ret
add
data16
xor
push
cmp
roll
inc
dec
cld
xchg
ja
xchg
sbb
inc
cli
xchg
pop
inc
mov
jecxz
lods
mov
mov
cmpb
mov
in
fdivrl
mov
and
push
inc
mov
pop
pop
data16
ret
std
inc
fldcw
and
and
popa
imul
or
and
push
divl
fidivs
mov
push
cmp
jecxz
xorb
aas
popa
cmp
insb
jb
fisubrs
and
fsub
and
xchg
sbb
into
dec
repnz
push
in
fwait
xchg
icebp
add
out
add
xor
outsl
dec
ljmp
and
push
xchg
mov
pop
sti
cmpsb
add
add
insl
sub
adc
mov
pop
dec
leave
out
cmpsb
mov
ljmp
jns
bound
push
push
cmp
sub
lods
fists
and
cmp
dec
jno
mov
push
dec
icebp
xor
push
fs
mov
in
out
xchg
dec
in
fbstp
or
neg
jbe
lret
outsb
ja
negl
mov
sbb
outsb
stos
sbb
cs
test
adc
inc
fsubp
mov
clc
pop
inc
sbb
leave
dec
dec
iret
sub
pop
sub
clc
out
mov
fs
cmp
cltd
push
sbb
mov
sarl
pop
mov
push
fisttpl
inc
lret
mov
lcall
pop
sbb
inc
push
int
push
pop
or
xchg
shrb
das
lods
adc
test
mov
cwtl
xchg
das
xor
shrl
insb
jecxz
test
dec
push
into
movsb
xor
je
push
add
cltd
adc
mov
xchg
add
mov
addb
mov
pop
jmp
in
adc
clc
scas
mov
out
daa
add
sbb
or
pushf
or
add
inc
jg
jle
test
out
push
ds
dec
fists
inc
xor
sub
add
fsubrp
pop
pop
clc
mov
testl
movsl
notl
mov
sahf
mov
les
in
mov
inc
es
aaa
mov
pop
mov
sbb
inc
and
lcall
mov
fisttpll
sbb
rorl
popa
or
push
loope
mov
rorl
in
test
pop
lea
aam
inc
mov
test
mov
dec
fsubrl
mov
inc
mov
sti
cs
adc
sub
push
inc
mov
lods
stc
xchg
call
aam
push
jge
mov
xor
mov
outsl
mov
cmp
test
ret
mov
mov
inc
in
mov
sub
pop
mov
sti
dec
adc
push
subb
outsl
mov
cmpsb
in
fucomi
inc
mov
mov
mov
dec
push
pop
fsubs
jecxz
out
aad
push
pop
int
mov
cli
shlb
add
jns
je
cltd
and
lock
mov
ja
imul
mov
cmp
cmp
or
push
mov
enter
mov
mov
add
jnp
inc
in
icebp
mov
mov
fadds
cld
enter
mov
or
dec
gs
or
sub
xor
mov
addb
add
stc
cmpsl
push
stc
mov
mov
lea
insl
ffree
mov
xchg
inc
lds
cmp
in
or
fistpl
mov
adc
aas
xor
fldcw
xchg
add
dec
and
mov
xor
mov
shlb
nop
pop
es
movsl
mov
sbb
xchg
lock
push
add
adc
jb
dec
add
test
into
lds
mov
and
or
dec
repnz
pop
cmp
dec
add
dec
data16
lcall
pushl
sub
cmp
xor
adc
faddp
dec
in
mov
mov
jmp
xlat
ficoms
outsl
shrb
sub
pusha
xchg
jp
mov
add
outsl
and
call
mov
repz
adc
sub
inc
imul
ljmp
push
jno
sahf
ja
xor
inc
imull
pop
adc
fwait
jns
rcrb
lret
lods
pop
sub
enter
add
sub
mov
add
dec
cld
push
dec
mov
and
pusha
jg
inc
imul
daa
push
fnsave
outsl
dec
push
insb
imul
sbb
lret
mov
mov
cwtl
sbb
sbb
movsl
jne
fwait
pusha
inc
sub
nop
hlt
jb
and
jge
cmp
cli
pop
push
addr16
mov
rorl
jns
and
shrb
mov
xor
das
in
jle
pop
mov
popa
lret
jg
icebp
sar
adc
sti
or
mov
js
scas
shlb
test
movsl
int
ret
fistps
fwait
add
mov
sahf
dec
sahf
jbe
lea
cmpsb
fsubrs
test
mov
lret
pop
mov
mov
jbe
sbb
sub
xchg
adc
fwait
aad
fdivrl
push
lds
imulb
roll
add
xlat
sbb
jmp
pop
ja
loopne
outsb
movsl
out
fstpt
fsubrl
inc
add
sub
fs
cmp
push
je
adc
cwtl
cmp
inc
lods
or
iret
fwait
popa
sahf
outsl
push
push
lods
sbb
cmpsl
icebp
in
in
jg
inc
lock
into
pop
mov
call
pop
sbb
dec
mov
mov
loop
arpl
jnp
push
repz
push
jmp
mov
jb
into
shrb
adc
and
pop
seta
aas
mov
inc
xchg
shll
fsubrl
sbb
leave
sti
inc
cmp
int3
and
rcl
sbb
adc
jl
mov
push
sbb
xor
sbb
rolb
fbstp
clc
fwait
jne
daa
jne
or
mov
xchg
cmpsl
or
test
mov
ror
insl
jecxz
rcr
cmpsl
clc
mov
push
das
mov
js
jns
adc
adc
cmp
mov
adc
jae
std
mov
dec
cmc
pop
push
inc
or
into
icebp
cs
ret
mov
inc
jo
in
loope
aam
ret
fiadds
stc
sub
fdivrl
or
scas
sti
sahf
jo
xchg
inc
mov
dec
call
in
jp
xor
lea
and
pop
sti
idivl
mov
ljmp
lea
sahf
into
data16
push
xor
jp
xchg
jp
xor
add
dec
daa
mov
lds
inc
in
mov
faddl
sahf
or
fcmovne
scas
aas
and
xchg
cmp
and
add
sbb
or
call
jecxz
ret
popa
fisttpll
push
sbb
pop
sub
bound
lcall
or
xchg
mov
dec
push
fnstenv
add
test
cmpsb
pop
pop
push
icebp
adc
cltd
xor
fsubp
cmpsl
xchg
push
hlt
cmpsl
fucomi
dec
dec
sahf
fnsave
adc
imul
xor
sbb
je
fisttps
sub
and
mov
mov
mov
mov
iret
sbb
cmp
hlt
push
imul
pusha
lds
adc
push
fwait
cwtl
adc
or
iret
movsl
out
into
mov
mov
in
lods
lret
xlat
outsb
not
leave
add
inc
fs
pop
push
fcompp
xlat
int
cmp
xchg
adc
push
and
leave
push
jge
pop
les
pop
add
sub
mov
push
mov
mov
and
js
les
push
sbb
dec
outsl
pop
popa
mov
dec
popa
jle
and
pop
mov
loopne
jp
lea
push
pop
xlat
mov
icebp
inc
dec
std
sub
rorl
push
xor
out
push
leave
stos
cmp
clc
pop
xor
testb
or
jnp
test
xor
dec
inc
pop
notb
adc
push
ret
cli
icebp
xchg
cmc
das
mov
aas
sub
push
mov
mov
pop
xor
mov
pushf
stc
je
inc
dec
mov
pmulhuw
cmpsl
mov
mov
jecxz
out
js
movsb
stos
daa
aad
inc
mov
mov
movsb
cld
push
iret
icebp
sbb
sti
xchg
movsb
sub
or
push
push
push
mov
fidivrs
fsts
leave
lahf
iret
mov
xchg
cmpsb
jo
adc
repz
sub
mov
xor
push
sbb
pop
cmp
dec
or
hlt
out
mov
mov
sbb
fdivrs
test
or
pop
dec
pushf
cmp
mov
loop
loopne
test
inc
sahf
sbb
push
daa
mov
out
into
outsb
scas
sbb
lret
ret
dec
mov
push
ds
fbstp
cli
jmp
mov
out
shlb
push
sahf
movsl
stc
push
fstpt
popa
sub
sahf
push
push
mov
inc
xchg
mov
cmpb
lods
jae
les
ss
or
loopew
sbb
inc
imul
mov
mov
push
push
test
xor
xor
jl
sbb
lock
jecxz
fcos
cli
sbb
mov
and
das
push
in
or
push
dec
inc
xchg
faddl
dec
mov
lods
push
rcll
shll
out
add
pusha
test
out
les
adc
and
ja
cmc
adc
test
out
xlat
ljmp
sub
jl
and
mov
mov
or
push
sub
aam
add
mov
movsb
pusha
lds
aas
pop
loope
mov
ret
and
sbb
fadds
not
dec
jmp
dec
cmpsb
mov
rol
pop
adc
jg
stos
push
pop
mov
push
inc
lcall
adc
gs
sub
pop
outsb
psrlq
pop
adc
fwait
cmpsb
fisubrs
fildl
add
push
lea
movsb
jb
gs
jge
and
pop
in
fs
cltd
scas
scas
jb
out
jmp
fsubs
pop
out
insb
fildl
xchg
dec
mov
or
fstps
lcall
stc
cmp
cmc
sbb
movsl
mov
and
jnp
xor
and
fwait
mov
push
mov
pop
inc
lds
imul
shlb
lods
jae
lret
imul
cltd
in
jmp
jne
mov
fdivrs
sub
adc
pushf
repz
jns
xorl
sahf
std
movsl
sahf
mov
addb
test
inc
dec
mov
inc
pop
dec
aam
repz
pop
push
ret
mov
jecxz
and
adc
pusha
inc
into
xchg
dec
mov
sub
sub
and
push
push
out
insb
xchg
loopne
test
xchg
out
mov
adc
mov
out
sbb
jg
push
insl
cld
or
lds
into
lock
rorl
call
jl
mov
sarb
jle
mov
movsb
inc
fidivrl
add
scas
jg
sbb
xchg
lock
push
pop
mov
jmp
push
rorb
xchg
test
pop
repnz
push
sti
js
inc
mov
jbe
jp
mov
pop
xor
push
adc
out
jnp
repz
aam
stos
inc
jle
test
adc
push
pop
sub
sbb
ficoms
testb
frstor
jno
adc
cmpsl
cwtl
dec
jae,pn
jmp
mov
jle
sub
in
shll
push
je
mov
in
outsl
sub
xor
stos
lret
inc
test
lea
idivl
sub
aad
scas
int3
jge
xchg
mov
jb
call
js
cmp
mov
push
push
outsl
pop
imul
movsl
rol
cmp
push
xchg
cs
pop
cld
push
popa
adc
test
bound
ret
jmp
and
mov
and
and
cmp
sbb
ja
mov
fisttpl
fs
movsl
mov
stc
xor
hlt
fnstsw
es
cmc
cwtl
pushf
inc
sub
mov
es
sti
mov
pop
jno
dec
or
nop
loop
lret
sahf
pusha
sub
ja
aas
xchg
xchg
cmpsb
jle
hlt
pop
outsb
repz
cmp
mov
or
add
aad
dec
xchg
pusha
in
ret
test
test
or
fwait
divb
adc
rolb
mov
push
pop
nop
fnstsw
sahf
mov
mov
mov
andb
hlt
inc
out
jnp
mov
sahf
scas
xchg
fxtract
int
mov
xchg
scas
sarb
pop
jno
pushf
bound
push
inc
or
outsl
xchg
clc
inc
out
pop
add
cmpb
push
int3
mov
outsb
mov
push
pop
mov
push
mov
sub
pusha
cmpsb
cmpl
ror
sbb
fisubs
jp
aad
sbb
cwtl
sub
xchg
aas
sti
icebp
jg
sbb
fsubrp
push
lahf
cmp
lods
inc
xchg
into
shll
mov
mov
sahf
lea
push
pusha
xchg
mov
insl
mov
leave
fidivl
jnp,pt
push
mov
in
push
sbbb
loop
ret
add
adc
out
or
sub
dec
or
scas
mov
or
jecxz
cmp
push
push
aad
ss
hlt
push
push
movw
add
cwtl
pop
xor
test
adc
ja
mov
decl
nop
jl
in
sub
out
mov
arpl
and
fiaddl
movsb
pushl
inc
bnd
nop
xor
inc
xorb
mov
sbb
sbb
in
sahf
scas
add
int
pop
outsb
xchg
decl
std
ds
jecxz
mov
dec
movsb
pop
fprem1
adc
sub
in
loop
sti
mov
out
out
lds
fs
es
xor
arpl
jg
mov
mov
imull
dec
insl
pop
sbb
les
aad
rclb
out
je
lock
push
shufps
popa
and
lea
dec
ret
push
pop
inc
jge
pop
mov
ljmp
add
add
mov
loop
test
imul
or
out
mov
sbb
test
dec
add
pusha
jge
push
in
adc
ljmp
adc
cli
ror
mov
pop
xor
ret
faddl
or
notl
sub
adc
jp
push
adc
shr
push
or
dec
cmp
push
repnz
outsb
mull
sahf
mov
stos
jb
scas
lock
sbb
rcrb
movsb
je
js
jg
mov
inc
gs
insb
movsl
mov
lods
push
fs
movsl
mov
mov
and
adc
mov
loopne
mov
xlat
mov
out
jge
inc
fmul
mov
and
add
adc
inc
xchg
test
mov
jg
xchg
jmp
hlt
cmp
int3
inc
sub
fistpl
or
jbe
adc
pop
jns
xor
sbb
test
sti
stos
add
ret
idiv
sbb
mov
clc
mov
ljmp
hlt
pop
and
pushf
shll
push
jne
cmp
xchg
mov
add
lahf
pop
loop
mov
and
stos
test
mov
or
lret
call
mov
dec
mov
mov
scas
or
mov
out
jo
sub
loopne
mov
push
mov
mov
pop
js
pop
mov
iret
jae
mov
ja
test
addr16
and
int3
movsb
fs
pop
inc
lds
scas
out
add
frstor
pop
fdecstp
ret
push
aad
mov
add
jecxz
outsl
icebp
je
cmp
xchg
gs
cmp
insl
xor
mov
push
inc
pop
test
jl
movsl
jge
cmp
repnz
xor
jmp
mov
js
and
mov
add
mov
leave
mov
add
push
xorb
call
cmp
fldenv
les
jmp
enter
divb
and
test
les
mov
shlb
out
jnp
mov
rol
rcll
cld
inc
inc
adc
xchg
xchg
outsb
add
in
or
mov
push
cli
insl
mov
xor
into
cmp
mov
fcmovnu
mov
cmpsl
js
inc
aaa
pop
mov
test
outsl
mov
lahf
dec
scas
push
in
pop
into
xor
xchg
mov
adc
mov
gs
frstor
and
cmp
sub
push
jg
mov
xor
jg
mov
pop
mov
andps
lock
sub
jg
mov
cmpsl
int3
das
mov
mov
xchg
mov
scas
bound
popf
cwtl
mulb
add
into
sbb
sbb
sub
pop
movsl
or
shll
rolb
jnp
je
xor
daa
cld
icebp
shrl
loope
cmpsb
in
sti
test
pop
bound
jno
cmp
mov
fcompp
lea
mov
arpl
push
push
jbe
mov
or
lret
jo
aaa
jne
cli
inc
xchg
incb
dec
push
sub
fistpll
movsl
mov
aad
bound
popf
pop
std
push
cmpsb
cli
das
push
pop
ret
test
hlt
sub
jns
shll
aaa
jo
jge
inc
jge
js
dec
xor
in
dec
ljmp
lcall
mov
fs
jae
aam
pushf
cmp
adc
cld
inc
inc
mov
data16
mov
popa
ss
adc
inc
int3
aas
addb
push
push
data16
insl
pop
call
bound
and
loop
jg
xchg
mov
add
mov
add
insb
lods
cmc
in
dec
mov
add
fwait
cmp
sub
nop
cs
insb
int3
mov
add
fstpl
push
dec
lods
push
add
mov
xor
push
inc
adc
popa
or
mov
add
pusha
cli
jg
outsl
std
aam
shll
cmp
repz
push
ds
icebp
lret
add
push
xchg
enter
adc
pop
int
xor
mov
andl
imul
push
aam
xor
xchg
adc
mov
or
imul
mov
lret
repnz
inc
sbb
fs
loope
inc
out
imul
jae
filds
mov
lret
fucom
cmp
pop
and
mov
dec
xor
adc
insb
mov
shll
push
xor
xchg
xchg
pop
mov
dec
and
sub
sub
mov
pop
outsb
mov
jno,pn
ffreep
lods
xor
inc
jne
lret
out
and
cs
mov
push
insl
pop
in
mov
mov
pusha
gs
xor
xchg
cs
rcrb
xchg
insb
in
mov
jecxz
xor
mov
std
lahf
mov
jmp
xchg
and
mov
pop
arpl
dec
les
lret
aaa
fucomip
push
inc
push
shll
jge
adc
lahf
mov
aaa
test
push
or
aam
mov
pop
insb
xchg
jmp
jl
xchg
aaa
mov
or
lea
sti
in
xor
pop
mov
adc
mov
loope
repz
lods
filds
in
out
sub
lahf
jo
lds
mov
mov
orb
cmp
fnsave
or
mov
mov
push
cwtl
movsl
ss
jnp
mov
mov
push
sbb
std
pop
aam
sub
mov
jmp
xchg
cmc
sbb
add
mov
pop
sub
jmp
and
js
cmpsl
mov
xchg
jnp
mov
adc
mov
cmp
push
sahf
pop
js
outsb
add
sbb
dec
inc
pushf
fldl
gs
jae
rep
mov
out
out
ss
popf
fsubrs
sbb
and
push
mov
inc
cld
shll
cmp
pop
sub
mov
scas
fidivrl
mov
pop
or
loope
lods
pop
mov
mov
or
int
into
or
lahf
mov
push
mov
and
sbb
cmp
pop
cmp
add
push
aas
xlat
jl
fldl
sbb
outsb
cmp
bound
mov
adc
inc
mov
in
in
xchg
and
xchg
ret
jecxz
pop
xchg
pop
sti
fs
lahf
xlat
outsl
jp
cmpsb
out
fadds
and
or
int
mulb
stos
sub
jmp
insl
cmp
pop
es
stos
mov
rsm
sub
xchg
mov
mov
and
xchg
mov
lds
mov
xchg
mov
scas
xchg
adc
notb
xor
inc
or
adc
roll
es
xor
shrb
push
push
push
popf
xchg
aaa
repz
mov
jge
cmp
mov
or
adc
mov
mov
or
int3
mov
in
mov
imul
cmp
aad
pusha
ss
das
shr
push
add
or
mov
mov
test
xchg
ja
jmp
ja
jnp
xor
mov
mov
sub
push
cltd
and
lcall
int3
loopne
scas
push
adcb
pusha
insb
lret
out
shlb
nop
cmp
mov
add
pop
fdivrs
sub
add
test
cld
xor
jl
test
add
icebp
lahf
cmc
fdivrl
jnp
sbb
add
in
fiadds
lea
xchg
or
fldl2t
jp
out
neg
adc
test
push
mov
dec
es
jb
stos
jbe
add
mov
clc
test
jp
mov
cmp
jns
dec
jecxz
cmp
fisttpl
xor
mov
and
mov
jl
push
cs
sbb
xchg
adc
ss
ret
mov
sub
mov
xor
pop
sahf
incl
xchg
jg
rcll
mov
cli
arpl
fstl
addl
mov
xor
idiv
or
inc
cmp
mov
mov
and
out
jne
cmp
fstpt
jae
sbb
mov
addr16
inc
andb
mov
push
cmpsb
test
push
jae
sub
jo
fbstp
shll
int
mov
jle
pop
test
repnz
and
add
mov
fimull
cmp
mov
cmp
imul
nop
adc
mov
fmuls
push
out
jg
mov
cmc
test
stc
in
cltd
cmp
fnstcw
mov
aas
test
iret
lcall
rcr
outsl
xchg
xor
cmc
mov
test
xchg
mov
gs
mov
pop
hlt
cli
lods
scas
sbb
dec
inc
lahf
push
xchg
icebp
fisubs
dec
cltd
sbb
les
shlb
push
insl
out
insb
test
adc
adc
aaa
push
je
shr
gs
or
sbb
int
cld
or
add
pop
mov
pushf
xchg
jne
das
add
mov
xchg
push
les
int
loope
and
and
sub
in
xchg
fidivrl
fwait
bound
insb
jge
scas
insb
adc
addr16
mov
jle
sti
cmp
mov
mov
ret
add
adc
cmp
ja
push
in
imul
popf
mov
xor
and
mov
hlt
add
sti
sbb
or
pop
dec
test
pusha
push
pop
mov
push
xchg
lock
loop
adcl
jae
mov
pop
pop
push
ret
push
cmp
call
push
pop
jns
scas
test
iret
or
push
lds
ficompl
push
sbb
jno
lds
mov
jl
out
outsl
mov
pop
dec
fstpt
add
pop
inc
cmc
push
mov
popa
sbb
jnp
sbb
cmp
es
mov
jl
mov
cld
adc
ffree
mov
jno
pop
es
ljmp
jecxz
repnz
testb
icebp
and
aas
mov
adcb
mov
inc
push
ljmp
into
bound
ds
push
fcomps
push
xchg
mov
jne
pusha
mov
inc
cmp
ljmp
sbb
xor
ljmp
inc
adc
jo
xchg
cmp
ja
mov
adc
cmp
mov
es
loope
or
in
in
dec
sub
in
push
loop
inc
dec
cmc
lods
push
cmp
jae
mov
andb
testb
xchg
or
nopl
enter
nop
fwait
pop
and
.byte
.byte
and
mov
xchg
push
sar
xor
push
sbb
jl
jg
add
mov
mov
xchg
xor
test
mov
aas
sub
adc
fists
and
adc
imul
call
xchg
sbb
or
hlt
jge
jnp
mov
out
push
or
pop
es
js
mov
int
pop
push
dec
aaa
dec
flds
mov
jns
mov
out
adc
jmp
and
nop
aas
add
and
or
sti
cmpb
dec
int3
xchg
cmp
das
stc
js
loopne
xor
mov
pop
mov
int
pop
cmpsl
sub
xchg
and
gs
pop
loopne
in
out
jbe
and
pop
xor
xchg
bound
mov
xchg
push
adc
dec
es
imul
sbb
std
lea
mov
adc
test
stos
in
femms
pop
out
fmuls
subb
imul
cli
pusha
addr16
xchg
or
push
xchg
inc
negl
jl
sbb
cmp
mov
adc
jecxz
cltd
out
aad
pushf
test
jp
sahf
cmp
push
add
insb
inc
add
int
cmp
lods
pusha
neg
and
and
fidivl
xor
mov
cmovno
aas
sub
xchg
leave
pop
xchg
lret
in
fistl
inc
sub
mov
jno
mov
movsb
es
stos
loopne
loope
iret
insl
shrl
insb
int
mov
sbb
jb
xor
jbe
scas
sbb
ljmp
push
pop
add
sti
je
fsubrl
cmpsb
insl
icebp
push
push
sbb
cwtl
lret
mov
push
cmpsb
mov
add
test
xor
jmp
rcrb
cwtl
or
inc
push
cmpsb
mov
xchg
das
xor
jb
test
ret
pop
push
sarb
mov
and
pop
jmp
adc
popf
ss
xchg
repz
push
push
aam
into
push
out
test
jle
mov
aam
push
lahf
or
outsl
jo
sbb
xchg
mov
aam
dec
fstpt
call
fmul
movsl
imulb
and
cs
xor
sub
and
mov
inc
cs
daa
push
fcom
xor
lds
mov
push
leave
mov
inc
and
outsb
orb
lods
and
or
fmull
adc
cltd
js
xchg
out
int3
jl
pop
xor
popa
and
mov
fiaddl
jle
mov
loopne
loop
jbe
adcl
int
xchg
dec
push
lods
loop
inc
add
jl
pop
movq
push
mov
pop
cmc
shrl
mov
push
sbb
xor
add
sbb
push
sub
lock
into
inc
push
outsb
fwait
inc
int
mov
mov
jge
dec
popw
lcall
mov
adc
mov
fstpt
pop
push
or
imul
out
iret
ret
cmp
adc
idivb
mov
pop
or
xchg
mov
test
repz
cltd
sbb
nop
xlat
mov
mov
fisubs
adc
lods
sub
mov
mov
les
iret
mov
mov
lock
push
sub
xchg
pop
push
je
fwait
ljmp
jne
fnstcw
repz
or
xor
mull
inc
adc
out
ja
pushf
lret
lahf
ss
testb
dec
inc
aad
testb
subb
aas
mov
lcall
push
mov
je
je
lock
xlat
sub
push
sahf
incl
lea
stc
hlt
scas
mov
clc
xchg
ljmp
sahf
shlb
jmp
cmp
mov
mov
pop
pop
dec
push
fsubs
je
push
loopne
leave
nop
popf
sbb
dec
inc
mov
lea
xchg
xor
lcall
shrb
mov
loop
pop
call
sbb
xchg
mov
lcall
les
loopne
bound
adc
aaa
pop
cmp
test
int
xlat
clc
and
stos
vcvttpd2dqy
mov
outsl
popf
rorb
inc
jns
pushf
rorl
insl
daa
scas
dec
gs
mov
cmp
cld
xchg
xchg
aas
dec
adc
popa
inc
rol
movsb
loop
mov
ss
sti
rcl
pop
imul
or
outsl
ss
adc
ljmp
data16
cmp
jl
adc
scas
mov
rcrl
daa
push
jge
sahf
outsl
sbb
adc
js
mov
icebp
xlat
add
daa
add
sub
and
pop
lret
jns
in
stos
dec
fcoml
jne
mov
push
popf
in
fcmovnb
out
popl
pop
out
cmpsl
and
pop
in
sub
sbb
xchg
jp
scas
push
mov
mov
jns
std
fsts
xor
cltd
jae
shll
jmp
pop
inc
dec
and
add
testl
xchg
sbb
je
cmpsl
mov
lret
in
xor
mov
popl
sbb
ljmp
sub
aaa
sbb
cmp
iret
mov
or
push
lahf
pop
jo
sub
push
scas
mov
mov
mov
adc
pop
ja
shlb
mov
sbb
shl
fwait
outsb
xchg
sub
cmp
xchg
dec
xchg
fmul
mov
fldcw
sbb
dec
fisttpll
ljmp
dec
test
aam
xor
or
leave
lock
stos
adc
rorl
in
hlt
add
gs
xor
fnsave
push
cmp
mov
jbe
movsb
sbb
aam
dec
push
mov
mov
sbb
in
sbb
jmp
popf
push
and
xor
jle
popf
imul
mov
nop
add
outsb
sub
cs
xor
mov
push
mov
dec
or
jle
jl
subb
loopne
push
popf
fcompl
int3
jo
mov
add
stos
xchg
testl
and
pop
sbb
adc
les
repnz
xchg
in
aam
push
mov
imul
and
movsl
popa
dec
bound
sti
leave
jb
rcrl
push
insl
xor
adc
sti
mov
mov
movsl
orl
arpl
shrl
push
fldenv
xchg
lock
out
lret
aad
popa
movsb
out
xor
aad
cmpsl
stos
cmp
arpl
mov
int3
repnz
push
pop
test
mov
add
out
into
dec
add
fs
fidivl
mov
mov
push
ja
test
adc
adc
push
insl
dec
divb
nop
add
in
fwait
push
mov
jo
std
xchg
movsl
inc
push
shld
bound
loopne
and
mov
sbb
xlat
sub
xchg
mov
sub
pop
xor
pop
sahf
lock
loope
rclb
shl
adc
fdivl
popf
xchg
lret
cmp
mov
add
mov
jmp
mov
mov
push
gs
jnp
dec
in
and
xchg
jle
xor
out
popa
mov
orb
lods
push
add
pushf
cltd
jl
popf
sub
cmp
add
icebp
sbb
das
xchg
jnp
repnz
cmc
addl
lcall
std
fadds
pop
mov
push
mov
adc
aad
mov
mov
xor
xchg
sti
xor
mov
fimull
jno
pop
in
clc
add
push
mov
in
xchg
insl
pop
mov
rol
test
cmp
dec
shr
scas
out
add
in
mov
les
jnp
cmp
inc
scas
sub
sub
imul
lea
pushf
pop
mov
and
into
mov
hlt
ret
out
lods
mov
stos
cmc
into
sbb
loop
ljmp
or
xor
loop
fstpt
cmpsl
mov
jo
movsb
or
jmp
test
scas
push
in
push
jne
or
je
pop
loopne
js
rorl
int
iret
xlat
sub
shl
je
bound
cs
pop
je
andb
loopne
in
test
lds
jp
and
out
push
int
ljmp
mov
int
arpl
or
pop
repz
das
sbb
addl
into
fistpll
cmp
mov
or
notl
pop
enter
sbb
push
scas
xor
daa
mov
xchg
sub
fidivs
sub
mov
out
jmp
push
subl
out
icebp
fmulp
iret
outsb
out
mov
inc
shlb
sub
xor
adc
cli
or
sub
out
cs
lods
xchg
decb
ficompl
leave
mov
lahf
sub
mov
push
mov
movsl
xchg
mov
and
das
fstpl
xchg
fnstsw
pop
idivl
outsl
test
mov
lcall
mov
outsl
lods
into
push
ss
into
pop
pop
jecxz
lea
sub
pop
inc
sub
push
into
mov
adc
rcrb
es
fiaddl
negb
jb
mov
inc
cmp
scas
cmp
shlb
aad
inc
orl
arpl
xchg
inc
rorl
out
xchg
cmp
into
jl
lea
les
push
loope
or
je
pop
negb
rclb
xchg
test
mov
shll
pop
sbb
add
lcall
js
in
je
add
inc
shlb
in
cmp
pusha
out
xchg
aam
xor
ljmp
add
lcall
xchg
sbb
sbb
xor
and
lret
push
dec
cwtl
js
jbe
rolb
data16
cltd
cltd
out
push
sbb
add
jg
pop
repnz
das
inc
xor
jnp
mov
jg
jge
jge
or
test
fdivrl
cmpsl
mov
pusha
cs
bnd
dec
push
mov
jns
int
loope
inc
out
xchg
push
test
testl
mov
jns
imul
mov
jae
inc
inc
cld
sbb
inc
push
push
pop
push
loope
popf
jp
insl
mov
sub
gs
cmpsb
call
lea
into
dec
ljmp
dec
pop
scas
shll
cmp
std
std
cmpsl
sbbl
lds
nop
mov
ja
or
xor
lea
cltd
sub
mov
and
mov
xchg
push
fwait
and
jns
xchg
mov
push
mov
nop
jo
notb
daa
add
daa
xchg
movsb
sbb
in
add
out
frstor
dec
test
mov
mov
das
xchg
xchg
cmp
outsl
cmp
test
aam
popa
jb
sub
lret
cmp
mov
inc
mov
dec
nop
hlt
xor
lahf
xchg
std
lea
mov
out
push
stos
mov
lods
daa
sub
rol
and
fwait
popf
jp
popa
cld
add
mov
leave
mov
lahf
cmp
inc
adc
imul
and
jo
es
int
mov
sbb
enter
enter
aad
or
push
push
pop
scas
fimuls
ss
jne
xchg
insb
pop
pop
ret
mov
push
mov
imul
dec
insl
jg
int3
mov
in
jp
mov
test
sub
pop
jg
jl
int3
jbe
adc
add
and
xor
jnp
pop
enter
push
data16
xchg
ret
xlat
mov
pushf
out
and
mov
sbb
inc
jnp
ds
jbe
repnz
dec
mov
cmpsl
fidivrs
jb
adc
cli
lret
dec
mov
adc
ja
mov
inc
jp
xchg
add
je
mov
xchg
mov
dec
pop
cmp
in
push
push
int
xchg
ffree
adc
fwait
push
scas
stc
jb
aaa
aas
imul
pop
and
mov
adc
push
fistps
daa
mov
jecxz
xor
insb
mov
scas
dec
or
inc
sbb
mov
mov
inc
push
mov
call
outsl
repnz
mov
push
push
pop
xlat
mov
adc
jg
repnz
lods
mov
xchg
or
pop
adc
bound
rcl
pop
mov
cmp
out
jp
dec
xor
dec
jle
push
std
pminsw
jb
aam
fdivl
fwait
sub
lds
and
ds
leave
scas
pushf
pop
stos
fwait
xor
rorb
pop
lds
arpl
jecxz
hlt
fcoml
in
mov
add
scas
insb
inc
pop
scas
xchg
leave
das
mov
cs
mov
xor
not
cli
rcrl
iret
shll
cwtl
mov
adc
mov
push
xchg
out
cmp
sub
push
inc
in
xchg
xor
fstps
sbb
aas
jbe
out
ljmp
or
jno
xchg
fidivrs
jmp
dec
mov
cmpsb
push
int3
mov
ljmp
push
or
out
clc
outsl
dec
ja
lds
cmp
xor
jg
stos
out
xor
pop
or
nop
leave
sbb
nop
or
jecxz
jmp
mov
pop
push
out
scas
filds
ja
xlat
adc
shr
inc
push
dec
cli
ljmp
leave
repz
iret
cmp
hlt
sub
pop
test
xchg
mov
push
int
int
xor
js
mov
dec
ret
sbb
repnz
mov
adc
testl
scas
das
adc
hlt
push
mov
add
jbe
out
cltd
dec
icebp
enter
xorb
dec
popa
subl
js
sub
push
scas
push
add
cs
push
hlt
jae
mov
mulb
mov
pop
jns
lret
subb
sbb
rorb
cmp
or
leave
cmpl
sub
mov
add
pop
pop
ljmp
xor
hlt
fbstp
mov
and
addr16
or
adc
and
bound
push
inc
push
sbb
cmp
gs
mov
cmp
pop
daa
jge
xchg
es
.byte
inc
add
add
add
add
push
cli
into
xor
pop
dec
icebp
xchg
fwait
push
pusha
xchg
scas
outsl
addl
mov
enter
in
aas
cmp
arpl
adc
pushf
jnp
jns
test
addr16
test
iret
and
pop
inc
into
outsl
aas
inc
xchg
out
and
mov
lock
mov
mov
and
xchg
inc
sbb
sbb
push
mov
xor
pop
mov
cwtl
mov
je
push
sahf
pop
in
mov
adc
int
popf
xor
jge
call
gs
xchg
fmull
jbe
sbb
in
jno
and
mov
aaa
int3
push
inc
jae
lret
aas
dec
cltd
push
sahf
mov
test
pop
cltd
mov
stos
sub
xchg
mov
jp
and
xchg
pop
jo
ljmp
xor
lahf
xchg
add
test
push
inc
mov
pop
cmp
shrl
push
xchg
cmp
jmp
shrb
addr16
mov
cmpsl
dec
xlat
sbb
les
std
jmp
mov
popl
cmp
inc
sub
outsb
jmp
test
in
lods
movsb
jae
adcl
cmp
cld
mov
insb
adc
mov
push
push
dec
mov
and
or
dec
jge
dec
mov
mov
jnp
jnp
mov
or
jmp
jno
cld
push
in
je
sub
dec
call
insl
pop
test
cmp
cltd
mov
mov
movsl
faddp
hlt
adc
out
and
mov
sbb
inc
mov
and
push
in
cmc
fistpl
lods
sub
jmp
arpl
sub
cmp
sbb
int
cld
lea
mov
ret
add
add
add
pop
add
add
add
add
mov
add
mov
add
add
add
sbbb
add
lock
andb
add
or
add
and
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
addl
add
add
addb
add
add
add
add
add
add
add
add
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
addb
add
call
add
add
add
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sub
add
add
add
add
add
add
cmp
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
xor
add
push
add
add
add
add
add
sub
add
in
add
add
add
movsb
lods
add
sbb
add
in
add
add
add
shrb
in
add
add
add
int3
lods
add
and
add
in
add
add
add
lock
add
push
add
add
add
add
add
add
lods
add
push
add
add
add
add
add
add
xor
add
add
in
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
in
add
add
add
xorb
add
add
add
add
add
hlt
add
adc
add
in
add
add
add
aam
add
add
add
in
add
add
add
sbb
and
in
enter
push
add
mov
aaa
fwait
arpl
loop
inc
fsubrs
cmpsl
mov
imul
js
jg
mov
mov
jnp
out
and
mov
inc
rol
fimull
dec
pop
fwait
dec
js
add
ljmp
jge
or
lret
xchg
push
jg
scas
mov
fcoms
aam
pop
dec
fs
cltd
jno
mov
stos
in
or
popf
adc
mov
lods
cwtl
into
sub
inc
or
fcomip
adc
mov
inc
outsb
jge
jle
testb
jb
or
adc
lea
lcall
insb
sti
pop
pop
and
daa
mov
nop
cmc
ds
imul
mov
ja
test
dec
ja
sar
jmp
xor
push
call
or
popa
lea
push
sub
rcrb
xchg
push
jle
sub
cli
pop
ljmp
into
lods
adc
jp
mov
mov
add
std
leave
out
xlat
dec
push
scas
sub
loop
popa
add
add
xchg
pop
jg
lret
or
and
fstpt
pop
mov
xor
add
adc
cmp
mov
das
insb
movsb
rolb
mov
mov
xchg
int3
leave
sub
fwait
jae
cmp
lods
shlb
lods
fnstsw
ret
pop
xchg
pop
push
inc
repnz
and
repnz
and
fsubrl
sub
jbe
xchg
in
jnp
inc
push
pushf
jb
mov
and
loop
sbb
cmp
sub
in
add
pusha
cs
ret
mov
movsl
jbe
add
sbb
cmp
sti
leave
outsb
popa
adcb
or
ja
push
ret
ss
or
pop
mov
icebp
subl
hlt
sbb
fwait
sub
aam
xor
sbb
push
daa
stos
iret
and
enter
clc
inc
fisubrs
adc
testl
daa
dec
inc
jl
into
loope
jecxz
or
in
sub
test
rcrl
in
stos
adc
popf
popa
jnp
jg
mov
js
aaa
mov
jae
test
push
rolb
sbb
xchg
add
ds
outsb
movl
loope
jg
mov
fsubrl
sbb
mov
cli
xlat
cli
mov
lahf
lcall
movsb
mov
rclb
cwtl
xor
or
mov
or
jmp
loopne
push
aad
inc
pop
xor
cmp
jbe
cmp
js
pop
or
xchg
ja
out
sbb
int
push
xor
in
les
out
das
mov
gs
call
stos
lret
js
aaa
aad
inc
mov
xchg
dec
mov
shr
lret
je
lahf
cmp
rcll
sbb
movsb
mov
push
call
sub
out
dec
pusha
and
push
inc
lods
xchg
jns
or
push
xor
adc
mov
iret
lea
cmp
fnstsw
in
add
push
stos
push
mov
test
pop
mov
xchg
xchg
scas
sbb
int
mov
scas
and
out
sahf
mov
repnz
jecxz
scas
mov
rol
pop
and
loope
mov
aaa
fs
dec
mov
inc
lahf
out
add
add
add
pop
loop
jecxz
outsb
push
mov
cltd
imul
insb
ljmp
fwait
shl
int
mov
xor
rolb
testl
push
int
lods
and
cmp
jae
xchg
sahf
icebp
jl
xlat
or
dec
stos
fidivs
icebp
dec
jg
ss
cltd
loope
dec
mov
push
ds
add
sbb
xchg
jae
cmpsb
inc
subl
imul
cs
or
and
sti
sub
js
imul
or
jl
lea
add
jp
dec
aad
cmp
jmp
jl
jg
or
sbb
xor
cmp
addr16
shl
or
xchg
mov
sub
movsl
cmp
adc
cld
cmp
push
inc
fwait
pop
insb
int
xchg
cmp
ds
call
lea
mov
icebp
cmp
cli
lds
pop
xorb
mov
mov
xchg
sbb
pop
jp
cmp
lahf
push
jle
aaa
push
pop
loop
pop
ss
rclb
and
pop
xor
jne
adc
cmp
jo
movsb
jl
mov
and
add
out
shlb
push
fwait
test
or
js
mov
in
stos
xchg
push
fildl
adc
ljmp
sbb
aam
add
test
mov
lods
xchg
mov
mov
xlat
cld
cmpsl
aad
jae
or
in
fdivrp
out
loope
movsb
push
jb
fdivs
call
or
or
test
das
fdivr
sub
les
movsl
jle
pop
in
dec
mov
xchg
xchg
fldcw
dec
arpl
push
mov
adc
shlb
jge
sub
mov
imul
gs
mov
jns
leave
daa
mov
push
insl
jne,pt
fmulp
sub
push
out
xchg
adc
mov
jmp
out
sbbl
in
fistps
or
shlb
mov
sahf
sbb
cmp
inc
and
or
mov
cmp
mov
dec
pop
adc
outsb
mov
and
popf
jae
cmpsb
rolb
daa
xor
xchg
cwtl
std
rcrb
cmpb
sub
shrb
iret
cmpsb
loop
les
sbb
test
fbstp
rolb
push
out
aam
mov
fmuls
mov
push
cmpsb
sub
xchg
fsubrl
fdivl
jp
mov
orl
gs
fldcw
and
push
sub
out
sbb
xchg
xchg
add
cltd
xchg
mov
sbb
lcall
lret
outsl
adc
dec
fcoml
ret
pop
daa
jno
mov
call
shrl
or
dec
pop
jo
or
jns
ret
test
pop
in
lahf
pop
call
sub
addl
into
pop
mov
push
inc
and
sub
hlt
pushf
jne
jl
jns
fcoms
cmp
sahf
fists
frstor
lahf
bnd
xor
adc
popf
popf
out
call
inc
dec
xchg
iret
push
iret
rcr
lret
or
imul
sbb
jge
outsb
imul
xor
popa
addl
arpl
repnz
add
in
push
jg
pop
xor
push
push
fisubs
in
inc
fdivs
jp
insl
inc
xchg
pop
mov
fcompl
scas
psubb
push
fs
dec
movsb
insl
iret
sarl
sahf
sbb
arpl
cmp
dec
inc
jbe
pop
out
daa
pop
jnp
sbb
clc
inc
imul
arpl
adc
sbb
add
and
aad
fstps
mov
arpl
pop
push
leave
and
sarb
das
sarb
or
xor
loope
xchg
push
push
mov
loop
leave
cmp
push
ds
aad
bound
add
sub
repnz
xchg
inc
inc
or
xchg
add
and
shll
ss
xchg
mov
and
mov
fmul
vmulpd
sbb
loop
add
loop
inc
mov
pop
cld
dec
mov
or
mov
xchg
cmp
or
push
aas
jno
inc
jp,pt
mov
scas
andl
inc
repz
or
adc
sub
aas
xorb
out
data16
xchg
dec
or
cmp
out
fsts
lcall
pop
imul
mov
les
aaa
imul
push
mov
cltd
mov
ret
test
mov
jg
fidivrl
mov
mov
call
or
out
and
jg
cltd
lock
outsb
lds
mov
push
or
inc
out
jecxz
adc
in
ret
fstps
jg
sub
or
data16
adc
jp
std
ljmp
pop
dec
bound
mov
push
adc
ljmp
pop
popa
fs
push
xor
imul
xor
imul
fnstcw
bound
repnz
insb
or
das
imul
or
lock
jno
mov
sub
aad
push
push
outsl
mov
or
or
dec
out
inc
in
test
out
mov
clc
jmp
imul
cmpsl
or
push
fdivr
mov
dec
or
push
sbb
lock
cld
js
loope
xchg
sbb
testl
aas
sbb
pop
sub
pop
jne
gs
xchg
arpl
clc
out
bound
push
push
iret
mov
xchg
pushf
jb
push
popf
inc
mov
sub
adc
push
lods
and
pop
pop
iret
mov
mov
shll
adc
in
pop
adc
std
sub
mov
leave
or
cmpsb
and
popa
pusha
les
mov
push
das
adc
mov
dec
jb
call
movsb
push
jg
inc
sbb
stc
jl
outsb
xchg
adc
add
les
outsl
push
push
ja
and
stos
je
ds
cmpb
sti
pop
add
mov
jl
icebp
xor
mov
inc
sub
cmp
mov
push
and
jb
shlb
inc
stc
insb
mov
jge
cltd
cmp
cli
aam
loope
rclb
dec
sarb
inc
mov
dec
mov
inc
sub
mov
andl
or
sub
adcl
fadd
inc
jle
inc
movups
aad
mov
mov
insl
in
xchg
ret
stos
aas
gs
xor
add
mov
push
mov
jle
dec
jmp
out
fs
sub
xchg
cmp
stos
sbb
arpl
dec
inc
cmpsl
inc
xor
in
das
push
dec
sub
mov
fsubrl
cld
jno
mov
daa
xchg
jne
les
and
pop
enter
cmp
movsl
adc
cld
cs
cli
mov
inc
sub
xchg
pop
jle
fiaddl
loop
fnstsw
addr16
mov
ljmp
rcrl
mov
ret
mov
jne
mov
std
fcmovnb
and
outsl
sub
dec
mov
sbb
add
pop
jns
and
mov
pop
ljmp
adc
dec
nop
and
mov
jae
das
xlat
fnsetpm(287
hlt
cmp
scas
cmp
stos
dec
gs
sbb
movsl
jp
xor
stos
jb
mov
stos
ja
sub
outsl
and
or
popf
js
scas
outsb
fsts
ja
lds
icebp
jo
pop
adc
mov
push
and
sub
fcompl
sbb
pop
loop,pn
push
popf
out
sbb
aad
lods
test
or
mov
mov
xchg
and
ret
pop
lods
mov
xchg
push
hlt
enter
push
ret
ja
je
dec
loope
jmp
pop
xor
xchg
add
sub
add
je
lods
push
sbb
xor
jb
jbe
unpckhps
movsl
jns
inc
icebp
int3
imul
mov
or
xor
or
or
ret
inc
adc
ret
cmpl
xchg
inc
push
push
adc
add
sbb
add
xchg
mov
or
sahf
mov
test
mov
repnz
int3
pop
stc
jle
pop
xor
je
fmuls
mov
outsl
das
test
das
repz
dec
mov
push
adc
inc
out
sbb
mov
repnz
fcmovb
add
pop
leave
ljmp
push
sub
mov
xor
lods
ret
or
dec
mov
adc
jle
xor
cmp
jb
mov
inc
jmp
or
and
mov
movsb
loope
dec
sbb
dec
cmp
jecxz
shll
inc
adc
jae
cmp
mov
cmp
imul
pop
mov
ret
ret
shlb
push
or
test
cwtl
push
ror
jp
fdiv
mov
mov
fsubrl
mov
je
mov
mov
push
xchg
jb
jae
int3
mov
xchg
jg
stos
adc
insb
xchg
cmp
push
mov
cmpsb
mov
jbe
jecxz
sti
mov
inc
sbb
mov
in
xchg
fcomip
xchg
adc
cli
push
pop
or
cmpb
mov
fnstsw
sti
pop
aad
out
call
adc
insb
mov
ret
mov
ds
aaa
add
imul
lods
push
xor
mov
xor
divl
mov
cmp
mov
cmp
pop
and
and
mov
xor
pop
xchg
call
and
ret
popf
mov
adc
xchg
xor
rcll
stos
sbb
inc
idivl
xchg
in
mov
inc
stc
dec
rorb
adc
out
sahf
xchg
orb
add
add
jecxz
mov
pushf
mov
inc
mov
push
subb
clc
push
push
out
icebp
ret
daa
test
ret
xor
sbb
push
lods
jnp
rcll
lea
add
push
or
bound
sti
in
es
mov
jmp
mov
xchg
jne
icebp
mov
cli
subl
cli
or
arpl
inc
ljmp
outsb
xchg
rcl
xor
and
fwait
dec
cli
pop
sbbb
sbb
setne
adc
repnz
in
imul
rcrb
push
repnz
repz
ljmp
xor
sbb
out
dec
enter
mov
aas
xor
lds
lea
push
in
mov
sub
or
clc
mov
fdivr
jle
mov
notb
lock
push
popa
dec
fadds
fstpl
rcl
sub
jbe
push
or
ret
mov
adc
addb
jo
pop
dec
mov
lods
mov
adc
push
xor
mov
sub
or
push
mov
enter
imul
cmpsb
adc
mov
push
in
iret
sub
pop
inc
stc
sbb
mov
mov
mov
pop
pop
cmp
sub
pop
fsts
jbe
mov
cltd
inc
loope
cmp
sahf
into
ja
push
dec
movb
xchg
pop
dec
adc
cmp
mov
mov
leave
icebp
lods
pop
mov
in
in
add
adc
shll
pop
ror
shlb
shl
mov
dec
push
push
fcmovb
sub
xchg
shrl
ljmp
addl
sub
adc
mov
sub
iret
stc
mov
into
ret
pop
add
pop
jg
sbb
imul
push
imul
jns
xchg
cmp
xor
ss
jp
and
gs
daa
shlb
sahf
fadds
shll
shlb
and
lret
mov
lea
push
dec
add
jecxz
xor
lret
rcll
mov
cmp
sub
jnp
mov
bound
mov
push
sti
mov
mov
and
arpl
cmpsb
sarl
sahf
mov
sti
mov
rolb
push
dec
into
inc
ret
push
adc
scas
in
stc
adc
pop
inc
dec
push
btc
sub
jge
pop
aad
std
sub
and
sahf
sbb
std
sub
iret
and
jle
adc
jbe
loopne
fst
pushf
sbb
flds
fcom
in
mov
test
iret
adc
cmp
mov
mov
adc
btl
push
or
cmp
and
jmp
outsl
mov
sarb
popf
push
imul
sarl
inc
sub
loopne
mov
xchg
invd
cmp
add
inc
jno
shld
cmpsl
ja
and
movsl
mov
cmp
or
adc
fldl
push
dec
xor
push
call
hlt
cmpsl
mov
xlat
aaa
fsubl
xchg
insl
aam
test
cmp
in
xchg
out
jge
mov
mov
fistpll
mov
lret
outsb
popf
lahf
in
add
and
push
sub
popf
pop
scas
pop
cmp
addr16
mov
mov
ret
jo
cs
xor
into
movsb
les
cmp
jo
ja
mov
fs
jl
in
and
cltd
loop
mov
mov
and
xor
pushf
adc
shll
pop
xor
sub
mov
outsl
imul
and
mov
hlt
clc
lret
adc
add
sti
fs
nop
xchg
outsb
mov
popa
jns
stos
sub
xchg
and
pop
mov
mov
pop
push
mov
mov
pushf
ror
or
sbb
xor
std
sbb
test
out
jae
adc
addb
cmpb
push
cli
ljmp
fcmove
sbb
pop
hlt
sbb
sbb
xorps
and
vminps
pop
jno
repnz
fwait
xor
inc
add
aaa
dec
scas
ret
test
insb
push
xchg
dec
lods
pop
rcrb
out
std
mov
sub
jle
sbb
ja
or
jno
dec
xchg
xchg
js
adc
cmpsl
push
inc
cwtl
and
push
aaa
cmp
ljmp
mov
imul
mov
inc
or
xchg
daa
jne
je
pop
jmp
cltd
mov
or
pop
jecxz
test
in
or
adc
stc
pop
cmp
mov
and
iret
icebp
sahf
negl
fisubl
fiadds
jae
ljmp
fadd
cmpsl
movsl
mov
rorl
sub
jl
jo
mov
or
mov
mov
lea
jl
mov
imul
xchg
or
movsb
cs
sahf
push
add
cmpsl
rep
cmpl
inc
cmpsl
mov
cmp
xlat
push
xor
or
mov
jge
lcall
pushf
rcl
adc
pusha
mov
inc
lods
gs
xchg
mov
addb
rorb
fcmovnu
mov
mov
cmp
arpl
jg
rcll
pusha
outsb
in
fbld
adc
repz
fidivs
andb
pop
in
sahf
cmpsl
cmc
jae
pushf
fstpt
jbe
or
push
jne
pop
add
imul
mov
daa
neg
int3
jno
call
dec
icebp
repnz
repnz
out
les
inc
loope
inc
sarb
inc
jns
outsl
fmuls
mov
in
mov
shll
leave
and
xor
jne
or
jo
stos
mov
jp
mov
cmpb
and
pushf
testl
mov
xor
rcl
pop
ss
in
adcl
jns
into
xchg
in
jp
and
xchg
jbe
lea
sub
mov
dec
xchg
sub
jmp
insl
pop
pop
lds
push
push
fdivrs
and
les
mov
adc
xchg
inc
add
xlat
jl
sub
cmp
xchg
mov
mov
cmp
aas
cmp
xchg
in
icebp
jno
adc
jle
add
or
mov
popf
lods
sub
out
hlt
dec
lods
dec
rcl
shrb
mov
cmpsb
lods
jg
cmp
int3
push
adc
ds
sbb
mov
jle
arpl
adc
pop
femms
sti
fs
jle
test
sar
scas
mov
arpl
in
popf
push
out
sbb
pop
push
jae
scas
or
popf
out
setae
adc
fucomip
ja
cmpsl
push
xchg
test
mov
add
cmp
adc
pop
jb
dec
mov
ret
cmp
inc
dec
test
ret
or
hlt
lret
add
mov
push
imul
push
and
lret
test
adc
je
push
out
add
xchg
stc
add
mov
pop
jnp
addl
imul
lods
xchg
inc
jp
pusha
cmp
xchg
xor
mov
fldenv
add
inc
push
out
imul
xor
imul
jmp
inc
sub
cltd
jno
std
cmp
xchg
add
nop
pop
ljmp
mov
jge
xchg
cmp
adc
pushf
mov
xor
adc
std
xchg
xchg
mov
add
dec
ror
or
pop
xchg
push
sub
xchg
dec
pop
lret
aad
jl
movsl
cmp
jle
sbb
ret
sbb
rolb
mov
aas
and
mov
test
adc
adc
cltd
cmp
sub
lods
imull
jns
mov
jp
in
shrb
lret
push
xchg
jo
xchg
pop
and
loop
arpl
adc
arpl
bound
mov
aaa
add
and
dec
adc
add
xor
or
cld
dec
xor
mov
repz
pop
rcrb
test
lds
mov
sub
and
icebp
out
sbb
scas
movsb
fistps
lret
mov
sub
xor
mov
add
cmpb
pop
inc
cmp
cmp
out
lock
jns
mov
inc
xchg
lahf
or
test
jnp
pop
das
loopne
addr16
addb
dec
je
pop
mov
aas
jne
jno
int3
lods
cmpsb
jae
jp
ljmp
lods
mov
adc
pushf
dec
push
bsf
clc
pop
push
fldt
mov
sub
jmp
jmp
jg
jg
xchg
ljmp
pop
out
sub
das
pop
out
mov
add
adc
push
sbb
jp
pop
gs
stc
jb
ret
es
push
inc
adc
push
adc
pop
push
mov
incb
mov
cld
jp
fisubrl
out
icebp
add
movsl
lock
add
add
mov
mov
popf
roll
inc
xchg
imul
fisttps
mov
jecxz
push
xchg
or
aaa
int3
jno
sub
xchg
scas
psubw
iret
pop
scas
mov
mov
fwait
inc
test
cmpsl
aad
addr16
aaa
mov
or
stc
dec
and
pop
aas
jae
jb
popa
ficomps
and
cli
push
sub
test
mov
mov
cmp
out
sbb
out
fwait
enter
jle
lods
into
xor
xchg
xor
sbb
push
adc
scas
xlat
and
mov
mov
cwtl
fldt
imul
ficoml
imul
inc
inc
pop
std
mov
fstpt
ljmp
into
nopl
jle
cld
sub
fidivs
xor
lret
sbb
imulb
repz
stos
movl
fwait
sub
pop
in
xchg
in
aas
dec
mov
or
jo
int
roll
push
int3
movsb
lods
add
nop
push
inc
sub
jmp
adc
jo
js
sbb
mov
dec
xchg
ud2
popf
sbb
add
fpatan
xchg
jno
push
xchg
rcr
sub
out
scas
lock
dec
xchg
adc
cmp
add
push
sti
xchg
sub
xchg
mov
imul
addb
lock
jnp
xchg
add
out
outsb
sbb
in
inc
movsl
outsb
arpl
out
in
cmp
cmpsl
add
lcall
lds
test
fsub
cmp
jo
ret
mov
xor
in
mov
enter
xchg
pop
adc
add
lret
ret
aaa
fs
xor
test
fadds
mov
inc
and
rcl
lods
lock
sub
push
jno
mov
jns
push
subb
inc
sub
into
add
mov
sti
xor
xor
fs
addr16
movsb
test
out
loopne
fidivrs
cld
dec
stos
xlat
push
sub
in
test
and
mov
pop
movsl
lret
push
adc
pop
rclb
dec
rcrb
mulb
jge
shl
mov
nop
sbb
aaa
addr16
mov
ss
jmp
jb
xorl
mov
sbb
push
cmp
xor
or
mov
lods
inc
inc
xor
push
cltd
add
add
mov
mov
sbb
ret
bound
shll
jle
add
adc
pop
push
inc
jmp
lods
add
add
mov
xchg
flds
adc
pop
mov
mov
dec
lods
pop
mov
mov
xchg
mov
and
adc
mov
mov
bound
mov
or
data16
test
lea
xor
dec
fisttpl
data16
push
jmp
ljmp
mov
inc
rolb
or
mov
jae
cmpsb
mov
jmp
jns
fmul
int
popa
adc
rorb
jnp
out
xor
fcoml
pop
add
xchg
test
adc
xor
xchg
sbb
divl
jmp
add
inc
cli
cwtl
rcll
push
ret
bound
or
jg
testb
nop
lahf
cs
push
mov
and
sub
push
mov
adc
push
cmpsl
cmp
cmp
popf
lods
pop
mov
ret
jle
dec
adc
add
loop
xchg
popf
jge
jecxz
jo
imul
mov
mov
daa
orb
fsubl
mov
mov
sbb
rcll
scas
dec
int3
mov
sbb
mov
sub
mov
jbe
jae
stos
mov
fiaddl
push
mov
mov
outsb
in
mov
mov
sarl
movsl
lock
sub
adc
mov
int3
and
lock
repz
mov
cld
and
jl
jp
in
pop
sub
and
push
cmpsl
inc
xor
mov
popa
inc
insl
aas
pop
enter
in
ss
lahf
in
loop
mov
jb
popf
or
lods
loopne
mov
dec
cmc
xor
sub
out
outsb
dec
jecxz
pop
jmp
stos
or
and
in
sbb
jnp
repz
out
sub
pop
mov
aas
mul
jmp
dec
mov
sub
sbb
pop
test
add
insl
mov
pop
in
push
lea
mov
test
mov
lock
or
cmpsb
dec
and
jb
sub
mov
add
fsubl
and
dec
sub
adc
mov
push
adc
aas
jle
jmp
jle
movsl
clc
mov
les
sbb
push
adc
jo
iret
jb
push
inc
rol
mov
popf
mov
dec
stc
or
and
push
aaa
out
mov
cld
call
sahf
test
fdiv
mov
cltd
shll
in
insb
lret
loope
xor
xchg
stos
jb
jns
sbb
dec
out
sbb
mov
sbb
or
fnsave
stos
push
sbb
add
shr
imul
cld
mov
and
cmpsb
andl
mov
jle
lods
cs
mov
lar
popa
into
adc
lret
dec
shrb
dec
fnsave
mov
jmp
mov
push
subb
inc
in
sbb
mov
fs
jbe
push
xchg
insl
out
sbb
fmul
sub
mov
dec
js
mov
loop
fs
fldenv
paddd
sbbl
sbb
sub
jle
cmp
dec
js
jge
into
bound
rorb
jae
push
push
imul
mov
out
das
mov
cltd
loopne
lods
das
mov
gs
in
cwtl
and
pop
jg
jne
mov
mov
fbstp
int
cltd
or
rcrl
lea
pushf
cmp
xchg
xor
push
push
sarl
dec
insl
imul
mov
mov
jbe
int
or
mov
stc
mov
mov
jg
xchg
lock
mov
and
sti
test
xchg
and
pop
stos
aaa
add
push
inc
xchg
xchg
xchg
hlt
outsb
push
ret
jnp
mov
mov
jl
rorb
xor
push
mov
inc
scas
mov
shlb
xchg
daa
or
jecxz
cmp
cltd
fadds
lea
mov
xchg
push
push
mov
es
lock
jl
inc
inc
inc
sti
out
mov
push
js
pop
mov
in
xor
sub
push
nop
xor
mov
call
ss
lret
and
inc
jmp
cmpsb
jo
pop
shlb
sarb
lret
js
inc
sub
mov
or
test
and
mov
bound
dec
push
insb
mov
rcr
ljmp
lods
inc
jle
xchg
sbb
inc
cmpsl
mov
lods
inc
pop
aad
mov
xchg
in
xchg
and
scas
aaa
adc
pop
dec
cli
repnz
gs
movsb
pop
mov
ret
and
sbb
repz
std
loopne
shrb
or
outsl
sbb
jl
cmpsb
orb
gs
rcrl
mov
lret
shlb
lods
cli
jae
dec
mov
inc
fistps
fimull
push
mov
jmp
xchg
push
jbe
dec
lcall
fisttps
push
mov
subb
nop
outsb
dec
into
lock
inc
push
or
xor
and
inc
jo
cmp
lahf
lods
fistpll
lcall
mov
dec
test
ret
dec
and
mov
cmp
out
movsb
jg
push
movsl
addb
mov
js
cmp
fmul
jle
adc
pop
shlb
add
mov
push
mov
scas
xor
dec
pop
mov
out
and
cli
pop
je,pt
push
andb
mov
push
add
cmc
sbb
popa
xchg
movsl
ljmp
aaa
outsb
out
insb
cmpsb
sbb
and
pop
fsts
cli
dec
dec
xchg
aad
mov
xlat
or
cmpsl
rcl
jae
call
out
ss
inc
fadds
dec
popl
aad
rcl
mov
sbb
jbe
jae
js
sbb
sarl
cmpsl
mov
xor
xchg
sbb
scas
cmpsb
lahf
mov
xadd
mov
les
cmp
jae
push
dec
mov
or
bound
and
sbb
add
sub
mov
inc
xor
btr
add
xchg
loope
xor
das
pop
pextrw
dec
lods
shl
dec
sahf
test
mov
mov
push
testl
cmpb
fbld
popf
sub
cli
push
jns
xor
or
mov
inc
push
push
negl
mov
mov
mov
pop
mov
dec
iret
push
jne
push
push
aaa
in
pop
testl
ljmp
xor
lea
mov
cld
pop
xor
divl
mov
inc
imul
pop
push
cli
adc
leave
dec
dec
xor
clc
xchg
sar
jecxz
inc
fwait
cmpsb
pusha
test
aaa
sub
xor
sbb
aad
movsb
insl
sahf
je
pushf
xchg
mov
push
not
bnd
adc
lret
mov
xchg
test
mov
inc
mov
sti
aad
mov
push
ret
fiadds
mov
insl
sbb
dec
or
leave
sbb
sahf
lret
data16
and
cmpsb
iret
dec
mov
push
sub
sub
or
dec
mov
xchg
insb
lock
mov
hlt
lret
aas
lds
inc
jge
sbb
push
push
pop
mov
sbb
ds
add
rorb
pop
ljmp
inc
popf
movsb
push
or
sub
xchg
pop
or
add
popf
fadd
dec
lea
pusha
inc
out
out
inc
popa
xlat
cltd
pop
movsb
mov
push
mov
mov
dec
adc
jae
mov
adc
jg
pop
jns
dec
lods
fisttpll
ret
mov
mov
jne
and
mov
stos
fnstenv
sbbb
pop
rol
lods
jmp
frstor
in
rcl
push
pop
inc
nop
cmp
and
xchg
popa
cmp
mov
xchg
sub
std
cmp
jmp
xchg
dec
and
or
aam
add
add
loopne
push
dec
sahf
mov
cmp
mov
jbe
mov
test
cmp
aad
fldenv
lcall
dec
lcall
mov
frstor
xor
rcll
cmp
std
fmuls
out
add
pop
movsb
xchg
push
inc
out
inc
mov
jmp
cs
ret
mov
pop
inc
jl
loopne
cs
jp
lcall
xchg
dec
ds
jmp
dec
xchg
push
jle
mov
mov
mov
sub
xchg
mov
pop
pop
scas
push
aas
add
ss
xlat
notb
add
out
and
mov
test
fcoml
lret
mov
shll
lcall
stos
add
lods
jecxz
jecxz
push
scas
mov
xchg
insl
rol
jns
pop
pop
mov
dec
das
sub
jmp
fld1
arpl
inc
cmp
xchg
leave
add
daa
orb
dec
ja
lret
fbld
adcb
ljmp
sbb
fsub
insb
fninit
daa
push
push
push
daa
cmp
aad
add
leave
xor
loope
in
push
sbb
jp
in
lods
dec
push
mov
testl
iret
aad
sbb
cmpsl
shrb
hlt
cmc
orl
sub
mov
popa
inc
sub
push
mov
push
pop
cmp
loop
fcoml
mov
pop
adc
aas
fcoms
aas
and
mov
scas
dec
jb
adc
out
mov
dec
mov
dec
jmp
imul
rorl
mov
and
adc
in
mov
int3
and
es
fisttps
mov
cmp
inc
iret
ljmp
js
imul
idivl
or
mov
mov
leave
mov
push
or
int
pop
push
sbb
int3
xchg
cmp
mov
into
bound
xchg
ja
mov
jae
jge
negb
out
inc
repnz
ja
jns
and
rolb
push
pop
mov
push
lret
jp
es
outsl
leave
roll
das
push
xorb
sub
cmc
repnz
cmc
repnz
test
mov
sub
jmp
das
fsubrs
jbe
lock
ficoms
add
pop
inc
inc
dec
push
pushf
sub
mov
hlt
cmp
movsl
jg
mov
fmull
pop
mov
jle
pop
mov
mov
iret
fildl
fwait
data16
jnp
das
xor
sti
adc
or
loop
pop
loope
dec
cli
pushl
mov
sub
pop
mov
fidivrl
and
inc
mov
outsb
or
dec
sub
xor
enter
xor
repz
mov
gs
xor
push
push
pushf
or
lret
imul
inc
lea
fdivp
cmpsb
adcl
insb
into
dec
xor
fs
sti
mov
sbb
lcall
aam
or
lea
out
pop
jle
mov
stos
sub
sahf
insl
pop
jp
movb
dec
adc
lea
mov
ror
sub
push
iret
test
dec
pop
or
cmpsb
rcrl
sub
push
fs
mov
int
adcb
stos
je
or
jg
adc
push
scas
adcb
loopne
mov
sbb
add
jbe
push
add
pop
cwtl
push
sbb
nop
lods
divb
dec
pop
or
xchg
ret
sahf
pop
mov
push
insb
inc
pop
pop
int
adc
xchg
repnz
xchg
pop
lahf
jl
imul
test
sub
and
mov
inc
out
xchg
int
cmp
ss
jcxz
fadds
aaa
in
imul
jmp
xchg
scas
movsb
lods
les
fs
add
pop
ljmp
lods
loope
cs
mov
sbb
dec
ljmp
fdivr
in
cmp
mov
adc
jp
push
xor
outsl
test
stos
cmp
rolb
test
or
dec
fnstcw
popa
mov
cmp
mov
pop
sub
cwtl
mov
mov
in
cltd
iret
arpl
xchg
outsb
imul
add
sahf
or
inc
sbb
xor
stos
icebp
sub
push
or
jae
adc
push
mov
xchg
shlb
popa
jmp
in
push
movsb
sbb
pop
or
lea
dec
in
cltd
lods
jmp
cmp
mov
lds
stos
dec
andl
mov
xchg
lods
jae
sub
shlb
rcll
sbb
arpl
icebp
es
daa
fistl
int3
aam
jg
inc
inc
in
jo
movsl
sbb
mov
inc
add
pop
xchg
scas
loopne
outsl
sub
movsb
xchg
ret
out
sub
push
jne
pop
adc
int3
or
and
dec
dec
xchg
mov
nop
dec
jbe
sbb
sub
dec
pop
aad
cmp
cmpsl
xor
nop
lods
out
imul
add
insl
rcrb
lret
gs
mov
leave
dec
mov
and
ficoml
icebp
in
push
in
push
lods
pop
dec
jo
sub
xlat
cmp
dec
lcall
jns
cmpl
jle
cwtl
mov
xor
aaa
mov
ja
adc
outsb
testb
xchg
sbb
jecxz
mov
dec
and
pmaxub
jle
xor
push
xor
outsb
pop
add
xor
imull
int
add
mov
add
test
sub
or
push
insl
call
push
daa
stos
mov
sub
ret
push
push
out
lret
in
mov
jae
mov
test
lds
jecxz
sbb
dec
loopne
xor
call
add
je
push
jle
xchg
sbb
scas
insl
pop
add
jl
cli
dec
xor
popa
arpl
pop
ljmp
pusha
adc
js
arpl
and
je
cltd
insb
je
loop
iret
das
and
mov
stc
dec
lock
popf
inc
sbb
pusha
int
or
out
jne
pop
xor
jno
xchg
daa
cmpl
mov
cmp
and
ljmp
idiv
mov
mov
cs
mov
add
bound
cmp
pop
mov
dec
sub
insb
dec
sub
sbb
add
inc
je,pt
push
mov
adc
fs
mov
mov
jmp
mov
xor
dec
inc
imulb
andl
les
or
icebp
add
rcrl
hlt
or
sbb
jg
cmp
dec
adc
lods
nop
sub
cmp
jp
fneni(8087
jnp
loop
jp
dec
mov
aad
insb
insl
mov
movl
mov
cmp
fldt
adc
push
stc
pop
das
push
dec
add
movsl
stos
cs
sub
jle
in
movsl
repz
fcoms
negl
mov
and
xlat
sti
mov
ret
sub
gs
lds
cmpsb
jl
xchg
ret
mov
and
pop
dec
icebp
cli
mov
lret
adc
push
aam
hlt
jecxz,pt
xchg
xchg
dec
popa
sbb
ljmp
mov
popa
push
inc
xchg
jo
test
pop
ficoml
mov
cmp
xchg
fcompl
mov
repnz
data16
loopne
xchg
push
pop
cmpsb
div
insb
dec
pop
stc
add
lock
clc
jns
dec
lret
mov
xor
movsb
movsl
in
fs
ljmp
pop
push
mov
sub
out
mov
sbb
shrb
pop
and
or
pop
call
rcrb
jge
mov
mov
and
cmpsl
jns
xchg
xlat
xchg
pop
and
pop
out
or
jo
pop
sbb
add
and
xchg
cmp
mov
subl
inc
jns
sub
mov
rcll
or
test
sbb
stc
inc
adc
inc
xor
pop
cwtl
loope
mov
test
pop
push
pop
inc
adc
hlt
push
push
sub
mov
sbb
scas
add
xchg
scas
daa
ss
cmp
fwait
nop
push
pusha
lahf
ljmp
xor
lea
mov
dec
pop
mov
jle
adc
mov
rcr
fstpt
bound
aaa
fwait
ret
sbb
jecxz
and
out
xchg
push
mov
dec
hlt
dec
je
icebp
ds
cli
inc
test
lods
movl
and
les
mov
std
test
xchg
mov
xchg
js
sbb
jb
shrb
orl
mov
xor
pop
and
sub
mov
mov
fsubs
mov
add
lds
mov
add
enter
sub
fwait
pop
jg
cltd
lods
arpl
in
add
notl
mov
jecxz
das
iret
sub
std
sbb
negl
adc
repnz
push
lea
leave
das
push
stc
mov
pop
add
xchg
aad
addr16
aas
cmp
adc
cmpsl
push
or
insl
imul
aaa
cli
ds
stos
push
adc
scas
cmp
push
mov
mov
movsb
in
sbb
dec
inc
sbb
push
or
jecxz
fcomps
repz
fs
dec
push
int
out
adc
jmp
mov
pop
mov
sub
arpl
sub
fbld
sarb
mov
inc
and
xlat
pusha
outsb
sbb
shlb
or
cmpsb
mov
jge
xchg
mov
add
adc
sub
stc
mov
adc
xor
inc
sub
dec
jb
mov
xchg
loopne
xchg
popf
add
mov
mov
pop
ja
test
cmp
mov
stos
ja
lock
adc
fs
jo
outsb
rorl
adc
sbb
ds
jo
test
pop
push
inc
mov
xlat
aam
dec
xor
mov
nop
jbe
mov
in
cmp
int3
outsb
mov
movb
jle
mov
sub
sbb
stos
push
repz
xchg
outsb
jns
sub
dec
lods
call
popa
inc
push
addr16
add
mov
xchg
stos
js
adc
fmuls
mov
xor
test
mov
jle
call
out
addr16
data16
push
or
dec
sbb
push
insb
je
loop
movsl
sahf
and
and
mov
inc
imul
lcall
pop
dec
sti
fisttps
pop
jg
adc
jecxz
cmp
mov
sbb
pop
fidivs
dec
pop
shll
jbe
inc
call
sub
ja
call
add
xchg
dec
xchg
xor
pop
aas
mov
sub
decb
stos
xor
adc
std
lods
arpl
jmp
mov
iret
cld
ds
int
add
andb
lock
or
dec
ja
sub
mov
add
xor
mov
sti
mov
mov
cmp
sbb
adc
xor
fildl
pop
aam
push
jbe
pop
jmp
add
add
pop
xor
adcl
mov
jle
cmp
push
pop
shrl
cmc
cmp
adc
pop
ja
mov
dec
filds
lahf
adcl
leave
sti
jl
negb
push
or
pop
mov
xlat
push
mov
mov
xchg
mov
adc
mov
inc
dec
mov
sub
dec
and
xor
fs
sar
jnp
addl
dec
xchg
imul
cmp
ljmp
xor
aas
scas
dec
call
popa
pop
lahf
fwait
and
and
add
lret
cltd
xchg
std
pushf
fwait
xor
enter
fldcw
dec
inc
jp
xor
movsl
jns
in
stc
mov
pop
sbb
shlb
dec
fdivrl
xchg
test
push
adc
pop
dec
cmp
aam
les
scas
insl
sahf
pop
ret
fidivrl
cmp
cmp
imul
inc
ret
loop
xor
popa
sub
pop
cmpsb
je
xlat
inc
shl
jmp
lock
lcall
aaa
jecxz
xor
aas
in
loop
and
ja
in
mov
fwait
shlb
ret
sub
adc
ret
pop
je
iret
ror
adc
popa
outsb
xchg
es
imul
jp
sub
mul
iret
push
jno
or
add
inc
adc
and
sbb
pushf
sub
jb
inc
mov
mov
and
inc
clc
fimull
jne
movsl
mov
push
loope
call
data16
and
fcomps
jbe
gs
xchg
and
push
xor
pop
cltd
xor
lea
in
xchg
jnp
out
notl
inc
add
outsl
negl
xchg
fstp
cmp
test
xor
lods
icebp
mov
insl
scas
pop
aad
das
mov
das
int
les
fcomps
scas
sbb
sbb
ret
sub
es
outsb
jnp
hlt
pop
sbb
jne
jae
popa
adc
mov
cmp
xchg
adc
fnsave
sub
aad
in
fisubrl
das
in
jle
push
add
aad
jbe
pop
cmpsb
popf
push
stos
arpl
mov
jecxz,pt
arpl
loop
mov
cmovs
add
lock
or
loop
adc
nop
xlat
fsts
imull
js
scas
andl
cmp
jne
incb
ficomps
sub
ja
sub
icebp
aam
jle
aaa
loope
jnp
xor
lds
movsl
jne
sbb
jg
rcl
pop
mov
mov
push
and
jo
call
mov
repz
and
xlat
in
mov
xchg
dec
pushf
mov
cmp
xchg
jle
scas
lods
test
and
out
xchg
push
pop
and
pop
ror
adcb
divb
jmp
aam
pop
mov
jns
dec
hlt
scas
dec
sub
add
jb
stc
add
outsb
pop
pop
inc
sub
test
cmp
rorl
sub
dec
push
sub
int
dec
push
xor
pushf
push
cmp
popa
out
cltd
sahf
out
add
pop
push
out
cmp
push
xorl
push
adc
mov
push
nop
push
xchg
ds
xchg
push
cmp
mov
popf
adc
pop
pop
cmp
addr16
pop
cmc
aad
pop
lret
and
mov
xchg
movsl
jg
mov
roll
mov
and
lahf
movsb
faddl
insb
mov
push
mov
jns,pt
in
jae
push
mov
jbe
lds
addb
lods
lods
mov
push
jo
add
or
xchg
xchg
test
push
jl
leave
aaa
cmc
mov
out
adc
mov
dec
adc
fimull
lahf
lret
sahf
sbb
sti
dec
in
out
add
lods
in
daa
sub
mov
addr16
outsl
mov
stc
xchg
jge
arpl
pop
push
stc
adc
adc
in
int3
cmpb
loope
gs
jp
enter
inc
sub
adc
mov
dec
gs
dec
int3
xchg
out
bound
pop
test
in
push
push
jae
aad
fstps
lret
out
mov
outsb
xchg
mov
andl
push
fwait
mov
mov
daa
jle
add
push
xchg
cmc
out
mov
dec
lds
mov
fwait
push
call
lcall
cmp
ja
mov
inc
test
aam
dec
pop
in
dec
popa
out
xchg
xchg
dec
shlb
lock
dec
out
jg
pusha
lret
adcb
and
fwait
sub
cmpl
cmp
test
imul
outsb
adc
sbb
adc
bound
push
imul
or
pop
shll
mov
pop
jns
xchg
mov
push
cmpsb
push
lock
dec
stos
adc
adc
addl
pop
or
or
cmp
cwtl
mov
repz
popf
in
jb
mov
scas
mov
and
add
aam
jb
imul
mov
push
gs
push
aas
or
mov
lea
cmp
jecxz
insl
ds
or
rcl
cmp
cmpsl
arpl
adc
nop
scas
cwtl
or
cmp
adc
loope
jbe
push
sti
pop
outsb
mov
jmp
push
sbb
mov
enter
outsb
shll
ja
into
cmp
jp
or
lea
mov
push
mov
cwtl
ss
dec
dec
fdivr
ret
fimull
subb
xor
dec
mov
aad
lret
dec
add
testl
sub
mov
addr16
dec
cmp
mov
jae
mov
scas
push
sub
push
shl
addl
fwait
adc
inc
xor
mov
fstpl
or
or
push
cmp
enter
mov
js
test
in
push
shrb
mov
iret
mov
add
cs
aaa
xchg
ds
stos
sub
adc
cli
cmp
pop
iret
scas
inc
and
jne
jbe
xchg
jecxz
loopne
push
mov
mov
pop
push
mov
adc
outsb
or
lret
jle
pop
sub
mov
adc
lock
push
fbstp
testb
sub
cmp
outsl
mov
dec
js
frstor
inc
adcb
push
cmp
or
loopne
out
mov
shrb
loope
dec
in
popf
mov
sbb
mov
sbb
mov
jnp
sbbl
mov
push
mov
mov
aad
push
push
mov
or
and
add
inc
and
jle
stos
in
inc
inc
lods
fidivrl
pop
mov
dec
std
fsubl
addl
adcb
jns
aam
imulb
xor
lock
pusha
mov
outsb
jae
jl
je
lret
daa
xchg
aad
lods
xchg
mov
sub
adc
aas
rolb
out
mov
mov
addr16
cmp
push
shrb
pop
test
cmp
lret
decl
jbe
or
xor
mov
ret
scas
and
std
aam
in
push
add
inc
popa
push
dec
lds
fidivrs
or
inc
out
ljmp
mov
add
mov
cs
das
lret
popf
inc
or
inc
sbb
cmpsl
dec
jne
mov
sub
bnd
pop
mov
mov
add
sbb
pop
and
loope
cmp
sub
cmpsb
xor
mov
sbb
sub
aas
aad
in
dec
nop
dec
mov
sub
jge
in
cwtl
je
ret
ljmp
xchg
arpl
mov
add
data16
hlt
pop
nop
icebp
or
sbb
mov
jae
mov
shll
xor
stc
loopne
ret
ss
xchg
xchg
popf
pop
and
xchg
outsl
pop
jo
sub
ljmp
pop
xor
xchg
jg
sbb
push
pop
adc
pop
push
mov
das
and
mov
bound
mov
loope
fstps
sub
or
idivl
mov
in
pop
push
push
cmp
sub
jmp
push
and
adc
mov
ja
mov
pop
iret
stos
lods
push
jns
sbb
xabort
adc
in
movsl
sub
icebp
mov
scas
mov
push
mov
inc
cmpb
lret
xor
pop
inc
dec
or
addb
jbe
insb
notb
subl
inc
pusha
xor
sbb
xchg
pop
mov
repnz
loope
sbb
in
pop
add
into
mov
sub
xchg
sub
stos
pop
sbb
popf
icebp
movsl
or
sti
cmp
or
push
and
fs
mov
jle
push
push
icebp
aaa
pop
addr16
fdivs
lahf
lea
shll
dec
mov
shll
inc
addb
out
ror
das
jnp
mov
pop
insb
and
lret
loope
ret
lahf
jge
andl
jge
dec
movsb
sub
xchg
xchg
popf
jp
ljmp
mov
test
insl
enter
loopne
test
call
pop
outsl
in
push
and
test
cmp
sub
add
lods
push
mov
jg
pop
insb
dec
stos
jbe
mov
mov
mov
ss
and
test
inc
mov
es
outsl
daa
mov
adc
pop
shl
lods
pop
xchg
dec
cs
sbb
mov
in
push
adc
cltd
sub
jmp
add
mov
mov
adc
add
pop
add
fisubs
push
dec
sub
cwtl
mov
clc
es
stos
dec
mov
cmp
leave
pop
or
ss
dec
clc
xor
lahf
fmull
je
mov
outsl
aaa
les
data16
pop
dec
je
ret
sub
jb
arpl
pop
cmpb
shlb
mov
out
arpl
sbb
into
hlt
imul
add
xor
mov
push
in
fcmovnbe
faddp
pop
pop
test
xchg
and
ret
push
addr16
fldcw
pop
jg
or
pop
repnz
lret
ja
imul
dec
fistps
add
pushf
in
sbb
lret
pop
lods
lret
add
lea
fdivrs
pop
in
or
push
bound
stc
loope
or
pmaddwd
ja
addr16
out
movl
icebp
test
dec
or
mov
sarl
adc
xor
mov
mov
lds
stos
rorl
jp
imul
adc
stc
enter
xlat
fidivrs
pop
cs
pusha
xchg
inc
jno
fdivl
mov
push
push
and
jo
add
add
shl
cli
adc
cmc
cmp
and
sarl
mov
out
sub
jl
mov
or
pop
incb
je
sbb
lods
imul
fcmovne
out
dec
pop
sahf
pop
lock
xor
xorl
push
sar
incl
fmull
js
or
pop
push
loope
dec
and
clc
push
call
or
add
fwait
daa
adc
shlb
lcall
or
push
add
repz
dec
push
out
mov
cmpsl
div
mov
mov
bnd
jle
in
cld
sub
rcrl
ljmp
icebp
adc
ja
ret
add
leave
mov
orl
cmc
mov
pop
adc
popa
mov
addr16
neg
xor
mov
test
sti
jae
inc
xchg
insl
outsb
inc
int
imul
push
insb
xchg
aas
xchg
fistl
mov
dec
hlt
popl
cli
sbb
insl
lret
arpl
push
in
rcrl
testl
loope
lahf
sbb
es
inc
loop
popf
jns
dec
test
imul
shr
in
sbb
jo
cmp
cltd
das
addr16
push
stos
outsl
push
push
and
xlat
or
mov
xor
ljmp
cmp
mov
or
clc
cli
and
add
das
or
test
push
add
fidivs
stos
xor
in
sub
push
and
gs
push
cmc
push
add
push
and
add
jae
es
clc
loopne
sbb
cmp
mov
push
int
adc
pop
push
pop
gs
sub
lds
sub
movsb
jns
out
inc
mov
xchg
sarl
mov
mov
jecxz
pop
xchg
test
cmp
xchg
xchg
insl
jg
sub
jno
jns
outsb
icebp
jnp
ret
jg
cwtl
jns
push
daa
test
pop
jnp
fnstcw
outsb
and
and
xor
xor
loope
lcall
loope
xor
divps
fldenv
xchg
push
pop
and
inc
inc
outsb
pop
dec
dec
ret
xchg
cmp
pop
les
and
sub
pop
jae
lds
cmp
stos
sub
imulb
pop
data16
xchg
pop
or
cmp
ror
sub
jl
roll
or
xchg
and
jne
in
orl
loop,pn
pusha
je
mov
test
adc
fisubl
insb
and
sti
jno
adc
arpl
rcll
inc
ja
push
int
iret
es
push
mov
lret
sbb
imul
cmp
fs
cmp
mov
fldcw
push
pop
xchg
aam
les
mov
add
hlt
inc
pop
mov
pop
inc
mov
jle
cli
adc
mov
rcrl
mov
cmpsl
subl
es
inc
stos
adc
mov
jg
xor
cmpl
insl
mov
movsl
rcll
mov
cmp
in
addr16
mov
jne
lret
sub
addr16
xlat
fisttps
adc
aad
push
aaa
lods
aaa
lahf
xor
and
pop
in
test
jmp
pop
add
jbe
or
bound
inc
test
ja
test
test
in
and
js
dec
jbe
test
lahf
xchg
fcomps
ljmp
fisubrl
outsb
adc
arpl
add
js
cltd
lcall
xchg
out
rol
js
ret
dec
fistpll
jns
in
ss
popf
outsb
mov
out
xchg
mov
inc
mov
jle
and
xor
movsl
mov
in
xor
dec
jle
rcrl
push
add
adc
dec
cmp
mov
out
cmp
fwait
push
es
add
jns
adc
xor
mov
xchg
xchg
dec
jns
iret
jg
ficoms
or
movsl
dec
jecxz
aas
jg
mov
ljmp
sub
cmp
arpl
pop
jg
test
and
aad
ljmp
rorl
popf
arpl
inc
sub
call
jmp
xor
and
or
aam
pop
inc
pushf
sbb
sbb
mov
and
xchg
cmpsl
stos
ret
rorl
mov
push
sahf
stos
leave
fdivrl
xor
cmp
mov
loopne
mov
mov
in
insb
bound
xlat
jno
mov
shr
adc
push
shlb
mov
insb
dec
adc
movsl
sbb
jbe
fcmovnu
imul
inc
mov
and
rcll
dec
aad
jbe
xor
std
test
std
mov
jmp
lret
inc
and
fucom
es
mov
sbb
rcrl
xchg
das
sbb
dec
test
mov
inc
sbb
cmp
or
ficomps
ss
and
mov
mov
xchg
les
cwtl
pop
adc
clc
add
leave
inc
les
xor
insl
push
pop
dec
out
and
inc
mov
subb
xor
and
inc
push
mov
loop
sbb
or
leave
movsl
xlat
test
ljmp
and
scas
mov
js
or
fmul
cs
mov
adc
aad
push
add
test
or
sub
cmp
icebp
and
jge
or
mov
lret
ljmp
ffree
jecxz
in
mov
pop
inc
push
sti
loop
cmpsb
popa
add
xchg
mov
sub
lret
or
push
cmpsl
sub
sbb
mov
daa
xor
inc
loope
cmp
push
loope
sarl
cld
shlb
sub
int
cmpsb
movsb
out
shll
aam
add
pop
cli
dec
adc
adc
dec
sub
pop
jb
std
scas
mov
cmp
in
or
test
inc
xor
xor
mov
or
mov
mov
in
add
rol
stos
mov
insl
rol
add
dec
fsubrl
ljmp
pusha
in
leave
xchg
xlat
outsl
and
xor
data16
xlat
cmpsl
mov
inc
dec
fadds
push
jmp
add
or
imul
in
or
sbb
push
outsl
pop
pop
cmp
sar
cmp
in
jecxz
movsb
gs
push
loope
es
lock
and
xor
iret
xchg
add
sti
push
repz
ficompl
insb
push
and
ss
adcb
roll
aam
xor
add
hlt
push
inc
inc
dec
inc
sbb
gs
lds
pop
in
mov
mulb
cmp
imul
into
popa
jbe
nop
mov
xor
lock
lods
fs
loop
cltd
jb
in
fs
sbb
mov
add
idivl
pop
mov
add
sti
cmp
aad
xor
push
mov
pop
in
iret
dec
into
inc
jp
push
pop
cwtl
jnp
call
mov
xchg
jne
sbbb
lock
ljmp
xchg
or
mov
dec
cmc
dec
inc
push
in
out
test
xchg
jl
jmp
cmp
jl
leave
sbb
adc
sub
lds
add
lds
jg
mov
sbb
dec
scas
mov
jecxz
jne
xchg
lret
mov
aas
test
cmp
xor
dec
add
dec
in
imul
in
out
test
mov
pop
xchg
outsb
outsb
sub
fnstsw
pop
inc
xor
push
imul
cmpsl
jae
lds
pop
adc
and
popf
inc
insl
stos
sbb
cmp
lods
lock
andb
mov
shrl
leave
inc
in
je
pop
push
mov
mov
cs
mov
dec
in
gs
mov
pop
add
mov
and
xor
sbb
jmp
and
out
inc
ret
mov
out
mov
push
std
stc
stc
mov
pop
push
gs
mov
lods
inc
mov
push
dec
push
and
and
stos
sarl
mov
push
outsl
fisttps
inc
rcll
fdivs
hlt
outsl
mov
xchg
call
xchg
outsb
ror
out
dec
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sub
call
repnz
sar
lahf
in
mov
mov
test
xor
icebp
sbb
pop
adc
add
mov
add
mov
pushl
mov
pop
and
add
sub
sub
jbe
call
mov
cmpb
jnp
icebp
push
inc
sub
jnp
pop
sub
push
jo
call
jecxz
cltd
pop
aas
or
pop
pop
mov
mov
sub
call
push
das
cmp
sbb
inc
out
aam
jb
jle
add
pop
add
jl
jmp
jmp
dec
jne
mov
jmp
mov
int3
adc
add
cmp
adcb
test
or
mov
addr16
jnp
lock
push
data16
jp
push
mov
sub
or
mov
jp
pop
flds
dec
lret
cmpsb
notb
test
cli
inc
add
push
fstl
xchg
pushf
mov
or
cli
or
inc
in
mov
sub
sbb
bound
loope
jge
cmp
call
je
notb
add
mov
sahf
xchg
imul
repnz
inc
cs
sub
aas
push
jle
loop
mov
pop
rcrl
roll
jnp
stc
lods
stc
or
mov
pop
cmp
hlt
test
add
cmp
inc
push
xchg
push
inc
pop
repz
xchg
push
mov
popa
and
std
mov
inc
mov
out
pop
inc
int3
movsl
movsl
pop
mov
pop
xlat
iret
pop
dec
xor
adc
cs
mov
repz
pop
mov
jnp
insl
sbb
test
repnz
movsl
icebp
dec
insb
popa
or
jl
out
jne
mov
loopne
pop
mov
pop
jno
or
out
pop
mov
ret
loope
pop
sub
in
pop
mov
repz
testb
pop
dec
fisubs
jno
gs
add
push
cmp
push
or
push
stos
cmp
ficoml
jne
mov
fucomip
pop
ja
bound
in
scas
jp
adc
pop
jae
mov
comiss
jae
test
jmp
mov
xchg
lret
fucomip
pop
mov
out
jno
subl
icebp
rolb
fcomp
mov
sbb
outsb
cmp
aam
data16
stc
and
rorb
in
outsb
add
lods
sahf
fldenv
push
inc
pop
outsb
cmp
adc
jne
repnz
lds
jne
cwtl
fnstenv
data16
sti
fbld
jnp
mov
pop
imul
movsb
mov
add
inc
outsb
cmp
add
mov
data16
insl
dec
jne
stc
out
inc
sarl
mov
mov
cmp
mov
ljmp
cmpsl
in
sbbb
cmp
sahf
adc
push
outsb
mov
xlat
dec
pop
pop
inc
test
jge
cli
aaa
rcl
cmpsl
cmc
faddl
jbe
aaa
sub
rcl
dec
xor
cli
aaa
rcl
cmpsl
cmc
mov
xlat
sub
xlat
sub
inc
xchg
scas
jle
push
imul
int
sarl
push
iret
dec
imul
rorl
scas
and
sub
aam
adc
sar
daa
in
jns
push
mov
add
fst
sub
rcl
sbb
fsub
sub
out
movl
in
cmp
xlat
scas
jecxz
inc
sarb
cmp
stc
jecxz
inc
rorl
cltd
shl
sub
xchg
xor
aam
sbb
ret
inc
pop
bound
cmp
xlat
cwtl
xor
sub
shrl
pop
bound
cmp
xlat
mov
pop
bound
cmp
loopne
xlat
sub
insb
movsb
sub
imulb
inc
pop
and
daa
inc
rcrl
mov
clc
scas
out
das
repnz
daa
and
sub
push
jg
rcl
call
mov
pop
in
cmp
xlat
mov
inc
shll
scas
mov
in
inc
pop
in
mov
in
inc
pop
and
mov
lret
es
shrl
cmp
ja
in
mov
mov
mov
pop
cmp
xlat
mov
in
cld
dec
fst
sub
out
mov
out
daa
and
xlat
sarb
stos
xlat
hlt
and
rcl
sub
call
sub
xor
cmpsb
fldcw
aad
test
cmp
jae
fbstp
xchg
ss
icebp
fs
pop
push
outsl
insb
adc
cmp
fbstp
sub
mov
ss
icebp
fs
pop
cmc
ljmp
and
loopne
daa
or
hlt
cmp
out
cmpsl
fisubrs
ja
mov
add
outsb
xor
xor
sub
mov
mov
fwait
hlt
cmp
out
cmpsl
fisubrs
ja
mov
adc
daa
cmpsb
mov
xlat
sub
mov
mov
fwait
hlt
cmp
out
cmpsl
fisubrs
ja
mov
adc
aad
mov
aam
call
ja
iret
loopne
rcl
sub
pop
push
and
jmp
js
loopne
or
hlt
cmp
xlat
xchg
inc
xchg
out
inc
rcll
jp
imul
add
add
inc
aam
and
mov
cmpsl
cli
into
xor
jae
es
aam
scas
aaa
fwait
adc
stc
clc
out
dec
push
mov
mov
xor
jae
push
inc
aam
mov
mov
fcom
sub
xlat
scas
jne
add
aaa
rcl
sub
xlat
sub
roll
popa
cmpsb
cmp
and
rcl
sub
sbb
mov
xlat
sub
ss
and
adc
shrb
rcl
sub
fcom
sub
fs
push
sbb
cmpsb
testl
cmp
xlat
scas
je
in
mov
in
adc
xlat
sub
pusha
mov
fistps
movsl
fisubs
clc
into
mov
lock
in
pop
shrb
dec
cmp
sub
cmp
insl
xor
outsl
insl
pop
mov
out
inc
imul
adc
cmp
loope
sub
adc
shrb
testl
cmp
daa
inc
popa
hlt
pop
das
lea
sub
xlat
sub
xlat
sub
xlat
sub
xlat
sub
xlat
sub
xlat
sub
xlat
aam
roll
cmp
or
cmp
xlat
push
rcl
sub
xlat
sub
out
inc
rcl
sub
xlat
sub
xlat
addb
inc
rcl
sub
xlat
sub
xlat
sub
xlat
mov
pop
lock
js
inc
cmp
rcrl
dec
jmp
lock
jae
aam
mov
jae
sub
adc
xor
cmp
push
in
aaa
jle
aas
fidivs
add
inc
mov
adc
mov
cmc
iret
jae
jno
arpl
sub
jns
repnz
push
orl
and
repnz
sahf
inc
mov
mov
ret
jmp
leave
pop
stc
xor
or
out
sbb
scas
mov
test
rclb
xchg
ja
pop
fndisi(8087
cmpsb
sbb
push
gs
dec
aam
ficoms
clc
in
sub
bound
push
inc
popf
out
add
cwtl
inc
addr16
jne
pminsw
rorl
cmp
popf
jne
push
mov
sbbb
rcll
xchg
adc
inc
insb
decb
push
cltd
cmpsb
pop
adc
add
cmp
lret
push
in
gs
and
mov
mov
lahf
icebp
or
pusha
lods
push
jnp
mov
dec
sub
mov
scas
mov
pop
lcall
sarl
mov
jecxz
jecxz
ret
in
adc
mov
mov
mov
sub
test
push
int
jmp
dec
xor
pop
or
mov
pop
sbb
loopne
repnz
xlat
into
pop
inc
mov
pop
insb
je
icebp
rcr
out
addr16
or
jge
lahf
into
adc
insb
jb
ret
cmp
loopne
cli
jp
mov
push
add
lret
lods
add
adc
shrb
fdivrs
les
cmp
and
adc
das
jns
sub
mov
push
cli
mov
imul
lea
lret
inc
outsb
push
nop
mov
rorb
test
js
push
rcl
sub
rcl
gs
out
add
and
mov
push
xor
fdivrs
lock
loopne
scas
or
push
outsb
ret
in
adc
mov
add
aam
add
sbb
aas
pop
outsl
shll
sbb
pcmpgtd
test
sbbl
pop
popa
xor
shl
mov
mov
loope
std
aas
out
imul
test
pop
xchg
add
jecxz
adc
jns
mov
xor
leave
cwtl
jmp
popf
inc
inc
gs
dec
pushf
push
add
sbb
cld
push
dec
push
or
or
aad
out
mov
les
sub
or
cmpsl
call
push
and
stos
in
push
add
je
adcb
testb
mov
push
and
mov
pop
mov
add
add
add
or
add
adc
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
add
sub
add
sbb
add
jns
add
sub
add
xor
add
inc
sub
add
dec
sub
add
push
sub
add
fs
add
jae
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
sub
add
into
sub
add
fldcw
add
out
add
add
add
mov
add
add
sub
add
push
add
add
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
add
jb
je
inc
add
add
jo
push
arpl
add
addr16
insb
outsl
jae
dec
gs
add
inc
outsl
push
outsb
imul
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
jae
jb
jo
and
je
jo
cmp
xor
and
and
fs
jb
jo
imul
push
arpl
jo
cmp
fs
jb
jo
imul
and
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
and
cmp
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
and
insb
outsb
jae
insl
jae
popa
jae
jbe
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
insl
jbe
cmp
arpl
imul
and
and
cmp
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
insl
jbe
cmp
jno
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
outsb
jbe
imul
and
and
and
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
insl
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
insl
jae
popa
jae
jbe
cmp
arpl
imul
cmp
insl
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
ds
jae
gs
bound
add
add
push
add
pusha
adc
add
add
push
add
pusha
add
add
or
test
add
add
and
add
add
call
add
and
add
add
sub
add
add
and
add
add
add
add
and
add
add
add
add
push
add
sub
add
adc
add
and
add
add
or
add
add
add
add
and
push
add
adc
add
adc
add
sbb
add
cmpsb
mov
push
add
sbb
add
roll
add
je
daa
adc
int3
mov
add
jg
dec
add
cmp
ja
mov
lods
add
sti
clc
add
iret
lret
add
lcall
or
add
es
iret
into
add
std
cld
add
incl
lock
incl
ficoms
incl
sarb
add
jns
add
insb
incl
shlb
mov
call
add
pop
add
add
add
add
sub
mov
push
add
in
add
frstor
call
lea
dec
addl
mov
pop
add
mov
add
add
cmpsl
pop
add
mov
push
add
pushf
push
add
xchg
push
add
xchg
push
add
mov
add
add
push
addl
loope
mov
add
jmp
add
call
inc
add
fists
add
adc
dec
jo
add
mov
add
pop
mov
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
sub
push
push
push
push
push
push
push
push
dec
add
daa
sbb
dec
dec
dec
dec
dec
push
inc
add
sbb
inc
inc
inc
inc
dec
dec
dec
dec
adc
add
add
add
add
add
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
sub
cmp
cmp
cmp
cmp
sbb
cs
xor
adc
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
and
and
and
add
adc
push
push
pop
push
pop
push
pop
push
pop
push
sbb
add
or
adc
adc
adc
push
add
push
pop
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
ljmp
add
add
add
add
add
add
or
add
add
cld
in
add
cld
faddl
push
aam
add
add
int3
les
fdivr
cld
add
fninit
add
mov
cld
add
pushf
cld
add
mov
add
test
add
loopne
inc
xor
add
ja
pushf
movsb
pushf
add
je
test
add
mov
add
movsb
sub
cld
pushf
sbb
cld
test
aam
faddl
les
mov
inc
mov
xchg
push
movsb
add
push
add
dec
inc
add
jl
add
pop
xor
les
fsubl
add
xchg
mov
sbb
add
add
add
add
add
push
add
add
push
add
int3
add
int3
add
mov
add
xchg
add
add
or
add
or
xor
or
ds
add
sub
mov
add
or
and
add
inc
insb
test
je
xchg
add
iret
add
add
add
mov
add
lods
add
xor
add
xchg
add
pushf
add
mov
add
mov
add
mov
push
push
je
dec
xor
add
pop
nop
add
add
add
movsl
add
jl
add
insb
add
cmp
sub
cmp
or
sbb
adc
or
sbb
add
sbb
add
or
sbb
pop
movsl
in
or
or
cmp
add
push
add
pop
add
push
add
pop
add
push
add
inc
add
insb
add
dec
add
pop
add
dec
add
push
sbb
sub
sub
sbb
sub
add
pop
mov
add
cmp
add
add
sub
aas
add
roll
mov
outsb
add
add
gs
add
addr16
add
push
ds
push
inc
add
jp
add
pop
jge
dec
subl
push
xor
add
push
add
pushf
add
stos
add
pop
xchg
add
push
add
jbe
add
xchg
add
mov
add
xchg
and
add
jle
add
adc
add
loopne
add
add
add
jg
add
outsl
add
jp
xchg
outsb
add
ret
jbe
pushf
pop
mov
or
jle
push
lock
lea
cli
cli
cli
add
inc
adc
dec
test
add
cwtl
add
out
jmp
add
ljmp
cmp
add
jg
add
jne
add
add
mov
add
push
pop
add
mov
add
cmc
repnz
enter
dec
js
push
in
add
push
xchg
cmp
add
lcall
mov
add
add
cmp
lret
add
add
add
fildl
scas
loopne
jo
out
jns
jmp
add
add
dec
or
add
or
mov
mov
cmp
cmp
add
inc
js
and
add
mov
push
inc
xor
or
and
or
add
movsb
add
flds
ljmp
add
iret
mov
adc
add
jp
add
clc
out
add
adc
add
mov
add
mov
add
inc
insl
add
mov
flds
push
nop
lds
mov
mov
add
fcmovbe
add
xchg
push
add
imul
add
mov
add
xchg
sbb
sbb
pop
add
mov
icebp
add
lods
add
cmpsb
inc
add
add
incl
add
xchg
sbb
xchg
pop
std
mov
aas
add
and
add
mov
add
popl
inc
jno
add
hlt
hlt
add
imul
addb
mov
addb
add
add
add
imul
outsb
outsb
outsb
outsb
outsb
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
in
addb
add
cmpsl
imul
pop
pop
pop
pop
pop
test
adc
pop
pop
pop
pop
pop
pop
pop
test
add
imul
jmp
jmp
mov
pop
dec
adc
fucomp
jmp
jmp
jmp
addb
fwait
mov
loopne
xor
jmp
cmp
cmp
rorl
fnstsw
cmp
cmp
test
subb
in
lcall
bound
bound
in
mov
pop
pop
pop
pop
pop
in
mov
loopne
imul
add
add
add
add
mov
mov
cwtl
imul
push
push
push
push
push
push
call
inc
call
push
push
push
call
leave
cmpsl
imul
fsubrl
aam
shll
sub
sub
call
mov
sbb
int3
and
and
and
stc
fwait
fs
js
clc
clc
clc
clc
clc
clc
clc
call
in
fs
ljmp
adc
jno
cltd
clc
mov
sbb
sbb
call
loopne
shrb
push
push
push
push
push
push
push
call
jno
call
push
push
call
loopne
imul
add
add
inc
outsl
push
je
jno
add
mov
cwtl
imul
push
sub
sub
push
push
in
imul
xor
inc
inc
inc
inc
inc
inc
push
gs
mov
inc
inc
inc
inc
inc
xorl
imul
and
and
and
push
dec
dec
gs
and
and
and
and
imul
repz
or
or
or
jecxz
roll
push
push
push
sbb
cmpsl
in
cwtl
push
push
mov
and
and
and
inc
movsb
test
and
and
and
inc
imul
fs
inc
mov
inc
mov
cli
push
inc
mov
mov
add
push
inc
das
mov
inc
push
inc
push
ret
cli
mov
push
push
push
adc
add
add
cltd
imul
sub
mov
push
xor
loop
lahf
arpl
arpl
arpl
imul
imul
pop
arpl
hlt
xchg
push
and
add
add
sub
andb
push
xchg
push
imul
imul
imul
imul
imul
insb
imul
imul
imul
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
ljmp
add
add
add
add
add
add
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
data16
pop
imull
stos
stos
stos
stos
mov
add
add
pop
pop
add
add
add
int3
int3
int3
int3
rolb
dec
ja
ja
jo
jo
add
add
add
pop
add
add
add
jo
pop
adc
pop
negl
fstp
fst
jg
adc
adc
add
xor
add
add
jae
adc
adc
add
add
add
add
loopne
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
ljmp
add
add
add
add
add
add
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
jo
je
add
or
add
add
add
add
lock
and
and
or
and
and
add
data16
data16
data16
pop
pushl
stos
stos
stos
stos
stos
pop
or
jg
addb
add
add
or
add
add
add
js
inc
xor
inc
inc
inc
push
adc
inc
inc
inc
pop
test
jl
dec
add
xor
or
add
inc
hlt
les
add
rolb
int3
or
or
int3
int3
int3
rolb
out
ja
ja
or
ja
ja
jo
testl
inc
inc
inc
inc
vmread
xor
add
jg
add
pop
test
jo
add
add
adc
add
add
or
push
mov
adc
adc
add
adc
adc
test
push
push
push
push
push
push
or
push
push
pushl
fstp
fstp
roll
fst
jg
adcl
adcb
vmread
push
js
push
push
or
push
push
push
push
push
add
adcl
push
push
push
adc
or
push
mov
push
push
or
adc
add
adcl
push
push
adc
add
adc
adc
adc
or
adc
adc
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
ljmp
add
add
add
add
add
add
or
add
add
xor
xor
aas
aaa
push
add
push
add
xor
inc
cmp
jo
jo
add
add
popl
pop
js
add
pusha
pusha
add
aas
pop
add
pop
add
mov
mov
add
addb
dec
outsl
add
pusha
add
lahf
lahf
add
outsl
add
jo
add
filds
inc
mov
add
addr16
add
push
addb
inc
pusha
add
pop
add
mov
add
jg
add
add
rcl
add
outsl
add
outsl
add
mov
add
addb
mov
add
addr16
popl
add
inc
nop
add
dec
addb
push
scas
add
push
scas
add
dec
jo
add
add
pusha
nop
add
push
jg
push
nop
add
add
jo
add
incl
call
incl
inc
incl
pushl
incl
decl
scas
add
jg
dec
cmpsl
iret
add
js
add
dec
jo
out
mov
add
out
add
pop
iret
add
pop
mov
add
add
add
xor
nop
dec
scas
add
xlat
rolb
mov
lock
loopne
add
pop
popl
add
push
add
xlat
rolb
jg
popl
jo
popl
xor
jg
push
inc
outsl
add
xchg
add
dec
add
lock
aas
push
add
nop
nop
add
iret
iret
add
daa
and
sldt
rol
outsl
outsl
outsl
add
movups
pusha
pusha
pusha
add
adc
pushl
add
lahf
outsl
add
cmpb
pushl
add
pop
add
lock
add
sub
add
sbb
add
aaa
xor
shlb
add
fcomp
add
daa
aas
add
xor
add
jg
shlb
add
push
push
add
sldt
jo
add
push
jg
pop
pop
add
add
pusha
add
jg
add
push
add
and
add
push
add
pop
aas
das
add
addr16
add
filds
add
pushl
add
incl
add
add
add
add
aas
out
inc
add
fdivrs
add
mov
add
rorb
jo
add
jg
add
das
xor
aas
addr16
add
lahf
adc
imul
add
mov
adc
add
add
pop
popl
and
add
nop
adc
iret
xchg
add
xchg
add
das
jg
add
xchg
add
ja
add
test
add
outsl
xor
pop
cmp
shll
add
dec
xor
pop
inc
inc
add
sub
pop
cmp
add
xor
add
fildl
pop
aas
pop
add
xor
and
add
mov
xor
scas
add
stos
stos
add
data16
jg
add
add
add
aaa
push
add
bound
sub
addb
aaa
xor
sub
dec
add
inc
data16
pop
addl
sub
add
add
add
mov
add
addb
das
dec
add
addr16
fcmovnu
add
xlat
xlat
add
dec
add
pop
add
pop
addl
add
add
inc
aaa
push
add
jg
dec
cmp
loope
lds
in
lret
cmp
popl
push
or
sub
sub
add
pop
add
add
arpl
dec
cmp
inc
xor
add
aaa
push
add
ja
outsl
inc
jg
push
cmp
imul
cmp
push
xor
aaa
push
add
pop
add
add
xchg
add
add
popl
jne
js
pop
pop
add
addb
inc
jg
das
dec
ja
dec
cmp
pop
aas
outsl
add
arpl
popf
inc
stos
add
rcl
add
push
jg
xchg
add
jp
jae
addl
mov
mov
mov
mov
mov
mov
mov
mov
data16
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
lods
pop
lods
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
or
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
aaa
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
lods
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
add
add
add
and
push
popf
popf
popf
popf
popf
popf
popf
popf
popf
cmpsb
lds
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
add
add
add
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
sti
and
mov
mov
xorb
add
mov
mov
add
add
add
add
sti
and
mov
mov
mov
mov
sarb
mov
mov
add
add
add
daa
and
add
add
add
sbb
add
test
test
test
test
add
add
add
add
inc
and
js
sbbl
addl
addl
addl
adc
inc
aaa
and
ja
js
js
js
js
js
imul
js
js
js
js
js
add
add
add
add
jl
aaa
inc
aaa
daa
and
ja
ja
addb
js
and
gs
addb
addb
add
add
inc
aaa
daa
and
je
je
je
je
je
je
pop
arpl
and
imul
je
je
je
je
je
add
add
add
add
inc
aaa
daa
and
jae
jae
jae
jae
jae
pop
jns
data16
gs
jae
jae
jae
jae
jae
add
add
add
add
aaa
aaa
daa
and
outsl
jo
jb
jb
jb
jae
pop
addr16
and
push
jb
jb
jb
jb
jbe
add
add
add
add
daa
and
test
test
push
and
push
test
test
add
add
and
add
pushw
push
add
sbb
and
add
pop
add
add
add
add
pop
cmp
arpl
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
pop
pop
and
call
pop
pop
pop
pop
cmp
pop
popa
call
call
call
add
add
add
push
and
inc
aaa
and
and
in
in
in
in
dec
add
dec
pop
in
in
in
in
in
in
out
add
add
add
add
and
inc
aaa
daa
and
sub
pop
std
std
std
std
std
std
std
std
push
dec
inc
push
push
dec
push
std
std
std
std
std
std
std
std
std
std
std
fstps
add
add
add
push
and
inc
aaa
daa
and
dec
push
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
push
inc
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
add
add
add
inc
aaa
daa
and
inc
sub
inc
inc
inc
inc
inc
inc
dec
dec
xor
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
add
add
add
add
aaa
aaa
daa
and
cmp
ds
aas
inc
mov
adcl
inc
ds
inc
add
add
add
add
daa
daa
and
das
das
das
das
das
das
das
das
das
das
das
xor
xor
xor
xor
das
das
das
das
das
das
das
das
and
add
add
add
add
and
sub
sub
sub
sub
sub
sub
push
sbb
out
out
out
out
out
out
out
out
out
out
out
sub
add
add
add
and
and
or
adc
sbb
fcoms
fcoms
loopne
add
push
adc
or
adc
sbb
sbb
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
add
push
add
adc
or
adc
adc
add
or
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
push
add
or
pop
or
or
add
or
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
push
add
add
pop
or
or
dec
add
add
add
iret
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
jecxz
add
add
add
add
add
add
add
add
add
add
incl
incl
add
add
incb
add
add
cld
add
add
pop
clc
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
aas
push
add
add
jg
push
add
add
jmp
add
add
jmp
add
add
ljmp
add
add
add
add
add
add
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
and
and
and
and
adc
and
and
and
add
add
add
popl
bound
bound
bound
adc
es
add
add
testl
es
adc
bound
bound
add
add
jg
bound
bound
adc
es
add
or
testl
es
adc
bound
bound
add
add
data16
push
data16
add
div
testl
stos
stos
cmpsb
add
sbb
stos
add
add
jg
js
add
add
add
add
adc
add
div
test
inc
inc
inc
inc
inc
inc
inc
adc
inc
inc
inc
inc
inc
add
add
jg
dec
add
cmp
les
add
dec
dec
dec
dec
dec
add
add
testl
inc
push
adc
les
add
add
testl
les
flds
dec
dec
dec
dec
dec
add
add
test
mov
mov
les
add
or
testl
shlb
dec
dec
dec
dec
dec
dec
add
add
jg
or
int3
int3
int3
int3
int3
inc
jno
or
int3
int3
int3
int3
les
add
add
div
push
mov
ja
ja
js
inc
or
ja
add
add
js
inc
inc
inc
inc
inc
inc
inc
jo
or
inc
inc
inc
add
add
div
xor
add
add
lock
add
jg
pop
add
adc
mov
adc
testl
push
add
adc
push
push
push
push
add
add
js
testl
adc
adc
add
mov
push
push
push
push
adc
adc
push
push
push
push
add
add
pop
div
add
adc
adc
adc
add
push
push
push
push
push
push
push
adc
push
push
push
push
add
add
div
testl
fstp
orb
fstp
fldl
add
add
js
push
push
push
push
push
push
push
push
adc
push
push
push
push
push
add
add
div
adcl
add
push
push
push
push
adc
add
add
adc
push
push
add
adc
adc
add
testl
adc
push
push
push
push
push
push
adc
add
add
js
push
jnp
xor
push
add
adc
adc
add
add
adc
add
push
push
push
adc
add
add
add
adc
push
push
push
push
push
push
add
adc
adc
add
add
add
add
adc
add
add
push
push
adc
adc
incl
incl
add
add
incb
add
add
cld
add
add
pop
clc
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
aas
push
add
add
jg
push
add
add
jmp
add
add
jmp
add
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
enter
adc
add
add
add
int
and
mov
into
jle
mov
out
fsubp
cltd
and
scas
jb
adc
sti
adc
push
pxor
movsl
mov
and
push
cmp
das
or
loop
sbb
decb
dec
neg
aas
mov
dec
pop
mov
int
stos
fdivrl
mov
sub
xchg
inc
mov
push
sub
jns
jno
jle
cmpsl
push
loope
pop
lds
fdivl
cmpsl
cmp
jno
xchg
jne
movsl
into
cli
xchg
pop
ss
xchg
add
scas
aas
in
movsl
lea
enter
mov
inc
lods
mov
das
sub
fldl
adc
das
adc
test
xchg
daa
orb
cmc
sbb
adc
sbb
in
data16
xchg
cltd
insb
mov
shll
psubw
push
mov
sbb
dec
rorl
pop
adc
mov
sub
lret
insl
push
insl
xor
add
cmp
xchg
pushf
imul
xor
outsl
mov
call
or
out
pop
xchg
gs
jg
add
faddl
stos
push
sti
add
nop
cmp
loop
xchg
fdivl
fs
dec
dec
xor
arpl
outsb
mov
sbb
add
pop
jg
ss
mov
jge
dec
jl
out
xor
sub
add
mov
fld
insl
or
inc
and
mov
dec
sub
add
pushl
les
adc
movsb
cmp
jle
adc
adcb
xchg
dec
pushw
and
inc
hlt
mov
test
inc
inc
rcll
push
xchg
stc
or
push
test
test
stos
rcll
pop
pop
dec
cmp
xchg
xchg
or
mov
mov
inc
push
mov
sub
adc
fidivrl
push
xchg
loope
arpl
das
bound
add
push
and
ja
and
fmull
and
push
and
inc
imulb
lret
mov
and
jmp
adc
nop
sub
aam
nop
push
cmc
insl
fwait
dec
push
pop
adc
scas
pop
adc
jecxz
pop
adc
ficoml
jl
pop
sbb
cmp
adc
lds
les
sub
dec
stc
xchg
xchg
pop
dec
mov
jge
jo
test
mov
and
outsl
shlb
jo
jne
stc
dec
test
sub
inc
xchg
mov
push
sarl
and
in
dec
pop
xchg
stc
mov
dec
stc
add
mov
xchg
xchg
js
jmp
xor
dec
cmpsb
jmp
mov
test
popa
adc
insl
push
lds
pop
mov
ds
data16
fistpl
push
sbb
fistl
lds
xlat
mov
and
lea
push
shrb
sub
dec
ljmp
outsl
mov
xchg
aad
aaa
jge
dec
add
and
in
or
pop
xchg
jns
inc
sbb
je
dec
es
push
imul
insl
mov
mov
aad
popf
out
stos
jle
out
adc
push
xor
in
sbb
lds
into
lahf
loop
add
jo
int3
lret
xor
jne
in
xchg
push
dec
outsl
push
jg
jle
outsb
push
xlat
repnz
jnp
das
call
xchg
movsb
stc
leave
mov
dec
movsb
push
or
mov
add
loop
outsb
jecxz
sub
dec
jns
mov
test
push
mov
sahf
mov
adc
dec
adc
xor
stos
je
xor
push
inc
repz
divb
xor
int
outsb
leave
pop
inc
loope
pop
mov
int3
cltd
cwtl
cltd
stos
inc
jae
adcb
icebp
outsl
es
cwtl
dec
dec
push
scas
push
mov
inc
cwtl
movsl
or
mov
jne
mov
mov
sbb
in
mov
arpl
popl
fwait
pop
in
xor
idiv
push
jne
fistps
cmpsb
in
inc
out
xchg
sbb
mov
int3
sub
movsl
in
jne
xchg
xchg
imul
pop
add
pop
les
jg
or
sar
adc
push
cmp
jae
lods
subl
mov
jg
push
push
mov
inc
xchg
loop
sahf
lds
incb
sub
iret
push
and
in
mov
cmp
daa
push
adc
das
outsl
xlat
sub
test
insb
ficoms
xor
push
mov
mov
or
cwtl
jb
inc
fmulp
pop
jle
arpl
xlat
mov
mov
inc
sti
in
and
push
pop
scas
repnz
add
std
fildll
push
xor
xchg
xchg
faddl
xor
fdivrl
fdivl
or
mov
addr16
push
add
adc
daa
mov
mov
movl
pop
xchg
popa
xchg
push
pop
hlt
jl
shrl
xchg
add
pop
sub
fcoms
test
jmp
leave
adc
dec
sbb
cmpl
sbb
out
pusha
cmc
lcall
push
and
pusha
jnp
cmpl
lahf
arpl
mov
rcrl
pop
cmpsl
iret
sti
pop
jno
test
shlb
jmp
mov
rorl
or
xorl
push
je
icebp
popf
sub
mov
and
inc
nop
add
pop
es
aam
fwait
sti
and
shll
in
sub
scas
sbb
ret
shrl
std
cmpsb
icebp
pop
filds
sbb
ficomps
jbe
cmp
sub
rorl
lret
xchg
inc
push
dec
test
mov
cmp
je
sbb
lret
xchg
jecxz
das
cmpsb
jno
rclb
pop
adc
mov
popa
into
ret
mov
aas
pop
mov
mov
and
jge
dec
push
popf
je
xchg
jecxz
aam
or
dec
xchg
ret
jb
leave
jmp
jae
lods
mov
push
repz
scas
cli
mov
loop
or
sahf
jnp
pop
cli
loope
mov
mov
dec
xchg
xor
icebp
and
int
cltd
jge
insb
or
aam
inc
repz
pop
xorb
sub
jo
test
mov
lahf
leave
inc
mov
cwtl
lcall
aad
jle
lret
jae
pop
inc
out
sub
shrw
movsl
fisubl
loope
addr16
or
outsb
or
pop
arpl
fnsave
or
push
out
mov
cltd
mov
mov
xor
jge
inc
lahf
aaa
jbe
jmp
or
inc
test
mov
dec
mov
push
xlat
mov
addr16
outsb
cli
or
pop
add
pop
and
adc
out
cmpsl
jl
inc
stc
jg
sti
pop
mov
ja
dec
imul
ds
cltd
mov
add
and
ja
push
aam
aaa
mov
out
mov
cld
dec
sahf
cmp
xor
add
daa
or
inc
mov
int
movsb
lods
xor
or
sbb
imul
and
mov
xchg
push
mov
popa
push
rcrb
inc
fists
repz
cmp
call
incb
ds
push
mov
push
cmp
pop
aam
sub
test
pop
or
imul
divl
adc
cmpsb
jbe
mov
mov
jb
sbb
inc
rcrl
mov
sub
inc
sarl
inc
in
loopne
shll
imul
js
sbb
loope
xor
dec
rol
lcall
sti
insl
add
inc
sub
or
sub
xchg
hlt
js
jmp
cwtl
xchg
push
mov
mov
bound
lcall
or
repz
push
test
imull
aaa
movsl
and
addb
int3
push
dec
lock
or
cmpsl
push
cli
dec
in
fistps
cmp
or
jbe
stc
cmp
cmp
add
popa
lock
adc
sarb
jbe
inc
jg
aam
scas
pop
xchg
fbstp
mov
cmpsb
push
jl
lret
pop
add
mov
xor
and
mov
pop
cwtl
jmp
std
dec
fwait
int3
pop
rolb
push
push
xchg
outsb
call
inc
out
xchg
enter
in
adc
sub
insl
adcl
cwtl
aad
loope
push
pop
fwait
aas
pop
fidivl
mov
movsl
push
cmpsl
inc
add
push
mov
scas
xchg
jge
sbb
add
sti
push
dec
jb
lods
in
fwait
jnp
gs
imul
dec
into
in
std
fistpl
jnp
loop
jmp
movsb
and
fidivl
mov
and
movsl
jmp
out
mov
mov
and
xchg
mov
outsl
add
jp
mov
cmp
push
or
mov
into
pop
mov
iret
movsl
mov
cltd
adc
ds
fisubrs
sbb
pop
nop
test
pop
in
add
gs
bound
sub
pop
in
adc
outsl
std
ja
mov
jmp
adc
cmp
cmp
pop
sbb
cmp
xchg
xchg
mov
mov
nop
hlt
clc
ss
out
xchg
test
shl
fldenv
or
int3
mov
insb
test
std
fisttpll
rolb
dec
test
out
mov
pusha
aas
pop
pop
je
lds
fnstenv
lahf
jmp
inc
pop
in
ljmp
mov
mov
icebp
xor
pop
movsb
sub
pop
leave
out
scas
xor
dec
cmpsb
repz
dec
sbb
adc
or
fdivl
cmpsl
aas
mov
aas
push
pop
shlb
mov
nop
stos
push
mov
iret
pop
ss
lods
sbb
and
call
inc
xchg
das
sub
cmp
inc
scas
inc
movsb
mov
inc
dec
cmpsl
in
into
out
test
cwtl
push
cmp
data16
push
jmp
stc
es
cmp
inc
adc
pop
rcrl
jle,pt
push
sub
out
cmc
add
adc
mov
pop
pop
daa
push
outsb
pop
out
jnp
mov
adc
loop
cli
jno
ret
hlt
sub
popf
call
lods
dec
test
xlat
adc
aas
dec
stc
nop
mov
xchg
dec
enter
test
lret
mov
and
repnz
ret
adc
outsl
or
cmp
pop
mov
xor
test
cmpsl
pop
and
mov
adc
rcll
in
lods
sbb
dec
cwtl
pop
xchg
lahf
pop
hlt
data16
mov
into
xchg
xor
pop
pop
sbbl
mov
push
lret
jbe
xchg
in
inc
mov
mov
sub
sahf
in
adc
mov
cmp
jp
movsl
mov
mov
or
push
xchg
insb
or
stos
lods
ljmp
sarl
iret
xchg
jg
fimull
adc
sub
xchg
fwait
pusha
iret
test
inc
jge
or
lock
and
movsb
je
xchg
push
out
notb
jecxz
jmp
cmp
lock
mov
sbb
jno
aad
or
sbb
push
je
dec
iret
and
stos
jb
js
mov
sub
shrb
ds
cmp
std
mov
or
push
mov
dec
es
lret
inc
stc
or
or
inc
or
ret
pop
popa
out
push
mov
int3
jl
cli
dec
cmc
jmp
shrl
push
repz
test
cmpsb
jge
psllw
iret
dec
mov
imul
lahf
cli
sbb
dec
mov
shrl
mov
mov
pushf
cld
inc
loop
scas
test
cmp
mov
sarb
lods
addr16
jbe
rep
aaa
or
mov
xchg
inc
add
popf
loope
lods
sbb
leave
mov
xchg
cmpl
fcoml
out
mov
jnp
das
es
cmp
mov
sub
and
jb
outsl
adc
out
cli
nop
ret
sbb
add
and
fnstcw
mov
fcomi
sub
xchg
jo
dec
xchg
es
insb
mov
pop
and
into
das
mov
or
add
out
lds
mov
insl
into
ja
mov
sti
mov
sub
clc
dec
inc
and
push
lea
dec
cmp
cs
sbb
sub
push
cmpl
or
inc
sbb
mov
inc
cmp
aad
pusha
mov
mov
jbe
mov
push
aam
inc
aas
es
arpl
dec
leave
jno
inc
or
jl
shl
add
add
into
aad
sbb
sahf
cld
in
and
push
shrb
nop
xchg
fcompl
mov
and
cltd
jae
dec
popf
pop
sbb
cwtl
dec
dec
mov
fbstp
mov
xchg
inc
push
lcall
mov
outsb
adc
daa
sbb
mov
sahf
insb
push
inc
push
mov
pop
jne
pop
ret
dec
fisubrl
mov
movsb
cmpsb
in
nop
ss
leave
xorl
and
or
aad
clc
lret
xor
lds
mov
add
mov
nop
cmp
jg
lods
shlb
je
mov
mov
xchg
mov
ljmp
insl
sbb
adc
insb
lods
loop
dec
int
and
sahf
xchg
mov
sub
mov
addr16
sbb
jge
inc
adc
cs
push
aaa
insb
or
dec
adc
add
outsl
jge
repz
test
pop
push
ljmp
scas
xor
rorb
push
sub
pop
popa
add
stos
mov
scas
sub
and
into
int3
je
mov
jg
neg
sub
jnp
subl
arpl
push
stos
in
cli
pop
imul
movsb
sub
xchg
push
cmp
clc
xlat
fisubs
daa
and
cli
mov
jb
add
sub
je
push
sub
xor
les
inc
and
jg
jb
mov
xor
imul
jecxz
aad
or
out
push
lds
cmovbe
roll
inc
shll
fiadds
lods
pushf
cmp
add
xchg
punpcklbw
push
bound
into
push
xor
mov
divl
decb
or
fimull
test
cmpl
jp
mov
lods
pop
mov
xchg
popf
pop
in
xchg
lahf
imul
cmp
pop
xchg
shrb
cmp
xor
adcb
or
shr
jle
sub
addr16
adc
xchg
push
pop
mov
call
add
xor
jno
add
pop
insb
xchg
xchg
push
and
dec
cltd
pop
push
js
push
lret
loop,pn
idivb
lcall
sahf
lock
lds
scas
js
cmpsb
rorl
cld
sub
pusha
not
into
cmc
xchg
testb
add
shll
adc
inc
gs
mov
dec
xchg
or
push
xchg
push
lea
sbb
mov
push
inc
xchg
xchg
mov
shr
imul
fcomps
lcall
mov
pop
aaa
cmpsb
jne
adc
or
les
inc
jg
rcrb
xor
dec
mov
test
jo
jmp
inc
dec
test
mov
lcall
fisttps
aad
cli
jne
nop
or
lock
rcr
les
rcll
push
fwait
add
push
jge
inc
push
call
loope
inc
mov
xor
or
aas
pop
inc
fs
int
xor
xor
xchg
sub
mov
nop
mov
clc
fbstp
and
lahf
mov
in
aas
out
roll
mov
in
aas
mov
in
sbbl
cwtl
mov
movsb
add
jnp
adc
lcall
pcmpgtb
movsb
outsl
add
das
xor
inc
lcall
rorb
xchg
adc
sarl
dec
inc
aaa
cmpsl
push
sub
jmp
pop
dec
cltd
push
adc
sub
mov
aaa
mov
mov
es
data16
pusha
inc
dec
xor
test
in
leave
pushf
sub
sbb
push
push
insl
dec
dec
cmc
imul
in
mov
out
fisubl
jnp
loopne
mov
cmp
mov
inc
add
mov
bound
ljmp
xchg
dec
dec
mov
mov
add
jmp
scas
inc
inc
out
nop
lea
testb
ret
popa
xchg
mov
icebp
outsl
mov
mov
cmpb
enter
adc
pushf
or
aam
inc
adc
movsl
insl
pop
mov
push
xor
mov
cli
aaa
popa
into
imul
mov
push
pop
and
sbb
jnp
loope
push
push
mov
jae
inc
inc
pop
hlt
xor
mov
pop
hlt
sbb
sbb
cmp
sub
jno
mov
jecxz
push
adc
cwtl
adc
push
inc
or
popf
mov
arpl
jb
sub
xchg
and
adc
mov
cwtl
loopne
js
pop
out
xor
or
push
push
scas
xor
sbb
cmc
sarb
jl
cli
mov
ret
bound
inc
clc
or
jbe
cmpsl
add
pop
cli
std
mov
negb
bswap
mov
push
lcall
adc
adc
jnp
inc
std
push
outsl
cltd
int3
dec
cltd
adc
or
xlat
sbb
xor
call
and
mov
mov
jmp
mov
lret
push
pop
and
sti
jp
out
push
lock
sub
xchg
mov
pusha
pop
dec
dec
rcll
cmp
add
sub
scas
or
ja
lret
and
jnp
movsl
sbb
cli
aas
fwait
aad
xchg
sbb
daa
stos
mov
dec
outsb
loop
inc
xor
out
xor
sub
enter
or
sub
pushl
mov
xchg
movsl
fwait
std
stos
rcrl
adc
xor
test
pop
aad
pop
sub
inc
mov
movsb
mov
sbb
sbb
lock
or
pop
inc
push
sub
ret
jae
cwtl
pop
sbb
dec
push
mov
jns
sub
xchg
sbb
pop
pop
ja
pop
lea
mov
pop
fistl
test
xor
jae
xor
rcll
push
sbbl
push
adc
sbb
push
xor
inc
lret
pop
mov
xchg
stos
inc
inc
mov
lods
push
into
push
mov
and
nop
adc
repz
cwtl
mov
outsb
outsb
adc
mov
push
adc
pop
mov
or
pop
rcrl
dec
sahf
pop
or
add
xchg
cmp
xor
aaa
mov
jle
mov
ds
lcall
cwtl
insb
dec
lcall
and
fcomps
and
arpl
mov
loopne
insl
call
data16
dec
popa
or
add
push
daa
inc
fsubrl
adc
mov
push
les
mov
popa
push
stos
loopne
add
adc
in
inc
ficoml
cmp
out
jae
clc
and
inc
call
adcb
jl
pop
inc
mov
mov
dec
or
aam
insb
add
mov
mov
mov
popa
aaa
movl
int
in
adc
data16
push
or
arpl
push
lret
jae
inc
fisubrs
std
ficomps
xor
sub
push
dec
or
and
lahf
shll
in
sub
inc
rorl
ror
sub
test
sub
in
insl
push
jmp
pop
pushf
cli
int
and
pop
xchg
mov
jmp
mov
jne
inc
mov
mul
ficomps
cmpsb
xor
xor
cmpsb
mov
or
lock
pop
pop
jl
not
fmul
pop
out
ret
xor
repz
sub
pop
cmpsl
jecxz
rcrl
call
inc
stos
pop
decl
incl
fnstenv
jge
repz
aaa
fdivs
inc
and
imul
xlat
aaa
test
in
xchg
push
jmp
std
aam
adc
icebp
xchg
fldt
mov
inc
push
in
bts
int
jno
aas
mov
xlat
cmpsl
rorb
sbb
or
movsl
jb
sub
jmp
inc
dec
sbb
gs
xor
incl
icebp
push
scas
push
xlat
dec
out
lds
mov
inc
dec
and
inc
std
xchg
mov
sbb
mov
cmpsb
leave
dec
aas
mov
loop
dec
in
fwait
push
dec
lea
inc
jmp
clc
xor
sub
shl
lods
pop
std
and
or
sub
jae
cmpsl
adc
xor
fstpl
dec
inc
shlb
and
sbb
shrb
outsb
jb
repnz
mov
jle
ja
out
add
jge
jge
xchg
pop
stos
pop
pusha
cmc
aas
clc
lret
test
inc
mov
lock
fcomps
sbb
js
jno
clc
xor
add
mov
xor
add
add
dec
aad
xchg
shll
notl
mov
in
shrb
adc
cmc
aad
mov
jl
dec
cli
testb
dec
mov
mov
jae
data16
sbb
pop
mov
jmp
or
push
sub
in
sub
stos
gs
push
add
push
fnstsw
add
push
mov
sub
loope
pop
pop
push
imul
mov
je
mov
and
outsb
dec
mov
lcall
cmp
jecxz
int
cmp
jmp
fcmovbe
jns
dec
dec
cs
adc
mov
test
adcl
sti
test
add
pop
hlt
jne
mov
dec
mov
fs
pop
je
mov
mov
xchg
aaa
sub
push
loope
addl
cmc
jle
mov
ret
jno
xchg
call
or
repz
xlat
iret
jle
inc
jle
lahf
cmc
mov
test
add
incl
repz
pop
fs
jnp
xchg
add
cmpl
push
mov
or
lds
inc
jmp
xchg
nop
dec
or
and
xor
inc
mov
inc
dec
and
sub
cmp
loopne
xchg
sub
adc
mov
pop
add
pusha
xor
or
nop
pop
pushf
loopne
adc
hlt
inc
ds
jbe
into
jecxz
jecxz
add
dec
adc
jge
dec
jb
xlat
ret
fstpt
cmpsb
dec
leave
push
aaa
sub
andb
lahf
sahf
jg
jbe
ret
inc
arpl
fwait
push
lret
je
jl
inc
sub
adc
sub
fsts
ucomiss
adc
push
lods
push
push
mov
daa
jb
int
lcall
push
jmp
in
stc
add
jne
arpl
or
add
pop
mov
sub
jbe
fcomp
push
orb
fisubl
adc
pop
cli
add
pop
mov
cmpsl
pop
mov
lods
ljmp
jnp
xor
sbb
sbb
daa
scas
test
xor
fbld
into
je
mov
xlat
icebp
rcrb
repz
cld
push
mov
icebp
push
sbb
pusha
imul
jbe
in
push
sahf
in
or
rolb
adc
pop
pusha
adc
and
in
loope
sbb
fcomps
aaa
xchg
inc
mov
nop
mov
in
xor
shl
repz
lock
cmp
popa
xor
inc
add
out
mov
inc
jno
data16
jnp
lods
cmpl
js
mov
jle
hlt
push
xchg
fdivr
aam
popa
iret
movsl
rcll
push
out
bound
jne
ss
fisubrs
mov
or
outsb
pop
movsl
mov
sbb
or
pop
push
loop
push
stos
das
push
adc
push
jae
xor
mov
in
call
xchg
cmpsl
outsb
stc
pusha
jb
xorl
dec
mov
les
cmp
fwait
cmp
inc
ds
or
dec
dec
or
stc
sbb
pop
mov
outsl
fsubrl
sbb
push
mov
enter
ret
inc
cs
mov
aam
enter
mov
jnp
loope
mov
mov
push
sahf
movsl
inc
sarb
shl
imul
pushf
fwait
dec
dec
mov
sbb
push
sbb
rolb
sub
sti
out
jns
fdivl
pushf
movsl
popa
fcmovnu
inc
jle
scas
lock
pushf
and
pop
jns
xchg
sti
imul
test
or
mov
jmp
mov
imulb
mov
pop
outsb
xor
sahf
jns
adc
mov
or
mov
js
push
mov
fnsave
mov
jae
mov
xor
xor
out
adc
jb
pop
add
in
popa
movsl
jmp
popa
stos
xchg
inc
and
pop
ret
or
sub
mov
lahf
jmp
cmpsb
and
loopne
inc
int3
fdivr
in
pop
mov
jae
andb
cs
xor
cmpsb
ret
ds
mov
jo
fisubl
mov
les
mov
mov
add
test
arpl
push
or
fisttpll
adc
cmp
test
push
out
mov
jnp
hlt
ljmp
sbb
inc
scas
dec
pop
jle
fildl
inc
sbb
je
add
cmp
mov
stos
dec
data16
aad
or
cmp
imul
mov
jg
rorl
aas
scas
rclb
xchg
xchg
xchg
int3
inc
fcmovnbe
int3
fimull
add
push
mov
jns
repnz
shrl
xchg
int3
xor
out
or
test
pop
inc
out
jge
mov
aad
mov
or
cmp
jo
dec
cmp
int
pop
jo
fsubrs
inc
push
lcall
or
or
jg
jns
mov
rcll
add
cli
popa
xchg
test
jnp
add
pop
stos
mov
fcompl
lock
jle
xlat
pop
cltd
xchg
pop
and
sbb
incb
pusha
hlt
out
mov
xor
sub
pop
mov
scas
into
fisubrl
aas
mov
push
adc
or
sub
xor
cmp
int3
dec
sub
xchg
push
in
stos
xchg
cld
iret
loope
jo
or
inc
cmp
sti
hlt
push
daa
pop
hlt
je
push
out
roll
fwait
test
sub
pusha
pop
icebp
add
sarl
jne
cmovne
aaa
movb
sbb
aam
mov
sar
cwtl
cmp
jbe
push
ljmp
stos
stos
or
test
lds
ror
mov
je
fsubl
mov
int3
mov
mov
daa
cmp
jne
stc
or
sbb
and
xchg
fnclex
imul
jmp
aaa
cs
inc
iret
icebp
ss
and
out
faddl
mov
fstpt
xchg
jne
cmc
xchg
jae
insb
push
push
jg
push
jno
cmp
sub
dec
jo
das
cmp
jnp
jmp
shl
iret
inc
sbb
jo
jecxz
sbb
pop
arpl
lock
pop
mov
and
mov
daa
xor
jb
mov
in
push
mov
sbb
dec
ljmp
inc
ljmp
mov
in
imul
arpl
sbb
stc
lret
inc
popf
clc
xchg
jmp
sti
hlt
mov
popa
dec
push
daa
jmp
repz
sub
mov
or
adc
out
add
cmp
xor
icebp
or
pop
mov
jecxz
insb
mov
sbb
pop
push
pop
jmp
test
sub
xchg
lahf
ret
or
cs
push
ss
jb
pop
cli
test
xor
nop
aas
stc
lret
xchg
jbe
jmp
adc
cli
mov
jae
mov
mov
scas
movb
sbb
ss
dec
insb
aas
out
paddsw
cmc
addr16
loop
xchg
mov
xchg
sub
or
cmpb
mov
mov
leave
loopne
bound
call
push
cmp
mov
outsl
hlt
aaa
sub
and
dec
mov
js
dec
movsl
je
mov
repnz
mov
je
popa
jne
xor
push
pop
cmp
adc
lods
sbb
jg
xchg
dec
jo
jge
cld
mov
rcrl
sahf
bsr
xchg
lret
mov
and
stc
sti
sub
add
imul
jns
mul
xor
sub
or
add
mov
sbb
idivb
or
mov
push
push
neg
mov
mov
add
iret
pop
in
push
cmpsb
add
sbb
sbb
out
addb
lds
add
lods
fwait
cli
inc
xor
or
mov
insb
jb
and
mov
and
mov
es
adc
jno
adc
xchg
jns
xor
lods
scas
sbb
inc
xor
loop
or
or
subb
adcb
inc
sub
cmp
push
leave
xchg
mov
ljmp
clc
pop
mov
aaa
jmp
add
call
cli
pop
aas
inc
jbe
pop
push
andb
ret
clc
mov
mov
imul
jmp
dec
mov
add
in
les
dec
xchg
outsb
fsubr
pop
add
sbb
inc
cld
xchg
lret
and
jae
lret
outsl
loopne
push
clc
cmp
sub
addr16
inc
lock
jb
cmp
je
fsubrl
xchg
sub
lock
and
push
jns
sarl
ret
aad
adc
dec
scas
jle
mov
dec
adc
stos
pushf
je
pusha
mov
mov
sub
push
sarl
add
push
stos
mov
pop
sbb
add
dec
ret
stos
lock
push
xor
movsl
gs
dec
jb
pop
and
mov
cmc
test
es
xchg
mov
xchg
fldenv
aas
lods
sub
and
or
lahf
out
fadds
push
aas
fstps
mov
xor
lds
xchg
or
lret
push
sbb
xor
push
out
and
xchg
mov
inc
sbb
dec
les
dec
testb
sbb
push
push
mov
cmp
add
sub
adc
add
push
sbb
jbe
dec
pop
push
add
mov
sbb
fldt
fcmovb
js
dec
jae
lock
nop
std
add
adc
ss
jo
daa
and
or
add
repz
das
jle
in
aaa
repnz
shl
filds
pop
xor
cmpb
sbb
mov
mov
clc
lock
pop
add
or
hlt
lret
out
push
add
jle
mov
jmp
or
push
mov
pusha
in
sahf
int
scas
inc
dec
loop
movl
inc
in
or
jle
jnp
mov
fstpl
je
mov
or
xor
mov
pop
or
clc
fildl
loopne
ret
in
dec
cmpsb
mov
sarb
xchg
xor
xchg
fxch
fiaddl
xor
repnz
shll
iret
dec
and
popa
inc
arpl
cltd
pop
stos
mov
testl
push
or
inc
mov
test
pop
or
inc
dec
pop
int
xlat
xchg
ja
jbe
xor
ret
iret
outsb
pop
iret
inc
in
daa
ss
es
rcll
or
das
inc
mov
imul
nop
inc
lahf
and
push
imul
xor
subl
xchg
pusha
mov
mov
sti
outsl
xchg
dec
add
fstl
cli
movsl
and
sub
lock
inc
cld
add
cmp
rorl
sub
fisttpl
loope,pn
mov
stos
mov
cmp
out
xchg
or
xor
adc
leave
jl
notl
movsl
fs
mov
adc
dec
out
dec
in
sti
test
jmp
mov
mov
mov
adc
orl
fcoms
push
adc
inc
or
pop
std
mov
push
jmp
aaa
jecxz
repnz
jae
inc
icebp
push
test
mov
cmc
lret
gs
inc
xor
jmp
push
sahf
inc
mov
test
in
dec
imul
sbb
sahf
adc
ds
inc
dec
ficomps
cli
lods
pop
daa
inc
and
clc
xchg
mov
xchg
fcoml
mov
xchg
cmpsl
adc
pushf
movsl
cmpsl
push
mov
mov
pop
sub
test
lret
data16
or
addl
nop
lods
data16
fcomps
xchg
sti
dec
cli
bound
cmp
dec
sti
test
pop
lds
ljmp
orb
sbb
and
push
adc
add
rorl
mov
xlat
das
and
push
xor
fsubrs
jg
xor
stos
inc
out
dec
sbb
xor
xchg
cmpsb
adc
decl
test
mov
or
addl
add
ret
xor
ds
int
push
adc
ds
test
mov
fistpll
xchg
mov
sbb
stos
mov
iret
cmc
dec
and
sub
pop
mov
dec
and
jle
jbe
xor
xchg
adc
jge
pop
jmp
dec
xor
xchg
or
inc
mov
add
mov
mov
add
push
adc
pop
jmp
push
outsb
dec
int3
mov
pop
and
cmp
hlt
cmp
inc
popa
pusha
jnp
cmp
mov
cmp
ficompl
sti
gs
dec
aad
xor
arpl
xchg
cltd
in
bound
lods
andl
xor
xchg
movsl
adc
sbb
pushf
jns
push
fisubs
adc
inc
sahf
orb
imul
lea
addr16
lcall
insl
jmp
add
cld
push
addr16
stc
loopne
mov
mov
inc
shl
into
stc
cmp
mov
push
inc
fisubrs
xor
call
bound
iret
mov
mov
sub
mov
ret
push
popa
fwait
movsb
sbb
test
mov
or
popf
xchg
sbb
push
push
shl
sahf
mov
ss
cli
sarl
stc
sbb
insl
and
add
pop
xchg
push
addl
loop
sub
repnz
sub
mov
jo
xor
rcrb
push
push
dec
popa
fstpt
pushf
pusha
jle
sub
cwtl
in
jae
loopne
rcl
jecxz
mov
dec
stos
adc
xchg
lret
push
jo
add
mov
mov
and
mov
outsl
dec
outsb
ficoml
in
fdivrs
scas
adc
test
shl
jl
pop
adc
fdivl
ljmp
daa
xlat
arpl
cwtl
mov
inc
hlt
jp
xor
shld
xchg
mov
stos
test
dec
lods
imul
mov
push
test
int3
inc
addl
outsl
andb
movsl
ja
push
sbb
shlb
test
lods
dec
dec
popf
add
rol
push
sbb
push
mov
fistpll
add
je
push
aas
sbb
cmpsl
jbe
out
jmp
push
push
and
mov
in
mov
fisubrl
inc
xor
jl
cmp
ficoms
inc
inc
mov
gs
sbb
es
xchg
mov
fldenv
jle
js
aad
lds
mov
aam
loope
subb
jns
cmp
push
cs
shlb
mov
sbb
cmp
or
ret
mov
cwtl
jp
add
or
inc
fisubrl
jl
lods
xor
pop
xchg
sbb
gs
out
in
add
cs
into
out
jp
mov
loop
xor
test
out
in
mov
mov
test
out
push
hlt
push
test
add
arpl
mov
adc
lahf
lret
sti
mov
fsubr
ja
jmp
sbb
xor
and
jp
mov
and
push
movsl
dec
xchg
sub
and
jecxz
sub
pop
cmp
int3
xor
lock
movsl
insl
pop
pusha
mov
mov
inc
aad
aas
pop
iret
aad
lea
in
pop
xor
jnp
dec
test
xor
sbb
mov
mov
adc
ds
sbb
into
xor
adc
cmc
out
lret
mov
cmp
popf
cmpsb
add
and
lds
dec
inc
jl
sub
xor
enter
and
xor
gs
xchg
testl
mov
mov
inc
push
pop
sbb
popa
push
filds
or
movsb
iret
cltd
xor
pop
pop
sarb
cmp
stc
iret
hlt
mov
sub
mov
mov
push
hlt
push
cmp
ljmp
push
add
inc
sub
or
xchg
ja
mov
andb
xchg
push
mov
int
and
dec
add
jle
jnp
mov
cs
imul
add
mov
rcr
ret
stos
ret
mov
sub
dec
xchg
cmc
jmp
shlb
mov
dec
add
push
jnp
div
add
lcall
test
pavgb
hlt
pop
jmp
lret
ss
insl
fisttps
pop
movsb
push
in
mov
mov
jns
ror
iret
or
mov
inc
cmpsb
add
mov
inc
pop
std
xor
pop
pop
mov
mov
fdivl
sub
sub
icebp
decb
mov
sbb
call
adc
or
xacquire
adc
stc
push
jp
fs
inc
call
in
js
ret
imul
or
arpl
xchg
inc
push
push
mov
mov
xlat
fwait
or
jp
nop
pshufw
and
dec
jbe
pop
bound
xor
or
push
inc
pop
xchg
pop
loope
jle
jns
cmp
popf
dec
cltd
jnp
and
movsb
test
pop
lret
push
sarb
lock
stos
repz
iret
cmp
and
jb
pop
fs
sti
fsincos
mov
add
xor
mov
lods
addr16
iret
out
setl
jnp
pop
dec
stc
pop
stos
jle
cmp
dec
testb
cld
cmp
aam
push
dec
aas
lock
gs
mov
sahf
xchg
xchg
mov
inc
inc
sub
sub
cwtl
and
into
popf
jb
mov
lds
jae
inc
sbb
sahf
dec
ja
push
out
and
inc
inc
xor
jge
and
and
sbb
stc
xor
mov
sti
push
out
imul
scas
sbb
jbe
add
jne
sbb
push
rcrl
jo
popf
push
mov
mov
stc
pop
ss
inc
xchg
incb
jo
mov
and
mov
bound
sbb
push
adc
adc
inc
sbb
push
mov
jg
dec
pop
pop
jp
dec
lds
rorl
inc
lock
movb
xchg
mov
inc
sub
jns
lret
flds
xor
push
lods
cli
xlat
idivw
add
test
test
loope
push
sbb
mov
mov
mov
outsl
cmc
sub
aas
dec
dec
js
or
add
adc
cmpl
in
clc
rcll
adc
ret
pop
enter
test
call
mov
jmp
xor
dec
stos
push
sbb
mov
jae
jp
inc
jbe
lret
std
out
data16
sbb
jmp
cmpl
test
in
cmc
lods
in
cmc
faddl
lret
stc
xchg
shl
std
mov
jl
inc
jbe
subb
and
cmpsb
popf
xchg
xor
iret
xor
call
xor
pop
cld
clc
idivl
inc
lahf
orb
sub
add
lods
adc
mov
dec
cmp
push
outsb
push
fwait
dec
jg
fdivl
nop
fldenv
ror
outsl
mov
mov
and
dec
pop
adc
pop
insl
jbe
outsb
sub
cltd
add
outsl
daa
das
sbb
inc
int
arpl
mov
xchg
aaa
sti
mov
push
shl
and
jecxz
dec
jne
pop
negb
xchg
cmpb
or
adc
pop
cmp
shl
mov
xchg
push
cmp
push
in
mov
xor
add
xor
mov
fiaddl
push
jb
pop
or
cmp
repz
xchg
or
cmp
jbe
aas
cwtl
dec
jae
mov
decb
pop
or
push
imul
pop
adc
pop
notl
dec
adc
aas
shl
xchg
mov
pop
gs
subb
mov
pop
xchg
mov
xchg
outsb
xchg
push
mov
push
ljmp
pop
aad
and
push
shrl
dec
jo
loope
push
jecxz
sbb
mov
jnp
jge
mov
test
in
mov
subb
push
adc
xor
inc
out
cmp
push
mov
adc
push
inc
sub
or
sub
dec
xlat
ficompl
dec
cmpsl
lret
iret
inc
mov
fs
and
gs
cld
mov
cmp
fwait
jg
roll
pushf
pusha
cmp
lea
pop
cmp
fsubl
cwtl
inc
push
mov
jb
shl
daa
push
sbb
cmpsb
call
inc
insl
fwait
jns
pusha
aas
ljmp
mov
mov
out
clc
ljmp
js
lret
mov
out
mov
inc
pop
and
cltd
imul
repnz
js
stos
inc
lcall
lret
pop
sub
inc
inc
mov
pop
mov
cli
sub
push
cli
push
popa
ret
cld
adc
into
xor
into
adc
mov
ftst
loopne
pop
mov
out
xchg
cwtl
sbb
test
loop
xchg
jp
addr16
jp
pop
adc
icebp
push
push
mov
and
add
ss
push
fidivs
test
sbb
push
sbb
mov
shrl
js
test
jmp
ficoms
addl
adc
dec
test
push
adcl
add
jecxz
cmp
dec
adc
xchg
in
in
pop
loop
mov
sbb
xor
cmpsb
mov
je
xorl
xchg
movsl
xchg
add
imul
and
push
fmuls
cltd
pop
xchg
insb
fmull
dec
add
inc
pop
sbb
ja
mov
jmp
aam
outsb
mov
std
sub
orb
adc
shrb
mov
jnp
mov
add
push
jbe
sub
push
ffree
add
bound
inc
icebp
add
xlat
jp
nop
adc
bound
cmpsb
or
xchg
mov
xor
ljmp
mov
fistpll
push
push
lods
je
sbb
in
jo
xchg
push
outsb
pusha
scas
movsb
cmp
int3
sbb
add
push
scas
sub
hlt
or
jle
ret
nop
fcompl
mov
adc
push
das
lods
mov
jge
jo
and
dec
stos
xchg
inc
sub
dec
or
adc
mov
pop
inc
cwtl
mov
jae
rolb
loop
jb
lds
leave
jnp
dec
jns
cli
fadds
xchg
add
ljmp
std
xchg
cmp
jge
mov
jmp
je
mov
imul
mov
divps
inc
test
sti
xchg
nop
jl
adc
xchg
out
cmp
adc
mov
add
fwait
clc
adcl
movsb
cli
push
fs
cmp
push
jp
dec
jg
jmp
mov
or
fldt
cmpsl
dec
sbb
aad
adc
pop
call
pop
xorl
add
mov
cmpsb
push
xorl
pushf
xor
lock
push
out
pop
cmp
sbb
in
call
push
ja
mov
lret
sbb
push
arpl
add
cs
mov
sbb
mov
adc
in
mulb
push
mov
mov
data16
cmp
push
and
sbb
arpl
ffreep
ljmp
cmp
orl
mov
xchg
dec
adc
xchg
test
and
clc
jg
fistl
inc
out
dec
testl
sub
dec
arpl
enter
mov
aad
cld
dec
repz
ss
jne
in
test
inc
mov
inc
pop
hlt
xchg
xor
in
js
popl
les
dec
pop
xor
xchg
orb
pop
sub
cmpsl
and
adc
lock
sbb
lret
mov
adc
mov
dec
push
push
dec
inc
js
dec
je
hlt
ret
push
adc
clc
push
out
mov
pop
add
sti
xor
inc
inc
pop
xor
push
add
or
xor
ja
sbb
daa
popa
roll
cmp
ljmp
mov
xchg
xor
add
adc
adc
add
jns
adc
dec
idivl
push
add
and
push
lcall
outsb
in
mov
ds
popa
sub
lret
das
mov
das
or
pop
add
das
inc
or
inc
jp
loope
cmp
out
jno
adc
stos
outsl
sbb
leave
aas
mov
sarb
arpl
inc
repnz
insb
ja
or
ret
jmp
insb
inc
fsub
aam
adc
sub
in
inc
jmp
ss
mov
mov
imull
out
jb
insl
push
or
xlat
ja
lock
sar
add
push
rolb
inc
ss
cltd
xor
push
inc
pop
cld
xor
mov
fldenv
sbb
sub
cli
sbb
fadd
dec
jg
push
cmp
fdivrl
fs
test
outsl
mov
cmp
add
jns
test
dec
jmp
adc
repz
jno
icebp
push
push
lods
sub
cmp
jp
rorb
fwait
inc
sti
pop
sbb
push
add
jmp
mov
aas
cld
sbb
push
out
mov
pop
into
jns
mov
out
add
pop
cmc
test
jmp
push
iret
xchg
cmp
jg
out
xchg
rorb
mov
sub
sub
inc
or
mov
or
pop
fbld
pop
mov
xor
push
sbb
or
adc
les
enter
cmc
inc
jbe
lahf
push
addr16
cltd
lods
popf
mov
add
js
fisubs
adc
fstpl
out
orl
cmp
adc
xor
pop
inc
adc
movsl
jp
ljmp
sub
push
or
dec
test
mov
jl
rorl
xor
popw
xchg
movnti
outsb
mov
insl
test
push
into
lret
jbe
enter
inc
xchg
inc
pop
mov
stos
sbb
test
ljmp
dec
les
sbb
je
dec
and
xchg
fidivrl
mov
je
repnz
inc
mov
dec
jle
popa
daa
test
inc
sbb
or
cmp
jl
mov
test
stos
xchg
in
outsl
loopne
sti
clc
std
shll
xchg
mov
jl
jne
js
inc
das
lret
push
ret
lock
cmp
cmc
and
mov
xchg
fisttps
fs
mov
mov
neg
test
or
xor
adcl
cmpsb
pop
test
scas
push
push
xchg
and
in
pop
sbb
dec
or
fwait
push
xor
js
test
and
lods
pop
in
pushf
sahf
adc
das
inc
jmp
cmp
shrb
pop
xlat
testb
in
cmp
out
in
or
push
bswap
inc
loopne
push
mov
or
sub
push
nop
mov
or
xchg
add
sub
sbb
cli
mov
add
in
or
lods
mov
cld
roll
pop
pop
jae
xor
fs
or
dec
inc
cld
scas
mov
push
ds
xor
cmp
and
sub
fbstp
hlt
mov
adc
mov
lds
add
scas
out
in
push
clc
cmc
xor
sbb
cmp
mov
repnz
sbb
add
aaa
mov
cmc
adc
ret
cld
rcll
and
jb
cmp
out
mov
pop
and
and
cmp
add
push
dec
jbe
and
jecxz
lods
fldt
in
adc
insb
cmp
cmpsl
xor
in
repnz
or
es
pop
xor
adc
mov
cmp
xchg
data16
pushf
xchg
add
pop
pop
mov
test
inc
push
cld
lea
arpl
stos
dec
xor
jecxz
jp
or
push
mov
inc
call
sti
mov
out
or
inc
outsl
sbb
inc
adc
mov
loope
ret
aad
loope
aad
mov
inc
fcmovnb
cmp
push
dec
pop
add
scas
inc
out
imul
fwait
dec
sub
add
mov
push
lret
rcl
fisttpll
pop
lahf
lret
sbb
addl
outsl
add
fcomi
mov
push
inc
lods
mov
lea
xor
in
push
mov
and
xchg
fwait
and
mov
aaa
popa
sub
sub
and
mov
lock
popa
fdiv
jecxz
ds
hlt
jo
sub
nop
jo
mov
cwtl
mov
lret
pop
mov
lcall
subb
xchg
xchg
mov
mov
dec
adc
out
outsl
fmuls
or
inc
lret
rclb
xchg
lea
sub
sub
int
push
call
lods
out
add
inc
ficoms
das
or
mov
dec
rcrb
mov
push
addb
loope
pop
in
xor
xor
outsb
shrl
aam
xchg
sbb
mov
add
pop
cltd
lcall
dec
movsl
cmp
data16
jno
inc
mov
mov
jge
xor
movsl
mov
cmpsb
cltd
and
repz
repz
lds
jb
jl
in
push
pop
dec
std
adc
outsl
push
adc
jl
test
xchg
sahf
or
mov
daa
jmp
inc
ljmp
or
sub
call
into
xor
mov
cmc
arpl
jns
inc
addr16
push
movsb
leave
inc
dec
arpl
pop
mov
loope
cmp
mov
or
and
dec
loop
jge
pop
outsb
jmp
lea
inc
and
hlt
sbb
popf
movsb
add
and
pop
mov
add
sub
mov
xor
xor
jnp
add
insb
or
xlat
jl
orl
cmc
adc
xlat
sub
dec
nop
dec
adc
ljmp
pop
popa
mov
nop
pop
in
push
jae
push
mov
fwait
insl
cmpl
adc
adc
cli
cmp
adc
ror
or
test
sarb
scas
pop
and
loop
and
test
mov
add
add
rcrl
stos
insb
repz
outsb
mov
call
lods
xchg
mov
shrb
xchg
sahf
cmpl
call
push
mov
stc
out
or
or
fisubs
xor
fistl
inc
jbe
das
and
lahf
sub
arpl
cmp
inc
add
push
adc
fisttpl
sbb
sub
mov
and
sub
lock
inc
in
lret
jge
sub
cmp
push
pop
mov
xlat
sbb
xor
outsb
shll
gs
add
xchg
dec
popa
mov
or
ljmp
in
pop
stos
mov
fs
pop
shld
cs
test
sub
cmpsb
fisttpll
aad
dec
jmp
dec
es
mov
lods
in
dec
xchg
jl
and
cmp
dec
dec
xor
jl
pop
nopl
lock
inc
bound
or
pop
mov
mov
jl
pushf
dec
xor
mov
mov
jmp
test
dec
mov
mov
mov
jb
mov
insl
fs
cmp
push
jnp
add
jbe
mov
cld
lret
jp
out
shlb
jno
xchg
popa
pushl
push
dec
xchg
mov
movsl
mov
sti
mov
mov
cli
mov
or
test
inc
mov
dec
into
sbb
out
shrb
pop
xchg
or
inc
bound
sbb
hlt
mov
icebp
mov
in
arpl
test
jmp
mov
insb
cmp
sbb
scas
cmp
inc
adc
stos
mov
mov
insb
and
cli
mov
sbb
insb
and
inc
mov
jae
adc
mov
mov
repnz
jg
and
mov
repz
popf
rcll
xor
sub
ljmp
scas
insb
jo
and
roll
cltd
cmp
sbb
outsb
fld
ljmp
add
dec
mov
shll
inc
pushf
test
push
cmpsb
in
dec
jae
jl
mov
jg
into
xchg
and
xor
in
nop
lret
test
or
test
or
pushf
sub
insl
out
mov
mov
sub
scas
sub
xchg
xchg
je
pushf
mov
mov
clc
or
inc
mov
outsl
in
idivb
adc
into
insb
iret
sub
pusha
dec
and
inc
pop
clc
or
rolb
and
inc
pop
lds
mov
decl
lds
cmpsl
iret
imul
out
sub
xchg
int
xchg
add
iret
cld
test
xchg
pop
je
mov
hlt
pusha
cmp
data16
notl
mov
pop
xlat
insb
rorl
int
int
adc
in
lret
jle
icebp
dec
outsl
cmp
in
test
in
mov
jecxz
ja
add
push
sbb
xor
test
lods
aam
imul
in
pop
sub
sbb
clc
nop
mov
in
sub
or
jo
arpl
pusha
xor
sbb
aad
cmp
cli
push
out
std
xchg
xchg
xchg
push
repz
jae
xchg
jle
mov
loope
repz
adc
jg
fdivrs
js
push
clc
ds
imul
fcmovb
mov
stos
dec
mov
xchg
cmp
jns
pop
in
stos
lock
mov
cmpsb
ds
adcb
cmp
out
mov
and
or
inc
xchg
inc
jns
mov
xchg
inc
add
fwait
repnz
push
std
test
shrb
fisubl
outsl
call
stos
mov
xor
sbb
outsl
mov
movsb
out
jno
cmc
xchg
pop
push
or
mov
cld
ds
push
jg
sbb
es
jecxz
out
fsubl
stos
jge
pmaxsw
mov
fildl
movsb
xlat
pop
mov
push
xchg
mov
mov
dec
mov
pop
leave
cmp
cmp
dec
in
fldt
sbb
inc
cld
sub
dec
fnsave
pop
cmp
push
popf
add
or
inc
cmp
sub
jmp
fs
push
lea
xor
popl
dec
out
sub
mov
xchg
lock
pop
in
dec
enter
pushf
popf
sbb
mov
cmpsb
sbb
push
xchg
xor
shll
fdivrl
cmp
add
push
fwait
xchg
roll
lods
in
push
push
cmpsl
xchg
sub
sub
mov
add
daa
add
sub
fdivl
in
in
cmp
stos
xor
push
test
xor
ss
and
scas
push
adc
sbb
test
xchg
sbb
in
outsl
or
inc
and
fcmovb
sbbl
sbb
push
cld
and
rorl
sbb
xchg
pop
out
ds
jecxz
rorl
ret
or
cmpsb
push
and
pop
adc
jecxz
loope
adc
mov
or
add
mov
jecxz
in
lock
xlat
out
mov
mov
movsl
and
lods
loope
sahf
lods
nop
xchg
repnz
push
push
idivb
jmp
mov
pop
push
adc
jge
daa
addr16
adc
sbb
mov
xchg
bound
inc
out
cmpsb
in
testl
xor
mov
adc
imul
mov
push
lea
or
mov
sbb
adc
cmp
jg
jmp
push
sahf
out
add
sub
out
add
xchg
pusha
fs
xor
shlb
or
mov
xor
push
test
insl
call
mov
in
test
sub
ds
inc
lods
mov
dec
xor
ss
inc
dec
leave
xor
sub
test
jbe
jb
out
xor
sti
sub
add
insb
bndstx
arpl
arpl
cmp
out
insl
inc
cld
mov
pop
xchg
stc
jns
out
sti
pop
jne
xchg
aaa
jmp
sub
xchg
and
pop
mov
dec
imulb
inc
loop
xor
repz
push
lcall
push
jae
inc
dec
jns
dec
add
mov
cmp
or
push
in
cmp
cli
jp
popa
scas
std
fldcw
adc
cwtl
sahf
push
push
mov
cld
lea
or
je
inc
daa
pop
cmp
inc
std
lret
in
lods
sbb
jecxz
mov
jl
adc
test
sub
rorl
jb
jo
jmp
xchg
mov
xor
sub
hlt
repz
mov
and
mov
out
mov
cmc
fnclex
das
xlat
push
push
test
sahf
aad
or
pop
mov
sbb
mov
jb
adc
inc
mov
imul
or
rcr
repz
loope
rolb
pop
mov
push
int3
dec
sbb
out
xor
push
push
cmpsl
push
xchg
lret
pusha
insb
mov
out
and
dec
cmp
insl
jecxz
push
mov
add
xor
mov
jnp
aam
notb
push
cmp
in
pop
test
cmpsl
insb
les
jo
notl
dec
add
push
lods
lds
xchg
leave
aas
add
sub
pop
int3
ja
push
push
ds
xchg
in
cmp
or
lds
aad
outsl
mov
lds
pop
adc
mov
enter
aas
bound
pop
out
dec
sbb
outsb
push
jns
ja
scas
push
roll
gs
movsb
add
mov
mov
in
test
les
movsb
jb
inc
xchg
imul
sbb
in
dec
sbb
jnp
pop
jb
push
add
sub
add
xlat
cltd
jecxz
jb
inc
xchg
aam
mov
jae
loopne
dec
in
aas
scas
push
sbb
inc
outsl
ret
adc
aas
into
xlat
jp
jmp
out
jo
sub
pop
jmp
shl
into
sbb
in
jbe
dec
ret
or
inc
dec
popf
sahf
xor
sti
xchg
cmpsb
jne
icebp
rorb
pop
repnz
jl
xlat
jno
cmp
add
scas
mov
and
mov
sbb
cmc
mov
paddusb
popf
stos
dec
add
cmp
sbb
jle
cmp
insb
stos
pop
pop
mov
sysexit
xchg
test
inc
push
push
ljmp
dec
aas
dec
hlt
add
or
push
mov
gs
jns
jae
adc
cmp
shlb
push
xor
cs
pusha
in
popf
push
adc
pop
xchg
es
insb
lods
std
in
test
mov
adc
addr16
loope
popf
jb
mov
fisubrl
fs
fistpl
cs
in
hlt
pusha
movsl
hlt
ja
sti
filds
rorb
xchg
loopne
adc
stos
pop
add
jl
adc
gs
xchg
pop
in
iret
int3
mov
out
mov
dec
add
inc
pop
stos
add
jbe
repnz
pop
mov
jmp
data16
hlt
xor
push
pushf
mov
add
push
or
xor
mov
sahf
or
fwait
jl
xchg
stos
and
sub
lods
and
aam
push
sbb
dec
int3
mov
pop
int
xor
cwtl
mov
sub
jmp
sub
cmpb
dec
inc
shlb
andl
mov
jnp
lcall
jle
cmp
or
repnz
fistpll
push
aas
sahf
jns
pop
and
add
pop
push
leave
jmp
fistpll
lds
loope
mov
dec
movsl
mov
ss
into
cs
inc
pop
jae
stc
aad
aas
dec
mov
out
fwait
mov
push
or
mov
cwtl
cld
mov
xor
popa
dec
mov
insl
in
xchg
and
and
mov
dec
arpl
xor
sub
rcr
jg
lcall
mov
inc
dec
push
arpl
dec
mov
hlt
push
loop
xlat
sbb
lds
addb
ficomps
or
and
push
pop
shrb
addb
incl
popf
or
push
mov
jo
adc
push
clc
aad
int3
ja
jno
push
mov
or
js
xchg
add
mov
sahf
and
adc
fwait
adc
fmull
cmpsb
xchg
jnp
xlat
mov
inc
lods
inc
push
cmpsl
movsb
in
ds
add
xchg
mov
jg
adc
int
in
mov
push
jae
jno
out
sub
xlat
ds
dec
fisubrs
cwtl
aas
jecxz
xorl
in
mov
dec
mov
arpl
push
adc
in
int
lahf
nop
imul
xchg
sub
ss
push
sahf
es
and
je
bnd
jmp
fidivrl
push
xchg
leave
gs
outsb
outsb
and
mov
cs
loop
int
cmp
dec
lea
into
aaa
std
in
xor
leave
lods
lret
mov
push
fcoms
xchg
rcr
and
jno
inc
iret
dec
test
aam
jno
rolb
jmp
inc
sarb
dec
pop
xchg
inc
jle
adc
lret
jge
aam
dec
mov
pop
pop
or
js
sub
ret
dec
jnp
sub
insl
pop
dec
pop
cmpsb
ret
sbb
incl
insb
push
ret
adc
lret
sbb
inc
nop
jns
dec
xchg
push
adc
sbbl
push
addb
push
adc
js,pt
fdivs
sub
push
insl
jbe
test
nop
in
in
jg
adc
jl
popa
sbb
data16
imul
cmc
push
cmpsb
push
add
int
xor
dec
cmpsl
fsubl
xlat
xor
shr
fisubl
push
out
and
movsl
or
and
mov
push
add
mov
jo
dec
add
aaa
dec
mov
pop
inc
mov
fildl
mov
pop
loope
cld
mov
or
or
jnp
fdiv
fisubrl
imul
js
and
sub
les
mov
jecxz
fbld
repnz
addr16
cwtl
xor
cmpsb
fldt
and
test
jge
fs
divb
xchg
dec
shr
aam
cmp
and
mov
cs
fisubl
xchg
pop
fimuls
icebp
pop
icebp
xchg
dec
push
fiaddl
mov
adc
loop
pop
jl
adc
aad
sub
add
clc
xlat
and
stos
mov
or
adc
mov
adc
or
inc
push
je
insb
in
inc
fs
mov
mov
movsl
mov
les
es
sti
xchg
jne
xchg
push
pusha
cltd
push
imul
shl
in
insb
inc
adc
jg
jecxz
test
out
push
mov
or
pop
hlt
adc
mov
xchg
pop
aam
mov
mov
loopne
mov
xor
sbb
fcomps
stos
fildl
or
sub
mov
fnstcw
xor
incb
cmp
push
sbb
cld
add
cmp
adc
xchg
fst
movsb
fdivrl
or
xor
mov
shll
in
pcmpeqw
adc
jmp
dec
inc
test
sti
lcall
pushf
jno
mov
inc
sahf
adc
jecxz
mov
std
scas
pushf
mov
pop
mov
and
loop
in
arpl
mov
loope
push
pop
pop
out
sbb
mov
repnz
xor
outsb
test
into
add
loopne
inc
popf
fdivrl
pop
sub
mov
pop
rol
sub
hlt
dec
xlat
add
negb
jecxz
and
ss
add
cs
ret
sub
lods
jns
lret
pop
xchg
inc
mov
sbb
mov
das
les
imul
inc
sbb
push
or
pop
fidivrs
sbb
nop
push
pop
push
jns
fdivs
mov
in
outsl
bound
loopne
xchg
dec
pop
add
or
dec
and
addr16
push
mov
push
dec
pusha
stc
scas
cmp
mov
cmp
dec
ret
mov
jmp
test
dec
sbb
mov
cmp
sbb
pop
iret
negl
leave
sbb
push
imul
outsl
sub
icebp
mov
fxch
mov
jae
ss
mov
mov
arpl
xor
outsb
sti
inc
push
fs
sbb
test
cmpsb
popa
ret
xor
pop
mov
push
xor
call
in
adc
jb
or
pop
je
leave
rcrb
jae
mov
fldt
xchg
test
or
add
fmull
mov
cld
mov
test
pop
sti
and
sahf
mov
stc
stc
mov
stos
lcall
xchg
and
xchg
adc
in
push
out
mov
out
push
aas
sbb
cmp
and
neg
fwait
xlat
out
xchg
xor
into
cltd
test
jae
jecxz
jge
incb
fildl
inc
mov
adc
ja
jp
fdivl
sbb
int3
cmpb
dec
sets
xchg
xchg
sbb
mov
push
add
test
add
or
pop
inc
push
inc
adc
subl
add
push
jb
jmp
test
jne
push
sub
dec
cltd
std
js
out
jl
push
xchg
pusha
and
adc
loop
push
inc
cmp
loopne
outsl
xor
push
dec
shll
xchg
mov
or
sahf
xor
cmp
push
sub
out
mov
lahf
cmp
pop
popa
sub
shlb
fcmovbe
sub
jge
out
insl
shlb
pusha
popf
mov
cmp
sub
sbb
movsb
mov
leave
or
je
mov
adc
sub
sbb
leave
mov
addb
inc
lcall
int
sub
xchg
data16
and
mov
test
fdivrp
inc
outsl
pusha
pop
mov
bound
push
cmp
hlt
inc
pop
cmp
fldenv
fbld
sbb
inc
mov
mov
pop
xor
dec
stos
inc
pusha
insb
roll
imul
es
mov
push
dec
sahf
mov
push
and
xor
add
inc
xorl
and
xchg
pop
mov
pop
pop
xchg
mov
notb
mov
xor
in
mov
andb
stos
xchg
out
scas
ja
fldenv
in
add
add
ja
jl
pop
push
idiv
outsb
mov
mov
push
loopne
outsb
outsb
sbbl
adc
scas
pop
stc
test
push
push
lods
aas
bnd
pushf
and
lods
push
dec
mov
icebp
pop
into
mov
lds
push
test
into
or
cwtl
mov
xor
fsubrs
cmp
out
jecxz,pn
xchg
mov
mov
mov
lds
push
fildl
arpl
mov
in
xchg
mov
dec
es
or
adcb
iret
fildll
adc
ljmp
sbb
mov
fnstsw
push
dec
sub
aas
loopne
pop
in
xchg
push
add
lret
sar
sub
sahf
or
sub
dec
fisubs
in
lods
xchg
and
psubq
or
jmp
xor
fcomps
fs
cmp
mov
xlat
fnstsw
aas
pusha
ret
xchg
fidivl
stos
mov
jecxz
cmpb
and
cmp
loop
xchg
mov
cmp
pop
mov
nop
jge
pop
shll
aas
push
sbb
repnz
cltd
xor
sti
icebp
or
xlat
jno
les
lock
pop
fcmovnb
sbbb
sub
mov
pop
test
roll
ds
mov
ror
in
jmp
jecxz
jne
repz
arpl
pushf
popa
and
sbb
mov
pop
inc
clc
jne
add
cwtl
pop
or
addr16
and
and
cmpb
dec
cld
dec
push
cmp
loop
add
cmp
push
inc
test
aaa
adc
ljmp
imul
idivl
fnstenv
dec
call
fcmovne
insb
jl
push
jne
mov
pop
mov
gs
xor
pop
fwait
in
mov
cs
int
cli
xlat
in
ljmp
pop
jo
stos
mov
mov
scas
out
notb
mov
repz
mov
jge
lea
cwtl
adc
inc
mov
addr16
xchg
push
das
mov
cmp
scas
xchg
mov
adc
or
ss
aad
lahf
daa
push
inc
xchg
cmp
inc
and
enter
ficoml
xchg
pop
xchg
cmc
imul
sub
outsb
je
out
fmuls
mov
mov
sbb
cwtl
in
aad
lcall
add
jb
jae
mov
out
add
cmp
jns
adc
xsha1
cmpsb
bswap
and
sub
js
sub
ror
and
lods
mov
add
loope
pop
movsb
lea
cmp
call
popf
jg
pop
mov
mov
ss
jae
xchg
xchg
push
lods
dec
leave
jns
dec
add
push
pop
pop
cli
xchg
xchg
loop
mov
mov
and
ds
stos
test
movsb
popf
ret
fdivl
sub
into
mov
in
mov
imul
jge
rcr
mov
cli
fwait
adc
sbb
or
lahf
int
sbb
pop
dec
popf
adc
and
adc
mov
stos
jo
out
adc
stc
xlat
cmp
stos
or
xor
or
xchg
push
add
dec
mov
mulb
sbb
xchg
test
test
xor
jecxz
dec
arpl
shlb
push
and
pop
pushl
jecxz
inc
mov
cmp
pop
cmp
cmp
aas
sarl
pop
into
aam
pop
cwtl
fcoml
shlb
jbe
dec
movsb
cmp
outsb
outsb
scas
dec
rcrb
jns
movsl
in
js
xchg
daa
frstor
and
push
push
mov
bound
push
push
in
repz
xor
sbb
bound
push
lds
fdiv
and
xchg
push
cld
cmp
lret
ficoml
mov
jmp
iret
fs
xchg
mov
rclb
sbb
hlt
ds
cmpb
negb
mov
mov
fdivrl
mov
jmp
std
dec
in
int3
in
pop
mov
aaa
sbb
xor
jg
pop
mov
lcall
dec
mov
insl
mov
sbb
xor
cmp
sub
push
jmp
imull
pop
push
cwtl
mov
pop
push
jp
lods
adc
sbb
push
xlat
mov
cmpsl
and
dec
jp
shlb
gs
dec
cs
pushf
mov
inc
pop
inc
jmp
dec
repz
pop
lcall
mov
insl
mov
notb
xor
in
repnz
daa
adcb
arpl
push
pop
test
out
sbb
movsl
jge
out
xchg
std
addr16
inc
aad
sarb
imul
rcll
negb
loopne
jmp
movsb
pop
sub
mov
sub
out
popa
outsb
lods
xchg
add
movb
adc
mov
xchg
xor
movsl
or
mov
sbb
in
or
notl
mov
js
push
mov
imul
jp
call
outsb
mov
mov
movsb
shlb
sbb
sub
inc
mov
insb
into
mov
fstl
jg
xchg
fists
lret
mov
or
pusha
cmpsb
es
and
push
outsb
out
cld
pop
sahf
or
aaa
icebp
mov
xor
dec
or
imul
jb
mov
jmp
dec
dec
cmc
and
int3
pop
cmp
mov
mov
out
jmp
mov
mov
jecxz
sbb
or
mov
pop
or
mov
je
xchg
pop
xlat
xchg
and
inc
fs
xlat
sub
adc
add
pop
aas
xchg
mull
fcmovb
imul
or
mov
test
icebp
or
mov
ret
mov
fsubs
cmc
xor
pop
mov
jmp
push
mov
mov
pushf
jg
roll
sub
ja
adc
xor
xor
shll
out
lds
repz
inc
and
adc
movsb
cmp
leave
lcall
test
push
clc
cmpsl
jbe
je
dec
shlb
mov
and
jg
leave
xchg
push
cmp
movsl
xchg
leave
or
and
cmp
imul
cwtl
mov
xchg
jae
or
test
push
mov
inc
in
mov
inc
iret
dec
fstpl
repnz
in
rcr
popa
into
in
subl
add
test
out
mov
icebp
sub
and
inc
xchg
out
fsubrl
ss
shl
fdivs
lcall
inc
push
ss
inc
gs
mov
ja
pop
xchg
fwait
mov
mov
or
add
cmc
mov
fists
mov
loope
subl
adc
and
adc
ret
pop
subb
jle
fisttps
test
scas
push
outsl
jno
roll
icebp
pop
data16
inc
and
sbb
lock
stos
test
jp
lret
rcll
mov
mov
pop
jae
and
inc
sbb
xor
outsb
sub
mov
cld
pop
in
test
mov
push
pop
mov
fildl
cmpb
repz
fsubs
add
test
adc
xchg
test
pop
adc
leave
xchg
icebp
inc
out
mov
sti
fcoml
push
das
push
pop
and
lret
xchg
xor
dec
js
pop
out
nop
out
inc
scas
lahf
in
and
nop
pop
int3
test
adc
sti
leave
cltd
inc
add
mov
inc
fidivl
cmc
jne
push
mov
cld
mov
adc
mov
dec
jns
arpl
xchg
xchg
xchg
jp
out
jl
push
xor
scas
jl
sbb
movsl
sub
hlt
add
enter
pop
pop
cmpsb
jl
cmpsb
jge
xchg
xchg
and
int3
pop
xor
pushf
pop
push
daa
dec
sub
in
add
xchg
or
test
add
out
ljmp
jb
test
shlb
arpl
pop
dec
sub
cwtl
repz
jge
push
xchg
rcrl
loop
fs
pushf
sti
or
shrl
aad
lret
pop
jecxz
push
mov
stos
dec
ja
cmpsl
pop
push
sbb
adc
cmc
loop,pt
mov
out
test
sub
dec
into
ja
mov
orb
push
add
xchg
jg
cmp
add
je
xchg
jle
sub
inc
call
cmovg
mulb
jmp
jns
fwait
jb
mov
into
fmul
aas
xchg
lcall
repz
jne
ja
lahf
push
or
mov
cltd
shl
shll
jno
sbb
ljmp
fists
mov
mov
cli
dec
mov
icebp
loop
aad
xchg
mov
inc
fwait
dec
sub
into
xchg
inc
out
ss
xchg
in
mov
lcall
mov
mov
sbb
fcmovnu
or
xchg
fs
adc
shrl
sub
sti
mov
xchg
and
or
sub
pop
jne
mov
sub
in
icebp
shrl
gs
int3
fdivrl
cs
mov
sub
outsb
dec
rcrl
es
inc
aas
cmp
mov
sub
iret
mov
sahf
jl
add
pushf
ret
arpl
jle
pop
cs
sub
dec
mov
and
call
xchg
outsl
ja
sub
loopne
xor
dec
sub
and
ficoms
push
xor
cltd
std
aad
test
stos
test
lcall
jnp
xor
inc
cmp
lret
and
push
fistpl
inc
test
fisubrs
cmp
out
idivb
cmp
xchg
sbb
lret
sbb
stos
xor
cltd
push
jns
icebp
mov
xlat
adc
jge
push
imul
sahf
jb
jp
and
mov
mov
adc
pushf
movsl
js
adc
daa
iret
or
arpl
cmp
and
insl
lock
push
out
adc
hlt
push
mov
jmp
adc
jnp
lcall
adc
lahf
test
mov
cmp
jnp
xchg
mov
int
xchg
dec
fimuls
adc
xchg
test
pop
or
mov
aaa
dec
rcll
shl
adc
jle
loope
in
es
pop
loop
inc
in
or
fildl
orl
jmp
mov
fcmove
cmp
dec
mull
push
mov
pop
inc
xchg
in
std
lret
ficompl
in
call
mov
shlb
mov
add
mov
lcall
pusha
cmp
data16
iret
popf
cmpsb
in
push
mov
mov
cltd
push
ljmp
ret
and
int
cmp
or
test
stos
pop
cmpb
jnp
fmuls
js
je
sbb
push
sahf
je
pop
inc
adc
inc
adc
pop
mov
inc
cmp
ret
movsb
fildll
les
mov
pop
jp
jbe
lret
fldcw
pop
mov
fcoml
and
mov
pop
rorb
mov
stos
cld
in
sub
mov
mov
ret
jae
hlt
outsb
subb
rolb
popa
insb
pop
iret
mov
adc
fucom
faddp
mov
test
inc
mov
pop
add
scas
std
adc
lcall
int3
dec
loopne
add
cld
rol
mov
push
aad
cmpsb
xor
xor
movsl
leave
test
cmp
ret
sbb
leave
cld
push
adc
test
mov
mov
idivb
mov
adc
leave
inc
into
adcb
daa
adc
mov
out
mov
loope
aam
call
rorl
fstpl
inc
scas
icebp
test
dec
lods
sarl
lds
mov
js
ror
bound
clc
jg
lods
scas
jne
in
cld
lods
arpl
fcompl
mov
mov
jno
xor
xor
stos
inc
cmp
sarb
and
std
call
cld
ret
pop
pop
pop
hlt
or
inc
mov
inc
or
out
outsb
repz
xor
cmpsb
pop
sub
mov
xchg
insb
push
sarl
sub
lock
cwtl
add
insb
popf
jae
jnp
stos
bound
push
push
inc
pop
cwtl
mov
decl
es
cmpsl
gs
sbb
subl
outsb
lock
jmp
dec
and
push
inc
jl
add
dec
sbb
push
mov
roll
cli
pop
cmp
daa
cmp
dec
sub
jg
adc
int
or
push
ds
ficoms
test
push
xlat
jbe
je
sub
sbb
cmp
adc
fbld
imul
cmc
or
xor
sub
mov
movsb
cmpsl
jb
pop
mov
adc
ja
xor
js
push
cmp
orb
pop
jl
popa
and
setb
xchg
insb
jae
adc
or
loopne
enter
testb
cs
fimull
xchg
fsubrp
add
mov
push
and
scas
lret
dec
lods
pop
popf
clc
pusha
or
adc
xor
add
fildl
pop
repnz
push
lret
mov
cmp
jmp
xchg
imul
xchg
sub
cmpsb
xorb
push
adc
adc
push
sub
xor
jle
mov
jbe
imul
dec
sbb
mov
out
sub
int
mov
outsb
int3
jle
mov
push
adc
mov
fmuls
shrl
mov
and
nop
stos
jae
lods
out
push
stc
xlat
leave
jno
jne
dec
in
mov
cmp
xor
lock
je
jmp
stos
inc
push
mov
ret
push
cmpsb
outsl
sub
pop
xchg
arpl
jmp
sbb
negb
scas
add
adc
xchg
addr16
stos
call
outsb
xchg
lods
jle
daa
dec
movsb
mov
es
adc
popf
loopne
pushf
sahf
xchg
lahf
xchg
xchg
push
jb
lods
cld
shr
mov
scas
xor
inc
in
into
int
aaa
xor
mov
std
adc
out
or
cmp
lods
movsb
enter
inc
pop
mov
enter
sub
or
dec
xchg
mov
in
pop
scas
and
lea
xchg
push
ret
pop
insl
test
jmp
fsub
adc
fldenv
xor
daa
out
jmp
ret
cmp
xchg
sbb
pop
flds
shl
test
dec
and
mov
adc
mov
fs
dec
js
shrl
aas
arpl
fcmovnbe
movsl
rolb
jle
orb
adc
imul
mov
jbe
inc
ret
jp
push
pop
and
int3
xchg
mov
pmaxsw
jb
hlt
enter
subb
or
jo
jecxz
leave
or
fstpl
movsb
out
fs
lret
jns
sbb
imul
mov
cwtl
xor
xchg
pop
push
sbb
aam
adc
jnp
cli
sub
lahf
std
lcall
imul
mov
sbb
and
das
test
sbb
add
in
jl
ret
and
cmc
sbb
add
mov
sbb
bound
inc
hlt
imul
mov
stos
sbb
daa
pop
pop
mov
lret
fcom
or
pop
lods
aam
xchg
push
in
pop
inc
pusha
pop
sub
out
jg
xchg
call
daa
or
dec
pop
sbb
pop
dec
js
sbb
fs
adc
mov
test
rorl
cmovl
andb
pop
aaa
push
mov
insl
addb
push
fwait
imul
jg
in
sbb
insl
in
xchg
mov
sub
cmp
push
xchg
sbb
sbb
mov
sbb
xor
scas
xor
sbbb
xchg
xchg
movsl
dec
popa
decl
xor
hlt
ds
push
xchg
imul
aam
cmp
aam
lods
fs
cltd
add
jg
push
mov
imul
dec
push
cmc
lahf
lods
pop
pop
lret
sub
xor
sarb
pop
lahf
stc
sbb
or
push
mov
dec
lock
div
cld
sub
sub
or
fucomp
mov
popf
rcll
add
testb
fmul
add
cli
add
stos
jne
sub
sbb
add
fcom
imul
sub
xchg
out
sub
push
pop
imul
daa
and
dec
shll
addr16
in
and
xchg
pop
push
sbb
cmp
push
mov
mov
sbb
pop
xchg
mov
xchg
lea
flds
enter
add
std
stc
cmp
push
xor
mov
pop
adc
jo
lret
and
movsl
pop
idivl
pop
mov
xchg
xor
in
pop
movsb
lahf
rcrl
mov
push
add
adc
nop
out
mov
out
lods
inc
fdivp
mov
enter
es
popf
movsl
sbb
lcall
mov
push
addr16
pop
enter
jne
popf
pop
cld
es
decl
ret
fmull
xchg
sbb
inc
lods
adc
repz
movsb
xchg
cmp
mov
or
jp
xor
fwait
push
inc
push
adc
cs
jl
in
imul
lds
dec
idivb
ljmp
in
add
stc
xchg
shlb
enter
sub
daa
sub
sbb
add
rolb
sub
pop
aaa
lods
add
shll
add
cmp
fwait
aad
cwtl
jle
mov
mov
jnp
cld
push
add
sub
mov
jbe
add
scas
push
insb
mov
mov
add
cli
mov
popl
sub
pop
in
dec
lahf
shr
div
pop
ljmp
add
in
in
adc
jp
in
subb
aad
jbe
popf
icebp
ja
daa
bound
mov
cli
sub
sbb
jne
insb
or
cmc
insb
cs
rcr
ret
sarl
xor
push
aad
mov
sub
inc
mov
xchg
inc
inc
mov
mov
mov
add
sti
inc
into
cmc
xchg
xchg
daa
lahf
xchg
mov
insl
mov
pushf
cmp
push
scas
lahf
mov
mov
cld
insl
lret
in
fdivl
lcall
sbb
lret
int
cmp
mov
adc
mov
push
roll
dec
mov
or
pop
aam
or
test
jnp
sti
jmp
popf
ljmp
sbb
or
ret
int
xchg
cli
aam
loope,pt
cmp
stos
lret
fisubs
inc
cmpb
js
repz
cmp
mov
faddl
pushf
xor
sub
mov
sub
or
cmpsb
in
lods
push
lds
pop
pushf
pushf
jae
add
cmpl
pop
dec
mov
test
add
data16
jg
pop
push
fisubrs
hlt
lds
cmpsl
adc
xor
or
lret
test
ds
fildl
adc
fwait
negb
ret
sub
negb
inc
xchg
fistl
test
cltd
ret
in
insl
cmp
loop
popf
cmc
lds
jg
sub
push
pop
btc
mov
iret
sub
div
add
cld
xchg
push
xor
das
or
adc
and
push
fidivrs
dec
or
rol
popf
or
sub
pop
gs
fcomp
testb
divl
sub
and
rorb
lret
or
call
aam
mov
jle
cmpsb
mov
inc
cmc
xor
sbb
dec
mov
aad
stc
cmc
mov
inc
fmuls
fs
push
pop
stc
test
aad
pop
pop
shll
xor
fstpt
cmp
cmp
cmp
adc
je
mulb
js
adc
push
mov
data16
int
scas
push
loop
fnstcw
cs
cmp
dec
sub
add
cwtl
sbb
ss
cmpsl
dec
add
and
sbb
aam
sbb
hlt
jecxz
mov
test
mov
cli
cld
add
nop
mov
xchg
in
fs
adc
sbb
fsub
imul
inc
push
pusha
fwait
dec
pop
aad
inc
jne
jp
sarb
movsb
inc
and
cmp
sub
in
fldl
or
jbe
mov
or
mov
cmp
lret
pop
sub
cld
outsb
sbb
inc
xchg
in
jns
popa
jge
mov
test
fucomp
push
std
inc
cmpsb
out
pop
insl
xchg
pop
insl
mov
call
xchg
hlt
xor
hlt
pop
or
cmp
rolb
or
adc
mov
xor
jmp
repz
shl
loop
mov
jp
daa
inc
stc
jno
loopne
sbb
add
inc
xchg
mulb
inc
fsubrs
roll
jae
je
inc
call
pusha
out
xor
sub
leave
mov
icebp
push
les
std
lea
outsl
mov
call
les
scas
lret
shll
inc
sub
and
sub
and
jp
pusha
sub
dec
push
and
push
adc
das
cs
mov
scas
nop
bound
or
sub
daa
movsb
add
cmp
pop
add
mov
cwtl
adc
dec
dec
pop
push
mov
or
jecxz
push
stc
out
test
xchg
ret
push
cltd
cmpsl
push
dec
aad
gs
dec
pop
cwtl
in
and
cmp
cmp
cmp
out
cltd
or
push
fstpt
mov
cmp
stos
mov
imul
in
mov
and
mov
in
cmp
pop
pop
jb
fnsave
adc
push
sub
ret
outsb
push
mov
jl
clc
jp
mov
jns
outsb
sbb
mov
mov
int3
xor
push
sub
fnsave
mov
jbe
sahf
lock
daa
dec
popa
filds
mov
jecxz
popa
push
dec
stos
dec
inc
shl
cli
andb
sbb
ret
sub
cli
pop
cmc
mov
data16
imul
inc
repz
or
repz
cltd
add
mov
iret
jecxz
xchg
push
jno
xor
into
pop
push
push
cwtl
push
xchg
jle
xor
rcrb
outsl
sbb
test
mov
adc
fcmovnbe
fwait
sub
sbb
mov
je
pop
adc
sbb
nop
dec
or
xor
into
mov
js
lock
or
into
xchg
mov
cmpsb
rorb
fmull
and
aas
call
lock
insl
das
mov
sbb
lock
mov
sub
xchg
movsb
jecxz
sti
lahf
xchg
cmc
mov
adc
sbb
notb
mov
mov
leave
into
lret
jge
je
push
jbe
dec
lds
mov
outsl
push
xorb
loopne
pop
in
in
out
adc
out
out
and
push
and
mov
jne
inc
add
aas
scas
fninit
mov
mov
leave
mov
test
cltd
je
mov
fnstcw
and
sbb
jno
addr16
mov
sbb
sbb
aam
orb
pusha
out
rol
mov
enter
and
popf
jbe
in
ret
lret
sub
je
sahf
out
ds
xor
xchg
xchg
mov
in
sub
add
aas
pushf
inc
push
xchg
lock
push
push
hlt
jg
mov
into
movsl
fsub
jb
scas
js
in
pop
test
or
mov
ret
fcmovnb
jne
xchg
popf
and
cli
mov
mov
es
shll
aam
jmp
outsl
stos
add
jecxz
aas
mov
in
mov
dec
pop
xchg
cmp
nop
adc
add
push
in
mov
cs
rcl
icebp
test
das
mov
cld
mov
jo
add
into
mov
movsb
lods
jmp
and
out
xor
mov
inc
or
push
xor
sti
mov
xor
mov
rclb
jno
outsb
push
bound
test
lea
fldcw
sub
and
mov
push
cmp
mov
insb
mov
dec
push
adc
cmp
pop
xchg
call
jl
and
mov
xor
pusha
inc
scas
xor
and
out
add
mov
inc
sub
sub
rol
cmp
push
jle
pop
inc
cmc
adc
mov
loop
mov
aas
and
int3
adc
pusha
add
push
test
rcll
inc
and
daa
dec
dec
fidivrs
cli
pop
xor
mov
outsb
shll
nop
xor
pop
xor
adc
std
nop
sub
ficompl
shrb
dec
pop
or
cmp
outsb
xchg
adc
add
jmp
sti
mov
jb
js
sbb
or
ss
xchg
adc
xchg
pusha
mov
adc
clc
imulb
mov
sbb
scas
negl
jge
pop
call
jmp
xor
mov
add
jnp
pop
pop
pushl
jne
or
xchg
jae
cmpsl
pushf
in
jb
out
add
or
push
pop
inc
sbb
jno
in
adc
cli
loop
jnp
jbe
aaa
insl
push
jle
idiv
push
xor
scas
sahf
rorl
cmpsb
pop
repnz
adc
pop
ja
jp
fdivs
push
ret
cwtl
cmp
dec
jno
arpl
pop
cmpsb
adc
mov
dec
and
push
inc
pop
sahf
fsub
sysexit
inc
jmp
push
xlat
push
scas
out
dec
mov
lret
pop
mov
push
push
jb
aaa
popf
aam
push
add
push
xchg
mov
imul
mov
mov
std
and
adc
lret
jbe
outsb
add
mov
imul
int
sub
lret
rorl
lds
es
dec
dec
xchg
cmp
imul
call
mov
orl
shr
cmpsl
cwtl
out
repz
lea
dec
xor
mov
fisubl
mov
cltd
push
sarl
sub
lahf
inc
mov
mov
popa
pushf
mov
mov
test
push
loopne
lahf
pop
notl
in
inc
or
scas
arpl
add
and
jns
jo
popf
in
push
arpl
int3
dec
pusha
inc
lods
sub
xorb
sbb
jo
insb
xchg
movsb
or
jmp
jne
xchg
jne
outsb
xor
dec
sbb
aaa
xlat
xor
jge
popf
stos
loopne
pushf
in
int3
pop
pop
adc
dec
aad
mov
aad
add
movsl
pusha
xchg
in
mov
popa
push
sub
stos
or
stc
leave
jecxz
fmuls
fstp
into
jne
sbb
cs
cmpsb
test
pop
arpl
movsb
mov
hlt
lods
fwait
roll
shrb
mov
xchg
pop
add
movsb
xor
add
lcall
fwait
inc
push
push
or
dec
fcmovnb
push
es
xor
enter
in
push
lods
cltd
pop
and
or
push
out
push
out
mov
fldl
jns
data16
out
into
outsb
mov
pop
aam
sbb
push
mull
push
into
sahf
icebp
inc
or
cwtl
xor
xchg
insb
jo
gs
lret
push
enter
cltd
lret
pop
adc
mov
cmp
xchg
popf
push
xor
xor
or
fstps
repz
xchg
inc
xchg
xor
xor
xchg
fidivs
mov
xor
out
ret
fisttpl
adc
cmpsl
mov
sahf
or
orb
lods
sbb
push
lea
popf
out
in
cmp
lcall
or
xor
stc
sbb
xchg
jns
cmp
inc
outsl
push
loop
orl
jae
pop
rcrl
int3
and
adc
dec
and
outsb
cmp
xchg
rcrl
add
jmp
push
lock
and
pusha
fwait
pushf
clc
push
dec
addb
fnop
cs
shrl
mov
push
mov
and
pop
arpl
mov
adc
pop
xorb
push
daa
jp
popa
xor
out
jge
pop
rorb
out
cltd
and
xor
test
aas
inc
popf
test
push
and
jo
addb
jno
stos
push
add
xchg
cwtl
ffreep
pop
mov
das
in
mov
movsb
mov
jge
aam
adc
add
cmp
xchg
inc
push
scas
push
mov
les
call
shlb
rcr
xchg
cltd
or
xchg
repnz
imul
cmp
bound
xor
fbld
adc
jns
push
ja
xchg
int
repnz
cltd
jns
lret
sub
scas
sbb
aaa
pop
loope
pop
sub
dec
xor
loop
sbb
xor
idiv
add
or
push
lcall
ss
mov
fsubrl
push
dec
xchg
mov
jge
lret
inc
jae
pusha
aaa
ss
push
push
clc
aad
push
sub
rcr
fwait
or
sbb
lods
jp
or
iret
mov
rorl
push
rorl
fldcw
lods
cmpsl
jp
jge
insb
adc
test
xor
jl
xor
nop
idiv
aad
lea
popa
std
sbb
gs
inc
jnp
dec
add
loope
dec
jge
xchg
jmp
leave
sub
xchg
sbb
fwait
sub
lock
push
mov
cmp
rorb
pop
lods
pushf
std
shrb
jns
dec
into
adc
sarl
xor
rcrb
xlat
movsb
stos
filds
mov
push
leave
inc
xor
pop
or
or
add
mov
jmp
jbe
lret
test
sub
daa
sub
adc
lcall
lods
adc
xor
in
enter
jecxz
in
adc
stos
jle
mov
lcall
push
je
movsl
ret
fs
push
pop
and
mov
jbe
or
add
cmpsl
pop
bound
and
repz
pop
mov
movsb
and
ss
jo
or
xor
rcrb
movsl
dec
inc
dec
loopne
and
jg
fimull
pop
push
ljmpw
jo
and
cs
js
popa
adc
push
adc
arpl
pop
enter
mov
inc
jle
pop
jns
jmp
outsl
out
mulps
sarb
or
xchg
dec
stos
lods
mov
mov
cli
sbb
mov
mov
mov
int3
adc
jbe
nop
inc
fsts
idiv
dec
mov
sub
mov
cmp
add
pop
mov
and
js
gs
call
inc
test
push
adc
les
cltd
insb
cli
movsb
adc
std
jp
pop
push
xor
xor
iret
add
mov
dec
js
rcl
aaa
lret
es
aas
cltd
fstp
cld
ret
fnstsw
cmc
mov
ret
popa
movsb
push
mov
add
dec
hlt
sub
sbb
sti
and
cmpsl
and
stos
sub
push
mov
sub
pop
cmp
jge
out
lahf
cmc
rorl
aam
jo
ds
inc
idivb
add
inc
popa
pushf
iret
scas
lock
push
shll
roll
inc
inc
pop
rcll
pop
leave
xchg
fstl
inc
aas
in
ds
pop
aad
push
pop
jge
jmp
push
xchg
push
lea
jae
dec
xor
jp
sbb
or
fsubs
and
gs
or
add
loopne
shrb
pop
and
test
dec
outsb
popa
cmp
sub
shrl
adc
sub
cmp
in
rcll
or
pop
dec
and
fisubrl
inc
cmp
vpsadbw
shl
mov
sub
pop
fldenv
out
aad
mov
mov
stc
imul
and
and
out
pop
outsl
pop
insb
sub
or
out
aas
ja
loopne
mov
jne
gs
pop
adc
ret
and
or
idivl
es
repz
and
mov
push
outsl
jo
xlat
xor
add
jl
loope
pop
add
loope
mov
dec
mov
cmp
sbb
mov
add
cmp
cli
sbb
cltd
dec
pop
cmc
pop
pop
lcall
cmpsb
stos
xor
jo
sbb
jge
push
scas
pop
or
dec
adc
mov
in
xchg
mov
adc
push
test
repnz
dec
mov
xor
ss
mov
popf
jle
jae
fstpl
cmp
jge
pushf
sub
push
push
ljmp
jl
sbb
add
jp
push
mov
cmp
dec
in
sub
jp
cmpsb
outsb
call
inc
mov
fsubs
test
mov
mov
sti
fcmovnu
lcall
js
es
push
jne
xchg
lret
dec
xlat
xor
jg
dec
mov
outsl
mov
pushl
rcll
cmp
scas
pop
mov
shrb
inc
out
mov
mov
clc
pop
fistps
popa
in
push
pop
mov
pop
dec
shl
lret
push
pushf
add
bound
loopne
aam
in
cmovp
push
leave
pushf
arpl
fistpll
out
xor
mov
test
iret
adc
fidivl
fst
and
adc
pop
mov
inc
mov
fwait
mov
rcrl
lahf
orb
ljmp
jno
testl
ljmp
pop
jbe
leave
in
pop
divb
icebp
push
lock
dec
ss
outsl
xchg
shlb
test
pop
leave
jns
iret
mov
sahf
push
dec
sbb
cmc
inc
test
push
xor
repnz
mov
lahf
push
inc
out
js
push
loopne
aad
jl
inc
and
bound
movl
pop
xor
insl
jno
add
mov
gs
stc
test
push
xor
shrb
pushf
jmp
push
lret
dec
loopne
lret
xchg
lods
add
sbb
xlat
sti
adc
and
dec
int
dec
xchg
dec
addr16
mov
or
jnp
push
fisttpll
aas
jne
adc
add
sbb
jmp
push
stos
out
jmp
stos
sub
lock
sub
cmp
push
xchg
lds
or
cld
pop
ja
mov
cmpsl
sbb
ret
jge
mov
cld
lods
outsb
mov
cmp
jno
out
mov
lcall
test
xchg
fistpll
and
lahf
inc
and
mov
dec
pop
adc
mov
push
pop
pop
mov
push
ret
push
jge
fwait
xor
cwtl
outsl
dec
cwtl
sub
or
icebp
lret
xchg
mov
aam
push
cwtl
cmp
inc
stos
frstor
inc
push
into
and
std
xchg
in
aad
out
adc
cmp
cmp
leave
int
inc
mulb
in
sarl
xor
mov
add
mov
je
lret
fdivs
inc
jg
scas
jo
cmp
jge
call
roll
int
xchg
push
pop
jmp
out
push
adc
mov
add
andl
inc
addr16
mov
jns
sahf
adc
pushf
or
icebp
rcr
and
or
sti
pop
fnstsw
mov
push
aaa
sahf
gs
mov
jno
subl
add
clc
out
push
icebp
sbb
scas
clc
mov
xor
sub
xchg
pop
xchg
xor
in
pop
mov
sub
xchg
cmp
ds
inc
ljmp
pop
cmpsl
adc
scas
not
sub
pop
sbb
adc
mov
fsubrs
dec
adc
jb
dec
in
rcrb
sbb
jns
and
cmp
mov
mov
rorb
xchg
je
int3
fsubl
lahf
out
mov
aaa
pop
aas
fs
rol
lock
mov
arpl
mov
dec
jb
outsl
mov
xor
frstor
mov
outsb
cmp
mov
rcr
ret
mov
out
mov
push
les
lret
dec
aam
xchg
into
adc
inc
xor
xchg
jp
or
pop
xlat
sub
in
imul
xchg
xchg
mov
enter
bound
pop
loop
add
jae
pop
lock
in
test
outsb
adc
fdivs
push
cmp
aam
test
aas
nop
jb
pop
xchg
inc
pop
or
enter
fiaddl
cmp
cmp
and
mov
mov
cld
push
add
pusha
loop
call
or
sub
jg
out
mov
push
add
dec
in
sbb
inc
fwait
or
fsubrl
push
gs
mov
pop
and
xchg
jb
add
adc
xor
jg
shrl
out
push
xor
leave
stos
xchg
cmp
mov
enter
jmp
inc
mov
loop
arpl
or
fcoml
mov
ds
push
jg
add
sub
cmp
push
je
xor
push
fbstp
sahf
cmpb
out
push
mov
mov
fwait
jmp
cmp
cmp
mov
mov
out
sbb
outsb
sahf
fs
xor
mov
aam
es
push
mov
jecxz
sbb
ljmp
jo
lahf
and
mov
movsl
mov
aas
xchg
lock
stc
mov
in
mov
enter
out
xor
sbb
mov
sti
ret
mov
lahf
loop
pop
add
fs
cmp
inc
outsb
jl
aam
push
enter
in
daa
jnp
xor
ficomps
xchg
xlat
lods
jo
and
push
negl
and
mov
es
or
pop
cmc
fimuls
std
in
dec
mov
cmp
inc
xlat
imul
pcmpgtw
scas
jp
pop
pop
push
and
insb
addr16
adc
sbb
mov
mov
dec
mov
xchg
sarl
sbb
or
jle
lock
aas
insb
jecxz
in
jmp
stos
or
lcall
jg
push
or
sbb
pop
jge
aam
mov
out
cld
xchg
mov
icebp
and
daa
data16
stos
xor
je
fnsave
stos
cmpsl
push
lahf
sub
fsubl
add
sbb
test
testb
push
xor
inc
xchg
in
es
aaa
dec
dec
addr16
mov
adc
out
lret
fbld
pop
mov
ss
gs
mov
cmp
data16
or
aam
cli
mov
sub
pop
inc
inc
pop
aad
jno
aas
jne
push
leave
push
xor
pop
dec
and
fdiv
sbb
mov
and
mov
mov
inc
lods
dec
push
repz
lea
inc
cmp
fisttpll
jbe
lods
and
pushf
inc
testl
cmp
fisubrs
pop
mov
rcl
in
fwait
xchg
int
or
adc
fdivrs
and
scas
inc
cltd
fcomps
lods
in
sbb
cltd
fnstsw
xchg
jae
push
push
popf
push
fldl
int3
dec
imul
pop
int
ss
and
rcrl
fstp
sbb
addr16
mov
push
test
dec
mov
mov
cmp
push
aam
mov
push
pop
fs
cmpsl
inc
push
jmp
mov
inc
mov
push
jnp
in
shrl
push
mov
and
scas
pop
adc
push
mov
aas
pop
hlt
cmp
fsub
pop
fldcw
or
mov
sub
fistpll
ja
ds
adc
mov
neg
mov
xor
test
add
int
mov
fwait
add
mov
loopne
sub
xchg
cmc
mov
inc
jno
xor
xlat
nop
testl
jns
jl
push
popf
add
es
hlt
add
dec
test
xchg
test
cli
cmp
in
mov
insl
push
scas
imul
les
pop
inc
fidivs
enter
sbb
push
into
loope
mov
inc
sub
movsb
inc
add
xchg
mov
ja
stos
pop
mov
rolb
arpl
in
leave
stos
rcll
mov
sbb
and
sbb
movsl
or
movsb
adc
and
leave
aad
sbb
cmpsl
pop
shll
test
addb
push
testl
js
mulb
fldl
loop
inc
add
sub
xor
adc
loop
jle
into
jmp
roll
xchg
cld
mov
jb
lahf
cmp
mov
or
cwtl
mov
add
fnsave
or
push
sub
push
pop
and
cmpsl
xorb
movsb
pop
mov
ret
sbb
xchg
ja
and
jp
int3
cmp
fmull
adc
xor
cmpl
mov
les
push
out
test
pop
sub
ret
adc
es
jmp
out
sbb
cmpsl
inc
mov
cmp
mov
in
inc
aad
lahf
ja
data16
pushf
add
dec
xchg
int3
and
cwtl
popf
inc
lods
mov
dec
xchg
jae
fsub
inc
pop
scas
inc
cwtl
fwait
mov
movsl
sub
pop
mov
mov
jns
or
lock
xchg
aad
popa
cli
xor
pop
pop
hlt
rcl
iret
and
ret
leave
cmp
test
cld
in
test
cmp
subl
and
je
cld
fwait
push
pop
sub
add
rcll
mov
adc
mov
in
jb
movsb
xchg
add
mov
cltd
movsl
aam
dec
sub
jb
mov
fisttps
leave
movsb
xchg
insb
jno
repnz
stc
lahf
cmp
loop
lds
inc
ljmp
push
imulb
lods
or
out
or
popa
shr
lret
fisttps
lock
pop
out
mov
bound
insb
in
fwait
ss
jns
pop
ret
stos
cmc
inc
cltd
ljmp
or
mov
bound
and
in
les
pop
das
dec
sub
rolb
insl
cltd
push
inc
sbb
out
fildll
push
ds
xor
pop
ljmp
or
mov
cmp
xor
pop
xor
or
shrb
in
pop
lods
dec
dec
imul
adc
lock
sbb
pop
mov
scas
aam
mov
cmp
fcomi
inc
add
lea
xor
add
stos
sub
std
pop
arpl
mov
dec
push
lret
xor
ret
mov
scas
out
jno
push
mov
insl
jno
test
xchg
pop
jge
aad
inc
add
aas
pop
fildl
pop
push
aam
jnp
sbb
in
push
scas
mov
fstl
cmp
sbb
sti
inc
cmp
or
sbb
jnp
push
adc
push
dec
lret
inc
fadds
pop
mov
stos
xchg
or
push
setg
jmpw
sub
repz
add
dec
xchg
sbb
cmp
adc
je
cmc
push
rcrl
cwtl
cld
enter
sbb
sub
dec
iret
push
cwtl
ficoms
cmp
or
loopne
sub
lds
jnp
pop
adc
std
ja
movsb
pop
sti
push
xchg
lret
inc
lret
jne
jbe
or
fildll
xchg
movsb
out
jne
sub
loop
lods
mov
sub
jns
pop
js
mov
or
mov
jae
movsl
movsl
adc
pop
aas
sbbl
repnz
stc
jne
dec
or
adc
sub
push
test
in
fcom
inc
push
pop
push
add
fwait
gs
mov
jne
out
dec
mov
out
lods
mov
insl
dec
xor
add
mov
adc
push
fstpt
jo
jl
add
dec
pop
inc
cmc
sbb
out
cmp
jle
repz
int3
xor
fidivrs
stos
ljmp
shl
inc
fucomip
inc
out
movsl
lret
push
xchg
adc
and
fidivrs
mov
xor
sbb
fwait
jnp
call
and
adc
cmp
sub
adc
sbb
ljmp
cmp
add
jne
out
shlb
fimull
adc
nop
jns
std
sti
data16
and
and
std
xor
inc
mov
mov
adc
push
jno
mov
push
jp
mov
mov
enter
dec
or
call
sub
xor
shlb
ljmp
mov
dec
adc
shrb
ficompl
jge
dec
inc
out
popf
adc
fisubs
pop
aad
ret
pop
push
out
mov
adc
xor
test
cmpsb
mov
gs
xchg
outsl
sbb
out
arpl
cmp
outsb
xchg
pop
shlb
xor
xlat
out
popa
cmp
push
or
push
loop
out
popf
fisttps
notl
inc
ss
push
mov
adc
jge
je
in
insb
jecxz
std
mov
jg
cs
xchg
cmp
popf
mov
sbb
xchg
pop
addr16
cmp
clc
ljmp
fcmove
jge
xor
mov
mov
jbe
sbb
sbb
push
jno
lahf
pop
cmp
adc
sahf
mov
in
jge
sub
aad
sbb
add
loop
dec
ss
shll
and
inc
aad
or
dec
mov
sbb
and
mov
push
in
jmp
cltd
pop
data16
jo
in
int
enter
fwait
pop
xor
lods
xorl
or
inc
and
int
outsl
cmp
sbb
push
cmp
adcl
and
mov
xor
xor
mov
dec
mov
xchg
cld
xchg
mull
aad
sbb
sar
les
lcall
add
pop
sub
push
and
stos
fs
cmp
cs
mov
dec
stc
sbb
xchg
or
stos
repnz
jnp
in
adc
push
insb
fiaddl
lahf
dec
sbb
outsl
cmp
dec
cli
sub
imul
les
ret
cs
cmpl
xchg
sbb
adc
xchg
mov
lea
mov
mov
dec
rclb
and
imul
add
jno
xchg
lret
fnstcw
inc
or
leave
std
sbb
movsb
or
push
in
pop
push
int3
ret
inc
xchg
dec
xchg
in
das
bound
sub
xchg
sbb
push
sahf
ljmp
inc
cs
push
stos
fucom
leave
daa
pop
dec
jecxz
xchg
mov
shrl
cmp
ja,pt
push
scas
cmc
xchg
shrb
pop
movsl
add
mov
xchg
sub
adc
and
and
fbstp
adc
mov
sahf
sarb
xsha1
cmpsb
dec
cmc
and
mov
xchg
rcrl
call
lret
add
push
aam
stc
dec
push
mov
inc
sysret
cmc
mov
roll
pop
mov
sbb
ja
adc
push
test
jnp,pn
push
pop
movhlps
dec
push
lahf
adc
add
xchg
mov
dec
mov
sub
cmp
pushf
in
jbe
hlt
push
adc
sti
aaa
inc
outsb
outsb
sub
inc
rorb
loope
stos
push
inc
mov
sbb
and
sbb
sub
cmpsl
mov
or
fnstsw
push
movsb
mov
cmpsl
pmaxsw
cmp
mov
cmp
std
sahf
call
adc
add
add
jae
xchg
inc
outsl
sub
leave
repnz
rclb
mov
lret
adc
add
dec
cmpsl
lcall
inc
cmc
xorb
xchg
inc
stc
xchg
xchg
ret
iret
sarb
lcall
mov
mov
jecxz
or
in
mov
movsb
outsl
xor
or
pop
and
cmc
dec
je
dec
jo
inc
stos
aaa
xchg
inc
inc
mov
and
lret
or
incb
inc
xor
hlt
mov
iret
cmp
adc
jmp
sbb
sub
or
xor
inc
adc
popf
cmp
inc
shlb
or
xchg
icebp
cmp
subl
les
fbld
sbb
xchg
cmpsb
inc
les
push
or
ret
lock
leave
dec
outsl
scas
cli
lret
or
or
outsw
movsl
mov
sbb
aaa
test
push
lods
fs
sahf
lock
out
mov
push
cmp
je
lods
aas
pop
mov
nop
add
test
mov
and
jp
pop
idivb
leave
je
cwtl
mov
mov
pop
test
enter
stc
aad
dec
jmp
inc
lret
jno
mov
popa
sub
push
xor
mov
dec
adc
jb
jb
jg
in
mov
sub
mul
pusha
sti
ds
das
hlt
push
xchg
dec
and
inc
xchg
and
cmp
loop
sub
pop
lods
dec
aaa
mov
movsl
shrb
pusha
js
pop
and
cmpsl
and
adc
test
jp
push
push
mov
pop
lret
push
xchg
bswap
jp
sub
push
ljmp
cmp
ds
jecxz
daa
cli
stos
mov
fsubr
adc
push
lret
sahf
cmp
xor
xlat
pop
adc
fistl
movsb
addr16
out
xchg
stos
popf
mov
push
sub
jbe
sarl
pushf
sahf
out
dec
aas
mov
in
inc
push
add
mov
mov
xchg
das
cmp
jb
cmp
iret
and
jl
jnp
pop
std
pop
clc
ja
push
jge
or
in
cs
adc
or
sbb
adc
fnsave
cmp
add
or
lods
xchg
mov
and
cli
pop
sub
test
out
mov
pop
lock
or
add
sub
dec
repnz
test
xor
fisttps
push
fisttpl
jo
cs
cld
push
cmp
out
adc
jle
jae
cld
xchg
mov
test
dec
dec
add
shlb
mov
mov
sub
mov
or
into
in
or
push
sbb
cld
pop
push
push
outsl
dec
aas
xchg
mov
or
inc
push
loope
sbb
jmp
sbb
cmp
fs
js
adc
ret
repz
adc
out
lock
sbb
push
addb
sub
cmpsb
dec
lods
sub
xor
cmp
jbe
outsl
xchg
adc
inc
lea
in
into
daa
imul
or
jne
xchg
mov
sub
leave
ret
sub
and
sbb
sbb
out
xor
call
andl
xlat
jne
dec
inc
xchg
pushf
mov
mov
ljmp
into
loop
fmull
pop
jecxz
push
das
loop
loop
mov
lcall
mov
mov
xchg
aam
mov
addr16
outsb
or
push
lea
pop
icebp
lock
xor
movsl
and
xor
add
fsubr
mov
outsl
test
xor
jmp
notb
adc
mov
mov
mov
ja
daa
mov
aad
adc
lcall
lea
or
cmp
adcb
inc
lahf
and
outsl
in
leave
clc
stos
sarb
push
mov
push
fwait
jp
mov
jb
mov
into
int3
pop
mov
sarl
inc
cmp
cld
outsb
cmpsl
and
les
sub
ret
cmpsl
enter
push
popa
cmp
cmp
arpl
pop
xchg
xchg
rorl
pop
clc
pop
es
movsl
lret
lahf
scas
jl
pop
sti
push
mov
jmp
cmp
sbb
fcmovb
inc
fs
in
imul
sti
cmp
loop
pop
enter
mov
lock
or
bound
pop
xor
ds
pop
pop
test
and
xchg
shrl
mov
jmp
imul
or
push
je
lods
dec
adc
fsubr
outsb
repnz
stos
hlt
or
mov
xchg
les
hlt
les
lds
push
add
jbe
adcb
shll
add
fdivr
mov
repnz
in
repnz
fidivl
int
testl
jl
mov
push
mov
pop
lods
dec
fistpll
and
jne
inc
aad
push
pop
mov
enter
add
ftst
mov
cwtl
shlb
cli
ja
xor
jo
fs
lret
push
out
sbb
je
push
lock
mov
out
pop
int
loopne
es
pop
jmp
inc
jnp
pop
dec
cmp
faddl
sti
movsb
leave
jecxz
pop
dec
mov
clc
adc
inc
sarb
push
push
enter
mov
cmpsb
sub
and
pop
cmc
xor
xchg
pop
pop
push
decl
insb
pop
xor
fldl
jecxz
in
lahf
ret
pop
pop
cwtl
inc
int
push
mov
stc
fisubl
push
mov
jle
xchg
popf
call
mov
fisttpll
mov
rclb
out
xchg
jb
dec
lods
mov
rcl
mov
addb
in
incl
cmp
inc
jb
jmp
insb
data16
mov
clc
and
pop
mov
imul
push
inc
xorb
xorl
dec
inc
add
push
ja
ret
mov
mov
pushf
xchg
sbb
outsb
lret
adc
adc
xor
or
sub
lret
insl
stc
jnp
das
xchg
sti
jb
or
inc
mov
in
or
jmp
out
mov
add
shl
sub
adcb
xchg
mov
jg
les
fdivr
pusha
lret
out
cmp
cmp
nop
decb
inc
xchg
xchg
xor
in
ss
cltd
lds
or
clc
scas
and
pop
mov
test
xor
xchg
jo
push
sbb
xor
int3
mov
packssdw
xchg
scas
sti
xor
xor
dec
jp
sub
popl
inc
jp
daa
inc
inc
sub
jb
mov
insb
mov
ds
dec
jecxz
mov
mov
jbe
mov
cli
jb
xchg
xchg
mov
adc
push
mov
les
cs
jp
js
mov
jl
dec
mov
xchg
mov
std
cli
mov
and
lea
xorb
lods
inc
pop
add
lret
mov
sbbb
cwtl
jg
jmp
ret
fistps
cmc
push
loope
jl
in
mov
dec
mov
inc
xchg
xchg
mov
insb
adc
cmp
out
inc
scas
xlat
ret
repz
popf
aas
sbb
imul
add
push
cli
mov
mov
sbb
call
or
cwtd
ficoms
icebp
cmp
shrb
pop
fisttpll
dec
mov
lret
jmp
lock
imul
pop
mov
jg
push
mov
cmp
add
outsb
mov
pop
sahf
rcll
adc
xchg
adc
pop
dec
sti
pop
inc
repnz
pop
pop
dec
lahf
mov
ret
mov
xor
pop
outsl
pusha
push
and
bound
and
test
xchg
dec
pop
movsb
dec
cmp
or
lret
ret
je
leave
lahf
xor
in
pushf
lds
push
setb
shl
hlt
mov
xchg
jge
daa
add
ret
fdivs
andps
rolb
shrl
ss
xchg
push
scas
jg
mov
push
and
xchg
adcl
push
repnz
mov
stos
stos
lock
popa
adcl
sub
out
adc
pop
pop
push
add
jbe
ja
cmp
rorl
or
pushf
mov
shrl
sub
imul
pop
mov
mov
popa
test
je
mov
xchg
int3
addr16
lods
xchg
aam
cmp
outsl
mov
cmp
adc
jge
addr16
cmpsl
sub
stos
call
icebp
sti
loopne
jge
pop
lock
sub
addl
flds
imul
cmp
inc
dec
jnp
test
faddl
push
out
aad
add
sbb
imul
jp
out
inc
iret
and
dec
enter
cmc
jo
xchg
ja
sbb
sarl
sbb
fisubrs
cmp
nop
push
lods
add
mov
xchg
or
dec
push
cmp
jle
sbb
into
mov
cmp
sub
cli
scas
popf
adc
mov
mov
js
mov
aas
mov
mov
popa
cmp
out
imul
dec
inc
imul
jb
sbb
out
cwtl
inc
inc
jns
xorb
aaa
ss
xchg
int
pop
xchg
sbb
out
jbe
scas
and
mov
pop
into
mov
mov
cltd
imul
and
mov
cli
cld
mov
aas
aaa
add
push
sbb
push
int
pushf
adc
faddl
mov
fs
xchg
push
stc
cmp
ds
bound
xchg
pop
loopne
ljmp
pop
cli
xorb
inc
mov
stos
loope
push
xchg
lcall
mov
out
popf
xchg
jmp
cltd
cmc
xor
xor
stos
xchg
movb
jp
mov
call
and
cli
sti
push
dec
fs
mov
sahf
sub
pop
ljmp
cmpsl
add
xchg
xchg
dec
mov
mov
hlt
pushf
push
lds
dec
subl
in
stc
sub
mov
push
adc
pop
lods
in
or
cmp
jae
filds
xchg
std
xchg
dec
mov
and
mov
jecxz
outsl
mov
test
rclb
aaa
and
xor
ret
xor
fsubrs
cmp
aas
mov
js
jecxz
in
lock
jb
mov
xchg
shr
dec
outsb
mov
inc
push
adc
adcb
idiv
mov
rorb
sub
fimull
cmc
enter
cmc
sbb
xchg
push
fwait
or
sbb
cld
jns
jp
sahf
push
xor
test
andl
clc
sbb
daa
and
inc
mov
ficomps
dec
dec
mov
mov
js
daa
xor
leave
mov
out
mov
mov
xchg
dec
fnstenv
inc
ds
fs
lahf
data16
cmp
cmpb
sub
xor
jno
fucom
mov
mov
pop
loop
jge
lret
push
push
cmp
sti
adc
dec
pop
jo
out
ss
fcoml
mov
inc
outsl
ret
pop
xor
je
repnz
xor
lods
xchg
sub
pusha
mov
mov
cmpsb
sbb
std
mov
fwait
sub
pop
or
mov
mov
xor
mov
mov
add
stos
jo
idivl
sub
mov
jmp
jne
rcr
xchg
ja
fwait
add
cli
movsl
testb
scas
je
pop
pop
insl
lahf
or
mov
cmp
add
mov
mov
mov
add
jne
enter
push
xor
arpl
jns
rcrl
inc
fimuls
sub
inc
ret
fstl
mov
data16
enter
or
fmul
and
inc
gs
adcb
adc
lea
repz
inc
dec
or
dec
shlb
fimull
flds
fildl
mov
lea
lretw
lds
fnstenv
sbb
mov
ss
jle
mov
fidivrl
pop
pushl
out
sub
shrb
mov
mov
fs
das
stos
mov
pop
mov
popw
xchg
sbb
mov
mov
outsl
jnp
sti
in
addr16
adc
cmp
out
xchg
rcll
adc
adc
out
sbb
cmpsb
jno
aad
mov
dec
jne
ret
mov
std
sub
testl
out
in
mov
and
std
adcl
fs
xchg
cmp
adc
fldenv
test
xor
mov
mov
cmp
jp
stos
rcll
fwait
xor
repnz
jno
jnp
xchg
adc
ret
rcll
adc
pop
xchg
movsb
sbb
or
dec
mov
call
fldt
sbb
leave
loope
lock
xchg
ficoml
sub
aad
sbb
mov
cmp
dec
pop
test
daa
inc
inc
outsb
inc
hlt
std
shld
lret
mov
aaa
in
cmpb
mov
mov
gs
mov
divl
mulb
pop
adc
jns
jns
pop
mov
arpl
push
jecxz
sub
fbld
popf
mov
add
add
fmull
scas
mov
pop
jmp
lods
out
or
mov
push
mov
and
mov
clc
add
pop
test
mov
test
cmp
sbb
xchg
or
adc
cmp
in
inc
aam
dec
ds
loope
insb
xchg
sub
les
stos
push
in
add
cmp
sti
dec
adc
inc
cmc
out
mov
and
push
or
xlat
inc
jmp
test
add
xlat
xor
popf
inc
in
cmp
mov
sub
gs
pop
xchg
add
sbb
aas
mov
sbb
lcall
adc
enter
cmp
mov
aaa
insb
and
iret
mov
adc
dec
iret
fnsave
mov
and
test
sti
push
mov
fistl
movsb
pop
shlb
aas
cmp
push
lock
dec
inc
mov
inc
xlat
cmp
stos
sarb
loopne
repz
js
xor
sar
or
inc
jl
fldcw
idivb
jns
jmp
stos
and
pusha
pop
push
ja
mov
jnp
push
adc
and
cmp
or
arpl
shrl
push
push
pop
push
nop
stos
jle
or
jp
shrl
pop
sbb
je
std
and
out
pop
out
aas
pop
fsubrl
movsl
ljmp
mov
mov
lea
js
int3
pop
inc
pop
pop
jnp
ljmp
cwtl
xor
ret
mov
pop
inc
das
push
pop
xchg
push
pop
dec
cmp
push
push
mov
push
xchg
int3
and
or
xor
dec
je
jle
stc
or
pop
lret
mov
sbb
pop
mov
jge
cmp
pop
lock
mov
or
dec
xor
sahf
sbb
loope
repnz
pop
flds
push
add
pop
inc
out
pop
sbb
mov
add
int
jle
popf
jnp
mov
ja,pt
aaa
popl
jns
ret
xchg
sub
mov
pusha
dec
int
push
mov
mov
push
das
cltd
dec
and
lock
add
scas
ljmp
jne
mov
cwtl
in
in
outsl
push
jb
int
pusha
mov
sub
movb
inc
stc
push
pushf
aaa
test
mov
sbbl
xchg
jge
add
in
dec
and
push
cmp
mov
mov
call
and
sbb
fwait
fwait
out
xchg
push
and
ja
cmc
pop
fsubl
add
mov
mov
cmp
out
add
inc
and
icebp
pushf
stc
xor
pop
xor
cmp
inc
adc
sub
cmpsl
dec
shlb
mov
and
stos
pop
mov
adc
mov
cmp
sub
cs
push
jb
stc
mov
lock
out
sbb
mov
push
mull
lahf
and
sti
mov
fwait
pop
or
push
mov
add
daa
fsubr
pop
sub
jno
push
adc
cmp
incl
lcall
xor
pop
aam
test
stos
ljmp
jno
inc
and
movsb
or
test
cmp
sbb
lret
bound
out
adc
xchg
dec
sub
imul
sbb
std
insl
sbb
and
mov
mov
sarb
mov
inc
in
push
sahf
das
sbb
dec
mov
ret
xchg
jno
cmc
ss
cmpsb
dec
sti
jns
in
inc
into
stos
mov
jp
jo
mov
ljmp
sbbb
dec
or
adc
sbb
arpl
push
push
test
in
dec
or
dec
or
nop
int
cld
or
ficompl
outsb
lcall
mov
aaa
bsf
push
scas
xchg
in
push
dec
cld
fsubr
and
cld
outsb
daa
sub
jmp
pop
or
jmp
mov
inc
jb
movsb
mov
xlat
fisubl
mov
jne
icebp
or
xchg
push
mov
sbb
push
mov
xchg
lret
add
xor
inc
xor
in
je
sbb
lock
movsb
gs
call
dec
repnz
lcall
jno
sbb
push
icebp
cli
scas
sahf
std
fs
fcompl
adc
out
xchg
cwtl
nop
xor
xchg
int3
in
test
mov
pslld
or
mov
icebp
push
xchg
xor
cmp
stos
ljmp
lret
out
jns
push
in
int3
fsubrl
movsl
divl
loop
pop
mov
stos
ljmp
and
xchg
or
inc
in
add
add
jmp
add
mov
aaa
xor
aam
mov
aas
mov
cmpsb
jle
adc
mov
adc
pop
cmp
mov
or
and
sub
out
lds
sbb
xlat
fsubl
out
mov
lea
ljmp
or
lret
mov
cli
mov
sbb
mov
mov
pop
popl
pusha
add
into
sti
lahf
mov
add
scas
xor
xchg
test
xchg
ds
fmull
aad
cmp
cmp
push
loopne
pop
loop
roll
add
sub
push
or
push
out
pop
jo
jp
inc
push
inc
adc
pop
or
adc
mov
lock
and
sub
mov
lea
inc
enter
jns
jp
js
repz
scas
xchg
ror
mov
inc
lock
aad
fsubp
and
ret
popa
in
fbld
adc
mov
push
mov
push
sub
mov
jg
ds
out
sbb
xor
jmp
push
mov
mov
aad
aaa
leave
cmp
idivb
enter
gs
mov
xchg
fidivs
mov
sub
xchg
adc
pop
js
push
xor
xchg
scas
in
adc
inc
pop
data16
jo
fistpll
push
je
pop
jns
test
push
loop
rcll
and
mov
mov
loop
lret
aas
test
push
negl
jb
in
out
pop
mov
dec
mov
movsb
mov
sarl
push
sbb
mov
stos
insb
xchg
and
rclb
sub
arpl
mov
pop
lcall
and
pop
iret
push
adc
push
das
jae
pop
test
aad
addr16
scas
sbb
jbe
or
enter
pop
adc
cmpl
movb
dec
repnz
rorl
sti
xchg
stos
dec
mov
xor
fcoms
stc
adc
call
pop
xor
fdivs
ret
or
test
lock
stc
lods
fisubrs
adc
cmpsl
cs
inc
imul
jecxz
sbb
shll
pop
mov
or
clc
aaa
in
cmpsb
add
shll
mov
mov
push
cmp
rclb
cmpsl
and
cmc
shll
lahf
rcl
jmp
aas
xor
testb
ds
pop
rcrl
les
and
mov
cltd
mov
sub
std
popa
xor
push
mov
adc
sahf
cmpsl
test
and
jb
adc
cli
ljmp
sub
jbe
mov
testb
loopne
push
add
xchg
cltd
inc
inc
cmpsl
in
jecxz
lock
cmp
fsubrs
sub
mov
cmp
adc
sub
lahf
iret
and
mov
dec
pop
jle
cmc
imul
sub
sbb
sarl
xchg
sub
negb
inc
call
xchg
and
ja
mov
gs
xor
ret
xchg
sub
add
scas
sub
cld
in
clc
xchg
imul
cli
stos
push
mov
leave
jae
frstor
pop
cmp
sbb
adc
or
jno
pop
adc
add
lret
and
fs
xor
pop
dec
push
pushf
lock
subl
scas
rcl
jo
sub
sub
scas
insb
out
mov
pop
mov
negl
roll
sahf
mov
ret
in
cmp
dec
enter
cmc
out
xor
push
imul
jg
jle
sbb
popf
xchg
pop
sub
jne
adc
sbb
adc
je
fidivrs
cmp
mov
int3
push
xchg
sub
mov
scas
cld
or
adc
pop
mov
test
cmp
and
jns
rcrb
popf
sbbb
inc
cmpsb
int
adc
aam
jle
pop
mov
dec
lods
dec
jecxz
mov
fiadds
loop
sbb
imul
add
jno
dec
or
ret
mov
leave
mov
push
fcomp
or
loope
inc
lods
insb
scas
xchg
fcomi
enter
mov
int3
jle
push
iret
out
decl
int
mov
push
inc
jp
gs
rorb
adc
jecxz
inc
stc
dec
call
adc
add
decl
lahf
mov
sbb
aas
movsb
cmp
mov
repnz
jne
cmp
cltd
enter
js
jmp
popf
cld
nop
jb
daa
jl
sub
jmp
daa
jecxz
add
repnz
push
popa
pop
scas
repnz
int
cld
clc
push
dec
adc
pop
dec
imul
aaa
pop
fdivrl
test
mov
std
mov
stos
add
arpl
sub
push
sub
jae
mov
mov
add
pop
push
adc
xchg
mov
les
gs
add
sbb
out
sbb
mov
dec
jl
scas
dec
lods
jns
fcoms
sub
xchg
jne,pt
and
sub
pop
pop
push
mov
sub
popl
cli
data16
xchg
pop
clc
jg
sbb
aaa
nop
xchg
mov
jg
jb
rcll
mov
dec
lcall
enter
testb
cld
ss
pusha
mov
cmp
adcl
jle
ss
fstps
push
lds
inc
out
cltd
adc
xchg
push
jns
out
xor
mov
sahf
loope
pusha
stc
daa
push
in
push
jg
jns
inc
int3
mov
stos
jge
loope
cmp
cmpsb
pushf
es
lea
sbbl
xor
fnstenv
jle
les
sahf
ss
insb
sbb
cmp
mov
in
fwait
shlb
out
and
xor
jmp
mov
pop
mov
sub
xor
sbb
cli
pop
sti
mov
push
mov
xchg
out
pop
lret
fldl
and
cli
mull
inc
out
jno
lock
jmp
push
xchg
iret
mov
rcrl
sbb
xor
and
es
daa
fimuls
cltd
inc
jns
pop
xor
mov
cltd
cmp
pushl
test
je
pop
int
pop
int3
mov
sbb
pop
aaa
cmc
xchg
pusha
sahf
ret
test
fdivrl
orl
cmc
jne
enter
push
mov
js
jecxz
or
and
dec
test
xchg
mov
lret
incb
mov
or
fs
pop
test
xchg
xchg
arpl
sub
ljmp
pop
sub
pop
mov
scas
and
pusha
aad
xor
inc
sub
je
inc
jecxz
or
adc
cmc
lods
sub
sbbb
inc
jg
fcos
orl
dec
outsl
repz
pop
repz
or
mov
xchg
xor
jbe
es
or
aam
pop
dec
mov
gs
add
lea
cmp
mov
loop
lock
aad
ret
jne
push
ljmp
sub
mov
int
mov
ret
xchg
cwtl
cmp
stc
inc
dec
mov
cli
sbb
ret
inc
xchg
fmull
nop
xor
xchg
test
fdivrl
fwait
hlt
dec
pop
ss
mov
out
ljmp
mov
dec
in
imulb
aam
shrl
cmp
pop
pop
cmpsb
gs
popa
lahf
xorb
fwait
ja,pt
lret
pop
xlat
outsb
adc
xchg
add
xchg
out
and
adc
jbe
out
xor
pushf
jb
or
shrb
jecxz
xor
push
or
ffreep
pop
sub
mov
dec
daa
jmp
jo
insl
cmp
push
xor
into
pop
sahf
or
out
imulb
les
mov
es
ret
xchg
loop
xor
into
mov
xchg
aaa
inc
pop
andl
loope
icebp
aad
test
inc
mov
ds
lahf
xor
test
outsb
mov
xor
sbb
inc
sar
nop
mov
call
pop
add
lods
xor
daa
setae
and
out
or
lds
subb
push
dec
les
std
in
adc
psraw
mov
cmc
xor
jg
jbe
jae
mov
xor
push
std
movsl
ds
jb
mov
push
xor
jl
iret
cmp
cwtl
jmp
jae
add
dec
fisubrs
sub
and
mov
mov
sbb
test
dec
rorl
repnz
jb
or
cmp
mov
and
xchg
mov
lds
and
ds
je
mov
insl
push
push
mov
int3
mov
pop
aam
cmp
pushf
out
xchg
int
inc
mov
rcr
bound
dec
cmp
lcall
lds
rcll
sbb
addr16
xor
pop
mov
adc
jnp
cmc
add
aad
repz
jns
or
fwait
inc
pop
xor
and
fs
push
mov
mov
push
add
jg
cld
lret
add
mov
out
sarl
icebp
xchg
pop
xchg
push
cmc
cltd
push
and
xor
or
adc
adc
lret
scas
aaa
pop
ss
pop
out
xchg
adc
mov
mov
cs
xchg
adc
cld
and
mov
lea
stc
lods
add
sub
mov
cli
push
test
xor
push
adc
push
mov
dec
inc
jbe
sar
push
lahf
cld
rcr
adc
xor
push
sub
cmpsl
mov
push
fwait
mov
dec
test
sbb
xchg
lods
dec
in
lock
imul
sub
rcrb
repnz
sbb
xchg
mov
in
xchg
je
cmp
push
sar
sub
loop
stc
testb
filds
xchg
mov
repnz
inc
add
jns
aad
and
pop
sub
into
int3
dec
sub
dec
ret
int3
lods
mov
inc
daa
xchg
mov
xor
mov
mov
inc
icebp
out
push
push
insl
fsubs
test
stos
scas
loopne
jb
push
mov
jl
push
repnz
jecxz
int3
popf
xor
in
xchg
xacquire
das
enter
push
popa
std
or
je
call
fstps
push
fld
add
loop
cmp
ja
fucomp
pop
lahf
cmpsb
hlt
insb
leave
mov
aaa
adc
mov
xchg
popf
and
rcr
insl
mov
imull
mov
xchg
cmc
mov
call
push
shlb
push
shll
cmp
xchg
bound
mov
scas
int3
scas
sarl
pop
rolb
test
sti
lds
xchg
jge
scas
add
es
adc
add
mov
mov
mov
xor
cld
add
icebp
call
inc
imul
lcall
cmp
and
push
push
xchg
inc
add
xchg
jae
mov
add
xor
ltr
fwait
adc
xlat
ljmp
shrb
xchg
adc
imul
inc
fdivs
int
jb
pop
push
test
sbb
jecxz
aas
scas
inc
mov
lods
in
sbb
lds
out
icebp
fdivs
and
xor
xchg
lret
and
sbbl
xor
xor
leave
nop
fdivl
je
push
repz
jle
jbe
pop
cmp
sub
jb
out
sub
out
push
aas
test
xchg
mull
mov
inc
out
dec
bswap
inc
push
xlat
cmc
enter
push
scas
arpl
adc
ja,pn
jl
orl
or
jno
movsb
scas
movsb
out
fmul
push
sbb
addr16
icebp
push
sub
sub
jmp
into
call
cmp
sti
dec
aas
push
jmp
test
sbb
es
dec
or
sbb
insl
das
cmpsb
je
ja
shr
cmc
mov
pop
lahf
test
add
inc
inc
notb
bound
xlat
sti
mov
xchg
push
rolb
cmpsb
xor
xchg
mov
sti
daa
adc
and
xchg
mov
cmp
xchg
les
lcall
jno,pt
jle
stc
adc
outsb
mov
sub
int3
or
sub
adc
sub
ljmp
cmpsl
stos
cmp
imul
fwait
sub
cmovp
shlb
pop
push
lock
sbb
insb
pop
repz
in
jmp
mov
xlat
pop
mov
aad
ja
inc
add
cs
aam
sbb
test
mov
dec
loop
sbb
lahf
outsb
adc
call
ret
or
sub
push
cmovno
xchg
jp,pt
mov
jnp
js
popf
xchg
mov
in
sbb
call
pop
add
popa
or
dec
fcoms
or
testl
lcall
inc
es
dec
das
js
dec
mov
xchg
mov
insl
out
pop
scas
andb
push
aas
scas
movsb
loope
test
mov
rcll
out
test
pop
xor
hlt
les
movq
outsb
sub
ljmp
aad
pop
mov
stc
jns
push
bnd
sar
jne
pop
cltd
test
insl
addb
cmp
cld
divl
jle
cmp
cmp
cmp
clc
sti
rol
cs
mov
cwtl
xor
mov
cmpsl
push
leave
add
xchg
mov
cmp
mov
sbb
jb
aas
mov
popf
push
dec
jb
test
cmp
push
jo
xchg
adc
lods
and
cmpsl
sub
out
fiaddl
push
cmp
imul
add
sub
dec
fldl
fwait
jmp
out
outsl
outsw
mov
cwtl
adc
mov
cli
lock
push
scas
and
fildll
out
xor
add
pop
pop
mov
sbb
lret
and
test
ja
aas
adc
addr16
sbb
out
popa
mov
adc
pop
jle
test
ds
sahf
lock
cltd
test
add
mov
adc
sarb
repnz
mov
sub
cmp
push
cltd
cmpsb
push
push
ljmp
add
cmp
sub
sti
out
xor
nop
sti
orb
push
fldt
and
pushf
enter
in
dec
roll
rcll
cmpsb
pop
adc
pop
jg
sub
mov
std
lea
popa
rol
fdivrs
shl
inc
repnz
sub
pop
mov
sub
orb
adc
loop
testl
shll
stc
adc
fmul
and
inc
adc
icebp
ja
outsl
cmpsb
sbb
aad
shr
push
movsb
call
das
dec
insb
sbb
addr16
outsl
sarl
repnz
nop
aad
lea
dec
adc
or
inc
jb
pop
stos
jbe
sub
adc
sub
repz
inc
or
in
sub
pusha
xchg
rolb
nop
in
sub
incl
movsl
fsubl
sub
pusha
jb
sti
imul
mov
and
xchg
pop
jle
pop
pushl
mov
lahf
xor
cli
adc
pop
testl
sub
sub
mov
dec
adc
xchg
cltd
sub
xchg
cmp
fadd
stc
pop
roll
mov
pop
faddl
loope
push
jnp
inc
or
loopne
iret
dec
cs
and
mov
into
cwtl
int
cwtl
mov
mov
pop
ret
loopne
mov
and
in
stos
movb
jno
jb
xor
sub
mov
jp
pop
add
insb
lret
jmp
cmpsb
xlat
sbb
in
xchg
pop
mov
adc
mov
pushf
jne
rcrb
fcomip
lock
jb
push
rorb
in
sbb
aas
das
jecxz
mov
mov
mov
add
sbb
mov
pop
cwtl
fisubl
pusha
mov
pushf
ljmp
dec
and
pop
pusha
xchg
xchg
sarl
adc
rcrl
jno
push
xor
push
dec
push
mov
or
pop
adc
and
outsl
inc
mov
fisubrl
out
shrl
cmp
lahf
rcll
cmp
pop
push
loop
jg
jle
pop
lea
xchg
sub
movsb
sub
push
in
fwait
loop
iret
and
add
dec
or
inc
es
push
sub
int
mov
bound
ss
dec
icebp
iret
push
sarl
mov
pop
fstpt
cmp
mov
les
sbb
das
lcall
pop
sbb
jne
icebp
or
lea
notb
ret
pop
push
jl
inc
arpl
push
mov
xor
xorl
iret
ljmp
jne
xchg
pop
out
dec
cmp
enter
out
sahf
dec
jo
mov
mov
std
aaa
cltd
adc
stos
pop
test
fucomp
sbb
in
fsts
cmp
cli
pop
repnz
outsl
out
mov
or
insb
adc
mov
not
dec
add
push
lret
inc
pop
test
xchg
std
shlb
mov
stc
xchg
push
cmp
mov
test
pop
ds
pusha
stos
cmp
push
loopne
cld
xchg
cmp
bound
mov
fstps
adc
xchg
xlat
fisttpl
lahf
stos
mov
jnp
or
sub
repnz
icebp
daa
sub
pop
std
xor
rcrl
jb
and
pop
jle
std
jecxz
outsl
sub
or
fwait
jp
pop
add
scas
jae
fdivrs
hlt
push
jl
lds
test
and
jmp
mov
in
push
movsl
dec
push
cmp
ss
inc
xchg
les
xor
push
mov
scas
sub
dec
pop
loop
adc
ret
rorb
pop
jbe
sbb
daa
enter
jb
out
or
lcall
mov
sahf
xor
xchg
pushf
fwait
mov
or
mov
pop
movsl
mov
cmpb
mov
rcrl
pusha
inc
sbb
and
or
std
push
inc
and
loope
ffree
jne
and
or
test
fsubrs
mov
or
xchg
inc
jae
cmp
lds
and
aaa
or
cwtl
sahf
mov
enter
mov
cld
fnstenv
in
xchg
and
mov
dec
or
mov
mov
jl
nop
adc
mov
inc
mov
out
sub
adc
movsb
push
ljmp
sbb
mov
or
hlt
adc
out
enter
mov
push
pop
mov
fcmovnb
popa
mov
inc
mov
inc
or
enter
js
stc
inc
mov
mov
enter
xor
ss
jb
push
mov
mov
jo
rorl
aam
outsb
frstor
xchg
xchg
mov
icebp
lahf
adcb
push
mov
bound
aas
xchg
adc
ss
cmp
cmp
pop
loopne
cli
cli
mov
push
pop
mov
js
rcll
aaa
xor
mov
or
popf
xor
fadds
lock
inc
test
jno
pusha
dec
popf
xor
cmp
std
fcoms
into
mov
xor
sti
jne
mov
inc
in
xchg
lds
shlb
sbb
adc
out
adc
xchg
push
push
sti
xchg
jmp
cmp
mov
pop
jp
popa
adc
nop
das
scas
adc
fwait
cmpsl
repz
fiadds
or
sbb
into
data16
or
pop
and
repnz
lret
xor
mov
mov
xlat
jne
and
mov
ficoml
xchg
test
ficomps
push
mov
scas
adc
je
lock
cmp
popa
arpl
testb
int
inc
inc
mov
loop
cmp
iret
repz
divb
test
test
jg
inc
xor
mov
and
faddl
clc
in
and
movl
or
pop
dec
or
xor
scas
dec
cmpsb
jge
push
aad
sub
fcmove
dec
push
mov
outsl
pop
hlt
imul
or
fnstcw
repnz
dec
cli
adc
add
xchg
and
bswap
push
pop
dec
int3
cmp
mov
arpl
mov
in
jmp
testl
and
cmpsl
mov
and
sahf
dec
jae
mov
adc
dec
and
dec
fisubl
insl
cmp
mov
fisttpll
movsl
inc
out
orb
jmp
movsl
push
shll
mov
jmp
xor
addr16
lods
jns
into
and
fnstenv
mov
aam
fnstenv
repz
push
sahf
jg
dec
pop
aas
inc
lock
lcall
sbb
daa
mov
fwait
test
gs
ljmp
xor
leave
sar
stos
or
jge
sbbb
xchg
jbe
lret
bound
push
popf
xor
push
inc
inc
or
xchg
adc
insl
imul
test
xor
lahf
sti
mov
pop
incb
push
lcall
sarl
gs
and
andb
jb
and
movsl
jg
sbb
inc
inc
int3
lods
sub
scas
dec
insb
iret
pop
xchg
dec
stc
scas
mov
cmpsl
jns
dec
sub
rolb
mov
subb
cmpsl
fwait
lret
sti
enter
push
xor
and
jmp
hlt
cmp
loope
pop
out
dec
adc
mov
pop
pop
add
push
sub
cwtl
jmp
cmp
sti
and
mov
into
and
cmp
arpl
push
dec
cmp
rcrb
xchg
add
leave
rorl
add
outsb
push
xor
fs
pop
lahf
or
jbe
icebp
inc
push
jecxz
stos
sbb
cwtl
lcall
popw
negb
ljmp
and
jo
bound
int3
mov
mov
jge
call
inc
addr16
ret
scas
loop
cmpl
daa
mov
xchg
mov
xchg
imul
clc
dec
lds
pop
fnstsw
rol
adc
insl
add
and
aad
xchg
push
sbb
iret
adc
lret
add
adc
inc
shrb
mov
pop
pop
add
fwait
xor
out
or
mov
movsl
into
scas
xorl
jecxz
pop
inc
and
rolb
enter
adc
gs
jb
lea
pushf
int
adc
std
pop
cli
out
lret
jmp
hlt
push
xchg
into
test
fdivrs
test
test
rol
jb
arpl
daa
pop
jecxz
sub
ljmp
imul
pusha
jb
sbb
push
or
imul
test
ja
pop
in
rolb
push
adc
lods
xchg
add
and
adc
pop
push
xchg
xchg
xchg
xor
imul
mov
add
call
iret
xchg
inc
jno
cwtl
xchg
stos
mov
push
aad
arpl
xchg
cmpsb
fwait
xor
jmp
dec
push
mov
jns
inc
xlat
dec
test
and
dec
and
pop
dec
mov
dec
xchg
cmp
pop
fdiv
jl
icebp
test
inc
int
add
lock
fstpl
dec
test
add
cmc
pop
pop
pop
leave
jle
xor
push
cmp
lret
out
test
loop
stc
xor
in
dec
mov
mov
and
popa
hlt
lods
repz
popa
xchg
loopne
scas
push
push
xchg
or
fistpl
add
cmp
stos
mov
pop
mov
sbb
sub
stos
add
bound
jge
bound
push
sub
jge
cmpsl
lods
outsb
out
push
into
popa
repnz
out
mov
fldcw
call
jne
sub
xchg
cmp
jo
xor
cmp
mov
daa
dec
lods
xor
inc
mov
dec
mov
cltd
mov
inc
fstps
fimull
lock
mov
nop
push
jge
fidivrs
sub
fwait
adc
scas
xor
imul
sbb
loope
loopne
and
std
ljmp
loop
test
and
push
hlt
aaa
xchg
mov
inc
inc
ja
cmp
jbe
loope
sbb
cmp
mov
dec
jns
adc
je
mov
loope
inc
and
fnstsw
dec
stos
xlat
test
iret
mov
pop
push
xor
mov
std
aas
xor
adc
pop
pop
mov
pop
fcompl
adc
mov
dec
adc
notl
xchg
int
adc
shl
mov
pushf
and
xor
push
dec
loopne
cltd
pop
push
rcll
cmpsb
fwait
inc
mov
out
movsb
int
arpl
out
pop
sbb
mov
cld
mov
shll
aam
fimuls
and
and
outsb
shlb
loope
gs
jne
cld
push
inc
shrl
dec
xor
push
xlat
jnp
ds
add
lcall
cmp
pop
push
jns
adc
shl
sbb
mov
fcom
or
ret
fmul
jg
in
bound
adc
mov
adc
mov
notl
aaa
pop
fs
adc
inc
mov
xlat
stos
pop
addr16
add
lahf
sbbl
cltd
js
or
push
icebp
scas
cmp
xor
pop
in
and
test
imul
je
shrl
ljmp
and
mov
lahf
loop
pushw
jnp
xor
test
mov
outsl
or
mov
cmc
imul
shl
fiadds
subl
das
mov
call
sti
and
subl
sub
sbb
bound
mov
insl
scas
jg
adc
dec
ret
ss
sti
in
xchg
rcll
jl
int3
sub
cmpsl
out
fcmovnb
push
xchg
shrl
xor
mov
mov
and
add
imul
cs
and
fldt
dec
ret
push
cmp
pop
or
mov
lcall
lds
jmp
in
add
and
cltd
add
pop
lds
frstor
mov
or
sti
jbe
cmp
pop
js
xor
cld
iret
xor
sub
push
cli
mov
fs
mov
test
mov
pop
pusha
pop
jne
fistps
adc
jae
popa
movl
pop
pop
mov
sub
cmp
cmpsb
fdivrs
adc
push
andl
fwait
sarb
outsl
cmc
jle
mov
fistpll
xchg
mov
sbb
dec
std
mov
ficoml
sub
std
pushf
sbb
or
repz
cwtl
adc
jmp
in
stos
nop
and
lds
lods
lods
jmp
pop
out
dec
sub
and
sarb
inc
sbb
les
pusha
or
lahf
bnd
sbb
and
repz
cli
cmp
aaa
mov
mov
mov
adc
mov
or
jp
cltd
imul
and
ficoms
sub
mov
sti
in
ljmp
xchg
dec
bound
or
mov
stc
inc
not
or
lcall
adc
loop
lods
jge
mov
mov
in
or
pop
test
xlat
clc
dec
cmp
in
andl
outsl
fwait
cwtl
js
scas
jl
ss
rcll
mov
mov
dec
xchg
enter
popf
sbb
lds
shlb
adc
inc
pushf
xchg
push
les
mov
popf
test
mov
adc
push
adc
hlt
shll
jns
sub
mov
sti
jns
std
adc
repnz
ss
addr16
std
out
sbb
aas
xor
sti
or
imul
les
xorl
pop
xor
mov
je
inc
mov
and
pop
and
cmp
jnp
test
and
adc
sub
fdivp
dec
xor
pushf
and
or
jnp
dec
pop
in
xor
or
mov
jae
jne
xchg
dec
mov
cmp
cld
out
scas
or
push
and
sub
adc
rcrl
xor
ja
mov
imul
fwait
or
jbe
xchg
dec
xor
mov
push
ljmp
iret
cltd
mov
imul
or
shrb
or
cmp
sbb
adc
mov
mov
mov
pusha
cmp
cltd
aad
mov
xchg
test
and
sbb
xchg
in
inc
lds
cmp
out
les
mov
stos
push
add
repz
subl
scas
fisubrl
adcb
dec
dec
xchg
cvttps2pi
xchg
std
or
push
push
insl
mov
mov
pop
out
nop
jbe
ss
fsubp
mov
or
std
or
mov
loop
jb
or
xchg
test
in
xor
scas
jno
ficompl
adc
fs
push
xlat
and
jns
jo
xchg
cmp
test
cli
mov
pop
lahf
mov
inc
xchg
push
pop
cmpsb
jo
sub
jno
add
mov
xor
ljmp
rol
mov
test
iret
mov
stc
cltd
insl
cmpb
add
mov
mov
jbe
lods
push
lods
insb
cmp
adc
jp
mov
fwait
jno
test
icebp
jno
dec
add
aad
pop
dec
xor
ret
push
mov
cmp
adc
sarb
outsl
inc
xchg
sub
jle
dec
xlat
orl
xchg
dec
pop
and
fcomi
inc
in
stos
xlat
or
pop
sub
add
lock
cmc
stos
data16
lock
push
hlt
sub
in
sarl
cmp
fs
popa
xchg
inc
pop
mov
or
mov
in
gs
dec
mov
popa
xchg
mov
xchg
add
push
sub
shrl
fs
mov
push
insl
inc
test
pop
xor
es
adc
into
inc
in
inc
mov
or
and
lea
in
adc
in
mov
imul
mov
adc
cs
pop
or
pop
ss
mov
cmpsl
ss
and
cmp
inc
pop
sbb
fdivrs
in
xchg
mov
popl
push
mov
mov
pop
dec
jnp
jle
dec
and
into
adc
fdiv
cmpsl
or
flds
adc
test
leave
pop
and
jg
push
stc
pusha
jno
or
push
cmp
inc
mov
mov
pushf
aas
repnz
sbb
out
and
je
sub
sbb
aad
xor
pop
sub
xchg
pop
jne
test
test
jns
repz
jg
mov
inc
add
mov
into
jns
or
cmpsb
aas
xchg
sbb
arpl
icebp
loopne
cmp
dec
jl
dec
iret
push
lret
ljmp
xchg
push
pop
adc
and
and
rcr
pop
mov
jbe
pop
sbb
aas
adc
pusha
int3
idivb
push
loopne
mov
cmpsl
dec
movsl
loop
or
xor
sub
out
call
or
fisttpl
pop
pop
adc
int
or
test
int3
test
testl
scas
loopne
hlt
inc
push
mov
je
les
mov
insl
in
sub
push
js
repnz
mov
in
pop
mov
xchg
sbb
mov
stos
or
sti
mov
mov
cmc
mov
cmpsb
lret
loop
and
ja
push
or
out
pop
pop
test
mov
pop
jae
push
pop
in
dec
or
cs
jl
mov
add
and
adc
popa
inc
pop
xorl
mov
dec
adc
cmc
into
dec
xchg
js
lock
cld
push
andl
lcall
fwait
jl
dec
cmpsb
in
in
jns
je
test
stos
jne
cli
mov
hlt
and
cmp
das
push
in
cmp
xchg
jg
fsub
loopne
es
out
add
jns
sbb
xor
imul
cltd
imul
icebp
pusha
mov
jbe
out
xchg
or
mov
add
sbb
jmp
push
cld
xchg
in
pushf
or
jbe
repz
and
movsb
shll
cmp
adc
mov
xchg
push
sti
nop
frstor
mov
cmp
rorl
mov
in
adc
dec
add
lcall
test
jnp
outsb
cs
sti
dec
sub
icebp
inc
jo
mov
sub
pop
movsl
bound
decl
pop
push
lret
aam
sahf
add
imul
mov
xchg
insb
loope
cwtl
mov
fdivl
push
pop
data16
int3
xchg
shl
js
push
push
enter
jnp
adc
inc
add
push
pop
inc
inc
aas
jo
lret
add
les
std
std
inc
push
std
push
or
es
jno
ds
dec
or
add
fs
mov
and
es
incb
inc
movsl
and
incl
push
push
xorl
and
xchg
cmp
or
aaa
ret
lret
sub
mov
in
es
push
cli
stos
mov
fcom
into
pop
lods
mov
push
and
loopne
cltd
cmc
mov
jp
pop
jo
jae
imul
cli
iret
in
pop
push
add
imul
mov
lcall
add
xchg
lcall
xchg
pusha
and
push
xor
mov
sub
in
xor
add
jmp
fstpl
call
xchg
inc
jp
add
jecxz
les
idivb
insl
lea
mulb
scas
sar
push
and
and
ds
pop
and
mov
dec
mov
test
jns
inc
loopne
sub
jne
and
jecxz,pn
stc
les
mov
mov
pop
shr
std
mov
lahf
lods
dec
rolb
mov
je
bound
test
loop
nop
pop
mov
hlt
into
or
sbb
jle
aaa
push
inc
ss
clc
adc
rclb
sub
das
xor
outsb
sbb
jns
clc
jb
jbe
pop
pop
sarl
xchg
lods
xchg
lds
or
pusha
mov
mov
mov
into
inc
fs
cmp
pop
repnz
lcall
and
shlb
pop
jne
mov
mov
xchg
gs
xchg
outsb
cmp
xor
mov
aam
ja
mov
fstl
jne
es
movsb
mov
xchg
or
pop
sbb
pop
andl
mov
lods
aam
lret
test
dec
test
sub
lret
outsb
dec
xlat
call
mov
fwait
cwtl
loope
add
aam
daa
and
ja
fisubrs
mov
aas
push
mov
mov
mov
xchg
cmp
xor
scas
stos
ret
inc
push
adc
int3
or
adc
push
scas
sahf
lods
jg
mov
cmpsl
shlb
adc
sub
lds
pop
icebp
adc
test
add
or
lahf
jg
mov
lock
mov
scas
pop
iret
shl
mov
mov
sbb
jmp
divl
mov
cli
mov
mov
mov
loop
repz
add
jno
in
out
sbb
or
fwait
jo
xchg
add
or
das
sub
ds
push
in
pop
sbb
data16
xchg
repnz
fs
es
test
movsl
push
shll
in
sarl
out
dec
iret
test
jns
xchg
cmpsl
lea
in
push
scas
ret
movsl
xorl
adc
mov
mov
movsb
dec
push
xchg
stc
sbb
bound
xchg
push
inc
mov
sbb
pop
sub
push
mov
jg
arpl
in
cmpsl
xor
lcall
repz
dec
and
sti
and
inc
sbb
push
daa
mov
clc
adc
xchg
and
ds
push
add
scas
sub
enter
int3
add
inc
mov
mov
xchg
shlb
jbe
sarb
aaa
mov
cmpsb
jbe
cmp
inc
push
push
filds
mov
cli
jnp
xor
call
inc
sub
mov
dec
rorb
test
mov
cli
movsb
lods
andl
lcall
loope
add
or
push
je
push
xchg
sub
xor
andl
scas
xlat
movsb
jle
xor
es
mov
call
rol
jl
adc
or
xor
out
or
es
dec
cmp
add
adc
insl
call
test
and
and
push
cmp
mov
dec
cmp
test
push
xchg
fildll
repnz
aad
push
push
and
sbb
or
dec
jne
stos
lock
mov
or
xchg
pop
xor
pop
sbb
and
leave
fbld
lds
lods
loopne
mov
and
push
test
and
stos
or
or
push
xor
cmpb
sub
mov
jge
lods
pop
xor
movsb
sub
in
dec
mov
mov
imul
subl
inc
sbb
xor
jbe
test
repz
inc
test
movsb
lahf
fistpll
pop
inc
xchg
stc
add
push
jmp
fwait
das
or
cld
xchg
cmc
xchg
cmp
aam
out
cmp
lahf
pop
out
iret
lods
mov
insl
lock
les
fs
lds
sub
adc
insb
and
stos
lea
clc
pop
int
cld
inc
mov
ljmp
mov
mov
in
lcall
insb
out
xlat
cmpsb
xchg
cmp
add
xchg
cli
out
push
sub
aad
push
sbb
mov
cltd
mov
and
test
cmpsb
pop
dec
jns
pop
arpl
pop
xchg
shll
fwait
ja
jmp
push
aaa
inc
xchg
mov
test
sbb
scas
sbb
fdivrl
test
loopne
xchg
imul
and
xchg
mov
je
nop
xor
shll
enter
xor
lds
movsl
daa
mov
and
mov
xchg
xor
fisttpll
add
stos
lret
rorb
leave
mov
mov
push
xchg
cmp
jbe
insl
dec
inc
sbb
and
test
xchg
adc
or
fadds
adc
jle
pop
ffree
mov
shl
movsb
sti
dec
push
cmpsl
sar
icebp
jecxz
orl
xchg
cmp
bound
sub
outsb
sarl
repnz
dec
sbb
fcompl
mov
into
lret
xchg
push
test
xchg
std
adc
xor
sbb
jecxz
out
xor
or
in
or
insl
mov
ret
adc
pusha
loop
add
mov
popfw
sub
xchg
adc
insl
ja
sub
jb
leave
pop
dec
sarb
hlt
mov
xchg
fldt
mov
add
sarl
cli
and
inc
mov
enter
mov
cmpsb
mov
mov
adcb
jae
pop
scas
testb
mov
jp
push
out
mov
adc
js
pop
xchg
or
div
push
sbbb
xchg
push
cs
add
addr16
stc
js
mov
clc
xchg
push
add
mov
inc
add
ret
and
mov
adc
add
pop
xor
movsb
loop
xor
cltd
pop
sarb
jb
ja
cltd
insb
sbb
ret
stos
idiv
push
cmp
mov
push
lcall
or
xchg
fbld
jmp
pushf
jp
stos
pop
outsb
cltd
xchg
push
sub
fnstcw
or
icebp
daa
aas
shll
add
and
push
inc
imul
fs
sahf
pop
lds
addr16
insl
mov
arpl
sub
cli
enter
mov
add
test
xchg
mov
xor
add
mov
mov
dec
cltd
loop
mov
les
push
out
dec
mov
jmp
xor
lret
fnsave
xchg
pop
and
jnp
xor
sub
jns
in
loopne
xor
lret
sbb
dec
mov
cmp
jge
push
cld
push
mov
push
pop
fdivrl
push
jbe
mov
lea
test
sbb
jle
push
negl
negb
imul
and
insl
imul
xor
sbb
in
sub
dec
jmp
cwtl
mov
dec
push
call
sub
and
inc
shrl
adc
mov
ds
xchg
lods
jb
mov
cld
scas
xchg
lahf
mov
aam
and
leave
aad
ret
mov
in
xchg
mov
fwait
mov
pop
sbb
xor
pop
loope
ret
outsb
mov
or
in
outsl
icebp
out
mov
data16
lods
mov
outsb
xor
fistl
mov
loopne
lods
or
push
ret
lcall
cld
stos
movsl
lods
call
add
cmp
stc
adc
rcrl
cmp
pop
cmp
ja
dec
loopne
into
jp
test
sbb
rorb
sub
clc
push
in
or
cltd
mov
cmp
cmp
cmp
in
mov
mov
or
sub
and
sbb
pop
xchg
inc
lret
mov
xchg
cltd
pusha
nop
push
out
les
xchg
and
sub
cs
ja
cmp
lahf
fildl
cli
scas
out
cltd
into
mov
and
mov
mov
add
inc
jg
or
sti
push
jmp
loop
mov
scas
lods
loop
xchg
in
push
outsl
lods
test
std
mov
aad
add
pushf
mov
xor
push
xchg
or
adc
scas
inc
int
mov
push
lahf
lahf
vminsd
or
dec
xor
out
enter
and
test
mov
insb
pop
pop
movsl
mov
jnp
sahf
shl
out
faddl
xchg
cltd
mov
xchg
push
mov
and
pusha
or
call
mov
dec
sti
sub
jo
xor
jl
cmp
jl
pop
rolb
pop
lcall
int3
nop
mov
or
xor
jnp
cli
mov
add
notl
sti
hlt
or
aam
dec
loope
sub
pop
push
pop
data16
adc
mov
jns
pop
ss
jge
clc
jbe
dec
jnp
xchg
lret
sub
or
adc
cli
lahf
cmp
add
movsl
or
adc
mov
jae
mov
pop
scas
mov
inc
cli
icebp
aad
sbb
movsl
iret
stos
loope
jge
je
movsb
lods
mov
inc
pop
fstpt
enter
movsb
pop
xchg
leave
int3
xor
icebp
xchg
jnp
xchg
xchg
adc
xchg
mov
and
fidivrl
test
pop
enter
lock
xchg
lods
mov
gs
xchg
sahf
pop
or
stos
in
lahf
mov
fstl
sbb
into
xor
or
and
in
push
loop
sbb
outsb
inc
test
mov
aad
shrl
stos
mov
fisubl
dec
ljmp
xchg
int
loope
xchg
loop
cmp
cmp
test
or
or
mov
shl
push
sub
clc
jne
testb
push
mov
stos
jg
and
xor
dec
std
in
shrl
loope
mov
xchg
mov
pop
out
mov
cmp
std
cltd
push
clc
leave
dec
xlat
movsb
nop
not
adc
push
hlt
loope
pusha
push
js
ds
cmp
pop
nop
dec
jecxz
push
inc
out
add
pop
dec
and
loop
pushf
je
call
jb
inc
fstpt
xor
ja
test
xchg
andb
out
mov
in
orb
jl
loopne
push
adc
ja
sbbb
sbb
jb
jle
jg
lock
and
jbe
jne
push
ret
movsl
xor
frstor
push
in
sbb
shl
jl
sbb
mov
pop
xor
mov
inc
xor
mov
mov
sbb
jnp
sub
dec
or
mov
xor
wrmsr
insb
xchg
and
cs
dec
and
bound
pop
mov
fisttpl
dec
dec
dec
or
mov
mov
xchg
outsb
sbb
dec
or
dec
xchg
jge,pt
aas
mov
xchg
lods
sbb
push
rcrl
dec
popf
push
mov
and
shrl
push
mov
ret
imulb
fistl
xchg
movsb
clc
pushf
xor
lods
push
cmp
add
jae
dec
jbe
mov
xor
mov
lods
jecxz
jle
push
cld
pop
mov
or
addb
or
mov
lahf
repz
roll
imul
nop
add
mov
add
fiaddl
or
pop
pop
mov
scas
iret
sub
lcall
adc
cmp
out
insb
push
mov
data16
adc
sub
shrb
movsl
shrb
daa
pop
data16
push
mov
and
and
ds
fildl
mov
fcos
outsb
xchg
pop
outsb
dec
lds
ja
pusha
pop
or
jecxz
cmp
xchg
push
cmp
inc
gs
lds
adc
mov
int
outsl
lret
push
in
fldenv
daa
mov
xor
sti
icebp
lcall
push
gs
and
sahf
cli
lds
sub
mov
push
testb
sbb
popf
mov
aas
mov
fistps
and
fcoms
xor
or
popf
pop
loop
orb
jae
sbb
jg
push
mov
call
out
jb
mov
in
mov
or
popf
pop
and
bound
mov
sub
push
jno
fsts
test
adc
mov
mov
pop
mov
pushf
dec
sti
inc
dec
leave
imul
or
mov
std
mov
pop
push
sbb
repz
add
xor
and
rsm
hlt
cs
aam
and
movsl
xor
xchg
je,pn
fistpll
cmp
jnp
xchg
xchg
lds
std
cmp
fistpll
insb
test
sub
cwtl
popa
mov
lods
je
test
sbb
xchg
nop
inc
jge
repz
mov
cwtl
or
add
imul
mov
inc
daa
xchg
lods
aaa
sbb
adc
push
mov
out
push
add
sub
push
out
xor
popa
insl
xlat
test
movsb
cmpsb
jns
or
adc
mov
push
push
mov
inc
xor
pop
dec
xor
mov
cli
in
xor
ss
loopne
nop
test
movsl
cmp
inc
movsl
test
fmull
out
inc
jne
cmpsb
in
aaa
addr16
dec
scas
jp
push
jle
das
cmp
push
add
mov
cs
sti
mov
push
mov
sub
sub
xchg
mov
addr16
incl
dec
shrb
aas
test
lods
orl
or
pop
loope
hlt
push
bound
cs
push
aad
les
rol
xor
push
and
or
jb
call
xlat
xchg
or
add
iret
mov
and
dec
sarb
sbb
loopne
lock
loopne
or
add
mov
sub
cmp
loop
popf
sbb
imul
sarb
fwait
add
jmp
fldcw
mov
add
sbb
xchg
lret
sahf
cmp
inc
jge
test
xor
and
adc
imul
dec
fcomp
in
scas
push
ud2
ja
gs
inc
mov
or
inc
inc
aas
mov
stos
mov
aad
test
sbbb
cltd
idivb
hlt
adc
les
dec
sbb
push
pop
jnp
cmc
cld
xchg
lcall
xchg
scas
ja
add
fcoml
stos
xor
and
iret
lahf
es
in
cltd
mov
jno
xorl
fdivrs
inc
icebp
call
xchg
dec
sahf
pop
loopne
mov
pop
addr16
lock
adc
xor
sarb
inc
stos
in
add
aam
rol
push
pop
fnstenv
pop
mov
mov
adc
je
push
push
cmp
ret
fidivrl
push
add
mov
scas
jl
out
ja
mov
and
setge
xor
xchg
sub
dec
lahf
or
movsl
outsl
addr16
stos
jg
xor
push
arpl
rclb
std
jae
popa
paddw
sahf
sbb
or
mov
mov
sub
adc
adc
dec
addb
and
or
mov
fwait
inc
gs
popf
cltd
scas
mov
or
pop
cmpsl
push
xor
xchg
mov
ja
clc
mov
xor
dec
cld
xor
xchg
push
sub
lods
or
fcomps
mov
addr16
loope
cmp
fmull
mov
lahf
lcall
aam
xchg
lea
push
int3
lods
in
mov
lea
andl
push
mov
sbb
pop
cmpsb
arpl
xchg
mov
repz
mov
fdivs
pop
dec
aam
cmpsl
push
mov
mov
dec
das
rol
push
mov
push
stos
pop
xchg
fucomi
lret
ret
and
push
inc
mov
ja
mov
scas
sub
out
mov
mov
shrb
sbb
fistps
cmp
xchg
or
dec
push
jno
sbb
nop
in
mov
ja
mov
dec
iret
mov
out
into
fcom
push
push
cld
cmp
inc
or
jl
mov
inc
out
icebp
add
sahf
inc
or
in
sbb
mov
xchg
pop
insl
sub
rclb
rcl
pop
out
fnstcw
ss
aaa
aaa
mov
icebp
xchg
push
int
sbb
push
mov
pop
pop
adc
mov
movsb
stos
mov
sbb
rolb
mov
pop
and
arpl
shl
jns
cmp
sahf
mov
jb
xor
dec
xchg
or
roll
mov
sbb
mov
pushf
lahf
jle
scas
pop
xor
popf
push
pop
clc
adcb
dec
cmp
rolb
fs
ret
adc
add
call
lahf
pop
fnstenv
or
int3
sub
into
adc
xor
pop
cs
jbe
lahf
push
fiaddl
inc
inc
fisubrs
jne
adc
iret
ljmp
lcall
jns
xchg
imul
testb
push
pop
xor
sbb
push
inc
jp
or
in
mov
xor
add
cli
orl
mov
in
movsl
sub
dec
pop
mov
xchg
in
xor
xor
idiv
sub
fsub
and
stos
cmp
xchg
mull
insb
dec
cmp
cmp
jns
std
std
sub
mov
push
cli
add
mov
mov
test
sbb
incl
cmc
cmp
jle
add
in
xchg
add
push
push
out
adc
pushf
push
enter
pop
test
push
roll
add
push
lret
ret
lock
push
jnp
mov
movsb
ja
pushw
dec
cwtl
push
xlat
scas
je
mov
and
sub
mov
cli
and
pop
cmp
inc
mov
xchg
icebp
mov
lods
mov
insb
cmp
mov
insb
pop
push
test
out
push
hlt
xchg
ljmp
jmp
pushf
add
push
into
hlt
stos
sbb
and
xchg
lcall
ret
xchg
int3
push
arpl
movsl
mov
mov
or
pop
adc
rcll
sarb
mov
pushf
and
movsb
xchg
push
aas
sub
pop
imul
push
mov
jl
scas
pop
adcl
dec
test
cmc
push
jnp
pop
mov
mov
mov
stos
pop
cmp
pop
xlat
mov
or
cltd
inc
mov
nop
rcr
inc
sub
and
outsb
pop
daa
xchg
jge
cltd
repnz
ljmp
inc
jo
lock
movsl
xor
jmp
mov
je
aas
sub
rolb
scas
arpl
out
ljmp
loopne
jg
jbe
cli
fisttps
jmp
fildl
adc
test
aas
dec
lods
jne
dec
cmp
stos
pop
imul
mov
mov
sbb
xor
jmp
aam
mov
jnp
mov
cmp
mov
xchg
xchg
jp
fimuls
cmp
popa
cmp
jmp
pop
cwtl
mov
add
gs
cld
cwtl
sub
imul
rorl
les
or
inc
or
mov
sub
cmp
push
pop
sbb
jmp
mov
xchg
and
xchg
sub
sbb
int3
sbb
fildl
xor
es
mov
xor
inc
sbbl
and
jl
mov
add
in
cltd
ja
test
bound
push
test
xchg
insl
mov
outsb
adc
sbb
and
pop
mov
rcrb
divb
and
add
int3
test
sbb
dec
xor
addb
xor
int
leave
fwait
adc
clc
aaa
or
lea
inc
sub
jmp
pushf
hlt
test
loopne
xchg
pop
adc
out
enter
pop
movsl
loop
jae,pn
cmpsl
enter
shl
stos
mov
ss
cmp
cwtl
fisttpl
pop
or
jl
lret
into
mov
aam
test
and
and
call
fwait
push
lea
imul
inc
push
ss
fidivrs
nop
insb
pop
or
mov
js
cltd
sub
mov
jae
and
out
sahf
jnp
mov
pushf
sbb
fdivrs
clc
lds
xchg
movsb
xchg
mov
inc
div
xor
ret
jmp
and
dec
out
adc
cmp
dec
out
stos
mov
dec
xor
call
jo
pop
jns
out
fiadds
popf
lea
jmp
mov
mov
or
xor
popl
sbb
imul
inc
sub
sub
mov
shlb
mov
cwtl
fwait
jo
mov
ret
jno
out
mov
mov
pop
add
cwtl
sbb
dec
fnstsw
add
dec
repz
mov
inc
mov
sbb
dec
jmp
cmp
popf
sbb
mov
cli
fidivrl
js
out
mov
inc
jnp
and
ret
cs
mov
jo
or
dec
call
xchg
or
push
loopne
mov
ja
out
clc
adcw
ds
and
lcall
ljmp
cmp
or
jge
arpl
and
data16
aad
cmpsl
or
inc
fsubs
rolb
movsl
minps
ret
movsl
cmp
add
lds
shll
mov
shlb
je
sbb
mov
xor
mov
cmp
scas
gs
cmp
in
mov
das
adc
and
ret
stos
inc
in
in
gs
repnz
mov
lods
add
jp
xchg
xchg
fldcw
jge
xchg
movsl
mov
mov
xor
fisubl
xor
dec
test
dec
ja
mov
mov
add
scas
hlt
cmp
or
adc
cli
xor
jg
leave
sbb
mov
shlb
adc
dec
pop
jae
ljmp
adc
and
insl
dec
sub
test
push
test
lods
inc
add
add
sub
aam
ret
and
insl
fidivs
inc
daa
xchg
popf
icebp
add
xor
daa
icebp
pop
cmp
pop
aas
xor
push
inc
cwtl
cmp
call
lods
adc
fidivrl
imul
in
pop
push
adc
push
jp
sbb
cmpsb
mull
imul
adc
jmp
sti
xchg
adc
out
pop
movb
popf
loope
adc
mov
cwtl
and
jecxz
mov
test
pop
mov
adc
xchg
or
jle
arpl
dec
cmp
mov
in
mov
fiaddl
clc
sub
popa
cltd
pusha
out
test
push
movsb
sbb
inc
mov
sbb
mov
push
daa
hlt
and
das
lcall
stc
mov
popf
sti
mov
ljmp
and
push
and
inc
je
mov
mov
or
xchg
add
xor
lods
add
sub
xor
das
push
pop
es
xor
adc
leave
jno
xor
push
addr16
adc
lock
ret
sbb
jl
jmp
jg
cmp
imul
cmp
xchg
test
test
lcall
xor
shl
or
and
test
push
repnz
sub
icebp
inc
pusha
cmpsl
test
sub
adcb
ljmp
push
mov
lods
cmpsb
lea
dec
das
or
jae
in
lds
xchg
jg
mov
xchg
ds
fisttpll
nop
mov
push
cmpsl
movsb
leave
pusha
lret
pop
mov
gs
daa
jmp
jae
or
jecxz
xor
pop
dec
push
sbb
mov
adc
push
add
fisubrl
lret
push
xlat
pop
loope
icebp
jo
fcomip
fmull
std
and
fidivrl
aam
mov
movsb
pop
dec
jnp
jecxz
movsb
mov
inc
push
jb
cs
adcb
int
xchg
daa
fwait
cltd
mov
jecxz
pop
insb
jnp
rorb
fnstcw
int3
and
adc
mov
fstpt
mov
xor
loop
aas
sbb
loope
ret
enter
jmp
push
popa
xor
jmp
push
push
dec
and
cmp
ss
dec
xor
push
mov
in
cmp
shrl
icebp
push
sub
test
in
mov
dec
popl
fmull
call
jb
stos
jno
add
add
mov
add
iret
sub
pop
cwtl
pop
ss
lds
testb
mov
jp
mov
popa
data16
push
ljmp
add
mov
jecxz
adc
movsb
push
lock
insb
sbb
jmp
pop
scas
sbb
mov
or
xor
mov
inc
adc
dec
lret
xchg
push
dec
sub
mov
mov
cwtl
aaa
test
mov
ret
cmc
call
add
clc
adc
push
mov
ret
mov
xor
inc
xor
or
movsb
mov
adc
lret
jae
mov
shll
test
push
add
loop
int
aam
cwtl
clc
fcompl
sbb
sbb
mov
inc
fwait
jg
push
pop
int
jns
mov
pop
arpl
add
daa
add
add
pop
adc
jp
out
cmpsl
mov
aas
shlb
pop
int3
jo
mov
movb
sub
or
jle
add
lods
in
in
inc
test
add
sbb
shrb
push
mov
push
jmp
sbb
jb
pushf
movsl
xor
dec
je
repnz
xchg
or
mov
dec
in
pop
lds
loop,pn
stos
mov
aaa
popa
sub
outsb
jne
aas
cmpl
mov
and
sbb
jg
test
scas
popf
pop
dec
shll
and
mov
push
mov
ja
fldenv
jl
addb
test
loopne
lcall
push
in
jns
sub
aam
jbe
mov
xchg
pop
fidivl
xor
or
lcall
mov
adc
mov
inc
cmp
xor
mov
lret
in
lcall
lahf
mov
jge
call
test
jg
adc
sarl
enter
adc
call
cld
mov
pop
ret
loop
outsl
sbb
jb
xchg
loop
xchg
pop
push
sti
jno
inc
or
push
shlb
push
int3
xlat
add
sbb
dec
int
std
es
movb
jo
dec
sub
pop
adc
xor
push
or
dec
dec
enter
gs
lock
sti
pusha
fadds
jl,pn
fidivrl
fcoms
mov
and
cmc
mov
jne
jp
sbb
stos
mov
add
and
mov
inc
inc
std
lea
adc
pop
jno
sbb
out
dec
pop
incb
add
cli
add
pop
aaa
xor
orb
popf
mov
jp
and
cmp
pop
shrb
jmp
ret
mov
or
dec
mov
lret
push
imul
jb
popf
mov
scas
mov
mov
pushf
xchg
pushf
push
cmp
inc
loope
jne
icebp
imul
nop
bound
sahf
cmc
cmp
push
cmp
xor
lahf
aam
mov
shlb
fisttps
lods
xchg
sub
imul
imul
mov
ljmp
cli
imul
sahf
jp
sti
pop
sbb
cwtl
push
in
or
lods
pop
xor
inc
cs
sbb
in
mov
xlat
leave
mov
gs
pop
aas
out
sbb
jno
pop
pop
lret
push
rcll
or
cmp
popf
aas
xor
mov
imulb
xchg
lds
ss
in
push
cmp
cld
stc
std
shll
pop
mov
adc
sub
sub
mov
sub
or
int3
fistl
adc
add
and
test
sub
aaa
cmpsb
cmp
test
sbb
aas
fdivl
test
push
inc
in
or
pop
mov
jg
mov
xchg
mov
mov
xor
pop
pop
mov
inc
mov
mov
fidivl
ret
aaa
lret
mov
push
sbb
clc
lret
cmpsl
or
stos
mov
xor
inc
adc
fstl
adc
pop
shll
pusha
fwait
data16
or
dec
fsts
aas
jmp
jl
add
xchg
cs
xchg
out
scas
mov
and
lock
mov
cld
xchg
mov
outsb
push
pop
stos
sbb
stos
jnp
insb
pop
movsl
and
and
dec
sub
sub
rcrb
inc
addr16
jb
loopne
dec
adc
jg
je
mov
xchg
lret
cmp
or
mov
rcr
push
insl
pop
inc
push
mov
pop
lret
cltd
inc
in
cmp
enterw
cltd
push
inc
je
nopl
jno
iret
lock
mov
inc
adc
bnd
in
jmp
cmp
pushf
xlat
jbe
cmpsl
xor
test
fnstsw
inc
sub
in
mov
xor
decb
outsl
xchg
jno
decb
nop
xchg
add
out
add
and
lock
shrb
subb
mov
sbb
xchg
lds
insl
sbb
push
xchg
and
movsb
orb
clc
arpl
adc
jbe
sahf
movsl
adc
loop
int3
orb
jg
add
or
mov
or
xor
jbe
cwtl
mov
dec
jae
adc
jp
mov
imul
stc
stc
js
cmp
cmp
bound
int
mov
lods
pop
cwtl
lret
enter
sub
pop
adc
xchg
cmp
lret
addr16
sbb
movsl
pop
pop
cld
dec
and
pop
and
outsl
jl
fcoml
ret
cmpsl
lods
and
mov
js
xor
push
or
pop
icebp
cmp
sub
test
lcall
aaa
je
inc
push
addr16
jle
out
xchg
xor
push
lcall
out
jle
inc
cli
imul
sub
gs
in
pop
sbb
adc
jne,pn
test
out
push
rclb
fldl
and
loope
shrb
shlb
adc
imul
mov
sbb
jle
repnz
int3
cmp
sub
mov
adc
pop
cmp
and
imulb
fcompl
and
adc
xchg
scas
mov
and
adc
cmp
sbb
test
and
iret
stos
subl
push
movsl
and
cli
loope
add
adc
cltd
iret
push
and
mov
stc
mov
test
fsub
icebp
mov
lods
aad
dec
mov
shl
fcompl
mov
mov
add
push
dec
dec
cmpsl
push
in
push
push
dec
sub
js
pop
in
mov
mov
push
xchg
and
loop
push
popf
movsb
add
iret
rol
or
sub
mov
nop
or
arpl
push
pop
into
mov
stos
push
bound
pop
and
dec
aas
pop
lods
rcrb
stos
ret
in
sbb
stos
adc
xchg
sub
pop
mov
mov
fwait
cmp
scas
in
loopne
pop
aas
fistpl
std
add
xchg
push
lret
fcomps
ss
iret
std
sub
cmc
frstor
pushf
inc
or
fsts
scas
cmc
rcll
mov
leave
ljmp
jae
shrl
or
lahf
iret
cmp
jmp
lock
in
ret
inc
or
jb
push
adc
popa
mov
ja
leave
out
loop
rol
jmp
subl
sub
fcoml
mov
js
rorb
push
insl
arpl
sub
std
mov
adc
cmp
cmp
fwait
pop
divb
enter
pop
mov
imul
dec
mov
inc
mov
push
cmc
jne
in
call
cltd
mov
push
cli
stc
divb
addr16
in
clc
pop
push
inc
mov
mov
icebp
cltd
and
fdivl
mov
subl
and
cld
in
pushf
sbb
int3
jg
mov
jl
jo
std
inc
pop
test
inc
mov
cmp
mov
inc
out
das
xor
mov
rcrb
mov
xchg
iret
xchg
push
movsl
push
jmp
and
aad
and
fdiv
jne
lods
pop
shr
mov
xor
pop
push
daa
arpl
repz
pop
xor
popl
mov
dec
pop
pop
ljmp
sbb
iret
sahf
fbstp
inc
adc
add
sbb
cmp
lahf
jl
dec
nop
and
or
dec
dec
or
sbb
mov
gs
cwtl
or
pop
ja
or
and
mov
std
xlat
lea
push
in
jae
jae
rorb
and
xor
cmp
jbe
cmp
pop
aaa
addb
and
in
sub
push
dec
sbb
movsb
cmc
mov
inc
jp
push
dec
jp
faddl
jge
je
lock
ljmp
mov
pop
mov
xchg
loopne
data16
sahf
jnp
mov
mov
pop
das
cs
add
and
fidivl
cmp
adc
ljmp
popf
inc
mov
jbe
add
xchg
test
cmpsl
out
movsl
mov
inc
cli
push
sub
pop
sub
xchg
sar
jnp
fbld
iret
mov
cmp
dec
je
lods
or
in
arpl
repz
mov
es
fisubrl
mov
fimuls
push
and
lret
add
daa
fsubs
sbb
insb
scas
bound
cmpsb
jmp
leave
xchg
adc
dec
inc
jb
xchg
lahf
ds
adc
je
inc
adc
daa
test
mov
or
adc
cmc
cmp
lret
sub
aaa
insb
xor
fs
outsl
aas
iret
dec
mov
cmp
in
scas
mov
mov
dec
mov
push
jno
addb
sbb
mov
dec
and
jns
xchg
mov
insb
sbb
mov
pushf
xchg
sbbb
andb
movsl
rorb
nop
xchg
and
fisubl
inc
pop
or
test
pop
scas
and
and
sbb
ljmp
std
xchg
dec
hlt
aam
adc
cli
and
pop
push
pop
cmp
outsl
sub
scas
pop
cmp
sbb
out
adc
fwait
xlat
rcl
pop
fidivrl
mov
xchg
gs
mov
xchg
add
aaa
sbb
int3
testl
insb
jne
ret
cmp
arpl
lock
mov
outsl
xor
test
fwait
dec
test
xor
sarb
popf
rorl
push
stos
inc
out
push
and
and
and
je
pop
push
ret
dec
mov
call
dec
mov
call
ret
in
adc
sbb
ret
pop
das
aaa
fldl
testb
hlt
jp
pop
cli
push
or
notl
daa
pop
dec
sub
jmp
jmp
fwait
sbb
movsl
sub
inc
xchg
inc
call
jp
insb
or
imul
cmp
dec
jecxz
jae
mov
ss
xchg
dec
xchg
and
add
test
jae
lods
test
in
cmp
cmp
fsubr
shlb
add
dec
mov
jbe
loope
sbb
jo
fdivs
es
push
aas
pop
inc
jg
add
aas
sahf
movsl
push
arpl
xor
or
push
out
xchg
lock
jnp
ja
adcl
ja
add
aad
loop
jo
push
add
mov
imul
ja
aaa
or
push
ja
or
and
icebp
mov
push
ja
subl
adc
xlat
inc
jp
xchg
sahf
mov
adc
xchg
decb
add
adc
xchg
or
jmp
add
push
icebp
das
jo
cmp
jle
sub
sbb
stos
lret
outsl
aas
mov
dec
test
xchg
add
test
bound
pop
mov
jns
fwait
mov
add
fwait
and
insb
scas
cmp
push
inc
jge
jg
test
aas
addl
xor
mov
mov
jb
mov
inc
pop
jl
push
mov
cmpsl
scas
test
iret
loopne
xor
inc
mov
int3
dec
fldl
add
lods
hlt
les
sti
mov
cli
cltd
aad
xor
in
jl
sahf
xchg
cwtl
mov
js
mov
mov
fbstp
inc
addr16
out
in
mov
in
int3
pop
in
inc
push
and
xor
push
add
jo
movsl
xlat
sub
cld
sub
stos
sub
pextrw
xor
and
es
add
xchg
test
das
pushf
push
mov
in
inc
lret
inc
inc
pop
aam
xlat
loop
outsl
cld
imul
pushf
imul
or
xlat
sbb
int3
insb
out
scas
out
dec
test
cmp
jo
cld
add
jns
stos
lock
jo
dec
dec
jmp
iret
xchg
push
xlat
outsb
inc
gs
mov
inc
aad
cmp
insl
sub
mov
cmp
les
add
pushf
mov
mov
adc
aas
dec
es
push
mov
scas
sbb
stos
fisubs
or
fldcw
flds
sarb
mov
xchg
xchg
aad
xchg
mov
sbb
movsb
addl
in
push
sub
pop
dec
test
outsl
lock
xchg
popa
push
bound
movsb
clc
xchg
fdivrl
lods
push
int3
jecxz
add
dec
shll
out
int3
loopne
ljmp
data16
lock
imulb
call
shrb
incb
cwtl
bound
sub
pop
jle
cmc
cmc
add
movsl
pop
sti
sub
xor
dec
mov
adc
add
cli
iret
mov
leave
push
jns
push
cmp
xchg
mov
cld
test
mov
les
inc
and
adc
es
scas
lcall
outsl
xor
pop
lret
push
insl
xlat
or
stos
imul
and
in
pop
jp
adc
sbb
inc
fistpl
xchg
push
in
mov
ret
adc
pop
xchg
dec
jbe
xchg
fwait
jmp
jecxz
dec
jmp
mov
pop
and
push
cs
xchg
push
cwtl
ficoms
and
inc
testl
xchg
mov
call
cmpsb
fwait
adc
pop
mov
push
cli
lods
cmpsl
shl
data16
in
mov
sub
mov
clc
es
test
int
nop
mov
loope
xor
aam
mov
lcall
push
scas
lcall
fcomip
mov
pop
ja
sbb
test
testb
std
mov
mov
dec
repz
stos
iret
xchg
push
adc
popl
out
loope
mov
int
mov
movsl
ret
daa
inc
stos
mov
inc
addb
xchg
mov
push
push
lock
pop
dec
in
imul
jecxz
mov
cmp
orb
cmp
sub
ss
scas
dec
dec
cmpsl
outsl
sub
out
sbb
call
inc
xchg
bound
sti
cld
aad
adcb
push
jae
fsubl
addr16
or
inc
or
cmc
aaa
fwait
add
inc
dec
loopne
les
in
adc
scas
sarb
sbb
rorb
repnz
xlat
mov
mov
stc
imul
and
fidivrl
insl
sub
dec
arpl
and
mov
add
mov
adc
mov
sub
lea
shlb
imul
pop
shll
loopne
xor
xchg
repz
adc
pop
popa
push
or
or
push
idivl
mov
sub
xchg
test
cmpsl
mov
dec
push
orb
outsb
inc
dec
in
xchg
rcrb
popf
lods
dec
add
movsb
cmp
ja
repnz
aaa
dec
or
test
mov
rcrb
out
sub
add
or
sub
dec
lret
adc
loopne
aaa
inc
gs
and
push
or
bnd
pop
and
mov
mov
es
lahf
xchg
movl
aaa
sub
out
movsl
loopne
jae
jb
pop
cmp
sar
ret
stc
aaa
popf
fstps
add
push
xchg
int3
in
gs
clc
adc
lods
adc
pop
xchg
push
mov
mov
rorb
leave
cmpsb
cltd
mov
adc
push
jge
xchg
icebp
and
ljmp
mov
addr16
and
pop
and
add
add
push
rcrb
aas
xor
sub
xchg
push
push
cltd
clc
inc
cmpsl
cmp
cwtl
mov
or
inc
mov
mov
popf
push
fldt
push
or
pop
test
leave
sub
sbbb
leave
daa
jae
push
mov
pop
mov
or
pop
or
mov
lahf
cmp
xchg
xchg
adc
mov
ljmp
test
lcall
inc
sbb
xor
jns
dec
dec
cltd
lcall
push
dec
and
add
sti
inc
inc
mov
xor
jbe
or
cmc
add
int3
inc
sbb
je
add
xor
cli
mov
cmp
cvtdq2ps
daa
add
cmpsb
xchg
mov
test
dec
jle
xchg
push
add
xchg
xchg
mov
inc
in
add
fsubrs
ds
inc
fmuls
adc
out
addr16
sti
dec
sub
negb
inc
insb
es
icebp
repz
dec
aaa
es
adc
aas
lds
xchg
or
je
fisttps
lods
in
lea
and
jle
mov
es
xchg
inc
or
sbb
idiv
or
xlat
jae
jnp
cmpsb
xchg
or
out
ret
mov
idivl
pop
mov
mov
testb
jge
test
inc
xor
arpl
sub
xor
fstps
test
sbb
xor
ljmp
imul
jmp
add
loopw
js
rolb
call
sbbl
enter
fwait
lods
push
fwait
or
add
jbe
fists
ja
cmpsb
xor
das
aam
movb
pop
xor
loopne
cmp
scas
jecxz,pn
mov
lret
cmp
add
ret
xor
iret
lock
sub
cmc
xchg
add
or
std
dec
cmpsl
xchg
pusha
or
mov
push
psrad
xor
mov
xchg
dec
mov
and
in
mov
jle
push
jl
mov
jno
ret
ret
ss
adc
mov
aam
jne
loope
mov
ret
stos
fcomi
mov
je
mov
ss
dec
xchg
cmp
mov
icebp
out
sbb
jne
mov
sbb
cmp
dec
mov
mov
xchg
lret
arpl
fdivrp
sbb
lahf
jge
repnz
arpl
jnp
out
test
mov
adc
lret
xchg
inc
add
ds
xor
jge
out
scas
and
stos
xchg
add
cmp
lahf
adc
cmp
ja
cmp
fbstp
inc
push
cmp
ret
mov
repnz
sbb
int3
int
jmp
mov
lahf
outsb
lret
mov
insb
addr16
repnz
int3
xor
inc
jb
cmpsl
inc
adc
mov
xor
divl
or
repz
cltd
jns
es
cmpsl
pop
cs
dec
loop
lock
test
jecxz
sti
jecxz
pop
and
xchg
jo
jns
sbb
repnz
and
mov
lret
fidivs
repz
lret
leave
addr16
imul
jno
lret
fptan
jb
mov
mov
mov
push
push
inc
bnd
lcall
icebp
cmp
jbe
in
mov
lock
fcmovu
adc
mov
into
and
and
adc
push
nop
sbb
inc
pop
pop
sub
out
fdivs
iret
cwtl
je
pop
jg
dec
mov
mov
jge
push
cmp
and
into
or
cmpsl
cmpl
push
lock
addb
in
push
test
je
mov
pop
dec
data16
xor
sti
jo
sbb
jno
hlt
shll
enter
add
or
or
fwait
dec
test
movsl
push
lahf
mov
daa
add
call
cmp
mov
pusha
xchg
adc
cmpsb
icebp
je
jecxz
mov
cmp
mov
push
mov
sub
fiadds
lds
popf
push
xchg
sbb
xchg
shrb
xchg
mov
stos
mov
andb
stc
int3
inc
and
add
imul
mov
and
lods
mov
std
in
sub
mov
and
push
push
add
and
test
loope
insl
test
movsl
addr16
les
push
insb
imulb
mov
test
sarb
roll
cmp
ds
les
pusha
push
pushf
lea
jle
xorl
into
movsb
xchg
dec
inc
inc
iret
jbe
dec
fmuls
jne
mov
test
jg
and
adc
jle
repnz
fs
cltd
adc
rcrl
psraw
std
sbb
add
pop
stc
andb
dec
xor
add
sti
cli
dec
enter
pop
dec
scas
push
sub
insl
les
js
outsl
scas
popa
and
sub
xchg
iret
or
inc
push
cwtl
lock
icebp
pop
cs
jp
cli
in
cwtl
icebp
movb
shlb
fmuls
dec
sbb
ja
fidivrl
mov
cmp
dec
mov
pushf
sbb
daa
test
mov
dec
fdivs
adc
outsb
dec
in
stos
mov
inc
test
pusha
sahf
mov
and
lock
nop
leave
pop
addb
out
inc
pop
sbb
jne
cmpsb
call
in
outsl
pop
das
fldcw
pushf
sbb
dec
jge
sahf
test
jmp
xchg
cmpl
test
lods
aad
dec
inc
daa
in
mov
movsb
icebp
test
inc
loope
push
xor
jle
sub
das
movsl
lcall
sub
rclb
lods
movsl
cmp
sub
out
dec
gs
jl
sbb
mov
jge
gs
pop
stc
mov
cld
jecxz
hlt
pushf
adc
lret
not
outsl
xor
cltd
xchg
cli
lcall
rcrb
dec
xor
adc
jl
fwait
pop
data16
and
dec
stos
pushf
pop
sbb
daa
sub
nop
pop
ljmp
jno
jno
xlat
das
rcrl
jbe
imul
ret
add
dec
cwtl
xchg
and
jp
fsubs
cmp
fldenv
xchg
aaa
cli
xchg
popa
xchg
stc
sub
push
xchg
lea
mov
mov
outsl
dec
dec
push
inc
mov
dec
add
jb
sub
movsb
ds
add
xchg
jno
dec
mov
mov
nop
sti
xchg
rorb
divb
cmp
sub
sub
test
ret
sub
jae
jne
ja
jo
xchg
pop
or
mov
out
mov
inc
out
sub
or
movb
mov
cli
sbb
in
push
sbb
add
mov
xchg
sub
xchg
pop
jmp
in
add
test
or
gs
negb
mov
xor
jmp
sahf
loopne
dec
arpl
or
mov
inc
and
inc
push
int3
addb
rcrb
jne
push
jno
adc
pop
test
rorb
dec
add
aad
sbb
sub
jg
cwtl
xchg
aad
lret
pop
xchg
test
andb
insl
add
adc
aaa
data16
dec
in
lret
adc
lods
cmpsb
xor
into
adc
sbb
jne
jns
add
imul
repz
inc
stc
imul
lcall
adc
call
dec
push
jmp
icebp
mov
sbb
je
je
les
sahf
test
pop
pop
ljmp
xchg
lods
das
pop
loopne
jbe
je
call
mov
call
fstpt
stos
mov
lea
cmpsl
lret
les
pusha
pushf
les
dec
ret
es
repnz
jecxz
pop
and
mov
xchg
in
in
cwtl
jno
movsl
fldl
push
stc
cmp
call
adc
and
xor
cmpb
mov
fdivs
mov
pop
sub
les
test
mov
mov
neg
ljmp
jns
out
enter
js
or
std
mov
popa
xchg
hlt
loop
pop
lahf
push
std
add
xchg
and
out
insl
sub
test
in
fcmovb
pushf
push
out
shl
mov
jb
xor
js
pop
fcmovnb
push
and
cmpsl
xchg
mov
lret
lret
add
and
out
je
add
sub
inc
dec
cltd
fstl
add
mov
mov
mov
and
inc
dec
fiaddl
les
jno
out
in
mov
or
clc
stos
mov
push
pop
xorb
popf
outsb
sbb
xor
jb
push
loope
rorl
lods
fidivl
inc
iret
mov
lock
dec
xor
repnz
or
push
or
cmp
adc
cmpl
and
arpl
and
in
xchg
jmp
ret
cmp
fldt
jnp
push
in
pop
and
xchg
push
fwait
dec
dec
fbld
xchg
aaa
add
sub
arpl
bound
in
aas
shll
mov
xor
cltd
sub
out
inc
cwtl
mov
fwait
lahf
outsb
ffreep
aad
loop
and
sbb
sahf
mov
stc
push
out
jge
fdivs
and
sub
inc
in
cmp
jbe
lods
iret
les
or
push
sbb
lret
orb
lods
testl
mov
icebp
adc
ja
mov
or
push
push
mov
xchg
divb
jno
jbe
push
ljmp
xor
and
and
and
adc
or
inc
lds
lret
rorl
arpl
sbb
pop
ds
cmpsb
dec
mov
adcb
ljmp
into
call
fbld
mov
inc
testl
xlat
adc
mov
imul
xchg
pop
clc
movsl
xor
mov
shlb
inc
mov
jecxz
repnz
dec
pop
jge
out
or
shrl
imul
iret
or
insb
pop
sbb
cmp
fildll
in
pop
pushf
push
sub
dec
mov
sbb
inc
cmpsb
int3
add
fldcw
pop
inc
push
jecxz
lock
pop
scas
in
cmp
jb
adc
or
and
jno
pop
pop
mov
maxps
add
outsl
pop
xchg
sub
out
movsl
xlat
lds
xor
out
cmp
add
aaa
imulb
cmp
mov
dec
cmp
test
fs
pop
or
outsl
pshufw
cmp
xchg
xchg
insl
mov
outsb
int
cli
fwait
loopne
add
jmp
cmp
pop
bound
inc
mov
popf
sbb
push
lods
jmp
jb
xor
add
in
adc
data16
pop
cmp
pusha
mov
ljmp
ror
sahf
sub
push
sarb
daa
insl
mov
pop
les
sub
leave
popa
push
cmpsl
or
mov
xchg
roll
dec
fnop
xor
sbb
xor
pop
js
xor
mov
subl
es
pop
int
inc
and
cs
or
mov
je
inc
out
inc
jecxz
aam
xlat
xchg
in
idivb
pop
inc
js
sbb
nop
icebp
push
addb
xor
mov
das
movsb
pop
sar
mov
out
jo
gs
pop
push
jns
inc
mov
int3
out
xchg
scas
mov
hlt
lcall
repnz
mov
inc
aad
inc
jb
testl
cli
add
mov
dec
mov
jbe
gs
xchg
in
movsl
add
push
xchg
pop
jg
jno
fdivrl
pop
mov
pop
imull
div
mov
mov
xchg
fisubl
cmp
loop
lahf
lods
pushf
sub
std
sbb
and
jne
pop
mov
ja
inc
jne
testl
pushf
mov
push
das
mov
clc
lods
sahf
lods
scas
popa
adc
std
push
pop
stos
lea
test
aas
sarb
mov
jnp
rolb
xchg
and
sbb
and
cwtl
jne
sbb
pop
mov
loop
push
imul
and
mov
cmpsl
push
idiv
mov
mov
test
rcrl
call
pushf
sbbb
mov
cs
das
add
shr
xchg
dec
sbb
jmp
jno
gs
fbld
lds
orl
lret
lock
outsl
sbb
scas
movsb
jle
adc
jle
add
cmpsb
outsb
sarb
repz
cltd
or
pusha
mov
movsb
in
sbb
xchg
insl
push
pusha
jecxz
arpl
int
mov
dec
mov
jns
mov
outsl
pop
inc
mov
push
jecxz
cwtl
outsb
xor
push
addr16
loope
ficompl
sbb
ret
ss
inc
movsb
icebp
inc
push
jg
sahf
lret
sub
ja
fmul
cmpsb
mov
adcb
jmp
adcl
je
faddp
push
push
cmp
aaa
sub
dec
jge
xchg
sahf
stos
xchg
shll
jbe
pop
jae
xchg
lahf
cmpsb
adc
xor
add
jns
pop
lcall
sbb
or
inc
cmp
and
xor
lods
stos
and
dec
in
mov
cmp
popf
push
and
jae
loopne
push
dec
stc
pop
fucomp
cmc
sub
jbe
add
pop
mov
and
or
cmp
popf
xchg
mov
mov
push
ljmp
ret
mov
stos
mov
enter
gs
dec
popf
cld
iret
xor
shl
rolb
add
cmpsb
add
xor
popf
insb
sub
ret
inc
imul
jne
pop
xor
jle
adc
fisttpl
jmp
gs
shr
adc
enter
push
push
adc
rolb
fwait
xor
push
jo
push
mov
mov
out
adc
lea
sti
cli
mov
mov
test
pop
mov
add
aam
test
movsl
mov
fisttpll
aam
ret
jnp
jecxz
inc
stos
popa
pop
sbb
mov
in
xchg
lock
lret
shlb
add
cmp
push
cmc
push
mov
in
jnp
gs
or
frstor
jmp
xor
aaa
xchg
sub
ljmp
out
test
pop
pop
test
pop
das
xor
sbb
push
jl
mov
enter
mov
mov
ficoml
xor
repnz
inc
and
xchg
mov
aad
loop
or
add
loop
jb
loope
or
cmpsb
insl
push
cmp
movl
ret
jb
cld
push
popa
cmp
test
sub
lahf
or
xor
in
std
and
call
lods
jne
jge
add
shr
sbb
mov
dec
ja
mov
fucom
xor
popf
out
fstpt
mov
out
push
mov
push
je
hlt
ss
push
mov
scas
jo
push
out
add
xor
push
rorb
mov
xor
adc
mov
mov
xchg
lahf
and
mov
in
jg
outsb
and
gs
lea
ljmp
add
xchg
cmp
cmp
mov
icebp
add
insl
jp
jno
inc
mov
jg
mov
pusha
sbb
cmp
test
inc
adc
ds
outsl
jecxz
inc
xlat
in
movsl
mov
jle
mov
bound
test
mov
xchg
jmp
les
nop
stos
mov
std
stos
rclb
xchg
divl
pop
mov
dec
inc
rolb
sbb
sbb
mov
mov
adc
dec
clc
arpl
add
jle
mov
add
fsubrs
push
sarl
push
mov
xlat
sbb
loop
jg
lcall
imul
push
shll
jle
adc
bnd
add
pushl
fsub
int
pop
pop
flds
dec
test
in
xor
lods
fcmovne
push
stc
aas
das
aad
add
sbb
push
lods
mov
xchg
mov
cmpsb
fists
aam
insb
nop
cli
loop
std
xor
jnp
out
rorb
lods
jo
pusha
add
js
stos
ret
push
add
sbb
notl
inc
inc
mov
das
fs
stos
xchg
mov
movsl
outsl
pushf
xor
xchg
ss
xchg
sbb
in
pop
adc
out
xchg
xchg
insl
aas
add
orl
sbb
sti
test
lret
inc
lahf
and
stc
cmc
mov
push
xchg
imulb
cli
and
jo
or
stos
test
add
push
aad
dec
je
aas
jo
lret
mov
cltd
xor
fcmovb
and
xchg
xlat
mov
xchg
test
sbb
mov
aam
adc
loope
pop
sub
push
out
push
test
cmpsl
adc
int3
pop
repz
xorb
adc
dec
jecxz
dec
mov
xor
mov
jne
into
gs
push
pop
push
mov
fsubp
pop
pushf
mov
pusha
cmp
mov
mov
stc
popf
and
dec
inc
sub
mov
cmp
lcall
cmp
push
xchg
xor
mov
cmc
rolb
daa
cmp
push
call
push
cmp
adc
push
mov
mov
push
mov
in
rolb
push
fdiv
jno
lods
enter
imul
sbb
test
add
dec
sahf
dec
daa
std
scas
mov
loopne
outsb
and
jo
xchg
push
xor
xchg
jg
cmp
sub
xor
xchg
push
jnp
gs
bound
stc
push
rcll
or
mov
sahf
flds
dec
out
adc
int
fnsave
xchg
ret
js
add
test
xchg
imulb
xchg
rclb
int3
mov
or
adc
dec
push
inc
fsubs
adc
jge
rorb
cltd
mov
sysexit
rcrl
int
in
push
and
repnz
fldl
mov
imul
mov
mov
aam
add
faddl
rorb
imul
sub
adcl
and
movsb
inc
xlat
in
pop
into
pop
hlt
xor
cmp
loopne
cmp
pop
hlt
xchg
pop
sbb
bound
std
ret
fistpll
negl
dec
push
data16
and
dec
add
mov
shrl
push
mov
mov
cmpb
nop
out
negl
add
push
xchg
xchg
in
imul
les
data16
dec
rcrb
push
lahf
push
pop
inc
xor
pusha
xor
aaa
int
sub
add
imulb
sub
loopne
fstp
jnp
pop
lahf
cmp
dec
iret
imul
xchg
icebp
inc
ja
int
fisttpll
push
out
aas
cli
das
outsl
xor
and
pop
lret
popf
je
mov
fisttpll
dec
lods
mov
dec
mov
cltd
cmp
sub
mov
arpl
add
ss
mov
xchg
pop
sarb
mov
inc
xor
lret
flds
sub
scas
pop
sbb
mov
out
pop
lret
bound
cmpsb
mov
shll
aad
scas
add
jl
ds
add
mov
push
push
repz
mov
push
lods
jno
dec
std
mov
mov
jnp
ljmp
jno
push
movq
add
mov
insl
cmp
aaa
pcmpgtw
push
add
inc
mov
std
sub
ficoml
outsl
xor
into
jnp
fs
ljmp
jl
dec
dec
scas
adc
repz
out
cmc
push
lods
arpl
ss
arpl
or
ss
add
cwtl
les
enter
xchg
dec
sbb
cmc
mov
divb
out
jp
ds
push
push
xor
xchg
push
jmp
push
in
stos
xor
adc
into
xchg
ret
xor
out
mov
gs
pop
stos
mov
aas
mov
popa
mov
andb
icebp
jmp
ret
ds
pop
cmp
cld
and
pop
test
cmp
xor
mov
in
loope
jb
lds
push
aam
outsb
cmp
dec
imul
add
mov
rcrl
aaa
push
andl
in
imul
mov
insb
movsl
inc
pop
dec
imul
ljmp
dec
jbe
inc
test
imul
push
icebp
mov
popf
js
xchg
sbb
ret
imul
inc
pop
pop
inc
jp
push
xor
andl
cmp
mov
mov
cld
jle
arpl
xchg
je
inc
pushf
cmc
sub
xor
mov
jmp
push
xor
cmp
cwtl
mov
dec
into
mov
adc
mov
pop
or
inc
andb
push
sub
mov
icebp
fs
rclb
mov
inc
out
ss
ficomps
or
push
or
push
loope
fsts
adc
dec
sub
into
sub
xchg
adc
negl
cli
adc
push
in
ret
iret
adc
aas
mov
pusha
cmp
mov
adc
sbb
arpl
pop
cmc
xor
push
mov
bound
das
push
test
sbb
lock
xchg
rcrl
cmp
test
and
out
ja
gs
jnp
adc
sbb
sbb
xchg
test
mov
push
mov
xor
fnstcw
stos
in
js
fwait
ret
imul
xlat
xchg
ja
lret
in
fcoms
enterw
xchg
mov
push
js
cmp
pop
rorl
sub
mov
negl
xchg
inc
xor
xchg
xor
aaa
push
shlb
push
cld
popf
inc
stos
mov
ret
jne
and
sahf
dec
xor
or
pop
inc
mov
out
std
mov
sub
je
and
ret
and
arpl
push
jge
xchg
xchg
aam
cmc
popa
push
sbb
or
out
mov
arpl
stos
popf
sub
mov
addr16
add
fnstenv
out
das
pushf
sbb
inc
bound
in
popf
in
mov
sbb
mov
jnp
in
lods
mov
inc
inc
xor
aam
mull
xchg
jae
and
push
add
or
add
addr16
xchg
jbe
lods
jg
push
movsb
sahf
xchg
ficoml
pop
or
jnp
rcll
xchg
fsubrs
cmc
adc
xchg
mov
aam
sbb
ret
shll
cmpl
jl
add
cmp
fisubs
sbb
int
jp
cli
lahf
stos
in
add
loopne
push
pop
sub
mov
and
ja
cmpb
cmpsb
jg
jo
xchg
fsubrl
cmpsl
jo
jb
sbb
push
fwait
ja
clc
mov
popa
jo
xchg
add
xchg
in
out
sarb
mov
sahf
mov
out
lahf
mov
sub
imul
xor
out
adc
mov
mov
add
fcmovne
lds
loopne
ds
cmc
mov
jnp
jae
jg
add
pop
sub
pushf
cmp
sub
dec
dec
pop
addr16
je
cmpsl
fstps
pop
hlt
rolb
js
cmp
jl
lock
outsb
pop
repz
addb
or
xor
enter
jnp
xchg
cs
pop
add
gs
mov
hlt
test
jl
gs
lds
pop
xchg
sub
ljmp
ret
cltd
push
ss
sub
fld
mov
popf
pop
fmulp
jmp
pop
mov
adc
mov
jecxz
cld
mov
jbe
popa
and
fdivrl
les
adc
mov
das
in
adc
out
push
jl
mov
jb
dec
dec
cmp
repnz
dec
insl
cs
jb
sbb
js
outsb
lahf
sbb
pop
std
xchg
fdivl
in
or
cwtl
and
pop
inc
lret
lcall
int3
out
sbb
mov
fs
mov
mov
arpl
or
dec
repz
add
jle
fbld
mov
or
xor
inc
and
mov
fildll
jo
adc
pushf
mov
popa
push
fcmovu
cmp
aam
push
in
pushf
std
mov
les
fsubrs
pop
and
inc
adc
xor
scas
es
subb
xchg
sub
scas
mov
orb
fxch
imul
mov
push
mov
mov
inc
into
push
ret
lods
sub
cmp
shrl
lods
adc
mov
lods
mov
shrl
cmp
pushf
imul
add
ret
mul
add
ds
cmpsb
mov
aam
and
push
lock
cld
jbe
addr16
jle
data16
pushf
add
sbb
mov
sub
in
mov
and
inc
mov
stos
push
rorb
int3
pop
pop
clc
pop
lods
mov
imul
sub
lea
fdivl
add
insl
mov
ja
mov
xor
comiss
add
or
ljmp
dec
add
mov
adc
ss
mov
adc
icebp
out
xchg
mov
sbb
sub
sub
inc
sahf
ds
cmp
sbb
lcall
in
jno,pn
sbb
inc
xlat
xlat
pop
mov
cs
roll
mov
push
jge
sarb
pusha
mov
xchg
inc
fidivs
sbb
and
or
std
popa
shl
repnz
scas
cmp
out
cmp
je
add
mov
inc
push
mov
jns
ds
jb
jbe
stos
or
or
jg
insb
std
popa
stos
cmc
in
pop
fidivl
xchg
dec
or
stos
out
sbb
popf
adc
nop
fs
fdivs
out
add
cld
mov
filds
lods
icebp
fwait
cmp
xchg
seta
xor
jns
pop
insb
loope
add
js
jbe
jmp
inc
loope
subl
faddp
or
inc
pop
les
imul
stos
xor
xchg
pop
andb
mov
push
xor
aad
sub
add
and
aas
xor
cmp
dec
sub
xchg
pop
je
rep
faddl
xchg
or
xlat
add
arpl
dec
and
dec
dec
and
dec
xor
enter
jnp
pop
mov
fcomps
sbbb
inc
iret
mov
jl
ret
xor
jmp
lods
dec
mull
xchg
andl
add
ds
mov
push
sbb
xor
jb
mov
or
les
cwtl
adc
pop
popf
bnd
aas
loope
cmp
push
insb
fsubrl
jbe
clc
fs
rcrb
mov
rorb
or
popa
cvtpi2ps
in
std
dec
cli
daa
xchg
leave
add
movsb
push
xlat
orb
ljmp
sub
sti
mov
jle
mov
xchg
mov
mulb
sbb
inc
imul
cmp
push
int3
jl
mov
cmp
inc
stos
inc
cmp
push
jmp
inc
in
cld
ret
jo
mov
push
sti
clc
jnp
pop
cmpsb
lret
das
int
lret
je
test
cli
add
pop
fst
lock
xchg
loopne
std
and
test
xorb
not
dec
add
gs
mov
mov
add
hlt
add
jo
subl
shll
xchg
inc
or
or
notl
icebp
add
push
arpl
mov
mov
ljmp
ret
in
xlat
js
mov
test
and
in
rclb
std
jo
sbb
js
inc
out
ret
and
inc
insl
pop
push
mov
pushf
pushf
shll
push
js
hlt
xor
repnz
inc
imul
xchg
dec
add
scas
in
mov
adc
scas
mov
xchg
outsl
pop
clc
push
rcrl
push
pop
dec
das
dec
mov
lock
cmpsb
fdiv
dec
sti
sti
sar
pop
jne
jge
xor
dec
and
ss
es
pop
push
mov
mov
cmc
sbb
inc
ds
test
mov
sbb
lcall
xchg
mov
inc
call
dec
test
xor
adc
mov
pop
nop
cmp
subl
jns
mov
filds
int
dec
enter
add
cmpsl
xchg
scas
cwtl
mov
test
mov
jo
xor
inc
scas
fwait
pop
cmp
pushf
in
mov
rol
call
dec
pop
jnp
sub
and
adc
xor
cmp
divb
fisttps
sub
pop
fwait
push
sub
shll
mov
or
push
mov
sub
push
adcb
xchg
nop
insl
xchg
mov
jmp
lods
push
fadd
xlat
xchg
fbstp
push
outsl
mov
adc
cwtl
adc
mov
ja
sbb
push
mov
cs
or
jnp
test
aaa
or
inc
in
js
and
iret
sbb
cltd
in
cmp
adc
stc
fiadds
in
repz
push
mov
jbe
subb
cmp
jmp
gs
mov
push
pop
mov
push
test
xor
pop
mov
xchg
dec
mov
mov
std
ds
ds
xor
pop
xchg
pushf
dec
dec
adc
inc
xchg
adc
pop
aam
cltd
and
lock
adc
test
ss
adc
push
sbb
movsl
mov
xchg
loope
add
stos
imull
negl
xchg
shll
and
data16
decb
es
push
pop
daa
out
cmp
push
in
pop
loope
push
jno
daa
les
test
mov
sti
test
mov
pop
pop
xchg
sub
push
push
push
js
dec
fcoml
pop
dec
test
pop
sbb
fidivs
jmp
jb
sbb
hlt
repnz
int
lret
jge
jno
dec
mov
and
mov
es
sub
pop
pop
pop
scas
leave
lahf
jp
movsl
sti
push
test
rorb
push
rorb
adc
xor
sub
mov
lods
lds
cmp
pop
mov
jp
cwtl
push
xchg
mov
xor
leave
sub
push
testl
addl
ficomps
dec
pop
mov
add
enter
sarl
jbe
or
xchg
mov
pinsrw
xor
cmc
xchg
jle
and
cmp
adc
cmp
add
sub
loop
lret
jmp
mov
fst
pop
cmp
insl
out
out
clc
cmp
sti
jecxz
jb
inc
into
sub
xor
push
addb
pushf
loop
loop
inc
adc
xor
mov
pop
shrb
sbb
adc
int3
mov
mov
mov
mov
inc
mov
or
inc
push
dec
lods
lret
imul
mov
jge
and
sbb
divb
push
mov
gs
shrl
pop
mov
add
cmp
loop
xorl
xor
jecxz
and
or
out
test
cmpsl
push
repz
jecxz
pop
push
push
scas
test
inc
pop
jne
push
bound
fldl2t
testb
jo
push
sbb
fsub
pop
test
fmull
pop
loop
sbb
mov
int3
ret
sbb
popa
push
inc
jno
lret
inc
rolb
mov
xor
pop
gs
jnp
and
adc
inc
pmaxub
mov
popa
fisubrs
push
lret
rcrl
jl
push
fists
mov
fisttps
push
fildll
push
mov
push
xchg
adc
or
fmulp
jno
or
enter
repnz
repz
cmpsb
in
push
sahf
xor
fucomi
dec
xor
test
js
jmp
mov
enter
inc
fs
shll
loopne
out
dec
iret
imull
fisubrl
sahf
into
mov
cmp
out
and
xor
jg
sbb
cmpsb
cld
inc
out
std
cmp
adc
idivl
xchg
out
push
fucomi
out
and
push
popa
dec
cld
push
scas
and
inc
cmc
jg
mov
shll
mov
les
push
lcall
ljmp
les
mov
pop
cmp
or
jge
fs
lret
out
out
add
push
push
inc
mov
imul
or
push
cmp
sbb
imul
addr16
std
jl
jnp
fwait
call
sub
or
pop
cmp
mov
xchg
cmp
or
leave
in
arpl
js
jns
lea
xchg
mov
orl
fidivl
fildl
out
es
mov
popa
nop
and
jns
mov
les
jg
lds
and
mov
mov
pushf
sub
push
push
pop
fs
int
dec
jle
jns
jbe
push
sub
inc
push
stos
imull
mov
lret
scas
lahf
clc
ficompl
jnp
jmp
mov
xor
push
xor
popa
inc
lock
xor
and
popf
fcmovne
test
lret
jbe
adc
mov
xchg
in
div
lods
pop
jbe
adc
dec
int3
andl
in
pop
movsl
dec
adc
popa
outsb
mov
mov
cld
jmp
pop
cli
mov
pusha
or
and
in
cmpl
pop
xor
mov
imul
and
cmc
int3
push
and
fisttpll
or
pop
push
rcl
add
pop
dec
aaa
mov
iret
hlt
push
mov
bound
scas
rcr
add
sbb
adc
aaa
and
or
add
adc
adc
mov
outsb
ret
lret
jp
push
mov
push
lret
mov
cwtl
in
cwtl
mov
or
push
popf
push
cmp
mov
or
xchg
xor
test
push
mov
push
sub
jp
gs
movsb
stos
push
rcr
mov
das
mov
mov
xor
mov
dec
xor
xor
lea
cmovnp
jae
pop
xchg
push
sbb
and
ja
mov
push
movsb
xchg
addr16
cmp
outsl
pop
insb
push
popf
push
jo
jmp
jb
aad
in
mov
and
shrl
nop
mov
fs
pop
fdivrl
and
pop
ja
call
stos
sar
adc
aaa
cmpsl
push
pop
add
or
test
loope
push
lcall
or
jae
imul
int
cmpsb
fadd
or
fistpl
pop
xchg
aad
xorb
mov
inc
jl
imul
por
fildll
fbld
lret
aam
rolb
cmp
cmp
cmp
cmpsb
inc
push
adc
bnd
inc
add
push
add
insl
outsb
mov
dec
and
jge
sbb
je
rcll
outsb
icebp
jp
pop
sbb
imul
lcall
test
int3
cmp
or
lock
sbb
pop
hlt
sbb
mov
popa
out
push
cli
mov
jg
ret
sub
mov
enter
push
mov
dec
cmp
insl
add
mov
cwtl
daa
mov
lods
pushf
mov
ds
sub
lcall
cmp
jmp
stos
mov
pop
insb
inc
stos
inc
aad
stc
mov
pusha
scas
push
pop
sti
rorb
jno
mov
dec
add
push
addr16
test
jle
scas
repz
inc
lret
mov
and
inc
popa
adc
sub
jecxz
pop
lcall
std
hlt
stc
ljmp
adc
ror
fstpt
testl
loopne
jle
loop
xchg
xchg
out
imul
mov
inc
jns
data16
mov
mov
adc
xchg
push
xchg
notb
jno
test
ss
int3
lret
push
push
jmp
fadd
out
xchg
mov
mov
or
inc
xchg
ss
fwait
sahf
xchg
fimull
inc
push
sbb
pop
imul
or
repnz
out
and
jno
mov
insl
pop
add
cwtl
xchg
pop
in
sbb
add
es
pop
daa
loope
inc
jl
jne
cmp
inc
jecxz
xchg
arpl
mov
push
lahf
js
insl
mov
push
push
test
int
pushfw
ret
cltd
ja
mov
imul
pop
adc
inc
inc
ficoms
xchg
test
pusha
sub
nop
dec
sub
faddl
aaa
movsb
ja
push
ucomiss
lods
push
andb
mov
add
mov
mov
jg
xor
cmp
mov
add
faddl
cmc
or
push
stos
les
push
mov
jecxz
pop
aaa
jle
jp
push
xor
xchg
mov
add
hlt
cmp
mov
dec
add
repnz
test
xor
inc
xor
push
mov
clc
arpl
sti
int3
dec
jge
notb
mov
dec
imul
lods
push
sub
cli
adc
mov
js
ret
push
xor
fsubl
mov
cmp
sahf
aas
mov
lret
mov
mov
cmpsl
popa
pop
int3
and
sahf
jno
outsl
out
rcpps
adc
pop
nop
or
cmp
lods
xchg
xor
in
fdiv
adc
or
cltd
sub
es
jnp
in
dec
loop
dec
mov
lea
push
push
or
bound
dec
das
ds
movsl
fistps
xor
mov
add
xor
in
lods
push
icebp
xor
ret
xchg
dec
mov
cmc
lock
lods
jmp
jnp
xor
int
mov
adc
in
loope
cmp
sti
orb
movsb
jne
dec
test
cmp
in
mov
cmc
adc
dec
fcomps
out
repnz
jle
and
insb
ficoms
movb
out
loop
inc
xchg
sbb
es
scas
aam
pop
test
or
lods
pushf
jl
or
scas
add
sbb
mov
cmp
inc
xchg
mov
xor
test
pop
popf
outsb
out
fcmovne
xchg
inc
jae
push
dec
and
imul
fcoms
sub
sbb
pop
das
jle
push
pop
cmp
imul
xor
push
or
sti
pusha
mov
and
addr16
cmp
mov
mov
inc
mov
sub
jge
xlat
cmp
ret
or
pop
stc
pop
fadds
push
mov
and
enter
sbb
cmp
cmp
xchg
bound
add
es
andl
ja
aam
popa
xchg
shll
adc
sbb
fbstp
mov
sti
pusha
jo
xor
ja
sbb
stc
mov
jbe
adc
cmpsb
cltd
or
jnp
fiadds
mov
pop
mov
fildl
stos
pop
mov
pop
pop
jbe
in
and
jnp
sub
dec
addr16
mov
orl
popa
inc
loop
jb
outsl
cmp
jb
pop
pop
push
popf
sub
xchg
pop
add
adc
and
xchg
inc
dec
jl
xor
sti
mov
shll
cmpsb
sbb
imulb
sbb
pop
xor
ljmp
psignb
pop
divl
fstps
subl
or
clc
ds
mov
xchg
inc
push
mov
cmp
popf
push
arpl
jno
or
add
lahf
or
pop
out
jge
decl
xchg
cltd
add
jo
pop
pop
popa
sbb
lret
lods
lahf
dec
ja
cmp
and
adc
and
sbb
fwait
inc
shlb
mov
jo
mov
out
loop
jecxz
adc
and
into
mov
mov
cmp
sub
pop
jecxz
sar
jo
xchg
push
sub
ss
xor
sub
insl
std
inc
out
and
jg
in
in
xor
call
mov
fcomps
ja
pop
pop
bound
stc
pop
fisubs
scas
arpl
mov
aam
cmp
pusha
test
ret
or
gs
ja
adc
mov
mov
or
in
imulb
pop
pop
fwait
mov
xor
ljmp
bound
push
pop
cmp
dec
hlt
les
cmpsb
add
push
add
ror
loopne
jae
mov
sbb
push
and
push
and
int3
pop
fdivl
mov
or
insb
mov
js
jno
mov
int
jmp
frndint
fsubs
leave
mov
pop
or
loop
sub
cmp
jg
sub
cmc
sub
loope
pop
out
repnz
or
cltd
cmp
inc
push
int3
mov
cmpsl
lea
aas
add
pop
aaa
and
testl
xchg
push
fldcw
lahf
sub
ljmp
pop
popf
jge
testb
adc
into
push
jmp
imul
mov
ret
jmp
ljmp
pop
lods
popf
add
sti
test
jp
fs
xchg
inc
imul
xchg
nop
dec
adc
sbb
cmp
dec
fstps
xor
xchg
imul
sub
int3
xchg
test
ret
pop
and
pop
loopne
jns
jnp
lret
mov
sahf
inc
outsl
ja
jb
mov
fs
xlat
jo
outsl
inc
jge
in
mov
mov
jbe
inc
testl
adc
je
insl
bound
mulb
push
mov
sbb
cmpsb
loopne
jae
pop
pushf
dec
fcompp
out
fcmovb
push
xlat
cld
mov
mov
idivb
das
ds
jbe
xchg
adc
sub
jae
bound
ret
sbb
xchg
push
xlat
aaa
clc
sarl
mov
nop
mov
bndmov
add
ja
dec
pop
mov
dec
jnp
push
mov
jmp
shl
pop
adc
pop
jg
out
push
xchg
adc
andl
cmp
mov
lods
jae
dec
aas
ret
mov
int3
mov
cwtl
sbb
inc
idivl
fs
out
push
movsb
in
xchg
sub
and
sbb
dec
pushw
push
adc
cmp
sub
in
inc
fdivp
xor
outsl
mov
cltd
cld
mov
testl
imul
sub
mov
cmpsb
mov
xchg
sub
adc
xchg
fcoms
js
push
jmp
fidivl
fs
sti
stc
pop
mov
dec
inc
fistl
sbb
push
add
js
pop
inc
sbb
into
shlb
sub
into
sub
mov
jae
divl
mov
stc
in
sub
mov
call
dec
out
pop
mov
aad
or
inc
arpl
shl
hlt
or
test
stos
pop
bnd
jns
ja
cmp
jb
shll
hlt
xor
mov
in
repz
mov
out
fwait
cmc
enter
es
and
push
out
cs
shlb
xor
mov
or
nop
aad
das
lock
cmc
pop
test
push
cmpb
iret
mov
icebp
cli
push
inc
cld
cld
lcall
sbb
and
mov
pop
daa
pop
lret
sbb
movsb
dec
jne
and
dec
cmp
push
xchg
test
clc
sbb
cmp
xchg
std
imul
femms
mov
fs
jae
and
enter
fdivr
cmp
sbb
or
push
cmpsb
jno
cltd
test
and
fidivl
bound
and
xor
js
orl
jmp
das
mov
dec
les
add
inc
xchg
adc
jae
lds
cmp
inc
nop
sub
int3
mov
pop
neg
pop
imul
js
repnz
add
mov
sbb
cmpsb
imul
movsl
int
adc
sub
push
invd
mov
and
movb
dec
lahf
das
mov
insb
faddl
fnstenv
testb
mov
sbb
imul
mov
das
jnp
pop
lahf
adc
stos
jns
fmull
js
mov
xor
aam
out
cmp
add
push
dec
adc
icebp
sub
aas
out
enter
lock
rcl
mov
inc
ret
xlat
push
dec
aas
mov
cltd
aaa
mov
dec
stos
mov
jp
mov
add
push
cmpsl
imul
add
shlb
dec
push
mov
xchg
pop
test
insl
cmp
jns
inc
xchg
push
faddl
xor
out
or
insb
dec
sub
shl
lock
iret
outsl
imul
inc
popf
mov
cwtl
and
outsl
daa
dec
fwait
push
dec
into
in
or
sbb
orl
jmp
mov
jbe
inc
jl
cmpsl
aam
scas
mov
cmc
daa
pop
aas
lock
inc
pop
xor
mov
out
addr16
test
jl
rolb
int
and
fistl
sbb
jl
bnd
out
imul
dec
dec
and
popa
ret
xor
sub
xchg
pop
xchg
fstps
pop
push
sub
dec
pop
js
xchg
push
ret
mov
sub
xchg
sbb
jbe
or
cli
dec
adc
ljmp
inc
arpl
and
add
sarl
lret
xchg
mov
xchg
mov
aam
inc
loopne
in
mov
dec
xlat
cmpsb
aas
cwtl
sti
add
mov
lock
lahf
add
fwait
ja
sub
pop
test
in
inc
push
pop
mov
xchg
push
daa
mov
orb
sub
das
mov
iret
icebp
test
ficoml
out
in
lahf
add
and
push
and
push
test
fisubrs
cmp
xchg
mov
jae
arpl
sbb
dec
and
xlat
cmp
inc
fs
mov
fiadds
jns
mov
incb
lea
addr16
mov
pop
out
mov
fwait
mov
inc
pop
sub
call
out
shll
shlb
fistpll
dec
add
scas
or
xor
imul
jne
ret
mov
mov
in
movsl
imul
and
hlt
mov
jb
pop
jmp
sti
pop
sbb
popa
adcl
das
addr16
pop
jne
xor
fisubrl
xchg
or
push
stos
or
out
inc
int
sub
ljmp
pop
es
inc
data16
dec
insl
push
les
cmp
mov
inc
dec
sbb
lret
in
xchg
adc
mov
fiadds
aaa
ja
cmpsl
mov
loope
pop
bound
adc
popf
test
mov
mov
daa
jo
test
inc
or
pop
cmp
xorb
pop
scas
into
push
push
lea
push
sbb
aad
sub
lahf
scas
lret
or
cmp
push
xor
gs
push
lock
mov
xor
mul
lock
mov
das
fwait
dec
jnp
cs
sbbl
fucom
mov
pop
scas
filds
lock
cmp
popa
ret
xor
push
andl
adc
push
jmp
mov
gs
lock
test
pop
sbb
xchg
enter
shll
xchg
mov
fsub
mov
test
cs
stos
xlat
in
xor
mov
or
mov
dec
les
and
dec
or
or
mov
mov
xchg
mov
loop
icebp
rcll
mov
fbstp
lcall
iret
sahf
inc
xor
jle
cmp
xchg
sbb
cmpsb
mov
xor
mov
decb
jno
mov
sub
popa
fnsave
mov
mov
inc
sbb
dec
cli
jge
push
hlt
loop
ljmp
cwtl
movsl
aam
dec
adc
jbe
cmpsb
jmp
loopne
adc
push
cwtl
sub
xor
ret
rcl
faddp
mov
lret
out
xor
xchg
fstpt
jno
inc
push
cwtl
mov
mov
test
rorb
push
inc
xor
adcl
xchg
mov
shrl
stos
pop
outsb
jne
lods
and
push
sub
and
leave
fbld
jb
cmpsl
jle
jno
out
jecxz
rcl
ja
stos
call
ret
jmp
push
sub
adc
in
loopne
aas
or
loope
sub
inc
jle
dec
xchg
xor
addr16
mov
pop
call
and
xor
bound
jbe
mov
inc
out
jns
or
scas
out
fiadds
push
mov
add
and
xor
jge
cmc
inc
inc
mov
add
add
add
jae
and
xchg
and
sub
cmp
arpl
shlb
dec
mov
stc
repnz
dec
imul
add
push
and
pop
andl
adc
scas
mov
dec
mov
xchg
xchg
jmp
xchg
ficomps
jb
leave
out
jmp
sti
dec
cltd
sahf
pop
cmp
hlt
out
add
jg
push
out
or
push
repnz
rol
rcll
sti
leave
pop
mov
jp
add
push
mov
out
mov
daa
adc
add
movsb
push
fistps
lds
inc
das
sub
jp
mov
xor
enter
or
pop
sub
or
ror
jno
xchg
and
fmull
push
mov
pop
roll
add
mov
loopne
sti
outsb
jle
add
cmpl
shlb
andl
or
add
pop
insb
jg
sbb
mov
jb
and
jp
dec
lods
pop
in
je
mov
pop
int
pop
mov
dec
add
test
icebp
sti
inc
test
out
mov
inc
lds
adc
inc
lret
imul
fildl
ja
mov
scas
orl
push
fnsave
repz
sbb
adc
push
loop
scas
xchg
and
js
cmp
sub
pop
test
xor
sbb
int3
add
lds
xchg
add
int
xchg
xchg
mov
or
pop
pushf
in
sarb
jle
xchg
or
lea
push
insl
pop
or
add
sub
push
jl
sbb
and
scas
inc
push
pop
sahf
cmpsl
dec
fnstsw
xchg
imul
inc
sub
xor
fs
cld
adc
sub
cli
push
and
notb
sarl
fwait
cmpsl
adc
fisttpll
mov
gs
sbb
cmp
in
sahf
clc
ret
fisttpll
in
aad
shll
jne
rclb
sub
dec
test
ret
jl
fprem
shrl
out
stc
in
sahf
outsl
and
mov
rorb
rorl
mov
cwtl
pop
and
pop
xor
mov
out
pushf
adc
scas
sbb
addl
icebp
add
fbstp
mov
popf
orl
popa
cmpsl
xor
bound
mov
mov
mov
fwait
jge
jle
xor
xor
cmp
push
cmp
jle
mov
fisubrl
and
or
jne
jb
ficoms
lcall
cwtl
lods
add
pop
clc
jmp
addb
rol
xor
add
jp
test
sbb
jle
adc
xchg
imul
pop
mov
add
fsqrt
push
xchg
jp
sbb
cmp
pop
fistpll
out
mov
jno
clc
and
sub
mov
and
mov
and
cmp
pop
out
mov
pusha
ret
jl
mov
add
lock
sbb
and
xor
icebp
jns
leave
fnstenv
pop
mov
jae
pop
insl
lret
sub
and
sbb
notl
lods
xchg
lock
jmp
pop
inc
or
xchg
sbb
dec
adc
mov
xor
jb
jno
notl
enter
scas
cmp
cmc
or
dec
jp
mov
rolb
dec
daa
imul
mov
sbb
sub
lahf
imul
and
ret
movsb
cmp
jne
xchg
movsb
push
add
pop
or
mov
movb
add
cwtl
sub
dec
rclb
xchg
add
outsb
lret
jns
fistps
movsb
sbb
movsbl
jl
pop
add
cmc
mov
into
in
repnz
and
mov
rorl
add
push
aam
insb
or
outsl
lret
jo
and
gs
test
or
into
xchg
test
lret
cs
pcmpgtw
xchg
movsb
pop
push
or
lcall
fildll
mov
je
cmp
movsl
sub
inc
jecxz
or
mov
adc
mov
sbb
ret
dec
mov
movntq
out
dec
out
imul
ss
jbe
les
dec
mov
roll
rcrb
add
ror
or
stc
adc
jecxz
insl
pop
int
sbb
lods
test
jmp
movsb
iret
sbb
mov
or
sti
sbb
repz
std
scas
dec
push
imul
stc
bound
shll
pop
test
jg
xor
repnz
pop
inc
mov
xor
or
cmpsl
jns
sub
jmp
rol
insb
mov
dec
mov
mov
aas
fiaddl
lea
add
fdivs
push
jb
inc
dec
add
pop
and
lods
pop
jg
jecxz
pusha
push
xor
mov
ja
cmpsb
ret
sbb
sub
pushf
jmp
pop
imul
sub
scas
mov
shlb
sub
out
outsb
outsl
mov
push
xlat
cmp
cmp
into
push
mov
mov
and
mov
pushf
jle
sahf
add
je
push
lea
aas
adc
adc
push
ret
leave
arpl
cmp
cltd
jae
mov
gs
test
bound
addl
push
add
jae
inc
sbb
mov
add
adc
data16
lret
rolb
sub
scas
fs
cli
les
shl
scas
pop
xor
loopne
psllw
ja
add
xlat
sbb
nop
out
out
push
mov
test
mov
xor
mov
inc
jl
cmp
enter
shlb
push
jg
test
fldenv
sbb
mov
mov
fsubrs
or
jno
xor
add
pusha
cltd
sub
jne
scas
andl
psrlq
fisttpl
cmp
dec
lock
jae
mov
push
movsl
jns
inc
sub
out
mov
stos
dec
pop
mov
filds
cli
mov
fld
xchg
es
xchg
lret
mov
repz
jecxz
mov
lds
aas
dec
insb
movsb
dec
lods
push
jmp
and
sbb
cs
sahf
xchg
mov
cmpsl
ja
in
mov
stos
adc
rcrl
fwait
xchg
push
daa
push
push
pop
pop
fs
mov
loopne
push
pop
add
jecxz
xchg
jbe
popf
nop
les
add
add
ja
ja
mov
pop
iret
scas
fsubrs
hlt
mov
andb
pop
sahf
add
leave
and
mov
ficoms
fisubrs
adc
pop
xchg
fnsave
push
add
mov
shl
pop
fidivrs
adc
cltd
or
push
or
loope
rclb
rorl
orb
xor
testb
xlat
pop
push
stos
sub
xor
vmwrite
mov
mov
inc
int3
ret
xchg
jle
jp
mulb
xchg
notb
mov
in
add
popl
aas
sahf
lcall
adc
cmp
xchg
add
mov
lea
repnz
inc
sbb
and
push
jnp
push
pop
inc
xlat
adc
loopne
inc
daa
fwait
test
mov
popa
cmp
ljmp
out
es
cwtl
xchg
jmp
mov
sub
jle
cmp
int3
leave
sbb
imul
fists
xchg
mov
popa
in
cmc
sbb
mov
lea
push
dec
movsb
jl
adc
mov
and
sbb
imul
mov
insb
or
test
jae
loope
inc
xchg
jae
mov
xchg
mov
and
add
lea
push
retw
data16
dec
xor
push
adc
mov
push
into
push
inc
int
stos
jp
ja
mov
repnz
mov
mov
push
sub
jne
or
mov
cmp
and
repz
lcall
int
sbb
aas
or
dec
cmp
push
pop
clc
sarl
loop
pop
or
gs
jle
or
aas
inc
movsl
sub
mov
inc
push
stos
cmp
mov
pop
stos
loop
addl
inc
jo
test
pop
xchg
flds
lahf
iret
mov
enter
add
mov
aas
push
popa
jmp
lods
cmp
xor
fisubrl
icebp
jbe
int
xchg
lock
scas
cmp
pusha
out
inc
xchg
xor
pop
sub
sub
shll
mov
test
in
cmp
fldl
sub
into
hlt
shlb
outsb
mov
sahf
mov
mov
add
std
jp
nop
jb
xchg
mov
jae
pushf
jecxz
or
loope
mull
in
adc
mov
faddl
mov
pushf
cmp
and
sbb
sbb
jo
cmp
loopne
add
push
jns
insb
mov
or
xor
push
mov
test
jl
jnp
nop
popf
sbb
cmp
testl
push
inc
push
cltd
mov
out
dec
push
sbb
pop
or
add
mov
and
mov
mov
dec
pop
xchg
pop
mov
or
pushf
or
xor
xchg
mov
sub
movsb
fimull
nop
in
jl
stos
or
sbb
push
int
jb
lods
push
jmp
push
and
adc
hlt
lods
pop
mov
ss
ret
in
sub
jno
ficoms
pop
mov
push
test
sarl
nop
mov
sub
int
sbb
mov
dec
js
xor
mov
dec
sbb
xchg
lahf
sub
test
mov
fsubrl
xchg
xlat
test
leave
popa
mov
dec
and
cs
outsb
push
add
and
test
mov
push
sti
cwtl
arpl
and
fstl
xchg
rcrb
mov
pusha
rol
push
test
lock
lahf
sbb
mov
jge
repnz
xorl
inc
push
jle
sub
out
push
cwtl
inc
fwait
sbb
mov
sub
repz
pushf
push
jae
aas
lods
stc
and
push
xchg
sub
xchg
movsl
cltd
insb
sti
fildll
ffreep
dec
dec
decl
mov
int
mov
rorl
jbe
xchg
clc
je
into
in
mov
in
cmpsb
pop
ret
rep
insl
dec
mov
push
test
xchg
sbb
out
ret
lods
adc
push
jno
jle
jge
add
inc
sti
dec
mov
addr16
sub
adc
js
sub
test
out
push
push
imul
into
loop
aam
sub
cwtl
add
mov
mov
das
flds
push
dec
insb
les
and
scas
rolb
dec
inc
pop
adc
dec
pop
lock
jbe
mov
push
inc
rcr
and
addr16
lret
bound
jle
adc
aaa
imul
adc
dec
loop
mov
call
push
push
aam
inc
push
andl
sbb
xchg
lods
aaa
xlat
divw
loop
pop
pop
mov
sbb
or
add
test
sbb
ljmp
cmc
jp
mov
imul
imul
xchg
mov
scas
sbb
movsb
in
xor
xor
into
sub
pop
fistps
pop
fwait
out
in
cli
mov
out
sbb
repz
xchg
inc
push
or
or
mov
movsl
and
pop
cwtl
lea
iret
ret
enter
xor
cmp
mov
xchg
mov
mov
cmp
mov
lahf
dec
jno
fmuls
mov
or
push
pop
lods
sub
inc
jbe
xchg
add
cmc
sub
aaa
mov
rcr
mov
cltd
sub
or
push
and
adc
das
inc
gs
fs
add
pop
repz
movsl
push
add
cmpsl
repz
xchg
leave
add
in
xlat
sub
gs
xchg
mov
xchg
std
inc
pop
jo
scas
pop
jae
push
fimull
cmpl
mov
and
cld
dec
iret
mov
out
gs
icebp
aad
dec
push
popf
loope
mov
and
inc
in
pop
jl
insb
mov
and
inc
mov
stos
pop
fnstsw
mov
inc
jl
add
jns
fstps
xchg
fnsave
out
cmovs
sub
scas
loope
pop
mov
lret
ljmp
sub
dec
push
pop
cmp
shl
in
lret
fimuls
in
xor
ret
int3
or
push
cltd
xchg
loopne
xchg
fwait
or
adc
inc
ljmp
jns
inc
out
jnp
shrl
or
test
adc
sbb
out
hlt
add
adc
xchg
je,pt
add
lcall
aam
cmp
cmp
mov
pop
daa
jae
repnz
mov
add
jge
pmaddwd
aam
ret
push
adc
orl
enter
in
jne
into
sub
xlat
inc
jg
lds
add
cld
xchg
loopne
cmc
ret
insl
ss
xor
push
jne
sub
sub
je,pn
ret
ret
mov
lret
das
push
into
sub
jbe
jb
xchg
mov
rcll
movsb
xor
shll
cmp
sbb
jns
pop
enter
inc
and
xchg
aaa
loope
sub
inc
aaa
cmp
push
pop
sub
jne
pusha
bound
push
mov
inc
addr16
or
js
aad
jg
sub
push
mov
and
xchg
rorb
cwtl
or
incl
mov
or
adc
mov
movsl
xchg
mov
and
mov
sub
leave
fisttps
sub
clc
pop
mov
clc
add
jl
sbb
adc
mov
test
push
frstor
aaa
add
cmc
out
xchg
add
sbb
mov
pop
inc
push
sahf
cmc
and
jo
stos
insb
push
js
nop
push
mov
cmpsb
mov
arpl
out
ret
add
inc
push
xchg
testb
push
in
pushf
pop
int3
int
jb
clc
add
lret
cmp
fcmovu
or
jb
and
in
push
cmp
fistpll
pop
mov
xor
in
ja
into
bound
cmp
jns
push
push
aas
loop
les
or
or
lods
arpl
xchg
cltd
icebp
icebp
lret
lret
arpl
adcl
mov
xor
dec
enter
push
cmpsb
xor
mov
mov
xchg
xchg
jg
ljmp
repz
sub
push
mov
and
lds
add
mov
not
add
push
pop
xorb
pusha
fisubl
shr
enter
mov
sub
sbb
dec
shrl
imul
cmp
xchg
mov
test
jmp
add
push
mov
lret
mov
cmpsl
sbb
mov
das
xchg
pop
shl
sarb
mov
jmp
lods
cmp
jbe
movsl
jle
mov
pop
pushf
add
clc
insl
ror
out
push
sbb
testl
lea
jge
sti
pop
ret
clc
sbb
popa
iret
aaa
inc
pop
daa
test
repz
pop
in
sub
jb
outsl
inc
out
mov
ret
lahf
and
iret
push
ja
cs
stc
daa
dec
mov
aam
xor
jp
je
aaa
adc
adc
enter
push
xchg
or
mov
push
dec
jo
js
bound
repz
int3
xor
aad
pop
jno
fbstp
inc
cli
xor
inc
roll
enter
mov
lods
xor
aaa
xchg
mov
imul
es
pop
test
xor
les
subps
lcall
adc
add
and
push
pop
inc
cld
les
inc
dec
lea
inc
and
xlat
ret
stos
in
mov
inc
ficomps
mov
gs
inc
mov
adc
mov
divb
mov
std
stos
in
in
push
add
push
iret
subl
push
cmp
je
mov
pop
sub
xor
sbb
jbe
rorb
fs
or
xor
fcomip
arpl
xchg
aad
xchg
jb
pop
testl
sub
push
dec
mov
sub
pop
mov
cltd
fdivrs
pop
add
icebp
pop
push
das
cmpsb
scas
mov
inc
xlat
cmp
push
inc
test
sbb
addb
adc
sub
push
sbb
addr16
sahf
lock
outsl
fcompp
jp
xor
daa
pushf
movsb
mov
inc
stc
and
test
arpl
enter
aaa
mov
arpl
mov
loope
mov
push
adc
jo
in
das
xchg
adc
push
xchg
sahf
and
xlat
mov
push
popa
sub
iret
pop
and
and
xor
pop
or
mov
lds
mov
imul
iret
push
xchg
inc
or
fistps
das
imul
push
jmp
fsubl
sahf
cltd
jg
int3
nop
cltd
test
aaa
loope
sub
fistl
pop
clc
mov
scas
scas
pop
cmpsb
stc
mov
and
xchg
lock
mov
jg
testb
arpl
shrb
stos
aas
add
cld
or
sbb
adc
dec
mov
jmp
das
imul
test
andl
mov
mov
add
imull
cmp
mov
inc
jnp
aad
mov
jg
aad
lcall
mov
pusha
in
inc
xchg
fiadds
sbb
mov
xchg
cmp
loop
daa
dec
jno
mov
cs
rolb
xchg
sbb
gs
jmp
or
test
decb
adcl
and
adc
out
es
arpl
inc
cltd
mov
mov
aam
dec
sahf
and
sti
cmp
sub
es
pop
cltd
jae
xchg
test
mov
fcomi
mov
rorb
jbe
xor
pushf
gs
insb
jecxz
and
xchg
popa
dec
hlt
xchg
fldpi
scas
pop
lahf
test
push
fnsave
lret
push
adc
push
or
fisubrs
ljmp
adc
ja
push
lea
and
dec
test
push
mov
mov
push
jae
mov
mov
call
icebp
sbb
imul
rcl
pop
sbb
loope
fdivp
pop
std
out
jne
in
mov
lods
dec
add
jge
fs
push
das
or
in
jmp
mov
bound
in
add
daa
sub
movups
stc
xor
stos
xchg
dec
ud2
fwait
nop
jl
xor
jo
mov
sub
xchg
mov
xchg
outsb
cmp
push
sbb
scas
fwait
and
xor
clc
addr16
push
popf
push
icebp
jno
lea
jne
call
cmc
or
sti
add
lods
dec
lods
cmp
or
lock
gs
fs
mov
jae
cmpb
pusha
push
dec
int3
or
lock
pop
cmpsl
scas
jbe
mov
mov
mov
test
pop
stos
dec
shrb
cli
mov
mov
pop
inc
out
sbb
fcompl
sub
jno
fistl
loope
ret
mov
faddl
push
iret
pushf
inc
or
ja
sub
pop
repnz
jp
iret
mov
mov
adc
cmp
mov
jle
cmp
test
sub
add
xchg
add
aam
cmp
add
add
cmpb
jnp
cld
mov
repz
jnp
es
xchg
sub
fstpl
push
out
sub
mov
decb
push
xchg
cmp
adc
aad
pop
push
jge
mov
rclb
xchg
stc
cmp
jns
repnz
sahf
jbe
add
js
int
fimuls
and
lds
jle
or
xchg
scas
hlt
jp
je
push
jg
mov
push
cmp
jnp
or
xchg
dec
mov
and
xchg
and
or
test
cltd
fcoml
xchg
arpl
in
pop
xchg
mov
hlt
outsb
push
divl
mov
jbe
xlat
cmpl
gs
dec
jne
cmp
ret
jmp
fbld
or
out
fisubl
push
bound
cld
fxrstor
stos
mov
loopne
iret
movsbl
pop
fbstp
cmpsl
fcoml
cmpsb
sbb
dec
xchg
or
mov
scas
inc
jg
test
pop
out
jmp
mov
mov
fs
sbb
mov
pop
orl
sbb
mov
cmpsl
popf
dec
lods
cs
mov
jp
xchg
mov
dec
inc
sub
leave
pushf
inc
rorl
iret
lret
push
sbb
scas
pop
inc
int3
in
sub
pop
jmp
ffree
sbb
pop
add
dec
rcrl
fnstcw
xchg
repz
out
push
xor
inc
inc
xchg
mul
xorb
lods
inc
and
adc
cwtl
pop
sarl
mov
inc
inc
fs
push
push
pop
dec
arpl
inc
lods
xor
imul
lods
sbb
mov
notl
mov
scas
stos
pop
nop
mov
add
inc
dec
inc
loopne
lods
sbb
call
sbbl
cmp
or
ret
mov
push
adc
and
sub
test
hlt
push
sbb
xchg
pop
stc
pushf
test
mov
std
cs
test
jp
push
add
icebp
in
push
mov
ss
js
imul
jae
mov
nop
ret
mov
repnz
dec
fidivl
or
adc
enter
push
js
jl
scas
dec
jp
js
in
mov
cmp
cmp
cmp
adc
in
popa
xor
out
bound
loope
popa
cmp
ljmp
dec
push
jmp
fwait
or
test
ret
dec
repnz
adc
cmp
jb
test
in
dec
imul
clc
dec
loopne
arpl
inc
cmpsb
out
dec
cmpsb
jne
add
popf
mov
repz
and
inc
cltd
or
inc
mov
adc
dec
outsl
push
jge
add
test
pop
pop
xor
push
mov
adc
inc
fisubs
dec
das
mov
ficompl
les
pop
inc
cmp
mov
ds
jmp
loopne
rolb
mov
rcr
xchg
ljmp
sbb
lret
dec
lea
dec
adc
adc
xor
mov
outsb
roll
aas
cmpsb
and
sub
or
ret
dec
sub
xchg
mov
movsb
xor
mov
jbe
mov
sbb
dec
cmpsb
repz
rorl
shrl
loopne
pusha
mov
jl
js
push
mov
pop
leave
iret
and
imul
fisubrl
stos
or
push
push
add
sti
lea
in
addr16
lea
jbe
ret
dec
cmp
cmp
cs
test
fnstenv
ljmp
ja
xchg
aas
imul
mov
mulb
lret
pop
sub
cs
stos
test
and
mov
or
lahf
mov
pop
iret
jne
xor
inc
dec
test
adc
sbb
aas
sbb
movsl
sti
in
cwtl
inc
lret
dec
lds
xlat
mov
push
push
mov
movsb
push
cmpsb
jp
es
rcrl
or
stc
movsl
cmp
mov
mov
loope
dec
push
imul
adc
fdivr
repnz
add
and
inc
ss
lcall
iret
jno
xchg
aam
call
jp
jmp
or
adc
outsb
movsb
inc
or
aas
popa
jae
jno
gs
mov
aaa
rolb
xchg
cmc
adc
and
sub
mov
jno
inc
jns
or
pop
sbb
cmpsb
add
stc
mov
orb
mov
cli
mov
jle
ja
jle
cmpsl
sub
lret
mov
jmp
cmpb
cmpsb
xchg
bound
add
mov
pop
push
xchg
dec
or
pop
jge
ss
xchg
push
sbb
sbb
dec
loop
mov
fistps
dec
cmpsl
sbb
lds
dec
inc
filds
mov
ror
sahf
frstor
jbe
pusha
adc
arpl
cli
xchg
inc
push
das
lods
neg
loop
sbb
js
hlt
pop
rclb
sbbl
pop
cmp
shrl
xchg
out
jns
outsl
lds
loop
and
sub
out
and
mov
bound
sub
cmp
push
out
and
mov
es
dec
out
insb
xchg
ja
icebp
or
push
mov
cmp
push
daa
xor
repnz
or
dec
hlt
jne
jo
js
lds
fsubl
inc
inc
jle
pop
setge
out
mov
xor
xor
sub
ret
xor
js
loopne
mov
pop
idivb
jns
sahf
popf
sub
test
mov
pop
dec
mov
pop
and
scas
aas
mov
lods
jle
xor
lock
daa
insl
int
imul
jp
mov
lods
xor
add
cmpsb
shrb
cwtl
mov
jmp
idivb
or
outsl
jb
push
jae
inc
adc
xor
or
inc
jp
mov
mov
addr16
pop
repz
xchg
sti
insl
pop
in
and
and
push
repnz
aad
in
in
add
repnz
xor
cmovno
in
adc
insl
in
test
rdpmc
loop
imul
add
adc
cmp
push
test
pop
fcomps
mov
pop
cmp
inc
cmp
xorb
jl
popf
movsl
mov
push
sti
shll
int3
nop
loope
mov
cmpsb
ja
adc
jne
repz
xchg
mov
shrb
rclb
js
inc
outsl
or
cmpsl
or
lock
rcl
mov
pop
push
pop
pop
jae
in
ljmp
iret
mov
pop
xorb
ret
icebp
cs
mov
stc
lock
negb
sbb
hlt
mov
movsl
test
push
ljmp
arpl
scas
mov
addr16
je
sbb
sbb
sbb
stc
dec
pop
sub
xor
nop
xor
stos
out
clc
jbe
jp
mov
and
mov
fstpt
lds
pop
push
mov
inc
cmp
lcall
push
and
das
inc
dec
xor
stc
pop
mov
aad
or
imul
rolb
out
and
bound
xchg
paddusw
movsl
pop
mov
xor
add
add
dec
aaa
dec
pop
mov
mov
iret
in
add
mov
scas
add
xchg
lock
fcomps
adc
lret
push
push
lock
ret
sbb
aam
outsb
push
call
lcall
sti
xchg
shll
mov
es
push
scas
dec
in
ja
and
fcomp
sti
dec
test
das
repz
das
mov
divb
jnp
cmc
rcrb
inc
mov
jns
fsts
incl
popl
inc
dec
push
ja
cmc
sub
sub
mov
add
mov
scas
add
inc
daa
inc
cs
mov
fdivl
push
out
test
nop
test
pop
cli
fdivl
cmc
shll
push
arpl
xchg
sahf
out
xor
pop
xchg
outsb
mov
sub
jmp
xchg
push
cld
test
stos
lret
pop
add
lods
sub
ljmp
xchg
fnstcw
push
js
push
subl
jecxz
xor
xchg
cld
jle
popa
in
xchg
lock
call
dec
das
fists
mov
incl
aad
inc
cmp
sbb
and
into
xor
xor
ljmp
insb
mov
push
push
bound
add
jg
sub
pop
movsb
aam
push
inc
pop
mov
int
insb
mov
int
les
addl
hlt
out
in
and
push
fistl
push
mov
in
dec
and
outsl
outsb
mov
lcall
mov
stos
stc
cli
fisubl
pop
repnz
push
cmp
push
mov
or
adc
inc
jmp
scas
adc
pop
mov
mov
leave
in
out
sbb
mov
xchg
inc
add
mov
xor
pop
test
pop
fmull
lret
std
mov
lahf
fs
xchg
cltd
or
adc
pop
add
mov
or
mov
mov
ljmp
push
setae
inc
inc
or
sti
scas
mov
jl
jnp
mov
xchg
jmp
ss
mov
test
movsb
mov
aaa
out
testl
jmp
in
push
fdiv
add
je
adc
xor
int
push
cwtl
sbb
aad
jl
jo
xchg
push
sub
jecxz
subl
out
ss
jb
sarl
out
mov
sub
mov
popa
cmp
add
jnp
inc
shl
dec
out
gs
fidivrs
movsl
jle
cld
dec
pusha
sbb
push
out
jne
ds
cld
in
pusha
add
and
sub
dec
int3
call
cmp
cmp
fisubrs
ret
pop
mov
and
int
pusha
dec
xchg
vpmuludq
pushf
out
push
mov
rclb
xchg
ret
mov
and
iret
aaa
mov
xor
adc
jbe
clc
loopne
cmpsl
mov
dec
scas
sub
xchg
cmp
mov
mov
mov
mov
jp
popf
fnstenv
adc
mov
mov
gs
out
dec
outsb
data16
test
in
add
insb
push
sbb
push
push
pop
shll
lock
test
clc
js
lahf
out
cli
xchg
pop
mov
jo
mov
rcll
aaa
lock
cmp
lret
test
fwait
dec
bound
adc
les
or
aam
aaa
jb
xchg
cmpsb
sti
cmp
pop
adc
and
std
sbb
pop
pop
xchg
fdivrs
shlb
xor
in
jl
fsts
mov
aas
sbb
adc
loope
jns
mov
push
loop
outsb
les
xchg
out
add
cld
mov
sub
outsb
jno
out
and
cwtl
lds
das
shrb
mov
mov
enter
and
in
cmp
pandn
adc
or
add
test
ss
sub
mov
sbb
push
sbb
jno
jae
jl
popf
cmp
psubusw
cmp
push
mov
hlt
pusha
mov
xchg
decb
insl
jne
push
shll
ret
out
sbb
movsl
cmc
jb
in
subl
or
ss
xor
mov
pop
push
adc
addb
cmc
push
and
divl
roll
mulb
jmp
loopne
sub
add
mov
push
mulb
test
into
jg
or
inc
subl
dec
push
pop
sbb
dec
js
pop
inc
setb
mov
aam
aad
xchg
adcb
jae
test
inc
pop
sub
sbb
das
jecxz
jbe
cmp
push
enter
adc
sub
es
cld
lcall
inc
xchg
mov
add
repnz
mov
adc
ljmp
jns
add
pop
add
test
lds
jle
push
enter
pusha
cmpsl
cmp
jmp
movsl
arpl
adc
push
pop
lea
stos
mov
xlat
mov
lods
sbb
pop
call
fwait
and
movsb
xchg
pop
xchg
in
fsub
dec
stos
lods
dec
fstpt
push
arpl
sbb
cmc
leave
insl
hlt
adc
sahf
hlt
and
dec
or
loopne
aad
pop
pop
mov
push
sub
push
cli
jbe
mov
cld
jae
repnz
xchg
mov
xor
cwtl
ja
cwtl
push
sahf
fildll
test
lret
aas
and
pop
int
mulb
out
dec
inc
ja
mov
xchg
cmp
mov
mov
lea
outsl
rorl
adc
call
fisttpll
insl
jae
push
dec
mov
add
cld
cld
aaa
clc
add
sbb
andl
cmp
stos
push
cmp
add
adc
gs
idivl
cmp
shl
or
lods
andb
add
sbb
or
mov
sub
or
sti
and
push
mov
js
xorb
inc
negb
int
xchg
cmpsb
pop
and
mov
xor
mov
jp
dec
jge
sbb
fwait
aad
jmp
rcll
push
shl
mov
push
add
cmc
cmpsl
mov
xor
push
addb
aaa
imul
mov
rcll
or
cwtl
jo
outsl
mov
xlat
lods
jp
xchg
dec
inc
dec
xor
outsl
adc
jecxz
and
call
xchg
cld
dec
mov
jnp
imull
or
ret
sbb
aad
loop
negb
fnsave
pop
pop
add
inc
mov
shlb
jns
mov
rcll
sti
shrb
stos
ficompl
xor
mov
sbb
bound
clc
aad
shlb
mov
addr16
inc
cmp
and
in
dec
mov
test
lods
rcrl
es
and
sbbb
ret
mov
inc
leave
inc
das
loop
push
ds
andl
rorl
cmp
ljmp
cwtl
pop
and
test
rcll
lock
les
hlt
std
or
pop
and
inc
sahf
pop
test
sub
mov
orb
pop
jae
imul
sarl
cmp
gs
mov
cmp
mov
mov
stos
dec
sbb
cmp
mov
or
leave
jo
lods
xchg
fucomp
pusha
jbe
mov
and
mov
xor
push
movsb
pushf
fcmovb
mov
dec
sbb
shrb
pushf
push
jl
movsb
in
cmp
cwtl
mov
or
cmpsl
add
clc
out
mov
js
xchg
xchg
jno
xor
cmp
sub
mov
pop
adc
pop
aad
out
ljmp
inc
or
aam
jnp
pop
aad
inc
divl
xor
sete
jne
inc
cmc
jp
fwait
mov
sub
dec
je
daa
cmp
into
inc
out
outsb
or
sbb
in
insb
hlt
sub
test
out
adc
sub
out
insl
xchg
rcr
cli
push
ss
xor
fsubr
mov
das
loope
mov
mov
push
fadds
repnz
sbb
ret
je
xchg
add
mov
mov
jmp
adc
mov
xchg
mov
addl
dec
jp
lahf
scas
jne
lcall
mov
aad
scas
in
and
push
outsl
pusha
add
imul
lods
mov
movsl
mov
stos
imul
fdivrl
jle
inc
or
lret
scas
pushf
sub
imul
push
mov
ljmp
out
outsb
fs
mov
loopne
repnz
imul
fs
stc
inc
dec
in
sub
add
insb
jb
pop
cmp
fidivl
jmp
inc
fwait
daa
adc
mov
fildll
mov
popa
int
popf
rcrl
dec
dec
cmp
add
xchg
aaa
jp
cmp
jge
mov
imul
jno
dec
iret
scas
cmpsl
pusha
or
xchg
aad
xor
push
movsb
rcrl
cmpsb
xchg
in
addl
cmp
test
cmp
xlat
add
inc
push
dec
mov
xchg
stos
out
notb
sbb
sbb
and
aad
add
mov
mov
pop
inc
out
xor
in
xchg
ss
mov
sbb
inc
mov
rorb
pop
sbb
or
push
out
fcompl
in
lahf
push
mov
cmp
push
inc
insl
sub
enter
cmp
mov
fists
popf
rcr
pop
or
pop
sub
mov
shll
daa
jmp
aad
enter
jb
adc
mov
dec
iret
test
test
test
negl
or
subb
add
aad
mov
push
shrl
stos
jnp
xchg
jl
cld
fisubl
sub
xor
xor
mov
andl
jmp
sub
inc
add
mov
outsb
mov
sarb
xchg
adc
fcmovbe
mov
je
inc
dec
mov
lea
mov
mov
aam
mov
pop
subb
xor
lods
pushf
mov
fsubrs
mov
in
repnz
ja
and
mov
and
push
or
push
inc
lds
pop
lock
adc
inc
or
dec
test
lsl
and
sahf
xchg
xchg
nop
cwtl
loope
adc
dec
insl
test
push
lahf
inc
xchg
inc
jmp
xor
pop
fisubrl
movsb
mov
hlt
fildl
xchg
cld
xor
pop
fldlg2
push
in
pop
dec
das
ja
xor
leave
xchg
mov
xor
leave
jg
jbe
push
pop
mov
pop
movsb
xchg
inc
push
or
jbe
shll
sbb
lea
adc
rcrb
shl
and
dec
pop
int3
and
fbld
jns
push
fistpl
aad
shrb
in
mov
roll
adc
inc
dec
and
loop
cmpsl
std
sbb
lret
outsl
dec
xor
shrb
push
test
xchg
cmpsb
cld
adc
sbb
jl
sar
add
mov
out
dec
adc
rorl
divb
or
xor
nop
into
pop
fisubrl
xchg
data16
dec
jnp
pushl
nop
cltd
jecxz
sub
das
outsl
jle
and
cmpb
sbb
fisubrs
pop
sub
repnz
into
inc
js
dec
ret
cmpsl
lcall
push
dec
je
cmp
lods
mov
mov
xor
jle
movsl
adc
mov
pop
jmp
in
imul
cmpsl
cs
pusha
je
jbe
in
push
jbe
fdivl
sbbl
stos
cmp
jno
add
inc
je
xor
jg
mov
cltd
add
movl
sahf
jbe
push
incb
hlt
add
jbe
xor
dec
imul
sahf
adc
lock
pusha
push
das
mov
cld
jns
push
push
cwtl
sbb
jmp
decl
ljmp
add
and
pop
push
adc
out
std
lret
inc
cmp
pop
ljmp
xor
dec
push
out
fwait
insb
fldl
in
outsb
sti
push
cmpsb
in
push
cli
hlt
pop
in
imul
push
jge
add
sti
shll
addb
test
in
sub
jo
adc
dec
addr16
jg
inc
pop
out
rcrb
lea
jne
js
cli
loope
adc
mov
mov
pop
sbb
inc
sbb
ret
ror
cmc
negb
sub
jmp
loopne
arpl
and
ret
mov
rcl
sahf
jmp
lret
dec
add
inc
fldenv
out
add
and
out
pushw
ret
and
aam
add
xor
push
mov
mov
or
arpl
rolb
cmpsl
in
jmp
psrad
cld
push
pushf
pop
or
xorl
incl
mov
cmp
int
pop
scas
stos
adc
push
mov
adc
and
arpl
dec
loope
push
push
cmp
cltd
aam
rcrl
subl
lcall
or
cld
or
pop
movsb
xchg
and
popa
mov
add
rcrl
dec
push
adc
mov
mov
xor
je
rcrl
outsb
mov
ss
test
scas
or
mov
sarl
fadd
dec
pop
imul
xlat
jno
mov
lret
dec
push
adc
inc
pusha
xor
xor
imul
cmpsb
xor
dec
push
data16
mov
fld
pop
je
mov
dec
roll
sub
jns
jnp
lret
js
sub
int3
ja
lds
aam
divl
push
bound
fidivs
jg
push
mov
sub
mov
sub
test
outsl
out
dec
lret
dec
jg
pop
js
dec
adc
cmp
pop
or
sti
dec
xchg
mov
inc
and
lds
mov
loopne
dec
add
cmc
test
mov
or
and
adc
or
lods
xchg
ret
ficoms
leave
outsl
test
dec
mov
pop
cwtl
cmp
icebp
push
dec
lea
mov
jbe
mov
out
lret
inc
pop
sub
jecxz
pop
or
gs
out
andb
dec
or
xor
fsubp
lret
jb
aad
into
push
and
adc
pop
fidivl
or
pop
add
push
push
cmp
add
push
js
mov
mov
negb
idivl
rorb
notl
xchg
repz
pop
cmp
sub
xchg
daa
mov
dec
and
and
add
xchg
data16
add
enter
sub
jne
sbb
and
xor
push
fnstenv
mov
fidivl
pop
xor
xchg
outsl
xchg
jno
aas
jns
mov
imul
mov
decb
hlt
das
xchg
arpl
in
test
adc
pop
add
clc
dec
aad
mov
idivl
inc
icebp
pop
shrl
pop
adc
dec
and
mov
push
imul
jae
js
mov
sbbb
out
jae
jbe
cmc
cmp
fistpl
icebp
rorb
je
pop
sbb
xor
lods
jbe
popf
cmp
push
push
leave
xor
fs
adc
lret
push
insb
cs
push
jb
lods
sarl
js
mov
data16
fnsave
fidivrl
lds
mov
sub
sub
mov
and
mov
cmp
mov
popf
jmp
pop
pop
mov
stos
cmp
push
paddusb
add
sbb
pop
mov
es
mov
adc
xchg
dec
jne
imul
jae
and
mov
in
rcrb
jecxz
mov
mov
dec
pop
mov
sarb
mov
rolb
pop
std
stos
jae
hlt
sahf
orl
jae
xchg
xchg
sub
movsl
test
sbb
icebp
imul
incl
inc
cmpsb
cmp
fwait
add
push
in
jbe
push
xchg
pop
or
sbb
pushf
mov
cmp
jae
scas
aam
mov
sub
inc
shlb
int3
rcr
aas
xchg
jno
jecxz
dec
hlt
lods
insl
aaa
popf
sub
and
xchg
aas
rolb
aaa
in
pop
shlb
push
enter
mov
sbb
repnz
mov
sbb
int
cld
stc
push
sbb
mov
movsb
adc
arpl
push
mov
xchg
push
sbb
inc
jmp
xchg
stos
lock
mov
jp
adc
ret
xchg
mov
mov
xchg
pop
aam
mov
xor
push
scas
cmp
and
cwtl
lods
sbb
imul
leave
dec
icebp
shlb
divb
test
cwtl
mov
mov
out
sbb
sub
mov
into
test
mov
leave
fdivp
mov
cld
mov
mov
fbstp
addr16
call
fsubl
ds
pop
mov
lcall
aas
mov
inc
and
int
jecxz
das
ret
ljmp
mov
or
pushl
cmp
add
cmc
movsl
mov
aaa
sarb
aas
je
subb
movsb
lret
pop
cmpsb
sub
and
repnz
mov
pusha
fistps
pop
outsb
and
leave
pop
leave
mov
sbb
jae
js
imull
xchg
mov
push
das
xor
or
aam
mov
cmp
and
and
sub
jl
xor
adc
test
mov
jmp
push
cmc
adc
mov
jne
inc
cmc
push
inc
cmc
sbb
jmp
int
dec
popf
mov
sub
scas
in
pop
mov
gs
adc
sub
or
in
jp
in
mov
mov
into
add
push
dec
insl
ljmp
filds
mov
push
scas
mov
lahf
outsl
cmpsb
mov
mov
xchg
sbb
imul
jecxz
rcl
cwtl
and
add
mov
fwait
mov
cmp
cmp
inc
mov
pusha
mov
or
and
dec
mov
push
fcomi
iret
stos
push
test
sbb
push
and
push
or
scas
adc
mov
nop
mov
out
fadd
imul
sbb
imul
xchg
push
fwait
cmp
cmp
xchg
ret
pop
and
fcmovbe
pushf
xchg
data16
sbb
sahf
insb
push
xchg
les
jns
shll
xchg
out
xchg
stos
and
fldt
lret
lods
addr16
adc
mov
fsincos
cmp
mov
in
or
orb
stos
ret
cmp
add
cli
inc
arpl
hlt
push
and
fwait
mov
or
push
inc
adc
jb
inc
ret
xor
icebp
je
lret
jnp
mov
fwait
mov
in
out
les
lds
add
or
push
mov
lahf
jb
xchg
scas
aad
dec
rcrb
cwtl
mov
int3
jecxz
push
sub
mov
ret
xchg
test
fcomip
mov
xchg
pand
rol
sbb
xchg
ja
lcall
sahf
add
ja
loope
js
and
sti
sahf
push
imul
dec
xorl
pop
fistl
in
or
cmpsl
push
nop
dec
mov
iret
mov
cli
xor
or
mov
icebp
dec
bound
sub
mov
fisubrl
cmp
sub
add
cli
or
xchg
xchg
cmpsl
adc
cs
jmp
dec
cwtl
fistpll
lea
call
loope
inc
loopne
mov
push
aaa
mov
push
pusha
pop
out
xchg
test
nop
xchg
stos
xchg
test
add
imul
sti
push
cmp
mov
fisttps
lds
push
lret
test
int
hlt
mov
dec
movsl
loope
call
sbb
shr
cmpsb
mov
in
lahf
dec
jge
inc
add
rcr
sbb
pop
insl
and
hlt
addr16
por
jp
pop
in
jmp
and
sub
push
add
adc
jae
pushf
mov
stc
and
js
inc
ds
sub
mov
mov
pop
cltd
aas
fnstenv
mov
aaa
cmpsl
test
test
ret
shrl
repz
jecxz
aaa
aad
pop
scas
cmp
lds
clc
hlt
rcrl
pop
mov
outsb
cs
push
test
push
dec
cmp
pop
addl
cltd
cmp
mov
subl
jge
dec
add
subb
pushf
les
dec
lock
sub
pop
les
or
xchg
xor
mov
leave
or
jae
sti
mov
lea
and
cwtl
movl
pushf
pop
push
test
movsl
jo
popf
sub
push
lret
jbe
inc
fs
int3
orl
ja
movsl
inc
sbb
sbb
mov
in
and
mov
cld
mov
cmpsl
ljmp
dec
xchg
out
xchg
mov
pop
add
cmp
das
cld
test
dec
mov
mov
mov
mov
pop
push
cwtl
cli
fisubl
or
cltd
inc
push
rolb
stos
push
imul
out
ret
add
fldl
in
xchg
dec
add
iret
iret
ficoml
pop
or
stc
mov
ret
rcr
and
mov
dec
lods
xchg
mov
sub
fwait
lret
jl
paddsw
cs
daa
fisttpl
test
std
push
cwtl
or
jb
sbb
sub
push
shll
jge
adc
cmpsl
aaa
aas
out
shl
les
push
clc
push
xor
mov
into
mov
insl
sbb
pop
scas
xlat
xchg
xlat
mov
mov
int3
test
cmp
sbb
pop
xchg
pusha
inc
call
loop
mov
add
xor
or
push
mov
sbb
stc
in
sub
std
lods
int3
sub
out
in
mov
push
and
ljmp
stos
or
cmpsl
fstps
jns
jno
out
or
jmp
out
jmp
ss
cmp
pop
pop
mov
and
enter
adc
sbb
cld
pop
xchg
insb
adc
add
sti
push
fstpl
cmp
dec
mov
xor
out
xor
cmp
push
xor
and
and
lret
sbb
test
inc
stos
jnp
xchg
sub
pop
fwait
mov
mov
jl
cmp
lahf
out
jnp
inc
push
push
imul
ja
xor
je
dec
sbb
jp
jne
cmp
xchg
ret
lds
int
cltd
fidivl
add
test
je
fldenv
ret
ss
popa
inc
imull
xor
lea
cmp
or
adc
xchg
sub
mull
lea
xchg
rolb
cld
outsl
lret
xchg
push
fisubs
pop
sub
call
in
cmp
or
sbb
fmulp
cmp
outsb
mov
push
es
iret
mov
out
stos
sub
push
xchg
pop
inc
jns
jnp
cmpsb
jbe
push
fsubrs
jecxz
xchg
xchg
adc
scas
test
sub
xor
dec
sbb
mov
mov
insl
adc
xchg
and
adc
data16
lret
sbb
scas
adc
or
sbb
rcrb
testb
lock
pop
lret
push
xchg
cs
aaa
push
mov
pop
mov
jecxz
jb
inc
mov
jmp
out
loopne
lret
js
pop
shlb
or
inc
inc
pusha
cmp
hlt
xchg
int3
repz
xchg
mov
cmpsb
sbb
test
in
in
mov
mov
stos
dec
mov
or
fs
pop
int
or
cs
mov
or
push
adc
add
mov
mov
jl
sbb
movsl
lods
pop
dec
adc
dec
inc
gs
sti
or
mov
mov
and
shlb
outsl
mov
xor
lret
pop
sahf
cmc
test
stc
ljmp
and
pop
mov
js
cmp
test
xchg
add
pushf
std
and
ljmp
ret
dec
and
dec
popa
dec
mov
ds
xor
dec
xchg
sahf
dec
cs
xor
pop
pop
outsl
hlt
repz
cld
push
mov
out
mov
test
jecxz
and
and
sti
dec
ret
cwtl
mov
imul
mov
xchg
add
pusha
into
xor
int
xchg
orb
arpl
shr
mov
add
and
shrl
repz
inc
mov
cmp
push
or
inc
mov
xchg
in
push
cmpsb
pop
mov
pop
jmp
xchg
adcl
push
int
push
test
dec
sub
divl
xchg
xchg
dec
loopne
in
inc
testb
test
and
dec
je
mov
push
cmc
flds
or
mov
das
insb
sub
ja
ret
bound
lahf
sbb
clc
int3
in
inc
insb
dec
xchg
xor
and
enter
xor
sar
int3
mov
mov
or
lahf
push
lock
or
pusha
lea
xlat
icebp
mov
out
and
fldt
test
xor
in
jnp
and
sbb
daa
jle
scas
mov
push
inc
cwtl
fimuls
adc
loop
mov
pop
addr16
mov
insb
loop
push
jmp
test
jns
fidivrs
ret
push
cmp
or
inc
and
and
adc
mov
mov
test
xor
in
lcall
inc
clc
mov
sbb
inc
lahf
pop
mov
imul
fildl
rcll
popf
ret
jp
xor
jne
icebp
sub
mov
xor
mov
push
pop
jne
push
enter
aam
inc
aam
aaa
jo
iret
inc
xor
mov
addb
mov
fisttpl
sub
xchg
mov
xchg
in
mov
push
fcmovnbe
in
fsubs
je
out
clc
xchg
aas
mov
jns
or
data16
out
or
insb
inc
mov
addb
stos
movsb
and
in
jl
scas
int3
adc
pop
add
mov
loop
fwait
add
popa
adc
loop
imul
xor
cmpsb
mov
cmp
inc
cwtl
int
xchg
std
inc
or
sub
dec
or
sarb
or
in
inc
jecxz
cmp
bound
push
or
sahf
push
adc
and
mov
mov
dec
out
inc
or
les
aad
sub
andnps
and
mov
or
negb
popa
addr16
jbe
fwait
std
pop
and
sti
or
or
xchg
add
lcall
sbb
or
and
and
das
push
out
cmc
out
mov
lods
out
mov
sbb
stos
or
sar
negb
inc
xor
sahf
dec
inc
mov
out
mov
sarl
sbb
add
shlb
nop
daa
jae
test
mov
scas
mov
cmp
sbbb
iret
or
call
mov
cmpsl
pushf
mov
testl
pop
test
pop
push
push
mov
icebp
aas
fdivl
push
xchg
fidivrl
mov
push
push
inc
out
adc
sub
in
jle
push
inc
add
lcall
mull
sahf
bound
movsl
mov
adc
jno
xchg
cwtl
and
rcll
loope
cmp
push
push
in
test
inc
adc
adc
and
mov
loopw
add
xor
mov
push
adc
jo
std
mov
add
add
adc
out
mov
sub
xor
xchg
jo
ja
xchg
aad
lahf
rcll
roll
pop
sub
xor
cmp
sub
ret
lods
and
dec
stos
insl
pop
push
adc
xor
push
cmp
mov
jp
jne
stos
sbb
es
add
push
jae
test
push
daa
mov
sub
data16
fiadds
and
xor
pop
dec
sarl
cmp
outsl
and
inc
insl
imul
cmp
dec
mov
jb
mov
sbb
jg
shlb
test
cmp
pop
scas
inc
ja
pop
ss
clc
sub
lahf
dec
push
divb
fwait
rcll
push
fnsave
fdivl
movzwl
dec
push
sbb
stc
xchg
scas
mov
loop
xor
cmpsb
cli
xchg
adc
inc
mov
out
xchg
fbld
mov
paddusb
push
mov
mov
mov
and
rcll
push
pop
test
ja
pop
xchg
ret
lods
or
add
inc
jns
jne
repz
popf
jne
repz
sbb
and
mov
cmp
dec
call
sbb
mov
push
out
xor
mov
cmovp
xor
inc
sub
cmpsl
mov
dec
inc
xchg
insb
es
shl
sbb
mulb
push
jns
sbb
xlat
insl
jbe
inc
ffree
inc
jno
cmc
testb
sbb
fsubr
jns
mov
sbb
sub
jl
cli
and
or
repz
or
cld
adc
jnp
jnp
pop
pop
fisttpll
cmp
test
mov
and
andb
fwait
xchg
lds
andb
in
int3
xor
and
inc
mov
fwait
in
push
sub
mov
repnz
repnz
sub
jne
aaa
in
lods
xorb
inc
xor
enter
push
es
insb
jl
enter
pushf
imul
mov
int3
dec
mov
xchg
xor
sub
ret
into
mov
fwait
or
pop
push
or
mov
and
jns
sar
xor
loope
add
out
cmp
push
cmp
and
cmp
push
rcl
sub
shll
and
add
xchg
int
mov
and
call
jno
jnp
sbb
sbb
push
pop
inc
test
xchg
in
add
test
dec
xor
mov
xlat
std
loopne
inc
enter
idivl
fisttpl
sub
imul
insl
call
dec
imul
mov
sti
cmp
mov
push
sub
repz
push
ret
rorl
lea
imul
fists
sbb
add
dec
inc
and
xchg
ret
cmp
mov
in
fistpl
jae
inc
pushf
fistpll
jno
xchg
fs
cmpsb
xor
pop
and
dec
movl
sbb
js
jae
stc
pop
inc
aaa
ljmp
mov
mov
in
push
inc
sbb
sub
lcall
jge
out
cltd
cmp
sub
mov
jmp
pop
adcl
lea
inc
lods
repnz
es
loop
arpl
insb
addb
inc
rcrb
scas
add
gs
or
pop
mov
jl
insl
mov
push
fisttpl
repz
xor
mov
jno
mov
mov
sbb
and
pop
out
shr
popa
into
stos
les
out
sub
and
mov
xor
test
push
arpl
mov
je
xchg
push
cli
pusha
cmp
rcr
mov
fisttps
lock
dec
push
gs
aad
inc
scas
pop
add
cmc
xorl
and
cwtl
ficomps
jnp
in
loopne
mov
xor
push
ret
lods
push
leave
clc
andps
inc
jbe
movsl
lret
in
pushf
sar
out
sahf
lcall
repnz
mov
xor
xchg
jle
insb
rorl
in
cmp
jno
pusha
hlt
orl
dec
into
loope
jb
stc
fsubrl
arpl
fcoml
lods
cmp
pop
call
stc
inc
in
inc
dec
xchg
adc
test
jl
inc
jo
or
jge
sbb
sub
fimull
jnp
cmpl
cmpb
adc
push
cmpb
push
stc
push
dec
iret
push
into
pushf
cltd
leave
mov
loopne
cmp
movsl
hlt
mov
xchg
mov
sub
jns
add
push
lods
stc
dec
das
inc
cld
bnd
jge
fcom
mov
xchg
call
inc
pop
xor
mov
jl
stc
test
js
push
rcl
dec
lret
mov
fists
shll
mov
inc
pop
sub
push
inc
inc
into
sbb
ss
mov
ja
jns
scas
shlb
outsb
mov
lods
push
cmp
aas
sub
sbb
push
pop
lahf
adc
fadd
mov
int3
xor
lahf
shl
pop
sub
and
pop
loop
jmp
xor
ficompl
xchg
repz
ret
mov
inc
mul
sbb
xchg
rcrl
andl
mov
idivl
bound
lods
ret
xor
and
idivb
iret
jl
or
test
fstps
pop
dec
dec
mov
xor
jb
sbb
jmp
add
mov
push
rol
jmp
push
flds
int
movsb
and
je
imul
int
adc
mov
inc
arpl
ljmp
add
jne
aas
call
pop
ljmp
jmp
jne
fsts
imul
insb
pop
outsb
cmp
in
sbb
int
cmpb
insl
lret
or
setae
sbb
or
stos
into
js
cmp
mov
jecxz
add
sti
loope
adc
inc
cmp
stc
imul
inc
dec
ljmp
sbb
subb
cmp
adcb
popa
clc
sub
addl
and
imul
cmp
or
xchg
inc
inc
push
dec
pop
jp
and
mov
and
gs
out
ficoml
inc
mov
stos
repz
sub
das
or
mov
loop
push
push
outsl
fdivs
es
push
in
fwait
enter
loop
xlat
inc
xchg
fwait
dec
cltd
sub
imul
mov
cmp
and
inc
sub
add
push
cld
fimull
les
add
imul
jecxz
jo
leave
fmulp
add
mov
lock
les
mov
mov
sbbb
aas
add
sub
mov
lcall
sub
lahf
push
aad
pop
outsb
imul
pop
xchg
jne
add
mov
aas
cmp
xlat
jp
cli
inc
mov
xorl
pop
mov
das
stc
mov
cmp
ficomps
add
inc
push
push
in
int3
js
lcall
bound
add
cli
or
out
or
sbb
mov
jmp
sbb
push
je
mov
bound
adc
fistpll
imul
sub
movsl
pop
mov
clc
fs
mov
idiv
jg
inc
ljmp
je
xor
inc
cltd
movsb
push
bound
sbb
cmp
lret
sbb
cmpsl
push
rorl
adc
addr16
mov
das
dec
xchg
adc
push
ds
test
jp
mov
scas
inc
jnp
pop
xchg
call
mov
insl
xchg
xchg
and
js
jns
push
stos
xchg
notl
fs
mov
push
lea
mov
shll
or
push
jo
cmp
in
mov
in
xor
or
pusha
mov
scas
mov
dec
mov
shll
loope
fcmove
out
fsubp
daa
and
adc
out
and
pop
testl
sahf
stos
ret
sub
setg
cmp
xor
les
sub
jmp
and
jl
add
mov
cmpsb
inc
and
add
bound
outsb
lods
xchg
pop
jns
lret
push
pop
ss
dec
jp
mov
inc
adc
mov
mov
lods
aam
cmp
cmpsl
iret
popf
repnz
xchg
scas
jg
ret
in
imul
stos
inc
and
jno
xchg
mov
inc
out
jne
repnz
jne
mov
jbe
repz
fisubs
push
mov
fldln2
mov
mov
ljmp
icebp
aad
shll
sarl
iret
cli
push
jno
lock
dec
mov
adc
ret
cld
pop
and
mov
fistps
mov
leave
xchg
dec
jno
jmp
push
aad
inc
cld
jge
jp
jbe
int3
stc
outsb
testb
cmp
inc
xchg
fildll
in
inc
or
cmpsl
and
or
push
dec
jl
mov
insl
call
divl
sbb
aad
sbb
rolb
aam
icebp
dec
jmp
cmp
pop
jb
dec
in
sub
fsubrl
lret
dec
sbb
pop
inc
loopne
js
test
mov
cs
add
jbe
stc
ss
mov
icebp
xchg
xor
insb
movl
adc
decl
sub
lret
insb
imul
addr16
cmp
jne
inc
adc
out
xor
das
out
inc
imul
lret
jl
mov
fptan
in
adc
and
dec
scas
bound
dec
pop
sub
clc
outsb
dec
outsl
in
and
mov
pushf
sbb
int3
sub
or
dec
cmp
mov
sbb
xchg
stos
int3
jbe
sbb
jno
call
mov
jl
loop
add
xchg
xchg
shll
lock
call
add
sbb
test
loope
push
insl
cmp
shll
subl
out
cltd
loope
sub
xchg
pop
ret
xchg
out
xor
insl
dec
loope
inc
ret
mov
add
imul
int
lahf
scas
stos
mov
push
mov
jae
inc
mov
jle
inc
subl
pop
xchg
insl
in
xor
xchg
aaa
or
pop
gs
outsl
in
ljmp
xor
or
fsubl
xchg
lock
shrl
cld
lea
sub
fs
rcl
gs
cwtl
movsb
cmp
push
mov
sub
adc
es
cmp
xchg
and
add
jmp
mov
sahf
inc
jmp
mov
jp
push
out
cmp
fstps
pop
adc
push
dec
and
repnz
ret
cmp
adc
cld
mov
jns
inc
mov
mov
cmp
je
xchg
add
pop
push
out
sbb
nop
lock
adc
push
push
stc
testl
fcmovnbe
lret
adc
movsl
mov
ljmp
lods
sbb
mov
push
push
add
rorb
shrl
push
sbb
enter
xchg
push
pusha
cmc
sub
inc
push
leave
push
push
and
dec
imul
pop
jmp
lret
mov
adc
stos
mov
repnz
test
mov
push
lcall
dec
push
or
stos
pop
aaa
inc
or
fldenv
rorl
sbb
jbe
inc
scas
xchg
mov
mov
push
sbb
pslld
adc
sti
sub
xchg
pusha
mov
pop
jg
arpl
push
movsl
lahf
or
in
mov
shrb
call
jecxz
push
popa
cs
pop
mov
jmp
push
ja
jecxz
out
ljmp
clc
xlat
push
fstp
jno
mov
adc
push
mov
fists
dec
mov
jb
popf
jmp
lret
cmp
inc
mov
mov
ja
pop
in
mov
clc
bound
cmpsb
mov
mov
popf
jp
sub
pop
add
sbb
fstpl
test
nop
mov
sub
pop
add
into
push
test
and
rolb
inc
jmp
lods
iret
push
out
addb
adc
shlb
or
fcmovnb
imul
out
hlt
jno
sbb
nop
je
int
rcl
add
cmp
fistl
xchg
rcrl
pop
cmp
outsl
cmc
movsl
xor
fcompl
ficompl
mov
stc
out
adc
adc
dec
decb
data16
stos
cwtl
xchg
sbb
jecxz
jnp
shll
pop
push
movsl
push
stos
outsl
pop
push
adc
mov
inc
dec
lods
das
gs
jae
lea
mov
mov
movsb
jno
std
lret
mov
adc
mov
xlat
shld
inc
push
pop
test
and
mov
xchg
jae
test
mov
fcoms
sub
xchg
dec
mov
mov
mov
nop
mov
popf
inc
out
ret
scas
stos
pop
jecxz
add
mov
cld
sbb
cmp
dec
inc
lret
dec
cltd
iret
xor
ret
jle
loope
cmp
adc
mov
repnz
cmp
cwtl
sbb
ds
pop
push
mov
cmp
cmp
sarl
outsb
pop
cmp
scas
xchg
cmp
into
andb
inc
jmp
inc
test
ret
fdiv
xchg
xchg
inc
xchg
mov
pop
mov
mov
scas
push
aam
test
out
pop
xchg
jg
repnz
stos
fcoml
xchg
pop
adc
mov
mov
cld
leave
and
bound
push
dec
xor
rorb
adc
ds
mov
frstor
pop
test
loopne
xor
stos
lods
xor
addps
test
xchg
mov
leave
shl
pop
cli
cmpsl
pop
shl
test
sub
xor
cmp
jp
pop
push
mul
xchg
cmpb
push
dec
out
add
push
in
jecxz
inc
push
loop
in
push
test
icebp
pop
and
leave
lahf
xchg
mov
push
sahf
addr16
pop
mov
popa
mov
mov
addr16
data16
and
pop
sti
shll
dec
icebp
inc
cmp
int
pop
mov
mov
aam
sub
dec
dec
dec
mov
push
addr16
cmpsl
add
pop
in
and
push
push
out
jae
sbb
add
sti
mov
xchg
pop
xchg
mov
aaa
js
xchg
in
faddl
int
mull
lret
cmpsb
outsl
out
ficoml
inc
xchg
lods
clc
xchg
inc
pop
popf
repnz
cmpl
adc
int3
push
push
push
inc
cltd
je
jns
icebp
adc
in
bound
cmp
fdivr
lods
sub
mov
mov
inc
lcall
int3
adc
int
je
adcb
dec
enter
inc
mov
pop
and
insl
inc
loope
popf
or
insl
push
loopne
enter
push
jne,pt
hlt
call
lock
in
dec
filds
mov
loopne
xchg
sbb
lret
inc
insb
mov
faddp
xchg
repnz
mov
std
xchg
sbb
adc
cmp
sub
xchg
sub
sbb
mov
xchg
ljmp
test
std
test
loopne
jbe
scas
push
pop
xor
push
sbb
pusha
mov
and
jns
and
lods
decb
outsb
repnz
aad
test
aad
jp
jle
cmc
stos
das
in
stos
ds
push
and
mov
pop
ljmp
outsl
out
arpl
mov
cmc
or
pop
xlat
push
push
iret
and
mov
jo
out
inc
or
xchg
push
mov
sarl
mov
and
inc
cmp
adc
in
and
cwtl
cmp
add
xchg
mov
popl
cmp
loope
bound
pop
ror
and
mov
and
mov
data16
es
lea
cmc
jne
cmp
insb
jecxz
inc
hlt
ljmp
cmp
pop
movsl
add
push
jnp
add
or
ror
dec
cmc
dec
jle
test
jecxz
out
lret
xchg
lret
push
mov
jecxz
mov
outsl
jne
cmp
idivb
push
sub
xlat
inc
cmpsb
jns
mov
sub
das
std
cmp
arpl
insl
lcall
xchg
aam
lds
adc
cwtl
jp
hlt
xor
hlt
cmp
aas
js
or
add
inc
sbb
and
sbb
cld
stc
mov
xchg
test
cmc
pop
fdivl
aas
and
mov
pop
jo
or
cld
dec
testb
subb
jo
out
movsb
lcall
lods
fisubl
mov
ret
sub
loop
ret
jo
mov
mov
fstpt
test
aas
mov
add
bound
testl
inc
inc
xchg
mov
jl
xchg
lret
jmp
aaa
push
call
cmpsl
sub
mov
outsl
jg
pop
mov
push
fwait
addl
pop
shrl
jb
and
std
imul
movsb
shrl
push
das
rclb
mov
es
loope
sahf
jo
mov
outsl
or
mov
repz
add
rolb
cmp
fcom
sub
lock
mov
loope
pop
movsb
out
push
bound
mov
std
mov
xor
repnz
es
push
scas
fsubr
sahf
jnp
pop
aaa
push
ss
cld
push
cld
subl
stc
loopne
enter
in
add
adc
mov
xor
std
ds
xlat
ljmp
adcl
pop
fwait
sub
cwtl
fidivl
subl
add
add
inc
sbb
popw
sbb
dec
inc
out
ja
repz
add
out
adc
out
jp
in
test
in
push
shl
adc
roll
push
fmuls
dec
adc
adcl
pushf
bound
fiadds
mov
cli
or
inc
popa
popf
jge
and
imul
gs
std
mov
cs
rcrl
aas
pop
cld
xchg
lahf
pop
pop
push
add
mov
out
jne
cmp
cmp
ret
push
jp
add
gs
std
int
icebp
into
pop
enter
jmp
rolb
xlat
cli
or
lahf
xor
add
add
and
pop
push
add
push
mov
mov
inc
mov
and
repz
inc
call
or
mov
stos
push
mov
shrb
add
cmp
das
outsl
dec
mov
xor
inc
xorl
adc
jbe
or
adc
add
adc
xchg
dec
insb
jno
shrb
repnz
pusha
mov
mov
dec
adc
sub
xchg
cmpsb
jnp
aad
pop
and
add
cmc
dec
stos
cwtl
and
inc
ret
add
xor
stos
sub
mov
cmp
sbb
pop
push
iret
fwait
out
push
inc
in
mov
popf
insl
cmp
bnd
or
gs
dec
daa
cmp
shrb
mov
xlat
push
loopne
mov
lahf
repz
fwait
scas
out
mov
lea
jmp
add
sbb
jmp
jmp
lcall
xchg
ret
lahf
pusha
std
icebp
scas
cmc
cld
rcll
out
pop
sbb
sbb
mov
rcrl
cli
pusha
mov
sbb
push
pop
push
sbb
inc
or
and
loop
mov
imul
icebp
dec
sub
mov
push
ret
divl
jp
jge
aas
jmp
jnp
or
inc
xchg
fucomp
ljmp
inc
nop
mov
xor
lcall
pop
dec
shlb
cmpsb
sbb
xchg
add
stos
adc
out
movsb
xchg
push
adc
xor
scas
or
mov
or
xlat
les
xchg
add
popa
cmp
pop
rol
movsl
mov
dec
lods
aaa
lret
loopne
lret
ss
cltd
cmpsl
in
lcall
roll
lahf
leave
xchg
and
out
adc
in
insl
rcrl
mov
test
stos
adc
xor
jb
inc
arpl
adc
js
lods
adc
repz
cmpsb
popf
inc
cmp
ja
jl
and
mov
sahf
into
cmp
out
sbb
mov
out
jmp
push
subb
into
jmp
pusha
ds
lret
popf
cmp
dec
popf
and
jecxz
mov
and
lods
sbb
jnp
sarb
cmp
cmpsl
int
xchg
lock
pop
or
popa
pop
mov
rcll
fnstsw
sbb
mov
or
lods
rolb
push
mov
inc
outsb
jl
jae
xchg
or
push
xor
push
das
push
mov
mov
jg
push
rorl
pop
imul
mov
sbb
fwait
cmp
jb
xor
ja
jne
addps
sbb
loop
xor
cltd
sub
arpl
cwtl
mov
cmp
and
xchg
adc
cmp
sub
aaa
out
les
push
add
and
adc
jne
call
les
push
sub
push
add
outsl
dec
or
imul
es
xor
test
mov
int3
jnp
mov
outsl
outsb
jnp
popf
mov
out
stos
std
push
data16
xchg
inc
mov
enter
out
mov
mov
pop
cmpsl
notb
pusha
pop
xchg
mov
sbb
inc
push
mov
jmp
pop
xchg
push
and
pop
jns
cmp
cmp
sahf
xchg
scas
mov
icebp
les
xchg
fldl
cld
push
int3
sub
imul
inc
dec
sbbl
pop
sub
das
shlb
push
out
mov
js
or
rorb
or
clc
mov
stos
in
and
mov
cmpsl
les
mov
adc
xchg
mov
inc
push
add
loope
add
mov
repnz
ljmp
cpuid
into
lret
mov
or
dec
cltd
dec
pushf
imul
insl
inc
orl
add
rcrb
xlat
ss
cmp
push
clc
mov
cld
movsl
out
mul
push
hlt
loop
push
sub
fiaddl
jnp
mov
rcrb
rolb
push
movsb
ds
mov
cmovns
mov
pusha
into
mov
xor
pushf
add
aad
xchg
or
scas
in
push
sbb
clc
cmp
notl
pushf
lea
in
mov
fwait
dec
or
loopne
pop
push
cmp
jno
je
push
jl
pop
pop
sti
out
arpl
outsl
pop
and
ficompl
sbb
inc
shrb
xchg
fld
ret
cmp
std
ret
std
pop
imul
stc
repnz
and
add
shrb
jp
cmp
ja
into
data16
push
or
jmp
loope
test
sbb
push
stos
inc
inc
aad
jo
push
je
pop
pop
fdiv
lahf
mov
adc
aaa
mov
mov
int
add
enter
push
fisubrl
int3
adc
sub
or
aad
mov
fnstcw
or
enter
loopne
pop
dec
fmuls
nop
cs
mov
scas
shlb
inc
int3
mov
push
xchg
jno
push
test
jnp
mov
sub
jo
fcom
adc
hlt
mov
adc
ja
xchg
cli
inc
pop
es
add
and
inc
sarb
cmp
jb
call
pop
sub
jmp
fdivl
mov
stc
mov
shll
push
test
mov
ret
mov
inc
xchg
sbb
jbe
movsb
repnz
fs
pop
sub
je
test
sub
mov
jne
out
iret
mov
mov
or
fcompl
mov
sbb
call
or
push
test
lea
insb
test
pusha
add
fbstp
js
data16
data16
test
lods
mov
sub
loop
inc
add
sbb
shl
inc
adc
addr16
pop
cwtl
jp
jge
dec
test
lock
push
sub
push
pop
dec
mov
jmp
cmc
bound
rorl
add
adc
and
push
jmp
aad
in
adc
mov
pusha
push
add
xor
js
imul
mov
pop
dec
jle
push
dec
scas
iret
mov
lods
xchg
lret
dec
in
jbe
cli
push
xchg
pop
sub
shll
lcall
in
test
cmp
lret
stc
subb
das
push
insl
or
movsb
std
sub
jae
fs
std
add
rol
cmpsb
xor
jno
clc
rclb
cmp
jmp
call
inc
jmp
bnd
push
or
mov
imul
ss
scas
dec
lret
pop
into
leave
in
dec
call
in
inc
jle
and
xchg
repz
in
adc
add
scas
imul
jnp
ds
imul
jmp
ja
shlb
clc
jns
ror
mov
fsubs
shlb
push
pop
mov
inc
popf
fldt
sbb
add
sbb
jb
popl
push
sbb
test
mov
cmp
sub
into
xlat
daa
xchg
scas
stos
and
inc
or
adc
fstl
dec
push
repnz
push
cmp
pop
test
fucomp
or
js
movsl
cld
fidivrl
idiv
cmp
std
add
and
sub
sbb
aad
test
xchg
addl
mov
faddp
inc
mov
nop
xor
and
repnz
rol
addl
call
dec
enter
in
sbb
sbb
mov
gs
or
add
loop
adc
mov
mov
gs
movl
push
lods
and
xchg
cmc
sbb
jbe
mov
push
push
stos
les
shll
xor
or
or
popf
stc
aad
arpl
pop
mov
xchg
test
int3
movsb
cld
shrb
out
cmp
mov
jns
testl
xchg
xor
jnp
mov
test
mov
and
insb
xlat
mov
mov
add
jno
std
xchg
adc
xor
sub
pop
jb
jge
jecxz
cmp
and
notb
jns
pop
cmp
out
ficoml
in
repnz
xchg
sbb
add
les
jg
push
fisttpll
ds
aam
aaa
xchg
fildl
lock
sub
das
inc
and
cmp
xor
jge
mov
out
mov
push
lea
lock
dec
aaa
mov
fldcw
in
or
sarl
inc
nop
push
inc
pop
stos
mov
push
push
outsl
js
mov
ljmp
xor
push
mov
mov
add
in
xchg
shl
ret
cmp
jb
leave
push
dec
mov
mov
jge
cs
incb
pushf
xor
sub
push
iret
incl
ror
jl
ds
filds
inc
negl
xlat
adc
js
xor
inc
sarl
decb
push
and
mov
push
out
cmpsb
inc
and
cwtl
cmpl
jg
movsl
out
ljmp
shrb
aas
mov
js
push
addr16
out
xor
and
xlat
jno
add
adc
xchg
xlat
and
notb
jo
ja
jns
nop
fs
insl
clc
push
sbb
pop
test
pop
cs
pop
sub
mov
xchg
cmp
scas
xchg
cmpb
in
xor
cmp
js
jecxz
loope
xchg
push
and
pop
and
gs
arpl
scas
push
mov
int
nop
popa
dec
push
mov
aaa
jg
mov
hlt
cmp
jno
shll
mov
sahf
push
pop
test
dec
sbb
pop
ljmp
rclb
loop
dec
xchg
or
pop
sbb
loopne
sub
xor
aaa
mov
pop
or
int
add
mov
dec
pusha
repnz
ret
in
in
std
nop
sbb
enter
in
orl
push
sub
pop
sub
jb
mov
or
dec
ret
or
bound
dec
roll
mov
out
cmp
pushf
cmp
xor
cmp
xor
jge
mov
inc
lcall
and
pop
jl
mov
lret
pop
inc
gs
ret
jb
fcompl
shll
ret
cli
xchg
inc
inc
hlt
lea
andb
mov
push
mov
int
mov
out
xchg
out
jnp
xor
sti
pop
ficoms
dec
inc
andb
pushf
adc
leave
mov
sub
daa
xor
cmpsl
aaa
nop
bound
mov
lods
fiadds
test
sub
int3
inc
inc
push
push
inc
push
pop
in
subl
lods
je
ljmp
sub
enter
sub
or
or
insl
inc
dec
icebp
adc
cmp
fiaddl
push
or
js
mov
inc
inc
xor
insb
sub
stc
push
xchg
mov
icebp
lock
jmp
stos
fidivrs
into
fnstenv
outsb
and
sbb
shll
jo
int
notb
adc
and
jae
sub
aad
pop
dec
inc
pop
decb
sbb
les
pop
jae
dec
pop
cltd
outsb
xor
dec
push
jb
js
xchg
shl
pushl
push
scas
cs
cmpsb
ds
push
dec
xchg
sub
sahf
ja
notl
cmp
dec
push
lret
mov
adc
inc
rcrl
mov
int
sub
push
mov
sub
ljmp
mov
adc
jb
cmp
cmp
xchg
xor
or
jae
sbb
lret
xor
jbe
lock
aaa
dec
jle
gs
gs
and
push
pop
popf
push
repz
call
fsubrs
pop
out
pop
mov
pusha
push
mov
adc
and
lret
cld
lock
inc
shll
cmp
call
repnz
sarb
inc
jl
cmp
inc
sarb
jno
insl
les
mov
push
out
dec
cwtl
mov
mov
ja
dec
mulps
out
cmp
mov
mov
adcl
mov
lcall
sbb
std
xchg
shrb
cmpsb
mov
test
outsb
sub
mov
call
mov
push
scas
test
mov
mov
mov
push
popf
cmpl
and
cmp
lea
xor
iret
adc
xchg
sbb
bts
xchg
or
test
shr
xor
sub
mov
adc
ret
add
stos
nop
aaa
xchg
ret
xlat
fldcw
dec
lahf
decb
push
adcb
cli
and
clc
cld
or
inc
mov
gs
ss
ja
mov
ja
pop
xchg
dec
dec
inc
mov
test
lds
jl
fcmovne
fcmovnbe
pusha
jae
ljmp
pop
pop
add
pop
push
outsb
cmp
sub
mov
inc
aad
pop
sbbl
in
push
pop
repz
cs
or
dec
dec
jl
xor
inc
xchg
inc
out
xchg
pop
nop
or
xchg
stc
sti
inc
jae
mov
push
xor
repz
nop
std
scas
inc
and
and
pop
jecxz
sub
cwtl
sarl
aad
cmp
fstpl
les
xchg
arpl
jmp
adc
mov
or
adc
sbb
cwtl
jb
dec
and
nop
mov
mov
js
rclb
negl
mov
jns
scas
xor
dec
je
cmpsl
mov
mov
inc
pop
xchg
inc
leave
jmp
test
aam
mov
js
stos
mov
loop
std
repz
or
mov
or
sbb
std
cmc
xchg
mov
rcrb
mov
fcmovb
dec
sub
enter
mov
inc
mov
subb
add
in
stc
mov
jb
call
inc
xchg
rcrb
js
cmp
fisubl
in
addr16
jno
cmp
in
jo
mov
lahf
mov
add
movsb
mov
outsl
sub
clc
push
cmp
add
sbb
sbb
xchg
sarl
fdivrs
adc
xchg
or
or
daa
jl
jecxz
dec
std
mov
mov
mov
push
data16
and
jl
imul
sub
imul
cmpsb
in
xlat
dec
in
xlat
sbb
bound
sbb
dec
mov
adc
dec
repnz
push
sub
cmpl
push
nop
inc
lds
bound
pop
clc
imul
dec
into
and
inc
mov
gs
or
test
add
add
int
stos
push
pop
test
add
xor
mov
sub
stc
into
jmp
fidivs
lret
aaa
clc
lods
mov
pop
jb
sub
enter
push
and
fcoml
in
out
lods
jbe
rcrb
or
adc
leave
sbb
dec
sbbl
in
out
inc
mov
jno
fadd
arpl
ret
fisttpll
movsl
pop
es
pop
or
out
jo
jle
data16
xchg
in
aam
in
mov
dec
push
or
cmpl
or
jmp
adc
stc
jecxz
cmc
sbb
jle
adc
cltd
scas
stos
jae
mov
sarb
sti
jge
inc
sub
jb
fmuls
pop
push
out
frstor
adc
cmp
xchg
push
fcomps
stos
nop
stos
inc
das
sub
pop
lcall
xor
inc
movsl
dec
cmpsb
mov
in
push
das
lods
clc
mov
test
pop
mov
sub
mov
cwtl
scas
xchg
pop
dec
cmp
jg
mov
cmp
jg
jecxz
subb
int
aaa
out
mov
jg
xor
out
sub
xchg
xor
push
sbb
jbe
sbb
push
stc
js
xchg
out
inc
push
aaa
clc
cld
adc
push
sahf
xor
lods
cli
test
inc
cld
aas
rorb
popf
fdiv
daa
sub
das
lcall
adc
mov
mov
es
xchg
jb
pusha
xchg
xchg
jne
jle
iret
mov
cli
sub
nop
or
xor
mov
aad
pop
mov
adc
ljmp
mov
pop
pop
clc
es
hlt
pushf
mov
loope
dec
xchg
and
pushf
std
push
std
lds
fmull
or
in
call
ret
push
cmp
ja
adc
add
jmp
xor
repz
or
pop
cmpsb
cmp
add
dec
cmp
cmp
push
cli
std
or
pushf
pop
jae
dec
or
lods
sub
or
js
push
push
and
pop
filds
andb
or
cli
sarl
jo
scas
shlb
jnp
mov
sub
inc
mov
addl
je
xchg
cs
mov
dec
jecxz
sub
inc
out
scas
dec
gs
hlt
mov
orb
adc
add
idivl
cmpsb
out
sub
fsubrl
aam
pop
loop
mov
mov
test
and
popa
shrb
aas
dec
jb
nop
js
adc
and
jns
andb
rcrl
and
and
add
call
dec
xor
jo
fsts
jl
lret
jns
inc
out
std
inc
out
iret
outsb
loope
mov
aaa
jo
and
lret
dec
mov
fsubrs
xor
pop
xor
negb
enter
incl
rolb
loope
xchg
jne
sti
mov
pop
mov
jbe
std
ret
mov
lret
inc
lock
xor
je
xchg
sub
xor
jne
pushf
xor
mov
sbb
fldt
dec
in
fsubl
ljmp
mov
outsb
stos
and
xor
jp
jo
xchg
xchg
inc
mov
lods
dec
sbb
call
outsl
mov
ret
inc
mov
push
xchg
lods
jnp
dec
into
insl
dec
out
adc
jmp
pop
or
push
mov
inc
sub
mov
imul
or
xchg
fdivrs
pop
ds
sbb
pushf
add
in
cmp
lods
rcrb
test
aas
pusha
sub
mov
adc
push
iret
addr16
popa
sub
mov
outsb
enter
lds
stos
pushf
pop
stc
lds
pop
and
push
test
pcmpgtw
adcl
mov
sarl
lock
xchg
lret
add
lods
cmp
pop
sahf
in
inc
push
xchg
fwait
xchg
dec
filds
rcrl
pusha
jns
jb
push
ret
xor
aad
div
clc
lcall
jb
or
jns
jle
mov
inc
pop
push
inc
pop
dec
pop
add
and
lods
cwtl
rcll
mov
sub
bound
mov
sti
dec
jae
jo
xor
pop
cli
lcall
test
orl
pop
dec
adcb
fdivrp
cmp
push
pusha
jge
shrb
cltd
xor
add
mov
cmp
aad
jecxz
dec
push
push
iret
mov
xchg
filds
pop
adc
mov
push
and
inc
ficoml
les
xchg
inc
psubsw
cmc
xlat
movsb
test
jp
fmuls
arpl
je
shrl
bound
js
jo
and
jb
test
jg
in
insb
jmp
out
mov
mov
mov
inc
jmp
int
fldenv
cmc
push
movsb
out
jnp
popf
xchg
outsl
jbe
mov
mov
fcoms
mov
test
push
mov
aam
das
std
cmp
mov
daa
movsl
inc
sbb
mov
es
sbb
jmp
pop
cmc
lods
loop
dec
mov
das
mov
jns
add
adc
xor
lock
push
pop
sbb
inc
sub
pop
inc
xor
or
in
test
fsts
popf
cmp
testl
fsubrp
pop
lds
sub
jb
mov
out
loopne
fbstp
pusha
xchg
cmp
loope
test
sub
sub
je
scas
mov
pop
sbb
pop
fstp
sbb
outsb
sbb
jge
into
fidivs
ljmp
mov
or
lret
fsubr
and
cld
mov
dec
int3
add
cld
or
rcll
xor
adcl
ja
cli
scas
in
jb
sbb
jnp
xchg
faddl
mov
push
push
mov
xorb
adc
mov
xor
hlt
mov
test
add
outsl
out
xchg
dec
mov
leave
jne
scas
adc
mov
sbb
mov
dec
cmp
jge
lahf
mull
pop
aas
push
push
mov
outsl
jmp
mov
mov
outsb
hlt
mov
cld
loopne
inc
cli
mov
fisubrl
mov
iret
sarb
push
ficompl
fbld
into
addr16
jne
lods
mov
add
fldt
stos
leave
shl
xor
mov
stc
mov
lods
sbb
js
mov
sub
jb
sub
mov
add
jne
repnz
stos
in
dec
cli
inc
cld
adc
pop
adc
dec
orl
xor
fwait
lods
rorl
pop
sub
sub
xorb
lcall
out
cwtl
loop
cmp
stos
out
xchg
add
add
loop
push
and
adc
je
adc
adc
jno
cmpsb
int3
repnz
addb
mov
lds
dec
addb
jge
bound
cpuid
pop
loopne
or
jmp
dec
dec
sbb
fs
cs
mov
cmp
add
mov
mov
adc
scas
fisttpl
sub
inc
std
scas
mov
pop
movsl
push
loope
or
mov
sub
adc
lods
out
inc
mov
cmp
xchg
inc
and
mov
inc
aam
and
adc
fcompl
xor
push
inc
hlt
and
loope
or
add
lods
inc
mov
rcrb
lods
sub
jnp
mov
push
addl
add
pop
lahf
and
lods
cmp
mov
cmpb
sbb
insb
call
mov
cmp
rorb
mov
icebp
xorb
mov
movsb
arpl
mov
xor
je
cmpsl
inc
out
loopne
decb
ljmp
dec
mov
aas
sub
sbb
xor
in
push
dec
or
outsl
icebp
dec
or
fs
pop
enter
call
xchg
lcall
push
in
xor
popl
mov
subl
mov
push
pop
sub
dec
mov
pop
push
push
jl
js
ljmp
xchg
inc
sub
pop
fstl
test
xchg
cmp
mov
test
movsl
add
push
jecxz
xlat
mov
cmp
push
daa
push
imul
sub
xchg
cmp
cmp
and
cmp
icebp
mov
inc
inc
leave
mov
push
andl
jbe
mov
mov
pop
xor
cmp
cmp
sub
loopne
inc
repz
int
sub
test
test
lds
lea
data16
jbe
leave
mov
idiv
sti
popa
pop
or
or
xor
fmull
cs
inc
loope
mov
jnp
add
hlt
cmpsl
mov
sbb
lret
mov
xchg
jae
sub
ss
xor
add
ljmp
cwtl
test
addr16
pushl
jno
aaa
pop
jl
je
push
in
dec
and
loopne
in
cmpsl
psadbw
jnp
mov
jg
je
mov
xor
lret
fldl
sub
stos
adc
mov
mov
inc
mov
dec
sbb
mov
imul
lea
pop
sub
or
sbb
and
sbb
pop
cltd
push
sti
enter
dec
insb
scas
insb
jno
pop
flds
test
and
push
and
mov
shl
mov
xchg
lret
imul
add
sub
dec
icebp
adc
pop
pop
xchg
in
pusha
dec
into
mov
xchg
pusha
add
mov
int3
fimuls
leave
xchg
jg
adc
sub
add
push
cmp
jecxz
pushf
cmpsl
lock
or
sbb
cmpsl
or
aad
dec
dec
in
push
stc
pop
int
push
jge
bound
lahf
push
xor
xor
mov
outsb
loope
out
push
into
clc
ret
push
push
push
cltd
or
add
ss
out
or
push
movsb
jmp
mov
pop
mov
mov
cwtl
cmp
aam
pop
mov
cmp
ds
mov
hlt
pop
lods
je
gs
mov
jae
sub
les
sbb
stos
mov
push
rorl
push
gs
test
sti
lods
lret
mov
mov
sbb
sub
xchg
and
repnz
xchg
repnz
fdivp
pop
xchg
pop
push
mov
mov
add
lods
dec
ljmp
xchg
jmpw
inc
push
adc
imul
frstor
scas
inc
sub
bswap
js
scas
fbstp
rclb
or
dec
xor
ss
lea
sub
stos
inc
xor
adcb
cmpsl
into
mov
jge
xchg
mov
cmp
outsb
mov
mov
jp
or
add
incl
add
std
int
stos
mov
rorb
mov
jge
mov
repz
sahf
aaa
std
loop
mov
pushf
dec
ss
inc
stc
push
into
ret
or
cmp
sub
jbe
orb
out
jne
test
xchg
outsl
test
adc
adc
add
lea
xlat
test
push
into
sbb
xor
lds
push
jp
jo
dec
stos
sub
pmullw
out
es
popa
mov
aaa
and
ret
sbb
push
cmp
insb
mov
push
rolb
pop
pop
int
inc
inc
pop
sub
mov
xchg
add
pop
das
xor
call
add
sbb
push
mov
dec
xor
int3
cmp
or
shlb
rep
mov
dec
repnz
loop
daa
cmpsb
clc
fmull
scas
call
in
subb
sub
adc
push
inc
push
xchg
pusha
adc
xor
sbb
dec
cmpb
loopne
mov
xor
mov
test
cmp
push
movsl
das
jae
outsl
inc
lock
or
pop
sub
pop
inc
scas
ljmp
lock
clc
outsb
dec
mov
add
xor
xchg
push
in
mov
mov
jmp
test
xor
lods
xchg
inc
lds
mov
jle
js
incb
fisubs
repnz
loopne
data16
inc
xchg
mov
sbb
shlb
fildl
fdivr
xchg
inc
sub
jbe
push
lcall
movsb
jns
test
cs
test
and
out
push
aam
div
stos
lret
add
cmpsw
or
dec
fnstenv
std
adc
lret
nopl
mov
cmp
clc
jae
jecxz
inc
stos
jbe
stc
mov
sahf
ja
mov
cmpsb
fwait
aam
int
stos
arpl
xchg
fdivr
push
mov
das
pop
jb,pt
out
mov
ficompl
ss
adc
pop
loop
cs
jle
aad
ret
pop
adc
mov
out
add
cmp
jmp
xlat
adc
aas
outsb
pop
lock
sbb
push
and
mov
inc
addl
ljmp
loop
sbb
jle
sub
push
lret
jp
bound
mov
and
cmpsl
les
dec
sbb
dec
mov
inc
lcall
adc
inc
cmpsb
movsl
adc
cmp
inc
loop
scas
into
mov
jg
xchg
dec
test
sub
mov
cmp
inc
mov
je
sbb
fsubrs
dec
and
jecxz
std
rcl
push
enter
jne
inc
cmp
shlb
clc
mov
popa
mov
outsl
cmpsl
xchg
addr16
daa
into
fs
push
xor
or
xor
stos
movsb
pop
mov
sarl
cmp
inc
mov
xor
or
dec
or
dec
mov
sub
inc
outsb
popa
int
addr16
stos
sbb
shll
addr16
cli
iret
fsubrl
fistps
and
cltd
sbbb
mov
cltd
jno
fbld
mov
xor
aaa
shlb
aas
dec
inc
icebp
push
mov
mov
jno
push
aam
int
lahf
clc
cmc
pop
adc
les
lcall
pushf
sahf
hlt
scas
push
fisttpl
and
sub
dec
dec
mov
inc
dec
movsb
mov
inc
sub
aas
and
aad
mov
push
or
subb
es
fnstsw
and
and
pop
bound
or
into
sub
inc
outsb
in
pop
or
cmpl
enter
pop
dec
loope
jae
test
xor
or
mov
out
xchg
call
cmpsl
ret
lods
push
int3
cwtl
loop
andl
add
xor
mov
xlat
outsb
in
xor
aaa
icebp
lret
lcall
sub
and
fdivs
add
dec
adcb
mov
ret
frstor
loopne,pt
add
mov
mov
add
add
jb
jmp
lret
pop
sub
dec
jp
negb
cmp
jno
mov
dec
leave
dec
xor
jno
adc
aas
lcall
mov
data16
dec
jns
push
adc
sub
lahf
add
mov
xchg
es
aaa
divl
cmpsb
jno
push
outsb
in
loopne
popf
mov
mov
add
out
icebp
xchg
push
inc
xor
and
or
call
push
and
das
sub
neg
add
out
js,pt
lea
sub
push
cmp
lods
sub
mov
push
in
push
sbb
bound
pushf
or
into
mov
and
pop
ret
cmpsl
pop
out
mov
imul
ljmp
pop
cmpsb
std
lret
scas
mov
cli
sbb
lock
mov
fcmovne
mov
ficompl
pop
sub
pop
push
fbld
dec
mov
jg
in
aad
mov
popf
add
ret
lock
roll
cmp
adc
xor
mov
mov
mov
and
dec
out
inc
enter
adc
data16
lock
add
clc
xor
xchg
jl
push
dec
in
test
push
xchg
xchg
sti
scas
in
sub
std
jns
mov
adc
ja
das
add
mov
push
dec
cmpsl
mov
push
cmp
shl
outsl
arpl
push
sahf
scas
xchg
push
ljmp
sbb
jge
gs
xchg
xchg
jmp
std
jbe
cmc
xchg
inc
call
sub
cmp
punpckhwd
add
popa
pop
aad
aaa
sub
cmpsb
int3
out
cmc
into
xchg
in
scas
cmpb
mov
mov
sbb
jmp
mov
fstpl
pop
xchg
push
imul
scas
push
int3
ret
outsb
cmp
sbb
cmp
pop
xor
sub
inc
add
cmc
lock
jne
or
repz
add
imul
stc
cld
in
cmp
lret
push
jle
jae
in
pop
les
sbb
aas
inc
les
stc
das
pop
or
adc
gs
jge
js
cmp
push
mov
sub
add
push
inc
lds
sub
add
ja
mov
insl
xchg
cltd
jl
mov
pop
add
lret
sub
mov
in
mov
mov
xchg
mov
jge
lods
gs
in
out
sub
sbb
pusha
mov
cs
ss
je
out
sub
jecxz
mov
in
testb
daa
cmp
shrb
lret
mov
mov
xlat
out
mov
ja
xlat
imul
out
insb
sbb
mov
adc
cmpl
push
push
mov
stc
push
lds
imul
push
cmp
imul
out
jne
mov
insb
pop
adc
shrb
test
int3
xor
test
pop
and
fdivs
iret
fstpt
shlb
out
pop
or
jle
sbb
data16
or
push
rol
scas
mov
mov
jbe
jmp
push
shll
gs
xchg
popf
enter
gs
scas
ss
pop
jo
and
sbb
imul
fistps
xlat
jne
outsb
or
cmc
or
pop
or
inc
xchg
and
xchg
cmpsl
jo
push
rcll
dec
vmovupd
or
rol
or
jb
shl
add
mov
sahf
subl
jmp
sahf
add
movsl
mov
lret
adc
xchg
hlt
data16
dec
mov
mov
divl
bnd
push
cmp
sbb
jg
xchg
repz
pop
fbstp
mov
inc
cwtl
cmp
test
out
mov
mov
and
add
imul
movsb
adc
mov
and
xor
push
stos
in
jp
enter
test
or
idivl
push
mov
insb
rcr
sub
push
pop
xor
fdivrp
in
lock
test
cltd
pop
sub
xor
mov
popf
mov
lret
dec
and
enter
stc
mov
cmc
sub
lret
and
rclb
inc
inc
rcrb
pcmpgtw
out
cmpsb
rcl
dec
mov
inc
addr16
rcrb
add
aad
and
movsb
jae
dec
jecxz
lahf
not
aas
iret
lea
pop
daa
sub
fmul
jno
inc
adc
xor
movsl
pop
out
out
xchg
sub
mov
mov
lds
xor
sbb
inc
gs
sbb
dec
cmp
lcall
or
pop
pop
test
outsb
scas
add
pop
add
mov
xchg
cld
insb
ja
mov
xchg
leave
dec
or
mov
dec
rolb
cmpsl
sub
cmpsb
call
out
pushf
imul
aaa
addr16
xor
lea
or
cs
loope
out
cmpsb
jl
xor
mov
std
popl
das
imul
cmpsl
push
jno,pn
xchg
jle
cli
ds
inc
faddl
fnstcw
pop
sub
or
js
dec
ja
inc
sub
aad
jno
sbb
push
mov
shll
xor
sbb
movsb
clc
inc
callw
fs
fs
jnp
lock
sub
insl
cmp
stos
pop
pop
pop
sbb
sbb
adc
stos
insl
sbb
inc
ret
in
or
jmp
add
imul
insb
fsubrs
sbbb
out
dec
addr16
ficompl
lahf
jo
sti
add
pusha
pop
xlat
and
bound
push
frstor
nop
lds
sti
pop
dec
loopne
shlb
lods
mov
rep
stc
xchg
push
lret
out
movsb
int
aam
stc
sub
daa
mov
repnz
adcl
rsqrtps
cmp
xlat
or
sbb
test
push
adc
orl
push
cld
and
xchg
rep
shl
stos
pop
in
xchg
xor
mov
int3
fxch
int
sbb
mov
jae
rcl
or
dec
adc
clc
push
mov
lock
imul
rolb
es
testb
pop
jmp
cs
cmpsb
ljmp
pop
xor
xor
popf
int
or
out
jmp
popf
or
jns
jle
add
addb
test
xor
push
or
arpl
push
clc
dec
scas
mov
sti
pop
test
cmp
loope
lods
sar
xor
mov
jle
lcall
mov
xor
dec
pop
ret
mov
outsl
insb
xor
sar
and
mul
push
orl
outsb
mov
jae
sahf
push
in
rcll
lret
pop
mov
mov
mov
scas
fdivrl
call
pushf
jo
adc
pop
sub
adc
dec
js
aas
ja
jo
push
ficoms
mov
inc
aam
xorb
cli
iret
outsb
fstpl
mov
mov
pop
sbbl
mov
mov
xchg
cmp
pop
rcrl
fsts
repz
les
dec
in
lret
and
outsl
inc
inc
push
push
addl
xorb
ja
movsl
in
mov
and
adc
mov
adc
cltd
outsb
ret
cmp
les
dec
icebp
leave
sbb
fs
adc
and
or
es
aas
mul
mov
xchg
lret
fmull
jmp
and
iret
or
push
stos
push
aad
das
push
repnz
mov
lcall
cmpsb
test
add
lahf
and
out
scas
pop
cli
cmpsb
xor
stc
das
jb
bound
cmp
lods
inc
push
in
xchg
jge
rorb
add
cmp
aad
add
and
iret
cli
in
push
sub
jecxz
addb
xor
pusha
jns
and
sbb
dec
xorb
aad
adc
push
jl
push
jb
xorl
int
add
cli
and
xchg
push
jne
push
mov
data16
adc
adc
loop
mov
rcrl
pop
dec
dec
jns
aas
repz
xlat
adc
das
mov
dec
pop
push
push
sub
stos
je
or
adc
sbb
pushf
lahf
cmp
js
push
sbb
push
mov
out
movl
pop
fs
push
add
in
nop
push
std
mov
orl
stos
rclb
jl
incl
inc
mov
mov
test
cmp
sub
xchg
rcrl
cmp
mov
or
push
or
popf
and
and
test
jmp
jle
loope
pop
fldenv
and
jns
ret
fmul
or
jg
xchg
nop
imul
cmp
fiaddl
cmp
cld
or
shll
jbe
inc
aam
xchg
xchg
out
loope
and
cmp
sub
gs
out
rcl
mov
addr16
repnz
inc
push
inc
mov
int
and
push
cmp
adc
cmpsb
sbb
enter
jmp
mov
cmp
sbbl
stos
dec
pusha
jmp
push
lods
sbb
mov
les
mov
mov
loopne
cwtl
add
mov
stos
or
jl
mov
xor
pop
add
adcb
fbld
fiaddl
mov
mov
std
ljmp
mov
cli
jp
fcmovne
jg
clc
pop
push
dec
inc
fistpl
push
fimuls
push
cmp
loop
and
clc
and
push
ljmp
sbb
mov
ror
xchg
cltd
cmp
cld
sub
imul
jbe
rolb
incb
jecxz
arpl
pop
lahf
mov
icebp
lcall
xorb
test
insb
dec
pop
addb
xor
out
jo
cmp
popf
fs
jle
inc
mov
add
adc
jl
adc
xchg
xchg
aas
xor
and
loop
aaa
pop
xor
or
lds
rcrb
adc
xchg
mov
fnsetpm(287
sbb
imul
cs
fs
pop
aas
aas
insb
xchg
dec
rolb
adc
in
sbb
pop
insl
orl
ret
or
sar
jecxz
sbb
sbb
mov
ja
push
in
shlb
sub
cltd
sbb
hlt
ret
push
and
in
adc
push
stos
mov
dec
aas
sbb
jns
movsl
in
rolb
sub
xchg
das
jmp
or
fisubl
in
out
mov
inc
iret
loop
int3
push
shll
ljmp
and
into
push
aad
stos
fnstsw
xlat
jns
push
jne
add
mov
out
xor
mov
and
jne
ds
ljmp
add
cmc
adc
cmp
pop
mov
dec
pop
test
lret
mov
das
enter
outsl
push
sbb
sub
outsb
rcrb
dec
ficomps
mov
jmp
lods
jmp
lahf
je
in
fdivl
pop
sbb
out
mov
push
jno
cmc
pop
mov
dec
add
in
mov
jne
xchg
sti
std
aaa
jno
insb
mov
or
sub
dec
mov
adc
add
pusha
fwait
lahf
add
pop
and
adc
mov
fdivrs
repz
loope
in
jl
fsubrs
push
push
cli
dec
mov
rcll
pop
fdiv
pop
mov
sahf
jg
sub
ss
jo
sub
mov
out
mov
out
ljmp
call
inc
lcall
insb
add
mov
fwait
stc
dec
xor
lock
mov
sub
xchg
aas
aad
pop
frstor
jo
hlt
popl
push
jl
or
add
inc
enter
js
call
pop
ss
push
fucomip
rcrb
dec
das
xor
xor
and
add
mov
xchg
lods
addl
out
enter
insb
jno
mull
xchg
data16
leave
je
dec
dec
mov
xchg
adc
arpl
xor
dec
mov
xchg
lock
lret
add
cmp
pushf
pop
push
into
push
push
aam
cli
mov
lret
xchg
stos
es
fwait
shll
outsb
rcr
dec
pushf
ret
cmpsb
jbe
jge
les
dec
scas
popf
mov
out
aad
fsubr
xchg
xchg
add
jmp
adc
mov
fcmovnu
test
push
outsb
xchg
push
lds
out
andl
xchg
xor
mov
xor
icebp
push
aam
and
loopne
push
sbb
xchg
iret
and
int3
xchg
jb
repz
push
inc
test
inc
mov
xchg
in
fbld
sti
ds
insl
jne
fwait
mov
push
into
xor
outsl
decl
add
pop
cs
setg
push
cmpb
push
mov
jp
xchg
and
inc
ja
fiadds
in
push
outsb
mov
jne
aas
xor
mov
push
loopne
stos
leave
mov
in
je
dec
imul
icebp
push
adc
loope
jecxz
xchg
fisubrl
xor
push
fsub
sbb
mov
push
cld
cwtl
fwait
negl
loop
xchg
mov
push
jle
test
cmp
stc
pop
ss
xchg
push
cmpsb
jl
repnz
cwtl
push
xchg
push
xor
jno
roll
xor
add
stc
push
es
fnstsw
decl
push
dec
ja
mov
and
xchg
notb
cmp
push
jae
lret
mov
jnp
sub
jno
imul
imul
push
and
insb
add
sbb
push
mov
jns
mov
push
leave
xor
sbb
mov
lret
js
cmp
mov
cld
mov
push
int
fbstp
inc
fdivl
clc
cmpsl
cmp
in
mov
xor
cwtl
fbstp
cmpsl
cmpsl
lcall
imul
and
or
fdivr
mov
pop
loop
imul
adc
adc
shl
cli
outsl
movsl
lcall
sub
push
cmp
inc
push
aam
jg
loopne
out
in
push
orl
xchg
push
cmp
adc
mov
push
ret
repnz
clc
out
mov
adc
jbe
popa
cmp
ljmp
or
inc
shl
and
movl
mov
cld
cli
shl
cwtl
addr16
clc
pop
hlt
and
lods
mov
in
pop
arpl
mov
or
test
cmp
clc
and
mov
mov
in
xor
xchg
xchg
mov
adcb
subl
sub
mov
jo
xlat
jae
arpl
ror
rorb
adcl
rcrb
iret
xor
sbb
aam
js
mov
jle
mov
sub
cmpsl
stc
mov
cli
jmp
mov
adc
mov
inc
mov
loope
pop
xorl
aaa
cld
pop
dec
mov
sub
inc
stos
lods
sub
stos
cmp
mov
das
cmovne
stc
xchg
jbe
std
fistpll
call
repz
imul
out
xchg
push
jmp
inc
js
push
lock
in
ja
pop
mov
adc
ret
and
int
insl
sbbb
xorb
lret
idivl
cs
adc
dec
mov
loopne
not
jne
popa
adcb
or
clc
repz
and
mov
rclb
sbb
mov
outsb
dec
inc
jg
aam
lret
loop
push
push
cmp
jp
adc
inc
mov
jne
xor
sbb
repz
jno
inc
insl
cmc
in
ret
ds
fdivrl
incb
out
pusha
mov
dec
fmull
scas
adc
in
jo
mov
xorb
incl
jmp
inc
adc
movsb
movsb
add
cld
fildll
mov
popf
in
out
rclb
jnp
push
stc
data16
pop
sbb
ljmp
movsb
in
aad
lock
hlt
or
sbb
je
add
out
pop
fmuls
push
popa
jne
cwtl
push
ds
and
inc
and
bound
js
dec
xor
xlat
cltd
cmp
out
inc
push
mov
lods
scas
jp
cmp
leave
mov
and
rclb
aam
mov
xchg
outsb
jbe
inc
mov
xchg
xchg
ss
push
sub
lret
jle
push
lret
mov
mov
lea
lock
mov
in
mov
fstp
or
out
jl
incb
pop
mov
dec
xor
cmp
cwtl
xchg
mov
xorl
add
std
clc
imul
pop
add
sub
mov
sub
loopne
loopew
xor
cld
jno
pushf
or
jmp
scas
pop
scas
mov
hlt
rcll
or
loopne
lods
lret
inc
mov
addr16
cmp
subb
cmp
fmull
jbe
and
adc
cmp
stc
fwait
sar
pop
scas
xor
xor
cmp
inc
xor
faddl
sbb
mov
push
enter
cmp
shrb
sbb
inc
cmp
cmp
jle
xor
sub
mov
out
jecxz
inc
push
sbb
dec
std
out
daa
mov
mov
mov
sub
cmc
icebp
out
dec
loope
push
xchg
push
push
out
into
fucomip
stos
out
out
aam
icebp
push
mov
cmpb
pushf
int
sub
int
pcmpeqd
lock
push
xlat
adc
add
icebp
lods
cld
rcrb
scas
fcomip
and
adcb
stc
negb
fcompl
cs
sbb
or
jae
pop
push
inc
inc
lods
lahf
xchg
push
xchg
pop
repz
jne
push
idivb
mov
test
pusha
out
stos
lods
pop
call
loop
test
loop
lock
std
jle
inc
push
jecxz
cmp
adc
fldcw
jne
out
fmull
or
push
gs
mov
pop
sarb
arpl
mov
mov
lea
hlt
mov
pop
in
cld
popf
hlt
pop
inc
jecxz
sbb
sbb
fs
dec
call
movsl
sbb
xchg
mov
les
in
xchg
jmp
push
mov
ret
flds
and
dec
scas
mov
sti
ds
sub
inc
popf
call
xchg
sti
xor
stos
pop
dec
inc
ffree
xlat
cs
insl
leave
mov
mov
adc
inc
je
out
aaa
outsb
test
cltd
adc
adc
mov
sbb
sbb
mov
into
sarl
test
loopne
xor
aam
ljmp
jne
jno
sub
fs
jnp
mov
pop
jg
jecxz
sbb
jl
out
daa
cmc
jbe
pop
nop
mov
cmpl
xor
mov
scas
fdiv
sub
cmpsb
or
outsb
pop
insb
outsb
loop
jo
inc
aad
push
lea
push
fwait
xor
push
lea
mov
stos
mov
aam
cmpsb
bnd
lcall
or
push
add
addl
icebp
jecxz
ret
jnp
mov
sub
scas
ret
push
leave
xchg
sbb
and
out
aas
in
adc
sbb
in
mov
add
cmpsb
stc
fistpl
push
mov
pop
mov
aaa
xor
nop
push
add
xchg
lret
sub
inc
pop
pop
test
inc
dec
lcall
ss
arpl
pop
xchg
je
scas
shrl
xor
mov
push
fcompl
adc
fidivs
stc
lret
xchg
or
in
xor
jnp
loopne
mov
in
daa
fcmovu
out
clc
scas
sub
mov
out
mov
scas
or
inc
dec
and
iret
jo
sbb
xor
xchg
mulb
jb
out
xor
addr16
mov
sub
nop
stos
adc
leave
pushf
test
inc
and
adc
add
inc
push
enter
jecxz
dec
and
repz
fsincos
insb
push
stos
movsb
int
shll
adc
lea
scas
sub
pop
je
lock
int3
imul
mov
and
jns,pn
cmp
repnz
mov
clc
out
idivl
push
ret
pop
leave
out
gs
fwait
nop
insb
loop
cmp
aam
or
fcoml
push
or
orb
and
mov
outsl
rorl
push
stos
mov
inc
hlt
jo
sub
rcl
push
outsb
mov
adc
scas
std
popf
mov
cs
and
push
popa
push
in
movsb
notl
sbb
inc
rcrb
xorb
xchg
rorb
sbbl
push
mov
aad
enter
leave
push
cmp
out
negb
cmpl
fucomi
cwtl
cwtl
dec
iret
jno
lcall
aaa
ja
scas
out
inc
je
xor
pushf
jg
and
pop
inc
sub
or
out
jb
add
and
testl
loopne
mov
in
cltd
pop
rcr
out
les
mov
push
outsb
xchg
push
sub
cwtl
mov
or
pop
imul
add
adc
arpl
jns
pop
ljmp
das
xor
ret
hlt
pop
cltd
cltd
sbb
fs
test
pop
xchg
cmp
fcoms
sbb
jmp
jl
dec
pop
jmp
push
pop
xor
mov
mov
push
adc
jl
mov
xchg
dec
jo
xchg
pop
hlt
fcmovnbe
cmp
in
mov
punpcklwd
in
cmpsb
and
fcoms
inc
add
mov
test
aam
ljmp
sub
push
aaa
cmpl
mov
push
aam
xchg
inc
inc
pushf
jecxz
pop
jo
fcmovnbe
pop
add
xor
sbb
and
std
pop
mov
pop
test
aas
sub
mov
fnstsw
mov
dec
and
cmpsb
aas
ss
sub
outsl
jmp
scas
cli
or
insl
test
aam
mov
jo
mov
and
xor
push
pop
jo
push
nop
sub
cwtl
cli
sub
and
pop
in
out
in
sub
cmp
mov
insb
mov
dec
subb
mov
mov
jle
mov
lret
out
xchg
test
iret
pop
sbb
inc
loop
out
push
pop
repnz
pop
loope
jno
test
insb
fs
cmp
sub
repz
faddl
mov
test
aad
stc
fcomi
aaa
dec
mov
cli
stos
mov
sub
scas
mov
pusha
and
cmp
push
pop
jmp
outsl
cmpsl
cwtl
cmp
mov
xchg
adcb
mov
sub
push
popf
mov
jnp
inc
push
loop
repnz
and
jne
jno
orb
loop
pop
out
int
push
data16
add
dec
pushl
jp
inc
cmp
cmp
sbb
pop
mov
adc
fildl
or
mull
cmp
or
push
adc
movsb
inc
xor
sub
pop
ficoms
sub
stc
or
nop
bnd
push
dec
stos
add
fsts
clc
push
add
lods
or
mov
movsl
dec
jg
insl
scas
int
adc
in
xchg
lea
cmp
aaa
hlt
les
hlt
xchg
les
mov
popf
leave
mov
mov
pop
pushf
ljmp
negl
dec
pop
ljmp
pop
ret
xchg
dec
in
cli
lahf
push
mov
xchg
xchg
mov
add
cmpsl
sub
aaa
fcmovnu
adc
push
jmp
cld
push
in
inc
arpl
cwtl
fsubrl
arpl
pop
or
daa
mov
sti
dec
jne
subb
adc
lock
mov
aaa
jns
in
inc
push
shll
jbe
jnp
ds
sub
repz
or
gs
adc
cmp
cmp
sub
fwait
or
jb
repnz
popf
cmp
js
sub
ljmp
dec
call
adc
mov
insb
and
std
popa
test
test
or
andb
push
and
sbbb
or
clc
jge
ss
xor
add
or
sub
jne
pop
fnstcw
add
xchg
shrb
sbb
mov
jns
or
cmpsb
fwait
sbb
out
loopne
lock
push
ficoms
ret
mov
xchg
inc
pop
sti
ss
mov
cmp
subb
adc
mov
mov
outsl
js
out
mov
pop
test
jg
out
xchg
xchg
sub
fistps
dec
push
das
stos
xchg
or
inc
rolb
fwait
dec
pop
adc
call
mov
fnstcw
mov
ret
sub
lds
testl
jmp
sub
cmovns
loop
cmpsb
in
in
mov
ljmp
jo
cld
xchg
mov
pop
popa
inc
sub
and
int
shlb
sub
sub
mov
ss
fbld
int3
inc
push
in
dec
mov
mov
add
arpl
cmp
mov
cmc
cmp
mov
mov
add
jmp
pop
stc
faddl
pop
mov
lahf
outsb
cmp
loop
enter
mov
imul
pop
adc
mull
or
sbb
out
ja
mov
cmpl
sbb
or
or
sub
outsb
push
lcall
add
adc
test
jo
rep
inc
add
push
xor
sub
icebp
scas
in
push
shll
test
sbb
mov
fsubrs
sub
shll
fistl
movsl
aaa
pop
pop
mov
mov
push
fucomi
inc
xorb
dec
sub
xchg
pop
pop
outsl
dec
idivl
add
rorl
cltd
ss
mov
gs
dec
xor
rorl
pop
pushf
jnp
pop
mov
popa
and
repz
add
dec
shlb
out
mov
in
xchg
pop
pop
xor
pop
bound
std
aas
divl
imul
bound
aaa
mov
xor
xor
loopne
arpl
xor
lcall
xlat
mov
push
call
mov
mov
mov
pop
sbb
mov
das
leave
lahf
jle
in
pop
jns
sbb
aad
dec
mov
or
add
enter
adc
mov
mov
fildl
inc
aaa
jae
xchg
loopne
mov
and
adcl
jns
iret
xor
ljmp
das
xchg
std
ret
mov
daa
sub
add
mov
bts
adc
lret
pop
mov
or
ja
sub
mov
mov
lcall
insb
lds
mov
push
pop
roll
mov
mov
fcomp
push
insb
movsb
inc
push
fldl
fs
fidivs
jns
bound
lea
sahf
mov
jbe
mov
cmpsb
jns
shlb
or
in
cwtl
jnp
xor
test
out
jmp
xor
mov
jo
pop
mov
gs
int3
xlat
enter
les
dec
imul
push
test
xchg
inc
out
mov
pop
cmp
out
xchg
add
cmp
shlb
cmp
dec
jg
jne
mov
out
outsl
insb
xor
out
fldcw
and
xor
sub
outsb
icebp
addps
xchg
xchg
call
sbb
popa
inc
push
insl
cwtl
rol
add
add
xor
insb
fcomp
repnz
cmp
js
imul
sbb
sub
jecxz
fimuls
fs
nop
lcall
jmp
mov
and
and
pop
in
sub
icebp
jl
aas
movsl
stos
stos
testb
repnz
ss
je
inc
xchg
mov
ror
push
push
cwtl
repz
dec
stc
adc
into
mov
nop
xor
inc
pop
ret
cmc
dec
fldt
sbb
mov
dec
add
cli
mov
cs
repz
xor
shll
dec
ret
ficomps
push
jmp
add
push
mov
cmpsl
inc
ret
pop
stos
xchg
fstps
sub
es
orl
lods
pop
pop
push
inc
in
out
mov
jmp
out
pop
outsb
pop
scas
movsl
out
xor
and
and
outsb
jne
mov
mov
mov
sbb
jge,pn
jg
or
and
shrb
cmp
ss
dec
jne
ss
lock
mov
dec
call
sub
addr16
mov
mov
outsb
xor
sub
push
pop
les
movsb
gs
pop
add
std
sahf
fwait
in
pop
add
mov
push
and
push
xchg
aad
mov
adc
jnp
cld
out
lret
popa
adc
jecxz
pop
in
mov
rcl
cmpsb
mov
enter
mov
test
inc
bound
arpl
xchg
cmc
loop
iret
es
push
leave
jno
inc
repz
xlat
imul
add
std
jb
jb
xchg
lods
fildl
sub
pop
stos
add
orb
pop
shrb
sub
ss
xchg
or
mov
dec
add
adc
leave
jne
jb
push
inc
test
daa
in
cmc
in
or
pop
lahf
push
mov
test
xchg
pop
xor
inc
pop
in
mov
ret
out
int3
out
rcrb
sub
mov
lds
xchg
les
sub
cmp
icebp
and
into
xchg
in
in
aaa
adc
lahf
jns
adc
cmpl
ficomps
negb
movsl
fcomps
sbb
in
das
jnp
push
sarb
push
xor
sub
adc
les
movsl
cmpsb
mov
inc
adc
dec
add
cmpsb
xor
aad
test
mulb
fwait
ds
iret
lods
ret
or
icebp
mov
mov
ret
pop
gs
call
arpl
fisttpll
js
xor
arpl
cmc
int
xchg
push
movsb
xor
jns
mov
jecxz
js
sub
scas
daa
xor
sbbb
hlt
sarb
sub
lds
pop
mov
jbe
pop
fstl
lcall
xchg
test
sti
and
and
push
jmp
add
or
and
xchg
cltd
xchg
sbb
movsl
fbstp
addr16
mov
aas
sub
sub
hlt
inc
inc
lea
pushf
aam
jle
iret
fwait
mov
push
add
and
aaa
and
test
and
test
inc
sbb
loopne
pop
cmp
lret
or
inc
ret
dec
in
or
xor
mov
xchg
mov
xchg
mov
jle
pop
aad
scas
lods
sahf
mov
jl
ljmp
push
jb
sbb
notl
ret
cltd
pop
inc
js
shrl
ja
stc
adc
jo
mov
sbb
lock
or
es
sbb
test
movsl
insl
in
imul
dec
pop
test
mov
ss
in
mov
sub
mov
jge
hlt
jne
mov
fdivrl
in
inc
out
in
fisubs
cmp
cmp
pusha
lods
in
cmp
sub
cli
or
pop
ret
pop
mov
lea
inc
sbb
cwtl
inc
add
and
fdivs
push
cli
mov
repnz
pop
ljmp
pop
into
inc
dec
inc
jle
cmp
or
or
subl
mov
and
pop
cmp
xchg
inc
negl
dec
mov
es
in
test
stos
cmc
fildll
sub
jns
mov
fildll
mov
pop
xor
pop
scas
sbb
popf
dec
mov
cmp
dec
fs
inc
adc
loope
xchg
ucomiss
into
pop
pop
cmc
imull
lea
push
js
stc
sahf
xchg
add
cli
sbb
xchg
insb
shlb
shll
xchg
mov
push
fstp
pop
test
fisttpl
cs
in
add
cmpl
ss
push
dec
dec
lds
jl
addr16
shrl
ret
int
mov
movsl
pop
test
dec
ficompl
jb
pop
cmp
push
loopne
aaa
jbe
js
or
push
xor
lahf
mull
mov
push
mov
lea
jns
ds
xchg
in
mov
xchg
sub
pop
pushf
mov
xchg
inc
jbe
aas
pusha
jmp
dec
aam
inc
xchg
adc
cld
sahf
adc
outsb
aas
ja
cld
and
inc
hlt
xor
int3
nop
dec
fisttpll
jae
ret
into
push
pop
mov
loop
cmp
xchg
sbbl
outsb
xchg
and
and
mov
mov
pop
daa
hlt
pop
pop
jg
or
or
lods
fwait
mov
pop
aad
sub
enter
orl
inc
sbb
push
dec
and
mov
divb
arpl
push
xor
jno
gs
sub
push
mov
xchg
shll
pop
and
outsb
rol
or
clc
fisubrs
mov
inc
dec
insb
xchg
arpl
mov
sbbb
push
shlb
jns
pop
xor
movq
aas
cli
test
push
enter
clc
mov
dec
gs
and
push
scas
dec
sub
cld
add
popf
xchg
adc
or
mov
sub
aad
insb
cmp
in
call
scas
shrb
cmp
andl
xor
ret
mov
push
fnstenv
ror
addr16
cmpsb
mov
insb
and
pusha
jmp
ret
push
adc
adc
ret
outsb
jnp
repz
mov
repz
fsubrs
scas
add
lods
in
mov
in
xchg
movsb
pop
mov
pusha
test
incl
insl
push
jmp
rcll
outsl
in
fldenv
mov
dec
inc
and
mov
ficomps
js
dec
jbe
or
jge
in
xchg
and
xchg
jge
cmpsl
cmp
push
xor
dec
sbb
pusha
xor
jp
add
add
loope
cltd
or
lods
insl
popf
loopne
pop
xchg
push
xchg
jnp
inc
movsl
scas
jo
iret
xchg
xchg
push
mov
js
push
scas
jne
out
int3
dec
dec
shlb
sbbb
pop
or
lret
cmp
jg
jp
fists
add
xchg
or
push
sub
iret
dec
aad
xor
sub
adc
pusha
or
lret
mov
stos
test
or
fwait
stos
cmpsb
mov
sbb
push
lret
mov
rclb
inc
or
test
out
jns
sub
cli
cld
xor
lods
ret
fistpl
mov
pop
add
jmp
jle
push
push
orl
or
insb
ret
cld
push
sub
loopne
data16
loope
xlat
outsl
test
popa
lock
int
mov
pop
add
icebp
lods
and
ljmp
push
and
cld
int
and
jnp
push
addr16
in
push
iret
xchg
imul
movhps
aam
ror
and
add
std
out
popa
fidivl
push
arpl
or
out
inc
mov
lret
xchg
or
jo
xchg
aad
outsl
arpl
int
loope
push
mov
adc
leave
sbb
mov
mov
fs
dec
pop
and
ljmp
call
xchg
push
and
cmc
lea
loope
iret
inc
stos
xor
pop
and
lcall
sbb
fstl
mov
add
sub
dec
test
pop
jns
jb
movsb
fcom
fisttps
mov
mov
jp
cmpsl
sbb
adc
mov
loop
or
popf
daa
cmc
lods
mov
test
xor
lods
loope
pop
mov
add
and
in
cli
andb
sub
rcrb
xor
mov
aaa
adc
pop
add
jl
rol
inc
lods
mov
into
xor
or
jno
and
outsl
mov
jno
iret
icebp
js
inc
sub
jle
or
jmp
popf
lret
xchg
out
loopne
pop
push
sub
int3
sub
in
add
fs
jno
mov
bound
mov
inc
push
pop
jnp
dec
mov
or
es
jg,pn
pusha
loopne
push
jge
pop
iret
push
scas
mov
cmpsl
jno
jns
mov
mov
divb
jbe
mov
adc
out
les
out
or
inc
adc
pop
xlat
inc
inc
rcrl
and
nop
notl
insl
cltd
adc
aad
mov
xchg
sbb
push
fsubrl
outsb
das
shlb
add
in
cmpsl
hlt
lcall
and
lods
aas
rcl
mov
and
mov
aam
sbb
andl
pop
scas
lock
mov
xchg
int3
jge
movsb
scas
aad
xchg
xchg
not
mov
mov
or
fsubl
outsb
jmp
stc
pop
arpl
add
xchg
xor
adc
sub
sbb
sub
jl
sbb
ret
lret
pop
mov
push
lret
xor
imul
pusha
les
insb
add
lret
ja
sbb
jo
test
and
aad
daa
pop
mov
cwtl
iret
dec
jle
rcll
and
cmc
call
adc
and
repnz
lcall
std
sub
pop
xor
push
es
outsb
or
sbb
mov
cmp
mov
sbb
inc
adc
jl
out
pop
pop
cld
out
jne
sti
xchg
in
out
loop
pusha
or
nop
shlb
roll
dec
cs
call
sub
push
js
mov
das
sub
bound
push
cmp
sub
dec
stos
adc
add
xchg
iret
dec
push
in
les
loop
fmuls
out
xchg
inc
pop
sbb
call
fidivrl
movsb
aad
or
jge
lods
mov
xchg
xchg
push
iret
rcrb
sti
fsts
adc
mov
ret
inc
sbb
into
jb
fists
cmpsb
push
cmp
sub
jnp
dec
andb
sub
cmc
xchg
insb
jne
std
mov
jns
sahf
sbb
xor
jno
xchg
mov
arpl
push
add
jecxz
push
cmp
and
std
rcll
dec
pop
arpl
fs
outsl
push
ds
fidivrs
lods
adc
sub
xchg
out
push
jg
clc
daa
inc
push
aaa
pop
xor
sub
ss
lds
mov
push
or
mov
cmp
mov
loop
pushf
fidivl
repz
ret
sti
fiaddl
insb
mov
arpl
mov
outsl
mov
aam
add
xor
aas
jge
fwait
inc
inc
and
push
and
stc
bound
and
jecxz
mov
xor
in
fcoms
sub
int
out
pop
jecxz
xor
xchg
xor
sub
test
pop
mov
rclb
iret
and
mov
jo
xchg
or
test
adc
in
mov
sub
pmaxub
dec
out
adc
icebp
or
or
xchg
je
stos
dec
lea
push
rol
sbb
pop
clc
mov
fists
fists
pop
xchg
jge
enter
fcomip
xchg
decl
jmp
sub
mov
sub
cs
outsb
mov
push
dec
xchg
mov
fcmovnbe
push
cli
push
sub
pusha
add
dec
push
or
lahf
pop
orb
cmpsb
adc
pop
cmp
push
out
mov
test
ds
push
imul
icebp
xor
std
sbb
shl
std
jle
sub
popf
push
pop
sub
pop
xor
aad
addr16
push
pop
shlb
pop
mov
popa
fcomps
pop
cld
shrb
loopne
bound
fisttps
aas
mov
xor
xlat
icebp
cmp
cmp
mov
jne
in
pop
or
test
jb
gs
pop
inc
fcmovbe
xchg
clc
rorb
sub
jnp
aad
cli
mov
sbb
push
sub
or
aas
inc
ja
lock
ret
mov
mov
faddl
add
repnz
sub
ds
aad
mov
lcall
jl
cmpl
mov
sub
test
loop
enter
push
mov
sub
fucomip
jb
adc
mov
sub
adc
or
sub
mov
pop
xchg
mov
arpl
gs
and
xor
inc
repnz
repz
insl
inc
push
js
xlat
fwait
xchg
xor
and
cmpsl
push
daa
sbb
and
dec
in
das
rcll
mov
sbbl
inc
or
jo
jmp
push
shlb
cmp
stc
add
mov
cmpsb
jp
inc
mov
inc
push
out
mov
fmuls
adc
gs
cmp
rorb
cli
ja
jbe
add
sbb
pop
cmpsl
xor
negl
push
pop
fadd
cmp
bound
insl
push
movsb
jmp
or
dec
push
mov
loope
pop
and
mov
sbb
inc
cli
ret
jbe
cmp
inc
jno
jle
cmp
js
add
cmp
into
loope
xchg
lret
icebp
adc
into
inc
hlt
imul
pop
in
dec
pop
in
mov
movsl
loop
test
ret
int3
outsb
hlt
shrl
pop
jp
push
cltd
mov
in
out
inc
ror
xchg
add
mov
les
cmp
test
adc
mov
sarl
pusha
adc
pop
scas
dec
push
imul
mov
pop
je
pushf
fiaddl
mov
daa
mov
push
mov
nop
inc
imul
repnz
inc
pop
stos
repnz
xlat
stos
and
cmp
das
jecxz
pop
mov
lds
mov
xor
mov
das
dec
push
sub
inc
and
push
xchg
mov
leave
test
push
filds
xchg
shrb
push
cmpsb
dec
in
scas
xchg
imul
and
dec
das
pop
sbb
mov
sbb
test
mov
xorl
or
push
cltd
jl
cmp
pop
xor
loopne
mov
insb
loopne
dec
nop
loop
adc
test
in
sbb
mov
cmc
cmc
sub
jecxz
repz
xchg
fisubrs
in
pop
cmpsb
push
out
packssdw
pop
push
test
stos
xorb
in
daa
adc
rorl
rolb
mov
sti
insb
imul
mov
inc
add
mov
mov
xor
dec
cmp
dec
mov
inc
loopne
jecxz
dec
lcall
and
pop
scas
loope
xor
std
js
into
xor
push
daa
and
leave
jae
insl
loopne
pushf
in
bound
inc
mov
test
and
or
mov
cmp
push
cld
add
and
pop
cmp
mov
mov
popa
mov
sbb
cs
dec
sbb
iret
scas
mov
inc
sub
test
inc
scas
lret
or
push
add
jae
les
xor
jb
adc
xor
jno
lock
scas
or
out
and
and
xor
mov
pop
loope
adc
lcall
out
adc
movsb
fmuls
mov
dec
pop
stos
out
call
psrad
push
int
mov
orl
mov
adc
enter
bswap
outsl
aad
jno
or
lahf
repnz
add
popa
mov
sbb
inc
xor
imul
jg
lea
adc
test
mov
hlt
push
inc
movsb
test
lods
cmp
gs
and
cmp
add
lret
daa
pop
mov
sahf
pushw
or
inc
out
dec
xlat
or
aam
xchg
xchg
mov
push
js
test
xlat
lcall
push
and
mov
mov
sahf
sbb
rolb
pop
and
inc
addl
popa
mov
push
clc
imul
lcall
fidivl
lret
adc
adc
in
jecxz
cmpsb
dec
xchg
out
pop
fcom
fsubrs
aam
push
lea
popf
in
lcall
std
mov
in
push
les
std
lret
cmc
cmp
imul
sbb
jnp
xchg
lret
andb
inc
sbb
ret
test
jmp
in
lock
cmp
mov
sti
in
sbb
enter
fcmovb
rcr
mov
inc
movsb
call
pop
mov
imul
movl
push
and
push
scas
mov
testl
xchg
xor
lock
xchg
aaa
jne
out
and
push
pop
insl
jae
rcrl
std
aad
adc
lret
cmpsb
mov
jbe
sub
add
ljmp
shll
enter
scas
rcl
fsubrl
out
mov
filds
cmp
enter
dec
cmc
mov
inc
sahf
inc
clc
dec
test
shll
jnp
aam
es
pushl
and
cmp
out
rorl
push
jne
adc
dec
cmp
hlt
insl
mov
adc
in
es
jmp
dec
jg
and
fwait
imul
shl
leave
push
frstor
xor
mov
insl
or
mov
lods
push
jmp
iret
stos
lahf
mov
or
dec
outsl
mov
in
movsl
repz
adc
dec
icebp
jmp
fnstcw
lds
rcrb
mov
movsb
xchg
xor
sub
lret
out
push
out
popf
xlat
jb
leave
xchg
mov
add
fistpll
adcb
and
pushf
mov
icebp
push
lahf
orb
aas
mov
mov
js
inc
dec
xlat
pop
xchg
pop
out
lock
hlt
sti
ret
mov
out
push
pop
ret
mov
aad
out
and
cmp
mov
dec
sti
mov
clc
adc
pop
jno
lock
idivb
fucomi
pop
rolb
andb
sbb
dec
xor
mov
or
inc
fwait
xchg
ds
pop
mov
cltd
or
jecxz
sub
mov
xchg
sub
sahf
sub
and
insl
push
addr16
je
xor
dec
test
cmp
and
pusha
ja
mov
mov
mov
and
mov
jl
pop
and
push
out
gs
fstps
inc
push
sbb
jo
sarb
adc
xchg
lods
cmc
mov
test
loope
inc
inc
xor
pushf
fsubl
add
push
or
cmp
leave
jp
adc
cmp
sti
aad
into
enter
arpl
adc
cmp
xchg
inc
xlat
dec
loope
loop
movsl
pop
pop
std
or
test
lea
and
fisubrs
mov
sub
sbb
ja
pop
cmpps
xor
jo
mov
out
popa
stos
inc
cmpsl
sti
lea
test
pushf
mov
jl
jg
or
jle
mov
jp
nop
lahf
adc
push
sbb
jecxz
movsb
pushf
sbb
sbb
data16
mov
or
mov
mov
nop
test
mov
xchg
movsl
add
jae
imul
jecxz
mov
in
push
add
fucom
sub
mov
push
xor
mov
jle
cmpsl
das
pop
lcall
jg
add
jnp
scas
push
test
xor
mov
jne
jg
loop
addr16
iret
dec
jns
pop
sbb
xor
in
out
subb
mov
icebp
mov
jge
jl
out
mov
aam
xchg
bnd
sbb
inc
xor
add
push
mov
or
outsl
stos
arpl
xor
dec
add
pop
sub
jmp
les
mov
fprem1
xor
pop
leave
cmpsl
sub
or
and
fs
outsb
decb
jb
mov
adc
stos
inc
pop
inc
mov
xchg
mov
xor
fdivrs
icebp
fnstsw
cmpb
xorl
mov
xor
dec
lock
pop
adc
insl
cmp
sbb
mov
sbb
jle
jb
stos
and
sar
mov
mov
dec
mov
jno
jno
xchg
mov
mov
add
cmp
movsl
pop
test
cmpsl
mov
mov
mov
aaa
lea
mov
adc
mov
je
fsub
or
in
xchg
jmp
in
pop
jno
sbb
and
sti
push
movsb
add
test
ss
movsb
sbb
xor
ljmp
cmp
out
fnstsw
fstp
cwtl
cltd
mov
dec
mov
jg
adc
jb
sub
mov
addr16
lret
push
pushf
pop
mov
xchg
lahf
or
fldt
mull
leave
or
or
jle
dec
mov
js
inc
add
push
add
mov
mov
loop
cmp
adc
adc
idivl
dec
or
scas
push
xchg
movsb
cmp
lret
mov
xchg
repnz
push
imul
sti
call
dec
push
mov
or
test
sub
sti
jo
sahf
and
jns
xor
sbbb
das
minps
mov
ret
repz
pop
popf
cli
sarb
repnz
popa
fsubrl
inc
mov
ljmp
test
stos
movsb
sahf
or
add
out
inc
sbb
pop
loop
inc
inc
aaa
shrl
loop
data16
je
loope
push
gs
adcb
cmpsb
movb
or
xchg
pop
jl
sub
lods
insb
leave
out
ja
dec
add
fdiv
add
sub
mov
scas
sbb
cmp
jnp
sbb
test
xchg
or
arpl
cvtpi2ps
cs
cli
mov
pop
sbb
mov
repz
sbb
mov
or
enter
add
adc
xor
fmull
pop
sub
arpl
sub
jp
and
int3
call
data16
xchg
adc
cld
push
repz
fisttps
xor
and
cmc
sbb
mov
pop
sub
pop
rcrl
jmp
sbb
pop
das
sub
mov
in
les
je
and
aam
movsl
movsl
pop
hlt
les
in
push
push
sub
push
sub
int
jns
mov
adc
mov
pop
cs
loopne
xorps
lea
xor
dec
fmuls
push
std
add
jp
adc
aad
dec
lret
fcoml
daa
jo
mov
xor
out
das
pop
stc
xchg
iret
and
cwtl
mov
pushf
scas
orl
pop
inc
push
adc
sahf
add
ljmp
fisttpll
sbb
mov
jmp
stos
sarl
loope
xorb
lds
lahf
xchg
data16
lahf
sahf
sub
cmpsb
and
out
sbb
pop
jb
inc
push
pop
or
gs
jbe
fcomp
adcb
inc
dec
dec
add
dec
aas
fsts
adc
in
dec
fs
popf
addb
adc
lret
flds
insb
xor
adc
push
fdivs
frstor
lahf
test
cs
mov
pop
push
dec
mov
lock
test
subb
insl
or
sbb
int
fldl
enter
ds
xchg
loop
and
cmc
out
inc
stos
call
xor
loope
std
test
fyl2xp1
inc
inc
test
sbb
clc
xor
adc
add
in
scas
addr16
sbb
rorl
pop
push
push
xchg
cmp
push
sbb
bound
subb
cltd
test
mov
jmp
jecxz
xchg
dec
mov
mov
testl
shll
fcompl
cmpsl
or
mov
xchg
fs
mov
outsl
xorb
ds
je
js
or
bound
xchg
out
inc
and
push
pushf
dec
adcb
fstpl
mov
enter
sub
lcall
subb
push
mov
in
in
loopne
lcall
loop
les
sub
out
sbb
lock
mov
mov
xchg
into
roll
lods
push
xor
sbb
mov
or
push
insl
sub
lea
push
adc
lcall
sub
or
lods
mov
fnsave
ret
stc
loope
mov
mov
arpl
pop
ss
icebp
insl
mov
push
cmp
repnz
insb
sbb
pop
mov
sbb
and
int
cld
fisubs
std
ja
sarl
jmp
ja
ficoms
es
pop
pop
cmp
pop
fsubrs
xor
lods
push
fisubrl
clc
outsb
rorl
shlb
loop
scas
in
xor
sti
mov
mov
jge
test
lret
mov
xchg
call
adc
adc
dec
sub
xchg
xchg
push
lock
cwtl
jb
pusha
xor
aam
adc
mov
or
dec
pusha
add
imul
and
adc
roll
lea
mov
mov
mov
scas
fildll
repnz
insl
dec
jmp
push
std
mull
call
shl
mov
adc
inc
mov
xchg
pop
mov
movsb
pop
add
pop
sbb
je
out
les
sti
fiadds
in
push
mov
shl
loopne
fadds
and
cmp
xchg
jne
cmp
scas
jmp
dec
pop
test
and
in
mov
jge
dec
ret
fsub
cwtl
aas
es
fidivl
movsb
jecxz
push
cwtl
hlt
jno
or
rolb
mov
jge
pushf
mov
and
cmpsb
rcrl
xchg
ja
dec
mov
scas
scas
jae
inc
mov
mov
mov
movsl
pop
lods
rcl
pop
jns
and
outsb
xorl
xor
mov
cmp
adc
dec
shll
mov
dec
lock
out
lea
cmp
add
test
xchg
ret
or
push
daa
add
dec
mov
push
xchg
lahf
push
scas
ja
call
push
jae
inc
sbb
mov
pop
daa
mov
stos
cmp
pop
mov
inc
xor
push
iret
xchg
mov
jns
xor
cmp
outsl
sbb
cli
xor
mov
ficompl
imul
jb
cmp
and
push
jbe
mov
and
imul
and
xor
sub
add
xor
movsb
enter
mov
sub
rorb
sahf
mov
xlat
cmpsb
sbb
pop
push
daa
push
cmp
mov
nop
sbb
xchg
outsb
pop
mov
lods
push
mov
rcl
sub
lods
loope
jl
pusha
dec
out
fcmovne
sub
pop
mov
aas
inc
push
outsb
stos
movsl
hlt
dec
add
push
stos
ja
pop
mov
jo
fdivrl
dec
sahf
pop
shl
out
cmp
cmp
push
push
fmull
xchg
data16
lods
mov
jno
stc
add
movsl
movsb
iret
xchg
sbb
movsl
and
cmc
xchg
data16
mov
sub
fidivrl
rcrb
inc
outsl
pop
roll
mov
dec
sub
inc
dec
sbb
dec
mov
xlat
popa
fstpt
cwtl
mov
sub
fldt
lcall
incl
in
pop
roll
ret
pop
sub
xchg
and
add
mov
dec
xchg
or
lret
test
jmp
mov
mov
jne
pop
testb
xchg
ss
fidivrs
dec
test
out
pop
mov
or
mov
stos
xor
sbb
mov
cmp
ret
popf
aad
aas
sbb
mov
out
sbb
pop
xchg
sub
and
lock
inc
and
popf
or
ficompl
sub
jno
mov
mov
idiv
aam
negl
mov
daa
add
sbb
jl
inc
push
dec
ljmp
sbb
mov
jno
jae
fwait
jmp
and
aad
out
sbb
stos
push
int3
das
mov
ret
sbbl
mov
stc
bound
push
xchg
cmp
hlt
arpl
or
loope
or
sbb
fcoml
ja
and
movsl
mov
shll
push
add
in
pop
daa
negl
push
filds
leave
push
mov
pushl
rolb
jmp
aam
mov
in
pop
and
lcall
jbe
or
push
lods
fstps
in
imulb
ret
adc
and
clc
imul
inc
inc
push
stos
stos
scas
outsb
mov
push
cwtl
or
mov
icebp
fiadds
loopne
mov
push
shl
inc
xor
or
lcall
stc
xorl
std
and
aas
fucomip
cmpsb
daa
stc
mov
clc
jge
in
mov
cmp
loope
xchg
clc
mov
xchg
mov
add
lahf
jo
cltd
pop
test
jle,pt
hlt
cmp
xor
aad
jp
inc
mov
add
mov
push
psubusb
ja
icebp
pop
xorb
pop
rcrl
mov
hlt
jge
xchg
pop
pop
push
jmp
sbb
mov
add
sub
rol
aas
arpl
ljmp
mov
mov
cmp
movsb
fcomip
es
hlt
xor
xchg
mov
or
mov
add
adc
pop
inc
addl
cmpb
mov
or
fildl
test
ds
pop
les
imul
scas
xchg
jne
jnp
push
addl
aaa
adc
xor
mov
fwait
and
dec
notl
sub
pop
or
jbe
inc
lock
enter
hlt
lahf
ja
dec
js
movsl
mov
mov
stos
push
dec
in
pop
jmp
xchg
or
aam
xchg
sub
cmpb
pop
xchg
sbb
aas
lock
dec
adc
cltd
mull
insb
popf
sti
mov
movl
loope
or
pushf
push
loop
jl
cmpsb
mov
and
shlb
outsl
das
loop
jecxz
lahf
gs
fwait
lods
mov
adc
push
lcall
ja
out
dec
bsr
loop
xchg
test
cmpsb
cmp
inc
push
lods
sti
lods
popf
jge
test
aas
sub
ljmp
cwtl
imul
jle
mov
add
or
pop
push
pop
rcrb
xor
xchg
push
add
xchg
mov
popa
add
xor
xor
add
xor
jne
lahf
xchg
test
mov
pop
mov
push
or
call
leave
jp
cwtl
aaa
je
xchg
lds
mov
popa
aam
xchg
jp
push
cmp
pusha
cmpsb
pop
popf
stos
outsb
xlat
adc
sub
fldcw
mov
je
mov
add
test
sub
dec
leave
mov
mov
jae
mov
pop
pop
xor
and
xchg
out
xchg
jle
mov
inc
dec
cmp
mov
js
and
add
ss
cmp
ret
xchg
cli
stc
pop
sbb
mov
stos
add
jae
mov
sub
sbb
cltd
fidivl
repnz
push
mov
inc
xchg
jnp
mov
adc
mov
cmpsb
loope
xor
jmp
fisubs
pop
jns
jl
push
push
outsl
in
fnsave
scas
shll
out
cli
fs
inc
out
dec
or
add
mov
fidivs
jg
push
stos
xchg
pop
jle
ret
hlt
ljmp
pop
or
mov
faddp
int
fwait
push
stos
adc
jbe
test
nop
pop
lea
mov
scas
and
dec
mov
in
or
ljmp
xchg
je
sbb
xor
shll
cmp
mov
sbb
push
mov
repz
inc
loope
int3
xchg
sti
hlt
xor
cmpsb
xor
and
pusha
stos
adc
test
movsl
mov
pop
aam
ret
scas
arpl
push
movsl
nop
in
in
cmp
rorb
sub
ja
push
pop
inc
test
pop
repz
mov
or
cmp
sub
imul
jno
flds
sbb
jnp
push
loop
shlb
fadds
dec
fmul
loope
int
in
pop
xorl
pop
sbb
arpl
fsubl
push
rcll
out
pop
in
jg
inc
or
shll
push
hlt
pop
mov
adc
mov
cli
push
lcall
xor
stos
pop
mov
shrl
sbb
xchg
push
hlt
ljmp
fmuls
and
or
das
adc
movsb
sbb
jno
rcr
xor
subb
pop
jb
pop
lcall
lcall
sub
or
cmc
sub
push
fwait
and
les
imul
daa
stc
lods
mov
mov
int
add
xchg
push
pop
fsubrl
jne
ss
imul
pop
pop
inc
or
shrl
hlt
pop
mov
test
mov
inc
lcall
fimuls
ret
int3
mov
jecxz
dec
sub
lret
xchg
sub
dec
popf
enter
mov
das
mov
imul
mov
or
add
clc
roll
test
out
jecxz
sbb
repnz
in
popf
push
push
sarb
xor
mov
dec
jns
xor
fxch
ja
pop
mov
inc
dec
test
or
cmpsb
daa
inc
push
in
mov
inc
lahf
rclb
sub
mov
stos
les
sbb
sbb
movsl
in
cmp
pop
rclb
xchg
inc
jle
rolb
add
lahf
pusha
je
jg
jmp
push
pop
je
add
nop
fs
cli
je
mov
mov
mov
clc
clc
sub
fwait
xchg
inc
fnsave
inc
hlt
ds
mul
cld
mov
lcall
dec
inc
jmp
icebp
mov
nop
sti
xor
loope
sahf
inc
jne
rorl
push
sbb
dec
inc
mov
vmread
push
lds
ss
cmp
push
int3
xchg
outsb
sbb
mov
xchg
int
add
pop
fidivrs
mov
scas
test
mov
jno
mov
not
xchg
mov
xchg
out
bound
loop
out
or
call
cwtl
or
adc
mov
xor
pop
jg
outsb
cmpsb
sbb
add
dec
sbb
mov
stos
cmp
inc
sub
or
and
cld
nop
daa
or
add
testb
push
cmp
cld
ljmp
mov
mov
or
mov
adc
dec
pop
xor
inc
mov
jo
and
cli
xchg
das
sahf
cmovl
gs
in
test
pop
jae
outsl
xchg
insb
pop
lock
sbb
sbb
inc
fldl
dec
pop
imul
rorl
adc
push
xchg
sbb
lea
push
out
mov
jmp
mov
lret
xchg
psubd
call
stc
cmpsb
dec
xchg
dec
fdivp
sub
cld
inc
inc
test
loope
popa
pop
push
xchg
iret
and
pop
popf
addr16
pop
adc
arpl
push
lods
pop
clc
imul
addr16
cmpsb
stos
cmpsb
xchg
imul
mov
jb
outsb
bound
inc
push
sbb
fwait
scas
push
push
dec
jge
sbb
ss
test
jbe
and
push
std
jbe
stos
jno
xchg
mov
jmp
inc
sar
lods
add
xchg
call
pop
cltd
jg
rorl
popa
adc
loop
mov
cld
leave
push
adc
add
sbb
out
xor
sbb
sbbb
inc
mov
cmp
fists
inc
in
in
in
xlat
and
xor
inc
cltd
imul
in
stos
int3
inc
jnp
mov
mov
pop
xchg
pop
xchg
inc
cmp
cwtl
cmp
adc
icebp
scas
enter
jae
jne
rcrl
fldl
hlt
jle
mov
rcr
pushf
add
inc
lods
xchg
xor
mov
mov
mov
jp
lret
gs
adc
sbb
pop
mov
add
xchg
sub
mov
ficompl
cmc
jmp
cmc
xor
ljmp
cmpsb
out
add
shl
adc
mov
loopne
and
filds
add
shlb
xchg
ret
fisubl
xor
push
mov
jl
inc
movsb
sarl
mov
sub
fwait
sti
mov
mov
or
mov
mov
fiadds
fucomi
rorb
add
lods
mov
sbb
or
shrl
mov
shll
cwtl
pop
daa
popf
fistl
mov
mov
leave
inc
mov
add
hlt
imul
cli
gs
pop
mov
mov
dec
popf
fidivrs
jns
sub
rcrl
fnstsw
xor
fcmovne
popf
daa
stc
repnz
cmp
mov
dec
decl
ljmp
push
adc
leave
ds
ja
mov
lret
icebp
mov
jmp
jp
jecxz
das
lods
push
xchg
or
sarb
movsb
sbb
push
ja
mov
sbb
dec
insl
jno
inc
push
lods
sbb
sbb
xor
push
sbb
inc
jne
pusha
ss
xor
adc
and
and
inc
mov
xchg
cmp
add
movsl
cmp
loop
xor
mov
adc
xor
pop
adc
pop
arpl
jmp
pop
mov
cmpsb
lahf
filds
and
imul
subl
jne
ja
movsb
ljmp
or
sbb
or
xchg
mov
sbb
negb
mov
call
data16
sbb
data16
mov
nop
and
adc
outsb
jb
mov
and
and
pop
mov
mov
fdivl
mov
aad
div
pop
leave
cmp
push
or
xlat
pusha
movb
test
cmp
add
int
cld
lock
das
mov
insb
and
and
inc
xchg
sbb
xor
mov
jnp
push
icebp
sub
fisttps
aad
pop
push
mov
leave
pop
rclb
test
xor
imul
repnz
push
ja
xor
mov
cmpsl
sub
xchg
popa
cmpl
and
icebp
inc
adc
enter
xor
pop
push
movsb
sbb
dec
jp
pusha
sbb
mov
or
int3
imulb
imul
out
outsl
lock
iret
lahf
dec
inc
mov
and
mov
cmp
insb
popf
and
jmp
inc
aam
pushf
mov
add
push
aas
mov
xchg
les
dec
mov
push
push
jbe
cmp
les
repnz
into
inc
je,pt
ret
mov
xchg
jmp
test
fs
repz
fnstenv
dec
int
or
cmpsb
leave
add
in
add
sbb
scas
rcll
adc
sub
mov
xchg
add
mov
cmp
mov
push
cmc
cmc
in
adc
xchg
pop
lcall
mov
cmpsl
imul
test
jle
jmp
or
or
mov
jnp
fmul
mov
int
jne
mov
das
sbb
sub
sbb
xor
xchg
stos
cmp
test
je
jg
out
sub
and
push
mov
pop
sbb
pop
jae
mov
and
push
xor
icebp
aaa
in
test
or
cmp
outsl
lods
leave
je
stc
shlb
mov
pop
not
repnz
pop
xchg
mov
enter
fsubp
int
clc
push
add
subb
mov
or
insb
jns
sub
mov
outsb
inc
scas
xchg
add
fstl
ds
lahf
mov
ss
dec
xchg
dec
bound
cmp
out
xchg
mov
xor
pusha
sub
je
lods
test
cmp
mov
mov
psubw
pop
xchg
mov
sbb
xlat
mov
dec
xchg
std
aas
sbb
push
lcall
pop
in
ss
xchg
fs
jne
or
dec
adc
jecxz
sbb
inc
rolb
daa
es
scas
push
push
xlat
in
xor
mov
xchg
push
popa
mov
mov
rolb
je
test
ret
popa
add
dec
or
jnp
push
fists
ret
mov
push
es
pop
std
mov
shr
cmp
cmp
pop
wrmsr
cmp
mov
es
cs
pop
fs
xchg
push
nop
and
movsb
add
ret
repz
loop
ficoms
mov
fsubr
mov
cmp
shll
aad
lods
push
mov
leave
adc
aam
mov
scas
fildl
dec
shl
mov
and
data16
and
in
jnp
js
stos
bound
lret
jp
leave
into
sub
cmpsb
in
mov
out
mov
jp
mov
push
xchg
sbb
fdivrs
xchg
push
es
scas
inc
loop
mov
das
test
mov
mov
mov
jp
rcrl
mov
inc
sub
mov
pop
js
repnz
cwtl
push
stos
xchg
lods
mov
mov
push
mov
and
mov
out
and
fnstenv
cmp
pop
push
inc
lret
xchg
loope,pn
fst
jne
or
jae
test
mov
test
testl
mov
cmp
mov
sbb
jle
push
xor
pop
lock
ret
add
cmp
iret
fwait
mov
mov
push
fcom
pushl
jmp
xor
mov
lods
mov
mov
mov
in
shll
imul
andl
mov
stos
cmp
sbb
mov
push
jmp
pushf
cmp
mov
insb
push
jmp
fistpll
movsl
mov
clc
xor
dec
push
stc
or
mov
les
pop
xorb
in
jbe
sub
adc
jl
int
mov
bound
xchg
xchg
xchg
out
add
sbb
lds
dec
mov
jl
mov
add
movsl
mov
dec
xchg
mov
sbb
dec
push
push
sbb
sub
mov
mov
and
push
outsb
bound
mov
adc
push
pop
sti
call
or
dec
xor
mov
outsl
leave
xlat
xor
pop
iret
mov
pop
iret
mov
xor
movsl
jge
imul
out
popa
jg
test
jge
mov
mov
add
sarb
push
sub
icebp
adc
jg
inc
dec
dec
scas
sbb
mov
jecxz
lock
hlt
movsb
xchg
mov
aaa
ror
bound
nop
jne
mov
aaa
stos
xlat
jno
mov
mov
lret
jge,pt
and
sbb
or
mov
ljmp
xchg
cld
clc
aam
sbb
cmc
gs
mov
js
es
jo
loop
jl
int3
jecxz
negl
popa
xchg
jp
pop
dec
sub
popa
sbb
push
push
mov
sbb
imul
addl
xor
inc
aas
mov
fistpll
aam
lea
xchg
add
idivb
test
aaa
pushf
add
sbb
loope
movsl
shll
xor
or
mov
mov
insb
lods
gs
in
or
mov
fs
pop
mov
xchg
xchg
std
adc
mov
out
sbb
ja
adc
push
or
dec
aam
rorl
repnz
mov
add
jae
out
les
sbb
test
push
call
inc
inc
gs
js
aad
and
mov
or
lods
mov
mov
outsl
add
das
mov
out
daa
aad
in
xor
jno
mov
rolb
cltd
inc
add
jmp
push
and
pause
gs
loope
or
or
cltd
aaa
sub
mov
arpl
push
pop
and
testl
sbb
dec
adcb
loopw
sqrtps
mov
dec
sarl
rorl
xor
pop
or
mov
jae
mov
sbb
rolb
push
pop
testl
inc
icebp
pop
add
lret
jb
sub
stos
jnp
adc
fs
shlb
hlt
outsb
out
pop
dec
inc
pusha
jae
popa
sub
enter
pop
mov
cmp
mov
sahf
imul
or
push
mov
dec
mov
xor
xor
jecxz
int
xorl
adc
xor
popf
sub
push
push
mov
fcmovnu
mov
test
mov
cwtl
mov
jl
sub
push
inc
adc
out
dec
sbb
in
sub
dec
inc
cs
jnp
enter
push
push
test
js
les
in
out
sub
adc
andl
movsl
pop
pop
xchg
xor
ficoml
data16
jl
clc
push
sbb
and
mov
cmpl
pushf
adcb
iret
mov
jp
mov
mov
and
loope
xor
ss
ret
adc
addr16
pop
jmp
jl
mov
add
or
pop
jle
xor
test
sbb
stc
cld
test
out
mov
xor
dec
jo
scas
les
movsl
adc
aam
dec
shlb
push
jno
mov
cltd
xchg
pusha
fcmovnbe
mov
shrb
enter
or
pop
mulb
fs
xor
xchg
mov
and
xchg
lock
scas
fmul
icebp
sbb
imul
gs
repz
and
ljmp
xor
sub
mov
lods
rorl
fdivrl
dec
aad
pop
mov
inc
xor
pop
xchg
sub
je
fistpll
dec
inc
add
xchg
lret
jecxz
mov
dec
mov
push
lret
dec
inc
pop
mov
or
push
pop
fs
gs
ffree
inc
pop
add
into
dec
lods
sbb
movsb
add
xorl
push
push
mov
sub
fistps
sub
ss
and
sti
subl
sbb
xchg
test
repnz
movsb
jmp
aas
pop
clc
mov
pusha
addr16
shrb
loope
jb
das
gs
adc
mov
mov
je
xchg
dec
cmp
movsl
mov
xor
push
push
adc
dec
aad
sahf
ret
movsl
mov
fwait
mov
xor
cmp
dec
aas
mov
add
dec
out
xor
add
int
std
loop
pop
imull
sub
jmp
mov
outsb
lods
bound
int3
iret
cmc
and
xor
xor
inc
sbb
mull
int3
outsl
xchg
das
jg
inc
rorl
push
lret
add
shlb
xchg
pop
dec
loope
and
push
test
test
sub
sub
loopne
fcom
adc
rcll
add
xchg
mov
dec
push
sbbl
mov
popa
inc
jmp
nop
in
mov
aad
cs
bnd
les
jle
pop
test
fcomps
test
or
add
lret
mov
xlat
jae
call
adc
xlat
test
cmp
mov
sub
int3
incl
add
and
nop
subb
xchg
adc
inc
ss
pushf
push
dec
lods
test
pusha
gs
and
iret
bnd
aaa
jg
fiadds
jmp
sub
add
dec
std
jns
enter
dec
mov
xor
iret
cmpl
rorl
sub
subb
int
mov
inc
rep
mov
scas
jge
sub
stos
stc
shl
filds
mov
outsl
inc
pop
lret
test
xchg
pop
clc
fwait
jne
xor
mov
adc
push
inc
sub
push
xchg
iret
cmp
sub
mov
cmpsl
inc
push
icebp
enter
sbb
mov
inc
mov
and
jae
ficompl
push
lcall
xchg
enter
pop
dec
clc
xor
push
int3
in
pop
push
popf
pop
push
divb
xlat
add
mov
adc
rcrl
pusha
cmp
mov
in
sbb
and
mov
aam
pinsrw
jp
scas
fwait
aas
repz
and
lock
cmpsb
mov
cmpsl
movl
push
negl
ret
ficoms
aaa
sub
mov
movsl
mov
in
pusha
addb
cmpsl
mov
mov
inc
mov
xchg
mov
push
ljmp
adc
push
es
lret
pop
aaa
xchg
stc
daa
cmc
imul
pop
in
xor
std
mov
jl
inc
arpl
inc
test
sbb
mov
ss
loop
and
loop
es
outsb
dec
pop
jecxz
mov
jge
push
repz
mov
imul
data16
adc
xor
arpl
in
sub
decb
idivl
lret
mov
fnstcw
fisttpl
out
pop
shrb
repnz
nop
xchg
jge
pop
arpl
das
imul
pop
lods
add
insb
cmc
movsb
sub
or
mull
out
jmp
mov
inc
xor
pop
out
int
push
sub
notl
aaa
dec
call
lock
and
in
xchg
sub
aam
negb
sbb
inc
jnp
pop
testl
sub
call
fidivrs
int
dec
push
rcrl
sti
mov
sub
pushf
jno
add
and
lods
ss
out
popf
sbb
andl
je
shll
fadds
js
cmp
divl
movsl
stos
mov
xorl
loop
mov
mov
xor
mov
lods
xchg
push
cmp
jb
jmp
imul
mov
inc
mov
mull
lret
frstor
fnstenv
fisubrs
fimuls
iret
ss
cmp
sub
sub
sub
xorl
sub
sub
cld
pop
xor
jecxz
ds
jbe
sub
addr16
loopne
jbe
pop
out
mov
ja
pop
pop
les
into
enter
pop
imul
xchg
arpl
dec
ds
pop
push
sbb
cwtl
test
fisttps
jl
jecxz
out
mov
cmp
movsb
je
cld
repnz
jmp
mov
fcom
loope
mov
into
mov
sub
movsb
xchg
sub
add
sti
imul
je
adc
std
test
ret
push
inc
movsl
mov
mov
or
dec
sbbb
dec
mov
mov
dec
jb
add
jnp
xor
xchg
test
popf
cmp
mov
out
dec
nop
loope
and
mov
cmpsl
out
cmp
and
push
dec
push
hlt
insb
push
dec
sbb
inc
xchg
leave
pusha
fwait
cld
dec
movsb
imul
lea
daa
push
add
sbb
push
lahf
js
mov
xchg
sub
push
scas
sbb
imul
mov
xchg
jb
mov
outsl
pop
jmp
add
jecxz
mov
imul
nop
push
jo
add
and
dec
or
lret
sub
jns
dec
mov
mov
inc
pop
sub
das
ds
insl
lea
sub
enter
in
stos
or
hlt
ljmp
popa
sbb
jae
dec
push
das
movsl
aaa
pop
pop
inc
pop
jle
jbe
popf
pop
jp
addr16
dec
dec
fnsave
adc
leave
add
cmp
push
dec
push
test
fistpll
or
pop
sarb
or
sub
cmpsb
in
repnz
shrw
stos
cli
sbb
lcall
or
xchg
js
xor
mov
mov
scas
mov
xlat
and
xchg
dec
cwtl
icebp
pop
cmpsl
jp
sub
cmpb
outsl
icebp
dec
push
nop
dec
sbb
adc
or
xchg
mov
xchg
fwait
sbb
sti
or
or
xchg
mov
sub
jo
mov
test
adc
les
mov
jnp
xchg
jns
jae
dec
repz
call
sub
push
arpl
xchg
mov
std
das
xchg
popf
xor
pop
sbb
das
nop
sub
popf
mov
sahf
inc
sti
inc
shrb
inc
pop
ja
jg,pn
fistps
push
push
in
call
jne
mov
cmc
aaa
in
icebp
hlt
inc
jle
sarb
xchg
mov
push
add
cmp
test
imul
lahf
fistps
data16
xor
jmp
dec
push
xchg
fcmovb
mov
aam
push
rcl
xor
mov
cmp
dec
insl
les
push
pop
outsl
inc
pop
sub
in
or
in
loop
insb
push
movsb
fucomi
mov
jb
or
pop
divb
jl
xlat
lods
sbb
sub
daa
mov
add
mov
dec
sbb
sbb
ja
push
lcall
sub
std
xor
xlat
fwait
xchg
and
into
into
js
adc
push
pushf
dec
out
das
cltd
mov
popa
mov
jne
mov
icebp
in
dec
pusha
cmp
push
cwtl
mov
cld
dec
fcmovnb
test
xchg
push
fbstp
push
sbb
in
orb
das
sub
jp
fdivrp
and
sbb
pushf
test
stos
xor
daa
jns
or
mov
mov
daa
push
mov
cmc
xchg
cmpsb
cli
sbb
pusha
fs
fisttps
outsb
insb
ss
ss
out
out
pop
movsb
jl
push
cmp
sub
mov
dec
les
out
cmp
lods
shl
mov
mov
fimull
push
test
xor
cltd
pop
mov
sub
hlt
sbb
xchg
and
xchg
mov
jmp
cltd
imul
jnp
mov
add
rcrl
cmc
mov
popa
mov
xchg
btsl
push
iret
inc
hlt
idivl
popa
jge
bound
add
push
mov
shlb
sub
jb
test
inc
ret
and
out
pop
mov
pop
in
daa
aas
adc
nop
loopne
lds
xlat
clc
dec
hlt
shrl
cmp
scas
mov
arpl
xchg
es
pminub
jge
outsb
and
jno
and
push
sahf
or
nop
sbb
push
scas
sbb
imul
out
mov
or
mov
add
sbb
cmpsb
sbb
in
mov
xor
lahf
lcall
adc
mov
sub
idivl
aaa
loope
imul
mov
and
push
data16
sub
mov
sbb
jp
sbb
jl
inc
push
dec
pop
jb
jo
mov
stc
pop
add
inc
jmp
fstpl
shlb
in
daa
cmp
or
repnz
mov
and
dec
dec
fisubrl
divl
and
dec
mov
aas
xchg
dec
test
mov
add
imul
pop
or
rcr
lret
pop
fnstsw
sub
add
jne
fidivl
mov
and
jmp
inc
test
push
push
cmp
mov
das
fstpl
mov
dec
jecxz
lock
mov
shll
add
or
idiv
jnp
inc
push
mov
and
dec
iret
mov
mov
vpshlb
call
push
inc
dec
mov
push
xchg
lods
jnp
mov
loopne
out
push
xchg
sub
sub
push
sub
ficoml
fwait
inc
mov
adc
fidivrl
clc
add
adc
xor
subb
xchg
je
inc
inc
cltd
adc
pushf
fisttpll
cmp
aas
push
lea
add
and
jg
xlat
pop
loopne
test
test
pop
mov
pop
jle
sub
idivb
cmp
sub
orps
pop
pop
xor
dec
sub
out
loope
adc
les
movsb
loopne
fcmovnu
jl
insl
mov
data16
mov
add
shr
xlat
xchg
lret
loopne
enter
mov
fldenv
inc
push
mov
mov
push
cmp
repnz
out
scas
enter
push
cwtl
push
pop
sub
jne
bound
inc
jecxz
mov
jns
rol
or
mov
aaa
fstpt
cmp
adc
das
pop
fnstsw
ljmp
sbb
pop
imul
or
mov
push
das
jecxz
pop
and
rcl
mov
in
mov
sub
mov
cmp
add
mov
bound
lods
mov
rclb
popa
cld
rclb
cmp
adc
xor
push
lods
int
mov
sarb
mov
ja
test
mov
stc
jp
sahf
push
cmp
andl
sub
xor
lret
aas
data16
ja
mov
push
jno
mov
sbb
pushf
cli
dec
xchg
xlat
insl
int
loopne
int
adc
in
lods
insl
sbbb
xor
mov
jg
mov
ljmp
jns
das
iret
add
lods
adc
jecxz
aad
lds
or
pushf
mov
mov
add
add
add
dec
or
stc
test
call
je
sti
pusha
inc
daa
push
int
adcb
sbbl
std
nop
add
fistpl
add
xor
out
and
stos
xor
mov
hlt
stos
loope
hlt
jns
in
jne
mov
cmovb
lock
lds
addr16
out
loop
mov
sub
jecxz
ret
push
pop
in
add
or
xor
jp
or
enter
clc
addr16
das
mov
mov
testb
movsl
push
xchg
dec
cwtl
push
lock
sbb
or
mov
jecxz
sub
out
inc
sub
ds
jmp
imul
push
test
pop
fistps
insb
repz
adc
popa
lret
jnp
mov
cmc
fwait
pop
repnz
test
cwtl
lods
mov
out
xor
popf
cltd
mov
dec
clc
fsub
sub
dec
addr16
rclb
out
cmp
add
mov
pop
fwait
loope
or
pop
lea
cmpsb
xchg
mov
pop
inc
cmc
lahf
adc
mov
int
push
dec
mov
adc
adc
ficompl
aad
stos
cwtl
xchg
xchg
test
pop
in
stos
int3
loopne
ja
inc
dec
sub
pop
mov
sbb
mov
test
jp
stos
out
lods
dec
pop
pop
pop
enter
push
push
push
or
scas
les
push
mov
inc
mov
cwtl
imulb
xchg
pop
sub
ja
and
fisubs
stc
filds
add
jo
and
movsb
pop
inc
add
popa
push
mov
fidivrs
repz
sarb
sbb
outsb
jl
mov
mov
nop
or
mov
insb
lret
and
inc
cmp
cltd
outsl
out
testb
push
mov
mov
fmulp
jno
dec
xchg
dec
or
and
or
stos
mov
pop
jle
mov
enter
aad
pop
xchg
pop
cmp
shrb
fidivs
pop
invd
ficompl
sub
fcmovnbe
or
mov
mov
movsb
dec
sub
jo
bound
cmp
push
and
push
sbbb
hlt
inc
scas
daa
les
or
xlat
stos
pop
cmp
push
out
mov
jmp
jae
xchg
movl
pop
fwait
or
add
aas
and
push
pop
push
fdivl
lock
mov
test
ja
popa
add
push
and
mov
mov
mov
stos
mov
jo
cmpsb
lsl
dec
sbb
mov
sub
jecxz
aas
lret
mov
push
mov
jge
dec
inc
loopne
out
dec
mov
dec
mov
xor
cmpb
inc
fnstenv
mov
xchg
cld
shl
cltd
lret
push
into
xchg
push
fdivl
pop
stos
icebp
add
pop
mov
cwtl
inc
rcll
mov
dec
in
addb
pop
ljmp
adc
xchg
je
out
imul
out
loop
jno
or
push
shufps
inc
xor
imul
aad
sbb
enter
jge,pt
rorb
lea
jbe
sub
movsl
pop
repz
shrl
or
inc
cmp
mov
mov
leave
mov
xor
loope
mov
fistl
ljmp
rcr
dec
dec
xlat
mov
adc
lahf
dec
push
adcb
pop
cmp
adc
or
cmc
cmp
dec
aaa
sbb
xchg
mov
dec
cwtl
jecxz
mov
scas
nop
sub
adc
xchg
inc
cmpsb
pop
sahf
mov
pop
sub
adc
cmp
clc
fcomps
add
mov
adc
fiaddl
xlat
jmp
clc
jmp
sti
fisttpll
shll
dec
or
and
aas
sarl
fsubl
in
out
jmp
incl
cwtl
or
cmp
lret
loope
fwait
rcrl
mov
or
push
stc
jge
xchg
and
mov
mov
lret
movsb
sbb
cmpsb
mov
mov
adc
je
dec
aas
push
dec
js
or
adc
lret
sbb
imul
stc
ja
into
sbb
mov
inc
inc
hlt
pusha
pop
into
xor
hlt
sub
pop
fdivl
bound
addr16
sti
ret
lods
adc
push
andl
ja
js
ffree
jbe
mov
cld
jl
sahf
lea
data16
stos
jg
pusha
inc
jo
dec
push
divl
pushf
insb
pcmpeqd
dec
jg
outsb
ret
fcmovu
loop
lods
pop
push
sub
ja
inc
cmc
mov
mov
cmp
pushf
ss
fsubr
loopne
insb
and
push
xchg
movsb
lret
jl
jecxz
daa
lods
pop
and
sbb
push
inc
divb
das
ds
ljmp
adc
je
lret
cmp
and
das
pop
inc
flds
ds
sub
mov
and
ficomps
jb
fwait
aaa
shl
mov
rolb
pop
ret
int3
ljmp
xchg
aaa
stos
fldenv
push
mov
loopne
int
test
xchg
sbbb
lret
into
pop
lods
mov
add
fwait
shlb
sbb
sub
fbld
xchg
jne
pop
add
inc
sarb
jb
je
pop
xchg
lret
sub
cmp
lock
mov
xor
dec
andb
popa
ja
hlt
arpl
mov
add
std
movsb
ljmp
xor
dec
mov
cmp
cmpsb
mov
sti
das
leave
pusha
push
jge
inc
mov
dec
mov
icebp
gs
sub
jecxz
lods
test
sub
sbb
cld
inc
in
xor
cmpsb
jae
loope
lods
ret
sti
dec
arpl
mov
sbb
mov
inc
into
mov
mov
adc
clc
pusha
test
push
mov
loopne
insb
push
insl
loop
add
inc
mov
push
jns
test
out
or
xchg
inc
mov
lret
inc
sahf
xor
dec
adc
xchg
fstpt
cmpsb
or
adc
sub
sti
or
leave
xchg
mov
scas
and
lahf
mov
ss
iret
int
fbstp
xchg
notb
ljmp
inc
dec
js
call
xlat
int3
ljmp
mov
arpl
and
jb
out
mov
add
push
repz
xchg
adc
aas
mov
mov
mov
out
pop
push
mov
aam
inc
sbb
cmpsl
loopne
mov
pop
pop
xor
arpl
add
fwait
xchg
pop
pop
jne
out
push
xchg
sub
mov
and
in
cmpsb
cmp
mov
popa
iret
les
pop
sbb
mov
push
pop
sub
mov
mov
pop
xchg
dec
push
sub
rcrl
aaa
int3
push
jg
icebp
dec
push
sarb
js
pop
push
scas
incl
pop
rcrb
test
outsb
jmp
add
mov
stos
sbb
jp
in
loop
jle
into
pop
push
jbe
mov
insl
pop
test
jle
add
xor
cmp
sbb
enter
call
mov
jne
mov
jno
xor
popf
lahf
mov
decl
push
ss
lods
sub
shlb
je
stos
jo
and
shll
fstl
sbbl
into
mov
aas
mov
lods
pop
sub
cs
push
mov
fs
pop
jge
sbb
out
lods
cmp
sbb
sar
dec
andl
adc
xchg
mov
mov
notl
adc
push
push
std
dec
mov
cmp
insl
out
pop
cld
bound
lock
xchg
lock
mov
movsb
pop
in
in
xchg
mov
shll
push
test
inc
cmp
push
popa
in
js
adc
mov
fstl
shrb
orl
in
xor
aam
test
adc
and
mov
adc
xchg
jmp
lea
lods
stos
cmp
std
movsl
cmp
pusha
cmp
adc
dec
mov
xchg
mov
sbb
test
movsb
push
cmp
push
push
mov
xor
test
stos
and
add
pop
lock
movsb
push
mov
cwtl
pop
cltd
data16
or
inc
jo
icebp
fs
sub
mov
sub
inc
ljmp
inc
add
sbb
cwtl
stos
lahf
sbb
add
cmpl
sub
push
xchg
mov
mov
std
fldt
adc
stos
pushf
das
fiaddl
lds
or
fsubs
out
cli
mov
inc
lret
xchg
in
cmc
jle,pn
and
xor
dec
push
js
jp
cs
push
inc
sbb
cld
or
std
mov
adc
push
mov
lods
or
mov
mov
outsb
push
mov
call
xor
xor
lahf
in
sbb
push
pop
mov
cmp
adc
mov
mov
mov
and
je
inc
loope
xor
icebp
add
lods
dec
lret
push
push
push
je
mov
popf
frstor
idivl
cwtl
xlat
repz
jg
stos
mov
int3
sub
xchg
xchg
mov
push
and
inc
dec
mov
fwait
sbb
popf
pusha
mov
push
push
outsb
push
test
adc
add
or
pop
pop
add
and
jb
std
test
shll
and
ds
sub
gs
xlat
xchg
cmp
and
mov
aaa
test
dec
mov
mov
adc
jne
movsb
pop
sbb
mov
addr16
imul
mov
addr16
out
in
cmp
cmp
dec
sub
xor
pop
aaa
scas
sahf
mov
sar
pop
jb
outsl
call
sbb
andb
or
jno
in
stos
std
inc
mov
loopne
andb
cmc
rcrb
out
in
sbb
lods
and
out
cmpsl
iret
aad
inc
fsubp
or
mov
mov
xorl
dec
pop
jne
mov
lods
jnp
push
sub
pop
repz
pop
adc
aad
mov
fldenv
or
popl
mov
jge
repnz
out
aam
jno
lods
and
add
fcoms
jne
lcall
inc
cmp
push
ljmp
add
cmp
mov
addr16
mov
iret
loope
mov
jnp
das
dec
adc
pop
push
cmp
mov
nop
fdivrs
inc
add
fwait
adc
insb
out
ljmp
mov
mov
pop
and
inc
add
sbb
xchg
test
mov
or
adc
iret
push
lahf
ror
mov
pop
push
rcrl
orb
push
sbb
or
cmc
xor
push
mov
shl
vpunpcklwd
pushf
mov
and
cmp
mov
sub
sbb
sub
xchg
cmpsl
mov
stos
cwtl
pushf
je
dec
pop
xchg
bound
sti
jno
sbb
cmpsl
mov
ret
ljmp
std
dec
sub
dec
push
lret
inc
cli
add
leave
sub
push
mov
push
lock
push
add
lea
dec
cli
outsb
icebp
jne
mov
cmp
mov
or
nop
roll
add
jne
sub
je
xor
mov
clc
cwtl
out
lock
test
fstps
and
or
shrl
outsb
push
shll
or
adc
adc
test
xor
and
out
ret
sbb
mov
xor
and
dec
jp
sub
iret
jo
jae
aam
dec
fsts
in
imul
lea
fnsave
int3
xchg
sbbb
or
in
add
xor
pop
int3
aam
mov
pop
leave
push
mov
xor
inc
and
inc
pop
sub
xchg
or
int3
mov
sub
lahf
or
mov
sbb
push
das
fmul
in
movsl
negl
lcall
jle
hlt
ret
testb
or
xor
cmp
lret
jge
cmpsb
adc
xchg
cmpsl
push
xchg
scas
adc
xchg
test
pop
test
pusha
mov
pusha
fimull
test
test
or
fldt
and
notl
jns
xchg
fldenv
push
into
xor
lea
cmpsb
jnp
mov
inc
fs
mov
stos
int3
sahf
arpl
sbb
jle
stos
mov
cmp
xchg
dec
mov
fimuls
push
cld
insl
inc
inc
sub
mov
in
mov
inc
cli
push
mov
stos
push
xor
pop
sbb
cmp
push
add
push
mov
test
cld
mov
dec
ja
inc
int
cmp
mov
mov
adc
mov
int
cmp
dec
xchg
xorps
push
mov
pop
dec
dec
jae
insb
jmp
or
in
pop
xchg
xchg
mov
sub
adc
leave
fildl
dec
jge
in
ficoml
pop
jbe
scas
loopne
dec
mov
mov
sbb
call
decb
pop
mov
dec
es
icebp
jmp
insb
push
rolb
push
addr16
mov
addl
imul
and
into
sahf
lret
scas
sti
sub
xor
insl
mov
add
lock
inc
pop
add
push
test
sbb
jge
inc
jno
mov
repnz
pop
and
inc
mov
roll
push
mov
and
or
dec
xchg
cmpsl
in
repnz
pop
push
jmp
mov
push
xchg
mov
mov
mov
sbb
fwait
pop
xor
and
imul
in
mov
fwait
inc
int
in
dec
inc
scas
sub
cmp
xchg
test
add
mov
shrb
test
daa
daa
sub
mov
and
mov
and
mov
jb
jae
inc
push
xor
pop
jg
inc
push
sub
adc
inc
jecxz
into
push
roll
in
aas
mov
hlt
popa
and
xchg
sub
rcll
pushf
xor
lods
sub
mov
in
shll
sub
mov
jbe
jne
pop
insl
mov
mov
mov
iret
inc
lock
popa
lcall
ljmp
xor
add
jmp
iret
mov
cli
jg
insb
lret
xchg
jbe
mov
xor
mov
mov
push
aaa
pop
cmp
push
lods
mov
mov
adc
push
out
sub
ret
and
cmp
das
inc
pop
inc
scas
mov
cld
pop
loop
push
testb
jb
std
add
aam
insb
or
rol
jb
pop
clc
push
mov
mov
clc
movsb
sbb
aas
out
mov
and
inc
mov
mov
arpl
stos
push
add
lret
into
mov
cmpsl
rcrb
js
dec
and
pop
jmp
or
mov
insl
push
scas
testb
add
enter
cmp
in
mov
insl
les
call
aam
test
aaa
int
filds
push
cltd
lea
testl
dec
xchg
xchg
ss
jecxz
push
sbb
push
pop
imul
rclb
insb
iret
divl
adc
sub
into
pop
cmp
add
fsubrp
cld
jb
push
hlt
push
ljmp
test
push
lcall
or
cmp
int3
inc
and
in
lret
repnz
jnp
adc
insb
and
mov
movsl
shrb
mov
cmp
sbb
iret
or
xchg
testb
enter
cltd
jmp
xor
adc
repnz
mov
iret
orb
testb
movsb
push
rorl
loop
dec
insl
fistpll
sub
aaa
sbb
stos
mov
sysret
sarb
mov
xor
mov
pop
lock
sub
sahf
pop
sbb
or
push
out
xchg
xchg
mov
adc
popf
mov
xchg
fdivl
xchg
in
mov
clc
pop
or
xchg
fnstcw
js
sub
out
sub
mov
ljmp
cmp
pop
and
push
gs
mov
cli
rolb
ficomps
cs
mov
aaa
push
ret
and
rorb
xchg
and
inc
xchg
adc
fstpt
dec
cmpsb
ljmp
imul
dec
mov
sub
loop
push
sub
mov
movsb
xor
sbb
xor
push
cmpsl
ss
pop
jle
or
sub
cld
ss
push
fndisi(8087
xlat
add
push
pop
mov
sub
ficoml
iret
sbb
jae
cmp
xchg
xor
pop
fcompl
add
shrl
out
int
in
mov
push
cmp
sub
dec
dec
push
lods
mov
mov
cmp
push
xchg
sub
ret
push
cmp
mov
sub
rclb
lcall
daa
maxps
das
jmp
jnp
sub
xor
daa
or
test
cmp
fisubrl
pop
xchg
test
sub
addr16
lret
xchg
rcll
inc
xor
int
les
mov
add
dec
inc
jb
hlt
xchg
sbb
je
sahf
paddq
loopne
mov
pusha
xchg
or
je
aas
xorl
ret
arpl
sbb
nop
lds
xchg
rcl
scas
and
add
out
fs
popa
push
into
or
test
lret
les
jp
mov
ds
add
adc
adc
sbb
sub
loopne
shlb
cmpl
mov
cmpsl
mov
loop
test
cmp
sbb
add
mov
cli
sbb
dec
sbb
filds
movq
or
pop
loop
push
or
and
and
clc
cltd
jo
das
cs
inc
movsb
in
push
pop
pop
mov
enter
clc
hlt
outsl
add
arpl
mov
mov
rcrb
movsb
or
movq
add
scas
mov
clc
add
or
add
fwait
int3
mov
sub
scas
push
imul
mov
cmp
push
sub
sbb
out
sbb
cmpsl
push
adc
shr
ret
add
mov
and
dec
dec
xor
int3
jae
cwtl
imul
add
inc
js
pop
dec
jg
add
daa
fimuls
dec
and
or
mov
sbb
cmp
lods
add
mov
cmp
ja
in
or
pop
pop
push
ret
test
dec
pop
rcl
decb
mov
out
das
sbb
mov
xchg
leave
pop
imul
mov
lea
loopne
cmpb
jecxz
cs
call
scas
adc
adc
rorb
arpl
scas
js
push
sbb
mov
xor
mov
loop
dec
bnd
int3
fwait
jae
mov
inc
mov
sbb
and
test
xor
ds
je
out
xchg
push
add
xchg
lret
fisttps
pop
fucom
sbb
mov
dec
push
xor
xor
xchg
cmpsb
lahf
inc
test
or
cmp
jl
pop
cmp
pop
test
icebp
ror
and
lea
js
inc
test
push
popa
test
pop
clc
xor
imul
mov
pop
lret
std
pop
xchg
xor
or
xor
mov
and
fstl
lcall
jle
push
mov
sbb
ret
push
iret
xchg
mov
faddl
pop
inc
lcall
push
int
aad
iret
xor
xchg
cmp
loopne
icebp
mov
rcrl
sysret
sbb
mov
into
pop
jno
je
test
aaa
xchg
outsl
and
mov
mov
aad
pop
mov
fxam
stos
sbb
xchg
mov
xchg
fcomi
loope
iret
movsl
sub
or
pop
xor
es
xor
fmull
inc
ljmp
int
or
xchg
add
push
mov
lret
cmp
push
sub
subl
sti
std
push
cmp
decl
fdivr
dec
seta
out
arpl
out
and
push
test
cltd
dec
cli
cmp
popf
push
mov
test
jo
push
imul
xor
dec
dec
aas
push
pop
ret
movsl
inc
and
sbb
mov
push
adc
xor
jns
jae
popf
and
adc
xchg
sbb
inc
int3
add
popl
mov
dec
pop
out
or
pop
dec
jns
lcall
sti
xor
and
dec
shlb
das
shll
ret
shlb
dec
mov
stos
inc
cltd
xchg
test
ja
sub
push
ljmp
movsl
pushf
ljmp
adc
cmpsl
bound
dec
mov
cmpsb
or
and
sbb
xor
mov
fisubs
in
adc
es
scas
cmp
xor
xor
out
and
imul
out
jmp
aam
roll
mov
push
test
fwait
mov
cltd
ret
xchg
mov
data16
jb
cs
test
repnz
jmp
cmpsl
adc
xor
pop
mov
in
jo
push
cmp
mov
mov
jae
xchg
sub
pushf
rcl
insb
rorl
mov
adc
jb
call
lds
ffree
aaa
xor
mov
jl
outsl
mov
je
movsb
in
adc
test
in
cmpsb
movsb
dec
fs
sbb
loope
or
or
adc
jno
leave
sbb
loopne
inc
leave
sarb
sahf
inc
mov
push
adc
negb
fs
push
mov
lock
mov
or
movb
jno
ss
lret
out
mov
push
lds
or
jo
xor
les
test
jb
lods
mov
bswap
gs
adc
mov
sbb
mov
inc
sarb
test
pop
lret
push
in
negb
mov
cmpsb
fadds
cltd
xchg
add
cs
mov
lds
bound
xor
iret
mov
sub
cwtl
add
mov
jle
mov
in
push
shlb
jmp
cmp
push
jmp
add
push
loopne
arpl
sub
pop
pop
xorl
jns
addb
outsb
ljmp
sub
rorl
add
and
or
sbb
inc
cmp
pop
pushf
test
clc
in
push
mov
fdivrs
mov
inc
adc
les
mov
or
or
cmpsl
adc
xchg
js
mov
or
xor
popa
mov
dec
scas
xor
ss
outsl
pusha
dec
cmpsb
adcl
inc
test
notl
in
xchg
ljmp
mov
push
and
and
test
popf
leave
addb
cmpsb
loope
aaa
out
jge
add
int3
push
stc
xchg
jp
popa
shl
pushf
or
or
and
sbb
repz
stc
lods
inc
or
scas
cmpsb
or
push
push
test
lahf
ss
inc
popa
xadd
sbb
inc
stos
std
xchg
mov
js
testb
stos
aaa
or
xor
leave
fldcw
jns
xchg
xchg
mov
out
cmc
lahf
sub
test
out
mov
or
cmpsb
adc
leave
test
pop
pop
or
adcb
cli
es
add
or
push
jecxz
inc
inc
jmp
pop
mov
repz
and
jl
adc
or
mull
mov
ja
cmp
add
dec
push
mov
mov
mov
push
and
inc
pop
adc
jmp
cs
stos
mov
or
jb
cltd
cmpsl
shl
sbb
sbb
fidivrl
xchg
mov
addl
inc
dec
dec
outsb
cs
pusha
cltd
sbb
and
jl
xor
mov
in
scas
sbb
pop
dec
mov
in
fmul
xchg
pop
inc
push
sub
out
push
int
ljmp
mov
jno
fidivl
dec
stos
sbb
insl
jnp
xor
stos
sbb
dec
jns
sub
mov
pop
loop
repz
repz
es
push
nop
jo
aas
push
cmpsl
ja
push
dec
pop
aad
inc
sbbb
add
stos
test
mov
pop
rcrb
jecxz
cli
leave
in
in
ljmp
mov
adc
mov
xchg
sahf
mov
fdivrs
fcomip
aad
mov
into
xor
stc
push
imul
inc
es
mov
sarb
loop
inc
adc
mov
cmpsb
xor
push
adc
jo,pt
lret
pop
xor
jbe
movsl
push
xchg
jg
dec
aad
lods
xchg
pop
inc
and
in
xchg
aam
mov
ja
xor
jo
cmp
adc
ljmp
jmp
stos
jne
push
clc
pop
nop
inc
movsl
mov
mov
sub
xchg
push
cld
cwtl
idiv
cmpsb
or
out
stc
fldt
gs
mov
outsl
xchg
mov
xor
stc
sbb
mov
push
mov
pop
add
repz
pop
sti
addr16
xor
add
inc
testl
inc
dec
into
mov
inc
jle
pop
jae
dec
js
inc
fisubrl
adc
adc
mov
dec
cltd
jno
mov
das
and
mov
imul
sti
int3
stc
xor
fisubs
fldt
ds
and
fdivrl
fidivl
iret
into
lahf
icebp
lea
mov
nop
sub
les
xchg
push
adc
fmull
shll
sahf
mov
mov
dec
aam
loope
sahf
sub
imul
outsb
sub
das
hlt
dec
sahf
adc
xchg
rclb
sbb
leave
bound
out
arpl
mov
sbb
push
xchg
cli
add
xchg
int
cmpsl
nop
xor
popa
ret
add
mov
out
xchg
sub
lods
pop
sub
sbb
adc
fistpl
fsts
or
push
xlat
inc
or
xchg
cmp
jg
ja
je
in
adc
adcb
inc
fwait
add
cmpsb
insl
cmp
ljmp
cwtl
sbb
xchg
cltd
repnz
mov
call
push
pushf
std
jp
lods
jne
in
in
jb
pop
xor
gs
ret
jecxz
add
aaa
push
ljmp
repnz
inc
xor
hlt
cmp
test
inc
mov
or
add
ret
pop
sbb
or
mov
and
mov
mov
cmp
mov
int
lcall
std
dec
push
cli
and
xlat
jae
mov
inc
test
fldt
shrl
in
pop
cmpsb
mov
mov
mov
sbb
push
push
mov
pop
or
or
lods
push
mov
mov
cld
mov
icebp
sbb
movsb
aad
pop
mov
mov
cld
add
loopne
pop
in
out
sbb
fadd
lret
xchg
push
rorb
mov
adc
sub
mov
ficomps
push
inc
lock
inc
jne
jmp
mov
imul
adc
push
pop
inc
int3
data16
xlat
push
xor
das
fiaddl
xchg
lret
xlat
data16
sub
mov
mov
in
movsb
mov
aad
xlat
adc
pop
int3
ret
push
enter
pushf
out
push
fsubrs
xchg
sbb
xchg
cmp
pop
xchg
push
shlb
adc
shr
pop
xor
fdiv
mov
pop
dec
dec
inc
sub
or
mov
rcrb
jl
out
aam
pop
adc
rcrl
aas
test
adc
pop
outsb
adcb
sti
jmp
cmp
rclb
iret
test
jecxz
pop
push
in
push
adc
cmp
int
push
shll
int3
mov
popa
cli
mov
and
daa
and
aaa
daa
push
loope
stc
cld
fildll
mov
mov
sahf
in
loope
popf
pushf
adc
pusha
add
fildl
mov
xlat
cmp
mov
dec
jmp
pop
fdivl
push
fucomi
sub
rcrl
mov
inc
fisubrl
rcrb
mov
xchg
push
aas
data16
push
mov
aad
inc
repnz
push
hlt
mov
cwtl
lock
outsb
jbe
mov
lds
add
ds
enter
pop
mov
cmpsl
inc
xchg
aas
das
test
adc
fstps
sub
fwait
insb
mov
pop
sbb
push
test
and
push
xchg
cld
adc
ljmp
sub
mov
lcall
je
mov
sbb
ds
pop
mov
pop
push
addr16
loopne
sub
jg
lods
js
dec
ficoms
pop
repnz
pop
push
test
sar
lods
inc
and
sub
cmc
out
lret
movsb
xchg
jl
mov
scas
fisubrl
fsubrp
and
dec
mov
xchg
jbe
sub
loope
push
sbb
push
jae
in
and
int3
push
nop
mov
scas
jae
and
ficoms
aad
orl
cmpsb
push
pop
into
push
dec
jp
imul
xchg
mov
lret
xchg
jge
jge
add
sbb
mov
mov
inc
cltd
jge
stos
insl
enter
or
and
adc
mov
popa
lret
jg
int
ret
mov
in
fs
les
inc
jle
jne
pop
mov
push
or
iret
inc
lcall
xchg
mov
outsb
ds
or
xorl
mov
cmpsl
xchg
push
outsl
adc
les
add
add
add
cld
adc
jb
in
int
and
test
and
fidivrs
inc
rcll
fs
rcrb
xchg
mov
sahf
arpl
xor
xor
test
inc
cmp
add
scas
xor
call
xchg
into
movsl
js
insb
adc
push
push
pop
outsb
mov
lret
out
xchg
ljmp
push
enter
adc
jg
sub
xchg
push
aad
iret
adc
and
sub
pusha
rclb
loopne
xchg
popf
imul
push
loope
shr
mov
or
aas
mov
imul
pop
xor
imul
enter
mov
loop
cmp
std
mov
jecxz
push
and
or
xlat
or
inc
sbb
adc
je
jg
mov
or
fsubr
js
inc
inc
xor
in
int
arpl
test
sahf
push
jne
push
cmc
mov
rorl
fsubr
into
sbb
cmc
mov
cs
mov
xchg
ljmp
mov
scas
adc
and
push
cmp
mov
es
dec
push
and
out
addr16
sbb
pop
xchg
imul
pop
sbb
dec
test
lcall
cmp
insb
add
aaa
cmpl
add
sbb
aad
call
lea
fsubrp
add
and
jle,pt
or
dec
ja
mov
pop
dec
add
test
add
cmpsb
push
lea
pushf
sarl
pop
sbbb
daa
jo
and
xor
bound
in
sub
or
aam
fdivrl
loopne
mov
or
cwtl
out
out
test
mov
test
cmova
fimull
jns
dec
cmc
nop
cltd
cld
movsl
inc
sub
jmp
adc
popa
mov
test
push
popl
cli
add
cmpsl
sbb
inc
adc
push
inc
mov
fwait
bound
inc
mov
into
aas
or
cmp
ret
pushf
push
hlt
or
and
push
add
jnp
test
neg
xor
popa
push
pusha
sub
fimuls
xorl
adc
add
out
ret
and
mov
jecxz
cmp
mov
pop
mov
and
adc
popa
inc
incb
pop
cmpsl
jle
fcmovbe
data16
pop
dec
repnz
mov
repnz
mov
and
ret
mov
nop
in
push
enter
outsl
dec
int
mov
repz
mov
hlt
or
pop
ret
push
mov
lods
testl
sbb
scas
jb
xor
adc
fs
call
ljmp
andb
std
aam
test
rclb
pop
rcll
stc
inc
mov
fstpl
dec
pxor
or
lahf
mov
stos
inc
addb
cmpsb
inc
xchg
jp
ljmp
and
mov
pushf
jbe
fcoms
pop
adc
stos
enter
sar
js
aam
out
pop
cmp
lock
pop
sbb
jp
fiaddl
call
imul
fiadds
out
call
cmp
pop
loop
xchg
inc
xchg
adc
xor
cmovp
arpl
inc
mov
in
sub
sub
js
icebp
mov
mov
push
fsubl
push
adc
or
cmpb
into
es
inc
cltd
add
cmpsb
push
dec
mov
es
comiss
sub
xor
fildll
clc
xchg
sbb
mov
clc
mov
faddp
out
dec
mov
push
add
repz
xchg
loop
sbb
add
aad
push
push
scas
sub
and
movsl
sbb
aad
push
shll
sti
mov
in
repnz
adc
scas
cmp
xorps
and
sub
or
rcrb
test
bndldx
push
cmp
movsl
rcll
jbe
sub
xor
aas
icebp
or
xor
sbb
inc
xlat
out
push
icebp
arpl
cs
sti
sub
cmc
rolb
inc
or
inc
and
push
sbb
pop
adc
inc
sbb
lahf
int
jle
loope
sbb
pushf
add
cmpl
inc
std
or
push
iret
out
jp
cwtl
roll
mov
pop
stos
das
pushf
lock
xor
mov
aam
lea
icebp
outsl
daa
cmc
pop
jge
bound
and
ss
rorl
aam
mov
xchg
cmp
cmp
add
repnz
mov
inc
and
popf
mov
jecxz
inc
add
not
sub
push
cmp
scas
pop
adc
cs
lahf
out
mov
aam
cli
lods
int3
jo
shlb
lds
mov
dec
pop
lahf
mov
pop
into
rcrl
inc
push
out
cld
in
out
pop
out
adc
scas
push
mov
sub
ror
jns
jg
cmpsb
lea
push
pop
push
enter
push
stos
jb
mov
bound
fsubrs
jae
mov
rclb
jp
movsl
inc
cmp
je
daa
in
je
or
jecxz
ret
push
dec
aas
hlt
pushl
jle
add
fldl
test
cli
lods
dec
mov
in
push
ret
pop
orl
test
stos
push
pop
out
sbb
mov
push
sbbl
jecxz
gs
nop
dec
mov
ror
imul
add
sbb
sbbb
les
push
adc
or
pop
lods
mov
in
pop
jle
adc
insb
aaa
repnz
or
jno
xchg
js
gs
and
cmp
cmpsl
dec
mov
add
xor
pop
outsl
out
lods
leave
daa
mov
push
pop
call
frstor
je
sub
pop
sub
mov
jno
mov
cmc
cmp
insb
mov
push
dec
insl
jb
andb
pop
outsb
and
sub
fisubrl
lahf
repnz
ret
pop
icebp
sbbb
xchg
ds
sub
jns
andl
push
add
cld
xchg
add
add
adc
insb
or
fdivr
inc
mov
lds
insl
dec
ficomps
out
test
test
ss
je
mov
fisubrs
lret
cltd
xchg
nop
add
sub
jnp
test
in
imul
insb
or
js
arpl
jg
xor
cmp
xor
push
ret
mov
fisubrs
inc
orb
test
pop
mov
inc
scas
cmp
push
movsb
arpl
repnz
adc
push
inc
pop
into
outsb
jg
mov
decb
and
fndisi(8087
pusha
push
scas
sbb
xor
sbb
lahf
movsl
sbb
xchg
pop
lods
movsb
lret
add
and
or
inc
inc
sbb
inc
cmc
les
ljmp
lods
icebp
sbb
adc
mov
imul
incb
xchg
and
dec
adc
inc
adc
pop
lods
xchg
iret
out
or
inc
inc
mov
push
out
mov
xchg
jae
inc
sub
and
stos
daa
fnstenv
rorb
push
addb
mov
mov
ret
adc
inc
push
jg
lock
inc
adc
xchg
lcall
sbb
shl
add
out
inc
bound
dec
jmp
mov
shlb
or
ret
int3
cmovg
push
or
adc
ret
add
inc
popa
mov
mov
push
mov
sub
mov
inc
faddl
or
daa
and
nop
sbb
dec
sub
clc
cmpsl
jge
xor
push
sbb
dec
or
pusha
call
nop
je
mov
daa
and
lcall
push
xchg
mov
adc
fiadds
push
inc
jno
fisttps
pop
jl
hlt
adc
xchg
mov
inc
in
add
pop
addr16
dec
in
js
jge
imulb
mov
and
mov
xchg
fildl
and
hlt
inc
lea
icebp
aaa
aam
push
pop
imulb
xchg
lock
or
in
inc
or
add
insl
fsubr
sub
jge
adc
inc
testw
hlt
mov
add
xchg
inc
sti
sbb
call
jl
aad
mov
in
fdivs
fcmovne
fdivrs
jb
pop
testl
ljmp
js
mov
sbb
or
sub
pop
loopne
repz
testb
add
cld
push
cmp
jmp
and
pop
stos
sahf
push
push
ljmp
cmpsb
adc
sbb
sbb
push
dec
cmp
sbb
scas
std
clc
mov
adc
xchg
sbb
cli
push
xchg
pop
dec
rorl
cmp
arpl
ret
outsb
mov
jmp
rcl
pop
cmp
cmpsb
data16
or
and
lahf
shlb
push
in
filds
lods
xor
icebp
cmp
mov
scas
dec
icebp
in
push
xlat
mov
lret
imul
add
out
insl
jecxz
inc
cwtl
pop
sub
or
ds
jbe
insb
xor
pop
out
push
pop
fstp
pop
dec
sub
inc
sub
imul
ret
inc
inc
push
inc
movsb
ret
cmp
add
sbb
mov
popa
pop
xor
lahf
popf
pusha
pusha
and
sub
ds
testl
in
test
loop
scas
out
lock
in
in
mov
lcall
call
test
mov
dec
bound
call
ja
push
inc
push
mov
fdivp
mov
sub
mov
push
stc
js
jmp
out
dec
fstpl
adc
jle
fsubs
inc
pop
add
jge
mov
aas
nop
movsl
sub
fstpl
sbb
cwtl
or
mov
inc
xadd
xchg
xor
adc
push
fdivrl
fs
out
jecxz
cmp
add
jnp,pn
mov
or
negb
mov
sub
pop
jmp
mov
fyl2x
bound
push
sub
mov
shll
ja
clc
or
and
lea
out
in
sbb
adc
pop
fistpll
pushf
xlat
dec
cmp
mov
pop
xor
mov
ret
out
ret
mov
cmp
inc
decb
in
sbb
cmp
sahf
inc
push
fidivrl
mov
test
adc
push
repz
imul
ret
mov
cmpl
mov
ret
pop
jo
scas
daa
push
ret
inc
mov
push
sbb
xchg
neg
xchg
mov
test
add
lret
pusha
mov
lds
sbb
rolb
clc
jle
add
neg
mov
lcall
cltd
push
out
mov
decl
movsb
outsl
dec
ret
jo
inc
fbstp
or
or
test
cmp
jmp
or
add
mov
cltd
and
sbb
and
lods
xchg
and
nop
add
jge
in
shrl
cwtl
xor
xor
mov
push
aam
sub
in
cmp
and
insb
jle
jne
inc
loop
hlt
mov
xchg
es
mov
or
ret
clc
enter
mov
push
adc
inc
andl
in
and
pop
daa
xrelease
xchg
xor
jo
cmp
idivl
add
xor
mov
shrb
pop
dec
xlat
add
inc
xchg
pop
fwait
lret
jne
or
pushf
sbb
xchg
into
or
adc
add
inc
in
jle
jo
push
lcall
ds
pop
cmp
out
leave
je
mov
mov
call
xchg
push
test
mov
in
hlt
mov
jne
pop
mov
cli
in
jb
dec
cmpsb
gs
addr16
ljmp
cmp
dec
enter
aaa
push
sub
push
sub
pop
sub
clc
pop
ds
add
repz
dec
mov
xorb
mov
addr16
rorb
jo
xor
aaa
xchg
dec
jo
mov
test
testl
lds
push
incl
or
dec
aaa
stc
push
adc
scas
and
dec
push
ret
lds
pop
cmp
aad
pop
inc
xor
mov
pop
pushw
push
mov
fs
jb
xor
sub
hlt
cmp
ret
pop
xor
adc
lahf
fdivs
fldt
pop
jmp
sub
int3
out
mov
in
lds
mov
mov
sbb
into
xor
jmp
jno
rorl
test
movsl
rcll
add
inc
mov
scas
lahf
fnstsw
fs
cmp
shrl
insb
pop
lret
and
outsl
dec
insl
adc
popa
call
mov
jne
in
mov
inc
push
mov
pop
dec
and
js
out
scas
ss
cmp
mov
mov
sub
xchg
sahf
std
cmp
loopne
jnp
scas
adc
or
repnz
mov
mov
push
dec
cwtl
dec
shll
mov
test
out
xchg
mov
sarb
fisttpll
inc
cmp
sub
int
enter
jo
ret
cmpsl
into
sub
neg
adc
mov
popa
mov
xchg
xchg
inc
std
push
pop
jmp
test
cli
jp
outsb
inc
data16
push
jl
inc
movsl
push
mov
test
push
or
jge
gs
clc
adc
xor
push
mov
jo
add
or
mov
in
push
xlat
std
insb
lods
xor
xchg
scas
shlb
in
cmpsb
inc
ljmp
shr
mov
push
sub
sub
xchg
lods
sbb
dec
stos
or
sahf
and
shl
dec
repnz
or
mov
cmp
sbb
pop
je
fisttps
mov
daa
test
mov
inc
jmp
es
loopne
loope,pn
cmc
jle
ss
lret
ret
outsl
push
mov
sub
mov
xchg
andb
push
add
dec
mov
icebp
jle
dec
vmovupd
pop
into
pop
dec
mov
dec
je
ret
rorl
sub
and
or
fs
fimuls
int3
loope
push
icebp
jle
jp
leave
mov
stc
sub
and
adc
jnp
dec
or
fwait
or
hlt
push
inc
insb
cli
push
xlat
mov
outsb
cmp
dec
mov
mov
xchg
push
pop
ljmp
and
inc
fs
add
cmp
fwait
lret
lcall
xchg
sahf
dec
inc
or
aaa
adc
fcomps
inc
xchg
roll
das
nop
test
inc
adc
sahf
inc
insb
dec
out
xchg
xchg
pop
adc
and
sub
cmp
clc
out
dec
shl
test
jmp
data16
popf
test
inc
lret
je
mov
in
test
lods
or
push
std
inc
dec
adc
add
pop
and
jbe
insb
and
lcall
xchg
pop
outsb
bound
xor
lcall
clc
sbb
insl
mov
scas
in
adc
mov
fcompl
js
cmp
cmp
inc
push
out
mov
dec
xchg
nop
pop
int
aaa
int
pop
popa
add
mov
pop
mov
xchg
push
xor
cmp
aaa
dec
mov
std
jl
xchg
lcall
xchg
mov
mov
xchg
push
pusha
pop
ret
and
ds
cmc
jns
ljmp
addr16
jb
lret
popl
sub
into
adc
lcall
and
cmp
lahf
or
adc
fisttpl
or
sub
shlb
imulb
pop
es
jp
dec
pop
mov
jbe
or
pop
mov
jae
inc
cmp
enter
or
push
jnp
cld
pop
sbb
incl
inc
ja
and
add
out
inc
jge
insl
sub
loope
cmpb
aam
pop
movsl
int
mov
dec
sub
inc
jmp
hlt
cs
fsubp
mov
add
dec
fists
mov
push
movsl
cltd
xchg
nop
pop
test
call
mov
pop
add
adc
mov
outsb
neg
pop
mov
inc
xchg
out
push
mov
outsb
xchg
xchg
xor
inc
inc
sub
daa
mov
or
loopne
popf
adc
mov
fisttpll
mov
adc
scas
or
sub
out
mov
push
push
jmp
test
push
add
jno
pop
dec
out
or
test
imul
sub
cwtd
and
lods
and
dec
in
mov
std
aas
push
call
loopne
test
pop
fcmovb
fwait
aaa
clc
jge
fwait
sub
fstpt
int
ljmp
dec
mov
cmc
pop
or
mov
pop
inc
cmc
push
pop
pop
outsb
xor
jno
push
or
repz
cmp
mov
push
mov
jne
fnstenv
shrl
and
test
mov
subw
add
push
or
aam
cmp
jg
test
repz
stc
cld
adc
cwtl
push
adc
out
inc
testl
shll
cmp
or
popf
mov
jo
jo
cmp
aam
xlat
adc
lds
lods
std
sahf
pop
scas
xchg
mov
add
sarb
fwait
adc
and
pop
pop
push
loop
jl
imul
mov
xchg
ficompl
ja
xor
push
pusha
mov
fcom
enter
inc
into
adc
pop
fwait
scas
iret
cmp
loop
and
into
dec
mov
push
mov
icebp
xor
in
jg
push
nop
movsb
push
jg
loopne
cmpsb
mov
xchg
dec
sbb
inc
adc
jl
rcr
mov
mov
push
or
clc
jb
lret
inc
cmp
cmp
aad
pop
dec
jmp
out
pop
dec
push
and
mov
loope
xchg
push
lods
jp
cmp
sub
jnp
fsubs
adc
test
test
xor
sub
rcrb
clc
lcall
lds
adc
lock
dec
xchg
mov
cmp
adc
cltd
mov
out
jl
cmp
push
data16
xor
in
mov
divb
mov
cmc
icebp
jl
cld
fwait
int3
or
jo
sarb
cmc
jmp
mov
cld
dec
jl
mov
sbb
js
fs
pop
jns
aam
push
clc
cmp
lahf
inc
xchg
cmpsb
or
mov
popa
mov
mov
dec
bound
inc
insl
dec
inc
test
cli
mov
outsl
rcrb
ret
jno
fldenv
dec
add
jnp
loope
inc
aas
xchg
insb
push
ja
or
push
addr16
xor
mov
xchg
sub
cmpsl
cmp
mov
shll
cmp
jo
mov
inc
sub
or
mov
push
pop
pop
push
mov
push
sbb
vsqrtps
or
xchg
jg
mov
xchg
testl
in
dec
push
insl
pop
ss
sub
fadd
dec
push
mov
aaa
mov
mov
or
lea
mov
jnp
cltd
xlat
and
lea
inc
sub
lds
filds
add
fstpl
pop
repz
gs
dec
inc
push
call
inc
or
or
dec
movb
sbb
mov
and
cs
mov
push
xor
and
or
add
and
aam
pusha
and
jg
sahf
ljmp
push
mov
pushf
push
jbe
xchg
adc
clc
dec
jae
cs
adc
add
out
cmpsb
and
in
test
adcb
xchg
sub
es
sub
imul
out
js
les
sarb
pop
jo
add
add
mov
stos
iret
xchg
outsl
and
cmp
xchg
and
daa
xchg
sbb
imul
push
imul
lods
pop
sarb
enter
jle
jmp
adc
andl
bound
pushf
dec
testl
mov
xchg
sbb
cmp
popf
pop
sbb
mov
imul
xchg
and
dec
xor
cmpl
loope
pop
cmpsb
dec
mov
cmp
sub
ret
mov
adc
mov
xor
fcmovnb
mov
mov
add
arpl
mov
aaa
sbb
stos
mov
out
out
in
in
cmp
pop
sbb
sbb
hlt
mov
mov
xchg
fidivl
dec
nop
fs
inc
and
or
jg
xchg
and
jns
pop
jae
adc
mov
repz
mov
cld
pushl
nop
push
pop
aaa
inc
xor
cs
dec
call
rcr
outsl
or
dec
fs
hlt
jmp
js
movsb
mov
mov
sub
repz
loop
mov
sbb
loope
scas
sbb
jb
jns
testl
inc
negl
jge
mov
out
dec
mov
lds
ljmp
adc
xor
pop
xlat
mov
negb
mov
jbe
dec
loop
mov
loopne
cmpsb
movsb
loop
repz
dec
sbb
mov
cmp
cmpsb
ss
mov
sarl
movsb
test
mov
cmp
rclb
mov
mov
movsl
adc
in
popf
jle
in
shl
mov
xchg
rclb
fdivl
lret
push
ss
mov
or
enter
cmp
ror
xlat
int3
pop
or
mov
imul
repnz
lret
or
popf
jae
dec
mov
nop
iret
xor
rolb
js
xor
jp
jp
ss
adc
popf
adc
ds
and
dec
fsts
loope
inc
sahf
xchg
jno
push
shll
mov
push
add
outsl
fdivp
test
mov
insl
pop
or
daa
pop
and
leave
loopne
outsb
xor
das
cmp
xor
stos
pop
loope
pop
push
sbb
xchg
lea
jnp
mov
jg
int3
fisubrs
push
pop
mov
sbb
xchg
sub
adcb
les
or
fs
mov
mov
test
scas
in
hlt
fildl
lds
adc
inc
fsts
in
insl
popa
jo
incb
fidivs
popa
dec
repz
pop
shll
je
mov
pop
cs
lret
add
dec
jge
push
cmp
loop,pn
push
push
cli
adcl
jecxz
icebp
mov
mov
into
out
es
out
jge
and
add
lea
fsubrl
sub
aad
mov
adc
sbb
inc
cmp
int3
xchg
lcall
lahf
in
inc
repnz
lcall
mov
pop
jmp
notl
mov
je
xchg
std
lret
pushf
imul
add
popa
jle
push
push
adc
pusha
sub
sti
test
int3
add
push
pop
popa
jns
push
and
stc
xor
mov
jmp
sbb
cmpsl
je
sbb
sbb
or
push
jnp
pushf
out
mov
pusha
and
push
repnz
adc
xchg
stos
adc
add
imul
xchg
fistpll
loope
or
or
test
push
xchg
sbb
xor
movsb
shrb
lea
gs
mov
mov
jmp
leave
mov
dec
mull
sub
mov
fs
adc
rorb
cld
movl
pusha
or
imul
mov
movsl
icebp
add
or
and
mov
ss
cmc
and
in
pop
push
or
xchg
je
cmp
in
inc
jecxz
lea
out
sahf
push
pop
xchg
daa
ljmpw
scas
ds
mov
rorl
outsb
pushf
cmp
or
sub
lcall
std
inc
adc
dec
rorl
leave
int
push
adc
enter
mov
pop
out
mov
popa
cmp
insb
stos
fdivrs
fwait
xor
lods
xor
ficoms
xor
ljmp
push
pop
mov
or
cmp
mov
mov
dec
pop
test
into
sub
rcll
mov
aaa
add
pop
cli
push
jecxz
mov
clc
dec
mov
jb
jns
pop
ds
mov
cmp
hlt
or
pop
ficoms
leave
icebp
fs
test
mov
stos
push
mov
icebp
mov
and
xor
xchg
andl
xor
mov
cmpsb
pop
or
iret
fiaddl
add
shl
orl
push
or
xor
repz
adc
bound
inc
int3
in
pop
lock
mov
sub
jg
out
cmp
cmp
mov
test
mov
xchg
sahf
rcl
mov
or
xchg
mov
outsl
repnz
lcall
fnstenv
and
xor
aam
mov
dec
loope
ret
inc
lds
or
enter
xchg
pop
sbb
js
int
jns
rcr
ret
cmp
sbb
xorl
xchg
add
in
jae
push
fcomps
stos
movsb
cmp
int
cli
iret
sbb
jecxz
inc
pop
jecxz
imul
scas
mov
repnz
aaa
sbb
jp
mov
jno
or
inc
ret
xchg
lods
cmp
add
das
das
mov
mov
data16
jecxz
jle
icebp
lcall
cmp
sti
fsub
fucomi
sub
cmp
sub
mov
pop
jmp
fdivrs
sbb
jbe
mov
adc
xor
jp
sub
shrl
dec
mov
in
add
fisttpl
and
and
mov
imul
cltd
in
cmp
cs
sbbb
jmp
les
pop
dec
in
lcall
in
cltd
lret
orl
call
outsb
lods
jo
stos
daa
out
jp
je
adc
push
xor
push
xchg
dec
push
shll
push
jb
sbb
ss
push
xlat
add
xchg
lea
mov
insl
rcrb
adc
cwtl
push
push
xor
sub
fcmovnu
mov
shll
mov
xor
push
and
pop
sbb
aad
cmpsb
or
fsubrl
loopne
shlb
ret
stc
in
or
popf
adc
inc
push
fidivrs
cli
cli
mov
movsl
sub
mov
cmp
adc
xor
xchg
inc
mov
das
pop
mov
jo
jle
mov
add
cmc
shll
repz
sub
aas
dec
and
call
xor
aaa
mov
dec
dec
in
sbb
dec
pop
mov
cmpsb
mov
cmpsb
jl
inc
filds
sub
out
jg
movsb
enter
fidivs
out
adc
add
iret
dec
mov
cmp
xchg
pop
and
inc
xor
repz
sub
mov
ffree
mov
adc
stc
aas
orl
andl
or
sahf
xchg
cmp
cmp
jmp
stc
xor
das
into
xor
imul
sub
test
ja
lods
mov
iret
gs
pop
add
mov
repnz
test
mov
jo
test
mov
cmp
push
mov
mov
sub
jae
adc
add
in
push
daa
push
sti
in
inc
std
divb
iret
lret
mov
jne
aaa
in
clc
in
sbb
xchg
xor
loope
and
mov
jle
stos
dec
aaa
pop
sub
sub
sbb
fisubl
mov
push
jae
loope
ljmp
jmp
push
jmp
mov
ds
dec
aas
lods
dec
and
loopne
xchg
pop
xor
push
pop
lods
lret
int
insb
rolb
or
pushf
arpl
popf
fsts
jl
lcall
dec
lock
outsl
mov
push
into
push
jmp
add
dec
mov
rcr
loop
arpl
loope
movsb
stc
add
cwtl
out
nop
mov
popa
lods
xchg
in
add
or
les
push
cmpsl
and
pop
sub
cli
or
dec
shrb
add
outsl
lahf
fucomip
add
xchg
imul
fwait
pushf
das
mov
in
out
pushl
inc
movsb
sub
jns
sub
sahf
in
mov
test
xchg
mov
idivb
addr16
xorb
inc
insl
das
fcomps
push
cmp
jl
push
jne
dec
lcall
fstpl
out
sti
clc
sbb
loop
shlb
push
cli
imul
in
and
scas
aas
das
inc
test
pop
les
call
add
pop
sub
sbb
adc
outsl
lods
ss
or
xchg
stc
jecxz
movsb
push
mov
enter
fldl
in
lods
xchg
dec
mov
movsl
mov
dec
adc
subl
adc
test
cmp
rolb
push
pop
fsubl
lods
int3
imul
pop
ljmp
inc
jno
data16
lea
and
dec
xor
add
addr16
in
stos
lea
inc
dec
dec
and
mov
rcrb
jb
pop
mov
fstl
scas
jge
aaa
lret
add
dec
cmp
jae
lea
xchg
es
and
imul
xor
aas
testl
test
cmp
sbb
pop
sub
insl
ficoml
repz
fisubs
stos
fisubrl
out
or
mov
fldl
sbb
jns
popa
xor
scas
and
jo
mov
pop
mov
xchg
in
add
jne
ljmp
ret
mov
test
and
push
cmc
out
shll
jge
dec
jno
fxch
jb
fiadds
adc
rorl
xor
pop
repnz
ljmp
and
inc
fwait
and
int3
and
mov
dec
dec
or
rcll
insb
add
arpl
push
int
mov
jmp
push
jno
jmp
sub
scas
aam
adc
xlat
out
add
mov
std
xor
leave
popf
and
push
xchg
jmp
xor
aaa
shl
jge
fcomps
add
xchg
pop
sbb
push
outsl
imul
jl
ja
mov
fcomps
fidivrl
dec
pop
sbb
js
fdivs
ret
sub
mov
leave
addl
test
xchg
or
dec
cs
daa
jmp
or
sti
std
lret
ss
mov
xchg
cmp
lret
test
ret
cmc
push
cmp
pop
cwtl
rorb
and
pushf
test
leave
popf
lods
mov
or
orb
dec
sbb
dec
push
adc
ret
nop
out
adc
sbb
inc
xchg
roll
fisubs
jb
adc
das
inc
dec
dec
pop
mov
sub
adc
aam
dec
ljmp
adc
push
cmpsl
jg
mov
stos
aas
cmp
loope
inc
jp
mov
or
fisubs
data16
out
lds
and
fidivrs
loop
vphaddbw
jge,pn
repnz
mov
loopne
dec
lods
inc
cltd
and
xchg
adc
add
xor
dec
mov
cmpsb
js
jns
xchg
push
jo
arpl
fs
sbb
gs
bnd
inc
sbb
dec
les
leave
mov
cmpsl
jmp
dec
int
xor
pusha
cmp
mov
jge
xor
movsl
xchg
idivb
bound
add
sub
pop
dec
pushf
sti
das
mov
sbb
add
sbb
cwtl
mov
stc
imul
push
cs
add
cmp
es
cmp
inc
adc
xchg
imul
scas
xchg
sarl
or
inc
xchg
sub
mov
xchg
cmp
mov
subb
cmpl
inc
cwtl
lds
imul
jbe
cmp
push
xlat
rcll
hlt
pop
adc
mov
sbb
insl
mov
into
mov
shlb
out
or
sub
xor
push
daa
ds
mov
push
std
push
repz
shll
pop
inc
int3
xchg
mov
aad
loopne
imul
lock
mov
adc
ret
sti
inc
xchg
iret
dec
out
aam
lahf
xchg
xchg
int
mov
jo
repnz
cmp
push
test
ja
test
dec
loope
xor
push
arpl
dec
mov
adc
fadds
std
ljmp
mov
cmpsb
mov
cmpsb
or
mov
fcmovne
add
rorl
jns
stos
addr16
sbb
xchg
jno
adcl
pop
pop
scas
adc
push
lret
mov
inc
gs
adc
cmpsl
jp
push
or
jg
es
rorl
jns
hlt
test
mov
out
jmp
int
xor
ds
pop
loope
enter
roll
adc
ret
fcoml
das
mov
sbb
xchg
pop
lret
fisubrl
xchg
rclb
hlt
jne
adcw
or
std
div
mov
mov
mov
cmpsb
test
shlb
sub
or
xor
pop
mov
test
sub
jo
xchg
mov
insb
fidivrs
mov
xor
jb
and
add
jb
mov
movsb
leave
mov
test
ret
push
pop
loope
xchg
icebp
outsl
leave
mov
out
adc
add
dec
sti
iret
decb
and
test
dec
dec
mov
scas
imul
rclb
ds
es
hlt
pop
add
jmp
sar
test
mov
push
inc
inc
std
arpl
jnp
xchg
adc
mov
and
jae
push
jno
inc
outsb
cmp
adc
mov
xchg
jg
pushf
mov
in
ds
sub
clc
test
pop
test
push
sbb
and
dec
cwtl
cmp
jl
cmpb
fstpl
jae
pop
mov
movsb
cwtl
hlt
sbb
or
mov
aam
pop
inc
mov
in
loopne
sub
cld
jbe
xchg
out
jle
mov
cltd
sbbb
ret
mov
push
test
movsl
movl
imull
mov
sub
jo
daa
dec
idivb
iret
aas
jo
mov
stos
lea
add
push
adc
cmp
enter
into
push
sti
test
insl
sbb
rorl
enter
test
mov
nop
jg
sbb
imul
out
shl
cld
adc
jmp
lds
insb
inc
pop
add
adc
mov
lret
push
xchg
insl
sub
or
imul
cld
cmpsb
pop
scas
xor
cs
sub
jle
movsl
jle
mov
jae
mov
stc
rcrl
into
or
sbb
mov
outsl
scas
mov
popf
lock
les
addr16
push
push
add
sub
xor
jle
push
xchg
fucompp
ror
jae
sub
mov
cmpsl
test
sahf
shll
out
xchg
or
in
mov
xchg
jne
gs
jl
movsb
repnz
jbe
lea
push
xchg
int
mov
repnz
xor
xor
loopne
push
mov
mov
rorl
pmaddwd
sahf
add
mov
mov
pop
mov
jae
jb
push
ds
ret
or
fisubl
stos
add
mov
adc
test
add
cmp
int3
lahf
push
ds
fcoml
cwtl
divb
inc
stos
or
xlat
sbb
pop
add
shrl
iret
pop
rcr
leave
fists
pop
fsubs
shl
jnp
in
psubw
push
movsb
xor
lock
jns
test
out
and
mov
adc
shlb
and
and
loopne
push
test
mov
mov
roll
stc
gs
jnp
daa
xchg
adc
rcrl
push
movsb
roll
jns
dec
mov
xchg
sti
cmpsb
add
inc
xor
out
or
stos
push
fisttps
icebp
pop
in
inc
sbb
stc
dec
mov
mov
sbb
test
pop
inc
or
sub
daa
ret
mov
cli
lods
incb
jns
or
xlat
pop
and
out
xchg
xchg
adc
and
cmpl
movsl
pop
and
rolb
lock
es
cmp
xlat
xchg
ss
stos
lret
dec
xorb
dec
mov
mov
pop
xor
jnp
push
pop
sahf
test
fcomp
push
pop
jecxz
sub
push
jne
into
aas
jno
inc
rorl
mov
sti
cwtl
dec
stc
mov
mov
mov
fisubs
mov
out
dec
sub
pop
cmp
stos
mov
lret
cmp
enter
cmp
push
and
xchg
scas
pop
aaa
pop
orb
adc
in
cmp
xchg
jecxz
movlps
ret
xor
adc
insb
dec
stc
pop
adc
mov
in
rcr
and
sub
hlt
call
mov
sub
repnz
les
cwtl
jmp
pop
mov
call
bound
sub
xorl
push
outsb
push
in
or
sub
push
or
dec
aas
xor
push
repz
sbb
pop
xor
adcb
push
sbb
push
mov
test
push
sbb
sti
roll
dec
pop
scas
je
sub
scas
sarb
mov
pop
and
mov
popa
add
cmpsl
jbe
insl
lret
subl
cmp
push
jo
push
pop
or
xchg
lds
fildll
shrd
imul
push
pop
sbb
in
aaa
pushf
fistps
shr
sub
aam
add
adc
shr
mov
sbbl
addr16
jmp
jno
notl
push
sbb
and
ds
mov
xchg
rcll
inc
lea
mov
dec
imul
sub
and
jns
push
cwtl
and
jp
cmp
mov
das
dec
inc
imul
and
add
test
inc
nop
sbbl
adc
sahf
push
push
xchg
test
push
pusha
add
push
sub
sbb
vshufps
dec
dec
pushf
leave
imul
adc
out
cwtl
adc
adc
mov
push
mov
dec
push
notl
stos
out
and
jecxz
fists
repz
push
xorb
sub
icebp
bound
addr16
xchg
add
sbb
add
mov
add
xor
adcb
xchg
cs
aaa
or
dec
out
mov
shl
je
test
pusha
dec
outsb
cmp
and
push
call
mov
add
cmpsb
icebp
shrb
jmp
nop
push
or
insl
xor
mov
mov
cwtl
shrb
mov
lock
mov
pop
std
jne
bound
shll
cmc
insl
ss
lret
xchg
call
nop
adc
push
pop
loopne
testb
xor
mov
aaa
lahf
hlt
insl
stos
pop
and
add
and
and
notb
rclb
jecxz
and
stc
jp
cld
jg
mov
daa
sub
xchg
pop
lret
xor
sbb
insb
arpl
xor
lods
sti
enter
fimull
pop
jae
push
stc
scas
mov
int3
mov
sub
and
jnp
adc
out
stos
inc
sbb
push
test
sub
mov
push
out
es
jmp
fmuls
sahf
and
sbbl
fisttpll
jmp
pushf
icebp
push
subb
imul
das
lret
es
pop
fdivrl
enter
ficoml
push
fstpl
mov
mov
mov
les
sahf
cs
add
shll
add
adc
shll
cmpsb
push
js
gs
int
add
test
dec
sbb
stos
cmc
insl
push
sbb
push
cmp
pop
nop
movsl
dec
push
mov
mov
xor
fbld
out
outsw
and
sub
insl
add
cmpl
jns
adc
cmpsb
jno
inc
sbb
imul
lahf
push
adc
push
roll
dec
popa
sar
fstpt
cmp
test
fistpl
lock
lret
pusha
mov
sub
xor
movsb
push
add
push
cmp
dec
addb
repnz
sbb
mov
fisubl
enter
xchg
fistl
adc
add
add
fldt
or
add
jmp
jl
stos
stos
test
mov
cmp
push
rcrl
pop
push
in
lcall
push
ret
mov
mov
lcall
mov
sbb
push
mov
daa
inc
mov
stos
fs
mov
xchg
xchg
fldcw
imul
int3
bound
enter
mov
shlb
lds
mov
mov
data16
jp
push
fistps
je
loopne
xchg
xchg
shlb
sub
psubsw
mov
das
ja
test
lock
clc
cmpsb
scas
mov
xchg
sub
daa
jmp
and
shlb
test
xor
loope
jle
sbb
sbb
addr16
add
insb
and
inc
add
fcompl
mov
ret
mov
movsl
repnz
mov
aas
sub
shrb
push
sbb
adc
lock
mov
clc
out
and
fmull
mov
adcl
shl
dec
and
scas
fwait
pop
lcall
push
inc
lret
lcall
shll
insb
or
xchg
shll
aad
mov
pop
push
mov
test
into
jg
xor
add
aad
test
sbb
lods
inc
into
mov
mov
lcall
shll
pop
xlat
push
imul
adc
mov
cmp
js
mov
imul
aam
popa
dec
jp
jl
mov
or
mov
and
dec
sbb
imul
adc
imul
scas
jecxz
push
add
insl
ret
pop
rcrl
jb
sub
mov
push
imul
cmp
ret
pop
rclb
adc
repnz
xor
and
fwait
adc
adc
ljmp
aaa
xor
pusha
loope
push
xor
bound
outsl
test
sahf
lret
stc
pop
loope
push
ljmp
pop
orb
jle
xor
inc
data16
pop
or
push
xchg
aas
mov
mov
fimuls
jo
xchg
notb
test
fs
es
jp
sub
mov
add
lret
out
push
lods
add
jnp
mov
rclb
test
dec
and
jmp
mov
jbe
push
pop
scas
pop
mov
push
push
mov
stos
enter
jge
adc
ss
inc
jns
xor
fstl
orl
fwait
mov
push
xor
dec
mov
mov
aaa
xchg
inc
sbb
jle
dec
aas
xor
mov
nop
sahf
sub
dec
mov
push
push
bound
sbb
mov
loop
sbb
insb
adc
aad
mov
gs
lahf
mov
jno
mov
out
rcrb
out
or
cmp
movsb
dec
xchg
test
xor
loope
fwait
and
pop
or
sahf
int
les
adc
mov
inc
test
lcall
dec
js
mov
popf
out
cmp
stc
mov
jnp
add
adc
lcall
sbb
dec
shlb
jae
xlat
xor
popf
mov
stc
mov
push
push
sub
dec
test
mov
adc
mov
xor
mov
adc
sbb
mov
mov
mov
adc
push
aad
cmp
data16
jns
loop
sti
lea
push
ja
jge
push
mov
sub
sbb
pop
jno
and
rcll
pop
loopne
sahf
into
and
hlt
inc
pop
mov
mov
clc
repz
dec
mov
aad
adcb
cltd
testl
nop
and
leave
push
loop
div
negb
stos
arpl
clc
cld
mov
lock
add
push
je
adc
cmp
sahf
shrb
push
sub
sub
jb
jle
push
push
test
movsl
in
call
dec
jmp
andl
mov
pop
xorl
push
inc
cmp
insl
jno
stos
jne
lahf
daa
mov
sub
fwait
sbb
insb
cmpsb
lcall
and
cmp
pop
jg
push
jb
stc
aam
movb
rol
mov
loopne
iret
popa
xchg
add
ljmp
xchg
jmp
xchg
pop
int3
jl
and
cmp
loopne
or
mov
test
pop
jle
pusha
fisubl
mov
loope
jbe
or
fidivrl
daa
sub
sub
lds
sahf
or
test
or
test
mov
mov
movsl
sub
mov
mov
and
mov
mov
mov
pusha
fs
mov
ftst
into
jmp
mov
cmp
pop
sub
pop
ja
dec
mov
mov
fsubr
repnz
shll
adc
ficompl
fisubl
outsl
inc
jl
filds
repnz
ret
dec
sub
jns
and
add
mov
das
adc
pusha
or
sub
hlt
xor
rclb
inc
mov
call
hlt
movsl
movsl
inc
outsb
movsl
fmuls
dec
lahf
add
pop
sti
ret
fsubrl
stos
sub
jmp
cwtl
imull
frstor
sub
sti
jbe
notb
lea
cmp
jns
insl
add
push
xchg
shrl
sbb
std
and
idiv
rolb
test
and
mov
xchg
cmp
fstl
rcrb
insb
sahf
xlat
xor
xchg
xor
push
fs
pop
mov
adc
call
lcall
cmpsb
xchg
jecxz
fwait
jl
repnz
pop
aam
lahf
push
roll
pushf
int3
std
xlat
and
sbb
lret
push
mov
adc
in
sarb
mov
das
cld
loop
ss
das
outsl
ficoml
add
xchg
and
movsb
scas
cmpsb
imul
add
xor
jns
nop
or
out
or
or
xor
jo
rcrb
push
pop
cmc
call
sbb
jle
iret
mov
inc
dec
fistps
mov
pop
push
adc
pop
lret
add
ja
mov
insl
pop
imul
inc
fwait
test
push
xchg
movsl
xchg
mov
aad
and
or
shl
pop
and
ds
outsl
sahf
mov
pop
fmuls
in
fwait
push
jp
int
out
shll
lret
push
sahf
dec
xchg
mov
cwtl
cmp
addb
pop
sbb
test
das
nop
mov
adc
sbb
aad
pop
cmp
add
jo
repnz
out
xchg
and
jg
push
lds
imul
cld
sbb
mov
add
pop
repnz
pusha
adc
sbb
mov
sub
pop
lea
xchg
and
sbbl
fmuls
jp
cmp
daa
and
jp
in
jecxz
push
clc
mov
cwtl
xchg
push
xchg
shlb
xchg
rolb
sahf
jg
mov
not
jp
int
fdivl
sbb
test
arpl
add
popa
outsb
push
fidivrl
movb
orl
xor
jecxz
leave
test
pop
pop
push
pop
xchg
sbbb
rol
inc
and
sbb
xchg
adc
lea
scas
int3
pushf
xor
cmp
adc
testl
and
aad
cmc
jbe
cmp
inc
and
ret
mov
cmp
shll
add
mov
add
pop
push
xchg
push
movsb
lret
int3
inc
faddl
popf
test
mov
cmp
and
inc
stc
loope
iret
orb
das
pop
push
das
cmp
sub
pop
jecxz
sbb
cmc
in
xorl
std
mov
arpl
cltd
or
jno
sub
adc
push
or
bound
je
mov
scas
shll
rcll
xor
fwait
xchg
lock
js
xor
movsb
mov
ret
sbb
es
dec
hlt
stos
es
or
push
rorl
enter
repnz
cld
cmpb
pop
imul
and
in
pop
jle
pop
jno
mov
lahf
mov
xor
inc
in
dec
pushf
fsts
mov
rorb
mov
iret
cmpl
mulb
seto
cmp
push
sub
std
and
decl
mov
xor
jns
jbe
sbb
fistpl
out
rol
jg
mov
xor
adc
xchg
sub
cmpsb
movsl
cli
sbb
leave
movsl
popf
stos
lret
stc
dec
mov
scas
adc
fwait
daa
lock
jg
jecxz
push
fsubs
jo
loope
lahf
in
pop
insl
movl
adc
push
test
jecxz
stos
sub
jecxz
ficoml
bound
pop
dec
jb
loopne
int
mov
das
popa
shll
or
mov
cmc
mov
fisttpl
sub
ret
adc
push
aas
mov
pop
adc
out
and
ret
cmp
sub
in
and
mov
push
lods
ljmp
repnz
dec
pop
pop
inc
cmpsb
push
cs
dec
xchg
jmp
pop
stc
and
add
int3
sbb
dec
sbb
rcll
fs
mov
cmc
ret
mov
push
or
aad
sub
int
jae
rcrl
adc
pop
fwait
out
and
pop
push
popa
push
fsubr
sbb
mov
jns
mov
ret
adc
in
push
pop
je
aas
test
dec
and
or
stc
mov
arpl
inc
shrl
mulb
jns
das
push
push
pop
add
and
dec
ja
bound
sbb
mov
into
sbb
out
iret
add
or
xchg
adc
enter
xchg
insb
pop
xchg
xor
dec
repz
ror
in
inc
outsb
inc
mov
or
mov
inc
pop
sub
stos
enter
daa
xchg
fbld
mov
pop
sbb
push
mov
or
js
test
mov
lods
pop
mov
fisttps
push
fs
cmp
xor
loope
enter
shlb
sub
mov
mov
push
mov
mov
sbb
insb
sti
jp
movl
jbe
loopne
xor
sub
and
cmp
bound
and
fldl
cmpsl
sub
int3
cmpsb
mov
cld
jne
loop
mov
lahf
inc
push
push
pop
mov
lock
loope
cmp
mov
nop
pop
int
pop
jne
test
notb
bound
inc
scas
cltd
sbb
add
mov
outsl
xor
test
dec
out
mov
lea
cltd
add
add
aam
js
adc
addr16
or
xchg
dec
pusha
test
int
cmp
outsl
mov
aad
andb
sbb
arpl
ljmp
cmp
and
out
xlat
xchg
xlat
dec
cli
pop
mov
scas
ret
iret
loop
arpl
inc
rcr
mov
ds
scas
or
pop
and
mov
movl
subb
push
xlat
push
push
sbb
outsl
sbb
movsb
inc
mov
xchg
sbb
xchg
mov
push
mov
inc
ret
mov
and
adc
inc
test
adc
std
mov
mov
loope
adc
dec
xchg
or
inc
push
out
xchg
stos
pop
loope
mov
movsl
lret
or
out
fnstenv
aaa
xor
or
movsb
xor
imul
pop
xor
push
into
sbb
xchg
aad
inc
pushf
scas
pop
push
ljmp
testl
mov
dec
js
pop
inc
stc
pushf
or
mov
lock
movsb
jg
mov
pop
test
cmpsb
rorl
call
mov
sub
int
int
filds
ret
pop
loop
mov
in
or
lods
stc
mov
cmp
mov
out
xchg
xchg
mov
popa
das
pop
aas
sub
mov
lea
cmp
jae
add
xor
inc
cltd
dec
push
mov
fs
imul
jmp
mov
xor
popa
push
inc
sub
inc
mov
mov
xor
push
or
add
repnz
cltd
in
fs
jl
xor
add
hlt
aam
sbb
nop
cmp
call
mov
cs
scas
stc
lahf
mov
ss
negl
scas
xchg
sbb
jns
sti
bound
in
mov
ljmp
ljmp
cmpsl
mov
call
cmpb
sub
stos
jmp
es
mov
pop
inc
lods
inc
dec
and
ja
dec
les
jne
cmp
push
jbe
mov
fsubp
sahf
insb
dec
daa
sahf
pusha
nop
cmp
pop
ljmp
sbb
mov
pop
arpl
lods
xchg
popf
jae
ss
or
jmp
push
dec
rcrb
fcompl
mov
rcrb
test
shll
scas
cmp
dec
inc
enter
insl
dec
mov
cmp
xor
movsl
cmp
rcrl
add
mov
movsl
test
std
inc
jecxz
pcmpeqd
dec
add
cld
test
pop
movsb
fnstenv
cmp
das
lods
sub
nop
xchg
or
mov
ret
adc
mov
add
cld
ss
enter
int3
xor
inc
pop
pop
push
lahf
inc
sub
fsubr
hlt
cmp
lahf
ss
cld
push
popfw
popf
fimuls
mov
push
cmp
fsubp
bound
in
add
jle
inc
cmp
mov
xchg
packsswb
lcall
ja
addl
stos
cmp
xchg
mov
clc
adcl
add
sub
cmp
cmpsb
bound
sti
push
sub
pushf
dec
inc
dec
jo
divb
push
add
adcb
dec
hlt
xorl
shll
loope
stc
shl
test
mov
sbb
loopne
iret
cmp
and
insl
imul
push
jg
pop
cwtl
mov
inc
test
repnz
xchg
js
mov
rcll
lods
xor
push
stos
xchg
bound
stos
dec
sub
imul
test
cmp
sahf
std
xchg
fistpll
xor
ja
mov
ret
loop
js
add
push
in
dec
icebp
add
dec
jb
ljmp
enter
and
cmp
lahf
xor
xor
insb
fnstsw
add
pop
cmpsl
mov
mov
ret
push
jg
and
movsl
ret
icebp
mov
pushf
outsl
xchg
mov
push
movl
lods
imul
addr16
hlt
push
call
test
xchg
cmpsb
inc
adc
inc
adc
dec
xor
call
pushf
jecxz
into
imul
pop
arpl
push
popf
mov
ljmp
jmp
or
imul
sbb
xchg
call
jno
punpckhwd
dec
mov
cli
test
es
loopne
xchg
pop
rcl
xor
iret
inc
stos
rcl
out
xchg
lahf
popa
loope
sbb
inc
ret
xchg
clc
jl
sbb
xchg
and
iret
cmp
adc
mov
add
jecxz
cmpsl
inc
rorb
mov
mov
sub
fldcw
clc
jo
outsb
dec
xor
inc
imul
sub
xor
test
push
out
lcall
pop
ljmp
mov
scas
xchg
je
xchg
sti
xchg
sbb
cmp
jp
mov
push
andb
ja
aas
icebp
lods
mov
mov
scas
mov
push
sub
xchg
and
push
sbb
in
cmp
pop
mov
stos
xor
and
add
lea
mov
inc
pop
pop
mov
inc
das
pop
ss
jae
jns
jno
push
nop
mov
hlt
push
pusha
mov
cld
sbb
dec
sub
xchg
lret
xchg
lods
mov
push
mov
push
add
xchg
stos
sbb
psrad
xchg
imull
push
adc
out
sbb
dec
sbb
jb
shl
out
cmpb
push
jae
mov
jmp
adc
fbstp
push
fidivl
movsb
sbb
dec
jmp
enter
fstpt
sbb
mov
xor
call
add
pop
repz
sub
das
mov
or
add
sbb
xlat
adc
sub
stos
sbb
insl
mov
inc
cwtl
repz
mov
and
jge
and
enter
mov
mov
xlat
outsb
cli
out
loop
inc
mov
fisttps
mov
jp
dec
and
nop
rol
mov
push
movsl
cltd
ret
stos
fistpll
adc
ds
fisttpll
pop
popf
popf
sub
mov
lods
add
test
xor
xorb
sarl
dec
incb
popf
adc
and
outsl
ljmp
adc
in
mov
scas
in
scas
movsb
fwait
cs
xchg
push
inc
cmp
add
sub
test
mov
jge
pop
adc
push
push
pusha
dec
sub
addr16
cmc
xchg
xchg
in
lods
ret
pop
cli
inc
jae
sub
jg
jbe
imul
shrl
js
pop
and
insl
cmp
fiaddl
mov
into
pop
cmp
dec
pop
xchg
jge
adc
add
dec
push
pusha
lods
out
jns
sbb
lcall
leave
sti
xor
rclb
sahf
inc
mov
and
mov
dec
mov
mov
movsl
sbb
pop
mov
xlat
pop
pusha
inc
fildl
jnp
pop
leave
mov
mov
ffree
lret
in
sahf
sub
js
or
mov
push
jnp
out
into
push
aaa
mov
iret
push
push
xchg
push
sahf
sbb
or
pop
popa
data16
aad
xor
scas
adc
add
push
jne
jns
mov
cmpsb
nopl
imul
ljmp
out
sbb
inc
push
movsb
mov
gs
push
and
out
lock
mov
mov
push
xlat
cld
enter
push
sahf
js
fwait
scas
or
out
aas
dec
into
dec
ja
inc
mov
sbb
or
push
or
add
roll
dec
xchg
push
jg
stos
int
and
jno,pt
inc
arpl
imul
lock
and
in
popf
xlat
rolb
cmp
xchg
stos
sub
xchg
aam
fs
iret
or
ret
test
inc
sub
xchg
cmpsb
xlat
aaa
rcrl
les
repnz
sahf
mov
out
push
add
jp
repz
clc
test
inc
jno
push
lds
sub
xchg
test
or
adc
clc
cmpl
push
mov
int3
inc
loopne
cli
call
aas
loopne
xchg
lods
imul
jl
hlt
lret
rclb
mul
icebp
fdivrl
int
mov
cmpsl
std
stos
rcrl
mov
push
and
lods
stc
inc
sbb
call
pop
mov
arpl
sub
call
pushf
mov
loope
fnsave
add
add
popf
cmpsl
push
stos
sbb
jmp
lcall
cli
orl
cwtl
cmc
daa
jle
or
mov
cmp
lods
hlt
iret
cmp
in
std
std
lods
add
mov
push
sbb
adc
stos
cmpsl
sub
pop
and
cmp
lret
sub
outsb
gs
jg
ret
xor
jae
nop
rolb
xor
adc
into
mov
or
ljmp
and
jae
das
data16
mov
jl
sar
cmp
pop
orb
dec
dec
test
test
shl
lahf
pop
pop
push
fs
inc
add
sub
cmp
retw
xor
idivb
imul
test
leave
fstl
mov
es
xor
dec
dec
and
cltd
xor
sysret
popa
cmp
pop
cltd
dec
pop
mov
jge
addr16
mov
loop
aad
sub
or
insb
aam
pop
ss
mov
outsl
in
pop
adc
out
add
call
mov
fistl
out
jo
sti
or
nop
mov
orb
sub
mov
adc
lea
xor
iret
xchg
test
call
in
push
movb
in
leave
mov
fdivrs
outsl
ss
mov
mov
jl
adc
pop
out
sbb
add
pop
leave
jmp
leave
jo
shll
sbb
lcall
adc
pop
ficoml
mov
insl
pop
inc
mov
dec
fsubrs
pop
lret
sbb
pop
daa
test
mov
add
in
icebp
out
cmp
out
pop
push
xor
out
pop
sbb
sub
lds
push
mov
push
cmp
dec
sbbl
mov
bound
mov
push
insb
insl
push
inc
inc
mov
sti
sbb
mov
sub
jl
sbb
push
sarl
cmp
cwtl
sub
lahf
fdivrl
fsts
imul
cmp
jecxz
loop
jg
cli
leave
cltd
mov
lret
xor
into
mov
lcall
ljmp
dec
loope
jmp
mov
aas
lcall
jbe
out
shrl
dec
loopne
dec
and
pop
inc
out
adc
rcl
pop
sub
push
and
fwait
out
das
roll
jbe
pop
adc
xchg
jmp
test
les
out
cmp
mov
jmp
das
call
adc
pop
loop
dec
jecxz
inc
lea
pop
xchg
or
mov
or
inc
sbb
jns
js
xchg
inc
xor
fsts
xchg
sub
add
mov
lcall
repnz
and
pop
xor
loope
push
rcll
fsubrl
call
arpl
pop
out
mov
mov
adc
sub
out
mov
push
cmpsl
mov
lods
cmp
inc
stos
fnsave
cmp
popa
repz
lock
xchg
xor
out
xlat
loope
xor
mov
fdivp
std
or
mov
xorb
rcr
aad
outsb
lea
cmp
notl
add
push
gs
or
sub
loop
mov
jp
lahf
add
js
sub
lds
mov
cltd
fdiv
iret
ljmp
xchg
leave
fimull
ss
cmp
fists
pop
imul
lea
sbb
movsl
pushf
adc
mov
setb
rcl
mov
test
shrl
popf
mov
ja
sub
sub
push
cmc
mov
and
in
push
push
inc
dec
fucomi
dec
add
sub
ja
adc
jno
inc
push
add
dec
cmp
aad
jbe
icebp
cmpsl
dec
jo
pop
jmp
bound
sar
xor
xlat
js
mov
adc
sub
cmp
jg
jecxz
addr16
add
test
ficoml
jg
out
and
mov
sub
outsb
push
xchg
std
and
add
mov
sub
shlb
or
dec
dec
jns
test
in
notb
adc
inc
xlat
mov
icebp
fcomip
jb
mov
fsts
mov
ret
jg
xorb
push
cs
sub
out
call
ljmp
loope
jae
jmp
lahf
inc
adc
dec
dec
add
adc
fildl
adc
hlt
mov
popf
pop
xchg
xchg
adc
adc
jne
out
xlat
fbstp
cmpsl
test
dec
fwait
adc
adc
fxch
dec
lods
out
stos
add
mov
and
inc
out
loop
call
xor
in
xchg
and
aad
repnz
and
jmp
xchg
test
out
sbb
in
inc
mov
lods
cmp
dec
sarb
aaa
cld
jne
jb
addr16
out
cmpsb
jmp
clc
outsb
inc
sbb
aam
push
mov
push
sub
shrl
jmp
js
pop
inc
cltd
adc
cmp
movsl
flds
leave
lahf
daa
ljmp
cs
adc
and
dec
int3
mov
xor
scas
cwtl
iret
ja
inc
push
mov
add
pop
sub
in
or
in
adcl
or
mov
cmc
or
insb
ljmp
es
cmpsl
or
jno
push
mov
loopne
mov
dec
adc
pop
mov
push
test
call
xor
inc
lea
clc
xor
hlt
fwait
pop
inc
pop
nop
pushf
imul
inc
pop
in
lds
js
add
test
push
xlat
adc
push
mov
int3
fucom
out
cmp
xchg
push
jne
jge
test
jp
roll
add
dec
das
inc
xchg
lods
lahf
je
imul
insb
mov
mov
sub
rcl
adc
fcoml
je
inc
sub
mov
jle
mov
mov
mov
subl
neg
call
nop
jl
push
cmpsl
out
ljmp
pop
cmpsl
push
mov
insb
or
arpl
mov
push
pop
dec
xor
mov
pop
sub
fnstsw
rolb
hlt
sti
enter
mov
xchg
loope
mov
fucomi
lret
jge
fldl
jp
mov
lcall
sub
mov
adc
out
dec
add
fiadds
mov
mov
push
fs
push
lea
fs
push
pop
scas
scas
push
mov
adc
xchg
xchg
je
and
xchg
popa
aam
sbb
mov
push
mov
or
bound
and
push
leave
dec
lcall
mov
push
mov
addl
stos
xchg
out
xor
cmp
or
sbb
inc
pusha
sbb
add
inc
insb
xor
xchg
dec
push
fwait
sbb
nop
jl
cmp
mov
das
stc
mov
subl
mov
mov
outsb
test
xchg
sbb
cmpb
rclb
jecxz
out
jle
sbb
mov
shrl
nop
xor
lods
sbb
int
stc
iret
add
outsb
lock
mov
cmp
call
push
pop
nop
rcr
fs
push
clc
adc
lret
jo
js
repz
dec
shlb
je
rorl
add
push
mov
out
push
pop
ficompl
lahf
push
pushf
dec
sbb
pop
cltd
pop
mov
xchg
adc
shrl
sub
ret
cld
ret
fwait
pop
icebp
popl
gs
push
sar
data16
in
iret
sarb
rcl
mov
inc
push
cmp
call
pusha
jle
mov
rorb
iret
in
sub
push
lcall
ror
movsb
jae
sub
cmp
sbb
aaa
mov
or
sub
cmc
jo
ja
lds
push
out
push
add
daa
and
out
mov
mov
fisubrs
enter
out
pop
gs
push
xchg
stos
in
and
out
pop
ds
aad
add
push
adc
fwait
cmp
mov
shrb
push
inc
les
jo
outsl
mov
ror
dec
ja
dec
loopne
roll
jnp
jle
push
jno
clc
xor
cltd
mov
pop
jo
loope
loopne
push
ss
adcl
outsb
out
sbb
test
fs
and
fst
xchg
out
mov
nop
ljmp
mov
test
dec
fidivl
push
dec
test
sbb
mov
push
mov
mov
sub
gs
cmp
les
lret
xchg
xchg
hlt
mov
shll
cmp
jle
mov
lea
imul
into
clc
int3
movsl
shlb
and
pop
xchg
and
aaa
push
mov
dec
and
loop
out
orb
dec
mov
repnz
jp
sub
cs
cltd
add
cs
pop
xor
mov
pop
xchg
mov
mov
pushf
mov
or
je
and
push
mov
movsb
sti
mov
stc
pop
icebp
mov
js
cmp
inc
jnp
push
adcl
and
stos
push
pushf
mov
inc
inc
loope
lret
xchg
adc
sbbl
xor
push
out
shll
push
mov
les
push
dec
pop
mov
xchg
inc
add
jne
push
mov
sub
jb
or
pop
lcall
xor
inc
arpl
fdivrl
mov
jne
and
mov
pop
mov
mov
dec
lods
mov
xor
popa
rol
pop
fistps
aad
mov
outsb
or
mull
mov
inc
mov
push
push
xchg
mov
mov
scas
bound
and
rcrb
repnz
test
rcrl
cmp
je
cmp
bound
pusha
cmpsl
ljmp
inc
sbb
sbb
test
daa
mov
pop
shrb
xor
adc
push
lahf
dec
xor
sub
std
data16
in
cmc
je
addr16
std
out
xchg
mov
aaa
cmp
sti
sub
sub
loope
fbld
mov
popf
and
dec
insb
scas
jl
jne
xlat
adc
mov
decl
sbb
add
mov
fdivl
fnstenv
mov
cmp
mov
xchg
lea
fnstenv
mov
or
push
rclb
and
loopne
mov
lahf
in
mov
or
les
cltd
ds
xor
daa
jne
jnp
dec
xor
outsl
sbb
dec
psrlq
add
les
sarb
cmp
es
pop
cmpsb
das
cmpsl
clc
pop
mov
mov
jle
mov
dec
loope
ja
repz
xor
shr
cmp
repz
push
and
leave
push
mov
psubsb
aam
std
cmpsb
sub
fisubrs
xchg
cmpsl
icebp
lea
add
pop
sub
dec
movsb
jl
jg
loopne
dec
sbb
stc
sub
mov
dec
adc
rorb
xchg
push
mov
push
jae
cmp
call
dec
test
jno
pop
mov
cmp
mov
rcll
and
call
or
push
mov
xchg
adc
cmpsl
jae
lods
fadds
xor
lods
arpl
aad
mov
sbb
sti
hlt
pop
into
cmp
rcll
jmp
jo
cmp
idiv
or
mov
adc
aam
push
outsb
ds
mov
sub
shl
fcmovnu
mov
hlt
test
add
or
cltd
push
jne
xor
fdivrs
imul
shrb
std
xorl
jge
adc
shll
mov
fmull
xor
in
inc
cmp
dec
inc
cmp
bound
adc
cmpsl
dec
sub
loop
pop
push
dec
dec
fldcw
xor
xchg
pop
push
or
push
ret
cmp
pop
fistps
xor
jmp
les
lock
in
mov
ljmp
pop
or
imul
xchg
out
cmpsl
data16
clc
push
jge
mov
sbb
push
fcomp
xchg
pop
fiaddl
ss
mov
inc
roll
pop
lea
cmpsl
leave
inc
sub
das
bnd
clc
insl
dec
sbb
mov
je
cld
ror
mov
add
mov
arpl
sbb
jo
iret
mov
or
or
sbb
movb
stos
adc
iret
and
fisttpl
stos
jae
movsl
cmp
pusha
mov
cwtl
fs
repnz
lret
mov
mov
pop
test
ret
mov
push
inc
inc
dec
xor
mov
ret
jecxz
mov
sarl
mov
into
adc
loope
xchg
cmp
aad
xchg
push
xor
hlt
push
mov
arpl
aaa
adc
jo
add
dec
stos
aas
sti
fwait
and
lea
xchg
mov
das
inc
fsubs
lcall
ret
pop
cmp
mov
in
pusha
stc
adc
jae
sbb
lret
pop
dec
movsb
rcl
sbb
cli
inc
pop
push
push
jecxz
fwait
xchg
push
cltd
daa
daa
out
pop
bsf
shr
cltd
shrl
mov
mov
pop
daa
xor
in
jg
mov
pop
out
das
or
sahf
in
push
daa
in
mov
sbb
fisttps
jmp
inc
out
sub
mov
xchg
lock
in
bnd
adc
rorl
clc
call
insl
rolb
jp
sbb
sub
xchg
jg
outsl
loopne
pop
jae
shr
and
xchg
pop
cmpsl
cmp
scas
pop
js
inc
cmp
add
mov
mov
pop
aad
in
sub
xchg
fst
stos
inc
repnz
dec
test
cmc
fwait
addr16
cmc
out
jb
inc
lret
add
jo
push
dec
cltd
add
xchg
js
fbstp
mov
cmp
test
imul
sub
or
fwait
pop
sub
mov
ficoms
rolb
push
mov
or
imul
or
clc
bound
cmpsl
inc
rorb
add
out
call
xor
loope
push
push
mov
icebp
add
das
stos
stos
jno
clc
jno
sbb
push
add
jno
insl
outsl
sbb
aam
push
adc
shlb
jle
inc
stos
je
sub
jg
jg
xor
add
stos
inc
out
pop
fdivs
dec
clc
inc
lods
je
rcll
aaa
push
mov
cltd
lock
and
popf
adc
sub
jnp
inc
cmpsb
dec
hlt
loope
and
ret
sahf
test
push
ret
or
cmpsb
and
repnz
dec
and
pushf
push
mov
jb
loop
mov
and
movsl
and
adc
loope
daa
xor
ret
test
mov
aaa
inc
mov
scas
lcall
shrb
jbe
push
inc
mov
dec
push
xor
pop
mov
dec
dec
test
mov
inc
int
push
add
repz
push
xchg
outsb
push
outsl
jl
shll
pop
lods
nop
in
ret
add
pop
popa
mov
sub
test
aaa
fucomi
add
pop
ja
ljmp
stos
fidivl
pop
mov
int3
and
mov
sub
push
or
pop
and
lea
int3
aam
testb
ret
mov
ret
dec
mov
mov
and
mov
mov
push
xor
adc
mov
cmp
push
cmp
int
xchg
pop
lret
push
inc
dec
sbb
cmpsb
pop
mov
or
inc
cmp
xchg
into
movb
lcall
jb
push
mov
aam
rcrl
xor
push
nop
push
icebp
sub
mov
outsl
sbb
fdivl
stos
dec
lods
in
iret
dec
cmp
mov
das
cld
fcmove
aad
or
pop
xchg
movsb
sbb
lret
sub
orb
jb
mov
enter
dec
daa
mov
insb
imul
test
add
sub
int
andb
sahf
sbb
cmp
daa
hlt
pop
xor
fidivl
outsb
fdiv
arpl
push
outsb
xchg
or
push
cmp
outsl
cmp
sarb
movsl
das
popa
mov
dec
std
dec
jg
mov
cli
and
adc
cs
or
inc
mov
hlt
clc
cmp
add
dec
cld
outsb
aad
pop
mov
push
dec
aas
shlb
test
repz
mov
mov
push
and
mov
gs
shll
cltd
idivl
sbb
sbb
xchg
cli
pop
subl
mov
inc
ficompl
sub
pop
and
jae
pusha
aas
sub
mov
sub
jecxz
jecxz
mov
inc
cmpsl
lods
sbb
jns
loopne
out
add
and
jmp
bound
out
xchg
jle
dec
ja
xor
mov
xchg
jmp
add
pop
cmp
xor
jns
pop
push
mov
dec
es
call
leave
movsb
mov
fnstsw
jb
cmp
sbb
icebp
int3
loop
mov
pushf
inc
cli
mov
xchg
cli
jecxz
mov
mov
jbe
hlt
add
dec
add
out
sahf
pop
pop
cwtl
jl
mov
pop
and
jg
test
add
push
mov
inc
inc
jnp
in
es
jno
cs
shll
repz
arpl
pushf
fiaddl
lret
cmpsl
in
idivb
push
adc
push
popa
mov
xlat
sarl
ficomps
adc
inc
add
movsl
mov
out
lcall
popf
inc
mov
hlt
out
rorl
test
jo
pop
sbb
adc
pushl
sbbb
push
cmpl
clc
gs
in
mov
pop
jmp
nop
loopne
insl
adc
mov
jae
xchg
and
mov
aaa
push
mov
in
scas
shr
pushf
pop
jne
mov
js
sti
lahf
stos
xchg
and
adc
pop
repz
pusha
mov
jmp
out
inc
inc
mov
nop
ss
pop
jp
ljmp
int3
xchg
jp
and
push
push
lock
in
and
dec
daa
sahf
inc
das
push
das
out
filds
or
pop
jp
xor
pop
in
lret
fsts
movsl
ror
add
loope
and
jmp
and
mov
jns
mov
fsts
pop
movb
hlt
mov
cmp
inc
lods
aad
movl
pop
sbb
jo
and
test
mov
jg
jbe
fcmovnb
or
outsb
lret
mull
xchg
es
jmp
sub
xor
rcrb
or
jecxz
inc
mov
insl
popa
lea
mov
cmpsl
xor
movsl
in
xchg
adc
xlat
cwtl
fstl
fldt
pop
mov
repz
mov
insb
pop
dec
sbb
push
xorl
sti
jbe
ror
cmp
fucom
dec
adc
mov
inc
cwtl
popa
inc
xor
loope
rcrb
xor
ljmp
stc
mov
ret
pop
cmp
inc
xchg
dec
loopne
mov
test
pop
push
mov
popa
and
out
cmp
sbb
push
data16
pop
adc
push
outsb
jp
xor
stos
divb
inc
push
or
not
xor
jnp
jle
pop
cltd
in
shr
int3
jno
xchg
push
push
sub
nop
push
arpl
hlt
xchg
push
mov
add
or
mov
mov
lret
sbb
mov
pop
xor
adc
sarl
inc
insl
or
fs
pop
stc
xor
jo
dec
xorb
and
int3
xchg
jae
adc
jg
mov
int3
sub
cs
add
cli
jae
push
xor
test
xchg
lock
sbb
cmp
testb
or
rclb
or
jb
sub
xchg
mov
pop
dec
and
fs
clc
cmp
sbb
ds
int
fdivrp
or
jns
xchg
test
leave
adc
or
xchg
mov
adc
sub
outsl
sub
pop
mov
mov
add
and
or
and
push
sub
adc
aam
jecxz
xor
out
sub
sbb
sub
sbb
jmp
mov
xchg
push
out
push
sbb
mov
pop
and
popa
daa
aas
mov
push
jmp
sub
loope
dec
pop
xor
mov
int3
imul
scas
mov
in
inc
mov
movsl
dec
je
push
mov
sub
sahf
pop
jmp
divl
int
sbb
mov
sbb
hlt
mov
loope
and
xor
pop
lods
adc
xchg
jb
daa
push
ljmp
out
xchg
out
jb
scas
mov
add
out
lods
and
fcmovb
icebp
cs
lahf
cmp
filds
or
loop
dec
mov
mov
sbb
or
fcoms
imull
dec
lret
mov
push
icebp
leave
mov
aaa
sbb
cmpsb
xor
into
push
roll
inc
ret
pop
movsb
test
loope
incb
jae
and
scas
and
les
into
adc
mov
mov
lcallw
mov
and
mov
jo
fucomi
je
inc
mov
dec
sub
std
test
xchg
gs
sahf
pop
inc
xchg
mov
shrl
and
mov
mul
cmp
andb
mov
xor
das
fsubs
jae
pop
sbb
dec
lret
bnd
xor
call
sbb
or
push
mov
fcoml
sbbb
shll
test
leave
ljmp
pushf
or
dec
test
repnz
jp
hlt
mov
stos
or
add
mov
jmp
aad
enter
jns
das
mov
adc
jno
mov
popf
sbb
into
and
mov
inc
mulb
jo
insb
ja
ret
ljmp
mov
cltd
mov
in
adc
cltd
bound
hlt
ror
pop
sub
add
sbb
add
xchg
frstor
out
add
pop
jecxz
fnstcw
in
cld
push
mov
adc
test
daa
loope
add
out
rcrb
mov
pop
jbe
jp
addr16
xchg
shll
call
mov
sub
xor
sbb
gs
in
mov
push
insb
mov
out
sbb
push
xlat
clc
fucomi
adc
and
inc
or
xor
pop
fdivr
mov
xor
sbb
mov
sbb
idivl
dec
mov
das
mov
jp
cs
xor
inc
pop
out
push
xor
imul
sbbl
lock
push
loope
rorl
in
mov
and
call
jecxz,pn
in
vphaddbq
cmp
xchg
test
inc
push
lods
dec
inc
fadds
jae
xlat
gs
or
adc
xor
inc
cmp
or
jmp
scas
or
sub
add
dec
dec
into
sub
cmp
fidivrl
fs
in
andl
add
jbe
and
add
aad
int
stos
cmp
fstl
sahf
cmc
push
adc
mov
push
mov
pop
sarl
fldenv
mov
dec
enter
or
and
dec
shlb
push
adc
mov
sub
sbb
sub
or
add
lea
fistl
dec
outsb
pop
jmp
sti
roll
sbb
lods
mov
xchg
in
xlat
xchg
out
lret
dec
cmp
cmc
mov
test
dec
movl
add
cmpsb
das
cmp
fistps
jg
out
pop
dec
sbb
xchg
jmp
aad
push
out
sbb
aam
sub
icebp
xor
popf
test
jnp
jnp
mov
ljmp
incl
adc
jb
inc
push
es
mov
xor
or
mov
jecxz
imul
mov
sti
scas
sbb
fcmovnu
and
pusha
dec
inc
fcoms
jbe
jbe
lret
lods
aaa
xchg
es
jecxz
jp
int
fcmovu
or
std
mov
cld
xor
sub
loopne
or
and
int3
jae
ljmp
shll
shlb
mov
out
clc
pop
jmp
jb
testl
xchg
repz
lret
in
push
js
jp
xchg
pop
dec
xor
into
jg
leave
and
add
arpl
cli
ds
jno
inc
add
ja
idivl
ret
stc
jne
lret
fwait
in
push
enter
cmp
hlt
inc
iret
sarb
add
sbb
dec
inc
movsl
cmp
cld
add
inc
test
lock
pop
add
xor
mov
cmpsl
adc
fs
mov
shll
and
into
bound
ljmp
aaa
mov
push
and
repnz
sbb
in
daa
mov
data16
ljmp
or
mov
mov
cmp
shrl
loope
cmp
dec
push
clc
and
xor
pop
mov
inc
pusha
inc
push
fisttps
cmpsl
mov
and
out
bnd
and
adc
adc
stos
or
addr16
push
mov
leave
lods
ljmp
mov
fistps
dec
cmp
xor
pop
popa
cmp
sbb
outsl
pushf
int
mov
icebp
or
jg
push
js
mov
int3
dec
pop
push
or
test
push
sbb
xlat
les
cmp
and
rcll
inc
xchg
cmc
xor
scas
loopne
xchg
add
mov
xorl
push
or
lods
push
adc
add
cmp
arpl
lret
gs
jmp
push
call
inc
addr16
popf
dec
mov
mov
fldl
push
test
loope
rorb
push
cld
sbb
or
out
mov
ljmp
clc
fidivrl
pop
addb
jmp
insb
mov
lret
dec
and
popf
cmp
cli
test
mov
sti
inc
mov
mov
cltd
inc
xor
inc
mov
sti
imul
das
xor
mov
es
xchg
and
icebp
dec
xchg
push
das
std
or
dec
pop
mov
or
sbb
mov
mov
xchg
int3
cltd
push
xchg
mov
mov
outsb
dec
add
pop
aas
fcmove
inc
sub
negb
into
es
loop
and
mov
shlb
push
shlb
and
pop
enter
xchg
cmp
lea
adc
cli
push
xchg
pop
inc
and
xchg
xor
jl
repz
mov
pop
enter
addl
jb
or
shll
push
loop
loop
mov
ficoms
pushl
push
jnp
repnz
mov
mov
fs
movsl
in
popf
stos
iret
mull
nop
xchg
test
adc
nop
xor
scas
faddl
or
int
add
mov
clc
mov
jo
rcl
aad
pop
lods
jne
adc
pop
test
add
icebp
and
outsb
repnz
pop
inc
sbb
mov
clc
pop
in
jno
rcll
in
mov
icebp
mov
incl
int3
out
cmp
dec
pop
rol
sub
and
sbb
cs
push
aad
gs
ljmp
xlat
push
dec
sbb
hlt
icebp
aaa
xchg
push
mov
push
xchg
nop
sbb
fcos
pop
lea
aas
fwait
sbb
pusha
imul
sbb
movsl
je
lea
repnz
inc
int
lods
imul
pusha
fs
mov
mov
xchg
mov
popf
movsb
in
xchg
xchg
lods
jmp
dec
cmp
inc
jmp
mov
add
fiadds
push
jno
or
loope
andb
sub
mov
lahf
cwtl
dec
in
sub
aad
dec
mov
jns
cmpsb
xlat
push
loope
xor
push
lahf
repz
pop
sbb
mov
pop
fisttps
pop
cmp
mov
movsb
cwtl
ds
jns
jbe
mov
mov
rcrl
test
shr
leavew
add
mov
cs
adc
push
mov
loope
data16
cli
mov
ja
adc
sbb
xor
cs
lret
ja
and
lcall
sarb
insl
or
sbb
fwait
rorb
cltd
add
inc
sbb
mov
pop
mov
rcrb
fldcw
std
cmp
add
sbb
cmpsb
gs
cmc
mov
cmpsl
inc
adcb
in
and
das
mov
out
repz
lods
add
jl
mov
lcall
mov
stos
xchg
or
stc
sub
fucomip
inc
stc
xlat
std
movsl
cld
mov
sahf
aad
out
xchg
test
xchg
into
sub
fistpl
mov
jae
mov
sbb
fdivrl
cmp
xor
dec
mov
jno
aaa
loopne
push
inc
in
sarl
ja
frstor
cli
push
mov
fdivrs
mov
cmp
jbe
das
cmpsb
shrl
data16
xlat
mov
jno
cli
adc
push
lods
mov
mov
ds
push
sub
sarb
aaa
xchg
push
test
pop
dec
ds
adc
xor
nop
dec
pop
jge
lods
pop
in
push
ret
imul
filds
inc
mov
lret
sub
mov
hlt
dec
stos
inc
daa
push
leave
out
incb
in
xchg
rcrb
push
repz
repz
inc
imul
sahf
xchg
int3
cmp
xchg
cs
stc
test
pop
dec
loopne
rdtsc
push
aaa
test
iret
dec
dec
xor
rcrb
out
scas
mov
insl
out
cmp
loopne
xor
mov
push
lods
fiaddl
xor
in
mov
cmpl
jo
stc
loopne
jecxz
rorl
andb
mov
sub
or
mov
mov
mov
push
mov
push
mov
scas
and
xchg
sub
sub
imul
inc
lods
jmp
jecxz
mov
sub
out
push
ljmp
sbb
sbb
xor
and
int
mov
movsb
adc
inc
frstor
mov
out
xchg
das
mov
loope
push
lahf
out
in
and
into
out
sti
hlt
shlb
sbb
ja
scas
jecxz
and
shll
iret
test
cmc
cmp
dec
xchg
cmp
ds
in
sub
cmp
mov
ret
dec
push
sbb
pop
cmp
mov
rclb
cmp
adc
std
int
mov
push
push
mov
ficomps
and
imul
push
lea
and
mov
inc
orl
mov
lcall
cwtl
pop
int
jbe
sbb
rcr
cli
fwait
cs
sub
dec
stos
sbb
mov
in
push
nop
into
sbb
xchg
inc
fisubs
mov
das
icebp
sub
fsubr
push
push
push
xorb
ljmp
mov
inc
lods
fincstp
imul
inc
cmpsb
pop
or
addr16
loop
adc
cs
ficoml
int3
mov
mov
icebp
outsl
sbb
inc
mov
pusha
xchg
and
add
push
pusha
mov
call
cmp
inc
es
mov
fs
adc
inc
lcall
add
dec
adc
lods
jne
pop
mov
daa
xchg
xor
mov
or
mul
jne
inc
sub
cwtl
mull
cli
out
orb
mov
push
jae
fstpl
push
pop
arpl
ret
sbb
pop
popa
mov
pop
data16
bound
clc
push
stc
push
pop
cmp
and
inc
sub
pop
cmp
push
daa
sbb
push
and
dec
mov
nop
int
shrl
inc
mov
pushf
stc
popl
shll
push
std
je
jne
pusha
or
fcompl
std
jge
jl
or
push
in
scas
andnps
dec
mov
mov
or
idiv
xchg
mov
xlat
movsl
sarl
aaa
cmpsl
mov
sub
inc
sbb
mov
jl
add
std
cmc
lods
dec
inc
and
je
jmp
dec
es
decb
aad
jg
dec
fidivrs
xchg
in
jg
xchg
cmp
cmpsl
xor
nop
mov
fnstsw
mov
fisubl
sub
das
insl
shl
loop
and
jle
jnp
test
dec
mov
mov
mov
scas
sub
fcmove
lret
mov
xchg
repz
ljmp
sbb
iret
lods
jle
ret
dec
lea
inc
fcoms
dec
jo
sbbb
push
subl
out
sub
inc
pop
jl
fiaddl
outsl
xchg
push
outsb
xchg
subl
cmpsb
mov
fxch
pop
add
or
test
adc
push
mov
movsl
mov
pop
jae
sarl
push
cld
aam
lods
pop
sbb
rcll
adc
push
mov
shl
jne
dec
stos
xchg
mov
dec
mov
inc
cld
scas
pop
cwtl
test
sub
addb
or
push
call
and
call
xor
sbb
jae
es
dec
cmp
push
js
je
lods
xor
cmc
cmp
ljmp
pop
push
gs
sub
movsl
cmpsl
fwait
into
hlt
jmp
test
inc
push
decl
push
adc
dec
pop
inc
dec
scas
jnp
and
pop
and
ss
sti
mov
push
out
repnz
stos
jecxz
clc
adc
out
mov
daa
scas
lret
inc
dec
daa
mov
xchg
push
ja
mov
push
subl
pop
das
and
aad
aas
lret
mov
dec
inc
cmp
mov
push
orl
jecxz
psrld
fdivrl
jbe
adc
cmp
movsl
aas
cmp
xor
shl
mov
incl
enter
add
and
stos
jge
sbb
fistpll
fstps
ds
mov
scas
fwait
cmpb
pop
adc
mov
insb
cs
filds
mov
out
pushw
mov
xchg
insb
xor
ret
or
pop
mov
sbb
pop
clc
mov
push
pop
xor
icebp
inc
and
sub
test
out
stos
rcrb
push
push
inc
dec
fildl
int
test
test
push
jnp
dec
mov
stos
add
orl
ds
out
out
scas
and
loopne
rcrl
insb
stos
mov
lret
xor
je
fiadds
push
push
outsl
daa
push
test
inc
sbb
ja
push
out
xchg
fildll
xchg
dec
jbe
inc
mov
ljmp
jecxz
cli
cmp
xor
adc
lahf
insb
imul
and
mov
sub
mov
sub
outsl
in
cmp
frstor
cmp
inc
cmpsl
in
xchg
xchg
sbb
std
dec
scas
jbe
xchg
pop
xlat
pushf
adc
aad
jge
fstpl
and
test
rcrb
inc
xchg
mov
imul
or
lret
out
push
cli
pusha
lea
popa
cli
mov
cmp
sbb
loope
aas
mov
aaa
push
jl
scas
dec
dec
ffree
movsl
cs
mov
sub
push
push
cmc
jmp
seto
mov
jl
sbb
pop
mov
ja
stos
lret
mull
shl
or
mov
or
inc
jmp
lods
stos
out
add
insb
add
add
mov
shr
dec
push
stc
sti
jp
sub
fdivr
dec
dec
out
lock
shlb
imul
notb
jns
push
insb
or
mov
movb
inc
filds
out
stos
push
xor
mov
inc
lret
inc
pop
add
ja
shrb
and
mov
rcll
movsl
push
sub
jnp
and
out
cli
stc
clc
push
movl
cmpl
cs
negl
fs
in
push
ljmp
test
jb
icebp
scas
jns
xchg
idivl
out
movsl
int3
rcl
adc
adc
or
lock
inc
pop
xchg
add
lods
push
jnp
jle
and
daa
mov
or
scas
outsb
imull
popa
test
and
test
popf
lea
jp
in
je
mov
fisttps
test
inc
pusha
inc
shll
sub
pop
test
add
xor
lods
push
pop
cmpsl
sub
nop
cmp
and
aam
xor
xchg
in
adc
mov
out
mov
popf
loopne
not
jmp
xchg
scas
pop
movsb
add
aad
pop
test
mov
inc
nop
inc
in
mov
loope
gs
add
mov
inc
in
imul
and
loop
test
and
aas
sub
shll
mov
ss
subb
mov
pop
fwait
xchg
or
loopne
mov
mov
hlt
cmpsb
movsb
stos
pop
mov
subb
mov
sarl
test
cs
in
jg
lret
ret
aas
dec
pushf
fst
sbb
loope
xchg
dec
loop
lret
fstps
add
sbb
inc
adc
jecxz
push
and
or
icebp
mov
cmpsb
sub
sub
mov
fimull
inc
mov
rcrl
in
repz
loop
icebp
pushf
cltd
movups
jp
cmc
dec
jb
pop
add
inc
lret
adc
xchg
xor
sub
xor
call
or
cmp
sub
add
test
push
fisubs
gs
and
adc
mov
push
lock
pop
jp
jp
add
push
test
ljmp
cmp
cltd
xor
imul
int
fucom
cs
sbb
sbb
pop
add
call
mov
cmp
icebp
bound
xchg
mov
xchg
mov
sub
int
fucomi
inc
jae
fdivrs
test
jno
movsl
ret
jno
cwtl
push
add
outsb
mov
int
ja
aas
mov
loopne
push
lds
jnp
jp
pmaxub
sbb
es
das
xchg
mov
sar
nop
xchg
addr16
into
xchg
aam
lock
pop
gs
mov
sub
jnp
dec
scas
cmp
cmp
bound
and
pop
cmp
or
adc
push
in
or
rorl
lock
insb
pop
lods
mov
fwait
xor
jno
jnp
sub
add
es
out
in
xchg
daa
inc
inc
dec
add
movb
loopne
bound
push
ret
dec
lods
inc
dec
shll
popf
rcrl
xchg
dec
mov
dec
pop
jecxz
outsb
add
pop
stc
outsl
int
xchg
in
pop
push
dec
fiadds
mov
push
sbb
aaa
movsl
movsl
das
mov
mov
adc
add
outsb
jae
jmp
mov
mov
cmp
add
nop
sbb
shrl
enter
push
stos
pop
push
lret
in
jl
cli
stos
pop
cmpsb
jbe
sbb
fiaddl
jbe
js,pt
cmp
push
fiaddl
jne
aaa
mov
and
insl
es
pop
add
xchg
setl
push
cmpsb
pop
xor
in
inc
shlb
and
inc
lahf
adc
lods
and
jo
or
test
std
les
popf
and
sub
mov
mov
jno
inc
mov
lods
dec
dec
sub
pushf
dec
lock
cmp
xor
pushf
add
shrl
xchg
and
scas
jecxz
mov
js
movsl
fcomi
orl
fwait
push
sbb
pop
mov
inc
mov
rolb
iret
movsb
stos
xchg
dec
pushf
pop
xchg
cmc
test
lods
fnstenv
jge
add
pop
cld
and
fcompl
jo
or
mov
cmp
push
negb
cld
rcrb
add
pop
icebp
fdiv
leave
add
pop
fistpl
mov
sarl
pusha
sbb
movsl
out
cs
xchg
das
dec
out
insl
in
dec
sbb
loop
xchg
test
hlt
imul
rcrl
ljmp
popf
clc
adc
leave
addl
lahf
inc
and
repz
lret
mov
add
xor
cmp
push
push
sbb
xor
xchg
movb
test
mov
lahf
popf
push
gs
lods
adc
jne
pusha
xor
cmp
fnsave
sbb
das
bound
fildll
xchg
xchg
ss
stos
in
js
test
pop
je
out
pop
fcomps
bsf
repnz
lea
mov
pop
inc
mov
fidivrl
lea
pop
pop
ret
sub
jp
cli
pop
push
dec
pusha
mov
xor
enter
loopne
insl
sbb
jae
dec
or
shrl
adc
mov
es
cltd
xor
xchg
iret
fs
decl
add
ret
sub
imul
jnp
mov
lods
add
jle
add
int
jg
andl
mov
adc
dec
pop
ret
jno
lds
jmp
xchg
push
pop
mov
xchg
mov
dec
jle
dec
cmp
mov
stos
xchg
sub
out
xchg
push
pop
out
xchg
lcall
pop
cmp
sub
repz
gs
and
in
movsb
mov
mov
adc
inc
push
pop
jmp
xlat
push
aaa
mov
enter
lret
jge
and
jmp
out
mov
cmpsl
or
mov
push
outsb
dec
adc
ret
xchg
pop
cmp
ss
ss
pop
sarb
sub
jae
cmp
xor
pop
add
push
xlat
jb
ret
outsb
mov
jg
pop
sar
loop
aam
or
fsubrs
fiaddl
insl
fcomi
scas
mov
addr16
xor
das
fcompl
xchg
jb
das
dec
jp
xchg
es
sub
out
popf
push
mov
pop
or
in
outsb
jp,pn
cwtl
inc
loop
dec
mov
test
cwtl
xor
outsl
in
add
popa
icebp
aaa
in
xor
sub
inc
scas
mov
mov
jbe
jge
cwtl
jmp
out
dec
sbb
fwait
mov
cmc
push
out
pushf
loop
mov
cmp
adc
jnp
sbb
stos
adc
popa
sub
stos
pop
std
inc
mov
adc
xchg
mov
sub
ja
inc
dec
cmp
shlb
popa
jns
jg
or
dec
aaa
shrb
fildll
js
pop
xchg
lock
int
xchg
mov
dec
sbb
inc
psubsw
cmp
push
inc
ja
jle
in
mov
mov
push
push
pusha
mov
daa
mov
pop
stc
mov
in
push
clc
stos
rcrb
jle
push
mov
data16
fucom
mov
faddl
and
jno
ds
lds
xchg
inc
sub
mov
test
sbb
outsb
cmpsb
mov
push
mov
mov
test
lret
aaa
and
pop
mov
or
and
dec
xchg
out
cmpsl
pop
fisttpll
test
mov
loope
test
leave
cltd
jmp
mov
inc
push
jno
subb
jno
out
pop
fistps
nop
jl
cmp
mov
in
shlb
cld
sbb
and
cmp
fidivrl
push
cwtl
fidivrs
jns
loop
pop
cld
mov
aad
inc
mov
jl
cld
mov
xchg
and
ja
into
xor
lock
sub
leave
inc
loop
aas
xlat
push
pop
in
bound
cmp
pop
data16
aam
dec
or
sbb
rolb
xor
push
nop
inc
push
and
cmpl
xchg
mov
or
or
repnz
ds
mov
mov
outsb
clc
pop
cmp
roll
add
adc
mov
xchg
adc
cmpsb
inc
cld
aad
sub
cs
incl
adc
jmp
outsb
imul
sub
fnstcw
ja
insl
mov
mov
hlt
mov
iret
lret
mov
mov
push
add
addr16
or
fwait
cwtl
fnsave
push
out
fldl
and
std
data16
xor
and
pop
sarb
fcmovnbe
cmc
xchg
mov
fistl
mov
xor
add
push
test
ret
inc
sahf
arpl
mov
lea
hlt
and
sub
mov
fmull
dec
or
xor
adc
or
adcb
jne
popa
mul
sbb
jo
mov
lods
or
sbb
stos
mov
iret
mov
test
dec
pop
scas
cmpb
icebp
inc
inc
push
mov
jecxz
xchg
out
mov
mov
xchg
add
cwtl
stos
sahf
loopne
rcrb
xchg
lret
or
lock
sbb
imul
add
adcb
dec
or
and
inc
sub
add
mov
ja
shlb
ret
xor
data16
js
mov
je
push
push
pop
leave
push
jmp
adc
adc
cli
in
pop
mov
imul
push
fstl
rclb
aas
mov
mov
fsubrs
iret
shll
fisttps
pop
fists
notl
pop
popf
mov
pop
nopl
stos
jle
cmpsb
andl
mov
aad
mov
jne
adc
lret
adc
inc
inc
push
mov
sub
sbb
clc
loopne
cmp
hlt
icebp
das
add
jmp
mov
mov
jb
imul
cltd
arpl
cmp
in
insb
xor
sahf
add
and
orl
pop
jp
lods
dec
fisttpl
cmc
test
lret
jg
imul
jmp
adc
psubb
leave
xchg
mov
icebp
mov
pop
outsb
mov
inc
sbbl
icebp
adc
mov
mov
iret
je
cmp
out
xchg
mov
decl
test
inc
fdivl
and
push
popa
scas
mov
pop
cmc
in
lret
repz
push
push
inc
xchg
mov
sub
stos
pop
dec
call
mov
rcrl
xchg
stos
cmp
xor
dec
and
cli
cmp
lcall
imul
std
outsb
push
adc
cs
mov
xor
mov
pop
movsb
insl
fsubr
shl
jmp
cli
sbb
adc
dec
dec
sbb
scas
pop
mov
push
xor
and
pop
cmp
mov
ss
or
mov
orl
mov
cltd
add
movsb
clc
adc
outsl
es
push
mov
add
jo
pushf
fmuls
inc
idiv
icebp
rcll
pop
repnz
dec
xchg
leave
sbb
mov
out
mov
js
fimull
dec
jl
jge
loopne
pop
mov
jmp
lret
jmp
jnp
movsb
jl
sub
xor
pop
ljmp
popf
dec
xor
popf
push
addb
jae
movsl
sbb
push
mov
mov
jecxz
and
aad
in
xor
mov
testb
mov
rcr
jecxz
pop
sti
lahf
add
adc
pusha
jns
je
mov
xor
dec
cmp
dec
sub
pop
jne
xchg
clc
sub
sub
xor
aad
movsl
imul
stos
data16
adc
loopne
stos
scas
push
cs
mov
cmc
or
jl
xor
out
jnp
jns
cmp
ja
mov
jmp
enter
test
in
inc
sbb
push
pop
adc
adcl
xlat
push
outsb
or
insb
mov
stc
hlt
push
loop
stc
pop
dec
je
inc
cmp
test
mov
adc
sub
fimull
popa
push
xchg
aas
adc
test
in
dec
adc
sbb
jecxz
das
sub
jmp
data16
mov
or
mov
pop
mov
pusha
jno
mov
aam
out
sub
xor
es
stc
jle
fdivrl
adc
addr16
mov
or
jle
das
and
dec
sbb
cmc
xor
fwait
mov
mov
das
sti
repz
mov
adc
mov
lods
ret
push
or
sub
jo
sub
mov
and
xor
fs
push
lods
cmp
jmp
pushf
xlat
ss
daa
roll
cwtl
pop
in
sub
mov
shr
je
mov
xor
call
jb
fisubl
push
sub
in
aad
fisttpl
pop
pop
xlat
movsl
sbb
scas
insl
jo
or
inc
adcb
xchg
loopne
test
adc
arpl
test
jbe
lret
xchg
dec
adc
jae
shll
scas
inc
cmp
test
sub
inc
add
cwtl
or
inc
lret
xor
sbb
lods
pop
xor
outsl
push
or
stos
aam
and
cmc
sbb
lods
add
fistl
mov
ret
in
mov
movsb
dec
lret
adcl
and
push
shl
push
mov
xchg
js
mov
cmp
inc
loope
aam
imul
cmc
dec
insb
jmp
stos
add
scas
pop
int
negl
fisttpl
loopne
scas
lods
lock
add
cmc
fnstsw
call
gs
or
pop
daa
clc
out
pop
jecxz
fists
xchg
mull
jecxz,pt
mov
mov
dec
mov
push
lcall
lret
jecxz
cmp
test
test
cli
mov
cwtl
adc
sarb
inc
pop
jecxz
mov
mov
clc
push
stos
mov
sbb
pop
repnz
pop
outsl
add
mov
js
inc
pop
pop
cmp
in
jmp
outsl
sbb
test
mov
imul
dec
pop
push
call
sub
jle
push
add
lahf
mov
out
cmpsl
pmullw
jae
js
jns
int3
popa
aaa
jp
push
pop
inc
frstor
sub
test
jae
sti
jb
sbb
pop
jo
fcoml
xor
and
jns
lcall
in
cmp
push
or
xchg
lods
xchg
pop
jge
cmpb
adc
push
mov
out
outsb
loop
imul
cmp
or
int
xor
and
fsubrl
jbe
lcall
test
sbb
sub
mov
pop
outsb
fidivl
fistl
mov
jmp
mov
cmpsb
scas
add
dec
jg
cmp
add
movsb
popa
dec
roll
mov
push
inc
lahf
sub
adc
add
xchg
xor
jl
mov
insb
aam
adc
mov
cmp
sti
adc
in
nop
test
xor
pop
xor
pop
addl
adc
jmp
arpl
ret
jbe
out
lcall
adcl
sahf
aaa
dec
inc
ljmp
hlt
sti
cwtl
inc
xchg
scas
inc
pop
ds
xor
mov
subl
pop
mov
dec
ljmp
adc
sub
mov
cli
cmp
cld
mov
xor
push
aas
mov
xor
sub
or
sub
popf
outsl
adc
pop
xchg
popf
jp
push
mov
imul
mov
push
into
fcmovu
dec
int
inc
inc
inc
fs
js
sbbl
mov
mov
scas
in
push
adc
add
int
push
repz
jae
mov
cmpsb
jns,pt
xchg
loop
imul
repz
in
or
insl
xchg
pop
mov
stc
dec
add
dec
sbb
ret
xchg
lahf
jmp
mov
adc
pop
xor
xchg
jmp
cmp
pop
outsb
adc
es
sub
sbb
adc
in
cld
fs
add
out
dec
xchg
jmp
add
cmp
mov
test
cs
paddsb
add
repz
notb
mov
test
xchg
pop
dec
add
mov
add
add
pop
sbb
outsl
xchg
push
gs
cld
pop
cmp
das
dec
shll
je
out
dec
and
adc
insb
jle
dec
inc
lods
sbb
xchg
mov
icebp
xchg
hlt
and
jle
lock
jnp
in
pop
sbb
and
jae
adcb
addr16
lea
loop
test
insl
lret
or
xchg
dec
popf
pop
jne
into
dec
arpl
mov
shrb
mov
scas
add
mov
jb
xor
je
incb
push
shl
push
cmpsb
xchg
fdivrs
push
enter
or
add
push
rcll
xchg
scas
cmp
loope
inc
sbb
lea
iret
ds
and
cmp
les
jge
push
cmc
dec
push
std
fdivp
jnp
or
nop
std
outsb
cmp
push
insl
dec
or
or
push
fstpt
cmp
loop
aam
lret
add
popf
insl
or
stos
adc
out
inc
and
fistpll
dec
ficompl
ds
maxps
xor
fs
daa
mov
in
scas
mov
stc
and
sahf
mov
dec
push
lock
sti
mov
mov
cli
imul
jo
push
xor
cmc
incb
pop
std
add
or
or
sarb
arpl
cli
fldenv
pop
out
fsubrl
das
popf
repz
or
das
fisubrl
dec
fdivp
mov
mov
push
dec
test
mov
pop
jl
outsl
jmp
inc
repnz
mov
jns
mov
xchg
addl
sti
es
imul
enterw
mov
ret
mov
sub
or
and
pop
into
pop
mov
ss
ficompl
add
rclb
pop
adc
adc
data16
outsb
sub
xchg
aas
repnz
shlb
mov
jecxz
loopne
aad
mov
aaa
xchg
int
push
or
mov
rorl
ficoml
pop
jg
dec
adc
mov
xchg
movl
mov
mov
xlat
mov
mov
fistpl
frstor
push
xchg
pop
pushl
add
pop
movsl
cmpsb
pop
sbb
test
outsl
stos
cmp
add
mov
loope
sub
sbb
mov
mov
push
mov
dec
pop
fwait
pusha
dec
push
mov
sbb
sbbl
push
xlat
dec
mov
cmc
xchg
mull
jnp
cli
decb
push
enter
pop
adcl
pop
aaa
lahf
and
pop
dec
shll
cli
fxam
inc
jmp
insl
repz
pop
fimull
add
push
into
clc
popa
sub
fcmovb
int
jl
sub
xlat
push
repnz
aad
dec
pop
xor
repz
mov
fadds
xor
add
daa
ljmp
cs
into
mov
loope
sub
sbb
jg
cli
shlb
pop
js
push
xor
adc
jle
inc
cmpsb
aam
xchg
decl
insl
sub
iret
rcrb
adc
cwtl
jbe
insb
cmp
lods
push
pmulhuw
xchg
pop
testl
jmp
pop
std
add
shlb
jb
frstor
fnsave
jnp
loop
pop
inc
xor
out
adc
scas
and
sub
shlw
notl
fstps
ficoml
jp
push
xor
inc
mov
out
out
dec
int
dec
movsl
pop
aaa
mov
fdiv
lret
repz
cmpsl
mov
insb
add
dec
addb
cli
bound
jp
push
pop
scas
xlat
lcall
loopne
enter
fnsave
lds
xchg
and
ss
ds
jecxz
pop
or
lret
push
xor
add
in
inc
roll
mov
pop
sub
shrl
fisubl
push
xchg
pop
adc
or
js
adc
fs
mov
mov
jge
cmpsb
cmp
push
js
xchg
iret
sub
fcmovu
jb
insb
out
in
outsb
cltd
cmp
sbb
sbb
test
arpl
or
add
test
mov
stos
jp
daa
lea
inc
lcall
ljmp
scas
in
and
push
out
repz
std
sub
xchg
into
and
into
cmpsb
cmc
data16
pop
pop
sub
cmp
test
lret
ficomps
leave
jl
pop
sub
lcall
push
loopne
adc
pop
pusha
scas
fsts
xor
xor
cmp
sub
ja
push
popf
pop
imul
xor
pusha
repnz
in
mov
xor
pop
movsb
push
xlat
xor
in
mov
cltd
adc
sbbl
mov
cmpb
push
sub
and
aad
and
loop
dec
cltd
inc
shll
sbb
xlat
stos
dec
sub
ret
cmc
mov
fcomps
mov
dec
xchg
or
rorb
shlb
pop
or
fadd
lret
mov
jae
cmc
push
lcall
jmp
or
mov
subb
mov
lret
in
in
and
cwtl
xor
push
mov
test
push
sbb
lods
test
inc
mov
loop
lahf
inc
test
and
inc
idivl
sub
inc
dec
in
lds
daa
daa
push
aad
push
jbe
ss
sub
aam
pop
sahf
xor
inc
jl
pop
cmpl
lods
mov
add
divb
xchg
jns
xor
fwait
and
mov
push
mov
lcall
mov
push
mov
adc
pop
inc
xchg
push
not
sbb
mov
ret
ss
mov
push
lock
es
cmc
cltd
xchg
add
mov
inc
popf
in
mov
lds
xchg
popa
arpl
pop
or
imul
mov
pop
adc
jnp
sbb
mov
pop
sti
in
add
mov
rorl
inc
cmp
addr16
pusha
pop
xchg
ret
out
movl
std
lcall
jg
dec
xor
iret
arpl
je
cs
outsb
insl
dec
arpl
jo
cmpsl
scas
lods
dec
out
cmp
xchg
out
enter
stos
test
imul
dec
loope
stc
mov
cs
and
xor
scas
rorl
pop
call
adc
jae
stc
in
mov
ds
in
gs
in
sbb
popf
jmp
sub
jae
mov
mov
call
sti
fisttpl
cld
mov
in
sub
test
mov
bound
sbb
and
push
insl
pop
incb
test
movsb
or
sahf
pop
push
sbb
ds
pop
push
sbb
cmp
cmp
cs
pop
out
or
push
cs
loope
adc
rorl
inc
leave
lods
call
mov
pop
xor
sub
xor
cmp
pop
push
insb
es
cwtl
or
lock
dec
imul
inc
pushf
loopne
fs
mov
cli
mov
mov
adc
sbb
xor
dec
push
push
sbb
xchg
enter
shrl
push
inc
mov
aad
subl
std
roll
repz
popa
fdivrl
push
mov
sbb
loope
pop
test
aad
mov
std
push
xchg
in
mov
mov
adc
cmp
iret
scas
mov
mov
mov
or
dec
dec
pop
or
and
add
lods
add
pusha
jecxz
mov
sbb
xchg
cmp
pop
mov
fiadds
jb
add
ss
fldz
pop
jnp
cvtpi2ps
dec
pop
adcb
in
sbb
or
lods
fdiv
movsb
adc
cli
adc
loope
lock
jns
stos
aam
add
xchg
xor
cmp
mov
in
call
jmp
and
movsb
test
insb
pop
and
sbb
push
sub
mov
add
pop
aad
in
lcall
lret
or
sub
adc
loop
jnp
mov
dec
popf
in
adc
jae
popa
mov
insl
je
cld
pop
imul
mov
lcall
test
xchg
cmp
and
lods
and
mov
adc
stos
je
stos
in
aad
lret
arpl
mov
mov
sbb
mov
jmp
mov
js
dec
pop
js
cli
sbb
jo
add
sbbb
xchg
lock
mov
vpaddb
mov
sub
jmp
loope
push
popa
test
aam
jge
add
dec
mov
pop
nop
test
and
or
mov
add
aad
aaa
cmp
dec
push
inc
imul
sti
pop
cld
inc
add
jmp
lds
pop
cmp
sub
scas
pop
fiaddl
jbe
dec
or
arpl
mov
ret
bound
ss
rcll
xchg
mov
iret
push
lds
push
and
lds
mov
mov
xor
frstor
repz
test
cmp
dec
sbb
and
pushf
imul
imul
xor
inc
lret
hlt
or
loopne
push
loopne
jmp
dec
and
les
jbe
pop
push
inc
cld
cs
fsts
mov
orl
xchg
push
adc
jne
hlt
jb
mov
xlat
xchg
fsts
sbb
ficoml
pop
add
xor
jne
or
incb
aam
pop
shr
ficoms
xlat
ret
sbb
dec
jp
inc
mov
stc
addr16
rorl
std
xchg
pop
mov
jno
cmovno
jbe
cmpsb
pmaxsw
push
les
shl
hlt
insl
shll
fadds
mov
jecxz
pusha
loope
bsf
cmp
mov
jecxz
pop
xchg
jns
adc
cltd
push
lret
jl
mov
and
js
inc
call
dec
xor
inc
iret
in
ja
aas
hlt
aas
mov
ds
and
fwait
shrl
je
jmp
js
js
fwait
add
sti
cmpsb
divl
mov
jmp
fisttps
jge
enter
cmp
inc
push
sub
insb
push
in
addr16
pop
jo
push
dec
out
cld
and
lea
push
loop
repz
shl
sbb
mov
add
mov
in
jge
add
pop
call
popa
pop
cs
pop
dec
mov
test
add
jo
inc
mov
jno
imul
outsb
push
cmc
sti
mov
fisttps
or
lahf
test
pop
ljmp
cwtl
mov
jne
mov
je
daa
push
mov
or
leave
aam
fbstp
inc
bound
rcr
sbbl
add
jns
or
mov
hlt
jo
sub
and
fwait
std
dec
xchg
pop
mov
adc
mov
cli
and
dec
and
xchg
xchg
test
sub
shll
push
inc
out
lock
aaa
fistl
adc
pop
mov
inc
pop
lea
imul
imul
vpmulhw
dec
jnp
scas
outsb
fmuls
pop
mov
xchg
mov
xchg
test
push
mov
mov
leave
or
sti
std
xchg
cmpsb
inc
cmp
out
sqrtps
add
pop
and
das
mov
push
adc
leave
loope
mov
jno
push
mov
icebp
dec
lods
xor
push
mulb
jne
mov
xchg
inc
add
push
sbb
call
test
jp
sbb
or
aam
mov
mov
lds
mov
or
jb
cmpsl
mov
jl
loope
lret
and
lcall
imul
mov
xchg
and
movsb
and
or
dec
add
or
sub
adc
xor
push
mulps
enter
sbb
lock
xchg
test
arpl
dec
dec
popf
jne
inc
repnz
js
fimuls
lret
cmp
mov
mov
jb
hlt
cmp
dec
pop
stos
push
mov
popa
pop
gs
sarb
push
adc
pop
dec
hlt
or
test
pop
jecxz
dec
lea
jae
outsb
mov
icebp
ds
pop
je
push
pop
gs
jne
gs
mov
push
loop
loopne
movsl
and
xchg
sub
or
test
inc
aad
subl
repz
ss
sti
dec
popa
jns
outsb
inc
sahf
xchg
dec
cli
lock
or
fisubrl
adc
dec
sbbl
add
popa
dec
fisttpll
mov
pop
inc
ficoml
repz
testb
out
outsl
sub
xor
mov
filds
push
cmpsl
mov
insb
pusha
inc
lahf
movsl
push
xchg
call
mov
xchg
test
mov
sub
jno
cs
xor
or
xlat
adc
sbb
mov
jp
sarb
inc
pop
jb
cmp
jmp
ficoml
ja
into
dec
nop
lret
ret
add
mov
ss
cld
xchg
mov
rorl
aam
sub
lcall
dec
fcomps
dec
ret
jbe
js
daa
jmp
inc
shr
ficoml
or
les
push
int
movsl
xchg
and
inc
inc
sub
imul
dec
insl
sbb
xor
add
push
jns
das
sbb
lret
pop
push
push
push
mov
cmp
stos
jmp
test
loopne
mov
sbb
jns
jle
add
pop
negb
popa
repnz
or
out
stos
xor
popf
adc
out
dec
dec
repnz
imul
or
je
test
cltd
mov
addr16
data16
rolb
xor
ljmp
test
adc
cmp
subl
mov
add
arpl
jo
stc
cmp
in
fs
fisubrs
out
stc
jae
mov
adc
rcr
cmpsb
mov
fcoms
cmc
or
add
dec
cltd
jmpw
dec
dec
outsb
ss
cmp
jnp
cmp
shll
adc
fwait
jne
cmp
aaa
fsts
mov
pop
inc
test
stos
shlb
and
movsl
push
out
and
inc
xchg
cmp
pop
fadd
or
jg
push
mov
mov
push
add
bnd
xchg
stos
jl
jbe
push
push
push
repz
adc
sub
mov
out
inc
inc
stos
fdiv
repnz
test
sarl
scas
jg
in
cmpl
push
and
xor
jp
lret
lds
cmpsl
cwtl
sub
popl
mov
push
add
push
mov
jecxz
movsb
xchg
fidivl
fs
mov
push
and
pusha
or
shlb
pop
cltd
scas
push
push
lds
stos
mov
call
fs
or
mov
inc
outsb
test
jo
inc
jns
and
pop
enter
leave
hlt
push
mov
xchg
test
and
jp
sbbb
and
test
adcb
pause
enter
mov
out
insl
cmp
imul
inc
out
mov
shl
call
stos
push
jbe
or
test
cmpsl
cmpsl
imul
jb
or
push
jnp
lret
xchg
pop
xor
add
bound
or
push
cmpsb
pop
jg
adc
popl
std
pop
scas
adc
push
adc
roll
movsb
mov
dec
imul
inc
jo
ret
sbb
or
mov
testl
push
adc
fnstsw
adc
xlat
andl
xchg
jo
fnstcw
out
cmpsb
mov
incb
xchg
mov
and
inc
sub
lds
dec
and
mov
xchg
enter
loope
popa
jecxz
add
mov
inc
push
movsb
jle
dec
jmp
inc
or
sub
or
adc
sbb
cmp
sarb
dec
push
fnstsw
jbe
loop
out
popa
push
add
pop
cli
inc
jp
pop
cmp
movsl
push
jmp
fdivs
inc
push
xchg
inc
in
xor
mov
int3
xor
and
stc
out
jnp
xchg
dec
mov
pop
addr16
mov
mov
aad
pop
loopne
repnz
mov
sub
mov
xchg
jl
in
mov
dec
in
or
or
shrd
push
jp
sti
mov
push
sub
les
pushf
int3
lods
push
push
hlt
clc
popl
xor
pop
and
xchg
les
xor
imul
dec
es
dec
or
jb
push
cmp
inc
add
fbld
iret
dec
inc
negb
fimull
jne
push
out
mov
mov
push
leave
dec
inc
aam
push
push
add
cwtl
mov
push
xor
shrl
pop
add
imul
pushf
push
jle
das
mov
scas
cmp
xchg
xchg
inc
cmp
xor
xor
js
dec
test
lahf
pop
xor
loope
mov
xchg
ds
jl
lcall
bound
add
insb
cmpsl
data16
outsb
jl
xchg
xor
add
fcmovne
lods
push
fsubrp
mov
lcall
jl
shlb
mov
ss
xor
mov
mov
pusha
mov
sub
test
stos
ja
stc
call
pop
jp
sub
dec
inc
mov
xor
push
inc
arpl
je
pop
inc
jnp
push
shl
push
mov
shlb
and
sahf
pushf
jg
mov
lret
into
mov
hlt
pushf
dec
mul
enter
xlat
in
aad
insb
jmp
in
ja
repnz
jns
mov
mov
std
inc
sbb
addl
test
imul
mov
outsl
popf
insb
xchg
pop
mov
pop
xchg
and
pop
add
or
ja
div
cmpsl
jne
int
mov
pop
pop
xor
cmp
xchg
mov
sbb
pop
cld
dec
mov
rcrl
pop
jle
adc
aas
arpl
dec
in
mov
imul
xor
pop
pop
enter
sub
call
adc
mov
jle
xor
mov
stos
pop
clc
sbb
mov
je
push
jns
inc
push
add
addl
repz
push
in
repz
decw
lahf
bound
aas
mov
hlt
pop
sub
push
scas
aam
cmc
dec
cmp
inc
sbb
mov
icebp
add
mov
fbld
pop
push
inc
es
call
ds
push
fwait
add
bound
imul
mov
or
mov
enter
mov
je
cs
or
or
mov
movsl
push
xlat
push
cmp
cmp
bound
ret
push
cmp
daa
jno
fldcw
cwtl
inc
js
std
ret
imul
iret
cmp
pop
xchg
mov
fs
jmp
push
and
mov
psubw
xchg
test
sbb
mov
cmp
ljmp
mov
mov
rclb
add
sbb
aaa
adc
push
mov
sbb
inc
rolb
inc
mov
into
sti
rorl
dec
or
pop
ret
rol
push
les
dec
ss
sbb
jle
push
ljmp
pop
xor
dec
imul
int3
aam
ret
mov
loopne
adc
sarb
pusha
pop
sarl
clc
and
mov
in
push
xchg
stos
lret
leave
lret
add
movl
cmpsl
fsubl
scas
cmp
pop
mov
add
test
pop
dec
clc
cs
adc
stc
dec
stos
adc
fmull
cmp
push
xchg
lahf
and
adc
xchg
hlt
jbe
cmp
mov
adc
mov
out
clc
jbe
mov
pop
pop
fidivs
or
stos
xlat
scas
push
pop
pop
neg
dec
aas
add
cmc
popf
popf
push
int3
pop
les
adc
popa
jno
or
testb
lea
ja
dec
inc
sbb
js
mov
or
add
mov
test
sub
xor
icebp
mov
stos
xchg
jp
pop
bound
jns
dec
loope
cs
jle
cltd
mov
ficomps
add
scas
dec
push
popa
shll
pop
push
sti
aas
push
xchg
jge
rorl
lret
pop
lock
mov
dec
and
pop
test
or
sub
and
inc
mov
xor
inc
xchg
iret
jno
cli
add
pop
inc
jmp
sub
mov
fnstcw
dec
lret
cmp
mov
dec
aam
aad
roll
cld
rcrl
adc
popf
lcall
ljmp
and
sbb
sub
mov
adc
adc
sbb
jb
inc
shl
sub
add
jnp
fwait
sahf
push
mov
cmp
mov
xchg
jmp
or
es
mov
pop
gs
loop
bound
loope,pt
nop
cs
not
sub
lahf
nop
lds
sbb
lahf
mov
fs
loopne
mov
inc
out
pop
mov
cli
lods
movsl
idiv
in
inc
mov
sbb
cmp
int3
cld
cld
dec
cld
bound
mov
bound
gs
dec
mulb
xchg
repz
push
stc
insb
cmp
mov
push
push
mov
scas
dec
jnp
roll
out
sahf
add
xor
xor
jle
inc
and
mov
mov
pop
pop
inc
nop
in
nop
mov
rolb
or
jb
inc
js
xor
sub
add
movsl
jmp
adc
fs
lret
jge
inc
xchg
divb
mov
sbb
in
dec
into
je
popf
push
cmp
inc
scas
adc
lods
imul
sahf
ret
xlat
jne
inc
and
ss
fs
pop
mov
pop
sbb
cmp
nop
adc
shrl
inc
fadd
daa
adc
cltd
dec
shll
mov
into
push
int
push
mov
imul
aaa
add
pop
sub
pop
sub
js
imul
iret
sub
iret
mov
push
dec
test
xor
outsb
dec
sub
fidivs
hlt
cmpsl
pusha
loopne
xchg
lods
or
mov
add
jo
sub
mov
cmp
outsb
in
fistps
cld
cmpsb
mov
aaa
add
loopne
insb
test
mov
push
hlt
mov
rcrb
mov
hlt
cwtl
lcall
mov
push
dec
inc
pop
out
fistpll
pop
mov
jmp
bound
cmp
addr16
push
xchg
mov
test
lahf
xor
jp
push
faddp
loopne
lea
adc
jle
xchg
add
arpl
in
dec
int3
jae
xor
in
xchg
or
mov
outsl
xchg
cwtl
pop
jp
inc
shll
inc
ljmp
cmp
rclb
push
sbb
jno
mov
push
popa
adc
dec
pushf
call
mov
cs
mov
cmc
ja
sub
pop
iret
lock
test
dec
xchg
cmp
pop
or
icebp
out
lods
test
xchg
inc
and
xor
adc
hlt
push
jmp
xor
out
jb
lret
jge
jg
xchg
sub
xchg
pop
push
mov
jp
out
orb
iret
jle
pop
push
ljmp
dec
inc
lods
pop
xor
ret
pop
mov
shlb
push
jl
ret
xchg
push
inc
std
sbb
scas
mov
xchg
xchg
cmp
push
mov
dec
xor
fstp
mov
test
fs
sti
les
push
cltd
pop
jge
adc
mov
sbb
cmpsl
inc
adc
rolb
ljmp
in
xchg
xchg
loop
insb
shll
dec
push
fdivrl
xchg
adc
and
mov
mov
mov
cmp
jg
adc
rolb
pop
jno
mov
dec
scas
je
jecxz
das
mov
mov
adc
movsb
or
mov
filds
mov
insb
and
sbb
ja
jo
ret
jns
mov
lock
dec
inc
cmpsb
xor
and
pop
or
out
mov
call
mov
leave
jae
push
sbb
xor
imul
add
push
shl
enter
or
jb
adcb
jp
cld
stos
nop
add
ljmp
cmp
push
mov
sub
push
xchg
mov
xor
xchg
mov
pop
cli
pusha
sbb
pop
jns
movl
loopne
lret
mov
jp
test
pushf
pop
sub
add
into
pop
inc
std
gs
lret
outsb
jae
adc
out
repnz
pop
jge
inc
xor
mov
pop
cltd
pop
popf
push
out
sbb
in
out
push
cmp
or
push
xchg
sub
or
dec
add
test
sbb
lods
cmp
xchg
ljmp
xor
or
add
mov
daa
push
mov
out
xchg
push
adc
jo
lcall
and
imulb
aam
push
cmp
jnp
jl
jg
and
inc
pusha
aad
andb
push
jmp
xchg
inc
pminsb
out
sbb
sbb
xor
popf
adc
fsubl
pop
orl
out
testb
push
sbb
inc
inc
hlt
push
xor
mov
out
js
or
data16
push
push
mov
jb
mov
mov
lahf
cs
rcrb
xor
fcomi
cmp
push
pop
imul
jmp
cmpsb
sub
mov
bound
xor
lods
test
hlt
pop
leave
mov
jb
push
adc
lret
dec
out
lds
or
cltd
dec
xor
repz
xlat
or
pushf
popa
andb
push
xchg
mov
aam
repnz
testw
aam
cmp
xchg
cmc
jo
clc
pop
xchg
adc
inc
push
clc
outsb
faddl
leave
je
xchg
lock
cmp
adc
jg
mov
aad
lret
nop
je
and
fucomp
add
add
shlb
je
and
jo
mov
sub
loopne
fimuls
add
mov
xor
pop
and
mov
and
cmc
mov
jnp
aaa
out
sbbl
inc
fiaddl
in
mov
rcrl
pushf
shlb
jae
mov
jg
std
sti
or
orl
sbb
in
cli
fs
push
call
xchg
insb
fxch
push
mov
sahf
fcomi
sbb
ja
fs
les
xchg
mov
std
insb
jle
movsl
icebp
rol
xor
mov
sub
movsl
lahf
dec
mov
lods
test
sbb
jl
int3
movsb
leave
scas
scas
leave
dec
notb
push
and
jno
jnp
dec
or
negl
pop
lcall
sbb
dec
daa
dec
xor
mov
imul
cmp
dec
jle
sub
cmpsb
mov
aam
mov
dec
sbb
dec
push
lret
xchg
gs
inc
sbb
mov
push
aam
ljmp
push
mov
xor
pop
lret
push
xor
loope
sub
stos
je
fadds
and
test
loopne
mov
outsb
sahf
shll
js
pop
push
mov
stc
movsb
orl
fwait
sbb
stc
loop
xchg
xor
jns
ljmp
insl
gs
out
insl
scas
mov
sbb
pop
jecxz
popa
sarl
subl
adc
dec
mov
push
inc
mov
cwtl
mov
pop
ljmp
ret
adc
add
hlt
jne
mov
lcall
cltd
outsb
jle
jl
out
pop
addl
adc
add
cmp
bnd
push
inc
call
lret
sub
es
jne
add
add
movsb
scas
int3
jmp
sahf
adc
lret
cmp
jecxz
cmp
rcrb
lcall
mov
rclb
arpl
test
test
add
push
jae
dec
ret
mov
mov
mov
mov
sbb
ret
mov
xchg
into
push
rcll
stos
mov
mov
ret
out
stos
fwait
aam
fidivl
icebp
insb
xchg
fsubrs
jae
adc
int
aaa
repz
fdiv
xor
sbb
cwtl
xchg
ret
sub
xlat
out
movsl
fs
imul
jo
pop
aam
jg
adc
aas
push
fidivl
mov
loopne
js
mov
push
mov
adc
sarl
cmp
xlat
addr16
aad
lods
mov
jp
mov
sbb
xchg
mov
and
int
in
jge
and
mov
jp
sbb
lret
movsb
rorl
das
imul
mov
mov
decb
nop
std
sbb
jb
pushf
mov
jge
xor
out
roll
cmc
out
test
mov
adcl
in
popf
and
and
mov
pop
in
sbb
cli
lock
xchg
leave
cs
sbb
es
dec
jns
cmpsb
sub
insb
shlb
stos
push
shlb
imulb
in
mov
lret
jle
inc
cwtl
mov
pop
and
sbb
cmc
in
push
push
neg
mov
fildl
mov
adc
xor
jo
xchg
test
lcall
sub
test
mov
and
js
lcall
aaa
into
adc
sbb
fsqrt
ja
imul
mov
lods
scas
mov
sub
negb
data16
es
xlat
jno
sub
cs
mov
xor
sahf
or
test
mov
jmp
testl
sub
test
jl
lea
xchg
push
pop
notl
inc
pop
movzbl
lods
jg
nop
lret
clc
inc
dec
jns
cmpsl
jmp
lcall
jb
das
xchg
jecxz
into
aas
push
sbb
std
jbe
notb
sbb
mov
mov
inc
inc
sbb
fildll
aas
mov
ret
and
sbb
in
test
loop
stc
mov
cmpsb
test
xor
shr
cmp
sahf
cmp
mov
mov
pop
inc
push
xor
dec
pusha
subb
sub
shrb
and
add
test
push
lock
mov
and
pushf
nop
cmc
or
mov
mov
or
lods
and
cmpl
pop
dec
js
jg
fdivs
push
lcall
popf
sub
scas
sbb
ja
push
ss
test
push
jns
test
jge
decb
jne
cltd
jecxz
xchg
adc
js
jae
adc
cmpsb
sahf
movsb
imul
nop
mov
cld
push
arpl
fidivl
dec
enter
mov
mov
inc
sarl
movsl
push
mov
lahf
mov
arpl
sub
shll
out
sbb
mov
sti
sub
or
out
cmp
bound
or
scas
enter
cmpsl
xor
sub
insl
fmul
in
mov
data16
mov
mov
adc
subb
test
add
pop
push
in
gs
push
cld
icebp
daa
or
mov
loopne
mov
sub
jne
jmp
rcrb
lods
xor
inc
sti
enter
sbb
cmp
cmp
xchg
dec
add
leave
mov
in
xchg
je
or
aad
jmp
push
mov
enter
pop
mov
dec
jo
mov
xchg
or
xor
rclb
adc
ret
jnp
fdivrs
mov
xchg
inc
sub
icebp
sub
scas
call
or
addr16
daa
xchg
js
scas
pop
inc
xchg
pop
jns
push
bound
cs
ss
repz
addl
decl
or
stos
lcall
xchg
pushf
xor
xor
fisttps
jae
test
mov
fdivrl
sbb
cmpb
out
cltd
insl
mov
cld
clc
fcompl
and
jle
lods
sub
cli
mov
dec
sub
mov
add
push
mov
fldl
rcr
ja
mov
jecxz
xchg
dec
clc
xchg
jmp
dec
hlt
xlat
test
addr16
in
movl
add
fmuls
lock
mov
jbe
popf
shrl
and
iret
shl
mov
cmp
cmp
js
aaa
dec
push
pop
sub
push
jle
lret
movsl
stos
xor
iret
bound
outsl
test
push
lock
cld
nop
jle
add
xchg
cmpsb
sub
push
lock
sub
call
and
add
fisubs
movsl
nop
push
xor
sbb
sbb
lds
sbb
imul
lahf
or
shrb
jle
inc
push
loopne
fcomps
or
call
nop
xchg
inc
mov
xchg
insb
lret
aaa
mov
lods
inc
and
push
sub
fildll
or
xchg
stc
add
xchg
mov
fists
mov
xor
cmpsb
jb
insb
mull
lods
adc
sbb
jmp
mov
out
mov
lea
pop
jmp
out
out
test
mov
arpl
push
push
dec
nop
gs
inc
fwait
outsl
add
inc
add
adc
inc
inc
mov
jb
icebp
ffree
cmpl
rcrb
mov
or
popf
int
sub
pushf
pop
jo
mov
and
sub
cld
leave
add
rorb
loopne
xchg
cmc
mov
es
outsb
aaa
adc
pop
outsb
lcall
movb
jmp
out
into
fdivs
push
test
mov
or
test
aas
push
mov
push
inc
cmpsb
lock
adc
push
push
popf
inc
in
icebp
fs
cmpsb
jg
cmpsb
pop
dec
push
cwtl
or
inc
notl
pop
out
pop
mov
sarl
nop
inc
mov
dec
cmpl
push
test
or
mov
test
fadds
nop
jg
outsb
daa
inc
cmp
dec
outsb
in
add
repz
popa
fs
movl
push
je
movsb
pop
cmp
ja
mov
cld
pusha
mov
filds
fisubrl
lret
add
xor
arpl
addr16
mov
push
cs
scas
dec
popa
inc
fisubs
add
add
loopne
out
mov
rorb
lss
xchg
pop
jg
pusha
in
clc
dec
enter
shlb
out
loopne
xchg
and
cmp
add
aaa
mov
shll
outsl
push
gs
lods
addr16
and
out
fistpl
out
mov
data16
lahf
iret
cmp
or
mov
xor
jne
cmp
lds
inc
dec
inc
in
fucomip
iret
addr16
mov
add
imul
int
push
test
mov
out
and
icebp
aas
and
sub
adc
inc
sarb
rcr
sbb
mov
mov
xchg
xchg
lods
movsb
fsubrs
dec
inc
sbb
push
bnd
mov
ds
ljmp
aam
sarl
add
aaa
lahf
ficomps
dec
mov
lods
mov
xor
flds
inc
jmp
fstps
add
popf
aad
mov
jae
xor
jae
jl
push
cmp
adc
jecxz
inc
xchg
insl
jmp
test
mov
test
and
hlt
inc
mov
pop
and
xorl
xor
lea
jmp
insb
jg
mov
push
std
mov
jmp
sub
loope
jo
lahf
pop
sbb
iret
pop
pop
pop
ds
imul
xchg
mov
int
jmp
jae
std
pop
mov
sub
jl
or
xor
pop
xchg
xor
addl
lock
popw
pavgb
repnz
mov
test
stos
xchg
mov
mov
dec
outsl
xor
iret
das
cmpsb
jae
push
mov
fs
hlt
jb
pop
aad
sub
xchg
jmp
cs
bound
fidivs
fwait
inc
leave
pop
jbe
and
xlat
sbb
aaa
repnz
ret
sub
ror
lods
xchg
push
inc
insl
adc
cmp
shr
movsb
mov
int3
jnp
push
jae
fs
add
sbb
or
jno
adcb
xlat
push
dec
outsb
adc
mov
mov
scas
dec
and
into
dec
jmp
pop
jbe
repz
xchg
add
xchg
xchg
imul
push
sti
pop
mov
aam
fisubs
mov
scas
imul
lods
and
sub
int
push
push
jmp
in
les
fistl
add
icebp
test
and
push
inc
xchg
test
jns
pop
mov
sub
xor
mov
push
jmp
or
cmp
fildll
inc
inc
mov
mov
push
addb
inc
mov
test
rcrl
sub
xchg
push
jnp
xor
dec
insl
jmp
out
xchg
mov
jbe
cld
loopne
mov
test
not
sti
and
sbb
push
insl
adc
or
xor
es
popf
nop
adc
arpl
jmp
fldcw
imul
push
popa
ud1
mov
add
lea
dec
mov
sti
mov
cmp
stos
jne
into
ss
ret
sub
xchg
xchg
dec
aad
mov
lcall
push
popf
jo
inc
push
xchg
cli
mov
icebp
movsl
or
mov
loopne
int3
xor
sbb
jnp
test
push
insb
xchg
xchg
and
lea
and
stos
jns
arpl
out
inc
jnp
mov
in
cwtl
pop
sub
jl
xchg
mov
cmp
cmp
sbb
xor
cmp
shl
push
adc
add
mov
mov
xor
ja
imul
pop
iret
sub
mov
pop
ss
mov
sbb
out
jb
xchg
or
pop
pop
dec
movsb
push
mov
and
arpl
insl
pop
insl
sbb
and
fnstenv
push
add
sbb
or
adc
pop
fwait
mov
repnz
sbb
out
cmp
push
loopne
pushf
adc
js
sbbb
js
loop
stos
mov
cmpxchg
imul
aad
lods
adc
pop
sub
add
jmp
dec
lret
and
xchg
inc
adc
cs
out
ficomps
sti
clc
push
mov
mov
sbb
fbstp
cmp
fwait
js
outsl
jl
test
shll
insl
int3
push
dec
loope
xor
lret
clc
sti
shl
mov
jns
push
xlat
push
mov
test
push
or
mov
fs
cmc
insb
push
je
frstor
jae
shr
loope
or
or
jecxz
pop
sub
xchg
fisttpl
sub
lods
mov
inc
repnz
sub
inc
mov
push
xor
mov
sub
fs
clc
cmp
push
inc
lock
mov
fwait
xor
push
into
jb
stos
inc
cmp
mov
mov
mov
dec
lock
sbb
pusha
push
out
push
faddp
xchg
sbb
lahf
xchg
push
int
jecxz
lea
cmp
cmc
mov
sarl
inc
xor
ret
ss
cmp
mov
sub
ds
mov
data16
mov
test
popf
pop
xor
and
aaa
inc
pop
xor
pop
mov
sub
push
mov
mov
jb
lret
cmp
fstl
xchg
or
pop
call
jl
mov
or
inc
mov
add
lds
aam
cmc
mov
xchg
mov
test
stos
fidivrl
sub
lahf
popl
push
cmp
frstor
add
popa
popa
sbb
inc
xchg
gs
stc
jp
test
or
push
pop
mov
cmp
mov
and
loopne
pop
inc
out
xor
lcall
adc
bound
inc
or
ficoml
mov
sbb
push
call
or
xor
xlat
enter
es
mov
dec
cmp
cmp
stos
mov
and
adc
scas
add
inc
mov
jg
jle
lahf
xchg
mov
test
sub
scas
loopne
ja
mov
pop
aas
jne
mov
mov
add
add
and
int
loope
roll
mov
ljmp
stc
adc
enter
loop
repz
mov
push
js
xchg
test
pushf
adc
jne
mov
pop
stos
insl
cld
rorl
pop
mov
test
xchg
xor
mov
inc
inc
enter
xor
jns
hlt
xor
mov
ljmp
shrl
adcb
rclb
out
ds
lret
iret
mov
mov
push
pop
pop
cmp
xor
and
fwait
mov
cwtl
les
ret
or
fwait
sub
or
add
xchg
ds
subb
dec
cmc
add
xchg
pop
inc
sbb
outsl
mov
nop
scas
xchg
in
ret
out
add
fildll
pop
add
cwtl
das
mov
pop
negl
jmp
and
sahf
push
lret
pop
sti
add
or
and
jne
in
mov
inc
pop
sbb
sti
ret
push
loop
pop
pop
pop
fisubl
out
fldt
adc
fists
fmull
jo
mov
dec
push
fnstenv
lret
mov
clc
jns
xor
xchg
aaa
xor
cmpsb
pop
jg
xorb
inc
icebp
xchg
aad
xchg
int3
sub
hlt
outsb
inc
outsl
push
les
push
ret
adc
andb
bound
push
sbb
xchg
imul
add
rcr
iret
test
mov
cltd
je
jge
sti
mov
push
cld
xchg
je
stos
jp
leave
stos
shlb
iret
jmp
inc
sub
outsl
sbb
repnz
movsl
fwait
stos
cwtl
mov
jbe
data16
inc
mov
leave
cli
ret
cmpsl
mov
cld
or
push
insl
adc
mov
ljmp
cmpsb
pop
cltd
xchg
mov
outsl
cmp
les
cmp
std
adcb
and
jns
nop
cmc
xor
add
sahf
fwait
sub
xor
pop
or
insb
push
pop
jl
icebp
push
loope
cmp
sahf
jnp
mov
mov
popa
aad
fisubs
std
test
lret
enter
and
pop
add
sub
jg
adc
shll
iret
in
in
or
xchg
es
push
mov
loop
pop
cmp
dec
arpl
stos
vorpd
aad
add
mov
sbb
xchg
jmp
mulb
movsl
les
jo
ret
inc
arpl
daa
in
cmp
dec
in
arpl
outsl
loope
xchg
xchg
sub
dec
mov
inc
mov
dec
mov
in
dec
xchg
fsubs
mov
aaa
scas
cmp
scas
dec
mov
push
lds
cmpsl
inc
xchg
mov
dec
mov
les
lock
jecxz
cmp
fwait
add
jo
rcrl
movsl
fnstsw
outsb
sbb
or
mov
das
xorl
cmpsb
sbb
dec
repz
sti
sub
mov
xchg
push
sub
outsl
and
and
lods
sbb
lods
jl
js
cltd
aaa
sub
mov
movsb
xchg
jnp
divb
iret
out
test
push
adc
xchg
jp
imul
dec
sub
test
and
shrb
aam
mov
cwtl
es
imul
mov
adc
and
jns
and
mov
cmp
inc
mov
shll
jg
xchg
xchg
jg
pop
adc
mov
xchg
xlat
in
jle
movntps
dec
sub
orb
mov
lcall
leave
push
lahf
jmp
cmp
mov
fsubs
or
scas
sbb
and
mov
and
popf
in
sub
fstpt
les
xor
fldt
or
lea
scas
pop
mov
sub
sbb
sbb
daa
mov
or
insl
je
mov
push
addb
inc
dec
enter
cmp
int
or
popf
fdivrp
cmc
xor
cmc
dec
xor
fisubs
inc
mov
fs
add
mov
in
shlb
jo
and
pop
sbb
dec
out
