push
call
ret
ret
jg
sti
adc
addr16
icebp
inc
or
push
cmp
ret
ss
test
pop
aas
xor
or
fsub
or
movsb
pop
sbb
bndldx
inc
mov
cli
adcl
mov
mov
push
ja
pusha
xor
stos
jge
out
test
jbe
je
jno
repnz
add
cs
adcb
xchg
mov
outsl
adc
outsl
mov
mov
ljmp
das
jnp
das
aad
xor
dec
outsl
cmpsl
clc
in
sbb
std
push
jo
fdivl
xchg
in
repz
pusha
mov
jp
pop
jns
lods
int
in
lret
rcr
mov
adc
aaa
cmp
sub
scas
cltd
and
repz
in
dec
push
mov
adc
xor
sti
mov
notb
xor
xor
push
shrb
lods
mov
lret
aad
and
popf
push
cmovne
sub
pop
push
xor
sbb
es
dec
loop
aad
addb
adc
adc
push
int
xor
add
inc
addr16
cs
adc
cmp
cli
xorl
hlt
lahf
mov
int
imull
inc
xchg
lods
sahf
sbb
jecxz
std
in
adc
xchg
cmpsl
in
xchg
jae
es
into
inc
ss
jno
xchg
push
das
andl
xchg
xchg
sbb
sahf
popf
jle
mov
test
and
mov
inc
cmc
adc
cmpsb
mov
push
dec
mov
dec
jp
adc
jnp
pop
sti
cwtl
xor
jnp
pop
test
xchg
cmp
sti
stc
sbb
mov
cwtl
sahf
mov
outsl
inc
lods
add
push
das
notb
xchg
fidivrs
dec
jmp
xor
add
test
leave
cmp
sub
mov
xchg
jae
inc
in
mov
lods
xchg
sbb
cmp
cltd
pop
and
test
xchg
loopne
outsl
scas
mov
mov
lea
aad
clc
insl
cmpsl
xchg
bound
cmp
shl
mov
les
pop
lock
mov
aaa
inc
aas
out
test
call
mov
fiadds
mov
jne
daa
cmpsl
sbb
mov
orl
mov
xor
ss
push
mov
inc
insl
add
lahf
xlat
xorl
shrb
sub
push
mov
xchg
mov
xor
inc
adc
out
lcall
mov
andl
push
scas
sbb
cltd
push
adc
push
cli
lret
lret
adcb
stos
inc
mov
xchg
je
mov
pop
xchg
stos
imul
xor
aad
ja
mov
mulb
jns
add
into
mov
imul
mov
cmp
js
inc
sbb
std
mov
mov
dec
daa
mov
xchg
xchg
loopne
mov
or
push
clc
pushf
push
xchg
pushf
mov
lods
pop
inc
popf
inc
xchg
xor
mov
sub
mov
outsl
and
push
out
test
pusha
xchg
daa
addr16
daa
push
test
sub
into
js
jge
movsb
push
inc
fcmovnbe
lods
jp
mov
add
mov
xlat
mov
xchg
fcompl
jb
cmc
lods
aam
push
adc
mov
adc
inc
jmp
mov
xchg
pop
push
xchg
ds
movsl
in
movsb
addr16
jmp
xchg
jge
insl
ja
mov
inc
push
xor
pop
sahf
movsl
in
mov
xor
pop
mov
add
add
aas
aas
push
jmp
cmpsb
into
fldln2
comiss
cmp
cmp
sub
aam
push
mov
pop
mov
test
and
dec
jne
lods
xchg
aad
stos
sbb
arpl
fdivrl
mov
in
dec
fsubl
add
xchg
mov
addr16
jecxz
pop
jmp
stc
and
mov
or
loopne
mov
or
in
push
lcall
scas
ss
pop
jne
add
xchg
shll
gs
cmpl
aad
mov
scas
loop
push
ljmp
ss
outsb
icebp
pop
sbb
lock
jecxz
xchg
add
mov
mov
mov
jg
dec
leave
in
pop
aaa
mov
repnz
xor
add
mov
leave
cmp
scas
cwtl
pop
jl
lea
lcall
push
fwait
sbb
aad
movsb
fwait
cmp
lret
js
loopne
mov
scas
mov
loop
jecxz
aam
adc
jnp
push
mov
cli
out
and
stos
adc
add
out
mov
dec
nop
stc
jnp
adc
jl
lods
jecxz
cltd
sub
fmulp
mov
out
adc
mov
cmpb
dec
sarl
and
xchg
mov
aaa
sbb
outsb
cmpsl
jns
out
or
xchg
inc
jnp
out
imul
pop
inc
or
push
xor
aas
loope
sub
mov
dec
sub
fwait
sarl
dec
push
into
outsl
in
ret
das
xlat
pop
pushf
sub
lods
xor
fwait
push
mov
pop
mov
sub
dec
addr16
sbb
ret
cltd
ljmp
cmp
inc
std
mov
push
sub
scas
xchg
push
frstor
stos
adc
mov
ss
cmp
mov
test
mov
and
and
lock
jecxz
jo
or
mov
lds
nop
cwtl
sahf
sahf
sub
mov
jno
push
mov
xchg
push
popl
cmp
sbb
or
jo
sub
mov
cltd
ds
lods
negb
rorl
adc
out
das
jno
cmp
lea
fcoml
sub
stos
je
xor
mov
sbb
lods
push
int3
inc
add
dec
push
dec
and
je
lea
filds
mov
fisubrl
jmp
jb
xor
shll
mov
add
bound
into
imul
sub
insl
mov
les
js
inc
push
jae
jg
int
mov
movsb
popf
fisttps
mulb
je
std
mov
sbb
pop
and
sbb
popf
imul
adc
cmp
imul
pop
xor
hlt
dec
cli
add
cmp
jns
out
nop
iret
mov
push
mov
and
mov
dec
fucomi
inc
aaa
out
ss
push
out
aaa
std
idivl
dec
pop
call
jbe
bsr
cmp
or
mov
add
sub
adc
in
mov
and
lock
pop
hlt
imul
pop
inc
sbb
inc
sub
push
popf
inc
stc
adc
out
fnstcw
xor
fisubl
addr16
mov
in
xchg
inc
loopne
sbb
shl
sbb
ds
cmc
lahf
push
sub
loope
mov
nop
add
inc
mov
fwait
lock
bound
dec
cmp
jle
inc
into
out
loope
push
leave
sub
and
daa
adc
push
ficoms
fidivrs
lcall
cwtl
sbb
in
or
xchg
pop
test
fidivrl
and
test
mov
lret
pop
jg
mov
lock
jbe
add
mov
pop
xor
out
popf
lock
push
lods
pop
adcb
or
xor
sar
test
daa
stc
mov
mov
dec
mov
shrl
call
cmp
push
sbb
cmp
mov
js
scas
arpl
pusha
adc
test
pushf
jmp
call
mov
aaa
pop
cmp
xchg
jno
push
clc
cmp
scas
rcl
jecxz
aam
mov
std
shll
jl
lret
std
or
addl
mov
mov
aaa
xchg
lods
cmp
adc
pop
inc
es
sbb
mov
xchg
jae
or
cmc
mov
pop
jb
into
push
ja
ljmp
dec
mov
or
in
push
jmp
cli
or
jle
shl
mov
adc
jp
adc
jmp
test
push
add
nop
aam
aam
rcrl
adc
xor
or
stos
pop
mull
pop
xor
shll
sub
stos
rorl
or
dec
sub
cmc
rcrb
cli
pop
pop
inc
cltd
pop
sub
arpl
testl
cmpsb
rclb
or
adcl
sbb
xchg
and
adc
sub
lods
jne
jo
mov
inc
add
inc
cmp
lahf
mov
movsl
dec
jnp
xchg
mov
and
mov
icebp
jmp
cmp
mov
pusha
push
fnsave
jl
test
xchg
cmc
pop
mov
xor
push
mov
iret
pop
outsl
scas
out
int3
push
or
and
or
sarb
mov
cmp
add
dec
shlb
jnp
push
inc
int3
out
nop
sbb
inc
cmp
pop
cmp
and
pop
out
es
pushf
ljmp
je
add
fisubrs
int3
lret
rcrl
rcll
out
xchg
and
aas
in
imul
out
cmp
lcall
add
and
push
mov
pop
enter
aas
push
shll
cmpsb
out
in
mov
adc
test
and
mov
pop
mov
scas
ret
xchg
fsub
mov
fisttps
xor
es
sbb
mov
scas
push
dec
mov
mov
repz
and
and
jne
fbstp
mov
mov
repnz
hlt
sbb
cmp
dec
mov
add
lods
push
rcrl
add
add
mov
pop
inc
adc
cld
push
lock
mov
sarb
jns
sbb
scas
xchg
jo
mov
or
dec
inc
ss
lea
out
pop
fstps
push
js
jb
jnp
imul
mov
or
out
pop
sbb
mov
or
enter
and
pop
scas
xor
fcomps
or
cmpsb
push
imul
push
adc
stc
in
mov
loopne
pop
jbe
mov
cmp
cmpsl
mov
addl
jge
jmp
pop
mov
pushw
pop
fmulp
loop
mov
push
fmull
scas
leave
jo
fcoml
push
mov
cli
inc
out
push
aam
xlat
aad
rcll
movsb
sbb
insl
cmp
cmpsl
je
mov
stos
ss
mov
bound
jge
cwtl
call
inc
push
clc
adc
ds
jno
loope
cmpsl
cs
jne
mov
cwtl
sub
shll
jecxz
shr
inc
int3
repz
mov
imul
sti
cld
xor
push
shl
bound
jns
add
ret
jb
repnz
les
adc
and
call
loope
cmp
aam
jp
inc
dec
mov
fnstcw
jl
aaa
flds
jnp
adc
lea
jbe
inc
leave
sbb
adc
adc
pop
fdiv
jb
jmp
incl
inc
adc
test
add
test
dec
jno
mov
cmpsl
mov
je
outsl
fsubr
mov
popa
push
in
cmp
js
sbb
mov
sbb
out
cmp
pushf
xchg
stos
sbb
stos
cmp
mov
cmp
stos
mov
clc
mov
xor
stos
add
pop
pop
lret
jle
bound
push
cli
lock
mov
scas
sbb
in
iret
pusha
js
in
mov
shl
shl
dec
dec
gs
cmpb
xchg
pop
mov
inc
inc
rcll
mov
ret
pop
cs
cmp
out
mov
cmpsb
fdivl
inc
jns
mov
push
idiv
out
in
mov
cmpsl
push
jbe
and
rcrl
clc
mov
mov
mov
roll
add
dec
dec
mov
jne
test
xchg
orl
push
jne
jns
or
jbe
ret
mov
inc
cs
pop
fldt
xor
mov
test
ljmp
aam
push
or
sbb
call
dec
add
jb
iret
fcomps
aas
sbb
aas
std
movsb
dec
sahf
adcb
and
pusha
jl
cmp
mov
lods
cmp
cltd
and
add
mov
ror
inc
popf
fisubs
mov
dec
dec
ret
adcb
mov
mov
and
push
adc
jo
jns
and
ret
data16
sbb
cmp
stc
into
cmpsb
ja
ljmp
fimuls
fmull
push
fsubrl
cltd
dec
and
loop
dec
icebp
ljmp
in
push
lahf
imul
add
mov
sbb
pop
ret
xlat
shl
icebp
test
es
ret
stos
cmp
inc
cs
or
cwtl
jecxz
pop
pop
xchg
enter
fisubrs
imull
into
add
icebp
fimull
dec
lods
pop
adc
inc
jg
subl
int3
pop
push
xchg
in
sub
xchg
popf
or
fsubs
in
xor
je
insb
lock
ja
sbb
jae
sbbl
fdivrl
jns
dec
out
jl
filds
pop
outsl
fldcw
mov
imul
repz
pushf
mov
adc
fcomp
dec
cmp
add
aas
pusha
and
adc
sbb
and
xchg
fcomps
mov
pop
out
and
pop
jmp
mov
adc
cs
mov
or
dec
call
inc
sbb
pop
into
loopne
or
jecxz
jge
lea
sub
ds
push
rol
std
test
sbb
out
dec
lock
dec
stc
test
into
out
jo
in
jg
cmpl
fbld
xchg
scas
inc
mov
adc
jp
push
mov
xor
shll
sub
or
jbe
mov
fdivp
sbb
sbb
stc
stc
adc
loopne
dec
sub
fsubrs
outsb
idiv
xchg
ror
js
fs
adc
sbb
xchg
jp
xor
and
sbb
lcall
cmp
inc
cmp
movl
add
push
inc
lock
pop
pushf
push
das
mov
add
cs
dec
xor
ja
jo
in
cmpb
dec
in
xor
insb
loop
adc
inc
push
mov
imulb
les
or
adc
and
sub
insl
sbb
nop
shl
mov
xor
pusha
sub
fsubl
xor
inc
lea
mov
xchg
dec
jbe
jmp
mov
dec
xor
push
dec
sar
or
fstpl
sbb
out
push
pop
pop
sub
xchg
push
or
imul
ja
ja
dec
out
ficoms
popa
andb
aaa
xor
pop
movsl
or
das
daa
data16
adc
fwait
aad
inc
add
mov
in
popf
add
in
ja
xchg
mov
mov
lock
das
and
nop
and
hlt
push
into
aad
mov
mov
std
push
sbb
movsl
sub
adc
jmp
sbb
sub
ds
xchg
gs
cmc
lock
test
aad
pusha
lahf
push
dec
xchg
mov
outsl
mov
push
dec
cmp
jg
in
xor
sbb
fdivl
mov
sbb
js
in
mov
imul
dec
and
mov
mov
call
sbb
nop
adc
xchg
and
mov
aam
sub
out
mov
fucomip
cld
mov
loopne
outsb
pop
wrmsr
jle
dec
out
add
adc
push
sbb
adc
popa
mov
fadd
test
ror
arpl
jns
adc
xor
pop
xchg
inc
outsb
cmpsl
push
lret
mov
repnz
jge
jns
sub
lods
mov
fimuls
mov
repnz
test
add
mov
cmp
mov
mov
and
jmp
ret
cmp
jns
int
int3
add
inc
sub
xor
mov
mov
aad
mov
repnz
sub
pop
subb
sahf
test
sbb
das
and
out
mov
movsb
call
lods
lods
ret
xchg
push
je
out
roll
dec
sub
add
ljmp
rcrl
cmp
push
add
out
sbb
mulb
add
std
push
sbb
or
es
out
xchg
sbb
dec
insl
iret
loopne
stc
orl
or
and
inc
push
movl
cmp
in
adc
push
xchg
mov
out
dec
jnp
and
rorl
int
imul
jns
inc
jbe
lcall
push
lret
int
jl
push
cmp
bnd
push
rol
stos
insb
dec
fstps
or
leave
mov
imul
jmp
jp
movsl
movsb
aaa
xor
push
push
popa
sub
stos
outsb
xor
cli
bound
aaa
mov
xorb
out
lcall
jmp
fildll
jb
jge
insl
xor
les
inc
js
repnz
mov
sub
mov
std
jo
mov
and
add
call
lahf
xor
pop
and
jb
cmp
pushf
ds
adc
fists
hlt
pop
mov
test
pop
xchg
lcall
xor
scas
or
loopne,pn
mov
sar
lock
rol
in
test
sarl
loopne
mov
test
jle
movsl
enter
dec
fimuls
inc
jne
fcmove
cmp
pop
loope
pusha
in
addr16
mov
cld
dec
lahf
outsl
jecxz
fs
add
mov
mov
cmp
andb
xchg
gs
mov
ficompl
dec
pop
cmc
punpcklwd
ja
test
or
int
and
pop
cmpb
icebp
jmp
lock
jmp
add
aam
cld
out
jbe
mov
outsl
add
mov
dec
scas
mov
rcrb
push
mov
aam
pop
jae
push
aam
sbb
repz
xchg
test
arpl
xor
mov
test
int
sbb
cltd
push
mov
add
repnz
jmp
sahf
rorb
out
dec
push
xchg
push
mov
sbb
cmp
push
fs
pop
jae
mov
lods
mov
jl
cmp
push
shrw
adc
push
xchg
adc
in
xorb
push
jecxz
lret
lcall
inc
scas
inc
pop
mov
pop
nop
add
push
imul
add
adc
inc
loopne
sbb
addr16
sub
pushf
scas
andb
jecxz
xchg
ljmp
iret
cmp
out
add
lock
and
xor
inc
adc
jecxz
dec
out
repnz
ja
jl
and
mov
mov
sti
in
push
dec
mov
add
adc
jb
adc
xor
push
subb
data16
sbb
xchg
popa
and
xorl
je
dec
ja
mov
adc
add
rorb
enter
mov
xchg
rcr
movl
fdivs
testb
out
aaa
mov
or
dec
pushf
stc
pop
call
push
lret
imulb
aam
sub
test
std
or
xlat
xchg
and
cs
jne
in
aam
cli
push
mov
inc
or
sbb
aad
jns
sub
movsb
pop
cmp
dec
xchg
jb
iret
adc
sub
cmpl
jbe
repz
fdivrp
out
dec
mov
jmp
fsts
out
jae
sub
mov
jb
xorl
mov
je
lret
push
add
sbb
dec
jg
lret
and
adc
sbb
mov
jmp
out
sub
xor
xor
fstpt
sub
push
and
or
addb
shll
xor
stc
inc
cwtl
rcrl
adc
imul
sbb
stc
push
adc
shlb
addr16
enter
adc
andl
jmp
outsb
mov
cmc
pop
cmp
or
xchg
fldenv
mov
cltd
int3
iret
mov
pop
cmp
add
cmp
shlb
xlat
lods
scas
dec
shlb
fsubrp
dec
add
fidivrl
outsl
xor
loope
ljmp
push
shlb
xor
xchg
xor
sub
test
movd
insl
push
sbb
mov
je
rclb
in
mov
push
pusha
and
out
pop
xor
sbb
xchg
xchg
mov
dec
cmp
and
in
stos
movsl
sbb
push
dec
jne
jle
cmp
or
inc
ds
and
js
test
mov
jecxz
stos
push
xchg
into
fdivrs
adc
or
cmpl
cmp
in
xchg
hlt
jmp
cmp
popa
outsb
or
push
push
sub
test
ljmp
sarl
mov
je
fwait
movsl
movsl
push
shrb
pushfw
xchg
lret
lea
fildl
in
imul
popa
insb
or
sahf
sbb
xor
add
xchg
insb
je
dec
or
ja
pop
lret
hlt
fistpl
aad
fisttpl
imul
and
test
fucom
rol
or
push
test
xchg
ljmp
or
inc
xor
jl
and
lret
sbb
mov
sbb
rcrb
clc
movntps
push
aad
filds
and
fadd
mov
cmp
cmp
mov
xchg
aas
xlat
in
push
mov
incb
insb
repz
xor
out
ret
adc
xchg
lahf
or
xor
mov
mov
test
and
xchg
push
inc
cmp
xor
gs
cs
rcr
call
enter
sbb
test
sub
push
adc
in
movsl
sub
lods
inc
pushf
leave
push
movsb
aas
pop
mov
out
inc
sub
std
ficomps
aam
add
pushf
inc
cmc
push
nop
rcrb
insb
inc
sub
loop
or
call
mov
repnz
das
iret
jae
mov
pop
mov
stos
mov
fwait
out
sub
cmp
or
jle
pusha
out
ljmp
and
or
ja
js
adc
cmovs
or
xlat
subl
cli
outsl
inc
sbb
cmpsb
push
mov
inc
aas
cmp
cmpsl
mov
notb
stc
mov
imul
mov
add
ja
mov
inc
adc
popf
cmp
fstpl
push
loope
sbb
repnz
outsb
push
push
lret
jge
outsl
adc
cmp
testl
mov
popf
xchg
mov
mov
mov
inc
movsb
sbb
in
jmp
jb
jle
push
cmp
pop
pop
pop
lret
xor
jp
cli
mov
dec
rolb
mov
mov
push
cmp
addr16
cmc
movsb
or
xchg
hlt
push
add
xorl
es
jno
pop
nop
testl
xchg
xor
andl
pop
in
cmc
xchg
xor
pop
sarl
in
pop
mov
repz
push
addr16
pushf
jno
lss
hlt
mov
sub
xchg
xor
repnz
mov
pop
add
insl
mov
mov
inc
in
das
jle
dec
lahf
fwait
daa
push
test
enter
bound
cmp
mov
bound
xchg
add
aas
std
cs
adc
sub
xchg
adc
xor
into
enter
sti
lcall
int
mov
insb
mov
push
mov
add
jb
aas
sarl
push
iret
sbb
pop
int3
dec
mov
fld
mov
in
pop
inc
mov
pushf
sub
push
xor
sbb
outsl
xchg
xchg
sbb
aaa
push
jne
jge
icebp
dec
jb
pop
xchg
mov
add
dec
mov
in
push
pushf
in
arpl
test
mov
into
xlat
pushf
test
sarb
inc
jo
xor
dec
xchg
enter
dec
xchg
push
push
punpckldq
dec
jge
subb
mov
or
movsl
nop
mov
pop
mov
push
push
mov
movsl
stos
xor
mov
bound
aaa
inc
xchg
pop
push
pop
orl
clc
dec
iret
sbbb
hlt
add
jns
push
dec
sbb
cmp
sahf
nop
lahf
sbb
into
xchg
sbb
pop
pushf
sbb
cltd
or
sbb
out
mov
int
adc
jo
inc
ss
orb
aaa
mov
and
xor
dec
rcrb
daa
push
jle
clc
mov
and
or
sub
sub
sbb
test
icebp
or
and
movsl
mov
test
jb
xchg
xor
cltd
pop
lds
xor
cmp
in
jecxz
dec
jg
and
test
mov
mov
int3
lea
pop
mov
stos
popf
repnz
or
pop
jo
xlat
data16
lock
mov
lods
pop
cs
lods
push
pop
pop
fwait
and
in
xlat
inc
jge
fimull
mov
or
cli
jno
fs
in
lret
bound
int
out
jmp
xchg
in
mov
cmpsb
cmp
xchg
out
imul
sti
cmc
pop
dec
lcall
jno
mov
lcall
insb
test
scas
add
aas
pop
fwait
bnd
inc
insl
insb
rcrl
ret
movsb
mov
ficoml
inc
out
lahf
fidivs
push
and
inc
aad
xchg
cmpsb
pop
adc
insl
pop
mov
sub
ljmp
stc
pop
push
push
lods
sti
aad
cmpsl
push
dec
mov
xchg
cmovge
sub
xor
rclb
fdivrl
adc
or
mov
inc
movsb
mov
pop
fsubrl
mov
leave
ret
sbbb
stos
in
pop
int
mov
addr16
push
data16
add
scas
mov
out
sbb
cmp
cmp
cmpsb
cmpsl
insb
std
or
push
cld
add
ret
call
mov
xor
out
cmpsl
repnz
cwtl
push
cmpsl
push
fbld
mov
mov
cmp
stos
loopne
lahf
repnz
icebp
sub
jg
cmp
sub
subl
push
insb
inc
lret
pop
test
negb
in
xor
mov
shrb
nop
xchg
mov
cli
push
xchg
pop
add
loopne
xor
mov
mov
sarl
push
mov
lcall
mov
push
jge
cwtl
jnp
mov
fidivs
in
stos
frstor
out
fldt
es
jle
aad
jl
aad
inc
addr16
and
mov
xchg
ret
ficomps
ret
dec
bound
test
hlt
mov
and
push
and
adc
imul
mov
sub
mov
mov
dec
bswap
jb
jae
jo
jmp
adc
dec
adc
sub
adc
mov
mov
mov
mov
addl
pop
push
leave
adc
outsl
jb
scas
scas
adc
daa
push
ljmp
adc
sbb
xchg
rcr
lcall
ja
test
adc
cmp
mov
sbb
xchg
bound
enter
nop
jp
xchg
mov
pusha
test
fs
xchg
fadds
dec
or
push
loop
cmpsl
pop
loope
sub
mov
adc
adc
xor
jge
sarb
hlt
or
lahf
jmp
lods
jle
mov
xchg
aad
in
movsl
pop
hlt
test
leave
cmp
add
es
in
cmpsl
mov
imul
jp
push
push
dec
push
ljmp
leave
inc
int
je
pop
push
popf
jns
xlat
jge
xchg
sbb
aas
sbb
push
xor
loop
mov
out
int3
repnz
xchg
hlt
out
jo
es
shlb
cmp
mov
ss
popf
add
pop
nop
push
stos
jmp
jmp
push
leave
mov
loop
rolb
dec
leave
icebp
sub
daa
cmpsb
lods
into
jo
rclb
and
lock
cmp
fwait
cs
scas
sub
mov
sub
mul
mov
cld
aam
mov
xlat
in
lcall
pop
push
gs
lods
loopne
insb
xchg
fisubl
dec
sbb
std
inc
pop
daa
push
inc
mov
dec
test
mov
jg
add
out
fisubl
push
dec
outsb
inc
leave
aad
push
sbb
fisubl
or
jge
inc
xchg
push
mov
cwtl
jbe
testb
jns
std
out
sub
pop
jne
frstor
mov
ljmp
push
stos
fs
fwait
iret
inc
insl
clc
adc
jle
lods
pop
aam
adcb
inc
sbb
aaa
movsb
aaa
mov
dec
addl
lret
jns
call
mov
fisubrl
jne
or
inc
and
in
and
jecxz
leave
aas
jne
xchg
insb
xchg
xor
lahf
jmp
push
cmpb
popf
sub
aas
outsl
cmp
and
ret
adc
dec
push
in
mov
pop
mov
cwtl
hlt
and
loope
or
jno
lods
pop
jae
iret
add
push
loopne
fadds
test
inc
popa
lret
xchg
pop
scas
f2xm1
cmp
jb
addl
pop
les
pop
lcall
pop
jmp
shl
movsl
mov
aad
adc
pop
imul
mov
sub
adc
cwtl
jns
mov
fidivrl
movsl
adc
xchg
lods
inc
enter
mov
dec
push
mov
rolb
mov
jg
mov
push
outsb
mov
cmp
es
cmp
int3
dec
fisubs
aas
push
mov
lretw
push
jp
pop
into
jmp
cwtl
es
jp
imul
outsl
xor
aaa
mov
or
sub
jns
mov
aad
push
sbb
jp
pop
cmp
mov
cli
lahf
aam
ja
jb
les
push
and
push
aad
or
sub
jge
jl
mov
xchg
add
movsl
and
jl
jmp
add
popl
shll
jb
or
movsb
wrmsr
sarl
pop
scas
sub
insl
mov
mov
add
xor
or
in
dec
jmp
sub
sub
fildll
in
adc
dec
jbe
aas
out
pushf
inc
inc
dec
jb
and
xor
repz
dec
stc
adc
pop
sbb
xchg
jae
mov
sub
adc
test
sub
lcall
decb
push
movsb
bound
fwait
push
pop
inc
mov
or
mov
jmp
aas
test
mov
test
push
ljmp
xchg
lds
repnz
jne
pop
xchg
ret
std
jnp
subl
mov
cmpb
dec
mov
jmp
scas
pop
out
jae
mov
icebp
mov
mov
cmpl
xlat
mov
xchg
insb
cmp
ror
bound
ficoms
pop
loop
movsl
jne
sbb
popa
push
push
inc
xor
fs
mov
rorl
xchg
jecxz
jecxz
sub
jnp
loope
out
xchg
push
mov
mov
push
fdivrs
xchg
test
pop
daa
fists
mov
adc
stos
mov
imul
sbb
push
test
ja
fwait
mov
pop
test
sbb
shlb
enter
sub
xchg
xchg
jmp
out
pop
sbbb
cld
pop
inc
ds
ret
loope
int
into
xchg
sbb
cmc
jae
in
inc
pop
jecxz
pop
jno
in
orl
sub
clc
sbb
aaa
ret
sub
jp
test
nop
xchg
push
xchg
lahf
pop
insl
mov
out
mov
and
lea
sbb
stc
iret
cmpsb
or
inc
int3
or
push
sarb
add
fsubs
int3
inc
mov
incl
cmpsb
ret
jg
push
sub
ss
call
cmp
dec
cmpsl
ret
sbb
pop
inc
adc
aam
mov
sub
adc
jmp
sbb
aaa
sti
daa
xchg
lret
dec
sarl
sti
sub
mov
shr
adcl
adc
xchg
sub
pop
movsb
mov
and
pop
icebp
xchg
mov
and
push
enter
and
stos
scas
insl
mov
lods
dec
movsl
adc
cltd
test
inc
inc
sub
add
jbe
stc
repz
leave
jb
repz
inc
and
jge
sub
rclb
scas
popa
or
cmp
push
push
js
push
mov
mov
push
aaa
mov
fs
mov
inc
dec
or
test
xchg
lods
movsl
push
cmpsb
cmpsl
mov
mov
cmp
inc
lahf
dec
add
mov
iret
int3
mov
dec
xchg
push
push
imul
js
loope
jb
jg
es
das
int3
es
mov
push
or
pop
mov
imull
andl
or
inc
sub
adc
mov
xchg
out
loope
push
push
and
adc
ds
xor
inc
incb
push
ror
cmp
es
out
out
sarb
mov
popf
cmp
and
stc
and
xchg
push
addr16
cmp
iret
jmp
fs
adc
ljmp
pop
shrl
ficoml
and
and
pop
ss
fldt
mov
adc
fwait
xchg
or
cmp
sbb
mov
adc
stos
lea
sarb
dec
mov
xor
mov
mov
inc
loop
ficoml
mov
stos
and
dec
stos
add
lods
je
loopne
dec
pop
push
dec
lahf
xchg
movsl
mov
mov
nop
jns
sahf
xchg
test
je
adc
push
adc
mov
jbe
dec
inc
mov
mov
adc
mov
decl
mov
stos
dec
lahf
mov
push
call
test
fiadds
lods
js
loopne
aam
and
ss
lock
mov
sarl
lock
pop
xchg
test
jno
negb
lret
push
jb
lret
push
pop
sbb
dec
pop
jp
outsl
cmp
sbb
jo
std
mov
sarl
add
stc
adc
in
cmp
out
push
ljmp
jge
pop
cmp
ret
add
adc
sbb
int3
push
mov
inc
negl
rcl
mov
and
lods
pop
mov
lcall
sbb
iret
pushf
adc
daa
out
cli
ljmp
push
negl
ss
dec
sbb
addr16
inc
sub
mov
int3
pop
and
add
push
jbe
aas
and
mov
dec
test
dec
and
insb
xchg
pop
out
dec
cmp
adc
aaa
add
aam
and
lods
mov
jns
or
and
test
adc
push
fcomip
push
jae
mov
movsb
outsl
jg
push
push
inc
xchg
in
clc
scas
jle
adc
jl
pop
mov
data16
leave
mov
xchg
inc
in
aaa
mov
and
dec
les
jns
xchg
jno
sbb
pop
mov
call
sub
xchg
les
mov
fwait
cmpl
mov
mov
pop
testb
mov
xchg
mov
fsubl
push
popf
lahf
cmpsb
jb
jns
dec
jecxz
xor
cmc
out
pop
jno
mov
ficoms
sbb
es
out
xchg
adc
lahf
shr
std
nop
push
xchg
mov
nop
pop
xchg
and
lods
adc
mov
aam
inc
rolb
mov
dec
mov
call
mov
sahf
stc
fwait
mov
pop
fdivl
call
js
popa
stos
dec
sub
push
jmp
icebp
test
cmpsb
push
add
test
xchg
pop
xor
mov
enter
dec
dec
mov
in
shr
cmc
cmp
and
or
xor
imul
dec
and
xor
mov
mov
pop
sbb
or
mov
mov
pop
andb
out
ljmp
jle
pop
mov
xchg
adc
dec
hlt
arpl
jno
dec
push
or
xchg
aad
mov
push
stos
sub
cmp
addl
jno
aas
jb
dec
xchg
inc
mov
lret
jle
ret
pop
pop
in
aas
into
es
stos
sub
pushf
shrb
lock
mov
push
mov
pop
xor
scas
inc
pop
mov
xchg
lods
iret
adcb
pop
pop
leave
and
adc
jmp
adc
cmp
inc
mov
hlt
push
jmp
xchg
pop
xchg
flds
je
cs
mov
push
cmp
gs
test
sahf
in
sub
flds
push
xlat
dec
and
dec
inc
pop
push
xlat
xchg
arpl
loope
iret
inc
dec
fcompl
movntq
adc
imul
inc
jg
push
mov
jo
jns
sbb
cmp
push
dec
cwtl
fwait
mov
cmpb
bnd
int
and
std
ret
push
xorb
cmc
push
pop
out
popf
imul
xor
ljmp
cmp
xchg
mov
shlb
push
in
pop
push
rcl
mov
pop
mov
mov
movsb
loop
aas
fistps
clc
icebp
sbb
mov
dec
loope
nop
push
or
mov
xor
cli
test
aaa
dec
push
pop
les
hlt
addr16
aaa
inc
add
gs
clc
lods
fs
add
sub
loopne
push
insb
gs
shll
mov
mov
fs
ret
push
cs
nop
pop
jge
inc
or
pop
mov
pop
iret
je
push
adc
pop
hlt
add
add
mov
push
sbb
mov
pop
xchg
mov
mov
dec
mov
sub
and
cld
jno
ficoml
xchg
jae
mov
dec
push
std
sub
ds
in
lret
repz
push
inc
daa
push
push
into
cltd
dec
in
pop
lds
sbb
ja
xorb
xor
andb
movsb
rcr
xchg
push
inc
aam
in
xor
ljmp
dec
sbb
adcl
adc
jecxz
xor
xor
movsl
pop
xor
pop
add
mov
shrl
sbb
add
aaa
pop
dec
in
pop
cmp
push
sub
jmp
and
push
push
jbe
sub
pop
inc
inc
xchg
rolb
sbb
jmp
jg
push
pop
orl
outsl
mov
cmp
in
inc
jecxz
push
dec
push
fldenv
push
mov
out
add
pop
nop
js
movsb
int
adc
arpl
sub
dec
int3
inc
cmpsw
mov
aam
inc
pusha
push
mov
leave
pop
sahf
aam
addb
cmp
jo
pop
cld
or
add
sbb
jb
fdivl
sar
mov
repz
enter
mov
sub
in
leave
outsl
mov
pop
xchg
and
mov
cmpb
jmp
xchg
sub
jo
sub
xchg
add
cli
fistps
scas
or
dec
mov
xchg
sub
mov
inc
adc
and
jbe
fstl
mull
das
dec
push
pop
mov
xor
xor
movl
sbb
sub
mov
lea
pop
rcr
stos
cmp
lret
lcall
push
xchg
jne
jnp
pushw
mov
test
sbb
iret
and
xchg
insb
hlt
adc
jg
scas
das
push
jp
mov
jge
or
cwtl
mov
leave
push
mov
test
sub
das
mov
mov
sbb
xchg
xor
add
xchg
push
lret
pop
enter
cmp
pop
mov
clc
into
fadd
mov
dec
aam
adc
fs
dec
aas
das
xor
mov
ja
js
dec
sarb
sub
les
dec
addl
mov
jae
sbb
pop
add
sarb
cmp
push
rorb
xchg
xchg
in
shll
or
jmp
push
out
stos
fstps
enter
in
sub
bound
sahf
or
mov
ds
pusha
test
or
mov
rcrb
inc
stos
and
sub
scas
push
pop
push
pop
cmp
shll
stos
push
jmp
or
sbb
mov
test
lret
sbbb
repnz
mov
insl
and
ret
es
mov
mov
sub
adc
xchg
mov
push
pop
fildl
jnp
fwait
data16
lods
shr
cmp
neg
jg
mov
cmc
sbb
jecxz
mov
cmp
push
mov
inc
inc
out
fs
sbb
jl
aam
xchg
push
inc
jns
gs
hlt
adc
pushf
aam
mov
in
add
adc
arpl
aaa
jmp
push
fs
in
sbb
inc
mov
sti
sub
xchg
mov
daa
xor
xchg
xor
xchg
lea
popa
outsl
cmp
icebp
and
icebp
cmpsb
pop
in
sbb
insl
mov
xchg
in
jns
sub
push
mov
xor
cmp
jp
jno
or
inc
rorb
lcall
gs
out
adc
popa
pop
div
add
xchg
jae
push
mov
in
test
add
pop
pop
pop
adc
mov
popa
adc
push
setg
jbe
aas
arpl
sbb
loop
repnz
insl
lahf
and
push
and
mov
push
and
enter
mov
loop
aaa
not
jnp
int
inc
cmp
out
clc
jmp
iret
inc
ret
and
cli
das
sahf
lcall
imul
mov
push
xor
ret
xlat
mov
addr16
push
mov
xchg
xor
xchg
xchg
adc
push
mov
aad
sub
call
cmp
push
lahf
sbb
int
les
dec
out
stos
testb
ds
jg
xor
inc
pop
xchg
adc
ja
fst
repz
xor
xchg
jne
jle
xor
xor
xchg
and
movsl
push
daa
xchg
pop
xlat
sub
pop
push
js
push
mov
sbb
addr16
faddl
xchg
push
data16
icebp
cltd
mov
seta
gs
sub
mov
iret
and
mov
das
pop
add
in
test
imul
vdivpd
mov
push
stos
add
imul
jecxz
stc
stc
inc
sbb
movsb
push
add
or
lcall
push
loop
jnp
mov
mov
out
stc
mov
test
adc
xchg
testl
in
and
shl
and
rorl
sbb
movsb
hlt
push
nop
adc
jge
xchg
dec
mov
mull
shrb
fbstp
sbb
cld
or
xor
mov
push
cld
jg
loopne
xlat
lcall
pop
and
mov
stc
or
into
mov
sbb
mov
dec
andb
adc
rcr
pop
add
cld
aam
out
mov
add
push
sbb
cmpsl
pop
push
jg
decb
and
add
cmc
push
cmp
and
sub
push
fnstenv
cmp
push
xor
rclb
or
inc
push
in
lahf
dec
std
sub
fcoml
push
repnz
pop
push
xchg
adc
loop
mov
lods
xchg
mov
xor
aam
push
xchg
add
add
cwtl
jb
mull
pushf
mov
mov
or
lret
sbb
xchg
xor
add
mov
inc
lods
lcall
push
inc
and
lds
repnz
subb
sub
pop
jb
xchg
jg
lods
dec
mov
rorl
or
dec
mov
xchg
adc
adc
incl
jg
cmp
jne
shll
pop
mov
out
xchg
mov
jg
fwait
push
jecxz
rolb
jl
repz
scas
pop
es
sbb
mov
repz
cltd
xor
push
mov
add
inc
push
into
push
mov
ja
mov
sbb
xchg
add
in
xor
inc
lret
or
mov
adc
fsubl
xchg
push
lds
divl
cmp
push
fistps
test
push
mov
in
ljmp
xchg
test
ja
enter
outsb
cmpsb
mov
add
push
jg
xchg
cltd
out
jg
icebp
into
mov
ljmp
jae
add
mov
int3
aas
test
and
popf
adc
inc
out
aam
lds
aam
jl
cmp
pop
push
and
cwtl
movsl
dec
bound
outsl
push
int
push
or
jle
daa
dec
repz
loop
fistpll
mov
mov
pushf
adc
xchg
inc
dec
jle
and
fcmovne
pop
push
bound
xor
negb
jp
pop
mov
adc
lock
fmuls
sub
jbe
ds
lods
push
adc
dec
lods
bound
xor
fwait
lea
mov
fimull
iret
jno
add
xchg
jae
xchg
and
mov
sbb
xchg
xchg
loop
jp
xchg
jb
out
cmpsb
repz
dec
push
or
in
push
add
xor
out
sbb
cwtl
cmpsb
jg
test
cmp
fldenv
icebp
add
int
std
lret
pop
inc
jp
inc
cmp
outsb
add
lret
loope
mov
xchg
xchg
insl
loop
shlb
mov
mov
dec
sahf
add
sbb
pop
stc
mov
mov
int
mov
sarb
or
or
add
cld
push
add
dec
xor
inc
lods
or
mov
arpl
ds
jmp
outsl
xor
lds
shll
sub
mov
stc
jmp
outsl
adc
cltd
dec
fnstsw
sbb
add
leave
repz
test
icebp
int
lret
add
lea
sti
sbb
jb
push
mov
jge
orl
dec
and
and
mov
dec
and
test
jne
mov
sti
adcl
sub
or
shll
xor
sub
sub
adc
cmp
mov
mov
jp
int
in
add
inc
dec
out
in
aas
pmaxsw
imul
repz
and
push
les
cltd
dec
aaa
ret
fstps
jnp
adc
lahf
repnz
mov
pop
inc
inc
xlat
rclb
sub
push
or
stos
adc
adc
mov
dec
add
mov
fisttpll
jae
pop
mov
out
icebp
shl
mulb
icebp
fcompl
push
movsl
orl
lods
test
gs
hlt
repnz
cmp
mov
dec
fcoms
lret
imul
icebp
gs
loop
xor
mov
fimuls
dec
hlt
adc
jno
cld
cltd
lods
sbb
ljmp
sbb
jp
leave
inc
pop
mov
push
or
lret
push
addr16
and
dec
inc
xchg
jnp
int
testb
jno
rcll
out
movzbl
pop
ret
cs
sub
sbb
or
insl
cmp
lahf
xchg
jl
push
shlb
lea
add
int
rdtsc
xchg
cmc
pop
mov
daa
mov
jno
daa
ret
fidivs
gs
ds
pop
aad
adc
add
mov
sbb
xor
and
aam
ds
int3
das
push
push
mov
inc
lret
hlt
movsb
mov
inc
stc
insl
xchg
cmp
adc
cmpsl
fbld
loope
rcl
xor
or
cmp
mov
sti
and
sbb
push
cmp
or
mov
xlat
cli
inc
fs
xchg
push
sub
fcmovne
mov
mov
push
dec
sahf
dec
dec
inc
inc
mov
push
sar
add
rcrb
mov
mov
ficomps
pop
lods
das
mov
pop
sahf
mov
aas
pop
mov
xchg
js
addr16
jmp
sub
xor
mov
ds
dec
pop
cmp
or
out
dec
pop
dec
stc
xor
sub
and
push
decl
jecxz
fidivrl
mov
jle
fwait
ss
arpl
xchg
sbb
outsb
add
xchg
push
mov
mov
lea
loop
cmp
sub
setl
cmp
lock
rcr
lods
mov
add
push
sub
sbb
in
lret
mov
cmp
adcb
mov
gs
inc
mov
test
xor
leave
loopne
mul
sub
repnz
je,pn
sub
mov
push
xor
cld
lcall
jg
cmp
lahf
adc
loope
and
jl
test
or
shrb
mov
lahf
jmp
rcrl
inc
inc
pop
mov
pop
pop
out
shlb
jle
mov
fbstp
leave
push
dec
xchg
cs
add
inc
es
lods
jl
push
pop
std
pusha
repnz
cmc
mov
inc
into
sub
mov
int3
mov
dec
xchg
mov
mov
test
and
lret
std
xor
into
cmp
fwait
or
mov
pop
adc
out
and
push
jmp
pop
inc
lds
mov
jae
sbb
das
sbbl
dec
dec
pop
movsb
xchg
or
test
jmp
mov
pop
push
cmp
pop
loopne
cmpsb
call
mov
dec
mov
loop
inc
sbb
cmpsl
inc
push
test
and
sub
and
push
jp
inc
push
push
int
or
inc
jns
adc
cwtl
xor
mov
iret
push
jne
clc
cmc
shll
mov
aad
jl
in
add
aaa
stos
popf
push
mov
sub
mov
xor
xor
mov
jle
shlb
mov
lret
scas
push
pop
mov
jge
mov
repz
dec
shll
inc
mov
jecxz
out
enter
pushf
aas
sbb
int
rcll
div
sub
push
jecxz
pop
pop
popf
dec
mov
aas
nop
negl
rorl
sub
clc
xor
ret
imul
daa
mov
aaa
cli
int3
cmp
push
add
add
pop
pop
xchg
rorl
sub
xchg
scas
sub
in
mov
add
mov
loop
mov
lret
push
dec
sbb
pop
lret
insb
push
popf
mov
fs
mov
add
push
pushf
lods
icebp
scas
ret
mov
xor
int
pop
out
push
cmp
cmpsl
leave
push
enter
sub
jae
cmpsl
fsubrl
jge
dec
data16
pop
sub
cs
lret
movsb
mov
xchg
popa
jl
dec
pop
jnp
adc
test
faddl
push
cs
or
pushl
or
repnz
jge
jmp
decb
cmc
push
mov
push
mov
xlat
popf
inc
and
push
mov
shll
xchg
mov
out
xchg
pop
dec
push
mov
jno
mov
mov
fstpl
mov
in
ret
int3
test
sbb
cmp
pop
out
jl
outsb
adc
push
shl
lods
cmp
push
pop
inc
std
mov
loopne
or
xchg
adc
ljmp
in
mov
pop
pop
movsb
sahf
add
sbb
subb
mov
test
addr16
push
lcall
sahf
gs
and
push
inc
mov
adc
mov
pop
mov
mov
inc
jno
cmpsl
adc
mov
and
in
insl
xchg
mov
repz
ss
and
adc
xor
or
aaa
lret
call
icebp
dec
stos
and
imul
movsl
jb
dec
aad
jl
mov
adc
out
fwait
rorl
or
lea
jne
push
arpl
inc
push
cmc
add
inc
sti
ds
es
pop
sub
mov
jno
loopne
mov
jge
jecxz
and
sbb
rolb
cwtl
pop
in
emms
int
and
inc
xchg
fldl
iret
xchg
jge
shl
popa
cmp
test
cmp
in
popa
and
mov
int3
outsb
out
dec
imul
pop
pushf
cwtl
dec
setp
and
cmpsl
shll
adc
and
jns
lock
xchg
fisubs
andl
cli
xlat
xchg
xchg
xor
das
repz
dec
lcall
and
and
call
int3
sub
int3
sarb
insb
arpl
xchg
or
iret
add
aad
data16
lods
add
mov
das
mov
dec
sbb
push
loop
pop
sahf
or
enter
xchg
mov
add
add
sbb
out
cld
sbb
xchg
sti
and
and
ss
xor
dec
movsb
loop
mov
fstp
xor
jb
in
stc
lret
mov
test
psubsw
adc
pop
mov
test
mov
push
adc
pcmpeqw
pop
inc
jo
and
dec
or
cld
leave
clc
mov
jmp
xchg
rclb
jns
xchg
lods
or
mov
sbb
sub
cmpsl
loope
ds
xchg
decb
hlt
in
imul
movsl
andb
add
outsb
lock
jbe
push
mov
cwtl
ror
pop
addr16
or
dec
in
push
pop
push
push
in
push
push
and
pop
pop
and
ret
js
push
sbb
mov
xorb
and
cmpsl
adc
jns
popf
mov
in
arpl
pop
mov
dec
adc
pop
mov
add
dec
inc
mov
adcl
cwtl
out
push
clc
lock
ss
lea
pop
stc
mov
xlat
shll
lret
ret
pop
dec
or
lret
dec
mov
cmpsb
fimuls
dec
out
fdivrl
aad
sbb
mov
xchg
push
xor
lahf
cmp
lcall
out
out
mov
xchg
mov
clc
mov
rorb
dec
int
imul
scas
xorb
or
leave
mov
cmp
stc
rclb
sbb
nop
adc
ja
scas
push
add
mov
xor
add
aad
pop
rcr
adc
cmpsb
sub
popf
push
cmp
iret
add
jno
mov
scas
lret
add
fdivrl
jns
add
testl
dec
cmp
mov
fisubrl
mov
clc
fldl
mov
inc
clc
and
loop
sbb
mov
hlt
ret
scas
loopne
fisubrl
pop
inc
ret
xchg
lock
lods
nopl
ljmp
xchg
mov
adc
std
lret
daa
sub
cwtl
rolb
mov
stc
adc
adc
data16
xchg
and
adc
rcr
xchg
call
out
in
cmp
adc
push
fadds
xchg
js
es
mov
andl
mov
and
xor
add
jl
mov
cmp
sbb
and
or
icebp
and
cmp
cs
ret
xor
add
fcoms
xor
xchg
lods
or
test
fcompl
xlat
add
movsb
inc
insb
ss
add
mov
cmp
scas
test
mov
pop
rcrb
cltd
dec
xchg
incl
sub
inc
fwait
mov
inc
pop
scas
loop
and
fwait
popf
scas
and
mov
push
mov
jo
insb
push
pop
jle
lods
mov
imul
push
inc
repnz
pop
imul
dec
js
sub
cmpsl
and
lods
fdivr
mov
pop
ja
dec
roll
adc
mov
lods
mov
lods
nop
lea
insb
xor
iret
and
aam
enter
daa
xchg
mov
imul
mov
mov
push
pop
inc
lcall
jno
pop
in
xchg
subl
add
xchg
add
addr16
outsl
sub
and
jge
addr16
lahf
outsb
sbb
jle
lcall
xor
sub
push
divl
cwtl
push
pop
push
call
xlat
sub
and
hlt
cmp
insl
pop
pusha
mov
mov
adc
daa
jb
adc
xor
and
ficomps
insb
iret
sub
add
loopne
jmp
xor
add
std
xor
fstps
repz
leave
xchg
lcall
inc
mov
mov
cli
inc
jae
sbb
xor
shl
mov
movnti
adc
int3
sub
xor
jbe
insb
mov
mov
popa
outsb
lds
lea
cmp
dec
pop
xorb
dec
and
jns
jae
shll
sbb
and
mov
mov
add
cld
and
sbb
ret
and
sub
jle
loope
jno
jb
iret
insb
repz
xor
add
dec
imul
push
cmpsl
dec
mov
stos
push
arpl
xor
or
jns
or
jecxz
pop
popfw
insl
dec
repnz
jl
inc
test
outsl
sbb
movsl
adc
aad
pop
movsb
mov
gs
negl
jle
sub
sti
mov
jp
sub
mov
test
les
xlat
xor
xchg
jb
stos
mov
mov
out
jle
testb
loopne
sbb
and
sbb
call
fists
sbb
mov
pop
inc
and
and
sub
test
fidivrs
mov
out
mov
js
lock
ficoms
pushf
add
cmc
adc
add
sbb
les
stos
xor
cltd
xchg
das
and
mov
mov
push
and
fnstenv
mov
mov
loop
sub
lods
and
lret
call
adc
lea
adc
push
jg
icebp
adc
xlat
aas
aad
iret
lret
ss
cwtl
sbb
and
cmp
aad
cmp
xchg
push
je
test
pop
das
hlt
xchg
lods
dec
adc
and
jns
inc
pop
daa
outsl
adc
add
adc
push
add
mov
hlt
jmp
cmp
mov
fimuls
cmc
icebp
sub
hlt
mov
imul
mov
pushf
in
pusha
mov
pop
loop
pop
and
jg
fstpt
les
lea
lods
push
ret
sub
rcrl
scas
out
rcrb
jl
fcomip
arpl
push
gs
adc
std
adc
inc
data16
or
push
or
out
mov
pop
rorl
int
out
outsl
and
xor
xchg
ret
sti
shlb
dec
mov
mov
jno
in
jne
sti
pop
cmpsl
mov
test
cmp
leave
test
shrb
mov
cmp
mov
xchg
cmp
in
std
xor
int
inc
cs
add
jne
std
scas
bound
sub
ret
and
xchg
mov
and
adc
sub
pop
imul
bound
insb
push
sbb
xchg
push
sahf
cmp
int
and
mov
out
into
popf
insb
loopne
adc
xor
jne
arpl
pop
aaa
dec
nop
dec
clc
jecxz
push
mov
mov
add
push
mov
stc
sarb
xor
ret
sbb
mov
mov
cld
aaa
outsl
sbb
stos
lcall
xor
mov
mov
popf
in
fwait
xor
mov
daa
jnp
jae
mov
mov
mov
std
and
repz
outsl
lds
dec
lret
cmp
jo
test
jnp
mov
pop
inc
pop
enter
pop
loope
out
in
mov
jg
rcll
xchg
xchg
and
adc
mov
aas
jns
sbb
xchg
sub
in
cmpsl
jg
pop
jnp
lcall
mov
and
inc
pop
push
test
mov
or
call
aad
sbb
jge
sti
pop
jb
popf
mov
imul
out
fwait
adc
je
push
push
sbb
jge
push
adc
xchg
imul
inc
std
ret
lock
leave
lret
inc
out
mov
outsb
repz
inc
jne
nop
sarb
mov
cmc
popf
notb
gs
and
mov
testl
inc
ret
int3
fs
mov
sub
mov
mov
mov
pop
std
jae
fdivrl
ja
andl
test
cmp
or
mov
inc
mov
push
push
mov
pop
add
xchg
stos
int
push
push
push
stos
mov
cmp
js
mov
adc
mov
rorb
mulb
jae
or
leave
data16
call
int
dec
dec
sub
shlb
add
fstp
call
aas
add
cmp
aas
sbb
mov
rorb
fidivrs
cltd
pusha
fstps
jge
jns
jae
sub
mov
jmp
mov
rcr
and
xor
push
sub
adcb
or
nop
mov
int
popf
lcall
jl
fistps
mov
or
xor
loopne
and
mov
inc
mov
enter
pop
addr16
lea
dec
add
mov
and
les
movsb
leave
ret
fucom
mov
mov
pop
adc
inc
pop
jecxz
push
mov
daa
pop
jbe
inc
sar
aam
sub
repnz
jp
xor
pcmpeqd
mov
fildl
adc
movsl
mov
push
icebp
lret
cwtl
pop
pop
xlat
add
mov
fcoms
ds
ss
test
cmp
push
lods
pop
xlat
or
sub
out
xchg
mov
shr
aas
sbb
mov
hlt
sbb
cmp
xchg
sarb
int
sbb
push
mov
jae
ss
adc
sub
dec
cld
push
out
sbb
sahf
dec
pop
dec
sub
or
dec
in
fdivp
adc
cld
jmp
repz
add
push
fiadds
rcl
shlb
pop
jo
dec
inc
push
dec
cmpsl
out
jae
test
loopne
pop
pushf
pop
xor
andl
jo
clc
pop
notl
adc
add
adc
cmp
js
mov
jne
mov
pop
mov
fs
cmp
pop
fsubrl
add
stos
adc
mov
dec
imul
mov
mov
fwait
inc
shll
test
lret
cmp
int
mov
mov
out
fldenv
insl
mov
jo
xor
mov
jnp
mov
and
in
outsb
push
addb
jbe
popf
pop
nop
sti
test
adc
lock
sub
push
frstpm(287
in
push
mov
stos
jle
lods
jl
xor
arpl
xor
nop
insb
out
fs
mov
jecxz
mov
pmulhuw
pop
mov
add
inc
add
ss
adc
lcall
and
mov
pop
fimull
dec
jb
or
push
fsubrl
pop
ja
sub
cld
cwtl
pop
das
sbb
sub
popa
lret
jne
or
mov
mov
mov
sub
inc
push
and
nop
push
jbe
mov
int
mov
call
inc
out
bound
inc
stos
dec
in
or
mov
xchg
cld
mov
jmp
jbe
mov
test
lcall
mov
pop
add
repz
aad
add
neg
stos
or
fsubrl
add
sbb
add
fists
jl
mov
push
mov
xor
loopne
or
cs
repnz
cmp
insl
add
xchg
sbbb
push
pusha
in
push
push
aad
loopne
jo
stos
and
xchg
es
inc
dec
aam
adc
stc
lret
cmp
push
jne
aaa
lds
loop
or
xlat
sbb
mov
insb
adc
dec
pop
popf
int3
xchg
push
pop
dec
rolb
pop
cld
shlb
and
subb
out
jle
repnz
mov
mov
int
sub
adc
aas
inc
mov
jecxz
mov
xor
jns
popa
lods
inc
test
fildll
imul
sub
jecxz
call
outsl
xchg
add
adcb
popf
or
inc
or
aaa
fidivrs
out
repnz
mov
mov
bound
cmp
add
and
int3
jns
mov
scas
shlb
adc
dec
mov
sbb
jbe
hlt
xor
xchg
mov
data16
dec
sti
lret
dec
sub
push
addl
pop
mov
push
push
adc
mov
das
rcrb
mov
fwait
or
ja
xchg
inc
inc
sbb
hlt
filds
xor
xor
in
ret
mov
dec
das
xchg
icebp
sahf
in
mov
sbb
mov
cs
or
adc
jecxz
push
stos
jmp
into
jb
jnp
gs
xchg
es
sub
jmp
and
mov
sbb
add
shlb
negl
mov
push
test
js
dec
adc
mov
push
and
lods
outsl
pushf
loope
push
jl
mov
cmp
xlat
jo
test
jmp
xchg
loop,pt
sbbl
adc
sub
aas
xchg
xor
mov
dec
ss
stos
icebp
jno
xchg
mov
push
mov
adc
xor
add
mov
sub
xchg
aam
aad
add
jmp
loopne
dec
mov
dec
cmp
mov
das
dec
lret
test
jg
sbb
movsl
jae
clc
ds
mov
clc
push
mov
nop
test
sub
push
ficoml
pushl
jg
push
clc
inc
lea
fisubs
ljmp
dec
jle
mov
sbb
mov
fsubs
adc
xor
ja
movb
pop
dec
mov
stc
in
inc
sbbl
dec
aam
out
push
jl
mov
test
daa
or
xchg
jmp
xor
mov
mov
pusha
cwtl
ret
orb
xchg
inc
mov
fidivrl
clc
jg
mov
icebp
add
push
in
sub
cs
push
push
pop
lret
sub
movsl
vpsubusb
inc
mov
pop
push
scas
cs
ja
add
repnz
pusha
int
pusha
aad
mov
notb
rcrb
push
filds
sub
jbe
inc
out
mov
outsb
adc
xorl
mov
and
out
sti
dec
or
stc
mov
sbbb
ja
xchg
in
mov
push
shrl
shr
test
cmpsl
adc
pop
out
mov
inc
rcrl
dec
xchg
orb
xor
dec
test
push
mov
js
xchg
pop
ret
aas
xor
xor
pop
gs
shrl
stc
sbb
mov
inc
mov
lods
dec
jg
lahf
leave
add
lea
aaa
xchg
cmp
mov
cmp
aam
and
mov
sub
sarl
cli
cmpsb
mov
pop
mov
xor
ss
lcall
roll
popa
cli
pop
std
cmp
mov
aam
loop
mov
ja
lret
xlat
cmp
or
or
mov
mov
mov
inc
xor
in
ret
or
mov
dec
adc
and
je
repz
in
jbe
jno
stos
lock
cmpsl
sbb
xor
shr
mov
jp
inc
xor
imul
out
ljmp
mov
inc
jb
dec
xchg
ficomps
cmp
pusha
notb
dec
sarl
pop
push
sub
aad
mov
add
fs
jb,pn
lcall
adc
ljmp
mov
and
cli
in
cmp
loope
jecxz
fildll
jecxz
dec
jns
xchg
mov
jl
imul
xchg
or
out
out
add
mov
jecxz
pop
out
pop
lret
add
inc
or
pop
cmp
push
mov
lahf
enter
lods
stos
aas
repz
fwait
scas
cmp
cmp
xor
leave
stos
adc
fscale
jns
pop
idiv
add
aam
inc
xor
jo
cwtl
mov
jb
call
cltd
xchg
xchg
loopne
sbb
pushf
testb
mov
xor
add
js
mov
cltd
fbstp
mov
pop
cltd
pop
lahf
push
jno
loop
sub
pop
fidivs
dec
inc
lret
jp
int
inc
jp
push
xchg
jg
push
mov
clc
cmp
cld
nop
pop
inc
pop
aas
dec
mov
inc
scas
cmp
jp
cmp
in
dec
and
addr16
mov
jbe
mov
jg
arpl
xor
into
mov
pop
ja
pop
sub
sbb
mov
shll
pusha
xchg
add
pop
cmp
test
push
mull
add
repnz
jns
mov
lea
xchg
ffree
xorb
scas
pop
fisttps
xchg
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
data16
iret
dec
adc
mov
outsb
inc
lea
rcrb
js
jp
arpl
mov
shlb
adcl
sbb
les
dec
inc
mov
cwtl
cmp
sub
pop
pushf
pushf
mov
mov
out
in
mov
xor
aam
push
pop
scas
cmp
mov
sub
popf
push
or
mov
lea
jnp
xchg
push
out
mov
adc
test
das
mov
loop
inc
pop
sbb
mov
std
popf
loopne
mov
adc
cmp
inc
.byte
cs
add
add
bound
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
bound
add
add
add
mov
add
addb
add
bound
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
bound
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
bound
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
bound
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
bound
add
add
add
mov
add
addb
add
bound
add
add
add
add
add
rolb
add
add
bound
add
add
add
add
add
rolb
add
add
add
adc
add
add
add
add
add
add
loopne
add
add
add
bound
add
add
add
add
add
lock
add
add
add
adc
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
adc
add
bound
add
add
add
add
add
and
add
bound
add
add
add
add
add
xor
add
bound
add
add
add
add
add
inc
add
add
bound
add
add
add
add
add
push
add
add
bound
add
add
add
add
add
pusha
add
add
bound
add
add
add
add
add
jo
add
add
add
bound
add
add
add
add
add
addb
add
adc
add
add
add
add
add
add
nop
add
add
bound
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
mov
add
add
add
bound
add
add
add
add
add
rolb
add
adc
add
add
add
add
add
add
rolb
add
bound
add
add
add
or
add
add
add
bound
add
add
add
or
add
add
add
bound
add
add
add
or
add
push
add
add
add
bound
add
add
add
or
add
push
add
add
add
bound
add
add
add
or
add
push
add
add
add
bound
add
add
add
or
add
push
add
add
add
bound
add
add
add
or
add
add
add
add
bound
add
add
add
or
add
add
add
add
bound
add
add
add
or
add
add
add
add
bound
add
add
add
or
add
add
add
add
bound
add
add
add
or
add
add
add
adc
add
add
add
add
or
add
add
add
adc
add
add
add
add
or
add
add
add
adc
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
test
add
in
add
add
add
mov
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
mov
add
in
add
add
add
cld
movl
add
add
add
add
add
enter
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
in
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
in
add
add
add
inc
enter
add
add
add
add
add
add
add
add
add
in
add
add
add
push
enter
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
inc
ret
xor
popf
aaa
push
pop
into
pushf
mov
daa
sbb
shr
inc
xchg
xchg
adc
enterw
call
divl
cld
and
jne
mov
and
cld
pop
ds
aad
push
push
inc
pop
jnp
aam
addr16
and
xor
xor
mov
pop
jno
out
inc
dec
mov
mov
mov
test
cmp
add
inc
inc
pop
mov
pop
ja
mov
mov
daa
inc
insl
mov
or
mov
mov
lods
aad
sbb
daa
or
cmp
in
clc
mov
push
push
dec
push
fs
cmpl
adc
add
push
dec
int
sub
mov
inc
jle
lods
popf
out
ja
mov
negl
sub
adc
ja
std
aaa
aas
push
lret
cmpsb
lahf
inc
data16
inc
sbb
sbb
pop
mov
loope
sbb
dec
mov
jae
arpl
push
dec
mov
cmc
dec
hlt
jg
cmp
mov
arpl
iret
into
orl
call
sub
out
jns
mov
int3
loope
fcmovb
pusha
mov
jle
pushf
fs
add
push
popf
dec
into
push
jmp
mov
loopne
or
idivb
xchg
jns
shll
sub
sub
js
pop
flds
hlt
enter
jp
or
stos
pusha
mov
and
and
cli
push
leave
push
push
fstps
xor
cltd
push
imul
add
sub
mov
inc
or
mov
inc
xor
xor
lods
pop
hlt
xchg
out
sbb
pusha
push
hlt
and
sub
push
imul
dec
cmc
jnp
mov
in
sahf
ljmp
shll
sub
std
mov
cmc
sbb
stc
or
mov
outsl
adc
pop
nop
inc
fwait
xchg
fdivl
mov
cmpsl
jns
mov
pop
lock
fnstcw
dec
enter
or
les
or
insb
mov
pop
sbb
ja
mov
dec
mov
mov
movhps
lods
shlb
aaa
fcmovnbe
sbb
sub
add
jge
push
bnd
aaa
fisubl
adc
or
insb
shrb
adc
inc
addb
fcoms
push
test
ja
mov
rolb
cmpsl
std
inc
arpl
jnp
out
popf
xlat
adc
rorb
sbbl
das
pop
sahf
data16
out
js
cmpsl
in
aad
test
mov
lret
testb
cltd
pop
sub
imul
scas
ljmp
pop
lds
jb
or
pop
push
lods
adc
les
sbb
bound
xchg
xor
arpl
out
ud2
repz
push
cmp
mov
fs
cmc
xor
fiaddl
dec
into
push
pushf
mov
gs
out
sbb
bound
push
aas
pop
mov
xchg
mov
popf
sub
mov
filds
lcall
jg
cmp
js
andb
push
loopne
loopne
dec
andps
sarl
sbb
pop
iret
fsubrs
in
mov
scas
sbb
dec
ret
mov
xor
daa
jl
lahf
push
add
lods
ja
aam
out
mov
and
loope
jl
pop
xor
loopne
adcl
ds
and
lret
mov
pop
cmpsl
test
dec
mov
fistps
les
in
push
jmp
mov
jbe
fstl
test
xchg
jp
pusha
adc
iret
mov
mov
ljmp
adc
xor
xchg
divl
aaa
cs
jg
fs
popf
arpl
and
inc
gs
sub
add
clc
testb
stos
lret
cmc
pop
pop
xchg
dec
inc
jno
dec
push
dec
ret
sub
xor
in
xor
test
xor
stos
jno
push
out
and
push
and
ds
fisubrs
mov
dec
and
fiadds
pop
sbb
scas
nop
xchg
pop
cmp
movb
shl
pop
lock
mov
ret
pop
or
shlb
dec
repz
addr16
lock
jo
stos
insl
xchg
add
jnp
out
or
xchg
lock
movsl
pushf
cwtl
jecxz
notb
mov
in
mov
movsl
mov
jae
cwtl
adc
add
shlb
cmp
push
xor
daa
push
stos
pop
xchg
jle
cltd
pusha
sub
lock
cmp
cmp
cmp
xlat
jmp
push
inc
dec
stc
sahf
stos
movsb
scas
push
addr16
loope
lahf
inc
dec
adc
sarb
and
add
call
push
pop
adc
in
cli
dec
jo
mov
lea
lods
dec
adc
faddl
les
fwait
in
cmp
lods
lods
xor
mov
mov
ret
addb
test
les
add
cmp
cmp
imul
fs
and
enter
test
test
dec
xor
mov
xchg
xchg
xchg
fwait
repnz
sbb
push
pusha
lds
sahf
or
mov
inc
leave
sub
push
dec
mov
fdivr
xor
push
inc
stos
mov
or
adc
add
and
into
repnz
cld
jecxz
iret
arpl
push
pop
mov
leave
pop
sub
shr
enter
pusha
jb
push
xor
fsub
push
sub
loop
xchg
out
pop
push
inc
idivb
rcll
loope
ss
add
cwtl
scas
mov
out
or
clc
lods
sbb
jae
mov
xchg
add
gs
jle
fnstenv
jns
in
loop
insb
pop
xchg
movsb
fcomps
out
outsb
xor
dec
stos
icebp
add
push
cmpl
lahf
xchg
mov
mov
xchg
insb
cltd
daa
subb
loopne
push
cmp
fistpl
and
and
in
mov
in
hlt
xchg
jo
or
push
xor
push
cmp
mov
lret
mov
push
pop
mov
mov
mov
dec
cli
adc
and
je
pop
test
sub
mov
enter
icebp
cmp
shlb
mov
rclb
jb
push
pop
cmp
rcr
fldl
lods
adc
jbe
xchg
push
loopne
in
cmc
lods
push
inc
fnstenv
or
addr16
pop
mov
jge
jns
and
jle
das
jbe
mov
nop
es
dec
sub
je
test
xor
aaa
pop
adc
cmpsb
jecxz
jmp
cltd
decl
and
lret
outsb
add
pop
in
icebp
mov
xor
out
repnz
add
std
xchg
cmp
sub
addr16
mov
xchg
cmp
mov
mov
inc
loop
pop
pop
push
dec
test
fs
xor
inc
loop
add
jl
pop
pop
mov
xchg
dec
sbb
cld
cmp
fs
xor
insl
mov
bound
cmp
and
mov
jp
mov
sahf
roll
mov
adc
pop
mov
repnz
xchg
inc
lret
lds
mov
add
add
inc
push
iret
es
addr16
or
arpl
fsubs
jo
sbb
sub
mov
pop
or
andl
and
mov
mov
adc
pushf
int3
jno
push
andl
xchg
out
cltd
jne
aas
adc
add
add
jle
sbb
or
fucomp
jo
pop
mull
shlb
inc
enter
adc
mov
orl
xlat
scas
out
loop
out
inc
pop
and
call
inc
fcmovne
cmp
sahf
ljmp
xor
or
shll
dec
fmull
xchg
lods
js
push
or
js
dec
dec
insb
add
mov
ret
cld
fcomip
adc
jge
dec
mov
stos
icebp
pushf
sub
ret
push
movsb
cs
sbbl
mov
add
out
leave
pop
scas
cmpsl
mov
lock
cmp
inc
inc
call
push
push
daa
nop
leave
mov
push
sbb
pop
fistpll
mov
add
jno
dec
xchg
xchg
stc
inc
add
cmp
cs
mov
sub
mov
sti
pop
int
jecxz
outsb
nop
push
sbb
addr16
cmp
andl
xchg
imull
jns
sbb
sub
jg
ucomiss
es
push
pop
inc
stc
outsb
fisubl
push
xchg
mov
dec
out
adc
ljmp
insl
or
sbb
sbb
insl
movsb
xchg
jp
cmc
popf
xor
xlat
mov
push
xlat
test
mov
dec
xor
movzbl
add
pop
push
and
sub
arpl
sbb
fcompl
xor
shrl
fbstp
sbb
mov
rcll
or
jne
movsl
fucomi
push
push
pop
or
out
das
stos
pushf
std
and
ret
addr16
je
mov
xchg
xchg
jecxz
mov
ja
mov
push
mov
inc
test
fisttpll
jbe
pushf
push
faddl
lea
gs
adc
or
dec
int3
push
loop
add
adc
sub
ljmp
cwtl
cmp
push
stc
push
adc
test
nop
pushf
incb
mov
popa
cld
and
scas
and
mov
pop
aaa
sub
es
cmpsl
jae
jg
mov
cmp
xchg
lret
out
out
adc
bound
push
pop
pushf
test
hlt
nop
sbb
sti
jl
fsts
out
mov
xchg
pop
fs
cmp
inc
sub
xor
xchg
push
out
js
dec
sub
lahf
dec
inc
and
aam
and
cmp
push
repz
adc
pusha
jmp
clc
rclb
lods
inc
mov
adc
push
mov
sbbl
adc
adc
cmp
add
lahf
repz
fstp
addb
popa
push
jb
sub
push
fs
imul
fisubrs
cmp
adc
add
push
xchg
outsb
fildl
scas
call
sbb
movsl
push
rorb
iret
jns
int
or
and
jae
stos
lods
jle
mov
dec
data16
and
add
rcrb
mov
adc
push
jae
xchg
daa
cmp
cmp
shrl
mov
data16
fcompp
dec
js
test
sub
sbb
addl
clc
add
aaa
outsl
dec
cwtl
cmp
mov
and
lock
push
movsb
aam
mov
jns
stc
scas
sub
xchg
ljmp
dec
pop
push
cmp
mov
mov
mov
sbb
push
sub
shrb
andb
jmp
jg
ss
enter
push
out
mov
repz
ljmp
inc
lahf
test
inc
in
inc
sub
sbb
xchg
or
xchg
sub
sarl
iret
into
out
or
jl
xor
push
scas
mov
dec
cmpsl
dec
dec
xchg
xchg
mov
fcomps
in
adc
fwait
xor
add
mov
bnd
andb
adc
jo
jle
lret
imul
lret
sar
xor
jp
lods
fisubrl
pop
in
idiv
iret
push
xor
or
mov
mov
int3
inc
push
out
mov
push
mov
mov
test
mov
roll
fmuls
rcll
and
push
addr16
dec
mov
mov
fcmovbe
mov
sbb
mov
js
fisttpl
aaa
push
or
bound
cmc
mov
jbe
imul
repz
loop
mov
ds
cmp
jl
rorb
roll
jmp
and
mov
out
xchg
ret
jno
dec
jo
inc
movsb
jle
idivb
pop
clc
sbb
mov
push
pop
int
sbb
lret
sti
xchg
xor
adc
push
add
pop
jle
jge
lret
push
imul
xor
stos
xchg
xor
in
scas
push
jl
sbb
adc
fildl
enter
jb
cmp
mov
in
faddp
inc
int3
rcll
mov
cmp
jns
movsb
fs
in
mov
ljmp
ret
in
mov
enter
jo
cmp
idivb
pop
push
jle
rcll
loope
scas
mov
popa
gs
adc
or
loopne
push
add
xor
jmp
sub
test
out
xlat
or
mov
sbb
jae
daa
xchg
mov
dec
mov
fadds
mov
lods
push
in
divb
das
in
stos
xchg
push
jmp
popa
jne
fwait
and
das
mov
cli
mov
mov
lea
xchg
or
mov
push
push
xchg
mov
addb
mov
stos
mov
adcl
pop
cmp
jb
sub
mov
sub
fisubrs
adc
addr16
std
mov
xchg
pop
pop
test
movsl
repnz
xor
lret
xor
jge
mov
std
in
and
mov
mov
jmp
fidivrl
mov
add
out
int
jmp
fdivp
add
imul
add
cmp
xchg
outsb
lods
push
jmp
in
testl
mov
push
fadd
adc
xlat
ss
clc
push
jge
cmp
icebp
adc
or
cmp
jnp
outsl
or
jmp
xor
mov
insb
or
mov
dec
les
out
push
dec
in
sbb
dec
out
rorb
inc
movsb
xchg
repnz
ja
mov
push
in
lret
sbb
mov
test
add
bound
jbe
push
scas
mov
adc
cwtl
es
stos
sub
jl
scas
es
fwait
inc
das
rorl
jb
lock
dec
sub
mov
sub
lock
fnsave
adc
iret
inc
inc
cmp
mov
inc
das
in
fildl
loope
ja
or
ret
or
add
mov
movsb
xchg
fisttps
iret
sub
das
cli
or
mov
lea
jmp
adc
push
dec
out
ss
add
andl
mov
fimuls
repz
imul
inc
orl
aam
cmpsl
int3
out
or
aam
or
mov
sub
sti
fidivrs
lahf
stos
jnp
dec
pushf
popf
jbe
scas
int
enter
cmpl
cltd
insb
cmpsl
hlt
mov
loopne
xchg
loope
jae
loope
jns
mov
rclb
es
and
clc
or
scas
push
cmp
inc
movsl
arpl
mov
and
cmp
sub
pop
fildl
push
add
les
and
mov
repz
cmove
loope
psubq
or
sarl
push
push
sbb
scas
pop
scas
dec
adc
insb
gs
dec
sar
xchg
movsb
jae
jmp
cli
data16
push
xor
fwait
lock
fs
bound
mov
lcall
mov
inc
xchg
and
cwtl
imulb
inc
int3
in
dec
jp
lock
cmp
imul
insb
out
jp
outsl
pop
aas
sbb
sub
push
or
pop
push
jne
fs
dec
xchg
mov
sarb
inc
mov
mov
sbb
jl
je
push
rcrl
mov
ss
addr16
bound
pop
push
pushf
add
popf
mov
mov
xchg
pop
cmpsb
fdivr
pop
mov
ss
mov
push
xor
mov
leave
jbe
sub
jle
jge
incb
es
scas
in
rolb
sbb
movsb
jl
ljmp
mov
in
and
pop
sbb
pushf
scas
fldl
clc
adc
mov
mov
mov
ss
adc
fdivrl
push
repnz
into
push
inc
into
add
cmp
adc
adc
add
sbb
push
push
pop
lret
inc
xor
outsb
ja
add
add
out
addr16
mov
fidivs
jmp
xor
jb
jmp
cltd
or
xor
cmp
gs
xlat
xor
xor
jp
xlat
adc
xchg
sbb
jg
icebp
movaps
adc
xchg
jns
shll
cwtl
lea
insb
clc
arpl
or
dec
cmp
mov
jae
inc
outsl
sbb
into
js
jl
in
pop
pop
push
add
rclb
scas
fmuls
addr16
in
inc
push
daa
ss
ficoms
add
and
repz
adc
sub
loope
pop
outsb
ljmp
call
dec
stos
jge
cld
lret
pop
jp
sbb
scas
sub
sub
addr16
cmpsl
xchg
and
vpunpckhqdq
jo
int
jp
cmp
pop
xor
mov
test
jmp
and
jae
mov
jp
cmp
mov
adc
pop
stos
jbe
bswap
cmp
mov
in
daa
xorb
popw
add
fwait
jle
shlb
daa
rorb
decl
iret
xchg
xchg
mov
or
sub
mov
mov
les
leave
test
xchg
es
mov
lea
sub
adc
mov
pop
cltd
push
and
mov
testl
adc
mov
inc
nop
aaa
and
fdivrs
rolb
pusha
xchg
scas
mov
xchg
cmp
cmp
int
rol
and
subb
movsl
movsl
es
and
and
test
dec
sub
ljmp
inc
andl
pop
rcrb
in
loope
daa
pop
push
or
out
sub
mov
cwtl
inc
in
adc
sub
sub
mov
jecxz
push
addl
and
aaa
daa
add
or
and
and
es
cld
ja
repz
xchg
push
mov
inc
call
xchg
add
or
and
add
pop
lret
push
xor
hlt
sbb
outsb
mov
mov
movsb
movaps
cmp
insl
loopne
inc
mov
ret
pusha
xor
or
push
dec
sub
sti
mov
cltd
andb
or
ljmp
rcr
push
xchg
sub
push
icebp
mov
sub
and
jge
xor
dec
push
shlb
stos
pop
pop
int3
add
push
inc
inc
mov
adc
test
nop
mov
out
cmpl
in
in
xor
aad
jmp
mov
lock
lcall
sub
push
jo
push
xchg
negb
pop
dec
dec
lock
cmpl
sub
loope
cmpsl
cmp
push
mov
jp
xor
push
jo
mov
insl
mov
push
push
push
sub
in
scas
jae
shrb
or
mov
dec
lahf
and
fwait
iret
mov
push
insl
nop
fisubs
add
lods
andl
lods
pop
lds
dec
les
cmp
dec
pop
inc
and
repnz
xlat
xor
sbb
cmp
xchg
push
imul
add
dec
and
fnstcw
fs
enter
movsb
mov
in
push
xchg
push
mov
push
sub
outsb
push
xchg
sub
nop
xor
adc
scas
cmp
xchg
push
ret
push
repz
cltd
cmpsl
jmp
sbb
adc
push
inc
nop
mov
adc
push
cld
cmp
mov
pop
pop
call
int
stc
pushf
xor
push
stos
adc
push
movsb
fcompl
push
jle
push
leave
aam
scas
leave
aas
jp
ret
or
fistps
sahf
jmp
dec
mov
mov
or
push
hlt
rol
std
and
xlat
push
sub
lds
call
inc
daa
xor
xchg
inc
push
xchg
loopne
clc
mov
xchg
aam
sub
pop
jg,pn
dec
adc
push
es
or
sub
fbstp
mov
dec
xor
xor
xchg
fcmove
sbb
mov
xor
inc
mov
sbb
pop
mov
lds
mov
and
pop
jecxz
pop
dec
jnp
and
icebp
imul
lcall
dec
push
cmp
cli
inc
xor
repnz
mov
jp
mov
push
xchg
xlat
popa
bound
pop
pop
movsl
xchg
clc
insb
mov
lds
pop
xchg
es
roll
cli
js
cwtl
aam
push
outsl
bound
mov
jmp
inc
cmpsl
in
test
jmp
js
je
or
in
mov
call
in
pop
pop
push
pop
outsl
movsb
inc
mov
jmp
iret
xchg
jp
fildl
xchg
pop
and
add
cmp
jg
add
pop
mov
lret
dec
pop
fdivp
xor
repnz
lea
mov
jbe
and
mov
stos
mov
jbe
insl
pop
and
out
inc
fcomps
stos
icebp
mov
insl
pop
pop
dec
xchg
pushf
lahf
xchg
test
mov
push
stos
sbb
mov
je
mov
inc
insb
daa
mov
sbb
insb
pop
scas
movsb
outsb
push
out
and
sub
and
loope
in
js
sbb
cld
dec
xchg
sub
xor
adcb
mov
or
lods
repz
xor
stos
lods
cmpsb
cltd
lds
pop
inc
xchg
clc
push
adc
or
ljmp
mov
inc
adc
mov
and
xor
sub
mov
in
insb
pop
or
icebp
and
repz
movsl
add
dec
test
push
sti
mov
aad
mov
lret
jmp
pop
adcl
or
pop
cwtl
sub
sub
inc
xchg
jo
add
push
add
insl
stos
das
xchg
xor
lret
xor
or
mov
imul
xchg
leave
and
push
pop
xchg
mov
subl
mov
adc
xorb
call
mov
test
outsb
jb
dec
ljmp
jecxz
ja
js
hlt
loop
pushf
adc
xor
xor
sub
jo
mov
dec
mov
fsubrl
add
insl
xchg
pop
inc
lret
pushl
lock
dec
sub
sbb
stc
dec
scas
mov
test
push
jg
data16
lret
xchg
xchg
pop
cmp
adc
cwtl
in
ja
loop
andl
and
test
inc
xchg
xchg
cmp
lret
imul
push
enter
fistpl
adc
jne
xchg
sub
push
adc
jae
cmp
mov
jge
adc
push
test
xor
inc
dec
cs
rcrl
sub
or
mov
mov
jge
pusha
mov
mov
repz
cmpb
cmc
leave
std
repnz
inc
and
pop
inc
mov
pushf
sbb
mov
add
int3
xor
dec
mov
or
shll
scas
jp
adc
mov
pop
call
add
sbb
dec
xor
dec
out
mov
fsubp
push
outsb
fwait
jb
addl
jae
jmp
pop
push
shlb
in
sarl
ret
lods
push
lds
rol
scas
mov
add
dec
cmc
mov
jo
push
call
jl
add
inc
push
cld
jge
fimuls
shl
mov
push
xor
or
in
inc
jecxz
cmc
jg
cltd
lahf
dec
xor
je
adc
cli
aas
xchg
cs
jo
sbb
decb
test
xchg
cwtl
dec
addr16
fcomps
incl
mov
dec
cmp
mov
push
push
aad
and
notl
inc
int3
add
imul
xchg
mov
dec
fbstp
sti
adcl
xchg
cmp
jecxz
fnstsw
stos
sahf
fstl
adc
loopne
loopne
cli
in
cmpsl
adc
mov
inc
int3
scas
sbb
xchg
adc
push
shrl
sahf
sbb
push
in
mov
or
mov
andb
push
push
adc
out
leave
cwtl
shrl
pop
fdivl
icebp
xchg
mov
rolb
jb
mov
adc
fisttps
enter
movsl
pop
and
xchg
jno
or
adc
sbb
pop
in
in
dec
sti
mov
jnp
pop
and
lods
int3
and
xchg
mov
cmc
cmp
mov
mov
xlat
sarb
and
pop
mov
insb
sahf
imul
and
and
mov
dec
aad
xor
pop
in
sbb
jg
imul
or
mov
mov
or
mov
adc
dec
int
mov
jl
adc
rcrl
sbb
scas
jmp
adc
sbb
mov
cmp
shll
push
and
dec
cltd
xor
scas
adc
jne
movsb
sbb
movsl
and
pop
insl
aaa
pop
adc
cld
lds
adc
loope
mov
jns
add
cmp
and
push
jp
je
sub
mov
dec
fs
inc
add
in
scas
in
adc
fidivl
and
cli
and
push
decb
mov
sar
pushf
or
sub
adc
fprem1
rorl
jnp
jae
mov
and
push
add
int3
jns
loopne
mov
inc
xchg
dec
mov
adc
outsl
loope
les
out
fucomi
adc
dec
cwtl
cmp
push
arpl
adc
xchg
inc
xchg
sub
iret
and
adcb
xchg
shrb
push
xchg
jbe
data16
sub
fsubs
ja
je
pop
push
frstor
xchg
nop
push
cwtl
mov
shrb
lret
mov
cmp
test
insb
or
daa
out
jnp
mov
lret
or
mov
movsb
xchg
pop
cmp
or
add
test
inc
lds
lds
cmp
leave
cmc
xor
outsl
inc
mov
jo
mov
imul
xchg
sbb
adcl
outsb
test
pushf
or
rolb
ss
in
mov
int
inc
int
aad
mov
loope
in
mov
pop
iret
test
lock
mov
insl
cmc
and
lcall
dec
popa
xor
pop
push
lcall
cmp
xor
xlat
mov
add
adc
dec
fucom
mov
push
dec
sbb
adc
in
and
test
cmp
lods
xchg
leave
icebp
adc
xor
fwait
pushw
jbe
xor
push
fstl
mov
mov
sbb
loopne
jecxz
xchg
cwtl
call
ficoml
movsl
or
cmpsb
out
mov
mov
cmp
jmp
jns
in
das
out
call
ret
ret
adc
adc
jo
cld
mov
pop
arpl
ja
ror
outsl
vmovaps
sti
jg
out
lcall
xchg
test
cmp
sbb
inc
adc
fdivr
ret
and
mov
fwait
push
fwait
push
inc
das
cltd
xor
or
int
test
sti
xor
ljmp
jno,pt
jle
cmp
cmp
repz
out
arpl
xchg
jbe
pop
or
add
push
jae
adc
lret
leave
jp
mov
lcall
mov
and
jg
fs
mov
lods
pop
stos
sub
and
push
pushf
loopne
add
outsl
pushf
mov
or
push
pop
ja
aaa
xchg
xchg
mov
loop
and
cmp
les
or
in
cltd
and
addl
ds
adc
mov
int
in
aam
sahf
movl
sub
and
stc
mov
jne
mov
jecxz
lds
addr16
out
dec
pop
mov
xchg
lods
mov
sti
cmp
rclb
ljmp
cmp
jnp
add
adc
sbb
aam
push
inc
leave
test
or
sub
sub
adc
leave
add
cmpsb
mov
pop
adcl
mov
add
inc
ljmp
jnp
mov
sbb
pushf
cmp
out
sbb
add
sbbl
ss
jns
jge
add
orb
jns
xchg
js
test
das
fisubrs
insb
movsb
in
xchg
subb
fxch
adc
push
mov
leave
push
sub
xor
rcll
imul
aad
inc
rolb
ds
loop
sbb
fdivrl
insl
dec
mov
sub
inc
inc
ss
shlb
and
iret
cmp
adc
loope
test
out
mov
sti
lret
test
and
or
testb
dec
leave
or
into
cmpsb
mov
arpl
pop
iret
add
inc
in
cmp
jge
xchg
mov
out
xor
sbb
mov
icebp
ljmp
loope
sbb
aam
scas
pop
in
and
add
and
cmpsl
or
jbe
out
xchg
mov
push
fcomp
test
jb
fimull
addr16
pusha
dec
nop
xchg
push
movsl
mov
test
sub
mov
hlt
dec
fisubrs
lock
lea
out
es
ljmp
xor
js
mov
fdivrs
jnp
dec
push
pop
xor
push
lods
lea
xchg
shl
jl
jo
ja
xchg
add
sbb
test
jne
mov
jmp
xchg
push
jmp
mov
mov
jno
and
repnz
loope
mov
adc
add
xchg
les
sarb
cmc
nop
out
or
xlat
sbb
xor
inc
add
into
mov
jmp
pop
xor
aas
push
pop
and
sub
les
insb
lods
or
loope
enter
imul
mov
dec
into
inc
lahf
outsl
dec
push
push
jle
mov
xor
popf
xchg
sbb
mov
lock
mov
xor
cli
inc
pop
clc
dec
out
in
push
cs
inc
fucom
push
in
repnz
gs
aas
inc
movsl
jp
push
out
movsb
mov
ja
pushf
cmpb
cltd
and
inc
or
push
inc
push
mov
es
pop
scas
inc
incb
test
rolb
sub
push
sub
dec
xchg
xor
mov
fsubrs
int3
outsb
lret
sbb
mov
sbb
mov
scas
jne
fidivs
jne
and
imull
mov
popf
jns
inc
inc
adc
pop
sub
ret
inc
lds
cmc
mov
pop
push
mov
daa
jno
sti
sbb
rcrl
jge
arpl
pop
pop
and
ljmp
mov
push
mov
scas
pop
cmp
xorb
mov
rclb
arpl
imul
dec
pop
adc
sbb
stos
ljmp
aas
sub
adc
adc
dec
jecxz
inc
lret
loope
add
xor
int
enter
mov
add
scas
cmp
mov
cmpsb
sub
les
cmp
mov
repnz
leave
and
xor
cmp
adc
test
inc
and
mov
lods
or
jg
cmp
scas
sub
test
pop
shll
xor
loop
add
inc
jp
sbb
lds
sti
xor
cmp
xchg
or
sar
ds
sti
fdiv
inc
insb
dec
cmpsb
mov
sbb
sub
scas
jmp
repnz
mulb
mov
push
dec
inc
stc
stos
ss
jae
cmp
xor
xchg
rorl
mov
shl
pop
push
fldl
inc
xor
mov
sub
mov
lds
jge
sbb
cmp
negb
and
fisttpl
rcl
imul
and
cmp
les
inc
in
sbb
sub
movsl
mov
and
arpl
outsl
xchg
xchg
cld
mov
add
mov
cmpsb
and
jecxz
pop
enter
add
repz
add
mov
mov
shll
and
push
ja
cs
sub
push
inc
aam
sub
or
jp
push
cmpb
mov
and
mov
jo
ss
ja
jp
cmpsl
lahf
and
mov
cmpl
or
sbb
and
sub
iret
insb
leave
mov
scas
fnsave
pop
icebp
pop
push
outsl
stc
push
jge
xor
ret
push
xor
dec
pusha
mov
mov
pop
sbb
int3
adc
inc
into
fidivrl
dec
inc
loop
movsl
je
adc
mov
xchg
fisubrs
add
xor
add
pop
add
lcall
xor
out
lods
lcall
lcall
imul
xchg
adc
jo
lods
repnz
les
and
dec
and
pop
sub
pop
or
repz
loop,pt
jno
mov
imul
lea
scas
jl
scas
xchg
mov
jb
es
movl
or
mov
std
test
mov
scas
jg
mov
xor
adc
mov
insl
xchg
mov
out
enter
out
push
aam
stc
and
pop
xor
popf
loopne
xchg
mov
sahf
out
xchg
aad
mov
mov
xchg
sub
fidivl
pushf
dec
insl
push
and
mov
roll
ret
repnz
insb
lods
ja
push
es
cltd
push
ret
jp
pop
push
addl
js
insl
clc
dec
hlt
sbb
mov
pop
sahf
sarb
fbld
add
shlb
mov
or
jge
inc
sub
fs
and
mov
hlt
push
jno
dec
pushf
dec
push
repnz
pushf
nop
dec
shrl
mov
inc
xor
pop
test
lahf
fcompl
push
add
or
aaa
dec
lahf
adc
scas
shufps
out
xor
mov
enter
pop
lahf
cwtl
imul
ret
imul
mov
fs
loopne
repnz
sbb
insb
les
mov
out
push
pop
sub
in
dec
dec
leave
out
and
cmp
jmp
or
lcall
xchg
paddd
out
or
sbb
lea
scas
inc
adc
std
sbb
cmpsl
or
mov
mul
or
dec
push
dec
xor
or
push
ljmp
dec
scas
push
aad
imul
pop
pop
stos
in
leave
push
jb
mov
ss
test
fisubrl
jl
dec
sub
cli
or
add
hlt
les
adc
fcmovnbe
dec
rol
scas
sti
jecxz
pop
mov
shr
sbb
movsl
lods
adc
or
inc
out
and
call
test
add
int
xlat
out
mov
adc
scas
cmpsl
mov
arpl
or
xchg
add
pop
in
sbb
pop
pop
mov
adc
pop
inc
sahf
mov
in
add
dec
mov
sbb
add
push
adc
dec
xchg
and
or
mov
dec
lahf
pop
jge
pusha
and
jmp
shl
lahf
repz
and
dec
daa
inc
sub
mov
fs
leave
inc
push
sub
mov
popf
inc
sbbl
pop
sbb
loop
fs
subl
jecxz
xor
push
push
mov
into
xor
aaa
pop
or
and
inc
adc
xchg
pop
outsb
jae
jecxz
in
push
push
ljmp
adc
sbb
push
arpl
xchg
and
insl
jmp
or
int
fwait
push
outsl
jmp
icebp
or
lret
add
or
xchg
test
pop
cmc
jmp
push
mov
jecxz
loop
ja
inc
mov
fwait
je
fsubr
or
sbb
aas
repnz
or
adc
test
jecxz
cmc
dec
jge
test
cmp
jne
iret
jg
jns
inc
cmp
mov
rorb
outsb
pop
and
sub
pop
xchg
xchg
ljmp
pop
out
pop
push
mov
mov
mov
mov
and
test
sahf
push
jo
adc
lret
mov
dec
andb
call
rclb
imulb
je
xor
add
jb
stos
cmp
leave
and
movb
clc
ja
stos
or
out
or
adc
dec
cmp
add
cltd
push
test
xor
inc
loope
inc
dec
testb
into
aam
int3
xor
and
sbb
inc
lock
inc
orb
addr16
xor
jp
push
pop
mulb
sub
adc
xorb
cmpsb
enter
cmp
fcomip
movsb
cmp
stos
stos
adc
inc
mov
aaa
xchg
lret
cld
push
movsb
imul
add
mov
out
xchg
je
stos
test
push
or
loop
jb
pxor
imul
int
lods
push
dec
ficoms
or
adc
pop
jae
call
mov
nop
sub
pop
dec
dec
out
jo
clc
rorb
xchg
xchg
out
es
jnp
fidivrs
xchg
and
loop
repz
ja
xor
sbb
int
cmp
inc
popa
sbb
lcall
cmp
push
lret
mov
fsubrl
ljmp
mov
or
icebp
js
mov
sub
scas
addl
xlat
sarl
sub
adc
test
cmpsl
xchg
nop
bound
and
dec
mov
imul
lock
sub
loope
pop
mull
pop
out
daa
out
lock
cmp
fists
sarl
sub
inc
inc
xchg
xchg
push
push
rcrb
xor
push
pop
jle
adc
inc
adc
ret
or
mov
cmp
lahf
push
cld
outsl
movsb
inc
mov
dec
cmp
or
mov
sub
loope
nop
sub
lea
fisttpl
and
gs
and
cmp
int3
mov
test
or
loop
pop
lahf
shll
xor
fbld
enter
xchg
mov
out
xchg
js
fmuls
add
mov
pop
repnz
mov
into
mov
xor
inc
lds
insb
mov
in
inc
imul
sbb
dec
cs
stos
pop
pop
sar
and
adc
xchg
sbb
mov
inc
addb
xchg
pop
js
lret
sub
or
js
lods
pop
mov
ror
cmp
mov
add
data16
mov
dec
mov
add
mov
rcl
pop
inc
outsl
pop
xor
cmpsb
enter
lods
mov
mov
loope
cli
add
jo
pop
xlat
fcmovu
icebp
das
jecxz
jmp
dec
std
inc
jmp
push
sbb
mov
sub
rorb
rcr
outsl
cmp
dec
ds
rclb
stos
or
push
in
lret
lahf
arpl
in
mov
mov
jmp
call
pop
dec
pop
push
cmp
jnp
jge
fnstcw
inc
sbb
dec
dec
test
add
lret
fistpll
imul
inc
fs
test
jne
or
adc
test
mov
or
pop
leave
ficoms
xchg
pop
fwait
dec
pop
mov
int3
xchg
lds
jg
mov
or
jae
das
xchg
sub
xchg
mov
mov
movsl
mov
pusha
pop
movsl
into
inc
lods
ficomps
and
xchg
mov
pop
insl
push
cmp
and
push
ret
xchg
scas
jl
outsb
xor
int3
sub
fsub
rcll
xor
clc
mov
dec
push
xlat
test
fdivl
ficompl
jmp
mov
into
push
sub
cld
fimull
inc
lods
in
xchg
mov
xchg
and
and
cmp
cmp
sbb
xlat
aad
std
pop
sub
mov
shlb
lods
jp
js
add
jo,pn
hlt
push
push
les
dec
ds
mov
arpl
adc
test
xchg
push
cmp
outsb
movsl
dec
mov
fucomi
mov
sbb
sbb
cmp
iret
adc
mov
or
mov
and
fldt
out
loopne
test
mov
cmpsl
movsb
push
cltd
sti
pop
pop
call
mov
nop
adc
or
push
pop
pop
xor
daa
dec
sbb
imul
stos
imul
and
pop
xchg
mov
adc
jmp
fucomp
icebp
int3
add
xor
pushw
pushf
out
or
aad
fdivl
push
jo
sahf
and
in
int3
mov
adc
xchg
shrl
pop
adc
cmc
adc
xor
insl
dec
call
xorb
mov
add
test
and
lds
in
xchg
jnp
popa
or
xchg
out
push
dec
out
and
or
jg
xor
orl
jmp
ret
rcrl
outsb
mov
aad
scas
and
pop
push
scas
xor
add
jnp
add
hlt
lcall
push
sub
in
das
dec
cmp
push
or
stos
lret
lcall
ljmp
aam
enter
das
mov
inc
xchg
sub
jp
lods
fadd
inc
notb
cmp
mov
pop
sbb
jbe
jae
aam
jne
loopne
enter
jno
lock
out
xchg
lods
nop
mov
pushf
movsb
dec
clc
sub
int3
add
fs
and
dec
call
jno
sub
ror
jnp
clc
lods
mov
ret
sub
fcompl
cmp
push
hlt
shl
jbe
sub
pop
pop
mov
adc
cmp
inc
lock
adc
adc
jg
dec
es
pop
xchg
xor
add
loope
or
pop
cmc
sahf
stos
mov
and
sbb
movsb
in
xor
sub
or
mov
gs
sbbl
into
jo
and
push
sub
xor
leave
shrl
rcll
popa
push
mov
sub
pop
push
stc
dec
mov
pop
repz
lds
int
push
test
pop
xlat
inc
sub
out
push
xor
and
in
mov
mov
iret
pusha
int3
add
enter
pop
xchg
sub
mov
adc
inc
mov
cmp
xor
mov
xchg
mov
loope
dec
pop
mov
in
outsb
lods
or
xchg
push
popf
aaa
inc
test
sbb
fmull
ja
mov
jns
xor
cmpsl
jecxz
in
and
arpl
fcmove
ss
sub
fst
scas
repnz
ljmp
mov
movsl
mov
adc
lea
inc
push
test
lret
or
pop
imul
fisttpl
xchg
stc
adcb
out
mov
dec
cwtl
jno
sub
scas
mov
xlat
mov
push
decb
adc
jae
sbb
lret
dec
test
pop
pop
dec
ret
cld
out
arpl
imul
test
mov
jl
ficoms
stos
leave
out
fnsave
inc
movsb
lahf
mov
mov
leave
aaa
or
push
xor
test
jp
js
out
repz
and
out
popa
add
popf
add
mov
mov
das
pop
or
iret
lahf
rclb
test
cmp
in
or
es
nop
mov
cmc
fiadds
mul
ljmp
xor
sub
jb
push
lods
push
push
xchg
jg
ret
stc
mov
mov
or
and
or
imul
int
jecxz
arpl
shr
int3
icebp
ja
cmp
pmulhw
enter
jecxz
cmp
pop
sbb
ret
pop
mov
xor
cmp
call
pop
add
pushf
lret
xchg
sbb
cmpsb
pop
sub
dec
rcr
cltd
adc
roll
pop
aas
adc
mov
pop
or
jmp
shl
icebp
sbb
xor
jmp
lods
and
scas
outsl
aas
push
push
pop
cwtl
mov
sbb
inc
ds
or
mov
jmp
mov
cld
rcr
push
mov
sub
cmp
xor
call
insb
outsb
sbb
test
mov
push
mov
push
aaa
mov
push
in
les
fsub
mov
jge
out
add
inc
scas
fisubrl
inc
and
ljmp
mov
rolb
mov
hlt
adc
jp
js
mov
sub
sub
cmpsb
movsbl
and
and
in
cmp
testl
adc
sub
push
cmc
nop
ss
jbe
cld
test
add
imul
add
add
arpl
call
gs
test
jns
push
mov
test
mov
mov
popa
adc
or
cwtl
popa
push
or
andb
mov
lahf
add
pop
adc
pop
mov
int
call
sub
dec
inc
sub
mov
and
pop
mov
test
push
fs
push
mov
popf
xchg
xor
insl
add
mov
sbb
fwait
lea
xchg
js
in
or
push
ja
mov
mov
icebp
push
movsb
push
hlt
rclb
lret
faddl
mov
jo
mov
ss
add
ds
pop
xchg
pop
fstpt
xchg
pop
subl
cld
dec
into
lods
in
inc
gs
jbe
xchg
xorb
pushf
push
mov
in
les
sbb
xchg
jle
dec
lds
adc
sub
adc
fs
dec
test
cmc
cmp
aad
fildll
pop
icebp
inc
inc
mov
push
in
out
shlb
je
inc
xor
adc
xlat
sub
add
into
nop
les
pop
repnz
mov
int3
lcall
jb
outsb
out
insl
stos
sub
test
fimull
mov
popa
pop
insb
pop
xor
dec
fs
fs
stos
lahf
add
out
xchg
push
imul
scas
cmp
lcall
scas
mov
aam
clc
jmp
js
adc
dec
push
fsubr
mov
push
pusha
addr16
fldl
adc
stos
popa
dec
mov
jg
cmp
and
data16
add
jo
and
ljmp
sbb
and
xchg
or
andl
dec
int3
mov
add
sti
add
push
or
xor
xor
dec
out
mov
xor
addps
out
add
lods
popa
popf
cmp
sbb
test
xor
in
xor
movsb
dec
pop
sahf
mul
movsb
test
popa
mov
push
lar
jo
pop
rclb
jbe
xchg
xor
mov
pusha
ds
dec
or
mov
add
inc
ss
dec
lret
adc
sbb
pop
cltd
sub
jg
pop
test
ret
pop
shrl
clc
sar
inc
dec
jne
int3
xor
mov
loopne
ss
add
rol
lret
popf
insl
mov
xorl
leave
add
or
cltd
loopne
ret
pop
xchg
shrl
sbb
into
lds
filds
xor
into
xor
push
inc
cmp
leave
cmp
cmp
xor
insl
test
scas
fisubs
leave
out
xchg
gs
mov
jno
ret
ret
iret
fsubrl
mov
jnp
or
ret
cld
fisubrl
push
imul
out
out
filds
pop
mov
xchg
outsb
insl
xor
dec
aas
shlb
pop
je
hlt
cs
and
xlat
fdivl
mov
and
aad
daa
and
imul
sahf
stos
rclb
iret
xlat
lods
xchg
add
xchg
inc
nop
daa
pop
sub
mov
xlat
fs
xchg
ljmp
jp
or
push
scas
loope
sbb
fildll
ds
or
push
or
or
inc
sbb
pop
lcall
aaa
pop
inc
scas
mov
cwtl
pop
lcall
stos
out
push
push
insl
int3
lods
jo
add
mov
bswap
adc
roll
les
and
shrb
insb
adc
inc
lods
mov
hlt
leave
fists
xchg
xlat
sbb
jb
icebp
dec
int
and
test
fdivrs
sub
mov
pop
push
xchg
jae
sbb
cmp
leave
loope
dec
mov
aam
adc
mov
retw
sub
adc
and
mov
or
push
lods
je
jbe
loope
mov
mov
jmp
or
xlat
test
xchg
out
xchg
fsts
mov
jge
xchg
mov
pop
mov
sbb
in
lds
and
bound
push
pop
aam
pushf
ljmp
sub
inc
sub
psrlq
outsb
pop
jnp
cmp
pop
lahf
out
cli
sbb
jnp
addl
aas
adc
gs
loopne
rolb
push
sbb
cmc
jge
pop
xor
das
or
mov
nop
or
lcall
out
ret
pop
push
jl
outsl
out
or
negl
dec
subl
decb
jmp
out
mov
inc
cltd
call
cld
shrl
sbb
sub
ljmp
rcrb
shrl
jnp
cmp
ss
repz
adc
popf
xchg
mov
dec
pushf
lcall
jo
pop
adc
fxam
xchg
adc
aas
sar
mov
push
fsts
test
mov
or
loopne
and
mov
mov
dec
pop
js
pop
jmp
popl
sbb
enter
ljmp
cld
jnp
or
fsubrp
or
into
in
stc
push
sbb
sbb
add
mov
pop
std
addr16
push
les
lret
sub
mov
lahf
xor
popa
jne
jno
cmp
mov
and
out
cmp
adc
in
pusha
lcall
out
pop
sahf
cmpsl
xor
sbb
lcall
mov
js
push
ss
loop
adc
xor
push
mov
cld
fiadds
insl
push
std
adc
ficoml
cmp
xlat
movsl
cmp
inc
xor
lods
mov
mov
lcall
das
mov
test
mov
roll
pop
push
fistpl
bnd
sbb
aam
loope
shll
out
addl
cmp
int3
inc
test
mov
xchg
pop
test
push
pop
xor
loopne
dec
dec
int
stc
cmp
iret
dec
test
xlat
dec
repz
push
rcrl
push
outsl
les
push
xchg
inc
ja
pop
cmp
dec
pop
xor
shl
sub
sqrtps
push
fwait
jno
or
out
sbb
mov
stc
xchg
das
pop
in
int
inc
aaa
addl
cmp
sub
repnz
sbb
adcb
adc
dec
in
int
sub
lock
std
stc
loopne
mov
cli
push
adcb
dec
cmc
jb
mov
adc
sub
xchg
cmp
je
mulb
xor
imul
ret
cli
adc
add
jno
add
xor
mov
out
repnz
mov
into
mov
dec
sbb
mov
xchg
or
xlat
mov
cs
loop
add
les
bnd
jmp
sti
cmp
xchg
pop
mov
sbbl
jnp
je
int3
push
mov
test
jno
jle
pop
pop
daa
lods
sbb
into
dec
push
push
int
jae
stc
fsubs
jmp
jno
mov
popa
bound
aad
add
push
repnz
add
adc
mov
push
mov
js
and
mov
fwait
sub
mov
fsubrs
sbb
push
insb
push
rcl
jl
popa
loope
test
mov
les
ja
dec
bound
jnp
mov
sub
mov
iret
or
rcr
into
cmp
aas
xlat
xor
dec
scas
leave
lret
add
fistpl
cmpsb
int
mov
cmc
dec
aam
cli
aad
jae
and
sbb
cs
xchg
jg
pusha
adc
pop
popa
fs
push
pushf
mov
dec
push
ficompl
lock
filds
les
fbstp
std
movswl
cmp
xor
adc
pop
loopne
mov
add
ds
imul
jb
addr16
rclb
add
pop
es
dec
outsl
scas
mov
adc
arpl
nop
shrl
mov
sbb
push
ljmp
out
imul
aam
pop
lods
pushf
jecxz
mov
testb
or
mov
pop
into
fdivrl
xor
mov
lahf
jne
stos
sub
inc
insl
shll
cmp
pushf
jge
push
push
mov
imul
jne
adc
shlb
sbbl
pop
fcomi
or
popf
lds
mov
inc
std
pusha
xlat
dec
rcr
jnp
pop
mov
inc
push
and
sbb
adc
sti
push
mov
push
dec
ret
mov
subb
rorb
fsubr
fisttpll
test
rclb
mov
leave
sub
dec
pop
sub
push
lods
pop
movb
inc
push
and
repnz
ret
lcall
test
dec
mov
cwtl
bound
mov
sbb
arpl
scas
fidivrs
sub
mov
add
in
dec
jl
mov
add
pop
test
and
test
xor
mov
bound
popw
imul
aaa
outsb
cmc
in
mov
and
cld
ret
push
rcl
push
ror
loop
mov
mov
xchg
popa
jno
out
pop
mov
or
adc
fldl
jne
loopne
jae
sbb
lods
jne
pop
popa
mov
and
mov
adc
jae
rcrl
pop
pop
cs
fstl
xor
iret
fnstcw
scas
and
aaa
sub
jmp
in
sub
mov
fisttpll
std
pusha
iret
jnp
mov
ja
xor
dec
nop
bswap
mov
cmpsl
movb
test
xchg
loopne
fcoms
xchg
or
daa
and
out
inc
hlt
psubusb
xor
imul
and
mov
inc
inc
sbb
jae
xchg
inc
shll
fcomps
repnz
pop
enter
test
out
inc
in
cltd
pop
ja
hlt
test
out
inc
and
xchg
insl
add
or
dec
pop
cmpsl
jne
mov
imul
push
sub
loop
mov
popf
pop
xor
add
push
flds
dec
bound
xor
jl
mov
std
andl
movsb
dec
add
cld
hlt
fsub
leave
das
inc
movsl
movsb
cwtl
push
loope
inc
inc
or
fisttps
mov
sub
mov
sbb
inc
jne
imul
inc
add
sub
sbb
or
xchg
sbb
sub
iret
mov
aad
ss
in
movsb
mov
cmp
adc
stc
dec
jmp
mov
gs
mov
jo
sub
outsb
lods
lods
jmp
sub
cwtl
xor
cltd
mov
inc
mov
add
dec
add
lds
sub
fnsave
sub
mov
jecxz
mov
test
out
repnz
push
push
movl
cmp
inc
xchg
pushl
dec
cmp
mov
pop
inc
inc
push
movsl
popa
rclb
imul
xor
pop
lcall
test
jmp
push
dec
repnz
adc
in
mov
aas
data16
insl
mov
movb
stos
cmp
addr16
or
daa
pop
jo
repnz
push
mov
test
mov
std
xchg
jle
daa
dec
fiadds
jb
pop
ja
cmp
js
and
jge
lods
sbb
adc
pop
or
arpl
data16
cs
mov
in
lret
jns
push
les
ja
cltd
shlb
inc
fcoml
movsb
xor
mov
ficoml
dec
dec
fcompl
daa
lods
bound
inc
cmp
jne
dec
nop
mov
lea
sbb
adc
inc
lcall
enter
pop
in
lock
mov
cmp
or
cltd
pop
xchg
xchg
sbb
jge
pushf
repz
xor
adc
aaa
mov
repnz
arpl
clc
mov
cmc
mov
rorb
mov
call
mov
repz
mov
pop
rcl
jae
arpl
pop
jle
mov
lahf
xor
lahf
jae
fists
ds
mov
xor
xchg
subl
mov
jb
enter
loopne
pand
montmul
cmpsb
inc
inc
dec
dec
fisttpll
daa
pop
arpl
pop
lea
pop
lret
lods
loop
loopne
fisubl
notb
jns
arpl
jle
dec
mov
fnstenv
mov
mov
int
sub
push
xor
imul
insb
push
cmp
inc
mov
test
fcmovnu
test
push
aas
adc
adc
ficompl
mov
jno
shll
push
fstp
mov
loop
mov
cmp
std
jg
ss
arpl
sarb
mov
cwtl
xchg
loop
inc
ljmp
adc
stos
or
inc
rorb
jb
lahf
ffree
mov
lahf
movsl
std
lods
sahf
add
add
push
test
pop
or
pop
in
xchg
test
cmpsb
pop
jecxz
dec
mov
fs
dec
sbbb
xorb
cmp
subb
rorb
fstl
mov
fs
cmpsb
push
xor
dec
jl
test
pop
sub
ret
push
dec
dec
push
pop
adc
iret
adc
in
shll
sub
loopne
inc
push
jns
add
mov
test
fisubs
pop
repnz
or
inc
push
aaa
sbb
loop
cli
xor
repz
aaa
ds
cli
xlat
cmp
dec
sub
test
dec
push
xor
dec
sbb
adc
xchg
add
aas
xor
or
add
pop
add
or
out
pop
daa
ficoms
xchg
sbb
inc
addr16
push
sbb
inc
fidivrl
xchg
das
cmp
inc
adc
cmp
repz
sub
bound
push
repnz
fildl
das
sub
ds
or
mov
outsb
cmp
xchg
jge
mov
out
mov
mov
push
jle
lahf
fprem1
adc
lods
loopew
cld
jp
mov
test
mov
lahf
insb
mov
pop
adc
movsl
cwtl
pop
mov
pop
sub
mov
dec
in
loope
jnp
sub
enter
nop
data16
lahf
rcl
sub
sbb
mov
add
jns
xchg
mov
divb
leave
mov
iret
das
out
lea
lahf
out
mov
xchg
inc
push
rolb
sub
out
incl
mov
mov
push
or
mov
xchg
jae
je
pop
sbb
scas
bound
les
mov
and
jb
cmp
scas
push
pop
idivl
out
jl
cmpsl
inc
sub
xlat
dec
jne
sub
movsb
fsubrl
ret
daa
jmp
dec
push
cmp
into
ja
fistpl
jo
pop
call
xchg
bound
and
jecxz
sahf
mov
jmp
mov
pop
sub
fucomp
test
je
mov
inc
cmpsl
loope
push
out
sub
jo
std
aad
mov
ljmp
fs
pop
fmull
jl
mov
ret
rolb
mov
hlt
lds
jge
add
dec
ficoml
popa
pop
cmp
add
jmp
mov
insb
clc
dec
pop
shlb
mov
push
cmp
mov
movsl
sbb
cmp
testb
cmpsl
sahf
loope
push
dec
jge
mov
mov
clc
hlt
iret
mov
sarl
push
push
icebp
xchg
popa
sti
mov
sahf
loope
mov
cli
jbe
pop
dec
mov
inc
cmp
push
xor
ret
sbb
xor
cltd
cwtl
sub
nop
inc
mov
pop
dec
and
and
into
mov
pop
mov
hlt
test
xor
push
jl
sahf
jns
lcall
pop
stc
mov
add
fcoms
or
loope
test
push
jo
dec
add
loope
dec
lret
shr
xlat
or
lahf
vmwrite
pop
add
ret
loopne
scas
add
jne
repnz
repnz
sahf
inc
sub
std
shl
pop
pop
ret
aad
add
mov
mov
cwtl
xor
sub
cs
jge
lret
mov
jo
sti
dec
xor
rcr
cmc
xor
arpl
push
sar
scas
dec
mov
add
popa
stc
push
test
push
fistpll
pop
inc
xchg
daa
mov
xchg
sbb
jle
in
lods
insb
jb
and
fidivrs
jnp
fs
sarb
mov
xchg
mov
sub
std
into
gs
ja
and
xor
subb
daa
pop
add
mov
shll
repz
scas
pop
or
mov
sub
fcoms
mov
repnz
mov
jno
pusha
pop
add
mov
xchg
xor
add
inc
mov
imul
fcmovu
dec
or
pop
faddl
sbb
xchg
xor
mov
in
subl
mov
dec
shlb
sub
imul
mov
jge
incl
mov
jb
push
out
lods
mov
faddl
cmp
xchg
cltd
mov
adc
call
add
sbb
sub
mov
in
dec
testb
repz
jae
ficoml
mov
imul
jnp
mov
cmp
pop
push
daa
jmp
mov
sub
jne
jl
lock
xor
inc
mov
aad
cmp
dec
movsl
jl
sbb
movsl
jno
ss
mov
lretw
movsl
mov
in
push
jge
and
das
xor
loope
cmp
mov
cmp
stos
sti
xchg
lea
ja
out
sbb
leave
lcall
jmp
fisttps
adc
lahf
lods
lahf
adc
mov
repz
enter
push
pushf
add
cli
inc
mov
mov
xor
push
test
jb
dec
sbb
inc
xor
inc
or
into
outsl
negb
int
test
jge
push
and
iret
jmp
and
xlat
mov
push
xchg
in
dec
sub
adc
int3
mov
xchg
fldcw
mov
mov
cmpsb
mov
cmpsb
adc
pop
inc
addr16
shr
test
cmp
popf
mov
pop
sti
mov
lcall
xor
lahf
stos
xchg
rcrl
insb
ret
push
push
and
test
inc
std
lahf
and
in
aas
insl
cmp
js
dec
mov
mov
inc
or
xchg
mov
loope,pt
sub
popf
mov
sub
cmp
mov
jb
adc
aaa
add
std
xor
test
mov
out
sub
sti
rorb
mov
les
lret
sbb
inc
push
out
adc
push
cmc
xchg
imul
mov
testb
mov
push
cmp
xor
xchg
sub
cld
push
xor
js
sbb
add
and
mull
scas
sub
cltd
leave
je
add
test
repz
lret
xchg
dec
jo
push
scas
adc
cmpb
mov
push
scas
xchg
bound
iret
xor
shlb
or
cmp
push
es
or
scas
or
sbb
cld
xor
test
mov
popf
xor
adc
or
incb
lahf
fimull
mov
dec
mov
lea
push
mov
out
pop
mov
and
mov
and
das
or
imul
mov
xor
daa
mov
cwtl
mov
aam
sbb
test
xchg
push
jbe
xor
jecxz
push
ja
daa
lret
sbb
in
icebp
fdivs
fnstcw
and
cmp
jno
sbb
sbbb
pop
addr16
ljmp
jg
test
ret
push
dec
test
jp
repnz
fwait
int3
jo
sbb
jb
inc
pop
cli
movsl
cmp
push
adc
neg
dec
inc
int
shrb
ds
cmp
adc
mov
mov
xor
sub
stc
insl
adc
xor
stc
pop
push
add
xchg
push
rol
jmp
pusha
mov
mov
jl
mov
stos
xor
jg
sub
jo
add
ss
je
out
mov
mov
mov
int3
ss
mov
negl
sarb
out
in
and
mov
test
mov
mov
loope
dec
das
pop
in
in
test
shrl
rolb
call
pop
mov
lea
dec
jnp
push
nop
hlt
es
xchg
scas
fidivl
cwtl
adc
movsl
sbb
xchg
mov
out
outsl
inc
dec
pusha
popl
popa
bound
adc
arpl
dec
cmc
orb
notb
lret
dec
cmp
imul
fiadds
push
lahf
adc
inc
mov
mov
xchg
add
je
daa
dec
push
fbstp
aad
xor
stos
data16
out
daa
mov
out
mov
lock
push
xor
insl
in
dec
lds
jmp
or
adc
cmp
sahf
lcall
xchg
das
pop
aaa
mov
sti
add
das
fsts
sbb
hlt
inc
push
fisubs
loopne
add
repnz
inc
adcb
je
fs
jg
aaa
xor
add
ljmp
sub
mov
out
push
cmp
sbb
aad
inc
pop
bound
xor
mov
fistps
jnp
jle
lods
out
mov
cli
xor
add
cmp
pop
fwait
or
sub
adc
in
pushf
xchg
aaa
mov
inc
push
mov
xchg
notb
cmp
mov
and
jmp
pop
cmp
in
daa
stos
mov
in
cltd
add
scas
iret
or
icebp
sti
in
add
adc
scas
sub
push
jmp
shl
out
addb
dec
dec
fildl
ds
sbb
xor
aad
adc
cltd
xor
sub
xchg
popf
push
cmc
pop
testl
push
xchg
fisubl
mov
sbb
mov
mov
lds
scas
or
inc
xlat
push
mov
inc
mov
mov
shl
pop
aam
fistl
xchg
push
ss
scas
test
insl
cli
push
fwait
outsb
out
add
mov
xor
mov
insb
add
sub
pop
fsubrl
jl
mov
lea
xlat
sbb
shr
enter
or
dec
sub
jnp
jg
push
and
cmp
arpl
jno
adc
dec
xchg
xor
push
das
out
call
inc
inc
popa
ljmp
dec
jge
jecxz
fisubl
mov
add
mov
ret
call
xlat
pop
sbb
jae
mov
mov
cwtl
sub
enter
iret
arpl
lret
lods
push
sub
pop
into
and
andb
push
outsl
roll
adc
fwait
std
mov
lea
sti
in
mov
push
inc
sbb
xchg
fwait
mov
aaa
lock
popf
movzbl
cmpl
imul
sub
insb
in
and
call
ss
mov
adc
jmp
int
mov
or
adc
mov
jns
and
push
in
push
pop
xor
stos
jp
mov
les
jl
clc
jmp
push
fildl
dec
pop
out
jo
adc
jnp
push
shlb
xor
jecxz
lahf
push
mov
mov
sub
inc
push
xor
fdivr
jbe
loopne
sub
cmp
int
mov
lcall
lret
jecxz
mov
arpl
add
fists
pop
cmpb
pop
jnp
jle
rorb
scas
xchg
cmp
lods
and
lods
es
and
das
xchg
jecxz
jb
pop
xchg
ss
pop
test
push
adc
test
ja
insl
repnz
aad
call
cwtl
ss
ret
push
aaa
ret
hlt
dec
imul
scas
mov
repz
sbb
out
jo
mov
std
inc
mov
outsl
jnp
jae
sarl
jge
aam
gs
add
xor
arpl
jp
cmc
or
and
out
test
adc
aas
mov
mov
adc
ljmp
sub
push
cmp
fadds
push
push
out
mov
xchg
cmp
mov
add
pop
dec
nop
scas
pop
ja
ds
sbb
rorb
mov
push
cmp
inc
mov
mov
add
jecxz
sub
cld
jp
adc
shlb
es
inc
ret
jle
js
pop
pop
and
iret
sub
xor
test
nop
adcl
sti
push
jo
mov
sbb
filds
mov
xor
fcompl
in
ljmp
push
jge
jno
push
sbb
and
pop
jle
or
xchg
dec
sub
jo
pop
cmpsb
adc
jb
aad
push
test
arpl
aaa
mov
xor
sarl
sbb
out
arpl
sub
cli
gs
add
scas
pop
mov
fistpl
insb
and
add
push
fwait
ret
sti
mov
test
hlt
and
hlt
dec
push
cmp
push
dec
cmpl
mov
rcrb
mov
dec
test
stos
xor
lahf
das
cmp
jmp
sub
add
andb
fimuls
jle
or
push
outsb
ss
adc
inc
xchg
scas
ret
loop
stos
pop
divl
repz
cmp
js
mov
add
enter
shll
clc
clc
shlb
mov
sub
cmp
mov
adc
pop
add
dec
push
shll
aas
shl
inc
rclb
inc
icebp
leave
mov
imul
cmp
push
rcll
mov
lahf
dec
jne
jmp
inc
insl
and
psubsb
mov
outsl
mov
sub
int
inc
and
cwtl
cmp
inc
add
cmpsb
fs
jl
iret
sub
in
jmp
fs
out
push
js
push
data16
and
xor
dec
xchg
mov
mov
mov
fists
mov
mov
pushf
push
add
shr
or
ss
xchg
sub
adc
imul
pop
iret
mov
das
shlb
pushf
pop
fidivl
xchg
inc
pop
sub
xchg
xchg
sub
outsl
xchg
mov
iret
mov
mov
stos
pop
ljmp
lds
mov
mov
addr16
aam
sti
push
xchg
mov
mov
sahf
fildl
out
imul
inc
mov
rol
les
ljmp
fwait
rcrb
ljmp
xor
push
fdivl
or
aam
out
adc
shll
call
xchg
mov
inc
inc
aaa
outsl
cmp
std
loopne
ret
repz
data16
rol
lods
fs
aas
inc
and
push
dec
lods
clc
andl
outsl
cltd
ficoms
or
sti
jmp
in
icebp
and
dec
inc
inc
xor
xchg
xlat
lcall
inc
jnp
adc
mov
cwtl
lock
jmp
lods
bound
stos
inc
cmp
mov
mov
out
psllw
lcall
push
mov
pop
in
cmp
repz
loop
xchg
jnp
insl
cmp
daa
xchg
mov
sub
add
adc
dec
push
popf
or
or
mov
cs
fcomp
cmp
adc
xor
inc
cmp
cmp
mov
jae
push
jbe
adc
loopne
ss
jecxz
pushf
pusha
addr16
pop
out
nop
shrb
ljmp
jecxz
push
mov
fnstsw
lea
add
mov
in
cld
push
jmp
mov
inc
mov
adc
adc
inc
test
mov
sbb
add
pop
dec
inc
in
in
sbb
jl
xchg
cmpsb
fs
fisubl
cmp
lret
sbb
mov
adc
ss
adc
std
addl
aad
lcall
shrl
das
clc
pop
stc
cmpsb
in
xchg
ljmp
mov
push
mov
jmp
test
aaa
sub
add
dec
adc
ja
in
sub
sbb
lock
test
jmp
in
hlt
dec
into
lods
test
lods
mov
xor
xor
and
mov
test
lret
dec
mov
stos
sub
sbb
and
xlat
out
cld
outsb
aaa
add
pop
fs
xor
add
push
mov
xor
not
out
dec
xorl
jo
cmp
cmp
sub
xsha1
cmpsb
mov
push
mov
xor
idivb
ds
in
imul
dec
mov
ljmp
dec
mov
dec
jl
or
push
or
fisttpll
cli
cs
add
std
mov
push
stc
lret
out
adc
imul
pop
add
js
cmp
xchg
or
fisttpll
adc
cmp
testl
cmpsb
test
jo
ds
sub
out
and
ljmp
stos
scas
mov
je
push
ljmp
psubusw
imul
adc
mov
xchg
hlt
fistl
into
sub
sub
cmp
mov
nop
mov
std
push
fstpl
ficomps
mov
mov
and
inc
and
in
and
mov
jb
cmp
cmpsb
mov
xor
xchg
lods
adc
ljmp
or
mov
mov
add
fistpl
inc
iret
lret
loop
imull
xor
aam
insl
clc
pop
inc
rcrb
les
dec
data16
jbe
aad
loopne
fwait
mov
push
ret
inc
pop
rcll
cmp
push
and
push
loope
inc
out
xchg
sbb
add
cwtl
fs
inc
adc
das
sbb
or
push
in
or
mov
xchg
movsl
mov
rorl
jg
inc
xlat
sub
into
into
mov
cmc
push
fmull
jecxz
dec
mov
mov
cli
dec
pusha
push
or
out
adc
push
imulb
mov
es
ret
xchg
add
push
loopne
sbb
jno
test
push
xor
xlat
arpl
pop
inc
and
or
jae,pn
sahf
out
jp
xchg
xchg
pop
xor
cld
test
mov
fcoml
cmpb
add
xor
fistpll
int
mov
sub
rcll
ret
xchg
or
dec
jnp
rorb
fbstp
in
in
loop
negb
xchg
leave
pop
or
mov
shlb
cmc
jmp
inc
je
cld
mov
out
jmp
insl
in
je
cmp
test
gs
dec
mov
adc
ja
sti
lds
aas
ret
je
out
mov
mov
jge
push
dec
pop
push
mov
add
xor
outsb
in
pop
sbb
mov
sti
lods
ret
adc
xorl
adc
cmc
inc
jp
sarb
sub
out
and
clc
push
out
and
lea
ljmp
loop
incb
stos
or
hlt
push
or
sbb
outsb
pop
lds
add
daa
pop
sbb
jge
push
xor
inc
addl
loopne
push
push
adc
push
mov
xchg
mov
xchg
add
lret
xor
scas
stos
divl
lods
sahf
addb
test
mov
jae
dec
je
outsb
enter
jl
cmp
mov
mov
jmp
int3
cwtl
mov
sub
sbb
test
xchg
xlat
pop
sbb
xor
cmp
cmpsl
shlb
test
or
shl
in
add
mov
lret
jecxz
shr
dec
adc
jns
and
mov
leave
dec
pop
cmp
in
or
jecxz
mov
scas
les
leave
pop
dec
test
repnz
dec
imul
stos
xorb
outsb
aaa
jo
push
jae
mov
adc
inc
adc
mov
mov
cmpsl
or
in
push
mov
and
jbe
in
lcall
cmp
xchg
insb
sub
inc
js
popa
ljmp
movsb
push
push
mov
adc
mov
mov
sub
scas
test
dec
sbb
roll
test
das
notb
lret
ja
cmp
cmpsb
add
dec
ljmp
jmp
jg
push
adc
out
sub
aam
xlat
hlt
pop
and
subb
mov
out
lcall
pop
push
dec
ret
mov
insb
fidivs
mov
pop
mov
out
imul
add
sarb
xorb
vpavgw
leave
iret
xorb
cmpsl
adc
mov
leave
jo
loopne
push
dec
insl
adc
ffreep
pop
sbb
arpl
sbb
cmp
fcmovne
mov
into
lods
sub
mov
xchg
mov
rcll
push
loope
dec
push
inc
in
hlt
aas
and
push
cmp
es
adc
push
test
mov
mov
enter
or
js
je
or
jecxz
pop
push
inc
fistps
and
lods
mov
add
mov
xlat
fwait
leave
xchg
ds
xchg
shll
inc
xchg
cmpsl
nop
mov
dec
add
aam
insb
jnp
add
rcll
enter
sbb
sbb
cmp
pop
scas
sbb
jle
mov
aad
aad
mov
mov
sbb
mov
add
jmp
andl
out
out
and
ficompl
adc
adc
popa
daa
pop
push
loope
push
mov
or
cmc
pop
jp
loop
fcoms
mov
mov
aaa
jns
sti
dec
sub
jmp
push
push
push
sar
hlt
pop
pushf
or
lahf
cmpsl
and
fisubl
or
mov
ljmp
jmp
mov
dec
imul
sbb
in
cmc
mov
cmp
testb
lcall
push
out
adc
cwtl
jbe
sub
sbb
lret
xchg
inc
add
cld
loopne
jb
inc
cmp
cmc
lahf
and
lods
pusha
lock
jmp
mov
jecxz
in
aaa
and
push
xor
sub
sti
call
inc
inc
mov
ja
sbbl
add
mov
loop
in
fldt
out
outsl
mov
add
add
sub
jne
std
repnz
mov
fxam
rcll
ja
rol
xchg
outsl
jns
xchg
in
inc
mov
das
rcrb
es
enter
adc
loope
jb
outsl
push
lret
sub
mov
imul
mov
repnz
dec
inc
insl
cwtl
push
test
or
aas
mov
aas
xor
hlt
ret
lock
pop
dec
cwtl
add
add
jge
inc
pop
scas
jg
jmp
push
mov
gs
aaa
in
leave
mov
test
jb
xchg
dec
movsb
and
cmpsl
xchg
inc
outsl
in
sarb
and
je
add
and
pop
fists
inc
xchg
scas
das
xor
insb
and
mov
sub
fidivrs
imul
add
shrb
xchg
icebp
and
cmp
cli
inc
or
xchg
pop
push
add
lea
repnz
ja
imul
stc
mov
adc
out
pushf
inc
mov
int
test
mov
dec
cltd
sbb
push
insl
inc
xor
ds
mov
mov
jecxz
push
mov
sbb
pop
mov
cli
iret
in
es
addb
sbb
jno
fmul
lea
out
xchg
push
dec
sbb
jg
mov
das
pop
xchg
shll
lcall
loop
fmuls
mov
lahf
dec
into
sbbl
mov
mov
mov
stc
xchg
xchg
xor
pusha
in
scas
stc
call
pop
dec
or
in
lods
add
or
dec
inc
loopne
popa
fwait
hlt
xor
ja
aam
mov
or
or
cmpsb
lods
jne
push
jg
cmp
sbb
lods
xor
sub
add
push
mov
push
aad
pop
aad
popa
dec
adc
dec
mov
push
fisubs
fistps
divl
sahf
ss
mov
rclb
cmc
push
movsb
mov
es
decb
call
jo
inc
cmp
mov
sbb
fcmovbe
or
aad
dec
in
mov
mov
push
xchg
pop
movsl
mov
push
push
jg
mov
pusha
jbe
mov
out
pop
xchg
pop
xor
or
rcr
repnz
cmp
push
loop
xor
mov
xor
mov
imull
leave
dec
loopne
jae
push
jno
insl
das
adc
or
jae
adc
ret
and
push
mov
cmp
adc
push
call
test
inc
popf
jmp
jne
inc
and
or
add
in
xlat
cmp
mov
bound
movsb
mov
daa
lods
dec
lock
push
shlb
mov
popf
mov
adc
in
shrl
cmpsb
push
pop
por
lock
jb
lods
or
and
ficoml
mov
and
icebp
scas
xchg
enter
cltd
pop
cmp
scas
sahf
pop
cmp
push
push
push
das
mov
in
aas
xor
pushf
or
cmp
xor
sub
push
adc
cltd
sub
sbb
mov
les
xor
roll
mov
daa
incb
insl
sub
out
int
pop
pop
movsl
xor
xchg
add
loope
inc
cmpsb
pop
xchg
adc
ret
das
imul
cmp
lods
imul
xchg
mov
aad
push
imul
sub
loopne
mov
rcrb
sahf
lods
outsb
adc
mov
add
bound
lahf
dec
cmc
daa
sbb
cmp
fidivrl
outsb
adc
dec
cmc
jns
gs
cli
popl
mov
std
rolb
test
lret
lcall
mov
push
icebp
out
in
and
mov
lcall
loope
test
jns
enter
pusha
imul
lret
out
hlt
rcrb
mov
out
loop
int
jle
sub
jl
jecxz
les
mov
faddl
enter
addr16
mov
popf
sarb
out
call
xor
bound
ljmp
pop
inc
movsb
or
dec
jge
xchg
sub
lret
jge
jae
mov
movsb
cmp
fidivrl
dec
xchg
mov
add
fst
cmp
movzbl
mov
xchg
sbb
pop
pop
and
out
cmp
inc
lods
psubusb
and
insl
repnz
cltd
popa
dec
adc
lret
push
or
int3
jno
push
push
aas
out
lods
les
int
out
leave
rcrb
inc
jle
fs
clc
mov
mov
and
push
sbb
push
adc
roll
arpl
add
dec
dec
adc
mov
fcoms
jecxz
xor
scas
hlt
mov
shrl
dec
inc
jb
aam
sbb
js
push
lahf
sub
jb
jl
out
popa
xchg
push
sbb
add
push
iret
imul
adc
call
mov
push
pop
in
xchg
xor
jmp
add
addr16
or
aam
pushf
sbb
mov
and
cs
popf
fsubrl
pop
into
xchg
dec
icebp
addr16
fldl
mov
add
and
and
xchg
mov
xor
lcall
lods
divl
lods
scas
adc
mov
repnz
int3
shlb
push
ljmp
loop
cmp
ja
jo
sbb
adc
rcrb
adc
loope
jae
inc
mov
push
dec
pop
fdivs
pop
sub
add
movsl
mov
add
or
jl
add
repnz
xlat
stc
jb
je
mov
mov
stos
push
jmp
arpl
ret
mov
push
adc
adc
imul
pop
adc
jb
in
rcrl
cmp
pop
ja
jp
popl
xchg
scas
inc
out
nop
push
movsb
dec
stc
mov
or
lcall
adc
pop
repz
lahf
mov
int3
lcall
les
aas
lea
sti
sbb
ja
in
mov
cmp
jge
idivb
jl
push
xchg
dec
cmp
jp
add
js
mov
mov
nop
mov
add
mov
cmovbe
adc
dec
xchg
push
dec
scas
sti
int3
cmp
xlat
aaa
scas
out
ret
out
cwtl
push
inc
icebp
xchg
rolb
jle
fsubrl
stos
test
lcall
pop
test
sub
es
push
mull
int
jg
adc
push
jb
ret
iret
rcr
lods
aaa
fiadds
mov
jbe
jnp
and
subb
push
pop
pop
scas
insb
jmp
mov
sbbl
ret
jl
or
int
ds
xchg
or
dec
loope
insl
pop
and
sbb
inc
stos
aas
lods
push
insb
lahf
icebp
fstpt
add
pop
xor
pushf
and
add
sahf
jmp
dec
insb
cmc
jg
cmpsl
orb
cs
dec
outsb
imul
and
or
lcall
dec
cs
dec
iret
dec
xchg
pushf
ss
dec
mulb
test
icebp
lds
lcall
xchg
test
cmc
inc
xchg
sar
ds
test
xchg
pop
mov
pop
arpl
loope
ljmp
and
loopne
jnp
ror
ss
stos
inc
ret
jp
jns
dec
mov
jae
push
jge
sbb
scas
lock
fucom
aaa
mov
mov
popf
xlat
add
adc
cmp
mov
inc
jo
inc
je
out
push
inc
shlb
movsb
push
scas
or
enter
and
fnstenv
xor
shrl
jae
cli
ret
in
sbb
jl
lret
fwait
rcll
fwait
jl
clc
push
test
std
divps
test
or
sbb
movsl
das
les
sub
jge
mov
dec
adc
push
ret
jne
add
icebp
cld
aaa
mov
xchg
and
ljmp
dec
cmpsl
jo
jne
hlt
daa
mov
in
int
inc
xlat
mov
pop
push
jg
nop
out
lahf
popa
xchg
sub
sahf
mov
add
pop
sub
mov
xor
in
bound
or
mov
cwtl
stos
ljmp
inc
orb
ffree
adc
enter
stos
sbb
xor
pop
sbb
test
not
cmpl
bt
dec
out
aad
jge
xor
je
out
sbb
insb
rcll
jo
sbb
and
outsl
dec
outsb
test
cli
mov
shlb
imul
push
mov
popa
push
add
das
mov
ss
imul
in
pop
sub
aas
add
loopne
push
or
mov
inc
or
call
clc
and
jecxz
mov
jo
out
imul
sbb
push
div
pop
and
cmp
popf
cltd
clc
mov
aam
dec
xchg
scas
cmp
pop
cmc
mov
jo
xor
and
and
add
incb
cmp
jnp
ss
mov
out
cmp
pushl
int
cmc
mov
or
jle
rcll
lsl
add
and
testl
or
ja
fisttpl
stos
adc
aad
outsb
insb
mov
push
sahf
pop
imul
dec
sub
pushf
jmp
stos
cmp
popa
mov
add
dec
xchg
icebp
hlt
aas
adc
mov
shlb
xor
loop
add
inc
aaa
adc
sarl
js
mov
jge
cmp
xor
and
lret
cwtl
aas
out
out
imul
xchg
add
stc
jp
cmp
shlb
sti
xor
mov
sbb
cmp
jns
dec
add
fucomi
in
push
adc
jb
mov
inc
push
sbb
mov
xor
inc
imul
add
and
lret
jo
adc
aaa
call
repz
loope
mov
push
ss
insl
cmp
mov
loopne
mov
hlt
loopne
mov
dec
lcall
adc
inc
jecxz
leave
cmp
insb
shrl
pop
jmp
sahf
js
cwtl
sbb
cmpsb
pop
cld
inc
subl
pop
inc
nop
roll
sbb
sarl
dec
shl
dec
das
pushf
sti
lds
leave
pop
aaa
inc
jg
movsl
test
dec
or
lahf
add
pusha
push
lret
sub
bound
jmp
lcall
test
in
lods
aas
sub
sbb
mov
sti
mov
in
cmp
xchg
xchg
inc
pop
jns
push
xor
loopne
inc
popa
mov
int
inc
daa
fdivrs
jo
xchg
push
mov
mov
xor
in
sub
xchg
rolb
shrl
xor
mov
dec
pop
int
lcall
mov
imul
mov
or
xchg
hlt
xor
iret
jg
jg
dec
sub
ret
xchg
ret
mov
lcall
loope
in
inc
sarl
push
xor
or
jl
mov
sbb
int3
and
clc
dec
and
outsl
mov
int
cld
adcb
aam
jg
mov
fcmovne
mov
test
out
das
js
popa
je
mov
test
lods
mov
cmp
fsubrl
sbb
inc
pusha
dec
xlat
outsl
xor
setle
inc
push
lret
outsl
shr
cmp
jg
icebp
aaa
mov
push
cmc
mov
movsl
pop
je
inc
or
scas
push
lret
cmc
xlat
rclb
into
int3
mov
lret
cli
testl
mov
bound
sbb
inc
cmp
pop
shrl
mov
dec
inc
dec
repz
movsl
xchg
xor
push
loopne
lea
arpl
imul
sbb
add
or
out
jb
xor
push
test
aaa
pop
scas
pop
in
jle
dec
or
sti
daa
lcall
loope
inc
jbe
mov
sbb
jp
movsb
cmc
sbb
xor
or
call
and
adc
sub
inc
xchg
fstl
mov
fildll
stos
bound
iret
pop
lds
sbb
cmp
lea
aam
mov
outsl
addb
and
pop
insl
adc
and
ret
add
adc
test
idivb
repnz
fcoml
ret
scas
or
mov
mov
fsubs
or
inc
cmp
pop
inc
mov
sub
push
scas
insl
mov
cmp
or
mov
adc
sub
sbb
xor
pop
loop
aaa
jno
xchg
leave
sti
aas
lret
out
cmp
mov
shlb
cmpsl
loope
push
fwait
inc
dec
shll
jnp
clc
insl
mov
int
sub
cmp
sarb
push
sub
jno
or
loopne
xchg
push
ds
jecxz
dec
arpl
aam
fidivs
in
lahf
lret
adc
mov
in
xchg
ret
imul
mov
outsl
mov
sbb
adcl
nop
nop
arpl
leave
cmc
test
sub
mov
cmp
out
mov
inc
scas
dec
int3
mov
in
jo
clc
cmpsl
inc
pop
xchg
push
mov
push
xchg
in
jae
mov
mov
movb
jle
aas
adc
aam
add
push
jmp
inc
xlat
mov
jmp
mov
dec
aad
rorb
pop
mov
in
cld
ds
outsb
scas
movsl
movsl
imulb
mov
add
jbe
aaa
inc
mov
jmp
pop
pushf
mov
js
lods
ss
xor
cltd
dec
jae
fwait
movsl
jl
iret
mov
pop
lods
jo
lods
push
je
jae
dec
mov
imul
or
add
ljmp
fstl
xchg
fidivrs
mov
mov
mov
pop
test
data16
movb
leave
mov
push
sbb
jnp
pop
push
jge
pop
sbb
mov
mov
sub
mov
inc
jle
cli
pusha
push
stc
stos
xor
xor
cmp
adc
or
cltd
aam
test
cltd
push
test
into
aaa
sub
lahf
and
mov
xchg
shrl
inc
jae
fdiv
xchg
cmp
push
mov
inc
inc
jecxz
je
jp
into
pop
popa
xor
testl
test
ficompl
icebp
dec
jno
imul
addl
pop
enter
add
aas
mov
adc
xchg
mov
sbb
mov
lods
or
in
sbb
push
and
es
cmp
in
cli
pop
fsts
in
js
sbb
xlat
repz
push
mov
lahf
pop
cmc
or
lea
cmpsl
add
adc
mov
cmp
jg
call
imul
jecxz
cmpsl
js
loopne
insl
roll
dec
xorl
cwtl
dec
mov
xchg
add
mov
es
xchg
stc
push
loope
cmp
mov
xchg
sti
cwtl
mov
push
mov
addr16
and
test
jge
pop
fldenv
inc
mov
bound
std
jle
or
stos
and
testl
xchg
pusha
in
mov
std
stc
add
clc
int
push
pop
ja
adc
outsl
fimull
rcr
movsb
not
jnp
ja
fistps
mov
xchg
mull
iret
arpl
dec
testb
enter
sbb
es
daa
xor
mov
in
test
loop
test
sub
sbb
inc
aam
or
cmp
pop
ljmp
jl
inc
push
into
jecxz
xor
js
fstpl
cmp
xchg
pop
idivl
mov
ljmp
jmp
ljmp
sbb
jnp
jl
jbe
ljmp
out
gs
nop
sbb
add
mov
mov
lock
repnz
mov
adc
outsb
lods
jns
cmc
sbb
fstl
rclb
jecxz
icebp
or
fs
negb
rol
sub
pop
lea
test
arpl
out
push
dec
or
cmpsb
inc
adc
jl
pop
cli
and
xor
andl
push
pusha
lods
lock
pop
dec
xchg
clc
lods
lahf
push
push
jb
add
cmp
lea
shll
mov
sub
pop
inc
das
sahf
es
push
paddsw
inc
add
cmc
insb
aaa
jecxz
divl
adc
push
dec
shrl
in
clc
les
incl
dec
pop
je
insl
iret
test
fdiv
fcompl
mov
in
inc
push
push
sbb
xchg
lock
ret
into
out
dec
popf
lea
mov
loop
push
mov
sbb
cmc
push
sub
dec
xlat
lock
rcl
xchg
dec
in
out
adc
pop
rcr
hlt
xor
inc
das
or
data16
jno
jp
inc
out
sbb
xor
and
and
pop
xchg
cli
cld
ljmp
dec
ljmp
pop
test
ss
mov
movsl
mov
and
fs
data16
loopne
mov
mov
sahf
test
push
dec
fsubl
cld
jg
inc
out
daa
dec
cltd
jno
pop
lds
mov
jbe
daa
mov
pushf
outsb
sbb
mov
or
lcall
mov
stc
mov
mov
jne
out
and
mov
sub
pusha
shll
jnp
nop
inc
push
sub
ret
leave
ret
call
out
mov
sub
jo
mov
leave
inc
adc
xchg
stc
dec
cmp
add
jge
lods
enter
fdivrl
mov
pmulhuw
jnp
test
inc
jae
mov
cld
inc
xchg
stc
inc
popf
jecxz
mov
rcrb
xor
in
fbstp
aad
mov
xchg
xor
imul
add
fstps
mov
lods
push
movsl
insb
fstps
outsb
sbb
mov
mov
cwtl
inc
jne
and
shll
mov
addl
call
bound
jge
adc
mov
out
imul
arpl
es
stc
lock
int
call
sbb
and
mov
push
movsl
lds
sbb
sbb
pusha
jmp
sub
loopne
xchg
sbb
ss
push
enter
subl
stos
jmp
mov
repz
sbb
dec
mov
xchg
and
mov
mov
test
je
pop
cmc
repnz
mov
jbe
imul
sub
jne
lret
fmuls
aam
adc
data16
mov
repnz
idivb
mov
fwait
inc
stc
incl
mov
pusha
sbb
mov
inc
pushf
jnp
lods
dec
or
jo
hlt
jo
jecxz
or
cmpsl
aad
dec
inc
outsb
mov
inc
xor
or
adc
ljmp
cs
push
lcall
push
jnp
mov
ja
mov
popa
push
or
inc
loope
sbbb
bound
int3
cmp
outsl
mov
dec
push
push
data16
jo
xor
clc
inc
jmp
imull
add
int3
dec
adc
test
mov
pop
push
addb
push
movsl
out
mov
jecxz
or
push
add
pop
fadds
dec
mov
es
popa
loop
sub
xchg
mov
jbe
xchg
inc
xor
pop
pop
jo
int3
adc
jle
lods
mov
aam
and
push
sub
js
mov
rcr
xor
mov
imul
inc
sbb
push
cmp
mov
push
ret
inc
jl
mov
and
or
adc
xchg
arpl
rcrb
in
cmpl
add
fldl
lods
ficomps
fwait
sbb
and
out
mov
pusha
aad
jo
lock
retw
jnp
loopne
or
sub
mov
add
pop
mov
adc
sub
sahf
loopne
push
mov
mov
push
xor
mov
mov
or
insb
lret
roll
mov
and
lds
xchg
lock
out
mov
cmp
aas
dec
mov
inc
test
mov
inc
cmp
insl
inc
add
adc
cmp
and
fstpt
jbe
push
sbb
arpl
gs
es
inc
shrb
adc
fisubs
incb
js
fistpl
xchg
rcll
pop
test
mov
gs
les
or
mov
out
int3
jmp
fdivs
mov
mov
jnp
je
pop
dec
and
xchg
cmp
sbb
push
je
and
loop
cmpb
pusha
sub
ja
fdivs
and
xchg
jmp
xchg
fidivrl
ljmp
and
inc
xor
jae
xor
shlb
hlt
push
mov
pop
daa
out
push
lea
movsb
shll
mov
jl
xchg
repz
cmpsb
adc
mov
movsb
cmc
xor
fistpl
jp
jnp
cmp
or
stos
push
pop
push
mov
mov
xchg
cmpsl
ficoml
mov
pop
pop
in
mov
mov
loop
sbb
mov
cmp
xchg
dec
jle
fcmovnbe
xor
rclb
mov
scas
pop
push
add
lods
xchg
and
push
or
inc
and
leave
out
sbb
sbb
adc
in
xchg
sarl
mov
ja,pn
out
pop
in
dec
xchg
inc
rolb
xchg
adc
mov
insb
cmpsb
add
mov
scas
popf
adc
bound
imul
stos
cld
jg
or
push
fsubl
movsb
hlt
jne
jnp
jge
pop
stc
jnp
or
jae
push
ror
mov
xchg
icebp
dec
or
push
rcr
pop
mov
and
cmc
rorb
imul
dec
adc
cld
mov
outsb
leave
jge
aad
mov
js
stos
mov
roll
xchg
das
iret
lods
subb
dec
and
int3
cld
pop
push
repz
scas
xor
pop
xchg
mov
xchg
pop
xor
jnp
dec
xor
std
test
std
nop
cmp
jge
xor
nop
loop
and
adc
imul
dec
xlat
mov
into
mov
jecxz
dec
dec
xchg
enter
sbb
jbe
cmp
lods
dec
pusha
jb
repz
fucomip
cs
push
jge
icebp
outsb
mov
into
xchg
adc
sti
sbb
xchg
aas
sbb
test
aam
fdiv
cmp
rcll
jge
xor
lcall
sub
addr16
mov
out
cmp
pop
in
popf
insl
pop
aam
addb
mov
lea
movl
adc
mov
mov
enter
dec
xchg
testl
xor
lods
aad
xchg
fnop
ficoms
push
mov
aas
pop
jmp
xchg
dec
js
loope
mov
and
js
lds
add
mov
int
mov
fistl
xor
sti
scas
cmp
xchg
push
xor
jmp
test
cmp
jbe
leave
out
mov
fsincos
in
rol
int3
les
jns
pop
aad
aam
push
lcall
mul
adc
sarb
fldenv
in
and
call
cmpsb
push
sbb
aas
pop
decl
or
cmc
lea
fs
xor
fs
push
and
jb
shll
fimuls
movsl
ss
lods
add
push
in
mov
inc
test
imul
mov
insl
xchg
aaa
push
or
enter
xchg
jb
outsw
xor
sahf
mov
rcll
xor
js
push
mov
cwtl
loope
or
enter
data16
add
sub
cmp
dec
loopne
mulb
sbb
dec
arpl
add
loope
lret
xor
js
push
fnstsw
dec
xchg
hlt
cmpsb
jno
mov
jg
add
jns
out
rol
imul
push
outsb
push
enter
frstor
or
shll
incb
les
insb
adc
xchg
jnp
movsb
pop
ret
stos
mov
jbe
int
xchg
in
stc
movntps
dec
pop
xchg
loope
addr16
and
push
mov
pop
sbb
mov
and
out
addr16
mov
aad
pop
jne
dec
xchg
or
jo
cmp
mov
add
cmpsb
out
push
xlat
jge
shll
insb
cmp
in
push
jle
or
add
adc
roll
outsl
nop
fdivrl
jb
xchg
iret
ja
repnz
adc
das
outsb
mov
shrb
mov
shll
xchg
sbb
popf
orl
cli
jmp
repz
call
ret
addr16
and
fwait
shrb
popf
stc
and
sbb
cwtl
add
pop
iret
adc
sub
xor
stos
and
push
jmp
xor
pusha
clc
dec
jmp
repz
loope
mov
nop
mov
rorb
mov
mov
nop
push
cwtl
jp
mov
inc
loope
int
jecxz
pusha
jp
cmp
sti
mov
pop
push
ret
dec
mov
test
pushl
push
lds
leave
jl
mov
xchg
inc
mov
pushf
ss
cmpsl
or
ret
adc
mov
rcll
sahf
adc
insb
xchg
jno
push
jnp
rol
sbb
loopne
pop
loope
loopne
ljmp
or
inc
add
imul
inc
mov
scas
clc
jmp
lods
ss
inc
xchg
mov
pop
dec
and
out
pop
mov
call
inc
sbb
jecxz
pop
sub
mov
bound
mov
shll
xor
sbb
inc
sub
mov
cmp
or
ja
lret
sub
inc
addr16
mov
lret
out
in
or
sti
inc
hlt
xor
aam
mov
xchg
into
inc
insb
cmp
sbb
xlat
call
xchg
jmp
idiv
sub
insb
add
mov
movsb
repz
mov
aad
cmp
mov
std
mov
cmpsl
icebp
scas
cmp
pop
dec
int3
pop
mov
adc
sahf
in
lods
fs
out
add
xor
inc
setge
and
dec
cmp
cmp
add
mov
push
leave
lret
stc
lods
fmul
in
fs
mov
xor
cmpsb
jne
aam
xor
and
movsb
jnp
lcall
jge
loopne
xchg
pop
push
adc
dec
cmp
pushf
ds
sbb
repz
xchg
je
icebp
shrl
pusha
cld
loop
sub
mov
xchg
movsl
dec
pop
les
in
shr
arpl
pop
cmc
ss
add
sbb
jne
adc
jl
jg
mov
js
shll
sub
rol
repz
jmp
and
sub
xchg
les
xor
sbb
push
movsb
cmc
dec
jmp
mov
repnz
shll
cmc
xor
cltd
push
mov
pop
addl
lds
sub
mov
add
dec
popa
es
xor
lods
aas
outsl
inc
repz
arpl
rolb
inc
das
xor
xchg
int3
mov
jb
pop
or
push
fcoml
adc
js
lods
xor
fnstenv
test
mov
cmpsb
and
iret
push
cmpl
cli
test
mov
push
push
lea
cmp
pusha
mov
sub
int
aad
in
dec
push
sub
or
das
mov
pop
xor
pop
mov
sbb
in
shlb
jl
cli
addl
sub
add
adc
push
xchg
pcmpeqd
int
ja
add
inc
fisubl
sub
mov
shlb
or
mov
out
lahf
aaa
mov
push
mov
and
lahf
aad
int3
dec
and
leave
nop
xchg
push
or
dec
xchg
pusha
adc
sbb
pop
mov
std
sti
insb
subl
inc
or
mov
mov
fs
psubb
shll
inc
cmp
or
ljmp
jecxz
pop
jnp
push
mov
xchg
mov
cwtl
mov
movsl
dec
and
push
inc
call
test
xchg
aaa
enter
popa
sub
cmp
sti
fmul
ja
dec
jne
pusha
ret
enter
pop
push
xor
roll
adc
pop
nop
bound
int
adc
into
call
dec
mov
idivb
sti
mov
sbb
add
pop
loop
and
inc
fwait
xchg
mov
and
outsl
add
rcrb
pop
movb
push
mov
pop
fwait
clc
clc
stos
outsl
xchg
sub
jl
cmp
jo
jnp
dec
mov
std
dec
mov
insl
push
dec
inc
inc
xchg
loop
adc
lcall
scas
mov
add
pop
inc
xchg
dec
push
push
insb
jae
sub
pop
int3
andl
pop
cmc
das
jp
lret
iret
cmc
pop
fiaddl
cld
push
add
popf
dec
dec
add
cmp
xchg
mov
loop
jne
mov
movsl
jno
pop
out
xor
sub
jecxz
aam
cmc
push
xor
cli
js
les
rorb
scas
xlat
lahf
mov
daa
mov
push
xor
mov
shll
jns
add
or
dec
dec
add
mov
ja
sbb
jns
push
repnz
inc
fadds
mov
fcmove
push
popa
sub
mov
das
ja
and
shll
sqrtps
cmp
clc
jmp
das
cmp
xor
enter
inc
mov
addb
inc
mov
xor
lahf
rcrb
dec
repz
int
lods
mov
test
mov
aad
mov
xorb
negl
fstl
adc
cmpsl
rclb
add
cmpsb
cwtl
or
std
mov
mov
aaa
inc
sbb
sti
pop
les
mov
stos
push
mov
aam
fwait
adc
jp
stc
push
gs
mov
sbb
sahf
cmp
mov
jo
movsb
pop
lock
aas
inc
add
fdivl
mov
andb
add
xor
ds
cltd
stc
pop
sbb
pop
push
sbb
dec
adc
gs
aas
insb
pop
pop
mov
outsl
or
mov
mov
xchg
mov
pop
rolb
outsb
nop
cmp
mov
mov
lock
ret
xor
scas
mov
mov
mov
jns
inc
out
xchg
int
inc
and
aaa
dec
mov
ja
daa
dec
add
fldt
dec
and
cld
and
lock
pop
andb
push
or
lods
xlat
ds
push
outsb
popa
push
lcall
sti
xor
jne
cs
mov
popl
sub
sti
and
xor
pop
insl
dec
or
dec
rorb
push
jecxz
sbb
aaa
loope
loop
test
inc
cmp
insl
jns
pop
jl
mov
cmpsl
test
addr16
fcmovu
das
jge
popf
icebp
inc
sarl
ret
pop
insl
jae
xchg
fcoms
inc
mov
cmp
sbb
xor
and
sub
cmp
lock
repnz
ljmp
movsl
adc
and
je
jge
fsubrp
dec
cmp
inc
jmp
push
cmpsb
cs
or
in
cmpl
jp
xchg
lret
jnp
clc
out
test
shrl
mov
lds
and
mov
dec
in
sub
mov
dec
mov
sahf
push
in
lock
cmp
daa
lods
inc
pop
adc
outsb
fadds
leave
test
sbb
nop
mov
jo
pop
pushf
dec
sbb
mov
icebp
out
in
add
daa
fldt
push
movsb
jp
jl
or
lods
jle
aad
sti
xor
in
adcl
out
cmpsl
ja
push
dec
mov
mov
jge
scas
fldt
stos
stc
pop
cli
int
mov
xchg
push
outsb
add
fwait
push
ja
jle
test
pop
mov
and
mov
mov
and
or
out
hlt
xorl
push
fnstsw
dec
push
pop
mov
pushf
mov
push
mov
mov
fstps
out
mov
shl
sbb
divl
mov
pop
int3
inc
std
jle
loope
jae
or
cli
imul
nop
ljmp
stos
cmp
xchg
push
aam
xchg
sbb
inc
es
std
fiaddl
cmp
ret
shlb
sarb
pop
push
fbld
ljmp
cld
or
xlat
jle
ss
loop
pusha
aam
xchg
scas
inc
sub
rorl
add
popf
ret
iret
adcl
inc
lret
lods
inc
adc
pushf
shl
dec
and
jne
sbb
cwtl
enter
cmp
leave
pop
mov
jne
nop
mov
lods
cmc
cwtl
popf
mov
aas
push
les
dec
or
dec
adc
daa
scas
cmc
in
jmp
jne
rorl
mov
dec
movsl
pop
shrl
or
jnp
sbb
dec
or
cmp
or
ficompl
mov
dec
sbb
sahf
popf
and
aam
push
push
inc
fsubrp
sub
push
test
cmp
pop
ret
scas
stos
or
sbb
mov
js
jns
lret
hlt
lock
cmc
sbb
test
jle
test
je
adc
mov
pushf
in
pop
add
add
sub
loop
mov
sbb
add
add
mov
sub
sbb
inc
inc
inc
rol
sbb
out
xor
inc
jne
push
adc
push
xchg
mov
std
sub
pop
sub
mov
push
push
push
incl
mov
decb
fsts
or
jbe
mov
es
push
sarl
pop
es
loop
jb
popf
cmp
lcall
dec
jbe
js
imul
in
test
loope
xor
in
rorb
int
add
push
mov
insb
out
call
adc
cmp
push
jb
xchg
jae
push
pop
lcall
push
adc
dec
mov
xchg
out
mov
push
addr16
subb
cwtl
adc
andl
push
mov
scas
mov
lea
insl
push
mov
mov
mov
push
ret
inc
sub
inc
loope
or
andb
jg
and
xlat
add
and
shr
push
add
mov
dec
lahf
and
or
lds
mov
nop
cmp
bound
add
sub
fwait
std
div
addl
ds
adc
loope
mov
test
cmp
sbb
out
out
out
fidivrl
loope
inc
mov
sbb
cltd
testl
lret
sub
jmp
adcl
loopne
sub
pop
out
aam
in
pop
pop
divb
add
sbb
cmp
cmp
mov
js
and
jmp
and
out
sub
push
xor
loope
dec
and
xor
adc
es
imul
add
xor
push
scas
les
int
lods
adc
jno
mov
loope
mov
rcl
push
dec
and
scas
cmp
cwtl
cmp
adc
or
or
ljmp
cli
lret
xor
enter
jno
push
je
xor
cwtl
add
stos
sbb
sbb
aas
lret
ficomps
adc
aad
cmp
add
pop
scas
mov
popf
xor
repnz
imull
fldt
pop
adc
push
arpl
pop
mov
xchg
add
popl
fs
ljmp
mov
loop
and
mov
mulb
dec
nop
pusha
sub
jb
pop
cs
jo
sub
fldl
iret
mov
mov
notb
rcl
scas
inc
dec
mov
dec
fmul
xor
fidivl
pushf
andb
push
dec
adc
scas
sar
andl
lds
mov
add
and
rcrl
jne
ret
cmc
test
add
and
loopne
push
jmp
ljmp
mov
lret
js
push
enter
push
push
pushf
and
jno
jecxz
jo
adc
jl
les
lahf
lret
fwait
jne
and
cltd
dec
test
pop
out
or
sbb
shrl
lret
xor
fstps
shlb
in
cmp
lock
jg
les
mov
leave
xchg
daa
shl
mov
xchg
divl
cmp
jb
lea
jno
and
adc
xchg
pop
add
pop
inc
aaa
push
mov
push
stos
or
adc
push
fdivrs
in
push
leave
adc
test
test
pop
sbb
test
popa
sbb
pop
push
idivb
dec
addl
and
cmpl
lods
in
loope
sub
mov
push
adc
aam
bound
and
sarl
and
dec
gs
cmpsb
addr16
lea
sub
stos
call
or
inc
adc
jg
rclb
int3
add
jbe
xlat
outsb
add
enter
xchg
jl
leave
dec
gs
inc
sub
jo
and
dec
xchg
out
mov
push
data16
clc
pop
fimuls
and
mov
aam
fimuls
cs
icebp
pop
addl
sbb
mov
jmp
and
test
std
in
shlb
mov
dec
pop
int3
mov
cmpsb
jne
ljmp
ret
das
cmpsb
gs
fists
inc
loop
adc
mov
inc
cli
push
xor
rcr
push
out
push
xchg
cmp
mov
push
push
sub
mov
xlat
nop
cmp
cwtl
jmp
xchg
les
pop
data16
xchg
push
mov
fildll
out
std
dec
mov
jl
fwait
jns
les
mov
lods
shrd
sub
xchg
xchg
push
lds
ljmp
mov
jmp
add
imul
testb
pushf
jne
jbe
or
nop
mov
icebp
out
pop
lods
jge
pop
or
pop
inc
andl
push
dec
scas
sbb
xor
add
sbb
cli
push
mov
push
ret
mov
mov
dec
pusha
or
dec
mov
pushf
cld
das
ret
xchg
in
xchg
push
aam
js
pop
dec
sbb
or
stos
rolb
jno
mov
repnz
out
mov
and
pop
sub
cmp
aad
add
mov
inc
icebp
push
push
in
jmp
mov
pushf
sbb
mov
sarl
inc
add
or
cld
jo
daa
dec
fs
jnp
shrb
movsl
or
jg
js
push
movsl
xchg
dec
lock
stos
sbb
out
int
ds
popf
xchg
shrb
push
imul
xorb
pushf
sub
pop
fmull
into
in
cmc
push
jecxz
adc
addr16
fists
sbb
sub
or
or
daa
ret
inc
in
fucomp
mov
fstpl
shll
js
mov
jno
in
sbb
inc
bound
adc
notb
enter
pop
inc
cmp
adc
sbb
dec
popf
xchg
ss
aas
push
subps
xchg
and
clc
pop
fbld
sub
sub
pop
mov
adc
pop
popa
pushf
sbb
out
jl
mov
jo
cmp
arpl
jl
rcrl
xchg
adc
test
pop
pop
sbb
in
lds
lods
inc
sbb
lret
lret
dec
sbb
sub
dec
adc
mov
lds
outsl
nop
adc
mov
jns
jae
cmp
and
add
mov
test
pop
or
fistpl
bound
push
sub
mov
pop
xorb
mull
mov
in
mov
sets
inc
jne
sub
or
shlb
test
aas
in
popl
cmp
pop
push
push
xchg
jne
and
enter
in
mov
divl
es
fistpll
xor
mov
shll
bound
dec
pop
jp
and
sti
jg
sbbl
xchg
mov
mov
cs
pop
popa
push
aas
mov
subb
cmp
icebp
je
push
xor
dec
mov
cmc
mov
and
adc
xchg
out
xchg
add
dec
xchg
pop
loope
aas
jns
pop
cli
push
mov
jno
aaa
into
mov
jne
cmpsb
cmp
add
mov
lea
mov
xchg
cwtl
add
fsubs
sub
adc
mov
push
cmp
xchg
aaa
xchg
mov
lea
daa
sarl
cmp
and
jno
das
sbb
mov
hlt
mov
test
pusha
mov
inc
sub
mov
mov
jno
mov
dec
dec
mov
dec
jge
and
arpl
popa
scas
or
xchg
gs
add
xchg
sbb
cmpsl
lods
iret
xor
and
add
mov
dec
sub
iret
test
xor
int3
add
push
fstpl
xchg
loope
int3
jb
sub
sub
cmc
dec
sahf
pop
push
pop
xor
cmp
push
es
jno
xor
dec
xor
dec
fistpl
adc
inc
inc
fdivrs
adc
jecxz
mov
push
or
push
xor
cmpsl
mov
mov
daa
or
pop
pop
jle
sti
sub
sbb
cltd
repnz
mov
push
sub
mov
xchg
bound
mov
mov
push
das
aaa
orl
movsl
sub
sbb
and
out
push
cmpsl
jge
adc
adc
rcrl
test
aam
scas
mov
and
std
loopne
aas
pop
cli
test
scas
xchg
jge
lods
add
jnp
sbb
jge
or
lds
or
lcall
cwtl
in
popf
sbb
xchg
pop
ds
inc
xchg
xor
xor
mov
test
and
ds
jp
std
dec
aam
add
stos
bound
loopne
fcmovu
or
popa
jno,pt
shrl
add
lods
dec
call
pop
dec
inc
mov
movsl
jecxz
test
jle
out
mov
lret
xchg
sbb
mov
mov
fldl
mov
sub
stos
lock
cmp
test
mov
invd
inc
loope
inc
in
fdivrs
mov
push
sub
or
ja
cmp
inc
push
rep
ret
xlat
dec
mov
lods
icebp
jbe
mov
lret
stc
arpl
mov
cltd
int
mov
movsl
ret
sub
mov
fwait
pusha
test
jle
push
push
jl
sahf
xchg
popa
push
add
and
jne
fidivrs
cmp
dec
pop
push
cmp
adc
xor
lret
or
mov
mov
dec
xchg
pop
or
dec
xchg
xchg
mov
push
int3
adc
or
cmp
mov
push
iret
mov
popf
add
mov
addr16
dec
cld
adc
mov
fsubrl
jg
in
daa
add
aad
out
or
in
repz
insl
cwtl
adc
jl
aam
js
nop
push
or
xchg
mov
push
aaa
lret
xchg
dec
pop
dec
cmc
cmpsl
jnp
add
mov
or
jl
stos
mov
ja
mov
arpl
push
int3
jns
push
pop
lods
mov
cld
leave
ljmp
cmpsl
hlt
imul
movsl
mov
popf
pusha
xchg
test
stos
psubw
push
sbbb
test
in
and
jb
int3
push
int
call
repz
mov
mov
adc
push
fisttpl
cmp
cmp
fildl
mov
imul
push
xor
mov
fsubrp
inc
xchg
jmp
icebp
fdivrl
jmp
fildll
scas
ja
andl
or
xor
dec
fucom
jbe
push
hlt
jecxz
or
inc
stos
xlat
test
jno
adc
leave
mov
std
push
out
lock
es
xchg
sbb
gs
fwait
shll
insl
xchg
movsb
xor
outsl
out
xchg
jl
ret
in
adc
xchg
loopne
xor
and
data16
pop
nop
push
shl
daa
mov
push
out
mov
ds
out
shlb
mov
sub
incb
dec
cmp
mov
test
sbb
std
dec
cmp
imul
addr16
adc
outsl
mov
pop
and
push
mov
mov
imul
add
cmp
inc
or
roll
out
xchg
inc
or
inc
and
ds
push
divl
outsl
cmc
push
fdivl
cmp
mov
fistpl
mov
mov
mov
pushl
pop
loopne
sbb
mov
cwtl
sbb
dec
xor
inc
cmp
cmpb
mov
pop
push
dec
or
lea
std
gs
repnz
pop
outsb
pop
adc
ljmp
xor
subl
xor
test
mov
add
xchg
add
push
jl
inc
push
lods
push
add
fistps
mov
bnd
loope
or
push
jg
adcb
xchg
push
or
insl
mov
sbb
sub
xchg
xlat
push
pop
cmp
test
pop
xchg
jmp
aad
inc
icebp
movsb
stos
mov
test
mov
fdivl
decb
adc
mov
adc
mov
add
in
ror
das
sbb
iret
mov
cmp
adc
jo
jmp
xchg
jecxz
shll
ret
loopne
clc
aas
leave
xor
mov
mov
sti
adc
sti
pop
in
mov
test
xor
push
ja
mov
std
pop
scas
sbbl
aam
or
loopne
mov
push
sar
and
hlt
in
fidivrl
pushf
jmp
mov
dec
mov
imul
xor
mov
dec
addb
ja
sub
lret
and
outsb
out
test
mov
arpl
pop
cmpsb
pop
in
or
popa
cmp
fcmove
outsl
gs
or
fcoml
in
ret
xor
xorl
inc
ss
loop
scas
ror
mov
pusha
jmp
xlat
sub
dec
cmpsb
sarl
loope
fwait
stos
loopne
mov
hlt
dec
sbb
mov
icebp
sbb
and
fcmovbe
pusha
mov
mov
adc
out
mov
aad
or
inc
cmp
mov
das
xchg
sub
mov
stos
andl
xor
lea
mov
cmp
or
push
mov
fadd
gs
jecxz
rclb
pop
stos
and
or
and
cmp
je
shrl
jnp
inc
xor
mulb
jmp
and
addr16
xchg
lcall
cld
cmp
fmul
lea
pop
test
jle
neg
xor
test
push
or
fisubl
inc
stos
jl
orl
pushf
stc
push
mov
add
jns
sbb
xchg
and
mov
dec
or
ljmp
xor
sub
insl
js
out
or
cmp
push
out
gs
rclb
sub
outsb
mov
inc
negb
dec
out
mov
in
pusha
mov
gs
or
mov
addr16
dec
fucomip
sarl
or
popa
arpl
adc
adc
push
push
add
test
in
fcmovnbe
cmpsb
xor
mov
sub
pop
mov
imul
xor
jmp
pop
pop
inc
push
adc
push
fimull
or
in
mov
shll
xor
jo
out
push
sbb
call
cltd
test
mov
aaa
push
in
inc
or
enter
mov
mov
test
cld
and
jge
shrl
cmp
leave
xchg
dec
pusha
cmc
cltd
or
sarl
or
pop
clc
addr16
insl
dec
xor
stc
sub
mull
dec
pushf
add
xchg
xor
je
repnz
repz
push
mov
add
push
mov
loop
xlat
imul
insl
adc
mov
lea
adc
pop
jbe
sti
sub
cltd
repz
sbb
xor
jecxz
ret
lret
filds
int3
push
push
jo
add
or
and
roll
lea
mull
lods
mov
sub
dec
es
repnz
adc
lret
mov
in
out
push
mov
out
lods
pop
push
loopne
ret
pop
flds
mov
std
or
enter
jno
mov
mov
push
sar
pop
dec
jge
inc
or
neg
and
xchg
nop
cmp
jge
pop
xchg
xchg
jb
xchg
adc
ss
dec
mov
xchg
mov
out
int
outsl
aam
push
das
dec
cmp
test
fxch
pop
testl
xor
mov
scas
adc
mov
in
add
aad
mov
cs
jecxz
insl
pop
aas
not
test
mov
cmp
mov
mov
lock
and
shl
inc
fiaddl
lea
jg
lahf
lsl
imul
out
in
dec
push
sbb
add
mov
std
in
or
mov
sub
ds
out
pop
xchg
mov
fisttps
arpl
mov
scas
outsl
cmp
loopne
cld
andl
repnz
mov
lds
dec
fcoms
xchg
pop
lahf
ljmp
aas
in
pop
pop
or
sub
aas
pop
sbb
cmp
mov
sbb
add
clc
lock
sbb
sub
daa
jecxz
test
jmp
lds
sub
push
sbb
mov
pop
je
mov
shll
inc
ret
shrb
shrb
xor
mov
or
and
das
fbld
xchg
into
ror
mov
jae
push
fdivr
mov
stc
add
mov
out
mov
xchg
or
mov
and
push
push
push
imul
mov
frstor
sub
loopne
xchg
push
xor
push
and
cmc
test
pop
ret
insl
lods
sbb
xchg
jb
aas
repnz
sub
fsubrl
jns
pop
mov
test
scas
divl
insl
push
in
test
and
push
mov
push
pushl
movsb
xchg
push
arpl
int
pop
mov
fbld
jnp
push
gs
sbb
sbb
lea
pop
push
push
mov
dec
dec
sbb
repnz
xor
mov
pop
fs
jecxz
jne
mov
rcrb
dec
inc
stos
aaa
cli
out
mov
push
cmp
clc
dec
ret
jbe
fs
mov
mov
push
dec
jno
fdivr
mov
repz
jb
rclb
lcall
enter
mov
mov
ljmp
inc
adc
push
fwait
xchg
add
mov
sub
adc
js
pop
in
scas
sub
and
scas
xchg
fisubrs
nop
pusha
dec
fists
push
lods
int3
cmp
frstpm(287
loopne
push
ja
mov
jno
insb
movsl
push
in
lods
mov
sub
fistpll
push
dec
rcll
pop
fnstenv
in
lret
xor
mov
pop
in
orl
or
and
fcmovnu
int
addr16
cld
add
aaa
insb
push
lock
les
jnp
sbb
mov
pop
inc
test
mov
outsb
mov
xchg
xchg
in
fs
roll
repnz
data16
loope
xchg
jnp
inc
ret
pushf
out
mov
cmpsb
and
mov
ffreep
xchg
lahf
insl
mov
repz
mov
sbbl
int
xchg
sbb
mov
hlt
dec
xlat
icebp
add
push
add
xchg
pop
in
jmp
mov
stc
icebp
rclb
shr
cmp
sub
mov
popf
das
mov
mov
push
mov
or
inc
mov
mov
aam
clc
mov
outsl
ljmp
dec
push
jbe
adc
add
outsl
popa
mov
gs
mov
mov
dec
xor
lea
lret
sub
lods
out
mov
inc
lret
mov
cmp
cmp
call
int
fcomps
xor
into
and
pop
int
mov
pop
dec
in
adc
shrl
push
and
push
cmpsl
inc
iret
mov
inc
scas
jo
jns
xlat
mov
orb
adc
adc
pop
sbb
adc
test
mov
subb
addr16
inc
lock
xchg
pop
nop
jge
inc
mov
lcall
cmp
adc
mov
mov
push
int
ja
dec
mov
gs
pop
movsb
repz
int
sbb
stos
sahf
loop
jo
ret
jg
inc
sub
addr16
xor
and
call
pop
push
push
outsl
gs
test
and
sbb
scas
or
and
adcl
imul
repnz
mov
sub
loope
and
popf
icebp
dec
std
inc
dec
and
pushf
mov
cmpsl
sub
push
pop
push
xchg
addb
in
lcall
adc
inc
outsb
ret
pushf
and
xchg
jecxz
xor
add
in
push
rcl
cmp
and
cmc
pop
pop
imulb
mov
sbb
xor
adc
cmovo
imul
negl
mov
pop
push
subl
in
inc
and
pop
push
movsl
out
adc
add
or
outsb
hlt
inc
adc
ja
fwait
imul
les
insl
push
push
lea
clc
mov
inc
inc
lds
dec
sti
add
ja
into
nop
xchg
and
popa
pusha
filds
mov
cmp
repz
or
jg
xor
in
dec
pop
or
or
cmp
test
out
mov
jg
icebp
nop
xchg
add
push
or
xchg
outsl
cmp
shl
xchg
jmp
iret
pop
ja
or
orl
fadds
mov
clc
hlt
mov
gs
dec
inc
xchg
call
fcomps
stos
popf
int
xor
icebp
out
outsl
cmpsl
inc
and
hlt
cld
xchg
jo
push
sahf
xlat
dec
mov
das
repnz
test
add
xor
add
lds
and
push
ljmp
mov
clc
pushf
xchg
and
fcomip
mov
in
xor
xor
xor
mov
and
std
stc
or
out
test
pushf
inc
lret
fdivrs
test
mov
das
lock
xchg
stos
ret
daa
mov
cmp
xchg
insb
adc
and
addl
adc
pop
inc
pop
das
jns
rolb
dec
cmp
push
mov
int
out
push
fsts
cld
push
pushf
xchg
lock
push
mov
and
repz
cmp
mov
divl
inc
mov
lods
dec
mov
pop
aas
stc
scas
imul
mov
gs
insb
mov
pushf
cmp
bound
popf
and
fwait
xchg
adc
aam
push
arpl
sarl
fidivrs
mov
cmpsb
fldz
test
into
jp
imul
push
sub
mov
ljmp
add
pushf
and
xchg
call
mov
int
xchg
int3
jo
jae
aaa
aad
adc
xchg
popa
adc
cli
jno
lods
dec
fistps
repnz
and
or
pushf
fldl
rorb
xchg
jp
adcb
ja
pop
shrl
cmp
dec
mov
fstpt
fs
roll
xchg
rol
enter
cmp
sti
aam
push
ljmp
pop
movsl
cmpsb
push
inc
repz
loope
xor
inc
lock
je
pushf
shrl
xchg
arpl
imull
dec
enter
inc
int3
push
gs
outsb
arpl
mov
test
ss
xorl
movsl
loop
mov
lea
stos
lret
fs
mov
iret
nop
xchg
scas
push
cmpxchg
push
div
loop
jp,pt
xor
sbb
add
adc
xchg
gs
xchg
mov
seta
add
add
pop
cwtl
stc
push
sbb
pusha
mov
xchg
imulb
and
fmull
loopne
and
vphadddq
mov
sbb
enter
fdivrs
mov
dec
cmp
cltd
outsl
cmp
cmp
pop
adc
fwait
stos
stos
adc
insl
mov
cmp
je
xchg
lds
vdivsd
inc
dec
sbb
and
cs
lcall
dec
ljmp
sahf
cmpsb
push
inc
jo
mov
push
ds
bnd
xchg
dec
rolb
jno
cs
mov
out
rol
push
jnp
pop
sbb
mov
pop
jg
dec
inc
mov
dec
push
popa
aad
loop
add
pop
push
sub
cmp
or
cmp
cwtl
cmc
and
inc
inc
es
jmp
jne
sbb
gs
inc
dec
adc
js
cmp
add
or
sub
or
leave
enter
pop
shl
xchg
psubb
mov
call
insb
and
xor
cli
in
pushf
in
aam
pop
mov
int3
xchg
enter
jo
jno
or
push
jae
imul
push
pop
pop
inc
dec
cwtl
xor
sub
cmpsl
cmp
and
in
jae
push
enter
movsl
push
jle
cmp
cs
repz
rorl
xchg
sbb
mov
test
jge
xchg
fwait
inc
sbbl
aam
xchg
pop
fildl
cmp
in
das
out
lahf
xor
xor
add
add
pop
mov
dec
sub
mov
lods
mov
cmc
outsl
pop
out
mov
xchg
int
mov
subb
jne
movsb
insl
iret
addr16
pop
jp
daa
mov
fisttpl
mov
test
or
sahf
mov
xor
adc
cmpsl
cltd
xchg
adc
sub
cmp
js
xchg
add
out
dec
stos
jno
jae
pop
das
mov
sbb
push
jle
mov
lret
idivl
jge
sub
and
call
lock
or
xor
or
pusha
or
jge
mov
push
adc
jae
dec
push
cmpsb
cmp
icebp
sbbl
push
aas
mov
addr16
add
xchg
mov
inc
jecxz
mov
aam
sarb
push
mov
mov
cmpsb
sahf
dec
or
push
out
loop
mov
clc
xchg
je
jge
add
sbb
subl
push
ljmp
mov
and
mov
mov
movsb
arpl
in
xor
pop
icebp
cs
repz
sbb
cld
add
insb
out
or
in
adc
mov
mov
fiadds
jg
pop
sarl
push
xorl
lea
sahf
push
push
hlt
lds
fwait
inc
xor
or
fcomip
clc
sbb
mov
ljmp
bound
jg
dec
stos
mov
adc
mov
aad
jge
or
out
mov
xchg
imul
add
pop
dec
mov
pusha
xchg
cmp
imul
push
divl
repnz
pop
and
xchg
aaa
xchg
push
shl
dec
cwtl
jge
cmp
shl
or
dec
add
inc
pop
fwait
mov
in
and
sahf
cmp
pop
mov
inc
flds
xchg
decl
mov
and
outsl
fsubrs
push
js
push
dec
dec
add
cmp
push
push
pop
imul
push
paddw
cld
push
aam
pop
out
cmp
xor
fstl
push
dec
cmpsb
cmp
loopne
dec
pop
sbb
ljmp
mov
aas
mov
in
mov
mov
pop
mov
and
push
pop
or
mov
rorb
rolb
out
dec
repz
icebp
or
jb
cli
jo
xchg
call
mov
loop
sbb
test
mov
add
js
inc
adc
cmpsl
aam
xor
fs
add
idivl
lea
inc
sbb
addr16
mov
jnp
sbb
xor
aam
pop
leave
loopne
adc
push
push
fcoms
clc
mov
jne
push
fisubrs
and
push
adc
stos
add
insb
fnstenv
fidivrs
jle
test
out
out
loope
lock
fwait
sub
cmp
cld
sbb
xchg
ret
xchg
out
lock
dec
push
pop
lods
add
es
xchg
in
mov
adc
int
movsb
sti
ljmp
sbb
addb
cld
push
and
std
xchg
sbb
aad
adc
repnz
enter
inc
das
push
jns
add
outsl
cmp
cmp
push
inc
xchg
outsl
sbb
push
xor
rorb
xchg
push
cmovb
mov
inc
jb
add
or
daa
daa
ret
ja
into
mov
aaa
mov
add
movsl
out
and
lea
push
in
sub
movsl
inc
je
loope
dec
clc
cmc
sub
cwtl
addr16
testl
pop
push
push
pop
mov
jge
push
pop
rcrb
fistpll
shl
aas
pop
push
mov
add
lret
aaa
sbb
scas
inc
sub
and
inc
dec
jmp
jae
push
int3
and
fidivrl
stos
xchg
les
ret
les
push
pop
ficompl
out
mov
data16
mov
sbb
mov
inc
mov
inc
sbb
xchg
push
xor
and
lahf
pop
dec
jno
iret
dec
add
cmc
rclb
popa
cwtl
xchg
jns
mov
ljmp
lret
sbb
cmp
sub
sbb
popl
cmpsl
sbb
mov
sub
sbb
mov
mov
lock
sub
repnz
sahf
adc
xorl
add
sbb
leave
sarb
scas
sbb
adc
loope
or
lcall
sub
mov
mov
lcall
inc
xorb
sbb
repnz
cmpsl
pop
pop
rorb
pop
push
movl
fwait
mov
les
stos
or
and
cmp
or
and
sbb
iret
es
cmpsl
cmp
jecxz
adc
dec
or
outsb
stos
push
sub
xchg
data16
pop
dec
shrb
jle
and
push
dec
add
orb
popf
mov
mov
dec
mov
sbb
fdivr
lret
sub
jge
mull
mov
inc
addb
loopne
sub
or
loop
sub
shl
repnz
scas
les
xor
out
cmpsl
mov
adc
rorb
lea
sub
ljmp
xorb
idivl
je
es
insl
leave
jo
mov
lea
popa
xor
push
das
pop
xor
push
pusha
iret
in
hlt
ds
adc
test
test
dec
mov
dec
cltd
dec
lds
fdivl
or
mov
pop
shrd
or
repnz
outsb
movnti
push
icebp
fs
jp
sahf
mov
jnp
jmp
pop
sbb
and
popa
or
add
mov
pop
add
fst
add
xchg
in
out
stc
lret
xor
mov
insl
lods
les
mov
fwait
sbb
mov
dec
or
mov
dec
or
shrl
loop
hlt
mov
sub
icebp
enter
dec
jecxz
push
std
mov
cltd
test
mov
aas
scas
test
inc
pop
hlt
jmp
adc
jne
or
cmp
add
adc
pushf
xor
mov
mov
jo
push
dec
pop
xchg
mov
das
push
inc
mov
xchg
fisttps
cli
xor
xchg
inc
push
out
push
dec
nop
push
inc
push
mov
and
stc
xchg
pop
xor
sbb
jmp
adc
std
aad
int3
ja
lock
ja
aas
jle
mov
arpl
addr16
fisttpll
jae
jo
xor
pop
dec
out
enter
scas
js
movsl
pop
into
sarb
jge
es
jg
inc
and
arpl
jecxz
cltd
xchg
xchg
loopne
icebp
mov
lds
sub
dec
mov
mov
ljmp
cltd
aam
jb
ljmp
add
mov
ds
scas
xchg
or
sti
mov
add
jg
jne
mov
jmp
mov
mov
pop
insb
push
xor
cmpsl
bound
jle
xchg
add
mov
push
push
ficompl
movsb
arpl
sbb
xlat
dec
sub
or
jp
xor
movsb
and
push
pusha
xchg
inc
loop
loop
insl
fiaddl
cmp
sbb
xchg
pushf
jmp
xchg
mov
ljmp
or
incl
xor
and
mov
cmp
inc
insb
dec
mov
pop
cmc
divl
add
popf
mov
pop
mov
int
push
fcomps
dec
push
pushl
jae
push
mov
add
mov
add
and
mov
js
xor
stc
add
jb
jo
xchg
andb
xchg
or
sbb
mov
lods
mov
cmp
pop
in
pop
and
lods
push
push
dec
test
xchg
mov
pushf
data16
loope
lods
addb
ret
add
mov
cs
andl
adc
jae
or
or
arpl
outsl
or
divb
xchg
cmp
cmpsl
scas
test
adc
or
dec
rcl
jle
sti
xchg
stos
daa
dec
and
ds
push
xor
push
pop
xor
lods
ja
dec
and
enter
lcall
dec
add
pusha
xchg
insl
pop
xchg
xor
xchg
test
xor
test
ja
mov
fsubrl
imul
mov
loopne
rolb
mov
and
and
fnop
pop
adc
lds
xor
in
pop
fistps
stos
aas
pop
fisubl
into
fisttpll
lcall
ds
mov
mov
lods
mov
xor
or
ficoml
insl
movl
add
mov
and
das
xor
dec
inc
outsb
xorl
push
inc
mov
xchg
cmp
dec
fstpt
inc
fisttpl
test
data16
push
jge
dec
out
sar
sarb
push
lret
xchg
mov
cmpsb
jp
fcoml
loope
fsubs
add
cmp
push
shrb
gs
popf
inc
insb
dec
sub
mov
sub
scas
lock
and
jnp
out
xchg
js
inc
cmpsb
adc
xor
test
sbb
scas
push
pop
or
fisttps
pop
pop
imul
jno
icebp
int
sub
jb
in
inc
nop
int3
movsl
and
sub
es
les
jle
mov
outsb
push
imul
cmpsb
aas
cmc
inc
rcrl
mov
cld
push
dec
arpl
in
dec
pop
insb
mov
adc
or
pop
xchg
mov
xor
into
cltd
out
pop
jmp
sub
fsts
dec
jl
cmc
push
push
pop
sti
daa
mov
movsl
pop
xchg
xor
sub
jle
adc
insl
loope
daa
das
mov
or
push
lock
xor
pop
and
push
cmp
loop
rorb
sub
inc
iret
push
push
outsl
mov
inc
leave
inc
mov
adc
in
or
sub
shrl
fcompl
dec
das
stc
lods
add
lret
mov
jge
arpl
adc
mov
lret
sub
sti
xchg
jbe
mov
mov
popa
ljmp
orl
out
fiadds
test
mov
xchg
lods
jecxz
imul
sbb
pop
mov
je
movsl
mov
or
outsb
fidivrl
xchg
mov
test
or
and
cmpsl
int
dec
mov
jl
ret
mov
ret
xor
push
imul
inc
inc
xchg
mov
dec
sarb
cmc
pop
aaa
pop
add
cmpsl
xor
dec
xor
jne,pt
cwtl
push
xor
mov
div
cltd
mov
enter
sub
in
cs
loop
idivl
add
loope
and
dec
in
shlb
insl
insl
inc
adc
jp
imul
xor
add
call
sbb
xchg
addl
sbb
rcll
cmc
cmc
adc
xchg
test
cmp
lret
xchg
std
xchg
test
inc
icebp
and
push
pop
jns
lret
xor
daa
fiaddl
shlb
sarl
sbbb
js
and
scas
in
mov
addr16
jecxz
addr16
aaa
jo
arpl
faddl
adc
add
popf
adc
shll
cld
hlt
bound
jmp
cmp
cmp
or
sub
loop
jae
adc
pushf
cmp
add
clc
cmp
fstpl
add
sbb
loop
lds
outsl
sbb
xchg
bound
iret
popf
mov
call
sbb
aaa
cmp
mov
js
sub
jbe
dec
ja
jo
orl
inc
cwtl
mov
push
js
push
popa
psubsw
xor
ds
ret
mov
add
and
fdiv
mov
mov
and
push
add
std
je
jns
shlb
cmpsb
divl
add
data16
jmp
loop
xchg
aaa
rol
add
push
fistps
icebp
bound
ljmp
xchg
stc
push
jno
or
pop
fisttps
jecxz
adc
push
int3
je
lcall
inc
pop
mov
loope
iret
add
cmp
movb
adc
cmp
mov
andl
cmp
pushf
adc
pop
pop
xlat
pop
fmul
push
push
stos
icebp
in
and
dec
hlt
call
in
lds
sbb
inc
lret
out
shrb
leave
sub
aad
cmc
out
testb
sbb
aam
adc
pop
xchg
aas
mov
cmp
test
data16
testb
cld
popf
adc
addr16
and
popl
lods
cmp
xor
pop
call
sub
dec
xor
dec
jo
jo
wrmsr
xor
repnz
clc
fwait
mov
dec
cs
adc
or
jae
xchg
addr16
shll
jbe
push
mov
push
sbb
repnz
mov
xchg
fisubs
pop
cwtl
sub
scas
mov
xchg
push
lahf
jae
sbb
mov
jg
daa
lret
shrb
rcrl
xlat
jne
ret
inc
and
shr
test
fcoml
or
in
subb
fdivp
xchg
mull
mov
in
ss
ja
roll
cmp
in
mov
cmp
sbb
jl
xchg
push
scas
pop
in
xchg
andb
hlt
xchg
enter
mov
aaa
int3
rorb
mov
orl
dec
adc
ret
dec
jmp
stc
pop
pcmpeqb
push
and
lahf
dec
das
or
sbb
test
popa
fwait
test
movsl
outsl
repnz
fwait
nop
out
ret
push
fnstsw
in
push
xor
mov
jmp
pop
mov
and
movsl
dec
addb
inc
add
xchg
js
mov
xchg
inc
sub
sbb
cmp
inc
push
pop
fistl
push
and
test
jae
lea
xchg
mov
sub
rcll
or
fcmovb
push
arpl
ljmp
sbb
jle
rcr
and
fwait
push
ret
dec
aad
insb
icebp
xchg
dec
pop
scas
mov
push
mov
nop
dec
sbb
enter
jl
jno
jae
lds
mov
and
test
jno
sbb
call
dec
jo
dec
or
cmp
std
sub
or
loop
repz
ret
lds
lahf
add
out
lea
popa
pop
les
shll
insb
test
shrl
dec
inc
dec
push
std
xchg
or
lock
ljmp
mov
cmc
xchg
insl
pushf
mov
jae
sbb
sub
mov
dec
lret
cld
mov
jne
pop
adc
push
mov
xchg
push
xchg
or
int3
lods
mov
popa
adc
loopne
mov
or
and
gs
push
in
mov
xlat
call
sar
cmp
sbb
cmp
xchg
jle
das
mov
nop
out
movsb
mov
push
fistpll
clc
jg
in
inc
in
mov
push
xchg
dec
shlb
mov
mov
sbb
in
ror
loopne
and
or
icebp
scas
mov
mov
cld
xor
dec
pop
sti
popa
iret
aad
test
pop
dec
mov
out
loopne
adc
pop
nop
pop
adc
rolb
lcall
mov
orl
inc
hlt
and
nop
mov
dec
scas
inc
daa
les
fisttpll
add
pop
push
hlt
push
or
dec
xchg
es
jne
or
cmp
add
jmp
cli
daa
clc
xor
rorl
mov
ljmp
std
push
out
fcomp
cli
jecxz
inc
xchg
adc
cmpsl
lret
js
repnz
movsb
and
pop
std
dec
mov
adc
xchg
xchg
or
mov
aaa
mov
aad
cmp
adc
cs
jbe
icebp
xchg
jmp
imul
add
jno
or
sbb
xlat
out
shr
popf
fs
jb
inc
inc
dec
scas
sarl
cli
repnz
or
or
mov
push
shll
sub
mov
sub
xchg
xchg
dec
std
iret
repnz
jne
xchg
jne
sbb
outsl
fldl2e
std
or
fstpl
pop
std
out
in
ret
lret
outsb
fmul
lods
mov
mov
lret
xchg
outsb
sbb
imul
scas
ljmp
and
push
stos
jae
dec
xchg
testl
adc
sub
xor
mov
pop
imul
pop
je
xor
xor
jp
in
clc
testb
mov
insb
mov
xor
dec
jge
inc
sbb
call
fildll
jno
sbb
xor
movsb
add
enter
gs
shrl
mov
loopne
jmp
mov
mov
push
dec
push
sub
out
arpl
scas
imul
ss
mov
pop
sahf
pandn
lahf
cltd
hlt
inc
jp
pushf
xor
loop
hlt
xor
ret
leave
pop
in
cmpb
ret
add
popa
mov
sub
out
into
inc
dec
cmpsl
pop
test
stos
sub
out
aad
jno
or
mov
add
mov
dec
iret
cmp
inc
rolb
pop
sbb
std
mov
pusha
sbb
adc
mov
nop
push
pop
cmp
pusha
clc
pusha
mov
jge
push
cltd
push
mov
into
pop
push
xchg
sub
dec
into
cs
lock
popf
stos
jg
sub
div
insl
sub
mov
lcall
cmp
xchg
daa
pop
icebp
add
and
and
pop
daa
inc
sbb
ss
pop
lds
lds
fists
mov
mov
inc
push
das
inc
push
cmp
push
ret
and
es
stos
flds
cmpsb
xlat
mov
push
pop
ds
addr16
daa
cltd
add
test
and
inc
aam
xor
dec
sbb
push
mov
sub
in
sub
mov
or
add
xchg
nop
scas
sbb
shll
das
aas
xor
or
push
popf
adcb
das
loope
mov
xor
mov
xchg
dec
jp
jbe
add
sbb
inc
mov
sti
pop
shlb
and
mov
pop
ja
orl
inc
fs
stc
bound
mov
ffreep
mov
push
sarb
cmc
mov
and
cmp
in
push
int
dec
fnstenv
xchg
pop
dec
imul
mov
mov
movsl
mov
xor
push
mov
insl
adc
imul
lods
pop
push
jg
dec
cmpsl
or
popl
xchg
cli
inc
addb
mov
pop
call
dec
and
int
mov
xor
push
sbb
iret
cltd
movsl
std
sub
add
jns
out
push
cmpsl
xchg
and
fildll
cmpsl
repnz
imul
mov
sti
mov
js
cmpsl
fwait
sbb
outsl
loop
sub
push
or
sbb
inc
and
adc
je
jle
rcll
pop
pop
out
mov
and
cmp
xchg
sub
lret
lret
push
adc
mov
dec
push
jecxz
adc
mov
mov
sbb
movsl
add
mov
pop
addb
jg
inc
sbb
push
sti
sub
lods
adc
inc
int3
mov
rcrl
jl
js
adc
adc
or
xchg
mov
cs
cmp
es
dec
cwtl
and
jge
adc
sbb
insb
dec
jbe
sti
ret
ljmp
dec
popa
inc
aam
sti
xchg
dec
sub
icebp
lcall
in
in
out
or
add
jl
enter
mov
sbb
mov
or
ljmp
jmp
push
lods
jg
loop
sub
movsl
cmp
scas
adc
cmc
mov
push
in
stc
bound
cwtl
jbe
cmpsb
dec
test
lods
outsb
out
mov
fcompl
das
movsb
pop
jg
cmp
lret
imul
cmp
xor
daa
dec
shl
repz
xor
test
out
sbbl
aad
mov
das
ret
push
pop
imul
repnz
int3
cs
and
loope
addl
call
sub
repnz
in
pop
loope
jmp
inc
adcl
or
out
adc
jb
lret
cmp
pop
imulb
inc
pusha
sarl
xchg
cmpsl
or
pop
mov
sub
push
lock
outsl
xor
mov
dec
addr16
inc
cmp
xchg
aam
adc
pushl
and
pop
std
push
jmp
loope
sbb
xchg
sti
pop
lods
lods
xchg
aam
cltd
pop
jne
sbb
push
outsl
idivb
jne
adc
xlat
loop
push
add
mov
fs
loopne
push
cmp
cli
lahf
jg
jnp
lahf
push
popa
lea
fs
fiadds
bound
pop
xor
lahf
jo
bnd
ret
sub
imul
js
push
jmp
mov
rdmsr
adcl
inc
push
jg
xchg
lods
call
addb
incl
aas
mov
xchg
or
push
enter
mov
inc
in
icebp
xchg
mov
ds
outsb
arpl
mov
push
arpl
cmp
xchg
jbe
fmull
ret
ljmp
and
jo
xchg
setge
mov
add
xchg
pop
fs
arpl
jae
ljmp
pop
clc
xchg
pop
lahf
jecxz
sbb
mov
das
int
dec
out
adc
mov
ss
mov
jo
ds
ss
pop
xor
xor
loope
push
test
mov
into
push
inc
push
jle
pop
cmp
dec
jl
inc
dec
lahf
jb
mov
inc
cmp
test
adc
adc
data16
mov
test
add
aas
ret
cmp
add
or
sub
loop
mull
jge
add
jge
mov
out
sbb
sub
or
nop
dec
scas
not
sbb
pop
pop
in
in
lds
mov
call
mov
inc
add
inc
mov
mov
in
mov
cwtl
mov
rep
out
imul
aas
cmp
dec
or
fidivs
inc
add
dec
mov
aaa
out
jbe
inc
cltd
adc
call
clc
lds
xor
cmp
stos
das
add
add
or
sub
popa
sub
mov
and
adc
adc
sete
xchg
xchg
adcb
cmc
imulb
loopne
adc
sahf
ja
idivb
jnp
mov
bound
imul
imul
push
enter
add
inc
push
lds
popf
rorb
and
push
inc
inc
insl
mov
push
lea
aaa
push
bound
cltd
int3
data16
mov
xor
adc
adc
cs
push
mov
ljmp
mov
jle
sahf
dec
xor
ror
stc
in
xor
inc
mov
add
stos
xor
dec
cmp
push
jo
mov
out
repnz
push
mov
or
sub
out
xchg
xor
mov
mov
cmpsl
ffreep
add
les
scas
mulb
xchg
imul
sub
adc
push
ja
cli
dec
pop
lcall
lahf
cmpsb
inc
lods
adc
lds
je
sub
sbb
nop
cs
jo
inc
cmpb
xor
hlt
push
vrsqrtps
jno
sbb
xorl
int
mov
xchg
out
mov
sub
subl
fcoms
pop
fwait
out
psraw
jecxz
mov
pop
inc
adc
push
pop
push
pop
lods
mov
aaa
pusha
repnz
adc
xor
insl
push
insb
xor
std
sbb
outsb
lea
cli
push
xchg
fs
mov
sbb
cmp
sar
lods
out
or
mov
jmp
dec
cmpl
mov
or
repnz
in
leave
dec
cmpsb
xchg
adcb
movb
pop
cwtl
sub
adc
ret
inc
out
fisubrl
add
loope
rolb
out
mov
fldl
nop
and
adc
shl
loopne
popf
dec
mov
dec
outsl
mov
out
pop
inc
neg
pop
pop
inc
pop
scas
cwtl
inc
and
adc
clc
or
add
mov
xchg
mov
xor
aaa
pop
push
cmc
repnz
movsl
ret
jne
shll
cli
mov
popa
sbb
inc
mov
sahf
cmpsl
addr16
enter
xchg
cmpsb
loopne
sbb
cmpl
sbb
dec
leavew
and
mov
rclb
mov
push
aaa
cld
cmc
mov
cmp
decl
popf
decb
push
cmp
inc
dec
call
test
mov
and
ret
inc
scas
sahf
mov
ret
mov
std
repz
repz
popf
inc
jbe
cmp
loop
enter
jbe
mov
nop
leave
adc
push
pop
push
ficomps
adc
fcmovne
push
jl
aas
dec
fcmovnb
sub
pop
in
xchg
ljmp
jnp
lret
jb
mov
mov
stc
int3
adc
sbb
and
mov
pop
call
ja
icebp
test
enter
mov
jno
movsl
lods
ljmp
int3
ret
mov
push
sub
daa
movsl
stos
aad
rolb
inc
inc
pop
imul
jbe
sub
sub
mov
stos
aaa
dec
adc
or
sbb
or
stos
cmp
les
ret
push
dec
scas
std
fsubs
ret
gs
jbe
cli
call
filds
sarl
js
scas
push
adc
sbb
cmp
clc
jp
in
call
cmp
outsb
jbe
mov
lods
imul
aas
cmpsb
mov
push
push
aas
outsl
adc
xchg
mov
jae
xchg
rcl
dec
cmp
jp
insl
jb
xor
and
dec
sub
sub
and
and
jo
jae
outsl
xor
jge
push
popf
cmp
inc
call
ror
sub
dec
and
shll
sarl
popa
dec
nop
jge
lds
push
aaa
jmp
xor
jg
dec
lods
lea
mov
xor
aam
lcall
icebp
xchg
add
mov
fstpl
daa
mov
push
inc
xor
mov
test
test
or
dec
bound
popa
call
fisttps
sub
mov
xchg
in
and
or
arpl
leave
es
ret
test
pop
push
sahf
sub
fwait
jl
sbb
fmull
fistl
push
repz
pop
testl
daa
cmp
xchg
sbb
inc
jae
loopne
cmpsl
push
mov
xor
cmp
cmp
shlb
loope
repz
popa
incl
lret
add
jo
cmp
ret
lret
add
add
jno
shll
pop
sbb
in
loope
xchg
dec
fs
stc
xchg
cld
movsl
push
xorb
cmpsb
imul
xchg
out
push
cmpsl
arpl
fnsave
bound
mov
pop
push
popf
aad
enter
ficoms
inc
iret
iret
adc
sti
or
aam
stos
addr16
mov
push
fcmovb
add
in
int
or
ds
dec
insl
sub
adc
xlat
ss
inc
push
cmp
xchg
fidivs
fcmovnbe
cmp
mov
sub
repz
push
in
or
je
scas
jge
mov
mov
sub
inc
je
and
xchg
scas
jbe
push
adc
push
inc
adc
and
and
out
xchg
inc
faddl
cli
js
decb
mov
mov
repnz
mov
call
mov
or
pushf
mov
lcall
push
cmp
push
loopne
or
inc
push
iret
mov
mov
jg
out
outsb
mulb
cs
cmpsb
push
ds
xchg
lret
xchg
pop
clc
cmpsb
sub
imul
mov
mov
fildll
push
cli
sub
mov
jg
subl
sbb
or
bound
xor
cli
pop
iret
int3
add
pushf
mov
push
ss
push
mov
jmp
jp
ja
add
add
stc
iret
push
jecxz
pop
movsl
sbb
popl
test
mov
mov
xor
jo
movsb
mov
push
jge,pn
push
lahf
mov
and
xchg
xchg
jo
lret
xchg
xor
addb
adc
push
pop
push
xor
sti
mov
mov
push
imulb
pop
popa
or
push
dec
mov
out
dec
or
add
fadd
jbe
test
rcl
rcrb
fmuls
mov
das
std
das
adc
leave
clc
pop
sub
jne
stos
inc
mov
add
pop
outsb
or
push
dec
inc
push
xchg
jae
pop
xchg
jns
mov
shlb
jne
jnp
xchg
mov
sbb
adc
pop
or
repz
scas
xchg
cltd
scas
loope
ds
popf
sub
mov
into
insb
pop
insb
movsl
push
insl
sub
cli
sbb
adc
sub
out
clc
scas
pop
ljmp
add
into
mov
incb
xchg
or
into
mov
inc
std
mov
std
or
mov
mov
pusha
sbb
out
dec
fwait
adc
dec
mov
out
lds
fstl
mov
inc
inc
push
mov
xchg
std
rorb
test
in
jge
xchg
mov
xchg
inc
int
lcall
lret
fwait
push
punpcklbw
dec
push
cmp
adc
sbb
mov
sbb
lods
mov
mov
xchg
adc
mov
mov
xor
pushl
jmp
negl
add
popa
js
jo
das
out
xchg
jp
std
add
jb
stc
outsb
lds
pusha
cmpsb
dec
push
out
and
dec
pop
or
mov
fmul
les
mov
scas
mov
mov
fidivrs
daa
jl
jno
or
lds
imul
inc
addr16
push
das
push
fadds
add
dec
pop
push
bound
stc
imul
pop
mov
fsubs
ds
pop
out
jno
fwait
gs
rolb
add
push
adc
ficoml
test
aad
ds
popa
xor
and
into
call
adc
push
imul
mov
xor
or
jge
push
sbb
dec
cmp
int3
inc
and
lods
mov
sub
lods
cmp
lea
mov
pop
cmp
loopne
add
repnz
pop
fmuls
rcrl
dec
mov
xchg
lea
jo
pop
cmp
push
sbb
inc
int3
notb
add
test
ret
dec
pusha
mov
test
adc
lea
imul
push
pop
jl
pop
xor
add
mov
out
push
jle
xchg
fidivl
xor
sub
stos
lods
iret
lcall
in
sub
mov
out
scas
xchg
fwait
pop
mov
sbb
mov
das
dec
insb
call
push
dec
sbb
out
mov
je
fimull
dec
cltd
testb
cmp
into
dec
push
xor
pop
lds
add
mov
stos
out
adc
or
push
fwait
shlb
sahf
jbe
addr16
and
inc
inc
or
shlb
stc
xchg
insl
sub
lods
into
push
mov
and
add
lahf
jns
cwtl
or
jnp
sbb
lahf
cwtl
mov
adc
test
push
or
dec
cmc
shlb
jecxz
pop
loopne
leave
ret
sbb
dec
and
aas
cmp
fnstsw
mov
or
lcall
mov
outsb
in
je
in
xchg
xchg
lret
or
mov
xchg
cmp
clc
add
dec
sbb
xchg
push
sub
aam
jb
push
popa
push
pop
mov
imul
in
pushf
xchg
or
mov
push
jmp
daa
iret
xor
jmp
and
or
fndisi(8087
sub
hlt
scas
jae
das
mov
push
sti
mov
sahf
xor
int
mov
mov
mov
in
cmp
ds
movsl
and
test
push
mov
aas
subb
push
mov
aaa
mov
adc
cwtl
xchg
loopne
xchg
jmp
mov
mov
scas
dec
test
hlt
cli
and
loop
pop
inc
push
jle
dec
xchg
or
nop
js
inc
mov
dec
jmp
add
aad
sub
push
mov
aad
or
adc
cmp
jg
or
sub
mov
fcoms
stc
pop
movsl
faddl
xor
jb
mov
mov
shll
jecxz
inc
mov
in
push
adc
shr
cmp
icebp
push
mull
and
pop
sbb
and
std
sub
frstor
xlat
mov
cmp
add
lock
and
inc
xor
mov
push
fbld
call
test
ss
ud0
adc
sahf
push
add
mov
mov
sbb
mov
sarl
or
dec
pop
adc
and
ss
jns
dec
sbb
test
and
aam
pop
and
in
clc
testb
mov
pop
mov
adc
addb
jmp
shll
icebp
xchg
movsl
jecxz
sub
xchg
pusha
jg
ret
in
leave
cmp
mov
add
xchg
js
test
in
fwait
gs
mov
enter
pop
in
iret
popf
or
add
and
and
push
gs
sub
lods
fldenv
aam
sub
imul
ret
rep
xchg
aas
pop
pushf
into
push
sbb
test
sub
aam
test
inc
sub
pop
shrb
shrb
shl
sbb
imul
mov
arpl
cli
sbbl
dec
pop
sbb
repnz
jl
jns
sub
rol
mov
scas
pop
and
fisubrs
xor
cmp
inc
aaa
sbb
dec
out
jnp
in
mov
mov
insl
int
mov
in
and
mov
arpl
push
inc
cmp
jbe
pop
and
shr
fmul
aam
add
mov
cmp
mov
inc
sub
mov
xor
gs
add
into
outsb
sub
cs
aad
jno
sbb
lock
mov
std
jp
jno
cltd
dec
cmp
test
jp
push
cltd
mov
push
iret
mov
push
inc
adc
enter
out
pop
call
mov
or
and
dec
imul
insb
ja
mov
fsub
sub
loopne
xchg
fstpl
ss
je
adc
jle
inc
push
jl
aam
cwtl
iret
adc
pop
inc
mov
adc
sub
cmp
popa
sbb
popa
cltd
pop
adc
or
test
jne
cmpsb
mov
cmpsb
or
rorl
push
mov
icebp
cmpsl
roll
and
aam
shl
push
scas
adc
in
inc
cmp
cmp
jno
pop
mov
in
or
push
stos
and
mov
ljmp
stos
out
inc
xor
mov
ret
jmp
sub
mov
lods
jp
das
out
lret
pop
cltd
bound
fs
aas
push
icebp
lea
cmp
sbb
mov
popa
and
sbb
lock
pop
outsb
movntq
out
lock
repz
mov
xchg
adc
jl
cs
push
pusha
jne
adc
dec
loopne
lcall
mov
sub
ffree
std
lds
add
rorb
push
push
add
stos
lods
imul
push
mov
popa
mov
cmp
mov
out
jp
jge
das
push
cwtl
cs
std
push
scas
sbb
mov
sbb
les
leave
adc
mov
mov
inc
sub
negl
sbb
in
lahf
push
xchg
or
stc
int
lds
insl
mov
fwait
sub
or
ss
lods
mov
adc
push
flds
or
mov
aam
sbb
mov
fidivrs
andl
xchg
inc
sbb
std
sbb
dec
xor
shrl
repz
jnp
mov
ss
imul
sbb
div
cs
ss
cmp
lcall
test
test
xor
loop
int
mov
in
cmp
hlt
sbb
cmc
ficoms
jae
pop
aaa
stc
mov
pop
or
insb
test
rcrl
mov
jo
xchg
dec
mov
cld
cli
pop
cmc
sub
adc
in
les
or
std
std
cmp
cmp
inc
enter
je
outsb
dec
in
add
jp
repz
or
inc
nop
xor
or
pop
and
test
jae
daa
sub
sub
lret
xchg
mov
icebp
sar
xor
cmpsb
jbe
adc
xchg
xchg
ja
xchg
test
gs
sub
push
xchg
in
ss
and
mov
sbb
push
push
das
push
cli
sarb
jp
or
hlt
dec
out
incl
xor
jle
or
in
loope
sub
xchg
cmp
jg
mov
jno
pmulhuw
test
aad
ret
mov
movl
and
mov
push
std
mov
dec
jno
and
xchg
cmp
test
or
into
mov
dec
push
mov
and
data16
insl
lea
mov
test
jecxz,pt
mov
popa
and
xor
and
mul
push
pop
cmp
jmp
dec
cli
stc
push
mov
sub
dec
bnd
jge
mov
iret
adc
gs
into
xchg
mov
mov
xor
jae
fadds
test
mov
ds
jne
ret
das
sbb
sbb
cmp
adc
arpl
incb
and
sub
pop
push
rol
rcll
inc
push
addr16
popa
xor
fwait
dec
cwtl
lret
or
xchg
das
push
aas
imul
cmp
sbb
push
mov
std
clc
fwait
iret
out
scas
cmp
lcall
xchg
addr16
push
inc
shrb
mov
gs
push
lret
mov
fwait
lahf
or
dec
setae
into
aad
rcrl
mov
andl
mov
jns
pop
add
mov
popa
popa
jge
rorl
flds
scas
je
mov
adc
arpl
xor
mov
lock
je
xor
add
in
jge
les
mov
in
cmp
scas
imul
cmpsl
xor
in
stc
adc
mov
movsb
scas
fcompl
or
lret
lds
scas
lock
push
or
paddq
dec
mov
pop
repz
lods
fwait
push
sti
mov
test
stos
ss
int
icebp
pop
sub
inc
cli
lea
stos
lea
cmpsl
es
cmp
test
push
xchg
mov
inc
xchg
ja
call
dec
cmc
mov
pushf
bound
sbbl
cli
lods
je
adc
mov
icebp
push
cld
lret
cltd
jge
xchg
rorl
xchg
mov
dec
sbb
mov
insb
sub
pop
mov
jg
fwait
cmpsl
push
shl
aad
jl
rorb
pop
std
fwait
push
xor
ret
dec
add
or
das
test
rcr
lods
out
into
loopne
sarl
sahf
pop
test
fistpl
inc
xchg
aad
enter
mov
adc
cltd
sub
fsubs
hlt
cs
cltd
inc
popf
lea
cmpsb
pop
add
and
push
xchg
jb
idivl
cmp
loopne
add
jl
subb
jecxz
or
dec
daa
insb
pop
fcmovbe
notl
sbb
jns
cmp
inc
pop
cwtl
popf
adc
ja
dec
jmp
mov
or
mov
pop
mov
inc
aam
mov
push
jnp
mov
cmp
cli
and
and
add
test
stos
rorl
push
mov
dec
push
cwtl
icebp
mov
or
jecxz
and
and
in
out
inc
inc
lea
repz
jecxz
int3
mov
mov
stos
in
push
in
push
mov
clc
mov
test
sub
jge
movsb
or
dec
nop
stc
hlt
cmp
add
xor
mov
sbb
jo
sub
je
jg
cmpsl
stos
in
lods
dec
cs
and
jmp
push
getsec
lds
in
hlt
test
scas
adc
jae
inc
cmp
jle
aam
adc
std
scas
aas
js
add
push
insb
adc
mov
es
cmp
and
in
mov
fcmovu
dec
adc
mov
adc
dec
clc
jo
rcr
sbb
stos
jae
cld
or
insl
pop
adc
insb
and
jg
jg
push
jmp
repz
testl
adc
lods
push
jg
dec
or
pop
popa
nop
adc
out
jnp
inc
sbb
in
inc
lret
pop
repnz
addl
lret
hlt
int3
jbe
mov
add
shrb
push
inc
pop
hlt
push
add
ret
cmp
rcll
out
mov
mov
push
jl
xchg
mov
push
loopne
je
push
aad
or
dec
mov
repnz
in
cmpsl
aad
add
and
add
cwtl
jb
sti
lds
push
arpl
or
inc
inc
sub
icebp
rorl
cmp
ljmp
imull
pushf
mov
stos
in
mov
xor
insl
or
or
loopne
xor
add
pop
js
sarb
jb
stos
add
push
add
and
adc
push
je
fs
lods
push
nop
std
test
push
inc
enter
imul
lcall
sub
aad
loopne
push
ds
lahf
and
mov
adc
mov
inc
mov
cli
insb
stc
loop
int
aam
and
in
pop
mov
rorb
adc
mov
testl
lahf
lods
fnstenv
les
inc
cmpsl
aam
inc
and
mov
std
fildll
push
imul
loope
push
fmul
movsb
sub
call
push
jns
mov
orb
ficompl
add
subl
mov
out
jns
push
test
mov
dec
xor
stc
je
rcll
out
xchg
int3
push
and
scas
enter
scas
rorb
repz
jnp
mov
jo
fs
sub
outsl
jae
or
movsb
mov
fisubs
jne
dec
xchg
rclb
stc
jns
pop
add
pop
jmp
pop
es
movsb
daa
push
mull
pop
out
cld
inc
imul
add
movb
push
leave
nop
adc
xchg
jecxz
add
dec
pop
cwtl
stc
sub
je
cmp
fdiv
sub
mov
mov
inc
inc
or
fwait
cmpsl
cs
daa
lds
xchg
test
xchg
jmp
pop
xor
int3
jg
stos
sub
test
loopne
repnz
mov
sbb
and
imul
and
push
push
and
lea
rcrl
ds
push
adc
or
lds
xchg
nop
cwtl
hlt
lock
rcrl
popf
sub
mov
les
out
dec
add
sbbl
lret
fs
add
cltd
enter
push
das
push
jp
xor
test
pop
cmc
imul
inc
jo
test
in
cmpsl
sbb
lea
std
xlat
sub
xor
jns
aad
out
mov
inc
lea
xchg
or
sti
test
dec
sub
or
fidivs
xchg
and
push
mov
adc
addb
jb
ret
fcomps
bound
fs
mov
jo
das
pop
jp
mov
sbb
sahf
bound
xchg
shll
sbb
jle
mov
xchg
push
scas
roll
cmpb
gs
shrl
mov
lock
sbb
cmp
lahf
cmp
add
cmc
fwait
mov
test
xchg
jmp
vpand
daa
add
inc
cmp
imul
inc
mov
push
mov
mov
sbb
sbbb
jle
jl
fsub
xor
mov
test
into
sub
fwait
scas
push
mov
fildll
lret
in
xchg
mov
mov
or
outsl
ss
lods
pusha
add
sbb
jecxz
adc
call
test
gs
mov
and
imul
aad
mov
adc
sbb
mov
arpl
addl
imul
and
sub
in
and
pop
test
xlat
push
rorb
in
mov
and
adc
fidivs
jns
daa
shrb
xchg
lret
aas
cmpsl
and
adc
divl
mov
cmp
fstpl
dec
sub
and
mov
add
sbb
pop
mov
mov
fsubr
dec
stos
pushf
dec
into
notl
idivl
push
scas
mov
aaa
push
inc
adc
mov
inc
sub
xchg
sti
sub
push
in
fnsave
hlt
jbe
stos
xchg
push
cmp
jo
insb
into
adc
in
cmp
inc
push
jnp
out
lock
or
add
into
aad
adc
dec
add
fidivl
jg
fwait
imull
popf
mov
or
sub
mov
test
jmp
push
mov
pop
popf
std
push
scas
rolb
cld
lret
stos
ror
cmp
add
fwait
out
jbe
pop
xor
sub
lock
aad
pop
cmp
adc
pop
or
inc
push
incb
mov
adc
loope
adc
dec
lcall
add
jg
nop
mov
jecxz
addr16
mov
and
or
shl
jo
daa
add
pop
mov
mov
pushf
mov
enter
int3
dec
loop
lahf
cmp
ret
mov
fst
dec
mov
cmovp
adc
ja
into
inc
add
nop
insb
or
xor
push
or
cmp
sbb
sub
out
test
inc
out
jg
outsb
ja
adc
mov
nopl
xor
testl
mov
sub
mov
lods
addr16
jl
xchg
xchg
outsb
inc
sbbl
mul
push
scas
daa
movsl
jp
mov
clc
jmp
cmpsl
jg
test
push
jae
xchg
out
sub
mov
call
mov
pop
lock
jnp
pusha
lret
lods
mov
push
inc
mov
mov
sbb
pop
aas
cmp
and
xor
xorb
lret
pop
push
dec
in
test
sbb
les
fists
or
dec
popa
or
add
leave
insl
inc
push
mov
paddb
adcl
pop
push
inc
adc
fs
push
mov
scas
or
push
or
insb
dec
lret
shrb
cmpsb
incb
and
jl
mov
adc
scas
imull
and
push
cmp
fidivs
aam
fnstsw
insb
push
fsubs
cmp
mov
inc
xorb
insb
mov
xchg
jb
mov
jmp
dec
jp
pop
adc
push
jb
push
cmp
or
sbb
jmp
fld
xchg
mov
adc
mov
mov
inc
sahf
leave
insb
movsb
out
push
add
negb
xchg
mov
aaa
dec
cmc
mov
lods
ficomps
mov
cmpsb
add
jp
sub
cmp
and
subl
jge
dec
inc
test
pop
test
mov
es
or
ljmp
movsl
cmp
mov
int
scas
fnstcw
dec
ficoms
adc
pop
lods
mov
aas
adc
pop
sub
orb
cmp
aas
jmp
movd
jne
lret
mov
xchg
pop
cmpsb
xorb
or
lea
mov
pop
xor
push
in
in
dec
push
mov
jmp
jp
hlt
iret
out
mov
adc
push
jne
adcb
adc
adc
mov
fdivrl
and
daa
jo
dec
xor
in
cwtl
mov
loop
sti
repz
aaa
adc
hlt
insl
out
popa
mov
lods
cld
pop
pop
add
mov
push
cmp
sub
inc
xchg
mov
inc
cltd
push
mov
pop
cmpsb
fidivrs
add
jno
or
mov
in
sbb
lret
dec
shll
out
xchg
in
xor
cs
mov
mov
push
xchg
and
fcomi
dec
pushf
xor
mov
stc
inc
fdivs
xor
mov
outsb
mov
xor
sahf
jg
adc
in
dec
mov
lods
out
cli
imul
iret
fdivr
cmpsl
jle
dec
mov
xchg
jb
mov
pop
hlt
jo
sub
jo
mov
mov
rcl
inc
scas
push
mov
pushf
out
pop
into
push
pop
sbb
stc
xchg
sub
loopne
pop
and
and
addr16
insb
xor
mov
adc
xor
mov
insl
xchg
push
mov
mov
pop
stc
push
cmpsl
clc
lcall
jle
shll
js
mov
adc
dec
fstpl
mov
shlb
cltd
mov
rolb
xchg
mov
adc
addr16
test
xchg
push
fimuls
jge
je
inc
bnd
sbb
cld
inc
test
cltd
shr
or
lea
stos
in
pop
xlat
mov
ret
xchg
in
mov
int
cmp
scas
cwtl
andl
mov
sbb
push
fimuls
or
jae
pushf
sub
pop
movb
addl
add
mov
sbb
fsub
fadds
jmp
and
or
imul
add
out
push
daa
enter
mov
loope
js
subl
sbb
ficoml
ret
xchg
es
subb
ja
jb
cltd
mov
fstpt
or
mov
ficoms
xor
repnz
xchg
xchg
stos
int3
pop
inc
inc
insb
leave
dec
bound
ret
pop
xchg
sub
insl
mov
imul
and
jge
inc
mov
dec
mov
pop
mov
inc
mov
push
add
jl
data16
jl
cld
jae
addr16
adc
call
in
popf
dec
adc
lods
and
loopne
ds
or
rorb
mov
outsb
adc
vcmpps
mov
add
sub
and
in
mov
xchg
xchg
fldl
pop
xlat
enter
mov
fimuls
in
dec
jae
pop
push
faddp
jne
sbb
cmc
leave
ret
and
sbb
scas
xor
xchg
inc
std
ljmp
pushf
adc
xlat
jns
outsb
inc
add
stos
cli
sub
xchg
xchg
nop
ja
mov
pusha
push
lock
and
sub
sbb
xchg
ret
les
mov
repz
in
lret
xchg
dec
mov
je
sub
push
add
sti
mov
out
insl
test
mov
ss
xchg
ds
repnz
shll
insb
fimuls
movsb
and
mov
jns
cmp
push
aad
arpl
clc
push
push
pop
jb
adc
pop
or
cld
jl
mov
push
adc
xchg
jmp
push
mov
dec
cmp
std
stos
sahf
adc
push
cltd
or
xlat
scas
mov
inc
and
jns
arpl
inc
stc
push
ret
ss
and
ficoml
or
rclb
and
lock
dec
and
aad
ss
lret
jmp
or
imul
push
pop
jmp
ret
inc
cmpsb
pop
hlt
sub
inc
stos
jne
push
jno
adc
jb
lret
stc
fs
or
push
enter
push
and
les
adc
and
fwait
or
ret
sub
jbe
mov
repz
outsb
inc
out
push
ret
in
clc
add
imul
insb
in
push
and
cli
push
add
jno
push
xchg
dec
jl
popa
pop
outsl
adc
mov
popa
ret
lods
ret
sti
outsb
ss
mov
mov
dec
fnstenv
loop
adc
sub
movsb
pop
pop
into
cmpsb
leave
xchg
pop
call
and
enter
leave
pop
pop
fdivr
stos
stos
shll
repnz
add
or
dec
mov
mov
and
outsl
cmp
add
stos
cs
pop
mov
cmp
fcmovnb
fldenv
dec
arpl
mov
push
loope
adc
das
push
jle
mov
cmp
push
sbb
cmp
jmp
push
int
mov
nop
or
push
dec
mov
mov
xchg
negl
iret
mov
cmp
xchg
pushl
sub
cmp
xor
jl
test
pop
adc
lahf
fadds
cmpsb
sub
mov
shrb
sub
push
lcall
adc
out
test
mov
xlat
add
push
add
push
dec
xor
jle
xchg
dec
arpl
ret
sti
sbb
cmp
sarb
daa
or
stos
out
cltd
div
cmp
inc
imul
xchg
jno
pop
fs
sub
fdivr
gs
in
adc
data16
push
push
in
std
cmp
or
imul
push
mov
lds
sbb
inc
cld
andl
cmp
enter
jno
mov
jg
rcl
xchg
pinsrw
mov
push
lret
pop
outsl
enter
jge
dec
pop
imul
pop
int
out
insl
jbe
adc
pop
push
sub
dec
jg
and
iret
icebp
add
mov
shrl
mov
and
popa
dec
inc
rcrb
sub
pop
daa
scas
mov
rorl
jmp
inc
out
cmpsl
sub
pusha
call
jns
popa
dec
loopne
in
repz
cli
outsl
add
je
mov
lds
std
lcall
iret
xlat
insl
adc
ja
ret
test
fadd
push
ds
or
out
jbe
addb
aad
sbb
xchg
fnstenv
mov
fcoml
push
out
mov
inc
test
sub
ror
les
ja
rclb
pop
push
loop
cmpsl
sbb
add
and
xchg
ret
cmpsl
xor
pop
into
data16
leave
int
inc
jecxz
mov
ja
loope
mov
ja
dec
push
stos
add
pop
and
in
fnstenv
adc
pusha
sub
adc
xlat
xchg
and
mov
lret
adc
fimuls
mov
cwtl
inc
push
rcrb
fnsave
jb
inc
testl
neg
add
push
sub
out
push
cmp
addr16
lock
lcall
stos
leave
and
rcl
loop
rcr
push
and
jbe
gs
mov
adcl
cmp
hlt
mov
ror
insb
dec
cmpb
mov
fwait
lahf
lahf
inc
in
add
sbb
xor
push
ljmp
dec
mov
or
es
or
jp
push
mov
sub
notl
jp
mov
add
aas
jle
adc
loop
iret
cli
aaa
dec
lcall
mov
es
jno
ficompl
inc
cmp
mov
nop
mov
xor
in
sahf
loop
pop
and
sub
xor
push
lds
and
fsts
xchg
sub
sub
inc
sbb
xchg
repnz
dec
icebp
push
jmp
movsl
jmp
stc
cmp
mov
add
jae
mov
sarl
adc
xchg
sub
cmp
fdivp
pushf
arpl
xchg
sub
mov
or
or
imul
ss
pushf
adc
push
loopne
cmp
pop
jp
push
xor
pushf
and
cmpsl
test
icebp
clc
pop
adc
jno
pop
fists
enter
je
inc
subl
pusha
icebp
jecxz
sti
outsl
lock
or
and
sahf
jp
jnp
mov
push
xchg
mov
jns
jecxz
sbb
jbe
mov
or
and
cli
add
xchg
popf
cmp
mov
repz
mov
dec
sti
mov
fisubrl
mov
mov
cwtl
scas
jle
dec
shlb
pop
das
xchg
lods
shlb
mov
mov
gs
ja
jae
movsb
stos
popf
mov
dec
or
sub
mov
mov
ret
ret
fbstp
pushf
imul
pop
sbb
xor
adc
add
dec
insb
xor
incl
dec
in
fisubrl
pop
inc
lods
adc
cs
aas
adcl
dec
jne
jecxz
push
fs
and
rclb
in
movsb
cmp
pusha
sbb
jmp
repnz
jno
insl
push
xor
mov
jl
in
lret
adcl
mov
cld
or
inc
lea
pusha
sahf
rcr
mov
adc
aas
pushf
inc
rorl
out
andb
mov
jnp
dec
dec
mov
mov
lock
cmpsb
pusha
out
xchg
lahf
mov
sahf
lahf
icebp
dec
mov
pop
lods
dec
mov
repnz
dec
or
fnsave
aad
shr
cmpsb
push
adc
mov
and
int
mov
push
mov
push
pushf
dec
dec
test
flds
cs
jne
and
adc
pop
in
out
or
pop
out
fcoml
stc
and
lret
sub
int
and
push
and
mov
in
dec
add
in
or
in
or
std
je
push
std
push
lods
mov
mov
inc
lahf
sbb
hlt
sbb
jge
nop
cld
ja
lods
sti
ficoms
xor
mov
cwtl
ret
xorb
dec
xchg
repnz
jnp
stc
cmp
mov
dec
or
jle
rorb
out
aad
push
icebp
insl
xor
cmp
call
mov
cwtl
sahf
adc
and
mov
or
adc
jnp
es
and
mov
cmpsl
mov
andl
inc
pop
lods
ds
fldcw
in
ljmp
pop
pop
scas
fldenv
or
jb
das
leave
dec
pop
dec
sbb
bound
int
popa
in
mov
lret
movsl
push
and
add
jns
xor
test
mov
lahf
cli
mov
xchg
inc
aad
jne
inc
lahf
scas
inc
and
mov
inc
pop
arpl
outsb
push
in
popa
mov
mov
out
pusha
push
cwtl
aam
add
aaa
movsl
mov
aam
in
stos
fldenv
sbb
out
ljmp
out
int3
sub
or
mov
roll
js
xchg
sbb
sub
test
mov
lahf
or
xchg
lret
das
stc
sahf
mov
flds
dec
jnp
orl
insl
mov
cli
btc
popf
xor
mov
inc
jp
adc
cmp
or
ret
push
call
ljmp
aad
cmp
jb
and
mov
mov
push
jae
imul
stc
stos
fdivl
xchg
roll
xchg
sti
adc
jo
pop
imul
pop
mov
mov
inc
jae
pop
stos
fbstp
xlat
out
rclb
mov
cwtl
scas
repnz
movlps
lcall
push
ljmp
jmp
push
mov
dec
gs
loope
iret
mov
jecxz
repz
jl
fisttps
xchg
xchg
xor
stos
sar
mov
xor
cmp
xor
mov
idivb
out
jbe
push
inc
inc
xchg
mov
and
push
adc
push
mov
imul
enter
cmp
int
repz
mov
push
insl
lods
into
pop
mov
lock
push
cltd
out
inc
mov
adc
or
lret
push
push
and
push
in
cmp
add
mov
push
imul
mov
lods
adc
cmpsb
cmpsl
in
sub
in
stc
fadds
lret
mov
or
sbbl
xor
call
xchg
pushf
cwtl
xchg
scas
add
jp
mov
mov
mov
stos
pop
pushf
popa
ds
out
icebp
mov
andb
in
out
xchg
sbb
or
xor
xor
jo
aaa
in
and
sub
jo
push
cli
jae
mov
mov
into
xchg
inc
sub
out
mov
mov
fwait
scas
lcall
pop
sub
push
or
sbb
cs
adc
sti
jle
pop
inc
loope
or
lcall
add
cmc
mov
nop
and
add
sahf
mov
xchg
pushf
in
cli
adc
jg
mov
test
loop
and
leave
jne
jge
sbb
add
clc
in
fistpll
push
arpl
in
cmp
aam
test
sarl
and
pop
xchg
imul
jp
mov
into
jl
pop
sub
lods
xor
jg
mov
pop
dec
pop
add
dec
loope
aaa
bound
xchg
add
sbb
fsubr
xor
dec
dec
push
mov
mov
andl
stos
cli
xlat
mov
mov
sti
data16
js
cwtl
push
jae
into
push
cld
shrb
and
jnp
cltd
inc
push
cs
lods
cs
adc
pop
pop
pop
mulb
mov
sbb
subl
fwait
mov
es
mov
push
scas
in
ds
sbb
mov
dec
bound
in
sbb
push
dec
clc
cmp
mov
in
ja
xor
add
xchg
inc
sub
insl
mov
sub
xor
test
addr16
dec
fnstenv
sub
gs
dec
pop
sbb
clc
mov
add
test
push
out
out
je
push
jns
insl
into
push
and
sbb
je
mov
hlt
out
sub
mov
sbb
clc
nop
pop
lock
fistl
sbb
jo
dec
pop
pusha
add
fsubs
push
sbb
mov
push
inc
mov
cmpsl
push
mov
mov
mov
out
sbb
mov
cmp
imulb
jmp
inc
fwait
lea
pop
sub
inc
inc
std
mov
adc
aaa
test
rclb
popf
arpl
mov
inc
notb
jns
mov
mov
inc
fisttpl
aaa
mov
ror
mov
mov
xchg
xchg
call
jae
jle
fcmove
rol
das
movsl
add
int
dec
shlb
loop
jmp
in
lahf
push
and
in
outsb
sbbl
adc
aad
enter
jb
fcmovnbe
and
test
ret
add
es
aaa
push
outsb
dec
or
sbb
adc
ficoms
in
nop
inc
jns
adc
sub
push
enter
std
gs
add
movsl
mov
inc
insl
lock
inc
mov
sbbl
inc
mov
xlat
jp
and
mov
and
jmp
in
inc
jb
int
aam
adc
jo
cmpsb
inc
xchg
aad
mov
mov
jmp
add
cmp
sub
mov
in
dec
stc
stc
lds
scas
bnd
jge
mov
inc
and
enter
rorl
jbe
inc
fildl
test
clc
pushf
loopne
test
repnz
xchg
xor
jnp
pop
adc
cmp
mov
test
stos
mov
lret
std
out
pop
inc
xlat
imul
add
jge
add
inc
aaa
cmp
mov
movsl
cli
in
fwait
pop
dec
jne
bound
pop
push
jbe
push
ss
stc
mov
insl
loope
mov
pop
dec
pop
dec
mov
sub
push
inc
add
mov
test
test
movb
sbb
jecxz
mov
sub
jmp
call
icebp
cmc
mov
mov
cmp
mov
std
sbb
fdivl
mov
cmpsb
out
clc
adc
xor
add
lret
sbb
lea
xor
adc
jecxz
enter
das
inc
pop
loope
mov
push
sub
icebp
out
mov
rcll
mov
mov
jecxz
jg
in
mov
mov
ljmp
js
stos
push
or
in
sub
fldenv
pop
ds
sbb
outsl
inc
fnstenv
mov
push
or
ss
lret
mov
sti
fisubs
and
adc
dec
sbb
cmpsl
or
fmuls
aas
bound
jecxz
cmp
mov
out
adc
aad
dec
jmp
jmp
or
inc
test
nop
gs
cmpb
nop
mov
add
jo
lahf
les
lods
xchg
cmp
cmc
adc
sub
pop
loopne
lods
dec
rorl
cld
inc
mov
pushf
test
jmp
and
jle
and
push
cltd
pop
jp
mov
roll
cmp
repz
jne
mov
sub
dec
icebp
aas
ss
mov
aad
push
fisttps
mov
push
out
ret
sbbl
jne
iret
add
loop
fisttps
pop
roll
loop
xchg
inc
jae
in
scas
jo
mov
imull
lret
mov
out
inc
cli
add
movsb
jae
or
das
ljmp
ja
adc
or
mov
mov
fistpll
popa
mov
scas
pop
in
or
je
mov
lods
cmp
idiv
xchg
push
cmp
dec
mov
adc
jno
pop
adc
stos
jl
adc
lea
jbe
adc
pushf
pop
jmp
pop
and
sbb
cmp
dec
push
sbb
jo
xchg
cld
adc
out
iret
xchg
mov
push
dec
cs
arpl
dec
sub
data16
xchg
in
shlb
jmp
aad
sahf
hlt
ficoms
pop
push
aas
jb
in
in
cld
test
inc
pop
leave
int
mov
push
jno
pop
sarl
insb
jecxz
lods
inc
mov
fisttps
and
jecxz
mov
scas
je
xor
jecxz
mov
mov
jb
push
lahf
rcll
mov
cs
ret
mov
lods
out
pop
cmp
mov
sub
sbb
jl
repz
adc
int
loopne
fcmovu
pop
popf
cmp
cmp
loopne
out
leave
jmp
jbe
sbb
inc
mov
adc
jl
mov
adc
cmp
mov
mov
fcmovnu
icebp
push
aad
loop
psrld
push
mov
adc
ja
aas
dec
sbb
in
mov
cltd
mov
shlb
je
jecxz
das
xor
cs
push
inc
outsl
mov
cli
adc
cmp
xor
test
and
pop
mov
out
ja
mov
sbb
add
ret
add
test
xor
out
in
js
cs
insb
add
xchg
push
push
iret
xchg
mov
gs
mov
std
mov
ljmp
shll
jno
pop
inc
push
fsubs
das
sahf
xchg
ret
pushf
lea
mov
loope
sub
pushf
xchg
movaps
bound
imul
inc
lret
jo
aas
call
add
shlb
xchg
or
jns
mov
data16
xchg
cwtl
xorl
push
std
jbe
cli
jne
push
rcr
movsb
xchg
jo
xchg
jp
std
enter
insb
ret
pop
pushw
sbb
es
aam
mov
lahf
pushf
call
out
ja
push
scas
ljmp
and
sub
add
mov
pop
or
aad
test
popf
pop
cmp
dec
xor
mov
loope
call
cld
xchg
in
les
pop
ficoms
xchg
nop
sbb
xchg
and
inc
xor
mov
xor
jecxz
popa
movsb
xlat
out
ret
je
push
mov
adc
xchg
pop
call
lret
cltd
gs
fildl
mov
jbe
jnp
stc
lahf
pop
in
xchg
out
test
sbb
lods
mov
xchg
or
out
jecxz
jns
mov
testl
jg
iret
into
pop
lahf
xlat
imul
sbb
dec
std
bound
mov
pop
iret
inc
adc
jle
dec
das
movsl
arpl
mov
xor
push
int3
fldl
dec
push
lods
sbb
mov
imul
popf
ss
insl
and
jne
inc
or
or
rcl
js
fcomps
xchg
push
jo
dec
mov
add
loope
mov
jne
enter
daa
push
bswap
sub
mov
test
mov
call
cmp
loopne
jecxz
pop
aaa
jb
inc
mov
data16
sbb
addl
pop
xor
xchg
adc
or
mov
bsf
adc
out
push
popf
push
add
mov
shll
aam
adc
sbb
inc
push
addr16
or
nop
ss
adc
pop
jbe
or
insl
inc
int
movsb
xchg
aad
xorl
mov
es
or
icebp
cmp
inc
sub
test
push
mov
dec
mov
cmpsl
push
push
out
shl
sub
push
xchg
es
push
or
push
inc
sbb
xor
aas
inc
xchg
stc
mov
daa
xchg
clc
inc
sbb
dec
inc
xchg
js
testb
cmpsl
std
mov
lret
gs
das
push
loope
mov
aas
xchg
mov
xchg
xchg
push
add
roll
sub
out
popf
pushl
pop
lcall
xchg
add
int
in
je
movsl
sbb
dec
fcompl
in
popa
fnstcw
test
lret
cmp
dec
mov
adc
jns
sub
dec
lods
das
dec
xlat
mov
inc
loope
cmp
cs
clc
xchg
mov
sub
fdivrs
incl
dec
dec
nop
cmp
cmp
mov
lea
jmp
pop
xor
push
movsl
cltd
pop
lods
or
rolb
sarl
sbb
push
sub
mulb
dec
xchg
cmp
fldt
jge
dec
xor
jl
fcoms
jb
inc
xchg
rcrb
out
sbb
fimull
cli
popa
pop
push
dec
out
mov
push
jbe
loope
shl
mov
pop
pcmpgtd
enter
into
cmp
mov
arpl
jge
cmpsb
jno
sub
addr16
or
cmp
aas
and
adc
pop
std
sbb
nop
fcoms
fwait
pop
in
movl
arpl
sbb
fstps
and
stos
mov
push
mov
je
je
mov
pop
mov
in
mov
xlat
repz
xorb
jg
lock
cltd
popa
in
xchg
pop
add
mov
mov
xor
fildl
xor
into
addl
push
pop
push
inc
lret
cmpsb
mov
sbb
and
xchg
cmp
xchg
mov
mov
cmc
rcll
push
cmpsb
cld
inc
aam
mov
scas
iret
js
push
pop
lock
mov
inc
loopne
mov
sbb
scas
jns
or
push
dec
enter
mov
and
cmp
pop
cmpsb
adc
ljmp
leave
pop
cmp
mov
mov
push
fbstp
inc
jge
push
dec
push
popa
fdivl
fscale
fcmovnbe
dec
ds
cmpsl
daa
push
cld
icebp
ret
sbb
cs
imull
lods
add
cmpsb
stos
cli
jo
mov
sbb
inc
mov
dec
arpl
push
jmp
add
xchg
pusha
pop
sub
stc
mov
sub
dec
xchg
mov
pop
sbb
lahf
cltd
nop
mov
sbb
mov
ror
lret
std
xorb
adc
cmp
in
dec
push
insl
xchg
neg
xchg
xor
push
push
das
outsl
fcoml
xor
xchg
mov
fistps
or
lcall
mov
dec
dec
sahf
and
cmp
cmc
aaa
inc
or
push
aas
mov
push
movsb
cmpsl
pop
lds
sbb
dec
and
stos
pop
or
sbb
push
sub
jl
das
pop
movsb
xor
pop
xor
add
fstp
jae
sub
adc
int
xchg
add
in
or
jnp
adc
lahf
xor
es
sub
push
int3
mov
xor
adc
mov
push
outsl
mov
cmpsl
out
aad
outsb
or
xchg
dec
mov
jo
sarb
cmp
xchg
lods
xchg
rol
pop
std
clc
int
dec
mov
scas
lods
out
xchg
lahf
loope
mov
out
ror
sar
jecxz
jle
jns
pop
sub
or
jb
cli
stc
bound
mov
notl
insb
pop
push
test
sbb
xchg
orl
mov
mov
in
mov
mov
dec
add
jmp
push
stc
out
fcmovnbe
lock
sbb
scas
pusha
shlb
mov
inc
movsl
dec
stos
pusha
inc
rolb
pop
cmp
in
js
mov
bound
add
les
jecxz
jg
bound
ja
push
dec
jns
popa
fwait
jns
pop
mov
mov
gs
lods
jmp
push
insl
adc
lret
in
sub
inc
imul
or
test
or
sub
jne
adc
or
xchg
lahf
or
mov
mov
in
sub
dec
rorl
push
mov
orb
mov
call
sub
imul
mov
sub
xchg
test
loope
push
leave
and
aaa
push
aaa
pop
xor
and
or
mov
add
iret
dec
addl
adc
icebp
sub
sbb
mov
mov
dec
push
fildll
fcoml
mov
pop
ljmp
jecxz
mulb
inc
pop
push
xchg
cli
lods
jmp
dec
arpl
cmp
pop
jnp
movb
js
mov
cld
jle
cmpsb
pop
add
sub
dec
sti
test
mov
call
xor
insl
xor
jae
xor
fisubrl
sbb
pop
mov
cmp
mov
mov
ret
cmp
xlat
jns
mov
cs
sbb
mov
cmp
divb
fwait
lock
or
mov
mov
iret
jmp
jge
mov
arpl
rclb
loope
repnz
cld
into
and
adc
and
sub
das
cmpsl
xchg
aam
inc
xchg
inc
enter
call
into
int3
jg
aas
ds
mov
mov
insl
xchg
mov
inc
iret
rcl
ss
mov
xor
inc
sbb
cld
repnz
cmpsl
and
in
into
xchg
sti
cmp
mov
dec
add
cmp
in
dec
int
loopne
ret
and
loopne
lret
adcb
jg
jo
sub
mov
cmp
dec
into
imul
hlt
in
pop
int3
mov
jmp
xor
xchg
cli
mov
stos
mov
cs
fists
mov
ljmp
and
in
loope
jbe
push
outsl
or
and
jg
out
add
lahf
pop
stos
pushl
sahf
mov
sub
and
movsl
insb
outsl
aas
lods
in
mov
into
in
xchg
sbb
hlt
negb
push
jl
bound
and
jmp
inc
xchg
cltd
fcmovnb
je
jns
jno
aam
push
in
rolb
lcall
rorb
push
ja
out
mov
mov
popa
sub
stos
test
mov
scas
xor
xchg
enter
call
cmp
aas
sub
or
push
push
pop
jmp
addr16
sarb
pop
pop
pop
cmpsl
xchg
fwait
sbb
adc
xor
pop
outsl
icebp
inc
xchg
xor
xchg
testb
cs
cmp
scas
mov
lods
fwait
das
xchg
mov
jg
loopne
cmpsl
add
jle
ja
sbb
lahf
sbb
ljmp
mov
jnp
ficompl
mov
inc
xchg
ss
test
out
pop
out
test
push
dec
adc
sbb
jge
lret
lret
test
mov
cmp
mov
jle
stos
sub
mov
js
in
push
sub
repz
fucomip
add
push
or
sub
test
out
int
negl
je
ljmp
aas
sub
jne
fs
jbe
scas
mov
movsb
mov
mov
xor
movsb
dec
xchg
fdivr
jmp
into
flds
jecxz
js
mov
and
mov
icebp
out
push
jecxz
pop
mov
cmp
adc
mov
xor
test
inc
clc
mov
mov
adc
and
lods
mov
cmp
xchg
repnz
int
or
rclb
sub
addr16
xchg
jge
xchg
and
adc
call
repnz
mov
dec
movsl
das
cmp
das
adc
mov
xorb
lahf
fld
push
xlat
lods
outsl
sub
pop
jl
or
bound
cmp
and
mov
push
adc
inc
mov
cltd
fisttpl
cld
inc
jns
and
das
cmp
xchg
aam
xchg
sub
add
mov
imul
popf
cmp
clc
push
adc
inc
push
int
and
cmpsl
fdivs
push
sbb
mov
dec
in
pop
loop
loopne
mov
mov
dec
das
cmp
adc
xchg
inc
dec
sub
gs
push
cltd
push
repnz
pop
adc
mov
aad
push
xor
inc
adc
push
test
dec
xchg
leave
pop
inc
and
data16
movsb
in
add
and
hlt
rcl
jo
jno
cmp
fnsave
sbb
inc
lea
mov
dec
loop
push
and
lahf
je
fdivrp
es
mov
xchg
mov
pop
mov
imulb
std
orl
fadds
mov
repnz
in
sahf
or
sbb
mov
mov
lret
in
aas
push
lahf
jp
sbb
shlb
daa
in
xchg
outsl
rcl
div
cwtl
add
ss
mov
mov
jnp
or
lods
repz
int3
and
popf
mov
fs
cmp
dec
in
push
lock
cmp
aad
mov
jbe
mov
pushf
sbb
out
jle
push
inc
fcompl
test
out
xor
fwait
xchg
dec
lods
jle
repz
sbb
add
std
push
inc
push
repnz
mov
aaa
out
mov
adc
inc
nop
mov
mov
mov
in
push
inc
inc
icebp
push
mov
push
cli
out
jl
popf
mov
mov
or
sbb
mov
stos
sub
or
lahf
out
sbb
iret
fstpl
add
inc
test
push
int
jmp
insl
stos
and
sub
lcall
adc
sbb
jne
mov
dec
cmp
addl
xchg
inc
in
cs
dec
sbb
outsl
push
aaa
mov
pop
jle
js
out
push
pop
addb
sub
adcb
test
mov
lcall
stos
gs
fisttps
pop
mov
aas
es
in
push
frstor
inc
jae
or
pusha
and
mov
dec
adc
notb
in
repz
pop
inc
sbb
out
xor
cmp
cmp
mov
pop
mov
dec
lret
xor
rol
bswap
imul
or
jo
jecxz
fiaddl
jge
lods
xorl
and
inc
cmp
mov
icebp
pop
mov
in
inc
ret
out
mov
and
repz
ds
cmp
sub
rep
pusha
add
jp
fs
cld
inc
xchg
jne
mov
push
in
add
push
loop
setg
pop
movsl
adc
mov
cmp
add
cmp
imul
xor
cltd
cltd
hlt
jle
shll
adc
jne
cmp
data16
mov
sti
into
pop
int3
clc
lret
pop
lret
movsl
prefetcht2
das
shrl
or
xchg
dec
pushf
dec
mov
mov
or
mov
mov
sbb
cli
sub
add
dec
stc
cmpsb
adc
negb
stc
pop
jl
shrb
mov
jns
mov
adc
adc
dec
cmpsl
xchg
add
xchg
inc
push
mov
les
xchg
dec
aaa
and
lods
jns
hlt
rolb
inc
daa
xor
xchg
ss
movsl
fbld
cmpsb
icebp
xchg
data16
sbb
adc
loopne
push
mov
add
iret
sub
jo
mov
sbb
sub
shrl
lcall
mov
inc
rorb
test
mov
in
call
lds
in
sub
out
das
sub
add
sbb
aam
data16
movsb
loope
mov
dec
lock
loope
dec
jge
imul
rcrb
fidivrl
push
pop
and
push
cmp
scas
cmpsl
mov
mov
push
or
push
jns
out
or
adc
mov
add
mov
lods
push
fisubrl
mov
jae
inc
je
movsb
inc
xchg
and
roll
dec
in
ljmp
sub
rorl
popf
adc
dec
sub
ss
sti
out
iret
fwait
inc
dec
add
xchg
dec
addr16
ja
sti
and
jp
mov
in
xchg
ljmp
test
daa
in
cmc
in
sbb
cmp
jnp
push
mov
xchg
jl
sti
je
adc
pop
dec
jge
jb
mov
push
pop
pop
test
push
dec
mov
cmpsl
out
cs
jns
movsl
ret
popa
pusha
adc
mov
dec
subl
popf
xchg
gs
or
inc
lods
sbb
xchg
ret
or
sbb
ror
sbb
xchg
adc
lret
inc
data16
mov
push
mov
push
gs
add
mov
mov
lock
mov
and
dec
jp
sbb
pop
clc
add
iret
repz
stos
addr16
jbe
push
sbb
xchg
pusha
pop
leave
mov
push
popf
push
jle
sub
jne
popa
sbb
stos
outsl
shrb
notb
rclb
xor
fdivr
cmp
fwait
dec
decb
mov
adc
mov
mov
sub
and
in
mov
divb
pop
mov
inc
jp
pop
mov
xchg
in
fstl
sub
push
iret
dec
mov
sbb
jne
cmpsl
mov
dec
pop
in
push
xchg
movsb
mov
cmpsl
std
inc
clc
lods
push
mov
test
lods
mov
daa
mov
jg
xor
push
and
mov
mov
dec
xchg
push
mov
loopne
pop
mov
mov
out
int3
sbb
or
lods
fdivs
jecxz
fstpt
fdiv
jns
in
cwtl
adc
nopl
ror
insb
enter
cmp
enter
addr16
pop
test
push
or
negb
stc
mov
dec
xchg
bound
aad
dec
dec
dec
fistl
xchg
cmp
pop
mov
and
gs
adc
insb
push
leave
fstpl
out
ja
adc
mov
rolb
and
dec
shlb
push
lock
loope
adc
sbb
lcall
mov
mov
pop
pop
fmuls
imull
movsb
sbb
xor
cmp
push
push
mov
jge
xchg
cmpsb
pop
and
cmpl
mov
dec
aaa
xchg
mov
in
repz
sub
test
hlt
mov
sbb
lea
aam
dec
iret
ret
inc
push
mov
cmp
fwait
loopne
mov
or
loop
jg
cwtl
pop
jb
mov
push
fdivrp
dec
or
pop
stos
les
xor
out
pop
xor
jp
push
not
pop
mov
sti
sub
fwait
or
add
movsl
xchg
out
mov
jbe
dec
adc
pusha
mov
out
mov
roll
es
daa
or
movsl
mov
cmp
jle
insb
pop
dec
xor
fstpt
gs
sbbl
adc
mov
cmp
loope
xchg
xor
xchg
gs
sbb
les
dec
mov
dec
incl
sub
xor
les
rcr
lds
or
in
sub
sbb
cmp
push
mov
mov
fdiv
and
sub
ret
les
pop
cld
inc
dec
mov
les
cmc
sub
daa
mov
mov
mov
xchg
pop
sti
push
sub
and
lcall
inc
scas
repz
pop
mov
inc
mov
repz
mov
scas
cld
xor
cmp
stc
jmp
sbb
sub
and
ds
lea
inc
push
out
mov
jnp
hlt
inc
in
push
les
pop
leave
dec
fabs
cs
out
jg
bound
push
movsl
arpl
xlat
xchg
push
dec
jo
xchg
out
incb
add
or
pushf
iret
mov
scas
adc
inc
sbb
push
fwait
inc
fdivr
faddl
adc
pushf
sub
inc
rcr
add
das
pusha
inc
hlt
jg
sbb
pop
inc
ficomps
jb
mov
inc
mov
mov
test
testl
ds
cmp
je
jle
dec
add
in
js
push
ljmp
mov
mov
aas
pop
pop
out
mov
lods
lods
imull
dec
repz
ficompl
adc
cltd
push
daa
outsb
in
dec
push
orl
adc
cmp
push
ret
or
loop
mov
cld
lods
dec
movsb
test
adc
mov
pop
add
das
and
shlb
cmpsl
or
int3
cmp
loope
fistps
inc
ljmp
pop
movsb
pop
inc
test
adc
mov
into
test
repnz
sahf
fdivrp
rorl
mov
ds
mov
insl
mov
push
mov
fld
gs
push
jb
mov
mov
cmpsl
jae
add
xchg
mov
and
push
adc
js
icebp
sub
push
aaa
jmp
sbb
pushw
stos
jmp
mov
inc
xor
cmp
sub
mov
call
call
movsb
mov
cmp
lds
iret
dec
test
pusha
xchg
jb
add
sub
mov
pop
cltd
int3
nop
inc
add
enter
popa
mov
push
lret
outsb
nop
imul
jnp
sub
sbbb
xchg
xchg
adc
mov
xchg
nop
mov
push
lods
negb
pop
shl
mov
dec
test
movsb
in
and
pop
pop
push
call
cmp
insl
or
rclb
insl
sub
lret
jo
cwtl
es
mov
js
sub
sbb
jbe
or
pop
ret
mov
das
pop
aad
andb
movsb
test
mov
and
lcall
imul
ds
xchg
add
xor
popa
xchg
jmp
repz
clc
cwtl
imul
lods
cmpsb
push
in
cmp
push
and
mov
mov
out
repnz
aas
shlb
clc
lahf
adcl
cmpl
not
inc
and
and
dec
cmc
jbe
fsubrs
popa
imul
pop
idivl
or
xchg
out
or
pop
pusha
aam
mov
sbb
and
fistps
inc
outsb
pminub
xor
and
mov
lock
and
sub
xor
inc
sub
aaa
outsl
mov
mov
out
xor
push
nop
dec
adc
inc
push
sti
fldt
mov
adc
xor
andl
in
idivb
mov
cmp
and
scas
and
aas
subb
sbb
add
rorl
dec
lods
xchg
jb
pusha
stos
lcall
lock
int3
xchg
xlat
fadds
bound
cmp
mov
push
sbb
push
push
cli
fcompl
xchg
jns
and
mov
std
insl
adc
or
cs
cltd
adc
in
jnp
loop
pop
out
daa
xchg
inc
xchg
xchg
sbb
jnp
imul
das
push
and
mov
jns
or
cmp
dec
call
xorb
jmp
insl
js
dec
cmc
mov
pop
imul
loop
loope
xor
int
dec
lds
push
loop
xchg
push
pushf
xlat
fwait
dec
out
add
fcmovbe
sbb
iret
and
cmp
fisubl
push
cli
icebp
mov
es
ss
punpckhwd
or
nop
iret
in
popf
enter
push
and
popl
mov
fistpl
dec
popa
push
sbb
jae
popa
sub
jp
aas
aas
dec
enter
add
scas
je
inc
mov
imul
inc
rcll
add
pushf
xorl
stc
or
pop
sahf
ds
rclb
mov
aad
xchg
pushf
outsb
sbb
adc
aaa
cwtl
std
jp
repnz
mov
out
pusha
aas
inc
add
cmpsb
lret
xor
in
incb
push
pop
sub
xor
or
les
stc
stos
pop
and
ss
push
add
add
pop
lds
bound
dec
inc
cmpsl
push
insb
sbb
mov
mov
xorb
test
jo
lods
or
or
cmp
mov
arpl
aaa
push
push
and
xchg
or
mov
fdivs
test
xor
aad
mov
push
push
sub
stos
or
and
adc
push
inc
test
dec
or
mov
fwait
adc
js
test
or
fistps
jnp
xor
out
les
in
lret
stc
push
push
add
clc
push
out
fsts
sub
fwait
dec
sbb
outsl
xorb
sub
sbb
mov
scas
out
or
roll
neg
pop
out
insl
jl
adc
cs
ret
out
dec
and
and
jae
mov
lahf
ficoml
popf
inc
mov
sbb
and
add
xorl
iret
mov
adc
shl
adc
jl
lods
push
cli
and
rorb
xchg
pop
addr16
pop
js
xchg
in
arpl
in
in
decl
roll
cld
stos
adc
mov
call
jmp
gs
test
xchg
pop
or
in
test
or
shlb
xchg
movl
cmp
or
inc
mov
loopne
jno
mov
adc
out
and
or
aad
and
ss
lahf
pusha
dec
stos
out
jae
insl
xlat
or
ret
testl
xchg
inc
or
pusha
sbb
lahf
dec
mov
cld
mov
daa
xor
out
jecxz
lahf
fmull
jb
adcl
and
fnstenv
dec
jmp
test
mov
test
mov
and
adc
fnstsw
nop
mov
cmpsl
or
xchg
lods
pop
and
test
stos
cmpsb
scas
add
lret
push
insl
xor
mov
adc
cmp
std
sub
mov
pop
xchg
shlb
mov
das
stos
inc
xor
out
aam
in
xchg
in
gs
cmc
lcall
sbb
mov
sub
test
xchg
lcall
add
or
jns
stos
sarl
jae
sahf
xchg
mov
stos
pop
into
cltd
push
cmp
cld
jle
add
js
aaa
lods
mov
shrb
jno
adc
sar
fwait
sub
movsb
cmp
jno
cltd
jns
repnz
pop
test
cmpsb
dec
imul
or
xor
or
adc
sti
xchg
dec
push
push
aad
fldcw
int3
mov
pop
imul
cmp
out
push
and
fcom
inc
xor
rcr
inc
pop
sub
in
dec
push
xchg
push
adc
mov
and
loope
cmpl
cmp
sbb
pop
aas
xchg
xchg
mov
push
xor
adc
xor
push
or
adc
mov
sbb
dec
jle
sti
loop
mov
or
push
enter
sbb
xor
xchg
mov
repz
xchg
dec
fisttps
cmpsl
add
xchg
fucom
or
jmp
loope
negl
add
mov
jl
leave
fildll
int3
pop
fcmovb
xor
mov
and
mov
dec
fistpll
lret
xor
sbb
xchg
das
sbb
mov
add
jge
out
cs
mov
inc
mov
jbe
xor
cmpl
mull
mov
add
lret
cmpsb
and
out
jns
shrb
mov
xchg
lahf
mov
sbbb
pop
dec
cmp
sti
push
mov
lahf
jg
push
xchg
add
sub
push
mov
xor
and
pop
loopne
sub
pop
fsubl
mov
jnp
fidivs
xchg
in
jnp
mov
inc
xchg
and
movsl
xchg
jmp
sub
stos
sbb
dec
shll
sub
mov
dec
mov
ret
cmp
in
xchg
cwtl
cmc
loopne
into
mov
add
mov
push
cmc
jbe
scas
fcmovu
js
push
in
push
lret
iret
mov
ss
adc
movsb
cwtl
and
inc
cmc
cmp
pavgw
dec
mov
sti
lds
mov
insb
loope
xchg
mov
push
cli
outsl
fucomi
daa
fcmovnu
jp
lock
jl
jo
add
ljmp
ss
popa
inc
or
mov
push
testl
int
or
sub
cmp
or
lret
inc
inc
add
jmp
lret
subl
fwait
jnp
adc
je
mov
repnz
mov
sub
xlat
out
icebp
xor
mov
scas
inc
cmpsl
lret
movsb
add
mov
fdivrp
movsl
mov
mulb
popf
mulb
imul
xor
rolb
sbb
addr16
push
sahf
pusha
sub
rclb
sbb
pop
cs
movsl
jecxz
push
stc
sahf
mov
mov
and
mov
push
push
mov
cwtl
dec
arpl
pop
xorl
fsubr
mov
stos
aad
sbb
adc
stos
inc
imul
mov
sbb
pop
sbb
xor
clc
dec
dec
repz
stos
lahf
test
mov
fwait
popf
cs
int
call
jne
movsb
fldenv
jp
movsl
pop
or
xor
cmp
sahf
fbstp
out
mov
inc
ss
ljmp
cmp
scas
xchg
test
into
mov
dec
fnstsw
mov
cmp
push
jp
je
jl
test
jns
loope
aaa
mov
push
mov
mov
pop
sbb
jns
mov
dec
push
loopne
leave
sarl
in
inc
loopne
mov
std
bound
faddl
andb
adc
inc
jno
lea
jo
pushf
pop
sbb
lcall
in
mov
push
mov
imul
jno
aam
clc
xor
std
cmpsb
jl
inc
add
dec
add
lret
scas
cld
testl
clc
xchg
sarl
mov
sbb
xchg
sbb
movsbl
pop
cmp
cmp
pop
stc
mov
jecxz
and
loop
popf
dec
jmp
jb
xchg
arpl
lret
ljmp
rcrb
in
add
mov
cs
outsw
cmp
data16
pop
mov
fstpl
repnz
inc
orl
xor
aad
sbb
and
pop
dec
cs
jne
lahf
jmp
dec
out
clc
cmp
shrl
pop
aam
mov
mov
out
in
push
mov
lahf
sub
pusha
dec
sbb
mov
les
pop
sub
dec
xchg
pushf
lods
mov
nop
out
adc
add
pusha
lahf
es
dec
insb
or
in
std
ret
rolb
sub
mov
dec
mov
pop
gs
cli
out
xchg
fstpl
stos
pusha
cmp
sub
xor
mov
fdivl
xor
and
and
xchg
pop
lds
push
adc
push
pop
add
mov
insl
xor
popf
pop
imul
shlb
imul
add
and
xchg
mov
test
lahf
mov
mov
xchg
cs
das
mov
loope
nop
lret
push
push
fnstenv
in
aad
inc
pop
adc
int3
lret
in
inc
clc
rolb
cwtl
decl
or
cwtl
add
adc
lock
or
mov
in
iret
push
clc
ret
pusha
popf
pop
out
push
xchg
filds
xchg
add
cmp
dec
inc
pop
mov
repnz
pop
sbb
mov
lret
lods
loope
xchg
inc
xchg
pop
mov
rol
and
xchg
dec
jnp
mov
adcl
mul
icebp
adc
lds
pushf
mov
test
je
shrl
iret
dec
leave
aaa
aas
aaa
pop
pop
stos
into
out
mov
out
add
push
push
jns
pusha
cli
xor
icebp
cltd
push
mov
push
fcoml
mov
xor
ja
inc
data16
test
sub
iret
mov
into
notb
mov
es
mov
mov
out
out
repnz
or
outsl
xlat
or
xchg
mov
xchg
pop
xor
jecxz,pt
gs
out
cld
push
ja
jp
mov
inc
dec
gs
add
adc
sub
xchg
jmp
push
push
jb
insb
daa
sbb
mov
fs
mov
test
sbb
cmpsl
ja
push
repnz
cli
add
aas
lahf
sub
or
jmp
pop
sbb
cmp
or
mov
scas
ds
in
mov
jae
jbe
mov
fsubrs
inc
xchg
push
fcomps
call
mov
cld
cmp
cmp
jecxz
push
out
mov
xchg
fistps
lret
mov
ja
fwait
inc
add
push
push
jl
stos
movsb
xchg
xlat
arpl
push
xor
jmp
mov
and
sub
add
rcr
repnz
lahf
lea
sbb
imul
clc
cs
outsl
scas
fistpll
movb
shl
mov
in
ret
dec
dec
and
ljmp
push
mov
rcl
jno
lahf
in
rcrl
std
sub
jecxz
call
int3
mov
lods
cmpsb
aas
sbb
cmpsb
sbb
test
cmp
fidivs
lock
stos
fisttpl
inc
and
add
mov
xchg
pop
xor
pop
fnsave
mov
outsl
js
xor
add
or
ss
fcompl
and
push
dec
pushf
out
stc
push
hlt
adc
lahf
call
bound
insb
push
push
push
sbb
sbb
fldcw
add
mov
jmp
aaa
jbe
pop
dec
jns
cmpsl
sub
push
leave
repz
out
negl
xchg
xchg
mov
cmp
push
push
jae
push
lahf
aaa
ret
fnstcw
lods
cmpb
and
cmp
test
xor
shlb
push
sbb
inc
imul
pop
and
ljmp
cmpsb
iret
push
inc
sub
sbb
add
in
pop
jbe
push
int3
int
mov
aas
cmp
sbb
jle
lcall
mov
in
cld
jns
xchg
cmpsb
aam
mov
test
test
cmp
xchg
pop
outsb
lds
icebp
adc
in
fcomip
adc
fwait
lcall
stc
in
and
cmc
xor
sub
lret
repz
popa
push
lods
push
sbb
ror
and
and
stos
test
out
out
out
inc
jnp
mov
cmp
jno
insb
sbb
fidivrs
pusha
cmp
pop
or
into
mov
js
pop
jbe
and
push
pop
cmc
lret
mov
cmp
movsb
jo
mov
dec
mov
or
das
xchg
sbb
lock
mov
mov
inc
pop
insl
test
and
adcb
in
mov
jae
and
mov
fnstsw
in
enter
xchg
and
push
mov
sub
or
clc
push
insb
out
test
or
int
aam
xlat
jl
sahf
daa
aad
mov
jp
push
mov
dec
pop
std
js
add
cmp
js
push
push
mov
push
shl
dec
xor
mov
add
xor
je
stos
ja
xchg
mov
imul
mov
or
mov
dec
push
fstl
jg
xchg
or
adc
xor
inc
nop
pop
arpl
dec
js
xor
ja
add
iret
decb
test
pop
stos
mov
fnclex
stos
aaa
adc
sub
adc
jb
sbb
leave
lahf
adc
cmp
in
fcomip
dec
sbb
push
mov
add
rcrl
sti
fidivl
or
jmp
mov
leave
pop
inc
mov
movb
hlt
outsl
jmp
xlat
push
pop
sbb
push
sahf
into
sub
mov
sbb
clc
inc
cmp
inc
imul
loopne
fldt
xchg
push
push
and
ja
ss
xchg
outsl
mov
rcll
push
bound
mov
imul
mov
aaa
fdivp
sub
rorl
and
fisubrs
sub
mov
sarb
lahf
push
fcoms
xchg
fldl
je
dec
push
rcrb
aaa
addr16
in
fisubs
pop
push
jnp
jp
push
call
mov
push
outsb
test
ret
into
data16
sub
sub
cmp
into
imulb
and
or
test
and
repnz
in
jmp
stos
sub
xchg
and
add
fbstp
or
push
out
imul
sbb
and
popa
xchg
pop
into
popa
push
add
hlt
jmp
out
insb
push
or
out
call
insl
nop
cmp
push
push
adc
test
fstpl
loopne
or
mov
or
ret
pop
fwait
xchg
mov
bound
mov
fnsave
push
or
adc
and
aad
aas
aas
mov
mov
jl,pt
js
repnz
rcl
stos
mov
es
pusha
fisttps
push
add
sub
adc
test
xchg
xor
hlt
faddp
ret
xchg
push
mov
jmp
out
xchg
iret
push
int3
add
push
mov
sub
inc
push
mov
jg
es
iret
int3
inc
jl
mov
in
xor
mov
pop
add
xchg
inc
hlt
aad
inc
push
in
pop
or
cmp
push
adcl
loope
mov
jnp
add
pop
pop
iret
jnp
lock
scas
cs
mov
ficomps
xchg
stos
fdivrl
addr16
aam
test
cmp
or
pop
enter
mov
orl
repz
mov
adc
mov
int
sub
mov
scas
jbe
pop
out
and
cmp
in
js
mov
adc
push
add
test
xchg
inc
aas
cli
push
sub
or
and
mov
insl
arpl
dec
out
and
mov
fdivl
push
fsts
fcoml
lcall
sbb
int
xchg
jecxz
arpl
in
jbe
jbe
mov
sub
inc
pop
mov
scas
jnp
movsb
repnz
xchg
lock
std
mov
push
or
push
into
inc
shll
adc
enter
mov
outsb
mov
xchg
or
xor
jmp
ss
out
imul
sub
int
sbb
repnz
sub
rorl
arpl
jecxz
lods
and
pop
pop
enterw
add
inc
or
ficoml
cmp
out
mov
in
loopne
shlb
mov
mov
imul
push
test
rorl
movsb
aad
jnp
das
mov
inc
sar
cld
andb
cmpsl
cmp
inc
mov
dec
inc
pop
sub
add
cmpb
dec
xor
xchg
adc
cli
lahf
mov
call
xlat
sub
call
aam
xchg
jg
dec
inc
int
aaa
enter
enter
into
popf
fistpll
pop
pop
push
js
jnp
xchg
xor
push
lcall
out
ljmp
leave
je
in
pop
inc
cwtl
and
pop
movl
call
mov
dec
adc
nop
mov
jne
jmp
xchg
or
out
push
shlb
cld
call
and
movsl
cmpsl
ss
aam
xchg
insl
mov
xor
xchg
lods
bound
shl
cld
dec
test
mov
pop
jmp
xor
cmpl
xchg
xchg
jl
bound
out
jbe
jge
sbb
jns
inc
es
in
fistps
lds
cmp
jb
or
pop
addr16
jle
or
ret
or
mov
adc
sbb
push
or
lods
aam
inc
cmp
arpl
test
call
inc
jg
jl
jg
pop
sub
fsubr
mov
hlt
push
adc
jmp
xor
aaa
sub
aas
adc
ds
sub
adcl
sahf
jnp
testl
and
insl
adc
add
xor
sahf
fildl
fdivs
jecxz
out
enter
cld
shl
shl
rorb
js
out
repz
imul
adc
enter
rclb
fucomp
add
fldl
and
push
mov
adc
ja
leave
and
sub
sbb
or
jg
aaa
cwtl
ljmp
dec
adc
pop
pushf
add
addb
cmp
sarl
or
add
fs
push
add
inc
jo
mov
fwait
out
push
sbb
cmpsb
daa
or
ja
cmpsl
inc
test
int3
leave
fnstenv
cmpsb
gs
pop
cmpsb
dec
mov
cmpsb
ret
cs
inc
mov
sub
enter
adc
rolb
fbstp
pop
hlt
adc
inc
push
sbb
xor
nop
hlt
dec
fs
mov
inc
ret
aas
stos
pushf
loop
out
dec
adc
jecxz
ss
mov
loope
jp
inc
mov
push
mov
test
out
dec
iret
pop
xor
mov
out
jnp
cmc
aaa
fadds
pop
or
xorl
cli
xchg
fldenv
xlat
scas
jmp
leave
mov
sub
ljmp
pop
scas
ficomps
push
cli
add
jmp
arpl
lea
lcall
or
fxch
idivl
loopne
push
stos
pop
cmpsb
push
jb
cmp
push
fimuls
add
stos
sbb
sub
test
ret
mov
pop
or
hlt
jl
xchg
inc
dec
pop
and
movhps
cltd
rolb
adc
test
out
cmpsb
cmc
shr
notl
inc
pop
out
lods
decb
xor
add
mov
movsb
xlat
mov
rorb
cmp
and
push
stc
mov
sbb
xchg
jmp
adc
out
sub
xchg
nop
push
push
push
ljmp
push
ja
mov
mov
int3
and
mov
outsl
shlb
inc
mov
pop
sti
and
mov
cmc
es
ret
arpl
push
scas
fisttps
mov
popf
push
cmp
cmp
push
dec
add
pusha
mov
repnz
lcall
dec
cmp
in
out
xor
jmp
ja
pop
add
clc
sbb
je
aam
dec
lea
adc
push
and
xchg
jmp
fs
inc
insb
dec
fistps
and
mov
ja
mov
inc
scas
aad
jmp
lahf
mov
clc
or
add
jbe
gs
dec
lahf
xchg
cmpsb
inc
aad
sahf
xor
mov
imul
popf
test
pop
mov
mov
in
lea
movsb
and
test
push
iret
dec
mov
lds
stos
sbb
fcomp
push
push
xchg
sbb
in
imul
adc
stos
mov
xor
xchg
sub
lock
and
popf
xchg
jp
ja
js
adc
stos
imul
adc
stos
imul
jge
inc
enter
pop
mov
pop
sub
xor
sbb
cli
sbb
bnd
sti
lahf
cmp
jnp
and
push
insb
mov
pop
dec
aaa
cltd
xor
addr16
pop
int
xchg
lea
rcll
jp
add
jp
daa
jp
call
sahf
js
lds
jg
mov
adc
push
jno
in
mov
divb
push
sub
jp
repnz
gs
adc
ret
sub
sahf
cmc
in
push
cmp
hlt
fcomip
pop
mov
sbb
iret
rcrl
xchg
inc
fisttpll
call
fucomi
loopne
push
push
mov
lock
dec
add
test
cltd
ds
lahf
ret
mov
les
notb
inc
rcr
lret
and
dec
andb
dec
jmp
into
lods
jmp
loopne
xor
aas
xchg
ja
mov
hlt
jl
or
insl
rcrl
out
mov
add
or
fndisi(8087
jns
mov
push
faddp
push
or
lds
test
jo
mov
pop
insb
or
loope
nop
test
sahf
ds
jo
sbb
xchg
movsl
xchg
jae
into
leave
cltd
adc
and
push
bound
jo
jecxz
add
push
xor
cmpsb
and
and
inc
xchg
xchg
pushf
es
xchg
xchg
jno
fidivs
insb
fisubrl
jg
ret
rcr
xchg
adc
jge
sbb
mov
outsb
cmp
inc
cli
or
daa
scas
xorb
push
dec
xor
dec
pop
jmp
cli
adc
fcmovb
sahf
int3
mov
fs
rcll
test
adc
adc
lods
mov
daa
jecxz
in
jge
dec
movl
pop
fwait
pop
mov
inc
in
mov
jmp
dec
cmp
add
outsb
cld
mov
in
push
loop
or
or
ja
dec
xchg
clc
mov
mov
mov
cmpsl
mov
add
mov
xchg
jb
shl
mov
decl
pop
mov
mov
rcl
stos
icebp
push
not
add
scas
repz
sbb
dec
sbb
mov
jge
ret
cmp
inc
add
push
fcmovnbe
cmp
enter
xchg
test
and
nop
sbb
inc
and
imul
or
xchg
sbb
sbb
sbb
inc
jne
out
movsb
arpl
jo
add
insb
stos
push
xchg
into
sti
test
scas
push
pop
push
push
bnd
inc
gs
cmp
pop
pop
jl
ss
bound
xchg
lods
repz
shrb
xchg
loopne
out
or
sbb
pop
inc
jl
cltd
pop
inc
and
nop
lods
inc
pop
testl
hlt
cmp
ja
mov
and
fsubl
bound
iret
xchg
mov
popa
cmp
rcll
aad
mov
mov
inc
mov
cs
or
popf
jl
inc
dec
cltd
bsf
add
and
xchg
mov
lds
ror
and
mov
mov
mov
push
mov
xlat
mov
icebp
cmc
out
out
test
loope
xor
std
xor
and
jne
pop
add
pop
xchg
cmp
sbb
inc
mov
and
and
pop
sar
push
cmp
or
adc
shr
mov
fnstsw
aas
add
dec
clc
inc
loopne
mov
push
popa
jmp
scas
sub
rolb
imulb
into
xor
andb
lods
adc
cltd
and
scas
inc
outsw
popa
mov
sti
mov
aas
mov
fmull
fidivs
push
test
stos
dec
dec
xchg
cli
push
sbb
mov
daa
jne
mov
iret
or
shlb
jb
add
pop
push
xlat
popf
inc
sub
and
push
jmp
and
mov
or
scas
arpl
xor
sbb
dec
xchg
xchg
jmp
sbb
xor
dec
leave
push
pop
bound
enter
ret
loope
jp
std
xor
ret
inc
lods
test
mov
scas
ja
or
loope
aam
ret
jge
pusha
push
mov
loop
pop
sahf
sub
adc
dec
push
xor
or
jle
cmp
pop
add
shlb
repz
adc
dec
xor
mov
xor
xchg
sub
add
loopne
fidivrs
adc
aas
in
and
mov
add
scas
hlt
or
in
xchg
adc
clc
jae
mov
sub
and
pop
jp
mov
mov
mov
scas
sbb
xor
call
cmpsl
pop
mov
dec
sub
scas
xchg
push
sub
pop
adc
divb
fists
fists
xchg
bound
iret
adcb
mov
jbe
repnz
xchg
xor
cmp
jo
fwait
leave
out
es
xchg
repnz
test
adc
dec
pop
in
insb
push
and
or
mov
shr
push
test
jecxz
pshufw
xlat
fxch
stc
pop
jb
cmp
pop
andl
frstor
jle
mov
leave
movsb
insb
sbb
fwait
mov
xor
add
jne
call
adc
dec
inc
imul
cltd
mov
inc
popf
not
jl
inc
shlb
and
mov
inc
cmp
ss
loopne
fnstsw
cld
jno
daa
sbb
dec
cmp
test
fwait
push
in
jle
pusha
cli
out
jo
out
and
cmp
pop
adc
fists
je
xchg
push
out
daa
popf
inc
and
pop
or
sbb
fdivrl
fwait
aaa
jmp
push
mov
or
enter
das
fstps
aas
inc
faddl
test
out
dec
lret
movsl
sbb
mov
inc
adc
xchg
pop
les
inc
adc
jle
shlb
adc
loope
inc
pop
pop
int
adc
cmp
sub
adc
mov
shll
pusha
dec
push
push
loope
inc
divl
negb
and
cmp
cmc
aaa
pusha
push
movsb
adc
mov
and
cmp
mov
pop
pop
lahf
push
mov
outsl
adc
ret
aad
cmp
ds
or
cmp
mov
aas
pusha
inc
pop
xor
insl
push
pop
push
xchg
adc
mov
cs
push
jle
push
mov
sub
and
add
into
xchg
aaa
cmp
pop
bound
xor
cmp
mov
jmp
dec
sub
push
loope
lea
mov
scas
push
pop
hlt
cmp
inc
mov
add
inc
sbb
movb
mov
inc
cmp
aaa
negb
add
jbe
xchg
jnp
fdivr
push
enter
in
jle
insl
or
xchg
sbb
sbb
sbbb
xor
hlt
push
pop
nop
sbb
inc
push
xor
dec
mov
leave
int3
jmp
scas
into
add
je
test
ficoml
cmpsb
xchg
outsb
mov
xor
push
mov
mov
scas
js
sti
push
mul
stos
test
pushl
stos
lds
pop
js
or
mov
add
loopne
mov
je
sbb
sbb
mov
jne
and
mov
cs
pop
lods
xchg
movsl
cld
pop
push
std
notb
data16
mov
cmp
xchg
or
lods
push
ss
sti
aas
sbb
xchg
inc
cmp
movsb
push
mov
inc
pop
jl
or
mov
je
xchg
clc
into
cmp
test
cwtl
jmp
sbb
mov
fcmovne
mov
cld
jg
inc
in
test
sbb
repnz
std
mov
jno
mov
sbb
jmp
mov
loop
mov
jbe
movsb
add
fstpt
hlt
cli
pop
test
cltd
jl
sti
or
inc
loopne
ljmp
imul
cs
aam
add
out
aaa
test
sub
xlat
mov
iret
das
mov
ja
lcall
stos
push
cmpsb
jecxz
in
push
pop
movsl
push
inc
and
pop
hlt
and
andl
hlt
mov
jae
ficomps
sti
js
push
popa
jge
mov
inc
dec
xchg
add
daa
sbb
shrb
xchg
movsb
mov
aam
fwait
and
and
rcrb
mov
mov
movsb
ret
sbb
jne
dec
cmc
imul
add
mov
loope
push
sub
push
sub
scas
push
cmp
mov
mov
inc
mov
cs
inc
xor
inc
rcl
int
pop
sbbb
jno
out
imul
or
iret
out
push
add
fldt
negb
dec
lahf
jg
inc
sub
sarb
xor
cltd
mov
dec
sti
aas
ret
insb
lea
add
adcb
ljmp
xor
sbb
sbb
pop
cmp
outsl
popa
mov
sbb
scas
push
mov
adc
sub
pop
xor
cmpsl
das
gs
add
fwait
mov
cmpxchg
lods
pop
inc
pop
add
sbb
ret
push
pop
push
popf
in
or
mov
push
in
addb
cltd
sbb
dec
js
xchg
adc
repz
mov
stc
leave
jnp
in
insl
pop
fnstcw
dec
jnp
aas
icebp
push
es
add
lahf
xchg
pop
testl
iret
or
mov
rolb
push
hlt
sub
outsl
add
inc
mov
push
push
aas
jb
inc
sbb
lock
arpl
fwait
sbb
xchg
jnp
loop
mov
test
pushf
std
in
stos
lea
aad
outsl
sbb
jg
cmpsl
sub
push
fwait
xchg
sub
and
sub
mov
xchg
fucomp
lcall
add
mov
jb
sarb
rorb
ljmp
mov
aas
les
xchg
cmp
test
inc
and
cld
bound
inc
rol
roll
imul
add
xchg
sahf
sub
imul
adc
jl
lret
adc
push
roll
int3
mov
les
mov
fidivs
ret
jb
scas
inc
cmp
ss
mov
je
hlt
addr16
shrb
inc
inc
adc
and
or
add
clc
cwtl
enter
aas
adc
sahf
sub
adc
cld
cmp
xchg
jg,pt
das
pop
and
push
in
movsl
push
movl
mov
mov
xchg
dec
das
jg
clc
xchg
stc
inc
lahf
repnz
cld
adcl
mul
or
and
and
mov
add
aam
sub
out
xchg
pop
in
std
mov
jl
inc
mov
sub
jmp
scas
aad
xchg
xor
stos
or
jae
fs
insw
and
push
mov
sub
adc
inc
inc
into
or
cli
xchg
mov
les
mov
inc
ja
xchg
das
rcrw
xor
xchg
sub
push
in
insb
stc
cmc
mov
cltd
add
mov
loop
xor
lods
stos
shlb
int
pop
lahf
rorb
xchg
dec
sbb
mov
int3
inc
dec
xchg
cld
movsb
ds
shrl
test
inc
test
clc
mov
bound
push
fimuls
pop
xchg
adc
push
xchg
sti
iret
inc
cltd
cld
stc
cmc
adc
push
pop
es
jns
sbb
jmp
movsl
mov
cmp
sbb
mov
jp
jg
popf
outsl
push
imul
push
jge
mov
iret
cmp
stos
or
sbb
lret
ss
pop
dec
bound
xchg
sti
xchg
and
std
cmp
jecxz
out
xor
mov
std
cmpsb
fimull
divb
aad
push
pop
nop
dec
or
clc
rol
mov
cltd
mov
shl
mov
sbb
fldenv
jnp
sti
xor
cmc
lahf
int
jmp
pop
insl
push
and
jg
mov
xorl
rorb
xor
int
or
and
rcr
pop
negl
jno
add
outsb
xchg
pop
inc
cwtl
les
add
jae
ds
scas
in
jl
xchg
sbb
scas
loopne
scas
mov
and
or
pop
ret
cmp
repnz
mov
mov
arpl
xor
jno
lcall
out
fsubs
or
pushf
or
xchg
push
mov
pop
cmp
es
adc
cld
jecxz
in
out
mov
test
push
in
ficomps
lret
pop
daa
rolb
movsb
push
sbb
inc
xchg
push
push
sbb
rcr
out
xor
or
cmc
faddl
mov
pop
jle
cmc
jmp
repnz
dec
mov
or
lea
adc
in
lahf
insl
pop
adc
adc
pop
jle
sarb
dec
push
repz
push
pop
aas
sbb
push
loopne
cmp
or
outsl
dec
cmp
sbb
and
mov
sahf
fiaddl
jmp
rcl
incb
ja
cmp
fdiv
popf
out
das
mov
xor
mov
pop
push
jb
scas
and
mov
mov
xchg
lea
push
ja
lods
jecxz
stc
add
popa
push
cmp
pop
repz
push
call
push
pop
jb
push
add
mov
cmc
out
stc
and
cmp
stc
mov
aaa
nop
or
mov
add
addr16
adc
into
loopne
cmpsb
js
lret
mov
push
push
enter
in
pusha
aad
cmc
jo
sahf
mov
das
mov
mov
scas
test
scas
std
loop
into
push
outsb
sbb
jbe
shr
lods
lahf
fisubrs
mov
ss
jns
in
xchg
dec
add
jb
testl
cmp
repz
mov
fists
xor
orb
das
out
push
and
or
stos
push
mov
mov
addr16
adc
pusha
aaa
jecxz
and
xchg
subb
fists
push
fidivl
js
leave
mov
rclb
ds
andl
nop
pop
out
hlt
or
iret
shl
loopne
sbb
xchg
lret
or
dec
pusha
jecxz
leave
dec
and
cmpsl
inc
push
pop
jno
and
cmp
rcl
push
fcomip
prefetcht1
pusha
mov
imul
pushf
enter
cmp
mov
xchg
fchs
inc
lods
call
ds
cld
scas
lret
add
mov
sarb
adc
aas
cmp
int
test
add
push
add
cmp
mov
les
jle
and
add
mov
add
add
cmp
cwtl
inc
test
inc
ja
jno
mov
cs
xchg
movsl
cld
mov
push
jecxz
cltd
test
cmp
in
arpl
iret
popa
je
adc
aad
pop
mov
aas
add
jb
dec
add
test
push
pop
int
das
jno
in
mov
sahf
mov
xchg
ja
push
mov
imul
cli
push
sub
aaa
sub
loopne
in
data16
jmp
cmp
outsl
mov
mov
jns
insl
pusha
sbb
out
psubsw
xchg
test
or
icebp
or
sub
jl
arpl
pusha
movsb
ljmp
negl
sahf
xchg
mov
jbe
scas
lock
mov
jno
fists
insb
out
xchg
sbb
outsb
jbe
imul
jae
mov
fisubrl
mov
sub
fldcw
lds
mov
mov
mov
leave
aam
inc
and
xchg
add
mov
xchg
sbb
clc
pop
sbb
fistpl
inc
pop
movsl
sbb
push
cmpsl
lods
ret
pusha
cmpsl
lea
imul
aaa
pop
adc
sbb
sbb
out
push
lret
ffree
shl
xchg
pop
faddl
push
and
fsubrs
aaa
fmulp
xor
rcl
xchg
add
cmc
test
rcl
test
in
bound
cmpsb
fldcw
push
jg
hlt
stc
push
cmp
cmpsb
jmp
xor
jb
pop
push
call
adc
rol
adc
xor
ds
mov
test
test
push
insb
add
cmp
ja
xlat
inc
js
mov
xchg
fisttpl
xlat
stos
jp
adc
nop
inc
movsl
push
sub
cmp
and
scas
mov
pop
js
mov
fdivrl
es
xchg
mov
jae
sbbb
andb
sahf
in
rcrb
cmpb
vmovaps
push
popl
or
xchg
mov
cmpsb
stos
mov
dec
out
push
pop
movsl
stos
stos
pop
push
jno
sub
idivb
add
repnz
movsb
and
inc
mov
movsb
inc
push
fnstcw
repz
repnz
sar
inc
rcrb
and
mov
add
movl
push
into
sahf
pop
dec
stos
andb
out
jnp
mov
mov
xchg
das
fnsave
and
ret
lcall
push
mov
add
in
cmp
mov
fs
and
arpl
adc
imul
imul
pop
clc
mov
cltd
mov
lahf
adc
pop
lahf
fisubs
gs
push
mov
repz
es
jae
pop
and
jo
lret
ret
xor
pop
fsubp
outsl
ret
out
or
lret
lcall
fldt
jmp
add
cmpsl
cmc
adc
inc
mov
mov
xchg
js
adc
or
gs
pop
inc
mov
xor
jge
pop
pop
sub
lret
repnz
lahf
mov
inc
repz
pop
jp
mov
jnp
rorl
jmp
stos
mov
mov
sub
sbbb
int3
call
cmpb
dec
fwait
xchg
xchg
scas
cli
push
or
iret
or
jo
xor
jbe
out
cs
fisubl
loop
mov
stc
add
fcomps
pusha
mov
xor
pop
in
lcall
ljmp
add
fidivl
sbbb
orl
sub
ss
mov
sti
int
jecxz
test
int3
adc
jmp
inc
add
xchg
testb
push
cld
sbb
aam
lock
inc
sub
inc
jmp
in
inc
fbstp
fldl2t
push
or
lcall
lock
add
lahf
cmp
lea
mov
fdivrl
aas
cmp
ljmp
mov
adc
das
cmp
pop
out
mov
mov
inc
aad
sub
icebp
orl
in
or
dec
fldcw
or
mov
fisttpl
scas
inc
xchg
call
shr
dec
ret
mov
adc
inc
mov
in
jno
test
ds
push
nop
and
pop
xor
jb
jae
pop
sbb
ss
in
iret
pop
rcrl
scas
push
jns
jno
mov
jl,pn
loope
adc
dec
ffree
and
sbb
test
repnz
call
dec
shl
lock
mov
push
pop
jmp
ret
mov
dec
and
cmp
mov
clc
gs
or
adc
mov
cmp
movsb
push
gs
mov
out
mov
jp
leave
and
add
in
fnsave
clc
pushf
idivl
jl
fdivrl
xor
sub
mov
xchg
ficompl
jge
jb
mov
sbbl
pusha
fnstsw
imul
push
push
sbb
shlb
dec
daa
xchg
mov
or
dec
clc
xor
imul
and
aam
jl
push
inc
pusha
add
outsl
xor
es
adc
xor
adc
jne
rcrb
and
and
loope
or
movzwl
dec
xor
xchg
mov
imul
push
push
mov
and
test
add
repz
push
gs
cmp
mov
adc
clc
xor
jle
inc
dec
sbb
movsl
add
dec
roll
test
clc
jo
push
and
loopne
push
and
add
adc
dec
repnz
in
jo
pop
jo
pop
add
mov
pop
push
pop
push
popf
mov
cmpsb
aad
jle
mov
sahf
mov
fwait
xor
ret
scas
addl
stos
xor
sti
pop
pop
lock
add
adc
push
jl
lock
push
movsb
sub
adc
out
push
pop
shll
dec
insb
mov
mov
cmp
jne
mov
add
call
sarl
das
xor
or
push
vaddsubpd
dec
jge
int3
add
push
xor
cmp
dec
pop
aad
fidivrl
arpl
clc
shlb
in
mov
imul
pop
pop
addr16
arpl
or
jg
jns
lods
sbb
ficoms
bound
arpl
inc
fndisi(8087
mov
scas
pop
cmp
fs
pop
pop
inc
imul
lret
mov
ja
stc
loope
sub
mov
sbbb
mov
inc
mov
nop
icebp
jg
sbb
jae
scas
xchg
jne
inc
jo
and
cmpsb
pop
sbb
fisubl
dec
pop
scas
out
jp
mov
adc
dec
es
mov
jb
fcomip
cltd
push
rcr
aad
pop
test
leave
add
pop
rorb
imul
mov
out
jne
int3
stos
mov
push
movsl
push
mov
cmp
jge
mov
int
pushf
xor
scas
jno
sbb
fucomp
inc
jno
jge
mov
mov
sub
cmpsl
cmp
inc
mov
aas
dec
rol
push
cltd
xchg
ss
push
or
iret
mov
push
or
push
loopne
and
push
outsb
fldcw
cmp
daa
mov
addr16
pop
rorb
dec
cmp
fs
mov
mov
mov
xlat
jmp
outsl
jge
movsb
aad
xchg
lods
sbb
outsl
mov
es
pop
push
sbb
fldt
cmp
adc
loopne
in
mov
inc
lcall
mov
mov
inc
and
dec
xor
and
xchg
call
push
cmp
scas
pop
in
adc
cmp
or
mov
shrb
out
jo
mov
fnsave
mov
sub
jnp
or
xchg
fldl
fwait
pop
sbbb
dec
fisubrs
rolb
push
push
pushf
cmp
mov
repnz
and
fs
dec
aaa
mov
cmp
mov
mov
je
negl
sub
cmp
add
es
push
sbb
jbe
out
loope
dec
dec
mov
pushf
fisttps
pop
sub
inc
cltd
pop
dec
mov
stos
sub
dec
push
lods
xor
sti
lcall
jb
sub
inc
mov
ja
mov
fidivs
add
stos
mov
sti
sti
stos
mov
push
and
jb
mov
mov
push
iret
loopne
or
fnstcw
mov
mov
fwait
mov
test
dec
adc
pop
pop
stos
push
ljmp
arpl
push
xchg
cwtl
or
inc
stos
mov
ror
test
push
in
out
mov
jl
pop
adc
addl
sbb
icebp
fwait
xchg
pusha
dec
inc
aaa
jg
or
sub
std
mov
pop
lds
popf
jmp
fistps
pop
enter
fisubrs
ss
jmp
push
adc
dec
lcall
mov
sub
jae
or
lods
loop
roll
push
addr16
dec
pop
sbb
repnz
stos
xor
xor
push
push
cmc
adc
xchg
dec
inc
pushf
into
dec
fs
pop
fists
xor
hlt
loope
shr
lods
lock
ret
dec
orb
rcl
mov
arpl
ret
xchg
or
stc
popa
mov
sbb
jecxz
ss
pop
stc
xchg
xchg
js
jg
rclb
in
lds
mov
cmpl
cmpsl
mov
inc
sbb
sbb
inc
adc
adc
popa
xchg
repz
adc
addl
adc
mov
jecxz
cld
clc
lret
and
bound
inc
fs
inc
arpl
dec
mov
adc
or
lahf
mov
dec
push
xor
xchg
fidivrl
adc
mov
shl
mov
out
pop
xchg
and
out
gs
mov
shl
mov
popf
jb
cs
sub
xor
scas
daa
in
mov
lahf
int3
pusha
mov
je
dec
sub
aas
lods
mov
lahf
sbbb
pushf
inc
orl
stos
clc
cmp
lods
jle
mov
mov
cwtl
add
xchg
out
mov
add
roll
sbb
bound
mov
fdivr
fldcw
dec
jo
mov
mov
push
int3
pusha
stc
scas
orb
shlb
xchg
movsl
xchg
incb
pop
xor
inc
xlat
push
adc
lods
sub
int
fs
mov
jbe
enter
movsb
mov
adc
rcrb
std
and
jle
fcmovb
imul
fnsave
sbb
sub
bound
enter
mov
test
dec
cltd
in
pusha
and
lds
int
sbb
sbb
lcall
pop
inc
xchg
sub
mov
jo
mov
int3
aas
xor
xchg
int3
xor
lods
or
sbb
enter
pusha
pop
sbb
or
idivb
xchg
cld
je
neg
jle
mov
push
ja
mov
push
xchg
mov
mov
and
mov
imul
iret
stc
inc
mov
xchg
pop
pushf
and
bound
lds
int
in
stos
mov
push
popa
cmc
xlat
sti
mov
dec
ja
mov
pusha
pop
xor
mov
mov
add
or
ret
and
sbb
pop
and
add
aam
shr
ljmp
ja
push
or
jnp
nop
popf
into
mov
pop
lret
mov
in
je
dec
xorl
test
scas
lods
notb
add
sti
fidivs
jle
negb
out
mov
and
cli
fcmovnbe
lock
mov
rcrl
mov
call
dec
cmpsb
sub
inc
push
mov
mov
dec
imul
loope
into
fdivrl
inc
xchg
aam
jge
scas
mov
jno
aad
or
adc
je
ret
adc
int
cmp
repnz
scas
cmp
adc
push
mov
push
dec
inc
mov
mull
mov
cmp
imul
xor
rol
mov
sbb
lret
fcmovnb
movsb
push
sbb
arpl
popa
es
adc
mov
lcall
mov
iret
sbb
add
xchg
fs
stos
sub
or
xchg
sub
push
xchg
ficoml
or
int
scas
stos
aad
shll
pop
and
xchg
mov
mov
frstor
fwait
aam
xor
inc
xor
scas
test
nop
lret
js
inc
stos
add
fsubrs
arpl
push
addr16
lret
dec
push
movsl
dec
outsb
andl
mov
shrl
push
scas
mov
lea
inc
dec
jg
adc
pop
test
fldt
psllq
test
pop
lods
dec
xchg
lcall
imul
scas
sbb
ret
sub
adc
jle
jp
pop
icebp
push
dec
insl
out
jns
pop
sbb
daa
idivl
fstp
push
sub
scas
jle
ret
mov
repnz
and
sbb
xchg
aaa
mov
pop
in
outsb
pop
imul
loop
and
lcall
imul
aas
rcrb
or
adc
pop
fstps
and
inc
fsubrl
push
fnstenv
lods
pmullw
cs
adc
sbbl
dec
xchg
out
pop
cmp
popf
or
aad
or
jmp
adc
xor
inc
js
mov
and
popa
fimull
mov
jecxz
lret
xchg
add
mov
repz
sub
mov
std
movsb
mov
jae
pushf
xlat
fbld
in
shrl
cmc
imul
shll
or
and
inc
mov
int
cwtl
or
or
inc
jns
pop
dec
sti
xchg
in
sub
fwait
jb
popf
addb
repnz
loopne
xor
inc
pop
ja
in
jge
xchg
pop
fsubrl
outsb
in
push
sub
imul
xor
dec
inc
rcl
int3
bound
popf
sub
sub
sub
popa
xchg
lea
pop
pop
fisubs
mov
mov
add
jno
ljmp
nop
jl
mov
push
mov
adc
adc
mov
sahf
clc
jecxz
adc
js
mov
or
cli
sti
fcoml
mov
addr16
and
sbb
mov
bound
mov
add
ds
cmp
es
xor
or
popf
inc
mov
movsl
dec
add
sarb
lahf
xlat
popa
push
lock
in
sbb
mov
xor
nop
pushf
gs
stc
test
hlt
ret
jle
inc
imul
in
add
jp
loope
mov
push
test
je
stc
add
rcrb
ret
mov
pop
scas
nop
insb
fwait
and
inc
pusha
xchg
or
push
int
fstpt
test
cmp
push
push
dec
mov
inc
dec
cwtl
adc
jae
fsubrl
push
inc
adc
div
xor
adc
out
and
pop
add
out
push
mov
fnsave
int
es
pop
xor
lea
xchg
pop
aas
outsl
mov
cmp
insl
es
cmp
pop
pop
mov
decl
out
inc
xchg
lds
test
daa
bound
cmp
adc
call
adcb
in
leave
inc
stc
jp
inc
adc
test
mov
push
lahf
std
and
push
rol
rolb
movsb
inc
ds
inc
cmpsb
in
xchg
sbb
jecxz
iret
lods
mov
sbb
inc
inc
pusha
xchg
lahf
jecxz
pop
fs
adc
sub
adc
iret
ret
js
xor
inc
dec
loop
mov
mov
int
orl
inc
xor
jle
adc
fistpl
xchg
push
cs
jge
mov
aaa
dec
dec
loop
cmp
int
dec
call
jns
pop
sub
sbb
pushf
push
repnz
cltd
jnp
cmpl
shrb
test
std
jmp
fcoms
cmp
scas
fnsave
andl
inc
mov
mov
add
push
or
and
push
aam
jo
insb
mov
xor
insb
mov
ljmp
lods
sbb
mov
aad
repnz
adc
repz
push
push
adc
mov
mov
mov
outsl
cmp
sub
stc
sbb
movsb
daa
rcrl
mov
mov
sbb
outsl
in
xchg
pop
or
sti
mov
sub
mov
push
pop
and
xchg
fadd
dec
jge
sti
inc
mov
adc
inc
xor
roll
jmp
jmp
adc
clc
test
and
xor
fwait
mov
loop
in
loope
mov
push
mov
int3
add
dec
pop
cmp
mov
into
enter
xchg
and
loopne
cmc
ljmp
lds
mov
mov
xchg
add
cli
addl
icebp
mov
imul
mov
ss
and
stos
ja
inc
cmpsb
cwtl
jae
jbe
xchg
or
rcrl
ss
aas
cmp
mov
mov
lahf
mov
push
imul
mov
push
jne
sbb
rcr
inc
out
shll
mov
jnp,pn
jo
outsb
in
inc
pop
sbb
out
movsb
daa
sub
in
outsb
incb
xchg
in
cmp
test
sbb
std
je
fs
stos
mov
dec
xlat
push
in
popf
scas
xchg
jmp
inc
mov
sarb
dec
xor
leave
movsl
adc
stc
enter
mov
fmul
dec
and
pop
push
cs
cmp
pusha
mov
andb
add
mov
nop
out
sahf
pop
cli
mov
jo
cmp
pop
pop
fisubrl
inc
mov
shll
inc
stos
mov
push
add
fwait
sti
add
dec
mov
cld
pushf
mov
mov
aas
adc
push
mov
cmp
pop
rol
fiadds
inc
popf
mov
jp
pop
xor
mov
leave
push
movsl
push
daa
mov
mov
out
jns
mov
lret
add
in
pusha
sahf
and
in
push
cmp
test
mov
jmp
and
push
mov
psraw
in
sub
jge
and
dec
and
dec
dec
test
sahf
pop
addl
push
call
push
out
outsb
int3
cmp
stc
mov
mov
inc
into
out
dec
std
arpl
mov
or
mov
aas
dec
cmpsb
fisttps
xchg
dec
leave
lcall
mov
fs
mov
sahf
pop
pop
int3
insb
adc
add
mov
dec
ds
jnp
popf
roll
movsl
dec
int
in
test
jnp
sbb
faddl
sbb
out
cmp
sub
lea
sbb
cmpsl
divb
mov
das
gs
sbb
mov
repnz
sti
sbb
cli
mov
test
cmpsl
mov
inc
int
sbb
shll
enter
mov
push
inc
jbe
add
jg
or
cmc
jmp
mov
xor
mov
dec
xor
inc
bound
out
dec
sbb
adc
mov
mov
test
neg
push
rcl
pop
mov
mov
into
orb
mov
add
cmpsl
fsubs
cld
mov
push
xchg
and
in
repnz
flds
sarl
push
stc
inc
and
push
subl
cmpsb
outsl
mov
sub
inc
popa
ds
insl
pop
loopne
jecxz
fcoms
sbb
nop
fistl
ja
addr16
out
cmpsl
pusha
pop
aaa
or
decl
pushf
cmpsl
mov
cmc
or
inc
into
pushf
push
xor
nop
cmp
iret
pop
push
scas
jno
sbb
orb
push
out
mov
movsl
push
push
push
ret
and
jle
add
push
repnz
xor
pop
icebp
pop
push
mov
lahf
int
push
add
lds
dec
push
jl
adc
dec
xor
aas
and
add
imul
dec
xchg
loop
divl
in
jb
mov
jmp
add
leave
adc
movsl
loope
imul
mov
and
cwtl
idivl
pushf
sub
test
jns
daa
adc
push
orb
dec
inc
sbb
push
cld
dec
sbb
out
movsl
mov
lods
xor
mov
insl
imul
jns
arpl
andl
xorl
and
rcll
movsl
loopne
test
xor
mov
pushf
andb
test
push
inc
xor
in
push
pop
outsb
dec
fsin
inc
dec
and
pushf
mov
mov
mov
aas
sub
stos
mov
xor
jns
mov
xchg
ds
push
sub
or
insb
sub
dec
sub
pushf
or
dec
mov
sub
cmp
dec
shr
inc
jmp
dec
call
xchg
pop
adc
mov
pushf
lock
lea
aam
scas
das
xchg
cmpsl
xchg
lea
push
ja
pop
lea
inc
xor
jb
mov
lahf
xchg
xor
fdivrs
or
call
mov
and
pop
sbb
sub
jg
test
sbb
mov
es
xchg
ret
push
fstps
mov
adc
mov
sbb
imul
add
push
add
sub
ss
fstp
mov
daa
outsb
add
mov
sub
cli
jb
jno
lea
lea
or
jne
loopne
bound
enter
cwtl
jmp
mov
mov
pop
xor
cs
repnz
adc
cld
sbb
in
adc
jne
loope
pop
arpl
push
fnstenv
stos
push
adc
pop
push
cltd
jae
sub
xor
andb
jne
jle
sbb
movsb
repz
sub
mov
push
leave
scas
into
pop
xchg
shll
and
adc
ror
jne
fimuls
jge
adc
mov
xchg
call
mov
pop
stos
leave
adc
xor
push
and
cmp
test
lret
mov
mov
pop
mov
cwtl
icebp
dec
in
ljmp
dec
add
aad
addr16
cli
arpl
adc
or
out
pop
and
and
ret
adc
push
pop
cmp
lock
xchg
fnsave
testb
loope
xchg
shll
aad
jmp
cwtl
int
int
inc
or
xchg
push
jecxz
pop
jbe
xchg
add
out
and
or
mov
jg
lcall
or
ret
xchg
scas
or
xchg
cmpl
mov
ss
adc
ss
rcr
repnz
dec
pop
cld
clc
jno
push
mov
icebp
mov
adc
addl
jne
inc
and
xchg
and
xchg
fidivrs
sbb
or
daa
and
loope
mov
mov
dec
ss
or
jno
iret
int3
jmp
jg
orb
movsb
scas
push
roll
inc
stos
andl
arpl
sbb
fs
cmp
ljmp
add
movsb
mov
mov
xchg
test
hlt
rorl
mov
xor
mov
push
jp
ja
ret
pop
repnz
push
mov
test
ret
xor
ret
sbb
cmp
inc
cmp
es
inc
scas
pop
inc
mov
arpl
pop
cmp
push
push
add
bound
fnstcw
pop
imul
xchg
pop
fs
shrb
adc
stc
scas
push
int
shlb
xor
mov
lods
fcmovb
push
test
addr16
xchg
fs
sub
sub
ss
xchg
and
jo,pn
inc
rcrl
sub
stos
or
mov
shrb
rclb
jmp
and
mov
out
cmc
inc
aaa
mov
mov
mov
stos
mov
aas
clc
cwtl
out
push
aam
cli
rcr
pop
jle
cwtl
adc
lahf
dec
faddp
subl
fwait
add
push
fcomip
lds
fstpt
sar
xor
lock
cmp
pusha
out
adc
pop
addb
js
movsb
popa
subb
mov
jmp
aad
mov
jle
jg
xor
sub
test
jle
xor
cmp
adc
call
dec
xchg
lret
and
ja
sub
dec
push
std
adc
sub
jbe
xchg
or
mov
cmpl
ds
jecxz
push
inc
test
pop
mov
or
mov
cmpsb
inc
and
xchg
push
pop
cmpsl
in
outsb
cmp
mov
mov
or
shl
add
sbb
pop
push
pop
push
adc
test
xor
mov
sbb
repz
subb
sub
sub
inc
xor
adc
rolb
sub
fnstsw
test
ret
mov
or
sub
fs
jns
inc
addr16
les
or
inc
nop
push
mov
dec
lret
inc
mov
push
cmp
cli
add
inc
roll
inc
jge
imul
fbld
sahf
adc
gs
push
pop
mov
decb
daa
push
aam
xor
push
test
call
inc
test
je
add
mov
adc
cs
ljmp
lea
rolb
stos
shlb
mov
mov
or
nop
jl
dec
mov
dec
ret
cmp
cli
or
call
loopne
and
mov
cmp
xchg
out
iret
test
mov
imul
popf
sbb
stos
dec
into
dec
xchg
stos
ret
xchg
testb
test
pop
js
inc
jp
das
xchg
fsub
movsl
lahf
cmp
int
pop
pop
pop
push
or
xor
sub
xchg
pushf
sub
sbb
test
call
xchg
nop
rorb
stc
popa
sbbb
push
mov
mov
iret
or
mov
lds
repz
jae
dec
mov
fmulp
sbb
mov
inc
in
cmp
insl
jbe
cltd
dec
mov
stos
dec
push
lret
mov
jle
jp
mov
mov
iret
pop
adc
out
or
movsl
popf
sub
stos
mov
bound
aaa
pop
cltd
icebp
push
rol
addb
cltd
jmp
jno
or
pop
popf
cmpsb
pop
notl
xchg
cmpsl
and
xchg
adc
pop
pusha
inc
jge
fstl
sbb
nop
jecxz
bound
add
dec
xchg
cmp
popf
leavew
mov
sub
jae
sbb
jmp
fstpt
enter
rcrl
mov
repnz
inc
sbb
orl
ds
push
cmc
add
and
fnstcw
fucomi
adc
ds
or
repz
mov
inc
mov
scas
es
sti
adc
pop
dec
cwtl
rcr
popa
adc
jbe
enter
shr
or
cs
dec
and
push
add
stos
mov
adc
fdivrs
mov
sub
mov
add
cmp
shrl
sbbl
xchg
stos
sub
add
fidivrs
sbbl
jmp
mov
loop
push
aad
rsqrtps
call
push
ja
ja
dec
cltd
push
lret
fsubr
push
scas
push
ficoms
outsb
mov
add
or
mov
scas
es
aas
xor
or
rolb
outsb
jnp
xor
cld
push
rcl
push
shlb
leave
cli
in
div
sbb
add
insl
push
fiaddl
shufps
cmp
lcall
xor
cmp
sub
shl
mov
sub
jge
jae
subl
pop
cmc
mov
nop
mov
js
cli
dec
sub
push
xor
push
sbb
in
inc
js
sbb
push
mov
add
cltd
push
add
xchg
scas
jmp
xor
push
push
adc
nop
cmp
xor
or
mov
inc
gs
mov
add
add
add
inc
stc
add
pop
enter
into
out
cld
or
vpmaddwd
jns
adc
fwait
sahf
subb
lret
sub
xor
dec
cmpsl
orl
lcall
out
fwait
es
xchg
loopne
outsb
in
inc
bound
mov
fmul
clc
sbb
aam
cltd
add
mov
push
sub
pop
xor
xchg
sub
test
call
pop
jl
les
lds
jg
inc
push
std
jl
push
bound
inc
icebp
mov
push
pop
cmp
int3
jns
inc
xchg
adc
cmp
or
fcoms
sbb
add
mov
adc
insb
mov
mov
int3
and
jecxz
sub
in
lcall
sbb
dec
lods
aaa
mov
jb
sarl
pop
test
imul
mov
dec
ss
adc
xchg
dec
sbb
cmpsl
push
arpl
push
iret
daa
push
and
xlat
fimuls
or
pop
jae
xchg
add
push
xchg
pop
pop
jne
cmp
arpl
jle
adc
mov
dec
mov
ret
sub
std
loope
fildll
ljmp
popf
sbb
jmp
add
dec
dec
mov
pop
fistps
fnstenv
inc
mov
aam
std
mov
inc
add
jne
jecxz
add
jno
pushw
fdivrs
in
xchg
outsl
stc
in
js
je
jl
dec
mov
dec
fisubrs
aad
cmp
clc
daa
push
pushf
in
sbb
arpl
mov
aaa
pop
or
mov
jecxz
imul
movsl
inc
cwtl
pop
ljmp
lret
mov
xchg
negl
xchg
iret
insb
cwtl
out
jno
sub
sbb
call
and
dec
dec
push
idivl
inc
lret
shlb
pop
jge
in
jmp
mov
sub
cmc
hlt
xchg
inc
mov
cs
pop
iret
imul
bnd
push
test
es
inc
loop
pushf
jae
fstl
mov
pop
aaa
je
insb
jl
inc
pop
cwtl
push
lcall
mov
and
or
xchg
imul
inc
scas
add
stos
pusha
leave
cmpsl
pop
and
xor
rcrb
data16
jno
mov
inc
adc
pop
cld
ss
shrl
cmp
rcll
dec
xchg
addb
fwait
sub
xchg
add
cltd
aam
mov
inc
lret
inc
test
fmull
pop
add
das
ficoml
inc
xchg
pop
je
dec
sar
js
mov
stc
mov
push
insl
out
or
sub
dec
cmp
pushf
or
pushf
dec
mov
cmp
sbb
outsl
adc
xchg
and
fldcw
xchg
pause
fldt
sub
cmc
and
jle
fisubrs
insb
repz
inc
push
sub
sub
adc
shrl
pop
fistps
mov
cmp
pop
mov
cmc
mov
test
data16
push
in
iret
and
enter
xchg
das
mov
mov
lret
imul
pop
sub
cmp
or
pop
fisubrs
enter
inc
addb
fstps
data16
popa
mov
movsb
and
test
rcll
xor
scas
rcl
mov
je
xchg
leave
inc
jnp
repnz
and
and
and
mov
xchg
jge
jg
push
and
cmp
aas
loopne
shrb
push
sbb
pusha
fstpt
imull
ljmp
mov
je
pop
push
je
stos
sbb
mov
shlb
mov
out
add
arpl
fldcw
ja
pop
inc
sbb
popa
lahf
cmc
jno
xchg
and
pop
mov
clc
lret
outsb
pushf
mov
clc
into
neg
testl
jmp
jg
sub
mov
fldl
nop
les
int3
cmp
sub
outsl
or
insb
adc
mov
fcmove
jne
mov
loopne
enter
pop
dec
pusha
mov
mov
negb
jle
stos
clc
push
loopne
aam
fsubrs
pxor
jnp
lahf
mov
pop
stos
cltd
fmul
cmp
push
or
sub
sub
fdivrs
mov
push
fdivrs
dec
mov
ljmp
or
out
mov
out
push
lret
in
rolb
test
int
fidivrl
jae
jb
sbb
cmpsl
popa
iret
pushf
sbb
das
inc
xor
jl
mov
or
cs
jg
imul
scas
mul
lods
ficoms
fildll
scas
xor
scas
rcrl
xor
xor
ljmp
movsb
iret
and
xchg
test
and
aad
ss
aas
inc
aaa
subb
lret
fs
popf
adc
gs
pop
xchg
pusha
sbb
xchg
or
jb
roll
jnp
xchg
popa
sub
jl
lock
mov
test
and
mov
pop
rclb
cwtl
fsubrs
mov
dec
sub
test
jle
push
mov
sahf
cmpsl
ds
inc
lods
pop
cmpl
jne
hlt
lret
pop
lahf
data16
inc
pop
and
mov
mov
ret
int
adc
xor
jbe
loop
into
sbb
and
dec
lods
xchg
xor
mov
mov
ja
paddsw
mov
icebp
xchg
sahf
or
arpl
les
loop
std
jge
popf
je
dec
adc
lock
dec
add
xor
mov
in
sub
adc
popa
mov
pop
filds
mov
out
sbb
sbb
daa
insl
xlat
lret
or
or
mov
pop
fwait
pusha
lret
lret
sub
hlt
ss
pop
cltd
notb
xor
sub
stc
xor
sbb
scas
gs
popa
push
mov
adc
inc
lcall
lock
scas
dec
adc
push
cltd
into
call
pop
andl
jle
mov
lcall
add
in
mov
jecxz
movsb
cs
enter
push
stc
pop
inc
add
insl
outsb
sub
jecxz
dec
dec
and
outsb
stos
shlb
arpl
enter
out
lods
adc
mov
adc
and
shll
ss
and
adc
repz
cmp
push
dec
push
and
in
cmp
out
jle
add
test
shll
push
je
aaa
push
push
pop
imul
test
testw
rcrl
ljmp
dec
jb
sub
cmc
lock
pop
test
daa
ljmp
mov
fisubl
and
pop
push
jg
cwtl
pop
and
movsl
movlps
popf
push
sub
daa
add
js
shrl
into
shl
fsubrs
outsb
mov
push
inc
lods
mov
cmp
xchg
xchg
sbb
leave
insl
fstpt
sahf
lcall
push
lahf
in
push
cmp
pop
xor
bnd
jb
jo
mov
loop
jns
push
loopne
inc
repnz
cmp
xor
fildl
jmp
lret
and
mul
mov
mov
mov
cmp
cmpsl
outsl
stc
dec
xlat
fmul
push
mov
xor
test
push
add
mov
xchg
clc
dec
leave
jg
repnz
insl
popf
add
les
pop
repnz
or
or
loop
lret
in
test
sbb
mov
loopne
xor
jb
daa
stos
push
dec
jl
popf
adc
dec
push
xchg
xor
adc
adc
pop
or
sub
cmpsb
adc
mov
lahf
sbb
xchg
dec
cmpsl
call
call
out
lret
cld
lret
dec
lods
jmp
sub
shrl
test
lock
adc
sub
and
mov
fsts
cmc
lret
adc
adc
aas
pop
mov
cwtl
or
loop
pop
gs
sbb
das
push
jbe
adcb
fmuls
sbb
jg
ds
arpl
jae
and
mov
xor
mov
out
fwait
or
std
arpl
sub
mov
sub
inc
fwait
lcall
rcll
sbb
sub
enter
or
in
sub
daa
jg
shlb
sub
popa
ds
mov
insl
int3
insb
pop
add
xchg
hlt
sbb
jmp
ss
pop
xor
pop
cmpsl
xchg
pop
mov
ret
mov
inc
add
xor
xor
xchg
push
pop
mov
sub
push
movsb
mov
mov
pop
nop
mov
pop
seto
shl
mov
inc
test
sub
dec
xchg
out
mov
fldcw
xchg
pop
test
add
inc
fmuls
xor
lret
pop
inc
in
pop
add
pusha
dec
push
sti
out
and
daa
mov
and
addr16
adc
pusha
cmpsl
mov
or
mov
imul
cmp
cltd
fistl
xchg
push
mov
xor
adc
jg
adc
jp
popa
loope
lret
repz
cmp
inc
in
xchg
shll
inc
adc
sub
xchg
sub
outsb
xchg
jbe
popa
outsl
xlat
pop
outsl
out
ds
inc
push
mov
sahf
mov
xchg
nop
loopne
test
jae
scas
mov
addr16
push
cwtl
enter
and
fmuls
inc
jae
cmp
sub
sarl
int
add
and
mov
jle
mov
xor
sub
lods
xchg
fisubl
ss
mov
cld
jecxz
jb
or
fldt
shll
lret
notb
add
daa
popl
inc
and
sqrtps
and
mov
dec
mov
pop
dec
xchg
push
jle
filds
xchg
pop
popa
and
sbb
rcrl
mov
rcr
insl
lret
jg
ja
enter
std
out
test
jp
fs
add
stc
jp
btsl
cmp
outsl
mov
xor
mulb
jl
mov
out
add
sub
xor
jecxz
je
push
shll
push
int
out
or
es
insl
jmp
std
out
adc
repnz
cmp
hlt
add
out
arpl
mov
orl
push
shll
lods
and
jp
cltd
dec
lahf
mov
xor
enter
jecxz
mov
pushf
add
data16
cld
mov
repnz
test
mov
leave
mov
cli
test
movsb
notl
imul
or
adc
or
add
sbb
repz
jo
lret
mov
lcall
jl
sub
pop
mov
pusha
adc
loope
jnp
dec
outsb
adc
mov
xor
pushf
dec
fsubr
pushf
shrl
imul
popf
and
aas
fbstp
dec
inc
rorb
jecxz
in
inc
out
jecxz
fwait
das
es
test
xchg
mov
cmpsl
mov
pop
xchg
inc
std
cwtl
call
fiadds
test
nop
mov
shrl
mulb
insl
pop
imul
push
push
repz
mov
rolb
fsts
jns
jns
pop
xchg
cmp
inc
xchg
in
fistl
inc
lcall
inc
cwtl
add
sbb
ljmp
inc
pop
push
mov
test
push
jb
lods
push
clc
rol
repnz
mov
mov
bound
das
aam
in
aam
mov
scas
and
lcall
cld
test
xor
inc
test
mov
push
jbe
add
or
dec
pop
mov
dec
mov
cmp
jmp
cld
xor
xchg
in
in
xchg
mov
xor
ret
mov
mov
pop
lock
mov
xor
into
jmp
jne
adc
pushf
xchg
jo
lret
inc
add
add
pushf
add
fs
dec
and
lea
dec
stos
mov
adc
stos
push
js
shll
in
push
mov
sub
shlb
mov
mov
add
adc
ds
test
jo
stos
ret
cmp
xchg
push
popf
push
into
mov
and
xchg
push
cmpsl
sub
ficomps
push
pop
xchg
sub
push
mov
nop
pop
test
fcmovne
add
inc
pop
push
jge
mov
or
ficoms
xlat
pushfw
add
pop
xorl
cld
imul
sub
int
push
sbb
cmp
in
pop
adc
xor
divb
push
loope
cltd
pop
adc
out
sbb
jno
dec
adc
imul
dec
dec
jbe
push
mov
ljmp
mov
mov
dec
pop
call
imul
adc
cltd
dec
xchg
jge
dec
scas
test
inc
xchg
xchg
mov
ja
mov
ficoms
fidivs
lock
shlb
jno
dec
lods
fcompl
push
xchg
test
jp
sub
sub
fldl2e
cmp
sub
imul
shrl
mov
sbb
cmp
fsts
dec
push
xor
mov
add
xchg
xor
bound
fdivs
loop
xchg
and
loope
xchg
and
sbb
push
add
and
sub
xchg
xlat
sbb
mov
sbb
jno
andl
xor
inc
dec
sti
push
xchg
inc
cltd
jmp
or
ja
lahf
fwait
xchg
mov
mov
jns
cmp
popf
shll
in
rolb
nop
shrb
sbb
not
iret
push
and
adc
lcall
mov
and
cs
jnp
bnd
jns
add
bound
jne
inc
mov
test
xchg
xor
cmp
andl
les
push
sbb
fucomi
xor
je
adc
stc
pop
lret
mov
int
and
mov
out
cwtl
jo
pop
aas
push
cmp
cmp
push
mov
fucomi
fmull
jne
or
push
add
xor
and
dec
xchg
jb
mov
fidivrl
loopne
gs
mov
nop
inc
jle
das
decb
movsl
ret
inc
popa
daa
stc
nop
inc
sub
cmpl
mulw
out
pop
pop
mov
mov
jecxz
mov
xchg
mov
sbb
push
sahf
loop
mov
test
jg
pop
lea
lock
shll
mov
mov
cmp
test
adc
jg
xchg
ljmp
insb
add
inc
popf
and
xor
adc
and
jo
and
jecxz
sub
inc
mov
xchg
mov
sub
jo
sbb
int
divl
stos
inc
adc
ja
dec
movl
mov
mov
aad
jne
rolb
fucomi
jl
ret
mov
imul
sbb
jno
mov
fnstcw
fisubs
or
outsb
dec
push
movsb
in
jo
and
fmulp
daa
jno
ss
out
int3
push
inc
mov
xchg
inc
or
daa
mov
test
outsl
sbb
jns
mov
cmc
cmp
aad
push
sbb
cmp
xchg
loope
pop
div
imul
aad
sbb
fimull
cmp
rorl
and
call
cmp
add
jp
cltd
push
int3
jns
xor
das
cmp
mull
ret
mov
cmpb
loope
sub
fcoml
inc
jmp
sub
cmpsb
mov
and
das
jnp
mov
jmp
jmp
sub
inc
cmp
jo
aaa
mov
shlb
mov
xor
mov
or
loope
dec
xchg
cmpsl
xchg
pop
loop
movsl
push
aaa
push
js
cmpsb
cli
push
fdivrs
dec
hlt
repnz
and
jnp
push
fcmovu
call
mov
jl
sbb
or
es
and
inc
pop
mov
xorb
mov
xchg
sub
pop
sbb
mov
xor
and
xchg
and
jmp
jo
aad
dec
or
xchg
inc
arpl
mulb
mov
flds
mov
imul
test
sbb
ret
and
mov
pusha
fisubrs
lret
cltd
push
pop
pushf
popf
test
push
fiaddl
popf
inc
add
es
and
lret
insl
mov
pop
mov
lcall
fnstenv
testb
cmp
in
data16
aas
stos
cmc
sub
pop
or
pop
cmp
add
sbb
or
fldl
add
lods
test
stc
loopne
push
stc
sahf
mov
pusha
mov
mov
dec
xchg
andb
xor
orb
jmp
xchg
xchg
inc
sub
lods
scas
dec
mov
push
dec
movsl
mov
loopne
mov
addl
sbb
jno
fisttpll
roll
cld
dec
loope
mov
push
add
dec
scas
sbb
add
jae
enter
pop
ss
dec
jg
fmull
loope
push
mov
jb
pop
and
and
xchg
test
test
nop
sub
test
rcrb
mov
jge
lret
mov
mov
sub
inc
andb
adc
or
mov
repnz
sub
cmp
inc
push
das
ljmp
lds
stos
mov
sbb
xchg
lods
inc
dec
jg
aad
and
or
pop
repnz
push
jp
lcall
gs
daa
test
pop
sbb
sub
loope
icebp
push
mov
out
dec
clc
leave
sub
inc
cli
push
sbb
or
inc
push
pop
mov
pop
out
int
fldcw
pop
mov
dec
mov
pop
pop
xor
add
xor
test
push
adc
lods
enter
push
mov
outsl
mov
lea
cmp
fadd
push
insb
pop
addr16
pop
movsb
cmp
pop
mov
inc
jp
aaa
jns
aas
gs
push
fstpl
ds
pop
jne
cmp
popa
sub
rorb
outsl
mov
fdivl
mov
fsubrp
jno
inc
dec
add
pop
cmp
inc
loopne
xchg
xor
pop
idivl
jns
fdivrs
stc
mov
inc
push
xchg
pusha
inc
push
push
push
leave
movsl
dec
mov
and
mov
mov
lods
std
in
das
jo
xchg
mov
xchg
xchg
or
add
adc
sbb
insb
jbe
add
and
mov
or
xchg
mov
adc
jo
popf
push
sbb
neg
cmc
fs
lds
frstor
jno
add
les
sub
xchg
loope
les
mov
add
jnp
lds
xor
enter
out
add
xchg
jb
push
mov
and
xchg
push
leave
and
mov
es
dec
cmp
mov
bound
push
jnp
cmc
xor
xchg
sbb
mov
inc
mov
sbb
rorb
xor
imul
insl
jns
mov
cmp
or
inc
test
and
jb
add
sub
pop
movsl
xor
push
or
aam
jecxz
hlt
jg
sbb
gs
and
add
int
lds
sub
inc
jb
and
mov
push
je
jp
fsubs
mov
inc
cmpsb
push
test
sti
add
hlt
mov
out
outsl
jg
int3
pop
ja
xchg
sarb
bndldx
in
ja
mov
shrl
loop
mov
loop
cmpsb
pop
mov
jns
call
or
test
mov
xor
call
imul
pop
pop
xchg
mov
dec
movsl
jbe
mov
data16
ss
lret
test
push
dec
pop
movsb
shl
mov
mov
push
cltd
arpl
mov
pop
imul
rol
pushf
arpl
repnz
jo
add
or
dec
xchg
aad
mov
jg
dec
push
inc
or
movb
and
and
add
mov
bound
mov
lods
mov
add
lods
loopne
mov
push
std
sar
xchg
cmp
or
adc
cwtl
decb
xor
dec
int
clc
in
push
filds
push
adc
sub
lcall
cmpsb
mov
add
mov
push
ret
ljmp
sbb
out
js
mov
insl
xchg
add
push
stc
pop
iret
out
add
subl
cwtl
xchg
clc
stos
lods
mov
add
push
sub
movsl
lcall
xchg
lds
int3
pusha
jmp
mov
sbb
lock
inc
fs
sub
ret
mov
jne
mov
les
popf
in
movsl
call
mov
insl
pop
shlb
pusha
sbb
sub
mov
mov
dec
out
nop
cmp
sbb
loopne
sub
in
pop
out
or
inc
xor
ljmp
subb
mov
or
dec
mov
push
shl
fidivs
rolb
push
clc
and
dec
lea
hlt
lret
loop
xor
pop
jb
nop
aad
out
cmp
mov
jmp
adc
xchg
mov
xchg
sub
out
aaa
clc
sbb
push
aad
fcmovnbe
sbb
push
push
loop
xchg
inc
cld
mov
mulb
pop
repz
rorl
add
push
fdivr
movb
int
mov
add
xor
sbb
ss
arpl
adc
insl
xchg
jns
popf
dec
icebp
inc
cmp
adc
mov
mov
mov
sub
outsl
gs
lock
lods
jecxz
lds
lret
popa
call
or
push
and
fdivrl
or
sbb
cmp
in
mov
and
jmp
sub
mov
repnz
inc
mov
push
or
inc
dec
into
dec
or
jge
xor
add
lcall
push
cld
mov
push
clc
loopne
xor
daa
push
outsb
xor
jae
dec
scas
loop
xchg
dec
mov
std
pop
or
outsb
or
and
pop
in
adc
mov
cmp
fcoml
repz
call
push
cwtl
xor
and
sub
leave
fcoml
sub
xor
dec
sbb
xchg
cmpsb
adc
pop
out
pop
push
test
add
inc
enter
add
pusha
sub
adc
xlat
jecxz
sbb
dec
adcl
lods
or
xchg
push
push
cmpsb
fwait
imul
sti
cs
pop
inc
ds
shrb
add
and
fildll
adc
xchg
pop
jb
pop
xchg
test
popf
repz
push
lods
loope
insb
les
push
mov
loopne
cmpsl
das
imul
cmc
xor
aad
outsb
popf
lcall
les
and
lock
jmp
rol
loope
dec
pop
xchg
xchg
mov
xchg
rol
pop
sbb
push
fisubrl
mov
int3
arpl
in
into
out
insl
std
sar
lret
or
fs
ja
iret
arpl
nop
bound
insl
mov
in
pop
fdivl
mov
xchg
and
mov
cltd
cmc
fcompl
or
subb
cmpsb
adc
fwait
jo
aaa
sub
orl
adc
int3
js
dec
adc
lret
xor
divl
inc
fsubrl
jecxz
cmp
mov
push
mov
push
or
adc
mov
cmc
inc
and
imul
out
test
fcomps
and
xlat
and
jne
inc
sahf
ljmp
mov
inc
add
adc
adc
dec
int3
pop
mov
mov
mov
les
enter
testb
dec
push
xchg
sbb
es
mov
cmc
xchg
leave
and
mov
je
push
lret
jne
fwait
out
repnz
adcb
enter
insl
and
xchg
js
or
filds
push
cmp
mov
push
push
sbbl
scas
xchg
lea
je
sub
insb
pop
cltd
inc
sub
sbb
cld
or
in
sbbl
outsl
xchg
cmp
pop
pop
or
pop
lea
testb
sbb
jbe
cmpsb
stc
xchg
shll
and
inc
sub
push
push
out
push
sbb
mov
jl
mov
inc
lods
mov
lods
leave
lods
outsl
mov
cwtl
stc
adc
jns
scas
insb
sbb
jnp
rorl
adc
inc
push
das
iret
in
push
clc
push
or
mov
ljmp
adc
rorl
test
cmp
lea
sahf
sbb
xchg
mov
hlt
shl
inc
scas
icebp
xor
loope
xchg
out
ja
lods
imul
rcrb
movsl
divl
xchg
and
dec
mov
fwait
aam
dec
sbb
dec
cmp
fwait
jecxz
or
test
out
add
dec
xchg
dec
nop
cld
mov
stc
cmp
xor
aad
test
sbb
sub
ficompl
cwtl
js
lods
sub
sub
lock
add
inc
sub
mov
mov
pop
jb
fs
popa
inc
dec
movsb
mov
mov
pusha
or
in
call
cmp
mov
sbb
and
xchg
add
fldz
adc
std
pusha
or
out
aam
push
and
stc
dec
adc
inc
popa
sbb
loopne
sub
sbb
movsl
or
fsubl
xchg
popa
lcall
neg
filds
jns
ds
sub
jmp
sbb
icebp
mov
and
hlt
bound
iret
ds
insb
mov
mov
imul
out
push
mov
repnz
sbb
imul
out
sub
fisubrl
jmp
mov
pop
mov
cmp
inc
lock
aam
cmp
loope
xchg
lock
jg
fwait
jnp
mov
or
dec
mov
push
adc
std
fcoml
sti
lods
and
xor
pop
mov
lea
fldcw
popa
in
shlb
out
orl
ret
out
hlt
adc
lret
push
repnz
and
ds
cmp
push
cmp
clc
cmpsl
or
dec
push
push
xchg
insb
stc
inc
mov
std
xor
call
test
clc
ret
xchg
mov
sbb
jg
jge
pop
mov
out
cmp
pop
pop
or
mov
push
mov
out
stc
push
mov
sub
stc
fwait
outsl
data16
test
cmp
ljmp
les
mov
int
xor
loop
mov
push
gs
arpl
pop
cwtl
icebp
ss
adc
lds
outsb
push
adc
fistpll
adc
daa
aam
shll
and
cmp
or
ret
mov
in
push
fsubrl
inc
mov
out
mov
aam
inc
pop
mov
test
pop
or
add
push
das
mov
mov
mov
sbb
shll
jne
sahf
lret
movl
loop
jae
cwtl
jae
in
dec
cmc
xchg
mov
lcall
ficomps
rcll
fmuls
icebp
cwtl
sub
imul
push
sahf
scas
adc
xor
test
clc
fs
inc
popf
jae
scas
jns
and
in
sub
jnp
or
xor
and
jge
aam
test
hlt
punpckldq
xor
pop
push
cmp
push
iret
pop
mov
xor
cmp
int
lret
xchg
add
inc
xchg
push
shlb
repz
xchg
cmp
cmc
fstpt
loopne
iret
loopne
in
push
inc
in
and
pop
loop
adc
packsswb
ret
loop
mov
mov
adc
jns
lcall
and
fildll
jns
in
test
insl
pop
out
mov
push
xchg
mov
repz
xlat
and
frstor
xchg
dec
xchg
lds
adc
mov
inc
add
mov
sub
ja
pop
aam
xor
decl
leave
daa
negb
cmp
inc
jp
jg
outsb
jne
and
cmp
pop
movsl
dec
mov
dec
sar
push
pop
loope
jg
test
fnstcw
aad
leave
out
inc
fucomi
cmp
adc
pop
and
das
jmp
mov
sbb
fldl
and
xor
jo
or
stos
jmp
push
dec
mov
into
es
sbb
dec
rorl
icebp
xchg
les
test
sbb
cmp
pop
pop
pop
adc
add
dec
stos
dec
mov
pop
nopl
nop
clc
push
mov
iret
mov
jp
hlt
shr
and
mov
enter
or
lds
fildll
js
scas
push
inc
jp
dec
or
push
rolb
stc
daa
xor
mov
push
and
pop
and
inc
cmp
fs
das
pop
jmp
mov
icebp
gs
fimuls
or
jae
xchg
pop
stos
sbb
int3
sub
sbb
decb
repz
pop
cltd
insl
test
insb
out
lods
and
mov
sbbl
call
ret
jmp
test
stos
pop
push
dec
mov
and
subl
int3
adc
sahf
std
int
add
fstl
jno
jmp
jmp
lea
lods
in
lea
outsb
scas
mov
in
popa
imul
push
mov
sub
push
xchg
packuswb
sbb
mov
dec
enter
push
mov
jne
pop
mov
test
mov
jge
repz
in
push
in
adc
rcrl
stos
sbb
jnp
mov
cmp
cmp
sub
push
adc
cmp
ja
mov
sbb
inc
aad
divb
pop
xchg
push
sub
or
into
jle
out
jnp
fs
push
jns
mov
imul
loope
fidivs
ret
cmc
movsb
cmc
mov
mov
jecxz
sbb
adc
adc
cmp
jle
cmpsl
fisubrl
dec
push
adcl
mov
std
test
push
pushf
enter
jne
jecxz
dec
xor
sub
inc
cwtl
stos
xchg
dec
rcrb
pushf
cmc
pop
addr16
add
cwtl
icebp
lret
cli
ret
sub
and
cli
les
jp
les
lods
das
pop
addb
adc
popf
jnp
mov
push
fiadds
int3
sub
jle
aad
xchg
mov
popf
jnp
xorb
mov
out
pop
mov
jp
cmp
cs
dec
cmc
and
movsl
in
push
cmpsb
pmaxub
ja
push
out
push
push
sbb
std
or
mov
xchg
orl
and
cmp
or
and
lock
inc
push
mov
shll
mov
jbe
jmp
daa
les
xor
lea
ljmp
movb
fsubrl
mov
lea
dec
mov
push
xchg
cltd
test
shrb
jno
push
icebp
pop
push
movsl
adc
jne
jae
push
cs
jo
sub
fisubrl
std
enter
sbb
sub
int3
push
movsb
or
lock
jns
in
xor
idiv
inc
xor
pop
sbb
cmp
sbb
dec
jge
mov
outsl
sub
xchg
pop
xlat
out
cs
inc
lret
jb
adcl
pop
int3
sbb
lods
mov
popa
dec
mov
sarb
mov
int
dec
mov
loop
jmp
push
aaa
xor
mov
jo
nop
cltd
icebp
cld
movl
xlat
and
mov
cmc
imul
mov
cli
jmp
jne
leave
imul
cmp
and
mov
xchg
fidivrl
jno
or
and
enter
hlt
sub
pop
ficoml
pop
sti
scas
jne
data16
jo
sbb
sbb
or
pop
lcall
imul
fadds
or
or
inc
movsl
jl
dec
cwtl
sub
inc
sbb
jno
inc
pop
dec
cli
rol
cmpsl
push
adc
cmp
fwait
loop
lods
cmp
mov
stc
sbbl
fimuls
in
add
push
jge
xor
dec
imul
ds
fnstenv
ja
xchg
push
dec
add
roll
popa
push
pop
sbb
pusha
or
icebp
inc
push
mov
hlt
mov
scas
jg
negb
jns
stos
iret
dec
xchg
loope
cmp
push
adc
xchg
loopne
pushf
ss
mov
dec
ljmp
dec
jmp
push
push
cmpsl
shlb
aas
scas
les
sahf
jecxz
pop
xor
outsb
movsl
sahf
pop
cmc
lds
adc
lods
sahf
mov
std
ss
rcl
xor
data16
icebp
fistpl
sub
mov
daa
mov
test
push
xchg
mov
and
movsl
push
xor
fstps
mov
cmp
dec
into
cmc
hlt
pop
cmp
and
push
fwait
cli
les
push
iret
fdivs
sbb
xor
sub
cmpsl
lret
and
loopne
lret
xor
jp
in
push
cmp
rcll
pop
push
sahf
into
cmpl
push
imul
fsubrl
fs
js
push
mov
xlat
adc
mov
test
lea
push
xchg
lea
aaa
mov
in
mov
std
hlt
mov
popa
insl
iret
add
inc
lods
lods
or
push
mov
js
lret
cld
es
sub
mov
movsb
iret
or
lret
mov
jp
sbb
pusha
pop
or
les
ret
std
enter
push
add
lea
push
sahf
movsb
shrl
push
xchg
mov
orb
scas
leave
xchg
in
or
loop
mov
or
mov
adc
mov
lds
mov
insl
dec
fstp
cmp
mov
lock
xchg
inc
mov
fs
movsl
mov
inc
mov
fidivrs
or
jns
leave
mov
ljmp
push
es
add
fisubrl
iret
fidivrs
add
fstl
rcll
in
dec
ljmp
imul
insb
pop
loope
cmp
enter
mov
add
lods
shll
add
jmp
inc
popa
pusha
cmp
in
pop
inc
addr16
jle
shlb
addr16
sub
pop
lea
jbe
lds
dec
in
add
js
cmpsl
jne
imul
xchg
fisttpl
into
inc
xorl
inc
mov
adc
lds
icebp
push
or
popl
mov
pop
adc
in
sbb
dec
mull
fnstsw
push
add
mov
dec
pop
adc
xchg
inc
aad
cmp
push
dec
fwait
arpl
addb
and
push
pop
mov
push
push
jno
shl
pop
add
out
cmp
sbb
push
gs
mov
in
jge
xchg
sub
cmp
add
xchg
sbb
icebp
xchg
je
rclb
or
inc
sbb
pop
fisttpll
mov
xchg
pop
mov
xchg
xchg
stc
fists
loope
jmp
or
mov
data16
jmp
adc
xchg
loop
mov
sub
inc
in
repnz
xchg
repz
and
outsb
adc
arpl
fldenv
jle
add
loop
test
leave
or
cmp
aad
inc
mov
pusha
xchg
test
lcall
stc
or
jg
sbb
xor
jbe
jg
ffreep
seto
push
push
fildll
sub
add
sub
mov
sub
fdivp
mov
push
jb
jmp
mov
sahf
jecxz
cmpsl
xchg
inc
subb
push
mov
lods
call
inc
sub
jmp
or
fimull
mov
leave
adcl
jbe
mov
cli
roll
xchg
mov
mov
cwtl
in
xchg
cmpsb
jo
mov
imul
cmc
pop
adc
int
push
aaa
scas
add
cld
fwait
dec
dec
cwtl
push
incb
imul
add
sub
daa
xchg
sbb
ja
sub
add
mov
inc
cs
jg
dec
in
xchg
jns
repnz
pop
xchg
icebp
cmp
into
sbb
or
pop
shrl
popa
scas
incl
das
outsl
push
add
add
les
fldenv
cmp
and
pop
jns
jno
xor
mov
pop
xor
call
add
mov
jne
loopne
xchg
std
jle
inc
pushf
in
idiv
out
add
ss
insl
ss
cs
inc
hlt
mov
inc
mov
adc
arpl
sbb
es
sbb
add
pop
mov
cwtl
mov
int
bound
push
pop
ljmp
call
test
in
mov
pop
sub
push
int3
ljmp
cmc
lods
leave
fsubl
imul
pop
jp
xchg
mov
mov
jne
leave
sarb
cmpsl
stos
xchg
xchg
push
add
scas
imul
fnstsw
push
mov
mov
iret
fld
and
mov
out
imul
out
rol
add
int
in
cmp
push
adc
imul
jae
sub
adc
add
inc
and
sub
add
pop
fstpl
cmp
mov
cmpsl
sbb
mov
stc
hlt
xchg
not
push
loop
mov
pop
pop
inc
mov
les
sti
add
lret
ljmp
and
int3
jae
in
mov
sbb
cmp
cmp
jo
add
scas
jae
dec
jmp
jbe
jbe
loopne
shrb
xchg
mov
jmp
inc
or
outsb
stc
and
loopne
adc
or
and
mov
push
idivb
popf
pop
fs
ret
inc
jbe
sahf
dec
xor
mov
ljmp
cmp
mov
rcrb
xor
sub
and
mov
aaa
pushf
mov
inc
add
inc
add
push
in
pop
lret
and
clc
dec
jg
hlt
stos
sar
lcall
shrl
std
syscall
ss
jae
jp
adc
mov
loop
xchg
or
and
iret
and
pop
xor
mov
jns
jno
js
scas
xor
mov
sub
sbb
xchg
in
add
rcrb
in
push
das
iret
xchg
xchg
lret
bound
or
push
es
and
in
inc
sbb
jae
ss
mov
jnp
jmp
push
mov
mov
mov
cmc
push
mov
mov
cmc
lock
cmpsl
out
add
and
call
out
push
mov
fsubp
gs
and
inc
lods
add
les
cs
adc
sarb
test
out
mov
sbb
orl
shlb
nop
xchg
sbb
sahf
lret
xlat
test
mov
xchg
loopne
aas
sub
fimuls
jae
bound
fisubrs
out
jg
cmp
outsb
xor
or
in
lods
adc
fmuls
roll
cld
lcall
movsl
out
jle
orb
movsb
push
push
mov
mov
test
sub
and
mov
xchg
xor
test
mov
xor
add
orl
shrl
sbb
cli
push
mov
mov
inc
push
xorl
movsl
fdivl
rcll
mov
shl
icebp
aam
orb
hlt
pop
nop
push
lahf
sub
repz
int3
push
in
jnp
adc
jno
data16
add
xor
xor
and
or
rcrl
aaa
adc
fmul
out
lock
addr16
ret
jg
mov
lds
lods
or
stc
adc
fxch
add
decl
lds
lods
mov
lds
scas
test
stc
xchg
jbe
mov
push
shufps
jecxz
push
dec
mov
lea
adc
mov
jae
dec
sbb
test
jno
jp
xor
sti
adc
lock
leave
repnz
idivl
dec
xchg
and
cmp
jnp
pop
test
cmc
inc
sbb
outsl
pushf
cmp
ds
add
mov
or
imul
sbb
and
jne
mov
jae
out
sarb
orl
adc
sbb
cmp
jns
xchg
pop
scas
insl
daa
fdivrs
cli
xor
pop
imul
jb
cmc
loope
inc
lds
faddp
ret
outsl
ljmp
call
cmc
pop
cmp
and
ss
lea
jg
lea
mov
pop
push
xchg
xchg
jge
inc
mov
adc
xadd
mov
pop
xlat
xor
xor
jbe
outsl
sub
jmp
or
mov
mov
into
cli
mov
sub
in
jbe
popl
xchg
jecxz
mov
mov
mov
clc
in
xor
jecxz
leave
cs
notl
rolb
test
mov
scas
lock
jns
pushf
cmp
ja
sub
adc
cli
int3
lcall
lret
cltd
or
inc
fcmovu
scas
adc
xchg
or
out
in
jns
repnz
scas
mov
and
push
es
lmsw
push
test
mov
aad
mov
insl
inc
outsl
inc
std
sub
push
xchg
jne
daa
cmp
lahf
cs
mov
mov
push
mov
xchg
ret
ss
xor
xor
test
cld
or
cmpsl
movsl
aam
je
xor
mov
xchg
movsl
pop
rcll
mov
mov
cmpsl
loop
lea
push
push
movsl
lcall
insb
fnstsw
sub
pop
cmc
dec
pop
lahf
ret
xor
lcall
outsl
je
popl
fldcw
cs
push
jge
scas
cmpsl
cmpsl
pop
into
or
and
mov
or
mov
test
sbb
and
inc
test
pop
lahf
mov
cmp
push
rolb
or
into
das
movd
ret
cwtl
mov
movb
insl
xchg
shrd
dec
push
jno,pt
mov
pop
test
jae
and
jle
ret
outsb
jge
outsl
pusha
outsb
mov
stos
hlt
pushf
cltd
sub
xchg
fdivs
and
pop
mov
fiaddl
mov
mov
xor
mov
dec
divl
jl
or
arpl
dec
sbb
fldl
testb
xorl
or
jne
and
lock
ss
xchg
xchg
push
icebp
aad
stc
cmc
pushf
dec
xchg
push
jmp
pop
clc
scas
lcall
repnz
jmp
dec
fnstcw
adc
xor
mov
adc
jno
fstp
pop
aam
stc
xor
js
adc
sarl
fcoml
xor
shrb
cld
xor
jns
test
adc
out
in
mov
and
add
push
xor
adc
jmp
cmpsl
sti
cwtl
cmpsl
mov
into
push
cli
fsubrl
in
fcomp
movsb
xor
jns
push
das
loope
sarl
jno
adc
push
hlt
ret
mov
jp
mov
data16
adc
lock
fnstenv
xor
pop
add
aam
call
in
pop
out
push
lock
inc
and
pop
cmpsb
dec
out
jb
xor
imul
mov
push
cmp
jno
or
jg
add
insb
pop
ljmp
cmp
mov
insb
imull
xor
mov
jp
clc
outsb
push
data16
outsl
dec
cld
aad
imull
and
fdivrs
int
loope
inc
cmp
leave
pusha
iret
mov
push
and
rol
and
aam
ja
cmp
lret
or
aam
mull
pop
mov
pop
in
in
or
push
bound
lret
push
xchg
outsb
fs
insl
inc
test
jg
call
cltd
sub
aas
xchg
mov
fldcw
push
cmc
out
repnz
sahf
cmc
ret
jns
pop
dec
popf
cmp
push
fucomip
sub
aaa
pop
je
addb
xchg
push
jo
xchg
ss
je
jmp
cmp
subb
push
sub
dec
sarb
add
jns
and
ds
add
mov
and
inc
push
mov
sarb
fwait
idivb
sub
lahf
hlt
xchg
pop
in
jmp
popf
test
pop
daa
cli
sbb
bound
popf
bound
adc
ja
insl
int3
mov
sahf
jb
add
jge
push
pop
repz
cmpsb
mov
lret
add
pop
mov
push
scas
outsb
jmp
xchg
movsb
adc
and
fs
mov
nopl
in
sub
and
sbb
xchg
cld
cmp
lcall
testl
and
sbb
icebp
xchg
daa
ficoms
sti
cltd
push
add
add
clc
test
inc
stos
sbb
gs
movsb
push
dec
cld
pop
pop
out
xchg
xchg
movl
jmp
scas
push
mov
cmp
fbld
pop
mov
shl
pop
cmpsb
lods
xchg
lcall
insb
movsb
inc
shll
fisttpll
test
adc
movsb
xor
push
mov
fnstcw
lods
xorb
fbld
loop
ret
into
push
ljmp
fcompl
xchg
sub
push
mov
cwtl
jb
imull
mov
pusha
adc
jb
out
or
out
jno
mov
xchg
xchg
daa
and
dec
mov
ss
cmp
sub
or
cmp
sbb
insb
call
inc
mov
jmp
call
lods
aaa
push
sbb
xor
push
add
adcl
or
sub
xchg
mov
les
and
and
lret
mov
lret
stos
mov
jo
xchg
add
imul
out
imul
push
into
inc
xor
mov
sarb
adc
cmpsl
mov
pop
or
add
mov
testb
rcrb
ja
dec
out
pop
inc
mov
sub
push
negl
inc
stos
aas
mov
repz
and
add
inc
outsl
ds
or
or
xor
icebp
sub
mov
scas
mov
fdivs
mov
sub
int
lahf
xor
gs
xor
xchg
mov
cmpl
cltd
or
jl
fdivrp
pop
xchg
inc
popf
imul
repnz
aaa
or
pusha
xor
xor
daa
or
out
mov
adc
std
int
sarl
test
push
mov
mov
ret
pop
inc
jl
cwtl
icebp
lods
mov
addl
and
imul
push
hlt
xchg
out
mov
dec
inc
jo
xchg
xchg
cli
loop
orb
js
inc
adc
jno
les
pushf
mov
and
adc
daa
jo
out
sub
adc
jge
mov
fnstsw
testb
idivb
jle
jno
testb
push
xchg
adc
in
adc
push
fdivr
rorb
loopne
push
movsb
cli
sub
mov
inc
roll
je
jne
mov
lahf
call
into
loope
dec
hlt
mov
cmp
dec
dec
or
scas
fwait
mov
jns
cmp
and
mov
sbb
jp
ret
outsl
lods
lods
jnp
fsubrs
outsb
inc
scas
jp,pt
clc
cmpsl
stc
mov
lcall
jbe
movb
jmp
cwtl
ss
mov
push
cld
pop
mov
push
cmp
jecxz
imulb
imul
xchg
pushf
push
outsb
pop
mov
mov
outsb
jmp
cmp
fistpl
pop
repz
repnz
in
fldcw
sti
clc
or
ret
cwtl
outsl
mov
mov
adc
pusha
cmp
jecxz
xchg
addl
jae
jae
and
pop
lcall
sbb
xor
fwait
je
jnp
ret
adc
mov
pop
hlt
movsl
lea
dec
mov
inc
loopne
and
mov
das
clc
mov
leave
sub
xor
jo
push
pushf
dec
movsb
lahf
inc
imul
andl
aas
lods
adc
jmp
dec
and
cmp
je
test
sub
sti
pop
mov
jno
xlat
xor
scas
imul
adc
test
pop
addr16
xor
shll
sub
xor
and
cmpb
inc
sahf
mov
dec
xchg
jmp
xchg
ja
cmp
fisubrs
js
add
xor
ss
std
clc
inc
fstl
sub
cmp
jp
iret
mov
fs
cmc
int3
adc
int3
ss
cmp
fidivrs
in
or
lahf
ja
mov
mov
pushf
icebp
pushf
loopne
rcrb
xchg
pop
int3
ret
inc
testb
jbe
jp
xlat
outsl
sbb
enter
cwtl
int3
out
icebp
sbb
aaa
movsl
jns
lret
cmpsl
sbb
inc
pop
fcmovne
fidivrl
push
les
out
shrb
out
imul
es
or
aad
dec
mov
inc
mov
popf
pop
adc
pop
jecxz
jnp
push
es
rcrl
je
mov
js
repz
or
push
xor
lds
sbb
dec
outsl
lret
sub
xchg
pop
adcb
xor
movsb
fbstp
adc
push
add
dec
cmp
mov
dec
fiadds
sub
out
enter
xor
in
test
out
fs
jmp
test
cmp
rclb
fimuls
roll
mov
mov
std
hlt
imul
lea
xlat
movsb
dec
into
mov
subl
fcoml
push
adc
cltd
pop
mov
add
adc
pop
jmp
test
cmp
repz
push
outsl
iret
mov
rcrb
adc
mov
movsb
je
popf
xrelease
orl
imul
mov
inc
cs
bound
imul
jge
xor
lret
ret
jnp
popa
push
cmp
xchg
push
addl
xchg
fwait
cs
call
xchg
sarb
pop
cmpsl
inc
pop
in
jle
cs
sub
mov
std
loop
dec
pop
push
loope
lahf
enter
call
imul
jg
cmc
in
sbb
mov
les
in
add
xor
cmpb
add
les
xchg
jp
js
popa
fsubl
ret
adc
add
mov
sub
mov
lret
mov
push
add
sub
sbb
jo
mov
mov
sti
push
push
arpl
inc
mov
test
insb
je
fdivrl
aad
inc
jecxz
push
mov
pop
fnstsw
jge
adc
fisubrl
les
int3
fwait
mov
adc
addr16
movsb
daa
push
cmp
loope
pop
dec
rcrl
pop
shrd
das
les
cmpsl
xor
xchg
pop
jnp
imul
or
mov
popa
loop
sub
fldenv
or
fucomi
pop
mov
xchg
mov
add
jmp
jnp
sub
jp
push
jmp
shrl
sbb
push
les
sbb
pushf
mov
and
jae
js
mov
jo
std
and
jp
aas
xor
in
addr16
js
mov
aaa
xchg
and
test
mov
das
leave
inc
dec
enter
lock
mov
mull
sub
rorl
or
inc
ljmp
push
jno
fsubl
arpl
jg
jp
xchg
hlt
xor
add
bound
mov
popa
mov
push
xor
mov
pop
sbb
mov
in
int3
mov
fnstcw
mov
mov
push
data16
jge
pop
dec
and
jns
pushl
cmp
jmp
outsl
scas
dec
into
adc
out
mov
aad
das
bound
pop
imull
scas
xor
out
testl
es
in
divps
call
xchg
jl
and
std
jo
cmpl
and
inc
and
sub
clc
push
push
pop
pop
pusha
dec
push
cmpsl
in
mov
test
sahf
adc
cmp
mov
jp
jne
pop
fnsave
jp
ret
lock
sti
dec
popf
cmc
fsubl
ja
lods
in
push
and
call
shlb
addr16
sub
xchg
pop
cli
std
cmpsb
xchg
sti
xor
mov
cmp
jle
in
aas
out
hlt
adc
in
and
fadd
jnp
xor
jns
push
jae
loopne
sub
jae
cmp
inc
hlt
push
xor
ja
das
rol
xlat
or
mov
lret
sub
mov
inc
pop
dec
dec
xchg
mov
mov
out
mov
or
movsb
adc
cwtl
aas
xchg
jle
sahf
inc
dec
pop
mov
cmp
cs
jl
rcll
cmp
jmp
in
pop
popa
mov
mov
cmp
nop
aas
push
mov
cmp
mov
lods
dec
dec
xchg
jle
test
jbe
out
cmpsl
xchg
push
or
mov
loopne
jae
aam
addl
push
cmp
scas
jmp
jbe
sti
dec
mov
insl
pushf
inc
mov
jb
out
popa
mov
mov
test
push
xchg
gs
jl
pop
aas
outsl
inc
jbe
cmp
sahf
aam
sbb
sbb
dec
jge
outsb
hlt
mov
mov
lods
lds
pop
inc
lcall
into
mov
mov
ljmp
jno
pop
in
inc
ret
inc
test
sub
mov
dec
ljmp
mulb
add
mov
fsub
xor
push
and
add
call
inc
ficompl
insl
repz
mov
mov
sbb
xchg
icebp
inc
stc
pop
dec
nop
in
or
push
cmp
add
lret
push
into
repnz
jns
or
push
xchg
inc
or
mov
jne
or
rorl
push
jmp
hlt
adc
int3
int3
inc
lea
mov
repnz
dec
rcrl
lock
mov
sub
adc
sbb
jnp
and
out
pop
inc
sbb
cld
popf
mov
add
sub
pusha
arpl
lahf
and
fs
jg
insb
fisubrs
jge
inc
inc
scas
push
std
cmc
xor
fiaddl
push
jl
sub
scas
shl
imul
fcmovu
add
cmp
or
xchg
fisttps
jnp
fildl
sarb
repz
shrl
jmp
dec
insl
add
xchg
mov
ljmp
or
push
xchg
scas
out
jbe
loop
lret
jecxz
test
lods
aam
pop
les
aad
fyl2xp1
add
mov
mov
mov
cltd
push
mov
test
dec
cs
adc
and
jecxz
pusha
sub
iret
ja
ss
ficoml
fmul
mov
loopne
scas
pop
js
sub
out
xor
pushw
xchg
sbb
and
cltd
sti
jp
dec
sbb
loope
mov
and
adc
push
out
and
rcrl
ds
ss
sbbl
lret
pop
jle
inc
imul
in
xchg
mov
sub
push
pop
push
mov
mov
rcrl
outsb
inc
sub
xor
ret
in
jmp
push
xor
cld
pop
popf
lea
jns
sbb
pop
cmp
dec
divb
and
fisubrl
xchg
mov
out
les
sub
xor
add
mov
xor
lea
loope,pn
sbb
nop
or
xlat
push
movsb
enter
inc
xor
scas
rorb
aaa
pop
or
jge
and
xlat
clc
sahf
in
ljmp
aas
adc
test
adc
sbb
dec
and
lds
js
in
mov
inc
stos
or
or
cltd
jecxz
sbb
divl
imul
sub
cwtl
jno
and
loop
mov
fmul
mov
and
insl
pop
fmulp
xor
sbb
iret
movsb
jne
or
sti
rcrb
movsb
mov
fcomps
xor
cmpsb
push
mov
inc
push
cmc
movsb
ret
push
sarb
imul
add
push
sbb
aam
pop
or
arpl
push
pop
fcmovnbe
ljmpw
mov
dec
lahf
xchg
sub
cld
es
cmp
jl
xchg
mov
dec
imul
push
stos
cmpsb
inc
mov
jl
ret
pop
lods
sub
fimull
dec
orb
inc
jle
bound
inc
mov
shl
pop
fildll
mov
jge
fisubrl
adc
mov
push
sbb
leave
mov
sub
push
sbb
jp
mov
jge
sub
pop
and
pushf
mov
movsl
sub
lret
or
inc
mov
mov
mov
mov
mov
sbb
jnp
or
lret
icebp
daa
popa
or
mov
dec
aas
xor
jecxz
jl
mull
dec
test
std
adc
xlat
int3
pop
imul
fwait
out
shr
repz
aad
out
popa
gs
in
mov
bound
outsb
fs
push
test
add
sub
icebp
aas
inc
cmp
movsl
fcoms
lods
push
dec
cmp
stos
arpl
sub
sbb
sub
pusha
imulb
jmp
movntps
insl
lea
pop
dec
sub
jno
push
outsl
cld
iret
xchg
scas
fnclex
xchg
sbbl
out
ja
add
fnstenv
jg
out
int3
test
inc
dec
push
rcr
jge
loope
pop
jl
push
lods
mov
call
xchg
aam
mov
cmp
in
or
adcb
stos
cmp
imul
es
repz
xchg
xor
cmpb
mov
mov
inc
mov
es
shll
loop
and
aam
sub
jae
mov
mov
enter
mov
pop
lea
add
xchg
pop
mov
aaa
jp
push
push
test
mov
inc
fs
jne
je
imul
out
or
mov
imul
or
ss
out
or
stos
mov
add
add
and
mov
mov
mov
sbb
add
bound
adcb
jbe
roll
lock
outsl
push
pop
xchg
insl
mov
jbe
pop
pop
stos
or
mov
or
clc
cmp
xor
push
xchg
mov
into
mov
sti
das
jmp
adc
jl
fs
aam
jl
scas
adc
pop
out
test
out
loop
pop
jl
stos
jl
pushl
cli
outsb
enter
xor
dec
clc
add
jle
pusha
pop
shrb
jle
sub
dec
inc
push
mov
jge
ds
mov
ja
xchg
loopne
pop
add
and
stos
xor
ret
cmpsl
ljmp
out
in
push
xchg
cmp
ja
sub
add
daa
lock
mov
std
or
mov
loopne
push
push
lahf
mov
cmp
xchg
xchg
add
or
cli
sub
cmp
dec
and
lcall
pop
cwtl
adc
push
sbb
mov
jg
and
inc
push
sbb
jnp
dec
cmp
push
push
jne
push
repz
and
hlt
imulb
dec
ljmp
jmp
jl
ret
or
sub
es
lahf
xchg
nop
xchg
lea
cmc
std
mov
or
sub
jl
popf
lds
xlat
aad
add
xor
icebp
ss
into
imul
pop
jne
dec
jmp
cltd
xor
jmp
push
cmp
cmp
mov
dec
xor
stos
mov
jns
cmc
jp
ljmp
lock
sub
inc
and
jno
push
fdivrl
dec
dec
imul
and
mov
cmp
inc
xor
pushf
in
sub
inc
add
pop
push
xchg
dec
sahf
loop
pop
mov
mov
pop
repz
mov
insb
cmpb
in
std
jbe
push
stos
iret
clc
lcall
daa
sub
jle
sub
fldl
jl
inc
mov
jnp
jp
or
jg
mov
push
rcrl
ret
jbe
dec
stos
in
cmp
mov
jb
idivl
add
mov
mov
jge
testl
loopne
xchg
sbb
das
jmp
loopne
call
xor
dec
cmc
mov
lret
or
cmpsl
mov
mov
cwtl
lret
lock
arpl
xchg
bnd
andl
mov
scas
je
test
or
js
pop
jae
mov
loopne
aad
lret
jecxz
cltd
sub
rclb
xor
and
lea
mov
into
cs
or
mov
loope
testl
in
and
lret
scas
jle
ret
lret
sbb
pop
xor
sub
adc
aam
or
ljmp
cld
lret
pop
aam
xor
inc
arpl
iret
pop
xor
mov
adcb
out
scas
cmp
movsl
mov
cmc
jnp
sub
sahf
dec
test
cmpsl
pop
mov
cmp
cmp
es
mov
test
fwait
mov
push
ss
out
es
pop
jb
bound
clc
push
push
inc
popa
xor
sbb
stos
cs
jb
xor
sbb
test
push
fidivl
lret
leave
leave
cltd
stc
test
je
int3
push
and
mov
test
scas
adc
movnti
js
xchg
imul
mov
aad
std
lss
inc
fists
scas
push
arpl
int
mov
repnz
cmpsl
lcall
jl
ljmp
adc
cmp
out
push
fmull
clc
and
les
xor
add
std
jp
mov
and
fmull
aam
push
add
push
imul
arpl
inc
jne
mov
test
or
mov
cltd
inc
or
nop
arpl
movb
mov
scas
jnp
rclb
pop
roll
inc
rep
push
in
lret
mov
scas
add
fucom
aaa
and
popf
cld
or
adc
ret
int3
in
and
shl
push
sub
adcl
add
.byte
dec
sbb
mov
and
cwtl
add
mov
push
cmpsl
mov
or
int
popa
outsb
outsl
insb
into
push
rolb
or
das
cmp
add
pushf
cmc
inc
in
lret
add
xadd
inc
sti
int
addr16
adc
xchg
iret
movsl
aam
xor
subb
sub
mov
fldl
jmp
orb
fsubrs
jmp
cwtl
push
xor
sub
cmc
jbe
ds
repnz
mov
adc
fdivl
clc
stc
jb
shrb
jp
ds
cs
and
or
rolb
jae
xchg
cmp
mov
lock
dec
ud1
outsb
sub
int
fsubrl
insl
push
mov
icebp
cmp
sbb
out
cld
push
aad
sub
fwait
jns
sarl
lahf
xchg
test
dec
push
and
loope
mov
jbe
dec
jnp
jbe
or
mov
imul
int
repz
jno
mov
mov
scas
frstpm(287
adc
pop
test
pop
inc
arpl
cmp
mov
xor
movsl
mov
jecxz
shl
into
sbb
sahf
jns
jecxz
xor
call
cmpsl
cmp
mov
insb
imul
pop
jle
adc
adc
fistpll
sbb
jg
pop
repnz
mov
jg
sahf
roll
sbb
sbb
fildll
scas
sub
mov
lret
xchg
addr16
inc
or
inc
sub
push
ds
js
xchg
test
push
add
ret
lahf
xchg
sub
jge
shll
cltd
loopne
insb
xor
test
addb
xchg
sbb
lods
std
jecxz
pxor
push
jnp
cmpsl
inc
mov
sub
mov
push
fldcw
cmpsb
mov
in
shl
xor
repz
icebp
xor
adc
aam
pop
mov
pushf
popa
das
hlt
insb
jno
leave
mov
rol
pop
testl
lret
dec
outsb
sbb
xchg
jmp
push
daa
rcl
repnz
xor
outsb
cmpsl
inc
lret
xor
hlt
ja
and
aaa
xchg
add
aaa
stc
xchg
cmpsb
jl
mov
inc
ror
aam
les
out
rolb
dec
xchg
ss
xchg
test
pop
lcall
outsb
idivb
and
push
jmp
mov
inc
xor
sbb
jae
mov
add
int3
sti
and
push
testb
jb
movsl
sbb
das
pop
pusha
inc
lcall
sarl
jmp
push
jl
pop
cmpsl
mov
sub
daa
out
pop
push
call
or
mov
hlt
or
arpl
daa
dec
cmc
push
sbb
jae
inc
sub
lcall
cmp
mov
jg
cmpsb
sub
or
sub
out
out
out
sub
aaa
cwtl
in
fsubrl
jl
lods
test
dec
test
sub
in
daa
jl
cwtl
insb
dec
push
ljmp
aam
scas
push
inc
add
and
cs
xor
xchg
sub
loopne
faddp
lea
push
jecxz
push
pop
fxch
call
loop
xor
leave
je
cmc
push
jns
out
inc
inc
in
data16
lretw
or
es
adc
ss
push
lods
push
das
jecxz
sub
jle
out
mov
mov
insb
inc
pop
mov
and
add
cmp
pop
mov
cmp
int3
sbb
movsl
clc
jp
andb
jbe
es
inc
ret
and
or
cli
or
ss
in
add
or
lahf
adc
jne
push
or
data16
in
mov
daa
test
push
mov
inc
mov
lcall
in
icebp
enter
ss
mov
in
shlb
pop
mov
pusha
cwtl
adcl
inc
inc
mov
pusha
push
add
imull
js
xorl
xor
icebp
leave
jmp
data16
jmp
into
cld
xchg
dec
add
sub
ficoml
mov
jbe
mov
xor
mov
jmp
test
push
les
shrl
pop
scas
incl
cmp
int3
or
icebp
adc
aam
push
mov
jmp
mov
or
cld
inc
iret
cs
and
add
repz
mov
and
loope
iret
andl
cmp
inc
mov
cwtl
shll
push
xor
sti
add
jbe
mov
inc
sahf
mov
mov
mov
shll
xchg
inc
push
dec
sub
sub
sbb
fcomps
lret
clc
fnstsw
pushf
adcl
mov
or
pop
push
test
and
fldt
lea
ja
dec
scas
fs
sub
in
sub
cmc
jb
scas
test
sbb
mov
outsl
mov
leave
dec
test
lret
push
inc
jle
xlat
inc
mov
lret
cmp
xchg
xchg
scas
and
fnsave
and
ja
jg
xchg
adc
jo
push
cld
pop
aaa
das
jne
cmp
inc
jmp
jp
mov
jg
mov
add
mov
out
push
je
dec
and
add
mov
notl
xchg
push
out
lahf
cwtl
xchg
in
jbe
add
pop
mov
xchg
dec
push
xchg
or
stos
add
jmp
inc
inc
jg
pop
dec
mov
add
dec
arpl
adc
jge
scas
xchg
xlat
push
xorl
fcomp
jae
cmc
or
jge
rorl
shll
xor
dec
mov
push
push
out
add
or
push
adc
subl
in
fbld
ss
popf
sti
lods
cmp
add
enter
adc
or
mov
dec
pop
fstpl
cmp
sub
mov
loopne
pop
jl
stc
add
in
and
pop
scas
push
std
repz
jo
or
mov
jmp
cmp
fisubs
pop
mov
inc
xor
loope
add
enter
fwait
cmp
movsb
stc
xchg
aam
into
cmp
bound
nop
mov
adc
mov
cld
out
clc
aaa
and
inc
call
inc
mov
xor
mov
lds
fisttpl
sub
cltd
and
and
and
add
les
pop
sbb
xorb
or
cwtl
xor
ds
mov
dec
jge
push
pop
adc
mov
sub
les
fstpt
cmp
push
cmc
mov
dec
mov
cmpsb
xchg
add
repz
xchg
orb
mov
mov
fistps
and
mov
and
xor
pop
jle
mov
dec
ljmp
inc
rolb
insl
aad
add
jge
in
xor
sbb
pop
pusha
pop
in
xchg
rcrb
hlt
inc
clc
push
mov
ss
aas
xlat
neg
imul
outsl
or
pop
aas
jecxz
iret
fs
jmp
mov
xor
lea
test
mov
inc
in
arpl
inc
gs
xchg
test
cmp
fcmovnbe
xor
mov
xchg
push
or
inc
mov
shlb
loope
iret
lods
and
add
cmpsb
add
insb
adc
ds
xlat
scas
filds
aad
mov
inc
test
lahf
cmp
inc
ss
dec
adc
inc
xor
into
pop
jbe
int
cmp
push
xchg
adc
hlt
xlat
fstpt
movsl
pop
lea
in
mov
add
jg
xor
sub
jecxz
mov
xchg
int
inc
movsl
mov
enter
and
mov
ja
mov
push
lcall
in
and
mov
fwait
cmpsl
mov
lods
pop
inc
mov
jb
mov
dec
and
jecxz
jo
mov
inc
adc
je
mov
sti
daa
mov
fstpt
mov
push
insb
jne
shrb
dec
mov
add
mov
aas
std
jmp
enterw
iret
rolb
mov
pushf
bound
adc
das
mov
push
and
inc
fidivl
in
fisubl
mov
pop
pop
inc
movsl
add
inc
xor
nop
in
aam
add
or
in
int3
andl
mov
lea
inc
mov
jne
aad
cmp
xor
xchg
cld
aam
adc
adc
repnz
cmp
pop
mov
sub
and
orl
lcall
ret
loopne
out
pop
sub
inc
pop
push
mov
mov
mov
sub
leave
sub
xor
xor
in
js
adc
inc
and
or
out
cmp
movsl
xor
clc
sub
mov
add
push
adc
sbb
inc
into
lock
pushf
jl
sahf
mov
out
xchg
sub
sbb
imul
mov
lock
push
cmp
out
je
aad
push
xlat
cld
ljmp
mov
mov
int
cmp
xchg
outsl
test
test
jle
in
xchg
imul
out
xor
adc
mov
sarb
sbb
in
pop
jmp
lods
xchg
push
jne
movsl
jle
pop
pusha
ljmp
lahf
inc
and
xchg
xor
mov
rcll
add
dec
test
int3
xchg
xor
or
outsl
cld
and
and
lock
adc
insl
push
push
mov
xchg
xchg
call
aam
iret
fimull
mov
imul
pop
sub
pop
push
xchg
xor
repz
cs
ficomps
push
jne
pop
je
out
stc
add
xchg
and
iret
stos
mov
xor
inc
clc
repz
cmc
push
adc
dec
sub
mov
pop
dec
cmp
lcall
inc
xchg
push
ljmp
leave
aas
add
orl
test
ret
mov
adc
sub
es
mov
subl
clc
jmp
repnz
mov
rolb
and
notl
dec
mov
into
or
scas
stos
jnp
sbb
cmp
pop
pop
lds
cmpsb
sbb
mov
adc
ret
stos
pop
jns
inc
mov
cmp
add
aaa
fwait
inc
push
mov
push
and
and
dec
and
mov
test
cmp
push
int
push
sbb
dec
sbb
cmp
mov
mov
sahf
mov
mov
loope
pop
inc
push
mov
cmp
popf
add
fists
sbb
cwtl
fiaddl
fstps
sub
jl
int3
sub
outsb
and
loop
out
xchg
nop
addl
adc
xchg
add
js
jbe
testb
test
jae
ret
jl
fists
inc
push
sbb
jne
decb
and
add
cmp
int3
pusha
pusha
sub
xchg
push
subl
stc
jnp
arpl
int
and
adc
std
sub
lret
push
fisttpll
outsb
imul
lods
or
dec
xchg
lock
cmpl
or
fnstsw
add
aad
pop
mov
std
es
lret
or
xchg
cmp
xor
mov
xchg
shrb
dec
sbb
into
jecxz
imul
sub
out
daa
push
cmp
ret
sbb
ror
stos
dec
subb
vprotb
mov
mov
jo
xor
mov
jecxz
addr16
dec
add
jmp
stos
xchg
mov
inc
outsl
movsl
or
aam
test
mov
add
push
inc
int3
outsl
mov
mov
cmp
xchg
pop
adc
or
push
mov
ret
addb
mov
push
sbb
shl
push
dec
sarl
and
les
mov
or
xchg
adc
fsubs
movsb
push
jecxz
and
mov
lods
stos
divb
adc
outsl
push
jno
sarb
sbb
add
arpl
lret
cs
addl
mov
cmp
pop
inc
push
subb
loope
mov
xor
jns
pop
pop
xor
jecxz
pop
in
fisubrs
cs
sub
lods
loopne
repnz
test
es
mov
mov
sbb
cmpsl
cmp
mov
pop
sub
test
mov
subl
mov
sbb
lcall
xchg
sub
push
jnp
sub
and
mov
cs
icebp
inc
mov
into
cs
sbb
jl
scas
or
mov
jp
inc
cmp
adc
mov
lods
xchg
sbb
mov
les
xchg
xlat
cs
pop
push
mov
adc
in
les
fildl
cmpsl
js
sbb
jb
jmp
or
pop
or
adc
movsl
loop
cli
xchg
out
mov
rorb
data16
and
push
or
loopne
sub
pop
xchg
add
dec
popa
loope
fs
mov
rorl
push
lock
popf
fcomip
inc
or
in
push
inc
mov
and
sbb
out
dec
inc
out
out
pop
or
sarb
jmp
add
push
addr16
sbb
fs
xlat
lods
lahf
fcoml
outsl
test
imul
mov
push
mov
xchg
arpl
jmp
inc
pop
nop
add
mov
adc
aas
pushf
push
fildl
mov
and
adc
cmpsb
add
int3
fstpt
add
mov
jbe
gs
rorb
test
xchg
jecxz
call
adc
scas
or
pop
mov
mov
into
test
cmpsl
int
cltd
mov
xchg
mov
mov
lods
cmp
mov
repnz
.byte
.byte
inc
and
add
mov
pusha
pop
xchg
inc
cld
xchg
imul
jle
stos
scas
aas
inc
push
movsl
ret
scas
xchg
popf
out
lods
jmp
mov
jb
sti
dec
lret
xor
test
insl
fsubr
gs
loop
jne
inc
pop
jg
imul
sti
inc
sub
mov
in
insb
je
push
adc
outsb
xorb
xchg
les
inc
jp
jb
ret
mov
dec
lds
aam
mov
sbb
cwtl
stc
stos
dec
mov
and
adc
jae
cmp
cmpsb
xchg
mov
test
add
sti
dec
jl
sbb
aad
popa
popa
pop
std
mov
jne
clc
addl
cmp
jmp
mov
push
mov
negb
out
sbb
mov
pcmpeqb
mov
cmp
jp
in
xchg
or
test
enter
jbe
lahf
xchg
push
les
sbb
sub
decb
out
lahf
pop
incl
or
cltd
out
sub
lods
lahf
dec
dec
pop
jno
push
cmp
mov
std
arpl
inc
xor
sti
dec
sahf
sbb
lcall
fcompp
jg,pt
fldcw
outsb
cmp
or
movsl
out
pop
cmc
lahf
sub
fiaddl
jno
sbb
adcb
pushf
js
sub
dec
sbb
dec
sbb
and
adc
aam
ret
imul
addr16
xorl
inc
dec
inc
xchg
lahf
mov
xor
notb
stc
xor
mov
iret
rcl
xor
fnsave
push
mov
enter
movl
je
xor
mov
aas
loop
add
push
addr16
ljmp
jecxz
jl
popf
push
dec
xchg
sub
mov
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
add
add
add
push
adc
pop
adc
pushl
mov
pop
mov
add
xor
mov
sub
jmp
cmp
jle
sub
mov
mov
sub
add
add
jp
cmp
jne
add
mov
test
insl
scas
adc
xor
sub
sbb
mov
sub
cwtl
outsb
cmp
pop
scas
cmpsl
pushw
add
scas
adc
int
mov
mov
sub
pop
scas
adc
mov
inc
and
mov
mov
fdivl
loopne
mov
mov
xor
pusha
dec
push
add
or
pavgb
cmpsb
pusha
push
addr16
sub
xor
lds
jns
jnp
sbb
lds
pusha
lahf
mov
scas
adc
jo
adc
or
scas
mov
mov
xor
jl
aas
loope
scas
nop
ret
aam
iret
das
jp
lret
sti
mov
test
notb
push
cltd
fisubrs
pop
scas
adc
cmp
mov
mov
mov
dec
repz
mov
mov
mov
push
leave
adc
cmp
mov
and
cwtl
and
call
aaa
xchg
mov
test
push
push
lods
sbbb
call
sbb
mov
or
xor
inc
aaa
dec
add
jo
inc
pcmpeqd
lds
aam
adc
jl
pop
add
sub
mov
aaa
mov
popa
or
shrb
or
dec
repz
xchg
mov
and
test
cmp
cmc
lret
subb
adc
cmpb
outsb
sbb
mov
sub
xlat
xchg
movd
incl
aaa
dec
push
aad
adc
sbb
jo
inc
jae
gs
cmpsb
mulb
jg
xchg
call
pusha
sbb
shl
faddl
jae
or
or
adc
cmc
scas
stos
repz
rcll
push
sbb
mov
fstps
mov
rcr
shlb
adc
jge
cmpl
mov
imul
jns
loopne
sub
ficoms
iret
cmp
mov
pusha
fs
jmp
adc
xchg
js
xor
outsb
sbb
outsl
ja
fwait
cmp
add
mov
mov
sub
sbb
mov
mov
stc
xchg
mov
inc
rolb
or
adc
and
stos
gs
jp
data16
mov
jecxz
cld
adc
jp
mov
dec
jmp
inc
fadds
sbb
push
repz
xchg
fidivs
sub
dec
push
mov
fwait
jle
mov
xchg
lods
clc
sar
data16
jbe
sub
dec
push
jge
mov
xchg
jae
es
dec
data16
daa
mov
stos
jnp
stos
sarl
mov
and
mov
mov
data16
mov
dec
jbe
mov
movsl
ja
xor
repz
add
dec
popfw
js
addr16
mov
dec
data16
es
imul
dec
fdivs
and
mov
data16
lahf
icebp
js
mov
pop
addr16
mov
lahf
data16
mov
pop
cmpl
push
cmpl
data16
dec
fdivs
and
rorl
sbb
jnp
mov
fdivs
and
inc
fcomps
mov
and
push
sahf
dec
data16
jmp
loopne
sahf
dec
data16
pusha
sahf
cmc
add
data16
dec
mov
daa
mov
dec
cmc
test
and
cmc
fstps
jne
setge
add
daa
inc
or
or
fidivs
xor
sub
jl
mov
repnz
data16
dec
dec
cmc
add
data16
dec
mov
sbb
jp
mov
mov
sahf
dec
and
sbb
jge
mov
fcomps
and
push
or
sub
and
adc
mov
cmpsl
mov
dec
lock
dec
data16
fisttps
daa
mov
out
cmp
jmp
call
add
dec
dec
xchg
popf
adc
enter
mov
cmpsl
mov
push
repz
dec
xchg
popf
adc
enter
lods
ljmp
addb
fwait
out
lcall
lods
cltd
lea
jbe
or
hlt
ja
pushf
dec
jae
dec
dec
xchg
popf
adc
enter
out
pop
mov
nop
adc
sbb
cmp
inc
jl
mov
pop
hlt
ja
pushf
dec
jae
dec
dec
xchg
popf
adc
enter
and
jbe
xchg
inc
inc
jl
mov
pop
hlt
ja
pushf
dec
jae
dec
dec
xchg
popf
adc
enter
and
dec
jnp
jp
mov
in
daa
mov
cmp
fwait
adc
roll
and
out
or
lods
cltd
lea
jge
or
hlt
ja
pushf
dec
mov
mov
dec
jnp
mov
adc
test
sbb
mov
dec
cmpsl
or
in
call
push
adc
jp
mov
cmc
xchg
xor
jp
ljmp
out
push
addr16
loop
jne
adc
mov
enter
data16
mov
push
es
dec
addr16
gs
es
dec
test
rclb
sbb
data16
adc
cmpl
scas
or
data16
popa
jp
mov
dec
data16
adc
popw
dec
data16
out
cmp
cmpsb
lods
cmp
inc
lock
mov
dec
xor
push
dec
insb
push
arpl
daa
repz
push
xchg
popf
lret
cmp
cmpsl
je
fistl
xor
popa
sahf
push
jbe
or
lahf
roll
sub
adc
cmp
clc
pop
fwait
imul
jne
push
stos
lods
push
jecxz
aaa
and
pop
out
fnstcw
in
push
sarb
cmpsb
ss
pusha
lret
mov
dec
lcall
mov
daa
mov
dec
data16
mov
dec
data16
mov
dec
data16
mov
push
mov
mov
dec
cmpsb
cmpb
data16
mov
dec
data16
mov
dec
loop
mov
data16
mov
dec
data16
mov
dec
lret
hlt
sbb
pop
mov
push
pop
pop
lcall
cmc
jnp
jns
int3
ljmp
inc
in
pop
hlt
add
adc
xchg
jb
je
dec
outsb
jnp
jbe
sahf
pushaw
inc
mov
lods
or
sub
push
mov
shrl
hlt
xchg
ret
inc
fsubrs
in
mov
xor
fists
adc
jl
sub
pushl
push
fisttpl
lcall
roll
pushf
adc
mov
fcmovb
jae
jecxz
and
sub
pop
sbb
cli
clc
ffree
adc
xor
das
mov
adc
mov
add
jl
lret
inc
aaa
sub
outsb
in
cmp
xchg
push
cmp
mull
mov
scas
or
xlat
call
or
dec
ja
jl
add
sahf
lds
inc
or
sbb
popf
xchg
gs
ljmp
mov
push
xor
sub
cmp
lea
dec
dec
and
jmp
xlat
loop
cld
in
stc
shrb
push
and
in
xlat
fs
testb
mov
pop
int
mull
mov
or
sbbb
push
in
xor
ret
dec
push
mov
nop
inc
jb
arpl
lods
xchg
xor
xor
pop
add
inc
mov
adcb
xchg
in
bound
fidivrs
or
dec
adc
outsb
cmpsl
dec
and
fisubrl
dec
jmp
lret
scas
cmpsb
xor
inc
int3
stos
into
cltd
jge
push
pop
dec
jns
cmpsl
insl
add
mov
jb
rcrl
fimull
mov
addb
mov
ret
shll
xor
cmpsl
mov
jo
data16
sbb
aam
sahf
push
enter
dec
sub
and
bound
test
jae
add
mov
mov
or
aas
nop
cs
dec
pushw
rcrl
pop
mov
stos
jg
adc
jbe
xor
push
stos
popf
mov
sbb
aaa
jle
adc
mov
pushf
or
xchg
jno
cmp
push
aas
pusha
je
sub
je
push
and
cltd
adc
and
adc
push
aam
pop
cmp
pusha
aam
enter
cs
jno
test
mov
imul
outsb
and
cmpsb
push
cmp
adc
jnp
mov
ja
loope
loope
aam
pop
push
nop
sbb
inc
dec
scas
je
xor
push
sbb
push
mov
sub
aad
adc
mov
mov
pop
mov
mov
and
shrb
push
add
cld
mov
mov
cmc
aad
mov
aaa
pop
test
pop
pop
mov
inc
xorl
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
add
or
add
adc
add
push
or
add
sub
add
aaa
or
add
inc
or
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
leave
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
rolb
in
pop
das
xor
add
add
add
add
xlat
pop
and
inc
fucom
repz
inc
push
lret
dec
push
and
in
jge
roll
add
addr16
mov
out
popa
pop
add
push
repz
stc
and
jno
push
jno
sbb
cli
xchg
lcall
lahf
inc
lahf
ds
jp
mov
mov
jno
sbb
in
les
fucom
jbe
pop
testb
xor
test
sub
lret
std
and
jae
mov
movsl
and
cmp
into
sub
or
inc
test
fcomi
jo
jne
call
xchg
inc
push
push
dec
pop
cmp
and
stos
es
mov
pop
add
movsl
mov
daa
mov
lods
mov
data16
xor
sti
xlat
loop
fistpl
lods
fcmove
mov
nop
imul
mov
xchg
jge
or
dec
dec
cmpsl
call
pop
in
pop
sarl
shl
add
sbb
adc
or
aam
push
mov
sub
and
int3
int3
idivb
shlb
sbb
or
je
pop
dec
insb
arpl
sarl
mov
mov
push
sbb
pop
push
int
arpl
or
popa
mov
jo
ds
cltd
test
mov
repnz
and
xor
test
lret
icebp
sbb
hlt
or
or
xchg
cmp
leave
cmp
fs
lret
mov
lea
test
inc
out
sbb
aaa
inc
jno
and
mov
push
adc
xchg
jg
gs
andb
pop
cmc
shll
js
jmp
xchg
lock
pop
sti
jecxz
xchg
and
jnp
xchg
loopne
je
out
les
jb
or
jae
jl
mov
xor
mov
push
in
stos
cs
lret
ss
mov
xchg
std
mov
in
ret
add
lret
cmp
ljmp
shrb
push
xchg
imul
repz
lods
pop
cmpl
and
cmpsw
pop
mov
lea
ss
add
xchg
pop
push
pop
jae
nop
pushf
out
mov
test
aas
cmp
xorb
inc
sbb
mov
call
into
push
loopne
daa
in
push
in
sub
push
xchg
fiadds
in
or
int3
jne
inc
scas
das
mov
mov
push
sbb
fists
test
push
cmp
insl
mov
test
pop
mov
lahf
add
loopne
ss
xchg
gs
popa
cwtl
mov
ret
sti
test
gs
pop
and
adc
xchg
jge
subl
in
arpl
ljmp
jp
lahf
mov
mov
movsb
pushf
inc
lds
loop
mov
add
jg
push
mul
insb
jbe
jmp
mov
jns
mov
repz
arpl
rcrb
jo
inc
sub
in
pop
mov
leave
add
sub
sbb
cmpsl
mov
out
xchg
jb
xor
dec
push
pop
lods
cmc
jb
and
mov
movsb
testb
lods
mov
leave
clc
add
ret
xlat
mov
std
or
cmp
fisttpl
pop
sahf
xchg
add
mov
push
and
jbe
rcrb
imul
mov
lcall
pop
scas
ss
mov
adc
stc
inc
shlb
cli
movsl
cmpsb
das
dec
sub
dec
push
cmp
inc
test
aas
mov
into
cli
or
dec
pop
jmp
test
aas
in
mov
xchg
push
pop
pusha
das
dec
xor
mov
sbb
dec
add
jb
fdivs
pop
xchg
pop
lds
cld
idivl
test
call
mov
stos
xor
dec
inc
and
mov
add
icebp
mov
add
les
gs
jle
jo
adc
test
pop
push
lds
mov
test
pop
daa
sbb
mov
inc
sub
das
sbb
insb
in
cld
mov
ds
dec
dec
call
inc
mov
shll
sbb
icebp
cld
sarb
xlat
jb
mov
aad
adc
dec
cld
ja,pn
pop
mov
clc
cmp
pushl
repz
outsl
pop
jbe
xchg
xor
and
cmpsb
call
pop
add
out
mov
lret
insl
sarb
xchg
negl
pop
in
sub
mov
repz
lods
dec
imul
fmul
jno
adc
jns
pop
test
ss
out
xchg
sub
cmpsl
inc
xchg
pop
call
adc
leave
fcompp
outsb
cmpsb
in
leave
ja
jp
xchg
test
inc
fnsave
dec
nop
or
inc
mov
mov
mov
mov
jge
in
xchg
inc
ss
xchg
cs
add
repnz
insb
das
and
push
or
out
cs
pop
scas
xorl
push
scas
in
adc
sub
lods
rcl
add
jp
xchg
and
fwait
jno
iret
push
jecxz
or
jno
movsb
fwait
mov
mov
ss
repnz
sub
mov
adc
rcr
popf
arpl
scas
popf
xor
stc
outsl
insb
sbb
sbb
dec
cld
fcmovbe
es
insl
jo
cmp
inc
ror
ljmp
xor
rcrl
pop
mov
aas
and
arpl
repnz
ret
push
jge
jno
js
xchg
cmpsb
sbb
leave
cli
fsubs
popa
mov
add
mov
ss
mov
out
lahf
in
sub
sbb
jg
fdivrs
cwtl
sbb
pop
or
subb
sbb
cmp
cmpsl
add
popa
cltd
mov
arpl
fadds
xorb
hlt
ljmp
pop
outsl
bound
sbb
mov
pop
mov
inc
sub
inc
push
jmp
inc
add
xchg
mov
push
cs
inc
cmp
fstl
xchg
sahf
xlat
jge
lods
jne
and
je
lods
push
jp
add
jmp
mov
in
popa
pop
jecxz
in
pop
ret
push
rcl
push
and
dec
jl
int
mov
add
ud0
fnstcw
xor
pop
mov
jge
and
dec
push
dec
fs
pop
aam
dec
out
jb
movsl
mov
xchg
das
popa
cld
add
adc
pop
fisubl
lea
out
lret
push
add
shrl
mov
jg
cmp
xor
out
pop
lahf
icebp
or
pop
dec
scas
les
push
xor
fldl
out
stos
sbb
bswap
leave
jl
les
stos
cmpsl
jns
imul
pop
andl
push
lock
outsl
stos
aam
push
mov
dec
cwtl
out
adc
pcmpeqd
repnz
or
push
imul
or
imul
repnz
add
xor
cmp
sbb
fs
mov
jg
jl
adcb
push
push
sbb
xor
or
aam
xor
sbb
gs
popa
and
scas
sti
xchg
hlt
cmp
cmpsb
arpl
dec
mov
dec
dec
cmp
xor
cmp
nop
inc
pusha
inc
repnz
xchg
or
jo
jne
in
sub
icebp
and
cld
mov
dec
sub
dec
mov
loopne
mov
filds
loop
leave
aas
lock
mov
mov
pop
xor
in
push
icebp
push
iret
lds
sub
addr16
outsb
imul
stc
pushf
lret
jg
lock
mov
pusha
fistps
js
add
inc
jb
pop
sarb
pop
adc
sahf
push
loopne
ds
jne
xchg
fiadds
mov
mov
outsb
in
int3
iret
lds
lret
cmpsl
jns
or
mov
ficompl
inc
jmp
repnz
and
imul
fstl
arpl
jle
mov
movsl
inc
xor
out
out
jo
lods
adc
std
xor
xchg
scas
push
or
out
pop
bound
daa
das
test
test
push
andb
push
bnd
loope
mov
outsl
lds
movsb
jle
std
push
nop
push
push
rcl
and
test
imul
mov
push
dec
jns
enter
or
push
push
pushf
repz
lcall
xor
sahf
stos
mov
xchg
jecxz
xchg
pop
lahf
cltd
jge
int
stc
popf
and
loopne
insb
gs
xlat
popf
sub
into
int3
sarb
lret
pop
lret
dec
out
test
xorb
stos
aam
push
add
mov
sub
jle
jg
mov
orb
in
dec
adc
mov
inc
xchg
cwtl
cmpsb
adc
add
fcmovbe
arpl
lret
xchg
int
int
jns
cmp
mov
out
nop
stos
dec
je
or
mov
fsubl
sub
test
adc
jge
jbe
dec
arpl
stos
movsl
lret
xchg
ret
dec
fwait
orl
daa
jno
dec
jge
adc
cmc
int3
cmp
cmpsl
pop
testb
test
imul
or
adc
xor
mov
cwtl
pop
movsl
and
leave
pop
jnp
push
out
mov
lods
mov
ss
cmp
stos
movsl
mov
xchg
fcomps
fisubs
call
jle
std
mov
dec
movsl
mov
push
insl
sub
push
mov
rol
or
sarl
pushf
dec
lret
aaa
aad
adc
insl
adc
mov
sub
and
cmc
mov
js
loop
sti
xor
cmpl
sahf
test
and
xchg
jg
inc
scas
je
mov
shl
mov
repnz
cmpsl
pop
in
popf
gs
inc
cmp
roll
je
jg
lea
and
loopne
outsl
scas
test
stos
and
lock
je
pop
mov
rcl
fadd
sub
cmp
rcr
arpl
negl
xchg
shrb
adc
lret
or
aas
jmp
pusha
xorl
insb
out
leave
std
sahf
in
into
mov
fmul
lahf
xchg
jecxz
xchg
inc
inc
push
jp
sbb
jb
pop
sub
pushf
push
scas
xchg
xor
fs
push
mov
sbb
cli
aam
sbb
insl
dec
cmp
inc
pop
push
push
fwait
pop
xor
hlt
sub
add
add
xor
movsl
cmp
sbb
adc
dec
or
pop
ret
data16
adc
pushf
faddl
test
mov
je
push
loopne
xchg
pushf
adc
inc
insl
push
test
mov
xor
in
xor
mov
rorl
lods
and
add
jl
lds
mov
std
jge
pop
sbb
inc
xchg
ret
sub
sub
fcmovbe
jne
fimull
add
add
push
loope
jbe
test
in
test
cltd
sbb
jecxz
mov
fsubr
subl
xor
roll
add
mov
dec
clc
pop
pop
inc
sarb
hlt
adc
iret
xchg
fmuls
test
push
push
and
sub
hlt
ljmp
sbb
mov
xchg
int3
mov
add
xchg
push
xchg
mov
xchg
sub
ss
sbb
xor
btr
and
dec
pop
out
cs
sub
mov
xchg
jmp
inc
push
cmpsb
cld
mov
scas
pop
fwait
mov
xor
pop
aaa
jle
pop
mov
xchg
or
fldenv
push
sub
inc
jne
loope
cmpsl
loop
insb
sbb
leave
fcmove
test
pop
sub
mov
push
aad
xchg
stos
xchg
xlat
push
mov
jge
imul
mull
jo
repz
mov
pop
lcall
lahf
enter
jo
mov
out
fldl
insl
or
mov
shlb
test
xchg
fwait
sbb
cli
in
frstor
xchg
test
cli
jne
cmp
jge
jno
pop
pop
shlb
int3
mov
mov
mov
loope
mov
aad
hlt
out
xchg
and
lret
mov
adc
xchg
push
rep
sbb
loop
repz
mov
cwtl
push
ret
xor
les
fbstp
fmuls
cmp
repnz
pushf
xchg
mov
sbb
add
add
test
sub
or
pop
add
das
js
shrl
jp
push
push
adc
pushf
pop
adc
jnp
cltd
push
sbb
test
and
les
dec
jb
sbb
cld
adc
dec
xor
mov
jmp
and
cmc
bound
jp
xor
add
repnz
or
inc
movsb
mov
dec
cmpl
divl
jle
imul
into
ret
imul
add
ss
xchg
push
fs
rcl
inc
pushf
repz
popf
cmp
or
adc
jp
mov
pop
cs
jne
jns
pop
xchg
hlt
loop
inc
and
aam
sahf
xor
cli
leave
inc
js
int
out
mov
or
cmpsl
xor
call
lods
cmp
adc
pop
shll
adc
mov
ljmp
loope
repz
out
jmp
je
in
jg
pusha
aam
pop
call
mov
enter
push
push
cmc
aam
add
cld
sub
out
push
jle
mov
jge
test
sbb
jnp
sub
lret
push
jmp
lock
test
sbb
mov
imul
fistps
fldenv
dec
out
xchg
stc
ljmp
mov
inc
addr16
fstpl
pop
dec
pusha
jae
add
dec
add
sbb
in
cmpsb
mov
and
stos
mov
out
mov
mov
push
add
inc
subl
push
dec
hlt
es
add
and
lret
push
xchg
xchg
pop
out
fmuls
adc
stos
ficompl
mov
push
xchg
jecxz
sbb
inc
rcrb
lea
mov
push
dec
push
call
mov
ss
xchg
inc
sub
add
add
add
popa
inc
dec
jge
mov
ret
shlb
push
out
rcrb
xchg
sbb
sbb
sbb
in
popf
pusha
es
das
int3
lret
out
cmpsl
pop
mov
push
inc
out
jne
pop
lods
cwtl
ds
pop
jmp
sbb
pusha
or
test
jb
int3
adc
jmp
mov
jg
int3
cltd
xchg
mov
out
clc
xchg
mov
jae
aam
or
xchg
add
loop
je
jbe
dec
mov
dec
fimull
sub
sarl
sti
popf
sbb
cmp
dec
or
mov
push
repnz
jae
lods
inc
lods
mov
push
inc
pop
jp
cmpsl
and
push
cld
jecxz
push
inc
add
mov
test
adc
mov
inc
push
pop
call
mov
pop
sub
clc
or
lds
xor
fnclex
cltd
jnp
bswap
imul
mov
adc
jl
bound
repnz
jo
mov
push
mov
loop
ret
in
repz
push
push
push
push
aaa
in
cmp
pop
inc
lock
rorl
outsb
sub
jecxz
in
test
shrl
xlat
leave
mov
push
sti
test
es
or
sub
outsl
mov
adc
jnp
orl
ds
pop
aad
mov
pop
xor
push
movsl
in
cmp
jno
loope
xor
ja
in
in
xchg
sbb
cmpsb
cmp
fimull
inc
hlt
flds
sub
jecxz
and
in
ss
lcall
adc
aad
lcall
pusha
hlt
xor
push
dec
mov
scas
mov
sbb
pop
or
lcall
add
sti
push
cmc
mov
xor
sub
adc
nop
fnstenv
fdivrl
xchg
dec
push
pusha
xchg
mov
into
in
push
pop
lret
add
sub
icebp
loopne
mov
adc
mov
mov
insl
sbb
xchg
dec
push
lcall
mov
xor
and
cmp
mov
mull
mov
sub
lods
push
loopne
mov
nop
popl
in
cmpsb
cmp
inc
pop
sbb
clc
sub
fistpll
rolb
xor
aam
fcmovnb
pop
xchg
lods
sbb
xorl
ljmp
adc
mov
pop
lret
test
in
aas
and
mov
sarb
mov
leave
stos
sbb
pushl
sbb
sbb
mov
subb
arpl
jl
inc
rcl
repnz
jmp
jl
fidivs
stc
leave
pop
imull
push
sub
lea
jnp
sub
push
clc
sarl
clc
ljmp
pop
mov
sbb
sbb
dec
outsb
movsl
aam
mov
sahf
and
fisubrl
ret
out
inc
pushf
or
repz
pop
dec
xchg
push
inc
xchg
xchg
xor
stos
pop
mov
int3
nop
add
pop
add
adcb
jecxz
push
add
sahf
sub
ja
testl
xchg
movb
scas
nop
add
gs
fidivs
aad
test
jmp
cmc
mov
or
inc
and
in
ja
jl
pop
cmc
ss
push
shl
cmc
sub
cli
out
push
jno
mov
mov
cmp
pop
out
xchg
hlt
dec
mov
es
inc
pop
jb
jbe
jecxz
xchg
or
xlat
adc
mov
out
sbb
push
xor
mov
test
pop
xchg
xor
mov
mov
pop
xchg
pop
pop
mov
jge
xor
xchg
mov
call
xor
sub
stos
sub
mov
pop
push
insb
es
mov
cmp
inc
cmp
out
push
das
xchg
fs
cltd
or
loopne
jge
fs
mov
stc
xor
testb
pop
out
adc
aad
sbb
roll
cltd
sub
fwait
inc
dec
add
sti
gs
int
cltd
or
divl
dec
lods
jns
lcall
movsb
jnp
add
cmpsb
jnp
sub
sub
xchg
lahf
test
enter
adc
insb
mov
loope
sub
insl
add
cmp
out
jb
mov
sub
jmp
xchg
xchg
fbstp
outsb
mov
fadds
xchg
dec
xor
xor
into
cmpsl
fildl
sbb
ljmp
dec
add
and
hlt
jle
int
jmp
mov
and
loop
or
ret
sub
sbb
repnz
add
daa
lret
push
jl
adcb
lret
and
sbb
lret
cmp
push
outsl
cmp
and
xchg
clc
scas
or
sar
push
sahf
mov
or
stos
pop
xor
push
and
push
or
add
ret
pop
sbb
aas
jmp
fdivrs
outsb
push
mov
imulb
ficompl
jle
bnd
fucomip
ljmp
cwtl
xlat
inc
test
jne
sbb
ss
sub
sbb
insb
lahf
inc
mov
mov
push
lret
jo
or
fld1
notl
clc
jbe
push
movsb
insl
cmp
nop
test
bound
push
aaa
cmp
rol
repnz
push
mov
add
cwtl
push
fs
ss
xor
hlt
fbstp
xchg
jno
and
loop
outsb
test
inc
add
push
jne
pop
dec
notb
push
aam
or
sahf
aaa
enter
pop
les
in
fisubl
xchg
fstpl
and
nop
push
mov
enter
sahf
movsb
jo
test
ja
and
das
adc
ljmp
ret
dec
sbb
inc
in
mov
lds
in
adc
cwtl
xchg
das
xor
pop
xchg
adc
add
faddl
add
dec
push
dec
lsl
jge
stc
sbb
fldcw
add
mov
test
mov
push
sbb
icebp
adc
inc
adc
push
mov
insb
out
push
fcmovb
xlat
test
mov
not
xlat
sbb
addr16
roll
push
stos
inc
pop
subb
int
das
push
add
jg
mov
jge
lods
mov
repz
cs
test
call
jns
nop
mov
xchg
push
lahf
jecxz
sbb
mov
fucomip
sub
pop
jno
test
sarb
pop
jg
test
jp
andb
mov
loop
push
rol
jmp
les
push
out
aas
jge
ds
mov
arpl
aaa
cmpsb
ds
iret
pop
sbb
cs
imul
mull
sti
sbb
ljmp
sbb
mov
sbb
aad
dec
sbb
test
mov
imul
ja
push
inc
fistl
dec
orl
mov
pop
mov
add
or
out
xor
or
inc
jbe
lods
mov
dec
cld
call
mov
and
mov
repnz
push
imul
xor
fstps
ljmp
sub
shlb
sub
push
fadds
lds
pop
addr16
loopne
daa
lret
jl
fsts
mov
jge
cmpsb
test
cmova
adc
lcall
mov
inc
test
xchg
cs
push
xor
sbbl
in
cli
sarw
aam
dec
lea
call
fs
push
jae
mov
add
sub
adc
lods
add
dec
stos
sahf
or
sbb
rorb
pusha
pop
mov
out
and
shlb
xchg
lock
xchg
mov
adc
ret
xlat
iret
sub
inc
test
adc
jns
add
mov
lods
xchg
jo
ljmp
dec
movsl
bound
cld
test
ret
lret
pop
pop
arpl
jmp
call
add
cmpsb
shlb
fcoms
sub
xchg
cmp
pop
fcomps
sbb
push
cld
fwait
mov
cmp
call
mov
adc
and
ljmp
lahf
xlat
mov
mov
rorl
es
or
mov
mov
dec
jge
stos
fwait
outsl
je
dec
mov
fsubrs
fs
sahf
lahf
movsb
sub
xor
leave
mov
inc
test
mov
pop
int
roll
add
lds
mov
mov
adc
xchg
and
repnz
sti
and
mov
sbb
cmp
or
cltd
out
cmp
inc
lret
fbstp
jle
mov
out
inc
mov
ret
fldt
arpl
repz
mov
cmpb
hlt
xchg
test
cli
sub
insb
test
dec
and
adc
xchg
mov
pop
and
jne
and
xlat
cmpsb
addr16
icebp
xchg
adc
push
stos
out
mov
add
hlt
aad
or
push
cmp
or
add
iret
inc
or
shlb
jl
cmp
cmc
mov
push
sbb
sbb
and
mov
dec
push
mov
repz
jmp
scas
lea
dec
lea
mov
push
in
sub
pop
inc
call
bound
inc
gs
mov
lahf
lods
pop
cwtl
add
xchg
aas
sbb
outsb
popf
adc
cmp
mov
cli
jge
sbb
cli
jle
pop
inc
mov
xor
sbb
sub
jno
aad
jl
push
aas
ret
sub
mov
sbb
cmp
mov
jnp
xor
aas
xor
aad
lock
xor
adc
or
sub
clc
jle
or
mov
and
push
push
negb
lods
jle
sub
or
aad
movsb
pop
xor
push
arpl
in
hlt
add
pushf
ret
test
xor
dec
cmp
jo
sub
sbb
xchg
dec
fadds
ficoms
pop
sahf
repnz
jg
inc
push
rcl
fwait
aad
add
xchg
pop
mov
enter
add
cwtl
pushf
xchg
cld
out
adc
mov
aaa
adc
ret
mov
lock
ret
xor
lcall
int
xchg
jne
or
xchg
data16
mov
xchg
inc
cld
outsb
push
inc
xchg
dec
push
ret
jae
call
icebp
out
mov
adc
xor
sub
dec
stos
hlt
fcompl
pushf
popf
pop
jmp
call
rdmsr
mov
icebp
cmp
gs
or
repnz
outsl
aam
leave
sbb
test
leave
cwtl
pop
xchg
ret
arpl
mov
fidivl
rcrb
dec
dec
jbe
xchg
or
or
enter
mov
ds
daa
daa
mov
dec
push
imul
sarl
imul
lcall
mov
or
addb
inc
cmp
xor
push
repz
jmp
stos
add
xchg
and
jnp
cli
and
insb
lret
faddl
and
jno
dec
push
inc
xlat
mov
or
inc
scas
hlt
ss
or
mov
je
aad
dec
mov
dec
rcr
je
push
jb
fidivrl
push
or
pop
jg
and
pusha
jbe
mov
je
loope
sarb
sbb
or
bnd
pop
push
and
and
out
call
mull
inc
data16
data16
xchg
mov
ret
test
xchg
cs
and
out
mov
mulb
pop
out
xchg
test
add
popf
ds
and
inc
mov
fwait
inc
cld
dec
jmp
jmp
inc
xlat
xor
cltd
nop
or
or
dec
xor
jmp
ror
jo
dec
push
adc
aaa
dec
daa
push
pop
adc
jne
mov
push
inc
ret
inc
cmc
clc
mov
and
mov
jge
movsl
sub
stc
nop
shlb
ret
push
jnp
addr16
lret
cltd
nop
and
dec
jo
in
movntps
jno
mov
push
lea
cmpsb
orl
mov
out
adc
or
pop
adc
jne
pop
je
push
add
mov
cmpsl
orb
or
or
push
loop
imul
jns
mov
aaa
pop
dec
xor
fisttps
xchg
and
push
push
lds
aam
shll
adc
es
outsl
loope
mov
roll
xchg
adc
repnz
clc
enter
orl
xchg
pushf
lock
stc
dec
xchg
xor
push
outsb
mov
or
adc
cmp
mov
loopne
lods
test
pop
or
mov
mov
mov
mov
test
mov
iret
mov
test
aas
leave
les
xchg
dec
ljmp
cmc
lods
adc
push
stos
sub
add
inc
mov
cmp
push
push
pop
mov
imul
pop
jmp
ss
aaa
pop
mov
je
inc
or
nop
xor
stos
aam
or
shrl
add
enter
xchg
or
es
lcall
fcomps
xor
out
lods
jns
cmpsl
xchg
jbe
mov
cld
rcrb
cmpb
mov
ds
ret
test
std
ljmp
mov
xchg
subl
jne
and
xor
xor
xchg
rolb
xchg
mov
lea
sub
mov
pushf
pop
mov
aas
pop
push
push
cmp
adc
aaa
inc
or
pop
mov
stc
pop
adc
adc
fistl
xchg
test
jne
add
dec
fstpt
mov
arpl
mov
fwait
xchg
cwtl
das
jl
icebp
inc
das
push
movsb
loop
push
ja
insb
inc
fstl
rorb
add
dec
or
mov
mov
xlat
shl
shrb
jnp
cmpsb
sub
mov
push
sub
mov
jmp
movsl
loope
addr16
call
or
add
iret
mov
adc
xor
add
divb
arpl
bound
jg
lahf
insb
push
jo
negl
or
lods
fwait
cli
or
scas
cmc
movsb
xor
mov
inc
sarl
imul
or
fs
jne
adc
xor
fcomps
dec
adc
out
dec
jp
je
and
lods
sub
inc
and
mov
mov
or
xor
stc
imul
jp
mov
dec
add
mov
cltd
aaa
mov
sar
roll
es
adc
adc
xor
inc
xchg
cld
mov
xchg
das
or
xor
je
filds
sub
xor
movsl
dec
cmpsl
inc
data16
out
push
jge
dec
jge
imul
shrb
push
and
dec
and
aam
jle
scas
pusha
sbb
add
movsb
inc
cmp
out
pop
scas
out
out
shrl
jb
arpl
xchg
ficoml
in
jle
inc
sub
xchg
mov
add
add
add
xor
adc
lock
ds
mov
xor
xor
leave
pop
inc
jecxz
pop
xor
mov
mov
scas
sbb
loope
jae
inc
cli
ret
xchg
dec
into
lahf
mov
jmp
mov
cs
ds
pusha
push
cmp
mov
xor
cmp
xchg
push
push
mov
pop
fnstsw
xor
xchg
scas
mov
cmp
out
test
cmp
cmpl
fisubrs
jne
adc
addl
mov
fwait
aam
sub
inc
test
test
push
mov
cmc
rcll
in
sbb
xchg
pop
adc
adc
sbb
and
scas
out
jecxz
cltd
cmp
jl
out
fs
in
xor
je
cli
xchg
cmp
pop
cltd
xor
sub
js
int
jle
fbld
or
jne
jns
rcrl
lret
bound
dec
cmp
fisttpll
std
push
cmp
sub
and
pop
lods
jae
mov
adc
divb
notl
dec
loopne
aad
lds
inc
pinsrw
push
push
inc
in
xlat
shlb
or
loope
dec
jae
loop
xor
dec
fs
out
dec
or
jns
dec
sbb
adc
lods
outsb
ds
popf
push
mov
xchg
subl
int3
inc
pop
dec
xchg
clc
jl
fisubrl
pop
cmp
jno
mov
xchg
cmp
ret
shll
adc
dec
jl
pop
jg
bound
dec
es
lcall
stc
clc
push
xchg
dec
jb
xchg
js
add
rcrl
adc
ja
pop
cltd
stos
bound
in
cs
outsb
mov
repnz
insb
mov
adc
and
mov
lock
xchg
lods
mov
test
lea
pop
loope
das
xchg
sti
fwait
unpckhps
jmp
lock
and
fsubl
mov
test
clc
jne
dec
push
xor
xchg
mov
fisttpl
fldl
icebp
push
pop
cltd
aam
xor
xor
into
sbbl
sub
int
cmp
call
in
xor
enter
in
loop
iret
xchg
dec
sti
icebp
and
mov
mov
mov
lret
gs
and
add
pusha
imul
icebp
ljmp
int3
mov
int3
xor
mov
lock
hlt
cmpsl
add
sub
cld
pop
cmc
pop
jge
repz
cltd
pop
push
or
mov
ret
cmp
arpl
inc
or
outsb
xor
jne
push
cmp
repnz
outsb
shlb
xchg
fiaddl
outsl
and
bound
cmp
jmp
adc
cmp
test
clc
mov
sub
and
pop
fcomps
in
and
in
sahf
sub
add
out
lcall
dec
mov
pop
push
cmp
int3
mov
fwait
push
cmp
es
out
jb
dec
sub
adc
jmp
or
and
or
out
movsl
dec
ficompl
xlat
pop
jmp
xchg
ljmp
jl
jo
aas
adc
ds
pop
stc
add
lcall
pop
jmp
mov
sti
pop
imul
into
stos
test
fcomps
out
loopne
xor
fwait
inc
inc
dec
je
push
push
cmp
hlt
test
hlt
dec
test
push
xor
std
push
fstl
call
addr16
and
pop
arpl
out
jmp
sbb
dec
insl
rorb
out
mov
inc
adc
test
cmc
push
dec
repz
adc
mov
adc
sti
xchg
insb
inc
and
add
inc
push
inc
xchg
stos
popa
aaa
xor
scas
pop
pop
sarl
fnstenv
ret
or
lds
out
lea
js
or
pushf
mov
shll
inc
jge
xchg
fisttpll
add
or
jmp
test
push
push
sbb
cmpsb
push
dec
insb
movsb
stos
add
cmp
xor
xor
cwtl
dec
subl
aaa
fisubl
xchg
xchg
repz
test
cld
pushf
push
adc
jb
fcoml
cmp
mov
loope
xor
mov
adc
insb
xchg
jns
or
int
loop
dec
or
push
nop
mov
aad
sti
sbb
int3
ficomps
lahf
cs
das
pop
mov
mov
dec
mov
sub
xor
sahf
outsl
inc
push
push
xor
pop
push
and
sarb
sub
rcrb
inc
ret
dec
or
xor
pusha
adc
js
xchg
sbb
xchg
cli
movsb
inc
repz
jae
inc
cmp
pushf
pop
divl
push
xchg
scas
push
cld
mov
cmp
inc
pop
push
insl
faddl
mov
jb
sbb
cmp
loope
stc
xchg
mov
lahf
mulb
scas
jnp
jp
cmp
dec
and
inc
xchg
pop
scas
mov
mov
jbe
in
jns
imul
sbb
sub
test
push
pop
sub
and
lahf
cli
xchg
sahf
xchg
dec
leave
les
xchg
jge
lock
push
sbb
xchg
inc
add
adc
in
fs
sub
lahf
jno
inc
daa
aam
cmp
or
idivb
inc
xchg
in
dec
nop
dec
fistpll
movsb
cmpsl
mov
pop
cmp
dec
sbb
xlat
jl
or
mov
dec
cmp
mov
mov
aas
fcom
stos
or
je
dec
mov
or
mov
pop
shl
mov
jmp
stc
cmp
adc
and
or
mov
inc
jle
jle
jg
out
push
mov
adc
lea
mov
push
or
and
jmp
pop
push
imul
cmpl
clc
xchg
aas
mov
popa
jnp
imul
ds
lcall
mov
xchg
divl
das
lea
mov
pop
inc
outsl
xchg
scas
ss
aas
mov
push
es
push
test
dec
popa
mov
cwtl
ds
push
and
mov
aas
jb
push
repz
sbb
into
xchg
pop
mov
rcrb
sub
shlb
inc
cli
mov
sub
loop
pushf
mov
dec
pop
rcrb
nop
andl
cli
sub
jb
sub
subb
mov
pop
add
dec
bound
ror
out
cmp
rcrb
jb
lret
cmpsb
repz
mov
push
stos
xchg
adcb
or
ds
mov
mov
and
push
ds
sub
mov
pop
mov
push
pop
sbb
and
mov
out
mov
sbb
sbb
loopne
shlb
mov
dec
std
ret
movsl
sbb
sahf
and
jno
jg
cmp
outsl
imulb
lock
mov
in
xchg
loop
sarb
ja
xchg
ficoml
jnp
mov
mov
sbb
sub
jl
lahf
or
pop
mov
jb
fdivl
mov
mov
rcrb
inc
pop
push
ret
dec
lcall
cld
pop
out
subb
pop
ret
fwait
inc
cmp
pop
cli
sub
mov
idivl
int3
in
inc
addr16
sahf
sub
sub
jl
fcmovnb
jbe
cltd
lods
sub
xor
jae
and
mov
and
dec
loop
cmp
jmp
call
xor
outsb
rcrb
ret
mov
stos
mov
sub
sub
jae,pt
cmp
push
fwait
mov
xor
cld
test
xor
sbb
add
lret
ret
jmp
sub
jle
cmpsl
rcrb
clc
fiaddl
mov
sbb
push
pop
jg
dec
pop
jbe
les
and
mov
stos
xor
mov
sbb
insl
ja
mov
stos
push
xchg
mov
jl
lods
shlb
mov
mov
ret
push
popf
sub
adc
push
xor
adc
cmpsb
test
xchg
and
jne
clc
xchg
stos
xor
ds
test
mov
fbstp
es
fildll
inc
rol
test
lods
cs
pop
test
add
mov
scas
push
mov
cld
inc
and
icebp
pop
lret
inc
push
shlb
jmp
in
lret
ret
scas
addb
stos
aas
cmp
shlb
stos
movmskps
cmp
jecxz
mov
pop
or
ret
and
arpl
pop
and
sub
sub
mov
jb
ljmp
push
add
int3
outsb
mov
jae
repnz
mov
stc
sti
pop
jns
in
add
adc
mov
inc
imul
xor
jno
adc
sub
out
cmp
mov
adc
mov
mov
cmp
insl
cmc
xchg
jbe
cmp
aam
loopne
test
pop
sbb
lods
push
shll
xchg
adc
repnz
pop
sbb
jne
pusha
mov
xor
imul
test
pop
jo
sahf
sbb
mov
push
or
out
xchg
cmpl
test
ljmp
jecxz
lods
cmp
hlt
mov
push
jno
mov
or
fldt
dec
je
out
cli
iret
aaa
dec
adc
pop
fidivrl
loope
mov
popf
imul
sub
cmovnp
jle
mov
fyl2x
xor
mov
inc
testb
dec
out
sub
push
out
mov
jo
es
xor
and
out
fldt
add
das
fnstsw
pop
mov
lock
je
clc
mov
shl
inc
lret
sarl
out
jge
push
shl
mov
not
inc
sub
inc
out
or
mov
adc
mov
pop
push
or
or
stc
gs
sub
adc
cmp
dec
test
clc
aad
incb
inc
mov
fucom
aaa
vcomiss
les
jnp
aam
pop
xor
dec
call
gs
leave
xor
fiaddl
jge,pn
xor
add
fwait
ds
and
xor
test
jnp
popf
inc
or
push
shll
push
or
into
and
lcall
xchg
pusha
sti
mov
rcrb
call
push
addl
in
stos
push
mov
cmpsb
scas
and
sbb
xchg
inc
iretw
mov
xor
and
inc
fsubl
mov
sqrtps
or
and
sub
xor
jle
imul
mov
or
jmp
cmc
xor
ss
jecxz
outsl
push
mov
add
mov
faddl
sbb
and
dec
imul
push
jne
push
enter
and
fimull
lahf
std
pop
inc
sbb
fisubs
fwait
pop
arpl
lods
outsl
cltd
sub
inc
into
popa
out
bound
adc
pop
jle
cmp
std
cmp
aaa
out
or
xor
sub
es
mov
xchg
mov
or
add
pop
adc
or
cld
sbb
fs
sub
enter
sbb
inc
dec
lahf
imul
fdivl
cmp
jecxz
mov
cli
cltd
jo
mov
mov
loopne
adc
sbb
cmp
inc
out
bound
adc
xchg
inc
xor
ds
mov
arpl
rcl
jnp
in
cli
sti
inc
jbe
aam
js
dec
mov
push
sbb
push
dec
or
inc
jno
xchg
push
adc
loope
sbb
add
inc
xchg
inc
xor
xor
jp
stc
out
mov
inc
stos
int3
push
push
push
dec
adc
mov
or
test
adc
enter
sub
std
sub
jns
jle
pop
cltd
cmpsb
mov
mov
xor
xor
push
add
or
shlb
add
lcall
push
fimull
and
shll
adc
out
mov
and
adc
jno
cmp
leave
dec
in
lds
push
enter
sub
mov
add
or
aad
lcall
sub
dec
xlat
dec
mov
xor
shlb
mov
fmuls
xchg
pop
andl
sbb
aam
popa
mov
xchg
lods
inc
imul
pop
xchg
cld
jo
xchg
rol
jge
fbstp
cltd
shlb
cmpsl
bound
sub
mov
push
sbb
xchg
int
ret
and
mov
push
ss
sbb
jl
loope
loopne
sub
or
mov
mov
sub
popf
jmp
mov
pop
mov
test
in
es
popf
sarl
push
and
sbb
dec
outsl
mov
inc
insl
roll
fldl
sub
jmp
scas
rclb
xor
adc
add
andb
pmaxub
scas
fistpll
cli
pop
or
or
daa
dec
and
push
mov
test
popf
adc
adc
test
and
lcall
inc
pop
sbb
mov
hlt
jbe
inc
cli
jo
dec
xor
xchg
xor
jae
les
mov
insb
fidivrl
mov
ja
aaa
mov
xchg
mov
sub
mov
scas
xchg
call
pop
cmp
xchg
lret
movsl
push
or
lret
pop
inc
mov
scas
mov
jmp
clc
into
les
mov
dec
add
xchg
in
push
add
aas
pop
lahf
sbb
ss
mov
push
sti
repz
sub
xlat
and
cmp
imul
mov
imul
stos
mov
hlt
lret
xor
mov
or
push
add
aam
ljmp
imul
lcall
and
fsubr
push
adc
lcall
pop
aad
mov
cmp
clc
jp
icebp
push
scas
movsl
pop
or
jle
push
icebp
cltd
mov
jmp
ja
movsb
pop
scas
aad
sub
inc
push
dec
cltd
mov
aad
inc
pop
in
lea
jno
aam
adc
push
cltd
jns
jne
sbb
aas
das
sahf
and
ljmp
push
jp
lods
mov
fsts
xchg
lods
lods
and
aas
mov
mov
dec
ret
filds
pop
inc
add
outsb
and
inc
mov
push
and
jge
stos
and
repnz
stos
sbb
and
mov
jo
flds
repnz
rcrb
sbb
push
in
pop
push
and
jle
sub
andl
mov
decl
and
cmpsl
cli
test
pop
in
gs
ret
mov
fisubl
xchg
mov
pop
dec
lods
shlb
fwait
movsl
add
js
push
je
or
sub
or
inc
and
mov
popa
pusha
lock
mov
add
imul
divps
and
jne
push
clc
inc
mov
imul
aas
aam
das
loop
inc
mov
aas
loopne
push
movsl
out
mov
stos
jge
mov
mov
stos
idivb
mov
or
pop
and
jns
stos
add
mov
sbb
inc
pop
in
xorb
jge
call
and
pop
add
sub
add
adc
les
mov
mov
sahf
call
adc
jmp
mov
mov
mulb
insl
push
negb
cmp
xchg
adc
movsl
ret
mov
test
xchg
aas
scas
insl
psubusb
movsb
test
push
add
lds
push
shr
push
pop
or
fdivrl
ljmp
cmpl
jo
aad
xor
into
lds
pop
nop
jl
and
movsb
jo
pop
subb
or
add
cmp
out
dec
dec
push
inc
xchg
arpl
pop
fbld
stc
dec
jnp
xchg
mov
popf
test
and
stc
scas
ret
sahf
mov
adc
aam
mov
aaa
mov
and
test
gs
xor
jo
jae
cwtl
gs
addb
push
jae
cltd
add
dec
je
push
or
xchg
mov
loop
jle
jge
and
push
bound
push
movsl
sub
dec
jl
mov
repz
sahf
mov
push
ret
jp
pop
xor
xchg
mov
in
mov
or
sbb
pop
popa
arpl
adc
inc
sub
stos
pop
stc
inc
mov
add
fimull
icebp
in
mov
in
sub
mov
cltd
cld
pushf
push
sbb
out
xchg
repz
mov
and
pop
dec
jmp
ja
mov
cwtl
fwait
gs
loop
dec
testb
into
jne
xchg
inc
jns
mov
pop
mov
mov
imul
in
popa
lret
add
jmp
inc
dec
test
rcl
in
lea
adc
xchg
mov
jne
std
js
mov
mov
xchg
xchg
mov
call
jp
iret
rcl
add
stos
jne
in
pop
popf
lods
cmpsb
sub
dec
pop
loop
xor
in
xchg
jnp
stos
rcr
or
or
adc
mov
push
sbb
mov
pop
das
jno
fs
mov
dec
ret
mov
push
pop
pop
cld
jle
xor
mov
insl
in
xor
xlat
mov
inc
fildll
lret
adc
lock
pop
cld
jae
add
mov
push
push
pop
mov
or
mov
fs
imul
adc
jecxz
rcll
aad
and
lods
rcrb
and
and
ffree
aad
out
sahf
cmp
pusha
ja,pn
mov
fcmovb
push
movsl
fldenv
mov
das
sbb
adc
lods
or
xor
mov
push
add
out
and
or
movzbl
jnp
ds
aam
daa
xchg
sub
test
or
test
dec
dec
scas
push
popa
pop
xchg
pop
aad
test
call
movsl
dec
sub
shl
cmp
add
cmp
inc
and
xchg
sbb
mov
add
popf
repnz
sti
mov
dec
sarb
push
push
mov
movsl
lahf
repz
ds
js
push
fsubl
addr16
and
idivb
mov
sub
dec
xor
popa
jo
and
xor
roll
push
pusha
popa
pushf
add
dec
xchg
ret
and
jo
mov
cld
and
xchg
push
inc
mov
adcl
insl
xor
mov
jecxz
jns
push
es
ret
shrl
in
in
jb
xchg
clc
cmp
movsb
stos
popa
pop
lods
divl
cltd
xchg
xor
fidivrl
xchg
and
aam
stc
and
or
shrb
cmc
rolb
popa
enter
aad
es
shrb
mov
jbe
repnz
roll
shl
aaa
mov
xchg
adc
leave
sub
bound
and
jae
addr16
ja
mov
pushf
mov
mov
and
jno
inc
outsl
add
xchg
fcmovb
std
popa
loope
filds
pop
cld
loop
pusha
leave
scas
aam
sub
cmp
or
loopne
fiaddl
mov
jne
pop
mov
out
ljmp
add
je
pop
sub
jo
pop
xor
push
bound
sub
pop
jae
push
shll
xchg
pop
subb
add
clc
scas
test
nop
cmpsl
pop
and
scas
mov
mov
cmpsb
sub
or
out
in
pop
imul
pop
mov
pop
leave
loopne
push
xor
div
dec
in
call
stc
push
popa
aaa
movsl
fstpt
inc
icebp
inc
arpl
js
out
mov
sub
lahf
push
test
loopne
mov
xor
arpl
test
insl
daa
and
add
cmp
ja
movb
bound
iret
aaa
cmc
pop
lock
in
fistpll
lret
push
fwait
jmp
pushf
lret
pop
and
scas
es
das
test
int
fistpll
sbb
jns
xchg
ficoml
inc
jno
roll
push
int3
aad
jl
push
push
movsl
outsl
xor
mov
ljmp
jo
adcb
pop
outsb
cld
pusha
bound
aas
cmp
fisttps
xor
loop
mov
rorl
cli
sub
lret
stos
outsb
xchg
mov
cmp
xor
push
arpl
std
loop
sub
push
adc
adc
pop
adc
dec
scas
pop
shlb
in
xor
jg
stos
sbb
out
and
sbb
fyl2xp1
out
sbb
mov
sbb
push
aad
mov
rcr
lds
mov
inc
rolb
aad
and
es
sbb
ret
inc
fimull
movsl
bnd
push
std
out
dec
inc
adc
mov
shrb
cltd
jno
xor
syscall
orl
mov
fcmovbe
iret
add
ds
fcmove
or
test
cmpb
fs
xor
stos
push
xor
mov
ss
push
divb
adc
pop
dec
aam
cmp
add
xchg
daa
push
mov
jl
sbb
mov
mov
sbb
mov
sbb
test
jno
or
pop
pop
or
jmp
add
gs
jp
repnz
lret
add
testl
push
inc
in
testb
push
pop
sbb
cmp
loop
cld
cld
out
cwtl
in
cmp
loope
xor
jae
ds
jbe
in
inc
mov
push
pop
cmp
jle
cmpsb
and
xor
dec
stos
xchg
jmp
fxch
in
ret
mov
out
push
adc
push
cmpsb
add
roll
inc
lea
xorb
jbe
aam
or
pusha
lods
inc
mov
mov
pop
insb
mov
es
adc
pop
mov
clc
jno
test
xlat
test
imul
insl
mov
pop
add
mov
mov
mov
cli
loop
sub
jns
lahf
andb
pushf
adc
or
sahf
sbb
xchg
movsl
fcmovu
and
and
shl
imul
pop
mov
sbb
jnp
ja
jne
and
mov
lcall
stos
cmp
dec
je
in
daa
sbb
fimull
mov
cmp
or
outsb
sub
add
sub
pop
cli
aam
rclb
out
push
lahf
pop
pop
xor
aam
sbb
or
fs
ficomps
cld
inc
jle
fs
sti
lea
in
sub
int
daa
inc
out
in
addr16
fcmovne
mov
pop
divb
cmc
lods
hlt
das
sbb
lods
les
mov
mov
adc
std
fistpll
stos
xor
icebp
xor
cs
int
je
inc
popf
stos
mov
push
push
inc
mov
lret
push
call
cli
xor
and
cld
adc
lcall
sti
mov
icebp
rcrb
fimuls
mov
pop
sbb
cld
dec
jg
jne
push
fistpl
mov
mov
cmp
int
cmp
fistps
inc
sbb
sahf
push
fbstp
js
jno
lds
pop
subb
pop
sbb
sbb
jmp
mov
xor
repnz
jae
dec
fwait
test
push
iret
xor
sub
sub
fidivrl
mov
jg
inc
xchg
hlt
or
insb
mov
inc
loopne
xchg
xchg
inc
insl
in
dec
pop
mov
xor
sub
into
filds
popa
push
out
jl
in
loope
iret
or
inc
je
rclb
jbe
mov
cli
mov
mov
repnz
out
and
and
xor
add
fdivr
dec
dec
cld
sub
pop
inc
lahf
fwait
test
shlb
mov
push
mov
in
xchg
xor
adc
call
jge
mov
adc
sbb
shll
jp
pop
mov
sub
orl
arpl
out
sbb
in
mov
add
pop
insb
sub
adc
ret
push
mov
sbb
dec
dec
push
gs
loope
flds
sbb
inc
out
xchg
adc
push
lcall
and
mov
pop
mov
jp
inc
push
mov
fdivl
mov
aaa
inc
jecxz
mov
xchg
push
adc
lcall
movb
jo
jmp
pop
int
fnsave
out
lret
movsb
xor
pop
xor
outsl
mov
lea
sub
and
mov
dec
lock
ret
jge
out
xchg
clc
sub
jle
mov
rcrl
aas
jbe
sbb
mov
lret
xor
sahf
outsl
pop
in
fidivrl
xlat
add
mov
mulb
mov
xlat
xor
icebp
andl
movsb
pop
sbb
jle
sub
adc
xchg
in
test
sub
or
and
pop
idivb
sub
pop
fimull
dec
add
cli
sbbl
xor
aas
iret
insl
jmp
loop
sub
mov
jnp
pop
in
out
adc
in
movsb
out
push
pop
mov
fcompl
lcall
sub
jmp
lcall
mov
les
push
fs
jae
push
fsub
gs
das
movsb
jnp
or
lret
shrl
mov
dec
rcl
pop
pop
dec
das
inc
lret
dec
notl
sbb
jnp
cmpsb
movsb
testb
pop
in
stos
insl
and
das
mov
fwait
rcrl
inc
repnz
sub
adc
nopl
aam
or
push
gs
loopne
cmp
je
in
clc
jo
cmp
cmp
pop
in
xor
ret
add
sub
mov
mov
mov
lds
cs
mov
mov
adc
sub
scas
addb
mov
push
pushf
sbb
pusha
mov
and
in
sbb
jo
lock
out
jnp
mov
add
fnsave
push
loop
aaa
enter
adc
lcall
mov
inc
xor
jnp
pop
adc
mov
adc
push
loop
inc
mov
lods
or
inc
add
push
pusha
cmp
mov
jge
add
xchg
subb
pushf
hlt
mov
test
fsubs
or
enter
movsl
popf
sti
cltd
sub
sub
filds
nop
orl
pop
js
pop
mov
mov
ds
and
int
aam
mov
pop
repz
stos
dec
or
push
sub
sbb
dec
sbb
jbe
ret
mov
or
adcb
inc
jl
fmuls
cmpl
test
lea
mov
and
lcall
push
inc
repz
jns
mov
dec
out
push
xchg
cmc
mov
insl
dec
cs
filds
cmp
loop
negb
xchg
sub
jle
pop
and
fdivrs
lock
sbb
mov
frstor
mov
mov
and
int3
xor
add
jmp
jne
jg
ljmp
subb
inc
mov
xchg
dec
mov
jae
xor
push
sub
imul
adc
int
divb
cmp
cmp
outsl
sbb
ja
push
das
mov
pop
and
shrb
adc
mov
divl
xchg
mov
ds
and
int3
push
push
out
lret
out
sbb
cli
push
cmp
xor
int3
cli
xor
jnp
retw
jnp
insl
jbe
jg
add
xor
mov
addr16
out
jbe
pop
jl
popf
push
dec
scas
sbb
in
lret
inc
into
subb
popa
in
fistpl
imul
out
pushf
cmp
mov
stos
dec
js
jp
nop
fstps
les
sub
lret
xchg
xchg
mov
imul
mov
inc
mov
mov
lea
jl
shrb
jg
inc
lret
jae
scas
jge
lods
movsl
les
pop
jae
pop
call
scas
sub
sbb
and
add
jl
in
hlt
fcmove
in
dec
paddw
pusha
jo
div
lret
out
sbb
addr16
xlat
mov
arpl
mov
add
inc
int3
mov
out
sbb
mov
adc
iret
call
out
lea
ret
push
xor
andb
fisubs
popa
int3
dec
insb
in
lds
jae
ficomps
pop
or
shll
mov
test
sbb
jle
stos
mov
das
add
or
int3
push
pop
push
push
ds
dec
inc
addr16
mov
mov
movsl
and
xor
cmp
inc
aas
popf
fstl
adc
pop
sarb
inc
cwtl
out
mov
stos
out
adc
push
adc
push
imul
mov
out
rcll
stos
orl
cmp
add
hlt
cmpsl
push
fildll
aas
pushf
ss
jecxz
pushf
jnp
orb
stc
out
lods
mov
or
cmpsb
imul
rclb
cmpsb
mov
in
out
cmp
fmull
andb
test
xchg
rcrl
and
ficomps
mov
dec
outsl
jbe
cmp
in
std
sahf
or
sub
jmp
out
mov
mov
int3
rcrl
mov
cltd
push
cwtl
je
inc
adc
adc
mov
inc
add
mov
outsb
sbb
sub
mov
shl
cmp
aaa
dec
pop
out
xchg
dec
jmp
adc
pop
data16
in
and
fdivr
push
or
popa
push
sahf
insl
jmp
xor
sbb
push
sbb
add
mov
inc
mov
mov
xchg
or
push
fld
fwait
adc
xor
imul
adc
repnz
popa
sub
or
mov
pusha
cmpsb
negb
push
xchg
cmpl
xor
mov
fnstcw
loop
fiaddl
mov
mov
sti
pop
shl
aad
out
xchg
mov
insl
mov
adc
and
or
inc
mov
sahf
mov
in
sub
shll
cmp
mov
sbb
jmp
and
mov
pop
lret
lret
inc
jg
sub
pop
jg
decl
es
cmp
push
outsl
pushf
jmp
lods
aaa
and
psraw
aaa
cli
repz
sub
andl
pusha
sbb
xor
dec
ja
jg
addr16
mov
push
push
int3
mov
mov
xchg
clc
jbe
mov
sbb
mov
cmp
sbb
lods
fimuls
dec
inc
mov
xchg
mov
incb
jbe
inc
mov
outsl
std
and
mov
dec
test
add
cwtl
pop
fstpt
xchg
mov
arpl
hlt
loope
and
and
adc
mov
inc
xlat
mov
cmp
mov
in
pusha
rcll
jmp
xor
in
cwtl
in
or
push
inc
mov
int
std
push
testb
jo
rolb
into
daa
mov
imul
sub
pop
les
in
add
popf
icebp
cmp
mov
push
scas
push
gs
inc
push
dec
pushf
mov
xchg
lret
sub
imul
fcmovnb
sti
js
xor
gs
loop
pop
test
imul
outsl
inc
cmp
xor
lcall
int
and
cs
fcoml
add
data16
mov
iret
outsb
inc
and
ss
mov
push
inc
int3
xor
leave
cltd
cltd
mov
in
mov
sahf
enter
add
sbb
and
inc
pop
imul
or
mov
testb
out
mov
adc
sub
sub
inc
ja
scas
sub
add
adc
mov
movsb
ret
das
xchg
fistps
jne
enter
fst
push
add
pop
les
icebp
and
push
inc
mov
adc
js
mov
call
xchg
pushf
lret
test
sub
pop
inc
xchg
fadds
push
lods
gs
or
aas
loop
jmp
mov
jl
pop
hlt
adc
jp
fldt
mov
push
insb
jmp
inc
push
incl
lock
push
dec
jg
xchg
xchg
clc
movsb
aam
or
jp
jmp
cmp
adc
pop
or
and
adc
dec
add
push
imull
push
in
fldl
add
rcl
xchg
xchg
mov
push
pop
lret
adc
add
clc
out
add
ret
or
mov
xor
sub
nop
shr
dec
ret
jae
mov
negl
mov
push
mov
clc
out
popf
pmaxub
loopne
inc
jae
jb
cwtl
leave
pop
pusha
xchg
mov
in
ret
ret
movsl
adc
out
jle,pn
loope
mov
outsl
ljmp
mov
jo
mov
lret
jg
aas
and
cmp
sbb
lret
dec
sub
sti
sub
sub
push
movsb
push
pop
mov
sub
nop
push
xchg
push
lret
out
repz
repz
fsubrp
mov
fdivrs
nop
sbb
cmp
cmp
push
push
xchg
sbb
ss
push
repz
mov
in
repz
sbb
enter
or
mov
xlat
mov
mov
cmp
outsb
stos
pop
hlt
or
jo
adc
add
and
dec
iret
neg
aad
pop
mov
xchg
fsts
push
or
insl
mov
pop
add
loope
add
jecxz
fs
ja
mov
popa
out
fistpll
ss
or
mov
xlat
mov
push
cmp
adc
push
sub
cltd
imul
mov
inc
mov
imul
mov
loope
push
imul
or
push
pop
dec
sub
nop
fisubl
cmp
add
movsl
aas
mov
sub
lods
aad
in
xor
decl
js
push
hlt
push
fwait
and
dec
cs
mov
cmp
inc
lahf
movsb
mov
int
hlt
and
stos
push
cmc
or
out
addr16
lock
xchg
fcoms
sbb
mov
jecxz
or
mov
shll
jle
jle
ljmp
loopne
dec
sbbb
or
in
sahf
dec
int
xchg
push
add
ljmp
rcll
iret
pop
xchg
sub
lock
and
fstps
loope
add
fists
stc
xchg
xor
in
xchg
pop
je
mov
loop
clc
les
test
sub
sub
rclb
xor
das
adc
test
xor
push
cltd
loop
ret
mov
aad
idiv
aas
xchg
test
leave
das
lahf
addr16
lret
mov
sbb
jae
popa
arpl
adc
stos
mov
ret
cmpsb
push
add
leave
adc
in
popf
arpl
movsb
out
adc
mov
lds
mov
mov
or
shll
mov
pop
pop
xchg
add
enter
es
in
push
pushf
in
arpl
mov
cld
adc
sbb
cmp
test
pushf
or
add
xchg
dec
fidivrs
mov
sub
xlat
adc
xchg
fwait
pop
adc
dec
daa
cmpsb
sbb
lret
dec
mov
daa
gs
xor
addl
jg
push
inc
stos
ret
mov
adcb
push
ja
jl
sarl
lea
jae
and
xchg
dec
inc
inc
ficoml
sub
sbb
repnz
add
xor
and
push
adc
pop
in
jno
xor
ret
add
mov
or
nop
mov
sbb
out
in
lds
pop
popf
or
sbb
inc
mov
lock
sub
xor
push
mov
or
cmp
jg
dec
lods
adc
sbb
rcrl
rolb
negb
push
cmp
xor
dec
jo
aam
dec
sarl
js
mov
popf
cmp
cmp
jnp
andb
dec
out
dec
int
sub
mov
lcall
pop
mov
or
and
lods
scas
insl
push
out
sub
loope
outsl
jno
shl
sahf
xor
add
pop
lock
mov
jo
arpl
sub
testl
mov
bound
loopne
rcll
pop
or
ljmp
out
mov
xchg
ss
sub
jae
imul
jmp
mov
inc
jnp
mov
dec
pop
stos
pop
ficoml
outsl
pusha
mov
clc
insl
xor
and
and
loope
mov
int
push
mov
mov
dec
mov
aad
pop
inc
cli
or
mov
mov
addr16
or
imul
cmpsb
movl
add
mov
xchg
jg
incl
pop
sub
pop
test
movsl
inc
add
add
int3
imul
les
pop
and
std
out
jb
sarl
sahf
scas
push
xchg
jmp
lods
add
adc
fiadds
cli
jl
adc
mov
outsl
inc
inc
sub
xchg
inc
and
aas
mov
pop
mov
ss
jno
fnsave
out
ret
fucompp
inc
clc
outsb
sub
mov
inc
iret
or
pop
mov
jmp
mov
dec
leave
sub
out
mov
in
movsl
push
sbb
sahf
call
push
mov
ret
push
sub
sub
fists
pop
sub
mov
mov
and
lods
nop
scas
cmp
in
pushf
add
pop
sub
and
mov
imul
test
mov
push
clc
std
movb
daa
or
push
cmp
mov
mov
jmp
sub
jns
pop
lods
pop
je
mov
leave
mov
scas
sub
in
xor
test
mov
in
pop
push
stc
stos
push
mov
ret
cmp
out
sbb
out
mov
xorl
inc
lods
addb
jnp
and
rcll
and
dec
insl
ds
pop
jno
mov
adcl
sti
cmpsl
imul
dec
or
clc
in
popf
pop
pop
outsl
cwtl
les
scas
sbb
nop
dec
push
aam
mov
pop
stos
add
cmp
lahf
std
ja
mov
popa
rcll
js
out
jbe
int
dec
sub
add
pop
inc
or
and
inc
xor
xor
ficoml
pop
cmpsl
test
push
inc
sbb
fsubs
ss
jae
push
ficomps
dec
popf
lahf
lds
scas
sub
dec
pop
fisttpl
sbb
push
outsl
addb
jne
cwtl
lahf
mov
mov
insb
jmp
roll
pop
clc
mov
and
arpl
dec
xor
inc
test
lret
aad
inc
mov
dec
push
and
popa
dec
dec
push
pusha
push
xor
adc
ljmp
fimuls
sbb
adc
and
ss
inc
inc
pop
repnz
jno
inc
dec
or
pop
push
cld
lods
fsubs
mov
mov
fwait
pop
pop
xchg
jle
xchg
mov
pop
sub
or
jle
xor
jmp
mulb
movsb
xchg
pop
loop
cmpb
jbe
or
push
sbb
clc
out
in
mov
and
inc
mov
inc
push
push
cmp
mov
hlt
in
mov
jmp
push
mov
fsts
scas
and
xchg
xor
sub
lret
push
sbb
cmp
dec
jl
push
jecxz
adc
xor
and
fsubrs
mov
inc
cld
jne
lock
ds
repz
or
pop
repnz
inc
leave
fnsave
cmp
repnz
fcompl
push
xor
out
xchg
aam
shrb
mov
mov
jecxz
xor
pop
shlb
test
pop
out
mov
cmp
in
push
sub
cltd
jbe
fwait
adc
and
shll
mov
stc
ret
ret
in
jno
pop
js
mov
jmp
dec
xchg
fcoml
push
dec
fucomi
fs
stc
xchg
or
cmpsb
sbb
fdivrs
shrb
mov
jne
in
add
jns
cmp
nop
cmp
adc
and
cld
or
xchg
mov
cmp
ret
fmuls
push
repz
insl
insl
outsb
jmp
ljmp
and
jmp
or
call
xor
stos
testb
enter
popf
mov
loopne
inc
inc
pop
or
cmpsl
sbb
inc
mov
pop
inc
gs
xor
sub
pop
andl
aas
out
mov
push
mov
sub
out
mov
ffreep
xor
cwtl
mov
daa
lea
repz
clc
push
add
jbe
fwait
lock
adc
loopne
test
test
push
dec
fucomi
adc
mov
mov
mov
or
jg
push
scas
xor
fmuls
pop
pop
test
faddp
cwtl
push
adc
aas
loope
jno
adc
lea
cli
push
add
dec
mov
sar
sarl
iret
add
or
push
and
jbe
sub
arpl
jmp
jecxz
or
mov
pop
pop
hlt
js
pop
jo
je
pusha
ljmp
mov
fmul
cmpb
pop
cmc
add
xchg
inc
jns
jg
adc
jae
fnstenv
cmpsl
dec
sbb
cmpsl
dec
and
jae
in
imul
out
cmc
leave
addr16
sbb
xchg
stos
jne
and
xchg
sbb
pop
jae
out
xlat
in
std
mov
nop
push
setge
mov
xchg
pop
lods
push
in
push
dec
lock
cmpl
cmp
ss
pop
pop
fnsave
ret
lret
add
addl
xchg
pavgw
mov
mov
jns
add
orb
movsl
lcall
jl
cmp
push
stc
mov
push
add
daa
jp
dec
aaa
xchg
xchg
pop
pop
into
push
cld
xlat
cmp
stos
cmp
push
stos
pop
pop
add
sbbb
cmp
mov
aad
adc
mov
mov
jbe
in
mov
cmp
and
mov
loopne
hlt
push
jmp
sub
adc
cmp
mov
jg
pusha
jno
or
lret
js
sbbb
jecxz
jo
jp
pop
push
adc
loope
add
loop
push
sar
cmp
arpl
cmpsl
push
mov
loop
sbbb
pusha
pop
mov
and
and
and
jl
or
in
mov
adc
push
mov
mov
std
fs
xor
inc
fbld
sbb
lcall
or
data16
test
imul
fbstp
push
imul
outsb
in
dec
insl
cld
cmp
in
lea
pop
xchg
inc
jbe
pop
mov
mov
push
mov
iret
pop
mov
aam
add
jle
push
jno
xchg
es
mov
cmp
daa
push
xchg
mov
outsl
jnp
nop
jbe
push
push
add
fistps
xchg
adc
mov
push
push
jne
rep
cmpsl
mov
shrl
mov
fidivs
xor
lahf
jge
mov
dec
adc
mov
hlt
add
out
imul
add
aad
les
bound
and
or
mov
xchg
mov
mov
les
xor
gs
adc
int3
xor
cmp
icebp
lret
add
cmp
nop
xchg
mov
dec
test
icebp
mov
mov
adc
pop
cwtl
test
out
and
test
mov
add
ds
mov
lods
xchg
jg
mov
shrl
cmp
hlt
xor
popl
loopne
sub
mov
push
mov
arpl
pop
mov
hlt
mov
je
test
and
and
les
stos
adc
adc
jmp
das
or
add
popf
inc
jae
out
fs
iret
add
in
leave
repnz
sbb
adc
push
imul
jb
push
or
dec
repz
xor
rcll
xor
or
popa
sub
testl
add
js
pop
dec
jns
jb
dec
ds
in
int3
adc
out
scas
xchg
dec
mov
sbb
rclb
js
roll
add
lods
cli
aas
sub
cmp
inc
movsb
push
aad
cmpl
outsl
adc
pop
loopne
sub
andb
or
push
jl
out
insl
adc
loop
push
ror
jae
mov
xchg
mov
lret
jp
shll
add
jp
xchg
lds
sbbb
out
sbb
jl
das
jle
push
jecxz
sbb
shll
dec
xchg
jp
xchg
mov
push
push
and
mov
aaa
sub
adc
adc
push
icebp
insb
test
call
sbb
mov
jo
ficomps
in
cmp
test
push
push
cli
adc
push
gs
and
inc
sbb
fisttpll
or
sarb
out
jno
sub
popf
popf
adc
and
add
jp
inc
jecxz
loope
mov
gs
pusha
test
mov
or
movzbl
aas
cmpsl
sar
jge
aaa
xchg
icebp
add
mov
jmp
arpl
in
jnp
ljmp
and
or
dec
push
in
dec
aad
loope
es
mov
rolb
pushf
insl
mov
gs
sahf
cmp
ret
jno
add
outsl
sarb
shlb
push
mov
shl
in
dec
cmc
hlt
xchg
test
xchg
sub
jle
mov
pusha
and
xor
mov
inc
mov
jne
dec
popa
adc
xor
pop
xchg
push
shlb
pop
pop
test
inc
not
xchg
mov
pusha
data16
inc
dec
mov
sbb
push
movb
cmp
sub
cmc
pop
mov
pusha
sti
adc
push
jae
insb
xchg
cli
xor
pop
ljmp
jne
jecxz
pop
iret
mov
aam
fwait
cmpsl
jecxz
push
bound
pop
or
testl
sbb
mov
sub
clc
pop
repnz
loopne
es
push
cmpsl
pop
das
insb
sbb
sti
jge
insl
stc
jmp
rol
loope
push
xchg
sub
mov
lods
or
das
int3
cwtl
inc
mov
fistpll
xor
iret
jge
js
mov
fimuls
adc
xchg
sbb
inc
int
add
mov
mov
popf
test
push
and
pusha
xchg
dec
dec
imul
les
jg
stos
dec
mov
jns
nop
fcoms
gs
mov
insl
mov
decb
sub
out
ret
and
push
pop
or
adc
cwtl
jle
push
push
test
jle
decl
xchg
jns
push
mov
add
sub
mov
push
imul
iret
mov
in
jecxz
js
xchg
cmpsl
pushf
cmpsl
mov
test
aas
mov
jmp
movups
pop
repz
data16
cmp
cmp
sbb
out
xor
test
bound
test
sbb
mov
push
lods
jge
sub
pusha
das
add
sbb
clc
xor
loop
cmpsb
xor
gs
pop
or
mov
push
adcl
in
repz
lahf
push
imul
movsb
test
and
gs
pop
fildll
loope
mov
push
jp
push
mov
cmc
xor
xchg
leave
sbb
pop
pop
jmp
jg
insb
add
push
xor
cltd
pop
jl
add
ljmp
incl
push
dec
fsubrs
inc
add
xchg
mov
std
fidivs
inc
mov
or
imul
push
jl
lcall
into
aas
fwait
stos
fistpll
sub
xchg
fnsave
xchg
adc
insl
sub
lea
aas
aaa
stc
in
add
dec
loopne
inc
stos
cmp
jl
rolb
jge
dec
inc
outsb
cmp
daa
rolb
mov
std
push
and
xchg
sbb
dec
mov
dec
xchg
scas
xchg
cwtl
dec
lret
lods
stos
rolb
and
nop
daa
pop
xchg
fdivp
into
mov
push
adc
mov
dec
aaa
push
or
or
sahf
jbe
das
pusha
dec
mov
mov
cs
sbb
imul
add
and
cmc
jg
popf
ret
mov
or
loopne
mov
pop
aad
cld
sub
ror
dec
ja
mov
and
mov
int
mov
out
xor
and
lret
dec
int
mov
es
fsubrl
inc
aas
imul
aaa
pop
cmp
mov
add
inc
push
lock
xchg
mov
mov
in
adc
jo
mov
nop
push
sbb
sbb
int
xchg
stos
adc
mov
xchg
push
andl
inc
or
in
push
mov
fwait
inc
test
leave
btc
fadd
popf
mov
fidivrs
lahf
cmp
mov
lods
test
daa
aas
loopne
aas
fidivl
lock
ljmp
sbb
imull
cmpsl
mov
fs
sbb
loopne
stc
clc
fimull
repnz
shrl
vprotq
stc
and
stos
leave
xchg
push
and
setl
pop
xor
pop
lret
or
loopne
shlb
mov
xchg
mov
lock
mov
rorl
pop
adc
insb
ss
loope
jne
shl
imul
je
out
out
dec
pop
pop
push
in
pushf
push
in
mov
pusha
ljmp
loope
pop
in
jmp
das
lods
popa
push
xchg
inc
mov
out
push
pop
xchg
mov
lock
push
and
push
add
jbe
test
mov
xchg
dec
stc
stc
aas
fsubl
sbb
mov
fcomi
sub
daa
jne
xadd
in
inc
sbb
ret
sub
inc
jg
repnz
dec
mov
mov
jl
mov
jo
jmp
js
inc
popa
movsb
pop
outsb
in
sbb
orl
outsb
mov
xchg
sub
lcall
sbb
lea
jp
adc
notl
and
jb
ja
es
sub
iret
pop
andb
scas
or
mov
add
imul
add
fisubrl
sub
test
ret
sub
lret
sub
icebp
in
out
mov
stc
setns
adc
popf
cmp
mov
aad
das
lock
scas
pop
and
or
loopne
divl
push
dec
scas
shll
arpl
aad
sub
or
mov
and
stc
in
lcall
add
adc
jmp
in
orl
fstpl
mov
mov
jg
adc
ljmp
loopne
adc
xchg
fnsave
xchg
xchg
inc
fcoms
mov
and
dec
shlb
cmpsb
cs
sbb
es
das
dec
mov
jns
adc
sarl
dec
sub
je
inc
ds
sbb
lods
push
push
pushf
iret
push
xchg
in
pop
lods
push
repz
mov
aam
addr16
cmp
imul
sbb
dec
mov
dec
or
inc
leave
outsl
xor
xor
xchg
mov
jns
xchg
mov
or
aaa
xchg
and
mov
xchg
mov
push
dec
sub
jne
ss
movl
ret
cmpsl
xor
fsubl
sti
mov
int3
iret
mov
mov
mov
test
loop
nop
lds
invd
cmp
sub
jg
inc
push
in
xchg
movsb
sub
push
mov
jecxz
jbe
inc
ja
mov
movsb
rorb
shlb
loope
shlb
in
out
ss
imul
frndint
shll
int3
getsec
fldcw
movsl
adc
pop
jae
jne
leave
dec
mov
sbb
popf
sub
jo
fcmovnu
lea
push
or
in
push
rcll
xchg
sub
sub
cld
pop
inc
add
loope
dec
inc
sbb
cltd
lods
loopne
inc
ss
int
sbbb
ds
imul
stc
addr16
out
push
leave
xchg
fsts
int
adc
inc
repnz
popa
movsl
pop
fsub
add
es
outsb
pusha
out
repnz
je
scas
jbe
fmul
outsb
cmp
movl
ret
ret
dec
dec
aaa
add
or
ret
mov
cmp
nop
sti
aaa
cmp
jnp
mov
sub
mov
adc
test
loopne
testl
ss
and
lret
clc
mov
in
ljmp
add
inc
std
out
dec
sbb
clc
pop
push
xor
les
aaa
in
inc
hlt
insb
insl
mov
or
or
mov
add
sbb
xor
sub
jle
xchg
int3
mov
in
or
lods
inc
mov
sbb
fmul
inc
mov
les
lods
pop
xchg
ljmp
imul
int
mov
imul
mov
out
stos
fwait
in
ret
or
xchg
and
sbb
mulb
jno
pop
test
sbb
sub
imul
popf
pop
mov
sub
cmpsl
xchg
clc
test
fs
xor
inc
loopne
push
icebp
dec
lcall
in
sub
ror
mov
mov
call
into
cmpsb
push
cmpsl
sbb
lea
pop
dec
mov
jl
fadd
mov
pop
mov
mov
xchg
push
cltd
inc
arpl
adc
cltd
leave
dec
pop
leave
out
xchg
dec
xchg
sbb
decl
push
insl
push
out
les
gs
pop
inc
cmp
out
ja
push
sub
out
mov
out
dec
and
jne
sub
lds
repnz
mov
pop
push
sahf
stos
ret
cmp
jne
mov
add
in
sub
popf
int3
pushf
hlt
fidivs
lahf
and
fs
testb
inc
stos
gs
sub
insl
push
enter
ja
ret
out
adc
jo
push
mov
and
ljmp
xchg
int
pop
inc
push
lods
imul
pop
in
jno
inc
dec
daa
xor
add
out
push
cltd
mov
jp
sub
mov
movsl
hlt
popf
push
mov
sub
decb
and
jne
inc
fwait
inc
jle
cmc
loopne
movb
pop
push
insl
shll
mov
jmp
or
xor
push
aam
iret
fstl
cmpsb
sbb
jecxz
push
jne
popf
sbb
pop
in
fs
push
xchg
cmp
cmpsl
adc
mov
aaa
lahf
xchg
jb
decl
mov
inc
push
inc
jbe
xchg
ljmp
loop
scas
ret
test
jge
js
sub
ret
mov
mov
push
push
cli
jns
int3
subl
inc
pop
jo
out
sub
pop
movsb
nop
pop
push
incl
stos
and
mov
cmpsb
and
pop
push
mov
rcl
and
mov
loopne
in
es
in
je
fld
stc
jae
jno,pt
xchg
pop
mov
sbb
cmp
xchg
push
cmpsl
cs
push
push
pusha
sbb
aas
cmp
xor
in
das
aas
push
pop
fstps
sub
test
push
adc
cmc
shr
mov
jne
mov
lahf
sub
mov
mov
std
xchg
cmp
add
pop
pop
enter
inc
mov
ret
xchg
bound
cli
xchg
dec
add
mov
mov
shll
jne
ficoms
scas
sub
xchg
xchg
bswap
xchg
inc
rorb
ret
loope
stos
dec
add
loop
bound
pop
dec
xlat
mov
ja
fidivs
repz
aas
sbb
test
out
or
push
push
inc
mov
fsubrl
xor
adc
xor
sbb
or
lcall
sub
stc
ss
sahf
aaa
mov
cmp
insl
lods
dec
fs
addr16
stos
mov
mov
mov
mov
mov
xchg
arpl
out
out
push
dec
mov
add
cmp
jnp
xor
push
sahf
adc
out
into
and
imul
mov
jae
int
aas
js
push
inc
das
xchg
push
add
idiv
shl
and
push
pop
out
rolb
mov
dec
mov
and
xor
imul
inc
aaa
decb
subb
stc
jl
lods
mov
loope
jb
xchg
xchg
mov
cmpsl
xor
add
xchg
data16
leave
cmpsb
insl
popf
fstl
adcb
dec
pushf
push
mov
cs
jge
mov
scas
adc
lret
fnsave
xchg
adc
fcmovne
das
mov
cmpsl
out
push
mov
outsb
aas
loop
mov
inc
imull
cmc
mov
push
mov
mov
or
fistpl
dec
sub
arpl
mov
mov
adc
hlt
fs
stos
lea
lock
mov
movsl
sbb
xchg
or
pop
test
xchg
in
test
in
das
jmp
sbb
loopne
mov
adc
lods
pop
adc
in
int3
ror
add
inc
fldt
mov
pushf
decl
push
ficoml
xchg
cld
pushf
push
or
or
jnp
daa
pop
in
scas
out
clc
inc
push
inc
mov
cmp
jmp
push
or
or
jp
jae
rolb
sbb
xchg
fnstcw
rclb
adc
ds
not
pop
loope
xchg
insb
outsb
movsb
out
sub
mov
out
mov
and
rcr
inc
rclb
mov
aam
lret
adc
popa
inc
pop
cmp
addr16
xchg
add
daa
ret
mov
mov
pushl
rcr
jp
subb
adc
sub
or
xor
lods
pop
push
push
imul
xchg
sbb
test
je
dec
dec
loop
popa
mov
cmpsl
jns
cmpl
jb
jle
push
inc
lret
xor
std
aas
mov
int3
jle
dec
lods
jmp
push
pushf
add
xchg
clc
test
xchg
repz
cmp
mov
cli
fcomi
pusha
lahf
pop
stos
mov
ret
or
shrd
pop
sbb
les
push
ja
push
sbb
aam
add
out
push
fsubrl
fidivrs
inc
dec
xor
sahf
orb
ljmp
push
or
mov
hlt
mov
aam
xor
dec
loopne
jae
xlat
outsl
arpl
ss
dec
daa
cmp
lds
xor
or
dec
or
aad
mov
dec
sti
pop
loope
push
ljmp
mov
mov
fwait
pop
lods
sub
cltd
sti
pushf
mov
in
divl
aaa
mov
or
int3
dec
and
lods
push
icebp
aas
rcll
ljmp
in
adc
and
and
mov
lods
sub
test
mov
movsb
dec
add
cmp
mov
inc
lea
mov
roll
in
mov
movsl
mov
mov
call
jl
loop
lds
jp
or
loope
lret
sbb
push
mov
pop
adc
pop
sub
ret
jnp
add
les
pop
dec
pop
cmp
icebp
and
and
jbe
mov
adc
movsl
jecxz
mov
lret
mov
es
fs
and
adc
les
cmpsb
inc
mov
xchg
adc
leave
icebp
jno
push
dec
lahf
lds
sub
cmp
push
jae
jb
jmp
stos
fwait
and
pop
mov
jle
xchg
testb
mov
lods
adc
cwtl
and
push
insb
fstps
sti
mov
pushl
cli
push
iret
bound
push
sbb
aam
sbb
fistpll
dec
and
push
outsl
jg
iret
push
inc
xchg
aas
xchg
or
icebp
dec
mov
in
jo
and
add
sub
jp
ss
adc
mov
cltd
add
mov
test
ljmp
mov
getsec
add
add
jge
mov
pop
jle
movsl
inc
test
jnp
lock
push
mov
cwtl
or
jmp
ret
jae
test
mov
lret
mov
pop
idivl
stos
test
push
jp
loop
and
mov
add
mov
mov
jno
cwtl
cmp
sbb
xor
pop
repz
aaa
jge
fisttps
pop
pop
sbb
inc
adc
inc
sub
cld
in
or
aaa
sbb
sub
lds
fwait
aad
jns
leave
pop
dec
dec
xchg
adc
jmp
movsl
push
sub
jno
int
lock
hlt
mov
sbb
pop
fnstenv
pushf
fiadds
and
negb
shlb
adc
push
lods
cmpl
mov
pop
aad
cmp
inc
push
cmp
mov
mov
fucom
test
cmpsb
sahf
inc
in
jnp
xchg
mov
sbb
lahf
xor
mov
mov
inc
and
jnp
adc
lods
sbb
out
mov
xchg
mov
out
dec
cli
sbb
lock
mov
inc
pop
imul
push
mov
bound
pop
cmp
adc
insl
aam
mov
pop
je
mov
lds
dec
rolb
cmpsb
lods
mov
es
hlt
mov
fldenv
in
aas
dec
in
lahf
popa
roll
mov
sub
sub
pushf
sbb
ret
mov
mov
mov
xor
mov
nop
pop
daa
pop
mov
int3
pop
mov
cld
xchg
xchg
add
fidivrs
pop
rcll
sti
imul
xor
mov
mov
testl
int
test
sbb
sbb
xchg
sub
or
mov
stc
sub
rolb
mov
testw
or
push
leave
push
fbstp
xchg
mov
cmp
add
or
in
xchg
xchg
out
addr16
movsl
add
mov
cmp
add
js
push
mov
lahf
mov
test
das
in
fwait
and
ljmp
ds
inc
aam
lock
add
push
adc
imul
cmpsb
jmp
xor
ss
pop
pushf
jnp
push
jns
inc
loop
dec
mov
outsl
out
in
sti
xor
aas
add
sar
stc
fidivl
and
jmp
push
mov
lcall
mov
mov
pop
fwait
ds
xchg
shlb
mov
addr16
mov
xorb
push
push
fadds
daa
dec
das
xlat
jg
xchg
pushf
aaa
shlb
pop
imull
cmpl
dec
mov
cwtl
sarl
daa
lea
add
jle
out
inc
inc
loope
cmp
sub
mov
pop
imul
clc
jnp
xor
jo
add
dec
push
fstl
jae
loopne
push
push
rcr
inc
pop
sub
inc
adc
insl
xchg
int3
test
push
ds
fdivrs
adc
adc
movsb
ds
sub
sbb
and
fidivrs
scas
in
mov
cmp
movsb
cmp
inc
adc
or
cmp
or
rcl
dec
xor
jp
xchg
cmp
jnp
xchg
jg
nop
in
in
rcrb
stos
dec
mov
jno
or
movsl
in
jb
inc
imulb
notb
inc
cmp
fwait
inc
jb
out
lods
push
or
popf
or
fistpll
out
fistpl
mov
push
xchg
cli
or
push
test
push
mov
cmp
sbb
push
dec
dec
mov
pop
in
bound
mov
icebp
push
mov
cmc
mov
mov
mov
xlat
xor
jecxz
fstpl
data16
push
fldt
rcrl
in
dec
cmp
lock
dec
pop
daa
adc
or
mov
mov
or
insb
xor
js
jmp
scas
jp
jo
cvtps2pi
xchg
cmp
sub
jno
dec
adc
test
adc
ds
jle
rcrl
jg
pop
mov
movsl
push
lret
movsb
loopne
adc
out
arpl
fisubrs
sub
mov
lea
push
sbb
pop
sbb
xor
mov
dec
fcmove
mov
xor
cltd
xchg
push
jo
movaps
mov
enter
mov
jnp
arpl
scas
lret
aaa
sahf
fstpl
and
add
add
aam
adc
jo
mov
es
cmp
rcrb
nop
std
test
inc
sarl
jbe
dec
pop
add
xchg
fmull
lret
mov
in
xor
inc
cmp
js
sbb
loopne
cmp
adc
mov
subl
rolb
loope
rcr
cmp
test
pop
jecxz
call
shlb
sub
addb
and
and
ds
and
sub
xor
adc
jo
add
jno
fsub
mov
pop
dec
jnp
inc
shll
outsb
mov
stc
mov
mov
shl
xor
leave
jg
and
test
test
ret
stc
lcall
xchg
mov
shlb
pop
stc
mov
lahf
sub
adc
sbb
adc
lret
les
in
mov
push
sub
cwtl
in
pop
mov
insl
icebp
mov
dec
arpl
loop
rclb
ljmp
jmp
mov
jl
icebp
jge
loop
pop
insb
mov
add
pop
xlat
and
mov
mov
fisttpl
icebp
ficompl
pop
jle
int3
repz
mov
filds
inc
adc
xchg
jle
jmp
dec
inc
iret
in
inc
pop
stos
or
out
nop
mov
xchg
scas
ss
in
loop
fnstsw
addr16
push
add
inc
es
mov
xchg
pusha
pop
mov
sbb
rolb
pop
clc
cmp
sbb
imul
mov
and
cmp
pop
adc
jl
inc
inc
cmp
mov
sbb
hlt
jns
bound
stos
fisttpl
jne
ret
dec
movsb
sbb
pmullw
fistpll
inc
inc
mov
hlt
add
imul
jmp
sub
leave
mov
push
mov
push
les
scas
push
sahf
jbe
xlat
jmp
lea
lahf
sarl
mov
aas
pusha
adc
xchg
jle
cmp
inc
fildll
mov
and
test
add
out
lahf
movsl
les
cs
mov
pop
xor
sbb
pop
lea
cmc
ds
sub
iret
lret
inc
dec
mov
ret
sub
enter
call
fs
sbb
dec
mov
sbb
sbb
int3
scas
faddp
adc
xchg
loopne
cmp
add
cs
int
push
loope
pusha
xor
imul
inc
ret
cmp
xchg
sub
stos
xchg
push
out
xor
mov
xchg
xchg
xor
ret
cltd
cmpsb
mov
mov
cld
aam
dec
es
mov
cmp
xchg
xchg
push
hlt
in
fnstsw
repz
sub
fidivrl
test
andb
mov
mov
mov
nop
sahf
lods
pop
lcall
negl
push
push
xchg
dec
mov
pushf
adc
push
aam
push
gs
jns
ss
rdmsr
xchg
les
dec
xchg
dec
hlt
mov
pop
mov
addb
dec
push
out
xor
push
popa
add
adc
fdivrp
jmp
xorl
test
mov
mov
imul
fldcw
xchg
pop
std
bound
pop
mov
jmp
repnz
cltd
imul
xor
mov
cmp
cmpsb
cli
push
aam
mov
inc
lods
lret
popf
jae
adc
iret
push
test
daa
push
pop
idiv
movsl
inc
pop
lret
mov
mov
fstps
mov
add
sub
testl
pop
pop
inc
jge
int
xchg
das
jb
pushf
icebp
dec
fisttpl
addr16
xchg
mov
aas
stos
sub
cmpsl
shl
inc
or
jns
aam
stos
bound
leave
jae
enter
aaa
pop
add
lahf
hlt
popa
add
mov
mov
xchg
sti
push
sti
xchg
cmp
dec
cmpsb
gs
in
cmc
xchg
nop
push
fistpl
shr
jb
or
adc
call
sbb
shr
mov
data16
not
mov
sub
cmp
insl
aas
cmp
or
mov
xlat
cld
mov
xchg
pmaxsw
loope
popf
sub
popf
push
frstor
sti
jne
ds
sbb
xchg
pop
add
jae
aad
mov
pushf
push
popa
cmpsb
sub
cli
clc
out
mov
cmp
pop
mov
push
rcr
loopne
pop
cmp
lret
sbb
movsl
xor
push
je
repz
sub
in
xchg
and
jle
jmp
cmpsb
cld
loop
jmp
push
jo
pushf
arpl
orps
lret
mov
inc
sbb
and
xorl
pop
clc
icebp
jbe
mov
and
inc
xor
pushf
cs
xchg
xor
xor
dec
mov
mov
add
sub
aas
cld
push
jle
sahf
mov
lock
sbb
sbb
repz
xor
xchg
movl
inc
xchg
xchg
pop
cmpsb
push
fsqrt
arpl
outsb
cmp
sti
pop
sbb
sbb
in
aam
pop
sub
cmp
inc
jge
jno
adc
push
xor
out
aas
cmp
ds
push
lahf
daa
dec
push
mov
lea
lahf
rolb
or
fstpl
dec
sub
test
fmul
mov
das
jle
iret
stos
lods
scas
ljmp
push
rorl
or
or
xchg
pop
mov
sub
andl
jne
mov
in
mov
mov
inc
xlat
and
pop
jl
inc
ljmp
test
cli
sahf
cmp
sub
push
inc
fldenv
out
dec
loop
ret
nop
std
test
shl
sbb
mov
mov
lcall
and
mov
lahf
dec
mov
sbb
push
cltd
pop
mov
mov
enter
and
or
js
sub
cmc
loop
mov
sub
cmpsl
ret
inc
cmc
es
xchg
and
dec
mov
data16
and
loop
aam
fs
push
lret
cmp
push
or
notl
push
notl
repnz
pop
ja
inc
push
pop
mov
scas
aaa
sbb
and
aas
mov
dec
imul
push
inc
popa
bound
sub
push
xor
nop
cmc
je
insl
pop
xchg
aad
cmpsb
jecxz
sahf
cmp
and
call
jnp
cmpsb
xchg
adc
bound
insl
dec
dec
jle
loop
or
jns
cmpsl
mull
std
loop
outsl
cmp
push
cmp
sti
dec
adc
inc
inc
hlt
add
rcll
ja
testl
sar
mov
insl
pop
outsb
into
jl
out
mov
js
pushf
sbb
out
inc
aaa
xor
inc
mov
outsb
pushf
ja
inc
aaa
clc
jae
sub
sub
sbb
pushf
in
popf
loop
jbe
cmp
ficomps
shrl
xor
jno
adc
jns
push
push
test
mov
call
out
add
xor
xchg
int3
rcrl
mov
mov
push
dec
xchg
push
data16
jmp
or
in
out
and
std
out
in
jg
int
and
fisttpl
adc
gs
rorb
pop
or
imul
xor
add
pop
jbe
pop
clc
dec
xor
das
leave
sarl
stc
mov
int
add
sahf
mov
stc
mov
in
fidivrl
lea
aaa
stc
and
cmp
test
shlb
pop
xchg
iret
arpl
cmp
xchg
mov
and
insb
xchg
pop
lcall
cmp
lea
mov
in
mov
stc
mov
addr16
into
pop
push
fptan
push
bound
dec
mov
fdivrs
stos
ret
and
movsb
mov
and
cmp
fcompl
jle
mov
dec
or
outsl
and
pop
stc
popa
jae
or
scas
aam
movb
test
int3
mov
sub
roll
or
insl
icebp
test
add
push
adc
stc
pusha
loop
jge
loope
dec
or
jb
push
push
lahf
dec
cmp
mov
jnp
xor
jns
mov
and
push
repnz
rolb
jne
xlat
push
cmp
adc
fs
adc
sbb
xchg
pop
cmp
out
pushf
jecxz
sahf
ret
ja
fimull
jae
mov
notl
mov
or
movsb
fstpl
lret
mov
mov
xor
and
dec
mov
dec
sbb
fdivrl
lods
mov
int
scas
rclb
aas
ljmp
mov
test
mov
mov
cwtl
add
incl
sbb
xchg
and
out
daa
push
pop
iret
and
inc
addr16
xchg
jno
popf
push
jecxz
stos
mov
cmp
loop
jge
xorl
jo
cwtl
dec
sub
jmp
int
jne
dec
pop
daa
arpl
leave
cmp
fcompl
mov
pop
inc
ss
jb
mov
sbb
pop
push
jns
insl
pop
and
sub
jmp
push
jb
jb
lods
sahf
shr
or
shl
addb
jmp
dec
xor
loopne
clc
cmp
dec
fildll
or
cld
or
xor
mov
arpl
stos
fisubrs
push
outsl
jl
xor
jge
int3
mov
je
gs
add
pop
les
inc
mov
out
cmp
or
in
sbbl
mov
xchg
sbb
xchg
sub
outsl
adc
cmpb
lods
imul
cmp
stos
add
test
sarb
jnp
adc
ret
and
mov
jle
cmpsl
je
test
scas
icebp
xchg
cmpsl
mov
jge
dec
pop
push
mov
out
andb
xchg
pop
or
cwtl
insb
daa
fisttps
push
mov
loop
mov
mov
pop
pop
inc
inc
mov
out
jne
cmp
jp
scas
jae
or
xlat
lods
icebp
sub
xor
xor
js
inc
adc
lods
mov
rorb
test
fidivrs
jo
fisubs
mov
sub
pop
lea
push
iret
add
sarb
pop
adc
js
test
in
movsl
xchg
fisttps
adc
pop
mov
in
mov
js
cli
jo,pt
xor
jle
bound
std
jge
scas
push
jae
aas
ret
adc
cmp
lea
mov
adc
loopne
lods
imul
mov
push
in
sub
or
loopne
lcall
pop
cmp
aas
loopne
addr16
cs
insl
test
mov
in
jo
cmp
mov
cld
dec
xlat
xchg
xchg
cmp
pop
fadd
lea
inc
sahf
lock
xchg
sbb
mov
xor
push
add
xchg
insl
adc
test
push
and
adc
xchg
lahf
push
sbbl
mov
mov
aaa
push
into
jecxz
adc
cmc
jecxz
iret
mov
mov
cmc
ds
xlat
cmpsl
test
or
das
mov
out
dec
ss
mov
cmp
add
push
adc
xchg
adc
pop
stc
and
push
int3
repz
aam
inc
cli
loopne
call
lret
out
aam
aas
jo
incw
mov
stos
dec
mov
test
mov
sbb
xchg
cmp
xchg
sbb
or
and
xchg
fstpl
jb
adc
rcrb
add
mov
ret
pusha
mov
mov
dec
gs
test
sub
pop
jge
add
xor
adc
rcrb
jge
pop
nop
mov
jb
fs
subl
xor
into
fcoms
lock
cmpsb
shl
lea
mov
mov
or
scas
ja
sbb
int3
into
and
or
pop
fstl
xchg
cmc
and
and
loopne
rorb
mov
outsl
nop
subl
mov
fiaddl
dec
aam
xchg
inc
clc
xor
pusha
sub
xchg
cmpsl
hlt
add
cld
push
mov
fldcw
push
dec
pushf
mov
push
aam
or
xor
mov
inc
hlt
das
addr16
rorb
mov
mov
in
and
or
and
testl
dec
push
cmp
mov
popa
stos
lock
lods
aam
xor
mov
and
adc
xchg
cmc
dec
fs
iret
cld
repnz
dec
pop
cltd
ffreep
dec
jo
loope
cld
jns
cld
dec
cmpsl
stos
cmp
or
push
xor
call
inc
and
cmp
pop
or
cmp
xor
mul
pop
jp
xchg
daa
pop
mov
xor
enter
sbb
clc
sub
and
adc
in
jno
loop
sub
jbe
imul
push
jge
jbe
ljmp
enter
and
pop
lods
mov
mov
xchg
mov
lods
cmc
adc
inc
jl
test
cmp
ret
mov
sbb
iret
mov
scas
xchg
loopne
mov
sub
insb
movsl
in
addb
and
movsl
test
cmc
pop
nop
adc
and
dec
fimull
xor
push
xlat
push
add
sub
cmpsb
repnz
fldcw
into
aaa
cmp
jbe
add
jecxz
aaa
jl
rcrb
lock
mov
movsb
notb
cmp
pop
data16
aam
or
cmp
cmp
sub
and
fs
insb
cmp
xchg
addr16
std
jne
or
and
fsubrl
mov
fdivrs
push
jnp
cltd
add
data16
dec
xchg
loopne
add
fildll
loop
adc
shrb
negb
xchg
adc
xchg
sbb
jge
push
push
fists
ss
push
lods
mov
mov
xor
push
mov
test
push
mov
inc
adc
sbb
pop
inc
dec
movsl
xchg
and
ficoml
dec
inc
and
stc
lcall
mov
xchg
add
pop
das
subl
and
jge
shl
testl
inc
push
jae
andb
dec
fidivrl
jg
adc
decb
enter
xor
or
fmul
rcl
clc
ficompl
cli
sbbl
int3
lods
stc
cmp
xlat
adc
or
inc
lcall
pop
and
aas
decb
lret
jg
mov
mov
js
mov
cli
pushf
dec
mov
or
ret
out
cmp
xchg
int3
outsl
data16
inc
cli
xor
xchg
xchg
pushf
push
mov
xchg
xor
lret
fs
fsubs
pop
xor
fists
xor
adc
and
push
stos
iret
aad
cld
pop
and
xor
out
in
stos
fcomi
push
loope
int
sub
mov
sub
add
mov
ret
insb
in
xchg
jo
movsl
movsb
in
jb
call
jnp
inc
jg
jl
mov
push
push
lock
arpl
popa
mov
imul
ret
out
out
adc
mov
fstpl
lahf
jge
jns
jp
pop
jae
movsb
pop
sub
arpl
adc
inc
iret
push
js
jnp
movsb
inc
and
out
inc
mov
into
insb
scas
ljmp
out
jp
ljmp
scas
jge
mov
dec
cmp
loopne
push
inc
xor
adc
sarb
dec
adc
sub
out
lods
popf
and
lea
xor
sbb
sbb
jmp
pop
sub
jmp
mov
js
jae
adc
add
ret
pop
pop
xchg
xor
es
idivl
das
je
xchg
mov
sub
inc
aam
push
inc
test
popa
and
add
xor
xchg
cmp
bound
fdivrs
push
ficomps
in
jp
test
in
cmc
addr16
popa
gs
pop
and
xchg
mov
add
jns
push
adc
adc
int3
xchg
jbe
shll
in
out
sub
sti
dec
lds
das
mov
pop
push
xchg
mov
into
cmp
add
inc
and
in
mov
or
outsl
cmp
stos
mov
add
addr16
xor
inc
push
out
push
sbb
jnp
pop
push
push
adc
mov
pop
jbe
out
lcall
iret
and
fiadds
mov
ds
cs
pop
int
sbb
mov
cltd
mov
lds
pop
std
lahf
fistpll
and
cld
mov
popf
sbb
and
imul
icebp
sub
xchg
aad
lcall
loopne
rcrb
inc
sbb
inc
mov
in
lock
je
inc
gs
and
outsl
jo
sti
add
jbe
jl
les
jmp
ret
movsl
dec
pop
xchg
daa
or
and
inc
pop
mov
lcall
out
je
imul
imul
push
lret
add
mov
jecxz
mov
dec
or
xor
pop
adc
or
jbe
je
addr16
sub
xor
xchg
mov
mov
in
inc
pop
pop
xor
dec
and
movsl
lods
outsl
sbb
call
xchg
and
push
mov
aad
out
pop
jle
mov
ret
movsl
test
pop
pushf
sti
xchg
jbe
adc
mov
cmp
mov
mulb
lds
lods
push
scas
cli
jecxz
test
rolb
push
sbb
out
movsb
mov
cmpsb
push
rcll
or
mov
outsb
les
fadds
jle
xlat
fwait
aas
jo
pushf
pop
sbb
mov
mov
cmc
je
mov
ja
push
ss
popf
dec
vdivss
stos
push
mov
daa
bound
pop
out
sbb
jno
iret
jmp
mov
mov
pop
cmp
ret
movsb
lcall
fidivl
jge
loope
in
add
and
mov
cmpsl
xlat
jle
loope
cld
sub
mov
pop
shll
cmpsb
ret
xchg
xchg
mov
in
mov
push
dec
mov
mov
xor
outsb
fwait
adc
stos
push
aam
rcrl
lea
xor
mov
out
kmovw
repnz
pop
sahf
out
in
pop
mov
mov
pop
ret
cmp
mov
popa
adc
test
fxch
xor
mov
add
jecxz
pop
cld
adc
mov
sbb
test
ss
in
mov
jp
push
xchg
inc
insb
lret
movsb
cmpb
adc
shl
dec
sbb
mov
std
and
or
mov
cmp
daa
sub
jb
push
fcompl
int3
rcrl
push
lcall
adc
stos
add
dec
std
in
call
push
lcall
lds
iret
in
je
dec
les
mov
push
outsl
incb
enter
mov
icebp
and
dec
xlat
fsubrl
push
adc
and
aad
lcall
fsubs
int3
push
fsubrs
xchg
or
mov
xchg
cld
push
test
stc
push
mov
aaa
jbe
jle
repz
mov
addl
stc
movsb
movsb
or
sti
push
mov
aaa
push
jae
mov
inc
jl
js
test
out
fsubrs
lock
pushf
add
cld
add
scas
rcrl
jbe
cmp
je
push
mov
mov
jp
add
movsb
daa
push
fwait
lahf
mov
xchg
arpl
data16
jg
fsubl
stos
pusha
pop
iret
lea
in
sbb
inc
out
lods
fs
out
dec
add
and
aam
cmpsl
fildl
aaa
push
jmp
jl
outsl
pop
call
iret
mov
push
dec
or
aam
lcall
xor
sub
or
push
filds
rorb
fsts
mov
loop
push
dec
stos
inc
clc
dec
xchg
mov
imul
jge
aam
push
dec
imul
push
sub
jecxz
cmp
mov
popa
insb
sbb
sub
push
fdivrs
pop
ret
push
pop
inc
popa
cmc
sub
xor
mov
fwait
or
pop
cli
enter
jmp
aam
inc
jne
std
xchg
icebp
pop
leave
mov
out
sub
mov
ret
fucomp
sarl
idivl
mov
cmc
pop
dec
mov
aad
or
jne
jmp
jle
xor
cmp
xchg
sub
sbb
dec
sti
lret
dec
rolb
and
add
push
test
sbb
out
mov
loopne
push
aam
in
enter
fcoms
pop
loop
mov
push
shlb
mov
dec
and
mov
adc
std
adc
je
mov
pop
ret
aam
xchg
lret
bound
js
aam
mov
jbe
dec
iret
test
lcall
inc
iret
shll
cmp
sbb
mov
jg
fadd
scas
mov
subb
fcoms
adc
loope
pushf
inc
add
pop
out
xchg
bound
mov
lock
inc
int
jno
out
mov
test
addl
pop
pop
lods
xchg
lret
out
mov
stc
add
or
cmc
popa
inc
dec
jecxz
cmp
das
add
stc
mov
addl
aas
xchg
inc
inc
int3
xchg
inc
ljmp
clc
call
jnp
mov
lret
orl
loop
xchg
icebp
pop
mov
sbb
testl
jg
mov
bound
jb
push
push
call
inc
and
scas
add
enter
and
shll
lahf
sub
enter
push
xchg
enter
out
sbb
push
fwait
cwtl
out
pusha
mov
lods
insl
or
ret
scas
in
lret
sbb
xor
pop
mov
mov
mov
mov
test
shlb
or
or
inc
out
jbe
xlat
pushl
mov
imul
in
fdivrs
mov
insb
sub
call
mov
addr16
sarl
or
jbe
es
call
sub
xlat
jne
adc
pop
mov
mov
xchg
and
lock
jbe
ds
pop
movsl
in
sub
add
int
xchg
or
stos
adc
mov
movl
and
pop
inc
cwtl
aad
lds
and
xor
jno
hlt
adc
jle
adc
cmp
adc
cmc
dec
pop
icebp
inc
fldl
add
fildl
sub
sub
cmp
inc
inc
pop
mov
popa
sub
movsb
mov
js
xchg
sub
dec
sti
fnstsw
sub
scas
push
xchg
pop
cs
sbb
lea
pop
pop
loope
mov
popa
icebp
sbb
add
gs
mov
js
mov
int3
fwait
mov
inc
jp
jg
sub
lahf
add
pop
mov
imul
mov
sub
aaa
je
cmp
mov
ja
adc
roll
sub
xchg
jp
and
clc
sbb
and
daa
mov
jne
cmpsl
popa
xor
loopne
cvtdq2ps
cmp
mov
ljmp
lret
mov
test
imul
jns
adc
mov
cwtl
xchg
gs
and
or
rolb
dec
ljmp
inc
iret
rol
xor
in
sahf
imul
bnd
xlat
scas
pop
mov
leave
dec
push
shr
or
sub
test
pop
idiv
sahf
add
ss
cmp
into
jbe
inc
jbe
test
and
pop
adc
cli
cmc
push
shlb
out
scas
push
ret
lahf
loope
or
iret
jecxz
dec
dec
jo
aaa
loope
dec
pushf
push
out
mov
push
gs
mov
aam
cltd
inc
jno
outsb
lahf
inc
xchg
sti
xor
sub
out
jge
test
loope
stos
adc
fldenv
cmpsl
or
pushf
in
pop
or
mov
dec
sub
iret
aad
sahf
dec
outsl
mov
mov
cmp
mov
inc
ret
add
and
cmp
pop
cld
jne
jecxz
shl
pmulhuw
mov
adc
mov
xchg
fdivrp
inc
fwait
add
mov
cld
sahf
test
pop
cltd
or
jg
lret
jns
mov
jno
mov
cmp
jmp
cmp
loopew
mov
int
ja
adc
jo
sbb
xchg
out
adc
xchg
rcll
aad
jno
pop
push
gs
in
dec
jnp
addr16
mov
dec
sub
pop
ds
es
movsl
xchg
or
test
leave
jecxz
push
jno
nop
dec
push
pop
lret
fcomp
push
mov
fsubl
rolb
adc
or
adcb
pop
iret
jns
stos
adc
clc
sbb
xchg
cmp
pop
mov
into
outsb
ds
cwtl
or
mov
cmp
sub
adc
and
stos
cmp
lcall
aaa
sub
movb
push
je
test
sub
scas
inc
mov
iret
xchg
test
ljmp
sub
iret
sub
dec
xlat
repnz
xchg
jle
cli
stos
sbb
cmp
add
jb
test
aaa
imul
mov
jb
fsubrl
movsl
push
push
lcall
clc
pop
mov
cmp
dec
movsl
aas
pop
jg
inc
cmp
and
mov
and
sub
xor
dec
std
dec
adc
int
lds
popf
jne
mov
adc
and
push
stos
dec
clc
pop
scas
js
mov
movsb
push
mov
int
int3
xor
pop
sahf
imul
out
sub
push
push
icebp
push
popf
adc
push
flds
scas
adcb
sub
int
mov
pusha
ljmp
fcmovu
jmp
push
dec
dec
dec
fcmove
addr16
adc
xor
mov
sub
or
mov
jle
jne
push
in
test
leave
lea
or
movsl
pop
pusha
fistpll
xor
in
add
int
push
arpl
or
lock
cmp
pop
stos
push
push
sub
hlt
xchg
push
or
lds
enter
ja
in
jecxz
fsubrs
aaa
mov
lock
add
rol
mov
mov
dec
stos
pop
mov
xchg
repz
pop
mov
push
sbbl
mov
jne
xor
fmuls
je
mov
adc
dec
and
mov
gs
test
pop
testl
cmp
clc
cmp
ja
enter
imul
dec
mov
push
pushf
xchg
add
popa
push
andb
push
jmp
mov
jo
punpckhdq
lds
sbb
mov
out
mov
dec
push
mov
scas
mov
cld
jle
adc
fwait
pop
or
lret
cmp
sarl
out
or
popf
popf
int
push
movsl
subl
inc
fs
cld
cltd
xchg
adc
mov
sub
mov
imul
roll
mov
mov
push
in
cmp
xor
sti
test
mov
and
js
ror
lods
aam
or
hlt
lea
push
insb
push
int3
pushf
and
push
mov
dec
outsb
icebp
out
aad
mov
mov
mov
je
repnz
notl
imul
xchg
inc
cwtl
fcoml
movsl
scas
fcomps
in
out
mov
sbb
xor
call
std
sub
mov
jae
push
sahf
negb
lret
mov
or
add
lret
fcomp
lahf
stos
inc
ficompl
inc
loope
mov
scas
stc
xor
dec
mov
mov
shlb
push
sub
pop
jp
adcl
stos
mov
pop
xor
test
xor
pop
or
cmp
insl
popf
jecxz
daa
mov
outsb
xor
sbb
mov
cmp
in
xchg
scas
xorb
arpl
cmpsl
aaa
fiaddl
loope
fcmovnb
mov
push
clc
lods
adc
push
cmp
mov
push
jno
xlat
add
push
cltd
dec
sub
std
mov
pop
int3
es
ss
movl
xchg
fldl
std
xor
ficoms
cmpsb
sahf
sub
lcall
pop
sub
and
insl
gs
sub
in
decb
out
dec
push
pushf
mov
xor
cmc
scas
pop
aas
xor
and
scas
adc
mov
cmp
sub
push
cmc
loopne
sbb
adc
outsb
or
sub
inc
daa
aaa
push
mov
in
cs
mov
in
adc
fdivrs
pop
shrl
aam
insl
cld
mov
xchg
fsubrl
nop
loop
cmp
jg
fwait
inc
sbb
dec
push
mov
rcrb
faddl
and
mov
fildl
insb
imul
fistl
cwtl
xchg
popa
mov
shrb
sbb
test
add
push
jge
rclb
es
sub
fneni(8087
es
enter
sbb
mov
gs
into
test
repz
ret
popf
movntq
xchg
cwtl
mov
push
int3
mov
adc
mov
xor
sbb
or
in
xor
adc
ds
andb
push
aad
les
icebp
or
imul
fwait
lods
and
jb
ljmp
bound
lcall
je
dec
mov
rcrl
mov
cmp
cmpsb
rcrl
icebp
fwait
inc
mov
inc
sahf
sub
push
sbb
shll
in
adc
repnz
pop
je
cmp
xor
push
ud1
and
mov
in
cmpsb
cvtps2pd
sbb
jae
fcomp
push
mov
inc
test
cmpsb
jae
rorb
pop
scas
dec
adc
xchg
aas
hlt
dec
outsb
test
pop
jmp
cmc
xchg
repnz
cld
push
add
fidivrs
pushf
mov
xchg
adc
test
mov
ljmp
xchg
mov
scas
inc
sub
xchg
shll
mov
int3
sbb
jge
imul
push
sub
icebp
ja
jge
and
ret
push
push
pop
jnp
or
cli
xor
sub
mov
push
insb
dec
rclb
sbb
or
aas
push
stc
dec
scas
scas
adcl
or
enter
or
andb
push
iret
pushf
pop
mov
repz
inc
xor
push
and
adc
dec
add
cmpb
cmp
daa
aas
cs
xchg
popa
pop
adc
mov
scas
mov
mov
out
dec
and
jl
inc
push
mov
cmp
mov
repnz
subl
xchg
addr16
pop
mov
inc
sbb
stos
dec
notl
and
sti
xchg
popa
inc
xlat
xor
adc
sbb
add
adc
daa
dec
dec
cmp
xchg
divb
pop
std
mov
adc
pop
xchg
jns
lock
ljmp
pop
movsb
cwtl
aas
mov
mov
sti
dec
push
adc
in
dec
xor
adc
sti
add
fadd
push
je
mov
aas
adc
cli
jbe
push
jae
mov
or
cmp
or
inc
xchg
pop
inc
pop
aaa
pop
adc
aad
rclb
mov
cmp
sbb
adc
jo
inc
xchg
insb
pop
mov
fldt
inc
mov
pop
fwait
test
gs
mov
inc
adc
or
adc
js
lahf
push
xlat
mov
mov
adc
jp
and
cwtl
mov
lea
cmp
or
mov
aas
out
inc
stos
std
scas
and
pusha
pusha
and
cltd
push
jne
lahf
lret
rcl
into
mov
flds
pop
xchg
jmp
popa
mov
sub
adc
mov
clc
jmp
fsubs
mov
sbb
xor
ja
xor
xchg
icebp
xor
out
and
repz
pop
gs
jb
cmp
and
popf
arpl
cwtl
pop
data16
push
fistpl
cmp
sbb
sarl
xor
repnz
lea
push
sbb
cmc
jns
das
xchg
xchg
daa
xor
lea
xchg
ljmp
adcl
xor
daa
mov
xor
pop
ret
idivl
jae
xor
leave
test
les
cmpsb
movsl
out
xchg
ficoml
in
jns
gs
aad
pop
pop
sub
fiaddl
xor
push
mov
fsubl
aam
nop
stos
mov
mov
mov
xor
lea
pop
stos
xchg
fisubrs
mov
int
jp
adc
pop
loope
movsl
xorl
cmpb
sbb
jg
pusha
aaa
sub
cli
aas
dec
mov
sbb
and
movsb
stos
cli
push
or
mov
cli
sti
movsb
sbb
cmpsb
mov
in
iret
jmp
and
inc
scas
jl
orb
loop
sahf
pop
and
mov
push
lret
adc
movsl
mov
movsl
pop
xor
out
jae
loope
aam
out
and
lds
xchg
stos
sbb
mov
pop
insb
rcr
lahf
addr16
clc
push
mov
daa
rclb
xchg
sbb
lcall
mov
aad
and
ret
mov
leave
xor
shrl
ljmp
pop
cmp
and
pop
in
sub
and
imul
or
cmp
icebp
lea
ret
movl
pop
jle
add
jno
pop
insb
lods
cltd
aaa
test
in
jp
add
push
out
je
sbb
dec
arpl
fwait
sbbb
sub
jnp
mov
add
and
sub
out
inc
adc
pop
cmp
inc
pop
or
and
mov
push
fwait
pop
mov
fildll
lock
dec
or
jecxz
fcoml
clc
push
mov
dec
jle
les
mov
imull
mov
js
test
stos
adc
mov
test
clc
mov
mov
adcb
dec
inc
mov
mov
cwtl
roll
test
sub
xchg
adc
das
inc
in
jp
into
call
dec
xchg
sub
rol
xor
outsb
ret
fistpll
icebp
xchg
cwtl
xchg
lea
dec
mov
ret
fwait
andb
xchg
adc
xor
and
add
dec
lret
imul
cmp
hlt
out
add
pop
and
mov
add
lock
out
loopne
lock
cmc
movb
push
into
jo
xchg
fwait
mov
dec
add
jle
mov
pop
xor
sub
lret
xor
and
shrl
cmp
outsb
and
xchg
aaa
xor
dec
insl
ss
addr16
arpl
cld
and
cmpl
mov
cmp
jno
mov
pop
insl
mov
mov
or
cld
inc
lret
movsl
loopne
cli
sub
mov
cmp
fs
and
jbe
cmp
and
xor
inc
jg
and
lock
rcrl
outsl
call
insb
add
add
jge
pop
xlat
fwait
hlt
ret
fcoml
and
jg
mov
enter
imul
fmulp
adc
jb
fists
jecxz
add
test
push
add
or
jbe
lea
fists
lds
adc
xchg
aam
in
out
rcl
xchg
and
sub
inc
xlat
jg
and
and
dec
jne
xchg
and
mov
and
adc
jno
or
ljmp
sbb
repnz
cli
inc
ficompl
jbe
push
jle
mov
mov
leave
adc
aas
insb
cmpsb
lea
daa
rcll
mov
bndstx
scas
mov
sahf
inc
in
pop
adc
mov
push
cwtl
sub
adc
inc
in
mov
adc
addl
push
mov
loope
imul
ret
xlat
mov
out
jge
dec
fcoms
xchg
xor
push
sti
outsb
incl
mov
xchg
xorb
insb
xchg
sub
fcomps
popf
je
cmp
rorb
push
fnstenv
xor
adc
and
xchg
shl
adc
or
lods
shlb
fs
adc
push
mov
jecxz
adc
fmuls
aam
popf
jg
sbb
test
stos
cmp
sub
sub
or
testl
adc
stos
das
mov
pop
inc
xlat
popa
xor
jnp
nop
mov
jmp
leave
mov
add
push
push
push
clc
mov
scas
mov
iret
sub
push
dec
ljmp
sub
test
sub
mov
pop
sarb
aas
les
test
out
mov
in
push
jo
pushf
cs
adc
or
sbb
push
insl
psraw
and
into
xor
je
jbe
push
fcomi
and
lea
xchg
xor
sbb
fsub
or
inc
xor
push
mov
cmpsl
add
mov
pushf
arpl
dec
arpl
jl
es
add
adc
and
inc
mov
xlat
in
in
outsl
movsl
je
cli
mov
inc
push
add
enter
adc
dec
fdivrs
leave
mov
cmp
nop
lods
sbb
add
out
inc
inc
icebp
xchg
movsl
xor
sahf
inc
leave
sbb
lret
or
in
xor
sub
icebp
insb
mov
mov
jnp
ficoms
das
dec
mov
loop
and
lds
pop
fdiv
add
xchg
mov
repz
out
mov
mov
lcall
test
xchg
push
mov
xor
inc
push
pop
mov
sub
test
mov
add
mov
or
mov
rcl
in
icebp
xchg
cmc
jae
aas
lods
and
sbb
gs
inc
push
xor
push
shll
fnsave
in
mov
mov
xchg
xchg
cld
icebp
cmpl
out
ret
mov
fsubrl
rol
mov
loop
xchg
dec
jmp
sub
lahf
or
leave
adc
gs
mov
int
dec
lret
insb
aad
inc
add
xchg
sbb
fistl
pushf
pop
sub
cmp
xchg
movsb
je
les
out
adc
push
das
mov
sbb
addl
mov
stc
push
out
xchg
jp
rcrl
lahf
jmp
pop
sub
or
mov
loop
mov
hlt
jnp
xor
hlt
movsb
cmpsb
mov
cli
shrl
cmp
mov
outsb
ror
inc
nop
fdivl
xor
mov
ja
inc
sub
cmp
adc
mov
sbb
dec
call
in
inc
lods
sbb
pop
test
push
adc
push
in
dec
jmp
aam
adc
jle
in
stos
jo
mov
int
xor
mov
xor
xlat
inc
and
and
cltd
jmp
icebp
int3
je
xorb
call
cmp
xor
sbb
xchg
ror
inc
xlat
xor
subl
lcall
cli
dec
test
stos
mov
and
ljmp
das
jmp
jecxz
scas
push
clc
inc
pop
ja
push
adc
stos
sub
outsb
imul
pop
pop
pop
pop
rolb
imul
mov
nop
jge
shrb
aaa
aas
add
gs
inc
arpl
loope
es
adc
scas
ficompl
cmc
cwtl
inc
shr
frstpm(287
sbb
sahf
inc
mov
pop
addr16
bound
nop
movsb
pop
xchg
fsubrs
xor
add
and
insl
pop
sbbb
lock
data16
in
addr16
adc
jmp
cwtl
jno
stos
imul
in
pop
int
hlt
aad
stos
adc
mov
movsl
or
mov
sti
jl
and
in
sub
in
mov
sub
jne
idiv
roll
xor
sbb
lods
inc
mov
jp
sub
ret
mov
mov
movsb
cwtl
jae
test
or
mov
pop
test
ljmp
dec
or
xchg
jo
add
sub
rorb
and
aam
icebp
mov
mov
pop
stc
dec
rclb
mov
jg
jl
iret
pop
out
mov
jne
cmp
xor
or
in
jl
mov
sbb
bound
in
xlat
or
fcompl
mov
xor
lock
fisttps
sahf
jnp
adc
xchg
push
roll
stc
mov
js
or
adc
lea
sub
mov
repz
push
add
jb
int3
shr
and
movsl
lret
push
xchg
xlat
fimuls
and
aam
loopne
sub
in
sti
fcoml
lahf
sbb
push
pop
fadd
cltd
mov
xchg
aaa
pop
push
fisubl
enter
sti
add
lcall
outsb
jno
pop
xchg
xor
push
mov
add
aad
mov
cmp
outsl
xchg
arpl
or
xchg
adc
mov
xor
dec
scas
in
sbb
pop
cld
or
inc
div
loope
xor
cmp
popl
sub
jb
daa
dec
mov
jb
or
pop
dec
push
sbb
push
pop
out
or
iret
push
enter
push
popl
inc
outsl
mov
cmpsl
popl
mov
mov
jb
inc
mov
test
in
add
bound
sub
popf
inc
loop
loopne
mov
in
cmp
js
idiv
stos
jl
xchg
mov
add
and
and
sbb
cwtl
sub
sub
cmp
mov
mov
dec
mov
sub
fwait
sub
rcll
and
xlat
bound
call
lods
mov
sub
test
out
mov
push
mov
je
imul
push
dec
and
jbe
pushf
jns
imulb
mov
push
ds
test
pop
cwtl
jecxz
sbb
inc
inc
lret
out
add
jge
dec
sbb
fmull
into
scas
or
xchg
or
lods
cmp
dec
ljmp
fcmovnbe
xor
and
shrb
jnp
int
xchg
rcll
mov
daa
test
cmc
jo
mov
cs
mov
je
xor
ficompl
mov
scas
jp
int3
cmp
sub
js
stos
and
xlat
fwait
iret
mov
mov
mull
inc
lret
sbb
inc
push
inc
xchg
pop
and
mov
pop
pop
popa
pop
sub
or
pop
ljmp
xchg
mov
mov
pop
scas
and
lret
jo
subl
lods
push
adc
mov
jge
adc
fst
push
xchg
xchg
cmp
jb
imul
shlb
add
or
jae
insl
arpl
lods
cmpsb
test
mov
daa
outsb
ret
add
mov
push
xchg
sub
mov
mov
std
std
shll
lock
outsl
push
test
pop
lods
push
call
push
pop
sbb
xchg
mov
cmpsl
cmp
fists
lret
push
xor
jge
popa
ror
and
setle
sub
lret
loopne
sbb
in
push
inc
cmp
dec
or
dec
cmp
lcall
aam
dec
pop
fsubrl
das
jo
popa
in
cmp
icebp
pop
test
jmp
mov
pop
jge
bound
mov
xor
sbb
jb
std
sar
adc
adc
imul
sub
mov
daa
jmp
andl
cmp
jp
or
or
jg
outsb
scas
dec
mov
pop
ljmp
push
mov
sti
inc
rcrb
sbb
cmp
xchg
and
add
loop
jns
mov
mov
add
maxps
or
add
movsl
mov
nopl
inc
out
mov
dec
gs
jae
inc
sbb
mov
and
popf
in
sti
mov
out
dec
cmp
ret
lods
sbb
mov
outsb
lea
mov
dec
push
jbe
xchg
das
fwait
mov
popf
loope
lret
pop
sti
lcall
mov
xchg
cmp
adc
sarb
fdiv
pop
ds
cmp
jne
iret
aaa
push
adc
add
bswap
popa
subl
subb
push
loopne
mov
pusha
push
cmpsl
jo
inc
pusha
jae
test
shll
dec
pop
mov
and
mov
fstps
pushf
stos
lods
jp
lds
enter
lea
cmp
cmpsb
xchg
rcll
xor
out
xchg
xor
loopne
aad
jmp
sbb
aaa
outsb
int3
vcvtph2ps
cs
or
mov
cmp
push
insl
xchg
mov
sbbb
dec
pop
dec
lcall
push
push
add
cli
divl
insl
inc
mov
cmc
mov
push
js
nop
mov
sbb
mov
dec
test
inc
out
gs
fldcw
pop
sbb
dec
jo
mov
sbb
or
mov
add
sbb
mov
mov
lahf
mov
or
mov
icebp
test
mov
ficoml
jecxz,pn
fldcw
jne
lock
jno
loopne
rcrl
nop
movsb
push
ffreep
xchg
lea
jle
cltd
lds
mov
add
nop
pop
push
xor
stc
mov
mov
jecxz
xchg
fcompl
xor
and
dec
into
and
out
pop
jo
adc
or
fistps
adc
jbe
sarb
es
pop
add
test
orl
inc
cmc
out
aam
popf
fld
jo
mull
mov
xchg
lcall
adc
xor
in
jo
lock
and
in
xchg
in
mov
jp
lcall
dec
or
xor
adcb
or
stos
and
mov
mov
mov
mov
inc
sbb
ret
mov
dec
leave
and
addr16
lret
lahf
dec
imul
and
or
jnp
scas
movsb
test
je
mov
ja
or
nop
out
add
adc
inc
repz
loope
enter
lea
lcall
xchg
in
mov
mov
inc
shr
push
ja
or
flds
cmpsl
insb
xor
pop
sbb
cmp
call
mov
nop
dec
or
jns
lret
daa
mov
dec
sbb
pop
hlt
jecxz
push
mov
mov
sahf
xor
out
cmp
mov
or
push
dec
pop
insl
mov
push
in
das
inc
fldcw
add
jbe
imul
out
cmp
rorb
out
in
imul
scas
dec
sbb
xchg
push
sahf
jae
mov
and
sbb
xlat
xchg
popa
sbb
leave
mov
xor
xchg
mov
mov
jae
out
inc
mov
nop
mov
push
jo
adc
sbb
loope
push
jo
sbb
and
xor
mov
cs
inc
lret
repz
xor
lahf
adc
adc
aaa
adc
loop
cld
hlt
ret
dec
fucomp
lahf
iret
sub
jp
std
mov
push
jae
loop
pop
pop
dec
dec
bound
sbb
popa
xchg
nop
or
out
jb
je
adc
push
outsb
pushf
or
pop
jo
jne
mov
jno
pop
mov
call
cmc
enter
shll
cmp
clc
cmpsb
push
xchg
shl
notb
mov
lcall
stc
adc
fs
mov
shrb
in
adc
push
dec
mov
jns
decl
arpl
sbb
fs
mov
ja
push
test
mov
jp
loopne
pop
cmp
cmp
mov
mov
repz
test
inc
pop
jnp
dec
call
nop
stc
aad
and
inc
push
icebp
icebp
outsb
dec
divl
rcrb
xor
mov
lea
pushf
xchg
xor
jmp
stos
xor
scas
cmpsl
movsb
hlt
xlat
out
shr
mov
call
pusha
push
cli
mov
imul
pop
bnd
popf
push
cld
fcomi
and
daa
mov
das
dec
add
add
dec
add
cmp
xchg
inc
jb
push
sub
mov
add
ljmp
xchg
lock
push
movsb
jecxz
mov
push
adc
sub
mov
mov
ds
and
fnstsw
sub
inc
addl
enter
out
xchg
test
or
inc
les
and
inc
dec
mov
dec
movsb
push
or
pop
cmpsl
js
out
div
xor
lods
sbb
jl
outsb
mov
fs
aaa
into
lea
fs
push
les
test
push
sti
sbb
cmpsb
pop
mov
push
or
sbb
rcrl
and
push
add
inc
and
cmpsl
xchg
adcl
test
out
adc
int
cmp
jno
imul
scas
xchg
xor
loop
lret
adc
in
push
movsl
mov
movsb
jmp
dec
aad
inc
lods
or
xchg
jecxz
je
movsb
xor
inc
jo
cs
inc
int3
outsb
cwtl
jnp
pop
xchg
sti
dec
inc
mov
mov
xchg
sub
enter
and
mov
lret
cmp
test
jns
xorb
lahf
cmpsl
sbb
xorb
or
neg
mov
ljmp
sub
cwtl
dec
imul
pop
xlat
mov
mov
mov
movsl
or
clc
adc
xchg
mov
mov
mov
jl
xchg
mov
imul
pand
push
inc
lret
sub
push
and
stos
mov
aad
popf
cmp
iret
xor
push
movsb
out
jb
push
cmovbe
aad
sahf
inc
fcmovb
aaa
mov
hlt
jge
pop
lret
imull
out
ljmp
mov
mov
aam
add
loopne
hlt
loope
roll
mov
sbb
mov
or
fistl
sbb
and
and
cmp
cmp
fldt
outsb
lcall
enter
and
add
movsb
adc
loope
mov
pop
in
arpl
loope
add
pop
inc
inc
std
inc
jmp
pop
mov
and
lret
xor
test
stos
and
dec
pop
jg
outsb
xor
mov
adc
lock
leave
loopne
data16
sahf
cmp
cwtl
lods
and
sbb
mov
adc
cmp
pop
inc
pop
cmpsl
ja
cmp
lock
dec
push
xchg
rcrb
lret
and
int
inc
add
lods
icebp
pop
push
gs
fadds
sbb
or
fstps
pushf
cmp
stos
push
pusha
insb
sbb
xor
out
add
pop
out
aas
inc
scas
push
cltd
call
push
cmp
inc
stc
push
pop
fidivrs
test
or
dec
stos
mov
sahf
hlt
in
push
outsb
movsl
add
or
mov
cmp
test
jl
sbb
cmp
sub
jecxz
jnp
xchg
pop
xchg
add
cmpsb
mov
fcmovu
dec
jne
pop
mov
scas
nop
push
in
rcr
dec
test
cmp
or
rcll
lret
fs
sub
hlt
jno
and
enter
and
daa
jmp
sub
inc
pop
mov
cli
xchg
addr16
mov
adc
js
mov
addr16
jmp
cld
push
ficomps
adc
or
adc
pop
push
jl
sbb
mov
mov
ds
test
jge
mov
sbb
popa
adcl
mov
iret
icebp
dec
shlb
scas
dec
dec
popf
fwait
inc
jno
movsb
xchg
push
xchg
out
adc
xchg
push
jne
jge
cltd
jle
add
fdivrs
iret
mov
fwait
dec
mov
sbb
sbb
scas
popa
xchg
cmp
aam
adcl
ljmp
lock
push
xchg
imulb
jno
dec
push
aam
push
mov
jb
adc
push
fs
mov
ret
repz
xorl
add
jne
add
mov
aam
jnp
cmp
adc
cmpsl
xchg
or
and
sahf
ficompl
xchg
add
adcb
xchg
loope
sbb
outsb
add
fildll
loopne
push
xor
pop
jg
jnp
pop
push
or
out
lock
into
enter
xchg
push
aam
mov
icebp
add
sbb
mov
mov
divl
jbe
fpatan
fwait
sarb
nop
push
jo
test
into
cmp
shlb
jmp
test
icebp
or
or
out
std
sub
insb
fs
xchg
jae
jl
scas
or
out
lahf
leave
lahf
test
sbb
das
xor
aam
scas
push
dec
add
push
ret
mov
push
sbb
jbe
and
arpl
xchg
cs
pusha
add
inc
std
icebp
add
out
mov
fstp
pushf
pop
push
in
jp
push
pop
dec
jne
push
push
pop
lea
int3
inc
xor
add
je
pop
pop
add
jg
xor
jns
setp
int
cltd
jmp
mov
push
pop
push
mov
or
sub
jecxz
fdivrl
out
jg
xor
dec
mov
lahf
faddp
mov
pop
jne
jnp
scas
sar
cmpb
bound
daa
sti
inc
lret
push
scas
pop
or
js
adc
pusha
adc
test
popa
or
cmp
push
mov
push
mov
add
out
push
sub
add
loop
add
and
jb
fidivrl
mov
out
mov
lcall
cmp
mov
cmp
push
out
jb
and
inc
and
push
jne
wrmsr
inc
lcall
adc
cmp
or
int3
pop
popa
ret
rcr
lea
cmpsb
lret
imul
mov
sub
cmc
addl
pusha
mov
daa
fidivl
inc
outsl
nop
xor
lea
push
mov
push
imul
in
xlat
add
mov
and
aas
add
orb
dec
stos
and
out
in
mov
xor
imul
je
ror
data16
lahf
cmc
mov
jg
call
fisttps
push
push
insl
aam
lahf
pop
roll
mov
jb
aam
dec
adc
out
cmpsb
fldcw
ficoms
push
rol
ljmp
adc
jnp
pushf
mov
imull
and
subl
sbb
adc
lret
movsl
xchg
xlat
je
sub
nop
fidivrl
pop
lret
dec
sahf
stos
dec
repz
jb
decb
sbb
je
mov
add
xchg
roll
pop
pop
add
mov
outsb
fnstsw
xchg
mov
in
movaps
sbb
adc
dec
outsl
jp
push
or
dec
sbb
es
xchg
add
push
scas
push
sti
dec
mov
insl
stos
mov
xchg
xlat
sarl
mov
loop
adc
dec
and
cmpsb
fcompl
movsb
and
int3
mov
xor
xor
add
pushf
xchg
std
in
mov
dec
ja,pt
lret
dec
ret
inc
inc
dec
sbb
iret
pop
cmp
ljmp
dec
mov
xchg
add
pop
jne
ficoms
je
mov
cmc
mov
xor
sbb
mov
jmp
jne
cs
pusha
or
inc
adc
push
loop
sahf
pop
sub
out
bound
rorl
pop
lcall
es
mov
lock
add
adc
mov
ds
sarl
insl
and
leave
mov
aaa
roll
cmpsl
cltd
jo
dec
lods
cmpsl
adc
mov
lods
add
call
inc
jne
lods
sbb
dec
ret
aas
mov
cltd
fdivrl
jmp
mov
inc
lods
pop
xchg
xor
arpl
jle
cs
movsb
jns
add
leave
shlb
mov
jnp
cmp
psrld
push
cli
mov
je
sahf
roll
frstor
aaa
test
jb
iret
xor
data16
jmp
stc
push
jge
sub
popf
cmp
into
cmc
lret
adc
mov
dec
mov
int3
dec
pop
xchg
fbld
add
lcall
pop
fistpll
dec
lods
in
cmp
ja
test
mov
dec
cltd
or
shlb
insl
mov
pop
mov
incb
lcall
stos
cmpsl
lret
stos
ljmp
aaa
rclb
push
lods
loopne
pop
test
hlt
adc
insb
in
jge
dec
rcll
adc
in
dec
pushf
cld
pusha
je
out
aaa
mov
arpl
mov
outsl
jae
or
fs
int3
scas
inc
add
and
jbe
xchg
dec
test
test
lahf
or
movb
int3
aad
adc
ud1
pusha
dec
lock
dec
adc
dec
and
xor
lcall
dec
inc
fwait
mov
xchg
daa
cmc
addb
ret
dec
inc
leave
lods
pop
inc
outsl
xor
add
bound
ret
jns
adcb
push
jo
inc
sub
pop
jg
stos
pop
pushaw
cmp
push
popa
into
jns
ss
mov
les
add
mov
and
lods
hlt
pop
clc
jge
adc
cmp
add
mov
pop
nop
and
cmp
adcl
push
lods
les
mov
ljmp
inc
push
push
cmpsb
or
or
mov
or
sub
insl
xchg
cwtl
adc
divb
jb
mov
cmovg
cli
push
enter
imul
dec
push
addr16
out
shl
mov
insl
mov
inc
sbb
jbe
sub
adc
in
xchg
fs
out
lock
pop
negb
ret
push
ja
sbb
clc
mov
mov
inc
cld
iret
sahf
popf
subl
scas
lahf
shrb
xor
pop
ficoml
ljmp
jnp
mov
out
test
jp
insl
sbb
xor
sub
mov
mov
jne
int
stos
lock
or
push
cltd
les
mov
pop
add
leave
mov
das
mov
mov
orl
push
andb
data16
and
hlt
adc
xor
in
jns
rcll
xchg
jmp
mov
mov
adc
push
insl
dec
icebp
push
and
pop
pusha
cmp
mov
jmp
lahf
cmp
inc
push
push
lret
push
outsb
inc
aam
subb
mov
scas
mov
dec
cld
mov
dec
outsl
in
sub
stc
and
rorb
nop
jg
jo
idiv
inc
mov
ja
mov
push
mov
mov
into
sbb
bound
cli
push
mov
enter
addl
and
push
daa
cmc
jb
mov
jg
jp
lds
jle
lods
xlat
aas
or
mov
pop
mov
psrlq
jne
gs
dec
shrb
adc
in
pop
pop
push
lea
pushf
xor
jle
cmpsb
cmp
dec
shl
cmp
in
in
dec
test
and
mov
mov
and
push
sub
inc
mov
sub
cmc
cmc
pop
out
xchg
shl
mov
jp
push
int
adc
mov
push
movsl
call
push
push
fwait
inc
scas
sbb
push
cmp
xchg
in
mov
mov
out
int
or
jp
fiadds
js
jmp
movsl
dec
or
cmp
pop
pop
arpl
and
jns
mov
nop
cmp
xchg
lods
inc
inc
lea
rcll
lret
lret
cld
int3
jl
mov
and
dec
or
mov
lcall
pushf
xlat
dec
fwait
push
stos
jb
into
icebp
pop
xchg
cwtl
and
pop
test
fcoms
lock
aam
mov
ret
and
jecxz
addr16
shlb
xor
pop
sub
out
popf
js
sbb
jl
lahf
int3
outsb
stc
ss
sub
xchg
lea
adc
pop
std
lret
cmp
inc
cld
mov
bswap
mov
scas
loopne
jecxz
in
leave
ds
bound
or
mov
and
mov
or
imul
adc
sub
cs
adc
xor
adc
clc
sub
push
js
repz
mov
popa
adc
add
addr16
cwtl
jg
outsl
mov
shlb
pop
mov
stc
and
lods
sarb
pusha
cmc
rcrl
negl
mov
in
cmc
mov
xchg
lret
enter
dec
enter
mov
dec
and
stos
mov
scas
aad
dec
imul
bt
mov
outsl
inc
cld
test
or
lret
dec
int
into
dec
es
test
stc
and
js
sub
scas
adc
lahf
adc
ds
hlt
xchg
jmp
fcmovnb
mov
mov
pop
mov
sbb
add
push
add
pop
stos
lret
add
mov
mov
test
movsb
es
scas
or
add
dec
in
pop
sti
aam
mov
sub
test
mov
es
pop
iret
inc
mov
popf
xlat
xchg
cmp
cltd
fimuls
je
or
movsb
mov
lret
push
dec
cwtl
adc
jmp
inc
mov
and
stos
and
daa
xchg
outsb
movsb
setne
xchg
push
idiv
add
push
sub
push
ret
subl
pop
test
jmp
jno
mov
leave
lret
mov
xchg
adc
mov
push
jnp
dec
rcll
sub
cld
push
ffree
pop
or
imul
or
divb
out
int3
scas
shrb
jo
leave
mov
or
adc
ss
cwtl
pop
in
popf
or
lods
sub
ficoml
in
push
xchg
adc
cmp
add
or
lret
movsb
fcom
sbb
push
inc
xlat
dec
dec
xor
add
mov
scas
push
jg
add
popf
inc
int3
subl
cmp
cmp
xor
push
sbb
xchg
adc
xchg
in
sbb
inc
fwait
jge
cmpsb
in
or
dec
jo
lods
iret
cli
ds
sub
movsl
sbb
mov
mov
rorl
adc
lds
jno
mov
mov
cmc
pop
mov
xchg
and
push
stc
mov
cbtw
xor
mov
lcall
mov
sub
push
call
xor
push
mov
inc
xlat
pop
rol
scas
sbb
outsb
and
les
add
mov
add
inc
add
adc
test
push
inc
adc
loopne
fidivrs
cmpb
fsub
fisttps
enter
pop
mov
sub
dec
dec
test
jne
js
bnd
loopne
pop
cmp
add
adc
or
add
enter
sbb
jl
or
lods
out
mov
test
push
repz
jo
cmp
or
push
daa
push
rcrb
in
rcrl
jo
dec
out
inc
decb
xchg
test
push
inc
test
sub
sub
sub
in
xorl
lahf
in
sti
outsl
and
adc
mov
jg
lcall
sbb
outsb
push
xor
inc
adc
pushf
or
push
pop
push
push
aad
repnz
add
imul
dec
jg
out
aad
mov
jle
add
jle
dec
cmp
mov
adc
mov
jmp
mov
fucomp
in
enter
and
xchg
jne
xor
mov
xchg
lods
test
xor
popf
dec
jno
shlb
add
leave
mov
pop
cmp
movsb
push
push
jne
xchg
mov
adc
pop
jp
fcom
mov
mov
inc
push
aas
jle
data16
push
inc
jmp
divl
mov
mov
andb
fcom
jl
push
inc
ljmp
add
roll
das
clc
dec
mov
push
jecxz
or
push
dec
cmp
jbe
lea
sbb
add
xor
fsubr
mov
cli
stos
jno
subl
and
popf
out
jns
bound
fcoml
inc
movsb
in
adcb
shlb
sbb
imul
mov
xchg
sub
fcoml
int3
ss
add
add
pop
stos
cld
jp
daa
test
sub
xor
daa
pop
rcl
or
cmp
data16
xor
dec
subl
mov
pop
dec
jp
adc
movsb
cmc
popf
int
imul
insb
stos
fcoml
jge
mov
push
push
xchg
add
jb
jmp
rol
cwtl
sub
pop
out
insb
pushf
cmp
push
ss
aas
fildl
sbb
adc
adc
xchg
cmc
int
xchg
adc
sbb
xor
fs
push
imul
dec
sub
jge
daa
mov
push
mov
in
jg
test
das
adc
icebp
sub
ds
sub
std
lret
or
xorb
mov
sub
rcr
divb
push
add
inc
int3
xchg
in
dec
push
mov
fdiv
mov
test
jne
sbb
mov
aaa
in
or
or
sub
sbb
sub
push
test
fwait
lret
xlat
dec
lods
mov
jns
push
jecxz
gs
sbb
rcrl
in
fcoms
mov
sub
push
mov
lret
cmc
icebp
mov
dec
jne
adc
inc
push
cmc
push
outsl
jmp
inc
test
and
scas
arpl
mov
dec
test
jne
les
popa
hlt
mov
lock
int
mov
pusha
or
imul
jbe
mov
adc
lahf
iret
push
inc
push
jg
into
insl
dec
in
mov
xor
cmp
mov
call
fwait
movsb
sahf
and
adc
xchg
push
test
insl
lcall
inc
out
jbe
xlat
adc
imul
std
mov
popf
popf
xchg
dec
mov
aaa
inc
ds
bound
iret
adc
mov
aas
mov
push
cmpb
dec
test
lds
mov
push
ss
lods
jp
mov
clc
out
mov
adc
leave
nop
jmp
and
jecxz
add
daa
and
mov
fistl
clc
push
and
out
cltd
adc
sahf
hlt
fnstsw
outsb
mov
into
jo
cmp
mov
mov
stos
es
jo
daa
imul
fisttpll
and
cld
inc
mov
push
out
and
es
pop
incb
stos
int3
add
jne
or
das
cmp
call
inc
movsb
movsl
add
enter
xchg
mov
cmp
scas
mov
jo
xor
sbb
mov
ds
mov
gs
and
sub
pusha
add
pop
ret
aas
and
xor
fwait
sbb
into
aad
push
pop
packsswb
pop
jecxz
shlb
sbb
andb
add
lods
dec
dec
mov
cmp
pusha
push
dec
mov
loop
addr16
push
adc
mov
nop
cmpsl
ja
mov
and
into
push
ss
sbb
xlat
adc
adc
aas
test
int
fdivrl
cmp
dec
sahf
xchg
jle
inc
mov
sub
mov
cmp
mov
mov
cmp
lahf
xor
push
in
mov
in
cmpsl
insb
test
jno
gs
mov
adc
sub
xlat
frstor
sti
aam
ret
inc
mov
and
test
andl
jae
out
pop
mov
jp
outsb
sbb
cmp
xor
add
insl
mov
hlt
cmc
cmp
bnd
negb
enter
add
mov
or
mov
push
xor
popf
or
inc
in
aaa
jg
jbe
mov
movsl
sub
mov
xor
cmc
outsl
aaa
mov
add
adc
adc
loope
xor
jmp
push
push
out
ficoms
jmp
and
test
xchg
ljmp
sub
mov
xor
mov
mov
enter
push
popf
mov
adc
add
ret
mov
fcomp
adc
push
xchg
fimuls
adc
cmpsb
cmpl
in
add
mov
loopne
in
mov
mov
jg
jle
jg
dec
xchg
add
aam
xchg
mov
add
ds
pusha
stos
cmp
popa
stos
mov
aas
call
inc
jmp
repnz
cmc
jge
lods
aad
push
iret
imul
mov
sbb
or
mov
xor
cmp
dec
xchg
dec
mov
or
imul
jo
pop
adc
dec
leave
repz
pop
mov
push
jo
xchg
out
mov
mov
mov
adc
int3
aas
aam
inc
inc
or
pop
lret
mov
outsb
mov
fwait
std
test
cmpsb
mov
js
rclb
mov
js
test
mov
mov
call
xor
adc
movsb
cmpsb
sahf
insb
sahf
movsb
fidivs
iret
jecxz
imul
ss
xchg
push
imul
dec
adc
outsl
lahf
fdivr
aam
addb
pop
fwait
xchg
xchg
jnp
xchg
inc
mov
out
lahf
adc
xchg
lahf
enter
sub
jg
or
push
jl
sub
ret
xor
inc
mov
cmp
or
mov
in
pushf
rol
ja
mov
xchg
dec
cmp
mov
mov
lret
es
and
inc
lods
mov
adc
mov
repz
dec
imulb
sub
jae
stos
mov
inc
jl
adc
cmp
mov
inc
inc
jnp
pop
lret
push
cmpsl
rorb
cmp
cmp
les
mov
sti
mov
jnp
jae
adc
out
and
jns
and
sbb
not
adc
mov
test
mov
cmp
pushf
shlb
inc
add
fmull
sbb
stc
mov
sbb
xchg
aam
iret
jbe
sub
add
push
xlat
and
lods
inc
gs
imul
xchg
movb
movsb
cmpsl
scas
pop
xor
mov
lret
mov
mov
dec
icebp
ret
sti
mov
fnstenv
sbb
inc
sub
jns
lret
push
fs
mov
mov
adc
inc
jg
push
imull
and
int3
sbb
jb
into
push
cmp
mov
rcrb
and
movsb
out
lea
fistl
inc
lods
imul
and
pushf
je
xor
add
daa
dec
iret
cs
mov
imulb
sbb
in
fwait
inc
cmp
insb
sub
adc
ret
pop
inc
ret
pop
and
mov
cli
mov
or
popf
jo
mov
out
pop
jnp
pop
outsb
cli
mov
pop
int
imul
push
out
push
lock
or
dec
popa
inc
xlat
fcoms
ret
sar
push
lret
jp
rolb
pop
pop
mov
xlat
push
jb
mov
push
sub
or
mov
xchg
pop
imul
mov
fnstsw
mov
rcl
imul
insb
stos
pop
rolb
iret
stos
nop
and
addb
push
inc
xchg
inc
sub
lods
push
mov
cli
lea
cmp
pop
xchg
add
shr
jbe
jl
sub
jbe
mov
or
repnz
adc
dec
xchg
pop
fsubr
lahf
outsb
lods
imul
adcl
aam
adc
dec
stos
aaa
pusha
addw
sahf
ja
movsl
hlt
cmp
jbe
les
xchg
adc
bound
pop
orl
mov
insl
outsb
pop
or
in
add
mov
xchg
add
dec
ljmp
sbb
mov
mov
test
pushf
mov
cltd
rcl
repnz
in
jle
adc
and
sahf
xor
or
inc
adc
out
pop
mov
dec
retw
mov
lret
jg
sbb
cltd
jo
fdivl
cs
outsb
clc
push
sti
cmc
rcrl
mov
pusha
cltd
add
jbe
inc
jge
mov
rorb
inc
inc
scas
inc
movsl
adc
pop
les
jg
xchg
movsb
loope
mov
sbb
mov
push
pop
and
mov
loop
test
mov
xchg
in
loop
sarl
in
ds
sarl
xor
sbb
fadds
mov
cltd
jns
repz
int
push
ja
in
into
cmpsl
mov
sbb
ss
mov
ds
call
xchg
into
jno
popa
enter
xchg
loop
imul
fstpl
test
js
ja
pop
rol
pop
add
add
cwtl
or
push
fs
jo
dec
pop
sub
enter
gs
jl
mov
and
pop
addr16
xchg
xor
lods
addr16
cmp
imul
cmp
ss
fisubl
aaa
xchg
into
pop
std
cmpsb
mov
xchg
cmp
lea
jo
popf
pop
filds
add
push
xchg
insl
xor
mov
mov
dec
xchg
fimull
lret
sbb
mov
pushf
sub
lock
mov
jmp
mov
and
xchg
mov
movl
rclb
pushf
add
jne
xor
test
dec
pop
add
je
scas
hlt
adc
cmp
mov
inc
lahf
push
std
cmp
aas
imul
insl
mov
test
out
popa
jnp
mov
sahf
mov
mov
xchg
push
push
test
and
bnd
jge
cmp
lea
mov
xchg
es
jno
std
outsb
cmp
pop
push
mov
push
jmp
cli
dec
mov
iret
push
cmp
push
lods
add
insb
sbb
mov
mov
xor
adc
push
mov
jecxz
xor
fwait
jl
dec
clc
pop
aad
pop
sub
jae
pushf
sarl
fcoms
jg,pn
dec
add
xor
lods
clc
addr16
mov
pop
xchg
jo
jns
repz
sbb
jle
dec
mov
and
adc
xchg
imul
mov
cwtl
addr16
scas
out
movsb
in
jne
mov
xor
out
push
xor
pop
movsb
inc
pop
add
shlb
push
push
mov
sub
mov
repnz
jbe
jecxz
dec
xlat
pop
and
test
cmpsb
cmpb
dec
in
leave
jo
aad
mov
repnz
push
fidivrl
jno
in
mov
sti
push
fnstsw
out
int3
xor
xchg
mov
andl
outsb
inc
pop
jecxz
sar
pop
sbb
fstl
dec
xchg
ja
dec
int3
dec
jo
or
dec
jbe
adc
lret
inc
mov
enter
lcall
cmpsl
ret
add
jg
stos
cmp
es
testb
add
inc
add
into
aam
cltd
xor
inc
pop
cmp
inc
cmp
std
test
pop
dec
pop
icebp
and
jge
pop
xor
daa
xchg
movsb
cmp
inc
mov
shr
pop
xor
xorl
shrb
sub
hlt
aad
lret
mov
xchg
xchg
sbb
icebp
mov
ret
cmp
inc
jecxz
sbb
mov
ds
pop
enter
nop
clc
fs
sub
mov
repz
and
fldcw
fsubrs
mov
test
into
hlt
xchg
jbe
fstpt
pop
jb
inc
sub
jge
cmp
daa
push
lahf
daa
sbb
inc
icebp
jno
push
push
and
inc
push
dec
cmc
std
lcall
les
roll
pop
mov
xchg
mov
push
xchg
push
cs
push
testb
lods
jp
pop
shrl
jae
out
shrl
xor
and
xchg
cmpsl
mov
ljmp
mov
add
pop
dec
loop
fcmovbe
mov
ret
mov
xchg
cld
negl
sbb
adc
lret
push
xchg
xor
pop
mov
xor
pop
push
push
cwtl
fildll
imul
andb
mov
notl
xor
mov
mov
inc
repz
nop
fwait
out
xor
or
xor
mov
mov
xchg
mov
fcoms
sub
pop
loope
mov
stos
dec
mov
std
mov
and
xor
push
jno
jp
inc
in
push
call
jl
mov
push
call
pop
cmp
fsubrs
mov
aaa
pop
nop
ret
rcl
dec
icebp
push
lds
iret
xchg
lret
mov
pop
mov
mov
push
lds
push
mov
aam
add
int3
xchg
popf
cld
cmpsl
jmp
aam
mov
pop
adc
and
dec
mov
xlat
xor
and
es
fsubs
aas
inc
fwait
and
mov
sbb
jecxz
js
sbb
and
insb
sahf
sbb
cmpb
inc
dec
test
ja
out
frstor
int3
notb
mov
mov
ret
ljmp
inc
popa
mov
imul
mov
mov
bound
xchg
shlb
pop
jle
push
jne
cmp
insb
fsincos
das
lahf
insl
loop
mov
out
repz
cs
das
cmp
cwtl
aas
sub
je
mov
mov
shlb
mov
xor
popa
xchg
movsb
push
mov
loopne
dec
shr
push
das
shll
aam
pop
xor
repz
cmp
repnz
and
ja
lcall
lods
dec
ja
xor
push
xchg
jl
jno
int3
fsubs
push
xchg
ja
test
leave
cwtl
lcall
lea
mov
push
sub
shlb
xor
dec
pop
sub
jno
or
xchg
mov
mov
xchg
sub
xor
and
mov
adc
or
loop
cmc
outsb
lret
xchg
adcl
inc
and
cmpsl
or
loopne
mov
scas
mov
cmc
cmp
test
movsl
aam
pop
lods
sti
dec
arpl
lret
jne
mov
iret
jmp
jecxz
mov
cmp
xchg
pushf
add
aas
sbb
add
cmc
pop
pushf
outsb
and
out
mov
and
arpl
getsec
lret
fmull
fcomps
pop
inc
mull
int3
mov
xor
inc
in
cld
adc
lcall
dec
dec
lods
xchg
add
scas
mov
adc
jne
xchg
push
sbb
loop
fs
push
js
or
mov
push
ret
imul
xor
sti
xor
mov
mov
mov
jecxz
int
mov
mov
bound
add
shrl
push
lods
in
and
adc
hlt
stos
pop
pop
mov
enter
std
cmp
gs
or
dec
fwait
or
pop
push
sti
jbe
mov
ja
xchg
cmp
lods
mov
iret
xchg
adc
imull
psrlw
bound
add
sub
inc
jecxz
repnz
mov
jg
add
push
lds
pop
inc
test
sti
outsb
data16
and
outsb
and
lret
adc
imul
addb
mov
lock
enter
dec
lret
fnstcw
insb
cmpsb
dec
push
cmp
icebp
jp
jno
je
lahf
jae
xor
inc
lock
outsl
adc
in
push
lea
mov
xor
mov
xor
andl
mov
jmp
mov
aam
out
or
aas
mov
sub
test
pop
pusha
push
or
subb
sub
ret
and
lods
mov
mov
repnz
mov
inc
dec
fcoml
jne
xor
enter
mov
and
add
jbe
dec
mov
adc
inc
dec
pop
add
lahf
add
or
jg
in
in
pop
testl
out
stos
push
dec
pop
iret
dec
leave
jg
jne
dec
xchg
mov
push
mov
out
mov
or
inc
adcb
push
or
call
xchg
iret
adc
sub
push
pop
fnstenv
lods
jle
xchg
mov
jbe
adcl
daa
nop
adc
mov
fmull
pop
pop
pop
popa
push
xchg
insl
jecxz
pop
les
fs
jl
jp
or
nop
insb
push
and
sbb
popa
mov
out
jmp
push
faddl
imul
test
mov
inc
xlat
adc
cwtl
in
jg
pop
push
and
sbb
sub
cmc
rorl
loop
or
rcr
xlat
mov
cmp
nop
cs
inc
push
push
jl
adc
incl
add
popf
inc
cmp
fisttpll
cmp
jbe
or
sbb
fsts
jle
ja
addr16
push
aad
insl
lcall
pop
xchg
push
aaa
lahf
xchg
and
mov
or
shl
shrl
mov
mov
pop
xor
je
mov
jecxz
jae
push
sub
inc
inc
pop
cmp
pop
adc
or
popa
fptan
inc
lret
xchg
in
jb
push
fnstenv
insb
push
push
movsl
or
aad
fwait
test
xchg
xchg
int
sbb
push
jle
ljmp
mov
and
cmc
inc
pop
cmpsl
leave
push
cmp
scas
jle
ret
jno
iret
push
sahf
rclb
cs
cmc
fldt
xor
push
and
add
xor
divl
test
outsb
loope
ja
add
mov
push
testl
repnz
stc
rcrl
jno
mov
rcrl
cmp
in
mov
loope
xchg
cmc
shll
loop
subl
iret
dec
test
push
push
inc
in
loope
movsl
mov
stos
jl
rclb
and
ret
mov
das
dec
and
cmp
divb
fsubl
cmp
in
sbb
js
push
ret
ret
fisttps
lret
lods
pop
iret
jge
addb
sbb
cmpsl
cmp
cmp
enter
add
push
push
mov
and
mov
sbb
fmuls
cmp
test
cs
into
pop
rorl
insb
pop
xchg
xchg
push
mov
rcll
mov
or
add
stos
adc
aaa
scas
xchg
xor
out
lcall
mov
sbb
xor
les
cmp
movsb
sbb
int3
fwait
mov
jecxz
das
xor
push
test
rolb
pop
push
cld
sti
incl
outsl
ljmp
test
call
pop
outsl
jno
mov
in
sub
jp
and
clc
jae
mov
jmp
inc
cwtl
out
les
or
mov
and
add
das
aaa
enter
jae
jbe
jmp
pop
xor
xor
adc
iret
loope
outsl
dec
sbb
adc
or
mov
jmp
mov
or
xchg
jno
aas
rorl
sti
arpl
jne
call
cltd
fildll
cmpl
jbe
mov
and
add
in
jbe
in
stos
dec
dec
mov
cmp
daa
xor
dec
lea
lret
clc
pop
cmp
adc
push
insl
insl
sbb
mov
cmp
mov
sub
pop
imul
inc
ret
push
xchg
cmp
push
into
inc
sbb
lock
dec
inc
cmp
xor
xor
std
into
ja
cwtl
adc
cli
hlt
mov
mov
loopne
data16
sub
xchg
jg
pop
fwait
loop
cmpsl
icebp
test
cwtl
sbb
sbb
nop
rcrb
jo
dec
jae
imul
xchg
pop
int
imul
enter
sbb
ret
sub
and
jp
dec
push
add
pop
xchg
xor
and
push
mov
shr
in
rcrb
cmp
cli
bound
sbb
inc
arpl
ret
imul
cmc
dec
repz
jae
push
lret
add
pop
lahf
add
shl
mov
cmp
adc
movsl
daa
or
in
adcl
mov
lea
icebp
lea
movsb
and
dec
push
jmp
cmp
movsl
cld
outsl
and
mov
mov
insl
sbb
xchg
enter
lds
or
add
cli
ss
divb
sbb
sub
aad
inc
imul
mov
hlt
scas
andl
and
out
mov
jge
mov
dec
sub
push
ret
pop
rclb
daa
sbb
add
dec
xor
vmovshdup
in
or
cmp
jnp
aad
sbb
mov
bound
mov
xchg
pop
dec
subl
aad
lret
mov
shll
bound
dec
sarl
jle
add
adc
add
outsb
push
pop
add
mov
and
cmpsl
and
out
test
iret
rclb
jl
xor
cmpsl
mov
push
mov
roll
stos
sahf
push
xor
cmp
add
icebp
jae
adc
xchg
inc
test
std
out
subl
add
sbb
cmp
jb
mov
and
mov
lret
push
sub
sub
loop
ja
lret
sbb
imul
leave
push
lods
gs
inc
imul
and
in
bound
dec
and
iret
mov
xchg
stos
call
out
xorl
mov
cmp
aaa
push
jmp
or
xlat
addr16
loop
inc
aas
mov
stc
test
mov
xchg
outsb
movsl
and
mov
mov
lods
pop
mov
pop
rcll
popf
jae
shr
sub
in
dec
jl
inc
mov
hlt
adc
aam
movsb
mov
inc
sub
test
neg
lahf
fsubl
add
sbb
arpl
and
mov
xchg
mov
js
jge
movsb
xor
roll
stc
sbb
jno
add
push
pop
fsub
test
test
lcall
lock
in
nop
dec
test
in
cmp
and
movl
sar
pop
lods
cmp
jbe
inc
ljmp
or
mov
sub
ja
inc
int3
insb
imul
ja
adc
cmp
test
sbb
out
sbb
std
pusha
clc
aad
pop
cmp
push
add
out
inc
cvtpi2ps
movsb
mov
sub
push
fs
loop
jmp
loop
jg
pushf
xchg
in
lods
lods
and
sub
fstpl
notl
dec
push
sarb
imul
mov
push
cmpl
mov
sub
cli
mov
pushf
data16
xchg
aas
fisttpll
add
in
scas
xor
jo
mov
sbb
ja
fisubrs
rcrl
mov
daa
sbb
mov
cmp
sti
jp
pop
dec
in
jle
mov
sbb
nop
xor
int3
jmp
sbb
jae
lds
jne
out
ds
out
aam
xor
dec
repz
fisttpll
clc
mov
xchg
mov
lock
out
mov
sub
add
imul
lret
adc
pop
xor
pop
xor
iret
jmp
pusha
test
jl
pop
jae
jp
xchg
ljmp
int
jae
adc
fimuls
pushf
jmp
stos
repz
addl
cmp
mov
ret
les
inc
insl
mov
in
jae
inc
mov
cmova
and
mov
ljmp
fs
faddl
imul
or
sar
cmp
inc
outsb
dec
sahf
sbb
pushf
mov
or
push
dec
xchg
xchg
jnp
lret
pop
ret
xchg
jecxz
dec
fimuls
jl
pushf
push
repz
out
mov
stos
pop
mov
fwait
pop
inc
shlb
jnp
jecxz
insb
or
das
or
xor
rcrb
dec
add
xor
mov
loopne
sbb
imul
dec
cmp
sahf
jmp
xchg
stc
cmp
lcall
pop
jg
sahf
ds
loopne
mov
jmp
stos
inc
stc
hlt
push
pavgb
in
cmpsl
jmp
shrb
adc
or
es
insb
in
xchg
aas
push
pop
lret
jl
add
cmp
test
push
adcb
cmovne
rclb
xchg
loop
adc
and
leave
or
cmc
js
test
les
push
or
cs
int
inc
cmp
jecxz
mov
ret
jno
jnp
out
addr16
sbb
push
cmp
xchg
pop
add
pop
dec
sbb
loope
push
dec
call
data16
mov
int
repz
or
movntps
dec
jp
into
ds
sub
scas
jl
cmpsb
fwait
enter
into
ljmp
push
push
aam
sahf
rorl
mov
ds
aam
pavgw
lret
pop
adc
fistpl
fisubrs
dec
dec
sub
xchg
test
xchg
xchg
inc
mov
ss
sahf
test
dec
daa
nop
jns
int
xchg
xchg
cmp
add
sub
ja
test
clc
xlat
sahf
pop
test
mov
mov
shld
mov
enter
out
xchg
ljmp
mov
or
int
jl
pop
in
ret
jecxz
xlat
cmpsb
test
andb
and
cmp
mov
lret
in
test
fisubs
roll
add
cmpb
dec
cmpsl
jne
in
inc
xchg
mov
daa
push
push
pop
ja
cli
jp
out
cmp
and
fidivl
pop
rcrb
push
imul
jl
xchg
adc
stos
rorb
push
sub
lods
dec
je
push
sbb
xor
mov
inc
jge
test
nop
xlat
push
int3
xor
and
subb
les
mov
push
mov
jno
ret
btc
push
lahf
clc
aam
push
push
mov
mov
dec
addr16
mov
cld
fidivs
outsl
ja
push
shr
sbb
lret
in
test
sarl
sbb
push
pusha
out
dec
mov
shrb
nop
icebp
ljmp
add
lods
cs
in
jmp
fisttps
sub
xchg
out
mov
negl
cmp
xor
lods
jecxz
xchg
mov
pop
jmp
outsb
cmc
in
mov
mulb
sub
mov
or
xchg
xchg
push
mov
js
mov
mov
mov
mov
fisttpll
out
lret
xor
jecxz
inc
icebp
jo
jmp
imul
pop
cmp
shll
jbe
adc
xchg
pop
test
adc
orb
mov
fidivl
sti
xor
and
popa
push
xchg
cmp
shlb
sub
stc
or
adc
fcmovu
jbe
and
inc
cwtl
and
or
push
inc
adc
int3
adc
cmc
arpl
or
xlat
and
les
mov
sbb
jb
ljmp
rcll
xor
test
les
test
cmp
cmp
in
cmc
jle
fcmovb
sub
aad
lods
daa
xchg
sub
ret
mov
in
adc
push
xor
xlat
aaa
push
adc
mov
hlt
fs
adc
mov
sbb
cmp
lret
sub
jnp
int
ljmp
rclb
inc
lods
cld
fwait
jae
repz
xor
enter
into
in
push
sub
jle
scas
cltd
inc
in
or
mov
aad
cmc
in
imul
test
mov
sbb
adc
add
enter
scas
cmp
stos
and
dec
push
sub
je
mov
mov
out
insb
lcall
inc
cli
mov
jg
cld
fbld
xor
push
xchg
pop
dec
aas
mov
mov
xor
add
scas
pop
sbb
or
shlb
pop
xor
gs
or
addr16
mov
test
jg
inc
adcl
push
push
popf
push
cli
cvtps2pd
add
adc
fiadds
rcrl
pop
repnz
out
imul
sbb
mov
sub
inc
sub
sar
add
fidivrs
lods
ficomps
mov
sub
mov
es
nop
insb
sbb
pop
mov
mov
jp
mov
xlat
scas
mov
out
dec
mov
or
stos
insl
jl
mov
cmp
outsb
mov
scas
jg
sahf
pushf
jp
insb
lds
nop
scas
mov
pop
adc
subl
cmp
sbb
decb
xlat
imul
scas
jnp
cmp
mov
repnz
jne
test
jo
pop
pop
push
fnstenv
fnstsw
fwait
jne
mov
xchg
sarb
xchg
or
outsl
mov
imul
push
jnp
das
mov
fdivrl
sub
cmpsl
icebp
xchg
jle
add
rclb
inc
push
pop
into
sbb
jno
rcl
and
fldenv
sub
cmp
xchg
push
popa
inc
cmpsb
dec
enter
hlt
addr16
in
lret
cmp
fldenv
lds
andb
mov
jmp
dec
mov
pop
or
xlat
xchg
adc
repz
mov
lds
adc
pushf
clc
outsl
inc
add
push
addr16
fs
push
test
repz
call
lods
enter
xor
stos
jo
js
cmp
dec
pushf
movsl
pop
aas
add
inc
cmp
gs
cmp
push
outsb
test
adc
dec
mov
lock
sub
les
in
imul
inc
sahf
xlat
xchg
xchg
jp
mov
hlt
xchg
add
xchg
push
jns
adc
fidivrs
movsl
pop
xor
jnp,pt
scas
ljmp
incb
or
roll
mov
jns
jmp
and
popa
sbb
jl
std
push
repz
pusha
mov
jb
test
addr16
cmp
fidivrs
and
test
and
fwait
and
in
das
in
xchg
lret
lret
pop
repnz
sub
hlt
sbb
cltd
lret
sarb
cmp
lds
loope
daa
aas
mov
push
xchg
nop
cmp
shl
pop
mov
std
push
inc
cwtl
xchg
inc
mov
fldl
fcmovu
movsl
stos
adc
scas
or
inc
pop
das
push
push
mulb
mov
pop
pop
test
fs
scas
push
push
mov
insb
sub
push
jg
mov
mov
push
inc
imul
mov
adc
in
cmpl
scas
into
mov
aam
in
sub
ret
lock
xor
and
or
adc
xchg
mov
or
pop
js
pop
inc
das
xor
mov
out
mov
ds
lahf
into
jns
dec
shlb
xchg
popa
out
push
int
adc
xchg
dec
pop
add
and
push
test
push
push
fstps
int
je
popa
add
cltd
lcall
adc
rcll
push
or
cli
sbb
mov
mov
add
gs
stos
mov
das
mov
xchg
inc
jge
jno
shrl
mov
ja
jmp
imul
lea
lds
cmp
and
insb
js
sub
lret
fwait
out
into
mov
add
add
dec
or
int
in
pop
mov
roll
pop
mov
outsl
fsubp
push
xor
and
test
mov
dec
inc
addr16
cmp
gs
movsl
int
cmp
jno
adc
out
inc
or
mov
sbb
xorl
push
cmpsb
adc
movsl
push
aam
xor
out
dec
pop
mov
movsl
mov
pushf
and
pushf
adc
movsl
psubb
inc
sahf
aas
js
test
enter
sbbb
push
pop
mov
push
mov
pop
aaa
pop
popa
mov
es
mov
jo
sub
fldt
in
outsb
pushf
sarl
add
popa
in
dec
dec
iret
dec
loop
stos
addr16
mov
ret
out
stc
incb
or
adc
cwtl
fldcw
mov
and
shrb
sbb
pop
stc
pop
jb
sbb
mov
jns
int3
jmp
lea
insb
lods
adc
sahf
repnz
mov
call
xchg
mov
aad
movsl
shll
mov
pushf
jge
popf
adc
movsl
xor
stos
fstps
inc
jmp
push
pop
psraw
clc
sbb
mov
bound
adc
ds
fisubrs
out
inc
stos
jo
adc
xchg
cmpsb
into
jecxz
rclb
movsb
mov
mov
lahf
test
jle
jne
push
xor
add
push
push
xchg
test
cmc
xor
shll
imul
dec
leave
iret
pop
dec
push
mov
shr
lds
push
fidivrl
adc
mov
orl
mov
cmp
jle
or
test
xor
imul
mov
fbstp
scas
es
sbb
push
push
idivl
mov
xchg
sbb
clc
jo
or
clc
cmpsl
push
or
adc
cmp
rclb
sbb
ffree
mov
shl
bound
adc
push
les
fiadds
ja
lahf
movsb
out
arpl
xchg
adc
in
nop
jp
xchg
mov
mov
in
sbb
inc
xchg
bound
outsl
pop
mov
push
jo
sbb
jmp
pop
inc
xlat
push
jne
jmp
jne
cmp
or
ffree
movsl
addr16
dec
and
and
adc
xor
rcll
ljmp
and
ret
pop
cltd
push
mov
mov
inc
cwtd
dec
adcl
fwait
xchg
mov
lret
xor
mov
cmp
leave
imul
in
daa
in
mov
in
pop
cltd
pop
mov
stos
je
jp
and
mov
push
imul
push
in
mov
stos
cmp
pop
xor
sub
repz
sbb
xchg
das
in
mov
sub
and
pop
mov
mov
adc
fidivs
or
xchg
mov
mov
mov
cmp
jmp
int3
mov
xchg
lcall
hlt
into
mov
add
sbb
lahf
mov
dec
icebp
lret
cmp
xchg
iret
icebp
movsl
xor
clc
mov
dec
jp
inc
jbe
or
mov
jmp
inc
mov
pop
hlt
push
mov
daa
fsubl
and
dec
insb
rcrb
cltd
push
inc
cvtdq2ps
mov
pop
jmp
dec
into
bound
cltd
dec
or
xor
xchg
jo
gs
cmpsl
cmp
ljmp
jo
mov
shll
stos
mov
data16
cmpsl
loop
sbb
push
in
aas
cltd
mov
cmp
cmpsl
cmp
in
add
mov
sahf
sub
pushf
test
nop
and
lret
or
add
fldenv
mov
jb
or
or
adc
cmp
andb
push
mov
pop
jb
mov
jp
push
rolb
jge
dec
adc
xchg
sbb
xlat
push
sbb
loopne
test
sub
push
mov
jecxz
test
xchg
cmp
xlat
xrelease
jno
inc
dec
subl
icebp
xchg
add
or
movsb
cwtl
fstpl
sub
notl
sub
mov
stos
xor
adc
nop
daa
movsl
out
push
mov
sub
test
loopne
dec
xor
ss
mov
or
aas
inc
inc
push
gs
add
sarl
mov
fildl
leave
imul
dec
or
pop
sub
xchg
int
mov
xchg
lcall
sub
push
sub
in
sti
mov
imul
popa
stos
jne
pop
jmp
xchg
pop
sub
or
daa
cmp
lods
lock
lcall
je
inc
test
shlb
push
cwtl
push
mov
mov
add
xchg
push
cs
pop
jb
mov
inc
dec
and
shll
push
leave
sarb
cmp
gs
mov
enter
fmull
cmp
dec
cmpsl
pop
pop
testb
sub
mov
clc
cs
mov
dec
xchg
leave
sub
or
and
and
loope
dec
or
pop
cmp
jg
roll
scas
cmp
xorl
dec
cmp
mov
or
jo
pop
test
mov
andb
in
shlb
pushf
push
mov
jge
imul
leave
cmp
fisttps
int3
xorl
xchg
stos
mov
hlt
in
sub
fwait
xor
js
hlt
ret
dec
pop
movsb
push
enter
mov
lods
jo
adc
aam
jns
or
cli
xchg
push
adc
ret
jo
push
jg
mov
cs
push
mov
add
int
xlat
dec
xor
mov
fisttpl
adcl
shl
add
push
lret
popa
shlb
mov
pusha
out
sbb
xor
mov
push
imul
xor
push
add
repz
shlb
cld
sahf
mov
adc
xor
outsl
adcl
pushf
iret
mov
dec
inc
shl
xchg
inc
nop
and
mov
fiaddl
cmp
mov
pop
adc
mov
dec
inc
scas
inc
adc
sbb
mov
xor
scas
mov
mov
add
mov
dec
and
sbbl
sbb
andb
add
jmp
cmp
sbb
rol
dec
imul
xchg
mov
fsub
jl
sahf
sarl
inc
jo
jmp
insb
scas
push
pop
and
inc
jnp
sub
test
and
sbb
nop
mov
leave
dec
fptan
lock
inc
mov
pushf
cs
jbe
sub
orb
in
sub
pop
pop
cmp
mov
popa
sbb
jl
adcb
gs
rorb
pop
or
out
in
fdivs
in
and
mov
cmp
sbb
and
push
or
add
test
xor
lea
ret
cmc
in
sarb
sub
add
pop
add
jnp
inc
mov
nop
lods
ret
xchg
test
inc
mov
inc
jp
mov
dec
mov
sbb
nop
push
lock
pusha
out
lcall
mov
std
pusha
out
xor
out
mov
js
mov
push
xor
jge
orb
leave
cwtl
inc
dec
lods
and
out
aas
test
aaa
xchg
outsb
cwtl
lahf
pop
fdivs
enter
xchg
inc
xlat
pop
imul
test
stc
jl
stc
dec
and
into
jge
dec
divl
cmp
clc
loope
adc
into
in
pop
dec
add
jmp
xor
jo
inc
mov
sub
addl
insb
jg,pt
filds
cmpsb
mov
lahf
mov
ret
jb
iret
jp
jns
jle
test
or
pusha
das
mov
pop
mov
sahf
pop
mov
stc
scas
ret
sbb
outsl
fcompl
ret
cltd
sub
fidivl
shrl
push
cmp
push
xor
loopne
dec
push
cs
lret
mov
fstps
stos
or
mov
mov
fnop
lock
sahf
test
lock
cltd
xor
pop
pop
iret
pop
jp
push
dec
jmp
fsts
dec
push
std
mov
pop
pushf
and
mov
mov
or
test
inc
ds
jo
push
push
movsl
dec
mov
sbb
lcall
jmp
js
pop
or
in
jecxz
inc
jae,pt
fcom
imul
mov
sbb
scas
inc
sbb
mov
jo
call
pop
test
xchg
cld
daa
cld
push
sbb
mov
out
and
pop
call
dec
mov
add
mov
fdivl
mulb
aad
pushf
test
mov
popl
xlat
enter
lcall
arpl
adc
sub
shlb
cmp
pushf
mov
es
aam
lock
jo
push
lcall
cmp
jb
sbb
sub
push
popa
mov
inc
push
insb
ret
xchg
into
mov
hlt
and
xor
add
jecxz
je
push
jnp
out
adc
inc
push
arpl
das
sub
xlat
or
out
mov
inc
xor
mov
xchg
out
enter
out
test
arpl
pop
das
mov
pop
movsl
and
push
pop
sarl
pop
xor
mov
ja
lahf
les
ja
pop
jecxz
out
test
adc
aam
not
jle
mov
sub
fwait
enter
in
lret
push
fwait
adc
push
fwait
jmp
int3
call
movsl
cmp
scas
sbb
adc
test
fnstenv
repnz
adc
scas
mov
push
fsubs
lcall
pop
mov
mov
sub
lcall
fwait
mov
popa
pop
jecxz
jmp
movsl
pop
rcr
cmp
mov
sbb
add
pusha
jg
sub
leave
mov
add
fimuls
xchg
mov
iret
pusha
add
cmpsb
fs
pop
cmpsb
add
xchg
xchg
enter
mov
and
out
in
test
in
shlb
xchg
mov
jg
in
jno
std
repnz
outsb
push
jb
int
fwait
sub
sti
pop
pop
dec
packsswb
iret
js
adc
cli
test
fnstcw
pushl
dec
sbb
fs
cmp
mov
jmp
adc
push
push
out
shl
out
mov
pop
inc
stos
dec
xor
pop
sbb
mov
fldt
std
test
fdivrl
and
mov
sub
add
mov
sbb
jne
xor
pushf
jp
sbb
lods
inc
subl
in
mov
aas
fcoml
mov
push
jo
int3
cmp
cmp
mov
mov
cmp
sub
lcall
sub
mov
sbb
mov
mov
mov
pop
outsb
clc
rorb
dec
mov
clc
add
lea
aad
mov
rclb
inc
add
push
jle
mov
pop
pop
pop
push
sbb
pop
inc
mov
and
or
icebp
or
fmul
test
das
xchg
cmp
cli
xchg
lcall
mov
mov
xor
and
mov
data16
into
fcmovu
cmc
shlb
cmp
inc
fldenv
in
idivb
je
inc
mov
push
xor
loopne
inc
addb
mov
cmpsl
mov
ljmp
imul
jge
sub
mov
mov
stc
cwtl
inc
pop
pop
out
sub
add
insl
pop
call
test
cmp
addr16
out
xor
mov
add
nop
mov
ja
mov
cmp
jno
add
pop
and
xor
sar
inc
aam
insl
xchg
xchg
sbb
lds
add
dec
push
es
stos
pop
adc
adc
inc
test
cwtl
cmc
repz
mov
scas
mov
or
std
mov
scas
fcomip
ret
enter
add
pop
dec
ds
insb
sub
jae
jg
repnz
ss
jnp
or
xor
int3
push
ljmp
mov
cmp
repz
mov
cltd
pop
mov
sub
mov
cmp
sbb
testb
ss
lret
dec
push
je
fiadds
xor
jae
xchg
int3
movsb
and
inc
sbbb
in
adc
xlat
icebp
stos
jl
outsb
mov
aaa
fs
in
sbb
inc
and
mov
fmul
inc
jecxz
mov
mov
fadd
ret
incl
inc
xchg
cmpb
dec
out
cmpsl
xorb
pop
les
cltd
xchg
lods
das
iret
push
xchg
cmp
push
dec
adc
sbb
and
mov
cmp
or
pushf
dec
in
jo
xor
inc
imul
inc
xor
sbb
lock
xchg
stos
setae
jae
mov
add
mov
andnps
cs
and
shlb
ret
or
dec
repz
mov
out
dec
jae
mov
data16
test
loop
push
jnp
jge
xor
xor
leave
fldt
fldcw
cmpsl
jae
jno
aam
bound
pop
addr16
aad
dec
add
leave
or
mov
iret
subb
mov
sbb
loope
je
add
enter
fwait
lods
cmp
inc
xchg
js
fs
fwait
sub
outsb
out
sahf
dec
adc
mov
mov
test
xchg
out
stos
sbb
inc
ja
into
xchg
rolb
clc
pop
les
push
aad
sti
addb
jb
mov
rclb
or
cmpsb
std
cmp
inc
ss
inc
daa
push
aaa
ret
lahf
cmp
jae
cmpsb
mov
xor
lret
push
push
mull
xchg
popf
jne
xor
pushf
xchg
mov
adc
sub
jnp
jl
sbb
dec
mov
push
pop
in
lds
clc
or
adc
cmp
hlt
sub
jp
sub
dec
dec
xchg
mov
mov
jnp,pt
add
xor
insb
pushf
jnp
inc
inc
adc
lret
cmp
negb
loopne
add
sbb
repnz
or
jo
test
and
sub
jns
fucomp
and
mov
ret
jne
loop
xorb
pop
lds
mov
shll
mov
mov
out
mov
fimull
sbb
mov
out
enter
and
outsl
call
xor
mov
faddl
cmp
adc
mov
mov
ret
stc
dec
bound
jle
push
in
ret
adcb
push
dec
hlt
pusha
xchg
inc
pusha
and
sahf
pop
cmpsl
push
xchg
xor
out
push
mov
jle
stos
add
psraw
jb
and
js
lahf
sub
push
fistps
cmpsb
icebp
mov
pop
inc
sub
jae
jae
pop
push
mov
push
mov
nop
inc
lcall
sbb
mov
ss
data16
cmp
movsb
sub
test
pop
loopne
xor
test
push
mov
jnp
dec
insl
cmp
mov
mov
sbb
and
adc
push
dec
xchg
fwait
dec
movsl
inc
lahf
cmp
hlt
movsb
push
jecxz
fnstenv
mov
inc
sbb
enter
inc
jae
sarb
and
fs
add
fwait
je
cmp
or
mov
out
stc
pop
pop
add
iret
push
fstpl
add
mov
enter
xchg
mov
jae
mov
movsb
bound
scas
scas
push
mov
adc
dec
in
div
notl
aad
in
mov
rorl
shl
test
dec
mov
jno
adc
mov
fisubrs
xchg
test
int
xchg
popf
frstor
aad
xchg
xchg
ficomps
jle
xor
add
mov
stc
sbb
xchg
cmp
sub
ret
sarb
fidivs
or
or
mov
mov
push
mov
mov
xchg
sbb
aaa
pop
shrl
popa
insb
rorl
cmc
adc
jmp
testb
mov
jl
xor
into
in
dec
jns
sub
jl
jle
fcomp
push
jbe
fwait
mov
fs
dec
inc
aas
push
je
lahf
in
imul
arpl
scas
mov
sbbb
pop
push
test
mov
cld
xchg
cmp
xchg
mov
in
jecxz
pop
mov
in
addr16
cmp
repz
aaa
xchg
rcr
std
cwtl
mov
jns
je
cmp
mov
dec
fstpt
and
mov
mov
jmp
js
mov
dec
popaw
out
fwait
sbb
and
xlat
ss
or
adc
jg
jg
jmp
sub
sbb
mov
dec
inc
pop
push
movsb
sub
mov
or
call
add
into
out
mov
mov
outsl
add
int3
add
test
imul
iret
popa
ja
int
dec
fidivrs
mov
xchg
jecxz
or
xor
repz
outsb
loope
sbb
shrl
fisttpll
push
mov
sbbb
out
stc
hlt
sbb
arpl
sbb
inc
sbb
xchg
popf
cmpsb
gs
jge
and
mov
inc
jne
push
push
sub
out
arpl
fadds
jns
push
aad
or
or
cmp
fnsave
and
lea
sahf
push
mov
fucomi
ss
adc
ret
xor
repz
jns
add
lods
mov
ljmp
sub
cmp
pop
mov
into
das
cmp
xchg
shrl
xchg
addb
push
mov
cwtl
out
scas
out
sbb
dec
rcl
xor
into
sar
or
or
test
rcrl
adc
pusha
push
pop
mov
test
dec
mov
lods
inc
sti
rclb
mov
fldt
mov
cwtl
sub
jg
sub
xchg
jecxz
push
leave
int
or
xor
dec
pushf
ret
or
andl
xchg
js
pop
fisubrl
mov
jg
das
add
and
cmp
cwtl
dec
xchg
mov
movsl
popf
mov
mov
sub
iret
mov
ret
in
fwait
jp
int3
jb
flds
out
xor
cmp
roll
jl
call
outsl
push
jbe
add
push
cmp
sub
cltd
mov
xor
jb
mov
or
stos
push
and
lcall
xchg
push
hlt
xchg
or
mov
cmp
push
test
test
adc
mov
xchg
or
jno
jmp
xor
mov
xchg
mov
mov
mov
pop
mov
stc
sbb
ficoml
jmp
bound
dec
jnp
and
inc
cmp
cmpsb
stc
ds
push
jne
pushf
pop
push
inc
jmp
test
mov
inc
cmc
mov
in
jl
subb
mov
push
cmp
sub
jo
lahf
mov
or
xchg
mov
add
pushl
icebp
cltd
aas
jge
les
and
or
adc
scas
loope
add
sub
addr16
jecxz
jno
push
mov
fisttpl
inc
jbe
mov
xchg
sub
outsl
inc
pop
xchg
xor
test
insl
insl
mov
sbb
lock
sbbl
and
mov
addr16
data16
pop
mov
jp
mov
inc
or
popa
sbb
xor
fstpl
jmp
gs
addr16
stos
mov
add
cmp
cltd
mov
dec
jmp
insb
mov
xor
scas
aaa
push
out
mov
into
stc
xor
aas
sti
push
and
push
out
push
lcall
or
pop
pop
mov
sub
inc
cmp
call
adc
cmp
fsubrp
rol
lds
add
mov
mov
leave
xlat
out
sub
lods
lret
sub
jmp
mov
push
aad
jge
jp
cmpsl
pop
lock
sub
push
lea
int3
arpl
imul
imul
mov
sub
dec
sub
sbb
add
insl
xchg
or
push
insl
jo
mov
cmp
and
mov
fnstenv
add
push
aaa
cmp
inc
jnp
jno
insl
stc
cmp
test
repnz
jnp
pusha
jbe
fistl
lahf
mov
je
aaa
lea
dec
enter
and
enter
push
fnstenv
pop
dec
dec
nop
sbb
push
adc
push
or
bound
or
pop
fwait
push
cwtl
mov
mov
cmp
ds
icebp
loop
xor
mull
fidivl
into
xchg
xor
xchg
iret
cmp
push
cwtl
je
jo
inc
fmull
loopne
jnp
loopne
out
and
mov
ljmp
mov
test
mov
imulb
rolb
sub
xchg
sbb
cmc
add
xchg
popf
cmc
add
xor
cmpsl
in
jecxz
adc
adcb
mov
sti
fstl
adc
inc
fistpl
leave
es
call
mov
xor
jo
sub
test
rcll
int
dec
push
dec
inc
jle
andb
jns
xchg
aad
cltd
push
cmpsl
dec
and
rclb
xor
fsubs
mov
lret
ds
leave
xor
mov
in
fisubl
rcrb
leave
rcrb
mov
add
fiadds
inc
jmp
fisttpl
add
jle
rol
push
push
dec
pop
ss
out
fnstenv
leave
push
cmp
xor
and
mov
jae
roll
ret
pop
shrb
mov
add
pop
int
in
into
div
jo
test
sbb
or
test
lahf
out
lahf
call
dec
dec
dec
icebp
mov
xor
push
and
outsl
stos
fldcw
adc
mov
sbb
movsl
xchg
mov
mov
and
inc
fldt
mov
shll
push
inc
fdiv
xchg
hlt
pusha
jp
rcll
shl
rcrl
lcall
mov
sub
adc
loopne
sar
mov
sbb
fisubl
imul
orb
push
out
sub
into
pop
out
mov
in
pop
adc
jns
sti
push
lret
inc
call
inc
je
inc
jns
shl
sbb
adc
stc
pop
ficoms
xchg
dec
dec
repz
ljmp
in
lcall
shlb
scas
filds
stos
movsb
adc
mov
lods
mov
pop
sub
pop
in
dec
dec
mov
cmp
test
fbstp
in
lahf
loopne
mov
stos
jo
aad
fyl2xp1
mov
out
jne
dec
mov
arpl
aaa
aam
push
dec
jge
xchg
and
xor
push
sbb
mov
push
push
xor
fucomi
pusha
sbb
repnz
cmp
mov
out
shrl
sub
sti
pusha
aaa
stc
sub
inc
dec
add
push
inc
stc
inc
nop
aas
rol
xchg
push
lock
mov
cwtl
loopne,pn
insl
sub
inc
lret
repnz
lock
cmp
pusha
mov
cs
cwtl
in
pop
mov
xchg
dec
js
outsl
shl
cmc
addr16
cwtl
mov
pop
in
sub
fs
bnd
cwtl
add
mov
add
fs
cmp
push
sbb
hlt
loop
mov
or
jns
push
out
mov
shr
decl
xor
cmc
mov
xor
push
xchg
xor
pop
jecxz
mov
add
imul
mov
enter
jno
jp
xor
out
sub
testl
pop
stos
repnz
jle
inc
and
pop
mov
scas
xlat
mov
xchg
jmp
lret
sub
xorl
adc
test
sarb
fldl
mov
ljmp
lcall
aad
mov
addr16
cltd
push
lock
mov
inc
cli
xor
push
insl
leave
add
out
sbb
cmpsl
lock
sub
repz
sub
add
mov
test
inc
cmp
ret
out
jecxz
fists
cmpsb
xchg
sbb
test
aas
cld
or
jl
pop
in
and
iret
push
stos
leave
std
push
repnz
sbb
xchg
mov
jge
sbb
inc
lods
adc
scas
mov
ret
cmp
aas
ljmp
push
pushf
adc
das
push
subl
es
stos
mov
into
mov
mov
push
in
pop
int3
dec
hlt
dec
add
add
or
pop
add
xchg
push
xor
xchg
jl
inc
gs
fistl
iret
es
jns
mov
aam
pop
jle
rorb
cli
mull
or
sti
pop
sub
pop
add
mov
les
lret
xchg
out
xor
pop
push
jo
scas
lret
lods
mov
and
lods
cs
enter
ficoml
out
test
push
cmp
adc
add
push
mov
jb
mov
filds
call
scas
add
das
cltd
inc
mov
movsb
and
push
fnsave
cmc
dec
ret
and
repz
add
push
jmp
xchg
mov
push
das
inc
test
dec
mov
inc
mov
outsl
clc
loopne
cmpsl
call
sbb
fisubl
or
cs
and
dec
lret
in
or
jo
xchg
mov
pop
inc
mov
in
lock
out
cltd
xchg
xlat
cwtl
imul
cwtl
adc
xchg
rcrb
dec
adc
mov
jne
dec
testl
insl
lock
in
es
imul
test
inc
push
outsl
jecxz
pop
sbb
pushf
add
jg
xchg
leave
jns
inc
or
cmp
mov
xor
inc
outsb
adc
push
or
sub
jno
jbe
sub
pop
mov
xor
jne
jb
jecxz
dec
cmp
push
pushf
iret
inc
out
jno
cmp
inc
popa
or
xor
fstps
sub
xchg
xchg
xor
lahf
xchg
insl
daa
aad
aad
cli
mov
mov
outsl
test
jb
jl
fiadds
dec
ret
pop
data16
jbe
lahf
dec
cltd
lea
adc
inc
sub
enter
push
or
icebp
inc
mov
test
lret
int3
mov
sbb
mov
loop
and
push
add
ret
ljmp
dec
in
add
mov
cmp
xorb
sub
pop
rorl
hlt
push
jge
out
mov
inc
icebp
cmpl
push
mov
or
imul
int3
sarb
mov
scas
and
sbb
je
xlat
pop
pop
add
loop
ljmp
int3
out
pop
js
loopne
jo
pop
data16
stos
fisttps
dec
leave
and
add
add
inc
pop
cmp
mov
xchg
xor
icebp
ja
jno
out
loope
or
dec
dec
push
add
les
add
or
sbb
icebp
cmp
ret
add
into
rolb
es
ja
mov
jp
pusha
movsb
adc
inc
xor
xchg
jae
xor
rorb
sti
in
xor
daa
lds
incb
add
xchg
adc
mov
xor
dec
and
cltd
lock
stc
push
shrl
test
jmp
xorl
call
shlb
adc
sar
pop
xor
shlb
int3
dec
stc
cmp
pop
rorb
je
jp
or
push
add
fwait
mov
or
sahf
cmp
or
mov
push
mov
sbb
xchg
les
mov
mov
mov
mov
stos
xor
stos
cld
stos
sarb
jb
inc
or
icebp
xchg
ficomps
aad
mov
mov
mov
aad
cmp
adc
cmp
repz
stos
sub
insb
mov
out
orb
ret
xchg
hlt
sub
das
outsb
mov
cltd
movsl
pop
push
mov
sub
rcr
push
outsl
fstpl
or
mov
movsl
arpl
xchg
movsb
and
dec
pop
inc
add
jns
and
out
out
sub
dec
jge
xchg
inc
push
in
not
iret
fadds
xchg
fscale
jno
add
les
lret
leave
xor
dec
arpl
popf
adc
sbb
push
out
jno
sub
mov
inc
cld
sub
jns
or
addr16
adc
clc
sub
test
xchg
jg
imul
movsl
out
inc
aad
loopne
jae
in
add
shll
push
lea
xchg
sbb
xorl
aas
out
dec
es
mov
popa
push
adc
jle
daa
mov
push
xchg
xchg
pop
push
fdivrs
jmp
sub
push
pusha
loope,pn
cmp
ret
inc
fstpl
adc
pop
pop
dec
loopne
cmp
dec
lock
jb
dec
in
incb
lret
inc
in
sbb
cmp
mov
inc
insb
or
fwait
loope
or
stos
insl
push
mov
cmp
sbb
cmp
jle
push
imul
imul
xchg
pushf
dec
pop
dec
andl
xor
loopne
mov
ficompl
arpl
add
es
pushf
xchg
xchg
jno
clc
push
sti
cmp
aaa
dec
lret
dec
dec
sub
mov
add
aaa
andb
jp
movsb
cli
subb
xchg
push
xor
inc
xchg
ficoml
jmp
push
negl
mov
jmp
mov
scas
jmp
mov
push
jne
js
ljmp
aaa
adc
movsb
inc
pushf
mov
push
xor
int
mov
insl
fwait
xchg
aam
adc
fstl
mov
push
dec
loope
aam
xchg
dec
adc
lds
popf
mov
push
sbb
jl
mov
aam
push
jae
cld
sub
icebp
xor
inc
test
xchg
or
lds
jbe
cltd
rclb
stos
iret
loope
jp
mov
adc
dec
lcall
out
jp
sarb
dec
push
dec
fwait
or
or
fistpl
push
ss
sbbl
xchg
ds
test
xor
jbe
out
jb
cmpsb
mov
out
mov
mov
sub
xchg
sub
mov
je
shl
add
xchg
cmp
mov
or
add
cmp
adc
stos
sbb
stos
mov
mov
xor
mov
lods
xor
sarl
dec
inc
mov
and
int
pop
lcall
xchg
jns
inc
mov
sbb
out
int3
jb
xchg
test
cs
sub
mov
test
cmpsb
shll
cltd
fnstsw
rorb
push
add
fsubl
aaa
inc
repz
outsb
popw
push
stos
enter
sub
fildll
jo
lret
or
mov
mov
mov
popf
cli
clc
in
fldlg2
xor
loop
iret
rol
adc
mov
arpl
shl
mov
push
xor
adc
pop
pop
es
in
mov
and
sbb
shll
jp
jp
dec
pop
pop
lock
push
mov
aam
shl
nop
push
movsl
jp
jno
mov
out
and
mov
sub
inc
jl
or
sub
xor
and
nop
lahf
sbb
in
jg
adc
js
out
mov
out
addr16
dec
fdiv
adc
jecxz
mov
fmuls
pop
mov
movsl
aas
and
shrb
je
and
and
pop
xor
mov
xor
inc
xchg
mov
and
cmpl
lcall
and
jo
sbb
fs
push
dec
xlat
loop
lock
sahf
ss
iret
es
push
xchg
jp
mov
in
pop
fstpl
fbld
mov
add
sub
dec
xchg
arpl
xchg
stos
int3
shlb
dec
and
inc
cli
push
popa
das
mov
and
fdiv
std
add
and
rep
pcmpgtb
sub
pop
pop
fwait
pop
decb
mov
pop
sbb
pop
cmp
sbbb
and
lock
roll
stc
test
or
popa
jmp
sub
mov
jae
dec
cmp
inc
push
repz
cmp
jns
cmp
rcl
mov
cs
sub
js
decl
jle
jne
orb
jmp
sbb
xorb
inc
sbb
cmp
mov
inc
sub
lea
add
addr16
jnp
mov
in
mov
adc
push
fsts
sub
aad
mov
repz
dec
sbb
std
imul
xchg
sbb
and
jne
fldenv
int
out
popa
ret
and
lock
aas
pop
cmp
pop
popa
icebp
xor
pushf
add
push
cmpb
add
cmp
mov
fmul
xor
push
dec
sarb
sbb
in
outsl
xchg
sbb
cltd
out
sbb
jo
dec
mov
lret
js
subb
jmp
cs
pop
test
repnz
iret
pop
push
lret
out
aam
lock
ljmp
imul
out
mov
lahf
xlat
inc
rclb
mov
cli
clc
sbb
je
mov
pop
adc
mov
xchg
repz
sarl
popa
cmpsl
or
gs
xchg
sub
pop
jb
ret
ja
pop
icebp
clc
pusha
inc
sahf
aaa
clc
mov
in
into
orb
push
out
stos
pop
das
jno
sbbb
dec
shr
jae
pushf
flds
mov
and
rcrb
adc
inc
icebp
mov
rcrl
add
popa
mov
dec
add
push
xchg
addr16
enter
ss
les
push
shlb
xchg
dec
add
sub
rolb
pop
cli
lcall
mov
mov
jno
mov
daa
push
push
inc
push
aam
fists
and
xchg
clc
lods
lock
inc
fcompl
dec
ljmp
es
adc
in
sub
and
jne
movsl
ljmp
xchg
jne
movsb
faddl
push
push
xchg
pop
icebp
xor
mov
push
fiadds
popa
xor
fcoms
lock
and
mov
and
fisttpl
pop
mov
clc
int
arpl
loope
and
inc
sub
fldenv
ss
and
inc
and
aas
add
adc
jb
xchg
inc
push
xor
jno
fldt
stc
add
sub
mov
popa
pusha
sbb
in
cmp
faddl
cmpsl
aaa
sbbb
dec
loopne
mov
stos
inc
test
sar
fcmove
and
rorb
ds
js
mov
je
cmp
popa
cmp
inc
xchg
rcr
repz
push
mov
sbb
mull
or
sub
pop
add
ss
xor
fwait
sub
call
and
dec
and
addr16
push
jmp
das
scas
rcr
inc
pop
or
mov
cmp
addr16
cmp
xchg
insb
xchg
or
popf
jp
mov
adc
fnstsw
insl
xor
cmc
cmp
pop
mov
outsb
or
sub
fnsave
cmc
in
or
jbe
push
dec
dec
and
sbb
das
aad
insb
test
fcoms
and
iret
in
imul
leave
xorb
jnp
int
pop
ds
or
movb
cmpsl
bound
imul
lock
sbb
add
xchg
imul
popf
scas
sahf
cmp
flds
mov
inc
mov
into
out
dec
add
aas
out
outsb
xchg
mov
ret
loop
ljmp
dec
sub
push
adc
test
cmpsl
add
cltd
dec
mov
call
cmp
dec
or
push
xor
push
sub
pop
scas
push
sub
out
ss
fdivr
into
dec
jle
sub
mov
movsb
cmpb
repz
mov
add
mov
fbld
insb
rcll
leave
xchg
aas
push
cmp
notl
mov
loope
sbb
mov
dec
lret
cs
and
insl
lods
int
mov
dec
fistl
xlat
mov
sbb
popf
sub
mov
pop
test
testb
jecxz
xchg
shlb
adc
lcall
xlat
repz
lods
inc
xor
test
out
nop
push
pop
fisttpll
adc
push
add
fisttpl
pop
mov
aam
xor
aaa
adc
ffreep
iret
pop
and
adc
in
inc
jne
xor
pop
insb
pop
mov
jnp
sti
sbb
sbb
mov
cli
mov
js
ds
outsb
lods
adcb
xor
pop
stos
hlt
sub
sbb
jge
xlat
loop
pop
lds
fstpl
push
mov
pop
add
push
sub
jg
mov
jo
repnz
xor
jmp
decb
fmull
lds
fwait
dec
mov
jne
jle
mov
iret
dec
xlat
sbb
push
jne
jns
inc
xor
push
lahf
iret
je
mov
dec
push
test
sti
sbb
mov
xlat
sbb
inc
sbb
mov
xchg
js
lods
jmp
fdiv
pop
xchg
inc
pop
fnstenv
or
cmp
daa
out
jmp
sub
gs
adc
bound
clc
pop
push
sub
mulb
cli
and
mov
push
dec
push
jae
adc
sub
pop
fs
in
mov
sbb
or
stc
adc
inc
xor
jb
shr
cs
push
jbe
mov
lret
test
xchg
and
les
xchg
adc
inc
sbb
stc
mov
push
xchg
sbb
fidivrs
or
xchg
popa
add
xchg
push
sub
loopne
scas
fiaddl
mov
pusha
lret
dec
movsb
pop
icebp
test
adc
jnp
push
pop
fidivrl
push
stc
push
sarl
popf
je
les
inc
ljmp
ss
inc
lock
in
xchg
inc
inc
scas
dec
jne
sbb
mov
or
scas
pop
cmp
xchg
mov
ret
in
mov
xchg
lret
repz
int
lcall
into
dec
pop
push
and
push
ficoms
jmp
cmpsb
repz
mov
mov
xor
clc
mov
rcrl
adc
add
lds
je
add
push
sub
fnstenv
pop
adc
add
push
outsb
push
xchg
cmc
hlt
lods
add
int
mov
sub
add
std
push
dec
jbe
xchg
in
out
mov
jo
nop
out
pusha
or
mov
fcomps
pop
xor
outsl
adc
mov
loop
pusha
jle
push
idivb
sti
scas
fstpl
xor
and
repnz
out
and
lods
push
stc
and
adc
je
mov
mov
push
mov
mov
dec
push
xchg
lods
pushf
popf
or
mov
xlat
je
lret
pop
xchg
pop
adc
pop
pop
xor
testl
add
pop
stos
loopne
push
cmp
inc
cltd
jne
stc
lahf
outsb
push
mulb
push
shlb
inc
adc
shrb
nop
mov
add
mov
lea
imul
sub
adc
insl
jno
mov
in
adc
push
mov
loope
xor
push
xor
or
cmp
pop
fldcw
out
mov
mov
mov
mov
dec
pushf
repnz
push
adc
mov
ret
push
pop
fadds
shll
mov
or
jg
pop
jle
xchg
popf
ret
push
push
mov
out
call
iret
xchg
dec
nop
and
or
aam
adc
repz
nop
xchg
or
aas
xchg
mov
add
fsts
pop
push
rcr
movsl
dec
aam
add
ret
stos
test
bound
cmp
test
jne
pop
inc
and
test
inc
push
popf
dec
add
test
dec
jmp
jno
dec
loop
add
inc
mov
pop
fst
inc
mov
and
rcrl
jne
gs
icebp
mov
adc
aam
push
cwtl
jge
test
mov
dec
fstl
ret
cmp
fwait
xchg
add
fmull
pusha
lock
push
cmc
pusha
mull
in
into
fmuls
sbb
adc
cmp
sti
lods
inc
adc
or
je
jne
js
or
mov
cwtl
dec
mov
nop
mov
sub
xchg
iret
xchg
int3
add
jle
mov
fs
bound
rclb
je
pop
mov
inc
pusha
pop
shl
push
and
adc
daa
inc
adc
scas
sub
xor
lea
sbb
in
and
sbbl
mov
pop
arpl
clc
insl
push
lds
cmp
or
add
repz
out
test
jo
xor
subb
fsubrl
test
stos
cli
or
dec
lock
inc
stos
sub
xorl
outsl
push
imul
insl
dec
repz
or
aas
sbb
pop
fstl
pushf
or
adc
or
mov
lret
adc
push
out
aas
jne
add
sahf
pop
sti
adc
jae
sbb
lret
sbb
outsl
and
js
fwait
les
sahf
ss
mov
xchg
insb
inc
js
test
fwait
adcl
imul
cwtl
or
jne
popa
jl
lds
jl
out
mov
sub
and
xchg
int
xor
dec
jl
imul
ss
maskmovq
imull
outsb
add
ret
mov
or
lds
mov
inc
test
hlt
fwait
lds
xchg
shlb
pop
aas
in
jg
mov
fucomip
pushf
sar
movsb
clc
push
push
cmp
xchg
mov
movsb
cmpsb
out
sbb
rcrl
das
cmp
sub
call
mov
xchg
push
fld1
mov
bound
enter
negl
loop
imull
outsl
lods
cmp
popa
jno
mov
mov
xlat
inc
jbe
pop
cmp
jp
insl
cmp
xor
mov
push
les
popa
clc
gs
push
and
pop
and
cmp
icebp
or
pop
xchg
adc
mov
sub
pop
mov
in
xchg
mov
mov
sub
pop
or
rcr
adc
jne
or
mov
add
mov
mov
loopne
stc
push
inc
jg
mov
pop
ficomps
clc
jmp
cltd
inc
push
pop
mov
stc
mov
int
mov
xchg
mov
jmp
jbe
dec
outsl
xlat
mov
fnstenv
sbb
push
pop
mov
mov
les
xor
pop
mov
aaa
adcl
in
or
clc
jge
js
lcall
stos
xlat
inc
sub
and
popf
icebp
fimull
inc
pop
xchg
jecxz
sub
pop
je
leave
add
lock
mov
mov
xor
out
pop
cli
xor
push
mov
push
add
testb
in
dec
jge
daa
in
data16
pop
sub
jo
mov
push
xorl
dec
fdivrs
sti
rcrl
xacquire
daa
aad
and
jge
pusha
insl
and
sbb
popa
call
jl
cmp
jge
das
dec
and
xor
out
aas
mov
adc
pop
out
clc
cmp
mov
stos
jge
outsl
mov
jns
movsl
mov
mov
mov
cmp
or
js
mov
out
mov
xorl
and
les
jbe
cmp
sar
stc
push
dec
mov
adc
fdivrp
lahf
loopne
jnp
add
addl
push
inc
sub
imul
stos
fsubl
hlt
in
std
outsb
js
enter
mov
out
stc
ss
pop
cmp
out
xor
sub
push
pusha
mov
adc
decl
inc
mov
jb
int
ret
dec
sub
cmp
and
dec
fdivl
icebp
adc
or
fbld
out
xchg
sub
mov
lret
xchg
sar
mov
insb
sub
cmp
sbb
cmpsb
addr16
xor
jl
add
mov
outsb
ljmp
jbe
loopne
and
push
jecxz
stos
repnz
imul
add
shll
or
dec
pushf
sarb
jnp
or
sub
pop
pop
mov
sub
jmp
lahf
les
mov
adc
add
fwait
testb
dec
ds
hlt
or
or
cmpsb
faddp
cmp
in
and
inc
out
mov
push
push
mov
lret
sub
mov
sbb
push
aaa
test
cli
movsl
outsl
cli
add
sub
xchg
mov
xchg
out
int
inc
sahf
call
adc
inc
jp
out
jno
sti
mov
roll
cmp
stos
lahf
push
dec
sti
mov
pusha
lea
sbb
lock
or
mov
in
inc
ret
adc
jb
mov
and
or
dec
mov
xorb
sub
push
scas
out
sbb
or
jmp
ja
insl
xor
gs
scas
cmpsl
push
sbb
lret
lods
inc
movsl
sub
lahf
xor
aad
inc
and
and
mov
pop
pop
mov
xlat
xorl
lret
push
out
inc
sub
scas
ja
jbe
mov
push
sbb
sarb
push
sbb
sub
mov
mov
pop
movsl
jne
pop
in
adc
aas
and
mov
mov
jmp
mov
xor
out
sub
outsl
enter
popa
cmpsl
or
loop
mov
inc
or
push
jnp
out
push
fs
jnp
cmp
pop
pushf
in
pop
push
in
data16
mov
dec
mov
mov
jno
outsb
and
cmp
mov
sahf
jno
pop
jg
push
mov
jge
sbb
addr16
mov
cli
lods
mov
jecxz
pop
mov
push
fistl
pop
or
mov
mov
fwait
cltd
fdivrp
ja
enter
jns
dec
enter
sub
arpl
enter
out
sbb
cmpb
aam
outsb
fst
mov
sub
dec
pusha
mov
sbb
mov
pop
or
jae
fistps
stos
cs
cmc
mov
bnd
xor
iret
pop
or
inc
mov
fistps
push
jle
mov
ja
stos
shlb
call
inc
mov
ss
movl
mov
cmp
movzwl
ljmpw
jbe
call
stc
mov
mov
iret
sbb
fstpt
mov
mov
fs
mov
xchg
int
add
outsl
mov
scas
and
cmpb
std
into
or
jmp
push
negl
leave
in
mov
hlt
dec
pop
or
les
hlt
mov
push
xor
inc
adc
mov
inc
cmp
ss
test
pop
fidivs
push
pop
movsb
mov
cmp
xchg
lds
sbb
dec
bound
test
dec
orb
lret
mov
sub
xor
lods
and
mov
push
mov
cli
mov
pop
push
dec
or
lods
pop
dec
dec
sti
mov
adc
sbb
scas
js
cmp
pop
shl
sub
mov
sti
mov
cmp
and
dec
and
jne
rol
mov
nop
mov
mov
lock
adc
xor
jbe
arpl
adc
fsubrs
jno
and
lods
fmuls
aam
xchg
repz
xchg
push
push
or
out
and
add
cmp
int
jnp
sbb
in
iret
xchg
clc
mov
mov
out
out
push
adc
adc
ret
xchg
notl
js
fdivs
push
xchg
xor
arpl
dec
xor
outsb
int
addb
sbbl
aad
stos
pop
and
mov
rcrb
popf
stos
mov
ss
xlat
aaa
jns
imul
jae
out
adc
out
mov
out
xchg
mov
pusha
adc
rorb
das
ret
xchg
mov
test
add
shll
out
cmpsl
lcall
pop
std
dec
mov
shrl
clc
pop
and
jbe
in
mov
lea
orb
test
js
cmpsl
jnp
xchg
cmp
add
and
cmp
xchg
bound
push
xchg
lea
lods
notb
and
addr16
nop
dec
push
push
test
sub
lock
xor
cli
xchg
mov
orb
or
ja
mov
aas
lahf
push
inc
sbb
ljmp
movsl
dec
xchg
call
cmp
dec
andb
loopne
jecxz
fcomp
dec
mov
notb
in
xor
sbb
negb
jp
jb
and
xchg
cmp
dec
add
and
mov
pop
aaa
or
out
xor
cmc
jae
lock
cmp
mul
jns
or
movsl
xchg
cmp
xor
ljmp
arpl
xlat
pop
push
dec
sub
sbb
sub
jno
xor
cltd
inc
rclb
sahf
xchg
shr
sub
hlt
jo
mov
fiadds
notb
mov
repz
orb
push
mov
adc
push
js
sti
inc
push
pop
test
gs
adc
dec
adc
xor
es
mov
pop
sub
cld
mov
fcoms
pop
xchg
repnz
outsb
cmp
sub
movsl
out
lea
rorb
add
jp
scas
mov
enter
adc
out
jmp
and
adc
int
jns
out
popl
mov
inc
mov
jnp
jmp
xchg
negb
insl
insb
adc
orb
push
mov
not
xor
pop
fwait
dec
mov
or
jbe
leave
xchg
notl
xchg
fsubl
sub
sub
xchg
es
in
subl
inc
mov
std
sbb
push
pusha
xchg
jnp
adc
jne
cltd
enter
xchg
imul
ret
dec
es
test
xchg
sub
adcl
cmp
popf
icebp
or
xchg
mov
test
jns
adc
imul
push
mov
test
or
push
adc
outsl
fists
push
loope
repz
into
dec
fnstenv
cwtl
jge
sbb
push
and
ja
mov
xchg
ljmp
jp
shlb
sub
or
mov
imul
popf
rorl
or
push
dec
jl
movsb
sbbb
pusha
loop
lds
fnstsw
fwait
jb
loopne
fmuls
lods
std
jmp
jp
xor
jo
fmull
leave
into
fistpll
xchg
jecxz
out
jecxz
push
adc
ficoms
roll
icebp
clc
xchg
dec
rclb
hlt
test
test
inc
dec
sbb
mov
loope
jp
loope
and
cltd
fisubrs
sub
mov
xchg
or
push
icebp
stos
jle
sbb
sbb
push
jmp
rcr
jle
sub
dec
cmc
cmpsl
inc
test
std
inc
fisubrs
mov
mov
scas
fs
inc
negb
out
pop
out
adc
in
jnp
jo
out
inc
jo
les
scas
addb
jb
or
xor
lods
fdivrs
xchg
js
mov
or
jb
and
inc
fmul
dec
out
jmp
adc
xor
sub
mov
addb
mov
aam
fcoml
ss
or
out
dec
stos
dec
push
std
jg
or
sti
lods
orb
ret
shlb
push
and
lret
insb
xchg
sub
shrl
xchg
push
pop
pop
orb
aad
jge
rorb
and
js
lock
push
cmp
pop
sbb
sbb
pop
inc
cld
lahf
loop
js
mov
xchg
inc
inc
cmovnp
adc
pushf
and
rolb
jmp
imul
das
jge
divps
pop
pop
sahf
mov
xor
imul
xor
mov
xlat
add
idivb
add
push
adc
or
xchg
dec
pop
fcompl
leave
adc
nop
aas
arpl
rcrl
test
sub
hlt
xor
xchg
push
push
push
lahf
or
fldcw
cmp
fxch
out
mov
lock
dec
sub
enter
hlt
xor
in
sub
xlat
cvtps2pi
in
div
mov
mov
xor
cmp
gs
mov
and
xchg
fwait
jge
sub
mov
lods
sub
inc
mov
aaa
call
adc
fstps
filds
inc
imul
xchg
test
push
lods
addr16
rorb
lcall
mov
sub
mov
inc
or
jle
sarl
lods
push
dec
lock
fldcw
xor
ret
scas
add
pushf
push
loopne
ds
jg
xlat
adc
stos
adc
popf
fidivl
insb
dec
adc
lcall
xchg
aas
call
mov
xchg
lea
jg
mov
adc
int
or
mov
mov
xchg
aad
xor
scas
aas
push
or
adc
das
inc
sub
add
orl
jae
cli
adc
mov
inc
dec
mov
pop
jle
push
insl
fst
cmp
bound
dec
iret
aam
in
nop
jecxz
push
jbe
out
clc
pusha
xlat
sub
mov
sahf
push
inc
out
or
stos
or
push
lcall
mov
lahf
pop
pop
inc
cmpsl
xchg
xlat
movsb
shl
pfrcp
cmpsl
jo
popa
cmp
int3
repnz
mov
cli
mov
and
jmp
fisubs
xor
ja
jo
jecxz
mov
jbe
lods
rep
in
dec
int3
mov
mov
dec
push
add
sahf
fsts
sub
hlt
mov
sbbl
push
mov
les
jge
or
call
mov
es
and
sti
rol
pop
jo
or
xchg
xchg
out
scas
int3
or
ficoml
jg
pop
std
push
xorl
in
jge
lcall
pop
inc
add
cmpsl
push
sbb
sub
dec
loop
testl
mov
xor
sbb
adc
fcoml
aaa
sti
cld
andb
jb
cmovge
aam
mov
repz
sub
jg
jmp
sbb
scas
test
xchg
push
xor
es
dec
rorb
push
bound
aas
testb
andb
mov
shlb
mov
out
mov
sub
enter
outsb
mov
push
imull
adc
jg
in
dec
inc
ja
divl
lods
sub
aaa
or
push
psrlw
inc
out
loopne
bound
mov
sbb
mov
jmp
pushf
or
inc
dec
push
fistl
out
sbb
xchg
dec
lret
aam
iret
aaa
xor
sub
clc
arpl
mov
inc
je
lahf
outsl
ja
jmp
sbb
imul
mov
cmp
out
arpl
inc
imul
pop
incb
xchg
push
jp
jnp
sbb
pop
testb
sbb
in
fbstp
test
fsubrs
lods
negl
das
xchg
jo
mulb
xor
inc
mov
pop
mov
test
stos
push
cmp
pop
inc
sbb
or
cs
rolb
arpl
dec
loope
sbb
adc
sub
out
cltd
jae
mov
sub
inc
mov
mov
xchg
sbb
adc
out
pop
nop
outsl
sub
cmpb
js
pop
aaa
out
fidivl
sub
les
test
adc
dec
pop
out
in
xor
add
push
repz
sti
ficomps
ss
ja
fsubl
sbb
fldenv
and
in
fisttpl
leave
fcmovne
push
cmpsb
add
movsl
pop
rcrl
arpl
outsl
stos
dec
or
notb
or
loopne
cmc
aaa
stos
std
push
bound
bound
jmp
mov
imul
pop
push
ret
movsl
cltd
call
popf
push
mov
and
pop
sub
enter
pop
mov
testl
pusha
sahf
push
stc
pop
dec
mov
ret
push
aaa
and
and
push
inc
insb
cmp
push
or
mov
lahf
xchg
mov
enter
cmpsl
cmp
stc
sub
inc
add
dec
data16
in
adc
lock
int
loopne
pop
push
fwait
xor
dec
bnd
mov
push
mov
pop
adc
push
in
sti
push
js
jae
jge
mov
cltd
aaa
ja
scas
and
sbb
shrl
out
sub
cli
ret
leave
fs
in
mov
jge
mov
dec
outsl
packssdw
outsb
mov
cli
jnp
in
lods
mov
dec
outsb
mov
ljmp
aas
sub
sbb
or
or
xchg
xor
push
mov
int
iret
lock
aad
iret
test
xchg
push
cmp
push
xor
and
lods
cmp
cmpsb
stos
adc
andb
repnz
ljmp
in
nop
jae
bound
ficoms
push
or
add
or
ror
lds
dec
std
cmp
std
push
jae
daa
testb
mov
inc
nop
dec
outsl
test
sbb
fbstp
fmul
jno
cwtl
ja
push
push
leave
in
fimuls
leave
out
adc
inc
mov
mov
dec
inc
in
outsl
es
fld
lods
loop
dec
xchg
test
pusha
cmp
mov
xchg
cmp
dec
pop
stc
or
pop
and
add
adc
or
jno
xor
test
mov
stos
ss
inc
sub
jle
idivb
addb
push
or
cs
mov
aaa
mov
xor
mov
and
adc
and
jno
and
hlt
mov
jo
xchg
adc
push
sti
pop
dec
mov
ja
inc
jp
and
loope
addr16
fisubl
adc
lret
outsl
add
testl
pushf
cmp
lcall
lret
pop
out
dec
add
lods
cmpsb
mov
pop
adc
sahf
movsl
mov
lock
push
cltd
in
add
adc
mov
add
push
mov
movsl
addr16
lods
xchg
insb
out
sub
fbld
fdivl
lret
sbb
add
xor
sub
xor
sub
mov
xchg
jge
sahf
out
cltd
mov
add
mov
inc
mov
mov
aam
sbb
inc
push
lods
mov
push
cld
adc
imul
ret
push
std
cwtl
sbb
scas
xor
cmpsb
jp
fbstp
dec
mov
xor
cltd
mov
mov
and
cltd
mov
cwtl
subl
xchg
xchg
inc
mov
sbb
push
adc
jns
subl
mov
cmp
add
sub
mov
pop
sbb
and
mov
mov
sti
mov
mov
test
inc
out
js
mov
ljmp
fsts
call
jnp
xchg
xorb
jae
inc
int3
cwtl
adc
xlat
push
stos
cmp
iret
adc
dec
inc
fcomps
mov
pop
fs
fwait
or
arpl
lahf
inc
jo
pop
push
jb
std
ljmp
dec
push
icebp
push
iret
das
dec
xlat
xchg
xor
push
jecxz
enter
test
fcompl
repnz
push
push
jnp
aas
frstor
xchg
mov
hlt
sbb
sbb
pop
pop
add
mov
shll
and
and
mov
fiadds
rcr
xor
jl
lcall
and
adc
pop
test
xchg
push
mov
inc
roll
dec
sub
pop
sub
mov
inc
xchg
pop
cmpsl
mov
mov
addr16
mov
in
and
pop
test
into
mov
ja
lret
ljmp
stos
stc
sarl
xor
fdivl
out
hlt
dec
jne
fisubrl
add
cwtl
inc
hlt
fstl
je
xchg
out
aaa
and
mov
push
mov
adc
adc
sbb
mov
mov
in
aam
fbstp
dec
xor
dec
cmp
gs
popa
lret
sbbb
test
pushf
xlat
jns
sbb
sahf
push
lret
add
cli
das
push
xchg
sub
xorb
mov
adc
and
ret
adc
adc
sbb
rolb
test
push
add
aad
lahf
jns
or
mov
aam
loopne
push
cmp
js
dec
int3
jae
sub
xchg
pop
sbb
imul
fisubrs
add
lock
push
jle
xor
mov
fnsave
adcl
fidivrl
test
mov
push
mov
fldenv
xlat
push
and
cmp
push
lods
insb
leave
jno
mov
xchg
pusha
dec
or
sub
into
xchg
idivl
cld
fldenv
adc
sub
fwait
jl
xor
out
in
mov
rcrl
popf
xchg
xor
dec
cs
xchg
cmp
inc
and
jp
inc
mov
mov
pop
adc
scas
repz
call
mov
lret
jae
mov
jecxz
pop
sarb
xchg
adc
mov
dec
sbb
mov
ficomps
cs
enter
add
xchg
adcl
scas
push
jnp
inc
lret
jo
lcall
mov
mov
in
scas
lret
aaa
xchg
loope
or
adc
aam
sub
jecxz
jnp
mov
faddl
push
and
mov
pop
gs
rcr
mov
cmp
dec
sti
call
test
inc
shll
pop
push
popf
lcall
fisttps
in
xchg
int3
mov
mov
add
loopne
push
sub
cwtl
repnz
push
push
adc
sbb
add
push
mov
bound
orb
mov
int3
adcl
scas
inc
fldenv
mov
inc
nop
sahf
or
sarl
dec
sbb
aaa
pop
mov
rcll
mov
inc
or
jae
jle
push
lret
out
jge
daa
mov
js
jne
pop
jecxz
test
pop
dec
cmp
repz
shll
sub
pop
es
mov
mov
jmp
movsb
call
inc
rolb
add
test
add
push
pop
imul
mov
add
inc
mov
idiv
movsb
test
out
cmpb
push
inc
fwait
out
in
scas
scas
jmp
pop
mov
ljmp
decl
ja
gs
adc
adc
pop
xchg
lods
xchg
xor
jnp
in
dec
and
pop
subb
sar
adc
pop
cli
fldenv
in
jecxz
aas
pop
scas
cli
arpl
sbb
cmp
xchg
decl
scas
ret
and
inc
mov
test
push
clc
push
movsl
sbb
test
test
lret
adc
in
mov
testl
xchg
loop
jnp
fnsetpm(287
jecxz
pop
dec
jmp
das
jae
aad
xor
adc
and
mov
inc
xor
add
sti
imul
mov
gs
or
or
or
ja
mov
imul
insl
pusha
clc
cs
loopne
clc
pop
mov
mov
stos
fsubs
int3
lods
push
sub
setnp
xchg
mov
jle
sub
push
sub
fsubs
jne
xor
mov
cmp
xchg
daa
push
mov
sbbl
in
test
in
out
mov
into
imul
jnp
adc
nop
leave
les
movb
sub
adc
cld
xchg
push
and
dec
cmp
cltd
fs
push
push
test
sub
inc
mov
cmp
jns
scas
cmp
sub
cmpsl
in
pop
ja
es
es
mov
push
adc
mov
push
mov
jno
loopne
pop
sbb
insl
out
dec
fisubrl
mov
push
loop
ret
mov
xchg
adc
loope
sbb
cmpsl
xchg
shlb
daa
sub
shrb
dec
cmpb
repnz
mov
div
dec
loopne
imul
inc
in
push
fld
sub
or
jl
push
shrb
xchg
imul
sub
or
cwtl
leave
jge
mov
or
int3
int
pusha
sbb
inc
jo
outsb
fsubl
jne
leave
rcr
adc
stc
sub
jno
movsl
test
dec
jge
sub
pop
push
jne
cmc
ret
xor
sub
lcall
int3
xchg
aam
cmpsl
cltd
jns
ret
adc
mov
faddl
adc
add
ret
div
sbb
mov
lret
adc
fimull
xchg
sti
push
icebp
in
and
jnp
pop
xchg
popf
xor
movsl
and
and
dec
adc
push
cltd
mov
sbb
jle
push
dec
cwtl
lahf
lret
push
std
jge
jle
ljmp
cmp
movsb
adc
push
dec
jns
mov
sub
inc
ss
testb
or
mov
in
and
dec
aam
push
dec
xor
adc
sti
jg
pusha
cmp
cmp
pop
mov
add
fxch
sbb
and
add
stc
adc
push
test
aas
movsb
xchg
pop
lahf
push
mov
pop
popa
inc
ret
add
insb
sti
push
sub
lcall
xchg
mov
aas
xor
stc
push
cs
les
push
cmpsl
inc
insl
cli
mov
in
mov
xor
mov
bound
or
cmp
popf
je
test
and
dec
xchg
sbb
jbe
push
or
sahf
rcrb
and
pop
jb
and
fwait
mov
xorl
mov
inc
loopne
or
sbb
add
fcomps
or
lock
outsb
cwtl
in
sub
out
adc
and
fdiv
inc
push
imul
cmp
stos
sbb
nop
shr
mov
adc
mulps
mov
adc
mov
insl
insl
jnp
jb
mov
inc
shrb
jecxz
pop
call
rclb
out
push
ljmp
or
in
sbb
pop
mov
mov
popa
mov
inc
pop
shll
and
push
and
xorb
adc
fcomp
fisubrs
and
loop
dec
adc
dec
pop
adc
fcomp
aas
xor
fs
mov
in
cwtl
fsin
ljmp
ss
cmp
loopne
jbe
in
out
cmpl
cmp
clc
gs
jge
faddp
mov
cmp
or
add
push
pop
je
ja
cmpsb
mov
mov
and
inc
mov
cwtl
mov
and
push
popf
add
fadds
adc
sbb
in
icebp
jp
bswap
or
xor
clc
or
cmp
out
sub
int
insb
sub
jns
mov
pusha
imul
les
mov
nop
adc
clc
push
hlt
jo
js
xchg
xchg
iret
cwtl
ds
mov
shl
scas
aam
test
inc
mov
xchg
test
imul
iret
jecxz
pop
or
xchg
nop
push
js
loope
adc
pop
mov
xchg
xchg
out
mov
fcmovnbe
in
aaa
push
sub
ds
xchg
leave
in
push
mov
pop
loop
push
lods
xor
int3
popf
lret
cmp
sbb
cltd
lret
out
sbbb
or
stos
mulb
loop
fiadds
dec
lods
clc
aad
fcomps
stc
and
adcl
mov
lock
jecxz
es
and
sbb
pusha
data16
push
add
add
and
xorb
fisttps
dec
imull
dec
js
stc
pop
pop
roll
push
std
or
push
stos
jecxz
add
leave
mov
inc
jge
ljmp
lret
xchg
xor
add
fwait
rcl
loopne
into
xor
push
fmulp
test
out
mov
jl
jl
out
movsl
clc
ljmp
pop
mov
xor
xchg
lahf
cmp
pop
rdpmc
cmp
xchg
pop
jno
mov
inc
aad
inc
into
cmp
out
popa
pushf
loop
dec
dec
pop
loop
mov
mov
out
aaa
pusha
inc
mov
lods
push
pop
movsl
mov
in
mov
jne
pop
mov
pop
mov
xor
mov
mov
outsb
mov
xor
shl
dec
in
push
aam
xchg
jmp
mov
adc
mov
in
add
ljmp
and
bnd
insl
mov
pushf
aam
mov
xor
xor
movb
jo
pop
sbb
mov
rcrl
jge
fsubl
pop
dec
cli
mov
pop
or
fldenv
arpl
shll
jno
jno
cmp
cmc
ret
xchg
and
xchg
jmp
and
test
call
push
sbb
andb
xlat
push
xchg
imul
xchg
nop
aaa
imul
mov
or
aad
fdivs
inc
sbb
clc
dec
xor
in
adc
adc
sub
push
cmpsb
xor
lods
arpl
sbb
cwtl
adc
mov
loopne
je
push
mov
mov
lock
pop
fidivl
inc
lcall
in
test
xchg
inc
clc
xor
lods
popa
fs
push
or
bound
dec
icebp
xchg
imul
fists
dec
or
push
cmp
inc
pop
fdivrl
popf
and
adc
xchg
inc
mov
pop
adc
sarl
and
cs
jns
jno
xor
addr16
mov
mov
int3
cmp
jb
and
jl
outsb
ss
xor
add
imul
adc
lcallw
cmp
arpl
inc
adc
xchg
sbb
cwtl
xchg
testl
loop
inc
and
inc
scas
out
pop
iret
dec
sbb
loope
mov
fldt
fs
mov
cmp
jo
bound
testl
je
jno
ljmp
pop
mul
pop
or
mov
jge
sub
and
lock
cmpsl
xchg
sbb
movsl
dec
std
jo
mov
pop
lods
inc
lock
inc
fiaddl
cwtl
call
add
imul
call
stc
inc
js
das
fstl
mov
fsubrl
pop
fcmovu
pop
add
in
mov
adc
mov
dec
push
xor
jle
sar
push
jge
loope
sbb
fcmove
push
scas
sahf
aam
adc
fisubrl
add
jge
into
xor
sub
imul
lds
bnd
or
adc
dec
cmp
inc
sbb
shll
xchg
shll
cmp
mov
adc
push
int
insb
cmp
scas
test
imul
sbb
pop
imul
js
mov
sbb
jle
and
pop
aad
gs
iret
sub
xorb
sub
cltd
and
movl
sub
cli
bound
into
outsl
inc
or
lcall
jecxz
js
mov
out
or
mov
jno
int3
mov
dec
push
test
popf
lock
cs
ja
subb
movsl
adc
xchg
sbb
loopne
adc
and
and
pop
adc
sbb
int3
jmp
leave
and
push
in
xchg
sbb
mov
notl
pop
lock
sbb
add
movsl
nop
push
push
inc
or
sub
hlt
add
sub
cld
mov
inc
lods
shll
mov
mov
mov
scas
stos
pop
mov
cmp
cli
insb
jnp
push
lock
scas
cltd
xchg
adc
sub
pop
and
jbe
cmc
mov
push
mov
adc
inc
movsb
add
ret
ds
xchg
mov
and
add
jne
outsl
roll
ficomps
loop
or
or
xchg
add
or
rcl
int
out
xchg
lahf
adc
mov
push
test
xchg
addr16
dec
icebp
stc
movsl
lahf
arpl
mov
int
cmpb
lods
into
pop
ds
test
lock
out
jno
arpl
out
xchg
push
lahf
mov
int
push
fwait
out
sahf
test
fwait
cltd
cmp
or
mov
in
rcr
and
and
test
out
jmp
fisttps
lds
addr16
mov
inc
or
cmp
cmp
mov
mov
inc
mov
push
lea
repz
mov
dec
daa
shll
mov
cld
rolb
xor
fs
dec
add
xchg
daa
jp
gs
sub
push
jne
lock
cld
cmp
mov
in
ljmp
test
mov
sub
inc
xchg
push
insb
enter
xlat
stos
int
inc
in
jmp
adc
xchg
ret
stos
mov
push
mov
dec
lret
movsb
pop
inc
sahf
les
in
shlb
mov
or
mov
mov
dec
loope
fwait
cmp
pop
xchg
test
lret
rcrb
movsb
xchg
lea
out
outsb
pop
call
pusha
aaa
pop
dec
call
insl
pop
mov
shll
xor
std
xor
cld
cmp
push
aaa
lahf
out
aam
add
outsl
loop
gs
insl
in
lahf
fwait
mov
rorb
and
imul
mov
movsb
xchg
adc
stos
bound
adc
sub
adc
fs
xor
movsb
aaa
or
sub
in
jbe
push
outsl
jmp
sahf
push
dec
inc
sub
fadds
sbb
sarb
or
pop
loopne
in
dec
mov
adcl
pop
push
lea
inc
cmp
add
push
pop
pop
mov
call
ss
add
cmpsb
mov
mov
nop
sbb
out
loopne
pop
icebp
out
sub
sbb
icebp
xchg
rolb
xchg
dec
cmp
jb
in
xchg
les
and
scas
mov
in
fsubs
sbb
rolb
shlb
out
mov
jecxz
pop
push
sub
jbe
xlat
cld
xor
xor
mov
xor
out
mov
out
push
iret
rclb
mov
xchg
inc
jne
mov
out
mov
push
lcall
mov
mov
mov
xor
ficoml
aas
and
or
mov
lahf
xchg
out
jae
jmp
dec
add
or
ret
xor
sub
sbb
push
mov
push
cmpsb
add
jg
mov
sub
push
mov
xor
jmp
or
sbb
mov
sbb
dec
adc
push
pop
mov
push
mov
push
movsb
ficoms
pushf
orb
idivb
or
xchg
mov
rclb
xchg
mov
cmp
aaa
adc
sti
add
out
movsl
aad
xor
arpl
mov
fstpl
cld
or
and
lea
test
cli
mov
lret
mov
pusha
inc
ja
jns
xor
jmp
or
xor
sarl
pop
out
inc
push
fxam
lods
mov
in
leave
test
ret
mov
rcl
aaa
stc
mov
orb
xchg
inc
pusha
adc
and
xchg
out
and
lss
jo
cmp
mov
ja
xchg
dec
aas
outsl
mov
fwait
or
hlt
pop
mov
inc
cmp
or
out
or
adc
mov
ds
pushf
fstl
lock
mov
dec
pop
push
adc
or
push
pop
xchg
sub
insl
or
jmp
push
das
jne
add
xchg
jno
ss
decl
mov
mov
nop
enter
mov
repnz
xor
cmp
cmp
jle
outsb
sub
jle
sub
mov
jg
sub
movsl
in
jecxz
adc
push
push
cmp
insl
ret
daa
pop
mov
ficomps
fstl
sub
cmp
mov
pop
pcmpgtd
imul
and
pushl
aad
repnz
adc
loopne
mov
popa
or
test
pop
repz
pop
hlt
inc
xchg
mov
cmovb
jg
andb
cltd
in
insl
xor
fiaddl
mov
mov
incb
das
dec
outsl
jno
lahf
mov
sbb
jecxz
xchg
xor
into
push
shlb
pusha
or
mov
das
in
pop
push
gs
in
lret
jecxz
push
pop
jbe
and
aam
inc
sti
push
mull
push
xor
test
push
mov
sbb
jne
lcall
sbb
dec
mov
push
fnstcw
mov
scas
inc
sbb
cmp
lcall
xor
popf
stos
or
decb
lcall
lret
je
sbb
lea
rcll
add
bnd
jle
mov
pushf
xlat
fildll
icebp
dec
addr16
cmp
or
movb
fs
rcrb
pop
subb
or
in
mov
jnp
pop
mov
ret
fcmovu
jae
out
lea
repz
inc
clc
lret
push
int
or
cmpsb
rcll
jns
into
nop
int
mov
mov
mov
inc
int
and
test
daa
mov
aam
push
dec
mov
data16
nop
pop
xchg
adc
dec
lds
push
cmp
sbb
push
fisubl
lcall
js
clc
mov
adc
jge
imul
mov
icebp
xchg
enter
jns
dec
pop
lea
jl
pop
leave
fldenv
xor
inc
xchg
cmp
push
outsl
xlat
fnsave
push
repz
mov
xorb
cs
adc
shll
fdivs
mov
popf
inc
inc
cmp
js
into
movsl
sti
dec
stos
fcmovnbe
fbstp
fcomps
sbb
sub
inc
push
sbb
jns
adc
lock
pavgw
loop
gs
dec
ds
mov
push
and
fs
jg
adc
push
fucomip
mov
stos
sbb
inc
aaa
or
ret
adc
popf
jl
cltd
pop
mov
sub
inc
fiadds
test
imul
stos
hlt
testl
xlat
movsl
out
loopne
jecxz
or
inc
adc
pushf
add
jmp
xor
int
xchg
pop
cmp
in
push
dec
mov
ret
inc
pop
ja
mov
mov
shrl
push
leave
mov
or
jns
xor
lods
lea
xchg
mov
mov
sbb
add
jl
inc
lods
pop
mov
xchg
leave
mov
jp
mov
xor
bound
push
mov
or
or
pop
fsubrp
pusha
mov
rcll
mov
call
mov
lret
sbb
push
divb
sbbb
cmp
pcmpeqb
outsb
adc
pop
push
fwait
add
jg
out
aas
cltd
add
push
xor
lcall
pop
aas
shl
inc
dec
mov
mov
cmc
dec
xchg
sbb
mov
ficoms
call
or
or
xor
imul
mov
and
ret
iret
sbb
inc
iret
in
gs
imulb
imul
mov
dec
mov
xchg
mov
dec
int
mov
push
inc
fwait
xchg
popf
lods
imul
into
mov
xor
shlb
sti
mov
jb
fdiv
lcall
sub
jl
jp
pop
pushf
pop
pop
out
xor
cld
dec
ljmp
test
aad
jmp
lret
jg
mov
xchg
adcw
xor
jecxz
sub
pop
ret
mov
rcrl
adc
mov
and
daa
mov
dec
out
aam
es
jnp
push
dec
and
mov
sbb
mov
and
loopne
cmp
sub
or
aad
add
and
push
andb
or
lcall
pop
enter
cwtl
mov
xor
or
outsb
add
sub
sub
iret
sbb
sbb
pushf
fwait
xor
test
xchg
movsb
mov
enter
add
pusha
adc
xchg
cmp
test
shl
sti
ja
dec
arpl
cs
orl
cld
sub
pop
or
xlat
stc
loopne
mov
jb
mov
and
fwait
out
pop
xchg
inc
lcall
lret
loop
jo
pop
lock
push
xor
aaa
cli
fidivl
or
ret
sub
fwait
pop
and
mov
dec
pop
js
adc
movsb
push
nop
imul
das
ret
iret
xbegin
add
int3
sbb
out
out
enter
add
cmp
repnz
out
dec
sub
dec
xchg
dec
dec
push
sbb
adc
jb
jmp
je
and
roll
xor
add
addr16
jp
push
sbb
stos
ds
lods
cmp
imul
mov
push
test
std
xor
xchg
out
pushf
mov
ds
test
repz
lahf
inc
or
xchg
sbb
dec
pop
enter
sbb
stc
dec
jns
nop
out
out
dec
cmc
sbb
or
mov
test
inc
mov
bsf
notl
out
and
pop
jns
sbb
cmp
out
dec
xchg
cmp
cmpsl
pushf
dec
test
fsubrs
fldenv
cmpsb
push
fisubl
mov
mov
mov
ljmp
dec
fwait
jnp
and
pop
icebp
inc
in
std
mov
int
or
mov
adc
ret
lcall
jle
repz
jl
adc
rcl
jns
sub
loopne
sub
add
jns
test
mull
cmc
jl
addl
xchg
in
pop
mov
push
inc
aas
push
iret
sub
fnstsw
pop
pop
out
fstl
xlat
outsl
aam
xor
jne
ds
pop
mov
push
sbb
movl
dec
push
aaa
add
gs
mov
data16
xor
cmp
enter
idivl
mov
xor
pop
xor
test
ss
es
and
cld
aad
dec
nop
sbb
stos
add
mov
push
and
sbb
into
out
int3
sbb
pop
pop
or
das
xor
lea
sub
jbe
adc
ret
adcl
mov
pop
pop
dec
das
or
mov
scas
or
inc
das
ret
mov
mov
movsb
and
or
jb
fstpt
imul
ja
mov
ret
cli
jmp
jae
xchg
push
or
es
in
insb
cmp
adc
cs
xchg
inc
inc
arpl
into
and
cli
call
xchg
inc
adc
or
lfs
jb
or
inc
jns
inc
mov
dec
lods
int
sti
sub
pushf
leave
sysenter
subb
cmp
inc
jp
jns
popf
js
mov
lea
scas
loopne
mov
out
scas
ret
roll
mov
out
hlt
ljmp
pop
xor
int3
aad
stos
xor
cmp
and
mov
sub
jb
in
mov
adc
adc
cmp
xchg
scas
xor
jg
jae
test
ret
pushf
imul
xchg
fs
mov
and
repnz
dec
mov
mov
in
xchg
das
push
lock
aaa
lahf
bound
js
inc
fwait
xlat
orl
ljmp
lods
jb
adc
insb
push
movsl
and
icebp
pop
std
out
ret
sete
mov
fst
jae
mov
xchg
jg
fists
jge
popw
xchg
pop
leave
imul
mov
and
pop
pop
jbe
cwtl
adc
xchg
mov
jge
out
in
cmc
push
xor
outsb
shll
xor
inc
test
add
dec
insb
xchg
sbb
cmpsb
loopne
dec
fbstp
popa
ljmp
repz
jl
arpl
push
cmpsl
aaa
iret
adcb
mov
cmpsl
into
outsb
pop
enter
jo
jns
fcmovnb
stos
xchg
repnz
rol
cmp
icebp
mov
idiv
mov
add
mov
pop
mov
test
shll
vmwrite
fstpt
pop
dec
lret
jecxz
xchg
lea
rcrb
into
jnp
jmp
sbb
xchg
sbb
push
sti
or
pop
dec
xor
lea
xchg
in
rcl
aas
sbb
sbb
sahf
push
lret
xlat
pop
cmp
jae
add
or
mov
fcoml
push
loop
push
inc
cmp
adcl
decb
push
int
mov
inc
xor
scas
cld
mov
fdiv
mov
or
dec
jg
or
or
jns
add
dec
loope
cmpsl
pop
fdivrl
mov
xor
push
stc
push
add
insb
xchg
incb
add
js
in
and
mov
xor
pop
adc
and
inc
jge
into
test
fnstcw
adc
mov
adc
inc
sarb
stos
iret
and
push
loope
shl
xor
pop
shll
mov
mov
out
push
mov
lahf
into
repz
or
test
cli
fistl
push
inc
dec
jle
insb
mov
in
cmp
rcr
mov
je
pop
or
xor
push
adcl
lea
and
stos
aam
insb
lea
rcrl
xchg
jne
clc
or
mov
scas
call
xchg
xlat
xor
cmp
pop
add
shl
pop
aaa
mov
add
jnp
aas
mov
mov
fidivrs
or
pop
xor
mov
mov
sub
add
out
imul
cli
mov
cltd
sbb
add
js
mov
adc
xchg
jg
jae
and
daa
jnp
jmp
mov
sbb
cmp
lret
mov
mov
stos
test
dec
je
aam
clc
hlt
xor
rol
int3
mov
sub
pop
lcall
and
inc
mov
addb
lret
stos
rcrb
out
xor
cmp
loop
fisttpll
adc
inc
adc
data16
loop
push
mov
mov
stc
aad
dec
xor
xor
fsubrs
xor
push
xchg
inc
jmp
xor
sti
scas
add
push
loope
es
xchg
adc
or
nop
push
cmp
mov
call
push
inc
or
pusha
psrlw
incb
cmp
shl
lcall
mov
imul
mov
je
adc
out
aas
int
inc
xchg
jnp
sbb
rolb
js
imul
popl
push
mov
mov
filds
fwait
int3
sti
adc
mov
inc
dec
fstpt
jo
test
mov
out
adc
lods
mov
in
jo
sub
push
je
and
inc
push
and
lahf
int3
js
jl
in
add
repz
adc
jg
shll
popf
cmpsb
xor
aam
das
push
cs
loop
cltd
sbb
addr16
aad
inc
sub
arpl
aas
cmp
push
sub
dec
dec
adc
pushf
xchg
scas
xor
jne
loope
fs
adc
insb
leave
aaa
jmp
pushf
mov
cmp
jae
cmp
roll
rcl
mov
cmpsb
shl
jbe
fistps
inc
mov
lds
movsb
inc
test
nop
cmp
lret
add
pop
mov
and
into
mov
jbe
pop
adc
cmp
cmp
push
mov
clc
pop
or
xchg
loope
mov
imul
mov
out
shrb
cmp
mov
jo
sbb
mov
out
imul
mov
je
mov
xchg
rcr
jle
sbb
in
lea
rorl
sub
nop
popf
push
ds
mov
jno
push
stos
ror
ds
leave
leave
aaa
jmp
repnz
cmp
jne
xor
in
jle
loop
jns
dec
mov
movsl
sub
xchg
sarb
cld
in
insl
leave
repz
stos
mov
hlt
enter
mov
testb
xchg
lock
mov
push
jo
sbb
pop
data16
sbbb
leave
and
adc
xchg
testl
insl
mov
divb
lock
out
fdivr
je
stos
jle
mov
sahf
andl
adc
fildl
shr
in
cli
fisubs
shl
xor
inc
in
stos
and
inc
scas
mov
dec
sti
and
adc
lds
or
fsub
xchg
mov
data16
jmp
dec
and
dec
mov
inc
mov
and
jmp
pushf
lock
roll
imul
pop
add
push
dec
and
mov
test
nop
lds
and
and
push
inc
insb
mov
fucomip
shll
sub
popa
cli
scas
test
idiv
mov
into
cli
sbb
mov
and
mov
xor
cmp
pop
xchg
pop
fwait
cmpsb
scas
js
pusha
pop
lea
cmp
lret
dec
xlat
adc
lahf
and
inc
clc
in
pushf
pusha
and
xchg
push
scas
mov
stos
xor
push
xchg
fistl
mov
scas
ret
add
adc
in
pop
sub
orb
ljmp
cmp
xlat
cs
sarl
scas
lods
or
or
push
fists
push
adc
pop
call
fdivs
insl
xchg
inc
ja
mov
ret
sub
add
mov
lret
scas
xchg
fnsave
stos
and
fdivs
xorl
shlb
xor
je
fbld
mov
add
inc
mov
jo
pusha
jae
or
dec
out
lods
inc
xchg
hlt
lds
lcall
fcomps
mov
pop
jnp
mov
cs
movsl
push
popa
je
sbb
adc
cmpb
test
gs
lret
cwtl
mov
push
sub
call
in
jns
pop
cmp
inc
hlt
xor
mov
lret
mov
out
stc
xchg
jl
xchg
jbe
clc
addr16
inc
cmpsl
mov
adc
cmp
cmp
push
sub
test
aam
cli
testl
loopne
test
testl
mov
push
xlat
fistpl
jns
idivb
lahf
add
gs
jg
sar
and
lret
dec
in
lcall
or
xchg
in
iret
movsb
arpl
into
lcall
cmp
addr16
or
adc
testb
and
ds
pop
xchg
cmp
sub
ret
ja
push
int
jbe
ja
dec
jmp
add
mov
inc
sub
lods
mov
xchg
pop
jp
lret
inc
adc
nop
jns
adc
lahf
inc
push
jb
orb
test
shll
or
lret
hlt
data16
lea
push
cli
cltd
movnti
scas
inc
dec
push
ficompl
lea
mov
or
xorb
sub
aam
jno
xchg
js
test
lock
in
mov
repz
push
pop
scas
sbb
xor
mov
sbb
push
mov
movd
jne
in
das
mov
and
cld
push
mov
lcall
jbe
mov
ljmp
jae
or
into
mov
cmp
and
sub
imul
loopne
add
cli
sub
das
imul
sahf
pushf
pushf
fldcw
movsl
xchg
xchg
loope
adc
sub
int3
out
cwtl
in
mov
dec
lods
adc
fs
mov
push
jl
pushf
into
pop
in
dec
push
or
xchg
mov
push
das
mov
dec
adc
cmpl
shlb
or
push
cmpsl
mov
loopne
add
out
xchg
pop
push
int
pop
mov
dec
xlat
push
int3
enter
sahf
stos
add
mov
jl
cmp
stc
shrb
iret
sub
mov
mov
mov
cmp
outsl
stos
loopne
inc
clc
mov
mov
test
sbb
insl
adcl
ret
jns
pop
pusha
into
cmp
repz
daa
sarl
in
popa
insb
xchg
jnp
sti
bsf
push
and
icebp
pop
mov
or
mov
enter
push
cltd
dec
mov
dec
or
xor
sahf
pop
cmp
enter
test
mov
scas
cwtl
outsb
xchg
dec
es
inc
xchg
jmp
in
popf
leave
push
jecxz
pop
dec
push
stos
sub
xor
test
xchg
fimull
xchg
cli
push
inc
ret
insb
dec
out
nop
mov
jg
fisttps
mov
in
pop
out
dec
mov
push
loop
popa
lods
imulb
stos
std
outsb
jno
or
es
bound
leave
enter
cwtl
push
aas
arpl
mov
sub
mov
sahf
push
push
out
push
jns
cmp
dec
repnz
jecxz,pn
xchg
mov
fistl
aaa
inc
nop
push
and
dec
and
and
sbb
inc
push
scas
mov
sbbl
add
push
punpcklbw
jbe
mov
dec
pop
push
push
les
into
pushl
sbb
stos
dec
wrmsr
xchg
das
inc
mov
lret
arpl
dec
xor
xchg
sub
icebp
mov
dec
icebp
jns
sbb
jle
pop
dec
xchg
mov
test
cld
inc
inc
xchg
adc
sub
jno
xchg
jmp
cmp
nop
mov
int
stc
fadds
jmp
fdivp
add
shrl
imul
fnstcw
cmc
lods
ja
mov
std
rolb
arpl
notb
int
mov
sub
xchg
std
or
jg
and
das
imul
cmp
pop
add
in
xchg
jge
das
lret
int
movsl
fstpl
pop
outsb
or
sbb
aas
sbb
pop
cs
cs
xor
xchg
addl
rcl
jo
lahf
insl
mov
ds
sti
js
or
call
xchg
aaa
and
test
scas
iret
mov
mov
gs
jbe
mov
adc
data16
lods
outsl
and
clc
pop
in
ret
mov
push
pop
add
mov
and
xchg
mov
fdivrp
ret
aas
fsts
xor
push
movsl
pop
adc
je
addr16
mov
js
xchg
je
mov
mov
notl
xchg
inc
xchg
mov
mov
test
push
out
sbb
mov
cwtl
rorb
sub
lds
imul
xlat
pop
jae
or
or
test
mov
and
or
pushf
popf
cmc
les
dec
out
aas
mov
outsl
pop
push
test
or
mov
adc
js
ja
insl
cs
sbb
adc
cmc
mov
mov
hlt
pop
daa
stos
and
mulb
mov
cmp
jg
jp
repz
popf
xchg
test
in
in
jbe
add
in
dec
xchg
xor
shr
mov
je
adcb
dec
fdivrs
stos
iret
add
fwait
out
aaa
xchg
push
pop
cli
call
xchg
imul
shll
je
mov
ror
rclb
test
ds
add
xor
subl
or
jns
loop
sbb
loop
xor
ret
xchg
lahf
ret
mov
mov
in
cmp
mov
push
or
mov
cmp
mov
stos
clc
xchg
jne
imul
dec
enter
lret
cli
mov
lcall
push
and
aam
jge
fmuls
xor
outsb
inc
push
push
sub
enter
les
push
pop
jl
sarl
xlat
aad
js
pushf
xchg
adc
cmp
cs
fcoms
cld
pop
shlb
lods
adc
xor
cmpsl
push
insb
inc
lret
or
mov
pop
fwait
fwait
cmpsb
das
mov
jle
mov
mov
adc
nop
xchg
pop
sub
pop
add
call
add
lahf
das
xchg
lret
jne
fcomip
in
and
ja
ficoms
sbb
repz
das
cs
aam
and
mov
push
loopne
ret
cmp
into
testl
into
std
mov
mov
sub
out
push
lea
or
call
cmpsb
dec
xchg
inc
jnp
fmuls
test
sub
jecxz
pop
jo
sub
nop
and
imul
outsl
or
pop
call
call
int
jle
mov
xlat
xorb
fidivrs
cs
xchg
fbld
in
xor
sbb
out
push
adc
mov
cmpsl
mov
ss
je
jle
pop
jge
icebp
or
es
add
sbb
push
cmp
scas
and
aas
imul
pop
lods
xchg
notb
and
arpl
xor
xchg
cmp
cmp
xchg
addr16
inc
fsubrl
scas
ret
or
stos
inc
call
dec
fsubrs
out
push
pop
mov
loopne
sub
sbb
scas
mov
cmp
arpl
shrl
push
dec
add
sub
push
xchg
test
push
aaa
loop
aaa
bound
je
pop
repnz
fisttps
sbb
pusha
mov
push
loope
mov
push
jns,pn
sub
dec
push
sti
aad
ja
mov
mov
stc
mov
jecxz
push
pop
or
inc
push
mov
stc
pop
jo
mov
jl
xchg
fldenv
add
fs
mov
jmp
mov
sbb
jnp
in
jge
ror
sahf
inc
or
fldcw
leave
into
lahf
in
les
lock
mov
pop
xchg
bound
mov
xchg
push
dec
sbb
cmp
insb
fistl
repnz
xorl
mov
movsl
icebp
jne
fidivs
stos
out
cmpsl
jae
cmpl
dec
push
xor
popl
call
add
stc
pop
scas
xchg
adc
aad
notb
cld
les
pop
inc
scas
adcb
lds
mov
xor
lods
dec
rcr
loopne
out
and
push
inc
inc
pop
and
stos
fldl
mov
dec
in
in
cltd
mov
mov
push
iret
fists
lret
ss
scas
js
out
lahf
stos
sbb
in
cmpsb
mov
inc
repz
mov
int
add
and
push
push
lods
mov
mov
cmp
pushf
shrl
arpl
mov
ljmp
inc
mov
and
mov
xchg
icebp
add
dec
lds
sub
jge
mov
mov
stos
fmull
stos
aam
ret
inc
inc
xchg
sti
test
cmp
dec
pop
dec
pop
outsl
xor
jg
fmul
sbb
add
push
orl
enter
out
scas
test
gs
mov
push
add
xor
cld
add
ret
xchg
or
push
fadd
add
sbb
and
mov
popa
cmc
sub
mov
pop
pop
push
xlat
push
loopne
lock
add
inc
sbb
repz
cmp
cli
ds
cmpsl
xchg
loop
mov
or
mov
stos
pop
xchg
adc
mov
or
loope
sti
lods
push
dec
mov
fimull
xchg
shl
imul
xchg
aas
sub
daa
pop
xor
cltd
or
pop
cs
test
loope
jnp
out
mov
ds
cmpsl
jp
jo
cmp
stc
ret
push
push
and
and
or
lcall
and
clc
dec
imull
bound
movsb
sbb
fs
xor
dec
mov
in
pop
in
jno
and
and
dec
test
pop
cs
lods
or
mov
movsb
movsl
scas
lahf
mov
xchg
scas
in
ss
cmp
xchg
push
sbb
inc
fisubrl
inc
adc
cmp
lock
mov
out
shl
cmp
mov
testl
repnz
and
into
cmp
mov
cmp
nop
loop
inc
into
xchg
lahf
adc
sub
or
pop
push
inc
inc
pop
cwtl
jns
stos
dec
jecxz
test
push
jb
lock
bound
mov
ja
sbb
fsubrl
xchg
push
inc
je
faddl
mov
rcll
adcl
xlat
push
and
sub
dec
cli
inc
pushf
popa
or
imul
add
mov
mov
cmc
sbb
pusha
enter
cmp
sub
push
ljmp
enter
xchg
and
ret
test
pop
scas
xchg
lea
test
sti
js
dec
es
icebp
mov
ljmp
inc
sbb
pop
loope
sbb
mov
pop
push
js
in
nop
cmp
hlt
push
cs
jl
mov
push
dec
or
dec
jno
cmpsl
addb
jge
push
das
sbb
enter
daa
test
arpl
dec
push
imul
push
daa
loopne
and
and
fs
mov
inc
ss
mov
cmpsb
ret
mov
lret
adc
inc
es
cmp
push
sub
xor
mov
pop
inc
movsb
sub
push
xchg
mov
xor
nop
mov
fwait
push
incb
es
push
pusha
adc
int
add
fists
inc
in
push
sahf
das
jp
push
adc
push
lret
fimull
outsl
and
lsl
cld
paddq
fs
in
pop
test
pop
jmp
cmp
mov
subb
mov
adc
and
cmpsb
popa
mov
mov
push
and
add
ret
movsl
push
jno
adcb
mov
mov
lock
and
inc
out
pop
sarb
mov
shlb
mov
pop
pop
cmp
xchg
jns
jg
sub
inc
jecxz
jb
or
jle
push
aad
loope
add
ja
jbe
and
or
xchg
cli
jns
and
std
shrb
loop
jmp
repz
xor
mov
and
das
sbb
xor
stos
cmp
push
mov
insb
lahf
into
test
add
scas
je
incb
cmpsb
jo
inc
aaa
imul
adc
mov
ret
or
das
jo
push
ljmp
ljmp
inc
repz
mov
or
adc
shl
mov
dec
mov
call
lcall
jp
icebp
pop
pop
js
aam
mov
outsb
pop
push
les
sbb
lods
mov
leave
dec
mov
jecxz
mov
test
lods
mov
sbb
pusha
rol
inc
ret
xor
stos
inc
jae
shll
loop
iret
cld
aam
push
aam
mov
xchg
mov
lahf
push
adc
mov
pop
xlat
push
jmp
je
and
stc
push
icebp
xchg
mov
or
jne
sbb
mov
jb
adc
push
ret
cmp
fdivs
push
movsl
adc
xchg
jmp
rclb
call
test
test
arpl
call
mov
fdivl
in
pop
adc
jg
add
das
pop
lods
arpl
sti
fmull
pop
popf
add
lods
js
insl
in
call
dec
push
and
xchg
sub
stos
mov
fcomps
pop
mov
push
sbb
fsubrl
lds
mov
cs
scas
or
fistps
inc
jle
sbb
mov
lret
mov
sbb
ret
and
cwtl
leave
push
push
addb
dec
push
test
xor
adcl
jl
mov
das
sub
adc
loope
and
stos
mov
adc
pop
fwait
dec
popf
scas
dec
add
sub
je
push
adc
sub
push
repnz
scas
push
add
mov
ror
sbb
dec
add
out
xor
mov
mov
sub
repz
mov
test
pop
jge
dec
sahf
add
jno
mov
mov
sbb
clc
fdivrp
out
sti
imul
loopne
push
cwtl
cmpsb
loopne
jge
mov
insl
mov
and
divl
adc
inc
aam
jnp
movsl
xchg
fwait
and
lcall
push
lret
mov
cmp
xchg
sti
mov
pusha
sbb
out
and
ds
aad
fnstsw
add
mov
pop
inc
mov
cmovl
add
push
dec
add
nop
push
pusha
pop
sti
mov
inc
mov
lock
pusha
pop
je
push
pop
fdivrp
add
xorl
or
lahf
sub
int3
cmpsb
adc
cltd
jnp
shll
and
leave
jo
lret
sub
cltd
outsl
inc
clc
into
sub
fldenv
push
icebp
addr16
test
jle
adc
mov
jl
push
out
pop
loope
mov
adc
fcoms
lds
xor
xchg
and
inc
lock
inc
or
stos
and
mov
sub
jecxz
cmpsb
adc
into
imull
cmp
cmp
test
leave
fs
lea
sbb
cli
mov
jp
jmp
outsl
xchg
and
jg
pop
movsb
jmp
ds
int
aaa
adc
mov
add
xchg
packsswb
or
cmp
xor
inc
mov
je
insb
cwtl
lret
negl
sbb
sbb
test
leave
cltd
sbb
inc
cwtl
bnd
fxtract
in
gs
or
xchg
fldl
xchg
std
sbb
das
fimuls
addr16
sahf
pushf
adc
sete
lods
sbb
xor
not
cmp
add
roll
and
sub
jns
popa
stc
jb
test
push
outsl
outsl
push
addl
je
jne
inc
out
dec
mov
mov
fistpll
subb
mov
ljmp
or
insb
jmp
imul
inc
mov
sbb
sarl
mov
or
cmp
inc
out
imul
mov
mov
outsb
scas
sub
dec
mov
nop
sub
mov
add
xchg
loop
adc
mov
sbb
add
scas
ret
outsl
inc
or
ljmp
mov
mov
xchg
arpl
lret
push
into
outsl
enter
out
mov
or
shll
sar
xchg
mov
mov
aad
mov
mov
and
cmp
xor
mov
adc
or
fucomi
sub
arpl
insl
shrl
loop
adc
fidivl
mov
inc
outsl
ficoml
mov
cmp
lds
ret
inc
out
das
bsr
cli
stc
lods
pop
push
shrb
pusha
fisttps
notb
inc
insl
rcl
out
or
stc
add
into
int3
xor
in
mov
clc
xchg
xor
jbe
add
adc
sbb
xchg
inc
push
fimuls
mov
mov
lret
mov
pop
mov
sbb
adc
pushf
outsb
mov
lahf
adc
cs
mov
repz
lcall
pop
xchg
xor
sub
fadd
lods
movsl
out
shrl
push
dec
mov
mov
shrl
or
scas
xor
dec
pusha
xlat
scas
gs
insl
lahf
push
in
and
pop
jp
repnz
icebp
push
mov
imul
out
xor
rorl
xchg
sub
mov
adc
ja
pop
std
inc
dec
addr16
add
pop
cmp
mov
fidivrl
in
sub
in
xchg
xchg
add
fists
cmp
std
dec
and
mov
sub
xor
ds
and
lcall
sahf
fdivl
pop
enter
daa
cmp
fildll
ltr
jno
je
jge
xchg
mov
jl
mov
ret
pop
xchg
push
mov
mov
mov
mov
int
popa
mov
loope
out
xlat
inc
nop
sarb
addr16
sbb
jne
das
mov
test
scas
cmp
lret
mov
lods
iret
or
insb
cli
push
and
gs
rclb
cmp
in
mov
jge
lret
lret
lret
rcrb
jge
ljmp
and
int3
pop
hlt
dec
lods
mov
and
jle
repnz
icebp
mov
test
or
mov
imul
mov
icebp
dec
lahf
sub
in
es
lds
pop
sbb
arpl
insl
imull
pop
lods
push
jle
push
outsb
imul
lock
push
aaa
ja
div
sahf
jmp
sahf
jbe
adc
jno
xchg
das
addb
cmp
mov
hlt
and
mov
push
shl
push
mov
mov
jne,pn
pop
ret
jns
imul
das
sub
ljmp
jae
lods
push
adc
mov
mov
pop
in
lods
ljmp
int
movsb
pop
adc
mov
jge
inc
clc
enter
out
inc
jns
loop
fisttps
imul
jmp
fidivrs
inc
arpl
in
pop
mov
out
cmp
xchg
and
cmp
push
daa
popf
jb
push
aas
push
in
xor
int3
lock
loope
xchg
xchg
mov
jns
dec
xor
sbb
mov
mov
sarl
push
inc
adc
inc
repz
arpl
mov
sti
mov
mov
ja
cmp
rolb
out
adc
sub
orl
add
outsb
inc
mov
and
out
mov
repz
movsb
inc
sbb
jg
push
test
and
dec
icebp
data16
popw
cli
jg
pop
mov
push
mov
mov
push
gs
xor
adc
in
lret
adc
shlb
pusha
sub
das
lcall
xor
jae
mov
inc
cmpsl
jecxz
orb
xchg
stos
stos
pop
shl
iret
test
imul
addr16
neg
pop
push
gs
out
das
inc
int
or
mov
push
adc
je
pop
nop
bound
mov
mull
lahf
push
mov
push
and
movsb
push
cltd
mov
sbb
nop
pop
test
mov
or
lret
jo
sub
adc
fisubrl
lods
sarl
insl
mov
mov
mov
enter
add
sbb
loop
fs
jl
fwait
aas
jo
rclb
mov
push
or
ss
mov
cmc
and
repnz
fcompl
jge
in
push
js
cmp
jmp
hlt
out
lods
xchg
clc
rorl
shll
jmp
rep
aas
xor
push
insl
stc
xor
call
xchg
mov
jae
stos
pop
fidivrl
xchg
xchg
jbe
mov
push
mov
add
adc
push
cmpsb
cmc
aaa
insb
mov
sbb
into
inc
or
xchg
xchg
jo
mov
ret
cmpsb
or
and
stos
push
out
push
insl
cld
popa
adc
test
or
add
mov
in
or
cmp
mov
movsb
das
adc
push
mov
ret
lds
dec
sbb
mov
pop
adc
out
addl
dec
mov
or
push
inc
cs
and
mov
fildll
insl
dec
pop
cmc
imul
jnp
mov
fwait
pop
in
lahf
sysenter
rorb
stos
inc
xor
cmp
mov
das
jg
cmpsb
inc
aaa
dec
out
out
or
pusha
imul
lcall
mov
dec
add
leave
dec
mulb
dec
mov
out
sahf
cltd
out
xchg
pop
or
fwait
divb
lahf
mov
fistpll
pop
sbb
insl
filds
pop
xchg
lock
cmpsb
insl
mov
sub
mov
nop
sub
frstor
adc
mov
popa
and
sub
or
cs
scas
adc
pushf
inc
int
jo
daa
sub
mov
or
aam
lcall
jg
adc
clc
sub
imul
stos
add
sub
xor
out
cmp
mov
cmpsl
mov
ds
push
or
jnp
add
insb
and
and
pop
jl
packsswb
out
daa
cmp
fnsave
adc
cltd
push
mov
ds
xchg
xor
in
mov
daa
jae
sahf
cmp
inc
push
out
mov
dec
xchg
jle
xchg
stc
inc
xchg
in
sub
cs
cli
fstl
fildll
push
repnz
sti
mov
or
imul
sub
dec
mov
add
add
cmp
mov
call
aas
add
dec
sub
mov
cs
je
data16
dec
jb
jp
mov
xor
mov
dec
shrb
xchg
and
mov
test
mov
fwait
push
lea
push
testb
xchg
fcmovnb
xchg
sbbb
jbe
inc
add
lock
mov
cmp
sub
dec
adc
stc
mov
mulb
or
push
mov
jno
sbb
lahf
int3
sub
fisttpl
mov
mov
xchg
push
push
push
sbb
les
bound
jmp
sbb
in
xor
subl
jg
lods
mov
inc
repz
pushf
incl
xor
cmpsl
pushf
loopne
bound
neg
insl
iret
xchg
dec
dec
jle
cld
mov
filds
inc
push
mov
aad
mov
pop
add
rclb
mov
mov
jmp
loope
cld
sub
mov
cmc
rsqrtps
imul
and
inc
lods
or
dec
add
dec
dec
cltd
cmp
add
sub
movsl
sti
jl
cmpl
jmp
pop
cs
push
dec
mov
aad
icebp
adc
int3
xorl
jae
and
xchg
out
cwtl
jg
jb
jnp
arpl
aad
divb
sbb
call
pop
jge
jne
out
shrb
das
adc
int3
int3
fwait
cmpb
push
sub
das
mov
sti
int
xchg
pop
cwtl
imul
add
pop
or
mov
push
push
aad
addr16
cmc
fstpl
push
mov
cmp
push
mov
xor
xorb
out
fbstp
lcall
and
inc
in
test
dec
and
sub
insl
cmp
nop
xchg
mov
imul
mov
dec
or
add
push
jo
popf
dec
dec
dec
out
das
popw
xlat
lret
ret
mov
pop
into
je
cwtl
aaa
mov
or
dec
sti
add
gs
adc
or
sbb
sub
and
imul
repz
sbb
stos
lock
outsb
xor
jle
push
inc
or
ss
xchg
nop
std
xlat
insb
lods
ja
adc
xchg
mov
xchg
lret
fidivl
xchg
or
dec
mov
repz
rolb
jecxz
outsl
sti
lods
out
lock
call
sar
and
dec
and
or
lret
xor
xchg
push
mov
lods
repnz
out
mov
pop
ja
or
mov
shl
xchg
fstpt
add
icebp
mov
stos
subb
cli
xorl
sbb
sub
lcall
sub
gs
test
in
sbb
or
cmc
cltd
rorl
push
bound
push
out
dec
iret
mov
in
sub
mov
pusha
pusha
mov
mov
jp
xor
lea
fwait
inc
add
dec
sbb
dec
aad
insb
mov
and
mov
int3
xor
adc
lods
lods
jecxz
pusha
adc
mov
mov
stc
ret
cli
jmp
addr16
xor
push
das
es
mov
flds
outsl
inc
jbe
pushw
ret
sub
push
xchg
pop
out
shlb
add
sbb
roll
push
outsb
push
push
idiv
clc
loop
pushf
pusha
rorb
pop
pop
mov
dec
mov
mov
cli
dec
popa
test
mov
jl
cmp
insb
mov
jp
data16
outsb
dec
imul
test
hlt
pusha
push
adc
call
js
push
push
je
iret
inc
movsl
or
push
mov
xor
aad
xor
or
out
sbb
xchg
jnp
mov
shr
add
call
mov
mov
mov
fsubr
roll
or
jo
fdiv
int
setle
dec
bound
mov
movsb
stos
mov
rcrl
push
enter
mov
fwait
xchg
out
es
jge
fwait
mov
pop
jne
cmp
cs
jno
dec
rcll
jnp
lods
fbld
sbb
mov
xchg
pop
cmp
cmp
or
mov
sub
mov
or
xor
mov
adcb
int3
lret
lcall
das
js
push
jns
pusha
add
mov
fwait
lea
cmp
xchg
aas
mov
cltd
sub
inc
int3
sub
daa
cmp
add
outsb
mov
mov
push
lahf
cltd
clc
outsl
sahf
push
xchg
data16
lret
inc
inc
jle
lods
test
std
out
mov
sbb
cmp
lds
ljmp
mov
push
insb
mov
ljmp
cmp
pop
or
xchg
fisubl
xchg
scas
xlat
jg
pop
jmp
fsubs
das
stc
stos
ret
cmp
out
or
and
sub
pop
loope
lcall
dec
sub
mov
inc
push
in
in
push
sub
mov
or
aam
xchg
mov
push
add
xchg
fcmovne
sbb
mov
cmp
rolb
leave
pop
and
push
push
xchg
cli
push
rcll
adc
mov
sub
stos
xor
sub
ja
mov
inc
sbb
jecxz
cltd
sub
imul
inc
mov
sbb
je
add
dec
cli
fsubrs
stc
mov
test
mov
scas
lods
adc
mov
xchg
pusha
mov
jnp
push
into
xchg
sbb
arpl
add
andl
dec
insb
insb
shl
hlt
inc
pop
pop
add
fld
or
icebp
stos
or
mov
push
int
sub
in
sbb
out
std
stos
je
sub
cmc
pop
adc
push
das
sbb
sar
xchg
jo
sub
xchg
inc
aad
jp
pop
mov
iret
js
add
pop
mov
pop
int
xchg
in
or
fidivl
inc
das
loopnew
and
add
mov
jmp
mov
sti
mov
and
fs
mov
js
clc
ja
inc
jmp
sbb
dec
aam
cmp
mov
and
xchg
sub
ret
out
adc
sbb
add
xor
mov
pop
and
imul
clc
cs
pop
jns
push
not
sar
fidivs
dec
mov
fadds
mov
out
pop
jo
cmpsb
iret
cs
jbe
mov
addr16
push
fldenv
js
dec
lds
dec
les
pop
outsb
in
rolb
test
push
sbb
push
mov
fistpll
rorb
jno
pop
in
imul
in
ja
mov
mov
sbb
mov
scas
das
shl
movsb
jb
es
scas
pop
and
mov
outsb
inc
xchg
jae
push
jge
cwtl
jne
jo
inc
xchg
jecxz
out
jb
int3
sbb
fcmovnbe
xlat
and
sahf
push
inc
and
idiv
lods
ds
fs
lock
mov
push
lea
push
mov
daa
jae
fidivs
repnz
pop
sahf
mov
xlat
fsubp
pop
dec
pop
sub
sarb
lds
arpl
icebp
push
fstps
mov
xchg
popa
lret
repz
jge
xchg
pop
dec
cmp
xchg
xchg
test
cs
or
adc
add
enter
push
mov
popw
jne
push
arpl
out
push
xchg
xor
dec
lds
jo
and
inc
jecxz
mov
mov
stos
icebp
call
xlat
dec
ret
push
stc
lods
ss
adc
mov
mov
cltd
fcmovnu
dec
cs
xchg
leave
and
or
adc
xor
lret
test
dec
rorl
in
sahf
pop
adcb
xchg
xlat
push
xchg
inc
xchg
sub
xor
lret
sbb
pop
decl
push
shll
leave
loope
stc
lock
setge
out
sbb
das
add
push
daa
pusha
sub
ja
mov
mov
lock
adc
stos
pop
fbld
mov
ja
cmpsl
daa
lahf
mov
imul
sti
fwait
mulb
sti
les
imul
es
outsl
adc
lods
ret
das
ret
sub
je,pt
iret
jg
fildl
mov
stc
cmp
rorb
jb
mov
lahf
data16
adc
mov
xchg
mov
push
add
clc
test
clc
jo
and
sub
das
mov
add
jg
cmpsb
pop
cmp
pop
in
xchg
mov
cmc
and
lahf
pusha
xor
sarb
cmc
sbb
cwtl
daa
clc
and
cmc
imul
cmp
scas
jmp
pop
fdivrp
es
xor
cmp
fcompl
sarb
cmc
test
insw
add
popf
xor
repnz
jg
test
jl
das
add
lods
sbb
and
jno
push
push
mov
push
add
loope
pop
lods
das
int
add
sbb
test
cmp
xlat
pop
cltd
sub
cltd
lcall
lods
add
add
sub
or
cmp
xchg
sub
inc
ss
xor
xor
stc
mov
push
pushf
into
fs
xor
in
xor
inc
xchg
jle
stos
mov
xor
adc
add
xchg
pusha
insl
sbb
mov
adc
mov
fdivrp
daa
cmpsb
mov
mov
cltd
add
imul
pop
popa
lock
pop
in
aas
clc
ja
int3
xlat
lods
fsub
pop
fcos
adc
in
xor
inc
xor
dec
sbb
neg
xchg
sbb
movsl
and
enter
ds
jl
mov
aaa
cmp
inc
sbb
jp
mov
lcall
and
xorl
loope
test
je
je
and
or
jbe
shlb
dec
cmc
push
sub
ja
xor
add
mov
popf
lahf
xchg
and
mov
arpl
pusha
mov
or
shll
lds
xlat
xchg
dec
mov
stc
mov
movsb
fstpl
add
mov
popf
shlb
imul
or
and
inc
push
push
sar
and
cmpsl
test
dec
pop
hlt
xor
pusha
inc
outsl
outsl
and
aam
pop
popf
rclb
sbb
jg
clc
xchg
loope
pop
fnstsw
test
cmpsl
pop
and
sub
fsubrl
into
adc
push
add
sbb
lods
push
xchg
jmp
addb
mov
sbb
and
outsb
test
push
pop
push
lret
lds
cwtl
inc
addr16
dec
orl
cmp
mov
mov
push
jb
lret
xchg
adc
xor
xchg
sti
aas
and
push
pop
push
jo
sub
das
das
aas
push
lcall
test
inc
lods
sub
jo
mov
cwtl
aad
fdiv
cmp
das
adcl
lcall
inc
stos
imul
cld
mulb
and
pop
sub
fwait
mov
xchg
decb
add
ljmp
aad
das
pop
mov
inc
xchg
loop
xor
jae
outsb
xor
dec
and
decb
push
pop
cwtl
cmc
jne
mov
jge
jns
mov
imul
and
into
fwait
push
mov
aaa
dec
jg
mov
add
push
or
cmp
sub
sub
out
jmp
pop
mov
pop
dec
nop
es
rclb
and
dec
or
mov
sub
pextrw
test
pushf
imul
xor
push
mov
into
shrl
sbb
repnz
scas
cmp
bndstx
mov
jle
xchg
jnp
mov
aas
jne
mov
sub
add
aas
jnp
insl
pop
mov
and
sub
loop
not
aaa
add
or
mov
mov
push
shlb
add
mov
lcall
push
dec
daa
data16
call
js
dec
cmc
in
sti
inc
add
dec
xchg
jns
mov
push
int
and
hlt
sub
lret
leave
notb
imul
mov
pop
mov
cld
and
das
pop
jne
cmpsl
cwtl
pop
aam
jmp
adc
mov
fbstp
test
fnsave
mov
fs
sub
mov
jae
push
mov
jg
push
xor
test
or
mov
scas
inc
or
dec
jge
lahf
cmp
pushf
inc
pusha
lds
add
cld
xor
or
dec
sub
aas
aam
push
inc
test
xchg
cld
stos
insb
sub
push
hlt
inc
bound
push
mov
bnd
mov
mov
mov
jecxz
mov
ja
rorb
add
cmp
test
adc
and
fcomps
pop
into
add
fildl
roll
fisttps
push
sub
mov
jne
dec
cmc
mov
xor
in
xchg
lea
add
xchg
rcl
loope
nop
cs
stos
cmp
sbb
movsb
je
cmp
mov
out
mov
mov
fs
flds
jnp
cli
fdiv
pop
cmp
mov
xchg
cltd
ret
dec
in
mov
mov
inc
mov
xchg
insb
sub
testl
mov
sahf
pop
xlat
fwait
xchg
repnz
cltd
cmpsb
mov
push
fnstenv
repz
stc
out
testl
icebp
push
loop
mov
in
shl
add
jle
enter
cmp
test
xchg
nop
dec
pop
sub
xor
cmpsb
xchg
je
cltd
mov
loope,pt
rcll
push
aaa
and
and
out
sub
pusha
out
sbb
pop
sbb
cmp
and
cmpsb
hlt
ljmp
mov
mov
bound
push
int
scas
mov
enter
dec
faddl
cmp
xchg
roll
mov
imul
dec
sbb
push
scas
jle
push
xor
dec
xor
dec
xchg
mov
iret
into
cmc
add
inc
dec
mov
scas
push
ljmp
xor
gs
mov
cmpsb
sub
cmp
xchg
xchg
das
xchg
push
inc
jge
scas
lret
and
push
lcall
inc
repnz
repz
mov
hlt
dec
add
mov
fidivl
pop
pop
mov
or
xchg
jge
movsb
mov
push
inc
xchg
inc
and
fisubrs
sahf
sbb
mov
push
aad
shl
cmp
jae
pop
adc
fcompl
jo
mov
mov
je,pt
sbb
fnstcw
xor
dec
into
lods
jle
mov
xor
lods
test
fsts
pop
jne
or
into
loop
jmp
shrb
add
adc
jp
add
gs
inc
cltd
inc
add
mov
jl
lcall
cmp
sahf
mov
in
dec
ss
sub
stc
adc
cmp
and
movsb
or
push
mov
cmp
jmp
vminpd
movsl
sub
mov
frstor
arpl
pop
sbb
and
xchg
shrb
out
outsb
stos
mov
sti
xor
xorl
sbb
jae
cwtl
and
hlt
push
ficoml
mov
cmpsb
push
icebp
and
pop
jl
dec
aas
imul
shrb
imul
xor
pushf
aad
das
popa
jp
fwait
nop
rclb
push
enter
push
das
mov
cmpsb
out
push
ret
ret
mov
ficompl
icebp
inc
mov
shll
mov
popf
inc
cmpsl
lret
fsubr
xor
ret
push
popf
pop
push
lret
aam
cmp
and
mov
and
lahf
fwait
hlt
out
push
outsl
sub
dec
inc
pop
jmp
pop
mov
push
sbb
nop
jae
or
es
repz
jmp
pop
mov
or
sub
mov
imul
push
dec
adc
dec
mov
jb
outsb
rcll
repz
push
xor
push
lock
ss
adc
sub
or
sub
add
insl
aam
int
stc
popf
das
fstps
pop
or
ret
mov
pop
scas
add
pop
ficomps
in
and
adc
call
nop
shr
jmp
insb
bound
cmpsl
les
fiadds
aam
aaa
xchg
mov
jae
filds
mov
ljmp
fisttps
roll
bound
cmp
pop
dec
xchg
in
cmp
pop
pop
mov
outsb
sbb
xor
ja
cmp
pop
filds
xchg
loope
dec
popf
pop
jmp
jge
jge
rorl
stc
rcr
mov
mulb
addr16
mov
gs
inc
dec
out
push
inc
jb
clc
or
and
sbb
scas
xchg
mov
stos
shll
mov
push
shr
and
mov
xorb
loope
or
ja
outsb
inc
addr16
mov
inc
jo
ljmp
jecxz
or
dec
repnz
or
pop
imul
pop
addr16
enter
fldl
cmp
and
aaa
push
dec
mov
jp
and
roll
and
or
pop
mov
jl
insb
fnsave
iret
dec
insl
sub
xchg
ja
push
push
test
push
xor
scas
test
pop
mov
xchg
push
mov
lea
cltd
add
hlt
rorl
hlt
cmp
aam
arpl
call
pop
mov
ds
and
add
incb
negb
jmp
stos
inc
jp
push
or
daa
fnstcw
add
dec
leave
push
bound
movsb
xor
outsl
bnd
sbb
inc
mov
and
outsl
scas
lret
movsl
push
pop
shll
cli
jle
es
shrl
imul
push
loopne
dec
enter
les
lret
shlb
mov
in
push
aad
dec
add
push
mov
adc
add
mov
mov
rorb
std
jecxz
hlt
cli
push
or
mov
les
leave
sub
int
adc
push
pop
adc
xchg
pop
pushf
jns
jbe
fs
push
push
movsl
add
shl
mov
aam
xchg
pop
push
cwtl
cmp
mov
popa
loopne
imull
pop
loope
ficompl
adc
xchg
or
push
data16
movsb
in
test
push
jecxz
xchg
mov
xchg
xchg
push
push
sbb
adc
mov
nop
xchg
cwtl
add
xor
cmpsl
adc
dec
incb
sahf
scas
or
addb
fstpt
ret
int
cmp
loopne
mov
mov
xchg
pop
jbe
mov
test
lret
jecxz
leave
out
nop
repnz
outsb
popa
xlat
fcmovnu
stos
ljmp
push
jne
sbb
add
jo
pusha
xchg
adc
inc
pop
jp
std
nop
mov
dec
pop
cltd
fcompl
pop
jnp
jmp
insb
push
clc
insl
movsb
xchg
jae
sub
lds
int
lret
inc
mov
jbe
inc
adc
aam
imul
std
add
cwtl
test
scas
adc
insb
outsb
clc
adc
fs
inc
adc
mov
mov
xorl
testb
call
add
adcl
fs
lret
push
insl
push
xchg
lods
cld
dec
adc
xchg
lods
les
mov
dec
int
repnz
test
jp
push
sbb
shrb
mov
cmp
test
xchg
insb
loop
mov
xor
mov
mov
and
dec
push
jp
dec
or
push
dec
pop
dec
shlb
into
fwait
lcall
andb
ds
adc
or
lcall
enter
test
scas
pop
bound
or
mov
inc
mov
ss
jne
aad
mov
sbb
int
pop
and
add
sub
lods
rep
andl
add
add
je
sbb
cmp
ds
inc
mov
frstor
push
or
sbb
mov
xlat
aaa
test
popa
xchg
pushf
xchg
jg
xchg
add
test
cwtl
cwtl
mov
pop
adc
popf
add
or
cwtl
inc
fsubs
ret
jne
arpl
pusha
stc
mov
jp
mov
dec
and
call
jmp
ret
rcrl
int
dec
sbb
add
push
adc
mov
imul
mov
inc
mov
cmp
jne
cmpsl
fcompl
and
mov
sbb
bound
xor
jecxz
xor
fcmovbe
adc
xor
dec
pop
hlt
inc
pushf
and
mov
fistl
xlat
mov
aaa
mov
mov
cmp
add
inc
push
mov
leavew
dec
sbb
rorb
lahf
cs
mov
inc
mov
xor
lock
popaw
pop
pop
add
jne
dec
cmp
cmp
ret
lahf
imul
sbbl
sub
inc
jno
cmpsl
leave
mov
or
fimuls
push
mov
pop
pop
fsub
sbb
es
mov
outsl
bound
push
xor
dec
les
stc
pusha
mov
jge
mov
fstl
cmp
ss
sahf
lds
lahf
dec
pushf
ljmp
enter
fstps
mov
mov
jnp
popa
pop
repnz
or
cli
cmc
stos
dec
stos
xchg
incb
add
popl
sbb
adc
ja
xor
cld
lds
aam
in
mov
imul
cli
leave
and
cmpsl
bound
cs
jbe
inc
push
mov
mov
push
and
jle
ret
dec
mov
jl
sub
stos
shr
pop
push
dec
fsubs
mov
xor
cli
gs
fisubs
leave
fidivrl
jle
pop
das
lret
fdivrl
in
in
add
lods
in
mov
pop
in
mov
dec
data16
loopne
adc
sbb
adc
inc
rol
aam
cltd
iret
pop
jecxz
fwait
and
lods
adcb
jbe
inc
in
mov
les
push
ret
mov
mov
scas
push
jg
aam
jl
mov
mov
insl
push
les
pop
mov
sbb
cli
cli
outsl
push
mov
cltd
inc
pop
clc
mov
add
in
rcrl
push
mov
lock
repnz
jb
pop
shrb
mov
xchg
mov
insb
movsl
and
pushf
sbb
sub
inc
test
imul
jg
inc
xlat
test
pop
idiv
inc
pushf
sub
out
inc
cltd
and
dec
inc
cmpsb
fbld
movsb
shlb
ret
ret
xor
push
lds
or
dec
mov
pop
mov
outsb
mov
call
mov
rcll
lret
ficompl
xchg
sbb
shl
dec
add
mov
cmp
dec
sbb
std
pushf
sbb
dec
sub
addr16
mov
mov
lahf
sti
flds
dec
xor
and
mov
adc
andb
stos
mov
ljmp
out
adc
cmp
dec
sbb
push
inc
repz
aas
or
cmp
adc
inc
adc
mov
pop
into
scas
mov
dec
arpl
ficomps
xor
inc
test
pop
cli
lea
push
ja
jo
push
sub
int3
inc
push
in
outsl
sub
jle
and
jecxz
jmp
lret
lods
xor
push
dec
test
add
cltd
push
sbb
jnp
lods
das
jecxz
push
mov
pop
movsb
or
add
test
ret
mov
icebp
inc
mulb
xchg
cs
inc
lahf
int3
add
aaa
add
sbb
sub
or
or
xor
or
les
lahf
inc
leave
inc
push
xchg
xor
out
xor
adc
or
lret
and
insb
xor
mov
notb
jns
es
bound
mov
ffree
adc
insb
aad
leave
push
mov
mov
mov
and
adc
fwait
sbb
lods
lcall
scas
jl
or
outsl
cmovle
add
popa
ss
sub
mov
jb
fistpll
jae
testl
jnp
dec
js
xchg
xor
mov
stos
push
in
int
mov
mov
dec
shl
xor
lea
xor
dec
jle
cmp
outsb
sbb
out
and
push
lcall
lods
push
add
xor
inc
loope
mov
dec
push
xchg
jnp
loop
push
ja
insb
aaa
shl
fwait
stos
stos
std
mov
mov
push
push
imul
jb
arpl
outsl
out
movsl
mov
repz
cld
addl
mov
es
lret
dec
cmp
cmp
fnsave
mov
mov
jb
lahf
or
cwtl
sbbl
xor
jno
in
xor
push
dec
hlt
lods
leave
scas
aas
or
adc
add
dec
test
in
or
adc
js
fdivrl
adc
sub
into
ror
pop
mov
fnstcw
or
sbb
add
mov
xor
mov
pop
jp
sub
shrl
rcr
shrb
dec
add
or
ret
shlb
lods
or
inc
or
push
push
aam
push
loope
push
or
arpl
xor
adc
inc
rcll
icebp
mov
inc
andb
add
nop
xor
and
inc
add
lods
jb
or
mov
jnp
test
pop
and
xchg
mov
ja
push
popf
data16
scas
imul
or
cmc
mov
mov
aad
mov
xchg
xchg
mov
xor
sub
pushf
jmp
mov
popa
mov
xor
es
jae
jmp
mov
xor
repnz
xor
jbe
sti
inc
jb
ljmp
adc
mov
inc
push
inc
cltd
inc
rcll
in
aam
mov
lret
fwait
outsl
mov
mov
or
cmc
sbb
fdivr
cmp
push
and
push
adcl
movsb
mov
stos
adcl
gs
pusha
pop
sbb
inc
xchg
mov
mov
popf
cmp
xor
add
pop
cmc
ret
stc
mov
xchg
orb
push
add
dec
fdiv
inc
sbb
scas
pop
mov
sub
push
ret
out
and
jmp
add
inc
or
je
cmp
cwtl
add
mov
push
inc
push
lods
mov
push
inc
sahf
leave
lea
fwait
into
inc
push
sahf
push
call
sbb
inc
fwait
les
push
test
fs
jp
mov
arpl
icebp
decb
pop
aas
xor
and
mov
adc
andb
sub
int3
inc
mov
sarl
cmpsb
daa
fwait
adc
enter
dec
fcom
dec
call
std
dec
in
fmull
leave
cmpsb
fnsetpm(287
lret
lods
and
push
ds
inc
icebp
addl
pop
outsl
or
mov
stos
fld
fldt
adc
movsl
push
adc
cs
xor
imul
add
pop
sbb
stc
jb
rcl
mov
dec
pop
jns
mov
push
mov
pop
test
in
stos
shrb
and
add
or
mov
sbb
insl
or
aas
push
add
ds
and
or
insb
movsl
ds
add
cmp
cwtl
inc
cmp
out
test
sbb
cli
pop
test
imul
or
bound
loop
pop
cld
cmc
jle
lods
mov
mull
inc
inc
mov
cmpsb
div
xchg
call
cmpl
mov
fisttpll
leave
roll
add
pop
ret
mov
std
inc
lcall
xor
inc
xchg
xor
jl
int
ret
outsb
inc
dec
and
xchg
and
gs
in
and
scas
xor
and
xchg
daa
ds
icebp
in
xor
pop
ficomps
sbb
mov
xor
sahf
loop
mov
ret
and
mov
pop
call
dec
mov
test
sub
xor
fwait
pop
push
adc
push
xchg
ss
pop
movsb
cmpsl
aad
je
negb
push
mov
pop
push
pop
mov
test
dec
shll
into
sahf
sbb
jbe
mov
ljmp
xchg
cmp
sbb
in
adcb
cmp
xlat
mov
cmp
and
stos
call
in
fsub
jg
jb
fdivs
and
lods
faddl
dec
js
mov
cmp
and
clc
sbb
fneni(8087
mov
mov
mov
mov
cld
shlb
jns
int
sub
outsb
orl
pop
or
push
or
push
movsb
iret
push
lock
sbb
push
mov
cmp
mov
or
adc
dec
push
jp
lods
jmp
popa
leave
lcall
push
ds
mov
int3
popf
mov
rolb
ja
and
adc
clc
push
mov
pop
mov
or
mov
jp
negl
mov
or
sbb
loopne
icebp
add
mov
dec
sbb
xchg
out
inc
aaa
out
xlat
xor
or
add
inc
das
iret
push
int
mov
mov
xor
inc
fisubl
push
sbb
mov
mov
lahf
orl
push
loopne
addr16
adc
add
scas
inc
roll
std
sti
or
or
mov
and
xor
cld
mov
movsb
stc
push
out
inc
push
ss
outsl
ror
int3
and
pop
fdivs
sbb
lea
xchg
loope
sub
jbe
xchg
mov
xor
fmull
jne
stos
inc
hlt
adc
sub
lds
add
jbe
pop
addb
or
stos
adc
out
loope
xor
add
dec
or
push
aad
sub
iret
int
cli
mov
xchg
aas
cmp
push
hlt
jbe
xlat
dec
mov
shl
xchg
sbb
inc
adc
movsl
call
aad
repnz
rcrl
in
les
mov
jmp
pop
icebp
out
push
pop
adcl
paddusw
adc
pusha
pop
push
dec
stos
mov
lds
imul
fmul
sub
cmpsl
in
loopne
rcl
idivl
push
aad
adc
gs
and
fcomi
sub
stos
mov
daa
push
shrl
jno
mov
adc
test
add
scas
mov
adc
imul
push
and
mov
or
les
jl
stos
es
mov
inc
ret
jbe
jp
jmp
mov
push
stos
xchg
and
mov
fldcw
cs
std
mov
sbbl
or
xchg
jl
jp
sbb
lret
rcl
ss
xlat
dec
outsl
mov
scas
lock
add
sub
lahf
cmpsb
cmc
ret
sbb
test
lea
pop
test
sub
push
push
stos
and
and
in
inc
xchg
add
sub
insl
jmp
push
dec
lahf
ret
out
mov
in
rcrb
das
fstpt
js
ss
pushf
imul
sarl
xor
adcb
mov
sub
mov
into
icebp
pop
rolb
out
sub
cli
stc
je
sbb
into
shrb
rcr
pop
les
jmp
iret
ret
mov
sub
out
shr
nop
sbb
test
sbb
jno
ljmp
pop
or
mov
cmpsb
inc
sbb
pop
mov
mov
jo
and
jp
inc
lock
mov
mov
mov
sub
fs
mov
stos
fs
lods
add
sarl
pop
push
jo
pop
jb
jae
outsl
and
push
cmp
mov
mov
out
inc
mov
mov
add
divl
in
lret
cs
dec
out
arpl
inc
scas
jg
rcll
add
adc
push
cmp
pop
sub
stc
pop
movsb
mov
mov
inc
daa
aas
jg
sbb
lock
pop
cmpsb
out
iret
out
sub
rol
cld
sub
xor
xor
adc
arpl
or
repz
xlat
fucom
pop
arpl
push
pushf
int3
lret
or
into
jmp
mov
cmpsb
sahf
push
cmp
cmpsl
dec
cmp
push
mov
dec
mov
jecxz
add
mov
imul
pop
push
jmp
sbb
sbb
jb
mov
adc
bnd
ljmp
pop
outsb
xor
dec
outsl
add
mov
xchg
int
pop
lret
dec
in
scas
sbb
addr16
rorb
push
imul
clc
loop
outsl
jecxz
mov
mov
cli
inc
jg
insl
dec
xor
in
lock
nop
push
aaa
rolb
cmpsb
das
mov
das
loop
sbb
dec
pop
loope
daa
push
pop
dec
xchg
mov
sbb
jne
sub
jmp
in
sti
and
or
lret
dec
out
shll
cmp
cmp
in
outsb
adc
sbb
pop
pop
sub
loop
jbe
insb
pop
xor
icebp
into
sub
mov
repz
pop
fwait
jl
mov
xlat
pop
popf
out
data16
cs
insl
mov
jp
xor
das
or
xchg
and
in
int3
int3
popf
xor
pop
cltd
push
gs
mov
jae
aad
mov
rorl
lret
pop
add
nop
sub
mov
rcrb
in
pusha
and
out
je
and
xor
xchg
mov
and
or
movsl
shlb
sub
stc
add
lahf
cli
int
into
or
fmuls
jmp
lods
dec
notb
push
sti
in
mov
push
rorl
inc
push
leave
iret
stc
pop
mov
mov
into
push
jg
nop
jge
mov
cwtl
fdivs
pusha
shrl
pop
or
add
cmpb
cmp
inc
xchg
cmp
les
sarb
shll
mov
inc
aas
mov
xlat
sbb
xchg
xor
es
sar
cs
adc
xchg
push
cli
push
iret
mov
addr16
and
xchg
push
fists
in
ss
push
cld
ss
cli
push
int3
cmc
leave
pop
mov
aaa
mov
mov
incl
pop
mov
test
jp
lods
imul
mov
cwtl
gs
push
and
xor
xorl
in
dec
sti
push
daa
iret
pop
repz
or
push
jmp
loop
jle
subl
cld
push
or
cmp
and
xchg
sti
inc
cli
fldenv
mov
les
jle
xchg
mov
fwait
sbb
sub
aaa
cmpsb
ss
imul
pusha
or
incb
add
loopne
mov
outsb
shlb
adc
pop
cld
sbbl
clc
nop
jbe
inc
in
sbb
sub
in
dec
mov
dec
test
inc
sub
add
pusha
lock
mov
std
push
shlb
fnstsw
movsl
mov
push
jns
lods
in
fwait
dec
sbb
pop
jb
sbb
jns
dec
mov
sbb
pop
xchg
cmp
sub
xchg
inc
loope
jecxz
fs
sbb
fs
cmp
jecxz
jnp
dec
add
jge
subb
mov
lahf
rorl
fiaddl
sbb
faddp
out
xor
or
mov
or
outsl
out
out
loop
push
mov
sbb
adc
out
xor
lahf
int
clc
shl
jae
sbbl
imul
inc
addr16
xchg
add
cmp
and
xor
pop
adc
outsb
lock
pop
push
dec
dec
adc
enter
sub
lret
mov
insl
je
cmp
sub
ds
cld
mov
sbb
std
pop
pop
push
test
aad
bound
leave
pushl
outsl
xor
repnz
sbb
enter
push
or
mov
stc
xchg
ret
sarl
inc
andb
addr16
push
or
nop
repnz
icebp
pop
shl
pushw
insb
es
das
mov
sbb
fadd
xchg
push
clc
jae
iret
imul
test
sbb
clc
sub
test
inc
cmc
or
push
les
adc
xchg
or
mov
xchg
jbe
fmuls
jmp
cmp
and
das
popa
push
sub
shrb
mov
inc
arpl
xor
push
dec
inc
sub
movb
cs
out
je
pop
sub
shrb
mov
shrb
xor
sbb
inc
insb
mov
pop
mov
repz
inc
jbe
notb
sahf
out
lret
sbb
mov
scas
lcall
jno
cwtl
cltd
add
and
xor
inc
frstor
mov
inc
mov
lret
cwtl
fldt
in
vpsllq
adc
cmp
mov
jmp
lahf
xchg
ret
jmp
jns
mov
push
std
xor
dec
jns
push
shll
scas
mov
sahf
pop
push
xchg
sarb
xchg
sbb
sub
mov
inc
movsl
inc
inc
add
cmpsb
mov
lods
and
movsl
ja
mov
mov
mov
mov
and
xor
fmul
int
pop
jmp
scas
pop
test
mov
sahf
jns
fnsave
adc
std
repz
cmp
ja
bnd
orl
mov
lock
inc
mov
ljmp
jle
es
inc
push
hlt
fwait
mov
dec
and
mov
es
jl
mov
push
xor
in
push
jp
xor
inc
xlat
and
mul
xchg
sub
mov
cmpsl
clc
out
inc
cmp
bswap
sub
pusha
add
aad
sbb
xor
cwtl
push
movsl
mov
cmc
mov
mov
movsl
jns
nop
addr16
mov
or
mov
loope
mov
pop
daa
test
mov
mov
je
loope
add
lods
aas
sub
sbb
das
inc
jp
mov
aam
jg
jbe
xchg
jae
cli
and
arpl
fmuls
out
mov
nop
jg
sub
js
dec
dec
pop
sbb
adc
mov
mov
add
mov
negl
xorb
push
lcall
notb
aaa
xchg
sub
cmp
arpl
and
push
arpl
sub
es
out
stos
inc
dec
inc
dec
xchg
jp
pushf
and
jnp
inc
adc
add
or
imul
cwtl
aad
mov
int
ficoml
popf
pop
dec
daa
sbb
push
cltd
repz
mov
stc
cmpsl
mov
jbe
inc
mov
mov
dec
push
inc
cmp
sti
outsb
stc
std
lock
or
nop
lea
cmp
in
mov
int
mov
pop
pop
fistpl
enter
xchg
inc
mov
lahf
and
icebp
mov
jg
or
add
jno
mov
movsl
test
rclb
adc
inc
xchg
inc
test
or
test
push
test
pop
outsl
mov
mov
inc
mov
mov
scas
incl
cltd
add
jecxz
aad
dec
jecxz
pop
icebp
test
dec
rorb
dec
jae
sbb
flds
stos
repnz
or
push
add
loope
scas
rorb
adc
rorb
test
shlb
outsb
jmp
arpl
cmp
xor
push
adc
cld
insl
cmp
xchg
rorb
shll
and
jne
push
adc
in
loope
les
in
push
scas
jbe
jg
loopne
ret
mov
xchg
sbb
mov
mov
cmp
pop
xchg
shll
jbe
push
pop
fisubs
adc
push
es
ret
cs
inc
pop
jo
aaa
jecxz
push
imul
mov
jbe
daa
jge
mov
push
arpl
das
mov
pushf
shrb
outsb
push
popf
mov
arpl
mov
insb
add
fwait
push
mov
mov
cmc
sarb
in
icebp
rcrb
fimuls
and
pusha
addb
add
cwtl
mov
in
ret
sbb
add
mov
sub
mov
xor
divl
dec
pushf
dec
cmp
cvttps2pi
xchg
roll
addr16
mov
orb
pop
mov
fimuls
jb
fildll
cld
test
jge
les
or
or
xorb
jp
add
pop
repz
jbe
ficoms
ret
insb
xor
and
repz
add
xor
jle
imul
arpl
sbb
addb
adc
in
stos
sub
into
and
sarl
xchg
imul
cmp
mov
in
xchg
mov
stos
adc
mov
xor
dec
int
and
jmp
ja
pop
repz
rclb
xor
push
mov
sbb
dec
orl
xchg
into
mov
imul
jmp
std
cmp
lahf
or
js
fbld
mov
add
pop
lods
mov
add
fsubrs
jp
jo
add
xchg
mov
insb
push
jb
mov
mov
out
sbb
jmp
movsl
setnp
in
pop
cmp
arpl
cmp
pop
rcrl
sub
out
popl
pop
out
sbb
cmp
mov
popa
sub
inc
cmpsl
mov
clc
rorl
sbb
mov
xor
cld
push
fstpt
aad
jmp
or
movsb
leave
into
subb
sbb
mov
loop
and
xorb
pop
cld
int
jp
sub
adc
or
jae
add
sbb
mov
xchg
imul
pop
cmp
mov
icebp
xor
adc
cmc
mov
pop
cli
or
xor
mov
push
pop
flds
test
push
pop
ret
jno
out
sbb
push
test
add
xor
sub
cwtl
add
jge
jmp
xchg
clc
leave
jae
sti
insl
mov
mov
mov
insb
push
int
and
jle
sub
push
dec
ret
addl
fwait
out
inc
lret
sub
xor
adc
inc
push
ljmp
push
cltd
ud2
ss
out
sbb
add
and
and
lcall
pop
push
sti
or
lds
arpl
xlat
mov
insb
loopne
icebp
xor
mov
inc
cmp
mov
dec
push
pinsrw
inc
movsl
mov
jae
cmp
or
mov
insl
or
ds
pop
into
jmp
xor
mov
lcall
popa
sbb
mov
xchg
push
jb
adc
iret
imul
sar
cltd
inc
xchg
mov
mov
sub
cmc
jae
cli
mov
insl
aaa
dec
sti
mov
les
insb
rcl
loope
mov
mov
pop
int3
dec
pop
or
pop
pop
dec
adc
cld
movaps
aad
testl
aam
std
or
inc
and
loope
int
ja
xchg
push
in
aad
das
ffree
pop
cmp
aad
adc
cltd
xor
out
push
int3
mov
adc
test
xchg
in
adc
jb
fsts
or
pop
cmc
jle
scas
xchg
inc
mov
mov
push
mov
popf
fucomip
sbb
mov
imul
sub
lds
mov
xchg
inc
mov
rcl
adc
out
xchg
sbb
push
aas
in
iret
lidtl
mov
jg
sub
push
sub
cld
jo
shrl
daa
cmp
jecxz
sub
pusha
cmp
jg
jle
aad
test
in
pop
mov
mov
adc
mov
cmp
enter
xchg
mov
aam
rol
xor
jmp
jnp
sti
arpl
dec
mov
sahf
arpl
jb
out
inc
xchg
daa
daa
sahf
loope
cmpb
adc
xor
mov
and
in
leave
insb
pop
mov
inc
loop
cld
clc
cwtl
lcall
mov
mov
ret
lahf
in
jle
jl
lods
xor
fisubrl
in
sbb
dec
mov
int3
es
or
aas
push
push
mov
fs
stos
ret
es
aas
adc
sub
and
push
outsl
jge
loop
data16
sub
xchg
mov
inc
pop
dec
jle
scas
mov
cmp
out
arpl
sub
ret
sub
cmp
ror
lret
arpl
mov
fisubrl
push
aam
xchg
pop
stos
cmp
movsb
sub
push
pop
mov
sub
call
dec
fdivr
pop
pop
jge
xor
xlat
mov
in
test
es
dec
add
lock
mov
mov
xchg
sbb
pop
sbb
cmp
jne
fdivl
xor
inc
mov
cld
mov
ljmp
mov
fs
outsl
xor
outsl
push
adc
xchg
pop
mov
and
aam
aam
push
movsb
loope
push
fcom
outsl
in
outsb
push
js
push
pop
adc
bound
push
fldenv
pop
mov
int3
insb
sahf
xchg
adc
outsl
imul
imul
int3
fnstcw
pop
or
cld
in
inc
and
xchg
mov
mov
add
mov
mov
rclb
call
shll
mov
lret
outsb
imul
and
pusha
dec
xor
mov
jmp
test
imul
jbe
adc
push
fidivl
daa
mov
mov
rcr
mov
or
jne
mov
cs
fcoms
andb
pusha
nop
mov
push
xchg
ficoms
and
adc
adc
pop
hlt
mov
aad
stos
xor
stc
mov
fdivr
out
add
in
pop
adc
push
rol
fcompl
cmc
imul
in
jns
ja
jbe
movsl
xor
jo
xchg
dec
add
adc
add
jl
outsb
test
cs
jne
adc
dec
inc
add
sbb
les
rcr
jne
cli
or
int3
sti
fimull
adc
mov
push
loop
jns
out
add
or
dec
sbb
sbb
enter
add
add
ja
and
push
xor
jecxz
mov
inc
lods
mov
dec
lahf
cmp
jecxz
push
push
into
std
cwtl
pop
fwait
add
adc
sbb
jle
cmp
or
iret
and
stos
pop
jns
enter
jne
out
arpl
std
sub
add
mov
and
xchg
mov
inc
jnp
cmp
cld
sub
add
cmc
xchg
icebp
mov
mov
ja
add
rcl
jmp
lcall
and
mov
fistpll
repz
mov
or
mov
jae
aam
push
cltd
jnp
xchg
push
inc
lret
ret
psrad
aaa
mov
cmp
adc
call
imul
cmp
add
test
inc
cld
adc
pop
or
bound
addr16
jle
pop
mov
movsb
add
xchg
dec
pandn
inc
dec
lret
pop
mov
cmp
movsl
out
add
cs
shll
sub
adc
mov
iret
sub
cmp
xor
jecxz
push
movsl
loopne
dec
mov
push
pusha
jmp
mov
enter
popf
fcomps
add
ljmp
mov
lcall
jno
stos
lret
push
adcb
inc
push
dec
push
sub
js
leave
sahf
ret
shlb
sub
pop
jnp
int
ret
std
fists
inc
ss
jns
dec
test
pop
adc
dec
jno
arpl
and
addr16
dec
or
pop
mov
mov
fnstcw
mov
insb
sahf
push
adc
je
int
cwtl
je
fistps
popa
cmp
pop
sub
hlt
ljmp
inc
mov
test
rorb
inc
or
mov
in
mov
rorb
or
mov
xor
xchg
rcll
testb
mov
pop
mov
loope
outsl
aaa
nop
dec
xlat
jmp
lret
jns
jo
cli
xor
or
jecxz
data16
mov
jnp
add
pop
lret
xchg
fs
xor
xchg
test
test
movsl
or
inc
jl
fmul
xchg
ret
fdivs
pusha
icebp
loope
jmp
ror
cmp
clc
adc
inc
mov
lcall
mov
and
jbe
xchg
leave
vsubpd
test
shr
adc
divl
idiv
dec
adc
add
cmc
pop
cmpsl
mov
fstpt
leave
push
ficompl
sub
out
pop
andl
xchg
pusha
pop
pop
sub
loopne
lfs
push
dec
mov
push
addr16
pushf
dec
sbb
mov
mov
pop
insb
mov
in
add
mov
mov
sbb
lcall
xchg
xchg
in
mov
repz
movsl
mov
data16
divb
add
fsubr
in
inc
jle
push
add
movsl
in
jo
pop
mov
cld
add
cmp
enter
sub
lods
pop
cld
jl
test
mov
xor
push
aas
add
test
mov
rol
notl
xlat
ds
ret
pop
enter
pop
mov
dec
dec
adc
aaa
es
and
ret
and
pop
xchg
xchg
repnz
out
aam
lods
pusha
inc
popa
loope
xchg
ja
mov
aaa
pop
mov
xchg
and
pop
mov
jmp
fmull
push
arpl
int
pop
inc
cltd
out
jb
out
in
inc
jne
gs
mov
rcr
pop
mov
xchg
sbb
bound
adc
out
hlt
mov
push
dec
inc
adc
inc
add
popf
pop
and
jbe
test
cmp
fstl
dec
in
jmp
mov
ret
int3
push
pop
adc
gs
mov
stos
xchg
cltd
inc
jmp
cmc
pop
movsb
fbld
popf
fs
out
faddl
rolb
pop
pop
mov
sbb
mov
pusha
das
lahf
jecxz
out
pop
cmp
ret
or
jecxz
cmp
fs
mov
data16
lcall
push
mov
cltd
addr16
scas
xor
and
xchg
cmp
dec
push
lods
fcoml
lea
xor
lahf
cmp
push
dec
jno
pushf
stc
arpl
jno
imul
repz
sbb
cmpsl
scas
int3
decl
cwtl
ljmp
fisttps
movsb
mov
movsb
mov
es
jnp
cmp
mov
sbb
push
dec
call
push
or
jle
test
pop
les
xchg
xchg
cltd
sub
std
jno
or
pop
mov
or
pop
and
cmc
fistl
stos
repz
test
push
shlb
fistpl
subl
or
test
push
or
sub
sahf
and
pop
dec
out
xor
inc
arpl
mov
fmuls
lcall
dec
inc
mov
je
add
lods
mov
jl
lds
cmp
cwtl
lret
in
fildl
or
jecxz
in
cwtl
cmp
mov
lret
loope
pop
neg
xor
test
cs
adc
pop
jmp
sbbl
imul
fcoml
js
and
mov
out
cli
fwait
scas
test
sub
add
xor
addr16
xchg
mov
popf
fs
call
cwtl
sbb
fwait
lods
adc
movsb
cmp
push
or
pop
out
enter
sbb
setl
popa
pop
cmp
data16
cmc
mov
in
cmpsl
cld
sbb
cltd
dec
ficoms
mov
pop
cld
sub
in
loope
inc
mov
cmp
popl
pushf
sbb
mov
dec
jp
jmp
in
call
sub
sub
fistpll
out
rorl
mov
sub
or
fsubrs
in
jp
icebp
push
sbb
stos
and
adc
filds
bound
mov
test
test
add
inc
sub
sub
jb
rcl
cmp
enter
xchg
push
fs
call
enter
xor
lods
hlt
into
mov
cmp
push
fisubl
xchg
mov
fsubrl
es
cmp
xchg
pop
rorl
sbb
cmp
jnp
inc
add
adcb
sub
iret
xor
out
xchg
and
addl
jp
pop
cwtl
loopne
arpl
out
mov
jmp
leave
add
std
fs
push
leave
mov
ja
das
aad
sahf
pushl
out
shl
xor
je
lock
addb
jecxz
int3
ljmp
lds
test
mulb
in
xor
or
sbb
xchg
adc
call
lea
jmp
inc
xor
int3
out
scas
adcl
ljmp
cmp
add
cmp
xor
pushf
xorb
push
cmp
xor
lock
add
popa
pop
sub
lock
loope
cmpsl
into
cli
stos
mov
std
stos
mov
mov
repz
frstor
pop
loope
jo
mov
and
je
pop
fcmovu
and
std
popf
in
push
cmp
sahf
lret
xchg
ljmp
mov
fwait
xchg
mov
cwtl
cs
xchg
cs
inc
jbe
fidivl
mov
adc
pop
in
adc
adc
and
lods
aam
add
insl
popa
cmp
subb
call
enter
or
dec
xchg
lds
adc
cltd
add
inc
cmp
and
push
xor
mov
punpckhwd
inc
mov
lret
pop
pop
lods
and
mov
sahf
mov
cmc
divb
sub
mov
mov
push
mov
cmp
gs
mov
sub
icebp
iret
mov
test
push
add
ja,pt
aam
adc
push
repz
inc
and
lcall
pop
inc
lcall
adc
sbb
sbb
dec
mov
jmp
inc
xchg
or
or
add
sub
das
sub
add
fcoml
imul
adc
mov
imull
mov
dec
icebp
inc
push
jo
jecxz
insb
mov
xchg
cld
pop
sbb
pop
popf
ds
adc
rcrl
and
dec
push
in
mov
push
fdivr
aad
test
xchg
sysenter
call
cmpsl
or
lret
sbb
xchg
xchg
adcl
stos
nop
sbb
lret
test
xor
sub
xchg
scas
movsb
data16
fistl
pop
push
jno
and
leave
fists
std
repnz
xor
add
mov
rcl
sbb
lds
iret
mov
jmp
mov
cmp
and
and
xor
outsl
mov
outsb
push
aaa
iret
clc
add
sti
dec
pop
inc
cmp
cwtl
sub
push
fs
fimuls
aam
mov
xor
mov
pop
insl
jae
in
ret
fs
test
ja
push
mov
jecxz
clc
jl
add
aaa
xchg
xchg
aas
and
mov
inc
sbb
fdivrl
jge
sub
insl
mov
repnz
ljmp
push
adcb
sbb
and
push
cmpl
sbb
je
pop
push
outsb
push
int3
hlt
jns
inc
xor
fsubl
out
nop
inc
and
jecxz
les
lret
movsb
dec
or
and
xor
sti
xchg
mov
jbe
icebp
das
movsl
sbb
ffree
aad
or
sbb
mov
notb
ja
pop
sbb
adc
mov
jp
js
notl
sbb
bsf
mov
scas
sahf
pushf
push
enter
push
mulb
pushl
mov
inc
xchg
jo
gs
addr16
pop
loope
cmp
lods
int
lods
mov
xor
adc
jns
jnp
dec
cmc
sti
xor
out
mov
push
pusha
jmp
setae
xchg
imul
mov
xchg
inc
stos
push
pop
jnp
hlt
loop
cli
orl
dec
int3
inc
inc
test
or
push
mov
outsb
jg
add
dec
jge
mov
orb
dec
pop
and
in
push
loope
enter
inc
xchg
into
into
cmpb
cmpsb
int
jecxz
xor
pusha
test
jp
int3
jae
out
rolb
cld
icebp
shrb
xor
das
ljmp
mull
sub
mov
pop
fsts
testl
mov
sub
push
xor
into
mov
inc
lea
daa
ds
xor
ror
push
mov
cmp
lcall
mov
xchg
add
cmpsb
pusha
into
mov
add
nop
movsl
mov
jmp
xchg
jl
loop
pop
ss
pop
popa
testl
adc
lret
adc
scas
das
inc
jp
loop
cld
fisttps
mov
mov
adc
and
rcrl
mov
xchg
leave
or
mov
mov
sbb
mov
outsl
and
lret
adc
scas
aas
jmp
icebp
mov
loopne
enter
test
push
jne
mov
mov
rcrl
stos
jne
inc
lods
ret
lahf
clc
sub
sar
mov
stc
adc
add
mov
imul
in
int3
sbb
enter
adc
fwait
nop
sub
jge
sti
inc
xchg
adc
fdivs
push
mov
xor
jbe
mov
mov
out
cmpsl
xor
sbb
movsl
inc
push
outsl
mov
mov
push
xchg
sbb
sub
or
jne
pop
sub
push
pop
and
inc
pop
xor
out
lret
jmp
shrb
xchg
ss
xchg
inc
fisubs
jbe,pt
cld
or
insb
orb
lret
iret
mov
outsb
mov
mov
cmp
scas
inc
int
sbb
xchg
pop
pop
pusha
aas
and
pop
addr16
cmp
or
aas
jns
sti
mov
xchg
cmp
fxch
push
imul
dec
push
pop
sahf
mov
sub
loop
lods
adcl
dec
xor
sarb
jae
dec
sbb
repnz
and
jns
ret
xchg
dec
pop
test
ret
out
mov
pop
dec
add
cld
lods
sub
mov
mov
rorb
and
sbb
jmp
in
outsb
enter
popf
lea
add
jecxz
fbstp
inc
mov
inc
push
testb
test
xor
mov
pop
mov
cmp
fwait
call
mov
jmp
adc
dec
pop
in
add
xor
cmpsb
sub
jnp
xor
es
cmp
jp
push
jno
pop
sbb
and
cs
pop
arpl
ss
ficomps
in
ds
fidivrl
and
inc
pop
das
jae
jbe
addr16
clc
inc
aad
mov
in
jbe
mov
push
jle
jmp
fidivl
ljmp
popf
sbbl
ss
xchg
add
jne
jmp
sahf
ss
push
push
jbe
sub
inc
mov
pop
out
aaa
dec
mov
mov
lock
popa
loope
xor
loope
xor
movl
faddl
das
jne
adc
jbe
subb
push
mov
ja,pt
mov
int
cmc
add
cld
pop
cld
nop
jl
sub
push
pop
push
repz
and
dec
xchg
fbld
mov
ss
inc
pop
sarb
xchg
mov
lret
mov
jmp
dec
mov
push
daa
cmpsb
out
push
inc
sub
xor
int3
popf
pop
ljmp
xchg
sub
xchg
xor
addl
rclb
popa
out
imul
sub
lret
in
sbb
or
stos
in
jge
rol
push
std
pop
arpl
lcall
roll
push
ljmp
data16
add
ret
lods
and
cmc
fistps
popf
outsl
insb
mov
mov
dec
xchg
xchg
dec
push
dec
jns
dec
pop
adc
mov
movsb
in
aaa
mov
push
mov
in
cs
mov
mov
jns
push
ljmp
ds
cmpsl
es
and
and
inc
ja
inc
add
or
cmp
mov
inc
sub
cmp
cmp
out
call
pop
inc
jmp
movsb
adc
pop
lods
cmpsb
inc
test
sbb
adc
or
jecxz
adc
lods
mov
pop
cmpsb
or
mov
mov
inc
pushl
das
icebp
pop
add
fmul
push
pop
sub
bound
and
subb
bound
stos
out
imul
adc
sub
jns
sub
push
mov
pop
sub
mov
subl
call
pop
dec
cmc
aaa
mov
call
mov
lret
add
pop
ffreep
fbld
jl
pop
fadds
push
mov
jbe
push
push
repz
or
mov
mov
xchg
into
jb
pop
xchg
iret
scas
faddl
push
arpl
fs
pop
jno
lods
ja
dec
pop
icebp
outsl
insl
mov
jp
add
imul
lods
and
mov
sbb
loopne
leave
fnstcw
jae
sub
scas
adc
mov
add
lcall
cltd
or
jmp
cmp
jno
mov
cmp
pop
xor
sbb
mov
mull
cltd
int
daa
add
or
add
cs
and
insb
xchg
pop
mov
out
jp
sbb
pushf
cs
arpl
mov
mov
sbb
push
into
mov
outsl
sbb
fcmovne
xchg
jp
add
cli
test
mov
sbb
push
sbb
lret
sbb
enter
xchg
sahf
xlat
sbb
mov
push
out
into
add
test
cli
mov
repnz
out
sahf
cmp
mov
mov
outsb
sub
cmpsl
mov
add
pop
jl
push
pop
arpl
into
shlb
pop
mov
mov
test
mov
pop
dec
je
imul
js
mov
adc
shlb
pop
xchg
mov
dec
push
repnz
mov
dec
jb
xor
inc
jb
fstl
cmp
xor
dec
mov
into
adc
inc
jg
xor
cli
jecxz
xor
mov
dec
or
int3
or
adc
inc
xchg
jo
pusha
lea
aaa
hlt
aas
and
in
mov
inc
fwait
mov
frstor
aad
aad
int3
pop
fnclex
jmp
scas
mov
mov
int3
stc
pop
lods
jns
rcrl
lahf
fidivl
xchg
inc
cmp
xchg
mov
sahf
gs
mov
sub
push
adc
rcrl
mov
jp
mov
pop
lods
add
xor
ret
scas
add
lea
js
xor
sub
and
mov
rcll
in
xor
jecxz
or
and
xchg
push
jmp
mov
dec
insl
test
jg
or
negl
mov
shll
mov
mov
popa
data16
pop
push
test
cld
mov
xchg
add
pop
test
stos
dec
push
and
pushf
nop
bound
test
fldcw
std
out
pop
mov
jnp
mov
and
aaa
pop
addl
adc
fdivrp
jbe
lock
dec
add
gs
dec
push
inc
enter
jl
cmpsb
xchg
dec
push
push
mov
orl
adcb
cmp
and
and
adc
lds
mov
test
mov
jno
gs
enter
scas
jbe
stos
mov
sbb
dec
dec
lea
push
push
push
dec
inc
xor
inc
inc
jle
ffree
outsb
or
xor
add
in
sub
jb
popf
imul
movsl
in
mov
loop
add
pop
and
sbb
in
out
inc
xchg
popa
ret
pop
popf
pop
movsl
pushf
jle
popf
push
dec
popa
popl
popf
aas
jl
mov
insl
jno
int3
les
popf
mov
shrl
stos
jle
xchg
or
sar
inc
sahf
sbb
ret
lret
dec
cmpsb
xchg
int3
outsb
fs
fcomps
shll
sysret
mov
insl
sub
mov
outsl
lahf
sub
popf
dec
add
aad
ss
mov
cmp
fsubr
imul
mov
or
push
xlat
jae
push
test
cmp
out
jae
cmp
pop
in
mov
mov
testl
outsb
cwtl
push
fadd
jge
jbe
in
hlt
cmpsl
bound
or
xlat
or
call
add
aam
cltd
pop
fs
cld
mov
xchg
inc
icebp
pop
andl
js
in
or
ljmp
hlt
pop
add
push
cmpsb
fstpl
jge
sub
push
lcall
lret
aas
sub
inc
xor
aam
scas
adcb
and
jb
adc
inc
inc
jge
pop
mov
std
and
test
dec
inc
mov
ret
clc
mov
mov
int3
add
sbb
push
hlt
std
push
adc
mov
mov
out
and
ror
and
movsb
push
negl
xchg
and
add
ficoml
mov
xor
push
test
ud1
test
iret
leave
popa
sub
aad
mov
into
fidivl
or
xchg
mov
xchg
in
pop
dec
sub
and
sbb
aad
inc
pop
movsl
pop
and
pop
repnz
mov
add
sti
jbe
jle
lcall
in
jo
cld
jae
scas
add
dec
mov
ds
cmp
jl
repz
push
cmp
mov
enter
inc
pusha
fisttps
ror
popf
push
adc
push
fdivs
bound
inc
dec
jg
push
mov
xor
clc
stc
mov
jg
scas
popf
bound
push
adc
fstps
sub
mov
dec
test
mov
push
jg
jmp
shrl
xlat
cmp
mov
test
lods
sbb
mov
jl
push
jns
lret
insl
adc
dec
adc
inc
lcall
mov
mov
imul
out
xor
push
ret
imul
lock
repz
or
dec
pushf
push
push
xchg
scas
mov
or
loope
pop
stc
pusha
xchg
sbb
subl
or
xor
sub
and
popf
or
inc
in
cmp
jge
test
loope
sar
popa
leave
pushf
jmp
dec
xlat
lahf
mov
xchg
sti
idiv
das
bound
dec
daa
dec
stc
data16
pop
xchg
xchg
mov
add
in
pop
aad
scas
adc
out
loopne
xor
push
xlat
mov
adc
mov
fs
scas
xor
and
pushf
loopne
pop
push
dec
and
cmp
fmull
xor
sti
std
jge
loope
std
jmp
in
pop
mov
ret
dec
cmp
int3
jb
push
fistps
xor
or
xor
movsl
movsl
sbb
test
pop
iret
enter
add
pop
std
add
lcall
or
inc
adc
mov
lds
add
jmp
push
les
push
push
popa
xchg
or
test
jbe
mov
in
and
jne
jecxz
lods
cmp
out
mov
js
pop
iret
addr16
push
mov
mov
push
dec
addr16
push
xor
mov
je
mov
push
movsl
pop
cmp
ss
pop
jp
adc
movsb
pop
cs
fwait
fs
aas
insl
adc
out
mov
cmp
cmp
outsl
dec
clc
inc
sub
icebp
leave
sbbl
cmp
sub
fsubr
sub
mov
push
icebp
lret
jmp
dec
ljmp
adc
and
mov
push
inc
cmp
sub
leave
cmp
mov
add
int3
arpl
data16
mov
sub
int3
cmp
jmp
and
or
in
mov
xor
ja
int3
inc
sbb
stos
and
in
js
addr16
hlt
out
jbe
jp
shrl
xor
mov
sbb
xchg
cs
imul
mov
xor
sbb
enter
js
mov
int
jo
xchg
test
jnp
push
movsl
popf
xor
ljmp
jno
lcall
in
ja
popa
add
mov
das
mov
lcall
fisttpll
ret
mov
mov
int
push
aas
mov
push
fdivs
pop
jns
mov
sbb
dec
sti
jnp
sbb
outsl
mov
adc
sbb
inc
sbb
sbb
xchg
add
js
add
ja
or
jl
sti
jnp
rcrb
mov
push
imul
inc
test
pushf
and
cmp
sub
xchg
jbe
mov
pop
push
ss
mov
xchg
or
dec
push
das
jae
dec
out
loopne
sub
jp
notl
jmp
enter
sub
or
pop
lock
cs
stos
insb
cmp
and
cmp
scas
mov
pop
xor
dec
cltd
mov
xchg
pop
mov
lods
rcrb
or
adc
lcall
sub
mov
adc
inc
je
popa
add
xchg
out
xchg
dec
roll
mov
or
stos
pop
sub
mov
pop
pop
in
mov
inc
and
aam
dec
enter
movsl
jge
and
inc
fistpll
jmp
mov
adc
pop
dec
and
push
cltd
jl
out
sub
ret
es
arpl
and
or
sub
lods
or
aam
mov
push
ret
jae
pusha
hlt
stos
cltd
insb
divb
mov
leave
mov
repz
sbb
popf
mov
adc
in
sbb
ja
jle
popa
adc
int
xchg
lcall
je
pusha
inc
push
mov
cltd
dec
xchg
mov
cli
xchg
fldl
sbb
sub
mov
addb
bound
add
test
push
sub
mov
adc
fstpl
and
push
enter
lods
dec
mov
and
jb
push
mov
lods
mov
out
jno
pop
mov
das
insb
scas
xchg
outsb
jl
xor
lea
fisubrs
dec
jle
mov
orb
jae
mov
iret
add
cmp
fstpl
stos
cmc
lock
inc
push
ja
push
jecxz
in
push
int3
out
shrd
push
imul
pop
stos
mov
fdivs
pop
pop
fistl
cmp
pop
out
daa
int
cs
jmp
xchg
inc
and
js
movsl
ja
xchg
add
fmull
add
comiss
or
or
les
mov
push
loope
lret
out
mov
sub
lret
xor
inc
mov
outsl
fisubl
movsl
or
jp
orl
cmp
xchg
loopne
stos
xor
scas
in
inc
inc
lret
arpl
push
adc
sbb
dec
aad
xor
cmp
ja
mov
stos
or
sahf
jnp
jns
xor
rol
mov
repz
std
rol
dec
or
fdivrl
sub
fnstenv
mull
mov
jge
enter
inc
jmp
sarl
cmpb
mov
xchg
fisubs
add
arpl
and
inc
mov
rcll
or
push
mov
push
and
js
mov
nop
and
pop
or
add
test
cmp
or
or
mov
out
mov
outsb
and
cmpl
roll
in
test
cmp
sbb
sti
and
ljmp
pushf
clc
sahf
js
int3
mov
jge
mov
push
mov
adc
add
faddl
cmpsb
jns
in
jo
aam
sbb
or
push
and
out
out
lret
push
bound
mov
mov
push
addb
movsb
push
sti
daa
cmpsl
shll
stos
adc
xchg
add
dec
cmp
lods
sahf
stos
andl
movsl
inc
mov
dec
cmp
add
adc
xchg
add
ljmp
push
subl
aad
cwtl
jne
or
jge
dec
psubsb
push
repz
mov
aad
pop
mov
sbb
push
xchg
or
xchg
bound
inc
jb
stc
jmp
mov
or
hlt
or
das
mov
add
or
int3
in
push
lcall
pop
xor
push
jb
stos
mov
push
lcall
loopne
jl
jmp
ret
stos
insb
fucomp
jmp
iret
stos
jmp
inc
mov
lahf
or
enter
mov
rcr
sub
mov
sbbb
js
adc
int3
sub
aam
test
fcomps
push
dec
sub
jecxz
scas
sarb
nop
int
and
mov
mov
clc
jmp
sti
test
and
in
adc
mov
das
lods
xor
js
pop
push
cmp
aaa
inc
jle
push
scas
jg
dec
loopne
mov
int3
cld
inc
shr
mov
invd
add
int3
mov
sar
shll
mov
cmp
xchg
dec
lret
mov
inc
mov
mov
je
roll
jbe
mov
dec
outsl
loopne
shll
popf
sub
faddl
pop
test
lahf
mov
push
test
insb
dec
scas
mov
bound
mov
push
mov
shrb
jnp
push
mov
enter
sti
mov
mov
sbb
int3
loopne
pusha
repnz
stos
lock
sbb
mov
loope
mov
mov
jns
push
push
xchg
shll
dec
scas
mov
rorb
int
jg
pop
pop
xchg
dec
and
test
sbb
xor
dec
psubq
inc
push
adc
rol
fidivl
scas
jp
mov
shr
mov
adc
ret
cmc
adc
ret
inc
mov
mov
repnz
call
sub
lahf
dec
or
xlat
in
inc
mov
cmpsb
in
inc
inc
enter
jmp
out
call
rcr
sbb
sarb
das
int
fidivs
dec
jge
sbb
sbb
mov
cmp
ret
movsl
push
in
lret
sbb
push
pop
in
and
test
popa
pop
pusha
mov
jnp
pmulhw
push
or
ja
mov
xchg
cmpsb
or
movb
scas
push
fldt
andl
in
inc
out
ss
in
mov
mov
rcl
inc
inc
jmp
scas
xchg
std
and
mov
adc
mov
test
mov
push
mov
hlt
mov
addl
jp
pop
pop
xchg
sbb
sub
xchg
bound
stc
sub
lahf
popf
daa
cmpsl
ds
or
ds
jmp
es
mov
cmc
into
scas
mov
inc
test
jecxz
and
les
aad
mov
push
inc
jmp
jbe
cmp
loopne
dec
adc
or
push
in
add
adc
or
sub
rol
sub
jmp
and
orb
sbb
ret
jb
inc
sub
orl
sbb
cmp
stos
mov
or
cmpsl
in
fstpt
mov
mov
add
movsb
mov
sub
loop
in
testb
movntps
push
cmpsb
push
jns
inc
jns
xchg
add
mov
xor
bound
xchg
mov
loop
cmc
cmpsl
adc
mov
push
arpl
sub
sbb
mov
pushf
adc
pop
inc
xchg
andb
cli
jno
xchg
movsb
sub
xchg
stos
pop
pushl
aaa
jl
push
in
aas
hlt
mov
and
jne
adc
push
inc
pop
fdivs
inc
pop
es
xchg
jno
popf
aad
or
test
test
adc
add
nop
ljmp
jp
xchg
mov
mov
xor
int
add
ds
sub
inc
push
int
dec
dec
ret
pop
mov
cmp
mov
icebp
lret
cmpsb
jge
out
inc
adc
xor
or
and
inc
loop
mov
sbb
outsl
sar
pusha
cs
cmp
clc
lret
pop
lret
inc
mov
shlb
cli
adcl
in
inc
xor
div
xlat
mov
mov
mov
inc
and
aaa
add
sahf
mov
jne
push
cltd
in
outsb
xor
inc
mov
cltd
fwait
cltd
mov
xchg
stos
addl
inc
lahf
add
dec
les
push
aam
sub
sbb
in
in
imul
mov
xlat
pusha
jbe
rclb
mov
es
outsl
scas
sub
inc
cmp
pop
push
xchg
and
mov
add
shlb
push
push
pop
jne
add
mov
das
add
mov
sbb
imul
pop
push
notl
push
mov
cmp
aaa
jg
cwtl
dec
mov
pushf
stc
cmpsb
sbb
and
add
mov
mov
cmp
inc
inc
adc
jle
stc
std
mov
insb
lcall
lods
jle
jle
or
dec
fs
xor
sub
pop
push
mov
mov
push
mov
jge
jae
mov
fs
jns
push
inc
lret
sbb
test
push
cmp
add
cmp
add
xor
sub
loope
jg
and
adc
jno
es
ret
add
fdivr
add
pop
popf
sub
mov
pop
sti
jle
inc
xor
sub
stos
add
mov
aas
cltd
mov
lcall
scas
sbb
jno
add
shll
push
adc
outsl
mov
movsl
dec
jb
fmulp
dec
rorb
pop
gs
clc
popf
mov
xchg
gs
stos
stos
or
mov
lds
roll
test
lret
pop
fistpl
imul
sub
cmpsl
xlat
fmul
xchg
jnp
in
rcrb
fisttpl
bound
mov
iret
inc
lret
scas
fldcw
jg
mov
xlat
pop
xor
adc
cwtl
push
mov
movsl
in
sbb
xlat
fisubs
and
mov
je
std
jmp
mov
pop
adc
push
push
add
xchg
loop
or
adc
push
es
add
repnz
sahf
into
mov
push
mov
fdivrp
jl
sbb
leave
je
in
mov
icebp
movsl
push
addr16
movsb
push
jne
inc
fldenv
cmp
je
xor
inc
int
mov
aas
xchg
mov
cmp
push
xor
pop
push
mov
iret
add
sahf
lds
rcrb
mov
adc
andl
xor
stos
xchg
iret
mov
mov
stos
xchg
or
jb
rorb
mov
lods
pop
pop
outsb
repz
xchg
shrl
inc
adc
mov
add
popa
daa
fnstcw
cmp
ljmp
fisttpl
call
pop
sub
push
cmp
sahf
repz
or
repz
cmp
add
cmp
loop
dec
xchg
outsb
xor
cmpsb
push
divb
sbb
leave
adc
aas
loop
rcrl
pop
jb
mov
mov
int3
dec
adc
ret
fldcw
rolb
inc
xor
outsl
out
mov
xchg
dec
lock
jmp
cmp
dec
and
lahf
lods
je
outsl
gs
lds
gs
movsl
push
inc
dec
jno
clc
mov
xlat
xchg
mov
push
fucomp
mov
push
in
fisubl
rorb
sub
rcrb
or
sub
pushf
and
fsubrs
mov
aad
mov
mov
stos
incl
mov
push
pusha
dec
es
setns
sahf
push
dec
aam
inc
pop
lds
mov
mov
rclb
fwait
pushf
xchg
dec
cmp
jmp
loope
adc
inc
mov
fidivs
loope
jle
xchg
mov
mov
mov
fistps
movsl
cmp
lret
out
inc
or
adc
insb
dec
lds
mov
jae
in
aam
dec
adc
outsb
cld
push
and
or
outsb
sahf
lds
inc
sbbl
lock
sarl
insb
arpl
fwait
mov
cmp
test
mull
scas
add
inc
ret
mov
pop
into
frstor
hlt
cmp
xchg
and
punpckhwd
scas
or
je
push
les
xor
jg
or
xor
dec
inc
les
push
enter
fsubrs
icebp
lds
add
jecxz
pop
and
mov
jb
jmp
push
sub
and
int
adc
movsl
aaa
repnz
dec
int
rolb
cmp
in
dec
fstpl
cmp
test
push
insb
cli
cli
popa
jge
adc
mov
enter
jb
out
iret
in
pop
sub
fcoms
sahf
xchg
in
je
cmpsb
inc
mov
dec
dec
ss
push
mov
pop
faddl
pop
mov
add
in
mov
sbb
loopne
test
into
add
dec
movsl
sbb
or
pop
loop
add
sub
subb
loopne
cmc
mov
mov
pop
cli
cmp
sbb
and
mov
fwait
sti
sub
ret
jae
mov
iret
bound
xchg
mov
mov
in
mov
xor
pop
ret
xchg
lahf
and
or
roll
stc
aas
jge
jecxz
mov
inc
xor
dec
test
xorl
push
dec
jb
dec
push
xor
popa
int
xchg
ds
mov
stos
fcmovnbe
loopne
jmp
nop
mov
popf
fmull
cmp
inc
cmp
push
jmp
imul
adc
push
fs
sub
lods
rcll
jb
push
js
insl
aad
dec
stos
arpl
pop
dec
stos
push
sbb
lea
push
sbb
cmc
fwait
aaa
xchg
test
inc
repz
adc
vmread
mov
fs
stc
aam
stos
shl
inc
or
cmpl
int
jp
negb
xor
loop
das
mov
lock
fwait
and
mov
xlat
dec
pop
cld
mov
cmp
xor
stc
call
lcall
push
stc
mov
sbb
xchg
mov
enter
push
dec
daa
mov
dec
dec
pop
and
iret
inc
and
xchg
sahf
xor
and
popa
ja
lock
rcrl
ja
inc
test
and
fcompl
xchg
sub
int3
xorl
rcr
push
mov
imul
daa
mov
ds
sahf
test
outsb
xchg
mov
jg
loop
out
push
ss
movb
lcall
mov
sbb
ljmp
cmp
arpl
jl
ret
pop
push
ror
pop
call
out
repz
ret
pop
xor
fmull
jae
iret
rorl
inc
jl
out
int
aad
xchg
imul
lea
adc
pop
shlb
add
dec
mov
repz
and
pop
cld
add
xlat
mov
gs
dec
cmp
cltd
mov
sbb
je
test
pop
lret
insl
sbb
push
jb
cmp
int
xor
fisttps
xlat
jecxz
popa
outsb
outsl
or
clc
mov
pop
add
add
test
and
out
aad
mov
fistpll
dec
or
out
xlat
adc
out
pop
jno
push
ret
sarl
loop
addr16
push
mov
mov
sub
sub
pop
fistl
push
popa
jl
jns
stos
shll
add
or
ret
mov
jp
outsl
mov
mov
dec
mov
add
xor
subb
add
pop
cmp
bound
xor
arpl
faddl
mull
push
mov
mov
jecxz
push
and
lcall
outsl
jecxz
add
or
outsb
mov
mov
outsl
jno
jmp
push
loope
addr16
mov
dec
notl
sahf
push
sub
push
sub
insb
pop
fwait
outsl
jl
push
dec
mov
push
sti
or
mov
fwait
adc
mov
mov
pop
jg
stos
test
test
mov
jmp
popa
or
dec
mov
xchg
movsl
shlb
ret
pop
fcmovnu
sub
lods
xchg
pusha
xchg
es
sub
mov
push
inc
test
push
jno
and
cmp
add
cltd
jge
xchg
pop
outsb
xor
xchg
mov
leave
or
jne
jbe
mov
adc
test
ds
xor
lret
mov
mov
sbb
test
bound
imul
nop
jae
cld
add
shlb
mov
sbb
orb
cmp
sahf
cli
pop
dec
push
outsl
mov
faddp
mov
push
or
mov
cmpsl
xchg
lds
dec
jns
lock
push
xor
cmp
aad
aam
mov
bound
test
xor
sbb
rolb
inc
sarl
push
les
mov
mov
xor
add
xlat
mov
outsl
fcomps
pop
sti
push
and
cmp
test
dec
or
xor
sahf
pop
cltd
pop
fs
ljmp
dec
cltd
pop
sar
pushf
cmp
pop
inc
jecxz
ret
adc
xor
xor
push
inc
mov
jle
and
pop
or
ret
dec
mov
inc
nop
pushf
imul
xor
jo
or
les
into
push
ljmp
jne
or
mov
xorl
mov
stc
or
stos
popa
cmp
lret
fdivrl
xor
push
and
push
mov
pushl
cld
pushf
add
jg
xchg
aaa
sub
mov
data16
xchg
push
pop
repz
test
inc
pop
inc
mov
lods
leave
adc
xchg
dec
int
sbb
stos
sub
aad
and
pushl
sti
fs
mov
insl
mov
sub
icebp
lret
cld
mov
jmp
lock
gs
push
push
jbe
jns
pusha
pop
mov
pop
jmp
pop
loop
pop
mov
pushf
mov
mov
xchg
imul
aam
jecxz
std
ret
mov
cmp
inc
inc
out
bound
mov
xchg
dec
shrb
stos
push
mov
push
or
add
sti
inc
xor
inc
movsb
pop
in
add
mov
rcr
das
test
int
xchg
ret
pop
add
negl
sahf
and
push
insb
pusha
cmpsl
jnp
std
loope
bnd
cmpsb
cmp
inc
cmp
xor
lret
sub
iret
jmp
fiadds
pop
xchg
add
fimull
scas
in
insb
sub
xlat
mov
fucomp
outsb
dec
jb
pop
sub
lret
mov
fisubrl
push
pop
and
lahf
mov
sbb
mov
lcall
imul
aaa
push
enter
data16
mov
and
arpl
aad
insl
jp
cmp
stos
inc
stos
push
add
bound
call
jbe
sahf
mov
adc
mov
aam
jp
inc
call
outsl
addr16
xor
mov
sbb
or
ljmp
and
ljmp
xchg
xchg
cmp
repnz
jnp
mov
push
outsb
call
pushf
sbb
sbb
mov
fwait
imul
pop
and
inc
fbstp
mov
jl
xchg
pop
xchg
lahf
inc
dec
or
push
jbe
mov
add
xchg
lock
xchg
mov
les
sbbb
inc
imul
incl
adc
jns
push
addl
adc
cltd
sub
hlt
or
cmpl
sbb
fcompl
push
jns
dec
repnz
test
jno
cld
xlat
and
imul
fnstcw
pop
jnp
leave
es
in
push
cltd
aaa
dec
xor
xor
icebp
sahf
test
xchg
inc
push
fwait
sbb
adc
or
cmp
cmp
xchg
jmp
stc
adc
imul
sub
mov
sub
and
adc
divb
dec
loope
sti
sbb
jo
xchg
mov
xchg
and
and
add
cmp
add
or
ja
inc
cmpsb
mov
mov
dec
jns
or
ret
fisttpll
shl
ret
clc
fwait
jnp
cmpsl
mov
outsb
out
jecxz
xchg
pop
mov
mov
and
cmp
adc
mov
out
fimull
push
sbb
mov
push
pop
push
insb
js
popa
rol
jnp
dec
jne
imul
add
mov
pop
pop
and
jle
sbb
out
cltd
xchg
mov
lea
aaa
jmp
add
aas
xchg
jne
sub
arpl
mov
cmc
cmp
jl
nop
sub
or
mov
mov
sbb
dec
push
repnz
insl
jle
jb
xor
fdivl
data16
mov
in
mov
mov
mov
or
dec
cmp
leave
aaa
push
aaa
xchg
pop
adc
cmp
adc
pop
cli
jbe
insb
push
stos
jg
mov
pusha
fbld
add
inc
inc
sti
xchg
cmc
orb
loop
fistpll
lds
arpl
lahf
cmp
stos
push
les
xchg
sbbb
dec
adc
mov
pop
cmpsl
xchg
iret
cltd
sub
or
inc
sahf
mov
stos
and
or
push
test
fists
mov
sbb
lods
push
mov
xor
dec
lods
dec
dec
xor
out
jge
movsl
lcall
xlat
push
stos
sbb
mov
mov
ds
in
repz
cld
dec
fstps
dec
lods
jecxz
add
xchg
xlat
push
and
sahf
out
dec
cmp
movsl
imul
pop
sbb
lds
inc
jbe
xchg
aad
repz
lods
mov
aad
cmp
adc
pop
leave
or
shlb
stc
inc
ds
leave
jmp
push
pusha
out
push
xchg
mov
hlt
loopne
xchg
shll
cmc
loope
cmp
cltd
lcall
mov
clc
lods
fldcw
aam
jmp
movsb
shrl
jno
pop
push
dec
push
std
pop
in
push
scas
push
stos
int3
fisttpl
pop
add
xor
dec
out
pop
cmp
enter
add
add
xchg
sub
loop
xor
ret
inc
sub
andl
mov
imul
icebp
xor
filds
cli
sbb
pop
push
inc
cmp
adc
pop
test
loopne
inc
hlt
int
outsb
sbb
imul
popa
fstpl
cld
movl
mov
mov
xchg
xor
fldt
outsl
xor
sbb
cmp
push
xchg
daa
subb
in
mov
inc
mov
pop
sarb
scas
in
push
cltd
cmp
fcmovnu
inc
dec
out
iret
mov
mov
mov
ljmp
cmp
mov
jb
sub
cwtl
dec
mov
mov
mov
fnclex
arpl
mov
dec
xchg
mov
notb
or
or
and
add
sbb
or
xor
gs
bound
jmp
pop
mov
mov
jne
adc
aas
add
xchg
lock
leave
daa
stos
cli
rol
push
into
cmc
mov
push
or
lcall
xchg
push
loopne,pn
xchg
cmc
jecxz
push
gs
jne
jecxz
pushf
add
gs
dec
mov
dec
mov
jp
dec
aaa
loopne
stc
and
outsl
mov
fucomip
movsb
or
cmp
inc
addb
jno,pt
inc
repz
mov
mov
mov
add
mov
aam
or
mov
lds
push
pop
out
cmpsl
pop
mov
pop
divl
cwtl
ficoms
addr16
pop
jecxz
lcall
fs
xlat
inc
and
xchg
mov
fcom
jmp
loopne
das
jle,pt
sbb
cmp
mov
xchg
push
lcall
nop
mov
imull
imul
sub
call
cs
and
jo
repz
sub
cli
fstpl
mov
lods
cmp
lods
fidivs
call
icebp
mov
or
das
cmpsl
gs
adc
mov
fidivl
nop
add
or
sbb
mov
arpl
je
dec
cmp
stos
insl
movsl
jl
xchg
lret
rorl
pushf
dec
push
mov
data16
push
cmpl
jg
icebp
hlt
mov
shrb
xor
add
sbb
jae
std
inc
mov
shll
add
pop
mov
sub
pushf
pop
mov
hlt
out
movsb
icebp
cmp
out
sbb
cmp
mov
cld
popf
dec
xor
pop
cmp
sub
jg
pop
push
mov
jbe
push
pop
popa
fcmovnu
mov
xlat
jecxz
popa
in
dec
mov
add
fs
lret
or
shlb
int3
enter
fwait
inc
adc
cmc
dec
dec
mov
movsb
aas
in
daa
mov
sub
pop
lods
sbb
adc
cmp
das
es
cmp
dec
pop
arpl
mov
mov
outsl
adc
pop
dec
ret
cmp
or
ret
hlt
repz
int3
sahf
loop
adc
dec
fldl
loope
mov
aad
and
or
cs
iret
adc
fnstsw
pop
ret
frstor
mov
mov
sbb
fstpl
fimuls
mov
outsb
mov
sub
popa
testl
mov
in
xorl
rclb
call
adc
outsb
outsl
jo
aaa
inc
xor
dec
fwait
mov
adc
out
jmp
movsb
inc
mov
jns
dec
or
ret
or
push
xchg
or
add
mov
mov
fs
jb
cs
and
adc
adc
mov
das
lahf
sub
cmp
jns
pop
push
in
orb
repnz
pop
pop
inc
in
jno
cmc
pop
mov
adc
ds
jle
je
pop
fscale
cmc
inc
xor
and
sahf
or
and
or
jnp
or
shll
scas
fildl
cmp
mov
mov
inc
in
popf
mov
xor
pop
mov
stos
mov
inc
andb
pop
mov
inc
dec
add
inc
add
fmuls
cmp
lea
cmpsb
fstpt
xchg
cmpsl
dec
cltd
xchg
gs
clc
pop
sbb
aam
push
movsl
inc
push
imul
lock
lea
sub
xor
sub
push
lock
pop
pop
lea
nop
aaa
in
out
test
lret
xor
add
mov
stos
mov
sub
scas
push
xchg
or
enter
in
and
test
push
dec
lcall
or
sti
mov
enter
push
pop
dec
xor
push
in
cmc
xor
std
pop
mov
dec
mov
push
js
mov
bound
addr16
add
scas
cs
std
into
lods
test
fidivrs
push
fists
cwtl
dec
mov
add
add
out
rclb
push
test
rcrl
inc
jno
jno
push
or
jne
mov
xor
xor
insb
jmp
loop
mov
cmp
inc
loop
clc
adcl
mov
push
xor
stc
ljmp
adc
cld
dec
xor
dec
cmc
in
jmp
aad
mov
cltd
nop
inc
pop
xchg
mov
jns
mov
outsl
or
ss
cmp
pop
dec
jp
xchg
pop
stc
cmp
cwtl
mov
adc
lds
xor
cmpsl
pop
jp
mov
fmuls
lods
cs
insl
mov
mov
cmpsl
dec
cli
jmp
or
test
adc
fsts
lods
mov
cmp
pushf
out
cmp
rclb
notl
lret
ret
add
adc
loop
xor
mov
and
sbbb
xchg
sahf
jp
xchg
cmp
sbb
push
nop
jbe
jne
ret
inc
test
dec
in
jmp
outsb
stc
ljmp
cmpl
fmulp
mov
bound
add
mov
lret
cmpsl
or
mov
bound
xor
xlat
adc
imulb
icebp
fsubrs
cmp
aas
or
call
jp
xor
ret
dec
test
mov
insl
test
hlt
mov
push
sahf
nop
pop
lahf
fdivs
and
out
mov
inc
mov
test
out
lods
push
xchg
push
aad
aam
cmpsl
push
pop
int3
out
gs
jecxz
jg
sbbb
int
pop
outsb
test
push
cmp
jne
and
das
adc
dec
cli
std
mov
mov
mov
fadds
mov
bound
arpl
xchg
cmp
out
xor
testl
dec
dec
xchg
mov
int
xchg
repnz
inc
mov
sbb
aam
mov
data16
xorl
int
es
pop
test
es
cmpsb
lock
rorb
push
int
test
jae
cs
adcl
sar
push
lret
into
subb
cmp
cmpsb
push
out
incl
dec
popf
orl
arpl
cli
iret
cld
aam
aad
xchg
dec
aam
lea
insb
fistpl
xchg
xchg
fcmove
mov
ss
idivl
mov
sti
jp
mov
es
shlb
sarb
mov
lahf
lock
jns
fs
jne
sub
lods
in
gs
cld
or
adc
and
lock
sbbl
ja
hlt
or
xchg
dec
cld
outsb
sub
fisttpl
test
popf
call
push
sub
xchg
push
sub
fnsave
scas
jo
in
mov
fisttpll
imull
test
mov
mov
clc
fadds
mov
hlt
cmpsb
test
mov
push
mov
inc
lahf
sub
out
scas
xchg
mov
cmp
shrl
xchg
jl
ja
inc
fst
sarb
arpl
sbb
add
sbb
test
mov
add
push
push
std
movsb
bound
leave
test
test
push
jbe
push
stos
cmpsb
ja
cmp
add
data16
jns
rorl
inc
int3
loopne
jae
xor
pop
jns
pop
aaa
dec
jecxz
mov
test
ret
cltd
adc
js
ljmp
das
js
test
mov
add
inc
add
lret
adcl
lea
push
pop
fwait
rclb
mov
sbb
mov
outsb
jb
cs
lds
cmp
es
dec
inc
xchg
int3
pop
aad
leave
stc
and
sbb
cwtl
shrb
mov
sub
sti
sub
and
daa
mov
pop
mov
inc
dec
xor
xor
ss
daa
inc
mov
pop
xor
sbbl
jge
xor
sbb
ja
js
cmp
sbb
dec
jae
lahf
popa
pop
call
in
lods
lds
or
and
js
dec
mov
rorl
jo
sbb
push
int3
lret
fsub
je
cli
mov
imul
int3
jp
adc
xchg
jnp
gs
sar
push
dec
fimuls
push
in
adc
push
push
sbb
cli
jmp
aaa
dec
cli
pop
sub
popa
loop
daa
cli
add
push
add
adc
cmpsl
insb
sbb
jbe
ss
addl
cmpsb
inc
push
inc
ds
addl
mov
pop
sbb
add
jae
cmpl
pop
dec
cli
fnsave
xor
sub
roll
cltd
popf
jecxz
adc
cmpsl
xchg
fdivrl
sbb
mov
push
ds
mov
pop
mov
add
shlb
mov
sub
shl
pop
mov
jb
fimull
xor
xor
lds
inc
add
stos
mov
rolb
insl
sub
xchg
pusha
popa
popf
stc
dec
cmpsb
jne
addr16
or
dec
dec
jb
das
xchg
lret
inc
mov
cmp
mov
scas
lcall
stos
inc
cmpl
and
outsl
movsl
add
test
jmp
std
mov
jmp
mov
enter
es
xlat
mov
xor
sub
imul
jmp
aas
testl
adc
inc
stos
pusha
data16
mov
sbb
sahf
xchg
dec
xchg
dec
jmp
inc
outsb
mov
lds
cli
mov
add
lea
inc
aas
inc
mov
in
popf
lea
cmp
movsl
mov
jl
ret
cltd
push
adc
movb
sbb
pop
mull
inc
ljmp
xchg
and
sub
cmpl
push
std
das
addr16
jne
fwait
sbb
push
ja
push
pop
jae
pushf
cmp
push
pop
ret
ficoms
xor
push
leave
adc
dec
data16
xor
jbe
and
mov
pushf
cwtd
inc
repz
push
mov
sbb
fdivrl
ret
mov
int3
clc
aas
and
xor
cmp
pop
cltd
and
cltd
arpl
jns
call
sub
out
sub
out
int3
mov
push
loopne
in
imul
nop
mov
push
jg
jge
cmp
or
pop
dec
dec
loope
inc
mov
push
lds
repz
xorb
and
mov
push
adcl
push
sub
dec
mull
leave
adc
mov
shlb
cmp
sbb
add
sub
aaa
out
dec
pop
xor
pop
ficoms
js
dec
cld
stos
dec
fld
gs
outsb
sahf
notl
dec
mov
into
dec
inc
cli
shl
add
push
imul
test
shlb
mov
or
les
shl
inc
mov
or
sub
push
pop
in
push
adc
cmpsb
or
hlt
lcall
adc
imul
int
jne
mov
xlat
sahf
mov
mov
fwait
xchg
mov
test
sub
sbb
fwait
xchg
leave
lds
sub
clc
pop
add
aam
sbb
inc
popf
lret
inc
scas
jbe
mov
xchg
push
fst
test
inc
notb
pop
mov
loop
movsl
sbb
es
pop
sti
scas
mov
fidivs
sub
mov
shll
test
out
jo
imul
add
add
add
sahf
ja
mov
leave
xchg
jge
dec
mov
xor
xchg
addr16
stc
insl
sbb
lods
sahf
or
popa
dec
push
xchg
rorl
xchg
xchg
mov
mov
jno,pn
ret
call
dec
pop
and
subb
dec
popa
leave
js
dec
inc
adc
jl
push
pop
negl
cmp
mov
pop
or
pop
imull
test
test
lret
mov
dec
dec
outsb
test
mov
cmp
test
sub
cmpsb
into
or
dec
xchg
icebp
gs
mov
int3
es
push
scas
mov
sbb
lahf
aad
add
out
lea
fs
cld
out
xor
dec
ss
cmp
cmp
pop
stc
mov
imul
or
test
cmpsb
sti
es
xchg
jle
clc
addr16
ds
jne
lock
div
int
jae
icebp
or
lods
ss
movsb
cmp
lcall
or
es
dec
inc
cltd
sbb
aaa
inc
movsl
and
nop
stc
aam
xor
ficoms
mov
sbb
mov
adc
cs
fdivrl
andl
ljmp
xor
and
fwait
mov
mov
cmpsb
mov
jecxz
pop
push
or
push
out
dec
and
mov
dec
iret
mov
cmp
aam
pop
cmp
enter
push
movsl
add
sub
inc
int
stos
cmp
push
arpl
mov
jbe
into
pop
sbb
xchg
dec
mov
in
push
pop
jmp
mov
daa
jbe
add
sbb
sub
cmpsl
lret
dec
je
mov
mov
js
mov
movsb
test
lahf
mov
mov
push
mov
pusha
dec
or
or
cmp
jbe
mov
inc
hlt
addb
js
inc
mov
inc
cltd
enter
and
jle
cmpl
xchg
jecxz
int3
add
jbe
xor
pop
sub
sub
cli
sbb
jl
pop
sti
aam
mov
cld
mov
dec
pop
push
scas
int
push
xchg
mov
jbe
aam
push
stos
outsb
inc
inc
jecxz
aad
outsb
or
xor
or
add
ficoml
loope
xor
ret
andb
jl
mov
jo
mov
filds
adc
fildll
jns
jns
jb
adc
push
xchg
shll
xor
out
jg
mov
jnp
mov
jge
test
push
inc
fldl
mov
ret
bound
and
loop
outsl
lret
test
inc
mov
lcall
jle
stos
mov
push
mov
insb
nop
push
inc
mov
dec
add
or
shll
add
sbb
outsl
cltd
adc
sahf
inc
cmp
in
push
and
addr16
jae
cs
call
inc
popl
mov
pop
xor
add
aad
popa
test
mov
scas
push
or
xlat
xor
in
inc
fidivrs
fbstp
jb
pushf
xor
and
scas
rcrb
jmp
dec
in
fs
fldt
pushf
mov
xchg
outsb
pusha
cmp
fxch
lahf
das
cwtl
daa
sub
pop
pop
out
shll
into
inc
sbb
inc
stc
pusha
rclb
jmp
sub
xor
sub
data16
mov
outsb
inc
mov
rorl
push
add
fisubs
lret
cwtl
fimuls
xchg
stos
push
cmp
mov
int
xchg
push
lea
or
test
push
pop
test
jmp
daa
repz
sahf
stos
pop
cmp
xchg
imul
shrl
jp
pop
inc
scas
fcompl
das
pop
push
sbb
lds
cmpsb
dec
jns
pop
add
inc
xor
mov
shlb
adc
jo
and
pop
mov
ret
iret
fsubrs
notb
jle
sbb
popf
sbb
push
pop
inc
pop
scas
sbb
push
rclb
cmc
pushf
xchg
or
jo
repz
push
lods
shll
js
sbb
fucomi
repz
pop
cmpb
xor
aad
pop
lods
daa
jmp
ja
inc
dec
jge
in
mov
aaa
push
loop
sbb
rorl
jnp
aaa
xlat
xchg
test
jecxz
sbb
xchg
popf
rcr
mov
test
sub
mov
cmp
jne
xor
push
in
jno
push
insl
andb
or
fmulp
adc
sahf
xchg
mov
mov
fnsave
mov
nop
call
enter
mov
mov
aas
daa
sub
pop
dec
repnz
xor
cld
jp
sbb
aaa
mov
jmp
or
mov
incb
push
mov
inc
mov
popa
sbb
data16
pop
decl
call
int
cmp
sub
push
or
daa
aam
aaa
stc
cmpsl
jecxz
pop
push
insl
or
sub
sbb
xor
dec
ret
rcr
pop
and
mov
add
jnp
fcomps
mov
jge
xor
push
add
or
out
jbe
push
and
lcall
imul
lock
iret
adcl
xor
rol
mov
test
mov
push
into
enter
cmc
cmpsl
cwtl
pop
xchg
into
push
jecxz
inc
add
xchg
sub
push
arpl
shl
or
jmp
jl
sub
hlt
xor
aas
popf
xchg
and
cmp
int3
cmp
loopne
jne
aam
int3
mov
inc
lahf
ljmp
js
jp
loopne
sbb
inc
popf
pop
lods
divl
sub
imul
jecxz
or
leave
mov
inc
push
in
scas
push
daa
cmp
shlb
sti
add
or
rol
inc
inc
push
pop
sbb
xor
cli
cmc
mov
lret
mov
ret
xor
mov
sarb
or
push
push
rcll
aad
dec
out
aas
aam
popa
loopne
movsl
mov
enter
insb
push
rorb
adc
es
fimull
xchg
test
add
inc
add
mov
enter
mov
jnp
mov
add
jns
xor
xchg
pop
cs
mov
fsubrl
cmp
xor
test
incb
pop
jmp
or
jmp
out
daa
cmp
lods
add
dec
inc
js
pop
in
icebp
sub
leave
jno,pn
push
mov
iret
lds
clc
aad
movsl
mov
enter
cli
push
in
test
adc
and
movsl
pop
dec
jg
jb
movsb
jbe
lret
mov
inc
daa
dec
lds
in
add
scas
lcall
mull
stos
addr16
int
adc
jmp
movsb
int3
xchg
mov
cld
cmp
les
xchg
push
xor
mov
sbb
push
stos
mov
add
sahf
sbb
icebp
mov
pop
ret
cltd
adc
xchg
mov
add
popf
adc
xor
rorl
xchg
pop
inc
movsl
pushf
inc
pusha
mov
and
mov
push
push
loop
popa
aaa
jo
hlt
mov
lock
aam
pushl
pmullw
bound
outsl
movsl
xor
insl
adc
lret
in
int
and
jno
cli
mov
mov
in
dec
sbb
sahf
xor
jns
or
sub
add
or
std
xchg
loop
inc
fsubr
imul
mov
inc
and
mov
nop
mov
jmp
out
fcoms
add
rcl
cmp
lcall
lods
push
loopne
jnp
pusha
mov
sbb
shrl
cltd
xor
jmp
sti
jnp
and
ror
mov
pushf
into
mov
or
jg
sbb
push
jb
sbb
hlt
lret
add
test
test
enter
popf
or
ja
icebp
and
inc
test
mov
pop
loop
rcr
sub
mov
inc
xchg
xor
call
and
out
pop
and
cmpsb
daa
pop
lret
into
xor
arpl
push
insl
cli
xorb
add
sub
mov
in
xor
inc
sub
cmp
std
mov
mov
and
lcall
cwtl
call
mov
into
sbb
adc
pop
mov
sbb
push
test
ret
cmp
scas
adc
add
push
loope
mov
movsb
ja
pop
xchg
xorb
pop
sti
jle
adc
or
dec
sbb
outsl
xlat
pop
inc
xor
mov
sbb
pop
xor
scas
cmp
std
lahf
dec
loopne
mov
bound
lahf
jne
fstpt
pop
and
push
cwtl
xlat
std
lahf
xor
arpl
mov
outsl
fldcw
sbb
jb
jno
jge
mov
xor
outsb
xchg
xorl
or
movsb
adc
rcl
nop
jo
repnz
xchg
dec
les
fwait
adc
js
lret
jnp
add
arpl
sbb
enter
out
push
fistl
imul
stos
cmpsl
adc
adc
fiadds
mov
outsb
pop
mov
inc
add
repnz
ret
mov
clc
icebp
jg
loopne
lods
jns
cmpsl
iret
mov
stos
xor
adc
mov
mov
orl
shl
cmc
arpl
sbb
sub
xor
jle
popa
movsb
fxch
nop
fistl
popf
jmp
mov
push
xor
loop
mov
fs
ljmp
cmc
pop
pop
imul
lcall
aam
push
sub
cmp
push
rorl
dec
sub
outsl
out
pushf
sbb
lret
mov
mov
xor
loop
test
rolb
cmp
addl
lahf
mov
imul
loope
cld
insl
out
cltd
mov
lcall
cli
cmpsl
stos
fs
dec
rclb
or
out
pop
fldenv
pusha
and
and
mov
das
je
adc
aaa
dec
jle
test
scas
testb
ss
mov
jb
push
xchg
shlb
sub
lcall
cmp
into
push
movsl
inc
xchg
in
mov
mov
pushf
adc
cs
dec
xchg
insb
jbe
jno
out
or
lds
cwtl
ret
cmp
jmp
or
jp
das
push
add
cmpsl
mov
inc
ds
sub
addr16
pop
xlat
aaa
inc
enter
or
mov
mov
lret
and
and
lea
inc
stos
fiadds
mov
gs
lret
jmp
out
lret
mov
xchg
or
sub
mov
mulb
lock
rcll
shlb
mov
cmp
inc
cwtl
jbe
jl
or
jl
cmp
push
jns
dec
pushf
push
stos
clc
fst
jmp
xchg
pop
repnz
xor
aas
sahf
pop
in
push
out
call
stos
les
add
xchg
aad
addr16
sub
jl
push
xchg
xchg
aam
cmpsb
scas
mov
sarb
fldt
mov
dec
xor
inc
in
cmpb
out
leave
filds
mov
add
into
out
in
sbb
push
rolb
cmp
aaa
in
mov
dec
das
mov
out
or
xchg
outsl
es
lret
mov
push
adc
mov
es
xchg
mov
pop
xchg
insb
pop
mov
imul
or
sub
cmpsb
fstpl
xchg
fisubl
pop
test
loope
xchg
adc
mov
lods
aaa
icebp
in
std
and
mov
mov
mov
stc
xlat
xlat
and
sbb
ret
and
mov
dec
sub
ret
mov
out
cmc
push
cwtl
jno
jns
ss
fiaddl
jge
xor
idiv
mov
mov
jo
inc
mov
jbe
pusha
flds
sub
js
cmpsb
adc
add
loope
adc
les
dec
xor
push
inc
aas
call
imul
test
nop
xchg
out
jp
mov
cltd
sbb
dec
mov
mov
dec
sbb
scas
pop
into
add
ljmp
jp
in
jo
pop
mov
add
lcall
imulb
cmp
fcomip
out
jg
jns
lods
pop
push
addr16
mov
shrd
push
stc
jno
mov
imul
shl
jmp
dec
fwait
clc
imul
fisubrl
mov
in
jo
mov
jecxz
dec
dec
aad
inc
xchg
mov
lods
icebp
jl
leave
aam
xchg
xchg
push
dec
xor
pop
mov
add
test
add
xchg
shrl
sti
lock
xchg
iret
sbb
inc
push
out
pop
pop
inc
out
mov
push
inc
mov
add
or
into
dec
in
push
mov
mov
pop
adc
fs
lret
stc
jge
aaa
outsl
inc
pop
sbb
xchg
gs
fnstenv
or
cltd
bound
loop
call
lods
mov
mov
cmpsb
rcr
xchg
test
mov
mov
cmpsl
rcrb
inc
leave
out
cs
adc
jb
in
adc
ljmp
loopew
and
mov
ret
cmp
xor
ror
addr16
lds
push
jmp
sbb
jo
xchg
pop
xchg
cmpl
bound
fstpt
dec
sub
push
ss
sarb
sbb
aad
mov
hlt
call
sbb
inc
mov
xor
and
and
lods
xorb
and
jo
mov
out
adc
push
gs
or
adc
mov
lods
pusha
and
pop
jecxz
and
int
inc
jg
mov
xchg
clc
out
enter
shlb
pop
stos
mov
out
repz
mov
out
sub
pusha
and
dec
das
repnz
adc
in
icebp
hlt
imul
repnz
cmpsl
pop
mov
sti
daa
stos
sahf
sti
xor
in
filds
data16
sti
mov
jnp
neg
aaa
add
daa
dec
xlat
sahf
in
in
loop
popa
aaa
lret
ffree
jmp
xor
cmp
ljmp
or
aas
flds
imul
inc
push
inc
bound
outsb
kxnorw
push
mov
dec
out
pushf
push
mulb
sbb
outsb
xorl
pop
fwait
mov
iret
sbb
mov
cli
jp
inc
push
or
xor
hlt
cwtl
adc
mov
clc
rcrl
pop
dec
pusha
mov
push
sti
mov
add
push
mov
insb
mov
aaa
inc
mov
pop
js
ljmp
lods
cmp
repnz
inc
pop
outsb
scas
and
add
das
stc
in
cmpsb
add
xchg
gs
mov
stos
dec
jo
jns
and
adc
iret
xor
dec
cmp
adc
dec
adcl
cmp
ja
lods
xor
lds
daa
sbbb
js
pop
jne
push
int
fstps
jmp
sub
mov
inc
rorl
arpl
sahf
cli
dec
sbb
pop
inc
jecxz
mov
pushf
scas
cltd
mov
mov
jo
cld
mov
mov
pushf
push
es
fwait
adc
mov
mov
sbb
inc
inc
in
out
jbe
inc
mov
sub
in
add
mov
lahf
and
or
jle
out
jle
shrb
dec
mov
out
bnd
cmp
popa
jbe
push
mov
fsub
xchg
mov
add
popf
rcl
inc
in
lods
xorb
fisttpl
sbb
cmp
mov
sub
xchg
insb
out
mov
test
arpl
jnp
mov
or
pop
mov
js
test
add
into
sub
pop
loope
fbstp
cmp
cmp
addr16
movntps
in
jecxz
arpl
ret
je
push
inc
repnz
xchg
jae
add
dec
sub
movsl
push
mov
out
dec
decb
mov
clc
out
icebp
inc
mov
test
xchg
cld
aam
ds
subb
xchg
sub
dec
scas
jmp
cmp
pop
add
jle
das
inc
sarl
pop
pushf
fadd
cmc
pop
cmp
lret
xlat
pop
repz
pop
xor
mov
xor
pop
mov
data16
fsubrl
ja
stos
jecxz
rcrl
adc
push
add
icebp
sub
inc
push
push
xadd
arpl
insb
movsl
fsubrs
outsb
inc
pop
aad
ja
hlt
and
gs
pop
cmpsl
mov
push
out
or
push
jge
push
mov
int3
popa
mov
and
inc
aad
je
sub
mov
fmull
add
cwtl
in
adc
jg
mov
arpl
xchg
scas
aaa
push
cld
nop
mov
cmpl
imul
movsl
test
pop
icebp
in
loopne
test
lods
jge
sbb
jnp
and
xchg
cmp
lret
notb
sahf
mov
and
mov
aaa
cwtl
adc
inc
icebp
shr
popa
aam
jl
ss
repnz
mov
mov
repz
das
das
lods
push
movb
clc
push
lcall
aaa
pop
mov
mov
out
sbb
je
mov
mov
mov
out
sahf
push
pushf
je
les
adcb
xchg
lods
xor
cli
mov
pop
popf
jp
push
jl
sbb
jge
adc
loope
jb
cmpsb
cld
aam
add
test
lret
pop
mov
iret
push
mov
ljmp
sbb
inc
push
xor
jecxz
push
aas
jp
gs
rcll
scas
jge
jge
mov
test
test
sub
subl
bound
dec
ror
sbb
add
or
scas
push
cmp
mov
or
sub
jge
sub
sub
adc
jae
movsl
mov
test
stc
popa
fsts
pop
outsl
xor
int3
repnz
imull
mov
and
sub
enter
mov
ja
fcoml
and
and
or
stos
inc
int3
inc
inc
insb
fcmovbe
dec
xor
xchg
out
int3
mov
push
in
xchg
inc
cmpsb
mov
sbb
mov
jne
sahf
add
je
enter
pop
insl
roll
fisubrl
adc
mov
enter
push
adc
sbb
cld
sahf
scas
fsubs
data16
jp
cmpsl
jae
rol
imul
in
adc
adc
test
fwait
sub
mov
xchg
push
pop
xlat
ljmp
lock
sbb
in
pop
sub
add
subl
das
pop
xchg
and
popa
sub
lds
dec
sbb
movsb
cld
sahf
pusha
mov
inc
sahf
mov
icebp
and
sub
mov
add
add
popa
popa
outsl
out
int
je
mov
lahf
inc
jecxz
sarb
test
cmc
in
testb
ffreep
rolb
and
jmp
pop
faddp
ss
std
addl
adc
add
popf
fadds
test
test
xchg
jmp
xlat
pusha
cs
insl
xor
movsl
out
data16
mov
int3
and
in
push
mov
add
aas
adc
fsubp
bound
ret
sbb
cmp
call
andl
sbb
jg
js
mov
cli
adc
sbb
cmp
dec
fldenv
mov
out
jmp
pop
fwait
mov
js
mov
std
popa
xor
rorb
dec
push
jle
mov
mov
fcomps
xchg
cli
xchg
pop
shll
jno
lods
lcall
mov
inc
cmp
shl
cltd
sbb
push
imul
ljmp
pop
jp
out
daa
lcall
fwait
xchg
test
scas
cld
or
stos
jnp
and
lock
xor
mov
xchg
ret
ja
cmp
jp
xor
inc
or
or
jl
xrelease
inc
xor
push
fwait
sbb
cwtl
fdivrs
xchg
int
adc
push
xchg
add
je
sub
ds
adc
leave
push
push
mov
lret
outsb
xor
mov
gs
cwtl
scas
push
mov
xchg
movsl
mov
cmp
sub
insl
icebp
lahf
mov
scas
call
ss
aaa
jns
adc
flds
lret
shl
mov
jb
sub
xchg
inc
pop
subb
jecxz
scas
daa
les
pop
imul
repnz
shlb
pop
sbb
lretw
je
cmc
push
push
cmp
cltd
mov
sti
fistpll
jb
loop
xchg
cmp
or
sahf
lret
popf
js
ds
mov
out
push
mov
adc
cmpsb
cs
mov
addr16
in
lcall
cmpl
push
sbb
dec
ja
xor
push
adc
cltd
pop
insl
insl
aas
lds
cmp
sbb
dec
mov
paddw
ja
scas
fs
cmp
popa
pop
icebp
xchg
mov
imulb
addr16
sbb
jl
jle
sub
lahf
cmp
push
push
adc
mov
int
imul
lret
mov
pushf
repnz
testb
lcall
or
mov
loop
das
vmwrite
mov
faddl
xor
mov
cs
mov
sbb
pop
or
mov
jle
xchg
pop
stos
inc
xor
pushf
xor
jne
mov
mov
sahf
mov
imulb
outsb
mov
dec
adc
xchg
fwait
nop
jae
sub
aam
jle
jle
xor
sub
push
pushf
mov
inc
add
ret
sti
ljmp
mov
sub
xchg
lret
cltd
imul
xchg
shrl
push
jg
inc
std
dec
imul
lret
push
aam
cmovne
cmp
pop
xchg
mov
push
jg
outsl
mov
add
and
js
pop
xor
insb
mov
or
jecxz
divl
cmc
das
push
lcall
pop
out
test
sbb
xchg
lret
xchg
mov
dec
mov
insl
loope
and
push
mov
sub
push
mov
dec
xor
push
je
and
jge
mov
dec
xchg
sbb
inc
sbb
shrb
scas
xchg
inc
outsb
push
inc
mov
shr
mov
cmpsb
iret
sahf
dec
xchg
and
xlat
push
aam
sub
xorl
lods
dec
mov
jbe
int3
pop
inc
ds
mov
pop
cmp
cmpsl
cmp
shlb
stos
aas
mov
jp
hlt
loopne
shrb
xchg
test
xchg
jmp
movsl
adc
adc
or
adc
aas
jecxz
call
dec
or
data16
ret
xchg
adc
or
inc
xchg
add
mov
cmc
hlt
cs
jge
jbe
lret
ret
xchg
std
jmp
in
insl
mov
ret
aam
mov
adc
mov
jnp
dec
add
jecxz
add
ret
jg
mov
mov
lret
and
in
mov
jecxz
mov
jecxz
mov
and
dec
je
dec
fistl
mov
mov
rcl
sbb
push
out
cmp
cmp
addr16
hlt
dec
dec
test
push
mov
add
xor
or
jns
mov
sub
pop
in
pop
jb
dec
sbb
or
scas
popa
test
aaa
or
mov
lock
in
es
cs
or
aas
adc
xor
es
sub
cmp
xchg
dec
jge
daa
xor
fnstsw
jnp
lods
dec
mov
in
fwait
sbb
insl
jg
mov
cmp
jbe
push
fiaddl
inc
inc
loopne
push
dec
lret
pop
mov
cmpsb
jnp
aam
clc
jo
cltd
cmp
dec
inc
call
js
inc
xchg
in
mov
rcr
or
pop
mov
push
jno
test
sub
cwtl
lret
mov
sub
aad
jecxz
xchg
pop
cwtl
enter
mov
popf
jg
pop
aam
rorl
xor
xor
imul
negb
lods
xchg
jl
aaa
sub
cli
shrb
push
scas
and
mov
cmc
roll
push
sbb
fwait
xchg
in
sub
je
in
cwtl
test
call
shll
mov
insb
mov
cmc
out
dec
mov
pop
adc
pop
lcall
jle
cmpsb
lret
int
and
movsl
addb
rorb
in
pop
pop
fwait
lods
mov
testb
fadds
cld
adc
fistpl
loopne
mov
xor
mov
sahf
xor
fidivrl
xchg
xor
cmp
and
or
popf
mov
dec
imul
push
dec
aaa
add
fcmovu
and
push
clc
sub
mov
jne
cmp
cli
mov
cld
out
int
adc
in
xchg
imul
mov
aam
jnp
inc
call
stos
and
cmpsl
and
insb
add
mov
xchg
in
iret
hlt
lds
ss
fistpl
rorl
push
fnstcw
xchg
sti
add
inc
pop
aaa
dec
sbb
xchg
rcll
push
mov
rcll
jmp
dec
ret
nop
push
fwait
movsb
jne
jnp
imull
mov
pushf
push
adc
jle
jns
push
aaa
mov
jecxz
das
mov
in
push
fadds
pop
mov
sub
adc
jns
loopne
mov
loopne
mov
leave
xchg
aaa
pop
pop
jns
dec
xchg
sub
and
and
mov
sub
dec
inc
in
inc
repnz
add
stc
clc
fsubrp
inc
or
sub
fsubl
leave
fcmovnb
in
aas
dec
sub
lock
xchg
pushf
nop
inc
in
add
stc
mov
pop
xchg
jmp
inc
jbe
inc
gs
dec
inc
out
out
jecxz
inc
cld
pop
sbb
scas
add
and
ror
loope
pusha
push
and
cs
call
inc
orl
loope
and
rclb
je
pushf
or
jno
mov
loop
inc
mov
mov
and
add
shr
stos
push
or
push
fwait
shrl
fistl
inc
dec
mov
mov
push
lcall
in
dec
int
fidivrs
mov
mov
cli
lret
subb
xor
and
xor
mov
popa
mov
adcl
clc
lahf
mov
push
and
call
adc
inc
loopne
nop
push
adc
xor
mov
push
mov
loope
in
xor
adc
sbb
int
nop
lds
xchg
push
leave
in
test
push
int3
mov
and
sbb
jecxz
inc
int3
addb
mov
pop
leave
push
xchg
inc
lret
jle
mov
mov
enter
fstps
adc
inc
mov
scas
out
push
aaa
arpl
jbe
lock
cwtl
push
call
std
jo
ret
jge
nop
jl
or
dec
jb
sbbb
repnz
test
or
dec
shrl
and
and
je
push
cmc
mov
sbb
in
pop
push
push
lret
jmp
push
jecxz
insl
pop
xor
mov
and
dec
fstpl
jb
rorl
jecxz
int
in
inc
xchg
lret
inc
repnz
cmpb
mov
dec
cld
fstpl
jge
fwait
mov
xchg
push
jno
repz
cli
xchg
inc
push
stc
mov
int3
xor
or
mov
and
push
push
xor
aam
adc
dec
xchg
push
fiadds
mov
dec
les
fmuls
jae
mov
out
or
xchg
or
mov
jns
dec
std
and
add
adc
xchg
pop
sbb
iret
lock
push
mov
addr16
mov
xlat
dec
mov
mov
adc
lods
mov
cmp
xchg
mov
ds
lcall
aaa
add
movsl
int
sub
xor
subb
pusha
mov
ja
roll
mov
xor
push
sbb
sub
ret
and
mov
xchg
xchg
add
lret
ret
movsl
push
mov
mov
sbb
scas
fwait
imul
sbb
aad
bound
fldl
iret
xor
push
stc
sub
popf
rcl
adc
lret
pop
pop
js
aas
cmc
or
lea
dec
push
scas
mov
and
jne
xor
jecxz
rcl
ds
call
jmp
or
and
mov
aam
push
dec
fwait
adc
push
or
movb
add
xchg
imul
out
add
adcb
pop
icebp
incb
jbe
add
mov
xchg
incb
or
movsb
ja
mov
scas
adc
in
mov
in
lahf
adc
call
add
sarl
jmp
into
int3
cmp
mov
or
sarl
xchg
hlt
pop
lret
je
dec
popa
lcall
cmpsb
mov
mov
clc
in
pop
cmp
jmp
dec
fsubr
push
inc
daa
out
mov
in
and
repz
repz
shll
cwtl
sub
and
cli
faddl
add
dec
xor
stc
push
jl
mov
mov
gs
adc
xchg
dec
lret
pop
fcmovnbe
xor
testb
and
dec
call
test
mov
xchg
rcrb
lea
jmp
popf
pop
in
lods
pusha
and
js
jae
cwtl
add
adc
jo
pop
push
lods
lahf
jecxz
pop
pusha
data16
mov
int3
xchg
xor
test
push
mov
fs
inc
pop
punpcklbw
repz
out
stc
and
dec
sbb
add
pop
adcb
pushf
push
pop
adc
repnz
mov
ljmp
mov
repz
inc
sbbl
addr16
mov
popf
cmpsb
push
inc
jp
or
sub
in
pop
cli
ds
or
in
cli
mov
clc
jae
mov
xor
pop
mov
push
add
mov
rol
sbb
test
lret
pop
inc
xchg
dec
and
nop
xlat
lods
fisubrs
and
mov
ret
repnz
daa
dec
lds
jb
jp
jp
push
adc
mov
add
ror
leave
cmp
stc
xor
sbb
les
data16
rol
push
pushf
mov
pop
or
jnp
adc
jnp
xchg
ja
cltd
push
das
int3
push
sahf
mov
ror
sbb
push
out
mov
data16
ss
fldt
xor
hlt
stc
inc
xchg
pop
iret
sub
stos
jecxz
xlat
push
push
dec
jle
cmp
dec
sbb
mov
test
xchg
mov
mov
pop
push
stos
push
loopne
aad
sub
mov
cld
insb
out
pop
sub
xchg
sub
jae
ljmp
jp
xchg
cli
or
mov
and
je
imul
and
pop
inc
cmp
pop
in
in
pop
lahf
test
test
xor
mov
cmp
lret
in
sbb
adc
mov
repnz
jne
aam
shll
test
jnp
ret
xchg
push
mov
sbb
cmp
pop
mov
fldt
pop
enter
mov
pop
and
outsb
je
pop
or
neg
xchg
or
rcll
test
movsb
punpcklwd
sbb
mov
ret
pusha
jp
adc
sub
mov
mov
jne
movsl
hlt
mov
inc
pop
rclb
jae
fiaddl
clc
inc
pop
xchg
pop
xor
int
aam
shrb
xchg
xor
cmp
adc
rorb
jbe
or
pop
cltd
push
xchg
jg
xchg
cs
lds
ja
sub
jnp
es
rcrl
xor
int3
les
mov
arpl
sub
popl
mov
outsb
mov
push
cmp
cmc
ret
inc
ffree
and
mov
push
mov
fs
mov
cmp
and
int
inc
or
add
cmp
jae
xlat
icebp
rorl
sbb
loopne
dec
or
lock
push
jge
lcall
mov
insb
jle
xor
xor
sbb
mov
ret
sub
out
pop
fmull
dec
out
dec
sub
std
jb
cmp
ljmp
out
push
adc
sahf
push
mov
push
mov
mov
push
mov
cmpb
jbe
test
cli
dec
cmp
inc
xor
jb
sub
in
shr
add
push
cltd
lock
jle
and
rorb
jo
fbstp
mov
or
inc
add
sbb
cwtl
pop
incl
mov
data16
imul
xchg
inc
mov
int3
dec
imul
and
jl
cltd
loopne
sbb
mov
shrl
xor
inc
adc
sub
and
pop
loopne
rol
in
mov
test
mov
rorb
addr16
out
lds
or
popa
and
mov
xchg
ss
insl
inc
or
in
mov
test
or
fdivrp
xchg
jne
frstor
aaa
adc
xchg
sbb
inc
jg
mov
shll
jb
mov
sbb
or
inc
pushf
push
aas
jge
sbb
xor
add
test
xlat
inc
mov
aaa
sahf
adc
or
jae
lods
shr
clc
hlt
adc
xor
dec
cmovl
add
rcll
out
push
inc
lods
cmp
push
jb
call
cld
add
sbb
clc
xchg
jmp
add
aaa
mov
std
shrl
cs
scas
dec
fbld
xchg
xor
scas
stos
jns
shll
testl
pop
adc
mov
stc
push
arpl
push
out
inc
xor
push
dec
insb
xchg
mov
mov
insb
nop
jnp
popa
xor
jne
ret
sahf
dec
mov
ret
cltd
dec
jns
jne
jp
stos
mov
add
aad
daa
jo
jmp
push
xlat
push
mov
out
pop
loopne
mov
movsl
iret
jae
arpl
xchg
scas
fnsave
fisttpll
mov
push
popf
jge
jle
jecxz
ret
mov
loop
fisttpll
push
in
pop
cmp
test
arpl
fcmovb
push
xor
push
test
ficompl
dec
jle
popl
push
xor
ljmp
mov
sub
inc
lods
mov
cltd
mov
aas
fs
dec
mov
mov
repnz
push
lock
jbe
jnp
call
test
stc
mov
add
ja
push
leave
loopne
out
xor
sub
xchg
or
sub
out
neg
dec
push
adc
jo
leave
int
adc
mov
loopne
into
cmp
inc
jl
push
adc
push
inc
push
in
jbe
cmc
or
fnop
lcall
out
loope
mov
loope
orl
mov
jmp
imul
test
ret
add
mov
lods
jge
scas
xor
pop
push
and
rcrb
xchg
sarb
xor
jne
pop
xchg
stos
xor
xlat
lret
push
in
lock
std
inc
mov
push
jge
sbb
pop
shrb
lods
test
mov
pop
and
push
enter
push
adc
lcall
pop
incb
pop
jns
cmpsb
rorb
fisubrl
sub
rcll
std
in
jbe
or
scas
mov
lret
xchg
push
aam
outsb
nop
mov
mov
inc
in
out
out
add
out
ss
rcrb
and
out
adc
mov
jmp
std
mov
pop
and
xchg
inc
aad
js
lret
mov
pop
insl
in
inc
mull
and
or
inc
js
push
loopne
out
rsqrtps
test
jecxz
and
mov
movsb
xchg
std
inc
mov
repz
shll
sbb
mov
push
loope
in
ror
jg
es
push
add
add
xchg
lds
sub
imul
pop
xor
sbb
push
xchg
decl
hlt
mov
xchg
dec
inc
mov
dec
add
ds
inc
loop
ljmp
imul
fnstenv
jle
inc
or
lds
fnstcw
mov
push
push
adc
out
mov
or
adc
sub
test
movsb
popa
or
test
cmp
adc
cltd
push
das
xchg
daa
fldl
lock
xor
lret
add
jns
mov
jnp
bound
ja
outsl
mulb
add
xchg
sub
cltd
popa
int
testl
popf
dec
mov
xchg
mov
jl
cmp
xor
stos
into
mov
lds
icebp
pusha
jecxz,pn
sbb
bnd
cmpsl
ret
fsubr
cli
popf
jno
js
jae
push
out
jb
and
xchg
mov
pop
gs
sbb
test
lret
insl
mov
jge
call
pushf
adc
out
sbb
push
psllq
inc
sbb
xchg
jae
hlt
addr16
lea
push
cmp
pop
sbb
adc
subb
ja
mov
ret
xor
mov
mov
cmc
adc
sbb
lods
mov
lds
adc
add
xor
sbb
ljmp
xor
imul
test
dec
mov
addr16
movsb
das
movsb
movsb
mov
inc
loop
iret
ss
fisttps
sub
push
dec
stc
adc
popf
aaa
lods
jo
jno
sub
xchg
test
sbb
ljmp
jp
sbb
sti
xchg
push
push
sbb
fidivs
mov
addr16
sar
inc
adc
cmp
pop
aam
es
or
sbb
push
push
dec
mov
pop
imul
lahf
push
dec
mov
jecxz
ds
jae
test
push
aas
xchg
dec
mov
xchg
test
aam
xor
pop
push
jae
xchg
inc
dec
cmpl
dec
sub
push
mov
pop
inc
shl
call
enter
or
jnp
pop
jecxz
mov
scas
dec
dec
mov
mov
mov
out
in
xchg
mov
mov
jmp
pop
and
insl
or
inc
lea
xor
xchg
in
and
xor
jge
out
addr16
loopne
push
ficoml
add
jb
ljmp
scas
or
push
lahf
dec
xchg
mov
xchg
iret
pop
jno
adc
les
cmp
pusha
jl
cmp
cltd
push
jb
inc
loopne
insl
sbb
pop
test
xor
push
in
adc
and
insl
cltd
inc
int3
jbe
mov
insb
mov
pop
cmpb
mov
push
test
ljmp
sub
inc
jmp
xor
movsl
xchg
push
xchg
outsb
mov
les
cli
xor
insl
mov
cmpsl
mov
lret
test
in
pusha
push
mov
xchg
adc
jmp
add
mov
push
inc
jae
cwtl
cmc
push
xchg
test
mov
jae
dec
insb
push
cmp
push
push
jns,pt
mov
dec
add
jb
mov
push
xchg
inc
cmp
mov
dec
imul
data16
add
xor
fiaddl
sbb
push
ret
sub
int
or
mov
push
daa
inc
out
and
and
popf
cwtl
jecxz
movsl
sbb
inc
bound
sbb
jno
sub
add
daa
jnp
xlat
ds
sub
sbb
pop
sbb
adc
jge
icebp
rep
lea
and
jecxz
push
sbb
shlb
and
in
mov
add
into
loop
mov
sub
sbb
jb
std
mov
push
out
sar
adc
push
xor
push
adc
xchg
lahf
jle
bound
pop
pop
mov
scas
add
out
out
int3
jge
mov
loop
mov
xor
mov
inc
into
jg
pop
fdivrs
in
cmp
cmpsl
mov
sub
in
loope
push
jmp
dec
insb
fcomp
lock
call
mov
jns
ss
mov
xchg
add
jb
mov
mov
xchg
movsl
push
cltd
outsb
push
test
pop
pop
mov
mov
test
leave
gs
shll
add
js
mov
test
repz
jne
dec
out
mov
mov
xlat
icebp
cli
ds
stos
adc
in
sbb
jne
sbb
xchg
lock
cmp
cmp
mov
addl
sbb
test
sub
inc
mov
outsb
add
pop
xchg
jmp
cs
adc
scas
lahf
fcompl
movsl
mov
jl
addr16
lods
daa
xor
faddl
nop
dec
dec
fs
inc
jl,pn
lock
notl
xchg
outsl
xlat
mov
mov
xor
fdivs
into
lret
jne
fs
mov
and
nop
in
pop
push
out
repz
mov
lahf
cmp
cwtl
or
js
pop
jl
xchg
add
adc
mov
mov
mov
add
dec
scas
in
out
loope
cmpb
jnp
push
dec
stos
gs
mov
rcr
push
xchg
sahf
xor
jp
bound
cwtl
mov
es
mov
sub
outsl
and
mov
mov
fwait
cmpsb
jo
jnp
xchg
aam
mov
pop
nop
test
mov
pop
inc
das
jb
leave
das
addr16
sti
mov
or
mov
add
fnstenv
ljmp
test
int3
lods
stos
jmp
adc
push
sbb
hlt
sti
lret
cmp
mov
push
int
lds
sbb
out
sub
ja
push
mov
test
and
sbb
push
cmp
pop
test
nop
push
lea
je
mov
xor
or
sti
stc
fwait
lret
mov
xchg
pop
ljmp
out
pop
nop
mov
aam
xor
inc
repnz
or
sbb
lret
fidivs
adcl
in
sbb
fcomip
adc
enter
adc
mov
jb
push
push
dec
shll
insl
push
sub
pop
and
je
ret
cmp
cmp
xchg
sbbl
mov
hlt
popf
ss
or
lea
or
add
cmc
movb
lret
imul
push
fldt
adc
icebp
dec
xchg
lods
or
dec
lret
add
mov
xchg
and
jb
cmc
outsb
roll
sbb
or
push
xorb
sub
insl
and
xchg
jl
cmpsb
bound
rorb
xchg
adc
pop
or
or
cmp
sub
out
xchg
jnp
xor
negb
insl
lock
fisttpl
arpl
cmpsl
dec
pop
bound
fs
imul
clc
pushf
scas
icebp
jb
scas
repz
pop
cwtl
loopne
jbe
xchg
inc
xor
jnp
aaa
js
cwtl
xor
jg
enter
jmp
jo
imull
pop
xchg
lea
mov
dec
xor
mov
dec
xchg
cltd
dec
test
cmp
xchg
or
push
adcb
jge
dec
cwtl
xchg
sti
sbb
fwait
and
cld
push
mov
pusha
ret
jle
xchg
jmp
jecxz
cmpb
mov
push
std
push
jge
pop
int3
insb
inc
out
ja
clc
inc
jmp
stos
mov
and
add
shll
mov
push
mov
mov
stos
imul
inc
push
mov
andb
xchg
adcb
leave
cmc
jbe
cmp
aaa
hlt
mov
ret
push
fistpll
pop
imul
sub
add
movsb
sub
leave
roll
add
idiv
in
sbb
repz
je
jnp
andb
push
xor
outsl
xchg
xchg
mov
pop
add
aam
sbb
dec
xchg
mov
es
add
clc
jns
subb
mov
mov
mov
add
and
mov
jg
and
clc
repz
int
jmp
push
mov
lods
and
dec
bound
xor
in
lods
insl
add
shrl
in
pop
sub
add
pop
cmpsl
cwtl
dec
sahf
inc
test
in
cld
push
subl
nop
daa
mov
sub
jae
outsl
inc
mov
inc
or
jo
rclb
leave
push
inc
fiaddl
sbb
sbb
jne
push
mov
inc
pop
or
cmc
pop
je
cmp
orl
inc
rorb
repz
sbb
xchg
fcmovu
dec
mov
and
insl
mov
stos
push
jns
movsl
cmp
mov
xchg
dec
cmp
pop
sahf
pop
ss
push
inc
push
shlb
add
push
dec
pop
dec
ret
stos
inc
test
dec
lcall
mov
insl
insl
aad
outsb
mov
pop
sub
mov
push
insb
loop
jne
xchg
jg
dec
adc
pop
add
stc
faddl
dec
cmpsl
mov
cltd
jp
into
loop
cs
stos
cltd
mov
and
bound
cmpsl
cwtl
adc
lods
cmp
add
lret
sub
jmp
addr16
popa
push
popa
sahf
inc
add
movsl
out
jge
fstl
fwait
pop
xor
imul
mov
outsl
mov
leave
xchg
jge
add
adc
mov
adc
movsb
jns
int3
dec
and
sbb
sbb
add
movsl
sbb
mov
pop
xchg
sbb
inc
dec
pop
fmul
push
ja
cmc
pushf
mov
sub
mov
jbe
fwait
nop
es
mov
xor
or
iret
movl
cmp
mov
out
test
loopne
push
mov
mov
mov
repz
dec
jmp
xor
scas
push
loope
xchg
mov
adc
xlat
jns
pushf
jo
pop
fisttpl
mov
fwait
adc
push
dec
addr16
push
enter
or
xchg
pop
dec
adc
out
mov
mov
test
cmp
fwait
pop
push
pop
or
jb
fnstenv
pusha
sbb
xchg
nop
cmp
clc
push
sbb
jle
adc
xor
cltd
dec
mov
je
mov
pop
pop
sub
jl
jle
orb
pop
xchg
repz
dec
dec
mov
push
dec
lcall
xor
ficompl
lods
leave
push
ret
cmc
fstpt
mov
mov
cs
std
popf
mov
jne
xchg
fldl
scas
xchg
and
fmull
outsb
add
pop
gs
js
stos
push
popa
xchg
pop
adc
pop
jno
outsl
jno
jp
sbb
sbb
xchg
nop
pop
fldt
xchg
dec
push
cmp
cld
cld
int3
pop
rcl
sbb
mov
adc
stos
inc
divl
ret
pusha
lret
jl
jo
xchg
movsb
pop
ds
lds
jb
cmp
push
js
fsubl
sbb
fiadds
es
ja
daa
mov
push
pop
addr16
jl
mov
jp
sbb
dec
jp
aam
int3
imul
pop
xlat
or
je
mov
mov
mov
lds
cwtl
mov
push
mov
jge
loop
inc
mov
and
dec
pop
gs
cmp
or
mov
scas
cmp
pusha
mov
ljmp
int3
add
jns
dec
mov
mov
iret
test
test
lahf
les
mov
jecxz
fnstsw
enter
jecxz
lret
push
lods
add
out
push
movsl
push
fcom
mov
out
pop
push
xchg
sbb
mov
ljmp
cld
and
outsl
and
mov
dec
mov
psubsb
push
cmp
push
ja
or
in
dec
sti
inc
out
pop
push
stc
movsb
xor
mov
xor
out
push
ljmp
xchg
rcl
xchg
jmp
cmp
cmp
loope
mov
hlt
mov
dec
mov
cmp
lds
xchg
xchg
jbe
or
mov
xorb
push
movsl
loopne
xchg
mov
shll
fidivrs
test
out
jle
cmc
fs
es
adc
jle
jae
daa
dec
lret
in
outsb
pushl
mov
fmull
mov
jae
mov
jmp
mov
mov
daa
sbb
clc
add
rclb
mov
imul
xchg
xchg
arpl
shrb
and
xor
jns
push
notl
jae
mov
loop
inc
test
in
jmp
mov
adc
xor
shlb
push
sub
popaw
jno
add
int
std
stos
mov
divb
xchg
shrb
sti
fidivrs
or
das
inc
jno
pusha
icebp
outsb
pop
and
jp
lahf
jle
mov
lods
aad
into
push
xchg
out
aad
jecxz
jbe
sbb
add
mov
push
or
outsb
pop
faddp
pushf
aam
stc
add
repz
push
mov
pop
cli
shrb
loop
or
mov
xchg
add
or
and
cmc
push
insb
in
mov
iret
pavgb
jbe
mov
testl
aas
xchg
adc
jbe
adc
sti
das
mov
sub
sub
or
push
xchg
scas
jg
test
sbb
dec
or
subb
repnz
push
xchg
xchg
sbb
test
jl
pop
xor
adc
mov
incb
and
movl
sbb
movsl
aad
rcll
repnz
das
xchg
jp
xchg
xor
loope
sbb
jbe
jp
mov
lods
repz
xchg
cltd
test
add
fst
lods
dec
jg
mov
cmp
xchg
push
repnz
lret
addr16
test
jp
ror
cli
mov
jle
xchg
aaa
pop
das
aad
fdivrs
dec
dec
cmp
lcall
xor
inc
sbb
iret
sub
mov
hlt
out
stc
and
aaa
xchg
dec
inc
push
test
add
div
sub
pop
icebp
sub
and
inc
sub
shr
into
sahf
mov
xlat
lea
out
fwait
les
pop
es
stos
cmp
xchg
leave
adc
push
xor
sub
cmpsb
mov
movsl
inc
jno
and
aas
pushf
xchg
cltd
or
add
mov
aaa
jo
aad
sub
adc
push
movsb
sbb
xchg
mov
add
mov
pop
lsl
mov
adc
fidivrs
test
movsb
pop
sub
pop
pop
inc
xor
ret
pop
loop
jo
mov
push
or
fildll
xchg
jbe
in
sbb
sub
pop
test
iret
das
mov
fsubl
sarl
andl
and
push
out
and
enter
cmp
sub
icebp
jb
scas
sub
jnp
push
icebp
mov
lock
imul
leave
and
ret
jecxz
sbb
jmp
xor
inc
xchg
icebp
lahf
fsubrl
dec
outsb
sbb
ljmp
lahf
push
mov
push
xor
jmp
test
dec
shlb
lret
stos
mov
stos
and
pop
cld
and
loopne
jns
mov
cmp
popa
mov
and
and
xchg
sar
sbb
jb
int
sub
mov
xlat
roll
divl
in
insl
roll
inc
xchg
dec
pop
push
xchg
inc
pop
test
aam
xchg
out
mov
jecxz
rol
adc
fs
pop
xor
lcall
cmpsb
pop
mov
cmc
out
and
push
inc
icebp
repnz
insl
cld
jb
gs
sub
xor
xchg
pop
and
rorb
mov
or
std
in
mov
sbb
enter
jp
jb
mov
pop
xlat
ja
mov
fsubrs
mov
jge
int3
fwait
xchg
movsl
adc
movsb
mov
pop
sti
or
mov
out
mov
sub
adc
pop
add
push
cmp
pop
cmp
or
mov
cmp
jb
xchg
mov
and
inc
dec
or
xor
mov
mov
fldz
jo
mov
lret
stos
movsl
or
jmp
xchg
mov
jae
inc
cmp
mov
test
lock
int3
jg
inc
div
push
or
sub
inc
les
test
mov
lock
shll
sub
lods
mov
les
test
dec
jl
sbb
pop
sub
pusha
mov
repnz
mov
mov
movsl
ds
jae
mov
push
dec
mov
and
into
mov
fcmove
fisttpl
stos
sub
ljmp
pop
cwtl
lods
imul
dec
pop
or
add
fsubr
sub
sub
adc
mov
and
rolb
adc
fisubs
jl
and
push
xor
pusha
pop
stc
fs
xor
dec
ret
or
push
dec
push
or
xor
repz
and
out
push
inc
add
aaa
repnz
sub
sarb
repz
sbb
or
dec
cmp
push
jnp
xor
mov
mov
or
cmp
mov
je
sub
or
add
and
sbb
push
cmpsl
mov
ss
les
mov
jae
add
cmpsb
mov
sub
movsl
dec
aas
pop
das
nop
lea
inc
outsb
inc
test
xor
or
dec
jg
ret
in
das
add
cmpb
lcall
jg
mov
and
sbb
insb
jl
push
pusha
xchg
aaa
lds
stos
test
adc
sub
push
aam
xchg
add
ljmp
inc
lahf
mov
movsb
inc
fdiv
repz
sar
sub
js
jle
push
pushf
and
or
sbb
aas
or
ljmp
or
dec
sar
mov
aam
add
sbb
aaa
xchg
lahf
lret
mov
fildl
pop
ds
or
je
xlat
loop
push
in
jnp
mov
fnstenv
push
push
dec
mov
fimull
and
or
ret
jle
addr16
xchg
orl
fildll
cmp
and
sbb
clc
insl
lahf
out
int
mov
loope
loope
je
sbb
jle
out
stos
inc
cld
imul
fcoml
ret
ss
xor
popa
lds
aas
xor
pop
arpl
in
or
scas
xchg
pushf
into
adc
aaa
fnstsw
lds
add
mov
shlb
xor
and
gs
hlt
dec
xlat
sbb
icebp
dec
adc
sbb
xlat
sub
inc
mov
jge
or
stc
dec
xchg
xor
sub
inc
aad
ljmp
sub
gs
push
in
scas
cmc
out
cltd
stos
dec
sbb
or
adc
rolb
push
clc
and
daa
dec
push
mov
adc
int
mov
mov
cmc
movsb
push
movsl
sbb
int3
into
pop
push
mov
orb
xor
mov
jmp
stos
fs
inc
dec
pop
or
mov
push
lret
xchg
mov
mov
daa
jne
xchg
lcall
bound
fdivl
in
cmpsb
sub
je
fisttpl
or
les
rorl
adc
hlt
xlat
cmp
mov
mov
pop
cmp
out
mov
dec
ds
ljmp
inc
and
into
mov
test
jne
fdivrs
mov
imul
aam
sub
int
push
stos
add
mov
daa
call
rolb
push
rcll
nop
pop
or
jg
aad
aaa
sbb
clc
fs
adc
leave
xchg
sbb
dec
jb
scas
pop
pusha
loopne
pop
push
pop
and
cmp
mov
mov
shll
inc
cmc
push
in
dec
or
scas
mov
data16
cmp
inc
testb
mov
jno
jb
gs
or
jmp
addl
mov
gs
insb
mov
mov
pop
dec
mov
lds
push
mov
test
shr
push
ja
jb
xor
mov
int3
cmp
scas
test
repnz
jae
out
add
adc
mov
imul
add
movsl
xchg
jns
add
out
pop
lret
ljmp
inc
mov
sbb
stc
je
or
ljmp
or
pop
xchg
mov
mov
cltd
int3
xchg
mov
insb
inc
data16
inc
lods
fists
inc
ljmp
mov
adc
scas
iret
mov
enter
mov
aaa
daa
cli
test
adc
stc
sub
inc
jecxz
mov
call
add
fs
mov
jne
mov
or
push
jl
add
xor
inc
bswap
scas
inc
adc
bound
andb
add
loop
cmp
cli
inc
and
dec
pop
xor
jge
cld
aaa
push
adc
mov
icebp
into
mov
lahf
jecxz
or
aaa
push
jne
push
adc
outsb
xor
test
icebp
push
fistl
sbb
ret
add
fiadds
xor
adc
rcll
pop
in
iret
ret
addb
int
xchg
adc
jmp
scas
push
std
bound
dec
cmpsl
scas
push
in
sub
mov
out
jae
lock
mov
mov
notl
aad
mov
and
mov
mov
fdivs
pop
fistpll
insl
and
pop
std
das
xor
test
pop
jmp
jb
inc
sub
pop
cmp
movsl
adc
dec
lea
and
mov
div
adc
xchg
loopne
je
xor
sar
test
rclb
and
dec
cmpsl
push
xor
mov
aad
decl
sub
sub
jmp
pop
jno
and
pop
divb
insb
jp
lret
fwait
mov
cmp
adc
mov
inc
sahf
mov
lret
mov
push
xor
add
into
lods
fildl
adc
pop
adc
mov
aad
dec
add
ror
popa
mov
pop
hlt
push
pop
inc
ds
into
adc
pop
xchg
push
cmp
ficompl
jp
pushf
shlb
hlt
cmc
dec
aad
scas
inc
adc
adc
mov
je
imul
lcall
mov
ja
mov
ffreep
cmova
mov
lcall
cmp
push
lods
pop
nop
pop
daa
aam
popf
stos
stos
mov
test
dec
xor
lods
cmp
repnz
dec
gs
mov
lret
cmp
xor
sbb
jnp
iret
mov
inc
movsl
pop
xchg
dec
dec
push
sbb
int
add
add
inc
jo
mov
pop
mov
push
sahf
mov
push
add
or
faddl
outsl
cmc
xor
pushf
xchg
sbb
in
push
lds
in
int3
cmpsl
mov
sahf
addl
jg
stos
or
mov
add
scas
cmpsl
xor
add
mov
push
test
add
cltd
scas
rcrb
lock
cmp
cltd
out
std
mov
push
xchg
dec
repnz
mov
aaa
in
dec
mov
fadd
xchg
sub
jne
sub
sub
faddl
clc
loopne
cmp
jae
xchg
sbb
enter
and
ljmp
popf
imul
xor
push
dec
shl
js
mov
repnz
pop
jg
or
lahf
dec
loop
lods
cmp
mov
sub
in
xchg
out
push
mov
fwait
xor
sbb
out
popf
insb
loope
cltd
ljmp
cmp
inc
add
sub
loope
les
jae
mov
pop
xchg
cs
gs
inc
mov
or
ror
push
dec
jg
mov
ret
cmp
dec
daa
lods
sub
mov
dec
aad
adc
mov
mov
inc
mov
fisttps
inc
pop
bound
dec
scas
mov
rorl
mov
aas
push
cmp
inc
out
cmp
movsb
mov
lds
loopne
xor
insl
inc
push
into
aaa
movsl
dec
xor
inc
ljmp
cli
xor
mov
fstpt
aas
mov
nop
cld
cmpsl
int
sub
scas
fsubr
into
outsb
js
shlb
xor
mov
cs
sub
dec
xchg
pop
mov
or
push
pop
pop
xchg
sbb
push
fcoml
in
ljmp
sub
pop
pop
test
mov
lods
insl
xchg
or
shll
xlat
cmp
mov
push
fnstenv
clc
jae
or
pushf
and
hlt
jl
ficoml
cld
rcr
lcall
or
stos
aad
sub
add
cmc
stos
jmp
cmpsl
mov
ss
gs
idivl
mov
jnp
adc
bound
rcrb
ds
imul
push
pop
adcb
push
cltd
jne
pop
lds
cld
sarb
rclb
push
outsb
mov
cs
rolb
sbb
xchg
data16
and
pop
mov
outsb
xor
out
sti
cmpsl
mov
repnz
cmc
jno
push
daa
mov
pushf
inc
out
sbb
insl
ja
paddw
sbb
scas
push
es
out
imul
iret
mov
pop
jecxz
mov
loopne,pt
inc
push
push
push
and
cmc
sbb
sub
icebp
shl
jns
push
adc
lea
lods
add
xor
lret
rolb
adc
in
mov
pop
enterw
and
into
loope
jbe
js
aaa
loopne
ds
dec
aam
xchg
adcl
pop
in
popa
sbb
adc
pop
mov
xchg
cmc
fidivs
fsubs
stc
xor
rcrl
jne
mov
cmp
leave
push
fnstcw
call
cld
fsubrs
xor
or
xlat
sbb
sub
xchg
ret
mov
cs
out
mov
add
mov
pop
in
adc
ret
lea
sbb
pop
lea
outsb
iret
mov
leave
aam
repz
jmp
shlb
cmp
inc
or
xchg
scas
lahf
xchg
add
cmp
xchg
scas
std
repz
and
xchg
adc
mov
push
pop
test
div
cmpb
xchg
shufps
aad
xor
push
push
push
push
shlb
dec
scas
mov
mov
fs
mov
dec
fsubr
cltd
push
jl
push
outsl
add
jae
mov
cmp
pop
std
sti
cmpsb
in
ja
movsb
add
mov
and
lcall
jge
in
roll
xchg
mov
fidivl
loopne
fwait
jp
ds
or
jle
xchg
dec
sbb
data16
adc
dec
lcall
ret
sahf
xor
in
sub
in
lds
in
dec
testl
cwtl
jl
dec
xor
rcl
dec
loop,pn
cmpsl
xor
out
fildl
adc
xor
mov
loope
push
push
cli
xchg
adc
dec
mov
and
mov
cmpsb
outsb
lret
out
sbb
movb
lret
push
and
shl
enter
and
popf
or
je
xor
sub
fiaddl
jp
xchg
scas
add
rorb
pop
fwait
inc
repz
sub
inc
add
mov
mov
inc
fs
jno
call
test
mov
popf
pop
push
mov
cmp
loop
lret
lods
mov
enter
lcall
les
repnz
cmpsl
fidivrl
leave
mov
cmc
pusha
loope
mov
sahf
or
test
imull
sbb
jnp
or
cmp
and
jl
fldl2t
addr16
or
test
cmpsb
cs
or
pop
pop
xchg
xor
xchg
or
repnz
loope
and
push
inc
mov
test
push
imul
xchg
and
std
push
loope
inc
sbb
int3
pop
inc
dec
addr16
ret
xor
sub
or
in
push
push
scas
int3
cs
bound
jmp
mov
mov
sarl
mov
cmp
push
negl
leave
lods
jbe
pop
ljmp
lock
scas
add
xchg
xchg
sahf
add
pop
ja
xor
or
cmpl
push
int3
loopne
bound
jae
ja
pop
adc
js
dec
test
call
sub
lcall
sar
and
std
outsl
fcomps
test
mov
ljmp
and
daa
lret
imul
pop
push
repnz
sbb
aam
push
push
out
mov
mov
popf
add
lret
mov
add
inc
hlt
lret
ljmp
and
adc
and
pop
movsl
sub
mov
add
mov
pop
mov
add
xlat
dec
mov
push
stc
mov
jns
cltd
cld
cld
fsubrl
mov
enter
push
xchg
adc
push
jno
imul
mov
test
and
mov
addl
push
and
mov
mov
xchg
push
mov
xor
test
lock
mov
jo
test
adc
les
lret
mov
sub
arpl
inc
aad
leave
jns
dec
cld
add
and
aas
pop
mov
cmp
and
or
dec
dec
mov
testl
push
imulb
add
push
mov
adc
sub
add
lods
test
adc
jle
jnp
cmpsb
sbbb
stos
test
loopne
push
icebp
and
fbstp
outsl
and
in
xchg
and
add
pop
sbb
push
xor
fists
mov
cmp
test
in
out
loop
push
setae
pop
incb
lahf
push
pand
sub
cmp
xchg
inc
lret
mov
inc
sub
jnp
fwait
sbb
stos
icebp
push
pop
and
fnstsw
notb
sbb
das
pop
shll
sub
fildl
mov
addr16
mov
jl
rol
stc
mov
xor
clc
lods
stos
adc
mov
jg
add
lods
out
mov
enter
inc
jg
aaa
fs
sub
jmp
push
adc
jmp
stos
fcomp
andb
add
out
sub
xor
sahf
and
dec
pop
bound
adc
inc
dec
and
insl
mov
dec
add
loopne
shll
inc
inc
cltd
xor
cmp
sub
mov
push
mov
dec
mov
cwtl
adc
out
outsb
movsb
cmp
xchg
mov
dec
or
imul
mov
or
cmc
popf
scas
xchg
scas
push
fdivp
fstpl
mov
pop
jl
pushf
dec
cld
or
sbb
int3
push
inc
mov
fs
jne
push
sahf
push
aaa
ret
in
pop
pop
iret
lods
inc
imul
fistpll
mov
cltd
repnz
leavew
pop
rcll
into
and
or
mov
or
popf
adc
pop
jae
push
pop
cmpsl
adcb
ss
movsl
xchg
push
cmp
call
insb
dec
imul
movsb
or
xchg
in
scas
les
jg
mov
mov
into
test
cmp
and
jns
ret
cmc
push
xchg
or
and
mov
stc
add
jo
mov
cmpsb
add
sub
pop
push
cwtl
ret
test
test
push
sbb
and
mov
push
mov
mov
aaa
negb
ds
inc
dec
enter
mov
stos
lods
cmc
daa
divps
pop
pop
shlb
jbe
add
sbb
sar
fldcw
or
and
sti
xorb
ret
fistpl
jno
enter
mov
adc
jns
rolb
pop
sub
sti
mov
push
cmc
dec
bound
movsb
inc
test
xor
fiaddl
jecxz
mov
mov
adc
bnd
nop
clc
dec
push
dec
push
ror
inc
push
push
pop
ficoml
lret
mov
stos
push
insl
stos
xor
mov
pop
outsb
ret
cmp
das
lret
stc
imull
out
jl
insl
mov
lods
lods
std
bound
sub
pop
pop
fiadds
movl
mov
stos
test
mov
call
cmpsb
lahf
in
pop
xchg
sbb
or
sahf
mov
pushf
ds
mov
bound
mov
icebp
icebp
xchg
dec
stc
sbb
mov
xchg
pop
fiaddl
movsl
dec
mov
mov
xlat
test
xchg
pop
daa
cmp
add
jae
fnstcw
push
xchg
and
push
add
test
add
dec
adc
lods
jb
push
call
aam
sbb
aad
sti
sbb
cs
scas
cli
popa
hlt
daa
add
inc
mov
xchg
outsb
icebp
jnp
mov
xor
jb
aad
jno
outsl
jnp
xor
mov
pusha
scas
pop
les
sub
std
cwtl
sub
loopne
fistpl
xchg
shr
pop
dec
shll
ret
add
in
outsl
repnz
jl
repnz
mov
test
out
ret
mov
test
mov
stos
andl
jmp
xchg
icebp
dec
sub
cmp
and
gs
dec
add
mov
rclb
add
jnp
inc
into
dec
add
mov
xchg
lods
cwtl
ljmp
lret
jle
cmp
dec
scas
popf
fstpt
outsb
xchg
rcrb
dec
xor
aaa
daa
pop
cmc
inc
sbb
push
mov
inc
rcr
push
aam
sub
mov
mov
mov
and
add
adc
and
ss
fisttpll
adc
fidivl
xchg
xchg
int
or
je
popf
push
dec
push
adc
cli
mov
pop
in
lret
cld
adc
cld
jne
lea
hlt
jns
lret
call
int3
pop
rcrb
lods
out
mov
jns
jecxz
dec
jmp
mov
pop
adc
mov
cmp
push
xlat
pusha
inc
enter
mov
clc
push
cs
scas
mov
xchg
lret
test
xchg
test
lret
ret
retw
inc
sbb
ret
lea
aam
jge,pn
icebp
and
rcll
push
jns
push
test
inc
or
shlb
xchg
movsl
jecxz
mov
imul
movsl
gs
mov
mov
std
ljmp
icebp
pusha
lret
mov
add
in
add
daa
out
adc
faddp
push
jp
sahf
mov
mov
xchg
idivl
and
insl
push
dec
cwtl
mov
mov
cmpsl
adc
or
lea
and
dec
cmp
push
pusha
cmp
loope
mov
or
xor
imul
cs
xor
arpl
add
fdivl
mov
divb
jns
inc
lcall
sahf
and
ds
scas
sbb
mov
cltd
loope
js
cmpsl
aam
pop
add
std
scas
lcall
dec
fwait
xor
and
insl
mov
and
out
or
loope
das
cmpsl
adc
je
das
cltd
sbb
adc
rcl
outsb
mov
add
push
inc
mov
subb
or
dec
cmp
pop
push
mov
xor
cwtl
dec
push
cmc
xchg
rolb
mov
ds
cwtl
cmp
and
push
fwait
adc
pop
and
mov
push
mov
out
or
imul
movb
dec
add
bswap
lods
adc
pushf
mov
jae
jb
inc
xchg
jmp
loop
imul
mov
sub
and
ret
push
pop
cmpsb
dec
outsb
jbe
fs
mov
mov
and
add
repz
mov
and
mov
inc
push
pop
test
arpl
adc
call
push
add
aaa
push
push
test
int3
insl
outsb
aas
push
mov
sub
lea
xor
push
cwtl
adc
pop
leave
sbb
sti
xchg
inc
loop
arpl
popf
cmp
hlt
outsl
pop
pop
add
test
dec
mov
movsb
jo
fists
or
lret
mov
push
mov
lea
outsb
mov
int3
mov
fbstp
xor
orb
pop
lods
dec
insb
pusha
add
inc
push
xor
inc
xor
lds
int
inc
cmp
cwtl
dec
out
insb
mov
pop
or
ret
or
ss
repz
add
ss
sbb
or
mov
add
insl
outsl
int3
jnp
push
xlat
add
aaa
lods
out
mov
push
xor
pop
xchg
xor
sahf
jbe
lret
ja
pusha
push
test
lods
jg
mov
mov
outsl
push
xor
shr
mov
inc
or
mov
push
lods
lahf
pop
test
and
fildll
vpaddusb
fidivrl
repz
mov
or
jo
dec
loop
mov
inc
shlb
xlat
aad
jge
pop
mov
popa
in
add
inc
pop
dec
jmp
inc
insl
call
cmpsl
lahf
inc
jg
xchg
fstl
push
sti
repnz
ret
mov
inc
or
or
fistps
dec
cmpsl
stc
xchg
fildl
or
push
fisubl
pop
xchg
loop
popf
in
fdivrp
pop
in
or
or
jp
fstps
rcll
fistpll
pop
sbb
inc
inc
inc
add
add
and
cmp
pop
lret
push
pop
add
cmp
stc
repnz
es
mov
mov
out
xlat
jnp
and
adc
push
call
daa
lds
sub
and
int3
adc
inc
test
ljmp
inc
sbb
fxch
xchg
xchg
jne
test
pop
cmp
sub
imul
cmpsl
int3
xor
testl
pushf
mov
mov
mov
mov
sahf
push
cmp
xor
mov
mov
ret
jl
out
imul
in
sub
and
or
xor
or
xor
aam
dec
pop
cmpl
xor
out
xchg
sub
xor
adc
xchg
mov
shll
mov
insb
popa
out
mov
nop
js
sub
lret
sbb
mov
pop
shlb
loopne
mov
pop
cmp
pop
stos
testb
cmp
shll
push
cli
mov
repnz
inc
sbb
mov
inc
dec
ss
add
test
jo
sbb
jno
add
or
add
xchg
xor
add
push
inc
pop
jo
lock
cmp
adc
dec
test
push
test
rolb
andb
dec
scas
or
mov
sahf
mov
mov
scas
nop
mov
xchg
call
mov
push
push
push
sbb
add
cmp
ja
jmp
mov
loopne
jnp
push
lock
jbe
mov
js
repz
sub
adc
push
push
jo
add
test
dec
jno
add
lock
adc
adcl
fs
pop
add
push
mov
daa
imul
in
inc
inc
in
das
or
gs
ret
and
xor
sbb
dec
jecxz
cwtl
lds
dec
dec
js
mov
adc
sahf
out
out
sub
orl
sbb
and
add
cmp
or
in
mov
push
adc
or
push
shlb
adc
mov
insl
addl
shl
cmp
jg
jmp
js
add
insl
push
dec
stos
pop
xchg
jmp
repnz
dec
or
xchg
sub
jae
fisubl
mov
cltd
mov
and
jg
inc
lods
gs
inc
out
xor
pop
or
out
pop
push
jmp
stos
sbb
ficompl
repz
push
insb
push
mov
iret
cld
daa
inc
sbb
sub
test
add
xchg
dec
and
sbb
out
push
jne
mov
and
sub
hlt
int
dec
or
adc
mov
out
pop
inc
imul
lret
mov
out
cmp
arpl
cltd
mov
jns
aas
sbb
sahf
cmp
xor
and
xchg
lret
lret
pop
jne
inc
decl
gs
pop
adcb
and
out
or
jl
imul
sbb
or
cli
jg
pop
ss
jmp
insb
adc
jg
iret
dec
jnp
mov
mov
ja
fxch
scas
fsubrs
push
test
movsl
daa
loope
or
clc
sbb
lods
loope
fiaddl
mov
std
js
jbe
bound
loop
adc
adc
mov
cmp
aas
add
mov
popa
leave
jge
xor
sbb
xchg
xchg
mov
mov
pop
inc
mov
inc
xor
lods
adcl
and
in
sti
sub
inc
inc
xchg
fildll
lds
xlat
loopne
and
rolb
sub
lahf
and
sub
pop
mov
cli
arpl
sbb
inc
imul
repnz
cltd
pop
push
cmp
aam
jg
mov
xchg
ret
imul
adc
mov
lret
mov
iret
push
out
mov
andb
mov
jns
popa
arpl
shr
mov
daa
nop
outsb
test
pushf
ljmp
scas
insb
stos
or
fildll
jp
in
call
xor
subb
movsb
jecxz
pushl
push
icebp
adc
out
push
sarl
int
jl
popa
loope
leave
popf
cmp
rcll
pop
sbb
or
in
jbe
test
cmp
jp
jne
sbb
cmp
jb
fdivs
push
in
mov
ja
gs
push
outsb
cmpsb
outsl
xchg
mov
xchg
imul
shll
lock
div
dec
rcll
shlb
mov
or
pop
sbb
pop
push
mov
insl
jne
into
imul
adc
and
adc
in
cmp
dec
cmp
cs
orb
xlat
loopne
sub
aaa
cli
jbe
les
popa
leave
fdivl
bound
cmp
add
sti
add
popf
adc
jg
pusha
pop
jmp
faddp
pop
cmpsl
fwait
shl
bnd
ds
insl
jo
mov
dec
js
movsb
add
xor
test
mov
fs
sbb
xor
sti
add
fbld
pop
les
imul
divb
in
cmpsl
in
add
jge
xor
addb
and
into
out
sbb
jae
dec
push
pop
pop
jno
add
jno
outsb
xor
ljmp
and
stc
xlat
pop
push
clc
jl
in
loopne
cmp
hlt
lods
iret
aas
xchg
andl
push
std
sbb
sar
push
data16
push
imul
sbb
filds
lock
sti
sub
test
mov
jne
addr16
cmp
test
pushf
push
adc
adc
mov
ss
dec
mov
xor
subb
bnd
imul
jae
dec
mov
repnz
xorl
sub
int3
xchg
aam
jnp
cmpl
mov
xchg
mov
ret
cmp
aad
mov
stos
gs
fistl
sahf
jnp
pop
dec
iret
jmp
pop
sbb
dec
xchg
iret
or
or
xlat
push
dec
es
jmp
test
xlat
xchg
adc
call
pusha
xchg
into
jbe
xor
sub
testl
xor
scas
and
sti
xchg
xchg
push
sbb
fsubs
dec
xchg
mov
ret
push
popl
adc
pop
insb
popa
ss
ret
add
dec
ljmp
data16
xchg
sbb
gs
testb
test
jge
mov
aas
les
mov
rolb
push
jge
andb
mov
imull
xlat
dec
inc
jbe
pusha
pop
jae
pop
sub
inc
faddl
out
jg
pop
test
imul
pop
dec
mov
add
sbb
imul
aaa
sbb
aas
dec
fwait
mov
sahf
pop
sbb
aaa
negb
ds
mov
mov
mov
or
ret
jp
cmp
dec
std
mov
or
cmp
test
jmp
add
notl
inc
rcll
daa
adc
pop
nop
repz
xchg
cmp
sbb
cmpsl
cmp
iret
dec
into
ljmp
out
iret
xor
das
cmp
push
imul
mov
mov
rcl
inc
xor
cwtl
push
or
mov
mov
fisttps
js
mov
jbe
add
addr16
mov
std
jae
inc
dec
test
repz
mov
xor
inc
clc
or
jle
mov
repz
push
mov
out
inc
jns
jbe
data16
jnp
xchg
out
clc
das
xchg
cli
shrb
xor
rol
jnp
das
dec
imul
jae
mov
adc
push
xchg
push
test
sarb
mov
iret
or
sbb
insb
mov
ss
pusha
or
mov
dec
loop
test
cmp
and
pop
arpl
fs
xchg
fs
inc
inc
rcrb
mov
xor
pop
sub
adc
pop
dec
mov
add
fisubl
adc
push
adcl
add
jp
int
cmp
pop
sti
cs
pop
inc
mov
add
jmp
lret
push
push
mov
mov
and
in
ja
fstps
ljmp
xchg
test
in
outsl
in
aam
lret
cmp
aas
mov
or
fs
in
or
ret
aad
jne
mov
or
in
iret
repnz
mov
sbb
pop
xchg
mov
stc
lock
xlat
push
test
and
mov
mov
lea
sub
mov
shrb
insb
hlt
bound
mov
aaa
ret
add
sbb
fidivl
mov
add
or
int
mov
pmaddwd
addr16
cwtl
push
movsl
cwtl
and
std
mov
xchg
mov
adc
shr
lock
imul
loope
or
fisttpl
jge
negb
pop
cmp
sub
shrl
xorl
xor
mov
mov
xlat
sbb
xchg
ss
icebp
pop
pop
mov
enter
imul
mov
int
daa
pop
inc
cmp
lods
into
lds
cmp
insl
adc
sbb
iret
inc
inc
xchg
cs
in
cmp
in
push
mov
lds
ficomps
mov
les
sbbb
mov
xor
pop
push
pop
shl
aam
push
inc
ja
add
out
cmp
mov
lcall
mov
lods
ret
mov
arpl
sahf
jl
call
xchg
repnz
imul
cmp
bound
mov
lock
xor
lock
outsl
dec
dec
mov
pushf
divl
in
sub
pop
dec
mul
popf
cmp
and
mov
imul
jecxz
pop
rcrb
cs
shrb
adc
repz
push
ljmp
adc
test
shlw
enter
cmp
mov
loopne
add
iret
cld
push
fists
push
adcb
imul
xchg
sub
cmpl
and
imull
popf
out
sub
cs
outsl
sub
jnp
ja
in
jmp
jp
pop
adc
sub
add
jnp
sbb
scas
dec
pop
mov
lahf
pop
cmp
xor
pop
scas
js
inc
lahf
clc
dec
rorl
mov
push
sub
push
fwait
rcrl
fnstenv
mov
mov
inc
mov
fsubrs
out
arpl
jbe
gs
icebp
xchg
mov
sub
pusha
dec
xchg
lds
in
ss
shll
push
jne
mov
xor
add
cmp
pop
mov
lods
inc
ljmp
xchg
xchg
sub
out
xor
cs
xorl
push
mov
mov
loop
add
inc
fsubrl
xor
stos
sub
adc
stc
insl
xchg
out
shr
ret
mov
lea
mov
jb
xor
out
jns
insb
ds
ljmp
out
lock
or
xor
mov
inc
test
data16
jnp
or
add
faddl
mov
mov
movsl
mov
pop
enter
pop
lahf
call
ficomps
mov
adc
ret
je
mov
es
in
xor
movb
call
push
add
pop
push
sbb
stos
adc
dec
fisubs
cmp
ficoms
add
xchg
mov
je
and
inc
pop
xchg
mov
push
mov
push
in
mov
cld
leave
mov
sub
push
dec
cmc
cmp
lods
sbb
enter
and
mov
xor
adc
addr16
mov
movsl
mov
les
mov
cmp
std
shr
lds
data16
or
xchg
or
outsb
fsubr
out
je
xchg
cmp
movsb
ds
jne
leave
cmpl
ljmp
inc
clc
cltd
stc
xorb
outsb
imul
mov
imul
dec
test
dec
shll
mov
das
lock
push
aaa
stos
insb
popf
dec
add
movsb
or
gs
in
cmp
stos
sbb
push
mov
pop
cwtl
push
in
sbb
jecxz
jg
fldenv
adc
popa
iret
loopw
xchg
stos
fnstsw
fucomi
dec
std
int
iret
es
mov
stc
sub
mov
xchg
cli
cmp
push
iret
pusha
inc
mov
jle
mov
aas
push
icebp
dec
aaa
addr16
fs
ss
testl
or
xor
mov
inc
jno
fisttpll
outsb
xor
mov
pop
and
mov
inc
xchg
mov
leave
fiadds
push
mov
std
loop
outsb
in
je
mov
pop
aaa
cmp
push
imul
out
mov
xchg
adc
stc
mov
add
push
jno
ljmp
push
mov
jno
outsb
roll
mov
pop
sbb
repnz
cli
inc
shr
ret
cmp
cmp
cmp
mov
mov
and
subl
lock
push
push
add
push
ljmp
cld
sbb
ss
sahf
dec
mov
enter
iret
mov
ss
cmp
inc
stos
xchg
jae
xchg
push
xchg
mov
add
mov
mov
cli
dec
jmp
adc
mov
clc
adc
pop
nop
popa
adc
iret
push
outsb
cmp
fcomi
and
or
jecxz
add
lods
icebp
pop
js
mov
push
add
push
push
aad
pop
out
xchg
call
sbb
push
leave
aam
loop
push
mov
loop
dec
dec
aaa
test
jle
arpl
outsb
pop
fistl
mov
fadd
fstl
or
inc
mov
out
push
dec
lea
adc
mov
dec
popa
out
pop
int3
mov
jb
xor
pop
xchg
jns
mov
sti
pop
pop
jge
stos
jno
mov
mov
xchg
inc
mov
test
inc
sub
or
gs
inc
xchg
out
and
cmpsl
scas
mov
mov
jne
dec
out
jecxz
cltd
adc
cli
xchg
sub
dec
test
inc
jl
inc
fiaddl
adc
test
push
xor
dec
aas
pop
enter
shlb
mov
mov
rcll
cmp
cmpsb
stos
jno
sbb
sub
and
ljmp
test
mov
lret
pop
sub
lahf
mov
ja
or
dec
nop
xchg
fldenv
xchg
mov
dec
sbb
jmp
icebp
out
mull
inc
xchg
mov
jae
inc
imul
mov
loope
jmp
std
adc
lock
mov
dec
jg
movsl
and
paddsb
cmp
xchg
lods
mov
std
dec
mov
sub
cltd
mov
nop
addr16
sub
and
test
or
xor
or
mov
lock
sub
scas
imul
lcall
adc
jmp
aam
imul
lods
pop
cmp
popf
in
mov
push
flds
iret
jp
rcll
rcll
cltd
fildl
ljmp
cmp
cmp
in
cltd
mov
push
fcmovnu
or
push
mov
out
cmp
fisubl
aas
mov
icebp
add
inc
orb
fildl
push
ror
inc
sti
insb
orl
push
les
and
addl
jb
dec
les
cs
cmp
pop
cmp
in
or
push
int3
xor
sbb
hlt
in
aas
adc
ret
adc
push
cmp
xchg
hlt
test
dec
xor
jge
pop
test
loop
adc
jbe
cwtl
jae
jg
adc
dec
sbb
outsl
inc
push
shll
mov
sub
loopne
stos
add
cltd
xor
enter
xor
stos
or
mov
inc
shrb
into
cmp
mov
dec
jecxz
xchg
cltd
jp
and
lahf
pop
adc
push
fwait
inc
repnz
pop
push
lods
and
cwtl
dec
pushf
xchg
push
sbb
and
loopne
jge
test
ret
jne
fcoml
ret
cmp
xor
sahf
mov
or
pushf
popa
inc
sti
inc
pop
push
sub
clc
test
das
dec
sub
mulb
out
mov
or
jo
imul
sub
negl
xchg
push
mov
cmp
popa
xor
fistl
sub
cmp
xchg
mov
xlat
mov
es
fcomip
and
pop
shlb
mov
repnz
sbb
rorl
sbb
mov
test
xchg
lcall
out
jg
xchg
push
fisubl
lahf
add
incl
mov
int3
in
fstl
push
add
cli
jbe
outsl
inc
jecxz
adcl
mov
pop
dec
andb
adc
dec
xor
pop
bound
inc
cli
inc
icebp
leave
xchg
cmp
and
mov
aaa
data16
mov
xchg
or
adc
xchg
test
mov
lods
and
leave
pushf
ljmp
jmp
test
popa
jp
out
outsl
ret
dec
mov
fadds
cwtl
fimuls
cmp
cmp
repz
dec
lret
data16
addr16
adc
jp
imul
sbb
faddl
pop
adc
push
ss
fs
adc
mov
mov
hlt
std
xor
cli
mov
and
enter
cld
or
mov
jp
aam
test
out
stc
add
pop
mov
mov
scas
dec
sbb
fcomps
and
hlt
sub
popf
lret
and
inc
jbe
fsub
js
sub
ljmp
and
out
dec
cwtl
fwait
lcall
sbb
out
inc
popf
cld
xchg
pop
xor
xchg
or
mov
mov
inc
mov
ljmp
jo
cld
jp
cmpsb
movb
icebp
mov
insl
mov
xor
dec
rclb
push
xor
aad
bound
push
jp
ja
dec
xchg
xlat
and
pop
push
ret
sub
nop
mov
aaa
outsb
mov
outsb
jbe
out
in
test
enter
pop
lods
andl
pop
push
andb
test
popa
xor
dec
adc
and
add
jecxz
stos
cmpsl
pop
mov
dec
pop
push
jge
inc
mov
shl
push
push
pop
fcoml
and
mov
mov
xor
in
aas
dec
test
addr16
inc
and
push
pop
cmp
sub
jae
shr
popl
imul
pop
inc
jne
movsl
cltd
outsb
cli
ret
scas
mull
sbb
adc
lods
test
push
int3
mov
test
incl
or
aam
sti
fstpt
cmpsl
lea
jns
js
les
jae
xor
xchg
cmpsb
cwtl
andl
fdivs
mov
fldl
loopne
sbb
das
jle
xchg
test
outsb
cltd
out
faddp
push
ret
into
mov
aam
xor
fdivrs
cmp
adc
mov
inc
fcomps
lahf
sti
lret
sbb
cltd
and
scas
push
sub
movsb
data16
or
ss
add
mov
out
adc
mov
fcoms
and
push
mov
add
nop
pop
push
xchg
mov
loopne
call
inc
es
jno
imul
ja
es
mov
cli
inc
ss
dec
inc
push
mov
rcll
and
pop
lods
andb
fcomp
push
addl
jo
mov
and
cwtl
or
ret
mov
pop
ja
or
sub
and
mov
xchg
jg
stos
mov
pop
xchg
jmp
loop
and
or
jl
add
mov
push
fstpl
push
or
pop
mov
adc
cmp
pop
pop
dec
mov
adc
cld
jo
xchg
mov
addr16
stos
or
fwait
loop
jae
jnp
repnz
pop
ja
push
lods
add
cmp
mov
sti
dec
rcrb
add
outsl
je
movsl
mov
fwait
in
out
lret
pop
adc
push
jmp
int
aad
cmc
cmpsl
ffreep
add
cld
in
fistpll
das
mov
mov
sub
jae
push
test
jo
push
and
adc
jg
add
cmp
push
jo
imul
arpl
pop
jnp
bound
jmp
xorl
arpl
mov
mov
in
jg
sub
in
adc
fldl
aam
in
or
scas
sbb
jns
repz
fsubrs
sub
push
decb
adc
xlat
push
mov
push
repz
pop
pop
dec
and
stos
mov
cmp
inc
fcompl
pop
sti
aad
dec
ror
incb
sbb
clc
aad
cmp
inc
fdivs
lahf
scas
jno
jo
cltd
je
jnp
push
std
inc
jl
js
cmpsb
js
pusha
bound
addl
pop
daa
xor
push
push
mov
sahf
cmp
mov
insb
mov
adc
inc
outsb
add
insl
adc
lcall
push
xchg
int
sub
ljmp
sbbb
in
or
data16
jge
xor
jg
pop
lea
fs
mov
aas
dec
xor
pop
jmp
mov
aam
inc
add
call
incb
jp
add
sub
loopne
mov
adc
sbb
arpl
rolb
jae
mov
sbb
mov
stos
sbb
lods
inc
fs
pop
sbb
gs
inc
push
andb
sbb
xchg
inc
fnsave
or
test
jg
filds
mov
movsl
mov
pop
hlt
hlt
cmp
xor
dec
scas
sbb
incb
nopl
inc
jl
mov
inc
xor
stc
rcll
jle
jg
inc
push
cmc
hlt
sub
mov
popf
stc
mov
push
and
add
push
stc
imul
mov
or
add
stc
and
add
push
jnp
sbb
cwtl
xor
xchg
xchg
arpl
lret
sbb
icebp
add
mov
mov
sub
loop
ljmp
mov
add
out
adc
popf
push
pop
ljmp
dec
cld
filds
push
cld
cmp
ret
sbb
lcall
push
mov
pop
std
pop
dec
push
fistps
insb
mov
or
enter
ljmp
loop
lods
dec
daa
adc
mov
iret
inc
inc
mov
and
jno
and
dec
movsb
mov
rclb
hlt
pushf
scas
or
inc
xchg
mov
pusha
dec
scas
aaa
mov
cmpsb
jns
cli
add
mov
pop
xor
adc
push
mov
lods
sbb
xchg
movsl
push
shl
test
add
sub
je
cwtl
call
int
pop
adc
pushf
add
cli
aam
pop
imul
inc
testb
mov
xchg
xchg
sbb
mov
xor
idiv
cltd
inc
shll
loop,pt
inc
inc
sbb
and
clc
xchg
xor
or
mov
push
add
les
imul
jg
sbb
add
jecxz
mov
mov
lahf
icebp
test
sub
fisttpll
out
mov
fmull
cmp
cli
aaa
xchg
test
mov
mov
stos
insl
daa
pop
gs
xor
cs
sti
mov
iret
loopne
xor
mov
jg
mov
mov
mov
xchg
call
arpl
mov
in
xchg
lea
cs
xchg
imul
mov
sbb
or
fucomp
sbb
sbb
fiaddl
and
dec
mov
push
cmpsb
fisubrl
lea
push
xor
repnz
adc
dec
stc
das
pop
lret
sbb
pop
xchg
mov
mov
std
jecxz
cmp
jp
imul
out
lods
mov
add
repz
jb
mov
xor
xlat
imul
mov
cwtl
inc
cmp
movsb
or
sbb
aam
in
rclb
xor
xor
nop
cltd
movsb
out
push
cmpsb
mov
gs
mov
push
iret
call
jbe,pn
aad
enter
in
jge
push
mov
pop
jp
scas
lahf
in
es
out
mov
loope
dec
and
push
nop
ror
xchg
pop
outsl
imul
sbb
add
ja
fcomps
pop
sbb
mov
mov
inc
lahf
xor
lea
add
dec
xchg
sbb
xchg
mov
xchg
xchg
call
inc
jo
sbb
sahf
cmp
enter
lods
faddp
leave
and
sbb
shrl
mov
xchg
roll
jnp
add
test
out
and
movsl
out
lea
and
outsb
shrb
mov
adc
ficompl
test
inc
cltd
xchg
mov
es
cmp
pop
pop
insl
xchg
push
sbb
cmp
aad
packssdw
adc
sti
aad
pushf
lods
or
add
xor
jmp
adc
adc
adc
cs
rclb
jge
xchg
jnp
mov
outsl
sub
lret
cld
lahf
clc
mov
outsb
mov
out
xor
out
add
popa
es
loopne
dec
mov
movb
lea
mov
jns
push
push
xchg
xchg
push
enter
test
dec
sbb
push
pop
and
mov
popf
repnz
xchg
push
pop
jb
pop
xor
ss
pop
enter
push
cmp
pop
mov
mov
and
enter
fucom
sbb
loope
or
and
popa
dec
mov
inc
mov
sub
ljmp
dec
ds
rcl
rclb
or
push
dec
jnp
cmc
in
mov
xchg
out
clc
dec
fs
daa
lcall
addr16
std
std
xchg
xchg
dec
fs
fucomi
fists
leave
cmp
call
mov
test
hlt
ret
pop
xchg
or
jl
cmp
add
add
test
das
out
xchg
bound
push
fwait
jnp
je
push
aad
call
xchg
int3
movsl
sbb
or
xchg
push
cs
lea
inc
lahf
pop
fnstsw
mov
mov
cmp
mov
mov
cmpsl
push
sbb
sbb
ret
xchg
cltd
xor
inc
in
pop
lock
test
adc
xchg
pop
mov
hlt
xchg
mov
push
or
je
cmp
jmp
push
or
xchg
sub
daa
jp
xchg
cmpsb
in
xchg
adcl
adc
mov
movsb
push
aaa
loopne,pn
stos
ja
and
or
icebp
pop
andb
ljmp
add
push
mov
int3
movsl
pop
pop
mov
mov
mov
in
xlat
cmp
sub
idivl
inc
sub
jmp
out
inc
dec
outsl
test
push
mov
jp
arpl
add
loopne
xor
ljmp
cmp
sbb
cltd
add
gs
sbb
orl
dec
mov
adc
push
test
dec
rclb
lret
jmp
leave
enter
out
and
lods
jle
dec
pushf
sub
lret
xchg
test
stc
jmp
mov
mov
mov
sahf
mov
fbld
pushf
inc
int3
rcl
xchg
jecxz
dec
mov
jnp
pop
fbld
shlb
int3
cmpsb
push
sahf
jmp
iret
int3
mov
arpl
movsl
inc
cmp
mov
lods
rcrl
daa
and
pop
xlat
lods
xor
cmp
or
data16
xchg
push
jne
cmp
xchg
xor
adc
pop
mov
test
xchg
and
sbb
pop
inc
or
adc
xchg
mov
ljmp
xor
lea
outsb
fs
arpl
sbb
lock
adc
jo
mov
cmpsb
mov
mov
or
lods
aad
fcomps
adc
mov
inc
fsubrs
out
imul
aas
mov
mov
subb
pop
mov
xchg
push
lret
ret
outsb
js
orb
and
cmp
out
mov
shl
jno
int
xchg
sub
jns
incb
adc
ss
movsl
pop
jno
fwait
xchg
les
jl,pt
sub
mov
cmp
push
push
lods
test
or
mov
jno
mov
mov
or
mov
xor
orl
testb
out
into
gs
pop
cmp
std
mov
loop
adc
inc
xchg
leave
inc
sub
out
push
cs
mov
cmc
movsl
pop
mov
pop
scas
push
das
test
push
mov
inc
cmpsb
addb
aaa
xor
mov
mov
insb
adc
push
insl
mov
cwtl
dec
movl
cmp
inc
adc
pop
add
push
xchg
adc
sub
add
sahf
movsb
in
fxch
loope
cmp
push
pop
and
popa
test
sbb
icebp
jmp
mov
shlb
dec
dec
dec
mov
jo
pop
int
cmp
stc
mov
scas
out
mov
outsl
inc
gs
adc
sbb
push
je
fists
jns
in
subl
xchg
dec
stos
popa
mov
test
jp
mov
call
sub
loop
mov
and
pop
xchg
jp
pop
pop
addb
fbld
xor
or
stos
mov
stos
sbb
pop
sbb
adc
sub
sbb
cmpsl
pop
mov
movsb
and
xor
pushl
mov
sbb
and
aas
fsubs
shll
jle
out
cmp
call
sahf
test
fwait
pop
dec
sbb
pop
add
div
insl
lods
dec
or
loopne
mov
loopne
mov
scas
mov
inc
pop
cmpsb
enter
ljmpw
push
std
push
jmp
lds
es
add
nop
mov
repz
push
sti
adc
mov
shr
cli
loope
xorl
xor
adc
mov
xlat
inc
sahf
ret
repnz
aas
insl
adc
lock
test
push
imul
adc
pop
movsl
inc
std
ss
xor
jae
mov
and
cmpsb
xlat
not
sub
mov
iret
mov
xlat
out
dec
jp
aad
push
in
lods
cs
mov
insl
ss
sbb
fidivs
ljmp
jno
jo
cmp
into
fs
out
out
mov
andb
jne
jne
shll
jmp
push
fs
mov
mov
repnz
jmp
xor
cmp
mov
or
repz
int
mov
or
int3
sub
lret
jns
movsl
je
iret
arpl
sub
inc
in
sbb
repz
aad
outsl
xor
bound
xchg
fisubl
lea
xor
inc
push
shrb
push
mov
pop
aad
jecxz
fisubs
fsubrl
loop
ja
xchg
repz
xchg
rcrb
je
cmp
and
es
leave
cmp
mov
push
jno
test
outsb
cmp
pop
ss
adc
lret
push
test
sbb
jb
xlat
rcrb
pusha
push
dec
xlat
lcall
jo
out
scas
pushf
ds
sbb
sbb
cmc
sti
lods
jg
mov
jo
out
sub
mov
lds
mov
dec
test
stc
adc
mov
repz
scas
pop
cmpsb
mov
int
mov
pushl
aam
mov
sub
add
js
pop
xor
dec
decl
hlt
out
aaa
mov
movsl
mov
add
xchg
jb
or
stc
rcl
int3
mov
stos
pop
or
in
imul
das
sub
cmpb
stc
xchg
aas
xor
sbb
pop
xchg
sbb
cli
jb
dec
pop
cltd
mov
stos
add
push
jl
scas
cmp
das
hlt
lahf
lds
shl
ds
xor
cwtl
lcall
add
je
push
inc
sbb
inc
mov
pop
call
mov
or
in
out
sbb
or
loop
mov
lcall
frstor
xchg
mov
enter
xchg
add
das
adc
xchg
in
les
mov
mov
dec
out
or
push
das
lcall
jecxz
mov
testl
inc
cmpsb
ja
cmp
ljmp
out
pop
lock
add
popf
fs
inc
popf
movsb
leave
sbb
add
imul
sbb
push
sub
and
outsb
jmp
jo
push
cmpl
xor
jl
test
bound
popl
push
out
mov
jp
cmp
jecxz
xor
xor
int
scas
ja
cli
imul
clc
jno
or
addr16
dec
cmp
xchg
mov
cmp
ficomps
mov
mov
call
in
iret
inc
jb
cs
and
icebp
arpl
nop
add
fstpl
dec
inc
sub
xchg
shlb
lods
xchg
into
dec
add
push
mov
push
lea
jl
es
mov
and
push
push
mov
je
cltd
lods
jp
jb
sbb
jo
mov
xchg
and
lret
mov
or
or
xchg
test
jp
jl
sti
pop
loopne
lret
push
fsubr
pop
adc
insl
sbb
jmp
jp
fidivrl
sub
or
sar
cmc
sbb
inc
jae
and
mov
adc
fldl
popa
jle
jmp
lcall
stos
loope
mov
adcl
adc
aam
xor
xchg
out
push
cwtl
int3
xor
adc
cs
dec
xlat
xchg
or
dec
es
popa
xor
dec
xchg
or
loop
popa
adc
repnz
mov
cmp
dec
loope
push
into
pop
daa
or
sbb
daa
lds
sarl
imul
outsl
lock
mov
int3
push
pop
mov
inc
in
jmp
popa
pop
sub
mov
xlat
mov
in
xchg
jp
repz
out
fwait
repnz
aaa
aam
shll
cmc
xor
mov
decb
mov
add
add
pop
movsb
dec
sub
xor
clc
xchg
lret
add
dec
or
and
fwait
adc
jp
mov
and
cmc
and
fmull
mov
push
fimull
sbb
movsl
shl
xchg
mov
test
outsl
jo
jl
jae
jge
fucomip
and
arpl
push
push
in
lods
add
jns
scas
rcrl
and
stos
xorl
inc
pop
sbb
popf
dec
adc
shrl
adc
or
pop
imul
mov
lods
ss
mov
mov
mov
xchg
shlb
cmp
pop
fmulp
ljmp
ja
jne
push
inc
fimull
ret
or
addb
and
fdivs
mov
cmp
push
aam
aam
sub
ficoml
dec
mov
xchg
cmp
jns
dec
or
dec
insl
or
jne
xchg
mov
xlat
dec
mov
pop
icebp
mov
aad
and
imul
inc
dec
or
mov
xchg
sbb
dec
sub
cmp
inc
in
push
jle
dec
sub
lret
inc
es
movsb
xchg
or
add
addr16
push
lds
push
inc
adc
rcr
ss
pop
xchg
sbb
jp
ss
sbb
add
mov
push
dec
sub
out
cmc
inc
negl
sbb
pop
add
or
sahf
shlb
jecxz
pop
jno
test
ss
jp
mov
loope
scas
fisubrl
or
pushf
xchg
jns
lods
mov
imul
in
cmp
push
fistl
xchg
lfs
add
xor
pop
syscall
sub
cmp
fists
mov
push
or
mov
xchg
mov
inc
mov
setae
cmp
mov
cmp
dec
push
mov
lock
shrl
ja
and
cmp
jns
mov
mov
pop
inc
jg
add
jmp
bound
mov
jb
lds
pop
out
sti
sbb
cwtl
or
xchg
cmpsb
je
add
dec
lret
mov
in
popf
lds
fsubrs
push
xchg
in
xor
aam
mov
orl
xchg
cltd
inc
sbb
pop
outsl
push
xchg
pop
inc
push
push
adcb
imul
sbb
inc
std
cmc
rclb
push
pushf
push
lcall
pusha
xchg
xor
aad
jl
stos
in
loopne
push
repz
ja
dec
mov
fadd
jae
enter
insb
testl
cmp
into
sub
repnz
push
push
cld
loop
inc
insl
leave
ja
sahf
adc
jmp
incl
jp
lret
jecxz,pt
add
jo
test
mov
cltd
aaa
movsl
es
jb
dec
cmp
stos
jbe
jae
mov
loopne
sbb
insl
lret
and
cmpsl
pop
pop
pop
ss
cmp
mov
push
test
xchg
fdivrs
popf
push
sbb
fldcw
cmp
inc
lret
push
cwtl
mov
mov
mov
xor
shrb
push
jmp
xchg
iret
xchg
pusha
mov
add
mov
xchg
mov
ja
lods
test
xor
add
push
mov
cs
arpl
pop
out
xchg
xlat
test
mov
adc
inc
mov
cmp
icebp
mov
movsb
mov
push
aad
js
or
mov
int
jbe
pop
adc
aaa
jp
jle
leave
push
or
push
or
es
xor
xchg
ja
inc
mov
sahf
push
push
lahf
mov
ficoml
xlat
xor
xchg
repz
push
ljmp
push
pop
dec
in
das
dec
popa
repnz
jne
lcall
xchg
dec
rcrb
xchg
xor
aas
loop
fbstp
cs
lcall
xchg
xchg
jp
mov
push
xchg
out
dec
jbe
and
mov
pop
pop
iret
sub
out
push
jg
add
xor
scas
pop
and
lods
sbb
dec
std
cmp
jmp
push
cmpsb
xchg
or
test
mov
and
xor
mov
pop
sub
push
dec
push
mov
and
test
out
mov
dec
mov
xchg
insl
lahf
sarl
testb
push
lahf
es
add
pop
stos
push
outsl
and
clc
mov
cmpl
idivl
mov
fisubrs
int3
scas
cld
cs
cmp
cmpsl
int3
test
inc
scas
repnz
cld
insl
imulb
jmp
push
imul
pop
in
cmp
cltd
push
sahf
lods
das
inc
outsb
and
adc
insb
jnp
or
lret
stc
leave
aam
or
mov
xchg
mov
int3
nop
adc
out
in
mov
mov
test
push
sub
and
adc
push
jle
sbb
mov
fisubrs
xor
daa
int3
cmpsb
mov
dec
and
into
push
movsb
std
jo
sbb
popa
sahf
stc
or
cmp
pop
pop
sub
aaa
inc
push
call
jg
sbb
das
cmpsb
pop
add
lock
mov
stos
xor
push
cwtl
sbb
cmp
dec
out
jns
ret
mov
scas
xlat
jecxz
clc
mov
ss
sbb
pop
out
test
xor
sbb
dec
js
inc
mov
and
ds
fcomps
and
dec
or
jae
shl
rclb
xchg
fimull
hlt
iret
cs
cmp
mov
test
or
shr
mov
cmp
das
jnp
sbb
add
xor
pop
push
out
and
inc
mov
push
xor
mov
daa
ljmp
in
lock
repnz
sti
lock
loopne
out
test
or
push
mov
adc
stos
inc
adc
mov
mov
or
dec
rclb
dec
aas
xchg
cld
jns
cwtl
add
sbb
dec
mov
out
mov
cli
sarb
sbb
inc
dec
or
lret
pop
test
add
jno
dec
xchg
repnz
mov
fdivrs
ss
ds
test
dec
xchg
inc
jb
cmp
adc
dec
aas
movsb
mov
aad
xor
mov
in
loope
jns
sub
iret
movsl
jno
xchg
out
leave
xchg
test
xor
test
xor
add
mov
mov
aas
std
shl
mov
addr16
pop
pop
adcl
arpl
imul
into
je
popa
sbb
sbb
xchg
and
or
insl
sub
sbb
mov
pusha
and
cmp
xor
mov
fsubrp
mov
imul
jecxz
mov
mov
rorl
int3
mov
and
stc
dec
je
inc
push
xchg
add
cmpsl
shrl
mov
sub
xchg
arpl
cmpsl
orb
xchg
jmp
mov
aaa
fsubs
imul
sti
mov
add
sub
pop
pop
xor
sbb
ficomps
add
mov
mov
pop
les
or
xchg
les
in
xor
jae
sub
mov
scas
cmpsl
into
pop
adc
inc
pop
negl
pop
lret
sub
mov
jmp
pop
imul
sbb
out
xor
jb
mov
adcb
sub
sub
jecxz
test
sti
cmp
test
pop
cs
lahf
adc
insl
insb
jo
xchg
lahf
loope
in
inc
add
js
lods
dec
sub
mov
inc
pushf
xorb
dec
inc
jle
xchg
test
loope
push
jg
rcll
jbe
rcrl
jb
ficoms
arpl
icebp
lret
cmp
jecxz
add
sahf
mov
fldcw
cwtl
mov
add
cld
cmp
mov
outsl
sub
cmpsb
dec
sbb
imul
jbe
push
dec
pusha
outsl
mov
or
jo
push
cmp
aas
xchg
repnz
in
push
stos
sbb
xchg
xor
cmc
aaa
jnp
xchg
xor
mov
inc
cltd
shlb
roll
xor
xchg
mov
adc
pop
outsb
xchg
jp
sub
push
sti
sahf
or
push
jge
sti
push
sub
push
out
mov
jb
pop
ficoms
lahf
mov
mov
pop
mov
xchg
shrl
loope
adc
sti
push
xchg
ret
insl
jp
sub
repnz
jg
mov
cli
xchg
aas
xor
add
lds
ret
mov
jecxz
cmp
cmp
or
repz
push
test
imul
mov
sub
idivb
movl
out
xor
sub
xchg
ret
insl
jmp
movsb
adc
repnz
shlb
lock
pop
jae
xor
mov
cmp
fadd
mov
jnp
fstpl
shlb
jmp
mov
add
jle
loope
xor
out
shrl
mov
jnp
xchg
or
push
arpl
inc
popa
mov
mov
imul
xchg
xor
sbb
fisubrl
lret
mov
push
bound
jns
hlt
and
or
fnstsw
mov
daa
push
add
call
mov
mov
sahf
inc
mov
test
push
cmp
xchg
popa
fsincos
mov
and
mov
push
xor
jns
ljmp
out
dec
dec
icebp
cmp
xor
fwait
arpl
out
xor
xor
insb
pop
jecxz
adc
sbb
or
bound
xlat
lea
or
iret
mov
sbb
lcall
pop
mov
and
xchg
xchg
pushf
and
mov
negl
int3
mov
mov
jnp
xchg
or
js
sbb
imul
adc
sub
sahf
push
test
ds
cmp
hlt
call
aas
cmpsl
les
xor
sahf
mov
aaa
and
repz
ja
add
pop
xchg
lods
mov
lcall
sbb
imul
ss
lret
jmp
dec
mov
push
pop
xor
jl
shlb
jo
pop
mov
ljmp
stos
cmp
repz
in
push
out
pusha
nop
iret
push
mov
lahf
ja
ficompl
test
lods
inc
push
and
cmpsb
mov
jmp
loop
popa
in
movsb
mov
lock
imul
xor
test
clc
f2xm1
sbb
pop
les
cmp
ljmp
jl
jb
aas
push
sub
cs
adc
stos
adc
add
lods
hlt
cli
test
and
adc
or
ret
std
jne
cmc
test
lods
cmpsb
and
call
push
shlb
cmp
test
cmp
fs
pop
cmp
iret
out
sbb
adc
addb
in
mov
mov
xor
mov
mov
fwait
mov
fsubrs
and
out
xchg
divl
nop
in
mov
jl
sbb
push
test
and
push
push
adc
out
dec
push
enter
mov
mov
mov
or
repnz
xor
mov
jne
or
rorb
push
mov
add
add
lcall
sahf
sti
push
xchg
xchg
jne
mov
push
sbb
xor
jg
cwtl
cmc
shlb
and
add
cmp
addr16
div
cld
push
insl
sbb
push
sbb
repz
mov
into
adc
mov
sbb
xor
data16
gs
ficomps
cmc
cmp
orb
cmp
scas
inc
push
push
jp
rolb
adc
pop
mov
adc
mov
xor
jl
aam
movsb
mov
cmp
jge
out
clc
stos
bsf
nop
test
jne
add
loopne
push
push
insl
push
mov
pop
pop
push
ja
cmp
js
mov
pushf
mov
jnp
jo
in
pop
xchg
pop
dec
cld
or
cmp
and
gs
jge
push
pop
mov
mov
jmp
pushf
aam
int3
sbb
shlb
and
out
inc
jns
adc
fidivl
fstps
xor
mov
lcall
dec
stc
mov
pop
cmpsl
push
leave
es
and
sub
clc
lds
loopne
stos
sbb
and
cs
sub
nop
push
fwait
mov
notb
fldenv
mov
subl
push
push
fdivr
cmp
popa
cmp
fcmove
fildll
cmp
jbe
sbb
push
lret
lcall
mov
popa
test
xor
outsb
xor
aad
mov
mov
ret
xchg
cmp
sarb
idivl
inc
push
loop
mov
out
inc
and
xchg
mov
xchg
mov
adc
inc
aam
jbe
sar
negb
les
mov
outsb
mov
jns
or
xor
xor
jns
inc
dec
and
shll
filds
xchg
xchg
adc
icebp
sarl
xchg
cmp
call
decb
mov
imul
test
xchg
or
mov
clc
jecxz
xchg
add
pop
in
inc
cltd
daa
jb
out
xor
sub
and
cmp
out
les
cld
inc
push
push
sub
pop
push
out
inc
jp
movlps
push
xchg
mov
fs
lahf
jno
fidivl
pusha
inc
movsl
mov
cmp
add
sbb
sarb
sbb
aas
sbb
lret
jnp
dec
scas
inc
outsl
pop
mov
mov
sbb
scas
xlat
lods
lods
jne
cltd
daa
gs
lea
jmp
lock
ficoml
orl
mov
neg
aad
out
sub
pop
pop
mov
rclb
fidivrs
out
iret
iret
or
hlt
pop
addb
mov
mov
mov
add
movsb
cwtl
vcmpps
js
jmp
lock
andb
push
sbb
push
or
addr16
mov
cld
cltd
jnp
and
mov
movsl
push
adc
mov
int3
mov
sub
lods
inc
rcrl
jp
jge
sub
pop
stc
call
jecxz
fst
insb
stc
int3
enter
seto
pop
sahf
xor
pop
xchg
jns
inc
cltd
lahf
adc
xor
js
push
enter
xor
sarb
inc
aam
add
jmp
int
insb
push
jge
mov
and
outsl
or
ds
ljmp
dec
mov
ljmp
jmp
addr16
push
or
or
aaa
mov
movsb
inc
inc
mov
nop
cmp
mov
push
cltd
cmc
je,pt
or
in
inc
lcall
mov
mov
pop
jb
dec
inc
push
aad
jecxz
xor
cmpsl
std
xchg
pop
push
stos
mov
outsl
shlb
aas
xchg
mov
sbb
xchg
sbb
pop
cmp
dec
scas
in
pop
iret
jo
xchg
mov
into
clc
stos
ret
mov
loope
mov
add
test
xor
push
push
jne
jo
movsb
test
imul
jecxz
cmp
mov
out
add
jae
addr16
push
bound
pop
push
xchg
mov
lods
dec
mov
pop
in
xchg
fimuls
mov
faddl
or
mov
cmp
test
cmp
or
nop
cld
xchg
xor
xchg
cmp
xor
xchg
xchg
jmp
movsb
cmp
in
fs
jae
mov
or
popf
lock
test
cmp
pushf
or
jmp
cltd
mov
mov
into
loope
ja
cwtl
notb
jb
icebp
sub
lea
push
adc
shlb
stos
js
adc
rclb
test
and
and
aam
test
adc
mov
mov
mov
gs
xchg
mov
mov
out
dec
cmpl
fdivs
popf
add
sub
in
inc
and
ret
pop
xor
in
fcompp
aaa
xorl
bound
lret
lret
dec
push
cld
xchg
mov
pushl
cmp
push
adc
mov
call
xchg
mov
dec
sbb
push
ljmp
fucom
aas
mov
mov
mov
dec
insl
and
sbb
fsubp
lods
lret
jmp
js
jno
inc
dec
inc
and
imul
movsb
loop
and
jp
sbb
enter
aam
rol
jb
insl
add
mov
jg
int
or
rolb
jge
push
popa
ficoml
in
mov
cmp
out
popa
inc
dec
mov
jns
insl
lods
ja
pop
and
jb
cltd
fidivrl
sti
in
es
aad
out
in
sbbb
adc
popa
mov
lods
adc
ret
xchg
push
pop
iret
xor
add
mov
mov
fxch
jg
sbb
dec
inc
nop
or
ja
in
testl
decb
jle
mov
repnz
outsb
and
or
jg
pop
sub
jb
movsb
dec
xchg
xor
jae
xchg
mov
inc
add
push
and
xor
pop
or
lret
pop
jno
or
push
cmp
push
fs
cmp
ret
or
pusha
mov
dec
rcrb
lcall
add
sub
inc
lock
lock
lea
inc
subl
mov
sbb
fists
mov
and
fwait
mov
dec
ds
lods
mov
or
call
or
ds
sbb
mov
scas
stc
sti
les
imul
or
daa
test
mov
mov
xchg
jmp
out
jns
ret
lret
cmp
jecxz
out
test
xor
adc
mov
jg
push
iret
mov
mov
cmp
push
mov
jbe
push
hlt
int
pop
mov
hlt
sbb
into
inc
xchg
ss
sub
sub
sub
aas
dec
imul
adc
enter
ud0
scas
inc
cli
xor
xchg
test
jae
int3
bound
inc
adc
sub
xchg
orl
out
popa
mov
xchg
and
addr16
pop
aam
push
jbe
jg
nop
in
push
lods
mov
mov
jg
inc
fmulp
dec
dec
scas
mov
in
out
sahf
inc
outsb
pop
xor
inc
out
mov
adc
dec
mulb
push
in
xlat
clc
sub
dec
mov
out
test
fsubrl
cmp
mov
mov
push
in
add
addr16
ja
inc
sti
xchg
sbb
xor
and
mov
jecxz
repz
sbb
adc
mov
pop
jae
pusha
and
dec
add
mov
sub
sbb
mov
imul
jmp
inc
push
push
out
and
mov
mov
idiv
das
dec
stos
add
cmpsl
lahf
mov
call
mov
hlt
repz
xchg
or
adc
cmp
fadds
cmp
stc
dec
or
add
inc
in
enter
scas
pushf
jns
imul
inc
jae
addl
daa
cs
gs
outsb
pusha
andl
jp
adc
rolb
iret
and
test
mov
xchg
jp
xor
dec
push
mov
xchg
mov
cmpsl
jg
out
ljmp
in
in
sub
insb
jb
sbb
mov
jo
js
and
push
ret
leave
dec
sbb
das
dec
lock
dec
mul
movsb
repz
cmp
clc
lahf
sbb
lret
mul
inc
fists
test
ret
bound
jg
lods
insl
das
dec
or
fcmovne
and
negl
lock
sarb
dec
cmpsb
cmp
jg
mov
lret
loope
bound
dec
mov
sbb
push
adc
dec
enter
jle
addb
loopne
sahf
cmp
bound
sub
xchg
jnp
mov
rcrb
mov
shr
mov
lahf
jp
mov
icebp
nop
mov
nop
sti
xchg
dec
loopne
push
add
std
pinsrw
arpl
push
lea
pop
lea
pop
pop
add
movsb
leave
inc
adc
push
inc
imul
hlt
cmc
inc
scas
adc
xlat
fildll
jbe
push
jp
and
aas
cs
lahf
cltd
push
mov
dec
inc
push
add
sbb
or
xor
sbb
out
cmp
subl
int
dec
out
jbe
fs
dec
pop
loopne
push
pushf
dec
test
sub
mov
call
xchg
hlt
jmp
out
dec
mov
std
push
jge
mov
mov
es
nop
mov
mov
or
rorl
cmpsb
outsb
out
outsb
xor
in
xchg
sub
pop
jg
xor
add
sub
out
add
sti
leave
lret
mov
ljmp
es
inc
xchg
les
je
f2xm1
pusha
xchg
adc
subl
sub
pop
mov
sub
mov
gs
and
loopne
xchg
pusha
test
xor
pop
addl
cmp
xor
push
scas
arpl
call
aam
dec
fidivrs
fiadds
mov
mov
dec
and
push
adc
jle
jno
xchg
adc
xchg
pushf
sub
cmp
das
sub
pop
ja
icebp
and
sub
notl
test
xchg
sti
test
ficompl
jae
cmp
testb
pop
mov
lock
jg
repnz
mov
push
fidivs
pop
pop
lods
negl
sbb
lret
ljmp
mov
and
hlt
xor
lods
ds
inc
sub
push
lret
testl
mov
testb
hlt
push
jecxz
lea
orl
shlb
xchg
int
jo
in
ret
mov
push
add
pop
and
sub
mov
xchg
mov
fnstsw
jmp
imul
jne
push
jge
jle
dec
sbb
repz
xchg
xchg
mov
les
add
mov
inc
sbb
xchg
xor
cmp
xchg
and
push
mov
nop
inc
insb
lods
movsl
mov
ss
movsb
add
icebp
cwtl
push
cwtl
lea
sub
psubq
leave
in
push
dec
fcomps
cmp
pushf
cltd
ja
mov
jns
iret
std
aaa
jmp
and
cli
aas
in
or
push
mov
mov
loop
push
mov
test
dec
xchg
inc
sahf
cmp
lret
mov
out
rolb
lods
cmpsl
and
inc
cltd
add
sub
test
aam
sub
pushf
jmp
pop
inc
lods
pop
mov
sbb
mov
adc
subl
pop
lds
out
pop
mov
sahf
mov
pop
imul
sub
cld
ss
sub
push
adc
daa
ds
shufps
orb
hlt
push
jmp
in
in
xchg
xchg
and
mov
mov
mov
andb
das
int
xchg
pop
pop
sti
daa
movb
fimull
or
cmp
pop
sbb
inc
ds
imul
xchg
nop
aaa
mov
pop
out
cmc
movaps
push
das
dec
outsl
or
xchg
mov
test
xchg
and
ds
sub
pop
dec
inc
std
push
shll
fldcw
in
js
inc
mov
mov
dec
fsubrp
or
call
adc
test
pop
and
repnz
inc
aad
push
mov
cmp
cli
xchg
push
ja
shll
mov
cmpsl
pop
mov
mov
jle
shlb
mov
rorb
xlat
adc
and
call
adc
aaa
cld
jae
shlb
or
push
jmp
pop
pushf
adc
jb
shll
cmp
inc
mov
ss
mov
mov
adc
sub
int
js
dec
orl
sbb
sbb
sti
das
imulb
mov
fidivrs
jle
rclb
inc
push
lock
stc
fstl
or
mov
sbb
pushf
mov
cmp
flds
addb
imull
test
test
push
mov
push
and
cli
cmp
lret
pop
repnz
or
test
or
xor
jp
dec
jo
ret
xor
push
push
pop
xor
ret
and
cmp
outsl
pusha
adc
je
movzwl
test
lea
cli
testl
adc
fneni(8087
adc
cmp
jg
pusha
cmp
mov
xchg
pop
xchg
stc
adc
fdivrs
dec
imul
or
pushf
pushf
xchg
shl
lret
daa
adc
fidivrs
push
pop
push
scas
jmp
pop
sub
lods
inc
clc
shll
push
cmpsb
imul
cmpsb
js
inc
and
mov
data16
inc
dec
jbe
dec
test
mov
int3
push
mov
push
inc
adc
mov
out
pop
jge
cmc
sahf
sbb
test
sub
nop
jmp
lcall
es
fwait
ljmp
xor
mov
inc
lret
out
jbe
push
mov
mov
ret
jge
int3
mov
daa
gs
mov
push
jno
dec
divb
dec
test
pop
pop
je
lcall
jmp
addr16
dec
and
inc
test
inc
fsubr
jmp
add
out
data16
add
xlat
adc
push
xor
idivl
push
lcall
iret
nop
jne
cmc
cmp
jmp
or
mov
aaa
shr
mov
inc
call
dec
idivb
mov
into
push
repnz
jbe
scas
fdivrl
ja
push
xchg
jge
jge
adc
inc
pushf
adc
out
cmp
adc
jg
movsl
sahf
push
sub
inc
sbb
aas
mov
sub
ret
loope
notl
negb
push
xchg
and
xor
push
shlb
ss
inc
adc
test
sbb
pop
lcall
fwait
mov
cmp
pop
push
hlt
mov
dec
les
mov
jle
aam
mov
or
mov
ret
adc
push
add
int
or
xchg
push
jmp
mov
jl
sub
push
jbe
mov
xchg
lea
pop
mov
adc
xchg
inc
push
lea
pushf
pop
into
cli
mov
jno
decb
xchg
mov
lods
clc
push
mov
pop
pop
and
pop
or
mov
mov
ja
lods
xor
mov
mov
repz
jae
add
inc
mov
lret
jbe
movl
mov
cmp
out
lret
mov
addr16
out
cmpb
ds
pop
sbb
jmp
mov
sub
mov
xchg
sbb
lds
push
sbb
sbb
push
fwait
pop
sub
mov
push
in
shll
mov
ja
cmp
sub
lods
in
add
jle
repnz
dec
or
mov
rolb
lock
cmp
lock
cwtl
rclb
xchg
and
movsl
in
adc
int
gs
push
arpl
lret
sbb
or
adc
cmc
orl
cmp
xor
lea
jne
and
push
jecxz
adc
loope
xchg
sti
mov
or
xchg
pop
adc
mov
sbb
dec
inc
std
push
dec
mov
imul
mov
mov
inc
mov
or
push
roll
test
fcoml
mov
jle
mov
inc
jbe
add
xor
movsl
pop
mov
xchg
out
cmp
sahf
repnz
sub
mov
out
cmp
jecxz
mov
cmp
lret
in
cmp
outsl
mov
addr16
adc
lea
jge
jmp
xchg
push
sub
ret
xor
mov
clc
sbb
test
std
lds
xchg
add
repz
mov
mov
bound
adc
ret
mov
in
in
push
roll
cltd
lods
mov
cltd
add
arpl
insl
inc
icebp
pop
sbbl
mov
mov
adc
xor
enter
mov
push
and
mov
std
pushf
jmp
inc
hlt
sahf
mov
hlt
orb
pop
andl
fsubrl
mov
out
movsl
or
sub
cwtl
adc
xchg
pop
das
jb
out
in
pop
out
jo
js
mov
xchg
dec
mov
mov
lods
xchg
pop
xor
lcall
pop
fwait
outsl
dec
aas
xor
cmp
sub
cld
adc
xor
mov
pushf
sbb
jne
sbb
inc
data16
stc
lods
mov
lcall
out
mov
ficomps
push
pushf
fiadds
je
aas
stc
lahf
fwait
push
pop
mov
stos
subb
test
lea
subb
pop
test
mov
mov
and
add
or
xchg
popf
push
pop
mov
movsl
ror
and
icebp
and
je
adc
xchg
ret
loop
insl
lock
dec
movsb
push
imul
cli
movsb
roll
or
jns
xchg
sub
lea
mov
loop
js
scas
mov
rclb
jne
addr16
pop
pop
icebp
sbb
push
les
add
mov
xor
mov
mov
into
imul
lock
adc
nop
aad
fisubs
pop
test
sbb
enter
sbb
popa
ja
sub
call
mov
iret
add
sub
fadds
xchg
fisttpl
mov
adc
inc
repz
sahf
push
cmpsb
xchg
enter
imul
sub
sub
adc
imul
push
mov
loope
mov
jo
fs
scas
cmc
pushf
jno,pn
sbb
shrb
orl
incb
faddl
sbb
inc
rcrl
mov
sbb
cmp
imul
sub
xor
inc
imul
sbb
je
or
pop
add
cmp
call
lcall
imulb
mov
das
jg
in
sbb
mov
sub
adc
push
int3
dec
jmp
adc
cmp
popf
loop
add
xor
sbb
xor
shrl
inc
inc
loopne
add
jp
fisubl
nop
mov
mov
fisubl
dec
movsl
jge
cmc
push
cmp
inc
cmp
inc
push
xchg
andb
sbb
mov
filds
gs
or
test
pop
adc
inc
cmpl
inc
inc
es
mov
loope
in
das
aam
rcr
dec
jmp
into
mov
out
je
imul
push
push
or
mov
push
cmp
push
xchg
shll
add
adc
int3
mov
nop
xor
loop
mov
push
fwait
cmp
imul
movsb
mov
call
bnd
stc
mov
cmp
jne
pop
and
mov
mov
xor
mov
rcl
fwait
jnp
xlat
sbb
push
mov
cmpsl
cmpsl
inc
push
pop
fsubl
jbe
xchg
mov
dec
insl
outsb
imul
dec
test
xchg
jo,pt
sbb
sarl
mov
push
das
inc
xchg
jge
jl
std
jg
add
lret
scas
ss
xor
jo
and
cmovge
pusha
mov
stc
xor
add
xor
out
xor
mov
lds
mov
lds
jle
cmp
adc
lahf
in
sbb
cmp
pop
push
adc
roll
pop
insl
mov
aas
pop
inc
sub
out
add
jns
push
lods
xchg
mov
mov
mov
mov
mov
sub
mov
sbb
nop
or
ficomps
aaa
std
or
in
js
out
scas
aad
push
mov
xlat
mov
push
adc
pop
xor
outsb
pusha
mov
mov
push
pop
push
jnp
pop
subb
shll
sub
stos
addr16
sub
cmovge
addr16
rcl
sub
cmp
dec
leave
je,pt
fnstcw
mov
notb
push
jns
and
cs
fldcw
insl
adc
cs
ds
mov
pop
aas
push
pop
sub
addb
rcrb
push
addr16
sbb
inc
fnsave
and
sbb
add
or
mov
and
clc
inc
jbe
cmp
cmp
cmp
or
cmp
adc
movsb
in
cli
andl
int3
add
or
xchg
pop
add
stos
xchg
jns
xchg
idivb
or
dec
repz
push
icebp
mov
mov
sahf
sbb
pop
xlat
jl
js
adc
mov
out
or
xor
into
pop
jle
cmpsb
cvttps2pi
cltd
add
gs
mov
xor
mov
pop
mov
divb
sub
pop
xchg
xchg
test
dec
mov
cmp
insl
clc
das
loop
pop
sti
xor
pop
and
outsb
loop
and
xchg
sbbb
rorl
popf
ja
shll
sarb
mov
shrb
pop
push
cwtl
mov
adc
add
ds
in
aad
incb
movsl
xor
mov
pusha
fdivr
xlat
iret
mov
fimuls
int
ret
and
outsb
lret
jecxz
into
mov
dec
inc
je
cmp
fnstenv
ljmp
xchg
adc
sbb
in
test
test
mov
jle
jle
jb
and
loopne
rorl
inc
mov
mov
cwtl
dec
sar
flds
cld
lret
fimuls
inc
sbb
sti
mov
ficoml
fnsave
jecxz
stos
cs
outsb
jp
lcall
mov
mov
pusha
stc
into
dec
cmp
xor
adc
mov
push
shl
fucomi
ljmp
push
xchg
fdivl
pop
mov
xor
outsb
xchg
and
js
lret
mov
ret
popa
gs
je
jo
adc
aad
push
push
int3
or
push
add
dec
add
or
pop
sub
insb
popa
xchg
outsb
cs
xor
lahf
mov
pop
pop
lcall
data16
ss
lret
mov
aas
outsb
sbb
cmp
inc
aas
pop
js
std
or
fs
mov
pop
or
sbb
dec
xchg
je
mov
or
popf
xchg
aaa
rcl
push
jne
cmp
cwtl
xor
imul
arpl
mov
sub
jbe
call
cmp
dec
in
mov
sbb
das
push
in
aas
call
leave
xor
xchg
fs
inc
pop
addl
sub
jae
outsl
sbbb
and
add
mov
sarb
xchg
xchg
push
add
fcmovu
leave
aam
mov
out
das
scas
movsl
or
lock
scas
mov
xchg
and
or
aaa
outsl
pop
outsl
out
hlt
xchg
push
dec
pop
xor
dec
cmp
mov
aam
insb
mov
push
adc
sbb
sub
aam
shr
mov
xchg
loopne
dec
and
mov
je
sub
mov
mov
mov
adc
or
xchg
inc
mov
mov
adc
fdivr
adcb
dec
xor
hlt
subl
mov
scas
sbb
mov
aas
sbbl
xchg
adcb
imul
and
int3
scas
xchg
xchg
mov
cmp
ljmp
cmp
xchg
xchg
and
or
stos
lock
push
mov
push
cmp
into
insb
jnp
and
push
into
jle
pop
lret
jo
mov
test
test
lods
shl
sub
xchg
xor
add
pop
xchg
lock
sub
lret
int3
mov
xchg
add
mov
and
jl
js
divb
sbb
push
pop
clc
stc
scas
xchg
and
sbb
in
cld
and
ds
js
fxtract
or
cvtdq2ps
lds
jne
ja
mov
add
mov
outsb
jp
pop
dec
mov
loop
xor
mov
aas
adc
and
sbb
hlt
mov
cwtl
mov
lret
cltd
lods
repz
imul
mul
icebp
jmp
nop
xchg
loope
xchg
pop
pusha
in
push
mov
cmp
shrl
dec
inc
adc
inc
adc
xchg
add
outsb
push
add
adc
mov
mov
mov
ss
repnz
out
jo
scas
sbb
rcrl
mov
or
jge
jo
iret
stc
push
and
and
pop
loope
jl
dec
add
loopne
pop
roll
and
cmp
mov
test
xchg
or
aas
insb
mov
mulb
mov
int
dec
push
pop
arpl
sbbl
lods
fldenv
les
dec
arpl
push
sti
insb
cmp
sti
xchg
xchg
andb
push
xchg
leave
inc
in
or
ljmp
lods
mov
int3
mov
mov
ss
mov
mov
sbb
test
imul
mov
inc
in
adc
mov
xlat
movsl
jae
push
out
jnp
enter
in
xor
rolb
inc
jnp
xchg
es
jns
add
adc
lahf
lea
xchg
jl
jl
mov
pop
repz
stos
inc
leave
push
jg
push
mov
je
aaa
clc
aaa
sbb
or
cmpsb
iret
stos
ficoms
cmpsb
out
decb
and
outsb
lock
outsb
add
out
fwait
push
dec
mov
adc
rorb
imull
in
movsl
and
add
jmp
gs
dec
nop
stos
xor
mov
mov
adc
push
out
sub
jns
xchg
iret
cmpsb
testb
and
out
xchg
out
xor
cmp
dec
push
mov
andl
xchg
fstpl
inc
ljmp
add
push
push
call
lods
push
cmp
mov
cmpsl
cli
mov
or
int
in
pop
movb
xchg
int
test
cmc
and
dec
dec
ret
or
nop
addr16
mov
push
pop
inc
fucom
jecxz
subb
add
pushf
xor
inc
jo
push
mov
sub
push
adc
mov
mov
insl
lret
push
pop
push
cmp
sub
sub
add
xorl
xor
shl
xchg
mov
test
stc
loop
scas
in
add
mov
lcall
faddp
cmp
jae
sti
pushf
mov
ficomps
aas
shr
gs
in
or
xchg
gs
mov
rolb
cmc
stos
mov
sbb
and
lea
roll
push
xchg
or
jae
imul
loop
mov
xor
pop
push
adc
cmp
sarb
push
test
outsb
inc
inc
les
ja
add
pop
jne
sbb
pop
int
adc
push
arpl
xchg
filds
sahf
mov
xor
xor
ss
ds
pushf
xor
imul
inc
cmpsb
icebp
sub
pusha
aaa
pop
int
cld
mov
loop
rcl
cmp
scas
lret
data16
out
xchg
mov
hlt
add
mov
sbbl
je
jne
aaa
xchg
pop
and
out
stc
xlat
fs
divb
cli
and
shl
incl
adc
jl
push
loopne
ja
or
insb
mov
sar
push
mulb
outsl
and
xor
sub
cmpsl
scas
add
nop
xor
sahf
xchg
mov
loop
fnstenv
xor
xchg
gs
mov
push
scas
aam
jecxz
movsl
push
or
lea
pop
test
add
scas
test
push
out
mov
sbb
inc
cltd
xchg
inc
or
sub
in
mov
test
test
sub
insl
ja
insb
dec
cmpsl
dec
lret
jne
and
mov
inc
pop
aaa
sub
jnp
xor
fadd
leave
mov
lea
cltd
mov
arpl
imul
dec
dec
sub
sti
mov
cmp
in
pop
xchg
arpl
fbld
mov
jne
out
inc
xchg
cli
lods
inc
adc
test
insl
int
push
or
fcompl
js
je
les
inc
in
fdiv
test
lcall
cmp
sbb
pop
jns
pop
out
sbb
mov
push
mov
pop
iret
and
sahf
inc
add
cld
movsb
mov
aaa
mov
jecxz
pop
pop
adc
daa
rorb
xchg
outsb
pop
sub
data16
test
jnp
jbe
pushf
push
add
mov
negl
popa
jp
mov
sbb
dec
pop
inc
shlb
fidivs
sbb
lock
jp
fstpt
jo
or
mov
aaa
int
or
add
dec
and
adc
push
les
mov
movsl
sbb
push
push
add
mov
mov
jg
fadd
jg
daa
jne
xorl
out
test
imul
mov
pminsw
add
jbe
sub
aaa
mov
push
lret
push
sub
int3
sbb
js
xor
add
push
sbb
daa
enterw
out
push
xchg
pop
das
mov
mov
pop
xor
jge
ret
fnstenv
push
stos
jbe
jecxz
ds
cmc
cmpl
mov
fcomi
hlt
in
sbb
call
pop
test
mov
pusha
popf
pop
rorb
lds
cmpsb
or
lret
subb
lock
and
enter
rorb
cld
aam
inc
adc
inc
push
imul
mov
mov
push
adc
sub
shl
xor
jb
ljmp
xor
stos
fdivl
inc
push
cmp
jno
sbb
imul
in
fwait
add
cmpsb
dec
cmp
mov
lcall
jae
stos
and
mov
test
push
lahf
mov
out
jo
push
sbb
cmp
imul
xor
stos
movsl
add
cltd
add
mov
cmpl
call
jb
dec
push
cmp
aam
xor
jb
xchg
enter
es
add
inc
aad
movsl
aas
add
push
inc
jp
mov
cltd
pop
lds
and
es
add
jae
jl
sarb
arpl
cwtl
fdivrp
repz
jmp
ljmp
push
fsubl
enter
pop
imul
lcall
aad
inc
push
repz
or
push
cmp
inc
es
hlt
stc
cmp
lahf
jle
push
arpl
xor
mov
repnz
add
testb
and
lea
add
shll
xchg
add
cwtl
rclb
ss
in
lcall
pushf
dec
mov
hlt
lds
dec
lods
test
push
les
insl
fwait
in
pop
mov
into
pushf
fwait
inc
xchg
dec
xchg
or
add
insb
imul
adc
pop
dec
mov
xor
and
pop
insb
jae
cltd
inc
loopw
pop
push
mov
mov
add
mov
push
sub
gs
dec
adc
mov
mov
cmp
adc
adc
popf
fwait
pop
or
subl
les
rcr
lods
xchg
or
fwait
jno
rcl
outsl
aas
adc
and
mov
shll
int3
cmp
shlb
into
jle
xor
aas
or
fisubl
jmp
scas
insb
ss
jg
inc
je
mov
mov
mov
imul
push
adc
mov
testb
mov
dec
andl
inc
cmpsb
fs
ljmp
stos
fistpl
jge
in
lods
mov
ficompl
xchg
enter
nop
sbb
add
icebp
in
add
mov
repnz
aam
test
sbb
xchg
add
cmp
cmp
jns
pop
ds
fldl
mov
das
jb
dec
mov
iret
cmp
push
mov
mov
stc
pop
cmp
mov
ljmp
inc
sti
fisubrl
nop
ret
outsl
push
enter
cltd
mov
aaa
scas
bound
addr16
push
add
gs
cli
test
stc
xor
repnz
test
mov
aad
outsl
lock
add
jecxz
pop
movsb
mov
scas
and
loopne
mov
int
loop
movnti
test
ret
mov
pop
push
jmp
mull
das
fcmovnbe
fidivs
xchg
lock
sub
mov
mov
adc
iret
pop
call
jg
pushf
sub
pop
les
test
clc
fistpll
mov
sbb
and
sbb
or
push
sahf
jge
push
adc
fildl
int
push
adc
data16
lods
enter
jno
inc
xchg
adc
int
mov
cs
inc
mov
jo
ds
rclb
dec
out
adc
sti
rcrl
loope
and
fcmovbe
mov
adc
adc
pop
or
push
sti
ret
jmp
xchg
xor
push
add
test
mov
mov
out
push
mov
sub
ret
test
sub
jle
loope
out
pusha
dec
and
fwait
xchg
insb
jo
filds
dec
mov
cmp
std
sub
lret
mov
fcoms
push
jl
cmpsl
push
adc
pushf
dec
stos
imul
je
push
sahf
sub
xorb
dec
out
mov
push
inc
daa
insl
cmp
cmpb
mov
incl
loop
loopne
and
ja
call
cmp
mov
repz
dec
lret
dec
cmpsb
fistl
dec
push
lret
mov
push
adc
clc
sub
or
insb
mov
xor
test
nop
sub
and
das
scas
push
ficompl
push
mov
lods
bsr
or
pop
pop
add
out
jg
imul
add
mov
jae
or
popf
or
cltd
mov
cmpsl
aaa
mov
inc
pusha
repnz
fs
call
mov
les
push
xchg
cmpb
mov
mov
fistpl
icebp
jmp
cwtl
stos
stc
icebp
test
xor
mov
lock
les
cld
rorb
adc
cmpsl
lock
dec
fwait
pushf
lods
or
movsb
test
aad
incb
mov
imul
cmp
aam
jns
dec
rcr
and
shl
dec
cld
mov
jmp
and
data16
faddl
add
pop
cmpsl
adcl
test
jae
rorl
sub
xor
ret
lcall
ljmp
jge
xorb
xor
jb
mov
jmp
shlb
int
add
xchg
inc
fstl
pop
cs
mov
inc
rol
or
jne
cmp
in
ja
popf
stc
lds
xchg
jo
out
jmp
cltd
and
xchg
add
push
sbb
jne
subb
std
movsl
add
xchg
cmp
and
dec
pop
mov
cmpsl
mov
outsb
add
clc
dec
push
daa
sub
inc
jne
push
mov
outsl
imul
rclb
jp
jno
pushf
stos
xor
int
test
in
inc
aad
addr16
sub
adc
or
jp
dec
pusha
and
add
cmpsb
test
ret
bnd
xchg
or
subb
cltd
negb
stos
fldt
rcrb
add
add
dec
jae
hlt
mov
jbe
fwait
inc
sub
add
mov
imul
test
aas
fmul
mov
pop
jmp
sbb
or
pop
sbb
xchg
sbb
hlt
mov
loope
or
dec
lds
arpl
out
jmp
fbld
adc
push
adc
pop
lahf
adc
adc
sti
jp
lret
dec
or
jbe
roll
xchg
pop
push
orl
jmp
add
dec
insb
add
loopne
icebp
adc
mov
in
xlat
fistpl
mov
jb
pop
mov
lds
cmp
addb
or
adc
mov
mov
cltd
scas
aas
mov
sbb
out
cltd
lahf
cmp
dec
stos
adc
arpl
adc
sub
xchg
push
and
test
xchg
loope
arpl
aas
movsl
iret
sub
push
je
cli
mov
and
repnz
xchg
mov
xor
pop
jae
sbb
xchg
jno
mov
xorb
mov
int
movsb
loop
add
xor
movsb
pop
out
out
aas
es
mov
outsl
ror
adc
and
sub
jp
xor
psubusb
es
mov
dec
out
scas
mov
pop
dec
fidivs
in
pusha
movsb
pop
xchg
adc
mov
xor
test
into
and
push
add
and
pop
jg
lods
sub
jmp
mov
mov
outsb
cmc
hlt
fcoms
in
lods
and
pop
je
fdecstp
cmpsl
inc
push
loopne
dec
hlt
xchg
lods
xchg
cmp
mov
shlb
lcall
xchg
int
push
mov
push
clc
outsb
repnz
dec
test
and
pop
xlat
lret
xor
pop
stos
out
mov
xor
mov
pushf
cmp
repz
std
lahf
sub
fdivl
imul
cmc
dec
test
fsubrl
dec
int3
push
xor
ret
fcoms
mov
subb
fdivrl
xchg
fsubs
in
jecxz
mov
or
out
mov
sub
dec
sub
ljmp
sahf
movsb
outsb
push
std
mov
dec
int
jecxz
aam
leave
xchg
mov
inc
movsb
push
and
jmp
push
xchg
sbb
je
push
and
jbe
movsb
jnp
inc
push
cmp
scas
sbb
fsts
in
sbb
mov
jg
mov
jo
cmpsl
fsubl
xchg
mov
mov
arpl
mov
cmp
dec
cmp
mov
xor
pop
sbb
std
lret
mov
out
ja
stos
imul
rcrb
xor
sti
jl
sbb
aas
fwait
rcl
cltd
lcall
insl
fisttpl
cmp
ret
popa
jecxz
call
ret
cmpsl
adc
sub
test
fcomps
push
fistps
bound
push
jnp
stc
insl
mov
aad
cmp
mov
cmp
jecxz
fcoml
repnz
push
jl
loopne
js
int3
xorb
pop
fistpll
mov
imul
add
sub
pop
das
pop
cmp
bound
push
xchg
adc
mov
sbb
lcall
mov
sub
cmp
in
push
pop
or
cwtl
aaa
mov
mov
jecxz
movsb
xorb
jmp
sbb
lret
xchg
shrl
outsl
roll
subl
adc
sti
xorb
pop
ud0
lea
dec
and
cli
imul
or
fidivl
fisubrl
iret
ret
and
mov
into
xchg
dec
pop
movsb
aam
mov
jns
add
adc
sub
rclb
sbbb
xorl
ljmp
adc
inc
cmp
cwtl
jne
mov
les
aas
or
or
pop
push
cmpsb
xchg
inc
frstor
push
xor
mov
lock
mov
lock
cmpsl
mov
and
cmpsl
push
sub
add
popa
mov
out
bound
mov
je
jmp
mov
clc
jmp
jp
mov
dec
ds
movsb
push
xlat
out
aaa
loopne
jo
insl
dec
mov
dec
fdivl
mov
pop
fnsave
das
mov
into
andl
jbe
sarl
cmp
pop
mov
sahf
mov
je
jge
iret
pop
loope
add
pop
dec
mov
xorl
adc
rclb
fs
inc
mov
aaa
push
mov
cmp
ficomps
pop
xor
jno
std
xchg
stos
fbld
int
sbb
notl
mov
les
imul
push
imul
adc
jg
loopne
imul
dec
cmp
iret
clc
fcmovb
cmpl
hlt
add
les
icebp
bound
mov
mov
lds
adc
jno
rcr
mov
cmp
pop
sub
and
mov
mov
pop
pop
cwtl
sub
xchg
stos
dec
pop
cmp
into
dec
roll
cld
pop
cmp
mov
outsb
cli
add
inc
mov
loop
xchg
ss
push
sbb
inc
test
inc
fcoml
adc
sbb
inc
jmp
adc
ljmp
pop
mov
adc
push
insb
sti
lock
mov
cmc
sbb
push
add
ss
lret
push
xchg
lahf
shrl
mov
dec
xchg
mov
jnp
idivb
into
lods
std
xchg
iret
jno
mov
jg
imul
mov
fidivrs
mov
push
jp
bound
inc
movsb
add
cli
or
mov
pop
loop
push
jecxz
dec
xor
inc
insl
aas
pop
or
jmp
xor
adc
xchg
xchg
or
mov
push
mov
dec
outsb
sarl
inc
jle
mov
and
inc
push
inc
dec
adc
add
std
mov
popa
in
xorb
mov
lods
mov
sti
cs
inc
mov
pop
scas
insl
push
cmp
adc
jmp
aam
sarb
xor
fs
xchg
sub
jecxz
sub
add
dec
jp
test
mov
arpl
xor
fstpl
clc
fs
addr16
stos
cs
push
cwtl
xchg
shlb
cmpsb
js
test
lret
in
adc
and
movsl
push
inc
mov
inc
push
xchg
xchg
je
xor
orl
lret
in
push
sbb
mov
or
mov
jnp
ds
inc
fmull
cld
out
cs
ret
dec
les
aas
mov
or
cld
imul
test
lea
js
stos
push
lods
lret
jg
cltd
xchg
cmc
scas
push
jecxz
cmpsl
mov
mov
pop
rorl
nop
and
fmul
mov
popf
imul
mov
ss
fdivrl
out
cmpsb
jecxz
stos
push
stos
scas
jecxz
call
mov
cmpsl
sbb
repnz
xchg
dec
or
or
in
stos
xor
jae
jns
test
mov
mov
inc
clc
mov
mov
jl
ljmp
aas
int3
mov
and
lea
ltr
xchg
loopne
inc
and
stos
cmp
dec
sub
cltd
ja,pn
leave
pop
js
fcmovnbe
cld
lds
mov
rcrb
mov
cltd
mov
pop
jae
inc
pop
cli
dec
ret
int3
dec
jle
jo
mov
sub
pop
lds
mov
fiaddl
ret
mov
lods
push
mov
call
inc
fidivrl
inc
cld
mov
ret
int3
enter
adc
xchg
jg
jmp
mov
xchg
inc
mov
mov
popf
ja
bound
ja
lea
sbb
jmp
in
mov
outsb
rcrb
inc
icebp
fidivs
mov
cli
pop
cmc
leave
enter
cli
mov
into
je
scas
rep
repz
mov
mov
mov
mov
orb
imul
scas
dec
push
and
push
mov
cmp
push
mov
xchg
outsb
jae
or
adc
cld
xor
add
mov
dec
push
ret
in
or
int
scas
xor
jns
popa
jae
push
stc
mov
jo
inc
ret
jmp
out
lods
cmp
and
lcall
testb
cmp
fildll
iret
sub
push
outsb
mov
jl
jecxz
test
mov
dec
std
xchg
mov
sarb
mov
ss
pop
pop
mov
ljmp
xor
push
mov
or
sub
inc
outsl
mov
mov
cmc
or
xor
xchg
sahf
scas
paddq
lcall
adc
sar
inc
aaa
mov
sbb
in
imul
les
xchg
sbb
mov
loop
jne
bound
jge
mov
pop
push
xor
popa
fs
mov
mov
xor
push
fnstenv
popf
rorl
sbb
adcl
lahf
mov
adc
mov
cmp
aaa
cmp
push
popf
cmp
sbb
cmp
rorl
mov
mov
iret
mov
in
cld
bound
test
repnz
inc
roll
jno
scas
jmp
sub
push
push
jg
aaa
iret
push
js
int
push
sbb
hlt
add
jne
xor
gs
jle
jle
pop
ds
cmc
sbb
mov
inc
jmp
xchg
mov
and
jb
pop
inc
jge
sarb
xchg
popa
mov
aaa
cmp
lret
clc
xchg
xor
mov
sbb
cli
shll
sub
jmp
mov
aad
sbb
ret
add
and
sbb
movsb
jp
fsubl
xchg
sbb
cmp
xor
test
lcall
mulb
and
cltd
push
cld
xor
dec
jbe
sub
dec
into
lahf
psrld
int3
adc
pop
out
sahf
jne
mov
adc
mov
push
mov
test
mov
xchg
das
cltd
test
loop
cmc
fdivrl
out
out
ss
jne
lods
push
sbb
cli
inc
mov
sub
out
pop
out
pop
insb
outsl
pushf
pop
sub
test
cs
and
inc
and
call
shl
loope
push
imul
sub
sti
in
add
pop
ficomps
xchg
or
pop
out
add
inc
cmp
fwait
test
sbb
out
push
jo
mov
xor
xchg
or
push
lds
adc
clc
push
ss
fwait
jne
inc
dec
and
adc
adc
mov
in
mov
fdiv
push
mov
dec
inc
repz
push
sbb
rclb
and
add
iret
cmp
std
fcomps
fdiv
pushf
aaa
push
jge
sbb
ja
movl
dec
cmp
mov
and
jne
push
mov
in
jecxz
ret
int3
adc
inc
or
mov
scas
rorb
push
iret
push
add
mov
sbb
stos
movsb
mov
cli
lods
xor
dec
mov
or
scas
xor
mov
mov
arpl
imull
jp
or
adc
sub
out
sub
mov
cmpsl
imul
and
popf
sub
push
sti
and
push
leave
sub
outsl
adc
xchg
scas
out
xor
iret
adc
inc
mov
push
loopne
mov
shrl
es
jge
inc
fs
sbb
daa
mov
aad
add
lahf
in
push
push
xchg
mov
push
add
xchg
dec
fnstsw
mov
inc
xchg
icebp
pop
mov
pop
sub
push
aas
out
and
add
mov
xchg
aas
ss
cmpsb
jg
insl
rol
sub
out
das
jecxz
inc
or
clc
pop
and
or
push
jno
or
ja
nop
and
out
push
jecxz
nop
aaa
fcmovne
sarb
fs
mov
std
pop
mov
mov
inc
xchg
insl
dec
mov
pop
mov
enter
jecxz
mov
or
jecxz
orl
xor
je
hlt
aam
add
movsl
xchg
ds
jb
rcrl
int
rcrb
cs
pop
pop
xchg
pop
imulb
les
cs
dec
xchg
inc
cli
test
test
add
push
jnp
pop
cli
push
and
mov
mov
lahf
loop
sti
pop
add
push
cmpsl
int3
pop
scas
add
ret
xchg
or
mov
adc
mov
dec
mov
xor
mov
add
test
sbb
js
movsl
jb
popf
xor
mov
call
dec
out
push
push
pop
imul
or
adcl
or
int
lock
lock
cmp
pop
shl
movb
push
cld
popa
lods
xchg
and
outsl
rcrl
test
push
mov
xchg
pop
add
xchg
sbb
add
std
xorb
hlt
add
icebp
ja
repz
pop
xor
pop
stc
in
push
mov
xor
push
mov
mov
or
push
push
pop
and
or
mov
into
out
lcall
imul
es
adc
lods
mov
mul
xor
cld
mov
sahf
adc
iret
fdivl
sub
fildl
jnp
mov
jg
cmp
mov
neg
or
leave
fxch
jecxz
inc
fcoml
jl
adc
test
mov
mov
pop
sbb
or
popa
clc
jmp
xchg
cmpsl
xchg
pop
scas
adc
movsl
inc
ret
push
ss
sub
mov
ds
in
push
push
sub
imul
fs
mov
fisttpll
pop
sub
fwait
div
mov
mov
loope
inc
roll
movsl
aad
dec
xchg
jnp
mov
add
sbb
cmc
test
test
xor
ret
ljmp
mov
aas
lods
cmp
sbb
push
aam
orl
or
pop
rcrb
adc
xor
inc
pop
adc
enter
shr
xchg
mov
shr
dec
andl
lret
inc
sbb
lret
mov
movsb
adc
sub
jae
adc
jbe
xchg
fucomp
rorl
test
inc
popl
pop
dec
into
pop
stc
push
sbb
js
inc
mov
and
lock
shll
imull
bswap
imul
loopne
lret
rol
dec
push
mov
cwtl
lock
adc
mov
les
gs
iret
insl
mov
fldlg2
cmp
xor
mov
repnz
add
or
imul
ror
dec
hlt
inc
xchg
add
and
lret
or
out
roll
movsl
pop
pop
mov
cmc
cmp
inc
or
jb
and
stos
dec
bound
mov
pushf
js
sub
inc
xor
mov
sub
je
xor
jle
cmpsl
jno
dec
hlt
and
cli
xchg
xchg
mov
scas
dec
or
inc
aad
in
and
dec
sbb
dec
pop
sahf
adc
xchg
dec
fwait
sub
test
mov
xor
or
pop
int
sub
jb
jne
pmaxub
aaa
into
xchg
pushf
adc
rcl
fcmovnb
pop
or
mov
push
cwtl
jp
mov
scas
imul
pop
sahf
adc
lret
lcall
sahf
xor
dec
push
adc
nop
adc
mov
push
pop
mov
xchg
fcomps
stos
dec
mov
ss
xor
add
popf
mov
sbb
mov
jno
fildll
lods
add
dec
mov
in
fwait
and
add
or
fmul
sti
lea
popa
stc
fs
sti
or
jg
push
xchg
sbb
xchg
pop
jbe
call
adc
ret
test
fs
cmp
into
xor
jecxz
cmp
stos
add
lods
dec
mov
cmp
dec
loope
mov
outsl
adc
ljmp
or
jo
nop
filds
bound
pop
jo
inc
cmp
sub
bound
xchg
movsl
jge
jecxz
inc
mov
repz
add
lock
mov
mov
and
cmp
stos
movsb
or
in
fcompl
jae
daa
xchg
enter
mov
and
dec
xchg
push
fidivs
std
mov
hlt
pusha
jecxz
clc
push
mov
enter
or
mov
iret
fwait
push
or
lock
and
call
cpuid
push
js
push
mov
lds
cmpl
aaa
mov
adc
sub
mov
xor
pop
call
shl
xor
lods
in
jae
adc
xchg
pop
stos
js
mov
lret
rcll
fwait
sub
das
rol
mov
js
popf
fdiv
or
scas
fisttps
push
add
mov
std
scas
xchg
hlt
jbe
sub
adc
pop
mov
add
bound
insb
dec
and
ss
iret
out
ret
cmpsl
repnz
aam
adc
mov
aad
mov
sub
xchg
mov
adc
push
pushf
sub
call
push
xor
xor
data16
clc
inc
mov
lcall
xchg
or
push
ret
icebp
int
pop
rcrl
pop
nop
cmpsb
xchg
addr16
xchg
out
lods
inc
and
gs
call
les
dec
gs
es
fildll
push
aam
xor
std
adc
dec
lods
inc
cwtl
into
fistl
xlat
scas
jbe
pop
pop
jne
lret
es
outsl
mov
mov
lods
mov
mov
les
pop
push
out
fstl
push
mov
xchg
das
adc
into
pop
adc
stos
mov
xor
rclb
dec
or
int3
xor
inc
pop
or
push
xor
pushf
cmp
ret
cli
popf
adc
and
xorl
cs
cld
fidivs
push
popf
jb
in
or
cmpsl
sub
les
outsb
rolb
or
repz
mov
cwtl
pop
adc
push
push
jg
and
dec
dec
pop
jecxz
ret
or
push
mov
jb
sub
lock
and
loopne
test
and
xor
pop
test
inc
or
sub
in
xlat
daa
in
out
xchg
inc
jp
fadds
add
cmc
unpcklps
mov
inc
adc
cmpsb
scas
es
fs
push
sbb
addr16
push
push
inc
push
or
mov
cmpsb
ljmp
lcall
xor
jge
mov
out
cmpsb
pop
cs
push
mov
mov
adc
addr16
fcom
test
xor
fsubr
mov
aaa
icebp
jp
popf
sbb
mov
ret
mov
fwait
cmp
hlt
movsl
lds
dec
cmpsl
inc
testb
cmp
cld
call
cld
sahf
imul
mul
inc
lahf
mov
sub
rcr
sub
jbe
fwait
andb
lds
push
lahf
cmc
add
stos
lcall
add
leave
sbb
scas
push
or
or
gs
sti
dec
or
popf
mov
mov
stc
pop
push
ljmp
and
jnp
xor
mov
scas
jecxz
lods
cmp
pop
pushf
mov
inc
add
es
cmpsb
test
push
xchg
repz
mov
ljmp
add
pop
daa
lods
add
dec
ljmp
punpckhdq
xor
inc
cmp
out
push
or
adc
sub
jecxz
xrelease
add
mov
leave
push
pop
adc
push
jmp
outsl
stos
scas
addl
dec
mov
cmp
lods
mov
lcall
adc
adc
push
push
andb
mov
mov
sti
mov
jmp
sub
push
out
out
pop
xor
ss
ljmp
dec
xchg
ss
mov
mov
mov
pop
enter
adc
orl
adc
lds
ret
in
insl
decb
jg
jns
mov
cld
imull
cmc
je
mov
loope
sub
out
test
lahf
fldt
jno
mov
das
scas
mov
sub
xlat
sub
xorl
add
sbb
adc
sbb
fwait
pop
or
scas
lds
int
mov
lret
adc
lock
shl
in
stos
xchg
mov
icebp
and
pushf
jb
and
outsl
add
inc
mov
movsb
fildl
mov
ja
and
out
rol
cs
scas
mov
testb
cmp
loopne
jbe
iret
and
and
adc
scas
lods
arpl
pop
xchg
adc
dec
in
or
nop
sub
imul
mov
add
cs
adc
loope
mov
xor
push
dec
ds
pop
sub
and
jae
xor
loop
cmp
shrl
scas
jge
ficompl
xchg
xchg
cmp
shl
dec
lea
xor
fs
and
in
cmpsl
add
adc
pop
rcrb
sarb
xchg
cmpsl
stos
add
push
fadds
cmpsl
roll
gs
adc
addb
orl
cmpsl
pop
mov
rcrb
jl
lods
fcmovnbe
ljmp
cmp
adc
hlt
xchg
sahf
stos
movsl
mov
fcomps
and
mulb
loop
or
out
lcall
mov
js
test
lods
cmp
inc
shll
into
jle
cmpsb
mov
push
mov
dec
sub
add
iret
xchg
arpl
pop
adc
sarb
repz
xor
mov
jae
mov
inc
mov
add
xchg
adc
jg
aaa
xorl
and
fiaddl
mov
nop
cmpsb
mov
int3
negl
out
sbb
mov
jne
inc
pop
je
mov
sub
stos
inc
mov
xor
and
xchg
pop
popa
outsb
fdiv
stos
xchg
add
inc
rcr
mov
aad
sbbb
fisubrl
inc
push
adc
add
mov
add
jmp
sti
xor
dec
lcall
and
ret
xchg
inc
sbb
xor
pop
jl
mov
xor
jno
test
xor
mov
lahf
enter
add
cmp
sbb
sbb
jo
xchg
sti
cltd
jecxz
das
les
inc
lret
dec
das
mov
aaa
pop
cmp
mov
popa
xor
popf
stc
inc
mov
stos
mov
stos
mov
sahf
je
pushf
jle
cmpsb
loope
cmpsl
sahf
movsl
shll
inc
pop
std
out
pop
cmpl
mov
andb
xchg
jno
pop
mov
sbb
cmpsl
shlb
aad
cmp
test
fbld
mov
xchg
inc
sbb
fneni(8087
or
xchg
mov
dec
push
into
dec
xchg
sbb
ja
lcall
je
gs
test
inc
push
lock
jmp
repnz
test
nop
enter
test
sti
test
aad
mov
daa
inc
cwtl
fistpl
cmp
xor
test
out
cmp
out
pop
push
sahf
mov
add
push
dec
lahf
pop
inc
pop
dec
and
inc
push
scas
les
dec
fs
mull
ret
or
test
sub
out
mov
daa
xor
pop
ret
sti
xlat
xor
ljmp
sbb
loope
adc
xchg
add
sahf
fisubs
xor
mov
cli
inc
lret
out
icebp
repz
mov
sbb
add
or
jle
inc
rcl
mov
in
call
push
clc
clc
xor
cli
rol
push
sbb
lock
ret
insl
je
lods
movsl
arpl
test
daa
inc
add
sbb
xchg
push
ret
xlat
in
dec
and
sbb
add
test
sahf
call
jg
hlt
mov
pop
shlb
bound
inc
ljmp
fisttpl
pop
dec
jl
sahf
inc
in
push
fstps
mov
loop
rol
aas
data16
dec
xor
or
mov
aad
inc
or
lods
insl
push
mov
aam
shl
in
mov
push
aaa
sub
jae
mov
inc
enter
in
std
pop
js
ja
cli
mov
mov
add
data16
fidivrs
je
push
push
rolb
push
pop
rcrb
icebp
sbb
push
aad
mov
mov
jmp
and
nop
inc
sub
inc
lea
in
orb
mov
sbb
push
mov
inc
test
mov
cmp
imul
or
dec
mov
punpckhwd
mov
data16
and
cmp
fcmovnu
js
and
dec
cmp
mov
mov
sbb
out
adc
cli
leave
push
addr16
cld
mov
and
ljmp
push
adc
fsts
mov
imul
shr
sti
xchg
adc
mov
adcl
shrl
sbb
push
lcall
decl
out
lds
jns
jmp
imul
xor
xor
jns
movl
sub
mov
bound
fcmovne
mov
aam
fcomps
push
es
inc
dec
mov
das
pushf
cmpsl
sbb
mov
xor
adc
mov
subb
fidivl
pop
inc
sub
test
or
int
das
outsl
adc
lea
imul
bound
sub
std
fmul
push
adc
dec
and
xor
mov
and
addr16
push
push
les
rorb
xchg
sti
and
mov
add
mov
add
iret
std
jne
js
movsl
and
daa
ret
icebp
mov
inc
mov
loopne
jo
imulb
out
cmp
xchg
jge
int3
mov
and
mov
cmp
mov
jb
scas
out
jns
push
mov
nop
or
inc
pop
insl
mov
mov
nop
adc
push
call
cmp
mov
or
sar
dec
xchg
dec
cmp
pop
fsubrl
out
outsb
add
and
xchg
in
cli
insl
pop
lds
pop
scas
inc
sbb
add
adc
imul
adc
sbb
xchg
xchg
cs
mov
test
mov
mov
inc
push
lret
xchg
cltd
stos
or
stos
sbb
fdivrs
mov
popl
cmp
test
dec
xchg
pop
int3
out
fidivrl
or
ret
outsb
cmp
inc
lea
loop
imul
mov
xchg
popa
sub
add
cwtl
fists
dec
fistpl
outsl
ret
mov
push
js
pop
cmp
cld
adc
ja
loop
inc
in
in
jb
lods
ret
test
mov
int
outsl
mov
lock
daa
jp
ljmp
fsts
lahf
cmpsb
insl
sti
xor
jae
cmp
mov
pop
add
daa
pop
rorl
loope
inc
xchg
andl
mov
andb
mull
cmp
add
mov
cld
mov
dec
jecxz
jg
mov
nop
lods
dec
mov
jmp
push
ficoms
sub
inc
es
add
in
xorl
jae
mov
add
clc
lods
push
push
jae
xor
mov
hlt
inc
cmp
lock
das
cwtl
ljmp
push
inc
test
insb
repnz
cmp
push
pusha
xor
pop
mov
out
jmp
inc
mov
fldcw
insb
dec
jo
and
mov
cwtl
pop
xlat
ljmp
int3
mov
mov
inc
push
inc
cmp
sbb
mov
sub
std
push
cltd
outsl
or
sub
push
push
mov
mov
movsb
dec
lcall
imul
jb
mov
sahf
loope
or
xchg
pop
aas
add
jne
and
inc
sbb
das
jns
jns
insl
and
ss
lret
mov
inc
ja
and
cltd
mov
mov
xchg
xor
loop
loopnew
sbbl
jns
add
pop
ds
xor
ret
lret
xlat
lret
xchg
shl
push
mov
ds
mov
jmp
sub
push
pop
cmp
xchg
xor
jmp
sti
cmpsl
cmp
popa
cmp
fsubrp
fwait
movsl
in
mov
mov
test
xchg
push
icebp
pop
adc
lock
push
rolb
pop
imul
divb
psrlw
jns
inc
std
mov
stos
fisttpll
cmc
out
leave
push
loope
add
decl
lock
sub
jp
ret
negl
testb
aaa
inc
adc
gs
into
hlt
inc
or
or
inc
cld
fdivr
enter
xor
xchg
insl
dec
test
in
scas
mov
xlat
int
sbb
sub
jne
ds
repz
push
add
sub
ljmp
push
movsb
arpl
mov
loop
jb
xor
adc
sub
stos
push
lods
xor
repz
cmpl
ret
sbb
andb
in
xchg
dec
ret
sub
push
insb
cmpb
sbb
fsubr
arpl
jns
and
ljmp
js
jne
cmp
mov
lahf
jae
dec
scas
cwtl
stos
ret
lea
mov
lds
outsl
int3
jl
push
sbb
xchg
jo
subb
scas
imul
popf
adc
cmpsl
add
lods
jns
pop
mov
stc
mov
push
test
or
dec
inc
test
lods
jl
inc
mov
cmc
cs
nop
and
sub
pop
pause
or
loopne
xlat
sti
jmp
fmuls
call
into
push
or
pop
inc
shll
into
adc
push
sbb
mov
imul
and
mov
xchg
push
cltd
mov
ret
mov
call
int3
jg
sub
adcb
dec
shl
xchg
call
jnp
cmp
lret
movsb
sub
movsb
mov
mov
sub
mov
icebp
in
pop
lods
jbe
jg
sbb
rcr
cmp
mov
mov
test
std
xor
add
nop
and
push
ret
xorl
mov
mov
jnp
in
fldpi
outsl
push
nop
adc
mov
sahf
push
bound
test
mov
adc
inc
push
xor
xchg
and
in
out
das
loopne
mov
cmpl
mov
aas
xor
repnz
mov
or
sbb
or
mov
mov
or
mov
add
sbb
push
movsb
aad
mov
leave
xchg
sub
jno
cmpsl
movsl
push
jno
or
sbb
sub
add
js
cmovns
push
mov
and
add
cmp
sub
sub
dec
pop
lret
nop
mov
js
cld
or
je
xchg
outsb
lcall
sti
mov
subl
shrl
mov
fdivrs
bound
mov
push
les
ss
idivb
xchg
push
sahf
mov
in
dec
in
and
or
fxch
popf
je
mov
aad
fiadds
xchg
xchg
inc
fdivr
nop
orl
jb
add
cli
in
sbb
xchg
mov
mov
and
push
enter
mov
sbb
pop
xchg
jle
lret
or
cmp
cmp
ss
push
rep
lea
xor
mov
gs
js
push
imul
push
insb
ljmp
and
cld
test
out
loope
arpl
lock
xchg
aaa
push
mov
adc
mov
adc
jmp
mov
cmpsb
mov
xchg
fwait
and
fstp
push
imul
dec
pop
fdivr
out
aas
adc
lahf
into
adc
mov
add
push
adc
and
push
aaa
and
loope
adc
cld
pop
sbb
ret
clc
mov
xlat
adc
pop
rcll
daa
out
loope
push
jmp
jp
shlb
fistl
testl
test
call
jns
imul
cmp
jno
xor
mov
pop
dec
dec
outsb
ret
andb
inc
or
push
sarb
stc
xor
movsb
jg
pop
mov
xchg
das
or
cltd
imul
or
sub
mov
or
repnz
or
mov
fimuls
and
ss
lahf
stc
out
adc
stc
repz
loop
add
sarb
lret
dec
repnz
insl
xchg
push
xor
pop
outsb
faddl
jnp
loopne
daa
push
mov
bound
and
roll
inc
mov
cmp
test
sub
sub
jbe
lds
repnz
das
nop
and
jecxz
sub
std
and
ljmp
in
xor
data16
push
mov
sub
int3
movsb
mov
or
push
cltd
jne
dec
and
cwtl
lcall
jbe
adc
out
xchg
clc
iret
xor
xor
push
ss
scas
loope
or
lret
jecxz
inc
or
mov
add
fndisi(8087
into
ljmp
js
sub
movsb
jnp
test
pop
sub
cmp
subb
mov
push
mov
je
xchg
shll
xchg
xchg
or
cmp
in
dec
test
sub
mov
dec
shlb
fisttps
adc
loope
adcl
or
repnz
mov
out
lods
dec
push
ds
fildll
jns
cwtl
pop
mov
or
ret
xchg
add
inc
es
and
add
inc
xchg
mov
push
push
push
xor
fcoms
lret
fdivrl
fsub
or
sti
pop
fcompl
fcoms
jne
imul
out
sti
out
pop
push
xor
in
int
sub
cwtl
mov
hlt
insb
pushf
cmp
shl
test
dec
dec
xor
xorl
jnp
sub
cmpsl
mov
jmp
iret
sub
push
xor
sub
lods
test
sub
mov
mov
or
sar
arpl
push
xchg
add
dec
jae
jle
xchg
out
inc
dec
arpl
repnz
std
cmp
push
es
jne
lods
popa
test
mov
or
dec
inc
cmc
push
rol
and
mov
shlb
cmpsb
sbb
mov
jo
mov
jns
daa
cltd
repz
decb
aas
adc
inc
ret
mov
jno
jo
subl
pusha
mov
sub
jp
rcrl
aad
add
inc
cs
cmp
pop
jnp
lret
push
and
sub
dec
or
xor
pop
imul
lret
repnz
push
leave
sub
shll
xchg
ljmp
sub
lds
xor
aam
push
scas
mov
into
or
and
sbb
fdivrs
dec
les
lods
mov
push
gs
push
and
and
mov
and
lea
insb
scas
jnp
pop
test
xlat
mov
mov
push
pop
adc
stos
pop
stos
dec
bound
jp
jecxz
push
inc
cmpl
jg
or
pusha
nop
or
mov
int3
shlb
sub
outsl
js
jmp
sbb
inc
je
test
xchg
lds
cli
int
mov
and
pop
sub
insl
into
aaa
loope
mov
insl
aad
sahf
mov
cld
pop
cmc
add
ret
mov
subb
push
jg
das
push
mov
out
xchg
xchg
xchg
xchg
rcrl
sbb
ffreep
cmp
push
xor
out
lcall
ja
pop
push
pop
call
sbb
pushf
jbe
push
cmp
shrb
movsl
scas
lahf
pop
fsubrs
mov
inc
pop
push
int3
sub
sbb
mov
sbb
mov
pop
mov
aas
jge
aas
or
mov
lret
dec
test
iret
out
outsl
sbb
cwtl
lcall
hlt
imul
sbb
cli
jecxz
ret
out
jne
ja
sbb
adc
in
adc
je
mov
out
icebp
inc
mov
mov
xor
pop
dec
out
xor
jecxz
addl
mov
movsb
cmp
ja
das
cwtl
and
sar
inc
dec
fsubrs
push
addb
jp
subl
adc
push
enter
data16
lds
inc
sbb
sbb
mov
ret
push
in
and
int
aas
xor
xchg
and
add
outsl
gs
add
pop
pop
mov
and
cwtl
mov
dec
scas
xchg
jne
xor
in
sbb
dec
push
popa
jb
push
sub
enter
stc
loopne
pop
jae
lock
lds
adcb
fsubl
aam
aad
pop
int
jno
lea
xlat
leave
lahf
enter
xor
jne
arpl
in
sti
pusha
in
cmp
push
mov
aas
dec
movsb
lds
fldcw
inc
outsl
adc
lcall
es
std
das
lods
sbb
popl
jae
fs
mov
aaa
roll
test
mov
hlt
and
or
or
and
sti
jecxz
popa
test
mov
mov
add
cmp
mov
push
adc
mov
dec
call
fcomps
pop
shrl
outsl
jb
daa
rolb
int3
inc
push
ds
insl
cmp
cmp
dec
mov
mov
and
iret
clc
xor
xor
cmpsl
lret
out
mov
and
pop
ds
repnz
xchg
xadd
push
movsl
dec
addl
stos
lea
sub
fmuls
into
mov
cmp
bound
cmp
out
scas
adc
insb
xchg
out
pop
adc
bound
add
xchg
dec
mov
in
inc
dec
lods
xchg
addb
add
mov
mov
ds
adc
jns
test
ds
insl
pusha
sbb
andb
dec
sbb
int
push
push
xchg
mov
lods
jmp
cld
scas
mov
dec
insl
inc
daa
and
add
ds
lahf
adc
roll
movsb
in
and
shr
filds
dec
inc
cwtl
enter
add
sbb
mov
pop
pop
push
out
lahf
pop
dec
icebp
mov
and
pop
shll
adc
and
sub
addr16
mov
movsl
popf
xchg
pop
aad
call
mov
scas
inc
mov
mov
cmp
and
xchg
dec
push
aas
test
iret
pop
add
adc
sbb
pop
inc
loopne
loopne
arpl
lret
xor
into
xor
xor
adc
scas
push
inc
mov
das
and
hlt
pop
call
inc
ret
xchg
imul
dec
fs
inc
push
adc
push
sahf
xchg
pop
lret
icebp
mov
push
jo
cmc
aam
arpl
ds
and
fisttpll
dec
push
push
jnp
jge
sbb
imul
loope
aaa
pop
int
adc
loopne
xchg
enter
jecxz
daa
cmp
dec
lods
insl
wbinvd
rcr
pop
inc
fisttpll
lods
sarl
xor
cmp
and
xlat
jae
and
mov
mov
pop
fs
sub
xchg
sub
push
push
mov
scas
arpl
mov
divl
lea
imul
jbe
lahf
inc
or
das
pusha
sbb
and
in
xor
or
rolb
cwtl
pushf
jns
or
addr16
lahf
scas
loopne
sub
push
add
and
sbb
dec
mov
lahf
jae
jae
cmp
lea
mov
cmp
push
arpl
xchg
xchg
outsl
xchg
jg
and
das
movsb
rcrb
xor
sbb
sahf
jle
cld
lock
insl
call
cmp
into
inc
cltd
out
in
ljmp
adc
gs
nop
dec
adcb
xor
mov
cli
mov
push
adc
or
jno
inc
add
lahf
insb
mov
jbe
mov
sbb
adc
enter
push
push
push
lods
xchg
or
push
sub
lods
dec
jmp
scas
pop
out
gs
adcl
insl
adc
stc
push
shlb
popa
mov
nop
inc
aam
adc
lods
inc
insb
jg
jp
stos
mov
push
sbb
xchg
xchg
rclb
cmp
aad
cld
movsl
lock
or
adc
xor
movsl
test
mov
mov
jo
xor
repz
ret
add
sbb
pusha
ss
sbb
je
cmp
ret
xor
stos
neg
and
stos
sarb
js
mov
adc
jno
repnz
ret
out
adc
fisttpll
sarl
std
sarl
mov
and
dec
stc
sub
dec
xor
mov
sub
dec
fs
lock
fucomi
movsb
cwtl
jle
fs
push
outsb
fadd
sar
push
cmp
dec
jle
stc
data16
pop
cwtl
xor
js
xchg
stos
data16
pop
dec
mov
mov
jmp
ret
out
push
mov
jb
inc
push
mov
jns
and
or
inc
cmc
fldcw
mov
add
int
and
mov
mov
jl
add
inc
mov
jp
xchg
cmp
inc
subl
daa
hlt
lock
iret
in
add
hlt
sbb
xchg
mov
jmp
sub
mov
lcall
sarl
or
fs
pushf
out
enter
mov
cmp
mov
mov
sub
fwait
and
loope
adc
fisttps
cmovp
daa
fsubs
das
arpl
mov
mov
iret
repz
pop
fmulp
ja
clc
xor
xchg
sub
cld
nop
subb
cmpsl
fadds
scas
mov
sub
gs
mov
and
xchg
xchg
sub
je
mov
jecxz
add
lods
xchg
dec
sub
cltd
stos
movsb
mov
fdivrl
lahf
pushf
adc
push
add
and
lods
sub
out
call
jmp
inc
or
cmp
pop
xchg
or
fisubrl
fistps
jo
xchg
jg
cmp
stos
scas
stc
rolb
sub
pop
inc
ret
das
mov
addb
pop
mov
scas
cmpsl
jl
pop
popf
aam
mov
out
test
cmp
xchg
aaa
mov
cmp
sbb
xchg
inc
int3
push
jns
xchg
mov
jns
pop
mov
xchg
pop
scas
lret
shlb
push
lods
adc
dec
and
or
mov
pop
pop
lret
test
xchg
or
adc
out
push
cmp
jnp
out
outsl
mov
movsb
out
and
hlt
js
hlt
popa
or
je
data16
clc
leave
inc
iret
mov
ss
ret
xchg
or
and
outsb
scas
scas
pop
jno
ds
sbb
lods
in
out
lret
push
add
js
lahf
lret
movsl
popa
int
sbb
dec
cli
push
sbb
pop
jmp
nop
push
shll
inc
aam
fld
mov
sbb
in
pop
nop
mov
loopne
cmpl
pop
dec
push
mov
cmp
lock
mov
and
xchg
hlt
cmp
cmp
pop
push
arpl
inc
add
and
test
push
or
pop
dec
mov
dec
mov
xor
lea
mov
and
xchg
lock
adc
cmp
add
mov
aas
insb
lret
js
enter
call
testb
adc
mov
stc
pop
leave
into
mov
aaa
test
in
inc
or
aam
jno
rolb
mov
shll
popa
js
fdivs
inc
push
xchg
popfw
adc
and
push
nop
or
fnsave
pop
imul
mov
shll
inc
jns
jle
mov
insb
hlt
jmp
mov
cs
std
in
xor
ljmp
cltd
ficompl
cmp
xor
adc
add
and
out
cmp
divps
enter
mov
fcmove
mov
loope
xor
jae
aas
jecxz
popa
cmp
mov
jne
mov
and
mov
imul
pop
push
fisttps
cmpsb
mov
pop
jns
mov
inc
jle
adc
cmp
xor
aad
mov
movsl
mov
jbe
repz
je
push
pop
pushf
icebp
push
jmp
fcomps
mov
inc
mov
sbb
aam
lea
push
lea
mov
mov
pop
nop
std
mov
notl
dec
sbb
fiadds
out
fstps
sub
or
test
inc
outsb
outsl
aas
adc
xchg
in
or
cmpsb
lods
mov
pop
sub
out
inc
stos
xchg
dec
sub
mov
arpl
test
dec
insb
sbb
or
fwait
pop
xchg
filds
dec
jl
je
imul
dec
insb
les
repnz
mov
push
and
jb
sbb
adc
mov
data16
sbb
sbb
sub
loopne
out
scas
jl
fiadds
mov
lea
push
push
xchg
out
gs
mov
into
and
mov
ret
insl
jmp
leave
idivl
and
mov
movsb
test
cli
mov
lock
add
std
push
movsl
jge
inc
pop
mov
mov
pushw
dec
lret
mov
and
jp
mov
dec
mov
bnd
cmpsl
mov
push
cmpsb
pop
das
into
xchg
add
sbb
ret
inc
mov
rorb
in
mov
rcl
in
movsb
scas
xchg
pop
jnp
andb
in
mov
outsl
lods
in
jecxz
xchg
decb
faddp
lea
loopne
sbb
push
je
cmpsb
pop
mov
data16
mov
xchg
cmp
or
movsb
idivb
push
jne
in
jae
push
mov
dec
cld
xchg
aaa
pop
jl
and
xor
cmp
loopne
in
sub
std
clc
sbb
ljmp
sub
cwtl
pusha
and
pop
pop
lret
mov
pop
cmp
mov
lret
rcrb
rorb
rclb
xor
and
je
push
sbb
ficoms
sbb
xor
das
push
sbb
push
cmp
and
mov
mov
jno
mov
pop
jbe
sub
push
popa
or
adc
lea
pop
pop
in
mov
mov
fnsave
xchg
mov
aas
es
sub
xchg
std
xorb
lret
popa
ss
pop
inc
popa
pop
pop
push
mov
leave
dec
sub
loope
cmp
enter
pop
ret
out
jge
sub
jecxz
or
shrb
and
insb
in
mov
add
xchg
movsl
adc
jnp
repnz
int3
mov
lock
pop
fidivl
push
dec
adc
data16
enter
push
add
or
push
sub
cmpsl
sbbb
cmp
jle
aam
cli
pop
jge
orb
pop
and
stos
sub
scas
xchg
adc
stos
pop
and
scas
test
daa
adc
test
inc
mov
fwait
adc
cmp
mov
mov
test
push
cmp
push
push
push
imul
and
or
je
or
jno
mov
xchg
push
nop
fcomi
xlat
xor
mov
cmc
push
xchg
int3
push
data16
push
mov
mov
sti
and
jmp
and
outsl
sbb
imul
ja
ret
mov
pop
cltd
out
xor
mov
out
cmc
adcb
cmp
and
inc
xor
mov
out
test
and
jecxz
xchg
mov
stos
test
push
mov
shll
mov
lret
inc
les
jne
out
das
pop
into
dec
adc
dec
and
inc
mov
xchg
and
xchg
xor
ret
adc
xor
dec
scas
dec
lahf
aad
pop
pop
repz
mov
or
or
fsubrl
pusha
pop
or
pop
test
lret
xor
or
and
and
push
dec
inc
add
mov
ret
lret
adc
sub
movsl
sar
inc
addr16
lcall
movsl
fwait
pop
stc
fwait
mov
pop
out
pop
je
jp
js
sbb
loop
push
and
hlt
pop
fcoml
fs
int3
arpl
das
jl
roll
mov
lock
xchg
add
push
push
dec
or
and
mov
adc
imul
lcall
sbb
cmpsb
push
xchg
out
jno
sbb
fsubrs
out
leave
movsb
or
mov
repz
xchg
addb
lods
sbb
rorl
outsb
push
push
lret
outsb
repnz
push
sahf
loope
lock
or
repz
jmp
add
or
jg
shrb
pop
out
incl
in
sarb
xor
mov
push
cmp
in
int3
js
add
jp
aaa
inc
pop
aam
xchg
stos
dec
mov
sub
iret
mov
jns
enter
dec
xchg
add
mov
aaa
inc
and
inc
mov
loop
mov
inc
and
cmp
jecxz
pop
xor
or
mov
fnstsw
negl
and
jae
lea
in
add
movsb
mov
pop
jns
push
xchg
inc
dec
mov
jmp
xchg
aam
out
xor
sub
pop
lcall
mov
decb
mov
pop
out
call
pop
jmp
cmp
cmp
ret
pushf
icebp
cmpb
sub
cmp
xchg
pusha
mov
xchg
push
push
pop
pop
push
adc
sbb
jl
movsl
sub
dec
iret
outsl
les
clc
or
fists
adc
mov
fnstenv
and
dec
inc
or
lock
jl
cld
sbb
shl
fs
sbb
jmp
repnz
insl
add
fsts
dec
fnstsw
addb
mov
ja
addr16
pop
loop
stos
je
xchg
xchg
cltd
mov
int
add
xor
pop
cmp
or
xchg
addr16
push
leave
andl
lods
mov
xchg
addl
insb
mov
je
call
cmp
ret
or
mov
add
jge
and
jne
outsb
or
mov
pop
lods
jmp
dec
fwait
mov
inc
inc
sahf
ss
pop
icebp
sbb
or
sahf
pop
sbb
jl
cli
insl
fbld
add
mov
stc
leave
leave
scas
popa
xor
jmp
daa
repz
pop
mov
sbb
xor
inc
add
xchg
dec
out
int
mov
jbe
int
mov
fwait
sub
xor
mov
repz
and
hlt
mov
and
imul
sub
fsubrs
in
stos
in
adc
js
sub
mov
movsb
mov
xchg
inc
xor
aas
pop
sub
daa
sub
cmp
push
cmp
aas
ljmp
sub
lahf
or
aaa
movl
popf
xchg
dec
dec
add
xchg
stos
sbb
outsl
mov
in
inc
xchg
icebp
xchg
incb
push
push
sub
pop
xor
xor
stos
jns
cs
mov
push
pop
movsl
push
jl
mov
and
jle
xor
mov
aad
mov
rcl
dec
lods
ror
and
bound
dec
jno
and
popf
stos
adcb
or
jb
fsubrs
and
xor
ljmp
jecxz
xchg
pop
jbe
lods
add
inc
jbe
mov
or
sub
xlat
pusha
loopne
dec
xlat
inc
mov
mov
orb
cmp
pusha
and
std
and
mov
stc
daa
fdivs
push
outsb
sub
add
flds
or
mov
ss
or
xchg
cmpsb
or
out
mov
test
cmp
imul
aaa
inc
mov
loope
sub
and
js
add
andb
cmp
xlat
popl
pmulhw
loope
push
lods
mov
jae
jle
into
pop
adc
add
dec
sbb
sbb
test
xchg
jnp
fidivl
popa
mov
in
mov
ret
mov
push
sahf
inc
or
xchg
outsb
fsts
mov
or
das
cmpsb
lea
rolb
pop
lea
xlat
and
shrl
stc
in
ja
push
subl
mov
mov
sbb
in
out
mov
call
lcall
mov
rcr
push
fistl
add
ja
xchg
jle
aam
inc
sub
dec
mov
test
xor
sbb
cmc
mov
das
negl
xchg
imul
sub
popf
adc
xor
xor
and
mov
std
jmp
pusha
aam
mov
and
flds
push
and
sti
or
ret
in
pop
push
out
lret
add
roll
jle
jl
sarl
test
mov
movsb
cld
inc
mov
movsb
adc
hlt
nop
imul
mov
mov
cmpsl
xchg
sub
pop
ret
add
sbb
cmp
dec
andb
jbe
pop
xchg
mov
mov
inc
fs
push
add
aam
xor
xor
fwait
push
mov
push
arpl
cmc
adc
lds
xchg
add
mov
jb
sbb
pushf
jp
push
into
mov
add
pusha
enter
ja
add
sub
clc
lds
adc
js
insl
inc
sub
inc
ret
push
shll
mov
sub
ret
jl
or
mov
sbb
arpl
pop
xor
imul
lret
mov
ljmp
xor
in
fwait
push
dec
jno
add
clc
sub
xchg
out
push
into
cmp
cmp
xchg
mov
pop
push
lds
dec
mov
mov
movsb
aad
out
incb
out
push
xchg
pop
mov
sti
sbb
adc
jb
cli
mov
dec
std
and
inc
sahf
or
dec
loopne
ficomps
into
pop
or
xor
pop
sub
xor
dec
dec
push
mov
dec
sbb
xchg
xchg
out
cmp
sub
xchg
clc
cmp
xlat
in
jg
or
push
into
or
dec
daa
xlat
xor
add
jge
add
mov
lods
gs
mov
xchg
cmp
xchg
pop
jnp
xor
or
stos
push
xor
mov
inc
cmp
jl
and
push
mov
shl
add
pushf
shlb
sbb
fwait
cmp
dec
shl
xchg
scas
mov
sbb
movsl
xchg
mov
insb
cltd
rcl
dec
je
pop
or
mov
push
mov
rcrl
popf
in
push
ret
dec
mov
add
mov
mov
jg
outsl
cltd
mov
inc
pop
rcll
sti
mov
adc
test
cmp
ja
popa
mov
dec
lods
dec
pop
ficoml
jecxz
js
es
add
inc
pusha
fs
mov
