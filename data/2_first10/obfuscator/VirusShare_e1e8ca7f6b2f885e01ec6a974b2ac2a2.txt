movl
push
lea
je
stc
bt
cmc
sub
test
bt
jno
test
cmp
jmp
push
call
and
pop
call
pushf
pushf
sub
push
clc
pushf
xor
mov
clc
stc
ror
clc
push
pushw
popfw
mov
inc
push
call
mov
cmp
xchg
mov
mov
daa
mov
jnp
push
fsubl
packsswb
lahf
mov
mov
push
inc
gs
fmuls
out
add
sbbb
inc
insb
cmp
pusha
mov
push
lea
jae
cmc
pusha
cmp
jmp
pusha
lea
call
pushf
pusha
lea
jae
not
pushf
jmp
sub
pop
insl
xchg
mov
xchg
vmptrst
ja
test
pop
xchg
or
jnp
mov
jo
lret
fcomps
in
mov
sbb
mov
out
xchg
xor
mov
or
add
imul
jae
stc
push
xchg
stc
neg
mov
clc
pushf
pushf
stc
sub
call
push
push
lea
je
cmc
test
push
cmc
cmp
push
call
add
jae
jb
arpl
add
sub
add
cld
clc
push
lea
jae
stc
xor
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
cmp
add
jmp
jmp
ja
push
imul
call
pop
push
push
cltd
jno
arpl
aad
push
pop
inc
adc
nop
movsb
popf
push
pop
dec
push
xor
dec
xchg
gs
cltd
inc
and
sbb
push
mov
dec
dec
in
clc
test
cltd
mov
adc
popa
mov
mov
enter
sub
push
jl
ja
ljmp
adc
fldenv
or
pushf
sub
pop
add
fisttpl
push
inc
in
aam
icebp
sub
adc
mov
and
mov
dec
dec
xor
je
mov
call
daa
cmp
fnstcw
je
sbb
popa
popa
iret
pop
es
ret
addl
sahf
sti
mov
adc
addr16
push
lret
test
xlat
sub
xor
pop
sbb
sahf
aam
pushf
xchg
inc
adc
mov
mov
rclb
enter
sbb
lds
fmul
call
pop
push
les
cld
nop
mov
pop
pop
iret
push
lret
pop
fcmovnbe
mov
sahf
xchg
sti
out
inc
mov
in
mov
sbb
idivl
test
les
adcl
sbb
dec
aaa
xchg
daa
cmp
sbb
les
sub
test
mov
dec
sub
mov
out
jmp
xchg
flds
ror
pop
fs
cmp
inc
mov
ret
cmpsl
cmp
cmpsl
sahf
cwtl
xor
sbb
shrl
loopne
mov
mov
mov
pop
mov
enter
cld
jae
clc
sub
push
cmp
xor
push
enter
inc
xchg
mov
loop
lcall
cwtl
int3
push
mov
adc
fwait
add
push
dec
pop
js
shl
decb
nop
mov
mov
inc
jne
imul
scas
xor
mov
mov
mov
mov
or
inc
ds
mov
out
xor
cmpsl
leave
out
test
cltd
popa
jmp
mull
xchg
mov
lcall
push
pop
leave
mov
fucomi
add
inc
pop
mov
arpl
pushf
xor
stc
pushf
shr
add
bt
cmc
jmp
add
push
imul
jb
imul
dec
popa
outsb
fs
gs
add
add
je
outsl
fs
gs
imul
add
int
not
mov
mov
movsbl
lea
jno
pop
pusha
pushf
push
pushf
pushl
ret
push
adc
jmp
pushf
mov
add
mov
sbb
cpuid
sbb
add
sbb
stos
sbb
sbb
add
imul
pop
jno
add
mov
sbb
leave
lods
sbb
in
imul
push
popf
sbb
jo
sbb
gs
add
lahf
sbb
push
test
add
sbb
and
add
sbb
add
sbb
aam
sbb
lcall
add
popf
sbb
xor
sbb
inc
mov
add
sbb
add
add
outsl
popf
sbb
and
sbb
add
mov
sbb
shrb
add
inc
sbb
lods
mov
add
scas
sbb
sub
add
sbb
xchg
mov
sbb
or
sbb
mov
sbb
push
sbb
mov
test
add
mov
sbb
dec
outsb
sbb
in
sbb
xor
add
mov
sbb
das
pushf
sbb
pushl
add
popf
sbb
std
fwait
sbb
add
add
add
add
addb
add
cmc
jo
add
add
or
add
jae
add
push
add
addb
add
push
outsb
sbb
push
cmp
add
sbb
movsb
cmpsl
sbb
sbb
mov
sbb
mov
aaa
sbb
push
xor
add
test
add
test
add
mov
add
pop
mov
sbb
jno
sbb
sbb
sbb
add
add
cmp
sbb
add
add
add
pop
gs
je
lea
call
jmp
add
inc
outsl
outsb
je
outsl
insb
push
gs
imul
add
add
inc
insb
insb
outsl
arpl
gs
jae
jb
push
popa
insb
push
popa
addr16
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
call
pusha
movl
adc
pusha
pushf
lea
jmp
stos
push
lea
jmp
pushf
pushf
mov
lea
je
clc
push
cmp
pushf
mov
push
pusha
lea
je
clc
cmp
push
push
pushf
lea
je
push
pushf
push
push
lea
jmp
add
push
gs
gs
imul
jne
add
rol
scas
bswap
jmp
push
call
aam
add
pusha
pushf
pushf
lea
jmp
in
add
mov
pop
dec
cld
je
jmp
mov
or
dec
rcrl
sub
lock
scas
dec
insl
lods
scas
mov
insb
jge
sub
lods
xlat
popf
mov
cmpsl
mov
neg
sub
cmp
lods
out
stos
jmp
stc
mov
cmp
lret
mov
sub
cmp
jns
dec
repz
sub
stos
shr
mov
jg
loop
pop
out
or
hlt
pop
sarb
rcrl
inc
movsl
std
je
inc
push
in
mov
cmpsb
icebp
xor
add
or
adc
and
movsb
mov
cmp
rcrl
push
mov
mov
je
add
add
mov
or
pop
push
loop
shrl
out
aaa
int
lods
addr16
inc
mov
mov
lret
loop
dec
sub
adc
int
sahf
fisttps
push
outsl
and
or
sub
insl
mov
rcrb
hlt
pop
cmc
mov
xchg
mov
cmpsl
loope
adc
aad
pushf
stc
or
outsl
and
and
sub
insl
add
or
xor
movsb
sbb
jnp
push
or
pop
lcall
leave
xchg
inc
daa
jmp
or
mov
adc
add
add
push
jne
jb
push
gs
imul
imul
jae
jb
imul
sub
jmp
push
call
fsts
jb
pusha
pushf
push
pushl
ret
pushf
scas
sub
dec
movsb
fcoml
aas
cmp
ljmp
lahf
mov
in
xchg
xchg
lds
lods
movsb
xor
shrl
jp
cmpsb
xor
push
into
or
sub
push
call
negb
js
jecxz
adc
ljmp
xchg
jmp
pop
repnz
jge
xchg
cmp
or
jmp
add
pop
popa
fs
jae
pop
imul
push
add
dec
incl
add
jb
push
add
movzwl
add
bsf
adc
bts
mov
pushf
push
clc
movb
add
push
mov
cmp
pushf
clc
test
pushf
pusha
movb
call
inc
pushf
pushf
adc
lea
push
call
pusha
pushl
ret
push
call
or
sub
jmp
clc
pusha
push
ror
bt
stc
cmc
shr
jmp
jmp
pushf
call
push
push
lea
jae
pusha
xor
call
push
lea
call
push
pusha
jmp
mov
cmc
or
pusha
pushl
lea
jg
je
bsf
mov
sar
seta
rcl
btr
mov
clc
cmc
call
movb
test
pushf
pushf
lea
je
push
push
sub
stc
pusha
call
adc
pushf
pusha
pushf
pushl
ret
bt
movb
cmp
pushl
lea
ja
bt
imul
push
clc
test
stc
add
movl
pushl
movb
lea
jmp
jmp
and
pop
xchg
mov
rorl
movsl
pop
push
push
or
inc
jbe
dec
scas
jne
cmp
outsb
adc
cltd
inc
push
popf
xchg
jle
sahf
mov
sbb
pop
sub
add
xchg
stc
lods
adc
dec
mov
in
pop
sbb
add
mov
aam
test
fdiv
fnsave
push
sub
insl
lea
mov
fistl
pop
dec
aaa
jle
jge
sub
scas
rcrb
fildl
mov
mov
fisubrl
sub
mov
sbb
fmul
sti
into
lret
jae
xchg
fcomps
arpl
dec
int
mov
and
ret
sub
outsl
loopne
and
mov
aaa
shlb
xchg
js
mov
xchg
mov
ss
xchg
mov
repnz
in
xchg
cmp
lods
lahf
loopne
pop
ss
mov
xchg
mov
mov
loop
xchg
lret
in
xchg
mov
cmp
notl
mov
test
inc
out
int3
sbb
into
xchg
mov
inc
sti
push
fwait
subl
fisttpl
push
cmp
jns
cmp
scas
inc
pop
testb
dec
fcomi
push
xor
popa
xchg
mov
cmpb
je
sub
xchg
fidivl
sub
mov
mov
xor
fistl
mov
stos
push
mov
insl
add
sbb
scas
cmpsb
outsl
sbb
xor
iret
testl
inc
cmp
shll
inc
cld
mov
cli
or
sub
xchg
js
jns
jno
mov
je
sub
test
sub
fdiv
or
shrl
imulb
scas
mov
mov
mov
leave
push
pushf
pusha
lea
jmp
clc
mov
bt
mov
cmc
pushf
clc
sub
push
rep
bswap
pushl
mov
movb
pusha
push
lea
jmp
clc
test
push
stc
add
pusha
pushf
pushf
lea
jne
jp
push
setae
push
pushfw
popw
push
sar
mov
shl
mov
stc
not
pusha
movb
cmc
sub
bt
bt
bt
xor
pushf
ror
cmc
test
pushl
pushw
popfw
mov
push
jmp
push
call
or
aas
push
call
push
xor
jmp
call
add
dec
gs
popa
addr16
outsl
js
add
add
imul
push
call
sub
rorl
add
neg
and
adc
mov
push
test
pusha
bt
cmpb
pushf
pushl
jmp
push
movb
mov
pusha
mov
lea
jmp
sub
arpl
jle
sbb
movsl
lds
mov
lret
cmpsb
xor
xchg
wbinvd
add
aaa
outsb
in
sbb
js
lahf
or
push
imul
cwtl
adc
jne
pop
fcoms
stos
push
mov
pop
sub
aaa
mov
sub
mov
lea
push
jge
pusha
inc
mov
or
push
rcr
bound
test
lock
and
and
or
mov
scas
ret
mov
imull
push
xor
pop
mov
lret
dec
stos
mov
sub
sub
xchg
or
and
outsb
cmpsl
out
aaa
jge
ficomps
mov
das
cmpb
dec
xchg
and
dec
ficoms
shl
adc
clc
xchg
ljmp
dec
imulb
mov
push
in
call
fs
push
int
leave
jo
mov
test
arpl
mov
cmp
test
xchg
scas
dec
dec
pop
sub
mov
cmpsl
rcll
lock
dec
mov
jg
mov
lds
pop
lea
or
into
repz
pop
fstp
inc
cmpb
xchg
sub
adc
push
jns
xlat
sahf
cld
stc
mov
add
aam
pop
lock
sbbb
push
out
call
lea
call
push
pushf
push
lea
jmp
add
pop
arpl
je
outsl
insb
data16
clc
bt
cmp
call
push
lea
jae
stc
pusha
cmp
pushf
jmp
pushf
pushf
adc
pushl
push
lea
call
push
lea
jge
jb
pusha
mov
push
pushf
pushl
ret
push
call
xor
xchg
mov
insl
arpl
dec
ret
jb
es
test
jnp
test
xchg
loope
adc
stc
push
lret
repnz
aam
cmp
ds
push
jae
mov
inc
fsubrs
jb
fs
scas
mov
mov
add
call
cwtl
stc
cmp
push
sbb
add
adc
or
push
test
mulb
stc
sti
pop
dec
push
popa
cmp
imul
push
cmp
sub
and
xor
pop
movsb
cmp
jmp
leave
fstps
call
xor
out
pusha
and
jge
test
xor
push
xchg
pop
mov
aaa
xchg
xchg
sub
aas
imul
fnsave
xor
jge
sub
push
jae
mov
sar
daa
cmp
enter
or
mov
insb
cmp
sbb
dec
sbb
jns
ds
mov
addr16
mov
mov
jp
mov
dec
sub
xor
int
push
dec
pop
imul
jge
imul
jnp
sar
xchg
xor
js
inc
test
xchg
push
mov
pop
cltd
movsb
mov
add
cwtl
pushf
nop
pop
inc
mov
sub
cmc
jbe
pusha
movsl
adc
jno
mov
push
pop
jbe
lea
pop
es
add
inc
pop
jge
mov
lret
jns
stos
test
xor
adc
test
dec
fldt
xchg
inc
pop
mov
das
cmpsl
cwtl
push
lods
mov
adc
rorb
ljmp
pop
fcompp
cmc
or
mov
sbb
sbb
pop
cmp
fldenv
test
sbb
cmc
imul
push
push
cmp
fcmovne
dec
rcrb
call
mov
lods
aam
test
inc
sbb
mov
inc
jnp
xchg
mov
lods
cmp
scas
popa
nop
or
jp
sub
imul
cmp
jmp
jno
xchg
sbbl
cmp
push
in
mov
popa
fdivl
dec
imul
cmp
lahf
sbb
dec
sub
cwtl
push
push
add
sti
jl
cmp
fcomi
iret
cmp
loope
add
sub
xchg
mov
xchg
faddl
xor
mov
sub
repnz
mov
stos
jmp
movsb
lret
sub
imul
call
sbb
cmp
pop
adc
and
push
or
xchg
inc
rcl
cmp
push
xor
std
inc
cltd
aad
xor
flds
cmpb
push
cmp
mov
movsl
filds
xor
stc
jns
mov
loope
xor
aam
push
sbb
leave
cmc
pop
adc
gs
mov
pop
dec
pop
mov
cwtl
lock
pusha
pop
lcall
cltd
dec
dec
push
push
mov
cld
roll
cmp
nop
aaa
cmpsl
dec
dec
xchg
sbb
cmp
lods
jo
je
push
dec
pop
addr16
mov
cld
nop
sti
cltd
fwait
mov
mov
jmp
xor
sub
pop
icebp
add
and
dec
popa
push
pop
cmp
bound
cltd
fimuls
mov
mov
mov
dec
mov
jecxz
push
pushf
loop
shlb
jmp
mov
dec
hlt
out
adc
jne
aad
es
xchg
call
test
inc
cmp
lods
dec
loope
cwtl
push
outsb
pop
lods
mov
push
pextrw
jns
xchg
cmp
dec
iret
scas
das
mov
dec
scas
repnz
dec
lods
adc
stos
xor
je
ljmp
inc
jne
loop
aaa
or
jg
in
mov
push
pop
push
cwtl
xchg
js
mov
fdivrl
js
adc
cmp
fyl2xp1
jns
mov
mov
mov
mov
mov
popa
xchg
inc
addr16
push
push
mov
xor
pop
aaa
fildl
xor
sub
xor
lea
xchg
cmc
mov
imul
add
inc
inc
xchg
cwtl
das
add
or
xchg
pop
push
add
pushf
sub
mov
xor
push
xor
iret
mov
arpl
add
cwtl
xchg
and
fcmovne
ja
stc
add
jne
fcoml
imul
repnz
xchg
pushf
push
mov
scas
mov
pop
sub
cltd
rorl
ss
mov
cs
mov
sub
push
adc
or
lods
imul
movsb
jnp
xor
mov
in
mov
and
test
loopne
movsb
rcr
icebp
or
fs
rcll
add
fnstsw
push
xchg
pusha
addl
aam
mov
cltd
mov
divl
cltd
test
mov
xchg
pushfw
rorb
shl
or
int
shlb
sti
mov
arpl
cli
pop
push
pop
adc
neg
js
mov
popa
filds
cmpsl
cmpsb
inc
jl
into
imul
cmp
push
les
cmp
int3
push
fnstenv
pushf
cmp
mov
cmp
mov
push
sub
dec
cs
mov
insl
pop
imul
inc
imul
cwtl
adc
ss
and
xchg
xor
push
push
add
test
jmp
dec
loope
mull
sub
jnp
cmp
sub
out
push
movsb
popa
bound
dec
mov
into
pushf
rcl
sub
mov
cmp
mov
fwait
cwtl
dec
jno
das
cwtl
and
nop
iret
dec
mov
xor
inc
in
adc
mov
push
scas
andb
dec
dec
jo
mov
imul
bound
xor
test
sahf
or
mov
lock
dec
sti
fsubrs
mov
bound
xor
dec
cmpsb
or
mov
push
xor
mov
insb
scas
xchg
pusha
pop
mov
aaa
sti
fnstenv
imul
push
mov
loope
pop
mov
insl
cmpsl
xor
and
mov
std
icebp
mov
sbb
rcll
pop
imul
in
and
jo
push
mov
push
push
xor
test
popa
fidivrl
push
xor
jb
in
sub
fs
fwait
lock
inc
mov
sub
aaa
xor
loopne
cmp
jmp
fsts
daa
jmp
mov
cmp
add
push
stc
int
or
mov
call
cmp
xchg
xor
xchg
pushf
das
push
insl
fmull
test
sarb
mov
dec
mov
js
iret
lcall
mov
cmpsb
pop
pop
mov
dec
dec
fstps
and
bound
mov
das
pop
ss
test
mov
jge
or
addr16
shll
rcl
and
stos
adcl
popf
sub
dec
xchg
scas
test
mov
ret
jno
push
add
cmp
cmp
add
adc
add
dec
push
cltd
sbb
fidivl
push
mov
lret
mov
jno
mov
jmp
mov
fidivs
jo
pop
jbe
pop
push
lods
out
cmp
pop
cmpb
das
pusha
jmp
loope
xor
cwtl
lods
pop
adc
push
add
sbbl
mov
or
sarl
bound
sbb
nop
mov
sub
add
loopne
dec
jge
xchg
insl
xor
cltd
fs
xchg
call
aas
dec
pop
xchg
inc
jp
inc
push
cmp
xchg
out
xlat
negl
aam
add
inc
cwtl
cld
mov
sbb
dec
jns
arpl
fstpl
mov
jle
lods
test
mov
xchg
xchg
xlat
xchg
das
mov
xchg
lods
xor
dec
and
or
stos
jge
stc
mov
sbb
push
aaa
cmpb
fldcw
iret
pusha
dec
inc
sbb
jecxz
mov
mov
repnz
jns
pusha
cltd
pop
cltd
imul
faddl
movsl
dec
dec
push
xchg
mov
push
hlt
pop
jnp
pop
add
dec
aaa
mov
push
pop
inc
cmp
cmpsl
mov
cmp
call
lods
sbb
cmpsl
test
mov
jl
clc
enter
aam
mov
mov
xchg
or
sbb
xchg
pop
inc
mov
xlat
mov
xor
jno
inc
xchg
pop
xchg
ds
push
mov
jno
jno
jge
mov
mov
dec
cmpsl
or
lods
pop
adc
test
pop
out
adc
push
mov
test
scas
movsl
cmpsl
movsl
je
dec
xor
rcr
jns
lods
stos
das
jbe
adc
sbb
fwait
dec
sti
jmp
and
mov
pop
push
mov
cmpsl
sarb
pushf
dec
cmp
push
imul
xor
daa
lock
pop
or
xor
cmc
cltd
dec
push
xor
sti
add
pop
pop
je
mov
ss
sti
nop
sub
sbb
test
jge
or
popl
leave
mov
push
idivb
adc
xor
gs
and
lock
cmp
sbb
ljmp
rcr
xchg
pop
ficomps
ss
xchg
adc
mov
push
sarb
adc
inc
mov
lods
das
imul
outsl
add
jns
dec
das
shrl
push
ljmp
cmpsl
inc
popa
adc
fstps
movsb
mov
ret
in
cmp
mov
xchg
ss
adc
mov
mov
sub
fsts
jle
push
cs
rcrl
add
insb
mov
imul
nop
out
outsb
cmp
lea
sbb
pop
sub
mov
cmp
or
das
push
icebp
xor
pop
cmp
mov
lods
xor
mov
dec
jge
cmp
cmc
add
fcoms
sbb
mov
xchg
xchg
adc
mov
stc
pushf
sbb
ljmp
dec
jge
mov
mov
push
cmp
nop
pop
dec
insb
lret
jmp
xchg
adc
imul
loope
pop
jmp
mov
lods
mov
push
lcall
push
fisttps
cmp
add
into
imul
movsb
mov
mov
sub
js
aas
cmp
popa
popf
dec
sub
aam
pushf
dec
mov
call
sub
xor
push
inc
popa
fsubs
or
mov
vphadduwq
mov
lock
dec
add
cwtl
adc
in
addb
scas
adc
dec
and
add
repz
mov
in
insl
mov
push
inc
adcl
rdpmc
mov
sbb
sti
testl
mov
cltd
cltd
mov
out
jl
push
mov
xchg
sbbb
leave
jmp
push
rorb
cmpsl
insl
ja
push
xor
xchg
fwait
xchg
cmp
arpl
fldenv
je
and
mov
pusha
fsts
pop
out
flds
lock
packuswb
mov
jge
test
sbb
stc
push
test
imul
in
data16
mov
sub
fbstp
cltd
mov
ret
jmp
jnp
filds
lahf
cli
xor
inc
jns
push
push
mov
ret
stc
cmc
pop
sub
and
dec
stos
mov
pop
aam
and
mov
bound
sti
pop
adc
mov
jne
xor
mov
cmp
adc
fdivrl
pop
out
mov
test
mov
cltd
nop
pop
popf
es
div
push
mov
xor
or
pop
push
loop
jns
inc
cltd
orl
nop
ja
mov
repz
pop
sbb
xor
or
shll
enter
fnstenv
xchg
xchg
cmp
push
clc
lods
mov
cmp
xor
fstpl
or
xchg
mov
stos
sub
adc
cmp
push
cli
jg
mov
push
jo
data16
sbb
and
sbb
out
xchg
or
jae
mov
jne
fxam
fcomps
cmp
pop
pop
pop
dec
sub
mov
imul
mov
dec
dec
loopne
inc
les
xchg
pop
dec
pop
aad
stc
push
mov
aaa
pop
fucomip
das
xor
fidivl
inc
adc
movsb
out
je
out
pop
cmp
clc
xor
or
pop
sbb
das
fsubrs
cs
mov
push
dec
cmpsb
gs
jns
inc
push
pushf
out
inc
xor
popa
cmpsl
xor
aad
lods
js
mov
xor
or
out
je
mov
push
adc
jns
mov
xor
mov
xchg
xor
sub
dec
pop
xlat
jno
leave
bound
cmp
loop
mov
std
push
imul
dec
mov
push
fcomps
pop
sub
clc
aaa
lea
jno
or
shll
xchg
adc
xchg
mov
into
ficoml
test
pop
or
push
xor
aaa
sub
xchg
inc
lods
push
jmp
mov
insb
jns
cld
jp
jge
aad
negl
pop
scas
insl
xor
fidivrs
dec
lea
in
mov
movsb
xchg
mov
jns
cli
movsl
xchg
inc
test
inc
in
jl
ret
mov
sbb
pop
mov
cmp
fcoml
dec
mov
add
sbbb
push
andb
push
aam
popf
push
or
add
rsqrtps
lds
xchg
popf
pop
mov
mov
mov
push
orl
inc
enter
lahf
cmp
rep
cmp
das
insl
pop
mov
mov
dec
dec
in
push
mov
mov
repz
cmp
jle
into
mov
imull
push
sarb
dec
mov
sti
mov
hlt
add
xor
jp
cmp
mov
mov
lods
pushf
sub
idivl
sub
xchg
and
push
orl
jb
sbb
js
repz
fwait
sbb
pop
xchg
cmp
xchg
adc
dec
mov
cmp
in
pop
jmp
mov
outsb
cmp
pop
dec
dec
dec
cmp
imul
xor
xchg
pop
push
jp
lcall
push
lret
jmp
enter
lds
cmpsl
mov
in
leave
push
imul
push
mov
push
insl
mov
xchg
mov
xchg
andb
or
or
jnp
sbb
push
cmc
imulb
cmp
repz
lret
cmp
jns
mov
pop
mov
mov
dec
cwtl
loopne
inc
sbb
sbb
cmp
subl
push
test
out
cmp
pop
or
push
icebp
pushf
inc
xor
push
test
rcr
push
pop
xchg
std
pop
add
popf
lea
jl
xor
dec
in
pop
stos
fdivrs
xchg
jo
sbb
dec
push
shll
pop
xor
cmc
cs
sti
xchg
xchg
pop
mov
sub
vcvtps2pd
cmp
in
movsb
cmp
cmp
out
mov
ja
insl
mov
int
jns
pop
stos
mov
cltd
push
xor
push
mov
sub
sub
or
ss
call
loope
xchg
pop
lods
and
ficoml
jns
adc
jle
out
pop
int3
cmc
pop
loope
mov
std
dec
push
pop
sbb
dec
sub
and
ret
sar
imul
imulb
sbb
std
pusha
jns
inc
test
movsb
add
dec
das
cmp
pop
cmp
mov
dec
fdivrp
pushf
test
push
inc
dec
push
test
lret
inc
test
cmc
jge
jmp
cli
sahf
sbb
cmp
push
add
sub
insb
mov
test
add
test
jmp
jmp
mov
test
sarl
xor
dec
shlb
inc
outsl
xchg
or
jb
sbb
cs
fisubl
lods
pop
push
xor
mov
test
in
push
push
cltd
cwtl
mov
mov
inc
int3
jmp
data16
je
sbb
mov
adcl
inc
dec
out
push
pusha
jno
inc
inc
in
lret
fwait
cwtl
dec
xchg
lahf
add
cltd
push
out
pop
adc
mov
adc
push
add
or
sti
data16
test
imul
inc
enter
les
xlat
out
outsl
nop
xchg
mov
push
adc
fs
push
mov
dec
dec
mov
mov
xchg
xchg
addr16
adc
dec
sahf
add
inc
xchg
pop
push
mov
imulb
fsubrl
ret
push
int3
daa
mov
adc
ss
das
popa
mov
loop
push
int
cmp
mov
xchg
imul
pusha
adc
stc
sub
jnp
push
cs
sbb
mov
push
leave
dec
out
outsl
aad
jns
add
push
or
mov
loopne
or
xchg
cwtl
sub
enter
pop
adc
insb
leave
cmp
lods
adc
mov
addb
pop
fdivrs
dec
cmc
or
mov
pop
ret
int
add
push
pop
push
or
out
mov
xlat
jo
in
xor
adc
pop
inc
mov
mov
shl
lcall
xor
fwait
cltd
inc
js
in
or
jo
lods
push
icebp
in
por
cmp
adc
xor
cmc
clc
iret
pop
insb
addr16
jg
mov
push
or
call
cwtl
dec
push
pop
cmp
dec
cld
mov
clc
cmp
pop
lret
jno
in
scas
addr16
xchg
push
outsb
add
test
dec
push
or
mov
aad
jmp
ror
loopne
dec
dec
popa
xchg
lds
iret
movsb
adc
dec
add
push
mov
jne
fstps
add
loop
push
call
push
pop
sbb
push
push
jl
and
test
dec
divl
jns
ficomps
dec
push
ficoms
push
fwait
push
les
sbb
rcrl
std
cmp
or
in
cmp
loopne
into
push
sbb
iret
inc
dec
inc
push
shrb
pop
pop
mov
cmp
pusha
xchg
inc
dec
mov
loopne
inc
pusha
dec
fstpl
xor
xor
ja
icebp
pop
andb
pusha
test
jecxz
mov
and
test
int3
divb
mov
loopne
cmp
xorl
lds
movsb
mov
subb
data16
push
cld
mov
addps
push
cli
inc
cltd
cmpsb
test
jg
cmp
test
movsb
dec
inc
sub
stc
in
addb
push
fnsave
jno
jmp
pop
icebp
jmp
lahf
shll
mov
nop
adc
test
call
mov
fstps
movsl
jno
adc
sub
out
fldenv
rcll
and
imul
lea
cmp
jp
push
cli
sub
in
adc
xchg
push
fdivrs
sub
or
add
xchg
mov
lods
inc
fnstcw
scas
movsl
cmp
fs
mov
or
pop
jmpw
xchg
test
cmp
cmpsl
cwtl
cmp
xchg
cmp
jae
push
fadd
mov
pop
fldenv
cmp
leave
in
loop
fldt
test
mov
jl
in
cmp
int3
popf
xor
imul
inc
xchg
jmp
push
push
repz
and
lods
sub
mov
lea
adc
xor
xchg
imul
push
loope
insb
insl
shll
std
jbe
mov
mov
push
fistpl
movl
pop
mov
cmp
les
fnstenv
pusha
data16
dec
pop
cli
jne
or
dec
mov
repz
jmp
lods
pop
ss
mov
bound
out
push
cmp
and
gs
insb
cltd
mov
push
dec
notl
imul
push
mov
dec
orl
int
jns
jge
mov
lret
jno
mov
jns
jge
shl
or
out
cld
cmp
mov
enter
xor
xchg
nop
imul
mov
fdivrl
clc
mov
and
mov
dec
leave
or
mov
test
push
dec
jmp
and
stc
sahf
insb
insb
dec
mov
mov
mov
clc
movsb
lds
sbb
or
addr16
dec
cltd
dec
fdivs
mov
sub
test
dec
test
push
int
cmp
cwtl
sbb
push
xchg
pop
push
inc
outsl
push
rorl
dec
arpl
adc
notb
lods
lcall
mov
pop
jns
jnp
pushf
xor
pop
push
sub
adc
imul
or
pop
in
push
pop
in
fsubp
dec
add
lea
push
pushf
nop
out
mov
lds
pop
outsl
jmp
push
out
inc
test
mov
stc
negb
data16
xchg
nop
iret
lea
fstpl
push
dec
inc
jnp
call
cmp
stc
mov
add
iret
jmp
cmp
leave
adc
sbb
call
test
insb
mov
cmp
iret
or
aad
cmp
sbbb
fistpl
sarl
mov
lea
les
lock
lea
pop
sbb
adc
mov
nop
add
jecxz
lds
jnp
fwait
ja
rcr
es
adc
sbb
cmc
jbe
dec
sbb
dec
jno
lcall
imul
xchg
push
jmp
lcall
sbb
dec
es
pop
sbb
push
push
ss
xchg
dec
imul
inc
imul
idivb
cmp
fdivrs
imul
js
cmp
addr16
pop
xor
pop
rcr
stc
cs
sub
adc
xor
cmpsb
popa
inc
dec
jmp
xchg
out
xchg
cmpsl
test
into
jle
orl
lret
xchg
xchg
out
gs
pop
lods
test
div
xchg
mov
xchg
movsb
cmp
or
mov
fwait
outsb
push
mov
sub
xchg
xchg
frstor
sbb
sub
cmc
cmp
sbb
dec
dec
dec
pop
jns
cld
inc
mov
or
mov
cmp
scas
jbe
xor
xor
lcall
push
dec
lcall
cmp
dec
test
or
push
imulb
push
test
cwtl
loop
xor
sub
and
into
fsts
test
push
mov
jge
dec
mov
cltd
sub
push
aad
cmp
push
xor
aam
lds
cmp
xor
cmp
fisubrl
ret
xchg
dec
repz
xor
ficoml
dec
sbb
push
or
fincstp
mov
adc
push
data16
fwait
fadds
and
or
mov
mov
push
fcomp
or
dec
stc
jge
cmp
loope
adc
inc
push
dec
add
jb
imulb
lret
mov
add
shl
test
stc
pop
pop
insb
jbe
fbld
dec
sub
cmpsb
in
out
dec
dec
mov
dec
popf
cmp
mov
pop
sub
ss
cmpsb
push
out
mov
sbb
xor
mov
dec
xchg
lahf
aad
xor
jmp
fidivrl
xchg
pop
cltd
and
push
imulb
pop
xchg
test
test
mov
insb
mov
jl
xorl
aad
cltd
cmp
jnp
jns
test
cmp
rclb
gs
cltd
and
pop
inc
outsl
xor
dec
sub
xlat
je
test
jns
cs
popa
cmp
fdivr
mov
xchg
lea
stc
mov
dec
out
mov
jne
xor
push
push
sub
dec
ljmp
outsl
sbb
pop
push
test
mov
popf
fsts
inc
jo
mov
insl
dec
sub
push
fildll
out
adc
fucomi
mov
and
mov
dec
leave
fs
aas
cmp
es
cmp
pop
sbb
and
mov
mulb
pusha
movsl
fmulp
xor
arpl
push
lods
sbbl
aad
mov
cmpsl
in
pop
xchg
mov
pop
inc
adc
out
xchg
cmp
imul
or
pop
push
pop
cmp
out
push
lods
lds
push
mov
cs
imul
cmp
popa
sbb
fbld
push
daa
adc
mov
pushf
nop
loopne
mov
push
sub
xor
cmp
test
push
mov
jge
pop
fadds
test
shll
dec
cltd
xor
cmpsb
lds
jge
xor
test
mov
orb
adc
mov
cmp
lea
adc
ljmp
pop
jns
mov
adc
int
jno
dec
xor
pushf
test
orl
nop
jne
and
les
scas
mov
sub
mov
pusha
lret
mov
cmp
sbb
sub
pop
xchg
cmp
dec
dec
dec
dec
cwtl
mov
xchg
mov
or
mov
or
es
cmpsl
mov
xchg
push
rcll
sub
scas
mov
pushl
data16
cmp
cltd
pop
mov
xlat
dec
fistl
cli
pop
addb
stos
stos
dec
arpl
es
mov
mov
sbbl
sub
mov
mov
dec
jmp
xchg
sub
jp
jecxz
xchg
repnz
int3
adc
push
add
mov
into
iret
xor
pop
call
test
sbb
cmp
jb
jo
pop
das
dec
pop
jnp
push
dec
test
mov
adc
js
mov
dec
push
sbbl
inc
insl
pusha
addr16
je
pop
leave
lds
xchg
sbb
mov
sub
and
xor
rcr
outsb
xchg
call
or
dec
filds
ds
mov
in
mov
pusha
and
xlat
cmp
ret
icebp
repnz
pop
xchg
sub
orb
lds
data16
cwtl
jbe
xchg
adcl
dec
mov
mov
loope
leave
jns
insl
cmp
inc
pop
sbb
test
adc
mov
cmpps
sarl
cmp
leave
xor
push
add
mov
adc
cmc
xchg
cmc
in
ror
sub
xchg
cmp
mov
cli
mov
cmp
in
pushf
in
mov
imul
daa
cli
inc
cmp
icebp
in
fistpll
lds
movsb
lcall
mov
sahf
ja
imul
jg
imul
mov
inc
cmc
pushf
lods
adc
stc
inc
pushf
mov
mov
mov
xchg
jg
loope
call
inc
sbb
or
insl
inc
sub
and
lahf
jns
stos
push
jecxz
xor
fstpl
in
adc
leave
lahf
into
pop
jno
pop
xor
lcall
add
test
pop
mov
cmp
xor
inc
mov
xchg
mov
imul
mov
mov
jp
or
nop
adc
push
cmp
movsl
jns
mov
sbb
insl
mov
cmp
add
cld
fnstenv
cltd
std
movsb
dec
mov
add
pop
sub
cmc
les
sbb
mov
mov
pop
ficoms
xchg
jmp
lahf
push
loopne
and
dec
cwtl
cmp
add
ficomps
outsl
daa
mov
push
lret
enter
mov
cli
sbb
out
fsts
inc
dec
or
pop
adc
sub
push
nop
cwtl
mov
sbb
push
data16
repnz
cmp
cmp
inc
pusha
cmp
pushf
aas
cmp
jno
outsb
push
sbb
sub
sbb
rcrb
cmp
xor
stc
popf
cmp
and
stc
inc
movsl
cs
je
xlat
and
inc
insl
jns
lcall
cwtl
frstor
xchg
repz
fildll
loop
mov
xchg
xor
imul
cmp
repnz
es
mov
or
cltd
push
cmp
push
mul
lods
nop
addr16
mov
frstor
or
sbb
stc
xchg
fsub
in
push
jbe
test
cmp
xchg
and
lret
repz
jecxz
lcall
push
inc
inc
push
and
mov
add
pop
jno
mov
cmp
pop
popf
adcl
in
fnstenv
nop
fdiv
lcall
push
je
or
push
test
jo
lret
mov
or
leave
mov
in
in
ljmp
and
dec
cmp
nop
js
pop
inc
sub
dec
mov
pop
cmp
push
clc
clc
lods
sub
cmpsb
ljmp
adc
dec
adc
out
lcall
rorl
das
pop
test
jne
popa
push
cmp
xchg
scas
scas
sti
pop
daa
pop
or
xlat
sbb
in
mov
sbb
push
inc
add
or
xchg
lods
cwtl
lret
push
outsl
cmp
pop
and
in
sbb
inc
xor
repz
pop
imul
pop
jne
xor
addr16
sbb
call
sarb
jmp
pop
call
cmpsb
xorl
mov
mov
testb
mov
xor
popf
sbb
test
pop
insl
fsts
sbb
test
andb
xor
imul
imul
and
mov
mov
insl
cmpsl
jle
dec
rcr
mov
mov
imul
mov
sbb
das
imul
cmpsl
xchg
push
test
mov
mov
cmp
lahf
frstor
cmp
mov
nop
cmp
outsl
lock
cmp
movsl
lret
movl
shlb
mov
mov
sbb
fdivrl
arpl
or
insl
pop
or
xlat
test
insb
xorl
hlt
push
lcall
test
dec
call
mov
sti
out
jae
fimull
mov
sti
fmuls
lds
rcrl
in
dec
mov
cmpsl
mov
mov
sub
dec
aas
pop
sub
mov
nop
mov
mov
mov
push
jo
lahf
imul
sub
and
insb
pop
jecxz
int3
fmul
xchg
or
add
pop
test
xchg
dec
ljmp
mov
das
lcall
mov
sub
fstpt
mov
pop
pop
shll
dec
aas
dec
cmp
mov
ljmp
ds
bound
mov
pop
iret
add
inc
lods
fnstsw
stos
movsl
adc
in
dec
sbb
stc
jmp
sti
fwait
jmp
cmp
std
pop
pop
xor
sbb
cwtl
cmp
js
mov
mov
xchg
jge
pop
mov
in
and
sbb
pusha
mov
sub
rcll
pop
xor
push
loop
push
cmp
js
fildl
mov
fstps
inc
addr16
aad
movsb
int
jns
push
loope
loope
cmp
outsl
mov
negl
lods
in
cmc
andb
fldcw
fisubl
stos
mov
mov
lahf
scas
jns
pushf
fsts
mov
call
jbe
lock
dec
cltd
or
mov
nop
inc
xchg
pusha
fdivs
das
cmp
xchg
lahf
mov
pop
sub
setl
fsts
or
xchg
enter
fwait
lods
nop
cmp
insl
sbb
fwait
dec
sub
sahf
or
cmp
lock
mov
rcrl
sbb
push
dec
mov
pop
xor
sub
pushf
inc
aas
jmp
iret
rcrb
cmp
xor
xor
stos
or
iret
lods
sbb
xor
cmp
jo
xchg
movsb
js
into
cmp
in
mov
fwait
and
out
cwtl
xchg
subb
fst
pop
sub
aad
jns
dec
mov
xchg
adc
xor
bound
imulb
sbb
xchg
call
sub
flds
sbbl
hlt
fs
cmpsb
inc
push
enter
dec
fst
jo
xor
cmp
cmp
nop
jmp
or
add
inc
mov
outsl
cld
lahf
dec
daa
popa
test
out
jge
cwtl
rcrl
add
pop
fisttps
cli
inc
mov
call
test
inc
rol
call
mov
lea
add
dec
adc
mov
push
orb
adc
xchg
roll
nop
sbb
pop
mov
push
mov
sbb
inc
xchg
jmp
imulb
fisttpl
in
push
mov
out
jae
lcall
test
nop
out
cmp
push
push
xor
add
divl
mov
add
push
cmp
mov
adc
test
add
mov
int
sti
lods
insb
icebp
cmp
sarb
scas
push
mov
xchg
shrd
or
adc
sbb
mov
addr16
mov
mov
or
fldcw
push
cwtl
jbe
dec
inc
pushf
or
fcoms
test
int
insl
imul
adc
mov
xor
iret
ficompl
cwtl
push
inc
cmc
jmp
mov
push
ds
xor
loop
pop
dec
cwtl
fwait
pop
lods
push
out
clc
xchg
decl
cli
mov
imul
inc
or
push
mov
idivl
or
and
xchg
pop
fyl2xp1
mov
jns
dec
stos
movsb
pop
addr16
roll
dec
imul
dec
cmp
divl
fld
inc
data16
cmp
inc
cmc
popf
mov
rol
in
dec
mov
pop
fldcw
mov
stc
sbb
mov
mov
ljmp
pop
mov
js
mov
stc
rcll
mov
pushf
lods
aad
popf
hlt
adcl
je
cs
addr16
popf
cmpsb
popf
cmp
mov
push
fstps
popf
xorl
cwtl
js
repnz
mov
sarl
inc
xlat
in
pop
pop
mov
mov
mov
mov
pop
popf
push
cltd
xchg
loopne
out
sub
push
add
testb
in
orb
add
cltd
sbb
xor
jbe
lea
call
pusha
push
call
jmp
jg
xor
mov
loope
loope
cs
ljmp
push
cmp
adc
sbb
into
pop
sarb
fdivs
out
adc
add
inc
gs
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
pushf
pushf
lods
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
je
test
clc
jmp
lods
sub
sub
adc
dec
adc
xchg
push
aas
sar
inc
adc
jo
test
sbb
jo
clc
fwait
push
nop
inc
inc
cmp
push
loope
xchg
cmp
cmp
push
jp
inc
jbe
mov
adc
orl
xchg
push
fildl
aaa
rorl
mov
pop
sbb
int3
add
jns
inc
jbe
mov
add
mov
lahf
pop
dec
push
aas
jnp
popf
add
push
inc
cmp
lcall
pusha
jae
out
mov
cmp
and
adc
push
pop
xor
das
pop
in
xchg
lahf
push
movsb
sub
test
lods
ret
jae
mov
inc
mov
cs
jb
jne
add
sub
push
or
mov
sub
pop
sub
cmp
out
in
add
adc
in
mov
and
or
xor
iret
lea
mov
pop
cmp
arpl
rcr
hlt
xor
fdivs
dec
mov
iret
ljmp
mov
add
adcb
xor
mov
cmc
mov
cmpsb
xorb
xchg
sub
sub
sub
cvtpi2ps
fcomi
dec
loope
aad
pop
lods
ftst
imulb
or
test
outsl
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
repz
xchg
mov
xchg
mov
or
mov
pop
into
ja
mov
in
xor
cmp
lods
and
loop
mov
sbb
sti
aam
addr16
dec
nop
adc
out
pop
pushf
stos
cld
sbb
dec
pop
fldcw
outsl
test
jns
andl
mov
sub
aad
jecxz
mov
xlat
pop
jne
cmpsb
mov
mov
inc
outsb
cmpsl
add
inc
jb
popa
je
inc
imul
pusha
pushf
lea
je
adc
xor
mov
inc
clc
test
sbb
sub
xadd
bt
lea
shr
inc
pushf
bsr
btr
mov
cmc
shld
shl
sbb
add
shr
add
sub
rol
movzbw
mov
clc
pusha
shr
cmc
cmp
mov
pushl
lea
je
jmp
jmp
jmp
stc
movb
clc
shr
call
pushf
movb
lea
jb
cmp
clc
clc
cmp
cmp
pushf
pusha
jmp
add
jae
popa
outsb
data16
les
add
xchg
das
jno
nop
dec
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
fs
je
sar
bts
pushf
sub
mov
lea
shl
jmp
lea
je
jmp
mov
bswap
pop
push
mov
push
pushl
ret
cmc
add
pushf
cmp
pushl
cmp
call
loop
push
xor
sbb
in
add
sub
inc
add
aaa
fistpl
sbb
fistpll
mov
pop
xchg
call
and
push
pop
mov
jno
scas
das
xchg
dec
inc
cmpsl
test
mov
cmpsb
orb
dec
xor
scas
xor
jbe
or
inc
pop
mov
xlat
pop
sub
xlat
sub
mov
incl
je
jl
filds
jbe
xor
and
outsl
pop
pop
jns
mov
clc
imulb
sbb
bt
shr
jmp
into
mov
xor
nop
inc
jle
xor
fwait
adc
cmpb
push
imulb
xchg
cmpsb
lods
out
pop
test
mov
loope
push
ret
adc
or
xchg
bound
repnz
outsl
shll
lods
lahf
xor
adc
adc
adcl
sub
cmc
lds
loope
inc
adc
xor
ret
test
shlb
icebp
mov
cli
push
sub
pop
out
sub
sub
daa
dec
jb
fdivrs
lea
jae
call
stc
and
clc
add
pusha
pushf
pushl
pushf
lea
jmp
dec
stc
shl
pushf
setge
pushf
lods
bt
test
pushf
not
stc
cmp
sub
push
bt
stc
test
xor
pushf
movb
bt
ror
call
pusha
pushf
pushl
mov
push
lea
jmp
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
test
sub
add
cmc
sar
push
movl
stc
jmp
add
pop
jbe
outsb
jo
imul
inc
jb
popa
je
push
gs
imul
shll
mov
mov
jmp
cli
inc
mov
push
pop
sbb
in
adc
jb
and
aas
mov
call
insl
sub
push
dec
mov
push
cs
rclb
js
cmc
pop
add
enter
je
aas
pop
add
out
mov
jno
cmpsb
inc
fdivs
inc
clc
mov
and
lds
sti
push
rolb
and
lea
and
clc
not
mov
pushf
cmp
jmp
not
bt
jmp
sub
mov
clc
and
pushf
add
add
pushf
cmp
cmp
add
pusha
pushf
dec
mov
push
lea
jne
pushf
pushf
pusha
lea
jmp
pushf
lea
ja
jmp
add
add
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
fs
je
pushf
call
push
pusha
push
pushf
lea
jne
movsbw
lahf
pushf
movzbw
movb
jmp
xchg
pop
lea
lea
pop
jmp
sub
xor
clts
ds
mov
push
das
dec
push
sbb
aam
mov
test
dec
mov
lods
movsl
pop
gs
scas
add
loopne
push
and
bound
in
inc
aam
insl
inc
jge
lods
mov
inc
jg
fcomp
notl
sub
jmp
mov
and
je
ror
jo
aam
lock
fstpt
aam
cli
into
fsubr
les
popf
leave
cld
or
and
nop
sub
cmpb
out
aad
jns
outsl
nop
add
ror
lock
cmp
dec
inc
mov
adc
adc
pop
jl
push
mov
cmp
sbb
mov
fidivs
shll
cmp
sub
dec
xchg
sub
mov
inc
mull
pop
stc
iret
jl
push
and
mov
inc
mov
dec
in
test
je
cltd
jg
imul
jb
add
outsl
pop
pusha
jl
out
mov
sbb
imulb
and
pushf
setns
cmc
mov
cmc
cmp
cmp
cmc
not
call
pushf
mov
pushf
pushl
ret
push
call
jnp
push
add
push
push
inc
push
outsb
add
add
insb
gs
push
call
cmp
inc
and
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
fs
xor
lcall
imul
ret
aam
insb
arpl
stos
add
gs
mov
fdivr
push
xchg
pop
inc
roll
aaa
dec
jmp
and
mov
push
jle
hlt
pop
out
fidivrs
push
pop
jae
or
stc
insl
pop
push
pop
xchg
loopne
xchg
push
sbb
bound
ror
fmuls
or
jbe
in
lods
mov
mov
aad
pop
cmp
jae
mov
jge
xor
fcoms
push
mov
jns
fsubrl
aaa
mov
xchg
imul
fiaddl
popf
pop
idivb
addr16
push
sub
and
mov
sub
aaa
leave
jmp
sbb
pushf
dec
test
ljmp
xchg
loopne
add
pop
jbe
inc
lret
into
or
lea
mov
repz
cwtl
bound
pop
test
and
cltd
nop
mov
inc
pop
lea
xor
insl
inc
jg
dec
sbb
jmp
aaa
or
mov
mov
push
mov
xchg
leave
sub
cs
call
insl
ret
or
xchg
inc
dec
fnstcw
xchg
std
les
mov
cmp
adc
sub
scas
inc
sbb
ret
jecxz
out
and
repz
clc
movsb
lods
cmp
xchg
lret
push
insl
sbb
push
push
jp
inc
mov
cli
gs
push
dec
xor
push
popa
lret
fdivrs
out
cli
or
pop
dec
cmp
sbb
imul
outsl
jge
outsb
gs
jns
aas
mov
and
pop
mov
cmp
scas
jne
mov
insl
xor
adc
cwtl
inc
dec
rorl
pop
bound
add
div
inc
inc
rclb
adc
mov
mov
jle
and
pop
mov
in
dec
ja
out
cmp
xchg
pop
divb
popa
add
scas
mov
stc
ss
loope
sub
pop
pop
shlb
mov
sub
arpl
das
popa
push
add
popf
out
mov
inc
ja
sar
xchg
cmp
cmc
jns
pop
jo
insl
gs
jbe
dec
or
fisubs
inc
or
stos
cmp
out
sahf
mov
mov
jnp
pop
push
jns
push
inc
xor
js
addr16
push
in
fimull
mov
dec
dec
dec
imul
push
push
pop
cwtl
scas
mov
sbb
test
insl
pop
arpl
mov
shrl
scas
xor
mov
iret
push
inc
orl
mulb
stos
incb
and
popa
fmuls
jbe
xchg
xchg
mov
cmp
stc
dec
fstps
cli
jmp
jns
jnp
cmp
mov
mov
xchg
mov
sbb
cmp
mov
sub
sahf
fstl
dec
sub
cli
mov
pop
mov
cmp
and
movsb
hlt
ja
jge
cltd
inc
lret
lods
mov
std
xchg
loopne
shrl
lods
aas
cmp
push
scas
push
xlat
jne
fwait
mov
inc
or
addr16
inc
mov
orb
mov
out
xchg
lds
in
ja
jmp
out
mov
mov
adc
mov
xorl
fcomp
mov
popf
mov
mov
mov
dec
fisttpll
mov
insl
push
aam
mov
push
mov
sbb
push
movsb
inc
std
insb
sub
fcoms
out
mov
xchg
stos
imul
mov
dec
out
jecxz
ret
lock
push
push
pusha
cmp
xor
dec
xchg
dec
push
sahf
mov
orb
xchg
rorl
xor
mov
fwait
loopne
test
adc
mov
aad
or
inc
arpl
loope
test
filds
sub
popa
negb
jbe
pop
into
cmp
push
addr16
leave
jb
xchg
test
movsl
pop
dec
nop
mov
icebp
dec
in
sbbl
aaa
bswap
jmp
xchg
jecxz
mov
cs
xchg
movb
dec
xchg
andb
sbb
sarb
pop
bnd
mov
lcall
sbb
das
push
ds
inc
mov
ljmp
mov
out
add
mov
mov
pop
dec
cmp
sahf
xor
cli
add
notb
mov
xlat
xchg
pop
jnp
jnp
mov
cmp
sbb
dec
pop
fwait
inc
aaa
js
movsl
pushf
shrl
push
pop
or
inc
insb
mov
xchg
ret
xchg
sbb
xor
dec
aaa
mov
push
push
leave
and
sub
enter
add
dec
hlt
imul
cli
inc
xchg
enter
aaa
xor
fldt
inc
pop
mov
or
mov
jl
test
cli
aad
pop
pop
out
out
in
fcomps
mov
pop
out
mov
fisubrs
dec
stc
rclb
adc
mov
movsb
rcll
aaa
cltd
pop
ret
loopne
outsl
jnp
lock
lds
dec
lret
pop
push
popa
or
push
xor
int
fstl
outsl
in
mov
sub
imul
cmp
push
inc
insb
xchg
test
xchg
cmp
dec
push
int3
ficoml
fcmovu
mov
xlat
mov
out
mov
sub
cmp
imul
push
inc
dec
push
or
xchg
xor
pop
mov
mov
lods
mov
jns
sbb
addr16
mov
imulb
cltd
add
cwtl
in
mov
ret
gs
push
mov
into
std
xchg
mov
and
cs
popa
jge
push
jmp
leave
sub
lds
cmpsl
outsl
mov
push
xchg
idivl
sub
pop
aaa
int3
sub
or
cmpsb
fcomp
xchg
dec
outsb
xor
daa
les
imul
mov
sahf
push
mov
cmp
notb
and
enter
popf
inc
add
cmpsb
fists
and
cmc
cmp
mov
std
inc
xchg
sbb
sbb
cmp
or
pop
andl
insb
dec
dec
repz
gs
dec
cmc
xchg
dec
or
xor
xor
sub
mov
dec
cmpsl
sub
mov
push
jle
sbb
filds
iret
sub
add
imul
lds
push
adc
push
popa
fwait
jg
pop
leave
mov
idivb
cmp
fsubrs
ja
xchg
stos
xchg
fisubl
jb
scas
in
dec
or
test
or
sbb
lcall
lcall
push
sbb
cmp
sub
or
cld
loopne
scas
dec
aam
in
xor
cwtl
mov
mov
dec
mov
push
and
adc
aad
push
leave
fstpl
cmp
push
les
pop
mov
call
out
sbb
mov
push
jge
fsts
inc
push
mov
int3
mov
jno
inc
xchg
insl
jmp
cmpsb
sarl
out
test
loopne
lods
mov
pop
out
sbb
insb
dec
cmpxchg
mov
mov
stos
xor
and
ret
fwait
dec
arpl
mov
ja
inc
mov
push
popa
mov
cmp
xor
bound
mov
imul
cltd
fwait
sbb
in
subl
loop
cmp
pop
mov
or
push
inc
stos
je
xchg
aaa
pushf
and
mov
mov
clc
shrl
sbb
or
movsl
outsl
jno
decl
loopne
mov
jmp
fstpt
out
sub
xor
test
xchg
add
dec
sub
jmp
orb
movsb
out
cmp
cmpsb
mov
imul
imul
fistpll
pusha
out
lahf
xor
lret
xor
cmp
push
pop
pop
mov
dec
or
sub
sbb
and
xchg
loopne
inc
dec
push
push
push
std
xchg
ret
out
sbb
jnp
insb
sub
inc
shrl
stc
ss
bsr
out
cmp
sahf
jne
and
push
ffree
lods
mov
punpckhdq
sbb
insl
xchg
push
dec
cmp
mov
cmp
rcrb
inc
js
imul
js
lock
sbb
cmp
nop
pop
cmp
loope
mov
subb
not
dec
popf
movsbl
jge
jb
sub
cmpl
cmp
jge
push
jns
fstpt
ds
int
out
pop
leave
jns
sbb
fsts
lea
mov
fldcw
fstps
aad
test
jp
mov
movsl
test
cwtl
push
imul
push
fcoml
fistpll
popf
jmp
outsl
cmp
mov
aad
lods
movb
cltd
or
jno
imul
fldenv
mov
popf
inc
hlt
nop
scas
cmp
mov
cmp
loope
js
mov
cmp
pop
mov
xchg
pop
nop
clc
mov
xchg
jns
jl
lods
cmp
add
shll
pop
scas
cmp
call
clc
insb
sbb
lods
jbe
sub
int
sbb
push
stc
pop
push
mov
sbb
in
mov
cmp
mov
sbb
cmp
in
jecxz
fnstenv
xchg
test
cmp
leave
cmpsl
cmp
aaa
stos
scas
push
outsl
push
setns
mov
out
dec
mov
ja
mov
jbe
xchg
fisttpll
loope
pushf
sbb
imul
out
mov
sbb
inc
xor
aad
sub
in
xchg
lods
clc
outsl
cmp
addr16
pop
cmp
jns
jmp
push
jnp
xor
cmp
mov
mov
aaa
jae
cmp
jmp
cmp
adc
sbb
push
out
sbb
cmp
loope
dec
mov
loopne
sub
test
in
fstpl
pop
cmp
mov
sar
jl
imul
pop
scas
push
adc
push
push
cmp
xor
gs
push
mov
mov
inc
mov
mov
lds
cmpsb
adc
xlat
cmp
test
mov
xlat
inc
inc
pop
out
cmp
dec
repz
js
xor
add
mov
push
adc
stc
dec
push
inc
push
out
mov
mov
and
pop
inc
imul
xchg
mov
or
and
int3
xor
pop
je,pt
pop
je
les
cltd
sbb
adc
xor
xchg
jge
call
dec
mov
push
cwtl
sahf
aas
aaa
test
lea
stc
sub
or
adc
mov
push
mov
mov
lahf
cli
adc
jo
inc
testb
daa
clc
push
pop
cmp
xchg
stos
mov
test
cmp
cmp
pop
fdiv
sub
out
aaa
mov
mov
imul
jmp
add
rorl
lahf
mull
or
xchg
xor
xchg
cmpsl
dec
pop
mov
add
push
lds
gs
pop
and
mov
or
sbb
mov
sahf
dec
mov
mov
mov
mov
and
jl
cltd
mov
dec
xchg
gs
xchg
mov
rolb
xor
jmp
rcrl
pop
push
addl
in
inc
jmp
xchg
test
ret
mov
pop
out
cwtl
aaa
cmp
fdivrs
outsl
jg
jnp
dec
mov
imul
xor
sbb
insb
sub
mov
jp
enter
adc
nop
imull
xchg
xchg
ja
mov
xchg
sub
imul
bound
loope
push
jl
cmpsb
and
mov
fdivl
jmp
ret
fmuls
fldenv
xchg
sub
push
pop
es
daa
xorl
mov
xchg
pop
ja
push
decb
add
fcom
enter
js
or
xchg
lret
daa
lea
mov
push
inc
mulb
add
pop
fadds
mov
xor
and
lock
scas
push
imul
sbb
sub
xchg
inc
add
loopne
lds
push
ret
sub
cmp
fidivrs
add
dec
shrl
cltd
pusha
gs
sbb
push
into
push
mov
cmp
dec
imul
flds
lods
aad
jp
aad
mov
sbb
cmpsb
inc
std
sarb
mulb
fistpl
push
jecxz
shlb
adc
dec
push
in
mov
mov
mov
push
jbe
push
pop
jno
sbb
aam
inc
xor
test
cld
mov
mov
lods
cmp
xchg
sbb
sub
sub
cmp
add
mov
jecxz
sahf
pop
push
mov
cwtl
insb
scas
es
xchg
mov
in
leave
xor
xor
sbb
mov
dec
inc
aad
js
push
cmc
sub
mov
js
enter
cli
sbb
push
test
dec
int3
jg
subps
mov
xor
lods
jp
xor
dec
ja
lret
xor
pop
arpl
loop
shrl
xchg
cmpsl
ds
jae
xor
fisubrl
gs
mov
fdivr
mov
pop
mov
sbb
or
mov
push
or
or
adc
jnp
aaa
les
sub
pop
pop
dec
loopne
sub
lock
dec
pop
push
stc
pop
mov
xchg
cwtl
aas
addr16
movsl
pop
cli
ret
jno
sub
fmuls
ds
mov
outsb
packuswb
push
xchg
mov
push
jbe
inc
mov
xchg
std
es
xchg
mov
arpl
mov
stos
scas
jmp
or
test
sub
insl
mov
push
aad
fisubrl
dec
pop
push
dec
mov
add
add
pusha
out
movsb
pop
stc
push
sub
enter
arpl
mov
out
test
sbbl
ss
rcr
fdivs
ret
push
adc
and
mov
pop
sub
jle
add
in
push
mov
mov
mov
fcmovne
ret
fsts
fcmovnbe
xchg
adc
push
je
lahf
stc
jle
xor
imul
add
or
inc
inc
ficomps
xchg
jne
ret
fwait
xor
inc
add
mov
xchg
inc
movsb
fsub
push
xchg
xchg
mov
mov
mov
jbe
add
test
aaa
hlt
mov
xchg
test
mov
nop
xchg
dec
fs
out
repz
push
xor
lock
fadds
dec
inc
arpl
cmp
pop
mov
aas
dec
inc
pop
imul
jp
fs
test
inc
push
hlt
jmp
dec
gs
push
pop
inc
push
adc
cli
xchg
push
call
loope
outsl
mov
lock
ja
test
xchg
lock
loope
mov
movsb
ljmp
inc
repnz
pop
push
pop
call
loop
cmp
aad
sub
jns
xchg
leave
lods
push
and
cmp
sbb
dec
cmpsl
out
out
rcl
mov
scas
outsl
test
cmp
jecxz
les
cmp
hlt
xchg
xchg
cmp
scas
jle
gs
repnz
xor
dec
jns
cltd
mov
repnz
mov
dec
shlb
cmp
fsubs
jecxz
cmp
pop
lahf
push
inc
mov
jo
out
xchg
push
pushf
test
sti
sub
lahf
stc
mov
imul
in
imul
out
ljmp
fs
arpl
iret
fnstcw
xor
xor
ret
cltd
in
sbbl
test
stos
mov
sahf
push
xchg
push
and
pop
insb
add
ret
dec
and
lock
or
push
mov
insl
lret
xchg
mov
xor
add
push
mov
dec
push
mov
and
lds
into
aaa
xor
push
jo
jp
in
sbb
mov
inc
mov
cli
cli
popa
inc
cmpsl
push
notl
pop
iret
insl
mov
lahf
out
push
add
xor
mov
mov
adc
call
jp
lcall
pop
test
pop
xchg
jle
mov
mov
daa
in
inc
dec
push
ss
sbb
and
stos
xchg
imul
push
push
aaa
sbb
jge
xchg
push
fimull
inc
add
xor
push
cltd
pop
or
push
push
out
pop
sub
xor
adc
insl
pop
rorl
inc
mov
push
push
leave
data16
dec
divl
cld
dec
cmp
cs
cli
xor
jmp
ja
fsts
push
sbb
and
outsb
xor
jb
loop
xor
mov
les
fs
fstpt
jg
pop
scas
lods
and
mov
imul
mov
pop
arpl
data16
arpl
cmp
dec
push
stos
xchg
xor
sahf
mov
sbb
movsl
fisttpl
cmp
daa
push
dec
scas
or
mov
bound
xchg
xor
movsl
mov
das
pop
pop
jl
mov
or
sub
push
jb
jmp
into
pop
sti
mov
leave
lods
mov
addr16
xchg
or
sbb
xchg
call
add
cmpsl
push
and
out
dec
mov
xchg
aas
inc
cmp
dec
aam
ss
cltd
jb
pop
cwtl
push
lea
and
pop
dec
mov
pop
xlat
pop
pop
add
xchg
in
shr
push
je
les
mov
cli
ljmp
jmp
inc
pop
xchg
lcall
add
fcompl
test
ret
pusha
mov
jmp
in
mov
mov
fimuls
or
or
pop
cmc
xor
inc
stos
mov
rcr
mov
out
icebp
daa
ljmp
mov
pop
pop
add
adc
imul
ret
mov
pop
cmc
icebp
out
mov
xchg
pop
aad
lea
dec
sbb
or
xor
stos
bound
fsubs
cs
cmp
pusha
cmp
mov
orl
mov
addr16
cld
add
pop
out
mov
sbb
insb
enter
out
xchg
pop
pop
pop
mov
pop
stos
cwtl
pop
inc
loopne
sarl
shlb
xor
loop
add
add
pusha
mov
pop
and
sbb
mov
mov
daa
inc
std
loope
lret
mov
mov
lea
notl
ja
sub
mov
bnd
pop
test
xchg
sub
roll
daa
mov
inc
fcoms
out
xor
push
add
loopne
xchg
clc
cwtl
cltd
jns
or
push
mov
outsb
xor
aaa
and
bound
cs
inc
mov
aam
xchg
lock
push
in
movsl
addr16
and
lea
mov
inc
xor
jmp
jo
pop
mov
shrl
addr16
cld
or
inc
xchg
out
lahf
inc
adc
fildll
int3
xchg
xor
pop
clc
out
rcrb
inc
pop
jno
xor
xchg
lods
into
or
push
bound
dec
repnz
gs
pop
mov
add
in
pop
faddl
movsl
push
cmp
ja
pop
inc
mov
jl
sbb
push
jmp
push
pop
ficompl
xchg
xchg
aam
jae
pop
pop
ds
std
pusha
loopne
push
fisubrs
mov
inc
dec
pop
cltd
pop
dec
jge
push
cwtl
fnstcw
push
mov
bound
dec
arpl
push
xor
push
cs
fld1
pop
cwtl
insl
rclb
and
loopne
mov
add
sti
ljmp
test
xchg
in
jns
xchg
jnp
dec
sbb
cmp
loope
xchg
xchg
pop
mov
in
inc
cs
xchg
out
push
mov
cltd
sbb
imul
mov
dec
mov
clc
dec
sbb
push
inc
into
dec
cltd
aad
pop
fnstenv
push
mov
pop
add
adc
pop
js
cmp
jmp
lods
bound
jnp
movsb
or
pushf
mov
lock
adc
imul
jo
inc
dec
imul
push
mov
push
out
add
cmp
lret
xor
fistpll
cld
sarb
push
pop
mov
jb
push
push
arpl
pop
pop
data16
outsl
mov
mov
leave
add
cmp
cmp
xchg
mov
outsb
loop
rorl
sub
lods
aad
adc
in
icebp
xor
pop
push
lcall
lea
fsubs
into
push
pushf
dec
scas
call
and
cmp
test
pop
stc
cld
push
int3
pop
mov
mov
in
les
fldcw
leave
cld
or
inc
mov
jp
xchg
movsb
adc
loope
jnp
pop
mov
inc
ret
mov
test
pop
subl
xchg
sub
test
pop
roll
test
pop
xchg
mov
add
ss
mov
and
cmp
push
mov
shl
pop
lcall
negb
jne
push
xchg
xchg
testl
pop
daa
xchg
dec
test
and
icebp
xor
dec
in
sbb
test
bound
sub
pop
testl
imul
imul
lcall
out
fcmovbe
fstps
lret
jmp
inc
bound
data16
rorl
outsb
pop
fldcw
push
es
mov
aas
mov
pop
mov
mov
testl
pop
jmp
ljmp
ret
out
js
mull
cmp
xchg
jmp
dec
jne
fldenv
gs
pop
cmp
movsb
clc
test
outsl
aas
and
ret
int3
or
ret
cmp
lock
outsb
push
sti
loop
sbb
jg
push
clc
and
sarb
add
js
xor
push
daa
lods
dec
lret
push
inc
adc
sub
ficompl
leave
jp
push
dec
pop
jecxz
pop
cmp
mov
loope
jge
pop
push
cmpsb
cwtl
mov
pop
mull
pop
and
push
leave
cmp
imul
scas
imul
xor
mov
adc
in
frndint
inc
js
scas
push
lcall
divl
mov
pop
outsl
imul
push
inc
call
ja
push
pop
inc
fidivrs
or
add
out
cltd
insl
lcall
ja
loopnew
ja
pop
lahf
jnp
xlat
mov
idivb
or
test
pop
pop
repnz
daa
lret
cmp
les
sbb
sbb
pop
mov
or
xlat
fsubs
push
loope
push
stos
pop
movsb
lods
mov
push
ss
test
inc
lods
sbb
ficoms
or
in
mov
adc
into
push
xchg
and
rep
lcall
out
popf
cltd
sbb
test
jl
mov
stos
loopne
sbbl
pop
jnp
inc
insl
mov
pop
movsl
out
in
inc
mov
ret
sbb
push
add
mov
lock
cltd
rclb
pop
scas
sbb
cld
sub
cmp
gs
xchg
jl
mov
xor
mov
insb
pop
pop
xchg
cmp
xor
pop
testb
cli
pop
shll
or
jns
and
pop
jno
test
push
xchg
pop
lea
pop
push
fwait
add
jns
mov
or
xchg
mov
adc
test
mov
xchg
dec
push
out
cmp
pop
ss
enter
jo
cwtl
jg
pop
imul
push
popl
sarl
add
adc
inc
nop
pop
movsl
adc
lret
jb
pop
push
lock
inc
out
das
inc
pop
mov
sub
jle
and
push
dec
popf
rclb
aas
pop
into
imulb
push
xor
or
mov
iret
cmc
mov
cltd
add
loope
pop
std
dec
mov
pop
call
ljmp
in
shl
mov
fldenv
es
cs
or
mov
push
pop
push
and
inc
frstor
push
fnstenv
push
movsl
dec
or
pop
cltd
fidivl
cmp
in
jmp
pop
loop
mov
aaa
inc
ja
testl
fwait
ljmp
mov
pop
push
aam
stc
loope
mov
outsl
fcomps
clc
cmp
dec
mov
pop
xchg
mov
xlat
es
int
xlat
inc
mov
jle
cmp
or
fsts
mov
pop
push
test
pop
stos
fsts
inc
adc
pop
jp
xor
loop
gs
inc
xchg
enter
lods
xchg
mov
sarl
or
imul
mov
inc
mov
pop
fwait
in
loopne
repnz
mov
xor
pop
js
lret
fwait
mov
out
pop
popf
out
or
lcall
insl
xor
pop
lock
daa
pop
dec
jae
sbb
xchg
ss
add
pop
es
and
arpl
mov
mov
add
mov
push
rcrl
pop
rcll
xor
pusha
pop
aas
adc
xlat
stos
cltd
add
xor
lock
movsl
lcall
mov
jns
cltd
inc
or
gs
adc
lods
pop
add
pop
pop
push
call
call
ss
mov
and
loope
jge
and
pop
mov
push
xchg
outsb
jmp
xchg
mov
mov
addr16
mov
xor
popa
jnp
mov
shrl
push
xchg
mov
mov
push
mov
fwait
rcll
dec
imul
sarl
push
xchg
push
adc
cmp
into
push
xchg
leave
jmp
inc
shrl
push
push
into
ss
push
push
xchg
inc
jmp
mov
lods
insl
and
lods
cmp
int3
ds
cmp
adc
cmp
pop
push
sbb
push
fsubs
cmp
pop
push
push
imul
cmp
xor
inc
pusha
daa
adc
sbb
or
and
std
add
aam
call
icebp
leave
push
adc
adc
mulb
push
and
push
faddl
rolb
aam
call
jb
icebp
fists
adc
add
add
add
add
add
add
add
int3
loopne
and
icebp
in
sub
sub
loop
loop
loop
and
loop
loop
loop
fsubp
mov
icebp
inc
push
sub
inc
stc
inc
std
inc
faddl
ret
call
stos
and
sahf
push
add
add
add
add
add
add
add
pushf
loopne
popa
stos
mov
icebp
inc
push
and
inc
faddl
inc
aam
call
lcall
mov
icebp
in
stc
loop
loop
loop
loop
loop
loop
sub
cltd
ret
adc
mov
icebp
inc
push
std
inc
faddl
inc
aam
call
cmp
fstps
mov
or
adc
call
test
imul
icebp
push
rolb
aam
call
xchg
cmp
mov
dec
ret
dec
adc
mov
or
sub
loopne
in
pushf
mov
dec
cltd
ret
adc
mov
icebp
inc
push
call
xor
mov
dec
ret
dec
adc
mov
or
test
insb
cmp
mov
pop
ret
cltd
adc
and
push
loopne
in
push
sahf
xor
inc
mov
sbb
lods
sub
add
outsb
hlt
add
rolb
push
push
cmp
cltd
imul
pop
pop
cmp
xchg
cli
pop
stc
nop
cmp
xchg
test
cmpsl
fnstcw
pop
push
and
in
jne
push
out
cmp
jle
xlat
xchg
fnstsw
mov
fstl
out
les
and
loopne
fstpl
sbb
cwtl
fstl
pop
out
fstl
push
ret
cltd
push
lods
addr16
rcr
ret
cwtl
arpl
fwait
xchg
pop
xchg
aaa
cmc
pop
pop
xrelease
lds
enter
jb
push
pop
daa
mov
mov
fdivrl
cwtl
pop
jp
mov
xor
jl
cld
lret
popf
pop
scas
xor
lods
mov
gs
mov
movsb
daa
xchg
add
roll
ds
in
jmp
stc
dec
adc
push
cmpb
imul
lods
push
shufps
and
push
xchg
adc
or
loopne
lods
xchg
mov
sub
mov
adc
xor
xor
sbb
pop
inc
gs
jno
pop
mov
mov
sbb
pop
mov
sub
xchg
jae
push
pop
popa
jg
pop
imul
subb
push
dec
ljmp
lcall
jmp
mov
inc
pop
popf
cltd
push
and
push
lahf
hlt
aam
ror
daa
mov
mov
pop
mov
mov
add
fisubrl
sbb
xlat
pop
test
mov
jo
or
and
and
jmp
out
jl
cmp
pop
cmp
rorl
cmp
cmp
mov
aas
cmp
fwait
pop
sub
stos
sbb
gs
gs
int3
pop
and
lea
daa
leave
mov
push
hlt
push
cld
cmp
sbb
push
adc
sahf
pop
fwait
cli
aaa
pusha
pop
push
pop
xor
arpl
mov
test
xchg
imulb
inc
mov
ret
add
ja
mov
nop
and
pop
aad
and
outsb
pop
mov
cld
lods
mov
in
std
fsubrs
stc
sbb
loop
loop
pop
out
adc
rorl
out
adcl
lea
mov
pop
inc
xchg
fidivrl
add
mov
add
xlat
push
jl
mov
mov
pop
push
movb
push
mov
dec
jmp
aaa
je
pop
pop
dec
sbb
js
mov
movsb
lret
fs
stos
outsl
fidivl
mov
fldenv
adc
mov
out
aam
sbb
mov
and
sub
and
pop
movsb
pop
push
mov
cmpl
pop
cmp
addr16
out
test
lods
aas
add
xlat
movsl
inc
stos
pop
movzbl
aad
mov
push
fnstcw
ret
fmuls
pop
mov
mov
lods
loope
or
rclb
dec
pusha
sub
shlb
dec
rcll
and
xlat
push
mov
mov
ja
add
popa
mov
lock
aaa
jno
mov
out
lcall
push
repnz
inc
outsl
push
mov
test
and
in
adc
push
dec
pop
jge
sub
and
jo
test
sbb
pop
call
mov
stos
push
aaa
push
xchg
mov
jmp
jns
sbb
cmpl
out
inc
shl
push
call
inc
scas
jbe
pop
pop
in
inc
adc
add
arpl
mov
std
fimull
shr
rcrl
and
add
pop
cwtl
pop
fnsave
aaa
inc
insb
cltd
dec
adc
dec
mov
mov
and
pusha
mov
cmp
test
push
add
xchg
pop
cmp
pop
imul
pop
pop
or
push
fldenv
dec
mov
xor
rcr
push
icebp
pop
pop
pop
pop
push
inc
cltd
test
sahf
cmpsl
jge
xchg
sbb
pop
push
decl
push
and
jnp
xor
pop
mov
push
mov
imul
rolb
pop
nopl
adc
clc
jns
pop
mov
mov
cmp
and
push
pop
mov
and
or
push
inc
pop
test
dec
pop
cmpsb
addr16
inc
sub
pushf
jae
pop
sbb
pusha
pushf
aam
push
movsb
std
pop
adc
jp
sbb
xchg
cltd
xchg
pop
xchg
fildl
mov
mov
sti
push
xor
movsb
sbb
leave
mov
jb
add
add
das
pop
xchg
enter
xor
pop
cmpsb
gs
adc
std
pop
sti
stos
push
sbb
jne
mov
cs
xor
add
sbbb
movb
sbb
pop
and
popa
daa
insb
test
sbb
mov
dec
leave
cmp
pop
sub
sbb
fcompl
test
dec
xor
jns
js
pop
add
rcll
pop
stos
out
inc
inc
jp
adc
xchg
sub
inc
addl
pop
push
test
idiv
pop
xchg
xlat
and
lods
sbb
mov
sarl
pop
lods
xchg
insb
nop
adc
push
push
inc
sbb
aam
mov
cmc
sbb
add
negl
push
mov
sub
adc
inc
jns
pop
arpl
popf
movsl
sbbl
cmpsb
lock
in
enter
jne
jl
ss
pop
fdivrs
into
or
jb
cmp
pop
mov
adc
or
cwtl
mov
dec
mov
pop
out
call
dec
pop
xorl
inc
mov
mov
xor
mov
aas
lods
dec
fldpi
dec
pop
cs
stos
cmpsb
mov
fdivs
movsl
or
dec
xchg
call
ljmp
aaa
dec
mov
jns
xchg
arpl
cmp
stc
push
lock
pop
aas
mov
cld
scas
and
xchg
pop
jmp
test
sub
pop
sbb
mov
or
jnp
mov
pop
les
dec
jne
xor
mov
adc
push
xchg
sub
sub
cmpsl
pop
jmp
push
dec
pop
aam
and
stos
push
pop
int3
xchg
lods
or
daa
scas
sbbl
inc
push
fists
jle
pop
rcrl
pusha
push
out
cmovns
mov
inc
fists
pop
insb
dec
stc
dec
dec
fdiv
pushf
pop
stos
stos
xor
iret
push
fcompp
fmuls
sbb
scas
jecxz
lcall
fisubl
jbe
fistpl
pop
adc
inc
sbb
push
dec
mov
pop
data16
mov
inc
sar
push
xor
adc
mov
add
xor
add
sbb
frstor
sbb
ljmp
add
add
add
xor
sbb
nop
xor
add
sbb
pop
mov
add
sbb
outsb
mov
add
sbb
dec
sbb
setns
mov
setb
pushf
inc
not
mov
lea
push
call
notb
lds
mov
stos
in
xchg
push
lods
stc
mov
adc
push
mov
cli
cwtl
aaa
icebp
jmp
pop
push
nop
lret
inc
mov
cmp
cmp
and
dec
xor
mov
jmp
enter
pop
mov
mov
mov
adc
xchg
out
adc
pop
sub
sub
add
aad
pop
aaa
test
shll
lcall
rcr
stc
shrb
inc
pop
scas
mov
add
sbbb
push
lea
jne
pusha
xchg
call
pushf
mov
lea
call
call
push
call
cs
out
mov
movsbl
mov
bswap
mov
pushf
movb
pushl
ret
call
jmp
ljmp
add
jne
fstl
aas
mov
push
mov
jle
push
jl
cli
and
mov
or
or
push
pop
xor
and
test
popa
sti
stos
sbb
clc
fisttps
and
lock
adc
loope
mov
lret
push
dec
mov
xlat
push
mov
call
test
adc
xchg
or
xchg
aad
cmp
and
mov
loope
add
daa
mov
sub
movsl
cld
int3
aam
inc
fwait
mov
jmp
fs
jne
ror
aad
push
xor
aas
mov
shr
stc
add
ror
adc
mov
clc
pushl
jmp
mov
mov
mov
xorl
dec
lock
sti
mov
shrl
mov
repz
cmp
xchg
lret
inc
mov
sbb
cmp
cmp
inc
loopne
aam
ret
fidivrs
mov
cwtl
rorb
add
call
mov
movsb
xor
and
mov
fadd
xchg
lret
popa
xor
pop
push
in
jnp
add
lahf
and
mov
inc
sub
xlat
xor
mov
test
stmxcsr
inc
sbb
dec
lock
lods
mov
call
in
aad
or
loop
daa
adc
je
pop
in
push
jns
movsb
mov
add
lcall
mov
je
push
xchg
lahf
mov
xchg
jle
movsb
not
mov
mov
pushf
pusha
pushf
lea
jmp
push
lea
je
cmp
rcl
jmp
mov
pusha
cmp
and
cmc
test
jmp
setp
pop
bswap
call
pushf
inc
push
xchg
bsr
mov
cmp
dec
mov
jmp
mov
push
xchg
mov
aad
movl
lcall
leave
mov
dec
inc
out
imul
and
enter
fmuls
pop
adc
int
cmp
jle
jb
cmp
neg
neg
mov
cmc
stc
clc
test
call
add
pop
pop
jo
pop
insw
outsl
fs
test
cmp
cmc
cmp
call
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
aas
aas
xor
inc
pop
push
inc
pop
inc
pop
add
mov
mov
push
bt
test
pushl
mov
lea
je
setp
and
mov
mov
or
pushf
or
add
btr
pusha
mov
cmp
stc
mov
test
call
lea
je
sar
cmp
add
sub
not
mov
pushf
add
push
cmp
stc
mov
sub
jmp
call
pusha
shr
stc
test
cmpl
call
adc
mov
pop
adc
mov
dec
dec
mov
sub
add
scas
out
adc
jge
xor
out
pop
mov
imul
mov
fstps
lds
movsl
pusha
outsb
push
jp
repz
or
js
outsb
and
dec
popa
push
test
add
call
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
not
jmp
add
pop
insl
gs
imul
add
add
mov
sbb
push
setae
shrd
push
aad
push
or
push
bt
add
push
cwtl
aam
shl
add
push
rol
xchg
das
bswap
push
shrd
push
adc
shr
lahf
stc
lea
btr
call
push
call
mov
popf
inc
mov
add
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
lea
jae
pushf
stc
cmc
cmp
jmp
adc
dec
ret
xchg
mov
dec
sar
scas
test
push
dec
pop
cmpb
pop
rorl
jge
xlat
fadd
rorb
push
jbe
pusha
mov
mov
iret
fadd
cmpsl
mov
sub
sbb
or
ds
lock
xor
pusha
lea
jb
pushf
mov
pusha
mov
pushl
ret
call
mov
mov
and
mov
xchg
int
cs
mov
in
pop
enter
gs
imul
xchg
call
jno
insb
ret
xchg
mov
sbb
dec
test
push
pop
scas
cmpsb
inc
fwait
push
cli
pop
jg
sub
rorl
fcoml
mov
stos
out
lahf
into
in
int
cmp
add
addr16
or
fcoml
ljmp
sbb
pop
ds
and
movsb
add
or
in
jmp
ficoms
ret
std
mov
and
sti
pop
jg
or
imul
cs
xchg
lea
fldt
xchg
jb
inc
pushf
adc
je
sub
push
neg
dec
or
clc
fistpl
lods
cmp
pop
hlt
jl
mov
cmpsb
sbb
loope
insb
leave
mov
loope
lea
add
xor
mov
push
sbb
pop
xor
add
imulb
js
fwait
pop
add
jae
jb
je
add
je
add
or
ror
jmp
cmp
cmp
mov
call
pushl
pushf
lea
call
jmp
cmp
mov
pushl
lea
ja
cmc
imul
jmp
add
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
fs
jae
or
mov
xor
cmp
mov
or
mov
bt
push
push
sub
movb
repnz
pushf
pusha
lea
jne
test
mov
pusha
sub
jmp
add
dec
outsl
popa
fs
imul
add
mov
in
aad
push
push
popf
daa
dec
bound
mov
movsb
mov
js
mov
pop
adc
cmp
insb
jecxz
xchg
loope
dec
cs
inc
push
mov
adc
popf
mov
fsubrl
daa
and
int3
mov
push
insb
and
xchg
inc
nop
cmp
inc
iret
mov
push
in
inc
stos
adc
lret
popa
mov
jmp
es
cmp
sbb
clc
sarb
mov
shl
bsf
bts
sub
dec
sar
btc
shr
shr
call
mov
movb
lea
je
jmp
sub
cld
xchg
mov
lods
gs
xchg
push
mov
fstl
mov
dec
jbe
or
adc
call
jg
fcompl
mov
sub
call
or
aad
out
dec
icebp
les
or
mov
js
sbb
in
adc
sahf
ss
fistpll
or
cmp
and
push
in
jmp
ss
and
cs
xchg
xor
add
call
sbb
ss
icebp
mov
xorps
popa
pop
push
pop
loop
push
in
lods
loope
fwait
dec
and
or
push
pushf
dec
out
sbb
push
push
push
push
mov
or
popa
imul
mov
xchg
jle
pop
dec
cli
ret
fsubrl
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsb
push
gs
imul
sti
add
inc
and
sti
dec
mov
call
clc
add
pusha
lea
jmp
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
and
ja
inc
pushf
inc
push
inc
mov
call
call
adc
movsl
mov
fwait
sbb
fwait
xor
test
arpl
cltd
out
push
sub
ss
notb
push
mov
dec
push
push
sbb
and
ds
outsb
enter
push
cwtl
movsl
int
xor
jo
jae
jb
push
popa
insb
push
popa
addr16
add
inc
push
push
gs
imul
imul
inc
gs
outsl
imul
jbe
push
je
imul
add
jb
outsb
je
add
add
je
js
je
outsl
fs
jb
arpl
jae
lea
call
jmp
add
insb
jae
jb
insl
jo
inc
add
daa
mov
mov
add
or
push
call
pop
dec
mov
push
xchg
mov
nop
dec
add
ss
hlt
cmp
enter
sub
push
test
test
cmp
push
dec
add
or
jo
push
mov
sub
inc
cmp
scas
mov
cmc
push
out
cmpl
pushl
jmp
sub
bt
bt
pushf
movb
xor
clc
jmp
push
lods
sar
not
rol
and
sub
inc
ror
clc
cmc
xor
setne
pusha
rcl
setbe
ror
setl
stos
mov
seta
pushl
mov
lea
jmp
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
jo
pop
arpl
insl
outsl
fs
test
jb
or
add
push
ret
es
call
cmpsb
pusha
pusha
add
pushf
mov
movw
movb
lea
jmp
pushf
lea
jne
neg
pusha
shr
mov
cmp
pushf
add
test
call
push
call
pop
dec
ds
shll
and
add
push
lock
cmp
xor
lea
jnp
pushf
push
inc
lea
push
jmp
lea
je
adc
push
mov
btc
setae
setns
mov
test
test
stc
pusha
xor
bt
bt
movl
test
shr
jmp
pop
outsb
imul
mov
and
push
dec
or
les
sti
or
xor
std
pop
mov
fadd
sbb
test
pop
adc
jno
jmp
fiadds
rcrb
jno
xchg
stos
jg
xchg
sub
aas
data16
push
je
sbb
mov
mov
repnz
cmp
in
inc
in
jg
dec
adc
iret
ljmp
imul
stos
xchg
xchg
push
and
xor
loope
rcrb
je
add
jle
cmp
or
cld
mov
push
or
pusha
stos
jno
std
sub
sbb
sbb
cs
arpl
cmp
inc
test
pop
fwait
jmp
lret
scas
out
repnz
push
les
bound
mov
mov
xchg
ror
inc
or
sbb
cmp
or
stos
repnz
push
jbe
jo
mov
lods
xchg
cltd
xor
lahf
ss
lret
scas
push
sahf
xor
daa
sti
xchg
mov
jb
fidivs
sub
lock
movsl
stos
sbb
int3
mov
and
ret
jl
icebp
adc
cmp
in
sbb
mov
sbb
popf
cmpsl
mov
testl
std
aam
mov
aas
in
fimull
mov
cmp
push
mov
cmp
cmpsl
insl
es
sbb
cwtl
loope
sbbl
dec
pusha
push
stos
rorl
lods
inc
pushf
je
in
cltd
mov
and
jmp
shrb
lea
jne
add
adc
sub
dec
push
push
inc
push
push
cs
insb
add
and
ja
pushf
mov
lea
jb
clc
cmp
push
cmpb
call
clc
sub
pushl
pushf
mov
call
call
push
lea
jne
add
xor
stc
aas
sub
mov
shl
shl
add
call
add
inc
jb
popa
je
push
jb
arpl
jae
add
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
in
xchg
mov
pop
push
or
cmp
push
fistps
push
das
lret
cwtl
cs
shll
inc
and
rcr
sbb
sub
lcall
push
jo
push
lea
add
popa
jb
push
gs
imul
jbe
test
push
cmc
cmp
bsr
mov
push
cmp
jmp
call
cmc
call
not
mov
movzbw
call
mov
jmp
push
call
bound
sti
incl
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
fs
insb
outsl
outsb
gs
je
add
push
je
jb
push
gs
imul
inc
imul
gs
add
mov
cmc
xchg
mov
push
dec
inc
mov
pop
pop
es
out
lods
push
xchg
shll
xor
repnz
xor
in
jp
dec
and
fisubrs
xchg
and
adc
xchg
in
in
int
flds
dec
sub
xchg
mov
es
push
fildll
mov
int3
adc
mov
mov
aaa
stc
icebp
jns
enter
push
outsb
add
js
imul
add
pop
pop
arpl
inc
imul
inc
insb
outsl
jae
push
gs
imul
insb
add
mov
std
mov
iret
or
mov
rorl
inc
int
fcomp
cmc
cs
cltd
aas
fdivr
iret
push
lds
mov
jl
sub
mov
xchg
push
call
pop
sbb
mov
je
cmpsb
pushf
push
mov
mov
adc
pop
clc
enter
scas
cltd
leave
gs
jnp
fcoml
sub
popa
int
xchg
mov
mov
stos
or
mov
shll
hlt
xorb
movsl
cmp
stos
repnz
popa
cmp
cmpsb
pushl
xchg
cmpsl
popf
inc
push
imul
xchg
mov
arpl
nop
enter
sub
loope
in
jne
mov
jo
jnp
jae
fcomp
mov
out
sbb
jnp
fsubrs
sbb
into
test
popa
mov
loope
cmp
js
enter
mov
jmp
xchg
adc
xor
hlt
xchg
mov
ja
data16
pop
repnz
xor
out
cmpb
or
add
stos
int
mov
inc
pusha
aas
js
sub
push
fsts
lea
popa
inc
xchg
cmp
cmp
push
test
dec
mov
data16
push
popf
test
rorb
sti
mov
pop
lock
outsb
xchg
jge
inc
push
adc
les
aad
ret
imulb
pop
popf
mov
xor
shl
mov
into
xchg
repnz
fisttpl
loope
cwtl
popf
or
insb
cmp
mov
mov
mov
pop
add
loop
std
insl
push
cli
push
cs
push
lret
sti
mov
loope
sbb
clc
xchg
popa
in
cwtl
push
dec
or
fidivrs
iret
stos
and
mov
insb
mov
or
imul
test
jge
arpl
jno
lock
arpl
scas
xchg
jp
sub
dec
mov
leave
push
cmpsl
mov
add
jo
pop
pop
imul
add
and
jb
dec
and
add
aad
lea
je
pusha
jmp
pushf
push
xchg
and
lea
pushf
bt
push
stc
mov
test
pushf
mov
clc
clc
pusha
or
call
add
inc
gs
imul
push
jo
arpl
js
add
test
lcall
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
movsl
lea
mov
add
rorl
xor
pushf
cmc
mov
lea
jno
ror
call
push
pusha
jmp
into
mov
xchg
adc
lock
pop
xchg
jle
je
push
aas
xchg
mov
test
cltd
xchg
dec
les
xlat
in
cmp
dec
and
jge
adc
mov
stos
adc
rorb
mov
cld
lock
sahf
clc
push
mov
push
sbb
scas
sbb
sbb
test
popa
sbb
movsb
dec
inc
adc
or
pop
push
mov
enter
push
addr16
pop
scas
inc
pushf
mov
ljmp
imulb
push
cwtl
xor
pushf
call
pusha
lea
jae
pushf
lea
jmp
add
push
gs
fs
imul
jns
push
jae
add
push
pushf
pushf
shl
movb
not
lods
call
push
call
sahf
cmp
add
add
jne
pushl
pushl
ret
fisubrl
loopne
ret
mov
adc
jb
outsb
mov
jae
fwait
pop
lods
push
mov
mov
mov
pop
lahf
ss
dec
icebp
sub
fcoms
repz
mov
sbb
out
push
cwtl
jp
or
lea
pop
sub
add
imul
jb
gs
inc
and
or
inc
and
pushf
pusha
pushl
ret
xchg
xchg
push
lock
mov
pop
rorl
pop
repz
rclb
sahf
mov
notl
bound
dec
lret
pusha
fstpt
imul
mov
mov
cwtl
jb
iret
inc
push
jle
mov
into
test
mov
sarb
mov
lahf
push
call
add
pop
outsl
outsb
gs
je
add
inc
jb
gs
jae
jb
push
popa
insb
push
popa
addr16
lea
jae
cmc
cmp
push
push
jmp
mov
pushf
lea
movb
jmp
movl
pushl
call
push
call
call
pop
pop
jae
je
popa
jo
pop
je
jo
add
sub
jmp
in
repz
mov
sub
jne
pop
outsb
jb
sbb
inc
xchg
loop
dec
dec
leave
orl
inc
in
jle
mov
sub
pop
dec
mov
cmpb
repnz
pop
ja
sub
pop
cmc
rorb
into
scas
mov
sub
lahf
in
bound
arpl
pop
pop
mov
and
xchg
mov
pushf
repz
mov
rorb
add
arpl
lahf
sbb
arpl
lret
outsl
addr16
or
sub
std
sub
cmp
pop
lds
sub
adc
pop
pop
sbb
push
sbb
repnz
das
push
jns
inc
shr
mov
pop
idiv
inc
inc
scas
repnz
mov
cmp
loopne
or
or
jbe
sub
sbb
call
mov
aad
add
adc
pop
mov
mov
inc
lea
push
popa
sbb
cmp
jne
mov
xchg
xor
movsb
cmp
call
daa
mov
dec
mov
cwtl
imul
sbb
out
dec
loope
mov
mov
sbb
movsb
sub
lods
inc
pop
mov
div
push
mov
lea
arpl
add
adc
in
fmull
xor
xchg
mov
jmp
fwait
xchg
lret
adc
andl
scas
jne
and
dec
jb
sub
push
mov
cmp
sub
jle
jae
sub
pop
add
and
sub
int3
xchg
and
xor
xchg
stos
jno
sbb
cmpl
pop
push
inc
in
xchg
mov
jg
scas
addr16
fsubs
jb
pop
sub
sahf
mov
lock
lea
cmp
sub
into
add
pusha
cmp
xlat
out
xchg
push
inc
xor
or
cmp
fdivs
inc
pop
insb
movsb
inc
jmp
pop
punpckldq
repz
dec
ucomiss
mov
xor
aas
js
cld
sbb
popf
mov
mov
add
stc
mov
clc
pop
sbb
dec
sbb
or
cltd
jno
and
shlb
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
fs
imul
setno
mov
pop
mov
movsbw
not
lea
mov
call
add
pop
jae
jb
arpl
add
dec
adc
cmp
jmp
lea
ja
mov
bsr
sbb
add
shrd
shr
xor
bts
mov
btr
and
rol
add
lea
or
mov
clc
test
cmp
jmp
push
call
divl
lea
add
pusha
sub
clc
pushf
pushl
popl
cmp
cmp
pushf
lea
ja
call
push
push
xor
xor
fs
insb
add
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
mov
sbb
add
sbb
sbb
and
sbb
cpuid
sbb
add
sbb
stos
sbb
sbb
add
imul
pop
jno
add
mov
sbb
leave
lods
sbb
in
imul
push
popf
sbb
jo
sbb
gs
add
lahf
sbb
push
test
add
sbb
and
add
sbb
add
sbb
aam
sbb
lcall
add
popf
sbb
xor
sbb
inc
mov
add
sbb
add
add
outsl
popf
sbb
and
sbb
add
mov
sbb
shrb
add
inc
sbb
lods
mov
add
scas
sbb
sub
add
sbb
xchg
mov
sbb
or
sbb
mov
sbb
push
sbb
mov
test
add
mov
sbb
dec
outsb
sbb
in
sbb
xor
add
mov
sbb
das
pushf
sbb
pushl
add
popf
sbb
std
fwait
sbb
add
add
add
add
addb
add
cmc
jo
add
add
or
add
jae
add
push
add
addb
add
push
outsb
sbb
push
cmp
add
sbb
movsb
cmpsl
sbb
sbb
mov
sbb
mov
aaa
sbb
push
xor
add
test
add
test
add
mov
add
pop
mov
sbb
jno
sbb
sbb
sbb
add
add
cmp
sbb
add
add
push
jmp
fdivr
out
xchg
mov
jbe
fistl
pop
lods
adc
adc
sti
pop
xchg
insb
xor
cmpsl
cmp
repnz
or
test
fsubrs
or
mov
fdivs
jp
out
xlat
cs
decl
rcll
into
sbb
ds
push
test
push
das
int3
adc
popa
aas
or
mov
xchg
mov
popa
sbb
jle
or
pop
outsl
mov
dec
pop
pop
frstor
clc
push
dec
cmp
repz
fcoms
xor
mov
iret
cmpsl
unpckhps
cmpsb
cltd
push
cs
pushf
xchg
icebp
mov
dec
je
xchg
xchg
iret
mov
mov
cmpb
aas
sub
xor
dec
xchg
xor
cmp
lock
xor
imulb
cmp
fadds
mov
mov
sahf
xchg
mov
jne,pt
xchg
add
mov
push
ds
xor
gs
pop
dec
pop
dec
lods
aam
cmpsb
loope
lret
adc
es
add
add
cs
inc
sti
fmul
outsl
or
dec
xor
pop
rolb
fimull
inc
mov
shlb
adc
sub
call
and
mov
leave
push
pop
int
ja
cmpl
add
mov
fnsave
int
xor
cmp
popf
or
ror
xor
mov
stc
stc
pushf
cmpb
movw
pusha
call
inc
mov
inc
ror
xchg
aas
mov
test
rcr
mov
test
jmp
add
push
push
inc
push
arpl
mov
push
lea
call
stc
call
pusha
movw
lea
jne
jmp
push
call
push
dec
call
add
pop
pop
addr16
popa
imul
call
add
inc
gs
jb
jbe
push
jns
gs
add
add
js
gs
pop
push
gs
add
arpl
xchg
mov
ret
mov
mov
mov
push
adc
push
mov
xchg
movsl
jbe
test
fcoml
adc
xlat
mov
out
push
test
inc
sbb
fidivl
daa
pop
add
push
gs
imul
outsl
arpl
jae
add
pop
jo
jb
arpl
insb
add
mov
lcall
btr
ror
shl
mov
mov
jmp
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
test
call
mov
jmp
stc
dec
dec
jmp
mov
add
sub
pop
pop
hlt
test
es
sub
pushf
pop
es
mov
xchg
das
dec
add
icebp
out
jo
sbb
pushf
xchg
outsl
mov
lods
in
cmc
into
test
sbb
mov
cli
xchg
insl
enter
mov
jbe
and
adc
ret
pushf
das
push
mov
mov
mov
cmp
jb
popa
int
addr16
test
das
lds
jge
mov
fs
clc
lahf
jne
jno
inc
test
ss
in
shrb
call
insl
sti
mov
push
out
jmp
mov
cmc
movw
xchg
bsr
shl
shl
push
sbb
push
sar
mov
shld
mov
jmp
and
dec
mov
and
sar
cmc
shr
sub
call
mov
bt
clc
test
call
testl
scas
test
popf
xchg
dec
pop
cmp
jmp
pop
jns
pop
jge
ss
fmul
cmpsb
add
xlat
fsubs
mov
notl
push
sub
lods
icebp
or
leave
add
clc
test
bswap
sub
btr
dec
shl
shr
bsf
mov
shr
clc
bts
add
cmp
add
seto
and
bt
mov
pusha
cmp
clc
shr
jmp
add
push
imul
insb
insb
outsl
arpl
adc
loop
xchg
mov
fistl
dec
or
js
sub
iret
les
jg
fdivrs
sbb
adc
xchg
sbb
pop
push
iret
fcomps
jge
mov
rcr
scas
pop
mov
mov
mov
add
pushl
pusha
movb
lea
jmp
add
push
jne
jb
push
gs
imul
jne
add
add
faddl
add
xchg
dec
pop
in
mov
mov
xchg
adc
aad
addr16
repnz
mov
lods
add
inc
cmp
cld
scas
push
or
ss
xchg
xor
xchg
mov
push
popf
imul
xlat
cmp
daa
lret
shlb
and
imul
enter
mov
cmpsb
ds
das
pop
lahf
imul
data16
xor
adc
xchg
fistpl
popa
orl
fucomi
cmp
fsubs
bound
push
push
mov
js
jg
or
in
xor
push
cmp
cmp
fwait
popa
pop
subl
das
xchg
push
stc
stos
add
rorl
mov
mov
mov
mov
loopne
gs
pop
mov
lods
jo
imul
pop
adc
mov
inc
or
xor
mov
loop
xchg
in
test
adc
pushf
lea
push
imulb
push
fdivs
sar
sub
shl
lea
add
rcr
mov
neg
sar
sar
mov
stc
repnz
jg
push
lea
jne
not
pusha
movb
pop
not
pushf
movsbw
mov
jmp
call
cmp
mov
lea
jbe
rcr
and
xchg
test
mov
lea
ror
cmc
movsbw
add
cmp
rcl
mov
adc
push
add
neg
movl
lea
test
pushf
call
bt
clc
mov
or
add
pushl
add
inc
mov
jmp
push
call
mov
sbb
leave
call
clc
stc
not
call
jmp
clc
pushf
cmp
push
lea
je
pushf
cmp
stc
clc
cmp
pushf
lea
je
pusha
pusha
lea
jmp
hlt
or
dec
cmpl
and
leave
call
sbb
lea
std
mov
aad
fists
jne
popa
int
popa
or
xchg
addr16
test
mov
jne
test
or
leave
mov
lahf
jbe
jmp
cmpsl
popf
pop
mov
adc
add
imul
fs
add
inc
gs
gs
push
gs
imul
out
mov
sub
sbb
or
in
movsb
pop
xlat
dec
add
mov
push
popf
fsubrl
in
sub
movsl
rclb
imul
std
xchg
ljmp
gs
xor
fs
insb
add
add
je
imul
gs
js
add
jo
imul
pop
imul
insl
add
mov
or
add
lahf
lea
push
jmp
add
popa
je
insb
add
add
imul
mov
movsl
dec
test
xchg
or
or
and
xchg
pop
pop
mov
jg
mov
xor
xor
loopne
shr
inc
jno
add
gs
je
dec
jne
gs
add
mov
or
add
mov
pop
and
pusha
lea
call
call
sub
ror
movsbl
cmc
ror
bsf
and
call
mov
push
pushf
pushf
movb
lea
jmp
xchg
bswap
mov
not
mov
jmp
sub
jmp
mov
test
add
bt
bt
neg
call
pushl
mov
pushf
lea
jmp
cmc
pusha
sub
pushf
shl
call
sub
pushf
mov
cmc
stc
stc
jmp
test
shl
mov
clc
sub
test
pusha
cmc
movb
add
call
mov
xor
mov
push
mov
jmp
pushl
mov
pusha
pushf
popl
push
pushl
popl
movl
lea
jmp
pushf
call
mov
jmp
pushl
popl
push
pushf
movb
lea
jmp
pushf
setae
mov
pushl
pusha
mov
pushl
pushf
pushf
pushl
lea
jmp
jmp
pusha
clc
mov
cmp
cmp
test
pushf
add
call
jmp
jmp
stc
lea
jnp
add
pusha
mov
pushf
pusha
movw
lea
jmp
pusha
xor
push
call
and
jmp
mov
pusha
push
lea
jmp
xor
or
call
aaa
dec
xchg
sar
mov
jmp
jmp
clc
add
cmc
test
push
shrd
push
pusha
mov
mov
jmp
mov
pushf
pusha
lea
jmp
cmp
add
cmp
pusha
push
test
pushl
popf
pushl
pushf
pushf
pushf
lea
jmp
call
aas
neg
inc
shl
movzww
jmp
xor
daa
lahf
mov
shr
call
clc
setle
call
movsbw
bswap
pushf
mov
pushf
push
mov
pushf
mov
pushf
pushl
push
lea
jmp
pushf
mov
jmp
mov
movb
pushf
popl
push
pushf
pushl
popl
push
lea
jmp
movzbw
mov
lea
pushf
pushf
popl
lea
call
clc
cmp
call
shr
mov
movsbw
bsr
add
shl
sub
rol
call
call
cmc
mov
sub
mov
pushf
mov
mov
movl
movb
movw
lea
jmp
pushf
mov
pushf
pushl
movw
pushf
lea
jmp
mov
mov
movb
push
lea
jmp
push
pushl
popl
test
pushf
jmp
mov
push
call
push
push
push
inc
pushl
mov
movw
movb
lea
jmp
mov
mov
pushf
mov
lea
jmp
inc
btr
cmp
rol
not
mov
bt
clc
clc
add
call
pushf
popl
pushl
push
pushl
popl
push
movb
movb
pushf
lea
jmp
stc
sub
mov
mov
jmp
cbtw
call
push
pushf
pushf
pusha
pushf
lea
jmp
call
mov
clc
sub
cmp
stc
shl
jmp
lea
je
pushf
mov
jmp
call
movb
pushf
pushl
popl
pushf
movb
lea
jmp
stc
rol
xchg
xor
mov
mov
not
mov
cmp
push
not
pushl
test
cmp
cmc
not
clc
sub
mov
stc
pusha
and
pushf
push
jmp
pusha
mov
mov
mov
pushf
pushl
pusha
mov
lea
jmp
das
rcl
movzbw
shl
mov
test
mov
clc
pusha
add
jmp
jmp
clc
movsbw
not
pusha
sub
jmp
lea
jl
push
pusha
rol
call
pushf
popl
push
pushl
pusha
pushl
popl
push
pushl
lea
jmp
das
aas
pushf
lea
movw
pushf
test
cmp
mov
pushf
movb
mov
lea
ja
btc
mov
sub
lea
shl
bsr
bsf
bsr
sub
mov
shld
lea
ror
rol
bsr
call
cmp
stc
cmc
not
pusha
pushl
clc
call
pushf
popl
push
pusha
pushl
pushl
popl
pushl
pushl
push
lea
jmp
test
pusha
mov
pusha
push
sub
movl
lea
jmp
movb
ror
cmp
xor
test
mov
pushf
sub
jmp
and
push
bts
sub
mov
call
lea
stc
cwtl
clc
clc
sub
jmp
call
jmp
pushf
lahf
mov
pusha
pushl
ret
push
pusha
pushf
push
call
pusha
call
mov
jmp
jmp
rol
pushf
sub
push
mov
cmc
neg
test
cmp
xor
call
lea
neg
rdtsc
pushf
cmp
push
pushf
sub
jmp
push
clc
movb
sub
test
shr
mov
call
btr
jmp
pushf
mov
push
push
mov
mov
mov
push
pushf
pusha
lea
jmp
push
movb
pushf
popl
jmp
mov
mov
push
pushl
movb
lea
jmp
xadd
xor
rcr
not
mov
pushf
stc
mov
pushf
jmp
jmp
add
pushf
pusha
mov
movb
pushf
pushf
lea
jmp
jmp
mov
call
cmc
mov
and
pusha
add
pusha
setl
setns
mov
mov
call
mov
shr
mov
movw
bt
add
jns
popf
pushf
push
pushl
movb
lea
jmp
pusha
call
cmc
push
xor
cmc
push
bt
cmp
sub
pusha
pushl
call
mov
push
pushf
lea
jg
pusha
pushf
popl
push
pushf
pusha
lea
ja
popl
push
push
lea
jmp
push
pusha
pushl
popf
push
movb
push
push
lea
jmp
mov
and
cmp
neg
xor
bswap
call
sub
mov
jmp
jmp
pusha
inc
pushf
bt
mov
sub
movb
movb
bt
rol
bt
test
add
jo
add
pushf
cmc
cmp
sub
push
push
pushl
push
mov
pushf
pushf
pusha
lea
jmp
pushf
pusha
pushf
popl
jmp
mov
pushf
push
lea
jmp
cwtl
cmp
sub
jmp
call
jmp
pushf
popl
movb
pushl
popl
pushl
pushf
movl
lea
jmp
pushf
pushl
pushf
mov
mov
lea
jmp
pushl
popl
pusha
push
lea
jmp
lea
cpuid
clc
push
bt
sub
jmp
pushl
mov
mov
lea
jmp
bsf
sub
dec
das
mov
bsr
bswap
rcl
mov
mov
neg
and
cmc
mov
clc
jmp
pushf
mov
pushf
mov
call
mov
pushf
jmp
pusha
movb
movb
mov
pusha
pushl
push
push
mov
pop
pop
pushf
mov
movsbl
lea
mov
movzbw
movsbl
mov
mov
mov
lea
jmp
rdtsc
btc
mov
xor
neg
btc
and
mov
pusha
add
movb
mov
pusha
movb
pushf
push
lea
jmp
rol
cmp
sub
clc
jmp
movb
pushl
mov
push
lea
jmp
jmp
mov
pushf
mov
mov
lea
jmp
bts
mov
rcr
or
add
call
call
call
pusha
shr
jmp
jmp
not
mov
cmc
bt
and
pushf
push
mov
mov
jmp
movb
bt
ror
mov
not
jmp
mov
pushf
pusha
pusha
lea
jmp
push
pushl
jmp
mov
push
movl
lea
jmp
pushf
push
mov
pushf
push
movb
lea
jmp
pusha
call
rol
setle
jmp
movb
pushl
popl
pushf
push
lea
jmp
pushf
movl
mov
push
pusha
lea
jmp
mov
pushf
lea
lea
jg
pop
pusha
mov
pushl
ret
rcr
mov
cmp
pushf
clc
lea
jle
not
jmp
mov
push
pushf
call
sub
call
pushl
mov
lea
jae
pushf
mov
pusha
lea
jmp
add
cmc
clc
bt
pushf
neg
jmp
push
call
jmp
jmp
call
clc
sub
and
and
mov
cmp
push
movb
sub
movb
jmp
add
jmp
push
mov
movw
jmp
pusha
call
mov
xchg
movzbw
mov
push
bswap
mov
xchg
bswap
mov
pusha
cwtl
mov
lea
movb
lahf
jmp
test
bt
xor
call
mov
mov
pushf
movb
lea
jmp
cwtl
mov
cmp
pop
rol
shr
add
shld
pop
std
rcl
das
pop
shr
mov
pushf
pushl
popf
call
sub
aad
mov
setge
mov
shl
inc
shl
mov
pushf
add
pushf
call
pusha
pushf
lea
not
clc
ror
bsr
shld
btc
xor
shr
bsr
pushf
bsf
mov
bt
cmc
cmc
mov
add
call
movb
jmp
mov
pushf
pushf
pushf
lea
jmp
sar
mov
lahf
clc
mov
test
jmp
pushf
mov
pusha
pusha
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
movb
mov
lea
jmp
pushl
popl
push
push
mov
lea
jmp
pushf
popl
mov
push
pushl
popl
movb
mov
lea
jmp
push
mov
mov
lea
jmp
jmp
rcr
xadd
cltd
aad
mov
movsbw
stc
push
mov
xor
mov
clc
mov
cmp
add
jmp
pusha
jmp
bswap
aas
seta
ror
notl
clc
ror
push
pusha
mov
clc
movb
test
movl
sub
pushf
and
pushf
pushf
movb
pushf
pushf
popl
jmp
cmc
rol
cmp
push
sub
pusha
jmp
mov
bswap
movsbw
xchg
movzbw
setle
movsbw
pushf
pushf
popl
lea
rcr
or
btc
xchg
mov
movsbw
stc
or
pushl
popl
test
or
movl
setbe
shld
sar
mov
xadd
sar
sub
lea
not
bsf
dec
pushf
dec
and
lea
cmp
shr
sub
xor
call
cwtl
shld
mov
inc
cmc
call
xchg
bswap
mov
not
bswap
call
mov
mov
push
lea
jmp
call
pusha
sub
call
pushf
stc
bt
sub
clc
push
test
sub
test
mov
cmc
test
bt
mov
lea
mov
sub
push
push
call
not
pop
movzbw
mov
setno
xchg
jmp
jmp
adc
shl
test
bsf
mov
shrd
mov
bt
cmc
push
add
call
pusha
mov
pushf
pushf
pushf
jmp
and
dec
movzww
pusha
xor
jmp
pushf
popl
pushf
call
pushf
push
mov
pushf
lea
jmp
mov
call
pusha
mov
movb
pusha
lea
jmp
shl
ror
neg
seta
mov
sar
shl
mov
jmp
lea
push
mov
bswap
mov
call
mov
pushf
lea
jmp
inc
sar
movzbl
clc
clc
cmc
add
cmc
neg
call
push
mov
pushf
lea
jmp
jge
push
mov
movb
mov
pusha
pushf
lea
jmp
pushf
test
add
clc
bt
pusha
call
pushf
call
mov
pushf
lea
jmp
jmp
call
pusha
mov
push
pusha
add
push
pushl
push
lea
jmp
push
push
pushl
popl
movl
push
push
pushl
lea
jmp
mov
pusha
pushf
push
pushl
lea
jmp
pushf
movzbw
setg
mov
mov
stc
mov
cmp
sub
pushf
stc
shl
jmp
clc
mov
clc
sub
pushf
movb
push
push
lea
jmp
pushf
mov
mov
pushf
pushf
call
add
add
cmc
cmc
push
stc
shr
pushf
mov
movw
jmp
jmp
cmp
mov
pushf
add
call
neg
bsr
btr
shr
neg
xor
shrd
sub
bts
bswap
setge
movzbw
ror
bsf
jmp
push
movb
mov
push
lea
jmp
pusha
jmp
pushf
popl
call
push
call
mov
pusha
call
pushf
popl
movl
pushf
pushl
popl
mov
mov
movw
mov
lea
jmp
inc
clc
rol
call
push
pushf
popl
mov
push
pushl
popl
pushf
movw
movb
lea
jmp
jmp
pushl
pushf
pushl
popl
push
movb
mov
push
lea
jmp
or
shld
mov
mov
jmp
cld
pusha
rep
inc
shl
call
shld
mov
push
mov
pushf
push
pushf
popl
pusha
jmp
pushf
pushf
popl
push
pushl
popl
movb
pushf
push
lea
jmp
bt
sub
cmp
add
jmp
mov
mov
pushf
movb
mov
pushf
lea
jmp
das
lahf
clc
push
mov
pusha
mov
bt
call
call
cwtl
mov
pusha
add
push
call
clc
cmp
jmp
mov
btr
shr
rcr
xor
pushf
jmp
pushl
push
dec
stc
lea
jbe
push
cmc
xor
clc
sub
jmp
call
shl
mov
mov
call
movb
movb
pushf
popl
mov
mov
pushl
popl
pushf
pushf
movb
lea
jmp
sub
stc
clc
sub
jle
test
shr
pushf
pushf
mov
call
pushl
movb
mov
pushf
pushl
ret
mov
filds
daa
mov
fbld
mov
fistpll
mov
fistps
mov
fbld
mov
fucomip
cmp
fbld
mov
fbld
and
fisttps
and
push
mov
filds
daa
mov
fists
and
filds
and
filds
mov
fisttps
push
mov
fists
and
fists
and
fists
and
fists
and
filds
cmp
fildll
sub
filds
push
mov
filds
push
mov
fisttps
mov
fcomip
and
fcomip
and
fbld
cmp
fists
mov
fisttps
and
fisttps
mov
fisttps
mov
fisttps
mov
fisttps
mov
fisttps
push
mov
filds
mov
fisttps
and
fistpll
sub
fistpll
mov
fbld
mov
fbstp
cmp
filds
push
mov
fistpll
push
mov
fbld
mov
filds
sub
fistpll
mov
fcomip
and
fistpll
push
mov
filds
cmp
push
mov
fbld
push
mov
fbld
mov
fildll
daa
mov
fists
mov
fisttps
and
fbstp
es
fistps
and
fildll
sub
fisttps
cmp
and
mov
fbld
mov
fisttps
and
filds
push
mov
filds
and
fistps
and
fistpll
and
fbstp
cs
fbld
and
fildll
sub
fistpll
push
mov
ffreep
and
fbstp
daa
mov
fists
and
fists
and
fists
and
fists
and
fbld
mov
filds
push
mov
fildll
push
mov
fcomip
and
filds
push
mov
fistpll
and
fistpll
mov
fistpll
mov
fucomip
cmp
fistps
mov
fbld
mov
fisttps
mov
fisttps
mov
fisttps
mov
fisttps
mov
fisttps
and
fistps
mov
fbstp
daa
mov
fildll
sub
push
mov
and
mov
fbld
mov
fisttps
mov
fistpll
das
mov
fistpll
and
fisttps
and
fucomip
cmp
filds
push
mov
fistps
sub
fistps
and
fisttps
and
filds
daa
mov
filds
and
fists
cmp
filds
das
mov
fistps
and
fistpll
mov
filds
cmc
decl
xor
call
mov
pusha
pusha
push
pushl
lea
jmp
xor
not
add
sub
mov
ror
shl
mov
bt
bt
call
mov
movw
pushf
push
lea
jmp
shl
pusha
mov
call
jmp
call
not
mov
cmp
push
stc
add
pushf
pushf
call
bts
xor
test
mov
xor
rcr
mov
pushf
bt
test
add
pusha
call
or
mov
bt
sub
bt
cmc
push
cmc
rol
pushf
not
call
bswap
setno
bswap
cwtl
push
movsbw
movzbw
mov
pusha
call
not
movb
pusha
clc
jmp
mov
movb
push
divl
pushf
pusha
pushf
mov
call
lea
jl
mov
pusha
pushf
movb
lea
jmp
jmp
push
xor
jmp
call
mov
clc
cmp
clc
add
push
mov
mov
lea
jmp
push
push
push
call
bt
lea
sub
xor
shl
mov
shr
add
bt
ror
bswap
mov
not
adc
sub
not
clc
sets
movsbw
rol
bts
shl
neg
add
shl
add
bsf
shrd
sub
movsbw
sub
bswap
movzbl
sbb
movsbw
mov
test
xor
pushf
pusha
add
call
sub
stc
add
bt
neg
pushf
xor
cmp
sub
push
pushf
jmp
pusha
mov
pushf
pushf
mov
lea
jmp
cmc
movzbl
clc
xor
bt
rol
test
sub
push
pusha
add
cmc
call
jmp
