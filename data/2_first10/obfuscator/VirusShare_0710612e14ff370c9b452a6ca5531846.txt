push
push
add
ja
insl
scas
jge
sub
mov
sub
xchg
mov
adc
mov
insl
test
pop
outsl
enter
lret
mov
or
leave
loope
sub
fnsave
test
lea
fucomip
popa
jno
out
cmp
in
xor
jb
add
cs
or
mov
btrl
xchg
das
mov
and
cld
sub
xor
das
cmp
pop
cmp
xor
out
mov
mov
xor
pop
push
push
popa
inc
xor
push
push
jbe
je
xor
ljmp
mov
mov
xor
inc
mov
mov
out
mov
in
rol
inc
lcall
aam
add
loopne
jp
out
add
in
repnz
push
cli
movb
add
jnp
or
dec
mov
ret
add
idivl
and
lret
add
mov
jge
inc
ja
xlat
dec
dec
rcr
dec
dec
xor
add
aaa
testw
add
xchg
jns
dec
out
jg
push
icebp
test
repz
dec
xchg
daa
pop
dec
cwtl
inc
push
lahf
sti
dec
stos
movsl
roll
lods
stos
stos
les
mov
out
fs
into
xchg
addr16
xchg
out
ret
stos
push
and
pop
lods
and
adc
jl
jmp
jle
les
push
cwtl
lock
lods
fistps
insb
xor
and
daa
sbb
cmp
xor
icebp
cwtl
cmp
scas
fwait
inc
les
testb
stc
push
jo
push
pop
dec
repz
pusha
and
mov
hlt
repz
int3
mov
jp
aaa
push
andb
adc
dec
cmc
outsb
cltd
and
jno
dec
and
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
adc
mov
out
mov
mov
sub
arpl
insl
outsb
jo
sub
ds
jge
outsb
int3
adcl
iret
mov
out
nop
out
sub
mov
outsl
mov
data16
mov
jo
mov
adc
shl
negl
xchg
jno
jecxz
clc
cli
jmp
data16
idivb
stc
pop
cld
push
mov
add
cmp
mov
ret
mov
push
mov
cli
adc
xchg
subl
inc
sti
jb
aas
or
pop
aas
into
inc
out
sti
rorb
subb
ret
aas
sub
mov
addl
imul
outsl
inc
test
jne
inc
call
sub
inc
push
push
add
pop
enter
test
mov
inc
xchg
scas
inc
or
pop
mov
out
or
mov
aad
push
adc
jae
push
sahf
dec
add
pushf
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
mov
xchg
xchg
fndisi(8087
push
push
add
popa
fcomps
jne
addr16
jnp
and
dec
enter
mov
and
pop
je
sti
popa
dec
lcall
and
pop
jne
gs
hlt
and
xchg
mov
dec
mov
frstor
rcrl
jo
pop
push
js
jl
out
push
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
inc
frstor
push
adc
cmpsb
dec
ret
xor
jg
xchg
and
sbb
sti
push
int3
imul
cwtl
sub
das
fstps
mov
pop
sub
shlb
sbb
clc
or
or
push
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
inc
imul
sbb
dec
mov
mov
fnstcw
in
pop
add
jnp
jae
cltd
cmp
addr16
ret
xlat
dec
lahf
popf
cltd
fcomps
xchg
cmp
ja
mov
xchg
cmp
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
push
and
ss
fucomp
and
mov
inc
mov
mov
jle
jne
cmpsb
fcomps
mov
jo
stc
pop
add
push
xchg
mov
repz
xlat
mov
dec
adc
test
sub
mov
sub
bound
inc
push
jno
add
pop
jmp
add
add
adc
pop
adc
ds
xor
and
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
xchg
bound
mov
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
call
jmp
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
or
dec
xor
push
inc
pop
lock
mov
pop
imul
sbb
push
fwait
movsl
cmpsb
xor
imul
jns
add
or
add
je
dec
inc
out
jp
lods
inc
insb
loope
inc
fstpl
jmp
xor
xor
pusha
and
jo
fnstcw
ret
mov
insb
mov
hlt
and
push
fwait
movsl
cmpsb
xor
sub
pop
out
in
pop
in
and
lret
pop
fidivs
stos
jle
sbb
jl
bound
and
jmp
xor
push
fisubrs
enter
sub
shrb
ficoms
sar
popa
out
sbb
jl
push
fwait
movsl
cmpsb
xor
dec
movsl
negl
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
add
cmp
xchg
inc
cwtl
out
fistps
xor
cwtl
sarl
stos
sub
xchg
mov
and
sbbb
push
mov
adc
fs
and
sub
mov
addb
lea
outsb
insb
pop
fisubrs
mov
jae
pop
pop
xor
pop
fmulp
fs
aam
sbb
xchg
or
fisubl
mov
fstpt
mov
out
into
or
pop
mov
out
out
jecxz
or
popl
inc
and
cld
int
adc
inc
mov
cmc
cmc
out
shlb
loop
insl
pop
inc
add
hlt
mov
sbb
cmpsb
inc
adc
inc
fisttps
mov
or
xlat
jmp
loopne
out
xchg
mov
add
jb
mov
xlat
pop
push
xchg
arpl
sbb
xchg
pop
add
test
jnp
les
nop
push
mov
inc
xor
add
cmp
add
mov
cmc
mov
add
xchg
push
out
push
push
lcall
data16
jbe
iret
cmp
cmp
inc
jecxz
add
scas
dec
mov
ret
lret
xchg
xchg
icebp
mov
jl
pop
dec
les
jno
sub
daa
adc
mov
ss
mov
fwait
push
jns
mov
jb
add
jnp
outsb
das
popa
loope
mov
xchg
adc
mov
and
mov
push
fimuls
mov
jnp
sbb
insl
cli
add
ficoms
aas
mov
push
xor
and
in
cltd
out
jg
pop
inc
cmpsb
cmp
jle
dec
fimull
inc
nop
xchg
mov
or
std
call
jecxz
lds
scas
jnp
andl
xorb
mov
lret
mov
xchg
mov
jo
add
or
in
cs
in
out
daa
adc
adc
sub
stos
fdiv
push
pop
xchg
andl
outsl
mov
scas
pop
sub
jne
push
xchg
push
test
jb
scas
xchg
fstpt
or
and
cmp
sbb
adc
jp
add
test
mov
xchg
enter
inc
and
outsb
int3
outsl
xchg
mov
pop
jg
sbb
enter
xchg
movsb
add
adc
and
sbb
dec
mov
cld
adc
xchg
mov
mov
sub
out
mov
popa
xchg
sub
sub
shrl
into
fs
cmp
push
and
data16
lcall
lock
fcmovnbe
cmpsb
mov
fwait
movsb
cmp
test
lea
addl
inc
pushf
dec
adc
push
stos
mov
mov
movsl
rcrb
push
push
mov
adc
jge
xchg
jge
scas
cmpsb
cmpsl
mov
jp
scas
or
inc
mov
add
arpl
mov
cwtl
mov
dec
push
cwtl
out
aas
ja
mov
test
sub
xchg
sahf
add
adc
data16
je
or
sahf
jecxz
mov
shrb
push
cmp
out
adcl
xchg
inc
xchg
sahf
push
xor
pusha
mov
cmp
pop
fidivs
jl
hlt
test
jae
and
mov
pop
jge
mov
lcall
loop
and
sarb
stc
in
fiaddl
fcomps
push
dec
inc
xor
xor
hlt
xchg
push
leave
test
mov
psraw
mov
enter
out
fwait
sub
cli
inc
xor
xchg
je
fistpl
dec
out
inc
jb
pop
sarl
pusha
outsl
inc
outsl
lret
xchg
lret
arpl
mov
pop
jl
test
adc
leave
mov
out
xchg
loop
stos
inc
xchg
dec
push
or
sbb
push
out
inc
pop
iret
into
mov
aaa
mov
cmpsl
nop
push
pushf
into
xor
fdivl
fstpt
call
insl
shlb
loop
roll
jns
enter
mov
mov
and
addr16
mov
jno
repnz
mov
mov
dec
adc
ds
lods
jno
insb
inc
dec
pop
inc
nop
mov
inc
rcr
sub
and
incb
xor
jae
mov
mov
jle
xchg
ror
xlat
ss
cmc
cmp
push
mov
test
and
leave
add
mov
mulb
je
xchg
mov
bound
xor
repnz
lea
mov
cwtl
pop
lds
sbb
lods
les
dec
fnstenv
aaa
dec
scas
add
pop
adc
daa
mov
pop
outsb
mov
cmp
aam
cmpsb
pushf
push
divb
in
testl
sbb
or
out
xor
mov
add
mov
push
shrb
adc
xor
cmp
pop
clc
insl
sub
sub
pop
and
and
sbb
ds
test
aaa
jle
lds
movsl
hlt
inc
jg
inc
insb
int
pop
fsubl
js
ss
in
loop
add
gs
scas
cmp
jle
mov
lret
call
or
inc
mov
dec
inc
mov
cld
mov
lods
clc
pop
mov
std
pop
outsb
in
xlat
pop
dec
dec
mov
pop
xor
shlb
outsb
pushf
repz
ret
xor
clc
stos
cmc
inc
std
pop
pop
sub
pop
inc
shlb
aas
add
mov
pop
mov
scas
ds
mov
lcall
dec
imull
lods
in
hlt
lret
inc
in
insl
xchg
mov
popaw
scas
nop
out
imul
cmp
mov
sbb
mov
lret
jge
in
stos
sbb
cltd
sti
mov
test
andl
or
xchg
cs
push
and
dec
inc
or
adc
dec
xchg
ja
add
inc
push
ret
inc
cwtl
jno
lea
out
imull
sbb
ljmp
les
ja
sub
cmp
dec
cmpsb
mov
pop
push
pop
ficoms
sbb
mov
xchg
jb
inc
sbb
mov
dec
cs
aad
mov
popa
jmp
jae
popf
pop
out
jge
ret
sub
inc
and
in
mov
jbe
inc
shr
rcll
xchg
sub
jecxz
imul
pop
adc
and
inc
jbe
jns
mov
mov
xchg
je
xor
inc
repz
add
xlat
xor
xchg
mulw
adc
jnp
loope
fadds
aad
fwait
jns
leave
xor
add
mov
dec
test
mov
repnz
xchg
call
push
adc
add
push
in
sbbl
sbb
jnp
aaa
movsl
arpl
shrl
ret
addr16
fsts
sbb
jle
jns
outsl
xchg
inc
jbe
sbb
mov
ret
jbe
xor
lcall
popa
sti
pop
ss
ds
jge
cmp
pand
in
inc
call
jnp
scas
arpl
gs
int
push
stc
pop
pop
push
push
xbegin
push
adc
xchg
shll
xchg
sub
pop
adc
pushf
mov
pop
fucom
sub
push
int
jno
or
sub
call
aam
inc
push
xor
test
sbb
jne
pop
sub
cmp
fdivrl
pop
incb
cwtl
or
mov
repz
lcall
dec
xor
jbe
and
es
mov
dec
xor
mov
jp
fs
push
xchg
sub
adc
push
and
pop
test
lods
xor
jb
mov
je
ret
xchg
push
push
fldl
jl
and
xor
mov
sub
and
cli
dec
and
or
cmp
inc
pop
pop
test
addl
imul
ss
fs
out
movsl
pop
cmp
adc
mov
fldl2e
push
jo
mov
fnstenv
call
shlb
movsl
xorb
sbb
jns
je
dec
mov
inc
sub
out
push
gs
dec
lds
iret
imul
insl
mov
mov
add
jnp
mov
lea
dec
data16
fsts
cmp
jo
shrb
xchg
or
jbe
mov
sysret
sti
shll
out
ss
ret
pop
lock
jo
cli
mov
jecxz
repz
data16
inc
push
nop
mov
in
xchg
sbb
imul
leave
pop
jmp
ljmp
adc
enter
insl
iret
xlat
das
mull
inc
insl
jbe
jno
test
mov
xor
vpmaddwd
outsl
insb
and
xor
jg
xchg
cmp
shlb
and
out
cmc
jno
int3
mov
scas
and
shlb
sbb
in
mov
push
in
and
and
ficoml
push
shlb
jnp
cmc
pusha
pop
test
clc
or
daa
rcll
cli
sti
mov
add
mov
mov
pop
jno
popa
xor
cmpsb
jmp
int3
mov
aaa
xchg
mov
jp
jb
cmp
cltd
xchg
inc
repnz
jbe,pt
in
fadds
ja
sbbl
dec
imul
mov
or
xchg
and
mov
xor
pop
aam
cld
popa
fnsave
cwtl
inc
ljmp
das
out
inc
movsl
popf
call
sub
movsl
movb
imul
js
push
jo
xor
sbb
lods
sbb
ja
jb
sub
pop
jne
popf
lods
inc
mov
add
ret
xchg
and
sub
push
sbb
cli
jmp
jge
adc
lock
mov
add
fists
fnstenv
ljmp
out
jg
cmp
xchg
rcr
and
jae
push
cmp
fabs
mov
pop
and
sbb
or
or
xchg
cmpsb
dec
xchg
imul
aas
adc
and
sub
pop
lock
add
xor
ds
pop
mov
mov
jecxz
or
adc
ret
js
lcall
sbb
xor
fidivrl
push
stos
in
pushf
ljmp
sub
pop
stos
dec
hlt
icebp
ljmp
add
mov
adc
movsl
push
es
fmuls
pop
mov
fiadds
aad
jl
add
or
pop
mov
scas
nop
aam
cmpl
inc
in
nop
ret
jbe
sar
sub
mov
in
xchg
cld
cmp
lds
fmuls
sub
and
les
out
divb
push
inc
inc
insb
inc
rcrb
jl
adc
iret
and
ja
cmp
aas
pop
lods
test
in
fdivrp
jmp
sub
lock
xor
inc
push
mov
das
push
inc
inc
testl
ljmp
subl
les
mov
lock
dec
gs
loopne
repz
in
mov
fsubl
les
ret
cli
or
pop
les
movsl
jbe
xchg
mov
adc
xchg
adc
cmp
fcos
lods
dec
xchg
out
insb
loope
fstpt
inc
fstpt
cmpsb
popa
dec
xchg
mov
mov
cmpsb
push
pop
adc
mov
and
sbb
push
mov
push
pop
scas
enter
rorb
adc
in
ret
sub
push
inc
push
push
dec
std
addr16
mov
or
and
call
cmpsl
add
cld
mov
and
popa
call
or
jae
xchg
mov
filds
add
lods
sub
mov
xchg
push
imul
dec
or
sub
mov
xor
test
jb
add
push
movsl
xor
stos
jg
pop
mov
pop
lods
sub
je
mov
jecxz
jp
mov
pop
stos
or
loopne
and
ljmp
fildll
inc
pop
loop
dec
lret
fsubrs
in
pop
cli
mov
push
inc
xlat
cld
stos
test
jb,pt
pop
mov
push
pop
xchg
rcll
jne
fidivs
mul
movsl
pop
mov
pop
sbb
pop
fisttpl
mov
rcrl
or
cmpsb
jb
push
dec
xor
test
xorb
xchg
mov
jmp
xchg
cld
push
mov
clc
or
pop
push
popa
cmp
ds
xor
mov
xor
mov
ret
outsl
jle
clc
jbe
jmp
mov
fs
imul
mov
sub
loope
test
xor
fldenv
dec
mov
stc
incl
pop
xchg
dec
enter
stos
cmp
outsl
int
inc
outsl
adc
out
addl
sbb
jge
jle
rolb
inc
cmp
or
push
aaa
ret
dec
inc
jns
mov
dec
in
and
xor
adc
int
testl
dec
js
fdivrs
jg
push
data16
lock
sbb
adc
add
cmpsl
and
out
sbb
xor
fisttpll
push
sbb
xchg
fistps
mov
cmp
pusha
and
ret
adc
fbstp
stc
test
adcl
or
imul
movsb
in
inc
sub
mov
or
leave
jb
cli
out
imul
jnp
jge
lahf
push
jno
mov
mov
sbb
call
add
orl
fldenv
ret
insb
dec
mov
lock
in
xchg
push
and
test
mov
xchg
aaa
jbe
ss
popa
and
in
insb
loop
rclb
in
xor
xchg
pop
mov
pop
push
cmp
mov
add
shl
cmp
out
add
dec
cld
hlt
push
xchg
aaa
lcall
sub
fsubrl
arpl
clc
mov
mov
inc
and
pop
jge
dec
add
loopne
sbb
hlt
dec
pop
pop
mov
cmp
mov
adc
testb
and
call
cli
jnp
push
lods
pushf
jnp
adc
jb
xchg
jge
imul
addb
jg
enter
push
inc
fstl
mov
lods
pop
js
inc
ss
xchg
dec
rcrl
cld
jge
push
mov
js
pop
mov
add
call
ss
loope
or
out
lods
in
mov
jl
in
sahf
fxam
into
mov
mov
jmp
jmp
cmp
mov
leave
shll
mov
sub
rorl
add
jns
jo
or
inc
scas
jg
jecxz
xor
jp
fdivrs
inc
cli
sub
xchg
lds
bound
mov
fcoms
sbb
dec
push
and
into
mov
mov
jmp
jmp
jg
in
cmpsb
cli
jg
in
xor
pop
cmp
or
pop
sbb
or
adc
xchg
test
xchg
push
xor
pop
lods
insb
mul
fadds
pop
jne
dec
sbb
out
and
pop
pop
in
aam
or
sub
mov
pop
mov
gs
loop
ret
cs
ljmp
cwtl
jecxz
pop
or
pop
mov
and
or
mov
mov
dec
and
inc
popa
roll
sub
sbb
ret
mov
sbb
pushf
int
ret
lret
xor
test
movsb
jmp
pop
aaa
call
loop,pt
cs
push
ret
stos
jle
xchg
xchg
pop
push
lods
mov
repnz
icebp
nop
or
mov
jno
imul
jno
xchg
addr16
dec
sub
iret
jg
jnp
mov
add
bound
pop
inc
dec
outsb
std
inc
adc
lock
leave
mov
and
inc
xor
in
push
adc
daa
push
jns
cli
stos
jp
mov
insb
cmp
pusha
mulb
pop
cmp
sbb
in
mov
jg
and
movsl
jp
jns
insb
std
inc
cmpsl
pop
mov
xchg
lea
movsl
mov
iret
inc
lret
mov
sub
push
inc
xchg
shr
mov
je
loopne
pop
mov
or
in
cwtl
jno
fwait
pop
cltd
test
cmp
aad
jg
les
icebp
arpl
mov
clc
sahf
cwtl
sub
cmp
mov
xchg
push
xor
jo
push
fistps
and
sbb
mov
xchg
aas
dec
xchg
cmp
orb
out
cmc
sbb
mov
or
fsubrs
xchg
pop
in
cmp
xor
xor
push
inc
and
jge
pusha
jo
pusha
in
popa
mov
jno
jecxz
inc
xchg
jle
inc
cmp
dec
jne
mov
popf
pop
std
cmp
cmpsb
sbb
or
cmp
xor
and
in
sbb
xor
mov
jmp
lret
push
addr16
subb
mov
push
and
daa
test
cli
and
mov
mov
pop
sub
cld
sub
ja
inc
mov
inc
xchg
xor
cmp
push
popa
mov
cmc
daa
mov
mov
mov
fs
push
dec
lret
sbb
shrl
dec
aam
imull
popl
or
cmpsl
push
out
test
sub
pop
cli
les
imul
and
pop
xor
sub
lods
push
mov
rcll
jns
std
fisttpll
xlat
loope,pt
push
mov
mov
out
mov
sti
or
ss
xchg
lock
push
out
leave
or
aad
test
push
and
xchg
js
dec
pop
pop
dec
outsb
insl
addr16
dec
pop
or
mov
push
pop
add
roll
or
jb
fbld
in
push
and
cmp
popa
test
pop
mov
lcall
mov
fsubrs
cmc
inc
imul
clc
jl
cmp
add
das
std
add
fdivl
cmovnp
cmp
cmp
orb
xchg
insw
mov
loope
fnstenv
out
mov
xorl
jge
lret
sbb
jge
or
mov
shll
jp
jge
es
mov
mov
cmp
xlat
in
push
xchg
adc
je
repnz
cmpsl
ljmp
out
bound
jmp
out
mov
mov
jmp
shrb
mov
lahf
jns
add
dec
repnz
inc
sarb
insb
mov
adc
xor
mov
js
sbb
jnp
fwait
mov
scas
xchg
leave
std
dec
and
xor
int
inc
jns
ficoml
push
pop
and
xchg
imul
xor
rcl
push
lds
cmp
push
adcl
adc
dec
test
dec
out
pop
add
int3
ret
pop
add
andl
xor
es
xchg
es
and
ja
cmp
idivl
mov
pop
stos
dec
xor
mov
out
jbe
popf
xor
loop
mov
or
cmc
mov
mov
lret
ret
xor
or
std
push
les
aaa
add
dec
xlat
xor
lret
pop
pop
ficompl
add
cmp
lods
push
jno
and
push
or
out
shll
inc
sahf
sbb
push
pusha
mov
imul
cmp
add
add
jecxz
jnp
add
jmp
lea
dec
loope
cmpl
jmp
movsl
push
jbe
test
insb
mov
mov
and
in
cmpsb
jmp
loop
je
in
jge
adc
jge
lcall
add
dec
xchg
jmp
fmuls
jb
pushf
iret
jecxz
adc
or
cltd
adc
outsb
add
fwait
stc
lods
outsl
mov
xorb
lcall
or
inc
lcall
repz
dec
mov
push
dec
adc
sbb
dec
mov
faddl
scas
jb
mov
nop
pushf
mov
sahf
dec
and
repz
shlb
daa
pushf
pop
jge
int3
mov
in
pop
dec
das
ljmp
cmp
in
inc
pop
inc
mov
and
aaa
cld
push
jge
fnstcw
and
stc
addr16
addb
mov
adc
xlat
adc
xlat
cmpsb
mov
rcll
lock
pop
ja
xchg
xor
mov
jo
sub
and
lock
xor
arpl
xor
and
jmp
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
repnz
mov
pushf
pushf
and
sahf
scas
out
push
push
push
jbe
rcll
mov
sbb
loop
in
add
sub
and
jns
sbb
fisubs
and
mov
cmp
pop
lods
clc
mov
call
lods
add
jle
and
ljmp
adc
pop
out
inc
mov
insl
ljmp
pop
lcall
push
fwait
movsl
cmpsb
xor
pop
or
rcl
shl
fs
jge,pn
and
mov
lods
lock
mov
dec
cmp
adc
lret
jmp
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
mov
lret
or
xor
test
cmp
jmp
xchg
repnz
mov
aas
cli
push
cld
mov
or
inc
pop
rcll
pusha
add
mov
inc
cli
adc
add
push
imul
into
cs
es
or
inc
inc
pop
adc
cmpsb
inc
pop
or
out
and
cmp
fbstp
push
mov
and
xchg
hlt
loope
cmp
xor
add
mov
sbb
lods
out
mov
lods
enter
dec
fstpl
add
add
pmovmskb
hlt
add
cmp
jg
in
dec
add
popf
fsubp
clc
pop
mov
mov
sub
mov
popf
pop
repz
jle
stos
repz
inc
dec
and
mov
movzwl
adc
jno
mov
fstpt
jae
adc
jg
and
mov
pop
push
fstps
fidivl
data16
fcoml
mov
mov
xchg
xor
shlb
jp
bound
jo
push
les
push
inc
repnz
outsb
outsl
jno
fcmovu
mov
mov
and
cs
xor
out
mov
jnp
leave
outsl
xchg
cmpsl
mov
and
mov
pop
ret
dec
or
out
mov
iret
ss
scas
xor
loopne
cmpsl
push
nop
lea
loop
add
dec
dec
adc
inc
out
insb
jb
xlat
mov
outsl
push
fisttpll
sbb
mov
movsb
lret
jp
shlb
dec
sbb
jae
fisttpll
push
sub
stos
mov
inc
jecxz
je
neg
xchg
adc
inc
xchg
call
popa
mov
mov
inc
xchg
xor
cmpsb
jge
pushf
lret
cmp
movsl
sub
or
in
mov
jmp
or
test
subl
cmp
xor
repnz
xchg
ljmp
imul
stc
xchg
nop
push
and
sbb
sbb
fsubp
dec
sub
iret
pop
xor
mov
pop
ljmp
int3
loop
rclb
enter
lcall
nop
pop
xchg
mov
jno
sub
negl
adc
ljmp
scas
sahf
mov
out
lret
adc
xchg
mov
mov
mov
pop
jecxz
mov
cmpb
pop
das
mov
jmp
lcall
test
iret
scas
dec
shll
pop
mov
pop
mov
or
inc
inc
lds
imul
loopne
mov
jnp
pop
insl
and
inc
fisubs
insl
stos
lcall
mov
mov
in
out
rdpmc
imul
test
jb
pop
xor
push
push
mov
enter
add
inc
insb
push
call
xor
cmc
mov
popf
aad
js
hlt
xchg
ds
xchg
cltd
test
mov
jecxz
icebp
cwtl
and
mov
xor
repz
xor
pop
ret
push
fcmovnu
dec
je
or
aad
xchg
sub
insb
push
dec
cmpsl
mov
push
dec
out
push
bnd
enter
push
mov
cmp
iret
jbe
ljmp
jae
loopne
inc
sub
inc
cmp
cwtl
std
add
in
gs
or
insb
jns
dec
sbb
fldt
inc
movsl
gs
jne
adc
clc
cld
jmp
lock
push
or
scas
lods
inc
lock
pop
cmpsl
jo
out
gs
mov
push
jo
ss
pop
test
xchg
aas
push
xor
mov
jns
xor
enter
push
and
mov
fdivs
andb
loop
sbb
test
add
mov
cmp
call
loop
jnp
push
sub
mov
aaa
mov
add
cmp
push
cmpsb
adc
pop
shr
sbb
jns
and
sub
insb
xchg
sub
sbb
or
shlb
mov
out
aad
or
inc
fisubs
insb
push
mov
cli
adc
xor
sub
mov
lahf
fmulp
xchg
test
int
data16
imul
pop
pop
push
sub
fwait
loopne
stc
repnz
xchg
pop
lea
sub
jg
inc
inc
in
mov
enter
mov
push
lods
adc
push
pop
aas
sub
fcoml
ja
mov
add
or
pop
adc
jae
cld
lret
rclb
and
test
lcall
sub
sub
dec
lods
mov
xor
inc
xchg
fisubl
insl
or
aam
repz
cmpsl
in
xor
std
bound
adc
popf
ljmp
leave
push
in
push
stc
ss
pop
jp
adc
cli
popf
xor
xor
push
or
test
adc
xor
clc
mov
daa
mov
push
jbe
es
adc
mov
cs
and
push
movsl
xchg
aam
mov
xor
movsl
in
rcr
pop
fwait
out
cld
pop
movsl
outsb
ficoml
mov
test
xchg
loop
pop
imul
mov
call
packssdw
and
push
jns
in
cmpsl
inc
pop
adc
inc
mov
into
push
adcb
dec
jbe
in
ljmp
pusha
hlt
fists
add
ljmp
jae
mov
fists
sbb
sub
popw
insb
fwait
and
mov
jle
std
jo
sbbb
and
cmp
mov
mov
in
dec
or
xor
aaa
fcomps
out
sub
mov
push
mov
push
xor
repz
dec
insb
test
roll
repz
ret
mov
inc
or
push
rcr
xchg
in
out
popf
and
and
fldl
testb
fdivrs
sarb
add
add
adc
imul
xlat
adcb
pop
xchg
jmp
jg
je
fisttps
dec
imul
pop
cmp
pcmpeqb
mov
mov
popa
hlt
jle
cmp
aad
sar
adc
xor
out
mov
sbb
jo
push
test
push
out
push
mov
addr16
cwtl
adc
pop
cmpsl
jne
stos
add
mov
sbbl
xchg
mov
sbb
xchg
stos
shll
dec
dec
lret
mov
rcrl
dec
mov
jb
adc
repnz
dec
nop
mov
xor
insl
mov
jg
mov
stc
mov
insl
addr16
jmp
aam
mov
cmp
push
dec
add
cs
pop
popf
addb
pop
sub
in
enter
loope
loop
add
movsb
cld
scas
ret
out
mov
jbe
into
int
cld
movsl
lods
dec
xchg
dec
cmpsb
add
icebp
test
jb
xchg
mov
scas
xor
ss
addl
test
push
cli
imul
inc
push
sub
lea
xor
push
adcl
jle
out
cs
xchg
mov
cmp
jmp
jns
pop
mov
or
add
in
call
xchg
imul
stc
stos
mov
dec
jge
jno
mov
notb
jo
mov
sbbb
std
mov
dec
fcmovu
mov
sub
pop
rcll
sub
aam
mov
sub
inc
add
add
das
sbb
mov
iret
fldenv
mov
cmp
cmp
rcrb
dec
sbb
cmp
sbb
lcall
lret
jnp
sub
into
int
cld
movsl
lods
dec
xchg
fsts
lahf
decl
fildll
jbe
sar
sti
mov
popa
jae
repnz
jbe
or
jecxz
ficoms
lock
sub
jo
nop
in
xchg
into
and
inc
pop
roll
jne
xor
sbb
in
cmp
lods
cmp
xchg
xor
jo
cmpsl
int
aas
dec
ret
add
cmp
aad
std
scas
or
mov
ror
sbb
mull
mov
mov
mov
sahf
pop
inc
pop
into
mov
jns
pop
icebp
idivl
jb
xor
dec
lret
rcll
jo
cwtl
dec
orb
pop
int
inc
std
lret
insb
orl
nop
push
add
cmp
dec
and
pop
stos
enter
mov
sbb
cmpsb
adc
mov
mov
xchg
aad
add
cmp
xchg
mov
lock
and
out
inc
jecxz
jmp
dec
xor
leave
jmp
xor
inc
in
mov
test
pop
pushl
push
mov
or
out
inc
cmp
movsl
shlb
jne
lcall
ds
xlat
int3
incb
push
dec
mov
mov
aas
es
mov
mov
cltd
int
and
cmp
adc
and
mov
iret
xchg
pushf
mov
shl
pop
and
lods
and
mulb
cli
sbb
je
mov
jnp
sbb
add
sbb
aam
mov
in
mov
gs
xor
outsb
hlt
pop
mov
and
pop
in
adcl
pop
dec
xchg
int
pop
inc
mov
dec
jmp
adc
ret
push
cmpsb
popf
inc
inc
jns
sti
ds
lock
mov
add
mov
bound
jne
mov
or
dec
pop
popf
addr16
sub
iret
jecxz
andb
movsl
cmc
sub
lret
loope
xchg
scas
test
sarl
xor
mov
mov
mov
int3
sub
enter
pop
lret
sub
popa
insl
mov
push
fisttpl
mov
xchg
fnstenv
in
out
jle
push
push
xor
ss
push
call
loopne
or
adc
jecxz
dec
xor
stos
movsb
push
mov
hlt
xor
mov
xorl
repnz
push
bound
sub
lcall
mov
addr16
aas
cmc
pop
cmp
xchg
adc
cmc
mov
mov
cmp
popa
cmpsb
notl
and
xchg
jle
sbb
movsl
mov
dec
out
sbb
movsl
jge
test
dec
popa
out
stos
hlt
or
inc
mov
lods
dec
out
iret
loope
inc
jns
jmp
pushf
adc
mov
xlat
lods
fcmovnbe
enter
inc
stos
lret
mov
mov
cld
sbb
inc
fstpt
aam
push
les
sbb
push
mov
lods
xchg
mov
outsb
mov
or
cmp
sbb
mov
xchg
fdivs
xor
mov
mov
jp,pt
mov
pop
and
out
ja
fimuls
inc
cwtl
mov
std
test
cmp
icebp
adc
jne
iret
jmp
xor
pop
aas
lcall
jecxz
repnz
fwait
out
aam
movhlps
or
nop
add
jbe
test
icebp
adc
mov
mov
dec
lods
sub
xchg
dec
rcll
cmp
cmp
sub
mul
into
int
cld
movsl
lods
dec
xchg
cmp
jge
test
out
dec
xchg
mov
sarl
repz
mov
fmul
sbb
frstor
mov
lods
dec
out
iret
loope
sbb
mov
pusha
pop
mov
nop
inc
pop
and
in
and
fcmovnbe
enter
inc
stos
loop
addr16
inc
aam
xor
or
and
fistl
jne
loope
adc
mov
xchg
lods
cmc
data16
mov
xchg
xor
push
mov
xor
cwtl
push
in
clc
pop
fcomi
pop
jl
adc
cltd
push
jmp
cmp
js
sbb
stos
xchg
loop
mov
int3
mov
adc
sarb
jmp
movsl
ret
cltd
cld
xor
test
sbb
xorb
das
and
shl
sti
das
push
mov
cmp
iret
stc
adc
sbb
out
and
mov
add
jb
divl
xchg
sub
xlat
repz
inc
or
test
fisubrl
mov
shl
xor
push
hlt
aad
test
iret
rcrb
fwait
xchg
ljmp
push
mov
xchg
pop
adc
in
inc
xchg
fcoms
jge
jno
or
xor
insb
mov
push
jno
inc
unpckhps
in
popa
fcomps
in
add
mov
inc
push
cmp
mov
aas
push
rclb
push
pop
cmp
enter
das
mov
adc
pop
pop
rcll
dec
sete
subl
notb
loope
cli
and
sub
out
cld
or
dec
repnz
mov
notb
sub
dec
test
cli
dec
or
xor
cli
mov
cltd
loopne
push
mov
or
mov
and
dec
cmp
dec
ja
pushf
and
adc
int3
lods
testl
cmp
gs
inc
cmovns
ss
inc
lahf
sub
xchg
jmp
sub
sti
push
jmp
adc
xor
shrb
xchg
inc
lds
test
data16
cwtl
and
jb
push
sbb
xor
js
test
push
stos
jne
xchg
arpl
ret
inc
pop
jae
fldl
shrl
xor
mov
sahf
mov
push
idivl
insl
lcall
cmp
add
jno
daa
cltd
aaa
addr16
pop
cmp
dec
popf
sub
call
sbb
xchg
mov
inc
inc
movsl
enter
es
shll
mov
daa
mov
push
mov
or
fistpl
shlb
loopne
lods
pop
stos
lea
xchg
jbe
mov
stc
mov
push
cmp
repz
xorb
nop
jbe
sub
sbbl
cmpsb
cmpb
ds
aas
jmp
loopne
mov
test
sub
jno
iret
xor
jecxz
mov
pop
aaa
push
inc
aaa
xchg
sti
jns
enter
fdivrl
lahf
ficompl
cltd
sahf
pop
cs
jno
pop
cmp
ret
or
rcll
aad
inc
cmp
lods
jl
xchg
mov
subb
xchg
adc
xchg
insb
iret
push
add
jg
jmp
mov
push
idivb
sbb
stos
shl
insb
dec
sbb
aas
rclb
insl
adc
fs
sbb
inc
mov
mov
cmc
testl
lods
lds
in
dec
addl
inc
push
dec
out
out
std
jb
push
jbe
cld
test
jecxz
ds
sarl
mov
pop
dec
das
jo
dec
loopne
jo
fisttps
pop
xor
lret
call
aam
xchg
mov
leave
push
jbe
sbb
cli
sub
hlt
or
mov
out
scas
inc
fdivrl
add
mov
sarb
or
inc
jmp
sub
or
arpl
push
inc
sarb
test
inc
stos
enter
jae
sti
pop
mov
ss
sbb
enter
scas
push
dec
sbb
pop
loope,pt
push
mov
adcb
push
xchg
hlt
cmp
test
mov
or
and
rcl
bound
cmp
fdivr
lcall
push
ss
fsubr
push
call
inc
popa
outsb
and
jbe
fistpl
sub
mov
push
inc
cwtl
push
lea
adcb
xor
mov
lret
and
outsb
xchg
cs
cmp
mov
out
push
cs
jl
push
push
push
inc
inc
inc
mov
fisubrl
mov
mov
insl
cmp
das
pusha
xor
inc
xchg
jbe
call
add
or
push
insl
push
dec
mov
xchg
inc
and
inc
jb
in
mov
push
jo
and
adc
ljmp
jle
jae
test
popf
fcmovnbe
rclb
cmp
mov
movb
test
jmp
inc
rcll
inc
mov
scas
xchg
sbb
fsubrs
push
stos
xchg
inc
mov
jg
or
into
test
adc
jo
sahf
and
movb
sbb
push
enter
loopne
cmc
sbb
cmp
std
jns
rolb
into
jno
mov
inc
push
push
ljmp
sahf
imul
xlat
fstpl
sbb
cwtl
mov
adc
dec
in
adc
push
lret
shlb
pop
clc
push
mov
fwait
icebp
adc
xchg
mov
aas
popa
sti
notb
jecxz
gs
pop
je
adc
loope
sbb
lock
mov
xchg
push
jbe
push
push
cmp
daa
or
mov
in
or
cwtl
jp
mov
and
test
jbe
mov
aaa
pop
repz
adc
inc
sub
inc
cmp
iret
gs
rcl
sahf
sahf
pop
insb
out
inc
cli
movsl
scas
push
cmpsb
lock
mov
pusha
and
xor
les
lock
pop
inc
inc
lods
lea
pop
push
lahf
sbb
call
or
push
xchg
pop
loope
and
inc
loopne,pn
rol
or
push
and
outsb
push
call
shll
sbb
pop
fs
jp
jle
aam
xchg
mov
je
and
add
lahf
in
mov
push
cs
dec
mov
push
scas
mov
fs
int
fwait
sub
andps
xor
sbb
das
mov
mov
pusha
lret
bound
mov
leave
cmp
mov
mov
stos
push
enter
cmp
ljmp
mov
lret
ja
push
push
enter
inc
and
out
jbe
imul
dec
daa
fiadds
cmp
xor
inc
outsl
cwtl
test
mov
lock
xchg
mov
out
xchg
cmp
dec
mov
cltd
cmpsb
jmp
std
aas
ds
push
sub
jno
int
into
inc
adc
out
mov
in
repz
pop
dec
into
test
sub
add
popf
pop
inc
jmp
fsubrs
mov
test
jno
es
aad
push
das
test
adc
test
dec
cmp
lcall
fucomip
pop
addb
mov
stc
push
cld
fildll
push
dec
mov
sub
dec
mov
negb
xchg
std
or
sarl
daa
mov
sub
pop
loopne
cwtl
jg
popa
hlt
xchg
sbb
jg
mov
cmpb
lods
push
push
pusha
push
xlat
imul
addr16
loopne
mov
cld
and
or
cli
pop
loopne
sub
push
cld
mov
addr16
ja
daa
pop
jo
lds
mul
shll
mov
pop
xor
ja
mov
outsl
push
pop
inc
cli
dec
mov
test
jmp
les
imul
orl
pop
mov
mov
jb
dec
jb
or
loope
movl
mov
add
mov
lret
mov
out
xchg
dec
daa
sbbb
and
mov
sldt
sti
push
in
mov
push
lcall
sub
mov
xchg
xchg
push
jmp
test
imul
xchg
ret
lods
nop
lods
ja
jae
lea
pmaxsw
enter
mov
cmpsb
xchg
mov
cmpsb
int
adc
repz
cld
inc
mov
jnp
icebp
ret
mov
stc
rcrl
jecxz
addr16
cmpsb
ss
fidivs
cmpsl
and
mov
rol
jb
pop
outsl
push
inc
fdivl
scas
push
cmp
ret
add
enter
cli
xlat
and
int3
fsub
xor
and
pop
test
adc
pop
push
mov
mov
sbb
and
xchg
xchg
push
xchg
pop
xor
pop
dec
sbb
inc
or
or
enter
test
pushf
pop
mov
or
imul
xor
sbb
jnp
jae
inc
inc
js
out
lock
out
ficompl
adc
das
daa
push
arpl
mov
sbb
jl
ja
mov
mul
or
xchg
mov
push
lret
mov
and
rorl
xor
dec
lret
xor
dec
mov
pop
push
push
sbb
mov
loope
inc
cmp
outsb
les
lret
sbb
or
mov
push
hlt
jmp
rorb
jge
ja
out
or
das
mov
jbe
cmpsb
test
xchg
cmpsl
out
add
jp
lret
mov
mov
mov
daa
lds
lods
lds
imul
das
dec
movsb
inc
jp
mov
push
cmpsl
xlat
pop
mov
pop
pop
jnp
mov
cmpsb
push
xchg
imulb
xchg
push
mov
push
sub
inc
inc
mov
dec
xchg
mov
sub
es
push
fdivrs
or
cmpsl
mov
subl
jmp
sahf
aas
jb
or
jns
mov
xchg
hlt
pop
mov
cmc
jb
negl
fidivrs
mov
xchg
inc
lret
sbb
int
cld
movsl
lods
dec
xchg
cmp
sbb
out
inc
push
js
sahf
inc
and
lahf
xchg
pop
imul
push
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
sbb
jmp
mov
push
dec
pop
aad
inc
fwait
mov
jmp
xor
fwait
movsl
cmpsb
xor
repnz
mov
pushf
pushf
and
sahf
scas
out
push
push
push
jbe
rcll
mov
sbb
loop
in
add
sub
and
jns
sbb
fisubs
and
mov
cmp
pop
lods
clc
mov
call
lods
add
jle
and
ljmp
adc
pop
out
inc
mov
insl
ljmp
pop
lcall
dec
std
pop
stos
mov
mov
fxtract
jp
stos
xor
leave
sub
lahf
and
cli
dec
les
xor
mov
pop
data16
roll
adc
sbb
rolb
test
ds
cltd
mov
lcall
cmc
push
push
pop
xchg
pop
cmp
das
add
adc
jl
in
push
inc
xchg
es
cmp
popf
xor
cli
loop
jmp
or
add
xchg
mov
gs
mov
in
cmpsl
in
pop
aas
jmp
leave
cli
test
mov
jmp
int3
enter
inc
inc
and
addr16
jg
sub
dec
outsb
in
sbbb
push
pop
jbe
shl
inc
cmpsl
or
faddl
lea
stos
movl
mov
test
or
mov
adc
cmp
adc
fstps
inc
mov
push
subl
mov
lahf
sbb
mov
mov
xor
xchg
jns
iret
dec
imul
mov
and
mov
clc
push
mov
mov
sub
pop
cs
mov
adc
jno
stos
popa
or
cld
cmpsb
and
lret
sarl
and
pusha
pop
ljmp
sub
addr16
or
push
dec
test
mov
inc
mov
std
mov
and
xchg
mov
inc
jmp
sub
jns
sti
aaa
es
mov
fnsave
and
sub
xor
push
ljmp
fisubrs
xchg
fildl
sbb
xor
dec
pop
push
ja
shrl
in
jl
inc
jnp
sbb
push
stos
loopne
dec
ret
fsubrs
clc
jnp
rcrb
adc
rcll
mov
fmuls
push
ret
sbb
sti
call
jae
adc
pop
sub
je
in
cmp
pop
jno
jne
inc
pop
mov
rcll
mov
andl
inc
pushf
mov
jae
aaa
dec
and
insl
mov
inc
mov
xor
shll
and
jbe
pop
or
insl
rcrb
cmp
push
ljmp
mov
and
push
jl
enter
pushf
ret
mov
cmp
jp
std
push
call
in
xchg
add
daa
sub
insl
pop
inc
lds
jb
mov
xchg
adc
repz
in
push
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
xor
add
mov
shlb
mov
repz
mov
add
aad
test
popf
pushf
scas
and
dec
in
into
push
pop
mov
and
jmp
movb
lds
icebp
ds
or
xor
mov
adc
dec
scas
hlt
or
movsb
xchg
stc
cmp
fcom
cmpsb
mulb
gs
ret
pop
dec
or
ss
es
inc
fisubs
mov
scas
nop
test
mov
or
or
push
lds
jnp
or
xchg
cmp
in
fwait
xchg
les
stos
mov
insb
or
dec
lcall
and
clc
mov
inc
xchg
stos
scas
mul
pop
aam
les
in
sub
scas
adc
inc
test
out
test
dec
adcb
jbe
push
fcompl
adc
mov
mov
sub
lock
push
fisubs
dec
stc
js
sub
mov
push
fildl
rorb
ret
push
sbb
mov
test
mov
shrl
fadd
add
insb
cmc
test
rclb
and
inc
scas
jnp
jae
sub
das
mov
outsb
sub
lea
lods
pop
and
mov
dec
push
push
xor
xchg
xor
inc
dec
and
mov
mov
decl
and
jnp
mov
inc
sarb
es
mov
and
aaa
xchg
xor
sbb
xchg
sub
jge
shlb
add
or
cli
inc
adc
mov
and
mov
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
fwait
movsl
cmpsb
xor
adc
imul
add
inc
mov
pop
sbb
push
jo
add
mov
mov
add
jbe
insl
mov
pop
mov
repz
stos
adc
hlt
rcrb
jno
sbb
scas
pop
scas
out
cmp
je
mov
lds
lock
pushf
inc
nop
out
inc
mov
xor
cli
push
rsm
jmp
lret
ret
enter
mov
lahf
das
in
jo
cmp
pop
inc
jae
aam
cmpsb
dec
mov
aaa
push
mov
xor
push
and
cmpsb
ds
fidivrl
scas
jg
add
pop
sbb
push
repnz
iret
cmp
lcall
mov
sub
lock
lcall
outsb
subl
or
cmpsl
xorb
daa
pop
mov
sub
pop
or
jl
sub
outsl
out
add
pop
dec
add
inc
out
mov
pop
jb
test
loope
dec
xchg
rcrb
sbb
push
ja
movsb
or
mov
sbb
jns
dec
xchg
insb
adc
cmpsl
pusha
imul
pop
das
sub
cmp
jmp
jnp
mov
pop
xor
adc
bound
inc
into
lds
mov
mov
jle
xlat
dec
je
sahf
stc
dec
push
push
mov
test
sbb
pusha
test
mov
push
adcl
xchg
inc
push
and
aaa
and
popf
out
pop
aad
sbb
cmp
mov
mov
mov
push
mov
mov
sub
jnp
mov
mov
mov
cs
xchg
push
pop
inc
and
or
gs
dec
cltd
pop
ds
push
or
cmp
sbb
dec
dec
leave
leave
mov
in
push
mov
dec
sar
adc
xchg
jne
sar
jns
xchg
icebp
dec
cmp
sbb
inc
lds
add
das
mov
out
mov
adc
inc
adc
fimull
cmpsl
ljmp
mov
and
and
es
inc
int3
in
adc
cs
add
sbb
xchg
jg
scas
repnz
push
lahf
in
out
aam
add
popf
mov
push
cwtl
pusha
lods
in
in
inc
sub
add
xor
jmp
int3
out
pop
pop
dec
pop
pop
lret
mov
pminub
xchg
nop
pop
pop
cmp
into
cmpl
fs
add
sub
jo
lret
out
ja
jl
adc
add
jb
arpl
cmp
sbb
and
adcb
adc
nop
add
daa
idivb
adc
or
xchg
mov
xlat
jle
xchg
outsl
lds
js
adc
enter
jp
fsubrp
out
pop
mov
sub
sub
out
dec
lret
mov
nop
cmpsl
hlt
mov
shl
sbb
iret
adc
xchg
cmp
adc
and
imull
int
movsb
fidivs
cmpsl
lret
push
add
out
pop
mov
pop
iret
jb
inc
std
jbe
lds
ds
scas
xor
and
scas
pop
into
xchg
test
in
or
cmp
shl
mov
adc
jl
lret
mov
in
stc
sbb
cmp
pop
xorb
call
add
divps
mov
jno
sbb
fdivl
insb
pushf
test
adc
inc
out
pop
popl
and
test
repnz
fadds
xor
add
or
rolb
mov
fbstp
add
xchg
dec
stc
inc
xor
jae
imul
sti
test
ds
daa
mov
insl
inc
sar
cmpsb
in
fildll
mov
orb
mov
in
adc
pop
sbb
dec
jecxz,pt
xor
fs
xor
sub
cli
mov
les
movsl
add
xchg
scas
scas
sub
xchg
stos
enter
sbb
push
xchg
aad
jo
fisttpl
outsl
sub
pop
mov
pop
push
movq
pop
outsb
out
dec
jns
jmp
xor
jge
or
test
out
outsl
or
int
rcrb
xor
pop
icebp
adc
pop
subb
xor
pop
sub
pop
and
mov
movb
ret
mov
pop
je
adc
sub
stos
out
mov
and
dec
outsb
sub
jnp
and
sbb
imul
and
into
mov
sub
js
xchg
pop
push
xchg
fstl
mov
shll
mov
les
repz
push
vmovq
cmp
sub
cmp
repnz
imul
mov
insb
push
lock
sub
test
and
call
and
lahf
adc
xchg
dec
pop
and
les
jo
adc
lods
jo
movsb
sbb
mov
iret
inc
sbb
add
test
cli
jae
mov
lock
pop
jmp
testb
mov
xchg
insb
push
adc
mov
fisttpl
mov
mov
fisubrl
sub
add
add
stos
mov
push
jbe
sbb
mov
or
stc
ss
lods
bound
insb
rcr
loope
les
sbb
xor
cmp
jle
dec
dec
inc
enter
sbb
addl
xor
xchg
push
in
ja
mov
out
xchg
sub
ss
inc
add
aas
fmul
cld
dec
or
xchg
iret
sar
fcompl
out
js
cmp
outsl
sub
jecxz
xchg
lret
pop
out
jbe
test
inc
rorb
mov
in
adc
int
inc
jno
xor
outsl
sbb
in
notb
insl
xor
addr16
push
stos
push
pop
inc
clc
pusha
iret
cmc
push
pop
inc
into
ja
in
and
jmp
jp
adc
xor
test
es
rorb
mov
add
jle
mov
fisttpl
sti
out
aam
loopne
cmpsl
shlb
or
and
cmc
jo
jmp
loopne
pop
mov
inc
cltd
loopne
imulb
pop
and
sbb
aam
loopne
cmpsl
shlb
jnp
and
sub
out
push
adc
notl
mov
mov
ja
inc
mov
mov
pop
pop
push
enter
stc
repz
test
push
mov
mov
sbb
or
mov
outsl
inc
and
out
push
aas
inc
imul
xor
inc
mov
flds
sub
jg
cmp
mov
pop
ss
int3
sbb
and
add
sub
mov
out
lret
dec
pop
sbb
mov
aad
lea
push
mov
add
lea
out
sub
mov
xor
lahf
push
jno
sbbl
jmp
xorb
scas
push
std
movsl
clc
sub
pmaddwd
or
nop
adc
cmp
dec
pop
push
repz
jo
sub
push
fisubrl
push
jl
xlat
sarb
leave
leave
sub
cwtl
orl
stos
stos
cmpsb
and
sub
roll
loope
les
orb
fld1
ds
lret
or
jbe
adc
adc
mov
add
xorl
push
jns
pop
rcrb
cmpsb
jmp
leave
inc
mov
xor
dec
adc
fimull
mov
xor
sbb
scas
test
pop
js
sub
mov
xor
loop
test
mov
xor
mov
dec
movsb
push
or
xor
popf
mov
push
pop
mov
stos
mov
jne
scas
loop
add
inc
cmp
adc
std
cmp
sbb
lock
xchg
enter
inc
loope
into
jne
mov
inc
xchg
jle
sbb
cmp
mov
jl
adc
lcall
scas
clc
leave
out
adc
jp
add
int3
enter
add
push
adc
mov
xchg
out
push
negb
sbbl
mov
cmc
test
dec
xor
mov
or
loope
ss
popa
xchg
cmp
mov
and
and
mov
push
mov
jg
cs
xchg
push
addr16
aam
mov
mov
sbb
pop
xchg
inc
push
mov
popf
out
pop
xor
sub
repz
aam
je
mov
cli
cmpsb
adc
ljmp
scas
das
push
cld
fisubrs
mov
inc
add
jns
lds
nop
ss
imul
add
int
xchg
inc
mov
xor
jo
add
inc
xchg
cmp
and
loope
icebp
dec
in
popa
mov
ds
repnz
adc
pop
loop
cld
addr16
push
jne
push
pop
addr16
repnz
bound
dec
call
notb
mov
push
popf
or
jbe
lret
cmp
sbb
jmp
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
insb
mull
adc
mov
nop
out
loope
mov
out
sub
les
cmp
imul
add
inc
mov
push
js
and
xchg
cli
lds
and
pop
fdecstp
cmp
lds
dec
mov
ret
ljmp
mov
or
out
hlt
sti
push
dec
xchg
movsb
insl
loop
xchg
push
and
or
cli
jl
push
push
stc
imul
push
in
cmp
and
aam
mov
mov
lods
sbbb
iret
jne
mov
xor
sub
sbb
mov
es
scas
addr16
add
daa
aas
mov
xchg
push
lock
adc
icebp
ret
in
popa
push
insl
loopne
daa
jg
loop
pop
push
imul
inc
rorb
cmpsb
lahf
xchg
adc
cmp
adc
and
sub
push
bound
mov
repnz
sbb
sbb
jb
lock
in
jns
les
sarb
repz
jp
dec
jo
cs
dec
hlt
xor
jnp
pop
sbb
mov
hlt
mov
jnp
outsl
enter
mov
jl
xorb
dec
testb
jge
xchg
and
cmpsb
fwait
clc
imulb
test
cmp
movsb
testl
mov
push
clc
fs
sub
rcl
clc
ret
mov
loope
cmp
out
stc
and
xorb
cli
push
cli
jle
sub
fimull
fnstenv
cmp
lods
sti
cmp
test
xchg
.byte
