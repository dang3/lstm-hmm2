add
sub
jae
fs
hlt
xchg
dec
pop
push
adc
mov
in
xor
jno
dec
mov
lods
push
stc
xchg
mov
sahf
sub
sbb
xchg
mov
or
dec
sti
ret
sub
stos
mov
jl
lcall
pusha
pop
rcr
sahf
cmp
xchg
and
shlb
ret
in
dec
jnp
in
test
pop
push
cmp
mov
sbb
lock
push
gs
lock
clc
mov
out
xor
repz
push
les
cmpb
ss
xchg
outsl
mov
sbb
pop
stc
out
cld
subl
jg
xchg
pop
and
inc
ret
icebp
lret
movsb
int
roll
ds
mov
bound
push
sub
sub
stc
scas
test
addb
arpl
sbb
nop
iret
icebp
pop
adc
ret
and
movsl
ljmp
test
or
dec
gs
repz
xchg
je
popa
jl
sbb
icebp
dec
dec
idivb
add
pushf
mov
bound
xorb
test
mov
mov
cli
jmp
lahf
push
push
cmp
pop
inc
jecxz
push
and
out
jne
inc
or
shrl
pusha
movsb
mov
cmp
cmp
cmc
js
enter
jo
add
push
leave
cmpsl
push
inc
push
icebp
out
sub
rorb
imul
fnstcw
mov
and
outsl
sbb
adc
inc
sarb
jnp
fst
xchg
sub
outsb
dec
in
insb
scas
enter
push
mov
inc
pop
pop
inc
push
pop
push
dec
xor
mov
rclb
es
leave
push
sbb
mov
and
or
insl
and
jge
push
push
es
jbe
sbb
ret
mov
pushf
leave
stos
push
add
out
sbb
sub
cltd
mov
cmp
sbb
hlt
jbe
repnz
push
sbb
js
and
lsl
cltd
jne
sub
push
push
dec
notb
push
or
in
cmp
aad
stos
inc
add
and
xchg
dec
clc
jle
cmpsl
sub
cmc
adc
or
push
jg
cli
adcb
cld
pop
push
movsb
shll
xor
mov
clc
pushf
cwtl
fbstp
or
decb
jge
mov
xchg
flds
cmp
push
sub
and
adc
loopne
and
mov
fistl
out
arpl
stos
ret
rcrl
js
repz
cltd
push
pop
lock
jnp
xor
sti
pop
jl
mov
adc
xor
pusha
sbb
fists
cld
inc
rcrl
pop
inc
movsl
xor
mov
into
and
jmp
std
xor
adc
jp
je
cmp
pop
sub
icebp
daa
or
and
popl
xchg
popa
mov
mov
das
xchg
out
arpl
sarb
add
add
pop
adc
mov
jmp
es
pop
and
fcomi
fists
xchg
js
mov
fmuls
lret
aad
or
cli
push
fstps
push
pop
out
inc
inc
shrl
mov
pop
les
and
orl
enter
xchg
push
out
mov
mov
repz
and
nop
jl
sub
scas
iret
add
cmpsl
sub
faddl
fisttpl
sub
xor
aad
mov
daa
jno
and
in
jbe
dec
sub
cli
cmp
js
orl
mov
iret
lret
movsl
cmp
int3
add
add
loopne
pop
test
push
mov
or
pop
pop
shlb
mov
dec
addr16
inc
inc
inc
inc
inc
stc
push
sbb
cmpsb
mov
popa
mov
pop
jp
scas
inc
or
jecxz
mov
jns
test
mov
jo
js
aad
int3
hlt
push
lahf
adc
xchg
adc
xorl
and
mov
dec
mov
cwtl
jmp
and
xchg
cmpsb
lret
add
sbb
inc
scas
cmp
ja,pn
push
or
enter
push
mov
cwtl
pop
enter
ds
sbb
into
loop
or
cmp
sub
pop
andb
add
jle
add
scas
sub
aad
nop
repz
cli
daa
pop
inc
ljmp
cmp
xchg
in
push
mov
xor
push
jbe
xchg
sub
xorb
les
data16
scas
aad
push
sti
lret
pop
test
jnp
fcomps
fiaddl
mov
addr16
inc
jecxz
jno
mov
add
xlat
cld
jp
pop
lds
pop
movsb
jp
test
pop
pop
cmovs
pop
cmpsb
out
out
sbb
sbb
mov
push
lret
lcall
fwait
jp
add
lea
shrb
jae
sub
and
xchg
mov
lahf
cld
push
mov
incl
lret
call
in
push
mov
xchg
lds
jo
les
push
fnstcw
add
rcrl
push
push
xchg
or
fs
jae
and
push
or
std
mov
loope
and
js
imul
or
pop
scas
js
mov
add
repnz
push
and
clc
stc
or
jo
outsl
mov
dec
rcl
inc
mov
pop
scas
xor
mov
jns
cmp
rclb
mov
loop
ds
dec
sub
or
inc
push
xor
or
xchg
cmp
test
dec
pop
dec
sarb
int3
cwtl
dec
outsl
insl
fisubrs
clc
xchg
mov
jae
fcomps
inc
fmuls
addr16
mov
inc
outsl
loopne
in
jne
rcr
int3
or
test
sti
inc
popf
addb
test
mov
rcll
lods
rsqrtps
pop
mov
and
addr16
jb
adc
out
fwait
in
pop
lret
cmp
fcom
sub
cmp
imull
ja
xor
mov
es
fbld
outsb
cmpsb
adc
inc
loop
lcall
jne
jbe
mov
mov
lcall
sbb
jmp
add
mov
mov
xchg
jae
mov
push
stos
ret
popf
ffree
xchg
inc
sbb
xor
addr16
dec
divb
movsb
popw
clc
dec
das
mov
lahf
test
adc
add
in
hlt
xchg
push
mov
es
pop
int3
mov
xlat
cmp
clc
and
popf
add
ret
sub
call
shrl
xor
xor
jnp
dec
push
adc
jne
dec
js
test
dec
jbe
les
cwtl
mov
fadds
sub
cmc
xchg
push
mov
add
pop
in
or
cmp
cmc
adc
push
aam
jge
push
lock
dec
xchg
leave
dec
mov
mov
cmp
jae
mov
repnz
test
lds
mov
xchg
pop
inc
sarl
cmpl
xor
rorb
insl
or
dec
cltd
stos
aad
push
cmp
inc
and
lea
iret
fstpt
pop
mov
in
mov
shr
jnp
popa
cmp
mov
jnp
lea
cmp
fs
sbb
or
sub
nop
outsl
lods
sbb
out
ucomiss
and
or
rcll
nop
das
xchg
adc
dec
in
mov
pop
loope
or
insb
mov
add
sub
shll
xchg
add
or
adc
mov
and
jp
int3
out
or
dec
test
std
outsb
loopne
mov
mov
rclb
mov
mov
sub
jno
pop
std
push
jecxz
icebp
and
aam
mov
mov
movb
cmp
push
adc
clc
insl
mov
outsl
pop
loopne
insl
cld
mov
cmp
aad
popa
xor
stos
out
sub
jge
out
lock
push
add
aaa
push
dec
insb
cmp
imul
out
xlat
jg
lock
cmp
push
arpl
cmp
fwait
out
scas
mov
ljmp
cs
out
jo
icebp
pop
lahf
sti
bound
sbb
xchg
out
push
cwtl
gs
sbb
lahf
jmp
pop
out
test
add
jge
nop
int3
fcomi
mov
adc
inc
jl
dec
pop
test
inc
notb
lods
clc
bound
fistpl
push
push
loopne
inc
mov
and
adc
jns
cmpsl
lret
push
and
int3
mov
lcall
mov
and
bound
sub
xchg
mov
add
loop
mov
push
ja
sbb
or
mov
outsl
pop
or
cmp
mov
mov
out
test
xchg
cwtl
out
push
cmp
lods
loope
adc
icebp
jns
frstor
xchg
adc
lds
cli
movsb
xor
xchg
inc
and
sbb
sbb
mov
dec
shrl
andb
xor
int
push
adc
movsl
mov
add
ficoml
mov
mov
fildl
jb
pop
fwait
loope
shrl
cld
std
fildll
mov
sbb
rolb
mov
and
and
jo
pop
push
mov
popf
scas
jmp
lret
mov
je
pop
or
jp
xchg
in
aam
xchg
xor
add
push
mov
movzwl
loopne
pop
mov
cmpsl
mov
fmull
jg
cwtl
lret
inc
fucomip
add
xor
mov
sub
mov
adc
push
and
jmp
call
ss
outsb
jle
push
inc
rcll
cmp
push
sahf
iret
out
negb
jp
mov
push
jge
and
mov
mov
and
js
sub
call
inc
std
xchg
lcall
mov
movsl
and
pop
mov
popl
into
jb
xor
addr16
clc
ds
cmp
mov
push
mov
ret
rorb
cmp
mov
out
jmp
fimuls
jmp
lahf
cmpsb
daa
or
iret
shlb
xchg
call
int
dec
mov
cmp
in
or
push
jle
pop
ds
cli
or
mulb
dec
movsb
adcl
adc
movsb
cs
xchg
aaa
std
dec
iret
xor
jne
fisubs
jno
and
out
push
in
imul
insb
jge
jne
pushf
stc
add
xchg
jge
lcall
dec
cmp
je
inc
cld
dec
add
pop
fisttpll
adc
xor
mov
daa
xor
push
ret
jge
arpl
jle
and
pop
loop
in
jb
pop
jge
insl
sbb
ret
fadd
jp
xorl
mov
inc
mov
ja
mov
sar
insb
and
mov
stos
jbe
xchg
and
push
in
jb
pop
or
dec
push
enter
jecxz
lock
vrsqrtss
orb
call
stos
push
push
ret
pushf
into
inc
pop
sbb
cmp
sbb
ds
pop
jne
cmpb
adc
iret
bsr
ds
pop
dec
sahf
mov
shrl
or
cmp
sub
mov
ss
jne
loopne
imul
push
dec
in
or
or
loope
sbb
xor
or
leave
mov
std
mov
inc
les
pop
les
pop
mov
cltd
xchg
push
mov
daa
int3
cs
push
je
cmp
fists
lcall
push
std
loop
dec
loope
dec
mov
xorb
add
or
mov
or
jb
pushf
adc
ret
dec
icebp
fwait
outsb
fs
jg
jmp
js
iret
rol
fsubrs
fdiv
mov
push
and
cs
push
cltd
dec
test
mov
mov
xor
mov
popa
pop
cmp
push
xchg
rorb
notl
imull
loop
push
pusha
addb
call
add
push
push
mov
adc
imul
cltd
test
fidivrs
dec
fsubl
jmp
pop
push
imul
stc
sbb
test
cltd
call
cltd
shl
fists
xor
aad
xor
pop
pop
cmp
fs
out
lahf
dec
jbe
popf
jecxz
jmp
ss
outsb
popl
push
pop
getsec
test
hlt
cmpsl
lahf
or
lret
dec
push
lods
add
push
addr16
scas
or
mov
daa
mov
loope
xchg
add
lret
lahf
lahf
out
push
adcb
insl
sahf
enter
pop
or
iret
out
in
movb
adc
pusha
pusha
imul
mov
push
ss
push
and
lahf
jns,pt
mov
shr
xor
sti
es
lcall
or
xchg
push
pop
pushf
loope
inc
ss
xchg
inc
or
jnp
addl
fs
dec
aam
imul
in
mov
sbb
sbb
jmp
xor
sub
cmp
mov
cltd
rol
sub
push
into
push
inc
pop
out
dec
movl
loope
push
stos
inc
cmp
adc
out
sub
filds
sub
scas
sub
cmp
push
cmp
test
ss
pop
inc
shrb
stos
push
cmp
dec
lds
jo
inc
pop
dec
push
or
mov
pop
aad
push
fcompl
jns
popf
fcmovnbe
jmp
adc
dec
in
lret
xchg
sbb
inc
mov
into
adc
or
jb
out
pop
sub
xchg
imul
adc
mov
test
mov
jge
push
in
jmp
xlat
or
aad
xor
lret
out
gs
repz
jmp
inc
shll
adc
push
stos
jle
cmp
sbb
test
mov
sbb
popa
push
push
aad
jp
mov
or
sbb
jmp
xchg
mov
push
or
das
sub
dec
mov
std
xor
ja
inc
outsb
aaa
hlt
mov
dec
gs
scas
outsl
pop
mov
mov
lock
xor
cmp
repz
and
out
dec
jo
sbb
dec
jp
popf
movsb
rcll
cmp
lods
mov
out
push
xor
outsl
add
clc
inc
mov
lahf
rsqrtps
loopne
jns
insl
cmp
mov
cmpsl
faddl
mov
cmp
sub
fwait
jp
mov
or
cmp
push
dec
jnp
outsb
cltd
shlb
push
shrl
out
jl
add
addr16
xor
mov
mov
jno
adc
enter
popf
popf
filds
shrl
lock
in
add
jns
mov
pop
adc
cmpsl
xor
shlb
std
sti
daa
dec
pop
dec
imul
sarb
dec
js
aaa
stc
es
lret
fwait
mov
and
jo
loopne
xchg
pop
adc
sub
xor
scas
mov
enter
inc
test
daa
xor
shr
xchg
push
dec
xchg
push
loopne
mov
jb
punpckldq
adc
jbe
std
push
out
dec
mov
mov
das
xchg
sbb
shll
or
sub
inc
jge
inc
sbb
jo
push
sbb
shlb
cwtl
dec
inc
ret
in
in
mov
and
push
xchg
sbb
mov
lret
pop
jmp
push
and
mov
outsl
sbb
xchg
adc
dec
stc
outsb
mov
push
flds
sahf
fistpll
mov
push
adc
push
pop
sub
and
lret
mov
imulb
xchg
or
push
xchg
push
add
std
scas
aam
lds
xchg
push
cmc
mov
cmp
jl
ret
xchg
cmc
cmp
popa
out
pop
outsl
sub
test
idivb
and
ret
int
inc
ficomps
test
cmp
fimuls
pop
push
jae
jo
cmpsb
aaa
das
fcomi
dec
repnz
lret
or
sahf
add
in
cmp
xor
andb
add
outsl
mov
aam
cli
aas
loope
iret
in
es
xor
sub
cld
movsb
out
push
loope
push
ret
jnp
add
iret
and
jno
out
in
add
cmp
push
inc
repnz
mov
sti
subb
repnz
cwtl
js
sbb
in
pop
outsb
rcll
xor
xor
add
push
jnp
xor
ljmp
xchg
pop
andl
sarb
mov
pop
adc
fdivrl
pop
lea
imul
jmp
jns
push
add
js
lds
push
ret
out
dec
cmpb
cmp
mov
dec
cmp
inc
paddusw
repz
fstpl
scas
lahf
inc
or
add
adc
lods
jne
stos
adc
xor
jae
sbb
mov
or
xchg
test
pop
mov
and
mov
cmp
call
jno
and
mov
push
xchg
and
cmp
pmulhuw
negl
daa
loopne
test
sbb
and
mov
lods
jg
xchg
dec
adc
mov
push
inc
and
aad
daa
imull
or
sahf
sbb
das
and
fmull
test
ret
stc
push
adc
shrl
mov
push
adc
ret
cmp
enter
push
mov
mov
popa
or
adc
pop
jne
or
mov
sbb
or
pop
cs
mov
ja
popa
mov
lock
sub
push
xor
je
inc
sub
rcll
into
cmc
and
and
cmp
loopne
xor
das
jg
mov
jno
imul
xchg
shr
mov
sbbb
pop
adc
add
mov
lods
push
inc
lcall
cmp
mov
cmp
sbb
push
add
addr16
mov
or
sbb
pop
jae
xchg
roll
lods
insl
movsb
jnp
ja,pt
sub
pop
bound
adc
sub
push
jbe
push
out
push
les
xchg
stos
enter
add
xchg
imull
je
push
flds
in
lret
pop
xchg
lcall
mov
jmp
fs
outsb
int
cwtl
jmp
pusha
leave
mov
cmpsb
mov
sub
daa
sbb
repz
adc
and
cltd
and
inc
mov
pop
lret
orb
rcrb
popa
mov
inc
cmpsb
mov
aad
loopne
fnstcw
in
adc
adc
and
or
dec
addb
inc
ret
pop
or
push
push
addb
jl
and
pushf
inc
pop
mov
in
mov
and
mov
repnz
sbb
lahf
push
test
out
jmp
push
jle
xchg
adc
movsb
cwtl
inc
xchg
add
lds
or
mov
imul
pusha
push
and
and
jp
mov
test
xor
shll
mov
xchg
pshufw
cmpsl
mov
leave
cld
lods
push
sbb
xchg
jg
cltd
cmp
pushf
popa
or
xchg
cmpsl
aad
or
xlat
jl
or
popf
pop
scas
push
xor
pop
aad
icebp
cs
add
and
sbb
push
loope
xchg
in
push
test
ja
push
mov
fidivrs
mov
xor
aaa
roll
xchg
ds
xor
cmpl
adc
ljmp
and
das
mov
xor
test
imul
dec
test
adc
fcoml
pop
mov
shl
jae
call
iret
cmpsb
fisubrl
int
ret
mov
cld
pop
flds
mov
ret
sub
aam
pop
sahf
divb
dec
mov
add
xchg
out
push
mov
lods
inc
sbb
lods
xchg
insl
movsb
mov
cmp
fsubrl
in
outsb
mov
mov
inc
xlat
mov
das
dec
adcb
out
or
fwait
sbb
sbb
cli
inc
pop
dec
loope
lcall
loop
push
cwtl
mov
xor
adc
data16
push
and
shrb
mov
outsb
push
sbb
push
push
test
xchg
inc
cmp
cltd
jbe
inc
or
jnp
lret
enter
sub
mov
jns
mov
call
mov
insl
jg
xor
jns
cmp
jb
and
jp
clc
lea
xor
bound
sub
dec
js
sbb
mov
scas
inc
nop
xor
or
shlb
mov
cmp
sti
je
cmpsl
or
mov
orl
in
mov
dec
cmc
mov
mov
insb
fidivl
int3
neg
test
loop
pop
imul
jno
cwtl
inc
mov
jl
frstor
add
and
mov
or
push
mov
pop
cmp
scas
mov
mov
inc
sub
jo
sbb
push
push
repz
cld
in
xor
pop
fidivl
andl
aam
popa
and
stos
popa
and
push
cmc
push
mov
pop
xchg
fwait
mov
sub
bswap
sarb
push
xlat
xor
int
ja
in
mov
mov
cltd
lret
cmp
loop
lcall
add
pop
cmp
inc
inc
lcall
xor
pop
hlt
lods
mov
add
mov
push
mov
jmp
mov
loop
lds
aas
andl
lods
pop
sti
xchg
mov
cmp
jne
xor
gs
push
pop
jecxz
fldcw
pop
stos
push
inc
pop
mov
ja
out
cmc
sub
popf
cwtl
add
sub
cli
jge
movsl
in
idivl
test
into
bound
jmp
fwait
add
test
cmc
into
in
jnp
stos
adc
push
lret
ss
gs
fnstenv
test
xchg
sbb
mov
xchg
jmp
lock
sbb
xchg
out
push
imul
cltd
fbld
xor
sbb
sahf
in
cmp
push
push
cmp
and
pop
ficoms
or
adc
xor
cltd
insl
aam
stc
push
ret
stos
ja
cwtl
stc
mov
icebp
jbe
jmp
arpl
mov
jge
js
out
mov
pop
arpl
mov
fwait
dec
and
add
js
and
dec
fidivrs
cltd
pop
stos
or
pop
scas
xlat
or
pop
rcrb
clc
sub
pop
add
inc
mov
xchg
xchg
xor
add
pop
jo
sbb
mov
sub
pop
clc
lahf
xchg
cli
lcall
xchg
push
push
jle
xchg
add
sahf
mov
sbb
repz
xchg
or
aas
dec
dec
shlb
and
arpl
es
lea
imul
movsl
movsl
jnp
add
push
mov
or
xchg
lods
jb
in
lcall
sti
jae
stos
test
inc
pushl
cmp
mov
lret
mov
xlat
ret
push
cmp
movsb
imul
jl
mov
pop
jg
cmp
shll
xchg
stc
data16
push
dec
push
imul
pop
jg
or
sbb
and
js
shl
pop
sbb
inc
dec
shrb
bound
clc
add
sbb
pop
shl
scas
in
mov
inc
lock
dec
icebp
scas
div
int3
repnz
rol
mov
fnstsw
cmp
sbb
mov
sub
sahf
jne
xlat
loop
fsubl
xchg
es
hlt
fsubrl
push
shll
add
xchg
sbb
lods
mov
in
nop
push
pop
and
xchg
inc
pushfw
adc
out
mov
pop
insl
jo
ret
add
adc
push
daa
sbb
push
and
mov
in
test
lods
pop
scas
ret
out
adc
test
sub
mov
xchg
fcoml
ja
xchg
sahf
xchg
fmull
mov
divl
xor
ljmp
xor
loopne
sbbl
cld
fcmovu
mov
cltd
xor
pop
fucomp
rcl
dec
mov
jo
mov
add
sti
inc
jge
pop
sbb
test
add
outsl
jno
test
push
mov
popf
jbe
sub
fldt
nop
out
stos
int
mov
pop
add
in
lods
fcmovnb
pop
jne
punpcklwd
jecxz
pop
add
cmpsl
iret
pop
cmpsl
or
imul
xor
nop
outsl
mov
jmp
jmp
cltd
aas
xchg
inc
push
shrb
repz
mov
mov
xor
mov
outsb
cmp
add
pop
sarb
dec
pop
push
js
xchg
shr
and
xchg
push
jbe
lret
stos
ljmp
mov
jmp
mov
out
mov
pusha
mov
decb
addr16
xor
xchg
sub
loop
pop
andl
mov
add
xor
sub
sub
sub
leave
data16
dec
imul
jbe
push
ret
mov
xchg
aad
add
or
jecxz
cs
sti
mov
testl
xchg
or
ljmp
xor
pop
pop
lret
mov
mov
movsl
sub
rcr
mov
sbb
jl
fwait
add
cs
xchg
fs
push
dec
sahf
es
xchg
inc
aas
xchg
push
mov
dec
outsb
stos
int
xor
jb
mov
sub
jge
daa
adc
mov
sbb
or
fcoms
dec
inc
jge
sbbl
inc
sub
jmp
mov
sub
pop
shrl
add
dec
xor
mov
fimull
lret
and
jmp
and
mov
aad
fimull
loopne
in
inc
out
mov
test
sarb
js
xor
xchg
jmp
je
or
out
xor
inc
push
aas
push
jo
in
aas
mov
aas
pop
cmp
popf
int3
mov
fwait
sahf
ret
jb
enter
cli
es
mov
mov
mov
xchg
cmpsl
inc
mov
iret
cmpps
xchg
out
test
test
icebp
jnp
adcb
popf
lds
fdiv
loopne
and
pusha
cli
and
mov
fistl
lock
lea
sbb
or
fmuls
push
nop
or
scas
cmp
mov
scas
int3
xlat
fnstsw
sub
cmpsb
xor
dec
test
xchg
xchg
mov
hlt
and
in
shl
push
les
dec
pop
cmp
add
cmpb
adc
lret
iret
ret
cmp
enter
pop
adc
add
push
adc
xchg
pop
mov
adc
jb
lahf
mov
dec
js
push
iret
shlb
adc
mov
mov
lods
sbb
nop
push
fsubs
push
gs
mov
jle
outsl
outsl
mov
js
cmp
add
jnp
fidivl
jae
jecxz
mov
sub
jg
das
dec
push
cmpsl
cmp
pushf
lods
jp
xchg
leave
loope
sbb
ret
popf
aaa
fldcw
hlt
adc
cli
mov
and
aam
pop
xchg
push
cmp
xchg
xor
cmpsb
test
xor
and
ror
or
push
repz
aas
push
adc
cmp
gs
xor
jne
int
inc
leave
stos
mov
xor
dec
lods
in
outsl
cltd
out
cli
lahf
jno
mov
adc
mov
mov
leave
mov
adc
mov
out
mov
xor
clc
add
inc
shlb
xchg
loopne
add
xchg
int3
pop
inc
mov
pop
pop
iret
in
sub
int3
or
mov
imul
lds
or
dec
or
call
jns
hlt
jne
sti
mov
iret
sub
adc
mov
mov
push
adc
and
or
pushf
mov
or
mov
inc
add
test
push
ret
sbb
dec
mov
fldenv
push
and
cli
dec
in
icebp
mov
arpl
or
movsb
cmp
sbb
lahf
adc
and
and
shll
lock
push
jo
vsubpd
movsb
jge
sub
mov
push
push
sbb
cmpsl
aas
lods
push
mov
sbb
pop
push
push
push
insb
popf
imul
test
sbb
inc
fdivs
movsl
lret
fnstsw
dec
adc
ficompl
sbb
clc
add
loop
mov
sbb
cmp
call
inc
cmp
ds
mov
jle
rorl
sub
pop
mov
xlat
ljmp
add
in
xor
add
and
das
fwait
cmp
cmpb
addr16
xchg
xor
and
imul
aad
sub
adc
mov
popa
cwtl
pushl
add
xchg
jg
mov
pop
das
sbb
mov
jno
jl
insb
std
mov
mov
lret
sbb
mov
repnz
sarb
lcall
fldl
ret
cs
cltd
icebp
xchg
mov
or
popf
hlt
xchg
mov
inc
jmp
test
xchg
xchg
sbb
push
and
or
rcl
ds
and
movsl
inc
cmp
jmp
or
divb
push
mov
push
inc
xor
insl
push
jnp
pop
in
leave
loop
insb
and
mov
insb
lods
insb
fmull
push
or
ffree
xchg
cltd
push
call
cmovle
xor
mov
jns
dec
loopne
cli
xchg
hlt
jo
inc
jnp
jge
pop
lcall
xchg
pop
pop
lods
pop
sub
scas
sti
and
xor
cld
fidivrl
mov
add
in
inc
jge
stc
lods
jle
outsl
aad
add
pop
and
call
leave
sub
dec
and
pop
pop
out
daa
xor
out
mov
in
les
pop
notb
repz
mov
test
dec
jae
dec
shrl
mov
testl
sbb
outsb
xor
lock
inc
cmpsb
dec
mov
cmpsl
push
mov
mov
or
mov
inc
or
adc
inc
pushf
push
mov
pop
mov
in
out
sub
jp
stos
test
xor
lret
inc
movsb
mov
fdivrl
pop
or
repz
inc
mov
add
mov
pop
lret
ds
add
cmp
xchg
mov
dec
faddl
ja
cwtl
je
loope
nop
adcb
stc
loopne
daa
cmpsl
mov
pop
adcb
or
rol
adc
testb
push
incb
lods
insl
mov
test
cs
shll
test
mov
push
dec
aam
fs
push
lahf
jp
daa
lods
xor
push
gs
pop
dec
jno
andb
test
jae
xor
xlat
imul
loope
xchg
push
adc
and
lret
mov
adc
mov
rorb
adc
push
and
std
mov
cltd
jb
mov
ret
pop
adc
cltd
xor
test
or
mov
int
cmovle
and
shl
mov
arpl
mov
ret
add
or
jnp
movsl
in
jecxz
ja
and
mov
popf
pop
sbb
popf
mov
into
mov
adc
sub
mov
cs
push
sub
mov
stos
push
cli
int
nop
jg
jb
aaa
mov
shlb
push
add
out
pop
outsb
scas
and
jg
cmp
push
jle
jg
cmp
mov
repz
fiaddl
icebp
jno
rol
imul
aas
gs
cmp
out
sbb
inc
xlat
cmp
lea
pop
jmp
push
dec
lea
xchg
push
mov
sbb
je
cs
add
jmp
push
xchg
mov
push
jl
cli
xor
dec
pop
sbb
mov
cltd
cmpb
push
loop
daa
pushf
rorb
aad
sahf
enter
out
sbb
mov
fidivrs
lcall
adc
mov
mov
adc
dec
test
sub
or
fcoms
sbb
xchg
add
in
inc
test
shll
lds
ljmp
fistps
or
sub
imul
roll
andb
jg
fmull
sbb
sbb
js
ret
adc
das
pop
int
push
sub
std
or
push
test
dec
push
dec
xor
jnp
pushf
cmp
cmp
hlt
push
adc
cmpsb
jl
xor
sub
les
into
flds
scas
adc
imul
aam
incl
ljmp
pop
jp
pop
dec
push
in
inc
adc
and
pop
or
push
sbb
push
pop
stos
lock
mov
loopne
cs
cltd
xchg
ss
push
xchg
xchg
jnp
outsl
and
sahf
mov
mov
shll
lahf
cmp
jecxz
test
filds
mov
sub
jns
add
inc
cmp
out
dec
xor
inc
adcb
insl
lods
mov
bound
sub
dec
push
ficomps
cmp
outsl
dec
out
mov
xor
ss
lea
inc
loop
aam
mov
enter
mov
pop
scas
shll
mov
cs
ret
push
jg
mov
add
dec
sbb
fs
adc
pop
mov
jae
inc
insl
push
cmp
push
pop
jmp
ja
push
shrl
fmull
add
mov
xor
jnp
int
inc
ret
add
mov
inc
add
inc
aaa
mov
adcl
and
sub
repz
shr
mulb
fmuls
cwtl
xchg
inc
addr16
inc
inc
sahf
enter
or
xorl
imul
pushf
loop
lods
seto
push
pushf
scas
sahf
repnz
and
cltd
sbb
sahf
imulb
test
add
cmp
push
lds
into
cmp
mov
in
mov
cmp
in
jae
subl
add
addr16
mov
cmp
or
and
adc
add
add
inc
popf
cltd
mov
imulb
cmc
cs
insl
scas
adc
cmpsl
sub
loop
push
xchg
clc
shl
cli
adc
aam
int3
pop
cmc
xor
pop
stc
fcomps
mov
fs
lahf
mov
pop
xchg
daa
add
inc
fs
jl
ja
adc
arpl
push
ja
jle
and
mov
or
and
test
test
mov
xchg
add
adc
dec
fisttpll
imul
notl
lods
xchg
mov
daa
inc
sub
push
xor
popa
xor
and
lahf
sahf
mov
clc
or
stos
outsl
hlt
out
push
sbb
outsb
rcrb
int3
pop
outsb
sub
xchg
xchg
xchg
shr
sub
fwait
mov
lea
mov
test
mov
movsb
scas
addr16
adc
stos
or
fdivl
movsb
imul
testl
leave
push
scas
mov
jle
mov
das
jae
adcb
je
mov
hlt
idivl
and
sahf
cmp
out
aam
fwait
push
outsl
push
lock
fisubs
shl
mov
and
add
xlat
imul
mov
xchg
pop
sbb
fldcw
jmp
test
andps
lods
into
and
push
shll
fldt
bound
jecxz
cmp
xchg
mov
insb
cmp
subl
xlat
xorb
inc
test
out
fstpt
hlt
aad
adc
jo
xor
fisubrs
xchg
out
fists
adc
mov
mov
pop
stos
and
aam
adc
and
les
cwtl
xchg
mov
jl
rcll
pop
jecxz
push
pop
and
adc
sub
bound
adcb
popa
inc
popf
push
inc
flds
sbb
lock
lcall
cli
or
sarb
aad
cmpsl
test
cltd
lock
hlt
or
cmp
fbstp
xor
jnp
lcall
sbb
ljmp
xorb
and
popa
dec
adc
add
pop
stos
push
std
mov
in
cld
loop
lods
or
lret
cvtdq2ps
movsb
leave
cltd
in
fbstp
adc
dec
mov
rol
in
into
mov
roll
stc
stos
push
outsl
test
xor
dec
jecxz
or
sti
xchg
lods
in
sub
fldln2
ret
xor
mov
and
aaa
sub
repnz
fldt
es
ret
lahf
jl
je
sarb
fdivl
orb
mov
mov
mov
cwtl
push
test
in
sbb
add
cwtl
ds
es
test
xor
mov
dec
pop
mov
xor
aaa
jo
ret
fst
lds
out
sub
lods
imul
insb
jg
sub
cwtl
lret
testl
inc
mov
fstps
addr16
mov
inc
inc
xchg
sbb
and
lock
push
xcrypt-cfb
cmpsl
popa
and
sub
jp
cmpsl
out
in
adc
or
test
call
cmp
lods
dec
pushf
roll
pop
imul
jnp
mov
ja
dec
mov
inc
out
add
sahf
jae
mov
leave
test
push
xor
sub
lret
int3
js
xor
call
push
pop
sub
cmpsl
add
inc
ljmp
pop
cld
roll
push
cmp
call
insl
push
loope
lds
jmp
pcmpgtd
addr16
add
cmp
sub
sahf
push
leave
xchg
dec
cmc
int3
push
shll
rorl
push
stos
mov
imul
jmp
cltd
std
js
nop
xchg
lret
gs
mov
pop
in
and
inc
out
int3
dec
mov
pop
stos
jno
push
mov
sub
mov
xchg
pop
jns
test
in
lock
sbb
xchg
jno
into
sbb
push
popa
mov
out
fsubrs
shlb
adc
inc
ss
js
js
dec
rcll
mov
pop
mov
adc
sub
mov
addr16
push
imull
mov
mov
jecxz
rcll
shrl
setbe
inc
daa
arpl
cmc
push
leave
ljmp
jge
adc
and
mov
pop
pop
sbb
mov
sarb
mov
loope
pop
insb
cmp
aam
jne
pop
dec
sbb
je
adc
xchg
ds
sub
mov
mov
out
push
jl
inc
je
cmp
nop
pop
push
subb
call
sub
fcoms
pushf
mov
jnp
sub
adc
fwait
pop
jno
movsl
nop
adc
or
cltd
jbe
cmp
mov
mov
in
jge
scas
jg
in
inc
ds
dec
inc
imul
xlat
rcrl
stc
add
push
mov
push
pop
cltd
dec
xor
jbe
icebp
mov
std
jl,pn
std
push
mulb
dec
mov
cltd
addl
jg
sub
dec
pop
int
out
push
stos
mov
sbb
mull
or
sbb
sbb
mov
stos
mov
xlat
clc
fdivrs
inc
mov
leave
pop
mov
and
rol
scas
negl
inc
js
pop
push
add
test
bound
dec
sbb
es
out
pop
jno
mov
push
fimull
shrl
jae
jns
ss
mov
sbb
sub
mov
jp
popa
int
dec
scas
adc
pop
adc
daa
int3
in
dec
repz
mov
sahf
jge
xchg
sahf
push
jae
cltd
test
jo
out
jle
push
jg
mov
std
pop
mov
lods
cltd
mov
pop
or
mov
sti
negb
inc
fs
cmc
jecxz
test
jle
xor
adc
out
iret
adcl
sarl
cs
testb
add
lods
arpl
or
adc
adc
mov
mov
js
stos
int
std
and
incb
push
cmp
pop
push
pop
xor
daa
repnz
jb
lret
icebp
mov
gs
push
cmpsl
and
mov
cld
stos
dec
jge
mov
push
pop
sar
mov
movsb
cmc
fincstp
or
enter
cmpsb
pop
sbb
or
cmc
shll
and
popf
mov
sub
in
fwait
mov
or
cmp
push
mov
in
adc
je
lock
in
lods
xchg
stc
mov
loopne
xor
movsb
test
or
xlat
into
rorb
insl
pushf
pusha
fidivrl
icebp
inc
pop
and
test
jmp
outsb
or
rcrb
xlat
popf
and
rclb
pop
test
mov
dec
mov
mov
jg
inc
loope
xlat
pop
test
movsl
mov
and
cmp
jae
fcmove
lods
loope
ret
dec
stc
push
mov
sbb
jg
pop
es
rol
and
inc
push
mov
push
xor
and
adc
std
pop
scas
push
cli
fwait
cmp
and
into
dec
movsl
daa
inc
fs
lret
xor
push
frstor
sub
dec
push
xchg
or
nop
sbb
push
xchg
ljmp
or
mov
adc
cmp
cmp
push
loope
dec
ja
mov
rolb
mov
inc
sbb
cltd
cs
fldcw
push
inc
loop
clc
mov
xchg
je
jnp
cmp
filds
adc
xchg
lds
pop
divl
loopne
out
dec
movsb
fnsave
adc
into
and
popa
inc
adc
mov
pop
inc
cmp
or
cmp
add
jae
mov
inc
xchg
mov
aas
mov
fadd
push
pop
inc
adc
ljmp
xchg
jnp
les
aas
test
in
push
daa
das
imul
es
rolb
pop
aas
pop
aam
mov
cli
das
cmc
xchg
leave
aaa
and
xor
insb
or
lds
fsubr
adc
push
ret
mov
stc
scas
orb
xlat
add
mov
pop
sub
jp
pusha
inc
cmp
mov
fwait
and
jns
add
jbe
sbb
aam
push
fs
jb
mov
test
push
add
xchg
data16
jecxz
jbe
adc
aaa
ret
movsl
ret
add
adc
gs
or
xchg
lret
in
mov
enter
scas
lock
mov
sbb
gs
mov
notl
fistps
das
jno
and
inc
add
push
xor
stc
mov
jg
jle
pop
jno
xchg
pusha
mov
incl
js
jle
jnp
es
inc
cli
adc
fs
orl
pop
cwtl
fcompl
loope
sbb
mov
imul
push
push
subl
cmp
in
xchg
jb
out
sbbl
clc
and
popl
xchg
cmc
rcrb
aas
fsubrs
cmp
lret
ret
xorl
sub
clc
sub
lds
cmp
mov
arpl
xchg
in
pusha
jae
sub
mov
or
cmp
add
inc
ljmp
shr
hlt
aam
pop
sub
test
push
inc
cwtl
sbb
or
jmp
or
push
mov
pop
ja
lods
xchg
aaa
jecxz
bound
call
adc
in
mov
push
out
dec
or
sub
mov
jl
xchg
adc
scas
outsb
dec
into
xor
pop
out
dec
fisttpll
iret
dec
out
dec
in
push
insb
lods
mov
sbb
mov
lret
nop
aad
test
pushl
lret
cltd
aam
sbbl
idivb
insb
push
jb
sbb
ret
xchg
adc
aad
jno
and
add
bound
push
test
cmpsb
jo
mov
lahf
clc
pop
movsb
and
push
jg
and
inc
pop
push
lds
add
aaa
nop
mov
jp
pop
pop
cmp
push
call
pop
jnp
nop
iret
popf
inc
xor
xchg
dec
ja
inc
in
cltd
mov
push
pop
into
imul
adcl
mov
shl
ficompl
dec
in
out
stc
adc
cmp
push
mov
rcrb
push
fs
sub
es
in
add
icebp
push
xor
push
xor
dec
add
xor
sti
daa
dec
cs
inc
xchg
divb
in
jmp
sub
fcomps
shl
pop
or
nop
mov
jle
pusha
sub
mov
xchg
fisttpll
inc
das
je
adc
inc
xchg
xor
test
pop
pushf
jp
push
mov
cwtl
dec
sbb
xchg
adc
xchg
nop
adc
xorl
ljmp
pop
pushf
out
and
lret
or
mov
cmpsb
inc
into
sbb
add
inc
adc
sbb
xor
lret
es
or
xchg
jp
inc
sub
pop
or
nop
je
cmpsb
cmpsb
sbb
adc
sub
fs
pop
mov
popa
aam
adc
in
pop
fistps
xchg
add
test
cld
lea
xlat
push
mov
sbb
cmp
scas
pop
out
ss
lock
in
clc
fisttpll
and
dec
mov
mov
xor
push
pop
xor
adc
inc
loope
fdiv
call
pusha
mov
in
cs
ds
lret
xchg
mov
dec
fadd
loope
test
push
xor
pop
dec
repz
push
into
popa
clc
mov
int
xor
cmp
les
aaa
scas
es
lcall
cmpsb
xchg
xchg
lret
push
imul
jecxz
call
lods
lods
cmpsb
add
popf
loop
ret
mov
cmp
rolb
in
sbb
mov
rorb
mov
xchg
sbbb
cs
push
xor
cwtl
jge
rdpmc
mov
inc
adc
pop
pop
mov
mov
jae
mov
mov
jle
sbb
outsb
push
aam
nop
jo
fdivr
in
xchg
aad
and
shlb
es
jg
jp
nop
lods
inc
roll
mov
sahf
jne
mov
idiv
call
cld
push
ror
mov
rorl
bnd
push
shll
add
xchg
lods
loope
push
jb
stc
or
cmpl
mov
push
cwtl
scas
add
push
test
iret
cmpsb
inc
cmp
cmp
adcb
aam
iret
mov
or
mov
cwtl
addl
push
adc
mov
cmp
aad
daa
sub
arpl
and
mov
mov
test
subl
adc
jl
lock
mov
xchg
inc
cmp
mov
xchg
push
cmpsb
pop
clc
mov
fwait
int
ret
test
or
mov
or
sahf
and
mov
jno
int3
ret
sub
mov
sub
ss
xchg
stos
int
shrl
movsb
lea
sub
push
jle
fistl
ficompl
fmul
add
or
adc
push
lods
inc
fcoms
inc
mov
test
add
cmp
out
mov
std
push
fcmovne
in
int
add
shll
rolb
mov
stos
or
aad
int3
jb
rcll
dec
mov
movsb
jl
xchg
es
adc
ljmp
cmc
push
xor
imul
dec
xlat
sbb
shrb
fstl
pop
sub
pop
mov
aad
aad
call
and
sbb
jb
push
test
pop
cmpsb
cwtl
rorl
dec
push
bound
and
cmp
fwait
pop
pop
notl
shr
aas
fnstsw
xlat
test
mov
sub
repz
arpl
xor
mov
int
and
leave
xor
ret
les
xchg
fisttpl
leave
cmpl
aam
inc
xor
popf
add
dec
mov
adc
es
fdivrl
ret
fs
mov
inc
mov
loope
fadds
lahf
cmp
aam
mov
push
lret
notl
out
scas
repnz
sub
cmp
push
decl
sti
cwtl
fs
lahf
xchg
and
out
dec
cmp
dec
popa
dec
fstpl
iret
out
inc
ror
cld
lea
sub
pusha
dec
xchg
pusha
add
mov
cld
test
sub
incb
pushf
cmc
in
inc
jp
add
stos
add
fwait
dec
mov
sarb
sub
inc
les
xchg
das
mov
pusha
stos
sub
mov
aaa
or
inc
in
fs
in
loop
cltd
xor
cmp
jmp
jl
inc
sub
mov
dec
sbbb
pop
sti
cmpsl
lods
ja
iret
pop
jmp
sbb
jbe,pt
lahf
je
cmp
inc
mov
outsb
not
insl
pop
adc
aas
adc
aad
mov
test
std
add
mov
imul
add
shll
inc
and
testb
mov
or
sahf
ss
clc
inc
xlat
lods
xchg
jnp
in
dec
mov
xchg
cmp
mov
xor
mov
and
xor
xchg
push
add
dec
dec
cmp
mov
arpl
xchg
mov
push
test
hlt
push
add
dec
repnz
adc
push
xchg
add
out
int3
outsb
loope
adc
push
test
scas
insl
out
sub
sbb
or
aam
add
xor
popf
ljmp
incl
pop
popf
ljmp
push
sahf
fistl
sbbb
xor
pop
push
cmp
aaa
mov
push
xorb
out
subl
imul
loop
enter
add
pop
imul
ja
fcomip
pusha
sbb
pop
inc
js
hlt
add
pop
cwtl
ror
dec
ja
int
ljmp
insb
lods
jns
movsl
push
cwtl
cmpsb
lods
lods
dec
mov
jmp
jecxz
dec
xchg
inc
adc
push
pushf
add
xor
aad
les
cmp
arpl
icebp
xchg
jle
pop
ret
gs
jo
cmp
mov
sbbb
inc
jb
mov
xchg
ds
out
test
leave
jae
aad
fidivrs
pop
aad
mov
negb
andb
adc
out
rolb
adc
cmpl
jecxz
ds
clc
mov
adc
rcr
mov
or
scas
sub
aas
add
call
pop
imul
test
mov
jno
lret
pop
rcr
add
into
mov
push
ret
jle
cmp
lret
sti
pop
pop
xor
aam
mov
jp
mov
dec
addb
bound
lods
arpl
lods
add
popf
jnp
push
cmc
mov
stos
sbb
stos
and
adc
mov
xchg
enter
push
scas
xor
sub
cmp
roll
jle
loopne
lret
jl
jmp
mov
popa
sub
outsb
dec
jb
dec
sahf
cmp
enter
push
mov
adc
ret
loopne
jno
push
xor
lock
add
pop
inc
or
es
fistps
pop
imul
out
pop
and
scas
add
push
xor
mov
dec
adcb
out
jg
push
test
dec
imul
cmp
cmp
mov
cmpsb
xor
sbbb
pop
cmp
aad
lods
mov
lea
ss
mov
xchg
mov
push
es
dec
push
into
in
push
xchg
inc
ret
dec
xor
test
outsb
pop
addr16
cld
cmp
fsubrs
insl
pop
xchg
cld
mov
in
sub
lahf
add
sub
dec
mov
or
cwtl
jno
mov
push
xchg
imul
sub
dec
pop
cli
lret
sbb
pusha
imul
cmc
test
inc
jo
in
pop
adc
and
dec
aas
seta
inc
dec
cmpb
faddl
inc
in
xchg
push
inc
fpatan
addl
pusha
sub
rolb
add
and
mov
repz
adcb
clc
movl
outsb
out
mov
jecxz
ficoms
or
jmp
mov
mov
mov
aam
divl
push
shlb
pusha
aaa
imul
inc
push
mov
cmp
cmpsb
lods
sbb
repz
xchg
fildll
mov
addb
cli
push
cwtl
decl
adc
cmc
cwtl
jb
xor
pop
jo
dec
sbb
ds
inc
and
adc
inc
lret
jno
pop
mov
inc
sahf
adc
add
repnz
lds
adc
movsl
push
xchg
dec
sarb
xlat
das
add
movsl
scas
lods
pop
pop
scas
xorb
pop
int
or
fs
dec
adc
cmpsl
lret
jl
dec
imul
divl
icebp
inc
pop
inc
gs
insb
in
sub
adc
rdmsr
jne
mov
jo
add
or
mov
lods
jo
xchg
outsb
adc
jae
outsl
sub
xor
ljmp
mov
in
jle
or
in
mov
sbbl
pop
int3
aaa
cmp
sub
in
inc
dec
mov
sbb
enter
pop
ret
pop
in
mov
mov
cmp
and
pop
cmpsl
or
mov
lock
outsl
fstps
or
testl
shl
jl
cltd
clc
es
xor
sub
pop
fcmovu
pushf
and
jl
sub
dec
mov
lahf
push
roll
shll
cmp
pop
sbb
pop
lret
sbbl
pop
fbld
or
loope
popf
jp
dec
jns
pushf
or
mov
or
mov
decb
cltd
mov
adc
out
daa
jae
rolb
stc
lret
inc
pop
mov
pop
sub
shlb
iret
sbb
lret
imul
mov
out
mov
and
notl
popa
int3
sbb
nop
ja
inc
js
leave
pushf
sub
inc
push
pop
clc
xchg
cmp
push
mov
pop
and
lds
negl
push
sti
cltd
inc
es
sbb
ds
arpl
outsl
sbb
and
je
test
aas
push
add
sbb
sub
std
jnp
add
ja
or
neg
push
aad
outsb
aaa
in
sub
xor
inc
aam
xor
push
lret
mov
fidivl
cld
add
lret
pop
mov
mov
pop
add
push
subb
push
into
je
jp
cmp
or
jnp
xor
popf
sbb
stc
pop
lea
or
jb
dec
stos
idivb
aas
stos
inc
jno
fdivrs
cmpsl
inc
loopne
pop
clc
mov
cmp
or
imulb
in
cmp
push
leave
cwtl
mov
sub
cli
das
cmp
enter
push
lea
mov
dec
dec
xchg
lods
lahf
sub
mov
in
sub
out
cmpsl
jmp
and
xchg
push
aas
lods
jo
sub
push
push
mov
hlt
xchg
jb
adcl
pop
ret
test
int3
arpl
xchg
mov
or
mov
cmp
and
les
andb
dec
jg
in
std
add
jecxz
jns
pop
jno
dec
rcr
arpl
fdivs
push
jnp
stc
data16
out
inc
mov
fsubl
aam
sub
and
jg
inc
mov
js
cmp
xchg
jl
test
jns
xchg
inc
aas
gs
mov
mov
pusha
lcall
dec
arpl
out
jp
clc
outsl
sti
pop
and
mov
xlat
pop
mov
and
sub
mov
fdivrs
int
jp
mov
lcall
outsl
push
test
inc
push
ret
jb
jo
xor
dec
mov
andl
jg
jge
inc
add
add
movsl
cld
fimuls
leave
jne
mov
mov
xchg
push
into
push
lds
sbb
test
lret
aaa
imul
add
sahf
idiv
movsl
xchg
lret
or
dec
or
lea
ja
jl
int3
inc
mov
fidivl
jle
ret
pop
in
dec
push
orb
and
sub
xlat
lcall
fstl
int3
inc
xchg
cltd
xchg
add
ja
mov
pop
loope
adc
jl
xchg
push
mov
cs
daa
or
cwtl
mov
and
cmp
fsubrl
or
and
dec
push
insl
and
outsl
jg
incl
ljmp
fwait
subl
push
xchg
adc
imul
jae
xor
push
mov
lahf
in
sub
pusha
mov
push
fdivrs
test
insl
inc
aam
jo
fcomp
test
xchg
or
imul
ja
cld
mov
in
jmp
cmp
ror
pushl
jg
sti
cmp
push
call
jmp
jp
mov
fucomi
movsl
fwait
pop
mov
adc
mov
mov
push
or
arpl
ret
sub
and
insb
xor
inc
int
movl
pop
xchg
jb
aas
jns
add
push
lret
loope
mov
pop
or
notb
incl
mov
fs
ja
stos
pop
sbb
hlt
mov
aam
pop
dec
sbb
movsb
mov
adc
jp
jge
dec
cmp
aad
sbb
lcall
and
sbb
test
mov
out
mov
sub
std
clc
lods
out
pop
push
in
sti
sub
inc
mov
icebp
and
out
add
push
xchg
or
lock
inc
fmuls
and
pop
dec
sub
mov
aaa
and
sub
mov
insl
xor
fcompl
nop
cltd
into
and
arpl
xchg
rcll
sbb
jae
jecxz
and
inc
jns
and
lahf
fadd
lcall
nop
mov
jg
ja
loop
lds
dec
ret
cmc
jnp
pop
pop
lods
pop
inc
jae
popa
jno
dec
xchg
mov
mov
das
cs
pop
popf
outsl
pop
inc
aas
sbb
adc
sub
inc
cwtl
and
mov
ljmp
repnz
mov
push
cmp
loope
xchg
and
shlb
sbb
je
aam
cmp
das
sub
mov
dec
fiadds
pop
aaa
aas
jbe
sbbb
gs
stos
push
loopne
sub
add
and
ljmp
ret
push
mov
mov
in
in
or
adc
jmp
mov
loop
push
and
imul
and
xchg
in
cmpsb
xor
imul
pop
xchg
cltd
sub
inc
xor
cmp
je
das
push
mov
shll
mov
and
and
sub
add
cmp
xor
inc
sub
int
fs
in
cli
adc
xorl
mov
scas
in
and
mov
mov
cmp
inc
fildl
lock
sub
sti
add
int
jb
pop
push
in
div
out
ds
add
fnstsw
push
adc
mov
shrl
mov
mov
fcmovb
xor
call
push
movsl
sub
popf
int
icebp
test
xchg
popa
inc
lahf
add
and
lods
loope
sbb
cwtl
orb
mov
sahf
wrmsr
cmp
mov
mov
sbb
call
mov
shll
cmp
add
mov
popf
insb
leave
in
clc
mov
rolb
test
adc
cs
xor
and
aam
sub
pop
sbb
shlb
push
mov
js
push
rcrb
pop
adc
cmp
push
cmp
xchg
xchg
mov
mov
lret
jge
inc
mov
mov
nop
shl
fistl
arpl
xor
pop
js
jno
repnz
ss
xor
jae
push
insl
lea
stos
gs
loop
test
push
imul
sub
xchg
scas
int3
jnp
inc
xchg
xchg
lahf
sbb
jecxz
inc
repz
insl
adc
pop
inc
pop
cmp
outsb
hlt
mov
fwait
dec
insb
pop
xchg
or
or
into
xchg
rcrl
and
add
popa
inc
lret
ror
shl
jecxz
lret
mov
push
insl
ds
add
sub
loopne
push
fcmovne
mov
cmpsl
scas
dec
loopne
mov
inc
inc
addr16
mov
xchg
insl
cmp
nop
fldenv
jb
inc
or
or
pop
mov
and
ret
lods
pop
jle
mov
and
mov
cmp
lret
sub
and
shrb
add
leave
fucomip
sti
je
add
ss
out
pop
pop
pushf
mov
mov
dec
cmp
push
jb,pn
fs
mov
jae
pop
pop
inc
lods
cmp
sarl
mov
popf
push
shlb
vphadddq
int
xor
mov
movsb
pop
pop
aad
hlt
data16
xchg
lock
jo
mov
xor
inc
jg
sub
arpl
cltd
mov
adc
idiv
jae
aaa
fsubrs
ret
push
fimuls
cli
or
push
inc
xor
arpl
call
cmp
pop
xchg
mov
popf
rorb
push
jbe
loope
sahf
and
dec
cmp
mov
inc
das
inc
or
xor
dec
cmp
in
shrb
mov
shll
nop
insb
jnp
add
daa
cmpsl
mov
out
test
stc
jmp
mov
jg
out
xor
adc
popa
xchg
sbb
pop
push
and
loopne
jnp
outsb
repz
cmp
mov
inc
xchg
aam
stc
adc
add
cmp
push
mov
sbb
mov
out
loop
mov
xor
inc
push
mov
mov
lahf
lcall
mov
das
repz
fwait
push
jnp
arpl
mov
or
or
in
mov
add
push
dec
xlat
cmpsb
mov
push
movsb
fs
and
xchg
mov
jae
sti
xor
cs
cli
mov
push
js
sbb
sbb
jecxz
out
inc
xchg
add
imul
push
mov
je
je
mov
cmpsl
ficoml
cwtl
mov
ljmp
jmp
decb
xor
adc
gs
pop
inc
aad
ss
jle
push
inc
pop
mov
scas
sub
mov
std
subl
jle
in
sub
sbb
jnp
jns
adc
scas
xor
mov
in
and
sarl
sub
sahf
inc
arpl
push
icebp
sbb
lahf
mov
ja
mov
ret
in
xchg
shl
insb
fsts
and
mov
sub
addr16
fsubrl
add
lahf
inc
cmp
xchg
and
mov
dec
insb
xlat
sbb
mov
mov
fcoms
pop
dec
mov
mov
scas
test
mov
enter
dec
sub
adc
xchg
mov
push
and
push
jno,pt
jp
jb
int3
dec
sahf
out
pop
arpl
or
ss
clc
cli
mov
pop
xchg
outsl
jns
mov
cs
out
inc
scas
and
iret
xchg
repnz
mov
lret
add
xchg
mov
sbb
int
scas
inc
ljmp
push
inc
rclb
bound
jnp
inc
push
loop
inc
lock
repz
neg
lret
and
out
jecxz
jnp
stos
dec
test
add
popa
mov
mov
imul
repz
mov
scas
push
enter
insl
add
push
dec
stc
hlt
loope
call
push
repnz
pusha
inc
jae
xor
das
inc
adc
lock
fs
test
fcomip
nop
cli
dec
testl
sbb
cmpsb
icebp
dec
gs
cmp
leave
mov
inc
repz
fwait
loopne
pushf
mov
aaa
xchg
sbb
das
dec
xchg
xor
xor
out
cmp
rcr
mov
push
inc
pop
xchg
andl
pusha
mov
sahf
not
add
dec
hlt
popf
mov
jmp
mov
movsl
movsl
xchg
xchg
xor
mov
push
test
icebp
int
das
jmp
lods
lock
mov
and
loopew
jns
fstl
stc
ja
sbb
jl
lret
lret
bound
hlt
and
push
jo
xchg
fmull
push
and
arpl
dec
push
adc
xchg
mov
aaa
jge
jb
pop
shlb
push
les
std
shrb
pop
push
jmp
arpl
addl
aaa
push
mov
pop
das
and
inc
or
cmp
mov
mov
ret
repz
std
rolb
cmc
push
scas
mov
cli
or
mov
mov
sbb
hlt
dec
repz
cmp
cmp
add
cmpsl
mov
stos
dec
sub
scas
mov
cmpsb
sub
mov
xchg
andl
leave
and
mov
std
mov
mov
popf
push
sub
stc
js
call
rcr
int
faddl
push
xlat
lds
pop
lods
dec
and
and
jmp
jmp
mov
adc
jecxz
xor
adc
xor
push
leave
sbb
nop
mov
fdiv
jg
dec
jb
lods
mov
bound
ja
pop
cmp
addb
xchg
movsl
dec
hlt
push
pop
ja
push
loopne
sbbb
int
jnp
mov
push
rolb
in
mov
test
lret
shll
mov
mov
in
repz
xor
stc
sub
and
inc
inc
xchg
pmuludq
arpl
push
adc
int3
mov
pop
xchg
cld
lods
fdivrp
sub
add
pusha
mov
jmp
dec
lahf
push
scas
xlat
jns
testb
outsb
fs
pop
and
add
mov
mov
aas
sbb
adc
pop
xchg
popf
cmpsl
and
int3
jae
bound
ljmp
cmp
pop
movsl
cmp
xchg
lea
push
js
mov
jge
test
shl
scas
cwtl
mov
bnd
mov
cmc
pop
scas
test
add
inc
daa
or
pop
out
lcall
in
mov
int
insb
jl
sub
inc
test
add
pop
add
in
test
push
inc
movsl
xchg
sti
negl
ret
aad
sub
inc
sbb
imul
leave
stc
xchg
pop
in
sub
pop
sub
mov
stc
pop
stc
jb
or
subl
jne
repz
push
fiaddl
mov
enter
cmc
pop
jae
push
sbb
imul
adc
xchg
cmp
rcll
test
lcall
mov
ss
and
sahf
sub
cmp
add
leave
hlt
dec
setl
adc
sbb
and
mov
add
pop
sbb
push
ret
pop
cmpsl
scas
xor
xor
pusha
and
in
mov
xchg
sub
jae
push
lds
mov
aad
pop
jg
or
nop
dec
push
or
ja
jno
dec
ret
mov
nop
cmp
sub
outsb
lds
push
xor
cwtl
insl
jp
or
or
clc
clc
fisttpl
pop
push
iret
jb
into
jbe
jo
or
daa
xchg
ljmp
adc
jl
inc
mov
mov
or
cwtl
jp
jbe
vpshab
mov
mov
fsts
mov
sub
add
scas
aam
lock
in
xchg
ss
push
cwtl
orb
xchg
or
jecxz
insl
cmp
push
jb
stc
sbb
mov
pop
movsb
xchg
rolb
sbbb
mov
cmp
cltd
js
xor
arpl
in
sbb
popf
xchg
lods
adc
fdivl
sbb
add
lds
in
aad
mov
or
cld
fcomps
shlb
dec
sub
ret
fiaddl
cmp
push
push
sub
mov
sub
es
js
pop
add
lahf
test
dec
fldt
iret
xcrypt-ecb
cmpsl
setl
push
pop
lds
jne
repnz
gs
and
loop
pop
inc
adc
outsl
pushf
in
je
or
fs
cmp
subb
int3
sub
mov
rol
add
cld
mov
test
or
adcl
arpl
jmp
es
lcall
jg
inc
cltd
loopne
jns
inc
mov
adc
add
mov
imul
push
mov
js
jne,pt
movsl
nop
arpl
push
cltd
test
xorl
movsl
push
in
and
xor
lcall
xchg
mov
pop
mov
fwait
cmc
es
mov
mov
sti
sarb
and
dec
lods
lcall
adc
out
add
in
or
sbb
dec
xor
mov
out
rol
lret
and
lds
xchg
sub
lcall
jbe
inc
int
pop
jp
jp
inc
test
jno
enter
lahf
inc
inc
sbb
int3
sti
and
xchg
hlt
adc
movsb
or
fstpl
mov
arpl
inc
mov
xchg
fidivl
movsl
lret
nop
sub
int3
lcall
rcrb
test
fsub
stos
push
or
xorb
jge
push
cmp
pop
dec
mov
lret
rorb
in
fildl
and
jns
lds
jbe
pop
mov
cmp
push
fstl
rcll
push
pop
mov
out
imul
subl
xchg
notb
xor
or
jecxz
lcall
std
cmp
repz
int3
xchg
jnp
add
mov
push
cmp
push
ret
adc
inc
mov
fimuls
xchg
jno
xor
cmp
cmpsl
sub
sbb
repz
out
cmp
cmpsb
hlt
shr
adc
sbb
loope
sub
iret
jno
cmp
cmp
dec
inc
aad
jns
jg
movb
pop
push
je
sbb
pop
lret
imul
dec
sub
jo
fcmovne
xor
ss
lock
es
fs
jg
cmpsl
sbb
fidivs
mov
push
adc
daa
xchg
xchg
sbb
and
push
flds
nop
nop
inc
inc
sub
push
cmp
decl
or
mov
xchg
lds
xchg
jl
lret
test
jmp
add
fwait
cmp
roll
stos
inc
sahf
ja
jae
testl
push
sar
push
movsb
mov
lret
cmpsl
jmp
mov
push
popf
ret
inc
xor
insl
pushf
fisubs
out
mov
dec
das
dec
out
cmp
mov
outsl
test
add
mov
sbb
leave
movsl
not
mov
shlb
sub
add
cs
sbb
sub
push
loop
pop
rorl
xlat
mov
add
jo
inc
inc
jae
ficoml
cmp
cmc
xor
mov
sbb
call
xchg
ret
or
sahf
jnp
cmp
mov
aad
divb
pop
fucomp
imul
xchg
xchg
and
repnz
sbb
pop
aaa
add
and
fsubp
pop
je
mov
aad
pop
fsubl
out
js
ds
pop
push
aas
xchg
xor
int3
mov
cmp
loopne
dec
scas
and
mov
test
dec
jl
jae
aaa
xchg
mov
adc
adc
je
adc
nop
inc
jmp
adc
sbb
mov
cmp
cld
sbb
out
sbb
lea
aam
dec
mov
pop
mov
int
sub
das
mov
test
rcrl
leave
push
jcxz
dec
jb
lcall
dec
xchg
xchg
push
imul
cmp
fsts
jns
out
adc
cmp
rorb
ret
leave
imul
and
test
cmp
mov
or
cwtl
cmp
mov
fcomps
stos
fld
negb
insl
or
sbb
jno
inc
jbe
cs
icebp
mov
int3
mov
imull
xor
into
idivb
aaa
ja
xchg
nop
pushf
add
stc
lret
test
or
pop
push
jnp
data16
fistl
mov
and
in
pusha
movsb
xchg
mov
ljmp
movsb
cmp
pop
push
pop
mov
jno
aam
cmpsl
movsl
je
daa
lock
lret
inc
aaa
pop
fsubp
cld
add
pop
cmc
or
lret
inc
cmpsl
add
ja
jg
popa
int3
xlat
stos
out
pop
mov
push
mov
sti
pusha
lcall
scas
rolb
test
mov
std
aad
jmp
inc
getsec
inc
xchg
jb
sti
addb
xor
sbb
dec
cld
pop
rclb
push
js
dec
fs
mov
repnz
xor
xchg
test
mov
sbb
cmc
push
pop
inc
push
sbb
pop
add
rclb
cli
mov
jl
fsubl
push
out
push
cmp
and
pop
ret
mov
mov
pusha
add
in
mov
mov
lret
inc
in
jmp
mov
popa
xchg
in
dec
dec
test
sub
lcall
in
sar
and
lret
stc
cmp
loope
mov
lock
add
push
fcomps
std
sahf
into
add
fistps
inc
inc
cmp
xor
decl
inc
inc
sub
mov
fidivrs
lea
dec
xchg
jns
mov
dec
and
sbb
cli
push
cs
test
push
inc
mov
xor
clc
cld
push
imull
push
add
sbb
sub
xor
insl
add
stc
sbb
in
pcmpeqw
les
adc
pop
xchg
cwtl
pushf
xor
inc
ror
inc
push
iret
sbb
fidivl
cwtl
addr16
or
inc
mov
jns
andb
xor
loopne
push
lock
mov
mov
sbb
std
pop
inc
js
mov
cmp
dec
sarb
ret
add
jne
mov
sti
add
lcall
aam
cli
mov
dec
fs
adcl
and
imul
cmp
fcmovbe
sbb
adc
push
and
in
loope
and
test
dec
push
and
pop
cmp
in
push
outsb
jae
xchg
cmp
sub
sub
outsb
xchg
lock
lret
mull
jg
dec
outsl
xchg
sub
sub
sbb
add
xor
xchg
scas
lret
add
pop
and
insb
mov
fwait
jne
pop
mov
lods
push
mov
xor
dec
add
outsb
inc
ds
mov
mov
dec
mov
mov
cmp
test
sbb
or
mov
aas
adc
cld
add
xchg
rcl
stos
pop
lods
insl
mov
pop
xlat
pushf
loopne
ljmp
pusha
mov
adc
xchg
or
sub
daa
xchg
adc
inc
mov
xor
jnp
insb
aam
pop
lock
cmp
or
es
dec
roll
pushf
push
dec
stc
mov
test
mov
push
ficomps
shl
out
jo
or
repnz
jg
loope
mov
inc
or
lds
ret
aas
repz
scas
outsl
inc
push
jecxz
clc
dec
int
int
add
push
xlat
scas
cmp
pop
pop
jb
xchg
cld
bound
and
jge
dec
cltd
test
mov
addl
mov
adc
mov
outsl
sti
push
xchg
mov
ss
insb
fildl
int3
aas
inc
cmpsb
add
cmp
cltd
cs
jg
fcmovne
pop
inc
or
jle
icebp
sbb
xchg
lods
test
fisubrs
pop
test
lea
sub
mov
push
and
imul
jns
mul
push
int3
popf
jp
out
leave
inc
xchg
jle
jo
les
or
das
dec
sub
push
mov
pop
push
dec
pop
inc
inc
outsb
sub
adc
xor
subb
push
pushf
call
out
cs
mov
push
shrl
mov
or
push
add
mov
gs
mov
inc
add
cmp
push
or
loopne
aaa
jle
cmp
clc
scas
pop
xor
xchg
push
dec
jecxz
push
xorb
repz
xchg
insl
sub
jg
out
mov
jbe
stc
push
pop
cmpsb
popa
fildll
mov
inc
cmpl
cli
fs
outsl
cmc
test
fistpll
mov
inc
notl
pop
inc
test
jle
mov
cli
jne
movsb
enter
repnz
dec
xor
ret
andl
das
in
mov
cmp
in
cmp
push
jo
cmp
mov
inc
pop
pop
mov
xor
jb
mov
sub
dec
fsts
mov
and
ljmp
dec
sbb
or
dec
jns
es
or
push
repz
dec
cltd
inc
or
and
inc
add
jns
repz
sub
push
pop
or
enter
fisttpll
push
xchg
pop
xchg
stos
lret
mov
aad
pop
pusha
jecxz
mov
push
sbb
dec
jno
xor
push
cmc
nop
rorl
fstpl
mov
pop
mov
xchg
cli
adc
jb
xor
jo
mov
xor
mov
test
mov
call
inc
arpl
cli
mul
lock
and
and
add
es
pop
mov
or
add
jae
aam
fabs
jg
loop
push
rorl
pushf
sbb
int
adc
mov
adc
sub
mov
lock
out
push
xchg
xchg
push
adc
jbe
dec
pop
push
scas
fidivl
inc
inc
movsl
add
inc
sub
stos
repnz
sub
scas
mov
or
pusha
add
cltd
data16
loop
arpl
mov
sbb
dec
inc
jns
gs
push
ret
gs
xchg
mov
in
dec
test
mov
inc
ljmp
aaa
movsl
repz
mov
ret
test
add
mov
add
jb
ficompl
xchg
sbb
cmp
insb
call
sbb
jne
scas
add
fmul
push
out
rclb
fwait
mov
jno
cltd
loopne
bswap
dec
sbb
mov
inc
lret
jno
nop
xchg
push
mov
sub
inc
sub
dec
std
xor
jmp
dec
xor
jl
jl
lret
jb
push
sarl
dec
add
aas
cltd
incb
int
sbb
dec
adc
arpl
jg
sbb
push
pop
lcall
inc
xchg
icebp
pusha
lods
fwait
jbe
popf
push
scas
imul
and
pop
repnz
mov
dec
sub
jecxz
adc
sahf
jb
loopne
push
imul
les
in
xchg
push
or
jnp
sub
iret
outsl
les
mov
mov
cli
inc
pop
mov
outsb
push
dec
cmp
lret
adc
jns
pushf
cmp
add
xchg
aaa
shrb
stc
mov
inc
mov
jb
imul
in
dec
test
cwtl
lret
call
es
rolb
sahf
mov
lods
dec
cmp
shlb
out
ljmp
loop
xchg
dec
stos
int
pop
jecxz
and
add
outsb
cld
in
push
test
popf
xchg
insl
xchg
push
push
test
mov
mov
adc
lds
mov
hlt
std
rcrb
pop
xor
mov
cmp
sbbb
pop
es
fidivrl
cmpsl
je
add
movsb
push
or
inc
loope
xchg
ret
cmp
cwtl
arpl
add
xchg
mov
test
lock
jp
jnp
cmp
imul
std
movsb
pop
jns
in
lods
jnp
sub
lock
fdivrl
pop
inc
adc
or
inc
mov
pushf
cmc
jmp
js
cmpsb
jle
cmp
in
in
ds
pop
out
mov
mov
fidivrs
fstpt
sub
pop
push
imulb
dec
repnz
adc
and
xchg
pop
mov
mov
aad
xor
or
mov
push
outsb
xchg
sar
ljmp
mov
cmc
sub
pop
mov
shll
adc
add
xchg
lock
cwtl
nop
push
ja
lods
mov
repnz
stos
adc
je
cmpsb
mov
icebp
adc
jg
or
mov
push
sbb
mov
mov
dec
dec
push
popf
out
mov
ds
in
js
leave
sbb
xor
push
push
cmp
clc
cmp
push
test
insb
jo
pop
testb
inc
pop
stos
cmc
in
filds
inc
pop
xchg
out
repnz
lahf
pop
push
arpl
xlat
cs
mov
popa
pop
cmpsl
jp
mov
ss
mov
cli
or
jecxz
fdivrl
int
xor
shrb
test
mov
fistl
inc
lahf
scas
push
cmp
bound
xchg
cmp
add
and
dec
jbe
mov
lret
fildl
mov
cmp
lods
add
mov
js
xchg
xchg
stos
in
iret
cmpsl
inc
roll
subl
mov
mov
adc
rorl
mov
jge
cs
push
das
sub
push
fstp
mov
push
stos
mov
jp
or
into
add
sub
xchg
aas
repz
je
push
xor
cli
mov
add
popa
mov
fidivrl
jno
mov
mov
js
dec
push
push
call
das
fwait
and
push
adc
mov
cli
adc
push
or
loop
orb
fwait
sbb
sub
jnp
dec
cmpsb
pop
clc
mov
mov
ret
mov
lods
mov
out
fsub
mov
int
fnsave
mov
adc
dec
jae
insb
addr16
les
mov
or
nop
xor
mov
ret
fs
testl
es
or
test
jmp
dec
push
repz
pop
insb
and
jno
pop
push
fmul
dec
fadd
or
lea
jg
push
cmpsl
xchg
rcrb
xchg
inc
bound
add
push
sub
mov
pop
out
test
testl
cmpsb
movsl
fists
cmp
mov
dec
icebp
mov
dec
xor
or
test
lods
mull
mov
ja
cmp
sub
add
in
pop
mov
dec
lret
jp
jno
leave
sub
cld
pop
xor
xchg
push
enter
lret
rcr
fistpl
push
sbb
pop
pushf
mov
fldcw
test
jne
add
xchg
daa
xor
roll
jecxz
fucomip
aam
dec
out
fucomp
xor
xor
fstpt
jge
mov
lret
mov
lock
push
mov
xchg
outsb
mov
mov
pop
sbb
add
jae
push
mov
mov
add
int3
jge
and
aam
call
push
jmp
call
jb
or
push
jno
jecxz,pt
fdivs
outsl
cmc
jl,pt
add
xor
adc
dec
dec
lea
pop
adc
push
fistpll
sbb
jge
sbb
cmp
call
test
mov
pop
int
fsubl
xor
lods
pop
call
mov
mov
dec
mov
stos
imul
cmp
imul
insb
mov
outsl
sbb
ds
pushf
and
ja
xor
inc
push
push
and
insl
lods
sbb
add
insb
out
out
xchg
xor
pop
scas
add
filds
push
loop
pop
sbb
mov
dec
inc
jmp
inc
xlat
outsb
jmp
popf
popf
add
ds
pop
adc
jb
sub
movsb
cmpsl
shrb
jge
fists
ss
insb
gs
jae
pop
ja
in
jnp
xchg
daa
lods
mov
cli
or
mov
mov
mov
sbb
add
mov
cmp
fimull
jle
jbe
lcall
inc
ret
adc
popa
imulb
pop
sbb
cmp
push
pop
ror
out
sbb
inc
adc
aam
and
dec
pop
cmp
add
dec
notb
jle
mov
sbb
cmp
popa
test
imul
lods
adc
lock
stos
dec
xor
jecxz
fwait
adc
ljmp
jbe
pop
fs
mov
test
xchg
or
inc
sub
sbb
or
adc
sub
sbb
pop
mov
out
lock
test
hlt
jnp
pusha
inc
inc
xor
aad
stc
je
sbb
and
icebp
or
std
test
inc
les
xchg
ja
sub
lods
pusha
out
mov
xor
das
or
pop
out
je
sub
inc
ds
xor
movsl
outsl
xor
pop
in
nop
enter
mov
jo
cmpsl
xchg
lods
xlat
dec
repz
ret
inc
mov
sbb
add
cmp
dec
idiv
pop
add
sbb
fnsave
lret
mov
dec
test
and
pusha
mov
or
push
sub
xor
dec
mov
or
jb
nop
ss
push
mov
int
inc
pop
mov
jno
sbb
or
jne
stos
loope
stos
imul
daa
inc
je
xchg
loopne
jge
shlb
xchg
cmp
shrl
leave
xlat
test
adc
or
sub
adc
or
rcrb
fnstenv
rcr
sbb
and
sbb
hlt
es
mov
dec
and
mov
mov
imul
imul
lahf
outsl
dec
jl
ficomps
int3
jb
jecxz
sub
push
js
test
mov
or
in
fs
aas
jno
dec
test
cli
inc
hlt
sar
lcall
cwtl
mov
jo
popf
fisttps
xchg
stos
jg
cmc
in
add
sbb
or
xchg
cmpsb
sahf
dec
sbbb
sti
sub
call
adc
push
fdivl
popw
out
push
sbb
aad
sub
xor
stos
dec
ds
xchg
test
push
stos
mov
bound
jmp
pxor
pop
mov
dec
sub
mov
xor
sbb
push
mov
cwtl
in
pusha
adc
mov
mov
aas
add
cmpsb
pop
loope
and
loopne
decl
mov
push
iret
dec
clc
pusha
ja
dec
out
mov
push
xchg
arpl
inc
jl
mov
sub
dec
push
enter
mov
dec
pop
xchg
loopne
je
or
dec
lcall
xchg
fucom
enter
push
or
aad
mov
xchg
int
cmp
pop
add
pushl
das
repz
lods
gs
iret
sahf
lahf
outsl
mov
scas
test
push
jecxz
inc
xchg
lods
out
push
lret
in
mov
mov
cmpsb
xor
cltd
jno
cmp
movsb
addb
adc
and
imul
cmp
mov
and
iret
xlat
stos
cmp
sub
jnp
lods
call
loopne
mov
mov
lret
adc
mov
imul
xor
out
fwait
push
or
mov
insl
int
pop
push
pop
push
cld
test
mov
add
inc
xchg
xchg
pop
xchg
sub
pop
mov
mov
push
pop
test
mov
jge
cmp
aad
mov
rdtsc
inc
and
int
inc
icebp
loopne
mov
cld
xlat
xor
test
cmp
scas
add
pop
test
mov
inc
mov
negb
lcall
jae
sbb
call
pop
fs
mov
jecxz
fistpll
dec
lahf
push
mov
xor
mov
adc
mov
icebp
rorb
ds
xor
and
xchg
add
outsb
loope
push
das
and
cmp
push
lret
mov
dec
loope
jmp
push
pop
sbb
push
push
push
out
clc
aaa
xchg
pop
dec
cmp
ficoml
inc
lods
push
xchg
mov
pop
clc
or
lret
mov
lahf
loop
test
mov
imul
jl
jl
fwait
out
jp
popa
dec
jle
sbb
ss
adc
and
loop
push
mov
dec
sub
inc
cmp
xchg
fcmovnb
fs
xchg
cmp
lds
insl
mov
call
or
outsl
or
and
js
inc
dec
jge
or
mov
add
leave
add
add
inc
pop
subl
jb
cmc
pop
je
push
cmpsl
cmpsl
shll
adc
out
pop
mov
mov
mov
sbb
add
call
arpl
test
incw
sbb
mov
out
in
jecxz
mov
scas
adc
add
lds
xor
xchg
sub
lock
icebp
into
ja
out
popa
int3
cmpsb
stc
mov
sub
shrl
jno
add
dec
lahf
mov
fmuls
subps
lock
dec
cmp
jecxz
addl
or
jo
andl
lcall
cli
cmp
push
push
mov
in
mov
cltd
mov
xor
dec
jne
inc
popf
and
sbb
push
rclb
mov
mov
jmp
jbe
test
fsubl
out
lds
out
push
push
mov
and
add
les
rcll
sbb
out
adcl
cmpsb
adc
js
clc
cmp
push
jns
lcall
popf
call
cmp
xorb
dec
in
sbb
ljmp
mov
and
xor
sbb
and
inc
sahf
pop
push
mov
fsin
arpl
mov
arpl
cld
inc
or
push
and
mov
in
mov
mov
out
pop
push
insb
js
pop
es
mov
std
adcl
fldt
subb
sub
adc
adc
pop
cmpsl
lcall
ja
jg
add
lods
jecxz
lret
inc
in
int
addb
or
fiadds
mov
mov
jle
add
jmp
in
scas
test
dec
lods
mov
addb
xor
pop
xchg
sbb
xor
int
fists
cltd
sti
js
push
les
inc
mov
lea
pop
mov
jmp
sub
xor
push
or
inc
fwait
pop
pop
xchg
and
push
lods
insb
ret
nop
rorl
lea
cmp
or
loop
loop
or
jno
insl
jno
pusha
xchg
fistl
pop
cwtl
jge
push
daa
jbe
ljmp
jmp
mov
addb
icebp
and
les
cld
es
xchg
ds
jno
sub
scas
add
mov
mov
lahf
cld
stc
sbb
divb
sbb
movsl
frstor
dec
insb
push
nop
loope
fs
sbb
clc
incb
mov
adc
fidivrl
cmc
xchg
add
ret
cmp
rcrl
iret
scas
test
into
cmc
adc
sti
xchg
stc
or
mov
mov
cmp
pop
and
sbb
add
and
cmp
jl
and
orl
das
ja
pop
and
notl
cmp
push
outsb
add
cmp
scas
dec
or
gs
scas
xor
pop
enter
aaa
xor
dec
fwait
lods
sub
pop
imul
mov
outsb
sub
outsl
sub
and
and
pop
mov
sub
pop
jl
jo
aaa
dec
ret
repnz
lret
jno
push
int3
inc
sub
cmp
neg
movsb
lock
dec
mov
mov
fcom
je
imul
pop
push
mov
and
adc
je
inc
pop
xchg
repz
movl
mov
jnp
push
inc
cld
shlb
fbstp
leave
xchg
dec
push
daa
jl
and
push
aaa
lcall
shll
xor
sbb
into
pushf
idivl
push
outsb
sbb
xor
fmul
lahf
ret
sarl
mov
and
jecxz
push
push
jae
xor
mov
pop
jno
popa
loope
imul
jmp
xchg
mov
inc
push
into
movsl
and
inc
jno
cmp
std
cltd
mov
ljmp
les
or
push
pop
jl
roll
popf
xchg
fwait
sbb
inc
cs
lock
and
push
pushl
jns
fidivrl
cmpsb
inc
mov
sbb
cmp
das
aaa
xchg
adc
repnz
push
jno
loop
mov
inc
lods
mov
jge
movsb
cmp
adc
xor
inc
adc
fisubrs
test
imul
push
iret
jge
movsl
fwait
jmp
jge
and
repnz
mov
mov
xchg
out
filds
notb
push
subb
xchg
hlt
into
cmp
sti
adc
sbb
jmp
sbb
dec
fcmovu
aaa
pop
sarb
jmp
insb
sub
mov
ds
mov
add
xchg
mov
pop
jno
and
cwtl
test
out
push
in
repnz
imul
lahf
loop
mov
arpl
leave
jno,pn
jp
xor
inc
mov
pop
mov
sbb
sub
mulb
xor
push
pop
repnz
aad
and
cmpsb
cs
scas
sbb
jno
test
pop
fstps
aam
aas
insl
idivb
aam
frstor
fnstsw
jae
xor
xor
decl
dec
outsb
lahf
or
xor
bnd
fwait
ja
inc
in
sti
mov
xor
and
mov
ja
cmc
mov
fisubs
jl
cmp
test
or
cld
cmp
fsubs
out
shrl
cmpsb
jg
bound
icebp
daa
nop
int
mov
adc
mov
jmp
adc
push
shr
cmc
pushf
repnz
shr
lcall
jmp
pop
daa
inc
or
hlt
mov
pop
xchg
xchg
pop
jno
std
fucomi
mov
dec
push
push
aaa
lahf
mov
fs
mov
mov
lds
popa
xor
jns
ss
jge
jb
imull
rcrl
cmpsl
pop
sbb
loopne
addr16
push
arpl
out
mov
pop
les
mov
jne
adc
mov
mov
cmp
test
fcomp
out
filds
mov
out
mov
scas
faddp
das
fmull
push
imul
sub
sbb
pop
cltd
ds
movsl
call
test
sti
jns
inc
pop
popa
add
into
inc
cmpsl
lahf
fdivl
dec
xor
ds
test
lret
imul
sub
jae
pop
sbb
mov
mov
jecxz
arpl
and
movsl
sbb
fists
jl
movsb
sub
xor
lret
es
andl
pop
sbb
cmpsb
pop
inc
or
or
imul
mov
xchg
dec
ja
adc
cmp
sub
pushf
scas
ret
ror
movsb
gs
dec
movsb
clc
xchg
xor
dec
ja
xor
cld
mov
xchg
movsb
mov
and
xor
hlt
gs
jns
arpl
lahf
adc
pop
cmc
sbb
cmp
inc
rclb
inc
aas
lds
iret
sub
xor
and
pop
push
sarb
or
inc
mov
in
test
xor
shlb
mov
iret
xchg
add
pop
repnz
sub
test
mov
loop
icebp
mov
push
stos
mov
and
das
xor
pop
mov
push
leave
loope
or
xor
divb
mov
mov
ds
lods
aas
push
pop
pop
sub
shrb
mov
mov
fprem
push
mov
or
pusha
insl
iret
out
mov
add
pop
cmpsb
nop
cwtl
aad
fildll
push
push
test
les
pop
cmp
flds
jl
ret
es
xor
lods
adc
lret
push
inc
roll
clc
xor
fbld
ds
imulb
call
test
aad
xchg
in
sbb
dec
jl
ret
ds
mov
inc
orb
sub
dec
cs
popl
enter
outsb
xchg
adc
dec
xchg
push
insb
addr16
mov
loopne
add
in
jp
lock
xchg
adc
cmp
add
ss
xlat
loop
lods
add
mov
stos
mov
or
pusha
ret
lcall
sbb
div
or
stc
xchg
ja
xlat
loop
pop
es
cmp
bound
pop
push
fistpll
cwtl
rorl
lcall
ljmp
sub
in
pop
and
xchg
xchg
hlt
mov
leave
or
repnz
das
out
push
clc
sbb
pop
add
add
rorl
fucomp
xchg
call
xor
loop
out
adc
inc
ret
addr16
mov
int3
jp
jb
jecxz
stos
push
mov
and
cmp
fstpt
xlat
inc
out
cmpsb
mov
jo
cld
sbb
ds
push
xchg
lock
lods
outsl
sbb
jl
fadd
push
jge
ror
or
and
shlb
push
push
and
push
in
std
bound
mov
iret
fimull
cs
mov
cmp
lret
test
push
movsb
loope
filds
inc
pop
scas
xchg
mov
cmp
adcb
call
or
sbb
repz
mov
mov
pop
ficoml
mov
pop
loopne
lret
outsl
push
and
icebp
adc
pop
dec
sub
xor
les
pop
out
shr
adc
dec
add
xchg
in
gs
mov
mov
nop
mov
cmp
cmp
mov
pop
ret
and
aad
movsl
inc
mov
je
out
jmp
fwait
imul
pop
fisttpll
orb
mov
fldcw
stos
mov
cmc
mov
call
pop
adc
cltd
rcll
xlat
dec
ficompl
pushf
sahf
dec
repnz
lea
aas
cld
les
jne
inc
xchg
or
ljmp
and
imul
xor
dec
aam
or
sbbl
pop
dec
sub
pop
mov
add
stc
push
icebp
xchg
nop
cmp
outsl
xchg
cmp
lods
out
jnp
push
les
jnp
enter
js
and
das
adc
xchg
and
cmp
inc
sub
in
ja
push
scas
xlat
lcall
cmp
icebp
jo
push
std
cmpl
cmc
cmp
mov
sahf
and
dec
test
frstor
xchg
les
mov
stc
pop
inc
inc
and
ret
fdivs
cmpsl
sbb
cld
xchg
decb
xor
mov
inc
add
dec
jns
inc
in
jle
push
push
ffreep
cmp
data16
inc
xchg
test
mov
ss
notl
and
pop
dec
mov
stos
arpl
inc
adc
adc
pop
data16
mov
mov
jg
dec
imul
cmc
adc
cmpsl
xorl
notb
dec
ret
ret
and
scas
mov
rcrb
stc
push
rol
pop
test
jae
je
cmpsl
cs
fstps
scas
out
sti
adc
mov
mov
movsb
cli
stos
lds
cmpsl
jne
dec
mov
jbe
push
enter
into
xor
mov
sbb
mov
mov
dec
push
inc
and
push
xor
gs
pop
hlt
incl
fistpl
mov
mov
sbb
test
insl
jbe
add
adc
ficomps
fists
sub
add
xor
leave
jl
cmpsl
inc
sub
shll
lret
cmpsb
notl
cmp
dec
lahf
and
movsb
mov
push
inc
sbb
or
insb
dec
movsl
js
sub
mov
pop
popa
mov
adc
sbb
xchg
mov
inc
or
cli
or
mov
rorl
add
xor
pop
jl
lea
xchg
push
lret
sbb
fwait
adc
pop
adcl
aad
xor
jo
mov
icebp
movl
dec
xor
ss
push
mov
icebp
cmpb
pop
lahf
sbb
adc
out
rcl
jge
jecxz
dec
mov
ja
push
shll
aam
iret
cmpsl
jecxz
push
sub
adc
mov
inc
or
sbb
xchg
push
push
fnstcw
and
cwtl
cmp
cmpsl
in
xchg
cmp
loopne
sub
test
mov
arpl
sub
jge
rclb
jp
movsl
ficompl
enter
cmp
xlat
xchg
clc
mov
inc
dec
xorl
xchg
jo
jmp
scas
and
jmp
jmp
add
test
or
adc
shrb
add
mov
and
scas
shll
adc
aaa
mov
lea
pop
mov
mov
xor
adcb
scas
mov
ljmp
fisubrs
lea
cltd
xor
add
push
sbb
push
and
call
insl
xchg
leave
mov
pop
sbb
daa
in
push
sub
jne
xchg
cmpl
mov
pop
into
hlt
fwait
xchg
and
daa
mov
lcall
stos
cwtl
fs
in
push
jo
push
loop
cmpl
popa
lret
push
lret
cs
sbb
xchg
addr16
idivb
cltd
mov
add
ds
cwtl
inc
or
pop
jmp
add
das
testb
dec
cmpsb
pop
daa
gs
xchg
push
les
es
imul
lds
rclb
pop
mov
or
push
ss
rcrb
das
out
dec
not
pop
inc
inc
dec
rdpmc
popa
dec
sbb
xchg
add
pop
notl
jne
xor
push
sbb
icebp
or
fs
aam
jmp
incb
mov
daa
or
or
sbbl
cmp
pushf
jg
popa
cltd
loope
push
push
inc
adc
repz
ds
and
add
fisubs
sbb
arpl
sub
test
hlt
mov
or
and
inc
cltd
out
loop
sbb
or
lret
ss
inc
arpl
jl
mov
fildl
je
jecxz
push
insl
aaa
ljmp
ja
add
adcb
fdivrl
test
mov
repnz
movsl
cmp
jmp
js
push
data16
xchg
push
mov
lret
js
out
sbb
hlt
cmp
xchg
jo
cltd
out
fucom
jge
scas
in
lea
inc
jne
gs
jo
loope
add
push
push
dec
pmovmskb
mov
pop
sbbb
fildl
pminub
mov
mov
pusha
xchg
adc
out
jb
repz
packuswb
cmp
negl
aaa
push
jmp
hlt
push
lds
mov
scas
jge
push
data16
cmp
adc
mov
add
or
mov
inc
sbb
shrb
loop
pop
cmp
les
cltd
shll
inc
sbb
je
stc
pop
or
out
popf
mov
mov
inc
push
mov
jle
mov
mov
add
in
mov
shlb
dec
jae
iret
sub
sahf
or
jle
loopne
shrl
repnz
adc
loope
out
fcmove
mov
sbb
dec
insb
cmp
xor
in
test
cmpl
xchg
mov
add
mov
mov
mov
cltd
sub
xchg
aad
stos
adc
inc
dec
jge
cli
inc
popl
pop
jge
in
mov
stos
mov
dec
mov
insl
mov
mov
xchg
fisttps
or
mov
mov
or
gs
out
out
mov
xor
add
movsb
shl
fyl2xp1
fcomps
pop
sbb
mov
sbb
sar
fidivl
fwait
xchg
sahf
inc
pop
outsb
cs
ljmp
outsb
int
loop
jbe
in
lds
in
stos
lock
or
dec
adc
or
outsl
add
mov
addb
mov
or
daa
js
fwait
or
mov
dec
js
lock
mov
jge
imulb
jne
subb
lahf
stos
xchg
push
mov
gs
sahf
outsb
fdivrs
mov
push
push
rcpps
xchg
sbb
or
repz
test
frstor
cld
cmp
pop
xor
pop
addl
mov
in
lock
dec
bound
or
in
pusha
push
mov
ja
and
cmc
inc
popf
ret
fsts
pusha
inc
cmp
es
adcb
mov
push
jno
cmpb
push
jnp
dec
xchg
inc
ljmp
jmp
jmp
mov
test
cld
repz
sbb
int3
int3
or
xorl
bound
inc
movsl
test
xchg
test
mov
outsl
dec
mov
xchg
inc
vcvttpd2dqy
fsubs
sub
jmp
mov
xchg
lcall
mov
test
or
pop
dec
xor
sbb
mov
push
add
cmpsl
dec
pop
jnp
mov
ss
or
in
mov
call
jmp
mov
arpl
cmpsb
cmpsb
aas
sub
mov
inc
jl
mov
mov
outsb
dec
xchg
hlt
fcmovb
cwtl
dec
test
and
xchg
pop
xor
jp
jle
sbb
push
mov
jg
lret
xchg
mov
rorb
xor
pop
dec
aad
xchg
xchg
xchg
scas
stos
and
fcomp
test
rolb
scas
ljmp
cwtl
dec
fdivp
insb
xchg
nop
mov
jnp
pop
fs
push
jecxz
stc
fidivl
inc
lock
ljmp
insb
nop
aaa
mov
push
imul
stos
pop
in
icebp
insb
push
sbb
or
pop
cmp
mov
inc
push
mov
sbb
in
xchg
pop
mov
pop
sbb
and
dec
inc
pop
push
cmpsb
push
ja
xchg
push
mov
adc
adc
and
add
push
or
push
jecxz
xor
inc
adc
nop
cld
push
lock
dec
and
shl
shlb
push
scas
jle
inc
stos
int
pushf
xor
mov
xchg
addr16
xchg
sti
scas
aaa
or
out
lahf
lea
loope
ret
lds
out
fldcw
popf
sahf
dec
and
in
in
fwait
pop
inc
or
push
inc
ret
sbb
add
pop
pop
mov
stc
mov
cmp
fsubrl
les
das
in
out
mov
int3
add
enter
jns
jge
jmp
std
sub
insl
push
sti
sub
pmaxub
stos
ss
and
daa
cmp
mov
out
ja
xor
xorl
sbb
pop
jae
add
jae
xchg
sbb
inc
and
scas
mov
js
lock
jge
push
jmp
imul
inc
xchg
cwtl
push
icebp
scas
pop
loopne
lcall
adc
mov
jmp
mov
push
nop
shrl
jbe
std
mov
push
pop
or
adcl
fcoml
inc
jp
pop
mov
add
pop
pmulhuw
mov
dec
shll
pop
clc
int3
dec
pop
pop
mov
outsl
lret
sub
movsb
mov
ret
out
xor
hlt
mov
pop
mov
in
cwtl
rcr
mov
mov
inc
dec
fsubs
faddl
jne
mov
cwtl
incl
rcl
aam
insl
lea
mov
adc
adc
cld
aas
cmp
mov
jbe
jo
ror
imul
sbb
in
lock
adc
scas
sub
jle
mov
push
push
js
sbb
repz
and
je
jge
repz
jecxz
xchg
stc
add
mov
pop
push
adc
in
jmp
mov
rep
and
iret
cmp
push
leave
lcall
mov
movsb
cwtl
imul
xchg
in
mov
lods
outsb
mov
or
pop
leave
jl
jle
add
fwait
in
adc
ja
push
cmc
xor
sbb
pusha
xor
cwtl
dec
stc
xor
movsb
pop
les
sub
or
divl
jge
into
int3
sbb
popa
jns
inc
stos
mov
mov
xor
sbb
xchg
clc
fldl
sub
or
fisubl
aaa
or
cs
xlat
clc
xor
pop
imul
jno
jnp
dec
mov
arpl
loopne
sub
jmp
dec
addr16
shl
mov
gs
or
or
mov
pop
push
mov
scas
mov
push
jge
push
sahf
aam
lcall
call
sub
loopne
xchg
sbb
les
test
pop
lock
fwait
push
pop
xchg
lahf
mov
sti
ret
shll
insl
or
push
jg
inc
xor
and
cmpsl
adc
cmp
cmp
dec
aad
sub
jo
inc
jg
push
push
dec
lcall
ljmp
aam
dec
or
mul
arpl
adc
subb
jo
cmc
sub
pushfw
ficoms
adcl
xchg
movsl
jns
sub
mov
xlat
mov
cld
xchg
jne
sti
rcr
dec
dec
jns
fisubs
jecxz
lcall
ds
fstpt
mov
mov
or
fstl
movsl
dec
or
adc
jg
and
stc
repnz
loop
lds
pop
mov
outsb
jb
call
adc
and
mov
enter
fcmovnbe
pop
outsb
mov
mov
out
int
es
push
jmp
inc
ljmp
in
adcl
in
sbb
test
cmp
adc
push
dec
mov
xor
xor
test
leave
jae
jmp
or
mov
mov
cmc
jmp
sbbb
xchg
dec
in
sbbl
pop
lahf
inc
pop
je
sub
mov
mov
out
inc
xchg
cmp
lcall
and
iret
inc
or
and
xor
pop
cmpsl
and
or
cmp
sbb
jmp
imulb
xchg
and
inc
icebp
in
sub
bound
inc
and
fmul
pop
inc
xor
hlt
mov
shll
sti
push
xor
arpl
fcomi
mov
and
test
daa
xchg
or
sahf
lock
sbb
dec
movb
imul
mov
pop
cltd
out
int3
cmc
add
pop
mov
xchg
call
xchg
fisttps
push
and
adc
push
xchg
lret
jp
add
mov
mov
or
push
in
lods
shr
jp
lods
fwait
mov
std
and
arpl
shlb
addb
js
and
fsub
rcll
int3
lea
and
or
in
or
xchg
test
sbb
testb
cli
sub
ficoms
jle
dec
push
loopne
push
xchg
dec
push
js
out
idivl
data16
shll
fsubs
mov
add
ds
iret
or
dec
daa
add
cmp
sub
leave
push
scas
jg
stc
mov
mov
fwait
pop
aam
psrlq
add
and
and
push
loopne
jae
lods
popa
sbb
push
pop
popa
xlat
mov
in
cs
out
test
jb
ret
adc
cmp
loop
inc
pop
movsl
imul
xchg
insb
lock
les
mov
pop
mov
sub
int3
or
pop
xchg
push
jmp
int
mov
mov
pop
xor
sub
mov
jae
xchg
enter
mov
pop
repz
ss
pop
dec
in
pop
push
and
je
mov
push
out
xchg
aad
loop
xchg
push
sbb
loopne
pushf
jno
and
sar
or
lds
imul
insl
pop
or
xlat
rclb
stc
out
movsb
subl
cmp
js
adc
cmc
inc
out
xor
cmp
mov
mov
int
nop
mov
xlat
mov
jbe
push
sbb
and
mov
je
mov
xor
xlat
sub
push
push
pop
mov
stc
push
fldcw
mov
mov
subl
cmc
hlt
push
jne
push
stos
pop
pop
fs
push
inc
add
jne
lret
callw
rcrl
xor
push
inc
leave
xchg
mov
fisttpll
adc
icebp
mov
mov
aam
mov
lahf
xchg
shl
xor
and
pop
dec
lods
jmp
mov
fisttpl
xor
loop
xor
shl
xor
testb
push
push
and
jae
hlt
bound
pop
pop
pop
xchg
hlt
sarl
push
push
cmc
sbb
outsb
mov
add
imul
loope
scas
lret
push
lcall
mov
stc
mov
jg
mov
push
xchg
adc
cwtl
and
into
push
int3
jne
scas
cmp
enter
addr16
aaa
insb
movsl
xchg
mov
je
filds
cmp
mov
int
add
test
fisubrs
mov
arpl
fdivl
clc
mov
movsl
test
in
dec
subl
in
lret
adc
stc
adc
outsl
cwtl
mov
aam
mov
jnp
jmp
ljmp
lods
push
loope
jne
mov
adc
mov
jle
mov
hlt
leave
mov
pop
out
stos
aad
nop
or
clc
cmp
lahf
add
shrl
cmpsb
and
add
popa
dec
clc
jnp
mov
or
mov
sub
fidivrl
pop
xorb
mov
arpl
loope
cmpsl
or
outsb
pop
lahf
jge
xchg
pop
sahf
jmp
add
sub
xchg
mov
inc
xor
popa
shlb
fs
adc
bnd
fdivs
xchg
mov
pop
mov
jecxz
push
mov
push
stc
jns
in
cmp
mov
outsl
imul
rclb
aad
cmp
xchg
jne
data16
clc
mov
shrl
sub
xchg
mov
ljmp
insl
dec
dec
inc
dec
add
sub
jnp
mov
xor
cmp
fidivrs
lock
aas
push
or
xchg
pop
pop
icebp
sub
push
nop
pushf
out
push
imul
jb
jb
add
jl
xchg
sbb
and
push
aas
cwtl
popa
xorb
xchg
test
data16
cmpsl
repz
inc
add
pop
scas
mov
popa
ret
adc
dec
sub
sti
adc
or
jns
cli
aam
scas
leave
ljmp
jecxz
pop
add
and
fistpll
mov
cmp
and
fldt
push
les
sub
cli
ss
js
lods
adc
and
out
lret
je
int
xorl
xor
je
dec
or
mov
pop
in
int
mov
sub
lods
xchg
arpl
mov
call
cmp
gs
mov
jmp
mov
sub
or
gs
movsl
add
lock
pop
dec
in
mov
int3
test
cmp
sahf
mov
das
push
js
xor
cmp
cld
ret
movsb
jno
or
data16
loope
pop
adc
mov
ss
fadds
and
sub
das
sarl
pop
lock
aas
xor
aas
add
pop
sub
jnp
cwtl
jg
fsubl
xchg
xlat
loop
lcall
lcall
cmpsb
add
jg
fldt
dec
push
jns
cmp
inc
leave
xchg
sub
cmp
loopne
pop
or
mov
std
push
shlb
dec
inc
in
js
or
sahf
adc
pop
rcrl
lds
sub
adc
mov
shrb
jl
nop
sub
cmp
push
cmp
ret
pop
push
sub
mov
sub
mov
sbb
je
out
pop
cmp
sub
lods
push
xchg
pop
or
les
add
mov
and
dec
mov
in
cmpsl
cmpsl
pop
std
out
insl
adc
insb
cmp
inc
fstl
pop
ret
sub
cmpsl
jno
push
jo
test
push
leave
pop
je
shrl
insl
jns
or
jp
and
insl
test
out
dec
mov
xchg
fidivs
xchg
cld
xchg
adc
and
fwait
push
jmp
lods
pop
xchg
mov
into
dec
call
mov
shrb
xchg
call
stos
mov
add
subb
into
mov
std
cmpsb
jecxz
or
mov
roll
xlat
mov
inc
pop
lcall
das
adc
int3
je
arpl
sbbb
push
xor
in
mov
adc
pop
add
movsl
mov
outsb
sbb
push
jecxz
xchg
add
mov
movsb
rcrb
jge
int3
subl
aaa
ja
fwait
add
outsl
fistps
inc
inc
icebp
pushf
insl
bound
sar
or
dec
mov
daa
addr16
imul
hlt
mov
into
jl
cmp
sub
mov
inc
and
sbbb
sub
orl
fistps
inc
hlt
shld
pop
in
mov
pop
add
sub
ret
or
daa
shlb
xlat
movb
adc
mov
cmpsb
orb
icebp
pop
lret
adc
xchg
push
shrl
sahf
mov
and
sahf
loop
or
call
pop
pop
aad
shr
push
and
jp
andb
add
clc
cmp
push
mov
insb
enter
mov
jmp
push
lret
in
aam
push
inc
pushf
aaa
add
test
mov
jns
sub
jno
adc
sub
dec
imul
cmp
and
xchg
cmpsb
or
imul
sub
gs
jb
xchg
cs
es
or
enter
call
lret
rolb
xchg
push
sar
jecxz
scas
xchg
sbb
sbb
cmp
mov
push
push
cld
in
cmp
xlat
loop
loop
add
lea
je
jbe
adc
les
clc
mov
dec
repz
jecxz
dec
dec
ror
fcom
fcomps
inc
xor
fldcw
mov
mov
xchg
pushf
js
pop
push
cmpsb
pop
inc
mov
mov
jmp
loop
fs
cmc
jo
or
sbb
fisubs
cmovle
imul
mov
xchg
and
mov
xchg
int3
and
stos
mov
jno
aam
cmpsl
adc
repz
lods
jbe
jbe
loop
inc
inc
mov
loopne
sub
adc
fsincos
cmp
mov
out
mov
test
mov
cmp
jle
xchg
jno
in
and
sbb
iret
aad
mov
call
mov
cmp
or
scas
or
gs
mov
add
mov
rclb
push
fcmovb
incl
pusha
nop
xchg
add
ret
and
cld
xchg
sub
cmp
push
sti
pop
outsb
fcompl
pop
stos
ficomps
jp
nop
cmp
xchg
sbb
and
mov
lret
aam
cmc
ds
in
mov
cld
mov
and
hlt
into
xchg
fwait
sub
and
add
mov
fnstenv
movsl
mov
push
jmp
arpl
notrack
lock
clc
cld
out
cmp
dec
lret
rcll
mov
sbb
loope
sbb
shl
dec
sbb
sahf
push
scas
mov
cli
pop
lods
and
js
hlt
inc
push
punpckhbw
std
nop
cs
and
xchg
aaa
into
mov
xchg
inc
loop
and
mov
movsb
xor
dec
stos
leave
add
push
rcll
pop
add
push
lret
stos
popf
in
test
aaa
dec
xchg
pushf
jae
in
ss
mov
lahf
js
pop
and
mov
rclb
jb
jbe
jo,pt
stos
cltd
ljmp
cmp
cs
dec
mov
cmp
hlt
mov
mov
inc
mov
adc
out
gs
stos
sbb
mov
iret
pusha
jnp
xchg
cmp
jbe
dec
adc
lea
mov
cmpsb
jo
add
inc
xor
inc
dec
mov
pop
mov
dec
bound
dec
ds
shrb
dec
jmp
mov
xchg
add
xor
cli
ficomps
iret
aaa
mov
jl
fidivrs
aaa
push
aaa
ss
pop
push
inc
daa
stos
push
pop
adc
sub
out
mov
cmp
mov
cmp
inc
pop
mov
jns
test
xor
cmpsl
ss
or
pop
mov
xchg
arpl
jl
addl
sbb
add
inc
or
xor
or
imul
cwtl
fisubrs
jecxz
arpl
cmp
shll
jbe
addr16
les
aas
sti
inc
call
fs
icebp
mov
fstpl
mov
mov
xchg
jle
xchg
push
ret
in
xchg
addb
add
lcall
or
aaa
push
xor
fstpt
adc
inc
popa
add
mov
mov
jge
leave
test
mov
lret
es
sub
push
push
sbb
inc
aas
adc
mov
adc
pop
cmp
or
adc
stos
rclb
push
dec
in
ss
inc
fwait
or
dec
pop
mov
std
popa
scas
jmp
test
int3
xchg
sub
sbb
and
and
repnz
rcrl
icebp
icebp
imul
mov
dec
out
and
sbb
jle
in
cmpsl
sub
fcompl
test
sub
sbbl
mov
pop
inc
das
xrelease
aam
in
rcrl
and
xchg
cmpsl
or
imul
test
cmp
iret
or
loope
cmp
pushf
cmp
pop
xor
into
or
push
mov
fldcw
mov
out
mov
cwtl
push
outsb
rcrl
dec
mov
sub
int
mov
das
and
and
fcom
clc
lds
shrl
loopne
rorl
lcall
out
mov
and
into
icebp
jne
mov
ret
scas
in
les
imul
rep
push
mov
jno
sub
repnz
cmp
hlt
addr16
lds
shrl
lea
mov
cmp
nop
or
fstpt
cmp
and
in
jno
xchg
xor
dec
dec
lock
adc
popa
jo
dec
sub
je
mov
jne
push
nop
iret
decl
stos
int
imul
mov
ret
mov
pop
in
test
inc
imul
add
sub
xchg
int3
mov
jne
dec
mov
clc
dec
fxch
imul
out
cwtl
rorb
sbb
mov
fisubs
mov
mov
jle
sub
inc
fidivrl
and
mov
outsb
test
xor
adc
in
clc
cli
mov
push
jg
jne
sub
cmpsb
adc
adcl
lock
stos
mov
sbb
xor
inc
pop
nop
add
jnp
out
aaa
shl
loope
imul
sbbl
pop
mov
lods
cmpb
pop
xor
pop
aaa
jg
fstpt
imul
and
arpl
cmpsl
cmpsl
in
inc
cmp
add
mov
fs
je
not
lods
test
mov
mov
mov
fs
cmp
inc
pushf
pop
dec
or
repnz
jae
test
out
mov
push
addr16
push
adc
ja
lahf
outsl
outsb
aam
fcoms
pop
fcomi
mov
ficompl
punpcklwd
push
cltd
pop
inc
xor
or
aaa
jge
push
and
test
fbstp
jg
and
lcall
stos
nop
inc
xchg
rcrl
mov
ret
mov
pop
aas
ljmp
icebp
test
cmpb
rorl
push
push
cmp
fwait
add
fmul
lahf
cld
mov
inc
adc
insl
ret
adc
jae
jle
outsb
xchg
or
mov
mov
mov
jle
mov
icebp
inc
dec
xlat
mov
popa
sti
nop/reserved
loopne
cmp
cmp
pop
pop
int
pop
and
lahf
xor
xchg
and
pop
jle
jle
mov
lcall
xor
std
mov
in
sbb
mov
or
or
sbb
pop
fisttpll
mov
add
push
pop
loopne
jne
lea
mov
dec
jmp
in
inc
sub
ds
mov
mov
fdivr
jnp
jge
mov
stos
mov
pop
outsb
test
or
sahf
fwait
xchg
pop
mov
fisubrs
cmp
in
cli
pop
jp
push
or
fiaddl
mov
xor
sub
sahf
xlat
jb
mov
jae
bnd
or
in
sbb
mov
jae
inc
xchg
sbb
inc
adc
jge
jb
push
xchg
lock
mov
or
cld
pop
sbb
repz
fxch
rol
pop
sub
ret
lret
pop
and
cli
add
dec
mov
pop
cmpsb
mov
outsl
rcll
imul
arpl
xchg
dec
repnz
sub
jg
cli
mov
dec
dec
leave
lock
pusha
aam
or
cmp
mov
adc
and
xor
xchg
pop
xchg
lea
aas
dec
xor
xchg
into
sub
cmpsl
add
lahf
mov
sbb
push
mov
mov
sbb
mov
mov
cmp
xor
or
push
shrl
sub
or
sbb
or
jge
jb
mov
addb
inc
cli
xor
insb
xor
mov
mov
clc
pop
fwait
jg
and
jmp
adc
push
add
dec
fwait
js
outsb
xor
stos
xchg
or
add
push
adc
inc
stos
pop
push
mov
pop
icebp
cmp
inc
ljmp
xor
arpl
es
lret
ljmp
aad
pop
mov
stos
addr16
lock
mov
sahf
not
mov
cmp
daa
pop
mov
cmp
jecxz
loope
ss
or
sub
aam
shlb
lcall
sub
mov
mov
loop
push
adc
ja
mov
insl
aam
add
push
loop
clc
or
sub
daa
push
jl
add
add
push
or
dec
mov
rolb
xchg
inc
loopne
sbb
adc
and
scas
mov
dec
lahf
jns
or
negb
push
les
push
ds
jns
sub
fisubs
cltd
bound
gs
test
or
cld
xlat
mov
sub
mov
ss
ret
or
jns
dec
fimuls
add
mov
lods
sahf
lea
fisttpll
out
sahf
adc
out
cltd
xor
mov
insl
idivl
xchg
xchg
xor
xlat
test
cli
ds
gs
xor
repnz
mov
jp
xlat
sub
sub
dec
fldl
and
bound
jl
mov
mull
jg
sti
ljmp
adc
push
xor
push
ret
ljmp
movsl
fmuls
out
fdivs
mov
pusha
mov
and
into
fnstenv
xor
jae
ljmp
movsl
mov
jno
sub
jg
adc
cmpsb
inc
sahf
lods
and
pop
mov
out
adc
iret
jnp
jecxz
call
cmp
daa
mov
int
jl
or
inc
repnz
push
pop
testb
lods
jg
scas
push
push
fs
mov
repnz
pop
sti
adc
adc
addr16
pop
rcll
sbb
data16
push
addr16
pop
in
int3
or
jno
xorl
cwtl
jecxz
scas
push
and
and
add
xorw
stos
inc
std
lcallw
push
mov
mov
loop
jmp
movb
testb
push
xchg
cmp
in
ja
push
je
mov
cmpsb
xor
fisubs
adc
hlt
push
cmp
xchg
pop
addb
aaa
sub
add
xor
or
insl
ljmp
mov
pop
or
leave
std
dec
push
mov
xchg
nop
nop
mov
cmpsb
in
mov
repnz
dec
adc
loop
sbbb
lret
lea
adc
dec
lods
in
lds
sub
nop
arpl
pushf
fstps
xchg
jo
add
pop
jns
xchg
ret
push
cmc
pop
lret
pop
rorl
sub
or
addb
inc
popa
daa
dec
xchg
mov
ds
sbb
push
mov
repnz
iret
fdivrp
xchg
lods
jecxz
jge
add
pushf
mov
repz
push
xchg
mov
push
pop
xchg
dec
dec
ljmp
xor
and
imul
xchg
cmc
loope
pop
loope
lds
div
aad
jae
push
sbb
jns
sti
das
mov
fisttps
add
jno
jmp
dec
jns
inc
adc
adcb
dec
jns
into
mov
sub
ret
cld
insl
xchg
cmc
lea
fs
aam
sti
mov
daa
sub
stos
push
adc
push
and
push
xor
and
sbb
lret
ds
adc
xchg
ficoml
xchg
sub
insb
or
pop
fsubrp
pop
or
xchg
fmuls
add
les
imul
mov
sub
xchg
pop
cwtl
fidivs
loope
jmp
or
push
imul
or
jbe
jb
push
adc
adc
das
repnz
adcl
xchg
pop
ror
jmp
mov
mov
pop
repnz
shrl
rclb
pavgb
fstps
add
fcmove
inc
or
outsl
jno
mov
test
xor
mov
push
sar
dec
xchg
adc
add
testb
addr16
enter
icebp
push
divb
jno
dec
mov
iret
pop
loop
hlt
or
cmp
arpl
lods
ds
data16
popf
fmulp
pop
lods
lahf
fisubl
leave
fiadds
sahf
pop
mov
jb
in
mov
pusha
sub
inc
jl
adc
fidivrl
mov
adc
mov
ficomps
lock
clc
xor
pop
push
mov
xor
and
jecxz
sub
mov
lahf
in
leave
popa
inc
aad
rclb
cs
xchg
int3
xor
daa
fwait
push
or
mov
stos
lods
lret
in
gs
adc
stos
lock
jnp
adc
je
outsb
add
xor
pop
jno
out
cmp
cmp
or
mov
inc
adc
iret
test
push
inc
dec
or
js
mov
push
jne
xor
scas
aam
sbb
adcl
push
or
cmp
mov
xchg
nop
repz
add
into
adc
pop
stos
push
je
or
mov
and
push
cltd
xchg
fcoml
cli
jmp
dec
mov
lea
mov
ficoms
rcrl
sbb
fwait
pop
repz
jge
mov
push
sub
mov
loopne
mov
testl
je
jbe
testl
test
or
dec
dec
push
popa
pop
xor
out
cmc
sti
cli
call
je
stos
arpl
jmp
jp
cmpsb
into
vcvtsi2sdl
mov
or
cmpsb
cmpsl
loopne
fisttpl
les
ljmp
jge
jbe
in
mov
shrb
xor
in
test
les
or
popa
or
clc
mov
aaa
cwtl
adcb
inc
jnp
cmpb
aad
cli
xlat
jecxz,pt
jnp
push
divl
push
es
cld
je
mov
sub
enter
daa
or
add
mov
push
ret
mov
push
loope
adc
adc
cld
rcrl
adc
int3
push
pop
cmp
imul
in
out
in
dec
or
dec
mov
mov
push
fmuls
inc
xor
mov
sahf
xor
inc
xchg
or
iret
push
lcall
aam
mov
aaa
push
cli
ljmp
add
mov
mov
pop
js
pop
repz
fwait
pop
push
jmp
push
es
das
or
bound
push
lret
imul
pop
insb
xchg
mov
mov
pushf
push
jae
testl
shrl
push
lret
and
xchg
repnz
cmp
adc
inc
loope
in
sub
mov
cmp
pop
mov
xor
sahf
pop
mov
mov
jge
jecxz
je
mov
pop
cmp
scas
adc
cmpsl
xchg
jb
and
icebp
lock
fisttpl
es
mov
mov
xchg
ret
mov
scas
pop
ja
lret
and
mov
icebp
fs
fsubrs
push
cld
cltd
add
xor
xchg
dec
push
and
adc
pop
and
std
call
jge
imulb
filds
lods
sub
push
sbb
sub
subl
cwtl
xor
jno
cmp
ret
pop
mov
add
push
fnstcw
imul
and
push
sub
xchg
add
lods
enter
mov
jl
in
faddp
ds
imul
enter
and
inc
sub
xchg
push
ret
mov
and
aad
sbb
xchg
adc
cmc
jnp
cmp
lahf
ljmp
std
sbb
jnp
inc
pop
and
adc
and
jno
imul
xchg
sbb
pop
pusha
xchg
and
push
push
daa
dec
jb
cli
mov
or
lods
ret
ljmp
push
jge
dec
aad
inc
lds
inc
shrb
push
add
mov
test
adc
and
cld
loope
repz
mov
and
je
scas
imul
mov
sub
mov
lods
ss
adc
pop
les
and
test
mov
nop
xor
mov
push
outsl
mov
ret
pop
nop
adc
and
and
fisttps
enter
xor
out
or
mov
aad
xchg
cmpb
jmp
ss
sub
pushf
and
in
icebp
iret
insb
xor
fildll
movsb
push
jge
aas
mov
unpcklps
loop
dec
gs
and
mov
mov
sub
sarb
loop
push
icebp
int
and
jbe
or
testb
inc
push
mov
push
rcrl
lcall
ret
xchg
ret
pop
sub
sub
push
pushf
lahf
adc
jg
cmp
es
push
adc
xchg
add
ss
inc
cmp
loop
jns
inc
cmpsb
mov
dec
test
incl
call
sub
inc
scas
adc
and
addr16
out
cli
popa
pop
movb
cmp
mov
loope
xor
mov
je
cltd
mov
dec
mov
stos
push
aas
loop
sahf
ljmp
and
mov
fidivl
outsl
inc
adc
inc
jg
pushl
xor
xor
imul
sub
fwait
xor
mov
lods
sbb
push
or
popf
pop
dec
or
sahf
push
dec
adc
pop
out
cmp
addr16
test
std
xor
lds
mov
dec
leave
mov
fwait
inc
inc
mov
sbb
jle
test
popa
repnz
mov
ja
dec
jno
mov
in
fistps
push
jae
jbe
adc
xchg
outsb
pusha
outsl
fmulp
mov
mov
mov
sbb
add
mov
jmp
sbb
push
jmp
push
fwait
popf
xchg
sbb
fimull
mov
inc
cmc
jmp
push
adc
jle
xor
int3
enter
cmpsl
hlt
js
lcall
push
testl
jne
jmp
dec
add
mov
push
push
inc
jne
push
fnstenv
mov
mov
xor
cld
inc
adcl
mov
jecxz
pop
cltd
inc
test
pop
int
daa
jecxz
mov
sbb
sub
out
outsl
lds
sbb
xchg
adc
loopne
jl
out
in
aas
push
inc
pop
movsb
lret
xor
in
xor
jge
add
andb
add
jmp
mull
mov
push
dec
xchg
sub
testl
push
loope
cs
in
int3
lcall
in
je
add
ljmp
movsb
in
stos
lret
mov
cmc
mov
lock
mov
or
xchg
mov
decl
pop
clc
jns
es
dec
imul
shr
and
lds
dec
lods
div
dec
mov
outsl
pusha
push
sbb
in
test
inc
testl
rorl
jl
call
stc
mov
icebp
scas
jl
fwait
rcl
add
mov
and
push
add
stos
cltd
insl
popf
es
stc
and
xchg
push
addr16
cmpsl
add
cmpsl
stos
dec
cltd
jne
or
fisubrs
ja
pop
repz
jg
jle
cwtl
and
pop
pusha
and
lock
xchg
adc
jno
xor
jnp
ficoml
xchg
imul
cwtl
xor
into
insb
loop
pop
sub
ret
in
mov
inc
out
xchg
dec
in
sub
repz
insl
add
loopne
dec
or
dec
dec
dec
incb
dec
pusha
cmp
ret
xchg
dec
fisttpll
and
dec
dec
fs
sbbl
push
pushf
xor
mov
mov
add
int3
xchg
mov
mov
ljmp
adc
fidivs
xchg
int3
fcompl
cmp
and
xor
push
mov
aam
in
cltd
push
js
adc
daa
mov
xchg
stos
popf
inc
into
jmp
lret
lahf
es
ljmp
imul
mov
movsl
imul
stc
movswl
pop
xorl
mov
mov
mov
mov
jg
popa
xor
xchg
in
aad
cmp
jp
xor
fistpl
les
and
mov
jae
out
js
sar
adc
ret
lahf
insl
cmovg
movb
mov
jg
and
test
pusha
xchg
pop
inc
lds
sbb
xor
dec
push
xchg
mov
fwait
dec
jbe
jecxz
xchg
or
dec
enter
outsb
jle
lret
fstpt
mov
sbb
mov
in
xchg
fisttps
mov
mov
adc
add
sbb
js
fcmovu
int3
mov
or
and
in
pop
aam
test
mov
jp
adc
mov
mov
dec
inc
lock
pop
push
stos
or
fwait
int
iret
dec
jbe
aam
cmp
pop
add
jae
insb
loop
inc
mulb
mov
add
dec
sbb
addr16
and
icebp
stos
inc
inc
movsl
pop
subb
cmc
movsl
ret
ja
mov
add
sub
dec
rclb
jbe
jno
fwait
aam
adc
mov
jnp
ss
testl
pop
roll
lods
pop
mov
addr16
push
leave
push
fnstcw
out
test
add
jb
rcl
dec
test
test
inc
insl
jo
sub
push
mov
das
pop
imul
fcmovnb
sbb
or
or
mov
xchg
movsl
shl
insl
ja
sbb
xchg
fsubr
jo
mov
xchg
aaa
fdivs
cwtl
scas
sub
das
pop
adc
adc
ss
cmp
jo
ret
mov
nop
jne
add
and
mov
out
inc
outsl
jnp
stos
push
cwtl
xchg
cld
jo
dec
inc
ficomps
adc
shr
repnz
lea
or
imul
cld
push
dec
mov
iret
push
sbb
cld
ja
jb
shrb
iret
fwait
and
jmp
add
jmp
mov
mov
cmp
jge
cmc
push
jns
push
mov
negb
frstor
dec
or
insl
dec
mov
and
and
ret
fidivl
sub
inc
js
push
js
testl
mov
mov
enter
sarl
lds
xlat
dec
and
cmp
mov
xor
mov
mov
or
adc
add
and
movsb
out
popf
pop
and
xchg
add
push
inc
orl
cmpsl
scas
mov
dec
push
mov
fadd
add
sub
pop
xchg
xlat
cs
repnz
ds
clc
jne
lcall
ds
cltd
cmpsb
fistpll
sub
aad
sub
jg
pop
out
or
out
cmp
jns
xchg
mov
sub
bnd
bound
popf
add
negb
mov
push
xorb
sub
cmc
jmp
jns
xor
sbb
xchg
xor
jne
push
cmp
sub
repz
mov
lret
inc
sahf
push
or
jae
jb
xchg
popa
and
inc
or
adcl
cli
mov
sbb
gs
outsb
roll
scas
push
mov
jmp
lea
push
jns
aas
and
mov
cmp
xchg
cmp
jbe
push
bound
dec
fsubs
movsl
enter
jp
cmp
push
mov
xchg
pusha
aam
pop
inc
leave
das
rolb
inc
mov
int
sub
notl
int3
inc
es
dec
mov
ljmp
movsb
dec
daa
lds
jge
jb
movsb
scas
inc
jb
out
push
icebp
stos
or
mov
mull
rol
mov
bound
jp
fimuls
lcall
psllw
or
xchg
jl
outsl
lock
fldl
xchg
jo
fists
mov
inc
cmp
insl
stos
cltd
ja
out
sub
ljmp
outsb
xchg
mov
and
mov
std
mov
jnp
sub
sub
cmp
sub
call
push
and
and
int3
pop
jno
or
js
and
mov
push
mov
loope
mov
sbb
rorl
or
aaa
ficoml
jno
cmp
iret
out
adc
mov
xlat
shrb
mov
push
dec
pushf
int
inc
cwtl
add
fsubl
test
scas
rorb
call
or
shrl
loope
mov
stc
aaa
xchg
cmp
push
inc
pop
out
and
mov
popa
lret
mov
and
sub
push
out
fstl
sbb
shrb
data16
xor
ficomps
bound
cmp
cmp
mov
sahf
outsl
push
sarl
daa
int
push
mov
orl
and
dec
or
outsl
inc
outsb
rolb
nop
push
add
jl
sub
adc
and
or
fiaddl
mov
sti
and
subl
inc
sbb
push
mov
xchg
out
or
pop
out
jns
jno
call
aaa
mov
call
ljmp
into
shlb
mov
cmp
mov
ljmp
mov
leave
mov
xchg
xchg
pop
or
shlb
cmp
lret
das
fcom
and
push
inc
xor
or
push
pop
out
adc
rcll
and
addr16
jg
push
inc
jge
add
xor
or
ret
fstp
inc
add
out
inc
loopne
fsubs
scas
inc
pop
or
mov
popa
pop
scas
outsb
or
pop
cmp
jg
mov
add
mov
lea
mov
popa
test
or
xchg
dec
sbb
pop
cmpsb
mov
mov
scas
lret
pop
sub
cmp
push
cmpb
jnp
mov
ret
test
std
out
dec
movsl
adc
or
mov
xor
push
cmpsl
push
pop
mov
repnz
sti
rorl
popa
icebp
adc
xor
shlb
sub
pop
sahf
pop
xchg
mov
leave
and
inc
push
jo
pop
fwait
or
mov
addr16
sub
inc
shr
es
cwtl
scas
push
pop
or
sarb
sahf
add
pop
loopne
xchg
xchg
enter
and
cmpsb
ljmp
cmc
loope
pop
lret
xor
mov
cld
std
lcall
push
pop
push
mov
cmpsl
push
push
push
sub
ljmp
out
push
pop
mov
les
push
jg
divl
dec
data16
pop
pop
sub
adc
sti
subl
xchg
adc
jnp
dec
hlt
mov
lret
insb
adc
jnp
mov
jo
orb
stos
push
inc
outsl
xchg
dec
int3
popa
jle
jle
sbb
test
lds
fisttpl
stc
js
jmp
ja
dec
mov
test
mov
mov
es
lods
cmp
mov
std
fisubrs
mov
inc
fimuls
inc
mov
pop
cmp
je
bound
mov
out
mov
dec
mov
dec
cwtl
mov
push
pop
adc
jecxz
subb
loop
sbb
cmp
mov
mov
mov
test
sub
or
dec
adc
push
inc
push
gs
shll
lock
sbb
addl
imul
ljmp
cwtl
outsl
push
mov
sbb
hlt
loopne
out
push
push
mov
xor
orl
jns
cmp
add
popa
pop
mov
clc
clc
rolb
and
mov
stos
movsb
nop
testl
jmp
lods
in
push
mov
sbb
xorl
inc
xchg
jne
add
sub
and
mov
and
cmpsb
mov
add
or
pop
test
push
mov
and
pop
lret
xlat
sahf
test
bound
xchg
mov
nop
push
js
mov
fdivrs
dec
inc
mulb
add
xor
testb
fs
mov
jb
faddl
cmc
inc
jp
les
scas
jnp
mov
int
mov
dec
push
adc
xchg
inc
leave
mov
jl
inc
mov
push
and
push
out
xor
jo
xchg
les
clc
add
dec
dec
xlat
pop
pop
pop
in
pop
push
testb
mov
jno
dec
cmp
pop
int3
pop
enter
aam
repnz
mov
mov
cmp
sub
std
mov
in
mov
test
aaa
das
add
aam
das
pop
push
pop
daa
pusha
lea
stc
inc
popa
jbe
test
es
es
out
movsb
aaa
cmp
ret
add
mov
out
ja
mov
imul
sti
mov
sub
clc
xchg
cmc
cmpsl
jge
aad
sbb
push
shr
xor
jno
lea
addr16
outsb
mov
cltd
sub
ret
jns
pop
mov
mov
incb
sub
pushf
gs
or
pop
push
dec
fwait
pop
cmpsl
int3
mov
into
scas
push
cmp
jne
xchg
push
pop
sub
fsubrl
idivl
gs
jb
dec
sbb
or
mov
sbb
xchg
mov
jns
mov
jns
push
push
gs
nop
faddl
sbb
lahf
mov
pop
ss
ret
outsb
or
xor
stc
xchg
fwait
xchg
dec
nop
xor
pop
push
addr16
xor
bound
add
jbe
or
jb
test
nop
add
cmpsb
adc
mov
in
loopne
mov
xchg
sub
sub
lds
adc
pop
cmp
cmp
loopne
or
int3
lock
movsb
pop
nop
pop
adc
inc
mov
mov
xchg
jle
xchg
jmp
dec
mov
out
test
rclb
jb
pusha
ret
xor
lock
pop
add
mov
sub
data16
test
add
aad
cmc
mov
mov
mov
loopne
and
jl
dec
int
cmpsb
cmpsb
push
loope
sub
sub
into
mov
lock
push
addr16
loopne
ds
into
sub
and
push
movsb
test
sbb
push
mov
outsb
out
js
fwait
push
xor
insb
rcll
in
inc
jo
ret
and
leave
xchg
push
roll
fistpl
push
nop
ja
js
fld
push
int
test
rol
movsl
cmp
cmp
xlat
add
loope
in
in
hlt
into
icebp
adc
cmp
fs
lods
lcall
mov
rcll
movsb
jb
push
adc
movsl
es
scas
adc
repnz
stos
loopne
je
incb
mov
sub
mov
mov
xor
jb
cmc
jg
js
decl
jmp
jno
add
std
enter
je
mov
mov
imulb
jge
push
jb
int
mov
notl
lods
and
in
or
jno
inc
adc
push
mov
cmp
xor
pop
lret
or
mov
lods
push
mov
fnstenv
test
push
inc
mov
lret
out
dec
sub
cmp
mov
lods
repz
push
cmpsb
adc
sbb
lock
clc
popf
js
sbb
and
dec
dec
xor
xor
iret
mov
aam
xchg
push
or
hlt
push
sub
push
cltd
and
stos
loope
push
sub
mov
jbe
mov
sbb
or
push
aaa
cli
add
and
xor
sarl
gs
popf
mov
out
inc
into
jp
pop
pushf
dec
adc
outsb
and
lea
xchg
mov
lock
and
fsts
orl
mov
jle
add
lds
dec
jns
cmp
jne
and
outsl
mov
sub
pop
mov
or
dec
push
movsb
aaa
bound
lret
or
aaa
mov
mov
sub
inc
cli
jecxz
adc
add
cwtl
cmpl
js
movsb
jae
inc
cmp
sbb
push
adc
add
nop
mov
movsb
int
xlat
sbb
inc
push
fisubrs
cmc
xor
bound
fnstcw
loopne
into
inc
jns
sub
ret
jbe
xchg
xchg
rolb
xor
jno
aad
cmp
movsl
daa
sbb
lods
fidivrs
test
jne
push
pusha
iret
rorl
fiaddl
inc
adc
out
test
push
pop
aad
adc
adc
push
and
lcall
add
inc
enter
or
pop
jo
aad
dec
mov
negb
cmp
sub
mov
push
scas
mov
out
add
inc
and
jae
mov
pop
cmp
scas
ja
xor
push
icebp
xor
adc
pop
push
fisubrl
mov
mov
jae
hlt
pop
aas
imul
xor
movsl
sub
les
inc
fwait
add
inc
cmp
push
add
adc
js
cmp
add
pop
rclb
addb
ret
pop
jp
fs
shll
pop
jg
push
dec
xor
lea
mov
fstpl
lock
cmpsb
test
mov
iret
add
jmp
shll
mov
mov
in
push
aam
negl
mov
sbb
xor
stos
or
inc
xor
filds
mov
mov
or
pop
icebp
mov
aad
push
mov
mov
jns
es
cwtl
or
and
pop
out
pop
adc
sbb
mov
lods
push
shl
repnz
sbb
stos
and
sar
jns
ds
pop
and
jb
popf
pop
dec
cmp
and
xor
pop
aas
loope
inc
aas
imul
mov
insl
lods
shll
gs
dec
shll
xchg
jbe
and
sti
push
push
addr16
daa
xor
in
mov
push
shlb
sub
enter
or
mov
xchg
mov
or
jmp
dec
and
adc
pop
push
loope
push
fxch
outsb
out
ret
fwait
jae
push
mov
ret
push
mov
pop
das
cmc
cmp
hlt
lret
mov
loope
xchg
sub
lcall
imul
sbb
pusha
repnz
repnz
imul
pop
inc
xchg
mov
sub
inc
call
and
dec
sub
adc
push
xchg
stos
inc
pop
scas
or
std
mov
sbb
sbb
stos
popf
sub
xor
je
mov
in
inc
inc
push
into
add
mov
cs
mov
aam
cltd
dec
adc
sbb
pop
push
gs
sti
in
repnz
mov
gs
xchg
inc
inc
enter
ss
je
jbe
icebp
dec
ret
sub
mov
sar
xor
add
and
dec
add
dec
in
je
inc
in
movsb
jnp
adc
aad
dec
cmp
repnz
mov
repnz
pop
lcall
jmp
adc
cmp
lds
xchg
rcl
test
movsl
daa
inc
rcll
push
movsl
dec
pop
fisubrl
xchg
nop
fs
les
jmp
pop
jle
shl
loope
lcall
clc
jp
cmc
pop
xor
shlb
mulb
ret
xor
leave
std
mov
nop
sub
sar
or
push
aad
mov
xchg
movsl
sahf
into
test
push
into
or
insb
dec
cmp
enter
add
dec
xor
nop
push
popf
ficoml
pop
or
inc
xor
data16
xor
out
cmp
and
dec
mov
or
push
pop
cltd
lock
adcl
insl
mov
mov
jne
jae
xchg
stos
ljmp
mov
aas
gs
out
push
add
xor
cld
fistpl
call
cld
test
inc
jle
cmp
jmp
gs
mov
in
sub
imul
icebp
cmp
dec
fdivr
jle
mov
andl
jl
out
lods
int3
pop
test
xchg
sarb
or
xor
movsl
mov
repz
nop
gs
stos
ljmp
repnz
gs
aaa
dec
jo
and
enter
orb
fs
ss
sahf
sbb
sbb
xor
les
lret
add
inc
stos
aad
cmp
pushf
test
call
mov
mov
mov
adc
inc
xchg
cmp
inc
jg
cmc
addr16
outsb
lret
inc
rorl
imul
push
popa
adc
and
mov
jns
mov
je
lock
call
mov
xor
movsb
mov
stos
in
xor
stos
in
adc
fs
icebp
xor
fwait
aas
xchg
imul
and
push
and
lret
loopne
jmp
popf
inc
xchg
nop
xor
adc
xchg
mov
xchg
mov
push
or
push
add
dec
scas
lds
rorb
mov
pop
mov
cmc
mov
mov
das
sbb
xchg
xor
xor
pop
adc
dec
push
mov
xlat
int3
js
out
mov
rcl
xlat
addr16
mov
lret
rorl
sub
int
stos
cmp
rcrl
orl
dec
mov
mov
cmp
lock
decl
ds
into
inc
xchg
mov
mov
rcll
sar
adc
cli
ds
test
iret
stos
and
or
pop
xor
mov
outsl
mov
sbb
add
test
andb
adc
pop
add
fs
sbb
iret
lret
in
inc
mov
inc
dec
cltd
rclb
xchg
lods
inc
xlat
sti
adc
jl
sbb
jnp
pop
popf
add
or
and
fldenv
divb
movsb
mov
sbb
fiadds
mov
inc
xchg
mov
shrl
jns
test
mov
in
mov
xchg
rcrb
lcall
jmp
push
mov
lods
mov
and
cs
divl
je
lfs
and
outsl
inc
aad
dec
aad
data16
inc
inc
sti
mov
adc
clc
sub
std
xor
fstps
sbb
add
jl
inc
or
dec
lods
fmuls
inc
push
jp
lahf
movsl
or
sahf
nop
jbe
ret
or
jge
add
xor
cmp
or
cwtl
cmp
arpl
sub
inc
push
ret
aas
lahf
mov
mov
inc
and
jno
out
mov
mov
fimull
push
jg
loopne
add
jne
orps
daa
das
in
push
aas
cmc
icebp
mov
pushf
and
push
lea
and
push
sub
mov
xchg
inc
pop
bound
inc
push
mov
mov
stos
or
out
cmpsl
pop
sub
adc
daa
inc
call
pop
lods
ja
subl
int
stos
out
mov
mov
sub
out
repnz
insl
inc
sub
out
and
adc
or
sbb
lcall
push
dec
cmc
fwait
insl
push
ljmp
enter
pop
sub
and
adc
or
dec
aas
xchg
push
les
cmp
mov
or
cmpsb
fiadds
xor
inc
jnp
xchg
sbbb
fwait
xor
jge
sbb
lock
idiv
inc
xorl
mov
fs
into
into
mov
cmp
shl
add
daa
xchg
insl
arpl
xchg
inc
push
int
loope
repz
jne
cmp
sub
scas
ret
leave
fwait
and
in
repnz
inc
ja
lahf
xor
and
movsl
xchg
lds
and
jecxz
pop
daa
add
xor
dec
mov
jnp
jg
or
mov
and
or
mov
popf
lds
jb
jo
pop
fsubr
xchg
jecxz
lds
jb
dec
repnz
lret
clc
mov
rorb
popf
test
jae
add
ds
fsubl
sti
mov
aad
mov
fwait
inc
inc
inc
cmp
ljmp
stos
cwtl
cmp
sarl
lret
pop
jg
dec
arpl
shr
xor
movsl
xchg
hlt
sarl
xchg
push
mov
and
xchg
mov
mov
push
pusha
mov
outsl
mov
inc
movsl
mov
pop
mov
leave
xlat
pusha
cli
push
iret
xor
push
mov
rorl
int
in
in
mov
mov
xor
mov
add
mov
mov
xchg
jg
dec
pop
js
dec
rcrb
gs
mov
xchg
out
subl
xor
nop
in
cmp
xchg
push
push
mov
and
out
lods
mov
mov
inc
inc
lea
mov
inc
pusha
aad
out
mov
cwtd
push
inc
arpl
iret
shl
hlt
ja
cmp
test
sub
out
mov
int
and
jae
out
sub
xor
std
into
mov
add
mov
add
lock
jbe
sub
jmp
xchg
mov
push
push
xchg
lock
lods
mov
jg
inc
insb
pop
push
xchg
add
mov
mov
clc
and
cmc
mov
lret
push
mov
jecxz
scas
mov
lret
lret
mov
jecxz
lds
jge
je
rolb
gs
in
add
rorl
adcb
rcl
fwait
mov
and
cld
pop
arpl
les
dec
adcl
ret
insb
stos
push
jmp
ja
fnstenv
cwtl
and
jge
and
xchg
pop
adc
xchg
mov
cmp
lds
xlat
xchg
es
ret
mov
dec
adcb
jg
insb
or
add
push
xchg
jg
rorl
push
jne
xchg
shr
mov
stos
adc
inc
mov
or
jo
leave
cmp
cmp
mov
int
rcr
mov
stos
push
inc
movsl
hlt
cmp
outsl
cmc
xor
push
shr
icebp
sub
out
subl
rorb
pusha
pop
js
dec
dec
push
mov
and
mov
cmp
mov
paddd
add
xchg
sarb
lcall
ficompl
out
in
dec
mov
mov
sbb
cli
mov
dec
ja
xchg
jg
mov
out
enter
out
cltd
andb
fcomi
bound
cltd
scas
mov
fsubrl
pop
dec
pop
cltd
andl
inc
add
bound
out
cmc
je
out
imul
stc
adc
pop
sub
dec
sbb
scas
cmp
jmp
mov
imul
cmp
mov
sub
cltd
jp
lcall
sbb
repz
push
in
push
outsl
sub
in
lret
enter
js
ds
repz
icebp
and
test
mov
mov
lock
and
test
inc
jmp
mov
pop
xor
arpl
scas
sub
push
pop
dec
push
lock
into
notl
scas
test
mov
gs
adcb
xor
icebp
push
push
sbb
xchg
fbstp
test
lds
push
xchg
push
xor
xor
dec
shll
sbb
sub
lret
push
aad
hlt
jp
mov
rorb
cmp
jp
mov
shll
outsb
push
pusha
cmpsb
jns
loop
dec
ret
mov
ret
cmp
adc
mov
cltd
push
aaa
mov
dec
push
cmp
aad
adc
add
inc
push
add
sub
inc
test
loopne
sarb
les
orb
iret
dec
dec
sub
inc
lahf
out
mov
jmp
rclb
mov
sub
je
sbb
and
jmp
sub
pop
sbb
pop
popf
cmp
push
sub
into
push
icebp
mov
pusha
push
mov
pop
inc
mov
sub
out
imul
dec
push
pop
mov
lcall
mov
cmpsb
lahf
xor
push
mov
and
jge
xchg
mov
inc
mov
fwait
stos
in
and
sbb
sub
enter
rcrl
pop
jae
inc
mov
std
push
pop
jne
cmp
pop
andb
mov
push
jge
pop
iret
mov
je
sub
cli
mov
and
mov
jmp
cmp
push
mov
lods
outsb
xor
inc
inc
in
movsl
rclb
imul
mov
aam
inc
ficoml
outsb
repz
mov
sbb
mov
push
cmp
push
stos
fidivrl
test
mov
das
pop
sti
adc
sbb
sbb
push
add
pop
lahf
sbb
imul
arpl
jmp
pop
imulb
cmp
pop
add
fs
inc
cld
fs
add
lods
pop
inc
ret
pop
fisubrl
sti
add
in
lcall
mov
mov
cwtl
ds
adc
or
mov
dec
scas
stc
scas
inc
fistl
or
xor
xor
adc
outsb
and
imul
fsub
adc
jno
jne
mov
mov
dec
add
adcl
pop
sbb
dec
adc
mov
data16
sti
push
test
int3
jmp
out
jecxz
stos
sbbb
cmp
xor
loope
jl
test
insb
or
lods
out
rorb
sub
inc
xlat
or
mov
jnp
xchg
or
sub
scas
mov
fidivl
sbb
pop
aas
xchg
movsl
or
pop
pushf
fwait
popf
mov
push
lcall
decl
out
jmp
mov
pop
sahf
pop
mov
out
in
jb
pop
bound
sarl
rcll
mov
sbb
dec
jo
lret
sbb
cmp
fsubrp
aad
lret
bound
xor
movsl
in
xchg
and
inc
pusha
int3
mov
mov
lods
pop
inc
pop
sbb
mov
mov
pop
scas
jne
jbe
jne
or
shll
sub
jle
mov
lret
das
clc
xchg
push
mov
js
sbb
jo
movsl
nop
push
cmc
dec
adc
popa
shll
popf
aad
push
clc
sbb
mov
xor
pop
popf
xor
pop
aam
mov
cmpsb
enter
add
xchg
adcb
push
push
dec
daa
add
jmp
xor
in
nop
pop
dec
adc
push
mov
repnz
mov
adc
add
pop
les
dec
sbb
inc
sti
fdivl
test
icebp
hlt
cltd
rep
sbb
fsubr
outsl
fcomi
or
lret
lods
mov
xchg
push
dec
fsubrs
cwtl
into
sub
mov
cmp
jbe
icebp
xchg
add
sbbl
sbb
into
jp
push
inc
adc
mov
inc
cld
into
call
insl
pop
push
push
js
bswap
adc
fldenv
cmp
aad
add
mov
outsl
cmp
lods
aaa
lret
jo
adcb
aam
cmp
lret
xchg
adc
pop
in
ret
adc
test
pop
mov
lock
iret
mov
sahf
enter
mov
lds
aas
in
cmpsb
jnp
mov
inc
cmp
psubq
bound
mov
call
fldl
jnp
pop
xchg
aam
decb
orb
into
js
test
dec
mov
les
fcmovu
bound
push
mov
ss
loope
mov
icebp
or
imul
stc
sub
adc
lahf
cmp
fmull
and
icebp
movsb
inc
stos
sbb
subb
mov
mov
or
leave
inc
and
adc
clc
sti
fmuls
repnz
ret
cmp
mov
shrb
dec
arpl
dec
fisttpll
sub
inc
cmpsb
or
js
pop
ret
sbbb
xor
repz
hlt
adc
dec
push
orl
push
xchg
fisubrs
push
je
sahf
push
pop
xchg
and
fdivrl
xor
pop
stos
div
inc
xor
xchg
push
mov
mov
push
outsl
or
ja
or
pop
outsl
push
xlat
and
xlat
ret
or
inc
addr16
push
or
push
push
or
sub
jae
lock
cld
mov
and
jp
pop
enter
mov
sbb
push
add
les
mov
jecxz
xchg
inc
push
lea
aam
push
lock
es
lods
jo
mov
jp
jle
dec
mov
push
xor
sub
or
out
lods
xor
mov
inc
aas
sub
repnz
test
mov
cmp
jecxz
cli
outsb
leave
int
imulb
outsl
jp
scas
lret
jp
stos
es
cmpsl
cmp
cwtl
in
xchg
xchg
lds
lahf
ret
cwtl
xor
dec
sbb
push
pop
int
stos
ss
fcoml
or
mov
cmpsb
fsts
push
xchg
sahf
stc
xor
shrl
mov
or
push
cli
rcrb
pushw
xor
loop
xchg
adc
cmp
ret
ss
lret
mov
xor
cmpb
dec
add
stc
jl
mov
or
rcrb
dec
and
jg
sbb
sbb
es
stos
dec
daa
sbb
scas
rol
jno
shr
jbe
pmullw
loop
mov
test
push
or
cwtl
pushf
jae
fisttps
push
push
sub
jno
adc
jbe
shlb
push
js
ror
aam
mov
mov
mov
sub
in
flds
xchg
bound
jo
inc
aas
iret
sahf
push
or
pop
or
into
xor
xlat
in
xor
pop
xorl
push
xchg
das
scas
ja
xchg
cmpsl
pop
ja
je
movsl
mov
call
inc
sahf
xchg
fsubl
xchg
sarb
push
or
or
xchg
scas
movsb
movb
divb
fisttpl
jle
push
mov
add
test
fisubrl
fistl
mov
push
call
js
adc
adc
sahf
mov
mov
js
push
bound
dec
jbe
jnp
add
pop
lods
shrl
mov
mov
and
lock
mov
or
mov
dec
sahf
sarl
aaa
inc
add
cli
ret
add
push
ret
loop
xor
insl
adc
sub
iret
pop
pop
push
xor
aam
pop
jae
xchg
cmp
cltd
sub
and
cltd
orl
push
lahf
mov
push
mov
dec
mov
notb
scas
test
xchg
aam
inc
fidivrs
push
imul
pop
in
cmpsb
cld
cmp
jp
jne
jl
out
jg
in
iret
and
sbb
imul
or
inc
movsb
mov
push
out
iret
cmp
movsl
jno
adc
pop
shl
cmp
arpl
bound
xchg
dec
mov
cwtl
pushf
pop
jbe
push
insb
insl
and
inc
mov
and
xor
mov
std
fildl
inc
mov
mov
jb
out
and
and
aam
test
jge
fdivl
mov
adc
fcompl
jo
cli
add
dec
cmp
xchg
xor
in
cmp
leave
dec
xor
bound
mov
xor
loope,pn
loope
or
inc
out
xchg
mov
out
mov
in
out
subl
mov
sbb
pop
arpl
lahf
dec
xchg
xor
pop
dec
jnp
imul
jp
pusha
push
data16
mov
push
inc
aaa
and
add
pop
cmpsl
lods
jge
nop
add
orb
mov
addr16
repz
or
fs
xchg
in
movsb
mov
pop
pop
xor
sub
xchg
xchg
xchg
sbb
and
mov
call
sub
dec
jl
mov
loop
imul
jecxz
jg
js
outsl
cmp
pop
push
cltd
sar
fadds
ret
loope
sub
sub
mov
leave
mov
sbb
loope
mov
cmp
lods
or
inc
movsb
lret
inc
xor
xchg
rclb
daa
lcall
mov
leave
push
sarb
adc
and
sbb
adcl
bound
mov
ret
ret
push
fildll
mov
fisttps
je
xor
and
adc
rorb
or
dec
les
test
movsl
repz
mov
mov
rcr
test
pop
dec
out
jmp
scas
cmc
adc
inc
or
hlt
or
pop
or
cmp
mov
cmp
rcll
cwtl
int
mov
inc
mov
xchg
pop
fwait
adc
inc
les
cmpsb
jbe
enter
sbb
scas
mov
dec
sbb
cmp
xchg
inc
cmp
and
xor
mov
cmp
cmc
cmp
lea
pop
out
arpl
lret
fldl
dec
sbb
jo
das
clc
mov
jo
in
sbb
ss
sti
das
jnp
dec
movsb
xchg
xorl
out
cmc
fstpt
cltd
or
adc
add
enter
inc
add
lods
iret
lret
adc
jle
mov
push
pop
test
pusha
lcall
cmp
xor
stos
shll
pop
push
daa
packsswb
cli
mov
xchg
mov
pop
lret
leave
rolb
aas
mov
and
stos
fisttpl
xchg
pop
dec
mov
hlt
je
ja
mov
call
push
add
mov
and
cmpsl
mov
add
xrelease
or
inc
xchg
hlt
int3
or
xor
ss
dec
jle
sets
and
outsl
ljmp
aad
add
sub
xor
sub
arpl
sbb
xor
psrlw
jo
xchg
pop
add
daa
stc
pop
fs
repz
icebp
cwtl
fsubl
mov
fdivr
mov
clc
lock
and
mov
or
dec
push
popf
xchg
movsl
icebp
dec
cld
les
aaa
lods
mov
jl
jmp
scas
pusha
mov
hlt
aaa
movsl
dec
adc
out
xchg
ror
outsb
leave
jo
sahf
aas
xor
lcall
lods
subb
mov
aad
xor
ja
cld
or
push
push
jecxz
mov
lods
repz
pop
fidivrs
jo
jge
pop
test
outsb
hlt
mov
inc
fmul
cltd
lcall
xor
mov
adc
scas
pop
in
mov
les
jne
xor
iret
shll
push
pop
ret
in
shll
stos
dec
mov
call
stc
push
call
jnp
mov
ja
test
jo
jae
xor
fstl
mov
cmc
add
adcl
lea
test
jno
std
lock
sarb
stos
adcl
dec
sub
mov
dec
sub
mov
push
mov
insb
jg
ja
jae
cmpsl
scas
arpl
clc
jmp
xchg
addb
mov
jnp
fildll
or
stc
outsl
shrb
mov
inc
popa
push
mov
push
and
shrb
iret
dec
jl
push
push
jne
lret
fdivrs
cmp
arpl
movsl
jne
insb
cmpsl
shrb
cmp
inc
movsb
outsl
cs
fnsetpm(287
lock
addb
jmp
in
adc
imulb
cmpb
inc
pop
sbb
outsl
pop
in
idivl
sbbb
xchg
pop
dec
adc
pop
mov
into
cmp
scas
push
mov
test
push
fimuls
adc
lret
mov
xchg
cld
and
pop
jl
add
cli
xchg
nop
jmp
xchg
inc
dec
or
mov
mov
pop
dec
add
andl
sub
inc
or
xchg
and
icebp
lcall
pop
das
cmc
nop
hlt
les
mov
rcll
ja
call
and
in
cmp
mov
leave
in
jmp
cmp
test
imul
lods
xchg
xor
jb
xlat
imul
fisubs
cld
xchg
loopne
loope
arpl
mov
pop
mov
add
push
mov
add
rcll
fadds
or
cmp
lcall
push
pop
cmp
imul
cmp
lret
push
lret
mov
jmp
ret
lret
in
or
out
fbstp
sub
adc
mov
bound
and
clc
test
inc
insl
xor
mov
push
loope
pop
mov
ds
scas
aas
pop
mov
fdivl
adc
pop
dec
pop
mov
sbb
ret
inc
sbb
test
imul
xor
or
cld
pop
xor
inc
notb
jne
adc
testl
imul
mov
xchg
mov
fistpll
cwtl
sbb
outsb
add
arpl
ljmp
mov
dec
daa
aaa
or
xor
pusha
mov
insl
mov
arpl
jbe
fs
aad
dec
loop
test
or
mov
popf
aas
xchg
ret
movsl
data16
dec
pop
push
xor
insb
out
adc
loope
lea
insb
or
vpsllq
in
pop
in
mov
sbb
sti
xlat
xchg
mov
xchg
or
pop
dec
lahf
fistpl
mov
jb
aaa
js
push
jg
dec
mov
std
jmp
lock
pushf
inc
into
inc
adc
add
aad
pop
js
mov
push
mov
fistl
add
hlt
stc
or
mov
xchg
mov
or
inc
jmp
je
ss
enter
es
cwtl
or
lahf
pop
jp
or
ljmp
mov
sti
mov
adc
out
pop
cmp
xchg
push
mov
xchg
or
cmp
xchg
loop
pop
sbb
pop
pop
lret
imul
pop
in
fucom
aaa
in
mov
inc
call
mov
xchg
sbb
xchg
lret
incl
aas
int
sahf
xor
mov
flds
sub
outsb
cmp
lock
outsl
adc
sub
xchg
sbb
test
js
xor
loope
dec
das
sbb
cli
inc
inc
cmp
vaddpd
mov
push
mov
xchg
pop
filds
mov
sub
or
jae
fwait
rcrb
sbb
ret
rcrl
inc
lock
mov
shrl
xchg
sahf
xor
lret
add
push
cmp
cmp
adc
inc
lea
push
push
sub
inc
movsl
xor
arpl
mov
cmc
push
dec
pushf
xor
aam
sub
fsub
mov
push
hlt
out
cmpsb
or
clc
inc
ds
push
je
sub
inc
movsb
push
push
sub
and
movsl
arpl
mov
stos
sub
sub
out
je
xor
inc
adc
fiaddl
dec
nop
fdivl
and
mov
xchg
jnp
aad
out
dec
scas
sub
mov
or
lret
xchg
mov
xor
push
sbb
pop
xor
jb
aam
jno
cmp
or
roll
pop
sub
mov
cld
cmp
movsl
dec
and
mov
iret
and
mov
jne
jns
int3
into
fs
outsl
xchg
push
or
mov
sbb
push
ds
lock
mov
sub
mov
push
xchg
sub
push
cmpsb
sahf
aas
clc
sbb
mov
fidivs
cld
add
rolb
and
loope
call
lea
cltd
jbe
push
or
fadds
cmpsb
xchg
loope
rolb
cmp
jmp
jmp
je
int3
test
ret
sub
inc
ljmp
divb
inc
fucompp
out
or
int3
insb
ja
fs
pop
mov
icebp
into
std
mov
aas
jg
jo
and
jmp
iret
push
mov
add
dec
loopne
notl
xchg
js
hlt
psrlw
filds
mov
adc
push
hlt
fwait
fs
xchg
sbb
test
aam
out
jae
data16
ret
mov
iret
push
mov
cwtl
fildll
sahf
popa
arpl
nop
lock
loopne
cmpb
es
daa
push
jbe
jnp
in
mov
shll
loope
in
lods
fwait
xlat
dec
push
or
xor
mov
fsubr
lret
mov
xchg
lds
xchg
in
mov
add
xchg
push
jp
enter
fisubl
ret
cs
xchg
sahf
lea
or
jp
sbb
insl
xor
cli
popa
repz
test
add
cmpsb
ja
out
in
push
xor
clc
pminub
cmpsl
lods
test
shl
dec
int3
pop
das
data16
or
fs
xchg
dec
roll
sbb
xchg
dec
les
and
cltd
sub
xor
sub
call
lock
sub
movsl
push
outsb
lds
lds
adcb
and
loop
adc
cmp
rcrb
cmp
pusha
inc
aad
jecxz
cmp
lods
lods
or
lds
sbbl
and
jbe
dec
outsb
int
dec
jle
dec
insb
cld
js
mov
push
push
or
loope
add
je
icebp
loope
in
sub
mov
add
dec
cltd
outsl
imul
cs
mov
jmp
sbb
sub
shll
and
sbb
sti
cmp
es
and
das
pop
xchg
sbb
and
dec
cmp
jp
push
call
xchg
filds
test
inc
scas
jecxz
push
in
idivl
dec
pop
in
mov
and
in
mov
fisttpll
rol
add
shll
fsubrs
out
enter
cmc
mov
push
cs
negl
push
xor
loop
and
pop
fisttps
mov
dec
fcmovu
push
pop
leave
pop
xor
shr
add
fdiv
jns
pop
push
mov
inc
push
adc
push
push
test
and
jo
lret
movsb
pop
jbe
cmc
sbb
dec
sbb
jb
movl
cli
fmuls
dec
jns
jne
lods
add
sub
xor
push
inc
mov
or
xchg
das
ds
lock
pop
or
push
incb
inc
loope
int3
clc
or
jb
lret
cmpsl
aaa
sbb
fidivrl
xlat
inc
adc
es
repnz
hlt
in
scas
icebp
int3
cld
into
cmpsb
arpl
clc
sbb
lcall
sti
mov
andb
mov
mov
stc
invd
sahf
call
ret
cmp
mov
cmp
jp,pt
inc
rcr
cltd
xor
sbb
add
icebp
arpl
into
out
fwait
sti
pushf
pop
ja
fiadds
xor
xchg
movsl
mov
popa
jp
js
xchg
jb
xchg
sbb
mov
lods
lock
jp
xchg
and
int3
xor
xor
adc
scas
xchg
js
test
insb
jp
aad
mov
cwtl
into
call
push
cwtl
pusha
int3
fwait
mov
fildl
mov
adc
cwtl
lea
stos
hlt
test
sub
notl
in
movsb
push
cs
cmp
out
bound
cltd
and
sbb
sarb
adc
jbe
inc
inc
repz
mov
jae
add
push
adc
sbb
shr
inc
mov
in
stc
cs
out
punpcklbw
xchg
push
push
movsb
cmp
jbe
sbb
jbe
jle
xchg
icebp
sub
out
rorl
hlt
mov
addr16
mov
xor
sub
iret
inc
adc
mov
sub
outsl
xlat
add
jae
mov
leave
mov
xchg
pop
pop
ss
lret
cmp
mov
cmp
jbe
mov
cmpsb
mov
shrl
add
fwait
scas
scas
adc
mov
enter
ds
sub
lock
daa
push
mov
add
inc
je
pop
add
cwtl
adc
adc
inc
scas
fucom
sbb
push
fcoms
jae
xor
ret
fxam
fdivrl
sub
push
fdivrs
push
sbb
mov
add
pushf
mov
and
xlat
clc
xchg
lcall
mov
outsl
sbb
inc
sub
in
pusha
imul
pop
paddw
xorl
lds
lock
int
sbb
cmpxchg
jno
mov
inc
cltd
dec
pop
pop
and
enter
xor
xchg
mov
add
js
mov
je
push
in
adc
rorl
xchg
dec
dec
jns
xchg
int
ss
push
add
jae
fistl
mov
jae
outsl
in
div
stos
movsl
pusha
adc
orb
cmp
das
ljmp
cwtl
inc
icebp
insb
mov
test
push
fisubs
mov
add
fisttpl
jl
mov
sbb
jno
mov
lahf
out
mov
movsb
fsub
pop
inc
jmp
xchg
enter
or
mov
lock
lock
in
pop
insl
not
stos
xchg
arpl
or
inc
or
xor
jo
and
pop
jnp
loope
bound
int3
ficoml
cmpsl
xchg
lahf
push
add
insb
or
pushf
cwtl
push
sub
test
pop
aaa
rolb
xor
loope
inc
dec
jp
fiadds
stos
or
cmp
xor
lret
lahf
cld
fwait
sub
xor
out
push
nop
int
icebp
or
aam
iret
dec
stos
test
cmc
pop
vpaddsb
jg
or
shrb
jp
pop
aas
and
leave
dec
mov
mov
out
adc
pop
cmc
mov
xor
scas
sub
stos
adc
jne
mov
sub
jmp
jno
mov
fidivs
add
pop
mov
xor
insb
or
out
lds
jmp
repz
push
push
clc
push
fstpl
xor
jbe
and
lret
sub
cmpsl
das
xchg
je
lret
ljmp
xchg
or
add
sti
ljmp
stos
mov
fsubrp
adc
je
scas
lret
push
das
pop
ja
loopne
xchg
jno
xchg
loopne
imul
lds
in
fistpll
mov
xchg
or
add
sub
les
aaa
push
and
sahf
and
mov
das
test
xchg
sub
sbb
mov
fisubrs
push
loop
xor
pop
xor
mov
arpl
dec
sbb
leave
repnz
insb
jg
popa
mov
adc
clc
sub
mov
sub
call
std
repnz
or
sahf
cmp
xchg
mov
loopne
mov
mov
dec
push
sbb
cmpsb
xchg
mov
or
cmpsl
mov
xchg
dec
sbb
out
xchg
fisttpl
sbb
ss
dec
push
std
lret
mov
add
shrl
inc
lcall
scas
mov
mov
jae
in
pop
inc
das
jbe
es
bound
pop
scas
adc
sub
push
out
and
adcb
jmp
pop
inc
pop
pop
mov
push
jecxz
call
cmp
xlat
inc
mov
lds
push
addb
sub
xchg
jle
aam
push
int3
cmc
and
xchg
cld
mov
je
push
or
mov
push
enter
xor
xor
mov
or
pop
popl
push
push
insl
mov
lods
jecxz
dec
jne
sub
outsl
ret
xchg
xor
ds
out
add
imul
jnp
or
xchg
sbb
sub
push
mov
aas
popl
xchg
out
mov
pop
daa
sub
test
fxch
dec
ljmp
and
sti
stos
loopne
add
fs
push
xor
aad
dec
scas
imul
and
out
push
push
call
icebp
or
aas
in
insl
mov
push
ret
jmp
pop
cmp
mov
add
cmc
iret
ffreep
out
popa
sub
out
add
fcmove
xchg
jp
or
jb
jmp
push
mov
movsl
jno
insb
sbb
je
inc
repz
ljmp
mov
rcl
es
je
int3
fdivrl
sbb
hlt
jmp
pop
push
push
mov
dec
mov
sub
push
and
dec
sarl
scas
adc
dec
push
ljmp
dec
rcll
je
repnz
adc
ss
cmp
syscall
push
notl
lahf
aam
push
pop
rorl
lock
hlt
mov
jge
xchg
adc
test
inc
fldln2
int3
fistps
js
lret
sahf
mov
or
ss
mov
jecxz
movsb
int3
popa
lods
stos
dec
lock
insl
xor
lods
iret
mov
dec
adc
push
mov
daa
jl
shrd
jge
sti
push
aam
pop
cmpl
or
push
aam
mov
fmull
inc
inc
loopne
dec
xchg
repz
sub
mov
push
cmpsl
cmp
pop
push
dec
push
xor
js
inc
fstl
jo
test
aad
rorb
pop
pusha
pop
rep
push
adc
nop
sarb
in
je
or
mov
xor
dec
mov
mov
lock
pop
mov
inc
push
sbb
inc
in
nop
std
popa
push
cmc
mov
xor
movsl
insb
stos
orb
out
cmc
adc
add
pop
cwtl
sbb
cmp
jns
dec
jno
aaa
pop
push
inc
mov
ja
xchg
cmp
test
arpl
push
lods
xor
hlt
cmp
xor
lea
xlat
mov
mov
in
jle
cmpsl
fnsave
ja
pop
out
push
push
cld
ljmp
cmp
fidivrl
dec
inc
add
xor
add
les
insl
push
into
lret
lahf
movsb
sbb
push
xlat
lods
and
push
fcmovu
fbstp
iret
inc
mull
repnz
out
out
repz
adc
jge
pop
imul
jmp
bound
lea
or
jno
lret
xor
add
loope
jo
nop
xor
dec
out
daa
fidivs
mov
iret
or
out
and
ret
pop
scas
sub
mov
fildl
xor
movsl
adc
loopne
mov
fs
mov
int3
inc
sti
movsl
aam
fwait
mov
mov
sbb
hlt
stos
xchg
fimull
sbb
sti
adc
xchg
or
lds
push
push
jge
inc
fstpl
ficoms
fwait
dec
iret
cmp
add
cmpsb
in
or
jnp
aas
hlt
sbb
in
sti
repnz
xor
xchg
mov
roll
mov
aas
stos
sub
and
movsl
push
pusha
adc
lock
mov
cmp
jno
jmp
mov
add
scas
xchg
inc
adc
mov
repz
cmp
lods
add
jo
mov
inc
lods
fwait
add
push
fadds
popl
inc
xor
sub
xchg
jle
cmp
mov
rolb
push
in
nop
fmulp
xchg
cmp
rdpmc
mov
sub
or
lock
mov
sub
xor
inc
iret
push
adc
or
sub
push
pushf
push
cmpsl
sbb
mov
movsb
enter
gs
out
gs
jmp
sbb
daa
jbe
push
int
mov
iret
arpl
add
push
testl
inc
ja
rolb
mov
pop
icebp
sub
scas
inc
xor
arpl
lcall
in
pop
aaa
lret
jbe
mov
push
cmpsl
std
mov
les
and
jne
adc
xchg
nop
mov
loopne
xchg
xlat
sub
movsb
or
jne
dec
dec
movsb
cs
mov
mov
lret
sbb
loopne
mov
or
pop
xorl
dec
fcomps
out
out
cmp
cmp
mov
arpl
cli
jns
xchg
mov
pop
or
jl
adc
mov
loope
xchg
stos
xor
ljmp
pop
loopne,pt
and
pop
aaa
rcl
adc
shlb
shlb
loopne
enter
push
loop
sub
xchg
fistps
jnp
adc
rol
mov
loope
ret
jp
mov
iret
xchg
and
adc
sahf
mov
jp
fcompl
adc
add
scas
sahf
xchg
mov
mov
xchg
adc
inc
mov
mov
cli
testl
cld
out
and
inc
xor
pause
cld
arpl
push
in
inc
lods
adc
ds
and
jg
mov
loop
pop
mov
push
lret
sahf
sbb
cmc
decl
xchg
rorb
xchg
test
or
and
les
cltd
sub
or
ret
sub
xchg
mov
xchg
xor
sub
icebp
subb
and
sbb
stc
sbb
daa
jecxz
je
or
inc
adcb
mov
sub
insb
pop
cmp
mov
shll
cmp
inc
inc
and
imul
push
aam
dec
sti
push
pop
xor
outsl
sub
dec
adc
xor
dec
dec
in
pop
imul
aaa
push
mov
and
mov
xchg
out
mov
cmpsb
sbb
lahf
movb
cmp
push
cmp
and
in
sub
aaa
add
or
das
test
jae
addl
mov
cmp
lods
fisubs
jb
dec
lds
pusha
xor
insl
in
popf
sub
in
xchg
shlb
inc
out
lret
jo
outsb
arpl
pushf
aam
cmpsb
mov
or
hlt
inc
ss
pop
in
push
outsl
add
fnstsw
aad
mov
mov
addr16
adc
insl
mov
pop
push
jle
add
cmpsl
sub
inc
mov
mov
push
xor
loopne
inc
push
adc
enter
sub
xchg
imul
sbb
movsl
fucomip
pop
in
sbb
lds
imul
je
int3
cmp
dec
sti
pop
arpl
inc
xor
or
sahf
sub
xchg
repz
and
rorl
repz
pop
adc
or
int3
aaa
movsl
ror
or
sub
xor
ret
mov
test
cld
stos
inc
test
cmp
xchg
xor
gs
insb
int
push
adc
sbb
pop
ljmp
inc
ffreep
cli
inc
mov
jb
outsl
and
lret
add
or
flds
cltd
clc
or
adc
inc
data16
int3
enter
lock
jmp
pop
pop
cmp
loopne
clc
mov
jmp
testb
or
cld
jnp
xor
adc
enter
dec
repnz
les
rcl
jmp
inc
in
add
cmp
cmp
int3
push
mov
jl
mov
in
loope
xor
sbb
fs
adc
aas
ljmp
dec
aaa
jne
cwtl
cmp
decl
push
dec
cwtl
cmp
mov
mov
movsl
in
sub
xchg
rcll
ss
adc
mov
push
stos
fistl
jo
in
iret
fmuls
inc
or
mov
pushf
jle
jno
or
pop
sahf
arpl
xchg
repnz
xchg
sbb
inc
notb
or
mov
ss
mov
outsl
fmul
addr16
scas
leave
jge
ss
test
xor
loope
fstpl
jmp
jge
ds
mov
subl
cltd
icebp
pushf
jmp
cmpsl
xchg
movsl
mov
cmc
jle
stos
vmptrld
dec
lret
mov
sub
scas
imul
inc
iret
mov
gs
push
addr16
sub
pop
mov
call
addr16
sbb
scas
xchg
fdivs
cmp
xchg
cli
mov
js
mov
xchg
cli
jl
pusha
and
xor
xchg
in
imul
jae
mov
or
add
rorl
and
insl
lods
scas
sbb
sub
ljmp
lea
dec
aam
scas
cmp
fcmovne
dec
sub
jl
xchg
in
mov
or
es
movsl
arpl
mov
and
jmp
push
dec
dec
mov
aaa
or
mull
popf
push
fidivs
dec
fcmovbe
mov
sbb
cltd
cmpsb
nopl
add
fld
shl
mov
lds
push
pop
fs
pop
aas
cmpsl
mov
xchg
bound
mov
int
cs
push
mov
pop
mov
ljmp
cwtl
mov
mov
lret
loop
hlt
or
jae
cld
out
mov
mov
xchg
mov
rclb
push
mov
jns
jg
lods
es
aaa
shlb
data16
cmp
add
shll
inc
adc
mov
pop
or
ficoml
test
jb
xor
ret
ja
mov
dec
bound
adc
mov
xor
and
insl
aad
push
push
xchg
in
pop
add
mov
jns
or
adc
dec
ret
adc
dec
sub
out
add
ficoms
xchg
fisubs
test
out
out
jae
add
and
xchg
pop
add
mov
shrb
fcomps
push
inc
mov
and
add
cmp
or
inc
mov
ret
sub
mov
test
mov
pop
mov
testb
fs
inc
sub
flds
mov
inc
mov
pop
xchg
into
add
out
fwait
nop
jle
mov
fildl
fwait
cmp
dec
lods
pop
fldt
mov
mov
js
in
divb
dec
mov
ja
stc
xor
push
jnp
fs
int
lods
or
xor
aad
inc
cmc
sbb
adc
pusha
mov
lds
js
cmp
in
adc
hlt
popa
nop
les
outsl
mov
aaa
cmpsb
jmp
out
std
push
pop
and
or
fwait
subl
mov
inc
movsb
jbe
outsl
test
xchg
stos
popf
loope
aas
fistps
mov
pop
scas
sub
cwtl
std
xchg
rolb
push
fnstsw
in
sub
decb
ret
fadds
cmp
jecxz
or
xor
dec
dec
movsb
mov
js
inc
loop
nop
pop
loopne
add
cmp
ret
cltd
pop
pop
jecxz
pusha
sbb
sbb
cmpsl
and
in
mov
push
xor
xor
jg
push
mov
movb
mov
or
jp
push
imul
int
pop
adc
rclb
ficoms
fcmove
je
cmp
push
sub
pushf
in
lcall
cli
jae
filds
pop
add
mov
lock
mov
cld
push
pusha
aam
pop
into
xor
stos
dec
outsl
xchg
pop
bound
repz
push
loop
or
sub
adc
icebp
and
test
mov
jb
fdivl
xor
sub
cmp
pop
xor
xlat
add
fsubrp
icebp
xor
xor
pusha
mov
sub
add
mov
mov
int
pop
cwtl
lahf
stos
xor
ja
cs
add
ficompl
loopne
fisttpl
inc
add
sub
mov
call
fcoml
jle
fs
inc
pop
xchg
gs
xchg
mul
mov
fstl
jp
movsl
xchg
dec
sub
dec
pop
pop
push
fldl
sub
push
mov
sbb
fisttpl
and
push
imul
lahf
mov
xor
movsb
test
stc
mov
push
movsb
mov
lock
push
fdivr
mov
test
dec
sbb
mov
xchg
lcall
std
jbe
lret
fcom
adc
push
in
gs
data16
enter
mov
mov
cmpl
int3
add
sbb
iret
pusha
jmp
std
cmp
fs
lods
das
dec
cmc
push
push
or
xchg
test
adcl
sub
aas
hlt
and
loopne
lea
lds
lods
push
aam
addl
fistpll
fcomps
in
or
dec
mov
cmp
adc
jecxz
adc
mov
dec
sub
sub
popf
repnz
clc
cwtl
mov
cs
pop
xor
and
jle
loope
sbb
mov
imul
inc
in
jns
xor
inc
incl
inc
mov
adc
scas
mov
sub
xorl
xor
add
lea
mov
leave
je
outsl
or
mov
cmpl
push
out
sub
test
inc
xchg
out
dec
mov
call
jno
mov
fidivrs
loopne
mov
dec
sub
and
pop
ds
divl
and
xchg
mov
dec
and
mov
clc
mov
jge
push
push
repz
pop
jne
push
fcoms
in
push
and
lret
push
cmp
mov
pop
or
pop
mov
cmp
jno
addr16
dec
adc
lock
jg
lods
jle
or
lock
pop
mov
cmp
pop
cmp
mov
xchg
add
rcrb
mov
pop
adc
lods
shrl
adc
bound
jo
push
lods
scas
loop
pushf
mov
pop
in
push
mov
mov
push
sub
jae
notl
stos
jo
sarb
mov
adc
or
and
ljmp
dec
mov
lret
mov
inc
push
bound
test
cmp
adc
aam
lret
sub
out
sub
xorl
adcb
outsb
jnp
push
push
cli
sub
loope
es
dec
cmc
mov
insb
stos
shll
and
push
hlt
insl
aas
ficoml
call
sbb
xchg
fildl
inc
mov
iret
jnp
iret
fmull
mov
subb
jmp
inc
push
cmp
mov
xor
pop
jmp
push
movsb
dec
movsb
or
mov
and
cmp
enter
mov
jns
les
lahf
lods
xor
mov
stos
xchg
or
popf
inc
sti
stos
mov
stc
or
pushf
mov
xchg
popf
cmpsb
inc
ds
xchg
fnsave
jne
pop
lods
jmp
xchg
adc
inc
jne
call
nop
cmp
adc
dec
cmp
pusha
nop
pop
stos
mov
add
xchg
sbbl
inc
lcall
pop
movsl
loop
cs
pop
xchg
cmc
sahf
insb
cmp
arpl
gs
cmc
push
mov
xor
inc
sarb
sub
jns
mov
add
mov
test
inc
mov
inc
push
sbb
mov
jp
outsb
outsb
add
push
cld
mov
push
hlt
mov
js
test
out
adc
push
mov
inc
sub
jecxz
call
hlt
inc
jl
mov
cld
push
test
rcll
faddl
clc
imul
xor
out
je
or
sub
pushf
out
movsl
and
mov
dec
add
rorb
push
js
dec
cmp
arpl
mov
add
aam
and
and
out
or
inc
mov
adcl
hlt
push
incl
mov
mov
movsb
aam
inc
jbe
fs
fs
in
arpl
or
rcr
sub
adc
out
jo
lcall
shlb
xchg
shlb
dec
std
adc
fldl
jb
cmp
mov
pop
pusha
out
xchg
dec
cwtl
or
sbb
push
xlat
mov
mov
or
cli
cmp
and
push
fs
clc
fists
xor
sub
fdivs
lods
adc
cmp
cbtw
sbb
outsl
ss
outsb
shll
fsubrs
scas
jmp
mov
outsl
and
je
aad
pop
add
inc
xchg
xor
daa
lcall
stc
mov
outsl
lahf
xchg
rcl
leave
xchg
sahf
push
nop
popf
test
dec
xor
sbb
push
addb
inc
mov
mov
ss
cmp
mov
jmp
icebp
xchg
xor
xchg
and
jge
fstpt
mov
mov
mov
pusha
mov
cmpsb
scas
jmp
push
pusha
pop
lock
dec
lods
les
lret
push
add
pop
insb
rcll
push
push
add
xor
xchg
iret
fwait
or
add
inc
mov
pop
sbbl
aas
in
sub
or
or
dec
ficoms
mov
andl
daa
mov
pop
mov
add
push
cmc
or
ds
roll
aas
stos
rolb
sbb
jl
cmp
mov
sarb
xchg
inc
stos
pop
mov
lods
std
es
cmp
push
xor
lret
lock
out
lock
lods
xor
dec
movsb
mov
ljmp
lea
repnz
iret
stos
or
mov
popf
nop
mov
sti
sbb
out
shll
cmpsb
pop
lahf
cmc
xor
jecxz
sbb
pop
cmpsl
push
mov
stos
jo
jp
dec
aad
jge
or
clc
lcall
out
insb
icebp
insl
push
lret
sti
mov
inc
push
int3
ficomps
stc
dec
cmp
push
jmp
inc
cmpsl
insb
int
fsave
xchg
xchg
lock
or
push
sar
in
mov
repz
xchg
dec
iret
je
add
jp
pop
shll
lcall
daa
xor
lahf
and
pop
xor
xor
out
cmp
push
pop
sbb
inc
js
pushl
addr16
test
mov
movb
ss
ret
push
sahf
inc
int3
clc
jmp
push
nop
fdivl
inc
adc
or
push
xor
pushf
jecxz
push
pushf
call
daa
sbb
mov
ljmp
adc
ja
mov
or
adcl
arpl
xchg
jecxz
mov
test
gs
jge
xchg
outsl
sub
pop
cmpsl
cmp
cld
mov
and
addl
push
cld
ficoms
ret
sbb
pop
mov
andb
sub
fcomip
sub
notb
test
mov
shrl
jmp
cmc
nop
pop
cs
dec
rcl
pop
mov
mov
dec
cltd
xchg
mov
jl
jb
ret
xchg
pop
xchg
xchg
push
add
inc
jns
pop
scas
mov
inc
in
jns
pop
jnp
scas
cwtl
outsb
mov
mov
sbbb
sbb
adc
lea
dec
jl
cwtl
cmp
ja
sbb
mov
inc
add
cmp
push
jle
ljmp
add
ds
ja
mov
mov
dec
mov
jb
mov
or
daa
adc
lcall
arpl
jnp
paddw
popf
cmp
push
jecxz
arpl
mul
lods
adc
xchg
das
into
xor
add
inc
out
outsl
dec
pop
out
jb
push
jo
neg
jbe
inc
sub
sub
repnz
cmp
jp
jnp
mov
mov
sub
push
or
cmp
out
outsb
xchg
loope
mov
int3
ss
stc
or
jo
push
xor
sub
jbe
jo
push
dec
mov
xchg
mov
mov
or
sbb
dec
mov
ljmp
ss
dec
mov
sti
scas
mov
iret
and
popf
pop
lea
js
shlb
sbb
test
push
popf
shlb
icebp
or
lods
inc
mov
fmull
subb
mov
shrb
cld
pop
popa
mov
and
test
sbbb
or
xchg
add
push
mov
cwtl
inc
add
movsb
jp
jmp
into
jmp
mov
or
pop
insl
std
xor
dec
cmp
cwtl
mov
cmp
push
jg
fnsave
mov
sub
and
outsb
cmp
cmc
shl
movb
or
cmpsl
sub
add
push
push
mov
push
bound
xchg
test
mov
xor
je
in
inc
mov
pushf
test
mov
or
std
les
add
outsl
add
data16
outsl
dec
and
pop
std
jo
push
cs
xchg
lahf
mov
test
inc
lcall
add
movsl
daa
lahf
jg
ljmp
stc
xchg
mov
mov
mov
mov
push
ret
in
mov
dec
dec
fsubl
sub
xor
pop
rcrb
mov
pop
or
outsb
pop
lcall
fsts
lea
lea
and
mov
jo
mov
movsl
jge
aam
mov
es
popf
movsl
add
jbe
mov
pop
mov
in
into
fimuls
inc
mov
nop
test
mov
loopne
push
dec
xchg
sbb
imul
jl
int3
aad
and
lds
add
fmul
xchg
pop
xchg
data16
imul
sub
xlat
jge
imul
repz
mov
mov
es
mov
add
jg
lcall
xchg
loope
imul
out
pop
cmpsl
cmp
dec
sbb
int3
adc
or
ljmp
adcb
aas
negl
xor
sbb
mov
jl
bound
push
aaa
and
ds
shlb
inc
mov
jnp
sub
call
dec
mov
lcall
push
cmc
jp
mov
push
jae
mov
fstpl
test
in
cmpsl
and
or
mov
scas
out
inc
mov
adc
mov
popf
cli
mov
cmp
imul
sbb
mov
not
je
rolb
or
int3
xchg
jno
std
jo
repz
mov
adc
xchg
jp
bound
out
dec
push
xchg
fimull
push
shlb
into
repz
loope
inc
mov
push
js
jae
int
or
fs
mov
jo
xor
pop
popf
and
cmp
movsb
add
ss
or
stc
imulb
mov
in
xor
mov
mov
ja
mov
jmp
mov
push
xlat
enter
cmpsl
sbbl
cmp
ret
inc
mov
cltd
ret
aaa
lods
push
jb
fsubp
push
xchg
pusha
cmp
mov
test
jnp
fmuls
inc
fcom
lock
aaa
fistl
loopne
nop
int
mov
aaa
movsb
push
or
jl
jl
out
push
int3
xchg
pop
jne
setne
mov
pop
mov
je
insl
pushl
out
lret
push
push
mov
jecxz
jmp
shlb
es
cmp
push
lret
sbb
je
mov
pop
push
jo,pt
test
push
js
jne
cmp
ja
add
push
sbb
or
imul
jb
push
push
jns
jecxz
sbb
mov
enter
std
and
mov
pushl
cmpsl
jne
mov
dec
jne
fcomi
mov
adc
jo
movsl
jno
pop
mov
dec
aaa
data16
adc
add
add
es
std
push
lods
add
push
lea
pop
xchg
insl
push
daa
incl
push
push
les
test
mov
mov
and
push
xchg
movsl
jne
pop
and
fidivrs
xlat
or
inc
ror
pop
and
sbb
jp
adc
sub
jmp
clc
das
stos
xchg
jb
mov
repz
fistl
xorl
mov
sarl
adc
xor
xchg
jp
lods
add
mov
or
lea
sub
or
mov
jg
add
loope
mov
xchg
sti
mov
leave
enter
subl
jo
roll
sbb
cld
lret
out
cli
mov
xchg
mov
outsl
and
push
stos
icebp
jo
or
bound
jecxz
cltd
push
arpl
mov
fwait
icebp
push
sbb
pop
push
sub
fistl
sahf
or
mov
xlat
pop
mov
xchg
lods
ja
ja
mov
pop
out
scas
repnz
std
sub
test
div
mov
pop
and
mov
loop
ficoml
jecxz
or
cmp
insl
jecxz
rcrl
cmp
jbe
jb
xchg
and
jmp
add
jl
fs
out
and
mov
ret
out
pop
mov
divl
push
lods
sarb
bound
pop
pusha
es
pop
jmp
sbb
sti
cmpl
push
out
insb
mov
outsl
or
nop
xchg
stc
enter
fisttps
xchg
ljmp
cwtl
in
idivb
rorl
mov
dec
jnp
pushf
jecxz
inc
inc
js
sbb
sub
inc
push
adc
inc
jmp
mov
popf
sti
mov
out
jge
lods
imul
adc
in
into
lods
pop
cmc
sub
dec
mov
and
or
arpl
push
imul
fsts
jne
outsl
push
cmpsb
out
cmc
negb
popa
xchg
cmp
cmpsl
push
push
fiadds
das
aas
imul
dec
or
cltd
hlt
cmp
cmp
mov
mov
mov
sub
aas
push
mov
daa
fcoml
aam
push
je
jmp
push
push
dec
lahf
add
xor
mov
popf
mov
pushl
jg
dec
movsl
aam
cmpsl
and
inc
cltd
dec
sbbl
das
das
adc
std
and
jecxz
fldt
mov
fsub
mov
mov
les
in
rorl
or
and
nop
mov
out
ret
mov
mov
cmpl
cmp
pushf
adc
movsl
and
rcl
pop
inc
push
mov
or
xchg
ret
iret
ja
sbbb
push
and
xlat
loope
jg
add
flds
push
cmpsl
insl
pop
testl
or
and
lcall
pop
subb
cld
pop
pop
jns
push
icebp
mov
popf
mov
sbb
addl
dec
fdivrl
aaa
lods
lret
adc
stc
movl
scas
lret
xor
xchg
mov
dec
or
cmc
cltd
ja
mov
les
xor
std
cmp
pop
stc
dec
fs
dec
shrl
jl
jo
adc
out
and
leave
inc
xchg
or
adc
xor
xorl
jmp
mov
jne
fdivr
fidivrs
ljmp
mov
and
mov
pop
loop
xor
xchg
cmp
shlb
jne
ljmp
int
mov
shll
test
cmp
sbb
cmp
dec
and
ja
fnstcw
xor
jbe
testl
lcall
and
xor
lahf
push
je
cmp
jle
jle
jmp
cmc
fs
jle
jg
cmpsl
jmp
inc
inc
inc
sub
mov
out
push
inc
add
jp
imul
mov
and
mov
sbb
jp
sbb
fisubl
sub
cmp
jno
sbb
jecxz
sbb
hlt
jnp
inc
jle,pt
mov
in
cwtl
pusha
sbb
popl
movsb
and
mov
dec
fwait
subb
fdivr
mov
mov
nop
div
daa
sub
sti
mov
mov
pop
jns
cwtl
cmp
sub
inc
inc
jb
aas
fnsave
jge
jb
mov
ds
cmc
test
out
cld
push
mov
mov
insb
outsb
cmpsb
je
test
in
not
jl
xchg
mov
outsl
xor
mov
or
out
mov
lret
ret
clc
mov
cmc
sub
and
repnz
mov
or
aad
jae
or
rcr
pusha
in
clc
push
jp
mov
ds
xchg
nopl
inc
add
in
inc
fldl
imul
insb
sti
aaa
xor
push
stos
push
add
aas
sahf
add
fs
sbb
popa
pushf
loop
out
inc
cmc
mov
xor
loope
mov
cmc
mov
leave
stos
or
push
out
pop
mov
sub
mov
or
xchg
and
push
inc
dec
lods
add
pop
subl
ret
xor
add
repz
mov
jae
lods
cmpsl
test
mov
cmp
divl
lods
xchg
outsl
add
mov
loope
icebp
testb
inc
fwait
in
cld
and
cli
pop
pop
xchg
dec
jle
jne
test
fadd
add
repz
and
mov
sub
dec
sbb
or
ret
jl
out
inc
jne
pop
sti
adc
inc
insb
sub
pop
int
lcall
arpl
enter
xorl
sbb
int3
and
dec
mov
add
flds
out
mov
sbb
hlt
jp
pop
sub
pushf
xlat
xor
jl
dec
push
sbb
cmpsl
push
mov
and
adc
scas
lcall
rclb
lcall
xchg
arpl
cmp
pusha
in
sub
jns
and
jg
push
sub
jg
jl,pt
imul
cmc
cltd
xchg
pushl
push
aad
xchg
ret
fcomps
jb
cmp
loopne
or
xlat
cld
sbb
adc
adc
pop
adc
xlat
aas
and
dec
fcompl
out
or
mov
and
pop
stos
rol
and
jmp
dec
sbb
sbb
xchg
dec
mov
sti
sti
popa
or
and
mov
pop
jle
cwtl
aaa
ljmp
insl
pop
mov
dec
incl
sub
and
add
aad
jg
cmp
mov
test
aaa
outsb
ret
sbb
into
adc
jnp
loop
and
in
xorb
add
mov
push
mov
dec
and
outsl
int
xchg
ds
mov
sahf
lds
xchg
gs
shlb
je
rorb
adc
cmpsl
andb
cmp
rolb
hlt
and
test
outsb
jmp
jge
loopne
fsubl
sub
mov
pop
dec
cmp
mov
mov
mov
std
cmp
push
sar
dec
pop
adc
xchg
bound
sub
adc
pop
and
cli
in
mov
mov
adc
in
cmp
aas
mov
xor
fstp
rcrl
movsl
fadds
jge
movsb
pop
xchg
dec
and
pusha
mov
sub
cmpsb
std
inc
cmp
jo
jl
lods
movsl
icebp
movsb
ret
sub
adc
cmp
and
xchg
pop
add
cmp
mov
fwait
std
xlat
add
lds
cmp
lahf
or
test
rorl
clc
and
push
adc
lret
push
loop
mov
xchg
push
fsubrl
icebp
push
adc
stc
call
gs
push
nop
add
cmpsl
cmpsb
fistl
aas
adc
add
mov
sti
xor
xchg
xchg
push
adc
jns
insl
jecxz
mov
les
push
dec
xchg
movsl
or
lret
sti
cld
imul
xor
jnp
cmp
enter
dec
or
into
ja
call
mov
scas
adc
sbb
xor
jmp
adcb
and
fxch
lahf
xchg
fidivrl
mov
mul
lahf
and
pop
dec
sbb
je
jmp
test
push
cmp
loopne
jmp
stc
ljmp
or
push
outsl
stos
push
inc
mov
push
cwtl
lods
jb
xlat
cmp
es
push
mov
mull
cmp
sub
jo
push
inc
pop
cltd
loop
lcall
lds
das
push
mov
notb
xchg
stc
ret
mov
mov
adc
xchg
stc
xchg
mov
stos
push
cmpsb
mov
sub
xchg
sti
or
daa
xor
push
call
daa
mov
or
pop
mov
mov
stos
pop
dec
cs
mov
mov
push
adcl
lahf
insl
pop
ret
cmp
mov
xchg
push
lock
jb
add
cld
repnz
sbb
sub
inc
add
test
stos
stc
rol
mov
xor
mov
inc
or
outsb
xchg
pop
and
dec
xor
push
insl
jbe
pop
sub
ret
xor
sub
lcall
iret
sbb
hlt
movsb
adc
cmp
cli
jg
inc
mov
mov
int
dec
stos
sub
test
stc
fisubrs
jae
and
pop
mov
push
repz
fisttpl
lods
shl
outsl
andb
les
insb
or
mov
fistpll
inc
scas
lret
outsl
popf
mov
lret
fcomp
pusha
rcll
adc
in
out
xor
jg
sub
mov
ja
scas
mov
into
in
pop
mov
fxch
mov
flds
xchg
or
jno
pop
add
push
mov
mov
loope
jmp
dec
addr16
sub
movsb
push
xchg
sbb
mov
adc
testl
jne
adc
mov
pop
xor
jns
cwtl
jb
ds
add
sbb
mov
inc
xchg
xchg
cmpsb
jne
pop
rorb
mov
loopne
bound
sub
sub
testb
mov
lds
out
adc
pop
pop
shll
adc
jp
mov
and
sbb
sbb
and
or
int
pop
push
sti
xlat
ja
sti
mov
jo
mov
adc
cmpsl
jmp
mov
lods
insl
cmp
sub
ret
outsb
add
push
and
mov
inc
dec
inc
inc
jg
push
dec
repnz
dec
and
adc
imul
jmp
adc
jle
arpl
orb
xchg
dec
popa
sbbl
shlb
adc
pop
aaa
cs
mov
shrb
ror
sbb
jne
xchg
insl
jae
shlb
sbb
push
sbb
insl
mov
add
aas
test
mov
jo
jle
push
dec
dec
outsl
fcmovu
jge
jae
cli
outsb
push
jecxz
or
notb
xor
push
sbb
imul
fildl
jno
cmp
je
test
insb
mov
xchg
jae
test
pushf
or
push
fs
sub
and
pop
and
iret
fbld
sbbl
push
dec
loop
cmp
sbb
inc
ds
inc
in
adc
scas
fidivrl
inc
outsl
rolb
sub
pop
gs
imul
out
inc
movsb
clc
scas
sahf
mov
xor
and
ja
in
mov
xchg
fldl
or
jbe
mov
add
xchg
xor
mov
out
add
or
cwtl
mull
filds
mov
cmpsl
or
jo
in
cmp
sbb
xchg
cmp
scas
mov
daa
aam
mov
sar
pop
in
mov
icebp
inc
adc
add
xor
lods
inc
sub
cmp
jo
dec
adc
mov
jb
mov
mov
add
sar
and
test
int
add
inc
push
jp
fistl
das
jne
mov
mov
addr16
clc
out
jmp
lret
rcll
push
mov
mov
mov
fildll
xor
fldcw
sbb
fisubl
aam
jp
add
xor
ret
sbbl
insl
or
xchg
ret
sbb
mov
sbb
pop
insl
bound
mov
cltd
fcompl
jmp
fldt
mov
push
xor
add
or
lret
sbb
aaa
push
outsl
fcmovu
pop
adc
pop
add
leave
sbbb
js
push
jo
cmc
push
rcrl
push
insb
movsb
xchg
std
sub
movsb
in
fldl
push
daa
sbb
mov
out
fiadds
or
mov
xor
daa
jnp
pop
and
jno
fldenv
push
into
add
and
pushf
sbb
lret
or
aad
scas
fsub
out
and
in
repnz
inc
xchg
mov
lahf
das
in
mov
cli
and
movsl
mov
sti
sub
outsb
mov
xchg
sbb
ja
lock
pop
pop
mov
jo
js
fwait
push
jnp
out
adc
sub
push
sti
movsl
or
test
pusha
bound
adc
testb
daa
roll
nop
pop
cltd
stos
and
out
mov
adc
pop
std
or
push
cltd
mov
mov
jne
fisttpll
jg
les
xchg
mov
movsb
cmpsb
add
jb,pt
sub
pop
pop
mov
retw
pop
cs
insl
add
dec
jmp
mov
in
lahf
rcll
pop
sbb
in
push
jo
cmpsb
inc
lret
push
mov
adc
push
aad
xchg
sbb
sbb
cltd
cltd
lock
fnstenv
aam
hlt
fwait
aaa
daa
mov
mov
mov
dec
xlat
pusha
add
mov
pop
shlb
pop
mov
inc
ror
jo
mov
imul
pop
aad
mov
in
ljmp
xchg
or
dec
or
cwtl
lea
xchg
lds
inc
ret
inc
shll
add
adc
xchg
icebp
pop
outsb
repz
pop
call
loope
push
stc
std
inc
sbb
push
sub
inc
pop
xchg
into
push
jmp
stos
pop
mov
inc
les
cmp
ja
dec
mov
or
iret
ljmp
jbe
cmpsb
nop
xlat
imulb
negb
add
test
sbb
adc
and
pop
add
push
das
popa
pop
jecxz
fisttps
cmp
out
addr16
popf
push
sbb
mov
scas
pop
sub
jmp
lds
aad
jp
jae
jp
cmp
popa
jge
frstor
adc
dec
aad
push
stos
sbbb
cmp
ret
mov
sub
dec
test
nop
jns
shrb
sub
or
ret
outsb
inc
mov
ljmp
out
push
adcb
mov
pop
or
ss
jns
call
or
ljmp
cmp
dec
in
jmp
cmp
sahf
fstpt
add
pop
xchg
xchg
jg
and
mov
mov
cmp
and
pop
xchg
lds
sub
pop
sub
test
inc
iret
sbb
call
add
in
ja
fldenv
pop
push
and
adc
ret
xchg
mov
ljmp
stos
call
push
add
clc
cmp
imul
lea
push
mov
jnp
cmp
push
mov
fcoml
jl
xchg
mov
ret
int3
sbb
inc
std
or
shrb
fsubs
or
lock
jb
xor
out
shrl
xchg
repz
push
sarl
fwait
out
push
stos
rcl
ljmp
imul
movsb
pop
cmp
push
sbb
std
jmp
pop
dec
jle
clc
enter
jge
enter
cmpsb
add
mov
xor
test
dec
add
mov
pop
add
out
adc
js
jl
jns
idivb
stos
pop
inc
mov
adc
repz
aaa
jo
xchg
mov
subb
jle
push
jbe
jbe
mov
lds
lcall
fsubr
sub
scas
outsb
jmp
mov
dec
inc
stos
mov
adc
test
into
push
mov
mov
jecxz
cs
push
outsl
js
and
pop
inc
inc
adc
or
pop
scas
jo
stc
stos
mov
mov
sbb
or
cmpsb
nop
nop
ret
jo
or
sbb
cmpsb
imul
mov
dec
cmpsb
rcll
jb
jecxz
hlt
or
mov
add
iret
das
icebp
ss
enter
fldcw
repz
cmp
in
sub
mov
sub
pop
push
pop
scas
push
gs
and
ljmp
and
push
pop
loopne
int3
jno
jl
push
cmp
and
cmc
bound
sbb
loop
mov
lea
repz
or
push
inc
dec
push
in
std
push
xchg
xchg
dec
nop
sbb
inc
and
mov
scas
pop
je
sub
mov
mov
jmp
adc
inc
pop
push
imul
mov
out
mov
dec
and
daa
clc
fcoms
loopne
out
xor
pop
call
jecxz
mov
lea
push
or
movsb
mov
adc
in
xchg
arpl
repnz
movsl
cwtl
jecxz
test
push
push
mov
add
mov
in
jle
lods
sbb
push
push
jmp
jmp
lock
orl
dec
es
mov
mov
cvtps2pi
cmp
xorb
sti
jle
stos
in
loop
jno
fwait
stos
fisubrs
cmpsl
call
test
pop
lds
adc
mov
out
xor
sbb
scas
js
loope
dec
mov
subb
mov
mov
add
sbb
sarb
sub
cmpsb
add
mov
mov
jge
and
ja
lea
cmp
dec
pop
out
fcomi
jl
ret
jmp
cltd
icebp
int
inc
dec
push
aad
aam
mov
mov
popf
fxch
push
or
sub
mov
out
shlb
hlt
push
adc
imul
xor
rcr
mov
mov
in
pop
dec
inc
xchg
rorb
pop
loopne
cltd
add
jle
testb
cmc
jmp
out
into
push
out
push
mov
outsb
jb
or
jle
push
xchg
mov
sbb
sub
add
test
add
repnz
push
adc
inc
xchg
es
fucom
fs
cli
pop
xchg
jnp
mov
leave
loop
aas
or
aaa
sub
pop
jb
and
lods
call
or
arpl
jg
jmp
clc
popa
mov
ss
loopne
cltd
sar
jp
jl
inc
xchg
orl
fucomp
push
adc
data16
xchg
cmpsb
out
movzwl
repz
xor
lods
iret
aaa
fldl
or
testb
imul
or
xchg
out
mov
sbb
push
in
push
lea
inc
movsl
xor
xor
rcll
and
test
popf
rolb
jp
lea
jne
addr16
lock
popf
cmpsl
add
pop
or
and
jecxz
sub
cmpsb
mov
mov
inc
jno
push
xchg
ret
pop
inc
pop
jl
mull
mov
sbb
fstpt
or
jb
std
jle
or
imul
dec
sbb
fimull
cs
je
mov
lret
lods
mov
adc
mov
hlt
jmp
outsb
in
mov
arpl
sti
jnp
je
in
imul
jns
push
xchg
pop
dec
sbb
lcall
inc
xor
in
lret
out
xchg
pop
cmc
push
jne
clc
mov
mov
insb
mov
xchg
sarb
aam
mov
sbb
cmpsb
jbe
dec
sahf
mov
aas
iret
stos
jne
sti
dec
inc
in
cmp
xchg
mov
lret
cmovs
sub
dec
jnp
nop
mov
xchg
cmp
in
inc
repnz
pop
push
xor
pop
jbe
out
xchg
push
push
loop
dec
divb
mov
mov
lock
jl
int
pop
pop
int3
sbb
pop
add
rorb
lret
ficoml
cmp
mov
sahf
push
call
lock
and
sbb
pop
push
mov
stc
jb
push
cmp
push
pop
sbb
mov
push
sahf
sbb
movsb
insb
push
fwait
jl
cmp
jne
cmc
adc
xor
adc
cmp
das
out
xlat
mov
pushf
lcall
lret
jmp
push
xchg
insb
pop
not
and
lds
xor
aam
jmp
inc
inc
mov
pop
push
lahf
pop
pop
enter
jno
cs
sub
sub
pop
mov
and
xchg
pop
lods
xchg
popf
cmp
in
inc
ja
clc
push
mov
mov
xor
sbb
shll
test
repnz
movsb
scas
pop
test
inc
pop
popf
movsl
push
or
addb
flds
pop
add
xchg
out
mov
xchg
push
inc
pop
or
pop
add
mov
rcrb
gs
stos
xchg
pop
in
jl
iret
stc
imul
scas
bound
out
xchg
cmp
fnstenv
clc
shrb
jns
and
vmread
out
stc
inc
lcall
push
movsl
repz
pusha
in
xchg
call
adc
mov
call
scas
cmp
aam
in
and
fsts
jg
aaa
adc
movsl
jne
inc
test
dec
mov
in
sbb
jbe
test
aas
in
scas
lahf
pop
push
add
push
sbb
aaa
cmp
mov
popa
dec
in
sbb
xchg
mov
xor
lods
test
adc
icebp
fldenv
mov
hlt
mov
jnp
dec
dec
pop
and
sbb
mov
jecxz
sub
push
sub
cmp
jp
scas
adc
xor
lahf
arpl
xchg
pushf
ret
in
sbb
aaa
mov
imul
xchg
jo
lods
mov
or
addr16
jp
loope
push
mov
dec
push
mov
in
outsb
es
popa
idivb
scas
cmp
sbb
pusha
in
pop
sbbl
xchg
mov
rcrb
ja
dec
stc
hlt
movsl
and
sub
sbb
adc
xor
xchg
jno
mov
js
nop
jle
ss
dec
dec
lret
dec
je
cmp
sbb
and
scas
dec
aam
xlat
pop
insb
mov
hlt
jns
stos
pop
add
inc
out
clc
addr16
imul
pushf
and
scas
pop
sub
sbb
leave
xor
nop
decl
xchg
or
pop
mov
xor
pop
repz
lds
movsb
mov
sti
stc
push
pop
adcb
decl
sub
mov
or
int
mov
ss
jg
add
adc
jnp
pushf
lret
sbb
push
testb
or
push
adc
jno
jecxz
sahf
and
setne
push
inc
insl
outsb
dec
dec
imul
adc
sub
std
ficomps
lahf
adc
and
sbb
adc
sarb
stos
in
int3
push
cmp
lret
inc
mov
loopne
mov
je
shll
mov
mov
andb
and
dec
xchg
test
lock
mov
and
movsb
jg
push
fsubl
gs
jbe
stos
mov
lcall
ljmp
fcoml
mov
xchg
mov
xor
lods
xor
push
cs
adc
push
mov
xchg
adc
mov
or
mov
push
push
pop
arpl
js
or
mov
test
jne
push
movsl
iret
or
and
cs
out
rorb
mov
adc
jle
push
push
pop
cmpsl
cmpsb
pop
jo
fdivrl
bound
xchg
es
fsub
and
rorb
scas
xor
dec
cmpsb
ficoml
jne
push
xchg
add
pushf
into
inc
sbbl
xchg
or
fwait
nop
js
mov
insl
rcrl
sub
xchg
movsl
movsl
ja
mov
ljmp
push
cli
mul
imul
jbe
xchg
rcll
fcompl
sti
decb
or
lods
loopne
cmp
and
or
ljmp
add
dec
lea
add
ja
movsl
neg
fs
xor
push
outsb
cli
xchg
aaa
pushf
jae
stc
lret
lock
xorb
and
pop
jl
rcrb
jle
inc
xor
cmp
addr16
adc
inc
cli
popf
and
in
dec
add
xor
sti
enter
sub
fimuls
and
lret
mov
push
iret
loope
ret
fbld
out
push
xchg
sahf
xchg
stos
pop
fsubrl
mov
sub
push
xchg
cwtl
cmp
dec
loope
or
js
mov
and
dec
and
lret
and
daa
fidivrl
clc
sbb
sub
fmull
adc
popa
mov
mov
cltd
cli
bound
fwait
inc
push
xor
sbb
mov
aaa
enter
jl
aaa
inc
or
fsubrl
sbb
stc
xchg
std
mov
je
addr16
insb
push
xchg
mov
out
idivb
inc
aad
push
lret
arpl
jmp
jae
mov
mov
xchg
popa
xor
jg
ljmp
aam
fists
mov
dec
xchg
sbb
xorl
jb
xchg
sub
jne
addr16
fstp
je
add
xlat
xor
xlat
sahf
adc
inc
clc
xchg
movsb
inc
mov
mov
push
pop
mov
fnstsw
sbb
pop
mov
jecxz
fs
inc
jb
dec
std
out
pusha
in
aas
sub
fisubl
icebp
xor
mov
das
pop
pop
mov
inc
mov
adc
mov
xchg
rclb
adc
adc
shlb
mov
cmp
hlt
adc
popf
add
insl
mov
iret
sbb
fadds
ret
daa
lahf
std
pop
shl
xor
daa
fisttps
xor
jecxz
mov
repnz
xchg
fstps
aam
ljmp
arpl
jp
leave
sbb
aam
fs
pop
sbb
aam
pop
rorl
leave
sub
add
add
sysret
sahf
fisttps
push
popf
xor
push
jb
pushf
mov
jo
das
jnp
cs
js
mov
in
jecxz
push
jne
jne
pop
scas
mov
push
pop
aas
popa
in
adc
loopne
fidivs
cmc
cmp
imul
push
test
hlt
mov
jmp
loopne
or
push
and
cmp
lea
push
das
xor
in
test
cmp
pop
mov
imul
pop
ljmp
cmc
jno
aam
out
roll
add
xchg
shl
inc
iret
pop
adc
mov
test
lret
dec
or
out
js
imul
in
adc
aas
mov
adc
ljmp
in
lods
lahf
jo,pt
jle
outsb
or
es
xchg
jo
dec
cmp
sbb
push
test
dec
push
xor
or
push
iret
cmpsl
and
jl
mov
push
mov
and
pop
lds
xchg
lahf
jp
sbb
and
repz
adc
rorl
shrb
shll
mov
stc
cmpsb
inc
es
loop
outsb
lods
adc
pop
jmp
ja
gs
mov
mov
mov
rcrl
loopne
in
jno
cmc
clc
sub
sbb
es
fisttpl
lods
idivb
sub
xchg
mov
sub
jl
jno
aad
push
ret
adc
repz
inc
mov
pop
pop
inc
dec
scas
in
icebp
loopne
insl
movsl
mov
test
xchg
lahf
aad
daa
arpl
popa
cld
adc
out
inc
in
ja
mov
adc
push
xchg
sub
aad
jne
fmulp
out
jle
pop
xor
sub
lea
inc
xor
outsb
mov
cmp
in
lret
sbb
mov
inc
xor
fstl
mov
pushf
imul
mov
inc
shlb
les
mov
mov
sub
sub
sub
adc
pop
pop
adc
sub
and
mov
pop
mov
sub
pop
or
xchg
sbb
jae
out
sbb
fnstcw
or
dec
jne
lock
fists
mov
jmp
out
mov
cmp
dec
lret
andl
and
fimuls
dec
test
xor
lds
xchg
add
mov
repz
cmp
jecxz
stos
lahf
shlb
mov
stc
xchg
mov
mov
les
ror
imul
inc
lods
les
into
test
xchg
dec
sarb
fucomp
xor
jmp
xor
sub
jne
fisubrs
in
iret
push
jae
popa
test
and
addb
mov
ja
sti
pusha
dec
mov
xchg
jmp
cs
jne,pt
outsb
cmc
mov
mov
mov
mov
push
leave
imul
lcall
mov
addr16
in
lods
jo
lods
sti
push
pushf
aas
arpl
push
out
cmpsl
cmp
mov
dec
adc
cmp
pop
dec
mov
inc
into
shll
mov
loope
fmul
orl
lret
dec
ss
dec
jecxz
xchg
scas
out
cmpl
jno
xlat
mov
pusha
enter
vaddps
mov
cmpsb
mov
pop
mov
push
int
movsl
sub
pushf
dec
movhlps
sbb
cli
scas
sbb
push
fmull
filds
incl
test
sti
jnp
mov
jae
inc
sub
in
scas
push
arpl
xchg
mov
jp
cmp
arpl
sti
xchg
push
push
lahf
sar
push
add
cmpb
pop
ljmp
jecxz
call
loopne
cltd
call
ja
lea
xor
in
shll
popa
and
sbb
cld
out
int
pusha
icebp
jge
movsb
aas
fsub
jb
xchg
jmp
inc
es
pop
sub
in
int
loope
jmp
pop
aam
inc
testb
in
push
pop
xchg
lods
mov
cmp
dec
int
xchg
pop
sti
aam
mov
cmp
push
mov
in
sbb
add
or
add
aaa
orb
repz
or
jg
fstl
sub
or
mov
ss
call
dec
in
mov
dec
and
pop
enter
adc
adc
subl
mov
aam
or
sbb
je
loopne
pop
mov
xchg
jnp
loope
shll
and
jl
and
dec
sbb
shll
mov
xor
push
cmp
sbb
mov
hlt
sbb
xchg
cmp
push
testl
flds
inc
fidivrl
test
xchg
push
jmp
jbe
in
addr16
popa
std
adc
popf
xchg
and
push
xor
adc
cld
cmp
push
orl
adc
insl
je
and
cwtl
and
insl
pop
nop
cmp
ja
push
stos
out
push
jae
or
sub
xor
test
xchg
out
dec
mov
lcall
inc
jp
adc
cmpsb
add
jp
cld
adc
lea
xor
inc
cmp
sbb
lds
and
push
xor
add
ret
xlat
sbb
es
test
or
jmp
int
in
fsts
push
decb
cmp
lcall
sub
fs
enter
leave
xchg
ret
movsl
xchg
in
les
mov
push
loopne
cmp
push
leave
dec
rcrl
test
cwtl
popa
xor
out
and
jp
push
scas
mov
sti
insl
dec
xchg
sarb
pop
inc
mov
repnz
jge
push
int
add
xor
std
sbb
or
adc
sbb
scas
ret
sub
lock
test
pop
adc
jno
xchg
lods
push
xchg
lret
out
pop
xchg
sbb
ret
push
lock
aad
push
mov
lahf
nop
inc
push
mov
lods
lahf
sub
cmp
sub
ret
dec
xorb
pop
xchg
bound
iret
jp
sub
std
mov
pop
inc
loop
push
push
lods
cmp
sbb
rclb
xchg
call
popa
mov
mov
and
pop
mov
mov
and
cwtl
xchg
test
aam
sbb
pop
daa
cld
daa
sahf
stc
shlb
enter
push
dec
int3
mov
mov
cmp
ss
pop
int3
dec
xor
shl
cmp
bound
or
mov
ljmp
xchg
adc
xchg
jns
inc
dec
jnp
sahf
add
sbb
call
push
insl
lcall
pop
sbb
std
outsb
js
push
push
inc
scas
sbb
pusha
sub
jle
nop
pusha
mov
mov
lods
push
fists
push
sbb
arpl
movsb
movsl
test
sbb
mov
loop
mov
das
xor
test
xor
aad
push
sub
pop
pushf
fs
out
outsl
js
stos
adc
pop
mov
cmpsl
jno
inc
mov
lahf
insb
and
out
sbb
mov
sub
cmpsl
mulb
dec
xchg
lahf
mov
aad
inc
shlb
mov
jg
pusha
adc
push
xor
mov
mov
add
orl
cmp
xchg
sub
cmpsb
jb
cld
sub
push
testb
pop
leave
setne
cmpl
jnp
mov
in
and
adc
and
lea
cmp
mov
clc
pop
and
stos
cli
fldt
les
mov
push
sub
mov
add
inc
mov
mov
in
mov
lret
add
inc
icebp
sub
out
in
loope
push
cltd
scas
cmp
mov
push
in
sub
sbb
addr16
adc
cmpsl
hlt
mov
movsl
mov
sbb
cmpsl
jbe
imul
loopne
mov
nop
mov
mov
xor
fstpt
insb
testb
out
mov
adc
das
mov
fisttps
dec
addr16
mov
movsl
cmp
adc
clc
push
sbb
adc
fists
lods
pop
and
pop
sbb
xchg
sub
fldcw
dec
push
adc
jnp
jns
movsl
roll
mov
sti
adc
not
test
mov
adc
lds
loopne
cld
cmpsl
jno
in
cmp
sbb
je
push
add
test
sub
pop
rcr
mov
nop
mov
lds
fisubl
repnz
push
xchg
jmp
add
push
add
cli
pop
lds
out
int3
sbb
xchg
push
add
add
stos
mov
jns
movsb
dec
or
movsb
insl
xor
xchg
pushf
and
push
sbb
dec
std
mov
enter
lea
lret
test
out
call
push
enter
outsb
gs
xchg
adc
jmp
lret
and
jle
pop
outsl
das
inc
jmp
inc
inc
dec
fists
mov
gs
inc
adc
add
add
xor
test
push
or
or
mov
addb
int3
pop
popa
dec
iret
subb
call
pop
mov
fcoms
pushf
ja
inc
or
cld
je
loopne
pop
cmp
sbb
popa
test
pop
icebp
xchg
xchg
cmpsb
adc
test
call
mov
sbb
js
and
test
pop
loope
cmp
or
jno
jmp
jg
int
std
adc
insl
push
int
ss
sub
inc
push
mov
xor
stos
xchg
scas
pushf
fistl
mov
fsts
cmp
cmp
adc
fwait
cli
fmulp
adc
test
mov
pop
mov
in
addb
xor
inc
jp
pop
xor
dec
push
push
xor
fstpl
sbbl
ss
ret
inc
sbb
loopne
xchg
sbb
shlb
push
xor
mov
scas
and
scas
xchg
jno
test
dec
pop
repz
push
sub
and
push
sub
scas
xlat
lret
sbb
popf
jno
scas
fsubs
repz
outsl
jp
lods
fwait
xor
filds
cmpsl
mov
aaa
fmull
mov
sub
mov
mov
or
sbb
stos
lcall
mov
aaa
fcmovnu
xchg
xchg
inc
lods
pop
xorl
incl
add
lods
lods
hlt
outsl
shrb
jecxz
mov
gs
jne,pn
jg
jae
sbb
out
in
idiv
mov
adc
xor
push
ret
ret
rcr
jo
sbbb
jl
cmp
cmpsb
sub
insb
push
jb
sbb
and
hlt
cmp
jge
clc
ja
ret
test
dec
lcall
outsl
subl
iret
mov
les
gs
add
sub
fcoms
mov
push
dec
jo
add
cltd
loop
test
sub
mov
insl
in
mov
push
aam
divb
jmp
fisttpl
add
ss
movsb
pop
sbb
jge
sbb
jns
sbb
xchg
jmp
std
popa
cmp
and
in
pop
shr
pop
mov
rol
in
and
lea
jmp
or
out
cmpsl
daa
xchg
lret
stos
lock
add
clc
das
in
sbb
mov
xor
shlb
push
mov
ret
sbb
mov
clc
shl
xlat
add
fdiv
and
or
pop
inc
push
and
or
push
inc
pop
and
mov
popa
iret
sub
mov
hlt
hlt
jb
out
jge
mov
mov
idivb
sahf
adc
daa
ss
push
fildl
pop
sbb
scas
mov
pusha
cwtl
push
jne
or
mov
mov
arpl
fnsave
dec
sub
cmp
jo
pop
outsl
pusha
cmp
mov
sub
jno
movsb
dec
mov
add
mov
mov
xchg
inc
jmp
xchg
pop
mov
pop
push
pop
mov
in
cmp
ficompl
pop
je
pop
stos
daa
rorl
jmp
lock
std
ret
jo
ja
stc
adc
jae
xchg
or
mov
cltd
int3
loopne
in
lods
push
nop
xorl
lods
sbb
sub
test
mov
pop
lods
dec
mov
cmp
sbb
xlat
scas
mov
and
fcoms
cmp
icebp
loop
mov
dec
loopnew
mov
scas
clc
and
mov
aam
xorb
lret
dec
les
push
cmp
js
push
mov
outsl
out
ljmp
aam
inc
mov
adc
inc
cmp
enter
je
negl
dec
scas
lods
xor
mov
pusha
inc
mov
push
cli
mov
inc
pop
lock
push
xor
in
aam
xchg
cmp
push
lea
and
rcrb
outsl
jae
pop
inc
out
inc
ja
adc
cmc
mov
mov
jnp
out
add
mov
xchg
fwait
sub
idivl
push
loopne
inc
leave
andb
pop
xchg
jbe
jbe
in
sub
out
repnz
mov
cli
cwtl
jbe
ficoml
shlb
inc
repz
cmp
mov
fcomi
out
add
lahf
lods
lods
call
cmp
or
jle
pop
sbb
andl
fsubr
nop
insl
pop
mov
ficoms
inc
leave
pop
and
push
out
insb
push
cltd
dec
push
mov
loope
out
fstl
decb
or
scas
or
scas
pop
jne
mov
shll
jp
fucomi
bndldx
mov
cmp
pop
push
movsl
mov
sbb
out
sub
push
pop
inc
adc
test
imul
add
xor
lret
mov
jnp
sbb
adc
dec
roll
push
sbb
lods
fisubrl
sub
scas
and
fisttps
fistpll
mov
movsb
repz
popf
push
lret
movsb
in
and
add
adc
out
movsl
addb
int
gs
or
movl
in
subl
mov
xor
mov
and
mov
fwait
out
dec
sbb
and
fwait
add
imul
aaa
jne
inc
gs
or
mov
or
cmp
cmc
mov
lds
cmpsb
scas
ret
ljmp
push
mov
push
pop
ret
jae
test
adc
xchg
push
push
mov
call
or
jge
push
adc
push
jnp
mov
sti
sbb
push
jbe
repz
add
cmpl
jb
cmp
push
mov
aad
sbb
pop
mov
testb
or
xchg
hlt
xor
rclb
fnstsw
imulb
push
lods
mov
std
mov
dec
and
inc
adc
jg
std
lods
push
out
test
pop
psubusw
inc
sub
ret
sbb
enter
test
xor
out
inc
inc
mov
add
lahf
mov
lret
inc
xchg
pop
xchg
inc
int3
ja
sub
jno
mov
cld
stc
mov
mov
aas
xchg
cmp
repnz
leave
call
insb
or
mov
repnz
pop
popa
sbbb
sarb
xchg
stos
mov
and
pushf
push
jg
push
xor
shlb
in
outsb
fmuls
pop
inc
outsl
repnz
shrl
sarb
mov
fsubrl
add
jns
pop
stc
shll
out
iret
sbbl
out
dec
das
ja
aad
or
jo
xor
out
mov
push
pop
and
inc
fs
fdivs
push
or
push
outsl
jl
int
loop
jns
cwtl
ss
pop
lock
inc
into
or
cmpsl
js
iret
push
jnp
mov
dec
nop
add
addl
lea
ret
mov
dec
dec
fisttpl
out
inc
inc
push
mov
pop
fisttpll
lods
lock
sbb
or
and
leave
test
add
mov
sub
push
jno
cmp
std
and
inc
jecxz
lods
cmp
pop
clc
ljmp
mov
orb
fwait
std
mov
pop
sahf
pushf
mov
xchg
in
inc
clc
add
push
mov
jae
cmp
fsubr
insb
push
pushf
cmp
jbe
inc
jnp
ret
xchg
mov
or
pop
loop
jne
pop
insb
jnp
js
test
cmpsl
arpl
imul
sub
fbld
popf
mov
lock
mov
push
mov
mov
test
jp
xor
xor
cmpsb
and
xor
fidivrs
std
fists
jo
mov
cld
inc
jns
dec
inc
addr16
bound
mov
cmp
adc
gs
out
mov
lock
push
xchg
lahf
pop
sub
js
xor
gs
lock
loop
adc
idivl
jb
jno
test
insb
jb
sbb
dec
or
divb
in
les
push
add
lock
jb
add
sbb
push
lods
push
into
inc
pop
and
loop
xchg
negl
addr16
cmp
mov
xchg
std
pop
imul
test
push
mov
mov
sbb
pop
push
mov
cs
in
xchg
push
movsl
cmp
inc
sbb
fildll
mov
mov
jle
mov
xor
ret
and
movsl
sarl
mov
fdivrs
fs
rorb
aaa
sti
sahf
cmp
jge
out
and
xchg
cli
test
xchg
sarl
jg
jbe
ds
scas
jnp
decb
insl
call
gs
jnp
out
xor
jb
out
mov
xlat
dec
pop
mov
pop
or
in
loope
jmp
mov
icebp
jecxz
ss
pop
dec
inc
lock
cmc
pop
sbb
mov
in
dec
cmp
popa
pop
inc
stos
jge
push
xchg
out
es
push
pushf
or
jae
les
pop
lods
add
add
mov
jg
ret
test
xor
iret
fs
out
cmp
sbb
xor
lods
ljmp
int3
add
mov
add
jg
jmp
lcall
sub
cmpsl
xor
sub
lods
dec
clc
adc
cmc
das
xchg
int
mov
ret
je
scas
stc
lret
jo
and
cld
rol
pop
jbe
cmc
andb
loop
sar
int
adcb
rorl
je
mov
jae
in
pushf
test
cmc
cmp
inc
push
mov
mov
jnp
pusha
sub
jge
stc
jno
add
bound
loop
add
add
pop
sti
ja
fwait
or
fstpl
lahf
push
xchg
inc
inc
sbb
xchg
incb
fiaddl
or
incb
pop
insb
nop
pushf
ljmp
xchg
fldt
ret
jbe
stos
addr16
andb
jge
dec
mov
mov
sub
lcall
arpl
inc
jmp
in
cli
jle
jnp
test
xchg
mov
pop
fistl
inc
stos
adc
adc
fs
or
push
jmp
scas
add
xchg
jecxz
mov
xchg
loope
xor
sub
cmpl
mov
leave
fstp
xor
mov
scas
cmc
icebp
and
aaa
jns
push
adc
nop
in
push
rclb
fnstsw
pop
std
lret
dec
push
inc
pop
orl
cmpsl
adc
aaa
cltd
xchg
sub
ret
pop
jge
cmp
scas
shl
je
mov
jp
test
data16
mov
push
cld
mov
sbb
stos
mov
mov
xor
bound
out
xchg
fsincos
mov
cmc
scas
inc
stos
loop
leave
mov
mov
xorl
movsb
stos
cltd
dec
mov
push
jge
cs
scas
lock
sti
dec
sub
sbb
mov
pushf
mov
les
or
icebp
sub
sub
jp
jmp
outsb
xchg
xor
loop
aas
addb
gs
mov
pop
dec
mov
jmp
and
notb
jle
and
mov
or
mov
nop
mov
sti
xchg
test
cwtl
lret
and
mov
icebp
outsl
sbb
xor
xor
and
dec
test
mov
push
stos
cmp
xchg
ljmp
and
sub
push
into
fimull
add
sbb
aaa
shl
and
in
and
enter
addb
lret
mov
pusha
push
mov
mov
sti
aam
xchg
ret
cli
outsl
rclb
addr16
jbe
xchg
or
adc
and
add
push
test
inc
pop
add
test
out
or
cmp
xchg
mov
cli
sahf
and
ret
jno
push
scas
lcall
loope
jle
jns
inc
js
imul
dec
push
lods
xor
repnz
and
inc
mov
mov
dec
test
jecxz
cmp
lcall
sahf
fbstp
imul
mov
sahf
fstl
xor
inc
xchg
push
push
inc
cltd
xor
fwait
cmp
inc
pop
pop
shrb
imul
jl
mov
fstpt
lods
or
mov
aad
insl
hlt
pushf
fistpll
and
push
rcrl
pop
sbbl
inc
mov
sub
push
or
mov
mov
cld
bnd
cs
mov
mov
dec
iret
sub
mov
xor
cld
test
das
pop
xchg
cltd
adc
sub
adc
test
into
mov
xchg
dec
mov
jo
mulb
adc
and
xchg
jne
inc
mov
rorl
into
mov
decl
push
mov
jbe
cmp
lret
fdivp
lahf
mov
cmp
arpl
inc
lahf
ss
lcall
inc
mov
add
dec
xor
cltd
sbb
xor
gs
adc
decl
jo
xchg
aaa
mov
push
fbld
jb
fbld
pop
aam
out
mov
mov
lea
out
addr16
dec
push
fmuls
xor
repz
sub
stc
cwtl
jmp
lahf
pop
mov
jb
xchg
pop
dec
xchg
adc
xor
into
imul
and
aam
stos
int3
mov
imul
outsl
push
out
mov
add
pop
adc
dec
push
mov
fcmovnu
testb
jmp
cmpsb
cmpsb
sub
add
imul
adc
sti
imulb
insb
dec
inc
xor
jne
jnp
adc
cmovl
pop
mov
push
jp
popf
sbb
daa
sbb
aam
dec
push
cwtl
mov
and
cmpsb
sbb
pusha
movd
es
add
shll
dec
icebp
not
mov
outsl
into
cmc
addr16
int
sub
sbb
add
mov
stos
cmp
xor
push
and
lret
leave
out
sub
cmp
xor
push
scas
test
into
jne
rcll
sbb
ljmp
cmc
popl
insb
push
inc
adcb
outsb
push
cltd
push
dec
dec
es
testb
push
test
jne
sti
outsl
adc
das
int3
test
mov
scas
cmpsl
jmp
fbld
jp
mov
xor
inc
push
pop
add
aaa
sbb
sbb
bound
mov
mov
stos
inc
and
cmpsb
sbb
xchg
cld
sarl
push
stc
js
test
mov
mov
push
inc
daa
ss
test
ror
out
stc
sub
dec
loop
sbb
test
out
jge
cwtl
xor
add
fucomp
iret
sahf
push
cmp
ret
pushl
pop
push
orl
push
mov
lret
xchg
xchg
sbb
sbb
cmp
mov
jns
jno
das
aam
mov
mov
add
and
mov
int3
and
stos
dec
loope
push
fistpll
stc
in
pop
clc
daa
sub
enter
jp
lcall
lcall
jae
push
adc
call
mov
sub
aaa
psubd
pop
cmp
sbb
mov
xchg
scas
mov
mov
inc
cmp
cwtl
fnstenv
sahf
push
divb
jle
dec
es
lahf
xor
movsl
testl
pop
std
dec
dec
xor
push
jp
lcall
pushaw
dec
in
push
jle
jne
add
jns
sti
and
roll
imul
push
ficoml
xlat
std
inc
mov
int3
leave
mov
in
out
clc
insl
dec
push
pusha
je
jmp
sub
icebp
mov
cli
inc
imul
dec
dec
mov
mov
iret
fs
dec
lret
cli
jns
outsl
inc
mov
in
sbb
ss
xchg
je
hlt
mov
ficoml
popf
popa
ja
jp
flds
shlb
addb
or
mov
jae
mov
lods
cmpsl
add
std
push
popf
fcoms
mov
mov
add
data16
out
or
clc
subps
inc
xchg
inc
adc
lcall
shrb
xchg
cld
or
in
fsubl
clc
add
add
mov
lods
xchg
lock
inc
mov
cmp
pop
cmc
jecxz
shr
test
fsubr
mov
mov
sub
inc
mov
inc
loopne
cmp
mov
xor
push
mov
inc
sarl
mov
mov
pop
push
or
lahf
rclb
add
xor
jne
jge
dec
or
xor
cmp
cmpsb
cmp
pop
inc
xor
push
adc
xchg
addr16
imul
cmp
je
jb
dec
sbb
and
test
mov
adc
cmp
cltd
lods
push
scas
in
sub
ret
jns
in
jg
stos
push
mov
mov
ret
mov
push
add
das
pop
loope
enter
inc
into
push
mov
out
or
rcr
mov
dec
cmpsl
inc
jmp
xchg
xlat
es
ret
cmp
loopne
addr16
dec
xchg
mov
mov
xchg
and
xchg
inc
ror
mov
insb
inc
push
arpl
dec
sti
mov
xor
cli
xchg
dec
in
out
sub
xchg
pop
xor
divb
stos
pop
mov
adc
inc
mov
adc
std
sub
mov
aaa
fbstp
outsl
inc
adc
xlat
je
cmp
push
and
xor
cmc
xchg
push
xor
int3
std
cld
out
adc
aad
push
xor
arpl
cmp
out
pushf
into
xchg
clc
data16
push
mov
inc
adc
gs
sub
jbe
stos
stos
mov
or
sarl
or
out
pop
inc
mov
xchg
xchg
or
in
sub
adc
cmp
in
push
pop
idivl
or
sahf
mov
imul
xchg
repnz
incl
jp
dec
fidivrs
mov
and
clc
or
xor
out
cltd
in
mov
pop
push
ret
leave
lods
ja
pop
xchg
out
sahf
xchg
adc
shrl
aaa
xlat
filds
jp
push
enter
faddl
fwait
mov
sub
and
adc
mov
or
je
std
jmp
mov
and
test
sub
orl
mov
pop
ret
adc
cld
push
push
sarb
inc
divb
je
push
sub
popf
pop
mov
je
jl
movsl
xchg
add
inc
xor
mov
jae
mov
mov
cmpsb
cli
mov
pop
push
mov
lcall
jae
fsubrp
add
or
add
lcall
sahf
add
adc
adc
mov
data16
aad
and
daa
xchg
jns
cmpsl
ss
lcall
mov
sbb
test
ss
jnp
pop
jge
lahf
popa
lcall
inc
push
aas
ljmp
or
mov
popa
pop
adc
stos
xchg
sbb
jbe
and
mov
movups
inc
sbb
xchg
loope
xchg
in
jbe
and
push
mov
push
mov
bound
xor
mov
out
jg
sub
cmpsl
stos
mov
outsb
push
scas
stc
add
pop
arpl
sbb
adc
sbb
outsb
fildll
add
push
js,pt
je
jbe
push
std
arpl
lcall
xchg
sub
inc
cltd
sbb
sbb
push
dec
arpl
imul
and
inc
lcall
int3
popf
cmc
mov
out
enter
or
cmp
adc
gs
xchg
test
push
lods
cmp
decl
sub
jg
popa
push
add
js
stc
mov
mov
lock
cwtl
dec
insl
cmp
test
hlt
adc
inc
dec
scas
push
and
add
mov
fnstcw
iret
and
ljmp
dec
or
or
lcall
xlat
dec
cmp
test
jbe
mov
cli
adc
dec
inc
push
fmuls
dec
jne
loopne
mov
or
popf
adc
dec
xchg
sub
cmp
lock
jo
shrl
int3
lods
pusha
outsb
test
sbb
call
lret
gs
lret
adc
xor
fiaddl
flds
int
cmp
rclw
push
sbbb
sarb
mov
sbbb
in
mov
sbb
dec
push
stos
cmc
mov
gs
and
jge
jmp
call
adc
loop
jmp
das
pop
fbld
jno
cwtl
lcall
cwtl
ret
mov
insb
add
fnstsw
and
or
dec
nop
repz
je
jb
xlat
mov
int3
fdivl
aas
adc
push
inc
and
or
rcrb
icebp
xchg
xor
aas
or
push
fisttpl
fimull
ds
inc
jg
xchg
mov
es
xchg
sbb
inc
mov
dec
mov
sbbl
mov
gs
lcall
inc
outsl
mov
ret
pop
cli
pusha
mov
jno
cmp
push
push
pop
movsl
xlat
mov
insb
mov
sbb
das
daa
add
push
leave
sub
mov
pop
int
inc
shll
mov
xchg
sti
rcl
dec
pop
xchg
inc
xor
ret
sahf
push
mov
jb
and
inc
lock
and
cltd
loope
add
xor
jp
cmp
adc
sub
lea
push
sti
rcl
ljmp
sahf
xor
adc
cmp
push
jp
icebp
jo
fs
cmpsl
xchg
adc
sub
push
jle
icebp
inc
mov
fisttpll
cmp
ficoms
dec
dec
cmp
and
xor
fmull
test
jae
movsl
movsl
inc
ss
push
arpl
aad
ds
jle
ret
fstps
enter
pop
je
outsb
dec
repz
ret
push
xor
xlat
out
mov
stos
hlt
out
sub
xchg
mov
jge
outsb
inc
xchg
subb
stc
dec
icebp
pop
sub
dec
sub
xchg
add
sbb
cmp
mov
mov
xchg
or
das
imul
jg
mov
shll
mov
insl
xchg
gs
in
ja
cmp
pop
push
mov
mov
lock
aam
xorb
adc
mov
mov
and
fisubrs
sbb
fsubrs
push
xchg
jl
cli
inc
shlb
inc
aaa
add
jbe
mov
das
push
adc
adcl
rcrl
imul
andl
xchg
mov
mov
fisubs
shll
push
sbb
cwtl
mov
daa
or
dec
or
bound
lods
fldl
std
sub
loope
int3
sbb
in
mul
adc
sbb
loop
ret
jg
call
dec
cmp
shlb
mov
sbb
cmpsb
imul
in
mov
pop
add
arpl
rcrl
jge
and
movsb
scas
mov
add
out
sub
rcrl
mov
push
popa
xchg
sbb
push
cmp
or
pop
or
loopne
and
pop
xor
push
adc
mov
xor
inc
cmp
movsb
mov
xchg
hlt
movsl
push
dec
into
popa
or
imul
xchg
pushf
cmp
scas
ja
icebp
xor
fisttpll
clc
mov
pop
out
out
cmp
xor
sbb
add
sbb
stos
and
sbb
mov
push
sbb
lcall
out
xlat
ds
sarl
pop
daa
and
aad
xlat
fsubrl
or
aaa
insb
push
lods
sub
aad
mov
dec
fldenv
mov
xor
xor
mov
mov
mov
cwtl
in
pop
repz
cmpsl
or
jns
jo
cmc
pop
adc
fistps
das
xor
or
mov
xor
lods
nop
aam
insb
scas
jo
xchg
inc
xor
or
mov
inc
mov
cltd
jge
mov
gs
mov
jp
cltd
mov
lahf
aam
xor
sbb
repz
sub
jg
dec
cs
jge
xor
pop
ffreep
lcall
sar
das
mov
lcall
aaa
push
inc
push
xorb
add
pop
mov
or
in
les
lea
inc
dec
orl
add
and
xor
enter
xor
aaa
jb
sbb
fld1
push
lock
dec
daa
xor
inc
mov
xor
jmp
pop
dec
and
inc
xchg
push
inc
or
insb
pop
iret
sub
adc
dec
xchg
xlat
imul
in
xchg
enter
xor
test
sbb
cmp
rcrb
out
xlat
aad
std
call
and
nop
cmp
std
rcrl
xchg
xchg
mov
lcall
fbstp
bound
sbb
or
incb
ret
inc
push
loop
cld
cmp
mov
arpl
dec
mov
sub
ss
cmpsl
inc
jns
loopne
mov
faddl
add
test
int
xchg
xor
jae
add
lcall
or
rcr
fidivs
cli
inc
sahf
push
sahf
push
dec
sahf
and
movsb
loope
lods
out
inc
add
out
out
add
mov
mov
loop
out
jecxz
or
dec
mov
dec
sbb
scas
fwait
inc
push
sub
int
pusha
fnsave
scas
push
pop
lcall
daa
dec
and
out
ret
fstl
lahf
mov
ret
jle
xchg
xor
adc
fldl
or
mov
sub
push
mov
dec
mov
xor
dec
cmp
orb
push
jp
mov
xorl
mov
shll
popf
xor
jnp
stos
mov
mov
stos
sub
mov
shlb
jmp
pop
or
mov
fs
inc
mov
shrl
push
pop
imul
xor
mov
push
js
sub
mov
cmp
cmpsl
repz
add
add
mov
cmp
or
adc
arpl
into
xor
jae
push
sbb
pop
outsl
out
xchg
xlat
xor
rorb
jns
stos
xchg
test
mov
sub
add
fs
sub
loope
movsb
lea
subl
in
xor
jmp
aas
arpl
movsb
cs
int
pop
int
jns
inc
sub
mov
into
and
xor
fildll
dec
jo
lret
mov
cmp
ds
push
lret
or
mov
adc
lret
int
xchg
sub
insl
or
sub
cs
mov
hlt
push
daa
out
push
inc
xor
loopne
enter
jb
xchg
sbbl
arpl
xor
mov
ret
xor
fisubs
in
insl
xor
dec
daa
mov
xchg
int3
outsl
jno
fwait
or
mov
imulb
dec
movsb
adcb
clc
push
je
mov
sbb
sbb
push
xchg
ss
mov
test
inc
popa
inc
add
add
sti
scas
retw
mov
or
push
iret
test
clc
xlat
and
cltd
popf
mov
scas
loopne
filds
insb
sbb
fs
mov
push
mov
jp
adc
sub
inc
push
jns
sbb
in
jp
pop
jae
mov
sti
bound
fildl
mov
sbb
movsl
js
xor
mov
nop
adc
jmp
mov
push
mov
xor
les
jmp
pop
push
aas
dec
call
scas
push
mov
loope
dec
sbb
dec
ret
imull
rcll
jl
test
sti
aaa
dec
pop
pushl
iret
adc
sbb
icebp
cmp
add
scas
sbb
fdivrs
push
sub
popf
test
call
mov
lahf
mov
lea
pop
mov
enter
inc
in
sub
mov
and
xchg
aaa
pop
xor
test
inc
mov
or
adc
jecxz
xor
xlat
clc
sub
and
xor
mov
lods
arpl
mov
xor
push
nop
fldenv
out
pop
mov
and
bound
insl
lea
jecxz
mov
xchg
insb
mov
aad
and
cli
rclb
push
out
push
imul
xor
shrl
orl
pop
adcb
insb
sbb
xchg
lods
xor
push
mov
inc
call
addr16
adc
mov
pop
fsts
cmc
stos
aad
ret
scas
popa
inc
inc
pop
call
and
pop
movsl
gs
dec
add
add
xchg
mov
jl
jb
jno
in
mov
adcb
sub
in
cmc
mov
pop
sahf
mov
les
push
movsl
add
lds
push
lods
sbb
mov
pause
xchg
test
repz
int
mov
xlat
and
jb
mov
inc
call
fiadds
stos
mov
sarb
mov
mov
add
mov
add
std
movsb
popa
cmpsl
jo
sub
mov
mov
stos
movsl
pop
xchg
popa
ret
cmp
xchg
ljmp
pop
adc
movsb
adc
rcr
mov
addl
outsb
sti
cltd
fdivrl
sahf
aaa
pop
inc
and
mov
adc
push
adc
xor
cli
orb
les
pusha
push
lods
in
jle
sbb
push
inc
jbe
mov
iret
push
adc
inc
divl
dec
ss
inc
jge
out
cwtl
pop
push
lea
mov
or
stos
ret
daa
js
popa
adc
cmp
insl
loope
dec
emms
insl
test
lret
repz
sub
push
or
push
jno
pop
scas
lods
push
sub
ret
lds
jo
lods
push
lret
pop
lret
fisttpl
add
into
data16
mov
inc
lcall
mov
xchg
daa
lds
add
js
subl
aad
filds
dec
xchg
out
mov
jbe
into
sbb
sub
fnstsw
mov
fidivrs
out
jne
push
xchg
outsb
cmp
subb
and
jg
sbb
shll
push
mov
add
loope
pusha
push
push
sub
cmp
mov
sbb
cmp
in
call
inc
jbe
fstpt
inc
xchg
imul
inc
shrl
das
les
loope
mov
sti
aam
movsb
adc
xor
lcall
inc
movsl
adc
dec
jno
sti
push
addr16
pop
xor
or
xlat
scas
daa
mov
mov
mov
mov
lret
in
push
xchg
jb
sub
or
push
adc
push
jno
mov
test
stos
scas
xor
cmp
lahf
leave
xchg
adc
icebp
ficompl
push
sbb
push
into
add
jecxz
jecxz
sti
std
jb
leave
repnz
stc
divl
notb
and
push
inc
sbb
and
jns
pop
xchg
cmpsl
cmp
out
daa
out
cmp
aas
scas
or
mov
insb
mov
xchg
mov
pop
lret
xchg
out
ja
loop
stos
push
xchg
ja
cs
into
into
lahf
repz
arpl
fdiv
lret
mov
or
xchg
pop
inc
scas
mov
lods
dec
fs
aam
sarb
je
adc
pop
mov
jg
rcrl
insl
push
inc
sub
xor
sti
or
das
jbe
dec
fisttps
sbb
xor
push
adc
mov
mov
fcmovb
cmc
hlt
sahf
lock
lods
or
sub
jnp
ret
ret
imul
int3
sub
cmp
int
sahf
out
test
mov
xchg
push
mov
and
loopne
into
pushf
ficoml
xchg
scas
xchg
pop
mov
dec
lcall
and
ja
sbb
push
sti
jno
mov
ds
iret
mov
das
dec
cld
je
pushf
scas
lock
call
inc
or
xor
sbb
jmp
adc
mov
gs
mov
jle
sub
cld
push
dec
xlat
xor
xchg
lret
out
std
dec
shl
in
xchg
loopne
mov
sub
pop
add
shlb
dec
mov
std
xchg
cmpsl
lret
jns
adc
mov
push
xor
xor
push
outsb
insl
add
xchg
sub
push
daa
je
adcl
fldcw
inc
cmpsl
ja
mov
jl
mov
adc
push
fwait
or
mov
stc
jmp
add
imull
push
lods
and
test
rep
sbb
hlt
iret
add
or
aas
incb
inc
jmp
lods
adc
cld
pop
imul
xorl
push
fmuls
xchg
jmp
adc
xor
je
test
push
mov
out
add
incl
cmpsl
jno
in
sbb
aam
test
mov
cld
dec
push
mov
sbb
lock
inc
push
sbb
pop
inc
push
sub
lock
lds
js
cmp
jns
fstpt
inc
data16
or
mov
sbb
cmc
enter
xor
ja
fildll
jno
lods
dec
add
popa
and
cmp
mov
sbb
mov
mov
popf
xlat
push
mov
push
cmp
add
mov
lahf
jno
mov
sub
lcall
push
inc
push
fs
mov
push
inc
push
into
ret
adc
popa
pop
jne
repnz
cmp
dec
mov
loope
pop
mov
xlat
sub
lret
fisubs
xchg
scas
cmp
push
gs
jns
into
cld
and
xlat
xchg
mov
mov
popf
and
jmp
cmp
cwtl
icebp
sbbb
stos
loopne
lret
int3
pop
jns
pop
add
sar
iret
addb
sub
add
icebp
mov
push
aaa
push
cmp
mov
js
mov
scas
mov
sbb
fdivr
adc
sbb
outsb
insl
and
in
addr16
js
repz
sar
mov
je
xchg
test
cmp
js
dec
sub
cmpsb
test
ljmp
add
in
inc
fisubl
cmpsb
in
sub
dec
gs
xchg
xchg
push
cmpsl
loopne
addr16
adc
push
stos
push
enter
cmp
scas
mov
lahf
xchg
pop
notb
sub
push
repnz
and
into
enter
test
jmp
cmp
neg
xchg
ret
int3
cmp
xchg
cmp
jecxz
testb
cmp
jbe
aaa
imul
jbe
cmpsb
and
push
push
or
inc
xlat
jmp
pop
dec
jnp
mov
pop
bound
inc
adc
pop
mov
js
sub
in
cmc
or
pop
dec
test
sbb
inc
negb
popf
insl
xchg
lea
and
outsb
nop
jecxz
mov
push
loope
jmp
and
imul
daa
scas
push
testl
sub
pop
push
std
jns
lcall
nop
mov
out
jae
pop
mov
sbb
pop
popf
sbb
notb
mov
cmpsl
mov
and
test
mov
divl
sub
xchg
sbbb
xchg
lock
jns
xchg
stos
xchg
jo
sbb
fiaddl
sub
cmp
insl
jp
jmp
jne
imul
cvtpi2ps
fadd
cmpsl
or
add
imul
xor
addr16
adc
pop
adc
pop
pop
dec
std
aaa
out
add
in
dec
mov
push
cld
pop
and
pop
les
pushf
hlt
jne
scas
push
push
cmpsb
movsl
inc
mov
push
popa
xchg
jbe
lcall
inc
scas
stos
dec
out
push
push
rolb
jae
fisttpll
test
add
push
outsb
sbb
and
xchg
sub
cmpsl
add
jle
xchg
pushf
xlat
xor
mov
mov
push
push
cltd
out
test
add
test
xchg
iret
cld
dec
pop
cmc
mov
popw
jae
inc
mov
lods
mov
aaa
lea
cltd
out
enter
xchg
inc
js
inc
pop
rol
cmc
sub
cmp
cltd
sbb
mov
sub
lea
xor
lods
pushf
stos
call
aam
js
jo
lock
dec
mov
jmp
mov
adc
cs
jbe
in
andb
mov
and
mov
xchg
subl
sbb
mov
shll
push
pop
in
clc
xchg
sub
jne
cmp
fisttpll
and
mov
popa
lret
rcrl
dec
in
inc
cwtl
adc
inc
out
filds
in
push
jle
jp
mov
mov
mov
sub
or
rorb
sub
xchg
sub
js
into
xor
cmp
lret
inc
fnstenv
sub
inc
or
inc
adc
jmp
push
xor
insb
push
jo
push
sbb
xor
dec
repnz
sbb
stos
int
mov
push
stos
mov
and
iret
mov
sub
shll
pop
jecxz
adc
sti
dec
cmp
pushf
mov
andb
inc
mov
cmp
jo
xor
push
cmpl
stos
mov
mov
cmpb
ret
int
push
dec
xor
mov
dec
add
test
sbb
mov
loopne
mov
pop
dec
add
fsubrs
cmpsb
idivl
xchg
lods
lret
out
push
cmpb
bound
ljmp
mov
mov
cmp
ljmp
in
rcrb
in
ficoms
jne
inc
dec
outsb
shll
lea
movsb
lea
jmp
ss
cltd
mov
ss
arpl
fldenv
and
jg
cmpsl
dec
mov
lock
push
lahf
cmp
loop
bound
mov
int3
idivl
sahf
ljmp
mov
mov
stc
inc
jo
push
ds
mov
pop
cs
adc
push
jp
or
imul
sub
test
dec
mov
leave
icebp
mov
je
jb
and
test
lahf
cmpb
repz
or
xchg
into
into
or
add
pop
or
ret
sub
jg
dec
or
sub
jo
fildl
insl
xchg
inc
cmpsl
sbb
out
sbb
or
mov
test
sub
pop
lea
movsb
mov
dec
dec
orl
and
pusha
add
sub
out
pusha
inc
sar
jl
movl
data16
xor
jno
xchg
xor
jg
idiv
cmp
jne
add
fisubrl
cmp
xchg
fsubs
or
xor
movsb
rcr
push
clc
cmpsb
or
inc
push
fsubs
arpl
or
jns
loope
dec
rol
rcll
mov
ljmp
cmc
inc
jle
mov
add
ret
and
pop
loope
jecxz
and
iret
cvttps2pi
arpl
cmp
xor
pop
inc
inc
add
mov
insb
pop
inc
std
mov
push
cmpl
sar
xor
loopne
ret
xchg
adc
adc
stos
cld
mov
jbe
sub
icebp
adc
fnstsw
inc
fists
nop
fdivl
repnz
adc
sub
add
xor
lret
xchg
push
mov
mov
negb
sbb
and
int
pop
jl
arpl
or
shlb
repnz
adcb
out
adc
lahf
pop
push
xchg
mov
out
test
inc
repz
mov
xorl
and
out
sbb
cmp
out
sbb
loopne
pop
mov
dec
sbb
aam
idivl
jae
dec
outsb
imul
fs
dec
into
inc
or
cwtl
aam
xchg
mov
push
xchg
cld
cs
adc
stos
push
mov
mov
fcomp
jno
faddp
pop
stos
jo
mov
pmuludq
xchg
cmp
cli
push
jnp
pop
xor
ret
cwtl
mov
dec
leave
xchg
and
nop
xchg
push
push
cmpsl
push
add
fstpt
mov
outsb
jecxz
ficompl
adc
clc
lea
inc
adc
test
loopne
and
lret
scas
cmp
cwtl
jo
or
popa
jne
cmpsl
dec
dec
sbb
test
xorl
ja
xlat
xor
adc
jle
pushf
cmp
daa
dec
pop
jno
push
inc
mov
out
push
mov
orb
subl
arpl
in
loope
mov
in
fwait
sbb
mov
xor
imul
push
insb
pop
out
cmp
test
lret
fiadds
sbb
mov
sbb
push
fisttpll
loop
pusha
push
js
icebp
ss
pop
inc
or
push
xchg
mov
and
into
addb
jbe
loop
push
lcall
mov
inc
sbb
cmp
dec
daa
sub
xchg
and
arpl
out
jbe
pop
dec
shl
mov
and
subb
inc
push
cmp
loop
inc
scas
xchg
subb
je
dec
andl
add
lahf
shrb
and
repz
mov
and
push
jns
in
cmp
adc
idiv
pop
loop
jae
pushf
or
and
into
sbb
lds
dec
enter
lret
cmpsb
or
lret
xchg
arpl
push
movsb
xchg
jge
fimuls
rcll
mov
ljmp
sbb
int3
mov
rolb
or
cwtl
xchg
cltd
lds
xchg
cmpb
int3
cmc
in
xor
sti
pop
sahf
jp
scas
sub
lret
iret
push
je
popl
cmpsl
cltd
dec
ret
iret
jp
mov
pop
jb
inc
rcll
xor
out
mov
add
cmp
mov
push
js
sub
xor
pushf
lock
cmpsl
leave
jbe
in
mov
inc
adc
xor
aas
cmp
jg
mov
xchg
mov
loop
mov
add
dec
arpl
and
outsl
insl
lret
xchg
enter
nop
repz
adc
std
add
jnp
lods
cwtl
test
jae
adc
je
scas
inc
push
mov
je
xchg
xchg
xchg
inc
jo
shlb
push
hlt
outsb
aas
pop
mov
cmc
xor
sub
jo
xorb
mov
js
jns
dec
mov
rcl
inc
or
stos
lods
push
out
call
pop
jge,pt
jmp
cmp
into
add
in
mov
lret
clc
test
out
stos
mov
push
movsl
loopne
sub
movsl
fldcw
pop
jb
adc
fbld
call
iret
cltd
cltd
leave
push
ret
lret
push
add
in
and
dec
sti
fs
fidivl
xor
out
xchg
movsb
call
jbe
cs
and
jl
xchg
insl
jno
or
or
push
xor
clc
jo
test
test
js
jae
sub
clc
mov
subb
adc
xchg
aam
js
test
dec
jg
dec
cmp
imull
inc
bound
mov
mov
pushf
xchg
je
data16
cmpsb
sbb
jbe
popf
ret
cmpsb
adc
push
repnz
push
hlt
add
inc
loop
xor
push
lods
xlat
jge
inc
or
push
adc
scas
and
mov
inc
sub
sahf
ss
cmp
mov
lcall
mov
lret
scas
add
mov
sbb
cmp
adc
test
loope
scas
sti
rorb
lret
stos
dec
xor
inc
push
or
sbb
inc
fimull
push
dec
cmc
dec
repz
cwtl
dec
jge
or
int3
xchg
xor
or
inc
psrlw
add
imul
imulb
repz
xchg
or
cmp
insl
cmpsb
pop
cmp
ficompl
ja
or
aam
jbe
push
bound
movsl
and
insl
pop
in
mov
xchg
hlt
sub
insl
add
inc
inc
repz
xor
adc
sbb
insb
xchg
push
cltd
and
dec
call
push
pop
aaa
inc
xchg
push
test
cmpsb
push
rcll
cmp
push
push
mov
pop
sub
mov
hlt
xor
lods
fwait
and
fwait
mov
es
cmp
cmpb
int3
xchg
cmp
std
mov
into
sub
sbb
push
mov
xchg
dec
mov
call
mov
popl
stos
xlat
sub
mov
fisubs
movsl
sbbl
sarb
loop
or
pusha
hlt
fs
movb
sub
pop
sahf
icebp
iret
fmull
dec
push
xchg
mov
testl
cltd
xor
jg
xor
inc
not
xchg
sbb
leave
push
push
jno
xor
enter
add
or
cmp
out
or
push
int3
xchg
mov
rol
inc
pop
into
decb
push
cmc
cmc
shll
std
test
add
cld
adc
push
mov
mov
imul
mov
adc
add
sub
sub
jecxz
or
call
dec
call
jno
push
daa
dec
dec
lock
mov
push
mov
mov
iret
push
push
cmpsl
sbb
iret
xor
push
adc
ja
lea
lcall
sub
pop
ret
andb
loop
in
arpl
pop
mov
orl
push
push
rclb
lahf
pop
divl
outsb
mov
cmp
jmp
cld
cmc
jle
popf
add
xor
shlb
hlt
mov
ds
fidivrs
xor
enter
repz
pusha
sbb
pop
into
xlat
xor
pop
add
es
mov
mov
push
push
in
sbb
mov
orps
jl
cs
cwtl
mov
into
idivl
cmp
in
cmp
push
adc
lret
int
push
xchg
daa
jmp
push
xor
push
sbb
fdivl
ljmp
and
loopne
xchg
nop
cwtl
jo
xchg
in
out
into
sub
orl
inc
mov
rcrb
jge
loopne
push
popf
stc
adc
cld
and
xchg
int
mov
xchg
adc
sub
pop
and
dec
sbb
fs
jp
sub
inc
scas
sub
mov
fidivl
pop
lods
scas
inc
das
sub
in
hlt
jle
mov
mov
adcl
xor
add
rorl
pushf
arpl
mov
mov
xlat
push
fadds
dec
scas
push
inc
bound
fistpll
sbb
push
cmc
jns
xchg
into
cmc
xor
gs
mov
scas
stos
xor
inc
gs
inc
out
js
jns
push
in
xchg
push
int3
dec
roll
imull
pop
xchg
subb
filds
popf
dec
xchg
mov
pop
fwait
enter
testb
adc
pop
cmp
int3
mov
in
clc
inc
mov
mov
cmp
addr16
int
mov
mov
mov
in
outsb
rcrb
imul
pop
outsb
cmp
dec
cmc
icebp
das
jle
aam
or
xchg
icebp
inc
scas
icebp
sub
aad
pop
dec
sbb
data16
adc
movsl
cmp
insl
xchg
xor
xor
add
adcb
incb
mov
push
sub
mov
lock
and
cld
rorb
cmpsl
jb
ss
mov
push
stos
ret
jmp
js
xchg
stos
and
xor
mov
lret
cmp
es
aad
mov
xor
push
cld
popa
fisttps
in
jmp
inc
daa
lret
sub
cmpsb
sbb
fwait
xor
push
cmpsb
jmp
in
or
pusha
cli
test
fwait
inc
cmpsl
push
addb
cmpsl
call
jmp
push
shl
sub
or
test
cmp
lahf
pop
bound
sti
mov
jp
in
or
sub
and
test
icebp
mov
nop
ret
out
mov
hlt
ss
xchg
stos
in
jne
mov
jl
out
fisttpll
lods
inc
lock
inc
test
test
and
xchg
jno
inc
mov
pop
lcall
xchg
or
inc
and
mov
xor
adc
mov
aam
push
or
add
mov
lcall
call
push
add
push
jo
dec
jmp
mov
add
or
notb
ret
hlt
xor
shr
std
push
inc
test
sarb
jb
push
pop
xor
adc
adc
or
jp
cltd
xchg
test
cmp
or
in
cmc
jmp
cmpl
sub
aas
fists
hlt
insl
sub
dec
push
rcrb
cmp
icebp
cmpsb
push
pop
xchg
inc
fldt
cli
cmpsl
lahf
rolb
mov
outsl
fs
and
dec
cmp
repnz
js
pop
sbb
test
mov
xor
jnp
inc
loop
add
fsub
lret
sub
cli
mov
outsl
mov
pop
int3
insl
inc
and
shrb
pop
pop
push
xor
sahf
es
dec
push
and
inc
sub
sub
test
imul
jge
dec
insb
push
es
fs
cmc
mov
mov
jne
aas
mov
mov
or
shll
push
gs
aas
cmp
das
push
addr16
das
mov
xchg
test
xchg
test
test
fcmovne
jno
jge
xchg
bound
loope
aaa
ljmp
push
std
dec
xor
rolb
add
xor
mov
mov
lret
and
mov
out
ljmp
cmp
out
push
cli
and
or
sbb
adc
lds
out
test
or
mov
xchg
adc
adc
stc
aaa
or
mov
enter
inc
outsl
mov
insb
mov
mov
loope
xchg
jns
dec
push
mov
lcall
sub
xchg
int
mov
sbb
popa
xchg
mov
xlat
pop
xor
pop
pop
push
mov
rolb
rclb
lods
jne
or
scas
std
es
imul
lock
cmp
xlat
imul
fwait
shrl
cmpsl
mov
test
sbb
xor
jl
stos
hlt
or
iret
mov
cmpsb
dec
addr16
inc
lods
xchg
imul
aam
jl
cld
loopne
outsb
xlat
fsubs
push
sub
mov
mov
xchg
in
out
shrb
shr
sar
add
cld
dec
sub
pop
div
mov
pop
cmp
adc
call
jmp
cwtl
mov
je
fldcw
sub
into
xlat
lret
xchg
mov
or
adc
mov
fidivs
outsl
shll
pop
ljmp
push
push
ret
cmp
in
pop
cmp
jns
mov
cmpsl
pop
xchg
xorb
mov
imul
call
jmp
pop
mov
jne
mov
xor
arpl
add
sub
jl
jecxz
push
mov
fstpt
iret
sbb
sti
daa
xchg
leave
out
mov
out
pop
out
mov
insb
out
fdivrs
and
movsb
jmp
fmul
in
sti
cmp
or
push
mov
xchg
mov
jo
outsl
aas
sub
jns
fstpl
adc
rcll
pop
mov
mov
jge
into
adc
shrl
loope
jne
jp
or
or
aad
adc
lods
outsl
and
ss
bound
adc
and
pop
jb
push
jecxz
xchg
xchg
into
cmpsb
cmp
sub
adc
aaa
out
jno
cmp
mov
adc
test
loope
test
popf
inc
je
inc
test
jns
out
inc
push
sbb
lea
add
sub
sbb
lods
and
or
stos
cltd
mov
call
clc
pusha
and
xchg
insb
sbbl
sub
mov
aaa
push
cmp
sti
outsb
add
jno
xor
ret
popf
sbb
imul
xchg
inc
idivl
cltd
dec
mov
cs
cwtl
push
ja
rclb
rorb
lock
inc
push
jae
cmpsb
and
push
mov
jb
inc
dec
ss
mov
sahf
fadd
jns
lcall
mov
inc
out
pop
roll
jae
and
int3
cmpsl
stos
daa
pop
popa
movsl
sub
in
testb
je
jbe
adc
sbb
cmc
sub
neg
jae
mov
repnz
iret
adc
and
loop
pusha
outsb
mov
adc
out
xor
xchg
cmp
fists
aas
adc
and
dec
mov
mov
jge
add
jl
jmp
ljmp
clc
mov
mov
negb
pop
ret
mov
push
mov
sbb
ja
sarb
ja
clc
push
neg
data16
sub
shl
repnz
mov
arpl
jnp
sahf
sbb
rol
lods
push
xor
in
add
mov
out
dec
popf
incb
nop
adcl
ret
add
lea
fwait
or
cld
out
sti
sarl
or
and
xor
and
dec
jno
aas
push
xchg
pop
adc
stos
lock
and
stc
or
xchg
out
aam
addb
ficomps
jl
subl
adc
leave
arpl
loop
push
xor
sahf
and
rcrl
leave
lret
aaa
ds
cmp
imul
neg
setne
sbb
outsb
dec
negb
push
arpl
mov
xchg
in
add
sub
bound
xor
ja
cmp
push
hlt
lea
jbe
mov
and
scas
fldenv
out
inc
jns
test
push
insl
mov
cwtl
divl
es
lret
jg
lods
lods
ja
inc
jb
imul
cmpl
jmp
shl
lods
ds
jecxz
repnz
mov
lahf
xchg
enter
mov
clc
fcomip
push
and
or
in
cld
aad
sub
aam
scas
xchg
pop
mov
pop
fadds
aam
ret
lock
add
jae
leave
cmp
nop
hlt
xchg
push
jge
jg
fnstsw
jbe
jae
cmc
and
imul
dec
call
sbb
sub
xchg
xchg
dec
in
cli
jg
pop
and
dec
test
jae
pop
lods
lods
xchg
sti
lcall
and
pop
adc
sarb
jecxz
ss
push
xchg
sbb
subl
jo
push
inc
add
xor
adc
outsb
push
add
and
mov
leave
push
and
mov
inc
jge
icebp
insl
add
or
int
or
mov
adc
sub
divb
cwtl
iret
out
push
movsb
mov
pop
dec
inc
data16
in
shll
adc
cld
ss
nop
mov
or
push
mov
popf
je
jecxz
push
fwait
cmp
and
adc
rolb
leave
jmp
inc
xchg
xor
inc
cmp
aas
loopne
ja
rolb
jp
inc
cs
mov
mov
xsha1
cmpsb
or
and
fsubl
mov
push
inc
xor
daa
fidivrs
in
in
inc
imulb
shl
or
or
sbb
and
xor
scas
test
adc
pop
call
adc
push
pop
mov
pop
jne
pusha
leave
mov
mov
push
sbb
mov
sbb
push
dec
fisubl
out
mov
push
sar
fcoml
pushf
or
pushf
add
daa
clc
push
jmp
faddl
jo
cmpsb
divb
jecxz
mov
push
jnp
inc
add
lcall
jbe
ret
int
cwtl
or
loope
test
xchg
mov
add
lret
mov
or
in
and
stc
inc
sbb
push
jno
es
loopne
imul
xor
movsb
sub
stos
cltd
cld
xchg
lea
sbb
fistl
sub
xchg
test
mov
int
push
push
fs
fstps
or
sbb
and
jle
cmc
cmpsb
add
arpl
stc
push
xor
xchg
insl
jge
addr16
adc
mov
push
push
fcmovnb
aad
and
cmpsl
add
inc
in
adc
outsl
mov
pop
cs
test
fdivs
cmpsl
pushf
jge
mov
pop
or
xor
shrl
fsubrs
test
xchg
in
pusha
iret
lds
sub
push
mov
adc
jmp
xor
shlb
int3
mov
inc
sbb
fst
imul
sbb
inc
mov
xlat
sub
arpl
popa
inc
insb
mov
imul
jmp
loop
iret
push
cmp
lahf
neg
in
dec
in
fldt
mov
nop
sbb
cmpsl
int3
or
sbb
inc
or
std
cmp
inc
fwait
enter
mov
rcrb
pop
loop
popa
mov
jbe
mov
lret
int3
repnz
add
sub
pop
dec
jl
aaa
fs
mov
mov
adcb
sbb
adc
jg
fcmovu
pop
fwait
loope
jb
jge
sahf
ds
jnp
mov
imul
mov
in
pop
rcll
lods
cmp
stc
dec
imulb
jp
mov
or
jne
and
mov
push
test
fwait
lahf
mov
insb
push
add
inc
mov
cmpsb
jg
fstp
cltd
leave
fs
enter
xchg
adc
sub
stc
cmp
dec
fistpl
pop
xchg
out
push
xlat
out
pop
pop
add
jne
push
js
sti
pop
sbb
push
push
test
imul
ljmp
sub
add
add
pop
ret
int
imulb
or
bound
jns
divb
cmp
add
mov
add
xchg
mov
lds
sub
jmp
iret
rclb
call
aaa
outsb
sub
sbb
rcll
rcrl
cli
in
daa
sahf
enter
hlt
jb
in
ljmp
inc
push
or
popf
fs
ss
push
pop
aam
ret
jg
cltd
pop
cmp
bswap
or
fiadds
not
call
adcl
inc
and
dec
lret
mov
inc
test
pusha
es
push
mov
mov
pop
imul
mov
and
sbb
mov
mov
pop
sub
xchg
sub
and
testb
jae
cmp
inc
mov
clc
push
or
outsb
pop
insb
rdmsr
jo
aam
and
and
addr16
push
pop
leave
push
les
cmp
sub
push
mov
xor
es
pop
and
mov
sub
dec
cmpsb
icebp
jl
push
xor
enter
xchg
jnp
fsubrs
xor
adc
std
out
dec
imul
int
mov
pop
stos
cmp
xchg
in
push
mov
add
cmp
shl
and
repz
fbld
xor
jb
xchg
mov
popf
popa
mov
push
out
sarb
xchg
inc
push
fcmovb
in
xor
lock
repnz
sarl
pusha
mov
sahf
in
hlt
jl
xchg
mov
pop
aad
mov
pop
jno
sbb
and
pop
sbb
fisubl
xlat
mov
mov
pop
mov
jle
jg
dec
xchg
imul
gs
mov
std
jbe
push
adc
mov
mov
test
or
jo
movsl
pop
lcall
sub
cmovno
outsl
fmuls
dec
jne
in
bound
outsb
push
jns
sub
and
mov
pop
xlat
test
lods
je
or
push
xchg
sub
sbb
out
push
shrb
cmpsb
into
xchg
icebp
mov
mov
int
push
call
loopne
inc
jae
inc
jno
pop
xor
pop
push
dec
mov
cmpl
cmc
cli
cmp
xor
pop
push
sbb
mov
sub
cmp
mov
push
jae
add
fistl
adc
xchg
adc
or
cmp
test
ficomps
mull
out
and
jns
out
dec
dec
mov
mov
leave
inc
and
ds
inc
sbb
mov
sub
hlt
and
xor
fistpll
fimuls
jae
in
sub
xor
fdiv
imul
dec
add
lods
cmp
je
pop
sub
addl
nop
cmp
in
mov
ja
stos
sub
mov
fildll
out
popa
dec
jp
int
push
stos
call
sub
enter
push
out
fidivrl
xchg
add
fwait
bound
sub
add
pusha
leave
sbb
push
sub
pop
mov
push
lds
mov
in
into
lods
mov
aas
clc
push
fmulp
pop
dec
pop
pop
adc
icebp
lret
in
pop
mov
fimuls
repnz
pop
inc
mov
inc
jo
pop
push
addl
call
dec
push
push
sbb
hlt
dec
and
stos
ja
nop
sub
bound
int3
int
lods
clc
dec
jl
int3
add
repnz
mov
roll
cmp
aas
sub
inc
push
mov
notl
mov
cmp
rcrb
je
clc
sub
in
push
jmp
push
test
aaa
js
inc
add
repz
enter
sbb
inc
xor
scas
xchg
outsb
cli
ret
mov
jecxz
push
fnstenv
out
xor
repz
mov
push
pop
loope
push
inc
xor
test
add
lock
test
xorb
xchg
leave
testb
push
std
lcall
scas
stc
mov
daa
hlt
mov
lret
mov
popf
aas
inc
mov
xchg
and
mov
jge
jl
mov
lahf
sub
cmp
xchg
into
sbb
jo
mov
cmp
sub
pop
push
call
in
pop
fimull
cmc
decb
pushf
mov
xchg
arpl
loope
adc
sbb
inc
xchg
add
loop
xchg
subl
movsl
mov
push
add
dec
popf
js
je
inc
xchg
pop
add
and
das
dec
mov
add
or
jo
sub
imull
push
fbld
add
mov
out
pop
mov
sub
vpunpcklqdq
xlat
jp
sbb
xor
outsb
shl
stos
sbb
add
sub
pop
jmp
xor
sbb
or
mov
and
dec
sbb
lods
pop
insb
jbe
dec
insb
jge
lahf
movsl
rolb
sub
push
mov
mov
mov
dec
in
mov
movsb
ret
pop
add
pop
and
pop
mov
pop
sbb
cld
aas
mul
adc
daa
mov
jbe
or
push
outsl
mov
xchg
testl
sub
sbb
in
cmp
push
pop
lock
xor
movsb
xor
and
push
scas
push
fdiv
lret
shrb
stos
mov
aad
pop
aam
or
sub
shrl
jmp
fwait
ret
sbb
ret
pop
stos
sbb
cmp
mov
test
jb
mov
dec
movsl
test
push
add
stos
jp
xor
fidivrl
ret
xchg
pop
int3
inc
lret
xchg
and
add
xor
mov
dec
mov
xor
pop
orb
js
ljmp
lret
arpl
sbb
sbb
movsb
in
mov
adc
mov
sub
outsb
pop
push
push
ds
iret
wrmsr
nop
add
bound
call
and
ret
test
and
and
push
dec
pusha
not
dec
test
push
in
mov
dec
orl
scas
and
mov
mov
dec
inc
push
loopne
call
in
fmuls
or
insl
nop
add
adc
xor
arpl
mov
dec
jge
or
dec
xorl
xchg
aaa
adc
jge
inc
mov
iret
dec
icebp
cmc
xor
test
sahf
mov
and
daa
popf
mov
test
cltd
loope
push
or
in
push
imul
icebp
mov
cmpsb
lds
pop
mov
mov
inc
mov
mov
sti
mov
cmp
mov
ficomps
repnz
sub
lret
ret
aam
jecxz
pop
andl
mov
push
lcall
sub
fistps
outsb
pop
fmulp
addr16
es
cs
pop
outsb
mov
sub
mov
shrl
mov
cltd
mov
pushf
les
push
insl
adc
mov
sub
xchg
push
pop
mov
idiv
mov
mov
mov
push
ret
daa
cwtl
push
out
xor
push
adc
xor
int
daa
pop
inc
sbb
inc
and
cmp
enter
inc
rolb
xchg
mov
fdivs
mov
jae
scas
sub
push
shrb
lahf
lods
es
xor
sti
jmp
lods
leave
out
fidivl
cli
mov
cltd
mov
push
mov
inc
inc
push
ds
test
pop
xor
dec
xchg
sahf
fstp
jmp
loopne
adc
loop
add
jle
pop
lock
lahf
ja
adc
scas
shrl
out
and
hlt
pop
xor
and
xchg
arpl
in
xor
in
mov
fnsave
and
leave
mov
es
xor
sub
out
mov
and
push
mov
das
add
and
scas
cmpl
ja
ss
xchg
fsubrs
push
or
add
push
xchg
adcb
insb
jno
outsb
pop
dec
fcompl
inc
in
pop
and
jg
testb
xor
test
repnz
push
push
ljmp
push
lods
ficoms
ss
hlt
mov
xchg
mov
xor
js
mov
imul
adc
dec
push
xor
inc
or
divb
ds
lahf
es
pop
cmp
cltd
jae
in
add
sbb
lea
addl
adc
roll
inc
mov
push
movsl
pop
pop
cmc
je
cmp
mov
cli
and
dec
cld
lds
aas
roll
fstpt
jmp
mov
ror
jne
xor
clc
shl
fildl
dec
imul
sub
push
test
add
mov
ficompl
jmp
mov
adc
stos
sub
nop
stc
dec
dec
push
sbb
je
jp
das
hlt
lcall
sbbl
fsub
sub
ror
cwtl
std
push
fadds
push
pop
sbb
dec
jno
cmp
gs
inc
lock
xchg
cmp
test
mov
or
dec
inc
fwait
repz
ja
dec
filds
sub
leave
mov
cs
pushf
test
test
push
sbb
sti
jmp
ja
xor
mov
and
xchg
jns
fnsave
ljmp
sbb
and
sbb
mov
stos
andl
imul
pop
fldl
jecxz
fidivl
sub
mov
scas
or
aaa
adc
inc
jp
jns
stc
add
sub
adc
add
lea
pop
mov
shrb
jns
lret
mov
addr16
mov
dec
mov
or
in
cmp
loope
repz
lea
bound
inc
pusha
pop
xor
adc
pop
into
leave
pop
rcrl
push
pushf
sbb
push
shl
mov
out
push
xchg
bound
push
loope
xchg
fistpl
sub
lds
sbb
cld
shlb
add
push
fsubrp
in
push
push
push
and
por
mov
stc
adc
jb
cwtl
push
icebp
push
adc
xchg
rorl
mov
rcrl
repnz
mov
rclb
ret
adcl
or
loope
lods
aas
leave
add
ret
push
or
mov
mov
movsl
mov
or
mov
jl
imul
dec
shll
jbe
or
xchg
inc
shlb
push
pusha
lahf
and
cmpps
cmp
jne
pop
repnz
add
shll
into
push
sub
out
pop
pusha
movsb
sub
cmp
cmpl
push
dec
jae
mov
xchg
inc
test
aad
add
jge
and
sbb
cmpsl
jmp
faddl
in
or
aaa
push
inc
xchg
cmp
or
push
xchg
sbb
add
stc
xor
test
pusha
xor
inc
sbbb
test
fcmovbe
dec
out
push
cmp
leave
sub
std
out
adc
inc
lea
pop
pop
cmp
add
mov
aam
add
mov
mov
es
add
dec
cmpl
in
fisubs
call
repz
pop
sub
mov
cmp
and
ja
sbb
mov
aam
xchg
loopne
mov
mov
les
jecxz
jnp
push
push
sbb
jne
hlt
and
in
outsb
in
int3
shll
ret
mov
jge
sbb
iret
add
mov
hlt
stc
addl
sub
out
mov
clc
icebp
sub
lock
sub
mov
iret
mov
scas
cs
add
jecxz
ds
in
add
out
push
push
fadd
push
and
mov
mov
cmp
inc
mov
cmp
dec
mov
aas
ja
jecxz
shld
jnp
sub
gs
cmp
adc
test
cli
push
adcb
adc
add
inc
in
mov
push
cmp
mov
ffreep
mov
int
std
sub
or
xchg
lea
hlt
mov
push
test
or
sbb
fisttpll
sbb
insl
outsl
das
sbb
je
repnz
and
movsb
inc
mov
sbbb
sub
sbb
fisttps
repnz
fcoml
imul
mov
cmp
ret
jmp
into
dec
xchg
jne
xchg
leave
cmpsb
mov
pop
adc
imul
mov
push
lds
push
int
pop
adc
dec
shlb
xor
out
sub
lahf
xchg
mov
dec
xchg
mov
xchg
cmp
lock
cmp
or
sbb
lea
shlb
or
fcompl
dec
sbb
jmp
push
out
inc
std
mov
push
lods
js
enter
dec
jo
mov
mov
ljmp
sbb
push
shlb
inc
lcall
push
or
fdivp
cmp
cltd
icebp
mov
dec
in
and
or
cltd
icebp
sahf
xchg
xor
cmp
mov
mov
aam
jne
pop
lcall
enter
clc
fisttps
inc
sbb
inc
push
lea
cs
cs
out
or
popa
push
xor
rcll
scas
mov
nop
stos
xor
mov
lahf
sub
fidivs
jge
fs
mov
add
aas
xchg
nop
mov
sub
pop
push
xor
je
mov
sub
fsubs
out
add
test
add
enter
push
mov
ljmp
mov
mov
push
pop
roll
mov
sub
jg
push
aas
ds
call
lea
and
test
sub
jo
sub
inc
jne
dec
xchg
push
mov
cmc
adc
stos
or
out
jmp
add
xor
mov
mov
jmp
es
stos
mov
sar
dec
xchg
xchg
jle
testb
mov
cltd
mov
push
dec
xchg
xchg
push
pop
loopne
ljmp
adc
out
es
sub
jns
loopne
adc
cmpsb
pop
add
sub
les
or
jge
jge
rcrl
pop
aaa
dec
ror
pop
sahf
mov
push
push
add
push
test
xor
out
and
inc
add
mov
cltd
in
jle
inc
and
and
lock
movsl
shrb
ds
stc
fldenv
push
inc
shlb
xchg
add
sbb
or
loop
pop
mov
mov
mov
push
cwtl
into
leave
add
and
dec
cs
ret
subl
lds
mov
bound
outsb
xor
push
std
fnsave
test
jbe,pt
das
jecxz
xor
scas
xor
aas
dec
mov
inc
mov
repnz
lret
cwtl
add
std
mov
int3
mov
and
add
pop
or
cs
adc
shlb
pop
mov
pop
fs
xor
pop
mov
pop
mov
adc
adc
cmpsl
in
das
int3
mov
cmp
xchg
int3
sbb
mov
lret
popa
and
pop
cmc
pop
jmp
ja
movsb
and
add
ja
mov
xchg
in
or
outsl
xchg
or
inc
and
into
fmull
aaa
add
xchg
adc
shrb
movsl
inc
aas
jge
dec
add
mov
or
push
into
and
out
inc
jmp
cwtl
in
addl
dec
pop
mov
xor
push
mov
scas
push
sahf
out
mov
push
xor
mov
xchg
out
inc
jne
mov
outsl
cmpsl
push
movsb
mov
mov
arpl
mov
lds
xchg
xchg
xchg
popa
push
addr16
addl
dec
pop
pop
push
inc
mov
nop
hlt
jnp
daa
shrl
jns
add
std
imul
xchg
ljmp
sbb
ja
xchg
setne
xchg
dec
ret
cli
adc
push
lret
and
icebp
fwait
adc
dec
mov
ss
cmp
add
fsubs
adc
dec
sti
pop
push
call
and
je
rorl
dec
mov
xchg
sbbl
into
lahf
or
lds
jns
pop
out
jmp
loope
mov
sbb
mov
repnz
add
icebp
js
das
sar
hlt
movsb
adc
xchg
push
outsb
rcr
ret
dec
mov
loopne
adc
setg
sbb
mov
sbb
js
mov
push
dec
stos
mov
mov
add
mov
or
ret
pop
jp
sahf
in
out
movsl
repnz
dec
repz
mov
lret
xor
jmp
pop
jns
out
mov
hlt
push
pop
test
push
cwtl
enter
out
inc
mov
pop
arpl
and
lock
in
mov
fisttpl
lds
lcall
gs
movsbl
adc
subl
mov
sbb
fcoms
xchg
leave
jo
test
or
lcall
adc
insl
clc
movsl
sbb
push
and
sbb
ja
iret
xchg
outsl
add
mov
in
mov
sahf
xchg
pop
add
rcll
sub
mov
push
mov
setne
mull
loopne
xor
push
fwait
ja
xor
or
je
fsubp
push
adc
jmp
adc
aad
aad
inc
lds
push
and
jmp
inc
arpl
insb
or
int3
dec
loope
mov
jl
pop
add
xor
pop
jg
popa
push
rcrl
popf
xchg
aaa
dec
sub
fs
adc
ret
xor
mov
iret
sub
add
lock
adcb
dec
not
pop
mov
dec
loopne
ret
mov
add
cmp
mov
and
sub
push
mov
push
jle
jmp
jmp
das
xchg
sbb
push
out
sahf
push
loope,pt
outsl
daa
lcall
sbbb
std
and
push
dec
or
add
das
cs
out
mov
xor
push
sbb
sbb
mov
mov
push
mov
negl
add
add
mov
cmc
in
push
popa
mov
and
push
xor
cltd
mov
jecxz
and
popa
push
int
lret
xor
sbb
fsubrl
adc
mov
pop
scas
push
lds
jb
sahf
daa
push
hlt
out
cld
xchg
rcll
shr
jge
fnstcw
scas
jl
lcall
jns
popf
std
sbb
xchg
in
and
clc
je
in
mov
stc
ss
inc
jno
cmp
lret
push
dec
rcrl
add
dec
lock
inc
xor
push
ror
mov
mov
sub
or
cmp
cmpl
or
push
adc
dec
scas
sub
and
cs
and
sub
xchg
test
out
xor
mov
cld
mov
icebp
shll
out
pushf
in
sbb
pop
imul
daa
mov
xchg
cli
ret
leave
ds
movntq
sti
cwtl
mov
adc
add
jl
jg
stos
in
bound
fcmovbe
jnp
sub
nop
loopne
add
push
jg
inc
rcrb
out
repz
inc
dec
xchg
lock
shlb
pop
and
or
adc
sbb
pop
popf
fsts
push
fldl
add
lods
mov
mov
adc
xchg
dec
cmp
mov
lahf
xor
mov
out
cmp
mov
cltd
ja
out
pop
cli
arpl
es
jmp
and
xor
xchg
in
jbe
inc
shll
dec
jnp
pop
xchg
add
xchg
sbb
sub
pop
stos
pop
jne
fs
fstps
js
xor
sbbl
repz
adc
out
jae
xchg
push
int3
sbb
jge
dec
jmp
push
inc
mulb
mov
jecxz
fstpl
jge
cmp
add
mov
popl
mov
mov
lds
fildll
or
xchg
push
push
xor
xorb
jno
inc
or
sub
inc
fdivr
xor
insl
ss
cmp
ljmp
sub
in
pushf
mov
rclb
sbb
lcall
sub
mov
sbb
hlt
sbb
jge
adc
push
outsl
out
push
stos
loopne
jp
cmpsb
addb
inc
cli
push
imul
or
adc
nop
repnz
dec
pop
sbb
test
pushl
push
mov
cli
int3
push
sub
and
inc
shrl
cmc
pop
imul
test
js
call
out
pop
lods
mov
mov
loope
aad
outsl
and
xorb
push
shlb
mov
pop
xchg
pop
ljmp
in
sub
xchg
mov
or
popf
cwtl
mov
scas
cmpsl
mov
xchg
scas
xor
dec
mov
mov
jp
adc
sub
xchg
mov
jb
xlat
sbb
mov
mov
dec
xchg
loopne
push
xchg
fistl
mov
jns
les
sbb
les
ret
mov
push
addr16
leave
bound
inc
mov
outsb
jg
xchg
mov
push
cmc
push
movl
pusha
inc
jge
rcrl
popf
into
push
lock
jp
push
sahf
roll
popa
lret
inc
mov
jo
stos
enter
push
loope
orl
outsl
es
cmpsb
or
int3
imul
adc
adc
dec
lds
jle
mov
lods
out
dec
jbe
mov
mov
lods
jle
cld
mov
adc
mov
pushf
inc
mov
mov
mov
pusha
inc
leave
hlt
or
lods
add
or
call
lock
pop
int
add
sbb
cmp
jo
rcl
or
pop
sub
add
stc
fld
mov
cmp
xor
mov
insl
xchg
shlb
mov
dec
mov
clc
mov
shl
add
lock
mov
outsl
push
cmp
daa
xor
test
mov
and
mov
ret
jg
arpl
mov
das
mov
xor
in
scas
mov
inc
aam
fstpl
mov
fwait
xorb
xor
into
ljmp
mov
enter
cmpsl
jne
ds
imul
cmpsb
dec
xor
push
icebp
mov
stc
sbb
loopne
aas
and
cmp
mov
xchg
out
xor
movsb
mov
shll
arpl
xchg
int3
stos
or
and
mov
les
sbbl
sbb
aas
sbb
jmp
cmc
clc
pop
pop
in
fistpl
pusha
leave
or
push
mov
fdivs
dec
adc
ret
js
fimull
in
sahf
cmovg
adc
cmpsb
push
mov
sahf
repz
in
mov
not
push
cld
push
or
mov
fsubs
sub
pushf
into
xchg
ror
and
stc
fists
sub
dec
pop
pop
test
add
xor
sub
loope
xor
jmp
fldt
loop
xchg
mov
dec
pop
sbb
movsl
pop
dec
cmp
ret
jno
xor
mov
sub
jno
imul
dec
xor
push
and
cmp
push
sub
stos
bound
roll
pop
mov
inc
mov
dec
fwait
mov
push
inc
xor
shll
stos
sbb
sbb
mov
sbb
out
cmp
movsb
jge
pop
dec
cmp
cwtl
sub
fstpt
repz
rcll
pop
dec
fcmove
push
inc
call
inc
xor
mov
adc
adc
das
loopne
js
adc
mov
lret
xchg
shl
jle
hlt
repz
dec
inc
xor
add
sbb
sbb
out
xor
pop
sub
sbb
pop
aam
mov
jo
dec
push
into
pop
test
mov
or
std
add
hlt
imul
and
jecxz
les
mov
cli
cld
shlb
popa
outsb
add
cmc
jle
cmp
xor
imul
jecxz
loopne
cmpb
pop
sahf
and
sub
adc
rcll
pop
call
or
or
jp
jle
and
ret
lock
test
xchg
cmpsl
inc
out
sbb
mov
arpl
stos
mov
stc
fmul
xor
mov
aas
sbb
test
dec
adc
mov
daa
int
add
and
addr16
inc
xor
in
adc
sbb
cmp
hlt
mov
add
test
aam
jns
gs
std
in
inc
stc
test
jle
sub
push
adc
add
enter
xorl
xchg
dec
lret
cmp
adc
cltd
gs
lret
lcall
pushf
loopne
clc
jb
sbb
push
pop
stc
test
add
ficompl
jns
dec
adc
js
mov
add
xchg
mov
mov
add
loop
adc
xor
add
jle
popa
push
fldenv
je
gs
sub
dec
in
mov
inc
mov
gs
xchg
int3
ss
test
xor
xor
aaa
mov
pop
negl
jno
je
bound
decb
cmp
fwait
cmp
stos
sub
pop
jmp
into
sti
add
mov
loope
adc
push
adc
or
mov
pushf
inc
int3
mov
out
push
cmpsl
add
std
cli
cmp
aaa
xchg
mov
cld
int3
ja
mov
mov
cmp
loopne
adc
data16
dec
adc
mov
add
inc
scas
xor
out
push
xor
nop
lods
in
out
cli
ss
mov
push
shl
fildll
jl
hlt
mov
push
dec
fldcw
loop
mov
ret
xor
push
add
jge
aad
adc
ret
inc
cmpsl
inc
sub
mov
cltd
sti
lret
mov
and
mov
outsb
lcall
cmp
test
inc
dec
ret
cmovns
pop
push
shl
sub
pop
jno
pop
pop
pusha
add
pop
testl
insl
mov
in
cmp
xchg
jmp
je
out
mov
subl
cli
lods
bnd
cwtl
stos
pop
push
sub
xchg
loopne
sbb
ret
out
add
popa
cld
popl
popa
mov
fstp
sahf
pop
imul
push
call
test
adc
adc
add
into
scas
sti
fcomps
adc
add
stos
cmp
or
popf
cli
insb
popa
insl
insb
mov
addr16
lock
xchg
lds
jns
and
xor
jae
push
mov
notl
subl
ret
mov
cmp
test
push
loope
cmpsl
dec
lea
mov
pop
arpl
out
insl
aas
jae
and
push
addr16
mov
xlat
adcl
shl
jp
pop
mov
jb
leave
sub
push
or
and
sub
pop
das
adc
mov
mov
pop
xchg
popa
pop
mov
adcl
add
cld
push
in
sub
lock
xchg
lods
lds
mov
test
dec
mov
dec
sar
cmp
out
daa
lret
shrl
or
fiadds
repz
pop
add
in
cs
rorl
push
cwtl
andb
icebp
or
dec
add
popa
sub
cmpsb
jecxz
inc
jp
pusha
adc
lds
imul
xlat
dec
mov
add
fsub
add
push
xchg
xchg
xchg
add
call
jmp
test
mov
mov
push
test
dec
pop
fidivs
xor
mov
pop
aaa
jne
dec
cmpsl
js
fldt
inc
mov
cmc
push
mov
and
lock
ds
jnp
inc
mov
lahf
ljmp
xchg
sbb
xchg
cmp
rcr
faddl
cmp
out
add
int3
mov
gs
pushf
and
daa
jg
cmp
push
sub
fnstcw
mov
stc
xchg
mov
mov
xor
add
jno
push
dec
mov
adc
cmpsl
push
jl
or
jmp
lods
in
iret
std
cli
insb
push
jne
mov
movsl
lret
push
sbb
jl
shrb
push
mov
mov
xor
mov
pop
pop
fsqrt
outsb
test
cmpsl
push
imul
or
pop
fistl
repz
cmpsb
test
adc
mov
xchg
mov
mov
bound
dec
pusha
inc
jb
xchg
and
repnz
mov
sub
div
pop
in
pushf
and
nop
pop
add
sub
xchg
fcmovu
mov
sub
pushf
jmp
adc
aas
inc
mov
pop
pushf
out
xchg
pop
insl
pop
loope
daa
mov
popa
out
or
dec
test
in
and
xorl
testl
jge
dec
pop
int
sbb
scas
fs
mov
call
sbb
xchg
mov
mov
lret
repnz
in
fwait
sub
movsl
mul
clc
je
fdivrp
mov
and
fbstp
ret
jmp
stc
jns
add
mov
jns
arpl
inc
push
and
jbe,pn
mov
repnz
add
mov
pop
hlt
dec
or
cmpsb
mov
mov
adc
fstps
push
push
push
call
insl
dec
jecxz
xchg
nop
mov
rcrb
leave
xchg
stc
rdtsc
fnsave
daa
movsl
inc
in
adc
xor
sbb
dec
popf
sti
xor
xchg
mov
ss
push
dec
or
xor
and
jle
xor
xor
shlb
mov
jns
test
or
dec
inc
repnz
add
fildl
mov
adc
cmp
mov
icebp
jnp
jecxz
test
sub
push
notb
sub
orl
pop
or
sbb
push
dec
data16
mov
mov
shlb
mov
xor
mov
inc
pusha
sub
cmp
cmp
dec
and
insl
stos
fidivs
mov
ja
push
orb
jae
push
imul
mov
filds
jmp
inc
iret
fimull
lcall
aad
fldenv
jnp
inc
fistps
aad
xchg
adc
jno
push
insb
cmp
sub
lea
cltd
jge
pop
pop
jno
xchg
mov
sbb
mov
mov
test
shlb
jns
cmp
dec
imul
lds
add
dec
adc
cmp
out
fs
mov
cmc
mov
stc
mov
js
sarl
lret
mov
adc
or
test
rclb
cwtl
sbb
push
cmp
test
leave
and
addb
ret
call
or
xchg
sub
push
popa
pop
pop
xor
xchg
lret
mov
call
push
mov
pop
ss
adc
lock
mov
inc
fcmove
lods
push
xchg
cmp
int
cmp
aas
adc
jmp
fs
pushf
test
cmp
push
loop
ret
fisubs
sub
fstpl
fs
jno
loopne
outsb
inc
decb
jbe
idivl
rcr
adcb
out
cmc
jae
mov
daa
aam
push
or
dec
shll
testl
arpl
lcall
test
jo
lea
lock
mov
sbb
hlt
push
into
test
aad
popf
cwtl
sbb
push
xchg
loopne
fistps
rcl
test
jbe
sbb
xchg
dec
fs
insl
lock
iret
and
fwait
imul
out
mov
push
das
and
sbb
inc
movsl
push
cmp
lret
imul
loop
sbb
fbld
inc
push
mov
cld
dec
fnstsw
cwtl
xchg
sub
fs
jbe
sub
sbb
rorb
fsub
into
notl
das
mov
dec
pop
pop
loope
nop
scas
cmp
iret
shl
push
cs
inc
or
int
and
mov
daa
outsb
cmpb
push
repnz
inc
scas
je
or
cli
xchg
sbb
in
mov
push
and
and
lods
jge
mov
sub
sub
mov
fdivrs
dec
xchg
stos
sbb
cmp
dec
arpl
jecxz
xor
mov
ljmp
shlb
sub
adc
mov
movsl
jl
fs
and
pop
in
lods
dec
orl
sub
jbe
shld
add
in
cmp
ja
mov
arpl
mov
adc
ja
ret
frstor
pushf
movsb
stc
adc
cmpb
rolb
sbb
xlat
imul
int
sahf
pusha
dec
into
mov
jg
mov
xor
mov
xchg
inc
mov
sub
jae
mov
xor
xor
add
incl
das
fldcw
aad
sbb
aas
fcomps
ror
or
adc
sub
sti
leave
aas
je
cmp
inc
jecxz
ss
mov
or
push
mov
dec
mov
out
mov
in
into
mov
call
movsb
cli
sub
out
mov
add
xchg
sar
mov
imul
shlb
sti
bswap
shrl
push
cmp
mov
add
mov
cwtl
adc
jp
enter
loopne
or
pusha
into
adc
mov
lea
sbb
sbb
pop
mov
lahf
insb
mov
and
mov
or
cs
cltd
xor
mov
sti
xchg
arpl
fisubrs
stc
neg
mov
test
pop
mov
sub
test
jae
leave
jne
inc
aam
xlat
push
out
ljmp
lcall
sahf
enter
fdivrs
sbb
cmp
mov
mull
repnz
inc
idiv
cld
shlb
je
fmul
pushf
ja
loope
sub
ss
mov
dec
pop
mov
sarl
stc
in
out
imul
xchg
je
sbb
xchg
imulb
cltd
xor
call
xor
fists
and
xchg
pop
lock
loopne
sahf
mov
loop
add
data16
cwtl
push
mov
test
repnz
cmp
mov
jg
dec
jo
in
fstp
sub
inc
adc
cmp
mov
orl
push
sbb
stos
fistpll
aad
mov
decb
lock
imul
sti
xchg
dec
gs
pop
out
test
mov
cmpsb
add
out
iret
sbb
mov
dec
cmpsb
mov
out
cmp
push
or
scas
ret
push
mov
ror
inc
sbb
or
ret
leave
mov
jbe
js
insl
mov
push
stos
rorb
fs
mov
pop
pop
or
adc
pop
ret
mov
inc
pop
jmp
adc
cmc
ss
lcall
push
sub
aas
push
pop
pop
int3
cmpsb
fldenv
push
jmp
std
stos
repz
xor
pop
in
xchg
lret
insb
ret
loop
adc
pop
movsl
lea
jecxz
fistpll
out
or
mov
jg
sbb
push
in
pop
cmp
hlt
lret
in
xor
lock
jnp
cpuid
push
cmp
jnp
xchg
adc
fiaddl
inc
clc
sub
test
mov
mov
repnz
xchg
xor
fucom
xorl
lods
add
jmp
ds
lea
push
mov
xchg
int3
imul
mov
xchg
lret
popa
jl
rolb
std
jbe
and
cmp
inc
jne
ret
lret
add
sbb
xchg
mov
outsb
lods
mov
xchg
pusha
lahf
cs
mov
xorl
adc
and
adcl
mov
aad
mov
imulb
shrb
xchg
lods
mov
mov
lcall
imul
push
shrb
or
jnp
mov
sub
add
popa
pop
lods
xor
lcall
sub
pop
push
cmp
lahf
icebp
dec
mov
jge
les
sbb
push
cmpsl
and
lock
lods
mov
mov
addr16
sub
js
add
mov
imul
mov
stc
mov
or
cltd
lods
fwait
mov
push
sub
jl
cmc
movntq
in
ss
nop
mov
jmp
sub
lret
jae
dec
adc
adc
jg
aaa
mov
imul
es
push
dec
popf
in
pushf
cmpsl
js
add
lahf
mov
push
sub
mov
push
hlt
mov
icebp
push
inc
leave
hlt
mov
cltd
mov
cltd
or
es
repz
sub
push
mov
push
jne
push
and
mov
mov
xchg
es
mov
pop
push
nop
pop
inc
loop
pop
test
aaa
mov
divb
cmp
xchg
cmc
leave
loope
fs
les
cmpsb
mov
out
iret
jecxz
bound
pop
pop
mov
and
leave
jmp
inc
push
inc
jns
roll
lock
inc
iret
sbb
xchg
sbb
xchg
jmp
lcall
std
clc
cli
ss
xchg
sbb
mov
cwtl
not
xor
cmp
dec
dec
nop
stos
sti
mov
push
or
xchg
xchg
xchg
jo
fidivrl
ret
out
outsb
jne
push
test
and
rolb
lds
cmp
gs
mov
mov
xchg
inc
inc
nop
clc
outsl
sbb
xor
dec
cmpl
and
or
fwait
inc
fimuls
lcall
inc
cli
add
adc
jmp
mov
icebp
sub
dec
loopne
imul
push
push
sub
in
icebp
mov
xchg
stos
jle
add
in
pop
jbe
inc
in
cld
dec
cltd
decb
add
mov
mov
pop
icebp
inc
pop
or
cmp
mov
cmc
xor
xlat
int
xor
add
mov
ja
pop
or
mov
add
adc
fsubr
insb
add
xor
mov
mov
cmp
mov
sarb
or
xor
hlt
pushf
mov
push
jmp
push
push
or
sahf
andl
mov
in
xchg
lods
out
pop
xchg
xchg
adc
out
mov
jmp
ss
xchg
repnz
lret
sti
icebp
push
aam
inc
pop
addr16
mov
aam
pop
xchg
pop
jae
sbb
pop
push
dec
or
and
jl
mull
jg
pop
stc
fcoml
and
xchg
mov
lods
int3
jo
adc
jmp
xor
mov
mov
xor
out
or
mov
mov
pop
scas
fsubr
leave
dec
out
mov
mov
xchg
lcall
aad
loopne
ret
sti
test
push
ljmp
xchg
aaa
gs
sbb
xor
lock
adc
aaa
push
ficoml
add
mov
or
jecxz
fiaddl
mov
lods
inc
sbb
stos
inc
adc
lods
gs
mov
push
iret
and
jbe
mov
popa
jnp
ret
jl
mov
aas
int3
inc
shrb
repz
in
sbb
lds
movups
enter
xor
jnp
test
rcrb
scas
or
add
or
jmp
notl
mov
mov
cli
cwtl
lcall
js
lds
iret
inc
lock
or
mov
mov
test
push
cwtl
push
enter
std
xchg
pop
xor
arpl
jnp
test
shlb
jp
nop
movsl
loopne
push
jge
das
and
outsl
mov
adc
lock
ds
mov
pop
ss
les
lock
nop
push
repnz
in
cwtl
cwtl
adc
mov
cmp
imul
mov
popa
cld
jnp
inc
sbb
mov
adc
je
mov
mov
lahf
gs
inc
imul
add
jp
cmp
test
adc
fidivl
xchg
mov
lods
xchg
sub
mov
in
xor
hlt
cmpsb
das
bound
inc
cld
dec
push
es
ljmp
or
popa
mov
xchg
call
imul
int
push
fs
fdivrs
arpl
xchg
aam
ror
test
stos
cmpl
inc
inc
dec
mov
push
shr
daa
test
nop
out
in
jecxz
xchg
ss
pop
divl
repnz
xor
xchg
out
and
ficoml
cmpsl
mov
nop
sub
pop
stc
sub
fsubs
cmc
rcll
xchg
data16
loop
into
mov
loope
test
and
cmp
pop
sbb
cmp
or
in
dec
inc
xchg
pop
dec
cmp
stc
and
push
outsb
ljmp
dec
xchg
jno
and
in
xchg
xor
test
jmp
rolb
pop
dec
lahf
xor
push
push
dec
xchg
cmpsl
mov
popa
or
push
sbb
and
cmpsl
nop
sbb
adc
scas
add
popa
lret
cmc
push
dec
cmp
sbb
inc
pop
test
fcom
xor
out
pop
adc
jb
jecxz
inc
ds
jge
pusha
jno
hlt
leave
adc
test
mov
mov
push
pop
push
dec
pop
cmp
mov
pop
enter
cmc
cmc
pop
aas
je
inc
leave
repz
mov
fidivl
pop
xchg
sbb
scas
imul
ret
pop
xor
dec
mov
sub
mov
fbstp
daa
sub
iret
push
imul
je
fdivl
push
or
imul
sbb
inc
ret
dec
inc
cwtl
mov
xchg
ret
fs
xor
ret
dec
and
jge
pop
lret
cld
iret
decb
js
iret
and
aaa
jb
pop
jge
imul
push
pop
fcompl
push
jno
fstpt
xor
and
outsl
bound
add
lods
jl
xor
dec
xchg
jg
mov
in
call
inc
xor
int
cwtl
mov
and
adc
std
cmp
pushf
xchg
movsl
scas
cli
sub
sub
leave
in
inc
sbb
or
push
mov
pop
cmp
lret
mov
daa
outsb
fldl
into
outsb
xor
lahf
outsb
and
xor
stos
push
pop
fwait
pop
inc
imul
test
xchg
xchg
js
mov
push
int
cld
ja
int
mov
popf
mov
jbe
call
adc
adc
mov
lea
pushf
popl
loopne
sbb
or
stos
into
mov
and
test
or
ja
and
pop
imul
aas
insl
popa
cmp
jnp
sar
scas
inc
gs
push
xchg
add
mov
roll
addr16
in
fists
addr16
push
dec
int3
mov
lds
cmp
and
aad
xor
lods
dec
inc
daa
out
in
or
sbb
mov
jb
lret
inc
cmc
xor
sbb
and
sub
loopne
pop
mov
and
js
xlat
sahf
inc
insb
stos
pop
jp
lods
leave
inc
and
scas
scas
mov
mov
mov
iret
pop
xor
dec
and
dec
ret
fwait
pop
xchg
and
lret
pop
cmpsb
out
jae
mov
mov
ds
dec
shlb
mov
arpl
push
ss
mov
sbb
xchg
fld
push
in
mov
mov
cmpb
call
sbb
push
cmc
fnstcw
pusha
cmp
dec
mov
jge
add
in
stc
dec
xchg
cmc
or
movsb
jno
andb
mov
or
lods
push
dec
outsl
or
pop
mov
push
fs
rorl
or
ret
data16
daa
adc
movsl
mov
imul
sti
lea
mov
cmp
adc
pushf
xlat
pop
imul
ret
and
lds
outsb
xchg
repz
insl
dec
adc
xchg
mov
shrl
xor
adc
mov
xchg
adc
and
jnp
icebp
repnz
mov
jecxz
adc
loopne
dec
pop
neg
into
stc
xchg
mov
lods
shl
leave
aad
xor
cld
xor
call
dec
jg
xor
icebp
push
out
mov
fcomps
popf
or
sbb
mov
std
pusha
xchg
lock
int3
out
cld
pushf
into
imul
xchg
pop
add
jae
inc
int3
mov
outsb
sbb
loopne,pn
and
mov
pop
inc
xchg
fnstcw
inc
and
mov
adc
gs
aad
and
ljmp
pop
mov
mov
jp
shrl
adc
mov
or
aaa
inc
cmp
xchg
mov
mov
in
xor
sbb
sahf
divl
push
lcall
xor
daa
movsb
push
fstpt
xchg
jmp
cs
pop
jmp
push
das
mov
rcr
fs
xchg
test
loop
add
hlt
cmpsl
aad
inc
popa
xor
push
mulb
xor
out
pop
lods
adc
add
iret
push
inc
shrl
jnp
cmp
xchg
adc
orb
mov
mov
cmp
test
add
std
shl
fcompl
inc
aad
push
scas
adc
pop
push
sub
loop
mov
mov
fwait
pop
xor
mov
xchg
int
ja
mov
xchg
xchg
and
shrl
imul
inc
xchg
mov
outsb
push
hlt
xchg
xchg
xor
lahf
jnp
testb
sbb
lods
mov
es
rdpmc
cmpsl
mov
mov
jp
out
push
stos
int
lret
sub
jle
push
pop
jb
mov
and
pop
pop
loop
push
rcl
dec
mov
add
out
add
cmp
setle
or
xor
ret
insb
scas
repz
dec
xchg
test
push
jp
inc
or
dec
outsl
ljmp
xchg
mov
sub
xchg
push
outsb
cmpb
dec
adc
aas
mov
mov
lahf
or
push
mov
and
icebp
xchg
repz
jno
adc
std
loope
lea
outsb
inc
dec
mov
and
cmpsl
xchg
js
fdivrl
insb
jae
outsl
addr16
mov
out
enter
dec
add
adc
mov
jmp
adc
cmp
mov
fdivl
jle
jbe
jecxz
xchg
or
mov
jmp
sub
loopne
sub
test
dec
rcrb
sub
pop
shll
lret
pop
gs
enter
sar
add
dec
pop
cmp
mov
scas
inc
adc
mov
mov
mov
test
xchg
sub
jnp
inc
jge
shr
cmp
mov
sbb
ja
push
clc
add
movsl
jecxz
mov
mov
hlt
scas
or
mov
dec
lahf
dec
xchg
ror
testb
cmpsl
jae
fimull
ljmp
mull
dec
xor
dec
movsb
lea
xor
push
andb
cmp
inc
fcmovne
mov
push
fwait
sbb
mov
inc
das
ss
sbbl
jg
imul
fisttpl
cmpsl
dec
sbb
mov
sahf
femms
icebp
dec
fildll
std
ss
das
xor
cmp
sti
or
mov
jg
int3
add
sbb
sub
neg
and
adc
mov
jnp
push
das
cmp
xor
pushf
jl
sbb
inc
xor
outsb
pop
stos
test
sbb
mov
insl
movsb
cwtl
lcall
out
xorl
shlb
ljmp
int3
fsubr
hlt
mov
inc
inc
jle
gs
je
mov
mov
lods
inc
sub
sarb
arpl
cmp
push
bound
hlt
sbb
sbb
add
sahf
int3
enter
cmp
pop
shrb
daa
aaa
sub
movsb
fmul
mov
adc
insb
xor
shlb
push
pop
sbb
push
cltd
xchg
test
inc
je
mov
loop
pop
inc
dec
and
xchg
add
pop
sbb
je
mov
jbe
push
adc
out
and
jge
ja
adc
cmp
mov
mov
pushf
jae
sub
aam
insl
stos
adc
jbe
xchg
sub
push
jl
iret
inc
sbb
test
pop
lahf
nop
aad
push
icebp
test
loope
jb
push
xor
es
sarl
mov
movsb
dec
dec
dec
pop
aas
jmp
mov
cmp
inc
stc
or
jl
pop
xchg
pushf
cmpsl
cld
fwait
xor
sar
jo
jge
out
push
jp
xchg
pop
test
cmpsl
jno
das
mov
push
sbb
test
mov
xor
popf
in
push
pop
pminsw
sub
insb
bound
push
cmp
inc
faddl
sbb
ss
das
mov
mov
das
dec
cmpl
mov
imul
xor
scas
ds
cmp
jbe
ljmp
sub
int3
or
cmpsb
mov
pop
out
mov
mov
sub
pop
ds
and
push
je
jae
bound
adc
insl
dec
pop
xchg
mov
xlat
mov
cmpb
dec
and
add
push
or
sbb
nop
fdivs
repz
or
and
lret
and
in
popa
stos
call
ljmp
jb
inc
int3
jns
outsl
fwait
add
bnd
js
mov
push
jecxz
pop
mov
pop
fisttpll
push
and
das
inc
sub
and
cmp
push
rclb
sbb
test
pop
and
and
inc
ds
mov
mov
add
pop
mov
add
shrb
cmpsb
mov
ljmp
xchg
insl
cmp
mov
movsl
call
and
push
das
int
lret
pop
add
addb
movb
lret
out
int3
sbb
aas
js
ror
scas
lcall
and
mov
xchg
mov
ds
xor
andb
andl
dec
mov
rorl
and
push
loop
and
addr16
bound
aas
lock
xchg
cmc
arpl
xor
sbb
push
lcall
jae
pop
push
js
ror
mov
dec
xchg
xchg
xchg
rcrb
push
insl
adc
or
xchg
push
sub
sbb
loope
mov
std
or
adc
dec
movsl
push
cmp
xchg
lcall
cld
inc
add
lret
inc
and
adc
cmpsb
sbb
sub
xchg
xchg
jg
mov
mov
add
mov
adc
gs
add
mov
sub
mov
jle
popa
fwait
insb
inc
inc
mov
jb
daa
mov
jnp
add
cs
aaa
mov
ljmp
stc
jg
lea
sbb
fisttps
out
leave
xchg
mov
mov
mov
add
stos
repnz
sub
cmpl
cmp
mov
sub
cld
imul
sti
jo
inc
cmpl
ljmp
add
loopne
movl
and
push
in
loop
scas
xchg
xor
push
xchg
aam
mov
add
cmp
or
aaa
mov
pop
add
jnp
push
cmpsb
inc
cmp
dec
je
pop
addl
adc
push
test
lret
xchg
sbb
cmp
insb
push
sub
fisubl
adc
push
xor
mov
adc
insl
insl
jecxz
scas
mov
icebp
cmp
adc
pop
jb
icebp
test
addr16
mov
or
xchg
mov
movsb
push
or
adc
arpl
leave
popa
xchg
in
lods
ss
repnz
shl
or
lret
in
inc
stos
cs
mov
jnp
adc
ror
push
dec
sbb
jno
outsb
dec
cmp
push
mov
push
pop
pop
int3
rcll
iret
inc
loop
inc
fiadds
dec
loop
xchg
mov
xor
dec
add
inc
push
dec
jns
xor
or
adc
movsb
sub
mov
fistpl
cltd
pop
ficomps
adc
push
lret
xchg
lods
inc
daa
ljmp
xor
test
or
fcmovnb
std
inc
lea
mov
inc
clc
add
dec
mov
and
add
mov
xchg
jbe
cs
cmp
xor
enter
inc
sahf
addl
out
add
jno
lret
loope
mov
pop
imul
mov
xor
rcll
jl
loop
or
pop
push
jno
pop
loope
fldl
jg
insb
lds
inc
leave
int3
sbbl
lcall
jne
cltd
pop
pop
pop
adc
cmp
cld
add
dec
lea
jb
stos
vpunpckhwd
cltd
dec
jnp
das
xorb
repz
dec
dec
lock
sbb
pop
mov
cmpsl
push
cmc
pop
dec
out
cmp
and
gs
js
lcall
and
rcll
cmp
pop
push
cltd
push
ja
pop
mov
mov
sti
sub
push
lock
dec
jp
mov
sbb
sub
clc
sbb
iret
pop
jnp
mov
dec
mov
sub
mov
bound
fisubs
cs
ror
sub
subb
adc
lcall
xor
mov
inc
inc
mov
inc
sbb
das
fnstsw
mov
mov
jb
dec
adc
icebp
cmc
sbb
push
mov
aaa
adcl
mov
or
lds
int
sbb
mov
jbe
adc
cli
and
je
mov
mov
push
xchg
inc
push
dec
in
xchg
jecxz
enter
jnp
inc
pop
sub
pop
aad
incl
cmc
test
xorb
scas
mov
fwait
or
adc
cwtl
xor
dec
fstl
push
lds
insb
mov
les
jns
daa
adc
call
fnstenv
ja
loopne
sti
sahf
pop
and
adc
fs
mov
push
jb
jae
and
icebp
iret
or
andb
mov
loope
nop
es
jnp
lods
scas
shll
scas
jne
sti
arpl
dec
pop
addr16
xor
jns
push
addr16
imul
adc
sti
adc
ja
sbb
jl
jg
xor
pop
ljmp
imul
cld
push
xlat
std
lock
xor
mov
xchg
lret
add
push
mov
out
xchg
fwait
test
mov
mov
or
arpl
sub
dec
xchg
jnp
inc
in
push
fs
jp
data16
push
mov
sarl
add
adc
xchg
pop
push
cli
dec
mov
adc
lock
cmp
rcr
jg
push
push
push
push
jnp
mov
push
mov
ljmp
in
mov
push
lahf
jnp
xchg
outsl
adc
dec
mov
xor
cmp
jl
mov
aam
lret
movsb
dec
pop
add
inc
les
into
and
pop
sbb
fs
movsl
out
push
dec
push
or
xchg
inc
rorl
xor
and
jns
sbb
popa
lock
mov
pusha
pop
clc
testb
mov
out
mov
cmp
das
add
push
daa
cmp
add
es
jle
pop
dec
mov
jbe
gs
jae
cmp
push
cmp
rcr
ljmp
in
or
add
xchg
jmp
inc
xor
daa
lcall
ljmp
jmp
test
mov
or
and
mov
mov
inc
leave
ja
fsubrl
orb
sbb
push
gs
cli
push
cs
cld
in
bound
cmp
jnp
jle
and
adc
leave
mov
std
ret
rolb
jle
int3
ret
inc
sub
test
clc
sti
mov
push
cltd
test
lret
pop
add
dec
ret
add
mov
mov
or
xor
mov
scas
add
ja
jns
enter
das
push
in
test
mov
and
outsl
dec
sti
dec
or
sub
pop
and
xlat
icebp
and
push
movsl
aad
pop
mov
jge
cld
stos
sub
xchg
pop
cli
dec
or
mov
cmp
inc
mov
push
cmp
cmp
and
jecxz
arpl
addr16
mov
jae
mov
testb
ss
pop
xchg
pop
mov
xor
mov
aas
and
mov
cltd
out
xlat
mov
cmp
xchg
sub
cwtl
xor
insl
test
rcrl
inc
in
inc
dec
cwtl
pop
ljmp
sub
mov
inc
jl
adc
fcmovu
or
lods
pusha
inc
loopne
sbb
ret
jge
out
das
pop
pop
mov
push
push
repz
rcrb
shll
nop
xchg
push
add
cmp
adc
mov
push
adc
jecxz
sub
mov
jno
outsl
mov
xchg
lock
es
loop
call
jecxz
stc
pop
dec
sbb
mov
test
cmpsl
cmp
leave
mov
dec
mov
xor
cmp
or
add
push
ret
pop
fsubs
testb
dec
or
sub
cmp
jne
xor
dec
inc
inc
fsqrt
hlt
push
sbb
mov
xchg
lret
sbb
inc
push
test
fiadds
mov
push
arpl
jns
cwtl
inc
addr16
loop
xor
fdivs
push
mov
imul
stos
test
call
int3
lock
jmp
out
cmp
ret
fisttpll
mov
xor
iret
pop
and
xchg
repz
int
fcomps
pop
pop
sbb
add
std
or
pop
sub
cmp
xor
mov
or
push
lahf
cmp
mov
inc
mov
cmp
adc
push
pop
incl
mov
jns
add
ds
idivl
xor
dec
sub
xchg
arpl
inc
pop
jmp
int3
cmp
aam
das
mov
sub
dec
mov
insb
fs
or
loope
fmulp
test
movsb
jnp
gs
push
orl
mov
sub
mov
sub
push
cwtl
shrl
add
fs
and
ds
lcall
xchg
loopne
pop
push
popl
sub
xor
sub
ds
out
ficompl
fcoml
and
adc
pop
lret
sbb
pop
push
imul
insb
sub
xchg
ret
xchg
leave
jl
popf
fadds
call
pop
fisubrl
jnp
pop
sub
popf
arpl
aas
inc
leave
and
es
call
pop
xor
add
xor
popf
out
mov
mov
pop
mov
sbb
cmp
aad
nop
add
pop
test
jo
testb
pop
das
or
test
mov
nop
push
stc
xchg
jle
jle
xchg
fs
rcrl
xor
and
pusha
pop
and
clc
idivl
jno
frstor
dec
cmc
movsl
aam
sbb
add
out
movsl
push
mov
pop
imul
fsubr
movsl
mov
out
jb
cs
xchg
call
test
sahf
mov
std
lods
ds
pop
and
cld
and
stc
jmp
cs
fs
mov
pop
push
add
xchg
push
imul
mov
cmp
sbb
inc
inc
and
or
cltd
in
mov
pop
adc
ficomps
inc
lock
int3
aaa
scas
leave
mov
out
xchg
frndint
fdivr
sbb
mov
int
xor
fwait
ja
and
push
push
dec
fwait
mov
dec
push
aad
enter
sbb
push
cwtl
roll
dec
outsl
aad
and
ds
or
pop
lea
jecxz
jge
sub
popa
inc
xchg
sbb
sub
lds
and
daa
lahf
xor
and
lock
jge
addr16
mov
lret
xlat
lods
jge
jbe
movsl
xlat
int
notb
icebp
fisttpll
and
or
rorl
xor
cmp
fs
cmc
lods
es
popa
adc
push
adc
shll
fsubrl
sets
std
std
scas
les
or
aad
cmp
movsl
pop
repz
mov
mov
push
shrl
adc
adc
mov
dec
imul
mov
imul
imul
xchg
dec
stos
stc
shll
dec
xchg
mov
outsb
cmpsb
and
sti
mov
add
mov
jmp
std
add
mov
cmp
pop
test
mov
cmp
adcb
rcll
or
int3
shrb
decl
scas
mov
jp
outsl
enter
pusha
std
push
dec
daa
je
cwtl
xor
imul
adc
push
mov
add
icebp
xchg
sahf
adc
dec
leave
jp
ret
xchg
imul
cmp
cmc
ficoms
les
lods
int3
loope
pop
and
mov
push
insl
mov
and
pop
sub
jb
inc
dec
push
pop
jns
push
add
out
xor
sbb
or
nop
nop
test
push
fmuls
push
cwtl
or
and
jmp
out
test
imul
cli
fcmovbe
push
push
test
insb
xchg
inc
dec
shll
ds
movsb
shl
sbb
sbb
or
aas
sbb
pop
pusha
jg
sbb
xchg
mov
xlat
mov
aam
jl
orb
pusha
es
in
icebp
movsl
cmc
dec
jp
jecxz
push
and
mov
ja
push
scas
push
pop
cmp
leave
jo
sbb
ret
and
les
jl
xor
fadds
pop
leave
mov
or
or
push
and
out
int3
popf
aaa
mov
or
leave
test
popa
jecxz
sub
hlt
aad
incl
fdivs
lret
insb
mov
dec
das
push
and
dec
enter
pop
xchg
cmc
shl
xchg
nop
adc
mov
cmc
adc
jbe
std
jne
outsb
inc
and
jg
add
ja
fisttps
pop
dec
pop
dec
push
jb
dec
fs
xor
mov
push
add
sar
pop
rorl
test
icebp
inc
jb
lret
dec
xchg
add
or
fidivrl
sub
dec
insb
jns
push
fcomps
ret
push
jle
cs
push
mov
movsb
cli
repz
mov
push
inc
das
fbstp
add
dec
and
scas
testb
inc
inc
loop
stos
fs
jge
inc
in
ja
push
js
roll
jecxz
jmp
pop
xchg
mov
std
mov
mov
mov
js
jge
out
xchg
inc
push
leave
inc
xchg
cmpsb
icebp
sub
repnz
push
popa
loopne
lds
imul
cmc
lods
in
neg
push
sub
push
xor
or
cli
push
testl
cs
inc
add
jmp
mov
jbe
sub
cmpsl
imul
xchg
arpl
pushf
mov
fdivs
cmp
sub
repnz
sbb
hlt
and
mull
sub
add
xor
mov
sti
fwait
mov
ds
mov
push
out
inc
data16
ss
and
sub
sub
insb
push
test
iret
dec
movsl
jae
mov
and
cmp
testb
and
cmp
lds
and
arpl
das
pushf
adc
sahf
mov
or
ja
movsb
push
aaa
jno
xor
xor
or
cmp
add
in
mov
cmpw
lods
jg
imul
push
out
cwtl
sub
rcrb
sbb
outsl
jmp
inc
pusha
sub
sub
pushf
popa
incl
push
jl
mov
xchg
cli
clc
push
jge
jl
hlt
pop
je
aad
imul
or
inc
dec
add
push
js
decl
jp
and
sar
jbe
pop
mov
xchg
inc
addl
mov
or
filds
xchg
pop
andl
fcomi
ljmp
cltd
jo
icebp
sahf
inc
xor
sbb
pop
movsb
iret
xchg
testb
jb
test
mov
fmul
jmp
cmp
sub
mov
push
or
sub
cli
mov
daa
stos
out
rol
sti
xor
lds
sbb
pop
roll
pop
cmpsl
insb
movsl
mov
subl
mov
mov
rcrb
sub
cmp
data16
pop
imul
aad
jbe
or
clc
fnstsw
sti
hlt
cmp
imul
stc
inc
pusha
and
cltd
inc
dec
mov
xor
adc
scas
mov
sub
rcr
repnz
shrb
cmpsl
imul
cmpsl
lds
sbbb
xor
cmpsl
negb
add
mov
gs
shll
jne
lret
push
inc
mov
or
lahf
adc
mov
lea
or
imul
and
je
shl
in
lret
int3
ret
nop
cs
movsl
inc
jg
jmp
jae
icebp
test
test
outsl
push
das
jo
jae
inc
scas
xchg
cs
add
mov
and
in
pop
mov
ljmp
cmpl
enter
sub
loope
or
test
mov
xchg
imul
pop
add
jbe
shrl
dec
xchg
jb
aas
cmp
adc
push
lock
daa
repz
sbb
adc
or
out
nop
jb
in
out
addr16
sub
faddl
pushl
pop
rcr
clc
cmp
sbb
mov
jbe
or
push
stos
inc
aas
inc
sub
shlb
jb
sub
sbb
pop
add
daa
dec
xchg
negl
jb
out
adc
mov
push
cwtd
or
pop
push
pop
or
pop
pop
sbb
test
mov
sub
add
stc
mov
icebp
js
dec
fcmovnu
vshufps
out
mov
sarb
mov
cs
mov
sub
mov
adc
int3
cld
push
mov
imul
xor
xchg
popa
cwtl
push
sbb
popf
call
pop
mov
adc
jno
lret
in
sub
mov
or
cltd
rclb
dec
shlb
pop
inc
out
pop
jle
adc
clc
cmc
imul
push
test
sbb
sarb
data16
jge
push
sbb
mov
push
add
cltd
std
loopne
inc
lods
add
lea
inc
popf
insb
sbb
push
dec
inc
aas
mov
jno
mov
or
xchg
lock
mov
pop
int3
andl
mov
inc
mov
mov
fdivs
push
iret
fbld
in
sarb
in
cmp
pop
insl
arpl
movsl
sub
add
fwait
inc
ficoml
subb
insb
pop
or
addr16
pop
insb
sbb
lret
pop
pop
out
daa
sbb
stos
or
insl
lahf
ror
popa
adc
inc
fnsave
in
imul
das
mov
push
pop
and
ret
cli
loop
sub
js
stc
mov
push
ja
mov
or
dec
cmpsb
lods
cmp
bound
sbb
movsl
dec
inc
jmp
test
hlt
sub
sub
addr16
orl
fwait
jp
repnz
pop
leave
ret
pop
and
aad
mov
mov
bound
jne
jo
mov
xlat
cwtl
mov
mov
sbb
addr16
xchg
loopne
outsl
mov
push
pop
xchg
mov
rorl
sub
pop
xchg
and
test
in
rcll
icebp
movsb
adc
in
ret
xor
jo
sti
and
push
test
fstpt
pop
shlb
ljmp
sbb
mov
inc
sarb
imul
scas
cwtl
orb
mov
sub
mov
das
push
jge
imul
and
call
xor
pop
push
mov
das
jnp
xchg
dec
push
or
add
push
rcl
mov
dec
mov
int3
add
push
push
push
mov
sub
sbb
imul
sbb
mov
xchg
lret
bound
mov
lods
push
mov
xchg
inc
mov
or
xor
call
jae
repnz
scas
mov
not
jno
mov
cld
fidivrl
mov
scas
lcall
out
inc
nop
sub
mov
in
ret
ja
dec
or
mov
scas
les
test
add
out
xor
xor
rcrl
call
data16
pop
mov
lahf
jb
aaa
repnz
cmp
mov
or
scas
sub
lds
jecxz
mov
imul
adc
repz
and
mov
pop
inc
adc
lret
mov
push
nop
ret
mov
add
dec
imul
push
mov
cmp
sub
adc
adc
adc
std
pop
mov
xor
adc
shll
inc
dec
sub
sub
mov
push
fidivrs
fwait
popa
insl
std
cli
lds
or
cmp
sub
ds
psubusw
addr16
jo
divl
dec
fmull
xchg
sub
xchg
in
cmp
stc
mov
shl
call
xchg
sub
fiaddl
fdivr
mov
daa
ss
stos
adc
jl
pop
mov
outsb
das
or
xchg
push
push
pop
sbb
jo
negb
xlat
xchg
sub
adc
sti
mov
add
xchg
lock
cmpsb
stos
mov
jno
dec
outsb
repz
xlat
mov
add
and
mov
dec
xor
addb
xor
add
sarb
das
loopne,pn
in
xchg
adc
jo
ljmp
dec
mov
jle
mov
push
and
aam
flds
dec
divb
or
mov
lret
mov
das
clc
adc
fildl
scas
out
arpl
cmp
ret
inc
xchg
mov
pop
rcl
orl
popf
jmp
and
cwtl
stc
push
xchg
adc
fisubrs
addr16
ss
cli
mov
sbb
call
jg
bound
sub
test
pop
mov
or
pop
push
cmpsb
or
sbb
movsl
int3
out
cld
mov
push
xchg
out
icebp
pop
mov
jae
ror
xchg
aad
and
jmp
ss
into
or
xchg
mov
call
sbb
push
cmp
add
insb
dec
lods
mov
std
pusha
dec
cwtl
imulb
arpl
pop
dec
mov
cmc
loop
js
pop
add
mov
in
bound
addr16
clc
or
mov
sub
pop
scas
jecxz
cmp
sbb
pop
push
push
mov
push
sub
leave
and
mov
add
stos
jbe
out
push
add
or
sub
cli
inc
xchg
inc
lods
push
fsubs
xchg
dec
scas
mov
jle
ljmp
push
stos
fiadds
cmpsb
mov
sub
dec
mov
xchg
out
push
sub
into
dec
inc
push
xchg
ret
in
incl
adc
iret
decb
xchg
mov
jnp
dec
movsb
test
mov
add
xor
add
faddl
loope
inc
and
in
sbb
rorl
leave
popl
clc
and
fldt
jecxz
enter
dec
cmp
mov
test
mov
pop
push
mov
sub
pop
cmp
pop
popa
sahf
pop
enter
push
std
pop
in
in
pop
xchg
jmp
rorl
enter
pop
mov
pop
pop
mov
or
jbe
pop
out
sub
sbb
cmp
mov
xchg
bound
sbb
xor
xchg
aam
sub
pushf
in
or
push
mov
int3
popf
add
loopne
ret
dec
cmp
orl
js
insb
or
cs
dec
adc
lods
rcrl
mov
xor
xchg
mov
pop
or
mov
pop
cld
sbb
fdivr
adc
das
stos
out
and
mov
sbb
lea
inc
xor
xor
push
scas
adc
je
xchg
pop
pop
push
scas
xorl
sub
adc
sub
cwtl
push
subb
jbe
or
cld
mov
pop
out
rorl
inc
fisttpll
dec
xchg
std
out
rcrb
add
pop
sarb
loopne
adc
sub
enter
jo
xor
or
lret
in
sbbb
scas
sbb
cmp
movsl
outsb
das
lcall
push
and
pop
add
push
data16
fs
repnz
dec
nop
xchg
inc
pop
in
nop
in
test
sub
orl
jnp
pushf
push
pop
mov
adc
pop
mov
lcall
sub
adc
es
push
push
inc
aas
dec
lahf
dec
jl
xchg
cwtl
fisubl
cmpsl
pop
movsl
test
rcrl
sahf
and
das
jbe
loopne
es
bswap
arpl
insl
xor
rcl
leave
fadds
cmp
jle
cmpsl
dec
das
xlat
in
aas
dec
jp
mov
into
popa
mov
imul
push
out
shll
lcall
fisubrs
lock
xchg
cltd
or
sbb
cmpsb
mov
jle
or
fcoml
jb
lret
mov
mov
sti
sbb
add
cmp
je
cmpsb
in
mov
sti
orb
mov
jno
sti
dec
popf
lret
and
xchg
mov
das
sbb
pop
aas
cmp
bound
adc
fsubrl
lods
dec
adc
insl
mov
jne
loope
test
xor
sub
cmp
add
rcrl
in
and
cs
push
shlb
loopne
mov
dec
xlat
je
nop
rcl
inc
xor
add
mov
push
lock
jns
dec
decl
fsts
es
in
xor
movsb
push
imul
das
jecxz
out
outsl
mov
andl
jp
dec
jns
test
pop
testb
sahf
dec
mov
in
das
gs
sub
sub
repz
dec
xor
add
mov
jbe
hlt
mov
push
ja
inc
shl
cli
cmp
xchg
cmpsb
pusha
push
repz
push
pop
lcall
dec
mov
lea
add
mov
jbe
sub
das
or
mov
adc
loop
pop
pop
pop
movsb
repnz
xor
fnstsw
fmuls
das
cwtl
ds
add
stos
pushf
mov
pop
loop
adcb
push
mov
out
stos
shrl
pushf
clc
xchg
gs
nop
enter
test
int3
dec
and
aas
js
push
mov
push
pop
and
ret
or
adc
cltd
clc
mov
sbb
push
mov
std
add
cli
xorb
cld
out
push
out
cmp
inc
push
push
mov
sub
nop
aaa
mov
iret
mov
mov
mov
lock
pop
adc
movsl
lods
stos
jge
add
sbb
addr16
push
mov
out
xor
lods
cmp
sbb
pop
sub
imul
fists
mov
push
push
sbb
and
mov
in
mov
jbe
pop
data16
adc
loope
into
sbb
pop
sbb
or
cmp
pop
rcll
leave
inc
sysexit
and
push
push
dec
insb
sbb
xlat
fs
nop
xor
push
jecxz
cld
sbb
jbe
loopne
lret
call
stc
pusha
loop
or
ds
aas
dec
mov
outsb
dec
ds
dec
cmp
lret
shrl
fdivl
pop
jnp
repz
leave
adc
imul
les
pop
cli
push
call
mov
call
inc
mov
push
es
ret
mov
icebp
imul
xor
pop
pusha
inc
xchg
push
dec
je
sbb
fcoms
das
pop
add
and
int
imul
adc
push
adc
xor
sbb
mov
push
dec
push
lods
xchg
ret
cmp
cwtl
dec
bound
jne
movsb
xor
aaa
jp
add
fnstenv
out
mov
sub
roll
cmp
and
scas
pusha
fadds
lock
push
movsl
adc
adc
daa
aad
aas
xchg
insl
cmc
dec
cli
lea
fsqrt
lock
movsl
gs
stos
adc
mov
jmp
sbbl
mov
cmp
xchg
sub
dec
mov
inc
xlat
jg
inc
push
adc
jp
sbb
jmp
push
jnp
add
aam
lods
popf
dec
pop
pop
jbe
mov
jne
insl
xor
push
flds
lods
mov
aad
sbb
and
or
data16
dec
lods
cmp
int3
aas
into
or
adc
pop
nop
xor
dec
ss
addl
adc
xchg
push
movsb
cmp
out
cmp
test
pop
imul
cmpsb
jl
or
xchg
lds
pushl
es
pop
out
inc
mov
jno
cmpsl
aam
jo
mov
cmp
fisubs
mov
inc
negb
or
xchg
xor
testb
sub
dec
sahf
fcoml
lcall
mov
sub
inc
fnstsw
jmp
cmp
or
push
fstl
cmpsl
pop
pusha
enter
add
or
arpl
test
out
mov
cmp
mov
add
or
enter
ret
inc
jbe
fstpl
dec
ret
xor
fcomip
jecxz
xchg
pop
xchg
cltd
mov
dec
add
jo
das
sbb
repz
leave
cmpsl
imul
daa
lock
dec
pop
movntq
mov
loope
into
sahf
mov
enter
cmp
outsb
mov
add
mov
cmpsl
stos
test
stc
and
pop
jl
push
and
dec
imul
movsl
lods
fisubs
test
jl
xchg
push
add
mov
push
or
push
pop
push
inc
cmp
pop
sub
aas
rcrl
inc
cmc
jp
push
fcomp
std
xchg
cmp
fisubrs
outsb
addr16
repnz
cltd
xchg
pushf
lock
add
xchg
inc
inc
iret
daa
push
aam
ljmp
pop
cmpsb
mov
hlt
lds
inc
mov
out
out
das
jno
add
mov
fwait
dec
push
cmpsb
daa
fs
aaa
push
das
inc
xor
cmp
jecxz
movsl
sbb
ret
mov
outsb
mov
push
fstp
sub
or
aam
sub
test
xor
int3
lds
pop
cmp
dec
jl
and
xchg
dec
pop
pusha
cmpl
pop
repnz
sbb
aas
push
mov
lret
and
jns
sbb
sti
cmp
mov
pop
mov
mov
mov
popa
mov
mov
cmp
in
xchg
push
sub
repnz
cmp
xor
std
int3
sarl
add
scas
and
mov
enter
jge
orl
int
out
test
setne
adc
jg
cld
stos
out
scas
std
jge
stos
dec
jnp
cmp
cmpsb
pop
addr16
lods
push
subb
out
icebp
das
and
popf
js
out
push
cmp
push
xor
aaa
jne
dec
and
push
pop
jge
enter
add
sbb
mov
push
mov
xorl
sub
pop
in
loopne
insb
je
cmp
cmpsb
sbb
mov
xchg
mov
std
jmp
cwtl
fmul
cmp
test
dec
jmp
insl
dec
and
fildl
dec
cmp
test
jae
pop
fbld
xchg
pop
outsl
out
add
mov
xchg
mov
mov
dec
and
cmc
dec
xchg
div
mov
sti
dec
ret
ja
hlt
or
dec
mov
cmpsb
jbe
push
sub
adc
push
into
xor
cmpsb
xor
bound
sarb
outsl
sub
pop
jnp
das
cld
sub
mov
or
stos
mov
push
pop
mov
mov
jb
dec
jecxz
dec
mov
mov
outsb
mov
imul
cli
jmp
sub
pop
cmpsl
xchg
call
int3
xchg
js
fmuls
cmp
loopne
sub
push
jns
scas
call
push
xchg
decb
insl
mov
mull
shll
pop
std
and
lods
ds
ror
test
es
out
dec
fucomip
xchg
dec
aam
stc
ss
add
inc
jb
and
mov
mov
mov
fdivl
dec
std
stc
push
xlat
mov
inc
cmp
repz
lock
mov
push
nop
and
in
add
fldl
jcxz
sbb
stc
mov
jp
in
sub
push
mov
jno
je
scas
adc
nop
adc
or
fs
cmp
pop
dec
rcl
mov
or
pusha
ret
cmpsl
imul
mov
mov
push
shlb
dec
and
mov
mov
add
loope
rorb
gs
and
pop
mov
leave
fcomps
pop
mov
addl
pop
mov
or
mov
int
jne
orl
cmp
cmpsl
pop
xchg
pop
int3
adc
aam
dec
stc
mov
dec
test
jmp
ds
popf
mov
mov
adc
mov
mov
mov
iret
loop
xchg
push
repz
mov
shr
cmc
push
cmp
push
push
testb
mov
es
jns
add
mov
xchg
test
mov
mull
push
fldt
aad
jp
add
dec
sub
shr
sarl
sbb
sub
sub
into
xchg
mov
popa
int3
cmp
repz
cld
push
insb
notl
inc
pop
jmp
adc
mov
add
ret
sub
sti
adc
pop
or
add
enter
push
inc
out
pop
jle
adc
aam
sbb
cmp
loop
popl
mov
inc
test
iret
inc
fwait
in
daa
push
or
fwait
push
and
mov
mov
int
sub
fabs
xchg
sub
lds
not
ljmp
or
mov
lea
add
fidivrs
or
leave
shrl
push
cld
out
sub
mov
cmp
inc
stos
lahf
bound
mov
jnp
insb
mov
and
aad
negl
jmp
push
jp
inc
loopne
stos
ljmp
lock
sbb
and
adc
jge
outsb
or
sti
mov
test
inc
cltd
cwtl
pushf
adc
jge
fiadds
mov
test
mov
mov
mov
daa
xorl
sarl
ret
pop
loop
aad
mov
scas
imul
cwtl
es
jp
and
fldcw
sbb
inc
xchg
data16
mov
mov
and
jmp
movb
lret
mov
aaa
sbb
pop
scas
jns
jbe
add
jmp
leave
mov
adc
xchg
movsb
jns
and
cs
or
stos
shrb
adc
jne
insl
and
out
pop
cs
les
push
aam
mov
outsl
repnz
ficoms
or
lock
or
pushf
mov
xchg
jl
sti
xchg
sbb
lds
std
in
dec
pmaddwd
out
data16
pop
mov
push
scas
in
mov
stos
pop
sbbl
mov
add
and
push
dec
pop
in
push
rcr
jno
scas
inc
mov
fadd
jo
jp
into
mov
cmp
mov
push
repnz
stos
out
rcrb
repnz
adc
test
popf
test
pop
lahf
push
jns
popl
mov
clc
adc
mov
call
stc
pop
in
and
cli
pop
rcll
jge
into
loopne
pop
mov
and
pop
inc
jp
fildll
std
fwait
je
scas
notl
ret
sti
sahf
mov
adc
dec
pop
fcomps
jg
xchg
lea
pop
jmp
mov
inc
jmp
and
les
clc
dec
push
pop
or
add
cs
idiv
ss
cmp
movsl
jno
in
movsb
mov
insl
into
cmp
xchg
push
jp
mov
cmp
mov
out
imull
xor
or
ficoml
int
lret
or
pusha
sub
in
imul
mov
mov
mov
repnz
imul
loop
fistpll
gs
iret
std
push
mov
cmpl
or
divb
data16
fsubrl
or
das
mov
sbb
adc
int3
and
in
mov
arpl
sbb
stc
jb
jo
push
mov
aaa
stc
cmp
inc
sub
inc
loop
outsl
mov
andb
pop
call
add
repz
loop
add
push
mov
pop
pop
sub
mov
inc
add
or
xchg
xchg
or
popa
shl
fwait
test
imul
sub
orb
or
test
in
xchg
cmp
ds
xchg
fidivrs
fs
or
ja
addr16
loopne
push
pop
out
iret
aaa
cld
dec
mov
insb
xchg
mov
in
std
popa
fmuls
xor
loope
lds
test
jmp
loop
sbb
push
rol
sbb
sbb
xchg
cli
push
fildll
pop
loop
and
push
fistl
cmp
jle
mov
ficompl
dec
xchg
cmpl
pop
pop
dec
cmpsb
xor
mov
jle
in
pop
inc
imul
data16
es
ss
xchg
jbe
loope
imul
add
xor
mov
mov
enter
je
int3
xchg
add
add
dec
mov
push
into
loopne
test
push
xchg
lret
int3
inc
iret
dec
pop
dec
pop
push
push
in
pop
nop
inc
test
stc
cmp
xchg
xchg
mov
pop
sbb
cwtl
mov
cli
out
sub
xchg
push
fcoml
popf
jno
mov
or
xlat
lret
mov
mov
lds
cmp
push
mov
in
subl
push
cmp
sbb
cmp
inc
inc
xor
in
pop
inc
mov
adc
mov
xchg
loopne
mov
scas
inc
add
insl
imul
fsubrs
imul
stos
aaa
jecxz
or
push
jne
dec
loopne
inc
sub
and
or
shlb
xchg
idivl
fisubrl
ss
xchg
outsb
iret
or
stos
daa
xchg
mov
incb
jb
push
cmc
in
inc
adc
add
inc
flds
test
mov
mov
xchg
add
mov
add
xor
mov
sarb
insl
aaa
and
jno
or
pop
push
cmc
cmp
sbb
pop
in
push
rep
insb
in
cmp
jge
cmp
mov
and
into
xchg
sahf
jnp
loopne
mov
or
in
sbb
stos
pop
lods
out
mov
jmp
repz
adc
jmp
leave
sbb
push
inc
lea
mov
dec
mov
fcmovnu
into
into
das
insb
fld
ds
or
insl
iret
cmc
sub
mov
xlat
lahf
jne
imul
stos
inc
cs
sub
add
xchg
xor
sbb
sbb
orl
sbb
aad
sub
sub
test
lret
sub
aad
dec
push
or
sub
mov
pop
xchg
pop
jae
fsts
xchg
inc
roll
or
push
mov
dec
sti
out
push
shll
cld
xchg
jae
js
pop
ja
push
mov
clc
data16
repz
dec
es
add
mov
mov
mov
mov
pop
mov
jne
add
jg
pop
in
mov
mov
xchg
mov
xor
pop
ret
cmp
cmp
in
stos
enter
xor
clc
mov
fldcw
nop
dec
imul
mov
shlb
mov
adc
adc
mov
xchg
xchg
mov
into
push
rol
push
data16
iret
xchg
adc
inc
ficompl
outsb
mov
jbe
in
imul
pushf
sbb
inc
push
push
jno
push
and
xor
iret
and
mov
jne
fdivrs
or
les
pop
lods
arpl
popa
mov
push
es
sbbl
mov
push
sbb
jmp
sub
cmp
push
fwait
add
push
push
fistpll
xchg
mov
arpl
negl
int
ljmp
cmp
xchg
cmp
mov
pop
inc
sub
push
pop
pop
arpl
mov
xchg
inc
scas
test
lea
jp
adc
cmp
adc
div
adc
shl
lret
or
push
cltd
add
into
test
in
pop
fnstsw
cwtl
sbb
inc
arpl
inc
jmp
ljmp
jmp
dec
cmp
push
in
push
out
jecxz
lahf
adc
cmpsl
mov
cmp
sbb
lret
int3
pop
xchg
jle
ja
int
sbb
xlat
lods
addb
jg
ret
imul
jp
ficomps
mov
jmp
cmp
fistpl
outsb
in
ja
sahf
dec
sub
xor
adc
jbe
xchg
cld
xlat
lods
imul
mov
scas
fbstp
and
pop
push
pusha
mov
bound
daa
vsubsd
roll
hlt
cli
sbb
enter
push
dec
jns
mov
add
cwtl
das
xor
inc
mov
test
or
out
stos
sbb
push
aad
fwait
mov
bswap
xor
mov
jl
dec
pop
mov
out
mov
lcall
add
xor
adc
lahf
and
xor
dec
call
call
out
cmp
xor
adc
mov
dec
ret
aaa
mov
mov
lods
adc
hlt
mov
mov
xor
sub
and
jne
inc
jge
popf
mov
aas
aaa
and
rorl
add
pushf
xor
test
fwait
test
shl
xlat
and
sub
addr16
shrl
fs
cmc
fwait
and
ret
cmp
mov
cmp
jecxz
fs
out
adc
out
push
adc
ja
sub
add
fadd
repz
stc
repnz
neg
cwtl
mov
pop
adc
cmp
and
imul
cmp
cli
arpl
pop
mov
je
lods
xchg
lahf
add
sahf
out
imul
mov
jnp
lahf
ds
jp
push
or
jle
shrb
mov
inc
jb
sub
inc
stc
dec
popa
dec
scas
dec
scas
jecxz
test
lods
movsb
int
in
or
fcmovu
fiaddl
or
pop
je
fwait
into
inc
xchg
mov
jb
imul
cmovge
movsb
sub
sub
push
push
fbstp
mov
dec
add
adc
xor
aad
xchg
icebp
sbb
sbb
cli
cmc
mov
cltd
mov
aad
je
adc
jl
xchg
push
add
push
jge
stos
lret
inc
notb
aam
pop
imul
cmp
fstpt
jmp
dec
sub
inc
daa
and
xchg
cltd
add
popf
popl
push
sbb
loopne
cvtpi2ps
xchg
or
pop
jnp
shlb
and
cmp
out
pop
mov
shlb
cmp
test
inc
xor
movsb
les
or
push
sbb
gs
loope
push
sar
fnstcw
xchg
shlb
push
push
jbe
mov
cmp
jno
fisubl
sub
xor
scas
jle
jne
shrb
mov
or
mov
cli
xchg
cwtl
or
ljmp
jg
xchg
mov
jb
es
cmpsb
jmp
imul
int3
dec
xchg
mov
sub
mov
aaa
pusha
ficompl
fwait
mov
push
test
rcrl
adc
pop
inc
mov
xchg
lret
out
nop
add
cmp
push
outsb
pop
movsl
pop
mov
add
ds
and
clc
pop
sub
cmp
iret
test
pusha
inc
insl
pop
adc
gs
ljmp
je,pn
and
nop
cmp
or
push
mov
stos
rcl
inc
inc
mov
sarl
ss
cmpsb
xchg
inc
shll
add
scas
lea
mov
in
push
sub
vmwrite
xor
sub
cmp
dec
push
push
aad
jle
mov
fldl
scas
mov
and
loopw
lret
adc
sbb
jl
sbb
mov
cmp
lss
xchg
cmp
push
dec
in
cs
mov
outsl
test
jp
jns
stos
out
cmp
notb
cmp
stc
inc
jns
or
roll
orb
cmp
cmpb
or
imul
loopne
inc
cmp
cmp
mov
mov
jmp
mov
das
sbb
jg
sbb
arpl
imul
adc
scas
mov
cmp
hlt
mov
jae
clc
test
cltd
and
leave
mov
and
pop
test
sbb
imul
loope
adc
jno
mov
loope
mov
mov
cmpsb
mull
xchg
sub
mov
jl
pop
lret
roll
fstpt
ret
scas
pop
loope
xchg
xor
pop
dec
pop
and
dec
pop
js
push
adc
pushf
push
xor
popa
adc
add
add
ret
lcall
int3
pushl
cmp
ljmp
pop
sub
or
das
adc
lea
and
into
xor
jno
jge
or
nop
jge
adc
aaa
pop
adc
mov
dec
ficoml
push
sub
insl
scas
add
jl
sub
add
shlb
arpl
sub
lods
orb
adc
mov
sbb
or
dec
aam
shld
jae
in
mov
cltd
adc
jb
daa
and
jmp
mov
popf
fwait
nopl
addb
and
push
mov
pop
stos
pop
daa
mov
jp
pop
inc
add
xchg
aam
sub
pop
inc
adc
leave
jp
pop
les
das
or
xchg
dec
pushf
pop
push
fisttpl
fisubl
mov
sbb
sub
imul
xor
fwait
outsb
or
repnz
and
aas
rcr
sbb
gs
xor
mov
repnz
aaa
inc
out
pop
push
adc
adc
lahf
loope
js
fimull
jp
aaa
dec
cmpl
or
aam
jne
push
mov
seto
pop
fldpi
lret
add
sub
add
cmpsb
adcb
mov
shlb
push
movsl
xor
inc
xchg
sub
shlb
xchg
mov
pop
pop
lret
js
lds
and
icebp
ret
dec
dec
fisttps
dec
test
jle
xchg
lock
icebp
xor
push
dec
stc
cwtl
push
add
jae
or
mov
test
popf
ljmp
and
cwtl
imul
movsb
iret
and
xor
or
mov
loope
inc
sahf
nop
andl
pop
test
pop
mov
out
pop
fstpt
ds
or
adc
push
sarl
fucom
mov
mov
xchg
push
push
adc
lock
clc
aas
test
int
dec
hlt
sbb
mov
std
adc
rcrb
cmp
push
cmpsb
mov
mov
negl
jecxz
call
aaa
inc
jmp
adc
cltd
pop
addl
mov
mov
push
sub
subl
lret
mov
int3
dec
std
ret
leave
jecxz
test
sahf
iret
mov
adc
pushf
cmp
mov
pop
pop
lcall
xchg
dec
pop
xchg
jns
inc
and
stos
pop
xchg
je
lahf
or
xchg
movsl
fisubrs
je
adc
ja
pop
rol
ret
cmp
dec
fiadds
into
xchg
xchg
ss
mov
fstps
xlat
add
mov
pop
fs
inc
sahf
in
shl
and
dec
das
fsts
sahf
mov
and
leavew
std
pop
mov
ret
cld
das
pop
pop
test
std
adc
sbb
cmp
roll
mov
mov
mov
jge
lahf
lret
push
pop
sub
test
pop
addl
arpl
inc
xor
sahf
sbb
imul
into
mov
in
movsl
aaa
inc
mov
xor
add
mov
iret
bound
add
in
pop
pop
and
xchg
adc
mov
dec
pop
inc
pop
xchg
sbb
and
jnp
mov
mov
cmpsl
mov
xlat
xchg
adc
pop
nop
cmpsl
mov
mov
push
sub
out
mov
jo
jmp
sbb
in
rcrl
inc
test
mov
mov
lds
out
sbb
xchg
add
push
mov
mov
lret
mov
ja
sub
and
out
jecxz
outsb
pusha
add
push
cs
in
bound
dec
push
push
jae
sbb
jb
divl
lock
repnz
cmp
mov
push
jae
test
and
pop
cmpl
mov
movsl
les
mov
dec
sbb
jp
push
push
cltd
and
stc
add
ja
mov
aaa
push
pop
aas
sahf
push
sti
pop
adc
push
ret
mov
cmpsb
fcmovbe
gs
mov
repz
push
cmp
xchg
out
jecxz
or
and
sbb
add
pop
ss
shlb
or
or
xor
sti
push
cmpsb
fucom
pop
push
push
mov
pop
fdivp
add
mov
sub
push
sub
cmpl
loopne
pop
cmpsl
fdivs
mov
cmp
hlt
mov
push
mov
sbb
mov
mov
ja
and
lret
mul
int
pop
enter
mov
xchg
jbe
mov
hlt
sub
and
xor
inc
jmp
inc
jmp
test
push
push
js
pop
mov
out
in
out
stos
pop
jge
test
arpl
pop
inc
sahf
add
rcll
xor
push
mov
repnz
mov
xor
xor
mov
adc
rolb
int
add
or
jle
add
xchg
xchg
pop
shr
ss
sbb
jne
mov
fistps
loop
xchg
sbb
push
mov
and
mov
dec
mov
mov
cmp
mov
leave
js
xor
ljmp
aam
scas
aaa
ret
mov
xchg
fcmovu
dec
mov
xchg
cmp
sub
iret
mov
mov
fldl
jecxz
mov
ljmp
lahf
sub
notl
sub
add
outsb
fldcw
or
push
sub
inc
or
ljmp
mov
jecxz
mov
cmpsb
dec
fsubrs
movsb
push
popa
fwait
mov
scas
cltd
adc
test
mov
repnz
inc
imul
or
bound
scas
and
es
aas
jbe
fcomps
fsub
mov
xchg
jnp
lea
push
or
cwtl
push
ror
sti
jae
cmp
push
or
nop
out
add
iret
xor
xor
cmpsl
sub
imul
mov
sti
pop
ss
push
movsb
stos
mov
movsl
pop
inc
inc
xor
mov
jns
aam
les
or
push
incl
cmp
push
loopne
lret
pop
xchg
or
pop
lret
ss
inc
cmp
cmp
pop
pop
push
lods
out
out
popf
loop
cmp
fninit
pop
out
jns
popf
xor
and
mov
imul
xchg
jbe
fistps
jle
inc
push
ret
fmul
fsubs
outsb
pop
lahf
sti
dec
xchg
xchg
dec
int
movsb
movsl
xchg
xor
enter
mov
add
mov
scas
scas
lea
adc
rcrl
adc
in
loopne
push
jecxz
in
xlat
push
aad
add
push
mov
mov
sub
jle
jle
shlb
pop
dec
add
adc
add
mov
mov
ja
inc
daa
mov
loope
sub
sub
movsb
xchg
outsl
sub
xchg
cmp
mov
dec
push
cli
fs
les
inc
shrb
cwtl
add
xchg
mov
lods
imul
push
pop
and
fcoms
xchg
insl
sub
sbb
lret
xchg
sti
jbe
inc
pop
lds
xchg
sbb
loop
or
outsb
inc
movsb
lods
push
and
xchg
xchg
in
test
icebp
dec
lret
inc
ret
jns
scas
sti
and
adc
mov
loop
jne
xchg
xchg
xchg
sbb
mov
cmp
and
mov
loop
xor
fistpl
flds
insl
adc
scas
sbbl
dec
rcrb
popf
dec
jo
push
bound
adc
mov
pushf
xchg
pop
lods
in
mov
aad
fiaddl
xor
sbb
jecxz
test
push
adc
cs
mov
test
and
rclb
clc
and
scas
xchg
test
in
clc
je
jnp
cmp
out
mov
or
cld
pop
lods
mov
or
mov
icebp
mov
scas
xchg
sbb
scas
rorb
test
push
inc
test
cmp
adc
or
loopne
pop
jne
lret
setno
jns
fadd
cs
imul
lcall
dec
adc
ficompl
push
cmp
push
inc
test
inc
or
jno
jne
fwait
dec
ss
xlat
pop
out
pop
pop
je
dec
add
cmp
cmpb
popa
push
or
add
xchg
jmp
iret
sub
jecxz
push
mov
repz
sub
addr16
bound
jbe
in
or
inc
lods
xchg
les
fiaddl
xchg
lods
adc
in
mov
sub
xchg
mov
push
stos
fistpl
in
stos
or
and
inc
mov
roll
ja
fwait
pushf
mov
mov
popf
nop
and
lods
mov
fcmovb
test
cmp
movsb
sar
mov
imul
cmp
and
xchg
or
clc
dec
cltd
xor
scas
and
daa
ss
mov
sbb
and
scas
inc
dec
andl
pop
stos
pop
imul
sub
add
sbb
lret
popf
inc
mov
add
adc
das
mov
std
mov
ret
xchg
mov
ror
mov
sbb
add
fwait
ds
lea
ficoms
into
fs
ja
fcompl
rorb
dec
pop
fwait
dec
inc
adc
aas
cmp
sub
lahf
cmp
mov
into
dec
xchg
fisubrs
mov
sbb
xor
loop
loop
add
data16
sub
push
in
sub
andb
dec
push
pop
pop
mov
jae
xchg
jo
pop
out
popf
mov
xor
insl
sub
inc
sub
pop
dec
ret
shll
mov
das
mov
lea
pop
inc
into
je
push
pop
shr
out
jne
pop
jmp
xchg
jecxz
pop
stos
push
aam
into
orl
add
or
and
outsb
push
jmp
or
out
decl
push
adc
imul
jl
lret
enter
xor
mov
ret
shll
dec
dec
cmc
cmp
sbb
arpl
xor
out
push
push
insb
cltd
rolb
push
xchg
pop
jg
mov
icebp
pop
dec
cwtl
push
bound
data16
mov
cwtl
xchg
dec
stc
mov
bound
movsb
fsub
fcoml
add
adc
rcrl
call
mov
fwait
xchg
mov
dec
das
sub
dec
test
enter
repz
mov
push
xor
ljmp
icebp
xchg
push
stc
outsl
iret
mov
loop
das
movsb
jl,pt
cmp
cmp
mov
pop
fsubs
ret
inc
cmp
shrl
std
mov
mov
cmp
pop
cwtl
jmp
push
xlat
mov
jmp
push
xchg
push
add
in
mov
xorl
scas
jge
sbb
xor
dec
dec
dec
and
add
shll
pop
cmpsl
sub
inc
jle
push
xchg
jb
inc
push
jb
or
push
test
cmp
and
or
mov
dec
ret
xor
lahf
sub
push
and
nop
pop
push
imul
es
xlat
inc
mov
jl
pop
lcall
jnp
cmp
jmp
in
shrl
sarl
lahf
out
call
sbb
std
lds
stc
cmp
pop
lods
std
scas
pop
add
nopw
inc
inc
in
jbe
cmc
idiv
pop
popa
in
lcall
cmp
xchg
xchg
mov
out
rolb
out
popa
rolb
aas
iret
or
clc
pop
rep
jns
outsl
add
shrl
sbb
jb
xor
push
test
aas
xchg
xchg
cmpsb
xor
into
mov
rorl
jb
pop
fcomip
mov
je
xchg
xor
mov
xchg
push
out
xchg
sub
sbb
jne
mov
popf
test
test
and
cmp
loopne
push
cmc
and
adc
mov
stos
add
decl
mov
inc
pop
pop
cmp
bound
or
arpl
push
push
cs
rcrb
aaa
cmpsb
jno
xchg
ficomps
and
mov
cmp
or
rcl
aad
mov
inc
out
sbb
shlb
in
adc
pop
cmp
cwtl
or
xchg
ror
jbe
xchg
arpl
jle
outsl
insb
dec
stos
in
stc
xor
pop
insl
js
or
cmp
jl
std
sbb
pop
mov
pop
pushf
dec
out
pop
adc
adc
call
adc
lcall
jmp
int3
add
lock
and
cs
inc
push
jp
sub
and
out
popf
gs
out
xchg
insl
cld
and
outsb
push
pushf
divl
and
dec
arpl
push
cltd
mov
jmp
imul
ficomps
aam
pop
mov
dec
test
mov
lahf
pop
stos
cmp
jno
les
xchg
out
inc
fildl
inc
shll
jmp
test
roll
cs
cmp
mov
push
and
pop
test
and
sti
mov
and
xor
fdivs
push
or
xchg
pusha
std
pop
sbb
fwait
xchg
and
call
fildll
sub
add
sbb
mov
mov
in
sbb
add
incb
mov
jb
jbe
mov
pop
out
xchg
add
jecxz
pop
xchg
lods
cli
mov
idiv
jg
jmp
cmc
mov
pop
mov
inc
lods
icebp
add
ljmp
mov
mov
or
pop
jge
mov
jns
jne
test
pushf
lods
cs
jno
cli
push
loopne
dec
push
pop
sarl
and
jne
sub
push
sub
repnz
pop
rcr
out
or
jne
push
push
int3
clc
insb
mov
mov
xchg
mov
repz
jecxz
sbbb
pop
push
sbb
jmp
pop
sbb
inc
jne
sbb
insl
cmp
sbb
cmp
addl
jge
andb
jecxz
ja
popf
or
push
jb
lret
test
lods
mov
inc
ficompl
mov
or
push
testl
fnstenv
shl
incl
jne
cltd
inc
push
test
sub
sbb
rcrl
fimull
sbb
ds
sub
shl
mov
inc
imul
pop
lods
push
and
jo
insb
inc
lea
cmc
cmp
scas
pop
inc
cmpl
or
cwtl
xor
pusha
pop
notb
pop
or
ss
aaa
enter
push
adc
inc
pop
aad
lcall
mov
cmp
dec
jb
and
mov
test
mov
movl
xchg
mov
pop
mov
popf
xor
jg
imul
add
ret
xor
push
in
movsl
imul
jecxz
movsb
and
xlat
setl
dec
push
test
or
mull
loop
and
add
aas
jbe
push
test
inc
repnz
mov
shr
xor
shr
decl
out
sbb
orb
xor
push
mov
jbe
add
imulb
pop
iret
jbe
xchg
fcom
call
mov
push
das
pop
add
dec
xor
cwtl
xor
addr16
mov
mov
popf
outsb
xchg
pop
scas
in
mov
loope
popf
in
mov
lds
andl
aas
int3
movsl
into
mov
adc
adc
inc
push
pushf
dec
jb
lock
hlt
xchg
in
adc
cmpb
pop
inc
test
sub
push
rcrb
add
push
and
pop
and
imul
sub
adc
or
les
inc
sub
into
insb
fisubrs
gs
xor
cmpsl
sbb
pop
cli
jle
or
cmpsl
lcall
jnp
add
fldcw
mov
inc
xchg
fdivl
repz
cmc
aam
mov
rorl
fidivrs
aam
inc
outsl
bound
push
or
sbb
out
jo
jle
jg
push
sti
inc
inc
pop
sbb
into
lea
fst
movsl
cmp
mov
ss
mov
or
cmpl
xlat
jp
repz
ret
stc
jg
outsb
pop
sbb
sbbb
mov
xchg
daa
sbb
ficomps
out
lret
loopne
ljmp
out
push
call
xchg
lock
es
xor
mov
loope
test
cmp
mov
movl
lds
sub
jnp
mov
pop
ret
pop
jno
int3
jnp
jge
out
out
cmp
aas
sbb
loopne
int3
ljmp
cmpsb
sahf
push
addl
sbb
xor
popa
or
dec
xchg
xchg
dec
or
push
filds
mov
fisttpl
xor
lea
out
inc
jbe
xchg
fdivrs
dec
lods
call
xchg
jecxz
pushf
sbbl
movsl
adc
adc
mov
scas
sub
mov
add
xor
mov
mov
jle
push
mov
les
jle
mov
stos
jecxz
jp
inc
jmp
mov
fsubrl
hlt
out
mov
push
lcall
js
mov
gs
mov
into
or
sbb
mov
inc
outsl
js
push
icebp
in
scas
aaa
push
inc
mov
das
daa
xchg
pop
cld
cs
xor
loope
push
push
sub
or
add
sbb
jecxz
ret
loopne
mov
insl
jae
mov
lods
fxam
arpl
cli
lock
adc
test
xchg
push
cmp
add
cmp
pushf
in
iret
pop
push
rolb
lock
sub
lods
add
dec
pop
movsb
mov
hlt
fdivs
sub
jbe
xor
daa
mov
xchg
sbb
xchg
popl
pop
push
cmp
sarl
mov
and
cwtl
mov
xorl
cmp
mov
pop
xchg
lret
sbb
aad
popa
ss
and
inc
cmp
ror
pop
gs
mov
call
or
or
mov
testl
mov
mov
sahf
xchg
jmp
xchg
fimull
pop
adc
xchg
jae
dec
mov
dec
idivb
inc
xor
mov
cmp
stc
push
mov
or
out
pushf
xor
into
lea
leave
dec
jnp
add
cli
in
pushf
lock
lret
xchg
dec
dec
jns
mov
popf
xchg
int
mov
pop
mov
jl
bound
dec
xor
test
out
fisubrl
les
sahf
jbe
out
inc
repz
ficomps
sahf
lea
clc
pusha
inc
dec
push
or
dec
in
mov
xor
dec
stos
int
in
mov
add
push
inc
in
xchg
cmp
cmc
mov
jl
ret
outsb
push
inc
in
xchg
stos
xorb
xlat
lret
mov
les
mov
xchg
les
xchg
add
test
hlt
ret
mov
push
jg
in
sub
fidivrs
push
jnp
mov
pop
add
lock
xor
add
adc
fstpt
cmc
jmp
mov
insb
imul
xor
popa
testb
cmc
add
int
fdivrp
pop
cmp
sub
test
div
aam
or
test
inc
fsubr
push
popf
loop
insl
mov
xchg
pop
jge
push
or
sbb
imul
inc
lret
push
dec
mov
ja
mov
inc
aad
movsl
arpl
into
lds
inc
outsl
sub
mov
xor
mov
sub
gs
in
mov
in
and
push
jmp
push
jl
nop
dec
hlt
fadd
xchg
jae
or
das
cmpsb
or
adc
inc
lods
mov
lock
loope
cmpsl
xchg
jmp
add
pop
sbb
push
push
jb
and
repz
sub
mov
push
sub
mov
out
xchg
push
es
and
pop
xchg
pushf
sbb
popf
dec
lock
xor
mov
test
loopne
push
ret
imul
jl
dec
add
mov
pop
mov
push
lret
xchg
or
stc
xlat
and
sbb
dec
addl
pusha
push
sub
inc
add
pop
mov
mov
int3
out
push
pop
aas
pop
sub
mov
xlat
dec
aaa
out
mov
pop
xchg
and
sub
adc
add
sbb
stos
mov
cs
mov
sub
mov
test
xchg
sub
roll
mov
add
sub
jnp
lret
cmp
sbb
jnp
push
pop
jecxz
fldl
xor
or
out
sbb
sarb
adc
in
lods
mov
pop
js
and
fisttpll
pop
das
dec
sbb
rcrl
aad
xor
cmp
test
fimull
mov
or
jno
pop
mov
xchg
pusha
jno
xchg
enter
mov
cmpb
nop
test
lahf
sahf
jl
mov
test
mov
mov
sub
xchg
pop
dec
cmp
mov
aaa
mov
and
jmp
xchg
xchg
xor
push
cmp
in
insl
out
stc
pushf
ljmp
cmpsb
sbb
mov
shl
imul
jecxz
adc
ds
mov
cmc
in
dec
mov
lock
das
ds
insl
sbb
ds
jns
in
push
pop
dec
jo
nop
mov
sbb
jmp
icebp
mov
and
mov
je
and
dec
addr16
pop
shrb
xchg
xchg
lcall
negl
xchg
add
scas
aaa
inc
je
rcl
fisubs
imul
lods
mov
jae
jl
mov
mov
sub
sub
test
sbb
pop
out
xchg
movsl
pop
mov
nop
inc
lea
xor
andb
ficompl
repnz
mov
pop
enter
pop
and
int
cmp
shlb
sbb
mov
inc
leave
hlt
xchg
dec
aas
adc
imul
push
sbb
adc
push
hlt
fisubrl
lods
jb
lods
out
xchg
jle
loop
dec
cmp
xor
scas
cli
jge
std
mov
mov
outsl
mov
out
fidivrl
insl
ficompl
push
mov
pop
or
fimull
inc
adc
insb
pop
inc
dec
mov
les
fsubp
add
sub
fildl
out
cli
xor
xorb
mov
fbld
sbb
xchg
sbb
cmp
dec
sbb
dec
sbb
cmp
or
les
decb
fimuls
sbb
fmulp
fbld
imul
loopne
adc
adc
lret
lcall
sbb
test
xor
aad
daa
xor
jnp
inc
fmull
out
push
loopne
add
movsb
pop
push
lret
add
xchg
adc
push
cmc
clc
xor
mov
xor
mov
jl
inc
cmc
jbe
cmp
sub
dec
dec
jne
pop
dec
aad
addb
xchg
mov
sub
xchg
and
push
fs
icebp
nop
push
xchg
fsts
or
in
pop
mov
and
loop
mov
add
sbb
sbb
push
cwtl
pop
mov
fwait
inc
iret
pop
inc
clc
or
xchg
adc
inc
jge
dec
xor
enter
jae
movsb
push
std
cmp
pushf
push
lret
out
clc
pop
jmp
mov
adc
jle
push
or
cmp
mov
into
jne
lods
pop
lock
test
sbb
sub
push
pop
sti
std
aam
cmp
push
jl
arpl
lds
push
mov
mov
jne
inc
xchg
adc
stos
icebp
enter
jl
ret
pop
cwtl
lods
jl
xor
sbb
mov
cld
push
add
addl
inc
lods
cmp
mov
hlt
mov
adc
xor
xorl
sbb
testl
mov
push
xor
adc
test
les
pop
or
pop
shrb
jb
test
mov
and
xchg
inc
loopne
mov
adc
and
or
jnp
dec
mov
ret
mov
imul
xor
or
and
mov
mov
pop
cmp
cmp
lods
ljmp
mov
cmp
cmp
mov
div
jbe
es
mov
ljmp
push
pop
inc
aas
test
lock
cli
mov
clc
enter
lcall
inc
test
shll
fsubrs
mov
lcall
insl
mov
fwait
push
xchg
jmp
pop
pop
faddl
movsl
ret
mov
cmpsl
cld
mov
rcrb
push
loop
mov
addr16
or
cmp
or
push
add
xor
cld
jne
jo
xchg
mov
in
xor
dec
inc
jg
cmp
daa
pushf
adc
test
rcr
into
push
adc
addr16
add
xchg
cmp
sbb
lret
mov
xchg
jo
cmp
je
push
call
cltd
fnstcw
adc
sub
js
xor
icebp
or
mov
insb
inc
arpl
sbb
lds
adc
dec
insl
icebp
push
inc
icebp
push
xchg
mov
ss
lds
js
xchg
je
insl
test
add
cmp
add
push
rclb
mul
loop
popa
sbb
or
sub
mov
xchg
rorb
push
jno
jle
cmpl
rcrl
add
push
add
fisttps
mov
mov
movsl
or
sahf
jge
jno
mov
dec
cli
mov
adc
jge
fstl
imul
mov
inc
inc
adc
push
fisubrl
mov
push
pop
into
mov
add
mov
mov
jp
xchg
add
push
jno
hlt
imul
mov
cmp
sub
cmp
icebp
cmp
mov
in
in
outsb
repz
pop
inc
das
in
jle
adc
jns
stc
rclb
dec
pop
roll
test
push
cmpsl
add
sti
fcmovnbe
enter
xchg
mov
adc
cmc
cmp
lret
mov
in
cmp
fidivrs
pop
out
movsb
test
xchg
in
adc
add
clc
jmp
imulb
sbb
ficomps
cwtl
or
sbb
xor
lea
cwtl
lcall
movsb
call
cmp
push
ds
mov
sub
notb
negb
in
or
add
into
movb
or
outsl
push
pushf
aad
jecxz
stos
dec
xchg
scas
cltd
mov
outsl
adc
fmuls
pop
pop
addr16
pop
xor
ljmp
jg
iret
push
adc
sub
cmpsb
add
fstps
add
lea
dec
sub
or
repnz
mov
push
in
lcall
iret
lret
testl
dec
inc
out
jbe
pushf
push
lret
lahf
nop
mov
das
dec
jo
or
daa
mov
iret
or
mov
or
mov
int3
das
ds
jl
mov
jo
aad
inc
push
adc
mov
inc
mov
insl
xchg
inc
lods
dec
cwtl
sub
adc
sub
int
jae
mov
dec
addr16
push
loop
pusha
dec
mov
cmp
shrb
sub
imul
dec
mov
pop
hlt
dec
lods
add
xchg
cwtl
fidivrs
mov
cmp
ja
push
inc
push
ljmp
jp
imul
sbb
lock
xor
enter
mov
sbb
iret
mov
inc
cli
mov
inc
mov
mov
jmp
lahf
into
popf
sub
cs
int
fisubs
inc
mov
cmp
hlt
sub
cmp
inc
dec
je
in
fstl
xchg
lret
out
lock
cmp
cmp
or
int
mov
aam
cli
rorb
pop
std
in
lea
gs
lock
dec
popa
xchg
mov
add
mov
add
add
int
add
mov
pop
notb
imul
cmpsl
pop
cmp
push
lods
push
rcrl
or
les
push
or
scas
jle
ret
fcoml
jnp
cs
xorl
sbb
sbb
and
sti
mov
pusha
adc
mov
pop
addr16
mov
mov
mov
jmp
inc
sbb
js
dec
pushf
ja
das
pushf
hlt
cmp
insl
pop
cmp
inc
lods
cmp
fidivrs
out
jp
les
lods
movsb
jno
sbb
sbb
jle
rcrb
dec
stos
and
pop
hlt
insl
aad
mov
mov
jecxz
mov
in
lcall
lret
repz
jnp
fmuls
inc
into
mov
adc
lret
sbb
lods
jae
add
xor
pop
mov
into
mov
push
mov
aas
insl
pop
push
call
ja
js
data16
push
mov
sub
xchg
fs
sub
fldenv
and
pop
mov
cli
daa
mov
inc
mov
sub
repz
inc
sar
aam
xchg
sub
add
movntq
pop
push
insb
sbb
pop
cmp
fisttpll
repnz
xchg
ja
iret
xchg
or
mov
test
mov
pushf
sbb
pop
mov
jbe
adc
insl
or
pop
xor
out
fwait
mov
push
cli
loopne
das
cmp
aam
and
insl
rolb
jo
decl
in
jg
bound
sbb
cmp
sti
push
inc
xchg
outsb
inc
loope
in
mov
movsb
cs
mov
fisttpll
les
dec
xchg
arpl
sarb
mov
pop
or
daa
adc
or
gs
pop
push
lods
xchg
jge
fidivs
xor
in
pop
pop
fcmovnb
insb
jg
jl
sbb
mov
mov
sub
inc
sub
dec
inc
stos
dec
mov
popf
sarb
cmp
leave
or
or
pop
xor
jns
inc
dec
cmp
cmp
andb
ss
ja
repz
clc
sbb
std
add
mov
mov
lea
adc
mov
add
xchg
mov
mov
ds
fnsave
ret
push
inc
repnz
xor
loope
sarb
cmp
pop
jns
cwtl
ss
cmp
fnstenv
not
fimull
cmp
fiaddl
pminub
inc
mov
and
cmp
add
mov
stos
push
lahf
push
jmp
ljmp
or
popa
dec
lods
push
xchg
das
iret
movsb
push
pop
rcr
sbb
adc
mov
mull
out
sub
in
inc
and
dec
or
out
int
pusha
xchg
divb
cmpsl
movsb
xor
push
push
push
cmpl
pop
pusha
stos
mov
mov
fiadds
in
jnp
std
in
add
jno
adc
dec
jne
mov
mov
mov
pop
xchg
cmp
mov
adc
pop
sub
add
lret
adc
imul
int3
cltd
popf
xor
dec
inc
icebp
ret
sub
mov
js
repnz
mov
jns
sub
movsb
fsubrs
lcall
stos
fucomi
fbld
mov
aad
jge
xchg
mov
dec
push
ret
in
rolb
out
dec
mov
jns
pusha
call
jl
mov
sub
jno
in
pop
lcall
cld
mov
jecxz
mov
lcall
lret
pop
add
test
jnp
xchg
or
idivl
mov
xchg
fsubs
in
mov
fxch
add
imul
jne
fnstsw
cmp
jge
outsl
inc
mov
fsubrs
imul
mov
xchg
test
push
mov
sbb
pop
sarb
lock
and
sbb
pusha
pushl
add
lds
mov
movsb
push
adc
mov
jecxz
mov
popa
aad
xor
push
mov
mov
xchg
mov
mov
call
sbb
sub
decb
cmp
cmp
fimull
xlat
flds
push
push
mov
inc
cmp
das
jl
jg
adc
sbb
adc
cmpsb
jo
out
insl
dec
inc
ret
jno
pop
sub
imulb
push
lods
jecxz
mull
in
cld
xchg
cmpsl
frstor
ds
cmp
cmp
add
or
loopnew
cmp
movsb
pop
lahf
out
aaa
jmp
arpl
sub
popa
mov
push
jecxz
xor
mov
jg
dec
jb
leave
mul
imull
out
std
movsb
push
es
lcall
xchg
js
imul
sub
shlb
dec
iret
out
adc
inc
mov
mov
stc
inc
ja
in
mov
test
mov
je
and
push
shlb
stos
mov
sub
call
sbb
cmp
das
and
jno
add
jmp
out
and
fs
and
inc
xor
add
inc
or
and
mov
jecxz
dec
ficomps
or
shlb
sub
pusha
fdivr
xchg
and
jp
cmp
test
lret
setnp
adc
push
cs
sub
nop
inc
xchg
ja
push
mov
dec
testl
lret
cmpsb
and
jne
xchg
loope
mov
mov
xor
scas
xor
sub
sub
clc
out
test
pushf
xchg
nop
lret
and
inc
cmp
xchg
or
jb
cmp
xchg
mov
jnp
cli
das
mov
stc
fldl
push
mov
dec
out
fiaddl
jae
addr16
gs
stos
xchg
fwait
lods
fs
mov
mov
js
push
loopne
mov
outsl
call
mov
mov
stos
ret
pop
xchg
sarb
adc
pop
add
pop
push
lods
std
mov
je
icebp
pop
pop
add
inc
xorl
mov
mov
inc
mov
mov
mov
add
xchg
push
ja
fldl
fcomps
and
dec
icebp
stos
sbbl
jp
testb
inc
inc
dec
sbb
add
jae
jl
mov
xchg
add
pop
xchg
arpl
cmp
inc
popf
in
jmp
xlat
dec
cmp
jns
push
adc
data16
cmp
mov
popf
rorb
sbb
loopne
cs
mov
xchg
dec
pop
je
js
icebp
adc
dec
es
mov
ljmp
or
and
jnp
jmp
cmc
pushf
cmp
mov
lea
dec
dec
or
lahf
push
sub
and
xchg
call
pop
dec
mov
fwait
jbe
pop
jecxz
cmpl
mov
adc
cld
pop
sbb
cs
mov
mov
sbb
jo
repz
mov
inc
add
lods
enter
mov
mov
mov
mov
pop
cmp
popa
or
mov
mov
lods
dec
sar
repz
cmp
sar
fsubrs
leave
sbb
jp
mov
pop
add
inc
mov
popf
fistpl
int3
adc
ss
outsl
fistpll
jnp
xor
xchg
je
sub
mov
stc
repz
sub
cmp
lret
pop
push
fbld
mov
inc
xor
xor
popf
clc
cli
pop
test
insb
outsb
outsl
in
jmp
dec
mov
mov
pop
add
adcb
inc
pop
sti
push
cmovb
push
outsl
cmp
out
xchg
in
lea
cmp
mov
out
mull
int
aas
push
and
push
cld
xchg
push
rorl
mov
mov
sbb
ret
pushf
lock
and
jge
sbb
or
cmp
mov
mov
pop
and
and
mov
stos
inc
inc
imul
cld
les
stos
outsl
fisubrl
stos
stos
fucomip
adc
inc
imul
repz
adc
adc
call
ljmp
icebp
mov
jo
jecxz
xchg
push
arpl
clc
cmpsb
inc
roll
or
push
addr16
test
js
fiaddl
push
fisubs
pop
lret
or
adc
mov
gs
jne
jp
dec
and
lods
rorl
cmp
push
leave
cmp
mov
lock
fwait
jl
imul
pop
jle
xchg
fxch
rcr
and
out
sub
test
jg
xchg
mov
or
dec
jbe
jno
out
push
das
inc
in
in
jno
fwait
das
adc
jnp
fstps
shll
pop
and
mov
xchg
loop
lods
mov
adc
cli
js
test
mov
xchg
test
bound
or
adc
push
adc
inc
mov
scas
jbe
repz
jns
loope
mov
add
jnp
pop
cwtl
adc
mov
ror
fwait
icebp
pop
xor
rorl
push
outsb
mov
fcomps
and
xchg
rorb
and
rcrl
jne
hlt
adc
cld
test
mov
repz
outsl
insl
pop
imul
adc
dec
mov
mov
sbbl
push
jle
fcoms
fimuls
sbb
cmp
mov
imul
lods
fimuls
insl
mov
inc
mov
mov
test
push
mov
lock
pop
xor
stc
cmpsl
out
jnp
dec
ss
xlat
adc
xchg
xor
mov
loope
stc
lds
adc
and
sbb
xchg
loopne
cwtl
lea
push
jb
sbb
xchg
sub
dec
sub
inc
inc
mov
jl
sbb
jg
cmc
aam
dec
les
daa
int
out
dec
adc
repnz
scas
push
xchg
int3
mov
pop
imul
mov
jge
xor
adc
xchg
mov
or
jg
out
push
jmp
jmp
push
mov
pushf
aaa
pop
stc
fstps
lahf
push
mov
push
xor
fidivs
cmp
push
shlb
push
mov
fwait
mov
shrb
push
jmp
out
mov
lldt
push
loop
mov
stos
inc
xchg
test
xchg
push
cmp
shrl
jne
adc
shrb
loop
rcrl
sbb
xor
push
movsb
pop
pop
xchg
jp
xchg
sub
or
outsb
inc
in
inc
jne
adc
adc
inc
jl
pop
ja
sbb
xchg
add
pop
jbe
sbb
dec
or
data16
js
and
lret
testb
dec
or
inc
mov
sbb
addl
sbb
cmpsl
int
xor
sarl
sbb
push
adcb
popf
subb
fcomps
sbb
xlat
push
xchg
jecxz
test
rol
push
jne
andl
mov
mov
arpl
push
push
xchg
test
movd
sub
or
mov
sbbb
dec
xchg
mov
mov
mov
cltd
clc
pop
push
cmp
pop
xchg
and
xor
fisttps
notb
incb
adc
call
sahf
xchg
or
xchg
mov
and
xchg
mov
push
js
shlb
xchg
add
aas
je
xor
jle
pop
pop
sti
out
mov
push
adc
hlt
mov
xchg
add
ljmp
push
shl
jp
push
push
mov
inc
out
sbb
and
jbe
xlat
add
das
jp
fstps
mov
mov
jecxz
mov
xlat
pop
aad
add
outsl
lret
jg
and
push
rcl
sub
sub
push
das
cmp
inc
jb
xchg
add
movsl
sbb
sbb
ljmp
or
cmp
xor
pop
inc
ljmp
mov
ret
pop
jbe
jb
pop
jne
jmp
sbb
dec
xchg
dec
push
mov
fdecstp
lock
enter
inc
in
mov
or
jb
xor
orl
inc
subl
lea
repnz
into
xchg
hlt
loope
sbb
mov
out
out
lods
mov
and
out
mov
pop
xchg
mov
lret
mov
hlt
int3
outsb
subb
pop
sbb
cmp
and
xor
aad
fidivrs
mov
jmp
xchg
dec
push
mov
loop
cli
sub
pop
popa
fs
ss
ficoms
mov
pop
inc
ror
add
hlt
xchg
sar
mov
mov
sub
aad
in
loope
jge
lahf
and
mov
adc
ljmp
add
or
je
cmp
or
jecxz
inc
insl
cmp
pop
insl
jns
push
jmp
mov
push
inc
jae
pop
stc
dec
hlt
and
insb
mov
jp
lret
dec
cmc
movsl
test
shll
push
aaa
nop
bound
inc
add
jb
out
dec
sub
in
outsl
xchg
cmp
and
push
orb
sahf
lret
out
sub
orl
mov
fwait
cmc
sbb
fwait
lret
jmp
xchg
cld
pop
aad
mov
jbe
push
les
xchg
pushf
loope
out
push
xchg
inc
dec
stos
sub
sub
jg
sbb
sbb
rorb
mov
out
mov
pop
iret
cmp
adc
scas
jmp
pop
xchg
std
fwait
push
jo
mov
xor
push
arpl
mov
cmp
insl
or
mov
mov
lret
push
push
lret
jno
fadd
out
mov
outsl
fs
cmp
je
das
cltd
sbb
mov
insb
popf
mov
pop
mov
push
and
push
or
mov
cli
cmc
xchg
jp
subb
iret
clc
add
push
dec
jmp
sub
aad
in
dec
jno
ret
or
xor
jmp
inc
xor
fistl
xor
add
lods
call
mov
cld
fiaddl
sti
or
pop
and
sahf
stos
fldt
xor
scas
jecxz
loopne
xor
sbbl
dec
fldt
add
cmpxchg
xchg
out
and
rol
push
mov
ret
dec
sub
pop
push
push
mov
mov
lret
daa
mov
push
test
jl
jle
add
fldl
out
mov
lret
adc
hlt
addr16
ds
test
xchg
ret
push
or
clc
addr16
xchg
pop
dec
pop
mov
mov
xorl
loope
xor
loope
and
mov
mov
popf
dec
xor
ret
stos
push
call
fcoms
xchg
push
iret
pop
lods
cmp
mov
cld
lcall
cmp
adc
mov
adc
xchg
or
adc
mov
mov
lock
cwtl
push
pop
push
rclb
cli
push
mov
adc
pop
cmpsb
fisubl
dec
pop
jp
cs
xchg
mov
inc
out
ret
push
jae
xor
and
mov
cs
lahf
lea
mov
enter
mov
pop
pop
rolb
xchg
out
jl
enter
fs
movsb
push
ds
jne
xor
sub
loope
fsubrs
repz
lcall
pop
push
out
and
sub
pop
mov
aam
jmp
subl
mov
xor
pusha
inc
sbb
sbb
cmp
stos
mov
das
add
daa
cwtl
inc
inc
and
jns
cmc
xchg
xor
jnp
or
cmp
sbb
mov
jp
and
cmpsl
sub
popf
pop
lea
mov
into
and
mov
stc
lea
idivb
stc
loop
xchg
ficomps
aad
daa
sbb
cmp
fisubrl
dec
xchg
pop
in
arpl
and
arpl
in
push
movsl
test
adc
and
fldl
push
xchg
imul
fcompl
subb
dec
xor
movzbl
add
push
and
jno
xchg
fimuls
xchg
fistl
cltd
int
addl
in
xor
loopne
or
ficomps
pop
dec
daa
xchg
or
stos
shl
sub
out
fwait
jle
clc
sub
or
push
pop
and
mov
subl
pop
sbbb
push
adc
adc
insb
ljmp
sub
inc
inc
pop
mov
sbb
aad
inc
test
add
test
in
jae
xchg
xchg
lods
bound
shlb
sbb
inc
in
scas
xor
cmp
in
add
jle
aas
sbb
es
mov
xor
fldl
shrl
sub
loopne
jns
xchg
fistps
movb
ret
ja
divl
mov
push
sub
fucomip
das
sbb
inc
fsubs
push
or
aam
or
cmp
stos
fimuls
repz
mov
add
rorb
pop
cmp
mov
xchg
push
jecxz
je
sbb
xchg
sbb
cli
adc
jmp
test
or
pushf
es
stos
mov
cs
jl
or
mov
push
shll
addr16
aas
pop
aas
int
mov
insb
inc
cmp
daa
rcll
addr16
and
mov
lds
shl
aam
aaa
daa
shll
cmp
lea
andl
xor
fdivl
jg
sbb
popf
pusha
andb
daa
fmull
ja
cmp
psrlw
fsubrs
jl
hlt
mov
movsb
int3
int3
cmc
lea
or
data16
and
scas
mov
or
pop
rclb
xchg
ret
mov
in
in
and
in
sbb
mov
icebp
inc
cmc
pop
sbb
outsb
sub
jmp
iret
stos
xor
xorb
aad
jbe
and
cmc
cmp
xchg
bound
rclb
push
test
sbb
jmp
sub
negl
and
loopne
xchg
mov
jno
xor
sahf
sub
mov
fld
loopne
lock
lds
and
push
loope
push
adc
mov
xor
inc
cmc
mov
mov
rorl
stos
aaa
xchg
movsb
lret
add
lock
cmpsl
cmpsb
jge
or
int3
pusha
jl
pop
mov
mov
pop
xor
dec
mov
xor
cmp
pop
lea
adc
xor
dec
std
mov
and
lods
inc
pop
push
xchg
int
stc
outsb
pop
int
fs
mov
sub
scas
mov
jno
rorl
sbb
mov
inc
movl
xor
sub
inc
add
notb
sbb
mov
sti
xor
pop
insb
cmp
and
call
leave
inc
adc
and
and
jb
push
fwait
and
jmp
jae
loop
jl
ret
xchg
adc
lcall
movsl
mov
lock
std
push
or
repnz
mov
adc
jle
add
cmp
and
inc
outsb
icebp
push
mov
pusha
cmpsb
lods
xchg
movsb
pop
sbb
mov
xchg
fisttpll
fdivr
shrl
pop
cli
mov
adc
push
adc
and
mov
mov
test
pushf
out
xchg
push
mov
roll
push
push
push
dec
push
sbb
shll
dec
pop
jno
negb
push
push
mov
out
cmp
sub
outsl
jae
shrb
inc
es
cmp
imul
sub
push
jl
mov
stc
jb
add
jle,pn
das
and
adc
xchg
xchg
sub
pop
xchg
jge
pop
ss
loopne
mov
xchg
fisttpl
movsl
push
rcll
out
mov
mov
filds
lret
adc
out
xchg
pop
cmp
mov
repz
inc
jmp
popa
or
pusha
sbb
jbe
mov
cli
sub
loopne
ja
fwait
cmp
jle
dec
or
pushf
cld
cld
fbstp
enter
mov
inc
jo
push
lods
nop
divl
shl
scas
leave
mov
and
push
adc
mov
lods
lahf
lret
stc
cmp
test
cmpsl
lock
scas
mov
jg
cltd
sbb
mov
push
adc
or
mov
inc
aaa
hlt
das
js
shrl
xor
xchg
dec
fsubp
xlat
jae
hlt
xor
pop
push
popa
lret
mov
cmpsb
scas
dec
mov
adc
sbb
xor
sub
xchg
mov
rcrb
xchg
bound
pop
arpl
flds
mov
xchg
aam
sti
jge
adc
ljmp
xor
cltd
jle
shrb
out
xor
dec
or
outsb
cmpsb
xchg
xor
inc
jne
nop
loope
shll
cmpsl
aad
ret
stc
pop
cmp
rcll
dec
xchg
sahf
out
jae
adc
pop
enter
add
js
hlt
sub
popf
mov
mov
mov
out
pushf
decb
nop
addb
imul
push
imul
insb
stos
pop
jl
inc
sub
jp
xorb
inc
mov
or
adc
cmp
xor
lret
hlt
cmp
add
repnz
push
cwtl
adcl
dec
test
rolb
notb
jl
fcoms
xchg
icebp
popa
int
rcrb
mov
or
popa
movsl
inc
loop
ss
xchg
jnp
popa
inc
aam
leave
leave
insb
test
jb
fnstsw
lahf
nop
dec
add
xchg
and
xchg
je
pushf
sbb
mov
or
jb
mov
add
mov
and
xor
or
cs
mov
out
inc
into
xor
push
clc
pop
outsb
xor
mov
mov
push
mov
lea
popf
sbb
ss
out
push
push
cltd
xor
pop
inc
sub
pop
gs
cld
xchg
xchg
dec
iret
out
out
mov
in
add
cmp
dec
mov
jecxz
enter
stos
add
mov
lret
jge
xor
jle
clc
in
test
inc
shrb
lret
pop
fimuls
data16
sbb
adc
xor
ss
mov
fdivl
std
add
mov
cmp
loop
mov
push
cld
mov
pop
push
jge
popf
testl
pop
sub
pop
enter
mov
lock
int3
mov
pop
dec
outsb
es
loope
js
push
in
leave
popf
aam
xchg
and
les
data16
inc
insl
sub
data16
xchg
cltd
inc
or
xor
sub
xor
pop
clc
jle
push
xchg
xlat
and
cmp
dec
out
lods
fiaddl
or
iretw
aad
push
inc
xor
into
push
jg
pop
mov
inc
jb
lea
cld
mov
dec
add
adc
lds
icebp
sbb
test
sti
aad
pop
fiadds
add
mov
add
add
aam
outsl
hlt
push
mov
fldenv
add
mov
insb
in
jge
lods
pop
ficompl
addb
mov
pop
test
gs
mov
and
bnd
jns
jne
inc
jl
jmp
pop
and
in
ficompl
jae
pop
jg
add
push
sbb
test
cmp
cli
mov
mov
test
mov
xor
adc
mov
mov
xchg
arpl
add
push
mov
push
ret
cwtl
pop
lea
push
lret
rolb
or
scas
test
push
xorl
cmp
adc
push
je
pop
push
mov
call
dec
aad
pop
fwait
hlt
mov
pop
dec
fidivs
je
test
sbb
subb
mov
push
arpl
pop
stos
shrl
xchg
aas
mov
js
inc
sbb
ljmp
aad
xchg
mov
xor
inc
outsl
and
lcall
or
shrb
insb
xor
rolb
leave
xlat
xchg
push
jecxz
mov
loop
xchg
jecxz
insl
cmp
imul
mov
jb
call
mov
mov
fwait
jmp
and
lea
jecxz
daa
jb
es
mov
in
addr16
sub
fistps
mov
sarl
inc
loope
xlat
repz
pop
cmp
inc
test
cmp
popf
insb
lock
test
jae
push
pop
jo
js
push
sbb
sbb
sbb
mov
ret
iret
addr16
lea
push
cltd
aaa
clc
push
shlb
mov
lahf
push
mov
push
les
insl
mov
clc
daa
shrl
sbb
mov
mov
int
sub
or
sbb
hlt
ja
sub
pop
cs
pop
dec
sbb
negb
fcomi
jno
push
adc
pop
fisttpl
pop
jmp
int
test
xchg
pusha
mov
push
or
fcomps
ficompl
mov
xchg
push
and
lcall
lods
in
cltd
stos
and
dec
xor
bound
outsl
call
arpl
es
xchg
das
xor
xor
mov
sbbl
mov
loope
pop
xor
xor
shll
int3
pop
dec
xor
mov
xchg
test
lods
test
push
out
pop
out
iret
decl
sub
out
pop
inc
andl
push
dec
xchg
inc
push
cmp
mov
cltd
ljmp
mov
or
cli
inc
in
sub
test
mov
call
fsubs
stos
jnp
add
jo
push
inc
into
call
or
mov
lds
jbe
lock
scas
scas
test
ss
mov
cmp
std
pop
pop
into
cmp
data16
sub
xor
jnp
push
iret
test
cmpsb
cmpsb
in
fcoms
pop
sbb
jnp
ja
aas
add
inc
sub
pushf
push
sbb
dec
rorl
leave
stc
pop
jmp
mov
fcoms
mov
mov
push
daa
aaa
lcall
in
xor
lods
mov
rolb
mov
std
movsl
popf
pop
jns
iret
inc
mov
push
sahf
xor
xor
cmpsl
out
cltd
rorb
mov
jnp
xor
mov
adc
int3
push
pop
adc
push
clc
popa
pop
mov
loopne
cmc
test
mov
dec
idivb
enter
jns
pop
cs
sti
xor
cmc
mov
test
ja
xor
lahf
push
cmp
popa
xor
push
inc
sbbl
imul
and
push
dec
push
add
or
pusha
ud1
std
xor
pop
rcrb
push
xchg
es
dec
aad
sahf
cmc
clc
test
mov
sbb
dec
xchg
cs
sbb
mov
lods
xchg
repnz
pop
aad
jbe
mov
lock
xchg
push
movzbl
dec
mov
adc
jnp
inc
rcll
lahf
popf
fsubs
jae
dec
lea
adc
push
les
in
std
daa
dec
mov
dec
aaa
push
and
mov
pop
xchg
or
dec
jmp
insl
pushf
sbb
jge
jle
mov
pop
loope
out
sub
mov
inc
xchg
mov
jbe
je
dec
fstpl
sub
fwait
pop
push
pushf
aaa
inc
stos
mov
fsts
jl
stos
cmpsb
push
repz
sar
push
decb
popf
push
scas
aas
adc
movsb
test
mov
sbb
pushf
push
fcmove
lods
xor
gs
mov
adc
xor
sti
xchg
push
into
ret
fists
scas
cmp
fwait
dec
mov
add
dec
push
mov
xchg
push
sub
cmp
loop
test
mov
mov
into
sahf
xchg
fstpl
xchg
pop
push
inc
pop
mov
mov
mov
dec
pop
pop
insl
dec
enter
iret
stc
inc
lea
jnp
cmp
push
xchg
sahf
push
stc
and
je
sbb
pop
cmpsb
xor
les
inc
push
mov
sub
fildll
push
and
push
out
xor
cmp
dec
or
xor
jae
push
adc
call
adc
aam
cmp
jb
rcl
fisttpl
ret
jb
out
cmpsb
add
fnstcw
push
inc
ret
jbe
les
sub
lcall
shrl
dec
outsb
pop
hlt
or
sub
add
sti
scas
mov
shrb
xor
int3
test
cmpsl
adc
pop
into
test
and
mov
xor
lods
lret
pop
fabs
fdivr
aaa
lock
in
pop
pop
insb
fs
sbb
or
adc
icebp
aas
push
es
sbb
aam
cli
stc
rcl
mov
fnsave
fsts
jge
imul
mov
add
push
jbe
and
add
es
call
sti
cld
stc
sub
cmpl
dec
jmp
rolb
push
and
je
imul
inc
inc
xchg
out
pop
mov
std
ficoml
bound
sub
fs
pop
sub
mov
mov
dec
bound
mov
test
bound
push
push
dec
sti
insl
out
std
movsb
sub
testl
push
ds
mov
mul
sub
jne
mov
xor
sbb
cmp
addr16
cld
adc
inc
inc
dec
mov
decb
mov
mov
add
loop
jne
add
jae
xorl
incl
push
adc
dec
out
lock
call
and
outsl
adc
aaa
jae
scas
cmp
mov
push
in
loopw
test
sub
loopne
pop
stc
and
cld
rcrl
dec
dec
cld
ret
sahf
push
das
outsl
cli
cmpsl
popf
sti
in
cmp
jle
pop
fcmovne
xchg
imul
add
fstl
ret
fucomp
inc
stos
xor
jle
adc
pop
sbb
stc
cmp
and
shl
lods
adc
dec
xchg
popa
add
and
lds
mov
add
int
cmp
and
inc
out
ret
and
lds
adcl
pop
adc
xor
test
repz
jmp
mov
ja
jge
fdivrs
pop
aas
jo
xor
cmpsl
jl
dec
and
imul
cmp
pusha
sub
out
rcrb
cmp
push
xchg
fsts
jae
dec
add
clc
dec
aad
and
sti
and
cmp
add
in
js
out
sarl
adc
in
dec
sub
in
in
shlb
jmp
and
aam
imul
sbb
stos
add
mov
push
dec
shl
cli
ljmp
mov
mov
cmp
xchg
fadds
jno
je
pop
ljmp
mov
adcb
or
fnstsw
call
jb
testb
movsl
inc
xchg
mov
js
lahf
les
in
sub
push
movsb
jmp
in
dec
mov
xor
mov
in
dec
adc
daa
out
lds
push
int
and
sbb
sub
push
inc
xor
sti
bound
sbbl
movsl
lcall
ja
lea
mov
in
pop
push
jb
fcoms
data16
lret
dec
mov
cmpsb
mov
pop
mov
cmp
pop
and
hlt
stos
mov
push
add
fwait
enter
push
add
sub
mov
pop
pop
pusha
cmp
xchg
add
pushf
lret
and
jp
scas
fcomps
mov
mov
adc
jge
in
jbe
push
movsb
loop
test
sub
inc
jp
testb
inc
inc
rcll
daa
sbb
aas
ljmp
pushl
loopne
add
push
xor
jle
xchg
ret
inc
test
adc
and
hlt
mov
xchg
sti
fpatan
inc
cmp
xchg
popf
js
dec
leave
push
pop
shrb
push
dec
rcr
pop
sub
aam
pop
leave
or
or
mov
clc
js
mov
pop
fcomps
xchg
icebp
dec
lret
mov
mov
cmp
fiaddl
sbb
or
fwait
add
iret
jg
jmp
pushf
stos
push
jl
loop
cli
mov
jne
xor
ret
cmp
push
ds
xchg
xor
lock
xchg
push
pop
aaa
xchg
push
pop
or
fsubl
dec
cmpsl
nop
jle
sub
daa
mov
xor
push
pop
inc
shll
popa
or
xchg
jecxz
add
xchg
xor
lcall
add
insb
and
outsl
xchg
push
lret
lahf
dec
jmp
sti
sbb
add
inc
pop
mov
test
and
aad
adc
pop
ljmp
nop
in
out
push
pop
mov
fsubrl
hlt
test
test
scas
xorl
ljmp
aam
push
cmpsl
dec
rcrl
or
inc
xchg
rclb
push
sub
dec
xchg
scas
rorb
xchg
shrl
cltd
lea
add
cmp
mov
xchg
xchg
jmp
mov
push
dec
cli
int3
and
sarl
or
or
jnp
in
pop
sahf
enter
test
push
sub
in
pop
jecxz
adc
inc
int
xor
mov
lea
lds
and
and
mov
xchg
sub
test
sti
cmp
es
or
xchg
cmp
mov
das
test
in
fs
cld
pop
sbb
and
ljmp
pop
popl
orl
jnp
fimuls
cmp
out
in
cmpsb
dec
cmpsl
fsubl
ficomps
enter
pop
mov
stc
sbbb
movsl
int3
sti
scas
cmp
sahf
enter
push
sub
xchg
arpl
pop
cmpsb
add
mov
nop
or
mov
dec
dec
xor
push
jbe
and
ficoml
movsb
and
arpl
sbb
mov
lret
mov
adc
xor
mull
ret
fstpt
sbb
sarl
loop
leave
idivl
pushf
xchg
jnp
jo
and
mov
xchg
mov
inc
call
addl
inc
xchg
rcrl
add
out
sub
lcall
or
in
push
aaa
mov
add
cli
push
iret
mov
iret
nop
add
cld
nop
push
mov
lds
and
or
imul
mov
ljmp
push
popf
sub
jae
insl
or
xchg
test
stc
mov
iret
pop
addr16
inc
ds
dec
jb
inc
mov
push
cli
and
jb
shll
pop
test
mov
cmpsb
je
add
cmp
adc
testl
sbb
lods
lds
dec
xlat
dec
jb
out
xchg
lock
sarl
cltd
fists
leave
add
mov
xor
cmp
mov
shlb
outsb
lock
rolb
or
pop
loop
js
add
lods
int3
push
mov
rorl
orl
mov
popf
push
nop
lcall
mov
lcall
js
jge
or
push
push
or
pushf
and
add
das
sub
mov
inc
stc
mov
jne
lods
and
adc
inc
ror
lock
js
test
out
aaa
lahf
jl
mov
dec
push
cwtl
repnz
out
in
cld
jle
adc
outsb
pushf
mov
pop
mov
and
or
fwait
inc
cmc
push
repnz
sbb
mov
shrl
cmpsl
imul
es
lcall
pushf
mov
push
lcall
cmp
inc
es
js
pop
lret
pop
les
in
jno
mov
and
add
or
mov
repnz
rolb
mov
std
fisttpll
or
pop
hlt
and
xor
aam
outsb
xchg
jns
in
xor
aad
push
dec
inc
hlt
sub
popa
int
cs
jno
es
das
arpl
push
jge
sub
pop
outsl
dec
mov
insl
ja
xchg
or
out
xchg
adc
xchg
jl
dec
inc
cmpsb
adc
out
sub
inc
imul
fbstp
loop
repz
push
pop
xorps
cmp
and
xchg
push
cmpsb
sub
xor
adc
andl
gs
or
imul
xchg
fsubrl
stos
and
or
cld
int
rorl
xlat
sub
sub
sub
pop
testl
xor
imul
das
and
jp
je
pop
mov
xchg
mov
shrb
ror
push
in
xor
mov
adc
pop
or
clc
scas
mov
or
ds
jecxz
cmp
push
loope
jns
dec
push
cmc
idivb
adc
xor
clc
mov
dec
fadds
cs
add
sbb
daa
cmp
or
pop
sub
mov
cli
jmp
mov
lret
pop
inc
dec
mov
dec
dec
dec
mov
lahf
push
cmp
call
jae
js
push
test
repz
daa
das
push
leave
es
sbb
in
xchg
push
xor
aaa
testl
movsl
and
add
mov
inc
les
sbb
mov
hlt
inc
xlat
push
fcomp
mov
jne
mov
pop
bound
sbb
xor
subl
lods
rcrl
sbb
cmp
ss
adc
fistl
jbe
mov
call
mov
pop
fildl
ss
into
lods
pushf
icebp
jecxz
pop
insb
sub
push
fsubrs
popf
or
das
rcrl
or
shll
mov
das
cs
in
rcrl
xor
cmpsl
and
lret
xor
mov
aad
je
nop
push
je
jmp
or
pusha
lea
in
jo
repz
or
icebp
xchg
xchg
adc
push
inc
repnz
mov
movsb
xor
jb
sub
and
stos
lock
lods
and
push
mov
mov
lods
mov
push
movswl
fsubrs
add
sti
xor
xor
les
jle
mov
cld
out
pop
or
hlt
fidivrs
cmpsb
pop
push
sub
iret
pop
pop
repnz
fstpt
arpl
ret
pop
mov
mov
stc
adc
jb
ficoms
mov
in
imul
or
sbbl
daa
cmc
jo
neg
cmp
mov
jge
movsb
dec
mov
xchg
or
fimuls
jo
push
adc
dec
addl
fs
cwtl
test
icebp
mov
loop
mov
aas
int3
cmovs
jns
popa
adc
jbe
fistl
aas
sti
std
jo
es
lret
scas
xchg
cmp
mov
jecxz
mov
xor
pop
inc
xorb
mov
call
ljmp
icebp
movswl
ja
je
sub
adc
xor
push
fs
std
mov
hlt
mov
push
bound
mov
fcomip
out
xor
fmulp
cmovbe
mov
xor
jns
fs
push
idivl
lret
xchg
mov
fldt
xchg
push
es
mov
jb
repz
insl
cmpsb
dec
loopne
call
adc
and
std
push
sbb
push
xchg
sub
dec
jns
inc
mov
mov
pop
jne
mov
fwait
xor
xor
outsb
ds
dec
ds
xchg
mov
or
mov
add
js
mov
dec
cmp
shll
adc
jno
add
out
sbb
cs
push
or
iret
dec
cmp
sarb
test
xchg
pusha
dec
mov
inc
adc
insl
dec
dec
mov
sbb
lcall
adc
inc
pusha
aas
adc
test
cmp
inc
pop
lahf
jmp
mov
jae
mov
xor
mov
pop
mov
pop
andb
xor
data16
cmc
loopne
or
lahf
xchg
push
movsl
in
iret
std
xor
jae
in
jp
ret
pop
ficoms
orb
test
mov
inc
dec
adc
outsl
xchg
push
pop
sub
pop
xor
ret
xor
cmpb
leave
adc
xchg
cmpsl
stos
insl
leave
imul
outsl
pop
shrb
xor
in
scas
adc
adc
ret
add
ret
adc
mov
or
in
pushf
std
xor
dec
add
call
add
dec
add
inc
fwait
xchg
jmp
out
movsl
cli
sub
lahf
std
jnp
pop
adc
int
jbe
cmp
shlb
pop
mov
push
xlat
shlb
jmp
andl
sbb
cmpsl
xchg
test
outsb
nop
pushf
pop
xorl
in
addr16
push
imul
imul
xor
call
lret
mov
sbb
dec
fcoms
sbb
je
cmp
sub
push
mov
xorl
imulb
std
push
or
addl
loop
loopne
jbe
into
push
outsb
popf
gs
lods
pop
or
fmull
dec
es
lea
test
mov
dec
loop
and
dec
inc
test
subb
arpl
lret
mov
inc
pop
xchg
test
cmpsb
notb
fsubs
in
mov
xor
push
mov
int3
ja
mov
gs
pop
dec
arpl
push
and
sbb
cmp
mov
out
jb
ljmp
arpl
dec
nop
movsl
outsl
inc
addb
and
sbb
cmp
les
test
outsb
mov
lods
cmc
pop
push
cmpsl
clc
addr16
sbb
ss
push
cs
fwait
inc
fstl
mov
testb
cltd
mov
repnz
dec
dec
scas
sub
jbe
push
test
sbb
test
mov
cmpsl
mov
pop
lds
fisttps
cmp
mov
push
cmp
jns
enter
xor
dec
or
push
or
icebp
jnp
push
popa
and
mov
filds
pop
into
bound
mov
push
sub
push
push
lock
inc
jno
js
in
sub
push
xchg
insb
cs
push
jne
test
jo
popf
sbb
mov
sub
add
dec
pop
pop
add
pop
mov
cli
mov
push
cmpsl
sti
mov
add
lods
cltd
push
shrl
test
adc
xorb
lock
cmp
mov
movsb
cld
outsb
push
rclb
and
push
sub
int
fs
loopne
sbb
push
lods
sbb
add
sub
lea
jo
xor
and
ror
pop
ljmp
bound
cwtl
repz
pusha
xchg
adc
dec
push
dec
ret
pop
push
fwait
jo
add
jg
jg
movsl
pop
xchg
ficoms
xchg
test
clc
ret
mov
daa
lea
mov
pop
mov
cld
gs
sbb
mov
movsl
cli
xor
inc
push
cli
imull
mov
and
mov
lock
jns
std
lret
jno
addr16
jb
jns
push
mov
fidivs
add
in
inc
and
or
push
lds
dec
pop
mov
sbb
lret
dec
cmp
addl
mov
hlt
fs
xlat
or
ljmp
mov
sub
lcall
nop
sbb
dec
in
xchg
cmp
cmpsb
enter
hlt
push
in
xorl
dec
or
fisubrs
scas
push
push
jge
cltd
or
mov
inc
rcrb
hlt
cmpsl
jmp
jle
jecxz
push
mov
sub
fildl
stos
push
mov
cmpsl
mov
push
mov
push
imul
push
pop
data16
add
scas
push
jno
roll
stc
je
xchg
mov
or
push
and
popf
pop
or
lods
cmp
scas
xchg
jecxz
pusha
aam
call
or
push
movsl
in
jns
lods
das
aam
loop
push
jae
pop
sub
in
aas
cmc
sub
ficoml
xor
cmc
in
imul
sbb
pop
aam
xchg
lcall
mov
mov
inc
pmaxub
test
hlt
popa
mov
cmpsl
outsb
ficoms
push
repz
je
hlt
push
push
cltd
xor
loopne
das
lods
cld
inc
je
mov
pop
xchg
adc
and
mov
lea
scas
popa
add
add
out
jmp
inc
aam
xchg
lret
sbbb
xor
push
sbb
push
xchg
in
sub
lea
jns
and
push
loop
in
jl
bound
xor
mov
cld
ss
int3
add
jge
std
ds
js
pop
push
test
stos
int3
std
or
and
out
sub
je
call
jo
fstp
mov
mov
test
out
cmp
lods
mov
xchg
dec
and
fwait
jo
addl
ret
das
adc
pop
das
jbe
or
call
mov
mov
inc
repz
mov
int3
aad
loop
pop
add
inc
adc
cltd
and
jmp
push
xchg
mov
fistpl
aas
sbb
aam
inc
dec
mov
cmp
std
pushf
push
cmpsl
sbb
push
fnsave
jmp
push
repnz
sbb
mov
repz
cltd
arpl
aas
movl
sub
add
out
imul
push
xor
int
hlt
mov
rolb
fucomp
inc
repz
xor
scas
adc
lret
vmaxsd
js
fcoms
mov
mov
rcrl
lret
js
out
pushf
fisttps
mov
add
inc
xchg
add
loopne
rol
jmp
hlt
fsubr
jmp
mov
mov
aaa
push
lods
adc
shrb
add
push
je
pop
movsl
cmp
push
call
aad
loop
sahf
loop
arpl
ss
jle
ss
dec
je
clc
adc
fs
or
pop
ljmp
scas
jns
mov
aaa
and
jnp
mov
inc
jae
ds
sbb
jmp
cmp
outsb
mov
jb
mov
xchg
cmpsl
cmp
push
in
das
popf
pop
adc
hlt
jns
sbb
aam
xlat
mov
jne
cmpsb
outsb
inc
adc
imul
clc
mov
sti
mov
mov
pop
ljmp
sub
and
fstps
push
es
filds
mov
lea
mov
test
inc
out
or
pop
jb
xchg
lods
mov
ret
mov
sub
adc
mov
in
out
jne
add
in
ljmp
xchg
mov
jno
cs
ret
cli
xlat
mov
push
pop
sahf
xor
sbb
inc
pop
cli
fbld
lds
dec
cmp
push
mov
inc
fidivl
ja
and
xchg
loopnew
scas
and
adc
jb
mov
inc
arpl
sub
aam
lret
jnp
mov
movsl
popf
xor
dec
or
adc
pop
jge
push
adc
xor
in
adc
jge
in
xchg
mov
std
xchg
in
stos
dec
ss
fcomps
fimuls
loope
divb
in
dec
scas
jae
movsl
xchg
xlat
inc
sub
adc
dec
pop
mov
pop
pop
cli
mov
push
add
cmpsb
pop
xchg
pop
adc
push
adc
jnp
nop
mov
cld
pop
xor
sub
xor
arpl
enter
or
adc
push
popa
stos
imul
insl
adc
jecxz
out
sbb
sub
rorl
lret
lcall
push
outsl
mov
out
fisubrs
lea
iret
in
andl
xor
std
push
jo
lods
inc
bound
sbb
or
fnstcw
in
mov
mov
and
lahf
movsb
inc
adc
arpl
sbb
aaa
repz
adc
add
mov
mov
icebp
or
xchg
lea
sub
movsl
sti
jo
pop
popa
in
jl
ret
mov
adc
xor
push
push
pop
sub
mov
rcr
mov
mov
mov
in
rcrl
mov
sub
outsb
pop
mov
in
cwtl
in
push
pop
mov
outsl
aas
jge
popa
jo
in
clc
pop
mull
pop
adc
in
in
mov
push
pop
mov
inc
push
ss
stc
inc
roll
jnp
aad
ret
xor
xor
add
mov
in
xchg
pop
movsb
std
cli
adc
mov
test
mov
lret
or
push
fistpl
jle
ret
jo
mov
lods
xchg
fisubrs
daa
inc
push
outsl
scas
mov
xor
xor
push
mov
imul
push
lahf
popa
js
insb
mov
or
ja
cld
xchg
cltd
jnp
lahf
dec
test
ljmp
int3
pop
dec
rorb
jmp
sahf
js
stc
push
in
ds
sbb
mov
mov
mov
cli
test
sub
inc
push
ret
push
push
xchg
add
aad
pop
int
and
fistps
mov
ret
jne
ffreep
jmp
jne
pop
sub
inc
fnstenv
ffreep
or
inc
jno
lods
loope
jge
add
fidivrs
ss
fnsave
fistps
pop
xchg
pop
sub
sbb
rol
fstl
inc
cmc
jl
jmp
pop
fcmovb
mov
inc
das
cmpsl
fsubrl
jo
repnz
jbe
or
fidivrs
mov
insl
sub
movsb
and
fwait
xchg
push
push
es
add
jns
sbb
xchg
sbb
push
fstp
or
dec
nop
pop
mov
mov
jle
sbb
das
adc
mov
push
stc
pop
lds
lahf
lret
mov
cwtl
ss
add
sbb
mov
movsl
jg
lahf
addb
or
mov
fistpl
adc
rcrb
sub
test
call
mov
adc
outsl
push
lods
and
jae
fwait
mov
mov
mov
sbb
test
jns
cmp
in
or
dec
shl
push
inc
inc
lcall
hlt
dec
or
jge
es
sbbb
pushf
aam
cmpsl
pop
lods
cs
lds
fstpl
lahf
out
shl
mov
cmp
mov
stc
shll
inc
scas
jl
cmp
pop
xchg
test
push
mov
orl
lds
mov
adc
push
mov
or
xchg
push
outsl
icebp
xchg
clc
inc
mov
out
fsubrp
roll
mov
sub
call
dec
mov
cs
sub
daa
fmull
push
cmpsl
jg
into
lahf
dec
mov
into
and
adc
mov
or
gs
pop
xor
dec
or
mov
xchg
jle
aas
rol
daa
sub
pop
les
mov
push
or
cmpsb
outsl
dec
adc
mov
mov
mov
mov
pop
std
dec
in
outsl
jbe
mov
add
jns
push
lock
in
lret
inc
shrl
gs
pop
dec
and
mov
cld
addl
fcoml
movsb
inc
js
aad
fst
fisubs
fisttpl
push
ja
ret
sti
mov
es
mov
xorb
push
sti
and
shrb
add
mov
mov
das
aad
and
xchg
ds
and
xor
fidivrl
lods
test
jne
lods
mov
in
push
daa
sbb
jmp
aad
xor
cltd
sub
fnstsw
xor
shl
dec
in
pusha
and
stos
rcrb
ds
lcall
incl
inc
add
test
jmp
or
fistpll
rolb
add
or
dec
xor
cmp
pushf
lock
mov
les
mov
xchg
dec
icebp
inc
loope
xor
pusha
stos
or
xchg
add
pushw
mov
mov
adc
sub
cld
lcall
jb,pt
or
jmp
cs
mov
mov
repnz
dec
inc
sub
sarl
cmp
enter
test
adcl
pop
lods
sbb
xlat
aam
bound
out
test
pop
test
bnd
mov
mov
mov
lcall
fwait
dec
adc
add
shlb
pop
xchg
subps
mov
or
adc
sub
ds
xchg
mov
pop
mov
int
inc
fs
das
pusha
xchg
movsb
xlat
sti
sub
or
inc
mov
sub
mov
je
jnp
and
ffreep
aad
xorl
les
aaa
outsb
dec
adc
xor
imul
lock
cmpsl
addr16
int3
leave
mov
mov
movsb
jns
out
jae
xor
xor
jle
cwtl
and
clc
jno
xchg
jmp
aaa
pushf
cs
mov
inc
sti
inc
adc
imul
add
push
cmp
push
idivb
daa
push
sarb
xchg
xor
mov
pop
je
jmp
lods
or
push
inc
dec
jle
jp
pop
dec
inc
jo
outsl
jecxz
dec
mov
pop
jbe
inc
pop
cli
inc
push
inc
addr16
mov
xchg
xchg
cmp
inc
fidivl
adc
sub
mov
add
das
mov
ljmp
cmp
sbb
mull
cmp
dec
adc
fisubs
pop
or
mov
fidivs
mov
jno
lock
add
jae,pn
xchg
push
jp
ret
loopne
outsb
movsl
insb
lret
ja
mov
aam
dec
mov
dec
das
lahf
dec
adc
das
pop
aas
pop
or
add
sbb
add
xor
add
mov
data16
fiaddl
shl
push
mov
or
scas
gs
rcr
lret
out
jle
loope
add
mov
jns
loopne
mov
xor
xchg
stos
inc
int
ljmp
ret
cltd
push
lds
mov
mov
js
sub
mov
dec
mov
mov
fbstp
sub
cmp
dec
into
fimuls
fldz
mov
ja
adc
mov
mov
fdivr
add
push
fld
lock
gs
movsb
cmp
push
outsl
mov
inc
sbb
mov
movsb
or
pop
inc
sbb
cmp
sub
push
outsl
jne
sbb
les
ffree
lcall
pushf
xor
aam
into
outsb
pop
pop
mov
mov
push
sub
adc
fmull
dec
sbb
ja
sub
xor
sub
out
fwait
jo
xlat
or
sti
jge
jnp
mov
xchg
mull
dec
mov
push
loop
push
cmpsb
adc
xchg
int
adc
pop
fwait
xor
pmaxsw
out
pop
mov
pop
aaa
xchg
sbb
cli
ficoms
or
popf
sti
ljmp
xor
sub
and
enter
sub
and
mov
fldcw
jmp
sub
pop
rcl
popa
push
and
pop
jbe
imul
fwait
mov
sbb
leave
jecxz
rolb
dec
into
sbb
xlat
sbb
jne
imul
cmc
inc
mov
sbb
call
or
dec
or
negl
lock
out
cmp
pop
nop
cli
mov
aaa
cmpsl
test
push
mov
fwait
adc
push
xchg
in
cmp
fsubp
fisttpl
pop
inc
push
sub
xchg
mov
pop
scas
cwtl
cltd
mov
std
mov
outsl
lcall
mov
add
and
hlt
cmp
sub
sub
insb
push
out
outsl
adc
cld
dec
adc
clc
bound
lret
jno
lods
xchg
xchg
test
fwait
xchg
xchg
xchg
jp
lea
jo
aam
lea
dec
outsb
sub
ret
sbb
jmp
mov
test
cli
jae
add
mov
ds
outsb
dec
jno
repz
pop
nop
pusha
xor
mov
out
enter
dec
into
out
adc
pop
jns
sti
shlb
int
fsub
ds
pop
out
jmp
rcl
sti
mov
add
imul
inc
jns
xor
fidivs
push
pop
mov
int
out
mov
in
sbb
cmp
fst
xlat
push
orb
pop
xor
xor
adc
clc
add
cmpsb
out
jmp
sahf
fbld
scas
pop
inc
add
dec
movsl
movsl
mov
adc
stos
mov
addr16
add
loopne
dec
xor
in
ds
cltd
xor
jecxz
mov
jns
repnz
mov
mov
adc
mov
adc
bound
and
inc
ret
mov
xor
aaa
inc
pop
stc
fs
push
pop
int3
test
cmpsl
leave
enter
push
stos
aad
stos
popf
aas
mov
pop
in
hlt
xchg
ret
xor
fisubrs
cld
into
lahf
in
pop
push
and
dec
xchg
imul
mov
dec
cmp
xchg
or
out
sub
sbb
or
sbb
daa
lods
gs
insl
and
sbbl
cmpsl
dec
mov
icebp
pop
iret
sub
add
mov
in
movntq
add
and
pop
or
or
icebp
jp
sbb
pop
cmp
ljmp
and
lahf
or
cltd
in
ljmp
std
inc
std
xchg
xchg
aaa
mov
in
xor
adc
mov
aas
in
arpl
jnp
mov
jmp
fcomps
clc
scas
or
sbb
faddp
push
lea
movb
sti
jbe
dec
sub
jae
clc
or
cmpb
lock
add
in
insl
adc
fsubrs
adc
push
addr16
or
pusha
fcoml
int
and
shl
adc
cmc
dec
sub
popa
stos
adc
scas
ficompl
xor
sbb
mov
jg
filds
insb
fidivrs
cmp
clc
out
lea
addl
and
out
pop
dec
add
loope
fnsave
call
fmull
mov
pop
rcrl
push
leave
imul
dec
push
pusha
movsb
sarl
sbb
fwait
and
add
int
insb
sub
scas
mov
enter
shl
scas
lret
std
mov
jl
mov
push
dec
pop
push
mov
jo
push
out
ja
inc
fnstenv
push
movsl
xor
rcll
fsubl
scas
lods
test
bound
ljmp
gs
cmp
mov
in
scas
pop
pop
xlat
add
gs
mov
lahf
test
sbb
add
push
mov
xor
xchg
jl
ret
xorl
jecxz
dec
mov
bnd
insl
scas
scas
mov
jbe
in
xor
lret
add
stos
mov
int3
mov
pop
notb
xlat
add
insl
push
std
cmp
jge
pushf
cltd
xchg
dec
ja
js
dec
push
fwait
stos
sahf
pop
or
mov
hlt
and
sbb
cmp
iret
or
or
popa
jno
xchg
mov
aad
jmp
sbb
adc
or
cs
outsb
stos
sbb
outsb
fisttpll
dec
sbb
daa
push
xor
std
sub
rclb
cmp
imul
add
xchg
push
jmp
ror
sbb
mov
movsb
xchg
daa
jne
push
ja
adc
mov
or
jg
and
mulb
fs
mov
inc
xchg
sbbl
dec
lea
stc
jle
lret
mov
sub
xchg
adc
mov
xchg
pop
xlat
xchg
mov
inc
pop
xchg
and
loop
sbb
pop
adc
aad
aaa
sub
and
cmpsb
adc
inc
mov
cmp
mov
push
push
movups
or
fadds
stc
mov
lods
push
mov
sbb
and
ret
das
lock
addb
dec
cltd
mov
pop
clc
loopne
adc
cmc
lock
pop
add
cmc
xor
test
in
xorb
add
aam
xor
jnp
xchg
lcall
lods
add
sub
push
xor
mov
or
roll
cmp
jge
jne
sub
idivb
cmp
jge
jmp
nop
test
cltd
pop
and
push
pusha
imull
das
or
dec
and
adc
or
sahf
xchg
xchg
nop
push
lret
jp
fnstsw
gs
insb
cli
lock
popf
push
mov
jb
cwtl
dec
int3
andl
mov
movsl
aam
and
xchg
gs
jecxz
cmp
pop
adc
pop
jo
push
ds
push
jb
popl
fisubs
data16
xor
inc
leave
sarb
ror
daa
in
sbb
add
scas
mov
xchg
je
fidivrl
mov
inc
in
push
mov
fstpt
pop
js
inc
sbb
xchg
push
and
cmp
dec
stc
cmp
test
fidivl
repz
cli
dec
sbb
push
dec
std
push
test
push
sub
lock
dec
stos
dec
ret
call
cli
cmp
sbb
cmpsl
inc
jecxz
mov
pop
sbb
pop
lahf
cmpsb
lea
adc
mov
dec
mov
sub
emms
inc
adc
scas
xchg
dec
in
lds
insl
out
jp
mov
addr16
pop
repnz
sub
mov
add
mov
xor
testb
and
sbb
pop
add
adc
cmp
sbbb
rcll
sti
mov
add
aam
stos
sub
and
inc
jp
push
pop
fsubrs
in
sub
push
cmp
pop
push
popa
dec
dec
mov
das
aaa
imul
sub
mov
iret
jo
xchg
mov
push
dec
in
sti
xor
dec
gs
stos
ss
push
lcall
sahf
add
in
repnz
pop
xor
cld
jg
push
cmp
test
cmp
cmp
adcb
gs
mov
ret
insl
or
mov
aaa
sbb
push
je
sbb
inc
cld
fadds
shrb
je
in
pop
jno
mov
pop
mov
push
xchg
pop
push
xchg
adc
bound
mov
pop
adc
jmp
sub
iret
insl
aaa
je
sub
cmpsb
fs
jmp
out
fadd
divl
and
and
inc
mov
adc
jg
loopne
add
jmp
push
idivl
adc
sahf
iret
adc
mov
xor
scas
test
sti
mov
enter
negl
lret
inc
xchg
or
add
jae
add
rcr
data16
push
pop
sub
mov
clc
sub
mov
push
mov
pop
cmp
jne
push
es
into
adcb
lock
cmp
dec
lea
xchg
pop
sti
cs
push
mov
or
add
jp
or
pusha
jg
push
lahf
outsl
mov
sbb
xor
cmp
xchg
pop
push
std
and
mov
ljmp
push
repz
sbbl
mov
mov
or
jae
and
cli
insb
xorb
inc
push
outsb
js
jg
popf
repz
jnp
daa
inc
xor
into
lcall
push
push
and
sub
sub
xor
push
xor
mov
scas
inc
xchg
cld
aad
cmp
adc
sahf
pop
cmp
insl
out
adc
lods
sub
arpl
push
fdivs
leave
clc
je
mov
std
cli
fistpl
fsubs
sbb
loopne
xor
sbb
fstpt
lods
lods
mov
sub
and
roll
leave
xor
jbe
xlat
adc
sbb
adc
and
inc
sarl
mov
movsl
xor
mov
inc
int
sbb
xchg
mov
and
movsl
sub
scas
nop
pop
add
push
mov
mov
scas
and
xchg
adc
mov
mov
insb
lret
inc
add
jle
or
adc
mov
fisttpl
pop
add
adc
lock
xchg
les
lahf
das
fildll
dec
pop
ret
lret
inc
cli
cli
inc
push
sbb
xchg
cmp
or
xchg
sbb
mov
dec
ss
xor
int
loop
and
loop
inc
aam
push
add
aaa
mov
xor
fmulp
cmpsb
mov
imul
outsl
inc
fcoms
out
rcrl
sti
stc
lock
mov
lea
test
in
add
dec
fwait
mov
sarl
sub
clc
fwait
jg
mov
stos
test
cmp
idivl
movsl
cld
sub
add
mov
mov
es
pusha
lods
push
cmc
in
pop
rorb
lock
xor
leave
jb
push
lock
jge
outsb
outsl
jae
pop
getsec
pop
ja
push
and
rclb
mov
inc
cltd
hlt
jno
cli
push
fiaddl
sub
stos
out
or
mov
jmp
in
lds
adc
add
cmp
dec
xchg
push
lcall
psadbw
jnp
scas
jmp
push
cmp
fldz
or
or
inc
add
icebp
mov
scas
bound
mov
jo
pop
pop
pusha
movb
xchg
jg
cmp
xchg
cmc
mov
and
jmp
fstpl
cmp
lea
inc
jmp
clc
sbb
pusha
jmp
out
sub
loopne
lret
repnz
subl
mov
xor
sub
adc
mov
aas
adc
push
insl
jns
jge
mov
ljmp
mov
pop
mov
cmp
or
adc
jl
out
ds
lret
out
ds
lock
data16
aas
dec
in
ret
add
and
mov
sub
xchg
or
inc
push
popf
jo
call
adc
mov
das
inc
add
lahf
adc
sbb
push
xchg
jnp
nop
andb
pop
sbb
hlt
mov
ja
sbb
sahf
and
adc
or
mov
add
popf
add
pushf
inc
adc
test
add
aas
sbb
cmpsb
stos
mov
stos
mov
les
push
add
pusha
cmp
scas
pusha
cli
dec
ss
lcall
add
xchg
pop
mov
push
sbbb
mov
and
dec
mov
dec
xlat
dec
cwtl
clc
lods
and
fbld
data16
stc
shl
push
nop
jg
insb
sub
gs
sub
insl
lret
lods
stc
xor
jo
popf
mov
ljmp
out
shlb
cmp
inc
mov
das
jne
push
cmc
add
test
cmp
push
idivb
mov
stos
add
jl
add
ror
inc
xcrypt-ofb
cmpsl
scas
dec
jle
in
inc
xchg
addl
mov
into
mov
aas
or
dec
push
outsl
shr
leave
xchg
mov
dec
dec
dec
call
xchg
movl
outsl
sbb
cmp
inc
xchg
jecxz
in
or
sarl
mov
fwait
jg
ds
add
push
fcomps
pop
mov
icebp
pusha
repz
dec
sahf
lret
cmp
jne
mov
inc
push
jmp
aaa
adc
cmp
adc
call
sub
or
lret
inc
xor
cld
cwtl
mov
mov
lahf
mov
pop
addr16
stos
lods
xchg
outsl
lea
pop
enter
in
cltd
data16
mov
shlb
push
out
cmpb
jmp
shlb
dec
xor
rcrb
jmp
shll
insb
vxorpd
es
xor
jb
jl
mov
push
pop
sbb
ret
jl
or
popf
push
rolb
xchg
pop
sbb
cmc
pop
adc
pop
ds
popf
pop
xchg
leave
cmpl
dec
ss
lods
cmpsb
sbb
arpl
sbb
nop
xchg
aam
cmpl
sbb
into
jno
inc
and
mov
in
icebp
dec
sbb
repz
fimull
inc
cmpsb
fldcw
jl
or
jae
ss
aaa
lods
push
or
mov
sbb
push
repz
add
jns
add
ljmp
cmp
mov
scas
xor
inc
ret
out
push
mov
push
xchg
sbb
rcrb
pop
xchg
mov
dec
add
or
sub
push
dec
lret
pop
push
pop
fldt
testb
imul
adc
sti
mov
stos
xchg
xchg
lea
adc
cs
xlat
push
push
sbb
cmp
pushl
mov
jmp
cmpsb
mov
dec
mov
push
jae
lahf
daa
in
cltd
fwait
lret
jb
adc
cvtps2pd
xchg
mov
mov
out
sarl
push
addb
dec
add
push
mov
ds
in
lods
ret
mov
cmp
mov
mov
inc
dec
and
pop
mov
dec
sbb
movsb
nop
pushf
div
mov
outsb
fmuls
cwtl
lea
dec
mov
sub
jle
mov
push
into
add
push
adcl
iret
pop
adc
and
xchg
imul
jnp
sub
lds
push
test
das
scas
push
out
pop
lods
fbstp
pop
dec
jo
mov
out
cmc
push
xor
imul
mov
jno
push
mov
les
push
mov
test
jne
clc
sti
insb
sub
test
lret
shlb
mov
fstps
les
ja
mov
test
jnp
lods
jecxz
fcmovnbe
add
sbb
cmp
imul
push
xor
nop
cli
loopne
mov
test
dec
or
arpl
pop
js
sub
xchg
mov
mov
clc
inc
test
or
fiadds
pop
push
les
mov
xor
bound
cmp
sbb
xchg
push
cld
push
dec
dec
movsb
xor
enter
push
mov
cmpsl
pcmpeqd
dec
pop
inc
aaa
xor
jge
jb
lea
add
bound
cmp
push
sub
leave
cmpsb
mov
and
jp
push
fstpl
in
sub
je
push
ds
push
push
rorb
pusha
scas
mov
mov
lret
pop
add
pop
mov
arpl
loopne
aad
nop
in
rcrb
inc
jno
rcll
pop
dec
add
sub
je
push
xchg
icebp
and
sbb
int
jle
or
jns
insl
aas
cmp
push
clc
ja,pt
push
push
popa
pop
inc
mulb
cs
loop
popf
push
in
shll
cmpsb
xchg
aam
inc
sahf
popf
cmp
ljmp
pop
cmp
cmpsb
pop
xchg
sbb
mov
lea
shl
mov
inc
lock
jno
filds
push
das
incl
cmp
pop
mov
andl
pusha
dec
xchg
xchg
ret
clc
shll
adc
jne
mov
xor
xlat
inc
mov
mov
jmp
arpl
insb
scas
sub
lcall
add
pop
int3
cmpsb
jae
or
ret
sbb
jnp
dec
adc
and
dec
push
add
imul
cmpsl
cmp
lock
in
lret
les
jp
cltd
pop
push
je
cmp
fimuls
add
pop
jp
adc
ljmp
jae
xor
aas
stos
mov
inc
loopne
inc
outsl
adc
shr
sbb
in
xor
pop
stc
sub
jle
sbb
mov
ficoms
roll
call
sub
pop
sti
dec
lea
pop
addr16
jbe
test
sbb
or
shlb
xlat
call
mov
or
mov
xor
push
stc
add
into
inc
stos
inc
dec
mov
mov
dec
aad
xchg
sbb
inc
mov
clc
fxtract
lret
pop
iret
or
hlt
jecxz
sbb
xchg
jmp
frstor
cwtl
fidivl
dec
mov
movsb
das
outsb
fiadds
test
jb
andl
and
les
or
addr16
push
sbb
xchg
add
movsb
movsl
cli
or
mov
adcl
lahf
add
mov
inc
stos
mov
aas
mov
fidivs
add
int3
add
out
mov
inc
lcall
ret
adc
xchg
js
into
mov
frstor
cmp
jnp
mov
push
je
or
xchg
mov
mov
jg
mov
jmp
sub
ja
inc
mov
jp
adcb
or
fcomip
lea
das
test
stc
out
mov
scas
cmpsb
mov
mov
add
or
mov
insb
inc
sub
add
mov
shr
popa
pop
or
xchg
sub
inc
pop
and
or
mov
call
lahf
imul
out
pop
or
mov
mov
and
daa
or
lods
dec
sti
loopne
push
sbb
mov
add
hlt
dec
movsb
int3
xchg
sahf
shll
les
stos
mov
cwtl
sahf
sbb
movsb
clc
dec
inc
mov
stc
jle
mov
mov
inc
lods
mov
fsubrs
mov
lock
cmpsb
jns
push
mov
and
sbb
xchg
div
scas
in
data16
pop
mov
movsl
stc
xchg
scas
cmp
dec
pop
mov
jmp
mov
lods
les
sub
hlt
xchg
mov
xor
pop
scas
and
mov
test
jmp
cld
loop
stos
push
test
gs
aaa
xchg
mov
ret
fstpl
popf
movsl
mov
cmp
into
pop
in
jmp
lret
jle
test
hlt
in
inc
lahf
clc
add
mov
ret
pop
inc
lcall
sti
imulb
pop
mov
pusha
hlt
mov
mov
push
ffreep
enter
shr
adc
xchg
test
addb
or
scas
rclb
arpl
cmp
pop
or
mov
ret
jne
inc
test
fldenv
or
jnp
fsub
inc
int
xlat
aas
pop
xorb
pop
xor
cli
testl
mov
jns
push
xor
outsl
jmp
adcl
dec
out
pop
testl
dec
mov
mov
fisubrs
sahf
es
dec
fsubrp
jle
les
out
add
fs
and
jl
sub
lcall
mov
fldlg2
imul
daa
sbb
test
aas
push
cmp
cmpsl
cltd
gs
or
sbb
mov
divb
out
inc
dec
ret
outsb
scas
addr16
mov
xor
ret
xor
rolb
push
cmp
add
fs
std
mov
xchg
cmp
mov
xlat
fcomi
nop
in
cs
and
xor
cmp
dec
push
fistps
call
dec
xchg
ja
jl
loopne
sbb
adc
test
loop
sub
int
call
pop
add
repnz
sbb
outsl
data16
jge
adc
das
jae
inc
mov
sbb
incl
in
ljmp
fdivr
out
in
cld
mov
jne
out
push
in
sbb
pop
inc
addr16
fildl
fsubrp
push
dec
dec
enter
push
push
jecxz
or
loop
rcrb
xchg
out
pushl
pop
adc
movlps
pop
fstpl
pushf
fs
adc
push
inc
insl
mov
mov
xor
sbb
dec
pop
xor
push
jnp
xchg
add
add
imul
adc
adc
and
jns
add
xchg
lods
imul
sti
xchg
and
sub
daa
mov
xor
mov
aam
mov
rcl
xchg
mov
dec
sbb
pop
cmp
int
icebp
push
test
jge
xchg
adc
scas
sarl
mov
mov
in
xchg
cmp
out
and
scas
mov
mov
inc
ret
aad
pop
push
adc
mov
cmp
jno
sub
sub
inc
jmp
lret
push
adc
or
xor
xchg
and
sbb
in
fs
nop
test
jae
aam
lcall
inc
bound
jp
fs
inc
movsl
and
sub
cmp
imul
ljmp
rcll
xlat
leave
sub
adc
idivl
pop
xchg
jmp
lods
out
les
test
enter
nop
daa
jg
int
and
ja
pop
fisttps
dec
or
lret
and
notl
sub
repnz
test
scas
cwtl
ja
clc
andl
inc
insl
dec
sbb
out
mov
dec
das
fisubl
gs
loopne
inc
xor
push
xor
std
and
mov
pop
neg
clc
dec
stos
dec
xchg
xlat
fwait
adc
imul
jno
xchg
fiadds
sahf
mov
jb
fcmovbe
pop
mov
sbb
popf
xchg
inc
out
mov
cmp
xor
mov
out
xchg
adc
cmpsl
loopne
push
repz
repz
xor
fdivrs
les
popa
sbb
notl
frstor
add
mov
mov
sbb
xchg
mov
push
fsubl
sub
sub
ja
jge
and
push
inc
filds
xchg
inc
xchg
push
xor
mov
xchg
mov
xlat
dec
sub
nop
xor
nop
leave
je
stos
gs
xorl
mov
push
dec
call
es
sbb
in
fsubr
imul
test
inc
push
push
cmp
imul
xchg
cmp
popa
in
test
pop
ret
shlb
xor
int3
and
addr16
adc
mov
dec
fsts
xchg
mov
dec
pop
gs
sub
push
fildll
mov
jne
and
push
and
pop
pusha
push
mov
jo
pop
ja
mov
xchg
jle
mov
fldcw
push
dec
repnz
add
in
jae
insb
dec
jp
loope
mov
xorb
sub
daa
lods
and
adc
mov
cmp
dec
outsl
lock
pop
jne
loop
stos
xor
adc
loope
ficoml
mov
out
int
jb
pusha
or
cld
sub
cltd
idivb
fcoml
add
xchg
popl
mov
lahf
push
cmp
pop
imul
add
stc
jne
xor
cmp
push
xchg
shlb
fldenv
xchg
hlt
ljmp
sbb
scas
xchg
mov
sbb
pop
jae
xchg
push
test
lcall
fnstsw
fs
in
ret
adc
xor
xchg
inc
push
xchg
imul
xor
mov
dec
push
sbb
or
and
cmp
cli
sbb
gs
push
mov
addr16
lods
ljmp
jmp
inc
lods
push
mov
adc
jmp
mov
xchg
shll
lret
je
out
dec
or
std
jmp
out
pop
mov
pop
cmovno
jns
sub
leave
popf
sub
mov
movsb
stc
imul
loop
cmp
sbb
xor
or
test
arpl
out
ficompl
shrl
sub
inc
repz
pop
inc
into
mov
ja
push
sahf
fwait
and
push
sub
pop
scas
addl
arpl
stos
movsb
sbb
adc
faddp
xor
mov
loop
push
aam
jb
es
fsubp
pop
xchg
in
sub
or
inc
pop
scas
push
push
lahf
adcb
xor
mov
cmpsl
inc
sbb
aas
bound
mov
fwait
lods
stc
loop
in
push
imul
xor
ljmp
ljmp
fildll
add
sahf
lret
out
mov
fistpll
and
je
test
mov
push
leave
inc
sub
insb
cmp
stos
out
sbb
ljmp
aam
je
adc
in
out
clc
add
enter
push
fimuls
in
enter
fistl
mov
dec
repnz
repnz
or
pop
ret
mov
aaa
ds
lahf
fsub
sub
cwtl
int3
xchg
fdivl
in
pop
in
dec
xchg
or
pop
lods
fidivrl
jg
and
and
add
rorb
add
push
call
scas
lea
inc
ja
das
adc
jae
mov
aaa
push
xlat
jg
roll
jb,pt
hlt
enter
shlb
aaa
inc
loop
add
ret
inc
leave
inc
cmp
pushf
lods
out
repz
idiv
mov
jae
neg
fwait
sahf
les
jns
inc
mov
loope
in
xor
or
sbb
push
aaa
fmul
jno
mov
mov
xchg
jno
pop
cmp
push
and
push
es
inc
mov
int
push
lock
xchg
movsb
out
ret
daa
inc
imul
aam
scas
mov
das
mov
cmc
sub
rorb
out
repz
xor
xor
xor
popf
dec
repnz
scas
rorb
mov
clc
sbb
push
insl
into
stos
add
mov
jmp
repz
xor
mov
test
or
leave
ss
xchg
daa
pop
mov
jb
aad
std
ret
jl
push
adc
or
imul
lret
push
dec
sti
mov
and
add
push
dec
cmpsl
lea
daa
push
std
jle
js
decb
inc
adc
and
and
and
lods
loopne
and
gs
ljmp
idivl
and
sarb
sbb
pusha
js
mov
std
xchg
clc
mov
jge
cmpsl
jp
jnp
fstl
mov
shlb
cltd
ja
decb
cmp
and
out
fwait
or
fdivs
or
xchg
adc
jne
or
inc
sbb
or
inc
mov
mov
cmpsb
bound
jnp
inc
sbb
test
and
inc
inc
push
inc
mov
mov
cmpsb
lods
repnz
pusha
ret
mov
ss
inc
xchg
add
push
xlat
pop
mov
scas
sarl
clc
imul
addr16
pop
cmp
imul
mov
jmp
cwtl
repnz
sub
dec
and
sbb
pop
fs
fadds
jmp
mov
in
sub
dec
mov
push
fisttpl
mov
call
jbe
subb
jo
xor
jp
cs
xchg
jecxz
sub
rol
dec
es
mov
les
add
ret
mov
xor
loopne
xchg
add
rcr
jecxz
mov
mov
adc
js
imul
add
dec
in
jno
or
loopne
xchg
pop
ljmp
mov
or
out
gs
mov
pop
and
enter
cmpsb
push
pop
iret
das
cmp
movl
fnsave
mov
adc
out
icebp
cmpsb
imul
jbe
sub
xor
nop
ds
fmull
adcl
fs
cmp
aad
out
fwait
sbb
xchg
xor
jne
pop
sub
add
mov
aad
or
inc
in
stc
xchg
xchg
arpl
aaa
fmull
sub
lods
pushf
testl
outsl
bound
xchg
in
lret
inc
lock
dec
xchg
cli
imul
filds
imul
or
mov
or
sub
mov
arpl
call
into
adc
popa
xor
insl
inc
fwait
popa
push
mov
adc
push
pop
add
push
int
add
loope
inc
les
cmc
dec
aad
mov
sub
mov
in
cmc
in
mov
mov
jo
mov
cmp
lret
and
lock
sti
add
xchg
outsl
add
and
mov
xchg
jb
cld
pop
jb
mov
shlb
pushf
xchg
push
aas
push
dec
jecxz
cs
adc
xor
scas
add
pop
mov
or
push
xor
subl
and
stos
scas
adc
clc
xor
xor
ljmp
xchg
mov
pop
in
dec
mov
aaa
stos
mov
push
neg
xchg
push
inc
xor
lret
mov
xor
mov
xchg
shr
sub
pop
push
out
in
mov
mov
add
popa
mov
jnp
test
fldt
pop
aad
lock
popf
outsl
lcall
push
jnp
inc
mov
add
ja
add
xor
jb
pop
into
cltd
jns
aam
jg
xor
int
dec
fdivrs
test
pop
into
dec
cmpb
stos
hlt
xor
and
mov
xchg
adc
pop
push
mov
xor
or
jge
xchg
movsb
in
icebp
pusha
cli
lods
stos
xor
inc
aas
add
mov
lods
ss
cmp
nop
xchg
xchg
pop
lahf
rolb
dec
pusha
pushf
orl
push
fnstenv
lods
enter
lahf
int3
push
ljmp
dec
push
sub
mov
cltd
inc
and
jo
call
loop
fdiv
jle
mov
jge
jl
adc
aas
addr16
sbb
push
and
jno
inc
mov
out
mov
cmpsb
push
in
inc
pop
pop
mov
pop
mov
and
aas
negl
pop
xor
sbb
mov
aas
arpl
hlt
ljmp
jmp
std
xor
lock
sbb
xchg
dec
xchg
dec
sbb
sbb
jns
test
adc
sbb
jle
enter
push
mov
add
or
cli
hlt
push
das
cmp
lcall
sub
jge
or
out
ficoms
and
push
sbb
adc
sar
lret
bound
xchg
mov
inc
lcall
hlt
or
inc
nop
lahf
lea
fidivs
xor
sti
test
sub
out
int3
orb
add
cmpsl
lods
adc
or
mov
sbb
fisttpll
jecxz
adc
push
mov
lds
xchg
jnp
mov
lret
and
rcr
or
popf
pop
mov
sti
out
fcompl
in
xor
mov
in
packuswb
lcall
pop
sub
pop
cld
ja
xor
xchg
mov
data16
ret
jnp
mov
out
int
out
dec
pushl
pop
mov
jno
sub
inc
jnp
mov
mov
add
setbe
lds
daa
inc
xchg
sub
in
hlt
fidivrl
stos
mov
cmp
sbb
cmpsb
negb
mov
into
mov
test
and
hlt
clc
sub
sub
xlat
cld
test
xor
xor
and
shlb
fs
rorl
test
ds
rclb
adc
sub
into
stc
and
hlt
divb
xorb
jnp
addl
testl
mov
and
rcll
mov
push
les
fs
ds
inc
and
and
mov
sbb
test
sbb
stos
mov
cmp
or
scas
cwtl
cmp
xchg
repnz
or
inc
mov
in
stos
sub
popa
into
mov
clc
inc
mov
mov
incl
in
sub
push
shlb
add
cmp
xchg
fcompl
dec
movsb
adcl
out
iret
inc
leave
jns
fnstenv
mov
jle
mov
stos
or
pop
and
pop
or
adc
scas
xorl
push
fldt
mov
aaa
sbb
addr16
fwait
add
jbe
pop
inc
xchg
add
out
sbb
inc
pop
int
and
cwtl
ja
push
push
les
sbb
mov
out
add
push
cmpb
movmskps
jl
rcr
cld
sbb
out
push
iret
mov
leave
or
in
lock
addl
fisubrl
inc
or
xchg
mov
je
dec
idiv
xchg
cltd
movsb
mov
lods
xchg
pop
and
imul
jp
in
clc
out
push
xor
lea
cmpsl
mov
dec
and
mov
jg
xlat
sbb
lret
inc
out
jge
lret
sti
and
mov
xchg
in
sti
adc
jg
or
rol
movsb
outsl
iret
xchg
add
and
pushf
inc
enter
les
js
lcall
jbe
push
adc
add
dec
push
mov
rorl
sarb
push
movl
xchg
stc
xchg
das
int
outsb
inc
cmp
aaa
fwait
loop
cwtl
enter
ja
stos
sub
mov
insl
jle
leave
jns
ret
movb
add
adc
scas
out
dec
jbe
shl
pop
adc
dec
sti
dec
outsl
stos
pop
cld
jl
mov
mov
xor
xchg
mov
push
daa
mov
sub
xchg
int3
fldz
mov
nop
mov
and
xor
lret
xor
pop
mov
in
shll
mov
xchg
fimuls
cmp
cmc
loope
imul
btc
dec
sahf
push
or
adc
add
iret
vldmxcsr
aam
out
lods
pop
xor
jbe
ljmp
outsb
inc
out
xchg
dec
dec
call
cmp
out
outsl
inc
popa
lret
aad
inc
shll
stos
adc
xor
jns
xchg
int
mov
fcoml
cmpsb
mov
mov
int
lock
sbb
push
fcmovb
pop
pusha
lcall
test
lcall
xor
or
fs
push
in
cwtl
or
jno
imul
xchg
outsl
xchg
jle
add
repnz
into
inc
jno
nop
mov
fidivrs
data16
subl
jecxz
ret
jnp
and
iret
xchg
and
test
icebp
loopne
popa
push
add
das
addr16
inc
xchg
inc
add
cmp
sbb
es
jne
and
pop
test
test
push
inc
movsb
out
add
mov
inc
repz
es
mov
and
in
sub
aam
idivb
lcall
out
pop
pop
gs
mov
dec
in
iret
stc
ds
faddl
std
test
mov
inc
sbb
icebp
or
decl
mov
mov
sar
jp
arpl
enter
dec
and
cmp
decl
mov
dec
sub
pusha
lods
mov
and
dec
add
int3
adc
daa
in
jl
fnstcw
mov
frstor
inc
mov
push
int3
aaa
mov
pop
ds
adc
aaa
popa
bound
jns
iret
in
orl
enter
mov
push
jg
fimull
lods
in
cmpsl
lock
jp
mov
fldl
xor
roll
xchg
repnz
fldl
mov
mov
mov
movsb
fcompl
pop
test
shlb
and
std
rcl
rsm
or
xor
mov
jno
pop
push
js
shrl
and
pusha
test
inc
insb
sbb
mov
ljmp
mov
xlat
mov
fldt
push
insb
and
adc
aas
or
jne
xor
or
mov
scas
test
fwait
xchg
lahf
push
dec
aad
mov
mov
in
ss
sbb
ljmp
fcompl
xchg
or
test
call
inc
mov
xchg
and
int3
or
jecxz
pop
or
jmp
mov
out
insb
and
mov
mov
stc
mov
xor
sbb
mov
popa
cmp
lcall
sbb
adc
imul
das
dec
pop
mov
stos
pusha
stos
lock
inc
adc
sbb
test
jg
fsubl
cmp
xchg
in
subl
push
popf
dec
hlt
mov
gs
dec
mov
flds
mov
popf
inc
cld
pop
in
xchg
dec
add
les
sbb
and
cli
push
inc
inc
cmp
hlt
rorl
ds
push
addb
lds
and
and
xor
add
out
repz
icebp
lods
mov
mov
jnp
xchg
pop
add
icebp
lcall
popf
xlat
lret
div
and
xlat
add
mov
ljmp
xchg
pop
pusha
movsb
dec
movsb
sarl
cli
jbe
inc
lods
in
and
and
jl
out
leave
js
mov
xchg
mov
dec
mov
mov
shrb
icebp
adc
push
std
adc
cs
sbb
js
push
or
pop
pop
jbe
and
sarl
mov
dec
dec
rcrl
lcall
pop
clc
leave
and
fs
add
loopne
repnz
in
addb
xor
insb
movsb
fcomps
xor
add
or
xchg
mov
out
fldenv
cmp
mov
lock
dec
cli
sbb
and
lods
bound
stos
iret
pop
clc
add
arpl
mov
js
pusha
mov
xor
cld
fsubrp
out
pop
adc
cs
test
fstl
xadd
test
cmp
pop
inc
mov
jns
sub
test
add
jns
and
stos
inc
in
aad
and
mov
sbb
mov
add
cmp
xchg
test
fcompl
out
mov
bound
mov
pop
mov
test
adcl
movsl
or
adc
gs
incl
sbb
inc
inc
mov
stos
or
adc
out
adc
xor
xchg
ja
xlat
lcall
test
fstpl
push
mov
or
aad
movsb
and
jne
push
je
stc
mov
in
inc
cltd
addr16
sub
bound
out
mov
xchg
ljmp
clc
push
aad
or
les
sub
and
xor
data16
push
pop
insl
and
and
sub
mov
imul
xor
jo
popa
scas
mov
pop
rcl
dec
cmp
lock
pushf
ja
adcl
enter
sti
dec
adc
aas
push
sbb
mov
inc
out
sbb
mov
mov
fisubrl
rorl
cmp
push
call
dec
push
and
popa
lcall
push
or
out
lcall
outsl
idivb
mov
add
ror
leave
push
roll
dec
cli
ss
aad
out
xchg
fsubs
fiaddl
jo
js
call
adc
scas
cmp
xchg
pop
add
xchg
js
shr
stos
rcrb
or
pop
jmp
insb
scas
xchg
xchg
roll
adc
fdivp
sti
inc
gs
test
loopne
cwtl
adc
aad
pop
out
adc
lods
cmp
das
lods
in
dec
movb
fstpt
and
sbb
pop
in
in
inc
fxch
stos
adc
cmp
gs
jmp
pusha
inc
sbb
and
daa
insb
lods
cmp
int3
addr16
adc
aam
aaa
test
cmp
ja
mov
lds
mov
fwait
cltd
mov
cmp
pop
arpl
loope
pop
pop
xchg
fidivrl
pop
incb
add
mov
popa
xor
jl
lcall
lcall
mov
adc
ss
push
stos
fwait
sbb
jo
xchg
pop
out
inc
orb
xchg
jg
jnp
cvtps2pi
push
mov
mov
xor
enter
imul
pop
fsubrs
adc
push
pop
aam
push
ds
xor
outsb
rcr
jge
push
xor
push
fisttps
mov
inc
cmpl
add
rcr
dec
repnz
bound
rcr
sbb
mov
nop
add
jo
es
lock
sub
cmpl
pushf
sbb
loope
sbb
jg
push
shll
push
xlat
jecxz
inc
cmp
sbb
mov
popf
aas
sub
popa
and
jmp
test
aas
push
lret
or
lods
leave
iret
pop
mov
xlat
nop
pusha
xchg
pop
imull
jnp
lds
pusha
or
fwait
inc
daa
inc
mov
imul
cmp
adc
test
dec
jb
jg
popa
dec
aam
dec
inc
pop
ds
jb
mov
mov
hlt
outsb
sahf
sub
mov
fiadds
dec
aas
rorl
das
int3
sahf
sahf
inc
mov
inc
shll
ss
xor
mov
inc
push
mov
mov
out
out
sbb
xor
push
inc
mov
and
enter
int
cmc
add
pop
cmp
push
loop
insl
stos
adc
push
mull
jnp
push
pop
jmp
mov
mov
push
inc
cmp
adc
mov
out
mov
movsb
adc
xor
jecxz
mov
leave
cmp
inc
cmp
or
and
arpl
or
frstor
mov
scas
add
dec
daa
jge
shl
popf
dec
fwait
out
shlb
imul
je
push
xor
sar
arpl
adc
mov
dec
popa
or
clc
mov
mov
xchg
xchg
xor
jae
pop
ljmp
dec
jb
push
out
mov
int
sub
add
scas
mov
inc
fwait
mov
gs
xchg
pop
push
pop
mov
dec
in
pop
and
jmp
or
adc
jno
leave
or
mov
insb
ds
pop
ret
lds
mov
xchg
pop
cmovno
add
push
aaa
addr16
sub
mov
out
mov
fisubrl
and
cltd
jg
mov
push
pop
in
and
mov
mov
fisubrs
dec
addb
cmp
gs
dec
mov
rorl
and
popf
sahf
pop
jle
pop
sbb
cmc
cld
fisttpll
push
stos
outsl
mov
sbb
inc
or
sarl
jg
dec
popa
out
xchg
jo
pop
mov
and
sbb
hlt
daa
pusha
ss
aas
jl
cmp
mov
adc
sub
adc
out
dec
dec
out
mov
mov
push
xlat
xorb
push
inc
or
in
popa
jp
mov
cld
sahf
cltd
scas
jo
jecxz
outsb
xchg
mov
sbb
fldl
push
xchg
lds
xor
fcomp
dec
jb,pn
inc
xchg
sub
add
lret
fstps
inc
ljmp
cmp
sbb
add
repz
jnp
dec
shlb
testl
cmpsl
xor
cmp
loopne
add
loope
fisubrl
ret
cmp
jp
xor
ret
dec
push
ffree
pop
in
mov
or
sbb
pop
mov
lods
mov
loopne
inc
insb
adc
inc
cmp
push
or
add
xor
movb
adc
xor
ret
mov
inc
inc
sbb
sub
lock
call
inc
std
ds
lods
loope
mov
push
decb
iret
ret
mov
xchg
sub
cs
imul
pop
adcb
inc
aam
mov
pop
sbb
mov
pop
les
jae
outsl
out
dec
add
mov
cmpsb
mov
js
adc
test
mov
add
cmp
inc
ja
js
sub
rcll
pop
lret
add
or
ds
xchg
cwtl
rorb
and
xchg
jl
cld
cli
jl
mov
mov
lcall
leave
and
int3
pop
sbb
dec
in
sub
mov
std
jo
cmp
xor
fwait
dec
inc
sbbb
rcll
or
shlb
cltd
xor
and
push
jnp
js
imul
or
mov
fsubrl
jmp
test
roll
cli
repz
testb
cmp
es
cmp
mov
cmpsl
mov
mov
mov
fdivl
xchg
push
dec
clc
daa
adc
cmpsb
ret
pop
sub
test
imul
jmp
mov
int
std
rcll
loope
imul
dec
mov
jl
js
or
mov
iret
push
jl
push
cltd
push
cmp
and
or
clc
xchg
and
rclb
in
mov
cmp
nop
mov
in
sub
and
dec
inc
or
lods
jg
scas
fsubrl
jno
push
jbe
sbb
mov
mov
mulb
push
inc
insl
and
adc
mov
cwtl
jbe
xchg
out
or
fscale
outsb
icebp
cmp
inc
xchg
dec
mov
in
cmp
cmp
fldl
out
mov
cmp
fdivl
test
xlat
xor
js
fldt
pop
ljmp
in
arpl
pop
cmpsl
adc
shll
jge
pop
out
mov
das
in
out
pop
dec
mov
jae
and
or
addl
pop
mov
pop
mov
into
int
cltd
adc
shll
fadds
and
aaa
incb
sbbb
ds
lods
jbe
mov
mov
jg
les
fldcw
in
stos
aam
aaa
adc
push
popf
cmp
adc
je
cmpsl
dec
and
mov
in
and
sbb
int3
les
shl
fimull
in
popf
jns
xchg
or
jno
adc
mov
cmp
push
pushl
popf
or
test
xor
jl
hlt
push
fwait
sbb
fldcw
pop
and
or
sub
push
jae
mov
mov
cmp
out
scas
popf
mov
and
lock
push
test
filds
adc
subl
dec
pusha
fildl
xchg
pop
jno
popf
addl
loopne
jg
dec
aam
out
or
push
lods
cmc
mov
in
aas
adc
jb
jmp
lds
rorl
jmp
push
mov
dec
mov
addb
arpl
push
iret
dec
mov
in
aad
dec
dec
jns
lods
shll
insl
cmp
fcom
and
inc
pop
popf
cli
iret
fstpl
sub
fdivl
mov
sbb
jns
adc
test
push
push
test
mov
sarb
pop
pop
mov
or
pop
sar
imul
fisubrs
push
mov
mov
test
call
ds
ror
mov
and
lds
int3
pop
push
ret
jge
lcall
mov
jno,pt
sub
mov
jo
mov
mov
and
push
int
xchg
xlat
cmp
pop
xchg
cmp
cltd
clc
sbb
add
cwtl
adc
inc
fcmovu
mov
ljmp
test
dec
push
inc
xchg
ljmp
testl
or
popf
sahf
lahf
nop
jb
xchg
sti
adc
loope
adc
test
dec
jne
data16
aaa
jo
pop
and
mov
mov
ret
jp
rolb
xor
xor
ljmp
outsb
add
insb
adc
lret
cwtl
dec
sub
xchg
mov
mov
rcrb
pusha
push
movsl
sbb
jns
int3
xor
lret
push
int
xlat
cmp
arpl
movsl
jnp
pop
outsl
in
inc
aam
sbb
cs
lcall
and
and
inc
ret
das
push
pop
and
test
jne
or
jae
test
loope
lahf
lods
dec
fstpt
dec
out
and
xchg
inc
sub
movntsd
xchg
shr
and
lcall
int3
inc
or
xchg
jg
roll
dec
dec
out
mov
cs
notl
jecxz
sbb
inc
loope
movsl
and
jne
out
adc
sbb
sbb
add
stos
cwtl
fisttpl
pop
mov
dec
ja
pop
inc
push
push
movsb
cld
pop
fldt
mov
cmp
and
xor
mov
icebp
loop
xor
call
dec
mov
jecxz
jg
push
fnstsw
push
and
xor
jmp
lods
aad
dec
out
fcompl
rorl
les
mov
xchg
and
hlt
cmpsb
dec
cwtl
cmp
and
jno
pop
sub
jmp
inc
call
adc
sub
vcvtsd2si
dec
inc
cmp
mov
mov
mov
jl
jbe
mov
jnp
sbb
xor
dec
leave
push
add
fdiv
aad
subl
pop
push
sarl
and
xchg
or
rcrb
mov
iret
xchg
or
popa
or
mov
push
shl
orb
mov
loope
and
adc
xchg
fldcw
dec
cmp
lods
aaa
pusha
inc
je
jbe
out
mov
dec
push
mov
rol
sbb
in
mov
xlat
pop
roll
std
cmp
inc
sbb
lea
jg
pop
mov
cmp
iret
pop
js
mov
mov
xor
mov
xchg
test
pop
cwtl
mov
jmp
or
inc
xor
cmpb
jbe
fistpl
inc
add
cmpsb
mov
outsl
inc
stc
sbb
stc
lds
sbb
stos
dec
stos
loop
lods
andl
sub
pop
pop
movsb
cmp
jae
es
popa
jne
xor
fdiv
addl
push
xlat
shrb
and
inc
fs
pop
aas
lea
repnz
lock
add
iret
in
fwait
andb
dec
daa
lea
movsl
jl
xor
or
pop
xchg
adc
cs
ret
mov
jae
int3
fbstp
mov
sub
cmp
xor
xchg
mov
push
adc
int3
stc
push
xlat
insb
std
test
cmp
mov
in
pushf
cmc
cmc
jl
fidivs
push
bswap
push
add
or
dec
sub
mov
insl
add
test
mov
pusha
cmp
addr16
or
or
adc
adc
fmulp
test
arpl
and
xchg
je
cmp
int
cmp
jne
and
ret
nop
inc
int3
int3
arpl
mov
cmp
loopne
je
dec
sbb
sub
pop
push
cmp
stos
clc
ds
in
mov
adc
and
inc
hlt
and
lret
test
aad
jo
fcoml
and
cltd
push
xchg
divl
lcall
in
or
jae
xorb
into
jns
jecxz
and
mov
adcb
test
adc
pop
jg
push
out
mov
adc
mov
test
sbbl
jmp
int
xor
push
popf
jno
adc
scas
cmp
stos
insb
dec
jl
adc
mov
push
js
or
outsb
or
lods
push
sahf
subb
mov
and
mov
or
arpl
sbb
mov
push
iret
jns
push
loopne
xchg
loope
pop
jmp
call
gs
aam
jne
sub
insb
or
fwait
insb
inc
jmp
push
mov
fwait
xor
add
adc
aad
fcompl
test
enter
sub
or
dec
sub
cli
sub
js
xchg
jo
mov
ret
pop
inc
xchg
dec
mov
shlb
sbb
mov
jg
mov
mov
ljmp
push
repnz
fdivs
in
mov
stc
inc
sbb
xor
pop
mov
cmpsb
or
out
sbb
cmp
lea
pop
pop
and
jl
inc
xchg
or
leave
in
xlat
scas
fbld
cmp
lods
cmp
sti
and
push
xor
or
rorl
mov
xchg
popf
data16
mov
pushf
repz
mov
bound
nop
xchg
push
add
lret
jg
mov
ret
mov
jno
dec
jne
jp,pt
lahf
cmp
insl
adc
icebp
mov
mov
scas
and
and
inc
out
mov
roll
xor
cmp
jo
or
add
lods
xor
adc
xor
inc
mov
mov
or
test
jge
out
mov
adc
gs
aad
dec
cld
sbb
mov
andl
ret
cli
cld
aas
jb
dec
dec
ffree
push
xchg
rorb
sbb
rcl
imul
dec
mov
jecxz
cld
push
pop
int3
test
rclb
das
lret
mov
xchg
mov
fildll
cmp
aam
xor
mov
popa
mov
ret
push
cltd
fcmovb
lahf
es
xchg
hlt
add
add
outsb
push
out
add
aam
bound
lds
cmp
jge
int
int3
out
lds
test
add
mov
hlt
ljmp
repz
cmpb
hlt
push
lock
sti
xchg
mov
cli
leave
jns
pushf
clc
or
jb
mov
pop
xchg
imul
push
enter
and
into
clc
or
lock
and
pop
incl
imull
pshufw
mov
std
mov
jl
xor
push
ret
and
push
xchg
dec
sbb
stos
add
mov
dec
and
sub
shr
test
sub
pop
and
aas
pusha
mov
mov
dec
daa
pushf
sub
sub
inc
and
inc
dec
fsubrs
ss
add
inc
jg
add
add
or
enter
or
xchg
mov
jae
gs
or
xor
xlat
mov
aam
pop
in
mov
sbb
out
ret
out
or
cmpsb
aaa
pop
xor
inc
xor
aaa
inc
loope
mov
data16
dec
ja
xor
or
movsb
mov
jg
insl
lods
out
mov
dec
sbb
or
cwtl
cs
dec
sub
jp
adc
imul
sub
cmpb
leave
pop
lahf
sbb
pop
push
loop
or
jb
mov
movaps
mov
gs
mov
add
xor
sahf
aas
or
loope
sub
and
test
lret
pusha
adc
add
cwtl
push
push
push
and
push
mov
pop
sti
xor
mov
pop
stc
xlat
push
das
pop
pop
sub
jmp
dec
or
inc
sub
movsb
jae
aas
add
add
xor
lds
mov
out
dec
add
loopne
inc
jecxz
std
hlt
ret
out
cmpl
inc
mov
cmp
es
sbb
ret
cmc
mov
stos
ja
jo
inc
xchg
mov
rcrl
cmp
inc
sbb
mov
xor
lods
add
inc
add
xchg
push
mov
out
or
cmp
xchg
fisttpll
fcmove
and
loope
sbb
xor
jmp
addl
xor
pop
enter
and
xchg
movsb
das
fs
jge
lahf
mov
scas
pop
sub
jb
and
fcomps
inc
xor
in
adc
push
iret
inc
mov
and
sbb
scas
inc
sub
jbe
roll
clc
mov
fiadds
ja
push
mov
cmp
pop
mov
lahf
daa
mov
lods
lcall
sbb
lret
jge
push
cmp
enter
jne
gs
out
das
mov
dec
jne
int3
xor
pop
movsl
adc
movsl
test
enter
fwait
xchg
adc
mov
xlat
jnp
loopne
fstpl
in
jo
or
push
jno
push
push
add
nop
adc
iret
shlb
mov
mov
cmp
jecxz
xchg
test
push
cmp
sahf
mov
sbb
test
jbe
fisubl
sbb
imul
test
rorl
push
pop
mov
vmovss
cmpsb
orl
cs
dec
imul
jmp
mov
pop
push
dec
loopw
xor
sbb
xchg
adc
xchg
cmpsb
test
mov
jnp
xor
and
out
pop
pop
dec
and
fisubs
cmp
out
inc
sub
pusha
outsl
roll
aad
xchg
add
rclb
cli
repnz
ret
gs
push
push
inc
mov
or
add
pusha
in
cmc
insb
or
popa
scas
test
insb
inc
add
dec
or
leave
xor
bound
lods
xchg
daa
mov
sub
push
fcmovb
xchg
xor
fs
aas
out
in
stos
cmc
test
stos
sbb
push
xor
cld
aad
cs
xchg
je
xor
les
sub
pop
shll
inc
jb
out
xlat
jne
hlt
testl
cmp
jge
xchg
cld
lcall
rclb
cmp
push
push
push
sbb
int3
sub
ja
sti
fstl
add
mov
or
adc
lods
sti
cwtl
cwtl
fcomps
jnp
std
repz
in
dec
out
addl
xchg
and
push
dec
mov
sub
movsl
popf
add
cmc
xchg
or
icebp
daa
dec
bound
fsubl
cmpsl
and
cli
mov
out
add
ret
les
xchg
gs
aad
sbb
xchg
nop
pop
cmp
sub
loop
mov
out
addl
add
xchg
mov
cmp
mov
push
add
punpckhbw
das
and
xchg
inc
ds
loopnew
arpl
loopne
sub
outsb
in
pop
ror
dec
je
xchg
mov
ljmp
int3
mov
adc
ret
mov
mul
jmp
add
mov
pop
adc
mov
push
mov
inc
dec
mov
inc
cmpsl
fdivrp
mov
outsl
xlat
stos
bound
loop
and
pop
mov
ffree
xor
add
shrl
ljmp
pop
out
aaa
lret
mov
daa
cs
jbe
mov
insl
mov
rorb
dec
jne
and
sub
test
aam
mov
mov
sub
push
das
inc
out
mov
mov
sahf
test
loope
mov
xchg
cmovbe
xchg
push
mov
sbb
and
or
outsb
sub
call
std
push
cmp
movsl
or
mov
lds
and
imul
sti
fadds
aad
test
xchg
mov
out
cmpsb
leave
inc
cmpsb
dec
push
xlat
sarl
inc
cwtl
sti
dec
or
es
inc
lds
dec
push
pop
push
stos
ss
xor
lcall
jo
adc
dec
cmp
and
inc
pop
outsb
lods
out
sti
jg
push
mov
push
sub
mov
sbb
xchg
and
xchg
stos
inc
jmp
dec
xor
frstor
and
popf
push
inc
dec
pushf
mov
mov
push
repz
push
loopne
into
int3
inc
sub
out
inc
je
call
test
inc
push
jg
jmp
push
arpl
loope
rorl
ds
fiadds
repz
adc
ret
lret
push
sub
sbb
jb
or
mov
cwtl
inc
out
jb
xor
jb
jne,pt
mov
sub
aas
rolb
dec
ficoml
adc
inc
mov
and
jb
punpcklbw
mov
hlt
sub
dec
test
lds
fsubrl
and
push
shlb
ljmp
inc
mov
adc
pop
ljmp
in
out
and
enter
pop
push
sbb
mov
popf
cmp
pop
scas
fs
sbbl
sub
arpl
scas
adc
xchg
inc
lcall
out
popf
mov
imul
xchg
jl
push
mov
mov
iret
and
out
arpl
inc
adc
adc
fistpl
ja
mov
ret
incl
lods
daa
lds
mov
sub
cmc
mov
dec
movb
and
loop
inc
rdtsc
dec
dec
push
call
lcall
pop
mov
or
les
hlt
inc
loop
inc
bswap
and
dec
aad
repnz
sub
inc
lock
nop
fadds
je
xor
ds
adc
scas
sti
xchg
out
push
insl
sub
or
mull
ss
das
mov
fisttpll
jb
call
rolb
je
das
add
or
lahf
pop
jae
stos
mov
pop
out
pop
dec
mov
rorl
jp
stos
les
out
add
sbb
adc
mov
mov
imul
dec
addr16
sbb
jge
fisubrs
hlt
lds
inc
repnz
sti
repz
push
jnp
adc
je
shlb
push
inc
lcall
loope
cltd
int
jnp
int3
sub
and
xchg
mov
leave
popa
or
push
mov
subb
lea
xchg
popf
stc
add
jecxz
ret
mov
jp
mov
divl
mov
and
arpl
sub
into
test
iret
add
movsl
data16
call
fcomps
push
pop
push
push
in
mov
fs
clc
push
insb
test
xchg
xchg
outsl
sbb
rcrl
push
xor
lea
dec
mov
mov
fwait
test
xchg
or
insl
pusha
xor
ja
jmp
std
xchg
inc
pop
inc
mov
fadd
ficoml
loope
cmp
cmp
rorb
js
pushf
fs
dec
cwtl
xchg
mov
outsl
mov
hlt
aad
push
test
dec
cmp
cld
mov
dec
fdivr
in
aas
das
ret
daa
pushf
ror
popa
je
test
sub
dec
std
movsl
xor
mov
ds
pop
adc
lock
rorb
mov
mov
lahf
mov
sbb
sub
outsb
xchg
shl
xor
jb
sub
popf
lahf
mov
or
out
mov
mov
pop
and
test
rcrl
push
pop
jl
jns
and
add
sub
mov
gs
fisttpl
xorb
outsb
arpl
int
repz
sbb
xor
es
dec
jo
cwtl
push
inc
aaa
push
repz
mov
sbb
jp
sbb
mov
int3
js
pop
xor
ds
leave
push
cwtl
repnz
lret
out
push
fcmovbe
sub
imul
fldt
xlat
mov
cmp
sbb
dec
faddl
inc
popf
mov
mov
into
pop
jbe
js
mov
xchg
dec
jbe
push
std
jecxz
cli
imul
sub
out
lahf
lret
mov
arpl
xor
adc
lock
pop
sbb
jecxz
aas
jb
arpl
xor
imul
sub
pop
aas
xchg
int
out
pop
adc
push
sub
mov
clc
popf
in
add
push
pop
and
mov
es
mov
mov
imul
push
inc
push
sub
cmp
pop
dec
shll
xchg
pop
and
mov
lcall
or
rcrb
sbbb
lds
inc
xchg
lret
adc
iret
je
movsl
outsl
cmp
pusha
arpl
stc
inc
pop
sahf
imul
push
or
das
dec
sbb
sub
bound
jns
or
mov
push
mov
out
lea
sbb
pop
fsts
add
in
call
insb
jns
and
jg
and
subb
xor
push
xor
inc
or
xchg
adc
push
ret
insl
pop
insl
inc
sub
sbb
adc
fs
mov
stos
jp
fwait
or
mov
mov
test
add
jae
subb
jo
inc
test
int3
dec
sub
xor
les
bswap
adc
pop
std
fsubp
push
inc
pop
xor
inc
insb
mov
mov
dec
jb
movsb
in
jl
xor
sbb
or
rol
inc
in
inc
out
dec
icebp
pop
mov
divl
sbb
imul
test
pusha
cmc
outsb
mov
xchg
adc
mov
sub
test
addr16
xor
inc
fisubrl
je
scas
inc
xchg
cmc
int
out
int
sub
fdivr
cmp
cmpsb
mov
pop
andb
mov
lret
pop
push
jo
mov
adc
add
pop
ja
inc
icebp
inc
bndldx
push
std
mov
sbb
test
push
lods
jecxz
xchg
lahf
xchg
xchg
push
inc
push
scas
mov
xchg
sti
pop
outsl
xor
cmc
outsl
mov
pop
xor
push
stos
dec
out
pop
mov
cld
xchg
mov
mov
lea
push
leave
mov
sbb
mov
and
fs
out
ret
pop
scas
add
cmc
cmpsl
push
mov
sub
xchg
jle
outsb
icebp
cmp
mov
add
jp
mov
mov
xchg
test
stc
sbb
mov
xlat
test
outsb
xchg
sub
add
loop
or
test
loopne
mov
jecxz
das
mov
loopne
pop
dec
fcmovnbe
jg
push
outsl
xor
cmpsl
mov
test
dec
lret
hlt
out
xchg
scas
ss
mov
xor
jle
push
jle
ficoml
mov
adc
rcll
and
xlat
fdiv
mov
jno
aas
pop
daa
jg
jg
add
cmp
jl
xchg
stc
or
jle
popa
inc
and
jge
inc
and
movsb
jge
cltd
inc
sub
sub
lret
mov
and
rcrb
cmpsb
clc
movsb
pop
lret
js
fistl
cwtl
inc
imul
sbb
sbb
dec
or
add
imul
mulb
mov
sbb
xchg
and
out
ss
daa
popf
arpl
or
in
pop
lret
push
sahf
in
pushf
sbb
dec
sbb
push
push
push
mov
lods
dec
mov
in
xchg
roll
je
in
add
lcall
jge
push
push
sub
notl
xchg
sbb
jmp
mov
icebp
dec
stc
inc
fisttpll
pop
cmc
cltd
ror
jle
arpl
push
jle
jnp
xchg
sbb
movsl
aam
sub
mov
gs
jmp
sbb
lods
cmp
popa
jb
sbb
sub
scas
mov
mov
repnz
mov
ret
shll
into
test
insl
dec
mov
aam
repz
push
sub
pop
lods
sti
repz
std
aad
pop
inc
stc
and
mov
sub
xchg
mov
push
imul
add
mov
mov
mov
sub
cld
js
adc
mov
jp
icebp
jnp
mov
pop
pop
mov
push
xor
dec
pushl
or
rorb
fisttps
sbb
hlt
pop
addr16
lods
and
fidivrs
jge
add
mov
movsl
add
lcall
inc
in
mov
test
call
xchg
adc
fs
ret
mov
xchg
jle
insl
push
out
sbb
lods
inc
test
sahf
and
mov
cli
or
push
jl
dec
clc
xor
rolb
sarl
fadds
add
cmc
cs
mov
scas
sub
sbb
movb
mov
dec
add
out
shll
xchg
xor
leave
fs
bound
imull
sub
pcmpeqw
cmp
sbb
mov
mov
insb
xchg
xchg
mov
rorb
jmp
scas
inc
aaa
cmp
mov
pop
mov
shrl
xchg
jg
ljmp
std
add
xlat
movsb
dec
cs
je
add
mov
and
xchg
sbb
dec
in
sbb
nop
adc
jns
divl
addb
add
movsl
xor
lods
sub
stos
mov
push
adc
mov
sahf
dec
and
or
jmp
mov
cmp
jne
cmpsb
dec
leave
lods
sbb
aas
mov
pop
pop
imul
int
jbe
std
ror
repz
mov
jo
cmp
jo
mov
mov
mov
loopne
push
test
aas
ss
rolb
jne
push
add
pop
mov
outsb
sub
je,pt
std
mov
or
push
insb
insb
cmpsl
inc
aaa
hlt
movq
int
scas
push
ja
lret
lods
jb
xchg
pop
fnsave
shll
dec
adc
adc
fbstp
aaa
push
cmp
ret
cwtl
out
sbbb
add
push
xor
fsubs
ret
push
ret
in
es
mov
sub
fdivs
loopne
imul
call
daa
add
rol
adc
dec
jge
adc
or
pop
pop
insb
dec
sbb
jne
scas
mov
and
inc
aas
and
pop
int
lods
dec
cwtl
fwait
xchg
cmpsl
jmp
loopne
or
lahf
jnp
fsubl
in
hlt
add
shlb
stos
insl
insl
lahf
loope
add
lods
adc
arpl
les
jecxz
adc
fs
push
jbe
push
add
mov
dec
fnsave
mov
sti
ja
arpl
loopne
adc
dec
ja
adc
das
fisubrs
stc
lret
and
xor
mov
cmp
add
push
shlb
aaa
push
mov
push
in
int
mov
mov
and
rclb
inc
lods
lods
push
mov
inc
push
push
jmp
stc
dec
sbb
pop
mov
cltd
pushf
xor
xorb
test
mov
sbb
mov
and
adc
and
inc
shll
jl
lds
inc
push
aaa
xor
pop
pop
pop
jp
int
sbb
adc
push
aad
fidivrs
notl
add
fst
out
xor
mov
cmp
not
inc
lret
pop
test
icebp
jp
xchg
sti
jp
adc
xor
out
loopne
mov
mov
push
out
xchg
jge
xor
push
jnp
sbb
gs
imul
lods
clc
jno
adc
xor
pop
leave
sbb
je
cli
xchg
dec
sub
add
ret
mov
ds
jb
cmpb
adc
cmp
pop
cltd
mov
loopne
add
lcall
mov
ja
xor
enter
xor
inc
push
lcall
xlat
icebp
inc
lret
inc
inc
inc
pop
cli
mov
dec
movsb
inc
mov
add
xor
ljmp
cmp
inc
or
cli
frstor
gs
mov
andb
cmpsl
fmull
pop
out
or
mov
rolb
es
jo
inc
test
xlat
cs
cmp
mov
xchg
int
push
adc
jl
push
mov
pushf
mov
mov
nop
mov
jnp
jmp
adc
add
or
test
test
or
shl
push
xor
test
jmp
lret
mov
pop
in
outsb
lcall
mov
add
cld
jo
rcll
jbe
cltd
xlat
add
lahf
push
hlt
out
mov
rol
sbb
fmul
jp
test
stos
icebp
fs
xchg
mov
ja
push
mov
adcl
mov
rorb
rcll
inc
mov
out
xor
inc
cli
and
mov
leave
pop
inc
sbb
push
aad
lods
movb
imul
push
sahf
push
mov
jle
jbe
loop
jl
jmp
jmp
sti
adc
jbe
push
sub
push
imul
scas
popf
je
lods
out
xchg
pop
stos
leave
scas
add
cmc
pop
pusha
dec
nop
fs
xchg
dec
stos
mov
sub
push
mov
movsb
inc
xchg
pop
je
push
test
aam
and
lock
cmpsl
and
pop
cmc
fwait
xor
cmp
cmc
xchg
leave
nop
dec
popf
cmpsl
mov
adc
push
sbb
das
xor
scas
icebp
pop
mulb
jnp
ds
fs
out
mov
xor
mov
xchg
in
jg
out
aas
mov
cmp
and
jns
xchg
sti
xchg
mov
cmp
negb
addb
sbb
or
les
add
xor
pusha
xchg
out
cwtl
mov
out
adc
sub
add
imul
add
push
sbb
outsl
jecxz
movsb
fwait
test
ja
imul
lcall
dec
jmp
stos
hlt
mov
loop
pop
rolb
inc
scas
jmp
lret
sbb
psllq
ljmp
mov
and
gs
nop
and
bnd
and
cmpsl
jnp
outsl
sub
mov
addr16
cmp
cwtl
mov
jp
mov
data16
test
or
mov
fbld
test
insb
stos
es
sub
imul
sub
jae
enter
and
loope
xor
fstps
jne
and
out
imul
xchg
test
fistps
movsl
jb
or
daa
xchg
movsb
xchg
jne
or
test
fimull
mulb
fnstcw
cmp
jb
cmpsb
in
aaa
stc
addb
sub
data16
popf
push
add
sbb
jae
ror
mov
lret
jnp
loope
mov
sbb
nop
testb
pop
mov
jle
fdivs
push
lret
mov
sti
or
cmpsl
mov
sbb
inc
xchg
xchg
ljmp
sahf
arpl
and
out
cwtl
push
jnp
nop
cmp
xlat
adc
ror
and
and
inc
add
and
sbb
mov
std
jp
inc
out
jg
sub
stos
jno
notl
div
in
fbstp
add
add
shlb
fildl
in
rcrl
int
cltd
pop
ds
xchg
add
mov
leave
jno
in
cmpsl
mov
orl
test
int
dec
iret
fldcw
arpl
aaa
sub
dec
xorb
cmp
bnd
gs
rorb
mov
inc
sub
lcall
mov
adc
cmp
push
out
shlb
pop
sbb
push
push
xor
shrl
mov
or
movsl
mov
and
jge
sbb
push
jae
dec
mov
divb
das
mov
push
scas
js
dec
sub
and
fxam
lea
arpl
popa
nop
pop
test
shll
sbb
ja
xchg
hlt
sub
inc
xchg
inc
out
inc
dec
sub
xchg
jg
add
xchg
pop
shll
nop
pusha
shrd
or
fwait
push
add
rep
nop
mov
xor
jnp
lods
xchg
orb
lea
inc
add
pop
bound
sbb
out
filds
test
int3
dec
fnstenv
loopne
mov
pusha
out
lea
adc
add
mov
push
xchg
aas
mov
imul
xorl
into
popf
dec
cmp
shlw
mov
pop
adc
es
nop
nop
fwait
xchg
xchg
jmp
xor
popf
mov
add
mov
fs
xor
mov
repnz
and
mov
mov
incb
fs
mov
pop
jnp
cmpb
pop
test
std
rol
psubsb
jnp
add
ljmp
ja
mov
rol
sti
lods
sbb
xlat
adcb
stos
ljmp
scas
data16
outsb
xor
add
mov
lds
fidivrs
sahf
ret
push
je
or
mov
jns
adc
xchg
ficoml
jmp
lods
in
cmp
ret
mov
mov
xchg
fcoml
cmc
or
sub
push
pop
push
cwtl
mov
xchg
fsub
xor
and
loopne
in
or
jge
and
cli
fwait
dec
fsubrs
js
cwtl
cmpsl
push
mov
inc
dec
adc
lahf
sub
addl
sti
sub
outsl
ret
ficoms
pop
cmp
sub
sub
in
cltd
stc
adc
out
adcl
pop
and
mov
data16
outsl
out
sub
mov
inc
jg
fs
jecxz
jno
inc
mov
sbb
sbb
ljmp
scas
push
scas
sub
sbb
rcrl
dec
int
insb
mov
push
loope
ret
outsl
mov
in
neg
and
sub
imul
fs
fcompl
test
xchg
xchg
cmpsb
push
lods
xor
dec
xchg
push
sbb
addb
jmp
sbb
fbstp
shrb
mov
jle
jle
loop
pop
push
shlb
jmp
in
fcom
sub
xor
fsubp
fsubl
rcr
pop
shl
mov
add
outsb
jmp
mov
insl
jl
push
in
addr16
sahf
push
imul
pop
xor
adcl
xlat
pop
dec
scas
scas
stos
scas
js
push
pop
lods
daa
push
jecxz
xor
stos
cmpsl
push
xor
push
inc
xchg
mov
cld
dec
ja
rolb
in
pop
bnd
push
push
jno
xchg
adc
dec
rcll
sti
sbb
push
mov
xchg
cmpsl
arpl
mov
bound
jnp
cmp
sar
sub
xchg
sub
cmp
mov
int3
or
dec
ljmp
inc
sbb
iret
xor
out
outsl
or
sbb
xchg
xchg
outsb
fistps
lods
push
mov
je
add
cmc
pop
push
pop
mov
push
insb
push
and
getsec
xchg
xor
sub
cmp
into
lcall
dec
lods
inc
stos
dec
xchg
movsb
cmp
mov
mov
sbb
fmul
stos
mov
scas
lret
out
pop
mov
test
mov
dec
jnp
mov
or
push
aas
fcoml
mov
jecxz
pop
lret
mov
iret
cltd
add
push
xor
lcall
mov
stos
mov
test
dec
es
mov
inc
push
cmp
jge
push
sbb
push
insl
or
and
sbb
mov
dec
pop
push
push
lods
xor
inc
push
sbb
pcmpgtw
mov
adc
mov
xchg
mov
or
cli
ret
je
cmp
loope
sbb
into
mov
inc
gs
jmp
xchg
test
ds
dec
lea
pushf
xchg
sbb
sbb
jo
xorl
out
out
pop
mov
xchg
in
cmpsb
sbb
std
repnz
mov
pushl
push
mov
popf
add
jne
or
xchg
hlt
and
cmp
inc
fsubl
or
je
jns
adc
xchg
vprotq
sub
and
push
push
adc
mov
add
enter
js
cmp
loopne
jge
and
mov
mov
jb
hlt
mov
pop
mov
faddl
mov
out
push
mov
pop
cmp
xchg
and
fnstsw
dec
mov
inc
or
mov
popf
xlat
jae
arpl
mov
dec
outsb
fbld
popf
jp
pinsrw
jg
dec
nop
mov
pop
les
xor
icebp
mov
mov
sbb
inc
sar
jmp
pop
je
mov
or
arpl
enter
test
inc
jp
xchg
or
sbb
xchg
xchg
es
fcoml
jo
add
xchg
popf
and
test
jnp
add
jmp
gs
xlat
inc
pop
add
cmpsb
cmp
add
fmulp
mov
icebp
in
xor
aam
es
ror
movsb
out
sahf
and
stos
aam
push
std
int3
int
int3
fadd
das
sbb
outsl
js
push
or
cmpsl
daa
js
push
or
sbb
es
fstps
fistpll
mov
dec
pop
dec
and
jne
xor
cli
outsb
ljmp
clc
pop
inc
jge
aad
adc
cmpsb
cwtl
mov
cltd
decb
inc
xor
add
jecxz
aam
mov
sbb
xchg
push
mov
in
or
cmc
cmp
xchg
adc
in
sbb
jb
pop
leave
mov
and
pop
sub
sarb
mov
push
in
push
mov
in
mov
test
mov
mov
imul
fdiv
ret
jg
xor
mov
lcall
cmp
shl
aas
dec
scas
ret
mov
inc
lods
decb
jg
push
inc
cltd
ret
cmpsl
ret
or
pop
lret
sbb
xchg
cmp
inc
fcmovnb
dec
lret
mov
fmul
or
xchg
icebp
mov
add
inc
popf
cmp
inc
jp
mov
ja
or
in
xlat
enter
xor
dec
repz
les
xchg
outsl
aas
addr16
xchg
sub
cmp
sbb
gs
jbe
push
sub
xor
jno
xchg
or
inc
inc
mov
rep
mov
bound
test
mov
out
xlat
cmc
dec
mov
arpl
sub
xchg
shl
outsb
cmpsb
aaa
mov
pop
adc
out
enter
ret
pop
pushf
jb
and
jno
mov
push
xchg
inc
in
push
add
shl
jle
xchg
es
fstp
test
xchg
inc
sub
xlat
ja
sbb
repz
push
arpl
outsb
scas
mov
jbe
and
lret
pop
loope
ljmp
outsl
fsubl
mov
mov
aaa
mov
jnp
push
nop
xchg
stos
jecxz
push
push
loope
push
sub
nop
pop
out
cld
pop
ja
mov
push
xchg
aaa
stc
push
pop
jg
bound
das
loope
or
dec
iret
loope
imul
fbstp
sarl
pop
cs
lret
in
das
sbb
aam
les
inc
cmp
xchg
mov
jno
adc
imul
test
xor
jbe
xor
js
push
hlt
sub
movsb
xorb
mov
int3
shrb
fistl
out
scas
push
stos
jge
mov
mov
push
icebp
dec
jns
icebp
xchg
data16
in
pop
inc
adc
lcall
and
lods
xchg
or
sbb
aas
sub
cmp
stos
mov
xchg
push
jle
adc
popa
cwtl
jno
test
sbb
and
mov
add
or
ljmp
sbb
in
orb
out
and
inc
cld
jg
rorl
jg
std
aaa
mov
popf
sti
enter
adc
mov
mov
sbb
stos
xor
jne
sub
mov
push
outsb
mov
sbb
pop
push
rcl
outsl
mov
stos
mov
fidivl
lahf
pop
xchg
lods
test
mov
repz
add
adc
aaa
enter
push
imul
and
repnz
and
shrd
mov
gs
std
pop
fstps
mov
add
adc
push
push
aad
mull
xchg
adc
push
xchg
ljmp
add
push
xchg
pushf
in
addr16
cmp
push
adc
mov
pop
movsl
aaa
ror
jp
ss
sbb
sbb
sub
lds
call
add
pop
push
mov
xor
je
repz
aaa
sub
xor
lock
cwtl
movsl
pop
sbb
nop
push
ljmp
fdivs
out
adc
aas
notb
aaa
inc
sub
ja
jo
fxch
pop
outsl
cmc
push
jmp
test
fisttpl
mov
cli
lea
xchg
pop
test
inc
mov
sbb
pop
sahf
sbb
aaa
sbb
xchg
xchg
ret
jbe
loope
popa
out
cmpsb
xor
orl
add
rcll
into
jecxz
sbb
mov
call
xchg
cmp
jl
or
mov
into
aas
pushf
cs
imul
lods
xchg
loop
jmp
pop
sub
loopne
frstor
insl
cli
or
cld
popa
xor
sub
syscall
aaa
lea
mov
push
cmp
decl
movsb
sbb
fs
jp
and
fidivl
addr16
inc
cmc
lods
inc
in
or
inc
rcr
jns
sub
add
mov
fld
shlb
or
sub
je
or
lahf
aad
roll
fldenv
or
jb
mov
lret
adc
jle
aaa
das
push
xchg
test
pop
adc
cli
push
fwait
mov
test
add
jns
jl
std
adc
dec
cmp
or
outsl
lods
sahf
mov
ljmp
push
mov
insb
mov
mov
pop
scas
fsubrs
sbb
insb
pop
fst
insl
cmp
pop
out
push
aaa
add
cli
sub
arpl
add
test
shrl
mull
popa
mov
xor
stos
arpl
or
jl
jmp
adc
fcoml
cmp
dec
test
mov
mov
pop
mov
add
adc
paddw
dec
mov
jnp
xor
into
jmp
stos
adc
xchg
lds
fnstcw
pop
lock
popa
dec
add
jne
lock
mov
ljmp
inc
sti
lock
jl
inc
rclb
popa
clc
adc
scas
mov
add
jo
ja
notl
stos
mov
or
fucomi
mov
cwtl
jb
popa
cli
or
pop
sub
int3
outsb
pop
js
cmp
jl
mov
in
sbb
cmp
xor
or
add
mov
sub
push
idivb
std
dec
inc
pop
cmp
add
sbb
mov
fbld
xor
push
aad
hlt
or
mov
push
lahf
test
fcoms
pop
xor
pop
sub
flds
inc
pusha
mov
out
cmp
sbb
or
aam
sbb
pand
sbb
or
stos
xchg
xor
ret
push
cmpsb
add
sbb
movsl
lahf
add
shr
mov
cmp
cmpsb
sbb
xor
jb
xor
shlb
insl
mov
pop
cs
jb
or
enter
jb
nop
or
decl
scas
push
sar
imul
icebp
and
pop
cli
mov
insl
xlat
loop
push
int
scas
decb
addr16
and
inc
push
lahf
cvtps2pd
insl
mov
inc
cli
and
ljmp
mov
or
data16
push
or
das
dec
insb
sub
xlat
mov
shrb
notl
lods
fcomps
cmpb
mov
mov
insl
pop
nop
test
fwait
repz
push
lar
call
mov
cmp
stos
cmp
cli
mov
popl
xor
pop
arpl
mov
orb
pop
push
sbb
sbb
xchg
push
xchg
repz
int
insl
icebp
hlt
sbb
adc
bound
bound
dec
xchg
lds
ret
jns
jp
pop
add
mov
adcl
and
and
out
sahf
pusha
dec
lea
fidivs
rcll
mov
jge
and
aas
cmpl
lds
mov
das
insl
icebp
daa
mov
sub
loopne
jnp
movsl
popa
js
inc
in
pop
aas
cmp
jp
test
loope
push
repz
xchg
xor
dec
push
sbb
sahf
cmp
out
xchg
adc
adc
and
add
leave
mov
lahf
push
push
xor
call
push
inc
push
daa
mov
je
sbb
inc
fstpt
mov
stos
adc
mov
or
mov
pop
adc
sbb
xchg
fbld
sti
test
addr16
jae
push
xchg
stc
mov
add
nop
insb
in
pop
adc
jecxz
pop
mov
outsl
sbb
aad
mov
mov
fsub
iret
or
pop
loopne
inc
mov
jns
rorb
mov
les
popf
xchg
jno
std
inc
lret
loope
dec
add
popf
test
fwait
bound
arpl
int
lods
cld
popa
dec
int3
fsubrl
idiv
adc
shlb
add
les
cmpsb
sbb
stc
lods
xor
cmp
lahf
fbld
push
or
adc
ja
daa
std
and
add
leave
push
roll
xchg
mov
jg
jno
ficomps
lods
mov
in
repnz
call
dec
inc
vandpd
sti
outsl
mov
std
mov
add
sbb
loopne
loope
in
sub
jecxz
push
out
daa
into
into
inc
int
outsb
or
mov
cmpxchg
pop
in
shlb
or
mov
lods
fdivs
lods
arpl
pop
out
adc
imul
sub
inc
push
pop
and
jmp
sbb
dec
add
loope
dec
daa
lods
scas
sarl
nop
pop
and
sbb
mov
xchg
adc
ror
push
pop
cmc
cltd
fisubs
jbe
push
das
out
sbbb
pop
sub
sub
pushl
jmp
push
insb
das
and
jne
outsb
stos
mov
sbb
notb
xor
je
es
adc
and
sahf
cmp
rcrb
les
ja
mov
add
fwait
xor
imul
sbb
enter
mov
out
pop
pop
dec
nop
sbb
cmpsl
sub
cmp
mov
dec
in
or
inc
out
sub
sbb
add
imulb
sbb
cli
sub
mov
or
inc
inc
lcall
call
rol
fs
mov
scas
addr16
lcall
xchg
lds
xchg
arpl
leave
mov
sbb
xchg
mov
push
push
mov
testl
sbb
movsb
adc
inc
or
cltd
xchg
mov
rorb
sub
out
outsb
in
lret
ss
xor
shl
imul
xchg
sub
es
push
push
add
leave
int
addr16
lock
pop
cmpsl
sahf
dec
mov
jge
mov
jae
inc
rclb
fisubs
xor
push
dec
enter
push
sbb
movsl
shrb
cmpsl
popa
jae
pop
in
sahf
test
shll
test
ret
dec
out
iret
aas
sub
pop
xor
push
dec
movsb
xchg
test
push
sub
pop
mov
adc
fdivr
clc
test
insl
cs
cmp
mov
sub
mov
cmp
cmp
pop
fiaddl
mov
xchg
push
arpl
adc
push
fs
jg
sbb
adc
jno
cmp
mull
loope
repnz
nop
lret
das
andb
add
xor
sub
pusha
sub
mov
pushf
aam
lcall
jae
sub
pusha
adc
xor
in
lods
jmp
mov
jg
fwait
loopne
lahf
mov
dec
out
sbb
sarb
shl
mov
push
mov
insl
xchg
movsl
mov
in
and
cmp
int
shll
sarl
jp
adc
and
xor
movsl
cli
or
fadd
mov
mov
loop
and
mov
cmpsb
mov
push
les
popf
test
add
add
idivl
adc
lcall
sub
ss
push
iret
fsubl
or
mov
adc
shrl
cli
inc
xor
sbb
sbb
xor
cmp
lcall
in
add
or
jns
pop
ss
lods
mov
jo
dec
inc
mov
cli
faddp
sti
adc
idivl
push
lods
sahf
lret
mov
enter
pop
leave
xor
stos
sub
subl
js
mov
decb
sahf
stc
out
imul
loope
leave
sarl
mov
mov
testl
imul
push
and
in
stos
in
push
call
adc
mov
into
in
cmc
subb
pop
jp
and
lahf
mov
pop
sbb
cltd
bound
pushf
out
xchg
mov
xchg
cmp
inc
cld
xchg
xchg
lea
and
mov
stos
xchg
jae
imul
aas
and
imul
lret
dec
mov
push
adc
pop
dec
std
mov
jmp
push
ljmp
inc
and
scas
mov
pop
enter
or
mov
mov
pushl
lods
rolb
lcall
jle
imul
jns
adc
sahf
sub
fistpl
adc
adc
or
popf
mov
and
cmp
stos
dec
sbbl
inc
scas
ja
sbb
sub
out
arpl
push
push
xchg
dec
test
scas
adc
sar
jmp
mov
dec
mov
dec
mov
aam
xchg
mov
add
dec
mov
mov
sbb
push
mov
mov
rcll
stos
xchg
shlb
ret
and
push
push
outsl
fistpll
pop
jp
data16
pop
jb
sub
sbb
aam
rol
mov
cmpb
je
xor
pop
cld
mov
lods
negl
push
pop
mov
fistl
push
pop
cmpsl
and
lods
push
notl
gs
aaa
push
sub
jg
or
aad
inc
xor
and
cmp
in
movsl
lea
mov
sub
outsl
insl
pop
pop
rcr
loop
and
mov
xlat
and
stc
jle
dec
imul
jp
in
ret
adc
dec
scas
pop
fisttpll
addr16
mov
sub
jl
inc
cmp
stos
imull
ret
adc
and
or
push
dec
push
fwait
and
push
popa
add
hlt
andb
cli
dec
mov
sbb
pop
xchg
sbb
adc
andl
fstl
clc
push
push
jb
and
aam
fiaddl
leave
imul
pop
fnstcw
out
xlat
fstpt
add
shrl
scas
pop
jb
jl
pop
idivb
loop
popa
mov
pop
incb
or
mov
sub
pop
insb
sar
jle
je
scas
xchg
std
imul
bound
loope
lret
in
ja
sub
das
xorb
mov
add
es
not
sbb
leave
xchg
sahf
add
inc
loop
mov
mov
aaa
or
xor
call
outsl
movsl
outsl
insb
push
jb
cwtl
push
sub
cwtl
pop
or
cmp
mov
shr
sbb
push
in
cmp
jns
adc
mov
repnz
jb
test
mov
push
mov
loopne
adc
popa
xor
es
push
call
xor
popf
out
test
or
sbb
popw
sahf
cmp
les
int3
in
outsb
cmpsb
inc
out
in
xchg
test
cwtl
xchg
pop
dec
loopne
xlat
pop
lret
cmp
mov
and
jmp
push
test
push
adc
fcomi
jmp
add
imul
xor
dec
in
cmpsl
test
call
paddb
xchg
add
cmp
lock
sub
out
movsb
inc
xor
or
add
rcrb
push
mov
pop
mov
cmp
add
stos
pop
mov
sub
mov
push
add
test
pop
push
mov
shrb
cltd
adc
data16
mov
mov
ret
popa
bound
int
mov
imul
in
repnz
ja
or
mov
ret
mov
lcall
or
push
xlat
in
movsb
cmp
mov
mov
inc
in
mov
cmp
lock
xchg
fcoml
les
rclb
cs
jge
mov
lret
mov
dec
orl
sbb
adc
test
loopne
pop
orb
and
rorb
mov
outsb
jbe
mov
xchg
in
into
addr16
push
mov
or
int
in
aad
sbb
fdivrp
js
into
xchg
xchg
sub
lock
mov
pop
push
lahf
mov
xchg
add
test
aam
jp
push
adcb
cmc
sub
loopne
ds
add
xor
scas
cli
and
mov
adc
in
add
test
imul
out
es
xor
xchg
push
jg
adc
pop
mov
jge
push
outsl
and
inc
cltd
movsb
sbb
addr16
lock
lods
das
ret
sti
cld
add
push
iret
test
stos
cmp
pop
xor
adc
add
mov
push
dec
test
aaa
push
jb
nop
mov
ret
adc
xchg
movsl
hlt
jbe
cmc
lds
bound
ficomps
lods
repz
test
xchg
mov
jmp
rorb
inc
mov
ljmp
lea
loop
mov
xor
out
lods
hlt
push
add
loope
sub
stos
pop
sub
aaa
jecxz
adc
sbb
mov
in
or
pop
ret
fldl
insl
xor
popa
inc
stos
lea
push
jno
push
cmp
mov
add
push
hlt
aam
pop
das
add
mov
lock
int3
lret
hlt
jecxz
das
dec
xchg
fcmovnu
jnp
outsb
scas
xchg
xchg
pop
jp
and
popf
sbb
push
in
int
repnz
fadds
add
in
mov
push
enter
sub
xchg
pushf
mov
mov
scas
in
sub
xor
in
bound
loopne
xor
ret
mov
cmpl
fists
mov
jne
fwait
jmp
test
gs
decb
jno
inc
dec
xor
mov
aad
adc
loopne
xor
js
sub
jle
sub
and
jle
or
fildll
add
xchg
in
idiv
std
pusha
add
cmc
das
fwait
cmp
rorb
dec
dec
push
sbb
mov
dec
mov
cmp
inc
stos
or
cs
sbbb
adc
sub
mov
jmp
sub
xor
out
push
ljmp
add
movsl
dec
lds
repnz
imul
jbe
and
and
adc
xchg
and
cmp
fldl
stos
popf
inc
push
jb
dec
loope
xchg
sub
jle
xor
nop
lds
cmp
movb
or
rcrl
jecxz
stos
mov
aas
lods
out
ja
lds
mov
pushf
imul
adc
cmp
adc
or
popa
sbb
mov
push
sub
fnstsw
cmp
add
mov
outsb
int3
sub
sub
lock
add
push
and
into
stos
int3
cmpb
icebp
mov
dec
push
jge
stos
push
add
test
and
push
or
adc
and
mov
lret
mov
push
xchg
decb
or
dec
sub
aaa
out
sbb
jle
out
js
adc
xor
inc
xlat
jns
std
icebp
outsl
push
mov
test
xor
cmp
scas
movsl
fdivrs
or
sbbl
bound
lea
adc
inc
daa
fs
insl
adc
pop
lahf
outsb
data16
push
pop
push
xchg
sub
call
insb
sub
dec
inc
cs
gs
mov
leave
jmp
lcall
and
mov
lret
push
aaa
jl
mov
mov
push
fcomi
fld1
into
test
dec
inc
or
sub
dec
dec
scas
sbb
or
cmp
mov
int
mov
adc
dec
cltd
cmpsb
mov
into
and
mov
addr16
sysenter
xchg
sub
mov
lcall
stos
cmp
sbb
dec
xchg
ljmp
loop
daa
stc
xor
cld
int
test
or
std
cmp
in
push
push
cwtl
das
jge
stc
cmp
out
lahf
fwait
pop
bound
shl
push
mov
paddusw
xchg
mov
xor
jno
hlt
jp
mov
add
aas
mov
lods
inc
divl
adc
jmp
sbb
xlat
aam
das
mov
lds
pop
or
xor
into
sbbb
ja
pop
pop
aas
out
adc
mov
into
xor
clc
imul
das
xchg
push
aas
add
jne
dec
loopne
jne
dec
pop
aam
sbb
inc
xorb
ljmp
mov
sub
movsb
out
cltd
pop
xchg
cwtl
and
cmp
inc
mov
xor
or
sbb
dec
xor
daa
or
repz
and
cmpsl
cwtl
pop
stos
ss
dec
or
leave
pop
movb
add
sub
and
push
lcall
daa
mov
fisubs
in
push
xchg
ja
cmp
imul
mov
insl
ror
test
daa
jle
fldenv
inc
cs
out
out
ljmp
pop
in
push
jmp
jb
in
mov
cmp
fwait
insb
call
push
mov
mov
int
mov
aaa
dec
adc
xor
mov
xchg
xchg
sahf
mov
mov
lcall
jo
mov
jae
lret
inc
enter
hlt
cmp
mov
scas
inc
in
nop
push
jl
mov
jb
xchg
jg
mov
mov
mov
add
xchg
jp
int3
xor
out
out
or
shll
pusha
xor
rol
dec
outsb
subl
add
fwait
movsl
lods
cmpsb
pop
jne
cmc
lret
pop
add
stos
xchg
fimuls
rol
repnz
mov
cmc
xchg
sarl
or
addr16
mov
mov
jg
int3
inc
jo
imul
xor
pop
enter
jl
push
sti
jo
push
cmpb
vmread
ficomps
test
cmpsl
cwtl
scas
nop
sub
aam
dec
push
imul
lods
cmpsb
nop
out
bound
pop
mov
inc
orb
cwtl
lock
outsl
pop
sbb
cmp
adc
cmp
insl
cwtl
imul
scas
lods
sarb
mov
cmp
movsb
shrb
add
add
mov
mov
sahf
cli
push
jle
pop
add
and
jno
pop
data16
inc
sub
mov
push
cmp
push
dec
add
dec
or
int
test
xchg
das
mov
test
xor
loop
out
out
add
push
inc
lds
fisttpll
pop
movnti
pushf
dec
movsb
loop
mov
fwait
cmpsl
or
mov
cli
outsl
sarb
mov
and
jae
xchg
mov
into
aam
or
xchg
adc
jl
push
notb
push
adcb
idiv
lea
or
nop
in
xor
and
add
clc
loope
xor
push
mov
xor
mov
mov
nop
popa
cmp
sbb
out
fcoms
sub
lds
cltd
mov
test
into
dec
subb
xchg
mov
inc
pop
push
inc
push
out
inc
push
pop
dec
sub
pusha
lret
inc
dec
adc
frstor
cmpsb
fsubp
and
bound
imull
xor
pop
mov
dec
hlt
xchg
sbb
mov
or
mov
outsb
popl
aam
mov
xor
aaa
mov
jno
cmp
lds
push
push
lahf
push
xchg
fildl
xlat
shlb
push
aas
rcl
shrb
xchg
fsub
popa
cli
mov
test
mov
xlat
mov
sbb
jecxz
repz
outsb
test
test
pop
mov
adc
cmp
test
and
sahf
cmpsb
popa
sub
aaa
fiadds
xor
xchg
ret
jg,pt
sarb
mov
loope
orl
pusha
subb
xor
fnstcw
pop
push
fadds
addr16
rcll
and
xchg
clc
jecxz
mov
adcl
lcall
mov
testb
jo
pop
dec
mov
mov
sub
push
push
inc
ret
lret
push
icebp
inc
xor
int
sbb
or
add
adc
pop
movsl
scas
scas
lret
inc
shl
pop
lds
jge
sahf
jle
hlt
sbb
stos
fdivl
push
ljmp
orl
sub
fcoms
arpl
pusha
repz
inc
insl
mov
cmp
ds
ds
ss
aam
divl
out
or
dec
aaa
inc
cltd
ljmp
fistl
xchg
mov
push
sub
call
mov
push
inc
dec
inc
loop
push
push
shrd
in
sub
lock
push
popf
sub
or
das
pop
test
in
lods
push
cmc
add
divl
add
outsl
sub
lods
in
jmp
cmpsb
insb
mov
sbb
loope
enter
mov
pop
lea
stos
or
mulb
mov
std
or
out
and
stos
roll
je
xor
jae
das
push
mov
jns
rolb
dec
or
mov
xor
adc
sti
jmp
cmp
enter
outsl
pop
rcl
jl
and
xor
mov
cmp
pop
incl
mov
movhps
gs
stos
idivl
insl
adc
sub
js
cltd
mov
xlat
aam
mov
mov
rcrb
inc
in
cmc
sub
dec
scas
mov
sar
iret
adc
in
negb
and
hlt
or
ret
jg
fisttpl
rorl
dec
icebp
rcr
js
ss
push
pop
shll
dec
mull
les
mov
mov
sub
pop
or
insb
lock
das
xchg
ss
inc
jns
xchg
pop
leave
ss
inc
ljmp
xor
push
sbb
repnz
insl
pop
mov
mov
std
dec
inc
push
hlt
and
mov
inc
lock
je
fistpll
stos
lds
sbb
repnz
push
or
fidivrs
insl
sbb
sbb
sbb
mov
mov
out
out
mov
pop
fmul
dec
lock
sbb
lea
mov
mov
scas
dec
pop
add
pop
gs
ljmp
mov
mov
sbb
in
mov
cmp
iret
dec
lret
xor
jp
dec
insl
sti
ljmp
aas
cmp
stc
mov
mov
iret
loop
orl
push
sub
outsl
sbb
or
push
das
jns
dec
loopne
lcall
sahf
xchg
lock
mov
inc
cmp
loop
mov
lret
push
cmp
pop
insb
sbb
inc
sub
loopne
mov
xor
jle
bnd
rcll
sbb
mov
shlb
xchg
cmpsb
and
lahf
add
xchg
bound
in
dec
cltd
decb
imul
imul
cs
out
push
daa
out
mov
loope
jl
mov
in
stos
xchg
popf
or
shll
pop
imulb
jb
jmp
lods
xchg
sti
daa
bound
push
and
sub
popf
mov
push
push
mov
and
test
push
es
sahf
cmp
fistpll
scas
adcb
stc
imul
xchg
sar
test
mov
adc
loop
cmpsl
dec
bound
push
lods
bnd
sbb
pusha
sti
push
hlt
arpl
fprem
cmc
in
repz
fiadds
pop
or
xlat
or
fdiv
mov
mov
sbb
lret
mov
les
lods
pushf
pop
or
adcl
pop
loop
xor
or
loopne
dec
fimull
sti
jns
lahf
jo
sti
jne
lock
mov
hlt
fdivrs
cmp
jbe
and
popa
push
les
imul
dec
popf
das
adc
xchg
push
fs
jle
fs
stc
jmp
in
mov
lea
jle
push
jnp
xor
and
mov
dec
xchg
jno
aad
scas
mov
arpl
out
clc
sbb
rclb
sti
shl
int3
insl
mov
cmp
sti
or
in
xor
pusha
add
es
roll
outsb
clc
xchg
dec
ljmp
mov
adc
mov
in
pushf
jmp
fsubs
jb
and
adc
int3
mov
pop
cli
xor
adc
jo
xchg
dec
cmp
icebp
aad
pop
ret
xchg
dec
xor
sbbl
dec
pop
and
cmpps
test
mov
adcb
daa
xchg
imul
fcmovu
xchg
jbe
xchg
loop
clc
and
repnz
pop
cld
daa
imul
pop
mov
pusha
xor
jp
mov
flds
jns
addr16
mov
clc
mov
hlt
in
inc
mov
dec
ficoms
ret
jle
out
add
sbb
pop
or
das
and
aaa
cmp
push
sbb
xor
test
dec
das
push
xchg
jnp
or
arpl
aam
dec
sub
inc
stos
and
rorl
inc
mov
mov
xchg
fisttpll
dec
jmp
outsl
mov
pop
cltd
inc
mov
clc
mov
jno
pop
jno
fstpt
cli
daa
sbb
jle
repnz
icebp
and
es
int3
jecxz
mov
jno
push
mov
xchg
rorl
test
js
adc
or
test
jae
fucomi
push
sub
mov
pop
dec
stc
fsubl
push
sub
stos
mov
sub
bound
or
pop
test
mov
ss
stos
mov
and
adc
and
jmp
xor
cmc
insl
adc
in
push
sub
loope
pop
or
pushf
stos
jge
frstor
dec
xlat
inc
sub
xchg
lret
scas
cltd
in
bound
rcll
cmp
or
mov
mov
jge
adc
sbb
push
mov
loopne
aas
cwtl
lock
rol
xchg
les
pop
aam
std
clc
jne
sbb
sbb
loope
or
lcall
shr
xorb
aas
rcrl
xchg
ljmp
mov
mov
hlt
fcomps
or
sarb
lcall
out
mov
mov
mov
mov
or
cmp
push
mov
sbb
mov
xchg
jecxz
inc
or
pop
xchg
mov
pop
mov
aaa
and
adc
lods
scas
insl
pop
fists
notl
iret
pop
sbb
lods
lods
mov
push
popf
loop
stos
arpl
sub
shrb
mov
rcll
scas
ja
push
push
mov
popf
loopne
fst
mov
ljmp
testb
pop
out
mov
mov
cmp
mov
shrb
mov
idiv
cmc
mov
call
cmpsl
push
js
jnp
xchg
fwait
nop
adc
adc
mov
pop
daa
fsubl
js
push
popf
rclb
push
dec
cmpsl
cli
lea
pusha
adc
imul
mov
sbbl
jo
orl
sarb
cmpsb
adcb
std
pusha
shlb
pop
push
mov
aaa
out
int
adc
fwait
hlt
scas
je
bswap
mov
xchg
mov
xlat
jecxz
mov
dec
sub
mov
sbb
push
int3
es
pop
cmp
pop
stc
movsb
xchg
jb
mov
movsb
or
shr
loop
je
pop
loope
jmp
lahf
mov
jbe
repnz
pop
jae
jl
shlb
hlt
push
or
jae
xchg
out
int
sbb
int3
subb
mov
xor
or
push
adc
data16
push
lcall
pop
cli
mov
mov
movsl
out
mov
stos
adc
faddp
fs
cmp
jle
xchg
lock
jae
inc
mov
into
sub
xchg
jmp
sbb
popf
ss
sub
idivl
pop
push
mov
outsl
cmp
test
int3
mov
dec
add
imul
push
dec
lcall
scas
leave
push
sbb
adc
mov
jae
dec
test
adc
mov
push
inc
mov
inc
stos
divl
into
pushf
dec
push
jge
shl
mov
test
xor
pop
lods
mov
jg
mov
push
cltd
adc
gs
divl
popf
lds
dec
mov
pop
or
pop
cmpsl
dec
scas
ret
ja
dec
mov
and
cmp
inc
mov
xchg
push
addl
lret
mov
shlb
cmpsl
addr16
aas
imul
xchg
mov
xlat
cmp
int
mov
mov
movzbl
lds
imul
dec
pop
arpl
pop
jnp
pop
enter
ret
lds
dec
jmp
xor
test
enter
test
pop
inc
cli
jae
xchg
pop
mov
jb
xor
push
call
mov
test
jno
add
or
sbb
and
push
jnp
mov
or
enter
jle
and
fstl
dec
mov
jb
ret
cmpb
out
rclb
enter
cmpsl
push
loope
or
mov
ds
clc
add
ljmp
xchg
shlb
lods
ret
clc
mov
pop
in
cmpsl
xchg
cmp
int3
jp
ss
mov
test
mov
pop
push
pop
imul
es
mov
mov
int
or
mov
or
imul
shll
in
test
mov
leave
data16
ljmp
inc
pop
fisubs
fbld
lea
sub
movsl
lods
popf
adc
jno
rol
test
or
stc
ficoml
ljmp
jle
aaa
test
cmp
dec
add
mov
jne
and
mov
mov
push
shlb
and
mov
mov
pop
cmp
adc
call
lret
in
ret
cmpsb
cld
xor
call
jo
add
and
lock
outsb
jns
mov
jp
outsb
jns
sbb
jno
sub
push
lret
mov
add
ret
jnp
rclb
jge
pop
jg
xchg
notl
pop
outsb
jnp
push
push
hlt
mov
mov
or
es
nop
out
movsl
push
jo
adc
out
lods
les
les
js
fldl
xchg
pop
mov
inc
push
push
clc
mov
mov
or
aam
sbb
lret
push
pop
push
pop
mov
lcall
loopne
insb
push
imul
insl
xor
int
les
mov
sbb
sar
int3
aam
test
jae
mov
imul
lahf
leave
fisttps
arpl
lods
or
cltd
icebp
push
pushl
mov
repnz
sbb
cs
js
mov
mov
pop
inc
lods
into
cmp
daa
mulb
test
imul
iret
stos
and
repz
ds
dec
cld
call
pop
ss
push
imul
mov
aaa
ss
neg
outsb
push
bound
mov
xchg
push
adc
lods
outsl
jae
cld
das
pop
leave
daa
mov
xchg
fidivs
cmc
and
outsb
pop
stc
inc
bound
mov
ret
mov
mov
sbb
sbb
push
shll
cmp
lcall
cs
lcall
jno
fwait
add
lods
push
xchg
lods
sbb
adc
inc
xchg
iret
sub
dec
cli
fisttpl
add
dec
add
mov
add
popf
shll
aam
test
loope
mov
nop
ja
jnp
jmp
icebp
scas
cmpsb
xchg
jne
les
inc
cmp
nop
scas
xor
imul
ja
mov
stos
jbe
in
in
gs
pop
and
add
cmp
aam
pop
cmc
inc
mov
xor
xchg
incb
rcll
pop
pop
push
aaa
cltd
adc
es
jbe
inc
js
fbstp
dec
loope
out
shl
cld
jae
cld
push
mov
ret
xchg
and
mov
xchg
cltd
ror
loop
outsl
fiaddl
lret
adc
lea
add
cmp
loop
mov
xor
pusha
dec
add
jno
add
test
sti
leave
mov
repz
cmp
fnstcw
mov
inc
call
adc
sti
jg
lcall
notl
sbb
sub
mov
int
sub
jae
mov
sbb
add
pop
and
popf
xor
mov
outsl
dec
jl
dec
push
inc
pcmpeqd
lret
inc
cmpsb
repz
out
or
out
int
es
sbb
outsb
dec
jp
andb
dec
sar
push
push
mov
and
push
and
or
dec
cld
adc
sbb
popl
adc
sahf
mov
rclb
icebp
pop
pop
imul
adc
subl
rcrb
fcmovu
pop
jle
push
jg
jns
je
push
and
add
xchg
mov
xor
push
addb
cli
push
lods
in
in
enter
and
stc
ret
lret
dec
xor
repnz
fwait
mov
leave
insl
roll
and
jmp
xor
add
pop
push
push
sub
pop
and
stc
add
js
out
repnz
bound
lret
arpl
xchg
hlt
xchg
ret
adc
sub
sub
lret
xchg
push
mov
mov
jmp
cwtl
clc
push
bound
fwait
in
pop
and
ficoms
or
mov
ljmp
xchg
cld
mov
xchg
int3
lret
fldt
cmpsl
mov
or
or
fidivs
mov
jle
push
mov
jecxz
clc
sub
sbb
lock
lods
push
repz
cmc
or
mov
xor
test
ds
sub
mov
insb
jne
or
out
stos
push
repnz
push
les
push
sub
sub
xlat
dec
insb
nop
scas
enter
movsb
leave
mov
add
pop
mov
cmp
scas
push
insl
int3
mov
cli
push
jecxz
aas
repz
fwait
push
rcrl
cld
les
cmp
xchg
and
and
outsb
jns
or
nop
dec
cld
sbb
cpuid
pop
sbb
popa
dec
lret
adc
jge
call
ficoms
cs
mov
push
daa
and
movsb
push
add
jb
daa
pop
stc
pop
xlat
gs
dec
lock
lods
orb
xor
fsubr
xor
sub
les
push
clc
mov
das
mov
add
int
sbb
inc
mov
inc
or
addl
push
mov
out
sbb
iret
jl
cmp
sbb
dec
inc
inc
mov
cli
sbb
pop
xor
aad
add
ret
shlb
in
inc
or
mov
mov
sti
pushf
xor
push
push
cwtl
dec
in
fisubl
in
jge
divb
loope
mov
ja
stos
add
mov
fiaddl
test
dec
mov
sarl
lods
xchg
and
fs
icebp
sbb
in
jnp
cld
test
outsl
pop
push
pop
mov
hlt
dec
or
xchg
inc
xor
mov
dec
jno
ljmp
out
scas
std
arpl
popf
xchg
and
xor
or
add
lret
in
jo
int3
lcall
xor
jecxz
xchg
push
loop
pop
push
push
cmc
hlt
xchg
ds
pop
push
mov
jb
push
inc
dec
test
pusha
popa
and
addr16
mov
jo
add
imul
aam
mov
push
adc
fcompl
out
cli
roll
and
jmp
adc
scas
std
sbb
clc
push
les
xor
add
dec
aas
popf
lcall
push
cmp
sbb
xchg
int
dec
scas
xor
fisttps
mov
or
je
cmp
push
fwait
je
pop
pop
sbb
gs
push
jmp
in
pusha
jnp
xor
push
add
sti
and
push
aad
xor
mov
mov
cmp
or
push
mov
addr16
push
in
in
xchg
mov
jl
js
xlat
repz
add
sbb
or
arpl
fisttps
xchg
push
loope
cmp
aad
ret
mov
or
stc
popf
ror
mov
hlt
imul
or
leave
push
mov
aas
cmpl
push
pusha
loop
cmp
fstpl
pop
icebp
inc
mov
andl
scas
pop
push
inc
aam
stc
movsl
xchg
imul
mov
stc
push
ss
sub
fsubrl
inc
sub
std
pop
fndisi(8087
aas
out
cmp
lds
mov
jecxz
push
jnp
mov
sbb
or
mov
addb
mov
stos
jg
inc
adc
shl
insb
gs
and
mov
lock
sub
sub
repnz
ret
mov
or
push
push
jmp
in
mov
jge
sahf
and
add
mov
subb
inc
adc
int
pop
cli
adc
nop
inc
gs
adc
les
out
sub
lcall
in
inc
xor
loopne
jecxz
fnstenv
lcall
in
in
xchg
jns
push
testl
jmp
xchg
push
mov
addr16
push
and
adc
sbb
dec
xchg
out
movsb
in
bswap
mov
jmp
aas
push
pop
sahf
adc
jno
jne
mov
arpl
popf
mov
xchg
inc
add
sbb
enter
out
mov
sti
and
mov
negb
mov
iret
pop
subl
or
dec
in
shlb
cmp
inc
xchg
in
push
lods
fsubl
insb
test
mov
outsl
xchg
outsl
mov
dec
shr
gs
and
fcoms
jns
add
push
inc
sarb
arpl
adc
out
lock
inc
fbstp
call
dec
push
xlat
outsl
or
xchg
es
jge
das
sar
jecxz
mov
inc
loopne
xor
stos
mov
fdivp
mov
xor
lsl
inc
sub
xchg
xchg
mov
sbb
mov
or
cld
lods
adc
mov
fidivrs
rdseed
loop
pop
fcoml
jecxz
inc
lret
stos
mov
movsl
push
movl
sbb
adc
dec
or
es
rcr
fmul
mov
mov
outsl
mov
sti
jecxz
inc
in
xchg
dec
sub
test
mov
aaa
cmp
fcomi
aad
insl
cs
inc
icebp
sbb
fsubr
ljmp
adc
jnp
or
push
pop
push
mov
push
xor
jnp
and
arpl
jb
pop
add
push
lods
ret
mov
bound
push
xchg
sub
nop
dec
loopne
cwtl
xor
lcall
pop
inc
or
stos
div
push
mov
lods
sbb
flds
mov
js
pop
test
cs
popf
lea
fdivrp
dec
jns
fidivrs
test
sub
jp
pop
loope
in
int3
push
imulb
inc
fisttpl
push
bound
or
les
xchg
lcall
enter
lods
cmp
adc
aas
dec
aaa
adc
mov
sbb
lock
mov
ds
mov
sysenter
dec
lret
loopne
mov
mulb
push
push
call
pop
les
aaa
hlt
cmp
push
lods
daa
cmpsl
rcll
mov
dec
andl
push
sub
insb
push
jl
pop
or
loop
xchg
pop
cmp
cwtl
dec
sub
xor
xor
mov
and
aas
in
fbstp
sub
mov
pushf
jnp
incl
lret
push
dec
pop
add
lret
rcrl
mov
lahf
push
mov
inc
lods
dec
xchg
sbb
xchg
mov
adc
mov
sub
xchg
sahf
or
rcrl
or
jge
fdivs
fxch
stc
mov
dec
inc
or
and
out
in
cmpsl
lret
repnz
rcrb
stc
xchg
stc
in
fisttpl
in
cmp
aas
pop
dec
cmp
cli
jle
sub
lret
xor
and
mov
mov
stc
addr16
dec
xchg
cmovno
mov
movl
xlat
inc
fldpi
or
rcrl
ljmp
mov
leave
fcompl
in
fwait
sarl
add
jg
test
xchg
cmp
lock
jp
jns
nop
in
bnd
jns
jp
cltd
cld
jne
lds
into
in
int3
mov
cmp
sbb
movsb
dec
dec
adc
mov
std
inc
stc
sbb
nop
stos
sarb
adc
xchg
daa
adc
out
xchg
or
mov
xor
or
xor
lods
cmpsb
and
adc
add
neg
mov
sbb
xor
aam
ficoms
cmpsl
push
shrl
cmp
dec
xchg
fiadds
daa
aam
jbe
mov
ds
int
mov
ret
xor
push
xlat
mov
shl
leave
in
lret
cli
js
adc
jg
je
mov
xlat
push
sbb
sbb
call
icebp
push
xor
or
xorb
aas
push
icebp
xchg
jp
out
je
enter
repz
cmp
mov
insl
cmp
cmp
decl
ret
xchg
jae
bound
movsl
stc
aad
push
cld
mov
push
inc
mov
mov
adc
mov
cmp
jge
out
xchg
mov
imul
adc
sub
mov
aam
ds
jle
lret
sub
cmpsl
sbb
lds
loopne
je
scas
sti
scas
adc
add
add
sub
jg
xchg
call
iret
in
push
inc
imul
cld
xchg
shl
scas
pusha
jno
mov
sti
sbb
inc
inc
sbb
mov
cld
bsf
fcoml
outsb
mov
or
jp
mov
out
push
xor
rol
inc
cmp
cld
pop
lret
movsb
or
fisttpll
popf
mov
pop
inc
lods
and
shlb
scas
orb
xchg
mov
fsubp
xchg
adc
scas
sbb
push
stc
in
pusha
jne
and
mov
xor
jne
mov
cmp
cmp
xor
sbb
xchg
push
fcompl
sbb
outsl
inc
fdivp
shl
aas
inc
mov
pop
add
mov
sub
sub
incl
mov
sbb
adc
aam
iret
in
mov
jbe
cmp
push
inc
or
inc
sub
ljmp
lods
jecxz
cmp
imul
xor
test
fwait
sbb
inc
movsl
xchg
ret
sbb
add
sbb
rcrb
pop
sub
incl
lret
aad
inc
adcl
xchg
or
add
inc
ret
jg
into
or
sbb
sub
jne
lds
fdivs
lods
adc
cmpsb
xchg
mov
jae
pop
popf
xor
lahf
sbb
cmp
pop
dec
xchg
jmp
and
lds
cwtl
sahf
out
xor
jp
iret
push
loope
out
fistpl
pop
negl
push
es
push
or
cmp
push
add
sub
pop
pop
add
in
jo
sub
pop
xor
insb
mov
or
inc
dec
aad
xchg
add
cmpb
out
push
ficoms
test
into
popf
jb
scas
shrl
fs
insb
pop
push
sbb
add
stc
adc
fs
iret
adc
jo
push
mov
mov
mov
jl
jno
ds
cld
pop
fwait
dec
dec
enter
mov
dec
fsubrl
call
adc
xchg
lods
jl
cmp
sbb
and
xor
fidivrs
xor
mov
mov
jo
imul
add
push
and
cmp
cmp
mov
insb
add
addr16
lret
fstps
sbb
xor
add
jb
or
and
jbe
adc
sbb
push
push
and
test
mov
bound
mov
xchg
push
je
ret
push
add
insb
adc
pop
sbb
jl
pop
sbbl
cmp
mov
fdivrs
das
cli
jecxz
in
test
pop
add
sbb
cs
outsb
adc
ds
dec
pop
jns
lods
stos
mov
pop
test
shl
add
sub
mov
stos
xchg
add
push
sbb
or
or
mov
ror
fcmovu
test
fdivl
pop
jp
jp
test
push
inc
push
or
dec
and
cmp
mov
pop
mov
int
adc
mov
xchg
push
outsl
jmp
fcoms
les
pop
outsb
mov
push
int3
pushf
lods
lock
inc
jne
scas
fsubs
fildl
mov
cmp
sub
nop
push
gs
js
pop
add
mov
pop
pop
nop
xchg
xor
rcll
sbb
cmpsb
sbb
ds
mov
xor
xor
not
lcall
fisttps
nop
push
cwtl
mov
add
es
bound
pop
mov
in
ljmp
dec
movsl
popa
pop
push
mov
stc
jnp
dec
jge
inc
sub
scas
es
xor
inc
in
and
testl
push
mov
and
cli
and
pop
push
jno
xchg
pop
inc
outsb
cltd
add
aad
and
inc
scas
push
outsl
stos
sahf
ds
cmp
add
xor
daa
xor
das
jbe
pop
fisubrs
pop
pop
mov
bound
jp
sbb
aad
inc
neg
cmp
cmc
mov
fsts
lret
daa
je
inc
dec
push
xchg
int
sti
push
in
adcl
or
mov
xor
jmp
xor
test
adc
adc
pop
cmp
out
arpl
lods
fldl
inc
push
bound
pop
popf
outsb
fdivs
lods
dec
jo
mov
imul
outsb
out
flds
mov
jmp
fadds
inc
xchg
xchg
cwtl
lods
mov
inc
leave
fidivrl
dec
inc
jae
pusha
lret
test
in
add
jge
bound
fildll
test
subl
jp
cltd
daa
or
dec
scas
xor
xchg
cli
ds
int3
test
xchg
sbb
lret
movsb
scas
lret
and
sub
call
jmp
dec
loope
jg
lods
or
push
jle
inc
out
sbb
mov
sub
subl
cmp
cmp
mov
out
mov
loopne
pushf
fcmovb
pause
es
iret
xor
jnp
xchg
arpl
frstor
xchg
push
dec
mov
adc
jns
push
pusha
call
jecxz
and
fstps
movsb
dec
mov
out
mov
xor
js
sbb
jecxz
mov
mov
repnz
push
xor
sti
stc
push
insb
scas
jno
in
cmc
or
lods
test
sub
dec
inc
xlat
add
mov
frstor
push
mov
jno
aas
and
lcall
cmp
push
push
aad
ffree
xchg
xor
fcmovbe
push
scas
jbe
pop
inc
mov
xlat
es
inc
or
pop
test
fs
cmp
dec
fcoms
push
add
xchg
push
or
repz
xor
js
sub
push
adc
xor
js
pop
lahf
fs
std
sbb
mov
pusha
xor
loop
mov
xchg
cwtl
hlt
out
scas
test
sbb
lock
std
shlb
push
push
pop
or
subl
mov
mov
mov
ss
cmp
pusha
and
aam
test
fcmovb
inc
je
stc
cmpsl
xor
inc
out
cmp
test
lret
movsl
mov
and
push
inc
sbb
cmp
jmp
add
xchg
or
xchg
je
mov
mov
sub
sbb
sarl
in
call
dec
mov
repz
cmpsl
divl
fdivp
dec
mov
icebp
jae,pt
and
push
cmpsl
icebp
aas
jp
test
cmpsl
add
push
nop
pop
pop
sub
mov
jecxz
movsb
or
add
cwtl
mov
dec
or
xchg
aas
sub
outsl
clc
fsub
xchg
cmp
cs
push
adc
cmp
mov
push
pop
or
jmp
pop
sbb
inc
ror
sub
fwait
test
lret
xchg
nop
popa
or
leave
jns
in
rorb
pushf
repz
ret
outsl
dec
loope
mov
out
mov
cs
std
fstpt
aad
fwait
cmc
or
icebp
or
or
xchg
inc
pusha
nopl
test
daa
sub
stos
mov
imul
pop
and
pop
xchg
add
lea
cld
std
jne
popf
out
adc
and
inc
sahf
cmp
mov
xor
push
aam
movsb
xchg
and
das
je
outsl
fildl
sbb
sqrtps
jae
rcll
pop
jmp
ror
data16
push
into
lcall
insl
mov
xor
std
cmp
sbb
nop
xchg
add
mov
jp
sub
cmp
ret
das
pop
add
lret
push
leave
push
or
inc
add
ds
dec
out
jo
loopne
std
fildl
loope
mov
out
bound
jge
mov
aam
test
outsb
shlb
popa
pop
test
loope
push
xchg
mov
aad
ja
cmp
adc
stos
fdivrl
jmp
loope
jns
leave
jns
lcall
test
call
lods
shll
das
ret
xchg
cwtl
xchg
cmpsl
jp
mov
add
movsb
or
popf
xchg
sarb
lods
test
leave
sbb
cld
stc
and
xor
add
fisubrl
xor
mov
pop
push
push
pop
push
sub
test
enter
lcall
rorb
or
movsl
lcall
inc
scas
arpl
jp
cmp
pop
cwtl
imul
cmpsb
fsubs
aam
cmp
fldl
push
jnp
dec
daa
fucomip
adc
test
mov
cli
repz
insl
cwtl
es
sub
and
adcb
test
pop
je
pusha
jo
cli
push
cs
jnp
or
mov
popf
fiadds
in
aad
jle
ds
dec
jl
sub
pop
sahf
inc
sub
addr16
movb
shll
add
shl
mov
rolb
adc
arpl
sbb
aad
sub
insl
ljmp
sub
out
xchg
stos
out
push
imul
mov
es
lahf
jo
out
sub
daa
xlat
xchg
and
fildl
mov
inc
mov
jecxz
ljmp
dec
out
push
xor
xchg
mov
jl
testb
or
sbb
jns
sbbb
imul
jl
push
adc
movsb
lret
adc
into
xchg
popa
arpl
sbbl
leave
push
xlat
push
fisubrs
jbe
mov
cmp
pusha
jo
notb
cmp
inc
mov
dec
ja
pop
mov
xor
out
or
in
xchg
and
jecxz
fcmovnu
ret
mov
mov
repnz
xchg
jns
ss
dec
cwtl
or
pop
addr16
jnp
jbe
xor
sub
sbb
in
aaa
lods
dec
inc
rcr
or
mov
inc
loopne
mov
dec
and
dec
icebp
cmp
in
pop
inc
xchg
addr16
or
cmp
into
mov
jp
pushf
dec
sub
andl
add
jmp
jo
shrl
mov
pop
ljmp
inc
and
sub
sub
vsqrtss
outsb
adc
cmp
ds
sub
popf
rorb
lret
ficompl
mov
and
pusha
cli
sbb
cmp
icebp
xchg
dec
jge
shll
sbb
aaa
negb
add
rsm
sbb
bound
xchg
dec
xchg
rcll
int
add
cmpsl
popa
movsl
movsl
xchg
pop
dec
or
popf
test
push
adc
call
and
daa
int3
sbb
popa
add
lahf
mov
in
sub
je
mov
mov
pushf
aaa
jmp
pop
cli
test
loope
adc
test
xchg
sahf
scas
das
xchg
aad
clc
mov
mov
sub
aaa
mov
mov
mov
adc
clc
test
lea
icebp
pop
or
jge
sbb
test
stos
jmp
bound
je
cmpsb
scas
repz
in
out
xchg
je
out
mov
dec
lea
scas
inc
fs
mov
adc
xchg
add
dec
lahf
cmp
sub
lret
mov
movsl
outsb
pop
xchg
outsl
jno
cmp
adc
cmpsl
xor
bound
push
xchg
mov
popa
in
push
push
in
inc
cmp
ret
stos
cmpsb
jmp
push
pop
adc
push
daa
bnd
rcll
sbb
dec
jae
mov
sbb
add
ds
int3
sti
mov
jmp
test
imul
daa
pop
push
mov
repnz
or
push
ss
jg
test
push
out
sbb
ss
jbe
out
test
lahf
aam
clc
jnp
pusha
sub
cmp
inc
or
mov
fidivl
rcl
pop
aas
out
xchg
or
xchg
jo
push
push
lods
add
imul
xchg
out
push
xchg
insl
and
adc
addr16
dec
stos
inc
lds
xchg
xchg
mov
int
adc
adc
xor
in
loopne
cmc
mov
clc
outsl
mov
fistps
push
and
sbb
lds
pop
cmp
std
js
dec
xchg
cmovbe
lock
iret
sub
mov
mov
clc
or
insb
cltd
fistps
add
sub
pop
jne
popf
psubsb
lds
roll
out
fmul
push
scas
insl
loopne
outsb
shlb
mov
ret
ss
jne
jmp
push
pop
fimuls
test
in
fcomp
fdivrs
popf
fcom
std
dec
pop
pushf
push
add
or
testb
xor
mov
mov
mov
ret
bound
pop
outsl
sti
sub
cmpsl
sub
jl
cmp
or
fxtract
sbb
cmp
mov
inc
push
mov
aam
fisubrl
popf
das
in
dec
decl
testb
mov
xor
push
jb
push
adc
xchg
iret
xchg
mov
data16
stos
ljmp
push
xchg
xor
mov
adc
nop
or
xchg
in
loop
mov
rcrl
or
and
enter
dec
bound
cmp
adc
mov
cmp
mov
lahf
mov
jbe
das
xchg
push
mov
jp
jbe
cmp
sbb
movsl
xchg
fs
xchg
aas
shr
aaa
test
and
or
aas
push
fs
jnp
daa
or
fistl
dec
lcall
les
dec
push
xchg
cmp
mov
mov
movsb
xor
pop
and
mov
ret
leave
and
lret
pop
ret
xor
std
xabort
leave
sub
scas
or
js
push
bound
loop
cmp
or
push
jecxz
dec
out
add
sti
in
mov
push
inc
jbe
sub
or
es
dec
notb
rorl
inc
xor
pop
jns
and
cltd
inc
daa
mov
int3
arpl
repz
pop
in
jmp
jecxz
xchg
sbb
push
sub
out
out
lock
sbb
sti
sbb
clc
or
push
cmp
iret
data16
jbe
lret
in
das
xor
in
in
cltd
stos
xchg
popa
xor
rclb
or
ljmp
mov
subb
mov
sub
movsb
mov
add
cmc
push
es
rorb
ljmp
fst
inc
xor
icebp
icebp
sub
ds
xchg
pushf
in
mov
and
or
jnp
pop
rorl
jle
xor
call
push
jecxz
push
dec
and
inc
and
add
cs
sbb
push
subl
decb
cmp
mov
dec
push
negl
mov
pop
shl
sarb
add
xchg
sub
cmp
cmpsb
mov
stc
mov
out
inc
pop
jle
mov
test
scas
push
out
mov
outsb
pushf
dec
lahf
xchg
xchg
icebp
mov
cwtl
nop
mov
mov
mov
mov
inc
mov
test
or
lret
cmp
icebp
mov
ss
inc
setl
mov
mov
mov
aad
int3
popa
stos
mov
mov
add
sub
lret
in
mov
mov
stc
cmpsb
cmpsb
push
imul
mov
imul
data16
pop
and
or
popf
in
mov
jl
ret
or
and
cmp
idiv
jno
lea
pop
outsb
jae
jg
ss
mov
imul
adc
mov
rclb
inc
test
rolb
mov
mov
ss
adc
divb
js
jo
and
fdivp
or
and
mov
imull
outsl
push
dec
jmp
mov
pop
subl
pop
outsl
ret
sbb
mov
jle
repnz
testl
mov
cli
sbb
leave
jae
std
push
sbb
mov
mov
pop
add
sub
sahf
sbb
xor
inc
adc
mov
fs
testb
out
jne
ret
inc
clc
and
lret
fdivrl
rcrl
jecxz
das
push
out
test
jp
push
xor
xchg
mov
js
xor
shrl
xchg
jmp
out
out
movsl
pushf
mov
xchg
inc
push
xchg
out
mov
mov
push
bound
fisttps
ja
out
push
lret
daa
xchg
loopne
subb
adc
loopne
outsl
es
inc
push
dec
cmpsb
or
jge
fcoml
cli
mov
fisttpll
xor
in
sbb
ffreep
push
stos
popa
popa
nop
jb
jne
dec
cmpsb
enter
xchg
jp
push
pusha
adc
inc
xchg
or
xchg
add
jl
sub
mov
jno
adc
mov
inc
mov
scas
jecxz
and
dec
and
pop
xor
clc
imul
inc
jae
cltd
push
xor
loopne
movsb
in
jmp
and
orb
or
sub
push
dec
enter
mov
sub
adc
lcall
fbld
imulb
cmp
jbe
nop
jg
cmpsb
call
arpl
data16
xchg
int
sub
xchg
in
pop
andl
shll
dec
add
hlt
push
and
adc
fistps
popa
or
ficompl
pop
inc
xor
cmpsb
sub
les
scas
ljmp
movsb
add
clc
shlb
lret
outsb
inc
fcomps
mov
aas
aas
adc
sbb
jno
bound
movsb
in
cs
pop
testb
cltd
sti
pop
std
pop
loope
movsl
in
fldl
shrb
jb
xor
and
mov
mov
mov
aaa
sub
out
push
sbb
rclb
gs
jnp
out
add
sub
inc
adc
xor
xlat
movsb
jp
stc
movsb
xlat
clc
ret
flds
mov
jmp
ja
and
mov
popf
pop
movsl
nop
xchg
mov
and
nopl
xchg
iret
addr16
scas
mov
inc
cld
das
jecxz
out
jle
xchg
mov
je
jns
mov
ss
out
mov
dec
pop
xchg
or
or
xor
mov
xchg
mov
sbb
flds
sub
clc
lock
inc
pop
add
pop
xchg
add
or
addr16
xor
mov
jge
clc
jno
repz
jnp
and
mov
push
es
and
in
push
pop
jmp
in
sbb
cmp
into
lret
sub
lret
rclb
cmp
sub
or
andl
adc
pop
pop
xor
mov
fstpl
fiaddl
cli
lret
sahf
adc
nop
adc
popa
mov
xchg
xchg
jecxz
iret
int
adc
mov
jmp
insb
rolb
jae
adc
lods
test
cli
sbb
xlat
add
jbe
adc
repz
es
dec
popf
loope
setp
xor
dec
cmp
lret
xchg
shrb
xchg
scas
ret
lcall
mov
inc
js
int3
dec
into
dec
frstor
mov
push
mov
dec
mov
sbb
pop
mov
aas
xor
test
or
add
fsubs
sbb
xor
loopne
addl
sub
add
pop
mov
aaa
push
movsb
pop
sub
mov
mov
mov
rclb
and
repnz
adc
aad
pop
jbe
mov
mov
xor
call
jb
push
xchg
insl
xchg
jge
xchg
out
mov
dec
adc
inc
push
jne
pushf
repz
mov
shrb
xchg
xchg
inc
xor
pop
sub
movsb
imul
mov
pop
enter
stos
sbb
pop
jmp
ljmp
mov
in
ja
cmp
adc
iret
scas
stos
and
pop
push
pop
test
daa
daa
pop
out
cmp
fmul
loope
out
xchg
jns
fidivl
adc
lods
dec
xchg
data16
cmp
mov
add
ret
mov
jno
pop
sbb
and
push
fisubrl
dec
sub
dec
std
cld
mov
insl
aam
lods
fsubl
sbb
add
xor
adc
into
loopne
int3
insb
fwait
pop
mov
scas
dec
call
or
pop
pop
stos
sub
cmp
out
clc
push
push
cmp
push
ja
setl
sub
repnz
cmpsl
or
adc
pop
or
sbb
int
xor
or
adc
imul
push
subb
jo
cltd
mov
aaa
and
in
cmc
lret
stos
dec
mov
mov
push
lret
sub
cli
ds
lock
in
sahf
xchg
stos
xchg
cld
pop
pop
jbe
pop
les
vorps
mov
addr16
pushf
cmp
outsl
addr16
cmp
lds
nop
pop
dec
push
xor
jnp,pt
cmpsl
lahf
dec
bound
mov
les
adc
or
xlat
repz
pop
testl
mov
add
mov
or
cmp
cltd
sub
aam
adcb
cmpsl
cmp
and
pop
clc
cwtl
add
cltd
fistl
pop
or
cmpsb
mov
dec
adc
jns
movsl
sti
mov
or
xor
pop
push
cmpsl
cmpl
inc
jbe
clc
into
xchg
cli
jecxz
loopne
pop
pushw
mov
pop
flds
xor
ret
stos
jle
and
insl
jg
js
lds
jbe
adc
jmp
iret
ror
mov
or
cltd
rorl
repz
cmpsb
inc
cltd
sbb
push
lock
shl
mov
cmp
fsubs
push
stc
jno
fidivl
fwait
lahf
mov
call
xor
inc
daa
mov
test
sbb
cmp
adc
shlb
xor
adc
mov
js
or
daa
and
jb
aaa
int
lret
ss
nop
pop
int3
xchg
adc
jge
push
stc
fs
mov
jb
inc
mov
sbbb
pop
test
lds
add
sub
jnp
mov
jle
iret
fsubl
arpl
sbb
xchg
pop
stos
xchg
mov
mov
dec
mov
sub
jb
mov
and
ret
insb
hlt
add
dec
dec
cmc
call
ja
push
sub
sub
xrstor
je
push
je
not
lahf
push
fcomi
cmp
shlb
or
xor
mov
cmpb
pop
call
aas
push
pop
push
mov
mov
add
adc
pop
jle
inc
adc
mov
sub
push
xchg
fmulp
pushf
imul
mov
aaa
faddl
aam
mov
cmp
cmp
inc
adcl
arpl
jo
jl
adc
sub
pop
in
mov
mul
xor
ret
insb
mov
aad
pusha
adc
out
xor
cwtl
rcr
push
inc
sbb
outsb
push
test
ret
mov
nop
int3
stos
shll
ss
or
cmpsb
sub
in
sbb
sub
push
push
xor
dec
jno
mov
and
outsb
mov
dec
in
mov
cmc
mov
sub
cs
adc
fisubrs
mov
sub
mov
dec
and
sbb
sar
mov
leave
or
cld
mov
sbb
jno
jo
imul
adc
lcall
and
movsl
outsl
test
in
movsl
call
xchg
push
stos
dec
mov
out
sub
and
xchg
hlt
test
popf
outsl
cli
push
test
sub
xorl
push
testl
or
or
out
repz
xchg
pop
push
mov
push
sub
and
lret
mov
or
lahf
or
cmp
cli
aas
dec
shlb
sbb
inc
sub
push
cmp
test
lret
jge
sbb
int
scas
lds
ret
xor
or
mov
bnd
cmp
dec
mov
mov
push
xor
pop
or
addb
and
inc
push
sub
mov
aas
adc
cmpsl
sbb
sub
pop
xchg
stos
jb
rcll
rclb
movsb
mov
mov
push
pushl
movl
dec
xchg
sbb
out
xchg
add
test
and
cmc
push
sbb
cmp
lods
and
jnp
jg
dec
add
in
jne
and
mov
outsl
push
cmpsb
adc
dec
int
shll
and
dec
fstps
adc
jbe
scas
out
insl
jmp
push
cmp
insl
jmp
sbb
adcl
mov
and
dec
mov
out
and
insl
xchg
sub
and
lahf
aam
push
ljmp
fbstp
ret
test
imul
jecxz
je
dec
lods
fsub
js
mov
test
mov
sub
mov
or
dec
push
lods
sti
xor
insb
fst
cwtl
sbb
adc
movsl
stc
jg
addl
leave
aad
mov
mov
pushf
push
stos
inc
inc
mov
lea
call
fs
jp
jne
les
cmp
popa
in
lods
out
mov
int3
ficompl
popa
fcoml
push
es
xchg
addr16
sbb
fsubrl
pop
shll
adc
push
scas
pop
jae
mov
das
xchg
sbb
icebp
rorl
scas
push
imul
xchg
ss
mov
dec
daa
dec
and
insl
sub
lods
sub
sbb
lahf
dec
sarb
sbb
mov
es
add
pop
cmc
sbb
addb
es
insl
addr16
jl
mov
inc
fdivr
sbb
fidivl
loopne
mov
daa
adc
and
push
mov
cmp
mov
int3
sub
rclb
push
jno
cmp
mov
sub
das
mov
shll
fdivl
scas
mov
inc
ficomps
dec
jge
dec
shlb
sbb
cwtl
les
sti
aaa
push
fsubl
and
mov
push
push
stos
and
mov
rol
or
push
cmc
mov
pop
adc
sahf
mov
mov
adc
adc
in
add
and
int
leave
lea
dec
and
lods
and
adc
rolb
jo
dec
push
clc
jle
mov
xchg
add
test
sub
lahf
or
push
leave
fwait
lahf
sub
mov
pop
adc
test
and
dec
push
dec
cmp
xor
lret
sbb
outsl
shl
outsl
xchg
loopne
imul
out
daa
jmp
pop
pop
cmp
jns
cmpl
push
jns
cmc
mov
jmp
out
mov
and
fisubrs
or
add
rcl
stos
and
mov
pop
cmp
xchg
adc
push
mov
loopne
jae
add
push
sbb
into
out
sbb
mov
lret
dec
stc
lea
cltd
xlat
fs
dec
das
cmpsb
je
mov
and
xchg
push
xchg
sarb
push
iret
fildll
xlat
jge
add
sub
fwait
and
outsl
aad
aad
fldt
int
pop
xor
xorb
or
aam
jg
jae
adc
jl
pop
mov
in
lcall
je
jge
push
std
adc
popf
push
dec
gs
ficompl
mov
sbbl
loopne
mov
repnz
rorb
xchg
sub
inc
imul
sub
push
mov
ret
mov
fs
sub
mov
pop
or
or
mov
shl
xlat
clc
sub
aaa
imul
cmp
jnp
add
sub
leave
dec
lahf
cmp
pop
arpl
dec
dec
shr
data16
mov
test
lock
aas
sub
mov
iret
pop
sub
ja
dec
ljmp
jecxz
sbb
insb
div
push
or
in
inc
jp
dec
out
orb
jns
pop
in
pop
aad
ljmp
icebp
jno
es
inc
fwait
pop
stos
push
jmp
lret
fidivrs
into
insb
mov
cmpl
ret
ja
sbb
test
ffreep
sub
jg
movsl
lods
mov
in
lock
loopne
mov
xor
rcll
sbb
les
leave
mov
scas
jp
xor
int3
lods
xor
mov
xchg
add
cwtl
xchg
test
xchg
inc
cs
inc
dec
sbb
cwtl
xchg
popa
decl
iret
gs
rcrb
xchg
jp
loop
leave
cli
and
cmpsb
xchg
mov
pop
hlt
jbe
popa
push
sahf
mov
cmp
xlat
xor
inc
adc
leave
jl
fildll
push
pop
aam
pop
cmc
pop
pop
fiadds
fimuls
fs
stos
or
pop
ret
mov
lds
cmp
push
sahf
add
fistpl
jmp
frstors
js
sbb
or
and
outsl
xchg
dec
and
cmp
cltd
mov
mov
fsubs
mov
std
cmpsl
pop
adc
xchg
subl
fs
ret
sub
sub
inc
xchg
int3
and
mov
mov
sahf
mov
sbb
cld
mov
andb
dec
test
and
jo
ds
sbb
es
sub
test
rcrl
out
imul
push
xchg
dec
js
aaa
cld
xorl
fwait
mov
bound
insb
sar
dec
subl
fbld
lret
stc
add
ljmp
mov
sub
add
sbbl
mov
push
clc
xchg
fiadds
bnd
lods
jo
inc
shrl
mov
lea
fiadds
sub
mov
scas
ja
pop
jp
xchg
jmp
adc
ret
ja
lods
jp
lods
lds
lock
xchg
sti
sub
lods
push
push
cmpsb
repz
pop
pusha
aaa
cmp
out
mov
cli
cs
fists
or
push
sbb
adc
and
addr16
inc
add
es
fs
pop
jge
dec
cmp
cmp
jmp
dec
jbe
dec
ficompl
jmp
mov
xchg
xor
iret
out
popf
jo
hlt
pop
repnz
jecxz
dec
push
ljmp
fs
jae
ljmp
cli
inc
movsl
push
clc
popa
lods
jl
xor
pop
cmc
lret
jl
out
fs
scas
cli
rclb
cmp
cld
add
jl
lds
mov
jle
clc
stos
fcomps
and
bts
les
aam
push
fldcw
xchg
addr16
sub
loop
insl
push
mov
inc
mov
fisubrl
daa
sbb
xchg
push
push
mov
inc
mov
jecxz
jle
mov
cmpsb
add
pop
shrd
add
push
fadds
sbb
neg
xor
or
jo
popf
mov
icebp
shrl
push
jo
fsubl
adc
pop
sub
fndisi(8087
lods
aam
mov
jp
or
fidivrl
sbb
ds
jmp
add
movsl
lret
dec
dec
xchg
ficomps
jp
js
lret
jecxz
push
dec
jmp
rcr
sub
xchg
dec
cwtl
and
add
or
pusha
in
cmp
sbb
out
imul
mov
sbb
je
mov
cld
xor
icebp
mov
or
pop
pop
lret
jnp
jno
jp
das
jne
xchg
sub
mov
add
dec
data16
enter
jle
stos
gs
stc
or
insl
mov
jle
scas
inc
inc
ret
push
dec
sub
outsl
inc
je
add
mov
adc
add
and
dec
ja
jbe
cmpsl
jnp
and
jg
daa
add
sub
xor
rolb
xchg
ret
test
inc
cmpsl
pop
add
pop
jmp
cmpsb
out
aam
lret
jne
pop
sbb
lahf
sti
test
ds
bound
hlt
xchg
dec
push
dec
push
bswap
outsl
jb
popf
mov
lods
in
add
xor
dec
adc
lea
ja
in
jmp
sub
mov
int3
xchg
xrelease
sbb
dec
shlb
gs
sti
mov
cmpsl
in
mov
imul
jge
xor
sub
dec
lret
push
leave
lock
sbb
or
push
fidivrl
push
sbbl
sahf
mov
sbb
add
pushf
mov
in
or
sbb
adc
cmp
stos
mov
and
mov
pop
call
in
roll
add
inc
push
icebp
adc
xchg
xchg
test
jns
repnz
mov
dec
dec
inc
sbb
push
jmp
popf
out
das
hlt
test
mov
ret
cmp
mov
sub
insl
inc
cmpsl
jg
sub
iret
imul
out
ror
sahf
push
cmp
xor
in
scas
inc
xchg
jb
aas
inc
rol
mov
jo
outsb
aaa
cmc
int3
lret
insb
adc
fistpll
dec
pop
push
jle
inc
cltd
inc
shlb
mov
sbb
dec
arpl
pop
addr16
int3
test
sub
nopl
or
mov
push
fisubs
mov
out
les
xchg
pop
testl
in
cld
mov
out
or
dec
xorb
jecxz
cmc
mov
mov
dec
sub
das
adc
mov
das
xchg
call
out
push
add
jl
mov
cld
ss
jae
jae
rorl
pop
xchg
sbb
add
push
nop
add
insl
dec
inc
mov
xor
repz
push
cmpsb
dec
pop
movq
outsl
aaa
sahf
xorps
daa
dec
loope
notb
xchg
mov
xor
push
xor
add
pop
fstl
pop
xor
sub
shl
mov
mov
mov
sbb
jle
js
cmp
jmp
mov
mov
outsb
flds
enter
xchg
cli
jb
adc
and
jae
pushf
push
int3
lcall
inc
jo
sub
or
sub
repnz
call
loope
mov
lcall
fisubs
std
sahf
xchg
fmul
int3
ljmp
out
push
adc
xorb
pusha
mov
punpckhwd
push
daa
call
xor
jmp
jge
in
out
and
clc
fsubr
fldl
test
and
push
mov
aam
ret
mov
ja
inc
push
das
sub
popa
out
xchg
dec
jb
fstpl
out
out
jo
pop
jge
test
jo
fidivrs
dec
shll
and
call
jbe
int
add
xchg
movsb
ret
mov
ljmp
mov
aam
sbb
aam
xchg
popa
pop
lock
push
xchg
pop
iret
push
or
loopne
movsl
push
push
testb
testb
rcrb
sub
jecxz
inc
pop
fs
mov
xchg
leave
mov
push
mov
add
in
into
lds
push
jl
xchg
inc
and
xchg
push
sub
xchg
in
push
ds
icebp
push
lcall
enter
or
mov
jns
push
insb
out
and
mov
push
jno
fldl
stc
lods
add
push
decl
cs
jp
loope
sub
aam
sbb
shlb
lahf
and
xchg
sub
int
and
sahf
adc
loope
into
lcall
adc
movsl
rcrb
mov
xor
and
xchg
adc
push
popa
xor
cmpb
xor
sti
cmp
out
clc
insl
outsb
into
xchg
iret
ds
mov
sbbb
ds
pop
xor
mov
add
xchg
mov
lret
mov
stc
js
call
fucompp
out
arpl
mov
rcpps
cmp
in
imul
out
lods
ja
and
int
mov
or
inc
imul
insb
popa
mov
xor
cmp
dec
adc
fdivs
add
stos
aam
cld
ds
fs
outsb
orl
sub
into
or
fnstsw
cpuid
and
mov
push
mov
adc
add
imul
xchg
dec
push
popf
push
std
xchg
dec
xor
mov
pop
or
movsb
shrl
xor
xchg
outsb
jmp
pusha
add
jns
rcrb
jmp
mov
jg
insl
fsubrl
in
clc
test
test
shrl
mov
sub
ds
sbbb
rcr
xchg
out
pushf
push
pop
xor
push
sbb
movl
jno
test
outsl
mov
sbb
mov
aaa
andb
dec
mov
push
mov
sub
pushf
push
add
inc
std
arpl
fnstsw
dec
mov
jb
faddp
out
leave
sub
je
mov
dec
push
mov
cltd
int
adc
add
add
dec
outsl
pop
and
cmp
es
cwtl
ljmp
fs
imul
cmova
ss
js
add
shr
scas
in
int
inc
aas
or
shll
and
xor
dec
inc
out
adc
enter
mov
mov
outsl
or
fwait
test
popf
test
mov
aam
icebp
movhlps
ret
xor
loope
movsb
push
in
andl
sub
pop
push
pop
xchg
fwait
subb
enter
cmovg
fnstsw
mov
xchg
sahf
fisttpll
sbbl
inc
sbb
pop
xchg
xchg
in
dec
es
insb
mov
xchg
sha1msg1
mov
addr16
daa
mov
xchg
mov
ss
pop
fsubl
cld
stos
pop
test
imul
fnstcw
ret
insl
jne,pt
push
mov
pushf
pusha
xchg
pop
jle
or
lds
and
lods
or
xor
in
mov
mov
dec
popa
xchg
pop
inc
fwait
stos
jg
dec
jp
ret
push
mov
add
jne
xor
loop
jbe
inc
sbb
pop
nop
inc
test
ret
aad
pop
mov
cmpsl
sub
xchg
sub
xchg
and
leave
icebp
push
nop
out
les
notl
dec
dec
in
adc
mov
lcall
call
sbb
loope
cmpsl
mov
and
test
fs
jmp
decb
cli
jnp
pop
aam
mov
loope
nop
push
lods
jle
push
adc
adc
cmc
stc
sti
push
jb
adc
int
ds
cli
sbb
mov
cld
repz
sbb
lret
pop
push
es
pop
ja
ret
sub
jb
imul
add
subb
std
jge
mov
inc
clc
in
loop
jp
mov
cwtl
or
adcb
xchg
icebp
adc
pop
fsts
outsb
loopne
imul
js
pop
adc
mov
call
inc
inc
out
mov
imul
inc
lahf
leave
outsl
mov
arpl
cmp
insb
push
dec
rcll
negb
lea
cmpb
icebp
fldt
sbb
fptan
outsb
and
jg
and
mov
gs
fiaddl
scas
xor
jecxz
cmc
fcmovnbe
mov
pop
inc
adc
sub
ret
out
leave
xchg
sahf
mov
fbstp
loop
push
mov
jecxz
inc
xor
push
sub
aam
or
mov
sbb
lahf
sbb
inc
out
push
cmp
std
cmc
ss
fists
mov
aad
movl
imul
xchg
mov
add
outsb
jp
mov
cs
sub
test
mov
jne
mov
sbb
mov
mov
jge
ficompl
inc
xchg
or
mov
adc
and
inc
push
fwait
xchg
test
xor
lods
push
ja
push
pop
or
push
mov
or
ret
jle
arpl
test
outsl
mov
fcmove
sbbb
pushl
jbe
xchg
dec
xor
stos
out
aam
sbb
jae
ds
add
ficomps
scas
stc
add
pop
mov
movntq
jne
cmp
fs
out
test
mov
add
pop
cmpsl
and
es
imul
lods
ficoms
mov
cmp
mov
jnp
lcall
sti
mov
loope
in
xchg
mov
ret
pop
xorb
xchg
inc
fdivp
loop
iret
icebp
test
push
jg
adc
out
sub
cltd
jnp
mov
lds
addl
pushf
jg
cmp
jnp
fxch
ljmp
mov
push
and
dec
dec
adc
mov
dec
cmpb
and
push
pop
or
xor
push
nop
mov
sti
cmp
and
bound
je
dec
xchg
lret
sub
icebp
or
mulb
inc
mov
ret
cs
mov
push
pop
std
xchg
in
sbb
test
jecxz
fadds
xchg
xor
aas
fisttpl
cmc
cmp
and
je
add
xor
roll
arpl
and
repz
add
push
andb
shrl
rorl
mov
fdivp
and
mov
lahf
or
mov
sub
fnstcw
aam
push
mov
pop
or
sbb
ret
fsubl
adc
xchg
inc
cmp
mov
push
or
pop
push
and
mov
ficoms
add
xor
stos
mov
stos
adc
repnz
lock
pop
and
pop
js
inc
inc
dec
mov
js
mov
je
jg
sub
lods
ficompl
ss
data16
ficoml
sub
and
dec
jns
rclb
fstl
gs
and
xor
sub
pop
int
or
leave
pop
nop
insb
jbe
push
icebp
stc
testb
or
mov
jecxz
push
out
loop
xchg
daa
imull
das
push
outsb
xchg
cmc
xchg
stos
add
aad
xchg
mov
push
enter
sbb
adc
test
leave
fwait
hlt
cltd
mov
dec
jb
outsl
jbe
leave
and
cmpb
lcall
and
cmc
xchg
outsl
imull
sub
mov
add
dec
popl
push
iret
push
and
adc
ss
fistpl
xor
outsl
clc
out
lcall
sbb
mov
and
outsl
push
xor
ja
jg
jae
xor
movsb
jb
in
xchg
mov
dec
adcb
test
push
ljmp
jp
aas
jg
xchg
ret
ss
insb
adc
push
lcall
sub
lea
mov
jnp
shll
or
aas
pop
or
push
cmp
adc
lock
lods
ss
das
xorl
enter
xor
popf
mov
cmp
jae
loopne
lea
jbe
out
fwait
mov
push
xchg
imul
callw
stos
jns
ret
or
pop
jno
cs
fs
jne
cmpsb
inc
rolb
bound
std
cmp
repz
imul
and
shlb
mov
xor
xchg
dec
stos
shr
add
xchg
sub
jo
mov
cmp
pop
in
fisttps
mov
jo
add
stos
and
adc
add
pop
test
test
test
fcompp
jle
sub
jae
lret
mov
fidivs
popf
ret
sarb
out
jb
negb
inc
and
jg
cli
add
xchg
jle
iret
movsb
out
mov
popa
jmp
cmp
adc
ja
dec
pop
mov
xchg
xchg
jne
aas
roll
add
fsqrt
ss
jbe
inc
xchg
pop
daa
je
add
enter
jne
mov
or
mov
ss
xchg
jb
lcall
dec
mul
in
mov
xchg
fldl
sbb
mov
inc
test
mov
into
shl
insl
xor
lahf
lock
cmp
pushf
xor
dec
sar
into
sub
sti
mov
ljmp
push
or
fldt
out
xchg
jno
testb
cmp
push
lea
rcr
cwtl
xor
and
sti
adc
es
popa
push
lods
add
push
push
sub
negb
arpl
in
inc
int3
inc
push
insb
mov
sbbl
pop
mov
stos
xor
or
mov
out
stc
push
jne
adc
repz
popa
pusha
das
jo
les
test
or
sub
jbe
mov
adc
je
sarl
sub
outsb
sub
xor
and
enter
xchg
inc
xchg
adc
mov
jno
pushf
call
sbb
jo
dec
lcall
xchg
outsb
push
out
pop
xchg
mov
mov
add
dec
mov
mov
cmp
jl
cmp
fs
and
mov
test
dec
mov
imul
lcall
mov
jmp
push
add
jp
mov
add
xor
or
add
mov
fstps
push
xor
stc
add
inc
push
mov
mov
mov
bound
leave
iret
sub
pop
or
ja
fidivrl
jle
aad
icebp
mov
pop
mov
or
jne
cld
push
ja
gs
cmp
cmp
iret
mov
test
inc
data16
jge
jno,pn
int3
imul
adc
push
outsl
nop
add
imul
jne
and
imul
lods
xlat
inc
jbe
cmpsl
push
sbb
push
pop
pop
lods
add
mov
sub
xor
outsl
jp
dec
pop
xor
sub
mov
mov
je
jg
aas
jo
mov
mov
mov
and
test
push
push
icebp
cs
test
fsts
imul
scas
dec
push
sbb
mov
outsl
rorl
and
mov
pop
xor
pop
cltd
sub
push
mov
mov
mov
or
push
push
out
pop
sub
mov
pop
mov
jb
mov
jp
es
mov
mov
mov
ljmp
mov
sub
sbb
push
jp
jne
out
push
mov
clc
lea
loopne
clc
pop
test
and
dec
fsubrs
push
or
jp
fwait
pushf
inc
adcb
fiaddl
sub
enter
mov
dec
fnstenv
rcll
or
leave
mov
pop
mov
hlt
scas
xor
add
pop
jb
shrl
inc
dec
loop
loop
lock
sub
push
sub
xchg
mov
icebp
xchg
cmpsl
daa
daa
inc
add
xor
mov
mov
ret
or
fildl
ljmp
mov
mov
add
scas
adc
xor
jge
push
lods
mov
jo
or
pop
stos
jle
inc
fbld
repz
std
inc
popf
sbb
mov
jo
inc
aam
sti
lret
sti
aad
dec
mov
lret
mov
jg
cmpsb
cltd
imul
xor
jg
fwait
push
gs
push
inc
out
mov
not
fcoml
or
fucom
add
jp
nop
fcomip
adc
sarb
ljmp
push
mov
cs
inc
daa
sub
mov
popa
pop
rcl
fadd
xchg
rcll
clc
mov
mov
sti
jle
add
cmpsb
fs
cs
inc
xchg
sarb
out
mov
bnd
cwtl
pop
mov
xchg
cmp
stc
mov
mov
outsb
pusha
sarb
mov
stos
and
rol
sti
or
ljmp
ret
cmp
sbbl
jecxz
inc
adc
inc
in
cmpsl
cltd
lea
xchg
add
sub
test
pop
lahf
cld
inc
enter
inc
xchg
lock
fs
dec
out
push
subb
fildll
xlat
mov
fsubr
cmpsb
and
leave
shll
in
std
pop
shll
int
ret
cmp
mov
pop
jae
pop
arpl
cld
jmp
test
mov
sub
movb
mov
cmp
pop
and
xlat
jmp
adc
int3
pushf
pop
sub
inc
ljmp
rclb
into
lods
push
int3
jmp
jg
test
sub
fcompl
pop
sub
inc
push
in
sub
push
dec
mov
xchg
data16
mov
fs
pop
xor
incb
fsubs
jp
jo
sbb
inc
adc
ficoms
rolb
xchg
mov
jg
add
mov
test
mov
sahf
std
repz
cmp
test
jnp
ljmp
xlat
mov
adc
leave
sub
pop
push
mov
add
bound
iret
and
dec
mov
sbb
xor
inc
repz
test
push
cmp
pop
jnp
jae
push
unpcklps
das
outsb
out
shll
inc
and
adc
in
jmp
lock
xor
sbb
mov
inc
jp
pop
cwtl
cld
pop
scas
dec
inc
inc
iret
lods
inc
inc
sub
jbe
xchg
in
imulb
loope
mov
call
mov
mov
mov
aad
imul
mov
fildll
sti
mov
hlt
out
leave
push
jnp
mov
pop
or
cwtl
sub
jb
jge
sbb
mov
addr16
bound
aaa
jp
lahf
sbb
fcmovnu
loop
jl
pop
mov
fldcw
mov
int
std
mov
push
sahf
es
xor
clc
jae
js
movsl
lret
sub
fimull
in
sub
icebp
fldt
mov
stos
inc
push
push
and
fincstp
aas
stos
mov
sbb
jle
adc
orb
ficoms
sbb
add
push
dec
jecxz
lcall
pop
xchg
mov
clc
lret
adc
popf
xor
push
dec
fsub
mov
mov
mov
pop
mov
out
mov
popa
fcoms
xlat
mov
int3
in
insb
cmp
sar
aas
push
push
fidivrl
hlt
out
mov
mov
aam
inc
mov
icebp
lahf
in
xchg
divl
jne
inc
mov
ss
insb
sub
jns
and
ss
jp
jl
mov
and
shll
push
push
xor
or
push
cli
pop
or
adc
sbb
sub
sbb
pop
out
sub
jo
pusha
xchg
div
lds
mov
jge
xor
pop
mov
push
push
or
dec
or
inc
and
cmpsb
out
and
xor
cmc
adc
mov
and
or
dec
ja
inc
add
scas
jnp
jecxz
loop
fdiv
push
mov
gs
push
inc
mov
dec
adc
adc
inc
inc
pand
daa
jecxz
lret
dec
dec
xchg
mov
or
push
jge
jo
sbb
in
adc
push
outsl
xorl
dec
xlat
aas
mov
mov
push
lds
inc
dec
stos
ljmp
mov
cmpb
mov
mov
inc
cltd
pop
std
out
arpl
sbb
push
das
outsb
sbb
sbb
mov
fidivrl
sub
and
test
adc
cmp
in
or
lret
push
sub
ret
mov
push
pop
cmp
jae
imul
lods
loopne
lret
dec
out
inc
out
push
pop
inc
leave
xchg
add
ret
fwait
imul
pusha
or
xchg
lret
push
clc
cmp
mov
arpl
dec
icebp
add
jns
ljmp
imul
mov
movsb
push
loopne
sti
pop
pop
adc
or
cmpsb
mov
jno
cmp
jle
pop
ror
pop
adc
gs
pop
mov
int3
test
data16
shll
push
push
sbb
sub
adc
les
sub
jns
sub
or
push
imul
xor
sbb
out
ss
icebp
movsl
jns
popa
xor
cwtl
or
pop
aam
push
mov
es
cltd
lods
movsb
aas
push
jo
mov
popa
cltd
cmp
insb
or
mov
rcrb
adc
sti
and
mov
add
add
xchg
outsb
inc
push
and
xlat
mov
rep
adc
jb
pop
push
push
pop
fmull
std
inc
adc
mov
mov
cmp
in
stos
mov
call
lds
jl
in
sub
cmpb
sarl
and
stos
jno
cmp
add
jne
clc
stos
cltd
dec
out
scas
lods
push
jl
lahf
mov
sbb
mov
pop
repz
mov
jns
nop
sbb
add
push
pop
cmpsb
mov
sahf
inc
cmp
mov
insl
dec
add
sti
imul
pop
scas
xchg
mov
adc
les
mov
int3
mov
inc
movl
in
jno
inc
rorl
push
dec
loop
rcrl
add
pop
insb
sbb
shrl
xchg
pop
ds
xor
pop
fcompl
inc
ja
outsl
mov
rorb
xchg
push
shll
cmp
aas
icebp
hlt
notb
cmp
sub
nop
sbb
lret
test
outsb
int
lahf
or
jle
mov
pop
mov
mov
mov
fildll
jnp
in
test
add
add
sub
mov
or
popa
adc
js
test
popf
mov
push
push
mov
test
dec
sub
xlat
sub
and
aad
std
xchg
dec
xlat
pop
jge
push
lret
bnd
iret
or
or
jg
imul
push
mov
mov
xor
rcl
dec
push
sbb
mov
lret
inc
jp
cmpsl
jmp
out
xchg
xchg
ret
pushf
mov
add
or
xlat
stos
mov
pop
inc
sub
movsb
jp
jns
or
jbe
mov
or
xor
fcmovne
popf
popf
sub
add
out
mov
dec
xchg
dec
cmc
call
sub
mov
mov
mov
scas
test
loope
mov
mov
inc
push
cld
jns
outsl
xor
test
adc
xchg
ret
pop
addr16
and
nop
lcall
leave
push
imul
test
jnp
aad
push
fs
xor
xchg
jnp
jmp
xor
lea
nop
test
data16
repz
adc
popf
arpl
xchg
cmp
scas
pusha
pop
movsb
stos
lods
add
inc
push
push
jbe
cltd
fwait
imul
mov
xor
cmpsb
adc
in
adc
pusha
sub
loopne
cltd
xor
mov
sti
or
cs
push
testl
ret
xchg
xchg
inc
outsb
fisubrl
and
pop
or
jne
push
fbld
pop
rolb
inc
rcl
xor
cmpsb
mov
sbb
into
out
sub
push
mov
sahf
mov
mov
or
push
xchg
pop
nop
sub
add
jb
pop
ret
sahf
mov
cmp
pop
push
and
aas
cli
add
mov
jno
daa
aas
loope
aas
out
push
and
cmp
xor
repnz
pop
dec
dec
ja
sub
inc
ror
cld
mov
aas
popa
inc
add
mov
sbb
lea
aam
int
ss
add
call
or
dec
aad
fildll
adc
test
jbe
mov
jbe
fdivl
xorl
enter
xchg
fnsave
in
insl
mov
add
iret
add
stos
out
fnstcw
and
js
and
test
jp
das
or
adc
ss
into
xchg
mov
in
add
and
sub
mov
jno
jg
jae
push
arpl
pop
jmp
addb
aaa
jb
dec
jp
push
and
add
int
pop
jg
mov
add
lods
push
das
xor
xchg
sbb
hlt
mov
fnstenv
inc
stos
inc
inc
bnd
adc
adc
push
mov
pop
mov
stos
xor
sub
dec
js
mov
loop
ljmp
shll
outsl
adc
push
xchg
dec
sbb
mov
js
into
mov
lock
rol
mov
ja
aas
mov
push
cmpsb
gs
mov
dec
int
in
sahf
outsl
push
xchg
test
enter
sbbl
loop
repz
jae
fbld
and
adc
mov
scas
inc
ljmp
sub
or
cmpl
rclb
adc
insl
loop
mov
les
leave
cli
shlb
cmpsb
lock
xor
int
cmc
iret
scas
pop
adc
lock
lods
fstpt
xor
xchg
aad
pop
ss
inc
dec
dec
aas
fidivs
xchg
lcall
mov
addr16
aaa
inc
sub
outsb
add
clc
sarl
push
xlat
mov
fldl
dec
xor
js
subl
lret
scas
cs
dec
imul
popa
sbb
inc
lret
lret
push
pop
lea
stos
pop
push
or
icebp
arpl
add
imul
and
pushf
leave
push
lret
aas
cmp
mov
inc
inc
std
pushf
les
cmp
out
jl
test
mov
jecxz
add
out
xor
add
loopne
movsb
cmp
mov
inc
lret
jns
inc
mov
and
test
sub
repz
fisttpl
push
das
pop
je
jb
movsl
sbb
sub
and
cwtl
ljmp
sub
inc
push
add
push
ret
insb
pop
fidivs
lods
shrl
or
repz
dec
sub
mov
ljmp
daa
pop
lods
cwtl
testb
add
pop
push
mov
xchg
les
in
add
outsl
cmp
out
loopne
leave
cmp
mov
xchg
test
cbtw
scas
cmp
inc
int
es
cmp
mov
pop
xor
cmp
fisttpl
jne
fsubs
int
pop
cmc
inc
test
xor
cmp
xchg
xor
push
sub
xor
or
aam
fstpt
sbb
or
daa
jae
mov
in
xor
mov
cmp
mov
or
push
adc
or
push
dec
loop
test
mov
cmp
mov
popa
cs
je
inc
sub
popf
jne
aas
mov
repnz
or
test
sahf
dec
lods
insb
rcr
mov
mov
pop
fdivs
mov
int
inc
cwtl
iret
dec
mulb
fs
pop
arpl
cltd
test
mov
ror
leave
inc
clc
pusha
mov
xorl
mov
xchg
xchg
push
pop
fldcw
push
or
repnz
mov
or
adc
insb
xor
or
jmp
xchg
add
icebp
mov
lret
insb
in
ja
ret
mov
arpl
sub
movhps
mov
adc
lock
aam
fcoms
and
pop
push
add
push
leave
xchg
cmp
daa
shlb
mov
div
js
test
mov
cli
sub
out
jb
lret
insl
stos
fcmovu
sub
insb
cmpsl
add
xchg
in
test
fildl
dec
out
test
xchg
pop
xor
movsl
jb
pop
xchg
add
jl
ret
inc
in
nop
std
dec
call
cmpl
lods
stc
xor
std
mov
cmp
sbb
pop
push
aad
pop
cmpsl
outsl
or
ja
mov
xchg
xchg
cmp
cmp
pushf
cmp
inc
test
push
popa
out
fiaddl
lods
outsb
outsl
test
int3
ss
push
pop
push
jmp
hlt
push
ds
pop
int
cs
xor
mov
and
popf
out
mov
test
lret
and
cmp
stos
jnp
add
fldenv
push
push
andb
sti
cmp
fimull
and
pop
jge
ljmp
cmc
orl
cmp
xlat
mov
mov
pop
push
popa
xchg
in
repnz
mov
inc
pushf
imul
les
cltd
jae
ds
sbb
mov
fiadds
mov
add
lods
add
xchg
or
jbe
mov
nop
cs
inc
in
add
add
imul
aaa
ds
xchg
clc
sub
cmp
mov
cmpb
pop
push
rorb
jp
not
mov
ss
sub
sbb
aad
gs
mov
std
dec
daa
push
or
daa
fwait
pop
loope
and
in
cmp
xchg
adcl
inc
or
cmpsb
and
sub
shl
sbb
mov
mov
mov
out
ds
in
xchg
mov
dec
jecxz
hlt
cmpsl
aad
movsb
xchg
fs
outsl
push
cmp
push
pop
out
mov
fiadds
pop
add
scas
lahf
lods
jb
lcall
in
gs
mov
mov
dec
out
ret
div
sub
mov
push
repnz
js
enter
ret
push
hlt
stos
lret
std
nop
je
addl
jae
sbb
les
jbe
pop
mov
ret
fisubs
mov
es
dec
pop
faddl
mov
mov
push
jae
adc
sahf
and
repz
mov
sub
pusha
cmp
int3
jmp
sarl
fiadds
mov
mov
push
cmp
add
xlat
lods
enter
mov
leave
shl
cs
inc
lods
mov
cmp
out
cltd
mov
repnz
sbb
mov
push
les
inc
aaa
push
ficomps
adc
dec
dec
loope
fdivrs
add
push
sub
adc
jo
addr16
xchg
pop
xchg
xor
dec
sti
fcoms
cmp
decl
jnp
outsb
xor
negb
inc
add
aaa
or
repz
cli
out
loope
cmpsb
sub
push
mov
mov
push
out
adc
dec
add
jmp
xor
test
jle
movsb
pop
xor
jo
jmp
inc
dec
sub
adc
jmp
cli
in
mov
scas
in
mov
adc
inc
in
jbe
icebp
jp
stos
add
and
pop
mov
mov
stc
xor
flds
and
sub
inc
lret
repz
mov
mov
or
negb
cltd
lds
clc
rcll
imul
mov
sub
cwtl
mov
adc
add
or
sub
pushf
jne
pop
mov
pop
fadd
xlat
cltd
cwtl
mov
mov
xor
in
pop
dec
push
fnstcw
or
sub
aaa
mov
fnstenv
push
std
inc
add
or
mov
mov
and
cli
push
lcall
aam
outsl
cmpsb
mov
mov
in
loope
pop
in
dec
pushf
movsl
test
sbb
sub
testb
push
jo
sti
pop
inc
xor
dec
cmp
mov
jns
mov
inc
pop
push
inc
and
fists
push
lcall
outsl
aas
xor
insb
sub
cmpl
mov
pop
xchg
xchg
add
xlat
sub
lret
ficoms
adc
je
rcrb
test
pop
rcll
mov
fbstp
mov
dec
aam
test
call
inc
pushl
sub
in
stc
mov
xchg
repz
sbb
adc
cmp
pop
ret
out
add
cmpsl
and
cmp
out
scas
pop
sahf
push
les
cltd
test
xor
mov
leave
mov
xchg
xchg
push
jno
mov
adc
add
pop
push
js
rolb
fdivr
subl
cmp
push
test
outsb
push
stos
jbe
sub
int3
repnz
rcr
in
push
add
add
dec
lods
inc
lods
xchg
int3
xchg
ret
cmp
decl
int
stos
sbb
movsb
mov
inc
stos
cmpsb
icebp
int
pop
pop
jnp
out
mov
mov
mov
mov
fimuls
popa
std
cmp
adc
ljmp
jbe
pop
popf
movsb
sbbl
icebp
jl
cmpl
adc
mov
cmp
imul
inc
fisubl
out
sub
mov
sbb
xchg
fldl
sbb
inc
sbb
adc
cmp
lret
shr
inc
mov
loop
jne
dec
stos
push
popf
incb
jo
cmpb
imul
imul
lcall
mov
jg
sbb
push
and
cmp
repnz
scas
pop
mov
jg
and
xor
popf
test
or
mov
orb
out
adc
aaa
cmp
push
mov
fcomp
xor
sbb
loope
sub
imul
stos
fstpt
cmp
lds
or
push
inc
jo
sub
xchg
push
mov
fists
dec
ficoml
test
inc
push
cltd
mov
loop
fildll
or
jg
inc
stc
dec
mov
and
add
loopne
mov
xor
inc
mov
fdiv
fldt
mov
pop
mul
cmp
test
pop
pop
fwait
mov
outsb
inc
mov
loopne
or
jecxz
xor
sbb
enter
jp
sub
rorl
in
mov
scas
inc
adc
or
lret
inc
and
test
mov
push
inc
mov
add
nop
cmp
and
movsl
xor
ds
cmp
xchg
ljmp
psubq
mov
sub
int3
jae
xor
jecxz
into
mov
mov
loop
push
es
adc
add
or
fldl
cmc
fwait
lods
mov
stos
inc
sbb
push
push
add
sbb
and
test
push
adc
and
dec
xor
test
sbb
dec
outsb
or
ja
dec
scas
or
in
out
inc
ja
jecxz
mov
mov
outsb
out
xchg
mov
gs
int
cmpsb
icebp
jno
xor
cltd
push
inc
push
nop
stos
fists
leave
adc
roll
pop
daa
sub
pop
icebp
jp
test
jmp
cmp
pop
out
push
and
lock
pop
mov
mov
xchg
dec
dec
cmp
adc
test
xor
fstpl
imul
add
adc
js
and
in
sub
adc
notb
mov
mov
and
pop
add
fiaddl
adc
or
adc
scas
mov
jg
mov
or
add
inc
sarl
hlt
pop
jae
cmp
das
test
dec
mov
fstps
push
add
roll
popa
xor
sub
pop
adc
int3
push
push
mov
push
sbb
cltd
imul
rclb
sbb
xchg
stc
or
sub
icebp
mov
sbb
and
stc
fcmovnu
fldl
outsl
cs
mov
lock
adc
lods
imul
sub
xor
stos
lcall
sti
mov
dec
push
adc
and
sub
rol
fwait
and
scas
aaa
inc
mov
pop
mov
add
lret
sub
adcb
xchg
les
jae
rclb
inc
lods
xor
scas
push
push
orb
fsubrs
pop
mov
mov
hlt
out
mov
jb
mov
mov
test
mov
in
stos
dec
outsb
es
cwtl
sub
notb
mov
add
mov
filds
xchg
pop
mov
jns
mov
cli
in
sbb
stc
lds
pop
mov
gs
sti
cmp
dec
xchg
xchg
clc
stos
and
push
sub
ret
mov
ret
push
in
adc
add
pop
sub
test
jne
inc
shll
movsl
loope
sbb
loope
loope
outsb
lret
mov
jle
push
inc
aam
sub
sbb
xchg
outsl
mov
pop
ljmp
xor
push
pop
lock
iret
mov
dec
cli
int3
shll
lret
das
cmpsl
jae
and
mov
mov
pop
mov
movsl
xor
int
jbe
pop
pop
pop
mov
mov
xor
icebp
scas
sub
add
lods
arpl
jg
into
movsl
pop
xchg
jg
add
inc
orl
jmp
adc
scas
enter
push
sbb
jae
in
mov
xor
jo
adc
mov
je
lahf
add
fcompl
outsb
stos
insl
push
fstps
lret
cmp
test
and
mov
xor
dec
addb
inc
and
pop
fiadds
pop
ljmp
xchg
cmp
pop
mov
cmovae
mov
cmp
sub
and
cmp
mov
push
fstpl
and
pop
mov
push
pop
dec
xor
inc
push
sub
test
dec
ja
jle
gs
dec
and
insl
push
xor
subl
ss
xchg
mov
test
mov
cli
imulb
sbb
imul
inc
or
xchg
shl
orl
imul
jno
lods
or
into
mov
fildll
lcall
push
pop
push
mov
jp
jl
and
sub
and
lahf
aas
push
mov
cmp
lea
rclb
mov
mov
jns
adc
stos
xor
scas
leave
push
into
inc
and
insl
jo
pop
mov
js
sbb
lahf
popf
mov
cli
mov
data16
push
mov
bound
rcl
pusha
sbb
lret
xchg
in
jbe
push
xor
insl
in
lahf
and
sub
shlb
das
sbb
or
and
lret
pop
cwtl
fwait
dec
int3
test
popa
cltd
push
cmpsl
inc
gs
gs
xor
cs
mov
xchg
sbb
cmc
mov
or
roll
gs
ror
push
jmp
pop
cmpsb
mov
add
mov
ds
shl
lahf
jecxz
push
lahf
inc
das
int3
sahf
sub
dec
or
push
xor
adc
loope
es
adc
mov
add
push
push
sbb
dec
jo
cmpl
xor
in
std
out
xor
in
fcmovnb
arpl
sbb
push
cltd
repnz
jnp
test
sub
mov
jle
cmp
jnp
jle
cmp
aas
sbb
lcall
or
movsl
push
xlat
pop
sbb
in
fidivrl
popa
jmp
pop
loop
cld
es
and
cld
pop
rcl
rolb
into
xlat
fstpl
jae
inc
pop
div
iret
mov
into
dec
sbb
lahf
inc
push
ds
dec
addr16
ljmp
fs
rorb
in
leave
nop
adc
out
and
rclb
daa
add
jmp
push
je
dec
xlat
cmp
mov
loope
ficoms
testb
fnstsw
xchg
iret
inc
jmp
das
imul
lret
xor
mov
dec
ret
shrb
dec
push
vpsubsb
sbb
pop
in
fiadds
adc
or
aam
cmpsl
inc
or
pop
orb
std
sbb
and
shr
sbb
mov
pop
call
or
pop
hlt
mov
lahf
jge
cmovg
cmp
movsl
out
xchg
std
hlt
push
inc
push
notb
adc
sub
add
mull
in
inc
jge
jne
fsubrs
lcall
mov
test
int3
popa
loope
icebp
fildl
push
pop
mov
cmp
mull
push
mov
lea
push
push
clc
insb
mov
mov
and
stos
jmp
outsb
sub
xor
int3
mov
out
stos
dec
xor
iret
jbe
mov
mov
gs
js
adc
or
leave
xor
jp
lcall
cmp
stc
cmp
bound
lods
sti
cmp
pop
inc
add
xchg
cmpsl
cmpsb
cmp
jmp
ret
imul
adc
stos
inc
inc
mov
aad
cwtl
fisubs
cmpsl
fcoms
stos
jns
fst
inc
movsb
in
in
sbbb
daa
lea
rorb
hlt
loop
xchg
pop
adc
mov
icebp
cmp
jno
pushf
cltd
jl
aas
pop
scas
mov
ret
push
call
push
enter
or
pop
push
in
mov
mov
mov
push
pop
sub
mov
ljmp
add
subb
in
mov
divl
cmp
mov
sarl
fwait
jecxz
pushl
movsb
out
loopne
fstpl
into
fwait
shl
lret
sub
jmp
mov
in
leave
xor
mov
jle
mov
cwtl
ljmp
popl
dec
xor
jbe
jnp
ret
or
pop
lods
mov
adc
stc
clc
mov
push
dec
shr
lock
loop
jmp
sbb
jb
popa
xor
dec
adc
push
ret
xor
mov
idivl
mov
loopne
fcomi
adc
ret
int3
jns
stos
bound
loopne
and
nop
lock
bound
in
aad
mov
ja
mov
sarl
jg
mov
dec
nop
mov
xor
cmp
add
and
sti
pop
cmp
cmp
sub
mov
xchg
repz
imul
leave
add
or
dec
cwtl
push
imul
ljmp
mov
test
ljmp
adc
cs
xchg
push
xchg
ja
loopne
sti
mov
test
xor
push
jbe
stc
out
dec
sarb
sub
das
sbb
push
sahf
data16
inc
fistpl
xchg
sbbb
sub
out
hlt
insl
add
ja
xor
outsb
mov
add
mov
mov
in
test
or
push
cmc
insl
fstps
mov
sbb
mov
inc
cmp
adc
and
in
jecxz
or
cmpb
mov
add
dec
xor
pusha
pop
fsubrs
imul
inc
adc
jnp
inc
inc
lock
push
jl
add
push
inc
jle
sub
jp
push
hlt
jg
push
push
je
push
mov
add
aaa
stc
sbb
into
dec
cmp
pop
aaa
mov
pushf
jle,pt
xor
hlt
add
mov
jge
lret
and
xchg
push
sbb
loope
dec
lahf
adc
sahf
adc
add
aam
mov
sub
inc
sbb
outsb
mov
decb
dec
xchg
sub
adcb
shl
mov
lods
push
mov
imul
cmp
stos
lret
inc
cmp
je
inc
xor
add
shr
jae
inc
test
cmp
adc
or
int
int3
dec
or
fimull
pop
xchg
cmp
add
repnz
pop
xchg
jbe
cmp
pop
popf
enter
bound
jmp
add
and
jne
ss
stos
or
in
pop
mov
xchg
inc
cmpsl
mov
stos
jle
lods
adc
clc
cli
hlt
mov
rcrb
into
mov
scas
call
mov
fcmovu
push
mov
dec
push
lods
sub
shrb
fdivl
filds
test
icebp
and
xlat
jle
movsl
xchg
cmp
or
cmpsb
cli
out
fldt
xor
jne
aad
pop
xchg
or
inc
jnp
mov
and
jno
int
loop
out
push
and
movsl
or
lods
jl
sub
pushf
and
or
or
into
stos
sar
fcoms
cmp
out
outsb
cwtl
push
dec
test
jno
add
or
rclb
aad
rcll
and
out
or
loope
xor
add
inc
cmc
mov
inc
push
pusha
cmovbe
outsb
pushf
or
sbb
ret
push
mov
leave
ret
in
mov
or
jnp
cmp
call
jecxz
push
xchg
xchg
scas
jle
mov
jnp
mov
stos
mov
xor
inc
xor
jnp
daa
push
mov
cmp
dec
xchg
sub
inc
mov
mov
or
lcall
sbb
iret
test
out
out
adc
mov
cli
mov
arpl
lahf
add
and
or
fdivl
inc
inc
cmp
add
inc
jmp
mov
pop
add
or
cld
add
pop
ljmp
insl
mov
std
inc
insl
mov
sub
cmp
push
stos
jnp
or
push
out
rol
movsl
push
in
push
mov
lods
mov
sub
jmp
xor
nop
fcomip
xchg
xchg
rolb
ret
dec
push
mov
ffree
cmpsl
hlt
or
and
cmp
push
push
xchg
jle
shr
mov
lret
jns
jge
xor
mov
es
jmp
or
cmp
adc
fisubl
dec
jnp
xlat
jecxz
rclb
aad
cmpb
int
in
sub
pop
dec
movsl
xor
icebp
cld
ffreep
sti
es
cmp
lret
imul
xchg
cmp
mov
pop
imul
add
push
pusha
outsl
ljmp
cld
adc
mov
into
adc
mov
and
mov
push
xchg
ja
jo
pop
loop
int3
inc
loope
icebp
xchg
push
test
ss
cli
stos
mov
aas
popa
add
scas
cld
lret
jmp
insl
ret
mov
movsb
fisubrs
jo
xchg
dec
mov
xchg
inc
pop
sbb
dec
into
dec
xchg
inc
cmp
lret
aad
or
mov
add
fcos
outsb
or
je
pop
sarl
add
jnp
lds
rcrl
aam
mov
test
stos
lods
jecxz
pop
jg
stos
bound
cmp
lds
adc
sub
sbb
xchg
out
lret
push
add
cli
xchg
jl
xor
mov
adc
pushf
push
cmc
push
inc
adcb
andb
inc
pop
xorl
fdivrs
movups
jmp
xchg
jmp
adc
inc
cmp
push
test
push
icebp
jp
or
loopne
add
int3
fcomp
sahf
mov
out
dec
in
push
out
xchg
push
xchg
fadds
sbb
mov
mov
js
and
add
and
loope
adc
inc
rol
xor
pop
lahf
xor
adc
jb
jns
scas
imulb
and
pop
push
or
jbe
sbb
sbb
leave
lea
add
add
leave
push
pop
pop
push
sarb
add
loopne
mov
call
in
nop
into
mov
in
out
bound
mov
aam
ss
int3
xchg
insb
mov
adc
pusha
fiaddl
dec
mov
and
popa
out
mov
pop
dec
xchg
sbb
inc
into
inc
sti
fmulp
jle
sbb
add
inc
push
jnp
lret
movsl
xor
xchg
push
movsl
xor
dec
stos
aad
dec
mov
das
sub
push
inc
in
push
loopne
pop
xorl
mov
clc
std
inc
sbb
out
sub
push
xchg
out
jmp
xorb
mov
fnstenv
in
out
cmp
hlt
push
add
cwtl
mov
daa
subl
or
sub
mov
and
inc
cmpsl
mov
dec
or
sub
movl
and
pushf
jg
jg,pt
cmp
jns
jb
inc
imul
fsts
or
repz
push
mov
inc
sbb
dec
add
les
rorb
pop
test
scas
and
stos
push
pop
in
push
lcall
xor
dec
sub
add
add
cmp
rcll
test
lret
je
push
hlt
sbb
dec
jae
outsb
sti
jmp
ficoml
mov
or
xchg
in
loop
ljmp
in
add
adc
cmp
incl
mov
ljmp
lcall
shrl
mov
add
push
popa
dec
jmp
cmp
faddl
xchg
psubb
fistps
jbe
pop
ror
fisubrl
icebp
pop
xchg
dec
mov
repz
cmp
ss
jle
subl
inc
xor
addr16
repnz
stos
test
inc
dec
and
cmp
hlt
movsb
pop
lret
xchg
mov
sti
imul
dec
or
push
outsb
or
lods
test
mov
repnz
jae
mov
pop
test
lcall
xor
aaa
inc
ds
lea
pop
and
jbe
inc
mov
add
repnz
adc
lcall
out
rcrb
push
movsb
add
cmp
inc
xor
sub
pop
mul
mov
jmp
mov
popa
and
in
aam
fmull
sarl
dec
or
test
fdivrl
xor
in
je
dec
xor
fdivrl
mov
pop
dec
test
mov
xchg
mov
fcomip
inc
push
cmpsl
fldt
aas
or
imul
orl
ret
adc
mov
stos
ret
icebp
lahf
adc
out
lods
std
jb
aas
sub
cltd
js
mov
into
adc
stc
daa
xor
sbb
mov
adc
psrld
lcall
cmp
push
sub
mov
loopne
test
maxps
pop
or
sub
mov
pop
aas
incb
es
cli
cs
fwait
jo
mov
pop
lcall
jp
inc
scas
and
mov
sub
nop
jl
xor
push
mov
aaa
int3
into
xrelease
mov
jb
mov
pop
insl
inc
shrb
and
pop
int3
in
jno
mov
sbb
fisttps
and
mov
fistps
mov
outsb
pop
sub
mov
lret
inc
push
inc
dec
rcrb
push
imul
lahf
push
adcb
pop
and
out
lahf
xor
push
clc
inc
std
and
cld
call
pop
pushf
clc
mov
jecxz
std
and
cwtl
inc
ja
and
pop
inc
sbb
das
xchg
push
fs
mov
addr16
subl
lret
sahf
pop
and
inc
push
xor
mov
push
and
clc
push
repnz
dec
mov
test
and
and
out
or
pop
cs
jmp
scas
adc
pop
stos
shlb
popa
mov
cmp
dec
mov
test
lret
push
sub
std
ret
lea
add
fiaddl
out
and
test
and
fcmovnb
clc
dec
mov
clc
flds
jns
cmpsl
mov
push
sbb
mov
xor
mov
lock
xchg
es
aad
fists
sub
mov
cmp
fidivrs
pop
pop
and
mov
ja
dec
mov
push
cmp
mov
mov
enter
roll
and
lahf
sub
push
addb
jp
loope
daa
lcall
push
adcb
addr16
loop
pop
mov
test
add
sub
jp
shll
jg
jae
gs
sub
rolb
jecxz
jmp
xchg
std
jg
lahf
aad
ds
out
out
out
lret
gs
lods
fsts
adc
scas
jl
mov
mov
sbb
hlt
jg
push
dec
scas
loop
flds
or
fistpll
leave
sbb
nop
push
lea
xchg
pop
mov
cmp
pop
sbb
or
mov
ljmp
lods
nop
clc
cmp
test
fcoms
dec
sbb
and
pop
push
por
lds
mov
sub
mov
mov
dec
aam
test
dec
pop
cmp
pushf
jge
pop
loopne
fildl
cli
inc
loop
add
pushf
push
mov
push
repnz
inc
pusha
lods
in
test
ficompl
lds
push
test
xor
ja
mov
in
lea
xchg
sub
rcr
sub
cmpsl
adc
outsb
lock
inc
fdivrl
and
fs
enter
or
out
add
std
les
rep
adc
xor
jmp
mov
icebp
popf
movl
stos
pop
xor
dec
iret
mov
add
jp
ja
jecxz
out
lcall
mov
leave
out
xchg
or
cmp
pop
push
sub
xchg
jns
xchg
cmpsb
jne
jecxz
and
and
mov
xor
jnp
lods
mov
dec
sbb
dec
mov
fisttps
fnstsw
in
lea
dec
test
xchg
outsl
and
mov
cmpsl
dec
mov
rclb
jl
xchg
fistps
scas
jno
aaa
arpl
mov
add
and
adc
pop
outsb
popf
sbb
dec
movsb
push
adc
repz
pushf
mov
xchg
push
sbbb
insb
loopne
cmp
xchg
sbb
stc
popf
sbb
div
jns
and
cmpl
adc
andl
inc
mov
repz
fnstcw
jns
push
repz
stos
imul
inc
in
and
cmp
out
sbb
ljmp
clc
push
push
test
push
fbstp
mov
and
loopne
testl
popf
jge
sbb
cli
test
lods
mov
cmp
sbb
inc
xor
adc
sub
push
jno
lret
fimull
out
fistpl
mov
imul
loope
inc
in
jbe
divl
sarl
das
sbb
ret
xor
pop
or
inc
cwtl
test
clc
repz
mov
or
sbb
cmp
insl
sahf
sub
add
sbb
dec
push
hlt
fiaddl
es
and
sbb
mov
into
std
adc
fisubrl
cmp
stos
adc
cwtl
jmp
xchg
sar
enter
divl
push
test
or
pop
cmp
jbe
je
fimuls
pusha
jmp
dec
pusha
outsb
lret
cwtl
clc
lods
push
add
in
scas
mov
pop
imul
in
jae
sub
insl
xchg
rcl
pop
sub
stc
ljmp
xchg
push
mov
or
inc
jns
or
test
lcall
sti
mov
test
adc
sbb
ja
xchg
test
mov
int3
cmp
push
mov
outsl
leave
sbb
inc
jp
dec
stos
dec
cmp
rcll
xor
push
xchg
int3
sbb
movsl
cmp
jge
or
nop
data16
jg
loop
dec
xchg
dec
in
pop
cmp
in
pop
fisubrs
sub
ja
jae
adc
dec
adc
inc
int3
sbb
hlt
in
sub
mov
in
das
bound
dec
iret
add
lcall
je
movsb
jb
jl
pop
jge
or
in
pop
imul
jge
jae
and
je
mov
jmp
insl
or
test
cmp
mov
jo
pop
mov
ret
out
inc
movsb
aad
jp
pop
stos
push
cwtl
mov
cltd
sub
daa
sbb
mov
fidivl
cld
pop
mov
fsubrs
pop
jns
inc
sbb
inc
fs
push
mov
cmp
and
push
pop
ss
cmpsl
mov
push
enter
jns
inc
lcall
add
subl
fldt
push
imulw
adcl
mov
adc
sbb
imul
mov
adc
insb
cmp
xchg
add
adc
jns
aas
xlat
dec
js
clc
sub
mov
inc
out
aam
mov
in
jne
push
mov
push
push
and
insl
adc
inc
mov
pop
movsb
fldl
cmp
shlb
sarb
lds
push
xor
xor
icebp
jge
test
test
jb
push
adc
mov
and
add
and
shll
pop
ret
adc
lock
loopne
out
out
cld
mov
sbb
jne
mov
xor
mov
rclb
fwait
jb
mov
data16
xor
inc
mov
icebp
fcoml
jne
sbb
lods
cld
add
cmp
dec
scas
cmpsb
dec
addb
into
test
mov
xor
mov
adc
loop
mov
ljmp
dec
icebp
fcompl
std
repnz
or
rcl
mov
sbb
data16
adc
mov
dec
mov
jg
cmpsl
rcrl
iret
mov
js
xchg
sub
sbb
pop
imul
dec
xchg
xor
lcall
fs
sbb
arpl
data16
cld
test
jg
pop
sub
imul
push
sbbl
cmp
push
int
sbbb
pop
lods
inc
stc
add
movl
mov
aas
gs
es
inc
dec
sahf
mov
lea
and
aaa
roll
add
mov
jecxz
les
dec
xchg
lds
fadds
aam
adc
adc
jp
and
push
mov
sbb
jnp
push
movsl
mov
fisttpl
fs
addr16
dec
cli
scas
add
into
jp
pop
inc
icebp
fstp
out
mov
mov
mov
pop
cs
loope
push
push
cmp
inc
mov
mov
xor
leave
cmc
andl
xor
iret
movsl
adc
xor
repz
mov
je
xchg
fldt
hlt
cmc
push
jns
arpl
push
and
and
shll
inc
xchg
outsl
not
cmp
ret
add
cwtl
xchg
inc
sahf
jle
mov
jae
movsb
push
cmp
out
pop
fadds
push
jbe
stos
loop
popa
inc
pop
cmc
test
icebp
lea
mov
xchg
add
xlat
sub
movsl
adc
push
je
loop
aas
adc
adc
addr16
clc
fucomip
fbstp
add
ja
pop
dec
xor
or
inc
xchg
jg
add
int
and
shlb
push
jle
hlt
and
in
sub
fistpl
mov
sbb
movsb
inc
pop
inc
pop
sbb
jbe
cwtl
repz
mov
xor
cmc
lock
and
dec
jbe
push
and
sbb
jl
loopne
pop
imul
sub
xchg
mov
fldenv
sbb
out
mov
sub
paddsb
fsubp
push
cmpsl
scas
adc
adc
push
icebp
mov
cld
push
lock
and
test
subl
cwtl
sbb
fdivl
push
sti
mov
pop
or
push
iret
les
jo
mov
xor
icebp
js
clc
out
mov
ret
jno
dec
jecxz
jmp
mov
sub
mov
cmp
mov
std
mov
inc
enter
fstl
pop
int3
adc
sub
ljmp
movsl
scas
out
lea
out
out
sub
mov
test
push
cltd
fcom
or
shlb
lods
pop
popf
or
lcall
cmp
stos
enter
fs
nop
or
or
out
dec
ljmp
andb
add
iret
daa
sbb
mov
sub
mov
lock
inc
mov
adc
adcb
int3
mov
mov
and
movsb
add
sbb
mov
data16
dec
in
in
cmp
das
flds
dec
jp
stc
mov
in
mov
jmp
cltd
adc
loopne
insl
mov
sbb
in
pop
inc
adc
lods
or
in
lahf
jb
jle
sbb
xchg
push
and
es
mov
pop
popf
cmp
ret
aad
push
jbe
xor
xor
push
jmp
pop
xor
fsub
cltd
ret
jae
stc
sbb
pop
xor
inc
pushf
sbb
push
xor
add
sub
test
sub
pop
add
sbb
jge
jo
ja
adc
add
idivb
inc
insb
mov
mov
and
shrl
fistl
outsb
sahf
push
mov
or
push
int3
movsb
loop
sub
add
arpl
call
das
lock
pop
aas
mov
and
addb
ds
push
cld
popa
adc
push
pop
ret
xchg
hlt
jmp
dec
pop
xchg
jns
stos
imul
pop
pop
xor
repnz
iret
push
add
out
dec
inc
cmp
imul
das
xchg
out
push
inc
repnz
dec
popa
fcomi
faddp
andnps
mov
xor
int
adc
inc
mov
sub
arpl
shlb
mov
js
add
cld
fldenv
test
dec
decl
cmpsl
loope
jns
addr16
cmp
add
hlt
inc
mov
jl
movsl
jge
jno
clc
fnstenv
mov
leave
jl
or
mov
lock
test
mov
mov
sbb
dec
lock
scas
iret
mov
pushf
adc
int
or
lds
mov
loope
dec
int3
ret
stc
popa
push
mov
cs
fidivrs
dec
pop
dec
adc
xor
jle
and
sbb
adc
xchg
inc
rclb
fstps
rclb
and
add
lock
adc
in
enter
mov
jb
movsl
add
xchg
out
xchg
mov
iret
pusha
add
lock
in
rclb
and
or
pop
pop
pop
push
ret
cmp
jno
fwait
adcb
inc
js
mov
mov
mov
pop
dec
add
cmp
adc
pushf
sbb
test
dec
addr16
xchg
sbb
mov
inc
mov
test
sbbl
or
data16
stos
or
cmp
push
mov
or
mov
jno
add
cmp
testl
xchg
sbb
mov
sbb
inc
sub
aad
loopne
pusha
cmpsb
inc
pop
xchg
pop
repz
and
and
xor
fistl
pop
fisubrs
mov
sahf
sub
hlt
aam
mov
dec
cs
imul
cltd
out
mulb
push
in
ret
aam
sub
xor
shrb
jp
js
stc
cmpsb
sub
cmc
iret
dec
inc
push
cmpsl
xchg
xor
cli
mov
jb
popf
add
adc
pop
cltd
inc
push
fcmovnb
pop
inc
clc
jbe
mov
xchg
lods
popf
hlt
mov
pop
sub
mov
pop
repnz
fwait
adc
cmp
lods
cmp
mov
adc
and
cmpsb
sbb
fidivl
cwtl
repnz
mov
and
cmpsb
in
inc
dec
pusha
sti
cmp
push
add
sbb
bound
pop
adc
cmp
sub
adc
imul
push
xor
stos
test
movsb
dec
pop
data16
int3
test
sbb
lock
imull
mov
jae
cmp
cmp
lcall
out
cli
lea
and
sub
dec
lcall
sbb
xchg
repz
loop
sub
loopne,pt
xchg
fsubs
pop
pop
int
mov
sub
out
and
pop
cmp
in
jne
test
push
add
rclb
push
xchg
push
jne
cmp
int3
orb
ffreep
cmp
cmpb
stos
push
dec
push
cld
cld
xor
mov
add
mov
gs
lcall
xor
sbb
movsl
sbb
xchg
mov
mov
push
pop
ljmp
jno
ss
movsb
mov
popf
mov
in
and
insb
jecxz
fdivrs
jmp
addr16
jge
pop
xchg
sti
xchg
add
iret
in
xor
and
test
add
in
movsb
pop
int3
loopne
lret
push
cmpsl
push
mov
jns
adc
aad
ret
fnsave
shrl
sbb
mov
sbb
out
repnz
adcb
in
cmp
push
push
mov
mov
inc
sub
mov
fildl
out
add
idivl
add
cs
inc
and
sbbl
sti
sub
xchg
jbe
mov
call
fucomp
pop
lods
pop
sub
inc
cmp
jmp
jns
sarb
outsb
push
test
push
and
xor
or
xchg
adc
dec
loop
dec
pop
stos
cwtl
cli
mov
outsl
fistpl
bound
pop
in
jl
dec
mov
sbb
cmp
inc
or
enter
call
xor
cmpsl
push
or
xlat
mov
sub
push
push
xchg
push
mov
mov
leave
xor
mov
add
cmpsb
testl
mov
mov
je
push
mov
pop
icebp
xor
push
ffreep
shll
in
in
test
mov
fxch
sub
pop
jbe
ss
jge
mov
call
sarl
ds
fwait
cmpsb
mov
subl
jle
lock
mov
aam
dec
xchg
arpl
inc
pop
insb
roll
mov
frstor
dec
pop
sbb
imul
mov
cmp
dec
mov
leave
sub
popf
jge
and
mov
into
push
stc
leave
inc
push
ds
stos
push
ss
daa
std
cltd
sbb
jecxz
push
lahf
adc
test
cli
stos
pop
ljmp
jno
cmc
jg
dec
lea
jnp
lret
xor
outsl
repz
nop
leave
scas
pop
mov
adcl
dec
mov
dec
aas
mov
adc
mov
inc
jl
mov
out
and
adc
mov
les
mov
inc
pop
push
push
sbb
sub
dec
jp
rcrl
dec
mov
inc
dec
pushf
pop
mov
dec
and
push
and
push
inc
xchg
jg
mov
pop
inc
xor
shlb
rcrb
ror
stc
pop
shlb
rol
pushf
pop
mov
pushf
shll
mov
ljmp
fimull
orb
movsb
hlt
loopne
dec
fldcw
orb
cmpsb
xor
es
mov
scas
ret
subb
rcr
mov
push
sti
insl
pop
add
push
inc
adc
push
mov
lds
mov
sbb
fadds
pop
push
repz
les
lret
dec
sbb
out
mov
dec
mov
dec
adc
lods
adc
scas
xor
in
and
loope
add
mov
cs
and
fldenv
mov
jne
loope
aas
and
int3
jge
mov
mov
cmp
inc
sub
std
push
jo
rorb
mov
sub
test
scas
push
xchg
or
fwait
out
xchg
dec
push
adc
push
testb
mov
int3
cs
cmp
xchg
cmp
dec
outsb
jo
fldt
dec
dec
aas
bound
jle
pop
pop
loope
leave
out
mov
ss
jbe
enter
mov
add
push
mov
daa
jg
mov
stos
lret
dec
mov
xor
lcall
subl
jo
bound
loope
inc
dec
or
dec
cmc
push
and
outsb
cmc
xchg
jae
sahf
xor
addl
jo
test
imul
fcomi
mov
inc
cld
lret
xchg
sub
repz
cltd
and
es
xlat
or
add
cltd
dec
sbb
mov
pop
movsl
dec
leave
xchg
cmc
ret
xchg
fiadds
in
push
adc
daa
lods
ljmp
pop
mov
pop
ljmp
inc
sub
pop
jae
andl
xchg
in
pop
repz
loop
lods
fcompl
in
sti
test
add
je
dec
sbb
dec
imul
loop
and
push
data16
pusha
push
lahf
push
dec
xchg
mov
stos
sti
push
add
lahf
shr
or
rcrb
mov
mov
add
fadd
ret
jge
incb
loopne
out
icebp
nop
cmp
negl
lret
cmpsl
mov
pushf
test
mov
mov
dec
xlat
mov
in
jo
ss
das
and
in
inc
dec
mov
rorl
mov
mul
mov
cwtl
push
mov
dec
jbe
sbb
arpl
jg
sub
cmp
repz
les
jb
ljmp
daa
lds
sahf
ljmp
cld
xchg
mov
or
xchg
out
insb
cs
push
cmp
jns
fcmovne
adc
push
outsl
add
cs
bound
sub
pop
or
sbb
push
loop
dec
into
hlt
ljmp
mov
fsubrl
fs
sahf
popl
push
imull
insl
mov
mov
dec
ret
sbb
and
rcr
ficoml
ss
es
aam
sbb
cwtl
data16
mov
cmp
jl
push
subb
push
sub
dec
xchg
xor
push
ja
leave
ds
test
imul
test
and
das
bound
sub
rcll
lret
into
aad
fwait
pushl
test
fs
dec
mov
sti
pushf
sub
daa
sti
inc
or
mov
jle
stc
mulb
std
daa
or
dec
xor
sbb
pop
lods
mov
repz
and
mov
dec
xchg
inc
cld
add
mov
loop
sub
jmp
cmpb
and
add
and
mov
fdivr
dec
data16
dec
mov
aam
jo
xchg
cmp
mov
mov
or
and
iret
cmpsl
mov
call
ljmp
add
shll
xor
movsl
lahf
ljmp
xor
in
pop
sbb
jecxz
in
pop
sbb
and
inc
int
hlt
roll
push
fsubrs
call
adc
jl
mov
adc
mov
loopne
popl
adc
iret
ret
mov
inc
mov
sbb
xchg
xchg
shll
ficomps
rorl
mov
in
sub
std
bound
fs
xchg
ja
popa
mov
xchg
into
out
stos
insb
dec
cltd
push
arpl
ljmp
cmp
sarl
arpl
mov
xorl
push
pop
popf
fistl
aam
fldenv
xor
xchg
loopne
and
inc
loope
fcomps
out
es
push
and
and
and
dec
std
mov
and
int
xor
cmpsb
xchg
push
mov
loop
mov
push
ljmp
sub
jnp
fstpt
and
bound
fimuls
and
mov
dec
mov
lcall
inc
ret
adc
in
xchg
jnp
lea
test
fnstsw
add
insl
std
mov
stos
fisubrs
pusha
movl
xor
mov
sbb
dec
testl
adc
aas
mov
mov
xchg
mov
mov
call
xor
pop
jo
or
cmpsl
dec
std
test
jg
subb
xchg
inc
into
dec
jb
push
test
dec
push
sbb
insl
lods
xor
pop
fildll
push
add
out
pop
push
cmp
ljmp
or
bound
into
lods
dec
push
sub
aam
cmp
cmpsb
clc
ljmp
pop
sub
mov
ret
cmp
sub
push
scas
repnz
rcrb
fdivp
loopne
push
mov
sub
sarb
and
fidivl
sbb
xor
push
mov
out
clc
je
sub
mov
cmc
insb
cwtl
lcall
xchg
lods
cltd
pop
and
lock
mov
fstps
add
bound
add
stos
mov
add
mov
pop
imul
inc
sahf
jae
add
mov
ficoms
int
inc
orb
loopne
and
mov
sub
mov
sub
lret
mov
pop
jmp
dec
adc
mov
jl
adc
add
test
xchg
mov
adc
cld
push
mov
rcrb
xchg
jmp
sbb
sbb
xchg
sarl
data16
sbb
ja
cltd
ja
xchg
sub
jle
js
push
movsl
or
ljmp
sbb
aad
dec
push
loope
push
fwait
dec
je
pop
nop
roll
pop
dec
test
mov
xor
push
jmp
sbb
xor
xchg
cmp
idivl
pop
das
sbbb
mov
cmp
cmp
or
ficomps
push
es
push
mov
add
lods
mov
xchg
xchg
popa
inc
stc
insl
jp
icebp
out
mov
cmp
notl
jne
xchg
adc
or
outsb
jo
push
ret
mov
out
cli
dec
jecxz
jg
icebp
sub
fists
jmp
mov
sub
test
or
sub
pop
addr16
mov
negb
imul
xor
ja
shr
inc
into
negb
xchg
loopne
fldl
jle
loope
int3
sub
jb
repz
shll
sbb
lret
push
jnp
cmc
cltd
inc
inc
adc
in
push
add
fs
insl
cmc
aam
pop
jne
jo
mov
les
lahf
les
shrl
and
add
or
std
add
jno
cwtl
addr16
lods
clc
mov
dec
lds
test
mov
inc
sbbb
hlt
int3
xchg
clc
mov
sbb
mov
pushf
sbb
xchg
stos
mov
push
imul
rorb
push
jge
cmp
jnp
jnp
inc
mov
repz
jge
xchg
xchg
cld
add
pop
rcr
lahf
or
pop
fildl
push
rorb
ret
int
ret
test
mov
dec
pop
mov
rorb
xchg
cld
pop
or
aam
pushl
test
lcall
insb
sahf
lahf
pop
dec
in
sbb
push
js
mov
push
rcl
cmp
imul
data16
rorb
push
loop
test
jge
mov
sub
loope
xlat
dec
shll
dec
lock
xor
pusha
or
sub
cli
push
dec
mov
loopne
and
js
xor
fcomp
cmp
mov
ror
mov
xchg
icebp
sub
pop
adc
lds
xchg
leave
lret
inc
add
scas
mov
adc
xlat
sub
call
jge
sahf
pop
mov
adc
lcall
ds
mov
les
loop
adc
and
test
cmp
add
jb
dec
lods
dec
in
dec
adc
mov
aam
xor
xor
xchg
bound
fucomip
jnp
xorl
xchg
adc
mov
sbb
fs
hlt
in
daa
int
sub
and
out
add
sub
mov
insl
cmc
push
fstp
cwtl
pusha
xchg
sahf
jb
enter
mov
and
jle
cs
xor
test
aas
adc
insb
jge
out
mov
cmc
ficoml
mov
icebp
mov
rcll
stc
cmp
mov
insb
ret
pop
stc
pop
jg
jns
fcmovb
jg
mov
mov
out
fdivrl
call
les
addr16
je
repnz
xchg
mov
pushf
ds
inc
test
fmull
andb
add
pop
outsl
mov
das
lds
mov
pop
jae
mov
sbb
cs
pop
in
out
xor
mov
ja
daa
bound
xchg
add
addr16
cmp
dec
rorb
and
leave
sbb
test
xchg
or
mov
push
pop
das
adc
jecxz
outsb
insb
lret
cmp
sbb
inc
sub
push
cvtpi2ps
add
test
push
rcll
mov
insl
into
test
xor
push
lret
out
pop
push
lods
in
addl
aam
cli
dec
imul
pop
jecxz
and
adc
or
inc
dec
rorl
fdivs
jmp
inc
xchg
and
rol
sahf
pop
adc
in
inc
rcll
push
ds
jbe
push
mov
mov
mov
test
sahf
cmpsl
pop
rolb
insl
mov
scas
mov
or
dec
sbb
ret
cmp
gs
lret
out
in
lcall
divl
movl
out
je
rcr
push
and
xor
aaa
insl
loope
imul
or
xchg
dec
mov
cmp
lods
mov
push
mov
mov
shll
adc
pusha
or
mov
cmpsb
loope
lock
push
outsb
mov
push
imull
pushf
loop
pop
pusha
or
push
orb
addb
fsts
dec
std
dec
or
xorl
xchg
arpl
fnstcw
cld
sbb
mov
jmp
addr16
fs
add
dec
lret
jl
lock
sahf
scas
jp
and
pop
std
lahf
insb
cmpsb
aam
insl
dec
adc
push
dec
add
data16
inc
pop
fisubrl
stc
imul
enter
test
xor
mov
jo
ljmp
dec
adc
fisubrl
cs
daa
mov
pop
lret
and
ffreep
cmp
out
mov
rcrb
loope
xor
mov
fidivrl
pop
lret
cmpsb
pop
lret
sub
mov
js
cmp
jp
in
pushf
cmp
push
dec
bound
nop
dec
stc
outsl
cmc
or
scas
insb
std
jl
dec
pop
and
mov
in
push
les
push
push
xor
rorb
mov
or
mov
cmp
push
xlat
lea
ja
push
aaa
pop
dec
outsb
mov
mov
push
shlb
mov
loope
sub
insb
into
movsl
xor
loopne
mov
gs
sar
stos
icebp
jle
push
cmpsl
jmp
mov
cmp
adc
cmp
jo
outsb
adc
and
inc
dec
add
adc
and
add
fsub
adc
ret
cmp
sti
pop
rcl
cmp
ss
jle
mov
subb
fisttps
cmc
xchg
inc
jp
jge,pn
insl
repz
test
fdivrl
sbb
sbb
ret
mov
insl
rorl
jne
ljmp
add
xor
aaa
outsb
xchg
cmp
andl
cmpsl
fidivs
xchg
push
jle
pushf
divl
icebp
mov
mov
cmp
in
popf
pop
dec
pusha
xchg
mov
dec
test
cmp
leave
dec
mov
mov
mov
xchg
and
outsl
jo
icebp
sub
pop
jne
movsl
ss
rcrb
xor
inc
pop
ljmp
out
adcb
out
push
xor
mov
stc
sbb
pop
je
stos
mov
cmp
mov
imul
mov
aaa
nop
aad
out
and
aas
pop
push
bound
pop
mov
xchg
repnz
xchg
lea
lods
cmpsb
std
mov
clc
lods
mov
adc
bound
mov
mov
rolb
push
adc
mov
xor
popf
sub
adc
or
mov
fucomi
lret
iret
fimull
cmp
clc
dec
dec
xor
xor
cmpsl
jne
stos
and
shll
lods
roll
mov
pop
jo
call
hlt
push
or
jns
rcrl
in
fwait
das
cltd
inc
xchg
fwait
push
repnz
jl
push
out
out
jp
push
sarb
icebp
pop
es
add
adc
xlat
pop
imul
jl
out
ljmp
dec
adc
cs
stos
fs
leave
insl
dec
jp
jp
adc
outsl
push
and
popa
sub
lds
in
movsb
bound
outsb
daa
cmp
les
ja
jbe
cwtl
xlat
stos
push
iret
ret
into
or
nop
rcl
out
add
add
mov
shll
rolb
stc
adc
cmp
popf
cs
xlat
xor
and
pushf
and
cmp
cmpsb
test
fcoml
incl
mov
or
fucom
mov
sub
fmul
sbb
jl
cld
cmc
pop
and
or
je
sbb
jg
adc
adc
test
sub
fs
test
mov
inc
xchg
xchg
mov
dec
add
add
pop
cmp
mov
shl
adc
test
xor
call
ss
and
js
add
inc
or
xor
cli
ja
das
and
out
hlt
data16
jmp
mov
fadd
or
aam
jno
into
fldl
xchg
add
mov
xor
pop
ja
dec
hlt
iret
xor
xorl
dec
dec
insb
jmp
mov
xchg
jle
movsb
jns
popf
mov
jecxz
push
lock
mov
lods
out
je
dec
test
fnsave
pop
push
fadds
mov
in
gs
cmp
sub
add
iret
andl
mov
test
inc
imul
arpl
loop
mov
bound
test
mov
mov
push
mov
rorl
call
cmp
mov
fnstenv
cwtl
scas
fisttpll
inc
push
arpl
enter
es
sbb
sbb
pushf
movl
push
mov
inc
cld
adc
into
mov
aaa
js
xor
rcll
fdivp
push
push
xchg
pop
mov
aaa
lret
stos
jg
aaa
dec
push
inc
jae
mov
xor
out
mov
mov
das
mov
cmp
jb
ret
in
lcall
inc
push
mov
pop
mov
loope
xchg
mov
cltd
push
mov
outsb
iret
mov
cld
mov
notl
in
adc
cs
enter
sub
and
mov
scas
and
xlat
outsl
xor
jle
bnd
lea
dec
mov
fs
dec
popa
into
adc
daa
in
test
pusha
popa
jns
rcrb
push
pop
or
rorb
xor
and
mov
dec
pop
and
je
shlb
lods
ret
test
sub
mov
mov
jbe
and
cmp
sbb
lea
fsubrs
or
aam
sahf
sub
jo
cs
jge
sti
repz
xchg
pop
aas
int
add
jnp
movsb
fistpl
out
jno
inc
adc
add
pop
movsl
fcomp
sub
mov
sub
out
push
inc
xchg
aaa
xchg
cmp
idivb
adc
xchg
and
pusha
in
mov
das
icebp
jne
imul
mov
jno
sbb
sbb
ficompl
jno
leave
and
dec
and
xchg
sub
push
mov
gs
adc
mov
fildl
add
mov
mov
mov
popa
arpl
movl
sahf
into
or
cmpsl
les
stos
mov
stos
and
inc
push
inc
xchg
and
xor
jno
pop
insl
mov
dec
fdiv
arpl
rcll
sbb
sbb
subl
stos
adc
test
pop
jmp
dec
js
daa
dec
pop
fstpt
lcall
xor
out
cmp
and
sbbl
leave
mov
jg
roll
push
loope
mov
ds
xchg
adc
cmp
mov
or
arpl
and
int3
and
mov
int3
mov
push
hlt
sub
mov
fwait
xor
sub
add
or
call
xlat
sub
xlat
fmul
mov
xor
or
notb
xor
fbstp
aam
cmpsl
mov
fistpl
ret
inc
repnz
pop
dec
mov
aaa
xchg
aaa
aam
mov
push
push
add
les
pop
imul
cmc
xchg
jne
sti
jnp
inc
jp
lea
ret
push
ret
push
mov
mov
xchg
cmp
hlt
setge
xchg
dec
inc
sbb
ja
or
repz
inc
xor
inc
xchg
or
dec
adc
mov
jle
mov
sub
sbb
or
jge
push
dec
loope
pusha
add
fstpl
dec
mov
add
test
loopne
scas
repz
sbbl
jae
sbb
test
rclb
sar
push
sahf
fwait
mov
and
cltd
mov
cmpb
cmp
sbbb
and
popa
popf
fs
xor
jae
in
xchg
or
push
mov
xor
ss
mov
mov
into
jno
fdiv
jae
das
decl
aaa
sub
sbb
inc
jp
in
inc
pop
pop
notl
mov
jo
mov
xor
or
mov
lcall
push
out
xchg
das
neg
test
add
popf
cmp
std
or
xchg
jecxz
and
inc
adc
lret
cmp
leave
shl
fsubrs
pushf
jb
sub
int3
loop
frstor
test
addr16
pop
mov
inc
pop
xor
ret
sub
jnp
cmp
jg
je
fidivl
sub
dec
mov
lock
std
les
ret
in
movzwl
dec
stc
cli
lret
fdiv
or
xor
frstor
jb
xor
xor
jbe
fbld
cli
push
push
icebp
dec
mov
dec
push
int
xchg
mov
mov
inc
pop
jne
add
mov
cwtl
push
push
mov
sti
xor
gs
jae
js
aas
push
mov
inc
movsl
or
dec
arpl
add
enter
and
fwait
iret
jno
insl
addb
adc
cs
nop
pop
dec
or
scas
pop
shll
jns
lret
frstor
testb
les
repz
gs
shl
je
push
sbb
cmp
add
sbb
jge
jle
push
aad
sbb
lret
jge
mov
cld
jecxz
cmp
jnp
mov
jae
cmp
inc
fwait
nopl
xchg
jne
stos
push
sub
loope
or
xchg
push
jl
and
imul
mov
out
xor
jnp
pop
sub
or
into
or
jmp
or
and
rorl
sahf
sub
add
jne
cmpb
adc
pop
int
add
adc
xchg
xchg
imul
dec
mov
inc
jae
stos
push
push
pop
xor
test
lds
xchg
push
sub
mov
or
mov
mov
movups
testl
aaa
arpl
push
aad
leave
lods
imul
push
jb
xchg
fdivs
jne
std
dec
repz
mov
bound
adc
rclb
and
inc
add
fcoms
out
lds
dec
orl
mov
mov
xchg
into
stos
js
in
mov
arpl
cmpsb
xor
shll
cli
xchg
jge
dec
outsl
pop
fidivrl
insl
mull
inc
imul
dec
fsts
bound
nop
add
mov
sub
insl
daa
lret
rolb
je
int3
add
pop
jle
inc
inc
push
test
inc
cmc
jle
cmpsl
cs
pop
push
out
push
in
xchg
dec
test
call
popf
ss
insl
lods
xchg
sub
xlat
jmp
hlt
call
and
mov
rolb
mov
jno
stos
xchg
sahf
inc
dec
and
push
cmp
mov
popa
into
ljmp
mov
outsb
in
and
push
mov
jbe
in
pop
jmp
loopne
pushf
mov
test
sub
mov
nop
cmc
inc
push
dec
cmp
aaa
push
outsl
mov
inc
lds
vpsubd
pusha
dec
test
sti
xor
pop
sub
jne
bnd
cmp
fwait
xor
rcll
mov
mov
xor
ja
into
adc
hlt
loop
jl
push
bswap
gs
and
mov
jg
push
push
mov
sub
fnstenv
xchg
jae
inc
mov
ss
mov
jo
es
idivb
adc
xchg
xor
cmp
xor
pop
xchg
dec
xchg
cmpsb
mov
push
ror
popf
fcoml
inc
sarb
sub
fs
push
push
out
jg
lea
push
lods
dec
test
pop
sub
test
lret
jnp
dec
out
test
adc
mov
push
data16
dec
lock
or
mov
outsl
adc
imul
pop
dec
shrb
add
push
xchg
lret
data16
xchg
xchg
pushf
mov
daa
xchg
ret
jge
add
jl
add
nop
sbb
gs
push
jg
pop
inc
xorb
adc
int3
ret
pop
fdivp
mov
movsl
jno
adc
push
jnp
idivb
sti
pusha
mov
dec
xchg
scas
push
sbb
jecxz
jp
pop
adc
es
and
fsts
and
out
xchg
out
mov
into
cmp
rol
jl
ret
inc
mov
mov
jb
sahf
push
std
jp
test
adc
gs
mov
xor
insl
out
fwait
stos
dec
cwtl
pop
sub
insl
push
in
mov
jne
dec
in
bound
cmpsb
xchg
push
xchg
pop
loopne
fcmovnb
loope
imul
mov
mov
adc
fs
aam
xchg
fnstenv
nop
push
mov
push
jne
iret
rcrl
cmp
leave
ljmp
sub
jnp
mov
jecxz
push
pop
inc
and
call
sub
mov
push
in
sub
pushl
xor
gs
mov
stos
cmp
je
adc
cs
mov
xchg
jmp
aas
mov
lock
fnsave
in
xlat
fwait
push
sub
outsl
adc
pusha
push
xchg
mov
dec
xchg
outsb
jo
push
and
jecxz
aaa
out
lds
jbe
mov
nop
sbb
movsb
sub
lods
inc
mov
or
call
imul
fimull
scas
push
inc
adc
push
sub
scas
jge
out
add
mov
jbe
jp
sbb
loope
fsubrl
push
int3
cmpsl
xchg
pop
or
lods
pop
sub
or
mov
mov
cmp
xchg
movsl
sarl
je
push
mov
dec
push
icebp
out
cmpl
ret
adc
pop
or
push
xchg
aam
xchg
sbb
add
lret
push
or
and
mov
dec
push
sbb
jp,pn
mov
lret
mov
sbb
mov
insb
ror
sbb
outsb
adc
push
dec
repnz
imul
cmp
mov
adc
test
lret
popf
sti
lds
inc
inc
mov
sti
shl
mov
test
push
cwtl
mov
std
adc
hlt
ret
mov
xchg
jmp
add
add
lds
pop
andl
push
aad
ret
jnp
in
mov
mov
jle
cltd
sub
fcoms
popf
and
sbb
mov
leave
leave
data16
inc
lods
inc
pop
mov
fcomps
xor
sbb
jnp
mov
xchg
mov
pushl
inc
out
and
sti
popa
scas
and
xor
popl
mov
inc
das
cli
leave
insb
jb
push
add
cs
nop
adc
dec
inc
pop
ljmp
nop
jle
mov
add
xlat
sarb
clc
loopne
adc
push
push
sbb
mov
cmp
nop
add
cmpsb
jp
pop
and
xor
rcl
jmp
mov
jae
xchg
cmp
push
dec
rolb
push
add
adc
ss
outsl
cwtl
idivl
insb
sbb
mov
pop
aaa
cltd
inc
mov
psubsb
pusha
xor
mov
shr
xchg
inc
test
iret
mov
std
mov
in
in
jo
lret
in
mov
adc
sub
push
mov
aaa
in
enter
cmpl
mov
fmuls
scas
cltd
cmp
inc
dec
loopne
sti
ss
lret
into
bound
sbb
out
jge
stc
popf
jecxz
xor
andl
aas
cmpsl
mov
inc
into
stc
pop
outsl
ficompl
push
cmpsb
ret
or
clc
rorl
dec
mov
rclb
jae
jmp
fldt
mov
ja
aam
lahf
je
cs
push
stos
aas
dec
inc
std
fdivrl
push
and
inc
dec
hlt
js
inc
stos
xor
sub
and
mov
push
ret
push
sub
xor
das
jb
cltd
sbb
int
out
adc
repnz
sarb
data16
out
loope
add
aam
dec
jmp
xor
pop
sbbl
xor
pushf
data16
into
aas
xchg
nop
mov
sbb
arpl
fistpl
jmp
pop
cmp
movsb
sub
pop
sbb
jl
sbb
filds
mov
mov
out
dec
xchg
ss
fsubs
dec
adc
jecxz
insl
popa
mov
test
mov
xor
cs
cmc
jae
pop
lock
test
pop
test
add
idivb
push
dec
sbb
sub
push
in
or
mov
inc
divb
cmp
cmpb
loope
hlt
push
mov
pop
mov
aad
daa
jecxz
pop
in
insl
fs
imul
shl
test
int3
mov
ss
ja
mov
stos
enter
jnp
lret
or
fucomip
ss
inc
xor
stc
lock
mov
sub
mov
leave
sbb
sub
adc
dec
mov
les
sbb
xor
hlt
hlt
in
pop
and
cld
mov
pop
movsl
repz
mov
push
sub
jg
movsl
push
cmp
pushf
aam
mov
pop
adc
xchg
outsb
cmp
push
repz
es
mov
call
xor
mov
lea
in
fisttpl
mov
jbe
in
and
call
or
dec
cmpsb
and
sahf
mov
or
push
test
dec
sti
int3
xchg
bound
push
imul
mov
mov
push
sub
mov
and
std
aad
aaa
lcall
scas
lret
pop
xor
lea
cld
fstl
or
inc
stos
ljmp
mov
loop
popf
mov
lret
sbb
int3
loopne
dec
cmp
pop
push
push
jbe
jmp
imul
sbb
stos
pop
mov
call
ljmp
sub
pop
sub
xchg
lahf
inc
push
fists
mov
add
arpl
setno
addl
xor
mov
outsl
std
dec
hlt
in
repz
sbb
cli
pop
push
loope
pop
gs
nop
adc
inc
xorb
mov
push
xchg
xlat
jns
lret
aaa
sbb
into
xor
popa
out
and
push
pop
mov
xchg
push
mov
pop
mov
shll
xchg
fwait
pop
in
imul
mov
out
or
fidivrs
xor
jmp
dec
iret
push
or
dec
adcb
sbb
subb
and
xor
sti
nop
and
jge
jg
dec
or
dec
mov
and
neg
lret
mov
icebp
subb
fisubrl
or
repnz
repz
sbb
inc
lahf
fdivrl
mov
in
or
cld
pop
cmp
pop
test
jmp
jg
mov
test
out
add
lds
inc
mov
lock
rorl
sbb
faddl
xchg
add
pop
push
inc
out
cmpsb
pop
lods
loop
sub
xchg
ret
add
jl
enter
aas
mov
inc
stc
insl
call
nop
or
sti
fsubr
scas
fs
add
sbb
adc
mov
fsubs
push
ret
ret
push
sti
mov
imul
test
push
inc
push
daa
mov
push
lret
outsb
mov
mov
and
aaa
outsl
sub
cmp
xor
mov
pop
loop
mov
cmp
xor
inc
inc
into
or
aad
daa
mov
inc
inc
fadds
shlb
mov
xlat
outsb
and
inc
out
or
out
jbe
fldt
xchg
aam
add
adc
and
mov
dec
dec
dec
inc
ja
sbb
pop
mov
adc
adc
mov
jne
cmp
fisttps
xor
in
in
out
xchg
mov
popf
cmp
aas
adc
icebp
mov
adc
jecxz
add
push
aaa
push
pop
loope
fstps
into
cs
outsl
inc
jmp
cmp
jo
cmp
repnz
jg
fists
pop
int3
add
std
or
pop
stc
call
out
cld
xchg
fldl
arpl
fmuls
xor
inc
cmp
je
shrl
mov
pop
mov
and
inc
les
xchg
adcl
push
mov
xchg
xchg
setbe
lret
mull
cmp
loope
fistps
les
testb
pop
jb
mov
clc
arpl
repnz
fsubp
les
jmp
hlt
pop
and
in
test
into
imul
sarb
pop
cmp
cltd
xchg
lahf
xor
xchg
movsl
notb
in
rorl
sub
lods
adc
incb
ss
dec
cmp
daa
jbe
sub
cmp
gs
mov
jmp
aas
addr16
dec
inc
aaa
mov
outsb
xchg
jno
xchg
scas
push
jecxz
je
incb
dec
aaa
nop
je
ss
sub
xchg
shrb
repz
xor
aam
iret
pop
fstl
xor
sbb
and
add
addl
out
fsubl
xor
rol
shlb
in
stos
jno
sbb
adc
fisttpl
adc
ss
addb
fdivrs
push
pop
mov
test
pushf
mov
aaa
mov
aad
push
jnp
pop
test
in
mov
mov
cld
xor
mov
dec
mov
enter
notb
shl
inc
in
adc
nop
jb
lods
fcmove
mov
fs
clc
fisttpll
sbb
out
xchg
xchg
pop
mov
out
lods
mov
aas
sbb
lods
ret
iret
jae
mov
add
push
mov
movsb
cmp
mov
push
ret
testb
xor
dec
data16
inc
cltd
push
xchg
pusha
or
mov
icebp
pushf
inc
mov
cmp
into
fwait
sub
in
mov
out
es
jp
sbb
ret
in
shll
popa
push
outsb
sarb
imul
mov
adc
push
aaa
and
jg
stos
sbb
idivb
jnp
es
sub
push
pop
cmpsl
icebp
imul
dec
iret
pavgw
ljmp
aaa
ja
mov
aam
fidivs
xor
movsl
ror
fs
sbb
dec
ret
cmc
scas
mov
nop
cmp
sarb
setl
fcomp
inc
test
leave
je
test
pop
roll
adc
fxch
cmp
adcl
xchg
hlt
das
xchg
dec
int3
fdivs
test
xchg
and
loopne
pop
nop
fmull
mov
sti
cltd
jae
cld
and
mov
add
js
mov
xlat
add
out
sbb
rclb
popf
sub
push
gs
shlb
push
lret
aaa
jge
sbb
fwait
bnd
sbb
inc
add
je
add
sub
sub
sbb
inc
mull
or
jne
xchg
dec
pop
sbb
stos
fsubp
and
push
inc
rcrl
sbb
sub
fnstcw
in
fistps
shr
xchg
sub
movsl
insb
dec
insl
lcall
inc
mov
out
int
or
inc
pop
orb
pushf
shll
orb
or
push
jg
dec
pop
lods
xchg
and
cmp
daa
or
dec
mov
dec
xchg
std
pushf
push
jne
decb
decb
jmp
sub
xchg
add
sub
or
and
fs
mov
enter
mov
jns
mov
cs
jnp
pushf
mov
jo
enter
mov
mov
idiv
je
push
sti
in
pop
aas
mov
mov
mov
push
test
lcall
fcmovb
das
sbb
jnp
pop
mov
in
push
mov
xor
ss
add
ljmp
hlt
push
ret
cmp
mov
jnp
or
push
add
cltd
out
lret
dec
shrl
int3
push
fwait
push
dec
jp
xchg
pop
mov
and
mov
push
xor
vpand
mov
mov
js
jb
jmp
cmp
enter
or
and
rcll
and
mov
cmp
fidivs
repnz
lds
adc
loope
rorl
jmp
ss
pop
shl
xor
out
pop
sar
cmp
fs
cmp
mov
push
rcll
fisttpll
aaa
enter
leave
xchg
and
mov
push
int3
fcompl
testb
shrl
sti
xor
ds
and
jge
lds
je
leave
aad
pushf
dec
jb
cld
pop
push
jecxz
divl
and
mov
adc
inc
ss
rcrl
adc
int3
or
lea
shrb
cwtl
out
pop
push
cmp
mov
fisubrl
cli
rclb
sbb
cmp
rorb
into
mov
popa
mov
adc
dec
sbb
or
xor
enter
fisubrs
mov
and
movsb
test
fidivs
sbb
jo
pusha
cmp
incb
movsl
jne
lods
pusha
cltd
daa
jns
inc
dec
jecxz
inc
subl
and
dec
aad
aas
filds
xchg
xchg
add
lret
outsb
rcrb
and
cmp
out
and
push
inc
jo
int3
xor
lea
out
out
ja
fs
mov
and
fwait
cmp
mov
cltd
jmp
mov
fisubs
xlat
jbe
and
fistpll
and
aad
rorb
pop
cmp
cli
xor
xchg
inc
enter
popf
lods
jo
loope
sbb
fs
mov
outsl
pop
xchg
and
fmull
nop
popf
adc
and
data16
inc
leave
data16
push
sbb
fcoml
xchg
mov
push
xlat
and
add
jns
fdivrs
mov
add
xchg
mov
lahf
jbe
rorl
add
pop
rol
bound
pusha
cld
call
xchg
mov
test
int
aas
fistps
xor
xchg
pop
push
ja
xchg
adc
xor
repz
out
mov
adc
movsl
pop
callw
dec
das
push
cltd
test
lods
pop
movsl
add
es
in
cmp
sarl
cmp
inc
dec
movsl
ljmp
sbb
mov
leave
daa
pop
pushf
push
push
repz
insb
adc
mov
inc
lret
xchg
lods
and
xchg
lock
call
sbb
std
cmp
in
fcompl
sbb
addl
cmp
fwait
jae
add
js
rolb
pop
xchg
pop
jg
jbe
add
mov
sbb
mov
clc
or
cmp
push
jo
xor
sub
mov
test
lods
out
pusha
push
dec
test
dec
sub
cmp
xchg
adc
mov
xchg
ja
mov
rclb
mov
pop
mov
mov
cli
addr16
dec
shrb
xlat
addr16
out
loope
cmp
fisttpl
dec
or
imul
push
sbb
add
arpl
sub
pop
mov
outsl
testb
lock
sbb
mov
ja
call
pop
leave
push
jmp
push
xchg
xchg
and
sub
push
std
inc
sub
jl
sbb
jae
and
pop
loop
adc
mov
push
cli
mov
jg
cmp
and
bound
push
clc
popa
mov
sarl
je
loope
add
jle
fs
lea
cld
addr16
push
cltd
xchg
scas
rorl
fldenv
je
jge
fs
jbe
or
dec
daa
fdivl
mov
sub
jnp
mov
cmp
sahf
adc
fimuls
out
leave
lods
pop
sub
xor
mov
out
adc
out
cmpsl
inc
out
pslld
lods
cmpsl
test
aaa
call
out
iret
add
inc
push
adc
arpl
dec
cmp
call
lahf
xchg
arpl
int
pop
stc
out
jnp
mov
arpl
dec
stos
out
mov
imul
scas
cs
pop
xchg
mov
daa
daa
fiadds
ja
inc
mov
mov
sub
cmc
add
lahf
sbb
cwtl
test
add
pop
mov
jns
rorl
icebp
xchg
out
sbb
loopne
fs
bound
lods
rcrb
xor
mov
add
xor
add
int3
inc
fwait
pop
adc
std
loope
mov
sbb
xchg
sbb
sub
dec
or
sub
sub
addr16
pop
cmp
cmp
mov
jmp
sub
scas
or
sti
dec
cmp
or
aas
xchg
test
sub
xchg
in
and
mov
push
mov
mov
mov
adc
xchg
sbb
arpl
sbb
jecxz
jmp
ret
adc
aaa
pop
jecxz
cmp
cltd
enter
outsb
imul
test
push
scas
or
sub
imul
mov
mov
jl
lea
and
sbb
and
fwait
cwtl
out
jne
sub
lods
js
shrb
xchg
arpl
adc
cmp
call
fwait
addb
and
stos
sub
fistl
mov
jae
test
jae
insb
jbe
or
dec
popa
dec
fistps
adc
jb
into
cmp
xchg
aad
cmc
mov
test
and
jae
movsl
aad
fwait
rcrl
add
cmp
addl
or
push
stos
pop
jae
push
icebp
out
andb
daa
jmp
inc
sub
mov
rcll
repz
xchg
jno
inc
jno
jbe
imul
push
sbb
jle
dec
jl
lods
mov
sub
stos
in
fs
mov
add
and
mov
pop
xchg
mov
jg
or
les
int3
or
cmp
sub
jbe
scas
cld
lock
stc
xchg
call
lret
pop
ret
dec
mov
mov
mov
push
pop
pop
loop
fwait
or
push
sbb
mov
fiaddl
loope
shll
adc
push
sahf
dec
iret
roll
mov
push
or
inc
shl
and
push
or
shlb
dec
outsb
xchg
arpl
ja
ret
je
pop
ds
call
jle
loop
or
push
sbb
mull
mov
lock
in
xor
fwait
scas
mov
scas
and
arpl
out
sub
out
pop
loop
xchg
mov
lea
add
lret
push
jno
xchg
xor
ds
xlat
sub
insl
or
mov
jmp
jns
cltd
leave
sbb
loopne
lret
test
jge
jl
sbb
cmp
cmpsl
or
rolb
pop
ss
fldt
mov
xorl
aam
out
xchg
std
sar
push
out
add
mov
fidivl
jmp
or
jnp
int
loop
fimuls
push
dec
outsb
fcomp
xchg
xchg
sahf
cmc
xchg
adc
mov
adc
sbb
sbb
add
daa
shrl
xchg
cwtl
xor
sub
nop
jo
das
cmp
ja
mov
cwtl
cltd
adc
inc
repz
cmp
popa
mov
pusha
push
rclb
inc
cmp
sbb
or
push
lahf
adc
xchg
mov
jle
in
cmp
jno
jmp
adc
scas
sbb
sbb
out
push
pop
jecxz
push
insb
cmpsl
add
jnp
addr16
pusha
mov
dec
lock
mov
cmpb
jnp
ds
sub
dec
lea
push
call
call
loop
icebp
push
add
nop
jno
sbb
stos
push
xchg
adc
fidivrs
ljmp
mov
outsl
in
dec
pmuludq
and
jle
movsb
or
adc
pop
pop
jnp
rclb
add
fsubl
sub
dec
lcall
fidivrl
jns
bound
out
imul
jnp
enter
fcomip
inc
xchg
xchg
xchg
outsb
setne
in
sahf
pop
xor
adc
into
popf
ljmp
loope
mov
or
adc
push
jns
fidivs
add
repz
mov
lret
xchg
call
fistpll
daa
int3
rolb
cmpsl
movsb
mov
arpl
rorb
mov
push
pop
sarb
and
jle
add
jb
repnz
cmp
in
pop
jmp
movsl
push
xor
and
push
mov
daa
fcmovbe
into
mov
pusha
sub
inc
ja
in
pushl
and
push
ret
fsubrs
cmp
fldenv
scas
insl
fbld
imul
xchg
pop
test
std
sub
push
aaa
cli
shrb
dec
push
push
push
daa
and
xor
cmpsb
xchg
aam
ljmp
test
mov
add
dec
mov
sbb
ret
xchg
inc
pushf
xchg
mov
mov
jb
mov
inc
adc
push
aaa
lcall
sbb
sub
out
inc
xchg
add
stc
inc
dec
test
out
fcomi
ret
ds
mov
add
sbb
mov
popf
addr16
adc
mov
imul
pop
ljmp
in
sub
push
icebp
in
test
inc
inc
or
cmp
or
cmpsb
or
cld
pop
popf
and
lret
inc
mov
ljmp
in
sbb
hlt
and
ds
pop
adc
scas
test
inc
pop
mov
xchg
xchg
adc
mov
pop
mov
in
add
push
jmp
lods
sub
push
je
gs
out
inc
lea
push
mov
aaa
gs
jbe
lds
jb
shl
test
or
ficompl
ljmp
je
pop
mov
dec
loop
aas
subl
lock
aad
das
add
sahf
push
insb
mov
nop
jp
test
rclb
push
dec
aaa
movsb
into
aam
xor
jbe
cmp
jp
xchg
jle
push
fcom
add
and
int3
jo
push
cmp
add
dec
sbb
xchg
fcomi
jo
cmp
cld
rorb
aad
movb
cmp
popf
jo
cmp
dec
dec
sbb
rcrb
decl
ss
mov
mov
sub
or
cmpsb
push
pop
mov
aaa
dec
cld
andl
or
in
ret
outsb
nop
cmpsb
insl
mov
imul
in
insl
sub
dec
mov
xor
and
jl
test
cmpsl
mov
inc
int3
adc
mov
add
pop
fucomi
rolb
or
jo
mov
jle
or
pop
lock
pop
sub
dec
mov
bound
push
push
add
cltd
pop
mov
jl
pop
pop
ret
into
jmp
mov
scas
adc
push
inc
outsl
fsubl
clc
fisubrs
loopne
pop
inc
sub
or
out
xchg
js
ret
enter
dec
or
in
mov
xorl
int3
cmp
scas
lahf
add
mov
cli
out
inc
lea
xor
icebp
mov
jmp
pushf
pop
loope
pop
repz
into
xchg
mov
mov
int3
mov
mov
stos
mov
jb
lret
sub
js
rorl
sub
pop
mov
push
aas
push
sub
or
subl
in
popf
test
hlt
adc
and
iret
or
push
or
popa
xchg
je
xchg
xchg
inc
frstor
in
add
sub
insb
and
mov
out
cmp
cmpsl
sub
testl
xchg
lret
das
aad
aaa
loop
jo
mov
mov
call
clc
sub
or
popf
shlb
dec
inc
xchg
adc
inc
adc
jp
lods
outsb
ret
adc
add
aas
mov
int3
ret
mov
call
xor
add
fstpt
out
pusha
mov
ror
add
ljmp
mov
add
pop
jb
repnz
aam
pop
or
out
dec
inc
jp
test
sbb
dec
fldt
cmp
loop
jp
adc
mov
inc
sbb
mov
xchg
enter
sub
outsl
imul
push
inc
call
cmc
push
jmp
aaa
dec
and
adc
fnstenv
divb
out
xor
sub
pop
lss
add
int3
cltd
or
int3
mov
mov
in
pop
enter
push
xorb
loopne
mov
fbld
stos
mov
outsl
test
fwait
test
sub
mov
mov
cmpsl
divb
rorb
repz
mov
pop
shll
int3
mov
insb
sbb
rcrb
ja
cvtdq2ps
iret
out
push
jg
jae
dec
ret
adc
in
lock
or
add
pop
imul
fcomip
xchg
filds
stos
push
nop
mov
push
fisttps
mov
mov
mov
sub
jg
adc
jnp
sti
pusha
mov
push
push
iret
test
mov
lea
push
negb
mov
inc
push
punpckhbw
les
lcall
pop
xchg
mov
xchg
jg
lcall
cltd
cmp
push
add
and
dec
test
sbb
cmpsl
call
fwait
adc
lea
mov
shlb
leave
or
mov
mov
scas
pusha
loop
out
pop
xchg
pop
ja
jmp
stc
jp
xchg
inc
ficoml
or
shrb
lods
or
pop
xchg
subl
jo
cmp
xor
mov
sub
stos
or
cmpsl
stc
aad
adc
cmp
dec
xor
inc
adc
inc
mov
push
subb
xchg
mov
mov
push
scas
dec
or
push
fimuls
and
and
scas
arpl
nop
pop
test
pusha
hlt
lea
xchg
jp
lods
push
sub
xor
mov
jne
cmp
sbbl
hlt
js
inc
xor
add
daa
and
arpl
mov
cmp
jne
loop
xchg
mov
jp
popf
loope
mov
ja
repz
mov
in
sti
dec
ret
sbb
out
ret
stc
repnz
xchg
dec
xor
ror
or
sahf
ja
dec
sub
jmp
enter
xchg
loopne
stos
mov
call
mov
mov
push
mov
cmp
icebp
fcmovne
sarl
pushf
inc
leave
xchg
push
in
punpcklbw
dec
adc
sbb
dec
inc
push
inc
ljmp
mov
sbb
push
and
xchg
cmp
les
clc
push
lcall
xchg
inc
add
mov
cmp
or
mov
cltd
mov
dec
push
aas
mov
cmp
jp
jns
lods
fstl
rorb
or
inc
jmp
cmp
int3
imul
xchg
ljmp
shll
mov
inc
test
je
adc
push
insb
mov
stc
dec
cwtl
fdivrp
and
jl
movsb
push
or
mov
mov
movsb
aaa
jnp
sub
rolb
call
jge
pop
into
lds
mov
dec
decb
nop
push
jg
ljmp
and
and
data16
ss
or
xchg
adc
pop
add
xchg
cmc
out
sbb
inc
aas
ss
dec
inc
outsl
popf
stos
xchg
dec
xor
mov
arpl
lods
add
insb
cmp
pop
sbbb
lret
pushf
xorl
clc
lds
mov
mov
daa
xchg
daa
xor
dec
push
daa
fwait
pop
or
out
sti
ss
jb
mov
movl
mov
ljmp
gs
sbb
mov
dec
imul
jnp
mov
pop
mov
shr
mov
ret
push
jecxz
mov
adc
incb
pusha
call
rorb
mov
add
out
subb
repz
popf
mov
aad
lods
and
push
dec
testb
jecxz
sbb
mov
sub
xor
cmp
js
call
lret
inc
es
mov
inc
sub
sub
sbb
lea
cmp
lods
pop
sbb
mov
mov
cmp
inc
and
and
add
je
xlat
xor
cmpsb
xchg
gs
dec
ret
pop
sahf
rcrl
push
jg
lods
add
or
movsl
shl
pusha
je
push
mov
xchg
mov
pop
pop
stos
enter
or
shrb
cmp
and
dec
fdiv
icebp
cli
fbld
lds
hlt
movb
outsl
testl
dec
fcompl
pop
dec
and
cli
popf
ret
popf
push
cmp
negb
insb
xor
lods
clc
adc
add
loop
jmp
jbe
es
dec
xchg
dec
pop
aaa
xchg
jp
roll
repz
cli
fs
mov
test
push
push
mov
andl
bound
jg
mov
in
pop
dec
test
lea
pop
cmovs
xchg
lds
mov
lods
out
cmpsl
push
xchg
rcrb
sub
jbe
and
enter
sarb
xor
mov
pop
sbb
test
and
xor
or
inc
int3
push
dec
fidivl
dec
dec
sub
xorl
loopne
inc
stos
fldcw
add
push
repnz
inc
pop
inc
out
push
sti
sbb
mov
shll
dec
sub
mov
push
cs
fsubs
lret
or
in
or
or
xlat
jl
cmovo
shll
cli
cmpsl
repz
fisttps
in
lds
pop
xor
push
fiaddl
push
xchg
dec
dec
jecxz
pop
les
mov
jecxz
sub
dec
inc
pop
inc
inc
adc
xor
insl
mov
sbb
les
stos
pop
data16
xchg
data16
ror
pushf
fcoms
mov
imul
aas
push
bound
fs
pop
xchg
cld
cwtl
lods
imul
lcall
xorb
and
push
dec
mov
jmp
aad
shll
lock
fadds
test
xchg
mov
push
xchg
inc
loop
jg
sbb
jecxz
mov
mov
sub
xor
xchg
jno
loop
int3
jno
fcomi
or
lret
push
lcall
cmp
andb
mov
mov
add
pop
int
pop
and
push
call
ja
xchg
dec
or
iret
sub
mov
xchg
loope
mov
out
sub
ljmp
loope
pop
inc
xchg
ds
push
push
lds
dec
jbe
cmp
mov
icebp
sub
iret
xchg
dec
or
cmp
dec
pop
repz
mov
jbe
jg
ds
sahf
cld
push
movsb
adc
rclb
fstpt
es
mov
inc
mov
and
pushf
std
sbbb
lret
fwait
jae
pop
dec
les
jmp
int
pop
jno
xor
cmpsl
mov
push
shll
or
jbe
dec
mov
test
sbb
and
inc
dec
and
mov
fsubrs
out
jge
inc
mov
push
jnp
clc
cltd
add
pop
dec
imul
in
xchg
mov
addr16
sbb
mov
cmp
ret
jae
push
sub
xor
xchg
leave
sbb
sahf
mov
mov
dec
sbb
rcll
jl
cmpsb
cmpsb
adc
mov
sub
push
ja
test
xchg
insl
xchg
sahf
data16
pushf
test
and
pop
lods
test
mov
imul
mov
ret
jnp
adc
mov
cmp
inc
pop
or
stc
and
or
or
int
push
inc
rcrb
es
jecxz
out
cli
ds
fucomip
sbb
dec
dec
das
inc
mov
inc
xchg
test
out
sbb
add
xchg
shrl
movsb
cltd
cmp
lea
outsl
mov
mov
clc
xchg
push
sbb
cmpsb
into
sbb
ja
xchg
xor
dec
push
pusha
in
outsb
xor
cmpsl
sub
sbb
outsb
les
repz
in
jmp
push
nop
cwtl
or
or
push
add
cmc
shlb
sti
test
insl
cmc
stos
scas
fldenv
imul
pop
sub
inc
push
sub
pop
inc
stos
test
sbb
rcrb
clc
das
pop
inc
fdivl
in
dec
je
in
xor
stos
es
rcrl
test
int
fistl
mov
movsb
in
bound
push
mov
ret
out
cmp
cltd
pop
xchg
fcoms
mov
adc
sub
mov
mov
mov
hlt
call
mov
aaa
dec
cltd
add
outsl
xchg
repnz
dec
jno
jecxz
out
xor
dec
mov
mov
pusha
sahf
mov
notb
push
jg
sbb
fimull
mov
repnz
jg
sahf
cld
pop
pushf
divl
cmc
and
in
scas
xor
sahf
fldt
mov
in
rcll
jne
ljmp
in
pop
xchg
sbb
xchg
mov
scas
outsl
jb
or
test
inc
and
jne
mov
jle
mov
mov
push
clc
repnz
dec
idivl
jns,pn
aas
loopne
mov
sub
insb
cmp
cmpsb
iret
test
sub
push
fstl
adc
out
rcrl
and
divb
lret
push
lock
mov
push
jb
pop
sub
pop
mov
fisttpl
mov
cmc
push
mov
adc
std
mov
sti
rorb
fstpt
xor
add
mov
and
test
or
jbe
cmp
inc
mov
imul
push
xchg
inc
sbb
fcomps
popf
sarl
fmuls
add
jg
lret
lcall
test
jmp
iret
push
jno
aam
jmp
stos
das
scas
dec
jmp
mov
out
mov
out
insl
jnp
sti
ja
inc
lahf
es
fcmovnu
mov
pop
add
out
pop
icebp
hlt
into
pop
repz
cmp
dec
movsbl
xchg
shlb
xor
shrl
insl
sahf
shl
test
adc
rcrl
jo
arpl
jl
cmpsb
and
jno
repz
popa
out
lock
mov
cwtl
lds
sbb
xchg
hlt
rorl
out
lea
arpl
iret
xor
or
nop
sub
ja
popa
adc
and
shll
push
cmp
pop
aad
dec
pop
pop
outsl
pop
mov
fcoml
lahf
scas
ss
pop
adc
cmp
cmpsl
or
imul
jecxz
in
pop
mov
sub
jge
mov
xor
pop
inc
inc
add
push
xor
cltd
mov
leave
insl
or
hlt
jl
and
test
mov
int
scas
xor
pop
popf
out
add
jmp
adc
xchg
adc
dec
dec
or
inc
adc
lcall
daa
cmp
mov
aam
jl
adc
idivb
pop
cmp
cmp
and
dec
hlt
lods
sbb
in
sub
sti
into
loope
pop
je
mov
clc
ds
pop
xor
gs
mov
scas
shrb
mov
lret
jp
stos
fimuls
loopne
je
aaa
stc
add
jge
popf
jmp
jp
jbe
repz
pop
xchg
push
inc
cmc
xor
in
xchg
jb
adc
pop
xlat
mov
xchg
shlb
cmc
cmp
lret
mov
idivl
inc
outsb
insb
test
es
add
dec
push
sbb
push
filds
popa
pop
xchg
mov
mov
jae
sbb
pop
lcall
movsb
and
fidivrl
sarb
iret
stc
mov
icebp
mov
sub
mov
jo
pusha
insl
xor
movd
loope
cli
test
addr16
dec
jle
sbb
mov
pop
icebp
mov
dec
mov
mov
mov
add
shlb
not
mov
push
pushf
fcompl
loopw
test
inc
mov
jge
and
mov
lods
movsb
test
push
xchg
pop
inc
fistpl
in
adc
fstps
test
imul
jbe
jns
sub
mov
cmpsl
xor
and
cmp
imul
adc
iret
pop
xor
push
sub
dec
mov
aam
in
stos
dec
xor
inc
pop
push
push
adc
test
out
pop
pop
add
repnz
ja
xor
negl
lahf
sbb
imul
pop
mov
push
adc
or
cmpsb
popa
adc
xor
iret
inc
jge
mov
sbb
mov
sub
add
fidivs
xor
xor
test
aam
int
out
pop
aas
out
inc
jae
inc
shlb
insb
lods
insb
pop
push
iret
push
lret
or
mov
cmp
insb
jno
fwait
adc
add
mov
xor
adc
scas
je
popa
mov
cwtl
mov
jmp
inc
pop
mov
loope
or
outsl
fisubrl
xor
jns
insl
or
es
push
or
push
aas
push
ja
imul
cld
es
push
mov
xlat
or
fs
mov
xor
mov
enter
cltd
pop
lret
and
push
cs
pushf
call
and
pop
or
and
sti
fwait
xchg
das
add
pop
loop
xchg
loopne
add
test
inc
or
adc
jnp
add
xchg
cmpsl
cld
pop
xchg
cmpsl
into
push
cmpsl
add
divl
aad
cmp
sub
push
mov
xchg
scas
rcr
fistpl
movsb
and
mov
repnz
into
push
xchg
push
adc
ret
jbe
sbb
adc
imul
xchg
loope
sbb
jg
dec
ljmp
and
pop
push
pop
push
mov
adc
pop
jle
add
sahf
xor
mov
mov
push
enter
jns
cwtl
add
mov
loop
xor
aaa
js
jle
js
in
into
vpcmpgtd
mov
into
mov
cli
or
sti
dec
jmp
pop
aad
sub
out
and
mov
inc
cmp
adc
lds
add
lret
dec
or
sub
push
je
imul
je
std
call
xor
jp
imul
adc
cmp
pop
ficoml
mov
out
stos
mov
js
flds
ljmp
aaa
nop
xor
lods
xor
cwtl
xor
adcb
pop
lahf
enter
lret
pop
push
mov
cli
fs
xchg
fs
aam
int3
pop
sbb
xchg
sub
inc
popf
add
js
dec
xchg
dec
loop
jge
aaa
dec
push
push
cmp
sub
or
mov
lret
pop
jle
sub
push
insl
sub
inc
or
les
shrb
cs
popa
loop
cwtl
mov
repz
mov
imul
imul
stos
outsl
push
pusha
js
pusha
lods
mov
and
xlat
mov
and
cld
iret
cmc
mov
jno
sub
sub
js
xorb
cmp
sti
rol
sahf
cmp
or
mov
icebp
ret
je
jno
subb
jo
stc
jbe
or
inc
mov
add
xor
sub
cli
sbb
mov
xchg
xchg
pop
in
xchg
loopne
loopne
mov
xlat
jge
xchg
mov
shr
mov
sbb
adc
add
sbb
ficomps
adc
das
daa
xor
out
pop
xlat
inc
mov
sahf
push
lcall
mov
xor
push
push
xchg
addl
inc
fwait
push
fmull
push
xor
inc
inc
or
cmpsl
dec
xchg
jb
xor
sarb
jmp
jmp
insb
sbb
jl
xor
xchg
or
out
or
push
mov
mov
pusha
jl
inc
dec
mov
out
cli
test
cmpl
jbe
mull
adc
mov
cli
push
rclb
das
test
mov
cwtl
ljmp
adc
test
icebp
inc
pop
cmp
mov
inc
and
or
out
adc
mov
xchg
shl
sbb
movsb
sbb
inc
cmc
dec
mov
aaa
lahf
sar
xlat
addr16
leave
mov
mov
out
cmp
test
mov
cld
nop
outsb
inc
xor
js
inc
arpl
inc
push
push
shlb
rolb
xorl
pop
imul
xlat
imul
ljmp
xchg
shlb
jnp
dec
dec
xor
jg
jnp
xchg
rcll
cmc
int3
xor
fsubrp
cs
scas
sub
and
mov
mov
aad
inc
push
add
mov
out
lret
in
test
divl
add
mov
sbb
rcrb
sarl
cmp
jno
push
adc
shrb
dec
jl
jecxz
cld
lods
push
mov
mov
sbb
pushl
lea
jbe
stc
mov
in
or
insl
sbb
nop
mov
ret
xchg
xor
push
mov
nop
cmp
cmp
pop
jmp
lcall
lods
mov
adc
jo
inc
test
pop
or
shr
mov
roll
sahf
xor
sub
cld
shrl
testb
push
call
xchg
ss
add
fwait
or
iret
les
fcompl
in
add
sub
sbb
cmp
ds
pop
daa
test
sbb
ds
mov
sub
mov
mov
movsl
add
mov
xchg
sbb
xchg
testl
adc
lret
test
pop
or
into
push
cs
stc
jl
repz
mov
lds
push
push
inc
sbb
ljmp
mov
test
mov
jo
call
scas
fisttps
out
sbbb
push
jg
shl
add
lds
jnp
jle
shlb
pop
stos
jl
call
xchg
mov
lahf
sbb
xchg
pushf
or
push
add
xor
cld
cmp
push
fsubrl
jbe
dec
out
stos
popf
or
jmp
add
jmp
push
xor
outsl
enter
push
arpl
rcrl
and
inc
mov
jg
sub
std
add
xchg
js
lock
cli
jae,pn
sahf
mov
leave
push
sub
or
ja
inc
xor
inc
push
xchg
jl
mov
das
mov
add
iret
sahf
push
or
repnz
ds
inc
sbb
adc
out
fcmovnb
mov
in
mov
sbb
jmp
sub
lods
pop
sbb
xor
cmpsl
mov
sti
push
loope
lahf
jo
lret
jge
addr16
sub
push
mov
adc
push
cld
imul
mov
pop
mov
testl
sti
lret
daa
jae
aad
mov
mov
and
or
mov
sub
dec
je
mov
and
stos
adc
push
xchg
movsl
cmc
icebp
icebp
xor
arpl
mov
xchg
inc
fwait
mov
xor
fisubl
push
mov
cmc
sbb
push
sbb
mov
cmp
and
add
in
sahf
cmpsl
data16
mov
push
jg
rcrl
cld
scas
fimuls
dec
xchg
xlat
jmp
int3
mov
xchg
lret
jmp
or
out
and
push
pop
fwait
les
xchg
lahf
xor
repnz
out
loopne
add
xchg
in
es
jp
mov
stos
mov
add
ficoml
daa
sbb
outsb
adc
cmp
ss
add
cwtl
cmp
jg
imul
dec
rcrb
inc
dec
cmp
jle
push
adc
and
or
cmp
lcall
std
clc
jnp
cmc
jl
cltd
mov
xchg
or
dec
cmp
fdivl
add
sub
lods
cld
testl
arpl
push
fimuls
push
inc
dec
push
jecxz
mov
hlt
xlat
stos
fwait
sbbb
fsubrl
rcrb
lea
ret
push
loop
hlt
adc
cli
and
pop
mov
clc
in
sbb
cli
push
mov
in
pusha
stos
jb
lods
loope
insl
pop
aam
mulps
pop
jmp
pop
add
out
jno
popa
aaa
mov
push
dec
cmp
add
or
shlb
jb
cmp
cltd
faddp
movsl
shr
shrl
sbbb
push
jbe
add
ds
and
enter
lcall
push
pushfw
cltd
mov
inc
js
pop
iret
std
sarb
movntq
mov
jne
add
mov
mov
hlt
jecxz
shrb
je
mov
jnp
adc
repnz
ror
sbb
mov
or
jo
pop
add
imul
inc
sbb
or
or
flds
jb
icebp
push
xchg
xor
mov
filds
xchg
js
fistpl
scas
bound
push
dec
ja
movsl
inc
xchg
or
mov
int
aaa
out
not
rcll
adc
xor
push
inc
mov
ja
or
mov
les
add
mov
pusha
and
cmpsl
push
pusha
pop
stc
push
or
xchg
cmp
xchg
filds
stos
or
push
sahf
ja
clc
mov
clc
mov
std
clc
adc
or
jne
inc
mov
popf
sbb
jo
mov
inc
rorl
sbb
push
mov
push
sbb
fsts
sbb
js
push
sub
insb
push
not
cmpsl
lods
cli
repnz
fs
aaa
cli
lods
add
jl
and
inc
or
ss
add
or
or
daa
fs
and
sahf
or
pop
movsl
and
inc
pop
jmp
add
xchg
adc
jg
mov
mov
adc
xchg
dec
mov
mov
jmp
adc
les
repnz
aas
shlb
lods
in
loopne
dec
or
sahf
xor
mov
add
mov
fiaddl
lcall
mov
icebp
loope
arpl
sahf
das
loop
add
sbb
push
adc
mov
and
jecxz
int
lahf
in
adc
cs
dec
clc
jbe
jne
sahf
bound
jl
pusha
cmp
xchg
sbb
mov
lret
out
and
imul
test
je
mov
stos
enter
jno
les
or
jge
stos
ss
push
sar
mov
jb
enter
cld
or
and
jns
xor
inc
push
orl
clc
sahf
xor
cmpsl
cmp
outsl
int
orb
push
fsubl
add
jle
scas
cmp
adc
mov
pop
cmp
xchg
cs
pop
insl
test
mov
jge
mov
faddl
mov
out
out
jno
fldcw
data16
test
sbb
adc
imul
push
xor
push
and
sub
ret
push
mov
mov
pop
test
sub
js
movsl
mov
aas
or
dec
cmp
inc
out
inc
fstl
es
or
xor
xor
mov
mov
or
push
jae
lods
stos
outsb
shll
dec
setle
cmpl
mov
popf
push
adc
fsubrp
std
pop
mov
jo
and
aam
fmul
mov
push
cmp
mov
push
loopne
imul
cmc
and
add
das
jne
or
das
in
sbb
mov
lahf
repnz
push
addb
xlat
jnp
pop
cmpsb
mov
test
push
sbb
sbb
dec
dec
stos
out
xor
ljmp
ss
enter
inc
xor
mov
cli
mov
sub
insl
cmpsb
push
out
stos
icebp
imul
mov
sbb
les
or
std
in
or
sbb
sub
shlb
out
adc
jo
inc
aad
test
stos
jnp
rolb
xchg
sub
xlat
jnp
pop
fidivrl
aaa
les
push
adc
cld
add
adc
aas
cmp
adc
repz
inc
xor
inc
sbb
xor
xlat
inc
jge
repnz
retw
jo
test
mov
mov
dec
mov
aas
stos
lret
loope
push
es
movsl
cmp
test
es
sbb
mov
repz
out
lea
int
lahf
and
xchg
scas
xchg
lret
add
xchg
xchg
sbb
sbb
or
inc
fildll
insb
mov
pcmpgtw
jne
xor
pop
das
sub
cmpsl
stos
sub
fisttpll
fcompl
pop
fisubrs
mov
dec
adc
or
rcr
lret
scas
mov
or
push
xchg
loop
cli
inc
dec
jbe
pop
xchg
mov
sub
mov
into
sub
mov
jp
insl
repnz
and
xchg
shl
mov
and
xchg
pop
das
push
ret
push
das
xchg
inc
in
fwait
and
sub
inc
jo
adc
clc
repnz
in
lock
mov
pop
loope
pop
stos
rcl
cli
sahf
jl
call
pop
outsl
mov
lock
iret
divl
out
addr16
movsb
js
clc
push
mov
enter
jecxz
mov
dec
in
cmc
mov
adc
push
cmp
adc
dec
jne
lahf
lret
push
jnp
push
jl
and
das
xor
sbb
dec
add
bound
stc
jp
gs
push
hlt
sub
cmpb
insl
pop
daa
xlat
bound
pop
stc
cmc
ja
pop
out
rol
jle
dec
scas
cmp
add
pop
rolb
iret
cmp
pop
mov
int3
add
cwtl
adc
dec
idivb
adc
out
push
insb
pop
push
jmp
or
lods
push
inc
cmp
inc
daa
daa
sbb
jg
xor
xor
mov
push
or
pop
jg
icebp
lret
jns
push
rcrb
addr16
mov
jae
shrb
or
rolb
add
imul
ds
push
xchg
pop
and
pop
mov
lock
push
push
lret
push
cmpsl
je
pop
pushf
mov
sbb
sub
cmp
je
rclb
inc
mov
aam
mov
adc
inc
dec
mov
and
cmpsl
lea
xor
fwait
jmp
ss
push
sbb
ds
pmaxsw
pop
jo
loopne
ret
jne
ljmp
call
mov
mov
loope
xor
aaa
shl
cld
mov
sub
mov
add
pop
pop
dec
mov
pop
insl
pop
cmpsl
dec
add
popa
adc
inc
into
inc
hlt
pusha
inc
cltd
iret
nop
test
cmp
ss
mov
addl
jne
pop
inc
popa
enter
testb
aas
xchg
mov
leave
dec
or
loopne
xor
add
lcall
loop
repz
lcall
add
xor
mov
ficompl
or
jge
dec
adc
jg
jo
imul
jecxz
pop
xor
test
mov
mov
sub
sbb
adc
cmc
and
cmp
fldlg2
dec
das
add
sub
pushf
fbld
mov
lods
mov
xchg
mov
gs
int
loopne
xchg
push
insb
mov
sub
pop
andb
pop
jle
mov
repz
push
cmp
and
xor
mov
cmp
jecxz
mov
out
xchg
inc
sbb
movsb
push
bound
test
mov
lds
sti
adc
xor
mov
jb
mov
stos
fidivrl
dec
inc
scas
or
ret
dec
sub
jb
mov
push
xor
aad
mov
les
pop
fistpl
fidivl
lods
into
mov
and
stos
sbb
sub
xor
shlb
sub
cmp
pop
ds
in
and
mov
test
sbb
stos
jbe
pop
aas
bound
xor
jle
movsb
adc
cs
mov
test
fdiv
dec
pop
xchg
push
cmpsl
mov
inc
les
jmp
sahf
pushf
dec
inc
adc
xchg
jp
or
xor
sbb
push
movsl
loopne
je
ret
outsb
mov
jns
lea
mov
fadd
pop
icebp
sub
cmp
call
jmp
adc
or
lea
adc
mov
and
fistpl
push
or
xchg
mov
into
lock
or
gs
popa
mov
pop
fisubrs
jmp
lods
push
add
aaa
mov
mov
cmp
int3
fwait
inc
cltd
test
std
mov
inc
xchg
jmp
jmp
and
mov
add
add
iret
roll
sbb
sbb
cmp
lods
gs
add
call
xchg
pop
cs
or
push
iret
dec
adc
xchg
mov
pop
lahf
lret
out
cli
jp
cmc
jg
pop
decb
push
and
icebp
fisttps
movsb
popf
mov
lahf
pop
cmc
pushf
popl
icebp
iret
adc
adc
aaa
stc
adc
xor
xchg
mov
rcr
mov
push
push
mov
inc
mov
jge
mov
push
lret
repnz
and
cmpsb
mov
popa
xor
dec
cmc
stos
xor
mov
xchg
sbb
push
lret
mov
or
or
jp
xchg
push
adc
scas
iret
popf
jae
lock
jo
xor
addl
icebp
jp
js
test
out
xchg
jg
mov
ret
out
xor
into
pop
jnp
xorb
test
push
scas
mov
jb
add
jle
mov
add
xchg
sub
subl
push
leave
out
int3
push
lret
xchg
inc
cmp
add
mov
pop
mov
lea
adc
dec
mov
aad
add
addb
cltd
mov
fwait
jl
pop
jg
sbb
inc
cmp
in
xchg
sbb
outsb
leave
popaw
sub
jle
pop
sbb
or
push
jge
stc
add
cmp
pop
cmp
inc
adc
cld
push
dec
dec
adc
lret
xchg
fimuls
in
adc
int
pop
inc
sahf
sub
cld
sub
push
mov
jb
xor
enter
fisubrl
clc
adc
push
xchg
mov
nop
mov
out
scas
sub
and
pop
add
mov
mov
pop
mov
mov
cwtl
or
mov
mov
mov
dec
or
adc
and
dec
adc
arpl
adc
sbb
insl
push
loop
jb,pt
xor
pop
mov
cli
insl
shll
jb
arpl
in
scas
push
les
cmp
mov
dec
push
or
into
outsl
xchg
sbb
sub
add
sub
sbb
cld
xchg
push
pop
enter
movsb
aam
add
cmpsl
jne
imul
dec
aad
call
fistps
jge
dec
mov
mov
dec
daa
gs
dec
out
xor
mov
jbe
insw
xor
pop
mov
xorl
js
enter
mov
sbb
inc
js
in
cld
mov
xchg
loope
aaa
cmc
xchg
push
in
push
mov
add
xchg
enter
inc
out
add
shlb
mov
out
shll
add
sub
mov
xchg
adc
sub
testl
cwtl
je
mov
fisttpll
sub
inc
jle
and
push
cmp
shlb
insl
jl
mov
mov
adcb
out
mov
test
loop
stos
andb
pop
and
cmpsl
jmp
addr16
into
mov
and
and
lret
hlt
dec
cld
into
int
daa
mov
shll
stos
xor
int3
dec
lea
push
stc
dec
repz
jnp
push
pop
jp
xchg
and
jmp
jo
mov
test
repnz
push
fsubs
dec
jbe
fmuls
mov
or
cmp
xchg
or
add
lock
sbb
jne
or
fcompl
xchg
out
mov
aas
movsb
cmp
scas
fucomip
daa
scas
cmp
and
out
inc
cltd
fnstenv
stos
sbb
pop
cwtl
fcmovb
jbe
rorl
push
mov
dec
adc
test
add
jo
or
or
mov
leave
adc
int3
mov
add
adc
jns
mov
dec
adc
cmp
xor
mov
scas
insb
das
insl
aad
pop
pop
iret
mov
dec
adc
in
ret
insl
mov
push
jecxz
jg
lods
mov
int3
leave
dec
sub
dec
fucomi
sbb
add
add
sbb
cmp
mov
call
imul
push
imul
mov
paddusb
dec
sub
mov
scas
scas
mov
mov
and
fimuls
andl
add
loopne
repnz
sub
int3
mov
iret
cmp
fucomi
sub
jge
lods
mov
imul
repnz
addr16
scas
out
jbe
inc
pushf
lock
pop
daa
pop
pop
cmp
inc
int
mov
ja
and
sahf
or
in
fcom
out
mov
cmp
fmul
insl
in
mov
or
jae
pop
inc
jno
out
inc
xchg
mov
jp
cmpsb
outsl
icebp
and
lods
jmp
fcompl
repz
mov
inc
out
fstpt
fs
lret
pop
pop
call
cmp
pop
or
es
adc
nop
pop
inc
mov
mov
cmpsl
xlat
jbe
ret
scas
push
or
xor
push
mov
lret
mov
imull
nop
pushf
in
xor
jle
pop
pop
mov
daa
test
mov
hlt
mov
pop
mov
movlps
ljmp
xchg
xchg
rcrl
daa
test
jno
je
xchg
out
cwtl
iret
jp
aaa
lods
dec
adc
popf
pusha
fsubrl
inc
cmc
ja
xchg
iret
cmp
add
subl
cvtdq2ps
das
pop
iret
push
insb
mov
popa
pusha
mov
xchg
cmpsl
xchg
loope
fisubrs
and
lret
minps
imul
xor
sbb
cwtl
sbb
fcmovu
je
test
push
jbe
sub
xchg
jg
loopne
bound
pop
dec
les
jecxz
or
push
and
and
lahf
js
ret
sub
adc
add
in
ret
jnp
mov
pushf
inc
std
ficomps
push
movsb
imul
sub
fsubrs
and
jl
adc
or
lods
push
inc
pop
pop
dec
xlat
inc
xor
adc
arpl
pop
mov
sbb
imul
out
pop
inc
ja
cld
push
gs
pop
scas
or
pushl
inc
pop
pop
lret
shl
pop
mov
clc
sub
pop
xchg
cltd
lret
adc
pop
cwtl
jmp
add
ljmp
aaa
iret
es
lock
jp
jecxz
popf
sbb
dec
out
mov
ficoms
push
pextrw
cltd
ret
cmpsb
sub
and
sbb
mov
cmp
ds
xchg
rolb
aaa
cmpsb
shl
in
sub
lock
dec
mov
add
mov
lret
push
fdivrs
repnz
mov
add
pop
mov
inc
jo
sub
cmp
lock
lods
sub
scas
in
inc
inc
movsl
int3
mov
mov
mov
xor
fnstsw
cmp
test
ljmp
xchg
cmpsl
mov
std
insb
insl
push
sahf
xlat
cmpb
mov
cld
data16
pop
inc
cmp
push
add
mov
and
jge
mov
sbb
stos
arpl
dec
xchg
xchg
les
lock
jge
cmc
and
lret
insl
lcall
mov
js
inc
jmp
push
inc
xchg
adc
xor
sbb
mov
sub
cld
mov
dec
sub
add
fcomi
inc
leave
repnz
pop
jns
push
adc
sarb
sub
ja
aad
inc
xchg
mov
sahf
inc
xchg
ljmp
mov
mov
xchg
aad
dec
push
push
pop
sti
fists
mov
dec
cs
pop
mov
xchg
xchg
fisubrl
push
cwtl
lds
stc
ret
stc
xor
mov
jo
notl
mov
lds
nop
pop
pop
cld
add
dec
dec
mov
inc
imul
into
leave
push
fdivrp
fcoml
bound
lcall
dec
icebp
jb
jnp
adcl
out
daa
filds
jle
fwait
mov
shlb
out
shrl
adc
idivb
les
mov
mov
enter
cmpl
lcall
shlb
imul
rcr
aad
or
shr
sub
faddl
loop
sbb
fstl
repnz
push
push
sub
jne
push
push
xor
sbb
mov
pop
mov
leave
int
ss
add
push
push
dec
sbb
push
mov
xchg
mov
sub
add
or
js
loop
pop
xchg
dec
mov
loope
and
pop
sbb
movsb
dec
idiv
scas
notl
pop
test
xchg
adc
repz
jmp
xchg
es
mov
xchg
cmp
mov
cmpsl
pop
adc
add
mov
in
cmp
hlt
inc
jle
xchg
cmp
add
adc
sub
call
inc
int3
jbe
jmp
dec
shl
cwtl
std
repnz
mov
popf
orl
shll
andl
xor
lret
mov
pop
inc
outsb
mov
insb
je
or
out
push
daa
cmc
or
jne
and
pop
enter
out
jmp
arpl
jle
jns
outsl
mov
int3
push
movsl
aam
push
jns
dec
outsl
adc
push
movsl
pop
adc
mull
push
mov
decb
jl
pop
cmp
mov
orb
jmp
mov
xchg
xor
or
std
sub
pop
pop
lock
add
sbb
xchg
sbb
insl
push
pop
lcall
arpl
jle
test
mov
and
push
lds
iret
jmp
or
aad
lock
jns
sar
cmp
fld
rclb
fstl
sub
mov
adc
iret
iret
adc
mov
lods
dec
ret
cmpsl
shlb
cli
movsb
mov
aaa
xchg
iret
mov
xor
pushf
inc
mov
out
pop
mov
test
stc
pusha
push
inc
inc
fwait
push
xor
push
cmpsl
mov
cmp
add
inc
dec
inc
sbb
adc
sub
xor
pop
push
fwait
jno
stos
rorl
fs
jg
or
aas
inc
ljmp
push
lods
mov
ret
imull
cmp
add
add
cs
pslld
out
unpcklps
adc
ret
fcmovnb
sub
jns
cwtl
or
test
mov
andb
pop
inc
call
js
in
fmull
pop
push
clc
pop
jne
push
sbb
sub
sbb
mov
cmp
pop
mulb
add
or
cmp
loop
dec
outsl
adc
fdivrl
pop
int
test
mov
add
cmpb
insl
mov
push
xchg
outsl
sub
iret
call
movsb
fldcw
sbb
pushf
and
rcr
int
mov
xor
cmp
xchg
sbb
sub
ficompl
jmp
outsl
adc
inc
inc
rorl
loopne
dec
pop
push
lods
data16
outsb
jg
sbb
mov
xchg
mov
and
shll
repz
fwait
jae
cltd
and
pop
or
mov
loope
mov
mov
cmp
subb
dec
test
shrb
stos
mov
xchg
cmc
adc
iret
iret
nop
xor
addl
xor
daa
xor
inc
mov
in
sbb
mov
shll
push
les
mov
gs
in
dec
clc
imul
mov
fs
fistpl
sub
lcall
pusha
pop
dec
jnp
mov
dec
mov
seta
scas
enter
pop
cmpsb
cmp
orb
out
add
popa
mov
test
mov
inc
gs
in
and
aam
pop
push
mov
movsl
enter
je
into
cld
icebp
dec
out
sub
mov
mov
shr
jno
jecxz
pop
das
xor
icebp
add
pop
sbb
imul
mov
aas
popf
sub
mov
pop
jb
sbb
shrl
shl
aaa
imul
int
roll
jbe
ja
insl
sbb
inc
shr
bound
add
cs
jle
fs
jle
iret
sbb
mov
cwtl
xor
cmp
and
clc
fistps
jg
xchg
adc
aam
sub
mov
sbb
in
xchg
stos
sbb
pop
cld
push
cmp
test
int3
dec
cmpsb
sub
adc
adc
dec
cmpsl
and
jo
lret
shll
xchg
sub
pushf
imul
es
loopne
lods
xor
push
sbb
test
hlt
or
jo
xchg
adc
push
lret
sarl
sbb
pop
dec
fidivs
mov
and
jnp
and
sub
pop
cmp
inc
movsb
jl
inc
jge
and
adc
test
sub
or
lock
popa
dec
jnp
sub
push
lock
sahf
nop
push
jo
ljmp
mov
xchg
lcall
dec
mov
scas
xchg
sahf
xchg
pop
mov
repz
and
push
sbb
pop
xlat
add
push
ret
xor
mov
mov
adc
lret
popa
adc
and
test
paddd
sub
loope
sbb
xchg
aas
sub
push
addr16
mov
enter
icebp
pop
movsb
imul
test
pop
xor
iret
sbb
shrl
jae
lret
cltd
clc
inc
push
in
pop
out
stos
xor
cmpsl
ss
scas
or
es
and
xchg
sub
cmc
out
xchg
addr16
hlt
mov
xchg
xchg
sahf
insl
cmp
jge
sbb
or
test
dec
add
test
les
or
gs
xor
and
push
lret
jp
adc
xchg
test
cmpl
dec
stos
iret
push
rcrl
insl
jbe
sub
xchg
out
mov
inc
adc
push
adc
leave
mov
mov
fnsave
jo
je
pop
rclb
add
in
in
fistpl
inc
push
jne
hlt
and
rorb
mov
xor
ret
push
movsl
cli
sarb
nop
mov
mov
in
imul
rcrb
pop
inc
movsl
mov
lcall
out
sub
mov
mov
cmp
mov
loopne
push
or
mov
cmp
mov
jp
sub
fdiv
dec
in
and
jp
jns
data16
pusha
nop
mov
leave
insl
lahf
jno
rcrb
jle
ja
cmp
out
les
jge
sbb
jnp
rorl
add
cld
hlt
cltd
fs
fs
stos
rclb
dec
and
add
outsb
fdivl
and
int
shll
repnz
fcomps
addr16
mov
dec
jb
test
add
ds
fmull
test
js
out
ret
xor
sahf
aaa
in
mov
idivb
lods
cmpsl
inc
push
jmp
jns
js
cmpsl
popa
pop
pop
pop
lcall
sbb
gs
jmp
pushf
std
insb
mov
xor
add
xchg
pop
pop
jecxz
int3
jns
push
jp
push
mov
lahf
pushf
inc
in
aas
adc
mov
lea
cmpb
xchg
out
mov
adc
bnd
pop
jl
push
inc
inc
inc
xor
int
imul
jns
loop
aad
jl
insl
adc
sbb
daa
xorl
sbb
pop
adc
pusha
daa
dec
test
cmp
or
cmc
fsub
mov
inc
lcall
sub
xchg
adc
inc
movsb
cs
sub
mov
and
jecxz
mov
pop
testl
mov
push
ds
adc
or
enter
mov
jne
dec
sub
sbbb
push
mov
ljmp
jnp
in
xlat
jnp
xchg
in
cmpsb
pop
or
and
push
out
hlt
and
in
push
push
jmp
js
es
lods
addr16
cwtl
sahf
cmp
mov
clc
and
xor
test
inc
je
pop
xorl
xchg
sar
faddl
push
hlt
jmp
sbb
inc
push
xor
jb
pop
ret
loope
cs
mov
or
jmp
mov
mov
fwait
arpl
jbe
pop
shrl
addr16
dec
push
scas
into
stos
pop
sbb
jnp
insb
popa
cltd
fdivl
mov
push
repz
pushf
shl
es
dec
sbb
adc
push
mov
and
mov
mov
adc
push
stc
mov
ficoml
scas
push
xchg
cs
imul
ja
js
and
orl
pop
jbe
dec
lea
lods
ljmp
mov
ja
or
clc
fs
out
or
push
adc
pop
xlat
mov
jo
stc
jmp
pop
sbb
in
outsl
ss
inc
stc
std
sbb
add
mov
xchg
out
stos
iret
jge
test
jp
mov
cs
ret
sub
mov
stos
mov
in
pushf
int3
pop
xor
mov
mov
jb
inc
mov
jl
mov
mov
xchg
loopne
je
jno
mov
leave
sbb
repnz
jbe
mov
pop
lds
or
xlat
outsl
push
shl
adc
mov
les
sbb
jecxz
push
dec
dec
sbb
scas
loope
pop
dec
xor
inc
pop
outsl
push
sub
push
lods
add
sahf
test
fisttpl
lods
ret
jno
adc
aam
insl
xchg
fimull
insl
push
jmp
xor
xor
out
inc
xor
sub
and
sbb
or
jae
or
inc
push
cmp
stos
xchg
mov
jo
cwtl
pop
mov
js
pop
lods
jg
cltd
xchg
pop
mov
adc
lods
push
popa
cmp
xor
add
out
jae
test
inc
adc
ret
out
stos
cltd
shlb
sub
cmp
cmpl
les
in
ds
mov
xor
shlb
jbe
rolb
cli
fs
imul
mov
dec
xor
push
lock
data16
int3
out
out
adc
push
sbb
insl
rcll
int
dec
imul
sub
mov
or
lock
ret
mov
add
jle
outsl
ja
pop
cmp
dec
popf
leave
in
adc
lcall
fcmove
lret
stos
stc
sub
repz
push
test
mov
xor
mov
popf
ljmp
bound
mov
fcmovnu
sar
xor
mov
jge
scas
cmpsb
cld
lret
imul
aad
mov
and
inc
xchg
test
dec
into
test
icebp
lret
mov
add
dec
icebp
leave
bound
push
sub
sbb
push
push
or
mov
cmpsb
inc
ret
xchg
sbb
adc
shlb
dec
shr
sbb
jmp
xor
xchg
lahf
add
adc
das
lds
hlt
iret
sub
test
ljmp
sbbl
cld
movsl
arpl
sbb
scas
lea
xchg
cmp
sub
jae
add
dec
outsl
fidivs
lds
pop
cmp
outsl
sbb
pop
dec
pop
loopne
ret
or
dec
push
sbb
fwait
cld
stc
insb
add
sub
out
inc
enter
sbb
lds
jle
jns
add
mov
mov
int
es
leave
mov
push
sub
xor
test
xchg
or
push
and
xor
pop
inc
dec
dec
inc
sti
or
mov
or
arpl
xor
nop
hlt
in
push
jns
push
test
sub
dec
add
and
fstps
and
in
aas
sbb
fstp
mov
fsub
insb
inc
pop
and
push
outsb
push
scas
mov
xchg
lahf
jg
cwtl
leave
cld
and
inc
jo
out
xchg
mov
les
sarb
mov
in
adc
pop
repz
cmp
dec
ret
into
loopne
adc
and
repz
into
xchg
nop
xchg
andl
adc
popa
icebp
mov
iret
xchg
cwtl
imul
xor
aaa
xor
test
mov
push
add
rcrb
dec
inc
leave
dec
pop
dec
in
aad
arpl
pop
xchg
adc
adc
test
cmp
sub
xor
rcrl
aas
sub
dec
sbb
addl
xor
adc
out
lcall
in
cmp
les
cltd
dec
insl
add
in
lock
push
and
jl
xchg
inc
mov
lret
scas
call
cwtl
setnp
sti
scas
lock
adc
ret
pusha
sbb
jmp
pop
fstps
sub
loopne
jle
mov
add
and
xchg
loope
push
xor
and
es
mov
test
sub
xchg
ljmp
jb
jno
adc
outsb
xchg
cmp
pop
jmp
fcmovu
and
add
jae
push
sbb
push
cmp
jp
push
enter
xchg
push
mov
dec
out
cmpsb
lds
out
push
adc
int
mov
sbb
inc
push
or
hlt
mov
cmp
lds
loope
arpl
jno
test
cmp
push
in
mov
repnz
pushf
mov
dec
xor
sbb
push
push
jle
cmp
sbb
pop
hlt
jl
sbb
sub
mov
cmp
pusha
sti
enter
sbb
clc
loopne
insl
out
pop
xchg
mov
add
cmp
cmc
cmp
ret
fwait
push
fidivl
inc
negl
sub
std
lret
mov
hlt
aad
mov
xor
mov
jle
out
xchg
inc
mov
out
mov
xchg
jno
int3
and
jp
lock
rclb
imul
fucomi
push
frstor
and
inc
shlb
dec
movsl
es
cmp
stos
mov
and
ja
and
pmaxub
or
mov
in
popa
xchg
or
push
adc
subb
xchg
ret
lds
andl
je
jno
mov
dec
add
ds
ljmp
xor
mov
cmc
inc
or
cld
and
movsl
clc
inc
arpl
shlb
nop
sub
pop
inc
idivl
jnp
inc
dec
das
jne
push
incb
and
fwait
subl
cmp
test
sub
loopne
ret
push
arpl
mov
mov
jns
or
or
les
in
pop
jae
xchg
push
or
orl
ljmp
jmp
stos
pop
fnsave
inc
jbe
aam
jb
jb
pop
or
int
lock
cmp
mov
xlat
nop
outsb
sarl
outsb
loop
out
lea
stc
scas
nop
sub
xchg
dec
fstps
mov
std
ret
add
or
mov
or
pop
fadds
movsb
and
adc
loope
mov
mov
stc
ffree
sbb
sti
and
mov
mov
es
jge
jnp
imul
aad
out
pop
ret
faddl
clc
pop
inc
push
cltd
shr
pusha
and
cli
lock
sbb
pop
and
lods
imul
xor
sub
inc
push
pop
mov
fcomp
out
gs
mov
dec
mov
jl
orl
xor
push
push
jno
mov
cs
out
repz
test
jecxz
pop
sbb
aam
mov
pop
adc
loop
hlt
sub
loop
adc
push
jb
nop
dec
imull
out
push
add
icebp
push
fs
scas
out
jle
dec
test
xchg
loopne
and
mov
xlat
sbb
jno
imul
mov
scas
jg
fcoml
and
pop
loope
fisttps
insl
cli
mov
push
sbb
xor
dec
inc
sbb
or
pop
lret
nop
sbb
mov
cmpsl
pop
cli
adc
movsl
push
fcoml
mov
add
cmp
hlt
rolb
or
stos
cmp
and
popa
dec
leave
mov
jne
push
cmp
mov
mov
sub
adc
pop
cmp
mov
push
andl
mov
cs
jns
dec
jmp
jle
xor
stos
stos
lcall
shrb
push
jmp
dec
adc
xabort
mov
lea
stos
push
pop
into
repz
inc
xor
pop
push
xchg
xor
push
js
inc
mov
mov
or
xor
shll
hlt
push
arpl
xchg
sar
push
pushf
insb
xchg
sub
push
inc
or
mov
push
or
mov
sbb
test
sbb
enter
push
data16
into
dec
insl
sbb
xchg
dec
aad
out
sbb
jbe
orl
rcrl
das
testl
jae
push
xlat
ret
and
push
add
outsl
mov
adc
outsb
mov
into
clc
add
sbb
out
addr16
xor
sub
push
mov
mov
fwait
xor
cli
mov
pop
inc
push
loop
enter
push
addb
dec
xchg
adc
sbb
lret
mov
adc
addl
xor
loopne
push
stc
scas
std
adc
stc
in
push
push
ret
rorb
in
faddl
test
and
xchg
mov
fnstcw
ljmp
jg
ljmp
xchg
sub
outsl
xor
out
fs
inc
das
adc
push
movsb
add
shrl
and
pop
add
jle
pop
xchg
sbb
cmpsb
or
mov
pop
imul
cmp
ffreep
pusha
add
insb
mov
int
or
icebp
iret
outsl
in
mov
adc
cmp
aas
cwtl
sub
js
or
fdivrl
pop
push
add
sbb
js
and
inc
and
adc
or
sbb
push
xor
jne
cmp
decb
test
pop
mov
mov
les
xchg
push
cmp
xor
je
outsb
subl
xchg
lds
ja
xor
fildll
pop
bound
mov
rcr
das
mov
and
mov
pop
aad
jmp
iret
nop
gs
xlat
nop
inc
and
imul
xchg
lret
pop
call
push
mov
sbb
pushf
xchg
or
inc
mov
jmp
je
frstor
lret
add
sub
mov
dec
inc
pop
sub
call
cmp
inc
insb
jno
lret
addl
mov
bound
in
lcall
push
push
mov
aas
dec
xlat
xor
lods
cmpsb
add
dec
pop
xor
dec
out
sbb
cmp
std
jns
or
ss
cmpsl
inc
addl
mov
adc
cmp
test
cld
loop
insb
scas
rcr
es
push
dec
sbb
into
mov
and
mov
push
negl
add
cwtl
out
nop
call
loopne
xchg
mov
call
dec
in
pop
daa
inc
sub
imul
lcall
out
out
js
das
or
xchg
lock
movsl
faddl
imul
mov
scas
lods
pop
and
in
pusha
cli
cmp
and
mov
mov
jp
inc
les
outsb
and
pop
jae
int3
push
lea
mov
or
adc
in
lcall
fs
or
cltd
aam
jne
mov
add
enter
sbb
push
mov
rcrl
je
lea
loopne
std
pushf
cmp
aad
sahf
mov
inc
gs
jl
adc
mov
xchg
repnz
and
or
mov
sbb
cmp
push
cmpsb
add
xchg
and
xchg
add
aaa
inc
fimuls
out
adc
push
pop
ss
push
hlt
and
or
out
sub
mov
mov
std
sbb
popa
bound
add
mov
in
mov
xchg
nop
arpl
lahf
pushf
xlat
sub
add
fwait
and
cmp
inc
jmp
out
dec
int3
stos
dec
aad
mov
jae
adc
or
lods
imul
repnz
mov
fdivrl
lret
dec
sbb
aad
adc
dec
add
mov
stc
cmp
aam
ret
fdivrl
xchg
loope
data16
lret
into
push
ljmp
decl
xchg
iret
loope
pop
jg
and
fadd
es
jge
lret
pop
and
add
andb
pop
push
in
in
bnd
inc
dec
add
enter
ret
js
into
aaa
movsl
adc
insb
int3
and
popf
fxch
pusha
shrl
jle
jo
lods
out
je
shlb
pusha
push
lods
jbe
stos
and
div
rcrl
in
xchg
ja
aaa
push
imul
jae
movsb
xor
stc
push
cmpsb
cltd
xchg
xchg
enter
nop
jl
sbb
cs
mov
add
int3
test
inc
jo
clc
adc
mov
lods
not
jns
dec
jmp
lret
xor
popa
jg
mov
stc
inc
loopne
mov
xor
sub
xlat
dec
ret
mov
pop
inc
xchg
imull
jne
cld
add
dec
xor
dec
movsl
loopne
ror
jl
ret
sbb
mov
insl
inc
mov
in
push
mov
fnstsw
cmp
stos
js
cmp
sbb
dec
fnstenv
sbb
mov
xor
mov
mov
ss
push
rorl
sub
sub
cltd
cmp
jmp
dec
xchg
dec
push
xchg
loop
mov
push
mov
sti
cli
pop
xor
or
xor
pop
mov
dec
stc
cmpsl
adcl
xchg
inc
or
mov
and
inc
fadd
push
shrb
std
xchg
mov
movb
incl
lods
cltd
mov
or
sub
dec
cmp
or
mov
repz
mov
jecxz
sub
fistl
ja
ds
lea
fstps
ljmp
dec
repnz
sbb
mov
xchg
js
dec
xchg
scas
dec
adc
xchg
sub
and
lock
aaa
or
dec
mov
add
jmp
call
jecxz
dec
mov
int3
sub
ss
outsl
fnstsw
and
or
dec
cld
repz
mov
inc
or
push
aaa
xor
insb
cwtl
insb
jmp
sbb
dec
loope
shl
sub
sub
push
pop
movsb
rcll
lods
andb
pop
in
stos
mov
leave
sbb
xchg
std
filds
mov
mov
repz
sbb
in
sbb
mov
aaa
cmp
lret
sub
mov
insl
mov
pop
in
sbb
sbbl
inc
dec
mov
test
lods
mov
jmp
lock
scas
fcomps
fcmovu
jmp
loop
and
mov
roll
mov
icebp
lahf
clc
xor
pop
lahf
xchg
xchg
adc
in
mov
lock
jo
lret
adc
mov
mov
dec
addb
mov
ja
jmp
sbb
mov
enter
hlt
andl
or
push
cltd
test
mov
add
cmp
cmp
int3
insb
loop
sahf
popf
mov
fdivr
stc
hlt
push
cmp
pop
jae
and
xor
lcall
xchg
icebp
cmp
out
xchg
ljmp
mov
mov
movsb
popf
push
fcoms
mov
xor
pop
sbb
jbe
mov
add
jp
shll
loope
mov
xor
sbb
or
sahf
push
dec
fsubl
out
pextrw
outsb
adc
loop
aad
scas
icebp
jmp
sbb
xor
xlat
les
xchg
sub
clc
icebp
test
lahf
inc
insb
cmp
pop
les
arpl
and
xchg
not
idivb
lcall
cwtl
test
pop
sub
pop
inc
mov
lret
add
cld
sbbl
fstl
dec
and
test
icebp
sar
orl
jp
mov
mov
icebp
fistpll
into
movsl
mov
aaa
repnz
lahf
push
cmp
scas
pop
jno
inc
push
cmp
or
rcll
fldenv
repnz
jne
or
cs
lods
sti
int3
out
add
mov
xor
sbb
sbb
cmpsb
xchg
jb
das
mov
scas
rclb
imul
pop
inc
pop
imul
pop
into
pop
mov
and
fisubl
mov
aaa
mov
sahf
add
orb
adc
les
inc
movsl
inc
jo
out
push
jne
insl
lods
xor
mov
loop
sub
out
fldl2t
arpl
dec
das
adcb
inc
loope
data16
xchg
xchg
xchg
xchg
lahf
leave
inc
lret
addb
cltd
jno
mov
or
dec
lods
or
xor
mov
dec
inc
sbb
inc
mov
repz
add
fbstp
pop
sub
in
or
iret
movsl
cmp
cmpsb
bound
pop
shrb
cmp
xor
ret
jle
jae
fwait
es
inc
loope
mov
or
shrb
bound
inc
lea
ret
jecxz
cmp
cwtl
pop
call
repz
and
outsl
lods
shrl
adc
filds
pop
lea
adc
xchg
or
sbb
je
test
or
lcall
scas
push
dec
dec
pushf
dec
jl
cmp
and
mov
stos
xchg
data16
xlat
aaa
test
imulb
sbb
cmp
adc
nop
out
rorb
cmpsl
jne
push
and
push
sarl
sbb
test
mov
cmp
xchg
js
fwait
insl
xchg
lea
and
daa
dec
adc
and
mov
inc
mov
in
insl
fdivrl
lahf
in
mov
sbb
or
movb
push
ret
pop
jmp
mov
in
dec
mov
xor
inc
in
sbb
cs
xlat
loopne
sub
bnd
mov
sbb
mov
repnz
jge
inc
jle
sbb
cmpsb
in
cmp
rorl
xchg
add
mov
xlat
adc
in
into
fimuls
insb
or
and
cltd
mov
sub
je
lds
mov
dec
mov
sbb
pop
mov
cmp
sub
pop
sub
push
pop
mov
aaa
xchg
xchg
cmc
pop
rcr
push
xor
lcall
jle
shlb
es
imul
mov
jp
sbbb
fsubrs
test
int
mov
or
and
mov
cmp
mov
and
inc
dec
icebp
into
mov
pop
xchg
aaa
call
aas
scas
jecxz
fildl
dec
pusha
stos
dec
clc
shll
mov
mov
pop
shlb
xchg
inc
or
fsub
ret
push
jo
std
add
movsl
clc
jg
mov
adc
mov
pop
cmpsl
push
xchg
aas
popa
enter
bound
lret
push
sbb
popa
mov
lcall
test
js
mov
pop
xor
lea
and
dec
mov
push
daa
fldcw
mov
bound
out
imul
popa
loop
mov
jbe
add
mov
xor
repnz
mov
or
mov
xor
cwtl
jo
aas
pop
sub
pushf
pop
inc
add
xlat
mov
and
rclb
mov
scas
jns
mov
in
pop
test
insb
mov
popa
sub
jns
adc
sahf
cmp
mov
cwtl
push
jb
lods
lods
loop
cmp
lods
repnz
add
fwait
dec
pop
mov
daa
or
nop
dec
cmp
clc
mov
pop
or
jg
mov
push
ficomps
xor
adc
jl
inc
movsb
mov
and
jecxz
mov
cmp
aas
cltd
je
ds
xor
out
pushf
sbb
in
push
cmp
xchg
int
push
pusha
add
xchg
scas
lret
jns
xor
ficoms
and
fiadds
pop
mov
xchg
dec
pop
inc
std
jg
push
fists
fs
pop
leave
jge
sbb
xor
and
popf
push
or
pushf
xor
mov
jb
cmpsl
dec
or
adc
cli
mov
jg
daa
lcall
jno
cmp
leave
cmp
mov
or
sahf
lahf
imul
nop
aad
jp
xchg
in
push
cmp
lock
test
mov
dec
stos
mov
hlt
dec
or
lods
adc
cmp
xchg
loopne
sbb
jge
sub
shlb
lret
mov
imul
pop
ret
jnp
dec
out
decb
test
out
push
rolb
mov
mov
xor
and
adc
inc
imul
or
imul
sbb
repnz
cmp
out
cmp
hlt
ror
push
add
mov
mov
inc
push
inc
mov
mov
push
aas
sub
aad
mov
jns
push
lret
jecxz
adc
adc
ss
adc
jle
cmp
bound
leave
fisttpl
sub
mov
int3
outsb
pop
jg
sub
jg
mov
push
push
shll
iret
add
adc
fsub
and
popa
push
inc
js
movsb
cmpsl
loop
jne
inc
je
ljmp
adc
mov
lret
ss
fstp
scas
and
add
xchg
lock
sbb
pop
inc
inc
xchg
jmp
iret
js
pop
ljmp
bound
jg
and
std
loop
xor
popa
fldl
push
ljmp
in
mov
sbb
out
bswap
sbb
push
testb
shrb
loopne
insb
imul
mov
div
mov
sar
mov
fsts
popf
push
push
and
arpl
flds
jg
xchg
rcrb
jp
iret
mov
cltd
lahf
aam
movsl
repnz
adc
cmp
idivb
shlb
mov
inc
push
push
or
sahf
dec
or
int
nop
insl
mov
push
ret
xor
insl
adc
int
xlat
je
jbe
stc
hlt
jns
lahf
popa
mov
sbb
les
jae
out
mov
add
ret
jo
and
or
pop
or
jo
mov
add
pushf
sbb
bnd
ja
and
adc
daa
ds
or
sbb
lds
outsl
test
mov
scas
cmp
add
inc
cmp
stos
int3
out
ret
hlt
imul
mov
fwait
outsb
aad
lcall
inc
testb
dec
jle
adc
sbb
fwait
ds
mov
mov
lods
pop
out
push
mov
idivb
mov
sub
rcr
cmp
call
ds
and
rorl
inc
xor
dec
ljmp
jnp,pt
pop
dec
jo
insb
xchg
adc
pop
clc
out
fadd
dec
inc
jmp
sbbb
pop
das
sar
jb
repnz
push
sub
and
loope
sbb
repz
fistl
adc
lret
or
cmc
shll
adc
mov
out
add
pop
push
adc
outsl
pusha
test
cs
sbb
gs
or
loop
iret
int3
mov
jl
jo
mov
scas
adc
rcll
add
xchg
repnz
mov
into
jno
mov
mov
into
packssdw
lods
adc
rcr
and
mov
adc
mov
clc
sahf
inc
cmpb
jbe
in
mov
jmpw
mov
aam
cltd
fsubrp
sub
lcall
pop
cmp
dec
jle
dec
sti
pop
into
add
pop
push
fisubrs
mov
stos
popf
ljmp
cld
ficompl
jo
xchg
mov
in
sub
je
jl
lods
mov
fidivl
es
jp
jbe
hlt
ret
inc
ret
push
add
fstpl
mov
test
cmp
mov
sbb
cmp
push
push
and
xchg
jmp
imul
sar
inc
out
add
jns
pusha
in
dec
movsb
cmp
cli
pop
inc
mov
mov
xchg
lds
movsb
es
cmp
mov
lahf
inc
cmp
cmpsl
aaa
outsb
out
pop
pop
and
movsb
clc
xor
cmpsb
mov
xchg
aad
inc
repnz
cmpsb
jb
sbb
or
imul
ljmp
jge
aaa
cmp
push
and
jp
mov
mov
sub
pop
inc
inc
out
sti
cmpsb
xchg
int
mov
mov
or
jle
stc
push
mov
lret
sarb
ss
pop
sub
movsb
int3
mov
test
mov
sbb
loop
lods
mov
insl
inc
mov
jmp
push
adc
or
sub
shl
sub
pop
lea
pop
movsl
pop
add
outsl
cmp
fisubrl
sub
and
cmp
out
xor
or
or
inc
xlat
les
push
adc
jg
fwait
jecxz
sarb
bound
push
outsl
inc
leave
push
inc
dec
out
inc
fdiv
add
lds
jge
xchg
movsb
fsubl
sti
out
pop
scas
or
push
js
jecxz
loope
cmc
std
call
jecxz
vpshad
repnz
jno
movsl
int
inc
std
xor
and
leave
insb
sbb
das
and
data16
loopne
ffree
shlb
jle
arpl
mov
into
mov
mov
loope
cmp
movsl
into
xchg
push
and
add
jle
adc
mov
pushf
in
jo
inc
filds
mov
js
std
js
iret
fidivl
stos
lahf
pushf
iret
push
inc
ljmp
insb
sub
mov
xor
dec
pop
jecxz
add
xor
add
loope
movsb
ret
fs
das
xchg
jmp
adc
adc
and
repnz
mov
xchg
out
cmpsb
lods
and
mov
mov
pop
xchg
data16
and
sbb
ret
mov
sub
cmp
cmp
ret
mov
jp
or
adc
inc
and
dec
mov
inc
imul
call
or
leave
filds
push
sub
add
flds
mov
pop
fwait
out
xor
adc
add
out
test
jbe
xor
mov
pop
movsl
or
jge,pn
cmp
or
ret
int3
out
pop
stc
sub
add
out
dec
pushf
fsts
lret
fmull
into
pop
sbb
mov
sbb
or
aas
ret
rep
jg
icebp
stc
xor
vandnps
or
inc
test
test
sahf
inc
inc
xchg
aaa
add
iret
sub
cmp
xchg
stos
imul
mov
mov
cmp
outsb
stos
arpl
insl
outsb
ror
adc
lods
imul
sbb
addb
push
lock
arpl
cmpsb
inc
clc
lock
ljmp
pop
fnstcw
add
sarl
lahf
dec
les
or
mov
addr16
pop
je
scas
mov
scas
cli
sbb
sahf
jle
xchg
dec
roll
aas
ja
sub
add
jle
pop
test
or
pop
pop
mov
movsb
out
mov
push
lret
add
sti
adc
out
mov
lahf
movsb
pop
leave
or
clc
js
iret
mov
push
adc
mov
dec
arpl
push
mov
cli
sahf
mov
dec
inc
adc
inc
and
aad
fxch
cli
fisubl
push
jo
sbb
jge
js
xor
dec
jne
aas
lock
jnp
or
je
leave
cmpsl
outsl
add
adc
jecxz
add
arpl
enter
loop
scas
aas
push
stos
data16
inc
sub
xchg
and
nop
sub
les
nop
cmp
add
mov
lcall
pop
in
inc
inc
push
test
add
ljmp
nop
jmp
movsl
mov
mov
fcompl
cmc
shll
adcl
cli
jns
sub
pop
ret
sbb
push
inc
dec
aad
dec
fsubl
movsl
cmp
push
mov
pop
in
push
jns
jne
leave
mov
fcoms
loope
inc
loopne
pop
xor
push
popa
iret
adc
cmc
cwtl
pop
lods
or
add
cli
cmpsb
mov
fidivrs
ja
cmc
and
call
xchg
sub
add
or
mov
sbbl
cmp
inc
lods
int3
push
rcrl
push
push
nop
add
out
mov
out
jmp
dec
movsb
pop
jl
inc
aam
cwtl
ljmp
scas
pop
insb
movsb
jb
lcall
lret
jl
jl
or
inc
sbbl
dec
bound
xchg
add
mov
int
rcll
pushf
xor
icebp
xchg
or
sbb
xor
cmc
enter
xor
jae
popf
push
or
daa
inc
cmp
add
dec
mov
jae
mov
xor
pop
mov
xor
mov
lods
sbb
dec
jmp
add
push
xor
xchg
es
jbe
inc
es
or
xor
je
jl
fwait
cltd
lret
jecxz
mov
lds
daa
mov
imul
lret
popf
sahf
leave
notl
mov
push
stos
dec
fldcw
xor
jle
out
aaa
xor
jge
imul
enter
enter
outsl
dec
lret
jmp
adc
pushf
xor
push
push
cli
xchg
xchg
inc
les
push
js
push
pop
adc
sub
xchg
stos
aad
repnz
or
pop
cmp
sbb
cmp
add
jae
nop
negb
cmp
pushf
mov
cmpsl
mov
add
pushf
jnp
std
repnz
sbb
insl
inc
andb
add
scas
cmp
outsb
cmp
subb
sar
cmp
bound
dec
mov
mov
and
stos
shl
and
jo
mov
mov
daa
gs
cmp
mov
xor
or
xchg
outsb
pusha
aam
das
cmp
mov
lcall
inc
dec
push
cwtl
sbb
incl
ljmp
scas
jle
mov
js
dec
icebp
scas
int
into
sbb
and
xchg
jecxz
sub
and
mov
xchg
adc
and
jns
and
lea
inc
ja
xorb
dec
mov
ja
xchg
out
adc
xchg
jecxz
test
out
lret
mov
dec
notb
mov
stos
cmc
sub
adc
or
add
popa
ss
scas
movsl
lret
mov
or
xor
dec
cmp
mov
clc
bound
cmp
push
add
shr
movsl
cmpl
movsb
push
loop
pop
inc
popa
adc
or
cmpsl
and
add
jno
out
mov
sbb
ret
add
adc
pop
std
mov
lcall
ds
xorl
lock
and
movsb
js
sbb
rol
insl
mov
dec
lret
ds
pop
cmc
jmp
pop
mov
inc
fcoms
and
insl
push
lods
sbb
adc
cmp
add
dec
and
cmp
push
or
jge
andl
pop
scas
test
jnp
fisttps
xchg
test
add
test
insl
rcrb
push
and
and
push
jge
inc
lret
mov
rol
sti
jmp
aaa
arpl
rol
push
aam
mov
push
jp
xchg
push
xchg
dec
add
das
arpl
mov
adc
push
arpl
imul
push
pushl
xchg
xlat
xor
in
add
xchg
loopne
sbb
imul
addr16
xchg
add
addr16
sbb
arpl
or
push
cwtl
iret
mov
out
test
push
ja
ds
cmpsb
clc
mov
lds
dec
and
test
sub
inc
add
enter
xor
adc
jle
aas
pop
test
test
jle
insl
loope
xor
push
xchg
inc
rcr
jo
add
out
mov
sar
out
sahf
leave
mov
jbe
mov
sbb
xchg
insl
hlt
shrl
pop
jno
push
int3
and
addb
cmp
jp
daa
addr16
push
xchg
add
arpl
adc
jl
in
xchg
rorb
sub
pop
jns
mov
stos
jecxz
xchg
add
inc
test
cld
mov
rcrb
testb
or
dec
xchg
pushf
add
fidivrs
bound
cvtps2pi
and
pusha
push
jmp
ss
pop
je
popw
pop
loope
xchg
ljmp
dec
sbb
mov
mov
sub
int
inc
into
jne
aas
and
push
mov
ljmp
mov
stos
int3
inc
lock
push
mov
push
or
aaa
add
xlat
out
gs
and
stos
flds
fisttps
sti
subb
pop
ret
push
or
lods
add
leave
inc
add
push
cmp
inc
clc
aaa
cmp
inc
aad
cmp
sarl
mov
repnz
adc
jno
outsl
jae
jmp
xchg
mov
or
dec
sub
adc
dec
xor
loopne
jnp
jnp
flds
int3
sub
dec
xor
inc
inc
sti
push
and
push
das
sbb
add
inc
pop
and
adc
fidivl
xor
cmp
lret
shrb
adc
out
cmp
push
mov
dec
or
sbb
sub
ret
mov
cmpsb
mov
fisttps
xor
jmp
push
icebp
jg
mov
xchg
mov
fstpl
out
cs
imul
adc
sbb
push
cmp
int
negb
aas
push
dec
cli
js
mov
lock
hlt
mov
mov
sbb
call
leave
outsb
orb
jp
cmp
mov
dec
or
push
add
adc
dec
lret
ret
insb
jge
sub
and
out
jecxz
insb
mov
adc
aas
cld
xchg
jg
dec
mov
adc
stos
mov
js
or
pop
xchg
js
testb
mov
sbb
and
pop
and
sub
dec
ja
push
subl
adc
jns
cmpsl
push
decl
out
jbe
into
dec
xor
jae
andl
cmp
shlb
adc
sbb
inc
sbb
add
movsl
fsubl
leave
push
js
pusha
les
imul
fwait
loop
sub
push
or
out
mov
scas
bound
rolb
or
dec
mov
scas
lahf
shlb
pop
fdivrs
xor
arpl
arpl
test
mov
push
pop
fnsave
lods
lods
pop
fcos
pop
fistpl
popf
fildll
icebp
outsb
sub
outsl
and
or
or
repnz
xchg
mov
mov
movsb
movsb
addr16
fnstsw
push
push
pop
mov
out
pop
les
mov
cld
mov
fcmovu
rolb
push
test
imul
pop
and
xchg
sbb
fisubl
sbb
faddp
lock
ljmp
shrb
pop
push
inc
xchg
or
inc
popa
in
jge
loopne
mov
inc
loopne
cli
out
mov
push
cld
xchg
jmp
rorl
adc
jl
es
sub
int3
out
push
data16
or
orb
xchg
sahf
cltd
mov
fsubr
inc
push
subb
pop
test
jl
loope
push
pop
or
lds
or
ds
sub
in
or
cmpsl
imul
or
pop
rorl
pop
mov
into
adc
pop
inc
daa
lcall
stos
rorl
popf
sbb
xor
pop
movsl
push
iret
lea
enter
pop
push
pop
push
or
add
push
stos
mov
mov
jb
or
push
fs
rclb
push
fwait
mov
mov
xchg
pop
out
xchg
or
sub
push
cld
sbb
jmp
scas
mov
add
dec
andl
add
sti
or
shll
adc
ss
mov
pop
sbbb
add
cmp
bound
sub
push
or
sti
iret
mov
pop
push
xchg
std
cmpsl
adc
ja
push
mov
and
push
mov
mov
outsb
lahf
stc
cmpb
mov
xchg
int3
pop
xchg
lods
jo
ljmp
push
pop
ret
push
ficoms
outsl
xchg
push
push
repnz
inc
inc
or
popa
cltd
shlb
nop
rorl
jo
movsl
or
inc
imul
test
fisubrl
ret
lea
adc
fsub
inc
in
loope
hlt
push
mov
dec
sbb
loop
xchg
jp
mov
aas
mov
push
add
cmp
sbb
hlt
das
or
pushf
jg
cmp
pusha
iret
icebp
mov
in
dec
pop
aad
pop
outsl
push
jo
jo
lock
jns
or
sbb
push
popa
mov
push
mov
ret
mov
ficompl
in
mulb
gs
les
lea
gs
ficomps
push
mov
lock
sub
pop
loope
pushw
pop
lcall
add
lods
gs
lods
call
iret
sahf
push
je
adc
mov
in
dec
push
dec
ret
in
sbb
ret
sub
adc
ret
add
pop
lock
int3
test
cld
hlt
sub
loopne
movlps
sub
sbb
pop
push
gs
and
cmpsl
aam
clc
fwait
lock
mov
mov
jb
adc
or
xlat
andl
in
xlat
imul
or
jle
cmpsb
jns
cmp
mov
push
mov
enter
dec
or
push
xor
mov
mov
lock
ss
sub
stos
xchg
adc
lods
int3
cmp
out
and
or
inc
mov
data16
cmp
popf
ss
xor
fcompl
inc
add
mov
ss
mov
adc
mov
and
or
xchg
aad
loop
fmull
in
pop
add
cmpl
lods
ds
mov
pop
xor
mov
dec
loope
insl
inc
jge
insb
insl
or
xchg
popa
xor
mov
int3
mov
je
cmc
jne
daa
dec
cwtl
arpl
out
insl
into
fldenv
movb
ljmp
aas
leave
fsubrl
and
mov
jnp
and
push
ret
add
mov
cld
xchg
loop
adc
jb
jb
fisubl
fidivs
xchg
shl
xchg
jo
inc
stc
fs
bound
in
sahf
jecxz
add
and
sti
mov
inc
bound
jnp
mov
xlat
shrl
xor
in
xlat
xchg
mov
push
push
and
repz
add
repz
stc
stc
jecxz
movl
sub
call
je
jmp
cmp
lea
push
mov
int
jo
sti
sbb
push
add
sub
jle
test
fs
cmc
dec
dec
cmp
and
and
sub
pop
call
sbb
inc
and
rcll
xor
adc
fcoms
ja
cmp
loope
jmp
nop
xchg
stos
push
pop
loopne
cmp
imul
push
pop
sbb
lods
ds
aam
xor
jmp
repz
arpl
lea
arpl
cmp
mov
ret
arpl
xor
andl
sbb
sarl
sahf
shrd
pushf
enter
loope
sti
aaa
jge
cmp
out
inc
jo
enter
popf
adc
sbb
mov
test
jne
aam
pop
pop
inc
fisttps
negl
cmp
sub
mov
jp
outsb
sub
daa
cmpsb
mov
cmp
cmp
lret
test
push
pop
add
mov
loop
out
jne
int
in
imul
fstl
jo
test
test
cmp
mov
or
fldenv
test
add
outsb
xor
add
mov
enter
lds
jo
iret
cmpsl
push
arpl
orb
push
push
xchg
mov
test
push
sub
outsb
xchg
and
inc
and
or
movsl
xchg
fnstcw
test
test
jp
aaa
adc
or
dec
mov
and
shrl
mov
pop
mov
cmp
jecxz
sbb
outsl
clc
add
leave
shl
sbbl
mov
sbb
out
xchg
adc
jecxz
gs
out
jge
ud2
lret
sub
sub
rorl
ja
jle
mov
add
ret
adc
cld
mov
pushw
mov
popf
sbb
dec
js
mov
xchg
mov
pop
mov
mov
aad
inc
adc
xor
push
add
mov
insl
pop
inc
pop
loopne
mov
sahf
inc
mull
clc
sbb
jge
dec
fucomi
data16
or
sub
clc
lds
outsl
std
jo
dec
stos
int
fcoms
cmp
xchg
or
shlb
mov
mov
pop
les
stos
ja
in
into
loope
repz
xchg
leave
aaa
arpl
fldenv
addr16
ret
push
cltd
cbtw
and
fwait
cmp
int
sub
jnp
lret
int
jg
mov
imul
test
enter
add
jmp
mov
pop
iret
ja
or
in
sbb
push
lcall
jg
add
mov
xchg
inc
in
xchg
sbb
cmp
loope
push
pop
faddl
daa
imul
and
popa
mov
out
pop
cmp
dec
incb
inc
xor
imul
xchg
pop
gs
sub
mov
mov
mov
fmul
or
ja
sahf
xor
jecxz
outsl
mov
xchg
add
xchg
xchg
sbb
cmp
push
lock
das
orl
pop
or
cmp
xchg
rcll
test
int3
jmp
ret
xchg
mov
push
cmc
cltd
cli
sti
xchg
jns
add
xor
gs
fisttpll
mov
pop
movsb
cmpsl
inc
jle
idiv
cmp
add
std
out
mov
jns
sbb
insl
in
xlat
stc
xchg
or
pushf
dec
adc
cs
int
pop
outsl
lock
cmc
ljmp
jecxz,pt
push
cmp
pop
dec
movsb
into
outsl
dec
sbb
int3
and
mov
shl
lods
fs
push
je
ljmp
jns
jecxz
iret
mov
add
es
xchg
ret
push
add
sbb
sub
into
pop
test
scas
cmp
push
int3
sub
mov
and
sub
std
inc
popf
in
inc
arpl
test
rol
mov
mov
pop
push
cltd
into
mov
or
or
inc
stc
mov
sub
out
jp
lcall
repz
aas
adc
push
cmp
shr
sbb
ds
or
insb
push
out
push
call
ja
cmp
cmc
in
jge
test
lods
aas
ret
ss
pushl
in
leave
int
rolb
test
scas
sbb
xlat
lcall
xlat
js
sbb
lds
icebp
push
xchg
fcom
and
lods
mov
jl
mov
xor
jo
jl
xor
test
or
cmp
xor
inc
pop
ss
fnstsw
jg
aas
sti
mov
shrl
inc
ljmp
je
and
popa
pop
mov
fildll
fcomps
inc
and
push
sbb
jg
in
out
mov
push
fnstenv
popf
push
mov
out
dec
mov
dec
shlb
jmp
jb
outsb
dec
xchg
xchg
sub
push
push
cmp
loope
loope
push
ja
xchg
xchg
inc
xor
rcrl
pop
mov
loop
insl
mov
sbb
jl
enter
iret
hlt
shlb
sti
push
xor
sub
mov
or
jae
rclb
aam
sub
or
push
add
push
dec
mov
jbe
pop
shrl
outsb
mov
jbe
push
push
push
dec
ret
pusha
push
pop
ficoms
mov
and
dec
jmp
sub
jl
pushf
push
pop
stos
pop
subb
jge
mov
rcrb
outsl
or
xchg
jnp
dec
mov
ljmp
cli
test
cwtl
jno
mov
bound
dec
jmp
xor
cmc
sbb
or
aaa
cmp
xlat
jo
sbb
mov
mov
das
call
mov
cmp
hlt
daa
pop
mov
shll
aam
and
je
jno
cmc
int
cmp
cmp
adc
jg
push
stos
movsb
push
inc
sbb
movsl
addb
loopne
rcl
xor
add
test
adc
movsl
sbb
bound
dec
sub
test
sub
fwait
jne
mov
add
int
xor
sub
jns
mov
out
push
mov
add
jae
push
imul
and
cmc
pop
rcrl
ljmp
pop
sarl
sbb
pop
lcall
pop
mov
int3
mov
imulb
sub
imul
and
xchg
xorl
stos
sbb
mov
pop
cwtl
push
xor
or
call
test
cmp
pushf
cwtl
test
outsl
jae
test
fiaddl
dec
mov
test
les
jge
inc
xchg
inc
or
add
shll
cmp
stos
mov
mov
andb
push
xlat
cmc
jge
mov
sbb
mov
jle
xchg
jl
add
jecxz
push
out
push
push
sub
loopne
add
push
outsb
xchg
xor
xlat
sub
or
in
fmul
mov
clc
sub
mov
lock
call
test
rorb
pop
ds
inc
shrb
sub
xlat
pop
add
jne
push
sbb
cmpsb
dec
mov
dec
ljmp
aam
pop
xor
gs
js
dec
push
cmp
mov
insb
sub
jecxz
xchg
or
mov
push
dec
xchg
lock
sub
xor
sbb
jae
pusha
bound
lea
xor
adc
cmc
jb
jl
nop
out
mov
pop
lds
xchg
xchg
vsqrtsd
stos
out
enter
and
xchg
jle
xlat
in
rol
cmp
hlt
fs
cld
pop
jecxz
cmpsl
xor
in
arpl
and
stos
popa
js
cmp
adc
movsb
out
cmpsl
ss
in
jne
scas
imul
cmpsl
or
lcall
test
in
aas
arpl
jp
xchg
xor
and
inc
mov
adc
hlt
xchg
add
adcb
sbbb
and
jmp
ds
and
popa
gs
add
ljmp
or
mov
xor
in
pop
andl
xchg
or
call
mov
xor
out
fiaddl
pop
sti
andl
das
mov
mov
loope
std
movsl
int
stc
push
adc
mov
lock
outsb
in
fidivs
aam
cmp
add
fcoml
es
push
pop
xchg
aad
mov
push
ljmp
xchg
enter
ss
or
jb
pop
dec
stos
xor
mov
andb
lahf
mov
in
sbb
jecxz,pn
jnp
cmp
mov
mov
push
outsl
xor
into
pop
push
adc
jp
pop
sbb
mov
xchg
xor
jae
ljmp
pop
mov
fisubl
adc
fistl
mov
mov
adc
inc
cli
cmp
sbb
sar
es
cs
lds
cmp
gs
aad
adc
mov
sahf
clts
adc
and
cmp
cmp
push
sub
insb
push
push
xor
cmp
movsb
and
push
mov
cmp
sub
imulb
mov
jnp
popf
sub
jmp
jle
jmp
icebp
push
test
xor
repnz
cmp
out
cld
jno
fsubl
adc
sbb
fists
add
jmp
stos
mov
xlat
ljmp
pop
insb
mov
rcl
out
iret
in
popf
cli
dec
fmuls
test
inc
mov
leave
xchg
out
aas
add
mov
faddl
jo
sbb
and
sub
repz
dec
sahf
cmpsl
lock
xor
imul
sahf
cmp
std
rdmsr
sub
cmp
es
push
sub
fsts
ds
fldl
popfw
cmp
sbbl
addr16
push
cmp
xor
lds
mov
rclb
lods
mov
inc
daa
negl
mov
pop
in
ret
popa
mov
shl
mov
fildl
in
and
mov
test
testb
aas
ret
push
subl
mov
xlat
xor
ss
mov
pop
bnd
lret
push
mov
push
lods
xchg
outsl
lret
loop
xor
push
dec
rcrl
es
andl
mov
dec
rcrb
add
repz
push
push
jle
ss
jp
popf
mov
pop
mov
inc
outsl
xchg
adc
dec
lret
inc
std
sbb
push
and
dec
int
loop
stc
hlt
dec
aas
cs
and
lahf
loope
call
pop
ficoml
outsl
nop
xor
movsl
push
movsl
mov
sbb
push
mov
ret
dec
lods
test
jno
cmp
rcrl
fstl
sti
ret
add
lds
pusha
ret
mov
cltd
imul
movsb
in
repnz
pop
push
pop
lcall
sbb
pop
scas
fdivl
aad
ja
dec
fs
jecxz
cwtl
mov
mov
push
repnz
mov
jg
inc
das
push
sbb
cs
div
loop
rolb
lds
inc
enter
sbb
outsb
push
cli
stos
xchg
mov
aam
pop
push
jg
popf
mov
push
insl
adc
dec
into
fimull
ja
lock
push
bnd
icebp
jno
ret
and
or
icebp
push
test
mov
je
mov
or
cwtl
xor
pop
negb
popl
sbb
out
mov
icebp
ja
inc
cmp
insb
sub
mov
aas
mov
jbe
lods
in
enter
lock
cmpsl
outsl
das
xchg
stc
jae
rcl
pop
mov
neg
ret
lods
dec
push
jbe
cmp
repnz
or
movsb
push
jno
add
dec
push
or
imul
cmp
ja
cmp
xor
mov
push
sarb
jo
mov
movsl
popa
movsb
add
jmp
inc
orl
mov
fimull
popf
or
test
mov
adc
or
cmp
rclb
cmp
sub
mov
mov
nop
lret
je
dec
dec
jge
push
int3
in
ljmp
or
jne
jl
and
addr16
jle
movsb
shrb
rcrb
sbb
pop
pushf
in
inc
push
rcrb
mov
adc
sub
mov
andb
sub
stos
insl
mov
gs
mov
frstor
adc
leave
or
neg
sbb
lods
or
imul
push
cmpsl
insb
xchg
sbb
xlat
andl
mov
adcl
jb
jo
stc
add
mov
dec
inc
popf
sbbb
xorb
lea
xor
xchg
fs
mov
popa
lret
inc
lea
push
je
stc
mov
add
arpl
pop
xor
cld
int
lods
mov
add
scas
call
push
mov
lods
loop
cmp
lds
sub
sbb
ss
sub
dec
or
ror
cmp
test
push
mov
cmp
idiv
pop
out
push
insl
mov
int
push
ja
das
lea
pop
add
loopne
jge
fmul
mov
test
mov
sub
mov
sbb
and
push
outsl
jb
or
mov
jmp
inc
mov
sub
movsl
jbe
push
xchg
pushf
int
add
inc
mov
sbb
sub
fdivl
pop
cmp
cmp
in
fbld
push
dec
mov
aad
aad
mov
out
mov
or
les
adc
cmpsl
aas
mul
pop
aaa
mov
out
int3
add
ds
iret
nop
popa
jne
push
dec
xor
addr16
out
inc
ret
mov
dec
arpl
xchg
sar
dec
mov
jle
dec
lea
jl
imul
pop
arpl
sbb
dec
mov
leave
mov
mov
in
push
test
test
jl
jnp
outsl
xchg
in
or
shr
sahf
xchg
mov
cmpsb
ljmp
mov
sub
sbb
std
sarb
mov
add
sahf
icebp
and
or
pop
decl
call
or
loop
mov
cwtl
cli
sub
mov
in
imul
push
mov
dec
js
insl
jne
push
push
lock
imul
adc
pop
mov
or
cmpsb
cmp
sub
inc
inc
hlt
cmpsb
stos
les
std
sub
sarb
add
int
std
int
cmpsl
int
mov
pushf
aam
inc
in
mov
aas
or
jg
push
xor
movsb
inc
mov
out
xor
in
rol
aam
aaa
mov
push
sub
dec
xbegin
movsl
jl
and
es
pop
insl
adc
lods
and
xor
or
cli
mov
popf
sbb
xchg
mov
icebp
out
in
sub
aad
int3
fdivrs
cmp
and
xchg
push
loope
add
aad
lds
mov
mov
sbb
xor
daa
and
pop
mov
or
cwtl
decb
roll
mov
pop
int3
pop
ss
ja
mov
mov
fldenv
pop
push
jg
pop
lret
aas
cmp
add
dec
clc
sbb
mov
jnp
sbb
cmc
xor
test
add
je
add
cwtl
add
imul
xor
das
jge
sub
mov
js
or
test
inc
cmp
pop
xor
mov
xor
imulb
pusha
and
push
sbb
test
pop
xor
sbb
xor
or
loopne
das
scas
jge
and
jl
xor
test
inc
inc
insl
push
test
xor
cmp
push
and
add
cli
mov
lods
in
dec
pop
shll
inc
pop
daa
imul
outsl
cmp
insb
clc
sub
inc
or
lds
dec
mov
mov
addb
dec
dec
pop
shl
int3
inc
mov
xchg
add
mov
mov
push
xchg
mov
and
mov
dec
inc
cs
fidivrs
out
rcrb
inc
and
jns
push
pop
sub
ficomps
in
dec
in
insl
cmp
in
adc
pop
sbb
lcall
push
jp
test
xchg
bound
out
fldpi
jnp
into
data16
sub
inc
cmp
subl
pop
cmc
jo
filds
mov
mov
mov
jnp
cwtl
test
and
clc
and
fstpt
popa
jnp
inc
mov
pop
push
mov
es
xor
lock
ret
scas
out
inc
mov
in
jae
fisttpl
xor
sub
dec
insl
dec
sbb
xchg
dec
sahf
rcrl
and
or
dec
xor
leave
push
cli
xchg
into
ror
outsl
jg
in
push
fisubs
aas
jp
cmc
pop
repnz
ljmp
cs
aad
mov
jne
lds
mov
fs
cmp
fidivl
push
enter
push
call
xchg
cltd
sbb
or
push
movsb
pop
pusha
pop
pop
inc
mov
nop
sti
call
stos
sahf
mov
iret
nop
inc
clc
mov
and
loopne
aam
or
xor
push
stos
clc
cmp
inc
repz
imul
out
pop
rolb
and
aas
outsl
fwait
lret
rol
xor
sbb
jne
mov
stos
fidivrl
bound
xchg
and
xor
xor
jbe
js
fisubrl
sbb
mov
outsb
push
cs
mov
arpl
into
pop
pop
jo
mov
andb
js
cwtl
enter
into
pop
mov
js
add
pushf
es
dec
daa
xchg
loopne
pop
cmp
insl
jnp
jnp
dec
pop
fnsave
or
hlt
push
loopne
push
es
pop
cmp
into
movsb
clc
mov
inc
adc
jae
les
cwtl
push
sub
outsb
push
pop
test
call
ss
adc
mov
add
push
lods
fmull
inc
int
int
dec
cmpsb
cmp
sub
dec
xor
aaa
cli
pop
cs
mov
dec
aam
ds
das
cltd
add
pop
sbb
sub
hlt
stos
sbb
add
pop
push
fldcw
out
push
push
lret
dec
mov
fsub
cmp
xor
scas
fnsave
incl
nop
push
jmp
mov
popa
dec
fistl
insl
in
fs
cld
sarl
into
sbb
orl
dec
in
cmc
mov
fstpl
repz
adc
cmp
aaa
jmp
std
adc
sbb
mov
mov
lcall
inc
pop
imul
xorl
orb
rorl
pop
dec
out
jge
mov
int3
xor
mov
and
int
out
sub
or
in
int
mov
idivb
pop
data16
or
and
push
popa
xchg
mov
adc
push
cmpsb
sub
mov
pop
cs
mov
xor
dec
sbb
inc
movsl
out
aam
push
loope
jo
jmp
ds
out
sub
xchg
mov
ret
mov
bound
add
pop
pop
push
loop
shll
cmp
or
das
dec
jg
adc
push
sub
aaa
xor
xlat
xchg
movsl
out
or
ljmp
xchg
mov
add
int3
inc
mov
aas
lcall
fs
jae
mov
sub
pop
sbb
loope
sub
movsl
lods
cli
fnstcw
mov
mov
sbb
fnstcw
push
xor
dec
test
sbb
lods
add
sub
xchg
scas
xchg
loop
in
iret
lret
lahf
cmp
dec
sbb
out
lods
int3
xchg
dec
push
jle
xchg
push
and
pop
aaa
loopne
repnz
cmp
xchg
xor
lcall
and
xor
dec
xor
cmpsb
scas
das
pop
std
mov
push
clc
pop
enter
pushf
dec
fiaddl
dec
scas
cmp
std
loop
imul
adc
adc
sub
push
jge
idivb
mov
aad
icebp
pop
ss
cltd
xlat
cli
cmp
and
mov
mov
adc
idivb
adc
sub
hlt
adc
jnp
xor
mov
syscall
and
das
stos
sub
lods
mov
ret
jl
sbb
add
imul
push
sbb
imulb
jmp
jo
faddl
aam
outsl
repnz
or
icebp
enter
das
ja
enter
fmuls
cmc
jbe
xchg
and
in
not
mov
popf
inc
lds
sti
imul
cs
mov
hlt
movsl
cmpsb
add
mov
push
cmp
jb
arpl
push
int3
into
cli
xor
sub
push
xlat
pop
pop
adc
xchg
scas
rcll
aas
pop
ja
loope
fst
mov
sbb
leave
pop
xor
in
jne
dec
cli
sbb
std
mov
mov
into
out
sbb
clc
repnz
movsl
jne
fisubs
push
call
sub
push
ds
xchg
in
leave
add
push
or
in
int3
aam
jb
inc
out
je
inc
and
jp
leave
pusha
aad
nop
push
push
push
ljmp
mov
fsubrs
insb
add
test
adc
out
movsb
cmp
xchg
outsb
aad
int
dec
rcr
add
inc
arpl
xor
insl
das
imul
inc
mov
mov
lcall
sub
cmp
sbb
andb
mov
aam
push
xchg
pop
orl
ljmp
sbb
into
imul
cmp
dec
jbe
int
insl
add
repnz
mov
jne
mov
or
or
es
imull
pusha
add
lock
or
dec
xchg
pop
ljmp
jmp
xor
lock
lods
mov
sub
sbb
or
jb
jb
push
mov
cmpsl
aas
outsl
cmp
mov
jg
dec
xchg
pavgw
dec
pop
push
stc
lret
and
mov
test
call
fdivrs
enter
lret
and
movsb
xchg
push
and
inc
inc
mov
cmpsb
jmp
fdivrs
jb
push
jb
and
mov
jns
cmp
inc
adc
mov
fsubrs
out
sbb
lret
fimull
gs
add
mov
or
ja
ljmp
pushf
mov
mov
adc
adc
mov
push
cwtl
pslld
sub
cmp
mov
jmp
mov
pop
cwtl
jmp
jno
dec
roll
jnp
ftst
arpl
pop
fs
xchg
iret
push
loop
push
xor
leave
dec
movsb
jmp
sub
xchg
movnti
adc
or
sub
inc
clc
jle
imul
ds
mov
sbb
push
lret
xor
xchg
xor
sub
cmpl
mov
sar
mov
lods
mov
cmp
fisttpl
pop
jbe
inc
pop
call
mov
xor
adc
in
inc
pop
cwtl
out
sbb
in
sbb
add
xchg
into
push
ret
stc
fsubs
and
lret
sbb
add
cs
pop
fstps
jb
gs
xchg
jmp
mov
jno
lret
icebp
cmp
jg
out
inc
pushf
lods
je
mov
das
cmp
lock
and
rol
sbb
or
cmp
push
movsb
ret
add
imull
ret
dec
imul
sub
aas
inc
loopne
jp
not
data16
push
loopne
jne
cmpsb
popf
andl
jge
xchg
fxch
repnz
cli
in
loopne
and
xchg
cmpsl
decl
daa
adc
pop
cld
mov
data16
pop
adc
sbb
out
outsl
imul
ja
xchg
mov
pop
jmp
cmp
subl
xor
and
and
lods
inc
sub
mov
int
scas
xor
inc
jecxz
pop
lock
and
dec
out
rcrb
lret
in
push
pop
push
pop
out
aam
pop
pop
pusha
or
sbb
dec
test
imul
sub
jle
cwtl
mov
xchg
or
pop
mov
jg
ds
adc
mov
push
add
and
mov
xor
jns
jg
pop
adc
insb
mov
pop
mov
daa
pop
jb
sub
movsl
mov
lcall
mov
fdivl
popf
lret
iret
jl
and
cmp
sbb
jl
sbbl
fs
popl
jp
push
adc
mov
pusha
mov
nop
icebp
push
sahf
cmp
leave
xor
gs
sub
lods
jle
outsb
test
mov
pushf
adc
add
sub
test
lock
push
aas
sub
fists
sbb
push
movsl
das
arpl
jp
adc
pop
aaa
or
or
or
xor
addr16
xchg
ja
sub
les
out
outsl
dec
mov
test
add
arpl
xor
adc
mov
ret
xchg
mov
inc
mov
pop
xchg
mov
jge
add
xor
test
xchg
fcoms
adc
andb
sbb
xchg
push
mov
lret
cmp
outsb
xchg
inc
xor
add
out
lods
es
push
sub
lcall
push
jno
pop
cmc
push
or
dec
push
inc
add
leave
test
insl
xchg
xor
lret
aam
movsbl
cmpsl
push
pop
bound
sub
push
shll
popa
lahf
and
scas
pop
adc
rcll
mov
fs
shll
mov
dec
adc
or
movb
xlat
sbb
adc
pusha
mov
jp
jne
movsb
xor
mov
sahf
hlt
insb
push
jmp
pop
stos
pop
test
rcrb
imull
cli
loop
sbb
mov
sbb
or
xor
lods
pop
jae
and
in
dec
mov
fs
push
cmp
dec
fwait
sbb
inc
ljmp
imul
adc
push
notl
xor
dec
jne
add
mov
loope
ror
push
jecxz
stc
mov
sub
stos
in
pushf
and
jmp
mov
int
out
push
call
mov
addl
cs
clc
popa
and
push
je
cmpsb
cld
in
fdivrs
xchg
or
jne
cmp
dec
cmp
mov
lds
pop
rorl
iret
mov
lea
imul
and
stc
into
dec
lcall
xor
gs
cmp
mov
bnd
jmp
xchg
cmp
sub
pop
and
in
sbb
ficoms
sbb
jge
popl
inc
pop
adc
call
mov
cmp
jnp
mov
sti
mov
lods
jnp
mov
mov
sbb
add
fistps
xor
or
mov
mov
cmp
frstor
inc
mov
aam
push
popf
xchg
imul
mov
stos
popa
jecxz
outsb
outsb
stos
cmc
mov
fs
mov
mov
lret
andl
fidivrl
mov
sbb
adc
into
leave
sub
cli
jo
add
imul
and
into
jp
pop
add
adc
scas
and
lock
pop
push
mov
mov
std
push
or
mov
pop
push
icebp
loop
hlt
jecxz
push
mov
js
arpl
xcrypt-ecb
cmpsl
dec
mov
pop
mov
inc
pop
fcomps
mov
push
leave
dec
popf
test
sub
mov
dec
aas
mov
test
inc
xchg
and
mov
pop
shlb
imul
xlat
jno
adc
insl
jne
mov
lret
and
clc
bound
js
push
push
cmp
pop
rdmsr
mov
xchg
pushf
fcomp
or
or
mulb
shl
ss
pop
mov
pop
into
xchg
pusha
mov
loopne
popf
xchg
sub
dec
adc
push
test
inc
rolb
outsb
in
pop
in
sbb
lds
and
jns
dec
xchg
pop
push
iret
js
sti
int
pop
cmc
leave
data16
rorb
cmp
out
les
sub
push
or
mov
repz
adc
mov
pusha
insb
movl
mov
xor
inc
dec
lods
int3
mov
cmp
inc
push
and
jg
dec
mov
fbstp
dec
sbb
sub
cmpsl
mov
mov
in
rorb
lea
dec
fisttpll
xchg
sbb
imul
and
dec
rcr
out
push
lret
xlat
sbb
inc
in
adc
popa
stc
fnsave
push
lahf
pushf
call
cmp
cmp
mov
ret
arpl
add
push
cmpsb
and
jl
shlb
enter
movsb
scas
and
pop
js
lcall
mov
pop
incb
xchg
inc
mov
or
loope
hlt
out
inc
add
test
pop
dec
mov
pop
fwait
sbb
es
push
push
lds
sahf
rorb
int
adcb
sarl
inc
ret
inc
push
sarl
mov
add
sub
mov
push
pop
mov
fninit
imul
fdiv
jmp
jmp
rorb
sub
xchg
enter
out
rorl
sub
scas
sub
inc
iret
mov
mov
sahf
dec
jbe
mov
push
dec
cmpsb
outsb
fs
mov
mov
mov
and
mov
and
or
mov
fstpl
cmpsb
leave
cmc
mov
dec
push
xlat
adc
cmp
stos
push
fwait
mov
test
mov
sahf
repz
or
int
sub
inc
aam
push
push
imul
divb
aam
lea
pop
and
push
dec
or
daa
cmp
jo
mov
ror
or
iret
jg
insl
shrl
push
dec
mov
or
arpl
pop
mov
sub
lea
insb
jns
sbb
adc
adc
mov
mov
pushf
push
mov
mov
push
jg
cli
add
push
ljmp
jo
jp
xchg
push
lret
clc
cmp
mov
xchg
xor
jl
decl
sti
inc
rcll
jno
cld
xchg
fstps
adc
insb
cmp
sbb
out
fdivrp
or
ret
cs
push
pop
mov
mov
push
push
mov
inc
push
enter
addr16
fisttpl
or
fidivrs
icebp
mov
lcall
ds
dec
pop
pop
sbb
mov
aam
fidivrl
jmp
addb
or
pop
sbbl
inc
sbb
add
inc
push
pushf
ds
mov
mov
pushf
jno
insl
ds
xchg
cmp
imul
mov
add
movsb
and
jo
fidivrl
and
jbe
pop
jge
stc
dec
dec
xchg
mov
ja
mov
rorl
lea
mov
and
fstpt
cmp
xchg
inc
fstpt
inc
jp
popa
lret
xchg
mov
sub
mov
clc
adc
dec
jno
push
loope
pop
popa
add
push
xchg
and
sti
push
cmp
adc
xchg
ds
inc
daa
push
je
inc
fimuls
dec
add
adc
and
jnp
loope
test
push
into
dec
xchg
inc
orb
pop
imul
xchg
inc
dec
xor
ja
inc
sub
adc
mov
pop
and
divb
repz
cmp
xchg
negl
inc
loope
mov
sarb
int3
iret
xchg
sarb
xor
adc
andl
call
in
dec
repnz
sub
call
fnstenv
adc
std
popa
ficoms
mov
mov
xchg
insb
mov
sbb
dec
shrb
jae
jnp
pop
sbb
push
sub
push
pushf
testl
mulb
mov
or
nop
inc
imul
repz
shlb
loope
lea
fs
test
pop
xor
hlt
scas
pop
sub
push
dec
frstor
xlat
mov
push
sahf
mov
pop
inc
test
mov
or
cld
and
and
rcrl
adc
iret
sub
ljmp
loope
in
fildll
ja
mov
or
sbb
mov
aaa
and
xor
fsubl
dec
mov
push
bound
push
test
lret
jle
fs
mov
jbe
repnz
inc
jmp
xorb
js
rcrb
jecxz
int
or
loopne
pushf
sub
pop
fbstp
adc
jae
insb
mov
adc
mov
daa
add
jp
insb
and
pop
mov
push
push
clc
js
jl
lock
cmpsb
or
jo
sbb
pop
negl
lcall
lret
in
in
sub
push
jno
arpl
push
inc
mov
stos
cs
jge
mov
push
lods
adc
push
xchg
pop
fiaddl
mov
sahf
cmpsl
xchg
ud2
fstp
sbb
inc
xchg
adc
hlt
xor
cmp
es
lods
loop
js
clc
push
shr
aas
fsub
inc
xchg
loop
dec
bound
shr
mov
jecxz
dec
dec
lods
jecxz
es
insb
popa
sbb
fbld
push
gs
loope
pop
decb
sub
push
mov
addl
mov
dec
mov
outsl
xchg
or
inc
in
and
les
mov
pop
mov
das
push
pop
xchg
popf
dec
inc
gs
aaa
int3
adcb
pop
addr16
or
int3
ffreep
popa
cwtl
xchg
push
xor
dec
push
mov
or
sub
loope
and
cwtl
adc
shrl
sbbl
aaa
out
and
fisubs
sbb
mov
inc
fucomip
sbb
cs
lea
inc
lds
shrl
mov
xor
and
out
aas
inc
dec
dec
out
dec
jns
push
dec
xchg
adc
sbbl
andl
pop
icebp
addr16
mov
leave
push
hlt
sbb
mov
gs
dec
cmpsl
lcall
dec
jne
xchg
ret
add
mov
push
xchg
jno
pusha
dec
push
arpl
fdivl
out
push
fcoms
mov
fidivl
mov
mov
insl
dec
daa
push
mov
and
and
sbb
and
and
fwait
outsl
mov
mov
sbb
adc
test
pop
comiss
and
aam
cmp
jg
jge
icebp
ds
enter
mov
adc
xor
roll
mov
sbb
or
addr16
mov
mov
push
jns
into
pop
aas
jl
bound
mov
incb
xchg
mov
jecxz
pop
cltd
xchg
sbb
lock
or
and
lds
push
les
xchg
sbb
cmpsb
out
hlt
movsb
sar
aam
mov
int3
test
test
lods
imul
adc
mov
mov
push
leave
dec
inc
bound
xor
out
jae
or
dec
inc
sahf
sbb
or
ss
out
fldenv
pop
pop
or
nop
addr16
insb
negb
into
shrl
push
jl
or
mov
sub
in
lcall
jo
jbe
mov
push
fcompl
mov
cmp
mov
adc
movsl
arpl
jns
hlt
test
pop
mov
jns
mov
fmulp
mov
ret
xchg
sbb
popa
xchg
stc
dec
add
ret
adc
xchg
fsubl
int
xor
int3
push
dec
lret
push
jl
mov
lahf
and
xchg
adc
mov
push
xor
dec
lret
test
and
push
mov
repnz
adc
fsts
xchg
jno
mov
lret
icebp
stos
dec
sbb
sbb
aam
faddp
ret
rolb
int3
loop
rorb
mov
test
cltd
icebp
sbb
inc
addb
or
repz
aad
cmp
aaa
sahf
sub
mov
xor
mov
jl
mov
leave
adc
shll
cmpsb
dec
fstl
sahf
adc
jmp
int3
shll
mov
pop
pop
pop
into
shlb
pop
and
sub
ljmp
fst
jp
in
shlb
jge
aas
fcom
xlat
mov
pop
add
add
hlt
cmp
sbb
test
inc
jle
rol
lods
xor
push
rolb
jl
or
adc
or
fnstsw
orb
xor
lock
nop
ret
push
ja
shlb
mov
add
and
sbb
inc
mov
xor
pop
ja
pushf
cli
test
arpl
and
pop
or
mov
insb
inc
dec
jg
lret
xchg
imul
mov
shrb
sbb
add
dec
mov
sub
and
call
jnp
out
push
inc
lock
rcrb
in
dec
ds
jp
je
jno
lods
loopne
xor
fisttps
and
data16
push
push
xor
mov
scas
cmpsb
sbb
gs
add
je
cmp
dec
int3
mov
adc
insl
push
mov
lods
ja
aad
and
push
mulb
push
in
mov
xor
icebp
sub
cli
adc
sub
nop
rcll
pushf
jb
lret
inc
dec
xor
add
mov
andb
jmp
pop
xor
push
lock
jo
mov
stos
cltd
insb
popf
nop
lret
jg
sub
pop
lahf
sub
popf
lods
jl
sbb
push
mov
shlb
test
or
ret
sub
xor
sub
mov
test
adc
int
pop
setp
fwait
mov
mov
aam
cmp
jecxz
inc
pop
push
hlt
ret
out
add
lods
mov
lods
xor
pop
jnp
xchg
js
inc
je
xchg
mov
sbb
insl
in
mov
pushf
mov
lcall
fldt
test
jbe
fldcw
push
jp
mov
xchg
mov
jns
cmp
mov
ljmp
aas
hlt
das
inc
loope
lea
sbbl
cmp
mov
mov
adc
js
jmp
in
notb
xor
insb
add
rclb
xchg
loope
ds
mov
pop
lahf
out
jle
inc
xchg
pop
adc
dec
push
rorb
scas
mov
leave
pop
icebp
cmpsl
xchg
sbb
pop
push
ffreep
sahf
loope
filds
add
xor
dec
push
mov
cmpl
int3
cmp
sbb
daa
fsubr
adc
pop
add
sbb
lahf
aam
pop
mov
dec
and
pop
pop
imul
sub
mov
xchg
outsb
pop
mov
lret
jp
imul
sub
sti
rcll
testl
fstps
adc
pop
adc
sub
pop
cmp
jecxz
inc
fdivrs
add
aad
in
call
scas
dec
adc
sbb
dec
jns
jmp
lods
mov
push
repz
pop
sbb
scas
stc
mov
mov
and
into
mov
js
sub
inc
rcrb
jb
outsb
popf
inc
xlat
sbb
cwtl
sbb
hlt
repnz
and
push
lods
aaa
sbb
repnz
pop
outsb
and
dec
jg
outsb
or
lahf
sar
adc
inc
data16
jns
pusha
popa
cmp
push
jp
cwtl
shll
mov
inc
sub
dec
sub
xor
out
pop
sub
and
mov
cmp
out
xchg
shll
xchg
pop
fwait
and
fstp
lds
fisttpll
mov
mov
mov
mov
or
push
out
pushf
clc
fadds
movb
out
adc
in
jge
fisttpl
xchg
fistps
mov
push
insl
push
inc
inc
dec
out
or
or
mov
and
inc
mov
mov
or
and
or
imul
and
imul
xchg
daa
dec
popa
push
mov
in
mov
int3
push
push
into
out
popa
jp
jecxz
lods
inc
ljmp
push
push
push
sti
mov
xchg
xchg
cmpsl
jns
push
ret
jae
xchg
pop
mov
xor
test
sti
and
push
nop
cs
inc
push
xorb
into
add
shrl
xchg
push
adc
jbe
xor
xchg
loope
pop
stos
lahf
lods
ret
add
inc
xchg
or
push
aaa
or
xchg
xor
in
jge
insl
pop
and
xor
mov
lods
mov
js
dec
ss
fxch
mov
cltd
jbe
or
pop
js
xchg
imul
hlt
test
addb
ja
sub
jmp
test
loope
imul
aad
repz
int3
pop
mov
scas
adcb
outsl
inc
dec
dec
adc
test
cltd
cmp
sub
scas
hlt
mov
mov
psubusb
lds
insl
sbb
cwtl
dec
test
les
fwait
popf
ljmp
adc
add
aaa
mov
dec
out
shr
pop
push
xchg
not
js
mov
in
jbe
cmpsb
push
pusha
nop
stos
push
xchg
or
cwtl
pop
lds
lods
mov
xlat
sbb
out
movsl
mov
shlb
jle
mov
stc
and
loopne
or
inc
sbb
jno
hlt
aas
mov
imul
cmpb
add
jle
lahf
mov
sub
cmc
outsl
fs
imul
sub
push
push
cmp
mov
fs
jb
arpl
loop
aam
aas
adc
or
sub
cli
add
mov
iret
push
lock
aaa
ja
or
out
arpl
pop
push
mov
jp
inc
mov
loop,pt
lods
cmp
les
addr16
push
hlt
aas
mov
xchg
pop
push
rol
js
xor
icebp
das
mov
cmp
fcoml
fistps
jl
xchg
add
inc
push
aas
jae
out
fwait
mov
push
cmp
mov
pop
sti
fsubrs
gs
es
sbb
mov
enter
jecxz
cmp
mov
lods
popf
sti
in
cmp
icebp
stc
jae
addr16
and
xchg
jb
mov
fsts
outsl
loope
push
jle
les
stos
lret
jo
xchg
test
aam
insl
es
add
adcl
sub
div
fstpt
inc
lcall
xchg
icebp
or
iret
dec
aas
dec
loopne
jbe
add
push
xchg
sub
dec
mov
push
adc
or
inc
call
add
jbe
lock
mov
jge
xchg
push
jne
outsl
lahf
add
and
xchg
scas
xlat
lret
ret
orb
sbb
fwait
dec
repnz
push
mov
cmc
test
arpl
scas
ja
mov
lea
mov
dec
shlb
pop
pusha
pavgw
sbb
pop
add
mov
dec
sti
jbe
push
lahf
ljmp
add
ss
inc
mov
push
mov
adc
mov
mov
gs
daa
push
clc
in
fstpl
and
lods
cmp
lea
mov
xchg
aam
inc
dec
aad
enter
dec
testl
mov
mov
out
outsb
scas
cmp
in
icebp
out
or
sti
nop
jmp
js
nop
shl
jg
jmp
adc
rolb
xchg
leave
ss
bound
jp
popa
dec
mov
inc
insb
fcoml
and
pop
int3
mov
sahf
xor
ja
leave
add
sbb
or
imull
lret
idivb
dec
push
or
repz
aam
adc
adcl
jge
lods
lahf
cmp
push
insl
mov
ljmp
addr16
jmp
outsl
xchg
cmp
add
mov
fimuls
loopne
xchg
inc
cmp
fimuls
jo
push
sbb
stos
pop
xchg
pop
movsb
jb
stc
es
into
lea
sub
push
ljmpw
and
xchg
pushf
addl
int
or
pop
rorb
add
out
sub
dec
or
cld
pop
mov
inc
push
scas
push
add
out
fistl
sub
cmp
je
aaa
pop
pop
mov
outsl
push
xchg
mov
dec
mov
push
rclb
stos
xchg
or
int
pop
ds
je
mov
sbb
loop
mov
and
dec
and
sbb
in
push
fwait
daa
jb
cmp
and
dec
push
divl
pop
out
insb
aas
ja
mov
icebp
add
cld
mov
and
loope
inc
enter
mov
sbb
adc
out
jmp
lds
das
stos
push
sti
jp
sbb
mov
jp
ficoml
push
xor
mov
mov
dec
and
cmpsl
lock
rcrb
push
pop
gs
popf
jbe
add
imul
lods
push
jne
dec
loop
subl
pusha
adc
and
imul
stos
sbb
mov
xlat
lahf
pop
jl
fldcw
out
ljmp
mov
popl
inc
xchg
mov
mov
or
xchg
gs
addr16
pop
jno
jo,pn
adc
or
outsb
sahf
cmp
movsb
mov
jge
int
xchg
add
mov
pop
cmc
adc
sbbb
icebp
in
xor
notb
mov
or
jo
leave
sahf
xor
ljmp
xchg
faddl
sub
orl
lods
insb
incb
popf
sbb
jnp
mov
sub
fiaddl
lcall
or
push
push
lds
push
and
cmpsl
mov
iret
mov
iret
popa
lcall
inc
cltd
cmp
iret
pop
mov
dec
cmpsb
sqrtps
ror
rclb
icebp
mov
movsl
push
add
push
pop
adc
fisttps
jmp
sbb
clc
mov
cmpsl
pusha
lock
bound
pushf
in
loop
adc
mov
jb
mull
ljmp
stos
iret
ds
pop
xor
mov
sub
loop
imul
mov
cmc
cs
xlat
add
push
js
aaa
stos
sub
insb
jp
je
jbe
push
xor
add
adc
or
repnz
test
mov
and
sub
jnp
sub
mov
add
xchg
jp
mov
pmullw
movsl
sti
rol
jbe
out
cmpsl
cltd
jle
dec
lahf
stos
jmp
mov
adc
mov
mov
fsubrp
sbb
out
and
leave
jns
sahf
out
pop
xchg
fs
inc
lret
pop
test
dec
xchg
jg
ljmp
lea
cltd
adcb
icebp
push
scas
inc
mov
daa
addl
mov
nop
xor
dec
xchg
lods
icebp
fs
popa
sbb
push
pusha
add
jle
test
loopne
jmp
sbb
pusha
jl
jns
in
dec
or
test
or
mov
sbb
cli
and
pop
mov
dec
std
aas
hlt
mov
sbb
ret
sub
jg
call
mov
mov
test
add
pop
test
out
xorb
push
lret
pop
push
inc
sbbl
insb
pop
outsl
stos
ljmp
imul
divb
out
lods
imul
inc
movsb
sub
loopne
push
and
adc
aad
or
sbb
nop
es
insb
cmp
cwtl
inc
mov
and
xchg
pop
movsl
push
in
and
pop
or
sbb
add
or
lds
icebp
push
in
inc
cmp
dec
inc
sub
aas
imul
push
xor
add
lahf
pop
cmc
fistpl
andl
and
and
sti
mov
out
add
pop
or
push
icebp
testb
jno
inc
xchg
out
inc
loope
fwait
inc
adc
aad
and
inc
xchg
sub
rcll
sti
mov
mov
sbb
inc
call
sti
inc
cs
mov
aaa
pop
aam
xor
jge
xchg
mov
add
aad
mov
cltd
lcall
rcl
insb
out
and
sbb
std
jecxz
xorl
es
xchg
mov
xchg
pusha
repnz
add
daa
divb
sbb
jg
push
inc
push
lret
jb
adc
out
mul
pop
movsl
outsl
repnz
cmp
push
push
pop
aaa
xchg
adcb
push
jp
fdivs
pop
popf
ja
xchg
add
mov
arpl
cmc
stc
dec
icebp
jge
add
mov
nop
loop
out
add
mov
mov
inc
iret
sbb
pushf
movsl
fxtract
ret
jge
ficoms
add
lcall
arpl
rolb
aas
loope
in
fwait
pop
sbb
jg
mov
sbb
loope
shll
js
xor
jmp
pop
mov
pop
adc
xchg
outsl
pusha
sub
push
lods
je
iret
xor
push
stos
push
pop
jle
xchg
test
mov
imul
jmp
std
cmc
cmp
outsl
xchg
dec
mov
xchg
cmp
in
or
and
popa
sahf
jnp
mov
push
jl
pop
rcl
lcall
js
jle
loop
nop
or
nop
jno
ljmp
aas
scas
jmp
xchg
mov
loope
in
into
mov
repz
sti
xchg
mov
push
mov
jl
movsb
ja
cmpsb
inc
dec
mov
mov
cli
out
les
cmpl
cmp
sub
xor
mov
outsl
stos
call
test
stos
popf
fcomps
push
push
sarb
fcmovnb
jge
insb
ds
outsl
pop
mov
xchg
mov
mov
jno
pushf
inc
and
inc
scas
fwait
lcall
cmp
add
cwtl
pop
aam
ss
inc
test
inc
test
pop
inc
inc
and
inc
repnz
cmp
pop
push
popf
xor
xorl
inc
push
cli
insb
lods
test
pop
aaa
cmc
icebp
rcl
and
in
push
enter
out
xchg
lret
outsl
popa
les
shl
loopne
in
mov
cmp
in
jg
push
js
test
and
jae
or
iret
inc
roll
inc
in
adcb
movsb
mov
out
sub
call
fisubs
or
xchg
mov
insb
iret
aam
mov
out
shr
xor
jno
aas
in
mov
jmp
es
das
icebp
jo
movsl
jae
cli
mov
or
pop
push
test
pop
or
and
aam
mov
iret
xchg
xchg
ljmp
lahf
jb
sbb
push
pop
pop
insb
jmp
sbb
dec
or
subb
pop
pop
pop
dec
dec
ficoms
fwait
into
loop
xchg
insb
mov
mulb
jbe
icebp
xchg
add
dec
lods
xlat
scas
repnz
fdivrp
lock
dec
insb
in
and
mov
scas
or
xchg
mov
sub
fucomi
stos
push
fldt
hlt
nop
in
add
stc
popa
or
pop
stos
nop
mov
mov
cmp
sub
arpl
pop
jnp
jg
mov
push
testl
xchg
dec
add
out
out
mov
sbb
pop
lret
push
dec
mov
xor
fsubrs
sbbl
sbb
or
cmp
jo
jg
push
xchg
out
repnz
lret
popa
leave
rcrl
popa
jae
mov
jg
push
or
xor
sahf
pop
jmp
lahf
sub
inc
int
ret
loopne
enter
push
dec
icebp
cld
cmp
inc
int
dec
mov
iret
cmp
add
fwait
bound
mov
ficompl
sub
enter
jnp
cmc
or
xchg
pop
sub
fnstsw
dec
aaa
fs
shrb
xchg
je
fsubp
cwtl
xorl
jp
mov
cmc
pushf
mov
sub
mov
cmc
fwait
jl
in
pop
and
adc
lock
jbe
outsl
test
sbb
in
js
in
jnp
cwtl
pop
enter
cmp
cmpsb
cmpsl
mov
sub
inc
iret
testl
dec
sub
movb
mov
scas
icebp
into
xchg
pop
insl
les
into
and
push
mov
mov
add
jg
lret
int3
test
adc
int
push
je
cmp
pop
jecxz
jns
dec
hlt
mov
sbb
int
and
cs
enter
dec
arpl
insb
lcall
pop
test
push
ss
xchg
jle
sub
dec
cmp
add
in
sahf
out
sbb
cs
scas
sbb
and
jae
das
mov
addl
adc
das
push
outsl
or
aad
jecxz
in
rcr
jne
jmp
sahf
add
inc
sub
insb
push
mov
push
test
lods
ss
cmpsb
popf
scas
push
cltd
pop
movsb
sub
rorb
insl
dec
lahf
add
mov
push
pop
xor
into
mov
bound
out
jl
add
test
pop
cmp
rclb
lods
mov
mov
faddp
mov
pop
adc
pop
inc
sbb
mov
mull
std
lea
adc
clc
add
xchg
pop
lcall
xchg
loop
sub
xchg
int
jbe
imul
push
or
lcall
out
xchg
aas
jno
jb
mov
xor
adc
xor
inc
push
aam
stos
mov
xchg
cmp
sbb
inc
call
movsl
sar
aaa
pop
rorl
mov
jb
test
pop
dec
data16
lcall
sbb
jb
mov
pop
dec
cmp
xor
dec
or
mov
jns
xor
jb
rorb
repz
add
notl
rorl
outsl
insb
mov
or
insb
pop
lea
fimull
notb
add
lret
movsl
sub
jnp
and
es
mov
out
sbb
dec
inc
push
repnz
les
movl
frndint
pop
popa
xor
rcl
mov
call
mov
dec
iret
fildl
int3
fcomps
adc
scas
mov
inc
cmovp
mov
int
mov
or
xchg
jb
or
mov
inc
mov
xor
icebp
cmpsb
shlb
lea
pop
push
jnp
push
adc
test
and
js
adc
mov
mov
scas
mov
into
cmp
add
jg
or
mov
fimuls
jns
adc
pcmpeqb
sub
mov
mov
imul
xchg
xor
arpl
in
bnd
lods
addr16
out
repz
xorb
mov
xor
pop
shrb
jbe
test
sbb
mov
in
mov
sbb
sub
jl
sti
push
mov
xor
into
push
lods
clc
fs
js
stos
push
movsl
sahf
or
mov
pop
iret
add
mov
jge
xchg
std
sbb
call
std
adc
fnsave
js
daa
fstpt
loop
fisubrs
clc
outsb
mov
mov
out
andl
dec
js
xor
mov
popf
lcall
or
lret
xlat
mov
xor
cld
xlat
add
call
pop
add
lahf
and
lahf
subl
lods
cmp
xchg
jmp
xchg
aaa
pop
or
cltd
ficomps
push
aam
repz
mov
add
inc
sub
push
lcall
fadd
mov
push
test
out
lcall
int3
xlat
ret
jmp
into
adc
fsubp
lcall
out
repnz
add
mov
xor
sub
add
jnp
xor
pop
popf
mov
fbstp
aas
push
ja
push
push
mov
mov
and
out
ljmp
test
lcall
lds
cmpsl
add
sbb
jo
dec
cmp
enter
in
mov
cli
mov
test
hlt
cwtl
fdivl
xlat
jge
es
lock
push
mov
je
push
jnp
dec
add
pop
lcall
inc
loope
xor
jmp
jecxz
mov
adc
mov
xor
cwtl
lods
stos
jp
int3
inc
and
jmp
push
add
jecxz
push
mov
push
jno
cli
cmp
add
inc
in
shl
cmp
lea
sbb
adc
add
and
mov
stc
and
jl
inc
aaa
fistps
aam
icebp
jns
sahf
inc
into
mov
jmp
mov
shll
cmp
testb
xor
lcall
push
or
outsb
add
fdivrs
shll
into
dec
ss
xor
mov
imul
lods
cmp
inc
add
jge
mov
inc
xor
sarb
and
cmp
out
insb
sbbb
dec
js
mov
jmp
aad
adc
xorb
adc
adc
lcall
iret
lds
xor
leave
jge
mov
add
pop
sbb
cmp
aam
js
or
rcrl
subl
xchg
jge
imul
cmp
out
mov
movsb
pop
adc
and
adc
in
push
push
roll
lods
aaa
in
mov
jl
pop
mov
fidivrs
push
xchg
je
or
xchg
mov
mov
std
fstl
dec
aas
dec
mov
icebp
inc
jbe
jnp
inc
retw
out
shrb
imul
xor
bound
inc
adc
xchg
mov
add
dec
or
push
adc
popa
loopne
xor
lods
je
cmpl
incb
sahf
out
fmul
mov
xchg
cmp
es
pop
add
jl
mov
shl
cmp
and
push
movsl
jp
push
mov
popa
jae
push
inc
adc
rcll
pop
dec
jmp
mov
mov
adc
stc
aad
sub
cmpsl
movsb
popf
repnz
mov
adc
pusha
cld
sub
psrlq
mov
dec
jae
sbb
call
add
sub
xchg
int
sub
test
mov
add
adc
cld
enter
xor
test
popf
fmuls
mov
loopne
in
das
in
and
sub
add
push
idivl
jbe
dec
or
mov
ljmp
scas
ja
mov
int
mov
mov
je
mov
test
mov
jne
xor
cmpsb
and
out
sub
ds
dec
sahf
push
in
js
adc
repnz
inc
cmpsb
sbb
adc
sbb
dec
mov
cmpsb
jmp
popf
ret
xchg
dec
mov
fistpll
test
push
inc
inc
fsubl
movsl
sub
test
fs
push
sarl
jb
cltd
jmp
or
lock
pop
push
ret
arpl
lock
xlat
push
ja
mov
adc
mov
rcrl
mov
jle
aaa
cmp
push
pop
scas
fwait
mov
sub
pop
rcll
cmpsl
nop
icebp
daa
shrl
stos
jmp
and
rorb
stos
dec
fbld
jecxz
movsb
icebp
add
or
jnp
loopne
in
mov
sbb
push
or
inc
mov
outsb
hlt
jmp
push
jge
shll
inc
popa
into
sahf
scas
outsb
fs
cwtl
pop
push
cmpsb
andl
cmp
fbld
mov
add
fisubrl
ja
lea
out
cmpsl
das
and
or
sub
pop
jg
sbb
mov
add
call
mov
pop
add
ljmp
cmc
ja
jg
jae
loopne
imul
sub
lret
cmp
lahf
ret
pop
pop
aaa
fldl
mov
mov
aaa
inc
sub
push
daa
outsl
mov
push
test
and
cmp
pop
push
and
jnp
adc
push
xchg
sbb
ficoml
iret
push
pop
addr16
test
sub
xchg
mov
fwait
test
repz
sbb
xor
jbe
mov
call
sbb
shll
pop
pop
inc
lahf
icebp
sub
add
test
enter
sub
mov
adc
bound
shlb
mov
sub
clc
push
lods
inc
mov
enter
daa
jne
test
and
stos
shlb
push
dec
mov
or
cld
popa
out
sub
adc
mov
shlb
dec
data16
jns
loope
jbe
mov
int3
sub
xor
push
adc
cmc
fisttpll
lods
fildl
xor
sti
xchg
jns
pop
mov
xchg
daa
xlat
jmp
cmp
sub
pop
push
push
das
mov
fisubrs
call
push
and
inc
je
jecxz
testl
adc
lret
sbb
add
test
xchg
scas
movl
out
shll
mov
mov
pop
cltd
test
sub
icebp
mull
and
sub
cli
dec
adc
ja
sbb
adc
inc
sahf
xchg
mov
pop
xchg
out
movsl
pop
out
sbb
pop
mov
jns
loope
fxam
pop
or
in
or
jnp
aam
fmull
loopne
and
fwait
pusha
push
xchg
and
push
adc
jae
add
scas
daa
sti
add
cwtl
insb
pop
shrb
push
xchg
jo
popf
hlt
sti
jns
inc
cmp
mov
test
cmc
inc
icebp
jmp
jge
mov
push
xchg
and
pop
lret
and
or
leave
dec
cmp
push
inc
jbe
cmc
lods
adcb
cmp
ds
mov
pop
adc
add
push
mov
fwait
sbb
jns
std
insl
pop
mov
push
clc
inc
cmpsb
pop
xchg
jg
jns
aas
mov
sub
inc
push
fidivs
inc
xchg
inc
jecxz
out
mov
sub
data16
xor
testb
sahf
scas
push
mov
and
outsl
push
jp
push
or
adc
test
add
or
in
leave
mov
mov
push
fdivrs
fiaddl
stc
gs
sar
pop
xor
dec
sbbl
pop
add
or
adc
movsl
jne
shl
stos
push
mov
pusha
mov
cmp
jb
scas
bound
jmp
stos
mov
push
add
clc
fmulp
cltd
sub
mov
mov
or
cmp
imul
xchg
repz
ds
mov
mov
mov
ss
or
ret
push
and
movsl
mov
pushf
dec
loopne
gs
mov
sbb
lret
pop
jbe
int
cmpl
adc
pop
stos
xchg
sahf
and
imull
sbb
movsl
xor
dec
repnz
into
mov
sbb
adc
rcr
mov
inc
ret
enter
dec
aaa
rcrb
mov
gs
subl
xlat
sub
cmp
bound
fucomp
push
outsl
mov
lds
add
addb
cmp
mov
fwait
jns
sti
fiadds
popf
xor
sbb
daa
loopne
mov
into
stos
push
xor
pop
mov
pop
adc
sbb
cmp
and
mov
rorl
dec
into
jmp
jae
dec
stos
mov
mov
inc
push
aaa
mov
lret
and
jns
outsl
dec
outsb
aad
sbb
push
pop
cmpsb
sbb
adc
cwtl
scas
lcall
cld
mov
sub
mov
dec
into
xchg
loop
negb
insl
movsl
push
call
dec
sbb
das
mov
lock
pop
imul
stc
inc
jns
das
les
add
pop
fistpl
jmp
dec
insl
adc
and
fisubl
mov
daa
pushf
jecxz
lock
popf
jb
imul
idivb
test
pop
dec
sub
sti
mov
cmpsb
sbb
pushf
mull
das
push
hlt
or
sub
aaa
sub
mov
icebp
and
pop
repz
push
pop
dec
pop
ds
xor
sub
into
push
bound
add
and
sarb
push
dec
bound
cmp
mov
test
pop
lcall
push
and
pop
cld
ret
xchg
icebp
xchg
sbb
mov
outsl
fmull
pop
sub
jl
push
inc
xchg
std
das
imull
sbb
push
or
ret
add
outsl
test
push
push
jle
adc
mov
out
mov
xchg
mov
cmp
xchg
push
and
mov
aad
orb
xchg
stc
lods
push
mov
and
imul
stc
jo
pop
adc
inc
adc
and
inc
int3
or
out
leave
push
fildl
mov
je
lcall
test
scas
mov
sub
pop
or
fisttps
fwait
sahf
sbb
pop
xchg
dec
mov
and
out
or
dec
mov
mov
pushf
sub
adc
addl
adc
or
adc
jle
test
shlb
cld
shrb
scas
jl
cli
xchg
jl
neg
mov
ret
aam
ret
and
das
int3
and
imul
ret
jne
cwtl
icebp
aas
jne
pop
fsubs
leave
pop
stos
cmpsb
xor
or
lods
mov
mov
ja
fcomp
inc
cld
loope
in
fistpl
dec
lea
into
stos
jle
jmp
xchg
xor
popa
xchg
shlb
add
xor
addl
inc
jl
inc
push
rcrb
sub
xchg
push
in
xchg
adc
mov
sbb
jb
adc
xchg
mov
push
cltd
scas
and
pop
call
outsb
orl
push
stc
les
mov
xor
mov
outsb
xchg
imul
in
dec
movsb
fcoms
inc
pop
mov
nop
fdivs
aas
xor
mov
in
mov
fdivrl
push
sbb
mov
sbb
callw
pop
jmp
xor
mov
es
arpl
pop
fimull
lcall
fwait
outsb
jb
stos
xchg
into
out
sub
pop
sahf
popa
int3
shrl
adc
adc
pushf
and
xchg
sbb
lahf
inc
out
xor
test
adcl
fsubl
xchg
jno
cwtl
pop
ret
test
pop
jnp
add
jo
jae
pop
mov
pushf
cmp
mov
stos
xchg
mov
dec
les
push
sti
arpl
outsl
xchg
test
and
jge
jo
repnz
add
fdivrl
push
imul
insl
fdivs
rcl
hlt
mov
mov
jnp
popl
mov
push
xchg
xchg
stos
subb
mov
ret
inc
mov
mov
dec
push
jg
jne
mov
cs
ja
stos
outsl
xor
scas
add
and
jmp
loopne
add
js
popa
push
xor
sub
add
sub
jno
mov
xchg
scas
dec
sbb
test
insb
or
sbb
in
mov
lea
enter
sahf
sti
not
rclb
dec
fisubrs
shll
jne
or
fmuls
js
ds
pop
and
pop
or
ds
outsb
dec
decb
cmp
roll
sbb
xor
mov
lods
mov
mov
out
rcrb
sarl
dec
push
sub
loopne
hlt
xor
movsl
and
loope
inc
addl
dec
cmpsb
call
inc
add
lock
iret
xor
and
fisubrs
dec
and
and
push
mov
insb
cli
cwtl
outsl
or
sbb
cmpsb
push
je
pushf
fwait
mov
push
rorl
or
pop
int
shll
jmp
clc
test
repnz
ja
pop
dec
xor
ret
mov
fs
iret
adc
pop
rcrb
push
pop
test
push
push
test
xchg
cmpsb
aad
push
inc
stc
adc
lahf
fwait
arpl
dec
repnz
jge
push
add
push
jne
add
dec
es
cltd
inc
pop
add
scas
iret
push
lock
addr16
pop
fwait
and
cld
jo
and
add
data16
push
mov
adc
and
fimull
jle
scas
in
jle
imul
int
sbb
add
pop
fucomp
lods
stos
sbbb
mov
add
inc
cmpsl
mov
out
cmpsl
xchg
mov
in
or
in
imul
pop
or
xchg
mov
mov
aaa
das
sbb
dec
push
push
push
and
pop
xor
push
jmp
mov
frstor
outsb
adc
lret
mov
shlb
data16
int3
imul
mov
fldenv
daa
add
fsubl
pop
arpl
rol
int
cmp
popa
xor
mov
into
lods
mov
mov
shlb
sub
push
testb
sti
sbb
ret
add
aas
enter
pushf
mov
in
dec
inc
fistpl
jbe
mov
fidivl
popa
xchg
push
out
aas
and
icebp
or
test
fistpl
addr16
jae
mov
mov
and
es
lock
popf
mov
jne
fildll
mov
test
loope
adc
test
subl
pop
ret
mov
je
dec
dec
xchg
shll
adc
stos
retw
loopne
cmp
cwtl
cmp
sbb
test
clc
out
sub
std
pop
mov
pop
ret
mov
dec
mov
push
pop
push
adc
clc
add
imul
std
mov
cs
push
nop
mov
lds
and
push
sbb
ds
dec
hlt
cmpsb
pop
leave
call
ret
inc
and
lock
mov
cmc
in
addl
negl
jo
mov
xchg
and
and
jge
sbb
or
inc
or
jle
or
xchg
gs
inc
mov
in
jp
mov
mov
aam
mov
cwtl
clc
rorb
std
fwait
jl
ret
iret
lret
inc
stos
push
fstpl
mov
push
xor
nop
std
lods
pop
sbbl
adc
dec
xchg
mov
inc
pop
push
pop
ljmp
sub
xchg
adc
mov
rcrl
mov
push
insl
mov
xor
sbb
aad
jl
xor
rcrb
dec
xchg
fs
das
mov
add
gs
pop
out
inc
daa
cltd
int3
test
push
inc
lea
outsb
inc
stc
fcompl
andb
mov
dec
jno
pop
lods
jge
push
mov
pop
jns
insl
sub
lcall
lcall
push
in
jae
fcmovnbe
xor
dec
sbb
inc
pop
sbb
imul
dec
daa
in
je
mov
mov
mov
push
jmp
sub
jmp
inc
rolb
adc
sahf
dec
push
adc
dec
sbb
mov
ret
dec
jae
cmp
and
dec
aas
add
stos
xchg
add
cmc
call
les
aam
pop
aad
outsl
out
std
inc
adc
mov
hlt
inc
and
add
adc
icebp
xchg
fistps
and
push
ja
push
int3
xchg
insb
imulb
mov
sub
mov
adc
and
ljmp
push
arpl
xchg
jns
in
dec
test
std
iret
aaa
arpl
adc
jl
jp
push
outsb
lock
push
pop
fcmovb
dec
js
lods
or
call
push
xor
loop
xchg
pop
push
outsb
std
adc
mov
push
and
popa
xor
sbb
clc
clc
rcl
mov
ds
inc
in
fdivl
xor
mov
mov
test
packssdw
xchg
in
loop
xor
test
jle
cld
popa
mov
lock
loope
jns
arpl
out
push
in
push
cmp
push
jmp
and
out
imul
rorl
xchg
notb
call
pushf
stc
sti
jle
push
rcl
icebp
mov
inc
fnstsw
scas
dec
add
popf
pop
pop
inc
jle
daa
stc
dec
inc
and
cmpsl
popf
mov
xor
and
repz
sub
stos
hlt
push
push
pop
lcall
xlat
test
stc
jmp
pop
das
cmp
lahf
in
jno
in
add
add
and
inc
fs
scas
xchg
inc
repnz
mov
mov
shll
sub
test
stos
sbb
je
jae
adc
cmc
flds
ss
wbinvd
enter
movsb
data16
cmp
out
ret
test
xchg
and
mov
sub
cmpl
jle
rolb
arpl
pop
fwait
hlt
lret
popf
movsb
hlt
xchg
cmpl
gs
sub
mul
fdivrl
nop
inc
arpl
inc
notl
push
js
and
push
clc
cmp
cltd
pop
movsb
cwtl
cmpsb
jne
mov
repz
and
push
sub
mov
mov
inc
mov
inc
test
cs
je,pt
cmp
stc
cmpsl
je
arpl
stc
mov
scas
mov
ja
call
xchg
nop
sub
insb
mov
andb
jecxz
mov
cmpsl
cmc
xor
xchg
stos
add
out
mov
inc
aam
lcall
daa
in
cmpsl
jnp
mov
shlb
sbb
sub
mov
into
sbb
jne
test
jg
pop
testb
sbb
jno
sub
je
stc
imul
xlat
pop
jecxz
and
insb
mov
xchg
add
in
xor
int
fwait
xlat
xchg
and
push
jmp
mov
lret
inc
inc
push
in
les
sarb
mov
adc
xchg
gs
insl
and
mov
mov
adc
pop
xchg
mov
mov
xchg
sbb
xlat
adc
mov
jp
sti
es
jge
cmp
fimuls
cmp
cld
ffree
push
and
lods
pusha
jb
or
push
push
push
mov
or
and
pop
sbb
into
cmc
or
mov
cmp
sub
and
fistl
push
lods
repz
mov
push
jmp
mov
fldt
jb
pop
fdivl
cmovae
push
into
fiaddl
sbb
int
movsb
inc
add
popa
mov
inc
in
or
jmp
lcall
clc
into
xor
mov
mov
enter
mov
out
cmp
stc
mov
shlb
cmp
daa
jp
nop
shlb
mov
mov
and
ljmp
lahf
lods
lret
or
jns
cmpsb
sub
addr16
lea
incb
or
xchg
push
popa
xchg
aad
cwtl
movsl
add
adc
mov
lea
lods
cmp
ss
jno
aas
daa
ja
leave
adc
test
hlt
mov
sbb
scas
ja
push
mov
setg
xchg
dec
pushf
test
push
imul
dec
sbb
xlat
mov
dec
enter
sbbb
lret
enter
mov
inc
in
sub
mov
popf
push
loope
or
addb
rolb
cs
mov
or
pop
insb
jle
leave
ret
mov
jns
jle
xor
dec
pop
sbb
pop
mov
int3
inc
aas
lahf
fldcw
movsl
test
sbb
das
lods
notb
push
add
ficompl
push
cltd
outsb
xchg
push
addl
outsl
nop
cli
push
inc
in
sbb
and
ret
dec
xlat
xchg
sub
xchg
aad
xchg
lret
cmp
sarl
out
sbb
cld
push
push
lret
dec
dec
hlt
mov
pop
ljmp
cmp
test
fwait
add
imul
test
mov
xchg
js
mov
push
ds
lea
hlt
stos
stos
xor
xor
mov
inc
cltd
push
fcompl
add
in
push
std
hlt
push
in
cmp
shlb
addb
cmp
scas
sbb
mov
cltd
out
sbb
push
push
subb
mov
xlat
push
sbb
aam
out
aam
xchg
ljmp
sub
adc
aas
stc
pop
sbb
outsl
std
cmp
hlt
rorb
mov
rclb
inc
shl
xor
cwtl
clc
cmp
inc
push
lcall
mov
add
pop
pop
nop
and
and
inc
jbe
cmp
cmp
outsb
inc
lods
fwait
cmp
std
push
lret
sarl
fwait
rorl
xlat
aam
insb
sub
inc
or
in
push
cmp
push
ficoml
adc
leave
jmp
pushf
and
push
jge
fstl
rorb
mov
loopne
ret
cmp
mov
cmp
or
mov
mov
jge
pop
mov
xor
jo
popa
xor
xchg
lods
jne
and
xlat
outsb
popa
stos
mov
pop
cld
aaa
mov
and
mov
in
push
lahf
clc
xchg
jp
call
test
divl
icebp
xor
mov
pop
xor
into
jge
and
xlat
mov
das
test
mov
rolb
rcrl
dec
jge
dec
push
cli
repz
fidivrs
push
jno
fmull
jp
or
jmp
adc
in
out
stc
cmp
sbb
ret
sub
leave
xchg
ja
xchg
lea
jne
nop
leave
hlt
mov
ret
imul
ss
push
in
lea
sbb
mov
cltd
xchg
cwtl
add
sub
and
ret
pop
push
lcall
xor
push
jbe
mov
arpl
inc
outsb
cmp
js
data16
and
dec
mov
push
lahf
ja
rol
sbb
add
in
les
les
mov
add
dec
jne
test
xor
notb
sub
jns
fnop
fdivrs
aam
adc
xor
adc
mov
jp
or
ss
pop
pusha
mov
mov
add
sbb
sub
mov
and
jmp
lods
jle
inc
fwait
imul
sbb
loopne
xchg
cmp
enter
out
arpl
pop
push
jne
fdivl
clc
xchg
ficoml
add
incb
and
dec
int3
out
xlat
xchg
jne
int3
sub
outsl
mov
cmc
lret
stos
cmp
cmpsl
xchg
mov
cvtps2pi
test
mov
pop
mov
adc
xlat
xchg
add
mov
in
inc
daa
loope
addl
and
push
jo
push
int3
adc
pop
divb
jns
aaa
mov
dec
sub
xchg
cli
fstps
stc
sti
fwait
aaa
inc
pop
fwait
adc
mov
sahf
cmpsl
jb
jns
nop
lret
mov
icebp
jp
xacquire
push
icebp
push
sbb
xchg
push
xchg
cmpsl
and
in
dec
sub
in
cmp
sub
push
mulb
iret
std
lods
xor
xchg
int
xchg
iret
int
jnp
sub
mov
jae
int3
ret
out
fnsave
cs
mov
test
dec
inc
xor
dec
test
imul
cmc
sub
pop
in
gs
popa
imul
test
pop
pop
sbb
fisubl
test
ret
sub
testl
adc
or
stos
mov
or
or
pop
mov
jg
iret
daa
adc
movsl
xchg
xor
sub
xchg
and
pop
mov
js
inc
cmp
jb
addr16
aam
push
movsl
xor
fbstp
mov
lock
adc
leave
jecxz
cmp
outsb
iret
adc
je
lods
push
ss
jmp
add
push
loop
in
daa
rolb
dec
push
fwait
inc
and
daa
pop
jns
notl
pushf
fldl2t
loope
in
lds
cs
imul
xchg
xor
jno
pop
push
loopne
clc
or
adc
mov
lret
mov
fwait
cmp
add
dec
jbe
xor
sbb
dec
sbb
imul
inc
andl
jg
mov
lret
pop
cli
pop
lds
dec
add
dec
cwtl
push
mov
aas
xor
xchg
pop
sahf
andl
pop
pushf
sbb
push
mov
scas
and
push
ss
mov
jp
cmp
dec
or
fdivrs
test
cmc
mov
sbb
pop
xor
mov
fcoml
jne
sub
int
mov
mov
cltd
scas
jge
xor
push
ljmp
scas
or
addr16
in
push
or
paddq
and
shrb
sub
imul
and
out
lret
loopne
daa
mov
push
jge
iret
xor
in
aas
lcall
pop
loopne
scas
nop
out
aad
data16
les
xor
mov
cmp
iret
gs
notb
pop
loopne
pop
leave
iret
sbb
icebp
xchg
jbe
dec
mov
test
sub
adc
fildll
jmp
pop
lahf
xchg
xlat
mov
or
xchg
or
sbb
sub
adc
hlt
loopne
dec
ljmp
dec
ret
std
popa
mov
inc
sbb
out
inc
mov
lcall
rcll
iret
pop
leave
push
aaa
dec
xor
jl
pusha
sub
pop
roll
inc
mov
pop
jmp
jl
rcl
jge
test
adc
and
mov
mov
out
and
icebp
ret
jp
adc
sahf
sub
sbb
nop
push
xchg
push
xchg
push
scas
xor
push
inc
hlt
mov
fstp
dec
pop
xchg
mov
adc
pop
cld
cltd
adc
in
cmp
jo
sub
sbb
push
loopne
mov
ss
mov
mov
sub
jle
gs
push
pop
push
aaa
ss
xchg
sub
rcrb
mov
fcmovne
mov
jne
and
imul
adc
and
push
mov
mov
ss
andl
mov
divl
int
pop
orb
jne
popf
cmp
in
pop
std
fwait
in
rcll
iret
sub
push
jg
out
aad
adc
jge
dec
xchg
aam
rcll
mov
xor
dec
jno,pt
lods
jecxz
jle
xchg
lcall
test
in
fiadds
lret
cld
and
jb
push
fwait
and
xchg
ds
inc
jp
iret
roll
sbb
push
mov
cmp
in
or
xchg
add
imul
ret
faddl
pushf
xchg
fwait
cmpb
dec
mov
lcall
mov
mov
xchg
push
cmc
dec
jmp
lret
int3
inc
xor
out
xchg
and
jae
xor
pop
sbb
out
ret
pop
js
jl
call
xchg
movb
loop
enter
mov
or
mov
add
into
negl
stc
iret
and
in
mov
hlt
clc
clc
popf
inc
out
cld
mov
lret
dec
or
sbb
int
iret
jmp
clc
outsl
jle
out
push
mov
pop
push
adc
lds
xchg
aas
jp
push
les
mov
in
mov
mov
mov
dec
out
jmp
xor
lods
mov
xor
lds
adc
mov
imul
fwait
pop
shl
shlb
notl
inc
out
fisttpll
ja
or
push
mov
outsl
mov
gs
jge
jmp
xchg
sbbl
ds
cmp
push
outsl
ds
outsl
sub
lods
xchg
xor
push
pop
mov
jnp
lahf
loop
stos
sub
lret
jg
sbb
or
pop
and
lods
add
pop
adcl
and
rcrb
scas
in
xor
dec
mov
sbb
rcrb
arpl
idivb
push
popf
push
dec
jnp
inc
push
pop
lahf
lea
push
imul
add
outsl
xor
into
lcall
jnp
add
mov
dec
push
sub
add
popf
ror
pop
or
sub
ds
pop
pop
shr
mov
sarl
push
add
mov
pop
sub
cli
jg
repz
jp
inc
xchg
ret
adc
lret
inc
cmpsl
inc
mov
push
lret
sub
mov
dec
mov
test
lods
jne
enter
jb
jecxz
rclb
fisubrs
or
mov
mov
mov
push
notb
hlt
add
pop
or
sbb
jnp
mov
xchg
xchg
ljmp
sub
inc
pop
sbb
aas
mov
shlb
jo
add
fwait
push
fdivl
push
nop
jmp
adc
add
push
and
adc
daa
fldcw
mov
sub
cmpb
adc
shll
movsl
div
and
je
lret
imul
mov
adc
mov
push
loopne
int
adc
ljmp
ret
ja
js
mov
rcrl
sub
or
mov
das
xor
cmp
cli
mov
lret
sarb
pop
popa
xor
push
adc
dec
aad
adc
iret
xchg
fists
cmpw
sahf
andl
mov
mov
in
movsl
cmc
into
popa
sub
or
inc
jmp
aaa
bndldx
fsts
pop
adc
and
andb
stos
imul
aad
jne
cmp
mov
lret
mov
adc
mov
jbe
int
iret
mov
push
lahf
xor
and
push
or
and
addr16
in
rorl
mov
mov
mov
xor
mov
lods
add
xchg
mov
popa
insl
add
pop
mov
add
or
dec
fs
jb
or
xchg
add
cmp
sub
jle
insb
sub
jl
shll
idiv
addr16
pop
and
adc
or
int3
xchg
lock
jmp
out
cli
xor
outsl
mov
roll
xchg
fsubr
popf
lds
les
stc
mov
or
das
repz
and
cmp
icebp
add
push
lahf
imul
pushf
data16
adc
shll
neg
pop
sub
push
leave
dec
gs
shll
stc
addr16
mov
daa
sub
mov
cmp
shlb
aas
xchg
ja
cltd
or
in
cs
pop
std
sti
add
xchg
mov
out
stos
jbe
pop
je
add
rcll
inc
and
and
cmp
and
cmp
cli
or
mov
mov
sub
cwtl
nop
xor
cmp
sbb
jno
pop
data16
sub
orl
fcmovb
adc
ss
xchg
stos
loope
orb
or
out
xor
mov
ja
dec
jmp
sub
into
std
popa
xchg
jmp
movsb
popf
stc
and
sbb
cmp
mov
dec
aaa
iret
js
jl
mov
adc
aas
icebp
mov
scas
mov
mov
xor
cmp
ffreep
xchg
sbb
add
fndisi(8087
sub
in
sub
sbb
dec
sub
sub
xchg
shl
adc
call
test
xchg
jg
sub
add
inc
pop
cmp
dec
push
pop
mov
inc
dec
out
fildl
arpl
push
aam
adc
add
jle
inc
call
mov
fcoms
dec
inc
pop
ret
fsubrs
xor
and
add
popf
xorl
inc
cli
or
cmpsb
jmp
mov
pusha
add
jmp
dec
pop
dec
jne
push
popf
jl
cmc
jne
std
cmp
pop
cs
js
mov
and
xchg
imul
mov
dec
fstpt
sub
mov
xor
inc
pop
or
popf
cmp
jle
add
lahf
clc
add
jae
add
sub
inc
mov
adc
int3
shlb
push
inc
addb
cwtl
cld
mov
mov
jns
arpl
mov
and
add
add
jg
or
mov
hlt
mov
jnp
dec
push
dec
es
dec
xchg
and
xchg
mov
stos
push
add
cmp
pop
inc
push
mov
test
scas
jmp
fs
dec
int
adc
cmp
dec
and
sub
jae
jmp
dec
or
stos
inc
mov
data16
xchg
push
mov
scas
cwtl
dec
divb
dec
push
jecxz
lea
xor
or
mov
and
lock
std
inc
nop
pushf
xchg
out
push
xorl
sbb
and
loope
jae
xchg
aad
push
jle
mov
sub
sahf
lds
xchg
inc
and
sub
sbb
push
dec
or
xchg
mov
repz
clc
loope
sub
jno
mov
cld
popa
shlb
sbb
push
fdivrs
push
sub
add
arpl
gs
sbb
popf
sub
or
aam
xor
add
aam
iret
gs
sub
mov
popf
out
in
add
jnp
jp
out
pop
pop
sahf
mov
and
movl
push
outsl
add
pop
pop
scas
pusha
dec
jp
jecxz
xchg
out
inc
in
xchg
ds
popf
inc
cmpl
or
and
movsl
shlb
jmp
cmp
cmc
pop
mov
shl
fiaddl
and
enter
addb
insl
sbb
pop
fadd
xacquire
or
call
xchg
enter
dec
fnstsw
mov
add
add
out
adc
mov
or
jle
and
dec
mov
pop
or
rclb
xor
lret
scas
and
pop
cmp
dec
dec
cmp
xor
arpl
lcall
pushw
inc
out
outsb
adc
filds
xor
test
inc
or
stc
sub
xor
pop
cs
add
cwtl
jl
cmp
stc
cmp
loop
jle
push
mov
or
or
sub
and
jns
dec
push
push
dec
cwtl
dec
das
fs
jp
sti
outsl
push
xchg
dec
inc
jmp
repz
mov
mov
jge
in
int3
outsb
imul
das
xchg
sbb
xchg
pushf
lret
mov
push
aam
test
cmp
xchg
loopne
mov
jb
and
nop
pushf
das
mov
ds
xchg
fildl
pop
push
data16
out
sub
dec
mulb
xor
fnsave
je
sbb
fmul
gs
adc
loop
xor
sbb
notb
mov
mov
mov
add
mov
jnp,pt
enter
pop
mov
ss
dec
inc
dec
add
mov
sbb
sbb
cmc
lods
rolb
add
sub
xchg
sbb
mov
lret
stc
mov
clc
sarb
ss
jnp
adc
jnp
and
cmp
jae
mov
das
adc
xchg
test
sbb
scas
mov
push
pop
vmovdqu
and
cmp
icebp
push
or
dec
xchg
movsb
outsl
sbb
jmp
add
outsb
pop
mov
fistpl
imulb
aas
pusha
xor
cmpsb
out
or
adc
and
jnp,pn
push
mov
xor
mov
pop
pop
movsl
out
sub
mov
cmpsb
enter
mov
mov
pop
cmpsb
dec
xorl
rcrl
cmp
bound
sarl
icebp
sbbb
lret
adc
sbb
or
add
sub
jl
test
cmp
mov
lret
in
adc
jl
mov
cmp
fiaddl
inc
inc
adcl
rcl
sarl
fbld
or
adc
mov
lret
fisttpl
in
cmpsl
sub
rclb
es
adc
in
sub
cmp
cmpsb
loop
loopne
arpl
adc
bound
pop
xchg
inc
scas
pop
out
cmp
movsb
xor
mov
pusha
push
xchg
jae
cmp
or
pop
dec
imulb
test
dec
adc
dec
and
mov
mov
adcl
lods
lods
jns
xor
sub
ret
testl
and
shlb
xchg
push
js
jne
push
mov
cwtl
or
out
xchg
fimull
add
push
jo
lret
test
dec
inc
push
adc
pop
jb
and
shll
adc
lods
push
mov
push
mov
mov
mov
push
test
mov
insl
jae
divl
and
ljmp
jecxz
jbe
es
jne
mov
add
sti
sti
popa
pop
les
push
ds
mov
nop
jb
lods
jg
sbb
cltd
mov
out
fsubr
xor
jmp
mov
mov
inc
in
test
add
push
add
into
xor
or
mov
bswap
stos
movb
and
fiaddl
add
je
xor
pop
push
test
mov
aad
mov
outsb
and
xor
fnstsw
movsb
sbb
fadds
xchg
jl
xor
in
arpl
and
mov
std
sbb
xlat
push
and
cs
mov
dec
lahf
mov
int3
jp
aad
mulb
xchg
sbb
mul
arpl
xchg
hlt
gs
out
fs
push
sti
mov
xchg
fxch
dec
sub
and
sub
cmp
xchg
test
mov
dec
sub
cmp
out
inc
inc
comiss
data16
pop
scas
jbe
repz
sbb
std
sub
repz
dec
jmp
movsl
mov
sbb
mov
lock
ret
pushf
mov
push
mov
push
ss
dec
and
ret
or
dec
mov
add
jo
push
cmpsb
outsl
insb
sbb
cmp
sbb
xor
out
mov
fs
mov
addb
inc
inc
rolb
push
sbb
cs
add
push
xor
inc
pusha
xchg
lahf
mov
jae
pop
pop
stos
xor
stos
jo,pt
adc
xlat
std
adc
inc
push
in
mov
ret
mov
mov
test
stc
jl
scas
hlt
arpl
in
fstp
in
inc
mov
aam
in
rorb
sub
int3
ljmp
jge
inc
mov
pop
fwait
push
ds
mov
and
push
js
push
jnp
mov
ss
das
mov
lahf
aaa
pop
mov
sub
xlat
cmp
nop
cltd
mov
ret
jmp
dec
out
sarb
or
push
enter
adc
std
push
das
loope
lcall
popf
jmp
push
pop
rclb
test
js
std
pop
adc
sarl
sbb
lods
ja
xchg
bnd
fwait
cs
es
or
aad
mov
loope
pop
.byte
and
test
leave
cmc
add
dec
mov
dec
cmp
aam
xchg
adc
pusha
or
divl
pop
adc
push
cmpsb
pop
cwtl
or
mov
mov
mov
aam
out
shll
sarl
and
repnz
repz
xchg
mov
xchg
dec
sbb
cmpsl
mov
nop
shrb
repz
es
mov
and
pop
mov
cltd
push
and
mull
cmp
pop
push
adc
ds
out
fcom
push
sbb
cmp
and
xor
bound
div
aaa
fmuls
xchg
out
mov
lds
add
lock
xor
lret
xor
pop
icebp
mov
jmp
sub
cmc
cmpsl
mov
inc
pusha
or
addr16
add
adc
push
add
sub
dec
fsubrl
pop
lcall
imul
xchg
jmp
fimuls
movsl
std
push
inc
inc
in
push
dec
dec
ja
cmp
lods
cltd
adc
popf
aas
inc
dec
das
out
shlb
iret
pusha
inc
lcall
xor
adc
adc
loope
inc
push
pusha
add
inc
mov
add
xchg
enter
shll
cmp
adc
data16
xor
mov
xor
sarl
lcall
arpl
xor
ds
movsl
aas
jne
cwtl
cs
cmp
push
bnd
pop
je
pusha
or
cmpsb
enter
jle
adc
mov
xchg
mov
sti
imul
add
icebp
cmp
addr16
jl
xor
lods
jmp
loop
outsb
popf
jae
or
rcrl
push
fstl
outsb
ljmp
lret
sti
fisubrs
and
hlt
outsb
mov
dec
sbb
jmp
fs
cmp
imul
out
fmull
pop
sahf
inc
fadd
dec
xchg
lods
test
rcrw
in
jne
xchg
push
icebp
sbb
sti
rcll
add
out
dec
sbb
inc
filds
aad
xlat
push
cs
push
pop
aaa
cwtl
xchg
lods
xor
jne
mov
cli
aaa
cltd
mov
push
mov
add
fiaddl
leave
lods
mov
cmpb
xor
fdiv
ss
pop
mov
das
dec
je
bound
inc
call
in
push
fisttps
lods
mov
mov
je
jle
fstps
xor
or
fdivrs
mov
mov
pop
and
push
push
lret
push
pushf
xor
xor
in
push
push
add
xor
dec
cld
jb
pop
fisttpll
mov
cmp
pop
icebp
xchg
inc
fucomi
sbb
pop
pushf
cmp
arpl
test
inc
jne
mov
jno
out
push
addr16
mov
cmp
mov
ret
xchg
inc
lahf
jg
in
sub
pop
das
mov
or
leave
adc
rorb
xchg
inc
std
or
adc
loop
out
aas
pop
mov
jle
sub
adc
cmp
out
mov
mov
cmpsb
xchg
stos
jne
aam
lcall
cmc
imul
in
dec
adc
shll
mov
and
mov
je
js
push
dec
jl
push
rcrl
add
push
mov
sbb
into
test
push
addl
mov
xor
call
out
mov
jno
mov
repnz
and
clc
nop
xlat
or
add
xor
sbb
pop
push
sub
fildll
xor
cmc
inc
mov
scas
fidivl
push
cmc
push
test
inc
xchg
inc
xor
xlat
icebp
pop
enter
aad
dec
add
cmp
les
ja
daa
push
inc
loope
xorb
pop
iret
mov
inc
and
lret
repz
jge
or
int3
roll
inc
dec
inc
inc
lods
sbb
jl
or
lods
add
sub
pusha
in
pop
ds
popf
iret
in
stos
pop
and
dec
cmp
mov
cmp
jae
sti
mov
in
orl
and
nop
ss
aad
shrl
addl
xchg
jnp
mov
arpl
lock
lods
xchg
pop
xor
and
test
loop
cmpsb
pop
hlt
pop
sub
sub
pusha
lods
ss
scas
je
and
and
roll
cmc
int
mov
jecxz
xor
lcall
cld
notl
das
out
in
bound
adc
mov
divb
fsts
out
mov
mov
rorb
adc
int
in
bnd
lahf
cmpsl
jp
sub
push
test
arpl
rcl
sbb
xchg
cmp
inc
push
jecxz
mov
inc
adc
pop
out
or
out
jg
ljmp
jne
xor
iret
xchg
adc
jp
and
pop
pop
gs
sbb
mov
dec
ds
into
outsl
sbb
in
xchg
mov
mov
add
xor
pop
sub
jge
lahf
cltd
mov
movsl
jle
mov
cmp
jns
mov
lods
xchg
mov
inc
scas
dec
flds
loop
jp
dec
cmpsl
mov
cmp
lfs
jg
out
leave
dec
inc
popf
outsl
cmp
test
xlat
stos
mov
sbb
sub
xchg
loope
mov
jge
arpl
hlt
repz
shl
fnstcw
pop
mov
cld
test
test
cmp
adc
movsl
pop
lods
mov
fistl
in
je
push
add
or
jge
andl
insb
jae
xor
test
jnp
jl
fimull
push
sbb
cmp
xor
or
notb
push
cmp
inc
or
jb
insb
inc
pop
inc
jl
loopne
and
das
imul
repnz
jl
gs
mov
fists
inc
xor
loopne
add
roll
pop
int3
outsl
clc
ss
xlat
adc
mov
mov
arpl
stc
es
in
fs
jmp
lcall
and
icebp
mov
imul
cmc
jae
adc
mov
mov
push
cmp
rol
nop
inc
sti
mov
adc
sbb
fists
int3
cmp
rorb
out
cmc
push
and
idiv
movsl
mov
jg
mov
divl
add
add
jl
in
cwtl
push
add
mov
jecxz
dec
scas
sub
cmp
mov
pop
adc
pushf
mov
cmp
lock
jle
adcb
push
mov
and
sbbl
cmpsl
leave
cmc
es
es
scas
jbe
xorl
cmp
xor
out
or
fistpll
lcall
jecxz
cmpl
sub
push
push
cmp
inc
adc
xchg
gs
push
sbb
cmpsl
pop
or
push
or
mov
cmpsb
mov
in
rcrl
cmp
mov
pop
fsubl
movlps
jmp
push
mov
inc
cld
xlat
rcrb
xor
decb
dec
mov
and
jne
lea
out
add
jecxz
adc
cltd
add
pop
out
adc
add
ret
adc
inc
addr16
data16
pop
out
push
inc
sbb
lds
pop
dec
jmp
dec
pusha
and
dec
adc
jge
xlat
movsb
sbb
notl
cs
lock
push
or
cmp
mov
in
les
cltd
movsb
mov
xchg
mov
jno
fstps
sbb
lds
inc
inc
adc
or
movsb
repz
cmp
pop
adc
inc
cmp
pop
push
push
push
push
adc
jo
cli
cmpsl
mov
fistpll
pop
jnp
inc
push
out
jl
outsb
adc
leave
nop
and
popa
roll
mov
call
jbe
dec
jb
xchg
sbbl
scas
lahf
lock
jge
cmp
xor
push
xchg
not
cmp
cmp
mov
sbbl
xor
loop
push
push
hlt
push
jne
xlat
inc
les
movsb
rol
sub
inc
in
stos
sub
xchg
pop
popf
dec
pop
sbb
lea
dec
insb
mov
cwtl
inc
adc
pop
gs
into
in
daa
pop
xor
ja
fwait
cli
lcall
outsb
pop
enter
mov
inc
mov
fisubs
lds
jge
or
pop
in
push
insl
cmc
or
inc
pop
pop
psubusw
push
int
inc
inc
nop
xchg
push
sbb
push
or
das
ret
cmpl
rcr
push
test
push
ficompl
push
adcl
mov
mov
fmull
les
dec
add
push
fstpl
rcrl
sub
xor
jge
mov
aad
mov
xchg
imul
scas
xor
inc
adc
movsl
ljmp
mov
out
cmp
jo
add
push
sub
lret
clc
cmp
mov
mov
mov
mov
pop
adc
fsubs
adc
xorb
dec
add
jle
int3
mov
sarl
arpl
xchg
lea
xchg
mov
je
nop
jl
and
push
mov
ficoms
dec
ja
in
xchg
adc
aas
fxch
leave
sti
adc
test
std
dec
test
fs
imul
mov
fnstcw
mov
sub
adc
sub
and
cmp
push
outsb
insb
jns
push
lods
call
jbe
mov
fildll
adc
pop
ja
cli
fiaddl
mov
cmp
sbb
or
pop
sub
push
es
push
adc
in
movsl
lahf
jg
das
xchg
in
dec
xor
das
push
push
and
jl
sbb
dec
mov
and
adc
jnp
lret
and
shl
xchg
js
stc
adc
inc
sahf
int
inc
mov
and
stos
mov
xor
mov
fimuls
je
bound
les
mov
mov
lods
pop
int
sub
js
lds
jae
ds
aam
inc
xchg
pushf
outsb
mov
ds
xorb
cmp
inc
pushl
sti
jp
call
or
ja
outsb
aaa
mov
mov
sti
mov
das
movsl
sbb
out
dec
xchg
aaa
jmp
inc
dec
mov
jae
mov
xlat
nop
jmp
xor
rorb
adc
aam
test
orl
inc
xlat
mov
pop
pop
mov
mov
or
je
lret
je
add
es
clc
movsl
aaa
sbb
inc
das
iret
push
pusha
scas
in
inc
js
mov
into
jge
push
and
mov
or
cli
adc
popa
iret
adc
aas
arpl
mov
sub
dec
popa
xchg
push
sbb
jae
inc
xchg
sub
addr16
fs
inc
aaa
orb
add
xchg
pop
mov
sub
push
xor
jmp
cwtl
inc
aad
movsl
in
jae
fldt
in
std
es
inc
cltd
inc
nop
mov
push
and
in
mulb
push
test
mov
out
outsl
dec
ja
aaa
out
mov
nop
or
repz
test
addr16
push
sbb
repz
cmpsl
xor
std
add
shl
sbb
push
xchg
outsb
insb
mov
and
xchg
shlb
or
inc
adc
leave
je
mov
push
addr16
scas
int
int3
or
mov
stos
gs
lods
adc
pop
mov
addr16
xchg
sbb
sub
push
or
xor
into
cmc
cmp
cmp
sub
push
adc
lods
in
xor
stos
jae
add
fsubrs
mov
ret
jge
adc
clc
sub
sbb
daa
ljmp
icebp
push
icebp
jae
adc
movsl
jno
shrl
rorb
testb
daa
lds
xlat
les
dec
mov
xor
nop
push
rolb
jecxz
sub
sbb
add
pop
jmp
mov
cmp
repnz
xchg
dec
add
lret
and
loop
scas
imul
xor
rcrl
xchg
jbe,pn
pop
out
outsl
rep
fwait
iret
jb
stos
dec
mov
inc
rcrl
cmp
dec
inc
dec
ljmp
cmp
inc
pusha
adc
add
sbb
pop
fnstsw
popa
push
out
dec
loope
roll
ffree
rcr
scas
scas
repz
fs
mov
cmp
mov
push
sub
ret
movsb
sub
sarl
jmp
fimuls
mov
and
mov
adc
arpl
out
sarl
outsb
or
ljmp
xor
divl
push
mov
dec
rcr
out
mov
test
lret
test
fs
and
sbb
enter
push
jmp
enter
xor
int
and
push
dec
dec
push
das
mov
cmp
lcall
mov
pop
bound
nop
mov
dec
push
push
rcl
aad
xchg
outsb
pushf
dec
mov
xor
push
pop
rclb
and
test
in
xchg
add
das
sub
rolb
mov
lds
fdivs
and
jg
sbb
push
push
aad
add
loop
loop
adc
fmuls
jg
ret
pushl
rolb
es
lock
and
cld
mov
push
adc
pop
inc
sub
aas
call
add
pop
mov
mov
mov
add
sub
sub
push
push
mov
ja
imull
mov
rorl
jge
mov
xchg
xchg
roll
das
jbe
aas
cld
arpl
adc
sub
xor
mov
xchg
pop
repnz
push
add
xor
push
sub
xchg
push
fldenv
das
dec
mov
xchg
mov
pop
mov
iret
stos
cmp
cmp
push
jge
or
sbb
stc
cmp
mov
mulb
jb
pop
daa
push
inc
push
add
push
into
lahf
jb
ret
rolb
xorl
fxrstor
repz
mov
add
int
mov
or
sbbl
xchg
mov
mov
push
push
lods
mov
push
mov
pop
sub
mov
int3
adc
dec
fiaddl
loope
mov
cli
mov
sub
mov
inc
pop
dec
mov
frstor
out
iret
push
jle
inc
xchg
test
xor
loope
inc
nop
in
push
fists
iret
or
mov
xchg
xchg
cmp
scas
cmp
pushf
jbe
inc
mov
idivb
cwtl
cmpsl
cmp
dec
inc
cs
cmp
jbe
mov
cli
fldenv
sub
push
mov
filds
xchg
push
into
push
fmull
mov
adc
mov
xor
mov
int
xchg
jmp
inc
call
and
in
adc
xor
and
cmp
adc
daa
pop
movsb
inc
call
scas
shlb
push
fmull
pop
shr
ficomps
and
outsl
sbb
flds
roll
movsl
mov
sahf
fnsave
jecxz
jno
loopne
out
jb
cmp
das
dec
add
xchg
mov
mov
idivl
xchg
hlt
loope
ret
out
popf
ds
sbb
cmp
addr16
iret
in
mov
inc
test
add
or
inc
aam
mov
add
cmp
mov
shl
xorl
fstps
clc
xor
int3
test
adc
xor
inc
test
and
push
mov
je
loope
cmpsb
call
lret
xor
cmpsb
pop
idivb
scas
mov
repz
cmp
adc
lret
add
xchg
fwait
jb
xor
dec
bnd
fcmove
data16
or
setl
cmpsl
int3
dec
aas
mov
hlt
loopne
push
shr
in
andb
push
push
inc
and
subb
mov
pop
pop
jmp
aam
jge
xor
outsl
ds
lea
andl
cmp
lahf
inc
cmc
js
or
jmp
test
andb
repnz
test
je
mov
pop
test
cmp
test
int3
jmp
or
ljmp
pop
xchg
dec
sub
dec
andb
ret
mov
das
movsl
inc
sub
jmp
jne
cmp
jb
jo
cwtl
sbb
clc
sahf
outsb
xchg
push
shl
inc
es
shlb
mov
mov
lea
xchg
xchg
rorl
andl
divb
js
sbb
dec
adc
test
mov
add
js
dec
in
cltd
add
iret
pop
stos
movsb
and
mov
aad
ret
les
push
push
sub
inc
jnp
insb
cmp
sub
fstps
arpl
fcmovb
jg
or
mov
and
mov
or
scas
pop
aaa
xchg
cmp
jmp
icebp
push
and
out
jmp
and
lea
jae
pop
gs
sbb
mov
inc
mov
negb
jg
push
out
sbb
xor
pop
add
xor
lcall
jns
popf
or
enter
lret
mov
adc
push
daa
dec
lahf
mov
jo
dec
push
xor
cltd
dec
into
and
sub
inc
push
popf
sbb
jb
xchg
sbb
stc
les
mov
scas
mov
jb
jb
and
xchg
mov
dec
mov
push
inc
xor
in
aam
or
fdiv
sahf
cmp
mov
je
stos
xorb
add
xor
xlat
push
mov
fildl
dec
shl
xor
pop
ret
in
outsl
xchg
jl
xlat
scas
std
or
das
jo
add
bound
push
rcrb
cmp
jge
daa
je
push
dec
xchg
mov
mov
fcmovnbe
mov
and
push
add
push
sub
dec
mov
mov
jae
dec
and
fwait
pop
ret
add
int
out
popa
movsb
push
or
push
icebp
insl
fcomps
mov
sbb
fidivrs
inc
xlat
adc
leave
aad
fucomip
push
loop
repnz
jp
dec
mov
add
pop
sbb
repnz
loopne
inc
cmp
ja
cmp
ljmp
loop
add
pop
add
dec
mov
out
pop
xchg
add
in
or
out
pop
dec
sbbl
cmp
mov
loope
mov
jle
xchg
pop
fsts
cltd
clc
std
in
jmp
pop
data16
jg
xor
pushf
mov
out
mov
add
jns
push
mov
push
lods
xchg
adc
xor
cs
push
imul
xorb
pop
aas
ret
sub
mov
and
mov
push
add
addl
fimull
nop
xchg
mov
lock
sbb
shl
add
adc
stos
xchg
outsl
mov
inc
dec
xor
cli
sti
add
mov
or
repz
sub
xchg
and
xor
inc
inc
shll
clc
lahf
enter
daa
jb
jo
xchg
mov
in
push
adc
add
cli
into
dec
mov
push
mov
mov
jno
cli
push
arpl
xchg
fs
jmp
mov
outsb
mov
jne
in
into
or
leave
add
or
or
in
mov
das
adc
push
lret
aaa
lret
add
inc
leave
outsl
test
mov
clc
mov
out
adc
jp
inc
xsaveopt
imul
mov
and
cmpl
in
mov
les
insb
pop
dec
xor
iret
test
stos
and
outsl
lcall
in
mov
fwait
fwait
dec
test
es
cmp
or
mov
imull
dec
pushf
push
icebp
bound
fcmovnu
push
les
fs
inc
lock
xchg
and
mov
imul
lds
into
frstor
in
jge
push
xorb
lcall
pop
stos
imul
lcall
mov
int3
push
pop
dec
push
mov
pop
jmp
jmp
lahf
test
dec
xor
icebp
xchg
stos
and
adcl
lock
arpl
lea
cmp
cmp
mov
xor
rorl
pop
push
push
jno
andl
cltd
or
ja
daa
add
adc
in
pushf
outsl
lds
mov
mov
imul
add
notl
lret
in
stos
icebp
jo
mov
jo
mov
jo
jb
scas
jp
mov
out
stc
mov
out
test
mov
xchg
test
call
ret
or
push
je
lods
out
roll
jne
sahf
pop
add
dec
cltd
mov
rcrb
xor
inc
pusha
inc
fstpl
lret
in
sbb
cmp
stc
push
or
call
aaa
insl
adc
inc
and
hlt
and
out
pop
loope
push
sti
sub
cmpsl
test
mov
inc
and
push
mov
jo
cwtl
mov
sub
das
cmp
xchg
mov
xchg
fwait
into
mov
mov
je
mov
mov
pop
cli
in
stos
jne
fdivl
cs
mov
notb
sbb
lock
and
adc
lock
mov
or
dec
push
decb
adc
in
cmp
sub
je
aaa
movsl
out
adc
popa
into
es
fisttpl
sub
and
fdivrs
dec
pop
inc
or
xchg
jl
mov
jp
or
mov
and
sub
les
cmp
mov
icebp
repnz
sub
cmpsb
out
lods
out
in
pop
iret
xchg
sbb
or
lods
dec
lcall
pop
push
test
mov
pop
loopne
sub
pop
pop
test
aaa
iret
inc
cmpsb
cmp
imul
push
sub
fisubl
nop
sub
mov
mov
push
push
xor
xorl
lret
adc
hlt
pusha
push
shr
shr
std
adc
dec
loopne
xor
mov
xor
inc
lahf
dec
enter
jno
jecxz
int
pop
cmp
fdivr
lahf
movsb
clc
clc
pushf
sub
and
and
out
hlt
push
popf
adc
ja
leave
adc
lock
out
lahf
mov
cmp
xor
mov
scas
mov
jo
notl
lfs
sbb
arpl
sbb
test
lods
outsl
sti
dec
cmpsl
jne
dec
mov
es
jo
push
aad
adc
test
or
ja
xor
push
inc
xchg
adc
popa
jb
mov
xor
xor
dec
lods
xlat
fildl
lret
lea
cltd
nop
push
mov
scas
mov
jbe
cmp
fmull
sub
mov
arpl
pusha
lea
mov
shll
inc
inc
inc
mov
fs
pop
in
loop
pop
jns
imul
inc
fimuls
pop
stc
sbb
clts
add
leave
scas
js
cmp
test
mov
cmp
inc
adc
cmp
fldcw
rcrb
sub
test
les
fdivs
xorb
jb
xchg
pop
xchg
push
adc
fisttpll
jbe
out
dec
xchg
out
aad
mov
inc
leave
hlt
repz
test
jnp
into
jns
xchg
sbb
push
pop
stc
inc
adcl
jl
das
sub
adc
adc
leave
mov
sbb
ss
mov
push
aas
movsb
rorl
xchg
or
scas
sub
and
xchg
call
or
jo
outsl
ljmp
aad
pop
daa
add
push
hlt
cmpsb
inc
mov
mov
int
mov
adc
and
pop
out
pop
sub
movsb
leave
inc
insb
mov
pmulhuw
inc
push
jmp
out
lret
insb
and
dec
push
sbb
icebp
ret
out
fwait
imul
stos
aad
mov
add
dec
shll
loopne
add
jg
jle
inc
adc
jp
ljmp
js
mov
cmpsl
mov
sbb
xchg
sbb
sti
testl
push
bound
mov
push
pop
daa
xchg
cli
lock
leave
jnp
fidivl
sub
mov
mov
dec
insl
imul
mov
inc
shlb
into
sub
scas
mov
fwait
cwtl
sbb
loopne
mov
js
lret
or
add
xchg
ret
jnp
repnz
and
mov
pop
jg
test
push
dec
int
pop
scas
aas
pop
add
call
mov
xchg
jp
adc
les
sub
icebp
mov
loop
and
pushf
into
loope
xchg
jnp
out
jl
sbb
xchg
push
shrl
inc
add
sahf
cmpsb
cmp
out
addl
adc
push
mov
xchg
dec
imulb
into
clc
mov
pop
iret
cld
lea
and
leave
andb
or
sbb
inc
or
ja
cmp
aaa
out
ja
xchg
call
stos
mov
call
sub
ret
stos
jae
loope
hlt
scas
mov
pop
scas
inc
mov
add
mov
fldl
push
xor
sub
xchg
lret
repz
or
aas
cltd
add
popf
and
add
xor
push
mov
sub
cwtl
push
aad
jle
in
mov
pushf
out
dec
loopne
mov
pop
mov
test
movsb
pop
pop
sar
xchg
xor
faddl
insl
cmp
div
in
pop
cwtl
insl
and
push
ljmp
imull
popf
das
sub
addr16
cmp
dec
mov
ljmp
cmp
lods
jb,pt
add
or
mov
dec
add
rcrl
mov
mov
xor
roll
mov
ret
imul
jae
adc
push
mov
dec
stos
xchg
jmp
les
jne
iret
mov
aad
xchg
test
int3
inc
cmpsb
neg
sub
int
mov
xor
jae
fwait
sub
sbb
insl
iret
push
and
push
push
sub
pop
mov
js
test
dec
popf
outsb
adc
inc
adc
cwtl
ret
xor
into
aas
dec
loope
nop
jns
sub
in
xor
or
xor
jle
add
mov
sub
sub
lahf
lds
dec
clc
xor
in
cmpsb
into
scas
fcoms
jecxz
rcrl
push
and
jmp
xchg
ds
mov
inc
adc
sbb
ret
mov
mov
xor
imul
imul
out
hlt
cltd
xor
inc
lods
shl
fld
imul
cmp
stc
jns
fisubrl
sbb
in
inc
adc
in
popf
fadd
nop
aaa
sti
xchg
jecxz
aaa
pusha
ret
sbb
mov
ja
repnz
mov
aas
dec
or
jns
push
or
mov
pop
lahf
lea
bound
xchg
lcall
fucomi
fcoml
sbb
jle
inc
ds
scas
lea
ljmp
fldl2e
mov
stos
xchg
out
xchg
fs
inc
push
pop
outsb
cmp
sbb
mov
mov
addl
or
or
xchg
inc
in
or
xor
lret
lods
sbb
fisttps
xor
mov
add
jb
xchg
add
das
jecxz
daa
fmuls
jle
push
ljmp
enter
adc
cltd
sbb
add
fidivrs
mov
mov
jns
enter
mov
dec
sub
or
fnsave
mov
in
js
stos
mov
cmp
repnz
imul
xchg
mov
call
fdivl
push
ficompl
mov
sub
pop
xor
sbb
sbb
in
sub
adc
jg
pusha
leave
sub
loop
lea
xor
into
pop
xchg
imul
pop
cmc
sahf
ds
rcr
cmp
in
dec
loope
lods
inc
sub
lods
movb
xor
xor
sub
stc
lret
imul
mov
in
loop
push
repz
mov
dec
mov
jle
mov
push
icebp
sub
jae
jbe
jmp
rcl
mov
and
push
dec
dec
push
mul
loope
mov
das
adc
pop
test
xchg
push
xchg
push
and
dec
adc
xor
ret
inc
pop
pop
sti
adc
sbb
mov
xchg
lret
lea
pop
int3
adc
or
mov
sbb
cmp
ret
cltd
mov
enter
push
pop
shll
mov
jle
sub
sti
jnp
mov
imul
push
rclb
repz
mov
push
dec
rcll
in
and
jae
or
xlat
movsl
add
outsl
scas
push
mov
popf
inc
mov
adc
cs
ds
out
jbe
mov
fs
and
and
lods
xor
lods
ds
inc
adc
pop
ds
lret
test
mov
xchg
xor
add
jge
cmp
loop
sbb
adc
cmp
add
lcall
lods
inc
pushf
mov
mov
sahf
jbe
or
imul
fcmovnbe
push
push
push
clc
mov
lcall
fs
and
sub
in
add
test
sub
lret
cmc
sub
outsb
sub
mov
out
dec
nop
ja
rorl
in
pop
sbb
in
or
test
add
sbb
mov
sbb
pop
leave
push
into
sub
push
cltd
push
mov
mov
xor
push
sbb
sbb
jmp
push
mov
movsl
inc
adc
mov
cmpsl
adc
push
sub
push
jmp
sbb
inc
outsb
xor
or
adc
push
call
fldl
add
mov
push
pop
insb
jle
ljmp
jae
sub
push
jmp
sbb
sub
jge
mov
push
fisubl
cmp
mov
add
jge
push
stos
lahf
pop
mov
and
dec
jge
cmc
fs
clc
rcl
daa
out
out
cmc
test
imul
adc
adc
cmp
movb
outsl
sub
fidivrs
sbb
mov
mov
insb
xchg
push
lcall
xchg
pop
sub
arpl
mov
cmp
outsb
mov
stos
mov
mov
push
push
or
ja
das
ficompl
jmp
das
repnz
stc
pop
mov
aaa
and
fmuls
out
in
cmp
popa
ja
imul
xchg
push
in
xor
mov
sbb
mov
adc
lret
ljmp
cld
inc
cmp
arpl
sbb
bound
dec
and
pop
adc
enter
jg
lret
push
pop
cmc
jge
add
push
or
movsb
dec
mov
fld
pushf
sbb
inc
xchg
div
js
jmp
bound
xor
bound
inc
repnz
aam
cltd
pop
sub
mov
icebp
stos
dec
jbe
sarl
or
add
push
or
adc
and
fcmovnu
repz
insl
pop
dec
mov
xchg
fs
jle
lds
sbb
push
lods
lock
out
xchg
pop
rcl
movsb
pop
loop
jno
dec
inc
out
pop
jg
adc
inc
int3
pop
cwtl
xlat
and
das
add
dec
cmpsl
mov
cmp
xchg
aad
mov
out
in
sbb
mov
inc
scas
rcrl
dec
xor
notb
jmp
sub
adc
mov
xchg
sub
cltd
cs
pop
cmp
pop
ds
lds
push
stos
sbb
out
push
sub
mov
mov
fwait
inc
or
mov
ds
mov
bound
jne
daa
lahf
fldcw
or
popf
push
pop
jmp
aas
mov
cltd
test
test
movsl
cli
cmpsl
mov
dec
imul
ds
and
cld
and
push
lret
mov
je
dec
pop
add
jb
outsb
test
and
xchg
loopne
and
dec
je
cmc
cmp
push
push
fmulp
sbb
nop
push
sub
add
xor
dec
cmpsb
std
scas
jno
xchg
fbld
and
lock
inc
xchg
xchg
dec
xchg
xchg
push
jne
pop
xor
mov
imul
test
out
cs
les
movsl
sub
push
mov
cmp
jge
sbb
stos
aad
pop
ljmp
sbb
add
adc
add
fmul
mov
inc
cmpsl
push
cmpl
data16
add
jnp
xchg
lret
loop
loope
stos
push
cmp
pop
push
ss
test
xchg
and
push
push
sbb
jns
sbb
or
xchg
insb
rolb
mov
sub
xor
rcll
push
dec
jl
in
cltd
jne
sbb
xchg
sub
xor
arpl
xchg
add
pop
out
and
mov
xor
arpl
sub
add
adc
fidivl
mov
dec
mov
add
lret
and
cmp
or
cld
sahf
cmp
jge
xor
les
shl
cmp
mov
xor
popf
mov
ret
jecxz
in
push
xchg
mov
inc
aaa
or
xchg
pop
subb
icebp
xor
jmp
push
mov
inc
push
inc
xchg
das
addr16
mov
sbb
pop
cmp
dec
fisttpll
in
insb
pop
repz
mov
subb
fxch
sbb
push
shl
sbb
mov
pop
movsb
test
sub
testl
aad
in
inc
dec
fs
sbbl
insl
push
jl
lods
adc
aad
jmp
enter
add
xchg
out
cltd
in
in
xor
sub
stc
cmc
repnz
or
mov
cmp
sbb
fisubs
xchg
pop
dec
fcoms
jmp
test
orl
fdivl
int
adc
loopne
nop
dec
aam
inc
push
or
pop
test
jo
fidivs
leave
ja
insb
mov
jmp
dec
push
add
scas
outsl
insl
add
sbb
push
hlt
push
lcall
imul
mov
dec
cmpsl
xchg
cmpsl
data16
lods
cld
outsb
test
pusha
inc
data16
enter
or
loopne
and
push
scas
addb
out
inc
jns
mov
pop
cmc
lret
out
repnz
xchg
cld
pop
sbb
sbb
cmpsb
sub
sbb
add
push
repz
mov
and
lret
cmp
int
xor
and
mov
movsb
or
xchg
orl
mov
dec
lea
push
sbb
push
lret
push
leave
outsl
call
sti
les
pusha
arpl
popf
xchg
adc
mov
orl
cld
push
jle
jmp
dec
mov
loope
adc
pop
cmp
mov
push
mull
adc
adc
es
or
cwtl
sbb
imul
movsl
ds
mov
xchg
jb
mov
sbb
mov
jns
and
push
or
mov
cmp
fcomps
movsl
inc
out
jg
in
loop
dec
scas
pop
popf
fisubs
pop
add
inc
mov
cmp
ljmp
pop
rorl
ror
fdivrp
filds
sub
es
push
mov
loop
and
fidivrs
xchg
xor
shlb
fdivrp
lods
lahf
inc
inc
insl
out
mov
sbb
shlb
xchg
fucomp
adc
xor
or
js
mov
pop
sub
addb
push
sbb
xchg
add
sbb
xchg
and
test
xchg
outsl
nop
push
pop
jnp
int
mov
int3
out
inc
jg
inc
out
lock
push
mov
push
dec
xchg
sbb
adc
movsb
lds
ficompl
in
push
pop
mov
out
jmp
pop
mov
xchg
jnp
scas
icebp
fsubl
mov
xor
mov
out
cmpsl
jge
cmp
add
ret
outsb
lds
mov
shll
mov
es
jg
lods
rorb
lods
das
push
lret
lcall
out
adc
and
pop
sbb
mov
mov
cs
in
jmp
mov
ds
bnd
push
lret
jge
movsl
or
pop
mov
jae
mov
cli
cmp
shll
jl
sub
jnp
mov
xchg
push
dec
sub
mov
mov
ss
out
sahf
push
gs
mov
test
repz
fidivs
push
scas
arpl
popa
cmp
in
pop
movsb
mov
aad
nop
scas
icebp
pushl
iret
mov
adcb
jl
and
test
insl
mov
decb
mov
add
imul
or
mov
adc
cmp
ret
scas
jns
jl
movsl
mov
lods
shrb
cli
xchg
sarl
movsb
push
push
iret
movsb
ljmp
jge
add
push
data16
mov
xchg
or
mov
js
mov
jg
mov
or
adc
add
xor
mov
jg
jle
out
mov
test
adc
sbb
ret
nop
jecxz
mov
adc
rclb
pushf
jns
bound
xor
repnz
fnstcw
imul
inc
add
push
xor
sbb
mov
inc
push
mov
adc
add
daa
xlat
adc
leave
fstps
out
shll
sahf
sbb
dec
cmp
out
in
push
fbstp
lds
xor
sub
out
mov
xchg
in
sti
imul
inc
inc
xlat
xor
lods
add
sub
xor
pop
dec
clc
xchg
xchg
ja
leave
in
cmpsb
pop
jmp
or
cmp
sub
mov
shrd
xchg
aas
fldenv
ljmp
and
out
jne
sarb
mov
jg
push
and
out
ss
pop
mov
repz
xor
and
xchg
sahf
pusha
or
loope
cld
stc
cmc
out
imul
stc
lods
xchg
lea
jno
imul
in
aas
sub
sbbl
adc
iret
pop
sbb
lret
loope
xor
jl
je
adc
fcoml
notb
std
clc
fmull
idiv
dec
test
mov
mov
cmp
ret
pop
call
jecxz
pushf
insl
dec
jmp
adcb
add
push
and
sub
push
int
jne
jg
sbb
jmp
out
cmc
adc
cmpsl
pop
xor
pop
bound
adc
call
sbb
sub
add
data16
popa
or
nop
pop
mov
movsl
jle
mov
popa
jmp
out
xchg
xor
mov
aam
lods
sbb
xor
jmp
popf
ljmp
in
lret
xor
mov
jmp
or
jb
je
or
add
lcall
add
bswap
fndisi(8087
std
cmpsl
jo
and
mov
mov
jno
ja
add
mov
push
mov
ss
inc
jge
ficoml
loope
clc
fisttpll
pop
push
mov
imul
push
xlat
into
pop
dec
mov
clc
leave
add
inc
jp
mov
cmpsl
inc
sub
adc
pop
lret
and
pop
or
movsb
jae
lahf
test
aaa
sbb
push
mov
inc
rclb
lock
negb
shlb
test
mov
lods
dec
xchg
pop
mov
xor
jecxz
xor
loope
mov
add
pop
mov
fimull
stc
push
mov
add
push
sub
push
addr16
or
inc
aam
out
mov
lahf
fists
imul
mov
adc
jmp
push
dec
sbb
dec
dec
add
cmp
rorb
mov
int3
xor
jb
lock
jne
stc
jns
loop
xchg
inc
mov
inc
pop
mov
push
stos
xor
sub
sbb
sub
lea
mov
and
incb
push
fcompl
inc
fimull
cwtl
adcl
cmp
imul
mov
arpl
inc
or
sbb
mov
shlb
pop
jle
shl
outsb
stos
fadds
cltd
int3
sub
pop
mov
mov
in
rol
mov
lods
cmp
aas
rol
xbegin
mov
jl
sub
repnz
out
test
sbb
pusha
add
ret
repnz
lahf
xor
inc
pop
push
fwait
outsb
sahf
jle
call
rcrl
loopne
popa
jg
push
pop
jmp
loopne
aas
xor
int
and
push
xorb
add
aad
sbb
add
cmpsb
push
mov
push
add
aam
jnp
or
aaa
xor
daa
je
repnz
push
cmpsl
cmpsl
mov
or
pop
xorb
out
adc
xor
xor
es
xlat
cltd
xchg
outsl
popl
test
jo
sbb
xchg
pop
jle
mov
cmp
std
out
cmp
xchg
in
enter
mov
xchg
divb
lret
mov
pop
loopne
cmp
inc
sahf
inc
in
inc
or
je
in
pusha
stos
das
lcall
inc
and
sbb
xor
movl
or
or
jno
pop
dec
loopne
insl
pushf
jge
fisttpl
stc
std
insb
pushf
int3
clc
in
clc
xchg
cli
lret
stos
mov
shlb
shlb
enter
insl
push
rcrl
xchg
push
mov
xor
adc
pop
push
dec
mov
pop
mov
fcmove
aam
push
popa
push
sub
lahf
pop
push
pop
popa
pop
adc
dec
push
push
mov
dec
and
pop
jmp
mov
es
mov
sbb
cmp
out
xor
aas
out
pusha
pop
and
push
cmc
mov
sub
.byte
add
dec
add
dec
add
xor
adc
dec
push
inc
xor
xor
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
push
das
cmp
sbb
inc
out
aam
jb
sbb
pop
call
pop
mov
pop
add
and
pushf
movsl
jp
pop
add
jmp
push
dec
adc
div
fs
xchg
xor
jmp
cld
test
or
add
addl
jle
sub
mov
mov
mov
xor
mov
add
push
pop
sub
mov
mov
push
push
xor
pop
pop
mov
sub
mov
cmp
jne
mov
jmp
fdivs
push
xchg
test
xor
imul
stos
movzwl
jmp
push
and
fstps
fwait
cmp
jbe
in
add
fcmovnbe
sbb
inc
xor
mov
ljmp
cmp
lock
xor
cmp
and
jmp
mov
insl
push
cmpb
fsubr
inc
fnsave
in
jns
jmp
test
cld
or
xlat
lcall
add
pop
dec
or
jbe
xchg
mov
mov
rorl
and
jb
mov
push
outsb
or
jp
insl
ret
and
scas
jns
popf
sub
jbe
xchg
mov
arpl
xor
icebp
jne
andl
fucomi
add
adc
testb
push
mov
and
sahf
xor
ret
leave
mov
pop
gs
jb
std
hlt
pop
sbb
call
mov
pop
push
adc
add
add
add
xchg
sahf
jge
outsb
fbld
fldl
mov
in
fbstp
or
pop
add
out
pop
imul
lret
add
and
adc
push
and
imul
stos
pop
xchg
mov
stos
jl
adc
testb
movsl
mov
and
xor
inc
sbb
test
pop
mov
fstpl
rcr
popa
and
cmc
inc
pop
out
sub
jp,pn
jns
sbb
imull
sub
cmp
addr16
inc
and
add
sbb
xor
fisubl
mov
cmc
inc
lea
aam
fisttpll
sbb
adc
ffree
popa
rorl
mov
mov
addb
inc
jnp
add
das
data16
cmp
mov
aaa
shlb
sub
mov
add
mov
cltd
jnp
adc
pop
leave
ds
push
jmp
adc
sahf
jle
pop
out
aas
rolb
fisubl
and
addb
addb
jno
sahf
mov
rolb
jecxz
mov
cmpsb
js
ret
and
or
and
stos
and
mov
push
push
or
shr
push
push
pop
nop
rorl
clc
filds
movsl
pusha
shr
leave
sbb
inc
push
test
cli
imul
add
out
jp
rcrl
fwait
inc
jne
mov
gs
shrl
out
sahf
xchg
fs
jp
jge
loop
std
jae
enter
jmp
ljmp
and
add
gs
lock
cs
addr16
ljmp
jp
arpl
sbb
add
mov
xor
in
repz
imul
fildll
dec
xor
xor
fwait
inc
mov
inc
data16
pop
sbb
mov
aas
loope
out
and
int3
or
mov
and
es
mov
cmp
mov
out
ds
shll
xchg
jbe
sbb
ja
out
rcl
push
into
sub
sub
sbb
dec
out
ds
out
pop
mov
or
and
out
sub
mov
out
ds
out
push
in
out
loope,pt
out
loope,pt
dec
sbb
inc
int3
lock
sbb
and
ds
repz
out
adc
loop
fmull
das
jae
and
inc
push
xor
fdivp
push
hlt
aad
in
outsb
jecxz
pop
mov
push
outsl
ljmp
shr
les
pop
insl
clc
fidivrs
loope
aas
mov
dec
ret
out
cmp
and
ds
push
cmp
and
les
and
or
es
ds
daa
jmp
ds
lret
ja
loope
aas
mov
dec
lods
in
loope
and
sahf
mov
out
ds
and
mov
dec
fs
shrl
in
outsb
cs
loope,pt
inc
push
loope
aas
jnp
shl
xor
and
std
fldenv
ds
pop
dec
insb
enter
dec
mov
enter
loopne
insb
loope
sub
cmp
faddl
sub
sub
ds
into
repz
loop
out
pushf
dec
jp
xchg
mov
mov
loope
aas
xor
lret
cmp
and
je
shll
push
in
and
mull
mov
xor
loop
out
in
sahf
mov
out
ds
mov
loope,pt
pop
insl
lahf
daa
pop
outsb
pushf
into
or
add
out
ds
daa
xor
push
ss
loope,pt
out
loope,pt
aad
loope
out
loope,pt
out
stos
dec
cs
stos
dec
pop
cmpsb
in
inc
dec
xchg
add
dec
dec
popa
outsb
daa
pop
mov
sbb
xor
cmp
lods
lret
cs
rorl
mov
loope
test
dec
cmp
lods
push
sub
enter
jp
xchg
movsl
aaa
xchg
adc
mov
cs
rorl
pop
aas
pushf
outsb
xchg
in
in
test
jo
cs
pop
loop
out
ds
xchg
adc
mov
cs
rorl
adc
pop
loop
out
ds
xchg
adc
mov
pushl
rorl
xor
cmp
xchg
dec
push
sbb
les
jmp
in
mov
inc
mov
loope,pt
aam
out
int3
jo
rcll
cmp
mov
out
ds
stos
aas
out
and
mov
cmp
fimuls
sbb
lds
jmp
xor
out
test
fisttpll
inc
in
and
pusha
mov
out
insb
mov
rol
and
lea
lret
or
and
imul
xchg
int3
cmpsb
jmp
out
ds
dec
aam
and
cmp
dec
out
loop,pt
fwait
loope,pt
out
sbb
jnp
mov
ficoml
repnz
scas
and
pop
out
push
xchg
loope,pt
lret
xor
and
repz
or
idivl
ljmp
and
jl
mov
and
sub
ds
xchg
dec
cmp
ja
das
cltd
loope,pt
sub
xchg
jnp
jge
mov
int
aad
dec
xchg
or
and
popf
mov
lods
out
cld
repnz
in
dec
jb
and
sub
lea
adc
loop
imul
xor
dec
imul
int
push
mov
rorl
mov
and
jg
xchg
jg
loope
out
loope,pt
out
loope,pt
out
loope,pt
out
loope,pt
out
loope,pt
out
loope,pt
out
ds
out
mov
push
out
lea
dec
out
loope,pt
out
loope,pt
scas
aas
sub
int
mov
add
loope
out
loope,pt
out
loope,pt
out
loope,pt
out
ds
hlt
and
in
jo
xchg
adc
push
ljmp
in
repz
inc
popf
outsb
dec
jno
push
and
mov
xchg
int
jmp
es
push
leave
mov
insb
pop
into
adc
mov
jle
push
push
inc
mov
rol
xchg
cwtl
pop
loopne
in
xor
cwtl
hlt
in
ficompl
punpckldq
js
ja
int
mov
jo
repz
repnz
xor
das
push
push
xchg
xlat
dec
sbb
push
fwait
mov
imul
mov
out
divb
fnstcw
or
xor
aam
ss
add
jne
xchg
and
stos
or
xchg
lock
aaa
dec
pop
pushf
imul
jno
and
adc
push
xchg
cmpsb
sub
inc
out
push
inc
sbb
das
and
stos
ljmp
jae
aam
mov
int
pop
hlt
add
mov
insb
fstpl
push
lret
push
cmc
stc
mov
mov
std
aam
leave
out
aad
adc
xor
outsl
xchg
mov
stc
cmp
out
lret
shrb
and
jg
adc
inc
jno
or
icebp
sub
mov
test
ljmp
push
cwtd
lcall
pop
xor
lds
fcmove
sub
outsl
or
add
adc
add
lahf
cmc
push
xchg
ret
rorb
xchg
es
mov
pop
lods
int3
push
out
or
das
ds
push
dec
inc
pop
int
lds
loopne
mov
xorl
lcall
mov
xor
mov
mov
inc
pop
xor
cmc
and
cmp
push
loop
ljmp
dec
das
pop
int
int
adc
sbb
pop
loopne
adc
loope
out
loope,pt
mov
fsubrl
out
jg
xchg
xor
nop
xor
pusha
and
add
sub
addr16
dec
mov
mov
mov
pop
mov
outsb
movsb
mov
scas
cmpsl
xchg
cmp
aaa
sbb
xor
fbstp
lret
int
in
je
xor
frstor
jno
sbb
mov
and
insl
jmp
pop
adc
mov
mov
imul
xchg
scas
adc
dec
lret
repz
test
clc
sub
lcall
test
cmp
jmp
dec
sub
repz
inc
outsb
xchg
fadds
mov
push
and
into
data16
bound
mov
and
add
add
add
rorb
rorb
xor
adc
dec
add
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
adc
or
comiss
pop
cs
pop
das
or
sub
or
pop
das
or
cmp
or
daa
das
or
inc
cs
das
das
or
dec
cs
aaa
das
or
pop
cs
aas
das
or
fs
inc
das
or
outsl
cs
dec
das
or
jl
or
push
das
or
mov
or
pop
das
or
xchg
cs
addr16
or
mov
das
or
scas
cs
ja
or
mov
das
or
les
or
xchg
or
shrl
or
das
or
fisubrs
or
xchg
das
or
ljmp
add
cs
cmpsl
das
or
add
or
scas
das
or
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
das
or
add
add
fsubrl
or
add
add
in
das
or
add
add
sti
das
or
add
add
or
or
add
add
sbb
or
add
add
xor
add
add
inc
xor
add
add
push
xor
add
add
outsb
xor
add
add
xorb
add
add
add
add
add
add
add
add
add
xor
add
add
or
add
add
in
xor
add
add
add
or
add
add
or
or
add
add
and
or
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
push
push
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
dec
outsl
arpl
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
out
add
add
add
add
mov
aaa
icebp
jo
and
cltd
mov
sbb
icebp
sti
aam
arpl
mov
call
orb
and
cmp
inc
arpl
lea
popf
fisttpl
jbe
das
in
mov
jecxz
add
stos
jb
in
imul
aam
adc
adc
sbb
popf
push
pminub
jecxz
jae
or
or
roll
lods
cltd
mov
stos
xor
sbb
xor
cmpsb
fmull
mov
mov
in
xchg
or
xchg
jle
cmc
mov
cmc
in
cmp
fwait
addb
cmp
in
mull
inc
mov
call
rcrb
xchg
jbe
out
sbb
hlt
mov
imul
fwait
inc
outsb
and
adc
pop
movsl
daa
mov
leave
popf
jbe
mov
dec
pop
subl
push
js
jns
sbb
insb
adc
mov
lods
mov
mov
js
or
imul
imul
dec
jo
jo
pop
adc
push
les
jp
outsl
sbb
adc
outsl
pop
and
je
xchg
inc
or
push
mov
cmp
jge
and
xor
sbb
mov
lods
filds
xchg
add
dec
dec
daa
jnp
mov
mov
xor
pop
sub
jo
and
test
lret
ss
pusha
mov
aas
jno
or
jne
mov
jmp
rcrl
cmp
push
mov
popf
xchg
or
lahf
test
fmuls
adc
test
jmp
inc
pop
pop
cmpsb
mov
stos
js
inc
mov
icebp
call
in
mov
test
sub
es
add
fildll
std
iret
add
into
cwtl
outsb
divl
cltd
mov
and
push
aad
test
rcrb
add
andb
das
psubusb
out
imul
lds
sti
fwait
cmp
std
cmp
leave
mov
dec
lds
in
addr16
or
push
mov
xor
add
aad
dec
cmpsl
das
das
or
mov
jo
sbb
inc
mov
pop
mov
clc
dec
push
fistpll
shlb
scas
or
loop
out
inc
gs
nop
mov
xor
sarb
lcall
cs
dec
gs
sti
or
adc
faddl
xchg
lret
push
inc
mov
jmp
icebp
pusha
rcl
jnp
mov
cmp
sub
jmp
lods
lock
das
mov
add
jg
and
or
adc
cs
pop
push
pop
cltd
ljmp
add
inc
sbb
and
add
jno
cmpb
jmp
data16
push
sub
jge
in
mov
lret
call
fsub
incl
lahf
in
fs
lret
mov
lds
test
rcll
and
lsl
das
and
popf
inc
lret
inc
movsb
outsb
movsb
pop
aaa
pusha
clc
ljmp
scas
insl
pop
sbb
das
pop
adc
nop
repz
faddl
cli
popf
sti
cwtl
iret
mov
xchg
insl
and
aad
negl
adc
or
add
in
adc
test
jno
jge
push
cmpl
sarb
test
into
or
push
fnstenv
pop
and
cmpsl
mov
inc
lea
mov
clc
xchg
add
popa
sub
insb
adc
push
fs
jl
scas
fwait
arpl
je
pop
dec
mov
mov
leave
out
mov
adc
pop
xlat
dec
inc
adc
icebp
neg
aaa
fwait
mov
shlb
jae
lcall
sub
andl
dec
sub
leave
in
jmp
mov
call
dec
sbb
xchg
cmp
inc
ja
xor
xchg
pop
fs
inc
in
popa
sub
xchg
movsl
icebp
mov
and
pop
cmp
fcmovbe
popf
xor
je
cmp
sub
popa
jno
repz
pop
loop
pop
dec
pop
mov
xor
imul
xchg
sbb
or
test
popf
ljmp
jg
fdivl
pop
jb
inc
jno
xchg
sub
mov
aam
push
and
outsb
dec
and
outsl
incb
ss
int
and
lods
adc
jecxz
mov
lods
imul
movb
or
daa
js
adc
out
or
xchg
stos
loopne
ljmp
je
lcall
fisubs
or
push
aad
test
je
sbb
dec
mov
add
mov
sub
outsb
cltd
xchg
popl
sub
fidivrs
loopne
xor
rcl
pop
hlt
dec
mov
nop
jp
and
sub
xlat
clc
jae,pn
fstpl
outsl
subl
lcall
es
or
fimull
ds
aam
mov
cld
sub
mov
ja
or
jge
cwtl
shll
sahf
imul
cltd
sbb
lds
or
scas
fnstsw
xchg
sbb
cmp
movsb
pop
popa
sbb
je
or
xchg
cmp
jecxz
add
pop
and
repnz
or
and
shl
icebp
jle
ret
leave
lss
addr16
cli
dec
dec
cmp
xor
mov
inc
sbb
or
js
inc
aam
in
push
xor
ret
test
sub
rcl
pop
push
mov
loope
lcall
pushf
roll
shl
inc
fsin
mov
jae
mov
enter
jecxz
stos
inc
xchg
mov
bound
or
cmp
movsb
imul
fnstcw
add
in
push
adc
inc
mov
scas
sub
mov
add
stc
je
insl
leave
and
sbb
aad
dec
inc
fisubs
mov
inc
jecxz
and
outsb
pop
inc
fbld
pop
adc
or
aaa
push
adc
stc
js
nop
mov
cmp
scas
inc
stos
in
sub
sbb
adc
aad
sbb
lea
or
outsb
daa
or
mov
jl
inc
fs
pop
jl
subl
lods
movsb
push
repz
leave
mov
popf
iret
xchg
iret
ds
xlat
mov
movb
ds
mov
xor
hlt
out
inc
jl
pop
leave
pop
push
ficoml
and
data16
or
mov
or
lcall
dec
aam
jnp
cmp
into
or
out
sti
cmpsb
lahf
mov
rcl
xor
daa
cltd
cli
pop
in
les
push
xlat
lret
rcr
add
imul
negl
pop
jb
mov
jmp
pop
ficompl
sbb
adc
xlat
sahf
in
pop
xor
enter
sahf
mov
mov
jmp
cmpsb
cmp
repz
ja
mov
imulb
into
ret
pop
stos
mov
iret
xchg
pop
sbb
jne
or
daa
xchg
ret
lret
xchg
xor
and
dec
in
xchg
adc
xchg
xor
pop
xor
inc
pop
scas
xor
mov
pop
insb
push
jae
push
mov
mov
mov
fistl
sub
ds
mov
jg
fisubrs
jnp
out
test
mov
pushf
or
mov
outsb
and
insb
pop
xchg
push
dec
sbb
cli
insb
xor
stc
mov
das
rclb
test
rorb
movsb
inc
adc
test
test
jl
aad
push
and
sub
leave
mov
out
hlt
jmp
jb
pushf
jb
popf
pop
mov
adc
hlt
sub
nop
outsl
dec
xor
inc
cmp
iret
stc
jl
fimull
inc
mov
jns
adc
fiadds
pop
shrb
fadd
aam
arpl
jno
in
xchg
sub
shld
rcrl
rcll
mov
insl
pop
cli
in
mov
insb
push
jecxz
clc
adc
pop
add
xchg
jae
xchg
adc
xor
lret
out
popf
or
in
mov
sti
pop
push
inc
clc
divb
cmp
inc
das
xchg
dec
mov
mov
push
gs
mov
cmp
stc
cwtl
push
fs
dec
jge
out
sbb
cwtl
repnz
repz
mov
rorb
sub
adc
sub
adc
mov
cmpsl
fidivl
imul
ja
cmpsl
loop
dec
stos
xchg
sub
cmp
inc
xchg
iret
push
jb
adc
pop
mov
mov
xchg
shll
in
test
xchg
inc
loop
sbb
jns
mov
push
lds
adc
mov
ficoms
lcall
js
or
mov
in
daa
adcl
cmp
sub
pcmpeqw
xchg
out
xchg
cmp
cmp
mov
jne
fbld
inc
fcompl
inc
stos
rorb
ss
mov
je
iret
hlt
mov
bound
and
mov
xchg
and
mov
lcall
inc
fisttpl
push
mov
rolb
adc
mov
add
push
pop
popf
ja
enter
fucomp
or
jne
int
xchg
pop
rolb
in
lea
rolb
sub
movsb
or
sub
pop
xchg
add
and
add
stos
or
out
add
mov
insb
add
fdivrs
cmp
cltd
int3
cwtl
mov
add
xorl
inc
or
and
mov
in
addb
das
rolb
lret
es
lods
fidivl
sahf
add
push
push
hlt
dec
cmc
push
ds
push
or
ret
subb
xor
add
or
popa
gs
frstpm(287
adc
xchg
mov
cld
xchg
aad
pop
sub
jno
sbb
fldcw
mov
ds
mov
and
mov
and
sbb
scas
daa
adc
mov
loopne
into
fs
or
cmp
je
scas
inc
adc
mov
out
pop
cmp
mov
out
aad
hlt
cmp
xchg
mov
jae
xchg
dec
dec
inc
push
cmp
add
and
stos
cwtl
xchg
gs
fnsave
push
sahf
jmp
out
inc
xchg
out
fwait
jecxz
adc
or
pop
jl
sub
fldcw
cli
cmp
sti
repnz
xor
cmp
call
xor
jg
dec
cltd
pop
enter
in
push
js
std
outsl
sbb
inc
cmc
jb
inc
push
pushf
push
add
pusha
jae
leave
adc
push
pop
pushf
pop
push
roll
mov
cli
fsubrl
inc
sub
adc
sbb
lds
cmc
jno
cmp
fs
loope
dec
adc
sbb
adc
arpl
xlat
bound
push
aam
mov
adc
out
imul
stos
and
xchg
movsl
sbb
cltd
xlat
sbb
popf
inc
xor
test
lds
repnz
inc
sub
xchg
dec
xor
pop
loope
loope
mov
xchg
jo
push
nop
jns
mov
rcrb
adc
call
arpl
pop
xchg
lods
adc
fwait
or
stos
imul
ds
inc
mov
mov
movsb
add
rclb
push
cmpsl
adc
daa
or
pop
sarl
mov
ficomps
sbb
adc
sub
clc
inc
adc
scas
in
xor
iret
jo
push
push
cmp
xchg
scas
mov
fstpt
or
sub
repz
loop
and
iret
cmp
cmc
xchg
jbe
or
mov
loope
or
fdivrs
inc
mov
add
cmp
push
mov
or
lds
add
fmuls
mov
std
dec
cmp
mov
frstor
insl
test
es
gs
lret
pop
push
adc
mov
shll
jg
pop
lock
movsb
scas
dec
mov
mov
jno
aas
ja
mov
xlat
es
out
dec
inc
inc
pop
pop
rcr
mov
popf
mov
add
or
ds
rol
and
mov
cli
add
insb
push
pop
mov
outsb
jle
add
cs
movsb
cmpsl
enter
add
mov
mov
fldenv
bound
lahf
ljmp
add
jbe
dec
adc
in
jg
lret
es
loop
pop
mov
sub
jp
sbb
clc
test
or
inc
push
sbb
call
push
fnstcw
dec
loope
aaa
push
xor
push
add
bound
sbb
shlb
stc
fildll
xchg
xlat
inc
cmp
mov
icebp
cmp
sti
aas
aas
xor
pop
imul
std
fwait
xchg
les
vpmacswd
or
jmp
xchg
js
inc
jmp
lcall
pop
out
adc
cmpsl
pusha
mov
sub
shrb
mov
les
sub
jge
lret
aaa
sbbl
adc
sbb
clc
inc
sahf
ss
mov
mov
movsb
or
ss
and
in
sub
cmp
enter
in
imul
in
or
sahf
dec
cvtdq2ps
outsl
add
jnp
int
jo
mov
mov
sbb
inc
xchg
push
mov
pop
xchg
pop
dec
xor
popf
popa
jecxz
repnz
mov
push
clc
mov
sahf
push
rcrl
dec
cmp
sbb
and
jle
insb
in
xor
sbb
stc
add
fldcw
in
xor
add
push
lret
fldl
jmp
ja
cmpsl
sbb
popa
call
lods
dec
sbb
in
outsb
lock
jp
lret
cmp
out
push
xor
jnp
aaa
mov
and
ja
mov
or
xchg
sub
in
cwtl
cs
mov
hlt
push
add
shl
sub
scas
jg
jnp
xchg
test
stc
movsb
mov
scas
and
or
dec
in
pop
loopne
popf
pop
in
add
test
fiadds
mov
inc
stos
dec
sahf
push
ret
adc
test
and
pop
test
lods
inc
or
out
cmp
push
adc
in
test
lret
lds
scas
jl
outsb
pop
std
test
je,pn
mov
fcmovbe
and
ja
leave
negb
pop
mov
mov
movb
xor
push
es
cmpsb
cli
and
lret
or
inc
insl
mov
push
xor
popf
jns
ret
and
cmc
jns
mov
sbb
xor
das
stos
fiaddl
mov
in
adc
popf
dec
nop
mov
or
jne
lds
pop
movsl
inc
mov
fmuls
or
test
inc
xor
cmp
fs
test
dec
mov
imul
loopne
lods
adc
scas
cmp
and
dec
pop
push
dec
cwtl
mov
loopne
lds
sub
push
mov
jno
mov
loopne
pop
imul
leave
je
dec
mov
push
ds
mov
xor
out
mov
pop
loopne
mov
adc
jecxz
lock
dec
inc
lahf
push
pop
sub
aam
popa
sarl
add
mov
inc
arpl
xor
es
inc
sub
mov
inc
ja
ret
or
sub
les
pusha
sbb
mov
add
shl
pop
hlt
mov
push
insb
cmp
ret
push
inc
mov
dec
mov
es
xlat
je
mov
mov
mov
push
cmc
jb
andb
pop
push
cltd
cmp
jge
dec
rcrl
fsubrs
cli
sub
aam
mov
jb
or
and
sbb
push
mov
and
sub
insb
ja
push
xlat
call
push
cmp
lret
xchg
mov
mov
mov
scas
pop
lds
in
orb
lock
or
imul
sbb
popf
mov
cmp
arpl
mov
shl
or
ss
ljmp
mov
arpl
insb
cld
push
or
inc
js
fists
or
fisubrl
rolb
or
pop
pop
pop
mov
push
shrb
fstps
cmp
movsb
data16
pop
push
out
rcl
mov
leave
mov
clc
cmp
sbb
imul
aad
and
aaa
ss
xchg
cvtps2pd
inc
pop
enter
sub
scas
andb
jp
sub
mov
mov
push
jbe
and
xchg
push
xchg
cmp
jnp
lcall
jmp
push
sbbl
pop
mov
mov
push
mov
fsub
repnz
bnd
shrl
test
bswap
fadds
out
int
pop
mov
mov
sar
pop
into
popf
repz
cmp
mulb
repnz
sub
xchg
and
arpl
inc
adc
adc
out
xor
and
lods
sti
sub
pop
jns
push
imul
cwtl
cs
sarb
repnz
sbb
inc
lcall
cltd
push
popf
pop
test
out
fbstp
push
push
inc
inc
clc
addr16
and
mov
cmp
xchg
xchg
test
mov
adc
add
cmp
xor
rcrb
daa
or
cmp
scas
jmp
je
insl
shrl
xchg
xor
adcb
int3
test
pop
das
int
inc
mov
xchg
fmul
sub
dec
ss
pop
shll
std
lods
mov
dec
pop
cwtl
nop
or
jns
add
imul
pop
pop
mov
jg
cmpsl
pop
aaa
push
dec
insb
sarb
cltd
mov
push
jns
mov
adc
call
push
sbb
add
sbb
stos
jg
and
in
adc
add
filds
push
mov
mov
xor
push
pop
or
jmp
jecxz
push
jo
cmpsb
mov
or
outsl
andb
xchg
push
out
mov
icebp
xchg
mov
mov
jmp
call
neg
dec
or
and
add
xor
aaa
xchg
mov
mov
inc
out
jae
add
and
pop
iret
sbb
ss
jg
mov
outsb
inc
es
stc
movsb
push
cmp
adc
xor
and
push
test
fwait
sbb
testb
mov
ljmp
dec
mov
hlt
inc
in
dec
rcll
aad
nop
cld
mov
std
sbb
cmpl
lock
repnz
movsb
jne
xor
adc
xor
push
mov
or
hlt
adc
pushf
incb
mov
fsubrl
pop
movsl
lcall
in
mov
aas
adc
dec
cmp
cmc
outsl
or
xchg
push
mov
inc
fwait
mov
dec
fs
xlat
ret
mov
inc
subl
fcompl
xchg
sbb
ja
dec
jmp
lret
test
scas
shl
and
xor
repnz
mov
lret
mov
fs
dec
in
addr16
in
and
repz
mov
in
scas
bound
inc
outsb
jo
pop
std
xchg
cmc
mov
aas
fnstcw
xchg
stc
idiv
inc
mov
xchg
dec
adc
sub
outsb
and
jg
pop
cmp
aam
sbb
cmpsl
add
adc
cmp
jbe
popf
cmp
dec
inc
cmp
dec
fimuls
dec
in
pop
leave
iret
dec
pop
sub
mov
iret
mov
out
push
test
pop
adc
gs
loopne
leave
stc
mov
mov
xlat
mov
sbbl
rcll
inc
mov
cmp
stc
sub
test
xchg
pop
data16
lahf
sub
ficoms
jecxz
or
dec
dec
scas
jne
das
fsubl
mov
fwait
pop
mov
hlt
mov
fwait
dec
lcall
pop
and
mov
scas
enter
sub
mov
sbb
pop
dec
cmpsl
jle
ficomps
lret
imul
lret
and
mov
jg
arpl
sbb
cmp
adc
push
mov
pop
adc
add
push
xorl
mov
iret
jne
mov
clc
enter
orb
fld
push
lock
xchg
clc
jl
cmp
mov
loopne
fwait
jmp
bound
enter
jle
jg
add
pushf
cmc
cmc
cmp
mov
je
push
cli
push
dec
xor
int3
testl
loop
and
mov
xor
xchg
std
mov
push
ljmp
cmp
movsb
popa
sub
incl
daa
out
rorl
dec
jne
cmpl
push
outsb
pusha
ljmp
sub
xchg
dec
jae
adc
jle
cmc
mov
and
push
shl
fidivrs
jb
ljmp
inc
cmpsb
xchg
clc
je
pop
aad
test
scas
mov
mov
cmp
pusha
aas
jmp
incb
into
xchg
push
je
inc
jbe
sti
inc
sbb
mov
sbb
and
lock
nop
outsl
mov
adc
incb
dec
xor
pop
inc
jmp
mov
ds
pop
sahf
sbb
gs
mov
test
leave
mov
mov
jle
mov
mulb
add
stc
sbb
pop
lock
xchg
inc
cwtl
cmc
add
shrl
push
fs
fbstp
fstps
adc
mov
scas
std
in
imul
jno
or
sub
lea
push
andb
sub
add
fs
data16
movsb
repnz
add
adc
shl
dec
cmpl
mov
jne
add
fs
cwtl
stc
cmp
loop
sub
sbb
pop
lcall
xchg
divl
push
in
or
in
movsl
inc
cld
aad
rcrb
std
out
mov
and
sbb
xor
bound
cs
data16
std
mov
stc
sub
in
sbb
lds
iret
ljmp
mov
sub
mov
pop
adc
push
insb
or
hlt
inc
and
adc
outsl
mov
fdivrs
fisttps
and
dec
xchg
lods
xor
mov
adc
mov
mov
int3
imul
test
fsubp
arpl
in
sbb
out
mov
nop
sbb
cmpb
mov
xorb
xchg
inc
cmp
xlat
push
mov
dec
sbb
mov
cmpsl
ss
and
mov
dec
movb
push
fwait
jle
or
jle
lds
call
sub
fdiv
sbb
cmpsb
neg
fsubrp
lea
aam
out
rcrl
adc
jo
pop
jb
xor
or
pop
call
xchg
orb
aaa
daa
xchg
rol
sti
jo
xor
sub
ljmp
movsl
es
fwait
sub
push
adc
cmp
sub
cli
and
out
cmp
ds
js
pushl
cwtl
fists
jecxz
cmp
fistps
sub
mov
cmp
pop
insb
mov
in
mov
sbb
cmp
xor
pop
aas
adcl
dec
icebp
loopne
pop
sub
cltd
pop
arpl
inc
mov
loopne
enter
stos
dec
rorl
jle
mov
aad
clc
push
jns
sub
imul
adc
mov
xchg
in
ljmp
mov
lea
int
pop
daa
dec
jl
enter
sub
push
addb
and
xchg
cld
dec
scas
jmp
outsb
scas
pushf
dec
aaa
dec
rolb
mov
insl
jmp
mov
mov
sub
mov
loop
hlt
mov
mov
mov
mov
std
iret
jns
or
sbb
sbb
pop
loop
lea
cs
fs
cmc
mov
je
mov
mov
or
es
test
mov
lods
sbb
loopne
and
jne
push
mov
enter
fs
ss
sub
sbb
pop
fcoms
dec
hlt
cmp
inc
js
scas
and
add
out
mov
andl
test
pop
stos
fwait
insl
or
sbb
xchg
dec
fnsave
add
das
pushf
stos
repz
ret
add
xor
mov
clc
scas
dec
test
mov
inc
and
mov
sub
in
lods
jg
mov
mov
mul
sub
ret
push
pop
out
fnstsw
orb
and
mov
mov
ret
fsub
lret
out
fdivl
scas
insb
and
mov
push
adc
or
cmp
dec
in
inc
popf
aas
addl
sbb
stos
cmp
sub
xor
vpsllw
jne
push
fidivrs
pop
stc
xchg
add
mov
jno
lods
ror
push
sbb
ljmp
imul
jnp
movsb
mov
ja
sub
xorb
push
add
not
sahf
repz
lds
inc
xchg
pop
jp
enter
icebp
test
mov
fisubrs
mov
subb
test
mov
inc
call
mov
jne
adc
int
lods
adc
cmpsl
fistps
dec
jns
mov
rol
popa
aad
push
fnstenv
xor
add
push
jnp
dec
fwait
mov
xor
or
mov
add
push
and
movb
scas
sbb
dec
out
xchg
hlt
jl
loopne
push
nop
cmp
mov
and
xchg
cld
dec
lods
les
ljmp
and
insl
jl
mov
sub
insb
add
xchg
out
sti
push
fcoml
arpl
ss
cmp
xor
pusha
imull
cmp
out
lahf
xchg
push
cli
push
mov
dec
mov
lds
push
dec
push
adc
push
xchg
dec
mov
js
mov
xor
and
popa
mov
negl
es
test
in
in
out
mov
fwait
push
cmpsb
pop
add
mov
aaa
xlat
lret
aam
inc
mov
testl
cmpb
leave
test
loope
in
testb
imul
nop
sbb
test
mov
ret
cmpsb
dec
pop
jg
cmp
sahf
fs
sub
bound
adc
sbbl
push
pop
pop
mov
cmp
jge
insb
jne
push
inc
and
mov
mov
push
cwtl
fistl
add
dec
sbb
adc
jp
and
icebp
sub
jb
or
ret
add
fisttpl
cmpsb
inc
pop
mov
loope
push
scas
es
xchg
jge
jmp
mul
pop
nop
adc
test
mov
in
mov
cmp
subl
jbe
push
cmc
jbe
mov
add
mov
out
mov
sbb
inc
pusha
nop
push
movsl
add
out
cmp
int3
ret
aam
aas
add
and
pusha
lods
sarl
repz
mov
stos
leave
sbb
psraw
xchg
xchg
xchg
mov
mov
fldl
xchg
push
lret
imul
push
mov
test
xor
gs
imul
je
mov
ficompl
xor
movsl
inc
aaa
xchg
push
and
test
push
dec
mov
lods
fisubs
add
mov
fcomp
and
mov
into
mov
movsl
stc
mov
jne
outsl
add
ret
push
pop
outsb
mov
adc
lods
jl
xchg
sbb
stos
icebp
mov
cmp
nop
movsb
adc
pop
mov
cmp
jge
movsb
ret
jno
sahf
lods
inc
jo
add
movl
cmp
out
inc
cmp
jecxz
gs
repz
cmc
hlt
adc
mov
inc
xchg
data16
dec
mov
push
and
rorb
stos
sub
das
jg
dec
xchg
into
sbb
mov
es
push
adc
mov
or
push
push
div
xor
ret
shrl
loopne
jne
pop
push
xchg
cwtl
fstl
fcomip
jg
sbb
xor
in
dec
sahf
sbb
add
ss
adc
adc
cmc
fcmove
outsl
lcall
fcmovu
xchg
cmp
jp
xor
mov
inc
es
fnstsw
adc
push
enter
mov
lar
aad
rcrl
cmp
adc
dec
rorb
mov
add
dec
aam
fdivp
ljmp
sub
inc
insl
imul
shr
mov
mov
aaa
mov
or
aas
jbe
sarb
mov
mov
out
jl
clc
fiadds
and
arpl
add
and
enter
sahf
push
nop
cmpsl
push
inc
xor
or
pushf
cld
sbb
mov
xchg
fdivs
pusha
xchg
lds
in
inc
mov
sahf
inc
adc
pop
add
jg
std
cmp
out
sbb
inc
imul
push
inc
and
xorb
out
pop
test
jp
mov
fcomps
push
mull
gs
lret
pop
fbld
ljmp
shlb
inc
inc
push
dec
call
dec
inc
ja
filds
lcall
mov
std
jb
pop
sbb
outsl
cmp
mov
movb
jge
push
fmull
or
xor
clc
data16
rorl
sbb
jmp
testb
sti
dec
orb
ljmp
mov
xchg
in
pop
sbb
pop
pop
les
std
inc
stos
mov
mov
dec
call
sbb
dec
dec
jbe
mov
lahf
xor
mov
xchg
jnp
inc
cmp
repnz
inc
not
or
ja
push
push
sbb
xor
push
movsb
es
cmp
and
addr16
mov
dec
mov
mov
jo
test
cmp
lea
xchg
icebp
push
xor
cmp
fiaddl
cmp
out
pop
add
dec
jne
sti
push
je
xchg
lock
sub
scas
mov
push
jns
in
ror
xchg
xchg
jne
imul
sbb
xlat
xchg
mov
aad
cli
lods
xlat
mov
xchg
aaa
add
inc
lret
pop
mov
adc
outsb
adc
pop
cmp
adc
pusha
fwait
mov
xor
inc
mov
das
push
cmp
cwtl
jne
jb
inc
and
mov
mov
sbb
daa
outsl
insl
jno
loope
add
inc
and
clc
dec
je,pt
call
outsb
xor
pusha
add
lahf
jnp
ret
outsb
aaa
cmpsb
cltd
push
fcomps
pop
xchg
shrl
sbb
movsl
icebp
sub
jl
fdivrl
int3
lods
pop
inc
repz
fwait
xchg
data16
out
int
push
imul
ret
push
mov
repnz
push
scas
dec
xor
mov
and
jb
loope
inc
cmp
mov
rcrl
cmp
jmp
jge
shlb
pop
out
and
std
push
fsubrl
push
xchg
iret
scas
dec
mov
lods
fbld
mov
or
aas
sbb
add
fisubs
test
xor
arpl
push
push
fisttpll
and
mov
lret
cltd
fs
mov
xchg
mov
ret
loope
push
or
mov
das
inc
sub
test
mov
mov
xchg
push
outsl
mov
pop
popa
pop
mov
mov
or
sbb
mov
jns
sbb
add
push
imul
inc
aaa
cmp
pop
pop
rcrb
sub
push
inc
xchg
dec
or
ljmp
cmc
and
or
cwtl
rcrb
jg
rcll
dec
js
jl
icebp
or
lahf
and
in
pop
pop
loope
xchg
xchg
cmp
cmp
add
push
incl
push
fnstsw
stos
push
testb
test
adc
jne
push
mov
sbb
jg
test
add
push
fs
mov
sub
cmp
jns
das
gs
mov
mov
repz
mov
cmc
je
push
xchg
adc
fistps
and
mov
fisttps
aaa
loopne
pop
inc
daa
cmp
repnz
sbb
shll
ds
cmp
popf
pop
lods
sub
adc
js
jae
jge
addr16
or
xor
xchg
ss
mov
dec
sub
loope
lds
pop
pop
loope
dec
pop
lea
mov
or
loope
gs
lea
daa
mov
mov
jecxz
add
js
int
dec
push
orl
iret
inc
jle
repnz
imul
mov
lcall
dec
sbb
lcall
into
and
push
test
mov
jg
add
cmpsl
sub
cmp
test
ljmp
in
addb
push
stc
lds
jmp
push
cwtl
pop
jnp
ret
inc
or
sbb
sub
push
dec
mov
cmp
scas
and
xchg
sub
and
add
call
out
insb
hlt
or
xchg
jns
sarl
in
cmpb
repz
inc
sub
mov
cmpb
inc
mov
pushf
iret
js
mov
inc
insl
cmp
ljmp
xor
push
mov
cmp
pop
or
inc
or
push
fcompl
mov
lea
mov
jbe
inc
test
jp
jl
jns
stos
fisubl
jae
and
mov
jle
sub
mov
add
ss
loopne
imul
adc
mull
aas
in
sbb
mov
inc
jnp
pop
in
sub
push
add
lods
fdivr
mov
inc
sub
std
dec
scas
and
mov
cwtl
and
outsl
js
incb
and
pop
mov
jle
cld
jle
mov
push
addr16
add
icebp
sti
and
xchg
dec
dec
bound
outsl
lea
mov
outsb
notl
cmp
fstpl
outsb
icebp
rorb
lret
adc
cmp
cmp
cwtl
jb
into
leave
shll
xchg
cs
call
cmp
adc
mov
pop
popf
dec
outsb
inc
and
fistpl
add
pusha
loope
stos
dec
mov
out
cs
lods
repz
jns
cwtl
push
test
sbb
pop
sub
push
xor
push
roll
aaa
add
int
loop
add
cmpb
mov
jo
dec
xor
xchg
lea
cmp
and
iret
mov
inc
lds
mov
test
sub
pop
dec
fidivrs
push
add
lea
adc
push
inc
sbb
adc
xchg
pusha
sbb
inc
mov
mov
cmp
mov
idiv
cmp
ret
test
addb
mov
popa
fisubrs
pop
push
testb
pop
pusha
lods
push
iret
mov
cmp
scas
cmp
aaa
in
lock
shrb
mov
jne
mov
xlat
push
or
arpl
lods
sub
cmpsb
lds
iret
aad
daa
daa
push
movsl
inc
or
ret
mov
add
stos
sbb
cmp
and
mov
push
push
dec
pop
ret
lea
inc
add
mov
mov
and
push
mov
shl
pop
outsl
pusha
leave
cmp
out
fimull
mov
mov
jle
or
mulb
xchg
aas
sbb
jno
popa
repz
lods
inc
out
add
sub
fwait
lods
mov
xchg
inc
jo
adc
imul
lods
sbb
or
enter
int3
mov
sub
sub
push
mov
lds
lret
or
scas
int
cltd
sti
mull
je
loop
movsl
in
jg
insb
mov
inc
scas
push
stc
mov
jae
int3
sbb
in
js
or
fadds
mov
push
imul
push
shrb
xchg
ljmp
roll
movsb
jg
ss
gs
nop
into
xor
inc
dec
shrl
or
jmp
dec
das
lock
imul
sub
pop
in
pop
lds
mov
jmp
mov
int
popa
jo
gs
xor
or
pop
call
sub
jnp
xor
sbb
std
xchg
adc
cmp
adc
sbb
clc
cli
jge
addb
cmp
jge
decl
push
pop
jb
jle
out
cmpsb
cmp
loope
lds
out
int
mov
and
sbb
mov
sbb
xchg
in
lds
mov
in
shr
inc
push
into
mov
or
inc
iret
fstl
jecxz
dec
cmp
push
pop
and
pop
call
mov
insb
into
mov
iret
pop
es
aaa
push
xchg
repnz
inc
pushf
insl
pusha
push
jne
jo
jle
and
cmp
mov
fstpt
inc
lahf
icebp
cmp
fadd
dec
insl
mov
test
std
sti
pop
push
or
xorl
xchg
mov
test
and
cli
lods
mov
and
cmp
fstpt
das
daa
push
push
pop
cltd
stos
iret
je
jno
nop
stos
xor
scas
into
cmpsb
out
or
fs
mov
mov
fs
cs
sarl
jbe
sub
cmp
sub
inc
nop
and
jbe
cmpsl
cltd
aaa
cwtl
repnz
adc
sbb
lret
xor
fnstenv
jne
xchg
lcall
mov
subl
faddl
push
push
dec
cmp
call
pop
push
mov
mov
gs
adc
sub
insl
mov
push
sbb
adc
out
xchg
add
and
sbb
mov
flds
cmp
jl
add
xor
add
mov
push
adc
daa
iret
mulb
ret
fimull
shll
fnstsw
into
hlt
popa
and
in
mov
fisubrs
stos
cli
fwait
ss
mov
insb
hlt
nop
les
and
lcall
jno
push
xchg
cmp
xchg
and
call
sub
add
sub
adc
sbb
pushf
push
mov
lahf
jne
cmpsl
and
jge
ss
mov
jne
scas
or
jge
cmp
das
lcall
lods
int
sbb
out
mov
pop
push
rsm
mov
js
gs
pop
sub
cmp
and
xor
or
xchg
mov
mov
out
xchg
movsb
mov
repz
mov
aad
testl
push
mov
insb
add
adc
out
das
popa
jg
in
xchg
mov
add
pop
inc
popa
pop
testl
xchg
pop
mov
mov
push
in
scas
add
testl
out
sub
out
out
filds
sbb
test
arpl
shll
add
jnp
xchg
insl
lret
and
jbe
outsb
iret
and
mov
ret
cmpsb
rcrl
push
outsl
mov
mov
rorl
jl
cmp
pop
mov
dec
mov
xchg
js
mov
xchg
push
adc
and
jge
ret
cld
xchg
sub
in
xchg
jns
pusha
and
inc
and
cmp
cmp
test
fdivs
jg
js
and
jo
dec
cwtl
nop
ss
mov
insl
xor
stos
push
out
mov
push
mov
test
mov
outsl
and
sub
sub
mov
sub
daa
pushf
lds
mov
sbbl
adc
std
movsl
loop
daa
mov
inc
mov
enter
inc
imul
sub
scas
test
loop
adc
pushl
adc
dec
pop
js
push
jbe
adc
xor
nop
xchg
cltd
mov
pop
inc
shr
mov
iret
jp
jmp
jnp
push
cvtps2pd
lock
fwait
cs
push
sbb
adc
push
dec
cmpsl
inc
out
adc
les
into
ljmp
testb
mov
pop
and
leave
or
xlat
out
cli
lds
mov
push
dec
cltd
outsb
cmp
loope
insl
lea
sub
mov
aam
cwtl
cmpsl
jno
xor
aam
sbb
mov
or
jns
push
pushf
cmp
xor
cmp
aam
mov
jp
adc
shl
sub
arpl
jae
or
sbb
xor
pop
cmp
addr16
lods
fisubl
sarb
inc
out
jge
leave
mov
inc
mov
mov
dec
dec
lods
jp
xorl
push
mov
xor
push
scas
xor
imul
sbb
jecxz
pop
mov
imul
repnz
push
sbb
out
jge
jmp
stos
pop
sbb
mov
or
jle
rolb
fiadds
sub
mov
mov
in
jp
std
mov
aam
decb
shll
mov
mov
sub
jl
mov
mov
xchg
xchg
xor
sarb
call
inc
jo
clts
jl
scas
lcall
aas
xor
mov
dec
imul
lods
roll
mov
test
stc
inc
gs
jb
test
mov
aad
ss
leave
mov
cmp
or
sub
xchg
or
xchg
sbb
stc
pop
test
cld
pop
cltd
inc
lock
aam
sbb
mov
test
imul
mov
inc
xchg
mov
add
sbb
fimuls
add
in
fs
xor
xchg
ror
mov
fidivl
mov
cmpb
or
adc
sti
dec
mov
xor
inc
inc
ret
inc
in
int
mov
xor
cmp
and
and
mov
add
mov
push
pop
cmc
sub
sub
pusha
or
or
jnp
and
sbb
lcall
lea
movsb
aaa
or
pop
out
and
xor
mov
push
outsl
fs
dec
mov
fiadds
inc
and
mov
cltd
sbb
lods
ud1
inc
and
jb
and
pop
pushf
xchg
into
lods
outsl
mov
pop
mov
sbb
and
repnz
xor
lock
insl
fsubrl
fstps
pusha
jb
xor
fsubp
sub
adc
mov
addb
xchg
dec
data16
and
add
jge
xchg
mov
sub
cwtl
pop
mov
jbe
mov
add
and
ja
dec
addb
push
xor
sbb
repz
mov
jnp
mov
imul
xlat
loop
call
loop
mov
lods
mov
shll
mov
adc
push
jne
sub
out
fucom
pusha
rorl
sub
jno
enter
mov
mov
bound
mov
sub
ffreep
fmull
mov
insb
fnop
cmp
sbb
mov
mov
fcomps
inc
aaa
push
dec
pop
mov
addr16
stos
or
ds
sub
cmp
sbb
mov
mov
jo
daa
iret
fstps
mov
sub
sti
xor
orl
xchg
push
cltd
test
and
fcoml
ljmp
test
mov
popl
push
xor
outsb
outsl
test
fldl
divb
enter
pop
daa
sub
std
and
jg
dec
push
cmp
pop
ljmp
xchg
aas
xchg
out
inc
inc
outsl
fistpl
call
cli
je
mov
mov
pop
cmp
and
push
and
sub
push
sub
out
fwait
mov
cs
sbb
std
or
out
xchg
cs
cmc
das
leave
add
gs
sub
mov
pop
out
dec
cld
jp
lods
xchg
testl
scas
and
push
aaa
sbb
mov
mov
adc
in
fstl
es
dec
insl
leave
or
cmp
add
imul
into
test
push
loopne
ja
das
repz
jl
outsb
aam
jle
push
mov
mov
xlat
loope
subb
fiaddl
adc
add
cmc
xchg
mov
jp
das
int3
xchg
jg
push
cmp
subb
adc
in
out
pop
xor
push
mov
xorb
mov
imull
cmp
xlat
dec
lret
push
addr16
mov
sub
adcl
pop
add
loopne
jbe
sti
fsubs
adc
test
jg
iret
jae
cmp
imul
pop
lret
mov
cltd
hlt
mov
test
adc
sbb
push
pop
mov
pop
mov
repz
sub
pop
mov
cs
push
daa
loopne
push
dec
jns
pop
add
ds
in
int
pop
je
push
push
icebp
inc
mov
xchg
jle
js
and
movsl
sbb
xchg
jle
cmpsl
push
aas
imul
xchg
dec
aaa
das
les
test
sbb
cmc
cmpb
roll
pop
sahf
inc
push
sbb
sub
clc
push
sahf
jnp
lcall
inc
pop
sbb
icebp
loopnew
adc
out
clc
aam
dec
push
imul
movsb
and
inc
gs
mov
pop
mov
jns
mov
xchg
pop
popf
mov
push
loope
jo
push
rorl
ret
mov
test
mov
stc
popf
push
and
movsl
or
mov
fsubrl
lahf
mov
inc
stos
dec
mov
loop
imul
cltd
fnstenv
sbb
dec
test
call
cltd
sbb
add
std
pop
xchg
push
inc
or
cmpsl
cmp
xor
xchg
outsb
andb
aaa
adc
inc
or
mov
cs
loope
shl
sbb
cli
int3
rcrl
mov
std
inc
sub
fdiv
lds
mov
stc
mov
mov
orb
sub
ret
mov
sub
insl
or
js
push
jbe
popa
into
outsb
push
sarl
iret
test
xchg
push
out
gs
mov
lea
outsb
fisttpl
cmp
out
iret
sbb
push
jge
mov
sub
out
sbb
push
and
rcrl
push
mov
sbb
adc
add
cmpl
jno
loop
bound
nop
in
mov
ja
mov
xchg
in
mov
testl
and
movsb
movsl
shl
jl
dec
push
mov
cld
adc
sub
push
jg
and
aas
les
push
sahf
mov
push
aaa
lods
lock
sbb
sbb
call
push
push
das
or
mov
imul
ret
adc
imul
test
jl
or
mov
mov
adc
xor
or
test
jns
ljmp
cmp
pop
add
mov
adc
lret
jb
xor
imul
hlt
dec
xor
cs
in
jg
idiv
lahf
xor
dec
inc
adc
ret
popa
icebp
dec
push
xor
sti
or
push
sub
pop
xchg
scas
cld
xchg
and
sti
pop
mov
xchg
popf
jl
pop
fwait
inc
xor
popf
mov
jb
jecxz
call
or
and
push
sub
mov
imul
sti
xchg
push
push
stos
repz
in
pop
mov
adc
lock
cmpsl
xor
stos
outsl
clc
and
xor
add
clc
ror
adc
ljmp
pusha
aam
adc
mov
xchg
jbe
jecxz
xchg
out
ja
iret
mov
or
jo
fwait
popa
fcompl
inc
fnstsw
addr16
push
jb
hlt
mov
add
mov
sub
data16
testb
and
push
and
negl
cmc
out
jne
push
push
dec
mov
xor
js
sub
fdivrp
mov
aas
scas
cmp
int
adc
mov
in
out
jbe
push
popf
sti
cmp
pusha
pop
outsl
lret
aas
inc
mov
or
pop
add
pop
cli
and
aaa
xor
sar
cmpsb
xchg
sbb
inc
ja
add
fisttpll
in
xor
cmp
arpl
xchg
rcrb
mov
cmp
int
mov
cli
ds
add
mov
cmp
xchg
in
mov
dec
and
jnp
sti
movsl
movsb
sbb
inc
mov
or
out
mov
div
push
and
dec
fsubs
mov
cmpsb
popa
pop
xor
dec
cld
add
mov
rclb
push
pop
out
std
test
sbb
add
insb
mov
sub
mov
scas
mov
pop
shrb
push
jp
jno
mov
jno
pop
mov
pushf
nop
inc
pop
es
jmp
adc
aaa
mov
shll
ljmp
mov
rcrl
push
fwait
ror
cmp
leave
mov
pop
mov
push
jns
cmp
imul
mov
cmpl
jbe
lods
cmp
lahf
pop
icebp
adc
arpl
in
mov
and
mov
ret
mov
scas
out
orl
sub
lcall
rolb
imul
xor
hlt
fbld
push
xor
in
xchg
imulb
not
imul
sub
mov
jle
call
inc
xchg
mov
shlb
mov
loopne
mov
sub
stc
rclb
xchg
xchg
sahf
sub
pop
sti
fldl
cld
ret
or
adc
lds
jmp
add
adc
sti
push
inc
cli
inc
lock
inc
cld
mov
dec
mov
lds
jnp
push
ds
jle
cmp
xor
adc
mov
jge
push
and
xchg
inc
mov
pop
adc
fcoms
imul
fwait
mov
sbb
int3
cmp
push
xchg
push
rep
leave
lret
push
sub
mov
push
push
xchg
jl
mov
inc
and
mov
rcll
ds
dec
mov
lea
fs
cmpl
pop
cld
xor
fdivrs
fwait
mov
cmp
mov
shlb
xor
push
movsb
xchg
ffree
sbb
push
imul
shll
jmp
aad
fwait
mov
cmpsb
pushf
cwtl
in
out
bound
shrb
mov
jne
jnp
fiadds
outsb
jmp
lcall
out
js
arpl
cmpsb
addr16
pop
push
mov
rclb
add
cmp
ds
out
or
pop
or
aas
xchg
adc
insb
rolb
stos
ljmp
enter
mov
aad
test
sub
nop
adc
in
stc
add
into
or
inc
je
int3
sub
sbb
cmp
cs
xor
insb
adc
in
dec
inc
popa
inc
jg
adc
pop
repnz
sti
mov
cwtl
xchg
cmp
mov
imul
scas
in
dec
jae
mov
xlat
imul
sbb
clc
test
std
aaa
xchg
xor
xchg
jo
das
mov
inc
dec
mov
or
shr
cmp
pop
stos
xor
cltd
fwait
adc
add
or
jmp
in
adc
and
loop
xor
out
sub
mov
test
rorl
test
xor
popf
arpl
ret
in
fs
inc
push
lods
push
mov
and
mov
pop
add
clc
mov
pusha
ljmp
int3
popa
rcl
jmp
cmp
push
lods
mov
call
mov
fwait
cmp
cmc
cmc
test
sbbb
dec
bound
adc
ljmp
adc
movsb
in
xchg
adc
ljmp
lds
mov
filds
jg
xor
loope
test
enter
and
cli
pusha
mov
movsl
pop
sub
xor
ja
pop
mov
packssdw
pop
push
lods
addr16
xchg
sbb
stos
cmp
pop
adc
int3
sub
loope
cmp
pop
fdivs
out
pop
insb
and
ret
mov
jbe
dec
or
mov
mov
adc
sub
xor
sbb
testb
or
cmpsb
mov
leave
xchg
rcl
daa
dec
cs
adcb
xor
mov
lods
addr16
jge
pushf
popf
mov
mov
gs
sbb
dec
jge
cwtl
jl
cld
jp
loop
repnz
ja
xchg
push
cli
push
jp
test
mov
push
jle
push
std
movsb
or
add
std
sbb
adcb
cmp
mov
je
dec
lret
mov
insl
icebp
and
add
pop
cld
fimuls
ljmp
mov
jno
jmp
xchg
andb
jb
mov
bound
cmc
sar
test
dec
mov
cmpsb
push
inc
data16
arpl
std
in
mov
and
cmp
pop
insb
ficomps
sbb
repz
shrl
push
adc
in
xchg
cwtl
or
fisubrl
add
andl
jo
andl
pop
adc
sub
pop
lods
in
loopne
inc
pop
fiaddl
jne
adc
cwtl
int3
jge
and
mov
push
imul
cmp
dec
adc
movsl
out
sub
adcl
mov
fld
adc
add
dec
cmp
mov
out
lods
xlat
cmp
es
jl
dec
add
loope
mov
jp
fcoms
or
sub
cmp
out
mov
pop
jle
cwtl
cmc
in
jno
insl
fsubs
push
into
mov
andl
cltd
out
sbb
dec
sbb
adc
testl
clc
loop
dec
fcoms
xor
lret
gs
cltd
push
out
push
cmp
fisubrl
shr
xor
push
cltd
test
jbe
jnp
cwtl
das
sbb
cmc
dec
and
int
xor
nop
iret
jge
stc
add
in
shrl
xor
mov
add
add
cs
sub
mov
leave
push
dec
movsb
cmp
mov
cmc
nop
ret
push
jnp
jo
int3
rcll
je
sub
jbe
aas
or
jno
add
jge
enter
ret
xchg
jno
test
fisubrs
inc
cmc
xchg
cmpsl
in
dec
pop
inc
xor
jne
aad
dec
mov
mov
sbb
adc
mov
and
mov
hlt
or
push
popf
xchg
dec
xor
cltd
adc
imul
xchg
shll
push
dec
iret
jecxz
jmp
jg
mov
repz
fmuls
push
das
imul
pop
or
fcomps
mov
cld
add
stos
jae
inc
pop
and
mov
jbe
jp
stos
jae
xchg
and
inc
fidivrs
push
and
push
movsb
out
cmp
adc
sub
xchg
inc
push
outsl
das
cmp
xor
sub
mov
ret
jg
or
fnstenv
mov
mov
xchg
stc
out
mov
repnz
xor
dec
dec
outsb
insl
pop
arpl
pop
test
mov
test
jmp
mov
outsl
jno
jp
lcall
stos
pop
je
fs
aam
sti
scas
jg,pt
push
rcr
adc
push
jg
das
adc
jecxz
decl
jl
mov
jge
add
mov
pop
popf
push
stos
sub
xor
lret
aad
jle
sti
inc
adc
je
in
fisttpl
sbb
gs
cmp
cld
sbb
test
and
push
jle
mov
decb
or
dec
pusha
loopne
push
loopne
jp
pop
xlat
dec
movsl
inc
lahf
outsb
mov
es
jl
outsl
push
jp
cmp
addr16
shl
lahf
adc
in
fisttps
mov
mov
call
sbb
ja
mov
cs
cs
push
pushf
mov
mov
jae
push
andb
int3
pop
aas
pop
neg
das
fwait
adc
ret
std
sub
xchg
clc
sti
popa
call
jno
std
mov
xchg
sbb
outsl
lea
mov
or
jb
pop
fsubs
dec
adc
fidivl
nop
mov
cmp
in
inc
mov
leave
popa
shll
pop
jmp
into
ret
jb
cld
dec
mov
and
std
jo
mov
pop
ret
inc
pop
fwait
mov
subb
popf
insb
lret
inc
push
clc
xchg
jbe
dec
incb
add
shl
test
insb
sar
lea
dec
pop
dec
neg
xchg
and
outsb
mov
scas
jns
incl
shll
mov
addb
test
mov
ret
cmp
mov
add
scas
shl
jg
fdivl
jne
fdivrs
mov
push
mov
mov
pusha
out
and
add
sahf
fdivp
sahf
ds
push
lock
xchg
dec
or
mov
mov
jbe
sbb
adc
mov
shrb
add
mov
adc
sub
push
add
das
cmp
xchg
test
mov
ffree
ja
clc
in
sbb
dec
in
into
dec
test
scas
fisubs
mov
stos
divl
scas
or
int
push
sub
adc
inc
in
pop
xchg
xor
sbb
or
cmpsl
aam
sahf
roll
pushf
jo
test
pop
inc
dec
add
incl
mov
inc
xor
jne
xor
inc
loop
fistps
scas
fstpt
leave
dec
cli
popl
mov
mov
les
cld
stos
add
xchg
push
xlat
jl
arpl
cmp
sti
shr
cmp
aam
mov
add
jp
inc
call
push
pop
cmp
cmp
out
iret
sub
pop
mov
jbe
pop
pusha
xor
rcrb
outsb
jb
mov
repz
out
inc
mov
dec
sbb
and
mov
jae
in
cmc
xor
dec
jo
ret
sbb
ret
cmp
xor
add
sbb
es
xor
xchg
data16
hlt
jmp
jmp
pcmpeqw
xchg
xchg
cli
sub
cmpsb
aaa
xchg
dec
mov
adc
push
xchg
jne
out
clc
imul
daa
aas
jb
rorb
fwait
test
xchg
ret
push
pop
mov
fwait
divl
outsb
icebp
inc
adc
pop
mov
jnp
repz
pop
add
mov
repz
sub
and
cmp
mov
cld
les
jle
adc
adc
mulb
pop
mov
jecxz
jle
and
rolb
imul
inc
pop
decl
cmp
shlb
outsb
scas
adc
sub
mov
sbb
cmp
inc
nop
aad
dec
lods
insl
pop
movsl
outsb
addl
sbb
repnz
dec
dec
mov
cltd
mov
int3
out
bound
ja
inc
cwtl
lods
and
popf
sbb
or
sti
and
mov
into
mov
arpl
add
push
popf
xchg
sub
jne
lods
cli
push
mov
pop
jbe
popf
ds
adc
sbb
jae
stos
popa
jp
jnp
adcb
add
jp
inc
cmp
int3
fwait
sub
sub
fiadds
lods
push
inc
jp
negl
adc
add
cmpsl
sub
dec
fwait
mov
icebp
cli
inc
shll
lret
or
hlt
subl
xor
mov
shrb
mov
mov
inc
mov
cli
andl
xor
popa
and
mov
js
int3
mov
and
mov
cmp
push
jae
pop
daa
mov
mov
add
jnp
sbb
mov
mov
mov
cmp
js
int3
sbb
mov
sub
stos
add
xlat
movsl
fbstp
out
in
or
mov
gs
or
push
mov
adc
dec
mov
mov
pop
adc
fbstp
cmp
test
adc
jae
in
dec
cmpsl
sbb
mov
and
push
and
mov
mov
call
sbb
add
enter
gs
sbb
mov
imul
sub
jne
mov
js
fcoml
sbb
int3
les
push
andb
outsb
lret
jl
xor
dec
repnz
inc
pop
jns
dec
inc
in
inc
xbegin
or
mov
les
les
xchg
lret
mov
ljmp
mov
dec
or
sub
jno
rorl
ljmp
dec
ss
call
stc
fs
sub
mov
int
gs
cmp
aam
sub
jg
adc
daa
ret
mov
mov
test
orb
adc
mov
in
aas
mov
push
inc
xchg
out
ss
out
push
push
ret
lea
pop
test
stc
xchg
pop
cmp
mov
movl
jb
call
jb
shl
sahf
xchg
ljmp
xchg
inc
push
xor
fildll
push
cld
ljmp
loop
fwait
orb
jns
adc
hlt
push
es
mov
outsb
shrb
mov
xchg
cltd
aaa
repnz
jecxz
popa
dec
in
jbe
adc
andl
lahf
or
std
xchg
cmp
out
dec
or
mov
jae
in
loopne
lock
adc
dec
lock
mov
mov
fidivrs
scas
sti
lahf
jmp
ret
mov
cmp
clc
popf
push
out
mov
es
mov
outsb
cmpsl
test
lahf
aas
cs
push
and
shlb
fidivs
mov
cmpsl
ds
shll
fwait
test
das
push
pop
pop
rorb
outsl
xor
ljmp
int3
sub
ss
jmp
dec
lret
cmpsl
sbb
gs
ss
mov
or
dec
push
xchg
inc
pusha
mov
pextrw
push
inc
dec
cs
fmuls
jp
pop
push
cmp
lds
into
enter
mov
ret
mov
fwait
sbb
daa
enter
lahf
dec
cmpsl
cli
fsubr
inc
mov
repnz
mov
scas
mov
xchg
push
jbe
cmpsl
hlt
stc
mov
pop
mov
push
push
repnz
int3
fwait
jl
add
pusha
inc
and
xlat
push
scas
pop
pop
inc
stos
and
aam
mov
cmc
aad
jo
jne
fsubl
xor
repnz
adc
sti
push
icebp
sahf
cmc
or
and
out
cmp
pop
aaa
icebp
stos
pop
addr16
push
std
mov
cmp
insb
inc
jecxz
imul
repz
cltd
fidivl
movsb
mov
push
cld
js
mov
cmpsb
pop
leave
jae
sub
sub
clc
mov
shrl
push
jbe
cmpb
cmp
inc
mov
and
jb
inc
and
pop
subl
jns
or
pop
mov
outsl
popa
mov
push
jecxz
and
add
repz
sarl
jne
cmp
pop
movsl
mov
sbb
test
cmp
scas
xchg
sub
lret
or
xor
push
out
mov
hlt
mov
or
push
shrl
cmpsb
shrb
xor
sub
xlat
mov
call
add
inc
lock
xor
loop
mov
test
and
out
out
mov
ljmp
push
les
sub
push
shl
jl
movl
in
mov
aas
imul
mov
sysexit
fnsave
clc
adc
jp
and
test
sbb
push
enter
call
dec
adcb
daa
andb
or
pop
loop
jl
fs
sahf
xor
mov
sbb
or
cmpsl
iret
ret
mov
fstpl
insb
cwtl
jmp
dec
aam
cmp
xor
stc
cmpsb
aas
iret
jg
in
sub
rcrl
std
sbb
adc
outsl
xchg
sti
fidivrl
push
out
sub
loop
and
mov
aas
addr16
setns
out
testl
xchg
mov
mov
mov
push
xor
in
aam
shlb
lcall
adc
arpl
arpl
inc
out
repz
stc
cmpsl
std
cmp
mov
push
dec
aaa
sub
mov
adcl
dec
sub
mov
insb
push
repnz
and
sub
sbb
das
pusha
or
dec
push
shl
aas
pop
and
mov
jo
mov
sub
jae
mov
sti
shl
cltd
xchg
sub
loop
adc
sub
sahf
and
xchg
jnp
cmp
mov
fcoms
lods
mov
pushf
insb
xchg
mov
dec
outsl
jb
xchg
insl
movsl
enter
mov
iret
pushf
sub
mov
mov
cmp
idivb
inc
or
sbb
neg
dec
lcall
add
test
fistpl
adc
adc
rcrb
jmp
add
out
xchg
jmp
jp
fildll
xor
arpl
test
bound
shlb
jo
repz
mov
xchg
icebp
jmpw
shll
jbe
int
dec
push
sahf
xor
fcmovne
jg
dec
adc
mov
ror
lods
mov
test
adc
or
call
loopne
cmp
out
adc
and
jle
mov
jge
cmc
push
aaa
or
lods
orb
xor
mov
idivl
scas
add
adc
jnp
sub
into
cld
cmp
aad
cmc
dec
xor
push
mov
xor
test
fstps
mov
fstps
xor
sarb
imul
xor
mov
scas
pop
mov
idivb
add
repz
je
test
faddp
fiaddl
mov
push
sub
cmp
stos
outsl
aad
pusha
movsl
mov
push
clc
xlat
xchg
loopne
sbb
add
inc
xor
jb
pop
fstpt
jnp
ret
loopne
xor
add
arpl
xor
aad
pusha
scas
mov
dec
push
xchg
hlt
cld
rcl
mov
pop
jecxz
std
stos
stos
sbb
repz
add
fcompl
mov
ljmp
loope
pop
xchg
aad
cmp
addr16
push
lahf
pop
mov
call
push
mov
or
cmp
lcall
jle
push
add
adc
in
loope
and
jnp
fistpl
lds
pop
and
fxtract
sbb
and
push
std
push
xchg
add
push
push
lret
loopne
dec
ret
adc
lock
out
aam
jecxz
cmp
ss
and
jecxz
lret
lret
jl
inc
cli
popa
ja
xchg
in
sub
sbb
scas
mov
mov
out
iret
test
icebp
xchg
outsb
cmc
jo
in
and
cmp
js
lret
sbb
pop
clc
or
push
jecxz
scas
jl
push
dec
fildl
cmc
data16
cmp
pop
jmp
lods
mov
ret
aad
in
adc
xchg
out
xor
inc
cmp
adc
mov
adc
push
fldl
dec
xchg
test
adc
xor
mov
enter
call
mov
mov
das
test
lahf
push
cs
loope,pn
cmp
stos
ret
subb
inc
stc
jp
pop
xchg
and
push
push
int
jecxz
add
sub
loop
jle
cmp
and
ljmp
cmpsl
dec
scas
fistps
adc
int3
or
adc
cmc
jo
jg
dec
rclb
loopne
sub
jle
push
nop
push
insl
inc
test
in
xchg
xchg
jns
mov
xor
xor
cmpps
int3
fildll
mov
jbe
arpl
arpl
btc
push
cmp
mov
test
das
add
push
scas
ds
pop
stos
test
addr16
shlb
frstor
sbb
loope
dec
mov
stos
pusha
inc
in
lods
push
sahf
ret
repnz
pop
jecxz
test
mov
cmp
mov
xchg
outsl
inc
xchg
test
or
add
out
pushl
xor
fstps
sbb
jge
lea
divb
xchg
mov
dec
mov
arpl
leave
dec
push
je
les
insl
mov
out
pop
inc
dec
push
jecxz
popf
cmp
mul
sbb
push
pop
rcr
decb
js
xchg
xorb
mov
loop
test
les
cmpsb
fadd
ret
stc
stc
add
sbb
cmp
xor
pop
pop
fcmovb
scas
pop
arpl
rcr
fdivl
je
popa
nop
pop
and
aam
sbb
cli
cmc
mov
mov
js
adc
movsl
mov
push
cmp
and
fsubl
and
sahf
stc
sub
les
or
ss
xchg
jg
sub
outsl
mov
jno
js
ds
mov
mov
push
outsl
movl
pop
lods
insb
rcr
inc
imul
cmpsb
jo
roll
mov
outsb
sub
or
adc
or
pop
inc
sub
mov
ficompl
shlb
leave
add
push
rorl
pushf
sbb
arpl
jmp
pop
out
sub
jbe
mulb
adc
in
inc
imulb
mov
movsl
stos
addl
pop
insl
rcr
hlt
xchg
sbb
xor
mov
mov
adc
loop
ret
addr16
sub
sub
inc
xor
icebp
cltd
sti
pop
outsb
out
jg
repz
mov
outsl
aas
add
shrl
sub
daa
ret
push
test
cwtl
cmp
dec
les
push
aad
daa
jo
repnz
scas
xor
hlt
nop
xor
sub
out
xor
mov
nop
adc
mov
test
cmp
loopne
push
jmp
int
dec
cwtl
mov
mov
sub
fsubrp
and
call
addl
inc
pop
data16
adc
leave
pop
mov
pop
outsl
insl
dec
push
push
daa
push
mov
sahf
xor
aad
ret
pushf
push
in
insl
pop
lea
lahf
lret
int
jnp
imul
jl
leave
bound
xor
cwtl
ss
pop
push
sbb
jmp
repnz
push
cmp
clc
loopne
orb
xor
dec
std
loop
mov
add
or
dec
nop
popa
sbb
daa
sub
xchg
mov
insl
xor
xchg
mov
shrl
jp
jecxz
adc
nopl
push
pop
sub
or
cmp
xor
sbb
or
pop
cmc
lock
add
xchg
incl
push
push
fmulp
loope
xchg
es
push
in
jge
shlb
cmp
sbb
mov
iret
fsubrs
sbb
xor
insl
adc
ss
out
push
in
fidivl
mov
movsl
cmp
push
std
push
dec
notb
out
ficoml
dec
mov
enter
mov
cmp
loope
aad
mov
jmp
dec
pop
inc
scas
popf
add
mov
xor
push
lret
push
out
lcall
mov
mov
mov
lds
pushf
negb
pop
loope
inc
xchg
adc
repnz
push
xchg
aam
or
scas
or
jnp
shl
out
sbb
pop
cmc
addr16
aam
into
mov
out
and
lahf
adc
xor
jmp
movsb
mov
lock
jbe
mov
scas
fstps
enter
lods
pop
push
jnp
outsl
cmp
lahf
repz
push
mov
xchg
xchg
dec
sbb
mov
push
jmp
sarb
aam
push
adc
out
cli
lods
jg
stos
outsl
dec
adc
es
int
hlt
cmp
in
repz
jecxz
imul
ja
aas
mov
movsb
xchg
lcall
and
in
out
sbb
sub
pop
outsl
adc
or
push
and
shlb
adc
and
ljmp
xchg
fidivrl
add
jmp
push
add
mov
mov
adc
hlt
jle
push
push
jle
lret
ljmp
push
xor
pusha
and
lret
pop
les
xchg
int3
pop
jmp
pushf
rolb
rorb
cmp
loope
sahf
ja
ficoms
cli
jg
pushf
mov
and
mull
cmpsb
pop
mov
lea
and
xchg
jle
mov
add
cmpsb
fistl
fsubrl
incb
lcall
mov
add
movsb
jle
pop
push
movsb
in
popa
or
out
aam
je
clc
xlat
sub
mov
inc
pop
inc
push
popa
push
add
push
dec
repnz
cs
push
mov
fs
sbb
fistpl
inc
ret
rcrl
icebp
cmp
xchg
jbe
movsb
dec
addps
mov
sbb
in
das
in
lret
xchg
int3
ljmp
fcmovbe
adc
pop
sahf
fsubp
movsb
fnstsw
into
jmp
sbbb
std
or
and
cmp
aad
call
jmp
cmp
out
inc
arpl
ljmp
pop
daa
xchg
aaa
imulb
pop
or
das
nopl
aaa
xchg
loopew
aam
inc
or
pop
mov
pop
cltd
or
push
sbb
stc
test
add
adc
enter
jae
inc
popa
mov
add
icebp
ja
loope
scas
stos
ret
xlat
lahf
jns
cmp
adc
lahf
pop
adc
inc
mov
stos
mov
xorl
cs
in
pop
fiaddl
cmp
push
ret
out
fiadds
cmpsb
sub
dec
ret
lods
and
repnz
data16
inc
push
movsb
jecxz
aas
jmp
add
addr16
cmp
insb
adc
call
sub
lock
inc
xchg
dec
stos
push
cmpsb
mov
inc
mov
fidivl
stos
push
inc
mov
xor
xor
dec
xor
aas
mov
hlt
inc
inc
push
mov
and
jno
test
jno
pop
mov
xlat
sub
sub
dec
jno
pop
jecxz
pop
out
pop
ljmp
dec
add
leave
mov
insw
push
sub
push
sub
mov
mov
notb
lds
jl
cmpl
push
mov
sbb
movsl
push
pop
push
or
repz
xor
sbb
xor
sbb
fstpl
mov
push
xchg
idivl
je
push
mov
ljmp
adc
mov
mov
xor
add
sub
cmp
daa
mov
cmp
testl
xchg
cmp
adc
mov
add
nop
jmp
jnp
add
pop
push
jecxz
xor
das
sarl
mov
movsb
or
lcall
ret
incb
mov
mov
sub
movsl
jnp
and
dec
ja
xor
inc
cmp
lods
insl
sahf
sub
or
outsl
mov
dec
cmp
lret
shl
pop
fistpl
sbb
test
mov
or
inc
xchg
jmp
add
xor
mov
into
push
movsw
add
out
or
stc
and
sub
add
and
popa
pop
or
push
stos
inc
and
test
and
and
cmp
in
mov
cltd
jecxz
ja
pop
xchg
adc
hlt
sub
out
and
sub
or
orb
adc
fistl
imul
xchg
fidivs
jp
fs
lahf
out
add
dec
popf
mov
fistpl
jle
mov
sub
pop
std
std
cmpsl
in
cltd
mov
testb
push
ret
stos
shlb
jb
inc
cmpsb
adc
in
in
cmpsb
xor
mov
lock
mov
jmp
enter
mov
mov
loop
loopne
in
scas
sub
push
scas
mov
ja
mov
js
imul
jns
push
cld
outsl
fisttpl
jae
gs
clc
iret
test
popa
mov
xor
jmp
xchg
sbb
call
mov
test
jne
cmp
pop
cmp
filds
xchg
or
shlb
fwait
sub
rcrb
daa
movsb
loope
call
adc
repnz
mov
sbb
add
mov
cmc
in
add
jmp
test
xor
nopl
movsb
inc
push
gs
movsl
xchg
xchg
mov
xor
repz
xchg
xchg
dec
movsl
push
out
sub
jg
sub
dec
rcl
cmp
lods
sti
loope
popf
leave
arpl
xor
call
arpl
cmp
nop
pop
icebp
mulb
push
sbb
insb
ljmp
test
in
nop
mov
lods
cmp
scas
xor
shlb
cmp
das
or
in
adc
jns
mov
sub
dec
xlat
inc
cltd
pop
addl
loop
test
adcb
xor
mov
sarl
in
mov
pop
out
add
data16
cwtl
aaa
and
out
cmp
and
loopne
mov
push
and
add
sub
in
jae
adc
imul
leave
mov
scas
jge
outsb
or
mov
cmp
and
xor
test
pop
rcl
outsl
insb
sub
jo
mov
shll
popf
mov
xor
jns
cmpsl
mov
jl
inc
sub
push
or
int3
lea
fwait
push
pop
pop
loopne
fisubl
addr16
pop
adc
imul
mov
stos
dec
lock
or
movsl
fisubl
or
pop
repz
mov
iret
cmp
shrb
mov
adc
repz
xor
mov
lea
adc
push
and
repz
das
dec
ljmp
orl
pop
ret
call
xchg
testl
cld
inc
je
xor
mov
xor
fwait
pop
int
pop
imul
sbb
push
xchg
xor
movsl
loope
lcall
mov
jg
or
fadd
out
fistl
stos
cmp
clc
lock
jb
test
ret
mov
cmpsb
pop
jge
out
xchg
mov
or
repnz
cmp
aas
sub
outsl
loopne
jmp
adc
int
mov
push
cmp
test
dec
shll
cs
or
inc
mov
fldcw
lock
repnz
mov
mov
mov
cwtl
stos
adc
ret
mov
dec
pushf
out
aam
cmp
adc
xchg
mov
add
pop
cmpsl
insb
mov
dec
out
bound
or
insb
pushf
out
push
sbbb
mov
lea
xchg
mov
test
cmp
repnz
sbb
int
dec
sub
inc
fwait
push
sbb
xchg
and
and
adc
and
adc
andb
xchg
jmp
stos
mov
cld
enter
mov
ficoms
mov
imul
mov
out
pushf
daa
cmpsl
sub
scas
jne
mov
mov
mov
mov
pop
xor
stc
sarb
dec
imul
dec
sub
iret
scas
pusha
rol
mov
pushf
adc
inc
xlat
dec
fwait
jge
das
out
mov
cld
and
pop
add
mov
aaa
cld
xor
jne
in
adc
push
aad
call
pop
fisubl
clc
adc
dec
mov
ficompl
push
or
xchg
push
es
xchg
mov
mov
inc
stc
mov
jp
movsb
sbb
jecxz
sub
xchg
xchg
jl
fs
les
mov
inc
xchg
ss
lods
comiss
xchg
mov
push
adc
mov
and
outsb
jmp
xor
arpl
in
into
mov
cmp
xchg
dec
mov
dec
cmp
xchg
pushf
fs
lods
sbb
mov
fcoms
test
cmpsl
push
cld
or
out
inc
out
inc
cwtl
icebp
mov
cmpsb
pop
and
mov
mov
pop
xor
or
js
xlat
das
popf
mov
stos
push
pop
pop
adc
mov
mov
scas
add
popa
jae
std
mov
pushf
push
cmpsb
mov
cmp
push
loope
in
enter
mov
stos
pushf
sbb
push
popa
subb
cmp
arpl
das
test
jl
pop
ret
push
xor
xorb
test
sbb
pop
mov
into
inc
outsb
clc
add
push
addr16
inc
lea
inc
test
push
lds
insl
push
jmp
inc
gs
push
leave
mov
and
fadd
pop
ret
and
push
xor
jecxz
bound
pusha
push
insb
ljmp
jmp
movsb
jmp
pop
pop
add
shlb
daa
add
cli
cld
pop
out
adc
scas
mov
sarb
ja
lea
pusha
mov
ja
push
ret
mov
mov
mov
adc
out
subb
or
dec
repnz
fildl
mov
pusha
mov
or
push
jnp
cs
adc
add
mov
adc
mov
ss
xchg
pusha
sub
cmp
or
lahf
aaa
cmp
push
mov
sahf
leave
sbb
shlb
mov
inc
lods
xor
insb
lea
jo
and
daa
test
test
cmpsl
mov
jl
push
adc
push
outsb
pop
or
stc
sbb
mov
aad
jno
iret
jg
mov
jmp
jns
cmp
mov
out
jae
bound
sbb
insl
mov
jae
inc
mov
pop
andl
fcmovnu
jl
mov
push
jb
push
call
cmpb
mov
popf
sub
int
aas
in
and
cli
in
cmp
loopne
mov
inc
andb
jecxz
fisubs
jg
inc
cmp
aas
jbe
in
inc
into
nop
rcr
ret
mov
lds
mov
xor
fdivl
pop
lock
jp
jge
movsb
fisubrl
xlat
fnstenv
xor
pop
popa
nop
inc
scas
aaa
jno
fwait
and
jo
push
inc
or
inc
pop
les
fld1
push
pop
hlt
filds
mov
sbb
mov
outsb
mov
xor
adc
lret
adc
jecxz
jbe
sbb
and
loop
sub
icebp
lcall
xor
ljmp
add
add
xchg
test
mov
pop
pop
arpl
jne
dec
scas
pushf
loop
fldt
inc
xchg
imul
push
mov
nop
call
popa
std
call
mov
and
fs
inc
xor
add
adc
repnz
scas
mov
pop
xchg
andb
ja
fnsave
in
and
mov
test
adc
paddd
js
popa
jne
subb
ret
aas
test
xchg
mov
inc
add
fildl
mov
bound
pop
in
jae
xchg
outsb
lcall
pop
dec
add
ficoms
les
dec
das
stos
xchg
or
dec
fimull
aas
fsubl
add
pop
mov
aas
sbb
sbb
fcomp
jmp
fidivrs
movsb
sbb
fs
call
push
xlat
sbb
shll
popa
stc
cmc
sub
push
xor
bound
xor
mov
dec
lcall
inc
lods
or
cwtl
sub
mov
dec
ss
inc
pop
xchg
mov
push
jge
arpl
cmc
scas
xor
push
addr16
out
jns
hlt
lds
xor
and
data16
sub
pop
outsb
dec
push
rcrb
add
push
loop
lods
jo
mov
rorl
lods
adc
xchg
jno
aad
fnstsw
mov
pop
movsl
sbb
ret
dec
aaa
sbb
add
push
pop
adc
add
or
in
inc
add
insl
cmp
sbb
loop
dec
repnz
inc
push
filds
jle
xlat
movsl
jbe
jnp
add
mov
cmpsl
cmp
mov
push
mov
out
mov
adc
mov
gs
mov
lods
add
inc
xchg
push
push
mov
pop
mov
or
add
notb
add
out
push
fsubs
data16
add
cmp
sbb
xchg
mov
dec
and
inc
inc
mov
fwait
jp
out
push
push
jl
pop
inc
nop
sbb
inc
push
jno
decb
outsb
xor
or
and
test
popa
imul
testl
push
arpl
pop
lcall
mov
call
pop
inc
pusha
cmp
and
lea
sbb
je
gs
adcb
mov
iret
lret
or
outsl
pusha
fdivl
jbe
lods
and
pop
push
hlt
fadds
js
divl
out
sbb
aas
cmpsb
jl,pn
js
in
inc
dec
cld
and
in
out
pop
cmp
mov
sub
mov
js
add
dec
subl
scas
sahf
and
push
in
jno
inc
cld
gs
push
ljmp
jmp
scas
lahf
stos
rcr
mov
jb
mov
jl
jns
sbb
clc
out
js
cmp
orb
clc
cmp
inc
push
xchg
xor
mov
xchg
and
stos
stos
jae
fsubs
sub
cmp
and
mov
pusha
icebp
cltd
jo
sub
push
cmpsl
sub
and
fisubrs
fs
or
mov
aad
fldcw
loopne
push
inc
pop
les
xchg
inc
imul
adc
mov
inc
arpl
in
xor
inc
xor
xchg
stos
mov
jp
push
pop
incb
jnp
mov
fcoms
mov
xchg
inc
insl
adc
ss
outsb
movsl
push
lods
subl
mov
imul
lret
xor
loop
sub
outsl
jl
clc
sbb
pop
insb
adc
mov
adc
gs
mov
shll
movsl
sub
ret
aaa
sbb
inc
or
inc
cmp
in
sbb
ljmp
xor
xlat
imul
sub
fwait
lahf
or
aad
in
aad
test
leave
arpl
mov
dec
jge
ljmp
mov
xchg
mov
fnstsw
xchg
adc
mov
mov
jecxz
mov
pop
xor
jnp
mov
xchg
add
xor
loopne
insb
inc
adc
icebp
pop
in
jb
aaa
ffree
scas
bound
inc
add
inc
punpcklwd
xchg
xchg
pop
pop
pusha
movsl
outsl
stos
popf
pusha
fiaddl
cmpsl
mov
xchg
pop
ljmp
in
mov
daa
inc
arpl
inc
push
push
add
push
in
add
popf
jno
jne
jnp
dec
std
popa
pop
mov
int
pop
sub
ret
and
mov
jge
inc
repnz
sbb
adc
and
pop
pop
popf
inc
movb
outsb
outsl
and
into
cmpsb
loope
mov
adc
sbb
push
xchg
push
adc
adc
testb
push
jb
fwait
push
test
add
sub
insl
xchg
out
inc
sarb
xlat
into
adc
and
add
push
lods
mov
jle
movsl
sbb
mov
aam
dec
out
imul
aam
ret
xlat
sub
rolb
addr16
jnp
xchg
leave
add
lods
gs
mov
fwait
addb
popf
mov
sbb
jg
out
shr
dec
add
sbb
imul
xor
sub
pusha
imul
xlat
js
inc
lods
pop
jp
push
mov
stc
xchg
adc
cmpsb
push
setle
test
sub
cmc
imul
jno
pop
adc
push
ffree
loop
jmp
dec
pop
incb
dec
add
scas
or
jmp
sub
test
sub
pop
jbe
sbb
cmpsb
cmpsl
clc
or
mov
cmc
data16
mov
inc
jle
enter
mov
lahf
dec
mov
jb
dec
cmc
lcall
out
lcall
in
outsl
movl
popa
ror
test
xor
sub
cld
mov
or
daa
inc
or
aas
mov
adc
imul
loope
dec
mov
gs
push
cmpsb
fs
push
cmpsl
sub
push
mov
mov
jp
sub
xchg
pop
xor
jl
dec
imul
add
cmp
xor
sub
movntq
mov
and
mov
rcll
jecxz
insb
adc
mov
out
or
int
adc
or
mov
cmpsb
in
push
outsb
aad
andl
or
scas
aam
pop
nop
mov
lods
push
and
adc
repz
pop
dec
pop
cmp
cmpsb
adc
adc
lods
cmp
mov
dec
inc
mov
test
xlat
cmp
dec
iret
and
adc
add
jp
cmp
xchg
sub
imul
ljmp
push
and
mov
push
icebp
inc
add
mov
xor
scas
insl
iret
push
adc
fsin
loopne
adc
push
stos
hlt
aam
fdivp
scas
sti
pusha
lods
mov
push
push
mov
mov
in
arpl
mov
ret
mov
inc
mov
inc
leave
xchg
mov
jmp
flds
insl
insl
in
shl
lods
ds
fs
sbb
sbb
imul
mov
dec
stos
push
xor
aam
xchg
imul
pop
test
movsb
jmp
std
repnz
into
repnz
ja
sub
in
push
adc
pop
jle
sub
fmul
jae
and
pop
inc
add
neg
ja
shlb
arpl
mov
xor
addb
push
cmp
mov
inc
xor
inc
push
adc
xchg
outsl
xchg
xorl
sub
jmp
adc
fidivrs
jmp
and
push
inc
rcll
repz
xchg
pop
mov
cld
test
xchg
push
xchg
jno
ficoms
jmp
js
icebp
sti
jmp
push
push
inc
leave
adc
andb
and
ret
cmpsl
adc
das
push
and
cmpsl
lods
adc
mov
roll
jl
adc
adc
dec
xchg
lds
out
xor
add
je
mov
jae
xchg
sbb
scas
push
and
shlb
out
jne
and
dec
rol
pop
popf
xlat
mull
nop
pop
inc
lret
sub
cmp
or
inc
addr16
xor
push
adc
sbb
pop
lcall
sub
push
fcmovu
push
sub
inc
add
sbbb
mov
mov
enter
imul
shrb
imul
mov
je
sub
int
loope
arpl
shll
in
pop
enter
mov
xor
cmp
pop
and
adc
inc
pop
adc
jmp
aad
cld
test
out
ss
xchg
xor
push
fstps
lahf
jl
lods
adc
mul
out
repz
addl
dec
mov
scas
icebp
popa
dec
push
fists
push
cmp
xor
pop
dec
dec
lcall
loope
bswap
fnstcw
dec
iret
movsl
xchg
pop
pop
sub
in
cs
scas
dec
out
bnd
lcall
cltd
pop
pop
in
andb
dec
roll
jg
js
adc
outsl
add
addl
pushl
lret
or
cli
std
push
xchg
idivl
mov
ret
xor
xchg
test
int3
and
shlb
push
sub
xchg
cltd
shll
shlb
xor
cli
adc
data16
pop
std
aam
pusha
pop
clc
popf
ja
cltd
push
fwait
cltd
aam
mov
sbb
inc
xchg
mov
lods
aaa
movsb
pop
fdivp
jno
xlat
or
or
bound
shll
popf
jo
ret
inc
cs
in
lods
jl
sub
scas
jbe
add
daa
cmpsb
and
sti
and
inc
mov
add
adc
fnsave
in
or
dec
jle
mov
das
outsl
popf
bound
mov
fwait
push
or
das
das
les
add
mov
jg
enter
lret
into
push
addr16
mov
popf
in
xlat
out
lea
xchg
popa
popf
or
aas
je
inc
dec
add
out
mov
dec
inc
mov
or
jecxz
fildl
mov
cmpsl
dec
mov
push
inc
mov
pop
shll
sub
cmp
adc
test
xor
inc
fs
out
xchg
xchg
jne
inc
pop
mov
dec
pop
pushf
or
fldl
stos
cltd
mov
icebp
ja
xchg
xchg
push
cmp
push
mov
cld
cli
int
cmp
mov
and
test
out
lret
outsl
test
sub
adc
mov
inc
loopne
insl
loopne
pop
cwtl
or
sbb
add
xchg
sti
push
xor
adc
mov
pop
aam
popf
dec
adc
push
xchg
dec
inc
gs
lea
scas
mov
sub
mov
aaa
lcall
lods
mov
sbb
stos
ja
xor
cltd
push
addr16
and
jae
in
movsb
es
sahf
jp
mov
jbe
out
push
pop
push
fwait
addr16
stc
pusha
mov
int
pop
inc
fdivs
cmp
orl
push
cs
hlt
inc
xchg
dec
out
jg
dec
mov
sub
mov
adc
sbb
mov
inc
pop
arpl
sbb
add
xchg
push
xchg
mov
mov
cwtl
mov
psubq
pop
xor
pop
cs
xchg
cmpsl
test
movsl
iret
aad
out
fstl
fdivrp
ljmp
scas
or
add
pop
adc
stos
decb
xchg
xchg
lahf
repnz
sub
negb
inc
fcoml
mov
andl
test
mov
outsb
and
mov
pop
in
mov
and
pop
idivb
call
push
jnp
ljmp
repz
cs
fcomp
jmp
loopne
loop
arpl
push
jno
pop
lcall
mov
mov
pop
lds
lcall
push
inc
mov
mov
ss
jns
aaa
rcl
iret
adc
sub
imul
popa
ret
enter
fs
js
int
inc
lods
cli
xlat
cltd
pop
aad
mov
pop
lret
or
icebp
add
mov
lds
pop
sbb
bound
cmp
inc
mov
addb
sub
lods
rcl
fsubrs
insb
xchg
pop
lahf
xchg
push
sarl
and
mov
add
cli
jne
and
scas
xor
mov
sub
adc
push
stos
adc
mov
cmp
jb
insl
popf
push
mov
jne
sahf
out
mov
sbb
sbb
call
mov
rcrb
cmp
dec
mov
dec
roll
fbstp
lods
pop
mov
popa
inc
cmp
push
xchg
bound
fadd
push
lock
lods
popf
stc
inc
xor
cli
push
mov
mov
cmpsl
adc
fsub
in
inc
dec
jecxz
in
cltd
incl
and
sahf
gs
pop
or
dec
lock
mov
and
aam
jle
fadds
push
add
jecxz
or
scas
sub
jg
mov
xor
movl
stos
dec
xor
mov
js
jne
lcall
fs
sti
push
mov
and
repz
xchg
jg
cmpsb
jp
and
fmull
dec
hlt
add
out
fs
dec
cld
and
sbbb
mov
pusha
jb
out
mov
pushf
out
sub
push
push
push
fnstsw
mov
imul
xlat
push
add
push
mov
push
imul
push
cmpsb
repnz
out
imul
scas
insl
jmp
dec
sbb
ja
popa
sbb
jp
xor
es
loopne
pop
lahf
ds
push
jecxz
dec
arpl
testb
xchg
xchg
jne
xor
or
mov
int
pop
dec
pop
push
cmc
scas
xchg
push
imul
insb
insl
add
mov
iret
dec
adc
inc
ds
inc
xchg
fidivs
dec
int
std
xchg
icebp
rorl
jle
jecxz
mov
shrl
sub
xlat
pop
ret
mov
repz
ljmp
aas
test
sub
inc
pop
addr16
pop
aas
andl
mov
int3
fsubrl
mov
jne
and
cmpsb
ss
adc
mov
sbb
jl
adc
adc
push
adc
es
shrl
dec
and
enter
dec
hlt
inc
sbb
inc
cmc
sub
mov
popf
or
cmp
pushf
out
movsb
xor
inc
movb
add
mov
dec
subl
inc
pop
int3
sahf
dec
cmp
push
cltd
scas
adc
pop
dec
test
or
jmp
pop
imull
mov
jg
sub
into
out
or
ss
mov
xlat
push
jge
cmp
das
pop
call
jecxz
inc
aaa
adc
fcoml
adc
call
jne
testl
push
push
xchg
jl
push
fidivrs
sti
sti
mov
fmul
xchg
pop
shrb
push
iret
out
mov
push
iret
int3
sbb
or
xor
int
xor
les
push
cmp
xbegin
incl
fistps
std
gs
mov
and
cmp
inc
les
xchg
cs
mov
mov
aad
pop
mov
rdtsc
pop
and
test
or
sub
mov
popf
sub
sbb
xchg
or
sbb
xor
cmpsl
push
jecxz
out
pop
test
inc
mov
push
push
mov
in
jnp
lods
and
sbb
lea
mov
lahf
movsb
cmp
mov
fstl
xchg
inc
or
dec
mov
imul
mov
icebp
inc
inc
jno
mov
cmpb
xor
in
out
mov
icebp
pop
sbb
mov
data16
fwait
cmpsb
push
xlat
shlb
movsl
arpl
xchg
in
jmp
mov
mov
movsb
add
pop
ja
mov
add
jbe
test
frstor
push
pop
adc
add
cmp
dec
leave
mov
mov
mov
test
or
xchg
mov
push
in
fiadds
add
xor
mov
mov
out
cmp
mov
cli
imul
or
jne
out
mov
insl
sbb
dec
frstor
loop
jno
jo
adc
mov
dec
and
pop
mov
mov
test
push
jne
test
mov
addr16
in
jecxz
mov
subb
test
xor
push
ds
inc
cs
aam
mov
cmpsb
fmull
cmc
mov
out
shlb
mov
mov
mov
movsl
call
xlat
ljmp
xchg
mov
sbb
and
pop
pop
ret
sbb
imul
test
mov
jmp
ds
ja
dec
dec
jb
jbe
notb
negb
decb
cltd
pushf
adc
lods
shld
loope
popa
idiv
into
mov
xorb
adc
pop
leave
insb
outsb
cmp
cmc
mov
mov
xor
push
sub
sbb
lea
cmc
cmp
mov
adc
inc
pop
lods
jge
test
dec
xchg
js
test
out
xor
lcall
xlat
xor
mov
mov
dec
rcl
add
gs
dec
push
push
pop
push
repnz
xor
sti
mov
stos
jno
fcomip
pop
icebp
sub
aam
sbb
movsl
inc
push
pusha
cmc
in
add
imul
xlat
test
cmp
aas
pop
mov
test
lods
je
sub
arpl
sub
mov
test
dec
sbb
mov
test
mov
aas
add
jg
pop
scas
test
ds
test
push
and
mov
pop
mov
mov
iret
dec
xlat
mov
dec
and
xchg
jns
aam
jne
pop
push
mov
imul
jl
imul
push
lods
jmp
inc
in
das
scas
xor
or
mov
lods
scas
and
xchg
nop
movsb
jbe
les
push
cmpsl
movsb
push
or
out
icebp
cmp
cmpsl
fucomi
dec
add
mov
iret
pop
lahf
push
bswap
test
xchg
or
mov
or
xchg
and
sub
aaa
xchg
jecxz
xchg
add
dec
cmp
adc
mov
add
pop
stos
cmp
pop
lock
out
movsl
cmp
scas
test
lea
xchg
das
cmpl
mov
out
cmp
fwait
mov
adc
cmc
add
addr16
repz
stos
stos
test
xor
jne
cmp
xor
add
add
leave
add
adc
cmpsl
adc
xor
or
addr16
negb
add
dec
sub
and
sub
jecxz
xor
cmp
xor
xchg
int3
in
iret
xchg
jp
fstps
mov
xor
xor
xchg
arpl
fst
push
or
push
jbe
xorl
insl
xor
mov
shl
fdivr
push
mov
hlt
out
sub
test
mov
movsb
icebp
stos
mov
jp
mov
ja
jl
test
fst
arpl
stos
mov
cli
and
mov
jp
cmp
add
stos
mov
stc
ja
and
mov
popa
int3
mov
cmc
pushf
pop
sub
test
jns
out
mov
not
data16
loopne
psubd
and
jb
and
neg
mov
xor
pop
cmpsl
frstor
mov
pop
shl
std
rcrl
loope
or
xchg
dec
data16
call
shll
aad
inc
loop,pt
push
pushf
popa
es
jp
push
mov
mov
je
fidivs
add
add
sbb
jecxz
adc
lock
rorl
push
fldl
in
shl
mov
fnclex
cmp
push
push
jle
lods
sub
inc
je
pusha
or
bound
jg
lods
lods
fcmove
xor
jae
mov
inc
movsb
fldcw
cmpsl
sbb
int3
xchg
mov
or
pop
jae
bound
mov
or
adc
mov
popa
push
xor
push
jne
push
xlat
cmpsl
add
push
addl
jno
sub
sbb
in
jae
lods
lcall
jmp
and
dec
sub
push
jge
jne
fbstp
hlt
jo
xor
aad
mov
test
mov
mov
repz
mov
and
insl
fdivrs
lret
push
mov
ss
in
inc
jmp
gs
enter
pop
push
push
out
jno,pt
adc
mov
stos
xchg
fidivs
fcomps
lds
inc
jge
xchg
fnsave
jb
iret
push
sub
pop
xor
int3
xchg
jnp
bound
xor
mov
xlat
jnp
test
jae
sub
jno
rcrw
imul
pop
mov
rorb
mov
pop
ja
lds
pop
sub
dec
shll
mov
das
pop
push
fwait
call
inc
mov
adc
pop
or
push
lods
sub
test
sbb
jno
int
es
pop
sub
aaa
sub
jmp
adc
rcll
and
adc
push
int
jmp
jle
lods
mov
mov
add
pushf
xor
test
das
pushl
in
imul
mov
or
das
jnp
add
jae
jecxz
adc
int
push
inc
repz
add
dec
lea
les
xchg
lea
fucomip
insl
dec
testl
cmpsb
aam
add
mov
adc
mov
pop
push
out
or
call
cmc
dec
sbbl
adc
push
cs
pop
subl
cmp
outsl
xchg
dec
imul
adc
cmp
inc
sub
jg
scas
and
scas
les
push
mov
iret
loopne
cmc
data16
gs
pop
jp
mov
fnstcw
dec
push
aas
lret
ret
popl
sbb
mov
sbb
add
push
popa
inc
cmp
std
push
inc
in
jmp
ffree
mov
xor
or
pusha
inc
push
mov
loop
divb
push
in
cmc
gs
xchg
pushf
mov
insl
mov
inc
bound
xchg
xorl
mov
mov
sbb
mov
fs
inc
push
pop
scas
mov
shr
mov
xchg
xchg
mov
push
fwait
add
int3
gs
mov
nop
dec
sbb
sub
cli
sti
dec
inc
mov
sti
push
push
xchg
jge
or
sub
loope
hlt
and
jp
aam
dec
popa
out
outsl
repnz
cmpsl
js
jno
andb
cltd
sbb
jp
enter
sub
cmpsb
mov
seta
fists
js
cli
ret
out
loop
rolb
add
inc
icebp
pop
popa
out
iret
imul
xor
or
shl
mov
pop
mov
enter
push
faddp
nop
pop
push
sub
aas
or
inc
ret
push
cwtl
outsb
out
mov
mov
jmp
pushf
cmc
adc
dec
fwait
pop
cmp
sbb
jmp
sarl
ja
mov
sub
mov
add
add
or
add
add
sahf
and
xor
sbbl
nop
int
ja
insb
test
jo
je
add
and
bound
or
in
imulb
js
orb
mov
shl
fldt
adc
mov
pop
jmp
xlat
into
push
mov
inc
cmp
inc
xor
jb
adc
inc
hlt
sub
insb
adc
and
push
cmp
arpl
mov
adc
loop
into
adc
lret
dec
jne
xor
pushf
dec
sub
out
leave
adc
jns
sbb
sub
or
cmp
push
pop
mov
push
aad
jg
stc
push
add
adc
fwait
lcall
mov
sbb
sbb
xchg
inc
mov
scas
mov
ret
cld
or
adc
mov
or
and
repz
push
movsb
pop
cmpsl
push
mov
pop
cmp
std
xor
mov
imul
ja
call
outsb
sub
fcoms
aad
or
lods
dec
adc
lret
imul
dec
ss
insl
mov
xchg
sarb
jno
into
and
mov
xchg
aam
dec
push
jnp
loope
mov
rcl
adc
into
movsl
decl
mov
pop
cmpsb
xlat
aaa
js
inc
or
xor
mov
imul
xchg
add
push
mov
sub
xchg
popa
jnp
stc
aad
jbe
push
adc
mov
outsb
push
sbb
mov
or
mov
nop
mov
enter
dec
pushf
imul
adc
adc
cwtl
roll
rorb
pop
sahf
and
imul
mov
pusha
dec
dec
mov
cmpsb
cmpsl
mov
or
insl
mov
pop
sbb
fldt
sub
or
mov
gs
pop
inc
xor
sbb
das
mov
or
sub
and
xor
xor
mov
pop
dec
pushf
push
lods
mov
test
lods
jno
push
popf
sahf
cmp
repz
mov
outsb
out
icebp
cmpsb
rcll
mov
mov
mov
sub
addr16
mov
fisubs
mov
and
jns
cmp
jecxz
xor
imul
push
mov
jb
mov
mov
jo
fistpll
out
ret
dec
fsub
cmp
xchg
test
scas
mov
pushf
mov
jg
testl
and
mov
in
push
gs
popf
fldl
push
xor
sub
inc
stos
mov
adc
xor
mov
sub
mov
adc
add
or
sub
sub
ret
mov
in
mov
mov
ret
shrl
push
or
mov
dec
push
cmp
inc
xor
jbe
fisttpl
outsl
out
inc
sub
test
fcomip
adc
les
clc
lea
xchg
jns
adc
or
shrl
pop
negl
dec
or
aad
hlt
jle
lock
jb
cwtl
ds
aas
push
adc
bound
mov
out
jae
adc
add
dec
sbb
in
scas
enter
cli
xchg
nop
dec
mov
daa
dec
into
iret
pop
iret
movb
mov
fimull
adc
push
push
adc
push
cli
xlat
cmp
jb
xor
inc
loop
ja
out
insl
push
and
push
xchg
notl
add
and
cmp
insl
lcall
cmp
cli
push
pop
aad
fdivl
cs
or
xchg
push
mov
lods
add
inc
jae
ds
add
pushf
xchg
nop
fsubp
push
mov
pusha
aad
int3
scas
lods
mov
ud2
jb
dec
sbb
jg
jae
ss
cwtl
jl
pop
stos
sbb
jae
es
adc
pop
jbe
mov
aas
mov
push
dec
ds
xchg
jno
ret
idivb
popa
ss
mov
mov
adc
pop
xor
out
mov
ja
shlb
mov
cmpsb
leave
and
push
test
adc
add
das
mov
pop
pop
xchg
cmp
mov
xchg
adc
mov
jne
call
mov
xchg
movsl
mov
mov
pop
je
mov
fwait
mov
pusha
fistpl
jo
into
jmp
mov
scas
sbb
mov
jl
insl
dec
jmp
lret
out
call
data16
adc
or
loop
sub
adc
sbb
testl
insl
mov
not
jae
imul
adc
jnp
jo
mov
cmc
mov
cmp
push
xor
add
out
and
and
jb
pop
jns
dec
xlat
inc
imul
scas
xor
fdivrl
pop
inc
leave
mov
xchg
cmpsl
sub
lcall
xchg
mov
and
test
cmp
stc
jecxz
dec
in
ja
loopne
dec
cmp
mov
imul
sub
idivb
std
mov
testl
sahf
scas
mov
gs
pop
insl
arpl
or
scas
outsb
fs
mull
jle
ret
mov
dec
or
push
in
das
test
leave
fcom
jnp
in
imul
adc
xor
push
pusha
dec
mov
lea
mov
rcrl
pushf
xchg
aam
lret
repnz
push
or
xor
add
sub
jp
inc
aam
outsb
mov
dec
int
xchg
push
inc
stc
pop
scas
lods
bound
mov
mov
test
push
inc
xor
cmp
xchg
xlat
jl
test
xor
or
or
cmp
test
into
mov
int
popa
mov
mov
xor
xchg
dec
shl
leave
mov
cmc
lods
jae
fildll
out
pop
push
adc
in
sbb
fimuls
mov
imul
or
add
jmp
push
out
leave
aaa
fisttps
arpl
sub
fnstenv
pop
xchg
jno
sbb
int3
sub
push
dec
dec
inc
addb
clc
mov
adc
jbe
ljmp
int
pushf
scas
out
dec
mov
scas
push
lret
rolb
outsb
mov
stos
mov
lahf
pop
add
sub
xor
bound
cs
clc
ret
xor
dec
andb
icebp
xor
mov
or
jmp
mov
mov
loopne
mov
faddp
sbb
pusha
and
pop
ror
lahf
jbe
ljmp
cmc
fldl
mov
inc
or
shlb
sub
mov
sti
xlat
jbe
xchg
aam
mov
dec
stos
add
adc
out
cmp
add
sbb
pop
adc
add
adc
cmp
inc
scas
inc
arpl
in
jno
mov
and
mov
mov
loop
outsb
std
ror
push
ja
ficompl
dec
insb
mov
jne
xchg
mov
loop
andb
xchg
and
add
push
movq
inc
push
cltd
int
adc
arpl
dec
dec
loopne
dec
aam
idivl
mov
les
jbe
and
jge
cli
clc
xlat
jne
jecxz
jnp
cmpsb
in
xchg
in
mov
aam
xor
lds
adc
je
or
ss
dec
shll
call
repz
sub
mov
fistpl
push
mov
aam
mov
xor
test
xchg
xchg
inc
xchg
lret
loope
lock
test
in
rcr
dec
pop
sbb
imul
inc
pusha
rcr
cmp
adc
test
pop
leave
call
xchg
lcall
hlt
test
fistps
mov
pop
push
testl
xor
sti
mov
pop
cli
into
xor
add
mov
dec
jp
addr16
pop
call
cmpsl
stos
aad
adc
loope
inc
out
pop
push
adc
ss
or
outsl
rep
dec
cli
xchg
fdivrs
push
enter
gs
call
popa
add
mov
pop
out
jecxz
hlt
push
lock
sub
hlt
and
push
jg
xor
jg
adc
fisttpll
subl
mov
ljmp
dec
inc
fcomi
sbb
dec
xchg
pop
cmp
adc
andl
and
or
insl
int3
scas
aad
xor
xchg
or
mov
loop
add
test
cmc
jecxz
lock
les
ret
add
aam
mov
jl
push
aas
or
test
bound
xchg
xchg
add
fmuls
mov
addr16
push
pop
test
jne
mov
add
test
repnz
cltd
cltd
jecxz
or
aas
push
in
test
xchg
cmpsb
jge
and
inc
push
mov
mov
sbb
aaa
mov
mov
adc
scas
pop
jae
xchg
xchg
sbb
gs
inc
adc
mov
dec
pop
arpl
cmp
lods
outsb
aad
test
fstpl
and
imul
adc
in
sub
addr16
pop
arpl
daa
adc
out
orb
out
stos
testb
movsl
ja
sub
add
arpl
xor
xchg
js
aaa
adc
lahf
stc
dec
stos
int3
push
cli
sbb
sbb
orl
xchg
or
rolb
push
and
shll
filds
pusha
movsb
lock
jo
xor
inc
out
and
lods
pop
cmp
rclb
ja
sbb
xor
xor
mov
inc
mov
test
ffree
pop
fstl
rcrl
or
mov
or
pop
imul
jo
sbb
push
xchg
cs
xor
in
fstl
mov
inc
cli
inc
mov
shrb
jge
or
iret
lcall
jecxz
xchg
jmp
xor
mov
inc
xchg
push
cmp
andl
fisubrl
jno
pusha
jle
mov
je
loopne
xchg
notl
inc
xchg
sbb
in
cmc
into
adc
mov
cmp
or
add
xor
mov
out
inc
or
bound
push
and
fcmovne
mov
pop
out
in
pop
jp
mov
lds
shll
mov
mov
cmpsl
lcall
out
dec
call
dec
stos
fs
std
mov
mov
aad
jl
adc
dec
aad
sub
jno
push
pop
icebp
or
xchg
sub
outsb
leave
adc
jnp
xchg
and
popl
lock
xchg
icebp
ja
or
jl
mov
sbb
mov
push
or
mov
sbb
sbb
jns
jne
call
sbb
pop
pop
fmull
stos
mov
inc
xchg
sbb
inc
lcall
int
lret
xor
lahf
sbb
pop
mov
out
mov
xchg
lahf
push
xorb
xchg
push
jl
out
rclb
dec
or
add
mov
sbb
pop
aaa
pop
clc
pcmpgtb
mov
sbb
mov
stos
cli
data16
mov
mov
cmpsb
lret
out
xor
mov
insl
push
jae
fdivl
shlb
ja
jno
fs
jle
clc
aas
and
stc
push
mov
mov
std
cmpsl
push
xor
in
bound
lds
in
popa
sub
and
or
std
push
jge
push
cltd
je
test
cmp
mov
inc
movsl
push
das
push
enter
int
icebp
sub
pop
inc
iret
ss
lea
inc
test
push
cmpsl
xorl
sub
sti
movsl
neg
in
jbe
inc
or
sahf
pop
sub
mov
jae
mov
pop
jl
lret
xchg
mov
scas
js
mov
cmp
arpl
inc
xor
dec
xchg
lahf
and
mov
push
sub
cmpsb
out
mov
push
insl
fisubrl
push
js
adc
pop
rol
push
ficoml
sbb
fidivrl
push
sub
mov
hlt
mov
jbe
out
testb
into
mov
std
test
pop
into
adc
pop
clc
pop
lock
orb
jmp
je
popa
mov
insl
lock
pop
mov
ss
xor
cmp
in
stc
push
aam
dec
aas
add
int
test
bound
fldl
xlat
cmpsl
mov
loope
mov
and
test
cmpsl
inc
mov
cmp
and
mov
pop
or
aam
mov
mov
cmp
popf
mov
add
in
and
push
imul
adc
xor
add
rclb
pop
flds
stos
es
jbe
mov
loopne
mov
mov
ret
ret
pop
pop
fcoms
icebp
pop
ss
mov
shlb
fldl
mov
cmp
cltd
scas
pusha
mov
shll
jne
lret
cmp
mov
rorl
pop
xchg
pop
insl
xchg
dec
xchg
shrl
pusha
shl
dec
mov
push
xchg
loop
jb
fcmove
pop
in
and
sti
clc
rolb
lahf
mov
inc
std
es
popf
jp
pop
inc
mov
jmp
or
das
add
mov
mov
sbb
sbb
mov
push
add
enter
std
aam
cmp
data16
and
mov
data16
jnp
ret
cmp
mov
fdivl
mov
lods
xchg
imulb
xlat
cmp
lret
push
mov
push
scas
inc
orl
dec
or
xchg
jae
shl
outsb
iret
scas
mov
cltd
pop
notl
int
xchg
rorl
pusha
pop
xchg
shlb
mov
adc
pushf
fmuls
pusha
push
aaa
sbb
push
sbb
cltd
inc
pop
mov
inc
fwait
das
dec
jl
pop
mov
cwtl
int3
loope
cmp
movb
rorb
cmc
push
data16
fcoml
mov
loopne
pop
int
lods
cmp
push
lahf
adc
xor
shlb
inc
pop
fdivl
inc
lret
int3
rorl
mov
sub
popa
int
cmc
add
imul
xchg
lods
xchg
int3
imul
lds
mov
jb
les
loope
xchg
nop
or
mov
les
xchg
fistpll
sub
and
sbb
in
push
adc
xchg
fistpl
mov
loopne
cmc
mov
push
add
and
xor
cmp
dec
sub
rclb
mov
fwait
lea
jno
data16
sub
adc
push
mov
dec
mov
leave
cmp
fadds
lock
inc
mov
les
daa
andnps
mov
outsl
shrl
mov
pop
xchg
je
mov
adc
push
add
mov
cmpsb
pop
ja
mov
xchg
dec
stos
mov
fbstp
lret
test
or
lahf
outsb
pop
dec
add
shrl
sarb
cltd
push
sahf
and
int
outsb
xchg
dec
add
insb
jns
cld
or
jmp
clc
cli
mov
and
jae
mov
add
sub
clc
jnp
sub
enter
bnd
ret
insb
fimull
mov
sbb
mov
call
cli
pop
mov
popa
nop
js
pusha
popa
xchg
enter
das
jnp
out
int3
sbb
popf
scas
add
xchg
sub
pop
xlat
scas
sub
lret
adc
xchg
inc
push
lods
or
inc
inc
push
jo
in
xlat
xchg
sarb
mov
adc
ja
inc
xchg
adcb
mov
rclb
cld
jge
cs
dec
sbb
pop
pop
fmul
sub
adc
cwtl
or
jmp
xchg
shl
jl
sbb
push
or
adcb
dec
jecxz
push
pop
fs
bound
mov
inc
adc
cmc
sbb
mov
in
movsl
and
jg
sarb
add
and
rcl
ss
test
repnz
out
sahf
push
icebp
repnz
dec
sbb
test
or
sub
sbb
dec
push
cmp
xchg
mov
xchg
das
cld
xchg
mov
jle
mov
add
out
les
inc
fsubrl
enter
jns
in
push
inc
mov
imul
mov
icebp
inc
ret
aaa
loopne
jno
mov
xchg
or
bound
mov
mov
mov
insb
mov
ret
push
lret
in
jno
fidivs
mov
shll
mov
js
push
jnp
push
or
cmp
sub
mov
lock
movsl
or
ja
into
jnp
mov
adc
jle
dec
jl
mov
sub
in
test
lods
sub
sbbl
dec
dec
js
stos
add
lods
mov
pusha
mov
test
pop
sub
in
push
and
cld
arpl
outsb
add
out
jbe
dec
jle
lds
into
je
mov
aaa
jmp
int3
or
mov
mov
loop
dec
fdivrl
mov
mov
push
movsl
mov
ret
cmp
jb
subl
leave
jne
sbb
clc
sub
clc
mov
test
and
xor
iret
iret
jp
fidivrs
inc
sbb
jmp
test
jge
push
xchg
bndldx
fs
subb
jmp
cmp
inc
fs
ret
push
dec
jb
xor
in
mov
outsb
leave
lahf
push
fdivl
pushf
sub
sub
xchg
ds
loop
insb
ror
dec
lahf
cld
movb
pop
cwtl
jecxz
dec
adc
mov
imul
pushl
in
inc
aam
sub
data16
push
xchg
xchg
or
cmc
mov
jns
add
push
shr
fcmovnu
insb
mov
jne
adc
mov
adc
jmp
inc
push
sub
fsubrl
sti
arpl
dec
inc
sbb
mov
inc
ja
xchg
out
mov
adc
pop
xor
shll
or
sbb
inc
pop
cmp
push
ret
or
pop
cltd
jle
jg
icebp
xor
filds
flds
add
inc
sbbb
cmpsl
fnsetpm(287
in
stos
adc
xchg
rorl
faddl
push
xor
xchg
pop
xchg
mov
jb
sti
aaa
dec
imul
loop
sbb
xor
mov
xchg
cli
add
jns
in
adc
xchg
inc
dec
dec
cwtl
mov
mov
inc
shlb
or
jne
sarb
push
mov
pop
daa
adc
sbb
or
rol
jns
and
mov
lret
out
call
in
mov
sbb
add
int3
mov
dec
int3
mov
inc
adc
xchg
repnz
xor
mov
stos
cltd
fs
stos
pop
cltd
sub
imul
pop
cs
or
jae
aad
popf
insl
jns
rep
mov
xor
xchg
popf
int3
cld
mov
daa
jbe
pusha
lods
gs
jb
out
dec
pop
push
fcoms
cmpsl
sbb
vmovdqa
pop
jle
lret
outsl
inc
les
xor
mov
mov
sbb
into
pop
test
mov
ja
xchg
stc
push
outsb
pop
mov
ror
imul
aaa
int3
pop
jp
aad
mov
sbb
pop
js
xlat
scas
lods
out
movsb
mov
xchg
idiv
std
xchg
std
inc
insl
mov
push
addr16
mov
pop
aam
imul
js
push
xchg
sub
mov
shl
dec
sub
xchg
roll
iret
push
nop
divl
add
adc
push
insb
cmp
js
pop
xor
loopne
mov
andl
jbe
fsubrs
pop
flds
movl
fldlg2
add
jge
pop
push
test
mov
mov
pop
mov
fs
je
mov
dec
enter
idiv
ss
push
popf
mov
mov
shll
loopne
gs
icebp
add
xor
mov
jge
scas
outsl
adc
fs
add
xor
cmp
add
in
lods
lds
add
out
aaa
mov
dec
dec
and
daa
sbb
mov
jg
dec
jbe
xchg
dec
aas
outsb
ja
jno
ret
jns
push
adc
xor
add
pop
aaa
cmp
andl
mov
sbb
jae
pop
jmp
sbb
fistpl
lret
aaa
mov
cmp
scas
xchg
inc
mov
cmpsl
imul
lea
or
into
enter
mov
pop
add
push
dec
inc
cs
add
adc
xchg
test
and
mov
shlb
in
xchg
stos
js
outsb
test
xchg
ficomps
notl
in
push
movsl
mov
mov
test
sbb
fsubrl
xor
mov
sbb
nop
push
test
cmp
test
cwtl
hlt
roll
xor
movsb
xor
inc
shlb
shrl
outsl
or
js
call
pushf
adc
call
mov
or
xchg
add
jbe
pushf
test
ret
push
jns
push
arpl
xchg
cltd
fimull
cli
add
mov
mov
fidivrs
jne
dec
and
xchg
cmp
insl
inc
sub
insb
dec
cli
xor
popf
and
mov
lods
adc
dec
repnz
mov
jl
fucomp
push
fmull
pop
ret
xchg
fwait
add
les
test
cwtl
sti
rep
repz
arpl
test
lods
in
ljmp
js
inc
cs
test
xchg
out
aam
js
xchg
dec
mov
or
adc
bound
ret
daa
or
mov
push
push
mul
loopne
pop
push
mov
test
or
scas
enter
add
xchg
xor
fidivl
imul
fimuls
dec
pushf
in
add
movsl
adc
jp
stos
pusha
int
pop
mov
mov
dec
shr
ds
test
inc
inc
fstl
fists
cwtl
mov
or
loopne
cli
leave
hlt
imul
add
adc
insl
mov
push
ljmp
imul
mov
xchg
aad
lret
in
arpl
push
stos
pop
jno
xchg
sbbb
add
jno
repz
call
xchg
sub
add
mov
jno
add
mov
and
mov
popa
jno
cmp
das
and
mov
adc
mov
sbb
lcall
pusha
xor
test
movsl
fdivl
add
lods
je
mov
pop
cmp
add
xchg
sbb
xlat
xchg
sub
dec
into
fnstcw
mov
add
ljmp
jo
jmp
mov
jle
ds
push
loope
jo
dec
add
data16
int
dec
sbb
lcall
jecxz
or
xchg
lahf
imul
xchg
mov
xchg
shll
pop
scas
paddw
push
mov
mov
hlt
mov
mov
xchg
fidivrs
jecxz
mov
add
and
pop
fsubrl
xchg
in
in
loope
mov
aad
into
out
icebp
xchg
sahf
out
pusha
test
mov
loop
cld
adc
jl
push
scas
add
fistps
movsb
fwait
loope
sub
cmp
arpl
test
xchg
fisubs
sub
mov
jae
or
or
push
lcall
add
or
mov
xorw
jp
mov
in
into
lret
push
aam
inc
int3
xor
rorl
lods
out
leave
cli
jae
scas
jno
mov
jb
mov
daa
lock
or
xor
nop
adc
xor
test
frstor
ljmp
rolb
cltd
dec
or
push
mov
xchg
adc
fwait
or
xchg
add
add
aam
movsl
jbe
pushf
mov
mull
or
mov
dec
pop
pop
imul
xor
push
loopne
movb
or
ljmp
xor
std
in
pop
mov
in
and
xchg
aam
xlat
jne
ljmp
popf
push
cmp
push
outsl
test
movsb
jb
mov
inc
xor
mov
fsts
mov
mov
cmp
mov
imul
or
pop
inc
jecxz
mov
int3
fstl
ficomps
add
movsb
sbb
adc
sub
lret
xlat
or
scas
add
dec
xchg
les
pop
sbb
dec
nop
jle
sub
push
jl
xchg
xor
sbb
jnp
adc
adc
cli
fldt
je
xchg
les
stos
xlat
sarb
mov
and
dec
outsb
inc
lods
enter
fs
cs
jns
or
negb
add
ds
push
xor
ja
in
mov
jl
add
pop
cld
rclb
xchg
fsubrp
inc
icebp
sti
sub
into
adc
stos
xor
sbb
jne
enter
fdivs
and
mov
dec
outsl
lock
jmp
imul
push
sti
das
sbb
add
jge
dec
loopne
scas
mov
push
sub
or
loope
addl
ds
adc
mov
pop
jmp
mov
dec
movsl
mov
mov
jmp
pop
movsb
movsl
mov
cmp
mov
sbb
nop
dec
dec
outsb
lods
stos
or
mov
cs
pushf
sahf
dec
hlt
mov
std
and
add
test
pop
int3
add
or
clc
ljmp
xor
ret
test
fsub
cmp
xor
mov
pop
movsl
xchg
std
test
data16
out
nop
mov
pop
jge
xchg
mov
and
mov
sahf
iret
js
and
mov
mov
mov
test
fst
inc
in
jae
cmpsl
pusha
adc
lods
push
movsb
mov
shll
mov
iret
movsl
jnp
and
pop
or
adc
popf
cmp
rcrl
popf
xchg
cmpsl
sub
mov
ror
add
xor
test
leave
std
js
mov
xchg
fiaddl
nop
lret
repnz
insl
cmpsl
mov
int3
sbb
jbe
sub
mov
lahf
popl
in
rcl
sbb
mov
adc
scas
or
rorl
lcall
xchg
inc
push
mov
sub
xor
or
or
std
cli
out
add
fidivs
test
inc
in
es
pop
cmc
sbb
jecxz
inc
enter
ljmp
dec
mov
popa
int3
and
push
mov
cltd
fcompl
xor
rcr
xchg
cmp
mov
push
mov
sub
shlb
subb
adc
ret
fs
sub
pop
mov
pop
dec
adc
cltd
push
mov
pop
js
push
cmp
mov
mov
cwtl
test
mov
xchg
sub
lahf
add
jo
cltd
sti
xor
fcomps
adc
call
cmpsl
repz
jns
popa
pop
dec
add
push
and
repnz
xchg
arpl
call
adc
out
mov
in
or
lret
shll
add
mov
jmp
pop
fs
subl
fcoms
adc
dec
mov
inc
xchg
xchg
add
test
adc
push
call
xchg
das
addr16
or
jmp
clc
and
push
mov
xor
or
loope
jecxz
mov
xor
push
data16
mov
and
inc
out
jmp
test
daa
popa
sahf
ret
cmp
pop
das
sub
jne
int
or
idivb
mov
std
aas
outsb
jb
inc
in
mov
leave
insb
pop
outsl
adc
or
inc
les
dec
cwtl
cmp
stc
and
cmp
push
leave
movsl
push
xor
jl
loope
xchg
cmp
xchg
adcb
dec
popa
add
popa
xorb
dec
sub
sti
shll
jae
sub
int3
inc
xor
aad
hlt
jp
rcrb
jnp
pop
mov
mov
ds
scas
rclb
aad
add
gs
dec
mov
lock
push
bound
in
mov
and
lcall
and
outsb
shlb
mov
loopne
adc
movsb
fbstp
lahf
fwait
push
cwtl
das
std
mov
jp
jns
aad
adc
pop
sarl
sbb
push
in
xor
ror
das
xchg
push
in
pushf
mov
sarl
cmpsb
dec
push
cmc
xchg
fcomip
lea
aad
les
shl
stos
jl
icebp
cmp
sti
test
dec
mov
xchg
inc
xor
loop
cwtl
mov
cmpl
test
pop
dec
sbb
addr16
data16
inc
pushf
aam
cmp
cmpb
cmp
xor
cs
jnp
adcl
icebp
enter
ficoms
xor
in
fists
mov
enter
sbb
stc
mov
out
jne
push
mov
icebp
rol
insl
jmp
pusha
loope
insl
and
scas
adcb
mov
das
int
aam
push
sub
and
sub
jnp
movsl
mov
cli
mov
xchg
popf
fistpll
loop
push
mov
mov
or
rcrb
xchg
movb
mov
sti
cmpsl
into
pop
shl
sub
jo
xchg
mov
cmp
dec
mov
pop
xchg
aam
adc
mov
pop
aam
sbb
in
and
js
and
iret
mov
inc
scas
xlat
ds
adc
js
outsl
xor
pop
lods
mov
and
inc
lea
shl
ficompl
mov
mov
lahf
xchg
repz
xchg
je
mov
lret
das
loopne
cld
leave
jae
push
xor
and
push
mov
adc
shr
mov
and
xor
sbb
loope
sub
repnz
push
fwait
or
jae
mov
ret
nop
xchg
xchg
jle
mov
or
out
rcr
ret
lahf
jae
mov
jnp
das
and
mul
jb
push
jae
dec
inc
mov
mov
sub
call
dec
fimuls
cmc
sbb
mov
mov
mov
and
divl
add
push
pop
nop
popa
push
xchg
inc
inc
fwait
rorl
inc
es
pop
adc
sbb
dec
imul
js
jmp
int
sahf
mov
enter
pushf
xchg
jbe
adc
mov
ja
or
sbb
lock
movsl
add
movsb
dec
stc
hlt
mov
int3
mov
jge
inc
ss
xor
add
icebp
xchg
inc
lock
lret
cltd
lahf
cwtl
sub
sub
push
pop
in
cmp
test
shrb
add
shlb
addb
push
and
lods
cmp
add
clc
mov
cmc
dec
fs
mov
inc
inc
jl
add
ss
pop
divb
js
adc
popa
cs
rcrb
dec
dec
mov
xchg
xor
jb
jb
mov
stos
xchg
mov
pop
mov
xorb
stos
adc
inc
jns
or
movsl
clc
sti
fcompl
xchg
add
push
pop
sub
sub
hlt
lret
pop
std
adc
or
pop
mov
cmc
and
inc
push
mov
scas
add
push
dec
jbe
sbb
data16
movl
pop
ja
push
dec
faddp
in
rcrl
ret
mov
ret
clc
inc
fwait
shll
xorl
rcl
or
repz
adc
xchg
popa
and
testl
push
addr16
xchg
aam
in
in
mov
leave
mov
xor
xor
int3
cmpsl
shll
hlt
pop
sbb
and
lea
mov
push
pop
sub
sbb
popa
in
xor
imul
push
mov
mov
mov
rorb
sbb
pop
adc
rcll
fcoml
cli
adc
add
les
jle
xchg
adc
insl
out
icebp
inc
pop
mov
lret
and
test
popa
ret
mov
mov
icebp
and
mov
xchg
xchg
xchg
add
cltd
std
jnp
cmp
push
mov
lods
js
lock
jmp
xor
xchg
js
add
imul
insl
xor
inc
ljmp
inc
inc
pop
sti
fisttps
jnp
push
insl
push
adc
sub
call
fwait
xchg
xchg
pop
add
dec
loop
inc
je
sbb
jge
sub
ret
aaa
xchg
sti
jp
xchg
insl
mov
jnp
add
repz
push
mov
cmp
lret
jge
push
xor
fisubl
xchg
push
mov
and
int3
pop
shll
jmp
mov
jle
fs
jp
inc
sbb
in
cltd
es
inc
insl
adc
jmp
adc
pop
mov
add
push
aad
dec
adc
int
add
mov
cmp
sub
pop
mov
sbb
dec
cmp
insb
xchg
xorl
sti
mov
cmp
inc
inc
mov
pushfw
in
or
xor
cmp
sarb
icebp
data16
xchg
xor
roll
mov
pop
mov
movsl
sub
cmp
or
adc
nop
sbbb
hlt
mov
mov
rcrb
in
das
aas
popa
addr16
vmread
add
lods
mov
lods
push
and
xor
mov
sbb
mov
inc
fldl
add
shl
cmp
mov
into
sbb
add
push
bound
int3
sarl
shl
lds
mov
in
sub
leave
cmp
cmp
mov
jmp
or
insl
daa
jns
dec
test
pop
out
jne
xor
jnp
mov
fcomi
mov
dec
lods
dec
orl
fildll
xor
mov
ja
outsb
pop
and
jns
xchg
scas
imul
subb
mov
cs
cltd
mov
xchg
dec
and
add
cmp
scas
mov
int
mov
les
test
pop
pop
into
push
aas
cmp
mov
or
les
xlat
enter
insb
into
lret
movsb
or
mov
or
pusha
loopne
out
xchg
pop
lods
cwtl
shlb
arpl
sbb
push
inc
mov
mov
xor
stos
int3
adc
out
sub
repz
arpl
jb
or
sahf
jo
pusha
cmp
add
scas
inc
data16
xchg
addr16
popa
adc
sahf
xchg
cmp
fsts
mov
cmp
aaa
push
test
sbb
es
mov
xchg
lods
adc
js
movsl
pop
mov
loope
xor
shr
pop
pop
cld
loopne
call
mov
pop
lods
push
clc
xchg
inc
mov
push
arpl
dec
pop
loope
or
fmull
repz
iret
add
leave
dec
loope
inc
ret
jne
dec
nop
sbb
sbb
mov
lds
imulb
mul
push
test
mov
pop
aam
arpl
adc
pop
jg
sub
pop
rclb
inc
xor
cmp
push
stc
movsb
rcrl
xchg
testl
pop
jl
mov
cmp
sub
cmpsl
sub
jmp
mov
test
xchg
dec
outsl
mov
sub
add
mov
insl
out
and
xchg
daa
bound
mov
movsl
push
cmp
adcl
sti
loope
pop
mov
pop
pop
imul
xchg
outsb
inc
pop
imulb
xor
fldcw
enter
in
pop
mov
aad
add
js
test
and
and
add
xor
pushf
fsubrs
lock
adc
sub
inc
test
bound
jle
std
fisubrs
mov
loopne
sbb
mov
mov
movsb
pop
mov
aad
dec
mov
push
sbb
add
xlat
rcll
outsl
dec
mov
add
sub
mov
cld
stc
xchg
lods
mov
mov
mov
test
fxch
cmpl
push
xlat
shrl
adc
shr
and
pop
xor
les
mov
add
push
ret
push
loope
out
aas
out
mov
cmp
xor
les
pop
and
out
sbb
repz
scas
je
rcrb
in
mov
mov
sbb
enter
insl
dec
sub
and
xor
pop
pop
lret
orl
pop
movsb
jno
daa
and
movsb
push
mov
adc
andl
push
in
ret
xchg
pop
ret
mov
cmp
mov
cmp
stos
adc
adc
cmp
mov
mov
dec
fistpll
cs
dec
sub
inc
loop
mov
add
add
andb
daa
push
es
das
or
js
or
mov
dec
xchg
mov
ljmp
jb
mov
jnp
inc
loopne
call
cmpsb
pop
cmp
loopne
mov
cli
int
jl
aaa
jp
lret
mov
cmp
mov
pop
imul
cmp
das
inc
mov
push
inc
jmp
cmpsb
mov
cmp
sbb
mov
shll
arpl
test
outsb
push
inc
sbb
ss
iret
lcall
sub
sahf
jnp
sbb
dec
rol
and
cmp
push
test
and
xchg
add
jge
sbb
cli
cmp
and
xchg
ja
jnp
dec
pop
push
pop
add
pop
nop
or
pop
pop
loope
push
add
es
call
jmp
push
xor
xor
push
ret
pop
aaa
push
mov
aam
es
mov
xchg
mov
fsubrl
xor
cmp
mov
adc
mov
icebp
ja
bound
repz
mov
jp
rolb
popf
es
cmpsb
popa
or
cs
in
arpl
push
mov
pop
scas
inc
aas
add
mov
adc
or
sub
jge
mov
pushf
test
push
xchg
cmp
testl
or
es
ret
pop
xchg
cmp
fwait
mov
sbb
cmpsl
in
mov
in
rcrl
jno
jcxz
sahf
loope
adc
push
jle
test
out
test
in
xchg
inc
cmp
or
add
shl
jle
lret
cmp
push
adc
dec
cmc
subb
pop
mov
stos
lods
ja
push
fdiv
sahf
mov
dec
lods
mov
pop
xchg
ja
cmp
ljmp
push
inc
xchg
mov
rorb
fsin
ljmp
mov
xchg
fsts
hlt
mov
xor
jp
and
mov
shll
mov
lods
es
push
push
hlt
out
dec
test
jmp
shll
sub
mov
or
and
out
mov
call
cmpb
jbe
sub
shl
aas
add
dec
sub
adc
adc
mov
call
int
push
cmp
fs
pusha
repnz
push
mov
adc
cmp
and
mov
mov
xor
mov
aad
xchg
mov
mov
cmpsl
mov
ret
push
mov
and
adc
push
outsb
push
fcos
lea
ret
push
xor
inc
pop
dec
jns
push
lods
add
dec
cmp
movl
std
aad
enter
xchg
lret
sbb
lret
lods
arpl
jge
lret
pop
fs
shll
fstpl
adc
dec
scas
mov
mov
xlat
push
push
fwait
shll
ljmp
push
push
jecxz
inc
inc
les
or
aas
lcall
sub
add
push
out
xchg
jmp
mov
push
adc
jecxz
in
or
lret
mov
mov
arpl
adc
fsubl
imul
pop
stos
sahf
andl
movsb
pop
add
and
and
lods
ss
sub
out
test
dec
or
bound
mov
pop
sarb
out
pop
rcrl
pop
hlt
mov
test
inc
xchg
js
pop
jl
shll
mov
jmp
lahf
fsubs
xchg
idivl
sbb
mov
jne
jno
xchg
mov
push
sub
es
mov
or
push
sbb
mov
xchg
sub
xor
inc
or
in
enter
aad
fldl
xchg
pop
pusha
out
pop
es
out
dec
into
ror
xchg
aaa
xchg
enter
or
subl
xor
jmp
mov
push
imul
pop
repz
mov
outsb
add
sub
gs
jg
fisubl
add
pop
fdivrs
inc
or
outsl
loope
mov
adc
fildll
dec
mov
xchg
int
lcall
pushf
pushf
mov
loopne
stos
jne
pop
lcall
dec
std
mov
xchg
sub
adc
sarb
shrl
pop
in
popa
icebp
mov
xor
pop
test
movhlps
in
xor
icebp
imul
mov
adc
lock
lds
outsb
xor
loopne
inc
bound
dec
pop
js
cmp
sbb
dec
jae
add
std
inc
fnstcw
clc
pop
cmp
aaa
push
mov
mov
mov
jno
movsl
lcall
add
and
inc
jg
testb
or
cmpsb
jo
mov
loop
xor
mov
pop
adc
stc
mov
fiaddl
arpl
mov
stos
les
and
in
inc
sbb
mov
cmc
mov
adc
jg
push
inc
and
in
lods
inc
sahf
test
das
test
test
pop
repz
and
loop
jae
mov
sti
xchg
mov
fwait
xlat
js
les
adc
imul
and
in
imul
sub
stos
enter
xor
inc
push
fucom
or
sti
xor
mov
mov
mov
jge
cmp
into
flds
xchg
sbb
pop
es
mov
sbb
sub
scas
mov
sub
pop
and
jne
cmc
or
lahf
fs
popf
ja
push
test
stc
cmp
sub
int
cli
add
dec
xorb
mov
sub
popa
xor
jmp
js
mov
push
cld
mov
jno
orl
ret
mov
dec
cmp
or
mov
outsb
cmp
ds
ss
add
jbe
sbb
dec
insb
daa
jp
fisubs
inc
sbb
xchg
jbe
gs
clc
xchg
loopne
xchg
mov
pushf
clc
jns
mov
fnstenv
bound
mov
fnstcw
stc
test
mov
dec
or
xor
xor
or
leave
lea
add
and
sub
dec
inc
mov
shrl
arpl
xchg
aaa
data16
outsl
pop
mul
sbbl
outsb
in
jo
jp
ror
mov
pop
pop
adc
xor
mov
add
jno
cmp
dec
sub
or
not
adc
jmp
add
subl
out
inc
add
aas
mov
inc
fidivrs
and
push
dec
push
cmp
jae
shlb
fcompl
ja
add
jno
mov
xchg
cltd
jb
aaa
loopne
daa
stos
fstps
rorl
or
loope
sbb
aad
dec
imul
inc
mov
sahf
orb
sahf
je
inc
pop
idivb
dec
in
ret
xchg
lcall
dec
fcomip
pop
xchg
stos
fldt
popa
in
lock
mov
cld
outsb
filds
jecxz
loop
int
ret
loope
imul
inc
mov
lea
outsl
push
hlt
lods
pop
lret
lea
loop
pop
test
loopne
lods
xchg
mov
popf
mov
sub
pop
scas
pop
outsl
adc
movsl
or
mov
insb
cltd
xchg
cmp
pop
jnp
mov
xor
push
xchg
and
dec
jo
flds
test
mov
out
ret
ret
addr16
outsl
jmp
sbb
insb
mov
xchg
push
outsb
or
xor
cmpsb
iret
adc
mov
pop
jne
pop
hlt
jne
insb
gs
dec
inc
mov
pop
test
mov
mov
jne
das
call
xchg
adc
ret
outsb
dec
ret
adc
add
out
sub
in
mov
frstor
test
jne
sub
push
inc
cwtl
daa
inc
hlt
pop
dec
lds
jecxz
dec
mov
movsb
push
pop
lcall
dec
jmp
outsl
sub
jo
std
gs
lea
into
push
cmp
xor
fs
or
jecxz
adc
leave
mov
dec
xchg
xor
ret
ds
mov
xor
divl
mov
push
sub
cmpsb
push
test
ljmp
cli
xchg
test
mov
push
stos
idiv
mov
cwtl
out
iret
and
mov
push
rorl
das
push
iret
jne
adc
test
imul
jmp
movsb
push
jp
adc
jbe
or
jg
scas
bound
nop
scas
ds
mov
stc
imul
lock
mov
in
push
xchg
mov
cltd
mov
jmp
and
mov
xchg
stc
jo
mov
jnp
pop
push
mov
ds
cmpsb
or
pusha
pop
hlt
in
or
movsb
inc
outsb
lret
ret
push
wbinvd
inc
inc
sahf
rclb
mov
jg
and
gs
data16
jbe
mov
cmp
dec
aam
pop
adcb
icebp
enter
add
xchg
push
or
shrb
cmp
mulb
xorb
add
nop
mov
push
xor
mov
sbb
mov
mov
aaa
test
ss
daa
cmpsl
inc
xor
shll
mov
and
pop
repz
test
mov
xchg
out
loopne
pusha
xchg
dec
in
lods
sub
adc
pushf
out
inc
pop
imul
pop
aaa
push
adc
xchg
jns
mov
pop
pop
lds
jp,pt
or
pop
call
xchg
jnp
xlat
cltd
mov
lock
stos
xchg
xchg
xchg
outsb
sahf
fisttpll
lds
les
add
push
push
sahf
mov
mov
pop
or
addb
mov
push
sbbb
clc
add
mov
insb
xchg
inc
xchg
dec
movsbl
fidivrl
addr16
pop
int
cmp
xor
ret
xor
movb
out
ret
lea
pop
jmp
aad
into
dec
adc
adc
push
lea
js
sub
push
fildll
push
sbb
cmovge
les
add
mov
mul
pop
ret
xchg
inc
ffreep
cmpl
cmp
test
jns
outsl
dec
int3
xor
aam
or
shrb
movsl
cltd
sbb
jp
or
push
cmpb
push
jmp
pop
pop
fsubrs
lret
push
mov
pop
pop
roll
xor
add
xorl
faddl
sub
mov
imul
sub
xchg
jg
ret
lret
xchg
hlt
pop
int
lahf
in
imul
xor
divl
mov
mov
push
mov
bound
lock
jbe
lret
out
inc
sbb
popa
add
xor
add
les
ja
xchg
in
dec
ret
dec
rcl
int
bound
and
clc
nop
jmp
or
push
adc
jmp
je
hlt
sti
pop
data16
or
cs
rol
pop
xchg
mov
mov
cmc
pop
aam
pushf
sti
dec
clc
lret
adc
mov
dec
xchg
stos
mov
xchg
jg
imul
ds
add
inc
add
aam
mov
inc
addr16
jg
jnp
scas
imul
dec
cs
dec
xchg
or
cltd
loope
mov
mov
sti
jg
dec
mov
insb
dec
fmull
cli
pop
add
divl
dec
test
mov
les
or
dec
aad
inc
and
icebp
lret
cmp
icebp
repz
rorb
addr16
sub
jo
fidivrl
pop
imul
jge
mov
mov
stos
hlt
cmpsl
mov
iret
xor
test
push
add
lcall
pop
testb
cmp
fstps
subb
nop
adc
xor
adc
cltd
test
push
xchg
inc
pusha
iret
cmc
mov
data16
cmp
fwait
shr
movsl
mov
cwtl
and
lock
fbstp
pop
xchg
gs
orb
adc
aas
cmp
testb
jo
push
pop
xor
ja
pop
fbld
fisubrs
hlt
jo
adc
lds
pop
push
pop
leave
xchg
xor
sub
cmp
xor
inc
mov
mov
hlt
push
dec
or
shll
mov
nop
or
sub
sub
daa
shr
dec
adcl
sbb
sbb
cmpsb
test
test
enter
dec
push
push
cmp
mov
in
dec
call
jae
jmp
jno
mov
adc
std
fcmovnbe
icebp
cmpsl
je
fadd
in
mov
sub
jno
pop
int3
js
xchg
leave
jg
sbb
jmp
inc
xchg
dec
jo
fsubrl
cmc
push
incl
ss
and
pushf
jecxz
and
dec
and
inc
pop
mov
or
stc
lds
pop
loop
aam
adc
ret
inc
add
daa
pop
pop
mov
aad
or
mov
xor
lret
stos
dec
lret
push
test
insb
nop
rcl
inc
pop
loope
xor
cmp
push
negl
or
repnz
sub
std
sbb
in
fdivrl
jno
std
xchg
jns
jb
mov
cld
xor
repz
sbb
cmpsl
addr16
loopne
sahf
push
lods
into
sub
pop
fwait
adc
fs
fistpl
rol
lods
stc
xlat
push
sub
das
cli
ja
xchg
mov
pop
pcmpeqd
arpl
dec
add
xchg
jns
bnd
pop
mov
aad
repnz
cli
in
scas
popf
cmp
movsb
jno
stos
mov
clc
shl
or
outsb
subl
xchg
dec
dec
inc
mov
aaa
push
xchg
push
mov
pop
imul
fsubr
rol
xchg
std
push
and
add
add
dec
sahf
out
xchg
jg
sub
push
mov
mov
mov
sub
sbb
movsl
lret
pop
jmp
ret
jne
stc
mov
out
iret
pusha
sbb
pop
cltd
nop
xlat
lcall
add
gs
pop
push
sbb
or
mov
mov
pop
or
pop
pop
pop
outsl
test
inc
stos
pop
and
mov
dec
cli
dec
xchg
mov
fdivs
sahf
out
cmp
or
xchg
sub
shrb
and
rcrl
outsb
repz
leave
lea
movsb
arpl
outsb
fwait
push
lcall
or
loopne
cmp
add
aam
or
jns
enter
pusha
int3
xor
xor
out
push
rcrb
loopne
decl
and
das
shrl
in
jns
lea
repnz
scas
mov
inc
jb
xchg
stc
mov
inc
push
jl
inc
xor
lret
in
cwtl
out
fistps
sbb
data16
mov
sub
into
jle
sbb
dec
out
les
les
int
push
fldt
les
push
mov
and
test
sbb
imul
les
mov
js
pop
push
mov
push
call
xchg
xor
dec
dec
filds
jmp
sub
out
adc
adc
mov
add
stc
mov
cmp
mov
cmp
and
mov
cli
loop
add
in
hlt
cmp
and
rcrl
int
mov
aas
iret
adcl
push
mov
icebp
cmc
sbb
shl
cmp
adc
pop
mov
jns
mov
mov
sub
xchg
pop
jne
xor
pushf
out
cmpsb
rcrl
jecxz
loope
aam
gs
clc
add
xchg
cmc
test
nop
push
dec
sub
and
xchg
iret
fwait
cs
jae
mov
inc
mov
shlb
push
imul
cmp
sahf
popa
stc
mov
sbb
xor
sub
lods
sbb
into
in
mov
insl
dec
incb
fiadds
push
dec
mov
mov
adc
stos
sti
push
fbld
push
int3
sbb
jnp
xchg
sbb
shl
adc
test
arpl
sbb
daa
fwait
dec
pusha
sahf
mov
rcrb
jae
pop
lock
jbe
aaa
mov
scas
into
call
mov
push
fsubs
aas
xchg
jb
ret
in
jno
das
adc
mov
jo
les
ds
mov
cmp
push
fdivrl
enter
test
xor
or
lahf
mov
enter
xorps
fs
pop
inc
stc
jg
xchg
sbb
loopne
notb
lods
scas
movsl
sbbl
inc
lea
rcl
ss
and
mov
add
das
jl
in
int3
movsl
adc
fsubs
movsb
push
jno
ljmp
arpl
cli
gs
lcall
jo
mov
jl
ds
adc
leave
xorl
lds
loop
lods
sbb
pop
push
cli
or
inc
xchg
sbb
orl
test
loopne
imul
hlt
lods
repnz
cmp
addr16
aad
pop
or
daa
clc
jg
fldenv
stc
fwait
lahf
mov
sbb
jge
and
pop
xchg
stos
or
loope
in
mov
lock
out
lahf
sbb
lea
outsl
outsb
lock
test
lea
jo
flds
insb
out
dec
cmp
outsl
mul
push
xor
dec
jmp
pop
pop
mov
mov
stos
mov
jb
fs
adc
rcr
cltd
pop
xchg
mov
jp
pop
mov
pop
push
notl
inc
push
mov
add
jge
xor
gs
add
pop
or
adc
jmp
pop
cmp
xor
pop
mov
pop
inc
and
push
hlt
sbbl
fidivrs
fs
insb
mov
icebp
push
test
sub
mov
lods
xor
cwtl
xchg
mov
jns
test
pop
icebp
mov
fwait
sbb
imul
jae
xor
rcll
cmp
aaa
xchg
xor
push
jle
pop
push
and
std
pop
cltd
mov
cmp
fsubl
insb
pushf
stos
movlps
addr16
into
mov
mov
or
std
stos
xchg
pop
dec
cmp
mov
mov
jge
std
das
mull
rcrl
cmpl
mov
mov
stc
pop
stos
mov
and
jbe
insb
push
in
dec
xor
nop
pop
popf
cmp
pop
sub
insb
test
adc
popl
jp
cmp
dec
int
dec
ret
clc
cmp
mov
incb
cmc
or
repz
jge
and
jbe
or
and
outsl
jae
jle
or
cmc
dec
inc
xchg
mov
mov
mov
repnz
pop
out
test
jnp
adc
cmp
int
or
xchg
pop
outsl
mov
or
mov
test
mov
mov
out
mov
fnstenv
pop
mov
out
fcmovbe
ret
movsl
shrl
add
jb
and
mov
loopne
xor
fsubrs
or
cmpl
jmp
sub
or
sbb
sub
jmp
je
adc
aam
dec
int
cmc
test
xchg
xor
adc
inc
fsubrs
stos
ret
std
lret
pop
mov
mov
outsl
in
adc
xchg
mov
into
and
inc
sub
jne
or
in
xchg
mov
movsb
sbb
test
push
popf
ror
shl
aaa
mov
shl
jp
adc
fcmovu
aam
jns
mov
add
jnp
std
fiadds
aad
in
and
sub
insb
in
push
insl
mov
lock
test
mov
orb
lods
test
push
and
sbb
stos
dec
imulb
sbb
sub
fcmove
inc
xchg
pop
push
adc
in
mov
cmc
ret
dec
cmp
loopne
mov
adc
imul
mov
rclb
pop
pop
cmc
mov
test
testl
xor
adc
push
mov
adc
aaa
lcall
pop
dec
repnz
aas
mov
cwtl
dec
lret
xor
pop
cli
cmp
mov
aad
xor
inc
jmp
mov
inc
pop
and
xor
jg
ret
enter
call
push
repz
ret
xchg
ror
fimuls
mov
adc
and
xchg
jg
stos
jno
mov
pop
mov
push
fidivl
dec
pop
fstps
xchg
pushf
andb
push
pop
xchg
fsubrs
dec
push
inc
sbb
adc
inc
add
scas
sub
pop
movsb
sti
movsb
mov
xor
cmp
jb
sub
mov
in
pushf
jle
aam
mov
outsb
mov
xchg
mov
out
subb
out
jecxz
sti
jo
push
ljmp
dec
pop
jle
clc
jl
cmp
and
cmp
shlb
jmp
or
ficoms
xor
aas
jns
cmc
xorl
sbb
pop
add
lret
sbb
mov
scas
xor
push
rcll
rcr
int
cltd
jo
dec
cmpsl
mov
gs
or
je
popa
ret
inc
stos
int
xchg
shrl
cli
pop
jno
gs
dec
xor
ffree
pop
dec
mov
sub
jb
xor
lahf
lods
jno
or
shll
lods
outsb
add
inc
inc
and
sbb
orb
lock
xchg
fiaddl
lods
jae
push
xor
sbb
mov
std
scas
jbe
cmpsl
sbb
out
shrl
jbe
data16
nop
fwait
loop
lock
imul
mov
pop
ror
mov
or
dec
aam
fnsave
xchg
mov
aas
push
xchg
int
inc
sti
std
dec
or
fisubrl
mov
mov
aam
jbe
or
cli
pop
add
bsr
mov
pushf
dec
femms
stc
subb
jmp
popa
push
fadds
jbe
outsb
lods
lea
inc
scas
sarb
nop
xchg
cli
imul
or
shufps
stc
in
push
ja
xchg
sbb
hlt
or
jl
mov
mov
testl
mov
movsb
das
rcll
mov
shll
mov
push
pusha
adc
js
fisubl
xlat
stos
jmp
mov
dec
popa
aas
and
out
mov
pop
adc
jno
adc
lock
mov
jbe
leave
ss
mov
loope
mov
sti
jne
sti
mov
dec
mov
xorb
mov
dec
cmp
mov
jge
aad
les
dec
repz
sti
jnp
enter
xor
lahf
xchg
inc
pop
mov
add
and
mov
sbb
shrb
imul
mov
jge
and
push
cmp
cmpsl
testb
arpl
jns
mov
nop
js
outsb
repnz
loopne
ja
mov
cwtl
loopne
jb
mov
je
cmp
inc
int3
pop
xchg
cmp
fwait
out
shlb
mov
mov
mov
ss
inc
adc
js
adcb
and
lahf
push
repz
inc
mov
mov
rorl
adc
shrb
add
fmull
rol
pushf
adc
xchg
lods
lods
aad
sub
mov
lret
sarl
mov
stc
lret
mov
inc
xor
push
scas
fs
icebp
pop
lock
rcll
lods
add
imul
enter
loopne
loop
add
loop
addb
addb
aad
js
mov
sbb
jb
dec
test
inc
jbe
aad
call
sub
pop
call
sub
sub
popa
loope
xor
inc
xchg
jb
ss
xchg
in
subl
mov
xchg
sbb
adc
mov
push
mov
lahf
adc
fwait
push
rcrl
lret
dec
mov
gs
push
sbbl
cs
xor
dec
imul
push
cmp
cld
imul
sub
out
push
mov
ret
int3
push
scas
gs
pusha
cmp
xor
xor
ds
dec
cmp
mov
cmp
fldt
filds
sbb
test
or
dec
mov
cltd
pop
loop
mov
jecxz
cld
lock
bound
sub
stos
les
jbe
mov
jns
loop
xor
ljmp
xchg
sub
out
ret
cmp
inc
std
inc
jl
pop
cmpsb
scas
pop
and
push
ret
lods
push
adc
inc
push
ret
lea
repnz
lret
inc
aas
shr
mov
stc
or
push
jae
je
call
test
test
test
jg
clc
clc
dec
hlt
out
xchg
mov
cld
lds
add
inc
out
arpl
fdivs
push
popa
test
iret
sarl
dec
insl
mov
stos
loopne
pushf
xchg
pop
sarb
loopne
sub
fsts
xor
aaa
mov
ret
sub
push
jo
jb
dec
sub
mov
in
or
mov
jmp
sbb
mov
mov
or
movsb
cli
sub
jnp
enter
into
cmpsl
adc
jp
ret
adc
xchg
push
and
pop
mov
add
ds
xchg
and
mov
jns
testl
es
daa
cli
mov
mov
jle
mov
out
ja
xlat
pop
jg
xchg
pushf
ss
mov
shr
mov
mov
sbb
mov
push
sub
mov
sbb
mov
jecxz
mov
push
fldcw
scas
int
ret
in
xchg
add
test
add
cmpsl
pop
fcompl
pusha
mov
test
jg
push
pusha
fistpl
loope
dec
mov
adc
inc
adcl
ficoml
mov
inc
movsb
mov
nop
scas
add
mov
into
sbb
adc
xchg
sbb
cmp
sahf
pusha
cmpsb
cmp
outsb
add
andl
jmp
push
repnz
lea
mov
insb
idivl
test
add
xchg
push
inc
arpl
push
fbstp
push
xor
xchg
rolb
lods
jb
stc
push
xchg
les
and
loop
sbb
add
imul
adc
pop
mov
and
mov
xchg
mov
mov
in
dec
push
xchg
push
fcoml
xor
push
clc
cmp
jb
lcall
push
fstpt
xchg
mov
push
cmp
hlt
pop
jge
pushf
sbb
cmc
push
sub
inc
add
fwait
enter
rcr
leave
sbb
and
xorps
xor
xor
cltd
dec
fnstcw
sub
imul
pushf
xchg
xchg
sub
ror
shlb
sub
push
fdivr
shrb
jmp
decb
subb
jmp
adc
sbb
xor
and
jecxz
sti
add
loope
jg
imul
mov
or
adc
cmp
notl
mov
or
ret
dec
jp
iret
bound
int
and
scas
push
dec
pushf
mov
xchg
mov
std
adc
lods
cmp
repnz
sub
mov
xor
lods
adc
jle
repz
mov
xor
jg
popa
cmp
xor
outsl
mov
call
inc
mov
test
cmp
test
jmp
mov
sub
pop
lock
faddl
in
mov
shrl
movsl
sbb
mov
and
call
and
pushf
scas
inc
jl
mov
test
sbbb
mov
push
sub
jmp
pop
scas
cltd
ljmp
pop
sbb
pop
xor
pushf
ja
fwait
aaa
mov
push
addl
mov
push
into
and
dec
outsl
or
mov
sub
es
out
sub
in
xor
add
sarl
icebp
inc
jno
dec
xchg
iret
dec
jb
ds
shrl
mov
add
je
out
pop
outsl
xlat
push
gs
test
jnp
dec
lea
lcall
lds
cmpsl
push
pop
xlat
rorl
das
mov
dec
cltd
inc
xchg
push
sbb
dec
mov
sbbb
push
push
pop
lcall
stos
mov
sub
jle
adc
jmp
pop
fwait
jp
mov
lock
mov
and
add
mov
ret
int3
cmc
clc
sub
push
cli
in
jecxz
push
add
andb
push
jo
cs
nop
fld
cmp
dec
fidivs
cmc
inc
lret
cwtl
add
jne
mov
mov
imul
and
and
and
mov
or
jno
dec
add
or
testb
mov
push
lds
je
out
lods
dec
jnp
sub
dec
xor
scas
mov
push
addr16
push
mov
add
sub
dec
fcomi
add
inc
mov
xor
scas
aaa
rclb
les
aam
or
ds
popa
mov
add
rcrb
lods
adc
adc
js
mov
mov
test
xchg
dec
std
lds
repz
mov
inc
adc
pop
xor
sbb
pushf
fs
stc
into
xor
rol
sbb
push
mov
daa
push
mov
cmp
mov
mov
jo
rcrb
jno
hlt
aam
or
in
xchg
or
jp
imul
sbb
pop
mov
add
decb
out
mov
clc
xor
add
in
pop
addb
jmp
cmp
in
shlb
push
daa
dec
jbe
cmp
push
fisttpl
in
mov
icebp
testl
jp
divl
lea
mov
mov
hlt
pop
jno
mov
in
push
dec
cwtl
xor
adc
xor
pop
adc
push
iret
mulb
add
test
xor
notl
jl
mov
jg
mov
lcall
js
out
jecxz
jnp
xchg
stos
ret
scas
xlat
or
std
stos
add
add
mov
adc
daa
outsl
icebp
fnstenv
push
add
mov
sti
js
mov
pop
pushf
cmpsl
cwtl
push
push
adc
nop
adc
std
mov
xchg
push
mov
not
testl
pop
sahf
test
jno
jg
push
dec
enter
sub
jl
inc
or
push
cwtl
fs
mov
es
pushf
stc
mov
js
ljmp
aad
and
pushf
and
push
loopne
jns
xchg
jg
mov
dec
in
in
out
loopne
cmpsb
xchg
jo
fcmove
and
outsb
xor
mov
sbb
jmp
out
into
dec
or
inc
lods
cs
test
xor
leave
add
cmp
push
shll
sbb
push
xor
aaa
pop
push
mov
and
and
nop
out
rcl
jge
mov
cltd
fnsave
aaa
lret
mov
cli
out
mov
mov
or
jae
xchg
sbb
outsl
mov
psubsw
xchg
scas
pop
jo
cmc
cli
arpl
or
pusha
push
iret
es
inc
jnp
in
in
and
xchg
inc
js
loop
icebp
xchg
and
push
sbb
mov
push
rcl
xor
insl
jbe
fldcw
je
push
lcall
jnp
in
push
cmpsb
sub
imul
fs
sbb
push
add
mov
inc
adc
inc
lea
cmpsb
pop
movsl
popa
xchg
adc
aam
mov
push
lods
add
outsl
imul
hlt
lods
mov
daa
xorb
xor
out
xor
inc
fimull
sbb
out
dec
dec
inc
jno
add
imul
mov
dec
popf
dec
mov
inc
arpl
mov
lcall
jmp
cmp
dec
mov
lea
in
add
cld
insl
xchg
fistpl
nop
enter
fsubrs
push
xchg
push
iret
imul
inc
xor
daa
lea
fwait
lds
jle
dec
pop
loop
jg
inc
inc
sti
inc
add
inc
xorl
lcall
inc
xchg
mov
mov
xor
jg
mov
pop
push
or
test
ja
fnstsw
xor
xor
mov
mov
pop
in
movsl
cmpsb
jmp
cmp
xlat
outsb
stc
leave
mov
sub
sbb
jns
roll
mov
cmp
dec
cmp
mov
sub
inc
mov
movsl
mov
cwtl
push
movsl
cmp
cmp
add
clc
mov
aas
sub
dec
movb
inc
cs
loopne
adc
sbb
call
hlt
cmp
inc
scas
shll
fiaddl
sub
cmc
ds
cwtl
outsl
dec
cmp
imul
mov
dec
loop
bound
mov
js
test
xchg
inc
adc
xlat
nop
inc
lods
sar
mov
fnstcw
and
clc
dec
xchg
fwait
and
jmp
and
pusha
andb
cs
mov
xor
jmp
sbb
or
or
ret
add
jno
adc
into
xor
lock
jb
sub
push
movsl
shl
jp
jmp
add
dec
push
push
and
add
and
les
or
sar
fsubl
mov
lcall
mov
shlb
jmp
mov
or
bound
mov
int
add
mov
cwtl
xchg
dec
dec
ds
jns
pushf
shlb
sbb
and
add
dec
fcompl
push
push
daa
in
dec
das
lret
or
cmp
jno
pop
iret
fisubl
mov
mov
jnp
cmp
cmpsl
push
out
aas
mov
loop
loopne
push
ljmp
loope
or
cmpsl
jp
mov
dec
mov
into
push
jge
push
aaa
addr16
aas
scas
addr16
push
xchg
and
imul
jp
mov
jae
or
sbb
into
add
clc
cli
int3
inc
and
fnstenv
adc
xor
lea
jl
sbb
jns
in
daa
popf
int3
das
fwait
daa
ja
xor
cmpsl
push
jbe
mov
jns
stos
pop
dec
xchg
push
pop
outsl
and
add
xchg
insb
jae
adc
adc
fmuls
push
inc
aam
dec
and
mov
push
inc
xchg
or
clc
fstpt
je
aas
cltd
mov
jl
inc
js
repz
cmp
out
das
movsl
xchg
mov
push
cli
cmp
push
lods
and
push
out
push
dec
inc
xor
and
fbstp
test
sbb
mov
xchg
pop
mov
push
mov
imul
gs
dec
push
push
and
lods
je
and
adc
pop
data16
js
add
push
inc
scas
data16
repz
test
sahf
push
adc
mov
jmp
push
cmpsb
arpl
adc
into
aam
jae
out
loop
fcompp
shrl
jae
test
cmp
mov
cmp
repnz
sbb
mov
movsb
addr16
adc
pop
mov
cmp
je
js
or
cmp
sub
xchg
push
test
sub
scas
xchg
push
loop
pop
push
insl
dec
or
pop
scas
imul
xor
test
int3
popf
push
jle
repnz
in
mov
ds
rcl
das
leave
jecxz
and
mov
inc
mov
cmp
and
adc
xor
in
lcall
ljmp
mov
add
movsl
aas
mov
pop
outsb
push
adc
dec
pop
int
repz
ret
nop
out
xlat
mov
ss
mov
add
add
push
iret
arpl
std
lods
xor
inc
pop
jg
call
adc
out
jns
jbe
int
mov
and
icebp
dec
out
mov
dec
aam
sti
ss
addr16
add
push
dec
loop
xchg
pop
push
fmull
sbb
bound
inc
inc
jge
outsb
pop
call
arpl
adc
xchg
pop
add
int3
jle
mov
fcomp
and
mov
jge
jl
nop
sbb
xchg
jle
xchg
lcall
push
dec
inc
js
stos
sub
aas
fst
mov
shrb
and
jmp
and
sti
ret
out
stos
clc
ljmp
fs
stos
andl
fwait
ret
pop
ret
loope
push
push
jmp
lret
add
add
ljmp
test
mov
sub
test
pop
mov
cld
rcr
mov
cmp
dec
cmp
lret
xchg
xchg
inc
out
mov
repnz
in
mov
jl
or
inc
or
inc
fwait
push
ljmp
mov
push
push
or
shll
mov
fdivl
gs
aaa
xor
pusha
push
xchg
loope
jb
jne
sub
cmp
mov
pusha
or
ds
bound
inc
movl
sar
mov
sbb
add
mov
xchg
iret
ss
scas
mov
xor
jbe
xlat
inc
lods
push
outsl
pop
or
sbb
mov
xor
add
ja
sub
jns
push
jl
pop
cwtl
pusha
xchg
adc
repnz
sbb
divl
jns
pop
and
lds
push
push
add
push
mov
cmp
movsl
addr16
daa
inc
sub
dec
xchg
sub
or
mov
lret
mov
stc
mov
rclb
test
or
cmp
mov
movsl
xchg
leave
fwait
inc
addb
mov
mov
pop
cmp
out
pop
loope
je
std
mov
sub
into
nop
or
mov
mov
shlb
cld
imul
xor
jae
lock
lock
sar
jmp
xlat
stos
hlt
rorb
stos
jg
cmp
ljmp
in
pusha
inc
arpl
adc
subb
pop
cmpxchg
pop
xor
pop
out
popf
sahf
pop
xchg
adc
pop
mov
lahf
xchg
xor
icebp
or
iret
mov
cmp
jnp
xchg
ret
cmc
dec
aas
negb
ja
lods
sbb
es
adc
xchg
mov
cmp
mov
pop
rcrl
lods
mov
daa
out
popf
xor
cltd
mov
sbb
mov
pop
imul
stos
lahf
pop
mov
jb
ret
xor
mov
jl
dec
pop
clc
test
add
pusha
icebp
lods
push
adc
lret
add
mov
xchg
dec
sbb
and
pop
sarb
gs
cmp
mov
lahf
inc
sub
push
fiadds
xor
into
mov
das
jl
push
mov
pop
outsl
ret
inc
push
sbb
mov
push
sbb
les
addr16
mov
popa
dec
cltd
hlt
mov
mov
mov
add
les
les
mov
inc
in
mov
js
mov
stc
mov
fldt
lods
inc
and
ss
or
inc
sub
in
dec
inc
jno
mov
dec
andl
fsubl
jmp
dec
cmc
cli
sbbl
xchg
rorl
mov
push
add
or
add
xchg
insl
int
gs
jl
clc
ret
aaa
pop
mov
jmp
add
jae
cmp
cmp
lahf
mov
jno
addr16
cmc
cmc
ror
xchg
rcr
int
xchg
std
loopne
stos
lret
sub
out
xchg
cmc
lret
inc
xchg
mov
imul
loop
sbb
cld
sbb
cmc
loope
push
ljmp
sarl
dec
dec
nop
movsb
in
dec
cmp
movsb
or
in
and
insl
test
sub
and
mov
add
and
je
push
aas
pop
testl
jle
jecxz
bound
cwtl
bound
enter
movsb
mov
xor
gs
ret
inc
dec
push
xor
xor
imul
arpl
adc
shlb
cmpsl
cmpsl
iret
call
or
dec
out
inc
or
mov
imul
push
adc
xor
adc
sbb
xchg
outsl
add
sub
lods
jnp
and
jnp
lret
pop
jge
or
aas
test
jne
mov
jl
inc
xchg
pop
lock
pushf
jbe
add
dec
jbe
out
mov
aas
mov
jmp
stc
stos
ror
lds
pop
mov
mov
repz
hlt
mov
in
aad
push
jg
xchg
xor
sub
push
dec
adc
push
lea
and
push
add
dec
cmp
cmp
daa
insl
jb
jbe
inc
jnp
push
bound
sbb
mov
imulb
shll
insl
loopne
adc
popf
daa
pop
push
test
addb
fs
test
sahf
dec
loop
jecxz
xlat
sbb
mov
or
clc
mov
or
dec
mov
mov
inc
sbb
pop
into
les
lret
and
jecxz
in
mov
xor
inc
xchg
cmp
sub
jl
mov
lahf
push
mov
imull
jo
cwtl
jne
notl
decl
daa
mov
jae
inc
sahf
cld
push
cmp
add
gs
jno
cmp
pushf
xchg
or
rcr
loop
pop
mov
out
pop
cmp
dec
pop
shl
jne
jg
xchg
fwait
inc
push
xchg
jmp
cld
repnz
scas
mov
or
or
popa
add
lea
imul
jno
popa
mov
cmp
gs
jne
push
cs
and
mov
arpl
fidivrs
dec
add
sbb
jne
rcl
jno
jbe
flds
and
ss
divb
ss
pushf
mov
jae
ds
jo
test
dec
xor
les
gs
iret
add
mov
loope
xchg
imul
enter
adc
jbe
call
lahf
lds
fstpt
add
sar
mov
fisttps
mov
das
gs
scas
jo
add
pop
xchg
jns
sbb
ja
mov
outsl
clc
xchg
pop
enter
in
dec
jmp
out
pusha
cmp
inc
dec
test
adc
in
stos
or
inc
and
sahf
dec
dec
mov
fadds
pop
scas
packuswb
sbb
adc
sub
inc
dec
leave
mov
lahf
fwait
leave
lods
fists
or
mov
jecxz
mov
mov
sbb
jb
or
cmp
out
sub
fdivrs
mov
dec
push
or
dec
imul
pop
lret
inc
adc
jo
ja
repz
push
stc
adc
fs
dec
aaa
mov
pushf
js
insl
pushf
popa
sbb
imul
lahf
jge
outsb
xor
inc
outsl
loopne
jle
add
pop
inc
inc
push
into
mov
inc
aam
mov
in
in
adc
rorl
in
ret
lcall
push
ljmp
sbb
or
xor
pop
lahf
popf
stos
cmp
push
es
testb
repz
pop
rclb
push
test
in
lret
add
and
push
sarl
inc
fcmovnb
hlt
push
pop
loopne
test
mov
cmp
or
sub
out
mov
popf
repnz
adc
daa
stos
mov
fbld
aad
js
mov
jl
jnp
mov
in
addr16
push
mov
iret
adc
je
in
outsb
jg
sub
loop
adc
push
fsubp
xor
mov
lods
mov
enter
in
xchg
add
fidivrs
movsb
push
sahf
insl
cmp
out
sbb
cmc
aas
xor
xor
imul
movsb
jle
jne
iret
adc
hlt
fisttpll
xor
inc
gs
sti
xchg
rorb
lock
jle
sub
repz
sbb
test
es
dec
xchg
mov
out
iret
cmp
or
and
mov
cmpsl
mov
lock
jle
cltd
stos
or
fildl
popf
je
mov
testl
sbb
cmp
push
int3
adc
pop
xchg
and
inc
xor
pop
xchg
dec
fwait
sub
aaa
pop
mov
cltd
int3
pop
clc
sub
lods
pusha
push
mov
repz
or
sbb
jg
lret
in
pop
movsl
loop
jle
cmp
loopne
push
cmp
push
repz
loope
push
mov
ljmp
pop
add
pop
lods
out
test
pop
repz
xchg
inc
into
div
sarl
jecxz
adc
arpl
lcall
fcoml
sub
cmp
pop
mov
push
dec
lcall
or
insb
mov
aad
dec
pop
aas
pop
hlt
mov
movsb
sub
add
xchg
shrl
scas
outsb
mov
mov
lahf
pop
mov
push
inc
incb
bound
jge
jge
push
scas
xchg
or
mov
hlt
jmp
loopne
imul
ss
push
push
ret
std
aad
cltd
xchg
in
cmpsl
mov
sbb
xchg
sbb
xor
es
mov
insl
mov
sbb
icebp
or
pop
dec
sbb
out
aaa
dec
and
push
je
inc
negb
xchg
adc
sub
ss
mov
shrl
aaa
adc
std
lret
rcrb
jmp
aas
adc
push
xchg
enter
lahf
inc
xor
mov
loop
mov
lods
adc
dec
popa
test
negb
push
int
pop
out
jo
ljmp
fidivrs
mov
adc
je
xor
scas
xchg
aaa
inc
adc
das
sub
lock
data16
push
inc
or
mov
out
mov
push
pusha
in
insl
test
fbld
xor
dec
cwtl
mov
pop
out
dec
or
scas
jecxz,pt
push
push
int3
cmpsl
fisttpll
lret
sbb
imul
je
dec
sbb
pop
ljmp
mov
cli
iret
jb
xchg
iret
outsl
and
dec
push
dec
stc
mov
push
andl
lret
sub
xor
mov
arpl
push
test
lods
mov
data16
sub
xchg
xor
arpl
nop
jg
push
xchg
clc
jb
cmpsl
mov
and
aas
cli
out
pusha
lock
sub
in
sub
xorb
pop
les
test
arpl
mov
cltd
js
ja
dec
cli
in
mov
jb
push
and
cmc
sub
cmove
scas
add
dec
mov
outsb
mov
or
mul
jb
lret
les
test
push
add
out
nopl
adc
cmp
mov
and
dec
popa
scas
inc
or
push
hlt
push
js
dec
mov
xor
and
les
lock
add
push
or
rorl
jnp
push
stos
cmpsl
lods
xchg
ret
lds
mov
push
push
adc
cltd
mov
mov
pop
ljmp
jae
sub
cmpsl
mov
mov
test
loope
sub
clc
test
or
and
push
shrl
xchg
inc
or
xchg
xor
cld
mov
push
mov
imul
add
push
cmp
std
jns
push
jmp
mov
xor
mov
sub
stos
or
fistpl
jle
xchg
aaa
jge
lmsw
mov
andb
xchg
cmc
xchg
pop
mov
dec
cmpsb
imul
out
ret
push
push
mov
cli
pushl
sbb
enter
or
adc
jl
dec
xor
sub
aaa
lods
jge
movsb
jne
jg
int
pop
jg
enter
mov
les
sbb
sub
fldcw
adc
xchg
mov
xchg
pop
lods
and
mov
mov
ss
mov
and
push
mov
rcl
mov
repz
xor
add
lods
out
out
sub
push
cmp
mov
jp
cmp
pop
xchg
adc
or
outsb
lret
xchg
sahf
jne
test
cmp
mov
pop
lahf
jle
xchg
add
icebp
pop
mov
jp
jl
push
mov
xchg
push
xlat
cltd
shlb
mov
leave
loop
mov
xchg
pop
lcall
push
xor
push
dec
xor
jp
sub
stos
mov
sbb
movsb
nop
xchg
out
sub
or
cmpsl
cmp
dec
or
adc
enter
lock
leave
frstor
call
aad
mov
dec
test
std
push
push
imul
mov
fs
in
cwtl
dec
repz
sub
inc
mov
xlat
mov
fisubrl
or
inc
ds
stos
inc
push
pusha
mov
lahf
and
cmc
iret
jnp
outsb
enter
or
clc
mov
roll
mov
mov
das
or
mov
in
test
sbb
push
and
xor
or
adc
dec
jno
nop
pop
jbe
fildl
sub
xor
inc
les
lock
out
mov
fwait
stc
dec
mov
in
lock
sub
iret
pop
xchg
mov
push
mov
call
pushf
aam
add
in
pop
ret
mov
xchg
mov
mov
sbb
push
arpl
lahf
arpl
ror
jge
fistl
or
mov
lods
push
pop
mov
mov
adc
add
lahf
aad
sub
push
imul
mov
add
enter
jnp
mov
jl
out
push
in
xor
pop
repnz
addb
adc
pop
jno
sbb
mov
mov
jb
push
mov
or
leave
movsl
pop
daa
int
mov
ret
xor
cmp
repz
push
repz
mov
repnz
sbb
mov
ret
sub
mov
stos
mov
push
adc
ja
xlat
decb
add
andl
aad
jge
gs
mov
push
pop
mov
out
push
inc
pop
mov
bound
jle
push
lahf
daa
mov
mov
jp
sbb
add
jnp
mov
fcoml
data16
mov
int
or
push
jns
xor
xor
lea
dec
xchg
in
mov
sub
xchg
lret
adc
jbe
movb
les
fdivl
mov
sahf
outsl
pop
add
xor
lods
repz
mov
inc
nop
adc
mov
or
add
cld
fisttpl
jo
roll
daa
pushl
ja
jmp
imul
cmpsb
add
xor
or
xchg
in
pop
xchg
jmp
in
jb
bound
add
cmp
inc
mov
sub
rorb
lahf
pusha
sbb
cltd
clc
jnp
stos
hlt
pushf
jge
xchg
cmp
js
add
mov
jo
int3
adc
lret
push
adcl
cwtl
stos
inc
xlat
shr
xchg
mov
mov
outsl
mov
and
mov
popf
mov
scas
adc
mov
xchg
dec
push
jge
loope
ret
jae
ret
jp
push
fsubrl
add
sar
cmp
push
loopne
arpl
imulb
imul
cmc
pop
inc
cmp
je
fdiv
adc
cltd
das
int3
pushf
ret
push
shrl
pop
jns
movsl
sub
xor
mov
push
or
stos
test
adc
and
fmul
out
pop
or
xor
je
in
cmp
inc
andb
mov
lcall
jne
xor
cmpsb
fnsave
mov
cmc
jae
bound
nop
je
lret
lods
mov
sbb
sub
cld
jl
adc
hlt
ss
push
in
mov
mov
scas
and
test
xchg
jo
fwait
popl
fisubs
aas
pop
jecxz
lds
fistl
sbb
jle
ret
mov
fwait
xchg
stos
lcall
mov
rol
dec
iret
xlat
mov
in
add
xchg
add
sub
ss
movb
xlat
xchg
push
outsb
mov
push
xor
in
jb
outsb
mov
dec
inc
cmp
daa
test
dec
aam
sub
mov
and
or
pop
lock
inc
rcrb
movsl
outsb
lahf
push
test
sbb
and
ret
or
rolb
rcr
cmp
mov
outsb
orl
enter
dec
push
pushf
out
jno
or
inc
cmp
adc
add
sub
leave
leave
and
xchg
fmull
adc
insb
cwtl
adc
pop
lods
push
fwait
enter
into
mov
adc
push
mov
pop
lcall
sbb
pop
cltd
imul
lods
jb
fcompl
rorl
movsb
jno
out
mov
ficomps
adc
cld
jmp
ret
fnstcw
pop
mov
cmp
js
xor
lret
mov
mov
and
stos
sub
push
jle
xchg
jno
mov
mov
imul
popa
or
lods
pushf
pop
out
jae
jno
cmp
test
jb
es
cmpxchg
fs
jle
inc
xchg
sub
sub
push
out
hlt
scas
jb
push
pop
rcrl
dec
pop
incb
jmp
adc
inc
mov
orb
lea
push
repz
fldenv
pushf
loopne
mov
addr16
dec
pop
mov
enter
enter
xor
pop
es
test
rcrl
test
add
mov
sub
mov
imul
mov
por
jle
das
push
xor
sahf
imul
aas
scas
cltd
test
xchg
je
xchg
jmp
dec
mov
shlb
test
sub
lret
test
or
shrl
lds
fwait
in
ja
inc
inc
not
or
xor
rorl
mov
sbb
loopne
pop
push
pop
ror
dec
jno
mov
cmpsl
pop
std
push
cmpsl
sbbl
fxch
aad
and
sar
icebp
or
lock
test
jb
mulb
mov
cli
xorb
jo
or
pop
mov
xlat
xor
cmp
add
and
popa
fimull
inc
cs
cmp
mov
cmovno
jae
mov
fyl2xp1
test
dec
add
pop
jp
std
or
mov
add
cmp
ss
sbb
push
lock
jmp
jbe
out
xor
pop
cmp
cmp
push
ja
and
out
adc
jbe
lods
add
data16
and
test
xchg
cmpb
push
ds
andb
push
aam
dec
fsubl
into
pop
jbe
pop
mov
sbb
vminsd
adcb
pop
xor
mov
ret
mov
es
cwtl
dec
idivl
jle
gs
cmp
je
inc
jbe
movsb
push
dec
jmp
xchg
jle
in
jbe
lret
scas
push
aad
push
rclb
sub
test
sub
xchg
cmpsb
cmpsb
cs
and
cltd
add
stos
mov
imul
iret
pop
sarl
lcall
sbb
pop
or
add
call
repnz
ret
mov
sub
ret
mov
mov
push
pop
xchg
pusha
into
mov
pop
sub
push
cmpsl
mov
iret
inc
stos
out
in
loop
repz
jo
and
mov
cmp
call
cmp
imul
rcll
push
testl
adc
pop
popa
add
or
sbb
cmp
das
cmp
stos
inc
mov
loopne
and
ljmp
shlb
and
jl
cs
jl
pop
ss
ret
xor
nop
cltd
inc
rorl
dec
scas
jp
call
sub
push
push
add
loope
dec
rclb
mov
data16
scas
mov
stc
lahf
jp
fucomip
adc
jns
xchg
push
ja
rcrl
dec
cmp
inc
outsb
fwait
xchg
adc
and
sbbl
hlt
bound
outsl
xchg
fldcw
in
cli
mov
leave
or
mov
xor
jmp
les
lret
xchg
cmp
pop
pop
push
xchg
jae
lcall
xchg
loopne
push
sbb
jecxz
mov
addl
push
mov
push
arpl
les
inc
sub
pop
int3
shll
lea
dec
loop
pop
pop
shl
sub
mov
pop
lahf
jo
ss
mov
cli
popf
xor
repz
xchg
jb
and
addb
dec
mov
fidivs
jbe
sub
scas
mov
inc
add
pop
iret
sub
lcall
inc
xor
insb
stos
inc
push
xor
xchg
xor
mov
pop
lods
aad
outsb
lods
loop
adc
mov
mov
fadd
out
sub
testl
mov
sub
adc
pop
xchg
jbe
ljmp
mov
sbbl
cmp
test
mov
push
lods
call
jge
ret
ljmp
mov
mov
fcomps
cmp
les
in
mov
inc
hlt
xchg
inc
cmp
testb
dec
or
aam
lock
cmp
ja
xchg
outsb
mov
jo
pop
int
adc
xchg
sbb
jno
pop
mov
push
ret
mov
outsl
sub
mov
pop
jp
sbb
or
adc
icebp
jg
cwtl
fadd
sub
pop
and
mov
push
pop
lea
mov
cwtl
jg
or
stos
repz
xchg
xchg
mov
lcall
pop
jbe
cmp
mov
sahf
jnp
xchg
mov
pop
and
orb
addr16
int3
jg
cmpsl
jle
and
aam
rol
inc
inc
les
pusha
cmpsb
jmp
mov
int
adc
icebp
aam
test
xchg
lcall
ficompl
xchg
pop
fisttpll
dec
xchg
iret
jnp
dec
push
jno
loopne
xor
out
mov
lcall
test
loope
idiv
mov
nop
adc
jbe
sub
lahf
adc
mov
jge
and
inc
fwait
and
jecxz
ja
sahf
push
ja
pop
fs
jle
aas
and
fsts
stos
inc
mov
push
pop
xchg
ss
dec
fsubl
fisubrs
adc
sub
mov
dec
pop
andl
out
cmp
aad
inc
push
daa
insb
in
dec
fisubs
arpl
mov
push
push
pop
out
add
cmpsb
cmp
dec
ljmp
fs
push
pop
insl
jbe
add
clc
mov
adc
push
in
push
cli
mov
inc
xchg
xor
inc
test
push
mov
push
stos
mov
test
jbe
add
push
rcr
lods
pop
dec
inc
pop
xchg
mov
call
pop
pop
dec
push
push
dec
jno
dec
sub
mov
insb
adc
inc
scas
xor
pop
xchg
movsl
mov
or
dec
xlat
mov
icebp
jns
mov
mov
cmp
mov
inc
aaa
lahf
cmpsl
incl
push
call
jg
in
jl
mov
orb
cmp
cmp
rclb
outsl
push
add
cwtl
cmp
push
repz
in
jne
cltd
bound
imul
flds
jge
mov
jb
jle
sub
dec
xor
rcrb
mov
xchg
xchg
stos
adc
je
cmc
mov
fs
ss
add
jp
mov
dec
push
sub
dec
dec
cltd
mov
enter
cmp
outsl
ss
lcall
pushf
jnp
push
outsl
and
fdivrl
divb
mov
cs
vmwrite
xchg
adc
jbe
cwtl
mov
sbb
fsubs
xor
add
lret
shl
ljmp
mov
add
lods
imul
add
sbb
push
gs
ficoml
shll
mov
mov
and
imul
adc
push
push
mov
sahf
lcall
inc
push
xor
ss
jge
cli
push
push
lds
arpl
andb
jne
push
push
add
dec
jno
and
xchg
mov
cmpsb
test
cmpsb
push
push
add
mov
adc
cmpsl
loopne
shl
cmpsl
and
cli
xor
bound
scas
ljmp
addr16
fildl
pop
stos
dec
int
inc
mov
imul
jl
mov
mov
ret
in
sbb
cmp
lret
cmp
dec
insl
insl
imul
cwtl
arpl
inc
sbb
out
adc
in
xor
xor
mov
insb
je
int
out
mov
loope
pop
jns
fs
mov
outsl
aas
int
or
mov
mov
inc
mov
call
icebp
mov
sbb
inc
nop
jae
lock
xchg
push
loope
shr
lds
mov
sub
adc
outsb
add
mov
outsl
push
push
clc
test
jnp
add
fcmovnu
lock
scas
jno
or
sbb
adc
stc
or
pop
arpl
push
mov
in
mov
mov
or
in
aas
dec
cmpsl
rcl
sub
lahf
fs
xchg
les
sahf
or
mov
mov
push
dec
lods
nop
mov
rolb
mov
mov
xchg
push
pop
xchg
insl
push
fs
loopne
xchg
aaa
inc
mov
cli
pop
notl
cmp
popf
andb
and
push
fdivl
mov
outsl
push
mov
mov
pop
dec
add
aaa
jb
fadds
add
mov
sub
lahf
sbb
pop
js
std
cmpsb
and
lds
xchg
xor
lea
lcall
push
mov
cli
mov
movsl
out
push
sbb
push
pusha
cmpsb
push
mov
fwait
mov
je
jl
jbe
mov
xchg
ljmp
cmp
push
pop
pop
sbb
or
push
dec
or
add
sbbb
loopne
cmp
and
sbb
pop
loopne
imul
int
hlt
loopne
jo
sahf
dec
ficomps
adc
and
rolb
popa
mov
sub
leave
stos
and
mov
jno
cs
jge
enter
mov
mov
test
sub
sar
mov
inc
icebp
or
jns
xchg
dec
push
xor
in
jge
adc
adc
dec
data16
jle
xor
icebp
xor
pop
lods
imul
std
inc
mov
add
addb
dec
pop
in
sub
data16
and
je
loopne
int3
scas
and
mov
xchg
sub
je
mov
dec
out
push
ljmp
stos
jl
call
push
sbb
adc
cltd
cmp
cmp
push
fbld
mov
repnz
mov
es
call
ret
mov
lret
xor
vmovd
enter
cmpsl
idivb
sti
push
push
push
add
add
and
loop
in
andl
popf
mov
loopne
xchg
mov
mov
rolb
xchg
sub
scas
xchg
arpl
out
adc
call
mov
cmpsl
js
pop
cmp
pop
sti
lcall
rolb
inc
adcb
push
divb
dec
js
add
pusha
push
xor
xor
jb
sbbb
mov
fsubl
outsl
popf
loope
jb
sbb
push
popf
pop
push
sbb
sbb
push
ljmp
lods
cmp
push
imul
sub
sbb
call
pop
fwait
shrl
rcll
sub
lahf
pushf
orl
jno
adc
fmuls
daa
pop
pop
lret
jno
jle
inc
addb
pusha
out
bound
repnz
dec
data16
aas
ss
in
arpl
int3
es
scas
test
outsl
mov
div
cld
ret
arpl
sbb
sti
mov
outsl
sub
inc
movsb
xchg
add
pop
cmpl
imul
movsl
repz
adc
jbe
leave
adc
cmp
fldenv
rcrl
xchg
in
adc
push
mov
pop
ljmp
xor
in
js
adc
das
cmc
movsl
adc
lret
repz
and
dec
int3
out
add
sub
arpl
mov
push
sub
fldenv
push
sbb
jle
out
sub
mov
mov
and
popa
sahf
cmp
sti
inc
push
test
push
test
mov
lret
inc
mov
pop
clc
cmp
or
in
lods
dec
xor
movsb
mov
lock
adc
aas
fs
cmp
outsl
jno
fistps
pusha
sub
or
enter
push
ljmp
dec
mov
sub
mov
xor
lcall
fistps
pop
in
or
adc
scas
dec
pop
imul
loopw
daa
std
fdivs
pop
jl
xchg
mov
adc
scas
mov
xchg
int
cs
out
xor
mov
push
inc
jg
js
mov
mov
or
dec
sub
pop
push
sti
xchg
inc
into
adc
pop
clc
fwait
loope
decl
lock
ds
inc
jne
or
lods
out
pop
leave
pop
mov
inc
and
arpl
pop
lock
lret
aam
mov
jmp
mov
mov
inc
ljmp
mov
xchg
das
push
inc
mov
jg
scas
dec
dec
mull
in
stos
inc
addr16
arpl
sbb
leave
sub
cmpsb
mov
dec
add
js
sahf
ljmp
inc
jae
inc
xor
shlb
dec
scas
aam
shlb
adc
js
lahf
cmp
and
push
fisttps
sub
hlt
data16
cmp
cmpl
in
push
and
jns
push
bnd
xchg
pop
sahf
data16
loop
jmp
rcrl
fimull
fmulp
sub
mov
pop
adc
pop
xor
mov
mov
or
in
repnz
cli
sbb
sub
fildl
hlt
in
lahf
aaa
outsb
dec
pop
les
clc
push
push
cli
out
fwait
cmpsb
out
out
push
mov
fs
lcall
inc
push
popf
jns
cmpsl
addr16
adc
lret
outsl
fcoml
je
inc
rol
jno
lods
mov
add
daa
push
fwait
xlat
dec
jmp
outsb
push
push
fcomi
adc
test
pop
aam
in
fbld
loop
shl
mov
mov
mov
repnz
mov
mov
adc
ja
mov
nop
mov
outsb
push
sbb
jae
push
repnz
adc
repz
xor
ljmp
and
mov
lret
sarl
jne
push
ds
lcall
add
mov
push
aam
dec
lret
ja,pn
icebp
fstl
pop
mov
lds
dec
add
xchg
pop
xor
pop
mov
ret
mov
mov
push
fdivs
in
rcll
pop
lahf
inc
push
push
outsl
aaa
mov
push
cmp
cmp
ss
jp
push
cmp
repz
jmp
lods
imul
sub
sbb
sub
mov
and
loope
adc
int3
in
dec
popf
xchg
imul
xlat
push
adc
mov
ja
out
in
dec
addr16
jmp
mov
adc
jmp
and
lods
cli
dec
dec
repz
ss
xchg
adc
in
ss
iret
inc
mov
jo
out
test
and
mov
sub
jb,pn
aaa
aaa
jp
cmp
push
adc
sbb
jbe
pop
push
push
scas
movsl
ljmp
dec
js
add
inc
stos
clc
sahf
mov
cli
lock
and
cmp
mov
inc
mov
xor
out
mov
addr16
inc
mov
ja
mov
std
outsl
push
xor
and
mov
jp
repz
ret
sub
inc
push
jp
xor
jecxz
jmp
int3
aas
sub
pop
shlb
mov
leave
sbb
lods
mov
xor
outsb
scas
iret
fimull
lods
jne
sbb
insl
flds
and
inc
movsb
scas
fimuls
mov
aad
xor
mov
pushl
loop
cltd
jae
mov
or
imulb
or
pop
stc
add
jmp
add
lods
ja
stc
adc
insb
cmp
inc
push
xor
mov
je
js
int3
stc
or
mov
dec
inc
push
fstp
rcrb
or
pop
dec
gs
rclb
dec
xor
xchg
xchg
push
push
dec
xchg
imul
stos
jecxz
rolb
outsl
ljmp
sub
sub
add
js
stos
outsl
fistl
xchg
add
loopne
into
adc
shrb
mov
adcl
stos
jg
mov
sub
or
addl
lret
dec
imul
adc
jmp
xor
jp
and
aad
pop
inc
out
popf
jge
sbb
ret
lock
or
mov
iret
pop
ret
mov
xor
rclb
mov
inc
inc
push
mov
cwtl
pop
cmp
or
adc
jmp
scas
sub
mov
repz
fstpt
popf
outsl
jge
inc
ret
xchg
jne
jb
fidivrs
out
shl
sub
sbb
movsl
subb
pop
popf
imul
aas
adc
or
sahf
in
pop
cmp
shll
sbb
outsl
cmp
pop
leave
sub
dec
scas
jns
jecxz
add
push
ljmp
pop
inc
stc
into
sub
icebp
inc
roll
xchg
dec
and
pop
pop
mov
jg
ss
insb
mov
icebp
out
inc
aam
shll
xchg
add
jnp
rorl
fdivl
js
push
in
xchg
adc
cmp
xor
pop
imul
hlt
push
pop
xchg
add
out
sarl
std
jle
pop
or
push
lea
jo
xor
or
dec
adc
sub
jns
mov
insl
imul
decb
xchg
dec
outsb
aad
ficoml
jnp
call
sbb
decl
lcall
fiaddl
popf
xchg
mov
xor
mov
push
mov
testb
cmpb
inc
insl
popa
dec
scas
out
fwait
dec
into
cmp
fimull
negl
icebp
aad
bound
sub
int3
mov
int
loopne
mov
jo
pushf
iret
lahf
icebp
push
sahf
rclb
add
xor
mov
loopne
push
test
xchg
cmp
mov
xchg
add
dec
jp
rcll
popa
ss
leave
lds
test
xchg
adc
in
in
mov
jecxz
pop
inc
lea
das
pop
jge
xchg
mov
jmp
adc
inc
bnd
and
pop
outsl
push
and
addr16
call
mov
jae
or
in
adc
pushf
loopne
and
or
inc
mov
adc
fcmovne
dec
loopne
in
cmp
xchg
add
mov
outsl
pop
in
jb
add
xor
sbb
and
and
fadd
mov
jns
sub
and
mov
insl
add
mov
sbb
movsb
out
lret
mov
stos
xor
lcall
mov
mov
in
scas
jne
pop
jne
cmp
push
jmp
js
lea
mov
out
xchg
mov
sub
adc
int
mulb
dec
out
and
stos
push
mov
std
cmovle
xchg
incb
pop
lret
aam
inc
jns
mov
mov
test
xchg
int
adc
hlt
cwtl
clc
imul
pop
or
sbb
cmpsl
daa
xchg
add
dec
jbe
sbb
insl
xchg
add
les
in
mov
call
ja
fwait
pop
add
mov
mov
or
sub
aas
cmp
xor
push
pop
rcll
sub
mov
sti
cltd
dec
mov
fcmovb
jb
pushf
std
lcall
std
test
jnp
add
iret
repnz
mov
out
xchg
fwait
je
icebp
jle
stc
xchg
outsl
cmp
cli
adc
test
test
jmp
cli
sbb
xlat
mov
flds
jae
fstps
testb
mov
ds
mov
cli
fstpl
imul
loop
and
loop
aad
mov
dec
inc
push
aad
fisubs
xchg
cmp
clc
or
xor
cmpl
sub
cmp
jge
xor
fwait
and
and
sub
fcoml
lcall
xchg
popa
adc
adc
outsl
add
cmp
jo
daa
push
push
or
push
mov
sbb
lods
dec
lret
xchg
out
lds
adc
mov
pushf
inc
push
xor
ljmp
rorl
cltd
jne
andl
icebp
xor
adc
mov
fisubs
or
add
add
ss
out
pushf
mov
int
clc
and
mov
aam
pop
aad
sti
imul
imul
add
movsb
push
add
mov
mov
and
clc
test
cmc
jmp
lret
out
dec
inc
jge
mov
in
notb
daa
popa
iret
in
xchg
dec
pushf
jns
rorb
imul
adc
pop
negl
push
hlt
ds
mov
add
mov
mov
call
cmp
int
adc
dec
lcall
push
mov
cmp
aam
rclb
mov
neg
enter
test
into
mov
sbb
jae
ret
jp
lcall
das
inc
in
insl
testl
clc
adc
jg
icebp
mov
lds
je
jbe
popa
cmpsb
pop
or
pop
dec
or
pop
imul
loope
mov
sbb
dec
pop
mov
push
pop
ds
aas
pop
fdivs
mov
je
mov
push
add
cmpsl
in
push
loopne
mov
pop
mov
xlat
mov
cmpsl
loope
movl
test
ds
pushf
stos
std
ficoms
ljmp
xchg
xor
clc
sub
stos
leave
pop
cmp
movsb
jp
inc
fnstsw
ds
and
inc
jmp
cmp
sarl
pop
pop
mov
mov
and
adc
push
jecxz
xorb
mov
xchg
sub
jecxz
inc
cmp
subb
push
jb
add
xor
in
sbb
sub
movsb
push
or
bts
and
lods
repz
lea
pushf
hlt
cwtl
sub
add
scas
lahf
mov
mov
pop
enter
jl
xor
jl
add
divb
inc
push
xchg
jecxz
loopne
fidivs
fbld
or
jno
shlb
inc
cmp
add
lea
popa
mov
push
cmp
and
repnz
cld
xadd
xchg
add
cltd
or
in
add
fstl
nop
test
mov
ja
cmp
cmp
cmpsb
out
data16
mov
xor
std
mov
cli
lock
idivb
sbb
push
jg
loop
loope
outsl
jge
les
xchg
js
dec
in
mov
icebp
pop
jo
push
jnp
std
fxch
pop
cmpsb
adc
mov
imul
sti
xchg
ds
insb
jno
lret
mov
lods
cmpb
adc
lret
inc
xlat
mov
jmp
cmc
cs
pop
adc
fdivs
cs
push
in
adc
div
adc
mov
dec
inc
gs
adc
testb
adc
jmp
pop
notl
jno
sbb
mov
or
or
sbb
notl
push
pop
inc
inc
pop
jnp
jae
inc
cmp
or
leave
mov
out
out
shl
cmp
test
xchg
ss
mov
call
xor
inc
mov
add
rorl
sti
sahf
cmpsl
add
or
or
or
imul
jno
ret
sub
in
stos
div
lods
push
outsl
xchg
cmp
pop
mov
imul
push
pop
int
push
xchg
cmp
pop
sbb
xor
xor
stc
sahf
xchg
scas
push
rolb
test
mov
cmp
loopne
and
sub
daa
imul
or
jg
gs
divb
jp
stos
leave
inc
adc
jecxz
mov
and
xchg
lahf
jecxz
pop
mov
push
push
mov
rcrb
fdiv
popa
cmp
into
sbb
fisttps
jb
mov
pop
add
xor
sub
shll
int
repnz
rcrb
add
popf
dec
sub
mov
push
xchg
fsubrl
clc
test
loope
xchg
inc
pop
jb
ljmp
pop
pop
out
ret
ja
cli
add
jge
rcrb
xchg
mov
push
xchg
sbb
pop
fwait
mov
mov
mov
rcll
xchg
pop
insb
jno
adc
sub
jnp
mov
sub
repz
jle
aaa
xor
rolb
sbb
lret
loope
xor
cmpsb
sbb
stc
jnp
cli
jl
stos
push
out
inc
cmp
aas
clc
jnp
pop
or
addr16
xor
imul
mov
dec
jns
pop
fbld
inc
fmul
jae
cltd
mov
jecxz
pop
xchg
jb
ja
in
inc
dec
aam
scas
add
pusha
cmp
loope,pn
loope
adc
adc
pop
or
inc
xchg
mov
xorl
sahf
cmp
mov
lods
inc
cwtl
pop
out
cmpsl
add
stos
stos
cmc
pop
mov
mov
mov
cld
mov
mov
cmp
ret
test
das
arpl
subb
sub
or
or
mov
inc
add
icebp
arpl
dec
aad
cmp
fdivl
enter
das
add
xchg
xor
orb
push
shlb
dec
dec
pop
fstl
mov
pop
scas
fidivrs
push
inc
sbb
jno
flds
bound
lds
pusha
jmp
jp
movsb
add
push
inc
sbb
mov
push
xor
xchg
mov
xor
loope
mov
add
repnz
fldt
rcll
cmp
xor
or
and
gs
into
add
add
mov
pop
sub
xchg
dec
jb
and
fisttps
adc
out
xor
sub
push
pop
mov
and
pop
js
mov
ficoml
push
pusha
iret
sbbl
lds
gs
mov
pop
adc
and
or
movsl
dec
popa
mov
push
jle
mov
test
hlt
loopne
mov
fiadds
stos
jecxz
imul
mov
mov
push
dec
push
scas
in
in
daa
pusha
mov
mov
repz
add
mov
imul
mov
mov
decb
adc
ret
mov
aam
or
int3
rol
jbe
pop
mov
cmc
mov
xor
pop
fiadds
or
pop
ja
adc
or
or
jp
adc
jns
push
ficompl
fsts
stc
shrb
scas
aam
and
lahf
pop
lret
insb
push
stc
fstps
push
js
mov
pop
stc
and
aad
add
das
push
cs
pop
enter
cmp
mov
xchg
lret
nop
push
mov
push
sar
gs
cmpl
iret
aad
sarb
pushf
lods
out
lea
pop
push
mov
dec
pop
push
ljmp
and
dec
xlat
aaa
adc
cltd
add
imul
xor
iret
into
xchg
adc
cmpb
leave
inc
fistps
stos
xor
cmpsb
icebp
pushf
es
rcll
xlat
push
pop
rcll
decl
out
and
testl
imul
arpl
scas
into
jp
push
and
dec
mulb
orb
pop
sbb
adc
ret
and
out
test
xlat
repz
jle
in
mov
add
sub
popf
pop
push
pop
inc
ljmp
outsb
push
xchg
ss
and
push
inc
mov
mov
inc
inc
xchg
jo
pop
jbe
cmp
nop
js
sub
outsb
push
mov
or
add
cmp
jge
ss
mov
lea
fsubrs
mov
mov
loope
jae
fistpl
sbb
in
xchg
aaa
xchg
xchg
jmp
pop
notl
or
mov
push
bound
cmp
lahf
iret
outsl
sbb
inc
and
lahf
or
jo
lahf
push
test
insb
movsl
inc
push
jmp
fidivrs
cmp
mov
xchg
inc
dec
pop
rorb
cmp
inc
xchg
mov
jge
or
call
out
test
sbb
sub
pop
insb
cmpsb
enter
mov
jb
and
loopne
inc
stos
xor
mov
nop
das
inc
push
mov
dec
push
cmp
cs
pop
imul
mov
or
adc
add
fstpt
in
cmp
inc
mov
push
iret
mov
addr16
xchg
mov
lcall
jmp
xchg
aas
inc
pop
js
out
es
clc
mov
and
cltd
lea
mov
cmp
ljmp
mov
pop
addr16
push
xchg
add
fs
adc
fnstsw
and
shlb
push
jp
jmp
fidivrs
inc
and
mov
into
adc
mov
or
and
mov
pop
jg
inc
leave
js
push
inc
add
jne
jns
add
add
in
push
pop
lods
sbb
das
xchg
xor
subl
fsts
push
test
xor
jae
lret
push
fcmovu
fsub
insl
jne
call
int3
arpl
mov
in
xor
jbe
or
mov
dec
adcb
repz
lret
pushl
xlat
imulb
sti
xor
mov
fisubrs
inc
cs
cmp
les
ja,pn
jne
mov
aaa
xchg
dec
xchg
mov
fisttpl
cmp
jae
xchg
fstps
imul
or
pop
movsl
lods
mov
xchg
or
cmp
lret
pop
adc
dec
daa
rcrb
push
fidivl
and
xchg
lods
popa
xor
out
lods
dec
outsl
pushf
or
fldl
lret
lea
aad
js
icebp
ljmp
jbe
push
jmp
lds
je
or
jns
out
loopne
push
lods
test
outsb
xchg
adc
cmp
shl
in
pop
jl
cli
xchg
inc
xchg
cld
xchg
or
icebp
jns
cltd
pop
sbb
scas
mov
sti
pop
push
mov
daa
movsl
mov
addb
testb
dec
xchg
push
and
popa
call
mov
cwtl
cmpsb
pusha
orb
mov
jns
mov
cmc
xor
or
aam
sub
jp
test
pop
fidivl
in
xchg
dec
pop
iret
push
sub
inc
adc
repnz
sub
loop
mov
and
aaa
sub
dec
xchg
nop
xor
adc
cmpsb
imul
scas
mov
mov
inc
xchg
into
add
in
and
clc
mov
movsl
insl
xchg
sub
xchg
in
call
dec
inc
sub
xchg
lods
test
daa
insb
add
push
fs
xchg
insl
sub
lds
subl
cmp
and
or
push
mov
sarb
test
popa
add
push
mov
xchg
push
jecxz
push
aad
fmul
ss
aaa
inc
aad
outsl
fsubl
inc
mov
ja
mov
aaa
mov
push
mov
sub
testl
dec
aam
jo
js
ljmp
rolb
pushf
lods
arpl
das
dec
loop
cmc
hlt
addl
add
test
mov
enter
std
leave
stos
mov
add
subl
xor
mov
fcmove
mov
xchg
aas
push
fxam
fmuls
mov
jecxz
in
inc
push
fildl
mov
xlat
ficoml
inc
mov
rorl
xlat
pop
push
dec
rcrl
push
push
fs
jb
mov
push
sbb
rorb
mov
fcmovnu
es
jo
adc
push
or
push
sub
fdivl
lret
mov
mov
fisubl
scas
outsl
xor
add
jb
mov
xchg
sub
sub
jo
mov
and
pop
jo
inc
jg
or
adc
adcl
xchg
lret
shrb
lock
or
mov
sbb
jno
adc
push
sub
pop
adc
lcall
mov
test
mov
lahf
mov
cmp
repz
push
outsl
mov
pop
inc
push
mov
mov
or
jbe
mov
sub
jae
mov
jl
cmp
int
scas
rolb
push
test
inc
in
xchg
inc
jmp
adcl
push
sbb
cwtl
rclb
dec
jbe
out
xor
lahf
cltd
hlt
xor
icebp
sbb
pop
insb
xchg
in
sub
adc
xchg
mov
and
sbbl
adcb
pop
push
call
xchg
cmp
jmp
xor
pushf
jne
adc
sti
js
pop
adc
repnz
ret
add
rolb
hlt
cmc
std
aas
in
jno
fadds
sti
aas
add
into
cmpsb
add
push
ret
out
mov
nop
xchg
loop
test
cmp
lock
sub
mov
movsb
cmovno
enter
sbb
adcl
ljmp
loop
and
push
clc
adc
insl
popf
jp
test
dec
xchg
add
insl
push
push
inc
mov
movsl
in
dec
mov
insb
ffreep
xchg
jge
mov
adc
or
mov
iret
mov
inc
dec
arpl
lea
leave
sti
getsec
ss
mov
ss
mov
mul
jg
sahf
bound
pop
fcomi
xchg
pop
ja
hlt
dec
and
ret
andl
fistl
aaa
add
pushf
fdivs
mov
dec
adc
inc
loopne
sbb
and
mov
loop
fbld
into
dec
int3
push
sbb
cmpsl
daa
fsts
cmp
stc
mov
int3
shll
xorl
repz
insl
dec
out
je
pop
cld
jmp
pop
adc
pop
dec
jg
sub
push
jg
pop
lods
ja
jmp
dec
movsb
out
and
push
sbb
sti
leave
push
xor
cwtl
cmp
inc
lret
xor
mov
push
je
ret
jg
sbb
push
repnz
jnp
sbb
jle
pop
popf
cmpsb
mov
shlb
lret
test
or
rolb
cmp
jmp
imul
dec
xchg
mov
mov
xchg
insl
dec
xor
dec
test
push
into
repnz
rorl
dec
and
xchg
rcrb
and
push
out
and
int
xor
xor
fcoml
stos
test
lds
or
imul
pop
push
jecxz
jnp
jns
mov
push
shrl
sub
das
mov
jnp,pn
int3
jb
and
test
mov
ret
push
pop
scas
mov
push
sub
xchg
pop
and
es
mov
leave
xchg
clc
jne
add
int
jno
ljmp
fisttps
fists
inc
lods
cmp
std
sub
insl
sti
popf
add
bnd
scas
inc
inc
jne
push
xchg
mov
addr16
aas
add
int
dec
ret
aad
aam
push
popaw
hlt
jp
test
lock
mov
shr
push
pop
or
bound
enter
fistpll
insl
outsb
or
or
outsb
loopne
fstpt
add
adc
pop
xchg
lahf
adc
cmpsb
ss
es
xchg
and
rcll
das
and
mov
push
mov
nop
stc
pop
repnz
out
xlat
add
mov
ret
aam
jle
add
test
pop
sub
sti
adc
pop
shlb
xchg
push
push
je
sub
les
lcall
loopne
jb
and
sub
ss
aad
out
and
mov
les
idiv
int3
aaa
outsl
clc
xchg
sahf
js
xorl
dec
fildl
hlt
cwtl
mov
into
add
xchg
mov
mov
divb
or
dec
jae
pop
dec
mov
outsl
js
sarl
mov
idivl
cwtl
shlb
jge
xchg
stos
sub
push
push
dec
repz
in
xor
data16
outsl
add
in
push
mov
cwtl
xchg
test
add
es
mov
repz
test
xor
and
adc
mov
fs
fdivs
addr16
daa
xchg
mov
push
sub
sub
sbb
mov
inc
mov
enter
cmp
loopne
mov
pop
out
cld
mov
pop
push
test
xchg
imul
mov
sub
fwait
shr
and
xor
repz
test
fcomps
sub
daa
push
or
push
insb
cmp
int
mov
pop
es
xchg
dec
cmp
xor
cld
sbb
jne
imul
pop
pop
loope
stos
pushf
and
aas
cmp
xchg
cli
pop
xchg
hlt
stos
mov
jne
je
inc
sti
fcmovu
sub
push
aaa
jge
inc
iret
pop
insl
jge
sti
push
and
lahf
push
cmp
mov
cmpsl
jae
xor
test
aam
inc
mov
jge
rcr
mov
sub
adc
test
sub
jne
mov
test
int
xor
or
sahf
outsl
test
sbb
inc
fildl
inc
scas
push
mov
mov
mov
and
bound
inc
aad
enter
mov
lcall
repz
orl
mov
xchg
mov
sahf
xorl
test
jo
cmp
stc
in
sbb
nop
es
or
ret
loop
aam
int
out
xchg
mov
in
and
sbbl
mov
and
pop
hlt
xchg
mov
push
jmp
fbstp
inc
cmpsb
pop
aas
adc
dec
cld
ret
xchg
faddl
je
hlt
adc
in
adc
int
cmpsl
cld
stos
mov
add
rorb
aad
mov
je
cmp
push
movsb
inc
xor
mov
in
and
push
adc
mov
bound
movsb
push
jno
jbe
inc
jecxz
roll
push
notl
test
mov
fidivrl
out
mov
and
pop
add
mov
aad
dec
outsl
jne,pt
push
jle
push
popf
xlat
jg
jae
adc
sub
iret
xchg
mov
adc
inc
ja
leave
lret
sbb
or
imul
adc
mov
mov
test
push
aad
sbbb
mov
out
mov
push
jg
xchg
mov
inc
sub
mov
sar
mov
in
xchg
enter
arpl
sbb
jmp
pop
je
pushf
add
cmp
lock
dec
jge
mov
pop
pop
push
push
repz
push
inc
scas
push
mov
pop
mov
add
sahf
pop
rol
push
xor
rorl
pusha
xchg
rcrb
dec
movsb
xchg
lods
and
jl
mov
push
imull
cld
jnp
int
sbbb
pusha
mov
dec
or
incl
loope
sti
cmp
ret
data16
cltd
jb
test
pop
jl
clc
clc
sub
xchg
rcrl
inc
cmp
adc
jg,pt
pop
stos
dec
addr16
pop
sarl
add
ja
fsubs
sbb
movsb
push
mull
mov
mov
fnstsw
or
pusha
and
jmp
inc
int
inc
das
mov
xchg
add
mov
shlb
mov
sbb
sub
enter
dec
cmpb
jae
mov
xor
jae
int
and
sub
adc
mov
inc
mov
jnp
push
das
xchg
mov
pushf
jge
add
mov
xchg
out
dec
addr16
out
and
sbb
xor
xchg
or
adc
push
mov
repnz
mov
fdivs
push
add
cli
dec
int
inc
roll
pop
fwait
mov
imul
or
pop
leave
sbb
mov
mov
mov
cmp
cmpsl
xchg
xchg
inc
jae
jecxz
repnz
cmpl
imul
xchg
or
icebp
inc
daa
lods
outsl
out
fnstenv
pop
mov
test
scas
leave
cmp
fstpl
movsb
cld
sub
arpl
mov
cltd
stos
test
mov
pop
or
inc
lods
aad
sbb
mov
push
sbb
jmp
divl
add
movsl
pushf
sbb
std
xchg
mov
mov
loop
dec
add
jno
es
ja
or
or
sub
fiaddl
mov
pop
mov
test
jnp
jbe
xchg
test
sbb
sqrtps
inc
jae
mov
and
sub
repz
cmpl
add
pop
mov
push
repz
int3
ffree
addl
repnz
lds
stos
jp
dec
adc
icebp
pop
pop
cmp
xlat
filds
add
mov
bound
inc
mov
add
push
sti
push
jmp
add
mov
pop
negb
cwtl
les
pop
out
xchg
jae
xor
cmp
pop
mov
cwtl
psubsw
ds
mov
out
mov
cli
addr16
mov
push
mov
iret
sahf
lock
fisttpll
xchg
lock
mov
jo
lahf
ja
jns
add
or
sarb
aaa
fs
ret
sbb
mov
adc
fs
sbb
add
mov
das
mov
mov
xchg
loopne
inc
mov
mov
div
inc
roll
push
or
lods
dec
rcrl
fsubrp
nop
mov
repnz
icebp
cmpb
push
test
dec
popa
shr
outsl
int3
aam
cmpsb
cld
jb
shlb
fldcw
fnstcw
lcall
arpl
ret
xor
pushf
xchg
cmp
dec
rcrl
jne
pushf
mov
stos
mov
pop
vpextrw
lds
icebp
cmpsl
ficompl
inc
inc
push
push
adc
jg
xchg
inc
stos
pusha
or
sub
pop
das
loop
jl
push
aam
lea
pop
shlb
inc
insb
in
mov
cmp
push
test
xchg
mov
fucom
lods
push
outsl
into
jle
mov
das
sbb
insb
inc
push
aas
jns
lret
imul
adc
scas
mov
insl
insb
into
dec
cwtl
cmp
sti
sahf
jg
or
sbbb
pop
mov
xchg
fcomip
xchg
fnstsw
cmc
cmp
rorl
lea
mov
in
xor
inc
stos
mov
lret
aaa
rol
push
outsl
inc
scas
mov
test
inc
mov
sub
pop
push
dec
pushf
mov
test
or
mov
pop
je
or
outsb
inc
subb
stc
sbb
pop
jle
dec
mov
in
dec
imul
dec
fistps
add
mov
add
in
outsl
jae
je
lds
inc
mov
and
inc
mov
bound
andb
imul
repnz
xor
into
adc
nop
push
sub
push
out
xchg
div
dec
es
or
push
dec
pop
mov
adc
stc
jl
sub
mov
inc
sbb
jns
cltd
nop
mov
jae
lock
xchg
loopne
mov
add
xchg
cmp
sub
out
cmpl
addb
repnz
mov
sbb
fmuls
xchg
mov
push
cld
mov
pop
inc
push
and
push
insb
out
lds
pop
mov
push
fs
cmp
dec
cmp
shrl
sbb
jmp
movsl
lds
push
push
push
push
xor
add
jmp
push
pusha
bound
out
jo
mov
repnz
pusha
rorl
jle
push
inc
movsb
push
movsl
cmp
mov
out
xchg
fcoms
pop
insl
pop
mov
cmp
inc
movd
xor
in
mov
or
repnz
push
pop
lret
inc
sub
inc
clc
lods
ss
sub
pop
inc
icebp
jnp
insl
jge
jp
roll
popa
div
pusha
add
cmpsl
fwait
xchg
sti
ret
adc
adc
movsb
jnp
aam
or
mov
xorl
in
bound
rolb
lcall
push
adc
or
iret
mov
cmp
mov
inc
std
in
push
add
rcr
imull
push
repnz
sbbl
test
enter
aad
sub
dec
std
push
outsb
push
jo
lahf
jle
push
jnp
scas
inc
push
bound
push
push
mov
leave
sbb
repnz
sarb
int3
sar
aam
pop
adc
dec
fsts
xor
gs
jl
jbe
and
jl
cmp
mov
mov
mov
sbb
mov
mov
loop
jb
rolb
xor
cmp
mov
lods
imul
dec
sbb
daa
add
xor
pop
daa
scas
add
pop
mov
inc
sub
loopne
sarl
enter
mov
sub
xchg
out
push
pop
loope
lret
mov
lea
pushf
addr16
jo
imul
movsb
lret
test
ljmp
cmp
xchg
xor
aas
arpl
movsb
cmpsl
mov
pop
in
xor
inc
test
jecxz
pop
not
orb
pushf
or
inc
inc
hlt
dec
dec
pop
ja
sti
dec
ja
fs
jg
push
les
dec
mov
gs
inc
in
inc
inc
lahf
call
sbb
loopne
ret
pop
xor
imul
js
outsb
push
jge
push
insb
repz
std
leave
cmp
xchg
mov
fs
lea
fldenv
push
stc
add
inc
sti
in
int3
sub
mov
xchg
call
add
jl
pop
icebp
mov
mov
mov
ljmp
lods
cld
mov
in
divb
inc
pop
sarl
xor
mov
mov
adc
jb
nopl
xchg
add
xlat
out
jbe
sub
mov
gs
movsl
inc
aaa
call
and
roll
jle
mov
inc
xchg
xor
sti
shrb
insl
pop
mov
shll
cmp
lahf
rclb
sub
scas
sub
mov
push
jnp
add
inc
inc
lret
mov
mov
and
inc
or
dec
jle
add
push
mov
inc
test
or
icebp
dec
xchg
mov
das
sbb
add
push
jmp
jle
add
scas
sub
mov
adc
mov
xchg
sub
jmp
dec
aaa
add
iret
cld
shll
imul
call
sbb
and
out
xor
fdivr
stos
fsubrl
jae
pop
in
out
cmpb
fcoms
and
jecxz
shlb
cmpsl
adc
or
dec
adc
aam
adc
out
stos
jae
xchg
xchg
cmp
repz
mov
daa
clc
shrb
push
cmc
push
xorb
mov
mov
imul
adc
push
out
fists
push
in
repnz
xor
subl
push
rcl
sbb
xor
fsubr
xchg
stos
sub
repnz
inc
out
in
dec
cwtl
pop
dec
dec
cmp
pop
inc
popl
aam
mov
add
out
lret
mov
testl
sbb
xor
add
movsl
or
cmp
movzwl
es
fs
mov
xchg
lods
and
sbb
add
add
int3
aas
push
pop
fs
arpl
xor
pop
xchg
xchg
cld
xchg
inc
xchg
inc
add
sub
inc
pop
sub
shrb
fcmovnu
adc
pop
addr16
mov
popa
push
mov
js
out
sbb
sub
sub
ss
adcb
aaa
add
mull
or
pop
rcr
gs
and
sbb
out
mov
adc
pop
pop
cmc
cltd
or
push
mov
dec
cwtl
test
jge
mov
jae
add
sbbl
sahf
fsubl
xchg
pop
sbb
xor
cmp
inc
repz
mov
cmpsb
ja
push
cmp
xchg
je
or
dec
int
xchg
lds
cmp
arpl
js
cmp
pop
add
jb
out
jmp
outsl
aad
fwait
incb
in
lds
jb
ljmp
push
push
orb
js
mov
loop
adc
stc
push
call
loope
test
out
ljmp
dec
lret
cmpsb
sub
lcall
mov
add
sbb
mov
pop
into
sbb
add
sub
out
mov
jne
jl
or
test
sub
inc
movsb
push
push
shll
sti
out
xor
jmp
out
rcrl
jae
lret
mov
push
mov
push
es
mov
scas
loop
cmp
xor
mull
mov
int
xor
sbb
adc
jecxz
repz
dec
adc
or
fwait
repnz
test
pop
mov
xor
scas
or
hlt
jmp
pushf
popf
test
popf
jne
sbb
lret
mov
aam
rcr
mov
jmp
in
cmp
add
test
imul
jge
mov
or
scas
stc
or
sub
adcb
and
mov
pop
lcall
inc
out
mov
and
xor
fisttps
xor
stos
aam
sahf
inc
hlt
mov
ljmp
jnp
lret
xchg
out
jno
cmp
push
mov
and
leave
push
hlt
insb
loopne
ljmp
push
lret
lret
or
add
ret
mov
sub
pushf
xchg
imul
xchg
mov
xchg
push
stos
test
mov
fs
inc
inc
lret
mov
dec
adc
scas
aas
pusha
clc
inc
mov
mov
mov
pop
pop
aaa
leave
mov
pop
fiadds
sub
repnz
push
push
aam
cmpb
mov
roll
fs
clc
inc
inc
sub
push
push
ss
and
push
in
sarb
lea
sbb
imul
flds
add
jnp
or
nop
fstp
or
dec
mov
and
fs
pop
sub
cmp
js
sbb
cmpsl
in
repnz
xchg
arpl
xchg
sub
repz
test
repz
xchg
fs
sqrtps
mov
mov
jbe
enter
xlat
gs
subb
sub
xchg
mov
jo
cmpsl
push
cwtl
sbb
xchg
mov
out
add
movsb
push
repnz
dec
mov
sub
mov
and
lods
jno
jle
stc
divl
fisttpl
adc
push
adc
ljmp
pusha
pop
adcb
xor
cmp
aas
neg
adc
mov
test
out
out
subb
testl
leave
lahf
hlt
xor
movsl
jmp
call
pop
sbb
fwait
cmp
mov
adc
push
sbb
adcl
jns
mov
sub
iret
mov
das
jecxz
out
in
xchg
add
stos
repz
jecxz
sub
sub
jno
jle
ret
in
mov
loop
into
icebp
mov
rolb
mov
out
or
push
cld
xor
cmpl
movsl
or
bswap
or
mov
dec
loope
cmp
jecxz
mov
pop
inc
and
lock
aad
movsb
sub
js
fdivrl
loop
cmp
push
mov
xor
inc
sbbb
lret
and
jae
lea
xchg
inc
mov
pop
jne
push
lock
inc
hlt
int3
push
inc
push
rclb
xor
pop
rorl
push
xor
pop
cmp
insl
shll
nop
inc
inc
xchg
sub
shrb
inc
je
push
cmp
or
push
ljmp
stos
in
cmp
pop
sbb
add
stos
mov
cmp
inc
fidivrs
mov
jle
mov
aad
xchg
mov
fdivrl
test
push
hlt
pop
xchg
push
mov
lcall
xchg
or
push
jp
xchg
cwtl
mov
lret
lret
int
pop
pop
inc
push
sbb
pop
stc
pop
popf
cmp
outsb
ss
std
ror
stos
dec
aad
pop
fs
adc
mov
and
hlt
adcb
in
fnstcw
add
lds
and
js
pop
popf
push
push
pop
popa
xlat
add
inc
imul
jecxz
shll
test
pop
and
data16
xchg
adc
addr16
xchg
jo
lahf
jo
mov
nop
dec
fisubs
jp
and
popa
push
das
jno
sub
outsb
movsb
xor
push
cmp
rolb
or
stos
cmp
pop
bound
push
pop
cmp
dec
lock
shlb
ja
sbb
sbb
fldcw
dec
call
mov
pusha
xor
or
in
test
mov
cmp
mov
and
inc
adc
out
and
ja
insl
adc
dec
sbb
mov
aas
jecxz
mov
cmp
hlt
or
or
jecxz
push
cli
je
out
cwtl
cs
roll
icebp
push
jle
sub
cli
int
jb
aaa
xlat
aam
test
add
imul
ret
pop
xor
hlt
cs
movsl
xchg
shlb
call
test
shlb
or
sub
jecxz
jns
in
sbb
fldt
jae
jne
int3
dec
sbb
insl
daa
insl
decb
mov
int
mov
and
int
out
fcoms
sti
inc
xlat
jg
scas
es
into
mov
movsb
xlat
pop
xor
push
jns
mov
adc
pop
mov
dec
call
push
dec
push
xchg
pushf
lods
adc
gs
cmp
mov
test
push
inc
inc
test
lods
jg
or
repnz
and
xchg
movsb
sti
in
sub
ror
dec
pop
inc
ret
nop
mov
mov
pop
cmp
xor
mov
xor
rep
rcrw
cwtl
mov
repz
mov
jp
in
add
and
pop
movsl
fisubs
and
nop
xchg
pop
push
ret
hlt
pusha
add
insl
scas
xor
movsb
xor
or
or
push
sub
ror
jecxz
jnp
xor
popa
xchg
or
lods
int3
xchg
sbb
loope
and
xor
pop
dec
cmp
fidivrs
sbb
xchg
stos
inc
cmp
hlt
gs
jno
xchg
add
adc
push
jmp
scas
out
aaa
or
inc
sbbl
ja
mov
fildll
mov
outsl
mov
lods
mov
std
mov
add
aas
pop
jne,pn
or
repz
or
ret
lret
or
popf
andl
movb
inc
xchg
gs
push
inc
stc
rcl
adc
cwtl
sub
mov
loopne
mov
mov
mov
cmp
sahf
setle
sub
das
sti
lret
cmp
jmp
or
in
hlt
mov
mov
insl
gs
and
and
sub
ret
add
test
rorb
jae
sbb
cmc
aad
rolb
mov
adc
lret
sbb
jne
sub
pop
arpl
movsb
ficomps
push
dec
imul
lods
adc
inc
pop
or
xor
mov
sarb
mov
and
xor
sbb
cmp
dec
sub
jnp
out
hlt
dec
cmp
lret
outsb
stos
fs
cmp
arpl
shl
dec
js
mov
cs
and
xchg
test
add
lock
adc
repnz
sbb
push
out
push
add
lahf
pusha
push
popl
mov
mov
stos
xlat
std
dec
adc
shl
pop
ret
xor
aad
sub
test
cmp
or
or
data16
sarl
or
bound
test
sub
les
inc
mov
sub
cs
xor
lret
push
lret
inc
lret
xchg
pop
xchg
fwait
dec
icebp
cmpb
xchg
dec
and
stos
dec
shr
orb
sti
and
xchg
add
cmpsl
sbb
add
ljmp
lret
xor
push
adc
xor
stos
cmp
dec
jp
pop
popf
mov
into
rorb
lods
jnp
sub
push
popf
dec
push
shlb
flds
sahf
insl
ja
mov
mov
push
dec
jg
pop
pushf
jmp
pop
mov
test
imul
jmp
loope
cmp
sbb
rcll
test
imul
mov
mov
mov
pop
push
mov
insb
stc
pop
pusha
mov
dec
mov
jecxz
or
roll
jne
dec
into
ljmp
lahf
xchg
leave
cmp
ds
lds
pop
dec
add
adc
and
jae
fs
jg
xor
lock
jecxz
inc
clc
pop
mov
arpl
dec
outsl
das
shll
jnp
push
sub
int3
lock
dec
add
data16
xor
add
icebp
sbb
mov
push
in
xchg
cs
inc
out
js
sbb
lea
or
aam
xor
mov
dec
xchg
cs
or
push
fmul
mov
sbb
sbb
dec
push
popf
sbb
mov
and
adc
das
jno
mov
cld
cmp
jmp
lds
xor
sub
mov
lea
mov
es
push
pop
and
stc
xor
xlat
into
xor
xor
cmp
dec
jb
rcr
add
imul
xor
mov
or
pop
xchg
xchg
jle
xchg
mov
into
pop
mov
xchg
imul
push
lahf
lock
push
jecxz
push
fwait
sbb
ja
pop
cmpsl
popf
outsl
and
imul
in
in
hlt
push
cmp
mov
cmp
ja
daa
rclb
out
andb
adc
sbb
lock
add
push
push
add
adc
jno
push
push
je
dec
add
lock
and
sub
mov
mov
push
or
es
xor
mov
into
mov
mov
cmpsl
mov
rcr
mov
xchg
jae
dec
insb
test
xor
pop
sbb
jbe
mov
or
repnz
cs
mov
in
bound
mov
jae
jecxz
xor
mov
data16
popf
mov
jne
mov
outsl
loope
ror
pop
adc
jge
je
adc
rcr
or
adc
cmp
sbb
in
jl
loopne
jne
mov
jg
lds
lods
int
inc
mov
mov
insl
ficomps
mov
out
fdivs
subb
data16
pop
clc
xchg
inc
xor
lods
push
call
jmp
jecxz
adcl
xor
mov
daa
psraw
and
and
push
movsb
pop
mov
in
icebp
out
jns
and
push
or
rcrl
xor
repnz
mov
sub
clc
imul
inc
cld
cltd
rcl
sbb
mov
dec
movsl
add
int
lahf
mov
sub
pop
xor
add
pop
lcall
add
push
out
pop
pusha
fstpt
jmp
fistpll
pop
faddl
out
lods
mov
and
dec
movsl
sbbl
xor
lcall
jae
sub
and
xor
inc
jo
in
gs
popf
pushw
jns
inc
pushf
lds
jnp
ret
sub
adc
cmpsb
jns
mov
add
adc
ja
mov
or
daa
jle
cmp
mov
neg
cmp
icebp
push
rcll
scas
dec
jns
xchg
cmp
sahf
mov
daa
jo
jns
lock
js
jp
dec
mov
sbb
test
fdivrl
in
ret
xor
in
es
pop
sbb
cmpsb
cmc
jg
push
mov
iret
dec
mov
lcall
add
cli
or
xchg
cmp
mov
repnz
lret
mov
pushf
adc
inc
in
mov
enter
inc
jle
inc
mov
test
add
and
jl
or
cmp
mov
aad
mov
ss
shlb
sbb
inc
dec
scas
sbb
lock
or
loope
andl
out
pop
leave
lcall
nop
cmpl
orb
lret
push
into
push
lret
mov
aad
fwait
je
aaa
test
cmpsl
daa
dec
cmp
sub
mov
mov
sbb
dec
rcll
sbb
hlt
cmc
mov
rcl
sbb
fiaddl
sbb
fsts
pusha
and
and
and
or
cmc
or
js
mov
adc
scas
rcrb
fwait
pushf
aaa
xchg
std
push
and
ljmp
mov
mov
sbb
add
cwtl
mov
out
ja
into
popf
dec
ror
repz
int3
repz
push
cmp
lahf
jb
jge
cltd
or
jae
or
cmp
add
cmpsb
jp
sahf
aaa
shl
les
mov
push
xchg
btc
mov
pop
push
loop
cmp
addr16
dec
and
pop
repnz
dec
xor
insb
xchg
fwait
outsl
mov
outsb
icebp
mov
sub
clc
add
mov
lret
gs
and
push
pop
adc
and
sub
ds
or
dec
pop
outsb
mov
and
or
inc
lods
push
jnp
xchg
mov
es
pusha
pop
lret
jle
dec
add
in
mov
mov
sub
mov
mov
pop
das
push
adc
loop
cmpsl
nop
cmp
ja
mov
fldenv
inc
mov
sbb
insb
mov
popf
sub
or
xchg
mov
in
clc
xchg
icebp
out
jg
rorb
shlb
inc
mov
fwait
pop
push
adc
push
xchg
and
es
stos
or
testb
xchg
push
lcall
add
mov
pop
insb
sbb
jno
add
mov
rorb
mov
adc
adc
xchg
repz
repz
and
lahf
nop
jge
out
jno
int3
ljmp
in
fwait
xor
sbb
sbb
cwtl
stos
imul
mov
push
add
iret
lahf
js
decl
iret
out
data16
jbe
insb
fucomp
test
xor
push
call
bound
imul
in
adc
cmp
jno
call
call
push
loopne
mov
leave
mov
xor
xchg
cmp
mov
push
mov
loopne
push
sub
xor
cmpsb
cli
jb
incb
cmp
xchg
test
pop
mov
js
stos
icebp
cmpsl
cmp
imul
pop
leave
aas
add
in
push
mov
add
dec
sti
add
jne
nop
mov
gs
test
add
cmp
xchg
insb
mov
stos
jmp
iret
sub
aad
and
dec
mov
pop
movsl
xchg
xor
jbe
mov
pop
sub
mov
filds
outsl
xchg
out
sbbl
or
pop
int
pop
sbb
inc
dec
xchg
imul
xchg
add
and
std
notb
cli
pop
add
clc
sar
sub
push
aaa
adc
dec
xchg
or
ret
in
mov
dec
dec
js
test
arpl
fldcw
xor
push
or
add
dec
dec
and
xor
jge
sbb
jmp
lret
lods
xchg
cmpsb
les
lods
and
iret
hlt
clc
sahf
movsl
ja
int
das
push
sub
mov
mov
sub
fcoml
cmp
sbb
mov
mov
mov
test
sbb
scas
scas
xor
mov
pusha
add
sbb
jl
inc
xchg
push
pop
pop
push
mov
xor
orl
fimuls
add
xchg
and
addr16
shlb
mov
cmp
dec
cmpsl
daa
cmpsb
lea
dec
cmp
inc
ret
shll
loop
mov
shlb
and
sub
jnp
in
lea
sti
push
nop
stc
xor
pop
add
loope
push
jecxz
scas
or
fs
pop
jg
in
dec
les
cmp
xor
inc
mov
aas
js
rclb
inc
cmpsl
rorl
and
inc
adc
xor
push
clc
lods
das
popa
add
cmp
mov
out
mov
push
inc
lcall
aad
cmpsl
jmp
pop
ds
inc
push
add
ds
pushf
outsl
jne
xchg
cmp
cmp
or
adc
sbb
and
enter
movsb
call
ficomps
pop
ljmp
pushf
in
mov
lods
rcll
mov
sbb
inc
jns
fdivs
jle
fbstp
ljmp
pusha
fisubs
mov
push
lea
pop
fsubl
mov
push
jo
xor
xchg
cmp
dec
pop
inc
xchg
sbb
pop
in
inc
pushf
dec
push
mov
lods
push
orb
jle
jo
push
and
xchg
inc
rcpps
pop
in
inc
movsb
push
adc
je
adc
lea
lock
add
aam
xchg
hlt
mov
xchg
adc
cli
test
dec
add
mov
lret
jne
stos
insl
cmp
mov
mov
dec
adc
mov
mov
movsl
adcl
xlat
leave
int3
sahf
pop
cmp
test
loope
sti
ds
cmp
arpl
xor
addr16
dec
int
jl
mov
call
jecxz
adc
insl
stos
cld
fcoml
lahf
jnp
imul
mov
fwait
inc
cltd
je
jg
addl
jo
pop
add
add
out
out
adcl
jmp
pop
cmp
test
gs
aaa
xchg
imul
push
lock
jmp
xor
push
or
mov
sub
xor
subl
out
das
mov
xchg
push
or
mov
roll
lods
adc
pushf
jp
jg
cmp
pushl
add
mov
mov
in
mov
adc
adc
das
loop
pop
add
mov
inc
fwait
jmp
retw
ja
gs
loope
cmp
xchg
and
filds
cmp
xor
stc
push
add
mov
les
or
sub
cltd
push
adc
mov
es
sbb
jge
dec
pop
scas
or
cli
mov
xchg
sbbb
mov
gs
cmpsb
jne
and
nop
dec
rcrl
cmp
js
fwait
dec
jge
mov
push
xor
jg
mov
repnz
enter
bound
clc
cmpsl
mov
stc
movsl
push
stc
fbld
xchg
jg,pt
pop
push
adc
outsl
out
push
mov
mov
mov
adc
lods
jmp
sub
fxch
out
pop
clc
jge
jb
jge
or
insl
movsl
xchg
and
lahf
mov
xchg
data16
js
add
sbb
pop
pop
ds
pop
inc
cmp
jp
in
call
stos
les
out
das
or
sbb
mov
push
mov
into
vmovntdqa
xor
inc
lret
lods
and
xor
mov
or
cmpsl
dec
mov
mov
sbbb
addr16
mov
aad
rcll
icebp
arpl
rcrl
hlt
repz
int
into
mov
add
out
add
shrb
and
lcall
aad
call
mov
imul
aad
lods
fmuls
xor
mov
xlat
lods
aad
and
sbb
fs
lret
inc
push
out
push
sti
aam
cmpsl
push
fcoml
cmpsl
push
mov
sbb
cltd
mov
xchg
ret
sub
push
fadd
pop
dec
sarb
outsl
rol
add
je
imul
mov
popa
andb
mov
addb
jae
cmp
icebp
loop
sub
and
popf
or
pop
and
inc
pop
jbe
lahf
je
dec
and
popa
mov
orl
mov
mov
xlat
fistpll
mov
and
cmpsb
add
lret
cmp
icebp
and
add
mov
push
adc
cmpsl
loopne
jnp
xor
push
mov
mov
or
cmp
test
mov
stc
xor
ret
out
sub
pop
add
mov
cmp
pop
push
aam
push
in
in
mov
fnstcw
jns
rcl
mov
fs
pop
or
pop
pop
or
jne
test
add
mov
pusha
cs
scas
fmull
inc
jmp
dec
sub
sbb
pop
dec
xor
testl
shrb
leave
aad
lahf
out
xchg
push
xor
add
out
dec
xchg
push
xchg
pop
test
jl
outsb
cmp
dec
leave
mov
jl
xor
leave
xchg
xor
and
loope
mov
fwait
sub
mov
nopl
nop
xchg
jge
imul
out
xor
aas
sarl
add
xor
daa
mov
daa
dec
addr16
pop
cmp
xchg
movsl
test
mov
out
cmp
xchg
sub
ficompl
inc
xor
je
cld
push
pop
lea
imull
jmp
test
inc
push
dec
dec
mov
stos
adc
mov
outsb
rcll
sahf
into
outsb
lahf
in
loopne
lods
or
or
notl
jecxz
mov
std
jecxz
int
mov
add
int3
pop
mov
sbb
inc
popa
push
insb
pop
in
push
shl
jns
das
mov
push
sub
je
sbb
int3
add
data16
in
cmp
mov
stos
dec
cmpb
das
adc
xor
out
faddl
xorl
inc
dec
mov
sub
or
adc
pusha
push
jae
repz
mov
lods
data16
mov
push
xor
in
je
arpl
sbb
sbb
and
fldenv
ret
inc
xchg
adc
jbe
mov
mov
gs
or
adcl
repz
and
xor
mov
aaa
push
imul
jmp
out
inc
cmp
adc
jg
faddp
mov
addl
xor
pop
push
jecxz
hlt
in
cmp
xchg
dec
lock
aad
leave
std
imul
cmp
ljmp
stos
cmpsb
dec
sub
sub
popf
xor
mov
push
and
je
insl
loopne
xchg
cmp
call
in
add
and
clc
insl
mov
mov
push
pop
inc
and
leave
mov
rcll
mov
mov
push
clc
ret
in
jb
cmpsb
push
mov
add
fcom
sbb
mov
sti
xchg
push
sub
mov
jae
lret
lods
push
jns
push
adc
das
xor
push
xor
in
jno
and
call
popa
bound
test
rorl
rol
ret
mov
pop
mov
and
push
out
test
pushf
adcl
push
dec
mov
js
mov
adc
push
add
repz
fsubl
daa
cmp
outsb
insb
xchg
sbb
or
lock
and
fcompl
jge
mov
dec
cs
faddp
lret
pop
and
or
sbb
sbbb
ret
ds
popf
inc
push
dec
lock
mov
adc
xlat
cmp
sub
mov
pop
in
out
or
pop
xchg
pop
add
adc
jno
push
fcoms
push
aad
add
push
adc
sub
daa
jns,pt
in
adc
dec
sbb
ficoms
or
incb
cmpsb
nop
sbb
dec
lahf
popa
dec
push
inc
adc
popf
test
xchg
popa
pop
dec
lfs
xchg
cmp
iret
les
dec
push
or
push
fst
rcrb
dec
and
adc
jg
lcall
int
pushf
lods
push
xchg
sbb
dec
push
xchg
lret
push
outsb
xchg
notl
in
js
sub
sbb
jbe
out
mov
enter
mov
mov
fld
into
aas
jae
out
push
fisubrs
dec
mov
jg
fisubrs
dec
repnz
dec
or
cmpsb
arpl
ds
sub
sub
mov
xchg
push
aaa
data16
xchg
inc
outsb
mov
sbb
cmp
stc
ljmp
jo
xorl
push
in
or
pop
fiaddl
inc
stc
cmp
pop
pop
dec
jno
into
ror
stos
outsl
addr16
loope
test
cltd
sbb
int3
cmp
sub
dec
sbb
mov
mov
out
pop
or
mov
jne
adc
es
scas
sub
out
inc
addr16
aas
or
std
inc
jb
cmp
inc
test
in
out
int
inc
ja
stos
dec
sbb
inc
adc
xchg
pop
clc
lods
xchg
mov
idivb
ss
add
dec
rcrl
lahf
mov
enter
in
insl
imulb
pop
pop
mov
xorl
push
jnp
leave
pop
fidivl
gs
mov
loop
and
aam
mov
fcmovne
jmp
xchg
and
out
rcr
inc
mov
iret
orb
enter
ljmp
xor
lds
call
sbb
sti
push
pop
rclb
sbb
fadds
mov
in
fwait
and
jg
or
mov
es
inc
push
scas
cld
jmp
hlt
mov
mov
dec
mov
mov
hlt
mov
push
pop
push
imul
pop
mov
adc
cli
ss
sub
add
addr16
addl
adc
mov
in
dec
insb
or
outsb
add
xor
cwtl
out
push
fwait
push
add
hlt
icebp
add
out
mov
cmp
sbb
fmuls
enter
pop
xor
xchg
iret
mov
mov
stos
xchg
cwtl
movsb
xor
add
dec
mov
imul
or
in
cs
sbb
cmp
fistpll
jb
shrb
or
stos
mov
repz
sbb
outsb
lods
test
mov
test
jecxz
popa
xchg
popf
fistl
imul
jmp
lret
lods
out
clc
loopne
mov
adc
loope
xor
cwtl
movsb
dec
jmp
pop
sbb
mov
mov
cmp
decb
mulb
jo
mov
push
dec
cltd
repnz
and
test
sub
jb
xchg
repnz
insb
nop
fs
mov
rcll
or
lds
data16
ja
xor
popl
pop
add
dec
lock
cmp
lcall
pop
shlb
sub
aas
jae
pop
push
nop
pop
mov
inc
pop
push
adc
movsb
mov
jg
in
xchg
jb
or
dec
jle
jnp
shll
dec
mov
dec
ds
jg
mov
sub
push
xchg
movl
push
xchg
call
insl
fcom
push
arpl
inc
push
dec
xor
es
ds
xor
pop
jae
jecxz
mov
xchg
adc
movsb
mov
sbb
adcl
movsl
jmp
add
outsb
in
dec
cwtl
mov
push
mov
pop
or
popa
jnp
loopne
pop
cli
jg
popf
cmp
jp
adc
adc
jg
mov
xchg
jbe
add
sub
xchg
jae
mov
leave
jle
xchg
push
sub
outsb
int
cmc
xchg
call
clc
pop
mov
cmp
std
adc
outsb
rorl
out
adc
mov
into
xchg
cmp
adc
mov
adc
sbb
dec
cli
shrb
in
enter
loop
pop
mov
lahf
dec
sub
lret
cmpsl
repnz
adc
std
js
adc
loopne
mov
jae
jne
pop
mov
out
jnp
jecxz
in
jle
out
jns
xor
ret
jge
popl
or
fisttpll
in
out
inc
xor
cwtl
jecxz
lods
loopne
icebp
add
xchg
sbb
ret
out
pop
cmp
mov
xor
xor
xchg
dec
pop
pop
test
inc
popf
mov
imul
stos
mov
push
mov
push
testb
out
and
add
pop
pop
cli
pop
pop
ljmp
in
push
repnz
jb
imul
xchg
jae
sub
push
addl
jnp
pop
push
aam
push
mov
pushf
ja
pop
subl
pop
push
jns
lds
scas
loop
je
and
xchg
cmp
jg
imul
ss
test
insl
add
xchg
imul
mov
repnz
xchg
cli
sarl
lock
out
cmpb
xor
lods
arpl
das
jno
push
adc
js
xchg
fldenv
shlb
insw
ss
data16
dec
xchg
pop
and
jnp
outsb
adc
and
or
out
out
rcl
jnp
das
xchg
dec
xlat
in
fimuls
pop
leave
ja
imul
sarl
ds
iret
pop
adc
cli
pop
cld
sbb
cmp
sub
imul
sub
out
mull
in
jno
dec
add
mov
fidivl
xchg
xor
sub
pop
outsb
xlat
xor
fsubrs
stc
popa
xor
jle
fs
add
pop
add
inc
rclb
jno
into
cmpsb
jns
dec
mov
mov
stc
mov
rcll
jns
in
lods
rorl
cwtl
scas
cmpsl
mov
ss
or
push
and
fbld
mov
and
mov
ret
and
scas
in
addr16
aad
ss
cmc
dec
sub
daa
jae
push
pop
outsl
lahf
push
fsubl
add
bound
and
and
mov
dec
and
es
xchg
adc
mov
pop
jp
daa
cmpsb
lods
in
call
inc
out
xchg
cmc
dec
xor
shrb
aam
rcr
outsl
fisubrl
adc
jmp
adc
cld
in
mov
lds
mov
push
sahf
or
jae
dec
ja
sub
xchg
sub
push
lret
dec
lret
mov
shll
movsl
jmp
add
xchg
mov
jnp
shl
sar
jbe
cmp
mov
jae
cmp
es
clc
aam
xor
std
cmpb
pop
push
pop
das
jp
js
shrb
xchg
out
fiaddl
imul
lods
add
int3
mov
mov
push
in
jnp
or
push
cmp
cmp
les
cmp
dec
arpl
test
je
or
inc
xor
sahf
jle
iret
sub
mov
imul
or
sub
lock
cli
xor
add
in
add
cmp
push
dec
mov
mov
call
sub
jns
fcompl
adc
pop
jecxz
xchg
in
pop
in
mov
inc
je
jno
cmpsl
bound
or
lods
lock
pop
repz
lods
cli
and
mov
leave
out
jno
pop
aaa
push
testb
cmp
cld
mov
sub
insl
inc
push
pop
and
sbb
or
push
cmc
shl
pop
mov
mov
mov
icebp
loop
cmpsb
loopne
jl
imul
cmc
push
pop
adc
pop
pop
lds
in
inc
push
sub
dec
push
bound
loopne
lods
xchg
outsl
loop
int3
sbb
pop
cmc
pop
jecxz
stos
sbb
jb
jp
stos
shl
psllq
shll
dec
jno
pushf
mov
or
dec
mov
sahf
insb
stos
xor
iret
decl
mov
cmp
mov
xor
jnp
jne
insl
arpl
out
push
aam
bound
fs
mov
jo
ret
fisttpll
fsubp
daa
jae
inc
pusha
xor
xchg
in
jo
mov
mov
jg
jae
shl
mov
inc
or
lds
ja
mov
sub
pop
in
and
pop
ret
pop
push
aaa
cmpsl
roll
fsubrs
jmp
or
out
icebp
pop
push
repnz
dec
sub
mov
jg
test
movsl
negl
dec
dec
loopne
lcall
sbb
rorb
sbb
fnstsw
pop
imul
loope
repnz
cmp
jl
orb
outsb
mov
push
inc
stc
int
jmp
idivb
xchg
inc
jle
cwtl
fwait
icebp
cwtl
jmp
sub
sbb
dec
leave
jo
repnz
stos
icebp
mov
cmp
jle
in
ds
mov
adcb
dec
fmul
lods
jmp
add
and
mov
xor
fidivrs
in
sbb
stos
outsl
call
mov
testb
or
push
loop
pop
std
ret
loopne
cmpl
adc
mov
and
push
or
int
sbb
jae
add
sbb
push
dec
mov
xchg
cmp
pop
pand
leave
arpl
add
orl
mov
pushf
daa
out
and
pop
sbb
xchg
and
sarl
adc
nop
js
sbb
sbb
mov
or
ficomps
mov
inc
mov
mov
pop
mov
call
out
das
jae
xor
push
push
or
cli
addr16
mov
imul
lods
sub
out
mov
adc
test
ja
xor
ret
fimuls
cltd
pop
aam
jmp
lret
inc
clc
clc
dec
pop
int3
mov
sbb
cmp
xorl
add
cmp
or
and
stos
xlat
aam
xchg
loop
sub
inc
lret
in
push
sbb
adc
scas
sub
orb
push
ja
pusha
fisubl
leave
pop
test
and
pop
xor
xchg
subb
icebp
cmpsb
cmp
hlt
imul
out
int3
xchg
pop
pop
fistpll
int
imul
out
add
push
subl
mov
ljmp
xor
push
mov
mov
jp
jb
insb
jge
jb
std
push
jp
in
inc
adc
adc
mov
adc
repnz
out
int3
xor
mov
pop
fistl
in
mov
fisubrl
sti
sub
ds
fstl
jne
lds
pop
pop
pop
cmovns
push
cmp
add
popf
cmpsb
in
mov
xor
lock
xchg
inc
add
jmp
bound
pop
in
inc
loope
pop
mov
aas
pop
cmp
or
adc
adc
movsl
inc
nop
mov
xchg
inc
jg
cmpsb
fnsave
sub
sub
jl
cmp
add
add
mov
test
pop
adc
mov
hlt
loope
cmovo
out
sbb
add
push
dec
xlat
lahf
mov
jecxz
mov
inc
push
sbb
sbb
push
fldt
addr16
inc
xchg
fidivrs
jg
push
in
fs
es
ficoms
inc
mov
sbb
rorl
pop
es
adc
inc
incl
mov
mov
cmp
js
and
stos
call
imul
int
fmuls
mov
movsb
or
jo
cli
ds
arpl
inc
dec
test
cmpsl
inc
mov
lea
rcrb
cli
scas
icebp
jle
push
adc
push
pop
movsl
pop
jg
xor
cmp
jae
bound
add
out
addr16
sub
int
xchg
mov
jae
sub
inc
rorb
loop
push
outsb
out
jp
cmp
cwtl
dec
pushl
inc
mov
and
cmp
pop
inc
in
je
cld
xchg
mov
rcrl
dec
mov
dec
ja
mov
outsl
sub
jns
sbb
mov
sbb
xchg
push
repz
imul
pop
push
jns
dec
mov
cmp
dec
js
inc
push
sbbl
jmp
mov
add
iret
xchg
stos
jg
test
repz
xchg
ja
mov
mov
call
popa
xchg
mov
lcall
pop
and
mul
ja
idivl
jge
mov
stc
inc
shll
scas
pusha
loope
inc
out
call
push
fstl
movlps
insl
jmp
iret
mov
cmp
adc
adc
loop
test
and
int
sub
cld
in
mov
lods
cmpsl
notl
mov
mov
push
rcll
aaa
gs
inc
cmpsl
imul
aaa
jmp
sti
cmpsl
and
dec
out
call
or
data16
insb
jmp
xchg
lock
in
out
xchg
sub
lds
test
xor
dec
lods
push
pop
sar
repnz
mov
clc
pop
sbb
aaa
mov
arpl
movsl
ds
push
test
imul
out
pop
daa
fwait
mov
daa
xor
or
movsl
pop
pop
cmp
xor
movsb
pop
mov
add
rolb
cmp
sub
test
inc
mov
fidivrl
jle
cmpsb
mov
sbb
insb
gs
pop
push
cld
or
fs
fsubrp
sbb
stos
arpl
mov
cmpsb
pop
mov
decl
in
fcmovne
orl
ja
loope
adc
xchg
cmp
inc
mov
aas
jae
bound
pop
ror
jg
cwtl
in
cwtl
mov
sbb
fdivrs
xchg
push
notl
push
mov
mov
xor
xchg
dec
sub
sti
mov
mov
cmpsl
ja
loope
icebp
push
jmp
jp
in
and
push
jns
push
xchg
and
frstor
or
xor
push
mov
call
js
add
outsl
jg
mov
cs
xchg
aam
ljmp
bnd
movsb
jo
testl
into
push
daa
inc
bound
pop
fcompl
icebp
cmp
mov
dec
and
cmp
out
adc
inc
lahf
pop
lea
je
xchg
ss
cmpl
lds
iret
cmp
sub
pop
sbb
pusha
xlat
or
mov
lcall
roll
movsb
adc
fs
ds
ds
js
rorb
push
rorl
xlat
ficompl
fnstsw
mov
je
call
pop
in
sub
xor
xchg
rorb
pop
cmp
and
sahf
sbb
cld
push
scas
dec
gs
incb
aaa
pop
mov
cmp
rolb
test
jl
xor
and
xlat
ss
outsl
or
or
adc
push
jb
sahf
fs
cmp
stc
add
dec
mov
add
jbe
imull
pinsrw
push
sub
lds
jbe
add
lea
jnp
test
aam
int
sub
jmp
cmp
sysret
jecxz
into
loop
scas
orb
xchg
into
mov
jbe
sbb
mov
xor
scas
fmulp
into
dec
pop
jp
iret
cmpsl
repz
inc
mov
mov
test
or
jmp
in
lret
loop
mov
lret
mov
xchg
insl
out
fidivl
pusha
int3
mov
mov
sbbb
sar
inc
int3
jg
push
pop
push
xchg
fs
lcall
push
sub
pop
pop
cmpl
outsl
mov
pop
out
dec
ds
mov
and
xor
cmp
sbbb
dec
push
and
xor
jg
outsb
pop
cmp
and
jne
int3
cli
lret
shlb
dec
imul
punpckhwd
mov
js
push
fwait
je
pop
push
les
adc
adc
lds
sbb
adc
mov
test
or
scas
pop
fimull
pusha
or
test
mov
in
lret
sub
sbb
stos
jecxz
fisubs
out
lods
pusha
dec
mov
mov
dec
test
sub
dec
lcall
mov
fldl
sub
and
loope
lea
add
addb
iret
push
pusha
ja
fisttpll
or
addb
std
push
sub
int3
rorl
arpl
push
pop
mov
sub
xchg
mov
roll
mov
test
dec
mov
mov
xor
adc
jno
movsb
roll
sub
int3
outsl
int
mov
xchg
pop
xchg
sbb
cli
add
xor
sbb
xchg
xchg
xorl
popl
loopne
adc
leave
es
pusha
repz
out
movsb
aad
inc
cmp
xor
sti
inc
je
inc
mov
xor
movsb
or
arpl
xor
shl
das
xchg
cmp
xor
inc
in
lods
or
mov
jnp
cmp
cmp
mov
pop
sub
lcall
inc
in
mov
pop
int3
and
adc
push
inc
pushf
sbbb
insl
sahf
inc
mov
or
jl
ja
dec
jg
jnp
mov
adc
les
movsb
xchg
push
push
popa
mov
xor
cwtl
cmpsb
in
pop
leave
pop
lret
inc
and
clc
lret
fcmovu
and
sub
xchg
fsubrl
mov
dec
dec
test
xchg
and
adcb
xor
aaa
stos
movsb
insb
dec
inc
dec
mov
mov
loopne
inc
mov
pop
inc
lods
imul
cmp
push
or
popf
mov
nop
in
fsubrs
pop
out
xchg
pop
add
sbb
out
in
mov
jle
pop
mov
pop
lock
aas
mull
test
shl
xchg
daa
mov
pop
out
mov
and
inc
jle
pop
cmp
mov
or
adc
mov
rol
cmp
mov
jb
inc
jg
lret
jmp
mov
jge
mov
mov
sbb
add
pop
lods
scas
pop
nop
inc
dec
js
push
dec
jle
dec
sub
ror
jbe
sar
pop
inc
mov
adc
cmp
pushf
xchg
pop
jg
clc
in
arpl
incl
mov
or
out
outsb
dec
dec
xor
and
popaw
jl
pop
sti
inc
or
popf
fbld
pusha
aaa
jp
xor
sbb
negb
mov
cmpsl
xchg
addr16
add
jno
inc
xor
addr16
int
dec
test
dec
nop
fwait
jno
mov
adc
sbb
std
loop
testl
jecxz
push
mov
fcoms
in
add
daa
mov
inc
lret
ja
dec
andl
mov
jnp
mov
insl
mov
fbld
adc
mov
insl
negl
mov
cmpl
jg
cmp
out
mov
add
enter
adc
and
scas
lds
shlb
bound
pusha
cmpsb
push
icebp
xchg
into
sbb
out
sbb
hlt
repz
or
das
cltd
ja
loope
mov
push
jno
rol
pop
push
ror
imul
movl
xchg
add
add
lods
jle
orb
test
iret
scas
mov
xchg
into
and
pop
xor
int
and
mov
loope
lahf
fisubrs
push
xchg
out
in
push
adc
and
out
ljmp
mov
int3
hlt
nop
inc
jbe
sbb
and
or
mov
out
xchg
rolb
inc
mov
test
cmpsb
push
and
sub
mov
outsl
push
insb
in
repnz
ja
rcrl
pop
popf
jno
mov
pusha
sub
push
ret
xchg
push
xorl
sub
loope
adc
fs
inc
push
imul
xor
ret
add
rorb
cmc
cmp
pop
xchg
clc
mov
rcll
dec
add
fnstsw
xchg
jp
lods
fdivrl
icebp
adc
lcall
pop
inc
jmp
ds
pop
out
fcomip
cmc
xor
lret
lds
sahf
or
dec
stc
cs
and
add
sub
pop
cwtl
jl
sbb
cmpsb
or
data16
mov
rcl
lock
in
mov
mov
mov
pop
pop
mov
cmpsb
adc
ret
xor
xchg
mov
mov
sub
outsb
dec
popf
pop
movsb
nop
pushf
push
push
push
push
aad
cmp
enter
pop
into
or
scas
or
mov
push
and
push
sbb
inc
orb
mov
pop
xor
clc
cmp
mov
sbb
rcrl
cmp
pop
xlat
jge
push
cli
outsb
pop
and
fidivs
into
shr
jae
lods
and
loope
scas
or
call
pop
push
inc
push
je
aad
in
dec
fwait
pop
icebp
add
jecxz
or
inc
sub
dec
jp
and
xor
lods
push
rcpps
in
imul
xchg
mov
outsb
push
sub
and
je
sahf
ljmp
add
jecxz
incl
imul
push
mov
pop
push
test
mov
out
repnz
in
call
and
xchg
int3
dec
adc
mov
addr16
mov
adc
jo
fiaddl
out
inc
ret
xor
mov
mov
fcompl
jmp
sbb
and
pop
add
cltd
lret
cmp
in
shll
test
jg
jp
sub
repnz
sbb
cltd
mov
in
rorl
mov
arpl
cld
push
rol
cmp
fdivrs
dec
jp
pop
pop
mov
jbe
xor
jno
xchg
int3
rcrl
dec
mov
push
shr
mov
rcrl
punpckhdq
xchg
push
add
mov
leave
sbb
jne
ds
and
jae
das
or
rorl
and
stos
andb
cwtl
jl
insb
dec
idiv
ret
repnz
lahf
dec
aaa
aas
sub
xchg
inc
xor
mov
shll
aaa
mov
and
hlt
cli
mov
mov
mov
inc
lods
xchg
xor
cmp
mov
and
mov
mov
arpl
jne
cmc
in
leave
pop
in
lahf
or
push
push
sbb
and
incb
dec
cmp
mov
fstl
jae,pn
negl
aas
movsb
or
shrl
pop
jmp
and
std
movsb
jmp
inc
rclb
jnp
arpl
movsl
lds
mov
lea
push
mov
push
jmp
lock
jo
and
inc
push
adc
aaa
inc
inc
testl
jae
push
shll
insb
je
addb
fisubs
in
subl
rcrl
jp
sti
inc
loop
out
dec
imul
xor
sub
inc
or
or
add
fcoml
xor
das
inc
push
cmp
dec
in
cmp
je
aad
push
mov
pop
mov
outsb
jecxz
cli
inc
jb
xor
ja
xchg
push
or
data16
cmp
sbb
adc
push
cmp
shr
insb
add
xchg
into
jg
inc
cmc
imul
sub
fildl
out
add
add
pop
cwtl
or
and
mov
and
loopne
and
cli
pop
lahf
bound
jns
sbb
adc
movsl
sub
lret
adc
incl
in
xor
cmp
dec
adc
mov
cmp
cmpsb
add
popa
faddl
push
das
push
enter
cmpsb
lea
or
push
inc
rolb
fwait
sub
jne
notl
cmpsb
sahf
std
in
mov
adc
out
stos
and
push
jle
insl
gs
les
push
sbb
adc
into
mov
fidivl
pushf
les
xchg
xor
mov
cmp
iret
mov
insb
inc
xor
lds
xchg
cmp
and
insl
jns
pushf
call
fdivs
push
mov
inc
mov
xchg
sub
xchg
scas
into
mov
push
ljmp
lret
and
lods
inc
jns
mov
es
cwtl
scas
jp
iret
iret
mov
adc
mov
cmp
out
mov
pop
pop
inc
ret
xor
adc
and
aas
cmp
mov
xchg
or
enter
cmc
outsb
pushf
pusha
lods
nop
and
mov
dec
scas
xor
sbb
int
testb
std
mov
cli
jb
adc
mov
push
inc
and
out
loope
mov
mov
dec
sbb
movsb
add
scas
dec
sarl
mov
jl
pop
mov
push
adc
cmp
mov
sub
jmp
jp
and
mov
fstl
cmp
cmc
inc
and
aam
sub
das
cmp
inc
push
fisttps
daa
xchg
lock
stos
mov
call
or
sub
mov
xor
pop
push
and
fcmovbe
lock
pusha
add
xor
popl
dec
jmp
out
add
dec
fcomps
cld
faddl
loopne
arpl
outsb
sub
and
in
cmp
xchg
dec
sub
pop
gs
sbb
shrb
or
add
cs
xchg
aam
out
aas
nop
xchg
loop
mov
stos
lcall
inc
dec
leave
int
movsb
cwtl
ja
sbb
popf
movsb
xchg
sbb
mov
xchg
or
inc
dec
stc
fs
xchg
mov
sub
lds
mov
push
mov
outsl
lods
insl
leave
jl
mulps
into
sub
stos
loop
push
sbb
dec
jb
cmp
fdivrs
popa
adc
mov
testb
mov
fstl
sub
stc
scas
mov
push
or
repz
iret
and
xchg
sub
pop
pop
jle
movsb
arpl
xor
mov
sub
jp
fmuls
add
inc
fildl
mov
or
movsb
cmp
arpl
and
push
mov
das
outsb
lret
jo
sbb
mov
sub
mov
je
cmp
or
pop
loop
add
into
or
cmp
inc
test
push
test
sahf
jl
xchg
xchg
pop
xor
sbb
cmpsl
pusha
push
imul
aad
insb
enter
or
adc
clc
cs
or
pop
cmpsb
cld
test
lds
dec
ljmp
lret
jbe
int3
or
movsb
cmp
jmp
cmpsb
movsb
sbb
repz
loop
xchg
and
pop
into
rcll
pop
cmp
inc
or
dec
push
insb
in
ja
jo
xlat
push
sub
add
pop
ja
sahf
fxch
pop
adc
push
scas
out
mov
push
insl
in
gs
sarb
jl
gs
je
xlat
mov
dec
aad
xchg
or
roll
add
mov
xchg
jp,pt
std
adc
imul
scas
cmp
and
adc
push
outsb
push
repnz
andl
shrb
or
imul
adc
insl
sub
popa
adc
arpl
mov
sbb
outsb
adc
movsl
adc
dec
sahf
jb
pop
jp
je
add
push
in
shll
loopne
or
or
and
lcall
fbstp
arpl
mov
clc
jae
mov
dec
sub
push
cwtl
add
jle
lods
in
leave
mov
int
out
mov
ja
lods
sahf
and
jno
mov
inc
inc
mov
sbb
sbb
leave
bound
and
xor
jg
sub
dec
add
int
push
fldl
cmpsb
cmc
insb
mov
gs
stos
int
push
sbb
add
lcall
clc
fmull
rorl
ss
sub
xchg
dec
add
adc
adc
mov
and
leave
clc
xchg
mov
xor
outsl
or
ret
sub
leave
das
gs
jmp
or
repz
mull
jns
lock
ds
popf
cmp
mov
push
insw
ja
in
scas
xor
out
das
jae
or
add
fninit
and
jg
add
aad
out
xor
shl
pop
xor
pop
xlat
jle
jb
rep
shr
mov
lea
jl
lds
inc
sarl
adc
xchg
adc
pushl
xor
shll
adc
jl
cmc
mov
arpl
shrb
cld
lods
jmp
outsb
and
test
sti
xchg
arpl
sbb
sbb
mov
dec
jle
sub
adc
scas
aad
jle
inc
xchg
inc
into
dec
nop
add
cld
mov
subl
or
cwtl
andl
or
mov
popa
xchg
cld
dec
out
cmp
cmp
stc
fmul
push
sub
shrl
lret
jg
out
sbb
fdivrl
push
sahf
inc
inc
nop
lret
ss
frstor
cmp
test
data16
rcl
push
cmp
outsb
repnz
cmc
aaa
pop
scas
out
push
xchg
mov
xorl
pop
push
sub
mov
xlat
repnz
test
pop
aam
mov
sbb
mov
js
call
pop
cmp
sub
xchg
mov
add
dec
inc
mov
jg
in
push
mov
pop
sbb
sbb
mov
mov
inc
xor
mov
jbe
cmpsl
enter
sahf
dec
cmpsb
mov
es
test
repnz
sbb
out
enter
in
dec
mov
xchg
mov
jbe
or
pop
fucomip
cmp
mov
ficomps
shlb
cmp
push
pop
out
cmp
in
out
inc
push
test
sbb
das
xchg
cmp
cmp
inc
fidivl
push
mov
hlt
cmp
sub
andl
xor
and
orl
sbb
or
push
pop
repnz
push
hlt
xchg
dec
loopne
test
push
call
or
ja
jbe
fs
fistl
adc
pop
mov
pushf
cmp
stos
and
enter
testb
mov
gs
dec
or
push
mov
xchg
jl
scas
in
fs
in
sti
test
cmpb
mov
out
push
push
int
mov
pop
shlb
out
stos
jae
add
stc
icebp
sbbb
pop
mov
rorl
mov
xor
push
pop
dec
adc
in
or
hlt
sahf
xchg
dec
test
pop
les
mov
fwait
rcrl
lahf
mov
sub
cwtl
cmpb
mov
fdiv
sbb
scas
stos
pop
pop
push
hlt
fcompl
in
xor
icebp
dec
push
pushl
mov
test
xor
xor
xchg
sbb
sarl
pop
stos
subb
cmp
or
jae
out
das
ljmp
mov
decl
test
push
mov
inc
adc
mov
mov
pop
cmp
xor
ds
or
stos
lods
cmc
jae
rorl
test
xchg
dec
ja
push
stc
test
shrl
je
icebp
jp
push
adc
hlt
mov
and
xchg
mov
mov
jmp
inc
sub
jae
cwtl
push
adc
rclb
stc
xlat
in
not
inc
and
cld
cwtl
inc
mov
incl
aaa
in
nop
cltd
push
ret
es
pop
adc
ljmp
ss
loopne
sbb
roll
leave
mov
push
mov
add
int
out
cmpl
hlt
mov
fnstsw
into
xchg
repnz
jns
pop
ljmp
adc
adc
jmp
popa
clc
mov
jnp
pushf
fldcw
lea
or
xor
and
mul
fdivr
pop
cli
mov
movl
jle
mov
push
mov
imul
stc
pop
out
xor
lahf
cltd
fistl
push
scas
aas
testb
jns
jle
push
orl
pop
jnp
xchg
or
fsubrs
mov
popf
daa
xchg
scas
jge
push
jo
ret
xchg
mul
jge
and
push
adc
push
push
pop
jns
xor
stc
les
pop
xor
xor
xor
cli
or
or
mov
sbb
stc
out
pop
je
mov
add
cld
xchg
scas
cli
mov
adc
push
jle
add
nop
xchg
sbb
rorb
stos
jns
lahf
xchg
out
cwtl
ficomps
int3
insb
push
movsl
icebp
xlat
orb
fmulp
jle
inc
lret
addl
repnz
lds
mov
outsl
shl
lcall
jp
push
out
xchg
stos
mov
fsubrl
mov
push
xor
jecxz
ja
jno
aam
jno
ljmp
add
xchg
fisubrl
sti
add
fstpt
aam
scas
arpl
call
add
icebp
adc
daa
fisttps
daa
inc
jecxz,pn
jo
fidivl
or
jle
pop
bound
cmp
in
push
sbb
mov
icebp
or
add
cli
push
xchg
es
insl
cli
lock
test
add
mov
push
add
in
pop
subb
or
test
adc
aad
push
push
sub
xchg
push
mov
sub
dec
or
dec
mov
arpl
gs
sub
das
xchg
std
adc
mov
ja
push
jg
add
mov
aas
js
call
fwait
pop
rcrb
jmp
sbb
fmuls
popa
inc
sub
mov
bound
lcall
fwait
aaa
pop
cmp
push
movsl
andl
jns
fimull
jae
or
loop
and
mov
fdivrl
sub
xchg
xchg
xchg
or
enter
xchg
inc
daa
pop
icebp
mov
test
adc
jo
imul
adc
or
xor
pop
int3
pop
jns
cmp
fadds
ficoml
pushf
adc
fdivrs
cmp
and
adc
jne
aas
add
inc
pop
dec
and
stos
jl
mov
fiadds
fmull
inc
in
mov
xchg
xor
lret
jle
in
add
in
or
loope
lcall
aas
inc
dec
lds
aam
sbb
cmp
mov
pop
cmp
and
pop
stos
or
shl
loope
jecxz
fmulp
notb
sarb
movsl
stos
adc
das
pop
jg
pop
pop
push
popf
pushf
xchg
dec
in
mov
sti
daa
mov
mov
aam
inc
jo
mov
dec
dec
sbb
mov
rcll
cs
rol
sub
jae
cs
dec
imul
or
daa
ss
js
mov
or
and
sub
inc
loope
in
or
or
pop
jae
and
cmp
jg
mov
aam
sbb
add
xor
inc
sbb
cmp
push
adc
idiv
dec
in
cmp
cmp
pop
mov
add
push
pushf
mov
repnz
insl
test
inc
xor
pop
in
test
add
outsl
sbb
mov
sub
and
cmp
jle
inc
pop
adc
push
aad
cld
or
imul
scas
jbe
push
cs
jae
in
sarb
jnp
jmp
mov
mov
mov
and
jo
stos
xchg
ret
cwtl
dec
ds
fdivr
sbb
stos
ret
and
mov
or
notl
fwait
jmp
std
cli
test
mov
mov
adc
mov
mov
je
test
pop
test
push
daa
int3
movb
out
cld
stos
jb
in
pop
sbb
data16
pop
js
ss
lods
jnp
xor
cmp
jno
fdiv
jnp
cltd
int
vfmsubadd231pd
push
insb
cmp
aad
cmpsb
shll
mov
sub
cmpsl
sbb
cmp
sbb
cmp
xor
icebp
add
nop
sti
or
sub
fisttps
imull
or
ror
add
and
imulb
mull
mov
and
inc
and
and
mov
jecxz
fmuls
test
mov
cwtl
jb
mov
pop
jle
fstl
lahf
mov
fidivrs
or
mov
push
inc
cmp
insb
cmp
inc
es
push
stos
push
mov
adc
nop
cld
xor
notl
lods
mov
cmp
inc
test
pop
lds
negl
data16
popa
and
in
iret
pop
hlt
dec
movsl
cmp
loop
pop
dec
clc
inc
mov
mov
mov
call
inc
ficomps
fmul
movsb
lods
fmulp
dec
cmp
fimuls
ljmp
ffree
ror
and
and
cmpb
outsl
mov
repnz
cmp
and
inc
push
int
add
movsl
push
in
adc
adc
test
dec
push
adc
data16
out
scas
xor
sub
push
ret
adc
push
ja
fadd
orl
add
pop
and
shlb
insl
push
mov
mov
repnz
inc
or
js
popa
cli
popf
into
mov
das
imul
loope
ror
and
jae
out
add
in
xchg
iret
push
test
icebp
pop
adc
into
fstl
popa
adc
adc
push
js
adc
or
or
adc
and
mov
ljmp
repz
xor
mov
sub
call
xchg
cld
mov
ret
nop
jnp
sub
aam
int3
aam
outsb
sub
push
add
fbld
scas
popa
add
int
adc
es
aad
fbld
jo
hlt
dec
fidivrs
std
shlb
arpl
sbb
sarl
mov
shrb
dec
adc
lahf
daa
rcl
negl
jb,pn
js
pusha
cmp
bound
movsl
xor
jb
fucomip
je
out
fcomip
pusha
jl
out
mov
mov
push
mov
add
xchg
add
push
rolb
pop
stos
push
sub
cmc
mov
inc
push
leave
add
mov
hlt
aas
les
inc
out
or
sub
sbb
shll
pop
call
dec
sub
outsl
adc
les
push
pop
mulb
mov
xlat
ljmp
and
add
mov
mov
lods
adc
out
jecxz
fwait
inc
lea
pushf
lods
push
aad
int
cmp
int
cmp
cmp
mov
ljmp
push
rorl
mov
push
xchg
inc
ret
out
cmp
jae
lcall
ret
xchg
out
enter
mov
stos
mov
mov
jmp
sub
and
add
test
rol
subb
pushf
inc
test
popf
pop
adc
xor
fwait
sahf
popa
in
xchg
sub
sbb
fxch
das
and
es
outsb
cltd
ret
call
and
jmp
ret
movsb
dec
data16
mov
repnz
ss
in
mov
mov
xchg
and
cmp
push
sub
or
push
sub
repnz
jbe
mov
leave
cmpsl
sbb
push
jo
push
or
and
dec
xor
xchg
lahf
rorl
mov
movsb
lret
jb
mov
cli
pop
push
add
jns
loope
inc
and
jge
cmp
xchg
dec
ret
and
in
imul
test
icebp
push
inc
pushf
das
into
addr16
push
mulb
sti
sbb
inc
mov
mov
rolb
jmp
add
pop
stos
sbb
into
adc
cs
les
mov
stos
or
sbb
daa
cmpsl
jbe
push
mov
bound
push
mov
movsl
iret
fists
lcall
sbb
insl
pop
push
mov
jp
lcall
or
lcall
fidivs
fistpll
nop
in
mov
lret
lret
cmc
mov
enter
in
mov
push
mov
ror
pop
pop
and
push
pop
adc
inc
add
shrl
inc
adcb
iret
mov
jle
adc
push
mov
mov
jge
imul
inc
jl
and
addb
jecxz
and
outsb
fidivl
sarl
mov
pop
repz
fadds
xchg
scas
idivl
push
insb
xor
call
pop
or
fidivs
jp
loop
movsl
js
call
stos
test
push
sti
xor
rcrb
and
pushf
sbb
sub
loopne
in
jae
ffreep
stos
sarl
jns
in
stc
sub
adc
enter
enter
aas
les
xor
lret
lds
jb
rcll
mov
popf
cmp
add
mov
sub
xor
fcmovnbe
pop
out
jne
pop
sub
adc
adc
adc
xchg
rcll
inc
jb
incl
ret
push
adc
ja
or
fstps
adc
pusha
fsubrl
insb
lret
push
jecxz
pop
cmpsb
and
xchg
sub
mov
dec
push
mov
clc
or
cld
dec
in
dec
jge
mov
mov
xchg
jmp
or
cmp
jae
pusha
pop
and
dec
cmp
jmp
jp
popa
xlat
mov
adc
outsb
cmp
add
sub
outsb
daa
pushf
cmp
aam
das
push
adc
mov
push
lock
fadds
stc
fcomp
loopne
ret
stos
mov
sub
push
in
lods
dec
cmpsb
jp
fsubl
pop
imul
sbb
andb
jge
mov
addr16
cmpl
mov
mov
xchg
and
int
push
mov
fisttpl
adc
dec
mov
sbb
fisubs
sub
int
lret
mov
gs
dec
jmp
aad
add
or
arpl
xchg
shrb
jnp
jns
fisttpll
pop
ret
nop
xchg
gs
or
jnp
jg
out
or
pop
dec
ss
daa
pop
fistps
ja
push
add
cwtl
out
mov
mov
xchg
xchg
adc
mov
dec
sub
jne
divb
jle
ficompl
test
push
inc
ret
mov
or
pop
adc
ss
rcr
dec
inc
xlat
or
int3
mov
testl
xchg
lds
popf
test
cmp
sub
sub
add
lcall
xor
repz
jne
imul
fndisi(8087
fxch
sub
test
ret
sbb
sub
inc
dec
out
fwait
and
imul
std
adc
and
ja
data16
popa
cmpsl
jle
out
pop
cmpb
rorb
mov
rclb
lock
in
ret
jnp
push
mov
popa
aad
repnz
cli
sbb
add
add
inc
mov
sbb
push
xlat
push
cmpb
add
stos
mov
mov
push
sbb
and
nop
mov
testl
lea
mov
cmp
in
add
out
ffreep
or
lret
jp
out
jmp
imul
in
iret
dec
addb
and
cltd
fmul
pop
xor
scas
inc
out
call
push
imul
scas
loope
scas
out
xchg
sbb
ja
xor
sub
rcrl
je
shr
loope
and
stos
das
sub
jmp
inc
mov
pop
into
xlat
sbb
pop
jmp
mov
jg
mov
outsl
pusha
xchg
stc
sbb
lods
iret
int
popa
sbb
mov
push
sub
jo
lea
out
pop
cli
int
aaa
pop
mov
outsl
test
hlt
rol
lea
mov
inc
scas
testb
test
cmpb
add
adc
cmpsb
dec
loopne
pop
jbe
lcall
sub
negl
cld
dec
xchg
shll
mov
negl
jne
jge
sub
xchg
cmp
pop
loopne
movsl
jbe
xor
insl
mov
stos
xchg
inc
rcl
roll
mov
adc
or
xchg
mov
aam
cmp
push
movsb
xchg
mov
mov
testb
je
lahf
jne
pop
jae
cld
pop
or
xor
fs
fdivrl
mov
adc
sbb
mov
xor
cmp
repnz
pop
xor
sub
test
mov
fmuls
or
jno
lcall
mov
cmpsb
ja
sbb
mov
push
sbb
lcall
xor
scas
or
repz
mov
fidivl
or
cmp
hlt
stos
xor
inc
pop
mov
insb
and
cmc
repz
xor
arpl
mov
lret
pop
mov
scas
mov
popa
push
outsb
inc
mov
lods
pusha
cmc
adc
push
cltd
push
inc
xchg
pop
and
cld
jmp
sub
pop
aad
enter
leave
sub
xchg
popa
addb
les
and
hlt
and
out
xchg
clc
sub
jle
push
sub
push
loope
add
movsb
ds
jg
push
imul
repnz
xchg
jnp
outsb
mov
sub
mov
adc
in
jns
stc
hlt
mov
push
mov
bound
mov
xchg
dec
dec
hlt
sbb
orl
or
sbb
unpckhps
pop
je
xchg
push
dec
push
inc
sti
aam
insl
mov
mov
lret
dec
lds
gs
xor
jp
dec
mov
hlt
out
xchg
cs
cmp
mov
fwait
sub
xorl
movsb
mov
mov
lret
cmpsl
insb
jno
mov
andb
movsb
imul
insb
arpl
sub
icebp
js
mov
push
mov
mov
sarl
pop
push
pcmpgtw
jg
xor
push
inc
jg
jbe
stos
mov
frstor
imul
mov
ja
cs
pop
stos
stc
je
xchg
mov
jns
adc
pop
add
add
sub
push
and
mov
pop
cwtl
ja
iret
sub
mov
stos
fucom
repnz
sbb
pop
arpl
add
push
cmp
out
out
jae
or
xor
stos
push
std
push
int3
fs
xor
out
out
pop
jl
popa
dec
sub
into
push
adc
jne
lcall
jmp
lcall
shll
movsl
fcoms
ljmp
push
sbb
sbb
icebp
xchg
out
mov
xlat
or
or
mov
sti
inc
and
push
sub
xchg
jb
mov
pop
mov
lcall
jne
or
jnp
lock
inc
pop
outsl
cmp
test
mov
cmp
push
mov
inc
pop
xchg
bsf
mov
addr16
jns
lea
and
push
or
ret
gs
adc
int3
pop
movsb
xchg
push
sub
mov
pop
ds
push
and
lret
fucomip
inc
adc
aam
xor
out
test
or
inc
pop
sbb
testb
dec
push
nop
xor
divl
pop
push
ja
hlt
cwtl
jbe
fst
mov
loop
stc
adc
rclb
sbb
mov
repz
iret
dec
pop
out
jp
lret
adc
push
cmpsb
jae
sub
jne
negb
lods
push
mul
addl
xlat
ljmp
sbb
push
addr16
xchg
mov
lods
mov
mov
inc
call
pop
push
hlt
dec
stos
sar
sbb
push
jmp
push
xor
fnop
rcrb
cltd
fwait
icebp
aas
add
scas
cmp
orb
or
mul
es
jmp
insl
sub
inc
outsb
call
stos
push
bound
sbb
push
mov
and
xchg
iret
outsl
xchg
sbb
js
xchg
test
jns
mov
int3
pop
lea
sbb
aad
inc
repz
adcb
ret
pop
xchg
and
cmpsl
pop
movsl
popa
jge
lea
add
pop
add
and
cwtl
stos
push
mov
inc
into
iret
inc
pop
sub
sub
push
mov
xor
push
into
mov
jl
lahf
push
dec
ljmp
ja
xchg
push
test
test
cld
out
mov
add
shrl
push
jecxz
js
and
int3
or
andb
xchg
in
ja
daa
test
cmpsl
repz
add
sarb
mov
add
iret
aas
mov
addr16
fs
cmpsl
cmp
xchg
dec
mov
ljmp
xchg
mov
push
jae
out
lods
cli
fdivl
mov
xchg
pop
cmp
pop
gs
imull
xor
loope
pop
or
pop
lods
fnstenv
jo
xchg
mov
popa
pop
xchg
int3
push
addr16
mov
mov
xor
cmpsb
dec
xchg
adc
adc
out
scas
out
mov
xchg
test
jne
jge
jnp
int
push
lahf
daa
sbb
xchg
insb
aad
push
mov
test
add
into
sbb
mov
fimuls
inc
pop
sub
fstps
je
push
sub
push
mov
xchg
xlat
adc
loopne
push
clc
pop
mov
push
sub
js
adc
mov
pushf
mov
scas
adc
add
mov
sub
mov
jp
sbb
pop
xchg
cmp
fadds
xchg
cmp
xlat
xor
shlb
push
fs
stc
out
jae
daa
out
mov
dec
jb
test
mov
mov
mov
push
mov
cmp
inc
and
xor
xchg
and
clc
cmp
lahf
fistpll
cwtl
inc
or
sub
pop
dec
pop
insl
inc
pop
add
adc
iret
ja
popa
mov
mov
pop
imul
xor
jp
jae
popf
inc
test
push
fwait
cmp
fdiv
add
fadds
nop
test
stos
jg
nop
adc
xlat
test
push
fdivp
in
in
sbb
out
stos
pop
add
mov
iret
aad
or
jb
jle
fiadds
mov
in
mov
xchg
inc
and
dec
sub
lret
push
test
lret
pop
add
pushf
jecxz
fdivrl
je
fdivrl
lcall
and
jno
push
cmp
dec
insl
mov
pop
pop
xlat
insb
imul
mov
mov
sbb
xor
jns
aaa
sbb
es
sbb
int
and
gs
push
xchg
je
push
imul
fistps
jbe
adc
shlb
test
jg
and
fmuls
xor
dec
clc
ljmp
mov
addr16
pop
std
inc
movsb
sbb
ja
mov
pusha
and
rorl
and
incb
gs
mov
outsl
cmpsb
fildll
shr
subb
decl
adc
mov
ss
dec
xor
jmp
push
mov
bound
pop
imulb
dec
jge
xchg
push
ret
add
sub
pop
out
push
add
pop
lcall
aaa
jo
jl
pop
inc
pop
pop
gs
cmp
out
out
out
mov
stos
or
jno
sub
mov
in
test
je
dec
arpl
pusha
cltd
sub
and
inc
push
sub
ret
mov
mov
inc
cmpsl
mov
adc
out
loopne
les
ss
cmpb
cmp
in
cwtl
and
lcall
push
daa
pop
cmp
push
loop
pop
xchg
adc
add
popf
clc
mov
add
push
jmp
popa
out
test
jo
mov
roll
cltd
or
add
xchg
mov
in
adc
mov
jg
lods
loopne
sub
and
adc
jecxz
into
rorl
test
test
clc
add
loop
xchg
out
test
repnz
jb
inc
cltd
popf
jns
mov
xor
push
pop
fisttps
or
cwtl
gs
mov
stos
fisubrs
mov
fists
aaa
ja
push
add
popf
les
jp
int
pop
inc
int3
or
aam
dec
pop
sbb
mov
mov
scas
daa
ret
ja
sub
xor
push
ds
ds
loope
lock
xchg
out
repnz
inc
pop
jo
or
enter
ljmp
loopne
jl
ss
sub
iret
jmp
arpl
xor
andl
push
mov
pop
sbb
aam
dec
xor
loop
movsb
out
outsl
faddp
adc
jns
repnz
mov
mov
roll
dec
stos
jnp,pn
aad
ljmp
in
pop
mov
adc
fdivr
in
mov
sbb
pusha
push
jmp
xor
sbb
popf
inc
loopne
jg
xor
movsl
movsb
jnp
mov
testb
popa
sbb
mov
lret
push
push
das
int3
popa
pushf
fcomps
pop
mov
fiaddl
les
xor
push
imul
in
ja
sbb
and
xchg
pop
lret
add
cld
sub
icebp
sbb
dec
mov
decl
ficompl
rolb
popa
loope
xor
pop
mov
and
dec
pop
push
int3
add
xchg
movsb
cmp
sub
xchg
xor
in
xor
xor
inc
imul
jge
and
dec
jg
out
out
aaa
jbe
je
cmp
lea
mov
insl
cmp
repnz
jge
push
sbb
cmovle
stc
adc
stos
push
inc
mov
stos
mov
mov
push
flds
sbb
cmp
mov
xor
std
outsb
insb
subl
and
in
mov
imul
fsub
cmp
mov
cmp
mov
shlb
adc
stos
cmpsl
call
inc
clc
jg
fs
cmc
push
xor
mov
jns
repz
push
divl
cmp
mov
sbbb
ret
push
cltd
js
mov
sbbl
fadd
call
daa
cmpsb
iret
test
fs
pop
insl
enter
pop
aad
and
iret
pop
lea
or
mov
jbe
push
in
aam
ret
lcall
add
stos
mov
jecxz
mov
jl
xchg
mov
mov
jne
mov
ja
test
add
in
pop
sbb
xor
cmp
dec
add
pop
imul
pop
push
push
pop
in
push
dec
pop
xor
mov
sbb
inc
enter
mov
sub
in
pushf
popf
cmc
xchg
dec
test
sub
push
fimull
or
in
add
add
pop
insb
cmp
xchg
mov
adc
insl
xorb
lcall
pusha
int
mov
subb
je
and
sub
mov
loop
sbbb
xor
rol
cmpsl
jae
add
imul
adc
rolb
xchg
mov
push
std
hlt
add
pop
jge
cli
mov
cmc
inc
dec
popf
pop
out
push
shlb
mov
sub
test
sub
sub
stc
pop
and
pop
cmp
push
sbb
mov
jo
cli
in
add
jns
and
daa
out
fstpl
cmpsl
ja
jb
in
stc
or
sub
loope
jp
mov
xor
xor
sub
jmp
add
leave
inc
into
and
ds
sbb
pop
addr16
sbb
jns
les
sub
add
gs
xchg
mov
dec
xor
ja
mov
pop
fsubp
cmp
xchg
mov
aaa
mov
addr16
loope
arpl
ss
ds
lds
rorl
arpl
dec
fsubs
popf
and
inc
lds
mov
or
jno
push
sbbb
and
push
nop
inc
je
ficomps
lahf
dec
push
ret
mov
aad
inc
push
xchg
add
stos
dec
in
add
mov
xor
lock
or
cmpsb
push
hlt
hlt
sub
jmp
out
movl
sub
mov
xchg
mov
addl
sti
mov
xlat
sbb
lret
pop
icebp
lods
mov
inc
jno
xchg
outsl
loop
push
sub
lods
ror
jnp
mov
xchg
hlt
pop
mov
imul
mov
cmp
fwait
add
sub
cmp
fmuls
inc
or
rclb
pop
jg
pusha
push
test
sub
inc
outsl
fimull
mov
imul
xchg
mov
add
lods
repnz
outsl
loop
lods
out
leave
and
out
and
dec
fdivp
sub
push
pop
test
icebp
pop
or
subb
adc
or
mov
addl
arpl
lcall
rolb
stos
sub
push
movsl
sub
popf
xorl
inc
and
jns
or
mov
fwait
lock
cmp
sub
ret
out
mov
xor
lcall
imul
sbb
sti
xor
add
pop
mov
sti
fisttpll
pop
rorl
pop
jmp
pop
dec
cltd
out
gs
mov
in
add
sti
mov
sub
push
add
or
arpl
mov
iret
cmp
pop
test
push
push
mov
dec
push
fisttpl
add
xchg
daa
loop
cmc
in
in
jno
mov
jbe
enter
rcrl
lods
in
sbb
xor
and
xor
mov
je
adc
mov
stc
inc
xchg
xchg
cmp
push
movb
inc
cmpsl
mov
stos
mov
add
inc
insl
lods
mov
lret
sbb
push
in
xchg
aas
into
sbb
shll
lds
mov
jnp
rcr
cwtl
jnp
sbb
mov
sub
xor
mov
fcoml
pop
pusha
xchg
xchg
fisttpll
int3
add
ljmp
or
stc
mov
repz
pop
shll
pop
cmpsb
mov
mov
aas
negl
ljmp
pop
push
and
adc
in
call
addr16
lea
iret
add
cmpsb
mov
cld
add
dec
jle
xor
xor
push
enter
push
dec
push
lods
test
cmp
out
repz
dec
and
sbb
pushf
scas
mov
stos
inc
sub
and
dec
add
out
mov
das
mov
xlat
xchg
out
mov
ljmp
lret
push
nop
aam
sub
push
mov
dec
jmp
es
dec
mov
andl
add
in
push
leave
sbbb
in
jp
aas
fildll
mov
in
sub
lahf
andl
lea
xor
xor
das
daa
incl
push
dec
popf
push
pop
push
xor
jecxz
cmp
outsl
in
adcb
inc
xor
mov
mov
jb
push
daa
inc
push
pop
push
int3
or
push
clc
sbb
in
sub
aas
js
xchg
sbb
mov
clc
adc
xor
dec
sub
lahf
data16
mov
enter
xchg
sbb
mov
mov
inc
adc
test
cmp
daa
mov
mov
sarl
lods
mov
cltd
leave
sub
sub
cmc
or
push
xchg
cld
xchg
adc
mov
into
lcall
sub
inc
mov
fs
rcll
rolb
push
fcomp
jb
hlt
pushf
jo
or
insl
jae
dec
mov
mov
movsb
les
push
sbb
cld
inc
ror
inc
push
sub
xor
icebp
mov
mov
jne
out
inc
pushf
inc
jne
and
xlat
sbbl
push
xchg
xchg
leave
add
fistl
pushf
mov
inc
add
iret
jnp
jb
aas
sub
fs
sub
jl
sub
in
popf
mov
std
stos
imul
imul
nop
je
dec
lds
mov
rolb
lock
sub
test
imul
fadds
mov
sbb
add
push
adc
ja
add
add
mov
sub
std
push
mov
inc
cmp
xchg
sub
and
fists
jb
lods
jle
lock
out
pushf
mov
dec
call
aaa
ss
cmc
jp
out
es
lock
repnz
xchg
out
pop
or
sub
pushf
ljmp
inc
into
pop
or
add
inc
adc
xor
xor
pusha
repnz
loop
sbb
xchg
jp
mov
int3
scas
lcall
jg
arpl
dec
in
lea
sub
adc
ret
push
hlt
xor
dec
xor
jl
jns
sti
psrld
repz
mov
pop
loope
lcall
inc
push
pop
sbb
out
cmp
mov
roll
ljmp
aam
inc
hlt
xor
imul
and
lea
push
cmp
sub
lahf
clc
outsb
ds
or
shlb
inc
lcall
rcl
addr16
ljmp
frstor
lods
xchg
dec
je
mov
scas
xor
aam
mov
and
adc
jb
adc
and
jle
loope
push
subl
cmp
cli
sub
mov
xchg
shrl
adc
jge
iret
pop
fimuls
roll
lods
hlt
cltd
jp
enter
fsubl
je
imul
inc
jl
sub
xor
mov
mov
inc
cmp
inc
icebp
pop
mov
out
lcall
add
imul
mov
ja
test
gs
loopne
sub
out
push
sbb
jl
dec
mov
mov
mov
mov
icebp
repnz
add
repz
rclb
add
pop
jp
mov
mov
cmp
and
std
adc
push
inc
fldcw
jmp
outsl
inc
pop
mov
pusha
rorl
pop
pop
jmp
xchg
mov
das
stos
cmp
mov
fs
imul
mov
push
stc
push
arpl
popf
rcr
sbb
push
mov
test
push
jne
pop
shll
or
and
and
pop
mov
sbb
push
repnz
stos
or
jbe
cmp
imul
jae
pop
and
mov
push
nop
into
inc
fdivr
mov
xor
adc
push
dec
dec
out
mov
aam
add
pushf
cmp
jno
outsb
shll
sub
bound
std
xchg
mov
scas
jmp
cmp
and
or
sub
insl
and
pop
xor
loope
cli
jl
mov
pop
cmp
or
stos
push
push
cmp
js
shll
xchg
jbe
call
sbb
repz
dec
xchg
jns
sub
or
out
loope
out
stos
dec
pop
aam
add
add
test
cmc
shr
testl
lret
push
sahf
stc
cld
daa
decl
xlat
repz
aas
jmp
dec
out
leave
inc
dec
js
arpl
sbb
jae
arpl
sbb
jns
repz
xchg
xchg
ja
push
inc
add
dec
sub
inc
mov
hlt
loope
xchg
mov
jb
push
mov
and
int3
dec
fisttpl
loop
push
sbb
sbb
add
adc
bnd
insl
pop
fsubrl
xchg
jle
or
popa
sub
ret
int3
adc
pop
in
shr
adc
add
add
rolb
pusha
lret
xchg
mov
or
insb
mov
std
and
add
into
add
dec
jp
cmp
sub
mov
push
fwait
mov
andb
testl
push
sar
mov
push
outsl
push
cli
mov
jle
bound
and
dec
dec
mov
inc
addr16
or
push
sbb
popl
jae
jl
call
fucomp
iret
pushf
dec
jge
pop
mov
mov
jb,pt
enter
ds
imul
xchg
xchg
clc
xchg
push
jns
mov
test
lcall
bound
das
in
aaa
cmpsb
rcll
ds
shll
mov
mul
loopne
sahf
out
inc
sub
hlt
lea
xor
call
orl
insl
cmp
imul
push
cmp
push
push
fcoms
imul
cltd
inc
sarl
popf
and
add
sbb
pop
dec
int
mov
hlt
arpl
pop
adc
mov
sub
mov
and
inc
push
xor
loopne
int
inc
adcb
inc
mov
xchg
cmp
or
xor
lds
adc
inc
jg
cltd
fistl
mov
call
add
inc
mov
xchg
mov
test
sub
jle
aad
xchg
sahf
sbb
data16
cmp
pop
or
popf
jmp
movlps
or
cld
popf
pop
enter
repz
push
push
nop
fwait
scas
push
mov
xchg
pop
cmp
inc
sbb
mov
xor
push
enter
stos
sub
sbb
jne
cmpsl
mov
dec
cmpsb
fisttpll
push
adc
pop
nop
leave
pop
pop
mov
push
dec
scas
jmp
loopne
mov
rclb
cmp
pop
lods
test
mov
cli
push
mov
adc
dec
xchg
mov
push
dec
xlat
and
cltd
subl
mov
mov
enter
push
out
dec
lahf
xchg
mov
adc
adc
push
sti
jbe
adc
jo
hlt
xchg
dec
fs
addr16
xchg
xor
cli
adc
ret
or
mov
mov
gs
push
add
insl
scas
xchg
test
hlt
popf
inc
mov
sbb
xor
in
mov
inc
cmp
insl
mov
aas
in
push
das
mov
loop
mov
push
cwtl
adc
add
lock
movb
inc
jno
xchg
gs
add
ds
mov
out
fldt
dec
mov
sarb
xchg
inc
incb
cmp
push
fcoms
push
pop
xlat
mov
test
mov
mov
push
fiaddl
gs
ffreep
cmp
mov
imul
pop
rcr
popf
inc
int3
repnz
in
test
dec
dec
add
pop
lret
fadds
dec
pusha
push
sbb
jmp
xchg
test
mov
inc
pop
pop
adc
loop
or
mov
popf
adc
jae
cmp
rcll
mov
es
cwtl
mov
mov
adc
or
mov
dec
xor
and
push
fsubs
pusha
cmp
dec
xor
mov
inc
js
lret
mov
mov
jl
test
aad
mov
push
lahf
add
lret
scas
pop
js
pop
fsts
push
negl
pop
outsb
mov
jl
pop
popf
imul
inc
xchg
das
sti
pop
xor
pop
cmpl
dec
cld
cwtl
int3
popa
xchg
push
sarb
push
in
mov
xchg
or
mov
sbb
sbb
mov
or
imul
ljmp
push
jecxz
dec
inc
pushf
imul
inc
dec
test
lcall
pop
aas
inc
mov
dec
mov
sbbl
xor
xchg
push
addr16
arpl
mov
sbb
scas
inc
iret
dec
outsb
jnp
mov
xor
cmp
dec
jp
lock
push
test
dec
psraw
xor
les
jne
js
imul
pop
jnp
clc
mov
mov
and
xchg
in
jge
cld
loop
mov
ds
decl
mov
pop
mov
jecxz
pusha
sub
jbe
loop
lods
loop
dec
mov
jo
loopne
push
in
inc
and
call
daa
push
test
loopne
sbb
cltd
mov
sahf
fstps
mov
xor
xchg
outsl
or
add
mov
jns
andb
dec
divl
dec
push
mov
add
inc
jp
cwtl
pop
fcomip
sub
inc
sub
das
xchg
sbb
or
and
and
mov
sti
cltd
insb
test
push
dec
inc
add
ret
stos
mov
push
xchg
mov
loopne
cmpsl
loop
pop
lret
jbe
push
or
push
mov
mov
or
sbb
sbb
lret
mov
dec
xchg
xchg
or
scas
push
add
cmp
sub
and
inc
js
std
xchg
mov
in
and
inc
adc
ficomps
push
and
mov
add
xchg
cli
push
shrb
fdivl
push
jnp
xor
mov
inc
jnp
and
inc
mov
ficoms
mov
inc
add
cs
sbb
inc
pop
jg
ret
mov
pushf
loop
shr
cmp
sbb
out
bound
cli
lds
les
sahf
cmp
insl
and
and
cmpsb
aam
popa
xchg
pop
das
and
sbb
lcall
nop
push
popa
fdivr
ret
mov
in
and
test
inc
jo
bound
xchg
push
popa
int3
inc
pop
ja
push
cmp
leave
icebp
nop
popa
xchg
mov
scas
push
or
xor
mov
push
jmp
and
xor
inc
mov
mov
push
add
inc
adc
mov
xor
lea
out
cli
mov
adcb
dec
mov
xor
or
aam
xchg
pop
inc
daa
leave
inc
mov
or
push
repnz
rol
mov
adc
out
jns
cli
les
dec
cwtl
iret
jle
jb
jns
mov
out
data16
jae
jns
or
mov
sbb
inc
popf
cmpsl
sub
in
mov
fwait
popa
mov
cmp
and
mov
jge
mov
mov
pusha
in
adc
inc
das
inc
mov
push
les
cmp
jns
jo
mov
jp
hlt
adc
xor
in
shll
xor
popa
mov
push
div
dec
js
lea
ljmp
adc
mov
insl
or
cmp
arpl
stos
push
jp
int
jbe
xor
mov
inc
jnp
cmp
lods
jl
rcll
hlt
scas
jl
adc
jb
mov
mov
mov
mov
xor
nop
xor
mov
jg
cld
jo
in
mov
inc
imul
xor
cmc
xchg
cmpsb
dec
push
stos
ficoml
xor
xor
cmpsb
jle
xor
popf
fnstsw
scas
rolb
inc
gs
xor
imul
xchg
in
orb
and
inc
mov
mov
jo
outsb
lock
sub
outsb
lcall
push
pop
xchg
cs
shlb
cmp
outsb
lds
aas
les
jp
mov
add
pushf
es
dec
xchg
in
mov
xchg
js
bnd
mov
ficomps
mov
inc
push
cmp
or
lods
pop
dec
sbb
mov
dec
std
inc
mov
lods
adc
and
sub
pop
bound
sub
stc
cli
xor
call
or
or
pop
lret
cwtl
pop
adc
mov
out
popa
or
sub
xchg
sbb
cmc
pop
push
push
test
pop
push
ret
cmp
jns
sbb
jecxz
push
sub
movsb
push
leave
stc
xlat
and
mov
aaa
cwtl
push
cmpsl
out
xlat
pop
sub
fidivrl
push
outsl
xor
jnp
into
dec
xchg
push
push
add
push
mov
xchg
mov
test
adc
loopne
lods
mov
dec
test
push
movsb
je
orl
inc
fldlg2
leave
inc
popa
push
leave
hlt
cmpsb
leave
ficoml
shlb
sahf
mov
fwait
addr16
mov
mov
mov
outsl
dec
movsl
or
inc
bound
sbb
dec
fcoml
cmp
and
xchg
loopne
xlat
mov
mov
clc
enter
cmc
pop
adc
into
xchg
mov
xchg
cmp
mov
inc
cs
add
pop
popf
xchg
popf
loope
or
adc
add
jnp
jge
push
rclb
das
ja
hlt
push
sub
js
and
stos
jae
shl
jne
push
js
icebp
or
pushf
outsl
mov
repz
jl
cmp
lds
mov
ror
mov
js
out
mov
jl
pop
xchg
fimull
add
lods
mov
lcall
pop
sti
fdivrl
xlat
mov
stos
xchg
cmpsb
mov
incl
sub
and
or
popa
push
shl
pushf
lret
iret
push
add
cmp
dec
das
sahf
or
icebp
and
push
lods
mov
or
push
loop
jno
sbb
shrl
shll
and
outsb
movsl
xchg
ret
int
pop
sbb
inc
mov
jo
add
push
push
lods
out
rcr
jle
pop
mov
in
pop
lods
pushf
xchg
sbb
jae
pop
test
push
xchg
pop
jmp
inc
dec
pop
in
or
shll
or
sub
aaa
mov
in
ljmp
inc
cmp
mov
adc
mov
movsl
pusha
adc
mov
jmp
sbb
sub
inc
imull
pop
insl
inc
sbb
fsubr
push
insb
jne
out
xchg
dec
aas
leave
sub
dec
cmp
in
in
cmp
cmp
ss
mov
call
icebp
mov
and
pusha
jbe
test
subl
cmpl
pop
add
clc
pushf
ud1
add
out
aam
jno
dec
xchg
cmpsl
lods
and
popl
test
cmc
les
lcall
inc
mov
inc
sub
pop
lods
addr16
bound
pop
cli
arpl
loopne
loopne
sub
mov
lods
lret
and
lret
les
sub
or
out
pop
stos
les
movsl
call
add
inc
jno
push
mov
xor
adc
movsl
sbb
fisubs
pop
pushf
and
add
filds
ret
sbb
cmp
sub
mov
cmp
clc
daa
push
imul
mov
popf
lock
or
pusha
cmp
aad
fsubs
sbb
jb
and
mov
notb
fsubr
les
sbb
push
mov
loopne
mov
dec
ret
xlat
and
dec
cld
icebp
dec
xchg
mov
cmp
push
inc
nop
dec
inc
js
push
popf
movsl
pop
leave
js
cld
xchg
cmc
ret
xor
pusha
cs
insl
jmp
mov
mov
cmp
jp
jo
push
xchg
sbb
pop
cld
push
fnstsw
movsl
mov
push
fsub
inc
adc
out
ficomps
xlat
adcb
pop
sahf
mov
rorb
lret
xchg
mov
mov
js
xchg
loope
jno
or
data16
mov
xor
xchg
les
jmp
dec
jno
mov
sub
imul
test
jg
ss
rcrb
int
cltd
xchg
test
xchg
bound
in
push
dec
aam
stos
and
sub
push
jo
mov
dec
rolb
rorb
cmp
arpl
lods
scas
xchg
dec
xchg
mov
inc
test
stc
cmp
stc
rcrl
or
bound
adc
rol
xchg
pop
fbstp
cs
sub
icebp
pushf
cmp
jno
and
mov
mov
out
cmp
loope
add
sbbl
xlat
cwtl
enter
imul
loop
pushf
lods
xchg
lds
jmp
push
outsl
add
fisttps
mov
xor
fcomps
pop
sub
mov
dec
data16
rcll
aad
mov
loope
dec
pop
push
inc
mov
subl
jecxz
jmp
popf
ja
xchg
mov
sbb
sub
mov
shr
rorb
xor
pop
jle
pop
adc
xchg
mov
mov
xlat
mov
jbe
jne
push
pop
and
mov
fadds
testb
or
cli
xor
xchg
mov
cmp
loope
stc
xor
repz
in
lds
push
ss
gs
inc
dec
adc
xor
and
push
cmp
sub
arpl
add
mov
mov
fnstenv
add
cmp
insl
lea
and
in
and
lahf
jmp
xchg
push
insb
pop
jo
pop
stos
dec
inc
inc
and
mov
divps
sbb
cmp
insb
pushl
pop
ds
inc
jae
mov
sbb
mov
pushf
cmpsl
inc
fcmovnbe
sbb
js
xchg
stc
lret
cmp
add
fisubrl
rorb
scas
push
dec
pop
cmpsb
in
stos
cmp
xor
ds
sbb
xchg
daa
add
or
aam
mov
sub
aas
sub
pop
ret
add
jbe
cmpsl
push
add
popa
out
add
inc
lahf
jne
jae
pop
insl
mov
mov
cmp
fsubrl
fsubp
dec
sbb
mov
pusha
je
fs
mov
in
adc
outsb
mov
int3
sti
pop
push
push
test
xchg
dec
cmp
dec
lock
adc
xor
subb
mov
mov
mov
clc
hlt
lea
mov
fistpl
sub
test
sub
mov
sbb
mov
loope
cld
int3
test
mov
add
inc
leave
xchg
incl
stc
out
cmp
loop
loope
cmp
aad
push
cmp
xchg
bound
repnz
xchg
or
xor
jbe
pop
imul
stos
sbb
arpl
aam
mov
or
dec
xor
enter
pop
popa
inc
mov
xor
sbb
std
push
cmpsb
shr
adcb
adc
sub
mov
mov
mov
aas
cs
pop
mov
int3
push
ret
out
jle
add
add
adc
add
rclb
sarb
sbb
cmp
dec
mov
mov
pop
ljmp
push
loope
adc
popa
outsb
lea
int
imul
mov
cltd
pop
daa
inc
mov
push
js
xor
jnp
nop
daa
shlb
data16
int3
or
inc
les
fidivl
das
inc
push
inc
sub
dec
popa
fwait
sub
mov
jp
icebp
cltd
jnp
mov
add
mov
jno
iret
push
and
adc
out
pop
mov
andl
imul
jae
bound
and
and
xchg
sbb
filds
aad
push
xchg
pushf
jno
add
xor
loopne
je
clc
rcll
jecxz
lcall
sbb
pop
dec
cmp
pop
jb
lods
es
jl
out
cld
cmp
ret
fnsave
daa
pop
xchg
xor
jg
xchg
push
adc
push
cmp
hlt
into
pop
stos
jl
nop
ret
mov
sti
movsb
xor
pushf
insl
shl
pop
xchg
shrl
lock
bound
inc
mov
dec
repnz
or
push
xchg
jo
sbb
cli
js
imul
sub
fmul
dec
dec
pusha
testl
mov
addr16
jp
jns
stc
or
pop
ss
mov
pop
scas
in
jge
pop
pop
test
or
mov
loopne
push
or
shrb
pop
cmpsb
dec
pop
les
xchg
push
loope
jge
loopne
pusha
push
dec
lods
ds
out
in
mov
mov
out
or
sub
add
sbb
lret
scas
push
test
loope
xor
sbb
adc
fwait
in
rcr
xchg
pop
push
andb
jl
stos
subb
xchg
mov
out
or
and
out
mov
mul
lea
in
ss
mov
jae
adc
movsl
add
mov
std
jg
mov
es
aaa
push
int3
mov
imul
add
and
pop
out
or
ljmp
pushf
lock
popa
stos
and
orl
imul
ret
push
pop
fs
fstpl
and
dec
lahf
push
mov
inc
cmpsl
test
lahf
loop
loope
test
es
xchg
mov
xorb
or
inc
cli
pop
stos
cli
sbb
sbb
imul
add
push
shlb
jg
shr
in
in
lcall
outsl
mov
dec
negb
add
mov
sti
mov
cmp
cwtl
or
ds
push
mov
clc
addb
popa
lea
lret
es
testb
add
repz
xchg
push
notl
jns
push
adc
jp
out
sbb
push
shlb
in
cmpsl
aas
movsb
lret
adc
mov
push
inc
dec
and
jge
xchg
int3
jae
fisubrl
pop
mov
inc
mov
push
pop
mov
sub
cmpsb
dec
popf
stos
stos
mov
lods
mov
dec
pop
push
mov
xor
les
pop
nop
xchg
and
aad
push
rcll
int3
xor
pop
lods
je
subb
sbb
cmc
aad
shlb
inc
mov
adc
cld
cs
add
adc
out
adcb
add
pop
and
mov
aam
sub
pop
lret
adc
adcl
or
imul
mov
push
dec
inc
lcall
mov
mov
xchg
adc
jmp
and
push
ret
sti
pop
clc
lods
loopne
pop
lahf
pusha
jnp
out
es
jmp
mov
adcb
xchg
xchg
inc
test
pop
cmp
in
push
movsl
mov
add
fmuls
xor
rcll
sbb
arpl
dec
inc
out
cmp
das
jecxz
cmpsl
imul
jne
inc
aas
lret
xchg
jnp
mov
lods
dec
sub
mov
fidivl
xlat
xor
xchg
ds
add
and
out
fs
sbb
nopl
mov
xor
mov
pop
out
cltd
fidivrs
xchg
push
sbb
add
repz
mov
daa
or
repnz
dec
js
push
sbb
insb
adc
inc
cmp
jne
xchg
mov
sub
js
adc
sub
sarl
rolb
push
xchg
pop
jb
pop
dec
daa
mov
cmpsl
pop
test
mov
xchg
insb
xchg
icebp
cmpsl
inc
push
fst
jae
mov
lods
bound
adc
mov
pop
mov
pop
push
cmpsl
test
inc
adc
mov
cmp
test
hlt
flds
mov
lahf
lock
dec
push
pop
mov
dec
bound
rclb
ds
aas
xlat
dec
jle
arpl
xchg
jge
push
cmp
push
dec
and
mov
mov
stos
lock
mov
bound
mov
xchg
insb
mov
imul
addl
ljmp
mov
sbb
inc
lret
jmp
decl
pop
stos
cmp
and
pop
jp
lahf
clc
xchg
inc
fiadds
dec
or
sub
pop
sub
xchg
leave
out
inc
mov
cli
jecxz
push
cmp
and
in
out
fcoms
faddp
dec
lods
insb
adc
mov
mov
push
pop
add
add
pop
movsb
xor
aas
das
mov
push
sbb
sti
xchg
push
inc
lds
out
mov
orb
sub
pushf
push
shlb
xor
enter
ja
adc
mov
popa
push
xchg
mov
xor
and
testl
push
cmp
lcall
stos
call
xor
mov
jp
inc
insl
lods
jmp
movsb
insb
sub
inc
outsl
pop
or
mov
and
mov
cwtl
add
mov
lods
in
fimuls
ret
xor
and
movb
sbb
stc
xor
sarl
pop
call
xchg
pop
mov
popa
xor
jp
or
das
lea
or
cmp
out
adc
inc
inc
icebp
adc
call
pop
gs
mov
pop
or
xchg
add
adc
push
mov
movsl
adc
and
fadds
dec
pcmpeqb
jno
adc
jmp
xorl
xlat
mov
add
popf
call
das
xor
push
xchg
adc
mov
popf
mov
mov
scas
and
pop
cmp
sahf
mov
movsl
call
and
leave
divb
dec
pop
cmpsl
sbb
sahf
push
mov
not
lea
pusha
iret
mov
clc
scas
in
outsb
clc
mov
inc
mov
xor
decl
pop
xlat
xor
out
push
adc
js
adc
inc
or
idivb
dec
shr
sbb
jne
test
int3
sub
shrl
lods
into
push
filds
adc
fcoml
mov
cmp
in
rclb
and
in
outsb
push
inc
jnp
fsubr
gs
xchg
dec
pop
mov
sti
adc
rcr
aam
dec
addr16
insl
sbb
push
mov
mov
sub
cli
in
or
sub
cmp
push
xchg
lahf
mov
rclb
xor
roll
and
scas
add
bound
and
popa
fdivr
push
out
push
test
shll
jnp
gs
pop
in
lock
lea
inc
inc
add
jns
inc
push
xchg
xor
xor
push
rcl
and
mov
sbb
xchg
mov
out
lds
push
stos
inc
dec
out
pop
mov
sbb
rcr
sub
adc
out
xchg
mov
or
lods
jae
dec
jg
xlat
jns
lcall
mov
repnz
xor
mov
xchg
cmp
into
lods
xor
and
repz
pop
add
jg
out
fidivrl
mov
cmp
xchg
mov
pop
clc
outsl
leave
adc
call
inc
sub
nop
jp
divl
out
pop
xor
mov
stos
iret
push
in
stos
out
sub
into
inc
and
inc
roll
mull
icebp
mov
out
xchg
sbb
jg
jle
adc
mov
push
push
mov
xchg
jmp
cwtl
and
adc
or
sub
call
insl
in
dec
mov
adc
push
sub
shl
push
xchg
xchg
adc
pop
sub
popa
fiadds
std
pop
adc
lret
or
faddp
mov
dec
sahf
cmp
jns
xchg
mov
int
ds
test
push
sbb
xor
and
pop
popa
test
dec
push
add
xor
adc
jns
fnstsw
inc
leave
mov
jae
jp
bound
imul
adc
sbb
xchg
stos
xchg
xchg
fdivrs
mov
sub
mov
jle
xor
mov
push
int
or
mov
out
mov
sub
dec
stos
les
mov
mov
and
les
mov
mov
js
je
sbb
sub
stc
pop
inc
pop
sahf
shlb
push
sbb
adcl
xlat
loop
inc
loop
sbb
cmpsb
pop
dec
out
mov
fistps
andb
jg
lods
das
lds
mov
push
lds
leave
push
add
in
lahf
mov
sub
sub
jo
rclb
mov
adc
pop
insb
jnp
adc
rcr
xlat
jns
in
mov
out
out
pop
fcmovnbe
nop
dec
add
mov
or
in
lods
xchg
inc
fstp
cmp
pop
pushf
or
les
adc
sbb
rorb
gs
jns
int
lea
pusha
fnsave
in
xor
out
call
nop
not
sub
xor
mov
push
mov
repz
jmp
test
and
fcmovbe
mov
sbbb
mov
lods
es
mov
push
sub
push
loope
cmp
sub
bound
cmp
jmp
jle
push
loop
aas
lret
pop
xchg
unpckhps
imul
mov
jno
loopne
rorl
inc
in
xor
in
jmp
nop
push
fmul
sti
gs
xchg
es
inc
adcl
sbb
jg
jne
fdivs
call
pop
pop
adc
icebp
out
cmp
stos
nop
or
sahf
or
and
adc
sbbb
mov
mov
jge
add
dec
rol
jecxz
enter
testl
or
dec
inc
sbb
or
rclb
jnp
jo
and
mov
add
dec
addb
shrb
pop
adc
in
repnz
xchg
jno
sbb
repnz
jb
xchg
mov
xor
pushf
push
and
test
sti
sbb
push
sbb
andl
test
sbb
leave
jnp
lret
loop
jecxz
and
lcall
mov
add
cltd
fimuls
pop
cmp
cmp
mov
and
lds
sbb
fistl
mov
loop
jge
push
mov
add
out
inc
sub
int3
outsl
rolb
xor
xor
or
pop
xchg
or
push
mov
fldenv
sbb
imul
enter
fsubr
dec
lods
and
adcb
int3
aad
add
lret
and
cltd
aad
fadd
lcall
outsb
xchg
cmp
inc
dec
mov
mov
clc
fsubrp
pop
adc
dec
jmp
jo
shr
jnp
sub
pop
xchg
out
mov
push
cltd
mov
sbb
jnp
push
insl
pop
xchg
mov
add
sbb
cli
mov
outsb
lret
out
mov
js
pushf
lock
sbb
sti
mov
xchg
shrl
cld
test
addb
pop
insb
loop
push
mov
imul
mov
mov
push
popa
xchg
inc
cmp
sahf
mov
push
mov
sbb
add
test
xchg
lea
lods
fldl
cmp
stc
enter
inc
out
repz
pop
mov
lret
xchg
gs
pusha
cs
add
xor
into
and
cld
dec
test
imul
repnz
stos
jnp
dec
xor
iret
inc
xor
lds
pop
stc
xor
xchg
jp
sbb
mov
js
sub
popa
sarb
dec
xchg
test
cmpsb
sub
aam
mov
test
cmp
jns
add
sbb
ret
adc
inc
mov
mov
inc
add
or
and
loop
data16
sahf
aaa
pushf
and
loop
arpl
inc
jbe
test
sub
popf
xor
push
xor
pop
jmp
jae
adc
pop
mov
xchg
test
fdivrp
dec
pop
ret
js
and
bound
test
sbb
pop
cmp
or
sbb
sub
cmpl
push
cmp
mov
add
inc
add
pop
mov
push
pop
lcall
add
inc
data16
daa
loopne
pop
insb
mov
lea
and
mov
or
sbbl
daa
stos
and
iret
lret
sub
cld
sbb
addb
cmpsl
add
jge
es
int
xor
fldenv
aaa
outsb
fwait
aas
fistl
pop
inc
gs
repnz
pop
mov
and
or
jb
mov
aas
fcompl
in
loopne
pop
push
lods
out
push
mov
dec
int
call
fadd
inc
or
cmpsb
jb
pop
mov
jo
stc
cmp
fwait
jbe
fdivs
xchg
in
push
push
sub
mov
mov
xchg
mov
sub
ficompl
push
imul
gs
pusha
inc
ja
mov
and
fwait
js
jmp
push
test
adc
cpuid
or
pusha
pop
or
fdivl
xchg
movsb
sbb
rorl
sar
out
jne
les
js
imul
icebp
in
add
add
cmp
adcl
xchg
adc
push
test
adc
int3
sub
dec
cmp
add
pop
jae
lahf
push
in
sbb
adc
sbb
test
jl
jmp
fidivrl
adc
mov
jg
mov
insl
fsts
hlt
add
jnp
xor
arpl
rcr
adc
sbb
push
inc
pushf
xlat
jno
cmp
pushf
fistl
pop
pop
push
fdivrs
pop
cmpsl
jo
movsb
out
pop
insl
mov
and
lods
ds
out
pushf
rorl
mov
jmp
test
popa
cmp
lods
mov
push
adc
sahf
lcall
les
cmp
mov
jnp
fcomps
lret
dec
fnclex
into
rcll
in
push
out
inc
out
push
out
jns
out
or
jns
das
add
aas
push
inc
call
push
mov
xor
sbb
and
imul
push
cmc
mov
lods
adc
xlat
imul
lods
fldl
stos
fcoml
frstor
push
aad
cmp
jecxz
xor
filds
loop
stos
in
jl
lods
lret
outsb
pop
js
bound
pop
test
jbe
mov
mov
and
jae
jne
dec
mov
bound
push
aaa
cmp
push
mov
dec
loopne
xchg
xchg
les
push
mov
fdiv
inc
cli
lcall
push
outsb
fcomps
inc
out
lods
sub
loopne
lods
int3
in
adc
lods
cmpsl
xlat
sub
loopne
or
adc
jecxz
dec
arpl
mov
jl
mov
leave
xchg
xor
call
sbb
mov
cmp
out
xor
lds
jecxz
imul
sub
sub
mov
scas
fisttpl
inc
or
rcrl
sub
out
pop
lock
call
jnp
bound
sub
aad
sub
lahf
in
mov
fimuls
fcmovb
pop
adc
popl
pop
dec
push
insl
and
lock
icebp
xor
std
dec
sbb
clc
repnz
mov
out
jmp
dec
push
cld
popf
jno
push
jns
movsb
adc
cli
aaa
xlat
les
dec
add
or
pop
das
fdivr
xchg
les
cltd
jbe
xchg
cmp
cmp
clc
gs
fdivs
jne
cmpsb
aas
pop
add
push
jae
and
pop
inc
inc
lret
insl
lret
xor
mov
lcall
imul
mov
cmp
cmp
out
and
lcall
and
adc
dec
mov
xor
xlat
jnp
inc
lock
push
in
daa
jle
jne
inc
push
aam
lret
out
inc
xor
cld
xchg
fdivrl
inc
into
das
mov
fwait
cmp
icebp
add
aam
pop
push
ficompl
sahf
icebp
inc
insb
seta
cmp
iret
flds
and
dec
sub
mov
lds
in
inc
stc
mov
and
jge
inc
xchg
push
repz
lods
jne
jns
das
sbb
js
jecxz
fwait
jae
push
in
add
push
sub
jbe
faddl
dec
cmp
sahf
cmp
out
stos
cmovs
dec
loope,pn
push
enter
loopne
popf
sbb
mov
outsl
mov
mov
psubsb
inc
lret
jmp
add
out
push
fidivl
loop
xchg
out
fldl
in
jae
push
jmp
mov
std
dec
fstpt
filds
scas
push
push
ret
mov
insb
sub
les
sub
cs
cltd
pop
icebp
mov
mov
aad
sub
shrl
dec
inc
fsts
pop
scas
outsl
test
popf
xchg
and
cli
ret
dec
fmul
repnz
mov
lea
mov
inc
push
ljmp
jle
sub
mov
adc
es
dec
cmp
scas
sbb
xor
gs
or
dec
add
int
mov
pop
jl
adc
pop
les
popf
inc
addr16
dec
hlt
xchg
std
mov
in
adc
or
or
fists
sbb
xchg
movsl
incl
and
mov
push
xor
pop
pop
push
adc
outsl
mov
dec
jmp
and
movsl
insl
cmp
loop
or
push
cmp
xchg
xor
repz
mov
ja
mov
scas
pop
mov
sbb
mov
mov
cli
mov
mov
push
jge
dec
and
aas
out
adcl
mov
aad
repnz
sub
cs
clc
pop
pop
rsm
inc
sub
pop
push
jmp
add
and
sub
jne
movsl
aad
or
cwtl
jl
ret
outsb
push
or
adc
out
dec
xchg
cltd
jmp
rcrl
repz
popa
pop
iret
mov
es
mov
shr
and
jae
xchg
fnsave
es
jge
sbb
inc
sub
cmp
mov
xchg
lmsw
scas
lcall
gs
adc
adc
xchg
push
pop
lock
sub
adc
negb
stos
or
sub
ljmp
ret
dec
push
enter
and
cmp
adc
in
out
mov
cwtl
mov
add
test
sub
jbe
xorb
inc
cli
cwtl
dec
lret
adc
dec
adcb
popf
pushf
std
jmp
inc
xor
add
loope
xlat
js
mov
xor
movsl
mov
arpl
in
shrb
lahf
pusha
jmp
jge
xor
mov
mov
cmpsb
imul
cmc
cwtl
fs
or
mov
cmpb
fistpl
dec
mov
mov
inc
out
cltd
adc
pop
mov
push
sarl
fisttps
bound
scas
outsb
inc
lea
aad
push
push
sbb
stos
andb
add
or
xor
and
or
ja
lret
lods
mov
orb
rclb
stc
mov
fs
divb
gs
jg
aas
xor
lds
lods
adc
hlt
in
rcrl
lea
insb
mov
and
loope
jge
sbb
jecxz
push
ljmp
mov
ja
or
lahf
outsb
pop
mov
mov
shrb
insl
rdtsc
pop
cli
int3
dec
call
sahf
ret
or
in
jp
xchg
mov
test
idivb
sahf
pop
inc
sbb
mov
cli
push
xchg
fldenv
xchg
mov
sub
inc
cli
fldl
jle
enter
js
fldt
adc
mov
xchg
imul
gs
hlt
call
cmc
xor
add
inc
push
or
and
add
cmc
mov
shll
fsubr
lret
lods
jg
imul
andb
mov
bound
lcall
jge
int
add
pop
pop
out
push
jbe
or
in
cmp
repnz
inc
pop
pop
mov
or
pop
popa
sub
int
pop
ret
mov
inc
adc
mov
ja
adc
xchg
pop
lods
jae
jle
fstpl
sbbb
dec
mov
mov
aas
pushf
cmc
xchg
mov
cwtl
mov
or
mov
out
xchg
lods
je
test
mov
push
es
popf
adc
mov
or
xor
out
mov
push
jne
je
test
add
xchg
mov
inc
cmp
sbb
ret
les
lock
cltd
dec
or
movsb
cmc
mov
mov
lcall
xchg
and
adcl
pop
test
xchg
cmp
fsub
jne
enter
popa
mov
jae
out
mov
cmp
popf
push
mov
icebp
xor
outsb
es
in
test
xchg
cld
test
imul
mov
inc
je
stc
add
enter
pop
dec
sbb
and
mov
xchg
jg
or
cmp
xchg
ss
cmp
and
js
pop
ljmp
push
in
xor
push
xchg
je
jno
mov
clc
mov
imul
mov
mov
insl
aaa
insb
dec
xchg
mov
pop
adc
push
in
push
pop
and
stos
xor
call
lods
loop
data16
jge
xlat
mov
mov
mov
loope
mov
dec
cmp
stos
repz
mov
or
push
pop
inc
pop
cmp
insl
xchg
adc
cs
and
mov
aaa
stos
cmp
in
push
add
in
stc
xor
mov
jo
add
sbb
and
mov
xor
addl
fisubl
rcl
pop
je
dec
cmpsb
xchg
push
jge
or
out
mov
fs
or
daa
cld
gs
call
fadd
mov
xchg
aas
mov
xor
dec
fisubl
clc
mov
xchg
jno
iret
mov
or
push
mov
mov
das
popf
xor
push
roll
sbb
out
out
repnz
inc
mov
xchg
sbb
test
in
pop
dec
pop
in
test
xor
dec
xchg
jmp
popf
jge
les
xor
mov
jns
cmpl
lahf
add
sbb
or
loope
hlt
hlt
jge
mov
jne
or
cmp
or
push
cmpsb
cmpsl
mov
in
adc
xchg
and
ja
pushf
xor
lods
inc
outsl
xchg
int
stos
pushf
adc
mov
xchg
mov
mov
xchg
xor
xor
or
jmp
jp
add
pop
dec
sub
outsl
lock
xchg
inc
pop
or
sbb
fildll
outsl
inc
fisubs
push
xor
xchg
fidivrs
add
dec
or
in
out
and
arpl
lods
insb
or
stos
mov
enter
xor
sbb
cmc
repz
mov
lods
cmpsl
mov
or
sbb
add
scas
xchg
test
iret
push
xlat
push
sub
int3
push
dec
and
inc
jmp
ljmp
pop
mov
stos
jp
aaa
mov
add
sbb
mov
into
daa
adc
dec
jmp
jo
xor
stos
out
add
cmp
jo
or
mov
jbe
jb
loop
mov
mov
lods
add
lahf
out
add
enter
addr16
or
or
sbb
or
js
cli
sub
sbbl
adc
mov
xchg
pop
jp
mov
shlb
arpl
pop
jae
xchg
mov
xor
stos
mov
adc
inc
or
inc
into
or
jmp
out
not
das
ss
aad
hlt
push
jae
fldt
sbb
call
ficompl
xchg
mov
out
nopl
or
mov
mov
nop
pop
xor
or
sub
daa
jl
pop
inc
fimull
scas
mov
daa
jnp
jge
inc
jbe
adcb
inc
bnd
cmpsb
mov
stos
dec
mov
aas
push
and
adc
mov
adc
enter
cmp
pop
or
loop
dec
addl
aas
fsubrs
lret
test
and
scas
cmc
dec
fsubrl
xlat
pop
std
jno
mov
jno
nop
mov
sub
push
inc
xchg
jo
jp
ja
sbb
shll
or
sub
outsb
push
and
imul
enter
pop
lcall
mov
and
daa
outsl
mov
pop
test
faddl
adc
xor
nop
das
out
iret
in
popa
mov
pop
or
ret
xchg
pop
in
sub
fwait
push
icebp
pusha
cmc
and
popf
push
dec
icebp
imul
add
or
loop
push
dec
repz
in
lahf
aad
mov
loope
insb
rcll
ret
cmp
loopne
fmull
pushf
push
out
sub
dec
xlat
std
pusha
sahf
and
shlb
lcall
fsub
sub
lock
mov
rcrb
mov
rorl
push
ror
push
mov
adcl
ljmp
sarb
cltd
idivb
jb
jg
divl
push
lcall
rcrl
fsubl
and
fnstsw
jns
dec
dec
jno
nop
xor
ret
sets
xor
int
push
pop
repz
xor
sahf
or
addr16
jge
sub
or
lods
adc
sub
jle
jg
jno
sbb
push
jae
out
sti
iret
outsl
and
adc
pop
push
ret
pop
sub
loope
jle
adc
xor
pop
sbb
or
stos
pop
outsb
or
and
jnp
pop
dec
jmp
xchg
fsub
lds
xchg
stos
xor
ficoml
cld
int
jb
xchg
out
jle
cwtl
testb
addl
shll
jns
mov
pop
call
jns
dec
xchg
dec
lahf
stos
jae
repz
mov
pop
mov
xchg
rcl
cmp
xchg
outsb
iret
aam
repnz
popf
push
ljmp
ret
in
cmpsl
xchg
xchg
lea
roll
xchg
fcoml
not
sbb
leave
add
jb
mov
lahf
jg
cli
push
sub
xor
sbb
dec
notb
push
sbb
adc
push
mov
jge
sbb
inc
sub
ret
xchg
mov
or
in
int3
lcall
xchg
pop
sbb
xor
ljmp
pop
sbb
or
les
cmpsb
outsb
mov
and
mov
outsb
movsl
mov
adc
mov
sub
or
inc
push
jle
push
push
sti
inc
andl
lcall
adc
jg
cmpsb
pop
jb
and
mov
js
jl
sbb
int
lahf
scas
sub
das
cwtl
dec
push
adc
add
in
cmp
xor
in
mov
popa
clc
arpl
dec
roll
ret
push
sub
mov
and
jecxz
mov
jo
mov
mov
mov
popa
sti
mov
mov
jmp
loopne
push
push
push
xchg
fsubrl
cmp
clc
jle
sub
lds
and
xor
pop
mov
fistpl
cmp
dec
and
fwait
aad
or
movl
push
xchg
shlb
sub
mov
xlat
sub
scas
movsl
into
cmpsl
cli
adc
jmp
inc
lods
or
mov
inc
add
cld
cwtl
loope
test
jne
pop
mov
shl
cwtl
lds
mov
pushf
push
cltd
aas
sbb
push
les
jns
dec
sub
gs
push
push
mov
into
cltd
ljmp
ret
dec
rorb
sbb
jno
out
xorb
dec
ds
shlb
loopne
jo
mov
mov
cmp
loope
and
icebp
cmpl
ret
xchg
inc
or
inc
ret
jge
fbld
mov
push
in
push
in
sbb
pop
repz
aad
cmp
cmp
cmp
mov
pop
test
sbb
arpl
pop
or
adc
mov
push
lods
dec
push
pop
aam
fldt
or
mov
jb
cmp
or
jnp
or
iret
add
xor
and
call
loope
adc
cltd
ret
lods
cmp
mov
mov
lods
sub
jmp
pop
subb
push
and
jp
fiadds
out
push
push
scas
aam
aam
iret
and
andl
cld
adc
movsl
fwait
addr16
mov
adc
adc
pop
push
call
ljmp
jb
pop
push
fisttpl
and
std
call
jo
stos
loope
daa
inc
adc
sub
jl
insl
orl
sbb
rcrl
incl
mov
inc
mov
dec
out
cmc
test
stos
lret
xor
or
cltd
jecxz
adc
cmpsl
inc
imul
jle
jl
iret
ret
push
fcomi
jbe
dec
sbb
xchg
outsb
imull
in
js
movsb
jnp
outsb
mov
std
call
xchg
xor
in
mov
push
mov
mov
sub
jae
xchg
addl
sub
int3
jbe
loopne
jge
sub
aad
test
aaa
insb
pop
mov
or
xor
jns
shll
lds
xor
arpl
nop
stos
xor
pop
cli
and
mov
and
pop
sbb
sub
xor
or
mov
push
faddl
in
mov
sahf
pop
mov
sub
lret
out
xor
and
adc
add
mov
pop
repz
adc
ret
jnp
adc
lods
mov
jbe
lds
jno
iret
rcrb
imul
inc
cli
loope
stc
xchg
cli
fsubs
xor
mov
clc
cmp
fsub
jl
inc
leave
xor
push
sbb
mov
daa
add
ret
push
mov
clc
ja
pusha
lods
cmp
adc
stos
in
jne
sbb
sahf
push
xor
or
ret
and
or
ret
sub
push
leave
imul
mov
push
mov
dec
mov
inc
lcall
inc
stc
inc
es
js
pop
neg
inc
sbb
fstl
sbb
mov
loope
shlb
clc
shl
or
xchg
push
rcr
lea
mov
cld
sub
cmp
aas
sti
xchg
insb
lock
out
sub
inc
test
xor
and
jmp
inc
add
sti
sbb
in
mov
cld
mov
in
xchg
stos
rcr
or
sub
orl
push
mov
push
dec
xchg
push
pop
add
fidivs
fwait
daa
inc
dec
push
jge
lahf
push
jecxz
mov
or
mov
push
loope
sub
cmp
pop
frstor
cmpsb
mov
xor
mov
jl
shrl
fs
test
adc
mov
jp
scas
xor
jp
push
inc
roll
push
lds
inc
mov
stc
stc
shll
sub
adcl
pop
add
mov
xor
movsl
cld
fld
xchg
xchg
into
xchg
sti
imul
cmp
push
adc
stos
xchg
and
pop
jne
xchg
or
outsb
out
xor
jp
insb
pop
pop
pushf
or
inc
loopne
jl
ds
push
les
push
sub
xchg
pop
push
loop
addr16
leave
inc
xchg
mov
sub
xor
xchg
icebp
movsb
xchg
cmp
cmp
stos
lcall
lcall
rcr
fildl
lods
ja
sub
mov
sarb
mov
fnsave
and
je
inc
fidivs
mov
inc
pop
and
stc
xor
push
cmp
aam
pop
xchg
fyl2xp1
xor
pop
ret
insb
jmp
negb
push
sahf
push
fnstcw
ret
out
mov
lret
pushl
xlat
arpl
aas
jecxz
out
mov
jns
mov
incb
dec
or
lods
ja
mov
mov
cmp
subb
movsb
sub
push
push
jge
fst
repnz
jae
adc
dec
jp
jnp
iret
mov
call
lds
orb
or
js
cmp
in
arpl
or
jg
lret
fldl
mov
mov
sbb
cmp
mov
test
popf
inc
sub
inc
push
out
je
imul
dec
aaa
je
scas
rclb
add
xchg
sub
int
add
adc
addl
adc
cld
jmp
aam
out
sti
imul
mov
pusha
push
jle
jbe
and
mov
adc
mov
xor
std
pop
xchg
clc
mov
cmp
fnstenv
mov
mov
cs
cmp
and
inc
cmp
aam
jmp
mov
mov
ficoml
fldcw
into
outsl
aaa
jp
or
jmp
imul
iret
rol
mov
fcoml
out
pushf
add
call
outsl
int3
jbe
mov
jbe
mov
pop
inc
push
int3
aaa
mov
ds
mov
clc
out
push
leave
mov
push
int3
mov
xor
adc
mov
paddusw
lods
mov
push
cmp
rolb
das
inc
or
lret
jg
pop
shrb
scas
push
mov
or
xor
mov
mov
pop
or
hlt
sub
xorb
adc
cs
jl
push
pushf
sub
mov
lahf
mov
mov
xchg
adc
stos
pop
fcoms
adc
sub
adc
jo
sti
or
lock
cmp
test
lcall
jbe
adc
sbb
sub
xor
jae
pushf
dec
nop
dec
jle
jo
repz
push
icebp
ret
mov
xchg
add
stos
popf
lahf
mov
and
test
loop
outsb
pop
and
popa
fists
out
pop
out
push
gs
mov
stos
xchg
sbb
into
jecxz
js
pop
jge
adc
cld
popf
add
pushf
mov
pop
inc
xor
or
xor
test
xor
xchg
out
dec
mov
rsqrtps
jae
lahf
adc
sub
inc
sbb
in
xchg
jne
popa
xchg
xchg
push
or
out
pop
ljmp
sar
dec
inc
mov
mov
inc
mov
add
sub
inc
adc
push
outsl
cmp
rcrb
shrb
popa
xchg
hlt
cmp
add
out
ljmp
cmp
fsubrl
mov
jle
xchg
test
jne
pop
push
jno
loop
stos
les
cli
push
les
adc
test
xchg
jo
xchg
int3
adc
inc
fldenv
mov
divb
iret
scas
or
cltd
sbb
mov
jns
js
fs
insl
jne
cs
sbb
adc
pop
jo
mov
insb
mov
gs
jbe
or
jmp
js
xchg
cmpsb
pop
loopne
jnp
jae
popf
mov
jne
orb
stos
jl
sub
mov
rolb
lret
cmp
sub
sahf
push
pop
dec
lcall
adc
popf
add
popf
and
inc
inc
popf
sbb
stos
scas
sub
pusha
shrl
loope
jae
cmc
outsb
jb
test
inc
jno
lods
into
jbe
dec
ret
xchg
ja
rclb
popa
cmp
push
jbe
mov
mov
pushf
dec
insb
int3
jle
fsts
cwtl
inc
movsb
shrb
orl
call
or
imul
jnp
shl
adc
aas
in
adc
nop
pop
in
or
cwtl
jo
inc
dec
fdiv
out
fmull
sub
xorl
pop
pmulhuw
xor
dec
inc
or
call
decb
sbb
out
xchg
mov
aad
jecxz
js
rcrb
inc
inc
and
ljmp
lds
push
push
into
inc
imul
inc
or
movsl
stc
loopne
mov
inc
xlat
sar
scas
mov
bound
jge
inc
or
pop
pop
out
add
xorl
xchg
xlat
pop
scas
loopne
adc
jg
in
dec
and
arpl
pop
data16
push
in
mov
mov
lea
xchg
roll
lds
dec
imul
nop
imul
int3
inc
push
mov
repz
repz
arpl
mov
mov
sub
cmp
dec
fcmovb
ja
cwtl
scas
repnz
xlat
stos
cmp
or
jbe
es
cmp
sarl
jno
jl
lret
int
lea
dec
fists
mov
ficoml
dec
outsb
sbb
pop
jnp
shll
dec
cmp
enter
orl
das
adc
and
jo
ss
push
jb
push
out
movsl
or
mov
jge
call
cltd
push
or
push
adc
movl
ret
pop
cmpsl
in
dec
in
sub
mov
enter
mov
xchg
push
pop
mov
xchg
loop
and
pop
mov
rorl
repnz
xchg
lds
sub
fbld
in
xor
jge
icebp
mov
sub
mov
fidivl
cmp
adc
repnz
mov
shr
push
adc
sbb
add
inc
lret
push
fxch
out
xchg
repz
mov
dec
push
jp
cs
xchg
add
adc
decl
stos
in
sahf
inc
enter
shl
add
lods
cs
rcrb
arpl
jge
incb
jo
sub
rcr
ret
outsl
aam
out
dec
scas
cmpsb
xor
lret
imul
out
or
and
dec
jbe
xchg
jo
jnp
cld
nop
adc
xchg
and
es
je
bnd
sbb
jmp
test
mov
mov
jbe
out
movsl
cmc
xchg
push
pop
movsl
scas
mov
int3
cli
push
xchg
fs
popa
subb
cmpsl
pusha
lcall
rolb
clc
incb
xchg
push
add
sub
leave
adc
push
loopne
push
jmp
cmp
call
scas
fcoms
sub
pop
push
pop
movsl
pop
insl
in
daa
cmpsb
mov
adc
and
mov
ret
cmpsb
fnstenv
xchg
sub
sbb
idivb
cmp
lret
dec
loop
dec
insb
or
cld
jnp
and
ret
or
jl
jb
jne
mov
cld
repnz
jne
adc
cmp
adc
fildll
and
and
or
es
mov
pop
int3
add
shrl
icebp
pop
outsl
fbstp
and
cmp
pusha
adc
dec
mov
sub
dec
cli
sub
testb
cmpsb
mov
xchg
mov
mov
ss
push
adc
imul
insb
or
cs
mov
dec
and
fwait
insb
ljmpw
lods
into
test
bound
sbb
mov
mov
and
outsl
aas
ficomps
test
xchg
aaa
popf
or
mov
dec
add
dec
mov
push
shrb
insb
jmp
dec
mov
inc
inc
push
jecxz
ret
sub
sbb
cmpsl
pop
mov
fwait
push
jmp
ljmp
mov
xor
cmpsb
pop
iret
std
data16
rolb
outsl
aad
add
frstor
shll
inc
rcrb
add
bound
or
and
lahf
sub
hlt
fsubs
loope
ss
cld
divl
movsl
lds
mov
mov
cltd
sub
prefetchnta
inc
xor
or
push
xor
insl
and
movb
jge
ficomps
icebp
inc
adc
out
jno
lret
mov
xor
jge
cmpb
shl
out
dec
and
int
add
sbb
sbb
mov
xor
mov
js
cld
xor
clc
jnp
sub
pushf
out
add
es
jge
push
negl
out
jp
cmp
lods
test
in
lods
xor
jge
mov
aam
adc
mov
cmp
mov
in
or
das
adc
andb
iret
icebp
cmp
or
mov
sbb
xchg
int
cmp
dec
data16
test
adc
mov
xchg
mov
mov
andb
push
scas
mov
ds
inc
jmp
ljmp
cmp
lock
into
push
add
lahf
mov
inc
sbb
repnz
into
mov
mov
sbb
mov
pop
call
mov
mov
sub
jmp
stos
sub
lret
jo
jne
mov
fldt
enter
xchg
cmp
out
scas
sbbl
cmpsb
hlt
mov
cmp
add
cmp
push
aad
jae
cld
cmp
pop
fisubs
mov
xchg
aad
stos
div
sbb
add
mov
pop
jle
je
lret
pop
add
lret
inc
insl
mov
push
sub
das
fsts
pop
pop
mul
pop
dec
inc
push
dec
fldt
add
jg
dec
sub
loop
mov
testb
test
and
or
jb
push
and
push
fnstenv
les
sub
das
jge
js
sub
notl
push
dec
cmpl
fidivs
or
shll
dec
sbb
lahf
daa
lods
dec
mov
fimull
push
sub
and
out
cld
in
inc
mov
xor
and
add
xor
adc
cmp
cmpsb
mov
shlb
mov
call
cmp
dec
fwait
hlt
jb
sub
sub
xor
ds
fdivs
jae
sub
mov
dec
push
mov
rolb
lret
jl
or
fstpt
int3
es
aam
pop
cmp
cmp
sub
sbb
sar
fnstsw
add
imul
pop
mov
movsl
mov
je
jnp
cli
test
ds
insb
lret
adc
push
cmp
mov
out
sub
adc
mov
cmp
push
dec
mov
arpl
jmp
iret
cmp
sti
in
test
sbb
sub
push
dec
cld
daa
jge
data16
bound
sahf
jo
xchg
adc
cmpsb
cmp
sbb
lods
mov
cmpsb
lods
ret
adc
xchg
sub
shlb
pushf
iret
bound
jg
cmpl
pop
jge
jecxz
movsl
fstpl
and
jg
cwtl
lea
leave
or
push
in
loope
lret
or
mov
adc
pop
mov
dec
popa
add
xor
cmp
sub
adcl
fdivrs
lods
adc
data16
cmp
jecxz
or
mov
int
loope
lcall
test
cmpsb
mov
dec
loope
mov
sbb
dec
xchg
and
adc
rorl
sub
icebp
xchg
mov
mov
mov
dec
inc
popa
pushf
nop
xchg
fucomi
ss
push
imul
imul
jle
sahf
xor
sti
lahf
cmp
cs
fs
and
dec
mov
out
in
adc
mov
jg
rcrl
push
lcall
or
jl
xchg
lds
mov
pop
push
cmp
xor
popa
mov
push
insb
gs
mov
adcl
and
push
data16
scas
mov
ror
cli
and
imul
or
in
pop
ds
pusha
cmp
mov
cmpsb
stos
add
ds
or
fimuls
xchg
adc
pop
outsb
sbbb
push
or
aad
loopne
mov
mov
xchg
add
fs
xchg
xor
fisttpll
jbe
jns
jmp
stos
cmp
pushf
xor
fdivr
jl
inc
aas
cmp
fdivrs
xorb
add
sbb
xchg
data16
jns
fwait
mov
cmpsl
mov
and
pop
and
pop
xchg
sahf
xchg
fnsave
dec
push
mov
mov
sub
adc
cmpl
mov
jmp
fbstp
add
or
inc
xor
lret
adcb
or
xor
xor
je
in
gs
inc
shl
xor
push
int3
test
gs
inc
in
in
ds
loope
rcrb
sub
mov
stos
sbb
pop
mov
adc
and
std
pop
jno
adc
fs
sub
pop
mov
inc
or
lahf
cwtl
cs
mov
inc
push
and
hlt
push
sub
and
mov
popf
push
and
sub
movsb
aaa
stc
jno
bound
inc
inc
data16
cmpsl
loop
dec
adc
add
bound
push
dec
or
in
cmp
movsl
insb
popa
fnstenv
sarb
idiv
stos
loope
pop
mov
data16
lea
sub
loop
and
add
into
jbe
dec
test
sbb
cmc
int3
dec
popf
into
jnp
and
jo
push
ja
stos
roll
or
scas
mov
icebp
into
xchg
test
mov
hlt
popa
imul
test
std
mov
iret
out
adc
adc
adc
adc
mov
push
fstps
jno
push
xchg
xchg
neg
xchg
sub
xor
fdivrs
addr16
je
je
xchg
pop
inc
push
lret
in
leave
push
sub
fs
sysenter
cltd
insl
jg
inc
inc
cmp
fldenv
inc
test
push
inc
test
mov
xchg
dec
in
dec
lret
sbb
js
dec
adcb
pusha
sbb
adc
push
lret
loopne
push
dec
xor
sub
mov
xor
mov
loopne
aas
dec
sahf
daa
push
mov
add
add
js
dec
lahf
leave
xlat
mov
xchg
xchg
clc
mov
pop
mov
clc
and
dec
mov
ficoml
and
pop
ret
aad
and
or
vpsubd
int
mull
aas
scas
fsts
mov
fisttps
jo
notl
std
cltd
scas
sbb
sti
das
jge
and
mov
push
out
xchg
imul
or
fcoml
das
mov
pop
aas
push
sub
sub
pusha
je
adc
outsb
pushf
sub
cmp
mov
fsubs
mov
lret
leave
mov
sbb
pushf
jmp
xchg
push
or
bound
adc
mov
sbb
in
dec
push
xchg
jl
pop
aam
insb
dec
mov
psrld
mov
sbb
loopne
mov
ja
sbb
pop
popa
jno
lcall
push
scas
sbb
add
inc
insl
xlat
and
mov
mov
inc
das
mov
push
aas
dec
inc
cwtl
push
push
jbe
jp
jle
push
and
inc
stc
in
dec
adc
mov
out
push
ljmp
xor
pop
mov
xlat
mov
cmovl
movsl
xchg
out
mov
adc
mov
out
jecxz
mov
mov
les
jp
clc
pop
movsl
push
jne
and
lea
push
rcl
aas
xor
jg
enter
in
pop
cld
das
aad
pushl
imul
mov
test
xbegin
xchg
mov
mov
fbld
data16
jecxz
pshufw
xor
mov
fisubl
ret
xchg
imul
add
pop
mov
fdivs
adc
mov
add
xchg
cmp
stc
ljmp
push
fcompl
psubb
mov
aad
js
sti
mov
inc
hlt
push
xor
clc
and
sahf
sbb
add
dec
inc
sub
addr16
sahf
popf
pushf
dec
push
lahf
jo
sbb
add
xchg
das
outsb
popa
dec
adc
and
mov
nop
push
clc
or
cmp
imul
push
sub
xor
mov
push
insl
sub
mov
cmp
test
mov
mov
and
in
call
cmc
int
or
scas
push
xlat
popa
adc
int
bts
jns
shll
out
mov
xchg
pop
lret
out
add
push
push
cmp
inc
cmp
aad
repz
pop
cs
cwtl
cs
js
into
fisubl
push
cltd
fsubrl
adc
in
xor
pop
test
and
mov
push
mov
adc
ds
jae
int3
push
data16
and
iret
loop
xchg
push
mov
mov
stc
push
mov
fwait
pop
in
mov
xchg
inc
cmc
xchg
aam
jne
orl
pop
mov
and
and
xchg
pop
aaa
pusha
or
jne
jmp
push
mov
call
test
push
aas
cmc
shl
push
jno
mov
pop
jbe
or
mov
int3
cltd
or
xor
in
stos
jno
jg
cmp
fcoms
push
push
les
mov
leave
data16
adcb
xchg
sbb
test
adc
or
jp
jo
adc
jecxz
xchg
inc
push
scas
ss
inc
inc
movq
xchg
pop
popa
outsl
mov
mov
fistpll
ret
mov
call
or
fsubrs
outsb
add
lahf
mov
lret
cmp
dec
sbb
shll
out
nop
popf
xchg
sbb
sub
xchg
cltd
pusha
cli
xor
and
or
out
push
sub
scas
xchg
or
xor
scas
sbb
push
adc
popf
push
sbb
repnz
dec
sbb
push
dec
and
jl
dec
or
mov
test
jp
into
mov
jno
dec
pop
lods
test
nop
out
ret
fsts
jbe
iret
sti
jbe
mov
dec
and
jp
add
push
pop
aam
push
push
negl
gs
test
jne
and
jg
or
lods
stos
insb
inc
pop
lea
jne
scas
cmp
in
push
dec
push
loopne
mov
jb
addr16
mov
xchg
inc
and
inc
dec
test
jo
jnp
fcmovu
out
xchg
xor
lods
xor
clc
jp
hlt
in
ljmp
xor
xchg
and
pop
add
xor
test
imul
data16
mov
or
dec
cmpsb
cmpsb
mov
cmc
shll
in
sub
rol
mov
mov
repnz
xor
jecxz
sub
lahf
jl
push
mov
arpl
movsl
cmpsl
call
movsb
scas
leave
cmpb
mov
aam
cmp
push
adc
jnp
dec
push
ficompl
sti
add
or
pop
lods
mov
lret
cs
shr
nop
lock
xor
mov
sub
mov
mov
fcompl
adc
loope
push
xchg
in
pop
aas
outsb
imul
jmp
mov
arpl
pop
cmpsl
jbe
pop
inc
and
push
cmpsb
or
cmp
and
pop
mov
dec
imul
pop
int
mov
xor
or
xlat
repz
push
ljmp
add
cmp
jno
jnp
jno
das
popa
jecxz
loopne
cmp
or
mov
popa
outsb
sbbb
xor
xor
insl
int
popa
pusha
es
add
mov
repnz
mov
cmp
jl
out
int
loopne
push
fidivrl
mul
out
sub
add
mov
test
adc
mov
je
dec
push
mov
cmp
adc
pop
jecxz
pop
push
push
inc
push
imul
mov
movsl
xchg
and
lock
mov
or
cmp
sahf
push
sub
jne
jg
jl
arpl
in
lods
subl
sbb
mov
cmpsb
aam
out
and
jmp
mov
and
fs
dec
adc
sbb
xchg
pop
or
push
ja
jmp
andb
mov
xor
cmc
repnz
repnz
mov
jo
inc
fprem1
sbb
inc
repz
loopne
test
hlt
add
push
fwait
add
push
push
ja
sbb
pop
jl
testl
xor
repz
inc
sbb
pop
sbb
repz
lret
es
xchg
adc
pusha
lea
xchg
repz
js
enter
and
and
and
aas
sbb
and
sti
pop
push
mov
cwtl
test
mov
sbb
add
sbb
xor
leave
mov
xchg
outsb
inc
int3
and
ljmp
test
push
mov
shll
inc
test
insl
in
adc
mov
xchg
call
sbb
jmp
adc
arpl
jne
pop
ret
jb
pop
pop
ja
aaa
push
jle
jbe
mov
pop
fstpt
jle
test
xchg
cmc
test
data16
in
hlt
fldt
mov
inc
cwtl
imul
int3
test
cwtl
xchg
cmp
mov
lock
jmp
fisubrs
leave
enter
mov
xor
cmp
sahf
cmpsl
sub
insb
jecxz
sub
lcall
rcpps
xor
mov
xchg
cmc
cmpsb
inc
movsl
int3
add
dec
imul
inc
enter
adc
ljmp
test
jmp
movb
mov
movsb
cli
outsb
lcallw
jo
or
jno
jle
clc
or
inc
std
sub
aas
je
popf
stos
jecxz
sbb
cmpsl
mov
sbb
call
push
add
dec
cwtl
pop
mov
jmp
jl
std
fldt
xchg
inc
rol
pop
or
or
int
xor
sub
clc
cmc
cmp
pop
mov
fnstcw
push
mov
jo
adc
dec
mov
mov
andb
cmpsb
jg
sbb
xor
outsb
ret
jne
les
adc
leave
fs
dec
dec
xorb
jp
dec
scas
lret
adc
cld
sub
sub
mov
dec
xchg
cmpsb
push
dec
mov
movsb
das
loope
mov
sub
sbb
nop
jmp
ja
push
inc
pop
sbb
addr16
inc
jo
add
sahf
int
int
enter
sti
stc
cld
sbb
cmp
divl
ljmp
xchg
sti
int
fldl
out
in
mov
sbb
add
dec
mov
sub
adc
popa
xchg
pop
dec
jle
xor
push
cmpsb
movsb
add
fiadds
xchg
mov
test
cs
add
aad
add
daa
push
jle
adc
fwait
xchg
jne
xor
add
cmpsb
cmp
fsubs
lods
fsubrp
daa
xorb
leave
out
imul
pop
sbb
popf
pop
mov
and
pushl
shll
cmp
adc
cld
cmpsl
sbb
jno
or
fldcw
lea
cmpsl
adc
mov
leave
faddl
call
stc
stos
aas
decb
sahf
std
xchg
and
lahf
aam
add
inc
sub
dec
inc
dec
mov
cltd
popfw
mov
sub
shrl
mov
aad
xor
and
test
les
inc
int
mov
pop
divl
scas
xlat
push
inc
stos
push
clc
and
ret
fwait
dec
mov
pop
pop
cmp
mov
lcall
sub
jmp
mov
jge
jno
aas
je
popf
jns
jle
test
dec
sbb
aam
inc
and
inc
adc
cmp
xor
xor
inc
scas
decb
jno
lret
data16
mov
cmpsb
cld
pop
clc
jno
jle
and
je
lock
cltd
cltd
sub
jns
pop
add
jo
mov
es
fnstcw
pop
pop
mov
or
xchg
add
add
fcmovnb
rclb
lahf
shl
in
jb
add
add
repz
cmp
faddp
push
imul
jmp
xor
imul
inc
cmp
jo
adc
adc
sbb
push
cmpl
hlt
cmpsb
cmp
or
or
sub
mov
rclb
mov
in
setle
pop
rclb
adcl
movsl
xor
enter
and
adc
sbb
jmp
inc
add
es
ja
lcall
pop
sub
jecxz
movsb
and
xchg
pop
sub
cld
inc
clc
and
pop
pop
mov
inc
dec
cmp
outsl
pop
add
je
add
sahf
hlt
rorl
ljmp
scas
add
scas
repz
fldt
lock
inc
sbb
popf
push
mov
mov
lods
fcoms
je
outsb
roll
shlb
dec
add
mov
dec
xchg
dec
pop
in
xor
or
lcall
xlat
rclb
int3
dec
mov
mov
fincstp
push
jge
in
push
cld
popf
movsl
fwait
adc
loope
mov
ss
in
shr
data16
sti
iret
mov
insb
mov
data16
cs
xchg
pop
pop
inc
xor
shrb
or
pusha
xchg
dec
mov
mov
int3
sbb
daa
fsubl
ret
movsl
mov
sub
add
add
mov
push
enter
lods
mov
addr16
ja
pushf
mov
inc
xchg
xorl
das
sub
adc
mov
ds
push
sbb
roll
cmp
mov
cmpsb
add
lcall
add
xchg
jo
icebp
movsb
dec
push
jbe
addr16
fistl
out
cmpsl
sub
cmp
shll
and
nop
les
clc
jmp
push
sarb
in
in
test
pop
xor
cmpsl
inc
mov
sti
adc
push
jns
adc
rcrl
cmp
jbe
pop
mov
inc
xchg
jmp
xchg
scas
add
dec
nop
shll
ds
push
jg
out
xchg
mov
ljmp
daa
pop
lcall
stos
jnp
fcomps
in
push
je
bnd
cmp
mov
xchg
mov
leave
pop
sub
into
aas
mov
fdivl
dec
adc
mov
push
or
loop
pop
sbb
fwait
imul
pop
insb
sub
sbb
inc
sbb
cli
sarb
into
mov
or
jecxz
push
mov
repz
lret
mov
add
js
cltd
cli
lock
and
inc
gs
add
mov
jnp
popf
movsb
or
and
aaa
cmpl
shl
fisubl
nop
movsl
pop
jmp
stos
cmp
dec
sti
add
and
mov
and
pusha
test
inc
xchg
pop
rorl
enter
adc
jle
add
cmpsl
out
and
lods
adc
pop
xchg
cwtl
jecxz
cmp
lods
pop
xor
shlb
push
out
ja
scas
xchg
xchg
call
ficoml
mov
and
jno
ret
repz
and
test
sub
or
jnp
scas
cltd
insb
pop
popa
int3
add
jecxz
in
mov
cltd
andl
pop
bound
xchg
ret
mov
loop
and
add
xor
mov
fnsave
inc
imul
bound
les
loop
notb
mov
mov
xor
pop
insl
outsl
incb
jae
stos
add
adc
data16
sub
pop
add
hlt
or
pop
sub
int
lahf
loopne
pop
movsb
or
cmpsb
insb
add
out
jge
fcmovnb
mov
mov
cmp
filds
mov
and
dec
jno
push
outsl
jno
mov
sti
into
cmpsl
push
sbb
inc
test
test
mov
shlb
pop
jno
popf
jl
add
es
inc
and
imul
inc
xor
mov
mov
mov
scas
mov
mov
pop
cmpsb
les
jle
cmpsb
xchg
out
sbb
cmp
scas
jg
lods
int
sbb
sbb
ds
imul
data16
cmp
inc
pop
lods
jp
xorl
xchg
dec
fnstenv
jge
icebp
adc
cmp
and
movsl
pop
addr16
inc
xor
in
fdivrl
sub
sbb
pop
daa
out
sub
cld
mov
es
dec
ljmp
xor
add
pop
mov
xor
popa
mov
dec
adc
iret
push
pop
xchg
pop
mov
rcrb
ret
stc
cmp
movsb
mov
push
test
cltd
mov
les
arpl
sub
ror
in
xchg
mov
insb
jge
in
inc
mov
push
xchg
mov
or
dec
jmp
add
xor
xor
stos
pop
in
or
test
imul
je
int3
cmp
jbe
lret
jne
add
inc
inc
call
cmp
sahf
jmp
jbe
jecxz
out
inc
rcrl
sbb
je
sahf
adc
jb
push
test
addl
mov
or
repz
fldt
sbb
popa
fistpll
pop
inc
loop
inc
clc
test
jbe,pt
jno
pusha
popa
insb
add
rorl
mov
inc
mov
add
adc
scas
shl
jecxz
mov
mov
dec
aaa
jbe
out
or
das
xor
jl
sarl
cmp
int3
pop
pushf
mulb
xchg
sbb
dec
cmp
inc
cmc
push
stc
std
and
aas
arpl
xchg
add
jbe
filds
dec
loope
pop
das
inc
mov
xchg
mov
inc
insl
or
data16
pop
jns
movl
adc
lea
pop
pop
mov
sbb
and
jae
or
clc
loope
dec
ljmp
addr16
jecxz
call
loopne
pop
sbb
mov
ljmpw
xor
inc
cmpsb
and
lods
xor
inc
ret
repz
fbstp
shll
pop
flds
es
inc
cmp
and
dec
je
les
clc
pushf
adc
not
push
jnp
mov
mov
xchg
imul
pop
ds
pusha
lret
fisttpll
cld
adc
mov
imul
mov
cmp
jecxz
dec
mov
mov
jbe
sbb
ljmp
arpl
and
dec
cli
lahf
shlb
pop
in
std
mov
add
jl
lahf
pop
sbb
pop
mov
mov
imul
xor
pop
scas
xor
mov
push
lods
lret
adc
int
jne
lcall
add
mov
pop
mov
push
pop
push
dec
scas
sub
imul
adc
inc
cli
and
mov
xor
cmpsb
sbb
sbb
call
aas
aam
jno
fs
jae
call
push
xlat
test
lea
aad
jnp
loopne
outsb
inc
inc
jb
adc
sbb
cmpsb
dec
enter
mov
movb
daa
xlat
jnp
in
pop
popf
sahf
push
lock
bound
jmp
pop
aam
pop
pop
pop
sub
mov
xor
stos
enter
push
ljmp
popa
or
pushf
mov
add
inc
jo
pushf
addr16
pop
mov
xor
add
mov
lods
lock
mov
fsubr
mov
fisubl
dec
scas
out
je
testl
adc
rclb
adc
fisubs
xor
mov
adc
push
jecxz
cmc
xor
rcrb
rcll
sbb
lock
mov
test
and
cmp
mov
adc
sahf
fs
mov
insl
call
stos
lea
scas
mov
sub
fxam
mov
push
loopne
jmp
stc
fldl
push
pusha
dec
push
mov
sbb
jp
ret
lods
mov
mov
lea
pop
jno
mov
aaa
xor
mov
leave
rorl
pop
jle
push
inc
sbb
inc
in
push
push
pusha
inc
mov
and
push
mov
sbb
cmp
lods
sub
pop
cld
popf
in
mov
enter
jnp
jle
mov
pop
sti
hlt
iret
movsl
sbb
cld
lret
or
movsl
xlat
icebp
test
and
sub
add
test
loopne
outsb
sbb
lods
insl
push
adc
cmc
imull
add
mov
jo
cwtl
mov
daa
push
and
in
adc
negl
loop
fisttpll
mov
mov
mov
mov
fstl
cwtl
xor
cs
dec
jne
xchg
mov
mov
jle
int3
add
mov
pop
xor
aas
jle
mov
aaa
mov
cltd
movb
cltd
inc
imul
xlat
xor
sub
insb
stc
push
addb
adc
int
xchg
cmp
fimuls
xor
ret
dec
xchg
ret
fistps
pop
in
pusha
sarl
add
lods
not
mov
icebp
mov
pop
in
imul
and
xor
pop
aam
lock
stos
jp
test
mov
dec
pop
xor
adc
mov
mov
rclb
adc
iret
mov
mov
sahf
ret
push
inc
push
ret
mov
vpmulhuw
lcall
iret
push
inc
into
dec
test
sbb
adc
cmp
mov
mov
xchg
sbb
mov
das
cwtl
fstl
lret
js
lret
ss
iret
xor
add
inc
xchg
xor
cli
mov
jl
sahf
jg
mov
mov
dec
inc
xchg
test
mov
fyl2xp1
adc
jno
inc
insl
roll
dec
lock
jo
mov
outsb
in
fdiv
scas
push
icebp
xchg
mov
in
push
jbe
popf
insb
push
shll
add
xchg
cmpsb
xchg
mov
jnp
shll
pop
insl
xor
push
ficoml
dec
nop
in
loope
sub
mov
test
rsm
ret
xchg
mov
dec
call
jp
outsl
jo
test
out
mov
adc
and
fs
mov
popa
fwait
out
ljmp
jo
and
jns
dec
sbb
mov
scas
jbe
lret
inc
out
or
lcall
xlat
in
jl
stc
xlat
shll
sbb
and
mov
push
sbbb
dec
mov
loopne
loopne
movsb
stos
sbb
cmpsl
stos
mov
push
or
adc
ret
pop
xchg
or
cmpsb
and
lock
int3
repz
adc
jno
or
lods
sbb
inc
push
mull
xor
cld
dec
jo
callw
lret
into
mov
ret
jns
lods
sub
out
idivl
cmp
sub
out
push
jbe
sub
testl
xchg
filds
js
push
mov
or
and
jg
hlt
push
xchg
ret
aas
xchg
lret
das
cmp
cmpsb
push
sti
mov
add
push
scas
iret
mov
mov
jmp
jns
mov
je
in
mov
cmp
adc
repnz
lcall
cli
fstpt
imul
in
sbb
dec
out
inc
outsl
push
adc
xorl
in
jbe
or
mov
xor
arpl
pop
sbb
fsubrp
inc
sub
addr16
movsb
cmp
and
scas
lahf
mov
ja
pop
cmpsb
mov
rorl
fs
push
pop
mov
dec
daa
or
int3
loopne
daa
js
push
xchg
mov
sub
or
inc
mov
add
jae
sbb
inc
iret
sti
aas
fcompl
inc
cmp
pop
xchg
adc
data16
js
data16
sbb
or
sub
jg
pop
mov
popf
leave
cwtl
shl
jg
enter
jns
test
cmpsl
mov
mov
dec
cmp
inc
out
data16
stc
inc
pushf
push
mov
int3
shlb
lods
cli
fcmovb
push
mov
xor
test
xchg
ja
les
or
inc
inc
scas
jo
mov
dec
int3
add
push
adc
out
fiaddl
lds
insb
scas
mov
and
into
std
sub
xchg
imul
aam
gs
and
jns
mov
jne
std
sbb
xor
jl
cwtl
adc
fbstp
mov
jno
addr16
jge
mov
push
xor
stos
inc
and
insb
sub
xor
and
mov
xchg
mov
fcmove
fwait
xchg
push
mov
cmp
push
cwtl
mov
cs
xor
fldenv
sub
out
pop
std
mov
mov
sahf
add
cld
cmp
mul
faddp
xchg
out
push
cmp
sbbb
inc
xor
xchg
adc
add
pop
jnp
and
dec
fimuls
xor
or
in
mov
mov
cld
push
arpl
imulb
sarb
lods
mov
push
mov
leave
adc
test
xchg
xchg
jl
mov
sub
lods
js
xor
je
lock
cltd
dec
scas
out
inc
push
push
movsb
roll
lret
in
xor
sbb
mov
pop
xchg
and
std
pop
js
lods
fcoms
push
sub
imul
aas
hlt
pop
stc
cmp
pop
adc
movsb
push
cmp
inc
jge
jbe
rorl
and
cwtl
cmovb
aad
inc
roll
jno
xor
pop
loop
loope
call
inc
int3
pop
scas
fwait
sarl
insl
jp
ja
mov
ds
adc
dec
push
gs
fucomi
mov
pop
jbe
test
scas
aad
aad
fisttps
das
mov
mov
add
ja
xchg
jmp
push
pop
adc
lea
pop
js
push
adc
xor
cmp
and
xor
pop
sub
mov
mov
shl
sahf
mov
stos
clc
nop
mov
js
adc
popf
add
or
loopne
jge
mov
xchg
shl
or
mov
pop
pop
jle
int3
mov
js
and
shlb
sub
js
loope
lds
sbb
int3
dec
jg
push
les
fs
mov
push
out
ficoms
hlt
insb
out
sbb
loopne
mov
push
test
mov
insl
fldenv
aaa
dec
sahf
test
hlt
int3
loope
mov
fldt
les
xchg
mov
mov
xor
gs
mov
sub
inc
mov
imul
mov
int
jb
mov
mov
add
int3
xchg
mov
adc
xchg
sub
push
outsb
adc
sti
xchg
bound
data16
mov
xchg
lock
mov
stc
pop
cwtl
sbb
imul
sub
stos
pop
dec
push
sbb
vorps
std
push
sbb
fistpll
push
push
movsb
mov
mov
cmp
les
inc
ret
sub
into
pop
subb
xor
sub
jb
pop
push
inc
fnsave
orb
jecxz
push
mov
or
stc
scas
sbb
inc
into
xchg
lret
les
and
dec
addr16
jecxz
sub
test
pop
sti
aaa
xor
les
push
and
shll
mov
int3
xchg
jns
inc
sub
insb
leave
and
and
andb
into
mov
add
in
xchg
mov
aam
mov
scas
notl
pop
sbb
test
push
insl
add
repz
sbb
test
fcomps
mov
push
and
setle
cld
mov
fldcw
in
sub
cmpb
movsl
xor
mov
mulb
fcomps
inc
cs
or
fisubrl
jl
bound
mov
xchg
push
test
lock
cs
dec
into
fidivrs
sub
int3
mov
jmp
test
loope
add
sub
push
cwtl
sub
lock
cs
sbb
sub
mov
fsubp
and
mov
mov
fcom
mov
mov
pop
and
aas
ficoml
out
xchg
add
cltd
push
adc
into
std
add
jo
xor
scas
jbe
ss
jbe
jne
push
or
mov
sbb
mov
xor
arpl
andps
jae
dec
adc
and
sbb
inc
cmp
ja
dec
mov
xor
mov
xchg
or
xor
outsl
push
jnp
andl
pop
fcmovnbe
data16
pop
jno
scas
incl
lds
adc
jl
lcall
leave
inc
inc
push
inc
push
or
sub
inc
negb
xor
stos
lea
shlb
dec
or
jge
mov
mov
cmp
inc
test
inc
aas
add
sub
or
cmp
jne
jl
aad
das
xor
sbb
out
xchg
adc
in
lds
ret
addr16
xchg
pushf
pop
in
mov
jnp
iret
into
out
mov
pop
and
imul
das
imul
scas
mov
cli
movsb
push
mov
dec
add
cmp
mov
or
insb
test
mov
mov
cmp
push
jb
cs
pop
cmpsl
cmpsb
add
fcomp
cmpsb
xchg
add
jp
insl
aas
and
hlt
xor
inc
push
and
sbb
cmp
jle
dec
mov
lods
adc
cltd
fistpll
fldenv
sub
jnp
fwait
xor
adc
and
das
inc
or
ja
mov
cmp
fildl
jmp
dec
pop
cs
popf
dec
icebp
pop
add
sbb
xchg
pop
out
out
sbb
xor
fcoml
inc
pop
stc
push
and
add
push
scas
filds
outsl
insl
xchg
push
stos
cmp
test
mov
dec
mov
arpl
mov
loop
cmpsb
mov
sbb
mov
ljmp
call
ficoml
jmp
xchg
push
or
sbb
mov
and
psubb
out
jmp
sbb
xchg
scas
repz
addr16
out
xchg
cmp
push
mov
adc
or
push
cmp
imul
jp
imulb
cwtl
jg
cwtl
add
sbb
cmp
pushf
mov
shlb
fucompp
push
mov
push
popa
add
or
sahf
adc
icebp
and
int3
in
inc
sbb
adc
outsb
cwtl
sbb
lds
adc
popa
dec
setp
pop
mov
insb
test
xor
cmp
lock
xchg
insl
mov
mov
lret
mov
jg
imul
and
cmpsb
mov
out
inc
insb
mov
outsl
add
ljmp
test
sarl
addr16
pop
stos
ja
test
sbb
mov
jg
mov
sbb
adc
cmpsl
and
bnd
mov
lar
pop
pop
add
sbb
loop
cmpsb
repnz
inc
push
jle
push
addb
mov
addl
inc
and
scas
fiaddl
add
or
adc
jle
push
inc
insb
lret
add
mov
mov
push
xor
push
or
cld
mov
cmc
or
cmp
ss
mov
pop
rorb
fsubrs
in
xor
loop
jl
out
mov
cltd
and
lahf
rcrl
jg
mov
sbb
mov
xor
cmpsb
mov
cmpsb
mov
pop
add
mov
ret
and
mov
mov
mov
aad
push
out
or
outsb
mov
in
jns
xor
mov
pop
scas
es
mov
movsl
inc
das
mov
insl
jg
lret
sti
cmp
inc
adc
outsl
jge
imul
int3
scas
mov
add
notl
or
in
sub
mov
cli
jmp
movsb
lock
sbbl
test
out
aaa
add
gs
pop
sbb
stc
rcrl
xchg
out
cwtl
lret
xor
or
pop
les
pop
or
cmp
les
sahf
sti
adc
repz
sub
out
push
sub
jmp
jne
outsb
ret
popa
js
shr
cmp
stos
and
popa
or
push
outsb
lock
push
lcall
cld
push
sbb
jmp
cmp
xor
enter
mov
jp
mov
dec
incb
stos
insl
lar
aas
pushf
loope
mov
cld
cmp
shll
inc
pop
cwtl
sar
push
and
cmpsl
add
mov
jmp
xchg
jnp
pusha
fsubl
and
rcll
out
mov
insb
es
mov
dec
shll
add
push
cmp
or
mov
fistl
test
in
aas
test
dec
test
jbe
xchg
adc
ret
repz
jb
mov
insb
lret
jmp
jno
cmp
adc
push
outsb
out
xchg
jno
or
pop
push
enter
movsb
pop
test
jle
inc
adc
fwait
sub
push
xchg
fiaddl
mov
movsb
retw
sti
or
sub
jnp
lcall
adc
mov
bound
bound
xor
js
rcrb
or
xchg
ret
dec
pop
inc
xchg
sti
xor
call
lods
push
add
cmp
dec
push
mov
mov
mov
xor
mov
lods
std
pop
lods
mov
pop
jl
outsl
fs
xchg
dec
mov
jns
xor
sub
mov
inc
lahf
lods
jnp
inc
lret
push
es
dec
jmp
rclb
std
mov
and
xchg
fwait
mov
jo
pop
cwtl
stos
stos
xlat
pop
lds
in
ret
leave
mov
jle
testl
add
sbb
mov
and
xor
ljmp
sbb
sarb
cli
stos
pushf
mov
jnp
clc
inc
movsb
jns
mov
pop
sahf
repz
enter
pop
push
addr16
pop
sub
pop
or
cmpsl
jnp
fsubrs
sahf
test
mov
or
scas
test
addr16
cmp
mov
xor
push
pop
mov
inc
jle
xchg
rcll
mov
cmp
adc
lods
mov
mov
sbb
push
sub
sahf
dec
outsl
test
inc
pusha
xchg
adc
cmc
and
lds
div
and
popa
fistps
mov
outsl
cltd
mov
mov
cwtl
rorl
mov
cmp
mov
lods
or
aas
loope
leave
data16
aaa
mov
es
mov
jl
xor
mov
adc
loop
rcll
sahf
xchg
rcrb
ret
clc
jp
jnp
pop
das
xchg
ret
xchg
or
cmpsl
pop
adc
or
mov
fs
xchg
sbbb
cmc
inc
mov
inc
ret
inc
arpl
xor
ret
xchg
mov
fisttpll
js
out
xor
sbbl
xchg
outsb
cmp
pop
adc
aaa
ja
and
cmp
pop
mov
cli
lret
pop
arpl
mov
xor
push
push
mov
fadds
mov
cmp
cltd
cmp
sub
and
pop
mov
cltd
bound
and
gs
push
and
out
dec
cmpsl
mov
hlt
les
sub
mov
cmc
movsl
cmp
int
cli
push
jmp
push
enter
adcb
pop
sarb
lret
lahf
fs
mov
xor
cltd
insb
sbb
jle
jmp
xlat
jle
pop
das
xchg
cmp
lahf
bound
ds
mov
ja
sti
mov
or
ret
push
dec
jp
mov
call
int
jle
test
sti
inc
and
lods
jns
and
push
cmpsl
repz
jnp
mov
pop
aad
dec
xlat
aaa
in
add
loopne
out
sbb
lret
aam
pop
add
popf
outsl
xchg
outsb
das
pop
jbe
xchg
fwait
mov
jp
dec
jg
stc
mov
add
jge
mov
fcmovb
leave
sbb
cmpsb
gs
sub
push
adc
popa
aad
lods
cs
push
inc
inc
sahf
ja
dec
das
push
jg
iret
inc
enter
shll
cmpsl
rclb
js
cmpsl
cmpsb
dec
or
xchg
dec
into
test
jae
lock
mov
xchg
rcr
jno
psubsw
inc
pushl
test
or
xlat
inc
orb
mov
xchg
mov
sti
dec
cmp
push
out
repnz
jno
jg
pop
xor
inc
push
xchg
xorl
jmp
push
test
stc
cmp
dec
jae
fsubl
xchg
aaa
pop
mov
cmovo
insb
sub
sbbb
mov
out
lods
testl
sub
sbb
xor
xchg
and
mov
aas
insb
cwtl
pop
sbb
pop
xchg
jb
cwtl
sbb
jae
jmp
lret
scas
test
mov
bound
das
and
cmp
shrl
mov
in
and
jns
out
daa
imul
lea
jecxz
mov
cli
loop
pop
xchg
and
lret
jnp
lock
jle
mov
jmp
jmp
push
pushf
add
push
fisubl
fiaddl
mov
icebp
cmp
data16
mov
repnz
jns
stos
lods
push
add
jns
lcall
outsb
or
inc
lds
cmp
pop
jnp
shrb
sub
xor
lods
dec
arpl
fmuls
inc
sahf
repz
outsl
dec
xchg
popa
enter
mov
test
dec
dec
xor
aaa
popa
cmp
or
xor
mov
pop
sub
push
xchg
adc
and
cs
lret
mov
in
loope
jecxz
xchg
pop
add
dec
add
popa
xchg
roll
test
int3
pop
cs
adc
nop
ret
add
pushf
inc
lock
mov
test
insb
andl
and
xchg
or
out
test
ds
xor
jecxz
mov
jmp
fldt
mov
addr16
add
lods
int
dec
push
sbb
add
lds
aad
movsb
sahf
test
adc
lcall
jle
sahf
lods
push
mov
and
subl
and
sarl
mov
fmul
icebp
sub
stos
jae
das
divl
insb
sbb
mov
push
mov
lea
sub
mov
ret
lock
enter
jno
add
jbe
int
cwtl
mov
out
mov
pop
lock
ror
push
dec
pop
inc
jnp
inc
jae
mov
mov
sbb
mov
push
fwait
in
push
xchg
sbb
push
mov
out
fistl
inc
mov
add
imul
lock
adc
loope
or
cmp
xor
add
and
fidivrs
adc
inc
int
jne
insl
push
popa
cmp
pop
mov
pushf
movsl
les
dec
out
push
pop
jecxz
adc
dec
lret
cld
adc
cmp
adc
insb
lods
jae
cmp
jae
push
add
mov
pop
xor
push
sub
push
ret
jo
ret
into
ret
inc
mov
and
aaa
push
icebp
dec
or
ret
dec
popf
adcb
inc
in
sub
je,pt
mov
xchg
and
daa
int
and
scas
jae
ret
add
out
mov
pop
cli
lahf
cli
cmp
sub
inc
xchg
out
pop
push
mov
icebp
cmp
neg
lcall
cmp
jb
movsl
pop
push
out
negl
movsb
add
add
unpcklps
or
hlt
cmp
mov
stc
sub
es
xor
sti
mov
pusha
int
sbbl
xlat
dec
jle
dec
jnp
mov
and
or
or
dec
xchg
mov
add
test
subb
lea
dec
add
arpl
mov
mov
pop
dec
aad
repnz
push
dec
and
mov
mov
fiaddl
dec
popa
and
outsb
sahf
inc
fisttpl
or
jo
cmp
mov
mov
xchg
sub
frstor
sub
jo
xchg
ljmp
push
insl
jne
lcall
jnp
dec
into
add
mov
and
cwtl
adcl
hlt
es
jg
out
push
ds
or
shl
in
push
mov
dec
mov
faddp
dec
cmp
mov
inc
shlb
hlt
dec
out
sti
push
outsl
sub
fmul
sbb
adc
jo
add
push
lcall
pop
cmp
adc
call
add
push
pop
outsl
xor
sbb
loopne
js
jne
or
mov
neg
xchg
adc
mov
sub
mov
xchg
and
stos
push
lahf
pop
fs
mov
add
adc
xchg
mov
xchg
imul
adc
out
mov
out
push
test
movsl
xchg
push
fldt
mov
pusha
add
xchg
rolb
xchg
fnsave
or
inc
xorb
fistl
or
xchg
or
sbb
mov
loope
fcoml
pushf
ret
lret
lret
out
or
fsts
leave
jecxz
sahf
pusha
mov
sbbb
mov
repz
rcr
or
in
mov
jg
push
push
filds
bnd
push
insl
pop
cmp
stc
clc
cwtl
int3
in
in
xor
or
mov
sub
cmp
mov
add
pusha
push
dec
lods
mov
sbb
mov
jp
xchg
fisttps
push
mov
in
sub
jecxz
mov
add
inc
inc
ja
in
mov
mov
insb
scas
adc
in
cmp
adc
lret
sub
cltd
xlat
jl
cmp
jmp
dec
or
push
enter
ljmp
rcrb
fwait
popa
pushf
das
daa
fstpt
cmp
cmp
mov
mul
push
adc
loopne
int
int
in
xor
pop
cmpsb
adc
sbb
test
pushf
orl
jg
loope
add
push
adc
aad
je
ret
adc
dec
adc
std
mov
sub
movsb
add
flds
push
enter
adc
fwait
dec
mov
mov
lock
inc
jl
push
inc
jne
insl
fwait
insb
and
rolb
sub
std
es
adc
jno
rclb
cmp
outsb
int
xchg
das
scas
adc
or
scas
inc
xlat
ljmp
pop
pop
add
pop
and
push
cmp
xchg
fsubl
and
aad
shr
mov
sub
jge
inc
in
imul
data16
in
nop
movsb
sbb
fists
sbb
inc
mulb
xchg
push
sbb
xchg
xor
and
imul
jp
sub
xchg
cmp
addb
outsl
mov
out
cmpsl
movl
jo
mov
cmc
dec
lock
pop
dec
mov
das
mov
mov
iret
jle
fsubrp
sbb
pop
ds
cmp
test
xor
mov
es
cs
pop
jecxz
jbe
add
and
jmp
xor
dec
sub
push
push
push
loopne
mov
rdtsc
push
stos
inc
out
and
xor
xor
pop
or
dec
outsb
imul
ja
jmp
movl
ljmp
push
mov
xchg
test
push
jl
pop
mov
push
mov
adc
rorl
adc
dec
jg
test
fdiv
fcompl
aaa
jle
fidivs
adc
cld
lret
mov
sub
fs
neg
inc
and
dec
add
lret
mov
jp
xchg
loop
mov
cmc
jmp
lcall
mov
shl
add
xchg
sub
push
fldpi
jno
jle
mov
lret
movsb
lret
inc
imul
loopne
sub
xor
and
push
les
filds
add
cli
fwait
jne
lods
rclb
mov
xor
sub
std
call
mov
sbb
sub
cs
pop
pushf
jb
fwait
lock
add
outsl
xor
repnz
repz
and
adc
inc
andb
mov
scas
adc
jns
cmp
in
pop
jns
imul
cltd
xchg
loope
fldenv
mov
dec
add
mov
mov
or
jle
out
fistpl
sub
test
imul
popa
and
mov
nop
mov
jno
add
push
cmp
mov
inc
inc
cltd
addr16
in
icebp
push
xchg
cmp
ss
push
nop
mov
sbb
sub
lods
scas
add
mov
repnz
mov
inc
add
enter
and
outsb
movb
fs
repz
mov
ret
aad
xorb
push
mov
push
mov
mov
mov
jnp
or
jg
sarb
inc
push
test
inc
addb
nop
xor
mov
xor
jnp
fwait
push
insl
inc
into
or
imul
movsb
insb
mov
dec
jae
inc
hlt
push
xor
andb
mov
cmp
data16
js
jno
mov
movsb
call
mov
orb
dec
and
pop
gs
dec
mov
push
pop
cmp
ret
or
cmpsb
rclb
xchg
mov
xlat
jns
and
fiaddl
mov
push
std
jae
jl
jge
fs
add
mov
insl
hlt
xchg
adc
loopne
cmp
lret
sub
imul
jo
repz
jp
popa
mov
xor
mov
mov
movsl
jb
imul
or
cmp
jbe
stos
mov
stc
add
push
xchg
sbb
imul
repnz
push
and
add
leave
in
out
int3
jecxz
mov
das
sub
addr16
push
push
cmp
push
pop
cmp
shlb
inc
out
lods
push
stos
bound
aad
push
adcb
leave
icebp
inc
pop
in
sub
xor
add
ret
rorl
jg
repnz
xor
hlt
insl
popf
add
popa
mov
adc
int
pop
and
mov
sub
fistpl
mov
rolb
adc
and
int
adc
les
insl
push
xor
inc
xchg
adc
jae
ss
repz
popf
xor
mov
rorl
orl
popf
pop
xor
pop
je
and
dec
repnz
mov
lret
adc
shl
pop
test
xor
pop
ds
sahf
stc
push
cmp
in
push
sub
repnz
xor
ret
push
mov
cli
data16
xor
rcl
mov
pop
cmp
mov
add
dec
ja
inc
cmp
cld
cmpsl
mov
clc
sbb
les
and
jle
les
cli
mov
fisttpll
stc
cmp
pop
imul
dec
jg
jne
dec
sub
data16
loop
adc
xchg
subb
int3
mov
and
out
pop
lcall
cs
add
xchg
mov
lods
xor
jl
sub
insb
pop
test
test
out
mov
mov
movsl
out
stc
int3
push
lods
lret
sub
mov
push
clc
or
test
imul
in
dec
insb
and
lret
sub
fdiv
ficomps
jae
lds
xlat
sarl
or
or
mov
pop
sub
adc
mov
xor
push
xor
cwtl
fdivrs
lcall
mov
or
or
pushf
jmp
sub
leave
outsl
inc
add
out
lods
out
loopne
mov
xor
ja
push
mov
aas
addb
imul
lea
rcll
xlat
ss
rcr
jg
ds
scas
xchg
push
sub
push
add
ret
xor
cmp
fcom
inc
sbb
sbb
mov
int
pushf
cmp
dec
mov
in
or
js
shrl
lods
pushf
jge
xchg
clc
mov
xorl
lods
adc
andl
sbb
sbb
imull
xchg
or
push
aam
movb
js
sub
call
xor
adcl
pop
dec
mov
sbb
inc
dec
jbe
out
movl
dec
mov
add
sub
insb
lock
outsl
inc
mov
cmpl
pushf
insl
ret
cmc
fcomip
ret
test
dec
loop
jo
xchg
je
or
inc
ret
and
imul
mov
lods
pop
jg
xchg
xor
lret
mov
lahf
enter
jno
push
cmpsl
cmpsl
cmp
cli
push
lret
xchg
out
cwtl
xor
jb
push
hlt
stc
cld
lahf
ret
mov
add
mov
insl
cmp
shll
les
ret
shlb
sub
lahf
sub
xchg
inc
push
ret
xor
push
aam
or
xchg
sub
in
addl
dec
insl
jb
fcmovnbe
adc
cwtl
mov
dec
jnp
cmpsb
mov
mov
test
imull
test
loopne
mov
pop
stc
bound
daa
bound
nop
aam
cld
xor
mov
push
xor
fstps
repnz
dec
jp
xor
and
inc
popa
imul
mov
orl
data16
neg
cmc
inc
cwtl
mov
push
jno
xchg
mov
movsb
mov
decb
stos
cli
jle
jb
addr16
or
addr16
fmuls
mov
and
lds
mov
out
or
inc
jecxz
cmp
cmpsl
push
cmp
ljmp
xchg
fcmovbe
and
sbbl
roll
add
ret
lcall
imul
and
add
nop
js
mov
rep
xor
or
jg
jl
cmc
pop
sbbl
or
cmpsb
sub
out
sahf
imul
push
cs
imul
sbb
cmp
pop
fstpt
push
and
rorb
push
fdivrs
ds
sbb
pushf
or
adc
lcall
dec
mov
pop
or
rorl
pop
cmp
mov
int
jnp
xchg
int
imul
dec
xchg
xchg
into
fs
push
mov
push
int3
test
scas
mov
mov
cli
mov
or
cmp
add
or
mov
into
dec
lods
xchg
mov
mov
jg
rcrl
clc
fistpll
imul
addl
mov
out
cmp
xchg
ljmp
xor
cmp
pop
nop
fsts
pop
and
hlt
ljmpw
sahf
int3
out
es
and
push
fcmove
sub
and
mov
rclb
push
jmp
call
mov
jne
or
sub
call
jnp
cli
addr16
xchg
hlt
js
lods
jle
adc
pop
xchg
lock
es
stc
pop
cmp
mov
frstor
pop
push
pop
outsl
add
outsb
jp
aad
cmpsb
cmp
cmp
sbb
cmp
dec
js
ljmp
pushf
xchg
add
sbb
jp
loop
push
inc
int3
jb
dec
in
and
add
adc
and
cmpl
mov
sbb
xchg
pop
test
lods
fnsave
xchg
dec
mov
sarb
dec
xor
mov
ja
xlat
das
push
sbb
push
mov
inc
xor
pop
xor
negl
pushf
or
and
mov
lds
inc
mov
inc
ror
test
pop
nop
test
outsw
lods
fsubrs
arpl
mov
sbbb
fldenv
adc
cmpb
mov
dec
or
or
repz
add
or
push
rolb
andl
loopne
add
out
adc
or
adc
jno
test
pop
cltd
loope
mov
dec
pop
jo
inc
data16
jmp
inc
imul
test
lock
mov
pop
add
dec
jle
sbb
mov
add
jle
lea
pop
pop
mov
lret
pop
push
adc
jb
pop
mov
jge
xor
xlat
cmp
push
add
and
or
mov
loop
jns
and
mov
shrb
sahf
or
fnstsw
ds
push
movsl
xchg
shlb
sub
add
cmp
jge
dec
xlat
nop
imul
mov
pushf
add
adc
inc
xor
mov
jbe
pop
icebp
mov
push
test
adc
test
sub
movsb
lret
leave
mov
mov
cltd
ja
sub
clc
into
mov
xlat
push
push
xchg
ds
mov
sti
xor
mov
push
lds
mov
mov
scas
and
inc
insl
jbe
push
inc
xor
test
or
push
and
mov
stc
or
sbb
pop
repz
repz
push
jae
mov
dec
xor
mov
daa
out
sub
xchg
cmp
dec
push
xchg
ret
mov
gs
xlat
sbb
xor
pop
shll
mov
push
sub
xlat
or
fsubrl
ret
push
jbe
ret
cs
cmpsb
push
jge
sub
andb
lods
test
sbb
arpl
adcl
addl
ja
mov
lods
xchg
cmp
lcall
test
cmpsb
mov
mov
mov
enter
jo
xlat
or
pcmpgtw
hlt
push
mov
test
push
scas
sub
and
jnp
or
pop
movsl
add
xlat
mov
push
jno
in
roll
push
cmpl
and
mov
jmp
iret
lea
lods
data16
or
add
aam
fisttpll
push
xchg
andb
outsl
in
jno
incb
test
mov
ret
or
cld
push
cmp
mov
push
xchg
ret
jge
fs
push
test
pop
jne
inc
inc
sub
inc
add
adc
cmp
sub
add
or
dec
dec
ja
and
mov
adc
popa
and
aad
mov
pop
mov
scas
xchg
push
out
mov
mov
sbb
xor
pusha
js
push
jnp
cmp
lea
fucom
aas
mov
adcb
sub
scas
sahf
add
popf
out
mov
popa
bound
xor
mov
inc
sbb
xchg
mov
jns
sbb
xor
xor
inc
add
mov
mov
fsubrl
nop
imul
imull
fstpt
push
and
sahf
pop
adc
out
cli
jb
mov
subb
mov
call
mov
fisttps
popf
jns
xchg
adc
jnp
dec
cmpsl
es
in
jnp
rclb
or
inc
push
mov
sahf
ljmp
sti
pop
or
lods
shrb
mov
push
pop
xchg
or
out
out
outsl
adc
jae
imul
lods
stos
pusha
out
jbe
out
testl
and
repz
repz
gs
push
aam
dec
popf
shlb
push
jl
scas
decl
cltd
mov
andb
mov
lret
ficoms
test
mov
mov
inc
rcrb
jp
iret
mov
outsb
hlt
sbb
ret
mov
pop
jb
adc
inc
lock
jle
cwtl
and
jns
addr16
adc
scas
daa
sbb
jne
lods
sbb
leave
out
out
adc
ljmp
add
jbe
out
dec
xor
cwtl
sub
sbb
fs
xchg
push
mov
imul
ret
jno
call
int3
out
mov
pop
lcall
insl
add
dec
jmp
pop
xchg
mov
out
aam
push
sbb
or
or
fcmovnu
add
pop
fnsave
push
sub
test
lods
ret
cmp
add
bound
cli
fs
nop
lea
pop
mov
mov
adc
sbb
les
cmp
shlb
push
cmp
and
pop
dec
and
fldl
xchg
and
rol
mov
cwtl
add
xchg
lds
test
mov
jno
add
sub
clc
dec
cltd
adc
jge
cmpsb
into
fnstsw
mov
mov
js
cmp
sbb
dec
cmp
or
aam
add
mov
mov
fmul
push
aas
pushf
mov
incb
jl
mov
dec
dec
pushf
lret
popf
test
jg
inc
xchg
pop
js
testb
add
repz
xor
add
xor
jl
pop
pop
inc
and
gs
dec
in
add
xor
enter
aam
cltd
cld
push
insl
lret
test
fidivl
or
daa
and
mov
ljmp
mov
pop
clc
ja
leave
xchg
mov
out
xchg
pop
insb
jmp
and
sub
test
aam
sub
inc
stos
cld
mov
ds
call
mov
in
inc
iret
xchg
mov
fsubl
inc
cli
loope
jmp
stos
dec
jg
push
pop
outsl
sub
and
mov
jg
scas
mov
xchg
call
sbbb
adc
daa
std
or
mov
xlat
adc
dec
ljmp
lock
mov
dec
ret
cmp
jge
cmp
push
or
popa
xchg
call
xor
mov
aaa
mov
shl
mov
enter
dec
adc
ljmp
pushf
mov
outsb
mov
xor
and
push
test
lret
bound
jl
fistl
xchg
push
lea
xchg
push
in
cmp
pop
cmp
fbstp
sbb
push
push
mov
cmpsb
cmp
push
in
cmp
pop
sub
jle
ds
js
dec
jns
push
push
adc
std
test
adc
icebp
push
xor
or
into
or
fstpt
loopne
mov
mov
xor
xchg
add
sbb
repnz
and
in
in
fcoms
sub
lret
xor
add
xchg
ljmp
cld
cmc
cmp
push
fsubs
hlt
sub
dec
pop
into
movsb
pop
ss
or
mov
cmp
pop
or
aas
cmpb
jns
dec
dec
adc
aas
scas
add
repz
push
cmpsl
jle
sbb
shlb
iret
push
and
and
and
test
mov
ss
push
sbb
sbb
rcrb
pop
sahf
sbb
cld
insb
dec
push
xchg
lahf
pop
testb
inc
jae
aas
cmpsl
adcl
flds
cmp
es
mov
out
pop
mov
pop
push
loop
pop
inc
xor
adc
iret
jl
fistl
sbb
mov
jmp
add
fsub
imul
adc
and
sub
or
pop
das
stos
mov
push
xchg
xor
add
nop
das
insb
add
rcrb
xchg
aas
sub
les
out
imul
sbb
dec
sbb
stos
push
and
sub
popf
es
sub
sti
and
in
test
mov
fcoms
int3
lods
jl
inc
frstor
iret
lds
mov
jns
in
mov
mov
mov
or
jp
sub
adc
sbbl
div
int3
xchg
mov
xor
fsubrp
arpl
push
lahf
fs
cmc
sbb
dec
lods
and
scas
shl
mov
insl
ljmp
mov
aam
jnp
cmp
into
xor
dec
cmp
js
outsb
jecxz
test
push
popf
mov
mov
mov
pop
xor
sahf
pop
pop
scas
imul
cld
mov
mov
testb
fwait
lcall
decb
or
insb
pop
push
insb
cld
sbb
fimuls
push
xchg
out
push
adc
pop
movsb
push
jg
aas
test
notb
mov
pop
dec
and
xchg
sbb
shll
daa
loop
jns
out
std
pop
adc
inc
push
pop
stos
es
ror
mov
pop
xor
push
sub
xor
lcall
mov
in
push
scas
adcl
sbb
cmp
shl
ror
pop
add
mov
push
inc
jl
addl
jl
xlat
push
filds
repnz
std
sbb
mov
aas
es
jo
leave
and
fdivrp
sub
in
pop
scas
neg
mov
sub
sbb
push
fwait
mov
mov
jmp
lret
pusha
andl
and
or
mov
ss
jne
aam
cmpsb
mov
test
leave
lret
iret
imul
lret
jmp
push
not
subb
push
adc
lods
in
insw
add
add
data16
or
push
gs
mov
push
inc
xor
cmp
aas
or
add
movsb
rolb
cmp
or
push
jle
shrb
lock
movsb
ja
in
fimuls
and
and
stc
lret
xorl
or
movl
inc
jp
cmp
or
repnz
sub
xchg
jne
mov
push
int
sbb
out
pop
jb
add
clc
in
xor
sbb
mov
in
xor
in
inc
out
mov
cmp
mov
push
call
dec
sbb
push
imul
mov
push
or
cmp
imul
flds
or
and
mov
scas
cmp
mov
push
push
pop
jo
repnz
xor
lods
xchg
sahf
add
mov
rorl
shll
mov
icebp
pusha
ds
out
aaa
dec
inc
adc
and
or
inc
or
lods
test
sbb
out
popf
mov
imul
enter
loopne
xchg
je
cmp
incb
lds
pop
pushf
in
mov
fdivrl
loop
in
outsb
sub
loopne
movsl
pushf
jmp
inc
mov
idivb
imul
xchg
pop
dec
nop
arpl
jbe
push
cmpl
cmp
xchg
sub
mov
leave
scas
imul
xchg
dec
lods
xchg
xchg
and
lcall
mov
enter
in
adc
dec
xchg
loopne
pushf
das
jbe
cmpsb
loopne
jnp
ret
shlb
subl
popf
push
gs
adc
pusha
mov
ret
fldcw
scas
andl
xchg
jl
jp
push
nop
fs
pop
push
xchg
mov
adc
dec
cs
sbb
in
jo
test
iret
inc
xchg
insb
inc
jmp
fadds
or
xor
jo
or
fs
leave
in
icebp
in
ret
sti
shll
testb
arpl
and
in
mov
and
jl
call
test
inc
dec
loopne
jmp
xchg
aas
aad
bound
dec
enter
dec
mov
add
std
test
mov
sahf
clc
inc
fs
aam
push
int3
rcl
fwait
jae
lods
adc
mov
jnp
cmp
add
cmp
jg
das
cmp
fxch
in
cmc
mov
gs
xor
cmp
in
rclb
test
jno
pop
xor
add
push
mov
dec
push
sbb
stos
dec
pop
test
ss
inc
bound
push
lods
xchg
fiaddl
inc
cmp
cmpb
scas
ljmp
xor
out
inc
test
shlb
aas
inc
jb
nop
mov
into
inc
arpl
add
inc
mov
dec
sub
or
cwtl
lods
inc
xor
into
jo
add
nop
lods
pop
push
xor
pushf
jo
imul
cmpsb
jns
rclb
dec
lret
sub
mov
add
push
add
pop
fs
mov
lds
xchg
jbe
sbb
stos
les
dec
aaa
jno
sbb
leave
cmc
insl
test
sub
sub
adc
jb
mov
aam
and
sub
mov
rorb
push
out
sub
data16
loope
lret
sub
mov
push
mov
dec
adc
cld
mov
adc
mov
cs
sti
add
pushf
fs
dec
cwtl
pushf
stos
call
mov
mov
ljmp
dec
mov
stos
inc
dec
fists
dec
in
adc
or
jo
cmp
aaa
mov
ret
mul
jecxz
popa
push
add
pop
push
mov
and
and
scas
and
xchg
jno
in
xchg
bound
lods
adc
xor
cltd
loop
lods
push
inc
cmp
cli
mov
lock
lcall
imul
inc
xchg
into
out
adc
fs
inc
xor
pop
jmp
stos
stos
mov
mov
cmp
rolb
xchg
cmp
push
scas
sahf
push
scas
loope
inc
push
add
gs
rcll
inc
pop
ja
inc
xchg
jbe
dec
cmpsb
sub
int
push
testl
cli
mov
push
out
aaa
pop
les
out
rol
ja
jp
dec
aaa
aaa
scas
sbb
in
out
in
fidivs
or
ds
arpl
cmp
jg
out
and
clc
pusha
ja
subl
gs
loop
sbb
pop
push
bound
mov
nop
sub
push
sub
mov
xor
sbb
lock
aas
jmp
ja
mov
xor
scas
loop
test
cld
cli
mov
xchg
push
jecxz
inc
push
test
jo
and
pop
cmpsb
and
add
sbb
lahf
pop
jbe
sub
dec
cli
or
aam
lahf
pop
out
stos
les
dec
call
das
sub
pop
repnz
inc
repz
jecxz
loop
pop
cmp
jne
sarb
divl
mov
ret
mov
mov
push
movsl
aaa
repnz
xchg
push
sarl
cs
hlt
adc
add
inc
cmpsb
jecxz
push
int3
outsl
or
rorl
sbb
shr
movsl
popa
fbstp
sbb
popa
lea
push
mov
popf
frstor
lock
jmp
fildll
xor
push
lea
xor
adc
popf
cmp
ror
jne
cmpsb
mov
sbb
les
incb
pop
sbb
stos
movsb
sub
cmp
ret
dec
pop
mov
loop
imul
lods
xchg
mov
lret
not
mov
hlt
or
mov
push
les
movsl
mov
in
xor
insb
mov
dec
push
sar
data16
rcrb
cmp
pop
jns
sbb
loope
pop
movsb
out
mov
out
inc
and
push
mov
push
xor
sbb
push
lret
cs
xchg
sub
testb
aaa
push
pop
dec
test
icebp
fidivrs
divb
sbb
add
push
or
add
dec
xchg
xchg
leave
js
dec
jae
faddl
insb
into
into
jbe
jb
xor
pop
pop
std
ds
clc
jmp
mov
sbbb
mov
xor
inc
mov
xor
dec
lcall
jmp
jno
sbb
cmp
scas
test
pop
pop
into
test
mov
inc
push
xor
fwait
stos
fs
mov
jb
xor
adc
aam
and
test
add
outsl
arpl
test
adc
data16
jo
or
jno
and
sarl
lcall
arpl
icebp
call
leave
add
lock
shrb
sub
mov
jo
movsb
les
loope
icebp
dec
xchg
mov
stc
call
lcall
in
sub
mov
addb
or
cltd
data16
negl
dec
dec
dec
xchg
cmpl
add
fisubrs
movsb
nop
mov
xchg
and
xchg
mov
loope
jl
daa
movsb
imul
mov
adc
lret
mov
jge
aaa
inc
pop
sbb
sarb
xchg
push
cmpl
inc
push
xchg
and
and
dec
mov
lret
call
clc
cmp
mov
and
push
add
sub
and
lret
in
cltd
stos
test
jecxz
addl
cs
je
je
cwtl
inc
mov
adcl
ja
sarb
sbb
sti
icebp
add
lods
inc
out
cmpl
jns
mov
push
pop
mov
in
mov
push
and
nop
in
jg
pop
mov
aam
incl
cmc
inc
ja
iret
push
dec
cmp
imul
sbb
push
pop
sub
pushf
ljmp
cwtl
pop
mov
sub
out
dec
or
psllw
adc
xor
in
scas
sbb
addr16
and
daa
inc
jl
cmp
jo
xchg
call
insl
push
out
jb
jl
add
push
xor
mov
psubq
ja
adc
push
cmc
sub
mov
mov
faddp
orb
std
adc
and
or
stos
adc
fadds
xchg
add
sbb
jg
in
mov
imul
repnz
cmpsl
popa
and
movsb
dec
cmp
cmp
and
ret
clc
adc
and
outsl
push
stos
mov
scas
pop
bound
mov
dec
sub
ficoms
loop
xchg
add
cltd
in
or
subb
aas
cmp
dec
dec
sbbb
in
sahf
imul
cmp
push
inc
ret
mov
js
sti
repz
in
stos
movd
daa
add
cmp
cltd
mov
stos
fdivs
jne
and
cmp
loop
xchg
xor
enter
addr16
add
mov
jmp
mov
mov
ror
out
inc
add
mov
xchg
sub
out
adc
push
popa
inc
push
mov
mov
imul
mov
mov
or
sub
or
push
jmp
mov
loope
dec
push
xor
xor
fimull
and
iret
test
sub
popf
aaa
sub
dec
mov
xlat
pop
add
popf
and
movsb
stc
jbe
inc
adc
in
xor
and
in
shlb
lret
cmpsb
lret
mov
mov
pop
loopne
aaa
xchg
push
fs
test
ljmp
lahf
cmpsb
or
mov
repz
jns
adc
daa
shr
pop
sub
push
fidivs
scas
notl
sbbl
aad
push
mov
mov
mov
and
sbb
push
mov
lret
in
dec
sbb
pop
mov
clc
stos
jmp
lods
push
lock
mov
jl
repnz
cmpsl
fsubrl
pushl
and
mov
mov
xor
fucomi
arpl
mov
fldl
mov
loope
sbb
mov
sbb
mov
popw
loope
imul
push
mov
mov
lock
movsl
je
iret
rclb
pusha
stc
fmuls
mov
push
dec
xchg
cmp
sub
mov
shr
repz
xor
pop
pop
pop
xor
pushf
aam
nop
in
xchg
mov
and
inc
shlb
push
jno
mov
mov
and
push
push
mov
xchg
mov
popa
cld
add
rclb
push
sti
stc
call
test
stos
xchg
add
addr16
lcall
mov
jb
negb
mov
cwtl
mov
ljmp
add
iret
jecxz
repz
mov
cmp
xchg
push
mov
push
inc
insl
xor
outsb
xor
lds
and
jo
lods
js
ss
add
mov
sub
enter
push
insb
inc
in
and
sbb
clc
pop
pop
xchg
cmp
adc
mov
mov
xchg
fisttps
fs
push
repz
popa
push
cwtl
shrb
in
push
jg
jecxz
jns
vmovntps
test
mov
clc
mov
lret
mov
adc
mov
sub
sbb
scas
push
cmc
movsl
dec
mov
test
negl
shlb
and
cmp
push
dec
and
ds
and
dec
pushf
sarl
hlt
lahf
loope
out
or
fnstenv
clc
pusha
inc
add
and
loop
int
cmp
fsubrl
mov
xchg
sarb
jns
in
xorl
cltd
bound
into
cmp
push
loopne
adc
cmpsb
arpl
jl
mov
add
jae
inc
jp
in
inc
xchg
inc
push
add
iret
je
dec
mov
mov
sub
ss
adc
inc
mov
loop
jbe,pn
outsl
lret
ljmp
cmp
dec
fimuls
loopne
loope
or
aas
fisubs
div
push
movsl
mov
push
jmp
ja
pop
sbb
scas
inc
in
ficompl
aas
jmp
int3
addr16
pusha
jns
mov
fucomi
inc
inc
paddsw
jmp
inc
jp
lcall
jp
out
xor
pop
or
fstps
aas
dec
cmpb
mov
jbe
cwtl
inc
rcrb
pop
jns
rcrl
pop
test
scas
popf
inc
gs
lods
loop
into
pop
push
data16
loop
add
and
jmp
data16
lock
test
icebp
push
pushf
arpl
pop
mov
movsb
inc
rcr
jne
or
test
rol
pop
lds
mov
push
pop
sbb
and
fiaddl
and
xor
addr16
shlb
das
push
mov
scas
fdivp
xorl
cmpsl
ljmp
fldcw
les
out
popa
pop
xor
clc
xor
outsb
sbb
jnp
inc
movsl
in
xchg
ljmp
jg
movsl
pop
sbb
xor
push
jp
sti
jl,pn
pop
mov
cmp
insl
dec
push
inc
fildl
notl
loope
mov
je
dec
stos
mov
cmp
push
sub
ljmp
jne
or
hlt
mov
sbb
push
push
mov
in
std
outsl
scas
jl
add
xchg
ds
jle
scas
push
jb
fs
mov
iret
jae
push
or
xchg
dec
sbb
mov
push
dec
sbb
loopne
add
inc
push
jae
push
or
lods
loope
adc
in
data16
test
int3
fwait
sbb
and
sahf
sub
das
mov
or
mov
or
sahf
rorl
dec
jnp
sbb
ret
test
arpl
sub
nop
inc
aas
stc
cmpl
pop
fnsave
je
adcl
mov
int
or
cmc
mov
cmp
jge
push
pushf
mov
cs
jmp
out
je
cltd
adc
or
int
std
and
imul
arpl
mov
loopne
dec
pusha
pop
inc
stos
xchg
add
mov
and
add
push
bnd
lret
dec
push
cmp
imul
cmpsb
push
ljmp
fpatan
jae
fdivl
mov
loopne
adc
xor
and
and
cli
add
xchg
arpl
loop
inc
fsubl
cmp
leave
repz
mov
mov
fwait
cmp
ret
lret
test
das
out
andb
stc
jne
mov
lcall
sub
iret
mov
add
dec
fcoml
das
lods
adc
bound
negl
adc
dec
sub
insb
test
sub
mov
ds
mov
sub
pop
pop
aam
fs
cmc
lcall
outsb
gs
push
xor
mov
xor
push
add
mov
dec
fisubrl
add
dec
rcll
loop
lds
pop
dec
sbb
cmp
and
sbb
inc
ljmp
push
jns
dec
das
fildl
iret
sbb
in
shr
in
outsb
pop
sbb
pop
xchg
cli
push
pop
jbe
pop
inc
pop
xchg
or
sub
pop
ret
nop
and
lahf
icebp
icebp
xchg
jno
jnp
sub
cli
cltd
rcl
add
push
ficoml
add
fcoms
insb
or
lods
pusha
sahf
sbb
push
mov
push
fcmovu
mov
mov
out
cld
or
jecxz
lods
ds
adc
xor
push
xor
std
xchg
ljmp
int3
cmc
scas
cmc
xor
add
inc
pop
push
lock
jbe
iret
fisubrs
push
jl
sahf
add
add
mov
les
mov
icebp
jb
iret
jmp
jae
aad
pop
mov
cld
pop
imul
jle
call
jns
pop
xchg
loopne
inc
mov
add
xchg
add
and
insl
xchg
lock
lret
rcr
pop
push
mov
hlt
fstl
iret
insb
loopne
mov
pushf
mov
leave
aas
jle
aad
in
add
or
xchg
or
addl
in
inc
jae
jg
sub
fs
sub
adc
cwtl
je
inc
cmp
push
jae
sub
mov
ljmp
jno
je
cwtl
sub
rcll
cmpb
or
sub
cwtl
aad
outsb
mov
stos
mov
lods
sub
pop
sub
and
jo,pn
push
stos
and
lcall
dec
andl
ljmp
sarl
bnd
addl
leave
mov
and
lcall
enter
fisubl
daa
push
sub
pop
sbb
shlb
dec
movsb
call
or
filds
daa
int
push
lods
sbb
adc
inc
outsl
or
daa
or
pusha
call
xchg
xchg
push
pop
mov
stc
int
cmp
pop
jecxz
inc
fs
cwtl
mov
daa
or
lahf
in
cmp
mov
leave
data16
inc
add
inc
add
sub
inc
mov
and
das
mov
dec
mov
dec
add
sbb
aaa
xor
fsubs
ret
jmp
lret
insb
imul
push
lret
jg
dec
pop
and
add
in
sub
jecxz
sbb
xor
ror
xchg
cmp
cmpsl
sarl
out
enter
and
das
iret
xchg
in
mov
and
mov
movb
fs
or
push
adc
or
jns
and
inc
push
mov
stos
mov
cmp
or
pop
mov
cmp
jnp
ja
push
icebp
lods
pop
xorl
adc
cltd
fsubrs
push
test
push
mov
xlat
mov
test
out
inc
mov
sbb
mov
ffreep
dec
mov
pop
xchg
insl
fs
in
in
cmp
add
pop
cmp
lret
push
sub
jbe
pop
ljmp
arpl
lret
inc
andb
dec
sbb
cmpsl
aaa
mov
pop
in
les
add
popa
das
int3
xor
and
iret
jbe
sub
inc
insb
add
andb
mov
push
pop
adc
cmpsb
lahf
rcrb
leave
xor
pushf
test
or
in
pop
or
pop
arpl
xor
insl
xor
scas
cmp
dec
add
adc
mov
test
pushf
mov
ss
lret
dec
adc
add
jo
faddl
xchg
jb
stos
and
push
loope
nop
sub
dec
xchg
dec
dec
mov
mov
cmp
fiadds
push
gs
xchg
das
call
test
jmp
clc
cmp
xor
ficoms
push
outsl
shll
push
in
mov
mov
xchg
inc
es
jbe
pushl
cmpb
es
xchg
sub
dec
mov
cld
push
jmpw
pop
inc
arpl
mov
cmpsb
jno
push
sub
fldcw
sti
inc
cmp
jmp
inc
fs
xchg
fwait
push
mov
xchg
imul
jae
out
xor
xor
fnstenv
lds
fdivl
into
bound
shrl
dec
xchg
nop
dec
popf
jo
add
ds
mov
gs
xlat
int
add
popa
jge
lods
jl
stc
sub
jne
shl
mov
lret
ljmp
or
gs
ss
lods
xchg
add
in
loopne
xor
mov
mov
mov
ljmp
jl
add
rclb
in
in
popa
imul
jmp
add
sbb
cmove
or
xchg
pop
push
adc
or
das
sbb
repz
dec
sbb
pop
jge
out
int
add
test
cmp
pop
das
sbb
adc
pop
sub
fsubp
cwtl
nop
mov
ror
js
cmp
incb
dec
out
iret
and
divl
loop
popa
lret
jo
outsl
mov
adc
stc
dec
mov
std
adc
mov
mov
push
popa
punpcklbw
loop
or
sbb
out
shl
or
lods
ja
cmpsb
sub
jnp
sub
sbb
rolb
push
movsb
xchg
mov
adc
out
lea
jp
mov
add
sahf
and
sub
js
cmpsl
pop
sti
mov
mov
loopne
sti
std
imul
push
sahf
shlb
mov
fnsave
lret
ja
xchg
sbb
iret
cltd
repz
pop
jo
or
negb
hlt
mov
fstps
dec
popf
xor
mov
cli
jp
hlt
mov
imul
cmp
inc
sbb
sti
xlat
push
sbb
and
adc
inc
mov
bound
push
push
xchg
cmp
and
mov
inc
mov
mov
or
std
icebp
out
xor
xchg
mov
jno
mov
aad
inc
outsb
and
stos
inc
dec
or
ret
push
mov
div
cltd
xchg
lret
cs
fwait
int
in
lret
das
push
dec
jl
mov
adc
xlat
loopne
scas
xor
ja
jo
or
jae
xor
test
jae
pop
lea
in
push
adc
dec
dec
addr16
jne
pushf
mov
daa
xor
in
insl
add
mov
xorb
dec
sbbl
and
in
dec
into
jg
sarl
jmp
test
cmpsb
mov
push
out
add
into
push
cli
movsb
lods
mov
fldcw
mov
movsl
pushf
sbb
insl
jp
cs
cmc
fwait
mov
cmp
addr16
lcall
adc
push
std
pop
in
pop
sbbb
mov
pop
fwait
mov
mov
push
mov
or
xorb
jno
sub
mov
jne
popf
lea
out
mov
jp
cli
inc
mov
cli
addr16
or
mov
cmp
sub
and
sub
jns
arpl
popa
fsubs
xchg
mov
xlat
mov
mov
insl
pop
les
add
in
aas
std
lcall
sbb
add
dec
fldcw
js
outsl
shl
jbe
nop
aam
jmp
sbb
mov
movl
or
mov
aas
in
and
mov
rolb
jne
adc
or
mov
jg
ljmp
rorl
orl
divb
insl
out
or
add
ret
sub
xchg
cmp
adc
dec
inc
adc
notl
push
int3
add
sub
sub
outsl
jne
stos
addr16
into
jmp
int3
test
out
cmp
or
mov
dec
push
push
cmp
cmp
mov
test
fsubrl
cld
shr
jbe
lock
ret
jno
ffree
mov
xchg
and
push
pop
mov
cmpsb
test
std
push
scas
out
mov
sbbb
stos
popf
inc
adc
aam
sbb
mov
aam
fs
repz
sub
fldl
daa
in
sbb
in
mov
push
ret
dec
dec
stos
sbb
lods
xchg
pop
and
cmp
jbe
xor
mov
mov
and
sub
pop
scas
push
xchg
fdivs
sub
outsl
pop
xlat
xor
mov
ljmp
arpl
push
push
pusha
in
add
mov
cmp
test
sarb
xor
xlat
in
fistpl
fstp
dec
pushf
push
repz
ja
add
push
cmp
js
aaa
xchg
data16
mov
mov
and
jp
fwait
xor
push
test
sub
pop
xor
mov
push
xchg
sbb
clc
sub
scas
mov
mov
and
cmpb
imul
adc
lods
push
inc
and
adc
mov
add
int
aam
sbb
xchg
ficoml
and
into
andl
jbe
gs
xchg
ds
sub
lret
in
ljmp
cmc
jmp
pop
or
mov
loope
mov
sti
lea
cld
push
ja
movsb
cmp
cmpl
mov
ja
imul
push
mov
ljmp
stc
inc
scas
adc
xchg
imul
roll
jns
xchg
out
mov
or
fdiv
cmp
mov
adc
adc
and
dec
aas
cmpsb
xor
decl
out
mov
mov
negb
sbb
sub
inc
jmp
dec
fwait
scas
mov
leave
leave
sbb
cmpsl
jp
mov
mov
stos
xchg
cmc
call
lds
mov
add
and
or
fildll
jg
int3
jae
rolb
shrb
sub
push
and
mov
mov
jp
cltd
push
add
adc
int3
mov
jle
mov
scas
in
iret
push
ss
mov
dec
bnd
mov
mov
shrl
sbb
pop
incl
push
push
jbe
pop
pop
add
mov
jnp
ljmp
adc
or
mov
faddl
mov
add
lahf
aaa
and
sub
test
dec
icebp
xor
ljmp
add
stc
test
dec
sbb
ret
mov
bound
xchg
iret
xor
cmc
push
sbb
xchg
sarb
xor
add
notl
int3
daa
jno
scas
into
repnz
bound
cltd
push
nop
pop
insl
mov
mov
mov
mov
loope
pop
loopne
cmpsl
cmp
ret
mov
push
pop
incb
and
icebp
das
stc
xchg
js
mov
jmp
sbb
into
ret
addb
lret
pop
loopne
jno
mov
or
mov
xchg
cltd
or
push
into
mov
lock
mov
xorb
sub
push
aaa
add
adc
dec
sub
lock
inc
pop
out
add
push
and
push
xchg
push
mov
or
mov
push
stos
in
cmc
jge
xchg
loop
or
outsl
clc
pop
mov
adc
sub
push
mov
lcall
add
mov
sub
stc
mov
jg
and
stos
jb
cmp
mov
jle
addr16
test
mov
adc
jle
dec
adc
or
lret
cmc
fisubl
dec
dec
push
lcall
sahf
mov
test
lcall
fadds
sarl
mov
popf
scas
pop
pop
jmp
xor
sub
ror
lods
xor
or
call
push
cs
rcll
push
shll
enter
mov
mov
xchg
dec
mov
arpl
loop
jle
jl
sub
shll
loope
out
pop
insl
fildl
dec
pop
add
jmp
mov
xor
std
test
push
cmp
pop
lcall
dec
out
or
cmp
jns
add
pop
sub
loop
add
js
repz
adc
pop
pushf
out
add
cmp
sbb
mov
dec
insl
stos
lock
mov
cmp
pop
inc
push
or
push
xchg
cltd
fs
mov
sub
and
inc
dec
dec
pop
add
push
pushf
popa
jmp
faddl
dec
cmp
in
call
shlb
shr
xchg
divb
ret
mov
push
call
jbe
scas
shr
pop
sbb
cmp
or
sbb
add
ret
mov
dec
xlat
sbb
jmp
mov
mov
andl
push
out
cmp
xor
mov
pop
out
nop
sar
xor
xor
adc
jge
aam
xor
or
mov
mov
add
rorl
pop
gs
sahf
push
pusha
out
push
lahf
or
mov
sti
test
js
orl
pop
mov
aam
sub
inc
addl
aad
dec
mov
in
movb
push
outsl
loop
addr16
fwait
dec
mov
stos
rcr
pop
insl
push
xor
inc
sbb
das
push
push
add
shrl
test
push
xchg
xor
xchg
out
cld
outsb
xchg
cmpsb
mov
rol
jecxz
sbb
dec
jno
jle
push
bound
push
clc
divb
cmp
cmp
xchg
dec
mov
or
jno
in
js
scas
sti
mov
addb
adc
fnstcw
les
mov
repz
fdivs
adcb
psraw
sbb
adc
rolb
adc
jmp
in
leave
push
inc
rcr
inc
test
sub
jb
adc
push
loop
fiaddl
sbb
push
add
fsubs
lret
jno
sub
loop
pop
stc
mov
ror
pop
inc
dec
lahf
jmp
sub
mov
mov
out
mov
std
js
xor
aaa
adc
inc
orb
push
xchg
sub
xor
cwtl
mov
xchg
or
dec
xor
jbe
add
test
cs
cmp
lcall
mov
das
mov
jb
stos
mov
pop
push
mov
cwtl
sti
jmp
test
call
push
ja
sti
dec
in
insl
pop
daa
mov
mov
cs
js
div
mov
mov
in
mov
cmp
jno
mov
or
sbb
inc
aad
lea
cmpsl
cld
mov
mov
sbb
out
testb
sub
inc
xchg
mov
inc
push
js
jp,pt
dec
sub
jo
jns
lds
pop
push
push
lods
imul
loopne
out
divl
pusha
int3
inc
mov
jbe
data16
add
xchg
subl
mov
cmpsl
popf
xchg
mov
adc
in
add
sar
cmp
push
idivb
pop
pushf
std
sbb
add
das
aad
faddl
xchg
adc
loop
sahf
mov
mov
xchg
int3
les
pop
test
lahf
cwtl
rcr
orb
es
cld
xchg
gs
js
pop
pop
adc
and
icebp
in
aam
movsb
sahf
mov
dec
mov
add
shrl
lea
arpl
mov
mov
mov
in
rcrl
loope
insl
xchg
insl
xchg
out
xor
imul
fdivr
movsl
xlat
mov
sbb
pop
mov
xchg
int
mov
sbb
inc
sbb
icebp
lea
stos
jp
iret
lea
repz
adc
ret
int3
in
jl
and
outsl
xor
push
cmp
imul
ret
in
into
fsubrl
xor
jle
into
mov
stc
or
icebp
inc
fisubs
cmpl
push
push
pop
sub
cmp
ficompl
dec
lods
sub
orb
pop
fadds
sti
cmp
fadds
pop
add
lea
or
xchg
inc
push
adc
bound
mov
gs
add
out
jbe
mov
int
ljmp
xchg
ljmp
mov
sbb
ljmp
push
bound
or
iret
ficoml
std
push
ret
cltd
inc
bound
test
test
mov
or
shll
or
dec
aaa
aad
inc
imul
mov
xchg
mov
pop
scas
cltd
fcoms
insb
ss
jns
test
push
mov
push
clc
repnz
je
sub
xor
xor
int
inc
pop
push
dec
hlt
push
dec
push
mov
seto
jbe
adc
cmpsl
mov
divb
jmp
mov
adc
pop
cli
jp
dec
daa
clc
inc
fwait
mov
mov
nop
jge
mov
nop
addr16
or
jne
add
cld
cwtl
roll
cmc
sub
pop
jno
fcomi
sar
cwtl
mov
fidivl
mov
mov
jnp
in
ret
mov
xor
push
lock
mov
lahf
lret
mov
outsb
sahf
das
in
mov
out
add
popa
mov
arpl
dec
cld
mov
mov
stos
ljmp
loop
lds
jo
and
xor
pop
jp
inc
xor
jp
out
dec
push
jne
stos
xor
adc
enter
cld
sbb
sub
fistpl
inc
mov
repnz
fwait
and
cmp
insb
pop
popa
rcll
mov
pop
jo
ja
out
enter
je
dec
out
int3
adc
add
fmull
jno
adc
negb
shl
pop
mov
hlt
jmp
add
je
outsb
jb
int3
fwait
test
js
dec
ss
icebp
push
sbb
sbb
cli
add
mov
dec
jbe
outsb
rcl
lock
in
mov
and
mov
leave
test
movsl
movsl
sbb
fisttps
in
filds
sbb
jp
and
orl
cmp
inc
mov
or
lret
pusha
lret
inc
xchg
movb
sbb
xchg
mov
int3
dec
push
outsb
xchg
xchg
movsbl
mov
fdivl
xchg
xor
xchg
xchg
add
or
xchg
xor
dec
insl
adc
cmp
mov
and
push
addr16
push
stc
inc
push
pop
negb
fwait
aad
movsb
sbb
push
adc
es
test
dec
xchg
sahf
fdivrl
adc
xchg
jg
es
or
popa
insl
push
sub
in
pop
mov
int3
test
pop
daa
adc
flds
inc
pusha
mov
mov
adc
je
fmuls
popa
pop
push
pop
xor
data16
pop
scas
leave
mov
sub
sbb
add
ds
sahf
clc
cmp
and
pop
insl
dec
test
xchg
inc
mov
repnz
out
lods
lods
rcr
mov
mov
aam
pop
dec
stos
stos
push
gs
adc
sahf
lods
jb
insb
mov
sbb
cs
cli
das
or
bnd
movsl
aam
jae
mov
call
popf
test
jp
jp
ficomps
jae
xlat
mov
and
sub
inc
cmpsb
adc
sbb
inc
sbb
int3
inc
jo
daa
xchg
in
mov
out
dec
push
jno
lret
mov
push
jae
adc
push
into
pavgw
scas
inc
nop
sbb
cld
push
je
aaa
push
xor
js
mov
mov
outsb
imul
lods
xchg
clc
pop
out
ret
les
adc
aad
sbb
insl
out
jae
adc
sbb
adc
gs
sub
jl
out
shll
jmp
xchg
stos
in
into
lahf
clc
fsubrl
aam
insl
jne
subb
xchg
push
leave
add
daa
insb
pop
lock
adc
cwtl
loop
dec
pop
xchg
pop
push
or
test
jle
xchg
adc
stos
fdiv
add
or
add
push
mov
xlat
inc
jle
lahf
mov
and
popf
inc
sub
das
mov
faddl
pop
insb
cli
cmp
ss
sbb
sub
mov
push
xchg
xchg
fbstp
or
dec
fpatan
xor
test
mov
xor
pop
push
ljmp
test
push
mov
lret
shlb
lret
daa
rolb
test
loopne
or
pop
inc
icebp
pop
fdivrs
add
das
fsubl
pop
pop
lret
outsb
sarb
fildll
push
pop
and
mov
lock
mov
sbb
subb
aad
fcomp
pop
xor
in
in
jmp
sbb
jg
je
mov
xor
dec
xchg
mov
jle
aad
cltd
test
and
mov
mov
and
xor
mov
xchg
xchg
out
call
mov
jle
cltd
loop
movsl
jmp
pop
cmp
movsl
jmp
sbb
adc
out
ret
pop
jno
aas
adc
mov
adcl
or
fiaddl
cmpsb
mov
sub
add
fistpll
and
shlb
dec
enter
and
icebp
imul
mov
loop
and
sub
pop
ds
xchg
jp
lret
stos
jne
nop
pop
and
xor
daa
fistpl
jb
dec
add
push
int
sub
mov
imul
mov
jnp
stos
je
and
lds
jnp
lret
adc
loop
pop
dec
cmp
sub
insl
mov
aaa
mov
inc
lods
mov
imul
in
pop
mov
sbbl
std
cmc
outsl
daa
faddl
lret
inc
mov
loopne
addr16
mov
jnp
mov
xchg
out
movsl
imul
cs
mov
adc
call
fcoml
pop
ljmp
jecxz
sub
cld
cltd
out
pop
in
fnsave
inc
lods
xchg
loope
pusha
mov
xchg
arpl
mov
jl
add
es
mov
rclb
or
popa
call
out
std
lcall
jno
and
insb
stos
sub
or
jae
xchg
mov
jo
mov
cmp
mov
xchg
xchg
jge
testl
ljmp
push
inc
ret
leave
and
mov
fildll
shr
sbb
hlt
rcrb
loop
jb
pop
jg
data16
shl
mov
cs
adc
in
mov
sahf
mull
jns
in
cmc
inc
adc
mov
pusha
adc
adc
inc
add
adc
or
sub
pop
push
sti
cmpsb
dec
jecxz
cli
xor
jb
int3
cmp
jne
outsl
sub
add
sub
mov
or
outsl
in
mov
test
adc
popf
cmp
xor
mov
xor
xor
push
orb
stos
outsb
pop
cli
mov
arpl
push
xor
sbb
or
sub
mov
into
nop
fdivs
mov
jmp
jns
ja
dec
push
add
lahf
mov
cmp
incl
andb
xchg
adc
sub
inc
aaa
pop
cmc
or
shl
xchg
xchg
popf
mov
lods
ror
mov
sbb
ja
pop
xchg
jo
xchg
out
mov
dec
xchg
out
sbb
sub
xchg
jnp
inc
dec
mov
mov
push
pop
outsl
into
mov
ret
stos
aad
sub
adc
mov
sub
shr
xor
stos
fs
pop
loop
bound
rcrb
cmpsl
insl
pushf
cmp
add
out
mov
jno
into
lds
dec
push
jnp
inc
cmc
mov
xorl
popf
jmp
and
mov
inc
mov
pop
stos
movsl
mov
adc
pop
xchg
jo
popf
sub
mov
lret
sub
push
ja
ret
pop
jae
xchg
mov
adc
jne
loope
ficoml
xchg
jbe
ret
int
sbb
mov
leave
and
mov
sbb
pop
stc
imul
iret
out
and
mov
mov
push
in
or
inc
mov
out
incl
cmp
jns
cmc
jp
xor
inc
mov
mov
cwtl
fisubrs
out
cmp
and
lods
push
jg
add
xor
mov
mov
loope
orb
push
cs
inc
shl
into
mov
hlt
or
xor
sub
sub
loopne
jmp
shrb
jp
jmp
sahf
out
push
inc
test
xlat
cltd
fstl
fiaddl
in
outsl
subb
call
jns
ja
pop
xchg
push
xor
iret
jle
add
std
loopne
xchg
mov
mov
pop
mov
sarb
sarl
sub
mov
stc
loopne
mov
pop
je
imul
pop
les
xchg
aad
xor
sbb
lock
adcb
mov
out
cmpsb
or
xor
inc
push
mov
stos
mov
mov
repnz
xchg
rcr
lods
mov
popf
inc
xchg
pop
jmp
dec
sub
aad
and
loop
mov
cs
repnz
ss
insb
call
jbe
sti
imul
inc
xor
movsb
push
lret
lock
jmp
cmc
sbb
mov
cmpsl
fdivs
test
add
mov
or
rcrl
mov
sub
nop
sbbb
and
sub
lahf
inc
movsb
lods
inc
jl
jle
dec
roll
pop
arpl
and
or
daa
lock
xor
loop
dec
fcoms
addr16
loop
mov
xchg
mov
test
adc
mov
lock
mov
push
popf
mov
ret
mov
iret
mov
pop
jne
imul
lock
sbb
mov
sbb
mov
dec
add
xchg
and
sub
add
mov
sbb
mov
jb
xchg
repnz
pop
bound
or
jns
clc
pop
or
xchg
xor
or
or
xchg
sbb
shrl
jae
cmpsb
cmpsb
push
pop
sbb
inc
out
out
pushw
test
daa
clc
push
cltd
mov
mov
add
nop
pop
cmp
pusha
ret
shlb
mov
stos
sub
fs
out
mov
adc
pop
and
mov
xor
rcll
ret
and
addr16
adc
jp
xchg
pop
stc
outsl
dec
stos
dec
mov
jns
xor
mov
fcoms
dec
in
xor
movsb
or
pop
fisttpl
int
popf
lock
rolb
insb
cmp
stos
push
mov
fwait
fwait
jl
mov
int3
adc
mov
sub
popf
andb
adc
inc
je
ss
push
call
ljmp
lea
adc
outsl
stos
or
mov
xchg
push
imul
pop
pop
jno
mull
push
or
popl
addr16
aad
push
cwtl
push
jb
dec
repz
jae
and
rol
test
jge
dec
add
pushf
xchg
mov
mov
test
dec
rclb
nopl
sbb
int
loop
xorl
add
add
les
into
je
sti
je
xor
push
mov
xchg
repnz
pushf
sbb
fsub
push
sti
jno
fadds
jg
in
xor
iret
jp
insb
or
push
xchg
add
pop
idivb
sub
aad
aad
movsl
add
in
jnp
pop
jle
incb
jae
pushf
mov
repz
sub
jae
sub
test
cwtl
or
iret
in
insb
std
in
in
fimull
dec
dec
add
leave
adcl
ss
inc
dec
in
pop
mov
push
and
xchg
lds
aad
fnstsw
int3
cmc
push
int
repz
enter
cmp
pop
sub
scas
outsl
nop
pop
loopne
inc
adc
dec
push
movsl
sbb
pop
jecxz
jnp
jge
cmp
movsl
mov
lcall
lea
fistpl
or
push
lock
mov
nop
aad
rcrl
arpl
inc
jecxz
inc
dec
mov
pop
adcb
test
dec
mov
jbe
jo
cld
icebp
jns
push
shlb
out
out
imul
insb
sub
or
add
stos
jnp
sbb
lea
jns
int
pop
and
mov
fisubrl
pop
cmpl
test
dec
inc
outsl
loope
sbb
addb
int3
mov
jnp
mov
movsb
lods
out
pop
sbb
xchg
cmovno
sub
sti
jge
mov
pop
inc
das
add
jne
push
sbb
sahf
jno
fwait
cwtl
add
jne
insb
testb
cltd
das
clc
stos
xchg
mov
add
pop
mov
pop
jl
hlt
pop
dec
jbe
addl
jg
sbbl
lea
movsb
ja
shl
adc
jge
sbb
pop
push
xchg
push
xlat
xchg
xchg
cmp
inc
sub
cltd
test
pop
push
sub
iret
cmp
nop
inc
jp
jnp,pt
cmp
mov
ja
jae
push
leave
push
hlt
test
inc
xor
imul
les
daa
leave
sub
ljmp
mov
cwtl
aam
pop
sub
cli
dec
and
mov
cwtl
xor
ret
inc
mov
push
jg
int3
inc
dec
mov
neg
mov
addr16
daa
adc
mov
pop
in
ficompl
in
lcall
cmpsl
adc
fwait
out
pushf
dec
ret
push
push
enter
push
loopne
push
repnz
rcr
fs
jmp
iret
fnstenv
cmp
jecxz
outsl
loopne
cmc
subb
pop
xor
ss
inc
xor
mov
mov
insl
push
out
rcll
in
sbb
rclb
pop
sub
add
mov
sbb
mov
sub
out
adc
mov
nop
cmc
fldenv
popa
jae
rorb
add
stos
loop
out
sub
sbb
test
shll
sub
loope
aam
add
xor
out
leave
xchg
dec
in
paddsw
pop
adc
pop
mov
cmp
leave
cmp
lock
data16
pop
fsubl
pushf
das
psadbw
fistpl
pop
mov
js
dec
in
add
insb
pusha
pop
adc
pop
inc
pop
test
cmp
add
jge
jp
mov
imul
mov
add
xor
mov
scas
mov
sub
adc
js
stos
inc
mov
ds
xchg
mov
pop
mov
ficomps
sub
shl
jge
and
je
jg
or
scas
idivb
ret
xchg
xchg
jne
sbb
mov
xor
jge
outsl
ljmp
stos
jbe
dec
addl
je
insb
adc
mov
pop
mov
adc
movsl
push
stos
aas
push
xor
pop
adc
jno
pop
add
lcall
mov
das
jge
jmp
jb
clc
sbb
in
enter
loop
push
sbb
pop
in
xor
and
lods
sti
je
arpl
aam
sbb
jb,pt
or
xor
mov
pop
xchg
jg
dec
and
test
and
stc
enter
test
aam
imul
inc
test
add
jge
out
cld
leave
ret
jecxz
cmp
inc
int
inc
loop
arpl
pop
xor
setae
inc
pop
test
dec
mov
jge
mov
pop
das
int
movsb
inc
mov
lret
test
inc
popa
adc
sbb
ficomps
jo
inc
ljmp
xchg
jno
inc
lock
outsb
mov
xor
cmp
insl
insb
push
adc
mov
movsb
icebp
or
push
adc
xchg
add
cltd
adc
push
sub
fsubs
mov
xor
leave
xor
fbld
mov
mov
dec
cmpsb
scas
push
pop
sub
mov
mov
ficomps
fmul
lret
sarl
and
lahf
dec
fcoms
nop
or
or
mov
dec
sbb
aam
icebp
test
mov
out
lahf
pop
ljmp
lret
shl
sahf
lds
cmp
lahf
cmp
xchg
movsl
push
push
int
loop
sub
push
add
pop
jno
popw
out
mov
inc
dec
push
addr16
pusha
mov
adc
sbb
fwait
les
push
adc
adc
sahf
lock
dec
add
shlb
fistpll
nop
out
cmpsl
leave
aad
mov
pop
nop
mov
cltd
divl
xchg
mov
xor
and
adc
daa
hlt
sub
out
sub
dec
add
lods
add
cwtl
jbe
arpl
push
mov
or
dec
test
mov
fwait
insl
add
lret
inc
out
dec
mov
addr16
std
loope
pop
sbb
loope
adc
sub
fcmovbe
call
xor
cltd
test
push
insl
inc
lock
loope
adc
in
test
gs
fdivl
and
fwait
mov
sti
and
cld
out
aas
shlb
fstps
mov
idiv
adc
xchg
insb
mov
in
xor
loope
out
push
das
fisttps
push
test
push
mov
mov
and
popf
notb
call
dec
push
dec
xchg
jg
pop
imul
in
imul
adc
pop
pop
adc
push
movsl
push
out
pop
pushf
pushf
leave
ds
dec
pop
stc
mov
mov
fildll
inc
inc
nop
aaa
xor
fstps
icebp
push
add
dec
sbb
out
push
add
add
push
loope
cmp
icebp
stc
and
mov
insb
lods
bound
or
xorl
mov
orb
and
push
test
mov
lret
shll
jp
adc
sbb
loopne
jmp
push
mov
je
add
fs
or
orb
push
push
mov
cli
xor
xor
mov
fnstsw
popf
clc
cmp
adc
push
jp
mov
mov
int
push
jp
movsb
add
js
and
sahf
pop
cmpsl
sub
pop
imul
sbb
ds
xchg
mov
inc
xor
popl
stc
push
fmull
jl
xchg
jbe
les
lea
jl
rcl
jb
cltd
cltd
sti
sub
jbe
and
sub
mov
jnp
fists
ljmp
xchg
mov
push
call
test
mov
sti
or
dec
inc
inc
popf
cmc
mov
fdivl
cmpsl
test
jo
add
mov
sub
sub
and
pop
lods
mov
cmp
popa
xor
stc
outsl
push
cmp
mov
aaa
aas
sbb
dec
push
mov
andl
sti
xor
sub
iretw
mov
push
aaa
aas
fbstp
loope
inc
test
push
subb
xorb
dec
mov
inc
and
mov
inc
lret
jle
dec
lds
add
scas
movsl
mov
xor
pop
ss
mov
jp
mov
leave
cwtl
fdivs
inc
push
pop
or
sbb
jp
and
lods
fsubr
sbb
inc
jo
and
outsb
cltd
addb
into
xor
cld
stc
call
pop
lret
mov
mov
inc
pmulhw
xchg
iret
int
test
repnz
scas
xor
subl
xchg
outsb
pop
add
shl
jmp
addr16
jo
pop
or
arpl
xorb
push
mov
cmpsl
add
cmp
imul
jnp
sub
clc
push
jnp
mov
testb
icebp
and
jmp
add
jmp
pop
or
sbb
add
repnz
loop
out
pop
icebp
int3
mov
sar
mov
out
lcall
test
adc
pop
out
xlat
nop
sub
sbb
icebp
mov
imul
cmp
add
mov
push
push
rcrl
jge
xchg
lret
inc
popa
add
repnz
jne
mov
int3
mov
popa
out
pusha
add
iret
pop
test
loopw
sub
mov
jb
mov
jge
xchg
mov
sar
mov
cmp
ficomps
sbb
cmp
mov
mov
jle
xchg
es
sub
cmp
xchg
mov
cvttps2pi
jle
add
repz
fs
or
andl
push
push
test
adc
adc
xor
jmp
xor
or
xchg
xchg
mov
pop
js
sarl
repz
icebp
test
into
mov
mov
fdivp
lret
sarb
movl
icebp
dec
pop
or
call
iret
aaa
inc
pop
in
je
nop
dec
xchg
cld
push
or
adc
outsb
mov
xchg
sub
insb
mov
daa
sub
mov
sub
mov
fdivl
jo
cmp
push
xchg
dec
aaa
scas
mov
xor
call
in
push
iret
scas
dec
rcrl
push
dec
lcall
fwait
mov
add
imul
mov
in
mov
arpl
xchg
push
push
incl
icebp
adc
fcomps
ds
mov
test
jg
jecxz
iret
hlt
sbb
jg
ja
fdivl
mov
enter
sub
imul
mov
cli
add
pusha
xchg
int3
outsb
insl
inc
aaa
arpl
loope
daa
inc
mov
rorl
inc
cmpsl
arpl
push
sti
call
jge
test
dec
cmp
stos
sbb
sub
test
mov
fcoml
in
xor
js
in
push
shll
jg
sbb
sahf
mov
xor
fisubs
lods
incl
cmp
cmp
push
sbb
or
cs
xchg
dec
jmp
popf
ss
arpl
mov
insl
iret
adc
call
inc
test
and
lds
sbb
or
mov
outsl
sub
sarl
je
loope
jmp
inc
mov
xchg
mov
inc
adc
push
mov
enter
movsb
cvtdq2ps
lods
jmp
cmpsl
sti
push
sub
pushf
loopne
rorb
xlat
or
cmp
jp
push
aas
lds
mov
fiadds
cmpsl
popf
push
xchg
or
loop
or
nop
sahf
sbb
dec
jge
push
jle
push
out
fldcw
add
adc
cmp
xor
push
sbb
fimuls
pop
xchg
mov
test
and
dec
call
adc
lods
cmp
cmpsl
aad
xor
inc
push
push
inc
jns
dec
sub
xchg
adc
test
popf
outsb
imul
dec
test
inc
dec
sub
enter
popf
or
push
add
test
mov
lods
sub
ret
adc
add
push
pop
add
mov
push
and
int
xchg
push
into
gs
cld
clc
and
mov
shlb
icebp
hlt
es
stc
data16
scas
gs
les
adc
xor
dec
pop
das
mov
fwait
inc
rcr
test
mov
cmp
cwtl
push
fistpll
or
jp
imul
mov
mov
sub
faddl
and
mov
push
mov
mov
fadd
das
push
push
push
mov
mull
pop
insb
dec
pusha
inc
pop
mov
xchg
jae
icebp
and
pusha
xchg
mov
cwtl
in
les
in
push
aad
jmp
ret
fsub
xchg
int3
cld
ss
das
xor
and
adc
dec
sub
sbb
xchg
push
adc
pop
jecxz
hlt
mov
jmp
test
pushf
cs
fmull
int
out
add
jg
iret
push
xor
pop
jbe
push
and
mov
aaa
aam
shl
or
lcall
daa
xchg
push
cmp
add
leave
lods
fiaddl
scas
fcom
lods
mov
shrl
jns
stos
jp
xor
cmpb
mov
pop
test
push
cwtl
dec
sub
inc
cmpsl
es
call
js
sbb
pop
das
mov
sub
or
lidtl
adcl
and
xchg
jne
stos
repz
cmp
stc
imul
xchg
sub
xor
jnp
aam
lahf
das
dec
test
loop
dec
pop
sub
pop
ror
lds
loop
lock
mov
sbb
sub
clc
pushf
add
xchg
out
adc
xchg
in
jg
data16
gs
xor
mov
jecxz
or
and
ss
add
cmp
aam
inc
inc
mov
dec
hlt
fcoms
adc
test
jnp
mov
addl
in
push
data16
pop
mov
adc
pushl
test
push
popa
aad
adc
loop
cltd
sbb
xchg
add
pushl
ffree
rcl
jp
inc
or
or
pop
outsb
pop
xchg
rcrl
jo
jbe
call
mov
jne
mov
imul
stc
jle
faddl
sahf
mov
push
cmp
fimull
adc
cmp
cmovno
int
or
mov
je
fs
js
lock
gs
and
iret
mov
movsb
aad
ja
and
push
mov
add
ror
mov
iret
inc
dec
hlt
add
xchg
cmpb
fistl
jae
imul
lea
sbb
aad
lret
pop
mov
cmc
xchg
fisttpll
cwtl
mov
out
push
mov
dec
sub
cmpsl
jp
lods
sub
inc
xlat
les
into
cli
sbb
mov
or
jg
in
or
mov
xchg
xchg
int
setae
movsl
in
jns
addr16
add
out
js
mov
xchg
mov
mov
mov
jbe
inc
divb
jo
call
or
jo
lahf
push
cmp
test
cmc
mov
mov
fs
mov
and
xorl
jge
icebp
fnstsw
rcrl
gs
rclb
ret
outsb
xchg
popf
xor
xchg
adc
lds
mov
loope
pop
pop
imul
push
in
scas
das
pop
cmpl
sbb
mov
in
testl
sub
roll
enter
adc
mov
xchg
push
adc
adc
mov
pop
xor
mov
sub
push
pop
lret
popf
push
ret
lret
add
testb
popa
popf
imul
push
loop
push
out
stc
adc
mov
int3
xchg
jmp
popl
cltd
mov
aam
cmc
xor
add
push
enter
sti
test
jmp
jp
ds
loopne
push
leave
adc
cmp
int3
ds
addr16
pop
cmp
insl
and
inc
and
repz
jmp
repnz
outsb
cmpsl
cmp
pop
jae
out
adc
bound
nop
dec
lcall
mov
imul
cs
rclb
jecxz
imul
add
ja
push
jge
xor
test
mov
add
mov
push
mov
in
or
add
std
daa
pop
pop
add
clc
inc
or
rorb
jle
jl
sbb
sbb
or
push
jl
cmp
push
fnstcw
insb
inc
int3
test
jae
mov
into
or
inc
nop
jae
and
js
inc
or
into
pop
pop
repnz
ds
sub
jmp
xchg
pop
xor
inc
rolb
and
ret
cltd
dec
jge
dec
xchg
inc
mov
xchg
jge
loop
arpl
lret
fidivrl
push
out
sub
pop
repnz
fs
lahf
xorb
jne
ret
stc
cli
pop
adc
mov
lds
pop
xlat
pop
sbb
dec
xor
ss
pop
inc
sbb
dec
dec
dec
fcmovb
mov
je
insb
fdivs
xor
aaa
cmp
ljmp
push
add
hlt
test
jmp
clc
pop
dec
test
ds
fidivl
dec
xor
push
pusha
mov
pusha
pop
cld
sub
imul
inc
aad
mov
or
mov
lock
fdivrl
mov
divl
enter
or
sub
ss
sbb
es
lret
xlat
rolb
adc
jbe
femms
sub
pop
ficoms
test
mov
pop
sahf
cmp
loopne
icebp
mov
js
cmp
iret
lahf
scas
mov
fisttps
jns
mov
adc
mov
mov
and
dec
cmp
xor
icebp
int3
into
xor
mov
or
jnp
pop
and
push
int
iret
sbb
inc
inc
mov
fimull
cmp
xchg
mov
adc
pop
xor
sti
cmpb
icebp
mov
testl
rcll
das
mov
cltd
pushf
adc
pop
inc
lcall
sbb
into
scas
test
and
std
jp
mov
mov
js
shlb
cmp
xchg
cmp
shrb
shl
cld
pop
mov
fcomip
inc
pop
lret
mov
ret
ror
jmp
pop
test
inc
jl
dec
xchg
xchg
cltd
test
inc
in
scas
xchg
or
pop
clc
out
jecxz
pusha
arpl
pop
insb
fsubp
pop
int
outsb
pop
ficomps
dec
insl
rclb
or
or
mov
fbld
push
getsec
in
fists
fwait
xor
jle
dec
mov
mov
lds
adc
mov
clc
adcb
in
dec
sbb
jne
pushf
cltd
pop
test
mov
xchg
push
aaa
movntps
rclb
test
repz
dec
fsubrp
aaa
fwait
fwait
pop
dec
and
adc
stos
in
sbb
xlat
int3
cmp
cs
lcall
sub
faddl
and
inc
leave
inc
mov
jae
loopne
ret
js
adc
lds
pop
and
push
pop
sub
ficomps
daa
xchg
imul
xor
xchg
and
sbb
leave
jae
mov
lcallw
jae
adc
sub
push
ret
add
aaa
dec
mov
ljmp
cmpsl
sbb
xchg
cmp
or
and
es
int
xor
lret
sbb
push
pop
jnp
adc
shll
xchg
push
or
xlat
mov
pop
dec
and
repz
mov
cwtl
std
call
or
aad
sar
cmpsl
cmp
enter
into
xchg
and
sbb
in
mov
fcomps
sti
int3
dec
mov
inc
pusha
adc
in
int3
jae
stos
rcll
repz
lahf
call
pop
inc
dec
mov
xchg
fidivl
add
jecxz,pn
cmp
mov
pushf
orl
hlt
repnz
dec
mov
cmp
push
outsb
sbb
int
pop
xchg
ljmp
cmpsb
push
jl
jecxz
jmp
ja
xchg
inc
fwait
stos
imul
les
popa
mov
out
lods
bound
sti
add
out
xchg
adc
sub
sub
cmp
imul
sbb
faddl
scas
rolb
xor
push
and
leave
shrb
fstps
sbb
inc
cwtl
add
fsubs
aas
leave
fdivrs
mov
loope
loopne
clc
jb
and
ljmp
cmp
add
cmp
add
repz
ss
dec
jns
js
nop
sbb
push
mov
mov
adc
aam
mov
cmp
adc
jmp
repnz
aaa
sub
roll
sbb
xchg
push
mov
cli
aaa
mov
cmp
lahf
sub
jl
adc
hlt
xor
and
stc
divb
dec
push
and
jg
xchg
sbb
jo
pop
sub
dec
outsl
mov
hlt
rorl
fmull
jp
fistpll
iret
pushf
loopne
imul
icebp
xlat
jno
movsl
push
xor
cs
movsb
fcoms
fsubrs
arpl
xchg
leave
imul
sahf
mov
and
jo
bndldx
adc
or
push
xor
push
imul
sbb
mov
sahf
pusha
icebp
xchg
adc
test
daa
or
or
mov
cmc
adc
mov
mov
jp
mov
mov
mov
mov
outsb
ds
dec
and
ljmp
fsubrl
mov
cmpsl
or
push
mov
repnz
lret
jmp
push
push
mov
xchg
ret
mov
fwait
iret
xchg
jae
fstl
and
mov
push
jns,pn
add
popa
insb
push
jb
and
lods
adc
adcl
mov
mov
into
xchg
call
andl
push
shlb
jo
movsl
push
in
test
jmp
stc
daa
pop
or
sbb
rolb
pusha
or
das
or
enter
js
jne
mov
lret
jmp
fisttps
push
lock
cld
pop
leave
enter
insl
lret
xor
xor
movsl
fsubs
push
add
nop
gs
pop
fsub
fnstsw
aaa
rolb
push
jl
loopne
jbe
mov
push
repz
add
mov
lret
jae
int3
pop
cltd
or
int
mov
xchg
enter
mov
int3
mov
sbb
and
mov
push
mov
inc
xor
xchg
or
imul
push
push
xchg
mov
jno
movq
pop
loopne
add
xchg
aaa
loope
icebp
hlt
sub
icebp
pop
xchg
jno
pop
jae
iret
add
cmp
test
push
outsb
fldt
cmp
pop
xchg
nop
lds
dec
mov
add
or
insb
or
mov
or
out
mov
orb
mov
sarb
out
add
inc
fistl
jo
push
inc
subb
fwait
test
or
adc
iret
xchg
mov
inc
das
pop
sub
cmpsl
popa
out
mov
sub
call
or
sti
mov
scas
pop
cmp
rcrb
mov
dec
addr16
cmp
cmp
lcall
out
mov
xor
inc
mov
fwait
nop
test
aad
imul
push
mov
pushl
les
pop
jecxz
les
outsl
enter
lock
mov
dec
lahf
int
jae
mov
loopne
sbb
lahf
push
lret
dec
lds
neg
xchg
cwtl
imul
and
or
mov
arpl
push
xor
push
lahf
int
xchg
push
shl
es
jl
pushf
ljmp
or
hlt
push
or
mov
mov
loopne
xchg
testb
cwtl
add
sbb
stos
sub
and
fs
hlt
pop
aaa
imul
movsl
call
in
xchg
imul
std
mov
adc
dec
or
pop
neg
inc
or
sub
in
sub
sub
pop
sub
mov
or
adc
push
daa
xchg
pop
ja
fstl
pop
mov
xor
daa
pop
out
fs
xor
jge
xchg
mov
mov
xchg
or
loop
mov
cwtl
mov
jl
fimuls
inc
pop
fisubrl
push
jl
test
jno
rcrl
lret
add
cmpsl
mov
bound
stos
fs
mov
sbb
push
dec
lcall
pop
jg
lods
cltd
negl
push
mov
insl
adc
jecxz
scas
cltd
mov
icebp
imul
mov
je
jno
xor
jo
daa
int3
xchg
test
sbb
mov
sti
push
or
ss
dec
add
fcmovnbe
xchg
mov
mov
test
sti
push
xchg
mov
ds
mov
dec
std
or
cmp
mov
mov
leave
xchg
sub
adc
sub
mov
xlat
aad
andb
out
ret
popf
xor
cwtl
aaa
lods
or
aad
loop
mov
lret
gs
mov
inc
xor
add
sub
jbe
jns
mov
dec
out
loop
mov
cmp
jmp
push
jge
sub
inc
xlat
xchg
aas
mov
in
sbb
jns
xchg
xchg
scas
test
and
push
jg
lret
xchg
xor
fistl
sub
inc
or
mov
fcoml
fst
and
insb
jno
hlt
lds
int
dec
bound
out
jl
cmp
sub
call
fiadds
test
outsl
jle
aad
mov
addr16
mov
mov
or
sbb
dec
jmp
push
and
jle
ret
mov
hlt
pop
imul
lahf
inc
jmp
stos
lcall
push
xchg
mov
push
int3
lods
cmc
fimuls
sarl
sub
repnz
ret
repz
xchg
rcrl
hlt
divl
mov
stos
lahf
cs
jecxz
cmp
ret
rorb
mov
dec
loope
out
dec
mov
subl
push
xchg
subb
xchg
in
inc
mov
inc
xchg
shrl
fs
fisubl
imul
pop
fidivs
sbb
adc
jae
jne
cmc
fcompl
cmp
jnp
and
and
mov
idivb
sub
out
ss
cmp
push
and
jg
mov
sbb
out
lret
dec
xor
and
xor
movsb
sbb
push
or
mov
das
fcoml
das
add
xor
adc
aas
sbb
rolb
cmpsl
stos
pop
dec
in
out
sub
cmpb
xchg
and
inc
ds
xchg
dec
add
stos
pop
jmp
and
mov
jns
cmp
inc
pop
in
dec
mov
ljmp
cmpsb
les
xor
dec
or
movsb
ret
xor
xchg
in
inc
inc
or
adc
idivb
test
push
dec
fidivrs
out
mov
pop
ficoms
test
pop
inc
sbb
or
pop
mov
add
bound
inc
jmp
xchg
sbb
and
inc
test
mov
notb
lods
insl
es
jecxz
in
js
xchg
mov
rcll
fsubr
push
cmp
test
cmp
lahf
adc
cmpsl
mov
aaa
cld
sahf
dec
xchg
stos
mov
and
fwait
sub
mov
xor
sbb
adc
or
pop
jne
cmpsb
sub
pop
lods
adc
mov
mov
xchg
je
aam
je
dec
iret
ss
push
mov
inc
mov
popa
leave
std
test
bound
mov
and
push
lcall
fwait
adc
leave
in
dec
jg
loope
sbb
shl
fcmovbe
bound
fistps
mov
popf
mov
dec
adc
fsubl
jae
lods
dec
xorl
int3
bound
cmc
icebp
ljmp
mov
dec
fcompl
xor
stc
fdivl
popf
mov
pop
loopne
and
push
mov
test
adc
insl
sub
xor
inc
repnz
test
push
mov
cwtl
mov
pop
xor
rorl
fstps
jno
repz
sbb
sahf
jmp
inc
orl
xchg
dec
mov
or
push
dec
and
mov
repz
sahf
ja
mov
pop
fimull
outsb
pop
ja
iret
push
or
xor
dec
sbb
js
mov
filds
push
inc
or
or
push
jae
test
in
inc
sbb
mov
jno
bound
and
loop
pop
and
or
or
push
sub
lods
inc
push
in
inc
cmp
dec
xchg
rcrb
jb
jno
inc
mov
xor
jmp
lock
push
or
cmpsl
and
ds
lret
mov
lret
push
mov
push
shl
add
xlat
mov
sub
pop
fnstsw
push
push
xchg
test
mov
mov
jo
push
cmpb
push
dec
in
insb
adc
std
ret
dec
mov
jo
xchg
mov
test
rolb
inc
xorl
mov
jbe
inc
lcall
and
addr16
or
mov
pavgw
jle
lods
sti
js
mov
in
negl
lret
imul
stc
mov
jmp
mov
fiadds
mov
adc
call
int
dec
cmpsl
out
jge
sub
jbe
and
push
add
dec
xchg
mov
in
adcb
clc
or
mov
cmp
int3
aam
jle
jae
mov
popa
add
mov
in
or
out
xchg
push
adc
orl
test
sbb
leave
fiaddl
pop
sti
or
nop
pop
mov
xchg
aaa
cmpb
cmpsb
push
pop
stos
adc
jnp
in
push
loope
sub
cmp
sub
insl
bound
xor
rclb
ds
lcall
inc
xor
dec
ss
data16
or
lcall
stc
jecxz,pn
or
xchg
js
push
adc
xor
sub
xchg
cmp
adc
lock
sti
pop
outsl
out
mov
popl
sahf
jnp
mov
sti
outsb
push
je
or
ss
pop
jle
repnz
dec
jno
lods
mov
daa
bound
inc
xor
adc
hlt
pushl
push
jge
idivl
movsl
jle
dec
mov
pop
jne
push
imul
lret
jge
xchg
mov
inc
xor
and
mov
nop
clc
dec
dec
mov
push
jns
add
repz
sbb
ret
arpl
mov
add
cmpsl
adc
jne
cltd
jp
push
ror
sub
aam
ss
or
lahf
out
into
outsl
push
sbb
stos
popf
mov
sbb
outsb
inc
jae
cld
xor
ret
cmp
das
inc
jmp
add
nop
push
aaa
call
cmp
test
mov
jl
subl
clc
sub
in
jns
xor
lods
sub
lods
fistpl
das
sbb
in
insb
ja
sahf
and
hlt
push
into
stc
sar
and
movsb
mov
arpl
push
adc
xlat
dec
cmpb
je
les
mov
xchg
add
adc
xchg
lods
mov
fidivs
and
fwait
sbb
jbe
mov
cmpsb
cmp
iret
outsl
lock
pop
ficompl
out
into
jo
stos
fidivs
daa
jb
mov
out
adc
add
xor
repz
idivl
xchg
cmp
popa
ss
jns
push
dec
das
popf
lcall
int
jg
mov
ret
lods
xlat
cmc
mov
cmp
les
mov
jle
xor
cmpsb
or
mov
push
pop
sbb
rcll
ljmp
jnp
xor
cmp
add
jecxz
sub
inc
in
out
roll
gs
xchg
push
addb
adc
add
test
cmp
shll
fs
lea
sti
or
xchg
pop
push
mov
inc
shll
int
icebp
jge
add
das
jnp
jnp
sbb
fidivl
and
imul
scas
lea
cwtl
icebp
in
test
incb
push
mov
inc
sbb
sbb
int
sub
dec
and
aad
inc
imul
stos
addr16
lods
stc
jmp
mov
neg
jmp
xchg
lock
mov
jnp
rcrl
jg
cli
sbb
pop
or
sbb
in
add
dec
arpl
mov
lret
mov
pop
lock
mov
push
hlt
xor
mov
push
xor
subl
fistps
test
shr
pop
dec
imul
sahf
bswap
sbb
or
cmc
rolb
add
sub
or
sbb
xor
mov
mov
in
jnp
ds
inc
jp
cs
pop
cmpsl
add
sti
jae
adc
push
testb
add
mov
mov
push
pop
gs
cmp
outsb
test
insl
fdivrl
hlt
popw
push
cli
dec
dec
push
and
mov
inc
fisubl
fstl
sub
movsb
mov
arpl
popf
pop
xchg
je
and
dec
idivl
mov
mov
sbb
loope
xor
mov
xchg
mov
adc
jp
sbbb
stc
pop
or
adc
repnz
cmp
jle
sub
mulb
ss
outsl
movsb
push
adc
sbb
hlt
loope
test
call
inc
lock
and
dec
insb
jnp
inc
decl
test
xor
jmp
add
mov
mov
js
rorb
or
or
mov
imul
mov
cmpsb
push
fwait
enter
sahf
std
lcall
add
rcll
cmp
sti
mov
jmp
repz
mov
mov
out
imul
test
jmp
push
dec
add
fldt
dec
pushf
lcall
adc
dec
aas
sbb
mov
mov
or
fwait
dec
pop
lahf
imul
je
mov
jp
adc
mov
imul
dec
xor
cwtl
add
and
push
cltd
jp
fldl2t
out
ret
into
or
aaa
cmc
adc
push
int3
repnz
test
and
insb
imul
cmp
or
repnz
cmpsl
scas
cs
fimull
ficoml
fildl
xor
outsb
test
dec
sbb
cmp
dec
mov
cmp
fdivrl
push
mov
test
push
xor
cmp
ds
into
dec
mov
pop
les
jo
adc
push
movsl
inc
jl
test
jnp
and
addb
push
or
add
ss
mov
fwait
pop
call
gs
push
dec
jns
sbbl
cld
jae
mov
mov
or
jp
mov
icebp
mov
aaa
andb
je
mov
out
aas
js
jno
inc
mov
fnsave
div
loope
xchg
cmpl
pushf
popf
fistps
xor
and
adc
mov
ds
test
scas
out
sub
push
pop
subb
inc
int
imul
leave
cltd
add
shrl
aad
push
jmp
pop
or
loope
mov
lock
and
imul
or
push
fcomi
xor
insl
sti
mov
out
push
mov
pusha
ret
dec
and
pushf
movsb
or
lahf
inc
aaa
ret
push
insl
icebp
and
mov
push
cmpsl
push
testl
mov
cmpsb
aas
sub
push
arpl
cmp
and
push
dec
and
pop
movsl
cwtl
popa
pop
pop
cmp
jmp
shl
jae
mov
dec
and
dec
sub
jl
fsubrs
adc
lods
dec
sub
in
jle
push
xchg
mov
movsb
cmp
ljmp
in
sub
fucomip
mov
gs
cmp
into
dec
pop
mov
dec
sti
cmp
out
cmpsb
jecxz
aam
mov
and
out
xchg
orl
scas
cli
pushl
cmp
push
pop
mov
outsl
mov
xor
mov
call
test
adc
nop
hlt
js
cmp
push
add
dec
or
sbb
pop
rcr
sub
fadds
pop
adc
or
lahf
add
fadds
jge
ret
rclb
sub
loopne
cltd
mov
jns
mov
xchg
in
add
jno
stos
stc
pusha
sub
sub
push
inc
sub
dec
outsb
jbe
fucomp
leave
push
xchg
mov
inc
xor
call
sub
test
pop
out
sbb
sub
ds
jl
mov
aas
adc
sarl
mov
pop
cmpsb
pop
jecxz
int3
mov
mov
mov
ljmp
stos
nop
les
xor
cld
sti
cmp
xchg
sub
inc
cmp
cmpb
les
lock
sub
jns
jg
out
nop
push
jae
dec
cmpsb
pushf
xchg
loop
sahf
daa
imul
mov
jb
in
and
test
daa
lret
sub
sarb
dec
in
call
fwait
sub
lret
cmp
lods
stos
fcmove
dec
cmp
mov
dec
cltd
lock
stos
jo
mov
mov
sbb
jno
add
cli
pop
adc
pop
sbb
in
andb
addr16
in
gs
dec
jns
addl
push
mov
ss
push
xor
dec
and
push
jle
sub
imull
adc
scas
lea
xchg
xor
dec
cwtl
int3
int
aas
sub
test
mov
push
scas
std
push
push
outsl
cs
and
loop
int
sub
ds
pop
mov
pop
cwtl
pop
cmp
push
mov
cli
sub
mov
pop
lock
fs
mov
mov
xchg
jle
movsl
imul
sub
xchg
sub
ret
dec
jne
mov
test
mov
push
mov
jno
sbb
xor
dec
mov
jp
xorb
mov
arpl
xchg
stc
push
out
xchg
jno
adc
in
mov
adc
ret
in
jno
cmp
mov
jmp
stos
pop
fidivl
sbb
rcrl
lcall
dec
mov
outsl
cmp
cmp
mov
cwtl
dec
cmp
and
xchg
andl
jp,pt
pop
fdivrs
or
dec
pusha
std
fcmovnu
mov
stc
in
jne
hlt
jmp
lds
shll
mov
inc
in
mov
les
daa
add
mov
insb
add
xchg
mov
ja
xchg
aas
push
cwtl
test
fcompl
lret
clc
jno
ja
or
and
mov
mov
xor
shr
lcall
mov
mov
out
mov
cmp
in
jne
in
and
push
adc
push
mov
jge
arpl
mov
shlb
pop
inc
dec
orb
xchg
sbb
mov
jmp
pop
or
insl
vcvtsd2si
test
out
lock
mov
push
leave
ret
les
leave
push
imul
icebp
push
add
lcall
movsb
push
adc
fistpll
dec
jno
mulb
mov
arpl
in
inc
scas
cmpsb
inc
mov
int3
aam
ficomps
ds
shll
stos
push
mov
adc
jl
cli
jle
rcrl
dec
pop
es
jmp
mov
inc
xchg
mov
mov
insl
push
inc
mov
xchg
dec
daa
outsb
xchg
or
hlt
pop
lds
xchg
lods
push
jno
fdivp
jo
sub
shl
dec
pop
fistps
cmp
jmp
sbbw
pop
sub
mov
sbbl
outsb
inc
out
lea
mov
scas
test
xchg
pop
jmp
push
adc
inc
das
out
cltd
pop
divl
inc
in
sbb
add
gs
adc
adc
sbb
push
call
xchg
aaa
aaa
xchg
and
xchg
cmp
fdivrs
pusha
pop
loope
ljmp
push
xchg
xlat
ljmp
aaa
xchg
push
cmpsb
pop
ret
sbb
mov
adc
sbbb
xchg
push
cmpsl
adc
imul
mov
xor
loopne
or
mov
push
adc
adc
inc
cmpsl
sarl
orl
push
xchg
rclb
jp
pop
inc
dec
repz
out
pusha
aaa
cwtl
outsb
popa
shl
enter
movsb
outsl
ret
loopne
rcll
aas
shrb
jg
mov
clc
or
rcr
mov
pop
push
arpl
push
mov
and
cmc
cmpsl
inc
test
in
sub
test
call
and
cmp
mov
ljmp
mov
pop
call
mov
int
lret
daa
mov
leave
cli
xor
adc
cmc
xor
lcall
test
sub
test
sub
sar
xor
cs
push
pavgb
push
adc
fisubrl
fcomps
mov
aam
out
inc
inc
std
bound
cs
out
mov
mov
lods
lret
xor
aas
and
cmp
mov
in
movsl
push
std
adc
sbb
popa
dec
dec
jb
push
test
mov
hlt
jp
pop
ret
repnz
in
int
inc
dec
dec
leave
ret
cmp
leave
nop
cmpsb
mov
ficompl
adc
push
sbb
out
lods
mov
movsl
loope
xchg
std
add
and
jl
inc
sbbb
jge
jns
jg
icebp
xchg
push
movsb
xor
lods
outsb
pop
rorl
jg
jmp
cmpsl
push
xor
inc
inc
into
adc
lods
sub
jg
and
fildll
repnz
lret
push
stc
lcall
mov
fucomip
add
add
adc
fdivl
imul
imul
inc
mulb
cmp
add
xchg
adc
icebp
sti
inc
lcall
fadd
xchg
xchg
mov
sub
mov
fisubl
cmp
dec
out
xor
adc
addb
sub
out
loop
lods
pushf
xor
dec
adc
push
ss
or
or
xor
enter
mov
adc
outsl
jbe
push
pop
pop
movsb
push
hlt
mov
push
pop
iret
decl
add
aad
xor
cs
or
test
int3
fs
rorb
mov
jecxz
out
enter
loop
and
pop
cmp
dec
dec
jmp
lret
es
add
adc
jle
mov
lcall
mov
push
or
jno
jbe
ljmp
mov
test
or
cmpb
adc
adc
js
inc
orl
stos
fwait
mov
pop
add
dec
imul
push
cmpsl
xchg
pop
fwait
pop
inc
mov
cltd
cltd
hlt
std
int3
xchg
imul
out
fsubl
rclb
insb
and
mov
xchg
jne
out
jle
imul
lods
pop
sub
data16
cmpsb
sbb
dec
bswap
jbe
xor
add
rcrl
addr16
sbb
jae
bound
ret
imul
sbb
jo
bnd
clc
sbb
mov
xchg
sbb
out
lahf
add
cli
cs
ljmp
loope
inc
pop
mov
cmp
int
dec
cmp
jo
pop
jg
jae
xlat
lcall
mov
in
movsb
push
daa
into
mov
ja
jle
aaa
fs
mov
or
mov
mov
jg
jmp
adc
xor
adc
mov
call
scas
push
cmp
cwtl
adcl
arpl
in
push
leave
add
call
imul
pop
or
mov
jae
jb
inc
add
cmpsb
lea
mov
nop
jle
cs
aaa
pop
cltd
dec
mov
clc
test
dec
jb
sub
or
and
mov
or
imul
and
push
pop
xchg
div
arpl
cmp
js
mov
in
pushf
mov
or
cli
lret
lret
sahf
lock
icebp
lcall
and
push
sbbl
shrb
out
shll
sub
sub
in
popa
repnz
rclb
in
in
adc
add
jns
xchg
aas
push
sahf
shlb
adc
leave
insl
jns
push
fadd
scas
test
popf
shrl
out
sbb
in
push
loopne
add
imul
mov
movsb
shll
iret
sbb
mov
std
and
addr16
popf
cli
and
aam
lret
add
cmpsl
ss
addr16
outsb
mov
mov
xchg
or
pop
lock
outsb
imul
or
shlb
pop
mov
jns
xor
adc
cs
push
inc
not
pop
pop
sub
cmp
pop
sbb
sbb
mov
pop
int3
pop
and
xchg
adc
lea
js
inc
push
sbb
and
add
mov
xchg
inc
add
jae
ret
ss
dec
mov
mov
fldlg2
jmp
pusha
jle
mov
rclb
adc
xchg
pop
push
fstpt
mov
in
ja
push
jecxz
scas
je
cmpsl
jb
js
inc
mov
flds
sbb
xor
aas
fwait
pop
dec
aaa
xlat
loope
mov
mov
iret
cltd
mov
xor
fnstsw
pop
xchg
bound
xchg
pushf
icebp
js
pop
cld
int
jge
pusha
push
mov
mov
inc
in
mov
ja
xor
mov
mov
jecxz
cmp
add
jno
and
popa
jb
fs
sub
or
adc
dec
loopne
shrl
adc
push
ljmp
xor
sbb
mov
pop
dec
xchg
std
imul
hlt
jl
lock
faddl
fwait
les
cmp
jbe
cmp
push
repnz
test
arpl
mov
idivl
aam
jp
jle
bound
ja
mov
pusha
pop
dec
cs
adc
jno
sub
sub
mov
lahf
leave
testb
push
iret
pop
sbb
and
repnz
cltd
xorl
lret
int3
jg
fcmovnb
fstpt
xor
add
je
out
cmc
inc
xchg
pop
pop
mov
fnstenv
scas
pop
dec
lods
insl
insl
cmp
insb
jb
jbe
imul
gs
mov
mov
dec
push
nop
mov
popa
lahf
add
xchg
lds
inc
jmp
subb
add
push
test
jae
enter
cmp
sub
jmp
dec
push
xchg
icebp
cmp
cmp
call
adc
push
cmp
repnz
testb
das
scas
cs
dec
shll
adc
movsl
ret
int3
dec
popa
in
push
imul
add
and
mov
mov
icebp
loop
mov
lahf
cmc
repz
std
cmp
xchg
fidivrl
scas
es
fcmovnb
pop
sbb
cmp
push
movsb
mov
cmp
adc
jge
pop
in
call
xchg
xchg
sub
xlat
movl
imul
mov
pop
mov
movsl
pop
push
sbb
and
insb
in
xor
mov
repnz
xchg
addr16
imul
daa
xchg
sbb
adc
xchg
xor
jbe
int
sub
pushf
aaa
jns
rol
out
loopne
pushf
xor
adc
push
cs
mov
and
add
xchg
adc
inc
rolb
xlat
xchg
mul
mov
movsb
xor
adc
pop
and
repz
push
mov
cld
push
or
pop
lret
sbb
mov
jnp
fnstcw
adc
inc
inc
icebp
les
lahf
jmp
mov
andl
icebp
cmp
popf
sti
ljmp
push
adc
inc
adc
push
test
or
mov
push
pop
dec
add
ds
cmpsl
int
pop
fdivs
aaa
cmp
inc
dec
inc
and
shlb
fbstp
jmp
repnz
dec
loope
sahf
mov
sub
mov
mov
pop
mov
mov
int3
out
out
clc
or
dec
shrb
mov
inc
ret
jo
xchg
test
iret
jo
and
push
sbb
cld
out
clc
scas
aas
cmp
add
xchg
iret
call
sahf
outsb
hlt
in
jmp
les
push
addb
out
cmp
adc
push
aas
adc
jns
std
lods
and
xorl
fs
les
outsb
mov
adc
pop
les
sub
call
repz
test
loopne
pop
mov
inc
cmp
lcall
sub
cmp
scas
test
inc
shlb
fs
and
jae
dec
or
frstor
push
or
fcompl
mov
dec
cmp
inc
fbstp
iret
iret
int3
dec
ss
cltd
or
jle
outsb
or
aam
add
sbb
mov
pushf
jbe
mov
dec
pop
pop
jo
dec
fistl
push
stos
push
repz
cmp
lock
gs
cmp
sub
cmp
fcmovbe
sub
rol
out
mov
pop
pusha
mov
dec
vmread
pop
sarb
cmp
repnz
aas
fs
fiaddl
mov
adc
pop
int3
inc
aaa
pop
mov
xor
out
jno
cmc
mov
les
push
adc
xchg
ljmp
and
jg
mov
xchg
jg
dec
cmpsl
jns
xchg
outsl
repz
jne
xor
data16
xor
mov
test
mov
lret
push
shrb
orb
leave
sub
ret
dec
ja
cmpsl
daa
adc
out
push
rorl
xchg
lds
and
mov
movb
add
test
push
jo
mov
lahf
loope
jl
xor
mov
mov
push
inc
and
xchg
scas
pop
iret
cmpsb
pop
jmp
and
out
mov
push
ss
ss
pop
sub
scas
add
imul
stos
daa
and
push
insl
xor
repnz
rcrb
xchg
lock
ljmp
mov
mov
or
ljmp
testl
fwait
xchg
mov
ja
test
and
loopne
jp
xor
loopne
popa
sbb
dec
xchg
pop
push
mov
bound
das
insl
xchg
dec
pop
shlb
mov
enter
sbb
xchg
mov
xchg
in
sbb
loope
shrb
push
andb
cmpsb
push
pop
mov
jle
mov
jns
inc
dec
and
push
add
jns
lea
int
cmp
es
or
aad
mov
jne
nop
adc
aad
inc
and
adc
in
pop
xchg
xchg
sbb
xor
and
inc
add
add
js
in
jecxz
add
in
fcos
xchg
mov
adc
mov
pop
les
out
cmp
or
xchg
sbb
xchg
jecxz
sbb
sub
adc
jmp
pop
popl
adc
sbb
mov
enter
xchg
xchg
xor
loop
movsb
inc
and
mov
cmp
mov
add
inc
lods
mov
xchg
movsb
lds
in
push
push
ds
hlt
xor
pop
arpl
xor
sub
and
mov
inc
mov
and
jmp
scas
xor
dec
ja
and
jne
xchg
xchg
es
mov
sub
pop
lahf
cld
mov
imul
sub
clc
aaa
xor
int
je
or
cmp
cmc
mov
test
add
lret
add
push
hlt
rolb
or
or
and
or
addr16
movaps
sub
popl
inc
shlb
cmpsb
testb
jge
jl
imul
mov
insb
test
imul
loopne
pop
ret
xchg
sbb
into
mov
leave
in
mov
out
mov
push
add
mov
inc
arpl
dec
mov
std
push
xor
xor
mov
sub
push
sub
lea
mov
jae
inc
sbb
jns
ror
dec
xchg
or
arpl
movl
cmp
pop
sti
xor
insb
jne
or
dec
mov
data16
mov
test
gs
mov
out
sti
cmpsb
jnp
and
pop
fisubs
in
push
xlat
jnp
inc
mov
dec
pop
push
daa
lea
dec
sbb
lar
lods
std
hlt
mov
and
sub
xor
lcall
pop
mov
loope
mov
std
xchg
cld
pop
inc
test
rclb
jecxz
popf
adc
sub
enter
dec
pop
adc
addb
cltd
jne
sbb
pop
push
cmp
cmc
jecxz
xchg
ror
push
xor
int3
aam
xchg
push
imul
data16
test
fisubs
xor
dec
sub
js
cli
jl
adc
pop
mov
loopne
jge
mov
cs
fs
leave
dec
mov
jle
lock
push
mov
cmpsb
je
cld
enter
in
rcl
hlt
xchg
inc
pop
fnstcw
inc
push
or
mov
pop
xor
inc
mov
dec
adc
leave
stc
cmpsb
mov
add
or
sbb
aam
sahf
sub
xlat
pop
sbb
scas
sbb
push
leave
notl
xor
notb
loope
xchg
lods
adc
aad
dec
ret
imulb
daa
ror
push
adc
xchg
test
mov
je
xor
out
mov
into
push
cld
pushf
ljmp
jle
jg
pause
add
xor
cmc
insb
adcl
sti
incb
jb
add
cmc
xchg
mov
ss
pusha
shr
lret
jb
int3
push
xlat
jmp
xchg
pop
js
call
add
in
ret
jbe
jae
push
jge
imul
push
movsl
in
mov
shl
sbb
sbb
div
sti
das
mov
stos
popa
notb
jl
daa
mov
les
mov
testl
mov
cmpsl
jge
pop
sub
pop
sub
mov
xchg
adc
sbb
cld
movsl
add
addr16
scas
mov
dec
mov
mov
push
adc
fwait
push
movsl
insl
mov
int
xor
pop
jp
sbb
outsb
mov
les
xchg
and
inc
rep
inc
and
cwtl
in
cmpsb
xlat
loop
out
xchg
popa
mov
rcrb
repnz
fistpl
jle
hlt
mov
nop
jl
or
jnp
andb
mov
pop
dec
jmp
into
cmp
cmc
repz
xchg
pusha
notb
mov
scas
and
push
jbe
jbe
into
mov
xor
push
rolb
inc
sub
nop
sub
sub
and
push
ds
pop
daa
les
xor
pop
aaa
mov
sub
lods
mov
adc
cwtl
into
jecxz
clc
inc
inc
push
movsb
in
es
cmp
sbb
shlb
movsb
mov
test
bound
pop
mov
add
loope
pop
mov
sar
adc
push
jp
push
pop
mov
jns
adc
xor
les
ret
cmc
scas
mov
stos
mov
jl
add
xchg
insb
mov
push
pop
mov
mov
adc
push
fmul
pop
sahf
shlb
test
bound
out
jle
push
daa
jae
adc
pminsw
test
nop
sbb
gs
jle
xchg
sar
in
ds
test
push
inc
mov
aaa
xchg
push
cmp
gs
bound
cmp
push
in
cmpsl
jle
insb
insb
add
push
jge
xor
lret
push
decb
mov
mov
enter
fbstp
shl
imul
cmc
sub
xor
jae
jbe
adc
push
xchg
insb
push
dec
idiv
pop
rcr
or
jecxz
imul
cmpsb
into
or
mov
das
and
dec
xor
push
mov
mov
sub
movsl
pop
pop
push
ja
cld
ds
jne
pusha
mov
fidivl
out
ds
test
xlat
scas
pop
mov
ror
out
inc
sub
sbb
stos
and
mov
stc
jns,pt
xchg
mov
std
cmp
and
jns
push
jmp
xlat
ret
add
cmp
push
inc
sbb
stos
ljmp
jno
pushf
mov
inc
push
gs
lcall
into
daa
xor
negb
add
fsubs
lea
mov
fldenv
fists
addr16
pop
xchg
lret
cmp
test
push
and
pop
into
adc
lea
xchg
push
or
jbe
mov
sub
mov
insb
cs
push
jge
out
mov
or
cmp
insl
pop
aas
popa
enter
pop
mov
imul
and
push
push
scas
mov
fcompl
icebp
jge
out
sub
aas
and
pop
mov
push
mov
pop
lret
inc
lock
scas
mov
fwait
das
jne
mov
outsl
cmc
jmp
mov
inc
xchg
adc
ret
fstps
jbe
cmp
leave
xchg
jns
and
sub
cmp
les
pop
cmpsl
rolb
or
sub
or
mov
sarl
mov
icebp
imul
or
mov
out
mov
outsb
jnp
js
pop
or
xchg
mov
lods
inc
sub
cmc
lret
and
aaa
aad
dec
jne
lea
test
xor
xor
jp
pop
add
insb
rclb
jl
stc
jnp
sub
icebp
movsl
jecxz
dec
sbb
loop
pop
adc
jae
xor
cmp
cmpsb
out
jne
inc
aas
pop
add
repz
out
xlat
xor
dec
ror
ljmp
das
xchg
xor
in
imul
dec
cwtl
aaa
fistpll
repz
mov
push
dec
cltd
lret
dec
and
jnp
mov
les
jp
and
jae
sbb
jecxz
lods
sahf
sbb
fldcw
mov
pop
adc
pop
lret
cmpsl
mov
cli
es
in
and
xor
aas
lds
pop
dec
xchg
ds
rcrl
sbb
sbb
and
mov
fldt
cmp
scas
loopne
xor
mov
jge
nop
mov
cmp
mov
xor
xchg
mov
or
jne
scas
and
out
jmp
inc
xchg
daa
cmpb
loop
xlat
fsubl
enter
int
fdiv
xor
dec
sub
aam
or
pop
test
push
popa
das
mov
jg
movsl
or
mov
push
cmp
mov
aas
test
add
loope
shlb
dec
mov
adc
out
sub
in
jecxz
cmp
cs
mov
or
lds
das
xchg
xor
adc
xor
sbb
lret
popf
pusha
xor
movsl
jg
dec
and
je
ss
dec
das
fcomp
out
cmpsb
dec
test
cs
add
shr
imul
adc
rcll
call
rcrb
lods
or
mov
sub
insl
out
jbe
addr16
jmp
push
nop
loope
push
rolb
xchg
xorps
xorb
lahf
jl
dec
cmp
icebp
inc
in
aam
outsl
aam
jnp
jo
movsb
in
in
pop
mov
cli
fwait
nop
xor
cs
mov
jns
push
sbb
cmp
clc
dec
lds
shlb
nop
add
dec
popl
add
test
lock
mov
pusha
jo
jg
mov
fldenv
aam
mov
push
ret
push
out
lods
xchg
jge
or
out
fwait
roll
nop
icebp
pop
add
cwtl
in
and
or
sarl
cltd
and
lret
cmp
dec
cmp
fists
mov
rorb
cwtl
rorl
nop
cmp
push
mov
lret
push
out
mov
or
fnstsw
stos
std
push
decb
cli
jnp,pn
sub
testl
dec
inc
push
sbb
pop
mov
sub
mov
mov
sahf
mov
adcb
mov
xchg
mov
pop
into
andl
add
cmpsb
push
adc
push
dec
jg
xor
cmp
push
xor
inc
jns
pushl
adc
pop
clc
stos
ds
enter
pop
ret
lods
movsb
jge
fsubrl
jno
and
gs
jno
std
push
fwait
out
xor
neg
fwait
xor
shll
xchg
jb
rolb
stc
out
inc
std
cltd
mov
mov
scas
sbb
movsl
push
arpl
arpl
sbb
cmpb
pop
sbb
mov
repz
or
cmp
out
push
icebp
pop
sub
enter
repz
sub
movsb
dec
out
clc
aad
sti
ss
cld
mov
mov
imul
faddl
movsl
push
or
xchg
and
cmp
xor
int
sbb
push
loope
shr
mov
sbb
sub
jle
add
divb
add
pop
xchg
decb
enter
jbe
adc
pop
push
sub
sti
dec
rclb
scas
pop
stos
mov
jmp
xrelease
sub
cmc
inc
idivb
mov
xor
pop
pop
pusha
mov
or
pop
ljmp
push
adc
insb
pop
push
xchg
pop
inc
dec
cmp
stc
int3
not
mov
mov
jns
loope
mov
in
pop
sbbl
cld
or
dec
or
ficomps
mov
arpl
iret
and
out
movsl
loopne
inc
or
jno
fistpll
cmc
push
imulb
in
in
shll
xchg
sub
dec
je
push
out
mov
push
outsb
xor
cmpsl
cmpl
stos
stos
dec
pop
loope
sub
iret
aam
int3
mov
stc
inc
jge
mov
lret
imull
insl
std
add
push
xchg
pushf
mov
repnz
mov
ja
push
data16
outsl
cmp
aad
push
mov
mov
xor
into
push
xor
cmp
cld
or
inc
cmpsl
shr
lahf
pop
adc
add
mov
mov
fistpl
jne
and
icebp
push
jecxz
inc
pop
and
leave
push
push
mov
cltd
mov
push
cmpb
cmc
leave
xchg
sbb
jge
ret
aas
ret
inc
push
add
shlb
xchg
or
cwtl
clc
lock
add
jne
sbb
xor
aam
push
arpl
sar
rcrl
inc
in
adc
jns
mov
add
xor
es
mov
int
loopne
add
or
insl
push
jnp
and
push
jo
cmp
rcrb
into
test
adc
rorl
or
xchg
dec
ret
push
cmp
or
lret
lods
xchg
adc
sti
adc
jns
push
lret
js
xchg
inc
jle
cmpsb
sbb
mov
daa
into
mov
mov
rcll
incl
fsts
mov
jl
pop
adc
xchg
int
lods
jno
arpl
test
loopne
mov
mov
inc
add
lret
add
cmp
add
mov
aam
jge
adc
ret
mov
lret
mov
lahf
repnz
stos
aad
mov
mov
fsubrl
int3
and
xchg
push
xchg
ljmp
dec
sahf
out
push
add
addr16
loop
jnp
pop
cmpsb
dec
push
filds
ja
jecxz
ds
ss
roll
mov
mulps
fnstenv
rclb
mul
dec
jg
xchg
dec
rclb
sbb
mov
adc
dec
adc
dec
adc
sub
push
out
mov
xor
mov
outsl
ja
pop
pop
sbb
fimuls
andl
push
jecxz
rclb
pop
mov
popf
jg
in
jnp
xor
lret
mov
sbb
cmp
sahf
ljmp
ljmp
mov
cld
pop
insb
cltd
mov
pop
loope
aam
jmp
xor
and
sbb
andl
jno
imul
lahf
jae
jno
icebp
and
popa
sub
cmpl
mov
into
mov
ljmpw
mov
test
stos
cld
fsubl
je
imul
mov
fsubp
inc
push
andb
jnp
ret
cmpl
rcr
pop
outsb
or
dec
adc
repz
mov
imul
or
dec
mov
pop
add
sbb
push
mov
inc
xchg
movsb
sbb
adc
or
cmp
lcall
clc
lds
xchg
jae
mov
data16
scas
imull
lcall
or
shl
lock
das
cli
cmp
xchg
shrl
xor
jecxz
sbb
add
test
cmp
das
push
bound
mov
pop
pop
add
inc
adc
inc
iret
dec
and
adc
aam
cld
jae
sbb
pop
xchg
stc
inc
pop
mov
mov
addr16
sub
jnp
lahf
add
mov
or
mov
mov
xchg
pop
and
stc
adc
mov
fistpll
setae
fisubrl
fs
cmpsb
add
cmp
push
cld
lock
mov
inc
dec
mov
jecxz
jnp
fs
in
dec
fildl
xchg
mov
bound
div
pop
cmp
outsl
movl
jne
test
rcrb
jmp
push
mov
andl
add
loopne
cmp
insl
inc
push
cmp
das
nop
cmp
fstpl
sub
mov
push
ret
iret
cmpb
pop
es
dec
dec
leave
push
sub
inc
push
push
sbb
leave
rolb
adc
cli
push
cmc
inc
pop
jns
test
sub
xor
jns
mov
push
or
xchg
mov
movsl
addr16
stos
ror
add
push
rol
cmp
orb
out
inc
stos
or
addr16
push
cltd
pop
mov
andl
mov
insb
cmc
xchg
gs
repnz
mov
mov
mov
mov
lods
pop
push
enter
aaa
push
pop
pusha
lret
ror
mov
in
xchg
les
sbb
add
jmp
adc
leave
insb
add
int3
ja
fistps
popa
mov
push
aam
fnstcw
scas
xchg
add
adc
mov
sub
ret
mov
addl
mov
jp
xchg
ret
int
jb
icebp
sahf
loope
adc
jo
imul
lods
push
and
pop
jmp
icebp
leave
inc
jl
fldln2
cmp
loopne
out
mov
mov
xchg
mov
rorb
test
adc
mov
ffree
insl
outsl
inc
leave
addr16
addr16
ljmp
sbb
cld
push
jne
clc
inc
aam
fbld
inc
lock
fstpl
push
hlt
out
mov
outsb
push
and
stc
pusha
stc
dec
loope
sbb
adcb
rcl
mov
mov
fistps
mov
test
ljmp
aam
into
adc
test
fisubrs
add
fsubs
sbb
adc
mov
outsb
push
and
fwait
cmp
and
mov
jmp
adc
and
push
cld
lock
cld
out
push
pop
cmpsb
pop
xlat
sbb
mov
repnz
repz
jno
repnz
inc
xor
mov
or
mov
sub
push
adc
movb
xchg
inc
xor
sbb
sub
dec
lock
inc
ljmp
cmpsb
lret
and
mov
cwtl
adcl
sahf
ds
mov
xchg
xchg
hlt
or
or
js
sti
xchg
insb
das
loope
rorb
jnp
push
ja
or
imul
mov
and
into
out
lock
push
push
fidivrs
cmc
adc
ret
push
or
fsubl
mov
dec
cmpsb
sbb
icebp
out
ds
rolb
aam
je
aaa
mov
fstp
xchg
pop
jbe
pop
mov
mov
fwait
setp
cmpsl
and
sahf
jl
sub
movsb
fidivs
loopne
inc
xor
and
filds
push
scas
daa
sub
xchg
cs
das
adc
lahf
xlat
dec
inc
icebp
bnd
hlt
lock
xchg
loopne
stc
lods
dec
inc
pusha
or
push
test
adc
inc
daa
dec
cmp
adc
ja
fcomps
cmp
pop
sub
enter
push
mov
mov
xchg
dec
popl
loop
roll
fcomps
lock
sub
mov
xor
sti
popa
sbb
fisttpl
inc
stc
cwtl
mov
fistpl
lds
fisttpl
jecxz
lods
stos
lcall
negl
jbe
jae
ret
out
jo
mov
sub
and
fndisi(8087
mov
sbb
pop
cmpsb
and
add
jbe
sub
xchg
adc
pop
repnz
push
icebp
mov
fsubrp
cltd
push
mov
push
loopne
insb
sub
mov
out
stc
out
loop
loop
mov
and
jecxz
shlb
cmp
mov
cmp
jl
movsl
test
sub
jns
pop
out
fisttps
adc
dec
and
lds
aad
in
and
xchg
addl
or
les
testb
cltd
or
inc
jge
adc
and
testl
addr16
adc
sbb
pop
fldenv
adc
push
xor
mov
add
lods
cmp
insl
sar
repnz
fildl
lret
in
mov
jge
push
add
pop
mov
sub
adc
imul
dec
lds
mov
lcall
xchg
xor
push
inc
cltd
push
int3
stos
movsl
sbb
mov
lock
mov
jnp
lock
push
mov
mov
push
push
and
sbb
mov
cld
mov
test
into
xlat
fs
xchg
sahf
pop
lock
cmp
xlat
mov
div
or
aaa
mov
fsubrl
dec
cmp
sahf
push
cmp
mov
mov
and
clc
dec
sub
and
inc
adc
mov
in
mov
pop
add
adcb
stos
adcb
and
dec
int3
push
adc
jecxz
sub
addl
or
daa
adc
aad
or
mov
jno
xorb
xchg
decl
add
and
cmp
pushf
das
lock
imul
rcll
inc
cmp
sbb
xor
mov
push
push
mov
mov
scas
xor
dec
insb
insl
repz
cld
cmpsl
pop
push
imul
mov
shlb
loope
cmpsb
pop
mov
pop
out
xchg
jb
inc
inc
mov
xchg
xchg
add
or
jecxz
cmp
sbb
jno
xlat
shlb
ss
push
sahf
cmp
and
or
arpl
mull
mov
stos
fsin
cwtl
fwait
cmp
xchg
rorl
jne
sbb
stc
xchg
pop
stc
nop
push
mov
xchg
lret
xor
pop
fidivl
data16
push
jo
mov
shrb
inc
adc
stos
out
xchg
pop
xor
xor
add
cmp
mov
popa
cwtl
popf
xchg
hlt
mov
rcl
pop
pop
dec
cltd
jae
mov
in
arpl
add
pop
test
stos
adc
out
dec
mov
lahf
shrb
dec
pushf
subl
xchg
lcall
adc
dec
lods
call
inc
je
lcall
sti
mov
fs
inc
iret
jbe
ret
jo
jge
jne
mov
jb
cltd
inc
shlb
mov
das
push
stos
jp
jbe
gs
dec
xchg
sbb
and
insb
into
mov
or
and
and
push
xor
in
fcomp
pop
add
mov
pop
mov
in
dec
sub
cli
sti
jge
inc
push
call
shll
mov
not
cltd
and
ss
dec
movq
adc
sbb
sbb
adc
push
icebp
idiv
sub
add
popf
popa
jb
mov
mov
push
shl
adc
pushf
inc
mov
inc
aad
jnp
sub
shlb
iret
mov
out
sar
add
test
out
pushf
jg
repnz
sbb
lahf
mov
cmp
jmp
es
xlat
test
push
adc
imul
jecxz
add
ffreep
lods
xchg
add
sub
ret
in
scas
js
movsl
add
out
lods
and
outsb
adc
push
jmp
dec
cli
lock
dec
adc
int3
pop
push
sbb
repnz
stos
jb
outsl
sub
lret
push
cmc
cmp
dec
inc
dec
xchg
pop
es
and
test
mov
or
loop
and
pop
jae
or
mov
mov
ljmp
or
pop
or
mov
pusha
and
fidivrl
push
addr16
and
mov
mov
dec
mov
mov
cmp
and
sbb
stos
sbb
mov
jmp
pop
push
sbb
fwait
imul
cmp
fisubrl
cmpsl
mov
sub
mov
xorl
cwtl
and
movsb
test
out
sub
loop
xchg
mov
jl
jae
mov
xchg
cmpsl
xchg
lret
jns
dec
dec
and
sahf
orl
push
add
adc
addb
push
testl
push
inc
stc
loop
jge
stc
mov
jecxz
es
and
lock
sbb
ret
imul
pop
adc
shll
push
dec
pop
imul
and
jae
xor
jg
aaa
ss
adc
jp
mov
daa
xor
cltd
loopne
nop
rcll
and
aas
out
ja
out
mov
push
pusha
cmp
jns
pop
out
dec
bound
popf
push
shrb
test
inc
dec
xchg
push
imul
ja
inc
imul
or
cli
rcll
out
fwait
adc
out
add
lcall
in
inc
fs
dec
sahf
dec
pop
mov
push
and
xchg
in
in
jp
mov
mov
push
loop
int
jge
out
or
jge
loope
dec
push
mov
pop
loope
dec
push
loopne
cwtl
xor
jecxz
inc
pop
pop
pushf
scas
xchg
sub
test
mov
ret
sub
mov
jae
test
insl
test
push
xchg
hlt
mov
inc
rol
aas
lahf
adc
cwtl
cltd
fmuls
and
mov
push
xchg
dec
lcall
into
dec
sub
fsts
test
push
aam
add
cmp
xor
in
mov
push
mov
subl
jne
add
xor
es
cmp
dec
sti
iret
arpl
mov
xchg
jecxz
sbb
xchg
inc
ss
mov
push
and
jmp
insb
jg
repnz
inc
mov
jecxz
push
addb
pop
jle
xchg
xlat
es
inc
pop
aaa
fdiv
jne
adcb
xchg
and
addl
pop
or
jae
push
pop
jge
dec
mov
mov
dec
lods
cmp
or
negl
jne
inc
clc
push
test
add
mov
and
lahf
push
jmp
push
arpl
rorl
pop
es
mov
and
or
cs
mov
push
fwait
mov
clc
cwtl
jo
pop
dec
push
out
cmp
ret
movsl
sbb
stc
ret
sub
add
into
adc
sarl
jns
ret
mov
mov
dec
jle
adc
ficomps
lahf
inc
push
add
jl
jbe
jl
jno
mov
mov
out
pop
jns
pop
outsb
ljmp
push
push
inc
stos
gs
subl
inc
das
std
mov
pop
test
nop
cmp
dec
stc
loope
roll
xchg
push
dec
cli
fwait
icebp
mov
hlt
sub
cli
mov
ds
out
mov
mov
mov
loope
fbstp
pop
gs
scas
jg
sti
mov
pop
test
cmp
jp
pop
push
cmc
xor
daa
ret
xchg
push
out
sub
clc
mov
mov
aas
nop
dec
pop
lahf
or
inc
rolb
dec
push
add
add
push
xchg
inc
add
adc
sub
inc
test
mov
shlb
add
cwtl
in
xchg
jnp
mov
das
popa
mov
iret
ud2
push
xor
shll
pop
into
hlt
sub
dec
or
outsb
pop
aaa
xchg
outsl
es
lea
push
push
sub
mov
pop
push
xor
push
aas
rep
xor
adc
adc
mov
cmp
mov
icebp
jbe
pop
movsl
jno
out
mov
jb
inc
jl
repz
out
divb
push
or
pop
jl
sub
cmp
cld
add
int
cmp
out
ficomps
stos
dec
mov
pop
cmp
shlb
or
xchg
mov
jb
les
lahf
stc
scas
mov
mov
filds
lock
addb
adc
div
sti
push
shlb
int
cmp
dec
jns
xor
decl
inc
imul
fidivl
mov
push
mov
ja
mov
and
inc
jnp
pushf
clc
mov
jno
and
andb
mov
jae
jge
cmp
outsl
mov
push
push
xchg
mov
sub
jo
enter
repz
ja
leave
out
inc
cli
xor
xchg
jecxz
arpl
adc
mov
jge
sub
xchg
scas
sub
adc
jns
push
dec
mov
movsl
lock
int
orb
lret
xchg
mov
adc
in
sbb
push
mov
cltd
lret
inc
popa
inc
fstps
loop
mov
mov
and
in
test
or
mov
jo
mov
out
enter
push
and
lret
adc
lds
mov
rolb
xchg
out
add
inc
aad
jl
hlt
jb
out
push
inc
xor
je
insb
xlat
or
adcb
cli
or
imul
aas
hlt
and
mov
stc
out
xor
cmpb
and
jmp
inc
stc
adc
cmp
add
dec
lods
and
enter
in
sbb
mov
add
sarb
lret
sbb
loopne
mov
les
push
loop
movb
cmp
fmuls
fwait
mov
movhps
or
bound
in
inc
cmp
pop
add
sub
scas
mov
dec
cmp
mov
sbb
cmpsl
adc
jg
xor
mov
lods
int3
aas
adc
stos
jo
cmpsb
pop
push
lock
or
test
dec
movsw
add
jno
jmp
xchg
dec
cmp
ret
shr
cmp
aaa
dec
test
mov
pop
stos
and
enter
insl
clc
push
mov
sbb
or
xor
in
push
push
imul
lea
mov
cmpsb
adc
ror
push
dec
cmp
dec
jmp
sbb
cs
in
and
ss
inc
jp
imulb
push
and
imul
pop
jle
xor
dec
int3
xor
imul
jg
pusha
mov
push
xchg
daa
xor
je
ja
out
mov
mov
test
push
push
push
inc
imulb
push
xorl
mov
or
movsb
outsb
jne
lcall
inc
mov
imul
and
sub
push
mov
in
mov
xchg
xchg
xor
mov
jmp
je
adc
or
loope
inc
sahf
and
daa
fnstcw
shll
cmp
mov
lds
mov
shrb
add
outsl
arpl
leave
or
pop
adc
mov
cmp
cmc
test
mov
cmp
popa
xchg
inc
push
cmp
nop
or
pop
iret
notl
lods
icebp
in
mov
pop
mov
push
or
das
lea
pop
std
adc
pop
cwtl
xor
lret
mov
xchg
jmp
imul
addr16
sbb
aam
xchg
jl
cmc
jecxz
push
mov
fidivs
ljmp
popa
lahf
mov
jecxz
iret
int
clc
and
cmp
movsl
shrl
rcrl
xchg
call
or
mov
shlb
ja
inc
xchg
minps
pop
jg
inc
in
push
andb
gs
cli
dec
push
xchg
xabort
cmpsl
jo
inc
and
push
or
inc
xor
inc
dec
sti
data16
ljmp
jmp
xchg
mov
xor
push
xor
xor
add
fdivrl
lods
ljmp
and
pop
fiadds
std
cmp
ja
sub
loop
mov
test
int
ret
add
push
aas
jbe
ds
mov
clc
xchg
or
ret
mov
lret
cmpsl
pop
dec
push
clc
or
das
lock
rorb
sub
cmp
fmuls
out
jg
mov
add
sub
jg
sti
dec
in
pop
cmpsl
mov
rcr
lret
xchg
pushw
call
add
dec
push
mov
movsb
xlat
mov
pushf
aad
sbb
push
pop
out
enter
jns
cmpsb
add
add
scas
mov
rclb
push
mov
jle
stc
adc
fcmovu
dec
roll
fs
pop
ret
fisttpll
repz
andb
cmpb
xor
add
pop
loop
out
jmp
rcl
push
dec
std
mov
pop
mov
popa
lock
ret
rcl
ds
xor
xchg
lods
adc
ret
xchg
sbb
test
arpl
dec
push
cmp
cmp
test
sti
push
dec
jo
jmp
xchg
push
adc
popl
aam
mov
ror
inc
pop
push
cli
int3
outsl
push
pop
loop
aam
push
mov
dec
mov
inc
rol
add
jl
adc
or
lret
mov
xchg
dec
fsubs
int
popa
vphaddudq
mov
jnp
push
xchg
fiaddl
sub
stos
sbb
pop
cltd
mov
mov
ffreep
and
int3
movsl
mov
inc
scas
fwait
mov
loopne
xor
cmp
xchg
gs
inc
mov
lds
jmp
pop
data16
insb
jae
lods
adc
pusha
hlt
jno
or
or
dec
and
xchg
mov
je
dec
sbb
rclb
fldt
scas
icebp
sub
cli
xchg
jge
cmp
and
pusha
dec
insb
xor
jb
lds
xorb
in
shrb
mov
icebp
je
dec
and
das
cmp
inc
icebp
cli
leave
sub
pop
loope
xchg
decb
data16
sub
pop
ror
into
push
mov
popf
dec
lock
rorb
cmp
xchg
loope
divps
scas
push
xchg
je
in
cmp
lret
dec
adc
jno
mov
mov
pushf
je
inc
or
stc
ljmp
xchg
stos
or
addl
in
test
sahf
push
fsubrs
mov
outsl
dec
inc
ljmp
xor
sbb
stc
adc
inc
in
test
lcall
jne
call
pop
por
jae
xor
cmp
inc
fistps
adc
pusha
mov
cmp
jo
cmpsb
adc
hlt
cltd
int3
jae
aam
cmp
jb
add
adc
mov
dec
shll
mov
adcb
adc
cmp
loop
pop
loopne
adc
inc
cmpsl
adc
fdivl
das
inc
in
stc
sbb
sbb
aad
mov
in
or
inc
push
clc
cmp
std
push
jnp
out
push
mov
mov
pop
push
jmp
nop
in
jnp
scas
push
fisubl
clc
stos
fwait
cli
loop
pop
push
lods
ja
pop
scas
mov
arpl
inc
fwait
shr
mov
add
pusha
loopne
ja
mov
mov
pop
mov
cs
ljmp
movsb
popf
lahf
call
aaa
mov
dec
jle
pop
jb
sbb
or
xchg
and
lret
inc
ljmp
jp
or
pusha
movsl
ds
mov
shrb
sub
aam
fisttps
xchg
jne
dec
or
hlt
xor
pusha
out
je
setle
jge
mov
lock
sti
push
imul
pop
loopne
ja
sbb
cmc
inc
push
dec
jnp
cwtl
roll
cmc
js
push
add
add
loopne
nop
mov
jno
dec
jne
stos
imul
push
ret
js
adc
cmp
out
sbb
push
test
das
mov
imul
ficompl
jmp
ds
xchg
adc
rcrl
stos
sbb
popf
jae
mov
icebp
movsl
push
xchg
sub
mov
or
push
dec
push
mov
aad
cmp
shrb
inc
cmp
mov
aas
loope
jge
xchg
pop
push
adc
pop
inc
push
cmp
into
fdiv
xchg
xchg
mov
data16
dec
adc
ret
aaa
jnp
das
push
mov
movsl
mov
add
iret
addb
xchg
testl
test
jp
shrl
cmp
cmp
ss
inc
out
mov
sub
icebp
jns
lock
das
push
mov
or
fisubs
jp
mov
pushf
sub
xchg
push
cltd
or
sti
test
sub
or
aam
inc
popa
fwait
sarb
push
repz
xor
rcl
push
out
inc
inc
lds
xchg
lret
inc
pmaddwd
or
jmp
jnp
sti
orb
aad
push
push
shlb
add
lods
fists
inc
xchg
cmp
int3
sbb
imul
cmp
lea
inc
imull
scas
pop
or
adc
out
pop
jg
aad
cmp
adc
and
imul
mov
repnz
fcompl
pop
mov
iret
lcall
outsb
das
fnstenv
insb
xchg
add
sbb
mov
repnz
pop
adc
lods
or
test
stos
lods
ss
inc
cmp
sahf
fldenv
push
sbb
add
lret
mov
out
loop
adc
ds
test
or
insb
mov
iret
sti
push
inc
sub
outsb
sub
add
pop
mov
and
repz
dec
in
xchg
repnz
and
in
fcmovnb
ss
test
xor
add
and
add
xchg
neg
mov
loop
jo
scas
cmp
sti
push
inc
jne
leave
enter
push
or
xchg
pushf
xchg
inc
jb,pn
es
xchg
mov
jle
fbstp
inc
inc
in
xchg
bound
pop
sub
test
push
outsl
jns
dec
adc
mov
pop
jae
add
or
in
xor
push
add
leave
push
push
dec
stos
pusha
lea
les
and
inc
jp
outsb
jp
jecxz
test
mov
cld
mov
push
xchg
scas
cs
lds
mov
imul
or
push
into
add
lods
rorb
pop
xchg
adc
mov
cmpsb
in
aas
push
aaa
sbb
insl
ds
sbb
pop
test
jmp
ljmp
out
adc
cmpsb
or
cmp
loope
loopne
xchg
cmp
jp,pt
cmpsb
pop
fnstsw
inc
andl
jle
xor
adc
hlt
pop
ljmp
fidivl
sub
cmpsb
stos
mov
push
or
cli
xchg
dec
mov
lahf
ret
sub
mov
or
sti
pop
in
aas
and
aam
andl
mov
xor
sbb
cs
mov
push
js
add
rorl
push
out
or
icebp
test
xchg
push
clc
push
lcall
jmp
add
pop
cmp
mov
aas
or
mov
cmp
jbe
add
sub
pop
aad
add
jle
mov
push
push
xor
in
ss
in
xchg
pop
jecxz
psubb
sub
mov
sbb
inc
mov
cmp
dec
dec
jo
push
push
insb
fisttpl
xor
insb
std
sub
fwait
pop
xchg
lock
je
push
jge
bnd
inc
jae
pop
mov
jp
jnp
sbb
sbb
std
mov
jb
shl
dec
dec
xor
adcl
dec
out
sbb
pop
je
clc
gs
ljmp
inc
in
mov
inc
pop
ds
mov
push
jmp
popa
mov
adc
imul
mov
mov
mov
repnz
hlt
in
push
xor
repnz
or
lret
call
add
lret
std
pop
dec
gs
sbb
loopne
xlat
lret
ret
jo
test
fidivrs
jno
sbb
arpl
scas
mov
pop
jb
push
hlt
shll
jb
and
test
xor
stos
fnstenv
inc
and
lret
xchg
and
shrl
xchg
xor
add
shl
daa
jecxz
jbe
scas
xchg
ljmp
test
stos
and
mov
cmp
or
loop
scas
rcrl
jecxz
lock
das
xor
add
and
cli
jmp
sar
push
fyl2x
sub
add
mov
ja
xor
jmp
mov
fisubrl
outsl
pop
mov
lahf
enter
jne
rorl
std
shlb
imul
ds
scas
imul
pop
insb
inc
rcrl
mov
mov
shll
mov
hlt
mov
and
lods
add
mov
pop
or
std
adc
sbb
pop
test
add
push
fidivs
inc
inc
ja
pop
scas
js
mov
mov
add
add
sahf
dec
dec
aad
jae
pop
xchg
push
cli
fwait
orb
aaa
pop
je
mov
bound
sub
out
push
mov
inc
xor
punpckhbw
loopne
and
fmull
and
or
ds
ret
aas
leave
mov
cmp
sub
jae
mov
and
ss
sbb
shrl
pop
mov
imul
and
sub
xlat
fstpl
xchg
push
and
or
rcr
dec
popf
lahf
je
lods
mov
lds
in
imul
stos
inc
movsl
sub
cwtl
insb
rclb
subl
xor
repz
xchg
or
pop
mov
je
rorl
mov
ret
jge
pop
pop
mov
jle
in
repz
xor
ljmp
dec
test
adc
push
leave
ja
mov
add
movsl
aam
fisubl
mov
ds
data16
sub
sub
xchg
mov
inc
and
jle
jnp
jae
ror
js
mov
pop
mov
cmp
ret
out
xor
cmp
mov
decb
push
jecxz
gs
xchg
xchg
dec
fldln2
pusha
scas
mov
lods
sub
mov
adc
rolb
mov
push
jecxz
leave
or
aas
inc
cmp
insb
or
inc
pop
outsb
test
xor
dec
push
outsb
jl
dec
or
cli
and
call
cmp
dec
dec
mov
xchg
aaa
adc
fldt
jne
outsl
cmp
insb
push
or
pop
push
push
loop
lea
cwtl
pop
sub
dec
cmp
inc
aad
sub
pop
stc
leave
loop
ljmp
mov
xor
cmpb
sbb
daa
adcl
fcoms
pop
test
shlb
xor
test
mov
xchg
sub
ret
dec
fwait
clc
test
addr16
pushf
jg
add
scas
test
loopne
add
inc
cmpsl
jne
dec
sti
dec
or
inc
loopne
outsb
roll
xchg
mov
mov
and
inc
push
and
xchg
daa
pop
fldcw
iret
cltd
pop
lea
mov
cmp
mov
popa
lock
rcll
adc
adc
sahf
hlt
xor
cmp
aas
cs
and
xor
mov
fidivrl
lock
jle
jns
lret
outsl
and
movsl
rorl
mov
mov
je
sub
stos
dec
dec
call
aas
cmc
das
and
icebp
movsb
xlat
ja
mov
pop
arpl
lahf
pop
jae
xor
xchg
mov
push
imul
sarb
out
sbb
sub
movsl
mov
sub
fisubrs
xor
adcb
or
jg
lods
cmpb
lods
add
stos
mov
int
mov
mov
shlb
pusha
cmp
outsl
xchg
cwtl
aaa
jo
mov
xlat
mov
lahf
sahf
dec
leave
inc
push
cmpsb
dec
in
ror
cmp
or
xor
and
mov
ja
mov
clc
out
out
and
mov
das
xchg
orb
sbb
or
inc
inc
std
xor
ret
mov
aas
push
jecxz
cwtl
sbb
pop
loopne
sti
jle
or
mov
repnz
jl
ss
push
out
ja
pop
sbb
dec
xor
xlat
scas
mov
adc
enter
call
inc
adc
cmp
ret
dec
mov
aas
adc
mov
inc
add
fdivrs
cmp
push
xchg
flds
mov
and
sbb
jp
js
aas
or
insl
jge
out
out
sbbb
mov
in
or
push
mov
loop
outsb
rcll
cmpsl
sahf
stos
dec
or
jbe
fwait
mov
lock
xchg
ret
pop
jno
lea
repz
mov
sbb
lds
loop
and
je
sarb
incl
dec
sbb
pop
pushf
and
cltd
ret
js
lret
ljmp
dec
dec
pop
push
stos
dec
pop
ret
jmp
ljmp
inc
xor
fdivrp
fistl
mov
std
repz
test
outsb
mov
xchg
mov
test
cltd
or
sub
call
pop
mov
push
xchg
and
test
push
push
jp
dec
sbb
nop
jecxz
mov
xor
sub
adc
loopne
add
lret
in
stos
lcall
and
adc
fldenv
dec
push
vmovss
adc
cmc
sarl
fldcw
mov
lahf
fists
push
out
and
pop
jge
push
in
lods
out
pop
out
sbb
jle
imul
cmp
mov
mov
cli
test
rolb
jmp
jmp
pop
kmovw
es
movsl
mov
pop
aaa
push
icebp
jns
ficoms
inc
sbb
gs
jp
sbb
cltd
add
and
scas
or
int3
jmp
pop
jmp
cltd
sbb
lods
lds
fadd
lea
scas
dec
cmc
or
xor
add
or
arpl
movsl
lret
psraw
push
push
lock
push
cmpsl
adc
icebp
sbb
adc
sbb
push
mov
cs
xchg
adcl
jno
mov
push
or
lahf
push
sti
xor
or
pop
adc
and
subb
xchg
add
or
and
pop
sbb
xchg
cmp
sub
mov
mov
pop
mov
xor
sbb
lret
cmpl
sub
stos
xor
xchg
jmp
stos
mov
inc
stos
add
ret
add
jns
into
mov
jne
pop
mov
sub
pop
lcall
jns
imul
xor
push
out
xchg
jg
cmp
insb
inc
fcmove
inc
sbb
pop
dec
fisttps
cmp
clc
cmp
cmc
dec
cmp
xor
out
sti
insl
leave
mov
and
inc
cmp
lcall
or
dec
sub
shll
test
movsb
pop
sub
push
add
sbb
scas
and
sub
std
cld
mov
ljmp
jb
and
das
mul
sbb
mov
jne
enter
xor
hlt
push
adc
mov
push
adc
add
je
xchg
loop
jmp
sub
sub
mov
mov
arpl
cmpsl
cmp
aad
fs
adc
pushf
mov
andl
shlb
adc
mov
dec
inc
mov
popf
sbbb
inc
mov
xchg
aaa
in
pop
xor
popa
sub
push
mov
mov
jp
mov
mov
add
push
dec
and
call
and
xchg
test
call
jnp
and
sub
adc
inc
lahf
or
cmpsb
dec
out
ja
cmp
cmc
daa
movsl
pop
lret
jecxz
addr16
cmp
jl
aaa
adc
lret
jno
or
testl
out
adc
jecxz
aaa
add
mov
stc
lcall
inc
stos
jns
aas
fsubrs
or
sahf
icebp
dec
xchg
or
stos
repz
add
fwait
out
and
add
mov
pop
jb
xchg
or
fidivs
xchg
into
les
or
fs
gs
inc
push
xchg
das
rclb
adc
dec
pop
test
or
pop
add
cmp
sahf
aas
divl
lock
push
aad
pop
sbb
pop
mov
roll
sbbb
pop
jbe
pop
sbb
cmc
jb
rcrl
imulb
js
subl
ds
int3
int
ret
mov
mov
pop
sbb
dec
or
lods
pop
jl
scas
ja
sub
cmp
insb
insb
or
pop
addr16
mov
dec
add
lea
push
stc
lock
pusha
or
sub
repz
popf
mov
mov
jns
je
push
rcrb
add
jmp
pop
in
lcall
pushf
lock
push
and
outsl
arpl
inc
adc
pusha
lcall
xchg
mov
dec
add
mov
xchg
jb
enter
insb
lahf
ret
cmp
pop
jo
jle
js
or
xchg
scas
icebp
addb
mov
pop
aad
cmp
cli
fistpl
and
push
jnp
xor
jb
push
in
jge
xor
loope
mov
scas
jl
test
adcl
mov
cmp
inc
dec
lahf
cmp
cmpsl
in
mov
fdivr
loope
xor
iret
jno
ret
cmp
or
sub
jno
mov
movsb
dec
lret
xchg
jp
inc
jmp
jg
add
jge
mov
xor
adc
int
push
shlb
jg
in
div
ds
inc
add
xor
in
shll
lods
pop
mov
jg
jno
popa
jb
test
sbb
hlt
das
jo
or
cmp
test
test
lds
sub
call
lea
push
int
mov
clc
lahf
sbb
jne
lcall
loop
mov
rcl
adc
ljmp
pop
out
sti
fsubrs
and
xor
mov
les
cmp
xchg
push
xor
stos
or
int3
gs
add
pop
cmp
mov
jae
fwait
sbb
pop
ror
xor
xor
lret
std
ficoms
lret
jbe
fidivrl
pop
adc
jns
inc
shld
out
adc
call
pop
jne
xor
sub
movsl
push
jecxz
xlat
test
test
stc
adc
lods
mov
cmpsb
pop
rol
or
xorl
sbb
add
jecxz
sbb
sbbl
mov
sub
sbb
dec
jle
push
call
shrb
mov
mov
jp
in
mov
in
aad
imul
insl
mov
test
push
sbb
mov
mov
inc
and
jno
movsl
cmp
sbb
fstl
push
les
cmpsl
adc
pusha
out
fcmovb
movsl
adc
pop
and
fldt
mov
aas
push
push
icebp
popf
mov
jnp
cmp
icebp
out
push
push
inc
arpl
jno
test
and
mov
mov
pop
inc
int
mov
xchg
lret
leave
pop
scas
js
ds
mov
mov
or
imul
add
mov
lar
jno
jno
pop
xor
inc
ds
pop
add
int
xchg
dec
sbb
or
mov
adc
and
dec
mov
mov
inc
lcall
dec
cmp
cmp
and
cmpsl
xchg
or
stos
inc
out
int
sbb
or
inc
push
mov
insb
mov
and
mov
int
cmpsb
pop
mov
aam
lahf
or
push
xchg
sub
sbb
out
jne
inc
pop
cmpl
rolb
test
sbb
pop
or
dec
push
mov
faddl
add
lds
test
out
xchg
push
or
mull
pop
lods
jmp
lcall
es
shll
cs
push
into
dec
lods
push
mov
push
sarl
mov
mov
inc
movsl
dec
in
xchg
xor
es
clc
test
cmp
sub
sub
adc
test
adc
pop
js
or
clc
out
inc
push
jmp
rolb
xchg
xor
andl
push
cmp
inc
ss
dec
shlb
xor
ret
lds
sbb
int
mov
loop
jb
xchg
cs
pop
or
insl
xchg
xchg
popa
imul
data16
test
lods
mov
jo
repnz
cmp
aam
bound
insl
popf
sub
push
pop
adc
inc
mov
fcmovnu
hlt
jle
cld
aas
xor
jecxz
pop
aaa
inc
dec
movsl
pop
sbbl
in
sub
arpl
pop
dec
loope
sub
enter
gs
xchg
sub
cmp
xor
movsb
cmc
add
mov
rclb
shll
ret
push
dec
pop
rorl
gs
xorl
xchg
movsl
hlt
sub
and
loope
movq
add
cwtl
push
xor
inc
push
js
jnp
xor
cmp
push
inc
fwait
xor
and
sbb
push
push
decl
push
adc
xor
inc
cld
cltd
jge
xchg
push
roll
inc
sub
fwait
push
orl
ds
jl
movsb
leave
cmp
popa
sub
or
and
cmp
insl
out
push
iret
mov
shrl
sbb
and
imul
das
scas
adc
nop
adc
push
lock
int3
mov
adc
lahf
mov
jo
jne
loopne
push
jne
pop
push
pushf
xchg
fdivrl
mov
mov
add
mov
inc
rolb
push
int
cwtl
mov
mov
insl
orb
sub
cs
mov
push
push
lret
incb
aad
mov
mov
pop
lret
mov
das
mov
js
fwait
xor
rcl
aaa
into
mov
imul
push
sbb
adc
mov
xchg
pop
and
leave
into
sbb
mov
mov
dec
mov
icebp
inc
in
xlat
mov
and
xchg
jecxz
xor
test
out
pushf
insb
in
stos
ja
mov
repnz
and
pop
in
push
xor
xchg
xor
in
xchg
cs
xor
lret
in
lock
sahf
imul
cmp
push
or
mov
pusha
push
add
lods
xorb
roll
adcl
dec
out
pusha
or
dec
sbb
popa
mov
mov
xchg
aas
loope
dec
nop
adc
sub
xlat
cmpsl
cs
sub
je
test
into
fnstsw
sub
es
jmp
mov
aas
and
call
xor
out
mov
add
insb
das
mov
sub
pop
out
es
sbb
std
mov
mov
inc
mov
or
sarb
cmpsb
mov
xor
xchg
dec
pushf
fcmove
pop
inc
jno
jb
mov
out
dec
lret
pop
sub
lcall
loope
xchg
mov
out
push
stos
test
ljmp
fsubrl
inc
nopl
push
add
push
ret
dec
js
cmp
dec
popa
adc
push
adc
sarl
inc
pusha
lcall
cmpsb
xor
popf
cmpsl
xor
inc
push
or
mov
hlt
jecxz
fstl
std
gs
pop
mov
aaa
sub
jnp
test
cli
pop
jge
dec
mov
push
ss
adc
sub
lds
inc
int
insb
push
out
mov
xchg
dec
mov
xlat
push
dec
shll
sub
popf
fisubl
xor
add
notb
dec
dec
cmpb
jno
fsubrs
xchg
fimuls
jmp
add
push
xor
repz
mov
mov
push
mov
mov
aam
cld
sub
stc
sbbb
outsl
sub
sbb
pop
dec
nop
pop
sub
scas
fdivl
pop
mov
sbb
insl
sbb
fidivs
in
sti
pop
xor
leave
pop
add
pop
mov
pop
inc
xor
sahf
sub
cmp
add
jo
aaa
filds
mov
and
push
test
mov
xchg
xchg
ljmp
iret
mov
add
pop
dec
pop
sub
lods
dec
mov
cmp
imul
ja
clc
mov
jo
add
mov
fsts
sub
push
ret
icebp
jo
std
test
cmp
es
int
jecxz
or
push
imul
and
call
xchg
ds
sub
cmp
cmp
xlat
in
arpl
mov
lds
shl
jecxz
xor
repnz
adc
scas
or
sbb
insb
dec
fimuls
es
ljmp
adc
and
lret
dec
fs
cmp
mov
arpl
nop
add
inc
lock
xchg
adc
test
enter
shlb
repz
pop
inc
mov
or
or
add
adc
call
mov
cmp
push
clc
dec
movsb
sbb
xchg
int
outsl
out
sub
inc
mov
mov
aad
stos
add
stc
sub
xchg
sbb
fndisi(8087
arpl
cmpsb
ss
xchg
mov
jg
inc
pop
jle
popf
sub
and
lock
js
das
add
xor
mov
cld
mov
pop
ljmp
cli
mov
sub
hlt
outsl
idiv
lcall
incl
mov
lods
outsb
jl
roll
push
pop
cmp
jb
aaa
lcall
out
mov
mov
mov
jns
loope
xor
push
lock
clc
imul
outsb
sbb
test
inc
cld
pop
shrl
cmp
push
cmp
mov
ja
pop
push
nop
fisubrl
aas
ret
pop
xor
pop
popw
jne
xor
mov
aaa
mov
mov
imul
daa
lods
cld
adc
sbb
mov
push
jmp
sbb
mov
repz
and
nop
adc
sub
mov
fs
lret
push
in
into
jae
sub
movsl
sar
rol
dec
clc
add
test
in
andb
and
orl
pop
jae
pop
xor
cmp
es
sbb
fbstp
enter
fidivrs
shll
popf
rorl
sbb
out
xlat
dec
cmp
xor
test
out
aas
pop
xchg
push
sub
loope
lods
lock
insb
sahf
repz
mov
ret
xlat
adc
jl
mov
pop
inc
mov
dec
cmp
shl
out
cs
test
lahf
adc
popa
mov
mov
sub
fsubr
int
pop
pop
dec
mov
in
dec
pushl
sbb
sbb
cmp
popa
cwtl
sub
call
adc
dec
jo
pop
scas
fdivrl
adc
jne
movl
mov
pop
cmp
add
test
cwtl
and
int3
adc
mov
inc
mov
and
ret
fcmovnu
lcall
mov
push
mov
adc
sbb
cmp
mov
in
mov
pushf
int3
adc
ljmp
aad
adc
aam
dec
inc
xchg
and
xor
push
sbb
cmp
out
fcoms
pop
mov
fwait
dec
jmp
lods
test
jg
loopne
xchg
dec
pop
mov
cmpsb
ds
xchg
ljmp
fdivrs
out
enter
mov
jle
bnd
add
push
imul
pop
jne
gs
lret
inc
in
cmp
sahf
enter
sub
pop
test
pop
sbb
ds
push
pop
and
pop
ss
lock
lock
cmp
lods
cmp
movsl
push
pop
mov
add
lret
dec
ror
fildll
nop
jmp
xor
in
mov
jbe
pop
ds
stos
jbe
inc
in
add
mov
mov
fmull
ljmp
aad
or
hlt
and
add
inc
sub
dec
sbb
and
test
pop
clc
enter
jne
test
ds
cltd
xor
cs
or
xchg
inc
mov
mov
jb
mov
div
adc
popf
xor
pop
adc
pop
pop
out
mov
imul
lock
inc
mov
sub
inc
fidivrs
sbb
push
mov
jno
movsb
mov
dec
inc
call
in
shll
pop
pop
insb
lea
stc
jo
lds
mov
call
rolb
sbb
data16
jbe
repz
xchg
inc
xor
loop,pn
mov
sarl
xchg
out
jecxz
xchg
jae
push
fildl
xchg
mov
or
gs
jmp
xchg
int
cmp
cmp
push
arpl
pop
add
xchg
pop
out
cwtl
mov
filds
jge
in
dec
pop
adc
add
cmc
sbb
push
inc
fnstsw
push
or
mov
pop
jl
dec
push
and
and
pop
out
arpl
xor
lea
or
mov
push
pop
push
scas
mov
inc
imul
push
mov
nop
pop
cwtl
dec
pushf
mov
lret
iret
arpl
mov
or
add
ljmp
cli
pop
ss
call
out
push
adcb
je
and
inc
pop
or
sti
xchg
jp
leave
subl
pop
jne
push
shl
push
inc
push
xlat
mov
inc
loope
iret
cmp
xchg
sub
pop
fistpll
testl
mov
sbb
adc
cwtl
push
add
insl
subb
mov
add
cld
dec
jge
lods
xchg
pop
leave
stc
loop
lcall
cmp
cmpl
cmp
cs
xchg
cmp
imul
insb
mov
mov
shll
push
ret
rol
and
add
jl
int
fdivrl
xchg
cmpsb
or
mov
ficomps
sub
in
inc
sbb
stos
shrl
sbb
mov
dec
in
fiadds
aaa
mov
sbb
jae
or
mov
cld
mov
ss
mov
ficoml
stos
pop
stc
andb
int
xor
repnz
aas
jb
or
in
stc
push
out
and
adc
clc
jne
push
ror
fimuls
jl
jle
out
push
push
xchg
daa
dec
leave
adc
push
add
gs
jp
mov
xchg
push
inc
scas
out
lock
insb
int
test
sub
cltd
leavew
and
out
lock
mov
cmp
scas
fcomip
shrb
pop
inc
dec
pop
adc
repnz
xchg
sub
dec
cltd
mov
pop
stos
popf
pop
je
sbbl
xchg
icebp
jecxz
cmpsl
test
jl
pushl
scas
flds
xlat
mov
sbb
imul
jle
icebp
or
xchg
sbb
sbb
ds
jmp
push
int
cld
sbb
jmp
push
and
sti
or
mov
mov
insl
mov
ss
jae
inc
xor
push
jmp
fistpll
add
jl
and
adcb
lahf
sbb
mov
jne
xor
insb
movsl
xchg
inc
xchg
bound
cltd
fldl
xchg
sbb
das
mov
lret
aaa
or
push
dec
rorb
in
bound
inc
xor
push
mov
ds
mov
mov
enter
and
orb
clc
clc
iret
inc
jno
ljmp
mov
cmp
push
lods
sar
les
ljmp
push
movsl
sarb
jmp
dec
add
nop
mov
xorb
push
test
jb
cwtl
jbe
fwait
jle
push
xlat
out
push
cmp
sub
jo
push
mov
call
xor
jbe
dec
movsl
mov
mov
loop
cmp
xlat
lahf
adc
stos
sbb
popf
into
rcll
stos
rcrl
cmp
jno
and
sub
cmpb
sti
iret
das
cmp
mov
aam
addl
sbb
fwait
mov
mov
mov
jno
loop
jo
fdivrp
shl
mov
into
mov
add
lahf
in
inc
jle
inc
nop
mov
adc
popa
and
and
sbb
push
pop
shll
jbe
inc
add
sub
xchg
jbe
cld
cmpsb
or
sub
ljmp
stos
pop
aas
and
out
faddl
or
pop
fldenv
popl
fmul
aas
adc
adc
push
daa
fistl
or
mov
cmp
loop
inc
jmp
cmpsl
es
addl
jae
data16
pusha
and
mov
std
xlat
repnz
daa
sbb
adc
jbe
sbb
lret
imulb
fs
rcll
sti
xor
fisubl
test
imul
jno
push
add
xor
aam
push
ret
aas
dec
dec
mov
rcrl
stos
pop
dec
std
pop
and
stos
stos
popf
aam
or
pop
mov
sub
push
sbb
xor
xchg
movsb
mov
scas
adc
sbb
loope
cmp
jl
jecxz
add
in
icebp
mov
shrb
outsl
bound
cmc
mov
push
lods
test
loop
scas
mov
mov
scas
mov
inc
push
fldenv
xchg
sub
mov
bound
sbb
fcmovnu
inc
sti
lds
adc
mov
cmp
pop
push
adc
sub
cwtl
and
push
imul
cmp
and
int
sub
loopne
jbe
push
stc
cmp
sahf
cmp
daa
subl
cmp
dec
cwtl
fimuls
fstpl
rcll
add
pop
adc
jmp
pushf
fidivrl
inc
jmp
inc
xor
push
mov
and
jg
xchg
mov
adc
repnz
push
sbb
jl
mov
pop
xchg
add
cltd
test
sub
cmpsl
cmc
xchg
cmp
mov
imull
inc
mov
and
lock
pop
push
xor
mov
loopne
mov
hlt
dec
or
ss
mov
cmp
push
aam
sbb
addl
jns
pop
addr16
neg
adc
jae
add
sbb
lods
clc
jle
push
push
pop
sar
dec
and
dec
insb
divl
repz
xor
sbbb
sub
push
test
das
lods
mov
outsl
nop
xchg
mov
ja
sbb
adc
pop
cltd
push
inc
mov
xor
dec
icebp
xor
mov
and
shl
mov
cwtl
bound
inc
sarb
or
loope
shlb
jl
sub
icebp
fists
xor
cltd
xchg
out
mov
add
js
iret
fcoms
mov
ficoml
push
mov
andl
sbb
mov
fnstcw
popa
aaa
outsb
fs
cmp
loopne
xor
jmp
mov
adc
cmp
cmc
outsb
insl
cmp
jmp
shrb
xor
jg
out
cli
jo
int
cli
pop
insl
jp
pop
daa
out
insl
nop
jae
outsb
shlb
push
fstpt
cmp
cmpsl
shrb
push
cmp
add
xor
jb
popa
fstp
leave
hlt
or
cwtl
test
or
out
or
mov
cmp
mov
sub
mov
imul
in
dec
loop
pop
mov
in
cmp
stos
hlt
imul
in
jl
xor
call
mov
push
gs
cmp
add
divl
jae
std
sbb
pushf
xor
aad
insb
enter
mov
adc
ret
jno
add
sub
nop
out
sbb
gs
mov
adc
das
xchg
vpsubd
dec
in
aam
push
scas
leave
andl
cmc
jge
sbb
les
gs
mov
pop
pop
jp
mov
and
pop
or
mov
push
ds
jne
scas
mov
ret
movsb
mov
mov
mov
adc
daa
cli
dec
in
pop
subl
outsb
and
xchg
pop
fs
sub
and
daa
fldenv
lahf
mov
push
push
jno
sub
pop
cmpsb
sbb
aad
negl
and
stc
add
cwtl
cmpsb
jo
push
test
xor
int
mov
or
inc
aaa
jne
pop
mov
cmp
and
jo
lahf
mov
shll
iret
clc
and
test
rorb
dec
push
iret
stc
cmp
iret
leave
out
dec
mov
mov
and
leave
and
cmpsl
shlb
lock
xlat
mov
mov
in
jns
hlt
out
dec
mov
mov
ss
mov
and
mov
in
cmp
daa
daa
fcmove
mov
fs
add
lods
ja
cs
sahf
lcall
rorl
bound
push
cmp
mov
jbe
inc
xor
mov
inc
pop
loop
inc
bt
shlb
adc
arpl
and
dec
sub
jmp
adc
cld
push
jl
push
mov
or
or
mov
bound
stc
mov
mov
adc
lret
hlt
cmpsl
cmpsb
adc
lret
xor
hlt
xor
inc
jp
fistl
push
das
dec
cmp
aad
scas
push
xchg
push
in
bnd
inc
adc
jle
dec
pop
dec
jmp
inc
xor
push
pop
add
cmp
scas
ja
mov
insl
xchg
inc
jg
sub
and
xor
cmp
mov
push
push
xor
jae
mov
mov
cwtl
loope
jge
stos
dec
cs
lret
pusha
xchg
loope
fimuls
cmpsb
jnp
decb
out
jp
outsl
dec
mov
fcompl
sahf
je
repnz
push
mov
inc
daa
mov
sbb
ds
push
ljmp
jno
test
mov
in
lret
clc
add
out
push
xchg
xor
pop
in
mov
repnz
stos
bound
inc
data16
icebp
movsl
xchg
jge
ret
mov
mov
jmp
lea
xor
imul
mov
pop
test
and
and
test
pop
lods
repnz
xchg
dec
std
fsubp
cs
pop
sub
neg
das
in
rorl
inc
cltd
arpl
and
push
add
out
add
sbb
mov
jmp
inc
test
mov
mull
cs
shlb
cmpsl
aam
hlt
sub
dec
dec
fcoms
adc
cmp
stos
outsb
ret
sbb
stos
inc
push
popf
mov
pop
nop
lret
out
popf
sahf
and
sub
mov
clc
popl
fwait
daa
scas
xlat
add
idivl
loopne
fcompl
outsl
pop
ss
xor
mov
arpl
aam
in
fwait
jle
out
cmpsl
push
rcrb
test
repnz
fistpll
push
pop
int
add
outsl
stos
popf
and
loop
xchg
test
or
std
data16
add
pop
inc
xchg
mov
jno
sbb
ds
xchg
mov
adc
jo
push
hlt
pop
int
test
shll
cmpl
jmp
je
mov
mov
xchg
mov
xor
cmp
or
mov
adc
dec
mov
out
mov
jo
push
enter
adc
cmpsl
mov
dec
xchg
inc
cmpsb
inc
push
fstpl
mov
das
mov
or
scas
mov
fadd
out
rolb
cltd
mov
cmp
xor
js
idivl
out
sub
sub
adc
mov
sub
lea
adc
mov
insl
jae
pop
jae
out
data16
xlat
add
add
mov
mov
scas
ljmp
xor
cmp
les
loop
loopne
aas
and
ds
gs
jne
push
mov
or
mov
fldt
hlt
negb
bound
cmp
and
push
mov
icebp
or
dec
stc
xchg
xchg
mov
push
push
push
cmp
rol
bswap
js
sub
pop
inc
sbb
cld
xchg
jns
test
movsb
dec
das
sti
inc
fnstenv
fwait
pop
and
popf
cmc
inc
out
xchg
mov
push
pop
std
adc
cmp
and
stc
inc
out
sbb
icebp
mov
cmp
xor
cli
insb
fiaddl
cli
push
int
lret
inc
ret
add
cmp
test
sbb
jle
cs
outsb
push
icebp
loop
faddp
adc
int3
shll
cmovnp
pop
sbb
test
in
rorb
lret
repnz
jle
and
push
in
scas
mov
daa
ds
add
inc
cmp
test
xchg
push
adc
sub
js
mov
jb
sbb
xchg
gs
sbbb
cwtl
pop
je
in
cmp
mov
add
mov
xor
ds
lret
push
cmpb
mov
xchg
clc
pop
jge
cli
loopne
cli
imul
sti
out
jmp
cmp
sbb
dec
ljmp
js
mov
movsl
jo
ret
xor
adc
pushf
mov
pop
mov
push
fisttps
jb
loop
jmp
sbb
jp
fdivp
jp
lock
push
and
shlb
cmp
cwtl
ss
jmp
rolb
int
out
xchg
xor
add
pop
mov
mov
lods
scas
jnp
lret
vmread
shl
fiadds
jb
pushf
mov
fnstsw
inc
movb
test
leave
in
iret
sbb
pop
xchg
test
gs
pop
and
xchg
cmp
xor
sub
cmp
int3
les
sarl
mov
shrb
loop
cltd
nop
push
mov
fdivrs
lret
adc
or
lcall
mov
inc
mov
pop
ds
and
lret
int3
mov
fdiv
mov
lret
out
mov
loope
xor
in
fildl
inc
test
ljmp
add
jno
sbb
dec
cmp
aam
pushf
cs
inc
mov
es
std
outsl
aaa
cmp
jmp
pushf
aaa
sbb
jle
gs
nop
test
dec
xchg
xchg
cli
adc
push
mov
or
out
xchg
push
dec
jecxz
outsb
mov
ds
inc
mov
jbe
not
popf
inc
lock
and
sarb
out
aam
jg
mov
popf
dec
movsb
mov
sub
insl
adc
mov
adc
xorl
loopne
cmp
or
xchg
pop
roll
fimull
mov
lods
sub
adc
mov
clc
push
push
lds
scas
sub
daa
and
xchg
cmp
out
lret
lret
andl
jecxz
push
mov
mov
cmpsb
fistps
adc
pop
test
pop
mov
pop
lods
test
cmpsl
pop
shl
or
scas
fsqrt
cwtl
jnp
sub
mov
call
subl
cmpsl
aad
loopne
rorb
inc
mov
mov
inc
imul
pop
adc
cmp
push
adc
adc
adc
dec
mov
xor
add
movsl
inc
gs
lods
ret
sbb
mov
lcall
int3
xchg
adc
cltd
pop
cmp
jecxz
fst
aad
or
lcall
data16
fisubl
out
in
mov
je
cmpsl
mov
insb
jb
mov
fldcw
xor
push
pop
mov
mov
or
and
mov
pushf
js
cltd
lods
daa
or
or
inc
jne
xchg
inc
cmpsb
je
add
dec
lods
fdiv
and
stos
mov
mov
xchg
mov
sub
jg
dec
int3
jecxz
sti
push
aas
pop
pop
cmp
xor
sub
mov
dec
or
cmp
fnstcw
divb
out
int3
lods
mov
ret
push
add
cmpsb
push
fcomps
dec
mov
fimuls
inc
js
xchg
divb
push
shll
push
nop
ljmp
ja
jae
int
stos
lahf
loopne
iret
pop
mov
lcall
pop
out
test
adc
jns
dec
jmp
pop
and
sub
lock
bsr
insl
pop
fidivs
sub
leave
cmp
xor
jne
stc
cmp
les
andl
push
xlat
std
jl,pn
cmp
ss
hlt
lock
ret
nop
push
aaa
lds
xchg
pop
into
push
pop
ljmp
inc
add
lahf
stos
mov
mov
pusha
cli
outsl
dec
pop
ret
sbb
loopne
push
cmp
xor
cmp
fistpl
push
pop
jecxz
jl
loope
jecxz
pop
daa
or
add
push
sbb
mov
xchg
xchg
inc
roll
xchg
lret
iret
outsb
and
and
jb
call
push
push
cs
lea
movsl
stc
inc
add
fsubs
hlt
test
mov
idiv
fstpt
cli
xlat
pop
jp
fcom
lods
cwtl
push
mov
icebp
mov
xorb
sub
addb
sub
sbb
loopne
inc
mov
es
out
call
aas
adcl
or
shll
mov
fwait
adc
addr16
fidivrl
dec
sbb
mov
imul
adcb
addr16
std
mov
xor
in
nop
lahf
mov
mov
lret
daa
pop
repnz
out
push
leave
shll
and
cmp
ret
ss
adc
fidivrl
hlt
dec
cli
sub
clc
addr16
rcl
mov
in
and
adc
jae,pn
stos
cmp
sub
dec
cld
adc
loop
stc
mov
nop
xorl
adc
shlb
mov
in
xchg
loope
inc
pop
pop
dec
popf
aaa
dec
pop
push
inc
and
lcall
mov
adc
push
es
xchg
mov
xor
fists
pushf
push
testl
sbb
adc
jp
sub
or
cmp
pop
cmp
inc
data16
xchg
mov
mov
imul
xlat
arpl
imul
stos
dec
adc
jle
xchg
movsb
xor
fwait
jmp
mov
sahf
loop
cmpsb
push
add
and
dec
inc
adc
loope
leave
daa
loope
nop
dec
lret
les
push
add
icebp
jmp
dec
cmpsl
and
and
jne
in
sbb
enter
es
jnp
call
test
shll
and
ljmp
pop
add
add
icebp
inc
pop
jecxz
mov
lahf
mov
into
aad
imul
mov
dec
xor
test
icebp
ja
pop
xlat
and
testl
popf
sti
daa
lods
mov
ret
aas
loop
fisubs
subb
lcall
mov
fsubr
les
int3
push
inc
and
add
cld
lock
inc
fadds
push
lds
repnz
or
mov
jge
cmp
xchg
xchg
jp
inc
out
push
mov
adc
in
arpl
xchg
cltd
repz
and
mov
insb
aaa
add
push
in
mov
leave
sub
dec
enter
scas
xor
adc
aas
rcrl
aas
sub
xor
xchg
lahf
sub
aaa
fists
roll
and
lea
cli
ret
movsl
insb
mov
mov
cmp
and
iret
stos
ss
xor
xorb
aaa
mov
adc
sbbb
fbstp
das
out
jnp
xor
pop
outsl
aam
xchg
push
pop
fildll
cltd
sti
roll
jb
ja
repz
das
shr
es
push
loopne
ds
in
lahf
js
add
nop
push
ss
in
xor
xchg
mov
adc
pop
jecxz
xchg
cmp
mov
sbb
and
xor
sarb
or
hlt
sbb
sub
pusha
inc
jmp
in
repz
fs
dec
cwtl
fwait
and
adc
imulb
and
sbbl
test
cs
scas
mov
test
add
pop
push
push
mov
out
push
loop
jecxz
leave
int3
mov
sub
push
mov
mov
lcall
mov
pop
mov
inc
push
sub
push
xchg
xchg
je
cmp
test
lret
mov
jg
int
js
xor
xchg
xor
mov
cmc
sub
and
pop
fs
ret
fnsave
ja
jae
sbb
lret
cltd
push
mov
and
adc
lahf
push
shrb
sub
in
jge
jmp
adc
mov
mov
cmc
ljmp
jno
fnstenv
stos
int
fstl
fsubr
and
or
jp
inc
pop
adc
orl
outsb
inc
loopw
adc
xchg
bound
xor
push
xor
inc
fdivp
iret
dec
das
push
xchg
adc
mov
or
ficompl
add
lcall
dec
inc
jmp
insl
pop
adc
rorl
dec
lds
mov
pop
sti
xlat
mov
and
cmp
test
and
out
pop
fisubrl
mov
je
jns
mov
lock
cltd
addr16
shl
pop
cmp
rcrb
mov
ja
inc
subl
adc
mov
aas
insb
cltd
xor
fsts
stc
stc
outsl
fcoms
cmp
lea
lock
jl
cli
jmp
adc
pop
shll
aad
jl
in
add
cli
arpl
pop
dec
jb
or
sbb
mov
mov
cmpsl
dec
xchg
jnp
sub
movsl
ficoms
nop
sub
pop
push
cmp
inc
pusha
pushf
cltd
enter
pushf
or
loop
cmc
mov
in
aad
adc
and
mov
lahf
pop
mov
pop
cmp
fimuls
fisubrl
sub
or
inc
mov
cli
fwait
lcall
hlt
mov
push
jb
pop
movsl
jnp
push
sub
pop
popf
add
in
mov
movb
jns
inc
xchg
fwait
pop
sub
or
mov
pusha
push
pop
imul
and
mov
and
pop
sub
inc
push
xor
jbe
roll
pop
lret
loop
lahf
sbb
rclb
into
push
jecxz
not
inc
test
rcrb
fwait
jno
into
movsb
sub
mov
xor
loopne
divl
pop
pop
jo
mov
test
add
mov
arpl
aam
mov
scas
mov
push
stos
add
test
rcr
or
mov
sub
enter
jle
js
addr16
out
test
push
cwtl
pushf
repnz
xchg
ret
scas
push
mov
push
xchg
add
xor
cld
lret
jbe
int3
mov
imul
sbb
xor
mov
mov
ja
cmc
dec
adc
pop
sti
or
rclb
pop
xchg
std
and
mov
fcmovnu
mov
test
cmp
dec
loop
ljmp
int
fdivrp
arpl
inc
test
and
mov
sub
out
xor
jle
loopne
push
arpl
pop
iret
les
loope
pop
sub
inc
adc
mov
scas
stos
dec
fildl
sbbb
jl
loop
int3
ss
xchg
inc
pop
cmp
jno
leave
pushf
repnz
mov
arpl
pop
xor
bound
mov
mov
xchg
pop
hlt
fcoms
mov
jmp
and
pushf
jg
popf
jmp
cs
jecxz
fwait
adc
lret
jmp
xchg
decl
push
fstps
iret
int
xor
mov
aaa
dec
rcrl
lret
dec
mov
int
adc
sarb
cmp
and
and
xor
push
mov
and
sahf
adc
inc
in
mov
nop
lock
mov
fadds
jge
lret
add
lahf
fsubp
jb
imul
mov
pop
cmpsb
clc
dec
xchg
xorl
call
cmp
add
stos
ljmp
or
orl
adc
cld
outsb
sub
pop
adc
mov
aam
imul
lock
adc
shlb
rol
ja
or
push
lret
dec
jno
verr
xlat
pop
jmp
mov
jne
mov
cmp
inc
push
jge,pn
push
mov
adc
inc
js
test
mov
pop
mov
inc
addr16
loopne
push
cmp
aas
or
pop
cmpsl
pop
jg
cld
addr16
roll
cmp
fs
arpl
in
imul
xchg
push
inc
xchg
lcall
mov
xchg
or
push
pop
test
test
int
inc
repnz
xchg
repnz
sub
sub
pop
jne
movb
in
jge
les
scas
les
loope
cmp
mov
dec
xchg
xor
pop
adc
xchg
or
cmpsb
push
fsubrp
data16
or
insb
jno
icebp
movsb
in
mov
aas
mov
sbb
insl
outsl
ljmp
js
fwait
sub
in
mov
dec
mov
not
ds
out
and
xor
push
xor
push
int3
shlb
adc
pop
pusha
inc
hlt
cmp
imul
fimull
mov
fcoml
mov
sub
shlb
sbb
dec
cvtdq2ps
rcrb
jmp
jo
jle
gs
in
stc
test
jnp
adc
or
fistpll
sbb
dec
iret
mov
repnz
inc
aad
repz
outsl
xchg
adc
popf
jge
fidivrs
sti
mov
aas
stos
inc
push
jcxz
jg
fcoml
lods
cld
out
or
ret
mov
xor
jne
les
aad
loop
fs
imul
jle
adc
mov
sub
sub
out
xlat
cmp
and
stos
in
mov
xchg
push
cltd
pop
add
mov
adc
push
sub
fwait
sbb
fwait
push
ss
out
cmpsl
and
mov
fistpll
shll
lock
adc
inc
inc
aas
mov
mov
pop
xor
and
stos
mov
push
pop
shl
add
es
jp
cmp
cmp
cli
lods
xchg
pop
hlt
dec
cmp
add
push
cmpb
inc
adc
add
popf
cmp
and
or
pop
imul
xor
loope
xchg
mov
sub
stc
add
rol
add
cmpb
out
out
lret
out
clc
mov
mov
push
and
mov
call
add
in
mov
xor
addl
push
sbb
mov
add
and
int
add
mov
mov
xchg
add
call
fwait
mov
mov
lcall
adc
mov
jo
add
aaa
fs
sub
pushf
add
xor
xchg
pop
mov
loopne
sub
out
ret
scas
mov
lret
mov
insl
aas
lds
pop
cmp
ret
mov
mov
mov
insb
and
es
addb
push
mov
ljmp
dec
pop
es
xchg
xlat
leave
cmp
addr16
pop
andb
movl
test
repz
hlt
es
push
inc
bound
leave
xadd
and
daa
cmp
dec
rorb
add
mov
pop
insb
pushw
icebp
mov
mov
add
imul
pop
mov
add
mov
adc
dec
out
inc
stc
sbb
rcrb
enter
into
stc
mull
out
pop
loopne
xchg
data16
push
sbb
lods
mov
cld
jb
lret
jle
aam
sub
jbe
xchg
lock
add
decb
adc
es
jne
cmp
loopne
adc
hlt
test
xlat
nop
mov
jbe
dec
ret
fwait
push
nop
inc
cmp
ret
add
imul
hlt
adc
rcl
addl
adc
push
mov
cld
jne
or
out
fmul
fiadds
add
rcrb
mov
fists
xchg
js
inc
clc
and
lock
adc
call
outsb
xchg
pop
mov
pop
stc
in
ret
and
sub
cmp
icebp
cmp
jo
inc
xchg
mov
cmp
cld
inc
outsl
daa
stc
push
jmp
outsb
xor
push
mov
sbb
lods
roll
sbb
cmp
and
fcoml
and
jmp
pop
pop
xchg
sub
das
mov
data16
out
sti
int3
xchg
and
outsl
cmp
add
cmp
idiv
test
and
aaa
push
shll
leave
mov
out
push
mov
push
sbb
dec
mov
jl
sub
jns
mov
insl
push
xchg
lret
jbe
dec
insl
out
clc
pop
dec
sub
jbe
add
pushf
jns
leave
dec
and
das
pop
pop
out
rcll
cmpl
mov
movsl
mov
pusha
xchg
dec
mov
popa
cmp
shl
pop
fldenv
cmp
sbb
aaa
inc
popa
out
dec
lcall
mov
andb
imul
outsl
mov
scas
insb
clc
cld
add
sbb
xchg
stos
repz
lds
xlat
dec
xchg
sbb
pop
and
popf
sahf
or
arpl
rorb
adc
dec
ret
lret
movsl
fidivrl
shll
roll
push
loope
push
jmp
imul
mov
jle
sahf
test
cmpsb
popf
mov
push
sti
stos
push
cmpsl
cmc
mov
add
cmp
push
lahf
inc
cmp
add
fisttpl
mov
rcll
sbbl
push
in
out
lds
sbb
cmp
jbe,pn
clc
xor
push
mov
in
jbe
testb
lret
inc
jbe
sub
or
sbb
ret
repz
repz
loop
psllw
sarl
xlat
mov
fcom
jmp
insl
test
idivb
pop
in
enter
ret
xor
fmul
out
pop
pushf
ret
test
fildll
cmp
push
rcrb
dec
jnp
xor
test
sub
divl
lret
out
lahf
pop
repnz
in
or
les
xchg
outsb
and
out
dec
push
int
enter
adc
aas
push
fld
xchg
addl
mov
and
pop
mov
jo
ret
add
mov
xor
lods
xorl
lret
pop
mov
js
icebp
fmuls
mov
jns
mov
call
or
push
popf
jo
gs
dec
xorl
sub
outsb
leave
pop
in
fldl
or
mov
insb
aad
jl
cltd
jae
outsb
mov
ret
xchg
lret
into
imul
xchg
test
ficomps
fsubrs
or
icebp
mov
outsl
out
push
fstpt
jl
mov
mov
out
dec
outsl
fsub
cmp
std
push
push
inc
cltd
rorl
fwait
out
push
mov
xor
daa
loop
fxch
mov
mov
inc
add
call
push
pop
mov
add
clc
cmpsb
xchg
icebp
je
or
das
insb
inc
jns
sbb
cli
xlat
stos
pop
add
insb
push
repnz
aas
sbb
fidivs
cld
add
outsb
pop
leave
adc
test
das
pusha
adc
mul
imul
mov
xor
jae
pop
inc
sbb
lock
ret
xchg
cmp
push
in
orb
out
pusha
push
movsl
cltd
pop
jge
dec
jg
outsb
fwait
ss
out
aad
dec
mov
rorl
fwait
rorb
cmp
xlat
pop
and
orl
and
xor
and
call
sbb
clc
xor
movsb
rol
cmc
or
inc
nop
mov
xlat
in
pop
add
and
fsts
mov
sbb
mov
adc
outsb
mov
inc
mov
xchg
and
mov
dec
adc
ss
mov
sbb
nop
dec
cli
mov
daa
pusha
or
add
loopne
xor
inc
repz
mov
mov
xlat
nop
loope
push
fidivrs
cmp
bswap
mov
cmp
je
pushf
insb
pop
push
popa
mov
pop
sbb
add
imul
xchg
repnz
dec
js
adc
mov
mov
adc
lahf
outsl
rcll
adc
push
xor
jnp
mov
jmp
ja
lods
adc
dec
mov
jo
rorb
aam
shr
scas
jne
scas
cwtl
add
std
xlat
cmp
mov
push
mov
push
dec
icebp
arpl
repnz
or
or
sub
addb
mov
loop
mulb
mov
push
addr16
xchg
xchg
leave
xlat
call
mov
sub
sti
mov
jge
std
lea
gs
add
scas
andl
push
sub
jb
sbb
push
cmc
and
sub
movsb
push
dec
adc
sbbl
icebp
das
sti
jge
ja
jb
or
decb
cmp
setnp
xchg
out
in
repnz
jge
test
mov
and
fmull
mov
xchg
jg
cli
adc
ret
cmp
nop
in
stos
and
jle
push
stc
test
insl
hlt
mov
dec
mov
out
mov
xchg
jge
popf
shr
es
ds
out
pop
push
jnp
frstpm(287
mov
scas
addr16
lods
cltd
mov
movsl
je
mov
movsl
ret
sbb
mov
add
xor
lcall
and
aad
out
push
jp
iret
jecxz
mov
jae
jmp
cli
mov
in
dec
or
cmp
adc
je
or
pop
loopne
lret
into
ljmp
call
adc
int3
ret
jo
pop
repz
fcomps
lret
push
mov
push
inc
stos
dec
push
jnp
push
lret
repz
in
dec
mov
enter
shrb
in
and
mov
lahf
or
aad
cmc
mov
fdivl
xchg
mov
mov
lret
out
or
mov
inc
vcvtph2ps
pop
clc
xchg
and
xchg
loopne
inc
rclb
fmuls
add
ret
cmp
cmc
cwtl
movsb
shl
into
lret
sub
push
dec
outsb
sub
jae
lock
fwait
scas
popa
lods
sub
push
repnz
xchg
rcll
frstor
cmp
in
mov
xor
xlat
sbb
adc
sbb
pop
jne
outsl
loop
mov
negl
or
mov
dec
ljmp
or
xor
adc
cmpsl
inc
enter
add
sbb
imul
mov
clc
add
cmc
inc
insb
addl
mov
mov
imul
sbb
xchg
or
xor
jp
mov
inc
inc
out
leave
dec
mov
cmpsl
and
fistl
dec
data16
movsb
imul
notl
sub
aaa
jnp
jne
inc
test
and
ret
jne
shrb
add
xchg
mov
sbb
mov
in
cmpl
sbb
fisubrs
in
and
std
cmp
faddl
jge
cwtl
xchg
cltd
add
insb
stos
cmp
test
aaa
fimull
fisubl
or
mov
in
stos
mov
sbb
insl
adc
out
mov
pop
mov
inc
call
cwtl
or
in
dec
mov
icebp
out
sub
mov
in
mov
call
inc
mov
inc
sbb
cmpsl
sbb
stos
setbe
aas
push
mov
sti
fists
pop
cmp
sbb
mov
jmp
dec
jnp
sti
mov
inc
push
dec
xchg
or
lea
repnz
iret
pushl
daa
jl
sbb
andl
cwtl
cltd
pop
pusha
rorb
aam
ror
mov
xchg
pop
adc
adc
loopne
orl
mov
cwtl
adc
jno
add
ds
mov
add
ja
sub
inc
fld
mov
bound
lahf
push
cmp
and
sub
out
call
pop
adc
cltd
push
sbb
cvtps2pd
rclb
pop
stos
inc
fmull
mov
dec
sub
push
sub
lahf
daa
xchg
enter
cmp
inc
jbe
popa
in
cltd
mov
or
adc
adc
xor
in
inc
adc
inc
and
movsl
push
push
ret
hlt
stos
ss
jmp
cmp
push
scas
pop
mov
or
add
imul
sahf
pop
ret
sbb
xchg
call
test
cwtl
test
jp
test
jns
test
insb
pop
xchg
imul
sbb
jecxz
lock
xchg
cmp
dec
int
and
jns
repnz
pushf
inc
xor
leave
insl
and
jle
ret
scas
adc
jl
xchg
out
out
movsb
pop
insb
inc
adc
adc
jmp
mov
test
adc
fs
dec
fucomip
inc
xor
jmp
push
push
sahf
jg
inc
inc
mov
dec
rcrb
mov
sub
cmp
sbb
or
jns
fadd
push
mov
jns
mov
or
loopne
loopne
daa
jno
jne
sahf
cmpsl
movsl
js
scas
rorl
or
xchg
lret
test
or
add
std
fldcw
adc
pop
fcmovnbe
add
sti
lods
adc
jle
inc
fs
or
add
icebp
stos
ja
mov
popa
mov
xor
aam
mov
icebp
adcb
add
mov
mov
push
push
jno
xchg
aam
ret
pop
aam
movsl
out
inc
ja
cmp
mov
imul
add
inc
sub
and
mov
imul
dec
das
cltd
aas
mov
dec
std
push
test
insb
jg
sub
xor
fwait
sub
jge
xchg
sbb
lea
idivb
sub
aas
adc
fcmovnbe
dec
xchg
call
jl
or
pop
bound
pop
inc
movb
in
cmc
fnsetpm(287
jae
fsubl
and
add
sbb
xor
jge
psubb
mov
xchg
adc
xor
mov
lret
mov
mov
and
cmp
cmp
pop
imul
mov
dec
movsb
rolb
aam
stos
out
push
mov
icebp
addr16
and
rcll
sub
jmp
inc
das
dec
mov
or
out
std
mov
push
aas
test
popf
loope
sbb
mov
xlat
loope
out
fistpll
adc
fucomi
add
mov
push
stc
and
into
mov
push
clc
divl
fsubs
les
adc
loopne
std
aam
or
cmp
bound
xorb
sahf
cmp
out
mov
push
push
test
add
xor
lds
mov
scas
sub
push
dec
hlt
jg
jecxz
jae
in
sbb
mov
pop
pop
lea
ds
das
sub
into
cmp
ja
std
inc
mov
pop
nop
adc
mov
mov
shrl
pop
dec
pusha
mov
xor
jp
scas
sub
shrb
jmp
lock
cmp
adc
or
mov
mov
adc
jp
mov
xchg
pop
in
out
fisttps
inc
imul
xchg
pop
out
std
int
xchg
jle
dec
sub
das
dec
lahf
or
inc
sub
mov
and
xor
cmc
jl
imul
jl
or
cwtl
in
xor
sub
sbb
aad
xor
cld
cltd
inc
xchg
inc
fdivrs
mov
xchg
pop
push
jg
xchg
xchg
mov
push
mov
push
cmp
jae
mov
addr16
and
pushf
iret
sbb
jo
cmc
pushf
sub
inc
push
add
and
inc
push
xchg
fmul
xchg
sbb
out
hlt
dec
mov
pop
movl
out
dec
xchg
out
mov
mov
xchg
test
xor
xchg
mov
stos
repnz
dec
xchg
aaa
mov
mov
pop
scas
gs
mov
int3
jecxz
or
or
jmp
jge
insb
xor
out
add
and
out
loop
jle
sbb
gs
and
mov
jl
jg
or
das
out
fisubl
ja
jbe
lcall
leave
jp
mov
push
lods
xor
add
push
pop
ja
sub
pusha
aad
jmp
add
fsubrl
xchg
clc
mov
loopne
lods
or
add
adc
leave
pop
addl
pop
push
and
fisubrs
and
jecxz
ds
test
loop
loope
js
mov
lcall
cmp
enter
imul
imul
mov
mov
aas
fs
add
js
jno
je
cltd
xor
cmp
cmp
mov
cltd
iret
jle
sbb
xor
pop
insl
push
and
out
pop
out
or
mov
cs
pusha
frstor
lret
xor
test
pop
xchg
inc
scas
mov
fnsave
cli
or
add
lods
or
xchg
scas
shrl
inc
mov
sbb
loope
push
arpl
orl
dec
xor
ljmp
icebp
fwait
jbe
mov
dec
jb
out
add
in
ljmp
cwtl
or
je
add
out
xor
hlt
test
and
popf
and
clc
out
sahf
mov
ljmp
and
xchg
js
int
mov
adc
sti
shrl
cmc
push
ss
cmp
in
pop
outsb
out
jge
or
movsb
sahf
inc
inc
addb
mov
lahf
add
js
jecxz
fidivl
pop
lock
pop
movsl
enter
cmp
in
jae
dec
into
pop
inc
adc
inc
lods
lods
test
adcl
or
jge
sub
jecxz
push
add
out
pop
rcrl
sahf
enter
mov
pushf
shll
jnp
cmpsb
add
mov
loop
fwait
mov
aam
xchg
or
scas
ret
mov
fldl
jnp
mov
xor
das
cld
sbb
adc
test
push
mov
sub
xor
pop
push
xchg
xchg
loope
push
mov
push
es
add
cmp
mov
mov
cmp
pop
call
mov
mov
mov
pop
in
insb
push
addr16
inc
in
loope
or
xchg
das
cmpsb
push
jl
mov
call
aam
xorb
imul
pop
lods
mov
push
adc
add
xlat
sbb
les
sub
imul
mov
lods
lock
lds
jb
scas
mov
sub
xor
outsl
mov
jg
stc
lods
stos
test
inc
scas
xlat
repnz
xor
test
or
outsb
push
sub
sub
aad
scas
out
icebp
jno
in
negb
repz
push
inc
lahf
fistpl
jae
gs
ss
jp
pop
push
insl
mov
push
rorb
enter
pop
pmaxsw
mov
cli
cs
xchg
dec
xor
jb
test
jmp
inc
push
jge
mov
or
add
lcall
pop
or
dec
cli
jo
inc
inc
mov
mul
cmc
jb
cli
mov
aas
sub
xchg
fldcw
ds
add
sbb
jae
xor
ret
lret
std
push
lock
push
jl
inc
in
push
lea
and
sbb
aad
mov
xor
mov
dec
inc
int
mov
dec
xchg
lahf
xchg
push
addb
jno
lods
lret
aad
leave
xchg
inc
std
fld
xor
pusha
shrl
test
movsl
cmc
jns
mov
in
pop
mov
pop
cmp
data16
lgs
fnsave
jo
jge
ret
repz
sbb
cltd
out
adc
jmp
rcrl
sbb
and
mov
sbb
cmp
lds
or
push
push
sahf
std
cld
movsb
out
jge
cli
loopne
icebp
adc
or
ljmp
cmp
nop
aam
push
iret
dec
lret
mov
ljmp
push
lods
dec
sbb
jno
lret
xlat
cmpsl
push
cmpsl
push
adc
in
fldcw
orps
push
sub
into
aam
iret
movsl
pushf
mov
jbe
leave
xlat
pop
xlat
jle
es
loop
pop
mov
ds
push
sbb
outsl
and
cmc
fdivs
das
into
out
lea
xchg
inc
pop
nop
lock
sub
cwtl
jne
xor
sub
rorb
je
aad
cmpsb
scas
xchg
or
xchg
orb
sarl
mov
andl
inc
lcall
loopne
push
loop
outsl
mov
xchg
in
pop
in
dec
movsl
sub
cld
arpl
in
add
mov
mov
push
pop
jnp
sub
sub
fs
adc
sbb
jg
xchg
clc
xchg
lods
xor
push
lcall
stos
add
pop
pop
das
loop
jnp
sbb
push
cmp
mov
sbb
stos
lcall
mov
xor
les
addr16
sub
add
in
rcl
iret
pop
orl
lea
sbb
out
int3
mov
inc
jns
inc
into
cmp
dec
adc
push
ljmp
xor
dec
and
dec
loopne
cmp
add
paddsw
mov
sar
sub
push
and
jmp
in
cmp
mov
in
pop
push
jno
dec
jbe
jae
imul
js
mov
pop
cmc
ss
pop
outsl
xor
cmpsl
stos
jns
cltd
dec
xchg
in
xchg
ficoms
or
push
cwtl
dec
mov
sbb
add
pop
cmp
adc
mov
fcoms
sbb
scas
xor
cmp
or
movsb
ss
push
dec
jge
mov
mov
push
loope
flds
gs
sahf
pop
dec
cld
sub
mov
outsl
lea
jbe
loope
cmp
adc
mov
out
fsubl
les
imul
mov
cmpsb
andb
inc
insb
mov
mov
jmp
or
jg
sub
aas
js
inc
jbe
sub
pop
xor
sub
sarb
inc
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
pusha
cmpsl
cmp
inc
outsl
insl
or
add
and
add
xor
add
inc
or
andb
adcb
cmpb
andb
adcb
add
jl
add
xchg
add
xchg
or
xor
add
or
subb
add
add
add
add
add
cmp
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
enter
push
add
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
loopne
add
testb
add
add
fadds
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
cmp
add
add
add
add
sub
sbbb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
inc
outsl
insl
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
cmp
adc
xor
add
jo
adc
xor
add
movsb
jle
add
add
fdivrs
add
add
or
adc
xor
add
inc
adcb
xor
add
je
adc
xor
add
test
adc
rolb
add
js
adc
rolb
add
dec
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
adc
rolb
add
sub
add
clc
xchg
adc
in
add
fcoml
add
les
add
insb
movsb
adc
push
add
add
movsb
adc
in
add
movsb
movsl
adc
in
add
add
add
add
lods
adc
mov
add
add
add
add
mov
add
add
add
add
fs
add
add
mov
add
add
aam
adc
enter
pushf
mov
add
test
add
fs
add
cmp
adc
faddl
add
adc
adc
xor
add
inc
ret
adc
push
add
add
add
add
add
mov
add
add
add
in
rclb
add
add
add
add
cmp
adc
in
add
add
xlat
adc
sub
add
push
fsts
add
add
add
add
add
fstl
add
add
add
add
xchg
loopne
add
add
add
adc
sbb
add
jo
adc
and
add
xchg
jmp
add
insb
out
adc
adc
add
sub
add
add
xchg
out
adc
adc
add
test
adc
adc
add
mov
add
add
out
adc
adc
add
in
adc
adc
add
clc
out
adc
adc
add
or
inc
add
inc
add
dec
add
inc
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
add
push
add
push
add
inc
add
inc
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
or
xor
movsb
jg
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
xor
xor
or
add
inc
add
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
or
dec
add
dec
add
dec
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
inc
add
jb
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
inc
add
outsb
add
outsl
add
add
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
dec
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
push
add
xor
xor
add
dec
add
add
add
add
add
add
add
xchg
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
pop
jne
popa
dec
push
push
popa
jb
gs
adc
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
insb
dec
gs
jo
xor
adc
outsb
popa
push
jns
gs
adc
outsb
popa
inc
insb
popa
jae
gs
adc
jne
popa
push
outsl
arpl
je
add
push
imul
adc
outsb
popa
push
popa
jbe
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
dec
inc
inc
add
xorl
dec
jae
arpl
push
dec
add
dec
dec
push
jns
je
insl
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsl
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
jbe
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
inc
push
dec
inc
pop
dec
dec
cmp
cmp
cmp
or
popa
imul
gs
add
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
add
arpl
imul
in
xchg
out
mov
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
popa
jns
imul
outsl
jo
jo
outsl
fs
dec
jb
inc
dec
push
inc
dec
dec
inc
dec
add
push
outsl
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
dec
inc
outsb
je
or
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
