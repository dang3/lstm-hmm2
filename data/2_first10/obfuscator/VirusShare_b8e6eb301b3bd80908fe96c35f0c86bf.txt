in
push
jmp
mov
dec
inc
mov
ret
push
stos
inc
into
xchg
mov
outsl
adc
dec
inc
mov
inc
mov
inc
xor
inc
adc
pushl
xchg
stos
adc
inc
push
xor
shll
dec
jbe
xchg
fstpt
push
mov
push
daa
dec
std
mov
fldl
into
push
or
sbb
mov
fstpt
ret
sbb
retw
fcmove
sub
push
xchg
lcall
mov
push
and
fnsave
bound
cld
xchg
jnp
dec
inc
adc
mov
jo
jns
or
gs
mov
or
adc
dec
popa
fdivl
rorb
adc
stos
push
inc
add
add
push
lcall
dec
xor
outsl
xor
inc
rclb
cs
jge
push
adc
push
shlb
dec
rorl
fnstsw
jne
add
into
sbb
mov
mov
hlt
and
clc
pop
pop
divl
xchg
pop
xchg
bound
rcrb
add
xor
es
into
sub
scas
jge
xchg
add
sti
inc
popa
sarb
lods
inc
xchg
and
rorl
aaa
mov
sti
mov
aas
xor
dec
gs
jno
jae
xor
mov
mov
in
add
xchg
sti
or
and
fstpt
jno
mov
rolb
dec
inc
pop
mov
mov
dec
and
insb
add
rol
mov
dec
pop
push
divb
ret
push
into
dec
xor
cld
inc
mov
jle
push
es
neg
jbe
mov
rcr
dec
mov
add
xchg
inc
fcmovnu
or
rol
push
mov
mov
ljmp
les
in
call
add
lods
mov
ret
sub
mov
add
sub
add
adc
mov
hlt
shr
shlb
mov
imull
mov
fidivrs
mov
enter
cmp
cmp
lret
lcall
scas
jmp
mov
adc
ret
hlt
xchg
daa
jno
mov
add
movsb
ja
dec
adc
mov
rcrl
ret
add
mov
jl
jl
mov
ret
push
ror
fcmovnbe
mov
and
add
xchg
lcall
jno
xor
dec
mov
cmp
fistl
cld
clc
push
dec
ja
lcall
out
insl
scas
xchg
into
mov
add
mov
stc
push
daa
mov
bound
into
rcrb
mov
lcall
mov
jmp
or
xchg
add
push
outsb
mov
inc
daa
fs
ret
jg
rcrb
adc
push
sub
rcll
push
sarb
fcmovbe
push
xor
jmp
insl
addr16
mov
mov
insl
outsb
stos
push
sbb
inc
mov
mov
shll
xor
xor
outsb
shll
cltd
psubusb
xchg
and
dec
sub
cmp
rorb
or
xor
hlt
movsl
and
aam
sub
xor
xor
jl
fcmovnu
in
mov
add
aad
pop
lret
scas
mov
stos
xchg
mov
ror
mov
cmp
push
cld
pop
ret
dec
xor
mov
pop
mov
fdivr
mov
rcll
pop
mov
xlat
insb
mov
dec
popf
adc
sub
add
adc
mov
mov
mov
outsl
xchg
inc
dec
sub
add
fwait
lds
fldcw
pop
push
lock
push
push
mov
fcmove
cmp
add
mov
push
mov
mov
add
push
in
mov
outsl
aaa
imul
pop
dec
add
adc
push
sub
jg
jnp
add
icebp
sub
jo
popl
lahf
fnsave
push
jno
arpl
loope
gs
cmp
data16
dec
and
clc
lcall
xchg
ss
xor
hlt
daa
aaa
mov
sbb
dec
xor
popa
xor
fsubrl
push
mov
push
mov
fnstcw
or
pop
andl
add
mov
dec
jno
sub
sub
mov
mov
xor
test
jno
dec
call
daa
add
or
dec
rcr
outsb
mov
inc
jl
adc
dec
lea
daa
adc
jle
es
mov
cld
mov
add
lods
aam
cmpsb
daa
das
in
fs
shll
add
lock
mov
sub
gs
popa
dec
pop
mov
dec
in
push
dec
mov
lcall
jl
xor
push
adc
loopne
lcall
roll
imul
pop
xor
bound
adc
pop
stos
mov
push
or
or
add
arpl
pop
pop
jmp
into
daa
loop
sub
mov
mov
jne
dec
cld
stos
add
add
push
mov
mov
rcll
daa
into
fdivs
jno
jge
or
or
popa
loopne
pusha
loopne
xchg
jnp
hlt
gs
pop
pushl
adc
cld
mov
pop
das
add
mov
mov
lock
cld
hlt
dec
ret
cmp
push
dec
push
jae
sub
into
popf
cmpsl
adc
into
and
push
cmp
lcall
mov
inc
pop
ds
cmpsl
or
sti
cmp
and
push
or
cltd
push
ficoml
test
filds
push
dec
mov
xor
gs
mov
mov
cmp
fists
fiadds
ret
xchg
shr
inc
aam
loop
cmp
xchg
mov
out
mov
shll
daa
add
jns
sti
mov
lcall
fstpt
dec
jo
inc
inc
xor
dec
adc
sbb
popf
inc
jmp
mov
lcall
repnz
popf
aad
pop
mov
jmp
sarb
jo,pt
or
or
jl
pusha
fisttpl
cld
and
pop
inc
es
sub
inc
jmp
xor
mov
push
stos
mov
into
mov
pop
push
add
xor
enter
stc
mov
ret
cs
jmp
mov
xchg
dec
icebp
ss
sbb
push
mov
shr
and
sbb
shll
test
mov
test
push
fdivs
push
xor
or
loop
ja
sub
xor
into
bound
add
xor
adc
icebp
push
enter
lret
std
or
jmp
or
mov
sbb
out
pushf
inc
in
mov
sub
nop
mov
mov
cld
xor
out
jne
mov
pop
in
pop
outsb
jae
test
xor
xchg
or
mov
adc
mov
insl
mov
inc
rclb
test
xchg
data16
mov
jno
jnp
notl
push
and
aas
mov
aas
rorb
rolb
rclb
loopne
xchg
cld
cld
sub
clc
jg
mov
fstl
and
fcoml
push
adc
sbb
sbb
in
lock
idivb
pop
jbe
arpl
sbb
and
adc
in
lock
mov
add
pop
test
mov
jg
cmp
push
lock
in
mov
mov
adc
repnz
in
pop
sti
jb
rolb
orl
jmp
lret
int
or
or
test
cwtl
adc
add
add
push
loop
repnz
fldl
orl
int
imul
leave
mov
jbe
fisubrs
jne
inc
mov
out
add
rcrl
in
mov
data16
cwtl
inc
lock
into
add
cld
aaa
mov
inc
adc
add
sub
sub
fcmovnbe
pop
add
les
iret
xchg
test
jae
push
ss
cmc
sbb
sbb
lcall
mov
pop
into
ja
mov
push
cmp
loope
int3
popf
or
fisubrl
lcall
shrl
push
repnz
sub
or
add
adc
xchg
arpl
rol
test
stos
xor
fbld
rol
aam
andl
sbb
lret
fwait
ja
inc
lcall
adc
subl
repz
push
dec
jno
or
outsl
das
cmpsl
shrl
lds
jae
testb
aaa
pushf
xor
shlb
popa
mov
cmp
add
pusha
pop
jl
std
pop
shll
adc
out
leave
sar
inc
xor
cmp
lcall
insl
popa
cwtl
cld
hlt
pop
jb
xchg
pop
addl
push
sub
test
lahf
insl
cmpsl
mov
cltd
jno
cld
fwait
out
sbb
xor
popa
stos
push
mov
push
sar
push
rcll
daa
frstor
into
or
popa
sahf
stos
loope
adc
cmp
or
adc
in
fs
clc
jp
adc
xor
out
testl
loope
jge
adc
xor
or
es
cmpsl
dec
dec
mov
scas
pop
mov
jbe
pop
into
adc
sti
daa
mov
cmp
stos
test
adc
cli
aaa
and
xchg
je
ja
inc
jb
leave
scas
push
aas
aam
fldl
sub
fidivl
inc
test
push
push
cmpsl
in
push
movsl
dec
jbe
mov
cmp
mov
outsl
sbb
push
sub
push
aad
xor
add
sub
or
out
inc
loopne
xchg
fwait
inc
fdivr
out
mov
pop
sahf
pop
push
sub
pop
xor
adc
jne
dec
imul
push
push
sbb
push
mov
or
bound
jns
inc
fistpl
xor
leave
in
jne
sub
add
loope
mov
movsl
cs
push
adc
hlt
sahf
sbb
insl
daa
into
negb
cld
pop
inc
xor
shlb
pusha
js
push
mov
scas
leave
sub
xor
jle
inc
into
rol
mov
mov
jecxz
ss
xor
stc
rorl
push
sbb
dec
mov
mov
mov
add
in
hlt
bound
or
sub
jno
or
ret
mov
mov
fnstcw
dec
xchg
xchg
inc
test
xchg
mov
push
push
fiaddl
mov
ret
mov
xor
inc
add
mov
dec
sbb
hlt
and
inc
add
cmp
mov
imul
mov
xor
mov
mov
xor
mov
cld
pop
mov
hlt
mov
imul
adc
fists
cmpb
movsl
push
sub
lahf
into
fs
sub
sarl
push
xchg
shll
xchg
xor
jmp
push
outsb
or
rorb
imul
or
or
ss
pop
ret
cmp
rorb
movsl
popa
sub
stos
mov
inc
das
inc
push
mov
adc
xor
push
push
pop
push
into
lds
daa
pminsw
les
push
dec
xchg
mov
xor
jle
and
add
lcall
ljmp
add
push
pop
repnz
mov
in
pop
inc
fdiv
jg
cmp
in
test
pop
mov
shll
mov
addr16
lea
lea
mov
popf
fcoml
pop
pop
fsubrs
sbb
sahf
or
jae
mov
cmp
xchg
enter
out
push
mov
fsubrl
ja
mov
lds
insb
nop
xchg
clc
stos
bound
dec
xlat
insb
mov
ret
scas
daa
mov
fldenv
or
inc
mov
pop
test
mov
mov
ljmp
out
stos
adc
and
pop
into
fisubs
fnsave
xor
jo
mov
push
xor
arpl
jbe
out
out
push
je
xor
hlt
fwait
imul
dec
mov
inc
add
into
dec
dec
dec
or
lcall
pop
xor
cmp
popa
or
popa
stc
mov
outsb
add
shlb
int
adc
nop
adcb
cmp
add
in
adc
sub
out
jo
gs
fstps
bound
inc
xor
or
push
ret
add
daa
je
stos
cmpsb
xchg
xor
jnp
adcl
jnp
shll
mov
incl
and
sbb
loopne
call
inc
push
pop
push
and
mov
push
inc
lock
push
mov
or
gs
mov
test
adc
shrl
test
int
xchg
mov
pop
add
loop
daa
xchg
scas
push
push
jecxz
pusha
dec
aaa
sahf
fs
adc
add
push
addl
mov
fisubrs
dec
xlat
xchg
cs
add
shrl
pusha
je
xchg
ret
movsl
xor
jl
adcl
mov
and
cmp
mov
xor
and
xor
add
fstpt
test
data16
mov
pop
popa
rol
or
inc
or
mov
xchg
fisubs
mov
scas
xor
outsb
sarl
lret
push
je
mov
sub
xor
cwtl
adc
push
loope
rcll
lea
adc
and
loop
testl
call
lds
call
pop
aaa
inc
lods
jne
or
adc
sbb
sub
hlt
or
mov
lods
mov
shl
push
inc
int
cmp
cs
xor
or
andl
aas
mov
lcall
mov
sbb
repnz
inc
mov
in
cmpsl
mov
push
daa
shrb
leave
ret
mov
scas
inc
das
mov
icebp
ss
mov
sbb
push
xchg
fcomps
loopne
pop
clc
push
aam
push
pop
in
push
push
pushl
adc
dec
inc
loop
pop
cmc
pop
shlb
gs
jecxz
xchg
sub
movsl
ret
adc
pushf
jecxz
xor
or
lds
xchg
js
lods
inc
cmp
dec
push
shl
xor
xchg
sbb
repz
mov
stos
stos
cmpsb
xchg
mov
add
loopne
insl
pop
xor
jp
sub
mov
ret
sbb
sub
add
jnp
cs
lcall
mov
mov
cwtl
mov
hlt
add
int
aaa
mov
xchg
outsb
push
push
push
inc
popa
mov
clc
outsb
sub
popa
mov
and
xor
bound
jbe
or
fidivs
mov
subb
ret
add
xor
mov
xchg
pop
xchg
cmp
dec
insl
lods
popa
adc
rolb
mov
push
push
cmpsl
out
push
inc
pop
cwtl
gs
push
sbb
cld
xchg
out
test
out
hlt
gs
add
mov
jge
fwait
test
xchg
fistpll
inc
sar
hlt
mov
call
jne
mov
push
adc
dec
sbb
push
lret
rorb
push
adc
addl
add
cmp
push
xchg
push
mov
pop
mov
data16
and
push
movsb
fld
sbb
mov
sbb
inc
jno
mov
mov
sarb
push
loope
or
dec
push
fwait
mov
adc
popa
push
movsl
jg
push
push
movsl
or
mov
inc
cs
inc
mov
test
inc
push
push
push
dec
bound
je
xor
xchg
push
push
sbb
lea
outsb
movsl
call
aam
dec
movl
inc
flds
rcl
push
jbe
nop
xor
out
pop
push
ljmp
bound
shlb
popa
movsb
push
inc
and
das
pop
push
loopne
inc
rcll
push
mov
sub
fcomps
lods
lods
adc
or
fs
arpl
and
push
and
xor
inc
and
push
mov
push
shrl
imul
movsl
js
jl
js
and
daa
jno
mov
or
insl
jno
fisubs
pop
out
aam
call
lcall
shlb
cmp
adc
ret
lds
repnz
cld
sbb
push
mov
cld
mov
push
jo
scas
push
xchg
lods
cmc
icebp
jo
mov
xchg
into
arpl
or
ret
push
push
mov
scas
pop
mov
push
or
stos
push
or
fyl2xp1
pop
sub
and
xor
into
add
sub
mov
out
shr
cld
push
pusha
js
dec
sar
daa
daa
push
mov
adc
shlb
mov
push
cli
pop
loope
mov
cwtl
das
dec
xchg
ljmp
push
aad
add
data16
imul
pop
in
mov
je
call
dec
iret
popa
fsubs
rorl
gs
outsl
dec
or
sub
addb
push
shrl
fisubl
mov
out
xchg
mov
dec
lock
mov
xchg
outsb
bound
mov
pop
mov
int3
push
pushf
clc
push
adc
ljmp
pop
mov
int
orl
call
mov
ret
leave
adc
shrl
add
inc
push
repnz
shlb
aad
lods
mov
ret
or
or
dec
lock
aad
ret
inc
mov
ret
jo,pn
lcall
inc
xchg
rclb
fdivrs
test
rcll
cwtl
push
pop
xchg
push
or
jbe
and
pop
jno
scas
testl
pushf
mov
pop
mov
ss
clc
subl
stos
hlt
bound
cmp
xchg
inc
popf
sbbb
sub
fidivrl
mov
adc
test
sbb
jle
push
popa
ret
push
test
hlt
or
inc
loope
cli
cmpps
lret
daa
or
movsl
pop
adc
repz
mov
push
mov
inc
rclb
jne
mov
in
push
das
shlb
mov
sbb
rol
xchg
push
lods
or
push
jno
mov
pop
inc
push
shr
jge
sub
or
or
insb
jbe
sub
adc
and
mov
andb
adc
test
lea
jne
xlat
inc
mov
loope
mov
js
je
gs
push
add
rcll
test
insb
pushf
mov
push
push
stos
inc
in
sbbl
mov
and
flds
test
dec
mov
loopne
sub
rorl
cmovs
ss
jmp
clc
sbb
mov
add
add
dec
mov
mov
mov
push
sub
dec
sbb
inc
add
sbb
adc
movsb
or
fcoms
in
pop
or
out
push
add
mulb
pop
lahf
ror
jmp
mov
in
mov
mov
cmp
int3
mov
xchg
jle
pusha
jg
lds
and
scas
jp
sbb
enter
dec
pop
dec
xchg
sub
add
iret
sbb
shl
mov
popa
gs
inc
xor
leave
xchg
stos
and
mov
jne
inc
fprem
sbb
cmp
pop
xor
dec
xor
add
push
push
push
mov
test
andl
cmpl
add
adc
fwait
int3
sbb
push
arpl
and
pop
mov
mov
jge
addr16
mov
inc
repnz
pop
cs
mov
or
into
cmp
jl
jnp
adc
inc
or
add
pop
out
or
mov
mov
js
shl
pop
rclb
xlat
sub
xor
pop
push
push
cmp
push
leave
push
xor
cltd
pop
pop
popa
mov
dec
mov
mov
imul
mov
sbb
dec
test
adc
fsubrs
jno
arpl
adc
pop
sub
pop
mov
stos
jmp
xor
mov
cltd
std
movsl
mov
inc
stos
divb
popa
stos
hlt
ds
mov
jmp
dec
out
jae
push
loopne
xor
shlb
mov
xchg
adc
jbe
icebp
aas
orl
lods
testb
xchg
ret
cwtl
lods
add
popl
mov
outsl
idivb
jl
cmp
icebp
push
push
pusha
iret
or
add
scas
adc
push
or
add
shrd
mov
and
bound
daa
shl
sarb
addr16
push
notl
xor
cmp
adc
push
dec
mov
add
clc
icebp
add
lret
out
lds
or
mov
es
mov
jno
sti
add
loope
mov
xor
mov
xor
cmc
cmp
sub
jp
gs
mov
or
xor
mov
imul
fcmovu
and
push
mov
sti
jb
push
mov
inc
add
je
lods
inc
ja
cmpsl
arpl
out
scas
or
or
rorl
mov
inc
lret
sub
push
xchg
xchg
adc
dec
push
adc
add
jae
add
lret
or
adcb
mov
divl
push
push
xor
or
ficompl
lods
repnz
hlt
pop
adc
or
sbb
outsb
lahf
jl
pop
mov
push
xchg
xchg
and
push
cld
stos
decl
loope
dec
xor
mov
add
sahf
sbb
ja
mov
nop
inc
sub
adc
push
cmp
hlt
dec
inc
test
pop
xchg
dec
push
cmpsb
or
fistpl
inc
jno
sarl
mov
jb
mov
push
adc
push
mov
jmp
out
mov
mov
rolb
mov
lea
sub
inc
pop
mov
mov
adc
jg
in
test
jl
fisubrl
cmp
fcmove
leave
sbb
ja
iret
aam
add
stos
cmp
mov
lds
pop
cmpsb
dec
xchg
xchg
pop
xor
adc
add
or
push
mov
stos
push
sbb
jl
push
cltd
or
outsb
sub
imul
mov
or
sub
dec
push
mov
add
mov
dec
adc
pop
mov
xor
daa
inc
add
enter
fwait
jb
or
or
inc
mov
or
andl
mov
or
out
push
lods
or
sahf
sbb
and
mov
test
notb
test
fldl
rolb
pop
shrb
shl
fimull
xor
daa
out
mov
cmp
cld
fildl
imul
add
push
inc
dec
inc
stos
xorb
push
lea
popf
mov
mov
jmp
roll
xchg
les
adc
dec
jno
inc
cmpsb
or
cwtl
xchg
imul
sahf
inc
mov
inc
jmp
inc
imul
sarb
xor
pop
xor
cs
pop
lods
cmp
insl
or
mov
xlat
inc
mov
push
mov
mov
decb
stc
ret
push
mov
testl
or
fsubrl
mov
inc
jb
mov
dec
mov
outsl
dec
ss
nopl
into
jo
mov
xchg
rcrb
add
xchg
mov
pop
xor
pop
mov
sbb
jl
jbe
or
in
dec
hlt
adc
lea
add
or
ss
push
fldl
loopne
popa
sub
xor
push
pop
push
jmp
popa
push
add
test
repnz
mov
push
or
loop
and
dec
aad
jge
jae
ss
mov
or
mov
rol
out
xor
add
popf
mov
mov
aaa
xlat
xor
push
mov
jg
add
sbb
xor
pop
push
mov
pop
imul
jnp
mov
adc
sbb
cmp
dec
mov
fisttpl
enter
add
mov
xchg
add
sbb
rcll
cmp
lods
mov
stos
inc
ret
jno
bound
test
adc
divl
xchg
test
adc
aad
or
out
scas
sbb
xchg
sbb
mov
mov
adc
sub
nop
xor
push
inc
into
xor
nop
inc
cmp
or
lcall
sub
dec
pop
hlt
hlt
mov
mov
hlt
sub
mov
push
shr
das
mov
call
popa
imul
into
arpl
outsb
sub
rol
into
mov
jg
dec
mov
pop
movsl
loop,pn
das
xchg
cmpsb
insl
test
add
ret
lds
mov
sbb
rclb
data16
inc
mov
rolb
cmp
adc
jo
stos
dec
adcl
repnz
mov
dec
pushf
cmp
push
fcoms
fwait
sbb
inc
mov
fsubrs
fists
adc
push
loopne
mov
xchg
mov
int
pop
sub
lea
in
pop
inc
lods
js
pop
and
mov
jae
lds
mov
xor
dec
dec
int
dec
in
movsb
adc
popf
sbb
mov
adc
push
cwtl
push
cli
pop
into
push
sbb
addb
adc
or
inc
lods
pop
push
lods
push
mov
dec
lea
fbstp
je
cmp
push
xor
lea
les
xor
shlb
js
adc
sub
add
sub
pop
pop
loope
out
aam
cli
mov
xchg
mov
fisubs
xchg
xchg
ja
mov
and
push
outsl
ret
imul
shll
int3
loopne
pop
cld
inc
fistpll
shrl
adc
cmpsb
ret
sbb
pusha
inc
dec
xchg
xchg
sarb
dec
clc
inc
or
int
inc
test
jnp
push
mov
out
pop
mov
bound
cmp
add
in
and
ret
das
and
dec
cmp
inc
sub
mov
lock
cwtl
sub
and
xor
popa
mov
addb
in
in
inc
dec
mov
enter
xor
fiaddl
jge
sbb
aam
push
clc
add
inc
or
leave
dec
mov
mov
cvtps2pd
iret
jno
mov
mov
scas
inc
std
sub
inc
arpl
outsl
fidivs
xor
pop
sub
lret
lea
mov
gs
mov
dec
pop
and
sbb
push
mov
daa
adc
bswap
or
test
or
cmp
mov
or
push
loopne
push
scas
pop
mov
pushf
mov
and
dec
push
pop
les
pop
jno
pushw
cmp
mov
or
inc
pop
fucomi
push
bound
test
xlat
shll
xor
popf
aam
or
sub
inc
xor
sysexit
mov
mov
stc
sub
add
cmpsb
add
mov
push
mov
es
dec
roll
dec
sbb
shlb
into
inc
xor
in
push
sbb
bt
dec
xchg
or
push
mov
mov
pop
xor
pop
stos
shr
pop
adc
ret
or
jo
stos
shrl
mov
inc
push
add
jno
fcoms
or
mov
adc
daa
fsubl
cmc
mov
mov
insb
adc
lcall
rclb
lret
mov
fidivs
shl
add
js
sub
rolb
popf
mov
jo
aad
cmpsb
xor
sub
stos
mov
hlt
ret
lea
stos
imul
cld
jno
xchg
dec
dec
and
xchg
jns
loopne
out
xor
adc
jno
bound
or
pop
push
data16
stc
popa
push
jo
loopne
ja
xor
push
xchg
sarl
inc
int
movsb
std
out
push
xchg
imul
idivl
rcrl
mov
dec
mov
xor
jg
jae
or
sub
mov
pushf
sbb
mov
or
push
pop
push
mov
xchg
or
cld
shlb
xchg
aam
jl
rorl
decl
add
cmc
jp
xchg
aam
test
push
incl
stos
adc
in
rcrb
sti
shlb
lods
sub
xchg
fists
mov
inc
rorl
cmp
fldl
stos
push
jnp
push
inc
adc
mov
mov
fs
loop
gs
bound
mov
sbb
ret
mov
lret
mov
inc
xchg
cmp
or
push
out
jae
stc
rolb
dec
data16
or
dec
adc
and
cmp
xchg
lds
lret
popl
mov
add
add
cmpsb
and
sbbb
lret
dec
insl
add
pop
mov
lahf
gs
jo
add
sub
sub
and
push
sbb
sub
dec
push
lahf
xorb
mov
or
gs
test
push
insb
mov
push
out
cltd
decl
push
push
mov
mov
jmp
in
mov
bound
bound
sub
adc
cmpl
xor
jo
rorb
cld
adc
popa
xchg
xchg
std
loope
push
mov
mov
push
xor
es
or
push
mov
mov
sub
inc
lret
ss
inc
inc
adc
ljmp
xorb
aad
mov
je
push
test
std
pop
xor
stos
push
daa
lea
aam
xchg
sub
xor
shll
cmpsl
scas
rclb
push
jge
mov
test
adc
dec
jmp
fiaddl
dec
scas
inc
adc
cmpsb
into
xchg
popf
mov
dec
negb
dec
adc
scas
cmc
int
dec
cld
mov
inc
popf
test
adc
sub
xor
cmp
out
dec
inc
enter
dec
pop
rclb
jno
rorb
rcl
push
inc
mov
mov
cmpsb
jle
jno
lret
push
mov
jg
hlt
dec
into
push
sub
dec
mov
ret
and
add
rorb
push
jecxz
add
cltd
sbb
push
mov
xor
sbb
xor
cmp
repz
push
imul
lods
jb
push
dec
out
push
push
push
cmc
push
push
cmp
pushf
stos
jl
push
and
ret
push
inc
mov
dec
or
rol
ret
gs
cmp
cmp
mov
cmp
dec
fildl
lgs
mov
mov
shrb
add
out
dec
or
dec
lock
sbb
aas
outsb
xor
and
push
lock
mov
inc
sbb
insb
cld
push
icebp
add
adc
sbb
decl
mov
add
dec
add
sub
sti
out
push
sub
push
adc
inc
mov
and
stos
lock
fcmovne
add
fwait
and
mov
add
add
adc
loopne
jno
xor
shrb
or
js
or
in
mov
clc
les
pop
nop
bound
or
lret
add
push
shlb
ljmp
stos
ficomps
sti
dec
fnstcw
mov
jns
pop
push
fdivrl
loopne
orb
movsl
jg
inc
dec
mov
sbb
rclb
cmp
insl
test
pushf
dec
adc
sub
sub
sbb
adc
mov
bound
fwait
push
loopne
xor
imul
adc
dec
cmp
jne
or
fdiv
xchg
aaa
adc
jnp
xorb
sbb
adc
inc
xchg
aad
clc
adc
popa
stos
and
test
aad
or
sar
sub
sub
sbb
je
push
les
std
adc
rcll
cmpsl
decl
jp
sub
in
adc
sbb
lods
dec
repz
lret
adc
popa
pop
mov
add
mov
int3
or
cmp
cmp
jno
stos
rcll
or
gs
cld
loop
pop
adc
add
xchg
mov
sbb
xor
jg
mov
add
push
mov
repz
mov
call
aam
hlt
dec
popa
pop
cmc
fiadds
dec
lock
push
mov
xchg
daa
shll
xchg
xchg
jmp
scas
jmp
addr16
dec
sub
jl
mov
lret
and
dec
scas
mov
orb
aam
xchg
xchg
inc
fsubl
xor
fs
sbb
jne
test
add
xor
sbb
adc
add
dec
push
rorl
cmc
test
dec
jecxz
sti
add
adc
push
xor
imulb
dec
xor
jecxz
das
dec
sbb
push
js
lret
xchg
mov
bound
out
daa
xchg
push
add
cmp
push
aam
repz
xlat
call
nop
mov
mov
fwait
sarl
outsl
xchg
stos
pop
add
in
jne
or
xor
test
data16
test
pop
adc
aam
sbb
popf
xor
add
pop
mov
add
cmc
or
out
push
int
lcall
andb
les
cli
dec
sbb
andb
mov
fildl
pop
xor
subb
add
dec
loopne
fiaddl
insl
adc
lcall
popa
mov
lea
mov
xchg
sub
mov
ret
sahf
and
ljmp
dec
jle
inc
mov
out
imul
add
add
out
shr
jne
or
daa
pop
adc
scas
inc
mov
add
dec
call
jae
rol
push
mov
xor
jo
test
ss
sbb
dec
pop
mov
push
mull
jns
cmp
ljmp
ret
jle
or
aaa
mov
orb
imul
mov
shll
push
call
xor
lds
jae
or
push
pop
xchg
adc
mov
jge
mov
xor
adc
bound
pop
inc
out
or
cli
mov
mov
sbb
and
xor
mov
jb
mov
pop
pop
push
mov
sub
roll
add
push
dec
mov
or
sahf
pop
xchg
dec
wbinvd
xlat
jl
xor
push
adc
mov
test
insb
mov
push
xchg
rcrl
push
xchg
dec
int3
xor
push
or
push
into
roll
stos
add
and
ss
inc
neg
mov
pop
pop
clc
sub
dec
jns
xor
push
pop
andb
dec
into
jg
push
xchg
xchg
enter
cmp
push
mov
ljmp
fcomp
mov
dec
lds
gs
mov
mov
insb
outsl
aam
cmpsb
cmp
call
xchg
insl
xor
ret
pop
dec
mov
lcall
pusha
loopne
andl
cltd
into
fldenv
cwtl
aam
pushf
pop
adc
xor
popa
hlt
pop
jnp
or
xchg
out
sbbb
fcoml
lcall
cmp
ja
aam
mov
cmc
xchg
inc
sbb
enter
cld
jno
inc
mov
icebp
jle
add
mov
lods
push
dec
fisubs
push
stos
mov
jne
xchg
aad
insb
cltd
mov
cmc
push
mov
sahf
lods
inc
push
das
pop
cli
push
mov
stos
es
jno
inc
loopne
aam
jl
push
imul
mov
jmp
pop
ss
stos
sub
jne
bound
dec
push
movsl
and
les
pushf
mov
mov
outsl
lods
push
push
roll
or
cmpsl
jmp
mov
mov
mov
pop
sub
sub
lea
aad
add
inc
mov
pop
outsb
repz
mov
cld
shrl
xor
shll
pop
add
loope
jae
mov
add
jp
cld
fstpt
adc
xchg
popa
daa
add
pop
adc
xchg
sbb
mov
stos
pavgb
xchg
scas
fdivl
xor
xor
pushf
movsl
dec
push
lcall
xor
mov
ret
mov
pop
mov
xchg
mov
mov
mov
xor
cld
dec
push
pop
sbbb
stos
add
push
xor
bound
mov
popa
inc
add
test
mov
pop
aad
pop
lea
cld
and
add
mov
rcrl
sub
xor
push
movsl
push
xor
sbb
xor
call
orl
sub
testb
xchg
cmp
insl
rcrl
dec
cmpsb
pop
std
pop
and
adc
jb
push
xchg
mov
sbbl
lock
out
cmp
pop
mov
mov
push
xor
add
mov
test
int3
mov
adc
jp
push
cld
push
or
push
pop
test
adc
xor
pop
mov
iret
pop
lods
sbbl
mov
sbb
out
add
cli
movsl
jmp
push
lret
jno
inc
mov
in
jne
es
xchg
lock
or
adc
fsubr
aam
mov
loope
bound
rcrb
lcall
add
incl
std
sarb
push
jg
add
dec
loopne
jp
inc
push
pusha
inc
imul
or
adc
dec
lock
sub
in
pop
push
fistl
dec
dec
icebp
dec
daa
fsubl
or
push
daa
dec
dec
pop
mov
pop
mov
sbb
xchg
jg
push
mov
mov
lods
dec
push
sub
mov
push
jmp
or
push
cmp
mov
scas
mov
mov
push
jecxz
bound
and
sub
int3
inc
and
push
inc
cltd
pop
jo
data16
stos
ret
lcall
or
inc
addr16
push
mov
mov
movsl
jnp
inc
cld
mov
fsubr
daa
inc
cld
push
jb
das
pop
roll
or
or
xchg
xor
adc
xchg
ljmp
or
jmp
pop
or
xchg
push
dec
sub
xlat
adc
rorl
mov
sub
add
scas
push
pop
push
nop
or
push
shll
mov
scas
test
pop
dec
lcall
mov
aad
mov
push
push
push
jge
push
popf
mov
push
into
dec
sub
call
cld
jmp
ret
popa
dec
insb
test
in
scas
inc
mov
data16
mov
adcl
cmp
lret
std
ret
pusha
test
cs
fwait
andl
mov
subl
ret
push
jnp
fidivrs
cmp
icebp
pop
cmp
and
jno
popa
roll
hlt
mov
insl
add
push
xchg
cmp
and
or
push
mov
mov
mov
hlt
jg
adc
inc
adc
outsb
aad
lods
sub
hlt
mov
call
push
push
or
insl
mov
fcomps
add
repnz
punpckldq
cwtl
mov
xlat
add
rorb
cli
repnz
cmpsb
mov
inc
lods
mov
push
push
push
add
icebp
adc
mov
dec
cmp
scas
jns
enter
ja
cmp
dec
lds
jmp
and
fwait
push
mov
in
sbb
pop
mov
fisttpl
xor
mov
or
push
inc
sarl
pop
xorb
out
push
jno
ret
dec
inc
add
inc
decl
jne
push
dec
ret
loopne
jnp
inc
adc
xor
in
push
or
mov
lock
out
inc
cld
mov
in
insl
and
jno
stos
aam
push
aaa
test
cmp
xchg
and
bound
dec
push
rorl
fsubl
bound
test
push
adcl
flds
or
hlt
imul
dec
out
andl
fwait
xchg
gs
shlb
sbb
gs
inc
or
mov
cmc
lock
mov
rorb
dec
adc
loopne
es
adc
mov
and
into
pushf
ss
mov
dec
setne
cmc
hlt
and
adc
pop
add
or
addb
push
test
or
jle
push
xchg
jae
cld
shl
sbb
xchg
daa
sti
sti
ja
cmp
mov
xor
sub
test
pusha
dec
cmp
cmp
cmp
and
loope
fs
sub
sub
pusha
jmp
int
xchg
test
push
lcall
and
enter
mov
inc
mov
stc
or
cmp
push
not
into
and
stos
and
mov
and
mov
and
bsr
in
push
out
insb
push
test
or
insb
imul
popa
xchg
sarb
daa
inc
nop
mov
inc
cmp
cli
test
or
mov
stos
inc
loope
arpl
pop
pop
or
fstpl
add
lahf
sub
push
push
or
inc
aam
lock
fmuls
dec
mov
sti
scas
mov
cmp
shrb
adc
push
es
cld
ret
dec
jns
add
pop
jp
lcall
sbb
pop
rorb
cmpsl
arpl
mov
stc
push
mov
and
mov
mov
add
adc
push
jno
loope
sub
les
xor
sbbl
ret
xchg
js
xchg
mov
sub
lcall
test
popa
inc
test
pop
les
and
push
je
sbb
mov
xchg
movsl
push
addb
xchg
jno
lcall
gs
imul
dec
aaa
cld
or
js
data16
leave
neg
shll
mov
or
int
cmc
xor
es
or
xor
xor
mov
dec
cld
inc
xor
icebp
inc
inc
ret
test
inc
or
adc
cmp
add
cmpsl
dec
orb
xor
fstpt
dec
xor
add
xor
cmp
addr16
fdivrs
int3
mov
jl
insb
xchg
lock
sbb
or
bound
xchg
mov
mov
add
shlb
shlb
push
shll
pusha
mov
jecxz
or
cwtl
jge
jg
lea
rcr
aas
fst
mov
sbb
pop
stos
rclb
popa
push
add
jne
daa
int3
mov
dec
movl
pop
sbb
xor
test
inc
mov
aam
dec
cvtdq2ps
scas
adc
xchg
push
mov
mov
gs
xor
sbb
cmpl
xor
sarb
push
ret
mov
fcmovbe
lcall
and
push
and
aaa
enter
movsl
push
mov
dec
xor
imul
cwtl
push
xor
mov
xor
sarl
mov
adcl
inc
test
xchg
jo
pusha
or
xor
dec
push
mov
pop
jo
dec
scas
mov
sbb
add
cmp
mov
adc
inc
adc
rorb
mov
mov
inc
pop
push
inc
mov
int
shll
dec
pop
iret
mov
xor
daa
dec
bound
sub
sbb
scas
dec
bound
add
push
jae
jo
out
xor
lea
pop
dec
fimull
or
cmp
push
add
mov
push
adc
cmp
in
xor
sbb
and
adc
adc
incb
sahf
mov
sbb
mov
sub
jge
dec
pop
fsubl
mov
mov
cmpsb
mov
jecxz
sbb
adc
inc
dec
fmuls
inc
out
mov
repnz
and
jbe
hlt
aad
mov
add
sbb
ficoms
push
into
repnz
imul
loopne
push
sub
adc
or
mov
mov
push
push
daa
ja
sub
cli
mov
xchg
xor
gs
mov
mov
ljmp
or
fisubrl
leave
rorl
mov
mov
mov
stos
xchg
push
cli
inc
outsl
and
sbb
push
xor
inc
jo
jbe
fisubrs
rol
inc
jno
bound
pop
sti
cld
loop
jl
pusha
ss
pop
outsb
cmp
cmpsl
mov
lahf
push
aaa
mov
rclb
pop
rolb
mov
rolb
sub
mov
in
bound
into
int3
ljmp
hlt
pop
and
out
fs
dec
inc
jmp
movsl
add
mov
imul
cmp
jno
mov
mov
jo
sbb
push
sub
pop
jo
das
rcl
inc
shrb
xor
clc
fdivrl
pushl
subb
jle
movsl
shl
mov
int
adc
push
pop
cmp
add
test
push
insl
shll
stc
testb
xor
mov
mov
adc
daa
mov
pusha
into
bound
popl
rcll
aas
mov
fdivs
sti
popa
pop
aaa
dec
out
sub
xor
lret
jmp
jle
sbb
mov
xor
sbb
adcb
add
adc
add
dec
push
shrl
xchg
pop
push
je
push
setge
or
testb
stos
icebp
push
mov
push
stos
add
push
imul
data16
pop
hlt
mov
push
pop
inc
cs
cmp
test
ret
xor
inc
lea
mov
sub
sbb
add
insl
sti
rcrb
xchg
aas
gs
xor
push
aad
shrl
ret
mov
mov
push
int
or
testb
daa
dec
mov
push
xchg
jno
mov
push
dec
mov
stc
sbb
push
sbb
sub
bound
xlat
or
pop
lcall
xor
frstor
adc
jo
mov
bound
inc
dec
dec
nop
mov
cmp
xchg
test
or
cmp
mov
pop
mov
dec
outsb
mov
stos
jns
shrb
jns
ffreep
roll
stos
lods
ja
popa
insl
jb
lret
mov
pushf
test
bound
dec
lcall
inc
inc
popa
push
mov
insl
or
sbb
mov
xchg
cmp
movb
test
inc
cwtl
push
sbb
cltd
mov
pop
clc
aaa
mov
call
mov
xchg
push
push
in
fdivr
inc
xor
and
add
mov
adcb
inc
sub
dec
xor
add
cmpl
stos
mov
rcl
push
push
jbe
or
sbb
pop
pop
push
pushf
cltd
sbb
mov
jne
frstor
mov
fcomps
in
jbe
sub
or
icebp
jae
aad
add
nop
and
or
lahf
popf
mov
loopne
mov
mov
add
adc
or
or
or
loopne
sbb
cmpsb
mov
mov
mov
iret
cmp
xor
stos
adc
add
fs
fnstcw
ret
add
mov
jae
out
sbb
negb
loope
adc
test
xor
mov
lds
jno
mov
sub
gs
adcl
sahf
addl
cmp
xchg
dec
adc
js
xchg
and
and
sbb
out
gs
pop
xchg
stos
pop
or
add
mov
sub
cmp
inc
add
sub
aad
or
aad
loopne
mov
jnp
mov
stos
inc
mov
and
adc
push
cmpsb
push
cmp
pop
push
xchg
aad
push
das
es
stos
movsl
ljmp
jmp
bound
jb
out
fisubs
bound
cld
push
rclb
pop
sahf
add
push
mov
xor
mov
push
ret
add
fisubl
jno
or
stos
adc
call
mov
lods
jge
rcrb
aaa
or
adc
roll
pop
push
lea
xchg
cmp
pop
dec
sub
jno
push
pop
jno
add
lcall
xor
sub
sub
es
mov
or
jecxz
mov
xor
andb
daa
cmp
cmp
sbb
add
or
lcall
mov
xor
hlt
hlt
enter
jle
out
push
adc
pop
sub
adc
lcall
daa
mov
fidivl
cltd
shlb
mov
jno
cmc
mov
xchg
mov
push
mov
jp
push
push
subb
xor
xchg
into
inc
sbb
mov
movsl
xor
scas
mov
mov
push
orb
rclb
loope
mov
or
daa
inc
adc
jo
push
sbb
mov
popa
ret
jl
fmull
or
lods
pop
mov
shlb
cmp
lret
call
or
inc
dec
mov
xor
or
dec
aad
sbb
add
push
add
mov
xchg
add
dec
shrl
cmp
push
push
sub
sub
roll
sbb
sub
fbld
out
mov
xor
jecxz
nop
xor
xchg
lcall
xor
dec
into
inc
imul
inc
add
adcl
pop
js
cmp
aad
xor
mov
or
imul
bound
jne
rorb
cmp
fwait
std
ret
xchg
dec
add
pop
lds
push
aas
clc
ss
pop
mov
or
loop
dec
cwtl
orl
xchg
dec
sbb
jg
inc
and
int3
push
xchg
rol
arpl
inc
iret
cltd
mov
cmc
jg
int
pusha
stos
in
aaa
inc
jp
jp
out
ja
and
jp
cld
or
xlat
mov
pushf
mov
mov
lods
dec
push
xchg
in
push
xor
or
test
sbb
xor
xor
xchg
push
lock
jae
adc
mov
push
inc
push
mov
mov
inc
mov
sbb
stc
imul
out
clc
cmp
repnz
mov
mov
loope
lahf
stos
adc
push
jb
scas
jp
mov
jge
mov
les
or
scas
sub
sbb
pop
movb
adc
and
mov
pop
cmpsb
repnz
ret
jne
pop
or
inc
orb
push
lock
stos
fldlg2
xor
les
movsb
pop
sbb
pop
mov
and
jp
xor
test
xchg
adc
xor
inc
outsl
cmp
cmp
outsl
add
in
and
loope
adc
cs
push
mov
gs
mov
push
jl
rolb
push
mov
cltd
xor
leave
inc
add
enter
mov
pop
jno
xor
into
and
cmp
adc
add
add
hlt
outsb
mov
lods
popa
xchg
sub
aad
ret
cmp
push
enter
pushf
stos
sbb
push
stos
mov
push
lret
sub
mov
xor
sbb
pop
jns
stos
mov
jg
xchg
mov
sub
jno
insb
loopne
lret
jno
pop
mov
inc
shrb
push
insl
hlt
xchg
add
std
mov
mov
sbb
mov
pusha
add
out
adc
xor
fcmove
js
addr16
mov
mov
mov
in
test
jb
fisttps
mov
lcall
pop
outsl
mov
sub
in
lods
push
outsl
jne
mov
dec
cld
adc
subl
test
ror
daa
mov
inc
out
xchg
bound
rolb
sbb
jnp
inc
mov
push
out
mov
outsl
inc
or
mov
push
rcll
pop
cmpsl
add
xor
add
mov
inc
and
inc
daa
stos
stos
inc
jae
mov
mov
pop
and
cwtl
cmpsl
dec
dec
cli
subb
jae
ds
adc
cmpsl
cli
dec
test
inc
test
add
mov
xchg
or
mov
dec
and
xchg
loopne
out
sub
stos
or
loope
aad
rolb
out
jo
aam
mov
lock
cwtl
inc
loopne
aas
xchg
inc
ljmp
cmp
dec
aad
sub
inc
dec
push
pop
arpl
mov
rorl
dec
out
ljmp
bound
mov
lea
push
je
sarb
xchg
mov
mov
xchg
ljmp
imul
push
iret
into
jp
lret
sahf
xchg
jb
cwtl
add
and
shlb
js
jno
xchg
pop
mov
inc
lret
push
mov
add
mov
and
mov
push
adc
sub
shlb
push
sub
mov
rclb
xchg
enter
mov
mov
test
mov
dec
fcmovb
inc
pop
mov
jae
popf
jl
daa
andl
in
jno
addr16
pop
dec
xchg
mov
daa
xor
ja
pop
add
xor
sti
and
and
pop
in
stos
hlt
push
rolb
gs
push
dec
loopne
dec
dec
lcall
lea
cld
and
or
jnp
int
in
mov
push
into
fdivrs
sbb
inc
fsubrs
push
out
inc
and
add
mov
mov
arpl
and
push
pop
mov
scas
sbb
in
std
fsts
and
bound
or
adc
test
inc
test
push
fsubrs
and
ja
rclb
add
push
sbb
adc
mov
aam
lock
cmpsl
outsb
mov
and
or
in
pushf
jb
iret
xchg
and
adc
xchg
push
or
sub
rcrb
icebp
adc
jp
push
pusha
sub
push
sbb
mov
push
cmp
cmp
test
loop
sub
or
pusha
push
or
add
enter
loop
ret
and
mov
fwait
or
jo
or
inc
add
add
cmpsb
lcall
jno
dec
stos
pop
daa
push
push
cmp
mov
dec
mov
rcr
lcall
inc
mov
add
ret
stos
fisubl
ret
mov
add
cmp
xlat
and
jo
lea
inc
dec
sahf
fidivl
xor
mov
sub
jne
or
cmp
mov
jb,pt
push
js
cmp
sbb
rol
rclb
out
mov
jo
insb
adc
mov
mov
pop
xlat
and
test
sbb
pop
or
mov
ret
hlt
add
inc
loopne
mov
lcall
xchg
xor
mov
into
pop
aas
xor
pop
stos
pop
test
mov
pop
call
inc
loopne
and
add
inc
sbb
sbbl
mov
mov
andb
mov
push
stos
test
push
adc
ss
pusha
mov
sub
stc
fsubrl
push
dec
adc
icebp
mov
sbb
into
cld
push
push
iret
sbb
aaa
sub
and
lcall
or
sub
cld
xor
out
push
sub
faddl
loopne
mov
pop
addl
cmpsb
xor
jne
mov
cld
and
jb
pusha
xchg
push
sti
push
bound
mov
rcl
les
add
pop
cmp
adc
loopne
pcmpgtw
adc
inc
cmp
sbb
insl
xor
cmc
xor
stos
or
rorl
shll
out
cmp
or
push
outsl
adc
lock
cwtl
add
cmc
jno
scas
add
fsubl
cs
nop
stos
cmp
cld
mov
ret
imul
sbb
jno
shll
ljmp
mov
jecxz
pop
in
arpl
gs
push
int3
es
jp
push
mov
mov
mov
ja
mov
mov
imul
xor
inc
pop
mov
gs
xchg
cmp
mov
mov
inc
lcall
adc
gs
mov
xor
xchg
aad
adc
addr16
xchg
sub
fisttps
cmp
lret
mov
add
ds
adc
xor
call
cmp
add
or
add
adc
inc
call
pop
cmp
adc
or
jne
mov
mov
dec
push
mov
je
add
and
int
cmp
inc
les
add
les
pop
cmp
push
cmp
pop
push
sub
push
mov
pusha
pop
mov
adc
int3
push
jb
stos
ss
subb
iret
ret
mov
sub
push
pusha
mov
jecxz
shrl
gs
jbe
pop
mov
mov
push
mov
mov
pushf
sbb
mov
loopne
inc
xor
mov
pusha
leave
or
fsubrs
cmp
xor
ret
stos
rcrb
inc
dec
enter
dec
dec
inc
mov
mov
or
rcll
cmp
test
adc
jl
sub
mov
mov
aam
jecxz
xchg
jno
in
mov
inc
gs
jmp
cmp
aaa
dec
sbb
inc
mov
add
mov
jp
adc
adc
sbb
jmp
mov
cld
mov
pop
mov
jno
add
repnz
push
mov
push
sub
push
fldt
js
mov
jno
mov
insl
lods
addl
adc
addr16
and
xchg
movsb
aam
inc
lods
mov
adc
sbb
rolb
push
mov
dec
mov
push
cld
and
sbb
ss
mov
mov
xchg
sub
and
cmc
out
adc
adc
mov
rcl
stos
pop
inc
stos
jmp
leave
ficoms
lods
or
dec
push
mov
dec
repz
mov
shlb
into
add
xchg
and
xor
incl
inc
add
add
icebp
inc
ret
inc
std
pusha
xor
stos
dec
xor
cld
mov
push
aas
jno
enter
xor
inc
lcall
test
pop
leave
push
int3
or
or
mov
iret
dec
jp
loopne
outsb
fdivs
fadds
movsl
popa
movsl
test
nop
adc
xor
mov
push
sti
adc
scas
test
call
and
sbb
add
hlt
push
mov
cmp
mov
rorl
xor
cwtl
in
hlt
cmp
cmp
std
into
ret
push
mull
mov
pop
fsubrs
stos
xor
sbb
cmp
xchg
adc
mov
jge
jae
cmp
sub
inc
or
mov
dec
cwtl
pusha
arpl
mov
gs
inc
lea
lods
add
int
adc
adc
jae
push
lds
mov
inc
jmp
icebp
or
out
fistpl
adc
push
sbb
mov
xor
lret
inc
test
ret
push
push
push
mov
mov
mov
cwtl
dec
xchg
and
fwait
mov
add
sbb
mov
inc
shrb
push
pusha
dec
jp
sub
lds
or
mov
cmp
leave
rcl
pop
fsubrs
add
daa
mov
nop
mov
enter
aam
cmp
push
std
pop
rorb
and
sahf
cwtl
les
sub
sbb
mov
or
mov
aad
add
mov
mov
jle
push
push
add
int3
mov
pop
or
rclb
and
imul
sub
inc
test
dec
rcrb
pushf
lret
inc
cmp
in
pop
sub
inc
aad
jno
hlt
inc
dec
mov
add
in
push
push
mov
arpl
sbb
into
insl
out
rcl
enter
sub
xor
adc
inc
mov
pusha
bound
mov
sbb
xchg
sub
test
xor
mov
sub
dec
inc
stos
imul
bound
mov
daa
xor
test
pop
xchg
mov
inc
and
inc
imul
cmpsl
ja
inc
aad
jnp
loopne
mov
sbb
mov
mov
or
insb
inc
push
mov
aad
pop
mov
pop
aad
add
mov
cmove
xchg
mov
mov
push
add
pop
mov
insb
pop
in
mov
mov
mov
ss
fstps
mov
xchg
stos
xchg
dec
negl
and
into
lods
xchg
or
push
cmpsl
lods
lock
push
fisubrl
stos
push
aad
mov
jno
mov
mov
mov
mov
dec
xchg
aad
das
sbb
arpl
inc
aad
js
test
or
test
mov
dec
pop
sbb
lahf
inc
cltd
clc
xor
adc
jb
push
sub
adc
push
clc
sahf
add
mov
add
lahf
add
push
dec
mov
pop
ja
call
stos
gs
mov
xor
inc
and
xor
mov
sub
mov
inc
sbb
test
or
add
jmp
push
xor
sub
movl
into
lss
sub
sub
test
pop
mov
iret
sub
mov
flds
in
inc
jb
mov
xor
sbb
shrl
push
adc
mov
add
cmpsl
inc
mov
dec
push
add
xchg
test
xor
sub
xchg
inc
mov
ljmp
loope
jecxz
nop
cld
xchg
mov
imul
sti
fstpl
mov
add
mov
push
push
jo
push
sub
or
movsl
push
insl
or
jl
inc
scas
shrl
sub
test
sub
pop
push
pop
xchg
push
imul
push
gs
mov
push
rcr
lcall
pop
ja
fisubs
popa
push
cli
rorb
cwtl
pop
push
add
mov
fcomps
ltr
inc
lds
fiaddl
loopne
adc
or
push
xor
sbbl
dec
cmp
bound
stos
or
push
pop
test
sbb
ret
mov
les
xor
dec
daa
sbb
shrb
inc
lret
sbb
pop
dec
push
imul
mov
fsubl
lcall
mov
cltd
xchg
xorb
pusha
mov
sarb
test
iret
stos
pop
dec
daa
dec
mov
push
jns
or
rol
adc
xor
lcall
lea
das
ret
push
jo
cld
and
repnz
or
call
pop
lods
inc
imul
adc
inc
xorl
sbb
mov
imul
push
push
fstpt
push
rolb
cld
jg
add
mov
gs
jb
mov
fstl
mov
fcmovb
push
sub
sub
adc
loope
jecxz
add
arpl
stos
call
test
mov
cld
sub
and
push
add
xor
scas
cmp
mov
pop
mov
push
mov
stos
in
push
clc
push
rcrl
lds
push
adc
sbb
loope
push
rorl
push
ds
fstl
jne
adc
cwtl
ret
addl
adc
negb
pop
pop
fcomip
loopne
cmp
fdiv
dec
les
out
popa
mov
mov
test
mov
xor
dec
adc
lods
cmp
popa
cmp
pop
mov
loope
aam
scas
adc
inc
fdiv
mov
fnstenv
inc
shrb
ret
cwtl
lcall
shrl
cmp
jo
call
pop
dec
mov
and
fdivrp
pop
jb
or
push
sub
adc
gs
fisubrl
notl
push
cld
mov
sub
sbb
sarb
stos
jg
jbe
call
out
addb
ret
adc
test
cltd
leave
or
mov
dec
inc
insl
jle
mov
inc
xor
daa
or
outsb
adc
outsb
mov
push
rcll
movsb
xor
push
or
lahf
mov
mov
push
lods
adc
push
inc
shlb
pop
into
cmp
mov
scas
push
popa
mov
out
cld
or
xchg
adcb
mov
xchg
and
enter
push
cld
ffree
inc
sbb
lahf
add
je
adc
ds
adc
popa
daa
lods
mov
lods
mov
or
add
inc
mov
pop
imul
int
mov
les
xchg
inc
push
push
and
bound
xor
shl
orl
and
inc
adc
add
sbb
mov
mov
arpl
mov
mov
push
ja
imul
push
jmp
push
dec
xchg
xor
test
mov
add
jmp
xchg
pop
xchg
push
rcrb
add
dec
mov
mov
pop
test
and
cmpl
xor
in
sbb
dec
xor
dec
shrb
filds
pop
mov
sbb
xor
repnz
cs
mov
test
xorl
stos
ret
loope
aad
inc
mov
arpl
incb
add
xor
pop
dec
cmpsl
dec
add
daa
es
mov
lret
outsl
push
mov
sti
sahf
lahf
enter
ret
pop
mov
int
sahf
frstor
push
bound
and
mov
loopne
sbb
and
push
test
mov
jbe
or
jo
dec
inc
scas
stos
inc
or
fs
pop
fwait
mov
ret
pusha
pop
sahf
inc
test
aas
xchg
rorl
andl
cmp
pop
add
pushf
sbb
push
push
xor
les
push
loope
int
add
dec
or
push
insl
shlb
adc
mov
pop
add
mov
mov
mov
xor
pushf
push
pop
fisubrs
add
daa
mov
pop
push
mov
push
adc
test
adc
test
out
bound
dec
rcll
mov
sub
sbbl
xor
jp
mov
mov
jbe
mull
fists
cmpsb
icebp
mov
mov
imul
push
and
inc
daa
into
enter
push
scas
jae
cltd
mov
out
mov
daa
push
mov
mov
fisubs
int3
call
and
imul
push
repz
out
movsb
pop
add
pop
popl
mov
int
push
aad
mov
mov
mov
mov
test
ljmp
mov
cmc
pop
aam
push
inc
gs
mov
loope
in
jnp
dec
xchg
pop
les
or
stos
push
outsl
push
push
push
or
xchg
sti
stos
mov
das
aad
sbb
inc
shlb
mov
xor
jb
push
pusha
adc
mov
insl
adc
jmp
into
cld
sub
shrl
jo
xor
add
loope
xor
je
adc
mov
mov
mov
pop
pop
ret
mov
inc
scas
mov
aaa
mov
xor
push
into
xchg
mov
and
dec
or
lds
xchg
subb
and
sub
cmp
mov
xchg
sub
in
inc
push
scas
jp
cmp
inc
sbb
addr16
mov
push
xchg
mov
insl
dec
dec
icebp
sbb
mov
and
push
xchg
roll
lret
xchg
add
dec
rolb
xor
push
mov
ljmp
mov
xor
mov
lods
cs
in
ljmp
addb
jno
and
shrb
inc
into
ljmp
aam
lea
adc
push
sbb
pop
sub
or
cmp
ss
icebp
mov
ret
inc
shrl
cmp
push
sbb
sarl
adcb
shl
add
stos
inc
dec
mov
rorl
in
or
in
fidivl
bound
or
sbb
shlb
aas
aaa
andb
js
push
shr
add
lea
jmp
arpl
inc
movsl
into
popa
pusha
jmp
js
xor
movsb
cld
mov
daa
test
movsl
stos
adc
dec
mov
or
xlat
cmp
cmp
sub
push
inc
stos
push
mov
dec
daa
xor
insl
cs
add
or
stos
mov
dec
in
subl
lcall
in
test
stos
or
inc
js
push
xchg
push
ljmp
sub
dec
roll
call
pop
cs
lret
lret
push
jae
lret
es
cmp
rcl
sub
xor
sbb
push
sub
jnp
push
insl
xchg
arpl
mov
sahf
push
adc
or
testl
pushf
and
inc
out
imul
subb
lods
ret
mov
xchg
add
mov
insb
mov
lret
pop
lods
dec
mov
loopne
jno
addl
sub
mov
int
add
sub
push
push
jae
popf
jge
je
in
ljmp
adc
ljmp
adc
rorb
fmul
mov
xchg
out
rorb
sbb
das
mov
push
or
hlt
inc
push
ror
push
xor
dec
ja
adc
add
call
fwait
imulb
pop
shll
cmp
dec
ja
icebp
add
sbb
movsb
push
icebp
incl
aad
mov
sarb
lods
pusha
push
dec
ucomiss
mov
inc
inc
aad
xor
jl
or
pop
out
mov
je
lcall
dec
stos
sbb
loopne
sbb
aad
sub
out
adc
rorb
inc
or
jb
adc
lods
pusha
les
mov
push
outsb
imul
pop
cltd
bound
sbbl
sbb
rol
add
ss
dec
data16
push
push
mov
aad
mov
dec
out
add
into
or
es
mov
push
inc
pop
push
and
sarb
push
fcomps
adc
lcall
stos
lret
negb
arpl
push
inc
in
jecxz
in
rcrb
das
and
sub
outsb
adc
ret
add
sub
daa
jo
pop
outsb
pop
mov
adc
inc
hlt
sub
pop
rcl
mov
adc
out
cmp
fsub
sub
loope
stos
popf
hlt
mov
sbb
cld
push
xlat
sbb
sbb
stos
pusha
andb
inc
in
lea
jno
mov
xor
das
sbb
hlt
pop
je
xor
mov
adc
sub
cmp
loopne
sbb
cmp
insl
pop
mov
xchg
jmp
hlt
pop
xor
inc
lret
gs
outsb
pop
sub
push
xchg
cmp
lods
mov
mov
fbstp
inc
add
flds
sub
cmpsb
adc
sarb
cmp
std
call
cld
adcl
xor
sub
pop
jne
std
out
lods
add
sub
jmp
popa
inc
mov
lods
and
pop
addr16
cld
pop
and
push
xor
inc
enter
cmp
outsl
rclb
cmpsb
mov
movsb
push
icebp
jb
ret
fs
xchg
dec
adc
sahf
add
push
pop
je
int
inc
jno
loopne
inc
xor
bound
xlat
jmp
push
sub
push
arpl
push
stos
inc
scas
pop
push
xor
pop
dec
les
mov
xor
lret
dec
cmp
xlat
lds
and
es
scas
xor
cwtl
call
jae
adc
or
mov
push
dec
cld
lret
mov
xchg
mov
sbb
int3
pop
push
arpl
fistl
rclb
jb
rcl
push
cmpsb
mov
push
mov
sbb
fdivl
xchg
dec
in
inc
imul
in
jne
rcrb
cltd
loopne
mov
push
xchg
xor
into
jno
jg
ljmp
jno
pop
xor
test
push
into
lret
or
dec
popf
or
popf
and
dec
mov
lcall
loope
bound
scas
in
loop
jp
sub
push
sbb
movsl
hlt
pop
xchg
cli
pop
test
test
push
xorb
sub
push
les
pop
movsl
mov
mov
data16
and
xor
mov
aas
loopne
ror
inc
and
sbb
stos
mov
andl
mov
and
into
adc
loopne
jno
rorb
jp
xor
dec
cmpsl
or
mov
xorb
sub
cs
sub
mov
insl
mov
enter
jl
stos
hlt
addl
pop
inc
test
and
cs
ljmp
mov
stos
push
pushf
xor
shrl
push
ret
push
pop
xchg
inc
sbbb
cmp
pusha
stc
pop
hlt
pusha
rcr
int3
xor
ds
and
jecxz
mov
nop
shlb
push
hlt
xor
mov
mov
push
sub
hlt
les
cmp
daa
ljmp
cwtl
subl
inc
push
mov
cld
adc
stos
aam
cmp
pop
or
xor
lret
and
adc
js
push
cld
addr16
shrb
push
pop
xchg
pop
jno
ds
out
add
lahf
and
add
pusha
xchg
test
xor
and
mov
xchg
aaa
pop
adc
xchg
ret
add
jmp
push
fildl
or
push
mov
xchg
jb
add
ret
sbbb
sahf
rolb
fwait
adc
push
cmp
lcall
movl
inc
adcb
loop
lods
cld
shr
and
test
adc
mov
in
popa
sbb
fnstenv
jg
adc
test
lea
adc
mov
xor
mov
sbb
sub
cmp
xchg
jo
negb
push
mov
shll
pop
mov
sar
je
jb
ljmp
lret
mov
lds
xorl
loope
daa
adc
xor
xchg
arpl
scas
mov
fsubs
gs
stos
in
push
aam
mov
adc
lods
inc
hlt
mov
ret
lods
xor
add
int3
in
aam
bound
inc
xchg
lcall
inc
jno
and
dec
lods
in
push
mov
test
pushf
mov
movsb
push
pop
inc
mov
xor
in
sub
mov
inc
or
pop
sbb
and
push
and
outsl
out
add
int
cmp
cmpsl
sbb
sbbl
push
cmpsl
sti
inc
jae
and
sbb
mov
ficompl
inc
push
xor
lock
imul
out
xchg
jae
xorb
push
inc
mov
inc
inc
dec
stos
jmp
stos
push
test
call
push
daa
fwait
adc
ljmp
icebp
mov
push
and
dec
inc
pop
imul
lret
mov
ret
pop
test
fdivl
inc
rorb
pop
aad
mov
shl
and
mov
movsl
sbb
into
xchg
xlat
sub
or
lret
pop
addr16
add
mov
inc
fstpl
loope
popf
cmp
pop
mov
pop
sbb
xchg
test
fimull
out
add
out
jl
cltd
je
add
and
test
inc
adc
dec
mov
dec
fs
sahf
mov
push
shlb
xor
cmp
push
inc
push
pusha
dec
or
push
je
arpl
leave
insl
test
dec
push
int3
cltd
test
shlb
push
push
or
lods
cmp
pop
rcrl
pop
lds
scas
and
cmpsl
fimuls
cmp
mov
test
mov
or
push
hlt
daa
xor
push
push
out
pop
orl
adc
inc
add
stc
or
fcmovb
lock
sub
shl
inc
sbb
xlat
or
shl
xor
lods
fsubl
add
fildl
aaa
addb
sub
test
aas
xchg
js
rorb
mov
jb
dec
inc
data16
push
cmp
dec
mov
pop
cmpsb
sbb
lock
push
inc
shrl
fisubl
push
je
sahf
push
lret
sub
push
adc
popa
int
xor
pop
ret
mov
push
sub
cmp
xor
or
mov
push
jo
outsb
hlt
stos
inc
lret
mov
imul
jb
mov
fs
or
jo
adc
add
or
shll
mov
inc
shrb
add
mov
cmpsl
out
out
lock
sbb
fisubl
lock
jl
or
stc
mov
pop
push
mov
mov
sbb
or
movl
cmp
push
or
xor
mov
inc
push
dec
and
xchg
push
push
adc
xchg
lret
into
pop
mov
or
lds
adc
stos
subl
ret
mov
pusha
jmp
xchg
test
or
fistpll
mov
outsb
mov
push
and
push
sub
add
xchg
test
sub
rorb
rcrl
jbe
rcrb
mov
push
aad
insb
shl
inc
push
xor
test
push
jae
mov
hlt
test
lcall
push
lods
in
loopne
dec
cld
mov
popf
leave
add
in
sbb
push
dec
add
xlat
lret
test
rep
sub
or
cmp
ljmp
xchg
aad
mov
sub
movsb
subl
fsub
mov
or
hlt
xor
or
pop
and
push
clc
mov
rcrb
sbbb
xor
shrb
add
inc
std
adc
add
popa
or
add
test
int3
inc
stc
sub
xor
adc
push
lock
jnp
sbb
clc
roll
add
ret
adc
or
inc
mov
roll
push
inc
leave
dec
jno
or
push
jmp
mov
inc
ret
inc
adc
addl
scas
mov
cmpsl
dec
icebp
push
mov
dec
fwait
inc
mov
or
dec
push
test
xchg
dec
inc
mov
add
jo
imul
cs
dec
fists
aaa
insl
pop
inc
mov
push
push
or
cmp
pop
aad
rorb
stos
cmp
push
stos
into
push
inc
shrl
sbb
xorl
das
hlt
insl
hlt
in
push
add
push
mov
push
rclb
and
xchg
adcb
mov
ret
push
add
xchg
push
insb
int
jo
mov
aad
push
test
push
int
out
inc
push
adc
out
scas
add
dec
mov
inc
inc
sbb
inc
andb
mov
fidivrl
xchg
orb
hlt
sub
mov
insl
icebp
xor
pop
gs
insb
es
adcl
testb
push
jp
xchg
out
mov
xchg
iret
decb
lods
add
fsubs
push
inc
mov
jle
clc
pop
inc
lock
mov
add
push
mov
mov
jno
je
test
or
jg
lret
das
fcmovb
mov
sbb
xchg
test
stos
jo
mov
and
mov
xor
push
stos
aas
idiv
pop
stos
xor
and
and
fidivrs
pusha
add
fxch
pop
test
add
hlt
scas
adc
fstpl
or
mov
lock
push
mov
lods
test
popf
stos
mov
adc
xor
xor
xor
or
jo
push
aad
stos
inc
movsl
dec
push
and
sub
push
mov
sub
mov
adc
xchg
ret
sar
lahf
iret
cli
test
push
xchg
sub
push
in
xor
out
mov
mov
in
mov
roll
push
shlb
hlt
and
or
add
dec
add
xor
mov
cwtl
mov
mov
xor
stos
mov
push
push
scas
lods
andb
add
sarb
iret
adc
enter
push
into
mov
cwtl
imul
sub
xor
mov
or
ret
loopne
gs
dec
out
movsl
call
sbb
inc
lods
dec
xor
pop
scas
or
push
mov
mov
sub
lea
or
xorb
vfrczps
clc
icebp
jae
or
xor
sbb
cld
cwtl
addl
sub
or
xor
add
cmp
xor
push
mov
lcall
jle
add
movsl
inc
xchg
inc
loopne
dec
outsb
stos
mov
adc
xchg
mov
sbb
and
xor
in
ljmp
pusha
push
add
fbld
dec
jno
mov
mov
ret
out
pusha
push
push
sub
dec
sbb
and
xor
ret
cwtl
and
imul
popa
jno
mov
shl
cmp
push
or
aam
scas
push
stos
push
jp
pop
push
push
xor
bound
pop
add
addb
scas
inc
dec
inc
cmp
test
mov
test
sbb
push
xchg
hlt
xchg
jmp
mov
cmpsb
add
xchg
jp
or
mov
dec
inc
cmpsl
or
add
aas
adc
bound
aam
out
mov
push
imul
daa
add
adc
dec
xor
imul
and
movsl
add
push
test
jmp
stos
adc
and
insl
add
mov
add
scas
pop
jge
xchg
pop
xchg
mov
cmp
or
adc
inc
adc
ja
or
popa
mov
sarl
and
push
popf
dec
xor
push
or
andl
out
cmp
push
arpl
mov
inc
in
out
adc
mov
mov
shlb
ror
sub
dec
push
push
jno
xlat
xor
lods
into
add
pop
pop
pusha
or
frstor
in
xchg
jae
lock
push
add
push
rcl
into
jecxz
ljmp
popf
xchg
mov
rcll
sbb
jno
daa
mov
mov
mov
aam
mov
mov
adc
loopne
xor
mov
aas
pushf
push
call
push
ficompl
push
pop
adc
sub
inc
mov
add
inc
in
fwait
push
loopne
cmp
inc
ret
xlat
push
push
xorl
jecxz
xchg
in
add
scas
popa
jl
aaa
pop
sub
dec
loopne
jp
rcrb
jae
sbb
gs
inc
in
mov
sub
push
sbb
or
dec
mov
sbb
xor
test
pop
rolb
pop
pop
call
dec
dec
add
xchg
je
roll
ret
mov
cmp
xor
add
xlat
or
dec
popa
ret
nop
xchg
scas
add
gs
push
jns
test
inc
ror
inc
jne
push
shlb
lahf
ds
mov
popa
ret
hlt
pop
mov
and
adc
push
insb
mov
jno
inc
adc
mov
add
and
out
orl
rcrb
dec
inc
popf
and
xchg
mov
inc
push
sbb
rcr
out
mov
mov
push
inc
mov
xchg
pop
jne
push
insl
lret
mov
and
mov
gs
xchg
dec
cwtl
push
shrl
or
or
mov
mov
mov
call
aam
sub
scas
pop
pop
mov
dec
aas
push
rcr
and
iret
add
push
xorl
adc
push
mov
xchg
loop
fdivs
pop
add
in
fisubrl
xchg
dec
sub
and
inc
cwtl
jne
xchg
sbb
and
mov
mov
mov
xor
mov
cmp
andb
aam
cs
push
out
les
add
cld
hlt
call
jge
mov
push
pop
dec
pusha
mov
jne
or
and
mov
sti
xor
sub
and
jp
cmp
ja
enter
dec
pop
mov
adc
xchg
or
and
mov
xchg
mov
add
push
push
and
sbb
xchg
hlt
lahf
inc
loope
jo
fs
sbb
ss
inc
roll
cltd
test
jbe
xor
push
jmp
push
imull
jnp
and
shlb
mov
movsb
add
pop
aam
and
mov
push
outsb
sub
add
mov
or
sti
mov
sbb
inc
inc
addr16
push
xor
lret
loope
xor
fadds
sub
into
adc
sub
cmpsb
rol
mov
push
outsl
or
fidivrl
subl
into
mov
xchg
out
mov
inc
scas
fs
shrl
or
leave
mov
icebp
inc
or
stc
jno
pop
dec
adc
or
push
xor
leave
xchg
stc
lcall
lcall
mov
rcrb
mov
xor
push
mov
outsb
inc
sub
or
stos
ljmp
mov
and
or
rorb
mov
xchg
push
leave
and
mov
cmp
cmpsb
daa
mov
ds
inc
mov
xchg
orb
push
add
pop
push
pop
mov
lods
adc
mov
gs
mov
cs
pop
inc
mov
inc
adc
sub
jmp
dec
push
jge
mov
cld
pop
rcll
out
push
xchg
stos
std
shlb
out
cmp
mov
sbb
scas
sub
ljmp
shll
mov
inc
sub
loope
cmp
lds
ss
jne
lcall
sub
mov
sbb
push
mov
xor
sbb
and
sbb
sub
pop
pop
ret
xchg
sub
or
and
fcoms
aad
or
sbb
lret
in
clc
or
and
fildll
sub
enter
rclb
sub
js
sbb
mov
add
icebp
mov
push
cmpsb
jg
sbb
pop
push
in
pop
or
adcb
das
or
cmpsl
jo
inc
out
xor
mov
stos
sbb
pop
adc
popf
push
add
mov
into
stos
adc
aaa
adc
rcll
popa
hlt
rcl
sbbb
inc
inc
loope
mov
xor
adc
xchg
sbb
into
lea
sub
call
xchg
push
popa
decb
dec
or
pop
daa
ret
sub
ret
mov
jno
shrb
xchg
hlt
jle
pop
ljmp
sbb
repz
scas
xor
mov
jp
je
rol
push
inc
xor
jbe
pop
inc
inc
test
test
pop
into
or
inc
in
sarb
push
test
xchg
pop
push
fdivs
or
dec
lods
notb
jne
cmc
mov
mov
stos
pop
icebp
inc
xchg
sub
sub
inc
insb
cmp
inc
dec
and
sub
and
mov
lcall
or
sub
dec
adc
inc
mov
mov
icebp
or
mov
push
sub
pop
add
or
dec
sbb
rolb
shrl
xor
ljmp
push
rorb
repz
mov
stc
daa
insl
mov
mov
test
pusha
or
jecxz
popa
or
test
mov
clc
ja
outsl
mov
or
rorl
rcpps
lret
bound
mov
push
rorl
jp
xor
sbb
orb
mov
std
mov
pop
dec
mov
in
add
add
sbb
lcall
rclb
loopne
xor
cmp
and
aam
repnz
add
mov
push
lea
jle
cmp
lcall
test
mov
clc
stc
pop
sub
mov
dec
dec
popf
mov
or
test
ljmp
inc
sub
aam
pop
xchg
push
mov
inc
out
jecxz
mov
xchg
sbb
push
jbe
test
aam
dec
jno
mov
shrb
cmp
pushf
jnp
loop
sbb
add
cwtl
mov
pop
movl
out
or
jp
pop
cmp
jns
stos
push
sub
mov
mov
push
pop
pop
push
mov
or
inc
dec
or
jb
insl
pusha
adc
dec
xor
hlt
or
add
fadds
mov
call
cltd
sbb
sub
bound
call
inc
push
mov
sub
sub
cmpb
inc
inc
stos
dec
fisttpll
cmp
mov
mov
adc
movsl
push
jg
add
aam
int
dec
fnstcw
push
out
sub
test
pop
cmp
loope
push
jp
inc
or
dec
adc
inc
sub
mov
or
imul
or
add
rol
stos
or
xchg
jo
jb
mov
inc
adc
or
mov
or
sbb
ficompl
dec
inc
mov
cwtl
xchg
inc
test
mov
mov
cmp
add
push
sub
sbb
add
cmp
mov
lret
mov
imul
loopne
fsub
stos
mov
subb
xchg
xor
ret
mov
xchg
jne
mov
adc
mov
push
rcrl
mov
cmpsb
cli
ror
pop
dec
inc
xchg
push
sahf
or
out
ds
scas
imul
push
dec
push
insl
lret
in
adc
mov
jb
in
stos
mov
pop
sbb
shll
ret
lcall
dec
in
test
cs
adc
cmpsl
mov
mov
les
mov
jns
ret
adc
mov
mov
add
or
lcall
and
flds
push
xchg
fisubrl
pop
call
aam
add
push
sub
push
test
mov
insl
mov
jge
lea
push
cmp
filds
xchg
mov
jl
mov
sbb
jecxz
push
or
xor
xor
pop
push
adc
outsl
outsb
add
dec
push
cltd
and
ljmp
mov
sub
sub
sahf
inc
add
dec
inc
dec
jbe
mov
lock
sbb
addb
push
xor
adc
mov
sub
pusha
push
inc
loopne
cmp
mov
xor
jmp
orl
test
push
mov
loope
push
clc
adc
or
push
ret
cmp
or
jb
test
gs
adc
xor
mov
rorb
ljmp
out
or
sbb
call
jnp
xchg
and
test
cmp
loope
cmp
stos
fidivrl
ret
daa
adc
sti
enter
or
mov
push
add
ret
rcll
sbb
sub
push
test
sub
push
lcall
gs
xchg
push
xor
popa
shlb
cli
pusha
test
add
push
cmp
sbb
inc
ficompl
scas
mov
rcrb
and
adc
mov
enter
mov
sarb
mov
push
arpl
in
loopne
sahf
ret
sub
xchg
xor
sahf
cmp
push
sub
add
lea
pop
xor
pusha
movsl
mov
push
fmul
js
mov
mov
mov
out
cmp
jns
jo
rcrl
mov
push
adc
mov
dec
rcl
xor
push
jo
popf
xchg
push
rcr
out
dec
fisttpll
hlt
pop
push
xor
ljmp
sub
cmp
or
adcb
scas
orl
sub
frstor
jb
xorb
outsb
cmp
xchg
adc
js
mov
sar
add
xor
ficoms
inc
add
push
sbb
dec
push
les
jg
cmp
xor
pop
push
lods
xchg
ja
int3
push
cmp
hlt
aas
adc
repz
fidivrl
xlat
or
push
pop
out
pusha
mov
fsts
mov
into
test
or
dec
xchg
add
into
orb
xor
mov
int
dec
shrl
sbb
int
push
cmp
test
push
ret
ret
sub
and
push
sub
outsl
inc
cmp
test
inc
dec
sub
xor
dec
pop
les
and
nop
dec
xor
ret
inc
stc
inc
inc
push
lret
into
lret
stos
aam
jecxz
test
dec
add
mov
lea
arpl
dec
fsubrs
mov
fisubs
or
andb
enter
inc
movsl
and
popf
and
sahf
pop
insb
daa
in
inc
movsl
inc
xor
cmp
inc
out
adc
mov
hlt
add
mov
loopne
jo
dec
add
fstpl
inc
adc
mov
mov
mulb
and
test
test
rclb
or
fisubs
loope
loopne
rcll
inc
daa
ljmp
dec
sbb
jg
push
pop
adc
push
je
jb
insl
test
xlat
push
dec
ds
inc
mov
data16
adc
scas
mov
cwtl
sbb
inc
mov
mov
xor
mov
aad
repz
push
mov
inc
testl
xor
sbb
or
lods
test
inc
lea
in
sbbb
mov
inc
mov
loopne
inc
sbb
and
ss
add
or
inc
push
sbb
push
fmuls
hlt
test
test
adc
pop
xor
push
test
mov
and
lock
lock
hlt
adc
or
rclb
repnz
dec
sub
ror
and
cmp
fsubrp
mov
xor
mov
xchg
mov
lcall
mov
stos
inc
xor
aas
shrl
push
xor
dec
ret
push
aam
push
mov
pop
pop
sub
mov
lcall
repz
into
pop
outsl
loope
jp
imul
jb
cmp
pop
les
mov
mov
pusha
sbbl
mov
pop
add
cmc
mov
cmc
gs
add
push
hlt
lock
mov
shlb
shll
popf
pop
adc
xchg
test
cmp
mov
push
mov
xor
or
adc
adc
cmp
ljmp
mov
pop
jnp
mov
out
add
sub
add
mov
add
rcrl
sbb
inc
aas
jo
push
addr16
mov
in
push
sub
pop
pushf
in
pop
popa
iret
es
pop
faddl
or
faddp
dec
mov
cmp
fsubrs
adc
orb
mov
add
mov
pop
xchg
pusha
stos
pop
or
notb
cmp
flds
mov
cmpsb
gs
sti
xor
inc
pop
gs
rclb
adc
xchg
test
into
push
stc
hlt
dec
ljmp
mov
add
ret
dec
adc
in
clc
inc
add
addl
push
lret
xchg
xor
adc
xchg
xchg
in
inc
movsb
mov
cmp
and
inc
gs
push
cld
push
add
push
sahf
push
scas
nop
push
pop
or
gs
in
ja
insl
inc
push
popl
stc
push
inc
dec
push
incl
jb
or
inc
add
roll
pop
add
inc
pushl
mov
sub
sbb
pop
ljmp
cld
js
add
rclb
add
cld
shll
je
add
mov
imul
pop
cli
inc
dec
adc
pop
add
loopne
icebp
sbb
cld
shlb
stos
push
mov
pop
mov
jl
push
sbb
jg
pusha
rorl
inc
rolb
mov
lret
mov
add
in
mov
out
sbb
test
bound
xchg
shll
sbb
push
adc
arpl
jle
xor
sbb
mov
fadds
cltd
out
cmpsb
mov
shlb
sbb
mov
cmpsb
cmp
jp
pop
ja
add
add
cmp
xchg
cmpl
add
inc
data16
loop
xchg
scas
jo
bound
out
dec
leave
sub
idivb
popa
int
or
add
bound
int
mov
xchg
loope
pop
cmp
mov
push
push
or
addb
cld
mov
push
sub
mov
jb
gs
xor
fcmovbe
stos
test
cwtl
and
in
sub
cmpsl
pop
xor
inc
mov
lods
push
pop
xchg
or
add
adc
sub
mov
xor
mov
adc
adc
mov
xchg
xlat
pushf
jmp
imul
test
shll
xor
mov
jo
inc
mov
or
fimull
pop
int3
outsb
jle
movsb
xchg
test
xor
push
and
lret
into
mov
dec
add
xchg
push
loopne
lea
or
adc
out
popa
mov
push
inc
dec
daa
inc
mov
aad
push
pop
and
idivb
mov
subl
clc
cs
dec
cmp
rolb
push
adc
mulb
jmp
loopne
mov
inc
inc
fwait
mov
add
nop
mov
push
xor
int
inc
leave
ret
das
xlat
sbbb
pop
mov
inc
mov
mov
push
int
xchg
ret
inc
mov
bound
ret
inc
inc
gs
sub
push
mov
add
push
xchg
sub
and
rorb
sbb
jb
mov
mov
aam
gs
es
dec
dec
or
aam
sub
popf
mov
sar
mov
es
jae
fcomi
and
fmuls
cld
sbb
jle
cs
jbe
cmp
icebp
je
jnp
ret
ficoml
inc
dec
mov
dec
adc
adc
push
shrd
adc
add
or
test
subl
dec
out
ret
xchg
push
je
insl
mov
inc
dec
scas
mov
inc
mov
pop
cmpsb
hlt
test
cld
push
and
pop
xor
gs
pop
jno
sbb
add
mov
cmpsb
and
mov
or
xor
push
hlt
push
xor
cmpsl
xchg
subl
or
ja
push
inc
cmpl
mov
push
add
mov
mov
fcmovnbe
xchg
mov
mov
subl
mov
sbb
addl
addb
inc
mov
js
and
sub
psrlw
addb
push
adc
les
cld
xchg
inc
cmc
mov
push
mov
outsl
les
hlt
mov
mov
add
fildll
lock
add
mov
xor
add
add
sbbl
pushf
adc
and
or
mov
call
popf
inc
xor
in
and
pop
aaa
inc
add
mov
cmp
pop
mov
push
out
outsb
xchg
mov
test
adcb
sub
push
lcall
shrl
dec
shl
aad
mov
aam
adc
cltd
addb
sbb
pusha
imul
roll
cmp
inc
mov
mov
add
scas
pop
mov
in
add
push
or
sbb
cwtl
mov
fs
add
xchg
dec
jne
adc
add
popa
xchg
push
push
scas
test
add
mov
inc
lret
adc
mov
outsb
fiaddl
pop
das
xor
xor
or
mov
sbb
je
in
mov
cli
lea
sub
stos
lea
mov
mov
rorb
push
sbb
test
rol
mov
push
js
sbbb
sbb
das
xor
jno
and
mov
and
pusha
stos
sbb
xor
add
mov
shrb
pop
pop
js
push
add
inc
push
mov
ret
lahf
mov
push
test
int
mov
unpcklps
inc
dec
out
mov
add
jnp
mov
shll
and
inc
and
add
loopne
push
sub
ret
fcom
fcom
inc
jae
inc
repz
inc
mov
dec
cmp
xor
js,pt
mov
pop
shrl
cmp
adcb
sar
xchg
arpl
and
xchg
jno
mov
add
dec
jbe
pop
por
jae
push
dec
adc
lock
cs
or
push
push
rcrl
and
pop
lcall
cmp
and
inc
adc
xchg
and
inc
enter
xchg
int
ja
cmpsb
scas
sbbb
inc
xor
mov
mov
sub
mov
mov
std
inc
mov
rcrl
adc
or
pop
lret
je
mov
rcl
xchg
adc
dec
xchg
and
cld
lret
sub
push
push
sahf
shll
push
sub
loopne
scas
into
es
rorl
push
push
inc
loope
cmpsl
stos
sarb
dec
dec
sbb
pop
push
mov
js
sbbb
hlt
inc
adc
push
sub
into
icebp
ret
push
xchg
push
lds
aam
pop
and
xor
fisubs
popf
or
dec
xchg
aaa
add
push
adc
fcoms
stc
iret
push
dec
mov
push
test
sbb
push
ret
rolb
rcll
into
rolb
mov
dec
scas
das
sbb
hlt
and
dec
notb
xor
xchg
jge
jecxz
mov
inc
in
jo
lret
daa
push
ret
gs
loopne
inc
mov
push
push
jns
or
roll
push
jg
pop
cmp
les
adcb
xchg
lea
xor
pop
sub
lods
inc
sub
fs
pop
cmp
mov
inc
outsl
push
inc
mov
mulb
xor
push
sbb
add
inc
loope
or
or
fsubs
mov
jbe
movsl
incl
shrl
je
sub
fidivrs
scas
push
sub
imul
cld
cmp
and
push
test
jl
aas
add
jge
adc
leave
mov
out
push
lock
mov
mov
dec
push
shlb
cmp
test
cli
cmp
out
je
rorl
clc
ljmp
pop
xor
loopne
fsubs
mov
into
fstpt
push
mov
movsl
push
jecxz
gs
push
push
mov
pop
push
adcl
ljmp
rcrl
push
ret
scas
fcomi
and
xor
push
add
mov
jnp
mov
shrl
pop
ficoms
push
xchg
sub
aad
cli
sub
inc
pop
aad
push
push
xlat
or
mov
inc
fists
sub
mov
arpl
inc
rcrb
scas
xchg
mov
jb
pop
lods
push
xchg
sbb
clc
bound
pop
stos
scas
add
ja
mov
mov
mov
es
push
jb
or
fcoml
aam
sub
add
or
sbb
mov
jge
or
sub
inc
or
push
int
das
andl
push
adc
and
jne
push
mov
jo
int
arpl
addb
add
idivb
push
mov
mov
and
jb
dec
inc
iret
cmp
cmp
gs
push
jo
push
xor
adc
das
popf
pop
push
popf
mov
fwait
popf
into
loope
cwtl
mov
std
cmpsb
dec
scas
pop
inc
push
ss
addl
dec
mov
mov
mov
shrl
push
mov
sbb
pop
shlb
lahf
dec
aad
outsl
adc
mov
inc
dec
fnstsw
stos
cltd
lret
daa
and
in
cltd
iret
adc
call
stc
mov
es
push
int3
jae
stos
mov
gs
rolb
sahf
and
test
nop
test
mov
jmp
inc
cmp
roll
push
aas
test
add
inc
lods
push
cmc
dec
add
jp
jbe
xchg
lret
fcompl
mov
sub
xchg
pushf
push
sbb
or
stos
or
loopne
aas
mov
in
mov
xchg
gs
mov
stos
and
push
sub
paddw
inc
jne
outsl
mov
add
push
hlt
mov
push
daa
push
cmpb
mov
lds
xor
inc
sbb
in
sbb
mov
lea
call
rcll
or
lahf
cmp
push
and
pop
out
push
into
push
in
cld
fldt
int
shlb
popa
dec
mov
or
inc
mov
fisubl
xor
sbb
adc
sbb
pop
jo
mov
dec
je
adc
xor
shll
mull
inc
cs
scas
jae
fcoms
stos
push
xchg
xor
mov
ja
addb
mov
lods
inc
push
push
sbb
mov
push
dec
sub
lret
mov
add
rorb
inc
rol
adc
cld
add
push
cmp
inc
aam
jnp
jae
sti
and
mov
push
ret
dec
mov
add
andb
gs
int
cs
dec
jno
inc
add
out
dec
inc
mov
mov
mov
adc
mov
pop
ss
pushf
aad
adc
mov
mov
into
mov
js
insl
sbb
mov
andb
mov
aas
gs
push
addb
js
in
or
movl
insb
lods
xlat
add
push
lcall
push
jge
and
mov
xchg
pop
sbb
jecxz
inc
push
leave
sub
sbb
rorl
sub
push
sub
in
inc
pushf
shll
xchg
add
mov
push
shlb
gs
mov
mov
dec
push
int3
jg
adc
call
jmp
adc
iret
cld
or
xchg
and
add
jp
mov
test
mov
nop
mov
mov
in
jp
xor
inc
ret
push
ret
pop
sub
pop
xchg
jo
mov
adcl
bound
stc
out
jno
sbb
sbb
scas
stos
push
push
je
fistpl
jno
shll
stos
push
nop
repnz
cmp
int
add
pop
dec
sahf
movsl
push
adc
push
shlb
lret
loop
stos
inc
aad
loope
jb
daa
pop
pop
mov
lods
pop
mov
sbb
loopne
sarb
mov
in
hlt
xor
xchg
loop
stos
mov
push
lea
push
and
nop
and
adc
adc
dec
hlt
cld
into
into
push
ja
sub
movsb
ss
rcrl
add
adc
lock
jne
cwtl
or
lods
test
xchg
shlb
enter
dec
add
add
mov
push
xchg
inc
ds
push
bound
dec
in
cs
jmp
xchg
mov
mov
jge
xor
sbb
inc
xor
loopne
jae
cmpb
pushf
xor
inc
jae
cmc
sub
enter
in
pop
je
lods
sahf
sti
cmp
bound
filds
and
xor
cmpb
fbstp
ja
lods
adc
push
push
pop
iret
sbb
popl
mov
mov
inc
aad
subl
rorb
loop
push
in
mov
pop
xor
leave
insl
mov
sbb
add
loop
adc
lahf
sbb
ja
push
jb
lods
mov
mov
inc
push
cld
inc
hlt
push
mov
pop
jmp
aad
divb
xchg
push
enter
cmpsb
imul
mov
pop
test
add
dec
dec
push
push
cmpsb
mov
loopne
push
dec
adc
lds
dec
sarb
pop
push
or
sbb
cltd
movsl
dec
push
inc
cmp
lea
mov
cmpb
mov
test
add
mov
mov
add
lea
xchg
imul
push
popf
imul
fwait
pushf
xchg
cmp
daa
leave
cmp
xor
js
xchg
popf
pop
push
xor
inc
repnz
dec
inc
stos
aam
loop
int3
or
push
aam
cmp
stos
inc
mov
test
pushf
xchg
dec
loope
lea
gs
add
inc
mov
add
lds
ljmp
bound
jg
daa
mov
mov
and
mov
cwtl
cmp
popa
dec
jno
ret
push
push
xor
sbb
lock
roll
scas
mov
pusha
das
jbe
adc
sbb
addr16
add
movsl
test
push
fsubs
adc
lods
shlb
mov
pop
test
rol
test
mov
das
xor
in
mov
ljmp
cld
sahf
mov
fldl
mov
add
icebp
mov
popa
add
jle
fstpl
dec
jns
inc
jae
or
iret
push
iret
adc
scas
inc
in
in
in
pop
push
or
outsl
lods
and
movsb
dec
adcb
add
lods
incb
push
clc
ja
sarb
outsb
inc
push
icebp
outsl
add
sub
pusha
scas
aad
shlb
mov
loop
aad
or
inc
sbb
push
lea
adc
jmp
inc
orl
hlt
lcall
add
dec
mov
add
jge
mov
xlat
cmp
xor
mov
push
or
lock
xor
add
bound
sbb
movl
push
adc
push
lods
push
das
add
leave
sbb
mov
pop
jb
mov
mov
and
lcall
add
ret
cli
test
or
ret
inc
or
cmpsb
dec
lods
ja
and
mov
push
pop
je
aam
xor
xor
or
inc
arpl
out
shll
shrb
sar
inc
xchg
dec
jo
sub
xor
in
or
imul
cltd
add
enter
sub
xor
sub
dec
sbb
push
lods
add
sub
rolb
cs
hlt
lock
mov
outsl
enter
inc
int3
popf
adcl
adc
sbbb
out
mov
add
and
lods
stos
xor
loope
sub
insb
mov
jb
cmp
inc
inc
mov
or
xchg
pop
test
and
xor
fchs
xor
jo
push
sub
jbe
adc
xor
scas
push
push
stos
mov
in
aam
fistpl
ljmp
lods
push
pop
mov
imul
push
mov
imul
stos
js
inc
das
cwtl
icebp
or
aaa
add
or
xchg
outsb
push
push
dec
insb
icebp
add
xchg
lret
pusha
sbb
xor
mov
roll
add
addl
dec
adc
push
arpl
xchg
popf
mov
gs
xchg
adc
adc
mov
inc
into
mov
adc
sbb
push
scas
stos
and
push
xchg
dec
jl
cld
jne
cwtl
ljmp
or
cltd
push
dec
dec
or
xor
in
je
shrl
cmpsl
dec
cld
push
add
pop
mov
add
adc
gs
out
mov
outsl
addb
pop
adc
loope
pusha
test
and
mov
adc
xchg
mov
out
adc
inc
mov
dec
fdivl
sbb
pop
add
inc
push
add
dec
leave
jno
push
addl
add
cwtl
sahf
popf
mov
mov
mov
mov
in
dec
xchg
adc
addl
fsubl
pop
mov
jns
xor
stos
add
xorl
mov
mov
shll
aad
fdivs
lcall
fldenv
daa
lcall
mov
sub
adc
es
add
dec
push
xor
into
cmpsb
lcall
rcll
adc
mov
test
insb
cmp
add
inc
nop
ret
adc
aaa
ds
pop
nop
and
dec
jecxz
mov
sub
or
mov
sbb
mov
mov
aad
inc
xor
sbb
sbb
sbb
imul
pushl
add
push
add
mov
das
add
sub
sbb
add
mov
std
fildll
ljmp
fidivrs
dec
push
mov
cs
insb
ljmp
add
sbb
cwtl
lea
push
jne
push
and
cwtl
ljmp
addl
add
push
cwtl
in
fld
dec
pushl
and
push
movsb
repz
push
push
mov
insb
push
inc
lock
aas
mov
push
adc
sub
negl
aam
sub
in
xor
and
sbb
pop
pushf
adc
xchg
mov
nop
testb
sahf
lret
adc
lea
push
test
out
inc
xor
addr16
test
insb
movsl
mov
adc
bound
xorb
jge
push
cli
mov
in
cmp
xor
and
xor
cltd
inc
dec
sub
lock
cmp
mov
push
addr16
add
sub
adc
cmp
mov
push
mov
push
rorb
adc
xchg
loop
std
mov
push
xchg
call
adc
repz
inc
mov
in
cmp
std
pop
inc
jo
sti
pop
addl
test
add
xor
sub
push
out
mov
sub
and
pop
loope
dec
push
cld
lock
jbe
pop
dec
mov
xorb
lds
jl
or
in
add
les
pop
iret
or
loop
mov
roll
cmp
pop
mov
sbb
cli
push
push
dec
lcall
and
stc
inc
arpl
addb
aad
cmpsb
dec
inc
xor
popa
adc
push
rorl
test
insl
pop
mov
cmp
mov
inc
dec
mov
jno
sar
jo
test
cmp
hlt
cli
iret
or
rolb
inc
push
insb
shlb
xchg
cmp
std
out
push
xchg
jno
mov
gs
or
push
mov
mov
mov
jno
mov
fdivrl
mov
mov
insl
push
notb
sub
movsl
jnp
sub
mov
mov
xchg
or
mov
push
lret
xchg
cli
aam
mov
shll
movl
push
sbb
cmc
xchg
mov
mov
cmp
xchg
sub
and
orb
mov
test
push
mov
mov
int3
test
enter
jno
or
or
push
cmp
mov
add
shrl
or
mov
nop
jno
hlt
shr
xchg
mov
pop
inc
mov
xor
aas
scas
aam
cmp
cmp
lret
push
stos
imul
xchg
dec
arpl
faddp
mul
imul
xor
pop
addb
mov
and
rol
ss
add
add
outsl
adc
dec
sbb
into
mov
add
aad
xor
out
mov
mov
mov
add
jbe
cmpsl
arpl
lods
scas
cmpsl
add
fs
into
test
roll
inc
inc
lcall
mov
ret
rcrb
daa
push
inc
idivb
push
andl
dec
lcall
std
call
add
mov
add
jle
adc
mov
stos
adc
in
pusha
daa
mov
and
fwait
mov
inc
lahf
dec
adc
cmpl
lock
and
xlat
mov
cld
bound
sarb
inc
push
insb
stos
fwait
inc
mov
lcall
push
mov
stc
push
and
xor
jge
gs
and
into
lds
stc
xchg
push
test
out
add
les
test
jo
sbb
fs
add
cld
pop
mov
cmp
mov
pop
lahf
mov
icebp
andl
scas
testb
mov
fsubrl
mov
jne
mov
jo
rclb
sub
xor
popa
les
cmp
int3
adc
and
mov
adc
or
inc
pop
push
or
lods
mov
push
inc
mov
pop
punpckldq
icebp
xchg
or
je
fdivr
mov
push
mov
or
lods
mov
jne
popa
mov
pop
mov
and
sbb
cmp
enter
aad
ja
xor
cmp
loope
xor
les
inc
push
iret
add
call
out
imul
and
dec
adc
inc
add
dec
mov
mov
mov
xor
aad
inc
or
sub
add
add
sbb
dec
inc
mov
mov
or
add
sbb
ja
sbb
inc
sbb
nop
jns
add
adcb
pop
shll
call
push
nop
ret
dec
scas
push
rcl
xchg
add
sub
dec
popf
ficoml
aam
lcallw
inc
mov
xor
cmp
lret
divl
aaa
inc
pop
xor
dec
lea
or
movsl
push
shlb
pop
lds
hlt
in
gs
cmpsb
jp
loopne
mov
jmp
pop
xor
andl
xor
bound
loop
add
jecxz
gs
loopne
shll
sbb
imul
lods
xor
push
hlt
sbbl
mov
in
repz
xor
mov
adc
shll
call
in
adc
or
mov
rclb
push
aaa
nop
sub
add
int3
sub
ds
ret
push
rcl
cltd
imul
xor
adc
aam
dec
scas
out
adc
test
or
dec
std
inc
adc
inc
subl
mov
rclb
shr
adc
pusha
inc
xor
int
xor
sbb
mov
sub
lret
sbb
xlat
xor
jbe
bound
sub
dec
push
cmp
xor
dec
mov
adc
out
xor
mov
push
daa
or
or
inc
test
sbb
int3
loope
jecxz
push
js
xchg
push
cld
inc
icebp
jbe
loopne
xchg
jns
mov
in
fcomip
xchg
push
add
loope
jb
xor
mov
shlb
pop
pushf
orb
loopne
cmp
xlat
and
stos
into
mov
test
in
je
test
xor
mov
lods
or
add
stos
adc
mov
mov
out
mov
or
sub
dec
jno
stos
out
cld
inc
add
cld
cmp
inc
mov
add
pminsw
xor
gs
out
fstl
add
hlt
or
inc
adc
mov
push
lods
mov
mov
mov
adc
mov
push
add
and
sbb
jp
push
sbbb
cmp
mov
mov
test
mov
xchg
xchg
test
push
mov
lea
popa
dec
inc
testb
adc
test
xchg
fisubrl
rcll
inc
orl
mov
rol
mov
lea
rcl
or
dec
pop
cmp
push
in
lock
cld
adc
fs
push
fsubrs
fadds
push
inc
add
notb
mov
xchg
adcb
je
push
ss
sbb
push
stos
push
sbb
int3
add
sbb
divl
sub
add
and
xor
push
dec
into
js
mov
and
mov
fsts
push
jo
mov
scas
gs
cmpsb
test
add
xchg
jmp
xchg
subl
add
ret
iret
dec
pusha
ret
sub
aad
pop
shrb
adc
cwtl
mov
or
es
add
inc
adc
mov
mov
cld
fwait
inc
push
mov
add
xchg
pop
into
mov
decl
push
and
insb
cmpb
icebp
lea
push
jecxz
xor
xor
and
mov
pop
js
bound
fs
add
xchg
gs
inc
push
in
popa
fisubl
add
mov
rcll
mov
xchg
pop
pop
cmc
addl
jae
into
out
js
lret
pop
in
dec
add
push
push
xlat
lret
inc
push
mov
cmp
pop
stos
pop
popa
mov
adc
scas
cmp
popa
mov
inc
push
lret
in
add
pop
xchg
xor
xchg
sbb
xor
in
or
xor
adc
test
dec
sub
cld
jle
sub
dec
xor
mov
mulb
add
mov
jl
push
jb
cli
dec
repz
cmp
rorl
insl
fsubrs
cli
loop
daa
mov
fnstsw
out
ret
sbb
jo
and
jnp
push
rclb
xor
jae
xor
or
dec
mov
dec
iret
into
xlat
xchg
imul
pop
nop
loopne
sbb
inc
push
mov
shrl
add
xchg
jecxz
imul
mov
push
add
jno
lods
xchg
mov
inc
aam
push
mov
sub
andb
xchg
aam
adc
iret
into
sbb
inc
cmp
mov
dec
xor
adc
outsl
xchg
aaa
add
repnz
fwait
mov
or
andb
push
insl
mov
sub
gs
nop
mov
cmc
out
rcll
popa
dec
in
dec
cmp
or
adcb
out
add
cld
aas
mov
pop
add
push
jno
sbb
or
jmp
into
pop
test
icebp
dec
inc
adc
inc
sbb
add
mov
dec
jne
xchg
jae
mov
lds
decb
xor
or
shlb
out
adc
ja
inc
mov
adc
jo
jne
popa
mov
aad
arpl
sub
jp
lcall
pop
xchg
stos
mov
jae
jp
ja
inc
add
mov
sub
xchg
push
shl
push
fistps
imul
sbb
hlt
push
test
or
decb
sub
ret
xor
xor
sub
lahf
and
test
aad
xor
xchg
sub
push
movsb
sub
jmp
xchg
adc
xor
leave
pop
xchg
add
movsb
les
js
cmp
push
bound
xchg
pop
loope
sarl
clc
or
add
pop
hlt
pop
push
jp
or
mov
jbe
push
inc
lods
cld
popf
add
mov
push
xchg
xchg
add
jne
sub
pushf
push
inc
bound
mov
adc
adc
mov
mov
bound
xor
roll
push
sub
sarb
push
add
inc
nop
xchg
dec
pop
add
adc
daa
adc
arpl
dec
cmp
sub
leave
adc
mov
roll
or
das
mov
and
push
rorb
jb
push
loopne
mov
aam
insl
sub
and
ja
xlat
push
adc
or
into
fwait
rorl
or
push
icebp
call
mov
subb
insl
inc
les
ljmp
mov
or
dec
jb
mov
mov
adc
aas
iret
cld
push
sub
xor
push
test
out
xor
cmpsb
in
es
push
hlt
sub
movsb
push
mov
clc
movsl
out
in
push
xor
adc
sub
add
cmp
cmp
lcall
aam
and
loopne
cld
push
scas
or
dec
adc
adc
sub
sub
jmp
xchg
adc
icebp
dec
xor
andl
mov
imull
dec
rclb
adc
or
bound
pop
lea
or
test
ficoms
mov
inc
mov
aam
mov
mov
outsl
jno
cmpsb
pusha
sbb
cmc
jo
adc
push
jmp
cmp
bound
bound
addr16
and
popl
sbb
ljmp
push
and
pop
or
mov
ficoms
enter
jp
cmpsl
push
mov
and
mov
js
sbb
dec
cmp
scas
divl
mov
hlt
roll
fbstp
add
adc
outsl
xor
lcall
movsl
push
rolb
stos
xchg
lock
les
push
hlt
pop
popf
xlat
or
in
mov
or
add
cmpsb
mov
lock
push
cmpsb
or
mov
pminub
inc
push
mov
inc
jbe
hlt
mov
icebp
insl
mul
arpl
sbb
inc
jae
repnz
dec
out
xlat
sub
dec
in
imul
dec
adc
cmp
adc
hlt
pop
and
ss
mov
mov
adc
cwtl
xchg
aas
in
inc
insb
push
add
xchg
dec
insb
xlat
cmp
mov
loopne
sbb
sbb
add
cld
mov
fisubrl
mov
xlat
mov
into
nop
mov
lods
into
push
add
and
inc
scas
in
mov
shlb
out
jb
ja
push
in
outsb
dec
add
or
mov
mov
inc
mov
xor
mov
hlt
addb
or
or
pushf
push
and
inc
les
lods
int3
cmp
adc
les
ljmp
hlt
mov
mov
das
jb
cltd
fldenv
lods
mov
daa
mov
fisubl
inc
or
cld
jno
stos
add
ret
clc
adc
xor
andb
mov
jno
or
ljmp
cwtl
enter
frstor
cld
sbb
push
adc
lea
xchg
test
push
int
dec
lahf
cmpsl
fadds
adcl
and
mov
gs
xorl
and
lea
push
jno
pop
notl
push
fs
mov
sub
mov
popf
sbb
pop
xor
rcrb
movsb
ror
aad
xor
or
bound
sbb
pop
pushf
mov
mov
rcrl
add
or
mov
mov
sahf
dec
daa
inc
mov
add
xor
addb
sub
mov
mov
sbb
inc
test
push
xor
sub
xorl
and
jno
cmp
adc
out
call
push
push
mov
pop
mov
push
inc
xchg
mov
dec
and
push
shrb
adc
fimull
push
daa
sub
flds
or
loope
xor
mov
rcrb
call
aam
inc
call
lahf
sbb
or
mov
cmp
lock
cmp
test
rorl
ss
mov
clc
add
nop
xor
dec
jp
dec
stos
inc
inc
ret
aam
fwait
mov
jb
jb
jge
pop
loopne
inc
xchg
xchg
into
xor
aad
sbb
push
xchg
add
dec
add
iret
inc
inc
cmpsb
add
sbb
mov
gs
mov
aad
mov
imul
mov
movsb
jno
mov
rolb
xlat
mov
push
test
mov
add
out
stos
or
sub
push
sbbb
lds
xor
mov
lods
pop
lea
stos
push
dec
lcall
xor
fimull
cwtl
jne
scas
pop
scas
and
scas
jns
pop
xor
lock
sub
stc
bound
iret
es
subb
lods
or
test
xor
inc
lock
mov
pushl
xor
in
pop
rcl
mov
dec
ss
xlat
sbb
popa
mov
cmp
out
push
sub
sub
pop
add
push
mov
push
mov
adc
mov
push
frstor
aam
ljmp
cmp
mov
push
mov
adc
mov
add
rclb
outsl
bound
test
and
ret
in
inc
lods
loope
inc
pop
mov
cmp
jne
cmp
sbb
pop
pop
sub
imul
adc
inc
xor
iret
stos
pop
add
rolb
and
outsl
pop
and
jno
dec
mov
inc
lahf
push
shlb
and
adc
inc
or
jb
inc
pop
cwtl
mov
xchg
add
mov
xchg
in
sbb
push
std
das
mov
sbb
adc
add
add
std
push
mov
negl
push
push
inc
and
cli
cs
mov
repnz
pushf
or
add
and
imul
sar
add
in
push
int
sub
mov
sub
push
aam
stos
sbb
cmp
or
cmp
sub
jb
in
sbb
je
andb
sbb
insb
andb
cmp
inc
fbstp
dec
dec
imul
xor
decl
and
add
popa
mov
mov
pop
je
or
xor
cwtl
les
jnp
push
daa
js
inc
cwtl
push
mov
cmp
aad
mov
and
pusha
cltd
notb
test
arpl
sbb
mov
inc
shr
lcall
push
xor
out
adc
cmp
dec
sub
sbb
cmpsb
in
popa
loope
adc
lock
add
adc
adc
mov
mov
pop
jne
pop
das
lcall
les
sub
add
cmp
cmp
mov
xchg
cmpsb
std
scas
fsubs
pop
adc
pop
or
mov
jp
mov
fnstsw
pop
xchg
cmp
cs
or
or
lds
cmp
push
out
xchg
add
add
mov
inc
das
mov
rorb
insb
pop
mov
mov
in
ljmp
push
add
or
movsl
push
push
xchg
bound
nop
jo
dec
push
aam
rclb
push
lret
push
lds
mov
add
test
xchg
ss
xchg
leave
inc
pop
jae
orb
cmp
add
xor
rcll
orb
dec
es
xor
into
push
sub
stos
lods
leave
les
mov
pop
es
rolb
cmp
adc
push
sbb
mov
xchg
add
sbb
bound
dec
movsl
aas
arpl
mov
cmp
pop
mov
cmp
shlb
stos
mov
jns
adc
push
cmova
xlat
dec
daa
aam
mov
adc
dec
cmp
mov
out
fiadds
add
sub
add
sub
das
mov
jge
mov
pop
sub
shrb
pop
lcall
test
lahf
pop
jo
test
test
test
inc
or
scas
aaa
icebp
aam
push
add
xor
jns
jl
cs
stos
xor
cld
adc
fs
adc
or
pop
lds
stos
popa
lock
icebp
and
add
xor
and
push
push
ljmp
push
daa
xchg
sub
cmp
xchg
inc
adcb
push
xorb
jo
xor
dec
jno
sub
movsl
push
cs
add
js
adc
addl
je
daa
lea
mov
adcl
mov
mov
es
sub
push
dec
or
xchg
mov
sub
push
adc
mov
xchg
int3
fld
out
adc
aam
cltd
popa
xor
sbb
aam
into
push
mov
stos
add
hlt
xchg
mov
insl
push
sub
pop
jecxz
dec
or
xchg
and
cmove
jno
loopne
xchg
out
test
popf
add
pop
cld
mov
pushf
daa
adc
cld
sub
in
test
mov
push
fdivs
sub
add
cmpsb
scas
push
or
inc
cmp
jno
push
xor
adc
test
or
inc
xor
fdivr
mov
push
adc
jae
sbb
push
push
push
or
je
addb
test
aam
std
cmp
cs
stos
dec
xorl
adc
jno
jae
inc
scas
push
aaa
dec
shrb
adc
xor
dec
shll
nop
lahf
inc
push
adc
in
test
mov
xor
lcall
rol
add
mov
push
divl
sahf
adc
jo
in
smsw
mov
push
fwait
or
jb
add
fsubl
add
xor
sahf
add
xchg
and
add
enter
ret
or
pop
pop
mov
ss
push
xor
pop
stc
xor
push
xor
rolb
inc
rcrb
or
inc
add
popa
xor
test
xchg
fisubrl
or
out
push
repz
inc
sbb
jmp
sub
or
xor
add
push
pop
mov
push
lods
ret
push
mov
adcb
push
cmp
inc
pop
lret
ret
rol
push
push
dec
in
jo
jo
inc
jnp
adc
push
shrl
ds
add
hlt
dec
sub
xor
insl
sub
adc
push
test
push
mov
push
adc
mov
inc
pusha
or
repz
xor
push
cs
pop
shll
sbb
inc
cld
clc
adc
or
inc
push
lcall
pop
sub
lret
rolb
adc
or
cmpsb
clc
inc
mov
ja
mov
push
add
cmpb
shrl
push
lcall
inc
cltd
push
mov
mov
xchg
movsb
inc
test
aad
mov
xor
push
push
lods
or
add
ja
es
or
sbb
loopne
inc
es
xor
inc
push
push
jno
int3
cld
mov
and
xchg
arpl
mov
push
mov
dec
cmpsb
ret
leave
loopne
push
cmp
sub
aad
hlt
rcrb
js
sbb
adc
jno
inc
cs
push
sbb
dec
xor
aas
jae
rolb
adc
test
fmuls
xor
cld
mov
cmpb
jecxz
imul
push
push
push
add
mov
mov
push
inc
add
mov
sub
clc
shlb
pop
adc
inc
sub
incl
iretw
mov
dec
mov
std
jg
add
pusha
aas
pop
mov
mov
mov
adc
mov
loopne
push
push
add
js
hlt
shrb
icebp
pop
sarb
lods
xorb
adc
adc
addb
jbe
inc
mov
jo
cmc
movsl
xlat
dec
pop
adc
mov
mov
cmp
ret
andl
pop
aad
fidivrl
inc
cs
jle
lret
loope
jo
insl
stos
loope
sarl
add
add
sub
add
ljmp
aad
stos
mov
cld
push
aaa
mov
sub
fdivs
adc
pop
mov
pop
push
pop
mov
cmpl
leave
inc
sub
sbb
ljmp
mov
insb
adc
out
and
push
popa
hlt
aaa
xor
jnp
mov
daa
push
mov
mov
xchg
xor
and
sti
mov
or
or
mov
hlt
rorb
mov
xchg
test
pop
mov
sub
or
stos
dec
shll
add
pop
adc
adc
lods
xor
jns
in
dec
xor
rcl
mov
push
jae
inc
out
mov
ljmp
add
xchg
push
mov
or
push
mov
add
or
nop
jle
adc
ret
xor
adc
jo
clc
jne
ret
sbbb
mov
push
adc
mov
or
jp
loopne
sbb
out
mov
jecxz
lock
shlb
xchg
sti
xchg
lods
addl
push
add
xor
cmp
xchg
fadds
rorl
add
pop
mov
inc
nop
subb
hlt
inc
mov
push
push
sub
mov
icebp
fcmovnbe
push
scas
xor
or
adcb
int
loop
test
rclb
loopne
test
mov
call
xchg
out
inc
pop
mov
or
adc
sub
pop
sub
gs
leave
mov
jno
or
xor
sub
lods
mov
dec
pop
popa
addr16
subb
cmpb
cwtl
pop
inc
in
push
mov
addl
sub
sbb
adc
inc
jno
iret
mov
pop
jnp
add
mov
sbb
mov
inc
es
jbe
insb
icebp
cltd
and
lcall
shrb
push
in
movsl
sub
xor
inc
jne
push
aad
pop
adc
leave
adc
loopne
out
loope
inc
add
mov
addr16
and
test
jnp
imul
lea
sbb
add
pop
xchg
int
in
inc
and
adc
mov
into
fisubrl
sub
dec
scas
shll
or
add
or
inc
mov
dec
movsl
push
push
mov
out
addl
push
sub
cld
iret
cmpsb
sub
xchg
xchg
repz
pushf
inc
pushf
inc
push
push
test
adc
push
mov
mov
test
ret
push
pop
lret
push
or
or
popa
lcall
mov
push
mov
ljmp
dec
adc
jg
or
sub
mov
adc
fiadds
mov
pop
ficoml
outsl
add
or
adc
inc
repz
add
cmp
push
inc
sbb
lret
dec
mov
sub
sbb
pop
adc
ret
cmp
cmpb
cwtl
out
jl
aad
mov
imull
rorl
dec
pop
sbb
dec
push
mov
scas
push
sbb
xor
xchg
dec
add
cmc
dec
xchg
ja
inc
cmp
and
xchg
or
add
ret
addb
stc
int3
push
sbb
mov
xor
mov
xor
adc
and
or
shlb
pop
sarb
lods
push
jp
sub
and
mov
ja
push
push
add
fwait
mov
test
or
stos
pusha
inc
in
in
jnp
adc
inc
gs
mov
leave
sbb
adc
imul
cwtl
mov
cmp
lods
cmp
or
call
add
gs
insb
test
xor
test
jno
mov
mov
push
aam
mov
xchg
add
pop
popa
sti
sbb
sbb
pop
and
jnp
test
pop
adcb
cmc
pop
fdivrl
mov
mov
int3
mov
adc
cmp
push
adcl
inc
inc
loope
xchg
push
cltd
add
add
and
xchg
sub
ja
jl
add
xor
mov
in
and
fucomp
push
das
test
push
add
fisttps
push
add
sarb
outsb
pop
cmpb
xchg
sbb
mov
pop
push
xchg
fcom
jb
and
mov
adc
jmp
nop
in
cmp
dec
push
inc
mov
inc
sti
sub
inc
push
push
daa
or
fstps
aas
les
dec
loopne
and
add
fimuls
add
stos
xchg
or
jbe
or
push
cs
fisubs
dec
cmp
jo
test
xchg
mov
shrb
mov
daa
mov
lds
mov
je
dec
je
sbb
lods
enter
mov
add
shlb
stos
sbb
loopne
icebp
mov
loopne
popa
stos
push
ret
ret
pop
add
loop
or
xchg
or
les
mov
push
push
or
xor
arpl
outsl
ret
mov
mov
mov
push
lret
add
insl
sahf
out
push
mov
inc
imul
mov
xchg
pop
popa
adc
ja
push
inc
das
mov
daa
mov
xchg
fisubrl
lea
add
xor
xchg
sbb
push
je
jno
das
insl
aad
adc
lods
shlb
pop
xchg
push
shll
cmovp
sub
pop
and
xchg
mov
sub
nop
mov
cmp
pop
pop
aam
jge
out
cmpps
jae
or
data16
mov
mov
popa
pop
add
imul
mov
nop
sub
push
push
inc
stos
negb
sub
mov
inc
push
ret
test
mov
ret
push
daa
mov
movsb
adc
sub
or
dec
mov
jno
mov
mov
in
jno
or
sub
push
rol
lock
cltd
ja
cld
or
cmp
insb
repz
jae
aad
cmpl
xchg
ljmp
loope
je
xchg
xchg
bound
enter
xchg
cmp
inc
dec
mov
outsb
push
fwait
mov
pusha
add
fcmovb
frstor
jno
inc
cltd
fimuls
gs
mov
mov
adc
jb
jo
adc
loopne
push
lea
into
xor
xor
mov
mov
sti
adc
push
xchg
adc
call
pop
push
add
int
bound
sub
sub
fnsave
fstpl
mov
mov
hlt
add
cmp
fcoml
mov
cld
lret
pop
imul
aaa
mov
and
pop
loopne
and
test
lea
sbb
xor
pushf
mov
adc
push
dec
or
loop
jae
lcall
mov
test
inc
xor
inc
call
into
mov
or
push
pop
ret
xorl
pushf
test
mov
cmp
xor
insl
add
and
rolb
and
js
ret
mov
jo
inc
cwtl
mov
inc
dec
ret
push
mov
shrl
mov
dec
or
xor
lds
push
xchg
xor
stos
pushf
pop
xor
lret
lcall
xor
cltd
sbb
inc
dec
jo
jnp
push
sub
or
mov
push
ds
scas
jae
bound
int
stos
and
push
dec
xor
mov
popf
ret
push
sbb
in
push
inc
je
cltd
add
mov
xorb
adc
xor
insl
push
repz
pushf
outsl
adc
loopne
std
add
xor
mov
sbb
decl
loopne
test
cli
shlb
dec
push
mov
cmp
adc
add
sub
mov
inc
pop
test
inc
test
jle
dec
pop
daa
call
mov
add
ret
mov
scas
mov
test
test
loopne
aaa
sbb
push
mov
add
push
dec
adc
bound
and
mov
sub
dec
mov
sahf
or
sbb
ret
xchg
stos
cld
and
add
pop
cld
sub
xor
call
movl
aam
cmp
dec
xor
fcoml
cmpsl
int
iret
sub
lods
or
aaa
icebp
cmp
mov
rolb
mov
add
mov
shrd
outsl
inc
inc
or
xchg
dec
cmpsl
pop
arpl
pop
mov
ss
repz
cld
mov
fiaddl
add
inc
fldt
mov
jmp
stos
cmc
fnsave
lcall
xorb
pop
aam
sbb
push
pop
push
gs
cwtl
push
nop
sub
add
xor
dec
movsb
rclb
movsl
and
cmpsl
sbb
out
push
mov
mov
xchg
hlt
cmpsb
dec
push
nop
mov
mov
in
add
inc
add
mov
inc
mov
lods
pop
subl
sub
dec
add
pop
nop
gs
adcl
jnp
adcb
mov
sbb
mov
sub
sbb
test
and
movb
pop
fimuls
sub
ljmp
rcrl
icebp
incl
cmp
mov
jne
dec
je
jg
int3
ljmp
outsl
sbb
jo
add
mov
sub
testb
pop
jb
inc
pop
outsb
push
inc
fcomi
cmp
jne
pop
adc
loopne
ja
aaa
fs
arpl
repnz
inc
movl
pop
xor
dec
adc
mov
mov
dec
push
pop
mulb
sbbb
push
scas
lods
pushf
daa
xorb
pop
adc
in
and
xchg
pop
mov
or
mov
cmp
movsl
or
dec
frstor
loopne
stos
jl
mov
dec
cmpsl
movsb
ficomps
lock
mov
dec
inc
mov
out
cli
test
rolb
dec
add
mov
sbb
jne
dec
loopne
mov
lock
and
dec
cli
popa
test
inc
arpl
pop
inc
or
test
bound
inc
xchg
js
inc
pop
sbb
add
lcall
jp
adc
jnp
mov
jg,pt
mov
cmc
cmc
sahf
mov
insb
sub
call
pop
adc
mov
cmc
or
cwtl
andl
inc
movsl
mov
stos
or
lods
sbbb
and
push
fnstenv
mov
mov
push
shufps
mov
or
cmc
mov
cwtl
popa
jge
iret
xor
mov
inc
mov
repnz
mov
es
ljmp
testl
scas
jmp
inc
cld
lcall
sub
shrb
mov
addl
inc
int
test
pop
outsl
add
popa
cld
jo
push
cmp
push
adc
cs
xor
adc
mov
or
jbe
add
mov
lods
lcall
adc
jnp
adc
sbb
aaa
roll
cld
jnp
adc
mov
mov
hlt
sbb
arpl
icebp
cmpsb
dec
sub
lcall
inc
arpl
mov
inc
orb
add
cwtl
lock
in
ss
push
movlps
data16
jg
push
movsb
pusha
test
xor
push
sbb
mov
or
insb
inc
aaa
push
mov
test
lds
xor
popf
inc
lret
cmp
out
lcall
fcoml
and
rcll
xor
mov
xchg
cmp
mov
orb
pop
shrb
push
xchg
test
push
pop
ret
sub
jno
lcall
dec
inc
pop
and
xor
pushf
inc
dec
mov
inc
aad
mov
cmp
lods
mov
add
fxch
mov
bound
lahf
and
add
push
fadd
nop
jg
sbbb
and
ret
add
lock
or
or
adc
rorl
adc
push
or
adc
mov
xchg
lret
cmp
int3
inc
push
adcl
mov
dec
inc
mov
or
mov
lret
pop
aad
in
push
js
push
out
mov
loop
inc
jno
jle
xlat
mov
aam
aas
push
out
pop
xchg
test
xor
pop
xchg
popa
sarl
stc
nop
pop
add
out
shrb
mov
aad
push
xor
push
push
or
mov
cmc
in
cld
data16
sahf
push
dec
cmp
in
or
xor
xchg
inc
sti
push
or
xor
push
enter
call
pop
test
in
cli
mov
je
lcall
lds
inc
add
xchg
cmp
jno
pop
sbb
mov
bound
mov
push
dec
popf
nop
sub
dec
mov
or
shrl
imul
jl
mov
in
cmovle
mov
adc
add
jno
ret
mov
scas
hlt
dec
push
xor
xor
stc
push
push
push
inc
pop
mov
stos
add
jns
mov
add
inc
add
mov
stos
mov
scas
inc
lods
or
rcr
dec
int
add
push
cmp
push
add
mov
xchg
sbb
and
sbb
out
shll
decb
int
mov
xchg
mov
sbb
and
arpl
jecxz
push
push
jmp
sbb
enter
dec
lds
xor
nop
push
xchg
out
cmc
cmp
mov
xchg
insl
ret
push
cmp
push
dec
adc
jmp
pop
jo
jmp
xor
pop
add
mov
or
xor
out
pop
adc
int
add
cmp
mov
lods
add
cmp
movsb
mov
rcll
popf
sub
mov
sbb
jno
sbb
hlt
stc
jno
push
insl
push
xchg
test
push
fld
and
aam
movsl
mov
jno
adc
std
sbb
inc
test
hlt
inc
mov
jl
add
sub
pop
pop
fs
dec
add
push
and
test
cmp
test
xchg
cli
mov
scas
mov
in
mov
inc
add
adc
pop
fidivs
mov
mov
push
xchg
btr
setg
leave
mov
rolb
cmp
in
inc
shl
mov
rcrb
add
xchg
sbb
cld
ret
jnp
mov
and
sub
or
push
and
stos
xor
xlat
fcomps
xchg
push
mov
out
mov
out
adc
add
lcall
sti
mov
xchg
push
popa
jecxz
xchg
xchg
in
jbe
pop
xor
fs
sub
popa
pop
shll
rclb
add
sub
and
dec
cld
sbb
loop
lahf
push
mov
mov
push
cmp
hlt
lcall
push
shlb
inc
mov
xchg
test
movsb
jno
adc
mov
into
addr16
dec
imul
test
xor
test
push
and
aaa
or
inc
sbb
leave
rcl
aad
into
pop
mov
push
ror
adc
inc
mov
pop
stc
adc
xchg
stos
xor
mov
cmp
stos
inc
sti
and
adc
mov
sub
pop
scas
andb
push
or
test
and
mov
pop
orl
or
mov
cmpsl
iret
in
dec
stos
out
inc
adc
in
fs
icebp
push
add
dec
xchg
popa
mov
xor
push
shll
dec
insb
mov
rcrb
dec
hlt
shrl
daa
scas
jo
push
sbb
push
lds
sbb
fcmovb
xorl
les
shll
inc
into
add
stos
jnp
jl
or
dec
mov
add
cltd
dec
pop
mov
cwtl
sbb
nop
sub
bound
mov
into
ficoml
push
lcall
sbbl
push
sub
xor
lds
sub
icebp
sub
ja
xor
mov
cmc
movsb
mov
dec
adc
call
dec
adc
push
iret
in
loopne
inc
add
inc
sub
fisubrs
ficoml
insb
push
lcall
test
and
into
popa
adc
fistpll
mov
add
add
ja
or
xor
push
aas
aaa
sub
jge
jg
std
jnp
shl
repz
leave
cli
mov
addr16
push
sbb
or
cmp
es
popf
jp
fidivrs
scas
add
push
push
mov
push
cmpsb
andl
es
pop
inc
sti
sbb
loope
jp
arpl
test
fildl
xchg
pop
dec
int3
push
sub
push
push
fmuls
inc
adc
xor
push
dec
jb
xlat
dec
imul
pop
and
push
lods
pop
dec
add
or
adcl
insl
bound
or
test
test
test
or
or
push
sbb
scas
bound
sub
test
pop
gs
sahf
mov
ljmp
out
inc
mov
lock
push
sub
xchg
inc
jae
sarl
adc
xor
fsubs
push
roll
lods
or
jb
lds
jnp
sub
gs
adc
mov
sahf
cmp
cmc
xorb
inc
xor
cmp
mov
shl
xor
cmp
ret
fisubrs
negl
mov
push
or
lahf
mov
in
call
push
jge
and
fwait
add
xor
movsl
xchg
mov
push
clc
dec
into
dec
fsubp
call
jno
and
aad
fmul
and
mov
jno
add
or
pop
xchg
sub
es
add
or
xor
repnz
pop
push
and
nop
mov
scas
push
or
push
movsl
cwtl
ficoms
jae
xor
loop
dec
pop
movsb
movsl
or
hlt
pop
arpl
clc
fmuls
inc
xchg
xchg
push
sarb
sub
inc
ret
mov
dec
fcomp
inc
out
sub
into
xor
sub
je
adc
jo
mov
mov
inc
ja
daa
mov
test
aas
subb
mov
mov
lods
ja
lea
rolb
dec
push
pusha
jp
mov
ret
into
and
adc
adc
iret
sbb
test
or
or
mov
test
push
mov
pop
adc
push
xor
mov
jmp
lods
loope
push
mov
add
pop
push
mov
mov
add
bound
sbb
mov
sbb
add
cmp
aam
inc
scas
sub
clc
dec
iret
mov
pop
daa
ret
rorb
mov
data16
test
ds
mov
sbb
dec
outsl
push
insl
aam
dec
inc
inc
sbb
ret
roll
add
sub
mov
lock
hlt
loop
mov
hlt
mov
fimull
shrl
insb
push
lcall
xorl
mov
add
xchg
push
test
add
ljmp
lock
dec
jb
clc
iret
arpl
rcll
rcrl
stc
enter
push
sub
outsl
andnps
add
cmp
mov
pop
pop
cmpsb
and
xor
scas
insl
inc
aaa
xchg
jns
xchg
and
jb
lds
stos
les
cltd
dec
loope
insl
inc
mov
or
ret
test
sub
mov
sbb
inc
daa
mov
or
cmc
sbb
push
ror
push
in
inc
mov
stos
push
cmc
jbe
sub
adc
dec
dec
and
adc
dec
or
sbb
cld
pop
cwtl
mov
push
insl
inc
sbb
push
mov
mov
shlw
scas
ret
cs
inc
add
es
or
fdivr
cs
loopne
push
jg
lcall
push
mov
inc
shl
and
lods
add
dec
scas
mov
pop
inc
loop
pop
xchg
imul
adc
or
jmp
and
test
xchg
and
aas
in
push
add
mov
call
mov
or
pusha
ret
xchg
dec
pop
sbb
cmp
movsb
inc
mov
lea
dec
cmp
test
adc
push
addr16
pop
cmp
or
cmp
dec
add
adc
push
mov
in
aad
mov
ds
mov
xchg
loopne
inc
daa
icebp
push
jge
test
insb
daa
daa
cmp
mov
mov
aam
rorb
mov
adc
pop
daa
cli
das
adc
stos
sti
inc
sbbb
and
or
ss
icebp
and
push
push
sti
js
sidtl
flds
fucomip
xor
lds
les
pop
sarb
push
xor
dec
push
jl
pop
sub
daa
cmc
roll
push
gs
rorb
adc
xchg
push
and
inc
push
xor
sub
icebp
cmp
and
loop
mov
adc
loopne
pop
dec
pop
dec
mov
mov
jge
mov
cltd
ds
lcall
into
xor
mov
push
pop
fistpl
mov
sub
or
sbb
or
sub
subl
sarl
xchg
inc
icebp
aad
push
scas
push
idiv
es
mov
adcb
add
push
aam
pop
out
jne
push
sbb
push
mov
scas
pop
add
pop
inc
xor
pop
out
icebp
cmp
jecxz
add
cmp
sbb
push
mov
es
hlt
lods
and
push
sub
xlat
movsl
call
mov
pop
xlat
inc
daa
in
icebp
push
movsb
pop
fsubr
adc
sub
xchg
rdmsr
inc
adc
andb
test
gs
movsl
and
les
aaa
ror
adc
jnp
aad
aam
add
in
xor
xor
inc
lock
cmp
jg
faddl
mov
xor
int
cwtl
gs
fildl
add
outsb
inc
rol
notl
push
jl
outsb
push
sbb
repnz
push
lea
pop
in
cmp
into
shrb
pop
ljmp
aas
sbb
mov
push
lret
adc
mov
incl
sarl
jl
dec
cmpsl
cs
ret
aaa
in
ss
loopne
stc
or
add
in
mov
shll
or
int3
adc
pop
jne
fs
mov
into
push
mov
adcl
jp
fnstenv
mov
sbb
or
mov
call
popf
addl
pop
in
inc
push
add
xor
scas
and
sbb
adc
fmul
and
push
hlt
negb
aad
dec
add
sub
add
add
xor
dec
testb
push
sub
sbbb
mov
shr
clc
std
cli
xor
add
and
jne
mov
cli
mov
arpl
dec
shrl
push
push
mov
imul
add
pop
mov
sar
mov
jno
or
inc
into
out
jo
pop
popf
jb
jb
and
xor
sbb
js
sub
add
inc
roll
push
and
jg
adc
jle
and
jmp
jle
mov
cwtl
xchg
and
lcall
and
jg
std
aaa
mov
cltd
das
and
dec
es
out
out
cmc
out
inc
xorb
xor
or
mov
jb
dec
mov
jb
sub
push
mov
out
enter
cmp
orl
out
or
xor
daa
mov
cmp
or
lahf
add
pop
cmp
sbb
add
es
xchg
out
mov
addr16
mov
loop
mov
call
pop
addr16
in
jns
push
loopne
jae
mov
imul
mov
xorl
fistpll
adc
and
sbb
cwtl
jnp
fiadds
add
push
sahf
das
xor
jmp
jle
and
push
inc
push
js
sub
and
mov
xchg
icebp
sub
or
pop
popa
and
std
out
faddl
xor
pop
lret
pop
cli
in
std
into
mov
jl
add
sub
adc
sub
cmpsb
and
pop
divl
add
inc
and
cmp
cmp
jge
inc
pop
ljmp
push
cld
mov
mov
push
adc
jae
daa
mov
cmp
js
jns
add
push
mov
outsb
adc
mov
loopw
xlat
and
std
out
add
inc
xor
out
popa
out
xchg
and
loope
outsl
mov
adc
mov
inc
mov
cmp
or
dec
inc
out
roll
pop
ret
jge
fsubl
and
divb
shrb
fistpll
push
mov
stos
rorl
add
loop
sbb
sti
and
or
out
fdivrl
imul
in
aaa
adc
push
jmp
inc
and
into
mov
inc
xchg
push
ror
ja
ja
gs
in
sbb
pop
lods
mov
dec
push
clc
xchg
and
jnp
ss
or
repz
mov
push
xchg
data16
jp
cmp
jg
jb
jne
mov
clc
out
cld
rol
lods
mov
sbb
and
sbb
fisubrs
stos
popf
jg
cmp
sbb
push
lret
add
insb
dec
pop
scas
inc
xchg
in
mov
pop
mov
and
jne
int3
lds
cmp
lret
test
rcrl
mov
lock
sbb
or
adcb
push
pop
sub
decb
jge
add
sarl
pusha
sarb
outsl
and
jmp
out
sbb
inc
lret
lods
cmp
mov
or
aad
enter
and
aas
ret
sub
or
rolb
fs
cmp
jecxz
mov
pop
mov
adc
jbe
iret
inc
push
iret
clc
adc
xchg
xchg
cld
push
arpl
jnp
clc
out
jecxz
in
out
xchg
out
test
jg
jle
movsl
xor
and
jl
xor
adc
lret
lahf
icebp
ja
mov
or
mov
jae
stos
daa
pop
jo
filds
xchg
jns
jae
push
mov
cmp
jnp
pop
push
stos
jo
in
sbb
lcall
out
sbb
aas
mov
leave
fdivrl
clc
pop
xor
fwait
cmpsl
mov
mov
jmp
subb
ret
inc
sub
shl
push
std
add
dec
pusha
test
repnz
sti
cs
xchg
cli
scas
enter
adc
cmp
cltd
dec
mov
enter
jb
cmp
mov
sbb
arpl
jne
loope
outsl
out
outsl
dec
dec
sub
adc
fistps
mov
mov
nop
pop
adc
js
sub
and
in
fists
lods
out
or
push
adc
loopne
ficomps
xchg
insl
mov
fadds
dec
movsb
xor
mov
inc
outsl
push
mov
mov
aam
and
xor
and
loopne
push
out
dec
clc
shlb
jecxz
mov
movsb
cmp
jle
incb
testl
insb
lahf
or
xchg
fidivs
sbb
or
mov
cmp
fcomip
movsb
decl
or
and
cmp
ds
adc
mov
data16
ficomps
push
dec
jg
mov
out
pushf
sbb
sub
inc
jecxz
xchg
popf
stc
xor
mov
jecxz
pop
fmuls
lret
pop
sbb
mov
xchg
jle
sub
push
call
aam
sbb
jnp
jg
push
mov
jns
inc
imul
jl
negl
push
lcall
incb
inc
dec
and
and
fwait
push
dec
movsl
fisubrl
jg
pushl
mov
sbb
sub
or
mov
lock
jg
cli
in
cmp
xor
mov
pop
dec
subl
jecxz
and
xchg
cwtl
pop
adc
adc
add
out
lea
push
jecxz
mov
stc
push
outsb
push
mov
push
adcl
mov
aas
sub
ss
loopne
jp
adcl
cmp
sti
lahf
in
push
loop
inc
scas
add
cmc
mov
jg
add
cwtl
jge
pop
and
xchg
icebp
mov
sub
fcoms
out
fdivr
ljmp
xchg
pop
xchg
jle
sbb
popf
and
jnp
jo
es
stos
inc
cli
jno
in
cwtl
outsb
mov
mov
jo
jmp
cmp
push
push
sub
jmp
or
in
lcall
iret
xor
mov
shll
xchg
add
pushl
insb
mull
adc
pop
and
mov
test
mov
xchg
push
jno
lahf
mov
loope
aas
mov
push
out
insb
and
inc
enter
lock
in
fwait
lret
rol
adc
pop
xor
jg
subb
push
lret
js
les
aad
cld
int
into
sti
cmp
leave
and
sbbb
movsb
or
xbegin
daa
mov
mov
daa
mov
inc
mov
aas
xchg
jmp
mov
lds
out
dec
scas
adc
icebp
xor
cmp
and
sub
add
mov
loop
lock
xor
push
jg
test
or
push
scas
pop
fdivrp
or
cmp
xor
aaa
cltd
lcall
mov
jl
filds
xchg
ret
add
dec
add
inc
rorb
xchg
sbb
cmp
adc
xchg
in
jg
lcall
jecxz
jg
pop
lods
test
push
and
push
jg
out
hlt
je
mov
sbb
xor
fdivrs
and
pop
cmp
leave
arpl
aas
adc
mov
flds
outsl
movsl
cmpsl
jmp
call
mov
imul
fdivrs
je
ret
pop
lret
fmul
cmc
mov
jae
out
jg
adc
addl
data16
xchg
pop
out
mov
dec
add
sbb
xor
repnz
sbb
cld
fcmovne
aam
xchg
push
jo
shll
inc
and
add
out
xor
pop
dec
cltd
ljmp
test
pop
push
pushl
int
out
or
xor
adc
mov
sti
jmp
xchg
xchg
in
imul
mov
sbb
xchg
daa
add
or
and
and
pop
and
negb
mov
jmp
cld
cmp
add
xor
ss
pop
mov
ret
mov
xchg
pop
dec
sub
into
lea
and
sti
out
jge
inc
int
cmp
lods
mov
scas
inc
cmp
mov
hlt
inc
shlb
sub
loop
out
aas
and
pop
frstor
cli
xor
inc
push
adc
insb
dec
push
dec
jae
loope
aas
jno
enter
shlb
push
dec
xchg
decb
rol
or
sbb
fildll
fadds
and
mov
jle
ds
js
cmp
add
sarl
pop
cmpsl
mov
sbb
movsl
mov
xchg
sbb
pop
sti
scas
lods
adc
and
sbb
cmpsl
out
rorl
sbb
push
mov
adc
out
sub
cmc
mov
mov
add
enter
push
test
xchg
add
loopne
sbb
insl
xchg
int3
xor
xor
rcrb
xchg
push
cld
mov
popf
push
pushf
sub
pop
xchg
cmp
insl
and
inc
lods
jle
test
aas
dec
stc
push
fsubs
jmp
fldenv
mov
fdivrs
pop
push
je
cmc
pop
imul
mov
and
push
cs
push
sub
xchg
jmp
lock
mov
loop
stos
inc
add
loope
dec
mov
or
xchg
sti
mull
cmp
and
jg
jns
mov
jmp
push
dec
xorb
jae
adc
mov
jns
mov
mov
jg
xchg
fwait
rolb
xchg
cmpsb
outsl
in
stos
pushf
imul
dec
rcrb
out
pop
nop
cld
sbb
inc
int3
mov
adc
loopne
jo
mulb
push
adc
and
dec
cmpsl
in
bound
inc
outsb
add
lds
add
cmp
clc
adc
test
push
mov
lret
icebp
pushl
sub
push
cmp
inc
xchg
add
push
aad
aam
flds
cld
adc
mov
xor
pop
popf
sbb
jg
dec
sti
aaa
mov
lock
aad
dec
dec
push
das
xchg
xchg
stos
int
cmpsl
pop
pop
adc
add
xor
mov
inc
stos
gs
add
aaa
or
iret
std
and
mov
jl
sub
test
sarl
bound
shlb
xor
aad
fisubrl
fs
jno
imul
repz
and
sahf
out
jge
daa
xchg
adc
cwtl
xchg
bound
xchg
pop
sti
es
lock
push
add
push
clc
jecxz
aad
sar
sar
lods
push
in
cmp
mov
push
popa
inc
cmp
jge
jle
xchg
dec
xchg
pop
or
aaa
lods
mov
jno
into
adc
cmp
add
cmpsb
jge
lock
adc
push
mov
lods
scas
sbb
sbb
test
jg
clc
dec
sbbl
pusha
out
xor
inc
aaa
and
jmp
cmp
ljmp
call
call
fnstenv
call
int3
lcall
mov
add
ror
shlb
cmp
popa
loop
lcall
jg
mov
and
mov
cmc
jmp
roll
mov
cmpsl
pop
lret
andl
neg
pop
mov
in
sbb
pop
xlat
outsb
test
pop
mov
mov
je
jl
cmpsb
lret
lret
mov
movsl
adc
out
and
into
and
sub
push
sti
in
cmp
outsl
inc
mov
sarb
fistps
jnp
je
inc
cmp
mov
jecxz
enter
cli
and
inc
push
into
xor
inc
xchg
imul
xor
aas
sbb
rorb
popf
ljmp
decl
stos
push
push
testb
mov
pushl
aam
xchg
xchg
test
or
movsl
mov
negb
and
push
iret
sbb
sarb
repz
xchg
cmpl
imul
xor
xchg
movsb
push
loopne
mov
lret
inc
or
lods
xchg
cli
jb,pn
cmp
je
mov
sar
mov
xlat
cmp
cmp
or
lahf
sub
jmp
fildll
and
push
loope
xor
cli
mov
jg
and
cmpsb
fwait
mov
xchg
xlat
push
ffreep
cli
xlat
aam
mov
and
mov
filds
pushf
lods
dec
jle
in
insb
sbb
fs
or
jg
fidivs
dec
xchg
inc
aad
popa
mov
and
push
jecxz
ljmp
mov
fmull
es
popf
addl
sti
sbb
dec
sbb
jnp
sti
jge
cmpsl
xor
xor
pop
mov
in
add
jbe
cmpsb
jae
push
adc
jnp
or
or
push
loope
pop
addr16
jmp
cmpsb
xor
pop
call
pop
mov
push
test
jecxz
jo
mov
lea
adc
xchg
and
adc
sub
and
or
lcall
pxor
lods
and
push
mov
xor
std
lcall
nop
jg
xor
aad
dec
aas
les
into
cmp
in
inc
arpl
xchg
lret
popf
hlt
sub
pop
xchg
fstl
adc
int3
jp
ja
in
notl
leave
cmp
aad
repnz
add
mov
push
std
filds
add
lret
xchg
out
pushf
fwait
mov
sti
pop
out
pusha
mov
pop
pusha
sarl
sbb
cmc
movups
cli
stos
push
and
shlb
add
push
adc
xchg
inc
pushf
jp
jnp
std
fadd
sub
in
mov
in
and
decl
pop
sbb
cmp
adc
call
idivl
push
mov
aas
sti
sub
pop
xor
aaa
xor
outsl
push
jb
mov
sub
and
scas
movsl
cmc
cmp
or
xlat
sahf
inc
insl
xlat
add
into
sbb
inc
in
xchg
or
aas
inc
adc
sub
and
and
das
xchg
add
imul
pop
or
aas
and
adc
test
bound
iret
daa
enter
daa
in
nop
fldenv
and
leave
sarl
call
int3
mov
fs
inc
fwait
sub
outsb
int
sbb
popf
and
sub
paddusb
cli
icebp
ret
push
adc
arpl
jo
mov
fldcw
push
fwait
out
mov
and
mov
ret
addr16
mov
out
lret
jo
pop
in
push
in
bound
incl
or
lret
jl
adc
jne
pop
add
ds
ret
std
sarl
pop
jno
sahf
leave
xchg
add
call
addr16
movsb
and
cmp
ffreep
cmp
int3
test
inc
cmp
ficoms
rcl
push
int
negl
mov
pushf
icebp
and
pop
pop
mov
lods
lahf
in
jnp
cltd
rorl
cmp
dec
mov
sub
pusha
push
pop
enter
enter
xor
dec
inc
sub
das
int
push
mov
push
sbb
mov
dec
es
pushf
push
inc
sbb
aas
loopne
enter
add
inc
mov
outsl
adc
inc
decl
inc
add
shll
lock
and
popf
pop
in
aas
negl
jne
les
add
ret
mov
jnp
inc
movsb
xchg
cmp
and
jg
out
push
pushl
and
jb
add
xchg
inc
add
pop
icebp
jg
cmp
jo
sbb
rorl
cli
pop
jmp
pusha
stos
imul
shll
clc
ja
popa
shl
ss
jl
push
lahf
incl
mov
inc
adc
jmp
ret
aas
lock
lods
ficoml
inc
outsl
test
pop
sbb
add
jp
xchg
mov
js
xchg
aaa
out
imull
lahf
icebp
das
adc
int
jmp
dec
ss
inc
xlat
rcr
jnp
dec
push
mov
push
mov
xor
and
add
and
cltd
push
test
pop
outsl
or
xchg
xor
orb
mov
xchg
into
cmpsb
stc
jmp
cmpsb
aad
mov
aas
mov
rorb
mov
aaa
subl
push
cmp
fcoml
xchg
std
add
in
push
xor
mov
pop
mov
xor
xor
fnstenv
lds
jg
xor
mov
jmp
and
or
aaa
and
jg
pop
outsb
std
inc
sub
mov
add
or
push
aas
pop
outsb
push
jl
pop
popa
dec
cs
fstpl
fistpll
lds
popf
filds
pop
clc
xchg
dec
sbb
sti
out
icebp
cmp
je
mov
and
or
rcll
cmc
mov
mov
mov
jg
push
inc
xchg
scas
jge
pop
cmc
mov
sub
sub
cmp
repz
js
loopne
leave
push
pop
mov
jg
pop
or
adc
in
idivb
out
pop
lret
xor
jo
and
push
xchg
lock
mov
pop
and
mov
mov
mov
mov
mov
inc
and
idivl
out
push
call
xchg
decb
jns
hlt
mov
mov
jnp
cltd
das
neg
movsb
test
mov
dec
pop
and
sbb
xchg
sbb
pop
call
loope
inc
lret
clc
and
out
pop
inc
mov
adc
ss
jb
scas
mov
jne
dec
lret
mov
sub
inc
jg
aas
and
fildll
mov
sub
stc
ljmp
addr16
push
add
xchg
push
sbb
pop
lcall
sub
xor
fstp
subb
cli
out
mov
lahf
bound
jns
mov
mov
push
not
inc
js
mov
lcall
loope
aaa
pop
push
mov
adc
cmpb
imul
jnp
dec
movsl
mov
aad
adc
icebp
je
stos
jne
jns
fidivs
decb
into
pop
rolb
inc
or
sbb
ljmp
cmp
shufps
jmp
lahf
push
pop
andb
enter
popf
jnp
adc
mov
push
inc
lret
lods
cmp
test
subb
xrstors
dec
imulb
cs
hlt
cli
sbb
inc
iret
dec
xchg
jbe
loope
pop
sti
dec
push
aaa
xchg
cmp
dec
or
in
loope
iret
push
push
std
popf
sti
pop
adc
sub
movsl
in
insl
cmpsl
pop
shrb
adc
lea
je
jge
inc
xor
lret
jo
pop
rolb
ds
frstor
adc
or
repz
cs
or
pop
or
fistps
jae
repnz
frstor
pop
jge
fistps
cmpsl
ret
pop
cmp
iret
jecxz
cmp
addr16
or
lahf
je
aaa
ss
test
repz
mov
repnz
sbb
aas
out
imul
or
xchg
popa
push
ficoml
clc
out
xchg
mov
jle
jg
jecxz
call
fsubrs
inc
es
dec
ja
and
rorl
mov
adc
add
nop
xor
icebp
pxor
sbb
jge
dec
aad
fimuls
outsl
and
aam
bound
mov
ret
cmc
leave
dec
repz
fwait
mov
popf
sti
adc
jecxz
jg
pop
mov
out
sub
pop
xchg
add
cmp
add
outsb
push
call
push
jns
mov
inc
xchg
add
lcall
es
inc
mov
cmp
clc
aas
std
inc
mov
das
scas
je
pop
xchg
loop
in
jnp
sbb
cmpb
test
push
inc
xor
rorl
ret
into
and
inc
mov
sub
mov
pop
jmp
jg
imulb
pop
pop
es
aas
loopne
inc
ss
mov
das
mov
test
out
and
cmp
jb
das
orl
shll
push
pop
sarl
je
aam
into
test
std
pop
sti
push
adc
addr16
fstps
cli
adc
mov
cld
cmp
lret
sbb
lock
cmp
add
jecxz
inc
xchg
in
push
imul
insb
aas
lahf
or
jnp
mov
pop
sub
xchg
loopne
ret
sti
pop
dec
stos
out
imul
xor
cs
loopne
mov
outsb
dec
push
xlat
inc
aas
adc
fsts
mov
jl
push
into
aaa
mov
cmp
fmuls
cmp
adc
pop
cmpsb
adc
mov
outsl
rcrb
cmpsl
jmp
imul
inc
sub
aaa
into
and
or
scas
jb
dec
icebp
sbb
je
mov
xchg
adc
daa
or
xchg
ficomps
or
scas
and
cmp
or
pop
mov
fisttps
loop
scas
xchg
sti
icebp
mov
shlb
out
stc
inc
clc
xchg
dec
jne
movsl
sbb
push
sbb
mov
jb
loop
and
add
cmp
jmp
xor
pop
jecxz
cld
xor
adc
xor
gs
add
pushf
mov
cmp
adc
clc
add
ljmp
mov
sarl
lock
inc
pop
mov
sub
jmp
cmp
repz
arpl
imul
sbb
loope
ffreep
cli
iret
lods
mov
shlb
push
pop
jbe
shrb
xchg
cli
inc
movsb
cmc
mulb
rorb
or
mov
loope
leave
jne
xorb
pusha
xor
push
daa
pop
mov
and
inc
scas
aam
stos
sbb
rorb
aas
inc
into
imul
dec
or
jo
add
neg
jecxz
pop
mov
negb
add
jmp
in
es
and
push
dec
inc
ljmp
frstor
xchg
insl
ljmp
add
push
dec
ret
cmp
jnp
mov
push
or
dec
inc
inc
sbb
sarl
cld
xor
jg
or
lods
xchg
imul
push
loope
incl
das
pop
mov
cltd
lahf
mov
iret
mov
adcb
test
dec
sbb
dec
mov
sahf
and
aad
adc
or
in
aas
mov
xor
pop
movsb
je
xchg
jg
clc
cmpl
xchg
cmp
push
fucompp
std
ss
and
rcll
pusha
inc
scas
push
inc
leave
jbe
stc
repnz
pop
sub
sti
xlat
sub
sbb
add
scas
adc
inc
int
xor
sub
pushf
pop
cmpsl
incl
int3
jae
mov
mov
dec
xor
add
pop
std
and
cmp
xchg
sub
mov
cs
sub
hlt
std
outsl
aad
add
xor
lahf
loope
cld
ret
mov
push
inc
sub
mov
jns
addr16
mov
xchg
daa
outsb
mov
xor
adc
add
imul
aas
push
loop
pusha
lock
outsl
or
lock
xor
incl
mov
lahf
ds
andl
popa
cmp
sub
push
data16
stc
jno
pop
push
fmull
inc
outsb
xor
mull
sbb
adc
fwait
mov
sti
xor
cmp
pop
cltd
inc
nop
ja
pop
cmpsb
push
aad
aas
lcall
add
das
push
inc
and
out
mov
outsb
xchg
jg
add
mov
das
in
xchg
or
dec
xchg
fs
lea
cmpsb
or
cli
outsl
out
xchg
push
cld
js
jbe
mov
mov
xchg
jg
aas
jbe
pop
add
or
rorl
out
push
loop
in
pop
mov
cmp
ja
clc
lahf
jp
inc
mov
scas
mov
lods
pushl
and
incb
jnp
cmp
mov
inc
lahf
push
movsl
filds
inc
jno
aaa
cmp
idivl
fxch
xchg
xchg
enter
mov
ret
pusha
fs
jno
mulb
mov
mov
aas
sarb
mov
es
and
jg
syscall
add
jg
pop
imul
sub
fidivs
jg
imul
stos
out
sub
mov
pop
retw
adc
jl
cmp
dec
xor
mov
add
in
ja
test
xor
pop
int
lock
aaa
pop
xchg
push
movsb
mov
adc
jns
test
dec
shrb
repnz
add
mov
leave
add
clc
pushf
pushf
mov
pop
mov
cli
out
cmc
push
mov
test
adc
push
in
lods
push
push
incl
push
adc
sub
lcall
xor
hlt
ss
sub
and
mov
dec
xchg
lods
sahf
pop
ljmp
aas
jne
hlt
jecxz
jne
mov
test
inc
push
mov
jl
xor
hlt
xor
in
jbe
cwtl
icebp
test
cld
bound
jnp
rcrb
aaa
jp
lahf
mov
push
fst
lret
push
pop
mov
call
stc
mov
rolb
push
loope
in
mov
shrl
addr16
inc
pop
xchg
movsb
fstp
mov
movsl
call
jmp
cmc
call
in
sub
or
fmul
ja
ljmp
mov
movsb
jecxz
dec
sbb
cmp
push
mov
out
mov
icebp
mov
mov
nop
shlb
mov
sub
repnz
dec
and
pop
mov
pop
sbb
sub
std
iret
std
pop
and
cltd
mov
int3
sub
pop
lea
pop
fidivl
xchg
add
sbb
aam
mov
pop
scas
mov
daa
stos
test
xchg
inc
mov
jnp
mov
dec
and
cwtl
inc
shlb
loopne
arpl
jle
loop
cmp
pop
push
fldt
sti
xchg
cltd
cltd
jno
pop
add
adc
pop
mov
pxor
jle
or
cmpsb
pop
lea
push
mov
mov
arpl
mov
out
arpl
pop
rcrl
adc
push
xchg
das
and
loop
add
sbb
sub
fsubrl
jecxz
mov
rcll
mov
add
inc
adc
ret
cmpsl
stos
jecxz
xlat
adc
jg
clc
mov
out
mov
pushf
jg
popa
or
xchg
push
push
push
adc
lods
inc
sahf
je
pop
and
loop
ret
ret
cmp
testl
sbb
negl
push
bound
or
shlb
and
das
aaa
mov
mov
pop
adc
jno
sarl
mov
test
mov
push
mov
sar
in
push
cmp
mov
ficoms
jns
mov
sub
dec
popl
fidivrs
popf
lcall
out
hlt
fsub
mov
push
mov
cmp
aas
sbb
popf
sti
in
pop
inc
cmp
dec
mov
in
loope
fidivrs
testl
ljmp
sbb
xchg
mulb
enter
inc
insb
xchg
pop
pop
mov
int3
adc
cmc
lcall
stos
push
add
cmc
cmpsb
data16
inc
mov
jo
mov
imul
mov
mov
pop
sbb
cmp
adc
clc
cmpsb
adc
add
incl
cmp
jns
das
xor
leave
mov
and
adc
out
shlb
call
aam
xlat
xchg
cmpsl
jbe
xor
jbe
popf
fidivs
jo
mov
push
and
mov
mov
xchg
mov
fwait
int
insb
xor
cld
and
push
xchg
es
push
cwtl
icebp
pop
mov
sbb
addr16
popf
subl
jge
pop
shr
mov
popf
in
popf
xchg
incb
inc
mov
bound
adc
jo
add
mov
push
pop
std
mov
into
mov
sub
leave
xchg
add
pop
mov
je
and
mov
jg
decl
das
and
sub
mov
jmp
pop
mov
xchg
jp
lcall
cmc
jnp
sub
xchg
mov
inc
fimuls
sub
mov
scas
mov
jbe
std
lcall
add
mulb
cltd
fdivs
mov
pusha
adc
outsb
mov
insl
mov
jp
fists
xor
clc
lock
movsl
jg
pop
je
sub
pop
mov
out
lock
adc
dec
lret
push
mov
fwait
aad
daa
and
sub
cmp
loopne
jp
inc
and
dec
ja
jae
mov
int3
add
test
jp
mov
jb
stc
jge
mov
jne
aam
sub
jnp
sbb
je
adc
mov
add
aaa
cmp
jle
test
push
daa
hlt
aas
mov
jp
sbb
cmp
call
xchg
int
les
loope
dec
mov
pop
stc
mov
lret
dec
inc
and
aaa
xchg
jge
mov
jmp
nop
int
test
mov
and
mov
mov
jo
loop
inc
scas
sub
push
inc
xchg
pop
mov
pushl
jecxz
pop
daa
and
or
imul
jmp
pop
adc
mov
mov
sbb
out
adc
pop
hlt
lea
or
push
sbb
aas
cmp
inc
pusha
dec
cmp
jecxz
or
mov
dec
aas
adc
lahf
bound
sbb
out
mov
sarb
or
inc
mov
mov
arpl
int
push
jmp
sbb
ljmp
outsl
dec
inc
loopne
hlt
pop
fwait
sbb
fldt
lcall
icebp
pop
sub
xor
aas
jmp
sub
jg
lret
and
sbb
inc
out
or
push
cmc
mov
testl
fcompl
pop
jnp
cmpsb
les
add
or
out
fidivrs
pushf
mov
mov
pop
sub
loop
loop
inc
inc
les
mov
push
faddl
fisubl
aas
ljmp
sbb
and
fcoms
ljmp
std
mov
sbb
xchg
cld
jae
pop
fisttpl
inc
mov
add
fcomp
sti
pop
out
dec
cmp
repz
imul
pop
inc
add
lock
xchg
enter
dec
mov
movsl
inc
ret
jmp
mov
mov
add
sub
aas
mov
out
std
mov
dec
cld
xchg
lock
sub
mov
jbe
test
inc
lret
add
ja
push
mov
int3
stc
mov
shrb
add
ljmp
pop
adc
fnstsw
and
mov
pop
sbb
inc
mov
dec
sbb
std
jg
sti
aam
mov
rcrb
imul
clc
mov
cmpb
mov
out
or
cmp
es
seto
sub
dec
test
xorb
lahf
lds
mov
icebp
sbb
fadd
outsb
dec
divl
fdivr
ljmp
test
adc
int3
jo
and
ret
and
jge
mov
jg
loopne
int
ss
aam
dec
movsl
fmuls
adc
neg
test
arpl
cmp
scas
mov
push
push
mov
out
and
xor
cwtl
xor
jno
jle
clc
stc
xor
lahf
je
mov
stos
clc
out
std
ss
cmpsb
subb
loop
jo
out
push
push
outsb
aas
nop
dec
sbb
jb
push
icebp
arpl
pusha
mov
filds
pop
or
loope
mov
fisubl
jl
fidivrs
cli
incb
push
dec
scas
clc
out
adcb
sub
fimull
pop
jne
mov
ret
add
mov
dec
icebp
sahf
jg
and
sub
pop
adc
pop
and
mov
mov
repz
insl
aad
mov
dec
mov
in
decl
mov
pop
cli
cwtl
in
inc
sub
mov
or
repz
clc
shr
cmp
and
cld
into
ret
sbb
jmp
ds
mov
cmp
insl
mov
std
imulb
inc
mov
inc
and
stc
cltd
ja
inc
ljmp
shlb
dec
in
orl
sub
and
lock
jo
pusha
ficoml
inc
jno
pushl
sti
xchg
es
loop
and
jp
mov
pop
cmp
lods
out
sbb
fisttpl
dec
jg
in
sub
sbb
xchg
mov
mov
push
in
sbb
clc
xchg
cmp
ficompl
xchg
out
das
adc
sub
adc
lahf
sarl
push
push
dec
daa
int
shrb
fcoms
movsl
sub
test
mov
xlat
fisubrs
adc
fwait
pop
fs
and
jg
push
fwait
cmp
pop
nop
lods
or
mov
insb
xor
lods
cmc
fisttpl
add
push
push
mov
mov
std
mov
dec
loopne
mov
arpl
out
fisubrs
jg
push
inc
add
mov
pop
jo
jmp
fnstenv
or
loop
sti
push
adc
push
cmp
clc
lods
loope
out
fisttpl
pop
int3
in
sub
incb
loop
pushf
xor
fwait
loop
inc
cmpb
clc
fdivl
aad
xchg
nop
inc
mov
pop
jge
incb
out
rorb
loop
mov
in
ljmp
adc
shlb
lods
cld
adc
adc
in
inc
sar
pushl
stos
jns
lret
inc
mov
mov
ljmp
pop
shrb
jae
or
js
lret
int
push
xor
pop
shl
push
rcr
jmp
sarb
xchg
inc
mov
mov
fbld
cmpsb
adc
ret
roll
sbb
cmp
mov
clc
into
imul
into
jecxz
icebp
decb
jno,pt
cmp
subl
movsb
jnp
call
cmp
insb
xchg
mov
shrl
add
inc
jl
pop
mov
out
mov
rcrb
pop
movups
and
stc
sbb
dec
call
xchg
loope
fcmovb
js
and
pusha
mov
test
pop
out
mov
icebp
out
and
lcall
pop
inc
pusha
hlt
incl
or
imul
mov
fcoml
and
jno
pop
jmp
pop
dec
pop
ds
sbb
push
hlt
mov
cmp
ja
pop
fdivr
fisttpl
shr
scas
adc
mov
sar
dec
out
hlt
outsb
xor
push
fs
fprem
ds
stc
mov
pop
push
bound
loope
arpl
decl
add
sub
or
and
push
bound
fldenv
lds
cmpl
mov
ret
pop
pop
add
loopne
in
mov
inc
stos
xchg
dec
aaa
pop
daa
mov
aas
mov
mov
out
movsl
xor
xor
xlat
push
cmc
cmp
idiv
and
mov
lret
aad
loop
push
sub
lock
xlat
int3
test
ds
fs
xchg
aas
push
std
pop
dec
sbb
inc
xchg
push
cli
pop
sub
movl
jo
daa
add
mov
sti
lret
ret
xor
pushf
cmp
inc
mov
jge
xchg
ficomps
fiaddl
sbb
add
jl
cs
stos
data16
lea
jmp
adc
iret
add
adc
cmp
ljmp
dec
xor
dec
cmp
fwait
bound
into
dec
jecxz
lock
das
xchg
mov
add
lcall
cmc
fnsave
inc
sub
gs
push
mov
adc
xadd
shlb
out
cmc
pushl
jb
sarl
imul
cmp
ret
movsl
movsl
jns
sbb
mov
loopne
mov
jle
ja
jg
pop
add
addr16
jg
int3
js
inc
pop
inc
nop
mov
ret
pop
xor
sarb
aad
inc
pushf
and
das
out
lahf
aaa
or
insl
bound
sti
in
ljmp
pop
push
cmpsb
mov
adc
pop
jbe
mov
sbb
call
jno
fidivl
roll
fs
mov
pop
xor
jb
mov
add
xorl
fdivr
mov
adc
aam
add
inc
imul
arpl
out
js
pop
loop
jae
lcall
jne
pop
loopne
mov
adc
sub
sub
dec
pop
or
dec
sahf
and
scas
sti
cli
lret
popa
xor
xchg
arpl
fdivrp
in
mov
xchg
mov
jg
sub
into
adc
in
jl
icebp
fbstp
cmp
aas
insb
popa
xor
xchg
pop
sub
out
outsb
pop
jecxz
sbb
jne
loop
mov
and
fsubrl
loop
push
or
xchg
in
incl
repnz
cmp
mov
xor
aas
rolb
or
dec
dec
cmp
and
test
xchg
test
jae
cwtl
adc
aas
testl
or
ret
dec
ljmp
mov
mov
scas
jl
adc
pop
jae
mov
or
pop
icebp
pop
inc
fwait
lock
pop
dec
sbb
mov
jg
clc
adc
fildl
xorb
jbe
std
cltd
rcrl
fimull
mov
jg
cmpsb
mov
outsl
xchg
ljmp
std
add
xor
stos
push
xor
decb
dec
jge
mov
ret
fwait
pop
faddl
into
or
hlt
je
rorb
mov
iret
icebp
push
fs
imul
arpl
jo
loope
mov
scas
loop
imul
outsl
mov
loopne
jge
ljmp
loopne
inc
loop
jp
insl
stos
out
fidivrs
push
lods
stos
cli
jmp
fistl
adc
pop
in
dec
xor
ror
insl
push
inc
aas
cmp
pop
lds
sub
aam
lock
or
adc
and
fbstp
dec
shrb
je
sub
xlat
std
scas
std
pop
lods
or
and
pop
xchg
pop
push
fucom
xor
fcomip
xor
cmpl
divb
and
leave
sub
ret
inc
pushl
and
outsl
das
bound
adc
ljmp
inc
push
aad
mov
mov
gs
sti
cmp
push
push
jl
dec
dec
ja
mov
dec
je
add
cmp
pop
scas
loop
je
cmp
cmp
addb
push
ffreep
mov
adc
adc
das
jb
dec
fiadds
js
sub
fdivr
out
lock
outsl
hlt
jle
dec
data16
int3
push
rcl
mov
push
mov
sbb
int3
ja
fucomip
dec
leave
or
out
movsl
in
daa
and
jmp
movsb
shrb
sub
popa
dec
push
in
in
pop
sub
lock
lahf
mov
cmp
pop
arpl
cli
test
sbb
gs
mov
cld
jmp
mov
and
push
dec
push
pop
add
xchg
jmp
inc
hlt
mov
jmp
adc
dec
mov
orl
in
out
cmp
pusha
lds
loopne
icebp
out
fmul
psubb
fadds
pop
mov
jg
clc
cmp
popf
push
data16
sub
cld
xor
lea
add
mov
push
push
or
lock
pop
inc
subl
dec
clc
daa
hlt
jmp
push
pop
sub
xchg
inc
and
and
icebp
out
mov
out
cmp
aad
pop
ss
addb
lea
xchg
lea
into
jg
xor
jle
sbb
out
jmp
inc
cld
adc
lcall
rcll
ljmp
xor
inc
mov
mov
pop
ds
lahf
lret
jns
mov
pop
or
lods
xchg
adc
ljmp
pop
pmaddwd
mov
ret
pop
push
sahf
ja
out
incl
xchg
pop
adc
lcall
push
inc
cld
mov
pushf
mov
add
shr
inc
jo
test
xchg
mov
jecxz
xchg
push
pop
push
push
add
lret
sbbb
jl
mov
jb
fimull
mov
in
xchg
mov
jg
data16
mov
xor
sbb
pop
jecxz
divl
scas
jnp
dec
clc
mov
into
mov
mov
xchg
mov
push
clc
pop
aas
xchg
pushf
mov
pop
lret
repnz
push
stos
jmp
xor
jb
test
xchg
xchg
dec
pop
clc
jg
decl
pop
ds
mov
scas
pop
stos
and
jp
sbb
stos
adc
cld
divl
adcb
movsb
jp
aas
neg
jmp
fsts
add
lcall
lds
loop
pop
or
xor
adcb
dec
dec
popf
mov
cs
adc
jmp
adc
hlt
mov
ret
push
loope
mov
rcll
pop
div
leave
jno
add
and
adc
roll
add
lock
add
test
testb
and
lock
jns
fisttpll
or
mov
leave
xor
into
aas
adc
fistps
mov
sbb
mov
test
adc
xor
xor
and
mov
adc
int3
jmp
out
std
inc
in
mov
pop
ljmp
into
movsb
or
ret
ja
add
xchg
pop
pop
push
dec
xchg
repnz
aad
sub
dec
dec
rcrl
dec
jne
mov
pop
xchg
jo
mov
loope
fsubrl
iret
fnstsw
adc
fdivl
mov
xorl
loope
lahf
push
std
pop
cmp
fs
icebp
addb
fwait
repnz
ret
sti
incl
xchg
sub
push
std
ds
rcll
mov
cld
jle
je
jno
xor
push
dec
mov
adc
push
sbb
pop
lds
outsl
adc
push
lock
fidivrs
lds
dec
orb
cmp
fucomip
int3
gs
push
ret
incb
jecxz
js
icebp
inc
bndldx
jmp
sbb
push
sub
xchg
mov
movsb
inc
psubd
js
gs
cmp
mov
or
dec
or
jge
sbb
jl
shr
sbb
or
or
js
repz
rcrb
lock
fsubrl
mov
addr16
fidivrl
loope
sbb
add
stos
imul
push
pop
and
and
jg
lret
xor
popf
sti
xor
jnp
addr16
sbb
mov
xor
dec
aam
nop
in
lds
adc
lea
ret
dec
call
sti
jns
fisubrs
inc
xchg
xor
mov
dec
dec
xor
movsl
xlat
inc
loopne
sub
push
sbb
dec
in
mov
cmp
cli
push
out
outsl
fisttpl
popa
loopne
rclb
js
stos
add
push
lcall
jnp
outsl
mov
lods
jp
fistl
push
mov
stc
mov
stos
js
mov
cwtl
icebp
pop
xor
lret
mov
aad
lds
or
repz
cmp
std
into
ret
in
push
arpl
call
dec
cmp
lods
mov
jg
rorb
and
push
imull
dec
frstor
fldl
dec
sarb
int
cmp
stc
push
and
mov
outsl
cmpsl
sub
cmp
push
std
cs
dec
lock
mov
loope
popl
cltd
ljmp
mov
loopne
out
testl
fisubs
push
rcrl
dec
mov
mov
leave
inc
int
jbe
jno
add
dec
and
gs
lds
or
cltd
cmp
adcb
loopne
shll
loopne
fwait
pop
or
mov
sbb
stos
xchg
dec
pop
ja
mov
lcall
cmp
call
mov
mov
push
dec
sub
mov
cmp
jne
data16
mov
loop
push
sub
sub
insb
cltd
pop
fbld
clc
dec
lea
rolb
fsubrl
lahf
mov
shlb
and
mov
jge
pop
jp
int
mov
inc
xor
xor
and
sbb
loopne
out
dec
inc
jmp
xor
aaa
push
nop
cmp
notl
xor
pop
lock
xchg
ljmp
out
sahf
popf
inc
mov
mov
push
das
stos
mov
stos
sbb
jmp
test
mov
push
mov
cwtl
call
pop
sbb
xchg
pop
mov
ret
mov
fildll
inc
jo
mov
pop
in
call
jmp
int3
and
mov
iret
cmp
xor
jno
mov
aad
lock
cmp
fbstp
icebp
popf
pop
adc
lahf
push
mov
cmc
cmp
enter
mov
mov
inc
or
fwait
insb
fisttpll
outsl
inc
adc
aas
mov
xchg
sbb
xchg
in
mov
scas
xor
iret
mov
adc
and
loopne
cld
hlt
jg
or
add
lcall
lahf
js
fistpll
jb
loopne
pop
rcrl
xlat
ljmp
xchg
repz
push
push
mov
pop
mov
lods
call
rclb
inc
js
or
into
lock
and
jl
dec
adc
lods
pop
repnz
or
fdecstp
arpl
and
inc
out
mov
cli
inc
inc
mov
jnp
out
fidivs
cli
and
pusha
insb
pop
mov
and
jg
mov
stos
inc
sbb
mov
xor
adc
ja
les
rcrl
notb
add
adc
les
lahf
sar
and
pop
dec
jb
test
test
add
mov
aaa
add
jp
jp
mov
ret
mov
xor
cmp
out
or
adc
lahf
mov
aad
pusha
xor
ds
out
lock
add
cwtl
rorl
and
int
lods
cmc
daa
loope
xlat
mov
xchg
sub
mov
aas
cmpsb
ffreep
sbb
std
jg
lcall
leave
negl
cli
push
lea
mov
jns
add
cmpsb
roll
pop
ret
lock
in
xchg
idivl
negl
out
dec
test
scas
enter
push
jge
dec
fiaddl
sub
adc
mov
call
loope
mov
aas
add
sub
faddp
mov
adc
mov
or
lods
cmp
inc
mov
jnp
arpl
fsubrl
adc
in
notb
stos
adc
pop
sarl
shll
add
aas
and
jbe
cs
mull
mov
inc
xor
or
sub
or
into
fbld
mov
movsb
fwait
int
jge
popf
jl
outsl
sbb
sbb
ret
push
fsub
xor
jl
jl
stos
add
jo
adc
sub
xor
scas
mov
int3
les
mov
iret
push
lock
loop
sti
jle
jp
aas
icebp
or
xor
push
loope
movsbl
ret
inc
pop
scas
mov
mov
subb
dec
cs
loope
or
adc
mov
push
testb
aaa
or
ret
and
xor
in
push
out
adc
adc
jg
pop
andl
movsl
jns
sub
or
cs
fidivs
mov
xchg
cwtl
inc
loop
orl
or
or
mov
cs
cmp
out
push
adc
dec
mov
mov
push
ret
xor
pop
or
lea
inc
pop
adc
sahf
pushl
xchg
jg
testl
sub
pop
adc
aas
repnz
std
ffreep
cli
data16
push
call
out
jmp
cmp
push
out
lahf
add
sbb
xchg
aas
mov
add
std
or
pop
popa
inc
fbld
or
rcrb
decb
cmc
jmp
jp
and
push
dec
cmp
push
aas
mov
dec
jae
dec
insl
sbb
rcrl
inc
lcall
nop
and
shll
push
scas
push
pop
sbb
inc
mov
movsl
in
adc
arpl
std
push
in
or
scas
imul
arpl
lret
or
and
shlb
je
cwtl
cmpsb
shrb
inc
add
test
mov
rolb
mov
js
lds
cli
loop
xor
sahf
mov
mov
cmp
dec
xchg
or
std
aas
sub
sbb
imul
mov
icebp
mov
mov
dec
mov
sub
push
aam
cld
jbe
pop
fucomip
and
cmp
aaa
icebp
cmp
mov
push
sub
js
inc
nop
out
inc
pop
mov
movsb
inc
lcall
and
mov
push
pop
push
push
ret
test
jg
and
xor
into
jmp
ds
sbb
lock
xorb
jmp
dec
or
in
fisttpll
cli
xor
adcl
test
or
in
sbb
cmp
mov
pop
popa
movsb
dec
push
stos
push
ljmp
mov
test
scas
mov
mov
pop
mov
adc
std
aas
jge
imul
jae
mov
dec
cmp
ret
aas
push
lock
andl
out
testb
mov
out
decl
test
call
popa
fs
paddusb
xor
mov
xlat
cs
addr16
lods
mov
loopne
mov
and
cmp
iret
push
decl
xor
or
loope
loop
and
in
fisttps
mov
cmp
push
in
mov
es
mov
and
mov
sbb
pop
jg
lock
adc
call
je
cmp
sub
inc
jne
mov
mov
add
mov
sbb
xchg
push
sub
mov
jp
cmp
sahf
scas
adc
push
and
pushl
xor
mov
movb
stos
ja
xor
negb
push
lcall
shrb
dec
pop
jg
imul
sbb
or
cmp
and
call
ret
jnp
adc
xchg
mov
sbb
adc
icebp
xchg
bound
push
stc
push
std
js
pop
cltd
scas
mov
mov
scas
push
mov
daa
cmc
test
dec
mov
cmc
push
xor
std
xchg
xchg
jle
ljmp
shll
mov
or
test
insb
xchg
push
cwtl
ljmp
xchg
arpl
addr16
filds
jle
jle
shll
push
push
rcr
sahf
or
bnd
leave
popf
jle
fdivrs
jg
mov
sbb
call
loope
std
lods
lcall
negl
or
mov
test
js
icebp
sub
pop
jmp
jle
adc
cmp
xchg
loopne
iret
test
push
add
sbb
add
fstpt
pop
aaa
push
push
xchg
call
sub
pop
or
mov
and
shlb
mov
adc
test
dec
pop
mov
adc
fmul
add
sbb
js
mov
decl
sbb
push
inc
stos
js
mov
pop
jnp
lahf
popa
mov
push
fisubrs
stc
xlat
jnp
xchg
sbb
push
jns
bswap
mov
cmp
adc
jae
jb
mov
cmc
pop
jbe
xor
out
out
ret
lcall
sbb
in
aas
aad
sti
xchg
sbb
loopne
inc
lock
mov
xchg
insb
incb
push
xor
fdivrl
adc
xchg
std
xchg
mov
and
aas
or
cmp
jnp
out
cld
xchg
mov
in
jmp
lea
adc
arpl
les
aad
std
xor
pusha
mov
test
rcrl
dec
pop
loope
fmulp
mov
add
inc
or
loope
ss
jns
xchg
adc
sub
inc
cld
and
jno
mov
xchg
pop
fsts
daa
arpl
loop
sub
insb
imul
pop
sbb
ss
leave
in
test
orl
jg
inc
loope
pop
gs
lods
mov
jge
loop
cld
dec
cwtl
jl
adcb
inc
adc
sti
fstl
arpl
and
push
std
push
xchg
repz
out
sub
adc
mov
ljmp
sub
push
out
adc
mov
ret
sti
mov
xchg
xor
sub
repnz
icebp
daa
mov
test
rolb
stos
clc
pop
cmpsb
cli
icebp
je
pushf
jns
stos
xorb
cld
loope
and
fsubs
jg
test
lret
popf
ffreep
sbb
jge
in
pushf
sti
pusha
jmp
js
mov
aaa
adc
xchg
jg
sti
out
cmpsb
sbb
mov
nop
in
outsl
test
jmp
push
xor
nop
mov
sub
xor
inc
lret
movsb
jnp
pop
filds
adc
lds
xor
and
lods
push
outsb
stos
or
sti
lahf
gs
out
pusha
ds
jo
movsb
and
fucompp
sbb
aam
les
push
inc
add
ja
sub
cmpsb
adc
mov
add
push
jmp
imul
mov
xlat
lods
fsts
fists
mov
or
cmp
ss
arpl
sub
xor
add
mov
lock
pop
xchg
in
aad
dec
xchg
push
adc
lock
nop
test
pop
call
stos
push
mov
in
mov
ja
xchg
inc
shlb
iret
xchg
dec
cwtl
xchg
aad
jg
mov
out
sub
sub
int
jnp
inc
lret
fistl
sub
loopne
push
sub
mov
sbb
cld
aad
out
dec
xchg
scas
into
mov
cli
push
imul
pushf
pop
inc
and
lahf
lds
js
adc
or
pop
lods
dec
ret
fsts
ja
jno
imul
add
sbb
pop
jns
aas
inc
mov
xchg
lea
icebp
sahf
mov
lods
rol
insb
xchg
shl
lcall
fisttps
cmp
int
push
dec
jecxz
cmp
cwtl
fdivr
xchg
jl
divl
jbe
lcall
and
incl
pop
sub
fisttpl
in
cld
jmp
idiv
jnp
out
rol
nop
rcl
lea
sbb
sar
mov
pop
sub
push
mov
jg
dec
cld
adc
test
add
out
mov
inc
or
inc
dec
movsb
xchg
test
add
pop
add
mov
mov
mov
aas
pop
mov
inc
jge
jmp
xlat
sub
and
jmp
movsb
aad
push
filds
xchg
adc
cli
xchg
jmp
pop
add
mov
inc
movl
cmpsl
pop
lret
std
mov
popa
dec
movsl
mov
jae
inc
inc
mov
stc
ret
dec
mov
adc
scas
hlt
hlt
scas
or
scas
ds
jnp
mov
xchg
loopne
sbb
fcomps
add
fistpll
outsl
pop
out
out
cld
lods
ja
xchg
push
pop
jp
cltd
jle
push
pop
add
add
sbb
popf
xor
movsl
mov
sbb
xor
pushf
incl
stc
ja
and
jb
add
jne
into
add
mov
ljmp
pop
dec
jns
bnd
mov
mov
sub
ljmp
decl
in
sub
stos
sbb
add
pop
adc
push
cld
jmp
and
push
out
sbbb
ja
cs
dec
mov
mov
out
icebp
mov
mov
je
mov
push
repnz
fs
xchg
leave
fcomi
or
sub
std
arpl
xor
push
mov
lock
pusha
mov
mov
out
inc
mov
pusha
mov
call
lret
aaa
cld
and
daa
push
mov
scas
xchg
idivl
and
cmc
pop
inc
push
and
mov
adc
incl
jg
cmpsb
push
dec
lcall
js
lahf
aam
add
insl
or
loop
cmp
lahf
dec
mov
movsb
in
pushf
or
dec
fbld
call
jns
hlt
jae
repnz
mov
into
add
push
scas
jmp
add
mov
push
mov
inc
andb
lret
iret
std
pop
inc
aam
mov
lock
xchg
incb
cmpsb
cltd
fwait
divb
add
xor
std
or
mov
icebp
jae
stos
insb
cmp
or
jg
ljmp
xor
bound
pop
addr16
hlt
xchg
sti
xor
jbe
mov
jo
cmp
mov
ds
cmp
call
sar
loopne
sbb
pop
or
scas
test
inc
sti
dec
cwtl
and
push
push
cld
or
mov
lds
rorl
sbb
adc
xchg
jecxz
clc
mov
clc
adc
pop
xor
fbld
lds
nop
cmp
mov
insb
or
push
incl
sub
and
mov
xor
into
sub
lds
ljmp
sub
xor
add
arpl
scas
aas
sub
xchg
or
out
pop
cli
push
ret
mov
mov
aas
mov
push
pop
rorb
test
fcmovb
sub
push
add
add
call
adc
pop
fcompl
and
aad
cltd
outsb
repz
out
mov
xor
pop
mov
cmc
test
clc
jb,pt
arpl
and
std
pop
jecxz
aad
fldl
xor
sarl
mov
shrb
aad
sbb
pushf
loop
and
cmpsb
ja
iret
mov
out
rcr
aad
jge
sahf
js
dec
lods
adc
or
mov
es
xchg
outsl
inc
dec
movsl
xchg
jae
jmp
add
dec
icebp
cmp
pop
fdivrl
popa
xchg
pop
xor
push
and
enter
cmp
or
mov
add
jmp
dec
jns
rolb
mov
cwtl
test
push
xchg
js
jne
out
aaa
mov
outsl
scas
add
cmp
dec
rcll
inc
pop
fcompl
out
frstor
addl
loopne
mov
scas
aam
iret
movl
lods
negl
jno
xor
and
fdivl
loopne
inc
bound
mov
in
rol
sbb
not
testl
lcall
and
daa
data16
inc
addr16
ret
mov
pop
pop
je
push
clc
repz
clc
aad
pop
push
fistps
bound
add
jle
and
inc
ljmp
and
cmpb
jo
mov
pop
out
std
arpl
pusha
leave
or
cmc
out
lock
cmp
xor
in
fdivr
mov
xchg
in
fmull
stc
pop
jl
push
or
jno
pminub
rorb
lds
addr16
lcall
cmc
nop
lret
cmp
stos
cltd
int3
clc
daa
testl
and
stos
push
movsb
outsb
cmp
sbb
sti
cld
shrl
out
jge
lock
dec
sbb
andb
dec
xor
out
and
mov
and
inc
int3
ss
out
inc
adc
and
loope
add
in
arpl
in
push
xor
sbb
sbb
arpl
or
or
movsl
push
aaa
mov
adc
push
sbb
ret
sarl
out
loope
outsb
cli
insl
mov
ret
in
jg
arpl
dec
add
fisubrs
cli
and
loop
stc
rorl
jb
loopne
adc
out
or
ret
inc
addr16
pop
xor
fwait
mov
cltd
decl
mov
jbe
sub
ja
je
dec
jl
mov
loope
cmp
add
mov
fadds
scas
or
jg
lret
jg
fwait
dec
or
dec
push
jp
rcrl
mov
enter
xor
ljmp
je
stos
adc
inc
sub
test
imul
stos
shl
sub
and
in
mov
aas
popf
jecxz
sbb
lods
sbb
popl
std
or
xor
cmp
test
stos
jl
pop
scas
lock
ret
dec
stc
or
xchg
ds
and
ja
popf
sti
xlat
call
cmp
jp
leave
adc
fstpt
cld
fdivl
mov
mov
xchg
out
dec
cmc
lahf
pop
nop
rcrb
loop
push
bound
sbb
jg
mov
mov
fbld
cmpsl
pop
cld
iret
std
xchg
test
mov
test
ss
daa
mov
fistpll
jg
jmp
cmc
pop
sbb
icebp
dec
and
stc
add
lods
push
cmp
aas
jmp
ljmp
test
mov
mov
xor
jge
jno
filds
out
clc
adc
out
fidivrs
dec
sub
jnp
jbe
mov
and
adcl
iret
xor
adc
cld
aas
or
sti
fisttpl
sbb
hlt
mov
jae
or
sbb
inc
dec
lock
aas
dec
call
popf
loop
and
sub
pop
test
inc
sub
test
add
mov
cmp
ljmp
mov
inc
jb
and
and
xchg
xlat
incl
xchg
test
xor
push
sbb
add
lahf
gs
jae
outsb
lods
add
mov
jg
std
jg
jo
add
imul
mov
lds
clc
or
aam
mov
roll
shr
out
adc
mov
mov
sbb
cld
out
add
gs
jg
adc
sub
cmc
sahf
xor
sbb
inc
or
mov
ficompl
jne
idiv
sbb
mov
repnz
pushf
inc
push
push
inc
lods
jg
jecxz
jecxz
gs
or
cmp
jg
mov
sarl
dec
jbe
sbb
sub
mov
or
add
int3
insb
test
mov
cmp
ficompl
and
dec
jmp
outsl
sar
scas
les
jle
bound
pop
cmp
test
pushf
jmp
mov
fucomip
out
arpl
shll
pop
lods
push
jecxz
xor
inc
lds
daa
aaa
push
add
adc
fprem
mov
icebp
ja
or
jmp
mov
mov
neg
sti
pusha
mov
imul
fstpt
lds
loope
cli
cmpl
ret
or
mov
das
mov
jmp
arpl
mov
or
out
jge
xchg
daa
aam
xchg
mov
decl
jae
xor
mov
test
aad
out
push
push
add
inc
clc
jecxz
xchg
rolb
shrb
mov
and
fiaddl
mov
inc
out
jmp
mull
xor
xabort
xor
insl
hlt
decb
jmp
jmp
mov
mov
inc
daa
cmp
mov
pop
out
inc
test
fidivrs
sbb
inc
push
or
push
sbb
pop
jno,pn
xchg
xor
and
xchg
jo
sub
jl
jmp
add
into
add
repnz
mov
lock
icebp
sar
xor
pop
fwait
scas
fsubr
cmp
cmp
jge
loop
and
push
cmp
sbb
pop
lret
pop
add
push
xor
push
jg
push
int3
push
xor
jge
out
sbbb
push
push
mov
das
jle
mov
pop
scas
mov
mov
enter
and
negl
sbbl
addps
mov
inc
inc
ret
cmp
add
data16
orl
int3
lahf
add
jp
shrb
int3
mov
je
pushaw
dec
cmp
lods
addr16
cmp
push
aas
jmp
addb
pop
jmp
jg
push
in
xor
pop
add
lods
dec
sbb
xchg
add
in
push
cmpsb
fwait
clc
sub
insl
mov
mov
mov
enter
or
pop
add
popf
push
mov
test
lahf
in
and
rorl
scas
sti
dec
or
jg
es
mov
fidivrs
jmp
mov
mov
aas
sbb
divb
lock
cmp
lock
repnz
or
mov
xor
std
jmp
inc
sub
jg
and
pop
in
iret
xchg
xor
dec
das
lds
hlt
add
sbb
and
bound
xchg
mov
cmp
ja
clc
ja
arpl
popf
cmpsl
fsubs
ss
and
jbe
dec
inc
filds
xchg
adc
lahf
dec
cmpsl
inc
xchg
lcall
xor
jecxz
jg
cli
jecxz
dec
rcrb
sti
add
movsl
imul
lcall
dec
stos
in
imul
xchg
sub
sbb
pop
loope
lahf
sti
fistps
jb
inc
out
stos
stos
push
shr
lret
push
movsb
rcrl
mov
adc
in
scas
and
jg
adc
adc
xor
jl
loopne
jge
add
loop
and
inc
insl
out
pushf
push
aas
pushf
jle
cmpsl
push
out
sti
ja
fists
mov
imul
or
cltd
in
xor
sub
push
in
pop
push
push
les
add
xor
movsb
clc
jg
xor
xlat
outsb
mov
and
cmc
jle
mov
pop
xor
fldl
cmp
fmul
js
xchg
lcall
xchg
xlat
out
push
mov
loop
sub
push
push
lret
push
mov
mov
mov
popf
mov
xchg
cmp
and
mov
cltd
loop
cltd
aas
aad
pop
mov
mov
pusha
xlat
ja
clc
test
in
dec
insb
in
dec
addl
mov
out
xchg
out
clc
xchg
xchg
sub
mov
adc
lock
pushl
sub
lcall
jg
push
cmp
jg
loopne
std
pop
jnp
add
mov
and
lcall
imul
jmp
call
lock
clc
das
cmp
mov
in
test
xorl
xor
decl
aam
jl
sbb
xlat
cmp
hlt
xchg
call
xor
cmp
into
push
sub
inc
neg
sti
out
cmc
aad
xchg
jp
mov
loope
push
call
jecxz
push
insl
sub
inc
push
and
outsb
movsb
or
arpl
ud1
fwait
mov
sbb
jne
loop
push
or
mov
stos
jno
or
jge
mov
push
fmul
lea
test
sbb
sub
into
std
or
jp
inc
and
and
daa
popa
outsl
add
xor
push
pop
ficoml
xchg
xor
out
test
lcall
std
add
adc
jns
leave
cli
sbb
ja
ja
test
sbb
sub
xlat
pop
daa
mov
lods
fistl
mov
pop
cmpsb
mov
sbb
jg
adc
pop
add
inc
cmpsl
test
or
ret
cld
aaa
push
into
cmp
sti
add
and
in
stc
stos
xor
loope
cmpsl
rolb
or
lret
jmp
mov
cmp
add
repz
xchg
mov
add
call
xchg
pushf
cmp
shll
adc
xor
mov
mov
mov
aad
adc
push
mov
mov
sahf
and
mov
insb
or
jnp
lock
mov
out
cmp
idivl
xor
push
dec
jbe
mov
insl
pop
cmp
xor
sub
cmpsl
dec
rorb
lea
mov
lret
das
sbb
jl
mov
and
test
in
pop
mov
outsl
or
and
jne
ljmp
lea
into
jl
or
sahf
lock
iret
and
and
scas
lds
inc
jg
dec
add
xor
outsl
aas
push
jno
dec
loopne
shll
push
jecxz
cli
fs
jmp
or
clc
pop
xlat
jns
jnp
pop
mov
dec
mov
inc
fdiv
push
xchg
aas
les
fs
push
stos
sbb
mov
int3
fiadds
and
and
pop
cli
lea
div
and
cmpsb
test
sar
hlt
inc
mov
adc
aaa
int3
call
and
dec
jle
scas
xchg
sti
xor
dec
mov
xchg
ss
fidivrs
sbb
stos
xchg
iret
mov
clc
pop
push
int3
inc
shlb
mov
or
lds
mov
jmp
jle
mov
aad
out
iret
pop
stos
data16
loop
dec
in
ret
sar
mov
cld
cltd
mov
std
out
hlt
sbb
enter
cltd
les
xchg
push
hlt
jmp
adc
insb
in
mov
data16
add
add
cmpsl
mov
leave
jb
inc
lahf
sbb
push
pushl
in
mov
in
ss
fdivl
daa
push
sbb
insb
jnp
ds
std
mov
mov
loop
cmpsl
mov
and
xchg
jg
or
sahf
adc
dec
call
fldt
pop
inc
mov
and
pop
sbb
cmp
stc
mov
cli
cmpsl
mov
dec
lock
mov
pop
add
aaa
aad
or
ret
push
lds
or
mov
call
loop
push
outsb
pop
leave
aaa
filds
and
jmp
xor
jnp
aaa
mov
dec
fmulp
cmp
jg
movsl
push
xlat
in
stos
dec
ret
imul
les
jecxz
stos
movsb
mov
mov
dec
outsl
mov
repnz
mov
mov
mov
out
cmc
lahf
lods
adc
fbld
test
dec
test
cwtl
stc
cmpsl
sbb
jle
adc
jb
sub
mov
fists
pop
call
movl
lods
push
movsb
jg
loopne
inc
stc
jns
call
xor
outsl
hlt
in
mov
sbb
xor
ss
xchg
and
outsl
cmp
sbb
xchg
jne
cld
shl
push
mov
pop
loopne
aaa
lahf
aam
adc
push
jae
sub
outsl
adc
sbb
dec
insb
dec
cmc
add
or
shlb
dec
cmc
roll
icebp
pop
out
nop
jno
jge
mov
and
push
push
push
aas
shl
aad
mov
mov
fdiv
stc
out
arpl
adc
adcl
dec
lcall
stc
push
ja
mov
out
lods
push
pop
stos
mov
inc
fistl
xor
call
das
or
add
std
pop
jnp
sbb
mov
cmc
xchg
sub
lret
xchg
ljmp
jg
loopne
mov
call
or
cltd
xor
clc
mov
ficoml
sahf
aas
or
outsl
add
data16
fdivl
ficomps
insb
dec
lahf
cmp
inc
inc
push
pop
xchg
mov
sbb
aad
dec
ja
sub
dec
mov
aad
mull
jmp
pushf
pop
je
push
incb
neg
jmp
sbb
jle
adc
sar
adc
shlb
jno
sbb
cmp
pop
dec
mov
push
ret
lcall
and
dec
adc
setno
mov
arpl
orb
pop
mov
dec
loope
lds
push
mov
dec
mov
fucomip
mov
cmp
test
test
adc
lahf
lock
cmp
add
in
push
dec
and
lods
and
pop
cld
push
xor
push
cmpsb
out
mov
or
or
dec
pop
imul
mov
jp
hlt
or
cmp
fcomi
xor
dec
movsl
scas
bound
dec
and
push
or
push
mov
cmp
out
pop
decl
jg
jae
or
and
imul
or
idivb
push
pop
hlt
mov
jo
rclb
cli
ror
fdivrs
and
sub
ljmp
idivb
push
lock
imul
xor
shl
add
cld
mov
lods
or
mov
sysret
clc
sbb
cmpsb
ljmp
cmp
icebp
inc
out
jne
and
mov
add
out
cmp
jg
push
pop
sbb
rcll
cs
or
add
sbb
imulb
sbb
test
int
push
pop
push
cltd
shr
or
adc
mov
lock
lcall
shlb
cmp
loope
mov
sbb
mov
ljmp
xlat
inc
enter
incw
fidivs
adc
inc
push
cwtl
cmp
sbb
cwtl
test
hlt
lret
jo
xor
out
cwtl
sbb
call
fistpll
or
xlat
cmpsl
xchg
mov
mov
push
ret
fnstcw
inc
xchg
push
mov
fmull
ja
adcl
sub
lods
fisttpl
mov
fsubr
inc
ja
incl
lcall
push
jg
and
lahf
stc
jae
icebp
nop
and
mov
mov
cmc
dec
vmovdqa
in
fstl
cli
test
mov
cmp
adc
add
test
into
mov
inc
or
int
dec
and
push
mov
aam
mov
aas
js
imul
sti
cmpb
mov
or
dec
lea
pop
fistpll
shl
loop
clc
maskmovq
notl
pop
jg
leave
lahf
and
pop
xchg
ja
test
xorb
test
cmpb
sti
cmp
fnstsw
test
and
mov
jo
cmpsl
fistps
ljmp
jecxz
mov
jg
repz
push
cmp
hlt
aam
iret
loop
mov
nop
insb
movsb
rorb
adc
mov
lock
dec
jge
mov
les
jmp
push
popa
popa
adc
arpl
imul
mov
pushl
mov
fnsave
inc
fld
enter
ficompl
loop
std
inc
loopne
aad
jne
scas
sbb
xor
cmp
jb
jae
movsb
xorb
lea
and
cmpsb
es
lahf
icebp
aas
mov
and
jnp
hlt
fwait
test
xlat
add
loopne
dec
jae
mov
adc
ss
cmp
sbb
ss
xchg
sbb
cmp
loop
mov
std
and
rolb
ficompl
loop
in
lods
lods
inc
divb
xlat
adc
mov
icebp
loopne
pop
clc
fsubs
mov
and
pop
into
movsl
cwtl
jo
xchg
inc
add
sub
mov
add
in
cmpb
jp
cmp
mov
int3
in
int3
incl
cli
rorl
lret
add
cmpb
call
fs
lahf
lock
icebp
pop
jmp
dec
loop
orb
insb
lcall
push
jg
fcomps
mov
mov
pushf
push
fdivrl
cmp
idiv
inc
sbb
js
in
xlat
or
loopne
scas
rcrb
cmp
pop
sbb
into
popf
and
pop
lahf
nop
mov
call
sarb
rorl
jg
adc
in
mov
bound
cmp
jb
xchg
and
cmp
outsl
imul
or
jnp
cld
mov
sub
xchg
and
call
leave
lret
daa
gs
out
adc
add
jp
pop
xchg
push
sbb
pop
cmpsl
movsl
push
xlat
sbb
jb
jl
loopne
pop
jne
clc
push
lahf
mov
loop
jge
and
push
fwait
js
cmp
mov
push
sbb
cmpl
mov
mov
and
loopne
or
sbb
insb
in
bound
fcmovnb
cwtl
mov
push
loope
jae
and
jp
jns
shll
jbe
test
idivl
inc
xlat
stos
or
sbb
test
fdivrs
je
or
popf
das
dec
rcll
lcall
adcl
lret
mov
pop
cmp
sahf
or
fists
in
repz
or
jo
lods
inc
aad
fst
jmp
ljmp
add
inc
jle
mov
test
andl
pop
mov
mov
mov
cmp
adc
leave
push
loope
xchg
aas
inc
jnp
jo
sbb
shrl
insl
and
and
subb
xor
out
bound
outsb
lcall
dec
push
out
mov
in
xorl
imul
and
aaa
les
cli
pushf
adc
mov
stc
aad
fiadds
inc
mov
xchg
loopne
mov
in
hlt
jnp
mov
dec
pop
jbe
mov
ret
loope
cmc
add
adc
aaa
clc
xor
push
in
and
out
int
int3
sub
ret
test
mov
push
or
push
aas
adc
lret
imul
lods
das
push
das
mov
mov
iret
std
pop
mov
adc
dec
sti
into
mov
fisubs
dec
jecxz
sbb
dec
sbb
xchg
mov
inc
adc
sbb
xor
pop
jnp
mov
mov
sbbl
dec
cmp
adc
mov
aad
ret
mov
jo
sbb
push
stos
popf
fisttpll
ja
xchg
push
shl
pop
addr16
test
and
test
daa
xlat
jmp
ja
dec
xchg
push
xchg
mov
cmp
or
lea
lea
scas
push
sbb
fidivs
push
idiv
sub
int3
sbb
xor
fwait
ds
ret
flds
fistpll
aam
sub
adc
cmp
outsl
js
sbb
shlb
push
push
push
decl
jg
jge
fcomps
fwait
mov
sar
movsb
movsb
cli
and
ja
in
mov
fildll
sbb
insb
jecxz
mov
loope
push
icebp
ds
pop
push
pop
mov
jle
cmpsl
lcall
sbb
mov
addr16
fildll
lock
xor
daa
jp
aam
addr16
loope
daa
lock
jno
adc
shl
fcoml
js
pushl
ds
cmc
xor
sub
sbb
push
repz
jg
imul
pop
jecxz
mov
sbbl
int
xchg
lea
pusha
xor
pop
lea
sbb
cmc
pushl
fwait
jecxz
xchg
icebp
popa
jg
adc
adc
in
pushf
sar
mov
cs
mov
dec
and
cmpsl
iret
shl
xchg
jg
push
ljmp
fidivrl
push
movsl
xlat
movsl
push
cmp
add
sub
std
push
add
das
fisubrl
lret
jmp
xor
sbb
pop
ljmp
sbb
imul
inc
decl
adc
xor
mov
decl
jbe
jmp
cwtl
mov
and
out
aad
decl
jg
mov
inc
je
inc
mulb
jae
mov
aam
pop
lods
dec
mov
sub
fdivr
and
aas
cmp
cwtl
movsb
mov
sti
ja
loopne
bound
pop
loop
mov
jo
jmp
and
lret
add
lds
add
cli
dec
sbb
mov
cmp
jg
mov
mov
adc
sbb
fstpt
test
push
into
pop
add
jecxz
dec
add
sti
jnp
pop
outsb
adc
insl
aas
sub
dec
push
stos
fistps
ds
in
shl
mov
ja
fwait
cmpsb
out
popa
in
test
sub
ja
stos
sbb
mov
fwait
pop
jecxz
inc
push
sub
cmp
mov
out
xor
inc
push
fs
popf
sti
pop
fsubr
clc
hlt
repnz
lcall
aad
mov
mov
or
bound
addr16
fnsave
js
fisubl
xchg
sbb
out
mov
pushf
jbe
jnp
xor
xchg
push
loope
shl
pop
mov
mov
cli
lahf
sti
jae
xorl
jmp
aaa
cmp
cs
jg
xchg
repz
push
mov
pop
xor
sbb
clc
aas
mov
mov
loope
cld
xchg
fdivr
cmp
jo
pop
je
test
mov
push
jg
mov
cmp
pop
inc
out
mov
sbb
int
mov
cmp
iret
stc
es
and
jle
mov
out
sarb
aas
inc
inc
xchg
and
adc
lea
mov
mov
repnz
bound
dec
mov
jb
sub
scas
or
loopne
cld
cmp
xor
jnp
pop
sub
add
push
mov
jbe
jo
out
std
cwtl
adc
dec
mov
test
les
aam
add
pushl
movsb
push
sbb
mov
sbb
call
jle
lods
lds
arpl
clc
ja
int
xorl
jmp
mov
int3
jg
cmc
push
shll
jecxz
cs
das
push
push
hlt
aas
mov
js
addr16
fcmovu
adc
mov
xchg
xchg
xor
jg
inc
sub
je
pop
pushf
cmp
ja
fidivrs
mov
xchg
inc
nop
psubusw
rcr
int3
rcr
js
cmpsb
stc
push
lods
lods
add
ds
cli
hlt
pop
imul
fsts
pop
loop
jl
jl
push
sbb
push
xchg
stos
add
push
shlb
clc
les
lods
xchg
scas
lcall
in
shlb
push
pop
sub
lret
jecxz
add
fadds
push
movsl
movb
cli
xchg
inc
mov
add
pop
sub
sti
pop
sbb
fwait
movsl
ret
dec
mov
pop
nop
inc
pop
lcall
add
jo
pop
je
lock
sub
bound
stc
popf
jo
push
inc
movsb
cmp
dec
daa
cmp
add
mov
clc
mov
aaa
adc
add
cmp
into
sub
adc
pop
mov
or
shrb
in
clc
mov
mov
stc
pop
lret
jecxz
lcall
sub
repnz
pop
inc
push
mov
sub
cmpsb
adc
adc
push
sbb
insl
cli
fnstsw
mov
outsb
add
stos
jnp
cmpsb
stos
scas
cmpsl
fsubrl
push
add
jg
outsl
sbb
in
xor
repz
inc
int
dec
sbb
adc
jecxz
aas
lcall
inc
pop
in
cmp
movsl
fwait
ljmp
hlt
rcll
push
jecxz
ljmp
and
sub
ja
pop
or
sbb
xchg
scas
in
push
cmp
and
out
dec
clc
arpl
xor
jg
in
adc
outsl
lock
cmc
rorb
xor
ss
and
pop
adc
push
cmc
adc
call
lcall
call
cli
mov
pop
dec
dec
xchg
mov
inc
add
inc
adc
call
adc
push
dec
adc
xor
and
test
inc
test
jp
dec
add
adc
pop
adc
sub
adc
pop
sub
ficompl
cmp
push
xor
push
and
in
andb
dec
add
adc
stos
mov
or
jp
in
or
dec
outsl
stos
inc
stos
mov
lcall
push
insl
gs
mov
js
pop
xchg
pop
mov
xor
push
inc
ret
sbb
adc
mov
add
sub
mov
adc
pop
or
out
mov
xor
sub
or
push
popa
sahf
push
or
bound
push
inc
les
in
adc
xor
jno
test
or
mov
lcall
rorl
push
ret
jp
dec
dec
adc
add
popa
dec
and
ret
adc
jge
mov
xor
cwtl
mov
fsts
cwtl
jl
imul
mov
cld
inc
mov
jnp
inc
je
rclb
popa
jnp
jbe
xor
jp
arpl
ds
push
daa
mov
xlat
mov
or
push
mov
adc
int3
scas
push
or
fs
sbb
mov
jns
addb
push
mov
xor
pop
popa
inc
loop
mov
lods
gs
daa
adc
add
mov
mov
mov
jmp
std
sbb
sub
add
mov
ret
pop
or
jmp
sbb
sub
pop
dec
mov
xor
jmp
dec
rcrb
inc
cmp
xor
mov
test
mov
add
fwait
ret
movq
mov
mov
jno
sbb
clc
bound
daa
xor
jno
or
loopne
sbb
or
aas
jb
stos
push
popa
xor
add
bound
mull
testb
push
test
mov
dec
xchg
bound
rcr
scas
mov
or
xor
dec
dec
add
adc
je
push
dec
popf
xor
and
adc
and
add
mov
rcrl
cmp
stos
xchg
mov
mov
cld
rcrl
xor
mov
ret
add
push
or
push
or
idiv
das
or
test
stos
stos
divb
or
or
addb
inc
mov
cmp
and
fsubl
cmp
jg
lods
xchg
stos
bound
jne
mov
clc
dec
fbld
in
dec
adc
call
push
push
mov
lret
mov
int
xor
gs
pop
js
jecxz
in
mov
sbb
jge
stos
mov
push
sub
mov
insb
mov
insl
daa
ja
adc
push
xchg
es
adc
mov
loope
pop
mov
inc
sbb
mov
jno
sar
jg
mov
andl
push
insb
mov
add
or
or
push
and
mov
gs
push
xchg
ret
mov
ret
and
lods
and
dec
fiaddl
lret
or
cs
adc
pop
push
xchg
divb
inc
adc
aaa
loop
ret
fbstp
movb
popa
xor
inc
mov
clc
sub
mov
push
push
out
add
dec
popa
insb
mov
pop
outsb
jmp
sbb
dec
rolb
mov
iret
pop
sbb
dec
addr16
mov
aam
int3
out
push
add
or
popa
daa
lcall
gs
mov
fucomi
imul
gs
fcmovnb
insb
inc
rcrb
ret
mov
mov
jns
rcrl
push
xchg
adc
push
add
mov
test
mov
jmp
popa
add
push
adc
sub
push
mov
mov
push
or
ret
imul
jbe
dec
lea
into
cmc
sbb
dec
jne
aad
pop
adc
inc
rol
ret
inc
repz
in
inc
ret
inc
bound
adc
push
lahf
shll
sbb
je
mov
mov
adc
adc
scas
sbb
loopne
loope
cld
jno
fcmovu
ds
adcb
addl
push
lcall
xchg
mov
daa
dec
sbb
jecxz
cld
int
mov
stos
add
cs
pushf
xor
mov
ret
or
movsl
jle
movsl
push
into
push
adc
inc
push
cld
loopne
sbb
cmp
sbb
push
pop
pop
loopne
lret
pop
xor
sub
out
add
sbb
mov
mov
lret
mov
adc
xlat
pop
into
iret
ret
in
popa
pop
cmp
fmul
mov
es
fmulp
or
repnz
push
ret
and
sbb
inc
jo
mov
mov
inc
pop
cmp
dec
ret
push
sbb
ljmp
inc
xor
adc
add
mov
mov
int3
mov
daa
repnz
sub
adc
dec
adc
pop
mov
aaa
push
and
push
bound
and
imul
sbbl
test
add
xchg
or
cmp
mov
or
out
sub
sahf
xor
cwtl
rcl
lock
mov
or
inc
sbb
mov
pop
and
pop
lcall
in
xor
mov
add
hlt
adc
add
mov
jbe
xor
and
gs
mov
xor
add
inc
add
mov
imul
mov
pushf
or
inc
test
into
mov
aaa
add
sbb
xor
mov
notl
push
rcll
scas
cmp
mov
lods
or
mov
inc
push
fdivr
and
cs
lods
shrl
mov
xor
and
mov
lea
aas
jp
mov
subl
mov
imul
xchg
mov
daa
in
xchg
or
aaa
inc
mov
inc
lret
bound
pop
or
testl
or
cmpsb
out
push
xor
xchg
pop
sbb
and
dec
jnp
loop
call
shll
jno
and
push
cwtl
push
fimull
popa
push
outsl
out
lds
stos
cld
sar
dec
sbb
add
and
push
xchg
scas
pop
push
icebp
xchg
push
inc
vminss
je
popl
cmp
inc
push
inc
insb
mov
and
ret
dec
gs
sbb
adc
loopne
xorl
adc
jb
test
lcall
sub
loope
fwait
call
ss
xchg
jnp
gs
nop
out
pop
and
ret
push
js
repnz
mov
pop
and
jno
mov
int
dec
ret
ficompl
xchg
pop
pop
jne
or
xlat
into
mov
jno
cli
or
cltd
hlt
mov
cwtl
xor
bound
cld
lcall
mov
dec
xor
push
xchg
roll
ret
mov
push
call
xor
pop
push
ret
cmpsb
stos
sub
imul
jecxz
js
or
push
imul
pop
andb
or
testb
loopne
sbb
inc
cld
sub
add
mov
push
inc
dec
adc
imul
pusha
dec
in
sub
rclb
mov
dec
push
xor
call
jb
mov
dec
adc
mov
inc
mov
xchg
mov
test
cmp
js
inc
enter
xchg
and
add
mov
add
popf
pusha
add
jae
jb
shlb
dec
testl
or
into
push
adc
xorb
ret
les
gs
push
push
ret
cmp
daa
insl
sarl
ds
mov
push
xor
and
mov
sbb
dec
mov
mov
and
jp
xchg
rcrb
mov
xor
jno
dec
data16
sub
inc
mov
add
add
push
mov
pop
psrlq
push
pop
bt
nop
sub
jge
adc
lock
clc
shl
test
lcall
pop
add
jno
jno
pop
jnp
inc
movsl
sbb
stos
mov
xor
inc
cmp
adc
fsubl
cltd
cmp
daa
sub
sub
mov
cld
fadds
rcrl
aad
jae
shll
add
insl
sub
in
add
ret
xor
inc
inc
xor
lods
push
xchg
repz
jg
mov
fisttpll
sahf
sbb
sub
fistps
xor
and
notb
sbb
inc
and
lcall
xchg
shrb
cmc
mov
inc
js
arpl
lret
mov
ror
dec
or
adc
xchg
inc
pop
pusha
cmp
scas
shrl
fstl
mov
xor
das
aad
movsb
outsl
or
hlt
push
dec
xchg
fidivrl
xchg
iret
pop
movsl
out
lea
mov
in
pop
or
sbb
dec
scas
or
popf
add
in
iret
adc
addr16
mov
popa
xor
mov
xlat
inc
aam
or
hlt
mov
scas
mov
push
adc
xor
in
xchg
push
mov
cmp
cli
cli
sub
sub
daa
xchg
push
adc
xlat
mov
or
or
inc
push
dec
mov
sub
cmpsl
inc
cmp
rclb
or
inc
scas
into
fcoms
push
popa
jo
push
into
inc
or
xor
add
or
xlat
and
mov
push
lea
test
insl
or
pop
arpl
push
popa
in
es
ficomps
or
adc
xor
sub
ljmp
push
test
adc
xor
inc
iret
insb
sbb
xor
mov
ds
in
insl
dec
dec
inc
push
orl
and
je
push
mov
or
sbb
dec
loope
stos
cmp
icebp
mov
push
inc
scas
in
lret
adc
mov
aaa
mov
scas
push
aaa
cld
lret
xor
cmp
aad
adc
adc
pop
inc
ja
jecxz
or
push
iret
cmp
hlt
fcoms
xchg
or
xchg
pop
adc
push
push
mov
sbb
mov
push
adc
or
mov
int
dec
hlt
in
mov
xor
xchg
jmp
xchg
pop
xchg
loopne
das
stc
inc
mov
lds
es
push
mov
stos
dec
cld
dec
insl
add
fsubl
popa
test
dec
pop
inc
mov
dec
push
mov
scas
sub
sub
sbb
cmpsb
inc
lds
push
push
and
outsl
mov
hlt
jmp
pop
adc
xor
or
push
es
or
push
mov
testl
push
push
xchg
jno
xor
sbb
cmp
mov
ret
insb
scas
pop
lcallw
push
adc
xor
push
mov
add
dec
scas
and
int3
adc
rorl
mov
xor
dec
xor
int3
cld
push
xor
mov
mov
scas
pusha
js
xor
mov
bound
hlt
jecxz
pop
inc
mov
add
cli
xchg
rol
jno
dec
test
popa
mov
mov
or
stos
mov
into
ret
lcall
push
mov
mov
fnsave
xchg
cmp
mov
xchg
mov
inc
fwait
subl
cmp
xchg
inc
pop
unpckhps
mov
push
stos
sub
bound
xor
insb
into
xchg
push
push
cs
rorl
inc
jmp
push
faddp
jno
insl
inc
imul
mov
jl
dec
pop
or
or
xchg
inc
sub
pop
xor
sub
mov
push
popa
into
push
popa
enter
shlb
mov
shll
rolb
ffree
stos
push
mov
rcrb
popa
adc
xor
fwait
cmp
jl
adcb
in
inc
std
or
push
push
push
push
mov
fcoml
add
or
push
aaa
push
movups
jae
movb
dec
adc
hlt
adc
lds
aam
fcomps
add
fbstp
into
ret
inc
adc
dec
fs
outsl
mov
xor
loopne
addr16
jmp
push
push
sbb
mov
mov
adc
or
xor
pop
int
mov
arpl
pop
sub
jecxz
pop
add
mov
jl
lcall
fs
jno
inc
sub
insl
dec
xchg
sbb
hlt
xor
data16
btc
add
push
mov
dec
push
arpl
iret
ds
xchg
adc
jge
sarb
popa
rolb
mov
es
jno
inc
push
pop
mov
ret
adc
add
jno
mov
mov
out
and
clc
rclb
jae
adc
ret
test
pop
sub
ret
add
lock
mov
jnp
insb
push
push
sbb
scas
push
int
int
lret
or
mov
gs
fwait
lds
shlb
xchg
stos
adc
stc
add
hlt
mov
or
cmc
xor
dec
ret
push
insl
aad
dec
sub
or
out
add
inc
sub
sbb
mov
xor
sbb
lds
inc
shll
dec
outsb
pop
adc
cmp
mov
rcrb
lds
int3
sub
add
xchg
or
jae
adc
pushf
mov
push
rolb
scas
mov
mov
push
enter
fnsave
addl
lds
jmp
fbstp
test
pop
mov
or
outsl
loopne
mov
mov
dec
jo
shll
xor
push
mov
xor
jno
adc
mov
mov
mov
inc
push
xor
push
xchg
outsb
push
mov
add
bound
sti
push
les
push
js
mov
inc
xchg
popa
enter
ja
mov
and
push
add
shrb
dec
fisubl
stos
sub
pop
rorb
addr16
inc
add
cwtl
xchg
fmuls
adc
add
jae
je
aad
sbb
pop
arpl
xor
loopne
sbb
inc
xchg
icebp
mov
js
xchg
shrl
mov
mov
mov
push
aad
addr16
es
shll
pop
sarl
sub
cmp
gs
loopne
add
subl
inc
jo
xchg
add
dec
mov
inc
rcrl
pop
sub
test
movl
ret
pop
mov
out
mov
loopne
sbb
cld
test
push
adc
jl
mov
out
mov
insb
orb
cld
fadds
xor
fcomp
adc
cmp
mov
scas
jnp
test
xor
fsubrl
or
lods
inc
adc
jmp
fldl
clc
mov
gs
xor
test
mov
or
test
and
pusha
pop
cmp
dec
cs
mov
and
cmc
and
adc
sub
or
xchg
insl
jecxz
push
imul
pop
mov
loope
cli
lods
stc
dec
dec
cmp
test
mov
and
mov
loopne
imul
fcmovne
push
rclb
mov
in
add
scas
or
pop
jo
mov
jno
es
add
fiaddl
xlat
mov
jno
dec
popf
mov
cmp
subb
push
adc
adc
stos
and
movsl
add
bound
cmp
or
shl
mov
push
leave
xchg
pop
bound
cmpsb
dec
push
xor
jb
or
pop
cmp
rcrl
mov
or
sbb
lahf
xor
pop
dec
mov
call
adc
stos
xor
inc
ret
das
push
nop
aam
mov
lds
push
add
cmp
mov
inc
or
dec
jno
ss
int
mov
mov
mov
ss
push
push
mov
arpl
inc
mov
fbld
xchg
mov
inc
into
ror
dec
pop
jae
test
dec
adc
push
pop
xchg
mov
mov
lret
int3
adc
sub
dec
xor
mov
adc
inc
inc
sub
pusha
clc
test
movsl
xchg
inc
hlt
dec
stos
add
cmovno
je
mov
push
pop
movsl
dec
sub
mov
mov
clc
test
scas
fidivrs
popa
pop
mov
popf
mov
push
sbb
aas
jo
push
mov
xor
pop
cs
rorb
lock
jno
adc
xor
lcall
rcr
sbb
lcall
add
add
adc
add
loopne
enter
or
add
inc
add
jo
jno
cmpb
popf
mov
incb
incl
arpl
inc
into
dec
add
mov
gs
add
test
cmp
add
dec
push
imul
mov
dec
mov
es
adc
gs
pop
mov
adc
out
cmpsb
pusha
and
ret
hlt
inc
dec
xor
mov
mov
xor
cmpb
mov
lds
rorb
jno
mov
aad
inc
dec
lret
xchg
out
gs
mov
xchg
es
mov
sub
rol
adc
adc
push
jae
test
add
andb
mov
adc
gs
cld
lods
test
hlt
ret
daa
push
pop
mov
xchg
pop
cmp
das
push
adc
or
fildll
fcoml
dec
les
mov
adc
gs
rorb
xorl
decb
loop
xchg
jnp
jne
test
push
sub
and
outsb
lods
imul
adc
inc
cwtl
sub
test
mov
inc
addb
out
mov
hlt
mov
inc
adc
push
mov
ret
loopne
mov
jmp
cmpsb
push
orb
push
bound
mov
push
pop
sub
inc
shlb
inc
je
test
inc
adc
loope
inc
fdivrs
adc
mov
mov
movsb
enter
push
inc
mov
gs
rol
lret
push
arpl
or
push
test
adc
pop
sbb
daa
shlb
mov
ds
stos
mov
inc
mov
push
and
inc
mov
inc
mov
adc
xor
pop
adc
jb
scas
sub
in
push
clts
rorl
addr16
xchg
rorl
mov
or
insl
xor
inc
mov
xorb
test
lea
push
push
lahf
mov
sbb
pop
shrb
add
sub
or
sbb
sub
xchg
sbb
sub
push
push
and
inc
loope
push
pop
lea
mov
mov
sbb
aad
xchg
jecxz
push
roll
mov
clc
rclb
jno
bound
xchg
mov
mov
push
js
push
cmp
xor
dec
test
xchg
lods
mov
xchg
adcb
xor
rcrl
sbb
cli
inc
push
pushf
xlat
push
push
fildl
sub
jns
jl
cmp
aam
pop
or
test
push
outsl
dec
xchg
mov
in
fildl
out
ror
bound
xchg
pop
rcrl
popa
in
jno
xchg
cmpb
xchg
loopew
loope
repnz
inc
lret
inc
js
mov
mov
xchg
push
jnp
mov
sub
mov
mov
or
nop
in
pop
jo
xchg
mov
mov
cmpsb
test
and
mov
and
mov
ficoms
cld
push
cmp
add
arpl
push
and
pop
add
mov
gs
sbb
test
cli
lcall
or
cwtl
test
into
adc
pushf
add
fisttpll
adc
sti
mov
cmp
shrb
inc
mov
xchg
decl
dec
lods
xor
faddp
inc
popf
out
add
mov
push
out
popa
and
daa
mov
insl
inc
cmpsb
sub
mov
mov
pop
mov
aas
inc
imul
fnstenv
or
mov
or
gs
jl
les
xor
andl
inc
mov
enter
push
sbb
push
sbb
pop
les
xor
push
stos
aad
add
mov
sub
mov
jno
and
insl
dec
mov
or
push
clc
stos
gs
ret
xor
pop
pop
inc
aam
pop
jmp
mov
mov
sub
sub
scas
cmp
in
scas
in
shll
nop
daa
add
into
rolb
or
test
rorb
fidivrs
inc
gs
mov
test
push
sarb
and
cmc
aam
rorl
push
sbb
ljmp
push
pop
call
bound
mov
out
outsb
pop
sti
pop
sub
add
mov
mov
and
add
inc
cltd
xor
xor
sbb
sti
xor
jae
pop
mov
scas
push
mov
pop
cmp
xor
rol
add
test
sbb
out
xchg
ret
sbb
mov
mov
std
into
flds
push
rcll
pop
xor
xlat
inc
add
jp
xchg
adc
test
add
mov
sbb
int3
mov
imul
hlt
js
inc
lahf
repnz
aad
rcll
pop
hlt
or
in
ret
add
daa
shlb
or
daa
mov
repz
xor
and
sub
sbb
out
push
mov
imul
and
repnz
mov
hlt
popa
imul
jmp
inc
xchg
shlb
decl
jge
gs
dec
pusha
dec
xor
jp
std
stos
or
insb
sbb
aaa
cltd
mov
sarb
xor
rol
sub
xor
inc
ja
mov
mov
mov
hlt
xlat
adcl
or
test
sbb
mov
pop
jnp
inc
fldl
dec
repnz
mov
push
test
or
fcmovnb
push
leave
xor
cmp
mov
pop
ja
sub
and
sub
or
mov
lcall
ret
in
xor
out
out
push
lods
das
mov
cmp
mov
andl
push
imul
add
femms
pop
and
dec
mov
aam
mov
imul
dec
sub
xor
into
out
add
shll
xchg
mov
fimuls
cmpsb
jg
sbb
inc
cmp
mov
sub
adc
rclb
dec
push
jecxz
push
fwait
cltd
cld
add
sbb
daa
test
popa
inc
mov
dec
inc
out
leave
mov
adc
gs
mov
pusha
dec
jne
cmpsl
out
ret
aad
pop
jb
mov
push
shll
push
xor
add
cmp
sub
mulb
xlat
add
pop
insl
and
stos
popa
in
or
xchg
and
push
scas
js
and
insl
mov
push
pusha
idivb
lds
fisubrs
movsl
pop
inc
mov
subb
cli
xor
inc
cs
jnp
add
cmp
roll
stos
andb
dec
mov
sub
jl
push
pop
mov
pop
hlt
or
fidivl
dec
std
pop
push
data16
movsl
gs
mov
into
mov
rolb
pop
push
mov
fs
mov
mov
adc
adc
loope
push
mov
out
lods
inc
adc
int
add
lods
cmp
sub
test
shll
movl
pop
subb
dec
test
adc
pop
setl
inc
mov
or
popw
cmc
lcall
roll
inc
lahf
pop
xchg
adcb
stos
mov
or
xchg
xor
sub
adc
lds
pushf
and
mov
push
jp
or
push
ret
popa
orl
xor
mov
sbb
insb
inc
in
push
subl
sub
push
cs
jmp
adc
inc
adc
mov
and
lds
xchg
mov
push
lcall
addb
inc
mov
js
dec
stos
jmp
inc
and
jp
sarl
ja
or
je
dec
inc
cmp
push
imul
xchg
xor
arpl
aas
xlat
mov
push
add
cmp
mov
scas
imul
div
mov
jg
jo
insl
bound
outsl
sti
push
pusha
outsl
xchg
inc
imul
shl
xchg
call
jmp
jbe
pop
cld
in
or
cmp
test
mov
fcomp
push
fldt
daa
jno
sbb
data16
mov
subb
cs
mov
cmpsl
xor
icebp
jno
cmp
stos
inc
jb
cmp
inc
inc
mov
mov
sub
dec
mov
pop
add
jo
pop
jmp
pop
push
shl
adc
adc
mov
bound
cmp
xor
test
push
aam
aam
inc
fnsave
ljmp
cmpsl
aad
orb
stos
icebp
sbbl
out
stos
mov
inc
call
mov
add
push
into
jecxz
push
rol
roll
push
jae
cmp
loop
xchg
imul
mov
sub
shl
jnp
jne
push
psrlq
iret
and
and
push
into
cli
scas
mov
or
fiaddl
test
or
rol
cld
sahf
leave
add
dec
pusha
add
adc
aad
xlat
inc
pop
xchg
bound
cmpsb
or
jmp
scas
mov
roll
jo
rcl
jmp
pop
sub
sub
push
or
inc
jae
mov
mov
jmp
push
sbb
adc
mov
mov
outsb
mov
in
js
into
sarl
fisttpl
out
shl
adc
mov
jp
jecxz
enter
sub
sti
fildll
pop
push
outsl
sbb
roll
sbb
inc
pop
inc
lcall
adc
or
popf
dec
scas
mov
cmp
xchg
push
pop
dec
push
in
xchg
or
add
cmpsb
mov
mov
add
rcll
jnp
sbb
jnp
mov
mov
mov
pop
outsl
mov
lea
mov
adc
xorl
push
adc
daa
js
or
out
lar
lret
loopne
scas
hlt
test
cld
push
add
jmp
dec
das
cmp
repz
test
dec
pop
and
cwtl
jmp
fidivl
sbb
or
mov
add
mov
mov
mov
mov
cli
mov
push
adc
data16
adc
out
das
sub
adc
sbb
into
ror
xor
cld
xor
adcl
repz
xor
lods
lret
loop
out
cmp
inc
jecxz
jp
stos
shl
sub
add
jecxz
add
xor
in
fldenv
inc
imul
dec
cld
decl
add
daa
arpl
push
outsb
jbe
add
insb
push
addb
push
lock
jae
mov
imul
popf
push
in
inc
adc
daa
and
mov
add
xchg
pop
loop
pop
into
gs
inc
sbb
gs
jp
jo
or
imul
xor
push
mov
dec
stos
cmc
add
cmp
lcall
dec
and
sahf
test
ds
fmuls
cmc
pusha
jno
add
insl
add
mov
cmp
adc
push
push
push
setnp
inc
adc
pop
movsl
dec
xor
sbb
pop
setp
mov
or
mov
xchg
neg
cmp
mov
dec
gs
sub
pop
or
and
push
inc
sbb
xchg
fidivrs
js
sahf
jnp
jns
mov
push
and
int3
lret
pop
ja
rclb
push
xor
cs
popa
inc
nop
cmp
or
aam
icebp
sbb
aam
sub
adc
loop
jb
pushf
stos
pusha
xor
pop
shlb
outsl
aas
sub
add
jmp
mov
xchg
mov
pop
dec
or
sbb
sbb
stos
idiv
orb
sub
jg
xor
out
stos
mov
stos
jno
mov
rclb
mov
mov
hlt
into
add
icebp
popf
mov
dec
mov
mov
lock
pop
adc
and
push
addl
cmp
dec
adc
lea
mov
jge
pop
mov
hlt
mov
fistl
popa
pop
lcall
dec
sbb
call
push
aam
cmc
loope
add
mov
xor
dec
gs
or
js
or
cmp
xchg
rol
sub
faddl
push
mov
or
sub
mov
ja
scas
add
xchg
add
in
adc
in
inc
int3
adc
pop
or
pop
imul
or
sub
inc
into
push
mov
and
pop
cmp
enter
test
repz
cltd
push
pop
lea
lea
jp
sbb
cltd
mov
adc
add
push
push
mov
mov
add
pop
sarl
repz
sub
outsb
dec
scas
ficoms
insl
xor
test
jo
pop
xorb
or
sub
push
subb
gs
mov
arpl
call
jg
scas
or
xor
push
xchg
stos
push
push
imul
daa
hlt
mov
mov
popa
mov
add
inc
push
dec
cmpsb
sbb
je
jno
push
and
stos
push
lds
or
mov
call
insl
add
std
or
cmp
movsl
jg
pop
pusha
shlb
mov
pop
jecxz
inc
cmpsl
insb
mov
adc
push
outsl
stc
jo
inc
les
sub
popa
popa
daa
and
adc
in
daa
pop
inc
sub
inc
inc
pusha
mov
or
mov
mov
ror
mov
popa
dec
mov
mov
add
test
mov
roll
push
cmp
rclb
inc
mov
adc
xchg
aam
mov
dec
loope
outsb
hlt
mov
add
xchg
ss
inc
lea
dec
adc
es
xchg
ds
cmpsl
ret
sbb
hlt
rorb
xchg
xchg
push
bound
mov
test
pop
stos
ss
add
adc
xlat
ret
daa
xor
adc
fstl
xchg
jo
push
adc
jp
add
push
test
wbinvd
out
push
push
mov
mov
bound
gs
mov
mov
or
in
add
or
pop
push
push
push
test
inc
shlb
rclb
push
arpl
test
shl
test
sbb
xor
wrmsr
rol
cli
add
push
xchg
or
adc
in
mov
mov
jnp
xlat
push
test
jo
dec
std
cwtl
cwtl
icebp
insb
xchg
fmul
pop
xor
dec
adc
jb
jnp
inc
shrl
fadds
push
leave
mov
enter
cmpsb
lods
stos
inc
fcoml
ljmp
test
fadd
fs
sub
inc
pusha
leave
fldenv
out
adc
aam
stos
and
xchg
or
lcall
mov
mov
cmp
adc
pop
xchg
mov
xchg
sbb
rol
mov
or
hlt
mov
xchg
popa
and
mov
fmull
test
dec
repnz
sbb
subl
xor
cmp
sub
or
mov
mov
rolb
pop
dec
cmp
out
jmp
js
int
and
jae
lods
decb
cmp
cmp
gs
gs
inc
testb
mov
icebp
sub
lcall
xchg
mov
in
dec
jnp
xor
loopne
ret
mov
inc
mov
cmc
push
jp
mov
pop
adc
and
fs
das
or
push
aad
cmp
je
xchg
xor
hlt
es
xor
call
popf
js
aam
ja
shll
adc
insb
xor
jnp
js
cmp
orps
lock
out
and
scas
es
add
or
pusha
mov
mov
jno
aas
pop
imul
sub
pop
or
pop
xchg
mov
sub
mov
aad
xchg
ljmp
jb
ja
sbbl
inc
sub
mov
add
jb
add
movsl
jae
add
sub
adc
popa
in
cmpsl
adc
ret
sbb
sub
stos
cmp
push
lcall
mov
fisttpl
mov
xor
xchg
push
or
add
mov
pop
push
mov
sbb
sbb
scas
hlt
push
rcrb
inc
test
sbbb
mov
inc
ret
in
rclb
lcall
lods
shl
mov
xchg
cld
sti
mov
mov
mov
in
in
roll
pop
pop
cli
add
test
es
rorl
or
rcrb
push
mov
pushf
mov
push
add
cs
movsl
jo
pop
fcom
add
pop
dec
mov
add
inc
mov
shlb
leave
mov
mov
mov
pop
or
inc
jae
dec
push
daa
adc
mov
pop
jno
jmp
sbb
adc
dec
imul
pusha
jle
bound
imul
js
fisubrs
movsb
or
pop
into
pop
loope
mov
inc
or
dec
or
push
push
cmp
pop
ret
jg
ljmp
inc
mov
stos
dec
or
mov
filds
sbb
outsb
jge
faddp
out
sub
movsb
cmp
test
outsl
sub
pusha
mov
or
dec
pop
loopne
pop
mov
push
jno
enter
jecxz
push
fnstenv
sahf
mov
pop
ret
mov
in
push
scas
inc
repz
xor
andl
inc
shlb
mov
dec
lahf
xor
mov
pop
jae
js
push
inc
daa
inc
fwait
dec
orb
stos
test
inc
mov
sub
xor
mov
mov
mov
mov
test
call
push
ljmp
orb
mov
mov
cld
jp
pop
and
mov
xchg
imul
andl
dec
popl
mov
xor
cmp
push
mov
pop
or
sbb
add
or
lods
mov
aas
xor
push
push
sub
out
xor
lock
cld
je
lds
shrl
add
sub
add
dec
sbb
adc
jno
in
cmp
xchg
dec
mov
push
sbb
mov
sbb
mov
jecxz
push
sbb
rcl
and
sub
rclb
mov
cmpsb
lods
sarb
inc
mov
test
loopne
or
push
xor
xchg
cmp
or
inc
xchg
add
stos
cmp
jecxz
lods
and
imul
cmpb
es
arpl
add
ret
mov
push
xlat
mov
xor
in
fcmovb
and
pop
add
jp
in
adc
pop
push
cmp
std
pushl
add
ja
pusha
incl
shlb
into
popf
push
cs
push
mov
sub
mov
pop
xchg
mov
inc
mov
scas
push
cmpsb
gs
movsl
mov
mov
ret
rcll
adc
cmp
mov
push
push
sub
adc
gs
arpl
push
pop
outsl
movl
out
cmpsb
fldenv
adc
in
mov
decl
repnz
loopne
push
push
ror
cmp
or
push
dec
adc
daa
pop
adc
adc
dec
or
jae
into
movsl
jb
inc
mov
add
sbb
pushf
loope
add
push
inc
popa
lahf
aad
cmpsb
ficomps
mov
int
add
xlat
mov
sbb
pop
imul
in
sub
mov
inc
movsl
fidivrs
mov
mov
fs
das
push
xor
sbb
scas
or
adc
rclb
mov
mov
cmpsb
sbb
loopne
inc
loop
mov
sbb
cmp
push
ret
cmc
sub
ss
mov
and
xor
push
shlb
mov
movsl
xchg
mov
rclb
mov
mov
push
xchg
rcll
mov
loope
and
pop
inc
or
pop
mov
insb
mov
cmc
adc
sub
jg
push
and
push
push
insb
push
push
cmpsl
ret
pop
js
mov
or
pop
mov
push
add
cmp
cmpsl
jg
mov
not
pusha
imul
test
imul
dec
push
xchg
cmp
sub
jns
shrl
cmp
js
or
push
push
sub
scas
mov
cld
pop
popa
add
push
add
stos
push
adc
push
add
gs
call
push
mov
sti
dec
insb
mov
xchg
stos
xor
dec
loopne
xor
jns
pop
cmp
mov
xor
pop
push
shl
test
fsubs
lcall
lods
into
jmp
push
push
push
xor
jmp
test
dec
adc
cwtl
stos
fs
or
push
repz
xchg
adc
bound
pop
pop
loope
pop
leave
push
pusha
leave
mov
push
dec
bound
dec
sbb
push
mov
xor
or
push
push
ret
or
sahf
or
dec
and
int
mov
pop
xor
in
mov
int
jbe
sub
push
sbb
in
ss
sub
adc
cmp
aad
mov
hlt
cmc
jp
jo
or
mov
jae
adc
scas
sbb
cmp
jae
push
popa
jae
or
lds
add
in
adc
lcall
pop
je
mov
ds
xlat
dec
cmpsb
dec
pop
sbb
addl
push
pop
test
pop
adc
fdivs
bound
mov
mov
cmc
mov
mov
xchg
mov
inc
inc
imul
or
inc
dec
in
in
mov
cs
notl
inc
inc
jne
pop
test
movsl
jnp
out
cmp
call
jmp
inc
or
push
fsubl
rcl
mov
fwait
adc
rcrb
or
mov
ret
push
xchg
inc
cmp
push
mov
adc
cltd
mov
jno
push
cmpsl
sub
pop
adcl
cld
mov
push
imul
into
test
sub
inc
add
and
fstps
dec
pop
dec
xor
cmp
push
dec
push
imulb
fadds
enter
add
inc
add
popf
sarb
inc
ret
jle
dec
enter
push
call
push
push
sub
ds
inc
dec
push
sub
sub
lcall
xchg
cld
push
pusha
lods
fcoml
hlt
aad
rcl
inc
aas
mov
rcrb
push
mov
rcrb
add
lahf
ret
in
fildl
cmp
movsl
inc
insl
or
in
scas
push
lock
add
imul
cmp
sub
push
push
lods
dec
es
sbb
in
scas
fcoms
xor
mov
xor
xor
push
push
in
mov
cmc
shlb
inc
inc
pop
not
shlb
push
stos
add
push
hlt
xchg
sub
sub
mov
mov
jnp
mov
outsb
popa
and
enter
rorb
push
cmp
in
mov
push
cmpsb
push
pop
sbb
sbb
rclb
mov
xchg
and
fsub
call
jg
out
xchg
pop
mov
mov
imul
enter
je
subl
jne
mov
aad
mov
orl
jae
call
dec
sarl
aam
push
out
aas
or
out
nop
mov
insl
or
roll
ret
rolb
push
push
jno
inc
and
out
sbb
stos
dec
in
xorl
imulb
adc
je
lods
test
rorl
bound
push
mov
call
pop
xchg
pop
mov
stc
add
sub
xor
jno
inc
fistpl
rorb
inc
test
into
addb
mov
popa
into
out
lds
sbb
xor
xchg
adc
ret
mov
cli
mov
test
xchg
lea
pop
xor
adc
cmp
cmp
mov
mov
bound
or
mov
pushf
imul
cld
inc
add
sbb
mov
adc
es
in
xchg
sbb
insb
test
add
push
and
and
gs
xor
dec
mov
inc
in
dec
mov
nop
jecxz
push
mov
cmp
or
adc
in
mov
ret
add
pop
push
sbb
push
mov
inc
hlt
add
ret
imul
inc
loopne
inc
out
imul
movsl
das
xchg
sbb
sub
bound
call
xchg
sbb
imul
outsb
jmp
xorb
mov
mov
pushf
shrb
call
stos
push
mov
mov
and
cld
push
popa
jecxz
push
scas
mov
push
add
pop
sarb
push
and
push
mov
push
mov
cmp
dec
push
sbb
test
testl
fdivrs
jo
cmp
mov
jnp
out
xor
daa
cld
mov
jp
lret
fmuls
xor
push
popa
popa
xchg
or
or
sbb
push
xchg
out
mov
shlb
mov
dec
dec
push
cmp
dec
cs
mov
cmp
push
push
pop
loope
je
test
xor
mov
test
cltd
test
pop
je
mov
pushf
mov
stc
and
rorl
jae
jmp
adc
or
adc
push
add
hlt
and
jecxz
shll
scas
lods
imul
pop
das
sbb
cli
aas
cmpsb
insl
sub
push
enter
dec
mov
ljmp
mov
nop
push
inc
push
cmp
pop
loop
jno
in
push
xor
scas
inc
loope
jno
pop
xchg
or
cmp
das
int
sbb
ret
xor
and
imul
push
pop
push
lcall
push
pop
loope
add
push
mov
cmp
or
or
addr16
push
xchg
or
xorl
imulb
test
rcrl
shl
pop
dec
mov
xor
inc
es
shlb
fdivs
rcrl
ficoms
mov
insl
popf
push
fnstcw
add
fsubs
ffreep
loopne
cli
rclb
imul
ja
pop
push
cmp
addr16
pop
and
hlt
mov
popa
movsb
or
imul
dec
mov
cmp
mov
ror
ficoms
adc
lods
rcr
xchg
pop
jb
jmp
or
push
or
sarb
ljmp
and
loopne
push
shrl
or
adc
push
or
lods
int
jnp
push
sub
ficoms
mov
lods
in
xlat
shl
xchg
pop
dec
das
imul
mov
inc
jmp
lods
insl
sbb
outsb
mov
mov
add
sbb
mov
xor
dec
jno,pt
or
add
rcl
push
push
add
dec
int
dec
call
mov
mov
push
lcall
stos
aad
lods
sbb
fnstenv
adc
dec
xchg
jp
sub
pop
sub
pusha
idivl
mov
xor
imul
lds
cmp
popf
dec
les
dec
into
popa
repnz
xchg
stos
adc
pusha
enter
loope
push
inc
imull
cs
fimull
mov
in
mov
stc
test
lcall
mov
push
jmp
dec
or
pop
arpl
aad
je
into
loope
dec
or
xchg
mov
push
sahf
push
inc
shll
xor
fsts
xor
push
mov
sub
daa
push
dec
pushf
lods
pop
pop
or
adc
scas
decl
movl
inc
xor
sarb
lods
xchg
add
adcb
inc
in
inc
inc
or
xchg
stos
add
fs
pop
loopne
decb
mov
lahf
test
add
or
enter
mov
sbb
mov
jno
sbb
mov
adc
jno
bound
pusha
and
xor
sub
inc
jns
pop
fadds
and
rorb
imul
push
mov
and
xorb
xor
inc
mov
test
enter
add
loopne
shrl
pop
and
in
call
sub
daa
test
xor
sub
pop
rcll
mov
fnstcw
cmp
stos
mov
jl
push
adc
lods
push
jae
mov
mov
daa
mov
mov
mov
jp
cmp
repnz
xchg
dec
scas
push
or
mov
scas
ja
imul
mov
pop
test
adc
pop
rclb
mov
push
sub
shll
call
clc
daa
and
enter
adc
and
dec
pop
test
lea
or
adc
lret
mov
xor
sbb
push
add
inc
loope
adcl
xchg
je
adc
jle
mov
inc
xorb
lcall
lcall
xor
inc
cli
pushl
hlt
sbb
add
or
inc
dec
jb
adc
inc
hlt
cmp
scas
rcl
test
sbb
les
popf
sub
sub
loopne
mov
dec
cwtl
fisttpll
loope
push
inc
push
jae
or
mov
jb
sbb
loope
gs
xchg
and
sbb
and
inc
mov
xchg
dec
pop
testl
push
push
test
mov
test
es
ficoml
inc
pop
shll
out
fwait
lods
mov
gs
push
add
mov
inc
into
into
orl
leave
and
.byte
dec
in
push
jmp
mov
dec
inc
mov
ret
push
stos
inc
into
xchg
mov
outsl
adc
dec
inc
mov
inc
mov
inc
xor
inc
adc
pushl
xchg
stos
adc
inc
push
xor
shll
dec
jbe
xchg
fstpt
push
mov
push
daa
dec
std
mov
fldl
into
push
or
sbb
mov
fstpt
ret
sbb
retw
fcmove
sub
push
xchg
lcall
mov
push
and
fnsave
bound
cld
xchg
jnp
dec
inc
adc
mov
jo
jns
or
gs
mov
or
adc
dec
popa
fdivl
rorb
adc
stos
push
inc
add
add
push
lcall
dec
xor
outsl
xor
inc
rclb
cs
jge
push
adc
push
shlb
dec
rorl
fnstsw
jne
add
into
sbb
mov
mov
hlt
and
clc
pop
pop
divl
xchg
pop
xchg
bound
rcrb
add
xor
es
into
sub
scas
jge
xchg
add
sti
inc
popa
sarb
lods
inc
xchg
and
rorl
aaa
mov
sti
mov
aas
xor
dec
gs
jno
jae
xor
mov
mov
in
add
xchg
sti
or
and
fstpt
jno
mov
rolb
dec
inc
pop
mov
mov
dec
and
insb
add
rol
mov
dec
pop
push
divb
ret
push
into
dec
xor
cld
inc
mov
jle
push
es
neg
jbe
mov
rcr
dec
mov
add
xchg
inc
fcmovnu
or
rol
push
mov
mov
ljmp
les
in
call
add
lods
mov
ret
sub
mov
add
sub
add
adc
mov
hlt
shr
shlb
mov
imull
mov
fidivrs
mov
enter
cmp
cmp
lret
lcall
scas
jmp
mov
adc
ret
hlt
xchg
daa
jno
mov
add
movsb
ja
dec
adc
mov
rcrl
ret
add
mov
jl
jl
mov
ret
push
ror
fcmovnbe
mov
and
add
xchg
lcall
jno
xor
dec
mov
cmp
fistl
cld
clc
push
dec
ja
lcall
out
insl
scas
xchg
into
mov
add
mov
stc
push
daa
mov
bound
into
rcrb
mov
lcall
mov
jmp
or
xchg
add
push
outsb
mov
inc
daa
fs
ret
jg
rcrb
adc
push
sub
rcll
push
sarb
fcmovbe
push
xor
jmp
insl
addr16
mov
mov
insl
outsb
stos
push
sbb
inc
mov
mov
shll
xor
xor
outsb
shll
cltd
psubusb
xchg
and
dec
sub
cmp
rorb
or
xor
hlt
movsl
and
aam
sub
xor
xor
jl
fcmovnu
in
mov
add
aad
pop
lret
scas
mov
stos
xchg
mov
ror
mov
cmp
push
cld
pop
ret
dec
xor
mov
pop
mov
fdivr
mov
rcll
pop
mov
xlat
insb
mov
dec
popf
adc
sub
add
adc
mov
mov
mov
outsl
xchg
inc
dec
sub
add
fwait
lds
fldcw
pop
push
lock
push
push
mov
fcmove
cmp
add
mov
push
mov
mov
add
push
in
mov
outsl
aaa
imul
pop
dec
add
adc
push
sub
jg
jnp
add
icebp
sub
jo
popl
lahf
fnsave
push
jno
arpl
loope
gs
cmp
data16
dec
and
clc
lcall
xchg
ss
xor
hlt
daa
aaa
mov
sbb
dec
xor
popa
xor
fsubrl
push
mov
push
mov
fnstcw
or
pop
andl
add
mov
dec
jno
sub
sub
mov
mov
xor
test
jno
dec
call
daa
add
or
dec
rcr
outsb
mov
inc
jl
adc
dec
lea
daa
adc
jle
es
mov
cld
mov
add
lods
aam
cmpsb
daa
das
in
fs
shll
add
lock
mov
sub
gs
popa
dec
pop
mov
dec
in
push
dec
mov
lcall
jl
xor
push
adc
loopne
lcall
roll
imul
pop
xor
bound
adc
pop
stos
mov
push
or
or
add
arpl
pop
pop
jmp
into
daa
loop
sub
mov
mov
jne
dec
cld
stos
add
add
push
mov
mov
rcll
daa
into
fdivs
jno
jge
or
or
popa
loopne
pusha
loopne
xchg
jnp
hlt
gs
pop
pushl
adc
cld
mov
pop
das
add
mov
mov
lock
cld
hlt
dec
ret
cmp
push
dec
push
jae
sub
into
popf
cmpsl
adc
into
and
push
cmp
lcall
mov
inc
pop
ds
cmpsl
or
sti
cmp
and
push
or
cltd
push
ficoml
test
filds
push
dec
mov
xor
gs
mov
mov
cmp
fists
fiadds
ret
xchg
shr
inc
aam
loop
cmp
xchg
mov
out
mov
shll
daa
add
jns
sti
mov
lcall
fstpt
dec
jo
inc
inc
xor
dec
adc
sbb
popf
inc
jmp
mov
lcall
repnz
popf
aad
pop
mov
jmp
sarb
jo,pt
or
or
jl
pusha
fisttpl
cld
and
pop
inc
es
sub
inc
jmp
xor
mov
push
stos
mov
into
mov
pop
push
add
xor
enter
stc
mov
ret
cs
jmp
mov
xchg
dec
icebp
ss
sbb
push
mov
shr
and
sbb
shll
test
mov
test
push
fdivs
push
xor
or
loop
ja
sub
xor
into
bound
add
xor
adc
icebp
push
enter
lret
std
or
jmp
or
mov
sbb
out
pushf
inc
in
mov
sub
nop
mov
mov
cld
xor
out
jne
mov
pop
in
pop
outsb
jae
test
xor
xchg
or
mov
adc
mov
insl
mov
inc
rclb
test
xchg
data16
mov
jno
jnp
notl
push
and
aas
mov
aas
rorb
rolb
rclb
loopne
xchg
cld
cld
sub
clc
jg
mov
fstl
and
fcoml
push
adc
sbb
sbb
in
lock
idivb
pop
jbe
arpl
sbb
and
adc
in
lock
mov
add
pop
test
mov
jg
cmp
push
lock
in
mov
mov
adc
repnz
in
pop
sti
jb
rolb
orl
jmp
lret
int
or
or
test
cwtl
adc
add
add
push
loop
repnz
fldl
orl
int
imul
leave
mov
jbe
fisubrs
jne
inc
mov
out
add
rcrl
in
mov
data16
cwtl
inc
lock
into
add
cld
aaa
mov
inc
adc
add
sub
sub
fcmovnbe
pop
add
les
iret
xchg
test
jae
push
ss
cmc
sbb
sbb
lcall
mov
pop
into
ja
mov
push
cmp
loope
int3
popf
or
fisubrl
lcall
shrl
push
repnz
sub
or
add
adc
xchg
arpl
rol
test
stos
xor
fbld
rol
aam
andl
sbb
lret
fwait
ja
inc
lcall
adc
subl
repz
push
dec
jno
or
outsl
das
cmpsl
shrl
lds
jae
testb
aaa
pushf
xor
shlb
popa
mov
cmp
add
pusha
pop
jl
std
pop
shll
adc
out
leave
sar
inc
xor
cmp
lcall
insl
popa
cwtl
cld
hlt
pop
jb
xchg
pop
addl
push
sub
test
lahf
insl
cmpsl
mov
cltd
jno
cld
fwait
out
sbb
xor
popa
stos
push
mov
push
sar
push
rcll
daa
frstor
into
or
popa
sahf
stos
loope
adc
cmp
or
adc
in
fs
clc
jp
adc
xor
out
testl
loope
jge
adc
xor
or
es
cmpsl
dec
dec
mov
scas
pop
mov
jbe
pop
into
adc
sti
daa
mov
cmp
stos
test
adc
cli
aaa
and
xchg
je
ja
inc
jb
leave
scas
push
aas
aam
fldl
sub
fidivl
inc
test
push
push
cmpsl
in
push
movsl
dec
jbe
mov
cmp
mov
outsl
sbb
push
sub
push
aad
xor
add
sub
or
out
inc
loopne
xchg
fwait
inc
fdivr
out
mov
pop
sahf
pop
push
sub
pop
xor
adc
jne
dec
imul
push
push
sbb
push
mov
or
bound
jns
inc
fistpl
xor
leave
in
jne
sub
add
loope
mov
movsl
cs
push
adc
hlt
sahf
sbb
insl
daa
into
negb
cld
pop
inc
xor
shlb
pusha
js
push
mov
scas
leave
sub
xor
jle
inc
into
rol
mov
mov
jecxz
ss
xor
stc
rorl
push
sbb
dec
mov
mov
mov
add
in
hlt
bound
or
sub
jno
or
ret
mov
mov
fnstcw
dec
xchg
xchg
inc
test
xchg
mov
push
push
fiaddl
mov
ret
mov
xor
inc
add
mov
dec
sbb
hlt
and
inc
add
cmp
mov
imul
mov
xor
mov
mov
xor
mov
cld
pop
mov
hlt
mov
imul
adc
fists
cmpb
movsl
push
sub
lahf
into
fs
sub
sarl
push
xchg
shll
xchg
xor
jmp
push
outsb
or
rorb
imul
or
or
ss
pop
ret
cmp
rorb
movsl
popa
sub
stos
mov
inc
das
inc
push
mov
adc
xor
push
push
pop
push
into
lds
daa
pminsw
les
push
dec
xchg
mov
xor
jle
and
add
lcall
ljmp
add
push
pop
repnz
mov
in
pop
inc
fdiv
jg
cmp
in
test
pop
mov
shll
mov
addr16
lea
lea
mov
popf
fcoml
pop
pop
fsubrs
sbb
sahf
or
jae
mov
cmp
xchg
enter
out
push
mov
fsubrl
ja
mov
lds
insb
nop
xchg
clc
stos
bound
dec
xlat
insb
mov
ret
scas
daa
mov
fldenv
or
inc
mov
pop
test
mov
mov
ljmp
out
stos
adc
and
pop
into
fisubs
fnsave
xor
jo
mov
push
xor
arpl
jbe
out
out
push
je
xor
hlt
fwait
imul
dec
mov
inc
add
into
dec
dec
dec
or
lcall
pop
xor
cmp
popa
or
popa
stc
mov
outsb
add
shlb
int
adc
nop
adcb
cmp
add
in
adc
sub
out
jo
gs
fstps
bound
inc
xor
or
push
ret
add
daa
je
stos
cmpsb
xchg
xor
jnp
adcl
jnp
shll
mov
incl
and
sbb
loopne
call
inc
push
pop
push
and
mov
push
inc
lock
push
mov
or
gs
mov
test
adc
shrl
test
int
xchg
mov
pop
add
loop
daa
xchg
scas
push
push
jecxz
pusha
dec
aaa
sahf
fs
adc
add
push
addl
mov
fisubrs
dec
xlat
xchg
cs
add
shrl
pusha
je
xchg
ret
movsl
xor
jl
adcl
mov
and
cmp
mov
xor
and
xor
add
fstpt
test
data16
mov
pop
popa
rol
or
inc
or
mov
xchg
fisubs
mov
scas
xor
outsb
sarl
lret
push
je
mov
sub
xor
cwtl
adc
push
loope
rcll
lea
adc
and
loop
testl
call
lds
call
pop
aaa
inc
lods
jne
or
adc
sbb
sub
hlt
or
mov
lods
mov
shl
push
inc
int
cmp
cs
xor
or
andl
aas
mov
lcall
mov
sbb
repnz
inc
mov
in
cmpsl
mov
push
daa
shrb
leave
ret
mov
scas
inc
das
mov
icebp
ss
mov
sbb
push
xchg
fcomps
loopne
pop
clc
push
aam
push
pop
in
push
push
pushl
adc
dec
inc
loop
pop
cmc
pop
shlb
gs
jecxz
xchg
sub
movsl
ret
adc
pushf
jecxz
xor
or
lds
xchg
js
lods
inc
cmp
dec
push
shl
xor
xchg
sbb
repz
mov
stos
stos
cmpsb
xchg
mov
add
loopne
insl
pop
xor
jp
sub
mov
ret
sbb
sub
add
jnp
cs
lcall
mov
mov
cwtl
mov
hlt
add
int
aaa
mov
xchg
outsb
push
push
push
inc
popa
mov
clc
outsb
sub
popa
mov
and
xor
bound
jbe
or
fidivs
mov
subb
ret
add
xor
mov
xchg
pop
xchg
cmp
dec
insl
lods
popa
adc
rolb
mov
push
push
cmpsl
out
push
inc
pop
cwtl
gs
push
sbb
cld
xchg
out
test
out
hlt
gs
add
mov
jge
fwait
test
xchg
fistpll
inc
sar
hlt
mov
call
jne
mov
push
adc
dec
sbb
push
lret
rorb
push
adc
addl
add
cmp
push
xchg
push
mov
pop
mov
data16
and
push
movsb
fld
sbb
mov
sbb
inc
jno
mov
mov
sarb
push
loope
or
dec
push
fwait
mov
adc
popa
push
movsl
jg
push
push
movsl
or
mov
inc
cs
inc
mov
test
inc
push
push
push
dec
bound
je
xor
xchg
push
push
sbb
lea
outsb
movsl
call
aam
dec
movl
inc
flds
rcl
push
jbe
nop
xor
out
pop
push
ljmp
bound
shlb
popa
movsb
push
inc
and
das
pop
push
loopne
inc
rcll
push
mov
sub
fcomps
lods
lods
adc
or
fs
arpl
and
push
and
xor
inc
and
push
mov
push
shrl
imul
movsl
js
jl
js
and
daa
jno
mov
or
insl
jno
fisubs
pop
out
aam
call
lcall
shlb
cmp
adc
ret
lds
repnz
cld
sbb
push
mov
cld
mov
push
jo
scas
push
xchg
lods
cmc
icebp
jo
mov
xchg
into
arpl
or
ret
push
push
mov
scas
pop
mov
push
or
stos
push
or
fyl2xp1
pop
sub
and
xor
into
add
sub
mov
out
shr
cld
push
pusha
js
dec
sar
daa
daa
push
mov
adc
shlb
mov
push
cli
pop
loope
mov
cwtl
das
dec
xchg
ljmp
push
aad
add
data16
imul
pop
in
mov
je
call
dec
iret
popa
fsubs
rorl
gs
outsl
dec
or
sub
addb
push
shrl
fisubl
mov
out
xchg
mov
dec
lock
mov
xchg
outsb
bound
mov
pop
mov
int3
push
pushf
clc
push
adc
ljmp
pop
mov
int
orl
call
mov
ret
leave
adc
shrl
add
inc
push
repnz
shlb
aad
lods
mov
ret
or
or
dec
lock
aad
ret
inc
mov
ret
jo,pn
lcall
inc
xchg
rclb
fdivrs
test
rcll
cwtl
push
pop
xchg
push
or
jbe
and
pop
jno
scas
testl
pushf
mov
pop
mov
ss
clc
subl
stos
hlt
bound
cmp
xchg
inc
popf
sbbb
sub
fidivrl
mov
adc
test
sbb
jle
push
popa
ret
push
test
hlt
or
inc
loope
cli
cmpps
lret
daa
or
movsl
pop
adc
repz
mov
push
mov
inc
rclb
jne
mov
in
push
das
shlb
mov
sbb
rol
xchg
push
lods
or
push
jno
mov
pop
inc
push
shr
jge
sub
or
or
insb
jbe
sub
adc
and
mov
andb
adc
test
lea
jne
xlat
inc
mov
loope
mov
js
je
gs
push
add
rcll
test
insb
pushf
mov
push
push
stos
inc
in
sbbl
mov
and
flds
test
dec
mov
loopne
sub
rorl
cmovs
ss
jmp
clc
sbb
mov
add
add
dec
mov
mov
mov
push
sub
dec
sbb
inc
add
sbb
adc
movsb
or
fcoms
in
pop
or
out
push
add
mulb
pop
lahf
ror
jmp
mov
in
mov
mov
cmp
int3
mov
xchg
jle
pusha
jg
lds
and
scas
jp
sbb
enter
dec
pop
dec
xchg
sub
add
iret
sbb
shl
mov
popa
gs
inc
xor
leave
xchg
stos
and
mov
jne
inc
fprem
sbb
cmp
pop
xor
dec
xor
add
push
push
push
mov
test
andl
cmpl
add
adc
fwait
int3
sbb
push
arpl
and
pop
mov
mov
jge
addr16
mov
inc
repnz
pop
cs
mov
or
into
cmp
jl
jnp
adc
inc
or
add
pop
out
or
mov
mov
js
shl
pop
rclb
xlat
sub
xor
pop
push
push
cmp
push
leave
push
xor
cltd
pop
pop
popa
mov
dec
mov
mov
imul
mov
sbb
dec
test
adc
fsubrs
jno
arpl
adc
pop
sub
pop
mov
stos
jmp
xor
mov
cltd
std
movsl
mov
inc
stos
divb
popa
stos
hlt
ds
mov
jmp
dec
out
jae
push
loopne
xor
shlb
mov
xchg
adc
jbe
icebp
aas
orl
lods
testb
xchg
ret
cwtl
lods
add
popl
mov
outsl
idivb
jl
cmp
icebp
push
push
pusha
iret
or
add
scas
adc
push
or
add
shrd
mov
and
bound
daa
shl
sarb
addr16
push
notl
xor
cmp
adc
push
dec
mov
add
clc
icebp
add
lret
out
lds
or
mov
es
mov
jno
sti
add
loope
mov
xor
mov
xor
cmc
cmp
sub
jp
gs
mov
or
xor
mov
imul
fcmovu
and
push
mov
sti
jb
push
mov
inc
add
je
lods
inc
ja
cmpsl
arpl
out
scas
or
or
rorl
mov
inc
lret
sub
push
xchg
xchg
adc
dec
push
adc
add
jae
add
lret
or
adcb
mov
divl
push
push
xor
or
ficompl
lods
repnz
hlt
pop
adc
or
sbb
outsb
lahf
jl
pop
mov
push
xchg
xchg
and
push
cld
stos
decl
loope
dec
xor
mov
add
sahf
sbb
ja
mov
nop
inc
sub
adc
push
cmp
hlt
dec
inc
test
pop
xchg
dec
push
cmpsb
or
fistpl
inc
jno
sarl
mov
jb
mov
push
adc
push
mov
jmp
out
mov
mov
rolb
mov
lea
sub
inc
pop
mov
mov
adc
jg
in
test
jl
fisubrl
cmp
fcmove
leave
sbb
ja
iret
aam
add
stos
cmp
mov
lds
pop
cmpsb
dec
xchg
xchg
pop
xor
adc
add
or
push
mov
stos
push
sbb
jl
push
cltd
or
outsb
sub
imul
mov
or
sub
dec
push
mov
add
mov
dec
adc
pop
mov
xor
daa
inc
add
enter
fwait
jb
or
or
inc
mov
or
andl
mov
or
out
push
lods
or
sahf
sbb
and
mov
test
notb
test
fldl
rolb
pop
shrb
shl
fimull
xor
daa
out
mov
cmp
cld
fildl
imul
add
push
inc
dec
inc
stos
xorb
push
lea
popf
mov
mov
jmp
roll
xchg
les
adc
dec
jno
inc
cmpsb
or
cwtl
xchg
imul
sahf
inc
mov
inc
jmp
inc
imul
sarb
xor
pop
xor
cs
pop
lods
cmp
insl
or
mov
xlat
inc
mov
push
mov
mov
decb
stc
ret
push
mov
testl
or
fsubrl
mov
inc
jb
mov
dec
mov
outsl
dec
ss
nopl
into
jo
mov
xchg
rcrb
add
xchg
mov
pop
xor
pop
mov
sbb
jl
jbe
or
in
dec
hlt
adc
lea
add
or
ss
push
fldl
loopne
popa
sub
xor
push
pop
push
jmp
popa
push
add
test
repnz
mov
push
or
loop
and
dec
aad
jge
jae
ss
mov
or
mov
rol
out
xor
add
popf
mov
mov
aaa
xlat
xor
push
mov
jg
add
sbb
xor
pop
push
mov
pop
imul
jnp
mov
adc
sbb
cmp
dec
mov
fisttpl
enter
add
mov
xchg
add
sbb
rcll
cmp
lods
mov
stos
inc
ret
jno
bound
test
adc
divl
xchg
test
adc
aad
or
out
scas
sbb
xchg
sbb
mov
mov
adc
sub
nop
xor
push
inc
into
xor
nop
inc
cmp
or
lcall
sub
dec
pop
hlt
hlt
mov
mov
hlt
sub
mov
push
shr
das
mov
call
popa
imul
into
arpl
outsb
sub
rol
into
mov
jg
dec
mov
pop
movsl
loop,pn
das
xchg
cmpsb
insl
test
add
ret
lds
mov
sbb
rclb
data16
inc
mov
rolb
cmp
adc
jo
stos
dec
adcl
repnz
mov
dec
pushf
cmp
push
fcoms
fwait
sbb
inc
mov
fsubrs
fists
adc
push
loopne
mov
xchg
mov
int
pop
sub
lea
in
pop
inc
lods
js
pop
and
mov
jae
lds
mov
xor
dec
dec
int
dec
in
movsb
adc
popf
sbb
mov
adc
push
cwtl
push
cli
pop
into
push
sbb
addb
adc
or
inc
lods
pop
push
lods
push
mov
dec
lea
fbstp
je
cmp
push
xor
lea
les
xor
shlb
js
adc
sub
add
sub
pop
pop
loope
out
aam
cli
mov
xchg
mov
fisubs
xchg
xchg
ja
mov
and
push
outsl
ret
imul
shll
int3
loopne
pop
cld
inc
fistpll
shrl
adc
cmpsb
ret
sbb
pusha
inc
dec
xchg
xchg
sarb
dec
clc
inc
or
int
inc
test
jnp
push
mov
out
pop
mov
bound
cmp
add
in
and
ret
das
and
dec
cmp
inc
sub
mov
lock
cwtl
sub
and
xor
popa
mov
addb
in
in
inc
dec
mov
enter
xor
fiaddl
jge
sbb
aam
push
clc
add
inc
or
leave
dec
mov
mov
cvtps2pd
iret
jno
mov
mov
scas
inc
std
sub
inc
arpl
outsl
fidivs
xor
pop
sub
lret
lea
mov
gs
mov
dec
pop
and
sbb
push
mov
daa
adc
bswap
or
test
or
cmp
mov
or
push
loopne
push
scas
pop
mov
pushf
mov
and
dec
push
pop
les
pop
jno
pushw
cmp
mov
or
inc
pop
fucomi
push
bound
test
xlat
shll
xor
popf
aam
or
sub
inc
xor
sysexit
mov
mov
stc
sub
add
cmpsb
add
mov
push
mov
es
dec
roll
dec
sbb
shlb
into
inc
xor
in
push
sbb
bt
dec
xchg
or
push
mov
mov
pop
xor
pop
stos
shr
pop
adc
ret
or
jo
stos
shrl
mov
inc
push
add
jno
fcoms
or
mov
adc
daa
fsubl
cmc
mov
mov
insb
adc
lcall
rclb
lret
mov
fidivs
shl
add
js
sub
rolb
popf
mov
jo
aad
cmpsb
xor
sub
stos
mov
hlt
ret
lea
stos
imul
cld
jno
xchg
dec
dec
and
xchg
jns
loopne
out
xor
adc
jno
bound
or
pop
push
data16
stc
popa
push
jo
loopne
ja
xor
push
xchg
sarl
inc
int
movsb
std
out
push
xchg
imul
idivl
rcrl
mov
dec
mov
xor
jg
jae
or
sub
mov
pushf
sbb
mov
or
push
pop
push
mov
xchg
or
cld
shlb
xchg
aam
jl
rorl
decl
add
cmc
jp
xchg
aam
test
push
incl
stos
adc
in
rcrb
sti
shlb
lods
sub
xchg
fists
mov
inc
rorl
cmp
fldl
stos
push
jnp
push
inc
adc
mov
mov
fs
loop
gs
bound
mov
sbb
ret
mov
lret
mov
inc
xchg
cmp
or
push
out
jae
stc
rolb
dec
data16
or
dec
adc
and
cmp
xchg
lds
lret
popl
mov
add
add
cmpsb
and
sbbb
lret
dec
insl
add
pop
mov
lahf
gs
jo
add
sub
sub
and
push
sbb
sub
dec
push
lahf
xorb
mov
or
gs
test
push
insb
mov
push
out
cltd
decl
push
push
mov
mov
jmp
in
mov
bound
bound
sub
adc
cmpl
xor
jo
rorb
cld
adc
popa
xchg
xchg
std
loope
push
mov
mov
push
xor
es
or
push
mov
mov
sub
inc
lret
ss
inc
inc
adc
ljmp
xorb
aad
mov
je
push
test
std
pop
xor
stos
push
daa
lea
aam
xchg
sub
xor
shll
cmpsl
scas
rclb
push
jge
mov
test
adc
dec
jmp
fiaddl
dec
scas
inc
adc
cmpsb
into
xchg
popf
mov
dec
negb
dec
adc
scas
cmc
int
dec
cld
mov
inc
popf
test
adc
sub
xor
cmp
out
dec
inc
enter
dec
pop
rclb
jno
rorb
rcl
push
inc
mov
mov
cmpsb
jle
jno
lret
push
mov
jg
hlt
dec
into
push
sub
dec
mov
ret
and
add
rorb
push
jecxz
add
cltd
sbb
push
mov
xor
sbb
xor
cmp
repz
push
imul
lods
jb
push
dec
out
push
push
push
cmc
push
push
cmp
pushf
stos
jl
push
and
ret
push
inc
mov
dec
or
rol
ret
gs
cmp
cmp
mov
cmp
dec
fildl
lgs
mov
mov
shrb
add
out
dec
or
dec
lock
sbb
aas
outsb
xor
and
push
lock
mov
inc
sbb
insb
cld
push
icebp
add
adc
sbb
decl
mov
add
dec
add
sub
sti
out
push
sub
push
adc
inc
mov
and
stos
lock
fcmovne
add
fwait
and
mov
add
add
adc
loopne
jno
xor
shrb
or
js
or
in
mov
clc
les
pop
nop
bound
or
lret
add
push
shlb
ljmp
stos
ficomps
sti
dec
fnstcw
mov
jns
pop
push
fdivrl
loopne
orb
movsl
jg
inc
dec
mov
sbb
rclb
cmp
insl
test
pushf
dec
adc
sub
sub
sbb
adc
mov
bound
fwait
push
loopne
xor
imul
adc
dec
cmp
jne
or
fdiv
xchg
aaa
adc
jnp
xorb
sbb
adc
inc
xchg
aad
clc
adc
popa
stos
and
test
aad
or
sar
sub
sub
sbb
je
push
les
std
adc
rcll
cmpsl
decl
jp
sub
in
adc
sbb
lods
dec
repz
lret
adc
popa
pop
mov
add
mov
int3
or
cmp
cmp
jno
stos
rcll
or
gs
cld
loop
pop
adc
add
xchg
mov
sbb
xor
jg
mov
add
push
mov
repz
mov
call
aam
hlt
dec
popa
pop
cmc
fiadds
dec
lock
push
mov
xchg
daa
shll
xchg
xchg
jmp
scas
jmp
addr16
dec
sub
jl
mov
lret
and
dec
scas
mov
orb
aam
xchg
xchg
inc
fsubl
xor
fs
sbb
jne
test
add
xor
sbb
adc
add
dec
push
rorl
cmc
test
dec
jecxz
sti
add
adc
push
xor
imulb
dec
xor
jecxz
das
dec
sbb
push
js
lret
xchg
mov
bound
out
daa
xchg
push
add
cmp
push
aam
repz
xlat
call
nop
mov
mov
fwait
sarl
outsl
xchg
stos
pop
add
in
jne
or
xor
test
data16
test
pop
adc
aam
sbb
popf
xor
add
pop
mov
add
cmc
or
out
push
int
lcall
andb
les
cli
dec
sbb
andb
mov
fildl
pop
xor
subb
add
dec
loopne
fiaddl
insl
adc
lcall
popa
mov
lea
mov
xchg
sub
mov
ret
sahf
and
ljmp
dec
jle
inc
mov
out
imul
add
add
out
shr
jne
or
daa
pop
adc
scas
inc
mov
add
dec
call
jae
rol
push
mov
xor
jo
test
ss
sbb
dec
pop
mov
push
mull
jns
cmp
ljmp
ret
jle
or
aaa
mov
orb
imul
mov
shll
push
call
xor
lds
jae
or
push
pop
xchg
adc
mov
jge
mov
xor
adc
bound
pop
inc
out
or
cli
mov
mov
sbb
and
xor
mov
jb
mov
pop
pop
push
mov
sub
roll
add
push
dec
mov
or
sahf
pop
xchg
dec
wbinvd
xlat
jl
xor
push
adc
mov
test
insb
mov
push
xchg
rcrl
push
xchg
dec
int3
xor
push
or
push
into
roll
stos
add
and
ss
inc
neg
mov
pop
pop
clc
sub
dec
jns
xor
push
pop
andb
dec
into
jg
push
xchg
xchg
enter
cmp
push
mov
ljmp
fcomp
mov
dec
lds
gs
mov
mov
insb
outsl
aam
cmpsb
cmp
call
xchg
insl
xor
ret
pop
dec
mov
lcall
pusha
loopne
andl
cltd
into
fldenv
cwtl
aam
pushf
pop
adc
xor
popa
hlt
pop
jnp
or
xchg
out
sbbb
fcoml
lcall
cmp
ja
aam
mov
cmc
xchg
inc
sbb
enter
cld
jno
inc
mov
icebp
jle
add
mov
lods
push
dec
fisubs
push
stos
mov
jne
xchg
aad
insb
cltd
mov
cmc
push
mov
sahf
lods
inc
push
das
pop
cli
push
mov
stos
es
jno
inc
loopne
aam
jl
push
imul
mov
jmp
pop
ss
stos
sub
jne
bound
dec
push
movsl
and
les
pushf
mov
mov
outsl
lods
push
push
roll
or
cmpsl
jmp
mov
mov
mov
pop
sub
sub
lea
aad
add
inc
mov
pop
outsb
repz
mov
cld
shrl
xor
shll
pop
add
loope
jae
mov
add
jp
cld
fstpt
adc
xchg
popa
daa
add
pop
adc
xchg
sbb
mov
stos
pavgb
xchg
scas
fdivl
xor
xor
pushf
movsl
dec
push
lcall
xor
mov
ret
mov
pop
mov
xchg
mov
mov
mov
xor
cld
dec
push
pop
sbbb
stos
add
push
xor
bound
mov
popa
inc
add
test
mov
pop
aad
pop
lea
cld
and
add
mov
rcrl
sub
xor
push
movsl
push
xor
sbb
xor
call
orl
sub
testb
xchg
cmp
insl
rcrl
dec
cmpsb
pop
std
pop
and
adc
jb
push
xchg
mov
sbbl
lock
out
cmp
pop
mov
mov
push
xor
add
mov
test
int3
mov
adc
jp
push
cld
push
or
push
pop
test
adc
xor
pop
mov
iret
pop
lods
sbbl
mov
sbb
out
add
cli
movsl
jmp
push
lret
jno
inc
mov
in
jne
es
xchg
lock
or
adc
fsubr
aam
mov
loope
bound
rcrb
lcall
add
incl
std
sarb
push
jg
add
dec
loopne
jp
inc
push
pusha
inc
imul
or
adc
dec
lock
sub
in
pop
push
fistl
dec
dec
icebp
dec
daa
fsubl
or
push
daa
dec
dec
pop
mov
pop
mov
sbb
xchg
jg
push
mov
mov
lods
dec
push
sub
mov
push
jmp
or
push
cmp
mov
scas
mov
mov
push
jecxz
bound
and
sub
int3
inc
and
push
inc
cltd
pop
jo
data16
stos
ret
lcall
or
inc
addr16
push
mov
mov
movsl
jnp
inc
cld
mov
fsubr
daa
inc
cld
push
jb
das
pop
roll
or
or
xchg
xor
adc
xchg
ljmp
or
jmp
pop
or
xchg
push
dec
sub
xlat
adc
rorl
mov
sub
add
scas
push
pop
push
nop
or
push
shll
mov
scas
test
pop
dec
lcall
mov
aad
mov
push
push
push
jge
push
popf
mov
push
into
dec
sub
call
cld
jmp
ret
popa
dec
insb
test
in
scas
inc
mov
data16
mov
adcl
cmp
lret
std
ret
pusha
test
cs
fwait
andl
mov
subl
ret
push
jnp
fidivrs
cmp
icebp
pop
cmp
and
jno
popa
roll
hlt
mov
insl
add
push
xchg
cmp
and
or
push
mov
mov
mov
hlt
jg
adc
inc
adc
outsb
aad
lods
sub
hlt
mov
call
push
push
or
insl
mov
fcomps
add
repnz
punpckldq
cwtl
mov
xlat
add
rorb
cli
repnz
cmpsb
mov
inc
lods
mov
push
push
push
add
icebp
adc
mov
dec
cmp
scas
jns
enter
ja
cmp
dec
lds
jmp
and
fwait
push
mov
in
sbb
pop
mov
fisttpl
xor
mov
or
push
inc
sarl
pop
xorb
out
push
jno
ret
dec
inc
add
inc
decl
jne
push
dec
ret
loopne
jnp
inc
adc
xor
in
push
or
mov
lock
out
inc
cld
mov
in
insl
and
jno
stos
aam
push
aaa
test
cmp
xchg
and
bound
dec
push
rorl
fsubl
bound
test
push
adcl
flds
or
hlt
imul
dec
out
andl
fwait
xchg
gs
shlb
sbb
gs
inc
or
mov
cmc
lock
mov
rorb
dec
adc
loopne
es
adc
mov
and
into
pushf
ss
mov
dec
setne
cmc
hlt
and
adc
pop
add
or
addb
push
test
or
jle
push
xchg
jae
cld
shl
sbb
xchg
daa
sti
sti
ja
cmp
mov
xor
sub
test
pusha
dec
cmp
cmp
cmp
and
loope
fs
sub
sub
pusha
jmp
int
xchg
test
push
lcall
and
enter
mov
inc
mov
stc
or
cmp
push
not
into
and
stos
and
mov
and
mov
and
bsr
in
push
out
insb
push
test
or
insb
imul
popa
xchg
sarb
daa
inc
nop
mov
inc
cmp
cli
test
or
mov
stos
inc
loope
arpl
pop
pop
or
fstpl
add
lahf
sub
push
push
or
inc
aam
lock
fmuls
dec
mov
sti
scas
mov
cmp
shrb
adc
push
es
cld
ret
dec
jns
add
pop
jp
lcall
sbb
pop
rorb
cmpsl
arpl
mov
stc
push
mov
and
mov
mov
add
adc
push
jno
loope
sub
les
xor
sbbl
ret
xchg
js
xchg
mov
sub
lcall
test
popa
inc
test
pop
les
and
push
je
sbb
mov
xchg
movsl
push
addb
xchg
jno
lcall
gs
imul
dec
aaa
cld
or
js
data16
leave
neg
shll
mov
or
int
cmc
xor
es
or
xor
xor
mov
dec
cld
inc
xor
icebp
inc
inc
ret
test
inc
or
adc
cmp
add
cmpsl
dec
orb
xor
fstpt
dec
xor
add
xor
cmp
addr16
fdivrs
int3
mov
jl
insb
xchg
lock
sbb
or
bound
xchg
mov
mov
add
shlb
shlb
push
shll
pusha
mov
jecxz
or
cwtl
jge
jg
lea
rcr
aas
fst
mov
sbb
pop
stos
rclb
popa
push
add
jne
daa
int3
mov
dec
movl
pop
sbb
xor
test
inc
mov
aam
dec
cvtdq2ps
scas
adc
xchg
push
mov
mov
gs
xor
sbb
cmpl
xor
sarb
push
ret
mov
fcmovbe
lcall
and
push
and
aaa
enter
movsl
push
mov
dec
xor
imul
cwtl
push
xor
mov
xor
sarl
mov
adcl
inc
test
xchg
jo
pusha
or
xor
dec
push
mov
pop
jo
dec
scas
mov
sbb
add
cmp
mov
adc
inc
adc
rorb
mov
mov
inc
pop
push
inc
mov
int
shll
dec
pop
iret
mov
xor
daa
dec
bound
sub
sbb
scas
dec
bound
add
push
jae
jo
out
xor
lea
pop
dec
fimull
or
cmp
push
add
mov
push
adc
cmp
in
xor
sbb
and
adc
adc
incb
sahf
mov
sbb
mov
sub
jge
dec
pop
fsubl
mov
mov
cmpsb
mov
jecxz
sbb
adc
inc
dec
fmuls
inc
out
mov
repnz
and
jbe
hlt
aad
mov
add
sbb
ficoms
push
into
repnz
imul
loopne
push
sub
adc
or
mov
mov
push
push
daa
ja
sub
cli
mov
xchg
xor
gs
mov
mov
ljmp
or
fisubrl
leave
rorl
mov
mov
mov
stos
xchg
push
cli
inc
outsl
and
sbb
push
xor
inc
jo
jbe
fisubrs
rol
inc
jno
bound
pop
sti
cld
loop
jl
pusha
ss
pop
outsb
cmp
cmpsl
mov
lahf
push
aaa
mov
rclb
pop
rolb
mov
rolb
sub
mov
in
bound
into
int3
ljmp
hlt
pop
and
out
fs
dec
inc
jmp
movsl
add
mov
imul
cmp
jno
mov
mov
jo
sbb
push
sub
pop
jo
das
rcl
inc
shrb
xor
clc
fdivrl
pushl
subb
jle
movsl
shl
mov
int
adc
push
pop
cmp
add
test
push
insl
shll
stc
testb
xor
mov
mov
adc
daa
mov
pusha
into
bound
popl
rcll
aas
mov
fdivs
sti
popa
pop
aaa
dec
out
sub
xor
lret
jmp
jle
sbb
mov
xor
sbb
adcb
add
adc
add
dec
push
shrl
xchg
pop
push
je
push
setge
or
testb
stos
icebp
push
mov
push
stos
add
push
imul
data16
pop
hlt
mov
push
pop
inc
cs
cmp
test
ret
xor
inc
lea
mov
sub
sbb
add
insl
sti
rcrb
xchg
aas
gs
xor
push
aad
shrl
ret
mov
mov
push
int
or
testb
daa
dec
mov
push
xchg
jno
mov
push
dec
mov
stc
sbb
push
sbb
sub
bound
xlat
or
pop
lcall
xor
frstor
adc
jo
mov
bound
inc
dec
dec
nop
mov
cmp
xchg
test
or
cmp
mov
pop
mov
dec
outsb
mov
stos
jns
shrb
jns
ffreep
roll
stos
lods
ja
popa
insl
jb
lret
mov
pushf
test
bound
dec
lcall
inc
inc
popa
push
mov
insl
or
sbb
mov
xchg
cmp
movb
test
inc
cwtl
push
sbb
cltd
mov
pop
clc
aaa
mov
call
mov
xchg
push
push
in
fdivr
inc
xor
and
add
mov
adcb
inc
sub
dec
xor
add
cmpl
stos
mov
rcl
push
push
jbe
or
sbb
pop
pop
push
pushf
cltd
sbb
mov
jne
frstor
mov
fcomps
in
jbe
sub
or
icebp
jae
aad
add
nop
and
or
lahf
popf
mov
loopne
mov
mov
add
adc
or
or
or
loopne
sbb
cmpsb
mov
mov
mov
iret
cmp
xor
stos
adc
add
fs
fnstcw
ret
add
mov
jae
out
sbb
negb
loope
adc
test
xor
mov
lds
jno
mov
sub
gs
adcl
sahf
addl
cmp
xchg
dec
adc
js
xchg
and
and
sbb
out
gs
pop
xchg
stos
pop
or
add
mov
sub
cmp
inc
add
sub
aad
or
aad
loopne
mov
jnp
mov
stos
inc
mov
and
adc
push
cmpsb
push
cmp
pop
push
xchg
aad
push
das
es
stos
movsl
ljmp
jmp
bound
jb
out
fisubs
bound
cld
push
rclb
pop
sahf
add
push
mov
xor
mov
push
ret
add
fisubl
jno
or
stos
adc
call
mov
lods
jge
rcrb
aaa
or
adc
roll
pop
push
lea
xchg
cmp
pop
dec
sub
jno
push
pop
jno
add
lcall
xor
sub
sub
es
mov
or
jecxz
mov
xor
andb
daa
cmp
cmp
sbb
add
or
lcall
mov
xor
hlt
hlt
enter
jle
out
push
adc
pop
sub
adc
lcall
daa
mov
fidivl
cltd
shlb
mov
jno
cmc
mov
xchg
mov
push
mov
jp
push
push
subb
xor
xchg
into
inc
sbb
mov
movsl
xor
scas
mov
mov
push
orb
rclb
loope
mov
or
daa
inc
adc
jo
push
sbb
mov
popa
ret
jl
fmull
or
lods
pop
mov
shlb
cmp
lret
call
or
inc
dec
mov
xor
or
dec
aad
sbb
add
push
add
mov
xchg
add
dec
shrl
cmp
push
push
sub
sub
roll
sbb
sub
fbld
out
mov
xor
jecxz
nop
xor
xchg
lcall
xor
dec
into
inc
imul
inc
add
adcl
pop
js
cmp
aad
xor
mov
or
imul
bound
jne
rorb
cmp
fwait
std
ret
xchg
dec
add
pop
lds
push
aas
clc
ss
pop
mov
or
loop
dec
cwtl
orl
xchg
dec
sbb
jg
inc
and
int3
push
xchg
rol
arpl
inc
iret
cltd
mov
cmc
jg
int
pusha
stos
in
aaa
inc
jp
jp
out
ja
and
jp
cld
or
xlat
mov
pushf
mov
mov
lods
dec
push
xchg
in
push
xor
or
test
sbb
xor
xor
xchg
push
lock
jae
adc
mov
push
inc
push
mov
mov
inc
mov
sbb
stc
imul
out
clc
cmp
repnz
mov
mov
loope
lahf
stos
adc
push
jb
scas
jp
mov
jge
mov
les
or
scas
sub
sbb
pop
movb
adc
and
mov
pop
cmpsb
repnz
ret
jne
pop
or
inc
orb
push
lock
stos
fldlg2
xor
les
movsb
pop
sbb
pop
mov
and
jp
xor
test
xchg
adc
xor
inc
outsl
cmp
cmp
outsl
add
in
and
loope
adc
cs
push
mov
gs
mov
push
jl
rolb
push
mov
cltd
xor
leave
inc
add
enter
mov
pop
jno
xor
into
and
cmp
adc
add
add
hlt
outsb
mov
lods
popa
xchg
sub
aad
ret
cmp
push
enter
pushf
stos
sbb
push
stos
mov
push
lret
sub
mov
xor
sbb
pop
jns
stos
mov
jg
xchg
mov
sub
jno
insb
loopne
lret
jno
pop
mov
inc
shrb
push
insl
hlt
xchg
add
std
mov
mov
sbb
mov
pusha
add
out
adc
xor
fcmove
js
addr16
mov
mov
mov
in
test
jb
fisttps
mov
lcall
pop
outsl
mov
sub
in
lods
push
outsl
jne
mov
dec
cld
adc
subl
test
ror
daa
mov
inc
out
xchg
bound
rolb
sbb
jnp
inc
mov
push
out
mov
outsl
inc
or
mov
push
rcll
pop
cmpsl
add
xor
add
mov
inc
and
inc
daa
stos
stos
inc
jae
mov
mov
pop
and
cwtl
cmpsl
dec
dec
cli
subb
jae
ds
adc
cmpsl
cli
dec
test
inc
test
add
mov
xchg
or
mov
dec
and
xchg
loopne
out
sub
stos
or
loope
aad
rolb
out
jo
aam
mov
lock
cwtl
inc
loopne
aas
xchg
inc
ljmp
cmp
dec
aad
sub
inc
dec
push
pop
arpl
mov
rorl
dec
out
ljmp
bound
mov
lea
push
je
sarb
xchg
mov
mov
xchg
ljmp
imul
push
iret
into
jp
lret
sahf
xchg
jb
cwtl
add
and
shlb
js
jno
xchg
pop
mov
inc
lret
push
mov
add
mov
and
mov
push
adc
sub
shlb
push
sub
mov
rclb
xchg
enter
mov
mov
test
mov
dec
fcmovb
inc
pop
mov
jae
popf
jl
daa
andl
in
jno
addr16
pop
dec
xchg
mov
daa
xor
ja
pop
add
xor
sti
and
and
pop
in
stos
hlt
push
rolb
gs
push
dec
loopne
dec
dec
lcall
lea
cld
and
or
jnp
int
in
mov
push
into
fdivrs
sbb
inc
fsubrs
push
out
inc
and
add
mov
mov
arpl
and
push
pop
mov
scas
sbb
in
std
fsts
and
bound
or
adc
test
inc
test
push
fsubrs
and
ja
rclb
add
push
sbb
adc
mov
aam
lock
cmpsl
outsb
mov
and
or
in
pushf
jb
iret
xchg
and
adc
xchg
push
or
sub
rcrb
icebp
adc
jp
push
pusha
sub
push
sbb
mov
push
cmp
cmp
test
loop
sub
or
pusha
push
or
add
enter
loop
ret
and
mov
fwait
or
jo
or
inc
add
add
cmpsb
lcall
jno
dec
stos
pop
daa
push
push
cmp
mov
dec
mov
rcr
lcall
inc
mov
add
ret
stos
fisubl
ret
mov
add
cmp
xlat
and
jo
lea
inc
dec
sahf
fidivl
xor
mov
sub
jne
or
cmp
mov
jb,pt
push
js
cmp
sbb
rol
rclb
out
mov
jo
insb
adc
mov
mov
pop
xlat
and
test
sbb
pop
or
mov
ret
hlt
add
inc
loopne
mov
lcall
xchg
xor
mov
into
pop
aas
xor
pop
stos
pop
test
mov
pop
call
inc
loopne
and
add
inc
sbb
sbbl
mov
mov
andb
mov
push
stos
test
push
adc
ss
pusha
mov
sub
stc
fsubrl
push
dec
adc
icebp
mov
sbb
into
cld
push
push
iret
sbb
aaa
sub
and
lcall
or
sub
cld
xor
out
push
sub
faddl
loopne
mov
pop
addl
cmpsb
xor
jne
mov
cld
and
jb
pusha
xchg
push
sti
push
bound
mov
rcl
les
add
pop
cmp
adc
loopne
pcmpgtw
adc
inc
cmp
sbb
insl
xor
cmc
xor
stos
or
rorl
shll
out
cmp
or
push
outsl
adc
lock
cwtl
add
cmc
jno
scas
add
fsubl
cs
nop
stos
cmp
cld
mov
ret
imul
sbb
jno
shll
ljmp
mov
jecxz
pop
in
arpl
gs
push
int3
es
jp
push
mov
mov
mov
ja
mov
mov
imul
xor
inc
pop
mov
gs
xchg
cmp
mov
mov
inc
lcall
adc
gs
mov
xor
xchg
aad
adc
addr16
xchg
sub
fisttps
cmp
lret
mov
add
ds
adc
xor
call
cmp
add
or
add
adc
inc
call
pop
cmp
adc
or
jne
mov
mov
dec
push
mov
je
add
and
int
cmp
inc
les
add
les
pop
cmp
push
cmp
pop
push
sub
push
mov
pusha
pop
mov
adc
int3
push
jb
stos
ss
subb
iret
ret
mov
sub
push
pusha
mov
jecxz
shrl
gs
jbe
pop
mov
mov
push
mov
mov
pushf
sbb
mov
loopne
inc
xor
mov
pusha
leave
or
fsubrs
cmp
xor
ret
stos
rcrb
inc
dec
enter
dec
dec
inc
mov
mov
or
rcll
cmp
test
adc
jl
sub
mov
mov
aam
jecxz
xchg
jno
in
mov
inc
gs
jmp
cmp
aaa
dec
sbb
inc
mov
add
mov
jp
adc
adc
sbb
jmp
mov
cld
mov
pop
mov
jno
add
repnz
push
mov
push
sub
push
fldt
js
mov
jno
mov
insl
lods
addl
adc
addr16
and
xchg
movsb
aam
inc
lods
mov
adc
sbb
rolb
push
mov
dec
mov
push
cld
and
sbb
ss
mov
mov
xchg
sub
and
cmc
out
adc
adc
mov
rcl
stos
pop
inc
stos
jmp
leave
ficoms
lods
or
dec
push
mov
dec
repz
mov
shlb
into
add
xchg
and
xor
incl
inc
add
add
icebp
inc
ret
inc
std
pusha
xor
stos
dec
xor
cld
mov
push
aas
jno
enter
xor
inc
lcall
test
pop
leave
push
int3
or
or
mov
iret
dec
jp
loopne
outsb
fdivs
fadds
movsl
popa
movsl
test
nop
adc
xor
mov
push
sti
adc
scas
test
call
and
sbb
add
hlt
push
mov
cmp
mov
rorl
xor
cwtl
in
hlt
cmp
cmp
std
into
ret
push
mull
mov
pop
fsubrs
stos
xor
sbb
cmp
xchg
adc
mov
jge
jae
cmp
sub
inc
or
mov
dec
cwtl
pusha
arpl
mov
gs
inc
lea
lods
add
int
adc
adc
jae
push
lds
mov
inc
jmp
icebp
or
out
fistpl
adc
push
sbb
mov
xor
lret
inc
test
ret
push
push
push
mov
mov
mov
cwtl
dec
xchg
and
fwait
mov
add
sbb
mov
inc
shrb
push
pusha
dec
jp
sub
lds
or
mov
cmp
leave
rcl
pop
fsubrs
add
daa
mov
nop
mov
enter
aam
cmp
push
std
pop
rorb
and
sahf
cwtl
les
sub
sbb
mov
or
mov
aad
add
mov
mov
jle
push
push
add
int3
mov
pop
or
rclb
and
imul
sub
inc
test
dec
rcrb
pushf
lret
inc
cmp
in
pop
sub
inc
aad
jno
hlt
inc
dec
mov
add
in
push
push
mov
arpl
sbb
into
insl
out
rcl
enter
sub
xor
adc
inc
mov
pusha
bound
mov
sbb
xchg
sub
test
xor
mov
sub
dec
inc
stos
imul
bound
mov
daa
xor
test
pop
xchg
mov
inc
and
inc
imul
cmpsl
ja
inc
aad
jnp
loopne
mov
sbb
mov
mov
or
insb
inc
push
mov
aad
pop
mov
pop
aad
add
mov
cmove
xchg
mov
mov
push
add
pop
mov
insb
pop
in
mov
mov
mov
ss
fstps
mov
xchg
stos
xchg
dec
negl
and
into
lods
xchg
or
push
cmpsl
lods
lock
push
fisubrl
stos
push
aad
mov
jno
mov
mov
mov
mov
dec
xchg
aad
das
sbb
arpl
inc
aad
js
test
or
test
mov
dec
pop
sbb
lahf
inc
cltd
clc
xor
adc
jb
push
sub
adc
push
clc
sahf
add
mov
add
lahf
add
push
dec
mov
pop
ja
call
stos
gs
mov
xor
inc
and
xor
mov
sub
mov
inc
sbb
test
or
add
jmp
push
xor
sub
movl
into
lss
sub
sub
test
pop
mov
iret
sub
mov
flds
in
inc
jb
mov
xor
sbb
shrl
push
adc
mov
add
cmpsl
inc
mov
dec
push
add
xchg
test
xor
sub
xchg
inc
mov
ljmp
loope
jecxz
nop
cld
xchg
mov
imul
sti
fstpl
mov
add
mov
push
push
jo
push
sub
or
movsl
push
insl
or
jl
inc
scas
shrl
sub
test
sub
pop
push
pop
xchg
push
imul
push
gs
mov
push
rcr
lcall
pop
ja
fisubs
popa
push
cli
rorb
cwtl
pop
push
add
mov
fcomps
ltr
inc
lds
fiaddl
loopne
adc
or
push
xor
sbbl
dec
cmp
bound
stos
or
push
pop
test
sbb
ret
mov
les
xor
dec
daa
sbb
shrb
inc
lret
sbb
pop
dec
push
imul
mov
fsubl
lcall
mov
cltd
xchg
xorb
pusha
mov
sarb
test
iret
stos
pop
dec
daa
dec
mov
push
jns
or
rol
adc
xor
lcall
lea
das
ret
push
jo
cld
and
repnz
or
call
pop
lods
inc
imul
adc
inc
xorl
sbb
mov
imul
push
push
fstpt
push
rolb
cld
jg
add
mov
gs
jb
mov
fstl
mov
fcmovb
push
sub
sub
adc
loope
jecxz
add
arpl
stos
call
test
mov
cld
sub
and
push
add
xor
scas
cmp
mov
pop
mov
push
mov
stos
in
push
clc
push
rcrl
lds
push
adc
sbb
loope
push
rorl
push
ds
fstl
jne
adc
cwtl
ret
addl
adc
negb
pop
pop
fcomip
loopne
cmp
fdiv
dec
les
out
popa
mov
mov
test
mov
xor
dec
adc
lods
cmp
popa
cmp
pop
mov
loope
aam
scas
adc
inc
fdiv
mov
fnstenv
inc
shrb
ret
cwtl
lcall
shrl
cmp
jo
call
pop
dec
mov
and
fdivrp
pop
jb
or
push
sub
adc
gs
fisubrl
notl
push
cld
mov
sub
sbb
sarb
stos
jg
jbe
call
out
addb
ret
adc
test
cltd
leave
or
mov
dec
inc
insl
jle
mov
inc
xor
daa
or
outsb
adc
outsb
mov
push
rcll
movsb
xor
push
or
lahf
mov
mov
push
lods
adc
push
inc
shlb
pop
into
cmp
mov
scas
push
popa
mov
out
cld
or
xchg
adcb
mov
xchg
and
enter
push
cld
ffree
inc
sbb
lahf
add
je
adc
ds
adc
popa
daa
lods
mov
lods
mov
or
add
inc
mov
pop
imul
int
mov
les
xchg
inc
push
push
and
bound
xor
shl
orl
and
inc
adc
add
sbb
mov
mov
arpl
mov
mov
push
ja
imul
push
jmp
push
dec
xchg
xor
test
mov
add
jmp
xchg
pop
xchg
push
rcrb
add
dec
mov
mov
pop
test
and
cmpl
xor
in
sbb
dec
xor
dec
shrb
filds
pop
mov
sbb
xor
repnz
cs
mov
test
xorl
stos
ret
loope
aad
inc
mov
arpl
incb
add
xor
pop
dec
cmpsl
dec
add
daa
es
mov
lret
outsl
push
mov
sti
sahf
lahf
enter
ret
pop
mov
int
sahf
frstor
push
bound
and
mov
loopne
sbb
and
push
test
mov
jbe
or
jo
dec
inc
scas
stos
inc
or
fs
pop
fwait
mov
ret
pusha
pop
sahf
inc
test
aas
xchg
rorl
andl
cmp
pop
add
pushf
sbb
push
push
xor
les
push
loope
int
add
dec
or
push
insl
shlb
adc
mov
pop
add
mov
mov
mov
xor
pushf
push
pop
fisubrs
add
daa
mov
pop
push
mov
push
adc
test
adc
test
out
bound
dec
rcll
mov
sub
sbbl
xor
jp
mov
mov
jbe
mull
fists
cmpsb
icebp
mov
mov
imul
push
and
inc
daa
into
enter
push
scas
jae
cltd
mov
out
mov
daa
push
mov
mov
fisubs
int3
call
and
imul
push
repz
out
movsb
pop
add
pop
popl
mov
int
push
aad
mov
mov
mov
mov
test
ljmp
mov
cmc
pop
aam
push
inc
gs
mov
loope
in
jnp
dec
xchg
pop
les
or
stos
push
outsl
push
push
push
or
xchg
sti
stos
mov
das
aad
sbb
inc
shlb
mov
xor
jb
push
pusha
adc
mov
insl
adc
jmp
into
cld
sub
shrl
jo
xor
add
loope
xor
je
adc
mov
mov
mov
pop
pop
ret
mov
inc
scas
mov
aaa
mov
xor
push
into
xchg
mov
and
dec
or
lds
xchg
subb
and
sub
cmp
mov
xchg
sub
in
inc
push
scas
jp
cmp
inc
sbb
addr16
mov
push
xchg
mov
insl
dec
dec
icebp
sbb
mov
and
push
xchg
roll
lret
xchg
add
dec
rolb
xor
push
mov
ljmp
mov
xor
mov
lods
cs
in
ljmp
addb
jno
and
shrb
inc
into
ljmp
aam
lea
adc
push
sbb
pop
sub
or
cmp
ss
icebp
mov
ret
inc
shrl
cmp
push
sbb
sarl
adcb
shl
add
stos
inc
dec
mov
rorl
in
or
in
fidivl
bound
or
sbb
shlb
aas
aaa
andb
js
push
shr
add
lea
jmp
arpl
inc
movsl
into
popa
pusha
jmp
js
xor
movsb
cld
mov
daa
test
movsl
stos
adc
dec
mov
or
xlat
cmp
cmp
sub
push
inc
stos
push
mov
dec
daa
xor
insl
cs
add
or
stos
mov
dec
in
subl
lcall
in
test
stos
or
inc
js
push
xchg
push
ljmp
sub
dec
roll
call
pop
cs
lret
lret
push
jae
lret
es
cmp
rcl
sub
xor
sbb
push
sub
jnp
push
insl
xchg
arpl
mov
sahf
push
adc
or
testl
pushf
and
inc
out
imul
subb
lods
ret
mov
xchg
add
mov
insb
mov
lret
pop
lods
dec
mov
loopne
jno
addl
sub
mov
int
add
sub
push
push
jae
popf
jge
je
in
ljmp
adc
ljmp
adc
rorb
fmul
mov
xchg
out
rorb
sbb
das
mov
push
or
hlt
inc
push
ror
push
xor
dec
ja
adc
add
call
fwait
imulb
pop
shll
cmp
dec
ja
icebp
add
sbb
movsb
push
icebp
incl
aad
mov
sarb
lods
pusha
push
dec
ucomiss
mov
inc
inc
aad
xor
jl
or
pop
out
mov
je
lcall
dec
stos
sbb
loopne
sbb
aad
sub
out
adc
rorb
inc
or
jb
adc
lods
pusha
les
mov
push
outsb
imul
pop
cltd
bound
sbbl
sbb
rol
add
ss
dec
data16
push
push
mov
aad
mov
dec
out
add
into
or
es
mov
push
inc
pop
push
and
sarb
push
fcomps
adc
lcall
stos
lret
negb
arpl
push
inc
in
jecxz
in
rcrb
das
and
sub
outsb
adc
ret
add
sub
daa
jo
pop
outsb
pop
mov
adc
inc
hlt
sub
pop
rcl
mov
adc
out
cmp
fsub
sub
loope
stos
popf
hlt
mov
sbb
cld
push
xlat
sbb
sbb
stos
pusha
andb
inc
in
lea
jno
mov
xor
das
sbb
hlt
pop
je
xor
mov
adc
sub
cmp
loopne
sbb
cmp
insl
pop
mov
xchg
jmp
hlt
pop
xor
inc
lret
gs
outsb
pop
sub
push
xchg
cmp
lods
mov
mov
fbstp
inc
add
flds
sub
cmpsb
adc
sarb
cmp
std
call
cld
adcl
xor
sub
pop
jne
std
out
lods
add
sub
jmp
popa
inc
mov
lods
and
pop
addr16
cld
pop
and
push
xor
inc
enter
cmp
outsl
rclb
cmpsb
mov
movsb
push
icebp
jb
ret
fs
xchg
dec
adc
sahf
add
push
pop
je
int
inc
jno
loopne
inc
xor
bound
xlat
jmp
push
sub
push
arpl
push
stos
inc
scas
pop
push
xor
pop
dec
les
mov
xor
lret
dec
cmp
xlat
lds
and
es
scas
xor
cwtl
call
jae
adc
or
mov
push
dec
cld
lret
mov
xchg
mov
sbb
int3
pop
push
arpl
fistl
rclb
jb
rcl
push
cmpsb
mov
push
mov
sbb
fdivl
xchg
dec
in
inc
imul
in
jne
rcrb
cltd
loopne
mov
push
xchg
xor
into
jno
jg
ljmp
jno
pop
xor
test
push
into
lret
or
dec
popf
or
popf
and
dec
mov
lcall
loope
bound
scas
in
loop
jp
sub
push
sbb
movsl
hlt
pop
xchg
cli
pop
test
test
push
xorb
sub
push
les
pop
movsl
mov
mov
data16
and
xor
mov
aas
loopne
ror
inc
and
sbb
stos
mov
andl
mov
and
into
adc
loopne
jno
rorb
jp
xor
dec
cmpsl
or
mov
xorb
sub
cs
sub
mov
insl
mov
enter
jl
stos
hlt
addl
pop
inc
test
and
cs
ljmp
mov
stos
push
pushf
xor
shrl
push
ret
push
pop
xchg
inc
sbbb
cmp
pusha
stc
pop
hlt
pusha
rcr
int3
xor
ds
and
jecxz
mov
nop
shlb
push
hlt
xor
mov
mov
push
sub
hlt
les
cmp
daa
ljmp
cwtl
subl
inc
push
mov
cld
adc
stos
aam
cmp
pop
or
xor
lret
and
adc
js
push
cld
addr16
shrb
push
pop
xchg
pop
jno
ds
out
add
lahf
and
add
pusha
xchg
test
xor
and
mov
xchg
aaa
pop
adc
xchg
ret
add
jmp
push
fildl
or
push
mov
xchg
jb
add
ret
sbbb
sahf
rolb
fwait
adc
push
cmp
lcall
movl
inc
adcb
loop
lods
cld
shr
and
test
adc
mov
in
popa
sbb
fnstenv
jg
adc
test
lea
adc
mov
xor
mov
sbb
sub
cmp
xchg
jo
negb
push
mov
shll
pop
mov
sar
je
jb
ljmp
lret
mov
lds
xorl
loope
daa
adc
xor
xchg
arpl
scas
mov
fsubs
gs
stos
in
push
aam
mov
adc
lods
inc
hlt
mov
ret
lods
xor
add
int3
in
aam
bound
inc
xchg
lcall
inc
jno
and
dec
lods
in
push
mov
test
pushf
mov
movsb
push
pop
inc
mov
xor
in
sub
mov
inc
or
pop
sbb
and
push
and
outsl
out
add
int
cmp
cmpsl
sbb
sbbl
push
cmpsl
sti
inc
jae
and
sbb
mov
ficompl
inc
push
xor
lock
imul
out
xchg
jae
xorb
push
inc
mov
inc
inc
dec
stos
jmp
stos
push
test
call
push
daa
fwait
adc
ljmp
icebp
mov
push
and
dec
inc
pop
imul
lret
mov
ret
pop
test
fdivl
inc
rorb
pop
aad
mov
shl
and
mov
movsl
sbb
into
xchg
xlat
sub
or
lret
pop
addr16
add
mov
inc
fstpl
loope
popf
cmp
pop
mov
pop
sbb
xchg
test
fimull
out
add
out
jl
cltd
je
add
and
test
inc
adc
dec
mov
dec
fs
sahf
mov
push
shlb
xor
cmp
push
inc
push
pusha
dec
or
push
je
arpl
leave
insl
test
dec
push
int3
cltd
test
shlb
push
push
or
lods
cmp
pop
rcrl
pop
lds
scas
and
cmpsl
fimuls
cmp
mov
test
mov
or
push
hlt
daa
xor
push
push
out
pop
orl
adc
inc
add
stc
or
fcmovb
lock
sub
shl
inc
sbb
xlat
or
shl
xor
lods
fsubl
add
fildl
aaa
addb
sub
test
aas
xchg
js
rorb
mov
jb
dec
inc
data16
push
cmp
dec
mov
pop
cmpsb
sbb
lock
push
inc
shrl
fisubl
push
je
sahf
push
lret
sub
push
adc
popa
int
xor
pop
ret
mov
push
sub
cmp
xor
or
mov
push
jo
outsb
hlt
stos
inc
lret
mov
imul
jb
mov
fs
or
jo
adc
add
or
shll
mov
inc
shrb
add
mov
cmpsl
out
out
lock
sbb
fisubl
lock
jl
or
stc
mov
pop
push
mov
mov
sbb
or
movl
cmp
push
or
xor
mov
inc
push
dec
and
xchg
push
push
adc
xchg
lret
into
pop
mov
or
lds
adc
stos
subl
ret
mov
pusha
jmp
xchg
test
or
fistpll
mov
outsb
mov
push
and
push
sub
add
xchg
test
sub
rorb
rcrl
jbe
rcrb
mov
push
aad
insb
shl
inc
push
xor
test
push
jae
mov
hlt
test
lcall
push
lods
in
loopne
dec
cld
mov
popf
leave
add
in
sbb
push
dec
add
xlat
lret
test
rep
sub
or
cmp
ljmp
xchg
aad
mov
sub
movsb
subl
fsub
mov
or
hlt
xor
or
pop
and
push
clc
mov
rcrb
sbbb
xor
shrb
add
inc
std
adc
add
popa
or
add
test
int3
inc
stc
sub
xor
adc
push
lock
jnp
sbb
clc
roll
add
ret
adc
or
inc
mov
roll
push
inc
leave
dec
jno
or
push
jmp
mov
inc
ret
inc
adc
addl
scas
mov
cmpsl
dec
icebp
push
mov
dec
fwait
inc
mov
or
dec
push
test
xchg
dec
inc
mov
add
jo
imul
cs
dec
fists
aaa
insl
pop
inc
mov
push
push
or
cmp
pop
aad
rorb
stos
cmp
push
stos
into
push
inc
shrl
sbb
xorl
das
hlt
insl
hlt
in
push
add
push
mov
push
rclb
and
xchg
adcb
mov
ret
push
add
xchg
push
insb
int
jo
mov
aad
push
test
push
int
out
inc
push
adc
out
scas
add
dec
mov
inc
inc
sbb
inc
andb
mov
fidivrl
xchg
orb
hlt
sub
mov
insl
icebp
xor
pop
gs
insb
es
adcl
testb
push
jp
xchg
out
mov
xchg
iret
decb
lods
add
fsubs
push
inc
mov
jle
clc
pop
inc
lock
mov
add
push
mov
mov
jno
je
test
or
jg
lret
das
fcmovb
mov
sbb
xchg
test
stos
jo
mov
and
mov
xor
push
stos
aas
idiv
pop
stos
xor
and
and
fidivrs
pusha
add
fxch
pop
test
add
hlt
scas
adc
fstpl
or
mov
lock
push
mov
lods
test
popf
stos
mov
adc
xor
xor
xor
or
jo
push
aad
stos
inc
movsl
dec
push
and
sub
push
mov
sub
mov
adc
xchg
ret
sar
lahf
iret
cli
test
push
xchg
sub
push
in
xor
out
mov
mov
in
mov
roll
push
shlb
hlt
and
or
add
dec
add
xor
mov
cwtl
mov
mov
xor
stos
mov
push
push
scas
lods
andb
add
sarb
iret
adc
enter
push
into
mov
cwtl
imul
sub
xor
mov
or
ret
loopne
gs
dec
out
movsl
call
sbb
inc
lods
dec
xor
pop
scas
or
push
mov
mov
sub
lea
or
xorb
vfrczps
clc
icebp
jae
or
xor
sbb
cld
cwtl
addl
sub
or
xor
add
cmp
xor
push
mov
lcall
jle
add
movsl
inc
xchg
inc
loopne
dec
outsb
stos
mov
adc
xchg
mov
sbb
and
xor
in
ljmp
pusha
push
add
fbld
dec
jno
mov
mov
ret
out
pusha
push
push
sub
dec
sbb
and
xor
ret
cwtl
and
imul
popa
jno
mov
shl
cmp
push
or
aam
scas
push
stos
push
jp
pop
push
push
xor
bound
pop
add
addb
scas
inc
dec
inc
cmp
test
mov
test
sbb
push
xchg
hlt
xchg
jmp
mov
cmpsb
add
xchg
jp
or
mov
dec
inc
cmpsl
or
add
aas
adc
bound
aam
out
mov
push
imul
daa
add
adc
dec
xor
imul
and
movsl
add
push
test
jmp
stos
adc
and
insl
add
mov
add
scas
pop
jge
xchg
pop
xchg
mov
cmp
or
adc
inc
adc
ja
or
popa
mov
sarl
and
push
popf
dec
xor
push
or
andl
out
cmp
push
arpl
mov
inc
in
out
adc
mov
mov
shlb
ror
sub
dec
push
push
jno
xlat
xor
lods
into
add
pop
pop
pusha
or
frstor
in
xchg
jae
lock
push
add
push
rcl
into
jecxz
ljmp
popf
xchg
mov
rcll
sbb
jno
daa
mov
mov
mov
aam
mov
mov
adc
loopne
xor
mov
aas
pushf
push
call
push
ficompl
push
pop
adc
sub
inc
mov
add
inc
in
fwait
push
loopne
cmp
inc
ret
xlat
push
push
xorl
jecxz
xchg
in
add
scas
popa
jl
aaa
pop
sub
dec
loopne
jp
rcrb
jae
sbb
gs
inc
in
mov
sub
push
sbb
or
dec
mov
sbb
xor
test
pop
rolb
pop
pop
call
dec
dec
add
xchg
je
roll
ret
mov
cmp
xor
add
xlat
or
dec
popa
ret
nop
xchg
scas
add
gs
push
jns
test
inc
ror
inc
jne
push
shlb
lahf
ds
mov
popa
ret
hlt
pop
mov
and
adc
push
insb
mov
jno
inc
adc
mov
add
and
out
orl
rcrb
dec
inc
popf
and
xchg
mov
inc
push
sbb
rcr
out
mov
mov
push
inc
mov
xchg
pop
jne
push
insl
lret
mov
and
mov
gs
xchg
dec
cwtl
push
shrl
or
or
mov
mov
mov
call
aam
sub
scas
pop
pop
mov
dec
aas
push
rcr
and
iret
add
push
xorl
adc
push
mov
xchg
loop
fdivs
pop
add
in
fisubrl
xchg
dec
sub
and
inc
cwtl
jne
xchg
sbb
and
mov
mov
mov
xor
mov
cmp
andb
aam
cs
push
out
les
add
cld
hlt
call
jge
mov
push
pop
dec
pusha
mov
jne
or
and
mov
sti
xor
sub
and
jp
cmp
ja
enter
dec
pop
mov
adc
xchg
or
and
mov
xchg
mov
add
push
push
and
sbb
xchg
hlt
lahf
inc
loope
jo
fs
sbb
ss
inc
roll
cltd
test
jbe
xor
push
jmp
push
imull
jnp
and
shlb
mov
movsb
add
pop
aam
and
mov
push
outsb
sub
add
mov
or
sti
mov
sbb
inc
inc
addr16
push
xor
lret
loope
xor
fadds
sub
into
adc
sub
cmpsb
rol
mov
push
outsl
or
fidivrl
subl
into
mov
xchg
out
mov
inc
scas
fs
shrl
or
leave
mov
icebp
inc
or
stc
jno
pop
dec
adc
or
push
xor
leave
xchg
stc
lcall
lcall
mov
rcrb
mov
xor
push
mov
outsb
inc
sub
or
stos
ljmp
mov
and
or
rorb
mov
xchg
push
leave
and
mov
cmp
cmpsb
daa
mov
ds
inc
mov
xchg
orb
push
add
pop
push
pop
mov
lods
adc
mov
gs
mov
cs
pop
inc
mov
inc
adc
sub
jmp
dec
push
jge
mov
cld
pop
rcll
out
push
xchg
stos
std
shlb
out
cmp
mov
sbb
scas
sub
ljmp
shll
mov
inc
sub
loope
cmp
lds
ss
jne
lcall
sub
mov
sbb
push
mov
xor
sbb
and
sbb
sub
pop
pop
ret
xchg
sub
or
and
fcoms
aad
or
sbb
lret
in
clc
or
and
fildll
sub
enter
rclb
sub
js
sbb
mov
add
icebp
mov
push
cmpsb
jg
sbb
pop
push
in
pop
or
adcb
das
or
cmpsl
jo
inc
out
xor
mov
stos
sbb
pop
adc
popf
push
add
mov
into
stos
adc
aaa
adc
rcll
popa
hlt
rcl
sbbb
inc
inc
loope
mov
xor
adc
xchg
sbb
into
lea
sub
call
xchg
push
popa
decb
dec
or
pop
daa
ret
sub
ret
mov
jno
shrb
xchg
hlt
jle
pop
ljmp
sbb
repz
scas
xor
mov
jp
je
rol
push
inc
xor
jbe
pop
inc
inc
test
test
pop
into
or
inc
in
sarb
push
test
xchg
pop
push
fdivs
or
dec
lods
notb
jne
cmc
mov
mov
stos
pop
icebp
inc
xchg
sub
sub
inc
insb
cmp
inc
dec
and
sub
and
mov
lcall
or
sub
dec
adc
inc
mov
mov
icebp
or
mov
push
sub
pop
add
or
dec
sbb
rolb
shrl
xor
ljmp
push
rorb
repz
mov
stc
daa
insl
mov
mov
test
pusha
or
jecxz
popa
or
test
mov
clc
ja
outsl
mov
or
rorl
rcpps
lret
bound
mov
push
rorl
jp
xor
sbb
orb
mov
std
mov
pop
dec
mov
in
add
add
sbb
lcall
rclb
loopne
xor
cmp
and
aam
repnz
add
mov
push
lea
jle
cmp
lcall
test
mov
clc
stc
pop
sub
mov
dec
dec
popf
mov
or
test
ljmp
inc
sub
aam
pop
xchg
push
mov
inc
out
jecxz
mov
xchg
sbb
push
jbe
test
aam
dec
jno
mov
shrb
cmp
pushf
jnp
loop
sbb
add
cwtl
mov
pop
movl
out
or
jp
pop
cmp
jns
stos
push
sub
mov
mov
push
pop
pop
push
mov
or
inc
dec
or
jb
insl
pusha
adc
dec
xor
hlt
or
add
fadds
mov
call
cltd
sbb
sub
bound
call
inc
push
mov
sub
sub
cmpb
inc
inc
stos
dec
fisttpll
cmp
mov
mov
adc
movsl
push
jg
add
aam
int
dec
fnstcw
push
out
sub
test
pop
cmp
loope
push
jp
inc
or
dec
adc
inc
sub
mov
or
imul
or
add
rol
stos
or
xchg
jo
jb
mov
inc
adc
or
mov
or
sbb
ficompl
dec
inc
mov
cwtl
xchg
inc
test
mov
mov
cmp
add
push
sub
sbb
add
cmp
mov
lret
mov
imul
loopne
fsub
stos
mov
subb
xchg
xor
ret
mov
xchg
jne
mov
adc
mov
push
rcrl
mov
cmpsb
cli
ror
pop
dec
inc
xchg
push
sahf
or
out
ds
scas
imul
push
dec
push
insl
lret
in
adc
mov
jb
in
stos
mov
pop
sbb
shll
ret
lcall
dec
in
test
cs
adc
cmpsl
mov
mov
les
mov
jns
ret
adc
mov
mov
add
or
lcall
and
flds
push
xchg
fisubrl
pop
call
aam
add
push
sub
push
test
mov
insl
mov
jge
lea
push
cmp
filds
xchg
mov
jl
mov
sbb
jecxz
push
or
xor
xor
pop
push
adc
outsl
outsb
add
dec
push
cltd
and
ljmp
mov
sub
sub
sahf
inc
add
dec
inc
dec
jbe
mov
lock
sbb
addb
push
xor
adc
mov
sub
pusha
push
inc
loopne
cmp
mov
xor
jmp
orl
test
push
mov
loope
push
clc
adc
or
push
ret
cmp
or
jb
test
gs
adc
xor
mov
rorb
ljmp
out
or
sbb
call
jnp
xchg
and
test
cmp
loope
cmp
stos
fidivrl
ret
daa
adc
sti
enter
or
mov
push
add
ret
rcll
sbb
sub
push
test
sub
push
lcall
gs
xchg
push
xor
popa
shlb
cli
pusha
test
add
push
cmp
sbb
inc
ficompl
scas
mov
rcrb
and
adc
mov
enter
mov
sarb
mov
push
arpl
in
loopne
sahf
ret
sub
xchg
xor
sahf
cmp
push
sub
add
lea
pop
xor
pusha
movsl
mov
push
fmul
js
mov
mov
mov
out
cmp
jns
jo
rcrl
mov
push
adc
mov
dec
rcl
xor
push
jo
popf
xchg
push
rcr
out
dec
fisttpll
hlt
pop
push
xor
ljmp
sub
cmp
or
adcb
scas
orl
sub
frstor
jb
xorb
outsb
cmp
xchg
adc
js
mov
sar
add
xor
ficoms
inc
add
push
sbb
dec
push
les
jg
cmp
xor
pop
push
lods
xchg
ja
int3
push
cmp
hlt
aas
adc
repz
fidivrl
xlat
or
push
pop
out
pusha
mov
fsts
mov
into
test
or
dec
xchg
add
into
orb
xor
mov
int
dec
shrl
sbb
int
push
cmp
test
push
ret
ret
sub
and
push
sub
outsl
inc
cmp
test
inc
dec
sub
xor
dec
pop
les
and
nop
dec
xor
ret
inc
stc
inc
inc
push
lret
into
lret
stos
aam
jecxz
test
dec
add
mov
lea
arpl
dec
fsubrs
mov
fisubs
or
andb
enter
inc
movsl
and
popf
and
sahf
pop
insb
daa
in
inc
movsl
inc
xor
cmp
inc
out
adc
mov
hlt
add
mov
loopne
jo
dec
add
fstpl
inc
adc
mov
mov
mulb
and
test
test
rclb
or
fisubs
loope
loopne
rcll
inc
daa
ljmp
dec
sbb
jg
push
pop
adc
push
je
jb
insl
test
xlat
push
dec
ds
inc
mov
data16
adc
scas
mov
cwtl
sbb
inc
mov
mov
xor
mov
aad
repz
push
mov
inc
testl
xor
sbb
or
lods
test
inc
lea
in
sbbb
mov
inc
mov
loopne
inc
sbb
and
ss
add
or
inc
push
sbb
push
fmuls
hlt
test
test
adc
pop
xor
push
test
mov
and
lock
lock
hlt
adc
or
rclb
repnz
dec
sub
ror
and
cmp
fsubrp
mov
xor
mov
xchg
mov
lcall
mov
stos
inc
xor
aas
shrl
push
xor
dec
ret
push
aam
push
mov
pop
pop
sub
mov
lcall
repz
into
pop
outsl
loope
jp
imul
jb
cmp
pop
les
mov
mov
pusha
sbbl
mov
pop
add
cmc
mov
cmc
gs
add
push
hlt
lock
mov
shlb
shll
popf
pop
adc
xchg
test
cmp
mov
push
mov
xor
or
adc
adc
cmp
ljmp
mov
pop
jnp
mov
out
add
sub
add
mov
add
rcrl
sbb
inc
aas
jo
push
addr16
mov
in
push
sub
pop
pushf
in
pop
popa
iret
es
pop
faddl
or
faddp
dec
mov
cmp
fsubrs
adc
orb
mov
add
mov
pop
xchg
pusha
stos
pop
or
notb
cmp
flds
mov
cmpsb
gs
sti
xor
inc
pop
gs
rclb
adc
xchg
test
into
push
stc
hlt
dec
ljmp
mov
add
ret
dec
adc
in
clc
inc
add
addl
push
lret
xchg
xor
adc
xchg
xchg
in
inc
movsb
mov
cmp
and
inc
gs
push
cld
push
add
push
sahf
push
scas
nop
push
pop
or
gs
in
ja
insl
inc
push
popl
stc
push
inc
dec
push
incl
jb
or
inc
add
roll
pop
add
inc
pushl
mov
sub
sbb
pop
ljmp
cld
js
add
rclb
add
cld
shll
je
add
mov
imul
pop
cli
inc
dec
adc
pop
add
loopne
icebp
sbb
cld
shlb
stos
push
mov
pop
mov
jl
push
sbb
jg
pusha
rorl
inc
rolb
mov
lret
mov
add
in
mov
out
sbb
test
bound
xchg
shll
sbb
push
adc
arpl
jle
xor
sbb
mov
fadds
cltd
out
cmpsb
mov
shlb
sbb
mov
cmpsb
cmp
jp
pop
ja
add
add
cmp
xchg
cmpl
add
inc
data16
loop
xchg
scas
jo
bound
out
dec
leave
sub
idivb
popa
int
or
add
bound
int
mov
xchg
loope
pop
cmp
mov
push
push
or
addb
cld
mov
push
sub
mov
jb
gs
xor
fcmovbe
stos
test
cwtl
and
in
sub
cmpsl
pop
xor
inc
mov
lods
push
pop
xchg
or
add
adc
sub
mov
xor
mov
adc
adc
mov
xchg
xlat
pushf
jmp
imul
test
shll
xor
mov
jo
inc
mov
or
fimull
pop
int3
outsb
jle
movsb
xchg
test
xor
push
and
lret
into
mov
dec
add
xchg
push
loopne
lea
or
adc
out
popa
mov
push
inc
dec
daa
inc
mov
aad
push
pop
and
idivb
mov
subl
clc
cs
dec
cmp
rolb
push
adc
mulb
jmp
loopne
mov
inc
inc
fwait
mov
add
nop
mov
push
xor
int
inc
leave
ret
das
xlat
sbbb
pop
mov
inc
mov
mov
push
int
xchg
ret
inc
mov
bound
ret
inc
inc
gs
sub
push
mov
add
push
xchg
sub
and
rorb
sbb
jb
mov
mov
aam
gs
es
dec
dec
or
aam
sub
popf
mov
sar
mov
es
jae
fcomi
and
fmuls
cld
sbb
jle
cs
jbe
cmp
icebp
je
jnp
ret
ficoml
inc
dec
mov
dec
adc
adc
push
shrd
adc
add
or
test
subl
dec
out
ret
xchg
push
je
insl
mov
inc
dec
scas
mov
inc
mov
pop
cmpsb
hlt
test
cld
push
and
pop
xor
gs
pop
jno
sbb
add
mov
cmpsb
and
mov
or
xor
push
hlt
push
xor
cmpsl
xchg
subl
or
ja
push
inc
cmpl
mov
push
add
mov
mov
fcmovnbe
xchg
mov
mov
subl
mov
sbb
addl
addb
inc
mov
js
and
sub
psrlw
addb
push
adc
les
cld
xchg
inc
cmc
mov
push
mov
outsl
les
hlt
mov
mov
add
fildll
lock
add
mov
xor
add
add
sbbl
pushf
adc
and
or
mov
call
popf
inc
xor
in
and
pop
aaa
inc
add
mov
cmp
pop
mov
push
out
outsb
xchg
mov
test
adcb
sub
push
lcall
shrl
dec
shl
aad
mov
aam
adc
cltd
addb
sbb
pusha
imul
roll
cmp
inc
mov
mov
add
scas
pop
mov
in
add
push
or
sbb
cwtl
mov
fs
add
xchg
dec
jne
adc
add
popa
xchg
push
push
scas
test
add
mov
inc
lret
adc
mov
outsb
fiaddl
pop
das
xor
xor
or
mov
sbb
je
in
mov
cli
lea
sub
stos
lea
mov
mov
rorb
push
sbb
test
rol
mov
push
js
sbbb
sbb
das
xor
jno
and
mov
and
pusha
stos
sbb
xor
add
mov
shrb
pop
pop
js
push
add
inc
push
mov
ret
lahf
mov
push
test
int
mov
unpcklps
inc
dec
out
mov
add
jnp
mov
shll
and
inc
and
add
loopne
push
sub
ret
fcom
fcom
inc
jae
inc
repz
inc
mov
dec
cmp
xor
js,pt
mov
pop
shrl
cmp
adcb
sar
xchg
arpl
and
xchg
jno
mov
add
dec
jbe
pop
por
jae
push
dec
adc
lock
cs
or
push
push
rcrl
and
pop
lcall
cmp
and
inc
adc
xchg
and
inc
enter
xchg
int
ja
cmpsb
scas
sbbb
inc
xor
mov
mov
sub
mov
mov
std
inc
mov
rcrl
adc
or
pop
lret
je
mov
rcl
xchg
adc
dec
xchg
and
cld
lret
sub
push
push
sahf
shll
push
sub
loopne
scas
into
es
rorl
push
push
inc
loope
cmpsl
stos
sarb
dec
dec
sbb
pop
push
mov
js
sbbb
hlt
inc
adc
push
sub
into
icebp
ret
push
xchg
push
lds
aam
pop
and
xor
fisubs
popf
or
dec
xchg
aaa
add
push
adc
fcoms
stc
iret
push
dec
mov
push
test
sbb
push
ret
rolb
rcll
into
rolb
mov
dec
scas
das
sbb
hlt
and
dec
notb
xor
xchg
jge
jecxz
mov
inc
in
jo
lret
daa
push
ret
gs
loopne
inc
mov
push
push
jns
or
roll
push
jg
pop
cmp
les
adcb
xchg
lea
xor
pop
sub
lods
inc
sub
fs
pop
cmp
mov
inc
outsl
push
inc
mov
mulb
xor
push
sbb
add
inc
loope
or
or
fsubs
mov
jbe
movsl
incl
shrl
je
sub
fidivrs
scas
push
sub
imul
cld
cmp
and
push
test
jl
aas
add
jge
adc
leave
mov
out
push
lock
mov
mov
dec
push
shlb
cmp
test
cli
cmp
out
je
rorl
clc
ljmp
pop
xor
loopne
fsubs
mov
into
fstpt
push
mov
movsl
push
jecxz
gs
push
push
mov
pop
push
adcl
ljmp
rcrl
push
ret
scas
fcomi
and
xor
push
add
mov
jnp
mov
shrl
pop
ficoms
push
xchg
sub
aad
cli
sub
inc
pop
aad
push
push
xlat
or
mov
inc
fists
sub
mov
arpl
inc
rcrb
scas
xchg
mov
jb
pop
lods
push
xchg
sbb
clc
bound
pop
stos
scas
add
ja
mov
mov
mov
es
push
jb
or
fcoml
aam
sub
add
or
sbb
mov
jge
or
sub
inc
or
push
int
das
andl
push
adc
and
jne
push
mov
jo
int
arpl
addb
add
idivb
push
mov
mov
and
jb
dec
inc
iret
cmp
cmp
gs
push
jo
push
xor
adc
das
popf
pop
push
popf
mov
fwait
popf
into
loope
cwtl
mov
std
cmpsb
dec
scas
pop
inc
push
ss
addl
dec
mov
mov
mov
shrl
push
mov
sbb
pop
shlb
lahf
dec
aad
outsl
adc
mov
inc
dec
fnstsw
stos
cltd
lret
daa
and
in
cltd
iret
adc
call
stc
mov
es
push
int3
jae
stos
mov
gs
rolb
sahf
and
test
nop
test
mov
jmp
inc
cmp
roll
push
aas
test
add
inc
lods
push
cmc
dec
add
jp
jbe
xchg
lret
fcompl
mov
sub
xchg
pushf
push
sbb
or
stos
or
loopne
aas
mov
in
mov
xchg
gs
mov
stos
and
push
sub
paddw
inc
jne
outsl
mov
add
push
hlt
mov
push
daa
push
cmpb
mov
lds
xor
inc
sbb
in
sbb
mov
lea
call
rcll
or
lahf
cmp
push
and
pop
out
push
into
push
in
cld
fldt
int
shlb
popa
dec
mov
or
inc
mov
fisubl
xor
sbb
adc
sbb
pop
jo
mov
dec
je
adc
xor
shll
mull
inc
cs
scas
jae
fcoms
stos
push
xchg
xor
mov
ja
addb
mov
lods
inc
push
push
sbb
mov
push
dec
sub
lret
mov
add
rorb
inc
rol
adc
cld
add
push
cmp
inc
aam
jnp
jae
sti
and
mov
push
ret
dec
mov
add
andb
gs
int
cs
dec
jno
inc
add
out
dec
inc
mov
mov
mov
adc
mov
pop
ss
pushf
aad
adc
mov
mov
into
mov
js
insl
sbb
mov
andb
mov
aas
gs
push
addb
js
in
or
movl
insb
lods
xlat
add
push
lcall
push
jge
and
mov
xchg
pop
sbb
jecxz
inc
push
leave
sub
sbb
rorl
sub
push
sub
in
inc
pushf
shll
xchg
add
mov
push
shlb
gs
mov
mov
dec
push
int3
jg
adc
call
jmp
adc
iret
cld
or
xchg
and
add
jp
mov
test
mov
nop
mov
mov
in
jp
xor
inc
ret
push
ret
pop
sub
pop
xchg
jo
mov
adcl
bound
stc
out
jno
sbb
sbb
scas
stos
push
push
je
fistpl
jno
shll
stos
push
nop
repnz
cmp
int
add
pop
dec
sahf
movsl
push
adc
push
shlb
lret
loop
stos
inc
aad
loope
jb
daa
pop
pop
mov
lods
pop
mov
sbb
loopne
sarb
mov
in
hlt
xor
xchg
loop
stos
mov
push
lea
push
and
nop
and
adc
adc
dec
hlt
cld
into
into
push
ja
sub
movsb
ss
rcrl
add
adc
lock
jne
cwtl
or
lods
test
xchg
shlb
enter
dec
add
add
mov
push
xchg
inc
ds
push
bound
dec
in
cs
jmp
xchg
mov
mov
jge
xor
sbb
inc
xor
loopne
jae
cmpb
pushf
xor
inc
jae
cmc
sub
enter
in
pop
je
lods
sahf
sti
cmp
bound
filds
and
xor
cmpb
fbstp
ja
lods
adc
push
push
pop
iret
sbb
popl
mov
mov
inc
aad
subl
rorb
loop
push
in
mov
pop
xor
leave
insl
mov
sbb
add
loop
adc
lahf
sbb
ja
push
jb
lods
mov
mov
inc
push
cld
inc
hlt
push
mov
pop
jmp
aad
divb
xchg
push
enter
cmpsb
imul
mov
pop
test
add
dec
dec
push
push
cmpsb
mov
loopne
push
dec
adc
lds
dec
sarb
pop
push
or
sbb
cltd
movsl
dec
push
inc
cmp
lea
mov
cmpb
mov
test
add
mov
mov
add
lea
xchg
imul
push
popf
imul
fwait
pushf
xchg
cmp
daa
leave
cmp
xor
js
xchg
popf
pop
push
xor
inc
repnz
dec
inc
stos
aam
loop
int3
or
push
aam
cmp
stos
inc
mov
test
pushf
xchg
dec
loope
lea
gs
add
inc
mov
add
lds
ljmp
bound
jg
daa
mov
mov
and
mov
cwtl
cmp
popa
dec
jno
ret
push
push
xor
sbb
lock
roll
scas
mov
pusha
das
jbe
adc
sbb
addr16
add
movsl
test
push
fsubs
adc
lods
shlb
mov
pop
test
rol
test
mov
das
xor
in
mov
ljmp
cld
sahf
mov
fldl
mov
add
icebp
mov
popa
add
jle
fstpl
dec
jns
inc
jae
or
iret
push
iret
adc
scas
inc
in
in
in
pop
push
or
outsl
lods
and
movsb
dec
adcb
add
lods
incb
push
clc
ja
sarb
outsb
inc
push
icebp
outsl
add
sub
pusha
scas
aad
shlb
mov
loop
aad
or
inc
sbb
push
lea
adc
jmp
inc
orl
hlt
lcall
add
dec
mov
add
jge
mov
xlat
cmp
xor
mov
push
or
lock
xor
add
bound
sbb
movl
push
adc
push
lods
push
das
add
leave
sbb
mov
pop
jb
mov
mov
and
lcall
add
ret
cli
test
or
ret
inc
or
cmpsb
dec
lods
ja
and
mov
push
pop
je
aam
xor
xor
or
inc
arpl
out
shll
shrb
sar
inc
xchg
dec
jo
sub
xor
in
or
imul
cltd
add
enter
sub
xor
sub
dec
sbb
push
lods
add
sub
rolb
cs
hlt
lock
mov
outsl
enter
inc
int3
popf
adcl
adc
sbbb
out
mov
add
and
lods
stos
xor
loope
sub
insb
mov
jb
cmp
inc
inc
mov
or
xchg
pop
test
and
xor
fchs
xor
jo
push
sub
jbe
adc
xor
scas
push
push
stos
mov
in
aam
fistpl
ljmp
lods
push
pop
mov
imul
push
mov
imul
stos
js
inc
das
cwtl
icebp
or
aaa
add
or
xchg
outsb
push
push
dec
insb
icebp
add
xchg
lret
pusha
sbb
xor
mov
roll
add
addl
dec
adc
push
arpl
xchg
popf
mov
gs
xchg
adc
adc
mov
inc
into
mov
adc
sbb
push
scas
stos
and
push
xchg
dec
jl
cld
jne
cwtl
ljmp
or
cltd
push
dec
dec
or
xor
in
je
shrl
cmpsl
dec
cld
push
add
pop
mov
add
adc
gs
out
mov
outsl
addb
pop
adc
loope
pusha
test
and
mov
adc
xchg
mov
out
adc
inc
mov
dec
fdivl
sbb
pop
add
inc
push
add
dec
leave
jno
push
addl
add
cwtl
sahf
popf
mov
mov
mov
mov
in
dec
xchg
adc
addl
fsubl
pop
mov
jns
xor
stos
add
xorl
mov
mov
shll
aad
fdivs
lcall
fldenv
daa
lcall
mov
sub
adc
es
add
dec
push
xor
into
cmpsb
lcall
rcll
adc
mov
test
insb
cmp
add
inc
nop
ret
adc
aaa
ds
pop
nop
and
dec
jecxz
mov
sub
or
mov
sbb
mov
mov
aad
inc
xor
sbb
sbb
sbb
imul
pushl
add
push
add
mov
das
add
sub
sbb
add
mov
std
fildll
ljmp
fidivrs
dec
push
mov
cs
insb
ljmp
add
sbb
cwtl
lea
push
jne
push
and
cwtl
ljmp
addl
add
push
cwtl
in
fld
dec
pushl
and
push
movsb
repz
push
push
mov
insb
push
inc
lock
aas
mov
push
adc
sub
negl
aam
sub
in
xor
and
sbb
pop
pushf
adc
xchg
mov
nop
testb
sahf
lret
adc
lea
push
test
out
inc
xor
addr16
test
insb
movsl
mov
adc
bound
xorb
jge
push
cli
mov
in
cmp
xor
and
xor
cltd
inc
dec
sub
lock
cmp
mov
push
addr16
add
sub
adc
cmp
mov
push
mov
push
rorb
adc
xchg
loop
std
mov
push
xchg
call
adc
repz
inc
mov
in
cmp
std
pop
inc
jo
sti
pop
addl
test
add
xor
sub
push
out
mov
sub
and
pop
loope
dec
push
cld
lock
jbe
pop
dec
mov
xorb
lds
jl
or
in
add
les
pop
iret
or
loop
mov
roll
cmp
pop
mov
sbb
cli
push
push
dec
lcall
and
stc
inc
arpl
addb
aad
cmpsb
dec
inc
xor
popa
adc
push
rorl
test
insl
pop
mov
cmp
mov
inc
dec
mov
jno
sar
jo
test
cmp
hlt
cli
iret
or
rolb
inc
push
insb
shlb
xchg
cmp
std
out
push
xchg
jno
mov
gs
or
push
mov
mov
mov
jno
mov
fdivrl
mov
mov
insl
push
notb
sub
movsl
jnp
sub
mov
mov
xchg
or
mov
push
lret
xchg
cli
aam
mov
shll
movl
push
sbb
cmc
xchg
mov
mov
cmp
xchg
sub
and
orb
mov
test
push
mov
mov
int3
test
enter
jno
or
or
push
cmp
mov
add
shrl
or
mov
nop
jno
hlt
shr
xchg
mov
pop
inc
mov
xor
aas
scas
aam
cmp
cmp
lret
push
stos
imul
xchg
dec
arpl
faddp
mul
imul
xor
pop
addb
mov
and
rol
ss
add
add
outsl
adc
dec
sbb
into
mov
add
aad
xor
out
mov
mov
mov
add
jbe
cmpsl
arpl
lods
scas
cmpsl
add
fs
into
test
roll
inc
inc
lcall
mov
ret
rcrb
daa
push
inc
idivb
push
andl
dec
lcall
std
call
add
mov
add
jle
adc
mov
stos
adc
in
pusha
daa
mov
and
fwait
mov
inc
lahf
dec
adc
cmpl
lock
and
xlat
mov
cld
bound
sarb
inc
push
insb
stos
fwait
inc
mov
lcall
push
mov
stc
push
and
xor
jge
gs
and
into
lds
stc
xchg
push
test
out
add
les
test
jo
sbb
fs
add
cld
pop
mov
cmp
mov
pop
lahf
mov
icebp
andl
scas
testb
mov
fsubrl
mov
jne
mov
jo
rclb
sub
xor
popa
les
cmp
int3
adc
and
mov
adc
or
inc
pop
push
or
lods
mov
push
inc
mov
pop
punpckldq
icebp
xchg
or
je
fdivr
mov
push
mov
or
lods
mov
jne
popa
mov
pop
mov
and
sbb
cmp
enter
aad
ja
xor
cmp
loope
xor
les
inc
push
iret
add
call
out
imul
and
dec
adc
inc
add
dec
mov
mov
mov
xor
aad
inc
or
sub
add
add
sbb
dec
inc
mov
mov
or
add
sbb
ja
sbb
inc
sbb
nop
jns
add
adcb
pop
shll
call
push
nop
ret
dec
scas
push
rcl
xchg
add
sub
dec
popf
ficoml
aam
lcallw
inc
mov
xor
cmp
lret
divl
aaa
inc
pop
xor
dec
lea
or
movsl
push
shlb
pop
lds
hlt
in
gs
cmpsb
jp
loopne
mov
jmp
pop
xor
andl
xor
bound
loop
add
jecxz
gs
loopne
shll
sbb
imul
lods
xor
push
hlt
sbbl
mov
in
repz
xor
mov
adc
shll
call
in
adc
or
mov
rclb
push
aaa
nop
sub
add
int3
sub
ds
ret
push
rcl
cltd
imul
xor
adc
aam
dec
scas
out
adc
test
or
dec
std
inc
adc
inc
subl
mov
rclb
shr
adc
pusha
inc
xor
int
xor
sbb
mov
sub
lret
sbb
xlat
xor
jbe
bound
sub
dec
push
cmp
xor
dec
mov
adc
out
xor
mov
push
daa
or
or
inc
test
sbb
int3
loope
jecxz
push
js
xchg
push
cld
inc
icebp
jbe
loopne
xchg
jns
mov
in
fcomip
xchg
push
add
loope
jb
xor
mov
shlb
pop
pushf
orb
loopne
cmp
xlat
and
stos
into
mov
test
in
je
test
xor
mov
lods
or
add
stos
adc
mov
mov
out
mov
or
sub
dec
jno
stos
out
cld
inc
add
cld
cmp
inc
mov
add
pminsw
xor
gs
out
fstl
add
hlt
or
inc
adc
mov
push
lods
mov
mov
mov
adc
mov
push
add
and
sbb
jp
push
sbbb
cmp
mov
mov
test
mov
xchg
xchg
test
push
mov
lea
popa
dec
inc
testb
adc
test
xchg
fisubrl
rcll
inc
orl
mov
rol
mov
lea
rcl
or
dec
pop
cmp
push
in
lock
cld
adc
fs
push
fsubrs
fadds
push
inc
add
notb
mov
xchg
adcb
je
push
ss
sbb
push
stos
push
sbb
int3
add
sbb
divl
sub
add
and
xor
push
dec
into
js
mov
and
mov
fsts
push
jo
mov
scas
gs
cmpsb
test
add
xchg
jmp
xchg
subl
add
ret
iret
dec
pusha
ret
sub
aad
pop
shrb
adc
cwtl
mov
or
es
add
inc
adc
mov
mov
cld
fwait
inc
push
mov
add
xchg
pop
into
mov
decl
push
and
insb
cmpb
icebp
lea
push
jecxz
xor
xor
and
mov
pop
js
bound
fs
add
xchg
gs
inc
push
in
popa
fisubl
add
mov
rcll
mov
xchg
pop
pop
cmc
addl
jae
into
out
js
lret
pop
in
dec
add
push
push
xlat
lret
inc
push
mov
cmp
pop
stos
pop
popa
mov
adc
scas
cmp
popa
mov
inc
push
lret
in
add
pop
xchg
xor
xchg
sbb
xor
in
or
xor
adc
test
dec
sub
cld
jle
sub
dec
xor
mov
mulb
add
mov
jl
push
jb
cli
dec
repz
cmp
rorl
insl
fsubrs
cli
loop
daa
mov
fnstsw
out
ret
sbb
jo
and
jnp
push
rclb
xor
jae
xor
or
dec
mov
dec
iret
into
xlat
xchg
imul
pop
nop
loopne
sbb
inc
push
mov
shrl
add
xchg
jecxz
imul
mov
push
add
jno
lods
xchg
mov
inc
aam
push
mov
sub
andb
xchg
aam
adc
iret
into
sbb
inc
cmp
mov
dec
xor
adc
outsl
xchg
aaa
add
repnz
fwait
mov
or
andb
push
insl
mov
sub
gs
nop
mov
cmc
out
rcll
popa
dec
in
dec
cmp
or
adcb
out
add
cld
aas
mov
pop
add
push
jno
sbb
or
jmp
into
pop
test
icebp
dec
inc
adc
inc
sbb
add
mov
dec
jne
xchg
jae
mov
lds
decb
xor
or
shlb
out
adc
ja
inc
mov
adc
jo
jne
popa
mov
aad
arpl
sub
jp
lcall
pop
xchg
stos
mov
jae
jp
ja
inc
add
mov
sub
xchg
push
shl
push
fistps
imul
sbb
hlt
push
test
or
decb
sub
ret
xor
xor
sub
lahf
and
test
aad
xor
xchg
sub
push
movsb
sub
jmp
xchg
adc
xor
leave
pop
xchg
add
movsb
les
js
cmp
push
bound
xchg
pop
loope
sarl
clc
or
add
pop
hlt
pop
push
jp
or
mov
jbe
push
inc
lods
cld
popf
add
mov
push
xchg
xchg
add
jne
sub
pushf
push
inc
bound
mov
adc
adc
mov
mov
bound
xor
roll
push
sub
sarb
push
add
inc
nop
xchg
dec
pop
add
adc
daa
adc
arpl
dec
cmp
sub
leave
adc
mov
roll
or
das
mov
and
push
rorb
jb
push
loopne
mov
aam
insl
sub
and
ja
xlat
push
adc
or
into
fwait
rorl
or
push
icebp
call
mov
subb
insl
inc
les
ljmp
mov
or
dec
jb
mov
mov
adc
aas
iret
cld
push
sub
xor
push
test
out
xor
cmpsb
in
es
push
hlt
sub
movsb
push
mov
clc
movsl
out
in
push
xor
adc
sub
add
cmp
cmp
lcall
aam
and
loopne
cld
push
scas
or
dec
adc
adc
sub
sub
jmp
xchg
adc
icebp
dec
xor
andl
mov
imull
dec
rclb
adc
or
bound
pop
lea
or
test
ficoms
mov
inc
mov
aam
mov
mov
outsl
jno
cmpsb
pusha
sbb
cmc
jo
adc
push
jmp
cmp
bound
bound
addr16
and
popl
sbb
ljmp
push
and
pop
or
mov
ficoms
enter
jp
cmpsl
push
mov
and
mov
js
sbb
dec
cmp
scas
divl
mov
hlt
roll
fbstp
add
adc
outsl
xor
lcall
movsl
push
rolb
stos
xchg
lock
les
push
hlt
pop
popf
xlat
or
in
mov
or
add
cmpsb
mov
lock
push
cmpsb
or
mov
pminub
inc
push
mov
inc
jbe
hlt
mov
icebp
insl
mul
arpl
sbb
inc
jae
repnz
dec
out
xlat
sub
dec
in
imul
dec
adc
cmp
adc
hlt
pop
and
ss
mov
mov
adc
cwtl
xchg
aas
in
inc
insb
push
add
xchg
dec
insb
xlat
cmp
mov
loopne
sbb
sbb
add
cld
mov
fisubrl
mov
xlat
mov
into
nop
mov
lods
into
push
add
and
inc
scas
in
mov
shlb
out
jb
ja
push
in
outsb
dec
add
or
mov
mov
inc
mov
xor
mov
hlt
addb
or
or
pushf
push
and
inc
les
lods
int3
cmp
adc
les
ljmp
hlt
mov
mov
das
jb
cltd
fldenv
lods
mov
daa
mov
fisubl
inc
or
cld
jno
stos
add
ret
clc
adc
xor
andb
mov
jno
or
ljmp
cwtl
enter
frstor
cld
sbb
push
adc
lea
xchg
test
push
int
dec
lahf
cmpsl
fadds
adcl
and
mov
gs
xorl
and
lea
push
jno
pop
notl
push
fs
mov
sub
mov
popf
sbb
pop
xor
rcrb
movsb
ror
aad
xor
or
bound
sbb
pop
pushf
mov
mov
rcrl
add
or
mov
mov
sahf
dec
daa
inc
mov
add
xor
addb
sub
mov
mov
sbb
inc
test
push
xor
sub
xorl
and
jno
cmp
adc
out
call
push
push
mov
pop
mov
push
inc
xchg
mov
dec
and
push
shrb
adc
fimull
push
daa
sub
flds
or
loope
xor
mov
rcrb
call
aam
inc
call
lahf
sbb
or
mov
cmp
lock
cmp
test
rorl
ss
mov
clc
add
nop
xor
dec
jp
dec
stos
inc
inc
ret
aam
fwait
mov
jb
jb
jge
pop
loopne
inc
xchg
xchg
into
xor
aad
sbb
push
xchg
add
dec
add
iret
inc
inc
cmpsb
add
sbb
mov
gs
mov
aad
mov
imul
mov
movsb
jno
mov
rolb
xlat
mov
push
test
mov
add
out
stos
or
sub
push
sbbb
lds
xor
mov
lods
pop
lea
stos
push
dec
lcall
xor
fimull
cwtl
jne
scas
pop
scas
and
scas
jns
pop
xor
lock
sub
stc
bound
iret
es
subb
lods
or
test
xor
inc
lock
mov
pushl
xor
in
pop
rcl
mov
dec
ss
xlat
sbb
popa
mov
cmp
out
push
sub
sub
pop
add
push
mov
push
mov
adc
mov
push
frstor
aam
ljmp
cmp
mov
push
mov
adc
mov
add
rclb
outsl
bound
test
and
ret
in
inc
lods
loope
inc
pop
mov
cmp
jne
cmp
sbb
pop
pop
sub
imul
adc
inc
xor
iret
stos
pop
add
rolb
and
outsl
pop
and
jno
dec
mov
inc
lahf
push
shlb
and
adc
inc
or
jb
inc
pop
cwtl
mov
xchg
add
mov
xchg
in
sbb
push
std
das
mov
sbb
adc
add
add
std
push
mov
negl
push
push
inc
and
cli
cs
mov
repnz
pushf
or
add
and
imul
sar
add
in
push
int
sub
mov
sub
push
aam
stos
sbb
cmp
or
cmp
sub
jb
in
sbb
je
andb
sbb
insb
andb
cmp
inc
fbstp
dec
dec
imul
xor
decl
and
add
popa
mov
mov
pop
je
or
xor
cwtl
les
jnp
push
daa
js
inc
cwtl
push
mov
cmp
aad
mov
and
pusha
cltd
notb
test
arpl
sbb
mov
inc
shr
lcall
push
xor
out
adc
cmp
dec
sub
sbb
cmpsb
in
popa
loope
adc
lock
add
adc
adc
mov
mov
pop
jne
pop
das
lcall
les
sub
add
cmp
cmp
mov
xchg
cmpsb
std
scas
fsubs
pop
adc
pop
or
mov
jp
mov
fnstsw
pop
xchg
cmp
cs
or
or
lds
cmp
push
out
xchg
add
add
mov
inc
das
mov
rorb
insb
pop
mov
mov
in
ljmp
push
add
or
movsl
push
push
xchg
bound
nop
jo
dec
push
aam
rclb
push
lret
push
lds
mov
add
test
xchg
ss
xchg
leave
inc
pop
jae
orb
cmp
add
xor
rcll
orb
dec
es
xor
into
push
sub
stos
lods
leave
les
mov
pop
es
rolb
cmp
adc
push
sbb
mov
xchg
add
sbb
bound
dec
movsl
aas
arpl
mov
cmp
pop
mov
cmp
shlb
stos
mov
jns
adc
push
cmova
xlat
dec
daa
aam
mov
adc
dec
cmp
mov
out
fiadds
add
sub
add
sub
das
mov
jge
mov
pop
sub
shrb
pop
lcall
test
lahf
pop
jo
test
test
test
inc
or
scas
aaa
icebp
aam
push
add
xor
jns
jl
cs
stos
xor
cld
adc
fs
adc
or
pop
lds
stos
popa
lock
icebp
and
add
xor
and
push
push
ljmp
push
daa
xchg
sub
cmp
xchg
inc
adcb
push
xorb
jo
xor
dec
jno
sub
movsl
push
cs
add
js
adc
addl
je
daa
lea
mov
adcl
mov
mov
es
sub
push
dec
or
xchg
mov
sub
push
adc
mov
xchg
int3
fld
out
adc
aam
cltd
popa
xor
sbb
aam
into
push
mov
stos
add
hlt
xchg
mov
insl
push
sub
pop
jecxz
dec
or
xchg
and
cmove
jno
loopne
xchg
out
test
popf
add
pop
cld
mov
pushf
daa
adc
cld
sub
in
test
mov
push
fdivs
sub
add
cmpsb
scas
push
or
inc
cmp
jno
push
xor
adc
test
or
inc
xor
fdivr
mov
push
adc
jae
sbb
push
push
push
or
je
addb
test
aam
std
cmp
cs
stos
dec
xorl
adc
jno
jae
inc
scas
push
aaa
dec
shrb
adc
xor
dec
shll
nop
lahf
inc
push
adc
in
test
mov
xor
lcall
rol
add
mov
push
divl
sahf
adc
jo
in
smsw
mov
push
fwait
or
jb
add
fsubl
add
xor
sahf
add
xchg
and
add
enter
ret
or
pop
pop
mov
ss
push
xor
pop
stc
xor
push
xor
rolb
inc
rcrb
or
inc
add
popa
xor
test
xchg
fisubrl
or
out
push
repz
inc
sbb
jmp
sub
or
xor
add
push
pop
mov
push
lods
ret
push
mov
adcb
push
cmp
inc
pop
lret
ret
rol
push
push
dec
in
jo
jo
inc
jnp
adc
push
shrl
ds
add
hlt
dec
sub
xor
insl
sub
adc
push
test
push
mov
push
adc
mov
inc
pusha
or
repz
xor
push
cs
pop
shll
sbb
inc
cld
clc
adc
or
inc
push
lcall
pop
sub
lret
rolb
adc
or
cmpsb
clc
inc
mov
ja
mov
push
add
cmpb
shrl
push
lcall
inc
cltd
push
mov
mov
xchg
movsb
inc
test
aad
mov
xor
push
push
lods
or
add
ja
es
or
sbb
loopne
inc
es
xor
inc
push
push
jno
int3
cld
mov
and
xchg
arpl
mov
push
mov
dec
cmpsb
ret
leave
loopne
push
cmp
sub
aad
hlt
rcrb
js
sbb
adc
jno
inc
cs
push
sbb
dec
xor
aas
jae
rolb
adc
test
fmuls
xor
cld
mov
cmpb
jecxz
imul
push
push
push
add
mov
mov
push
inc
add
mov
sub
clc
shlb
pop
adc
inc
sub
incl
iretw
mov
dec
mov
std
jg
add
pusha
aas
pop
mov
mov
mov
adc
mov
loopne
push
push
add
js
hlt
shrb
icebp
pop
sarb
lods
xorb
adc
adc
addb
jbe
inc
mov
jo
cmc
movsl
xlat
dec
pop
adc
mov
mov
cmp
ret
andl
pop
aad
fidivrl
inc
cs
jle
lret
loope
jo
insl
stos
loope
sarl
add
add
sub
add
ljmp
aad
stos
mov
cld
push
aaa
mov
sub
fdivs
adc
pop
mov
pop
push
pop
mov
cmpl
leave
inc
sub
sbb
ljmp
mov
insb
adc
out
and
push
popa
hlt
aaa
xor
jnp
mov
daa
push
mov
mov
xchg
xor
and
sti
mov
or
or
mov
hlt
rorb
mov
xchg
test
pop
mov
sub
or
stos
dec
shll
add
pop
adc
adc
lods
xor
jns
in
dec
xor
rcl
mov
push
jae
inc
out
mov
ljmp
add
xchg
push
mov
or
push
mov
add
or
nop
jle
adc
ret
xor
adc
jo
clc
jne
ret
sbbb
mov
push
adc
mov
or
jp
loopne
sbb
out
mov
jecxz
lock
shlb
xchg
sti
xchg
lods
addl
push
add
xor
cmp
xchg
fadds
rorl
add
pop
mov
inc
nop
subb
hlt
inc
mov
push
push
sub
mov
icebp
fcmovnbe
push
scas
xor
or
adcb
int
loop
test
rclb
loopne
test
mov
call
xchg
out
inc
pop
mov
or
adc
sub
pop
sub
gs
leave
mov
jno
or
xor
sub
lods
mov
dec
pop
popa
addr16
subb
cmpb
cwtl
pop
inc
in
push
mov
addl
sub
sbb
adc
inc
jno
iret
mov
pop
jnp
add
mov
sbb
mov
inc
es
jbe
insb
icebp
cltd
and
lcall
shrb
push
in
movsl
sub
xor
inc
jne
push
aad
pop
adc
leave
adc
loopne
out
loope
inc
add
mov
addr16
and
test
jnp
imul
lea
sbb
add
pop
xchg
int
in
inc
and
adc
mov
into
fisubrl
sub
dec
scas
shll
or
add
or
inc
mov
dec
movsl
push
push
mov
out
addl
push
sub
cld
iret
cmpsb
sub
xchg
xchg
repz
pushf
inc
pushf
inc
push
push
test
adc
push
mov
mov
test
ret
push
pop
lret
push
or
or
popa
lcall
mov
push
mov
ljmp
dec
adc
jg
or
sub
mov
adc
fiadds
mov
pop
ficoml
outsl
add
or
adc
inc
repz
add
cmp
push
inc
sbb
lret
dec
mov
sub
sbb
pop
adc
ret
cmp
cmpb
cwtl
out
jl
aad
mov
imull
rorl
dec
pop
sbb
dec
push
mov
scas
push
sbb
xor
xchg
dec
add
cmc
dec
xchg
ja
inc
cmp
and
xchg
or
add
ret
addb
stc
int3
push
sbb
mov
xor
mov
xor
adc
and
or
shlb
pop
sarb
lods
push
jp
sub
and
mov
ja
push
push
add
fwait
mov
test
or
stos
pusha
inc
in
in
jnp
adc
inc
gs
mov
leave
sbb
adc
imul
cwtl
mov
cmp
lods
cmp
or
call
add
gs
insb
test
xor
test
jno
mov
mov
push
aam
mov
xchg
add
pop
popa
sti
sbb
sbb
pop
and
jnp
test
pop
adcb
cmc
pop
fdivrl
mov
mov
int3
mov
adc
cmp
push
adcl
inc
inc
loope
xchg
push
cltd
add
add
and
xchg
sub
ja
jl
add
xor
mov
in
and
fucomp
push
das
test
push
add
fisttps
push
add
sarb
outsb
pop
cmpb
xchg
sbb
mov
pop
push
xchg
fcom
jb
and
mov
adc
jmp
nop
in
cmp
dec
push
inc
mov
inc
sti
sub
inc
push
push
daa
or
fstps
aas
les
dec
loopne
and
add
fimuls
add
stos
xchg
or
jbe
or
push
cs
fisubs
dec
cmp
jo
test
xchg
mov
shrb
mov
daa
mov
lds
mov
je
dec
je
sbb
lods
enter
mov
add
shlb
stos
sbb
loopne
icebp
mov
loopne
popa
stos
push
ret
ret
pop
add
loop
or
xchg
or
les
mov
push
push
or
xor
arpl
outsl
ret
mov
mov
mov
push
lret
add
insl
sahf
out
push
mov
inc
imul
mov
xchg
pop
popa
adc
ja
push
inc
das
mov
daa
mov
xchg
fisubrl
lea
add
xor
xchg
sbb
push
je
jno
das
insl
aad
adc
lods
shlb
pop
xchg
push
shll
cmovp
sub
pop
and
xchg
mov
sub
nop
mov
cmp
pop
pop
aam
jge
out
cmpps
jae
or
data16
mov
mov
popa
pop
add
imul
mov
nop
sub
push
push
inc
stos
negb
sub
mov
inc
push
ret
test
mov
ret
push
daa
mov
movsb
adc
sub
or
dec
mov
jno
mov
mov
in
jno
or
sub
push
rol
lock
cltd
ja
cld
or
cmp
insb
repz
jae
aad
cmpl
xchg
ljmp
loope
je
xchg
xchg
bound
enter
xchg
cmp
inc
dec
mov
outsb
push
fwait
mov
pusha
add
fcmovb
frstor
jno
inc
cltd
fimuls
gs
mov
mov
adc
jb
jo
adc
loopne
push
lea
into
xor
xor
mov
mov
sti
adc
push
xchg
adc
call
pop
push
add
int
bound
sub
sub
fnsave
fstpl
mov
mov
hlt
add
cmp
fcoml
mov
cld
lret
pop
imul
aaa
mov
and
pop
loopne
and
test
lea
sbb
xor
pushf
mov
adc
push
dec
or
loop
jae
lcall
mov
test
inc
xor
inc
call
into
mov
or
push
pop
ret
xorl
pushf
test
mov
cmp
xor
insl
add
and
rolb
and
js
ret
mov
jo
inc
cwtl
mov
inc
dec
ret
push
mov
shrl
mov
dec
or
xor
lds
push
xchg
xor
stos
pushf
pop
xor
lret
lcall
xor
cltd
sbb
inc
dec
jo
jnp
push
sub
or
mov
push
ds
scas
jae
bound
int
stos
and
push
dec
xor
mov
popf
ret
push
sbb
in
push
inc
je
cltd
add
mov
xorb
adc
xor
insl
push
repz
pushf
outsl
adc
loopne
std
add
xor
mov
sbb
decl
loopne
test
cli
shlb
dec
push
mov
cmp
adc
add
sub
mov
inc
pop
test
inc
test
jle
dec
pop
daa
call
mov
add
ret
mov
scas
mov
test
test
loopne
aaa
sbb
push
mov
add
push
dec
adc
bound
and
mov
sub
dec
mov
sahf
or
sbb
ret
xchg
stos
cld
and
add
pop
cld
sub
xor
call
movl
aam
cmp
dec
xor
fcoml
cmpsl
int
iret
sub
lods
or
aaa
icebp
cmp
mov
rolb
mov
add
mov
shrd
outsl
inc
inc
or
xchg
dec
cmpsl
pop
arpl
pop
mov
ss
repz
cld
mov
fiaddl
add
inc
fldt
mov
jmp
stos
cmc
fnsave
lcall
xorb
pop
aam
sbb
push
pop
push
gs
cwtl
push
nop
sub
add
xor
dec
movsb
rclb
movsl
and
cmpsl
sbb
out
push
mov
mov
xchg
hlt
cmpsb
dec
push
nop
mov
mov
in
add
inc
add
mov
inc
mov
lods
pop
subl
sub
dec
add
pop
nop
gs
adcl
jnp
adcb
mov
sbb
mov
sub
sbb
test
and
movb
pop
fimuls
sub
ljmp
rcrl
icebp
incl
cmp
mov
jne
dec
je
jg
int3
ljmp
outsl
sbb
jo
add
mov
sub
testb
pop
jb
inc
pop
outsb
push
inc
fcomi
cmp
jne
pop
adc
loopne
ja
aaa
fs
arpl
repnz
inc
movl
pop
xor
dec
adc
mov
mov
dec
push
pop
mulb
sbbb
push
scas
lods
pushf
daa
xorb
pop
adc
in
and
xchg
pop
mov
or
mov
cmp
movsl
or
dec
frstor
loopne
stos
jl
mov
dec
cmpsl
movsb
ficomps
lock
mov
dec
inc
mov
out
cli
test
rolb
dec
add
mov
sbb
jne
dec
loopne
mov
lock
and
dec
cli
popa
test
inc
arpl
pop
inc
or
test
bound
inc
xchg
js
inc
pop
sbb
add
lcall
jp
adc
jnp
mov
jg,pt
mov
cmc
cmc
sahf
mov
insb
sub
call
pop
adc
mov
cmc
or
cwtl
andl
inc
movsl
mov
stos
or
lods
sbbb
and
push
fnstenv
mov
mov
push
shufps
mov
or
cmc
mov
cwtl
popa
jge
iret
xor
mov
inc
mov
repnz
mov
es
ljmp
testl
scas
jmp
inc
cld
lcall
sub
shrb
mov
addl
inc
int
test
pop
outsl
add
popa
cld
jo
push
cmp
push
adc
cs
xor
adc
mov
or
jbe
add
mov
lods
lcall
adc
jnp
adc
sbb
aaa
roll
cld
jnp
adc
mov
mov
hlt
sbb
arpl
icebp
cmpsb
dec
sub
lcall
inc
arpl
mov
inc
orb
add
cwtl
lock
in
ss
push
movlps
data16
jg
push
movsb
pusha
test
xor
push
sbb
mov
or
insb
inc
aaa
push
mov
test
lds
xor
popf
inc
lret
cmp
out
lcall
fcoml
and
rcll
xor
mov
xchg
cmp
mov
orb
pop
shrb
push
xchg
test
push
pop
ret
sub
jno
lcall
dec
inc
pop
and
xor
pushf
inc
dec
mov
inc
aad
mov
cmp
lods
mov
add
fxch
mov
bound
lahf
and
add
push
fadd
nop
jg
sbbb
and
ret
add
lock
or
or
adc
rorl
adc
push
or
adc
mov
xchg
lret
cmp
int3
inc
push
adcl
mov
dec
inc
mov
or
mov
lret
pop
aad
in
push
js
push
out
mov
loop
inc
jno
jle
xlat
mov
aam
aas
push
out
pop
xchg
test
xor
pop
xchg
popa
sarl
stc
nop
pop
add
out
shrb
mov
aad
push
xor
push
push
or
mov
cmc
in
cld
data16
sahf
push
dec
cmp
in
or
xor
xchg
inc
sti
push
or
xor
push
enter
call
pop
test
in
cli
mov
je
lcall
lds
inc
add
xchg
cmp
jno
pop
sbb
mov
bound
mov
push
dec
popf
nop
sub
dec
mov
or
shrl
imul
jl
mov
in
cmovle
mov
adc
add
jno
ret
mov
scas
hlt
dec
push
xor
xor
stc
push
push
push
inc
pop
mov
stos
add
jns
mov
add
inc
add
mov
stos
mov
scas
inc
lods
or
rcr
dec
int
add
push
cmp
push
add
mov
xchg
sbb
and
sbb
out
shll
decb
int
mov
xchg
mov
sbb
and
arpl
jecxz
push
push
jmp
sbb
enter
dec
lds
xor
nop
push
xchg
out
cmc
cmp
mov
xchg
insl
ret
push
cmp
push
dec
adc
jmp
pop
jo
jmp
xor
pop
add
mov
or
xor
out
pop
adc
int
add
cmp
mov
lods
add
cmp
movsb
mov
rcll
popf
sub
mov
sbb
jno
sbb
hlt
stc
jno
push
insl
push
xchg
test
push
fld
and
aam
movsl
mov
jno
adc
std
sbb
inc
test
hlt
inc
mov
jl
add
sub
pop
pop
fs
dec
add
push
and
test
cmp
test
xchg
cli
mov
scas
mov
in
mov
inc
add
adc
pop
fidivs
mov
mov
push
xchg
btr
setg
leave
mov
rolb
cmp
in
inc
shl
mov
rcrb
add
xchg
sbb
cld
ret
jnp
mov
and
sub
or
push
and
stos
xor
xlat
fcomps
xchg
push
mov
out
mov
out
adc
add
lcall
sti
mov
xchg
push
popa
jecxz
xchg
xchg
in
jbe
pop
xor
fs
sub
popa
pop
shll
rclb
add
sub
and
dec
cld
sbb
loop
lahf
push
mov
mov
push
cmp
hlt
lcall
push
shlb
inc
mov
xchg
test
movsb
jno
adc
mov
into
addr16
dec
imul
test
xor
test
push
and
aaa
or
inc
sbb
leave
rcl
aad
into
pop
mov
push
ror
adc
inc
mov
pop
stc
adc
xchg
stos
xor
mov
cmp
stos
inc
sti
and
adc
mov
sub
pop
scas
andb
push
or
test
and
mov
pop
orl
or
mov
cmpsl
iret
in
dec
stos
out
inc
adc
in
fs
icebp
push
add
dec
xchg
popa
mov
xor
push
shll
dec
insb
mov
rcrb
dec
hlt
shrl
daa
scas
jo
push
sbb
push
lds
sbb
fcmovb
xorl
les
shll
inc
into
add
stos
jnp
jl
or
dec
mov
add
cltd
dec
pop
mov
cwtl
sbb
nop
sub
bound
mov
into
ficoml
push
lcall
sbbl
push
sub
xor
lds
sub
icebp
sub
ja
xor
mov
cmc
movsb
mov
dec
adc
call
dec
adc
push
iret
in
loopne
inc
add
inc
sub
fisubrs
ficoml
insb
push
lcall
test
and
into
popa
adc
fistpll
mov
add
add
ja
or
xor
push
aas
aaa
sub
jge
jg
std
jnp
shl
repz
leave
cli
mov
addr16
push
sbb
or
cmp
es
popf
jp
fidivrs
scas
add
push
push
mov
push
cmpsb
andl
es
pop
inc
sti
sbb
loope
jp
arpl
test
fildl
xchg
pop
dec
int3
push
sub
push
push
fmuls
inc
adc
xor
push
dec
jb
xlat
dec
imul
pop
and
push
lods
pop
dec
add
or
adcl
insl
bound
or
test
test
test
or
or
push
sbb
scas
bound
sub
test
pop
gs
sahf
mov
ljmp
out
inc
mov
lock
push
sub
xchg
inc
jae
sarl
adc
xor
fsubs
push
roll
lods
or
jb
lds
jnp
sub
gs
adc
mov
sahf
cmp
cmc
xorb
inc
xor
cmp
mov
shl
xor
cmp
ret
fisubrs
negl
mov
push
or
lahf
mov
in
call
push
jge
and
fwait
add
xor
movsl
xchg
mov
push
clc
dec
into
dec
fsubp
call
jno
and
aad
fmul
and
mov
jno
add
or
pop
xchg
sub
es
add
or
xor
repnz
pop
push
and
nop
mov
scas
push
or
push
movsl
cwtl
ficoms
jae
xor
loop
dec
pop
movsb
movsl
or
hlt
pop
arpl
clc
fmuls
inc
xchg
xchg
push
sarb
sub
inc
ret
mov
dec
fcomp
inc
out
sub
into
xor
sub
je
adc
jo
mov
mov
inc
ja
daa
mov
test
aas
subb
mov
mov
lods
ja
lea
rolb
dec
push
pusha
jp
mov
ret
into
and
adc
adc
iret
sbb
test
or
or
mov
test
push
mov
pop
adc
push
xor
mov
jmp
lods
loope
push
mov
add
pop
push
mov
mov
add
bound
sbb
mov
sbb
add
cmp
aam
inc
scas
sub
clc
dec
iret
mov
pop
daa
ret
rorb
mov
data16
test
ds
mov
sbb
dec
outsl
push
insl
aam
dec
inc
inc
sbb
ret
roll
add
sub
mov
lock
hlt
loop
mov
hlt
mov
fimull
shrl
insb
push
lcall
xorl
mov
add
xchg
push
test
add
ljmp
lock
dec
jb
clc
iret
arpl
rcll
rcrl
stc
enter
push
sub
outsl
andnps
add
cmp
mov
pop
pop
cmpsb
and
xor
scas
insl
inc
aaa
xchg
jns
xchg
and
jb
lds
stos
les
cltd
dec
loope
insl
inc
mov
or
ret
test
sub
mov
sbb
inc
daa
mov
or
cmc
sbb
push
ror
push
in
inc
mov
stos
push
cmc
jbe
sub
adc
dec
dec
and
adc
dec
or
sbb
cld
pop
cwtl
mov
push
insl
inc
sbb
push
mov
mov
shlw
scas
ret
cs
inc
add
es
or
fdivr
cs
loopne
push
jg
lcall
push
mov
inc
shl
and
lods
add
dec
scas
mov
pop
inc
loop
pop
xchg
imul
adc
or
jmp
and
test
xchg
and
aas
in
push
add
mov
call
mov
or
pusha
ret
xchg
dec
pop
sbb
cmp
movsb
inc
mov
lea
dec
cmp
test
adc
push
addr16
pop
cmp
or
cmp
dec
add
adc
push
mov
in
aad
mov
ds
mov
xchg
loopne
inc
daa
icebp
push
jge
test
insb
daa
daa
cmp
mov
mov
aam
rorb
mov
adc
pop
daa
cli
das
adc
stos
sti
inc
sbbb
and
or
ss
icebp
and
push
push
sti
js
sidtl
flds
fucomip
xor
lds
les
pop
sarb
push
xor
dec
push
jl
pop
sub
daa
cmc
roll
push
gs
rorb
adc
xchg
push
and
inc
push
xor
sub
icebp
cmp
and
loop
mov
adc
loopne
pop
dec
pop
dec
mov
mov
jge
mov
cltd
ds
lcall
into
xor
mov
push
pop
fistpl
mov
sub
or
sbb
or
sub
subl
sarl
xchg
inc
icebp
aad
push
scas
push
idiv
es
mov
adcb
add
push
aam
pop
out
jne
push
sbb
push
mov
scas
pop
add
pop
inc
xor
pop
out
icebp
cmp
jecxz
add
cmp
sbb
push
mov
es
hlt
lods
and
push
sub
xlat
movsl
call
mov
pop
xlat
inc
daa
in
icebp
push
movsb
pop
fsubr
adc
sub
xchg
rdmsr
inc
adc
andb
test
gs
movsl
and
les
aaa
ror
adc
jnp
aad
aam
add
in
xor
xor
inc
lock
cmp
jg
faddl
mov
xor
int
cwtl
gs
fildl
add
outsb
inc
rol
notl
push
jl
outsb
push
sbb
repnz
push
lea
pop
in
cmp
into
shrb
pop
ljmp
aas
sbb
mov
push
lret
adc
mov
incl
sarl
jl
dec
cmpsl
cs
ret
aaa
in
ss
loopne
stc
or
add
in
mov
shll
or
int3
adc
pop
jne
fs
mov
into
push
mov
adcl
jp
fnstenv
mov
sbb
or
mov
call
popf
addl
pop
in
inc
push
add
xor
scas
and
sbb
adc
fmul
and
push
hlt
negb
aad
dec
add
sub
add
add
xor
dec
testb
push
sub
sbbb
mov
shr
clc
std
cli
xor
add
and
jne
mov
cli
mov
arpl
dec
shrl
push
push
mov
imul
add
pop
mov
sar
mov
jno
or
inc
into
out
jo
pop
popf
jb
jb
and
xor
sbb
js
sub
add
inc
roll
push
and
jg
adc
jle
and
jmp
jle
mov
cwtl
xchg
and
lcall
and
jg
std
aaa
mov
cltd
das
and
dec
es
out
out
cmc
out
inc
xorb
xor
or
mov
jb
dec
mov
jb
sub
push
mov
out
enter
cmp
orl
out
or
xor
daa
mov
cmp
or
lahf
add
pop
cmp
sbb
add
es
xchg
out
mov
addr16
mov
loop
mov
call
pop
addr16
in
jns
push
loopne
jae
mov
imul
mov
xorl
fistpll
adc
and
sbb
cwtl
jnp
fiadds
add
push
sahf
das
xor
jmp
jle
and
push
inc
push
js
sub
and
mov
xchg
icebp
sub
or
pop
popa
and
std
out
faddl
xor
pop
lret
pop
cli
in
std
into
mov
jl
add
sub
adc
sub
cmpsb
and
pop
divl
add
inc
and
cmp
cmp
jge
inc
pop
ljmp
push
cld
mov
mov
push
adc
jae
daa
mov
cmp
js
jns
add
push
mov
outsb
adc
mov
loopw
xlat
and
std
out
add
inc
xor
out
popa
out
xchg
and
loope
outsl
mov
adc
mov
inc
mov
cmp
or
dec
inc
out
roll
pop
ret
jge
fsubl
and
divb
shrb
fistpll
push
mov
stos
rorl
add
loop
sbb
sti
and
or
out
fdivrl
imul
in
aaa
adc
push
jmp
inc
and
into
mov
inc
xchg
push
ror
ja
ja
gs
in
sbb
pop
lods
mov
dec
push
clc
xchg
and
jnp
ss
or
repz
mov
push
xchg
data16
jp
cmp
jg
jb
jne
mov
clc
out
cld
rol
lods
mov
sbb
and
sbb
fisubrs
stos
popf
jg
cmp
sbb
push
lret
add
insb
dec
pop
scas
inc
xchg
in
mov
pop
mov
and
jne
int3
lds
cmp
lret
test
rcrl
mov
lock
sbb
or
adcb
push
pop
sub
decb
jge
add
sarl
pusha
sarb
outsl
and
jmp
out
sbb
inc
lret
lods
cmp
mov
or
aad
enter
and
aas
ret
sub
or
rolb
fs
cmp
jecxz
mov
pop
mov
adc
jbe
iret
inc
push
iret
clc
adc
xchg
xchg
cld
push
arpl
jnp
clc
out
jecxz
in
out
xchg
out
test
jg
jle
movsl
xor
and
jl
xor
adc
lret
lahf
icebp
ja
mov
or
mov
jae
stos
daa
pop
jo
filds
xchg
jns
jae
push
mov
cmp
jnp
pop
push
stos
jo
in
sbb
lcall
out
sbb
aas
mov
leave
fdivrl
clc
pop
xor
fwait
cmpsl
mov
mov
jmp
subb
ret
inc
sub
shl
push
std
add
dec
pusha
test
repnz
sti
cs
xchg
cli
scas
enter
adc
cmp
cltd
dec
mov
enter
jb
cmp
mov
sbb
arpl
jne
loope
outsl
out
outsl
dec
dec
sub
adc
fistps
mov
mov
nop
pop
adc
js
sub
and
in
fists
lods
out
or
push
adc
loopne
ficomps
xchg
insl
mov
fadds
dec
movsb
xor
mov
inc
outsl
push
mov
mov
aam
and
xor
and
loopne
push
out
dec
clc
shlb
jecxz
mov
movsb
cmp
jle
incb
testl
insb
lahf
or
xchg
fidivs
sbb
or
mov
cmp
fcomip
movsb
decl
or
and
cmp
ds
adc
mov
data16
ficomps
push
dec
jg
mov
out
pushf
sbb
sub
inc
jecxz
xchg
popf
stc
xor
mov
jecxz
pop
fmuls
lret
pop
sbb
mov
xchg
jle
sub
push
call
aam
sbb
jnp
jg
push
mov
jns
inc
imul
jl
negl
push
lcall
incb
inc
dec
and
and
fwait
push
dec
movsl
fisubrl
jg
pushl
mov
sbb
sub
or
mov
lock
jg
cli
in
cmp
xor
mov
pop
dec
subl
jecxz
and
xchg
cwtl
pop
adc
adc
add
out
lea
push
jecxz
mov
stc
push
outsb
push
mov
push
adcl
mov
aas
sub
ss
loopne
jp
adcl
cmp
sti
lahf
in
push
loop
inc
scas
add
cmc
mov
jg
add
cwtl
jge
pop
and
xchg
icebp
mov
sub
fcoms
out
fdivr
ljmp
xchg
pop
xchg
jle
sbb
popf
and
jnp
jo
es
stos
inc
cli
jno
in
cwtl
outsb
mov
mov
jo
jmp
cmp
push
push
sub
jmp
or
in
lcall
iret
xor
mov
shll
xchg
add
pushl
insb
mull
adc
pop
and
mov
test
mov
xchg
push
jno
lahf
mov
loope
aas
mov
push
out
insb
and
inc
enter
lock
in
fwait
lret
rol
adc
pop
xor
jg
subb
push
lret
js
les
aad
cld
int
into
sti
cmp
leave
and
sbbb
movsb
or
xbegin
daa
mov
mov
daa
mov
inc
mov
aas
xchg
jmp
mov
lds
out
dec
scas
adc
icebp
xor
cmp
and
sub
add
mov
loop
lock
xor
push
jg
test
or
push
scas
pop
fdivrp
or
cmp
xor
aaa
cltd
lcall
mov
jl
filds
xchg
ret
add
dec
add
inc
rorb
xchg
sbb
cmp
adc
xchg
in
jg
lcall
jecxz
jg
pop
lods
test
push
and
push
jg
out
hlt
je
mov
sbb
xor
fdivrs
and
pop
cmp
leave
arpl
aas
adc
mov
flds
outsl
movsl
cmpsl
jmp
call
mov
imul
fdivrs
je
ret
pop
lret
fmul
cmc
mov
jae
out
jg
adc
addl
data16
xchg
pop
out
mov
dec
add
sbb
xor
repnz
sbb
cld
fcmovne
aam
xchg
push
jo
shll
inc
and
add
out
xor
pop
dec
cltd
ljmp
test
pop
push
pushl
int
out
or
xor
adc
mov
sti
jmp
xchg
xchg
in
imul
mov
sbb
xchg
daa
add
or
and
and
pop
and
negb
mov
jmp
cld
cmp
add
xor
ss
pop
mov
ret
mov
xchg
pop
dec
sub
into
lea
and
sti
out
jge
inc
int
cmp
lods
mov
scas
inc
cmp
mov
hlt
inc
shlb
sub
loop
out
aas
and
pop
frstor
cli
xor
inc
push
adc
insb
dec
push
dec
jae
loope
aas
jno
enter
shlb
push
dec
xchg
decb
rol
or
sbb
fildll
fadds
and
mov
jle
ds
js
cmp
add
sarl
pop
cmpsl
mov
sbb
movsl
mov
xchg
sbb
pop
sti
scas
lods
adc
and
sbb
cmpsl
out
rorl
sbb
push
mov
adc
out
sub
cmc
mov
mov
add
enter
push
test
xchg
add
loopne
sbb
insl
xchg
int3
xor
xor
rcrb
xchg
push
cld
mov
popf
push
pushf
sub
pop
xchg
cmp
insl
and
inc
lods
jle
test
aas
dec
stc
push
fsubs
jmp
fldenv
mov
fdivrs
pop
push
je
cmc
pop
imul
mov
and
push
cs
push
sub
xchg
jmp
lock
mov
loop
stos
inc
add
loope
dec
mov
or
xchg
sti
mull
cmp
and
jg
jns
mov
jmp
push
dec
xorb
jae
adc
mov
jns
mov
mov
jg
xchg
fwait
rolb
xchg
cmpsb
outsl
in
stos
pushf
imul
dec
rcrb
out
pop
nop
cld
sbb
inc
int3
mov
adc
loopne
jo
mulb
push
adc
and
dec
cmpsl
in
bound
inc
outsb
add
lds
add
cmp
clc
adc
test
push
mov
lret
icebp
pushl
sub
push
cmp
inc
xchg
add
push
aad
aam
flds
cld
adc
mov
xor
pop
popf
sbb
jg
dec
sti
aaa
mov
lock
aad
dec
dec
push
das
xchg
xchg
stos
int
cmpsl
pop
pop
adc
add
xor
mov
inc
stos
gs
add
aaa
or
iret
std
and
mov
jl
sub
test
sarl
bound
shlb
xor
aad
fisubrl
fs
jno
imul
repz
and
sahf
out
jge
daa
xchg
adc
cwtl
xchg
bound
xchg
pop
sti
es
lock
push
add
push
clc
jecxz
aad
sar
sar
lods
push
in
cmp
mov
push
popa
inc
cmp
jge
jle
xchg
dec
xchg
pop
or
aaa
lods
mov
jno
into
adc
cmp
add
cmpsb
jge
lock
adc
push
mov
lods
scas
sbb
sbb
test
jg
clc
dec
sbbl
pusha
out
xor
inc
aaa
and
jmp
cmp
ljmp
call
call
fnstenv
call
int3
lcall
mov
add
ror
shlb
cmp
popa
loop
lcall
jg
mov
and
mov
cmc
jmp
roll
mov
cmpsl
pop
lret
andl
neg
pop
mov
in
sbb
pop
xlat
outsb
test
pop
mov
mov
je
jl
cmpsb
lret
lret
mov
movsl
adc
out
and
into
and
sub
push
sti
in
cmp
outsl
inc
mov
sarb
fistps
jnp
je
inc
cmp
mov
jecxz
enter
cli
and
inc
push
into
xor
inc
xchg
imul
xor
aas
sbb
rorb
popf
ljmp
decl
stos
push
push
testb
mov
pushl
aam
xchg
xchg
test
or
movsl
mov
negb
and
push
iret
sbb
sarb
repz
xchg
cmpl
imul
xor
xchg
movsb
push
loopne
mov
lret
inc
or
lods
xchg
cli
jb,pn
cmp
je
mov
sar
mov
xlat
cmp
cmp
or
lahf
sub
jmp
fildll
and
push
loope
xor
cli
mov
jg
and
cmpsb
fwait
mov
xchg
xlat
push
ffreep
cli
xlat
aam
mov
and
mov
filds
pushf
lods
dec
jle
in
insb
sbb
fs
or
jg
fidivs
dec
xchg
inc
aad
popa
mov
and
push
jecxz
ljmp
mov
fmull
es
popf
addl
sti
sbb
dec
sbb
jnp
sti
jge
cmpsl
xor
xor
pop
mov
in
add
jbe
cmpsb
jae
push
adc
jnp
or
or
push
loope
pop
addr16
jmp
cmpsb
xor
pop
call
pop
mov
push
test
jecxz
jo
mov
lea
adc
xchg
and
adc
sub
and
or
lcall
pxor
lods
and
push
mov
xor
std
lcall
nop
jg
xor
aad
dec
aas
les
into
cmp
in
inc
arpl
xchg
lret
popf
hlt
sub
pop
xchg
fstl
adc
int3
jp
ja
in
notl
leave
cmp
aad
repnz
add
mov
push
std
filds
add
lret
xchg
out
pushf
fwait
mov
sti
pop
out
pusha
mov
pop
pusha
sarl
sbb
cmc
movups
cli
stos
push
and
shlb
add
push
adc
xchg
inc
pushf
jp
jnp
std
fadd
sub
in
mov
in
and
decl
pop
sbb
cmp
adc
call
idivl
push
mov
aas
sti
sub
pop
xor
aaa
xor
outsl
push
jb
mov
sub
and
scas
movsl
cmc
cmp
or
xlat
sahf
inc
insl
xlat
add
into
sbb
inc
in
xchg
or
aas
inc
adc
sub
and
and
das
xchg
add
imul
pop
or
aas
and
adc
test
bound
iret
daa
enter
daa
in
nop
fldenv
and
leave
sarl
call
int3
mov
fs
inc
fwait
sub
outsb
int
sbb
popf
and
sub
paddusb
cli
icebp
ret
push
adc
arpl
jo
mov
fldcw
push
fwait
out
mov
and
mov
ret
addr16
mov
out
lret
jo
pop
in
push
in
bound
incl
or
lret
jl
adc
jne
pop
add
ds
ret
std
sarl
pop
jno
sahf
leave
xchg
add
call
addr16
movsb
and
cmp
ffreep
cmp
int3
test
inc
cmp
ficoms
rcl
push
int
negl
mov
pushf
icebp
and
pop
pop
mov
lods
lahf
in
jnp
cltd
rorl
cmp
dec
mov
sub
pusha
push
pop
enter
enter
xor
dec
inc
sub
das
int
push
mov
push
sbb
mov
dec
es
pushf
push
inc
sbb
aas
loopne
enter
add
inc
mov
outsl
adc
inc
decl
inc
add
shll
lock
and
popf
pop
in
aas
negl
jne
les
add
ret
mov
jnp
inc
movsb
xchg
cmp
and
jg
out
push
pushl
and
jb
add
xchg
inc
add
pop
icebp
jg
cmp
jo
sbb
rorl
cli
pop
jmp
pusha
stos
imul
shll
clc
ja
popa
shl
ss
jl
push
lahf
incl
mov
inc
adc
jmp
ret
aas
lock
lods
ficoml
inc
outsl
test
pop
sbb
add
jp
xchg
mov
js
xchg
aaa
out
imull
lahf
icebp
das
adc
int
jmp
dec
ss
inc
xlat
rcr
jnp
dec
push
mov
push
mov
xor
and
add
and
cltd
push
test
pop
outsl
or
xchg
xor
orb
mov
xchg
into
cmpsb
stc
jmp
cmpsb
aad
mov
aas
mov
rorb
mov
aaa
subl
push
cmp
fcoml
xchg
std
add
in
push
xor
mov
pop
mov
xor
xor
fnstenv
lds
jg
xor
mov
jmp
and
or
aaa
and
jg
pop
outsb
std
inc
sub
mov
add
or
push
aas
pop
outsb
push
jl
pop
popa
dec
cs
fstpl
fistpll
lds
popf
filds
pop
clc
xchg
dec
sbb
sti
out
icebp
cmp
je
mov
and
or
rcll
cmc
mov
mov
mov
jg
push
inc
xchg
scas
jge
pop
cmc
mov
sub
sub
cmp
repz
js
loopne
leave
push
pop
mov
jg
pop
or
adc
in
idivb
out
pop
lret
xor
jo
and
push
xchg
lock
mov
pop
and
mov
mov
mov
mov
mov
inc
and
idivl
out
push
call
xchg
decb
jns
hlt
mov
mov
jnp
cltd
das
neg
movsb
test
mov
dec
pop
and
sbb
xchg
sbb
pop
call
loope
inc
lret
clc
and
out
pop
inc
mov
adc
ss
jb
scas
mov
jne
dec
lret
mov
sub
inc
jg
aas
and
fildll
mov
sub
stc
ljmp
addr16
push
add
xchg
push
sbb
pop
lcall
sub
xor
fstp
subb
cli
out
mov
lahf
bound
jns
mov
mov
push
not
inc
js
mov
lcall
loope
aaa
pop
push
mov
adc
cmpb
imul
jnp
dec
movsl
mov
aad
adc
icebp
je
stos
jne
jns
fidivs
decb
into
pop
rolb
inc
or
sbb
ljmp
cmp
shufps
jmp
lahf
push
pop
andb
enter
popf
jnp
adc
mov
push
inc
lret
lods
cmp
test
subb
xrstors
dec
imulb
cs
hlt
cli
sbb
inc
iret
dec
xchg
jbe
loope
pop
sti
dec
push
aaa
xchg
cmp
dec
or
in
loope
iret
push
push
std
popf
sti
pop
adc
sub
movsl
in
insl
cmpsl
pop
shrb
adc
lea
je
jge
inc
xor
lret
jo
pop
rolb
ds
frstor
adc
or
repz
cs
or
pop
or
fistps
jae
repnz
frstor
pop
jge
fistps
cmpsl
ret
pop
cmp
iret
jecxz
cmp
addr16
or
lahf
je
aaa
ss
test
repz
mov
repnz
sbb
aas
out
imul
or
xchg
popa
push
ficoml
clc
out
xchg
mov
jle
jg
jecxz
call
fsubrs
inc
es
dec
ja
and
rorl
mov
adc
add
nop
xor
icebp
pxor
sbb
jge
dec
aad
fimuls
outsl
and
aam
bound
mov
ret
cmc
leave
dec
repz
fwait
mov
popf
sti
adc
jecxz
jg
pop
mov
out
sub
pop
xchg
add
cmp
add
outsb
push
call
push
jns
mov
inc
xchg
add
lcall
es
inc
mov
cmp
clc
aas
std
inc
mov
das
scas
je
pop
xchg
loop
in
jnp
sbb
cmpb
test
push
inc
xor
rorl
ret
into
and
inc
mov
sub
mov
pop
jmp
jg
imulb
pop
pop
es
aas
loopne
inc
ss
mov
das
mov
test
out
and
cmp
jb
das
orl
shll
push
pop
sarl
je
aam
into
test
std
pop
sti
push
adc
addr16
fstps
cli
adc
mov
cld
cmp
lret
sbb
lock
cmp
add
jecxz
inc
xchg
in
push
imul
insb
aas
lahf
or
jnp
mov
pop
sub
xchg
loopne
ret
sti
pop
dec
stos
out
imul
xor
cs
loopne
mov
outsb
dec
push
xlat
inc
aas
adc
fsts
mov
jl
push
into
aaa
mov
cmp
fmuls
cmp
adc
pop
cmpsb
adc
mov
outsl
rcrb
cmpsl
jmp
imul
inc
sub
aaa
into
and
or
scas
jb
dec
icebp
sbb
je
mov
xchg
adc
daa
or
xchg
ficomps
or
scas
and
cmp
or
pop
mov
fisttps
loop
scas
xchg
sti
icebp
mov
shlb
out
stc
inc
clc
xchg
dec
jne
movsl
sbb
push
sbb
mov
jb
loop
and
add
cmp
jmp
xor
pop
jecxz
cld
xor
adc
xor
gs
add
pushf
mov
cmp
adc
clc
add
ljmp
mov
sarl
lock
inc
pop
mov
sub
jmp
cmp
repz
arpl
imul
sbb
loope
ffreep
cli
iret
lods
mov
shlb
push
pop
jbe
shrb
xchg
cli
inc
movsb
cmc
mulb
rorb
or
mov
loope
leave
jne
xorb
pusha
xor
push
daa
pop
mov
and
inc
scas
aam
stos
sbb
rorb
aas
inc
into
imul
dec
or
jo
add
neg
jecxz
pop
mov
negb
add
jmp
in
es
and
push
dec
inc
ljmp
frstor
xchg
insl
ljmp
add
push
dec
ret
cmp
jnp
mov
push
or
dec
inc
inc
sbb
sarl
cld
xor
jg
or
lods
xchg
imul
push
loope
incl
das
pop
mov
cltd
lahf
mov
iret
mov
adcb
test
dec
sbb
dec
mov
sahf
and
aad
adc
or
in
aas
mov
xor
pop
movsb
je
xchg
jg
clc
cmpl
xchg
cmp
push
fucompp
std
ss
and
rcll
pusha
inc
scas
push
inc
leave
jbe
stc
repnz
pop
sub
sti
xlat
sub
sbb
add
scas
adc
inc
int
xor
sub
pushf
pop
cmpsl
incl
int3
jae
mov
mov
dec
xor
add
pop
std
and
cmp
xchg
sub
mov
cs
sub
hlt
std
outsl
aad
add
xor
lahf
loope
cld
ret
mov
push
inc
sub
mov
jns
addr16
mov
xchg
daa
outsb
mov
xor
adc
add
imul
aas
push
loop
pusha
lock
outsl
or
lock
xor
incl
mov
lahf
ds
andl
popa
cmp
sub
push
data16
stc
jno
pop
push
fmull
inc
outsb
xor
mull
sbb
adc
fwait
mov
sti
xor
cmp
pop
cltd
inc
nop
ja
pop
cmpsb
push
aad
aas
lcall
add
das
push
inc
and
out
mov
outsb
xchg
jg
add
mov
das
in
xchg
or
dec
xchg
fs
lea
cmpsb
or
cli
outsl
out
xchg
push
cld
js
jbe
mov
mov
xchg
jg
aas
jbe
pop
add
or
rorl
out
push
loop
in
pop
mov
cmp
ja
clc
lahf
jp
inc
mov
scas
mov
lods
pushl
and
incb
jnp
cmp
mov
inc
lahf
push
movsl
filds
inc
jno
aaa
cmp
idivl
fxch
xchg
xchg
enter
mov
ret
pusha
fs
jno
mulb
mov
mov
aas
sarb
mov
es
and
jg
syscall
add
jg
pop
imul
sub
fidivs
jg
imul
stos
out
sub
mov
pop
retw
adc
jl
cmp
dec
xor
mov
add
in
ja
test
xor
pop
int
lock
aaa
pop
xchg
push
movsb
mov
adc
jns
test
dec
shrb
repnz
add
mov
leave
add
clc
pushf
pushf
mov
pop
mov
cli
out
cmc
push
mov
test
adc
push
in
lods
push
push
incl
push
adc
sub
lcall
xor
hlt
ss
sub
and
mov
dec
xchg
lods
sahf
pop
ljmp
aas
jne
hlt
jecxz
jne
mov
test
inc
push
mov
jl
xor
hlt
xor
in
jbe
cwtl
icebp
test
cld
bound
jnp
rcrb
aaa
jp
lahf
mov
push
fst
lret
push
pop
mov
call
stc
mov
rolb
push
loope
in
mov
shrl
addr16
inc
pop
xchg
movsb
fstp
mov
movsl
call
jmp
cmc
call
in
sub
or
fmul
ja
ljmp
mov
movsb
jecxz
dec
sbb
cmp
push
mov
out
mov
icebp
mov
mov
nop
shlb
mov
sub
repnz
dec
and
pop
mov
pop
sbb
sub
std
iret
std
pop
and
cltd
mov
int3
sub
pop
lea
pop
fidivl
xchg
add
sbb
aam
mov
pop
scas
mov
daa
stos
test
xchg
inc
mov
jnp
mov
dec
and
cwtl
inc
shlb
loopne
arpl
jle
loop
cmp
pop
push
fldt
sti
xchg
cltd
cltd
jno
pop
add
adc
pop
mov
pxor
jle
or
cmpsb
pop
lea
push
mov
mov
arpl
mov
out
arpl
pop
rcrl
adc
push
xchg
das
and
loop
add
sbb
sub
fsubrl
jecxz
mov
rcll
mov
add
inc
adc
ret
cmpsl
stos
jecxz
xlat
adc
jg
clc
mov
out
mov
pushf
jg
popa
or
xchg
push
push
push
adc
lods
inc
sahf
je
pop
and
loop
ret
ret
cmp
testl
sbb
negl
push
bound
or
shlb
and
das
aaa
mov
mov
pop
adc
jno
sarl
mov
test
mov
push
mov
sar
in
push
cmp
mov
ficoms
jns
mov
sub
dec
popl
fidivrs
popf
lcall
out
hlt
fsub
mov
push
mov
cmp
aas
sbb
popf
sti
in
pop
inc
cmp
dec
mov
in
loope
fidivrs
testl
ljmp
sbb
xchg
mulb
enter
inc
insb
xchg
pop
pop
mov
int3
adc
cmc
lcall
stos
push
add
cmc
cmpsb
data16
inc
mov
jo
mov
imul
mov
mov
pop
sbb
cmp
adc
clc
cmpsb
adc
add
incl
cmp
jns
das
xor
leave
mov
and
adc
out
shlb
call
aam
xlat
xchg
cmpsl
jbe
xor
jbe
popf
fidivs
jo
mov
push
and
mov
mov
xchg
mov
fwait
int
insb
xor
cld
and
push
xchg
es
push
cwtl
icebp
pop
mov
sbb
addr16
popf
subl
jge
pop
shr
mov
popf
in
popf
xchg
incb
inc
mov
bound
adc
jo
add
mov
push
pop
std
mov
into
mov
sub
leave
xchg
add
pop
mov
je
and
mov
jg
decl
das
and
sub
mov
jmp
pop
mov
xchg
jp
lcall
cmc
jnp
sub
xchg
mov
inc
fimuls
sub
mov
scas
mov
jbe
std
lcall
add
mulb
cltd
fdivs
mov
pusha
adc
outsb
mov
insl
mov
jp
fists
xor
clc
lock
movsl
jg
pop
je
sub
pop
mov
out
lock
adc
dec
lret
push
mov
fwait
aad
daa
and
sub
cmp
loopne
jp
inc
and
dec
ja
jae
mov
int3
add
test
jp
mov
jb
stc
jge
mov
jne
aam
sub
jnp
sbb
je
adc
mov
add
aaa
cmp
jle
test
push
daa
hlt
aas
mov
jp
sbb
cmp
call
xchg
int
les
loope
dec
mov
pop
stc
mov
lret
dec
inc
and
aaa
xchg
jge
mov
jmp
nop
int
test
mov
and
mov
mov
jo
loop
inc
scas
sub
push
inc
xchg
pop
mov
pushl
jecxz
pop
daa
and
or
imul
jmp
pop
adc
mov
mov
sbb
out
adc
pop
hlt
lea
or
push
sbb
aas
cmp
inc
pusha
dec
cmp
jecxz
or
mov
dec
aas
adc
lahf
bound
sbb
out
mov
sarb
or
inc
mov
mov
arpl
int
push
jmp
sbb
ljmp
outsl
dec
inc
loopne
hlt
pop
fwait
sbb
fldt
lcall
icebp
pop
sub
xor
aas
jmp
sub
jg
lret
and
sbb
inc
out
or
push
cmc
mov
testl
fcompl
pop
jnp
cmpsb
les
add
or
out
fidivrs
pushf
mov
mov
pop
sub
loop
loop
inc
inc
les
mov
push
faddl
fisubl
aas
ljmp
sbb
and
fcoms
ljmp
std
mov
sbb
xchg
cld
jae
pop
fisttpl
inc
mov
add
fcomp
sti
pop
out
dec
cmp
repz
imul
pop
inc
add
lock
xchg
enter
dec
mov
movsl
inc
ret
jmp
mov
mov
add
sub
aas
mov
out
std
mov
dec
cld
xchg
lock
sub
mov
jbe
test
inc
lret
add
ja
push
mov
int3
stc
mov
shrb
add
ljmp
pop
adc
fnstsw
and
mov
pop
sbb
inc
mov
dec
sbb
std
jg
sti
aam
mov
rcrb
imul
clc
mov
cmpb
mov
out
or
cmp
es
seto
sub
dec
test
xorb
lahf
lds
mov
icebp
sbb
fadd
outsb
dec
divl
fdivr
ljmp
test
adc
int3
jo
and
ret
and
jge
mov
jg
loopne
int
ss
aam
dec
movsl
fmuls
adc
neg
test
arpl
cmp
scas
mov
push
push
mov
out
and
xor
cwtl
xor
jno
jle
clc
stc
xor
lahf
je
mov
stos
clc
out
std
ss
cmpsb
subb
loop
jo
out
push
push
outsb
aas
nop
dec
sbb
jb
push
icebp
arpl
pusha
mov
filds
pop
or
loope
mov
fisubl
jl
fidivrs
cli
incb
push
dec
scas
clc
out
adcb
sub
fimull
pop
jne
mov
ret
add
mov
dec
icebp
sahf
jg
and
sub
pop
adc
pop
and
mov
mov
repz
insl
aad
mov
dec
mov
in
decl
mov
pop
cli
cwtl
in
inc
sub
mov
or
repz
clc
shr
cmp
and
cld
into
ret
sbb
jmp
ds
mov
cmp
insl
mov
std
imulb
inc
mov
inc
and
stc
cltd
ja
inc
ljmp
shlb
dec
in
orl
sub
and
lock
jo
pusha
ficoml
inc
jno
pushl
sti
xchg
es
loop
and
jp
mov
pop
cmp
lods
out
sbb
fisttpl
dec
jg
in
sub
sbb
xchg
mov
mov
push
in
sbb
clc
xchg
cmp
ficompl
xchg
out
das
adc
sub
adc
lahf
sarl
push
push
dec
daa
int
shrb
fcoms
movsl
sub
test
mov
xlat
fisubrs
adc
fwait
pop
fs
and
jg
push
fwait
cmp
pop
nop
lods
or
mov
insb
xor
lods
cmc
fisttpl
add
push
push
mov
mov
std
mov
dec
loopne
mov
arpl
out
fisubrs
jg
push
inc
add
mov
pop
jo
jmp
fnstenv
or
loop
sti
push
adc
push
cmp
clc
lods
loope
out
fisttpl
pop
int3
in
sub
incb
loop
pushf
xor
fwait
loop
inc
cmpb
clc
fdivl
aad
xchg
nop
inc
mov
pop
jge
incb
out
rorb
loop
mov
in
ljmp
adc
shlb
lods
cld
adc
adc
in
inc
sar
pushl
stos
jns
lret
inc
mov
mov
ljmp
pop
shrb
jae
or
js
lret
int
push
xor
pop
shl
push
rcr
jmp
sarb
xchg
inc
mov
mov
fbld
cmpsb
adc
ret
roll
sbb
cmp
mov
clc
into
imul
into
jecxz
icebp
decb
jno,pt
cmp
subl
movsb
jnp
call
cmp
insb
xchg
mov
shrl
add
inc
jl
pop
mov
out
mov
rcrb
pop
movups
and
stc
sbb
dec
call
xchg
loope
fcmovb
js
and
pusha
mov
test
pop
out
mov
icebp
out
and
lcall
pop
inc
pusha
hlt
incl
or
imul
mov
fcoml
and
jno
pop
jmp
pop
dec
pop
ds
sbb
push
hlt
mov
cmp
ja
pop
fdivr
fisttpl
shr
scas
adc
mov
sar
dec
out
hlt
outsb
xor
push
fs
fprem
ds
stc
mov
pop
push
bound
loope
arpl
decl
add
sub
or
and
push
bound
fldenv
lds
cmpl
mov
ret
pop
pop
add
loopne
in
mov
inc
stos
xchg
dec
aaa
pop
daa
mov
aas
mov
mov
out
movsl
xor
xor
xlat
push
cmc
cmp
idiv
and
mov
lret
aad
loop
push
sub
lock
xlat
int3
test
ds
fs
xchg
aas
push
std
pop
dec
sbb
inc
xchg
push
cli
pop
sub
movl
jo
daa
add
mov
sti
lret
ret
xor
pushf
cmp
inc
mov
jge
xchg
ficomps
fiaddl
sbb
add
jl
cs
stos
data16
lea
jmp
adc
iret
add
adc
cmp
ljmp
dec
xor
dec
cmp
fwait
bound
into
dec
jecxz
lock
das
xchg
mov
add
lcall
cmc
fnsave
inc
sub
gs
push
mov
adc
xadd
shlb
out
cmc
pushl
jb
sarl
imul
cmp
ret
movsl
movsl
jns
sbb
mov
loopne
mov
jle
ja
jg
pop
add
addr16
jg
int3
js
inc
pop
inc
nop
mov
ret
pop
xor
sarb
aad
inc
pushf
and
das
out
lahf
aaa
or
insl
bound
sti
in
ljmp
pop
push
cmpsb
mov
adc
pop
jbe
mov
sbb
call
jno
fidivl
roll
fs
mov
pop
xor
jb
mov
add
xorl
fdivr
mov
adc
aam
add
inc
imul
arpl
out
js
pop
loop
jae
lcall
jne
pop
loopne
mov
adc
sub
sub
dec
pop
or
dec
sahf
and
scas
sti
cli
lret
popa
xor
xchg
arpl
fdivrp
in
mov
xchg
mov
jg
sub
into
adc
in
jl
icebp
fbstp
cmp
aas
insb
popa
xor
xchg
pop
sub
out
outsb
pop
jecxz
sbb
jne
loop
mov
and
fsubrl
loop
push
or
xchg
in
incl
repnz
cmp
mov
xor
aas
rolb
or
dec
dec
cmp
and
test
xchg
test
jae
cwtl
adc
aas
testl
or
ret
dec
ljmp
mov
mov
scas
jl
adc
pop
jae
mov
or
pop
icebp
pop
inc
fwait
lock
pop
dec
sbb
mov
jg
clc
adc
fildl
xorb
jbe
std
cltd
rcrl
fimull
mov
jg
cmpsb
mov
outsl
xchg
ljmp
std
add
xor
stos
push
xor
decb
dec
jge
mov
ret
fwait
pop
faddl
into
or
hlt
je
rorb
mov
iret
icebp
push
fs
imul
arpl
jo
loope
mov
scas
loop
imul
outsl
mov
loopne
jge
ljmp
loopne
inc
loop
jp
insl
stos
out
fidivrs
push
lods
stos
cli
jmp
fistl
adc
pop
in
dec
xor
ror
insl
push
inc
aas
cmp
pop
lds
sub
aam
lock
or
adc
and
fbstp
dec
shrb
je
sub
xlat
std
scas
std
pop
lods
or
and
pop
xchg
pop
push
fucom
xor
fcomip
xor
cmpl
divb
and
leave
sub
ret
inc
pushl
and
outsl
das
bound
adc
ljmp
inc
push
aad
mov
mov
gs
sti
cmp
push
push
jl
dec
dec
ja
mov
dec
je
add
cmp
pop
scas
loop
je
cmp
cmp
addb
push
ffreep
mov
adc
adc
das
jb
dec
fiadds
js
sub
fdivr
out
lock
outsl
hlt
jle
dec
data16
int3
push
rcl
mov
push
mov
sbb
int3
ja
fucomip
dec
leave
or
out
movsl
in
daa
and
jmp
movsb
shrb
sub
popa
dec
push
in
in
pop
sub
lock
lahf
mov
cmp
pop
arpl
cli
test
sbb
gs
mov
cld
jmp
mov
and
push
dec
push
pop
add
xchg
jmp
inc
hlt
mov
jmp
adc
dec
mov
orl
in
out
cmp
pusha
lds
loopne
icebp
out
fmul
psubb
fadds
pop
mov
jg
clc
cmp
popf
push
data16
sub
cld
xor
lea
add
mov
push
push
or
lock
pop
inc
subl
dec
clc
daa
hlt
jmp
push
pop
sub
xchg
inc
and
and
icebp
out
mov
out
cmp
aad
pop
ss
addb
lea
xchg
lea
into
jg
xor
jle
sbb
out
jmp
inc
cld
adc
lcall
rcll
ljmp
xor
inc
mov
mov
pop
ds
lahf
lret
jns
mov
pop
or
lods
xchg
adc
ljmp
pop
pmaddwd
mov
ret
pop
push
sahf
ja
out
incl
xchg
pop
adc
lcall
push
inc
cld
mov
pushf
mov
add
shr
inc
jo
test
xchg
mov
jecxz
xchg
push
pop
push
push
add
lret
sbbb
jl
mov
jb
fimull
mov
in
xchg
mov
jg
data16
mov
xor
sbb
pop
jecxz
divl
scas
jnp
dec
clc
mov
into
mov
mov
xchg
mov
push
clc
pop
aas
xchg
pushf
mov
pop
lret
repnz
push
stos
jmp
xor
jb
test
xchg
xchg
dec
pop
clc
jg
decl
pop
ds
mov
scas
pop
stos
and
jp
sbb
stos
adc
cld
divl
adcb
movsb
jp
aas
neg
jmp
fsts
add
lcall
lds
loop
pop
or
xor
adcb
dec
dec
popf
mov
cs
adc
jmp
adc
hlt
mov
ret
push
loope
mov
rcll
pop
div
leave
jno
add
and
adc
roll
add
lock
add
test
testb
and
lock
jns
fisttpll
or
mov
leave
xor
into
aas
adc
fistps
mov
sbb
mov
test
adc
xor
xor
and
mov
adc
int3
jmp
out
std
inc
in
mov
pop
ljmp
into
movsb
or
ret
ja
add
xchg
pop
pop
push
dec
xchg
repnz
aad
sub
dec
dec
rcrl
dec
jne
mov
pop
xchg
jo
mov
loope
fsubrl
iret
fnstsw
adc
fdivl
mov
xorl
loope
lahf
push
std
pop
cmp
fs
icebp
addb
fwait
repnz
ret
sti
incl
xchg
sub
push
std
ds
rcll
mov
cld
jle
je
jno
xor
push
dec
mov
adc
push
sbb
pop
lds
outsl
adc
push
lock
fidivrs
lds
dec
orb
cmp
fucomip
int3
gs
push
ret
incb
jecxz
js
icebp
inc
bndldx
jmp
sbb
push
sub
xchg
mov
movsb
inc
psubd
js
gs
cmp
mov
or
dec
or
jge
sbb
jl
shr
sbb
or
or
js
repz
rcrb
lock
fsubrl
mov
addr16
fidivrl
loope
sbb
add
stos
imul
push
pop
and
and
jg
lret
xor
popf
sti
xor
jnp
addr16
sbb
mov
xor
dec
aam
nop
in
lds
adc
lea
ret
dec
call
sti
jns
fisubrs
inc
xchg
xor
mov
dec
dec
xor
movsl
xlat
inc
loopne
sub
push
sbb
dec
in
mov
cmp
cli
push
out
outsl
fisttpl
popa
loopne
rclb
js
stos
add
push
lcall
jnp
outsl
mov
lods
jp
fistl
push
mov
stc
mov
stos
js
mov
cwtl
icebp
pop
xor
lret
mov
aad
lds
or
repz
cmp
std
into
ret
in
push
arpl
call
dec
cmp
lods
mov
jg
rorb
and
push
imull
dec
frstor
fldl
dec
sarb
int
cmp
stc
push
and
mov
outsl
cmpsl
sub
cmp
push
std
cs
dec
lock
mov
loope
popl
cltd
ljmp
mov
loopne
out
testl
fisubs
push
rcrl
dec
mov
mov
leave
inc
int
jbe
jno
add
dec
and
gs
lds
or
cltd
cmp
adcb
loopne
shll
loopne
fwait
pop
or
mov
sbb
stos
xchg
dec
pop
ja
mov
lcall
cmp
call
mov
mov
push
dec
sub
mov
cmp
jne
data16
mov
loop
push
sub
sub
insb
cltd
pop
fbld
clc
dec
lea
rolb
fsubrl
lahf
mov
shlb
and
mov
jge
pop
jp
int
mov
inc
xor
xor
and
sbb
loopne
out
dec
inc
jmp
xor
aaa
push
nop
cmp
notl
xor
pop
lock
xchg
ljmp
out
sahf
popf
inc
mov
mov
push
das
stos
mov
stos
sbb
jmp
test
mov
push
mov
cwtl
call
pop
sbb
xchg
pop
mov
ret
mov
fildll
inc
jo
mov
pop
in
call
jmp
int3
and
mov
iret
cmp
xor
jno
mov
aad
lock
cmp
fbstp
icebp
popf
pop
adc
lahf
push
mov
cmc
cmp
enter
mov
mov
inc
or
fwait
insb
fisttpll
outsl
inc
adc
aas
mov
xchg
sbb
xchg
in
mov
scas
xor
iret
mov
adc
and
loopne
cld
hlt
jg
or
add
lcall
lahf
js
fistpll
jb
loopne
pop
rcrl
xlat
ljmp
xchg
repz
push
push
mov
pop
mov
lods
call
rclb
inc
js
or
into
lock
and
jl
dec
adc
lods
pop
repnz
or
fdecstp
arpl
and
inc
out
mov
cli
inc
inc
mov
jnp
out
fidivs
cli
and
pusha
insb
pop
mov
and
jg
mov
stos
inc
sbb
mov
xor
adc
ja
les
rcrl
notb
add
adc
les
lahf
sar
and
pop
dec
jb
test
test
add
mov
aaa
add
jp
jp
mov
ret
mov
xor
cmp
out
or
adc
lahf
mov
aad
pusha
xor
ds
out
lock
add
cwtl
rorl
and
int
lods
cmc
daa
loope
xlat
mov
xchg
sub
mov
aas
cmpsb
ffreep
sbb
std
jg
lcall
leave
negl
cli
push
lea
mov
jns
add
cmpsb
roll
pop
ret
lock
in
xchg
idivl
negl
out
dec
test
scas
enter
push
jge
dec
fiaddl
sub
adc
mov
call
loope
mov
aas
add
sub
faddp
mov
adc
mov
or
lods
cmp
inc
mov
jnp
arpl
fsubrl
adc
in
notb
stos
adc
pop
sarl
shll
add
aas
and
jbe
cs
mull
mov
inc
xor
or
sub
or
into
fbld
mov
movsb
fwait
int
jge
popf
jl
outsl
sbb
sbb
ret
push
fsub
xor
jl
jl
stos
add
jo
adc
sub
xor
scas
mov
int3
les
mov
iret
push
lock
loop
sti
jle
jp
aas
icebp
or
xor
push
loope
movsbl
ret
inc
pop
scas
mov
mov
subb
dec
cs
loope
or
adc
mov
push
testb
aaa
or
ret
and
xor
in
push
out
adc
adc
jg
pop
andl
movsl
jns
sub
or
cs
fidivs
mov
xchg
cwtl
inc
loop
orl
or
or
mov
cs
cmp
out
push
adc
dec
mov
mov
push
ret
xor
pop
or
lea
inc
pop
adc
sahf
pushl
xchg
jg
testl
sub
pop
adc
aas
repnz
std
ffreep
cli
data16
push
call
out
jmp
cmp
push
out
lahf
add
sbb
xchg
aas
mov
add
std
or
pop
popa
inc
fbld
or
rcrb
decb
cmc
jmp
jp
and
push
dec
cmp
push
aas
mov
dec
jae
dec
insl
sbb
rcrl
inc
lcall
nop
and
shll
push
scas
push
pop
sbb
inc
mov
movsl
in
adc
arpl
std
push
in
or
scas
imul
arpl
lret
or
and
shlb
je
cwtl
cmpsb
shrb
inc
add
test
mov
rolb
mov
js
lds
cli
loop
xor
sahf
mov
mov
cmp
dec
xchg
or
std
aas
sub
sbb
imul
mov
icebp
mov
mov
dec
mov
sub
push
aam
cld
jbe
pop
fucomip
and
cmp
aaa
icebp
cmp
mov
push
sub
js
inc
nop
out
inc
pop
mov
movsb
inc
lcall
and
mov
push
pop
push
push
ret
test
jg
and
xor
into
jmp
ds
sbb
lock
xorb
jmp
dec
or
in
fisttpll
cli
xor
adcl
test
or
in
sbb
cmp
mov
pop
popa
movsb
dec
push
stos
push
ljmp
mov
test
scas
mov
mov
pop
mov
adc
std
aas
jge
imul
jae
mov
dec
cmp
ret
aas
push
lock
andl
out
testb
mov
out
decl
test
call
popa
fs
paddusb
xor
mov
xlat
cs
addr16
lods
mov
loopne
mov
and
cmp
iret
push
decl
xor
or
loope
loop
and
in
fisttps
mov
cmp
push
in
mov
es
mov
and
mov
sbb
pop
jg
lock
adc
call
je
cmp
sub
inc
jne
mov
mov
add
mov
sbb
xchg
push
sub
mov
jp
cmp
sahf
scas
adc
push
and
pushl
xor
mov
movb
stos
ja
xor
negb
push
lcall
shrb
dec
pop
jg
imul
sbb
or
cmp
and
call
ret
jnp
adc
xchg
mov
sbb
adc
icebp
xchg
bound
push
stc
push
std
js
pop
cltd
scas
mov
mov
scas
push
mov
daa
cmc
test
dec
mov
cmc
push
xor
std
xchg
xchg
jle
ljmp
shll
mov
or
test
insb
xchg
push
cwtl
ljmp
xchg
arpl
addr16
filds
jle
jle
shll
push
push
rcr
sahf
or
bnd
leave
popf
jle
fdivrs
jg
mov
sbb
call
loope
std
lods
lcall
negl
or
mov
test
js
icebp
sub
pop
jmp
jle
adc
cmp
xchg
loopne
iret
test
push
add
sbb
add
fstpt
pop
aaa
push
push
xchg
call
sub
pop
or
mov
and
shlb
mov
adc
test
dec
pop
mov
adc
fmul
add
sbb
js
mov
decl
sbb
push
inc
stos
js
mov
pop
jnp
lahf
popa
mov
push
fisubrs
stc
xlat
jnp
xchg
sbb
push
jns
bswap
mov
cmp
adc
jae
jb
mov
cmc
pop
jbe
xor
out
out
ret
lcall
sbb
in
aas
aad
sti
xchg
sbb
loopne
inc
lock
mov
xchg
insb
incb
push
xor
fdivrl
adc
xchg
std
xchg
mov
and
aas
or
cmp
jnp
out
cld
xchg
mov
in
jmp
lea
adc
arpl
les
aad
std
xor
pusha
mov
test
rcrl
dec
pop
loope
fmulp
mov
add
inc
or
loope
ss
jns
xchg
adc
sub
inc
cld
and
jno
mov
xchg
pop
fsts
daa
arpl
loop
sub
insb
imul
pop
sbb
ss
leave
in
test
orl
jg
inc
loope
pop
gs
lods
mov
jge
loop
cld
dec
cwtl
jl
adcb
inc
adc
sti
fstl
arpl
and
push
std
push
xchg
repz
out
sub
adc
mov
ljmp
sub
push
out
adc
mov
ret
sti
mov
xchg
xor
sub
repnz
icebp
daa
mov
test
rolb
stos
clc
pop
cmpsb
cli
icebp
je
pushf
jns
stos
xorb
cld
loope
and
fsubs
jg
test
lret
popf
ffreep
sbb
jge
in
pushf
sti
pusha
jmp
js
mov
aaa
adc
xchg
jg
sti
out
cmpsb
sbb
mov
nop
in
outsl
test
jmp
push
xor
nop
mov
sub
xor
inc
lret
movsb
jnp
pop
filds
adc
lds
xor
and
lods
push
outsb
stos
or
sti
lahf
gs
out
pusha
ds
jo
movsb
and
fucompp
sbb
aam
les
push
inc
add
ja
sub
cmpsb
adc
mov
add
push
jmp
imul
mov
xlat
lods
fsts
fists
mov
or
cmp
ss
arpl
sub
xor
add
mov
lock
pop
xchg
in
aad
dec
xchg
push
adc
lock
nop
test
pop
call
stos
push
mov
in
mov
ja
xchg
inc
shlb
iret
xchg
dec
cwtl
xchg
aad
jg
mov
out
sub
sub
int
jnp
inc
lret
fistl
sub
loopne
push
sub
mov
sbb
cld
aad
out
dec
xchg
scas
into
mov
cli
push
imul
pushf
pop
inc
and
lahf
lds
js
adc
or
pop
lods
dec
ret
fsts
ja
jno
imul
add
sbb
pop
jns
aas
inc
mov
xchg
lea
icebp
sahf
mov
lods
rol
insb
xchg
shl
lcall
fisttps
cmp
int
push
dec
jecxz
cmp
cwtl
fdivr
xchg
jl
divl
jbe
lcall
and
incl
pop
sub
fisttpl
in
cld
jmp
idiv
jnp
out
rol
nop
rcl
lea
sbb
sar
mov
pop
sub
push
mov
jg
dec
cld
adc
test
add
out
mov
inc
or
inc
dec
movsb
xchg
test
add
pop
add
mov
mov
mov
aas
pop
mov
inc
jge
jmp
xlat
sub
and
jmp
movsb
aad
push
filds
xchg
adc
cli
xchg
jmp
pop
add
mov
inc
movl
cmpsl
pop
lret
std
mov
popa
dec
movsl
mov
jae
inc
inc
mov
stc
ret
dec
mov
adc
scas
hlt
hlt
scas
or
scas
ds
jnp
mov
xchg
loopne
sbb
fcomps
add
fistpll
outsl
pop
out
out
cld
lods
ja
xchg
push
pop
jp
cltd
jle
push
pop
add
add
sbb
popf
xor
movsl
mov
sbb
xor
pushf
incl
stc
ja
and
jb
add
jne
into
add
mov
ljmp
pop
dec
jns
bnd
mov
mov
sub
ljmp
decl
in
sub
stos
sbb
add
pop
adc
push
cld
jmp
and
push
out
sbbb
ja
cs
dec
mov
mov
out
icebp
mov
mov
je
mov
push
repnz
fs
xchg
leave
fcomi
or
sub
std
arpl
xor
push
mov
lock
pusha
mov
mov
out
inc
mov
pusha
mov
call
lret
aaa
cld
and
daa
push
mov
scas
xchg
idivl
and
cmc
pop
inc
push
and
mov
adc
incl
jg
cmpsb
push
dec
lcall
js
lahf
aam
add
insl
or
loop
cmp
lahf
dec
mov
movsb
in
pushf
or
dec
fbld
call
jns
hlt
jae
repnz
mov
into
add
push
scas
jmp
add
mov
push
mov
inc
andb
lret
iret
std
pop
inc
aam
mov
lock
xchg
incb
cmpsb
cltd
fwait
divb
add
xor
std
or
mov
icebp
jae
stos
insb
cmp
or
jg
ljmp
xor
bound
pop
addr16
hlt
xchg
sti
xor
jbe
mov
jo
cmp
mov
ds
cmp
call
sar
loopne
sbb
pop
or
scas
test
inc
sti
dec
cwtl
and
push
push
cld
or
mov
lds
rorl
sbb
adc
xchg
jecxz
clc
mov
clc
adc
pop
xor
fbld
lds
nop
cmp
mov
insb
or
push
incl
sub
and
mov
xor
into
sub
lds
ljmp
sub
xor
add
arpl
scas
aas
sub
xchg
or
out
pop
cli
push
ret
mov
mov
aas
mov
push
pop
rorb
test
fcmovb
sub
push
add
add
call
adc
pop
fcompl
and
aad
cltd
outsb
repz
out
mov
xor
pop
mov
cmc
test
clc
jb,pt
arpl
and
std
pop
jecxz
aad
fldl
xor
sarl
mov
shrb
aad
sbb
pushf
loop
and
cmpsb
ja
iret
mov
out
rcr
aad
jge
sahf
js
dec
lods
adc
or
mov
es
xchg
outsl
inc
dec
movsl
xchg
jae
jmp
add
dec
icebp
cmp
pop
fdivrl
popa
xchg
pop
xor
push
and
enter
cmp
or
mov
add
jmp
dec
jns
rolb
mov
cwtl
test
push
xchg
js
jne
out
aaa
mov
outsl
scas
add
cmp
dec
rcll
inc
pop
fcompl
out
frstor
addl
loopne
mov
scas
aam
iret
movl
lods
negl
jno
xor
and
fdivl
loopne
inc
bound
mov
in
rol
sbb
not
testl
lcall
and
daa
data16
inc
addr16
ret
mov
pop
pop
je
push
clc
repz
clc
aad
pop
push
fistps
bound
add
jle
and
inc
ljmp
and
cmpb
jo
mov
pop
out
std
arpl
pusha
leave
or
cmc
out
lock
cmp
xor
in
fdivr
mov
xchg
in
fmull
stc
pop
jl
push
or
jno
pminub
rorb
lds
addr16
lcall
cmc
nop
lret
cmp
stos
cltd
int3
clc
daa
testl
and
stos
push
movsb
outsb
cmp
sbb
sti
cld
shrl
out
jge
lock
dec
sbb
andb
dec
xor
out
and
mov
and
inc
int3
ss
out
inc
adc
and
loope
add
in
arpl
in
push
xor
sbb
sbb
arpl
or
or
movsl
push
aaa
mov
adc
push
sbb
ret
sarl
out
loope
outsb
cli
insl
mov
ret
in
jg
arpl
dec
add
fisubrs
cli
and
loop
stc
rorl
jb
loopne
adc
out
or
ret
inc
addr16
pop
xor
fwait
mov
cltd
decl
mov
jbe
sub
ja
je
dec
jl
mov
loope
cmp
add
mov
fadds
scas
or
jg
lret
jg
fwait
dec
or
dec
push
jp
rcrl
mov
enter
xor
ljmp
je
stos
adc
inc
sub
test
imul
stos
shl
sub
and
in
mov
aas
popf
jecxz
sbb
lods
sbb
popl
std
or
xor
cmp
test
stos
jl
pop
scas
lock
ret
dec
stc
or
xchg
ds
and
ja
popf
sti
xlat
call
cmp
jp
leave
adc
fstpt
cld
fdivl
mov
mov
xchg
out
dec
cmc
lahf
pop
nop
rcrb
loop
push
bound
sbb
jg
mov
mov
fbld
cmpsl
pop
cld
iret
std
xchg
test
mov
test
ss
daa
mov
fistpll
jg
jmp
cmc
pop
sbb
icebp
dec
and
stc
add
lods
push
cmp
aas
jmp
ljmp
test
mov
mov
xor
jge
jno
filds
out
clc
adc
out
fidivrs
dec
sub
jnp
jbe
mov
and
adcl
iret
xor
adc
cld
aas
or
sti
fisttpl
sbb
hlt
mov
jae
or
sbb
inc
dec
lock
aas
dec
call
popf
loop
and
sub
pop
test
inc
sub
test
add
mov
cmp
ljmp
mov
inc
jb
and
and
xchg
xlat
incl
xchg
test
xor
push
sbb
add
lahf
gs
jae
outsb
lods
add
mov
jg
std
jg
jo
add
imul
mov
lds
clc
or
aam
mov
roll
shr
out
adc
mov
mov
sbb
cld
out
add
gs
jg
adc
sub
cmc
sahf
xor
sbb
inc
or
mov
ficompl
jne
idiv
sbb
mov
repnz
pushf
inc
push
push
inc
lods
jg
jecxz
jecxz
gs
or
cmp
jg
mov
sarl
dec
jbe
sbb
sub
mov
or
add
int3
insb
test
mov
cmp
ficompl
and
dec
jmp
outsl
sar
scas
les
jle
bound
pop
cmp
test
pushf
jmp
mov
fucomip
out
arpl
shll
pop
lods
push
jecxz
xor
inc
lds
daa
aaa
push
add
adc
fprem
mov
icebp
ja
or
jmp
mov
mov
neg
sti
pusha
mov
imul
fstpt
lds
loope
cli
cmpl
ret
or
mov
das
mov
jmp
arpl
mov
or
out
jge
xchg
daa
aam
xchg
mov
decl
jae
xor
mov
test
aad
out
push
push
add
inc
clc
jecxz
xchg
rolb
shrb
mov
and
fiaddl
mov
inc
out
jmp
mull
xor
xabort
xor
insl
hlt
decb
jmp
jmp
mov
mov
inc
daa
cmp
mov
pop
out
inc
test
fidivrs
sbb
inc
push
or
push
sbb
pop
jno,pn
xchg
xor
and
xchg
jo
sub
jl
jmp
add
into
add
repnz
mov
lock
icebp
sar
xor
pop
fwait
scas
fsubr
cmp
cmp
jge
loop
and
push
cmp
sbb
pop
lret
pop
add
push
xor
push
jg
push
int3
push
xor
jge
out
sbbb
push
push
mov
das
jle
mov
pop
scas
mov
mov
enter
and
negl
sbbl
addps
mov
inc
inc
ret
cmp
add
data16
orl
int3
lahf
add
jp
shrb
int3
mov
je
pushaw
dec
cmp
lods
addr16
cmp
push
aas
jmp
addb
pop
jmp
jg
push
in
xor
pop
add
lods
dec
sbb
xchg
add
in
push
cmpsb
fwait
clc
sub
insl
mov
mov
mov
enter
or
pop
add
popf
push
mov
test
lahf
in
and
rorl
scas
sti
dec
or
jg
es
mov
fidivrs
jmp
mov
mov
aas
sbb
divb
lock
cmp
lock
repnz
or
mov
xor
std
jmp
inc
sub
jg
and
pop
in
iret
xchg
xor
dec
das
lds
hlt
add
sbb
and
bound
xchg
mov
cmp
ja
clc
ja
arpl
popf
cmpsl
fsubs
ss
and
jbe
dec
inc
filds
xchg
adc
lahf
dec
cmpsl
inc
xchg
lcall
xor
jecxz
jg
cli
jecxz
dec
rcrb
sti
add
movsl
imul
lcall
dec
stos
in
imul
xchg
sub
sbb
pop
loope
lahf
sti
fistps
jb
inc
out
stos
stos
push
shr
lret
push
movsb
rcrl
mov
adc
in
scas
and
jg
adc
adc
xor
jl
loopne
jge
add
loop
and
inc
insl
out
pushf
push
aas
pushf
jle
cmpsl
push
out
sti
ja
fists
mov
imul
or
cltd
in
xor
sub
push
in
pop
push
push
les
add
xor
movsb
clc
jg
xor
xlat
outsb
mov
and
cmc
jle
mov
pop
xor
fldl
cmp
fmul
js
xchg
lcall
xchg
xlat
out
push
mov
loop
sub
push
push
lret
push
mov
mov
mov
popf
mov
xchg
cmp
and
mov
cltd
loop
cltd
aas
aad
pop
mov
mov
pusha
xlat
ja
clc
test
in
dec
insb
in
dec
addl
mov
out
xchg
out
clc
xchg
xchg
sub
mov
adc
lock
pushl
sub
lcall
jg
push
cmp
jg
loopne
std
pop
jnp
add
mov
and
lcall
imul
jmp
call
lock
clc
das
cmp
mov
in
test
xorl
xor
decl
aam
jl
sbb
xlat
cmp
hlt
xchg
call
xor
cmp
into
push
sub
inc
neg
sti
out
cmc
aad
xchg
jp
mov
loope
push
call
jecxz
push
insl
sub
inc
push
and
outsb
movsb
or
arpl
ud1
fwait
mov
sbb
jne
loop
push
or
mov
stos
jno
or
jge
mov
push
fmul
lea
test
sbb
sub
into
std
or
jp
inc
and
and
daa
popa
outsl
add
xor
push
pop
ficoml
xchg
xor
out
test
lcall
std
add
adc
jns
leave
cli
sbb
ja
ja
test
sbb
sub
xlat
pop
daa
mov
lods
fistl
mov
pop
cmpsb
mov
sbb
jg
adc
pop
add
inc
cmpsl
test
or
ret
cld
aaa
push
into
cmp
sti
add
and
in
stc
stos
xor
loope
cmpsl
rolb
or
lret
jmp
mov
cmp
add
repz
xchg
mov
add
call
xchg
pushf
cmp
shll
adc
xor
mov
mov
mov
aad
adc
push
mov
mov
sahf
and
mov
insb
or
jnp
lock
mov
out
cmp
idivl
xor
push
dec
jbe
mov
insl
pop
cmp
xor
sub
cmpsl
dec
rorb
lea
mov
lret
das
sbb
jl
mov
and
test
in
pop
mov
outsl
or
and
jne
ljmp
lea
into
jl
or
sahf
lock
iret
and
and
scas
lds
inc
jg
dec
add
xor
outsl
aas
push
jno
dec
loopne
shll
push
jecxz
cli
fs
jmp
or
clc
pop
xlat
jns
jnp
pop
mov
dec
mov
inc
fdiv
push
xchg
aas
les
fs
push
stos
sbb
mov
int3
fiadds
and
and
pop
cli
lea
div
and
cmpsb
test
sar
hlt
inc
mov
adc
aaa
int3
call
and
dec
jle
scas
xchg
sti
xor
dec
mov
xchg
ss
fidivrs
sbb
stos
xchg
iret
mov
clc
pop
push
int3
inc
shlb
mov
or
lds
mov
jmp
jle
mov
aad
out
iret
pop
stos
data16
loop
dec
in
ret
sar
mov
cld
cltd
mov
std
out
hlt
sbb
enter
cltd
les
xchg
push
hlt
jmp
adc
insb
in
mov
data16
add
add
cmpsl
mov
leave
jb
inc
lahf
sbb
push
pushl
in
mov
in
ss
fdivl
daa
push
sbb
insb
jnp
ds
std
mov
mov
loop
cmpsl
mov
and
xchg
jg
or
sahf
adc
dec
call
fldt
pop
inc
mov
and
pop
sbb
cmp
stc
mov
cli
cmpsl
mov
dec
lock
mov
pop
add
aaa
aad
or
ret
push
lds
or
mov
call
loop
push
outsb
pop
leave
aaa
filds
and
jmp
xor
jnp
aaa
mov
dec
fmulp
cmp
jg
movsl
push
xlat
in
stos
dec
ret
imul
les
jecxz
stos
movsb
mov
mov
dec
outsl
mov
repnz
mov
mov
mov
out
cmc
lahf
lods
adc
fbld
test
dec
test
cwtl
stc
cmpsl
sbb
jle
adc
jb
sub
mov
fists
pop
call
movl
lods
push
movsb
jg
loopne
inc
stc
jns
call
xor
outsl
hlt
in
mov
sbb
xor
ss
xchg
and
outsl
cmp
sbb
xchg
jne
cld
shl
push
mov
pop
loopne
aaa
lahf
aam
adc
push
jae
sub
outsl
adc
sbb
dec
insb
dec
cmc
add
or
shlb
dec
cmc
roll
icebp
pop
out
nop
jno
jge
mov
and
push
push
push
aas
shl
aad
mov
mov
fdiv
stc
out
arpl
adc
adcl
dec
lcall
stc
push
ja
mov
out
lods
push
pop
stos
mov
inc
fistl
xor
call
das
or
add
std
pop
jnp
sbb
mov
cmc
xchg
sub
lret
xchg
ljmp
jg
loopne
mov
call
or
cltd
xor
clc
mov
ficoml
sahf
aas
or
outsl
add
data16
fdivl
ficomps
insb
dec
lahf
cmp
inc
inc
push
pop
xchg
mov
sbb
aad
dec
ja
sub
dec
mov
aad
mull
jmp
pushf
pop
je
push
incb
neg
jmp
sbb
jle
adc
sar
adc
shlb
jno
sbb
cmp
pop
dec
mov
push
ret
lcall
and
dec
adc
setno
mov
arpl
orb
pop
mov
dec
loope
lds
push
mov
dec
mov
fucomip
mov
cmp
test
test
adc
lahf
lock
cmp
add
in
push
dec
and
lods
and
pop
cld
push
xor
push
cmpsb
out
mov
or
or
dec
pop
imul
mov
jp
hlt
or
cmp
fcomi
xor
dec
movsl
scas
bound
dec
and
push
or
push
mov
cmp
out
pop
decl
jg
jae
or
and
imul
or
idivb
push
pop
hlt
mov
jo
rclb
cli
ror
fdivrs
and
sub
ljmp
idivb
push
lock
imul
xor
shl
add
cld
mov
lods
or
mov
sysret
clc
sbb
cmpsb
ljmp
cmp
icebp
inc
out
jne
and
mov
add
out
cmp
jg
push
pop
sbb
rcll
cs
or
add
sbb
imulb
sbb
test
int
push
pop
push
cltd
shr
or
adc
mov
lock
lcall
shlb
cmp
loope
mov
sbb
mov
ljmp
xlat
inc
enter
incw
fidivs
adc
inc
push
cwtl
cmp
sbb
cwtl
test
hlt
lret
jo
xor
out
cwtl
sbb
call
fistpll
or
xlat
cmpsl
xchg
mov
mov
push
ret
fnstcw
inc
xchg
push
mov
fmull
ja
adcl
sub
lods
fisttpl
mov
fsubr
inc
ja
incl
lcall
push
jg
and
lahf
stc
jae
icebp
nop
and
mov
mov
cmc
dec
vmovdqa
in
fstl
cli
test
mov
cmp
adc
add
test
into
mov
inc
or
int
dec
and
push
mov
aam
mov
aas
js
imul
sti
cmpb
mov
or
dec
lea
pop
fistpll
shl
loop
clc
maskmovq
notl
pop
jg
leave
lahf
and
pop
xchg
ja
test
xorb
test
cmpb
sti
cmp
fnstsw
test
and
mov
jo
cmpsl
fistps
ljmp
jecxz
mov
jg
repz
push
cmp
hlt
aam
iret
loop
mov
nop
insb
movsb
rorb
adc
mov
lock
dec
jge
mov
les
jmp
push
popa
popa
adc
arpl
imul
mov
pushl
mov
fnsave
inc
fld
enter
ficompl
loop
std
inc
loopne
aad
jne
scas
sbb
xor
cmp
jb
jae
movsb
xorb
lea
and
cmpsb
es
lahf
icebp
aas
mov
and
jnp
hlt
fwait
test
xlat
add
loopne
dec
jae
mov
adc
ss
cmp
sbb
ss
xchg
sbb
cmp
loop
mov
std
and
rolb
ficompl
loop
in
lods
lods
inc
divb
xlat
adc
mov
icebp
loopne
pop
clc
fsubs
mov
and
pop
into
movsl
cwtl
jo
xchg
inc
add
sub
mov
add
in
cmpb
jp
cmp
mov
int3
in
int3
incl
cli
rorl
lret
add
cmpb
call
fs
lahf
lock
icebp
pop
jmp
dec
loop
orb
insb
lcall
push
jg
fcomps
mov
mov
pushf
push
fdivrl
cmp
idiv
inc
sbb
js
in
xlat
or
loopne
scas
rcrb
cmp
pop
sbb
into
popf
and
pop
lahf
nop
mov
call
sarb
rorl
jg
adc
in
mov
bound
cmp
jb
xchg
and
cmp
outsl
imul
or
jnp
cld
mov
sub
xchg
and
call
leave
lret
daa
gs
out
adc
add
jp
pop
xchg
push
sbb
pop
cmpsl
movsl
push
xlat
sbb
jb
jl
loopne
pop
jne
clc
push
lahf
mov
loop
jge
and
push
fwait
js
cmp
mov
push
sbb
cmpl
mov
mov
and
loopne
or
sbb
insb
in
bound
fcmovnb
cwtl
mov
push
loope
jae
and
jp
jns
shll
jbe
test
idivl
inc
xlat
stos
or
sbb
test
fdivrs
je
or
popf
das
dec
rcll
lcall
adcl
lret
mov
pop
cmp
sahf
or
fists
in
repz
or
jo
lods
inc
aad
fst
jmp
ljmp
add
inc
jle
mov
test
andl
pop
mov
mov
mov
cmp
adc
leave
push
loope
xchg
aas
inc
jnp
jo
sbb
shrl
insl
and
and
subb
xor
out
bound
outsb
lcall
dec
push
out
mov
in
xorl
imul
and
aaa
les
cli
pushf
adc
mov
stc
aad
fiadds
inc
mov
xchg
loopne
mov
in
hlt
jnp
mov
dec
pop
jbe
mov
ret
loope
cmc
add
adc
aaa
clc
xor
push
in
and
out
int
int3
sub
ret
test
mov
push
or
push
aas
adc
lret
imul
lods
das
push
das
mov
mov
iret
std
pop
mov
adc
dec
sti
into
mov
fisubs
dec
jecxz
sbb
dec
sbb
xchg
mov
inc
adc
sbb
xor
pop
jnp
mov
mov
sbbl
dec
cmp
adc
mov
aad
ret
mov
jo
sbb
push
stos
popf
fisttpll
ja
xchg
push
shl
pop
addr16
test
and
test
daa
xlat
jmp
ja
dec
xchg
push
xchg
mov
cmp
or
lea
lea
scas
push
sbb
fidivs
push
idiv
sub
int3
sbb
xor
fwait
ds
ret
flds
fistpll
aam
sub
adc
cmp
outsl
js
sbb
shlb
push
push
push
decl
jg
jge
fcomps
fwait
mov
sar
movsb
movsb
cli
and
ja
in
mov
fildll
sbb
insb
jecxz
mov
loope
push
icebp
ds
pop
push
pop
mov
jle
cmpsl
lcall
sbb
mov
addr16
fildll
lock
xor
daa
jp
aam
addr16
loope
daa
lock
jno
adc
shl
fcoml
js
pushl
ds
cmc
xor
sub
sbb
push
repz
jg
imul
pop
jecxz
mov
sbbl
int
xchg
lea
pusha
xor
pop
lea
sbb
cmc
pushl
fwait
jecxz
xchg
icebp
popa
jg
adc
adc
in
pushf
sar
mov
cs
mov
dec
and
cmpsl
iret
shl
xchg
jg
push
ljmp
fidivrl
push
movsl
xlat
movsl
push
cmp
add
sub
std
push
add
das
fisubrl
lret
jmp
xor
sbb
pop
ljmp
sbb
imul
inc
decl
adc
xor
mov
decl
jbe
jmp
cwtl
mov
and
out
aad
decl
jg
mov
inc
je
inc
mulb
jae
mov
aam
pop
lods
dec
mov
sub
fdivr
and
aas
cmp
cwtl
movsb
mov
sti
ja
loopne
bound
pop
loop
mov
jo
jmp
and
lret
add
lds
add
cli
dec
sbb
mov
cmp
jg
mov
mov
adc
sbb
fstpt
test
push
into
pop
add
jecxz
dec
add
sti
jnp
pop
outsb
adc
insl
aas
sub
dec
push
stos
fistps
ds
in
shl
mov
ja
fwait
cmpsb
out
popa
in
test
sub
ja
stos
sbb
mov
fwait
pop
jecxz
inc
push
sub
cmp
mov
out
xor
inc
push
fs
popf
sti
pop
fsubr
clc
hlt
repnz
lcall
aad
mov
mov
or
bound
addr16
fnsave
js
fisubl
xchg
sbb
out
mov
pushf
jbe
jnp
xor
xchg
push
loope
shl
pop
mov
mov
cli
lahf
sti
jae
xorl
jmp
aaa
cmp
cs
jg
xchg
repz
push
mov
pop
xor
sbb
clc
aas
mov
mov
loope
cld
xchg
fdivr
cmp
jo
pop
je
test
mov
push
jg
mov
cmp
pop
inc
out
mov
sbb
int
mov
cmp
iret
stc
es
and
jle
mov
out
sarb
aas
inc
inc
xchg
and
adc
lea
mov
mov
repnz
bound
dec
mov
jb
sub
scas
or
loopne
cld
cmp
xor
jnp
pop
sub
add
push
mov
jbe
jo
out
std
cwtl
adc
dec
mov
test
les
aam
add
pushl
movsb
push
sbb
mov
sbb
call
jle
lods
lds
arpl
clc
ja
int
xorl
jmp
mov
int3
jg
cmc
push
shll
jecxz
cs
das
push
push
hlt
aas
mov
js
addr16
fcmovu
adc
mov
xchg
xchg
xor
jg
inc
sub
je
pop
pushf
cmp
ja
fidivrs
mov
xchg
inc
nop
psubusw
rcr
int3
rcr
js
cmpsb
stc
push
lods
lods
add
ds
cli
hlt
pop
imul
fsts
pop
loop
jl
jl
push
sbb
push
xchg
stos
add
push
shlb
clc
les
lods
xchg
scas
lcall
in
shlb
push
pop
sub
lret
jecxz
add
fadds
push
movsl
movb
cli
xchg
inc
mov
add
pop
sub
sti
pop
sbb
fwait
movsl
ret
dec
mov
pop
nop
inc
pop
lcall
add
jo
pop
je
lock
sub
bound
stc
popf
jo
push
inc
movsb
cmp
dec
daa
cmp
add
mov
clc
mov
aaa
adc
add
cmp
into
sub
adc
pop
mov
or
shrb
in
clc
mov
mov
stc
pop
lret
jecxz
lcall
sub
repnz
pop
inc
push
mov
sub
cmpsb
adc
adc
push
sbb
insl
cli
fnstsw
mov
outsb
add
stos
jnp
cmpsb
stos
scas
cmpsl
fsubrl
push
add
jg
outsl
sbb
in
xor
repz
inc
int
dec
sbb
adc
jecxz
aas
lcall
inc
pop
in
cmp
movsl
fwait
ljmp
hlt
rcll
push
jecxz
ljmp
and
sub
ja
pop
or
sbb
xchg
scas
in
push
cmp
and
out
dec
clc
arpl
xor
jg
in
adc
outsl
lock
cmc
rorb
xor
ss
and
pop
adc
push
cmc
adc
call
lcall
call
cli
mov
pop
dec
dec
xchg
mov
inc
add
inc
adc
call
adc
push
dec
adc
xor
and
test
inc
test
jp
dec
add
adc
pop
adc
sub
adc
pop
sub
ficompl
cmp
push
xor
push
and
in
andb
dec
add
adc
stos
mov
or
jp
in
or
dec
outsl
stos
inc
stos
mov
lcall
push
insl
gs
mov
js
pop
xchg
pop
mov
xor
push
inc
ret
sbb
adc
mov
add
sub
mov
adc
pop
or
out
mov
xor
sub
or
push
popa
sahf
push
or
bound
push
inc
les
in
adc
xor
jno
test
or
mov
lcall
rorl
push
ret
jp
dec
dec
adc
add
popa
dec
and
ret
adc
jge
mov
xor
cwtl
mov
fsts
cwtl
jl
imul
mov
cld
inc
mov
jnp
inc
je
rclb
popa
jnp
jbe
xor
jp
arpl
ds
push
daa
mov
xlat
mov
or
push
mov
adc
int3
scas
push
or
fs
sbb
mov
jns
addb
push
mov
xor
pop
popa
inc
loop
mov
lods
gs
daa
adc
add
mov
mov
mov
jmp
std
sbb
sub
add
mov
ret
pop
or
jmp
sbb
sub
pop
dec
mov
xor
jmp
dec
rcrb
inc
cmp
xor
mov
test
mov
add
fwait
ret
movq
mov
mov
jno
sbb
clc
bound
daa
xor
jno
or
loopne
sbb
or
aas
jb
stos
push
popa
xor
add
bound
mull
testb
push
test
mov
dec
xchg
bound
rcr
scas
mov
or
xor
dec
dec
add
adc
je
push
dec
popf
xor
and
adc
and
add
mov
rcrl
cmp
stos
xchg
mov
mov
cld
rcrl
xor
mov
ret
add
push
or
push
or
idiv
das
or
test
stos
stos
divb
or
or
addb
inc
mov
cmp
and
fsubl
cmp
jg
lods
xchg
stos
bound
jne
mov
clc
dec
fbld
in
dec
adc
call
push
push
mov
lret
mov
int
xor
gs
pop
js
jecxz
in
mov
sbb
jge
stos
mov
push
sub
mov
insb
mov
insl
daa
ja
adc
push
xchg
es
adc
mov
loope
pop
mov
inc
sbb
mov
jno
sar
jg
mov
andl
push
insb
mov
add
or
or
push
and
mov
gs
push
xchg
ret
mov
ret
and
lods
and
dec
fiaddl
lret
or
cs
adc
pop
push
xchg
divb
inc
adc
aaa
loop
ret
fbstp
movb
popa
xor
inc
mov
clc
sub
mov
push
push
out
add
dec
popa
insb
mov
pop
outsb
jmp
sbb
dec
rolb
mov
iret
pop
sbb
dec
addr16
mov
aam
int3
out
push
add
or
popa
daa
lcall
gs
mov
fucomi
imul
gs
fcmovnb
insb
inc
rcrb
ret
mov
mov
jns
rcrl
push
xchg
adc
push
add
mov
test
mov
jmp
popa
add
push
adc
sub
push
mov
mov
push
or
ret
imul
jbe
dec
lea
into
cmc
sbb
dec
jne
aad
pop
adc
inc
rol
ret
inc
repz
in
inc
ret
inc
bound
adc
push
lahf
shll
sbb
je
mov
mov
adc
adc
scas
sbb
loopne
loope
cld
jno
fcmovu
ds
adcb
addl
push
lcall
xchg
mov
daa
dec
sbb
jecxz
cld
int
mov
stos
add
cs
pushf
xor
mov
ret
or
movsl
jle
movsl
push
into
push
adc
inc
push
cld
loopne
sbb
cmp
sbb
push
pop
pop
loopne
lret
pop
xor
sub
out
add
sbb
mov
mov
lret
mov
adc
xlat
pop
into
iret
ret
in
popa
pop
cmp
fmul
mov
es
fmulp
or
repnz
push
ret
and
sbb
inc
jo
mov
mov
inc
pop
cmp
dec
ret
push
sbb
ljmp
inc
xor
adc
add
mov
mov
int3
mov
daa
repnz
sub
adc
dec
adc
pop
mov
aaa
push
and
push
bound
and
imul
sbbl
test
add
xchg
or
cmp
mov
or
out
sub
sahf
xor
cwtl
rcl
lock
mov
or
inc
sbb
mov
pop
and
pop
lcall
in
xor
mov
add
hlt
adc
add
mov
jbe
xor
and
gs
mov
xor
add
inc
add
mov
imul
mov
pushf
or
inc
test
into
mov
aaa
add
sbb
xor
mov
notl
push
rcll
scas
cmp
mov
lods
or
mov
inc
push
fdivr
and
cs
lods
shrl
mov
xor
and
mov
lea
aas
jp
mov
subl
mov
imul
xchg
mov
daa
in
xchg
or
aaa
inc
mov
inc
lret
bound
pop
or
testl
or
cmpsb
out
push
xor
xchg
pop
sbb
and
dec
jnp
loop
call
shll
jno
and
push
cwtl
push
fimull
popa
push
outsl
out
lds
stos
cld
sar
dec
sbb
add
and
push
xchg
scas
pop
push
icebp
xchg
push
inc
vminss
je
popl
cmp
inc
push
inc
insb
mov
and
ret
dec
gs
sbb
adc
loopne
xorl
adc
jb
test
lcall
sub
loope
fwait
call
ss
xchg
jnp
gs
nop
out
pop
and
ret
push
js
repnz
mov
pop
and
jno
mov
int
dec
ret
ficompl
xchg
pop
pop
jne
or
xlat
into
mov
jno
cli
or
cltd
hlt
mov
cwtl
xor
bound
cld
lcall
mov
dec
xor
push
xchg
roll
ret
mov
push
call
xor
pop
push
ret
cmpsb
stos
sub
imul
jecxz
js
or
push
imul
pop
andb
or
testb
loopne
sbb
inc
cld
sub
add
mov
push
inc
dec
adc
imul
pusha
dec
in
sub
rclb
mov
dec
push
xor
call
jb
mov
dec
adc
mov
inc
mov
xchg
mov
test
cmp
js
inc
enter
xchg
and
add
mov
add
popf
pusha
add
jae
jb
shlb
dec
testl
or
into
push
adc
xorb
ret
les
gs
push
push
ret
cmp
daa
insl
sarl
ds
mov
push
xor
and
mov
sbb
dec
mov
mov
and
jp
xchg
rcrb
mov
xor
jno
dec
data16
sub
inc
mov
add
add
push
mov
pop
psrlq
push
pop
bt
nop
sub
jge
adc
lock
clc
shl
test
lcall
pop
add
jno
jno
pop
jnp
inc
movsl
sbb
stos
mov
xor
inc
cmp
adc
fsubl
cltd
cmp
daa
sub
sub
mov
cld
fadds
rcrl
aad
jae
shll
add
insl
sub
in
add
ret
xor
inc
inc
xor
lods
push
xchg
repz
jg
mov
fisttpll
sahf
sbb
sub
fistps
xor
and
notb
sbb
inc
and
lcall
xchg
shrb
cmc
mov
inc
js
arpl
lret
mov
ror
dec
or
adc
xchg
inc
pop
pusha
cmp
scas
shrl
fstl
mov
xor
das
aad
movsb
outsl
or
hlt
push
dec
xchg
fidivrl
xchg
iret
pop
movsl
out
lea
mov
in
pop
or
sbb
dec
scas
or
popf
add
in
iret
adc
addr16
mov
popa
xor
mov
xlat
inc
aam
or
hlt
mov
scas
mov
push
adc
xor
in
xchg
push
mov
cmp
cli
cli
sub
sub
daa
xchg
push
adc
xlat
mov
or
or
inc
push
dec
mov
sub
cmpsl
inc
cmp
rclb
or
inc
scas
into
fcoms
push
popa
jo
push
into
inc
or
xor
add
or
xlat
and
mov
push
lea
test
insl
or
pop
arpl
push
popa
in
es
ficomps
or
adc
xor
sub
ljmp
push
test
adc
xor
inc
iret
insb
sbb
xor
mov
ds
in
insl
dec
dec
inc
push
orl
and
je
push
mov
or
sbb
dec
loope
stos
cmp
icebp
mov
push
inc
scas
in
lret
adc
mov
aaa
mov
scas
push
aaa
cld
lret
xor
cmp
aad
adc
adc
pop
inc
ja
jecxz
or
push
iret
cmp
hlt
fcoms
xchg
or
xchg
pop
adc
push
push
mov
sbb
mov
push
adc
or
mov
int
dec
hlt
in
mov
xor
xchg
jmp
xchg
pop
xchg
loopne
das
stc
inc
mov
lds
es
push
mov
stos
dec
cld
dec
insl
add
fsubl
popa
test
dec
pop
inc
mov
dec
push
mov
scas
sub
sub
sbb
cmpsb
inc
lds
push
push
and
outsl
mov
hlt
jmp
pop
adc
xor
or
push
es
or
push
mov
testl
push
push
xchg
jno
xor
sbb
cmp
mov
ret
insb
scas
pop
lcallw
push
adc
xor
push
mov
add
dec
scas
and
int3
adc
rorl
mov
xor
dec
xor
int3
cld
push
xor
mov
mov
scas
pusha
js
xor
mov
bound
hlt
jecxz
pop
inc
mov
add
cli
xchg
rol
jno
dec
test
popa
mov
mov
or
stos
mov
into
ret
lcall
push
mov
mov
fnsave
xchg
cmp
mov
xchg
mov
inc
fwait
subl
cmp
xchg
inc
pop
unpckhps
mov
push
stos
sub
bound
xor
insb
into
xchg
push
push
cs
rorl
inc
jmp
push
faddp
jno
insl
inc
imul
mov
jl
dec
pop
or
or
xchg
inc
sub
pop
xor
sub
mov
push
popa
into
push
popa
enter
shlb
mov
shll
rolb
ffree
stos
push
mov
rcrb
popa
adc
xor
fwait
cmp
jl
adcb
in
inc
std
or
push
push
push
push
mov
fcoml
add
or
push
aaa
push
movups
jae
movb
dec
adc
hlt
adc
lds
aam
fcomps
add
fbstp
into
ret
inc
adc
dec
fs
outsl
mov
xor
loopne
addr16
jmp
push
push
sbb
mov
mov
adc
or
xor
pop
int
mov
arpl
pop
sub
jecxz
pop
add
mov
jl
lcall
fs
jno
inc
sub
insl
dec
xchg
sbb
hlt
xor
data16
btc
add
push
mov
dec
push
arpl
iret
ds
xchg
adc
jge
sarb
popa
rolb
mov
es
jno
inc
push
pop
mov
ret
adc
add
jno
mov
mov
out
and
clc
rclb
jae
adc
ret
test
pop
sub
ret
add
lock
mov
jnp
insb
push
push
sbb
scas
push
int
int
lret
or
mov
gs
fwait
lds
shlb
xchg
stos
adc
stc
add
hlt
mov
or
cmc
xor
dec
ret
push
insl
aad
dec
sub
or
out
add
inc
sub
sbb
mov
xor
sbb
lds
inc
shll
dec
outsb
pop
adc
cmp
mov
rcrb
lds
int3
sub
add
xchg
or
jae
adc
pushf
mov
push
rolb
scas
mov
mov
push
enter
fnsave
addl
lds
jmp
fbstp
test
pop
mov
or
outsl
loopne
mov
mov
dec
jo
shll
xor
push
mov
xor
jno
adc
mov
mov
mov
inc
push
xor
push
xchg
outsb
push
mov
add
bound
sti
push
les
push
js
mov
inc
xchg
popa
enter
ja
mov
and
push
add
shrb
dec
fisubl
stos
sub
pop
rorb
addr16
inc
add
cwtl
xchg
fmuls
adc
add
jae
je
aad
sbb
pop
arpl
xor
loopne
sbb
inc
xchg
icebp
mov
js
xchg
shrl
mov
mov
mov
push
aad
addr16
es
shll
pop
sarl
sub
cmp
gs
loopne
add
subl
inc
jo
xchg
add
dec
mov
inc
rcrl
pop
sub
test
movl
ret
pop
mov
out
mov
loopne
sbb
cld
test
push
adc
jl
mov
out
mov
insb
orb
cld
fadds
xor
fcomp
adc
cmp
mov
scas
jnp
test
xor
fsubrl
or
lods
inc
adc
jmp
fldl
clc
mov
gs
xor
test
mov
or
test
and
pusha
pop
cmp
dec
cs
mov
and
cmc
and
adc
sub
or
xchg
insl
jecxz
push
imul
pop
mov
loope
cli
lods
stc
dec
dec
cmp
test
mov
and
mov
loopne
imul
fcmovne
push
rclb
mov
in
add
scas
or
pop
jo
mov
jno
es
add
fiaddl
xlat
mov
jno
dec
popf
mov
cmp
subb
push
adc
adc
stos
and
movsl
add
bound
cmp
or
shl
mov
push
leave
xchg
pop
bound
cmpsb
dec
push
xor
jb
or
pop
cmp
rcrl
mov
or
sbb
lahf
xor
pop
dec
mov
call
adc
stos
xor
inc
ret
das
push
nop
aam
mov
lds
push
add
cmp
mov
inc
or
dec
jno
ss
int
mov
mov
mov
ss
push
push
mov
arpl
inc
mov
fbld
xchg
mov
inc
into
ror
dec
pop
jae
test
dec
adc
push
pop
xchg
mov
mov
lret
int3
adc
sub
dec
xor
mov
adc
inc
inc
sub
pusha
clc
test
movsl
xchg
inc
hlt
dec
stos
add
cmovno
je
mov
push
pop
movsl
dec
sub
mov
mov
clc
test
scas
fidivrs
popa
pop
mov
popf
mov
push
sbb
aas
jo
push
mov
xor
pop
cs
rorb
lock
jno
adc
xor
lcall
rcr
sbb
lcall
add
add
adc
add
loopne
enter
or
add
inc
add
jo
jno
cmpb
popf
mov
incb
incl
arpl
inc
into
dec
add
mov
gs
add
test
cmp
add
dec
push
imul
mov
dec
mov
es
adc
gs
pop
mov
adc
out
cmpsb
pusha
and
ret
hlt
inc
dec
xor
mov
mov
xor
cmpb
mov
lds
rorb
jno
mov
aad
inc
dec
lret
xchg
out
gs
mov
xchg
es
mov
sub
rol
adc
adc
push
jae
test
add
andb
mov
adc
gs
cld
lods
test
hlt
ret
daa
push
pop
mov
xchg
pop
cmp
das
push
adc
or
fildll
fcoml
dec
les
mov
adc
gs
rorb
xorl
decb
loop
xchg
jnp
jne
test
push
sub
and
outsb
lods
imul
adc
inc
cwtl
sub
test
mov
inc
addb
out
mov
hlt
mov
inc
adc
push
mov
ret
loopne
mov
jmp
cmpsb
push
orb
push
bound
mov
push
pop
sub
inc
shlb
inc
je
test
inc
adc
loope
inc
fdivrs
adc
mov
mov
movsb
enter
push
inc
mov
gs
rol
lret
push
arpl
or
push
test
adc
pop
sbb
daa
shlb
mov
ds
stos
mov
inc
mov
push
and
inc
mov
inc
mov
adc
xor
pop
adc
jb
scas
sub
in
push
clts
rorl
addr16
xchg
rorl
mov
or
insl
xor
inc
mov
xorb
test
lea
push
push
lahf
mov
sbb
pop
shrb
add
sub
or
sbb
sub
xchg
sbb
sub
push
push
and
inc
loope
push
pop
lea
mov
mov
sbb
aad
xchg
jecxz
push
roll
mov
clc
rclb
jno
bound
xchg
mov
mov
push
js
push
cmp
xor
dec
test
xchg
lods
mov
xchg
adcb
xor
rcrl
sbb
cli
inc
push
pushf
xlat
push
push
fildl
sub
jns
jl
cmp
aam
pop
or
test
push
outsl
dec
xchg
mov
in
fildl
out
ror
bound
xchg
pop
rcrl
popa
in
jno
xchg
cmpb
xchg
loopew
loope
repnz
inc
lret
inc
js
mov
mov
xchg
push
jnp
mov
sub
mov
mov
or
nop
in
pop
jo
xchg
mov
mov
cmpsb
test
and
mov
and
mov
ficoms
cld
push
cmp
add
arpl
push
and
pop
add
mov
gs
sbb
test
cli
lcall
or
cwtl
test
into
adc
pushf
add
fisttpll
adc
sti
mov
cmp
shrb
inc
mov
xchg
decl
dec
lods
xor
faddp
inc
popf
out
add
mov
push
out
popa
and
daa
mov
insl
inc
cmpsb
sub
mov
mov
pop
mov
aas
inc
imul
fnstenv
or
mov
or
gs
jl
les
xor
andl
inc
mov
enter
push
sbb
push
sbb
pop
les
xor
push
stos
aad
add
mov
sub
mov
jno
and
insl
dec
mov
or
push
clc
stos
gs
ret
xor
pop
pop
inc
aam
pop
jmp
mov
mov
sub
sub
scas
cmp
in
scas
in
shll
nop
daa
add
into
rolb
or
test
rorb
fidivrs
inc
gs
mov
test
push
sarb
and
cmc
aam
rorl
push
sbb
ljmp
push
pop
call
bound
mov
out
outsb
pop
sti
pop
sub
add
mov
mov
and
add
inc
cltd
xor
xor
sbb
sti
xor
jae
pop
mov
scas
push
mov
pop
cmp
xor
rol
add
test
sbb
out
xchg
ret
sbb
mov
mov
std
into
flds
push
rcll
pop
xor
xlat
inc
add
jp
xchg
adc
test
add
mov
sbb
int3
mov
imul
hlt
js
inc
lahf
repnz
aad
rcll
pop
hlt
or
in
ret
add
daa
shlb
or
daa
mov
repz
xor
and
sub
sbb
out
push
mov
imul
and
repnz
mov
hlt
popa
imul
jmp
inc
xchg
shlb
decl
jge
gs
dec
pusha
dec
xor
jp
std
stos
or
insb
sbb
aaa
cltd
mov
sarb
xor
rol
sub
xor
inc
ja
mov
mov
mov
hlt
xlat
adcl
or
test
sbb
mov
pop
jnp
inc
fldl
dec
repnz
mov
push
test
or
fcmovnb
push
leave
xor
cmp
mov
pop
ja
sub
and
sub
or
mov
lcall
ret
in
xor
out
out
push
lods
das
mov
cmp
mov
andl
push
imul
add
femms
pop
and
dec
mov
aam
mov
imul
dec
sub
xor
into
out
add
shll
xchg
mov
fimuls
cmpsb
jg
sbb
inc
cmp
mov
sub
adc
rclb
dec
push
jecxz
push
fwait
cltd
cld
add
sbb
daa
test
popa
inc
mov
dec
inc
out
leave
mov
adc
gs
mov
pusha
dec
jne
cmpsl
out
ret
aad
pop
jb
mov
push
shll
push
xor
add
cmp
sub
mulb
xlat
add
pop
insl
and
stos
popa
in
or
xchg
and
push
scas
js
and
insl
mov
push
pusha
idivb
lds
fisubrs
movsl
pop
inc
mov
subb
cli
xor
inc
cs
jnp
add
cmp
roll
stos
andb
dec
mov
sub
jl
push
pop
mov
pop
hlt
or
fidivl
dec
std
pop
push
data16
movsl
gs
mov
into
mov
rolb
pop
push
mov
fs
mov
mov
adc
adc
loope
push
mov
out
lods
inc
adc
int
add
lods
cmp
sub
test
shll
movl
pop
subb
dec
test
adc
pop
setl
inc
mov
or
popw
cmc
lcall
roll
inc
lahf
pop
xchg
adcb
stos
mov
or
xchg
xor
sub
adc
lds
pushf
and
mov
push
jp
or
push
ret
popa
orl
xor
mov
sbb
insb
inc
in
push
subl
sub
push
cs
jmp
adc
inc
adc
mov
and
lds
xchg
mov
push
lcall
addb
inc
mov
js
dec
stos
jmp
inc
and
jp
sarl
ja
or
je
dec
inc
cmp
push
imul
xchg
xor
arpl
aas
xlat
mov
push
add
cmp
mov
scas
imul
div
mov
jg
jo
insl
bound
outsl
sti
push
pusha
outsl
xchg
inc
imul
shl
xchg
call
jmp
jbe
pop
cld
in
or
cmp
test
mov
fcomp
push
fldt
daa
jno
sbb
data16
mov
subb
cs
mov
cmpsl
xor
icebp
jno
cmp
stos
inc
jb
cmp
inc
inc
mov
mov
sub
dec
mov
pop
add
jo
pop
jmp
pop
push
shl
adc
adc
mov
bound
cmp
xor
test
push
aam
aam
inc
fnsave
ljmp
cmpsl
aad
orb
stos
icebp
sbbl
out
stos
mov
inc
call
mov
add
push
into
jecxz
push
rol
roll
push
jae
cmp
loop
xchg
imul
mov
sub
shl
jnp
jne
push
psrlq
iret
and
and
push
into
cli
scas
mov
or
fiaddl
test
or
rol
cld
sahf
leave
add
dec
pusha
add
adc
aad
xlat
inc
pop
xchg
bound
cmpsb
or
jmp
scas
mov
roll
jo
rcl
jmp
pop
sub
sub
push
or
inc
jae
mov
mov
jmp
push
sbb
adc
mov
mov
outsb
mov
in
js
into
sarl
fisttpl
out
shl
adc
mov
jp
jecxz
enter
sub
sti
fildll
pop
push
outsl
sbb
roll
sbb
inc
pop
inc
lcall
adc
or
popf
dec
scas
mov
cmp
xchg
push
pop
dec
push
in
xchg
or
add
cmpsb
mov
mov
add
rcll
jnp
sbb
jnp
mov
mov
mov
pop
outsl
mov
lea
mov
adc
xorl
push
adc
daa
js
or
out
lar
lret
loopne
scas
hlt
test
cld
push
add
jmp
dec
das
cmp
repz
test
dec
pop
and
cwtl
jmp
fidivl
sbb
or
mov
add
mov
mov
mov
mov
cli
mov
push
adc
data16
adc
out
das
sub
adc
sbb
into
ror
xor
cld
xor
adcl
repz
xor
lods
lret
loop
out
cmp
inc
jecxz
jp
stos
shl
sub
add
jecxz
add
xor
in
fldenv
inc
imul
dec
cld
decl
add
daa
arpl
push
outsb
jbe
add
insb
push
addb
push
lock
jae
mov
imul
popf
push
in
inc
adc
daa
and
mov
add
xchg
pop
loop
pop
into
gs
inc
sbb
gs
jp
jo
or
imul
xor
push
mov
dec
stos
cmc
add
cmp
lcall
dec
and
sahf
test
ds
fmuls
cmc
pusha
jno
add
insl
add
mov
cmp
adc
push
push
push
setnp
inc
adc
pop
movsl
dec
xor
sbb
pop
setp
mov
or
mov
xchg
neg
cmp
mov
dec
gs
sub
pop
or
and
push
inc
sbb
xchg
fidivrs
js
sahf
jnp
jns
mov
push
and
int3
lret
pop
ja
rclb
push
xor
cs
popa
inc
nop
cmp
or
aam
icebp
sbb
aam
sub
adc
loop
jb
pushf
stos
pusha
xor
pop
shlb
outsl
aas
sub
add
jmp
mov
xchg
mov
pop
dec
or
sbb
sbb
stos
idiv
orb
sub
jg
xor
out
stos
mov
stos
jno
mov
rclb
mov
mov
hlt
into
add
icebp
popf
mov
dec
mov
mov
lock
pop
adc
and
push
addl
cmp
dec
adc
lea
mov
jge
pop
mov
hlt
mov
fistl
popa
pop
lcall
dec
sbb
call
push
aam
cmc
loope
add
mov
xor
dec
gs
or
js
or
cmp
xchg
rol
sub
faddl
push
mov
or
sub
mov
ja
scas
add
xchg
add
in
adc
in
inc
int3
adc
pop
or
pop
imul
or
sub
inc
into
push
mov
and
pop
cmp
enter
test
repz
cltd
push
pop
lea
lea
jp
sbb
cltd
mov
adc
add
push
push
mov
mov
add
pop
sarl
repz
sub
outsb
dec
scas
ficoms
insl
xor
test
jo
pop
xorb
or
sub
push
subb
gs
mov
arpl
call
jg
scas
or
xor
push
xchg
stos
push
push
imul
daa
hlt
mov
mov
popa
mov
add
inc
push
dec
cmpsb
sbb
je
jno
push
and
stos
push
lds
or
mov
call
insl
add
std
or
cmp
movsl
jg
pop
pusha
shlb
mov
pop
jecxz
inc
cmpsl
insb
mov
adc
push
outsl
stc
jo
inc
les
sub
popa
popa
daa
and
adc
in
daa
pop
inc
sub
inc
inc
pusha
mov
or
mov
mov
ror
mov
popa
dec
mov
mov
add
test
mov
roll
push
cmp
rclb
inc
mov
adc
xchg
aam
mov
dec
loope
outsb
hlt
mov
add
xchg
ss
inc
lea
dec
adc
es
xchg
ds
cmpsl
ret
sbb
hlt
rorb
xchg
xchg
push
bound
mov
test
pop
stos
ss
add
adc
xlat
ret
daa
xor
adc
fstl
xchg
jo
push
adc
jp
add
push
test
wbinvd
out
push
push
mov
mov
bound
gs
mov
mov
or
in
add
or
pop
push
push
push
test
inc
shlb
rclb
push
arpl
test
shl
test
sbb
xor
wrmsr
rol
cli
add
push
xchg
or
adc
in
mov
mov
jnp
xlat
push
test
jo
dec
std
cwtl
cwtl
icebp
insb
xchg
fmul
pop
xor
dec
adc
jb
jnp
inc
shrl
fadds
push
leave
mov
enter
cmpsb
lods
stos
inc
fcoml
ljmp
test
fadd
fs
sub
inc
pusha
leave
fldenv
out
adc
aam
stos
and
xchg
or
lcall
mov
mov
cmp
adc
pop
xchg
mov
xchg
sbb
rol
mov
or
hlt
mov
xchg
popa
and
mov
fmull
test
dec
repnz
sbb
subl
xor
cmp
sub
or
mov
mov
rolb
pop
dec
cmp
out
jmp
js
int
and
jae
lods
decb
cmp
cmp
gs
gs
inc
testb
mov
icebp
sub
lcall
xchg
mov
in
dec
jnp
xor
loopne
ret
mov
inc
mov
cmc
push
jp
mov
pop
adc
and
fs
das
or
push
aad
cmp
je
xchg
xor
hlt
es
xor
call
popf
js
aam
ja
shll
adc
insb
xor
jnp
js
cmp
orps
lock
out
and
scas
es
add
or
pusha
mov
mov
jno
aas
pop
imul
sub
pop
or
pop
xchg
mov
sub
mov
aad
xchg
ljmp
jb
ja
sbbl
inc
sub
mov
add
jb
add
movsl
jae
add
sub
adc
popa
in
cmpsl
adc
ret
sbb
sub
stos
cmp
push
lcall
mov
fisttpl
mov
xor
xchg
push
or
add
mov
pop
push
mov
sbb
sbb
scas
hlt
push
rcrb
inc
test
sbbb
mov
inc
ret
in
rclb
lcall
lods
shl
mov
xchg
cld
sti
mov
mov
mov
in
in
roll
pop
pop
cli
add
test
es
rorl
or
rcrb
push
mov
pushf
mov
push
add
cs
movsl
jo
pop
fcom
add
pop
dec
mov
add
inc
mov
shlb
leave
mov
mov
mov
pop
or
inc
jae
dec
push
daa
adc
mov
pop
jno
jmp
sbb
adc
dec
imul
pusha
jle
bound
imul
js
fisubrs
movsb
or
pop
into
pop
loope
mov
inc
or
dec
or
push
push
cmp
pop
ret
jg
ljmp
inc
mov
stos
dec
or
mov
filds
sbb
outsb
jge
faddp
out
sub
movsb
cmp
test
outsl
sub
pusha
mov
or
dec
pop
loopne
pop
mov
push
jno
enter
jecxz
push
fnstenv
sahf
mov
pop
ret
mov
in
push
scas
inc
repz
xor
andl
inc
shlb
mov
dec
lahf
xor
mov
pop
jae
js
push
inc
daa
inc
fwait
dec
orb
stos
test
inc
mov
sub
xor
mov
mov
mov
mov
test
call
push
ljmp
orb
mov
mov
cld
jp
pop
and
mov
xchg
imul
andl
dec
popl
mov
xor
cmp
push
mov
pop
or
sbb
add
or
lods
mov
aas
xor
push
push
sub
out
xor
lock
cld
je
lds
shrl
add
sub
add
dec
sbb
adc
jno
in
cmp
xchg
dec
mov
push
sbb
mov
sbb
mov
jecxz
push
sbb
rcl
and
sub
rclb
mov
cmpsb
lods
sarb
inc
mov
test
loopne
or
push
xor
xchg
cmp
or
inc
xchg
add
stos
cmp
jecxz
lods
and
imul
cmpb
es
arpl
add
ret
mov
push
xlat
mov
xor
in
fcmovb
and
pop
add
jp
in
adc
pop
push
cmp
std
pushl
add
ja
pusha
incl
shlb
into
popf
push
cs
push
mov
sub
mov
pop
xchg
mov
inc
mov
scas
push
cmpsb
gs
movsl
mov
mov
ret
rcll
adc
cmp
mov
push
push
sub
adc
gs
arpl
push
pop
outsl
movl
out
cmpsb
fldenv
adc
in
mov
decl
repnz
loopne
push
push
ror
cmp
or
push
dec
adc
daa
pop
adc
adc
dec
or
jae
into
movsl
jb
inc
mov
add
sbb
pushf
loope
add
push
inc
popa
lahf
aad
cmpsb
ficomps
mov
int
add
xlat
mov
sbb
pop
imul
in
sub
mov
inc
movsl
fidivrs
mov
mov
fs
das
push
xor
sbb
scas
or
adc
rclb
mov
mov
cmpsb
sbb
loopne
inc
loop
mov
sbb
cmp
push
ret
cmc
sub
ss
mov
and
xor
push
shlb
mov
movsl
xchg
mov
rclb
mov
mov
push
xchg
rcll
mov
loope
and
pop
inc
or
pop
mov
insb
mov
cmc
adc
sub
jg
push
and
push
push
insb
push
push
cmpsl
ret
pop
js
mov
or
pop
mov
push
add
cmp
cmpsl
jg
mov
not
pusha
imul
test
imul
dec
push
xchg
cmp
sub
jns
shrl
cmp
js
or
push
push
sub
scas
mov
cld
pop
popa
add
push
add
stos
push
adc
push
add
gs
call
push
mov
sti
dec
insb
mov
xchg
stos
xor
dec
loopne
xor
jns
pop
cmp
mov
xor
pop
push
shl
test
fsubs
lcall
lods
into
jmp
push
push
push
xor
jmp
test
dec
adc
cwtl
stos
fs
or
push
repz
xchg
adc
bound
pop
pop
loope
pop
leave
push
pusha
leave
mov
push
dec
bound
dec
sbb
push
mov
xor
or
push
push
ret
or
sahf
or
dec
and
int
mov
pop
xor
in
mov
int
jbe
sub
push
sbb
in
ss
sub
adc
cmp
aad
mov
hlt
cmc
jp
jo
or
mov
jae
adc
scas
sbb
cmp
jae
push
popa
jae
or
lds
add
in
adc
lcall
pop
je
mov
ds
xlat
dec
cmpsb
dec
pop
sbb
addl
push
pop
test
pop
adc
fdivs
bound
mov
mov
cmc
mov
mov
xchg
mov
inc
inc
imul
or
inc
dec
in
in
mov
cs
notl
inc
inc
jne
pop
test
movsl
jnp
out
cmp
call
jmp
inc
or
push
fsubl
rcl
mov
fwait
adc
rcrb
or
mov
ret
push
xchg
inc
cmp
push
mov
adc
cltd
mov
jno
push
cmpsl
sub
pop
adcl
cld
mov
push
imul
into
test
sub
inc
add
and
fstps
dec
pop
dec
xor
cmp
push
dec
push
imulb
fadds
enter
add
inc
add
popf
sarb
inc
ret
jle
dec
enter
push
call
push
push
sub
ds
inc
dec
push
sub
sub
lcall
xchg
cld
push
pusha
lods
fcoml
hlt
aad
rcl
inc
aas
mov
rcrb
push
mov
rcrb
add
lahf
ret
in
fildl
cmp
movsl
inc
insl
or
in
scas
push
lock
add
imul
cmp
sub
push
push
lods
dec
es
sbb
in
scas
fcoms
xor
mov
xor
xor
push
push
in
mov
cmc
shlb
inc
inc
pop
not
shlb
push
stos
add
push
hlt
xchg
sub
sub
mov
mov
jnp
mov
outsb
popa
and
enter
rorb
push
cmp
in
mov
push
cmpsb
push
pop
sbb
sbb
rclb
mov
xchg
and
fsub
call
jg
out
xchg
pop
mov
mov
imul
enter
je
subl
jne
mov
aad
mov
orl
jae
call
dec
sarl
aam
push
out
aas
or
out
nop
mov
insl
or
roll
ret
rolb
push
push
jno
inc
and
out
sbb
stos
dec
in
xorl
imulb
adc
je
lods
test
rorl
bound
push
mov
call
pop
xchg
pop
mov
stc
add
sub
xor
jno
inc
fistpl
rorb
inc
test
into
addb
mov
popa
into
out
lds
sbb
xor
xchg
adc
ret
mov
cli
mov
test
xchg
lea
pop
xor
adc
cmp
cmp
mov
mov
bound
or
mov
pushf
imul
cld
inc
add
sbb
mov
adc
es
in
xchg
sbb
insb
test
add
push
and
and
gs
xor
dec
mov
inc
in
dec
mov
nop
jecxz
push
mov
cmp
or
adc
in
mov
ret
add
pop
push
sbb
push
mov
inc
hlt
add
ret
imul
inc
loopne
inc
out
imul
movsl
das
xchg
sbb
sub
bound
call
xchg
sbb
imul
outsb
jmp
xorb
mov
mov
pushf
shrb
call
stos
push
mov
mov
and
cld
push
popa
jecxz
push
scas
mov
push
add
pop
sarb
push
and
push
mov
push
mov
cmp
dec
push
sbb
test
testl
fdivrs
jo
cmp
mov
jnp
out
xor
daa
cld
mov
jp
lret
fmuls
xor
push
popa
popa
xchg
or
or
sbb
push
xchg
out
mov
shlb
mov
dec
dec
push
cmp
dec
cs
mov
cmp
push
push
pop
loope
je
test
xor
mov
test
cltd
test
pop
je
mov
pushf
mov
stc
and
rorl
jae
jmp
adc
or
adc
push
add
hlt
and
jecxz
shll
scas
lods
imul
pop
das
sbb
cli
aas
cmpsb
insl
sub
push
enter
dec
mov
ljmp
mov
nop
push
inc
push
cmp
pop
loop
jno
in
push
xor
scas
inc
loope
jno
pop
xchg
or
cmp
das
int
sbb
ret
xor
and
imul
push
pop
push
lcall
push
pop
loope
add
push
mov
cmp
or
or
addr16
push
xchg
or
xorl
imulb
test
rcrl
shl
pop
dec
mov
xor
inc
es
shlb
fdivs
rcrl
ficoms
mov
insl
popf
push
fnstcw
add
fsubs
ffreep
loopne
cli
rclb
imul
ja
pop
push
cmp
addr16
pop
and
hlt
mov
popa
movsb
or
imul
dec
mov
cmp
mov
ror
ficoms
adc
lods
rcr
xchg
pop
jb
jmp
or
push
or
sarb
ljmp
and
loopne
push
shrl
or
adc
push
or
lods
int
jnp
push
sub
ficoms
mov
lods
in
xlat
shl
xchg
pop
dec
das
imul
mov
inc
jmp
lods
insl
sbb
outsb
mov
mov
add
sbb
mov
xor
dec
jno,pt
or
add
rcl
push
push
add
dec
int
dec
call
mov
mov
push
lcall
stos
aad
lods
sbb
fnstenv
adc
dec
xchg
jp
sub
pop
sub
pusha
idivl
mov
xor
imul
lds
cmp
popf
dec
les
dec
into
popa
repnz
xchg
stos
adc
pusha
enter
loope
push
inc
imull
cs
fimull
mov
in
mov
stc
test
lcall
mov
push
jmp
dec
or
pop
arpl
aad
je
into
loope
dec
or
xchg
mov
push
sahf
push
inc
shll
xor
fsts
xor
push
mov
sub
daa
push
dec
pushf
lods
pop
pop
or
adc
scas
decl
movl
inc
xor
sarb
lods
xchg
add
adcb
inc
in
inc
inc
or
xchg
stos
add
fs
pop
loopne
decb
mov
lahf
test
add
or
enter
mov
sbb
mov
jno
sbb
mov
adc
jno
bound
pusha
and
xor
sub
inc
jns
pop
fadds
and
rorb
imul
push
mov
and
xorb
xor
inc
mov
test
enter
add
loopne
shrl
pop
and
in
call
sub
daa
test
xor
sub
pop
rcll
mov
fnstcw
cmp
stos
mov
jl
push
adc
lods
push
jae
mov
mov
daa
mov
mov
mov
jp
cmp
repnz
xchg
dec
scas
push
or
mov
scas
ja
imul
mov
pop
test
adc
pop
rclb
mov
push
sub
shll
call
clc
daa
and
enter
adc
and
dec
pop
test
lea
or
adc
lret
mov
xor
sbb
push
add
inc
loope
adcl
xchg
je
adc
jle
mov
inc
xorb
lcall
lcall
xor
inc
cli
pushl
hlt
sbb
add
or
inc
dec
jb
adc
inc
hlt
cmp
scas
rcl
test
sbb
les
popf
sub
sub
loopne
mov
dec
cwtl
fisttpll
loope
push
inc
push
jae
or
mov
jb
sbb
loope
gs
xchg
and
sbb
and
inc
mov
xchg
dec
pop
testl
push
push
test
mov
test
es
ficoml
inc
pop
shll
out
fwait
lods
mov
gs
push
add
mov
inc
into
into
orl
leave
and
mov
cs
pusha
jp
xor
inc
test
mov
and
sub
xchg
jp
jo
test
sbb
jp
call
and
push
or
push
push
mov
xchg
pusha
adc
shrl
push
adc
les
jb
or
pop
push
pop
pop
mov
inc
xor
cmp
mov
add
sbb
dec
shlb
loopne
sub
xlat
adc
aam
mov
scas
ss
pop
or
movsl
dec
or
inc
int3
stos
in
mov
inc
cmc
mov
sub
popa
lcall
rolb
mov
or
mov
sbb
mov
je
mov
mov
rcll
rclb
jnp
leave
push
add
imul
or
mov
mov
pop
inc
push
enter
bound
adc
fdivs
jno
and
push
dec
pop
in
inc
xchg
rorl
js
sbbb
and
mov
jp
mov
test
push
xor
dec
or
sar
xor
jne
or
inc
add
insl
push
mov
push
and
fsubr
popa
jmp
adc
into
inc
scas
sbb
into
jle
jb,pn
shll
int3
jne
or
mov
lods
mov
inc
xor
lds
sbb
fs
cwtl
mov
sbb
imul
adc
cmp
adc
jne
mov
sahf
push
xchg
sub
xchg
xor
add
shll
push
add
pop
shlb
add
inc
xor
and
rorl
ret
xchg
cmpsl
inc
ret
test
xchg
rcr
icebp
fidivrs
pop
or
ret
adc
or
and
lret
daa
mov
stos
mov
xor
lea
push
daa
inc
adc
pop
mov
ljmp
cltd
lret
inc
add
mov
pop
xor
push
sbb
inc
xor
add
insb
popa
mov
mov
data16
xor
lcall
and
das
mov
cmp
inc
inc
inc
jg
dec
dec
stos
js
mov
jnp
sbb
bound
adc
pavgb
push
inc
ret
jecxz
adc
loopne
adc
push
sbb
cmp
es
pop
add
pop
lret
cmp
je
loopne
mov
addl
shlb
and
enter
jo
xchg
mov
movsl
sbb
cwtl
add
or
jo
or
and
jo
stos
jne
hlt
lods
fldenv
cwtl
inc
adc
or
rorb
dec
insb
pop
faddp
test
mov
lods
andb
rcrb
fwait
jno
pushf
jnp
mov
inc
sahf
adc
jno
lods
pop
adc
mov
data16
mov
dec
sbbb
push
addr16
push
aad
mov
das
and
je
pop
imul
mov
lcall
sbb
add
jo
adc
sbb
ret
mov
push
mov
sbb
into
roll
data16
cltd
dec
sub
fs
repnz
popa
cmp
neg
pop
push
dec
lock
and
rcll
and
jmp
repz
pop
andb
dec
xor
push
sub
sbb
js
sbb
je
sbbl
inc
or
lcall
adc
divl
rclb
jae
fnstenv
and
cmp
mov
dec
or
and
jp
xor
mov
int3
sub
loopne
mov
in
mov
add
push
shrb
fiaddl
push
jb
sub
ffreep
dec
pop
pop
movsb
pop
pop
sub
into
test
sub
or
bound
push
stos
out
test
mov
push
push
cli
data16
inc
dec
mov
movsl
sbb
xchg
pusha
ret
xor
mov
xor
ljmp
testb
dec
cwtl
cmp
in
orb
mov
test
or
xchg
cmp
and
sbb
pop
adc
mov
mov
popa
mov
sub
pop
loope
shll
adc
rcl
pop
push
int
push
lea
or
shr
shll
ljmp
bound
push
scas
dec
lods
repz
and
push
bound
pop
and
cli
adc
push
subl
mov
test
aas
bound
or
mov
pusha
push
push
inc
sub
xchg
add
test
sbb
jno
adcl
rcrl
dec
sub
xchg
mov
fiadds
xor
in
subb
mov
push
daa
push
dec
xor
jp
dec
push
cmp
aad
dec
das
rorl
int3
or
outsb
popa
ret
inc
test
cwtl
adc
or
push
inc
dec
xor
into
incl
push
lcall
jnp
mov
push
ds
or
jns
push
aaa
mov
testl
stos
lcall
inc
fwait
inc
mov
fidivrs
inc
sbb
add
cltd
push
sub
push
cpuid
inc
mov
xor
or
or
loop
daa
hlt
enter
adc
mov
jno
out
add
adc
cmp
movl
sbb
and
lret
cmp
or
stc
mov
inc
dec
push
rcr
inc
mov
fwait
lcall
xchg
lcall
cli
ficoml
jg
mov
pusha
inc
rcll
pop
cltd
adcl
iret
adc
loop
fwait
shlb
aad
aad
data16
and
sub
jb
insb
mov
jno
xchg
jge
loop
jp
lgs
dec
xor
xor
stos
dec
sub
add
jg
cmp
mov
jmp
mov
mov
loopne
sub
or
add
add
jl
adc
jmp
ficoms
mov
add
inc
daa
and
es
int3
dec
cli
push
shlb
std
or
mov
adc
lds
push
or
or
lcall
rol
mov
mov
push
lock
sbb
and
fwait
xchg
sti
sub
push
mov
push
hlt
stos
call
pop
sbb
sahf
or
mov
push
cmp
mov
sbbb
mov
cwtl
scas
push
roll
sarl
jbe
dec
out
inc
into
push
xor
ja
jbe
sub
test
adc
push
pushf
mov
mov
movsl
adc
ret
cmp
ss
push
es
push
in
gs
mov
mov
movsb
push
pcmpeqb
or
dec
imul
scas
xlat
inc
stos
hlt
rcll
inc
mov
xchg
outsl
and
sub
mov
aam
movsb
sub
jecxz
fldenv
ljmp
pop
and
add
js
cs
lcall
cmpsl
push
xchg
shl
push
inc
inc
ljmp
pop
sbbb
and
xchg
xchg
sbb
addr16
mov
jg
xchg
sub
mov
push
mov
lods
and
in
vpunpckhbw
mov
les
xor
jo
gs
stos
xor
cmp
popa
fs
and
push
stos
xor
enter
cmpsl
mov
stos
out
imul
outsl
mov
or
popa
ret
ja
dec
mov
jno
movsl
popa
fstl
filds
adc
aam
imul
test
add
jmp
and
add
push
mov
xchg
iret
dec
xor
pop
dec
mov
fldt
jge
int3
sub
pushf
xor
cld
sub
jno
fiadds
xor
pop
insl
xor
lods
addb
add
push
or
add
mov
xchg
ret
andl
xchg
into
pop
or
and
loop
push
xor
in
sahf
rcrl
mov
test
js
idivb
idivl
jge
adc
lock
mov
mov
into
js
jb
shl
popa
dec
lea
std
xlat
pop
into
lds
push
adc
push
sub
cs
add
rolb
push
aad
push
sub
push
ret
and
mov
ret
leave
push
pop
xor
jno
aaa
sbb
call
add
sub
lahf
iret
xchg
rclb
loop
xor
stos
sbb
pushf
testb
sbbl
rolb
add
xor
in
jmp
push
push
adc
push
mov
push
mov
mov
push
mov
cmpsl
push
sub
mov
inc
outsb
ret
loope
lods
mov
or
or
adc
push
jno
mov
stos
xchg
xchg
xchg
mov
add
sbbb
pop
mov
pop
adc
xor
or
add
cmp
sbb
fwait
mov
push
loopne
icebp
out
mov
fwait
add
insl
roll
xor
imul
paddsw
hlt
pop
gs
mov
movsl
pop
ds
aas
mov
jnp
mov
xlat
push
adc
mov
lea
dec
xor
cmp
xorb
push
sbbb
fdivs
mov
adc
stos
lcall
test
xchg
sbb
aam
sub
jno
and
lds
xchg
aad
dec
ss
loope
xchg
inc
or
xor
pop
push
mov
adc
inc
lods
xor
mov
mov
pop
inc
sbb
jne
adc
in
ret
dec
adc
sbb
xlat
cmp
shl
lcall
ret
xchg
add
repz
xchg
cmp
and
xor
mov
bound
sub
nop
lahf
or
mov
push
add
add
pop
dec
gs
mov
mov
sbb
add
add
pusha
pop
pop
test
add
ficoml
fstpl
lea
into
stos
stos
lods
xchg
mov
pop
inc
adc
mov
push
and
add
push
or
xchg
insl
mov
jae
out
cmp
push
gs
push
mov
imull
stc
jo
adc
mov
pop
test
mov
mov
stos
mov
roll
cmc
cld
in
addb
adc
mov
test
jbe
sbb
xor
inc
mov
rorl
pop
xorb
stos
lret
cmc
lds
add
inc
scas
mov
popa
push
pop
add
mov
cmpsb
mov
js
mov
lock
mov
push
fcoms
clc
pop
pop
xchg
push
stos
loop
cmp
fcomps
adc
add
xchg
andb
xor
dec
add
xchg
fwait
cmp
pushl
js
pop
ret
push
inc
inc
xchg
in
stos
das
push
mov
out
jp
add
flds
mov
mov
push
into
push
jnp
in
jecxz
stos
popf
js
push
xchg
aad
lcall
or
push
iret
es
mov
inc
push
aas
xor
push
loope
cli
jb
stos
sub
pusha
pop
jno
sarb
inc
mov
sarl
and
mov
dec
xchg
mov
or
mov
sbb
push
xor
mov
les
sbb
adcb
es
loop
orl
cld
inc
add
inc
fdivr
insl
into
add
fisubl
jl
shlb
outsb
popa
xor
sub
setl
push
clc
and
adc
add
sub
subb
scas
fisubs
cmp
mov
mov
mov
das
sub
xor
push
lret
cmp
jbe
or
push
mov
popa
fildl
movsl
fdivs
pop
test
cwtl
data16
push
pop
inc
icebp
fsub
adc
js
outsl
jbe
jo
pushf
lcall
jp
mov
dec
jb
scas
add
mov
mov
icebp
sub
pop
push
aas
cld
dec
loopne
sbbb
std
add
popf
test
popa
jnp
inc
push
stos
xor
pop
push
xor
mov
push
cmp
sub
xchg
mov
sbb
push
jne
addl
inc
xchg
inc
out
fwait
sub
mov
jge
xchg
test
push
mov
adc
mov
loop
fadds
lret
movsb
and
mov
das
test
inc
and
cmp
adc
push
std
sahf
mov
ret
mov
push
insl
cmp
xor
shll
lcall
sub
stos
and
xchg
dec
out
or
loopne
std
xchg
sbb
cmpsw
sbb
pop
sub
adc
adc
add
inc
push
sbb
pop
cltd
xor
dec
xor
push
ret
add
mov
hlt
and
sarb
xchg
sub
mov
push
les
addb
out
lret
xlat
push
xor
dec
add
jecxz
push
jp
bound
jno
mov
cmp
push
push
ret
or
jl
inc
sbb
popf
in
js
push
imul
inc
push
push
ljmp
xor
adc
jmp
das
and
roll
push
pop
xor
or
test
or
sub
iret
xchg
jnp
mov
fimull
pop
sbb
ret
lret
arpl
cs
mov
sti
hlt
or
xchg
mov
push
mov
push
gs
and
push
arpl
daa
push
aad
jno
jne
push
cmc
call
dec
ret
shlb
mov
imul
ss
sbb
into
push
mov
and
inc
hlt
clc
push
into
xor
enter
and
movsl
jecxz
mov
xor
mov
arpl
xchg
or
sub
stc
lock
rclb
movsl
cltd
mov
cmp
jo
lret
adc
movsb
pop
and
xchg
jge
hlt
stc
dec
stos
sub
mov
xchg
inc
addr16
mov
add
mov
ret
aad
mov
ret
and
push
cltd
lcall
push
pop
mov
arpl
jb
aam
jle
std
pop
sub
jno
cmp
mov
add
cmpsb
scas
dec
cmp
xchg
push
into
pop
xadd
push
add
sbb
and
rolb
pop
shrb
rol
or
and
incb
push
ret
sub
andl
insl
add
mov
dec
push
test
and
mov
mov
sbb
inc
ljmp
and
push
cmp
push
test
dec
sbb
mov
dec
scas
push
jne
int
pop
mov
gs
push
cs
inc
rcl
adc
inc
dec
stos
bound
adc
or
popf
enter
mov
lret
into
add
mov
fwait
js
mov
add
add
xchg
add
stos
in
push
push
mov
pop
adc
xor
scas
test
add
lock
scas
add
insb
ljmp
or
sub
inc
inc
dec
cld
in
loopne
rcll
sub
imul
lea
xor
xor
cwtl
popf
adcb
add
push
mov
imulb
mov
cld
adc
hlt
loope
and
add
sahf
adc
push
bound
out
xchg
jecxz
cs
push
mov
dec
movsb
daa
cld
add
sarb
or
gs
int3
sbb
jecxz
roll
and
cltd
push
sub
shlb
sub
xlat
xchg
xor
cmp
iret
xchg
push
cld
mov
pop
and
fs
repnz
std
sbb
pushf
in
and
rorb
dec
outsl
cmpsl
and
dec
idivb
mov
inc
sbb
int3
je
push
mov
jb
jo
inc
and
sub
lcall
mov
repnz
dec
out
mov
pop
mov
push
add
add
adc
mov
ret
fs
stos
and
jmp
pusha
mov
pop
stos
mov
int
flds
xchg
stos
adc
push
mov
sub
in
repnz
int3
xchg
cmp
mov
cmpsb
add
les
rclb
push
imul
mov
fwait
pop
add
in
adc
stos
jo
xlat
dec
jmp
mov
cmpsl
loopne
popa
insl
jno
lea
adc
or
sbb
mov
and
lret
mov
mov
popa
cmc
rclb
out
rolb
sbb
call
ljmp
pop
shlb
pop
or
rclb
xchg
mov
pop
lods
xchg
adc
mov
xor
into
ljmp
cs
xchg
sbbb
add
mov
aaa
test
int
daa
adc
je
sbb
mov
adc
cmpsb
mov
stos
adc
nop
int
cmp
push
pop
mov
insl
add
mov
push
add
xchg
xorb
add
mov
and
lods
ljmp
fpatan
mov
rcll
or
shrb
insl
lret
cmp
xchg
push
cmpsb
adc
mov
test
jge
gs
gs
xor
cs
insb
add
pop
inc
sahf
inc
jnp
jmp
lret
loope
sbb
cmp
pop
push
jne
push
jne
pop
rolb
add
imul
mov
adc
pop
lret
pusha
mov
rcrb
flds
push
ret
push
stos
mov
ret
cmp
mov
gs
mov
jl
add
mov
push
mov
stos
lods
gs
cmp
pusha
cmp
fs
aam
mov
out
push
mov
pop
adc
ficompl
int
add
jne
or
popf
xor
bnd
mov
dec
inc
and
xchg
pop
clc
push
xor
je
dec
xor
cmp
pop
insl
mov
jno
push
sbb
imul
clc
and
xor
fs
mov
mov
inc
dec
hlt
cmpsb
inc
inc
ret
mov
stos
lfs
jecxz
rclb
imul
pop
fisubl
outsb
fldl
mov
adc
or
mov
pop
add
push
push
outsl
rolb
mov
jecxz
mov
imul
cmp
je
sbb
pop
insl
add
stos
in
imul
dec
test
inc
data16
push
stos
daa
pop
mov
pushf
xor
ljmp
cmp
cmp
inc
pushf
movsb
fcomi
add
popa
push
loopne
sub
stos
lock
pusha
dec
cmpsb
mov
mov
lret
adc
call
mov
jb
sub
jbe
pusha
int
imul
inc
test
mov
loope
dec
fists
and
xchg
cmc
andb
pusha
xor
dec
inc
lock
jb
sub
inc
test
test
inc
xor
and
lds
xchg
mov
pop
xchg
add
push
push
xchg
stos
repnz
push
hlt
inc
and
lock
out
mov
push
mov
inc
or
inc
mov
and
lds
sub
aam
lret
push
mov
lock
jo
sbb
add
and
pop
mov
dec
push
loop
in
mov
sub
mov
shll
xchg
lods
aas
test
push
push
divb
and
add
mov
jmp
dec
jno
sbb
and
xor
push
rolb
sub
into
jp
xchg
stc
mov
out
mov
daa
jnp
mov
pop
mov
sub
sbb
jo
pop
int3
mov
mov
sub
or
je
call
dec
jns
lods
mov
dec
movswl
cmp
jp
aam
mov
cld
je
ret
add
jecxz
cmp
shll
jno
xor
inc
push
arpl
mov
sub
push
xor
push
test
inc
sbb
cmpb
std
push
push
lea
out
mov
ret
mov
dec
lds
jnp
cld
inc
xchg
lcall
mov
cld
cmp
pusha
xor
das
daa
loop
sbb
popa
lret
les
push
mov
rcrl
sub
scas
push
push
mov
cmpsl
pusha
sbb
jo
sbb
mov
lret
xchg
or
bound
insb
insl
jo
ret
xchg
xor
add
cmpsb
adc
cmp
lahf
mov
sub
adc
cmpsb
push
mov
jmp
mov
xchg
fsubl
dec
jb
adc
adc
or
mov
pushf
push
push
push
or
icebp
jle
ret
add
cmp
stos
loopne
jno
retw
popf
push
or
or
mov
je
mov
jl
test
jo
or
xchg
add
dec
adc
dec
add
cmp
outsl
shll
loopne
ret
popa
bnd
cmp
lods
add
lcall
fnstenv
push
inc
xchg
and
fidivl
fistl
push
mov
movsb
jmp
test
pop
push
inc
adc
aas
dec
dec
in
test
sub
test
push
xor
cmp
testb
or
or
rclb
sbb
dec
hlt
mov
add
or
arpl
sbb
cwtl
inc
enter
stos
shrb
xchg
out
mov
add
aam
mov
xorl
sub
or
or
push
push
mov
test
bound
insl
jo
dec
call
in
sarb
ret
xchg
pop
daa
popf
movsl
push
mov
dec
mov
cmp
bound
push
pop
imul
inc
hlt
xchg
mov
jbe
sub
fmull
rcll
xchg
push
fiaddl
aas
roll
repnz
xchg
xchg
push
xor
inc
cmp
cmp
pop
cmp
mov
cmp
cmp
jmp
mov
push
cltd
clc
push
test
lret
add
or
clc
cwtl
push
out
push
mov
fcomps
cmpsb
sbb
add
inc
imul
push
sbb
cs
in
mov
jb
mov
sbb
push
xor
add
pop
jmp
outsl
add
and
cli
push
in
aam
mov
xchg
int3
dec
push
adc
jae
push
adc
xchg
and
pop
mov
arpl
out
add
xor
add
gs
call
loopne
mov
jne
ja
push
xchg
daa
cmp
rclb
orb
dec
int3
ret
test
jo
mov
mov
stos
cwtl
aaa
les
aam
sub
stos
bound
push
mov
mov
mov
xor
inc
cmp
cmp
icebp
mov
outsb
stos
cmp
jb
ret
xor
shll
sbb
xor
lcall
inc
into
mov
test
in
rcl
stc
xor
adc
stos
mov
inc
push
lock
cltd
iret
mov
mov
or
rcl
call
xor
jno
add
add
jmp
mov
xchg
sbb
call
test
daa
sub
addr16
jne
jp
or
inc
ret
mov
xchg
enter
lcall
sub
push
es
xor
push
insl
loope
stos
add
lods
inc
push
andl
sbb
out
xchg
jnp
aas
out
gs
enter
sbb
popa
lcall
add
je
mov
mov
sub
ret
push
stos
push
call
push
add
aad
pop
xchg
mov
push
add
push
and
or
stos
pop
shlb
sbb
sbbb
stos
sbb
rcll
in
lahf
fsts
mov
aad
or
cld
or
sarb
and
fcmovbe
push
mov
scas
dec
dec
inc
cmpl
sbb
loope
sub
xor
pop
jmp
push
push
stos
inc
ret
push
sub
add
cld
imul
or
subl
push
xor
jns
xchg
dec
xchg
fnstcw
mov
sbb
jo
cli
push
pop
fiadds
inc
fisttpl
add
push
and
ret
push
pop
cwtl
movsl
bound
and
sbbb
push
sbb
or
repnz
subl
add
inc
pop
sbb
pop
lock
cmpsl
push
push
loopne
adc
dec
adc
mov
out
pop
aas
adc
push
pop
pusha
mov
in
rolb
call
adc
mov
or
push
icebp
or
lods
mov
xor
push
faddl
xchg
scas
pop
xor
pop
or
and
inc
lods
jbe
mov
pop
call
inc
lea
mov
mov
loop
mov
mov
jno
pop
add
out
sub
push
popf
sub
cmp
inc
pop
cld
popf
push
jo
xchg
push
mov
dec
inc
xchg
sbb
pop
inc
lahf
xor
pop
andb
xchg
inc
xchg
push
inc
add
adc
or
xor
subb
cmp
aaa
push
add
inc
popf
or
push
mov
add
cs
mov
or
inc
sub
bts
jne
inc
sub
adc
aad
jo
ds
xor
rcll
xchg
loopne
ja
adc
mov
fdivrs
or
add
mov
pop
test
inc
cmp
test
push
and
imul
adc
ljmp
pop
or
mov
push
mov
push
stos
aam
popa
xchg
repz
movsb
push
mov
add
stos
add
sbb
popa
call
dec
lea
push
or
aam
cmp
pop
push
or
rcl
jg
jg
bound
fmuls
pusha
nop
enter
cs
arpl
add
inc
adc
push
cld
cmp
insl
dec
or
xchg
insb
in
mov
xor
mov
mov
xor
test
sub
mov
inc
dec
mov
push
add
pop
jb
mov
hlt
gs
je
aad
mov
push
xor
push
test
dec
xchg
push
sbb
xor
test
nop
stos
addl
jb
xchg
sub
mov
mov
scas
lods
push
adc
sub
or
dec
adc
loopne
adcb
and
pushf
or
mov
add
push
test
push
lahf
push
lods
add
xchg
push
nop
jne
inc
add
pusha
mov
je
push
cwtl
adc
dec
test
cmp
dec
mov
lea
hlt
dec
xchg
pop
call
cld
mov
push
inc
shrl
push
ljmp
jae
inc
mov
rcrl
pop
icebp
push
mov
mov
lods
lret
rorb
inc
xchg
shrb
push
xor
or
sbb
mov
mov
ds
mov
xor
cmp
test
sti
xor
testl
pop
test
xchg
sbb
jo
xor
push
xor
mov
shll
adc
mov
mov
lret
sub
pushl
cs
adc
and
outsb
fsubrl
or
repnz
adc
xlat
mov
mov
imul
out
cld
mov
loopne
lcall
push
mov
cmp
mov
ret
dec
pop
mov
add
arpl
rcl
xor
or
lcall
or
jo
mov
inc
inc
jecxz
push
add
xor
add
inc
or
sti
inc
jge
add
dec
dec
sub
add
stos
sub
dec
stos
shl
adc
pop
aam
pop
add
push
cmpsl
or
int
and
push
pop
lock
int
or
mov
pop
sub
push
cmp
outsb
inc
mov
xchg
cmc
test
les
mov
adc
sub
cmp
mov
mov
iret
mov
lcall
rol
mov
cld
lgs
add
mov
mov
xchg
arpl
lea
fldt
je
into
shl
cmp
pop
adc
push
cs
mov
fnsetpm(287
xor
loopne
xchg
xor
divb
cmp
add
nop
stos
push
and
push
out
mov
lea
scas
cltd
cmp
inc
rcrb
gs
and
mov
xlat
out
or
cmp
xor
inc
adc
hlt
hlt
fidivs
pushf
int3
pushl
call
sub
scas
adc
shll
mov
push
push
lcall
call
pop
cli
ljmp
and
cmp
xor
xchg
sar
pushf
cld
push
push
roll
cmpsb
mov
and
dec
rorb
dec
inc
xchg
hlt
push
add
cmp
push
fnstenv
stos
jae
mov
gs
stos
je
mov
inc
ja
and
or
push
sbb
dec
sub
and
ss
adc
push
mov
rcll
add
cld
push
sub
or
adc
push
or
pop
mov
scas
adc
mov
xchg
pop
int3
xchg
add
popa
sub
add
jno
dec
fmuls
dec
cmp
ss
cmp
cmp
cmp
jge
push
adc
js
cmpsb
jmp
rclb
ficoml
mov
stos
ret
inc
orb
cs
mov
or
jnp
ret
test
loope
push
sbb
icebp
mov
mov
jae
xchg
jb
push
jp
inc
movsb
pop
push
add
pop
leave
push
imul
andl
mov
fcomip
imul
or
xor
pop
mov
add
sub
mov
or
jo
xchg
frstor
inc
dec
mov
sub
add
sub
or
push
popa
stos
inc
test
daa
ja
aad
sub
mov
cmp
pop
movsl
sub
sub
sbb
xor
test
test
cmp
ja
add
add
cmpsl
mov
incl
out
loopne
repz
cmp
add
lods
inc
jnp
xchg
roll
push
mov
push
mov
and
cmp
xchg
mov
add
aam
push
lret
adc
sub
add
enter
call
adc
pop
push
adc
mov
push
fiaddl
es
pop
adc
or
shlb
add
xor
adc
bound
or
rorl
and
subb
js
and
sbb
verw
sub
or
sar
lcall
out
mov
sub
sbb
mov
pop
roll
xchg
rcl
scas
xor
mov
lret
addr16
test
sub
jecxz
xchg
jo
mov
jb,pn
add
fmul
lcall
shl
mov
ror
mov
mov
fdivrl
dec
mov
add
data16
xchg
stos
mov
sub
push
push
sub
filds
lea
xor
fstpt
jno
mov
jo
inc
loope
dec
les
loope
lods
pop
lods
sub
cmp
jne
mov
rclb
mov
rcr
mov
pusha
movsb
mov
pop
cli
in
mov
inc
data16
jo
icebp
fwait
ja
sahf
sub
add
jno
je
xchg
stos
xor
shrl
inc
shl
jmp
or
push
push
enter
leave
rcrb
shll
sbb
test
dec
adc
jmp
adcb
es
cld
xchg
imul
into
hlt
sbb
ja
call
mov
xchg
aaa
sbb
lock
mov
testl
leavew
add
mov
aad
andl
aas
xor
repz
mov
mov
sub
dec
xchg
cmp
outsl
ret
push
rcl
nop
push
xor
addl
inc
std
popa
gs
inc
mov
loopne
mov
or
pop
iret
inc
mov
test
xchg
jae
inc
inc
mov
or
pop
sbb
mov
cmpsb
mov
add
lea
andl
cld
sub
or
xchg
add
xchg
push
inc
mov
add
push
fwait
bound
ds
lods
push
pop
cmp
loope
insl
jno
cmp
stos
inc
es
mov
xchg
xchg
movsb
adc
mov
sbb
aad
and
in
roll
addr16
push
mov
data16
imul
mov
shlb
or
or
test
add
addb
in
mov
ret
adc
push
andl
dec
insb
fwait
scas
stos
adc
cs
imul
xorb
or
std
mov
test
int3
jno
in
jo
in
popl
dec
inc
push
mov
or
repnz
mov
push
out
push
call
iret
mov
mov
imul
cmp
lret
shll
ficomps
test
test
cmp
shll
pop
ror
mov
adc
xchg
enter
pop
inc
addl
inc
lcall
xor
scas
add
add
mov
push
or
imul
add
into
insb
pusha
fimuls
mov
roll
sbb
and
or
inc
mov
jne
aad
xchg
lret
and
xor
in
push
push
test
outsb
out
and
lods
or
add
and
mov
popa
sub
push
sbb
sarb
aad
and
jne
push
sub
lcall
or
or
cs
pushf
rclb
dec
in
and
push
push
icebp
dec
xchg
xor
push
stos
dec
sar
div
cmp
xchg
or
popa
inc
mov
or
and
adc
inc
push
push
xchg
inc
add
roll
dec
rclb
cmp
push
mov
bound
push
and
in
pop
lcall
bound
sub
pop
mov
cld
pop
loop
aam
push
hlt
sub
mov
dec
jae
cltd
fcompl
inc
mov
popa
mov
ljmp
mov
test
adc
jo
into
jle
xor
dec
scas
test
movsb
mov
cmp
lods
inc
jg,pn
into
inc
cmpsl
leave
push
cmp
adc
outsl
mov
fnstenv
loope
dec
andl
add
ljmp
pop
xchg
mov
dec
inc
mov
lcall
inc
mov
mov
jge
gs
mov
sahf
imull
mov
notb
lcall
jo
dec
test
adc
jne
insl
dec
sbb
or
pop
popa
in
push
jecxz
lret
cwtl
gs
cwtl
pop
jmp
lahf
jg
das
sub
mov
cmp
jge
ja
jne
inc
rcrb
push
aam
or
jnp
add
sbb
push
xchg
adc
mov
inc
xchg
lret
add
dec
sbb
inc
stos
mov
or
mov
ja
and
and
or
push
test
sbb
shr
sub
cmp
sbb
add
int
or
or
nop
imul
push
enter
mov
xorb
daa
push
jge
sub
ja
ret
sub
imul
dec
mov
popa
mov
dec
mov
outsb
cli
dec
xor
xor
in
adc
insb
push
pushf
cld
sub
and
jle
pop
adc
addl
inc
lods
addr16
mov
repz
test
aas
jmp
scas
inc
mov
mov
cmpsl
pop
imul
insl
mov
or
push
jle
subb
xor
mov
lcall
lcall
test
repz
inc
jo
push
mov
inc
stc
adc
inc
mov
add
movsb
fimuls
test
scas
pop
or
lret
les
cwtl
push
jns
cltd
push
mov
add
mov
outsl
cmp
pop
sbb
sti
shll
push
xor
addb
or
mov
bndldx
cli
adc
cmp
xchg
pop
add
in
ss
popa
popf
hlt
insl
cld
test
les
popf
cmc
add
pop
sar
jecxz
push
xchg
mov
mov
test
mov
test
lcall
pop
loopne
xchg
inc
mov
das
lea
test
mov
cmp
adc
and
mov
aad
pop
or
lret
xchg
jg
sbb
sbb
in
mov
jg
adc
icebp
mov
or
xchg
dec
addl
icebp
jp
outsl
pop
jno
sub
mov
outsb
push
push
or
and
jp
lcall
enter
xchg
pop
mov
xor
sbb
mov
vmovaps
adc
inc
mov
push
push
inc
inc
adc
fistps
mov
xor
out
push
lods
push
jo
sub
push
add
push
jno
and
xchg
bound
jbe
dec
push
insl
dec
daa
push
mov
inc
add
add
pop
xchg
push
inc
bound
scas
add
pop
mov
mov
push
pop
into
adc
pop
subl
add
dec
sub
and
push
das
or
enter
cmp
mov
ret
push
cmp
pop
mov
pusha
leave
rolb
adc
mov
lods
push
sbb
jp
scas
popa
outsb
xchg
adc
xchg
xor
out
and
adc
stos
or
mov
nop
or
ds
fsubrs
mov
lcall
sarl
dec
inc
test
dec
mov
xchg
mov
stos
add
sarl
outsb
imul
push
and
adc
dec
lea
mov
hlt
ljmp
stos
jno
dec
and
sarl
sbbb
and
sub
mov
aam
inc
lcall
xor
dec
mov
sbb
and
push
adc
push
out
test
sbb
leave
lods
mov
pusha
or
or
mov
rcl
and
sbb
insl
movsw
push
les
loopne
pusha
stos
sbbl
adc
outsl
add
nop
imul
push
in
popa
jns
rcrb
cmp
fidivl
cmp
xor
jae
cltd
mov
testb
sarb
mov
and
push
push
xor
mov
gs
push
hlt
push
andb
mov
imul
mov
xor
movlps
rorb
dec
xchg
xchg
rclb
push
arpl
adc
push
js
xor
test
hlt
mov
aam
inc
scas
mov
mov
rcl
mov
dec
fs
jge
ds
xor
mov
inc
push
mov
push
lods
xchg
xor
ret
jno
call
sbbb
push
rcrl
imul
popa
inc
hlt
dec
test
and
jl
loop
cmp
sub
push
jno
add
inc
adc
js
mov
pop
push
loopne
xchg
jmp
mov
out
jmp
inc
popa
adc
cld
fnstenv
xor
xlat
pop
pop
mov
das
popf
das
mov
scas
add
xchg
movsl
push
cli
inc
mov
mov
dec
adc
mov
or
pusha
ror
cmpsl
lret
or
push
jp
push
std
in
cmp
out
aam
pusha
cltd
lahf
xchg
or
js
or
and
pop
sub
sbb
mov
xor
mov
das
xor
shrb
rorl
popa
cmpsl
leave
dec
sbb
roll
mov
dec
mov
int3
sbb
mov
mov
mov
jno
push
sbb
cmp
and
dec
lock
push
sbb
sub
push
sarb
jno
addr16
and
mov
inc
or
jno
sbb
xchg
mov
jo
mov
enter
mov
add
adc
pop
ja
adc
pop
out
sub
scas
push
aad
jmp
icebp
decb
push
scas
repz
loop
jb
es
cmp
out
andl
bound
jecxz
cwtl
xchg
jl
push
xchg
neg
and
push
lcall
xor
cwtl
inc
sbb
xor
je
daa
stos
out
sub
cltd
outsb
movsl
jb
daa
xor
cmp
or
popa
or
jns
mov
xor
rorl
jp
pop
inc
pop
cld
mov
int3
ficoml
popa
ret
jnp
int3
pop
add
std
test
shlb
in
sub
sarl
and
mov
lahf
add
shr
pusha
sahf
jbe
rclb
incb
ret
push
jl
mov
push
mov
mov
inc
icebp
int
mov
outsb
adc
outsl
lea
mov
cmpsl
negl
xor
mov
pop
jnp
movl
popa
push
pop
dec
stos
mov
mov
shrl
pusha
stos
mov
xchg
cmpl
pop
adc
cmpsl
int
xor
jp
or
jbe
sbb
stos
inc
loop
dec
inc
mov
repz
dec
push
mov
loop
push
sarb
sub
jnp
xor
pop
lds
es
mov
nop
mov
out
pop
scas
das
push
or
es
jo
and
into
dec
sarl
movsl
es
loop
add
or
and
or
pop
inc
lods
sub
cmp
ret
mov
push
repz
cwtl
adc
or
mov
cmpsl
daa
ror
xor
lcall
lcall
daa
inc
push
and
jb
rcrl
sub
sbb
mov
hlt
dec
sub
adc
dec
cmp
jl
lock
incl
mov
sti
stos
aad
push
cmp
mov
or
stos
insl
pop
sub
mov
fsubrl
daa
xchg
or
lock
fsubrs
xlat
push
and
mov
pop
mov
in
inc
add
xlat
rcrb
aam
dec
push
and
adc
iret
in
les
jecxz
inc
add
push
push
pop
sbb
repnz
sbb
fisubrl
push
dec
adc
or
subl
mov
and
cmpsb
aad
xchg
cli
jge
add
pop
xchg
add
adcl
mov
xchg
jb
mov
aam
sub
jmp
push
sahf
inc
inc
or
dec
bsr
add
mov
adc
ja
dec
cmp
test
sub
xor
sub
loopne
cmpsb
sbb
lods
xor
pusha
or
sub
push
out
fldt
js
inc
loope
xor
dec
pop
mov
push
iret
push
inc
inc
cmp
mov
aam
sub
dec
dec
imul
adc
inc
lea
push
push
hlt
add
adc
mov
hlt
shlb
lds
sub
mov
cmp
inc
je
push
xor
push
rcll
mov
adcb
xor
sub
addl
shr
xchg
popf
ret
add
lcall
jno
or
and
and
stos
dec
hlt
les
push
rolb
mov
inc
es
ljmp
add
out
test
inc
or
pop
in
clc
push
xor
pop
cmpsb
adc
call
popa
out
mov
mov
push
shlb
xchg
in
inc
mov
adc
push
jnp
cltd
ljmp
lret
pop
xchg
dec
pop
dec
add
mov
popa
daa
stos
or
mov
push
mov
das
mov
cmp
adc
into
addb
inc
in
cmc
lds
sar
inc
popa
int3
xor
xchg
mov
inc
mov
push
pushf
js
mov
rorb
rorl
push
in
adc
pop
pop
add
jno
or
dec
push
test
sbb
cmpb
cmp
mov
shll
mov
jbe
int3
mov
bound
lret
sub
stos
xchg
int
pop
push
and
push
bound
push
jne
int3
lcall
ret
mov
lock
push
push
je
sbb
ret
cwtl
push
add
ficompl
js
arpl
xchg
daa
and
mov
or
jp
mov
loop
xor
adc
fnstsw
add
mov
enter
mov
or
jmp
loope
mov
ret
adc
lods
inc
push
xchg
std
or
jnp
jle
aas
fwait
arpl
push
lea
xchg
lock
mov
daa
cwtl
daa
or
nop
or
add
subb
subl
pop
insb
push
aas
add
lret
aad
mov
mov
xchg
jp
pop
rcl
mov
jno
dec
shll
test
addb
scas
pop
sbb
push
xchg
popa
call
fistpl
inc
popa
adc
dec
dec
adc
cmp
inc
add
in
out
pop
push
xor
sbb
adc
add
fs
stos
push
mov
lods
add
mov
push
pop
and
in
mov
mov
pop
cwtl
add
pop
mov
push
scas
adc
xchg
ror
mov
xchg
loope
dec
jns
out
xchg
jnp
call
loopne
mov
ret
popf
cltd
sbb
inc
lea
imul
icebp
cld
and
fmull
and
fisttpl
and
enter
push
cmc
and
and
ljmp
jl
mov
mov
or
push
aad
int
mov
dec
ret
out
leave
push
ljmp
mov
inc
or
sbb
xor
and
test
mov
mov
xor
mov
test
xor
mov
pop
push
rol
jge
mov
dec
cmc
mov
mov
jns
lods
cwtl
mov
adc
xor
mov
or
pushl
clc
add
movsl
mov
mov
xor
cmp
sbbl
stc
pop
mov
fdivp
roll
add
fstpt
cmp
test
into
mov
push
packssdw
in
insb
scas
test
xor
shlb
mov
mov
cmp
dec
rcll
pop
push
mov
shll
stos
mulb
xchg
add
jne
int
shrl
lods
push
add
adc
xchg
into
xor
mov
xor
cmp
lret
dec
int
sarb
loopne
and
mov
xor
roll
sub
mov
andl
mov
daa
aaa
and
rcrl
jnp
push
test
xor
scas
cmp
dec
popl
mov
sub
mov
gs
add
pusha
shl
push
test
bound
mov
or
adc
inc
cmpsb
dec
jl
std
arpl
push
xorl
inc
mov
mov
shl
enter
push
js
arpl
scas
pop
pop
xchg
mov
rcr
jmp
xor
gs
pop
cmp
data16
fimuls
mov
sbb
movsl
xor
cmc
nop
mov
into
push
filds
mov
lock
push
lcall
push
pop
es
mov
add
aad
decb
sub
bound
add
inc
mov
sbb
or
jbe
inc
mov
pop
adc
stos
add
adc
lods
mov
rcrl
test
mov
mov
inc
sub
mov
mov
push
push
push
test
popf
xchg
adc
sbb
cmpsb
dec
cltd
test
fsubs
cmpsb
cmp
mov
add
aam
or
cmp
pop
inc
mov
xor
xchg
adc
stc
dec
xor
sbb
movsb
popa
movl
mov
pop
leave
subl
mov
inc
xor
clc
int3
addl
add
mov
push
cmp
or
and
jp,pn
mov
mov
mov
testl
xchg
mov
and
int
insb
pushf
bound
mov
mov
add
mov
push
dec
cld
mov
push
or
pop
leave
popa
jo
pop
ror
sub
adc
inc
sbb
ljmp
or
cmp
cmp
or
stos
cli
push
roll
repz
lcall
adc
jne
xor
mov
test
stos
mov
or
std
psrlq
loop
sbbb
xorb
rcrb
insb
mov
ret
jno
adc
repnz
lods
inc
or
scas
pop
lds
sub
adc
ror
add
test
or
jne
rolb
jmp
cmpsb
data16
and
rolb
rolb
sbb
xor
xchg
dec
test
pop
add
xor
test
add
stos
push
pop
xor
dec
outsb
cmp
loope
into
hlt
mov
loopne
lahf
jno
pusha
mov
js
pop
sub
aaa
or
sub
test
mov
mov
adc
scas
mov
test
dec
in
mov
in
std
dec
imul
pop
enter
or
push
or
mov
and
test
mov
dec
roll
stos
mov
push
pop
cwtl
mov
andb
fiaddl
and
test
jle
rcrb
cmc
inc
sbb
jecxz
out
bound
adc
dec
jecxz
dec
push
int
cltd
ret
add
mov
popa
insl
mov
sbb
hlt
hlt
inc
jae
es
ja
sbb
push
popa
xor
enter
pop
xor
sbb
dec
mov
push
xchg
popa
dec
mov
fcoms
cmp
mov
imul
movb
xor
hlt
fisttpll
stos
mov
into
inc
subl
testl
out
inc
adc
gs
imul
cmpsb
adcb
ds
shrl
pop
pop
xlat
push
and
cltd
or
push
mov
push
inc
cmp
pop
jo
add
gs
mov
xor
push
in
mov
test
push
call
sub
test
adc
jp
repnz
and
mov
mov
repz
push
mov
cmp
das
mov
sbb
clc
outsb
imul
push
ja
sbb
loopne
push
push
inc
popf
mov
adc
icebp
add
daa
mov
dec
push
icebp
mov
xchg
dec
stos
repnz
push
sub
lock
cmp
dec
int3
pop
adc
mov
loop
fdivrl
or
aad
jo
or
or
jmp
add
mov
out
dec
push
sbb
lcall
aam
push
imul
sbb
mov
mov
adc
icebp
jb
sub
mov
roll
mov
push
sub
pop
or
int
mov
icebp
dec
cmp
xchg
mov
ljmp
xor
lds
mov
movl
popa
xor
add
or
cld
add
mov
je
jae
add
or
pop
fildl
test
gs
mov
hlt
dec
mov
cwtl
inc
push
push
and
daa
mov
fmuls
push
shrl
fsubrl
iret
hlt
cmpl
fwait
cmp
push
jmp
jb
mov
inc
arpl
movsl
rcrb
inc
xor
push
adc
in
dec
shll
dec
or
dec
imul
jmp
lcall
rcl
into
sbbl
jo
enter
in
adc
mov
jmp
sbb
xchg
test
ret
inc
test
adc
stos
cmp
loopne
pop
pushf
cmp
jae
cmp
stc
dec
test
cmpb
push
or
jecxz
mov
dec
shlb
lcall
daa
and
sahf
lods
addb
pop
rcr
stos
leave
insl
movsl
jb
nop
cli
adc
ljmp
aaa
sbb
add
lret
addl
adc
push
ret
mov
fs
fs
clc
and
inc
pop
int
xor
sarl
push
in
mov
pop
xchg
outsb
adcb
scas
scas
xlat
jge
aaa
add
cld
sbb
mov
mov
jne
lds
into
hlt
rclb
enter
pop
pop
push
xchg
mov
sbb
mov
andl
loopne
jne
mov
and
jge
imul
adc
mov
fmuls
push
push
loopne
ja
push
inc
adc
fidivs
jne
inc
mov
inc
lea
rclb
push
add
inc
mov
mov
push
jl
sub
mov
mov
sub
shlb
and
loope
stos
notb
repz
mov
pop
fnsave
setl
roll
push
icebp
mov
and
push
shrb
and
sbb
out
or
sbb
cld
push
adc
lea
jp
cmp
and
movsb
mov
sahf
adc
enter
and
inc
addr16
cs
in
jg
mov
or
sub
dec
fwait
arpl
inc
pushf
rcrl
xbegin
push
sbb
lock
sub
cmp
inc
dec
aaa
jno
movsl
inc
xchg
mov
sub
xlat
mov
dec
or
pusha
shl
push
jbe
push
xchg
push
scas
and
lcall
mov
dec
leave
xor
in
sub
gs
stos
push
out
outsl
subb
cmp
mov
out
stos
adc
clc
xor
je
mov
pop
xchg
push
pop
scas
lret
test
icebp
or
mov
mov
push
ljmp
mov
addb
stos
ror
ret
lds
mov
adc
push
adc
idivl
or
xorl
inc
popl
and
pop
ljmp
addl
push
push
scas
lret
and
add
xor
cmp
or
mov
sub
out
or
adc
inc
jnp
subb
divb
pop
daa
rorb
data16
adc
mov
jo
aad
mov
mov
fstp
jno
xor
sub
inc
push
xor
adc
cmpsb
mov
push
fsubrl
push
pop
ret
and
lea
xchg
push
push
add
into
pop
xchg
adcb
push
fwait
movsb
stos
pop
popf
sub
mov
mov
inc
int3
fiaddl
incl
bound
jae
xor
scas
jb
repnz
rclb
or
lret
mov
sub
cltd
lret
adc
in
sub
lods
mov
test
scas
orl
cmp
adc
push
xchg
rcl
cmp
das
jne
mov
dec
pusha
mov
xchg
dec
mov
add
inc
push
dec
in
adcl
mov
scas
mov
sub
add
shlb
or
jb
adc
sub
mov
inc
xchg
sbb
cmpb
adc
cmp
cmpsl
call
mov
inc
scas
stos
dec
mov
add
js
stos
mov
inc
cwtl
pop
or
xchg
xor
out
adc
xchg
rcl
inc
mov
mov
into
lods
mov
push
int
lcall
stos
lret
pushw
xor
push
inc
imul
fcmove
orb
roll
pop
mov
loope
les
adc
or
inc
sbb
stos
pop
in
adc
movl
or
and
sahf
outsb
push
mov
inc
sub
inc
fbstp
mov
jo
lea
orl
cmc
stos
jge
shrb
inc
pop
cmc
test
jmp
sbb
dec
in
dec
jp
push
cld
addb
inc
and
mov
mov
popa
mov
je
mov
mov
cmp
mov
adc
mov
test
adc
add
repz
push
and
xor
inc
adc
out
push
add
mov
loopne
adc
inc
pop
ja
mov
lods
push
nop
mov
push
mov
mov
fdivl
adc
fcompl
pop
jl
popa
aam
mov
outsl
push
adcb
add
add
les
sbb
arpl
xlat
sub
fimuls
xchg
lods
push
popa
or
stc
mov
pop
nop
pop
push
mov
imul
loop
sub
and
cmp
in
filds
and
mov
rolb
into
bound
test
sub
xchg
dec
adc
fiaddl
ret
xchg
or
rclb
sub
dec
or
mov
xor
bound
leave
pop
or
jne
iret
xchg
mov
jmp
insl
in
or
add
push
cmpsb
std
ja
xchg
subl
mov
adc
xor
cmp
mov
cmpsl
pop
jns
and
sub
mov
sbb
pop
ret
and
jo
dec
lea
lahf
fidivl
test
cmpsl
and
clc
adc
sbb
cmp
push
xchg
cmp
sbb
push
and
outsb
push
adc
in
cmp
lods
add
clc
ss
inc
mov
stos
sbb
and
int
fwait
sahf
andb
jne
dec
add
inc
popa
push
cli
adc
fisubrl
stos
out
sbb
lcall
dec
push
inc
adc
pop
push
pusha
sub
pusha
movsb
cmpsb
rol
mov
pushf
mov
mov
jae
add
notb
and
sub
dec
pop
jae
push
jo
or
fcmovb
and
mov
es
add
popf
mov
mov
testl
add
cld
fists
or
shlb
stos
xor
jo
cli
es
inc
push
stos
sub
test
push
xor
or
rorb
test
jp
xchg
imul
mov
sub
sub
mov
shll
mov
mov
cmp
imul
pop
ficompl
inc
into
push
add
aam
test
loopne
scas
rclb
push
test
adc
inc
mov
adc
lock
sbb
and
xlat
add
add
sub
stos
xor
movsb
shlb
xchg
in
push
mov
pop
hlt
dec
insl
xor
xchg
mov
dec
into
and
xor
jbe
rorl
dec
push
sbb
mov
mov
mov
sbb
inc
rclb
sbb
mov
out
cld
fs
mov
push
hlt
mov
pop
xor
rcll
int3
jecxz
add
add
adc
movsb
or
aad
ret
cmpsl
push
shrl
add
pop
xor
loop
adc
add
fldenv
pop
cmp
daa
and
cmpsb
sbb
xor
cmp
adc
push
add
out
mov
les
in
push
mov
or
jl
daa
mov
and
jns
add
cmp
js
aas
into
popf
sub
adc
pop
adc
lods
out
jmp
cmpsb
bound
dec
aam
mov
hlt
je
push
gs
adc
stc
xor
ret
jo
daa
popa
mov
pop
inc
cmp
xor
sarb
inc
lock
xor
lret
jmp
adc
pop
sub
cmpsb
push
xor
in
sbb
mov
jo
sub
loope
bound
mov
jp
dec
cmp
sub
aaa
add
call
pop
mov
and
les
mov
cmp
add
sbb
cmp
dec
adcl
adc
pushf
sub
fwait
cmp
push
arpl
cli
popl
das
daa
pop
push
xor
cmp
adc
test
mov
jno
rorl
nop
adc
pop
mov
dec
out
sbb
or
daa
je
xor
mov
roll
mov
adc
sbbl
mov
inc
sti
dec
inc
pushf
lret
in
add
xor
loopne
sti
xchg
in
lea
add
mov
or
les
test
shrb
stos
in
subl
jmp
in
mov
cmpb
mov
ret
pop
lods
test
fdivr
and
mov
push
inc
xchg
popf
push
jo
cwtl
mov
fs
inc
cmpsl
push
xor
cmp
roll
sbb
adc
mov
mov
adcl
cmpb
nop
pop
jecxz
lea
cld
mov
addl
enter
mov
inc
shrb
jmp
test
inc
jp
add
shrb
adc
lcall
mov
xor
bound
mov
adc
jo
test
scas
push
add
cmp
test
xchg
andb
cmp
test
sbb
and
sbb
xchg
test
push
mov
push
push
outsl
loope
add
cmpsb
pop
shrl
cli
sub
push
lcall
push
push
mov
enter
jg
cltd
add
mov
inc
lods
add
push
add
add
add
push
cld
adc
push
stos
dec
add
stos
xor
dec
inc
int
or
inc
lods
and
cmp
or
aam
fxch
fbstp
xor
inc
xor
push
mov
ret
xchg
push
hlt
or
hlt
ljmp
daa
and
lret
sbb
call
cmpsb
xor
ret
push
or
cmp
inc
ret
and
sbb
or
or
pop
and
mov
cld
xlat
sub
outsb
gs
movsb
cld
inc
mov
cmpsl
icebp
fimull
out
or
lret
ss
pop
cmp
push
mov
cmp
shl
icebp
rol
ret
xlat
cmp
dec
ss
add
test
orb
in
sbb
jle
pop
jmp
and
sub
mov
stos
sub
cmp
popa
test
addb
cmp
push
mov
push
push
adc
mov
mov
inc
jno
pop
aaa
iret
mov
es
repnz
pop
inc
mov
xor
sarl
pop
cmp
pop
stos
movsb
jge
add
pop
or
xchg
and
push
lds
aad
rclb
hlt
jae
adc
inc
add
xor
add
cmp
shll
sarb
fnstenv
or
ljmp
dec
inc
inc
xor
or
pusha
fsubr
inc
inc
add
inc
inc
scas
adc
jb
push
mov
lahf
sbb
loope
mov
stos
mov
cmp
lret
adc
ffree
push
lods
sub
sub
sub
jo
pop
add
aam
loopne
int3
push
add
xchg
enter
mov
or
xor
ret
adc
nop
cmp
or
push
std
dec
sub
jmp
mov
add
dec
scas
stos
jg
shll
jbe
fisubl
enter
arpl
xchg
lret
jo
loopne
push
sbb
out
jmp
jecxz
lret
mov
push
jmp
mov
test
movsb
cmp
sahf
and
jle
add
fsubrs
xor
daa
daa
push
and
fsubl
xorl
dec
pusha
adc
xchg
sbb
icebp
cmp
in
xor
js
shrb
xor
sbb
lret
mov
xor
shll
push
push
jge
jnp
call
bound
sub
sarb
cmp
mov
mov
or
mov
mov
pop
out
or
push
jg
sbb
xor
fmull
jb
adc
stos
aam
sub
or
add
pop
dec
adc
adc
dec
ficomps
sbb
add
inc
imul
cmp
sub
push
xchg
inc
popa
inc
xor
adc
xor
mov
inc
adc
enter
iret
push
mov
add
and
jo
cmp
adcb
add
cmp
lods
cmp
imul
add
sbb
hlt
lcall
fidivs
call
mov
mov
adc
aam
inc
mov
inc
imul
add
and
inc
cmp
rclb
and
leave
cmc
cs
inc
mov
ret
xchg
mov
lcall
push
add
sbb
lock
push
dec
jnp
mov
mov
dec
movd
push
add
aam
mov
push
idiv
adc
and
ss
dec
sbb
pusha
mov
push
mov
or
mov
push
sub
es
mov
add
inc
adc
dec
rol
or
aam
stos
or
or
into
mov
add
fwait
aad
push
mov
add
mov
sbb
hlt
ss
xor
cmp
sbb
push
mov
popa
sub
mov
push
sarl
faddl
adc
push
movsl
pushaw
xor
adc
push
push
or
push
sub
pop
sub
mov
mov
fsubl
push
mov
popa
sub
jb
rcrb
pusha
add
xchg
mov
mov
pop
and
mov
jg
stos
pop
scas
cmp
inc
xor
cmp
loop
ljmp
xor
xor
pop
test
xor
hlt
add
ds
lea
mov
cwtl
push
mov
inc
es
dec
cmp
sbb
xchg
cmp
mov
clc
insl
push
push
push
cmpsb
loopne
jns
mov
sub
aad
addb
mov
fbstp
adcl
aam
loop
test
inc
sbb
aad
mov
ret
mov
stos
cmp
rorl
into
mov
adc
xor
or
rcrb
fcomp
mov
orl
mov
lahf
sub
or
dec
arpl
and
gs
pop
mov
mov
xchg
add
pop
inc
cmpsl
out
inc
dec
mov
into
xchg
or
mov
mov
mov
in
or
lods
inc
push
stos
cmp
pop
sub
mov
push
lcall
scas
cltd
push
cmpsb
pop
mov
inc
mov
insl
shrl
bound
fwait
hlt
lret
push
addr16
ss
shlb
adc
fisttps
push
add
shl
out
ret
or
sbb
push
orl
xchg
je
xor
gs
in
daa
add
xchg
mov
push
add
or
call
mov
adc
jge
mov
orb
add
stos
rcll
pop
pop
loopne
adc
add
mov
adc
adc
mov
cmpsl
add
dec
shlb
xor
xchg
lods
hlt
hlt
mov
aam
pop
mov
sub
jmp
mov
or
or
leave
insl
adc
mov
movl
lret
jp
cmp
scas
xor
popa
into
jno
hlt
sub
pop
sub
pop
mov
mov
push
sub
loop
cmp
or
and
push
push
dec
aaa
sbb
sub
test
and
mov
push
add
lahf
or
mov
imul
andl
or
loopne
mov
daa
push
cmp
add
lds
das
js
icebp
mov
mov
ret
xchg
add
testb
aad
hlt
mov
fwait
adc
lods
and
push
adcl
sbb
and
aam
pusha
adc
int
orb
shlb
or
into
adc
cld
les
xor
shrb
push
mov
jns
xor
jno
xor
js
mull
add
cli
inc
push
loope
push
out
mov
push
mov
or
pop
fldpi
ret
adc
sub
sub
ret
xor
inc
in
inc
push
mov
lcall
test
repz
or
and
pop
std
xor
inc
das
imulb
inc
ret
add
mov
sti
or
sbb
push
and
mov
popa
mov
sahf
pop
jnp
push
and
jp
sti
mov
xor
sbb
inc
inc
jbe
cld
xchg
add
cltd
pmaxub
jl
fmuls
xorl
push
dec
adc
sbb
cli
lret
icebp
and
xor
push
jnp
je
aam
gs
lret
or
and
movsl
pop
int3
add
dec
in
fadd
jno
shl
add
adc
push
into
xor
lahf
push
pop
push
imul
lds
mov
mov
mov
push
push
mov
shlb
fs
stos
fisubl
inc
xor
xor
je
jne
subl
push
arpl
cs
adc
adc
sbb
or
sbb
push
jae
sbb
test
xor
add
xchg
pop
cmpsl
loop
popf
ret
cld
mov
push
mov
sahf
in
mov
or
mov
pop
je
adc
adc
adc
jp
sbb
inc
cs
stos
lods
xchg
popa
cmp
push
jno
mov
jnp
rclb
xorl
add
cmp
xchg
jmp
jmp
or
pop
cmpsb
sahf
xorb
dec
enter
js
and
mov
mov
roll
push
js
les
ljmp
xchg
dec
and
sbb
mov
cmp
mov
cmp
hlt
push
adc
sarb
sarl
cli
in
push
imul
pop
mov
mov
push
cs
push
pop
pop
inc
lcall
mov
push
lds
pop
pop
hlt
xlat
add
add
cld
lcall
sub
inc
mov
sbb
into
mov
ret
push
shl
pop
push
orb
addb
ss
pop
mov
js
push
mov
lcall
fs
mov
add
cltd
sahf
pusha
icebp
adc
sub
jno
or
cmp
jg
call
dec
ret
daa
add
pop
sub
adc
add
add
or
test
cs
adcb
inc
pop
push
ss
sbb
adc
add
inc
jae
fwait
push
rolb
jne
stos
lea
cmp
data16
sbb
and
or
outsb
outsl
jecxz
mov
rorb
sub
add
stc
pop
pop
mov
pop
inc
mov
inc
or
xor
cmpsb
mov
hlt
test
mov
cmp
rcrl
shlb
pop
or
into
adc
stos
mov
add
cmp
xorl
sbb
aaa
push
sub
or
dec
push
outsl
fsubrl
xchg
xchg
mov
sbb
sbb
stos
xchg
mov
mov
jns
inc
clc
mov
imul
subb
sub
add
popa
pop
and
fwait
bound
cs
push
arpl
push
and
sub
ficoml
sbb
lods
ret
inc
push
mov
shrb
pop
jmp
in
call
xor
adc
push
pop
sbb
rcrl
ret
sbb
xor
gs
mov
adc
push
xor
or
arpl
lods
cmp
ror
push
inc
pushf
test
loopne
mov
adc
test
xor
popa
add
sbb
jle
push
push
cli
sub
add
pusha
sar
scas
mov
ja
addb
loopne
decl
bound
lret
sarb
addr16
mov
mov
test
push
adc
dec
push
gs
lods
jo
mov
lds
jo
mov
jmp
out
shl
repnz
cmp
dec
inc
movsl
xor
hlt
mov
dec
popa
rcl
xor
lret
rol
adc
jo
fistpl
outsb
les
and
and
mov
fwait
lahf
into
or
jb
jge
cmp
mov
push
jge
hlt
push
andl
aad
ffreep
rcr
mov
push
shlb
mov
inc
out
mov
sub
mov
add
xchg
adc
sbb
or
es
add
sub
cmp
jmp
mov
pop
test
push
lret
and
pop
test
cwtl
inc
scas
test
ss
scas
pop
leave
loopne
pop
movsl
pop
xor
mov
lods
jb
imul
and
add
test
lock
dec
mov
sub
jle
pop
push
les
lret
bound
mov
fidivl
popf
pop
add
sub
jbe
daa
cmpsb
xor
int3
xchg
mov
pop
shld
inc
mov
mov
sbb
shlb
jo
jno
mov
mov
jae
jno
mov
jecxz
sbb
pop
roll
rolb
clc
lcall
and
mov
daa
in
loopne
movsb
outsl
inc
or
add
fwait
xchg
push
xor
ja
jle
into
push
cmp
sarb
and
shl
stos
inc
push
jge
inc
xlat
test
xor
adc
push
push
xor
bound
sbb
push
pushf
cltd
outsb
or
hlt
push
sbbb
mov
adc
xor
dec
inc
imul
jbe
aam
push
jg
adc
fiaddl
push
bound
or
xchg
add
aaa
cwtl
inc
xchg
ret
cwtl
push
mov
cmp
pop
pusha
jo
fwait
xchg
pop
shl
dec
pop
dec
adc
dec
dec
flds
pop
cmp
stos
sub
negb
push
dec
jne
rcrb
xchg
mov
add
lcall
mov
and
push
inc
hlt
add
push
lods
orl
adc
bound
or
es
out
push
test
or
int
jno
mov
rcrl
push
sub
jnp
lds
paddsw
push
lcall
inc
mov
mov
stos
lahf
into
mulb
gs
ds
repnz
lods
pop
fsubrs
inc
sub
clc
push
xor
dec
das
xchg
les
or
mov
loopne
fisubrs
andl
idivb
bound
das
mov
sub
into
add
push
push
mov
sbb
into
xchg
adc
adc
jae
add
pop
and
cli
inc
xor
push
out
aam
mov
lods
mov
insl
mov
lods
xchg
enter
dec
arpl
pop
mov
or
test
lods
pop
push
sbb
xor
insl
xchg
stos
mov
add
fadds
add
in
xchg
inc
repz
and
mov
dec
mov
icebp
sub
in
mov
les
push
inc
cmp
sub
ret
scas
icebp
mov
lods
shlb
push
xor
cmc
push
mov
xor
pop
sub
jne
lcall
mov
outsl
out
dec
dec
xor
push
add
cwtl
sbb
dec
push
cmpsl
or
dec
jge
lea
xor
add
negl
inc
test
jno
imul
push
xor
jl
inc
or
xchg
xor
add
mov
xchg
pushf
xchg
inc
or
lods
addl
xor
push
mov
mov
inc
flds
orb
push
scas
ljmp
fstpt
mov
xchg
push
cmp
xor
pop
and
addr16
rcl
lods
dec
in
mov
mov
mov
imul
jae
xor
sbb
icebp
rcrl
ret
push
push
and
shll
jmp
add
dec
sub
mov
pusha
je
add
mov
mov
lret
sub
and
lcall
add
mov
imul
sub
pop
inc
cmp
pusha
mov
test
xor
cmp
stos
pop
mov
insl
add
pop
jns
xor
stos
inc
cwtl
call
xchg
subl
and
cmc
in
push
cmp
dec
ret
imul
mov
push
bound
adc
outsb
sbb
mov
fnstenv
xbegin
push
aam
add
pusha
inc
push
xchg
adc
ret
rcll
mov
add
and
fldl
loop
testl
arpl
mov
mov
shll
jnp
push
push
mov
mov
sub
andb
xchg
cmc
jp
pusha
fildl
stos
scas
je
icebp
xchg
shlb
adc
push
enter
js
lea
ljmp
mov
adc
sbb
inc
mov
mov
xchg
imul
sbb
pop
popf
add
mov
cmp
dec
inc
xor
sub
sub
fwait
sub
je
stos
jae
jnp
sub
sar
add
sbb
jne
sub
sbb
outsb
mov
enter
mov
sahf
mov
das
shlb
xchg
in
pushf
mov
mov
inc
pop
or
lds
inc
mov
and
mov
roll
dec
adc
daa
push
jp
cmpsb
scas
jo
lret
outsb
stos
adc
xchg
mov
lods
sbb
movsl
adc
pop
xchg
sub
mov
push
and
xchg
mov
imul
rcl
popa
int3
and
jo
xchg
jno
test
dec
incl
popa
adc
mov
loopne
push
repz
cltd
mov
fwait
jno
jb
stos
add
pop
dec
push
lea
shl
pusha
stos
sbb
add
adc
lcall
add
jb
fcmovbe
push
in
cmpl
pushf
dec
into
rcrl
xchg
test
call
rol
into
testb
aam
push
aad
inc
test
and
mov
mov
jp
lret
mov
clc
lcall
or
or
mov
ret
roll
push
lcall
test
dec
sub
dec
and
jo
pop
add
dec
and
xlat
fimull
std
cmp
push
xchg
sub
subb
mov
or
sbb
clc
loope
pop
fimuls
nop
push
sub
xchg
aad
lds
insl
or
decl
dec
add
add
test
cmpb
into
int3
xchg
stos
inc
sbbl
mov
lods
mov
imul
sub
or
xor
in
xor
mov
imul
sahf
mov
mov
lahf
fmull
xor
leave
push
leave
inc
adc
lret
arpl
dec
xor
inc
nop
or
mov
add
jl
roll
sbb
test
jnp
xor
rcl
lret
sbb
hlt
mov
mov
stos
lods
loope
inc
xchg
dec
cmc
or
lods
out
xchg
negb
cmpb
pusha
ja
iret
shr
fstpt
mov
test
sub
lock
pop
shll
bound
addr16
pushf
push
popf
push
push
adc
jbe
push
cwtl
sub
pop
mov
push
inc
cmp
dec
je
jns
inc
or
sahf
hlt
outsb
data16
mov
and
iret
cmp
data16
iret
test
mov
mov
or
mov
inc
and
xor
pop
popa
adc
lods
cwtl
pop
test
sbb
or
mov
inc
mov
sub
sub
cmp
inc
aaa
sub
movl
xchg
mov
add
lcall
cmp
dec
or
jns
sarb
lods
sub
pop
mov
adc
inc
or
jp
ljmp
xchg
pop
insb
jmp
xor
sub
xchg
adc
add
sub
jne
ret
andb
mov
rcl
test
pop
push
mov
loopne
adc
push
lea
daa
and
sub
mov
mov
cmp
ljmp
jnp
xor
fsub
sbb
lret
stos
mov
mov
leave
push
adc
jo
sub
shll
bound
mov
push
pop
sub
inc
in
mov
sub
subb
add
push
lret
lock
push
add
dec
or
mov
jno
stos
dec
xchg
mov
stos
inc
enter
test
ljmp
ret
dec
pop
sbb
adc
sbbb
dec
pop
rcll
stos
push
sarb
mov
dec
lods
fst
and
leave
aam
adc
push
dec
cmp
leave
add
push
jno
out
mov
adc
cmp
push
sbb
sbb
and
adc
jo
sub
test
adc
mov
in
adc
add
gs
pusha
les
mov
inc
inc
lea
enter
leave
mov
notl
lea
inc
push
hlt
or
andb
dec
add
adc
dec
je
push
mov
dec
pop
into
or
and
push
push
roll
je
push
jne
adcl
or
shll
inc
and
insl
cmp
lods
or
cwtl
jno
dec
pop
inc
or
cmp
jmp
add
mov
mov
mov
cmp
shrl
xchg
push
fsubrs
inc
test
mov
adc
arpl
lods
decb
mov
jo
xor
and
rclb
stos
inc
cs
in
pop
push
aam
jb
mov
xchg
or
pop
lock
xchg
add
out
and
xchg
ret
mov
dec
gs
push
cmp
int
mov
push
fadds
jle
fs
mov
jno
shlb
mov
add
lock
mov
add
movsl
aas
jno
sbb
xchg
add
jge
shrl
cmp
orb
leave
dec
pusha
adc
jo
push
or
sub
or
pop
push
adc
push
lea
add
data16
adc
pop
call
xchg
imul
es
rclb
ss
adcl
test
push
mov
mov
inc
fidivrs
cmpsb
jae
push
cld
cmpsb
cmp
adc
pop
inc
and
into
icebp
addb
imul
xor
or
pop
sbb
hlt
fwait
ret
inc
es
mov
xor
dec
push
js
add
aad
loope
lods
xchg
mov
push
hlt
push
jno
adc
or
xor
rcrl
mov
push
andl
dec
mov
std
jg
jle
outsb
loopne
inc
cmp
lods
push
add
adc
inc
dec
xchg
in
adcl
mov
cmp
sbb
inc
lcall
test
dec
into
inc
mov
call
and
out
inc
fistl
jo
insl
sub
mov
push
cmp
fadds
and
pusha
loop
xor
movsl
jecxz
stos
jmp
mov
mov
mov
test
or
add
rclb
mov
mov
mov
orb
ljmp
cmp
add
dec
ljmp
mov
pop
xor
out
push
xorb
xor
push
jo
sub
sbb
or
sarb
sub
inc
add
hlt
in
and
arpl
mov
mov
addl
push
push
jo
jo
pop
in
loope
mov
mov
pop
sbb
xlat
or
mov
mov
cmp
loopne
xchg
sub
shrb
sub
ret
inc
movsl
pusha
popf
or
scas
into
jae
push
call
or
decl
inc
in
push
jo
push
mov
push
push
addl
sbb
inc
insb
cmp
lcall
mov
mov
push
sub
dec
test
add
mov
invd
or
mov
js
inc
inc
pop
popa
add
test
scas
inc
mov
sbb
jno
pop
sub
dec
std
loop
add
inc
es
mov
sbb
jmp
sbbb
xchg
je
inc
pop
pop
insl
mov
xor
push
mov
add
lret
xchg
popa
inc
pop
add
jp
and
jnp
push
jmp
stos
stos
addb
mov
movsl
sahf
xlat
mov
jne
dec
adc
ljmp
or
ljmp
mov
rclb
mov
into
xor
sub
jp
xchg
jbe
sbb
add
bound
sbb
adc
push
sub
dec
push
lods
mov
mov
xlat
sub
sub
push
mov
mov
fiaddl
cli
mov
xor
rol
lcall
cmp
jb
inc
mov
inc
test
and
mov
ret
mov
push
mov
cs
xor
lret
mov
aas
lock
mov
push
scas
add
push
mov
push
hlt
push
cmp
mov
sahf
inc
inc
add
add
sub
and
test
mov
jne
jno
or
push
push
popf
call
add
data16
add
data16
pop
fistl
fwait
popa
jo
jge
jno
ror
adc
push
test
xchg
test
jl
inc
mov
sbb
sub
fsub
sbb
mov
mov
mov
imul
inc
add
pop
test
into
nop
xchg
dec
and
add
jno
mov
nop
mov
mov
jbe
mov
insb
mov
popf
cmp
call
xchg
and
jns
in
test
loopne
xlat
add
cmp
push
mov
mov
jnp
push
cld
in
mov
mov
adc
jns
adc
sub
push
mov
add
mov
sub
add
xor
sub
sub
dec
push
xor
push
mov
xlat
and
adc
popa
inc
aam
pop
cmc
cmpsl
fcompp
sbb
or
in
adc
and
inc
adc
int3
mov
push
mov
aam
sbb
aam
ret
ret
lea
push
ret
push
mov
orb
jle
mov
dec
inc
mov
xchg
xchg
mov
pop
adc
pushf
das
adc
dec
and
add
jno
xchg
inc
mov
mov
mov
jo
clc
mov
nopl
or
shrl
repnz
mov
cmp
inc
inc
adc
push
notl
adc
inc
sub
adc
out
fdivrl
pop
roll
pop
push
jp
or
cmp
push
sub
shrl
lea
mov
mov
lock
outsl
bound
loopne
vunpckhps
add
xor
ss
sub
push
popa
data16
shlb
test
lcall
push
xlat
and
and
jo
sbb
jp
les
push
lret
mov
sub
lods
repnz
push
pop
out
gs
mov
pop
test
mov
mov
or
mov
insb
icebp
inc
xor
mov
mov
push
shl
iret
jl
inc
pop
sarl
insb
test
shlb
in
sub
ret
cmp
arpl
inc
add
cmp
mov
cltd
push
and
jo
push
push
stos
rolb
shr
sbbb
xchg
mov
push
sar
or
test
sub
ror
inc
fs
add
or
pusha
sar
adc
movsl
inc
mov
gs
jl
stos
mov
adc
arpl
outsb
mov
in
mov
rcr
mov
imul
mov
add
sub
adc
outsl
sbb
and
dec
gs
adc
adc
js
pop
ss
cmp
push
inc
je
or
mov
push
adc
stos
ret
mov
add
js
sub
insb
inc
mov
rorl
xchg
xor
js
das
xchg
push
cwtl
xchg
ja
ret
mov
and
addb
xchg
or
in
or
test
movb
int
cmp
in
enter
imul
fsubr
imul
jmp
mov
add
les
push
sub
pop
dec
xchg
xor
mov
pusha
jp
cld
inc
push
iret
rolb
mov
dec
add
into
dec
ret
cwtl
loopne
stos
shl
push
addr16
cli
mov
lahf
out
inc
add
push
movsl
lcall
or
and
loop
loopne
sbb
inc
jmp
subl
cmpsl
loopne
mov
add
test
xor
out
stc
scas
lcall
mov
ficomps
mov
xchg
aas
xchg
aas
ret
mov
insb
aaa
inc
cltd
addb
adc
popa
stos
popf
mov
push
inc
sub
insl
xor
sbb
lret
int
ljmp
in
or
popa
adc
mov
sbb
in
push
adc
and
sbb
sti
push
xor
or
mov
xchg
xor
fs
aam
add
lods
mov
shr
mov
lock
imul
aad
mov
xchg
ljmp
jmp
int
push
popa
ret
sbb
xor
adc
pop
sbb
push
mov
in
enter
roll
test
popa
popa
dec
rcll
adc
jne
jo
dec
push
fdivrl
push
pop
add
pusha
pop
int
out
push
cmp
dec
inc
cmpsb
pop
add
jp
push
jbe
lahf
dec
mov
jne
mov
pop
mov
sbb
std
shll
push
xor
loope
sbb
pop
mov
test
dec
inc
or
sbbb
and
arpl
jb
adc
bound
jp
ffreep
lret
xor
pushf
mov
out
cltd
sbb
mov
dec
outsb
push
pusha
test
xor
xchg
incl
pop
in
adc
fwait
loopne
cmc
in
inc
sbb
mov
mov
pusha
ret
xor
or
push
or
push
cwtl
iret
add
push
outsb
push
pusha
loope
mov
mov
mov
push
push
push
nop
sbb
jnp
mov
stos
pop
push
lock
push
mov
icebp
cltd
sub
pop
add
push
sar
aad
dec
adc
push
adc
call
pop
adc
stos
fisubl
adc
call
mov
adc
or
cmp
cs
or
sub
imul
ret
aam
test
push
loop
xor
rcll
mov
or
inc
inc
mov
push
adc
sbb
pop
sbb
inc
xchg
add
dec
test
jge
hlt
pop
mov
mov
loope
xor
cmpsl
lea
sar
bsf
xor
or
sbbb
lldt
push
xor
popl
dec
sub
daa
mov
add
and
sub
loopne
jg
fnsetpm(287
sub
push
xor
cmp
lods
jo
xchg
les
jne
inc
popw
pop
sub
mov
mov
cmp
mov
add
mov
jae
shlb
addb
popa
dec
add
and
push
mov
dec
inc
cld
jge
leave
mov
add
or
push
jae
sbb
or
es
or
jmp
lea
xchg
movsl
ss
lret
aad
dec
cli
dec
push
mov
jmp
cmc
ret
les
add
push
inc
jbe
ret
mov
mov
popf
mov
shlb
bound
mov
inc
popa
sub
ss
js
sub
push
jb
push
and
mov
adc
cmp
nop
sub
mov
inc
pop
dec
scas
push
adc
sbb
andb
ret
push
pop
inc
dec
dec
adc
pusha
pop
pushf
add
scas
xor
cmp
fildl
add
mov
push
push
icebp
inc
push
inc
add
or
daa
stc
sub
jnp
push
out
sbb
add
test
in
out
push
push
andl
push
movsw
pop
adc
sbb
testb
aas
jbe
inc
lds
xlat
daa
sub
and
cmc
ret
xor
lret
sbb
inc
ljmp
pop
rcrl
pop
cmpsl
jp
js
fnsave
sbb
and
sbb
dec
add
aad
rcll
gs
outsl
pop
sbb
sbb
pusha
add
xor
push
rorl
clc
cmp
jge
pop
add
push
into
leave
cmc
push
pusha
adc
sub
jno
xchg
push
or
cwtl
gs
ret
lock
and
and
push
mov
xor
lret
pop
stos
outsl
dec
imul
pop
and
lcall
dec
rcrb
xor
adc
pushf
add
adc
xlat
ret
mov
dec
bound
sub
mov
jge
addr16
sbb
mov
push
fcmovnbe
mov
push
pop
xchg
dec
push
or
xchg
jg
push
inc
cmpsb
sbb
ror
mov
pop
add
push
xchg
cmp
stos
xor
sbb
add
xlat
push
push
scas
sub
rcl
popa
pop
inc
jne
sub
dec
push
test
dec
pop
xchg
in
jb
insl
sbbl
push
lcall
movsb
es
popa
stos
cmp
ljmp
inc
and
mov
and
sbb
dec
or
or
into
hlt
sub
ret
jo
stos
fcmove
inc
fwait
loopne
jo
sub
mov
push
clc
inc
push
bound
scas
aad
jp
or
rclb
stos
jnp
in
sbb
push
lahf
arpl
popf
push
push
outsl
int
mov
adc
dec
paddq
shlb
fnsave
mov
jnp
int
scas
mov
inc
mov
in
mov
js
and
stos
add
or
jecxz
or
testb
rorl
inc
das
push
sbb
mov
sbb
dec
push
stos
int3
mov
test
ret
or
addr16
stos
mov
inc
stos
jp
dec
xor
data16
popf
lahf
adc
add
push
add
inc
adc
ffree
mov
dec
shlb
stos
jb
push
mov
inc
leave
repz
aam
pusha
mov
ret
aas
cmp
push
fwait
clc
test
mov
push
mov
addl
mov
jo
insl
stos
loope
sbb
mov
loope
push
mov
xchg
and
cs
mov
push
shlb
pop
test
insl
leave
adc
add
ret
xor
xlat
test
or
das
inc
adc
loopne
jne
std
push
loope
push
cmp
shlb
loop
cltd
sub
adc
adc
or
stos
jmp
mov
cs
lret
fnstenv
sbbl
loopne
pop
test
jo
mov
add
mov
push
sub
sbb
pushf
call
fwait
pop
push
js
jmp
mov
jnp
mov
test
adc
add
out
stos
iret
mov
rcrl
mov
inc
out
inc
xor
or
test
sbbb
mov
fsubrs
inc
mov
or
push
jnp
sbb
lret
gs
inc
inc
add
aam
push
xchg
cmp
sbb
bound
ss
sub
fs
and
mov
fdivl
hlt
lock
add
dec
lea
aad
jns
mov
inc
inc
adc
andl
mov
cwtl
dec
test
add
mov
inc
fnstenv
hlt
pop
lock
mov
add
cmpsl
ljmp
push
adc
decl
cmp
shlb
shlb
cmp
loope
mov
push
imul
jl
out
push
sub
add
loopne
lahf
mov
jo
je
xor
push
insl
stc
dec
add
shrl
lcall
sub
push
adc
push
pop
lds
mov
ljmp
jge
out
test
stc
ret
jb
dec
pop
cli
mov
daa
cmc
mov
dec
jb
add
fstpt
loop
add
or
cmp
in
adc
aas
add
sbb
jg
loopne
stos
push
pop
cmp
mov
inc
xchg
pushf
jae
scas
pop
lret
loope
cwtl
jb
cmpsb
and
sbb
insl
or
mov
dec
pop
push
inc
push
mov
scas
pop
or
add
xor
hlt
push
xchg
xchg
movl
cmpb
xor
add
xlat
fnstsw
push
pop
adc
icebp
inc
adc
orb
sbb
lret
sub
adc
mov
jb
push
xor
in
incl
jbe
std
pop
orl
mov
add
pop
scas
or
xadd
sarb
push
test
popf
sahf
icebp
pop
inc
xor
popa
hlt
mov
sbb
dec
adc
mov
adc
mov
mov
rclb
test
andb
mov
das
xlat
rcr
push
aam
cmp
sub
sub
lcall
xchg
mov
push
or
mov
add
or
aad
lods
flds
shll
sahf
add
adc
stos
inc
dec
xchg
hlt
hlt
popa
cmovle
jecxz
inc
add
pop
sub
pop
iret
xchg
pop
lods
mov
movsl
inc
aaa
lods
jbe
inc
loopne
ret
add
inc
push
add
subb
pusha
adcb
and
mov
cmp
adc
push
pop
push
je
cltd
lret
inc
mov
add
clc
int
add
xchg
add
add
xchg
test
xor
loope
lods
arpl
jae
popa
ljmp
adc
pop
xor
lret
inc
push
clc
adc
scas
jp
add
inc
sub
bound
ret
mov
lods
lret
xor
pop
test
push
sbbb
jecxz
inc
push
scas
push
xor
xor
popf
movsl
mull
adc
lcall
jnp
pop
popa
sbb
jo
or
sub
push
mov
cmpsl
cmp
and
jae
movl
mov
ret
xor
jmp
ja
adc
inc
xor
orb
insl
arpl
cmp
cmp
inc
scas
or
mov
xchg
sti
aad
imul
xchg
lea
jno
cmpsl
pop
dec
inc
shlb
enter
add
mov
lods
inc
mov
stos
push
loop
jo
sbb
sbb
add
out
sub
in
push
mov
shll
jl
mov
push
cltd
sbb
scas
and
pop
push
dec
aaa
and
jo
lea
incl
jl
loop
lock
out
cmp
lret
aad
dec
inc
push
add
mov
xorb
pushf
mov
lds
dec
pop
add
inc
jne
push
test
pop
es
rorb
ret
cmpl
xchg
ret
push
mov
lcall
or
push
inc
add
mov
sub
inc
lret
inc
stos
cmp
push
cmp
add
cmpsl
mov
aad
push
mov
xor
popa
push
push
loope
popa
add
pusha
or
mov
lcall
loope
and
popf
adc
add
popa
ljmp
pop
mov
xchg
adc
movsl
test
jb
mov
push
sub
mov
ret
roll
leave
into
insl
push
sahf
hlt
add
pop
enter
das
mov
mov
add
nopl
and
push
roll
mov
rorl
mov
push
aam
push
fcmovnu
out
int3
jle
jno
or
stos
xchg
pop
sub
loop
adc
gs
clc
sub
lds
mov
adc
js
ss
xlat
sbb
pop
loopne
and
daa
or
push
sub
add
sub
iret
adc
push
xchg
data16
out
pop
mov
or
fstps
push
add
pusha
rolb
add
shrl
push
lcall
and
push
iret
ljmp
mov
loopne
repz
rcl
add
dec
inc
dec
call
bswap
push
and
sbb
jns
inc
sbb
jo
sub
les
push
scas
mov
lods
sub
push
dec
xor
xchg
rcrl
xor
lods
andl
hlt
inc
pop
jge
jp
test
push
les
inc
data16
sbb
push
ds
sub
mov
inc
mov
or
aam
cmp
sbb
jmp
cmp
aaa
jmp
xlat
in
mov
test
or
mov
xor
inc
jae
jl
mov
outsb
adcl
add
aad
jmp
sub
daa
sarb
ja
shrl
out
sub
sub
pop
sub
or
inc
jmp
aad
inc
add
adc
hlt
cwtl
push
rol
ficomps
add
inc
xchg
insl
push
pop
mov
cwtl
mov
adc
add
pop
hlt
xlat
mov
push
decl
or
loop
ret
ret
rorb
cmovb
push
pop
push
movsl
dec
sti
jae
test
pop
ja
or
loop
lcall
ret
subl
rcl
clc
lcall
inc
mov
push
daa
pop
xchg
out
sbb
sahf
adc
jno
mov
ljmp
ret
loopne
jne
inc
add
iret
mov
scas
into
jno
fwait
mov
cld
sbb
inc
cmp
subb
sub
inc
adc
cmpsb
pop
adc
mov
or
sbb
dec
lea
xor
cmp
xor
mov
mov
push
stos
shll
movsl
pusha
xchg
cmp
push
adc
ret
push
andb
das
dec
xchg
mov
mov
adc
call
lods
jbe
gs
ficoml
daa
dec
cvtps2pd
sub
adc
movsb
jle
mov
inc
fnstcw
inc
push
jle
adc
sbb
jp
in
aad
sub
stos
les
xor
fcoml
lock
sbb
push
dec
loopne
cmp
push
sub
add
sub
xor
sub
adc
adc
and
or
fsub
push
dec
sbb
jno
lcall
push
daa
mov
push
adc
cmpsb
test
mov
or
cli
push
enter
sbb
arpl
fnsave
jp
scas
shlb
jns
push
cli
add
xor
pop
xorl
push
inc
xorb
mov
out
daa
mov
xchg
pop
outsb
jae
sub
push
push
pop
adc
hlt
sbb
mov
or
cmp
leave
mov
sub
jo
pop
in
adcl
push
mov
int
pop
loopne
jp
mov
mov
ja
xchg
sub
loope
add
or
repnz
push
cmc
nop
cmp
hlt
or
push
mov
sub
inc
fwait
test
cmp
cs
add
push
adc
sbb
sbb
add
mov
push
adc
add
xorb
mov
mov
mov
lods
jmp
mov
or
lds
mov
movsl
into
mov
in
fwait
out
inc
rol
loope
in
push
and
or
int
pop
mov
shlb
adc
orl
and
lods
inc
in
mov
mov
push
xor
inc
movsb
push
gs
lret
mov
mov
mov
fimull
sub
aaa
adc
push
push
or
mov
pop
popf
xchg
jbe
sub
inc
adc
ljmp
or
and
add
dec
push
push
cmp
and
outsl
or
test
adcl
lahf
add
adc
inc
shr
inc
out
push
inc
scas
mull
rcl
cld
in
stos
or
sbbl
mov
push
orb
mov
add
mov
dec
push
mov
jno
pop
push
mov
inc
jmp
mov
dec
adc
add
xor
add
clc
xchg
je
cmpb
mov
and
cltd
data16
fidivl
pusha
cmc
adc
shlb
jl
orl
mov
and
jge
fcomip
hlt
aam
sub
mov
pop
into
hlt
das
or
mov
dec
or
xlat
xor
push
push
test
push
sti
sbb
sahf
adc
lea
adc
jae
push
cwtl
data16
sbb
push
loopne
push
xchg
mov
sbb
cld
stc
mov
cmp
andb
orl
imul
and
andl
call
mov
fildl
filds
adc
hlt
adc
adc
xor
hlt
xor
xlat
shl
pop
add
push
fs
inc
dec
insb
cld
std
outsl
stos
add
nop
mov
sub
ljmp
pop
test
sar
mov
popf
pop
sti
sbb
xchg
in
daa
cwtl
mov
or
rolb
pop
inc
out
push
jns
mov
push
xor
xchg
rorl
push
pop
cmc
jl
cmp
sub
sbb
fimull
push
inc
mov
push
mov
push
lods
and
bound
and
insb
lods
mov
sbb
xchg
inc
or
test
sbb
add
dec
adc
stos
jmp
aam
cltd
loopne
stos
push
push
mov
inc
sbb
pop
inc
and
push
pop
shl
sarb
mov
xchg
outsl
stos
inc
bound
pop
ret
sarb
jno
mov
sub
sub
mov
push
fnsave
dec
je
push
jae
pop
cmpl
inc
pop
pop
mov
mov
add
xor
xor
cmpsb
fmull
fimull
jle
adc
rcll
gs
lods
scas
or
stos
cmp
xchg
aaa
xchg
pop
rcll
jl
inc
scas
or
or
adc
sub
sub
mov
sbb
push
dec
mov
sbb
jecxz
push
inc
lods
out
add
adc
inc
lods
inc
shrb
test
xlat
and
push
push
fcom
shlb
and
sub
xor
stos
mov
cltd
aas
lret
or
adcb
daa
mov
loopne
mov
cmp
test
pop
jmp
pushf
std
sub
mov
pusha
mov
push
rcr
fs
pop
cwtl
or
mov
xor
adc
ret
imul
scas
test
jb
addb
push
pop
adc
add
jno
int3
mov
inc
loopne
mov
add
dec
scas
int3
mov
pop
adc
or
xchg
test
call
and
aas
jl
int3
fildll
sarl
subb
sbb
aas
mov
adc
jne
rorl
ljmp
cmpsb
fiaddl
in
or
cld
jle
rcrb
push
add
cmp
jnp
xor
mov
dec
sbb
les
repnz
xor
inc
add
imul
fistpll
add
daa
xor
in
push
cmp
loop
addr16
cltd
cmpsl
mov
push
add
and
pop
adc
stos
loope
push
jnp
jnp
push
dec
xchg
stos
ror
std
imul
xor
pop
push
jg
out
mov
ret
adcl
push
mov
popa
addr16
inc
jo
mov
sub
lret
adc
cs
dec
sub
jmp
add
mov
cmpsl
push
cmp
rorb
in
imul
xchg
insb
dec
push
adc
scas
rorl
push
lds
push
mov
mov
dec
call
sub
mov
xor
in
hlt
xor
push
inc
lods
push
pop
mov
mov
stos
lret
add
stos
mov
out
mov
mov
push
cmp
mov
loopne
mov
ret
mov
xor
sbb
cs
mov
dec
daa
sbb
push
shlb
and
pop
cld
ret
mov
push
inc
scas
and
aam
adc
and
adc
adc
sti
stos
test
xchg
jnp
mov
ret
jno
jl
xor
cli
enter
inc
stos
aad
add
mov
movsl
lret
repnz
jno
xor
insb
lea
stos
pusha
rcr
push
mov
pop
daa
mov
mov
hlt
mov
push
pop
mov
mov
pusha
sub
rorb
hlt
stos
dec
and
mov
add
push
mov
cli
push
sbb
daa
das
xlat
and
xchg
push
jl
inc
xor
out
push
push
popa
jb
ret
cmp
adc
add
fimull
movsl
adc
inc
pop
test
pusha
or
cmp
fildl
xchg
inc
mov
ret
push
sub
push
xchg
or
inc
mov
sahf
sbb
out
pop
loopne
aad
mov
iret
gs
mov
stos
push
bnd
mov
nop
mov
sub
insl
inc
loopne
and
sarl
dec
movsb
ljmp
out
fidivrl
lods
cmpsl
dec
push
sub
lcall
sub
mov
stos
cmpsb
push
push
push
pushf
lret
mov
lcall
fisttpl
call
xchg
pop
inc
push
xor
test
push
sub
push
add
sub
inc
add
and
add
sbb
mov
pop
mov
push
movsl
inc
mov
sub
iret
sbb
scas
adc
inc
sti
ds
jno
mov
xchg
bswap
aad
mov
repz
cmp
pop
rorl
and
loopne
cs
ljmp
mov
or
repz
adc
push
mov
and
inc
push
xor
sub
outsl
pop
andb
add
push
mov
aaa
ljmp
out
xchg
mov
and
out
insb
scas
loopne
push
adc
inc
xor
sub
fisttpl
inc
stos
lock
sar
xor
adc
push
mov
cs
push
loopne
mov
mov
sti
jge
push
and
ja
mov
out
mov
pushf
cmp
xor
fwait
mov
out
test
test
shll
adc
test
inc
cmp
xchg
rcl
push
mov
ficompl
adc
or
sbb
imul
test
stos
mov
sub
fnstenv
movsl
popa
inc
push
mov
inc
cmp
adc
push
xor
or
cmp
out
sub
push
or
xor
jo
aad
jl
add
movsl
in
scas
dec
mov
out
mov
adcb
push
scas
xchg
sub
push
test
cmp
push
adc
cmp
and
sub
inc
sbb
dec
cmp
add
push
mov
cmp
mov
xor
out
ljmp
jl
cmpsb
xchg
mov
sub
mov
sbb
leave
mov
jne
shrb
gs
xor
jno
ljmp
stos
jl
bound
cs
mov
push
add
in
gs
mov
js
outsb
cmpsb
leave
mov
mov
ljmp
pop
int3
ret
xor
loopne
or
jno
outsb
das
add
fcoml
mov
test
popa
sub
inc
push
orl
cld
add
or
pop
push
and
sbb
add
fdivp
cmp
inc
mov
imulb
push
sbb
sub
push
push
cltd
mov
dec
or
dec
stos
pop
push
mov
mov
cwtl
xchg
out
xchg
test
jmp
adc
sbb
pop
jecxz
bound
or
sahf
push
adc
pusha
stos
push
stos
or
out
out
or
rolb
add
fadds
bound
xchg
adc
cld
ss
push
imul
and
dec
fwait
popa
add
cmp
lret
test
mov
adc
pushf
std
jo
push
loope
adc
xchg
pop
jo
push
mov
mov
addl
cmp
or
shrl
adc
mov
fistl
push
ror
and
popa
mov
mov
fsubl
lods
pop
int3
cmp
mov
andb
addr16
adc
popa
push
test
or
js
rol
fadds
inc
jmp
xchg
adc
adc
test
aad
xchg
nop
dec
and
pop
dec
xorb
pusha
jo
fsubl
repnz
cld
jno
andb
rcrb
insb
jg
addb
push
push
xchg
jae
arpl
jp
dec
push
loope
stos
lea
and
shlb
outsb
push
adc
arpl
andb
call
and
bound
and
jb
popf
pushf
dec
push
push
mov
mov
sub
xor
aam
jae
test
jp
flds
fs
aam
movsb
push
add
pop
inc
orl
pop
stos
xor
mov
mov
add
cmp
int3
or
cld
mov
sbb
mov
add
pop
lret
inc
pusha
cmpsb
pop
push
test
pushf
sub
mov
not
sbb
dec
adc
aaa
and
popf
test
sub
xor
mov
or
jp
adc
mov
add
add
fimuls
aam
push
or
xor
xchg
leave
dec
or
add
add
adc
jg
inc
inc
push
out
mov
call
movsb
cmp
mov
jbe
and
jp
cmp
add
and
je
scas
sbb
sub
or
in
push
mov
or
ret
and
push
push
mov
add
inc
ss
mov
fcoml
loope
adc
mov
mov
push
push
scas
mov
mov
push
xorb
add
decl
andl
insb
addr16
adc
movsl
test
test
dec
rorl
xor
test
pop
mov
ret
dec
adc
adc
aaa
daa
xchg
inc
or
cmp
add
xor
outsb
sbb
add
fmuls
ret
adcl
gs
and
mov
mov
push
movsl
or
mov
push
push
jg
call
mov
pusha
mov
js
pop
loope
cmp
inc
outsb
in
push
pop
mov
jmp
sub
shl
sbb
sbb
jbe
push
adc
mov
adc
inc
sub
int
jo
jmp
sub
push
inc
mov
pop
xchg
clc
cmp
push
imul
scas
jp
add
add
pop
or
push
lods
lcall
out
imul
int3
sub
lret
add
or
popa
sub
mov
cld
rolb
mov
jo
into
sarb
scas
mov
into
pop
cmp
jns
mov
stc
cmpsl
sbb
imul
aad
lcall
mov
loopne
sub
inc
sahf
adc
sub
aad
inc
sub
inc
mov
fildll
or
gs
cli
hlt
aaa
or
or
mov
xchg
ds
push
int
sub
add
and
adc
lret
sbb
and
add
cmp
or
scas
pop
push
push
aaa
inc
push
mov
mov
lds
cmc
lret
push
mov
mov
or
inc
mov
inc
mov
inc
mov
in
subl
add
gs
mov
test
jg
inc
push
adc
cmpsb
ret
ret
inc
mov
jb
pusha
ret
sbb
mov
cmpsb
dec
push
mov
jle
add
lret
fsubrs
shrl
adc
es
shll
cltd
loopne
push
sbb
rcrl
xchg
testb
pop
sti
jno
mov
pop
aam
popa
and
mov
mov
mov
or
fs
or
pop
rol
lcall
mov
or
sbb
xchg
fiaddl
xchg
inc
pop
mov
shrb
loopne
fmul
mov
das
mov
test
popf
sbb
mov
arpl
outsb
xor
push
lcall
popf
or
test
sub
xlat
push
scas
push
and
inc
leave
inc
add
xchg
daa
xor
dec
shll
adc
addb
jo
push
shll
pop
movsb
jl
lahf
mov
push
adc
subl
cmp
test
xchg
mov
fimull
dec
dec
insl
mov
lahf
dec
dec
adc
jecxz
adc
xchg
jle
jo
inc
mov
gs
push
insw
jae
cs
xor
inc
testb
cmp
outsl
popa
mov
sbb
jno
dec
mov
dec
dec
cltd
inc
push
mov
loope
sbbl
cs
dec
outsl
sub
xchg
push
add
mov
pop
insl
gs
push
mov
push
jo
test
movsl
pop
jnp
daa
into
mov
cltd
lcall
or
xor
into
lea
aad
xor
mov
xchg
adc
xor
jl
gs
repz
push
adc
jne
pop
sub
inc
rcrl
push
mov
push
mov
add
andb
cmpsl
push
mov
xchg
mov
inc
mov
es
mov
mov
loope
pop
or
test
imul
push
aas
js
test
mov
adc
or
test
xchg
xchg
loop
push
lret
hlt
cmp
lcall
or
jnp
cwtl
mov
in
mov
test
subb
mov
push
daa
mov
popf
inc
movsb
cmp
imul
mov
inc
arpl
lds
fs
mov
cmpsl
repz
inc
and
adc
pop
xchg
cld
incl
mov
icebp
push
push
enter
cmp
push
xor
xchg
stos
jne
popa
push
mov
push
pop
xor
push
cltd
push
add
push
sbb
push
pushf
lret
rcrl
shlb
daa
movl
sbb
shlb
test
adc
push
and
xchg
mov
fisubrl
test
shl
divb
dec
push
sbb
mov
and
adc
lods
add
push
test
push
dec
mov
mov
pop
into
arpl
fsubrl
stos
lret
daa
mov
les
jnp
js
or
jo
xchg
cmp
sbb
mov
ret
fbld
push
movsl
dec
dec
adc
shlb
mov
out
xchg
imul
mov
lea
dec
cmp
pop
jbe
xor
push
cli
lcall
sub
push
sbb
push
fwait
xlat
mov
icebp
push
cs
pop
popa
dec
mov
shrb
mov
enter
stos
jo
ljmp
push
test
ljmp
aas
aad
pop
cmpsl
push
pop
popa
test
xchg
dec
push
mov
push
dec
cvtpi2ps
fildl
roll
adc
xor
mov
mov
mov
and
mov
xchg
sub
lea
push
mov
add
pop
or
or
adc
js
imul
adc
dec
mov
jp
adc
mov
mov
out
xchg
adc
das
out
out
inc
jae
mov
xor
sbb
inc
and
xor
sbb
mov
subps
add
sbb
jecxz
pop
test
push
mov
sub
dec
gs
outsb
insb
add
imul
loopne
and
mov
pop
scas
jne
stc
scas
lcall
push
jbe
stos
dec
mov
push
clc
lea
mov
xor
int3
inc
add
popa
dec
push
add
cmp
jp
add
inc
add
push
mov
lcall
ljmp
inc
sbbl
pusha
push
ffree
test
jl
add
nop
push
cmp
push
mov
adc
mov
fimuls
rcrb
inc
int3
lcall
das
std
test
add
jno
popw
fisubs
push
adc
or
adc
push
loop
aas
sub
mov
cmp
pusha
jae
insb
shl
js
push
mov
pop
les
icebp
stos
in
inc
cltd
xor
ret
push
cmp
xchg
sbb
pop
rcl
ret
rorl
or
lods
jecxz
inc
mov
cmp
mov
shll
sti
iret
push
sub
dec
arpl
movsb
test
push
cmp
xchg
mov
sub
jno
sbb
add
sbb
jns
mov
and
cltd
mov
cmp
das
adc
sbb
dec
mov
repz
cmp
das
sahf
xor
mov
dec
jbe
adc
dec
push
xor
test
mov
ds
out
push
mov
push
mov
cmp
cltd
test
adc
iret
push
bound
mov
jno
adc
shlb
or
loopne
lea
popa
jo
xor
mov
jne
mov
rolb
or
push
pop
movsl
ret
aad
cmp
and
stos
test
je
xchg
in
inc
imul
sbb
mov
mov
incb
gs
push
and
pop
jmp
sub
mov
mov
xchg
imul
and
push
lcall
mov
bound
bound
push
mov
cmp
mov
into
inc
adc
les
xor
mov
pop
stos
jo
cld
sti
fcomp
and
aad
std
fsubl
adc
cmp
cmp
push
jae
imul
sbb
hlt
daa
sub
pushf
inc
rolb
adc
movsb
jmp
fistps
inc
add
enter
sbb
inc
addb
lcall
inc
add
test
sbb
ret
cmp
push
xchg
clc
mov
push
pop
push
mov
ret
jb
imul
cmp
mov
mov
add
and
lds
mov
andl
cmp
inc
enter
pop
sbb
sahf
mov
loopne,pn
xor
stc
mov
sbb
xchg
add
cmp
rclb
inc
daa
push
out
ss
sti
bound
andl
cmc
lret
lods
aad
lea
int3
lods
sub
push
inc
xor
ret
lahf
mov
push
push
push
jp
out
call
xlat
pop
mov
jl
or
adc
cmp
es
jnp
dec
push
mov
inc
add
out
std
mov
int3
push
xor
andl
xchg
stos
xor
mov
jg
jmp
mov
cld
outsb
mov
mov
mov
jl
or
sbb
fsubs
adc
xchg
mov
push
pop
test
mov
bound
sub
in
aad
add
daa
out
sarl
dec
daa
mov
out
mov
inc
sub
sbb
scas
lcall
push
xor
cmc
cli
mov
adc
sub
lcall
add
addr16
jb
inc
and
pop
sub
and
push
subb
out
js
les
subb
inc
push
dec
sysret
popf
add
fsubrs
loopne
scas
push
sub
xor
xor
lahf
mov
or
xchg
push
push
or
inc
sub
jl
lds
push
and
mov
sub
ret
adc
pop
mov
movsl
add
xchg
sbbl
mov
enter
pop
les
cmp
jno
mov
lcall
xchg
inc
add
outsb
test
bound
stos
pop
add
dec
sbb
mov
jne
lret
cwtl
cmp
ss
jno
xchg
popa
shlb
mov
rclb
inc
mov
ret
xchg
or
cmp
mov
sbb
lods
mov
push
in
fisubs
lea
xor
add
pop
pop
push
xchg
stos
xor
pop
add
dec
inc
mov
inc
insb
andb
cmp
in
xchg
xchg
leave
mov
popf
testb
fimuls
xor
push
cld
or
push
test
xor
mov
add
sub
inc
push
or
and
mov
mov
cmpsb
dec
xchg
ret
pushf
add
data16
pop
pcmpeqw
xor
out
les
shl
jle
mov
mov
push
cmp
mov
insl
int
mov
lods
out
mov
es
adc
push
lods
jbe
add
sbb
xor
add
call
dec
aas
adc
cmp
push
subb
push
inc
mov
sbb
leave
xor
movsb
les
jle
sub
into
inc
push
push
femms
or
cmc
stos
adc
add
cwtl
mov
inc
imul
int
and
jl
cli
add
adc
adc
sarb
adcb
cmp
loope
mov
push
shrl
inc
adc
dec
icebp
out
and
jle
xchg
jno
inc
je
dec
cmc
stos
cld
insb
and
sbb
xchg
pop
pop
jmp
xchg
xor
pop
jb
lret
decb
add
daa
inc
mov
mov
adc
mov
hlt
aad
mov
jno
pushf
sub
out
add
inc
insb
inc
stc
adc
add
dec
adc
sbb
push
flds
cmp
inc
dec
jo
roll
ds
sub
das
sbb
push
aaa
mov
addb
pop
rcrl
mov
dec
lret
fisttpll
push
cltd
lods
add
mov
outsb
ret
repz
notb
sbb
shrb
mov
jmp
xorb
ret
adc
into
stos
or
fwait
inc
imul
xlat
lret
adc
push
cmp
sub
adc
stos
mov
shl
xchg
mov
adc
push
push
push
lea
lcall
cld
push
cld
fs
mov
jo
int3
mov
mov
movsl
cld
push
push
add
or
aad
jno
and
dec
xlat
std
stos
mov
scas
adcb
movsl
stos
jecxz
jmp
and
push
andb
inc
cmp
test
test
push
sub
mov
cmc
fcomps
add
mov
push
push
hlt
gs
sbbb
mov
into
stos
sub
lret
add
push
cmc
rorl
js
adc
rclb
jp
shll
mov
movsl
inc
js
push
xor
lret
and
fimuls
push
stos
xor
mov
scas
jae
adc
push
and
sbb
cs
inc
xor
mov
push
sbbl
js
subl
mov
xchg
sbb
dec
push
les
dec
xor
inc
inc
cwtl
xchg
or
cmp
mov
lcall
add
and
add
mov
push
and
sbb
gs
pop
push
shlb
lret
cmp
pop
mov
icebp
mov
add
mov
pop
or
pop
jno
inc
mov
orl
inc
out
cld
jno
ficoms
lcall
add
orb
inc
mov
int3
add
adc
lock
int
dec
cld
cwtl
xorb
test
data16
or
mov
fwait
add
or
or
ss
inc
pop
fstl
add
xor
add
mov
xlat
mov
int
inc
push
shl
and
rcrb
and
in
cmpsb
push
and
roll
dec
cmc
sahf
push
mov
bnd
inc
jecxz
mov
int
and
filds
ret
sub
out
cmp
mov
pop
test
std
add
jle
mov
insb
bound
jmp
cs
xor
sbb
add
in
sbb
jmp
push
or
iret
dec
sbb
adc
stos
inc
int
mov
shrb
sbb
cmp
cmpsl
clc
es
dec
mov
loop
adc
fiaddl
xlat
mov
inc
movsb
movsl
cltd
rcrl
rorl
imul
shlb
lock
fisubrl
fiaddl
dec
shlb
aam
cmp
ja
jne
mov
xor
dec
test
add
cmpsb
ss
sub
jp
iret
mov
jo
ret
jl
mov
addb
inc
inc
sbb
popa
in
xor
dec
mov
and
jp
jbe
cmp
adc
dec
add
add
orb
cmp
push
xor
adc
mov
jnp
sub
push
push
test
mov
mov
test
add
nop
and
fsubrs
scas
jno
adc
test
push
shll
les
adc
mov
aaa
rclb
push
lods
ficompl
mov
sub
dec
enter
push
push
jno
cmpsb
jp
stos
daa
push
into
push
rorl
icebp
xor
ds
rorl
test
push
sub
sbb
mov
scas
rcrl
sub
andb
add
inc
testl
and
inc
sub
sub
aam
inc
mov
cmp
and
add
hlt
std
jge
sti
adc
sbb
je
mov
bound
xlat
and
inc
in
stos
inc
mov
push
cwtl
add
pushf
fimull
cmp
jno
into
add
inc
scas
pop
icebp
cld
js
sbb
addr16
call
cmp
cld
in
movl
pop
test
sub
pop
fiaddl
pop
loopne
rclb
xchg
call
pop
scas
mov
mov
test
push
arpl
clc
push
inc
and
xchg
adc
stos
mov
andl
stos
popa
rclb
sbb
push
ret
fwait
and
jo
push
adc
std
aam
mov
sub
enter
maskmovq
testl
push
dec
test
mov
mov
fisttpl
or
addb
lahf
sbb
loop
adc
xchg
add
jo
push
fwait
dec
inc
adc
sbb
ret
push
push
sub
and
shlb
pop
push
ret
iret
push
pop
test
mov
andb
cmp
mov
lea
pop
mov
adc
jnp
push
cmp
inc
dec
adc
sub
mov
mov
xchg
shll
inc
ja
fldenv
insb
insb
inc
and
xor
push
mov
cmpl
or
xchg
js
sarb
or
add
out
jmp
rcrb
loopne
aaa
aad
push
sub
mov
insl
pop
xor
int3
push
pop
push
inc
mov
shlb
adc
adc
xor
xchg
test
xor
lcall
andps
and
push
add
xchg
into
lret
sub
dec
adc
lret
in
mov
pop
mov
lcall
dec
loope
addb
lret
sub
loop
pop
dec
adc
and
cmp
aam
mov
push
push
lods
std
enter
push
sbb
push
mov
adc
push
or
mov
mov
xor
ret
mov
cmpl
sub
arpl
jno
rcrl
les
divb
adc
inc
jnp
daa
shr
xchg
loope
push
push
shl
mov
and
sbb
out
adc
mov
stos
cmp
push
push
mov
jnp
rcl
and
push
sub
sbb
movsl
mov
push
stos
pop
push
push
daa
push
jmp
and
xor
stos
push
push
call
inc
test
mov
popa
je
test
push
ljmp
push
xchg
add
mov
ficoml
mov
push
cs
jb
jbe
and
and
in
inc
or
ret
cmpb
outsl
push
pusha
int3
inc
imul
rcll
pusha
inc
mov
lcall
mov
rclb
xor
lret
push
icebp
push
mov
pop
hlt
dec
in
addr16
inc
pushl
inc
mov
inc
sbb
pusha
das
ss
test
mulb
or
sub
adc
and
mov
inc
cmp
jb
cmp
jb
andb
cmp
shll
xchg
or
jecxz
sbb
adc
bound
popa
rolb
jno
sbb
add
pop
adc
mov
ret
sarl
stc
pop
xlat
jecxz
inc
jne
cs
insl
cld
clc
in
lock
sbb
and
adc
sub
inc
mov
push
or
fcomps
movsl
add
imul
inc
mov
jecxz
pusha
or
ret
adc
jnp
and
daa
push
stos
sub
add
or
popa
sbbl
jb
inc
cmp
aad
fimull
push
dec
lcall
pop
int
aad
negl
sbb
movsl
pop
push
push
push
fldcw
pop
mov
mov
dec
inc
jno
jecxz
mov
jne
mov
xor
das
jo,pt
rcl
imul
dec
sub
push
mov
push
insb
movsb
push
scas
andb
mov
test
loope
inc
es
movsl
stos
push
cmpsl
test
sub
into
xor
push
dec
cmpsb
and
adc
sbb
jnp
and
add
sub
addl
mov
jl
cmp
mov
add
xor
pusha
cli
jmp
shrb
cwtl
ss
and
adc
xchg
ficoms
push
sub
add
loop
xchg
xor
and
jl
inc
aad
mov
push
push
sub
and
mov
xchg
shrl
scas
adcb
or
arpl
adc
inc
rcr
repz
add
mov
int
cmp
rclb
inc
dec
adc
pop
cli
mov
fstl
xchg
pushf
or
inc
test
fcom
iret
mov
cmc
mov
dec
push
cs
addb
dec
adc
scas
imul
loop
xchg
out
xor
jb
push
and
inc
subb
push
mov
sub
sub
stos
cmp
xor
xor
pop
cmp
xchg
adc
jle
test
sub
cmp
leave
jne
push
gs
inc
mov
jo
push
shlb
lret
cmp
bound
mov
stos
stos
mov
ficomps
cmp
mov
and
ds
iret
mov
rcrb
dec
loop
xor
lcall
stos
or
sbbb
mov
pop
scas
lock
sub
push
cmp
jnp
push
xchg
xor
cli
pushl
and
push
push
dec
loopne
stc
into
inc
cwtl
loopne
rolb
adc
insb
in
test
out
adc
scas
lods
dec
push
adcb
sub
or
test
jnp
test
add
sub
sub
mov
stc
inc
mov
push
jle
xchg
into
rclb
outsb
push
mov
adc
fmuls
add
sti
xor
xchg
subb
cmc
cmp
loopne
adc
into
js
mov
in
sbb
scas
jno
push
jno
or
xor
and
pop
xor
roll
bound
xor
or
fldt
lcall
inc
pusha
or
out
adc
into
inc
adc
rorl
add
mov
clc
fiaddl
rcl
fstpt
add
ds
loopne
adc
or
mov
ret
push
xchg
push
push
mov
pop
movsb
adc
inc
mov
fmull
hlt
icebp
pop
xchg
add
dec
push
inc
push
cld
pop
pop
lcall
loopne
scas
mov
cmp
bound
arpl
add
mov
inc
xchg
sbb
push
sbb
outsb
or
mov
push
popa
mov
sahf
sub
add
inc
test
sbb
pop
adc
adc
mov
daa
xor
daa
mov
and
data16
addb
xor
mov
push
inc
and
pop
mov
mov
sarl
cmp
adc
adc
push
test
aad
ljmp
outsl
xor
or
cld
mov
xchg
loope
xchg
xor
rcll
xor
call
sbb
cwtl
out
pop
mov
push
sub
loop
add
push
push
xor
roll
adc
adc
and
in
cmp
cmp
inc
vdivsd
push
add
in
or
sbb
inc
sub
inc
push
mov
push
push
xchg
pop
mov
mov
mov
push
jge
mov
scas
popf
shlb
push
adc
add
test
stos
adc
push
sub
xchg
push
push
inc
dec
add
xor
cld
jns
xor
xor
push
movsb
adc
mov
inc
aam
push
int3
add
shrb
and
xor
adc
shrb
push
fists
ret
js
cmpsb
out
and
ret
cmp
cmc
repnz
and
cmp
call
or
sub
in
mov
xor
mov
imul
adc
pushf
or
sub
lds
xchg
fmuls
xor
ret
dec
xchg
adc
mov
or
pusha
cmp
inc
or
rclb
rorb
mov
push
mov
es
mov
test
in
fldenv
xor
jp
push
dec
or
cmpsb
lea
pusha
mov
cmpb
jno
mov
xor
sbb
mov
stos
sbb
or
repz
push
outsb
sbb
add
inc
cmpsb
push
inc
shl
cmp
push
and
xorb
cwtl
pop
cmp
jmp
test
cmpl
scas
test
jmp
pop
mov
or
xchg
and
add
push
lret
sub
ret
push
int
jo
dec
outsb
lods
js
cmpsl
xorl
pop
jmp
adc
dec
mov
adc
jne
hlt
push
xor
mov
jns
add
int
dec
lcall
aam
cmpsb
call
xor
or
mov
popa
adc
enter
mov
or
aam
push
pop
addl
dec
push
pusha
or
push
sbb
es
adc
addr16
jp
jb
mov
inc
gs
mov
jae
imul
add
sub
mov
pop
add
or
loopne
lock
push
push
mov
jp
pop
pop
push
mov
add
or
shrl
adcb
enter
or
xor
cld
mov
and
jne
inc
cmp
mov
sub
mov
cmp
pop
pusha
cmp
adc
inc
es
lock
pop
lea
daa
cmp
ret
test
push
aaa
les
inc
hlt
orb
hlt
jnp
inc
jecxz
push
bound
bound
icebp
sbbl
pop
lret
in
adc
loopne
test
inc
mov
sti
and
pop
jle
pop
adc
dec
iret
add
add
push
jns
imul
mov
test
scas
stos
fwait
inc
call
xor
jp
test
mov
add
dec
mov
cmovp
adc
test
test
xchg
add
jns
ret
test
lock
add
ret
sub
xorb
int3
iret
sbb
xor
enter
inc
cld
lock
loop
ret
push
andl
mov
lock
xor
lea
sbb
mov
and
inc
jmp
sub
and
insb
movsb
mov
add
mov
jb
add
add
out
les
sbb
mov
sbb
imul
das
add
ja
add
es
mov
or
lods
dec
cwtl
orb
pop
inc
mov
stos
test
daa
mov
dec
mov
js
shl
mov
shlb
jb
push
xor
pop
dec
stos
mov
in
sbb
push
xchg
jecxz
sahf
dec
pop
push
repz
or
xchg
push
mov
push
and
xchg
sub
into
xor
int
stos
push
cs
add
cmp
dec
rorb
add
and
in
mov
adc
sbb
inc
xchg
adc
adc
xchg
out
inc
shrl
inc
and
out
cmc
mov
clc
xor
pop
dec
adc
push
stos
mov
jmp
push
sbb
aam
jo
add
rorb
dec
mov
mov
pop
or
push
loopne
inc
sbb
imul
add
rclb
or
scas
dec
push
push
and
scas
mov
nop
lret
xor
in
push
pop
xor
andl
push
push
cmpsl
pop
add
or
je
test
out
shll
jl
mov
cwtl
xlat
stos
push
div
push
ficoms
movsl
jb
arpl
pop
arpl
xor
lahf
and
sbb
repnz
jecxz
sbb
jo
lock
lret
cmpsb
mov
push
scas
adc
dec
pop
adc
jno
in
mov
adc
std
test
mov
push
add
pop
xor
xor
inc
pop
add
or
stos
loopne
leave
or
aam
xchg
clc
add
adc
jo
inc
sub
addr16
bound
and
sbb
and
int3
js
cmovp
pop
rorb
add
jno
jbe
pop
mov
adc
mov
mov
jb
xor
cmp
loopne
test
sub
pop
jno
xor
pop
roll
aam
push
mov
push
ret
test
push
and
and
add
popa
cld
xor
and
xor
mov
insl
daa
push
mov
mov
jo
jnp
mov
popa
jo
xchg
pop
insb
cmc
stos
shrb
mov
push
sbb
addr16
xor
insl
mov
into
mov
push
rolb
push
push
push
push
lock
je
mov
mov
and
add
sub
inc
mov
es
push
loope
loopne
movsb
mov
imul
adc
stos
inc
insl
xor
vmwrite
dec
icebp
inc
pop
push
pop
or
push
mov
out
bnd
jge
push
pop
sarb
lock
xchg
adc
cmp
bound
dec
cld
into
jl
and
or
fiaddl
mov
ljmp
ljmp
add
out
cmc
sar
mov
push
mov
mov
and
or
roll
xor
sbb
lahf
adc
mov
out
jo
jg
cmpsl
jp
push
test
out
imulb
orb
pop
js
mov
mov
pop
mov
filds
xor
dec
test
mov
int
or
bound
xchg
rcr
or
push
ret
lret
inc
adc
xchg
leave
inc
cmp
inc
shlb
and
jmp
sub
pop
xchg
xor
or
out
xor
inc
inc
mov
mov
lea
adc
add
or
adc
jmp
and
mov
mov
jb
push
cwtl
dec
jo
jbe
test
cwtl
adc
mov
jae
inc
and
sbb
mov
push
fidivl
or
jg
push
mov
mov
jecxz
dec
push
aad
aam
stc
and
rorb
test
pop
addl
and
xchg
mov
add
lcall
or
ljmp
inc
aaa
lret
cmpl
xor
stos
into
or
lahf
les
add
test
rcll
cmp
scas
push
sbbb
daa
lds
int3
push
adc
jbe
dec
sub
cwtl
dec
pop
cld
sub
lcall
inc
adc
out
jmp
popf
ss
incb
pushf
mov
scas
push
rolb
into
add
je
push
dec
outsl
lcall
fwait
mov
outsb
pop
sub
movsl
push
mov
mov
aas
ret
pop
or
pop
mov
inc
std
out
push
dec
xor
push
repnz
inc
nop
scas
jo
cwtl
in
mov
les
jo
ret
or
sbb
push
push
xchg
add
pop
inc
push
repnz
and
sbb
aaa
push
dec
pop
popf
inc
mov
insl
in
shll
mov
add
push
push
sub
or
dec
aam
lods
scas
hlt
push
sbb
mov
fistpll
jp
adc
loopne
xchg
icebp
out
cmp
pop
or
or
or
or
jmp
push
mov
lds
push
mov
add
add
sbb
outsb
out
lahf
dec
mov
andb
insb
test
movzbl
push
mov
pop
mov
jbe
mov
pop
int
cmp
mov
lods
data16
push
push
jecxz
adc
sub
lret
orl
jb
sbb
cmp
push
icebp
popa
enter
push
inc
rolb
hlt
inc
gs
sub
push
test
test
pushf
stos
in
adc
hlt
stos
dec
adc
dec
stos
sub
xor
cmp
inc
jne
xor
adc
rol
daa
js
push
ret
push
mov
add
inc
add
jnp
inc
sbb
sub
inc
dec
repz
stos
std
ljmp
ficoml
fadd
dec
jbe
cltd
xchg
xor
jmp
jbe
mov
movsl
push
add
and
mov
fstp
rcll
mov
xchg
mov
fs
ret
loope
cmp
sub
push
cwtl
push
adc
out
sub
add
test
jmp
out
popf
dec
popf
sub
shrb
cmpsl
adc
sbb
jo
fdivrs
jo
bound
int
mov
lret
cwtl
mov
js
int
dec
adc
dec
xchg
aaa
inc
test
dec
shrb
jne
sbb
js
loopne
mov
adc
faddp
mov
mov
sub
sbb
xchg
mov
cld
dec
inc
xor
add
mov
in
jbe
mov
shr
sbbb
data16
or
mov
xchg
mov
mov
pop
xchg
adc
xor
in
bound
cmp
sahf
push
int
sbb
xchg
push
les
adc
inc
mov
adc
xor
cmp
xor
push
aam
inc
popf
js
or
sbb
mov
dec
mov
xor
stos
f2xm1
inc
push
push
sub
ret
aam
push
push
ret
xchg
mov
pusha
inc
shlb
fisttpl
inc
cld
out
lds
or
pop
aam
and
mov
mov
es
pop
adc
inc
add
cs
addb
mov
sbb
in
data16
sarl
mov
lret
sbb
in
fcoms
mov
or
push
jle
pop
jae
or
mov
push
add
adc
push
xchg
lea
jb
add
mov
mov
scas
inc
ret
lret
arpl
adc
mov
pusha
dec
lods
loopne
shrb
xor
lods
pop
je
jno
lcall
mov
cwtl
xor
xor
icebp
mov
pop
in
mov
sbb
mov
sbb
push
sahf
pusha
popf
mov
popa
jnp
mov
imul
cmpl
dec
aam
fisttpl
cmp
aas
popa
add
pop
int3
loopne
pop
imul
fsubl
push
sub
test
xchg
iret
inc
ljmp
cmp
add
es
stos
enter
sahf
loope
xchg
jno
xchg
loop
mov
and
xchg
test
mov
or
inc
ret
cli
aad
mov
mov
sbb
mov
test
testb
mov
pop
outsb
ret
rorb
xchg
and
mov
inc
lcall
jb
ljmp
in
push
insb
push
enter
lcall
mov
movsl
dec
jge
aad
push
xchg
cltd
push
mov
inc
loope
mov
sub
loop
push
and
jne
orb
adc
insl
push
push
gs
call
out
add
push
lea
call
test
cwtl
adc
cmp
stos
or
cld
imul
cmp
or
mov
mov
hlt
pop
push
mov
or
fidivrl
sub
shrb
orl
adc
push
mov
rcl
inc
test
lea
and
push
dec
and
mov
lcall
adc
push
inc
cld
mov
mov
or
sub
into
or
xlat
mov
dec
lock
add
gs
jl
pop
scas
pop
mov
jl
test
and
jp
and
call
into
xchg
push
adc
or
ljmp
shlb
dec
jnp
push
xor
xchg
inc
mov
cmp
cltd
stos
ljmp
adc
fcoms
push
dec
in
push
mov
add
xor
xchg
aad
mov
pop
imul
test
or
mov
popa
adc
jb
cmp
lret
test
or
shl
adcb
cmp
sub
mov
sub
cmpsl
mov
add
push
pop
fistl
inc
pop
push
frstor
or
popa
out
mov
arpl
rol
inc
push
mov
sub
sbb
adc
and
mov
jno
loope
sub
inc
or
push
rolb
das
cmp
add
test
xor
jmp
test
push
sbb
push
cmp
mov
stos
push
xor
sbb
in
test
and
data16
adc
xor
insl
mov
add
mov
pop
xor
jne
bound
adc
inc
mov
outsl
or
inc
mov
cmc
adc
inc
or
in
or
orb
test
cmp
in
fbstp
sub
cmp
hlt
push
mov
lods
push
push
mov
adc
sbb
push
jne
add
cmp
js
out
stos
mov
add
xor
lcall
push
adcb
cmp
addr16
push
xchg
loopne
and
mov
loop
inc
movsb
lcall
xchg
cmp
ret
test
daa
push
add
or
gs
inc
push
aaa
insb
xor
or
mov
push
and
push
mov
push
add
fisttps
sbb
subl
push
jl
xchg
notl
out
inc
mov
popw
scas
mov
mov
lret
sub
sqrtps
push
push
pushf
sti
pop
shll
cwtl
cmp
cmp
shlb
push
lahf
ljmp
xor
xchg
outsl
jo
xor
fwait
xchg
and
call
sbb
xchg
int3
call
test
add
outsb
or
bound
movsl
push
aas
jo
lret
mov
sbb
ret
pushf
or
addr16
pop
inc
lods
shlb
cmp
push
add
mov
lcall
rorb
jge
sub
and
addr16
ror
popa
subb
pop
jo
mov
daa
xor
daa
or
adc
mov
cmp
sub
sbb
icebp
fisubs
mov
xor
pop
subl
mov
cld
dec
mov
sbb
mov
xor
or
mov
pop
mov
pop
mov
fimull
imul
sub
outsb
rcr
jo
mov
loopne
inc
dec
fcomps
loop
mov
xchg
fisubl
mov
pop
repz
subb
mov
aam
adc
mov
stos
std
stc
faddp
push
scas
mov
sub
in
xor
and
pop
lods
xor
sub
jmp
and
xor
adc
push
icebp
add
push
sbb
gs
cmpsb
mov
push
popa
call
cmp
gs
pop
dec
adc
and
xchg
subb
jle
mov
jb
sti
or
add
mov
dec
push
jae
ret
cmpsl
push
mov
push
stos
mov
test
andl
push
xchg
in
cmp
push
outsb
popa
fcompl
stos
inc
int
jbe
lcall
cli
pop
fnstsw
xor
int3
loopne
mov
adc
adc
hlt
xchg
test
sbb
lret
ret
xor
inc
imul
sbb
jo
or
jmp
cmp
xchg
test
inc
mov
cltd
hlt
movsb
cmc
test
xlat
hlt
lahf
inc
mov
or
imull
cmp
sbb
test
daa
nop
nop
addl
out
push
add
or
fdivl
xchg
xchg
jne
add
mov
mov
adc
inc
cmp
xlat
push
xchg
xchg
mov
push
adc
leave
add
jmp
push
sub
call
pop
inc
mov
bound
sub
add
mov
scas
push
sub
ret
inc
or
sbb
and
push
xlat
sbb
jg
inc
inc
or
jb
testl
jns
incb
cmpsb
push
adc
test
vmwrite
rol
leave
xor
in
xchg
sbb
inc
shll
and
ss
xor
jl
jo
mov
jns
lea
mov
rolb
popa
xor
cmpsb
cltd
ror
push
mov
inc
mul
pop
bound
mov
ret
pop
push
stos
fbld
fiadds
mov
shlb
jae
mov
xor
add
orb
lret
gs
popa
xor
push
mov
aad
lods
clc
mov
push
adc
cmp
stos
inc
fisttpll
push
mov
cmpsl
push
mov
xor
mov
stos
adc
mov
xor
ss
nop
loopne
adc
and
imull
dec
push
cmp
xorb
rorb
inc
lds
daa
mov
jmp
cmovno
push
push
or
lret
and
add
das
negb
stos
adc
mov
mov
add
loopne
push
xor
lret
sbb
xor
jne
push
aad
add
xchg
push
cmp
sbb
shl
jb
stos
xchg
dec
das
mov
jb
ret
push
xor
jnp
inc
mov
loope
ljmp
mov
adc
push
call
js
mov
pop
inc
orl
mov
repz
xor
in
sub
mov
adcb
jo
imul
daa
stos
loope
rorb
lea
or
loop
nop
into
mov
rcll
orb
mov
test
shr
cmp
hlt
sbb
xor
dec
sub
stos
pop
jecxz
ret
rcrb
adc
and
out
adc
roll
adc
es
clc
mov
fdivr
cmpsb
pop
xchg
or
push
lret
and
cmp
add
subl
lahf
mov
add
add
outsb
fs
gs
insb
gs
push
inc
incl
inc
adc
jns
jns
andps
gs
fs
imul
jae
outsl
fs
dec
popa
aaa
add
adc
xor
inc
jb
je
dec
popa
jo
imul
dec
push
inc
js
push
jb
je
push
jb
je
popa
rcr
outsb
addr16
adc
push
push
mov
jnp
pop
arpl
inc
and
jns
jae
jbe
int3
insl
pop
push
ja
js
jne
mov
sub
mov
iret
and
insl
test
ja
insl
jmp
dec
and
outsb
imul
outsl
ja
in
mov
jae
outsl
ds
xor
outsl
iret
fcompl
xor
clc
dec
outsl
stos
push
popa
je
mov
adc
je
outsw
sarl
push
jne
jns
inc
inc
gs
arpl
inc
inc
push
iret
dec
mov
je
adc
fwait
das
and
push
jne
mov
pop
adc
popa
inc
in
rcrb
jnp
subl
jb
dec
xor
or
dec
and
int
outsb
inc
xor
inc
adc
xchg
adc
inc
imul
mov
mov
mov
insl
push
push
daa
jb
dec
adc
jne
imul
lods
jae
lret
push
cmp
into
push
fnsave
jne
out
add
mov
insl
in
jb
sub
inc
pop
jno
or
lods
jnp
sbb
imul
adc
add
inc
push
inc
mov
outsb
sub
in
insb
push
or
xlat
push
inc
popa
pop
jne
mov
sahf
sub
pop
jecxz
lret
bound
shrb
add
dec
inc
dec
jno
outsb
dec
dec
bound
jecxz
mov
jbe
push
outsl
inc
cwtl
adc
jae
dec
sbb
aad
lods
shlb
push
out
mov
imul
cmp
bound
aaa
xchg
rcrl
daa
push
int3
dec
xor
es
xor
inc
cwtl
xchg
inc
cmc
and
insb
ret
jns
movsb
fs
add
int
test
or
lea
insb
adc
seto
mov
je
jbe
mov
sbb
xchg
es
inc
idivb
cmpsl
pop
ljmp
xchg
imul
les
and
jne
push
jo
and
inc
pop
addl
push
push
xorb
shlb
push
out
ret
adc
dec
fdiv
sbb
loope
xor
cmp
inc
adc
inc
push
movsb
jg
ret
shll
add
imul
aas
xchg
pop
insl
and
inc
inc
dec
cmpsl
bound
xor
loop
inc
js
dec
mov
jbe
pop
insl
push
ds
fisubs
out
jp,pn
pop
mov
popa
push
jb
adc
xchg
jae
xchg
adc
jge
cmp
lods
pusha
fsubp
pop
xor
xor
es
push
test
mov
push
jecxz
insb
xor
arpl
cwtl
mov
push
or
or
sub
xor
sub
in
dec
imul
inc
ja
imul
add
shl
cmc
pushf
mov
inc
mov
sarl
test
or
mov
insb
pusha
inc
mov
jns
dec
jae
aas
sti
cltd
xorb
push
je
inc
je
ja
sarl
add
rcll
sub
adc
lcall
dec
mov
int
inc
jae
cmp
xor
mov
out
out
pop
jae
push
fxch
arpl
cmp
imul
outsb
loope
imul
jo
popf
ss
lods
mov
imul
scas
shll
outsb
outsb
xor
xor
sbb
jae
adc
dec
xor
and
stc
ja
jb
cmp
push
fucomp
lock
cld
pop
xor
jns
insl
cmp
dec
xchg
imul
arpl
jecxz
fistl
jae
out
sti
xor
test
sub
sbb
je
cwtl
mov
fnstenv
insl
loopne
push
mov
pop
leave
insb
loopw
dec
fimuls
inc
js
jbe
ja
dec
pop
xchg
sar
mov
add
xchg
fs
imul
outsb
inc
mov
cld
arpl
sbb
sti
mov
int
pop
jae
cwtl
xlat
adc
loopne
ljmp
in
scas
mov
ja
lret
outsb
sahf
inc
jne
lods
outsb
inc
cwtl
jno
gs
cmp
jp
rorl
cmp
lds
loopne
inc
dec
push
sub
ja
jo
aam
js
cmp
insl
jmp
out
fs
dec
dec
dec
dec
push
jbe
bound
sbb
sbb
sub
je
pop
lods
in
adc
or
shll
lahf
xor
shlb
pushf
pop
pop
cmp
cmp
ret
cwtl
sub
test
ja
add
pop
push
imul
cmp
mov
mov
xor
movsl
aas
daa
cld
jo
sub
bound
jo
cmp
and
and
dec
and
jg
sbb
sbb
xchg
and
pop
loope
fsubs
ror
cmpsl
fwait
mov
mov
inc
dec
bound
jno
je
push
xchg
hlt
das
cmpsl
cvtps2pd
and
adc
insb
adc
adc
movsl
outsl
popa
lock
mov
and
sub
adc
aaa
fwait
adc
mov
xor
insb
movsb
test
xor
jns
and
or
push
xchg
inc
nop
mov
mov
xchg
cmp
pop
inc
dec
fadds
sbb
dec
nop
data16
push
xchg
xchg
push
outsb
test
dec
insb
pusha
jb
xor
lods
je
mov
jp
or
or
fsubr
jns
fiaddl
or
lods
mov
jae
jae
cli
cli
push
cs
inc
jbe
lret
sub
sarb
sbb
imul
lret
out
mov
push
sub
pop
mov
adc
adc
imul
push
int
je
test
or
and
dec
lcall
push
lret
push
in
mov
test
inc
add
xchg
inc
xlat
pop
cmpsb
dec
dec
clc
inc
iret
daa
test
cltd
flds
insl
sub
cmc
hlt
push
and
orb
rclb
mov
inc
jne
sub
int3
mov
popa
cwtl
shrb
adc
cmp
or
dec
xor
mov
cmp
cmp
push
sbb
dec
xchg
jae
je
std
inc
push
mov
dec
xchg
lods
ret
int3
cmc
sbb
xlat
or
sbb
fiadds
push
pusha
mov
aaa
aas
or
ss
add
lea
das
or
dec
gs
sbb
inc
aaa
or
adc
repnz
or
int
inc
rcl
sbb
adc
mov
inc
jl
jns
rcrl
aad
pop
sbb
inc
mov
test
push
lods
dec
inc
stos
mov
push
push
mov
ret
fwait
jo
pop
mov
push
nop
dec
add
out
dec
lock
mov
sidtl
add
in
add
xchg
add
add
cmovo
mov
add
add
add
jnp
or
add
xor
pop
insl
das
jnp
add
add
sub
pushf
dec
mov
scas
add
jmp
add
pusha
cs
out
dec
jmp
pop
jae
imul
es
shll
loopne
inc
into
daa
sahf
sub
or
jle
cmp
repz
add
mov
add
add
aas
mov
add
addb
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
js
hlt
mov
inc
icebp
das
pop
outsb
cmp
xchg
idivb
cmpsb
aas
dec
cmp
out
mov
or
inc
pop
inc
mov
outsl
mov
xlat
mov
ret
mov
push
or
pop
sbbb
cmp
lret
sti
push
insl
jb
sbb
jp
mov
fiadds
je
mov
cmp
in
cmc
fdivp
popa
push
or
in
ficomps
lret
outsb
imul
xchg
or
testl
ja
outsl
iret
cmp
inc
std
dec
arpl
inc
cmpsb
mov
inc
xchg
in
rolb
push
inc
pop
xor
add
push
push
xchg
orb
mov
and
incl
test
cmp
lret
push
hlt
cmp
fcomp
mov
xor
inc
sbb
mov
cmpsl
mov
scas
mov
sbb
fs
insl
inc
xchg
pop
movsb
je
fsubr
icebp
sub
int3
test
dec
lods
sbb
push
dec
sbb
mov
xor
scas
inc
aad
cmp
push
pop
push
push
add
das
sub
inc
rcrl
jnp
in
lds
jle
and
adc
jp
and
ret
es
push
add
clc
loop
and
and
mov
lahf
loop
mov
push
xor
and
pop
lahf
cmpl
fs
inc
xchg
jno
cmpsl
icebp
mov
leave
sbb
cli
mov
bound
sti
and
dec
add
and
push
pop
push
sbb
push
and
fsubs
cwtl
mov
out
mov
mov
jae
lods
in
fwait
add
inc
push
jle
jnp
cmc
xchg
outsl
repz
leave
.byte
