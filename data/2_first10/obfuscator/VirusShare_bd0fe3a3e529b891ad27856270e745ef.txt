idivb
shlb
add
xor
push
clc
add
mov
add
fildll
call
pushl
add
lea
push
push
push
pushf
inc
leave
ret
data16
mov
repnz
push
in
enter
js
cmpsb
out
sub
jo
mov
dec
mov
cmp
fistpll
mov
sub
icebp
leave
ret
loopne
push
inc
push
data16
incl
mov
repz
mov
dec
push
inc
add
inc
push
test
add
cmp
outsb
push
dec
add
push
int
shll
js
divb
lret
inc
jae
cli
sub
fdivrs
mov
insl
test
loope
insb
jne
add
jl
fisubrl
addb
jmp
in
ret
push
mov
pop
movsl
pop
jb
clc
push
pop
pushl
mov
sub
sub
jae
cltd
jno
xchg
mov
add
jle
decl
stc
cli
test
mov
cmp
js
ja
sbb
inc
scas
imul
push
mov
ret
nop
mov
ds
push
aam
add
mov
scas
jge
lock
or
jg
xchg
inc
mov
cs
mov
inc
cs
dec
mov
stos
xchg
mov
jo
inc
push
jne
pop
aas
mov
dec
jo
add
xor
outsl
ret
lock
add
jo
mov
xchg
leave
push
lds
out
push
xor
out
lret
jne
outsl
jmp
lock
cmp
mov
lock
bound
push
cwtl
push
arpl
paddd
dec
scas
inc
mov
movsl
ljmp
xor
cld
arpl
std
mov
or
push
jae
mov
pop
out
jb
sbb
pop
sti
cmp
xchg
ret
dec
pop
or
mov
push
adc
push
jmp
mov
pop
je
push
fstpl
es
pop
dec
inc
mov
jnp
lds
push
push
and
mov
push
push
cmp
sbb
jbe
aaa
push
add
inc
test
jo
lock
aaa
dec
add
mov
add
sub
mov
mov
sbb
xchg
lret
xchg
inc
cltd
scas
adc
add
into
and
orb
jle
in
dec
fs
dec
add
xchg
jno
push
mov
stos
mov
pusha
bound
sub
incl
imul
test
insl
sbbb
popf
or
aad
dec
push
out
adc
aad
xchg
test
popa
lds
jo
gs
mov
push
inc
push
fcompl
xor
add
push
daa
scas
cmp
add
sbb
push
cmp
cmpsb
mov
jle
jmp
cmp
imul
xchg
cmpsl
jp
xor
pushf
pop
and
cld
or
movsb
flds
into
mov
jg
fwait
les
enter
sub
out
pop
inc
jl
test
pop
lods
inc
icebp
ljmp
sbb
sbb
pop
sub
pop
jmp
in
mov
arpl
push
aaa
dec
ss
inc
outsl
fbstp
mov
fimuls
xor
sub
sbb
lcall
pop
jb
shlb
dec
das
cltd
lods
mov
push
sbb
mov
inc
sub
hlt
stc
test
push
lock
add
mov
push
jbe
lcall
gs
mov
jo
pop
nop
outsb
clc
jmp
xor
mov
push
outsl
rcll
insl
shll
push
rol
add
lock
mov
cmp
push
dec
cld
push
stos
fisubrl
or
pop
nop
mov
push
hlt
push
push
jbe
xchg
repnz
xorl
test
mov
add
in
aam
sbb
out
push
dec
xor
inc
push
jp
fsub
js
repz
rolb
ss
inc
jo
subl
dec
sub
cmpsb
mov
or
loope
adc
inc
imul
loop
out
in
cmp
mov
pop
add
das
shr
lea
gs
sbb
jns
gs
mov
mov
jno
inc
mov
dec
jle
decl
jo
addr16
adc
or
sti
cwtl
clc
ds
mov
ret
pop
jae
lcall
cmp
clc
mov
dec
stc
push
call
fldt
lcall
adc
jo
arpl
sbb
xor
mov
leave
xchg
jmp
pop
fnstenv
out
in
insl
xchg
unpcklps
jmp
dec
loope
jmp
cld
or
cmp
hlt
fsubl
sub
addb
dec
jb
mov
fs
mov
flds
fcmovnb
lret
cmp
inc
popa
push
push
scas
dec
mov
cmpsl
dec
sbb
add
push
inc
push
xor
push
dec
hlt
lock
push
dec
dec
out
mov
lods
pop
roll
add
add
fisubs
push
adc
push
in
nop
dec
adc
and
inc
hlt
dec
pop
in
pop
loope
push
add
ret
push
leave
mov
call
mov
in
jo
cmc
pop
xor
leave
xchg
enter
sbb
and
sub
push
inc
je
inc
cmp
scas
jmp
int3
jge
lea
push
push
sbb
jg
mov
loopne
jecxz
mov
jecxz
fwait
imul
jmp
pop
adc
push
xchg
repnz
repz
jle
mov
dec
arpl
dec
popa
adc
clc
mov
orb
mov
add
inc
inc
clc
push
add
cmp
imul
sub
mov
push
bound
fs
jmp
or
sub
pop
inc
xor
lret
nop
mov
cmp
in
daa
aad
mov
add
lahf
xlat
jg
jg
popaw
sub
push
repnz
adc
inc
add
jge
pop
push
ret
dec
xor
jns
clc
or
call
sahf
push
ljmp
mov
sbb
dec
pop
push
mov
adc
xchg
ljmp
rorl
cmovne
pusha
jnp
mov
scas
mov
jno
jno
fmull
scas
lods
fstpl
jp
insb
xor
jns
ret
inc
push
fsubl
jo
dec
fcoms
dec
jp
inc
jg
cmp
mov
push
xchg
in
clc
add
scas
aam
pop
pop
outsl
pop
std
sub
std
pushl
xor
popa
mov
sub
mov
or
inc
out
cld
push
and
sub
dec
push
sar
incl
out
push
fs
lahf
mov
pop
cmpsb
pop
mov
inc
lcall
subb
sbb
ljmp
adc
pop
xor
sbb
decl
shrl
xor
sbb
ret
cltd
mov
dec
pop
aas
mov
mov
jne
ja
and
adc
jmp
sub
inc
push
lret
loop,pn
xchg
jg
pop
rcl
imul
cld
sub
push
call
pop
push
or
sub
mov
aam
jns
loop
jns
je
imul
add
mov
push
add
addr16
xchg
sbb
cwtl
decl
mov
xchg
dec
inc
jl
jns
out
testb
lcall
ficomps
jg
into
dec
ja
xchg
clc
mov
js
mov
fs
xor
or
jle
pop
push
mov
pop
inc
dec
add
cmc
hlt
imul
mov
sub
jge
lcall
pop
jns
push
ss
xor
filds
enter
pop
testb
inc
dec
test
push
fsubr
std
mov
loop
adc
add
ret
mov
xchg
xchg
xchg
rorl
std
mov
inc
pusha
add
add
imull
popa
jbe
data16
pusha
rorb
or
jne
insl
orb
push
addr16
inc
push
movd
js
insl
inc
in
insl
dec
into
pop
push
cmp
aaa
std
call
into
leave
lahf
call
adc
sub
mov
mov
call
cli
xor
decl
mov
or
js
pop
mov
dec
ljmp
sub
xor
mov
aam
das
dec
and
fsubl
mov
dec
cmp
add
ljmp
cltd
xchg
les
mov
pop
xchg
inc
pusha
add
or
mov
pushf
push
mov
jmp
or
int
mov
lret
or
push
mov
lcall
add
xchg
lret
xor
mov
insl
mov
mov
sbb
jmp
call
or
rcrl
fimuls
test
add
dec
or
jb
jo
inc
aas
ret
xchg
in
and
les
imul
lcall
iret
cmpl
mov
imul
adc
push
aad
bswap
jle
sub
incl
and
jne
rorl
push
lret
shlb
and
repz
outsl
xor
icebp
adc
mov
jmp
dec
push
hlt
push
jnp
push
adc
mov
sti
rolb
scas
jbe
in
inc
jp
jg
call
sbb
xchg
lret
jne
into
or
inc
ljmp
jmp
das
mov
lret
sti
mov
fisttpll
push
iret
add
mov
sarb
pop
push
test
jae
inc
nop
mov
cmp
cmp
dec
sub
sarb
cmp
inc
inc
or
es
mov
fcomip
loop
sub
add
dec
xor
jecxz
sbb
in
cwtl
jmp
addl
jg
lcall
xor
mov
jbe
xlat
dec
daa
sbb
rolb
sbb
sub
mov
pop
das
sar
xchg
mov
lock
and
sub
mov
lods
push
jmp
mov
push
fsubr
sbb
adcl
sahf
mov
mov
out
les
test
test
xchg
test
mov
inc
or
add
std
add
test
inc
push
xchg
dec
in
movb
mov
add
out
add
mov
jne
aam
inc
sbb
ljmp
xor
and
int3
xor
push
les
ljmp
push
je,pn
in
rcll
add
jbe
fmuls
push
push
pop
movsl
imul
mov
cmpsl
sub
inc
test
pusha
call
jl
or
pusha
mov
dec
jge
or
mov
adc
pop
add
shll
and
mov
loop
jl
and
cli
jg
ret
dec
adc
dec
fmul
xchg
hlt
lods
scas
inc
imul
mov
rorl
ljmp
ss
mov
leave
add
lods
mov
lods
jbe
fildl
inc
mov
jae
cmp
mov
mov
xchg
bound
call
inc
mov
adc
xor
adc
lcall
or
ja
mov
in
sub
xchg
push
and
andb
xlat
out
sti
call
and
and
add
xlat
sbb
stos
mov
push
arpl
mov
decl
js
lods
push
sbb
xor
inc
out
dec
xor
bound
incl
sbb
mov
or
sub
sub
fcomp
or
pusha
inc
sub
xchg
jmp
mov
lcall
pusha
aaa
aam
test
cmc
xor
mov
push
out
and
push
adc
incl
jecxz
adc
cs
inc
leave
test
xchg
jo
jae
bound
pop
pop
mov
call
in
dec
add
insb
das
jo
cld
test
sbb
mov
jmp
inc
sbb
in
jmp
loope
add
lret
stos
rcll
sub
das
shl
mov
jmp
xchg
xchg
shl
cmpb
jo
push
mov
push
pop
xor
sub
pop
sahf
jo
inc
xor
flds
jl
aad
adc
and
fcomps
add
jl
jl
testl
sbb
or
add
sahf
fistl
jl
inc
push
loope
clc
add
mov
adc
jmp
movsb
xchg
add
dec
mov
jmp
and
aad
jecxz
addr16
xchg
repz
cmpsb
outsl
inc
fwait
stc
mov
bnd
mov
inc
fldcw
bswap
outsl
jo
jae
loop
and
aad
mov
cmp
ja
outsl
sub
add
movsb
call
xor
or
sub
in
lret
add
call
lock
cmp
je
add
lcall
mov
pop
lret
jl
jbe
cwtl
xchg
pop
cmp
mov
sbb
xchg
test
sbb
mov
or
xor
push
push
push
add
xor
repz
push
orl
out
jb
add
pop
hlt
add
dec
mov
mov
push
push
jp
ljmp
int
jg
adc
call
or
dec
std
hlt
and
push
dec
in
fwait
jo
jp
pop
dec
xchg
out
xor
outsb
push
fildll
pusha
je
mov
adc
aas
sub
movsl
bound
es
test
xchg
stos
scas
lret
lock
push
inc
rolb
push
lahf
adc
mov
testl
mov
ljmp
repnz
jg
sub
fmul
cltd
loop
movsb
mov
mov
imul
shlb
or
dec
dec
je
cmp
jns
xchg
addl
rorb
cmp
outsl
aaa
cmp
imul
pop
push
inc
inc
mov
or
jle
testb
decl
mov
aas
outsl
dec
fsubrl
or
psubusb
jle
int3
dec
push
inc
frstor
xchg
sarl
add
push
aas
das
in
daa
add
dec
loope
out
adc
dec
arpl
data16
arpl
inc
dec
inc
add
fistpll
cld
daa
lock
push
push
fs
push
sub
sbb
fidivs
loope
lret
mov
pop
push
jle
sti
mov
mov
shrb
inc
push
mov
add
inc
je
sahf
inc
filds
js
nop
js
dec
pushf
jne
mov
jae
jl
push
mov
gs
sub
outsl
and
jecxz
cld
mov
imul
inc
cmp
and
xchg
lret
icebp
jg
xchg
sbb
pop
push
gs
test
xor
ljmp
cmp
addr16
dec
push
bound
jbe
loopne
mov
jo
ret
roll
movl
lds
jbe
call
arpl
lret
mov
cmp
lcall
cltd
iret
sub
push
out
hlt
push
push
mov
nop
pushf
fbld
pmulhuw
ds
add
je
shll
xor
iret
movsb
mov
repz
dec
es
insb
dec
mov
inc
inc
push
mov
xchg
out
lret
faddl
ss
mov
or
pop
dec
ret
sbb
jbe
or
pop
cld
or
xchg
inc
inc
bound
mov
xchg
add
shrl
ds
lock
je
lods
loop
decl
jge
or
sub
adc
sub
stc
push
cli
xlat
jle
in
and
jbe
mov
clc
incl
adc
ret
cmpsl
mov
xchg
arpl
mov
call
inc
pop
dec
pop
leave
lock
jmp
lcall
xor
xor
jl
push
lahf
test
adc
mov
cmpb
inc
rolb
push
jns
mov
or
stc
xchg
les
sbb
jg
outsl
mov
movsb
std
dec
pop
stos
ret
pop
jns
icebp
rcr
arpl
scas
inc
mov
inc
push
push
add
push
push
addr16
or
imul
jle
loopne
inc
push
pop
fnstsw
sbb
xor
call
stos
in
pushl
mov
mov
lods
jge
push
jge
sub
addl
in
sahf
sbb
loopne
insl
ja
frstor
jne
repnz
fidivl
mov
sub
rcll
cli
jle
outsl
adc
or
clc
in
testl
sbb
mov
cmp
les
xchg
and
xor
andb
inc
jbe
arpl
jmp
pushl
lahf
sub
mov
or
lret
daa
jae
loope
xlat
pushf
adc
pop
pop
jo
outsl
inc
dec
subl
mov
push
push
lds
sbb
out
mov
dec
int3
push
jbe
dec
jg
notb
into
and
push
push
push
mov
push
ret
jp
jnp
and
cmc
push
cld
call
and
popl
hlt
insl
in
fisttpl
push
cmpsb
xor
cmp
cmp
jns
lahf
sarl
adc
lcall
call
mov
mov
ds
mov
iret
sbb
pushl
mov
cwtl
es
cmp
in
pop
out
fsubl
ret
pop
and
cld
inc
jae
gs
dec
int3
call
inc
lret
mov
push
inc
test
xchg
adc
adc
and
stc
or
add
add
je
popf
jl
imul
adc
push
sbb
mov
inc
add
inc
xlat
stc
ss
out
xchg
mov
cld
push
decl
clc
and
or
push
mov
lock
repz
xlat
test
dec
or
pop
hlt
xchg
outsl
outsl
xor
adc
call
hlt
mov
or
xchg
adc
stos
dec
subb
aam
andb
xchg
xchg
mov
iret
int3
test
inc
mov
add
mov
pop
scas
stos
xchg
add
xor
and
mov
movsb
cmp
push
mov
jns
mov
cmc
or
test
ljmp
das
test
xor
cli
test
fcomps
out
clc
sbb
mov
inc
je
mov
cli
cltd
loope
inc
in
jb
inc
rcrl
xor
aad
xor
call
sti
inc
jne
mov
jle
adc
mov
mov
imul
jno
jno
pop
decb
in
test
imul
xchg
cmp
jns
pop
lea
in
push
adc
popa
push
ss
stos
dec
pop
jbe
pop
or
insb
dec
sub
arpl
ja
push
decl
dec
cld
mov
mov
push
out
jmp
in
mov
lea
push
or
push
inc
xchg
pushf
insb
inc
add
mov
jo
repz
iret
js
add
mov
popa
cmp
add
cmp
inc
mov
and
jl
mov
mov
enter
or
jle
mov
jb
lock
or
mov
inc
mov
jle
adcb
shll
pop
cltd
xchg
stc
ss
sbb
push
ss
je
fs
stos
cmp
mov
pop
fisttpl
and
jo
idivb
jne
mov
add
push
inc
or
dec
add
xchg
arpl
xchg
aad
pop
pop
add
call
lock
sub
jge
sub
jmp
xchg
jo
ss
push
dec
addr16
jnp
mov
lods
add
ss
imul
mov
in
push
push
stos
lret
scas
cmc
hlt
decl
inc
adc
mov
shll
push
pushf
insl
jmp
jno
and
dec
jne
adc
cmc
test
add
jo
or
filds
adc
test
dec
cmpsb
mov
test
inc
cmp
rcrb
add
or
inc
add
loopne
stos
mov
aad
lret
sbb
dec
xchg
fdivr
in
imul
mov
jbe
dec
dec
and
clc
mov
xlat
inc
mov
dec
pop
xor
cld
fildl
sti
scas
and
cmp
popa
xchg
inc
lcall
xchg
jae
sub
incl
inc
icebp
or
mov
stos
sahf
notl
cld
ds
sub
loopne
dec
mov
jg
testb
push
movsb
addl
cmp
jmp
out
jl
movsl
pop
mov
and
inc
mov
mov
mov
jmp
sub
int3
ja
hlt
bound
aaa
ja
mulb
inc
gs
inc
dec
jl
insl
add
ljmp
rcll
outsb
adcb
out
inc
add
es
xor
test
sub
add
xor
inc
movsb
dec
nop
jmp
addb
loopne
pop
std
ffreep
ss
lret
sbb
loop
inc
pop
xchg
push
cltd
mov
call
and
mov
mov
outsl
sub
dec
dec
gs
lds
dec
pop
pop
push
fsubrs
repnz
adcl
mov
cmc
inc
jb
nop
cwtl
push
adc
popf
hlt
add
mov
aad
cld
or
dec
add
stos
movsl
mov
jne
lahf
and
lock
push
push
push
sbb
add
pop
in
insl
and
sbb
ss
jne
and
test
jmp
and
ss
daa
test
test
jge
mov
pop
add
adc
je
xorl
cmpsb
push
cmc
dec
push
mov
mov
cmp
adc
inc
pushl
mov
dec
mov
xchg
pushf
push
sbb
mov
push
pop
and
cmp
jmp
dec
xor
add
jmp
out
dec
add
add
push
into
scas
jp
mov
push
addb
rclb
dec
cmpl
or
and
mov
mov
fmull
xor
call
lret
test
fistpl
add
sbb
gs
in
xor
sub
add
loopne
dec
dec
jne
rol
mov
lock
push
lcall
pop
cmp
cmp
push
movsl
bnd
mov
inc
gs
bound
sub
sti
add
xor
inc
fcomip
dec
aaa
push
cmp
js
mov
call
mov
inc
pop
jmp
shl
add
cmp
pop
andb
imul
xor
in
xor
in
stos
negb
adc
js
call
adc
fstpt
test
and
pop
add
cmp
mov
js
icebp
mov
cli
decl
xchg
or
add
xchg
imul
mov
aas
inc
add
adc
add
mov
subb
add
or
xor
sarb
enter
inc
mov
in
decl
push
ficoms
pop
ret
lcall
cld
sub
mov
enter
clc
mov
loopne
inc
into
lcall
cmp
jg
incl
mov
xor
test
insl
inc
push
bound
outsb
and
push
insl
imul
mov
or
imul
mov
mov
add
sar
lcall
adc
movsl
insb
jno
cmpsl
inc
inc
lret
aam
shlb
lcall
icebp
jge
xlat
ror
pop
or
daa
mov
andl
sub
jb
popa
xchg
or
jno
test
mov
fstl
mov
stos
ljmp
js
jbe
sbb
inc
rolb
and
dec
cld
jecxz
jmp
adc
rcrb
cmpsb
mov
push
aas
xor
inc
sub
sub
aad
xchg
mov
add
jns
out
decb
aam
adc
add
adc
pushl
sbb
inc
test
and
pop
xor
or
sar
cmp
incl
adc
cmp
jl
mov
xor
in
sbb
jmp
ret
imul
mov
xor
mov
add
add
in
test
xchg
jbe
mov
aas
dec
jecxz
int3
pushl
and
inc
xor
or
les
jb
mov
add
hlt
scas
loopne
test
jmp
pop
out
loope
in
cwtl
out
and
imul
add
aas
fsubrl
scas
jle
jmp
dec
mov
pop
rcl
or
add
dec
fbld
sti
dec
sbb
and
cmc
adc
mov
out
cwtl
call
mov
pushf
sub
pop
pop
xchg
sub
sub
mov
lcall
push
adc
jecxz
dec
add
cld
push
inc
jno
sub
in
fwait
jg
push
dec
sarb
cli
add
push
es
outsb
cmp
inc
push
fst
push
jmp
sub
pushl
inc
hlt
fucomi
add
lret
lret
nop
sbb
dec
push
nop
stos
jl
insl
loop
inc
fstl
fwait
xor
adc
testl
test
add
shr
dec
add
rclb
add
sub
add
push
pop
insb
xchg
add
daa
inc
frstor
and
or
mov
sbb
mov
mov
jns
mov
xchg
push
sub
sbb
shl
jmp
add
decl
in
xchg
and
in
xchg
cmc
ret
aad
sbb
mov
scas
sbb
sbb
mov
cmp
out
lahf
shrb
push
jns
cmpsb
movsb
sahf
std
outsl
leave
mov
fwait
ljmp
sub
push
int3
cwtl
sub
adc
cld
scas
aas
icebp
xchg
adc
es
pushl
rol
mov
mov
pop
movsl
dec
out
gs
pop
rolb
inc
adc
aaa
cld
or
pop
lock
decb
lret
movsl
push
ljmp
test
incl
out
adc
popa
rorb
and
sub
sahf
jmp
pushl
std
lcall
cmp
leave
in
js
into
mov
or
push
cmp
sbb
loope
inc
fldenv
add
dec
or
mov
and
mov
cmp
sbbb
xchg
cs
mov
xchg
aam
out
incl
pop
jmp
sarl
push
pop
dec
xor
fsts
sbb
lods
and
nop
xorb
sbb
cwtl
cmpsl
insl
add
sub
jg
sbb
or
jo
pusha
lcall
aaa
std
adc
xchg
enter
cmp
ficoms
test
pop
sbb
aaa
pop
inc
inc
pusha
inc
jl
xchg
mov
cmp
mov
rolb
aad
push
push
xchg
dec
add
or
rcll
add
stos
and
mov
cld
sahf
inc
push
or
lea
sub
js
xor
mov
fnop
mov
sbb
push
test
xchg
sbb
and
aaa
jg
push
pop
cld
mov
and
ret
sub
pop
psubsw
and
cld
ret
push
jecxz
decl
cwtl
fisttps
jge
and
out
test
insl
or
push
or
ret
pop
jb
adc
outsb
pop
cld
add
in
rcr
cli
dec
add
jle
adc
jns
add
pop
dec
ljmp
call
cmp
add
idivb
push
sbb
sbb
pushl
inc
pop
addr16
nop
jbe
adc
xor
dec
aaa
add
dec
in
mov
ja
cmp
call
mov
out
inc
fcoml
mov
push
xor
add
ret
clc
incl
fwait
pop
mov
ss
scas
lret
aam
adc
adc
dec
inc
pop
rcr
iret
les
add
ss
mov
xchg
xchg
push
sub
push
sub
insb
clc
out
adc
loopne
fcom
insl
popf
mov
sahf
mov
loope
xor
sti
pop
inc
mov
dec
cs
loope
inc
inc
push
fisttpl
incl
nop
negl
pop
xor
inc
lods
dec
fnstcw
jb
sahf
in
pop
adc
inc
ret
fadds
dec
jbe
ret
inc
xchg
push
dec
outsb
rcrb
out
or
incb
or
mov
icebp
ljmp
and
xor
push
dec
inc
mov
mov
je
jl
jecxz
cmp
inc
dec
insb
and
and
dec
jno
cmp
ficoms
cmp
dec
or
je
imul
xchg
add
insb
push
call
stos
sub
mov
stos
and
pop
mov
cmp
or
enter
ljmp
xchg
xchg
outsb
push
shll
iret
push
cmp
adc
xor
jmp
mov
add
inc
popf
mov
jmp
and
inc
call
gs
xchg
push
mov
mov
mov
cmovle
jmp
pop
movsb
mov
aaa
mov
int3
adc
mov
js
mov
lcall
repnz
inc
shll
jnp
out
in
cmp
dec
ljmp
test
cmpsl
movsb
fsts
loop
or
mov
sbb
mov
pop
adcb
cmp
xchg
mov
loop
inc
pop
sar
decl
push
pop
out
add
icebp
or
insb
out
ret
adc
sbb
cmp
and
xor
jg
rcl
xchg
push
addl
mov
popa
cmc
bound
iret
push
inc
push
jo
rol
in
incl
sbb
adc
cs
push
sub
inc
pushf
sbb
xor
repz
jg
lcall
bound
add
pop
lock
mov
add
sbb
jb
ljmp
out
sub
push
fcmovnu
lock
lret
cmpb
fisttpl
in
sbb
add
rclb
loopne
cmp
mov
xchg
mov
pop
arpl
rolb
dec
pop
out
pushl
insl
out
cld
mov
add
lock
or
xlat
clc
out
cli
jmp
aas
lret
jbe
add
adc
aam
mov
int
mov
ljmp
mov
ja
aas
imulb
jecxz
lret
add
pop
iret
add
ret
pop
in
dec
pop
and
adc
mov
stc
fst
idivb
cli
decl
push
xor
adc
jns
xor
pushf
mov
cmp
mov
sub
mov
lar
jbe
fdivs
shll
inc
gs
jns
cmp
or
jne
xchg
sub
and
dec
inc
or
decl
pop
mov
orl
ret
aaa
xor
mov
mov
mov
inc
lcall
decl
sub
adc
nop
mov
ret
incl
das
xchg
movsb
mov
popf
cmp
ss
xchg
in
mov
adc
nop
push
test
fmuls
mov
and
push
add
or
jns
dec
jmp
jno
insb
or
add
lcall
or
gs
sar
mov
sti
mov
mov
dec
lahf
rol
cli
lods
sbb
rcr
jg
lcall
add
or
stc
lods
adc
add
out
cli
jmp
and
lods
jl
sub
push
mov
push
aas
pop
nop
cwtl
decl
loopne
mov
subb
aaa
push
je
xchg
or
enter
sbb
adc
fbstp
inc
arpl
call
and
ss
call
adc
mov
cld
inc
daa
bound
xchg
xor
pop
stc
loopne
test
cmc
add
outsb
sbb
ss
fisttps
loop
loope
push
int3
and
add
repnz
pop
and
call
add
push
stc
lock
in
and
xor
and
sub
pop
out
clc
call
xor
dec
mov
mov
or
in
incl
mov
sub
mov
bound
cmp
cmp
cmp
insl
std
push
lcall
jmp
imul
and
loope
repz
lcall
pusha
xor
stc
add
and
lock
sub
jp
stc
push
mov
pop
js
jne
pop
ljmp
and
mov
xor
cld
bound
lahf
cli
jb
xor
in
subl
jne
cmpsl
add
cmp
fistps
and
incl
and
mov
xchg
xchg
add
push
aas
in
sbb
and
pop
mov
fstpl
ljmp
outsb
adc
imul
push
dec
adc
xor
add
ljmp
adc
push
shlb
nop
into
sbb
xchg
shl
mov
rorb
ret
decl
fldenv
aam
pusha
sahf
xor
mov
scas
sub
clc
push
inc
xchg
rcr
lcall
mov
movsl
jp
jno
push
adc
je
int3
stc
sub
sahf
out
pop
push
ljmp
lods
rorb
mov
xor
iret
incl
cwtl
add
sub
inc
mov
lods
jg
xchg
enter
je
pop
stc
mov
test
add
out
jge
bound
lret
fdiv
pop
sti
add
das
ja
add
movsb
add
adc
das
and
mov
mov
inc
ror
iret
and
push
enter
mov
and
in
in
add
and
push
mov
and
add
aas
jl
or
lock
pop
test
mov
dec
inc
inc
dec
inc
dec
inc
dec
test
add
mov
in
sti
mov
sub
arpl
inc
add
roll
sbb
fildll
sbb
lret
sub
push
dec
mov
ret
inc
ja
cmp
dec
push
pop
scas
lock
push
fwait
jae
sti
push
add
add
push
sub
add
and
ja
in
mov
adc
jne
mov
sub
nop
aaa
adc
shlb
ret
push
mov
loop
jbe
xchg
fsubrl
addr16
cwtl
mov
fdivl
add
call
jnp
iret
lock
ss
add
pop
insl
xchg
add
xchg
add
clc
fnstenv
add
mov
dec
push
push
jg
rolb
clc
add
adc
bound
bound
fmuls
jg
test
dec
inc
cmpsb
mov
test
cli
test
imul
add
or
inc
add
pop
mov
sarl
mov
pop
xor
call
mov
jg
add
push
push
lods
ss
push
js
mov
movsb
rcrl
fcoms
mov
xor
mov
xor
leave
mov
ljmp
add
and
mov
lds
cwtl
fcompl
jbe
aas
rol
push
sub
pop
ja
ja
push
or
sub
pop
add
ret
bound
icebp
dec
mov
int3
jge
call
gs
dec
jnp
mov
stos
add
mov
cld
adc
arpl
dec
dec
inc
inc
divb
hlt
pop
lods
push
mov
movsb
inc
xor
or
jne
filds
shlb
pop
sub
xorb
jnp
addl
xchg
push
mov
pushl
pop
push
dec
pushl
xor
fmulp
repz
sub
imul
add
call
mov
enter
insl
or
inc
xorl
fcoml
or
movhps
inc
jo
daa
lods
lret
in
insb
dec
int3
mov
aaa
insb
xor
mov
mov
lods
xor
in
add
notb
adc
xor
push
jo
add
mov
ja
jne
dec
inc
movl
dec
inc
pop
ret
popa
push
or
out
jge
jae
sub
into
add
xchg
repnz
out
push
rol
insb
push
or
dec
icebp
or
dec
or
mov
mov
push
lret
add
push
insb
lock
into
jmp
inc
mov
adc
dec
les
fadd
popa
roll
mov
push
js
cli
push
cli
sbb
js
jmp
dec
or
fnstcw
cs
shlb
mov
jnp
or
xchg
roll
iret
or
in
pop
fisttps
imul
or
das
aam
push
sar
mov
dec
out
mov
jbe
and
out
jmp
push
push
aaa
test
pop
enter
pop
shll
dec
push
incb
int
add
imul
dec
mov
inc
dec
loope
xlat
fcoms
daa
xchg
adc
xor
pop
fiaddl
into
lock
adc
mov
add
push
push
fiaddl
in
mov
fcmovnu
xchg
pop
adc
dec
inc
inc
dec
cwtl
ss
push
dec
add
loopne
or
add
inc
dec
dec
lods
pop
repnz
mov
pop
fnsave
repnz
add
ffree
inc
mov
inc
iret
inc
outsb
jg
scas
and
dec
dec
mov
push
addr16
in
cmp
cmp
xlat
aad
xchg
sarl
adc
inc
push
outsl
imul
popa
icebp
dec
mov
xchg
push
jns
hlt
arpl
cmovge
adc
gs
xor
roll
popa
mov
addr16
dec
pop
clc
mov
dec
jo
dec
mov
xor
shr
inc
push
iret
jecxz
adc
add
and
mov
fisubrl
jns
dec
add
aas
xor
subb
js
dec
jl
pop
jb
xor
out
adc
in
inc
into
add
pop
sub
cmp
or
add
and
imul
mov
sarl
cs
pop
in
xor
adc
out
jae
arpl
bound
insb
adc
push
xor
dec
in
xlat
adc
repnz
pop
stos
insb
movsb
cmp
mov
push
enter
ljmp
jmp
mov
ja
jbe
mov
lret
outsb
inc
inc
add
fcomps
jno
add
in
rclb
pop
outsb
lods
and
add
xchg
or
inc
cmp
incl
sbb
cld
inc
jmp
cwtl
clc
cmp
out
outsl
inc
xchg
out
aam
imul
fs
push
loopne
call
dec
lea
aas
add
and
out
mov
mov
push
add
addr16
mov
fwait
adc
mov
cld
fisubrl
test
roll
xor
inc
rolb
rcl
pop
les
inc
decb
cmp
lcall
or
mov
loope
mov
ds
add
lahf
dec
fwait
lret
lds
sbb
cmpsl
jo
shl
lret
imul
jb
jle
adc
jp
fbld
dec
jo
jno
lret
sub
sti
lods
mov
pop
adc
movsl
sbb
add
mov
push
jp
xor
inc
xchg
inc
ss
bound
lods
pop
push
loopne
fimull
fcmove
cld
lcall
lcall
loop
jbe
aaa
sub
hlt
sbb
ja
popa
push
lcall
xor
test
fisttps
out
mov
cmpsl
aam
ror
mov
in
jge
insl
sub
fstl
lcall
mov
cld
jp
push
mov
call
sub
sub
inc
or
fldenv
pushf
jp
add
xchg
icebp
mov
push
mov
inc
dec
dec
les
mov
in
pop
lock
xchg
sbb
pushl
test
sbb
outsl
dec
lock
dec
div
roll
lret
mov
bound
dec
int3
mov
dec
lock
mov
cs
outsb
pusha
pop
push
push
pop
stc
mov
jmp
test
jmp
jae
inc
jle
andb
jmp
out
xor
cmp
push
adc
xchg
add
jmp
mov
push
mov
mov
jg
cmp
ss
cmp
in
sbb
ds
cmc
and
sbb
push
jb
fsubs
repnz
clc
mov
outsl
insb
imul
jp
nop
inc
and
xchg
mov
mov
cld
jg
fstl
push
data16
xchg
mov
jle
int3
and
xchg
icebp
pop
mov
test
shl
out
jne
lods
lret
pop
fs
outsl
mov
in
mov
cmpsl
icebp
rcll
or
scas
outsb
iret
xchg
mov
mov
std
pushl
inc
xor
mov
repnz
pop
xorb
popa
dec
add
decb
bound
in
add
repnz
xor
jb
mov
inc
mov
call
push
loop
js
movb
je
mov
stos
es
ffreep
mov
in
push
adc
pop
ljmp
jns
arpl
inc
add
pushl
mov
pop
aam
sub
cmp
jo
test
xchg
fmul
push
jb
mov
mov
sti
cmpb
fsubs
xor
outsb
lret
es
mov
xor
xor
popa
mov
mov
fdivr
incl
lods
mov
push
in
and
pop
pop
pop
shrb
stos
xor
enter
push
aaa
inc
insb
push
cmovb
push
in
call
jp
adc
add
mov
cmp
cbtw
xor
inc
jg
jnp
mov
push
or
xor
das
loopne
pop
in
add
dec
test
fs
insb
outsw
and
insl
and
in
dec
mov
repnz
test
mov
cmpl
cltd
sub
cld
cmp
gs
outsb
sahf
inc
daa
fimull
mov
dec
and
pop
jns
call
push
sub
stos
shrb
xchg
call
sbbb
popa
pop
add
lret
add
xlat
bound
flds
or
gs
push
and
shll
push
xor
lret
ret
sub
out
sub
pushf
adcl
pop
cltd
rcrl
mov
aam
lret
pusha
outsl
inc
jecxz
and
add
aas
out
sahf
aaa
inc
push
outsb
fmul
add
les
jecxz
mov
cmp
lcall
test
pop
cmc
jp
push
cli
adc
int3
call
sbb
sti
outsb
nop
dec
add
js
mov
inc
dec
jne
data16
xor
jmp
sbb
jae
aad
push
xchg
mov
lods
or
mov
incl
dec
dec
aam
call
insb
das
aam
push
jne
arpl
decl
add
mov
push
pop
dec
sbb
mov
cld
sahf
pop
daa
add
call
in
sub
loop
mov
xor
dec
xor
fcoms
out
addr16
dec
xor
inc
fldcw
jecxz
insl
pop
xor
pop
lods
clc
inc
fmull
jbe
bound
jecxz
push
jae
out
mov
push
loop
xlat
add
popf
sbbb
xor
ljmp
in
lea
pop
xchg
cmp
jns
xor
enter
dec
int3
jge
in
mov
mov
cld
mov
push
xor
jns
iret
test
popa
pop
cwtl
jno
inc
int3
mov
das
push
fisubrs
cwtl
orl
mov
in
mov
add
insl
and
lret
fs
adc
mov
mov
xor
dec
dec
dec
popa
xlat
sbbb
cwtl
test
pusha
stos
sub
mov
mov
mov
lcall
mov
push
aad
mov
call
sbb
mov
cmc
sbb
gs
jl
inc
sbb
jae
push
fildll
dec
rolb
inc
add
jnp
iret
sub
call
iret
xchg
outsb
sub
or
bound
xchg
fwait
or
scas
and
repz
std
pusha
orb
xchg
faddp
push
xchg
jg
sbb
push
push
dec
out
call
jle
jecxz
movsb
data16
sarb
enter
jno
dec
scas
xchg
loop
movd
out
push
es
jb
test
outsl
bound
push
jne
loope
loop
push
gs
js
xor
dec
in
adc
cwtl
sub
jg
jno
scas
and
dec
out
ljmp
inc
mov
add
fcmovnb
mov
cmpsl
xchg
out
add
or
dec
inc
push
outsb
clc
inc
es
loop
add
insl
call
rolb
rorl
mov
outsb
loop
xchg
repz
push
mov
xchg
jo
incl
jl
push
inc
aas
add
jmp
pop
adc
add
jmp
out
ret
idiv
inc
mov
xor
ffreep
test
rolb
aas
in
jae
push
es
mov
sub
lcall
sbb
cmp
cwtl
cld
or
stos
inc
mov
movb
push
loopne
xchg
inc
jb
imul
and
or
ret
or
lods
sub
aas
dec
test
or
add
adc
push
jle
dec
lods
shld
adc
ret
call
ret
in
or
pop
lods
pushf
fisubs
movl
push
outsb
dec
aad
xchg
pushf
gs
jg
mov
add
es
and
inc
fstl
adc
add
cld
inc
fcoms
or
insb
cmp
xor
add
das
ja
adc
imul
pushl
mov
mov
loope
or
add
or
shl
inc
lods
mov
fwait
add
iret
jecxz
mov
int3
add
add
and
test
jns
xchg
clc
pop
jno
add
iret
push
mov
test
adc
outsb
pop
shrl
ljmp
mov
push
out
cltd
popa
mov
sarl
fwait
jge
xor
cmp
mov
sbb
fdivr
mov
cli
mov
or
decl
xchg
loope
sub
pop
inc
add
dec
cmpsb
adc
leave
es
sbb
es
cltd
jp
in
jb
addr16
pop
ss
in
xlat
aad
xchg
pop
addr16
or
jb
popf
jg
cmp
sbb
arpl
fsubrl
out
les
pop
sbb
adc
jae
xchg
movsb
jg
call
inc
xorb
push
jp
add
fs
les
in
frstor
call
repz
das
addb
inc
mov
pop
pop
movsb
dec
jo
push
scas
shll
pop
adc
cli
decl
and
push
add
pop
clc
or
push
and
ret
push
out
sbb
ljmp
daa
or
inc
mov
or
xor
scas
mov
mov
sbb
rcr
mov
xchg
and
add
sub
jg
xor
lcall
iret
add
cltd
push
and
pushf
enter
jno
and
mov
cmp
xchg
pop
adc
movsl
mov
xchg
mov
and
mov
leave
lods
test
lcall
xchg
data16
add
jecxz
dec
xor
imul
pop
repz
sub
inc
pushl
ret
sub
imul
ret
pop
testl
fdivrl
pusha
pop
arpl
ljmp
or
in
pop
add
cltd
scas
xchg
shll
adc
and
lcall
clc
cmc
sub
movsl
ljmp
add
jl
mov
xchg
xchg
es
cmp
mov
pushl
cmp
inc
arpl
mov
jbe
data16
pop
xor
push
xchg
adc
hlt
incl
hlt
mov
xlat
lock
pushf
xchg
dec
dec
daa
loope
inc
rorl
sbb
xchg
mov
inc
cmp
data16
or
dec
jae
add
xlat
xlat
pop
xchg
cmpb
mov
sbb
in
jno
ss
pushf
shl
shlb
xor
adc
outsb
add
dec
xor
inc
shlb
mov
push
jns
mov
fwait
and
ss
xchg
inc
out
scas
cli
inc
out
int3
in
call
pop
mov
dec
dec
and
adc
lcall
incl
lds
cwtl
pop
mov
or
ljmp
mov
mov
lcall
sbb
jbe
repnz
jb
cld
gs
clc
inc
push
dec
jge
xor
js
bound
or
incl
loope
or
pop
insl
add
xchg
sub
shrl
or
mov
call
sti
cmp
and
push
xor
mov
add
fiadds
add
fldt
adc
sub
in
in
fdivl
repz
dec
ret
stc
inc
dec
imul
mov
test
xchg
shl
fwait
xchg
aas
add
call
js
pop
filds
fcmovb
orl
mov
adc
or
fists
sbb
adc
jb
fistpll
adc
fistl
add
and
push
jmp
cmp
nop
pop
or
mov
lcall
mov
pushf
inc
xchg
lods
stc
subl
xor
hlt
fcmovb
imul
in
push
inc
push
add
dec
add
and
outsb
call
mov
imul
stc
shll
cmp
jg
gs
incl
lret
outsb
sbb
or
jo
mov
xor
xlat
add
xor
jg
or
inc
push
bound
add
sahf
cmp
loopne
adc
sbb
call
cmpsb
inc
daa
int
or
mov
inc
cld
xchg
sbb
ljmp
fsubrs
mov
lcall
aaa
sbb
cwtl
push
ss
test
popa
cs
inc
outsl
in
cmpb
into
aam
inc
jns
cmp
dec
cwtl
inc
xchg
xor
mov
cld
xlat
sub
scas
pushf
sahf
sub
adc
jmp
sub
psubd
into
inc
mov
mov
lods
aas
xchg
inc
mov
ss
call
jg
aaa
jecxz
rcrb
pushf
sbb
ret
icebp
jbe
stc
dec
jne
inc
xchg
cmpsl
adc
out
cmpsl
inc
jmp
xchg
mov
pop
inc
rol
jns
mov
xchg
jno
dec
push
call
shlb
es
mov
into
xchg
lret
push
outsl
fsubs
pop
xchg
dec
insl
lret
movsb
bound
jmp
xor
shlb
pop
lds
sub
adc
pop
cmp
xor
cmp
jnp
gs
pusha
pushf
fwait
popf
ds
sub
cmc
xchg
sbb
pop
add
dec
mov
orl
repnz
mov
xor
push
sub
inc
das
push
xchg
movaps
pop
add
mov
xchg
cmp
or
loope
fidivs
push
push
and
xor
inc
push
xchg
dec
aas
loop
js
dec
js
xor
xchg
ljmp
push
insb
decl
and
push
jle
pop
inc
fstpt
lret
mov
mov
fbld
pop
xor
xor
adc
jmp
and
pusha
aaa
xchg
mov
sbb
in
insl
lods
dec
insl
sbb
jne
xor
pop
rcrb
out
mov
cmp
adc
push
out
xor
pop
or
cmovno
loop
sbb
dec
insb
dec
sub
push
gs
cmp
aaa
mov
dec
rclb
add
cmpsb
xor
jg
push
push
or
mov
movsb
fiadds
sbb
imul
into
dec
jmp
cmp
ret
rcll
dec
decl
repz
sub
sarb
fsubrp
ret
mov
sub
outsl
jno
data16
or
sbb
pop
dec
jbe
rolb
and
notl
incl
push
push
xor
or
mov
adc
pop
push
test
in
pop
ret
xchg
daa
bound
inc
mov
clc
lcall
dec
out
js
lcall
fistps
mov
dec
push
cmp
cmp
nop
rcr
pop
sahf
pop
push
bound
lock
aaa
pop
sti
and
mov
fsubs
cltd
iret
sub
mov
push
iret
mov
sbb
in
leave
in
icebp
xchg
cmp
xor
push
popa
push
fs
fdiv
push
push
cwtl
cmp
adc
scas
mov
mov
icebp
push
clc
push
mov
inc
dec
fs
inc
fcomps
mov
pop
rcrb
popa
into
movsb
dec
inc
dec
out
mov
test
jecxz
jmp
mov
repnz
mov
mov
cmp
pop
add
out
mov
jb
inc
out
mov
xchg
cmp
cld
testb
in
nop
or
jbe
xchg
and
inc
test
movb
dec
cmp
xchg
dec
movsb
dec
pop
aas
cmp
dec
std
adc
fadds
fs
cmp
daa
pusha
iret
or
jo
sub
sub
pushl
mov
inc
loop
fdivrs
mov
jmp
dec
inc
add
dec
dec
jg
dec
push
sbb
mov
inc
mov
push
out
pushl
hlt
outsb
push
test
xchg
or
divl
lods
ss
jl
push
imul
xchg
fildll
push
aaa
ljmp
je
add
and
lret
ja
ret
xor
sarl
dec
cmpb
movb
aaa
arpl
add
mov
incl
test
add
mov
icebp
ss
mov
fistpll
std
jg
inc
les
repnz
inc
stos
sbb
pop
mov
mov
jge
jg
or
icebp
ds
hlt
cmpsb
push
pop
jo
lock
lock
insb
repnz
pushl
scas
mov
pop
outsl
xor
les
ficomps
ljmp
pop
and
lock
xchg
add
ss
bound
stc
cmc
imul
jmp
push
mov
jns
jl
aad
inc
addr16
test
fisubl
shrl
clc
add
jnp
xor
push
mov
notl
push
push
lods
rcrb
cmp
inc
jg
incl
imul
inc
clc
lds
add
sti
push
jp
stos
jle
mov
imul
push
jne
cli
sub
loop
insb
dec
dec
aaa
addr16
ds
pop
ljmp
push
icebp
inc
mov
incl
push
sahf
out
inc
scas
or
out
dec
push
loop
xchg
imul
out
xchg
jno
inc
sbb
ja
dec
or
loopne
mov
imul
imul
push
mov
aaa
ss
std
fisubrl
mov
xlat
filds
fiaddl
add
popa
ljmp
mov
push
sarl
add
push
mov
jecxz
cmc
ljmp
ljmp
jle
imul
in
cwtl
push
add
movb
add
cwtl
in
xor
insb
push
push
inc
bound
data16
hlt
sub
jno
push
dec
dec
dec
add
dec
adc
clc
jg
add
jb
push
cmp
or
pop
xchg
mov
les
fistpl
pop
out
push
jb
push
mov
dec
or
movb
dec
xor
cs
sbb
cmp
xchg
pop
mov
pop
mov
inc
movsb
shlb
in
mov
add
add
es
mov
pop
sbbb
adc
cs
sub
sti
aas
insb
push
rcll
dec
cmp
jle
leave
adc
lret
inc
lock
push
mov
inc
insl
sbb
push
inc
dec
or
jno
ud0
call
leave
pop
jne
push
iret
adc
rclb
add
fwait
test
call
or
push
cmp
push
inc
push
insb
jne
stos
outsb
cmpl
pop
scas
hlt
inc
ljmp
mov
test
mov
jp
inc
cmpsl
loopne
jmp
jge
ds
lcall
stos
mov
inc
adc
rol
mov
inc
loopne
popa
popf
mov
fistpll
sti
sbb
and
sbb
jb
adc
sahf
or
sub
inc
lock
dec
xor
add
inc
clc
cmp
cmpsl
leave
add
repz
aad
jle
aad
xchg
or
out
loopne
adc
insl
sub
pop
insl
mov
in
adc
jno
ret
cmp
mov
cld
int3
ret
push
and
or
xor
sbb
cli
aam
mov
addb
xchg
xchg
out
mov
cmp
sbb
push
dec
add
into
pushf
inc
dec
aad
lock
fcmovu
dec
push
je
jl
dec
clc
mov
xor
inc
mov
decl
sub
dec
sub
insb
fisttps
xchg
and
in
shrb
jo
out
and
cmc
dec
insl
shl
decb
bound
pop
aam
outsl
pop
sbb
dec
sub
cmpsl
jmp
inc
mov
sbb
hlt
pop
or
inc
stos
cmc
insl
mov
ret
fcmovnb
cld
pop
push
dec
mov
fs
jmp
shll
push
add
or
xor
push
popl
pop
loopne
sbb
je
xor
adc
clc
xlat
rolb
sub
mov
je
fcoms
pop
push
inc
mov
or
idiv
pushl
xor
xchg
inc
les
push
rcl
into
in
xchg
pop
jbe
sbb
in
fwait
push
insb
stos
cmp
pop
je
mov
ret
and
decl
icebp
pop
adc
sar
jb
lock
gs
es
add
jbe
inc
lods
push
loope
xchg
adcl
addr16
outsl
xchg
dec
mull
cmp
addr16
jns
pop
or
jg
popf
mov
mov
xchg
xchg
icebp
fs
mov
pop
adc
cmp
clc
data16
xchg
daa
lcall
imul
adc
shlb
popf
sbb
push
xor
call
movsl
enter
xchg
sbb
inc
or
or
jne
sbb
and
and
sub
sub
incl
roll
jno
in
mov
add
js
adc
call
xchg
jmp
dec
and
mov
bound
mov
push
fs
inc
ds
jo
fs
movl
scas
adc
cmc
cli
mov
mov
ljmp
scas
jbe
add
inc
pushf
loop
inc
lret
cli
add
js
test
fsubl
adc
add
jmp
mov
aad
xchg
add
fstl
inc
pop
mov
jecxz
decl
sub
jge
or
leave
scas
jmp
jne
bound
mov
jmp
lahf
out
bound
out
cmp
notl
cmp
or
push
sahf
or
cmp
mov
sbb
cli
mov
or
push
push
shll
rclb
xchg
imul
movsb
jl
xchg
in
sub
or
ds
cmp
sbb
cmpsl
cld
sarl
mov
jne
testl
movsb
inc
cmc
int3
adc
dec
add
ret
test
sbb
add
loopne
test
sbb
sbb
jmp
add
sub
mov
mov
and
stos
aam
push
into
cmp
outsl
lock
inc
add
inc
add
adc
outsb
or
pop
inc
sti
mov
jg
sbb
add
add
cmp
subl
flds
lea
cmp
sub
and
loopne
or
pushl
leave
mov
pop
in
es
push
jno
jb
cwtl
push
jo
xchg
sub
and
sub
addr16
sub
cmp
loope
xorb
mov
pop
sub
xor
in
lods
stc
lcall
loope
push
or
sbb
stos
outsb
and
data16
cmc
push
inc
or
lahf
sbb
jmp
sbb
and
xorl
mov
xchg
pushl
pop
adc
sbb
lret
sub
popf
outsl
insb
lcall
jns
call
adc
push
popa
mov
ret
enter
jg
inc
mov
shlb
pushl
aaa
popa
leave
and
add
or
pop
fcoml
mov
push
insl
cwtl
sub
sub
decl
ret
in
test
addl
mov
das
pop
dec
pop
outsb
mov
cmp
inc
push
mov
incb
mov
lds
leave
popa
cmp
scas
roll
outsl
or
movsb
jmp
inc
xor
bound
and
clc
add
mulb
out
xchg
mov
xchg
and
inc
pop
add
adc
call
or
ja
dec
scas
insl
or
fildll
xchg
and
ja
jmp
les
scas
sar
jmp
and
add
sahf
ret
cmp
xchg
pushl
sar
incl
rclb
test
paddd
shlb
mov
mov
insb
xor
je
adc
or
sbb
or
shll
or
add
incl
mov
data16
xchg
adc
scas
sub
and
into
inc
sarl
call
push
mov
test
rorl
addb
fs
sub
mov
stos
and
jle
pop
mov
push
fs
jmp
or
out
add
sbb
push
mov
fs
mov
decl
loope
inc
mov
xor
lret
mov
add
sub
push
add
mov
adc
xlat
and
aad
push
add
inc
test
call
mov
jbe
lahf
cmp
and
push
ss
inc
jnp
imul
add
call
cwtl
shll
call
mov
ljmp
sub
incl
xchg
jb
andb
or
xchg
or
sbbl
pop
std
jmp
jo
lock
jge
jp
add
mov
fcomps
test
adc
decl
inc
sbb
and
mov
sahf
mov
add
inc
xor
and
je
jl
cmc
inc
sti
idiv
xchg
call
add
hlt
jae
push
nop
outsb
shlb
pop
fcompl
cmp
ss
or
imul
call
or
sbb
loope
sbb
inc
dec
push
add
push
inc
int3
test
ss
inc
pop
dec
dec
jb
inc
or
aas
and
ret
sub
mov
adcb
mov
mov
fsubrs
clc
vandnpd
dec
inc
jbe
and
jg
or
cmp
bound
jne
addr16
loope
into
dec
dec
inc
enter
jg
pushl
in
sub
shlb
jo
sti
mov
lods
lds
adcb
pop
dec
clc
inc
push
jno
fadds
rcrb
mov
repz
sarb
call
dec
dec
in
test
call
push
dec
pop
int3
enter
mov
lock
pop
mov
or
dec
cmp
inc
add
mov
cmp
inc
inc
cld
in
aas
loope
push
dec
loopne
mov
add
mov
cmpsl
pusha
decl
mov
insl
cmc
mov
inc
or
dec
lret
outsb
mov
jmp
xor
int3
cli
inc
shlb
jp
outsb
rcr
dec
inc
imul
roll
dec
and
sbb
cwtl
cmpsb
push
add
fldenv
jecxz
mov
ret
push
rcll
aas
lcall
lcall
cmp
or
int3
cs
subl
mov
dec
inc
ffree
call
int3
add
stc
mov
test
inc
push
sbb
fbstp
jo
movl
push
sub
jmp
ljmp
xchg
xchg
xchg
jl
jge
outsl
xchg
jg
insl
rorb
fwait
rorb
push
push
imul
in
ljmp
xchg
dec
mov
mov
jg
call
push
jnp
mov
and
iret
pop
mov
filds
pop
cmc
pop
inc
in
orb
push
inc
push
cli
pusha
pop
add
or
xor
dec
inc
jne
mov
mov
push
je
inc
xchg
cmp
and
push
aaa
mov
mov
pop
mov
dec
pop
dec
mov
jl
sbb
ret
jp
shrb
arpl
ffreep
aaa
outsl
push
movsb
add
dec
pop
cmp
xor
in
call
call
jp
sbb
out
mov
sbb
xor
xorl
jne
ficoms
inc
jae
sbb
inc
stos
clc
or
push
clc
push
push
xor
adc
mov
push
adcb
mov
jmp
mov
int3
mov
inc
mov
cmpb
popa
mov
push
inc
pusha
and
popa
cmpsl
jle
rorb
xor
adc
lret
imul
decl
adc
sahf
sbb
dec
aad
fsubl
xchg
push
fwait
xchg
stos
push
data16
insb
lock
push
inc
xor
dec
mov
cmp
xchg
sbb
add
movsb
rcr
incl
or
sbb
adc
sti
push
nop
mov
mov
jns
mov
cld
inc
xchg
sbb
push
dec
inc
jle
or
out
jmp
jns
ret
xchg
gs
pop
add
in
call
testl
addr16
aad
or
pushf
js
push
clc
movsl
jae
add
insl
or
jg
addl
lock
insb
sbbl
cmp
pushl
ror
daa
into
jns
push
inc
or
adc
dec
push
sub
push
iret
js
sbb
jb
jmp
insb
push
dec
int3
fisttps
cli
mov
add
inc
in
or
adc
sar
ljmp
mov
test
xchg
xor
cwtl
adc
pop
out
push
ficompl
ja
cmpsb
popl
pop
mov
pushl
aaa
sbb
adc
sub
push
and
xchg
or
in
imul
push
dec
xor
pop
shlb
dec
inc
xor
lcall
jae
int3
dec
push
ljmp
push
fs
lcall
mov
jmp
jle
pop
outsl
inc
push
or
mov
dec
xor
inc
and
adcb
neg
movsb
inc
or
add
incb
xchg
aas
jno
lret
push
gs
sahf
int3
inc
jl
and
test
xorb
add
lret
das
and
mov
pop
loopne
xor
cmp
fildll
sub
ja
jns
pop
or
arpl
fisubs
out
mov
fnstcw
es
jmp
jmp
cmp
and
xor
xchg
ja
or
das
push
adc
xor
repz
ljmp
lret
jp
ja
dec
xchg
mov
hlt
sub
fcmovne
xchg
fucom
jnp
call
ret
sbb
jne
js
ret
adc
push
popf
dec
push
fimuls
aam
roll
pop
xchg
or
lret
xchg
or
shrb
inc
je
movsb
push
xchg
or
inc
jae
ficoms
or
cwtl
rcrb
or
xchg
adc
pushf
jg
jo
push
jo
lcall
inc
cltd
int
cmpsb
fistpll
and
jnp
mov
jne
loopne
js
mov
add
inc
dec
dec
scas
dec
xchg
adc
fcomp
sub
xor
inc
sti
jmp
je
mov
xor
jns
mov
pop
jb
jo
shll
sti
popa
mov
sti
leave
adc
cs
lcall
inc
cmp
mov
mov
jno
mov
out
fstps
mov
lret
ds
daa
lret
push
add
ljmp
ss
jge
push
loope
insl
arpl
add
ljmp
or
pop
into
clc
or
xchg
outsb
setl
inc
mov
sub
push
shll
mov
mov
fucomip
loope
add
adc
addr16
es
mov
sbb
loopne
sbb
mov
imul
pop
xchg
xor
ret
in
lock
dec
adc
cmpsb
shll
pop
test
push
fmul
jne
dec
sub
aas
sahf
sarb
enter
xchg
jno
sub
lret
fisttpl
dec
std
and
xor
lock
push
or
cmc
sbb
loopne
push
push
repnz
mov
cmpsb
loope
dec
inc
push
aam
imul
sub
call
lret
test
gs
jns
add
sub
inc
xchg
lock
stc
outsb
pop
sub
xchg
mov
imul
lcall
pushf
dec
push
fnstcw
inc
xchg
call
xchg
lock
data16
pop
xor
cltd
ficompl
leave
add
loop
mov
push
fnsave
xchg
push
push
xor
jb
fstl
pusha
dec
out
push
dec
push
std
call
inc
clc
test
push
stc
push
lock
or
push
inc
in
fst
mov
sub
jmp
mul
push
dec
ds
das
push
repnz
dec
lret
lock
or
mov
ljmp
lret
fidivs
cs
mov
out
call
mov
xchg
rclb
dec
lods
repnz
dec
add
push
roll
mov
sbbb
jns
sub
ljmp
xchg
jle
add
or
sub
xor
ljmp
incl
xchg
mov
nop
xlat
mov
fcmovne
hlt
and
dec
mov
pop
xor
or
xor
inc
inc
popa
lcall
loopne
push
push
mov
fs
pop
clc
out
lock
in
clc
push
sub
dec
daa
sbb
aaa
xchg
bound
pop
mov
outsb
cmpsl
cmp
insb
pop
jb
push
xor
mov
xchg
adc
dec
inc
mov
in
incl
sub
mov
cwtl
mov
push
sub
or
jo
dec
dec
imul
xor
inc
push
dec
outsb
adc
push
jae
push
les
xchg
inc
push
jg
imul
or
jne
test
loop
sbb
aas
cmp
loopne
inc
ret
push
push
dec
rcrb
outsl
mov
inc
js
xorb
iret
repz
jne
dec
scas
sub
xchg
fstpl
push
aad
sbb
dec
add
lods
pop
jmp
fcom
jmp
xchg
jmp
subl
add
sbb
jb
fbld
xchg
inc
xchg
xchg
fcoml
mov
push
mov
in
inc
mov
jmp
mov
out
lea
mov
mov
inc
dec
jae
jle
mov
stos
lret
js
inc
sbb
jg
jle
or
dec
push
push
or
call
cmp
repnz
je
movsl
fisubl
cmc
popl
daa
jle
xor
xor
std
loope
icebp
in
or
call
aad
pop
jno
adc
shll
push
ret
insb
hlt
push
pushl
imull
imul
loopne,pt
stos
jmp
clc
jbe
mov
in
add
cmp
inc
or
lcall
jmp
push
clc
hlt
in
mov
mov
dec
repnz
movsl
aad
test
sti
pop
mul
ja
sub
call
int3
inc
cs
jnp
pop
shlb
pushw
out
dec
pop
outsb
les
negl
push
outsl
jns
jne
push
dec
jg
xor
call
je
ds
les
push
xor
mov
sbb
mov
sbb
or
jl
pop
inc
xchg
xchg
push
cwtl
outsl
cmpsb
mov
mov
jo
inc
dec
cs
filds
test
pop
fisubrs
or
xor
add
sbb
push
lock
cld
imul
xor
dec
add
jge
aaa
orl
mov
ffree
xchg
leave
pushf
inc
sub
dec
xor
decl
dec
test
xor
shll
add
jg
hlt
dec
mov
cmpsb
fdivr
fs
add
in
loop
fcoms
push
push
cmp
movsb
dec
inc
inc
jns
sub
xor
inc
add
repz
test
mov
pushf
sub
inc
jg
fs
leave
stc
xor
sbb
shlb
scas
mov
in
add
mov
movb
push
or
xchg
push
adc
mov
movsb
cmp
mov
insl
aaa
or
add
je
fs
ret
test
je
insl
xor
adcl
les
ljmp
fsub
sbb
cld
push
push
push
ja
andl
sub
sub
cmp
push
and
or
inc
jnp
test
imul
fists
pop
pop
gs
lods
ret
adc
inc
sar
out
xorb
xchg
dec
sub
loope
lods
sti
stos
clc
movd
cmp
adc
jo,pt
test
mov
lret
fildll
add
ljmp
pop
hlt
mov
adcb
stos
inc
aaa
cmp
jo
sbb
jb
outsl
xchg
add
mov
outsl
jne
mov
dec
inc
inc
push
xchg
inc
dec
addr16
xor
push
cmp
cmc
lcall
int3
sub
or
adc
aad
repnz
jmp
std
jle
mov
repz
arpl
dec
xchg
lret
in
adc
mov
lahf
cmp
sub
nop
out
or
ljmp
mov
xlat
std
cmp
ret
cld
xchg
mov
pop
cmp
daa
jge
imul
rcrl
sbb
sbb
pusha
mov
inc
mov
cld
mov
add
call
fwait
add
mov
js
mov
xor
pushl
mov
inc
dec
dec
jge
out
inc
in
test
filds
cld
cmp
xchg
stos
cmp
cmpsl
cmpl
out
jo
filds
sarb
cs
mov
cmp
mov
push
lret
xchg
cmp
push
cld
sbb
cld
in
nop
jnp
add
andl
decl
dec
sbb
pop
out
cld
xor
mov
repz
js
std
cmpb
enter
or
jo
jae
js
out
hlt
dec
jl
out
iret
int
fwait
mov
dec
add
insl
fbld
movsb
mov
sahf
stc
ds
jae
add
mov
dec
test
outsl
insb
dec
push
movsb
shll
xchg
push
inc
icebp
pusha
rorb
add
jbe
push
movb
dec
jle
sar
fistpll
mov
mov
xlat
mov
call
jnp
inc
xchg
incb
rorl
lock
and
gs
add
xor
sub
insl
xor
lcall
arpl
movsb
add
mov
inc
and
jno
cmp
xor
xor
out
add
icebp
call
fs
arpl
sti
loop
jnp
arpl
pop
adc
push
push
or
scas
push
or
adc
lea
pop
and
decl
out
stc
out
and
out
outsl
xor
xor
inc
mov
pop
dec
xchg
dec
lcall
pushl
cmp
ja
cmp
xor
ds
mov
cld
inc
lock
mov
out
rcl
xor
in
cli
cli
call
int3
js
mov
xor
pop
scas
jns
pop
fwait
out
xchg
pop
incl
inc
dec
jo
jb
pop
inc
in
mov
sub
aad
leave
adc
in
sarb
inc
pushf
int3
inc
mov
cmp
loope
sub
mov
adc
jmp
cmp
dec
add
stc
fdivrl
sbb
arpl
insb
mov
and
data16
loop
cmp
xchg
icebp
pushl
and
mov
push
or
cmp
cmpsl
mov
jg
fs
std
dec
mov
dec
ret
daa
loope
cmovs
or
xchg
js
dec
dec
add
sub
xor
jno
sti
push
dec
pop
mov
cmp
daa
sbb
add
mov
shl
aam
push
out
cmpsb
dec
lds
pop
ret
out
es
pop
ficompl
xor
fmuls
adc
ja
jb
adc
insl
xchg
pop
roll
ljmp
in
add
sbb
movsb
pushw
into
ret
mov
cmp
lea
pushf
movsl
mov
inc
mov
dec
rolb
movsl
loope
xchg
fbstp
pushf
and
and
test
mov
repz
shrb
stc
push
mov
into
jb
pop
mov
jae
data16
out
xor
leave
mov
imul
jmp
push
mov
pminub
inc
jbe
aas
push
mov
mov
push
arpl
push
xchg
dec
fildll
dec
xchg
mov
cmp
in
loopne,pt
psrlw
inc
inc
data16
aam
outsl
mov
dec
dec
dec
andb
dec
pop
ljmp
pop
add
sub
ja
repnz
cltd
sbb
mov
cmc
push
pop
dec
sub
sar
and
insb
push
and
push
or
cmpsb
std
sbb
pop
clc
inc
mov
imul
pop
cmp
dec
shrb
flds
push
jo
ja
cmpsb
and
mov
inc
xorb
pop
mov
xor
inc
insl
dec
push
dec
aaa
testl
sbb
or
fimuls
mov
adc
mov
cmp
rcrb
push
add
inc
inc
cmc
jmp
mov
and
fcompl
push
pop
push
inc
jle
rorw
pop
or
jo
scas
inc
xchg
fistl
mov
mov
out
cld
ffreep
jns
jae
xchg
sahf
outsb
fs
decl
jg
jmp
or
pop
and
mov
sub
dec
rolb
fisubs
out
push
mov
out
xor
dec
movsl
or
iret
orb
ror
ljmp
sub
dec
jb
inc
cltd
adc
sbb
aad
pushf
jb
mov
fdivrl
popa
inc
mov
xor
cwtl
push
mov
cmp
xlat
push
sbb
ret
cmpb
imul
jmp
sbb
fcompl
jp
xchg
lea
xchg
xchg
dec
in
push
mov
pop
xrelease
xlat
nop
pop
inc
inc
dec
test
adc
sub
inc
mov
jne
hlt
jle
cli
subb
pop
push
dec
pop
mov
and
cltd
mov
into
sub
lock
cmp
fs
dec
sbb
push
xchg
jl
jp
int
xchg
dec
push
cmp
mov
test
orb
xor
aaa
and
outsb
jo
insb
insb
sbb
inc
orb
jbe
xchg
xor
out
cwtl
addb
xor
xchg
lcall
insb
orb
daa
stos
mov
insb
js
xchg
aas
fwait
lea
add
inc
xor
adc
lods
hlt
decl
incb
dec
and
mov
lods
ds
enter
add
mov
cmp
fistps
jg
scas
inc
cld
aam
daa
push
jb
adc
mov
mov
inc
ror
outsl
dec
pop
pop
mov
lcall
and
xor
lret
jbe
sbb
scas
out
adc
mov
pop
test
dec
and
movsb
push
mov
inc
enter
xor
and
cmp
ljmp
mov
sbb
and
imul
jle
cmpsl
push
scas
push
or
push
jle
push
sti
into
testb
add
cmc
ficomps
push
inc
lcall
mov
inc
out
hlt
add
loopne
arpl
pop
xchg
mov
pushl
movsl
mov
mov
pop
mov
mov
clc
push
imul
jl
cmp
test
adc
es
and
inc
inc
cmpb
or
popa
jb
xor
scas
shlb
rcr
bound
out
dec
xor
fildll
dec
enter
mov
psllw
call
add
pushl
das
sbb
xor
ds
arpl
inc
jbe
outsb
addr16
mov
inc
mov
xor
dec
or
sbbb
cmp
je
and
dec
into
push
mov
adc
xlat
pop
jno
mov
outsb
inc
inc
imul
jbe
stos
lea
xor
mov
fs
mov
cvtps2pi
in
pop
adc
push
les
test
dec
nop
icebp
shlb
push
push
je
add
mov
out
cmp
push
or
mov
jp
movsb
nop
test
outsb
cmp
out
mov
in
and
clc
lods
lret
inc
dec
jg
ret
inc
add
movzbl
or
stc
jmp
cld
adc
push
scas
xchg
lret
ret
dec
add
ljmp
aam
pusha
mov
jg
cmp
pop
pop
popa
insb
cld
dec
sbb
addb
aaa
and
jbe
mov
popa
jl
int
into
jmp
fstpt
xor
cmpsl
dec
stos
test
fildll
icebp
and
xchg
ficoml
in
mov
in
xchg
cmp
sbb
and
int
adcb
repnz
insb
push
out
jno
loop
adcb
mov
jb
jb
add
xchg
inc
nop
sbb
jmp
push
sbb
jb
je
dec
push
repnz
jne
adc
add
cmp
or
jbe
loopne
cmpb
ja
sahf
dec
mov
pop
push
ja
movsl
xor
dec
push
pushf
mov
repnz
jg
in
dec
xor
sub
ss
cmp
call
inc
xchg
push
or
push
insb
aaa
aaa
mov
inc
nop
pop
push
pushl
aas
sahf
call
pop
xor
sub
ror
ret
into
ljmp
push
dec
add
cmp
xchg
pop
cmc
mov
mov
sbb
jne
xor
cmp
sahf
xchg
test
xchg
cwtl
or
call
inc
dec
mov
inc
icebp
lods
int3
xor
decl
mov
jle
ret
jbe
mulb
push
sti
push
dec
in
mov
pop
add
push
addr16
cmp
aam
xchg
je
push
xchg
jg
or
sbb
in
ljmp
int
sub
jo
mov
sbb
shll
jl
jmp
incb
ret
inc
push
cmpsl
shll
jmp
icebp
mov
dec
loope
nop
or
and
jmp
pop
daa
mov
mov
sbb
popf
int3
das
rclb
sub
fisttpll
loope
pop
inc
aaa
ja
add
in
ds
jo
ja
lock
dec
pop
add
sahf
sub
ss
lcall
movsl
int
adc
jbe
fmuls
cmp
decl
push
mov
arpl
xor
loope
psrad
lcall
jecxz
mov
push
out
mov
aas
out
in
inc
sub
shrl
inc
pop
lret
sarl
cmpsl
ljmp
std
cmp
test
sbb
jecxz
and
jp
jno
inc
xor
aam
mov
cld
in
test
sub
push
xor
jae
mov
pop
lahf
or
pushl
gs
xchg
stos
sbb
stos
mov
cmp
imul
es
push
jno
cli
sbb
mov
inc
inc
push
push
das
addb
fwait
or
ljmp
or
int3
add
out
ljmp
cs
mov
movsb
pop
mov
mov
sub
insb
and
pop
add
or
outsb
iret
imull
inc
xor
xor
inc
pop
cli
jle
incl
fmull
arpl
inc
popf
cmpl
ret
aaa
mov
cmpl
rolb
inc
imul
scas
push
inc
dec
cmp
jg
pushl
ret
push
ds
or
cmpsl
mov
ljmp
fsub
jae
test
mov
fisttpl
sti
or
mov
arpl
gs
pop
inc
rclb
and
lcall
cmp
mov
sbb
xor
subb
jl
jo
jbe
pop
ljmp
inc
dec
inc
loopne
incb
inc
inc
xor
inc
pop
xchg
lock
jg
lret
scas
inc
add
shl
adc
ss
out
es
and
mov
xor
repz
add
dec
clc
jbe
imul
cmp
outsl
add
outsb
jge
sub
addb
outsb
imul
adcl
dec
xchg
xchg
ja
or
xlat
test
je
jecxz
jg
push
pushf
in
fdivs
les
leave
push
or
add
push
je
mov
movsb
mov
xor
push
jg
sti
pop
fdivrs
dec
pop
pop
sbb
add
cmp
mov
mov
pushl
inc
and
jb
hlt
mov
jecxz
icebp
test
pop
sbb
rorb
xor
orb
push
sub
mov
aas
pusha
jns
dec
fsubp
xorl
sub
jbe
test
jp
mov
push
into
adc
jl
cmc
mov
out
aaa
push
inc
je
adc
mov
insl
ss
adc
or
jb
jne
mov
adc
outsl
mov
out
movsb
inc
pushl
adc
cli
incl
fwait
mov
cmp
into
fsts
adc
ja
addr16
inc
add
or
adc
imul
ljmp
adc
subl
insb
stos
mov
inc
pusha
pop
addr16
sarl
nop
cs
cmp
sub
mov
push
aas
es
add
fbstp
decl
cmp
out
fimuls
add
pusha
sub
enter
arpl
orl
aad
cmpsl
adc
pop
mov
inc
fmul
or
mov
lcall
filds
and
mov
and
stc
mov
stos
push
outsb
in
fidivl
mov
fstps
int3
push
std
ljmp
popf
jno
adc
dec
push
gs
ljmp
dec
movl
fs
add
shr
push
sub
pop
clc
push
push
xor
out
jbe
inc
aam
fstp
outsb
lret
lcall
adc
lahf
cmc
addb
jmp
or
pop
nop
ja
outsl
pop
shlb
or
jp
pop
loopne
jb
inc
cwtl
inc
mov
pop
adc
fisttpl
mov
cmp
lret
and
mov
jbe
mov
ds
cmp
push
stos
push
sub
sbb
push
fs
cli
add
mov
jo
fdivrp
ljmp
add
lock
or
xor
nop
lods
es
xchg
clc
call
pop
idiv
setb
imul
in
addb
push
lock
and
dec
rolb
lock
loopne
pop
and
insb
inc
arpl
dec
push
push
ljmp
fwait
or
mov
push
and
cltd
outsb
lret
ljmp
push
add
scas
insl
inc
mov
aaa
pop
mov
mov
std
loope
sub
inc
xor
subl
cmp
in
pop
shrl
sub
mov
adc
jl
cmpsb
and
mov
mov
hlt
sar
rcll
sarl
inc
iret
cmp
sub
out
push
sbb
roll
ret
push
mov
push
test
aaa
and
lea
and
add
std
call
jns
or
sahf
arpl
or
insb
mov
and
xor
movsb
test
in
addb
pop
ja
dec
pushf
outsl
pop
loopne
fmull
cmp
int3
ljmp
or
add
push
sbb
push
mov
dec
mov
mov
aas
ret
xor
or
leave
cmpsl
cli
fwait
mov
and
dec
out
mov
int
dec
jl
lahf
pop
cmc
mov
aam
sub
ljmp
xchg
fists
jo
and
xchg
and
test
incl
mov
push
adc
push
or
xor
dec
rcl
loop
stos
std
mov
movsl
mov
pushl
icebp
add
adc
and
addb
mov
es
daa
push
aam
sub
incl
scas
ret
add
sbb
mov
cmpxchg
ljmp
sub
scas
int3
nop
add
cmp
ljmp
jbe
lds
fistpl
insb
jmp
jmp
aad
lcall
cmp
push
inc
dec
push
pop
gs
push
int
xchg
aad
out
and
sar
pop
add
out
jmp
sarl
add
shrb
rclb
aad
sub
adc
mov
adc
lds
pushf
das
out
xchg
push
mov
inc
and
jb
push
adc
add
decl
push
xorl
sbb
lds
add
rcl
rcrl
dec
dec
xor
or
es
lds
jo
mov
xor
lret
fstpt
hlt
jmp
jnp
pop
cmp
mov
mov
jl
jle
mov
add
cmpsb
std
add
add
push
adc
pop
mov
push
aas
and
imul
mov
es
adc
push
sbb
mov
xchg
add
fstpl
mov
or
cmp
add
pusha
push
xor
push
xchg
repnz
out
test
repnz
rcr
gs
sub
es
decl
mov
cwtl
fwait
imul
mov
and
xchg
jmp
adc
push
push
push
adc
pop
push
cmp
repz
adcl
aam
adc
cmp
inc
fnsave
cs
pop
hlt
inc
imul
mov
pop
push
cmp
lcall
pop
dec
jns
cmp
jge
jb
inc
push
fisubl
pop
rcll
decl
pusha
mov
loopne
push
shl
aaa
xchg
xchg
insb
fistps
jl
sahf
inc
add
pushl
leave
inc
push
fs
push
imul
mov
loope
sbb
cmp
push
push
cs
push
cli
clc
cmp
faddp
pop
popa
pop
scas
sub
xchg
bound
pop
xor
mov
jecxz
sub
call
fcoml
inc
inc
arpl
push
cs
in
dec
shlb
cmpsb
and
movsb
popa
or
lds
std
lcall
movsl
inc
fcoms
dec
and
xchg
hlt
aad
fwait
mov
and
call
mov
inc
lahf
cmp
add
push
add
out
push
ljmp
cs
xor
je
xchg
adc
mov
jmp
aad
lcall
jmp
mov
je
or
je
cmpsb
out
xchg
sub
xlat
incl
push
out
xor
mov
lock
adc
out
or
call
test
or
js
mov
xchg
iret
cld
movsb
xor
mov
hlt
in
repnz
sbb
out
lods
test
jp
xchg
test
jge
jb
mov
fisttps
mov
xor
xlat
in
sub
lock
loop
cmpsl
jo
mov
incl
push
dec
pusha
xor
and
jo
or
push
lods
fisubrl
xchg
out
add
cmp
mov
push
daa
popa
cmc
ret
and
add
jmp
cmp
mov
dec
lret
add
cwtl
sbbb
or
imul
aam
xlat
dec
sahf
aad
aad
pusha
add
xor
add
dec
ret
add
push
adc
incl
and
cmp
xor
lods
add
jnp
and
call
outsl
ret
fisttps
adc
mov
xor
movsl
sub
jg
adc
aas
rcl
inc
nop
mov
dec
mov
fwait
js
sarl
xor
fstl
inc
xchg
cmp
and
cmpsl
fildll
cmp
jno
test
mov
popa
lea
fcompl
lcall
inc
jo
mov
and
jmp
jmp
push
les
xchg
les
call
test
and
test
lahf
pop
mov
pop
mov
stos
add
add
ljmp
incb
xchg
sbb
inc
adc
fdivr
inc
mov
mov
mov
pop
fcmove
rorl
jge
movb
jb
enter
mov
push
outsb
mov
cltd
mov
ljmp
mov
int3
pop
add
dec
movsl
shlb
jmp
pop
fcoms
int3
pop
daa
fimull
or
or
adc
ds
popa
adc
add
mov
inc
adc
xchg
xchg
mov
movsl
leave
pusha
out
fisubs
roll
icebp
ljmp
cmp
dec
ret
mov
popf
es
mov
loope
add
push
pop
call
cld
pop
outsb
adc
mov
jmp
sti
cmp
rcrb
ljmp
arpl
adc
jne
xor
xor
imul
adc
sbb
push
dec
sbb
push
sub
push
ret
test
sub
sbb
push
push
sub
jne
dec
and
ret
out
push
fildll
rclb
push
sub
pop
or
mov
xor
lcall
shll
inc
orb
test
jp
lock
jmp
gs
je
lods
cs
xor
mov
or
xor
add
mov
jne
cld
mov
or
lret
sbb
cmp
pop
idivb
repnz
ljmp
xor
jl
arpl
add
out
es
pop
mov
faddl
lret
push
fcomip
mov
mov
and
addr16
sbb
dec
adc
ss
js
lcall
in
adc
push
sub
int
scas
inc
xchg
or
inc
jl
popf
ljmp
cmpsb
xor
aad
mov
mov
add
test
dec
xchg
mov
cmp
push
fidivl
jo
insb
jl
cmpsb
imul
jae
xchg
add
push
lret
push
shlb
cmp
or
adc
movb
shl
jmp
rclb
cld
or
xchg
or
shrb
add
jmp
loopne
ss
inc
or
push
int
pusha
test
jo
inc
ljmp
fwait
dec
pop
push
repz
cmp
cmpb
ljmp
call
jno
lcall
lret
add
roll
lcall
and
pop
add
repz
push
das
jo
push
es
push
push
cwtl
cmp
mov
lods
imul
pop
test
lcall
mov
nop
pop
cmp
mov
loop
and
loop
add
bound
push
inc
cmpsl
xor
mov
pushl
xchg
fstps
lret
fs
add
dec
popa
pop
sbb
mov
or
decl
fdivrs
jg
dec
xor
cmp
pusha
pop
jne
push
xor
or
ljmp
xor
jb
xchg
add
subb
xlat
testb
sub
add
incl
push
jo
in
adc
orl
aad
js
insl
or
mov
sub
std
and
ret
inc
sub
dec
imulb
mov
xor
jecxz
sub
pop
cld
lret
orb
or
mov
cmp
pop
jg
lcall
f2xm1
push
add
pop
js
sahf
jo
adcb
fwait
loopne
inc
jle
cli
lcall
jmp
in
xchg
sti
mov
clc
aam
std
mov
mov
sub
push
cmp
lret
cmp
outsl
add
pop
out
cbtw
bound
std
add
incl
jns
jo
adc
daa
push
adc
add
adc
flds
pop
movl
call
jne
xchg
repz
aam
dec
fxch
icebp
add
mov
mov
jns
mov
mov
and
xchg
popf
push
test
jbe
mov
movsb
xchg
call
insb
xchg
xchg
iret
movsb
aas
jmp
cs
lcall
add
mov
insl
or
pop
sbb
dec
mov
xor
and
or
fsubrl
clc
lcall
cvtdq2ps
jne
cwtl
xchg
sub
nop
aam
dec
in
xor
inc
xchg
clc
int
inc
dec
push
popa
add
jo
pop
call
insl
xor
int
rorl
push
push
fs
leave
ret
mov
jecxz
ljmp
mov
push
lret
mov
inc
in
lods
jb
cwtl
lock
dec
push
sbb
inc
cmp
push
jb
in
mov
xchg
pop
ljmp
inc
fmuls
and
stos
mov
ss
xor
push
clc
cmp
loope
inc
clc
mov
inc
inc
fisttpl
dec
inc
push
jmp
jmp
repnz
fsubrs
jl
sar
and
sti
pop
or
les
pop
das
and
dec
lret
or
jo
ret
rolb
sbb
xor
icebp
jle
in
pop
cmp
push
nop
jne
ret
dec
xchg
aad
push
lahf
mov
mov
popf
daa
push
sbb
ljmp
inc
jbe
fisubrl
aam
push
in
insl
xor
push
fdivrs
addr16
bound
lret
sub
aam
scas
test
xchg
popa
lret
push
and
mov
das
sahf
push
mov
movsl
decl
fcompl
repnz
push
movsl
movsb
pop
imul
mov
add
cli
jmp
cmpsb
push
arpl
or
inc
mov
dec
xchg
push
push
movsl
std
sti
lods
xchg
push
outsb
push
popf
out
popf
xor
iret
jl
shll
pop
push
clc
mov
out
mov
lods
inc
xor
movsl
pop
test
pop
ret
aaa
cmc
pushl
insb
lret
cs
push
int
push
xorb
loope
xor
sbb
lea
lret
cmp
xor
xchg
in
sbb
sbb
mov
data16
push
sbb
mov
mov
mov
aam
lcall
xor
lret
stos
mov
push
ror
movsb
fs
cmp
adc
push
enter
sbb
movb
push
mov
adc
scas
adc
clc
decl
push
cmp
iret
jb
in
inc
jnp
mov
cmp
fcoml
aad
lock
scas
cs
cmp
xor
andb
xlat
shlb
data16
push
lar
push
imul
inc
int3
inc
insl
jb
insl
aas
fwait
pop
push
not
fcmovu
cmp
or
fisttpll
lock
decl
pop
les
out
jbe
inc
xchg
daa
mov
in
push
mov
std
call
dec
add
lcall
sub
cmpsl
andb
sbb
pop
dec
cld
pop
and
inc
fidivl
ljmp
loop
push
and
test
pop
fisttpll
test
cmc
cmp
mov
sbb
inc
sahf
sar
mov
outsl
jg
outsb
cmpsl
mov
stc
je
call
js
rol
xorb
push
call
push
repnz
ss
ss
js
movsb
inc
fucomp
lods
sahf
pusha
test
sbb
out
loopne
es
sub
aaa
call
mov
loope
push
dec
adc
push
cmp
push
add
adc
jb
xchg
mov
subl
test
add
out
dec
js
es
xor
sub
mov
ret
js
jno
add
xor
push
jb
jg
test
mov
push
test
lcall
push
loope
adc
cmp
daa
call
xadd
inc
ja
push
dec
add
cmp
mov
data16
push
cmp
dec
mov
cmp
adc
test
ljmp
mov
xchg
outsb
push
lds
mov
cli
adc
movsb
xor
pop
bound
outsl
dec
jge
push
xchg
xor
loopne
shll
mov
test
decb
cmp
lret
inc
sarb
push
int3
lcall
mov
jne
fs
lea
insl
je
jmp
andl
inc
sbb
pop
stos
jle
add
std
adc
lock
jmp
jg
pop
out
xchg
lahf
xchg
dec
fadds
lods
call
and
clc
call
mov
pop
loop
outsb
pop
lahf
imulb
adc
push
mov
add
shll
imul
dec
jl
mov
add
pushl
xor
sbb
out
loopne
mov
mov
lcall
add
jge
lods
jg
adc
mov
fs
dec
mov
sbb
pop
adc
cmp
addr16
mov
add
hlt
jno
xor
cmpsb
ljmp
std
cli
or
insb
adc
andl
push
fwait
inc
ss
push
repz
inc
cli
loopne
sbb
cmpsl
scas
std
jg
jns
pop
cld
cmp
imul
and
pop
out
dec
xchg
sbb
pop
mov
ret
je
pop
inc
xor
pushf
dec
add
mov
loop
imul
sub
xor
fdivs
aas
pushf
repnz
sar
js
ds
mov
mov
sbb
add
cmpsb
test
in
loop
jp
xchg
push
add
dec
cmp
or
xchg
jp
cmpsl
pop
jo
imul
hlt
xchg
icebp
xor
je
das
in
in
clc
ret
push
mov
in
stos
inc
jns
lahf
cli
jo
pop
test
dec
jae
mov
fsubrl
inc
dec
mov
push
ficoms
pop
cmp
cmpsb
add
sar
add
decl
adc
cmc
xor
aam
adc
jne
pop
movl
add
shlb
inc
and
xchg
sbb
neg
call
aas
jmp
hlt
pusha
xor
xchg
lods
cmp
sub
pop
mov
fcoms
cli
jmp
cltd
push
test
iret
mov
xor
pop
inc
push
movsb
lret
sar
call
addb
push
addl
dec
aaa
dec
push
add
xor
icebp
xchg
lcall
add
subb
aaa
push
dec
lock
fdivrl
mov
cmp
dec
fdiv
add
ljmp
fdiv
std
jle
jae
mov
fcoms
ret
adc
pop
dec
xlat
inc
sub
add
dec
mov
imul
mov
fs
push
enter
dec
dec
loop
cmp
andb
pushl
pop
std
or
mov
popf
imul
das
add
fwait
mov
das
rorb
dec
ret
push
add
lods
movsb
pushf
xchg
call
add
pop
add
sub
cld
inc
push
int
sbb
cmpsl
sbb
or
push
cld
push
fsub
pop
mov
insl
xor
xor
dec
pop
push
outsl
das
cmpsb
lret
inc
xchg
inc
dec
je
lcall
jnp
push
fldt
cmpsl
jge
and
fcomp
sbb
addb
incl
jno
mov
cmp
in
add
mov
pop
scas
lea
jmp
xchg
sarl
mov
add
push
add
fld
lock
xor
dec
push
mov
fadd
or
jb
mov
xchg
jg
lock
hlt
rolb
push
cmp
call
push
add
shlb
pushf
jge
push
insb
rorb
inc
mov
int
push
rolb
lods
int
and
loop
fcos
mov
popa
push
adc
pop
and
mov
pop
pop
push
sbb
sbb
shll
jmp
mov
fisubrs
adc
in
xor
dec
or
jmp
stos
dec
xor
inc
jne
or
cmp
notb
lcall
lock
push
xor
pop
popf
fsts
push
or
popf
jmp
test
popl
mov
stos
adc
imul
jns
pop
and
jo
xor
fwait
cmc
fisubl
ret
dec
fidivl
arpl
shr
push
or
sti
lcall
or
inc
cmc
jle
or
push
xor
jl
sub
mov
cmp
ror
ja
dec
sub
dec
fcos
pushl
push
mov
xchg
adc
dec
ficompl
js
sub
add
scas
sbb
ss
imul
incl
dec
leave
mov
push
inc
add
loope
leave
sbbl
inc
push
sub
pop
push
notb
ret
stos
sbb
outsb
rcrb
xor
mov
jbe
fbld
xlat
cwtl
mov
mov
adc
lcall
rcrb
fdivl
pop
adc
xchg
mov
add
test
cltd
or
stos
mov
mov
pop
fs
cld
mov
inc
mov
inc
iret
out
call
sub
xor
add
inc
pop
lock
insl
fwait
outsb
inc
jns
testb
cli
das
aas
push
hlt
daa
hlt
xchg
popf
test
mov
inc
push
js
push
dec
stos
aas
sbbb
adc
lret
movsb
add
iret
aam
pushl
hlt
mov
subl
cli
xor
or
jmp
jns
scas
xchg
lock
ret
and
push
arpl
mulb
stc
jae
mov
mov
mov
mov
scas
clc
inc
adc
mov
jbe
shrb
lock
push
cld
add
adc
inc
cmp
sahf
pop
enter
ds
rorl
fdivp
bound
in
pop
icebp
dec
inc
in
les
mov
test
mov
filds
or
or
sbb
or
stos
fbld
movsb
dec
push
adc
test
adc
sar
popa
jae
or
nop
int3
lret
lods
push
mov
dec
cmp
and
rolb
fisubrs
imul
push
inc
mov
cmc
pop
dec
into
sbb
lret
in
push
lock
rorl
mov
dec
shrb
orb
add
and
pop
loop
or
mov
fwait
jne
loop
scas
decl
pop
pop
mov
leave
repnz
std
inc
int
iret
mov
cmpb
cwtl
fimuls
ja
push
pop
pop
add
xor
lock
jmp
in
cmp
xor
adc
xchg
and
push
arpl
out
clc
call
and
mov
xchg
add
dec
js
adc
add
adc
and
jle
outsb
push
adc
ret
dec
push
push
or
xchg
je
cmp
xor
decl
mov
dec
jb
mov
fwait
pop
dec
pushf
adc
out
stos
nop
fbld
pushf
in
push
shrb
or
or
pop
fistl
icebp
andb
cs
sar
jmp
and
push
insb
scas
sbbl
jne,pt
fnstsw
incl
push
orb
push
loop
lds
push
inc
outsl
sbb
rol
call
add
cvtpi2ps
cld
pop
dec
mov
and
sub
cmp
jmp
sub
push
cmc
add
les
mov
add
in
lods
or
and
imul
adc
xor
mov
lods
scas
mov
cmp
mov
sbb
jle
adc
ljmp
xor
cli
add
adc
incl
add
dec
or
jo
dec
inc
push
jg
cmc
shll
add
and
xchg
pop
jmp
aad
fstl
bsr
scas
clc
call
into
adc
or
sarb
mov
loope
pop
cld
aaa
cld
add
push
cmp
sbb
dec
xchg
dec
push
inc
fdivrs
ret
pop
gs
call
pusha
adc
mov
sbb
jno
dec
jmp
subb
movsb
cmp
cli
out
add
adc
cmp
mov
cmc
mov
adc
cld
fisubs
pushl
adc
mov
fwait
xchg
mov
lock
xchg
sbb
mov
pushl
rolb
data16
insl
add
in
in
gs
cld
fiaddl
adc
lock
bound
push
pop
xor
pop
ret
cmp
cmp
mov
jl
jnp
xorl
clc
fwait
mov
addb
ljmp
testb
xchg
outsb
call
ffree
loopne
fisttpll
scas
adc
add
xchg
pop
popa
cmp
add
or
enter
aaa
in
stc
leave
add
jecxz
ljmp
les
push
imul
cmpsl
dec
cmpsb
aaa
inc
push
mov
sarb
and
aaa
inc
pop
inc
stc
sbb
cld
decl
xor
sahf
repnz
leave
rcrl
stos
cwtl
pop
std
add
call
std
inc
repnz
jb
inc
inc
adc
sub
iret
sub
xor
vminpd
call
stos
in
pop
mov
xchg
insl
inc
jb
sub
mov
insb
mov
ret
jnp
adc
and
xor
incl
add
ret
push
mov
das
adc
aaa
punpcklbw
mov
scas
push
sbbl
loope
add
cld
scas
push
or
iret
sub
shrl
add
sbb
andb
mov
aad
andb
mov
call
ja
fisubl
push
dec
test
pop
popf
insl
lcall
push
or
or
call
pop
das
dec
pop
xor
xchg
insb
ljmp
xor
or
dec
pop
int
je
mov
std
popf
adcb
cmp
or
sub
sahf
inc
inc
add
xor
jmp
int
or
push
rcl
adc
movntps
add
leave
cwtl
repnz
call
loopne
orb
stc
test
pop
sbb
dec
xchg
add
mov
lcall
dec
cmpb
aaa
fmuls
or
adc
or
cmp
imul
scas
js
test
js
outsb
ljmp
and
xchg
or
xchg
jg
lcall
sbb
das
add
or
shll
xor
xor
inc
mov
fwait
pop
hlt
shlb
loopne
sbb
or
sbb
dec
xor
add
push
dec
dec
cmp
mov
mov
popf
imul
dec
inc
cmp
loopne
dec
add
push
adc
dec
cmc
daa
xor
insb
movsl
xchg
mov
sbb
and
ffree
fisubs
jae
lret
jge
adc
xor
int
fbstp
rolb
je
xchg
pop
pop
push
dec
icebp
ret
inc
pop
loopne
mov
mov
pop
bound
lret
das
jo
in
add
in
loope
cmp
and
pushl
movsl
rcr
out
mov
mov
insb
inc
or
shlb
ret
inc
push
fsubs
add
sti
testl
insb
imul
or
cld
jmp
sbb
adc
mov
ds
dec
lock
leave
dec
xor
pop
imul
mov
cld
loop
inc
dec
add
incl
pop
or
movsb
jb
imul
ljmp
add
xor
test
ss
pop
imulb
inc
fcoml
shrb
push
push
mov
cmpb
xor
aas
jecxz
jne
in
inc
mov
leave
arpl
or
clc
push
jo
sub
xor
or
ret
xor
decl
jecxz
xor
adc
sbb
sub
repz
fistps
push
sub
adc
hlt
and
call
dec
test
loope
movsb
xor
dec
xchg
pusha
push
jo
clc
jg
jle
movsb
dec
aaa
push
iret
cs
insl
imul
xlat
xchg
pop
xchg
inc
frstor
faddp
push
shlb
jae
push
push
dec
inc
dec
pushl
push
sahf
and
jmp
scas
imul
sub
call
repnz
or
sub
xor
xor
adc
sub
popl
outsl
dec
ss
cmp
dec
repz
or
mov
data16
mov
xor
xchg
inc
leave
or
incl
or
lods
in
out
call
hlt
lea
fwait
dec
adc
pop
pop
in
aas
add
xor
addr16
push
ret
push
orl
cmp
push
sbb
or
jg
aad
repz
mov
push
data16
dec
loopne
and
movsb
cmp
bound
filds
inc
ret
gs
pop
push
mov
mov
dec
add
pushl
xchg
mov
stos
xchg
test
inc
push
js
fcompl
cmp
push
jae
mov
cmp
jmp
dec
mov
mov
adc
or
mov
mov
jb
xchg
xor
cmp
shr
mov
xchg
loope
std
leave
and
ja
ja
ljmp
lahf
xchg
in
xchg
fs
add
minps
pop
xchg
pop
faddp
out
and
adcl
xchg
lock
std
mov
inc
push
inc
or
je
out
sub
and
dec
outsb
aad
jns
push
inc
jne
xchg
mov
js
imul
jmp
jne
mov
jl
pusha
cld
in
hlt
fcoms
jecxz
and
or
fidivs
push
sub
cmpsb
xlat
jo
push
shll
aaa
dec
add
xor
cmp
insb
push
mov
stos
push
sbb
lcall
mov
mov
xor
subl
sub
scas
push
jo
push
xchg
jge
xor
xor
rcl
pop
rcll
test
mov
testb
dec
roll
pop
mov
decl
or
aas
lcall
pop
lods
fdivs
add
xchg
clc
clc
mov
movsl
adc
cmp
mov
fdivp
inc
dec
lahf
mov
cmp
ljmp
add
dec
add
push
mov
inc
fwait
outsb
jl
mov
ljmp
sub
and
and
sarb
call
stos
sbb
mov
jp
dec
iret
std
pop
imul
aaa
out
xor
lods
jg
stos
xchg
fwait
into
hlt
imul
xchg
push
ja
outsl
mov
dec
jmp
xor
inc
xor
dec
mov
cmp
push
inc
call
aam
cmp
clc
xchg
ljmp
mov
inc
mov
and
sti
push
sub
stos
adc
push
jb
js
xlat
ret
dec
push
jle
mov
and
jmp
mov
dec
rcr
pop
fstl
ljmp
hlt
es
aas
int
insl
xchg
fnstenv
pop
aad
dec
cmp
fmuls
mov
cli
ds
in
mov
ret
mov
mov
insl
pop
add
cmp
adc
adc
std
jmp
loopne
dec
mov
stc
push
jo
push
dec
outsl
add
fsubrs
mov
movsb
jmp
int
popf
sar
mov
cltd
adc
mov
xorl
aam
cmpsb
int3
push
dec
arpl
cld
fmul
push
addr16
je
push
outsb
jb
cmp
push
push
dec
inc
idiv
jg
icebp
adc
lods
rolb
dec
lahf
or
je
loope
sbb
clc
and
ret
push
ja
lret
imul
jl
sbb
imul
ljmp
add
inc
test
ss
es
pop
xchg
lahf
fs
cltd
jae
inc
pop
xor
xchg
popf
pop
adc
icebp
xchg
mov
jns
dec
stc
mov
les
ljmp
push
adc
push
rol
cmpsb
push
and
jo
or
movsb
jns
jnp
in
idiv
mov
orb
out
and
aad
lea
pop
xchg
jo
add
add
jmp
or
push
pop
scas
dec
hlt
cmp
sub
icebp
sahf
or
mov
push
push
xor
jnp
cmc
les
popf
jae
pop
mov
or
pop
test
imul
insb
mov
popa
std
add
inc
sbb
dec
repnz
add
push
xchg
dec
push
mov
add
cmp
inc
sbb
dec
add
dec
mov
inc
adc
dec
cld
xor
cmpsb
test
insb
ds
jmp
dec
jmp
push
mov
jno
xchg
mov
call
out
dec
cld
clc
pop
call
inc
jb
cmp
mov
cmp
mov
lret
cmpl
in
mov
or
fists
cmpl
and
out
xchg
mov
idiv
shl
aas
and
jbe
push
jb
aaa
pop
clc
inc
mov
push
dec
lcall
xorb
and
mov
lahf
pop
pushf
cmp
dec
test
jp
or
in
dec
inc
push
js
outsb
sahf
sti
jmp
lock
pushl
push
test
sbb
shrb
cltd
xlat
call
pop
lahf
nop
dec
scas
js
sbb
dec
inc
inc
pop
ss
xor
xchg
cmp
in
dec
out
icebp
push
push
mov
das
js
cld
orb
loopne
xor
dec
push
outsb
jo
pusha
scas
arpl
shrl
outsl
dec
ss
or
push
sahf
decl
push
dec
enter
cmpsb
push
mov
loop
sbb
mov
and
mov
cmp
inc
mov
mov
bound
out
pop
add
push
xor
or
lock
mov
lock
jmp
dec
sbb
dec
mov
scas
sub
cltd
stos
jle
scas
movsl
inc
mov
sbb
adc
inc
push
mov
sub
lods
shll
xchg
test
stos
xchg
ret
std
mov
pushf
ss
pop
cmc
fbstp
ds
arpl
fcoms
sbb
nop
add
or
push
mov
xor
test
inc
inc
into
xchg
inc
jo
arpl
dec
fwait
mov
nop
pop
jecxz
jg
adc
sub
das
xchg
cld
test
sub
push
lahf
pop
dec
sbb
inc
push
adc
inc
loopne
movsb
repnz
js
inc
push
insb
inc
push
xor
lcall
repz
out
xchg
xor
imul
push
loop
sbb
icebp
mov
pop
cld
loopne
in
mov
adc
sbb
roll
xor
aas
and
add
push
adc
lcall
xchg
push
adc
jge
dec
add
inc
sahf
xchg
sete
mov
xor
push
jns
pop
lock
insb
adc
jne
or
decl
aad
lock
insl
jne
imul
outsb
out
clc
mov
neg
xchg
push
push
adcb
mov
xchg
scas
cmp
push
push
es
ss
push
fcomps
lea
lret
add
jns
dec
inc
xchg
outsl
xchg
ljmp
jge
push
shl
mov
stc
popa
dec
dec
inc
pusha
jno
and
pop
jmp
mov
popa
xor
adc
push
pop
imul
pop
push
dec
pop
gs
xchg
ja
lock
js
push
lods
push
fs
push
mov
sbb
aas
mov
lods
pop
scas
jns
push
lcall
addb
hlt
and
pop
jae
icebp
mov
inc
sbb
jg
ret
xchg
pop
or
pop
xor
jl
adc
push
add
cmp
or
lods
stos
incb
fbstp
loopne
xchg
mov
xor
add
aad
clc
lcall
incl
mov
inc
fcmovnbe
sub
mov
mov
faddl
mov
incl
push
lcall
dec
pop
in
sarb
dec
cmpl
gs
add
fsubrl
add
aaa
aaa
ret
ret
push
bound
mov
sub
jg
xchg
sahf
sbb
sbb
fsub
gs
adc
jbe
icebp
out
cmp
movsl
cli
aam
imul
push
cli
dec
dec
push
jp
fcmovnbe
bound
nop
aaa
sbb
xor
decl
push
shr
sub
jp
cwtl
cmp
xchg
dec
sub
jp
test
xchg
lcall
push
cs
xchg
inc
push
dec
and
data16
jg
push
jno
xor
out
jecxz
push
dec
loope
jnp
fdivr
xchg
mov
clc
repz
push
fcoms
imul
mov
push
rorb
pop
mov
lcall
push
xchg
push
adc
adc
es
movl
pop
fdivrl
add
ds
into
mov
in
mulb
jns
decl
test
push
xchg
sti
ds
js
inc
adc
pushf
sub
sub
stc
sbb
jae
jmp
jo
jo
mov
push
cmp
sbb
sbb
push
inc
imul
stos
orl
movb
jo
ljmp
call
test
jmp
and
insl
mov
scas
es
aas
adc
pop
shll
push
add
add
and
ljmp
pop
aaa
call
int
xor
sahf
das
ret
xorl
push
jne
inc
aaa
pop
inc
cld
aam
adc
dec
dec
ror
sub
mov
adc
arpl
pushl
loope
pop
sarb
scas
fiadds
jmp
pop
xchg
xchg
pop
mov
mov
push
mov
and
adc
repz
push
add
sub
jae
inc
xor
ret
lcall
and
xchg
mov
pushl
sti
dec
and
adc
jmp
pop
add
cmp
add
dec
jl
incl
xchg
push
sub
pusha
into
inc
stc
xor
lahf
mov
cmpsb
pop
dec
cli
push
xchg
push
decl
mov
adc
mov
test
ja
sub
sub
cmp
enter
loopne
cmp
clc
stc
cs
or
adc
jg
adc
loope
inc
adc
lea
shlb
mov
dec
scas
add
inc
int
call
add
and
gs
and
push
mov
sahf
scas
sub
cltd
add
lock
sbb
dec
inc
mov
pop
cmp
stos
in
das
inc
and
push
int3
mov
inc
outsb
and
or
rol
stc
mov
ret
into
add
push
inc
mov
add
rcrl
or
cltd
xor
xchg
ljmp
push
dec
add
jno
sbb
mov
pop
cmp
in
mov
mov
jge
out
inc
cli
push
adc
js
incl
out
nop
subl
js
push
inc
fiadds
or
rcr
cmp
lcall
aas
adc
clc
xchg
add
adc
les
xor
xor
in
mov
pushl
mul
rorl
sbb
ret
inc
ret
fisubrl
stos
incl
fs
ds
pop
xchg
loopne
les
filds
int
add
cmp
aad
pop
ss
or
loopne
xchg
adc
sub
mov
js
mov
jmp
xchg
inc
sub
leave
iret
or
adc
dec
test
test
mov
xchg
sbb
aaa
xchg
aad
pusha
jp
jae
repnz
add
mov
lcall
or
add
ss
gs
jg
push
pop
addl
das
add
lret
insb
mov
aam
inc
adc
notb
lret
cld
outsl
cli
jg
test
scas
and
pop
loope
clc
dec
ret
jnp
ret
cmpsb
imul
pop
adc
xchg
ret
cmp
fs
xor
je
add
adc
add
mov
gs
lock
xor
loope
rorb
dec
mov
dec
sub
lcall
pop
ljmp
popl
or
loopne
pop
test
push
cmp
adc
incb
rclb
gs
jne
aam
jno
dec
enter
push
add
ret
lcall
lret
cmp
adc
scas
fwait
xchg
inc
pmaxub
mov
inc
mov
pop
incl
pop
sbb
push
test
mov
shl
or
xorb
sub
xor
or
subb
call
sub
jb
pop
add
and
adc
adc
jg
mov
in
je
inc
jno
incl
jl
adc
push
dec
pop
icebp
lcall
or
add
out
subl
mov
fbstp
rcr
xorl
cmpsl
lock
mov
add
int3
push
pop
lcall
and
xlat
ss
and
cmpsb
addr16
push
stos
inc
mov
sbb
call
or
clc
xchg
jmp
mov
pop
in
fadd
into
add
aam
and
pop
sbb
cld
call
mov
mov
mov
push
add
push
cmpsb
xchg
lcall
cmp
into
out
inc
pop
movsb
push
push
mov
jbe
pusha
aam
imul
pop
fs
fildll
mov
scas
adc
or
push
mov
data16
xchg
and
add
jns
ret
fucomip
mov
cmp
popf
decl
lcall
jg
call
out
adc
popf
stos
movsb
test
sbb
notl
ret
call
pop
in
fisubrl
or
mov
cmpsb
sti
and
sti
test
inc
push
pop
inc
or
incl
adc
pop
mov
pop
adcl
lds
jg
inc
mov
xor
mov
clc
dec
fdivrs
add
test
roll
xor
fdivr
cmp
lret
xor
jmp
clc
out
mov
adc
loopne
in
ss
xor
or
in
shrl
pushf
popa
sbb
les
adc
mov
loopne
xchg
pushl
pushf
les
jg
dec
cld
mov
ja
mov
push
lret
jl
xor
jno
jb
es
or
mov
popa
add
mov
lods
mov
push
jbe
pop
push
adc
add
push
sub
pop
add
add
or
lcall
lock
test
ret
push
lds
loopne
mov
adc
xchg
leave
imul
pop
dec
cld
inc
push
mov
push
mov
in
idivl
cmp
or
lcall
add
bound
push
xadd
cltd
dec
mov
pop
ffreep
inc
loope
bound
lods
in
test
adcb
push
lcall
pop
stc
inc
cmp
xchg
cmp
sbbb
dec
pop
add
push
xchg
ljmp
mov
in
mov
sub
int
pop
mov
fsubrl
cmp
pop
dec
mov
shrb
inc
pop
lock
aas
mov
mov
mov
scas
mov
ljmp
out
mov
clc
js
push
jg
mov
inc
pop
or
lea
push
add
lcall
adc
fyl2xp1
repz
xchg
jmp
pop
mov
scas
lds
xor
lcall
jmp
inc
test
shrb
dec
addr16
jmp
mov
inc
sbb
repz
ret
aaa
popf
sbb
lods
mov
int
mov
push
and
push
stos
in
imul
sarb
xchg
je
push
dec
inc
jmp
cwtl
jle
ja
dec
push
in
lahf
mov
mov
icebp
and
jno
and
inc
and
cmp
movl
mov
inc
push
mov
sub
insb
push
inc
jb
mov
sbb
es
das
xor
outsb
inc
push
rorl
cld
jmp
int3
lods
adc
inc
pop
inc
jns
popa
or
inc
pop
add
pop
mov
mov
das
mov
jge
cld
mov
addr16
push
jne
aas
xchg
or
out
push
iret
or
scas
pop
cmp
insb
xlat
sub
insl
mov
cli
gs
lea
mov
mov
ja
add
lahf
mov
movsb
test
xchg
sub
sub
mov
add
incl
mov
inc
sub
inc
daa
xchg
xchg
and
inc
adc
pop
mov
mov
sbb
std
hlt
fcoml
pop
pop
inc
in
icebp
dec
add
lret
dec
xor
stos
fwait
inc
int
and
adc
jmp
cmp
pop
mov
test
cmp
pop
pop
cmc
repz
adc
cli
stos
incl
repnz
push
pusha
pop
pop
pop
adcl
and
daa
or
fs
jg
hlt
es
sbb
jne
jmp
pushl
sarl
gs
xchg
cmp
xor
mov
ja
dec
cli
cmp
iret
inc
pop
cmp
inc
rcl
and
xchg
push
push
mov
jecxz
lcall
call
rcrl
sub
movsb
out
addb
push
jo
sub
dec
inc
push
fadd
dec
outsb
cmp
test
jmp
insl
pop
mov
incl
jle
in
into
je
jbe
lahf
push
sbb
out
aas
clc
push
test
inc
fidivrs
push
mov
dec
jne
shll
lcall
outsl
add
in
icebp
mov
mov
dec
adc
push
shl
mov
leave
xor
shll
icebp
gs
leave
mov
imul
lcall
adc
mov
push
lea
dec
cmp
push
push
sbb
insb
push
pusha
jne
jmp
mov
dec
push
sti
adc
dec
sbb
nop
push
out
dec
push
and
mov
cmpsb
repz
dec
cmp
xor
add
ljmp
xor
mov
fildll
mov
mov
cmp
mov
jmp
and
andl
jns
or
pop
inc
sbb
aas
sbb
lcall
das
push
push
dec
mov
movsb
xchg
xor
sbb
pop
xchg
fucomp
out
mov
and
ljmp
push
popa
cwtl
xchg
repnz
mov
sahf
xor
xor
sbb
or
add
incl
mov
fimuls
sbb
mov
push
dec
push
add
mov
inc
aaa
repnz
enter
cld
fsubs
lret
mov
cmpsb
int
mov
cmp
lds
incl
andl
ret
pop
mov
popf
js
sub
sbb
notl
decl
pop
xchg
lret
and
nop
adc
inc
sub
mov
dec
decl
leave
int3
daa
arpl
xor
mov
into
jecxz
cmp
or
loopne
decl
adc
pop
mov
cli
int3
hlt
frstor
push
and
incl
js
push
insb
sub
cwtl
ret
js
ja
sub
xor
push
inc
enter
sbb
decl
sbb
pop
jmp
fwait
or
daa
scas
cmp
cmp
lods
add
aas
push
add
aam
or
cmp
push
bound
sub
or
fimuls
mov
pop
xchg
and
push
add
jge
mov
jl
mov
mov
out
insb
xchg
mov
or
int
notl
loopne
mov
rorl
xchg
mov
push
call
push
jle
arpl
movsb
fsubrl
add
push
sub
js
mov
es
ljmp
cli
mov
xchg
inc
dec
clc
inc
xlat
clc
inc
pusha
scas
adcl
inc
push
cltd
arpl
enter
and
decl
add
mov
adc
test
jl
mov
mov
adc
and
ljmp
cmp
jnp
mov
jo
push
xor
sbbl
sbb
cltd
daa
dec
fscale
inc
incl
adc
and
movsb
or
decb
jge
and
xorl
mov
inc
and
cmc
pop
pop
sti
int3
int3
cmp
sti
std
mov
or
dec
or
sbb
sbb
cmp
fildll
imul
add
cli
add
pop
dec
jmp
adc
shrl
push
cmovp
adcl
or
mov
lds
loopne
dec
mov
jge
jp
jp
mov
inc
lock
push
les
clc
out
and
testl
fsubrs
and
mov
incl
das
lret
xchg
mov
cmp
sbb
add
repz
inc
stos
jne
int
pop
inc
jnp
cmpb
sub
push
mov
fwait
mov
sarb
dec
inc
dec
mov
mov
mov
push
shlb
adc
pushf
je
daa
mov
adc
xchg
enter
pushl
jne
iret
add
pop
out
cs
add
push
jo
adc
xchg
push
roll
cmp
cmc
add
cmp
mov
cmpb
add
pop
aas
ret
and
lock
push
cld
inc
or
dec
or
into
ljmp
out
pop
pop
andb
out
and
xchg
sbb
popa
jo
sbb
push
es
out
inc
or
lds
sbb
adc
and
call
ljmp
cmp
lret
loopne
pusha
dec
cmp
out
cwtl
cmp
mov
ja
pushl
or
or
insl
arpl
dec
movsl
mov
xor
test
call
cmpb
pop
mov
jnp
in
lods
mov
jb
adc
cmp
add
gs
xchg
cld
call
push
pop
mov
out
or
out
and
dec
or
fcomip
pop
sub
jecxz
out
mov
lret
jmp
ss
insb
cmp
fwait
add
bound
add
mov
mov
pusha
jmp
in
roll
ljmp
stos
add
mov
out
add
pop
daa
cmp
loop
push
dec
jne
xor
aam
push
mov
rcr
test
and
add
or
cmp
add
or
es
xchg
test
add
movsb
and
je
jae
ud0
ljmp
rcll
imul
unpckhps
mov
je
adc
lds
cs
jmp
jns
sub
in
iret
lcall
pop
test
lret
xchg
iret
add
push
cmpsl
outsb
sub
in
xchg
jns
add
ret
roll
jns
notb
or
ss
jmp
add
cmp
jns
enter
jle
sti
cmp
hlt
mov
adc
push
lret
into
jo
cmp
insl
push
xchg
sub
inc
movsl
cmp
push
mov
in
ss
mov
and
mov
outsl
filds
fwait
mov
ljmp
inc
and
or
inc
add
and
loop
orl
inc
xchg
out
mov
incl
inc
test
fdivr
bound
push
sub
push
pushf
mov
ljmp
inc
jbe
stos
inc
cltd
subl
cs
out
push
fwait
pop
shll
fwait
sbb
call
mov
or
mov
push
dec
add
and
mov
xor
xor
xchg
or
pop
cmpl
fadds
jp
dec
in
aad
iret
stc
test
adc
outsb
clc
inc
mov
jne
pop
loopne
scas
xchg
insb
cmp
xor
pop
hlt
and
jg
leave
cmp
mov
hlt
mov
loop
jo
inc
fsubs
aas
daa
ret
aad
aaa
jl
inc
and
jge
sub
in
insb
ja
xchg
lcall
sbb
cld
pop
repz
movsl
test
icebp
mov
mov
jl
daa
mov
mov
adc
lcall
stc
or
add
mov
mov
movsl
imul
xor
cld
ljmp
or
ret
sbbb
rcr
inc
cmp
out
dec
shrb
cmp
cmp
pop
std
icebp
insb
outsl
fiaddl
or
int3
mov
mov
in
sbb
cmpsl
and
dec
arpl
fmull
inc
mov
lcall
outsb
ret
add
or
xor
rol
jge
lret
in
outsl
roll
adc
xor
imul
push
lret
shlb
movsb
mov
inc
mov
jbe
jb
and
in
mov
mov
inc
add
xor
and
dec
cmp
and
inc
jo
ret
ds
mov
jl
lahf
jne
sbb
xchg
dec
lahf
mov
and
mov
pushl
fisubrl
loop
pop
cmp
xchg
int
add
loop
loopne
xor
xor
call
push
add
nop
add
lcall
xor
outsb
and
inc
mov
lcall
mov
mov
stc
pusha
push
call
xchg
sarl
insb
ss
cld
mov
cli
jae
add
push
cltd
pusha
pop
push
dec
sbb
out
add
jge
ja
cmp
jl
ja
adc
push
imul
and
jg
add
movsb
bnd
jmp
out
xchg
add
xchg
dec
cmp
fcomip
andb
pop
movsb
outsl
stos
xchg
clc
jbe
push
sub
mov
mov
daa
lcall
scas
inc
or
push
mov
add
sahf
adc
rolb
sbb
pop
loopne
cmpsl
dec
and
mov
xchg
jle
pop
test
sub
mov
jecxz
lcall
rep
aas
jo
push
test
cld
sbb
out
push
cmp
add
das
pusha
pop
sub
dec
jae
cmp
pop
jbe
ret
mov
mov
mov
clc
mov
cmc
daa
cmp
aaa
aas
and
push
adc
inc
inc
mov
jg
push
add
and
fcmovu
sub
sub
loope
sbb
popa
pushf
mov
lods
cmp
aas
popa
sbb
xor
mov
add
sbbl
js
mov
adc
andb
xchg
mov
dec
fidivrl
mov
outsb
call
int3
mov
inc
cmp
call
adc
in
inc
pop
or
in
xchg
cltd
add
inc
mov
cmp
lret
sbb
push
shll
jl
in
dec
dec
sbbb
popa
jno
fwait
dec
loopne
mov
pop
pop
cwtl
or
xchg
scas
loope
and
ljmp
mov
in
add
out
dec
sti
stos
mov
adc
inc
pushl
in
push
xor
ret
aam
ss
or
mov
arpl
rcrl
add
jmp
xorl
add
mov
call
pusha
bound
rcrb
sbb
int3
adc
mov
mov
fdivrs
cmp
repnz
cltd
add
rcrb
jae
div
push
xchg
adc
decl
decl
dec
mov
stos
outsb
pop
aaa
outsb
adc
outsl
sbbb
mov
addl
add
ror
mov
or
dec
clc
sbb
or
psubsb
dec
les
leave
out
imul
add
cwtl
cmpsb
test
movsl
xchg
pop
jge
lea
xor
std
enter
jns
aas
xlat
pop
sti
dec
xchg
int3
jns
popf
xlat
aas
mov
lcall
clc
xor
push
push
inc
nop
outsl
ljmp
xor
mov
add
sub
outsb
cld
push
jl
fistpll
mov
mov
mov
inc
pop
jecxz
into
sub
icebp
jb
xchg
pop
sub
js
js
pop
call
pop
dec
js
outsl
incl
adc
push
cmc
lret
jnp
cld
push
jbe
test
js
idivl
pop
fcoms
ss
sub
mov
inc
dec
xor
dec
or
imul
test
cmp
arpl
jg
aam
cmpsl
or
inc
mov
test
mov
add
push
adc
push
jmp
push
int
call
cs
in
adcl
inc
add
mov
bound
push
enter
orb
in
push
incl
jge
xor
jb
push
lcall
addr16
decl
jmp
push
xlat
mov
push
inc
ja
inc
jle
ret
loopne
shlb
rolb
adc
jg
sbb
mov
jno
jo
mov
call
push
pop
in
pop
mov
out
nop
xchg
inc
jmp
stos
iret
aam
mov
test
pop
mov
mov
mov
dec
stos
aas
fs
jge
les
push
pop
push
dec
xchg
repnz
mov
fdivrl
push
add
cmp
jg
lahf
or
in
xor
dec
idiv
incl
jecxz
sbb
lcall
outsb
repz
mov
fsubrl
mov
push
inc
dec
mov
js
incl
sub
pop
mov
inc
mov
cmc
or
lods
cld
in
test
rcrl
ja
dec
ficoms
insl
jle
jno
dec
je
loopne
lock
inc
loope
dec
es
incl
or
sarl
shll
lcall
push
pop
sub
add
bound
add
hlt
push
push
dec
inc
add
push
xlat
jle
loope
mov
inc
add
xor
jmp
or
jle
mov
mov
jecxz
loop
lret
add
popa
test
test
mov
gs
fisubrs
sahf
shl
sbb
inc
inc
cmp
hlt
dec
sub
push
dec
pop
incl
pop
mov
shrl
cmp
sub
mov
cwtl
int3
mov
inc
xor
decl
loope
mov
push
bound
aas
bound
pop
push
jge
int3
inc
stos
call
push
gs
mov
scas
mov
adc
das
xor
js
lea
push
mov
mov
loope
jmp
push
jmp
jmp
xor
jl
rcrb
inc
sub
addr16
std
pop
fldl
cmp
xchg
outsl
stos
jnp
xchg
loopne
pop
pop
mov
inc
mov
mov
sbb
pop
outsb
push
cs
decl
jle
test
add
jbe
ss
mov
cmp
inc
pushl
bound
test
pop
mov
cltd
pop
xor
out
cmpsb
xor
jns
dec
ss
cltd
jb
dec
dec
aaa
add
rol
andb
push
xchg
imul
dec
mov
das
mov
iret
sbb
es
rcr
jl
dec
xor
adc
clc
jmp
cmp
sbb
cli
call
inc
pop
orl
dec
add
ja
and
pop
add
cmpb
adc
push
sub
cmp
mov
je
sbb
sub
xorb
div
nop
mov
lea
fwait
and
stos
jb
loopne,pt
push
bound
lods
out
mov
mov
mov
pushl
adc
mov
inc
ror
inc
sub
mov
sbb
cli
movl
dec
xor
push
stc
clc
inc
lock
js
jle
adc
dec
dec
dec
push
jmp
sbb
data16
or
xchg
pop
fwait
repz
inc
cmpsl
and
jmp
int3
cmpsl
mov
xchg
fdivrs
in
ljmp
cwtl
mov
loopne
push
dec
add
test
jo
pop
ficoml
sbb
nop
jg
xchg
dec
in
notl
leave
loop
add
lahf
jb
loop
ret
sbb
xchg
xor
stos
add
pop
xor
push
addr16
jb
push
dec
push
dec
out
roll
leave
fwait
mov
dec
push
push
in
leave
cmp
lcall
jge
cmpb
inc
or
mov
jp
fdivl
adc
das
clc
pushl
mov
lcall
push
adc
jne
addl
rorl
mov
mov
jne
rcl
dec
mov
lahf
popf
pop
shlb
and
mov
mov
and
adc
or
add
pop
loop
js
fcmovnu
xor
test
clc
cmp
notb
lock
adc
mov
jecxz
pop
out
cli
sub
adc
mov
ljmp
flds
dec
fiaddl
or
adc
cmp
scas
nop
les
popf
aad
mov
push
pop
das
ffreep
int
ss
cmp
sub
rdmsr
dec
loopne
imul
inc
ss
int
shll
ret
mov
push
mov
icebp
pop
pusha
sti
adc
incl
mov
in
inc
inc
les
cld
fsubr
adcl
fmull
dec
cld
sbb
adc
inc
jg
jecxz
inc
push
mov
enter
push
sbb
lcall
test
and
jo
add
in
xorb
and
mov
sub
incb
idiv
xchg
cs
sti
clc
adc
mov
mov
test
mov
cmp
xor
jmp
leave
pop
mov
leave
add
push
pop
call
test
xor
fsubrs
cs
sub
cltd
lcall
loopne
pop
clc
pop
scas
jmp
or
outsb
ja
fiadds
nop
mov
pusha
aam
push
jb
mov
push
pop
pop
aas
pop
jmp
jp
fcomip
cmp
or
pop
push
imul
rorl
cmp
outsb
call
push
sub
dec
mov
xchg
add
loopne
in
cmpsl
ljmp
xor
inc
ret
mov
out
and
mov
ss
jmp
add
dec
inc
nop
ret
nop
repnz
orb
repnz
dec
mov
decl
in
adc
xchg
jmp
loope
dec
andb
inc
jge
sub
mov
jne
bound
mov
jno
xchg
push
shll
insb
xor
call
add
add
adc
push
jle
repz
pop
les
jne
cmp
test
iret
sar
mov
sahf
inc
pop
add
lods
rolb
adc
hlt
mov
jmp
stos
xchg
jl
adc
test
dec
sbb
pushf
mov
pop
mov
ret
mov
dec
test
xor
test
xchg
inc
mov
sub
sbb
decl
ja
pop
adc
add
and
nop
mov
sbb
test
inc
cltd
xor
jns
xchg
in
bound
rolb
enter
pushf
ret
xor
dec
or
dec
push
int3
les
adc
test
loop
mov
jno
cli
mov
dec
mov
mov
jnp
call
imul
jbe
ljmp
and
adc
int
insb
mov
mov
sbb
les
jae
push
pop
decl
sbb
xchg
inc
in
pop
inc
cmp
jmp
daa
lahf
das
lcall
lcall
xchg
out
and
shll
pop
insb
mov
mov
test
aam
nop
fnsave
jne
mov
mov
mov
adc
mov
dec
push
pushf
mov
mov
or
jl
inc
daa
push
inc
or
cmp
pushl
pop
or
or
test
add
cmp
xor
dec
dec
dec
call
movsb
jne
scas
popa
sti
stos
sbbw
outsb
pop
sarb
mov
cmc
insb
push
jge
call
add
into
in
fiadds
frstor
dec
cmc
adc
mov
stos
ljmp
movsb
xor
fsts
rorb
and
add
pusha
lret
adc
dec
pop
fsubs
mov
and
add
incl
adc
xor
pop
adc
pusha
pop
aas
imul
jnp
cmc
jmp
lret
push
cmpl
rorb
and
call
call
ljmp
and
imul
xchg
jge
int3
cld
test
adc
jmp
cmpl
outsb
repz
xchg
sbb
mov
jg
mov
out
mov
es
xchg
adc
cmp
xor
xchg
jno
and
int3
mov
sbb
icebp
sub
push
sahf
jmp
fsubp
data16
rcrb
out
subl
rorb
dec
call
jl
adc
test
xor
ret
dec
xor
inc
shlb
into
jmp
or
in
jp
pop
lock
lea
mov
lcall
repnz
jno
mov
ffree
in
mov
ljmp
dec
jle
stos
xor
outsl
xor
sbb
aas
call
adc
mov
iret
cmp
mov
je
pop
call
or
dec
je
dec
fsts
dec
or
fidivrl
out
jo
dec
dec
and
stos
call
cmp
popf
or
repnz
xor
jmp
xchg
loopne
insb
jg
sbb
repz
outsb
mov
dec
out
push
cmp
xchg
mov
and
lcall
cmp
xchg
cmp
inc
out
xchg
jl
lahf
out
mov
xchg
xchg
adc
jae
cmp
adc
inc
mov
push
inc
add
ret
lahf
cld
shlb
jns
push
xor
fwait
out
icebp
repnz
add
jno
push
push
push
and
mov
sub
testl
mov
cmpb
dec
cmpsl
sar
mov
jg
fs
icebp
lods
addr16
dec
add
ljmp
xchg
push
cmpsl
out
sbb
or
mov
pop
cmp
leave
jno
mov
sbb
cmp
xchg
mov
sub
jbe
push
mov
test
aaa
cli
rorb
stos
fimuls
sub
add
mov
sbb
outsl
xchg
sbb
xor
push
ffreep
mov
es
jmp
rcr
ret
pop
cmpsl
cs
loop
push
cmp
xchg
jne
pushf
addr16
addr16
push
test
add
push
or
hlt
int
sti
xchg
inc
int3
or
sti
push
imul
outsl
out
aaa
push
adc
and
mov
lcall
pop
inc
pop
jns
scas
xchg
or
inc
lret
cmc
add
inc
xor
in
xchg
dec
push
pop
inc
push
clc
fimuls
inc
leave
cmpl
sbb
out
mov
pusha
call
sbb
pop
dec
iret
sarl
dec
mov
mov
dec
push
jo
sahf
push
lret
dec
or
inc
repnz
ljmp
in
scas
addr16
icebp
mov
rcrb
adc
and
push
adc
mov
shll
jb
ss
jnp
inc
lods
push
rorb
dec
or
dec
inc
sub
cld
aam
ja
mov
lahf
add
push
mov
cltd
xchg
icebp
lcall
lret
fwait
mov
cmp
movsb
jae
cmpsb
mov
jo
jg
xor
ja
jnp
aad
mov
pop
and
loop
aaa
mov
add
push
fsubr
add
sub
and
cmp
jae
pop
addb
in
js
mov
lcall
test
jge
shlb
add
in
push
sbbl
lcall
mov
jmp
adc
lock
mov
out
popa
add
out
loop
sbb
jmp
in
add
repz
cmp
testl
or
dec
pushf
ljmp
call
les
scas
xchg
sub
orb
js
cli
lds
and
arpl
pop
cld
inc
mov
insl
orb
mov
push
dec
sub
fdivr
fcomip
mov
int3
xchg
xor
call
jmp
mov
and
incl
xor
out
add
mov
les
pop
decl
loope
and
fdivr
pushf
imul
mov
xchg
mov
ljmp
mov
lret
mov
mov
pop
aas
sarb
push
stos
and
test
cmp
mov
sar
mov
adc
scas
xor
xchg
jle
pop
adc
repnz
push
add
orb
xchg
pop
ret
fnstsw
jb
call
jne
and
repz
dec
jecxz
pslld
xor
xor
test
popf
jg
add
aaa
test
outsl
add
icebp
aam
andl
test
jmp
cmp
mov
pushf
in
fisubl
cmp
sub
das
xlat
mov
inc
fldlg2
xchg
xchg
add
loopne
sahf
lds
and
loopne
ret
cld
dec
sbb
iret
add
inc
pop
addb
loopne
outsb
or
mov
aas
stos
adc
insb
add
subl
divl
mov
xchg
aas
rcrb
jmp
or
sbb
push
outsb
add
shl
aas
mov
neg
movsl
icebp
arpl
jb
add
pop
jbe
decl
inc
mov
je
xchg
mov
mov
mov
ljmp
ret
cmp
sub
lret
cmpsb
lock
xor
outsl
call
dec
in
repnz
in
pop
int
mov
into
add
mov
pinsrw
aaa
sbb
call
xchg
sti
cltd
fcoms
arpl
pushf
sti
js
addb
into
insb
adc
xor
pop
sub
cmp
jmp
mov
mov
test
or
in
cmp
ret
sub
ror
in
cmc
mov
xchg
sub
ret
insl
loopne
mov
xchg
movsl
aad
es
js
xor
rorb
or
stos
xor
jne
inc
pop
mov
or
pushf
loopne
js,pt
pop
orb
call
pop
stos
lret
decl
and
rorl
and
add
xor
fdiv
mov
add
jo
add
repz
add
add
add
sbb
push
jl
adc
mov
ds
test
js
mov
cmp
xor
test
arpl
rcl
icebp
dec
pushl
cmc
sar
sub
mov
mov
pop
les
or
scas
jno
cmp
shll
mov
call
adc
push
js
cmp
enter
nop
in
clc
cmp
scas
inc
push
cmp
adc
movsl
arpl
push
jbe
jp
decl
incb
stos
or
outsl
cmp
xor
add
sbb
das
cli
decl
mov
add
adc
and
jle
mov
lcall
daa
cmp
mov
in
pushf
push
stos
adc
add
cld
lods
mov
decl
out
fsubrs
push
ds
in
bound
mov
push
pushf
mov
jg
pushl
inc
add
push
leave
pop
inc
mov
add
add
jg
jmp
mov
rorl
sub
call
jg
mov
lods
in
cmc
lods
dec
sbb
pop
loope
dec
lahf
sub
cmpsb
aaa
mov
and
pop
jno
movsb
test
lret
insl
xorb
or
inc
dec
push
xor
lods
sarl
dec
and
ss
sub
cmpsb
adc
bound
cli
call
leave
decb
cmpsl
int
in
adc
pop
and
mov
dec
ret
xor
ret
push
lock
inc
ds
dec
xchg
filds
inc
inc
mov
push
xchg
inc
sbb
adc
cmp
xchg
std
pop
mov
fstpl
ss
bound
dec
lahf
hlt
lret
push
xchg
test
pusha
lods
jns
test
lods
sbb
adc
or
gs
lahf
sbb
rolb
and
inc
jg
mov
test
pop
mov
ret
rclb
or
jae
sub
into
cmc
cmc
es
push
xor
pop
pop
jne
push
decb
sahf
mov
sbb
dec
jae
mov
xlat
lcall
jmp
pop
fucom
xchg
fisttpl
and
dec
mov
movsb
stos
mov
mov
shll
xor
xor
nop
lock
push
lock
xor
out
adc
push
loop
inc
jbe
jle,pt
loop
es
cmp
mov
les
pop
cli
out
push
push
jne
push
push
jle
inc
lcall
xorl
jno
sahf
movups
lcall
jmp
sbb
push
xchg
adcl
cmp
cld
push
int3
or
push
imulb
dec
clc
push
pop
cmp
cmp
xchg
ljmp
fdivr
outsl
push
inc
xlat
mov
mov
xchg
rcl
xchg
je
adc
enter
clc
sub
push
fildl
in
lods
xor
jae
dec
push
mov
pushf
push
xor
cwtl
inc
incl
and
xor
sbb
xor
outsb
loopne
jmp
sbb
xchg
stos
inc
xlat
and
push
ljmp
sbb
out
cmp
adc
push
imul
inc
aaa
pop
incl
inc
es
mov
jmp
jns
in
xor
stc
xchg
mov
xchg
shrb
sbb
ds
call
loop
movb
fs
pop
push
mov
jg
ljmp
fdivrs
stc
mov
sbb
xor
pop
hlt
scas
mov
incl
add
arpl
stos
orb
mov
data16
inc
mulb
pop
lcall
nop
popa
xor
lods
sub
mov
in
mov
pop
cmp
sti
push
stc
pop
push
mov
jnp
or
ljmp
mov
inc
dec
xchg
fiadds
mov
insl
and
jecxz
shlb
add
loope
pop
andb
adc
ljmp
lcall
push
cmpsl
sar
pop
and
cmp
repz
outsb
mov
mov
pop
mov
jnp
pop
int3
aad
xor
xchg
hlt
jb
aaa
or
and
add
push
incl
mov
inc
fstpl
jb
mov
adc
arpl
sbb
inc
lea
pushl
insb
adc
dec
je
sub
jecxz
shlb
ljmp
int3
sahf
fcompl
jmp
cmpsl
sub
ljmp
xlat
in
rol
cmp
jmp
test
add
imul
jg
adc
adc
or
fists
cli
loop
mov
fbstp
mov
adc
push
inc
mov
add
jb
or
push
fucomip
adcl
mov
jl
add
dec
test
push
push
rclb
adc
std
inc
and
xchg
mov
mov
xor
adc
jb
fcoml
nop
orl
jmp
mov
call
pusha
test
jns
cs
jmp
sub
stos
mov
sbb
adc
pop
cmc
ljmp
xchg
mov
mov
js
xchg
dec
pop
cmpsb
pusha
xchg
dec
push
mov
pop
inc
mov
cltd
fsubrl
lds
add
cmc
loopne
ret
pop
mov
mov
decl
call
mov
push
and
lods
inc
gs
bound
adcl
add
lcall
sbb
rclb
repnz
fidivrs
add
lcall
cmp
rorb
movsl
xor
add
and
popf
cltd
pop
cmp
xchg
idiv
out
push
or
rcr
or
add
jns
flds
and
xor
cmp
jmp
dec
or
mov
adc
lcall
es
clc
and
cs
push
out
incl
testl
jbe
inc
vmovupd
fisubrs
orb
adc
xor
arpl
mov
popa
loop
ret
ret
das
add
ljmp
add
fwait
addl
sbb
cltd
add
rorb
outsl
sub
imul
cli
rolb
js,pt
cmp
sub
pop
lea
mov
inc
ret
decl
cmpsl
decl
fadd
sbb
stos
sbb
fcomip
inc
lcall
ljmp
jb
fistl
pop
or
jb
adc
arpl
outsl
mov
and
cmp
jmp
les
xorb
inc
rorb
add
pusha
adc
xchg
ljmp
fbld
scas
addl
loopne
dec
out
stos
in
testb
and
xor
stos
cwtl
movsb
xchg
or
dec
mov
mov
sbb
add
clc
jne
fs
movsb
nopl
in
inc
inc
cmp
mov
push
cld
aad
lcall
lcall
mov
dec
add
pop
fsubs
dec
mov
test
pushl
fsubl
push
or
out
mov
adc
pusha
jecxz
and
cltd
sbb
and
ljmp
add
mov
incb
pop
add
sbb
xor
inc
xchg
ljmp
dec
or
cmp
xor
xor
or
mov
lea
inc
ljmp
pop
std
sbb
mov
dec
pop
movups
mov
data16
cltd
mov
jmp
push
subb
adc
xchg
mov
test
mov
daa
loopne
cmp
mov
movsl
pop
sub
ljmp
xor
or
xor
cmp
cmp
loopne
push
add
insb
pop
inc
mov
clc
cld
loope
push
mov
adc
xchg
jbe
dec
lahf
dec
sbb
leave
mov
popa
cmpsl
sbbb
dec
ljmp
nop
testl
push
jno
mulb
mov
mov
jae
mov
mov
lods
fsubrl
imul
mov
dec
mov
ror
dec
fdiv
lcall
push
adc
lret
push
clc
push
shl
and
push
sbb
shlb
mov
pop
inc
call
sbb
rorb
cmp
pop
push
out
xor
lock
adc
mov
mov
push
rclb
imul
imul
lar
jo
sahf
xor
insb
add
and
dec
mov
add
add
rorb
call
mov
rol
jp
mov
pop
pop
loop
xchg
push
out
mov
fidivl
xor
mov
incl
push
out
aad
mov
out
call
cmp
loopne
pop
insl
lcall
das
in
sub
aad
push
lea
push
xor
ret
mov
mov
insb
pop
out
cwtl
inc
js
lods
add
jnp
call
lahf
pop
sbb
xor
sub
out
mov
push
sub
cmp
stc
stc
dec
pop
cmp
push
insb
dec
pop
xor
movsl
outsl
push
mov
mov
imul
push
push
mov
add
jnp
cmp
or
arpl
insb
outsb
xchg
push
rolb
lock
sbb
push
loopne
hlt
pop
call
ret
dec
jbe
mov
dec
rcrb
nop
incl
stos
inc
mov
and
jnp
push
push
add
mov
sbbl
stos
mov
data16
dec
add
lahf
and
test
jns
sahf
adc
inc
jecxz
clc
pop
inc
dec
xor
pop
aas
dec
clc
js
ss
add
insl
inc
add
loopne
aas
sbb
jmp
pop
imul
call
icebp
js
lret
add
inc
notb
xchg
rolb
dec
fs
xchg
dec
push
dec
inc
popa
mov
stos
sbb
movsb
jb
lret
mov
lock
js
dec
jge
inc
fnstcw
pushl
or
mov
jae
inc
push
dec
xor
ficoml
dec
adc
ret
push
sbb
adc
popa
data16
fdivr
jg
adc
push
jo
push
leave
in
cli
jg
sar
dec
inc
xchg
movsb
sbb
jbe
scas
inc
jmp
into
and
add
jo
dec
lcall
mov
ret
rcrl
mov
xchg
cmpxchg
ja
lods
jl
xchg
testb
addb
xchg
push
push
push
pop
jp
dec
fs
inc
xor
cmp
pop
fildll
pop
inc
adc
dec
cld
fisttps
add
add
mov
js
out
xor
add
jno
cmc
arpl
xor
inc
aaa
gs
mov
add
or
dec
or
mov
inc
ljmp
imul
sub
fcoms
mov
outsb
dec
adc
xchg
out
subl
fnsave
xchg
and
ja
push
call
or
xor
sub
xor
fidivrl
jmp
scas
add
ds
mov
sub
xchg
mov
push
and
push
loope
dec
mov
jno
lret
loope
and
ljmp
dec
sti
inc
cmpsb
mov
std
xchg
fidivrs
dec
mov
xor
lcall
nop
sbb
pushl
loopne
daa
adc
xor
push
push
inc
xchg
add
inc
mov
fisttps
sub
adc
xchg
pop
lods
jl
aam
sbb
shrl
lea
or
clc
repnz
lcall
sbb
scas
push
mov
xchg
and
and
mov
push
lock
rclb
push
movsb
insb
xchg
out
mov
inc
cld
je
mov
adc
out
loope
addr16
cltd
sub
push
imul
jmp
sbb
push
mov
fsubr
xor
adc
cmpb
std
jne
sar
push
jb
out
dec
aaa
das
sar
push
pop
sub
and
sub
jecxz
neg
ljmp
ljmp
xchg
aam
hlt
pop
out
out
pop
sub
inc
arpl
test
jp
cmc
imul
xchg
rcrb
fcoms
push
test
cmp
push
out
sahf
xchg
rcl
divl
or
outsl
aad
push
orb
dec
fwait
sbb
andb
adc
dec
cltd
sbbl
iret
and
ret
and
mov
mov
sbb
mov
inc
cmp
in
jecxz
fnsave
jg
mov
shl
hlt
out
stos
inc
jae
jl
std
movsl
mov
sub
inc
fmull
inc
mov
adc
push
adc
popa
clc
push
aad
cmp
nop
inc
pusha
dec
aam
aam
and
clc
pop
xchg
jg
ret
and
sub
das
push
out
adc
in
movb
xor
add
repnz
pusha
xor
test
test
add
in
cmp
in
pop
loopne
and
add
adcb
leave
out
add
in
fwait
das
sub
pop
add
loop
repnz
and
imul
adc
xor
out
adc
add
leave
and
cmp
shr
pop
xchg
cmp
leave
jmp
and
push
dec
ljmp
lods
jmp
repnz
mov
push
ljmp
add
ret
push
mov
add
in
and
ljmp
jmp
inc
outsb
cmc
icebp
lea
mov
rorb
push
dec
ljmp
adc
dec
inc
sti
pusha
adcb
cmp
sbb
loop
aaa
fdivs
sub
push
fmul
cmp
sub
cmpl
pop
pop
rorl
push
dec
or
ret
dec
add
ss
or
xor
ljmp
push
add
push
stos
pop
shll
jmp
lcall
stos
and
mov
dec
push
add
inc
inc
ljmp
cmp
enter
lock
popa
inc
notb
mov
clc
icebp
jmp
jl
dec
out
push
push
faddl
dec
add
movl
pop
inc
xchg
ljmp
std
shrl
jno
add
xchg
mov
mov
cmc
mov
add
pop
push
sub
mov
sbb
lcall
sti
mov
das
jecxz
int3
sub
pop
cmp
dec
test
xchg
call
add
roll
and
iret
in
push
inc
dec
inc
rcl
cld
push
xor
cli
dec
push
inc
dec
inc
ror
cmp
add
data16
dec
mov
pop
inc
mov
aas
mov
xor
adc
pop
das
mov
add
push
stos
sbb
mov
dec
jnp
push
fmull
pop
sar
insb
xchg
mov
adc
mov
cmpsl
enter
and
push
mov
mov
call
call
fcmovnbe
out
pop
pop
dec
lea
xchg
icebp
ljmp
int
mov
enter
lahf
loopne,pn
mov
xor
push
inc
daa
mov
icebp
inc
or
arpl
mov
popa
pop
adc
sub
and
inc
add
loope
aaa
jae
js
dec
mov
cld
dec
push
cmp
pushf
xlat
lods
mov
mov
or
aam
add
dec
mov
adc
and
sub
ficoms
dec
hlt
ljmp
fisubrl
shl
je
or
ljmp
push
push
xchg
xchg
sbb
in
mov
xor
jo
hlt
sbb
pop
mov
cmc
lock
test
push
push
jae
sub
mov
insl
dec
push
mov
cs
mov
or
fldt
and
jne
dec
std
inc
and
xchg
push
cmovge
fists
jae
sbb
jae
int3
mov
push
inc
fcomps
pop
cs
stc
xchg
push
pop
aaa
shrl
dec
xor
dec
cld
fistpl
inc
movsl
int3
out
inc
add
bnd
jg
movsl
adc
pop
add
push
je
jb
push
pop
push
fmuls
je
jg
adc
push
nop
lods
rcll
dec
aas
into
push
pop
imul
mov
decl
xchg
fwait
scas
push
mov
xor
push
das
inc
or
sbb
ljmp
in
dec
out
call
orb
push
cmc
adc
add
dec
fs
seto
outsl
dec
jo
insl
mov
divl
pop
xchg
jg
or
cmp
adc
mov
sub
and
add
repnz
inc
and
and
pop
enter
repz
mov
add
into
negl
leave
out
dec
add
clc
pop
test
clc
out
push
leave
pop
add
stc
dec
inc
repnz
cli
dec
inc
jb
inc
cli
fcmove
mov
sti
mov
cld
xor
mov
in
and
test
nop
pop
xchg
pop
sbb
and
add
dec
out
ss
inc
inc
push
jb
lahf
pusha
push
and
out
idiv
add
outsl
incl
add
add
adc
mov
mov
nop
dec
xchg
sti
in
pop
outsb
adc
push
push
pop
into
push
inc
fwait
add
xlat
cmc
xchg
xor
add
push
cs
stc
mov
std
or
push
icebp
decl
cli
mov
lret
push
mov
xchg
mov
push
std
gs
mov
dec
ret
arpl
shrl
lods
dec
xchg
test
enter
xor
jae
add
dec
test
repnz
add
in
cmpsl
or
lea
xchg
mov
and
adc
jno
sbb
aas
fsubs
out
dec
in
loope
mov
cmp
pop
add
test
mov
xor
stos
xor
jo
cwtl
sub
pusha
call
add
sub
stos
mov
ljmp
pushf
mov
cmp
bnd
xorb
dec
adc
push
imul
js
lcall
fs
je
mov
sbb
xor
jmp
jno
xchg
push
dec
cli
stc
or
sbb
push
fidivl
lahf
mov
loop
outsb
outsl
jb
dec
in
add
imul
or
mov
cmpsb
popa
pop
add
add
mov
push
dec
popf
les
jg
test
test
je
stc
mov
jo
mov
lea
or
fiadds
mov
test
push
or
inc
push
dec
and
or
fimull
cld
decl
pushf
ja
cmp
add
push
movsl
mov
and
cmp
lcall
mov
lds
jno
xchg
nop
mull
lcall
and
mov
mov
mov
dec
mov
pop
aad
and
incl
cli
lock
mov
mov
jp
sahf
adc
push
clc
enter
in
ret
push
inc
aaa
fisttpll
dec
popa
jns
incl
mov
mov
iret
sbb
sbb
fsubs
mov
call
pusha
adc
testl
cmc
push
add
pop
jo
push
sub
leave
movsb
add
push
mov
decl
jl
divl
into
lock
sbb
jnp
cld
nop
push
sbb
fbld
fdivl
or
mov
mov
clc
aaa
fs
add
incl
dec
outsb
pop
or
mov
xor
int3
std
add
or
inc
in
xor
pushl
addl
cmp
add
outsb
adc
sbb
sub
or
push
lds
jb
pushf
iret
arpl
and
jmp
stc
lods
aam
in
shlb
mov
jne
in
push
jmp
pop
mov
dec
mov
inc
and
fnstcw
mov
inc
in
dec
inc
sbb
ret
movsb
fsubrs
lcall
imul
ret
orl
dec
inc
sti
sti
hlt
sub
aas
sbb
xchg
sub
xor
decl
push
dec
add
daa
call
cld
sbbl
dec
and
inc
sbb
jmp
rorb
push
daa
mov
xchg
push
xchg
andl
imul
and
or
jmp
incl
or
and
mov
jbe
out
call
cmp
jmp
in
adc
call
mov
cmp
fsubrl
dec
leave
aam
pop
adc
jae
xchg
leave
ror
scas
fcompl
dec
adcb
int3
or
movb
arpl
mov
jb
sub
incl
jp
repnz
inc
xchg
mov
mov
das
push
xchg
xchg
fwait
add
insl
cmp
adc
add
int
add
shlb
testb
sar
incl
cltd
or
sub
outsb
sub
ljmp
test
ja
in
fsubl
scas
dec
dec
mov
inc
xor
jno
and
loop
mov
cmpb
fildl
mov
test
rcrb
shrb
clc
mov
cmpsb
fwait
sub
xor
inc
mov
jb
lahf
push
rcll
cltd
data16
add
test
out
sub
push
cli
fdivrl
call
sub
iret
mov
and
es
pusha
mov
lcall
pushl
ljmp
cmpsl
gs
das
jnp
ljmp
push
xchg
pop
clc
xchg
out
cmpsl
and
lahf
pop
lahf
push
push
and
lret
adc
cmc
xor
fucomip
mov
and
sub
sahf
pop
fmull
stos
in
inc
test
decb
lock
lds
push
arpl
push
js
mov
cwtl
dec
adc
mull
outsb
je
add
stos
cmpb
and
xchg
mov
add
cld
push
or
jle
ja
add
notb
inc
addr16
add
in
and
and
sbb
ljmp
and
sbb
pop
negb
sub
iret
fsts
imulb
sub
ljmp
popa
sbb
out
add
movlps
push
add
js
js
lret
inc
adc
pop
sbb
aaa
sbb
sub
test
add
or
add
cmp
lsl
push
jo
das
jp
add
pop
or
cmpsl
sub
adc
jno
xor
enter
push
inc
push
or
jecxz
fiadds
add
jecxz
add
out
push
jmp
and
pop
je
pop
push
jno
test
mov
xchg
sbb
pop
mov
jmp
mov
pushl
ret
shl
repnz
movsl
or
popf
or
outsl
dec
scas
cmpsl
add
mov
adc
imul
cmp
adc
loop
sbb
pushf
xchg
rorb
push
cmc
jno
add
xchg
push
aad
incl
shl
xchg
add
in
mov
lea
xor
xor
fnstcw
cwtl
push
fnstenv
lods
push
add
filds
fbld
mov
sbb
ljmp
jmp
mov
xor
jecxz
add
add
jne
xorb
fsubrs
cmp
incl
mov
int3
aaa
int
jg
inc
mov
jb
je
jne
lods
test
hlt
pushl
cmp
pushf
rorl
adc
and
push
cmpsl
dec
das
dec
push
inc
out
orb
xor
pushf
out
fisubs
inc
addr16
xchg
push
and
in
data16
push
add
pop
mov
hlt
sub
les
cmpl
add
jmp
jae
dec
and
sbb
fdivrs
pop
movsl
inc
add
dec
jo
jbe
add
push
ljmp
push
dec
adc
mov
xchg
mov
cli
pushl
and
addr16
in
xchg
sbb
loopne
or
cmp
pushf
push
dec
pop
or
xor
rcrb
fiadds
inc
and
xchg
jae
push
imul
sub
cs
loop
pop
jp
pop
dec
push
mull
addr16
repnz
outsb
mov
sbb
mov
dec
xor
test
inc
mov
rolb
pushl
mov
cmp
add
into
stc
xchg
or
jnp
fsin
ljmp
sti
notb
cwtl
js
add
mov
jo
jle
das
jp
dec
push
add
subl
enter
xor
aaa
mov
pushf
jp
mov
push
in
xor
out
fisttps
fs
lea
inc
mov
scas
pop
aaa
jno
icebp
call
xchg
mov
das
cmp
inc
xor
pop
xor
out
cli
inc
loopne
push
add
dec
inc
jg
loopne
push
jb
insb
push
repnz
mov
incl
add
jmp
mov
fwait
add
inc
jmp
mov
and
jne
or
xor
outsl
mov
xor
lea
sahf
sub
incl
dec
jmp
add
mov
push
dec
jb
mov
ss
js
jmp
loope
movsb
mov
dec
inc
push
pusha
push
call
mov
lahf
andl
rol
inc
cmp
movsb
push
dec
lahf
cmc
inc
sbb
std
lcall
std
cwtl
xlat
sub
adcb
outsl
js
fld
mov
ror
jb
inc
push
push
fisubrs
sbb
mov
pop
ret
fs
push
incl
prefetch
or
rorl
pop
js
jb
neg
xchg
sub
ljmp
or
jecxz
mov
dec
xchg
aas
loop
add
pop
shlb
lea
cmp
dec
xchg
insl
sbb
ljmp
out
pop
sub
lret
push
sahf
jl
or
or
lcall
mov
add
pushf
shrb
dec
sub
in
aad
mov
xchg
fnstenv
mov
push
jg
lock
stos
mov
aaa
push
adc
xchg
adc
inc
inc
push
jae
push
push
push
bound
dec
outsl
cli
outsl
push
inc
ret
enter
dec
jae
test
int
push
jg
inc
fadd
pop
mov
outsl
inc
sub
test
sarl
inc
inc
mov
js
js
sarl
iret
cmpsl
xor
mov
stos
lret
inc
aad
call
out
adc
push
push
cmp
mov
fwait
mov
scas
mov
pop
xor
pushl
bound
shr
nop
jbe
pop
jno
loopne
js
push
sbb
sbb
or
cmp
pushl
add
dec
insl
push
sub
lea
dec
xchg
in
popw
mov
jmp
inc
add
iret
jmp
and
xor
and
shl
lods
pop
push
dec
inc
dec
daa
jecxz
dec
dec
pop
inc
ds
lcall
add
jns
test
cli
stos
xchg
add
xchg
or
jg
mov
sahf
dec
out
jp
jl
mov
cmp
sub
jl
shrl
dec
cmp
repz
jmp
jne
push
leave
in
iret
stos
jl
push
sub
call
clc
mov
or
adc
xlat
xor
fidivrl
xchg
je
or
hlt
je
inc
dec
and
jne
filds
das
pop
sbb
sti
inc
mov
adc
jl
bnd
addb
and
xlat
rorb
inc
iret
ja
jl
mov
push
sbb
push
inc
call
mov
xor
mov
ret
lret
test
push
sbb
cli
dec
or
test
ljmp
sbb
int3
rorl
push
pop
int
pop
sbb
call
jo
into
xor
xor
rcll
sbb
push
pop
xchg
cmpsb
lret
xor
adc
mov
lock
cmp
jl
stos
jg
icebp
sbb
bound
add
dec
sub
xchg
jg
cs
jb
cmpb
jle
sbb
arpl
add
pusha
fisubrs
shlb
test
out
out
adc
or
or
push
and
ja
ja
clc
pop
popa
pop
jae
cmc
add
lea
data16
pop
idiv
decl
jle
enter
cmp
cmp
je
das
or
sbb
jmp
rorb
pop
testb
bound
lret
mov
gs
xor
call
add
ljmp
pop
add
aaa
inc
cwtl
pusha
cmp
scas
movb
cmp
sbbl
aaa
lcall
add
icebp
int3
add
js
or
xchg
jl
xchg
fdivs
call
shrb
outsl
or
imul
inc
scas
jmp
mov
fsubs
movsb
cmp
cs
incl
add
sbb
add
insl
mov
mov
push
in
in
fiadds
sub
or
add
loop
or
and
mov
aaa
and
xchg
jecxz
sub
mov
data16
and
daa
std
inc
testb
adc
jp
je
push
lahf
aaa
ret
xor
dec
shrl
xor
pop
int3
aad
decb
jle
or
fsubrl
lcall
xorb
out
fsubs
out
adc
adc
mov
and
fnstenv
incl
adc
mov
mov
pop
out
mov
add
and
in
ljmp
shr
popf
bound
jnp
insl
leave
pop
icebp
mov
inc
mov
push
mov
decl
loopne
mov
pop
fwait
pop
rcrl
roll
pop
lock
jmp
ljmp
js
cld
out
sub
mov
push
imul
rol
incl
adc
xor
cmp
incl
popf
pop
std
stos
pop
ljmp
add
scas
add
insb
cmp
add
es
fs
dec
aam
lods
in
das
test
test
xchg
or
fcos
mov
mov
sbb
cmc
bound
sbb
adc
mov
jle
cs
call
lcall
push
pop
loopne
mov
mov
sar
ljmp
mov
cltd
mov
mov
pop
sbb
cld
sbb
sbb
cli
adc
rol
dec
decl
inc
stc
jo
push
mov
sarl
add
adc
nop
lahf
xchg
lods
ljmp
dec
adc
add
xor
mov
push
subb
mov
out
pusha
loope
lcall
jmp
jmp
hlt
ljmp
cmp
js
push
inc
aas
insl
cmpsb
inc
xor
ljmp
aas
hlt
add
adc
pop
adc
adc
jo
fistps
add
jne
ret
xor
and
std
test
mov
sbb
xor
rep
xor
hlt
incl
xchg
repnz
sub
pop
and
ljmp
cli
jo
test
xor
andl
jb
sbbb
cmp
mov
fsubrs
dec
ljmp
dec
popa
mov
rclb
xchg
add
inc
sahf
call
add
xchg
sbb
test
sbb
jo
and
inc
inc
mov
stos
dec
test
push
inc
sbb
sbb
xchg
xchg
fs
in
stos
cmp
mov
sbb
push
add
ljmp
gs
and
add
aaa
gs
or
pop
adc
xchg
pop
adc
mov
or
add
mov
or
in
out
and
inc
icebp
loopne
and
xor
jo
pop
mov
xchg
insl
add
shl
and
sbb
insb
pop
mov
fwait
push
xchg
and
lcall
sub
lods
mov
andb
call
decl
add
sub
ret
sbb
in
sub
in
clc
out
insb
in
sub
pushl
xchg
xchg
mull
rclb
xor
rcl
jp
fiadds
mov
cli
decl
popa
jmp
mov
sub
dec
je
jo
cld
and
je
mov
enter
sbb
ljmp
pop
call
dec
fstl
fisttpll
push
test
push
xchg
sbb
iret
cmpsb
jge
inc
inc
int
rclb
jbe
dec
int
push
jg
push
or
jae
add
test
mov
adc
jmp
mov
push
pushf
push
pop
push
ret
bound
sarb
insl
push
gs
fbld
sbb
jns
outsl
pop
sbb
sti
push
cwtl
push
daa
ret
lahf
cmpsb
push
ljmp
jbe
xchg
mov
mov
xor
and
dec
aaa
pop
lock
inc
pop
popa
inc
jg
dec
add
test
insb
mov
ljmp
cli
fwait
ret
sub
sbb
mov
push
mov
sahf
adc
adc
outsl
jns
rcl
inc
lods
gs
addr16
clc
fwait
dec
jl,pn
and
xorb
int
jno
int
test
rorb
inc
test
fcomip
sbb
dec
add
std
lcall
test
jg
test
push
pop
cmp
ljmp
jns
xchg
mov
inc
xchg
pop
jno
fildll
pop
mov
jecxz
inc
ss
jg
ljmp
or
sbb
mov
jmp
sub
aad
inc
imul
cs
orb
movsl
lds
les
call
test
insb
mov
push
push
inc
push
lcall
dec
push
push
cs
push
and
movsb
mov
jns
mov
mov
lahf
test
out
scas
or
xchg
lret
add
incl
rcl
out
cltd
push
or
cmc
loop
sbb
and
out
jp
and
fisubrl
jg
decl
ss
mov
sub
cmp
repz
cmp
adc
nop
lea
dec
add
adc
ss
jnp
js
cmp
inc
jl
pop
div
popf
jo
pop
add
or
decl
pop
das
sbb
je
lret
sbb
movsb
dec
mov
jns
adc
mov
sub
popf
clc
ljmp
xchg
push
pop
dec
add
inc
adc
inc
daa
cwtl
repnz
cmp
jg
adc
dec
mov
add
clc
add
bound
or
add
cmc
or
xor
xchg
push
lret
and
repz
pushl
mov
mov
adc
pushf
mov
stos
xor
fldl
add
xor
jnp
call
repz
dec
aaa
es
sbb
pop
mov
add
mov
mov
into
scas
push
aad
into
lods
cli
negl
adc
call
mov
dec
outsb
cwtl
xchg
pop
pop
mov
pop
sbb
ja
incl
or
xchg
enter
fidivl
out
fsub
jo
cs
movsb
outsb
mov
std
call
xchg
sbb
adc
fs
arpl
adc
rorl
incl
cmp
adc
test
in
xchg
dec
inc
xchg
cltd
lcall
js
adc
imul
push
cwtl
mull
add
fimuls
push
jns
mov
cs
orb
add
push
out
insl
xor
xor
sbb
decl
mov
sub
inc
mov
fcoms
cwtl
jecxz
pop
mov
fcomip
incl
xchg
cltd
xor
mov
mov
sub
or
cmpl
or
into
mov
das
and
xchg
pop
aad
test
decl
popa
in
movsb
pop
cmp
sub
push
mov
mov
push
adc
fsubs
adc
and
ss
sti
or
dec
cmpsl
or
dec
cmp
dec
dec
test
xor
fcom
adc
stos
mov
xor
cmp
stos
mov
pop
jb
adc
jnp
test
mov
inc
push
cltd
adc
fsubs
jne
insb
aas
ud0
mov
test
add
ret
call
popa
xor
in
scas
clc
mov
test
aaa
xorb
stos
lods
je
push
adc
mov
or
mov
push
rolb
out
inc
into
fsubl
add
cli
push
xchg
pop
ret
das
inc
add
iret
inc
sarb
pop
sbb
xchg
xor
mov
xchg
subl
clc
dec
sub
mov
iret
sbb
lret
jmp
add
and
mov
repz
in
stos
inc
inc
adc
rclb
into
cmp
ret
jg
mov
mov
iret
bnd
sub
push
mov
push
sbb
mov
mov
sub
xor
notl
adc
xchg
mov
add
rcrb
rorl
shl
push
stos
in
dec
xor
sub
sub
incl
adc
orl
cli
mov
and
add
jo
mov
icebp
divb
pop
daa
add
fmul
test
pop
jno
cmp
sbb
loopne
addr16
incl
inc
xor
clc
testb
pop
mov
push
lods
xor
pop
add
adc
insl
add
mov
out
pop
les
sub
repnz
push
lret
pop
out
gs
sbb
incl
add
inc
add
ljmp
jg
add
pop
cwtl
push
sub
orl
cmp
pushl
sub
mov
ret
push
jp
cmp
jo
mov
inc
shll
inc
imul
inc
test
mov
rolb
ljmp
loope
movsb
shrb
rcll
jge
repz
mov
arpl
jae
js
cmpsb
mov
dec
jno
dec
rclb
fstpt
adc
cwtl
add
pop
lahf
sbb
popf
cmp
cmpsb
shll
scas
clc
clc
enter
pop
ret
rcll
xchg
clc
pop
cs
add
pushl
add
les
push
push
mov
lods
jb
add
loope
orb
push
pop
xor
or
clc
mov
bound
shl
mov
ja
mov
call
decb
adc
cld
loope
mov
aad
aad
cmp
nop
or
dec
sub
es
cli
push
test
fdivrs
inc
ljmp
loopne
add
add
dec
jmp
jle
push
cmc
mov
lock
cmp
loop
push
inc
into
push
push
outsb
test
fidivs
cmc
call
or
push
mov
ret
lcall
gs
add
inc
jbe
mov
lock
adc
or
pop
xchg
fdivp
movb
inc
aad
mov
rclb
cmp
fsubrs
inc
sbb
add
sbb
hlt
decl
test
mov
push
aas
lahf
xchg
insl
data16
loop
pop
ss
jno
cmp
aaa
add
cmp
dec
scas
push
push
jp
mov
cwtl
sbbl
incl
xchg
adc
jg
cmp
pusha
lds
and
mov
sahf
dec
pop
jne
dec
clc
mov
mov
mov
cwtl
adc
sti
out
mov
dec
cli
call
out
rcl
nop
or
dec
fisubs
neg
xchg
aad
sti
push
inc
je
hlt
ja
xchg
sbb
repnz
imul
call
js
dec
or
cmp
jge
fs
arpl
xor
mov
popa
jp
push
mov
jmp
lgs
pop
adc
xchg
into
test
and
add
lret
loop
cmp
sub
cmp
sbb
dec
outsb
add
sbb
decl
lock
arpl
add
shrb
pop
or
jle
pushf
push
outsb
insb
imul
cmpb
imul
push
popa
fisttps
lods
push
adc
iret
in
cs
cmp
imul
mov
movsl
lock
mov
dec
sub
sbb
stc
or
cmp
mov
fs
ss
jne
xchg
mov
inc
dec
fs
les
push
pushl
pushf
jp
adc
jge
xchg
mov
enter
stos
mov
push
mov
push
lock
pusha
out
jge
addr16
jb
sbb
popf
lods
lods
aaa
mov
push
call
jb
add
adc
sarl
fstpt
imul
ds
mov
xchg
sti
mov
aaa
cld
mov
or
inc
mov
mov
adc
push
mov
dec
ja
mov
sbb
fisubrl
mov
xchg
or
xor
in
inc
cmpsl
lock
pusha
dec
adc
xchg
dec
enter
aad
jg
pop
movsl
pop
add
push
call
repz
xor
jbe
jne
fdivr
ljmp
imul
sbb
gs
ror
xor
pop
sahf
xchg
inc
dec
mov
or
outsl
inc
je
jg
jb
pop
jp
loopne
push
mov
cmp
xor
clc
jle
adc
mov
inc
icebp
cmove
lds
fmuls
fdivrl
or
push
dec
jp
test
mov
shll
xor
pop
rclb
test
je
push
or
mov
scas
jl
lcall
mov
mov
jae
data16
lret
pop
cmovno
pop
testb
mov
cmpsl
mov
inc
inc
les
lcall
inc
fs
push
sti
scas
adc
enter
scas
pop
sbb
xchg
jecxz
cs
jg
lret
test
icebp
testb
cwtl
jecxz
imul
dec
add
adc
or
pop
test
add
inc
imul
ds
call
jne
jne
jo
jno
cmp
lcall
cmp
dec
test
dec
icebp
pop
jecxz
stos
inc
fistpl
cwtl
rcll
pop
push
jp
sbb
push
dec
inc
shrl
incl
popa
jbe
rcrl
jae
loope
xchg
int
rolb
cmp
jmp
jns
push
jb
mov
cwtl
mov
popa
push
loopne
push
les
mov
jmp
dec
push
fidivl
mov
dec
push
bound
nop
jb
leave
sbb
sub
cld
mov
push
cmp
cwtl
xor
jns
dec
pop
les
inc
test
sti
fildll
mov
push
icebp
mov
pop
outsb
add
jmp
or
lcall
insb
shrb
push
movsl
add
rorb
inc
cmc
sub
and
jo
jle
rorl
dec
scas
idivb
dec
aaa
mov
jle
mov
bound
mov
jno
aad
movsb
cmpsl
xchg
ljmp
mov
jmp
ret
xor
lret
je
pop
sahf
fmull
cmp
call
and
cmp
incb
adc
int3
ret
push
inc
jb
and
gs
sub
push
or
outsl
sbb
add
loopne
inc
mov
dec
repz
push
add
cmp
cwtl
test
xor
adc
add
xlat
inc
call
into
insb
cmp
outsb
and
push
jns
jns
xchg
lcall
ret
add
jbe
data16
in
cld
pop
pusha
cltd
xor
sbb
pop
mov
jb
xchg
jge
lret
incb
push
push
xor
js
pop
icebp
dec
addr16
data16
dec
dec
mov
and
push
lret
addr16
cmp
mov
adc
mov
sbb
cli
mov
cmpsl
pusha
addb
mov
ss
jae
out
push
xchg
rcll
add
call
std
and
mov
in
sub
sub
add
dec
fcomps
push
inc
jg
and
pop
add
inc
mov
adc
sub
or
sahf
push
sub
jg
jno
test
hlt
adc
adc
or
mov
fsubrp
mov
push
dec
int
mov
loop
dec
sti
in
dec
cwtl
adc
fsubl
sbb
nop
lock
or
cmp
aaa
xlat
test
ds
dec
dec
xor
inc
mov
xor
test
repz
push
movsb
fiadds
add
cmpb
xor
mov
rol
std
subl
add
ret
ret
pop
xor
sub
sbb
addl
jg
cli
xchg
stos
into
xor
insl
pop
pop
push
and
push
imul
icebp
dec
std
int
dec
loope
adc
out
insb
push
inc
push
cmp
outsb
lock
jae
cmpsl
rorb
mov
subb
push
xor
lock
mov
pushl
sub
leave
xlat
lret
dec
inc
fmuls
dec
mov
mov
cmp
test
lods
or
cld
jge
pop
cwtl
add
dec
jmp
pop
push
outsb
mov
dec
stos
adc
jg
xor
call
jle
inc
out
push
xor
pop
sbb
rol
sbb
xor
shlb
ljmp
popa
xchg
rcr
imul
movsb
xor
inc
jbe
jle
jbe
push
dec
insb
rcr
add
lea
nop
es
call
xchg
sbb
mov
aad
loopne
mov
push
xlat
push
mov
nop
ljmp
inc
jae
push
push
pop
fbld
jle
add
mov
leave
divb
pop
pushl
xor
pop
cmp
xor
or
xor
push
inc
jl
decb
mov
sti
jns
insl
insl
inc
loope
and
sarb
pop
jl
outsl
pop
stos
mov
jb
pop
jle
stos
mov
sub
cmp
mov
jb
mov
xor
idivb
cmp
out
xor
aam
mov
push
imul
or
xchg
pop
cmp
push
outsb
jne
jno
aas
jmp
dec
jnp
je
jl
cmp
daa
loopne
jmp
fildl
or
in
test
aaa
push
int3
into
inc
jnp
es
dec
pop
jns
push
in
jbe
add
pop
mov
dec
jne
hlt
push
test
mov
test
js
negb
ja
dec
sbb
mov
push
cli
jg
mov
ss
outsl
jecxz
pop
shll
int
add
mov
xor
mov
js
ljmp
jno
dec
addr16
add
inc
push
cmp
add
or
sbb
aad
stos
inc
in
das
lea
stc
fcomip
ss
jp
inc
jo
mov
push
push
dec
push
lods
sti
lcall
cwtl
push
inc
outsb
les
fcmove
dec
cld
test
dec
jecxz
cmp
loop
add
pop
mov
dec
ret
data16
les
jecxz
pop
daa
inc
lods
outsl
jp
adc
lahf
pushf
and
enter
call
add
mov
imul
inc
dec
inc
inc
add
inc
iret
test
fildll
sarl
sub
and
rcrb
mov
ficoms
js
inc
js
and
enter
jmp
jbe
push
mov
iret
sub
andl
in
clc
xchg
or
sti
clc
inc
xchg
daa
enter
loopne
xchg
jmp
loope
lock
push
cmp
inc
adc
xchg
in
shll
ljmp
dec
inc
push
adc
in
lret
xor
sbbl
push
ss
in
pusha
out
cmpsl
jecxz
pop
flds
ss
ja
fcoms
cmp
clc
sbb
ret
addr16
push
inc
push
inc
cmp
push
dec
rol
xor
decl
ja
js
imul
or
inc
push
jle
xchg
imul
push
repnz
orl
arpl
inc
int
sar
xchg
cmp
inc
out
xor
xor
mov
xor
xor
out
mov
shll
out
mov
dec
imul
cwtl
jp
pop
lods
pop
aam
cmp
aam
call
ret
stos
or
inc
dec
dec
mov
inc
cmp
cmp
ret
icebp
mov
jg
push
jmp
inc
fistl
pop
xchg
mov
pop
push
rclb
scas
mov
dec
nop
addr16
dec
pop
push
cmp
mov
sbb
fs
stc
mov
shll
sti
jmp
xor
pop
lods
cld
and
push
aam
aas
fldl
mov
in
js
xor
sub
xor
filds
xor
incl
mov
imul
xchg
scas
jecxz
or
or
js
lahf
sbb
jno
jo
push
stos
adc
ja
imul
je
mov
andb
mov
push
sub
or
inc
xchg
into
mov
in
jb
mov
jl
loopne
sub
hlt
stos
pop
roll
pop
dec
inc
xor
sbb
fimull
loopne
lcall
sarb
mov
jnp
dec
cmp
jle
mov
gs
dec
mov
mov
add
and
inc
jecxz
mov
mov
push
pop
int3
inc
inc
jne
dec
fs
filds
nop
movsb
adc
xchg
adc
ror
dec
push
das
clc
pushl
jae
movsl
mov
or
lahf
sti
insl
into
cmp
fwait
push
out
xor
sub
fbld
cmc
mov
lahf
xlat
xor
or
sub
push
fadds
aaa
inc
push
call
inc
leave
mov
clc
add
lcall
sub
push
mov
mov
mov
mov
sbb
shlb
repnz
roll
sti
and
push
cmp
dec
sti
in
insb
mov
adc
dec
xchg
and
lcall
mov
pusha
sbb
mov
int3
sbb
dec
stos
adcl
dec
mov
ljmp
mov
pop
and
mov
fnstsw
lret
inc
sahf
inc
insl
push
xor
xchg
les
out
out
xor
mov
jmp
out
lcall
inc
xchg
mov
push
add
ret
cmp
enter
fistps
les
or
out
hlt
mov
lret
mov
lcall
mul
mov
enter
and
imul
dec
push
insb
and
mov
adc
movsl
sarl
push
or
je
jmp
das
pop
push
outsl
movsb
pop
movsl
das
movsl
aam
push
add
shr
inc
testl
fdivr
sub
sar
cmpsb
xchg
jle
xor
hlt
jg
or
mov
sbb
pushl
pop
icebp
or
ficoms
imull
mov
inc
sti
fsubs
xchg
jne
and
cltd
les
ljmp
dec
dec
pushf
jg
lock
push
xor
xchg
or
cmpb
movsb
aad
jmp
mov
or
mov
push
push
repz
cli
mov
sub
add
jl
lods
fistpll
les
lcall
les
jg
faddl
les
stos
imul
dec
je
and
repnz
push
add
bound
push
cmp
sbbb
loope
xor
xor
pushl
and
sarl
in
sbb
and
js
and
test
daa
outsb
jne
or
jnp
push
jbe
fwait
dec
dec
inc
dec
inc
add
and
enter
call
dec
movsl
add
in
stos
ss
into
cli
xlat
test
mov
clc
aas
pop
or
inc
call
jp
adc
xor
inc
adc
outsb
push
jne
dec
fisttps
and
mov
xchg
hlt
dec
cld
ljmp
jne
cmp
and
fs
in
add
roll
into
mov
adc
les
jg
push
aaa
push
insw
inc
ret
sub
imul
dec
cli
sub
jg
jle
or
packssdw
ret
push
mov
cltd
jl
xor
gs
rcr
outsb
adc
add
push
dec
data16
xor
and
rorl
ljmp
add
and
or
or
pop
pop
pop
pushf
and
or
pusha
ds
repz
adc
nop
in
or
add
ljmp
jo
imull
pop
and
push
cmp
inc
mov
cli
call
es
adc
aam
add
js
roll
push
pop
sub
xor
fs
push
std
sub
outsl
push
sbb
dec
dec
xor
mov
push
rolb
das
inc
mov
sbb
mov
dec
insl
aad
dec
pushf
scas
mov
or
and
repnz
rorl
int3
jnp
sbb
xchg
ret
mov
mov
sbbb
hlt
add
mov
imul
bound
xchg
mov
xchg
ja
pop
push
pop
movsl
fs
ljmp
mov
insb
inc
jb
jp
bound
scas
push
mov
addr16
call
inc
add
outsl
fidivl
push
movsb
mov
xor
in
xor
lock
data16
dec
dec
pop
pushfw
cwtl
scas
mov
add
insl
aaa
add
or
inc
aaa
xor
out
hlt
dec
imul
mov
outsl
and
mov
icebp
xor
mov
repnz
lea
mov
popa
inc
inc
xchg
repz
sbb
cmp
push
inc
fnstsw
aaa
decb
push
jo
insl
insb
mov
sbb
jg
jmp
mov
jge
ret
cltd
repnz
and
and
outsl
stos
mov
cwtl
imul
imul
jo
jne
sahf
iret
cwtl
je
dec
stos
xchg
js
dec
pop
sbb
lock
inc
mov
pushw
popa
jno
bound
lret
movsl
into
adc
and
test
or
lcall
aaa
andb
xor
xchg
je
std
adc
and
fwait
jns
shlb
mov
lret
adc
dec
adc
push
decl
jg
jae
jbe
xchg
pop
cmp
es
add
testl
movsl
jecxz
imul
adc
push
ja
ljmp
fnstcw
mov
pop
fisubrs
dec
test
push
call
fwait
out
mov
jmp
jno
inc
pushf
mov
and
sbb
push
dec
dec
popa
or
jg
fisubrl
mov
into
imul
shll
imul
mov
mov
mov
jnp
cmp
dec
push
pop
mov
mov
outsb
insb
xor
jmp
ret
in
jns
cli
push
mov
arpl
sbb
sbb
ds
rclb
out
iret
inc
inc
sbb
imul
mov
shrb
shlb
movb
cmp
or
push
ret
arpl
inc
push
sar
pop
xor
push
push
imul
cmp
jmp
push
scas
dec
lcall
or
push
cwtl
mov
ss
fisttps
loop
int3
and
dec
fbstp
pop
scas
adc
dec
mov
inc
fs
ljmp
data16
ds
dec
pop
dec
ds
jp
fxch
sarb
xchg
xor
jmp
mov
insb
cld
mov
mov
ret
mov
dec
pop
fs
fisubrs
ljmp
les
ja
addb
fs
xor
je
mov
push
shrb
dec
sub
in
pop
cmpsl
movsb
std
es
stos
mov
xor
pushl
or
jl
pushf
je
and
or
inc
mov
pushl
mov
sub
sub
shrb
push
pop
adc
in
jb
incl
addr16
stc
es
mov
sbb
lods
add
lds
mov
popa
cmp
decl
sbb
shrb
add
add
push
sbb
loopne
sahf
imul
pop
xor
sub
push
xchg
aas
adc
cmp
incl
xlat
fimuls
adc
sub
jge
xchg
lret
outsl
inc
cltd
cs
mov
les
cmpsb
pusha
add
add
ficomps
xchg
push
mov
or
gs
push
mov
xor
pushl
and
stos
clc
adc
bound
add
dec
xor
and
adc
mov
scas
sub
sahf
shll
aaa
mov
push
iret
aaa
cwtl
mov
push
add
cwtl
xchg
xchg
cmp
cs
or
adc
cli
mov
pop
ret
add
add
in
std
test
imul
xor
mov
pushf
pusha
shll
or
xchg
lock
adc
push
cmc
mov
pop
in
or
dec
pop
cmp
cwtl
push
lods
sub
in
jp
inc
push
jmp
xchg
clc
jecxz
pop
mov
jmp
jl
ljmp
call
pop
jp
mov
je
push
push
push
or
or
loopne
loope
add
decl
roll
adc
scas
test
mov
ds
push
mov
sbb
cmp
decl
std
repz
int3
nop
clc
dec
inc
addb
and
pusha
scas
mov
xchg
subb
in
adc
movsb
inc
test
pusha
or
daa
inc
mov
sbb
in
aaa
enter
jmp
enter
mov
and
jp
add
lea
mov
sti
xchg
adc
decl
xchg
pop
arpl
add
push
js
fs
adc
decl
lds
sbb
jp
add
shrb
dec
test
stos
pushf
popa
add
xor
cmp
incl
inc
outsl
ficoms
adc
inc
adc
test
incl
into
or
sbb
aaa
mov
insb
jno
inc
push
pop
push
xor
mov
sbb
mov
jns
dec
jmp
jno
push
enter
push
iret
jmp
add
decb
push
push
adc
mov
stc
pop
jo
cwtl
add
and
add
cld
cmc
add
adc
cmc
inc
adc
test
leave
pop
int3
mov
je
lock
xchg
enter
jns
subb
call
rorl
rcrl
add
push
pop
jo
lret
ret
xor
sbb
dec
das
mov
or
outsb
pop
call
ficompl
icebp
add
mov
xor
out
inc
xor
pop
jo
and
outsl
cli
fcoms
push
push
rcrl
jge
movsb
popf
mov
fwait
pop
ret
sub
push
push
push
jp
jecxz
jns
or
add
xchg
xchg
push
add
dec
xchg
jae,pn
cmp
mov
mov
dec
pop
xor
cld
int3
cmc
pop
fadds
hlt
or
dec
jmp
icebp
sbb
jmp
enter
add
adc
mov
arpl
or
ficoml
add
xor
dec
pop
iret
out
inc
sbb
or
mov
xor
dec
ljmp
jle
popf
in
add
xchg
idivb
mov
orb
mov
add
incl
call
negl
jecxz
mov
inc
loopne
inc
loope
jnp
arpl
or
shll
jmp
shrb
or
cmp
ffreep
pop
cmp
jb
ljmp
jnp
mov
or
push
xor
nop
pusha
lldt
int3
insb
dec
mov
inc
sbb
je
jle
mov
out
mov
add
or
shlb
pushf
into
pop
xor
aaa
std
ljmp
sub
xor
cmpl
lcall
dec
mov
call
jno
leave
or
and
inc
add
lcall
lods
dec
or
lcall
lods
jne
pushf
int3
push
jg
jl
sub
mov
loopne
lcall
stc
ret
fs
push
bound
jb
adc
sarl
ret
stos
shrl
mov
adc
idivb
mov
es
push
leave
adc
adc
jle
and
pop
cmp
jbe
cmp
xlat
sbb
mov
ss
addr16
sub
mov
out
xorl
xor
add
push
sub
mov
clc
movsb
push
jp
sub
cli
call
adc
and
lret
fwait
sbbl
out
inc
jecxz
or
iret
gs
add
and
jb
aaa
imul
inc
imul
adc
mov
outsl
xorl
mov
pop
sbb
inc
fwait
das
pop
arpl
xchg
andl
out
mov
pop
jle
loop
daa
pusha
jno
dec
pushf
ret
mov
outsl
push
cld
js
push
xor
test
out
cmp
pop
adc
ret
push
pop
mov
out
pop
rorb
xor
jne
leave
push
fistpll
xchg
clc
cs
rclb
popa
mov
mov
pop
xor
jae
jns
mov
mov
aam
jg
jmp
outsb
repnz
add
sbb
pusha
jecxz
mov
fwait
jmp
xor
and
repz
dec
jb
adc
imul
dec
inc
loopne
mov
add
lods
in
cmp
lahf
sub
stos
scas
enter
mov
and
xchg
sub
icebp
dec
stos
fisttps
andb
lea
dec
shrl
add
ficoms
roll
call
and
jnp
jg
add
push
ja
dec
push
cmpsb
ficompl
les
mov
pop
or
into
loopne
fwait
lods
jecxz
mov
push
inc
jle
dec
xor
xor
dec
ja
dec
in
jg
jb
xchg
pop
push
int3
cmpsb
mov
aam
aad
ret
and
or
mov
cli
and
mov
mov
add
dec
jle
icebp
and
inc
cmp
dec
xor
ljmp
xor
jecxz
movsb
js
je
jmp
jmp
lods
outsb
sub
sbb
icebp
jmp
and
push
or
nop
aaa
dec
addr16
xchg
dec
shlb
mov
lods
movsb
cmpsb
call
scas
add
imul
fistps
cmpsb
lock
loopne
ret
inc
jno
add
sbb
std
out
or
and
push
jns
sbb
lea
lret
mov
insl
push
add
rep
lret
pop
repnz
xor
inc
dec
jb
and
aaa
cld
ljmp
jne
enter
out
sub
mov
inc
arpl
mov
jb
inc
jns
lret
xor
jmp
das
adc
aad
xchg
punpckhdq
sub
push
xchg
xor
push
rsqrtps
dec
jb
lods
dec
sub
rcll
hlt
and
add
call
mov
call
mov
ret
pop
xor
lret
cwtl
lea
mov
bound
sub
bound
sbb
pop
pusha
in
mov
inc
call
adc
clc
fadds
jns
mov
mov
inc
movsl
push
das
mov
popa
out
shrl
mov
rcll
or
sbbl
loopne
adc
sub
repnz
lea
mov
push
push
xor
je
sar
repnz
or
inc
jmp
jle
decl
xor
jg
cmpsb
int3
das
sarb
mov
into
lcall
inc
or
fadd
pop
js
orb
fildll
ljmp
cs
mov
cmp
cwtl
and
es
fiadds
add
shlb
dec
js
adc
cmp
jbe
pushl
ss
dec
jmp
mov
ret
adc
ret
jg
jmp
test
push
test
push
dec
pop
mov
test
adc
addb
jmp
nop
aaa
sbb
dec
lea
rcl
loope
cmp
add
popl
cmp
cmp
sub
sub
pop
cwtl
in
push
jns
lahf
or
adc
test
pop
insb
mov
mov
jge
addl
mov
xor
jmp
std
pusha
ljmp
inc
lock
xchg
add
add
jbe
aam
jnp
sarb
push
jle
imul
adc
or
mov
pop
loopne
pop
push
or
or
dec
push
movb
add
in
push
jo
mov
in
inc
lcall
add
andl
dec
pop
add
jg
orl
jecxz
aad
decl
xchg
pop
mov
pop
lret
jns
out
in
mov
loopne
out
lcall
ljmp
mov
je
jb
adc
roll
jle
enter
jmp
sar
loop
test
lret
mov
imul
jge
movsb
and
js
outsb
lock
xchg
clc
insb
xchg
xor
mov
xchg
enter
hlt
mov
sbb
lret
sbb
movsl
sub
ljmp
cmp
pop
push
ret
adc
dec
mov
xchg
push
xlat
pop
incl
add
int3
shrb
jmp
in
mov
incb
mov
aas
xor
sbb
cs
jmp
xchg
sbb
or
add
xor
cmp
push
jmp
dec
int3
add
pushl
sub
inc
sbb
add
jo
jge
mov
jg
sahf
je
xchg
sbb
mov
inc
dec
or
cmp
loopne
sbb
je
in
daa
imul
icebp
push
mov
pop
push
daa
and
inc
xor
jb
fnsave
xor
sarl
cli
incl
inc
inc
nop
jmp
inc
aad
pusha
sub
xor
inc
rcll
pusha
mov
or
mov
or
jmp
lret
add
mov
imul
xor
shlb
pop
cmp
movb
and
sahf
loopne
jle
adc
xchg
std
or
les
jg
jo
shlb
ss
cmp
cwtl
or
clc
pop
js
popf
das
jecxz
jle
sbb
cmp
js
sbb
push
mov
or
adc
jnp
adc
andl
nop
rcrl
pop
cmpsb
and
decl
shl
ret
sub
cs
loopne
pop
dec
aaa
or
roll
jg
jbe
add
and
push
cmp
sub
xchg
pop
je
mov
test
fcoms
lcall
pop
or
lcall
xor
xor
sarl
mov
in
push
cmc
push
cmp
adc
add
and
inc
nop
add
ljmp
mov
dec
int
mov
adc
lock
mov
mov
popa
jbe
add
push
test
mov
lods
adc
ficoml
mov
sbb
jp
sbbb
sbb
dec
add
das
or
incl
ja
mov
mov
add
sub
mov
and
repz
andb
call
ret
mov
fisttpll
mov
mov
dec
inc
inc
sbb
out
scas
stos
pop
add
jecxz
insb
call
setae
leave
add
popa
push
fs
clc
call
cmpb
scas
ljmp
mov
das
repz
mov
daa
dec
mov
jbe
jl
aaa
std
fldt
repnz
ss
and
repnz
orl
mov
mov
das
cld
aam
dec
idivl
lcall
inc
stc
mov
lcall
pop
test
sub
pop
in
int
ret
sbbb
decl
xor
shrl
js
push
and
adc
sbb
inc
inc
sub
decb
mov
js
push
cmpsb
pusha
ret
stos
mov
or
inc
mov
pop
lock
mov
stc
add
ljmp
cmp
mov
pop
cmp
into
lcall
ljmp
inc
mov
sbb
pop
sbb
mov
lock
add
call
jne
inc
mov
add
gs
sti
push
inc
add
jl
lock
incb
mov
rcll
mov
pusha
or
into
pushf
add
fcmovbe
sti
in
jo
inc
fwait
or
mov
adc
cmp
mov
adc
subl
nop
mov
push
js
repnz
mov
add
mov
arpl
jmp
cld
cli
push
push
lea
mov
sub
push
mov
jp
add
lret
lock
je
push
sub
scas
add
icebp
sbb
adc
dec
xchg
popa
std
xchg
test
filds
ljmp
aaa
ja
jl
push
xchg
pop
xlat
inc
lret
or
fisttpll
ss
cmp
or
cmc
dec
lds
aam
fwait
mov
out
dec
mov
enter
cltd
and
jns
idivl
mov
lret
mov
aam
jmp
fsts
stos
cmpsb
inc
mov
pop
push
sahf
out
and
jns
rcrl
ljmp
ficompl
icebp
repnz
stc
mov
test
sar
ljmp
incl
fiaddl
test
mov
stos
insl
cmp
pusha
push
jmp
stc
sub
inc
in
xchg
push
int3
jae
push
int3
pop
sahf
add
cmp
imul
decl
jecxz
dec
xchg
jle
mov
pop
dec
in
add
lods
clc
pop
dec
xchg
addr16
push
dec
in
xchg
lcall
ja
inc
sub
aaa
loopne
sbb
std
scas
aam
movsl
pop
hlt
scas
or
pop
pop
dec
mov
test
sub
mov
jns
int3
mov
dec
jg
mov
dec
lea
cmpsb
aas
mov
lods
call
cmp
cmpsl
lahf
mov
pusha
push
pop
and
mov
adc
jp
push
inc
mov
ret
test
out
lcall
fistl
cmp
fdivrs
sub
push
xchg
and
mov
jb
inc
jno
rorb
or
sbb
adc
lods
pop
xor
outsb
cmp
hlt
sbb
lds
pop
and
inc
xchg
mov
add
adc
cmp
dec
popf
pusha
mov
sub
enter
lcall
xor
int
stc
push
add
or
push
mov
adcl
insb
mov
decl
or
and
xor
sub
push
jo
clc
xor
stos
not
add
pop
pop
dec
xor
push
lcall
shl
loopne
dec
hlt
loopne
loopne
add
flds
or
xchg
cmp
add
jg
ret
call
sbb
lcall
les
ret
lea
pushl
xchg
and
shl
inc
push
out
stos
mov
fiadds
cmp
bound
rcrb
cld
test
testl
scas
incl
jns
loope
dec
inc
in
arpl
xor
insb
cmp
cmp
lret
lcall
setl
aad
xor
cmp
ret
mov
cmp
dec
stc
xchg
flds
sub
cs
dec
fidivs
insb
xchg
cwtl
call
decl
aam
insl
push
xchg
adcl
jae
mov
push
pusha
lcall
push
sbb
inc
add
push
adc
add
pushf
xlat
scas
xchg
ljmp
inc
or
xorps
mov
jo
push
call
dec
sbb
push
and
and
decl
xor
mov
scas
add
and
lods
jne
jg
aad
pushl
mov
xor
popa
xchg
sub
cli
test
cmp
fsubrs
loopne
jle
rclb
lods
ljmp
xchg
addr16
xchg
mov
add
fsubs
cmpsl
jno
mov
loopne
popa
leave
xchg
dec
mov
adc
jb
dec
push
mov
and
push
and
call
pop
adc
sub
std
bnd
icebp
scas
pop
loop
loopne
dec
sarl
sbb
int
iret
ljmp
andb
add
dec
sub
add
movsl
loope
imul
scas
movsl
xchg
pushl
sbbb
jbe
push
in
scas
jl
cmp
bound
iret
divb
insl
cmpl
jp
and
subl
test
ret
std
push
call
xchg
cli
push
movsb
dec
mov
loop
mov
cmp
adc
test
xchg
in
loope
sub
out
in
ljmp
mov
pop
add
lret
xor
adc
scas
shll
cmp
dec
test
or
mov
push
pop
addl
mov
push
popa
lods
ja
xacquire
xchg
ss
cli
ljmp
pop
insb
stos
sbb
test
xchg
cmp
enter
scas
scas
push
cmp
mov
lar
mov
sub
js
pop
pop
clc
pop
mov
fmul
rcrl
pop
subb
stc
mov
mov
mov
pushl
out
lea
outsb
or
movsb
inc
add
je
mov
pop
cmpsb
int3
cmc
mov
pushl
cmp
mov
lahf
rol
out
fcoms
mov
cs
int
js
sbb
incl
je
daa
push
data16
mov
cld
cld
inc
fcmovbe
arpl
test
lea
out
imul
cmp
mov
aas
das
stos
hlt
sahf
pushf
andl
incl
filds
rolb
lods
push
sbb
lods
sbb
xchg
add
addb
or
or
push
mov
mov
packsswb
repnz
lcall
cmp
or
les
sbb
dec
xor
sbb
add
ret
lcall
inc
call
add
push
adc
xorl
cs
mov
mov
aas
daa
int3
lcall
fstp
push
xor
lret
sahf
inc
mov
call
in
sub
incl
jmp
sbb
jne
mov
dec
and
cmp
cld
decl
add
or
popa
ja
lret
cmp
or
jo
fstpt
mov
pushl
shrb
insb
xor
call
fldenv
or
xchg
in
sbb
xchg
or
cmc
and
push
movsb
cld
inc
push
sub
mov
bound
push
inc
ret
adc
mov
lcall
daa
xor
sbbl
xlat
sub
adc
mov
mov
and
inc
add
clc
adc
cmp
xchg
adc
jmp
push
xlat
int
or
out
and
sarl
aas
leave
rorb
jae
jmp
inc
gs
add
rolb
fstp
or
mov
xchg
dec
test
cmp
xor
xchg
lods
fsts
lods
jbe
mov
push
pop
sub
xchg
rorb
mov
data16
decl
scas
imull
sub
lcall
dec
je
bnd
movb
xor
pop
leave
sub
leave
xchg
push
pop
js
icebp
and
lcall
mov
popa
mov
movsb
dec
jecxz
xchg
adc
or
push
mov
lret
sahf
cmpsb
sar
ljmp
js
sbb
stos
aaa
pop
xor
in
rcr
push
loope
movsb
and
loopne
push
mov
jbe
inc
daa
mov
insl
ret
fisttpll
cmpsl
inc
dec
lds
add
push
xor
aam
ds
mov
add
in
shrl
dec
sbb
daa
cld
ret
inc
xor
aaa
dec
mov
dec
push
push
es
inc
sbb
lcall
iret
mov
hlt
mov
cs
ljmp
sar
out
sbbb
push
shl
fsubp
pusha
mov
xchg
rcrb
imull
lock
insl
ljmp
xor
mov
jbe
mov
or
xchg
orl
or
call
jns
add
aam
xchg
gs
push
ret
jge
dec
dec
inc
clc
fisubs
imul
inc
jne
fstps
and
insb
adc
cmp
mov
fmuls
ss
lcall
pusha
mov
out
cmp
cmp
ret
daa
ljmp
test
subb
pusha
sub
and
loop
inc
daa
sbb
pop
or
fcoms
xchg
mov
test
xorb
repz
cmp
add
cmp
jmp
inc
dec
outsl
dec
pop
cmpsb
lods
gs
dec
outsb
inc
push
adc
inc
stos
add
xchg
lahf
push
cmpsl
loopne
mov
shl
jo
sub
lret
push
cmp
xchg
push
stos
and
insb
out
sub
mov
mov
mov
adc
dec
clc
ret
das
jmp
ficompl
push
outsb
test
pop
clc
cmpb
lea
inc
test
out
rcr
hlt
and
cmp
or
or
decl
mov
je
into
xchg
adc
ficoml
fisubrs
pushf
or
std
out
xor
xor
scas
nop
xchg
stos
sbb
lds
daa
mov
ror
or
cmp
in
fcoml
xorl
jg
cs
adc
and
sti
sbb
mov
add
mov
pop
clc
call
ljmp
icebp
jnp
les
das
dec
jbe
jb
outsl
mov
loopne
xchg
jle
lcall
mov
mov
and
call
mov
xchg
pop
sub
pop
mov
adc
scas
loope
dec
and
loopne
xchg
push
xchg
dec
ja
push
aas
adc
lock
out
adc
shrb
sbb
decl
mov
outsb
icebp
cltd
jae
or
ret
adc
pushl
or
inc
dec
test
dec
adc
add
test
mov
jecxz
dec
dec
lret
xor
jns
loop
xchg
adc
or
ret
or
ds
gs
inc
stos
adc
push
outsb
popa
scas
lods
sbbb
dec
loopne
and
clc
jg
dec
sub
dec
imul
lock
repnz
jg
decl
jo
xchg
std
mov
repnz
mov
data16
and
dec
add
and
inc
inc
push
sub
xor
cmp
and
call
std
filds
ret
lea
repnz
adc
in
ja
rorb
xor
adc
es
xor
addb
pusha
mov
and
mov
add
cmp
dec
push
push
cli
mov
inc
das
inc
js
sub
das
xchg
mov
xor
insb
add
pop
mov
jmp
jle
adc
and
jmp
arpl
ja
ret
inc
into
into
adc
push
push
xchg
inc
incl
push
test
xchg
mov
lea
pop
xchg
push
pop
cltd
xchg
mov
inc
push
jecxz
shl
sbbb
gs
dec
xchg
ret
aaa
jmp
dec
dec
shr
dec
dec
dec
jnp
not
mov
and
lods
cwtl
ljmp
cli
jg
in
clc
test
in
xor
jl
cli
sti
xchg
jno
lds
mov
fcom
jns
fistpll
in
mov
mov
mov
mull
cmp
popa
add
inc
fimuls
push
push
push
ljmp
or
mov
inc
dec
mov
int3
mov
xor
push
pushf
decl
pop
lret
mov
out
lods
rclb
push
enter
dec
mov
push
and
decl
cmp
pusha
or
and
leave
jae
push
hlt
scas
jo
mov
push
mov
js
sbb
jo
push
inc
jg
xor
push
testl
sbb
xlat
sub
lcall
mov
leave
enter
adc
mov
fs
push
loopne
cli
jmp
nop
daa
mov
lret
inc
jo
and
dec
and
popa
fsubs
ljmp
lods
mov
pop
dec
and
lock
in
push
lcall
adc
lods
jl
and
xchg
mov
fs
xchg
pop
mov
sbb
jb
orb
pop
mov
call
jae
inc
lea
jo
push
pop
fwait
xchg
xchg
push
out
add
mov
xor
pushl
push
jg
leave
sbb
cmpsl
add
sti
orb
and
cmpb
mov
and
sar
js
arpl
xchg
cmp
test
shll
add
lcall
pop
add
push
enter
das
ljmp
jle
loopne
cld
xchg
rclb
sbb
inc
fbld
inc
mov
out
cld
jo
xor
xchg
mov
jbe
mov
and
andb
loope
test
ja
pop
pop
and
sbb
jp
int3
fbld
and
jg
lock
out
pop
push
ljmp
mov
jo
push
and
nop
bound
push
jg
gs
into
xchg
orl
cld
lret
aaa
fbld
testb
mov
inc
mov
push
sbb
pushl
or
pop
pop
ret
dec
mov
jb
nop
jecxz
loop
add
incl
js
lods
pop
shrl
ret
pop
test
sahf
xorb
rcrb
filds
outsl
sbb
jg
cltd
int3
enter
adc
rolb
in
push
aam
std
loop
xchg
push
pusha
cwtl
dec
jmp
sbb
cmp
rclb
xor
xor
or
adcb
scas
push
sub
mov
adc
pop
push
mov
jae
sub
lret
xchg
adc
sar
fwait
sub
or
test
pop
lods
add
fcomps
add
inc
lcall
and
iret
push
pop
leave
pusha
or
add
and
mov
adc
test
or
pop
dec
pop
rcrb
sti
fs
popf
bound
rol
mov
mov
fs
jmp
shll
sti
mov
test
or
cs
aaa
dec
jecxz
fcomip
loope
or
das
push
or
push
and
je
addr16
insb
mov
pushl
add
insb
add
dec
xchg
and
inc
or
push
neg
les
pop
popa
clc
xchg
addb
in
lods
mov
sbb
lret
imul
cmc
and
jnp
mov
jmp
ret
movsb
jo
fcomip
push
clc
cmp
lods
push
push
push
jo
dec
add
cmp
jecxz
inc
push
adc
call
test
mov
adc
orb
pop
ss
insb
sub
lock
fcomp
fsubrs
lock
test
nop
repnz
and
lcall
icebp
es
sbb
cs
xchg
cmp
cmp
cmp
movb
and
mov
imul
lcall
pusha
loope
insb
adc
aad
popf
pop
rolb
out
sub
adc
fwait
call
inc
cmp
dec
push
xor
shr
lahf
xchg
lds
fidivrs
add
fdivs
cli
lcall
add
mov
inc
pushf
pop
movsb
adc
out
adc
push
cwtl
sbb
movsb
out
dec
and
or
fnclex
clc
xor
push
mov
leave
xor
es
mov
call
pusha
sbb
xchg
jb
or
xchg
pop
or
dec
pushf
gs
ja
stos
rclb
jl
cmp
test
call
popf
btr
mov
push
cltd
mov
in
inc
testb
sti
dec
call
and
cmp
cld
sub
mov
add
out
xor
push
pop
in
movsb
insl
xor
lds
in
add
and
fnstcw
or
add
and
jo
out
push
mov
sbb
add
mov
mov
or
pop
incb
mov
mov
inc
inc
loop
leave
dec
push
out
lret
or
rol
popa
loope
xor
push
gs
cmp
rolb
mov
mov
loope
xchg
icebp
in
mull
mov
mov
shll
in
xor
addr16
xchg
stc
jp
adcl
js
pop
sbb
xchg
jle
pop
jg
xchg
add
call
out
cmp
push
ljmp
mov
sbb
xor
mov
pop
jne
jl
aam
sbb
icebp
mov
mov
dec
pop
jo
jmp
nop
lock
clc
mov
sti
test
inc
cmp
stc
mov
mov
jne
cmc
inc
sbb
lret
jle
stos
repnz
push
sbb
ljmp
xorl
ss
bound
nop
mov
dec
lock
sub
pop
imul
fbstp
cmp
mov
jp
int3
sarb
jno
add
es
inc
imul
sub
jo
jo
inc
add
lcall
mov
shlb
inc
in
and
leave
aam
cwtl
xlat
sbb
mov
mov
leave
ror
xor
es
xor
push
ljmp
xor
out
shll
js
rol
rolb
pop
subb
or
mov
mov
or
mov
test
sub
push
inc
popa
inc
inc
enter
pop
lods
adcb
inc
mov
xor
movsb
pop
sbb
mov
cmc
addr16
mov
or
popf
inc
insb
stc
sbb
daa
enter
sbb
ljmp
test
ljmp
mov
test
mov
sbb
scas
or
lcall
jmp
xor
sub
xchg
gs
mov
dec
das
xchg
fxch
mov
sahf
loop
decl
in
out
mov
mov
jp
lock
jp
mov
pop
js
repnz
loope
jg
mov
add
pop
push
inc
out
cmp
push
add
call
mov
mov
or
shlb
icebp
in
out
mov
loope
push
loopne
decl
lret
mov
and
insl
pop
icebp
outsb
aam
inc
gs
jl
loope
incl
addb
xchg
xchg
roll
xlat
lock
dec
sbb
pop
lods
data16
pushl
and
inc
pusha
call
lahf
pusha
ret
mov
ljmp
ljmp
push
mov
std
pop
or
and
daa
in
cli
cmp
rcl
xchg
inc
and
push
dec
call
mov
cmc
notl
dec
mov
bound
or
push
mov
ljmp
sarb
iret
andb
imul
sub
fdivrl
test
repnz
inc
mov
sahf
and
mov
push
inc
bound
lcall
mov
ljmp
loopne
sbb
mov
shl
inc
cmc
out
cli
shlb
push
fs
jae
fsubrs
inc
or
cld
fbld
mov
and
outsb
and
cmp
ret
xor
push
test
lcall
in
inc
lcall
sbb
add
pop
sub
xchg
mov
push
cwtl
movsl
or
add
mov
add
dec
push
push
iret
sub
xor
mov
cli
adcl
call
adc
les
aaa
adc
push
mov
adc
enter
call
rcrl
dec
arpl
adc
pop
in
inc
dec
test
mov
iret
jmp
dec
call
popa
ret
dec
jb
inc
roll
inc
cmpb
inc
incl
aaa
add
addb
hlt
mov
or
add
or
sar
jmp
nop
clc
mov
ret
mov
mov
dec
test
xchg
mov
cmpsl
pop
xor
jmp
std
cmp
dec
daa
fwait
xchg
push
aad
loope
cmpsl
loope
push
inc
adc
das
sub
dec
insb
mov
hlt
decl
push
cli
test
cmp
lock
mov
call
mov
or
and
jmp
mov
mov
adc
incl
jmp
cmp
or
push
and
add
cmp
push
call
pushl
fstl
imul
jmp
adc
sbb
ret
cmp
decl
outsl
mov
jle
push
cmpsl
fstps
jg
mov
and
neg
jmp
in
sbb
xchg
dec
lock
inc
jecxz
xchg
sbb
pop
pop
pop
das
dec
sub
jne
mov
std
jno
lea
lcall
mov
ffree
sub
dec
dec
adc
rorb
jo
xchg
sbb
sarl
cld
cmpsb
icebp
aad
mov
cwtl
fnstcw
jp
jne
add
pop
aaa
lahf
jo
adc
lret
xchg
xor
fistpll
test
ljmp
inc
push
dec
inc
mov
and
inc
outsb
lcall
cmpsl
add
jne
cmc
in
jae
mov
decl
iret
mov
pop
cmp
jae
mov
in
sti
jecxz
test
sti
add
pop
or
ljmp
inc
test
xor
or
and
or
jp
repz
jle
mov
fisttpl
aas
lea
lock
fisubl
sbb
push
out
insb
mov
loopne
test
fcomip
dec
stc
pop
icebp
push
adc
inc
mov
xor
xor
add
mov
jmp
xchg
mov
and
bound
mov
sub
scas
loope
ss
decl
jns
dec
fistpll
or
mov
xchg
jno
aaa
aaa
xchg
push
jne
add
call
jecxz
jno
dec
fidivs
jne
push
adc
dec
es
shrb
lcall
std
mov
add
xchg
popa
les
fildll
sarb
fisubs
jmp
lcall
or
mov
sub
xor
push
out
adc
mov
add
mov
pop
xor
decl
sub
push
test
enter
dec
faddl
mov
fadds
adc
mov
imul
push
pop
and
out
sbb
inc
testl
add
out
push
addr16
adc
into
mov
inc
mov
rorl
sahf
std
jp
jp
add
pop
scas
pushf
mov
mov
add
es
orl
sub
cs
sub
imul
sbb
and
or
push
mov
fcoms
jno
or
sar
mov
ds
add
rcrl
enter
aam
jg
or
ficomps
imul
sbb
push
arpl
into
lcall
sub
ja
xor
sub
rolb
decl
sub
movsl
sahf
cld
xchg
lods
insb
push
inc
push
in
sbb
lods
push
mov
lock
jne
jno
aaa
or
jle
lret
cwtl
aas
psadbw
mov
in
lods
nop
in
xor
popa
jp
imul
addr16
mov
lods
test
cmpb
push
add
adc
adc
push
shl
movsb
hlt
decl
lds
loop
dec
inc
cmp
gs
add
xchg
pop
test
push
lret
push
push
test
hlt
push
inc
adc
inc
push
dec
cli
mov
rcll
add
and
fldl
cli
stos
std
jmp
mov
xchg
shll
inc
xchg
cmc
cwtl
dec
movsb
pop
mov
inc
sub
mov
push
inc
xchg
add
inc
xor
pop
sbb
sub
repz
mov
or
inc
jp
and
pushl
adc
inc
jno
pop
pushf
push
shr
pop
mov
jne
les
aam
loope
cmp
incl
test
xchg
fstl
xchg
or
xchg
push
mov
xchg
xchg
mov
fldl
dec
inc
imul
xlat
subb
test
xor
xor
add
loop
sbb
add
cmp
mov
pop
add
inc
or
jg
pushf
xchg
pop
xor
data16
add
inc
jbe
icebp
jne
shll
mov
mov
je
sbb
and
or
dec
xor
jmp
mov
mov
xchg
inc
ficomps
jb
or
dec
shll
subb
lcall
jb
cltd
pushf
inc
lea
dec
int
mov
adcb
inc
cmp
fwait
pop
leave
or
inc
mov
cmp
pop
nop
pop
xchg
mov
inc
divb
add
or
cmp
enter
ljmp
cmpsb
xchg
inc
xor
cmp
mov
test
xor
add
pushf
aas
test
push
jl
push
inc
shrb
inc
mov
jp
outsb
cwtl
movsb
add
mov
pop
or
out
fs
lea
pop
shll
std
incl
test
mov
scas
and
dec
xor
cmc
aad
or
push
popa
sbb
fisttpl
popa
movsb
mov
adc
add
ljmp
jmp
add
test
jg
lahf
add
adc
adc
add
insl
mov
shrl
fwait
cmp
xlat
mov
adc
and
fmull
inc
fiadds
inc
aad
mov
insl
ds
and
nop
mov
and
jmp
cmp
sub
push
sub
out
lods
in
mov
mov
das
and
mov
xor
jae
jo
push
dec
pusha
mov
and
leave
add
incl
mov
cmp
fwait
add
stc
push
add
xor
enter
ljmp
jae
insl
add
into
cld
xlat
subl
iret
sbb
mov
outsb
or
bound
call
add
cltd
mov
add
adcl
je
shll
dec
inc
mov
imul
add
inc
call
scas
mov
add
adc
je
xor
incl
faddl
adc
into
mov
in
mov
cld
sbb
jg
push
cmp
xor
inc
and
scas
jmp
fistpl
xor
add
adc
push
ss
sub
out
ret
xchg
in
ret
std
icebp
mov
xor
test
repz
jle
sub
add
push
push
in
jg
outsb
mov
ss
imul
adc
clc
or
mov
jl
mov
xchg
adc
pop
mov
insl
addb
mov
pop
cld
lock
push
popa
loop
or
call
mov
push
mov
and
mov
popl
push
outsl
icebp
jno
pop
mov
and
dec
decl
int
push
add
sub
stos
add
pushl
icebp
mov
je
cld
fcoms
sub
inc
mov
adc
jmp
in
jbe
pop
decl
add
cmp
clc
fisubl
mov
iret
iret
mov
lds
shlb
dec
push
dec
jno
mov
data16
push
cmp
test
ljmp
and
lcall
cmp
and
out
fwait
in
ds
daa
mov
push
sub
mov
pop
call
gs
stos
lock
or
cmc
ljmp
xor
push
mov
cmp
xor
xor
in
loop
outsl
jg
mov
testb
dec
and
std
negl
jno
adc
loope
pop
inc
sar
pop
sub
sub
add
push
nop
out
xchg
outsl
gs
or
jmp
or
push
test
push
jns
cmpsl
and
aam
or
lahf
sub
mov
jbe
push
call
outsb
add
xchg
xchg
cmp
int
lods
ljmp
aaa
xchg
lods
addb
addr16
or
xor
stos
dec
or
mov
and
fadds
mov
call
ljmp
push
adc
add
mov
mov
inc
xchg
add
pop
shl
data16
lcall
jns
push
sbb
sbb
add
cmp
aas
ret
test
loopne
pop
faddl
call
addr16
iret
call
sbb
xchg
or
in
mov
and
mov
cld
mov
lock
inc
add
mov
or
mov
je
push
cli
mov
stos
aam
hlt
adc
jl
pusha
add
in
mov
sti
dec
sub
addl
add
out
push
insl
movsb
adc
push
inc
dec
jb
mov
bsf
cmpsb
lret
das
loopne
mov
mov
cmp
mov
popa
dec
lods
push
aam
pop
ret
pop
fisubrl
sbb
cltd
jo
mov
dec
addr16
mov
imul
es
mov
pop
jg
inc
call
int3
mov
loop
pushl
pop
cli
cmpb
jle
add
push
stos
dec
xchg
and
inc
pop
aaa
clc
lret
pop
inc
mov
sbb
xor
inc
das
mov
push
cld
xor
xor
cmp
and
imulb
mov
ret
call
outsl
loopne
push
mov
js
outsb
pop
in
and
repz
rolb
dec
outsl
add
mov
pop
push
enter
cli
jmp
outsb
fdivrl
call
jg
and
in
lods
jle
ljmp
outsl
hlt
or
xchg
mov
inc
jne
adc
sub
jo
and
push
jb
jmp
sbb
loop
inc
lret
insl
loopne
call
and
mov
add
jp
dec
popf
add
cli
outsb
popa
sti
adc
dec
xor
dec
ja
mov
mov
pop
pop
rolb
push
xor
test
in
repz
bound
pop
xchg
inc
pusha
cmp
push
xchg
cmp
push
fwait
cli
add
icebp
rcr
inc
inc
mov
icebp
xchg
push
pushf
sbb
add
add
cmp
xor
mov
repz
push
xchg
jno
lock
cmp
xchg
cwtl
ljmp
add
sahf
jg
jge
arpl
imul
cmp
sahf
inc
pop
fsub
ljmp
cmp
pop
imul
imul
and
add
pusha
test
mov
sahf
push
sub
pop
mov
mov
push
daa
add
pop
mov
xor
dec
dec
pop
leave
jo
loop
pushl
aaa
gs
int3
dec
mov
ret
cmp
mov
scas
push
xchg
cmp
jg
mov
mov
fisttpl
pop
int3
inc
inc
push
js
mov
iret
xchg
bound
push
pop
sbb
push
push
xchg
cmp
sti
or
inc
and
fidivl
enter
or
dec
jge
or
into
mov
jns
rcll
push
fsubr
mov
mov
sub
and
loop
mov
loopne
call
sbb
mov
sbb
in
jne
enter
cltd
ss
dec
xor
insb
jb
cmpsl
test
jne
arpl
decl
pushf
jae
cmp
mov
in
xchg
mov
or
add
dec
rcr
inc
adc
fdivrl
adc
js
inc
mov
mov
dec
cld
mov
into
dec
dec
nop
pop
mov
inc
cmp
dec
int
push
decl
jmp
ljmp
fistpll
aam
inc
mov
inc
jno
js
inc
rclb
fcoms
inc
dec
xor
jne
ljmp
daa
pop
push
inc
jmp
mov
fsubs
xchg
jmp
gs
leave
mov
mov
mov
lret
cmp
fwait
adc
xchg
push
add
jno
sar
dec
les
mov
push
xor
shr
mov
gs
inc
in
loop
outsl
mov
jg
mov
pop
ljmp
sub
stos
mov
fst
sub
orl
inc
ss
jo
outsl
call
mov
dec
xor
jp
scas
movsb
inc
and
jg
shl
lret
lds
ss
loopne
or
std
add
pop
lret
pop
xorb
hlt
iret
pop
call
mov
insb
push
inc
gs
sbb
fwait
test
inc
push
or
lcall
push
jp
mov
ljmp
inc
xor
lret
loop
xchg
inc
push
shl
push
repnz
xchg
jl
outsb
incl
jle
mov
cltd
dec
call
mulb
pop
loopne
push
and
or
jl
add
lcall
dec
push
jbe
aaa
jbe
push
adc
jg
icebp
xlat
adc
and
pop
inc
cmp
stc
jmp
xchg
push
adc
testl
insl
test
xor
fwait
cmpsb
outsl
ds
jl
daa
cmp
add
push
ds
repz
cmc
lcall
jg
leave
daa
or
inc
jae
enter
data16
cwtl
aaa
clc
dec
inc
imul
insb
jo
jg
xchg
jge
mov
lret
and
ljmp
stos
inc
ja,pn
movsl
or
subb
pop
paddd
sarb
call
lds
icebp
roll
jne
push
and
dec
jg
inc
inc
aam
aam
push
push
pop
ljmp
ficompl
or
mov
lret
xchg
jg
add
push
ss
test
dec
jbe
aam
add
dec
inc
dec
ss
call
inc
subb
and
in
cmpsb
inc
mov
imull
mov
aad
shlb
ret
mov
shrb
cld
mov
outsl
or
pusha
adc
xor
ss
fistpl
js
aam
mov
xchg
movsl
bound
fcomps
jno
ja
dec
inc
push
arpl
rcll
mov
sub
inc
sbb
fisubl
xchg
jne
dec
jne
test
inc
ret
inc
and
mov
push
cwtl
and
or
push
ret
mov
stos
pop
out
lcall
std
mov
inc
dec
repz
iret
adc
mov
outsb
xchg
sbb
sbbl
push
mov
and
jg
mov
dec
pusha
or
int
add
sbb
xor
xchg
lds
int3
inc
add
dec
inc
mov
andl
leave
adc
lock
push
or
imul
xchg
js
test
push
and
ret
dec
mov
or
and
push
push
xor
push
or
mov
pusha
sbb
and
call
pop
inc
jns
andl
adc
js
js
jmp
jnp
add
inc
xchg
sar
cli
leave
iretw
shlb
std
sbb
outsb
ljmp
xor
aas
mov
cmpsl
xor
decl
xchg
push
xor
pop
rorl
xor
sbb
stos
sub
inc
sbb
sahf
mov
cmp
js
add
adc
push
jnp
xchg
sub
add
push
jmp
dec
jno
or
fdivr
xchg
lods
sbb
nop
add
mov
or
out
out
cmp
cmp
jmp
inc
sbb
dec
mov
mov
les
xchg
xor
call
sbb
jo
xchg
inc
lret
sub
xorl
repz
push
or
sbb
decl
inc
call
filds
push
movsb
mov
fldcw
dec
nop
jge
aas
fistl
decl
jbe
jecxz
mov
mov
sarl
shrl
jg
xchg
cmp
or
cmpsb
ret
arpl
mov
rol
jae
bound
cld
outsl
adc
fcmove
leave
sbb
fisubrl
insb
dec
pushf
pop
adc
mov
and
ljmp
mov
incl
mov
jae
dec
cltd
inc
inc
test
aaa
mov
aaa
inc
scas
sbb
mov
inc
xchg
add
mov
hlt
cmpsl
inc
sti
fwait
jae
jg
loopne
pop
sbb
jbe
lcall
jae
clc
inc
adc
lcall
int
push
out
es
mov
data16
loopne
push
cmp
adc
fcmovu
xchg
int
jbe
shll
and
and
int3
pop
ljmp
add
and
ljmp
add
test
es
jg
out
sub
lret
mov
loope
pop
sbb
add
ljmp
ror
test
or
inc
sbb
sub
jnp
in
loope
decl
mov
lret
sahf
insb
nop
mov
mov
cmc
inc
fstl
and
loopne
mov
add
insb
adc
adcl
cli
pop
cmp
cltd
push
sub
mov
jo
sub
dec
dec
mov
cmp
push
jg
push
push
out
and
sub
fcomip
enter
cs
mov
stc
add
pop
out
incl
xor
pop
add
xor
pop
jecxz
cmp
out
cwtl
sbb
mov
ret
incl
cld
adc
sub
push
dec
rclb
pop
dec
sub
movsl
jne
insl
test
cs
or
mov
dec
adc
adc
pop
push
cmpl
orb
adc
out
adc
andb
jne
dec
mov
inc
outsl
cmp
dec
sbb
add
sub
jmp
insl
cmpl
and
push
xchg
adc
jne
and
cltd
fcoms
jmp
out
mov
clc
push
push
add
mov
rcrb
loopne
mov
cmpsb
adc
addb
and
adc
add
mov
iret
ljmp
sar
and
sbb
sub
out
inc
mov
push
stos
mov
lcall
dec
push
js
mov
insb
lahf
push
mov
or
inc
or
pushf
adc
sbb
and
mov
incl
loopne
sar
or
push
ja
imul
lods
inc
or
inc
xchg
sti
ret
pop
test
mov
leave
jle
mov
jb
out
loopne
loopne
ljmp
mov
cmp
imul
test
scas
mov
sbb
ret
or
sbb
rol
dec
cmc
jg
lods
lds
mov
cld
leave
cmp
int3
aad
hlt
dec
orl
jno
scas
pop
dec
aad
fisubl
lcall
push
inc
inc
mov
outsb
xor
lock
pushl
pop
fimull
dec
insb
cmc
sbb
fistpll
pop
hlt
decl
mov
stos
cwtl
push
add
pushf
mov
orl
dec
and
mov
push
aas
mov
sbb
shll
push
and
stos
xchg
lahf
test
add
xchg
rolb
dec
into
fwait
or
imul
cld
ljmp
mov
shll
test
aam
mov
aaa
jnp
stos
gs
and
push
push
cli
adc
fwait
pop
loopne
pop
xor
or
mov
dec
jnp
iret
jg
and
mov
cmp
and
cli
decl
push
inc
test
lcall
push
addr16
adc
shll
js
xor
loope
ret
pop
ja
xor
icebp
and
push
popa
lcall
into
add
incb
pop
cli
lahf
mov
push
cmpsb
xor
mov
pop
out
es
xchg
mov
fdivrl
adc
dec
fidivrl
arpl
jo
sahf
rclb
filds
outsl
fbstp
cmc
inc
dec
dec
add
out
repnz
mov
inc
add
pop
repnz
mov
jl
sub
out
dec
dec
cmp
fwait
test
mov
sub
inc
lcall
cmp
mov
popa
lret
aam
call
sbb
cs
mov
ss
cwtl
mov
nop
int3
fcmovbe
add
gs
mov
lods
gs
or
sub
dec
jg
aad
inc
mov
sub
test
sub
call
js
mov
fisubl
aas
ja
cmpsb
mov
sbb
lret
push
fsts
and
sub
push
rolb
jo
cli
mov
rolb
lret
scas
insb
sub
sti
mov
mov
pop
xchg
outsb
sbbb
dec
mov
push
dec
out
inc
imul
pushf
jmp
push
jae
outsb
scas
lock
push
mov
mov
mov
loope
popa
ljmp
pop
adc
outsb
mov
cmp
push
ja
jo
mov
dec
pop
ss
js
fsts
adc
cmp
xor
lock
mov
sbb
inc
cmp
fadds
notb
repz
add
decl
arpl
mov
or
inc
sbb
ljmp
jb
sbb
popa
xchg
ret
shrb
xor
loope
test
arpl
repz
push
jbe
fcoml
push
cmp
sub
sti
mov
xchg
out
mov
cltd
sbb
push
mov
push
add
push
xor
out
and
dec
push
or
insb
stc
xchg
ret
and
push
sbb
dec
xor
cmp
jmp
scas
clc
incl
or
sub
ds
addb
scas
mov
push
pop
mov
or
pop
lds
stc
cmp
mov
das
mov
pop
enter
in
sbb
jl
int3
xor
in
sub
lahf
dec
insb
sub
leave
pushf
into
xchg
xchg
dec
ljmp
cmp
lahf
and
cmp
push
test
pusha
xor
mov
push
push
inc
xchg
jmp
mov
jnp
pop
push
sub
je
dec
mov
inc
ds
sub
jns
stc
and
call
ret
add
sahf
sub
js
std
add
cwtl
cmp
ss
inc
adc
cmp
jmp
mov
add
mov
and
cmp
nop
popa
ret
mov
cmp
ljmp
xor
js
inc
rolb
mov
push
and
push
adc
loope
sbb
pushl
or
and
push
sub
mov
add
push
scas
lahf
sbb
ljmp
pop
mov
ljmp
add
jp
out
cmp
mov
add
cs
mov
incl
sub
or
repz
and
push
push
mov
mov
stos
pop
sbb
pop
cmp
incl
jge
or
inc
and
add
clc
adc
ljmp
jmp
loopne
lea
popa
mov
sahf
adc
aas
mov
sti
cwtl
loopne
decl
cmp
xchg
sbbb
sub
les
mov
cli
jle
cli
ret
mov
call
mov
insl
cmc
decl
pop
sbbl
insl
adc
mov
mov
mov
push
mov
cli
lcall
cmpsb
add
xor
jecxz
negb
pop
lcall
mov
pop
cmp
leave
sub
inc
cmp
out
xor
pop
or
in
imul
incl
mov
std
dec
adc
xor
xor
add
inc
shrl
stc
inc
push
xchg
pop
mov
xchg
cmp
iret
xchg
inc
imul
xchg
inc
fmulp
cmp
push
lcall
jmp
add
jne
cmpsl
push
mov
movsb
lcall
mov
daa
sti
inc
jg
sbb
and
cmc
sub
cmp
cmp
add
incl
adc
in
xchg
test
les
cmp
xchg
cld
sbb
mov
adc
sub
decl
jo
sbb
mov
add
xchg
jl
sub
jle
cmp
test
das
sar
in
xchg
rorb
adc
imul
outsb
lahf
aaa
dec
dec
lcall
fwait
mov
pop
fwait
sub
bound
and
daa
mov
fidivs
push
and
xchg
mov
lcall
jg
xchg
loope
mov
xor
cmp
jmp
repz
xchg
fsubs
mov
xchg
add
mov
jl
les
add
add
lcall
jb
insl
jecxz
call
xchg
inc
mov
mov
or
push
into
ja
or
adc
adc
xchg
or
call
popa
into
or
loope
or
xor
or
clc
add
sub
mov
add
incl
xor
xor
mov
add
push
push
inc
cmp
ljmp
jno
jne
add
dec
add
flds
xchg
clc
push
cmpsb
inc
sbb
or
fistps
test
and
or
jb
pop
test
lods
xchg
call
fsubrl
stos
dec
call
jge
outsl
pop
xchg
inc
cmp
inc
cmp
decl
lock
mov
mov
cwtl
add
mov
pop
cld
inc
mov
inc
test
mov
inc
add
je
dec
repnz
xchg
addl
scas
clc
push
fsubrl
dec
pop
arpl
sbb
cmp
std
cwtl
mov
inc
es
subb
stos
sub
fcoml
push
inc
jg
iret
xor
pop
mov
add
push
and
adc
fbstp
sub
cltd
aam
push
cmp
xchg
mull
movsl
xor
ret
xchg
inc
fdivr
ljmp
push
lea
call
pop
dec
stc
lock
mov
test
xor
mov
jb
dec
outsl
jo
add
out
push
aaa
loope
aad
mov
inc
add
cmp
jg
inc
push
push
leave
ret
dec
adc
dec
loopne
pop
inc
adc
test
mov
push
mov
pop
rolb
call
shlb
inc
pop
jnp
addr16
and
pushl
dec
cmp
sbb
into
jp
pop
adc
ja
shrl
incl
push
or
fiaddl
cmpsb
push
call
cmp
mov
mov
dec
add
mov
shll
pushl
jmp
jl
dec
mulb
push
std
jne
mov
rorb
sub
ret
call
or
mov
js
sar
insl
test
int3
sub
fistpll
mov
push
push
rorl
cmp
lcall
fstps
repz
mov
lock
fimuls
cli
push
sub
push
mov
ret
scas
pop
fxch
jmp
mov
arpl
dec
inc
inc
ljmp
mov
fnstcw
in
xchg
push
lahf
cmp
out
dec
fsubr
and
or
inc
cmp
add
and
add
and
stc
jns
inc
sahf
add
je
or
or
jne
mov
shrb
push
add
sub
jns
jecxz
enter
sbb
jns
sub
cmp
lahf
add
stc
and
add
and
add
jnp
in
dec
mov
jl
orl
add
dec
mov
mov
sub
addl
mov
pop
jns
cmp
add
cmpsb
xor
str
fdivs
jl
jg
xlat
mov
lcall
xor
dec
add
push
out
xor
sarl
scas
dec
ret
mov
push
sbb
xchg
sbb
mov
cmp
add
jbe
mov
lock
or
fs
pop
ss
jae
xchg
out
dec
inc
push
cld
cld
pusha
jg
cmp
or
int
sub
call
mov
test
inc
sbb
fldpi
pop
test
inc
fidivrs
xor
aam
mov
inc
in
pop
mov
push
ds
lret
out
dec
nop
fstps
cmp
ljmp
pop
mov
dec
aaa
adc
jno
ljmp
sbb
enter
lahf
inc
mov
sub
mov
jo
or
mov
jg
sbb
jmp
stos
sub
mov
jb
sbb
dec
cli
sbb
push
inc
clc
adc
enter
mov
push
jo
cmp
jle
ljmp
and
sti
int
lret
sti
mov
push
push
dec
fs
xor
push
loopne
pop
fsubr
lcall
loopne
shlb
fistps
mov
dec
sahf
imul
add
mov
incl
sub
jecxz
push
add
cltd
or
and
dec
xor
jns
das
adc
cmp
stc
xor
outsb
mov
xchg
in
out
in
outsl
mov
outsl
xor
push
or
lret
shl
test
adc
data16
lea
xor
inc
jns
fnop
repz
dec
ret
push
aas
xchg
lds
xchg
mov
inc
jns
stos
mov
mov
cli
test
lea
gs
xor
sub
loopne
ja
rclb
jp
inc
js
or
inc
lcall
adc
sub
js
fisubrl
xchg
push
jl
ljmp
cwtl
sbb
decl
ficomps
pop
inc
inc
sbb
cmp
loop
inc
out
inc
push
clc
inc
xchg
mov
push
cmp
test
mov
addb
xlat
loopne
call
aam
mov
and
cmp
add
jbe
icebp
mov
gs
xor
sbb
mov
or
sub
test
stos
or
je
xchg
mov
ljmp
andb
fists
int3
fadds
jmp
or
add
cmp
dec
mov
jge
icebp
flds
outsl
js
xor
repz
push
insl
xor
add
and
call
lock
mov
daa
pop
add
scas
pop
ret
aas
int
in
insb
ds
sbb
std
or
sbb
int3
mov
mov
inc
xor
cmp
movsb
dec
add
pop
add
jg
or
cli
imul
mov
push
mov
insl
sar
decl
loop
cmp
shll
mulps
bound
dec
ret
loop
dec
push
mov
dec
jo
add
fcomps
out
mov
lret
xchg
mov
imul
mov
cli
mov
rolb
enter
mov
pop
mov
inc
stos
add
jg
stos
outsl
pop
inc
dec
jno
dec
fdivl
sbb
cltd
int
flds
push
lret
mov
mov
out
push
lahf
dec
sahf
sarl
pusha
iret
mov
shlb
imul
push
xor
mov
ret
insl
xor
inc
clc
mov
mov
ljmp
hlt
or
push
repnz
mov
push
inc
pop
fldcw
outsl
inc
inc
xor
pushf
testb
push
jecxz
pop
incl
adc
aad
adc
aas
mov
or
std
imul
jle
ficomps
mov
push
push
fs
dec
dec
js
add
add
arpl
gs
daa
adc
js
push
cltd
aaa
push
call
push
and
lcall
add
cld
push
pop
fdivl
lcall
inc
add
and
adc
jae
mov
dec
test
bound
mov
dec
sbb
test
lcall
int3
call
fwait
aam
repz
call
ficoms
incl
sub
mov
movsl
stc
pop
xlat
adcb
repz
sbb
or
push
shlb
sahf
sub
push
and
mov
and
pop
dec
insl
mov
pop
push
cmpsb
inc
mov
icebp
fdiv
mov
scas
mov
xchg
and
mov
imul
mov
lcall
inc
add
dec
loop
pusha
sbb
loop
dec
mov
add
dec
xor
mov
movsl
jbe
inc
sar
jg
daa
push
sub
jmp
mov
movsb
movsb
insb
lock
mov
hlt
shr
pop
movl
dec
add
inc
mov
enter
sti
sarl
mov
xchg
rcll
mov
ljmp
pushf
int
adc
jl
xor
roll
ds
ds
cltd
outsl
lds
adc
add
orl
lcall
xor
push
push
jno
mov
jo
pusha
cmp
pop
mov
aam
decl
mov
fsubrl
dec
mov
mov
lcall
es
dec
sub
push
andl
icebp
call
and
gs
xchg
lcall
enter
mov
mov
add
mov
inc
inc
add
push
in
rclb
insl
push
imul
loope
pop
cld
call
cld
inc
mov
dec
mov
jecxz
arpl
pusha
jno
fisubrs
rcll
je
imul
push
pop
lret
icebp
cmpsb
mov
fs
mov
xor
pushf
ficoms
decl
xor
fnstcw
pop
xor
hlt
cli
sub
pop
ljmp
xchg
push
aas
push
in
clc
iret
hlt
stos
in
cwtl
lcall
pushf
movsl
aas
pop
add
inc
push
movsb
dec
mov
decl
mov
push
jecxz
int3
and
jne
xchg
inc
push
into
sub
cli
ljmp
leave
test
sub
xor
add
int
ljmp
or
cmc
loopne
pop
dec
call
cmpsb
incl
out
test
xchg
xor
lret
cltd
lret
sbb
jns
repz
jne
lds
in
pop
adcb
push
cmp
sahf
rorb
dec
pop
fadd
pop
cli
std
cwtl
dec
inc
dec
jl
ficoms
hlt
pushl
lea
or
stos
test
insb
shl
pop
xor
lcall
xchg
push
repz
xor
pop
fiadds
xor
call
nop
test
rorb
mov
push
mov
jmp
dec
out
mov
in
aad
fildl
enter
mov
ret
sbb
lcall
push
jp
xor
jmp
dec
outsl
pop
mov
xor
ljmp
add
gs
inc
sub
ret
lahf
aam
dec
aaa
outsl
fcomip
iret
aaa
push
push
fwait
cwtl
mov
mov
shr
mov
mov
cmpsb
jg
iret
lret
pop
mov
mov
int
ret
fst
mov
inc
pop
dec
stos
hlt
pop
aaa
inc
inc
or
aam
mov
ljmp
mov
lds
into
stos
and
add
cli
adc
enter
addl
sahf
es
mov
shlb
outsb
mov
arpl
adc
dec
sarb
sahf
aam
and
decl
repnz
and
mov
xor
out
jne
aam
jo
lea
xchg
dec
jp
sbb
fildll
jl
inc
es
mov
mov
xor
xchg
xor
mov
popf
imul
xor
arpl
sub
inc
outsb
and
jg
lret
xor
inc
fwait
lock
xor
adc
push
addr16
sbb
int
pop
mov
xor
xor
rcrb
inc
push
jg
fistpll
inc
push
inc
xchg
sbb
add
inc
mov
pop
push
in
and
clc
and
mov
dec
sub
je
inc
jl
push
or
dec
jae
lret
dec
call
clc
mov
sub
add
dec
out
stos
loopne
pusha
nop
nop
iret
jnp
lock
cmp
fldcw
into
adc
cld
push
ja
pop
pop
add
cmp
sub
sub
loop
sub
aas
fwait
lock
push
push
loopne
cmc
dec
imul
ljmp
add
sahf
jbe
mov
pop
pop
sbb
mov
shlb
pusha
sbb
sbb
mov
add
xlat
inc
dec
lret
and
ljmp
call
jne
outsl
jae
xor
fwait
mov
test
lods
push
mov
lret
lret
lret
stos
lods
xor
fisttpll
sub
add
adc
jne
cld
push
ret
movsb
fldt
mov
add
lret
add
test
xlat
icebp
sbb
sbb
push
inc
lds
mov
sub
jne
or
push
leave
fmuls
jl
jb
stc
dec
sahf
jnp
fimull
jmp
sbb
xor
call
mov
inc
xor
add
popa
jmp
jmp
xlat
das
imul
mov
imul
xchg
int
fsts
dec
and
out
insb
add
aaa
jne
flds
repz
pushl
xor
mov
sbbl
int
mov
inc
jmp
enter
jbe
decl
cltd
int
dec
push
cltd
push
xchg
popf
mov
adc
fsubrs
fmull
dec
jo
jp
loope
ljmp
sub
dec
inc
call
mov
xor
xchg
aam
and
fsts
sahf
inc
sub
inc
lret
cli
add
push
push
push
dec
push
js
addl
mov
pop
add
jmp
test
lea
lcall
pushl
into
xchg
push
ds
sbb
lock
inc
inc
mov
cmp
adc
and
out
das
pop
call
loope
xchg
xchg
xor
and
mov
mov
sbb
mov
mov
jle
rolb
xchg
nop
xchg
xchg
rolb
jmp
sahf
ret
jl
sub
inc
pushl
je
jmp
leave
sbb
jb
loop
adc
or
es
aam
fisubrl
sbb
sbb
xlat
dec
cmp
push
jg
xchg
sub
test
ds
rcrl
popa
mov
add
lods
sbb
push
and
or
ret
xchg
sub
mov
or
push
stos
es
xor
sub
out
ror
sahf
repnz
push
aam
lea
cli
jmp
lret
dec
jle
add
add
jmp
fidivl
push
mov
fs
dec
decl
jo
lcall
repnz
cmp
adc
ljmp
and
fidivl
or
cmpsl
and
adc
roll
mov
popa
and
xlat
fiadds
inc
adc
dec
add
fwait
iret
out
xchg
lock
mov
add
mov
fcmovnbe
mov
xchg
add
mov
jbe
daa
out
movsl
add
shlb
lock
dec
std
iret
lahf
outsl
nop
scas
ja
push
mov
add
push
ss
sar
add
cmp
cmpb
cld
pop
pop
xchg
sub
jnp
or
or
sbb
inc
filds
cmp
repz
test
inc
dec
lock
sub
aam
mov
out
adcl
mov
shlb
nop
ljmp
mov
sahf
add
insl
push
dec
and
decb
js
add
inc
add
or
mov
loop
jle
out
pusha
insb
inc
pushf
popf
ja
pusha
add
adc
sar
jmp
push
xorl
shll
shr
sub
pop
pushf
push
push
es
dec
xchg
mov
test
add
dec
mov
xor
mov
inc
mov
xchg
rdpmc
out
idivl
outsb
lods
aas
dec
das
out
lea
or
xchg
cmp
insb
dec
dec
pop
cmp
ret
inc
loopne
pop
sar
shrb
cmp
push
push
push
jg
repnz
inc
inc
ror
clc
jge
jmp
jp
divl
mov
push
fwait
ljmp
paddsb
jp
and
ja
mov
int3
shl
inc
push
push
mov
fs
or
jns
add
jg
lwpval
jns
mov
out
xchg
mov
push
xor
ja
imul
imul
data16
repnz
call
mov
clc
incl
inc
jg
mov
icebp
mov
imulb
mov
inc
push
test
cmpsb
lret
test
and
mov
cli
xor
pop
push
std
jo
add
push
sbb
aam
jl
adc
inc
push
mov
mov
fists
test
adc
ficompl
subb
pop
adc
into
cmove
jmp
ds
xchg
pop
repnz
pop
inc
repnz
jle
pop
push
test
xchg
push
xchg
xor
inc
xchg
aad
leave
add
dec
dec
and
jl
push
sbb
cld
cmp
add
lahf
add
adc
and
cwtl
fisttpll
and
add
mov
lcall
lcall
add
fwait
cmpsl
in
dec
add
inc
mov
popf
adc
push
fldl
popf
xchg
and
enter
pop
mov
je
sahf
push
sub
or
inc
ds
incb
add
mov
daa
jmp
scas
push
xchg
int3
xor
fsub
jp
xor
jmp
in
adc
sub
outsb
inc
dec
popa
mov
or
imul
mov
jo
or
test
inc
out
jbe
push
fadds
push
xchg
fs
lret
pop
xchg
adc
ret
jae
test
push
negb
mov
cld
adc
inc
cmp
lret
call
sub
mov
cmp
bound
inc
fucomi
pop
jmp
jmp
push
xchg
pop
jae
bound
mov
shlb
pop
mov
inc
xor
jp
dec
push
inc
mov
subb
dec
imul
lods
ja
aaa
notl
dec
ret
push
and
xchg
sbb
sbb
cmp
mov
dec
fwait
inc
clc
insl
mov
mov
jg
rolb
int
mov
adc
pushf
lods
into
shr
add
popa
fnstenv
cwtl
xor
xor
adc
xchg
dec
sbb
js
pop
test
push
cmp
shrb
sbb
ret
lcall
outsl
add
arpl
dec
or
cltd
dec
test
cmp
jmp
fidivrs
rclb
ret
dec
dec
mov
jno
inc
mov
paddd
call
outsb
movsb
mov
dec
es
xlat
ficompl
cld
cld
or
and
dec
inc
dec
insb
or
sub
mov
pop
push
repnz
outsl
jg
adc
lcall
sub
cli
push
fldl
call
inc
fadds
out
lcall
pop
call
mov
icebp
int
or
fidivrl
inc
call
incl
and
sub
mov
mov
aas
xor
mov
inc
std
sub
rol
push
add
xorb
sub
pop
rorb
iret
repnz
jg
test
mov
inc
fldcw
hlt
cwtl
lock
arpl
cmpsl
adc
push
xor
mov
xor
cmc
or
push
dec
inc
repnz
popf
js
daa
add
lcall
test
mov
mov
mov
icebp
mov
push
add
mov
add
rcl
sahf
xchg
rolb
insb
loope
pop
xor
mov
sub
incl
inc
mov
jmp
sahf
bound
cmpsl
jnp
or
cmp
imul
xor
ja
cmpb
lock
and
cmc
inc
fiaddl
out
inc
jbe
in
popf
shlb
xor
push
xchg
inc
push
xchg
xchg
pop
cs
fistl
lock
dec
xchg
sahf
aam
test
push
mov
hlt
sub
hlt
daa
je
jb
je
adc
dec
jo
push
inc
and
push
push
push
mov
cmp
pop
cmpsl
cwtl
mov
decl
test
jmp
mov
daa
and
sbb
pop
lods
push
ret
push
mov
pop
sahf
je
dec
add
pop
or
mov
and
mov
push
push
pushf
ljmp
movsb
mov
add
mov
adc
mov
add
jns
push
leave
enter
ret
push
in
mov
decl
ret
sbb
cmp
xchg
addr16
pusha
pop
jnp
jbe
sbb
pop
mov
arpl
stos
jmp
out
mov
add
aas
or
pop
test
xor
je
cmp
imul
shr
mov
adc
addr16
inc
popf
adc
add
repz
xchg
fldenv
cld
loop
outsl
cmp
push
inc
fisubrl
insb
lods
pop
dec
pop
inc
hlt
lret
sahf
sbb
incl
out
bound
push
dec
dec
jo
roll
fmul
into
fsubl
push
rcrb
mov
shrb
lock
xor
and
psraw
pushl
xchg
pop
mov
pop
xchg
pushl
xchg
push
out
sub
lock
sbb
xor
sbb
sbb
mov
cmp
call
dec
push
jb
test
loopne
sub
bound
jmp
mov
xchg
enter
xchg
mov
stos
aaa
cmpsb
lcall
scas
xlat
push
cmp
int
je
push
imul
out
push
xor
jg
das
adc
xchg
add
out
mov
pushl
mov
popa
ss
cltd
inc
xorps
pop
fisubl
push
add
xchg
fisubs
dec
pop
loope
rorl
push
dec
inc
aas
les
insb
nop
scas
scas
push
out
or
mov
incl
test
dec
cmp
or
jns
test
pop
sub
jno
add
inc
int
push
dec
or
xchg
mov
clc
decl
repnz
aam
mov
shrb
je
add
inc
test
repnz
mov
aaa
lret
inc
jg
cmpsl
fbstp
xchg
loop
or
pop
rolb
out
gs
sub
andb
call
pop
xor
subb
ljmp
andb
jns
dec
add
testl
pushl
cmpsl
stc
jecxz
sub
mov
sbb
push
mov
sub
pop
xchg
xor
test
call
adc
xchg
or
int
in
call
icebp
jle
ds
mov
mov
loopne
fnstenv
sbb
push
adc
mov
ret
dec
rorb
jmp
nop
pusha
rclb
push
fwait
mov
add
ljmp
xor
push
arpl
imull
lods
insb
pop
shlb
sbb
aad
scas
outsl
arpl
insb
xor
test
iret
add
push
mov
decl
add
or
fisttpl
sbb
add
pop
inc
push
add
loop
sub
jbe
adc
xor
insb
sbb
jb
pop
xchg
and
in
aas
xor
add
xchg
jg
lock
out
dec
ja
inc
dec
jg
fmuls
dec
shl
jecxz
inc
iret
push
popf
mov
ss
jae
mov
jnp
pop
and
fidivl
icebp
nop
xor
data16
cltd
mov
rcr
push
test
xor
add
dec
rcr
jl
xlat
inc
dec
inc
test
xor
cmp
gs
add
inc
aad
jg
jbe
sub
xchg
push
lret
or
sub
dec
rorb
or
adcl
inc
or
sub
jo
add
cmp
pop
jae
pushl
std
imul
scas
inc
sub
addr16
sbb
pop
xchg
add
jg
mov
add
adc
ret
and
movsl
sbb
and
pop
pop
mov
push
lods
jbe
pop
dec
xchg
inc
adc
lahf
pop
mov
mov
pushl
shll
popa
cmp
pop
mov
and
xor
mov
mov
and
inc
addl
lods
sbb
mov
stos
fisubs
xor
mov
jmp
aam
xor
nop
push
push
test
jbe
leave
push
ja
mov
jo
rcll
mov
lcall
mov
cld
xorl
sbbb
sub
insb
sub
inc
scas
imul
inc
inc
ss
jmp
add
shll
adc
add
or
mov
push
shl
sub
stos
cltd
jb
jecxz
shll
testb
enter
jae
mov
jnp
mov
mov
out
icebp
inc
add
in
mov
fmul
andb
push
or
outsl
fs
decl
sub
pusha
mov
adc
inc
in
pop
lret
or
imul
incl
xchg
inc
push
xchg
pusha
sub
aaa
dec
dec
mov
and
les
xor
mov
jns
push
inc
test
sub
pusha
sbb
inc
decw
subb
decl
add
adc
rorb
sub
loope
push
jbe
leave
adc
xchg
loop
xchg
add
inc
or
cmp
in
mov
into
add
jle
inc
push
out
movsb
aam
movsl
push
add
push
add
inc
es
jmp
sbb
xchg
xchg
ffreep
cmp
add
jno
out
les
jmp
dec
imul
decl
decb
test
cmp
pop
pushf
add
or
sub
inc
out
bnd
sar
lcall
jl
pop
push
pop
aaa
cmpsb
lock
sub
cmp
jg
es
pop
cltd
dec
sub
and
data16
sbb
or
cmp
mov
mov
push
lcall
add
fildl
jecxz
aaa
jns
sub
das
aam
lahf
push
push
adc
xor
xchg
add
bound
scas
cli
push
push
sbbb
lcall
or
xchg
adc
mov
ss
mov
inc
loopne
mov
ljmp
and
sbb
cld
xchg
shlb
int
stos
mov
loop
clc
gs
ret
fs
lcall
push
icebp
or
mov
mov
jg
mov
pop
mov
or
pushl
test
nop
pop
and
adc
hlt
cmp
cmp
in
decl
mov
ja
fcomps
lock
pushl
pop
mov
daa
mov
pusha
pop
add
push
mov
inc
mov
jmp
loop
loop
in
sbb
movsb
mov
sahf
aaa
or
xchg
mov
or
call
rolb
xchg
out
mov
lcall
into
xor
add
lcall
call
jno
jbe
test
jnp
sbb
adc
movaps
jp
mov
decl
repz
jle
adc
out
scas
pop
loopne
decl
movsb
es
shll
fsub
lea
popa
stos
pop
adc
or
push
jmp
xorl
and
adc
pop
movsb
les
and
arpl
add
pop
push
xchg
and
mov
fstps
jecxz
lea
sbb
stos
pop
fwait
or
lods
cwtl
movb
incl
cmp
push
pop
in
xchg
cmp
push
lahf
add
jmp
addr16
and
call
dec
das
les
cmc
sub
cmpsb
mov
add
popa
xchg
lock
subb
in
cs
ds
out
ljmp
in
dec
or
sar
mov
adc
daa
fidivrs
popa
mov
jmp
add
out
mov
mov
loopne
pushf
fimull
push
repz
inc
dec
adc
ud0
ljmp
ss
shl
stos
or
mov
test
iret
lret
daa
inc
movsb
clc
enter
cmp
incl
jmp
dec
int3
cmp
mov
xchg
int
inc
jbe
icebp
mov
pushl
pop
pop
jnp
out
inc
test
loopne
orl
sub
stos
inc
and
mov
bound
out
mov
xchg
cmp
scas
pushf
enter
pop
icebp
imul
dec
inc
sar
inc
shll
das
jmp
mov
and
movsl
incl
inc
pop
inc
dec
addr16
and
xor
xchg
jbe
jno
mov
jmp
lea
adc
dec
cmp
mov
push
movnti
mov
addr16
xchg
pop
andb
mov
loopne
sbb
inc
xor
repz
adc
cmp
adc
jmp
imul
iret
mov
lock
aam
and
mov
int3
push
inc
lea
insb
and
xor
sub
jbe
ss
xor
jne
outsb
clc
imul
xor
cmp
mov
fistpll
sub
jp
push
jmp
fmull
cld
jmp
movsl
mov
inc
mov
movsb
sub
push
dec
sub
jmp
out
rorb
mov
dec
insl
imul
outsb
in
push
mov
mov
iret
cmpsl
ds
outsb
jmp
push
int
xor
push
adc
jg
inc
ljmp
call
push
add
sbb
insl
lods
insl
cli
cmp
xchg
xchg
pop
repz
in
mov
pop
sub
andb
insb
xor
rolb
inc
loope
push
jbe
dec
pop
mov
xchg
cmp
mov
xor
iret
cli
pushl
scas
movsb
in
mov
les
fs
sbb
dec
xor
dec
push
outsl
mov
cli
test
popa
sub
lcall
add
gs
jno
mov
sub
movsb
test
movsb
pop
jnp
mov
jl
or
jo
cmpsb
jns
data16
fwait
inc
les
xor
out
sub
mov
mov
xchg
pop
icebp
or
cmpsl
mov
mov
push
xchg
cld
xchg
mov
ss
or
mov
push
cmc
subl
inc
dec
lods
dec
arpl
popa
mov
adc
fistps
add
mov
jg
fisttpl
sub
adc
hlt
sbb
sti
gs
in
xor
cld
mov
or
sbb
adc
call
pusha
mov
cld
mov
imul
test
push
xor
or
cmpsw
das
imul
xor
sub
adc
pop
scas
jmp
inc
decl
adc
test
push
icebp
insl
imul
jg
jbe
cld
pop
push
push
inc
inc
outsl
fsubp
pop
inc
mov
ss
pusha
or
cmpb
mov
jo
jg
aam
xor
bound
fs
sbb
add
cmpl
les
fildl
mov
and
js
jmp
and
lret
xor
cmp
add
outsl
stos
jecxz
push
adc
lahf
shlb
pushf
shrb
decl
test
in
push
dec
mov
imul
xor
xlat
sub
inc
jmp
sub
jp
and
push
xor
or
inc
inc
cwtl
xor
nop
pusha
jo
in
push
dec
adc
pushl
sbbb
cmp
mov
sbb
cmp
xchg
sbb
mov
incl
inc
or
pop
xchg
add
insl
loop
or
push
add
call
sub
lcall
loope
cmpsl
sahf
iret
pop
movsb
jp
ret
xlat
pop
jecxz
fadds
pop
jg
pop
inc
xor
jo
inc
lahf
pop
lcall
clc
add
mov
inc
and
xchg
jmp
lods
mov
rorl
mov
rcrb
addr16
xor
inc
jae
out
mov
rcr
lahf
in
push
pusha
popa
pop
or
test
enter
arpl
mov
add
sbb
movsb
leave
push
xor
jmp
pop
mov
xchg
popf
mov
bound
pop
inc
mov
dec
scas
sbb
inc
data16
sti
lods
inc
jp
xor
call
call
inc
mov
inc
cmp
insb
pop
cmpsl
push
lods
mov
movlps
xlat
dec
add
test
outsb
insl
sahf
fmull
cmpsl
mov
mov
pusha
or
ja
adc
and
leave
add
lcall
addb
add
mov
ret
add
mov
sbb
mov
fidivl
les
fldl
cmpb
je
pushf
loope
es
adc
popa
fs
incl
dec
mov
sub
movsb
jle
inc
jo
lds
or
push
cmp
pop
ljmp
hlt
push
jnp
xchg
mov
and
test
lret
popl
decl
lea
ds
movsb
jne
aad
add
icebp
rcrb
leave
xchg
xchg
cmp
popl
repz
adc
sbb
orl
outsb
cld
hlt
push
fmuls
das
rolb
pop
jb
push
pop
pushf
cmc
jp
sbb
add
ljmp
clc
xchg
daa
adc
call
xchg
enter
sub
xchg
and
inc
inc
hlt
inc
and
cli
pop
icebp
cmp
xchg
add
dec
sub
jle
ds
js
loopne
iret
cmp
pushl
sbb
fwait
lods
stos
stc
cmp
jo
cmp
mov
lahf
mov
incl
jle
mov
cmpl
inc
cld
mov
mov
cmp
inc
bound
call
cld
fsubl
fmul
fcoms
mov
push
scas
jp
or
inc
jo
jo
add
lcall
in
xchg
push
in
push
scas
push
jb
addr16
pop
mov
std
fcmove
or
jg
bound
subl
xchg
cmp
add
or
jmp
add
mov
add
sbb
xchg
jg
bound
cmp
inc
cmp
inc
mov
dec
mov
notl
ljmp
push
mov
jns
test
incl
mov
xor
xor
repz
call
daa
aaa
cmp
pushl
xor
out
pop
jmp
test
push
push
adc
add
lods
pop
xchg
and
xor
add
lcall
addl
or
cmp
out
mov
cmp
cmp
aaa
clc
jecxz
pop
fadds
and
decl
lock
imul
cwtl
add
clc
mov
int
dec
lock
mov
adc
fstpl
jmp
mov
loop
lcall
loopne
jg
sti
addl
xchg
jecxz
in
pushf
iret
cmp
out
push
aaa
adc
hlt
dec
sub
mov
adc
adc
popa
inc
pushl
cmp
andl
xor
sbb
jno
call
add
call
add
pusha
push
mov
mov
pop
and
out
inc
shl
lcall
decl
gs
push
in
xchg
movsl
sub
jecxz
and
nop
xor
daa
or
decl
pop
push
push
pop
scas
fs
aam
imul
decl
or
pop
shll
pop
loopne
pop
mov
and
mov
stos
push
in
inc
out
insb
les
cmc
lret
sbb
rcrl
rorb
sub
insl
ja
inc
imul
sub
dec
lock
sub
fwait
scas
cmp
mov
sbb
and
rcl
jmp
inc
mov
dec
xor
adc
ret
clc
lahf
stc
xor
cmp
push
icebp
insb
mov
sbb
lods
mov
xchg
aas
xlat
or
and
cs
cmp
dec
add
jns
push
pusha
repz
or
mov
jg
das
test
repz
adc
adc
lcall
xlat
fldl
xchg
cmp
clc
and
mov
test
push
call
cld
fs
inc
jbe
sub
xchg
cltd
cld
inc
jmp
dec
test
jb
insb
jno
scas
add
enter
xor
xor
add
mov
dec
out
in
scas
and
mov
in
xchg
mov
insl
test
add
call
adcb
testb
out
sub
pop
imul
pushf
and
or
mov
hlt
rorb
clc
sbb
jg
dec
inc
push
push
lds
scas
je
int3
adc
push
loopne
xchg
ljmp
add
sbb
out
dec
in
gs
cld
xor
pop
xchg
stos
gs
in
loop
test
push
js
adc
pop
push
aad
std
mov
push
add
imul
mov
pop
call
pop
outsl
or
push
inc
movsb
das
adc
mov
int3
adc
cli
inc
incl
loop
lods
sbb
mov
aas
dec
je
cld
daa
dec
xchg
cwtl
cwtl
mov
push
inc
xchg
popf
inc
cld
xchg
inc
bound
inc
call
or
xchg
out
push
repz
pop
ljmp
cmp
je
and
push
or
mov
push
ret
in
xchg
gs
mov
pop
push
mov
xchg
pop
xor
inc
in
lods
jae
mov
mov
cld
push
sti
ljmp
push
mov
cmpl
add
aad
addb
push
lods
mov
mov
or
aas
sub
dec
orb
cli
arpl
jp
jp
mov
xor
out
add
rcll
ja
cmp
sub
insb
jo
loop
push
inc
cmp
cwtl
or
pop
stc
in
and
jecxz
subl
cmpsl
cmp
xor
decb
das
scas
mov
ret
dec
jb
pop
xchg
jp
pop
ret
inc
popa
push
adc
inc
inc
js
fildll
dec
sbb
or
jp
incl
mov
popa
mov
sub
movlhps
push
rep
int3
or
outsl
cli
push
loope
divb
pop
or
mov
out
xchg
add
inc
mov
cmc
or
add
xor
xchg
push
push
stc
push
cli
fisttpl
push
push
sar
ljmp
push
into
pop
mov
loopne
xchg
shrl
es
add
lods
or
rolb
jecxz
les
scas
and
xor
fisttps
clc
and
inc
iret
xchg
hlt
adc
cmc
test
pushl
lods
test
jge
mov
and
out
jmp
mov
pop
popa
sahf
mul
or
call
incl
xchg
movsl
mov
mov
and
movsb
sti
xchg
push
fimuls
push
je
add
inc
fcomps
sub
insb
loopne
push
inc
mov
loopne
aad
in
loopne
lock
imull
dec
cmp
lods
adc
mov
call
rclb
mov
arpl
xor
add
sub
add
xor
iret
mov
push
shll
push
add
cmp
adc
in
notb
jg
xlat
mov
mov
int
sti
in
push
fstp
or
incl
push
jnp
or
lcall
inc
repz
fmul
sub
pop
insb
add
rcl
cmp
cli
js
shll
mov
addl
shr
clc
dec
sar
mov
dec
cmpsl
mov
gs
sbb
insl
mov
nop
out
xor
push
adc
mov
enter
call
jg
popf
int
fs
and
jecxz
inc
test
add
test
push
fisubl
add
fwait
jno
adc
inc
ja
inc
loope
pop
sti
lret
fidivrl
or
push
dec
adc
arpl
and
dec
lret
adc
lds
insb
jb,pt
hlt
std
ret
jmp
add
or
inc
xchg
dec
push
outsb
adc
and
xor
inc
or
fstpl
in
imul
aam
pushf
jnp
cld
push
mov
fldenv
and
insl
fwait
add
sub
cs
xchg
sub
sub
xor
xor
fcomp
push
jne
jg
aad
xor
and
arpl
cmpsl
jbe
in
imul
sbb
decl
jne
orb
push
dec
sub
sbb
insl
push
xor
mov
imul
push
ret
add
sub
andb
loop
jb
mov
decl
call
mov
xchg
insb
xor
mov
jno
xor
adc
adc
pop
cs
insb
js
sbb
or
mov
mov
outsb
clc
adcb
mov
sbb
clc
sarb
cli
rcl
inc
adc
jne
lcall
arpl
jo
xor
lock
mov
aaa
fdivrs
jo
xchg
sub
outsb
lret
pushf
cmc
mov
icebp
mov
das
stos
sub
or
inc
sub
mov
sub
mov
dec
addr16
jnp
jb
adc
jo
mov
stos
cmp
ds
jmp
lcall
dec
sbb
adc
jg
mov
jnp
inc
xchg
fdivs
hlt
outsb
mov
gs
mov
stos
jg
pushf
lds
iret
cmc
sbbb
and
scas
pop
pop
or
xor
out
pop
and
sub
imul
pop
shlb
stc
outsb
dec
das
push
cmpsb
in
dec
mov
push
arpl
fisttps
dec
outsl
aaa
imul
jb
dec
fdivr
std
hlt
mov
or
jae
inc
jnp
repnz
ss
jne
pop
xchg
xor
add
sub
ja
aaa
jb
mov
add
sbb
lcall
and
loop
push
sbb
shlb
and
pop
rorb
dec
push
mov
mov
fnstsw
push
clc
push
in
pusha
xchg
xor
add
cli
add
mov
call
scas
push
inc
pushf
rorl
sbb
mov
stos
popf
add
add
decl
inc
inc
test
xor
cmp
dec
inc
ss
shrl
xlat
mov
das
ret
dec
push
jae
pop
mov
stc
std
outsb
iret
sbb
clc
jmp
jo
xor
lds
in
outsb
enter
arpl
push
and
and
mov
rcll
cmp
jns
ret
push
movups
push
leave
add
pop
mov
cmpsl
faddl
dec
push
leave
pop
test
xor
adc
repnz
or
inc
enter
inc
jb
and
mov
leave
mov
add
test
loop
mov
push
xchg
mov
int3
arpl
xchg
nop
cmp
add
das
add
cmp
call
mov
cld
push
sub
gs
imul
inc
xorb
or
clc
jg
clc
jg
push
sahf
aaa
pusha
mov
mov
xor
sbb
outsb
mov
js
icebp
es
fmuls
popa
pop
fsubs
cwtl
dec
adc
cld
inc
xor
push
pushl
enter
aam
loope
adc
mov
push
inc
fildll
jnp
pop
or
adc
dec
js
push
cmp
or
adc
jo
lahf
jbe
pop
push
fadds
insl
pop
jecxz
loope
adc
xchg
push
lock
mov
push
loope
pop
pop
lock
cmp
jge
in
xchg
adc
lret
out
mov
push
scas
jecxz
push
and
pusha
insb
dec
cld
jo
pop
lods
out
dec
dec
shr
pop
dec
inc
dec
dec
aas
xchg
push
or
or
rorb
cmpl
mov
push
mov
inc
shrl
mov
push
out
mov
adcl
dec
jno
adc
sbb
hlt
push
jmp
xor
mov
lods
xchg
aad
mov
cmpsb
lds
mov
mov
fs
dec
std
adc
mov
xchg
add
icebp
fidivs
mov
outsb
insb
jbe
or
xor
sbb
or
add
stos
rcrb
jmp
lret
out
fmul
push
mov
sub
pushl
jmp
mov
jne
dec
jb
into
push
dec
push
mov
adc
sbb
addr16
push
push
fcoms
and
lods
cld
push
sub
sub
jnp
dec
xor
bound
std
add
push
cmp
inc
es
inc
dec
enter
incl
adc
inc
lahf
lahf
mov
data16
jne
mov
inc
clc
jmp
das
fldl
cmpsl
and
daa
bound
add
iret
xor
lcall
stc
adc
decl
das
test
cmpsl
or
cmp
dec
cltd
ret
stos
cmp
push
dec
adc
insl
addb
subl
xchg
ljmp
pushf
dec
mov
cmpsl
cmp
sbb
sub
ret
and
mov
inc
or
jg
cmp
rcll
js
and
inc
daa
xchg
ficoms
or
ja
pushl
lods
pop
insb
mov
aad
lahf
jno
cmp
adc
cltd
out
test
decl
imulb
repz
adc
scas
push
xor
lret
or
mov
pushf
push
adc
fdivr
decl
sub
loop
mov
jb
dec
or
add
add
call
push
push
jg
aad
imul
loope
ret
sbb
imulb
lret
ljmp
lret
mov
xor
xchg
inc
pop
ljmp
mov
addb
adc
call
xchg
push
rcr
push
gs
call
mov
mov
sbb
sub
xchg
dec
mov
mov
leave
jne
nop
ljmp
sbb
xchg
sbb
ds
leave
mov
push
cmpsb
mov
add
pushl
push
testb
adc
push
lahf
sar
ret
mov
lock
in
into
mov
cwtl
daa
daa
das
mov
add
mov
pop
jb
in
lcall
mov
and
incl
push
xor
les
xchg
pushf
xor
adc
and
pop
mov
or
dec
shlb
dec
sbb
or
ja
sarl
cli
and
cmp
dec
push
or
test
ja
sbb
add
mov
sbb
sbb
incl
add
lds
lds
and
stos
xchg
mov
sub
and
sar
push
mov
jecxz
lret
mov
sub
xorb
xchg
mov
and
in
fildll
sbb
push
push
lods
cmp
incl
xlat
pop
test
xchg
push
fimuls
std
ljmp
xchg
decl
cmp
negb
imulb
scas
cli
pop
pop
lcall
imul
jbe
popa
cmp
repz
lds
push
outsl
jns
xor
push
push
fisubl
lods
xor
loop
cli
add
jl
push
out
inc
sub
dec
adc
ljmp
cmc
inc
add
addl
test
inc
sub
incl
add
sbb
icebp
lahf
sub
xchg
push
imul
in
sub
mov
mov
sbb
aad
popf
jp
rolb
dec
clc
dec
sbb
inc
adc
dec
push
sbb
inc
push
mov
jbe
bound
add
in
insl
push
fldcw
xorb
fildl
and
xor
cld
xor
sub
movsb
mov
add
loopne
and
sbb
dec
or
add
dec
xor
sbb
ret
add
addl
cmp
int3
cmp
xor
mov
decl
pop
pop
add
repnz
add
rclb
add
icebp
xor
pop
mov
insb
decl
inc
in
lds
xchg
fwait
sub
mov
outsb
add
adc
jmp
inc
stos
jecxz
fistl
aas
sbb
lret
or
xor
push
popa
into
mov
sbb
dec
xchg
shl
out
or
iret
jo
std
roll
nop
pusha
add
adc
rorb
lods
mov
mov
push
and
and
fcompl
imul
loopne
push
incl
decb
shll
ja
insb
mov
cwtl
pop
ds
mov
adc
test
add
in
cmp
mov
pushf
push
sub
fildll
ljmp
jns
nop
xor
setle
sbb
pop
mov
dec
adc
cltd
enter
push
daa
mov
pop
add
inc
add
pusha
xchg
mov
jmp
jp
adc
ret
loope
cld
cmp
test
push
push
and
call
lahf
insl
and
add
dec
cld
mov
loop
xchg
sub
es
mov
and
add
data16
cmp
push
adc
mov
jl
sub
cmc
dec
pop
outsl
push
dec
push
inc
pushf
pop
xor
test
out
cli
popf
test
inc
cmp
dec
inc
ja
inc
mov
rclb
cmp
mov
fnstsw
jbe
ror
push
cli
ficomps
cmpsl
aas
sbb
ret
shlb
mov
ficoml
mov
clc
xor
inc
cmp
loopne
test
pop
sbb
lcall
and
inc
and
pmullw
or
inc
cltd
lcall
incl
xchg
cld
pop
jb
push
or
sbb
pop
loope
add
stos
cmp
rorl
and
icebp
jmp
arpl
xor
cmp
scas
dec
dec
shl
jne
les
in
mov
add
call
and
fiaddl
mov
xlat
fucomip
loope
pop
or
or
push
dec
inc
jo
pop
mov
clc
add
mov
sahf
dec
xor
xchg
test
or
hlt
xchg
or
push
mov
decl
sahf
lods
sub
outsb
inc
ds
iret
pop
jnp
cmpsl
adc
outsl
adc
dec
push
or
pushf
into
test
addr16
es
sar
in
cmp
shrb
jnp
insl
jle
cmp
cmp
xchg
pop
mov
cmpsb
dec
mov
xor
sub
add
fwait
mov
ljmp
cli
adc
cmc
ss
xlat
fcomps
fisttpl
sbb
jns
fdivrs
push
dec
push
in
adc
ss
inc
xchg
mov
xchg
cmp
cmp
add
mov
jnp
jle
xor
clc
mov
xor
arpl
xorb
pop
xchg
and
or
xchg
popa
lods
pusha
dec
movsb
xor
pop
scas
clc
sar
xchg
popa
out
mov
xor
xchg
mov
insb
jo
call
mov
mov
inc
out
dec
fdivrl
dec
or
jns
lods
lcall
add
push
fwait
mov
mov
loope
add
imul
jle
imul
xchg
data16
push
insl
xor
pop
inc
xor
push
outsl
ja
ljmp
mov
repz
popf
jnp
sub
or
add
ljmp
cmpsb
movsl
lret
lahf
shl
cwtl
jns
arpl
mov
jne
test
add
push
cmp
out
adc
push
jo
icebp
pop
fmull
cmpsb
jle
push
dec
mov
pop
push
sub
incl
xlat
xchg
aas
mov
inc
xor
or
iret
mov
insl
in
rcll
or
adc
stos
out
sub
inc
cmpb
push
icebp
add
sub
das
mov
stos
xchg
repnz
or
xchg
mov
ss
icebp
out
cmp
arpl
pusha
jl
ljmp
lcall
push
jp
sarl
lock
jae
sub
aam
xchg
jmp
rcrb
rol
stos
mov
or
das
fxch
jge
sbb
pop
icebp
inc
inc
push
xlat
dec
mov
shll
jbe
xchg
dec
stc
dec
pusha
cmp
scas
mov
scas
and
lock
test
es
mov
test
inc
cmpsl
xchg
push
popa
ljmp
sahf
pusha
mov
dec
imul
rcl
popa
dec
push
dec
add
jg
sbb
popa
fsubrp
adc
add
ret
into
inc
jmp
ljmp
inc
mov
lcall
sub
and
jmp
dec
jmp
inc
dec
aas
sbb
mov
insl
je
fdivr
mov
inc
inc
fs
cs
inc
sbb
push
jns
inc
and
icebp
pop
and
insl
call
push
pop
ret
jnp
andb
decb
jb
call
ljmp
std
call
arpl
xlat
adc
push
push
sub
incl
pop
out
pop
mov
ret
jno
add
mov
mov
xchg
jmp
lock
mov
cmp
sub
dec
int3
xor
enter
fistps
jecxz
lret
pop
jae
arpl
loopne
sahf
mov
hlt
call
dec
jg
xor
mov
mov
out
inc
adc
mov
xor
int3
icebp
mov
cmp
insl
pop
ret
mov
ret
and
inc
inc
inc
sti
js
repnz
dec
mov
cmp
je
mov
decl
adcl
loope
imul
les
leave
leave
jne
shlw
lcall
jb
sbb
xchg
push
les
jno
xor
xchg
xor
bound
cwtl
xchg
adcb
lcall
xor
out
ret
sbb
rclb
inc
stc
mov
lcall
mov
inc
mov
pop
inc
rorl
stc
xchg
mov
xlat
movsb
dec
test
pop
xchg
orl
mov
pop
jecxz
mov
incl
xchg
fnstenv
fwait
into
add
xor
and
test
repz
sbb
jmp
arpl
out
dec
mov
pop
xchg
push
adc
add
pop
lock
cmpsl
fildl
or
and
jae
or
xchg
scas
and
mov
push
or
mov
dec
arpl
xlat
cmp
and
push
jb
cmpsl
pushl
cld
jns
jle,pt
sub
loope
lret
dec
add
cld
inc
scas
in
adc
and
incl
cli
dec
cwtl
dec
into
pop
mov
mov
push
xchg
dec
xchg
xor
mov
cmp
inc
lock
adc
loop
insb
inc
mov
push
ret
push
sti
or
aam
sahf
gs
test
mov
mov
mov
cmc
mov
jl
fs
mov
xor
push
clc
ret
clc
mov
pop
lcall
mov
mov
flds
jno
lods
ljmp
jge
pusha
sarb
jns
pop
ffree
xchg
les
sahf
jecxz
jae
jle
add
mov
iret
sti
roll
pushf
xor
repz
push
pusha
std
std
decl
adc
sbb
fadds
jo
xor
jns
and
call
into
jbe
adc
mov
push
sbb
add
sbb
xor
dec
cmp
loope
scas
cli
xor
xchg
popa
leave
clc
xchg
fs
sahf
lahf
mov
incl
cld
rcr
push
push
push
push
push
stos
cmp
xlat
test
lret
insl
fdiv
stc
std
xchg
xor
cli
inc
xchg
imul
dec
sub
mov
dec
addl
aam
sub
mov
dec
icebp
daa
hlt
or
mov
nop
imull
push
mov
xor
add
cs
adc
cli
shlb
mov
xchg
dec
add
ds
adc
decl
mov
or
inc
pop
mov
jmp
movl
pop
jo
clc
pushl
mov
repz
movl
mov
je
outsb
xchg
xor
xor
xchg
push
dec
add
ljmp
clc
mov
dec
pop
sbb
push
or
jecxz
mov
mov
ds
mov
incl
and
mov
test
dec
movb
adc
adc
cmc
mov
nop
inc
add
call
push
ret
out
negl
cmpsb
lds
jae
jmp
rcrb
es
loope
insl
pop
out
insl
in
call
xor
or
ja
cli
add
popa
push
mov
fldl
loope
cmpsl
or
inc
lcall
dec
mov
stos
cs
push
push
pop
mov
sbb
orl
cmp
mov
pop
lock
leave
fldl
fisttps
ds
push
xchg
or
jmp
sub
cmpsb
ss
fadds
in
nop
ja
rcrb
sbb
repz
xor
ljmp
jge
xor
out
add
jl
jno
pushl
and
popf
sbb
mov
lret
jmp
mov
cmp
xchg
and
dec
testb
push
xchg
dec
pusha
dec
mov
mov
fcmovb
mov
add
inc
movsb
cs
xor
jg
test
add
jl
cld
sub
jecxz
lea
int
fsubrl
sub
jmp
ljmp
push
test
mov
sbb
lods
notl
xor
call
cld
lcall
xor
outsb
shlb
shlb
sub
push
cltd
push
cs
add
hlt
pushl
aam
fwait
push
push
adc
sbb
insl
inc
pusha
and
fistps
and
adc
xchg
clc
orb
mov
dec
sbb
loop
repnz
cmp
test
jne
xchg
out
mov
sti
js
imul
xchg
enter
popa
bound
decl
jg
inc
push
popa
cli
arpl
dec
adcl
scas
and
subl
scas
fsubrl
add
hlt
push
lock
adc
and
push
test
inc
cmp
adc
ret
inc
push
inc
incl
cli
in
mov
cmp
xchg
sbb
incl
jne
mov
aaa
pop
outsl
push
fsubrl
test
or
lcall
jmp
mov
adc
adc
daa
push
hlt
cmp
movsb
std
test
cwtl
out
cmc
decl
sbb
sbb
pop
xor
aad
out
sbb
xchg
call
dec
in
int
lahf
jne
lock
sti
xchg
adc
mov
push
sub
xchg
decl
orl
push
in
out
sahf
leave
push
insb
inc
push
mov
lock
sbb
add
push
mov
out
push
cmp
mov
inc
pop
movsl
or
cltd
mov
pop
arpl
repnz
mov
dec
jmp
cmp
xchg
push
jmp
xchg
xchg
inc
cli
js
loop
call
cmpsl
adcb
jl
pop
mov
daa
pusha
mov
mov
es
repnz
jmp
fistpll
cmp
push
push
out
in
inc
arpl
mov
mov
int
loopne
fdivs
es
jg
addb
sbb
or
adc
loopne
lock
incl
call
jge
in
lea
xor
push
add
xchg
cmpl
das
cli
push
push
in
je
fmuls
add
ficoms
test
jg
andb
jbe
inc
das
jbe
movsb
fwait
inc
inc
push
mov
xchg
imul
incl
leave
push
mov
dec
xor
inc
mov
and
dec
xor
push
test
idiv
incl
xlat
jmp
mov
movsb
push
mov
insb
dec
and
and
mov
jge
fcomip
inc
icebp
xchg
lea
lcall
rcl
lock
and
arpl
incl
mov
data16
test
adc
cmp
in
pop
push
jle
incl
push
fstps
sub
push
adc
notb
mov
cltd
pushf
mov
ds
or
lcall
fsubrs
inc
push
push
loope
dec
cs
cmp
fistpll
call
or
xchg
cmpsl
sub
and
iret
inc
sbb
call
mov
push
es
incl
rcrb
jp
out
mov
das
rcl
push
mov
mov
inc
sub
popa
add
decl
outsb
imul
mov
and
dec
add
push
loope
mov
ret
mov
dec
insl
inc
dec
xor
sbb
rol
xor
ret
push
add
add
insb
jge
stc
je
sub
rcrb
lret
sar
sti
ss
mov
dec
dec
stos
cmp
sbb
mov
bound
cs
mov
jmp
or
push
sbb
into
mov
inc
leave
add
test
add
cli
cmp
cmp
mov
loopne
mov
xor
lcall
outsl
and
push
adc
pop
sub
push
popf
pop
mov
shrb
mov
ss
pop
cld
add
inc
cbtw
adc
xchg
mov
mov
push
jmp
loope
push
imul
push
mov
les
cmc
cmp
cmp
pop
pushl
pop
sbb
jp
push
inc
dec
insl
add
inc
ret
ljmp
xor
mov
mov
mov
leave
or
dec
daa
lret
cmc
ret
icebp
imul
jmp
int
add
dec
div
inc
or
ret
adc
iret
orb
and
lcall
incb
jae
or
lret
cwtl
mov
test
cmpsl
mov
and
sbb
sti
dec
mov
mov
idivl
sarl
xchg
lock
subb
shl
dec
fdivr
mov
or
test
mov
inc
cmp
and
mov
call
sub
outsl
lods
scas
mov
xchg
pop
pop
aad
push
int3
mov
cmp
push
cld
fstpt
xchg
shl
xor
xor
sbb
cli
test
hlt
ljmp
inc
iret
out
ljmp
push
pop
movsl
xor
aam
ljmp
bswap
dec
loop
outsl
mov
xchg
in
add
in
xchg
lret
jne
xor
sti
inc
insb
loope
dec
das
rcll
and
iret
aaa
insb
mov
loop
aaa
rcr
paddusw
dec
xor
inc
jg
mov
das
ss
cmc
xchg
sbb
test
lods
les
cmp
iret
jecxz
pushl
call
not
divb
daa
cmp
insb
or
mov
nop
push
pop
and
js
mov
les
pop
mov
add
add
dec
jecxz
or
push
cmpsb
mov
dec
cli
jmp
pop
pop
jle
fnstenv
sub
mull
insb
in
cld
jne
or
jne
add
xchg
cmp
cmpsb
cwtl
or
xchg
decb
hlt
jb
insl
jne
sub
dec
sbb
clc
decl
mov
dec
dec
out
aaa
mov
mov
das
inc
js
mov
shlb
ret
inc
jo
dec
xchg
dec
inc
push
push
cmp
xchg
or
gs
mov
adc
mov
out
int3
imul
test
mov
enter
outsb
dec
add
add
shlb
pushf
push
insb
mov
shrb
cli
pop
das
cwtl
leave
dec
call
cmp
mov
sbb
jle,pn
repz
pushf
sti
sub
cmp
mov
push
dec
mov
outsl
lcall
std
outsb
je
inc
add
mov
sahf
aas
jns
test
sbb
mov
data16
test
mov
jnp
scas
jne
inc
test
inc
loopne
mov
jb
jp
dec
mov
push
sub
data16
fists
js
mov
daa
pop
fisubs
pushf
fs
xor
in
and
jo
add
das
jmp
test
ljmp
in
aas
add
and
add
in
out
push
mov
lea
add
iret
sbbb
sbb
in
lock
lock
adcb
dec
push
repnz
cltd
repnz
adc
add
xchg
repz
and
sub
addl
cmpsl
add
and
jns
jecxz
sub
hlt
or
sbb
call
subl
push
leave
jecxz
in
std
push
sbb
decl
test
test
mov
cmp
adc
push
les
jne
inc
push
outsl
push
or
mov
out
lock
dec
push
pop
test
decl
outsl
rcll
mov
lcall
dec
jmp
arpl
je
xor
push
jne
ret
stc
xorl
outsl
push
add
imul
fisubl
jmp
outsl
cwtl
daa
scas
decl
loopne
pop
shlb
arpl
adc
fsubp
outsb
gs
dec
aas
jl
mov
dec
loopne
imul
enter
es
inc
and
pop
pop
std
lods
adc
xor
repz
fidivrs
cmp
enter
sub
push
gs
loop
rclb
ljmp
dec
test
psubd
fists
push
shll
movsl
cs
jo
jge
mov
jmp
or
pop
push
into
mov
push
cmp
sub
loopne
push
dec
outsb
xchg
jae
pop
clc
adc
pushf
push
jb
imul
movsb
inc
and
inc
jbe
dec
push
imul
das
xchg
adc
ljmp
push
mov
sub
out
stc
ds
lret
inc
mov
sbb
das
xchg
clc
jmp
je
push
mov
addb
dec
or
lcall
lock
push
mov
dec
pop
je
add
and
psrld
bound
arpl
sbb
dec
inc
daa
mov
loopne
mov
fimuls
xor
pop
das
or
loop
aaa
sub
mov
push
xchg
or
aam
mov
mov
mov
jmp
lcall
jecxz
push
sub
in
or
xchg
mov
xchg
ljmp
pushf
mov
add
clc
mov
pop
lock
sbb
adc
cmp
mov
imul
mov
das
mov
cmp
popf
loop
dec
xor
pop
sahf
addb
insl
cmp
idiv
lcall
dec
mov
test
into
xlat
nop
popa
cli
inc
je
cmc
lods
push
push
jg
rcrl
push
xor
xorl
add
push
jnp
je
push
dec
jmp
sub
push
jb
dec
call
jl
sbb
dec
xor
imul
enter
fidivrl
test
test
lret
test
scas
lods
mov
push
add
xchg
mov
stos
add
jg
push
out
sarb
adc
jnp
or
jmp
repz
data16
call
jno
imul
shrl
sbb
add
xchg
int3
fbld
push
jmp
mov
pop
outsb
in
rcll
push
mov
xchg
ret
std
arpl
scas
inc
cmp
xor
jb
js
out
mov
inc
imul
fcmovbe
mov
sbb
ja
ss
test
lret
push
dec
pop
adc
mov
fcompl
imul
test
jg
jo
test
nop
pusha
hlt
and
divl
push
scas
push
sub
pushl
int3
enter
bound
shll
sub
popf
cltd
dec
sub
inc
dec
push
outsb
pop
sbb
pop
pop
add
jne
pop
inc
mov
inc
pop
cmpsl
push
ret
fsubp
vmovq
test
mov
mov
rcl
pop
pop
jo
mov
cmp
dec
outsl
jp
add
or
inc
idiv
ret
js
push
xchg
imul
jp
pop
mov
call
stos
sub
jno
and
and
push
rorb
push
or
or
jb
outsb
dec
addb
mov
pop
ljmp
divb
cmpsb
xchg
sbb
insb
ja
dec
lock
jg
mov
mov
sbb
lret
add
push
sbb
cwtl
jp
pop
ljmp
mov
jmp
lcall
bnd
mov
mov
jae,pn
fs
cs
push
push
xchg
xorl
dec
inc
add
sub
xor
rorb
lods
push
mov
push
fmuls
sar
and
adc
lcall
test
das
lahf
bnd
xor
pop
sbb
jg
pushl
orb
xchg
inc
es
xchg
std
imul
ljmp
xchg
and
in
lcall
add
subb
and
add
lds
jg
decl
stos
enter
dec
push
dec
mulb
cmp
mov
test
int3
pop
shll
jae
jg
call
nop
and
mov
je
ds
scas
inc
nop
jmp
cmpsl
mov
rcr
ret
or
rclb
adc
ja
rclb
insb
push
es
xor
addb
in
call
mov
add
push
adc
add
inc
pusha
cltd
sarb
test
fnclex
cmp
add
aas
subl
sub
pop
sahf
adc
dec
mov
mov
jecxz
sub
push
cmp
hlt
fildl
loopne
incl
jle
add
into
mov
mov
xchg
imul
mov
add
and
lods
notl
xchg
jmp
fcmovbe
pmulhuw
sbb
adc
cmp
mov
nop
sti
push
hlt
lea
inc
stc
incb
lods
cmpsl
sub
pop
jmp
ret
shr
mov
pop
cmc
int3
pop
add
sub
scas
or
sbb
das
add
out
and
incl
adc
in
repz
cmc
or
xchg
pop
xor
xor
cltd
pushf
shlb
daa
call
std
and
push
pop
and
jbe
jmp
sti
push
push
mov
add
lcall
or
cmc
dec
push
sarb
add
sbb
and
push
movsl
ds
adc
call
std
xorl
push
ss
data16
mov
jns
mov
cmpsl
mov
pop
and
xchg
daa
pop
inc
decl
adc
mov
mov
cld
dec
dec
push
leave
pushf
add
or
repz
ljmp
adcl
cmp
and
hlt
fiadds
jecxz
jg
decl
jmp
dec
mov
jp
adc
pop
or
incl
add
jne
pop
add
out
int3
cltd
xchg
add
sbb
loopne
lcall
cmc
cs
sub
add
xor
jmp
and
cmp
lcall
pop
sarl
mov
cli
adc
imul
and
stc
pushf
icebp
incb
cli
arpl
xor
call
loopne
cmp
and
int3
mov
adc
mov
movsl
aam
dec
into
and
dec
mov
aaa
icebp
call
testl
add
mov
mov
js
in
lds
and
addl
add
popf
dec
xchg
xchg
sbb
sbb
adc
and
push
icebp
lock
push
call
add
loope
cmp
sub
nop
aam
sbb
push
sub
mov
xchg
or
dec
cmp
fidivl
adc
aam
arpl
orb
sub
call
xor
sar
push
testl
enter
sub
sbb
pop
ljmp
adc
loop
mulb
sub
mov
in
inc
pop
pop
call
jg
and
or
cltd
icebp
jo
mov
ret
push
jg
ror
jmp
push
and
inc
cld
mov
xchg
clc
cmpsb
and
test
imul
pusha
inc
inc
mov
cli
bound
in
jb
nop
or
insl
lret
in
jmp
cmc
repz
mov
adc
rclb
popl
lods
jbe
xchg
add
xorl
add
and
xchg
xor
jmp
or
xor
and
movsl
mov
mov
xor
inc
add
sti
pop
mov
cmp
stc
push
in
add
mov
icebp
call
cwtl
pushf
lret
xchg
mov
arpl
addb
cwtl
adc
pop
hlt
jns
add
ss
test
push
inc
mov
push
pusha
pushf
add
jbe
dec
xchg
mov
fcmovbe
lock
cli
pop
outsl
fstpt
clc
and
sbb
xchg
pop
add
sbb
or
mov
mulb
jo
jecxz
out
fisubrs
add
fisubrl
inc
lea
adc
incl
lea
sub
cs
lock
xor
incl
add
test
push
or
pop
iret
sbb
pop
stos
mov
and
test
outsl
scas
inc
dec
js
jno
push
dec
je
push
dec
call
aam
add
add
fisttps
pop
stc
sbb
sub
repnz
decl
ret
adc
sbb
loope
sub
push
cmp
and
jmp
add
fnstenv
aas
mov
dec
xchg
ds
loope
and
sbb
ffree
decl
push
and
movsl
sahf
sbb
sbb
aad
xor
mov
mov
outsb
mov
adc
mov
cmp
and
jb
mov
xchg
inc
jmp
pop
or
push
lcall
sub
mov
mov
clc
pushl
lock
lock
mov
pop
or
mov
add
into
xchg
aam
les
mov
add
repz
mov
xchg
push
xchg
lock
ljmp
arpl
or
pushf
add
sub
int
cli
pusha
dec
cmp
add
push
cmpb
mov
sbb
sbb
cmpsb
adc
xor
mov
adc
repz
adc
jl
addr16
dec
ficoml
dec
dec
outsl
fistps
cmp
push
and
mov
mov
jecxz
je
or
sub
addr16
dec
stos
outsb
adc
push
xchg
inc
lock
fstp
inc
stos
sbb
andps
bound
jmp
dec
out
pop
pusha
js
and
mov
pop
mov
ljmp
add
xor
dec
inc
cmp
push
add
js
or
out
int3
mov
mov
sbb
insl
mov
cmpsb
sbb
jecxz
popa
pop
test
cmpsb
cwtl
jl
pop
xlat
mov
rorb
or
out
lret
push
mov
enter
cld
mov
inc
jno
sahf
sbb
sahf
adc
lcall
mov
ret
inc
jb
lods
dec
push
mov
lock
push
sub
fsubrl
push
roll
sub
inc
js
jg
cmpsl
icebp
out
jno
inc
xor
fidivrs
cli
outsl
cmpsl
mov
fwait
lea
mov
xor
sub
mov
lods
call
rol
dec
jno
dec
ret
mov
mov
iret
pop
push
pushf
cmp
test
pop
ret
ficompl
push
fisubrl
xchg
outsl
fldl
push
inc
jae
jo
add
add
xor
enter
cmpsb
xor
push
dec
std
test
outsb
sub
cwtl
out
adc
sti
xor
aas
add
cld
test
xor
xor
ss
xor
pusha
or
dec
inc
pop
or
call
js
call
sbb
idiv
sbb
sub
cwtl
jle
inc
idivb
mov
into
cmp
nop
pop
pushf
inc
mulb
out
int
push
out
repnz
push
add
les
mov
push
pushf
jmp
test
push
pushl
scas
lcall
mov
repz
adc
mov
xchg
xor
add
mov
arpl
push
fisttps
icebp
add
fstps
xor
mov
es
mov
or
push
ss
jb
icebp
test
stos
mov
jp
out
inc
sbb
mov
and
mov
sbbb
jl
adc
popf
jns
aam
mov
push
mov
or
popa
dec
adc
push
mov
imul
xchg
jnp
mov
aaa
addr16
xchg
out
mov
out
mov
dec
xor
js
shll
clc
add
test
decl
rcl
adc
jmp
sbb
aaa
icebp
cmp
sbb
sub
shl
mov
in
in
mov
out
aad
cmpb
jmp
push
or
push
and
cli
xor
push
xchg
push
cmp
stos
dec
jmp
add
popa
adc
shll
ret
push
fdivl
lods
xchg
dec
mov
xchg
mov
mov
icebp
pop
stos
and
test
mov
movl
test
dec
cmp
in
add
inc
cmp
shrl
sbb
mov
dec
lds
call
push
ljmp
mov
addb
faddl
add
sti
inc
or
pop
cmp
pusha
out
fdiv
and
mov
sar
xlat
add
rorl
pop
cmc
ds
adc
roll
pop
es
and
mov
fs
pop
add
mov
stc
mov
int3
pop
pop
arpl
mov
inc
rolb
fcomip
pushl
pop
cmp
pop
add
lret
jmp
push
loope
mov
mov
cld
mov
mov
mov
pusha
jmp
inc
into
xchg
jns
andb
dec
rorb
hlt
or
cmp
jg
lea
xchg
push
imul
sub
inc
loopne
jne
jno
lcall
ljmp
and
call
flds
ret
hlt
je
std
mov
sbb
lds
push
sbb
mov
adc
das
clc
incl
ss
dec
lods
mov
insb
fisubl
into
test
cwtl
cmp
inc
or
roll
ret
add
add
adc
add
lahf
bound
dec
dec
out
mov
lret
xlat
data16
test
mov
ror
sbb
pushl
incl
data16
flds
lahf
sbb
lcall
inc
xchg
xor
or
out
push
lcall
jae
scas
clc
xchg
xor
inc
sbb
xchg
inc
decl
pushf
add
rolb
insb
jne
mov
mov
and
pop
fcomps
mov
add
adc
ja
jmp
push
lods
add
enter
xchg
imul
lcall
aaa
adc
pop
sti
and
enter
cmc
xor
das
ljmp
decl
or
xor
cmc
xor
cmc
pop
fldcw
or
xchg
scas
in
ds
cmp
pop
cld
das
mov
and
sub
add
mov
jmp
or
shlb
ds
aam
push
push
movl
jmp
rcr
aaa
pop
outsl
decl
inc
lcall
sarb
mov
pop
add
inc
mov
add
enter
loope
mov
enter
subb
lock
mov
repz
add
add
or
cli
decl
movsl
nop
cs
xchg
or
xor
sti
test
inc
jbe
insl
adc
aaa
mov
sahf
mov
dec
add
popa
mov
stc
fsubr
ss
xor
jo
jmp
ficoms
inc
mov
mov
jmp
inc
out
and
cmp
push
push
loope
adc
decl
or
adc
pop
out
and
mov
sbb
adc
daa
dec
add
adc
incl
das
gs
jns
es
jns
movsb
mov
or
aam
pop
cmp
js
cs
pushl
sti
shll
stos
pop
or
push
add
loop
and
and
xchg
outsl
adc
jbe
repz
icebp
add
jmp
repnz
sbb
jno
inc
fnstsw
js
pop
mov
adc
call
pop
add
jo
shll
add
jo
dec
iret
adc
add
inc
and
or
push
lret
jge
aad
mov
stos
or
sbb
stos
cli
pushf
movsb
push
hlt
mov
mov
push
push
incl
mov
nop
mov
mov
call
and
xchg
test
mov
fs
add
lahf
mov
pop
push
inc
and
lcall
aam
orl
push
inc
xor
inc
adc
movsb
pusha
nop
pop
xchg
or
ljmp
lods
orl
mov
pop
inc
data16
pop
add
leave
adc
imul
dec
jge
xor
fistpl
xchg
pop
mov
fdivl
repnz
pop
fs
pop
cmp
add
xlat
dec
mov
je
imul
push
movsl
adc
sti
sbb
sub
ljmp
adc
lcall
enter
add
ret
outsb
push
inc
add
out
xor
pop
mov
test
call
or
mov
sub
ljmp
or
mov
push
jle
and
fiadds
cmp
or
sbb
and
sahf
ja
ret
jno
push
dec
mov
add
ljmp
lret
xchg
daa
subb
ss
jmp
xlat
pop
clc
pop
test
insb
inc
movb
cli
push
fisttpll
dec
arpl
shrb
dec
mov
push
mov
call
loopne
add
pusha
inc
out
mov
push
arpl
cmp
dec
pop
pop
jns
incl
mov
push
dec
sbb
inc
dec
push
inc
das
sarb
jnp
insb
push
enter
cmpsl
imul
iret
sub
pushf
jne
adc
insl
jne
push
inc
test
int3
inc
lea
cmp
sub
dec
arpl
pop
outsl
mov
ret
or
sub
jbe
scas
xchg
jmp
hlt
nop
loop
lret
xchg
mov
popa
mov
jbe
enter
dec
aaa
js
mov
sub
decl
add
push
popa
js
push
push
loope
mov
lods
shl
pushf
aam
leave
xchg
mov
and
mov
dec
movsl
xor
pop
add
outsb
arpl
ret
add
cld
js
jg
dec
dec
or
outsb
fnstsw
clc
xlat
test
inc
jecxz
sbb
xchg
loopne
xor
ret
mov
push
sbb
inc
lods
in
orb
in
jl
loopne
or
xor
adcb
cmp
arpl
cld
sub
inc
sbb
lcall
cmp
test
dec
jmp
sub
stos
inc
fildl
push
loop
std
scas
push
sub
push
stc
mov
or
inc
movsl
xlat
outsl
push
pop
lods
aam
dec
pop
or
adc
adc
jg
and
loope
clc
sub
mov
dec
push
pop
cmpsb
pushl
mov
rcrb
and
dec
inc
inc
ret
mov
cmc
je
mov
iret
inc
lcall
lods
ja
pop
fldt
cmp
pop
inc
imul
mov
pop
rcl
xor
arpl
popf
xchg
dec
aas
fidivrs
lock
lock
inc
cmp
jle
adc
push
idivb
push
cltd
dec
mov
add
jmp
sub
movsl
dec
dec
xchg
repnz
push
cwtl
mov
fs
cmpl
or
sbb
jle
mov
movsb
lds
pop
lea
xchg
mov
pushl
testb
scas
mov
sbb
jge
out
ficoms
jb
add
test
repnz
sbb
insb
xor
push
ja
jno
inc
fs
aas
push
loopne
xchg
xchg
in
push
push
ret
mov
jmp
xchg
movsl
jnp
sahf
aas
icebp
mov
sbb
xchg
data16
int3
dec
dec
dec
mov
cmc
repz
mov
daa
daa
push
mov
xchg
or
cmp
jmp
mov
ljmp
cmp
or
pop
movsb
mov
hlt
psubsb
dec
ss
ds
add
iret
xchg
jp
push
popa
lret
dec
push
push
data16
decl
divl
fcoms
xchg
add
lcall
int
shlb
inc
shll
jbe
cmc
lcall
ja
clc
ljmp
ret
xor
push
adc
sub
into
push
cmc
ljmp
gs
push
add
fsts
lea
xlat
or
sub
jge
inc
ss
push
cmpb
dec
mov
jo
pusha
or
lcall
mov
popl
stc
jns
jp
sbb
mov
test
cmpl
jo
dec
push
sbbl
int
scas
mov
mov
push
add
dec
lods
adcb
and
incl
cmc
add
leave
xor
loope
lock
adc
fbstp
and
clc
adc
aas
insl
xchg
jle
pop
fisubl
pop
leave
jns
insl
push
xor
jle
int
je
jge
xlat
incb
push
fsin
jmp
sbbb
popf
test
lea
or
in
icebp
push
push
addb
lods
xchg
sti
sub
inc
pop
jne
or
inc
jo
push
loopne
pop
arpl
mov
popf
shll
ss
add
jo
cmpps
inc
and
lcall
aad
popa
mov
dec
sub
push
dec
or
ret
test
jmp
insl
push
cs
xchg
mov
mov
and
add
mov
add
scas
add
call
dec
mov
xor
lret
fildl
shlb
ja
xor
jg
cmp
jns
jmp
pop
and
xor
cmp
enter
popa
xchg
out
arpl
mov
sbb
jnp
and
mov
out
cmp
dec
ret
std
jmp
jecxz
sbb
mov
out
or
aas
bound
pop
pushf
sti
pop
cwtl
mov
add
inc
jne
push
or
out
jne
rorl
inc
repnz
push
mov
mov
enter
pop
in
insb
push
jbe
mov
je
push
lock
ret
test
lock
gs
out
add
addb
into
xchg
std
mov
mov
pop
sahf
pop
imul
clc
and
rorb
scas
mov
out
addr16
or
dec
push
outsl
inc
or
or
push
mov
xor
add
ljmp
mov
out
aam
repnz
lods
pop
mov
cmpsb
mov
jle
push
ljmp
mov
mov
pop
mov
xchg
roll
clc
push
dec
dec
mov
iret
add
pop
addr16
mov
imul
jmp
mov
jl
jnp
xchg
push
out
xor
jo
sub
sbb
je
test
mov
and
ljmp
sub
cli
pop
xchg
dec
sbb
jno
mov
xchg
fdivr
mov
mov
je
push
inc
jno
mov
pop
rorb
inc
dec
inc
cmp
mov
xor
daa
lret
bound
decl
cmp
mov
xor
sub
push
js
add
push
or
dec
ljmp
scas
aas
xlat
adc
sub
jns
jecxz
call
xor
out
clc
std
mov
mov
out
dec
push
lret
jg
dec
ljmp
xor
hlt
lds
xchg
mov
push
movsl
cmc
cmp
cli
push
xor
xchg
or
add
cmp
movsb
xor
hlt
scas
adc
jmp
lods
out
dec
popa
mov
outsb
ret
daa
jge
and
stc
xchg
jmp
fs
jg
push
sub
arpl
rorb
flds
movsb
hlt
int3
mov
loop
adc
inc
test
fsubl
dec
pop
out
popa
dec
push
adcb
xchg
or
dec
shlb
decl
xchg
jb
outsl
or
add
adc
inc
xor
call
rorl
fstps
lret
jp
pop
dec
mov
lods
scas
xor
mov
movsl
and
jg
and
decl
lret
mov
jae
cld
sbb
or
adc
movl
push
add
sbb
sbb
dec
adc
dec
add
sub
test
lock
jo
push
dec
xor
jne
jg
mov
out
cli
in
or
imul
fnsave
pop
cmp
push
fnstenv
call
pop
lock
jb
dec
add
fdivrs
inc
mov
add
and
mov
ljmp
ljmp
xchg
cmp
ret
xchg
mov
inc
mov
inc
and
rol
inc
int3
xchg
out
pusha
and
push
or
sbb
cmp
mov
sbb
mov
outsl
fdiv
and
sbb
sar
mov
rorb
daa
jp
or
incl
movsb
sub
fnsave
lds
imul
push
sbb
test
mov
add
call
sub
cmp
add
mov
mov
jbe
xchg
outsl
sbb
insl
pusha
dec
nop
add
pop
data16
push
arpl
addb
xchg
xor
pop
fstp
call
popa
xlat
mov
jns
addb
daa
rclb
inc
loope
adc
out
std
fwait
iret
nop
adcl
jmp
dec
ss
std
daa
add
and
aas
lahf
adc
push
fwait
dec
xor
loope
pop
loopne
decl
fcomp
and
xchg
inc
shrb
push
es
mov
je
andl
sub
inc
push
sbb
mov
mov
mov
int
sarb
in
aaa
ljmp
xchg
out
lret
add
and
xchg
fadds
cli
xor
push
add
pushl
mov
pop
cmp
sub
push
dec
loopne
icebp
sbb
adc
fwait
imul
xor
pop
dec
out
pop
or
jge
cmp
ss
mov
test
imul
or
mov
ret
mov
into
rorl
sar
dec
shlb
mov
data16
cltd
xor
xchg
and
fisttps
or
xor
inc
sbb
add
adc
cltd
pushl
mov
add
hlt
or
sar
pop
out
lcall
jmp
sub
jns
mov
fcompl
jecxz
mov
scas
add
jle
lock
sbb
or
test
push
bswap
cmp
mov
in
negb
jne
mov
out
pushl
popf
ret
xchg
jmp
cmp
mov
fisttpll
sbb
lret
mov
inc
cmpsb
push
mov
ljmp
clc
or
pop
imul
adc
int3
lock
fadds
xchg
loop
fxch
out
leave
popl
xor
xor
sub
pop
adc
pop
notl
xchg
sbb
lea
push
jge
daa
mov
js
fistpll
ret
add
pop
xchg
mov
ds
and
xor
pushf
scas
out
push
pop
lcall
adc
lods
sbb
fidivs
mov
cld
lret
les
mov
scas
inc
and
push
xor
cli
push
ljmp
adc
es
pop
and
add
out
inc
xchg
hlt
cli
sub
push
push
jae
js
mov
stc
scas
ljmp
xchg
jmp
jmp
and
cmp
dec
adc
sahf
jno
jns
call
xchg
incl
xchg
pop
cmp
push
pop
repz
out
xor
mov
nop
mov
sbb
hlt
call
or
sub
xchg
jns
fistl
leave
add
or
in
or
rorb
push
adc
mov
or
incl
sub
fsubrs
inc
xorb
insl
push
pushl
cld
call
xchg
dec
inc
lahf
pop
adc
adc
outsl
pop
pusha
flds
fistpl
fdivrl
cmc
sbb
outsl
sahf
out
push
negb
and
xchg
adc
dec
ret
adc
es
stos
imul
cmp
or
xor
fisttps
push
es
mov
xchg
xor
fs
pop
mov
fnstsw
mov
and
call
mov
xchg
xchg
fs
call
lock
pushf
push
cmp
icebp
fwait
and
sbb
adc
dec
inc
data16
push
jg
xlat
lods
dec
out
push
sbb
mov
or
rcrl
sbb
call
inc
in
add
mov
or
add
and
and
xchg
inc
mov
int3
jb
decl
fisubl
pusha
add
daa
add
push
dec
pop
ss
sub
dec
or
pushl
iret
mov
mov
jmp
adc
fcomps
xchg
add
mov
inc
ljmp
jns
and
inc
or
test
mov
test
sub
cmp
push
cld
loopne
hlt
test
inc
jo
ret
stc
test
add
pop
inc
jmp
jecxz
fwait
test
incl
push
adc
adc
mov
popa
xchg
notl
mov
cmp
cmp
or
add
cmp
movsb
add
xor
push
cmpsl
add
les
jp
xor
incl
jne
aas
testl
cmp
or
call
dec
push
out
push
clc
and
or
lcall
mov
ret
sbbb
add
lret
pop
clc
fbstp
sub
mov
sub
rcr
sar
lahf
pop
jo
xor
icebp
dec
data16
pop
add
aam
or
idiv
jmp
push
cmpl
mov
jmp
pop
inc
or
sub
cld
fcoms
xchg
ret
add
jl
add
fimull
bound
popf
in
les
xorb
adc
jmp
mov
mov
stos
or
lret
add
les
push
mov
inc
mov
xor
adc
sbb
js
mov
cmp
in
mov
test
xor
ret
out
sub
ljmp
pop
mov
or
insb
ljmp
outsl
sbb
aam
inc
mov
gs
cli
add
cmpsl
adc
sbb
sti
das
inc
imul
bnd
aas
mov
stos
mov
or
jbe
shl
jmp
ja
inc
les
xchg
call
push
fdivr
jg
addl
xor
sbb
incl
mov
daa
leave
arpl
or
shll
hlt
inc
xlat
fmull
xor
push
dec
jge
dec
mov
jg
sbb
dec
sub
push
jo
pop
insl
sbb
jns
mov
cli
mov
arpl
sbb
jbe
sbb
decb
scas
and
mov
xchg
incl
orl
imul
jmp
jge
push
out
mov
push
xor
xchg
xchg
xchg
fcoml
dec
ljmp
sbb
mov
movsb
call
out
scas
iret
je
int
mov
xlat
addb
subl
iret
lahf
adc
repnz
or
push
fstpt
dec
push
add
push
or
loop
mov
cmp
lret
sbb
or
mov
js
vpmuludq
xor
mov
sarb
push
das
cmp
cmp
call
icebp
nop
es
adc
push
cmpsl
gs
movsb
push
ss
aad
pop
adcb
push
xchg
dec
or
and
push
mov
cmpb
shlb
cld
arpl
dec
push
imul
jno
dec
add
lock
jle
dec
sub
inc
loope
push
test
mov
lds
in
sbbb
pop
xchg
xor
ret
inc
dec
pop
mov
rcrl
imul
push
xchg
fs
scas
icebp
mov
push
push
dec
inc
ret
lock
push
out
cmp
pop
push
or
or
push
add
and
fwait
or
xchg
add
mov
outsb
adc
outsl
inc
cmp
js
inc
jnp
sbbb
jg
pop
xchg
and
int
fadd
cltd
mov
jecxz
jns
dec
outsl
inc
inc
jl
add
outsb
jo
xor
push
outsl
dec
push
xor
popa
dec
inc
adc
and
inc
pop
dec
dec
and
daa
pop
push
test
inc
sub
jnp
xor
out
pop
mov
pop
popf
fucom
enter
out
dec
jecxz
add
xor
dec
xlat
shlb
pushl
paddsw
adc
sub
mov
xor
xor
ret
shlb
rcrl
push
ds
aas
icebp
ret
ja
inc
mov
lcall
push
fiaddl
jecxz
push
cmpsl
sbb
push
cmp
cmp
mov
mov
lahf
movsb
dec
sbb
or
enter
or
fdivrs
call
lods
mov
or
push
subl
loopne
xchg
out
push
jge
xor
imul
pop
movsb
data16
and
nop
adc
ja
mov
pop
ja
push
inc
insb
mov
int
ret
test
loope
repz
fildl
decl
pusha
clc
push
stc
mov
fistpll
and
jg
or
cld
mov
mov
jo
mov
repz
mov
imul
add
xchg
pop
jns
push
and
mov
in
imul
pop
ret
das
xor
fldenv
mov
mov
stos
dec
mov
push
pop
push
push
xlat
sbb
hlt
add
inc
test
ret
or
sbb
addr16
push
aaa
jle
dec
push
push
incl
xor
xchg
cmp
xlat
cmp
nop
mov
cmp
stos
aas
xchg
or
lods
push
lret
shrb
ficoms
inc
cmp
mov
inc
mov
pop
inc
add
and
dec
testl
les
xchg
xor
push
push
jmp
les
movsl
mov
je
sub
inc
repz
inc
sbb
push
out
add
xor
repz
or
add
shrl
lea
call
insl
inc
imul
push
outsl
push
js
lcall
lcall
inc
xor
xor
pushf
push
add
lret
fisttps
cmpsb
pop
mov
pushf
adc
xor
movsb
xchg
mov
pop
xor
cs
jbe
sbb
in
pop
ret
cmp
enter
mov
lds
dec
mov
mov
insl
hlt
dec
xchg
cwtl
sub
fadds
adc
mov
lods
pop
mov
dec
dec
and
xchg
lods
int3
dec
pop
and
sbb
stc
mov
push
pop
dec
push
mov
test
cwtl
adc
and
adc
fildl
mov
ljmp
inc
inc
xchg
sub
xchg
scas
lods
test
aad
jg
movsb
sbb
std
cwtl
clc
into
pop
repz
xchg
push
jae
dec
mov
sub
or
shrb
pop
rclb
hlt
into
xchg
dec
jne
daa
jmp
push
or
cwtl
xor
xor
inc
or
lcall
dec
fisubrl
jnp
jl
add
out
pushf
sbb
ljmp
or
fisubs
xchg
insl
js
ret
ficomps
insl
xlat
mov
push
xchg
cmp
sbb
in
pushl
insl
pop
rcl
or
push
dec
push
xlat
mov
repnz
test
lcall
ljmp
lea
loopne
pop
cmp
mov
frstor
sbb
jmp
cmc
inc
and
dec
pop
jecxz
xchg
ds
add
mov
decl
nop
lcall
or
mov
cmp
inc
mov
jo
mov
sbb
subb
gs
fcompl
popf
jp
outsl
es
jno
call
int3
push
mov
push
push
in
jge
addb
add
mov
jne
sub
mov
lea
xchg
push
pop
repnz
pop
js
xor
inc
ret
sbb
push
xor
jmp
add
dec
dec
jecxz
repnz
add
inc
sbb
mov
push
faddl
loopne
out
cli
adc
test
mov
xlat
jle
jne
movsl
or
pop
aam
adc
push
jae
ror
add
scas
jl
iret
sub
enter
xlat
and
push
leave
add
roll
test
sarl
mov
jle
dec
sub
sbb
fstpt
mov
mov
dec
or
mov
lcall
insb
imul
orb
aaa
insb
shll
mov
and
push
or
and
push
cmc
fldcw
fnop
rol
push
mov
mov
add
add
jmp
es
inc
pop
test
les
adc
push
les
pop
xor
jmp
clc
loopne
mov
mov
int3
dec
cmp
push
sti
cs
test
or
sub
out
bound
sub
jo
bound
and
cld
das
fnstenv
incl
add
add
aad
jg
sahf
add
dec
mov
adc
int
and
jne
add
or
out
cmp
cmpsl
shrl
add
xor
pop
xchg
rcrb
mov
dec
out
jnp
outsl
jns
jl
jg
lcall
nop
popa
push
or
test
cmpsb
out
mov
aas
pop
notl
clc
ljmp
stos
inc
jge
or
pushf
cmpsl
cwtl
outsl
add
cmpsb
sar
pop
in
test
lcall
push
push
loope
loopne
out
int3
daa
push
inc
adc
pop
or
mov
popa
inc
lods
xchg
lods
and
mov
and
decl
sbb
les
pop
inc
inc
inc
xor
jns
dec
add
aam
pop
mov
adc
xchg
std
jp
sahf
mov
js
fwait
mov
decl
in
repz
add
sub
push
enter
fwait
pop
xadd
jae
subb
jmp
cmp
pop
jnp
adc
mov
daa
sbb
mov
in
loop
pop
jo
cmp
push
add
add
mov
stos
cmp
aaa
test
add
enter
push
call
sti
add
test
decl
or
inc
ds
xchg
xor
mov
std
sub
inc
frstor
or
test
fwait
xchg
stc
mov
shll
stos
hlt
mov
sbb
push
xchg
fidivs
loope
and
ja
aas
repz
sbb
lock
mov
jecxz
or
sbb
mov
inc
push
add
add
cmp
adc
decl
push
shlb
inc
xor
subb
adc
inc
mov
ljmp
add
sbbb
inc
or
and
sbb
and
jmp
xor
adc
and
jno
cli
and
mov
incb
xchg
incl
lock
dec
int
and
and
stc
mov
enter
mov
mov
or
incl
cmpsl
jge
mov
loopne
stos
mov
out
inc
add
and
mov
ds
mov
shl
inc
dec
roll
add
incb
loopne
add
ljmp
jae
clc
or
ss
rclb
daa
sub
sub
dec
jle
or
sarb
jg
ljmp
inc
jo
or
add
xchg
pop
mov
repz
rcrl
xchg
sbb
adc
mov
mov
or
js
test
jg
lock
add
in
cmpb
jge
jle
cltd
icebp
jmp
push
cmp
and
add
pushf
xor
and
pop
push
xchg
xchg
fwait
ja
decl
sbb
shl
sub
inc
inc
negl
test
adc
push
les
in
mov
test
or
adc
mov
inc
adcb
mov
add
mov
cmpsb
mov
stos
ror
lods
pop
aas
sub
inc
xor
ja
ss
mov
mov
or
mov
adc
xor
cwtl
pop
hlt
push
pop
loope
into
sub
xlat
es
jg
insb
lahf
pop
dec
imul
dec
cld
ljmp
rorl
add
into
nop
insl
jb
sbb
dec
mov
insb
sub
cmp
push
cld
dec
incl
and
test
xor
xchg
xchg
xchg
cmp
dec
jmp
push
mov
mov
jg
js
imull
inc
push
pop
insb
fistpll
pop
flds
call
aas
pop
sbb
inc
test
and
adc
lea
inc
sti
popa
fdivr
out
out
mov
or
cmp
cmp
into
sahf
add
outsl
inc
nop
repz
clc
sub
ja
int
cltd
mov
jns
pop
lcall
adc
mov
cs
sbb
decl
aam
filds
enter
inc
push
bound
mov
jb
push
jp
adc
cld
fbld
dec
pop
les
pushw
sbb
jg
push
sub
xor
imul
add
dec
jo
jo
inc
outsb
ja
loope
cmp
fldl
adc
ja
ret
lret
stos
int3
jecxz
xchg
cld
push
add
ret
push
mull
imul
add
dec
rcr
test
pusha
repnz
xlat
incl
xchg
mov
rolb
push
std
ljmp
push
insb
push
mov
mov
adc
adc
jo
dec
pop
sbb
fwait
movl
xor
sub
leave
lock
add
call
loopne
popf
out
lret
shlb
outsl
pop
test
stc
mov
das
arpl
or
jle
outsl
sbb
sbb
fsubs
adc
es
mov
in
aaa
push
adc
lcall
les
pop
aaa
lds
cmpl
inc
scas
add
mov
pop
and
mov
add
pushl
jl
xor
sbb
mov
mov
and
xor
dec
call
cld
pusha
pop
orb
jnp
jae
insb
rolb
js
sub
push
push
scas
add
xchg
and
mov
out
cltd
xor
inc
mov
hlt
test
out
push
jb
xor
jg
pop
mov
das
sbb
add
cmp
cltd
dec
call
and
jle
sub
sub
jo
mov
mov
mov
ds
cmc
loopne
cli
dec
js
aam
out
and
in
daa
loopne
decl
test
xchg
dec
shl
push
icebp
adc
sahf
decl
rol
fwait
sbb
cld
cltd
jge
aaa
and
ljmp
and
mov
pushf
adc
fldl
decl
xor
xchg
xchg
inc
adc
and
call
incl
arpl
lods
ss
or
imul
mov
cmc
push
pushl
ror
xchg
sbb
pop
push
out
jecxz
addb
inc
dec
call
push
repnz
lcall
int
into
mov
addb
add
sbb
dec
test
mov
adc
jmp
or
scas
dec
hlt
push
mov
mov
fsts
sar
mov
push
lahf
dec
and
incl
aas
stos
sbb
xchg
xor
inc
popa
daa
out
and
xchg
push
incl
int
iret
jae
xchg
icebp
movsb
and
jp
fdivrs
add
sar
iret
push
pusha
decl
fldt
pop
jle
cli
mov
xchg
call
orl
cmp
fisttps
mov
adc
jne
jmp
js
call
mov
fs
dec
sub
push
add
jl
scas
out
push
rol
incl
add
jo
in
fadds
add
mov
or
jg
cmp
call
inc
repz
clc
test
inc
test
cmc
add
call
and
or
mov
aaa
cmpb
jns
mov
jo
dec
daa
in
fisttps
pusha
bound
in
sub
pop
das
shrb
and
push
pop
test
ljmp
push
and
sti
arpl
add
lcall
cmp
pop
mov
xor
ja
mov
or
aaa
std
or
enter
cli
pop
mov
test
pushf
pop
sti
dec
inc
or
add
mov
mov
popf
fdivr
jmp
fwait
enter
mov
cmp
jnp
and
inc
dec
lods
pop
or
sbb
fsave
loop
add
mov
stos
daa
pop
jmp
les
dec
dec
scas
push
mov
stc
pop
sbb
and
hlt
stos
or
cmp
jg
fiaddl
es
jge
movsl
push
gs
mov
xlat
scas
cld
rol
push
jae
daa
add
ljmp
pushf
sub
xor
push
clc
or
sahf
or
sbb
ret
mov
mov
add
ret
aad
or
xchg
jge
mov
out
add
lds
fidivrl
pop
add
add
call
pop
imul
jne
add
mov
decl
cmpsl
mov
xchg
and
push
xchg
stos
mov
and
jo
dec
xchg
pop
test
and
or
outsb
add
pusha
icebp
sbbb
adc
push
mov
lret
push
cmp
push
mov
bound
lods
push
addl
incl
and
push
sub
push
flds
cmc
sbb
icebp
in
pusha
mov
lcall
in
fbld
or
arpl
adc
rcll
jo
xor
jmp
pushf
cltd
test
cwtl
push
ds
xchg
jb
pop
enter
ljmp
es
sub
or
repnz
rolb
jmp
sbb
data16
xchg
fwait
xor
pop
mov
ret
roll
dec
jl
dec
aam
or
xchg
lret
daa
bound
test
dec
das
xchg
cmp
in
outsl
adc
push
mov
rcl
ss
dec
in
gs
subb
les
pop
cs
into
adc
incl
hlt
sarl
jae
jmp
sub
mov
das
ret
push
cli
dec
pop
je
pop
dec
inc
dec
lea
mov
mov
fldcw
mov
fisttps
xchg
push
jne
push
inc
sti
push
out
cltd
js
xor
mov
add
dec
mov
xchg
pop
or
lods
int
mov
pop
mov
xchg
dec
adc
cmp
gs
in
sti
scas
adc
jle
xor
pop
push
mov
call
ja
es
dec
cmp
jl
outsb
xchg
pop
dec
sbb
cmp
push
mov
jle
add
add
add
add
add
inc
adc
sbb
in
add
test
decl
pop
sbb
xchg
add
sbb
push
add
loope
pop
das
mov
xchg
incl
lret
inc
in
jmp
imul
inc
sbb
add
inc
pop
test
mov
inc
xor
out
addr16
sahf
cmpl
xor
inc
xchg
divb
inc
out
pop
add
push
pop
add
decl
stos
add
adc
add
pushf
and
js
mov
out
dec
aaa
scas
add
push
fstpt
and
cmp
inc
dec
adc
fildll
jno
fnstcw
mov
mov
push
dec
xor
mov
es
push
mov
sbbb
pop
lea
jbe
clc
in
test
sub
inc
add
mov
sub
mov
or
inc
ss
arpl
or
in
incl
mov
sub
adc
jnp
push
sub
xlat
dec
add
and
dec
incl
sub
dec
inc
dec
adc
push
push
mov
jno
mov
rclb
push
and
xchg
test
lcall
add
ficoms
data16
ja
mov
xchg
shll
or
subl
cmp
push
push
or
aas
test
inc
lds
or
add
clc
ucomiss
ret
cmp
jmp
add
mov
rcl
adc
nop
push
aas
inc
lcall
rcrb
out
pushf
loope
mov
add
lret
addr16
mov
add
out
leave
push
adc
adc
incl
fstpl
sahf
in
ret
and
or
mov
cld
mov
decl
add
jns
roll
add
add
out
mov
stc
add
sub
decb
mov
inc
xor
xchg
adc
inc
js
push
sbb
cmp
incl
mov
in
test
rorb
lss
imul
and
imul
popf
sahf
sbb
jno
movsl
aas
xor
jg
sbb
lods
movsl
xchg
inc
or
pop
int3
xchg
popa
dec
int
scas
inc
mov
std
call
adc
push
lea
cmc
dec
add
or
push
jae
xor
adc
mov
mov
fildl
int3
stos
orl
scas
loop
outsb
inc
test
call
addl
ljmp
cmc
mov
enter
or
cli
add
adc
add
lcall
or
mov
xor
mov
xor
lock
dec
dec
fs
jbe
ljmp
in
xor
je
mov
and
mov
sub
cmpsb
out
jecxz
out
and
cmovb
xchg
call
mov
cld
inc
in
lcall
rol
ljmp
aam
jg
jae
pushf
loopne
mov
xchg
xchg
cltd
mov
add
lcall
movl
push
jle
jle
ds
out
add
mov
and
ja
add
ljmp
jl
je
shlb
jb
mov
inc
mov
mov
out
repz
iret
lret
mov
add
movsl
dec
inc
push
into
inc
sub
aas
mov
or
mov
adc
addb
scas
cwtl
sarb
ficoml
orl
test
test
add
add
xor
jg
enter
popa
sti
or
mov
xchg
inc
or
insb
lret
mov
shll
mov
sti
mov
or
cwtl
dec
jg
imul
push
adcl
sbb
cwtl
sbb
loope
dec
jne
ljmp
repnz
in
adc
and
repnz
pushl
sbb
or
fnsaves
jbe
cmp
mov
mov
mov
loop
rsqrtps
fwait
dec
sbb
mov
mov
movsl
or
sbb
cmp
out
cmc
push
out
cmp
fcomip
ljmp
xchg
wrmsr
mov
lock
out
sub
mov
inc
icebp
out
jg
incl
jmp
clc
sbb
or
in
add
in
gs
or
adc
or
cmp
xlat
addr16
std
mov
cmp
jnp
pop
or
add
lcall
mov
mov
call
cli
nop
scas
repz
xchg
cmpsb
mov
pop
jecxz
loopne
loope
inc
aad
or
mov
push
and
xchg
sub
lods
pop
cltd
sub
daa
sub
inc
or
sub
stos
jp
leave
xor
call
shlb
add
and
xchg
pushf
add
in
inc
adc
icebp
lods
sbb
and
xchg
push
movsl
add
iret
dec
clc
mov
fcomip
and
and
push
cmp
adc
leave
loop
arpl
dec
fistps
push
or
outsl
clc
loop
add
or
push
add
hlt
or
decl
repnz
cs
inc
daa
mov
mov
lcall
sahf
cwtl
fdivrs
jae
insb
cmp
push
sbb
dec
mov
or
call
into
push
sbb
jns
pop
popf
ss
mov
pusha
sub
pop
push
cmp
lcall
adc
cmp
cld
or
mov
fs
lret
pop
dec
lods
lods
and
jmp
cwtl
push
test
loopne
jb
inc
xchg
out
cs
ljmp
leave
ret
aaa
jge
pop
hlt
cmp
inc
imul
and
mov
add
jb
cmpsb
fadds
mov
pop
out
adc
mov
xor
pop
dec
sbb
sbb
xorb
xchg
pushl
test
ret
dec
lcall
and
scas
enter
adc
lcall
lret
in
incl
inc
mov
aas
insb
adc
sarb
dec
push
negl
jg
call
ret
rcrb
xchg
leave
out
mov
add
cmp
pusha
inc
mov
sub
pushl
pop
or
jno
hlt
out
mov
popa
mov
loope
xchg
test
nop
decl
or
outsb
push
imul
adc
inc
enter
cmp
add
daa
mov
rolb
pop
jb
or
sarb
ja
loopne
decl
loop
lds
repnz
dec
sub
adcb
pop
add
jg
movsb
inc
mov
mov
push
and
sub
dec
cs
cwtl
and
shl
ja
or
add
pusha
or
sbb
pop
lahf
daa
scas
dec
or
sub
xchg
mov
pusha
adcb
outsb
nop
cmc
lret
xchg
std
xchg
cmp
andb
jbe
ret
roll
imull
mov
sub
gs
aas
add
clc
jmp
insb
push
sbb
int3
mov
dec
sbb
decl
fnstcw
jp
rcll
xchg
aam
sub
pushf
inc
cmp
add
inc
sbb
aad
or
pop
lcall
and
call
jo
mov
xor
sub
cmpsb
sbb
cmp
movsl
jp
out
pop
push
lea
in
pusha
jle
call
sbb
add
push
dec
xchg
mov
loopne
stc
add
nop
std
xchg
mov
pusha
cmp
or
ret
cmc
fadd
bound
jbe
push
pusha
sti
mov
push
aaa
mov
ja
rolb
fidivs
jo
fldenv
xchg
incl
in
dec
stc
ja
jne
std
jnp
mov
test
xor
lcall
stos
fsts
and
add
add
nop
jp
loope
ljmp
jg
pop
cmp
xchg
movsb
cmp
cld
add
mov
cmp
loope
cmp
mov
push
in
push
fldt
mov
pop
mov
cs
pop
cld
pop
jne
jg
sbb
sub
sbb
mov
add
aaa
leave
gs
lcall
adc
add
mov
stos
mov
inc
sbb
stos
pusha
in
mov
pop
xlat
loopne
jno
incl
ret
hlt
adc
test
sub
decl
xchg
sbb
inc
loope
cmp
xor
das
arpl
xor
mov
xchg
dec
mov
jg
fnstsw
orb
inc
dec
xor
add
fcmovb
add
pop
xor
call
fldt
push
add
dec
mov
out
arpl
lods
push
mov
test
xchg
sbb
and
pop
push
int
mov
jmp
lock
adc
loopne
push
test
inc
dec
je
int3
push
loope
add
jg
incl
pop
gs
je
aas
adc
loope
sub
sub
shrb
ds
sub
outsb
rcrl
sbb
test
out
xchg
add
mov
inc
imul
mov
jge
add
cli
adc
ljmp
and
mov
js
movsb
loopne
orb
lea
rorb
xchg
call
dec
fmull
mov
push
pushf
mov
es
xchg
dec
outsl
fldl
mov
cld
ljmp
cmp
adc
pop
daa
jl
cwtl
icebp
mov
fcomip
jg
lret
insl
lcall
flds
les
fdivl
mov
jbe
cs
mov
ljmp
fcoms
aas
out
add
add
fsubs
mov
pushf
stc
arpl
xor
fcomip
call
add
je
std
arpl
mov
mov
cmp
add
inc
sbb
hlt
push
pop
push
add
sub
ljmp
and
into
xor
or
sub
lods
add
dec
daa
fcomip
pop
stos
mov
push
cmpl
jecxz
pop
aas
fnstcw
sbb
jmp
ror
fnsave
dec
add
or
adc
lret
add
ss
add
mov
fidivs
out
fldenvs
mov
cs
add
mov
mov
imul
lret
fwait
decl
push
jmp
dec
pushf
mov
test
decl
loop
mov
shl
mov
shll
mov
sbb
and
jp
lods
mov
sarb
add
xlat
call
adc
push
subb
sub
mov
jl
call
or
jg
repz
movsb
pusha
add
daa
push
mov
fimull
decl
dec
ljmp
in
add
add
xchg
cmp
std
lods
inc
and
nop
add
inc
cmpl
repz
adc
adc
cmpl
rorb
test
ljmp
cmp
sbb
lock
pop
adc
in
pusha
jg
sbb
pop
fsubs
das
push
or
mov
mov
lcall
and
loopne
enter
mov
push
rcll
ret
sahf
jo
inc
fisubs
sti
jmp
or
add
repnz
cmp
bound
pusha
je
incl
loop
ud1
adc
cli
pop
xchg
stc
or
rcll
adc
popf
lcall
sbb
ret
rcr
pop
push
sbb
mov
in
xor
int3
pusha
sub
jmp
mov
mov
fs
loopne
das
and
adc
adc
call
notl
push
xor
nop
mov
je
fbstp
push
loopne
subb
jno
cli
ret
cmp
cwtl
loop
mov
inc
enter
sbb
inc
sbb
sub
cmp
ljmp
mov
push
shl
mov
xchg
xchg
divl
xor
js
pop
mov
clc
dec
popf
pusha
and
aas
adc
adc
pop
push
popf
inc
xor
jg
jmp
jecxz
ljmp
fwait
sub
mov
dec
jns
jmp
idivb
and
xchg
jp
cmovp
jo
movsl
pop
push
mov
adc
cmc
ljmp
invlpg
jbe
add
adc
push
outsb
jecxz
cmp
mov
dec
aas
push
xchg
add
rorl
inc
mov
shlb
mov
mov
pop
loopne
call
gs
push
clc
jae
adc
add
stos
popl
jmp
add
repnz
ss
adc
inc
jnp
lea
ljmp
adc
jg
gs
out
enter
movsb
call
cwtl
call
out
add
push
push
push
pop
jp
clc
stos
xor
test
stc
stos
inc
mov
mov
pop
into
xchg
scas
add
fnstsw
stc
out
cmpsl
loop
aaa
add
jecxz
leave
pop
incb
dec
addps
loope
or
jmp
xlat
add
rorl
sbb
ja
shrb
lea
mov
mov
xlat
jo
jns
mov
fnstsw
stc
mov
incl
push
mov
and
push
add
push
push
scas
int3
test
xor
adcb
testb
rcrl
mov
popa
push
jmp
adc
xchg
mov
inc
in
decl
or
fs
mov
sbb
lock
xchg
cltd
inc
clc
xlat
mov
xchg
cs
lcall
pop
cltd
popf
xor
and
ds
xchg
mov
rolb
add
xor
sbb
cli
decl
scas
pop
adc
ror
jp
xor
cs
sbb
cmp
icebp
out
pop
inc
sub
jle
add
or
lcall
int3
pop
mov
ja
xchg
add
lds
mov
ja
cmp
adc
mov
mov
clc
push
std
out
sub
inc
or
aad
arpl
mov
jmp
add
jmp
or
xchg
add
test
mov
push
inc
std
out
nop
cwtl
sbb
add
lret
dec
mov
mov
add
adc
scas
lds
adc
cmp
xlat
insb
ds
loope
int
sbb
fcomip
incl
or
xchg
out
fcompl
sub
push
jg
jns
mov
pop
into
lcall
add
outsl
push
fwait
xor
add
sbb
mov
xor
xor
mov
jno
shll
mov
jmp
lahf
insl
and
dec
mov
mov
pushl
repz
rolb
add
fwait
push
loope
xchg
enter
or
add
push
loope
add
jno
dec
xchg
pop
loop
jp
mov
or
push
mov
add
aaa
std
call
addb
or
lds
lcall
add
cmp
sbb
rolb
insl
pop
xchg
adc
arpl
int3
bound
sbb
jmp
ja
jmp
pop
push
orb
imul
bound
mov
rolb
xchg
and
pop
inc
sbb
push
mov
imul
call
push
xchg
or
and
insb
imul
mov
or
aas
mov
jle
xchg
pop
and
cmp
in
mov
test
add
inc
shlb
xorl
cmp
push
js
and
lahf
mov
xchg
pusha
mov
push
add
push
das
xchg
aas
negb
mov
xor
idivl
pop
scas
loopne
cmc
add
pusha
dec
sbb
call
incl
pop
ss
push
pusha
cmp
mov
hlt
push
push
mov
icebp
je
arpl
jns
dec
push
sub
sarb
rcrl
push
sbb
out
pop
add
mov
arpl
aad
in
jne
cld
rcl
popa
out
loopne
dec
xchg
xor
ja
cmp
cwtl
aaa
arpl
and
sub
pop
enter
lea
icebp
in
push
shll
push
movaps
sbb
sbb
add
xchg
push
or
jbe
sbb
pushl
adc
mov
mov
add
daa
xchg
mov
ret
add
adc
jmp
push
pop
pop
test
sbb
xchg
fcoml
fistpll
arpl
jl
notb
adc
add
lock
call
call
jle
or
xchg
cld
mov
test
loop
popa
mov
decl
sub
mov
push
daa
mov
aad
dec
sub
pop
std
and
call
fsubrs
dec
sub
push
add
mov
jb
pop
hlt
das
mov
incl
or
fbld
dec
jmp
and
xchg
mov
mov
ltr
outsl
cli
decl
inc
jns
dec
js
xlat
add
stc
rol
sbb
dec
into
leave
lods
cmp
mov
push
inc
fnstcw
jae
shr
es
adc
repnz
stc
add
mov
dec
jbe
xchg
ss
pusha
and
fcoms
out
out
xchg
mov
call
mov
adc
iret
daa
ret
push
add
pop
mov
ret
repz
pop
clc
dec
sahf
cmpsl
aaa
outsl
dec
repz
out
sbb
ljmp
or
add
lahf
mov
sub
jo
hlt
jne
inc
call
lcall
add
into
movsb
shll
pop
out
dec
dec
push
lods
xlat
push
add
jmp
or
mov
mov
fisubrl
or
pop
inc
pop
into
adcl
ljmp
sbb
pushf
shll
add
or
adc
fcomip
mov
mov
pop
adc
and
jmp
and
pop
popa
in
sar
pushl
add
adc
arpl
out
stc
hlt
or
jmp
mov
mov
sbb
mov
mov
lock
add
jle
pop
lcall
sbb
mul
out
daa
movsb
jmp
addr16
and
pop
add
or
add
sbb
incl
int
fildll
xor
or
add
std
jnp
jl
cld
incl
ds
jo
arpl
test
loop
add
add
inc
cld
jg
add
fdivl
adc
sbb
incl
out
cmp
in
mov
mov
fadd
adc
and
loopne
inc
or
repnz
sti
loope
push
xchg
filds
and
cltd
inc
cmp
imul
pop
xor
adc
cmp
shrb
cmp
lcall
cmp
lahf
xor
sbb
out
xor
out
fnstsw
nop
adc
decl
pop
imul
xor
or
jae
or
rolb
nop
inc
jp
adc
fidivs
inc
fstpl
pop
lcall
subl
and
stos
push
test
pop
lock
push
and
and
loopne
or
lcall
add
mov
adc
pop
subb
mov
scas
mov
daa
pushf
daa
and
mov
mov
nop
fwait
lods
lret
dec
xor
pop
xchg
xor
loopne
pop
gs
in
pop
iret
mov
add
fbstp
jg
and
sub
addl
add
add
pop
xrelease
les
or
add
jno
icebp
lock
adc
push
aam
test
push
call
sbb
call
cld
push
add
into
addl
push
sbb
add
mov
outsl
jns,pn
mov
out
mov
mov
mov
sbb
lcall
xor
adc
adcb
cmp
das
cli
decl
mov
dec
mov
jae
mov
and
dec
test
rcll
or
pop
test
push
add
and
dec
shlb
jb
idivl
add
daa
arpl
push
jne
decl
add
inc
in
jmp
or
mov
xchg
add
dec
out
adc
icebp
jg
push
xchg
iret
aaa
les
xchg
inc
shlb
sbb
sub
push
out
mov
or
pusha
ffreep
or
aas
out
ror
cs
add
decl
cltd
pop
xchg
fwait
mov
test
cmp
add
mov
insb
jmp
int3
ret
lods
daa
aaa
mov
ja
lcall
out
pop
ljmp
adc
div
ljmp
pop
push
jmp
lahf
xchg
jbe
or
pop
testb
xchg
jge
jo
push
jmp
push
int3
femms
loopne
pop
cmc
jmp
sub
sub
movsb
mov
xchg
jmp
shl
jmp
insb
xchg
sub
lods
pop
sub
sub
jb
xor
icebp
test
or
call
std
decl
push
mov
jg
pop
cmpsb
cmc
enter
push
or
test
insb
dec
xchg
mov
test
jne
in
push
xchg
pop
in
subb
add
in
xchg
and
jge
add
and
call
nop
cmp
out
sbb
xchg
xchg
call
loopne
fs
fwait
ret
gs
outsl
imul
jge
add
subb
mov
clc
pop
bound
sbb
or
movsl
push
mov
pushl
pushaw
in
adc
in
and
pop
int3
pushf
push
hlt
add
jb
mov
lret
cmp
int
bswap
inc
mov
insl
jle
sbb
movsbl
mov
cmpsl
xor
nop
scas
adc
sbb
and
rclb
orl
cmpsb
xor
cs
and
insb
je
cmpsb
pop
pusha
stos
clc
xchg
jmp
outsl
clc
decl
sbb
cwtl
xor
in
out
lock
xor
stc
xchg
mov
ss
or
incl
gs
push
mov
lods
repz
add
fwait
push
in
filds
inc
jno
sbb
dec
xor
pop
lock
adc
lcall
fcoms
or
xor
inc
fisubs
cmp
stos
repz
stos
push
xor
xchg
mov
xchg
add
ja
aad
in
dec
mov
loopne
xchg
aad
lret
test
adc
add
or
enter
cmpb
pop
lcall
call
popa
icebp
popf
popa
xchg
leave
dec
mov
fst
mov
pusha
sub
lahf
add
jmp
fstpl
jb
mov
and
shll
movsb
cld
jmp
mov
frstor
shrl
bound
cwtl
ss
loope
mov
clc
incl
push
mov
fsubrs
jno,pn
dec
imul
xchg
dec
ret
scas
aam
and
test
and
dec
loopne
mov
adc
adc
jg
fwait
movb
push
jp
inc
cli
pop
popf
stos
iret
jg
mov
pop
enter
mov
int3
iret
dec
pop
orl
mov
push
mov
add
icebp
pushf
and
cmp
cmp
mov
inc
aas
push
call
imul
mov
mov
xchg
sarb
inc
mov
test
mov
xorb
xchg
jne
and
adc
add
mov
decl
lock
pop
adc
testl
iret
ljmp
xchg
xor
incl
mov
dec
add
sbb
call
repz
push
clc
mov
or
cmpsb
icebp
stos
nop
jg
ret
mov
outsl
mov
pop
iret
rorb
lret
inc
mov
call
pop
adc
push
scas
in
or
adc
lods
int
pusha
cmpsl
enter
inc
mov
inc
xchg
loop
cmp
test
leave
mov
lock
lgs
add
mov
xchg
xor
jg
adc
sub
sub
fmuls
orb
fstps
push
and
bound
xor
sbb
pop
push
mov
loope
lcall
in
cmc
or
aas
cmp
pminsw
xchg
xlat
xchg
mov
jmp
push
push
or
das
aaa
test
dec
adc
stc
jae
or
pushf
cmp
lcall
rol
lcall
sub
mov
in
mov
ljmp
jbe
lock
decl
mov
add
pusha
les
xchg
add
dec
mov
arpl
lcall
hlt
pusha
push
outsb
xor
xor
pushl
lds
sbb
push
adc
xchg
mov
out
cmp
incl
inc
xchg
mov
and
lahf
int3
xor
mov
cmp
mov
mov
repnz
pop
std
pushl
adc
sbb
jno
mov
push
mov
cmp
loopne
stc
add
push
add
cmp
cli
sub
icebp
mov
or
into
decl
xchg
sub
mov
lea
mov
push
xlat
push
mov
js
push
xchg
and
fimull
sbb
lcall
cli
lahf
test
scas
lret
pop
std
jmp
in
add
mov
mov
adc
addb
int
ds
jne
loope
mov
sahf
jle
jno
popa
xchg
add
jnp
push
add
jg
cmp
ret
int3
jnp
pop
inc
push
cmpsb
add
add
push
and
xchg
sub
jp
inc
mov
mov
add
pop
xor
movsl
adc
add
je
add
js
imul
loop
push
mov
sub
pop
pop
pop
xlat
ss
call
xor
or
cwtl
repnz
inc
add
add
int
repz
leave
mov
cld
cmpxchg
clc
cmpsb
cltd
push
sbb
mov
pushf
test
jo
stos
adc
adc
mov
or
decl
testb
ret
fcoms
jecxz
jg
pusha
xchg
aam
add
mov
mov
cmpsb
pop
and
loopne
stos
push
or
aam
shl
dec
sub
mov
js
ss
lock
xchg
jecxz
adc
js
out
clc
stos
sub
sub
sbb
or
in
jo
je
js
cmc
jg
pop
fimuls
popl
jo
sbb
adc
jl
add
xchg
repnz
out
xchg
jecxz,pt
jb
cmp
cmp
mov
jb
cmp
lcall
js
add
and
jb
xor
pusha
cs
in
xchg
cs
push
adc
mov
jmp
popf
and
mov
or
adc
scas
mov
lea
push
xor
mov
inc
mov
stos
loopne
sub
mov
mov
dec
jle
decl
or
cmpsl
dec
and
aad
cli
add
jg
pop
push
and
jg
fbstp
cmpsb
mov
sub
cltd
stos
lock
cli
jmp
dec
xchg
add
jmp
aam
clc
dec
dec
push
inc
jae
adc
jg
scas
outsl
out
xor
mov
and
add
sub
addl
std
incl
mov
xor
pop
repz
imul
test
mov
add
and
inc
mov
lods
call
add
jb
arpl
mov
inc
mov
xchg
mov
aaa
sub
sarb
lods
stos
pop
xchg
mov
and
dec
iret
fs
xchg
adc
mov
test
aaa
sbb
cmpb
jl
shlb
sub
inc
bound
jne
cmp
aaa
sarb
add
xchg
jl
aad
adcb
mov
inc
fsubp
incl
loope
loopne
add
test
imul
adc
lcall
dec
mov
call
sbb
jns
xor
ljmp
out
insl
leave
mov
pop
dec
lods
mov
sub
enter
xchg
lock
lcall
mov
loop
fildll
adc
xchg
lcall
lcall
inc
icebp
push
mov
lods
jle
ret
movsl
xchg
sarb
xor
mov
jmp
sub
cmp
inc
jns
sbb
mov
arpl
or
stos
stos
fstpl
decl
jp
adc
cmpsl
roll
mov
add
repz
adc
add
out
mov
movsb
mov
add
lods
sub
add
jg
std
outsb
inc
mov
imul
sbb
mov
xchg
or
lcall
imul
repnz
lret
subb
lret
xor
incl
pop
add
jmp
andb
sbbl
and
adc
sub
sbb
mov
add
and
sbb
les
out
dec
sbb
aas
mov
pusha
sahf
xchg
push
push
or
ljmp
sahf
xchg
in
sub
lret
movsl
fwait
inc
ljmp
cmp
cmp
push
mov
and
rclb
jl
cmp
ja
add
add
add
mov
ljmp
jge
test
in
cmpsb
sbb
dec
and
cltd
lret
cmp
call
mul
mov
sbb
mov
outsl
inc
repz
xor
pushl
out
inc
stc
jne
or
dec
inc
imul
fildl
aaa
insb
in
flds
push
and
adc
jl
lea
daa
mov
or
mov
push
xor
enter
ret
ret
pop
inc
push
cmp
ja
push
ljmp
cmp
xor
and
fiadds
sub
ljmp
push
outsl
in
push
xchg
or
in
inc
jmp
rcr
push
adc
out
push
jae
adc
adc
xlat
test
decl
clc
inc
mov
xchg
popa
add
testb
and
cli
decl
and
test
stc
std
cmp
or
adc
inc
ljmp
xor
xchg
jns
sbb
sbb
leave
pop
inc
inc
roll
mov
lahf
ja
push
mov
adcb
sbb
dec
outsb
dec
xor
inc
adc
lds
popa
subb
incl
xchg
add
leave
ds
add
in
xor
in
ja
push
jmp
and
cwtl
fdivrl
dec
mov
loopne
mov
and
xchg
fimull
cmpsl
fstps
ljmp
cwtl
cmp
jb
and
xchg
idivl
push
repnz
xor
jg
test
push
shll
adc
sbb
inc
add
xchg
mov
shl
adc
jecxz
sbb
mov
xchg
xor
xchg
push
mov
movl
call
pop
pop
add
inc
pop
add
cld
sub
and
add
inc
in
adc
int
decl
jmp
shl
inc
xchg
fstl
cli
or
xchg
sub
decl
fstpl
mov
int
mov
xchg
stos
or
or
sbb
mov
outsl
ret
dec
xlat
mov
divl
and
pop
jo
call
sub
and
push
cmpsb
inc
xchg
inc
rorb
push
mov
fwait
mov
inc
cltd
xor
and
adc
xor
inc
fnsave
aaa
movsb
add
adc
shlb
pushl
or
or
pop
push
xchg
movsl
std
mov
ljmp
adc
pop
fcmovbe
push
xor
inc
popf
testl
mov
and
sub
inc
push
loop
je
out
xchg
fwait
imul
xchg
insb
mov
sbb
jns
sti
inc
fs
cld
pop
stos
xchg
jl
push
pushf
hlt
mov
out
sub
jo
xor
aam
imul
loop
fwait
popa
std
dec
pop
aam
test
popa
jbe
sbbl
xchg
xchg
mov
repnz
jae
add
stc
dec
movsl
in
mov
lods
cli
sarb
lock
or
push
pop
xor
into
lods
shll
dec
loopne
xor
pop
mov
push
test
jo
or
sub
mul
rolb
movsb
hlt
dec
hlt
mov
mov
jl
jb
pop
jno
push
xor
loop
lcall
cld
push
or
sub
pushl
sbbb
imul
movsb
rclb
lret
repz
xor
std
in
mov
pop
pushl
incl
push
aaa
xlat
out
loopne
xor
push
push
lods
cmp
div
fadd
push
outsl
mov
aaa
orb
loope
dec
sti
add
xor
or
int3
mov
call
stos
inc
cs
dec
les
into
mov
outsb
aad
lock
cmpb
xchg
jbe
sbb
ljmp
or
fsubs
or
or
sbb
sbb
mov
cmpsw
jb
inc
push
cmp
addb
adc
int
jne
lds
pop
mov
dec
or
adc
push
jg
fisubrs
aam
jmp
jns,pn
test
lret
inc
xchg
xchg
loop
inc
xchg
ljmp
andb
out
out
lahf
je
sahf
ret
xor
in
rorb
ja
mov
sar
lcall
dec
loope
xchg
xor
addr16
insl
push
lods
add
add
leave
xor
ror
push
ja
lods
mov
cs
incl
add
ss
sub
dec
mov
imul
addr16
out
cli
fistpll
push
pop
nop
pop
dec
ljmp
pop
aas
imul
jne
incl
filds
mov
lcall
or
or
je
sbb
jbe
imul
adc
cltd
mov
stc
daa
lahf
andl
pop
jbe
ud0
roll
int3
sub
and
pop
cmpsb
add
incl
pop
pop
test
es
cmc
call
mov
dec
adc
sbb
loopne
out
es
hlt
fbstp
in
dec
cmp
add
push
stos
mov
hlt
mov
lds
xchg
xlat
aaa
cwtl
jb
icebp
outsb
cmpsb
dec
test
or
call
mov
jbe
mov
fidivrs
jae
and
imul
jl
test
add
mov
ror
rorb
push
inc
rorb
arpl
mov
cmp
popl
repz
stc
push
aaa
push
mov
in
dec
inc
sub
mov
and
mov
or
lock
sti
push
stos
xchg
rolb
dec
outsl
call
jne
sub
fstpl
loope
aas
cwtl
sub
test
xlat
mov
pop
mov
movsl
sar
jbe
cmp
outsb
mov
cmp
dec
mov
fildl
hlt
xchg
rclb
sbb
pusha
jnp
sbb
out
lock
loopne
stos
mov
adc
aaa
cli
and
push
lods
push
js
ljmp
data16
xchg
lods
xchg
push
ja
aas
mov
dec
test
scas
cmp
je
sbb
and
fistpll
jl
hlt
sub
inc
mov
jb
pop
packsswb
je
out
stc
lret
hlt
fs
aaa
rcll
xor
hlt
nop
lahf
int
mov
mov
aam
jge
arpl
sub
es
stc
inc
mov
jmp
les
es
adc
imul
sbb
outsb
add
mov
adc
inc
jge
and
adc
out
scas
daa
cmpsl
cmc
jb
cmp
pop
pop
mov
sub
jmp
and
inc
mov
add
xor
push
dec
cmp
ljmp
xor
mov
sub
sbb
sub
lods
mov
inc
ljmp
mov
loopne
mov
pop
mov
popf
inc
lods
ljmp
adc
sbb
ljmp
decl
push
xchg
pop
mov
mov
enter
pop
mul
adc
fidivs
lcall
mov
loopne
popf
mov
popa
mov
jb
push
jae
push
jbe
inc
pushl
add
or
push
mov
incl
dec
loopne
pop
jg
inc
lahf
neg
in
repz
scas
jge
mov
push
psrlw
pop
loopne
sub
pop
sbb
and
push
insl
add
mov
outsb
cmp
sub
sbb
aad
cmpsl
push
dec
cmpxchg
adc
add
imul
xchg
in
xchg
adcl
incl
inc
icebp
xchg
mov
js
jb
mov
sbb
jns
xor
fcomip
mov
push
pop
or
mov
push
andb
xlat
fbstp
mov
shll
in
decl
xchg
push
sbb
cmp
cwtl
mov
pop
dec
aaa
sub
cli
push
scas
imul
inc
out
sti
or
jns
testl
xchg
inc
pop
sub
sti
lcall
pop
scas
pop
mov
jo
or
fldt
addl
sub
filds
scas
adc
ret
aad
mov
sub
cmp
pushl
cld
jge
dec
popf
cmc
dec
into
aas
cmc
or
push
sub
arpl
jge
ljmp
out
test
test
fadds
lahf
dec
jo
sbb
jns
hlt
in
xlat
xor
add
stos
lods
out
mov
pop
inc
push
cli
jg
jns
jl
sub
enter
sar
dec
movsl
sbb
push
inc
jae
pop
hlt
push
cld
stos
adc
push
mov
repnz
xor
jecxz
addr16
mov
fbstp
test
pop
mov
xchg
mov
mov
xchg
add
test
out
incl
add
dec
pop
xor
inc
shrb
adc
and
ds
jne
pushl
mov
out
jb
shll
insb
pop
pop
sbb
mov
faddl
ljmp
hlt
dec
or
in
sti
test
jb
jns
mov
xor
jg
incl
jne
mov
push
lods
add
pop
pop
aas
and
jge
xor
ljmp
in
xchg
adcl
inc
push
dec
jbe
pop
jmp
iret
js
mov
mulb
iret
jmp
popf
sti
push
mov
call
adc
sbb
fstpt
mov
or
mov
xchg
cmpsb
lods
xchg
mov
or
mov
out
pushl
js
fstpt
xor
loop
xchg
push
pop
dec
movsb
cld
mov
testl
movsb
clc
lcall
mov
push
and
mov
push
mov
xor
push
loope
sbb
roll
pop
xor
test
jp
call
rolb
enter
xor
das
mov
movsb
xchg
shrb
test
push
mov
dec
stos
add
cli
add
xor
inc
pop
inc
or
in
fisubrs
sar
mov
mov
ljmp
fists
sbb
into
fiaddl
cmp
les
jg
xchg
mov
jmp
push
fdivrl
xchg
cmp
out
xor
decl
into
lods
in
shlb
jo
push
sub
jb
ds
jmp
pushl
pop
pushf
inc
imul
imul
xor
ds
icebp
popf
mov
stc
call
jg,pn
outsb
sbb
push
rcrl
fcomip
or
cli
push
adc
mov
xor
sbb
mov
push
fmuls
jb
jecxz
cltd
push
test
ret
cmp
lods
mov
cmp
out
jb
sbb
cltd
xor
lahf
xorb
mov
lahf
sbb
cli
mov
adc
adc
push
cmpsb
cs
imul
mov
jmp
jl
mov
lods
jne
push
sbb
inc
insl
jge
incl
clc
push
fldl
or
pop
arpl
ret
shl
sbb
mov
ljmp
iret
mov
rorl
insb
les
aad
mov
out
mov
das
js
jb
mov
xor
mov
and
mov
cld
test
ss
inc
into
pop
and
sbb
push
jg
ljmp
sbb
sub
addr16
fistpll
cwtl
add
mov
cmp
fcompl
adc
ljmp
lock
cltd
cmc
push
fmul
cmp
push
mov
jge
or
js
ljmp
sbb
aad
xchg
mov
out
pop
hlt
dec
testb
mov
sbb
push
and
mov
xchg
out
and
movsb
push
lea
popa
mov
mov
pushl
aam
push
loope
popl
xor
stos
or
adc
pop
and
lea
push
test
and
jb
out
xor
std
cmp
ljmp
incb
test
out
outsb
jbe
mov
daa
push
hlt
int3
and
push
push
mov
data16
idivl
sub
dec
sub
ja
cmp
out
das
lds
push
mov
pop
lock
mov
js
sub
lds
and
into
mov
xchg
ja
fwait
lcall
int3
or
inc
dec
inc
out
das
cmp
in
adc
jmp
dec
rcll
ret
fnsave
jns
shll
ds
xlat
fs
jg
jge
xchg
hlt
pop
cmp
cli
push
jb
sub
xcrypt-cbc
cmpsl
adc
fldl
fstps
inc
adc
je
incl
and
jbe
xor
shl
mov
or
mov
pushl
shrl
jecxz
push
jno
mov
sub
mov
adc
mov
jbe
sub
adc
ljmp
aad
fimull
lds
mov
ja
mov
std
lcall
pushl
dec
jge
cmp
pmaxub
add
mov
insl
lret
sub
test
mov
outsl
incb
pop
cli
inc
mov
dec
in
sub
or
push
inc
cmp
adc
jo
incl
icebp
or
pop
mov
in
adc
stos
fmul
xchg
xor
xor
in
pop
pop
push
call
dec
sahf
push
rorb
fisttpl
adc
aad
xorb
xchg
cmp
in
fidivl
mov
in
lcall
sbb
mov
jae
sub
data16
int
mov
inc
push
or
pop
addr16
leave
arpl
and
int
decb
into
lret
enter
xor
xchg
movsb
jo
mov
stc
sti
pop
cltd
pop
arpl
and
push
sbb
mov
aad
add
cmp
jg
outsb
dec
scas
push
outsl
cmp
popa
rcrb
aas
repnz
out
and
addr16
jnp
cmpsl
call
ret
push
mov
repnz
add
lods
inc
fistps
fistpll
xchg
js
insl
stc
loop
lahf
call
lods
test
lock
fsubrs
and
faddp
movsb
ljmp
pop
dec
adc
lea
out
mov
add
and
and
mov
movsb
lods
addr16
sbb
out
call
cs
dec
movsl
out
stos
push
pop
lahf
punpckhdq
add
or
shr
pop
xchg
cmp
xor
fldt
lods
mov
addr16
bound
sbb
lcall
push
dec
xchg
cmp
ja
mov
or
mov
in
inc
pop
sti
icebp
dec
jmp
fsubl
pop
mov
jl
sbb
xchg
insl
lcall
xchg
repz
mov
mov
dec
mov
jge
icebp
fldcw
arpl
push
xchg
sbb
dec
push
adc
loope
call
and
add
cmp
jmp
dec
out
movsb
pop
loop
pop
popa
nop
clc
iret
mov
test
jl
movsl
xchg
lret
jns
ljmp
push
lods
mov
mov
pop
out
fs
fadd
pushl
xchg
jnp
cmp
std
cmp
fwait
push
test
imul
cld
and
xchg
sub
loope
in
roll
arpl
out
add
inc
pop
or
ja
adc
xlat
xor
call
testb
xor
push
jmp
push
mov
push
push
mov
mov
js
xchg
inc
dec
sbb
xchg
adc
add
push
sbb
add
decl
cmp
iret
push
or
mov
lods
cld
cmpsl
je
push
pusha
pushl
loop
xchg
push
rolb
mov
outsb
dec
ljmp
pop
loopne
ljmp
fimull
je
rcll
dec
adc
or
mov
and
and
aaa
dec
cmpsb
into
xor
fdivrp
mov
xchg
pusha
dec
push
outsb
push
mov
jb
xor
in
outsl
int
inc
mov
mov
stc
mov
and
test
lcall
cwtl
scas
xchg
mov
push
sahf
cmp
adc
lds
sbb
call
mov
inc
sub
das
mov
negl
jne
testb
es
mov
mov
xor
clc
out
mov
or
jg
jg
cmp
call
add
enter
adc
test
lcall
or
mov
push
and
fs
push
lds
jge
xor
or
cli
lods
adc
sub
arpl
shll
jns
jmp
jg
pause
or
loopne
dec
mov
insb
xchg
push
int3
enter
fidivs
mov
aad
imul
jle
push
stos
inc
inc
in
fs
daa
stos
inc
lcall
push
push
jg
jle
pop
test
dec
jg
cmc
inc
mov
insb
dec
pop
jbe
sub
in
sbb
fidivrl
jae
test
icebp
mov
in
es
int
data16
pushl
xor
jp
or
jge
orl
repz
add
jecxz
and
jle
push
stc
jo
mov
xor
inc
jge
adc
mov
sub
addr16
mov
mov
add
lret
ds
leave
jp
cmp
ds
mov
add
mov
pushl
stos
shrb
sbb
inc
jp
sbb
cmpl
cltd
aaa
push
ret
jp
xchg
test
aaa
sti
mov
sub
loopne
or
sub
ja
inc
and
mov
mov
mov
mov
test
addb
lret
arpl
xor
incl
push
inc
or
push
push
pop
mov
jp
inc
iret
hlt
pop
in
mov
jle
xchg
es
lcall
cmp
icebp
pop
popa
dec
sahf
loopne
cmp
popf
push
inc
mov
cmp
ljmp
subb
or
mov
mov
cld
ljmp
and
loop
popa
stos
lahf
aam
int
mov
pop
push
fwait
xor
push
lea
xor
sti
pop
lcall
adc
push
xchg
add
push
insb
mov
daa
cmp
jae
jae
dec
lock
inc
out
dec
fs
xor
inc
add
cmp
and
push
sub
jg
inc
ja
decl
dec
xor
fs
out
and
xchg
inc
pusha
inc
test
dec
roll
fld
inc
and
lock
xor
mov
loope
scas
mov
ret
adc
arpl
jg
scas
xor
cwtl
rorl
loop
dec
daa
sarb
outsb
adc
call
jle
push
jbe
pusha
frstor
jb
mov
inc
sbb
addl
xor
decl
test
mov
sbb
and
mov
imul
xor
dec
test
dec
outsb
stos
mov
push
jnp
test
fcomps
add
cmc
mov
dec
sar
mov
enter
faddl
push
ljmp
or
push
out
jg
mov
faddl
add
push
loope
cmp
cs
iret
add
incl
add
xor
clc
shl
cltd
add
call
rclb
aaa
icebp
les
pop
xor
adc
shll
add
pop
loope
jmp
add
mov
dec
fsubl
int
js
xchg
movsb
test
cmp
cltd
sbb
fwait
shll
push
mov
and
adc
rolb
decl
pop
xor
js
sbb
loopne
mov
mov
fprem
jmp
adc
inc
jo
adc
fcoms
in
icebp
fwait
xor
repnz
cmp
pop
sbb
or
add
mov
cmp
push
or
arpl
sub
xor
int3
iret
lock
aam
aad
xchg
out
je
push
in
mov
repz
adc
incb
ljmp
imul
sti
or
cs
push
mov
bound
gs
fdivrs
fs
cmp
inc
mov
cwtl
xchg
lods
sbb
fucomp
iret
mov
push
cmp
jg
cmpsb
loop
in
push
out
shlb
inc
jbe
dec
adc
push
sbb
push
stc
xor
in
mov
sbb
xor
aad
js
adc
ja
lcall
dec
incl
fdivs
nop
sbb
xchg
ljmp
call
cld
lds
test
pop
shrb
xor
adcl
fwait
cmp
inc
mov
ljmp
mul
and
or
push
mov
sbb
ficoml
xchg
cmp
inc
push
mov
sbb
fnsave
daa
mov
incl
push
jo
cmp
push
repz
mov
and
test
dec
pop
lods
xor
call
fisttpl
add
iret
jecxz
xor
lock
cmp
das
insl
cld
mov
ljmp
in
decl
js
inc
flds
add
sahf
pop
lea
xor
mov
cmp
fdivrl
scas
xor
call
jmp
ljmp
bound
ret
adcl
xchg
decl
repz
movl
mov
add
popf
sbb
aas
inc
popf
and
loopne
subb
call
or
push
inc
pop
sbb
shrl
push
out
adcl
add
push
scas
jae
mov
jmp
cs
lock
sbb
push
addb
adcb
aaa
push
les
ljmp
aas
mov
cmp
pop
adc
and
cmc
mov
lahf
pop
imul
mov
cmp
cmpsb
jae
xchg
into
adcl
decl
mov
and
jo
mov
adc
in
aas
jl
aas
dec
shll
and
cmp
xchg
and
filds
mov
js
add
push
and
mov
loopne
sbb
pop
orb
push
dec
ljmp
flds
and
call
sbb
add
scas
inc
sub
jo
repnz
aam
lcall
cmp
insb
jno
out
leave
pusha
xchg
or
sbb
push
pop
pusha
arpl
andl
fiaddl
cmp
in
inc
mov
inc
shlb
imul
aam
sbb
gs
push
test
pop
cmp
lcall
sub
cmpsl
add
xor
incl
mov
push
aad
jb
cmp
stos
enter
insb
pop
push
lock
xchg
and
loopne
jmp
adc
pop
xor
dec
insl
or
stos
js
sub
or
jmp
jns
xchg
arpl
stos
jmp
add
rorb
mov
iret
add
mov
or
add
and
leave
xchg
jmp
gs
dec
dec
mov
pop
hlt
mov
mov
mov
ds
add
push
cmp
pop
lods
clc
jg
and
daa
pop
sbb
out
xor
clc
pushl
inc
jbe
fiaddl
jecxz
outsl
cltd
lea
add
push
xchg
scas
dec
inc
dec
sbb
aas
pop
rcr
hlt
ljmp
mulb
fsubrs
mov
mov
pop
iret
in
push
sub
jmp
add
mov
mov
lock
mov
sahf
or
add
inc
mov
cld
sub
enter
mov
jl
repnz
xor
mov
incl
bsf
rclb
cmp
js
pop
sysret
pop
add
loop
icebp
cli
rcrl
cmp
lcall
inc
nop
inc
adc
fimull
sub
cmc
or
lcall
adc
scas
jno
test
call
push
jg
pushf
es
xchg
mov
sub
sbb
in
dec
sbb
pushf
jecxz
ljmp
jb
sahf
jle
sbb
pop
xchg
add
call
cltd
jo
or
sbb
jbe
xor
jns
push
popa
adc
ljmp
pop
inc
adc
dec
mov
out
rorl
pop
add
scas
adc
pushf
out
xor
jg
or
adc
add
lods
or
sub
test
outsl
push
test
les
xchg
lret
test
adc
dec
popf
pop
pushl
mov
cs
and
xchg
test
and
js
push
and
xor
call
mull
in
test
add
test
fldt
fsubrl
mov
paddd
cli
inc
movsl
and
sbb
and
xlat
or
cmc
std
mov
add
fcomip
adc
inc
cmp
and
jl
jo
mov
loope
or
mov
sbbl
test
jmp
stos
leave
and
mov
mov
cwtl
mov
jmp
stos
or
pop
stos
mov
bound
pop
cmp
loopne
push
lea
or
jmp
ret
movsl
pop
jnp
sbb
dec
push
adc
addr16
push
xchg
fcomip
and
fs
cmp
xor
add
incb
and
clc
mov
dec
popf
aas
pop
repnz
sub
pop
stos
pusha
inc
rorb
incl
movsb
inc
jl
adc
ret
stc
adc
cmc
adc
frstor
lock
cmp
pop
sub
push
out
dec
and
incl
jno
popa
clc
or
cli
int3
add
xchg
or
inc
ja
loop
scas
add
lcall
outsl
popa
sub
sub
or
jae
sbbl
sbb
add
addl
add
xchg
or
das
jle
mov
cmp
lds
push
aam
push
scas
push
jmp
std
in
and
das
dec
pop
inc
dec
and
add
je
shlb
add
aad
call
ds
sbb
pop
mov
fld
pop
adc
mov
mov
or
dec
sub
decl
push
mov
xchg
add
stos
or
scas
mov
test
scas
pushl
add
dec
addl
out
adc
xchg
xchg
inc
lea
decl
gs
xchg
movsb
test
push
inc
inc
sub
pop
ds
cmpsb
mov
or
loop
pop
call
cld
out
fs
pop
add
in
and
andb
mov
or
push
mov
pushf
jmp
les
imul
xchg
xchg
add
js
adc
lahf
xor
xchg
ljmp
push
and
cld
xchg
repz
adc
call
inc
add
call
jge
pop
mov
xorb
les
dec
test
bound
call
cmp
xor
das
push
stc
jno
adc
and
cmp
insl
cmp
jmp
mov
test
mov
loope
sub
mov
addr16
mov
lcall
add
mov
aam
es
add
int
mov
cmp
call
loopne
dec
push
movsb
inc
or
adc
stos
cmp
and
test
jb
and
adc
or
decl
xchg
inc
pusha
mov
sbb
add
stos
add
test
add
add
and
mov
call
mov
pop
lret
adc
fwait
add
adc
daa
push
inc
jmp
mov
jnp
jbe
inc
je
mov
cmp
jns
push
xchg
unpcklps
into
jb
pop
repnz
out
mov
test
call
mov
and
xchg
jb
in
lcall
add
incl
ret
iret
add
movsl
cli
xor
lret
fadds
std
push
lret
test
xchg
jecxz
xchg
dec
call
pop
xchg
je
jno
pop
sub
add
popa
leave
mov
rcrl
incl
enter
inc
ret
stos
mov
repnz
popa
or
adc
mov
cmp
push
lcall
jnp
push
dec
mov
push
lods
lcall
call
push
lods
and
mov
pop
mov
jae
or
xor
test
push
pop
rorl
mov
incl
sub
mov
inc
jecxz
scas
jmp
push
mov
mov
incl
or
clc
add
lahf
cmp
and
enter
scas
arpl
mov
out
cmp
push
nop
and
and
subb
ret
jmp
fcompl
add
cmp
aad
cmp
scas
xor
shr
cli
and
adc
in
mov
add
xor
jg
jmp
dec
xor
add
xchg
xchg
ds
dec
aas
xor
add
inc
das
lret
pushl
sub
add
dec
sub
inc
rorb
fs
aas
sub
mov
sbb
cmc
mov
jl
jg
decl
mov
inc
sti
outsb
movsb
fcomi
sub
cmp
mov
pop
mov
jmp
and
xchg
mov
and
gs
test
js
xor
dec
icebp
subb
lcall
movsb
fs
and
jmp
or
xchg
or
addr16
pop
sbb
pop
dec
xchg
or
sbb
push
add
insb
mov
pop
fdivrl
mov
and
jmp
aad
pushl
cmpsl
out
popa
int3
out
dec
mov
jbe
jg
push
out
aam
sbb
mov
call
ss
enter
lea
js
jle
add
pushl
sub
jle
jo
rol
jo
xor
dec
dec
fsubrl
jmp
lea
icebp
lods
std
out
cli
jmp
jl
call
push
and
xchg
mov
call
in
adc
sbb
jb
xlat
data16
fmuls
and
sahf
pop
lahf
in
push
aam
mov
add
sbb
fistps
cmp
sub
ja
sub
push
inc
xor
mov
loopne
aad
cli
mov
mov
lock
cwtl
xchg
sub
xor
mov
and
or
orb
cmpsl
rorb
sub
xchg
setp
call
or
shrl
enter
pop
cmp
fildll
ffreep
dec
inc
mov
in
arpl
fs
push
dec
xor
inc
dec
add
cmp
sub
sbb
cld
add
fldl2t
sub
in
jecxz
adc
pushl
fnstenv
fs
xor
out
mov
pop
xchg
incl
in
push
xchg
mov
xor
xchg
ret
pop
mov
into
test
xchg
insl
pop
mov
sbb
or
or
pop
adc
rcrb
inc
shl
arpl
or
inc
je
push
ror
add
aas
xchg
sub
fwait
mov
mov
ror
adc
or
push
sti
push
aam
enter
sub
lods
mov
pushl
jae
rorl
rol
fildll
in
and
and
filds
sbb
dec
lcall
add
mov
cmp
dec
movsb
cmc
rclb
pushl
pop
ljmp
fbld
insb
leave
jbe
cwtl
fiadds
pop
mov
inc
pop
cltd
dec
ficompl
sub
inc
or
xor
decl
lret
xor
mov
imul
sbb
xchg
adc
test
test
pushl
sub
add
std
adc
addl
mov
movsb
test
xchg
cmp
addb
mov
and
cld
jmp
adc
adc
or
orps
xchg
ljmp
and
and
cltd
xor
pusha
xchg
adc
test
pushl
jle
jg
add
fdivs
sub
rcll
pushf
stos
fsubl
ljmp
mov
dec
lret
inc
mov
cmpsl
dec
adc
jg
adc
xchg
cmp
loop
cmp
test
pop
insb
jg
shll
sahf
mov
rcrb
add
jmp
or
fldl
sbb
pusha
popa
xchg
pusha
xor
or
scas
add
decl
lret
in
aad
lahf
adc
mov
jb
fsubl
imul
pop
sbb
out
clc
loop
xchg
mov
movsb
xchg
scas
jl
imul
fistl
in
jecxz
incl
inc
xor
xor
xchg
inc
mov
adc
rcll
push
sbb
popa
jle
clc
ljmp
push
or
rclb
mov
pop
or
dec
pop
jb
pop
popa
frndint
lcall
in
aas
movsb
out
popf
fwait
in
mov
decl
lock
movsb
nop
lods
js
sbb
xor
sub
call
bound
cmp
in
add
loop
sub
sbb
ljmp
into
dec
add
jl
fldcw
mov
add
ficompl
mov
add
sbb
mov
rorb
ret
mov
xadd
jmp
sub
add
icebp
loop
mov
jmp
fcmovbe
cwtl
mov
jl
je
mov
scas
jge
rolb
ss
mov
adc
out
jle
mov
decl
and
jmp
add
push
into
push
push
dec
mov
or
add
sahf
push
mov
xlat
outsb
ret
xor
jg
repnz
out
push
pop
imul
add
xor
icebp
sti
je
popl
pop
jmp
xor
cli
push
xor
cmp
pop
std
pop
icebp
out
cli
add
sub
sub
and
adc
push
sub
and
mov
sbb
addr16
cmovo
add
dec
mov
pushl
in
int3
mov
js
and
or
lods
cmc
and
aad
jmp
mov
test
addb
push
daa
adc
or
inc
pop
dec
jge
cltd
add
inc
mov
inc
jl
cmpsb
xchg
adc
inc
popf
add
aaa
je
loopne
and
xchg
push
ss
push
inc
jecxz
jmp
out
xlat
push
ljmp
sbb
mov
int
in
cmp
call
pop
lea
and
mov
aam
push
mov
fadd
xor
mov
scas
push
stos
out
loopne
add
mov
adc
lret
call
cmpsb
mov
decl
cmpsl
sbb
pop
push
pop
shrl
arpl
jg
call
pop
add
call
jmp
inc
and
mov
lds
push
mov
jmp
push
jecxz,pn
lret
insl
sub
mov
popf
popa
rcrl
xor
mov
jg
decl
lods
jg
ljmp
mov
aas
sbbl
xchg
and
call
jle
or
mov
je
add
outsb
add
fisubs
or
pushl
pop
cld
mov
pop
adc
shll
fnstenv
cmpsb
divps
call
mov
pop
insl
rolb
icebp
bsf
ret
dec
inc
or
jg
mov
xchg
insl
popa
add
or
push
cli
icebp
shll
pushl
aam
cmpsl
add
cmp
push
xor
hlt
xchg
je
push
pop
mov
call
dec
ja
lock
jne
and
stos
daa
cmp
mov
xor
add
subb
popa
sub
mov
cmc
arpl
roll
adc
push
jge
add
jns
pushl
ror
test
lahf
sbb
inc
dec
ja
or
aad
sub
loopne
xchg
sbb
decl
inc
sbb
push
out
ss
pushl
sahf
sahf
lods
clc
push
xchg
cmp
add
add
js
mov
mov
mov
xchg
ljmp
add
xchg
dec
adc
adc
cs
das
dec
xor
sbb
mov
lock
and
or
jbe
push
push
fcmovnu
sub
jg
lods
mov
push
ljmp
and
ljmp
nop
sti
and
jnp
inc
inc
xchg
scas
std
mov
mov
cmp
lahf
movsl
cmp
mov
or
js
test
call
mov
fimull
cmpsl
jecxz
and
sub
mov
clc
dec
fimull
xchg
ss
xlat
push
pushf
jle
les
mov
fsubl
mov
inc
scas
mov
call
inc
leave
xchg
lcall
mov
dec
test
mov
shr
pop
lret
cmp
pop
add
mov
mov
test
std
int
ljmp
out
and
mov
mov
jno
andb
jbe
inc
pushf
cmp
jg
jmp
xor
mov
testb
xor
mov
adc
cld
out
fbld
jecxz
jl
sbb
iret
xor
ja
mov
mov
xchg
cld
fistpl
out
xlat
add
roll
in
sub
cmp
sbb
cs
les
xchg
fistl
in
je
clc
pop
cld
pop
xor
bound
mov
stos
pop
popa
cs
incl
mov
add
sahf
enter
mov
xlat
leave
sbb
jo
mov
call
dec
push
jecxz
inc
pop
add
decl
in
and
add
inc
nop
insb
roll
int
ljmp
arpl
xchg
dec
into
mov
lock
ficomps
mov
aad
outsl
sbb
sub
shl
data16
test
ret
and
push
pusha
push
pop
es
scas
jge
inc
dec
jmp
or
clc
pop
or
rcr
sbb
aam
mov
mov
sahf
jge
jge
cmc
daa
mov
push
or
pop
sbb
jmp
rolb
pusha
or
push
and
add
jne
fwait
mov
xor
sbb
cmpsl
add
mov
push
call
adc
aas
lret
lcall
mov
popf
jl
add
outsl
iret
dec
outsl
insl
xor
add
loop
xchg
loop
js
mov
cmp
cmp
ljmp
add
popa
clc
addl
insl
push
insb
cwtl
aaa
push
enter
loope
pop
sub
out
clc
inc
lahf
rcll
clc
nop
adc
jge
cmp
cmp
faddl
incl
cmpsl
adc
push
rorl
rcll
in
mov
test
rol
imul
ljmp
std
nop
sub
xchg
out
ss
or
inc
dec
mov
sbbl
pop
push
mov
lcall
and
push
in
push
add
mov
sbb
mov
jp
stos
aaa
std
pushl
js
jp
add
rsqrtss
or
xor
push
adc
test
decl
push
inc
xchg
xchg
jo
xchg
push
sahf
ret
inc
mov
leave
sarb
repz
lds
call
adc
jmp
and
inc
addb
ret
in
popl
jmp
daa
jne
loope
and
mov
push
push
mov
cmp
fdivrl
arpl
incl
add
inc
mov
add
push
lods
arpl
sub
and
mov
test
mov
ljmp
outsl
popf
aam
pop
pop
sbb
xchg
mov
adc
hlt
add
notb
cmc
or
cld
icebp
cmp
stc
cmp
lahf
pop
or
add
mov
call
lods
ffreep
in
frstor
xorb
xchg
bound
fwait
sub
mov
int
and
cld
sbb
movsb
fs
xchg
adc
imul
add
ds
mov
push
leave
adc
xchg
push
jmp
mov
xchg
adc
mov
shrb
jae
push
shrb
push
sbb
add
xor
decl
jecxz
fnstsw
sub
data16
mov
cmc
subl
mov
fs
inc
clc
jnp
pop
add
sbb
fisubrl
push
pop
pop
dec
inc
add
and
inc
jmp
add
xor
cwtl
add
mov
push
hlt
inc
inc
test
icebp
push
mov
ror
pop
inc
dec
mov
inc
jb
xchg
pushf
imul
negb
lods
sbb
inc
ljmp
sbb
adc
aad
dec
pop
rcll
mov
ja
lods
fnstsw
ret
mov
aas
cltd
sub
sbb
decl
shll
adc
inc
pop
je
jge
dec
cmc
mov
jl
mov
jmp
jo
and
outsl
dec
add
movsl
mov
ljmp
pop
mov
mov
test
dec
mov
enter
and
mov
nop
test
ret
sbb
dec
adc
dec
mov
pushw
fistps
push
adc
pop
clc
test
inc
ja
add
inc
adc
cwtl
xlat
pushl
jbe
popa
dec
jne
and
roll
mov
fldt
xor
loope
sti
mov
ljmp
js
jns
or
inc
pop
pop
dec
push
lcall
xor
inc
int
insl
jg
test
mov
fldl
pop
pop
inc
das
test
les
adcb
int
sbb
pop
call
sahf
test
leave
repz
sub
insl
daa
shlb
jnp
incl
cwtl
push
clc
inc
movups
dec
push
push
leave
popa
sub
push
mov
dec
mov
or
decl
fs
xor
mov
outsb
mov
cmpsb
shlb
icebp
and
xchg
add
push
mov
sub
icebp
les
adc
push
flds
add
ljmp
dec
leave
stos
iret
pushf
loope
pop
push
into
mov
inc
nop
rolb
push
aam
and
mov
and
rolb
mov
adc
es
lea
xor
ljmp
push
xlat
jl
sub
add
add
mov
cli
add
jle
adc
stc
push
mov
xchg
mov
dec
loope
lea
test
inc
push
and
ljmp
sti
mov
ret
cs
and
incl
jmp
pushf
fs
or
and
sti
rclb
cs
shr
mov
je
lods
dec
jg
add
xlat
fwait
fwait
out
call
mov
push
fs
fwait
in
xchg
push
orb
sbb
jmp
mov
pushl
call
or
dec
cmpsl
push
in
into
adc
add
mov
dec
fcomps
ljmp
and
push
inc
js
jecxz
adc
push
dec
outsb
scas
pop
push
testl
push
mov
mov
ljmp
and
loop
sbb
dec
and
sbb
sbb
sub
xchg
arpl
dec
rcl
dec
add
pushl
loopne
cmpsb
xchg
call
mov
cmc
lcall
sbb
jle
sbb
push
sbb
outsb
leave
cmp
jle
icebp
sbb
inc
or
cld
inc
ror
or
cli
push
inc
mov
and
push
mov
mov
movsl
das
daa
dec
ret
popf
loopne
lcall
aaa
fstpt
jp
and
shrl
pushf
or
adc
rol
pushf
mov
ljmp
lods
jns
int3
inc
mov
cmp
insb
sti
xchg
mov
enter
adc
incl
div
ja
je
jp
fwait
sub
cmpsl
pop
push
pop
inc
adc
mov
sbb
inc
in
mov
and
ljmp
cmp
pop
pusha
or
adc
das
and
pop
rcl
test
je
loope
push
mov
mov
decl
mov
dec
int3
push
loopne
jns
fcompl
cmp
enter
test
in
cmp
hlt
lcall
ljmp
pop
stc
ret
imul
and
xchg
add
jmp
scas
jmp
cli
xchg
prefetch
jmp
xchg
mov
inc
cli
push
push
mov
push
insb
enter
pushl
dec
add
mov
jmp
fdivr
fwait
xchg
or
jmp
pop
push
sbb
inc
jo
pop
jb
out
mov
je
sbbl
xor
or
incl
dec
repz
inc
xor
pop
mov
popf
ret
push
add
enter
jg
push
and
push
inc
pushf
daa
cs
gs
xor
jg
adc
jb
out
fadd
add
aas
mov
inc
cmc
adcb
mov
enter
jge
daa
jl
ficoms
add
call
testl
pop
loop
aaa
pop
push
rclb
inc
les
jo
inc
mov
mov
add
xchg
add
iret
sbb
sbb
enter
dec
pop
out
std
inc
scas
orl
add
xlat
fs
cmc
pop
inc
mov
mov
call
add
xchg
in
sbb
sbb
lds
nop
out
sbb
cmpsl
xor
popf
jnp
cmp
incl
jb
add
dec
shrl
push
jle
jg
mov
xchg
jb
lds
jno
aaa
sub
or
lcall
add
aas
inc
sub
aad
jbe
ja
cmp
pop
lcall
imul
push
jo
popf
mov
pushf
sub
fisttps
add
jecxz
pop
pop
adc
mov
cmp
jl
xchg
xor
add
sub
dec
in
int3
or
test
inc
orb
adc
mov
es
repnz
outsl
cli
cli
test
enter
push
xor
int
pushf
adc
out
or
pop
adc
xchg
add
add
add
movsb
lds
das
pop
loop
testb
dec
adc
sbb
mov
jae
popa
sbb
and
decl
fcmove
push
or
mov
or
stos
xor
inc
inc
add
lock
std
sub
add
sbb
jnp
incl
jno
and
dec
add
jns
mov
andl
lock
out
add
call
mov
mov
nop
dec
ficompl
iret
dec
jmp
inc
hlt
pushf
mov
test
mov
and
and
adc
adc
sahf
xor
ret
orl
sbb
ja
jg
and
shl
jg
push
dec
sub
bound
clc
aas
ljmp
decl
das
or
imul
xor
or
xorb
aaa
or
std
sub
adc
pop
cmpb
fwait
ljmp
outsl
filds
and
push
aam
movsb
loop
push
mov
lret
add
ret
dec
cmc
out
int3
push
sbb
pop
xchg
adcl
popa
sahf
scas
aaa
arpl
insb
xor
jg
bnd
inc
jns
jl
jle
mov
cmp
inc
dec
mov
push
loopne
adc
push
mov
ret
mov
inc
mov
test
outsl
nop
push
add
jg
test
jmp
push
push
std
mov
insl
fs
clc
mov
dec
arpl
fcoms
imul
repz
push
add
mov
mov
add
jo
loopne
cld
jo
xchg
mov
imul
js
or
fwait
hlt
jl
mov
cli
xor
in
test
or
inc
cs
popa
test
test
in
or
cmpsl
xorl
movsl
jecxz
stc
mov
xor
test
mov
push
cwtl
add
push
cmp
cli
pop
ja
push
sub
mov
loope
add
push
in
stc
dec
add
das
jno
add
sub
les
daa
pop
loop
jp
call
jno
sub
or
mov
int3
inc
ljmp
roll
popl
push
js
divb
test
pop
ret
outsl
addl
lcall
add
repnz
lds
mov
nop
mull
mov
xor
and
cmpsb
push
mov
push
test
xchg
in
decl
and
fistl
and
mov
out
leave
add
cmp
and
push
push
xor
outsl
repnz
ljmp
cli
inc
das
sbb
or
xor
pop
scas
push
jmp
dec
call
fcoml
cmp
sbb
or
sub
xor
je
incl
test
sbb
xlat
mov
mov
sti
xor
mov
push
mov
jg
sub
add
in
push
loop
jp
mov
mov
push
xchg
fldenv
loopne
inc
hlt
or
sub
jb
jo
dec
and
mov
in
adc
xor
or
or
and
jmp
ret
rcl
sarl
sub
in
xor
gs
mov
inc
sub
push
or
or
dec
int
dec
in
xchg
push
cmp
adc
push
push
loope
xor
pop
sub
in
shll
in
imul
loope
jmp
cwtl
adc
lret
movsb
cmp
pop
or
sub
push
and
add
outsl
or
incl
movsl
ja
jecxz
fcomps
pop
lcall
rcll
loopne
pusha
iret
cmp
jg
loop
jp
pop
pop
out
push
adc
cmc
movsb
push
pusha
xor
adc
and
jmp
lock
mov
lret
imul
or
mov
sbb
and
call
adc
imul
out
add
pop
dec
mov
pop
loop
xor
outsl
mov
pusha
or
into
xchg
jp
or
sbb
into
sub
ljmp
incl
addr16
rcll
mov
fstl
aad
xor
xchg
adc
sar
push
ljmp
addb
popa
xchg
rclb
cmp
pushl
data16
cmp
loopne
jl
push
into
jg
insb
add
cmpb
lea
call
sub
mov
adcl
push
jmp
lods
mov
mov
pop
and
cmp
adc
adc
aad
xor
popf
and
mov
fstps
nop
adc
pushf
add
leave
mov
addb
mov
push
stos
ja
ret
call
stos
mov
cmpsb
sarb
add
cmpsb
in
loopne
inc
cmp
cmp
subl
aaa
jae
in
sbb
int
and
mov
test
ljmp
pop
repnz
out
mov
stos
push
or
xor
jns
pop
insl
mov
and
pushl
and
mov
adc
enter
mov
mov
jne
push
inc
jmp
cmp
mov
popf
lret
shlb
mov
imul
pop
add
mov
ljmp
lret
out
notl
imul
call
pop
or
xchg
sbb
aaa
mov
je
sarl
inc
mov
loope
mov
fs
jmp
out
enter
add
in
sbb
call
sahf
leave
inc
lahf
jbe
adc
ret
lret
lock
lods
mov
movsb
aad
cmp
dec
mov
cli
out
dec
jmp
sbb
mov
iret
push
outsb
dec
es
fbstp
inc
cmp
out
add
daa
push
dec
cmp
aas
jne
push
test
push
outsl
incl
nop
fs
mov
xor
ret
mov
idiv
popa
icebp
xchg
cmp
jmp
mov
mov
enter
pop
and
xlat
cmp
pushf
pushf
lret
cmp
cld
mov
pushl
lcall
psrad
inc
add
cmpl
popa
mov
pop
push
push
sub
shlb
cmp
dec
lahf
orl
mov
mov
aas
mov
lcall
out
jmp
fiadds
call
test
arpl
mov
mov
jae
adc
inc
mov
popl
mov
hlt
jmp
pusha
call
clc
cmp
cmp
loop
ja
pop
inc
or
decb
mov
cmp
mov
repz
push
sub
das
ret
dec
adc
lcall
shl
and
call
aam
mov
inc
cltd
and
scas
clc
addr16
incl
sbb
mov
pop
push
jmp
clc
sbb
decl
or
fbstp
das
data16
jno
add
mov
mov
lea
cli
lcall
pushl
icebp
inc
xor
add
add
mov
lcall
call
lods
hlt
in
inc
push
xor
xor
outsb
mov
adc
movsb
lock
jae
mov
add
jg
and
ja
pusha
and
adc
add
inc
sub
in
sbb
lret
mov
ljmp
and
push
xorl
and
pop
ficomps
sar
fs
jmp
fistl
insb
add
push
clc
mov
jg
ljmp
push
add
adc
sti
xor
clc
arpl
dec
lock
jb
jbe
loop
lods
sub
jle
jg
ljmp
pop
je,pt
xchg
sahf
iret
xchg
xchg
lock
xchg
push
je
pop
incl
orb
ret
pushf
and
pop
movsb
xor
fisubrl
rolb
std
or
add
dec
int3
or
push
in
aaa
mov
pusha
mov
loopne
jo
mov
nop
inc
fwait
add
sub
in
or
cmc
add
out
push
lods
cmpsb
jge
popf
imul
mov
clc
or
pop
adc
ret
in
and
jg
jo
mov
inc
imul
or
or
insl
leave
insb
lcall
mov
incl
sub
add
std
daa
cld
xchg
inc
pop
add
mov
add
mov
jg
sarl
adc
iret
sbb
arpl
mov
adc
push
outsl
xchg
xchg
sub
repz
loopne
shr
daa
outsb
add
fistpl
cmp
jo
daa
test
cmp
mov
jg
xchg
jno
mov
jno
mov
cmp
test
pop
loope
jmp
jne
push
push
inc
add
cmp
mov
fdivl
push
xchg
stos
or
lcall
fisubl
or
mov
lret
add
test
in
xchg
cs
mov
pop
test
adcb
inc
xchg
or
in
jp
pop
and
rcll
lea
and
loop
sub
lcall
lds
pop
loopne
pop
insb
hlt
sbb
xchg
cwtl
adc
cwtl
es
and
stos
call
cld
lcall
push
pop
orb
push
sub
and
mov
inc
adc
loop
decl
popa
inc
xchg
test
cmp
sub
out
xor
loop
add
incl
and
ret
lock
gs
fnstcw
aas
inc
mov
cs
push
pop
and
push
jecxz
mov
icebp
pushf
or
adc
sub
push
test
adc
call
loope
loopne
lea
flds
inc
pop
out
xor
push
ret
sbb
jmp
add
adc
test
mov
sbb
ret
push
lock
mov
and
call
xchg
and
rcrb
mov
fadds
adc
xor
jl
sub
dec
imul
inc
dec
iret
shll
in
stos
lock
jmp
pop
dec
mov
enter
pop
add
mov
xor
lcall
add
out
mov
movsb
cmc
inc
pop
movsb
bound
ss
mov
push
call
jmp
outsb
dec
add
or
adc
cmp
inc
push
sbb
or
loope
setg
pop
xor
lcall
cmp
dec
lcall
fisttpl
or
sbb
lahf
mov
xor
vphadduwq
or
push
push
push
fwait
movsl
imul
sar
ljmp
mov
outsl
aaa
cltd
int
in
or
stos
xchg
or
es
sbb
or
into
cld
call
aad
lock
jo
xchg
sub
adc
int
mov
push
jg
add
test
scas
and
addb
jle
call
in
dec
rcll
in
mov
out
pop
incl
lcall
sbb
mov
add
and
cli
stos
fdivrl
daa
cmpb
bound
sub
lahf
dec
push
imul
clc
mov
sub
xor
inc
cmpsb
out
incl
mov
cmp
inc
fbld
mov
lahf
ret
mov
clc
mov
int3
movl
xor
push
adc
mov
orb
push
or
adc
push
rclb
add
nop
loope
dec
jno
pop
cltd
leave
and
imul
incl
outsb
movsl
scas
icebp
push
xchg
subl
jmp
or
movsb
movsb
mov
arpl
jns
orb
jecxz
ficompl
mov
push
lcall
ret
mov
sbb
inc
test
inc
pop
lock
fstps
xor
or
shld
lds
push
adc
out
adc
les
add
mov
pop
pushl
or
cmpsl
sub
mov
pop
or
movsl
and
bound
jmp
push
xor
mov
pop
jle
out
inc
adc
les
sbb
loopne
jge
push
mov
or
mov
popf
jmp
add
push
or
dec
addr16
or
pop
pop
or
mov
or
mov
sbb
loopne
add
mov
jo
cmp
mov
add
sbb
cmpsb
pop
popa
iret
mov
bound
xlat
or
mov
dec
cld
roll
outsb
test
xor
inc
mov
xchg
stos
ud0
std
jmp
in
mov
pop
test
and
rolb
call
in
out
loopne
dec
mov
mov
add
pop
push
lret
sub
and
out
xlat
sbbb
lahf
mov
mov
mov
cmp
ss
cmp
pop
cmp
adc
decl
xor
dec
adc
and
and
mov
jmp
call
mov
mov
test
cld
jle
mov
insb
inc
mov
scas
incl
into
imul
and
pop
add
in
cmp
mov
cmp
sbb
popa
lret
jbe
sbb
cmp
mov
xor
lock
pop
popa
cmpsl
dec
nop
aaa
cmp
or
rcr
decl
in
imul
jno
and
rcrl
sub
xor
mov
push
dec
loopne
pusha
sbb
cmp
sbb
jg
push
dec
sbb
pusha
or
test
add
cwtl
insb
dec
sahf
add
xor
std
mov
add
mov
lcall
and
or
popa
jge
movsb
mov
xchg
jg
add
push
enter
xchg
pop
dec
xchg
pushl
std
rcrb
in
push
sub
cld
movsl
add
mov
adc
jg
call
add
xor
mov
loop
out
out
cmpb
fisttpl
mov
in
jnp
push
sub
pushl
pop
arpl
faddl
dec
push
fisubrs
fs
popa
dec
loopne
dec
push
pop
test
imul
or
sub
test
pop
in
pusha
test
add
mull
adc
or
sub
jmp
cmovae
push
sbbl
xchg
cmp
adc
mov
mov
or
xchg
dec
add
nop
rorl
push
fucomip
or
je
xor
adc
std
and
cmp
mov
or
mov
xchg
rcll
pop
adc
mov
cwtl
clc
pop
decl
pop
cmp
inc
in
jns
jmp
roll
pop
mov
ficompl
jo
movsl
or
mov
nop
ret
jmp
push
mov
mov
dec
movsl
mov
inc
xorl
and
add
mov
sub
sti
cmpsb
pushf
pop
cmp
xchg
or
or
xor
ljmp
hlt
mov
pop
daa
mov
and
mov
sbb
lock
repnz
pushl
jno
xchg
push
dec
cmc
adc
call
dec
js
add
adc
outsl
lds
pop
cmc
pushl
popa
xor
loopne
or
or
ljmp
ljmp
subb
push
push
lea
sub
xchg
mov
push
jo
std
fcoml
or
fisubl
decl
sub
cmp
inc
aas
push
roll
lahf
push
sbb
or
xchg
push
and
out
clc
mov
icebp
aas
fidivl
into
cld
in
and
add
sarl
sub
cmp
and
sbb
and
jmp
aam
add
add
cmpsb
stos
xor
dec
or
push
sbb
mov
mov
mov
pop
outsb
orl
mov
decl
jmp
mov
mov
add
fsubrl
adc
or
test
jmp
dec
sbb
sub
aas
mov
xor
and
jno
in
mov
jg
cwtl
jnp
add
push
sbb
push
adc
movsl
cmp
test
inc
pop
lock
icebp
adc
xchg
popf
das
add
daa
dec
jecxz
jecxz
ljmp
shrb
cmpsl
sub
clc
mov
or
xor
lods
sub
or
jmp
adc
jl
xor
jns
ljmp
pop
outsl
mov
jg
outsl
lcall
mov
sbb
das
pop
fisttps
mov
mov
outsl
das
push
push
push
shrb
or
es
sub
repz
call
fcmovb
ret
ret
add
adc
sbb
pop
mov
cmp
cmp
out
aad
push
jmp
xor
sar
decl
dec
int
or
push
add
out
xor
scas
xor
add
sbb
cli
es
dec
outsb
mov
call
xor
cld
inc
leave
lods
jo
jp
jmp
mov
mov
dec
shll
add
pop
loopne
lahf
enter
in
or
loopne
test
pop
sbb
addr16
fbstp
pushf
pop
js
cmpsb
enter
cmp
scas
clc
lcall
jp
lock
inc
stc
add
inc
pop
mov
hlt
inc
sbb
sbb
inc
mov
insb
js
inc
or
jl
and
dec
or
push
add
sarb
call
loop
ret
call
popf
push
incl
imul
fadd
imul
cmp
push
add
jecxz
xchg
inc
pop
inc
jmp
cltd
sbb
push
aad
sub
insl
stc
lret
dec
int
ljmp
adc
lahf
stos
int
ss
outsl
add
mov
mov
call
and
adc
out
out
and
psubusw
aaa
mov
add
dec
sbb
ljmp
sahf
mov
lea
hlt
xchg
scas
out
mov
dec
in
cld
mov
cmpsb
mov
and
rorl
out
or
scas
cmp
aas
movsl
sbb
push
sub
push
and
decl
sbb
dec
push
push
sub
rcrl
pop
dec
mov
insl
stos
push
ret
fimull
mov
xor
aas
inc
icebp
cwtl
lea
add
stos
sbb
cmp
incl
repnz
lock
cmp
push
shll
sub
xchg
pusha
or
or
ds
sbb
cld
fiaddl
test
cmpsb
in
pop
inc
popf
xor
cmpsb
enter
mov
push
es
std
cmc
lods
out
mov
cmp
mov
lea
cwtl
add
jmp
add
xor
add
add
xchg
ret
enter
iret
adc
push
addr16
inc
jo
fisubl
pop
int3
add
mov
cwtl
gs
mov
xor
and
test
pop
xchg
sbb
incl
mov
pop
mov
push
mov
inc
loope
pop
adcb
call
dec
xor
inc
inc
sbb
sbb
ss
testl
push
mov
sbb
add
gs
decl
pop
and
pop
dec
dec
sub
mov
push
jae
mov
dec
data16
push
mov
lock
add
into
or
mov
push
dec
pushf
mov
decl
mov
cmp
lahf
add
stos
js
add
mov
sbb
movsb
sub
xor
lcall
jmp
pop
ret
leave
and
int3
clc
incl
and
es
lret
sahf
sub
shrb
cmpb
xor
add
push
enter
stos
out
pushf
xor
lcall
add
pop
cmc
pusha
inc
cltd
adc
orl
insl
in
jb
jg
xlat
mov
adc
out
sbb
pop
pop
and
jge
jg
mov
dec
lods
xchg
push
inc
das
sub
xchg
mov
adc
sar
cmp
jns
mov
xchg
orl
xorb
rorl
sub
call
std
cmp
fdivp
mov
adc
inc
sahf
call
inc
xchg
insl
adc
adc
lcall
loop
cmp
or
movsl
jecxz
sahf
incl
sub
popl
adc
mov
lret
add
sbb
pop
pcmpgtb
pushl
notl
inc
mov
into
lds
cmc
inc
enter
jmp
call
fwait
inc
cmp
and
dec
and
lock
dec
pop
and
add
jb
aaa
std
fbstp
lcall
lock
mov
pop
jo
test
lcall
inc
jne
nop
fsubs
mov
sbb
pop
sbb
movsb
test
and
cmp
test
fsubr
mov
jle
push
add
pushl
aas
and
adc
push
call
loopne
xchg
arpl
bswap
mov
push
pop
mov
mov
mov
or
test
arpl
out
adc
xor
adc
enter
push
sbb
push
loope
outsb
popf
xor
aaa
js
add
js
or
xchg
jg
decl
jns
xor
pop
pop
aam
dec
mov
hlt
std
test
mov
enter
inc
add
pop
loop
or
jg
outsl
ds
std
push
into
add
sbb
cwtl
jnp
sbb
xor
cmp
pusha
out
add
xorb
lock
and
call
es
add
imul
ljmp
movl
shlb
jmp
fisubrl
fldcw
pushl
add
mov
fs
dec
subb
outsl
scas
add
push
and
cmp
inc
mov
stos
call
cmc
cmp
movb
int3
xor
xchg
mov
repnz
ss
lock
incl
movsl
mov
out
push
mov
cmp
jnp
dec
cltd
adcl
mov
mov
rorb
mov
fistl
jne
ljmp
test
cmp
dec
leave
stos
inc
stos
lock
fisttpll
xchg
jmp
sbb
out
fsubrp
mov
cmpsl
dec
xchg
loope
xor
mov
in
or
or
add
xchg
jle
add
sbbb
push
and
xchg
rorl
pop
mov
dec
dec
nop
sarl
fnstcw
mov
pop
mov
xchg
nop
jmp
mov
imull
lret
std
sbb
sbb
lcall
sbb
decb
inc
xor
xor
pop
sub
pop
add
push
add
dec
mov
repnz
mov
in
sub
and
call
std
jmp
ror
and
jae,pt
fmulp
pusha
pop
xor
mov
push
add
inc
cmpsb
jge
and
aam
adc
mov
stc
mov
movsb
test
add
jmp
cmp
decl
xor
decl
dec
add
pushl
cmp
adc
int
add
push
test
xchg
and
or
incl
test
lock
mov
mov
cmc
and
loopne
es
addr16
xchg
sub
lcall
sbb
add
ret
sub
and
movsb
aaa
add
mov
outsb
add
lcall
ret
or
sub
or
xor
jg
lds
js
push
cmc
jo
xchg
dec
xchg
pop
xchg
ret
xchg
push
icebp
jmp
mov
fwait
ljmp
mov
mov
push
ret
loop
inc
subl
add
push
std
je
jae
xor
push
jp
push
loop
jb
push
inc
xor
push
mov
inc
test
fs
sbb
icebp
adc
sbb
or
push
sahf
mov
add
decl
adc
xchg
jno
js
xchg
lahf
or
sub
test
mov
fwait
xor
add
in
pop
jl
scas
ss
cmp
data16
push
ja
pushl
ret
test
ljmp
and
cmpsl
or
pusha
lods
dec
jg
cmp
cmp
mov
pshufw
or
push
cwtl
sbb
inc
mov
ror
aam
or
jo
lods
dec
out
jecxz
fwait
pop
enter
cwtl
cmpsl
aad
clc
fcomip
fwait
mov
fsubrl
mov
sbb
dec
add
test
insb
decl
negb
imul
adc
cmp
std
push
jmp
jge
dec
aaa
insb
push
loopne
mov
cltd
mov
hlt
ljmp
ss
jne
xchg
shr
mov
bound
lods
cmpsl
das
lds
cld
jmp
lahf
cmc
sub
nop
and
push
movsl
adc
adc
pushf
scas
sbb
arpl
push
pop
or
ja
pushf
and
pop
lcall
sub
fcoms
add
imul
je
sbb
repz
inc
les
pop
push
cmp
mov
xchg
dec
clc
fcom
sbb
jne
lds
lock
decl
mov
into
std
adc
inc
fstpl
jl
jg
imul
mov
fistpl
jmp
loop
jl
jno
aaa
cmpb
les
mov
cmp
jbe
movsb
jns
ret
das
add
sbb
pushf
loopne
cmp
iret
mov
in
fcmovbe
push
gs
fcomip
or
fs
sarb
pop
sbb
cmp
test
mov
sub
incl
test
sbb
cmp
mov
sub
jge
sbb
cmpsl
push
decl
push
and
xchg
stos
xor
or
test
out
sub
sub
jl
dec
ljmp
fildl
testl
aaa
mov
daa
sbbl
cli
add
add
push
inc
xor
sbb
ljmp
clc
cmp
lcall
cmp
xchg
dec
jge
push
mov
dec
pusha
clts
xchg
xchg
ljmp
jmp
sbb
adc
push
push
pop
lods
aad
inc
daa
add
sbb
in
call
and
ret
sbb
fcmovnb
ja
cltd
pusha
loopne
mov
xchg
cli
push
dec
add
xchg
adc
sub
adc
ljmp
and
pop
cli
add
gs
pusha
loop
lock
lcall
mov
arpl
imul
lock
xchg
lock
jg
lock
push
xor
shrb
decl
addr16
addr16
scas
and
test
fadds
cld
sbb
loopne
xor
adc
stos
das
pusha
sbb
sbb
shrl
pusha
sbb
test
cli
push
dec
dec
sub
scas
ret
je
ljmp
cli
aaa
bound
fwait
pop
mov
add
cmpsb
inc
push
out
jb
mov
push
addr16
mov
insb
jno
ret
add
outsl
in
push
inc
cmpsl
inc
mov
fdivs
lock
sub
add
xchg
stos
inc
push
clc
adc
and
pusha
lret
in
test
dec
adc
decl
and
int
sarl
inc
dec
loopnew
add
adc
ljmp
and
jl
cmp
mov
jp
and
pop
daa
or
jecxz
dec
or
aam
jnp,pt
mov
in
or
xor
fisubl
adc
and
decl
arpl
mov
and
adc
in
or
icebp
js
push
movsb
clc
pushl
xchg
sbbb
call
ret
inc
filds
outsl
loopne
gs
pusha
inc
mulb
rorl
push
mov
adc
dec
or
in
leave
inc
insb
ret
push
stos
pop
iret
mov
mov
mov
cs
dec
rolb
sub
lret
and
xchg
jmp
or
jmp
fmull
jl
dec
or
lret
fisttpl
cld
mov
and
clc
ljmp
or
notb
and
mov
aas
ret
rcl
fsubp
sbb
mov
and
bound
dec
scas
mov
xchg
notb
adc
push
test
jg
icebp
rcr
popl
sub
and
and
ljmp
push
jbe
rcrb
movsb
sub
sub
outsb
push
add
ret
ja
pusha
dec
cli
xchg
push
pop
stc
dec
daa
mov
jl
mov
lcall
lcall
pop
add
sub
xchg
sub
iret
push
imul
insb
shl
lar
mov
mov
xchg
inc
jae
test
out
xchg
lea
stos
or
add
icebp
jmp
ss
stos
mov
incl
mov
cld
jmp
pop
add
jbe
insl
andb
add
test
pop
pop
sub
sbb
call
icebp
call
loop
aas
jp
push
jle
cmpsb
test
inc
add
notl
out
fcom
mov
lds
daa
aaa
bound
mov
in
pop
adc
femms
lea
mov
clc
decl
shrb
stos
cmp
or
mov
jne
mov
stc
and
js
lcall
pushf
lds
cmp
rol
pop
mov
jne
sub
dec
out
push
inc
push
add
pusha
daa
scas
clc
call
pushf
push
push
or
gs
xchg
add
sti
pop
insb
shll
xchg
call
dec
and
xor
outsb
jns
xor
aam
dec
cmp
mov
shlb
mov
inc
xchg
add
dec
cmc
inc
loopne
jne
jle
lcall
mov
outsl
orl
lods
cmc
sub
stos
mov
cmp
mov
lcall
mov
mov
imul
sub
mov
inc
ja
push
je
insb
in
enter
or
call
loopne
inc
xchg
and
shlb
xchg
cmpsl
pinsrw
adc
scas
or
ljmp
movb
or
arpl
sbb
add
mov
fld
mov
push
dec
inc
inc
xchg
add
jmp
xchg
js
xchg
xor
add
pop
adcb
ss
cld
addl
xor
or
jle
add
jle
jmp
or
dec
pushl
jg
dec
shll
dec
pop
add
lret
test
push
iret
cmpsl
xor
call
imul
mov
add
mov
mov
add
jge
adc
jg
fs
and
leave
faddl
adc
or
jb
dec
imul
rcr
hlt
mov
sub
pop
jp
inc
stc
into
cmp
fstpt
and
jmp
loope
in
mov
hlt
xor
mov
in
pop
lea
or
ljmp
adc
incl
fnstenv
or
arpl
fadds
mov
add
ljmp
dec
hlt
fbld
sub
xor
and
ss
sub
sbb
cmp
push
mov
or
cmp
push
mov
insl
fs
out
mov
mov
fmuls
arpl
je
cmp
dec
mov
cmp
ljmp
jb
cwtl
jbe
pop
test
ds
fs
push
sbb
push
and
inc
mov
and
cmpsb
mov
nop
sbb
insb
out
roll
xchg
cmp
add
sbb
rolb
popa
xor
mov
add
ljmp
cmpsl
xor
add
lock
jge
js
and
jge
loop
outsb
popf
out
clc
call
push
testb
push
add
mov
xchg
inc
and
or
insl
pushl
xchg
and
mov
movl
sub
fidivrl
aad
dec
and
nop
mov
cmp
add
pusha
xchg
inc
cltd
inc
or
aad
aam
inc
sbb
lods
lods
cwtl
inc
leave
repz
xchg
jb
call
add
cltd
xor
mov
scas
push
scas
adc
fadds
fldt
lcall
shll
or
cmp
push
adc
xchg
shll
nop
cmp
fwait
clc
lcall
adc
je
inc
icebp
test
pop
insl
ljmp
incl
outsb
cmp
shl
xorl
push
mov
sti
adc
call
jge
cmp
cmp
testl
pop
andb
xchg
lds
call
xchg
incl
add
loope
dec
rclb
cmpsl
push
xlat
sbb
lods
popf
test
call
add
iret
in
pop
and
mov
and
sbb
jg
cmp
dec
out
inc
sub
mov
int3
les
pop
and
aad
pushl
jno
xchg
js
mov
cmp
mov
add
stos
mov
arpl
mov
jmp
xchg
repz
sub
movb
cmp
and
ds
dec
aas
mulb
jp
call
adc
xor
decl
sbb
inc
xchg
xchg
mov
add
cmpsb
nop
add
inc
fcomip
ljmp
push
jg
push
xor
add
mov
cmp
sub
incl
or
dec
mov
xor
fsqrt
cld
mov
aam
cmp
xor
incl
int3
xchg
dec
add
pop
mov
arpl
add
arpl
call
enter
xchg
sbb
imull
sub
push
inc
cltd
and
lcall
fcompl
incl
pop
inc
pop
push
cwtl
fstl
cmp
mov
lods
and
inc
sbb
incl
or
sub
lcall
xor
rorl
shr
cmp
lods
cmp
dec
jno
mov
or
or
pop
mov
inc
mov
jecxz
mov
jmp
loopne
xor
push
jo
add
sub
repz
sbb
ljmp
subl
cmp
lahf
and
mov
out
clc
incl
push
and
add
sub
stos
ret
or
lods
sbb
sar
les
inc
jns
or
jno
stc
mov
lock
pop
mov
decl
ret
sub
xor
dec
mov
fistps
sbb
fstpt
mov
add
inc
mov
decl
sub
lea
adc
pushf
inc
mov
jp
sbb
dec
sahf
pop
cmp
add
call
sbb
xor
add
sub
inc
add
out
and
shrb
aaa
mov
and
adc
loop
xchg
jne
sti
mov
idiv
push
inc
inc
loopne
fwait
imul
and
fnstsw
enter
mov
decl
rorl
pop
insb
adc
shrl
int3
adcb
loopne
dec
decl
xorb
xlat
decl
data16
fldenv
pop
aam
mov
sahf
fisubrl
nop
int3
aam
imul
mov
cmp
jecxz
fsubrs
sbbl
or
adc
loope
fstpt
outsl
imul
jb
xor
leave
mov
xchg
push
push
push
xchg
pop
fldl
inc
lahf
add
xor
sbb
push
fwait
add
inc
loop
mov
addr16
sbb
cld
adc
stc
xchg
push
mov
adc
lret
or
sub
aad
popa
and
adcl
incl
sub
sub
xlat
push
add
daa
mov
cmpsb
inc
cmp
fldt
dec
pop
jno
mov
jge
jp
icebp
test
test
mov
xor
pop
or
mov
scas
inc
lods
xchg
and
sbb
divl
call
cmp
mov
mov
inc
xor
sbb
jbe
add
repz
jmp
clc
nop
mov
xor
cwtl
test
cli
lods
loope
inc
mov
les
rolb
xor
lcall
cltd
jmp
js
js
lret
or
jecxz
popa
dec
aad
mov
incl
leave
and
incb
in
mov
in
and
fdivl
sbb
jecxz
decl
mov
idiv
ud0
mov
cmc
inc
pop
fnstsw
fiadds
or
or
mov
roll
sbb
mov
test
inc
jmp
mov
inc
fcoms
aaa
pop
and
lock
push
bound
push
cmp
sbb
cmc
loopne
imul
jno
jmp
cld
outsb
or
cltd
push
jge
rorl
add
xchg
pushl
and
xor
imul
bound
fcmovu
test
ss
push
sub
call
mov
xor
lahf
ret
jmp
mov
lcall
adc
mov
jbe
xchg
repnz
sti
mov
aad
inc
adc
inc
daa
rcl
out
mov
xchg
mov
xchg
fcoms
inc
cmp
mov
fcompl
cli
add
add
dec
push
loopne
add
fs
push
int3
rcl
add
in
adc
decl
dec
push
es
adc
add
xchg
jbe
mov
call
add
push
or
push
jb
ret
jne
jge
inc
jbe
jl
insl
sahf
xor
sbb
push
xchg
add
stc
sbb
lds
dec
add
test
ss
push
cmp
pushf
into
jne
incl
imul
adc
and
pop
dec
call
loop
mov
movsl
lcall
cs
or
jl
js
add
test
push
icebp
jg
jmp
out
or
into
adc
xor
iret
dec
sbbl
roll
mov
add
push
mov
je
rcll
push
cmpsl
cwtl
jno
sahf
add
cmovns
stos
add
add
fildll
icebp
mov
push
adc
jg
or
and
add
fs
add
dec
mov
mov
dec
insb
fsubl
lods
cmp
pushl
lea
xchg
test
dec
sbb
or
fsub
mov
flds
add
rcll
mov
jno
movsb
sbb
add
fistps
ret
arpl
scas
push
insb
ja
mov
mov
jno
ljmp
mov
dec
jg
movsl
lcall
jmp
fmuls
addb
or
pop
incl
daa
pop
mov
xchg
lret
jl
mov
fnstsw
mov
bound
push
insb
arpl
push
xchg
decl
ret
imul
sbb
sub
ret
add
pop
mov
sar
mov
push
mov
lods
ret
jl
mov
push
mov
iret
inc
add
bound
pop
add
fwait
int3
or
cmpsb
push
xchg
add
xor
insb
xchg
jmp
bound
push
adc
jo
mov
jmp
push
icebp
jmp
sub
or
int
mov
popf
and
les
aam
in
mov
dec
sbbb
fdivrs
adc
pop
lret
decl
loop
add
add
dec
add
adc
in
xor
jmp
fstpl
addl
daa
mov
cmp
or
call
jne
std
pusha
push
testl
jno
xorb
dec
imul
jae
enter
ret
inc
fistps
push
aad
cmp
stos
add
movb
jp
mov
cld
dec
dec
jb
stos
pusha
jle
cs
dec
pushf
or
aam
push
xchg
call
add
mov
add
sbb
lcall
jmp
jbe
cmp
decl
cmp
outsl
clc
in
test
sub
imul
lcall
mov
mov
sub
xor
enter
rolb
rorl
js
ret
hlt
add
insl
adc
scas
into
mov
and
fistpll
jno
lock
call
push
pop
mov
cmp
xchg
xchg
inc
out
stos
movsl
pushl
add
ret
ficoml
mov
adc
adc
scas
cmp
aas
pop
insb
sub
xor
add
add
sub
add
mov
out
sbb
jg
adc
pop
add
sbb
mov
andb
xchg
cmpsl
fucomi
lods
dec
mov
incl
sub
popa
inc
enter
enter
xchg
adc
push
cwtl
add
or
cmc
or
jnp
pop
add
aaa
cltd
mov
outsb
rcl
jbe
int3
decl
dec
loopne
and
dec
in
xchg
xorl
call
insl
mov
rclb
lds
lods
mov
sbb
movsb
mov
ja
cmp
mov
mov
or
ss
lcall
mov
and
jle
inc
add
divl
xchg
lcall
pop
sahf
inc
call
push
mov
and
xchg
cmp
xorl
push
shll
push
sub
ja
aam
and
push
lea
mov
cmp
stc
or
add
and
outsl
clc
or
add
add
mov
sarl
pop
xlat
sbb
push
or
es
out
ret
rcrl
lret
mov
loopne
or
adc
jp
jg
sarl
adc
mov
call
loopne
dec
add
jbe
jecxz
mov
mov
push
loope
ret
xor
push
ss
jmp
loopne
jecxz
or
nop
js
adc
push
nop
cmp
xor
incl
add
cmp
xchg
and
pop
and
sti
inc
pop
ret
dec
arpl
call
jg
ljmp
loope
mov
inc
rcrb
push
loope
ror
mov
pop
adc
test
incl
sbb
jg
test
cli
sbb
das
pop
test
fwait
dec
stc
rolb
addl
sbbl
mov
push
mov
dec
stc
and
into
mov
cmp
orw
cmp
xchg
lea
imul
mov
fisubrs
add
and
cli
add
aaa
test
call
cmp
inc
pop
stos
pop
pusha
mov
mov
dec
mov
sbb
and
mov
cltd
stc
call
push
mov
cwtl
sbbb
movsb
mov
cs
imul
or
fsubs
jmp
xchg
arpl
iret
fwait
dec
sbb
add
loopne
test
mov
jne
jo
mov
mov
insb
mov
clc
addr16
xlat
mov
mov
cld
incl
fcompl
sbb
inc
sbb
test
jg
jg
faddl
das
xor
push
ror
mov
fadds
popa
mov
push
pop
cld
mov
cmp
arpl
sti
mov
stc
cmp
mov
xor
push
rcll
outsb
jo
push
shld
add
popa
xor
xchg
mov
lcall
add
adc
sti
ja
adc
imul
xor
xchg
test
out
sub
adc
and
push
je
call
dec
mov
and
cmp
push
arpl
and
call
cli
orl
nop
push
adc
sub
lret
jp
pop
ja
loopne
mov
jge
lcall
bound
rorl
rorl
fiaddl
call
and
dec
sub
add
mov
xchg
xchg
dec
jle
sub
ljmp
ljmp
mov
inc
lret
xor
mov
sbb
lcall
fwait
mov
xor
sarb
sub
ss
mov
test
push
jmp
jo
std
mov
icebp
test
incb
pop
adc
mov
enter
repnz
aam
add
mov
lock
xchg
repnz
push
lock
push
jae
decl
mov
dec
pop
jno
sbb
loope
gs
xor
adc
add
and
sbb
add
les
ljmp
or
mov
dec
call
mov
std
xor
incl
jecxz
cs
subb
lock
cmp
dec
pop
cmpl
insb
lret
mov
jge
imul
jl
fdivrs
and
inc
jbe
fildll
dec
mov
sbb
or
inc
jle
out
add
stos
pushl
dec
lret
cmp
add
jae
jnp
cmp
popa
mov
fcoms
pushf
ljmp
test
and
and
inc
fsubrl
mov
jns
aaa
dec
decl
mov
mov
pop
cld
lock
incl
adc
push
pusha
rolb
std
ret
pushl
filds
xor
incl
xchg
insb
or
pop
movsl
inc
ljmp
in
repz
call
add
adc
pop
ficompl
fistl
decl
mov
test
xor
ret
in
sub
mov
cwtl
sbb
in
adc
cs
mov
popa
popf
pop
pusha
sar
lcall
push
ljmp
cmpb
in
inc
cs
call
movb
mov
mov
pushl
adc
test
cmc
pop
or
pop
or
jb
mov
les
push
push
mov
loopne
xlat
ljmp
push
push
add
xorl
jbe
inc
repz
xor
test
ljmp
or
push
and
cmc
ljmp
lcall
jmp
mov
sub
movsb
push
pop
das
add
xchg
insb
xchg
sbb
pop
pcmpeqw
loope
jns
add
incl
adc
ljmp
in
loope
leave
push
cmp
ljmp
out
xchg
mov
out
decl
push
push
mov
call
popa
imul
cli
mov
xchg
cmp
and
lcall
sbb
xlat
mov
mov
jmp
wbinvd
mov
mov
jp
or
ds
filds
sbb
leave
std
pop
mov
add
rolb
jmp
data16
mov
int3
in
cmpsl
frstor
js
adc
inc
adc
pop
xchg
mov
call
xchg
xor
dec
cmp
adc
xor
clc
rcll
jmp
xor
xchg
sbb
lret
sub
push
cmp
imul
pushl
push
push
sti
and
lcall
mov
div
pop
inc
adc
push
sub
mov
and
lea
mov
mov
cwtl
decl
inc
xor
sbb
daa
int
out
adc
dec
push
add
sbb
ja
incl
or
xchg
mov
bswap
sbb
jbe
shrb
jo
mov
jg
cmp
add
or
mov
in
xor
cmc
adc
push
add
pop
dec
cltd
daa
stos
js
push
lret
xor
int
decl
loope
mov
and
out
cmp
inc
cmp
out
adc
inc
mov
ljmp
mov
xchg
push
jle
cmp
repz
pop
rcrb
or
mov
test
jno
leave
outsb
mov
push
mov
pop
mov
xchg
addb
cmp
movsb
cli
popa
inc
inc
or
mov
shrl
arpl
daa
mov
pop
dec
push
jo
jge
test
incl
mov
add
andb
xchg
rcl
outsb
jecxz
aam
jg
int3
sub
xchg
mov
mov
adc
xchg
adc
aaa
std
cmp
movsb
push
lods
sub
sbbb
fstpt
aaa
cld
decl
mov
int3
cmp
jle
xor
sbb
insl
in
popw
insl
fiadds
js
pop
hlt
push
mov
adc
lcall
mov
enter
lret
sarl
cwtl
in
clc
or
inc
and
cli
enter
add
mov
jbe
ret
cmp
incl
sub
add
mov
mov
inc
stos
mov
in
lcall
inc
add
or
loope
sub
jl
add
rolb
cmpb
add
aam
ljmp
lret
sub
sub
adc
mov
fcomip
ds
adc
je
lock
out
rcrl
inc
and
xor
scas
out
mov
decl
or
push
add
lock
stc
cmpsl
mov
xchg
scas
xchg
pop
adc
lock
mov
mov
mov
ret
incl
shlb
sysenter
sbb
jno
adc
arpl
add
add
pushl
dec
sarb
sbb
das
cltd
dec
mov
xor
xor
sbb
push
rcl
add
out
mov
adc
mov
dec
imul
decl
xchg
jns
mov
mov
test
or
cli
call
cmp
cmp
popf
sbb
mov
pop
outsb
adc
pop
decb
adc
xchg
or
push
cli
ljmp
cli
jecxz
and
mov
xchg
in
push
addr16
add
pop
mov
aas
ljmp
xchg
in
stc
mov
inc
inc
shll
mov
add
cmp
test
add
adc
stc
outsb
xlat
adc
out
icebp
pop
fcomip
mov
add
loop
dec
lock
add
scas
decl
cmp
and
aas
pop
dec
add
lea
and
dec
push
sbb
lods
lcall
incl
add
stos
test
add
xchg
cs
fisttpl
imul
movsl
dec
or
pop
push
sbb
mov
cmp
xchg
inc
bnd
inc
push
mov
test
inc
sub
dec
rcrl
test
or
push
dec
inc
movsb
mov
pushl
add
inc
scas
add
bound
fwait
xor
or
enter
in
decl
movsb
in
cwtl
fimuls
jns
lret
clc
inc
cmp
imul
or
lods
stos
cwtl
adc
lcall
ds
dec
sub
lret
mov
ss
out
xchg
rcr
cs
inc
lods
mov
flds
dec
pop
add
sub
cld
sub
sahf
xchg
mov
or
inc
pop
out
ljmp
xlat
imul
jmp
sbb
bound
cmp
pop
xchg
test
adc
lcall
int3
lahf
std
pop
push
xchg
rolb
add
pop
or
xchg
inc
add
lods
hlt
add
es
pop
add
mov
clc
cmpsl
dec
sub
dec
lods
or
pop
popf
test
incl
lock
add
movsl
out
mov
std
rcrb
add
or
nop
and
call
lock
jmp
xor
cld
mov
adc
push
sbb
repnz
in
in
sbb
mov
and
cs
xorl
imul
pop
adc
ret
int3
mov
decl
cmpsb
mov
cmp
fdivl
jae
jnp
add
jno
incl
xchg
xchg
aaa
push
xchg
sub
loopne
mov
mov
out
fidivs
je
sub
jo
sarb
fwait
loope
pushf
das
jno
loope
pop
ljmp
sub
jno
push
add
and
inc
adc
sub
jmp
and
pop
sbb
movl
into
stos
repnz
push
adc
es
iret
jno
shl
loope
mov
cmp
movsl
stc
in
hlt
add
xchg
xchg
dec
addl
lret
fdivrl
imul
movsl
jge
in
mov
je
les
mov
pop
or
addr16
push
popa
jl
nop
ret
addr16
cmp
pushl
or
ljmp
dec
sub
pop
and
int
mov
decl
push
rolb
inc
enter
fldenv
aad
gs
add
in
add
push
and
cs
aas
jmp
popa
in
nop
add
and
subl
add
nop
dec
xor
hlt
call
or
cmp
xchg
or
pop
fwait
mov
sub
sahf
xchg
incl
xchg
inc
dec
sbbb
inc
sti
jp
inc
add
call
jl
mov
mov
ds
popa
fs
pop
cmp
shrb
pop
add
in
pop
jo
add
in
dec
fs
call
in
jns
cs
pop
stos
dec
inc
push
dec
adcb
and
push
add
cmc
sub
add
shr
fwait
and
ljmp
mov
xchg
jp
aad
and
lea
incl
ja
mov
clc
xchg
add
xlat
and
dec
cmp
add
shll
inc
and
addr16
imul
rcl
notb
mov
jle
pushf
inc
push
jbe
xlat
lcall
jmp
mov
pop
sbb
mov
aam
push
jae
outsb
and
push
popf
mov
inc
aad
push
and
lcall
add
pop
sbb
xor
loopne
mov
ljmp
mov
es
push
shlb
xchg
outsl
mov
jno
cld
sbb
dec
call
arpl
sub
data16
mov
xorb
add
jo
rorb
cmp
dec
nop
sub
addr16
cmp
mov
cmpsb
or
lret
out
or
push
add
in
or
xor
mov
mov
jmp
cwtl
jmp
lcall
aaa
xchg
adc
jbe
inc
and
bound
pusha
je
pop
jnp
cmp
sub
js
sub
jl
sub
or
mov
fwait
cmp
mov
adc
push
cmp
xchg
hlt
adc
ljmp
or
sbb
loope
and
add
out
stc
sub
adc
aam
mov
in
popl
lahf
cmp
dec
fs
add
or
int
lahf
cmp
and
mov
imul
dec
fnstsw
pushl
mov
jecxz
pop
pop
decb
negl
addl
and
nop
xchg
adc
xchg
push
arpl
mov
and
and
call
dec
dec
fnstcw
outsb
mov
mov
dec
lods
fs
adc
popf
adc
mov
mov
fcoms
xchg
scas
and
sub
add
loope
sbb
mov
mov
shlb
shlb
push
ja
bound
pop
stos
xor
lcall
addb
xchg
cli
pop
outsl
jmp
fldcw
loopne
repnz
mov
mov
dec
scas
cli
call
mov
add
push
mov
add
std
nop
lea
incl
ljmp
out
push
cmc
xor
mov
sub
leave
xchg
int
adc
ja
cli
out
in
cmpsb
out
clc
ljmp
jb
ret
ja
inc
push
jno
cmc
sub
adc
jno
mov
ljmp
jge
or
fstl
mov
lcall
popa
fcoml
mov
xrstor
xor
sub
paddusw
inc
jns
sarb
fisttps
push
push
xor
push
push
pushl
loop
test
fcmovne
or
fcompl
ret
inc
sbb
roll
movsl
jo
out
and
push
mov
push
clc
xchg
arpl
jb
stos
andl
inc
loop
or
and
xor
gs
mov
xchg
jge
nop
push
push
inc
js
mov
lahf
add
cmpsb
fimuls
ja
call
push
mov
mov
push
loope
cmove
add
jmp
mov
inc
stc
adc
aas
ds
inc
bound
add
pop
pop
sub
sti
add
mov
dec
xor
push
enter
push
mov
ljmp
into
sbb
enter
mov
fs
aad
push
or
mov
aaa
ret
test
cs
dec
fadds
mov
inc
xor
sbb
cmp
pusha
xchg
into
sti
add
mov
lods
movsl
enter
outsb
and
mov
xorl
lcall
dec
cltd
gs
orl
and
push
test
test
push
call
or
inc
mov
pop
lock
hlt
xchg
or
mov
ljmp
roll
addb
out
xor
leave
pop
std
add
imul
jmp
or
adc
pop
pop
hlt
sbb
iret
leave
mov
jne
lds
push
imulb
xor
or
adc
jmp
inc
cmpsb
pop
or
inc
add
rol
or
lret
cmpb
js
clc
in
mov
and
lret
idivl
das
ret
out
scas
sbb
pop
ja
jle
mov
cmp
pop
or
nop
es
mov
data16
bound
outsl
movsb
fcmove
shlb
call
xor
and
loope
sbb
fildl
fs
mov
addl
push
jne
gs
and
in
push
push
filds
nop
imul
es
add
push
nop
fsts
rcll
add
cmp
inc
xchg
or
jae
sbb
int
sbb
ja
adc
add
in
xchg
mov
cmp
lcall
mov
outsb
inc
xchg
jp
call
dec
cmovp
mov
cmpsb
sub
jmp
cli
or
mov
fldcw
cmp
fsubrp
data16
mov
decl
lcall
sub
push
push
mov
leave
mov
push
dec
loopne
mov
hlt
inc
push
fadd
sbb
call
mov
jp
in
outsb
or
xchg
cmp
jp
adc
jb
cltd
adc
add
mov
cmp
jo
mov
adc
mov
xor
insb
std
cmpsl
cmp
mov
test
popa
shlb
push
jno
inc
out
ljmp
or
insl
enter
sbb
scas
sbb
adc
gs
adc
call
sub
inc
gs
negl
rcll
push
es
ljmp
testb
pop
pushf
mov
fs
out
lods
punpcklbw
dec
fbld
imull
test
pop
mov
push
or
adc
shll
inc
enter
data16
jne
orl
add
dec
push
adc
jo
scas
cli
jg
test
in
mov
ret
mov
add
das
xor
test
lret
push
push
add
icebp
call
inc
pushf
xchg
or
and
add
fists
shll
idiv
jg
mov
jl
dec
cltd
mov
sub
xchg
in
lret
xchg
add
decl
pusha
notb
mov
cs
mov
and
test
push
fcoms
sbb
in
jno
shrb
call
inc
add
mov
add
jne
jno
mov
decl
lock
xchg
mov
add
les
dec
xchg
and
add
roll
jg
decl
rcl
or
add
adc
ret
jae
ret
fadds
std
call
rorb
and
adc
dec
rolb
adc
mov
sub
sbb
stc
dec
dec
sub
mull
dec
inc
aaa
ds
je
shr
dec
std
mov
imul
movsb
add
les
loop
mov
test
jb
add
vmovaps
outsl
ret
mov
jae
outsb
dec
cli
jo
cmp
or
push
jmp
subps
mov
test
pop
lret
cmp
fcomip
pushl
cmpb
xchg
xor
pusha
add
pop
sbb
movsb
pop
mov
call
out
lods
and
push
adc
test
mov
mov
sbb
scas
cwtl
js
ret
orb
call
pop
cwtl
ret
mov
inc
xchg
sbb
bound
filds
imul
and
mov
add
ljmp
fadds
lods
fs
in
dec
mov
sub
clc
shl
mov
incl
ret
or
rol
adc
dec
ret
aas
fisttpl
mov
incl
fcomps
js
inc
stc
add
loopne
mov
mov
mov
movsl
xchg
jecxz
add
pop
xor
or
add
jo
lea
out
push
into
in
add
pushl
jb
mov
push
dec
scas
mov
aad
decb
mov
das
rclb
xchg
call
ljmp
sbb
pop
jbe
lcall
add
sar
add
mov
cmp
cmp
ljmp
or
sbb
loop
inc
in
pop
mov
stc
stos
mov
cmc
es
fcomip
in
or
push
xorb
nop
loope
xchg
mov
dec
clc
pushl
add
aad
cmp
stos
sub
call
je
mov
pusha
mulb
loopne,pt
pushf
pushl
cli
lods
clc
xchg
mov
cmp
sub
gs
movsb
push
mov
call
pop
jl
call
push
icebp
sub
ret
add
cmp
addr16
jo
or
add
xchg
fldt
or
leave
push
adc
inc
lcall
xchg
adc
inc
rol
sti
lret
out
xor
add
in
fwait
push
int
shrl
sbb
dec
add
inc
cmp
loope
add
ss
icebp
pushl
sub
fimull
orl
cwtl
ret
cli
retw
add
lds
and
pushl
rolb
pop
sbbb
push
popf
fucom
mov
mov
je
fistpl
pushf
sbb
fcmovnb
test
dec
sub
xlat
xchg
and
add
int3
adc
ret
mov
adcl
js
xchg
scas
push
fcompl
jbe
sbb
xorb
adc
stos
jmp
jle
xchg
out
mov
lea
in
jo
imul
pop
add
ljmp
pop
daa
movsl
xorl
mov
les
add
dec
dec
lods
stc
mov
add
pushl
sub
mov
or
inc
xor
sbb
dec
call
cmp
das
pop
dec
and
fcoms
xor
inc
js
hlt
cs
adc
arpl
and
test
lret
out
lea
adc
call
sub
adc
insb
cli
shlb
jle
push
jl
test
int
out
decl
xor
inc
xchg
mov
push
mov
jg
mov
sar
dec
or
cs
jne
pop
cld
jmp
cmp
inc
fnsave
mov
sub
loopne
pusha
test
ss
pop
test
mov
sbb
test
mov
add
sbbb
adc
xchg
cmp
xchg
lea
cmp
incl
adc
pop
add
sbb
adc
ds
mov
loopne
je
adc
or
add
jmp
out
mov
adc
aam
sub
fbld
pop
xor
decl
push
scas
loopne
push
mov
lret
out
mov
ror
jb
cmp
pop
call
loopne
push
fisubs
nop
mov
loopne
xchg
iret
xor
fstpl
mov
lods
inc
test
sbb
lds
add
out
incl
push
shll
test
lods
add
shl
std
stos
pop
pop
testb
pushf
in
out
decl
gs
inc
pop
sahf
js
or
pusha
dec
add
cld
mov
adc
inc
arpl
insb
mov
inc
pusha
orb
into
adc
xor
add
daa
push
fistl
cmp
adc
je
mov
insb
movsl
mov
mov
inc
and
aam
mov
sub
adc
cld
out
xor
sub
bound
das
clc
inc
xor
enter
pusha
mov
mov
or
stc
sbb
xchg
push
cmp
decl
add
ffreep
add
xchg
and
shlb
pop
push
lds
insl
add
loop
call
and
je
loop
jne
lods
sub
inc
lcall
call
stos
test
repz
and
fmull
enter
xor
dec
or
jmp
pop
notb
or
cmpl
add
adcb
mov
out
rol
mov
jmp
jmp
push
xor
call
cld
xor
jmp
mov
push
pop
lret
js
xchg
adc
push
loope
jg
jmp
or
jb
es
mov
push
and
cli
push
add
icebp
jg
jnp
sbb
fwait
or
adc
andl
cmp
fbstp
test
and
out
sbb
test
jmp
jge
adc
push
xchg
cwtl
sahf
test
push
clc
mov
adc
or
clc
fwait
or
xchg
and
add
iret
push
add
xchg
sbb
incl
mov
or
loopne
add
adc
popf
and
scas
or
lcall
jge
mov
inc
push
dec
loop
loop
xchg
loop
enter
bound
loop
adc
add
pop
in
sbb
roll
sub
scas
push
test
push
fdivrl
ror
sub
lcall
sub
mov
push
movsl
fsubl
movsb
dec
adc
incl
pop
scas
cli
call
cwtl
adc
and
add
sub
mov
lret
dec
xchg
adc
dec
mov
pop
fcoml
jb
out
xchg
adc
xchg
add
test
add
dec
gs
fprem
mov
lcall
jmp
arpl
scas
mov
pop
inc
hlt
mov
and
stc
in
mov
test
loopne
pop
push
call
stc
cmp
inc
mov
loop
sahf
xchg
xor
out
mov
addb
jge
jmp
xchg
ret
ja
clc
imul
xchg
pop
inc
repnz
lret
pop
adc
push
decl
mov
xor
cmp
pop
fisubl
cld
decl
ss
adc
xor
inc
sbb
push
add
ljmp
and
sub
jp
push
movsl
addr16
ss
inc
mov
call
fsubrs
mov
jmp
mov
mov
jl
mov
mov
sub
call
call
add
nop
pushf
cltd
shll
or
sub
xchg
das
add
insb
movsb
cltd
shll
add
xchg
add
aas
cmpb
js
aas
loope,pn
sbb
mov
push
mov
mov
push
add
cmp
cwtl
pop
mov
bound
jle
js
mov
dec
cmpsl
xor
adc
out
mov
lock
shlb
sahf
adc
and
insl
lock
call
in
pop
add
cs
mov
fcmovnu
xor
push
jle
mov
std
cmp
aas
loopne
inc
sbb
lret
sub
sub
in
xlat
push
mov
sub
out
pop
mov
adc
ljmp
dec
fcmovnbe
sub
cmp
xor
xor
add
inc
mov
xchg
fcomip
jg
rol
fidivrl
add
fs
pushf
xchg
subb
call
push
bound
push
pop
mov
in
outsb
aam
xor
pop
std
pushl
mov
xchg
fxch
xchg
jecxz
jae
ret
push
pop
and
ljmp
push
add
lahf
jbe
xor
in
das
add
and
jle
aaa
cld
mov
sub
mov
ja
mov
faddl
cmp
add
mov
sbbb
pusha
pop
xlat
mov
mov
into
hlt
inc
push
sbb
sahf
pop
shrb
jecxz
mov
ss
jno
pop
dec
mov
call
mov
ret
rolb
inc
ds
aas
mov
lea
pusha
xchg
or
fcomip
or
imul
jp
fldl
addb
mov
mov
pop
imul
addb
js
adc
add
sbb
push
jne
xor
cmp
fisubrs
es
cmp
std
decl
fdivrl
rorl
add
inc
add
movsl
add
xor
jb
bound
xor
out
rorl
sbb
or
mov
sarl
pushl
dec
mov
jbe
lock
sbb
mov
ffree
mov
test
pushl
lock
inc
xor
add
aaa
adc
enter
sbb
popf
pop
cmp
dec
idiv
out
push
adc
mov
inc
lahf
adcb
push
daa
pushf
ret
cmpsl
pop
out
sub
jmp
rep
or
xchg
lock
in
addr16
mov
push
sbb
or
incl
std
add
jle
dec
repnz
mov
test
jae
lcall
imul
xlat
mov
ror
fldenv
pusha
je
call
mov
insl
or
cmp
pop
leave
dec
dec
mov
pusha
mov
adc
insb
mov
decl
cs
cwtl
pop
into
daa
or
fdivr
add
or
mov
sub
mov
jno
sbb
decl
inc
mov
cwtl
or
inc
xor
fldl
xor
lahf
or
or
mov
xor
popa
push
jge
dec
mov
cmp
aam
divb
adc
in
xchg
insl
xchg
xchg
roll
push
sub
mov
dec
xchg
out
mov
lret
inc
imul
divl
inc
cmpsl
inc
insb
sbb
or
fwait
mov
loopne
stos
cmp
adc
dec
mov
incl
and
mov
lcall
psubusw
jb
add
enter
push
mov
jns
dec
mov
orb
sub
gs
or
call
loopne
ja
inc
jns
adc
push
ret
outsb
ja
repnz
cmp
add
and
ljmp
add
cmp
in
push
nop
cld
rcrb
jns
decl
cmp
mov
adc
pop
icebp
and
clc
cli
or
test
jle
jg
in
xlat
dec
in
rcrb
loope
jns
pop
or
les
mov
ret
ret
mov
sahf
outsl
cmc
add
and
cmpsb
cmp
add
insb
out
cmp
push
mov
fs
mov
add
rol
rorl
aas
inc
fs
lods
push
movsl
add
or
pop
clc
jp
sub
bound
cli
test
add
add
cmpsl
add
jmp
inc
adc
and
adc
xor
mov
xor
loop
pop
ja
les
js
lcall
outsl
clc
fadds
mov
pop
inc
add
and
add
xor
jno
cmpsl
and
sbb
sub
std
jecxz
pop
lcall
ljmp
fs
inc
and
out
popf
xchg
mov
test
cld
pusha
mov
mov
add
pop
jge
xchg
mov
inc
and
mov
jb
xchg
ret
imul
lret
add
push
lods
add
rcr
ljmp
xchg
pushf
jae
and
inc
mov
or
lods
add
xor
cmp
push
mov
decl
imul
sbb
arpl
mov
xor
inc
adc
or
aaa
cld
incl
and
adc
or
loopne
push
adc
jmp
ss
movsl
or
ret
add
pop
cs
mov
mov
add
cli
dec
icebp
icebp
push
std
xor
adc
shrb
scas
clc
pop
mov
out
adc
dec
fstpl
mov
lock
sbbl
pushl
mov
ret
mov
mov
repz
adcb
inc
add
decl
mov
add
sub
mov
int
leave
jmp
decl
ja
jle
pusha
shrl
push
pop
sti
inc
xchg
inc
je
cmp
incl
bound
cmp
cmp
outsb
add
shll
push
mov
jo
dec
scas
loopne
and
call
je
cmp
adc
sbb
daa
imul
les
movsl
fisttpll
movsl
sti
in
inc
sbb
fcomip
jl
hlt
inc
and
inc
push
call
rcll
xor
loop
dec
repnz
clc
incb
pop
or
test
pop
fldenv
sarl
testl
repz
push
add
mov
pop
out
xchg
sub
mov
lret
int3
or
incl
ds
fld
mov
in
lds
pop
sub
iret
fcmovb
out
fcoms
jo
adc
fwait
xchg
cmp
inc
pop
fdiv
cmc
in
mov
push
jb
decl
mov
insb
lea
and
and
ret
push
gs
dec
and
frstor
in
call
mov
sub
fsts
out
hlt
fs
xchg
cs
daa
sub
pop
push
jo
add
dec
mov
inc
push
xchg
dec
or
dec
inc
stc
aas
mov
into
pusha
cmp
mov
cmc
push
add
fcomip
ret
adc
mov
lods
inc
dec
dec
notb
xchg
icebp
mov
jmp
jle
xchg
mov
pop
fbstp
mov
cmp
decl
add
or
scas
int3
subb
push
roll
jne
lock
ret
ljmp
das
sub
pusha
pushf
add
sbb
pushl
pop
sbb
xor
mov
jb
and
repnz
mov
lods
loopne
add
stos
incb
add
mov
cmp
js
test
movl
pusha
rcl
add
stos
and
or
xchg
adc
xor
fmul
sahf
into
jecxz
popf
push
call
test
notl
or
pop
pcmpgtd
out
mov
aam
pop
call
lds
lods
lods
decl
inc
mov
dec
and
shll
popw
cmp
ljmp
bound
sbb
jle
sarl
mov
sbb
sub
jne
sub
incl
shrl
nop
mov
push
mov
sbb
stos
mov
rorb
fcmovnu
cmpsb
pushl
add
ja
das
mov
inc
xor
nop
mov
push
lds
mov
call
lret
test
or
mov
jo
or
int3
pop
jo
mov
mov
pushl
std
test
int3
cs
sub
data16
test
outsb
mov
mov
das
mov
jo
mov
sub
add
and
jg
jae
cmc
fcmovu
out
pop
incl
cld
mov
sbb
in
push
or
cmp
adc
decl
sub
inc
mov
addb
outsb
jne
push
idiv
inc
add
xor
cli
pusha
lahf
add
incl
add
xchg
jp
dec
addl
ret
jp
leave
fwait
inc
pop
mov
push
movsb
imul
dec
jb
or
adc
inc
pop
nop
or
aas
adc
pushl
and
and
mov
add
pop
mov
fs
incl
inc
dec
movsl
mov
call
stos
xor
inc
xchg
mov
xor
cmp
sub
cli
test
das
dec
js
mov
ds
mov
cwtl
cli
lds
adc
pusha
hlt
mov
pushf
cmpsb
pop
xchg
inc
mov
pushl
or
sbb
cmpsl
lea
push
jmp
dec
jbe
sub
jecxz
test
or
cmpl
addr16
mov
mov
int3
pushl
xor
nop
adc
repnz
ljmp
mov
insl
jo,pt
mov
popf
dec
cmpsl
cmpsl
mov
push
incl
fstl
push
or
mov
cmp
mov
pop
fwait
sbb
pushf
aaa
hlt
sbb
fisttpll
mov
sbb
or
stc
jae
mov
js
inc
fbld
loop
add
inc
xchg
sbb
xchg
ds
mov
cmp
cmp
int
inc
dec
xor
push
pop
in
scas
sub
push
lods
cmp
repnz
es
lods
sbb
std
hlt
and
xor
and
addr16
test
push
ret
mov
cmp
call
cltd
adc
shld
incl
mov
in
aam
dec
out
incl
xchg
or
pop
into
add
jecxz
ljmp
jl
push
mov
repnz
ret
call
add
fcoms
or
add
xchg
pop
inc
lcall
sbb
or
inc
mov
push
addl
shl
fbstp
push
push
mov
push
clc
decl
and
mov
arpl
scas
or
ljmp
sbb
std
out
mov
mov
call
hlt
iret
aam
or
mov
mov
mov
mov
xor
push
pop
adc
lds
mov
lcall
rcrl
pop
push
test
add
jp
in
popa
iret
addb
leave
ljmp
rorb
ds
adc
ljmp
xchg
ljmp
xchg
dec
push
add
sub
sbb
add
mov
dec
ret
push
int3
gs
pop
hlt
sub
iret
test
jb
cmp
inc
push
push
add
dec
mov
inc
adc
sbb
std
push
psrad
push
mov
js
mov
or
lahf
dec
andb
jge
fistps
js
insl
or
fs
mov
push
push
and
imul
jle
test
jge
pop
inc
jecxz
inc
popa
ja
inc
mov
inc
adc
lcall
std
mov
xchg
icebp
mov
fistl
jg
call
dec
mov
or
movsl
xchg
jp
mov
scas
lret
push
jno
ljmp
adc
add
or
call
call
jo
addb
xor
push
popa
push
or
orb
xchg
or
ljmp
xlat
das
nop
pop
pop
test
mov
pop
movsl
jne
or
sub
sub
das
shrb
or
in
or
sub
pop
stc
aam
decl
ljmp
push
cwtl
pop
mov
leave
add
loope
sbb
cmpl
cmpsl
aad
inc
adc
vcmpneq_oqss
rcrl
ret
test
sbb
scas
cli
frstor
push
inc
pusha
clc
sbb
push
inc
pusha
add
jp
clc
ret
mov
mov
inc
push
add
es
out
xchg
cmc
cs
inc
xchg
cmp
inc
cli
jp
sbb
mov
add
popf
scas
decl
mov
scas
xor
add
cmp
mov
dec
mov
in
jg
inc
sahf
fisttps
cmp
and
pushf
mov
std
adc
filds
lcall
in
xor
mov
push
mov
mov
add
leave
push
add
incl
sahf
data16
add
push
fsubrs
mov
jo
shrl
jbe
push
insl
in
aaa
lea
inc
in
lock
lcall
lcall
xchg
pop
leave
dec
in
add
or
stc
test
cwtl
rolb
mov
lcall
cld
fiadds
arpl
mov
mov
xchg
adc
clc
decl
sbb
pop
cmp
fisubl
fisubs
and
sbb
icebp
mov
pop
add
push
ds
adc
sub
lods
push
sub
sbb
mov
negb
inc
in
minps
dec
lcall
and
pop
jbe
sbb
pop
xor
pusha
jb
jae
daa
into
pop
jl
add
cmpb
xchg
dec
pop
jb
fdivr
int3
mov
adc
mov
adc
je
ljmp
cmp
xchg
rolb
aas
push
stos
insl
lcall
cs
xor
xorb
lcall
and
inc
testb
mov
sbb
testl
sbb
mov
nop
inc
jge
sbb
in
add
daa
lret
or
dec
test
mov
scas
add
add
mov
xchg
sbb
jmp
cmp
sub
mov
dec
mov
and
add
xchg
pushf
lahf
push
mov
sbbb
cwtl
mov
loopne
jmp
inc
or
dec
or
ljmp
xchg
dec
sub
or
loope
mov
sub
mov
std
scas
jmp
dec
mov
add
bound
aas
mov
cmpsb
inc
push
and
enter
jo
loop
sbb
push
jns
cltd
cmovb
cmp
add
aas
imul
or
cmc
add
sbb
fidivs
inc
test
xlat
jg
push
mov
mov
pop
xchg
fsubrl
mov
fidivrl
jae
or
mov
or
mov
add
sbb
mov
sar
lcall
mov
xor
xor
dec
push
and
inc
mov
sbb
lcall
ja
stos
jno
punpcklbw
dec
jecxz
add
cli
or
es
and
xchg
adc
adc
push
std
rcll
or
inc
imul
jnp
jmp
in
in
clc
call
incl
rcll
js
mov
fimull
data16
sbb
call
add
xchg
pop
cmp
cmp
lock
out
add
stos
xchg
jno
push
dec
add
aas
inc
daa
mov
ss
mov
xchg
shll
push
shl
adc
pop
push
lods
in
imul
out
out
fdivl
pop
bound
sar
ljmp
xchg
sti
cld
push
lds
pop
mov
in
mov
cmpsb
mov
push
cmp
mov
lock
jp
or
hlt
mov
scas
mov
inc
loopne
jp
pusha
mov
mov
std
outsl
dec
push
dec
iret
add
inc
loop
xor
push
jg
cld
inc
add
add
inc
out
sub
push
dec
decl
xchg
adcl
adc
cwtl
insl
adc
inc
jl
push
cld
js
ficoml
sahf
cld
adc
bound
mov
aad
xor
ljmp
sar
jo
add
jmp
scas
cmp
rorl
fistpl
sahf
cmp
pop
mov
dec
sbb
scas
dec
cmp
xor
or
pop
or
ja
in
fs
push
inc
pop
sbb
mov
mov
out
xchg
ds
loope
cmp
enter
das
ret
or
sub
mov
loopne
cli
cmp
xor
push
xchg
mov
das
imul
enter
xorl
add
adc
jmp
xor
cmp
cmpsb
cmp
fbld
aaa
es
dec
outsl
add
fisubrs
mov
decl
jo
mov
push
int
call
dec
cld
outsl
cld
adc
cmp
sar
cmpsb
jg
add
pop
inc
sub
loopne
aam
sbb
in
lea
hlt
jmp
in
mov
xchg
add
popa
or
movb
push
in
pusha
mov
jbe
adcl
xlat
jg
call
cmpsl
xor
xchg
daa
mov
mov
add
loopne
jg
dec
es
das
fists
bound
xor
inc
pop
sub
inc
mov
add
jmp
and
decb
or
dec
aad
pusha
data16
dec
fdivrp
jg
mov
dec
sub
adc
inc
imul
sahf
and
add
cld
cli
sbb
sub
jae
sbb
push
jns
test
xor
insb
nop
ret
dec
xchg
inc
call
add
nop
mov
pusha
push
mov
xor
hlt
shl
fidivrl
push
mov
iret
loope
or
jle
and
mov
pushf
add
add
jg
inc
xor
movsl
inc
mov
mov
cmp
rclb
call
inc
mov
or
dec
xchg
add
ret
xor
mov
xchg
jmp
or
sub
cmp
push
stos
push
mov
rolb
jp
fbld
int3
and
leave
dec
mov
insb
add
aaa
lods
adc
mov
pop
data16
cmpsl
mov
mov
filds
hlt
push
jno
pop
inc
jnp
fistl
push
dec
push
cmp
repz
cmp
jb
roll
es
and
dec
mov
xor
jl
adc
sbb
add
sbb
jecxz
lcall
add
mov
add
test
cli
bound
mov
xor
dec
cld
cmpsb
cmpl
lret
arpl
mov
stc
imul
fwait
sarl
jl
xchg
enter
mov
push
xor
or
jb
out
mov
into
mov
inc
es
xchg
sti
js
jl
loopne
jmp
mov
insb
sub
dec
sbb
mov
scas
jl
loopne
sbb
xor
fsubp
mov
add
incl
add
and
xchg
cmp
mov
lcall
stc
add
push
sar
iret
jo
or
in
jb
pusha
cmc
cli
adc
xlat
dec
dec
decl
cmp
or
inc
pop
ret
je
lock
xchg
hlt
jo
and
hlt
in
loope
jae
icebp
mov
std
ljmp
pop
xchg
lcall
fdivrs
stos
adc
cld
iret
xchg
je
jo
adc
push
incl
rorb
dec
popl
les
decl
loopne
push
int3
mov
loopne
adcb
inc
push
add
icebp
out
push
jp
or
aam
or
jmp
pop
cmp
mov
sbb
decl
test
cvtps2pi
add
arpl
ja
popa
out
push
mov
in
pushl
xor
inc
scas
push
or
roll
push
or
pop
inc
mov
addr16
cs
add
not
mov
dec
repz
clc
adc
in
dec
mov
xor
cs
add
cbtw
push
cmp
pop
loop
test
incl
js
std
xor
cmp
hlt
jno
or
jb
mov
mov
jmp
push
sub
inc
inc
aaa
outsb
test
jmp
sbb
xor
hlt
jle
aam
mov
imull
fldl
mov
mov
dec
leave
ljmp
or
xchg
xor
and
adc
xchg
mov
lea
js
push
std
mov
add
je
fs
jno
dec
dec
and
xchg
dec
mov
sbb
inc
dec
shrb
push
int
add
cmp
push
sub
lds
ljmp
call
sbb
enter
adc
mov
loop
scas
adc
push
cld
leave
xchg
xchg
xor
push
hlt
xchg
test
mov
push
adc
mov
jmp
sbb
dec
or
xchg
mov
lds
add
push
aas
lods
clc
jmp
adc
inc
iret
insb
dec
inc
add
lahf
jb
inc
jne
mov
mov
daa
push
push
inc
sbb
lock
outsl
fistpll
mov
pushl
inc
and
shr
pop
jno
loope
push
push
xor
xchg
negl
mov
jns
mov
push
mov
decb
lods
jns
sbb
and
add
cmp
push
test
out
mov
out
movsl
add
js
pop
cli
lock
mov
inc
mov
icebp
and
in
movl
cmp
push
mov
add
dec
sbb
fimuls
cmp
setl
call
lret
xchg
jb
sbb
stos
add
stc
clc
lods
mov
jo
xchg
pushf
sbb
inc
jo
pop
lock
cmc
push
or
push
jmp
lcall
movsl
inc
or
es
loopne
or
popf
lcall
sub
pushl
test
jnp
xchg
dec
pop
pop
test
or
pop
cmp
out
mov
sar
sbb
ret
lea
out
lock
inc
cmp
inc
rolb
push
cwtl
jp
stos
mov
shl
pusha
mov
sarb
fildll
adc
cmp
dec
sbb
inc
mov
int3
ret
inc
mov
pushl
std
es
mov
cmp
inc
jmp
inc
lock
shll
decb
addl
loopne
jmp
aaa
fmuls
cld
ljmp
decb
lret
pop
xchg
fidivl
leave
xor
mov
negb
dec
cmpb
ljmp
push
mov
dec
xchg
dec
cmpsb
pop
popa
add
pop
cmp
inc
out
les
mov
adc
inc
sbb
sub
jnp
fistl
mov
dec
sub
xchg
jg
addb
mov
jno
sub
clc
pop
and
cwtl
sbb
push
jmp
add
xor
pop
cmc
push
inc
and
sbb
jo
inc
lcall
adc
cmp
jmp
enter
fiadds
add
mov
cltd
mov
push
xorl
ljmp
insl
repnz
rcrl
loopne
and
addl
mov
mov
lods
xchg
insl
cs
mov
outsl
pop
mov
jle
scas
sbb
add
cs
add
out
pop
or
sarl
push
add
add
jecxz
js
jbe
jmp
or
adc
hlt
adc
push
dec
jl
sbb
adc
mov
add
add
lcall
lock
dec
add
sbb
or
popa
aas
xchg
out
les
subl
dec
add
outsb
insb
inc
cmp
scas
faddl
add
adc
out
adc
fucomip
add
dec
and
bound
orb
mov
incl
xchg
les
adc
call
enter
lock
repnz
inc
scas
mov
add
repnz
inc
lods
mov
sbb
js
cmp
add
in
sbb
fnstcw
jg
jecxz
dec
cmp
sub
adc
sbb
idivb
inc
inc
loopne
push
test
frndint
pusha
out
notb
lcall
rcrb
lock
inc
add
fsubr
les
add
call
addr16
stc
adc
push
pop
ret
mov
sbb
sbb
je
sbb
incl
lods
fildl
jl
inc
jo
or
ss
ja
cli
decl
iret
or
inc
jl
mov
jne
jbe
cmp
lcall
and
nop
lods
mov
sahf
push
xor
pop
mov
add
push
icebp
inc
ja
outsb
and
icebp
ret
cs
cmp
out
add
sbb
inc
into
or
sti
jne
cmp
incl
sbb
push
lds
jbe
loopne
pop
repz
push
or
adc
decl
cmpsb
or
fs
push
shr
adc
inc
mov
or
inc
mov
test
cmp
jmp
push
xchg
jo
jge
shll
adc
add
nop
or
ljmp
dec
mov
lods
sub
dec
out
aaa
sub
decl
stos
adc
add
push
lret
fwait
sbb
dec
adc
jbe
call
decl
adc
mov
sbb
mov
rcr
jp
jbe
push
dec
outsb
jno
ret
es
ss
pushl
jne
es
or
loope
lea
enter
or
bswap
add
pop
add
dec
and
incl
orl
mov
clc
data16
mov
mov
ljmp
cwtl
mov
jmp
mov
or
ljmp
cmp
int3
jg
cmpl
vmread
mov
push
pop
incl
and
push
xor
cwtl
mov
or
lock
sbbl
or
pop
rol
negl
inc
mov
jmp
add
dec
or
xorl
mov
icebp
movsb
mov
push
lods
ret
mov
inc
movsl
mov
pop
push
fisttpl
mov
or
add
pop
fsubrl
fwait
inc
pop
inc
test
pop
and
xchg
add
clc
incl
add
or
jg
pushf
mov
icebp
add
mov
inc
mov
pop
add
inc
jnp
ljmp
sbb
mov
cmpsb
ud2
sbb
pushf
push
test
sub
pop
cmp
or
cwtl
and
aaa
popa
lds
xchg
js
xor
cmp
js
pop
xchg
cmpsb
in
adc
enter
adcb
add
test
scas
or
sar
incl
adcl
out
in
les
lcall
mov
les
incl
stc
add
testl
xor
adc
scas
and
aaa
fsubs
add
or
loopne
call
ss
sbb
inc
cmp
cmpsb
lds
push
adcl
cltd
jg
call
mov
add
pop
out
je
shrb
xor
outsl
cli
sbb
mov
xlat
mov
fwait
and
loopne
jg
or
in
out
pusha
push
out
xor
into
push
add
je
les
fdiv
decl
mov
and
xor
push
hlt
cwtl
mov
mov
in
or
lock
fwait
cli
arpl
scas
pushf
pop
dec
xor
sub
ds
pop
jmp
sub
mov
lret
cmp
cmp
push
or
stos
loopne
rolb
mov
mov
test
jne
sub
adc
lock
push
dec
xlat
cmp
decl
ja
test
mov
push
xor
pop
push
call
mov
rclb
orb
cmp
inc
ficoml
sbb
imul
pop
inc
out
aad
xchg
dec
inc
adc
movsl
mov
gs
decl
and
push
movsl
sbbb
in
aas
insl
sub
int
mov
cmp
repz
sbb
push
jp
sub
js
mov
pushl
lret
push
fnstcw
and
aam
cmpb
ljmp
or
dec
and
jne
jno
shlb
inc
lock
mov
outsb
outsl
add
push
dec
and
inc
sbb
ret
pop
jmp
or
inc
xchg
xchg
sbb
pop
out
xor
aaa
and
shlb
pushl
std
rclb
lret
mov
mulb
mov
out
xchg
imul
push
clc
cli
mov
push
xor
jmp
push
ret
lea
loopne
mov
adc
aad
lock
aad
imul
out
add
aam
cli
scas
in
mov
outsb
adc
insb
repz
lcall
popf
lcall
aad
mov
rcrl
movhps
in
idivl
jns
xor
and
sahf
xchg
popa
cmpsl
loope
mov
cmpsb
xchg
loopne
and
inc
or
pusha
push
mov
adc
lock
add
xchg
rcl
lock
popa
addl
or
xlat
push
faddl
addl
inc
pop
sub
pop
out
push
stc
lcall
movl
in
xor
dec
loopne
mov
outsb
insb
idiv
jg
pop
adc
sub
lds
mov
lock
cmp
lock
js
lock
inc
std
and
imul
fsub
daa
shrb
incl
lods
gs
fsubs
mov
mov
and
add
test
out
clc
pushl
pop
jp
push
enter
jg
cmp
leave
mov
jmp
add
add
or
add
adc
dec
cmp
push
xchg
dec
mov
test
push
aaa
mov
jmp
push
shl
push
push
js
add
loope
and
in
mov
outsb
loop
pop
sbb
les
shr
call
lcall
inc
inc
repz
sub
pop
and
rol
adc
mov
adcl
or
xchg
jg
pop
in
add
int
mov
es
fs
mov
orb
incl
mov
push
movb
es
sbb
leave
adc
ss
mov
aad
cwtl
call
decl
enter
inc
cmp
add
stos
sub
inc
jle
jnp
mov
add
popa
cld
aam
xchg
cs
test
decl
mov
cmp
loope
or
mov
and
mov
incb
shll
out
xchg
aam
dec
dec
mov
inc
sub
add
and
outsl
mov
inc
mov
sbb
dec
cs
pusha
mov
jo
add
cld
jp
pop
pop
cmp
cli
aad
or
xchg
mov
aaa
inc
pusha
push
jmp
out
or
lcall
inc
pop
mov
in
rorb
rcl
mov
mov
adc
popa
pop
dec
mov
pop
sahf
push
inc
orb
rcl
jnp
push
or
pushl
jl
ficompl
sbb
push
ror
and
xchg
scas
jl
popl
inc
stc
cli
sbb
jmp
out
ss
fisubrl
cmp
push
dec
mov
push
or
jmp
out
ljmp
fistpl
aam
and
negl
sub
or
mov
test
decl
or
loope
dec
inc
andb
out
push
push
mov
cmp
push
pop
fidivrl
pop
dec
inc
pop
cmc
jmp
sbb
pusha
lock
shll
mov
cltd
inc
push
add
add
xchg
cs
loopne
push
jl
or
push
insl
lret
jmp
mov
dec
or
inc
jo
fmuls
incl
cld
out
push
jo
pop
jle
mov
mov
mov
cwtl
jnp
int3
jbe
or
mov
inc
mov
xor
xor
pop
stc
push
cld
dec
mov
add
vmaxsd
or
sbb
xchg
mov
lcall
adc
lock
in
ret
fndisi(8087
or
add
cs
call
test
loopne
fadd
xor
jl
cmp
push
mov
pop
int3
adc
scas
cli
jg
mov
sbb
dec
or
pop
adc
or
dec
sub
scas
pop
test
incl
and
in
icebp
jno
xchg
mov
or
loop
mov
cwtl
aam
fisttpll
pop
mov
lods
adc
jmp
xchg
mov
lock
push
mov
subl
out
fwait
push
add
rcl
test
or
or
mov
push
pop
sbb
popf
aad
xchg
scas
cli
ja
sub
mov
add
in
jns
inc
dec
mov
adc
aas
xor
test
int3
push
and
pushf
mov
mov
ljmp
and
jbe
sbb
or
mov
test
fidivrl
es
xlat
test
lcall
stos
paddb
pusha
dec
xlat
pop
or
push
adc
jo
out
adc
test
xchg
xor
sub
sbb
jge
push
out
out
enter
cmp
jne
sbb
stc
sbbb
inc
loopne
aas
pushl
daa
subl
push
push
push
js
ror
mov
insb
test
repz
push
push
mov
ficompl
push
sub
adc
lods
xchg
sub
add
inc
cltd
adc
icebp
je
push
lret
push
decl
sub
xlat
cwtl
push
push
adc
cld
cmp
insb
leave
cmpsb
xchg
gs
sub
imul
jg
fistps
inc
jle
mov
sbb
and
adcb
cli
add
push
das
jg
or
add
jmp
add
jecxz
and
add
pop
pusha
xlat
outsl
push
lahf
js
in
pop
jg
and
pushl
cmp
pushf
dec
xchg
pop
je
ljmp
cli
lds
in
ljmp
lahf
or
and
mov
lret
push
push
add
aaa
sub
dec
inc
push
pop
imul
lcall
out
loopne
gs
xor
jae
xchg
outsl
aas
push
adc
push
adc
push
cwtl
xor
jg
jmp
mov
sub
pusha
addr16
sub
push
add
popa
call
out
sarl
movsb
nop
ret
stc
dec
cli
push
mov
nop
decl
sbb
cwtl
ret
cmp
pusha
fstpt
and
pusha
add
jnp
mov
jle
decl
ss
jnp
les
cmp
mov
nop
lahf
mov
dec
mov
faddl
mov
mov
cmpsl
dec
je
jns
or
call
je
or
test
and
test
dec
jmp
add
adc
mov
sbb
jne
je
ret
push
fidivl
scas
xor
mov
fdivr
jb
pop
mov
xlat
pushf
inc
xchg
test
int3
or
jmp
inc
add
mov
test
add
clc
lcall
and
rcrb
inc
pop
mov
mov
out
loopne
fstpl
pushl
adc
stos
cltd
dec
push
nop
mov
daa
inc
popf
dec
mov
pmulhuw
push
std
outsl
mov
add
in
sti
xchg
push
add
sub
push
aaa
mov
nop
rcrb
test
cwtl
xchg
mov
repz
scas
sub
rcrb
ja
jmp
dec
cwtl
es
cs
imul
out
pop
or
mov
push
jbe
or
adc
inc
std
aas
mov
jecxz
in
stc
cmpsl
mov
pusha
fcomip
mov
pushf
dec
mov
mov
cmpl
dec
xlat
std
roll
mov
int
stos
popa
test
lcall
int
ljmp
mov
outsl
adc
inc
popa
sbb
and
jmp
fadds
push
shrl
decl
cwtl
or
addr16
int
add
lret
inc
xor
xor
inc
mov
std
inc
ljmp
insb
inc
ret
adc
mov
adc
lds
or
cmp
jecxz
xor
mov
sub
jmp
pop
fwait
loop
nop
sub
loop
out
xchg
jno
lock
pop
xchg
xor
and
movhps
call
inc
adc
adc
lcall
lea
stos
pop
clc
adc
and
pushl
in
xchg
jbe
dec
add
dec
sub
add
stc
rcrl
fldcw
cs
jg
lods
or
jo
js
jo
ficoms
orb
je
dec
push
int3
mov
cwtl
mov
scas
nop
cmp
es
cmpsl
rorl
sbb
incl
push
dec
xchg
xchg
ds
sbb
mov
les
push
repnz
push
ljmp
xor
movsb
bound
inc
hlt
scas
ljmp
test
sbb
shr
je
int
push
mov
xor
mov
push
mov
xchg
sub
xchg
push
inc
adc
cltd
repnz
cmpsb
cmp
pushl
mov
scas
mov
or
mov
cmp
outsl
enter
cmp
mov
test
adc
or
sbbl
lcall
sub
adcl
push
or
out
xor
and
mov
call
mov
sarl
js
add
sti
adc
dec
movsl
rcll
aaa
or
in
daa
push
cmp
test
ret
xor
and
add
loope
mov
xor
jb
ja
jmp
dec
adc
mov
adc
faddp
xor
call
pop
lock
incl
les
leave
sarl
rcll
stos
das
add
std
dec
add
call
mov
cmp
cwtl
leave
push
test
repnz
add
loopne
popa
cmpsb
jb
push
loop
das
mov
dec
insb
test
iret
loopnew
pop
xchg
cmovp
jg
sbbb
dec
mov
jbe
or
xchg
add
jg
fisttps
mov
xchg
call
inc
push
insl
push
pop
cmpsb
jmp
popf
shrl
add
xor
dec
dec
ss
and
fiaddl
push
and
sbb
pop
jo
and
jo
add
gs
fcomip
xor
add
mov
push
mov
out
jg
sahf
inc
ds
loope
sbbb
or
lea
or
loop
xchg
jecxz
or
rsqrtps
cmpsl
lock
inc
add
sub
add
lret
jo
fists
mov
jns
or
and
xor
cmpsb
sti
mov
jge
add
xor
lods
cld
nop
imul
mov
xchg
mov
fistps
push
push
push
stc
adc
jns
jl
mov
aas
cld
pop
lcall
xor
or
mov
inc
or
pop
ja
xlat
and
aam
call
jae
xchg
mov
rcrl
js
pop
or
pop
add
rorl
add
push
clc
insl
mov
js
xor
mov
out
and
lcall
mov
jecxz
inc
mov
push
out
mov
add
fnsave
push
add
sbb
fwait
jp
test
popf
mov
push
cld
call
xor
leave
pushf
leave
shr
int3
xchg
add
sbb
mov
and
pop
icebp
jmp
adc
inc
mov
cmpsb
jp
scas
int
gs
xor
addr16
incl
cld
cmpsl
js
leave
sbb
push
mov
mov
sti
repnz
cmp
dec
test
cmc
pop
mov
adc
sar
add
arpl
push
sbb
lcall
test
sub
jb
xchg
push
sub
pop
mov
cmpsl
out
enter
or
aas
add
xchg
xor
cld
test
shll
add
sahf
xor
xchg
cmp
in
jp
movl
adc
call
hlt
jle
jae
push
sub
mov
lea
imul
mov
and
or
fistpll
jl
inc
in
push
rorl
push
ds
into
push
mov
fimull
aad
cmp
jo
inc
sub
push
in
pushl
sbb
pop
and
mov
xchg
lds
xchg
cltd
test
add
fninit
outsl
cmp
arpl
shrl
into
lret
sti
test
cltd
cltd
imul
mov
sub
and
mov
xchg
or
or
adc
fistps
std
push
mov
adc
add
mov
incl
cmp
and
xor
fcmovnbe
lahf
shrb
sbb
and
ror
sub
out
sarb
push
add
subb
cmp
mov
jmp
jne
mov
push
pop
pop
roll
mov
pushl
pop
mov
arpl
add
add
pop
xlat
xlat
lret
jbe
movsl
push
inc
or
test
xor
pushl
mov
dec
sahf
xchg
xchg
fimuls
mov
xchg
xor
or
rclb
out
dec
adc
mov
pushl
add
push
add
inc
out
cmc
das
fwait
ljmp
mov
cmovo
push
addb
inc
ljmp
add
cmp
xor
int3
xchg
mov
loope
jno
and
xchg
pusha
hlt
or
inc
adc
addr16
stos
mov
or
xor
std
mov
test
ds
adcb
push
ds
lret
ljmp
dec
arpl
fs
gs
stos
add
stos
or
inc
pop
adc
jns
mov
lret
pop
hlt
call
data16
rol
xchg
add
jl
push
rcl
adcb
add
or
or
push
cmp
adc
sbb
and
ret
outsb
popl
jge
fnstenv
mov
pusha
js
pusha
fs
fdivrp
decl
xlat
cmp
testl
movsb
xchg
adc
add
and
leave
mov
cmc
incl
jp
dec
dec
loopne
pop
nop
test
and
jno
sahf
outsb
lret
dec
pop
cmp
sub
lock
dec
sbb
or
xchg
fstl
fstl
imul
xchg
int
and
mov
pop
sarb
fwait
cmp
ljmp
pusha
xor
mov
cltd
pop
enter
adc
jecxz
jmp
cmp
fwait
jecxz
push
hlt
adc
daa
dec
or
movsl
ret
outsb
xchg
fstl
inc
imul
call
mov
ljmp
push
or
and
dec
xchg
sub
fsubl
cmpsl
xchg
mov
loopne
pushl
sub
and
bound
rolb
out
incb
mov
push
decl
shl
loopne
adcb
mov
shrb
fmuls
pop
ljmp
adc
movsb
rcrb
cs
fs
roll
data16
lcall
movsl
sub
push
push
hlt
lret
cld
loopne
and
cmp
ds
call
movsl
and
push
push
in
xor
mov
pop
add
cmp
adc
add
ljmp
inc
cmp
aaa
or
jg
mov
add
sahf
jbe
push
push
shlb
mov
outsl
inc
cmp
inc
xchg
jb
and
arpl
lea
int
or
add
add
fcomip
decl
cmp
jecxz
inc
subl
mov
dec
leave
xor
inc
addr16
divl
mov
call
sbb
xchg
or
fstps
add
orl
jb
lret
stos
decl
jno
sbb
inc
loopne
enter
pop
call
mov
push
sbb
xor
fsubl
xchg
lock
push
adc
test
ja
clc
fdivs
notl
mov
push
and
add
pop
rcrl
fldenv
mov
call
add
ljmp
incl
mov
adc
inc
cmp
mov
mov
pmullw
cmp
lahf
fcomps
aad
adc
fsubs
loop
add
test
pop
icebp
decl
push
add
in
out
repnz
jmp
hlt
add
icebp
call
cmpsl
xchg
jae
sub
js
and
jp
lret
fwait
add
decl
pop
lret
lods
adc
mov
stc
sbb
and
or
jg
pop
xchg
sbb
mov
aaa
or
or
addr16
and
decl
call
mov
clc
es
ror
aam
xchg
add
cmpsl
fadds
lock
xchg
repnz
paddw
add
stos
andb
xor
roll
sti
xor
cmp
or
movb
das
popa
inc
ret
shll
in
lods
bswap
jnp
sbb
or
add
mov
cmpb
in
or
or
fisubrs
std
testb
lahf
cmc
in
hlt
mov
pop
mov
imul
pushf
arpl
les
xor
jecxz
loopne
jg
and
les
ss
xor
mov
jbe
push
and
enter
add
arpl
lea
clc
push
std
pushl
rolb
clc
insb
shll
outsb
stos
push
pop
or
xlat
pushl
xchg
hlt
mov
pop
jno,pt
shl
popa
mov
jg
jle
pop
data16
push
shrl
adc
sub
push
jecxz
or
jae
sbb
popa
xor
aam
sbb
addl
mov
xor
inc
xchg
cmp
loop
fcompl
les
ljmp
mov
pushf
adc
test
rcl
inc
fwait
loopne
xor
movsb
arpl
dec
loope
js
jbe
je
jmp
adc
xchg
lock
mov
sbb
pop
les
es
in
push
cmp
sbb
push
cs
aam
add
jae
or
cmpsb
pop
cmp
mov
cmp
sahf
adcl
mov
jbe
mov
pop
xchg
and
fcomip
cmp
ret
scas
adc
cs
bnd
add
jmp
pop
repnz
jae
ljmp
inc
add
mov
ljmp
sbb
pop
jmp
and
and
ljmp
mov
dec
div
nop
shrb
pop
mov
int
add
popa
mov
mov
stos
cmp
and
fcompl
mov
sti
mov
pop
fcomps
lea
pop
xor
rcr
sub
clc
decl
mov
add
jecxz
mov
lcall
xor
jp
incl
adc
test
sbb
lcall
or
std
call
or
inc
adc
mov
mov
mov
add
shl
fwait
sub
incl
and
push
test
inc
shll
inc
hlt
jg
push
loopne
insl
rcrl
and
jne
sub
push
nop
insl
decl
pusha
cli
ljmp
jmp
add
push
sbb
decl
pop
mov
sbb
xorb
push
fiaddl
xor
cmp
lock
scas
lock
daa
mov
adcb
jp
adc
enter
sbb
and
xor
lock
lcall
mov
cmp
cld
and
push
jl
cmp
clc
inc
cs
pushf
xchg
icebp
jg
cmp
sti
int3
notl
xor
test
jmp
out
sahf
aad
test
add
scas
mov
or
and
add
fnstcw
lcall
sbb
dec
lds
add
sub
in
or
lcall
and
push
jmp
sbb
movsb
ret
stc
outsl
xor
mov
enter
incl
js
cwtl
inc
push
outsb
into
xor
jns
xor
push
movsb
lret
xlat
xor
push
push
dec
lret
sbb
cltd
dec
sti
pushf
add
lret
enter
popa
arpl
dec
mov
mov
andb
adc
in
repnz
fldt
jecxz
arpl
leave
mov
pop
lds
aam
mov
lret
out
adc
inc
jg
lcall
push
or
outsb
int
jb
or
sbb
push
adc
ljmp
call
mov
xor
pop
les
roll
fwait
loopne
nop
add
shr
mov
cli
xchg
push
sub
sar
leave
or
mov
push
mulb
popf
enter
data16
and
ljmp
push
gs
pop
mov
xor
cmp
cmp
add
or
pusha
push
cld
incl
bound
lock
fdivl
inc
iret
imul
mov
sbb
cmc
sar
add
push
adc
adc
and
inc
cmpsl
pop
and
cmc
mull
add
pop
stos
adc
ja
sarl
xor
movsb
pop
dec
add
outsl
call
push
aam
outsb
pop
movsb
rorb
mov
loope
lahf
push
and
pushf
add
pusha
scas
cli
fistps
enter
jg
leave
sub
insb
arpl
dec
js
or
outsb
push
add
ljmp
fldl
push
sarl
es
pop
adc
push
pushl
call
orb
test
sbb
jb
in
out
lahf
add
or
ret
ja
decl
add
lods
xor
orb
std
ljmp
jno
daa
or
and
cmp
inc
mov
lea
xor
lods
xchg
or
call
mov
xor
andl
mov
mov
inc
xchg
movsl
or
cmc
incl
cwtl
pop
push
xor
mov
adc
adc
sar
incl
lret
push
ret
xchg
pop
sahf
add
test
repnz
bswap
cmp
ljmp
push
popa
leave
add
ja
jbe
add
and
mulb
lahf
stc
mov
sti
stc
call
jae
xchg
push
arpl
or
fsubrs
leave
icebp
iret
test
fnstcw
jg
jmp
outsb
inc
daa
xor
stos
dec
gs
ljmp
ret
addr16
lcall
sbb
cmp
mov
arpl
aas
pop
aad
mov
jae
movsl
xchg
push
call
add
icebp
cli
inc
xchg
loopne
fdivrl
lcall
pop
add
jp
dec
lret
shlb
test
mov
cmp
cs
jge
subb
sub
jmp
jo
fidivrs
dec
cltd
mov
adc
pushf
push
call
sbb
pushl
sub
test
mov
rorb
and
icebp
ljmp
scas
stc
add
mov
test
mov
mov
mov
incl
jbe
pop
sbb
shr
add
out
or
add
xchg
jo
popl
and
jle
incl
add
xchg
aas
add
movsbl
icebp
mov
js
sbb
sbb
hlt
cmc
int
sarl
cmp
xchg
xlat
scas
adc
aam
push
nop
mov
imul
jg
adc
jl
loopne
les
aas
sar
incl
scas
inc
xor
sbb
mov
jbe
out
mov
push
fidivrl
shl
nop
mov
mov
adc
add
out
sahf
mov
movsb
jmp
sbb
dec
inc
xchg
lret
xchg
pop
fbstp
aaa
sub
or
ljmp
mov
jmp
fisubrl
clc
jmp
jns
push
loopne
test
sbb
rorl
adc
mov
push
daa
xor
mov
flds
or
and
adc
cmp
mov
int3
pop
mov
in
push
jecxz
call
xlat
jg
nop
fadd
mov
add
imul
or
adcl
idiv
mov
call
inc
mov
sti
adc
jecxz
mov
xor
and
cmp
rorb
jmp
call
pushf
sbb
xor
jb
pop
hlt
stos
fildll
xor
repnz
popf
add
mov
xor
xchg
push
lcall
incl
jl
add
stc
xor
push
loope
lret
roll
adc
cmp
xor
loope
and
roll
cwtl
or
cs
outsb
add
sbb
xchg
and
add
cli
orb
push
xchg
pop
pop
adc
jae
dec
jg
ss
into
filds
nop
sarl
ds
inc
xchg
fists
and
mov
push
movsb
adc
dec
add
xchg
xor
cmpsb
incl
shll
jl
cmp
push
repz
and
inc
cmpsb
xchg
pop
pop
push
sar
decl
cmp
and
ljmp
mov
xchg
mov
pop
sbb
icebp
incl
mov
cmp
fsts
fdiv
push
cs
test
dec
ljmp
fcomps
add
jmp
lock
push
pushf
cmpsl
cmp
adc
dec
mov
lcall
inc
xor
mov
add
xor
bound
lcall
nop
imul
xchg
and
insl
add
mov
push
jae
jmp
sub
incl
push
sbb
lods
insb
in
mov
cmpsb
out
nop
and
sub
sbb
add
adc
decl
lock
lods
push
test
lods
cltd
test
and
test
insl
out
fisubrl
or
in
cmp
mov
dec
ljmp
cli
ljmp
js
xor
testl
movsb
test
dec
ret
imul
cld
scas
decl
pop
add
ret
xchg
lahf
add
or
mov
rorl
jmp
jmp
push
mov
inc
aas
push
inc
andl
sub
lcall
insb
rcrl
adc
jb
pusha
xchg
std
jecxz
je
push
add
rolb
mov
add
loop
pushl
dec
std
movb
into
dec
aad
outsl
jno
push
incl
mov
dec
or
sbb
jg
or
cmp
fisttps
lret
mov
xor
inc
or
cmp
xchg
mov
jmp
or
or
faddp
sub
sub
dec
es
sbb
pop
cmc
in
push
rol
mov
loopne
add
and
test
add
aas
notb
cmp
std
test
sbb
add
filds
cld
bound
adc
add
pop
shlb
cmp
call
add
pop
js
daa
xchg
xchg
cmpsb
and
sarb
in
and
filds
pop
outsl
stos
ret
xchg
mov
adc
pop
or
and
outsb
jmp
fimuls
loopne
cmpsb
sbbb
fwait
push
xorb
nop
into
lock
jle
loop
lcall
inc
or
lea
push
adc
jo
adc
push
mov
push
ljmp
jne
cmpb
aas
cmpl
pop
int
aad
dec
bound
stos
fs
je
bound
inc
mov
xchg
mov
add
jae
jmp
xor
pop
int3
cli
pop
nop
leave
sahf
lock
call
jnp
cmp
inc
push
jle
pop
stos
fcoml
adcl
dec
lret
test
or
ret
mov
nop
mov
jae
mov
fxch
mov
jg
loopne
addl
lcall
jmp
sbb
inc
jg
incl
mov
insb
pop
cmpsl
sbb
mov
fdivs
or
or
cmp
xchg
inc
cs
cmp
mov
push
clc
mov
cld
insl
pop
jge
mov
add
dec
xchg
sub
decl
dec
loope
loop
or
sbb
jno
xchg
adcl
outsl
decl
push
mov
aad
cmpsl
call
mov
ret
js
mov
or
pushf
sub
es
xorb
fs
gs
pop
mov
aas
push
cs
cmc
sbb
dec
decl
imul
or
push
cmp
sarl
push
dec
fadds
cmp
arpl
mov
out
clc
jle
xorl
imul
jne
xor
jge
out
xor
jnp
movl
outsl
sbb
lret
or
incl
pop
cmc
dec
test
cmp
xchg
dec
xlat
add
mov
scas
push
inc
sbb
or
inc
test
cs
icebp
popf
push
sbb
aas
sub
xchg
ds
dec
filds
idivl
clc
scas
pushl
add
ss
mov
ljmp
add
sar
ljmp
ret
scas
mov
adc
mov
icebp
mov
push
cld
incl
push
xor
pop
icebp
or
jns
inc
push
dec
mov
xchg
mov
pop
daa
xor
adc
fisubrs
fiadds
iret
jne
jp
xchg
add
lret
cwtl
xchg
jle
incl
cld
sbb
adc
push
add
stc
xchg
xor
or
pop
ret
aas
add
cmp
movsb
test
sub
mov
mov
pop
xlat
cmp
mov
into
adcb
adc
repnz
loopne
jge
andl
jae
xchg
mov
incl
and
test
je
inc
roll
pop
xchg
add
sbb
inc
xchg
addb
cltd
or
pushl
add
mov
shrb
repz
adc
xchg
lods
in
out
xchg
icebp
incl
mov
lock
push
pusha
mov
push
movsb
bound
adc
xor
test
and
iret
in
inc
fmull
fisttps
bound
js
or
push
cmp
jp
jmp
dec
flds
or
add
in
nop
dec
dec
xor
pop
add
subl
mov
push
ljmp
hlt
loopne
es
mov
mov
lcall
adc
ret
xor
lcall
xchg
mov
in
ret
enter
int
mov
push
jo
pusha
iret
shlb
push
xor
add
lcall
add
bound
xchg
test
call
inc
mov
mov
xlat
bswap
mov
aaa
xorb
mov
jmp
orb
inc
jg
ret
add
sar
shl
and
lcall
jns
shll
and
je
ret
in
add
xor
or
jmp
xchg
shrl
ret
xor
or
loop
inc
idivb
shlb
add
xor
push
clc
add
mov
add
fildll
call
pushl
add
lea
push
push
push
pushf
inc
leave
ret
data16
mov
repnz
push
in
enter
js
cmpsb
out
sub
jo
mov
dec
mov
cmp
fistpll
mov
sub
icebp
leave
ret
loopne
push
inc
push
data16
incl
mov
repz
mov
dec
push
inc
add
inc
push
test
add
cmp
outsb
push
dec
add
push
int
shll
js
divb
lret
inc
jae
cli
sub
fdivrs
mov
insl
test
loope
insb
jne
add
jl
fisubrl
addb
jmp
in
ret
push
mov
pop
movsl
pop
jb
clc
push
pop
pushl
mov
sub
sub
jae
cltd
jno
xchg
mov
add
jle
decl
stc
cli
test
mov
cmp
js
ja
sbb
inc
scas
imul
push
mov
ret
nop
mov
ds
push
aam
add
mov
scas
jge
lock
or
jg
xchg
inc
mov
cs
mov
inc
cs
dec
mov
stos
xchg
mov
jo
inc
push
jne
pop
aas
mov
dec
jo
add
xor
outsl
ret
lock
add
jo
mov
xchg
leave
push
lds
out
push
xor
out
lret
jne
outsl
jmp
lock
cmp
mov
lock
bound
push
cwtl
push
arpl
paddd
dec
scas
inc
mov
movsl
ljmp
xor
cld
arpl
std
mov
or
push
jae
mov
pop
out
jb
sbb
pop
sti
cmp
xchg
ret
dec
pop
or
mov
push
adc
push
jmp
mov
pop
je
push
fstpl
es
pop
dec
inc
mov
jnp
lds
push
push
and
mov
push
push
cmp
sbb
jbe
aaa
push
add
inc
test
jo
lock
aaa
dec
add
mov
add
sub
mov
mov
sbb
xchg
lret
xchg
inc
cltd
scas
adc
add
into
and
orb
jle
in
dec
fs
dec
add
xchg
jno
push
mov
stos
mov
pusha
bound
sub
incl
imul
test
insl
sbbb
popf
or
aad
dec
push
out
adc
aad
xchg
test
popa
lds
jo
gs
mov
push
inc
push
fcompl
xor
add
push
daa
scas
cmp
add
sbb
push
cmp
cmpsb
mov
jle
jmp
cmp
imul
xchg
cmpsl
jp
xor
pushf
pop
and
cld
or
movsb
flds
into
mov
jg
fwait
les
enter
sub
out
pop
inc
jl
test
pop
lods
inc
icebp
ljmp
sbb
sbb
pop
sub
pop
jmp
in
mov
arpl
push
aaa
dec
ss
inc
outsl
fbstp
mov
fimuls
xor
sub
sbb
lcall
pop
jb
shlb
dec
das
cltd
lods
mov
push
sbb
mov
inc
sub
hlt
stc
test
push
lock
add
mov
push
jbe
lcall
gs
mov
jo
pop
nop
outsb
clc
jmp
xor
mov
push
outsl
rcll
insl
shll
push
rol
add
lock
mov
cmp
push
dec
cld
push
stos
fisubrl
or
pop
nop
mov
push
hlt
push
push
jbe
xchg
repnz
xorl
test
mov
add
in
aam
sbb
out
push
dec
xor
inc
push
jp
fsub
js
repz
rolb
ss
inc
jo
subl
dec
sub
cmpsb
mov
or
loope
adc
inc
imul
loop
out
in
cmp
mov
pop
add
das
shr
lea
gs
sbb
jns
gs
mov
mov
jno
inc
mov
dec
jle
decl
jo
addr16
adc
or
sti
cwtl
clc
ds
mov
ret
pop
jae
lcall
cmp
clc
mov
dec
stc
push
call
fldt
lcall
adc
jo
arpl
sbb
xor
mov
leave
xchg
jmp
pop
fnstenv
out
in
insl
xchg
unpcklps
jmp
dec
loope
jmp
cld
or
cmp
hlt
fsubl
sub
addb
dec
jb
mov
fs
mov
flds
fcmovnb
lret
cmp
inc
popa
push
push
scas
dec
mov
cmpsl
dec
sbb
add
push
inc
push
xor
push
dec
hlt
lock
push
dec
dec
out
mov
lods
pop
roll
add
add
fisubs
push
adc
push
in
nop
dec
adc
and
inc
hlt
dec
pop
in
pop
loope
push
add
ret
push
leave
mov
call
mov
in
jo
cmc
pop
xor
leave
xchg
enter
sbb
and
sub
push
inc
je
inc
cmp
scas
jmp
int3
jge
lea
push
push
sbb
jg
mov
loopne
jecxz
mov
jecxz
fwait
imul
jmp
pop
adc
push
xchg
repnz
repz
jle
mov
dec
arpl
dec
popa
adc
clc
mov
orb
mov
add
inc
inc
clc
push
add
cmp
imul
sub
mov
push
bound
fs
jmp
or
sub
pop
inc
xor
lret
nop
mov
cmp
in
daa
aad
mov
add
lahf
xlat
jg
jg
popaw
sub
push
repnz
adc
inc
add
jge
pop
push
ret
dec
xor
jns
clc
or
call
sahf
push
ljmp
mov
sbb
dec
pop
push
mov
adc
xchg
ljmp
rorl
cmovne
pusha
jnp
mov
scas
mov
jno
jno
fmull
scas
lods
fstpl
jp
insb
xor
jns
ret
inc
push
fsubl
jo
dec
fcoms
dec
jp
inc
jg
cmp
mov
push
xchg
in
clc
add
scas
aam
pop
pop
outsl
pop
std
sub
std
pushl
xor
popa
mov
sub
mov
or
inc
out
cld
push
and
sub
dec
push
sar
incl
out
push
fs
lahf
mov
pop
cmpsb
pop
mov
inc
lcall
subb
sbb
ljmp
adc
pop
xor
sbb
decl
shrl
xor
sbb
ret
cltd
mov
dec
pop
aas
mov
mov
jne
ja
and
adc
jmp
sub
inc
push
lret
loop,pn
xchg
jg
pop
rcl
imul
cld
sub
push
call
pop
push
or
sub
mov
aam
jns
loop
jns
je
imul
add
mov
push
add
addr16
xchg
sbb
cwtl
decl
mov
xchg
dec
inc
jl
jns
out
testb
lcall
ficomps
jg
into
dec
ja
xchg
clc
mov
js
mov
fs
xor
or
jle
pop
push
mov
pop
inc
dec
add
cmc
hlt
imul
mov
sub
jge
lcall
pop
jns
push
ss
xor
filds
enter
pop
testb
inc
dec
test
push
fsubr
std
mov
loop
adc
add
ret
mov
xchg
xchg
xchg
rorl
std
mov
inc
pusha
add
add
imull
popa
jbe
data16
pusha
rorb
or
jne
insl
orb
push
addr16
inc
push
movd
js
insl
inc
in
insl
dec
into
pop
push
cmp
aaa
std
call
into
leave
lahf
call
adc
sub
mov
mov
call
cli
xor
decl
mov
or
js
pop
mov
dec
ljmp
sub
xor
mov
aam
das
dec
and
fsubl
mov
dec
cmp
add
ljmp
cltd
xchg
les
mov
pop
xchg
inc
pusha
add
or
mov
pushf
push
mov
jmp
or
int
mov
lret
or
push
mov
lcall
add
xchg
lret
xor
mov
insl
mov
mov
sbb
jmp
call
or
rcrl
fimuls
test
add
dec
or
jb
jo
inc
aas
ret
xchg
in
and
les
imul
lcall
iret
cmpl
mov
imul
adc
push
aad
bswap
jle
sub
incl
and
jne
rorl
push
lret
shlb
and
repz
outsl
xor
icebp
adc
mov
jmp
dec
push
hlt
push
jnp
push
adc
mov
sti
rolb
scas
jbe
in
inc
jp
jg
call
sbb
xchg
lret
jne
into
or
inc
ljmp
jmp
das
mov
lret
sti
mov
fisttpll
push
iret
add
mov
sarb
pop
push
test
jae
inc
nop
mov
cmp
cmp
dec
sub
sarb
cmp
inc
inc
or
es
mov
fcomip
loop
sub
add
dec
xor
jecxz
sbb
in
cwtl
jmp
addl
jg
lcall
xor
mov
jbe
xlat
dec
daa
sbb
rolb
sbb
sub
mov
pop
das
sar
xchg
mov
lock
and
sub
mov
lods
push
jmp
mov
push
fsubr
sbb
adcl
sahf
mov
mov
out
les
test
test
xchg
test
mov
inc
or
add
std
add
test
inc
push
xchg
dec
in
movb
mov
add
out
add
mov
jne
aam
inc
sbb
ljmp
xor
and
int3
xor
push
les
ljmp
push
je,pn
in
rcll
add
jbe
fmuls
push
push
pop
movsl
imul
mov
cmpsl
sub
inc
test
pusha
call
jl
or
pusha
mov
dec
jge
or
mov
adc
pop
add
shll
and
mov
loop
jl
and
cli
jg
ret
dec
adc
dec
fmul
xchg
hlt
lods
scas
inc
imul
mov
rorl
ljmp
ss
mov
leave
add
lods
mov
lods
jbe
fildl
inc
mov
jae
cmp
mov
mov
xchg
bound
call
inc
mov
adc
xor
adc
lcall
or
ja
mov
in
sub
xchg
push
and
andb
xlat
out
sti
call
and
and
add
xlat
sbb
stos
mov
push
arpl
mov
decl
js
lods
push
sbb
xor
inc
out
dec
xor
bound
incl
sbb
mov
or
sub
sub
fcomp
or
pusha
inc
sub
xchg
jmp
mov
lcall
pusha
aaa
aam
test
cmc
xor
mov
push
out
and
push
adc
incl
jecxz
adc
cs
inc
leave
test
xchg
jo
jae
bound
pop
pop
mov
call
in
dec
add
insb
das
jo
cld
test
sbb
mov
jmp
inc
sbb
in
jmp
loope
add
lret
stos
rcll
sub
das
shl
mov
jmp
xchg
xchg
shl
cmpb
jo
push
mov
push
pop
xor
sub
pop
sahf
jo
inc
xor
flds
jl
aad
adc
and
fcomps
add
jl
jl
testl
sbb
or
add
sahf
fistl
jl
inc
push
loope
clc
add
mov
adc
jmp
movsb
xchg
add
dec
mov
jmp
and
aad
jecxz
addr16
xchg
repz
cmpsb
outsl
inc
fwait
stc
mov
bnd
mov
inc
fldcw
bswap
outsl
jo
jae
loop
and
aad
mov
cmp
ja
outsl
sub
add
movsb
call
xor
or
sub
in
lret
add
call
lock
cmp
je
add
lcall
mov
pop
lret
jl
jbe
cwtl
xchg
pop
cmp
mov
sbb
xchg
test
sbb
mov
or
xor
push
push
push
add
xor
repz
push
orl
out
jb
add
pop
hlt
add
dec
mov
mov
push
push
jp
ljmp
int
jg
adc
call
or
dec
std
hlt
and
push
dec
in
fwait
jo
jp
pop
dec
xchg
out
xor
outsb
push
fildll
pusha
je
mov
adc
aas
sub
movsl
bound
es
test
xchg
stos
scas
lret
lock
push
inc
rolb
push
lahf
adc
mov
testl
mov
ljmp
repnz
jg
sub
fmul
cltd
loop
movsb
mov
mov
imul
shlb
or
dec
dec
je
cmp
jns
xchg
addl
rorb
cmp
outsl
aaa
cmp
imul
pop
push
inc
inc
mov
or
jle
testb
decl
mov
aas
outsl
dec
fsubrl
or
psubusb
jle
int3
dec
push
inc
frstor
xchg
sarl
add
push
aas
das
in
daa
add
dec
loope
out
adc
dec
arpl
data16
arpl
inc
dec
inc
add
fistpll
cld
daa
lock
push
push
fs
push
sub
sbb
fidivs
loope
lret
mov
pop
push
jle
sti
mov
mov
shrb
inc
push
mov
add
inc
je
sahf
inc
filds
js
nop
js
dec
pushf
jne
mov
jae
jl
push
mov
gs
sub
outsl
and
jecxz
cld
mov
imul
inc
cmp
and
xchg
lret
icebp
jg
xchg
sbb
pop
push
gs
test
xor
ljmp
cmp
addr16
dec
push
bound
jbe
loopne
mov
jo
ret
roll
movl
lds
jbe
call
arpl
lret
mov
cmp
lcall
cltd
iret
sub
push
out
hlt
push
push
mov
nop
pushf
fbld
pmulhuw
ds
add
je
shll
xor
iret
movsb
mov
repz
dec
es
insb
dec
mov
inc
inc
push
mov
xchg
out
lret
faddl
ss
mov
or
pop
dec
ret
sbb
jbe
or
pop
cld
or
xchg
inc
inc
bound
mov
xchg
add
shrl
ds
lock
je
lods
loop
decl
jge
or
sub
adc
sub
stc
push
cli
xlat
jle
in
and
jbe
mov
clc
incl
adc
ret
cmpsl
mov
xchg
arpl
mov
call
inc
pop
dec
pop
leave
lock
jmp
lcall
xor
xor
jl
push
lahf
test
adc
mov
cmpb
inc
rolb
push
jns
mov
or
stc
xchg
les
sbb
jg
outsl
mov
movsb
std
dec
pop
stos
ret
pop
jns
icebp
rcr
arpl
scas
inc
mov
inc
push
push
add
push
push
addr16
or
imul
jle
loopne
inc
push
pop
fnstsw
sbb
xor
call
stos
in
pushl
mov
mov
lods
jge
push
jge
sub
addl
in
sahf
sbb
loopne
insl
ja
frstor
jne
repnz
fidivl
mov
sub
rcll
cli
jle
outsl
adc
or
clc
in
testl
sbb
mov
cmp
les
xchg
and
xor
andb
inc
jbe
arpl
jmp
pushl
lahf
sub
mov
or
lret
daa
jae
loope
xlat
pushf
adc
pop
pop
jo
outsl
inc
dec
subl
mov
push
push
lds
sbb
out
mov
dec
int3
push
jbe
dec
jg
notb
into
and
push
push
push
mov
push
ret
jp
jnp
and
cmc
push
cld
call
and
popl
hlt
insl
in
fisttpl
push
cmpsb
xor
cmp
cmp
jns
lahf
sarl
adc
lcall
call
mov
mov
ds
mov
iret
sbb
pushl
mov
cwtl
es
cmp
in
pop
out
fsubl
ret
pop
and
cld
inc
jae
gs
dec
int3
call
inc
lret
mov
push
inc
test
xchg
adc
adc
and
stc
or
add
add
je
popf
jl
imul
adc
push
sbb
mov
inc
add
inc
xlat
stc
ss
out
xchg
mov
cld
push
decl
clc
and
or
push
mov
lock
repz
xlat
test
dec
or
pop
hlt
xchg
outsl
outsl
xor
adc
call
hlt
mov
or
xchg
adc
stos
dec
subb
aam
andb
xchg
xchg
mov
iret
int3
test
inc
mov
add
mov
pop
scas
stos
xchg
add
xor
and
mov
movsb
cmp
push
mov
jns
mov
cmc
or
test
ljmp
das
test
xor
cli
test
fcomps
out
clc
sbb
mov
inc
je
mov
cli
cltd
loope
inc
in
jb
inc
rcrl
xor
aad
xor
call
sti
inc
jne
mov
jle
adc
mov
mov
imul
jno
jno
pop
decb
in
test
imul
xchg
cmp
jns
pop
lea
in
push
adc
popa
push
ss
stos
dec
pop
jbe
pop
or
insb
dec
sub
arpl
ja
push
decl
dec
cld
mov
mov
push
out
jmp
in
mov
lea
push
or
push
inc
xchg
pushf
insb
inc
add
mov
jo
repz
iret
js
add
mov
popa
cmp
add
cmp
inc
mov
and
jl
mov
mov
enter
or
jle
mov
jb
lock
or
mov
inc
mov
jle
adcb
shll
pop
cltd
xchg
stc
ss
sbb
push
ss
je
fs
stos
cmp
mov
pop
fisttpl
and
jo
idivb
jne
mov
add
push
inc
or
dec
add
xchg
arpl
xchg
aad
pop
pop
add
call
lock
sub
jge
sub
jmp
xchg
jo
ss
push
dec
addr16
jnp
mov
lods
add
ss
imul
mov
in
push
push
stos
lret
scas
cmc
hlt
decl
inc
adc
mov
shll
push
pushf
insl
jmp
jno
and
dec
jne
adc
cmc
test
add
jo
or
filds
adc
test
dec
cmpsb
mov
test
inc
cmp
rcrb
add
or
inc
add
loopne
stos
mov
aad
lret
sbb
dec
xchg
fdivr
in
imul
mov
jbe
dec
dec
and
clc
mov
xlat
inc
mov
dec
pop
xor
cld
fildl
sti
scas
and
cmp
popa
xchg
inc
lcall
xchg
jae
sub
incl
inc
icebp
or
mov
stos
sahf
notl
cld
ds
sub
loopne
dec
mov
jg
testb
push
movsb
addl
cmp
jmp
out
jl
movsl
pop
mov
and
inc
mov
mov
mov
jmp
sub
int3
ja
hlt
bound
aaa
ja
mulb
inc
gs
inc
dec
jl
insl
add
ljmp
rcll
outsb
adcb
out
inc
add
es
xor
test
sub
add
xor
inc
movsb
dec
nop
jmp
addb
loopne
pop
std
ffreep
ss
lret
sbb
loop
inc
pop
xchg
push
cltd
mov
call
and
mov
mov
outsl
sub
dec
dec
gs
lds
dec
pop
pop
push
fsubrs
repnz
adcl
mov
cmc
inc
jb
nop
cwtl
push
adc
popf
hlt
add
mov
aad
cld
or
dec
add
stos
movsl
mov
jne
lahf
and
lock
push
push
push
sbb
add
pop
in
insl
and
sbb
ss
jne
and
test
jmp
and
ss
daa
test
test
jge
mov
pop
add
adc
je
xorl
cmpsb
push
cmc
dec
push
mov
mov
cmp
adc
inc
pushl
mov
dec
mov
xchg
pushf
push
sbb
mov
push
pop
and
cmp
jmp
dec
xor
add
jmp
out
dec
add
add
push
into
scas
jp
mov
push
addb
rclb
dec
cmpl
or
and
mov
mov
fmull
xor
call
lret
test
fistpl
add
sbb
gs
in
xor
sub
add
loopne
dec
dec
jne
rol
mov
lock
push
lcall
pop
cmp
cmp
push
movsl
bnd
mov
inc
gs
bound
sub
sti
add
xor
inc
fcomip
dec
aaa
push
cmp
js
mov
call
mov
inc
pop
jmp
shl
add
cmp
pop
andb
imul
xor
in
xor
in
stos
negb
adc
js
call
adc
fstpt
test
and
pop
add
cmp
mov
js
icebp
mov
cli
decl
xchg
or
add
xchg
imul
mov
aas
inc
add
adc
add
mov
subb
add
or
xor
sarb
enter
inc
mov
in
decl
push
ficoms
pop
ret
lcall
cld
sub
mov
enter
clc
mov
loopne
inc
into
lcall
cmp
jg
incl
mov
xor
test
insl
inc
push
bound
outsb
and
push
insl
imul
mov
or
imul
mov
mov
add
sar
lcall
adc
movsl
insb
jno
cmpsl
inc
inc
lret
aam
shlb
lcall
icebp
jge
xlat
ror
pop
or
daa
mov
andl
sub
jb
popa
xchg
or
jno
test
mov
fstl
mov
stos
ljmp
js
jbe
sbb
inc
rolb
and
dec
cld
jecxz
jmp
adc
rcrb
cmpsb
mov
push
aas
xor
inc
sub
sub
aad
xchg
mov
add
jns
out
decb
aam
adc
add
adc
pushl
sbb
inc
test
and
pop
xor
or
sar
cmp
incl
adc
cmp
jl
mov
xor
in
sbb
jmp
ret
imul
mov
xor
mov
add
add
in
test
xchg
jbe
mov
aas
dec
jecxz
int3
pushl
and
inc
xor
or
les
jb
mov
add
hlt
scas
loopne
test
jmp
pop
out
loope
in
cwtl
out
and
imul
add
aas
fsubrl
scas
jle
jmp
dec
mov
pop
rcl
or
add
dec
fbld
sti
dec
sbb
and
cmc
adc
mov
out
cwtl
call
mov
pushf
sub
pop
pop
xchg
sub
sub
mov
lcall
push
adc
jecxz
dec
add
cld
push
inc
jno
sub
in
fwait
jg
push
dec
sarb
cli
add
push
es
outsb
cmp
inc
push
fst
push
jmp
sub
pushl
inc
hlt
fucomi
add
lret
lret
nop
sbb
dec
push
nop
stos
jl
insl
loop
inc
fstl
fwait
xor
adc
testl
test
add
shr
dec
add
rclb
add
sub
add
push
pop
insb
xchg
add
daa
inc
frstor
and
or
mov
sbb
mov
mov
jns
mov
xchg
push
sub
sbb
shl
jmp
add
decl
in
xchg
and
in
xchg
cmc
ret
aad
sbb
mov
scas
sbb
sbb
mov
cmp
out
lahf
shrb
push
jns
cmpsb
movsb
sahf
std
outsl
leave
mov
fwait
ljmp
sub
push
int3
cwtl
sub
adc
cld
scas
aas
icebp
xchg
adc
es
pushl
rol
mov
mov
pop
movsl
dec
out
gs
pop
rolb
inc
adc
aaa
cld
or
pop
lock
decb
lret
movsl
push
ljmp
test
incl
out
adc
popa
rorb
and
sub
sahf
jmp
pushl
std
lcall
cmp
leave
in
js
into
mov
or
push
cmp
sbb
loope
inc
fldenv
add
dec
or
mov
and
mov
cmp
sbbb
xchg
cs
mov
xchg
aam
out
incl
pop
jmp
sarl
push
pop
dec
xor
fsts
sbb
lods
and
nop
xorb
sbb
cwtl
cmpsl
insl
add
sub
jg
sbb
or
jo
pusha
lcall
aaa
std
adc
xchg
enter
cmp
ficoms
test
pop
sbb
aaa
pop
inc
inc
pusha
inc
jl
xchg
mov
cmp
mov
rolb
aad
push
push
xchg
dec
add
or
rcll
add
stos
and
mov
cld
sahf
inc
push
or
lea
sub
js
xor
mov
fnop
mov
sbb
push
test
xchg
sbb
and
aaa
jg
push
pop
cld
mov
and
ret
sub
pop
psubsw
and
cld
ret
push
jecxz
decl
cwtl
fisttps
jge
and
out
test
insl
or
push
or
ret
pop
jb
adc
outsb
pop
cld
add
in
rcr
cli
dec
add
jle
adc
jns
add
pop
dec
ljmp
call
cmp
add
idivb
push
sbb
sbb
pushl
inc
pop
addr16
nop
jbe
adc
xor
dec
aaa
add
dec
in
mov
ja
cmp
call
mov
out
inc
fcoml
mov
push
xor
add
ret
clc
incl
fwait
pop
mov
ss
scas
lret
aam
adc
adc
dec
inc
pop
rcr
iret
les
add
ss
mov
xchg
xchg
push
sub
push
sub
insb
clc
out
adc
loopne
fcom
insl
popf
mov
sahf
mov
loope
xor
sti
pop
inc
mov
dec
cs
loope
inc
inc
push
fisttpl
incl
nop
negl
pop
xor
inc
lods
dec
fnstcw
jb
sahf
in
pop
adc
inc
ret
fadds
dec
jbe
ret
inc
xchg
push
dec
outsb
rcrb
out
or
incb
or
mov
icebp
ljmp
and
xor
push
dec
inc
mov
mov
je
jl
jecxz
cmp
inc
dec
insb
and
and
dec
jno
cmp
ficoms
cmp
dec
or
je
imul
xchg
add
insb
push
call
stos
sub
mov
stos
and
pop
mov
cmp
or
enter
ljmp
xchg
xchg
outsb
push
shll
iret
push
cmp
adc
xor
jmp
mov
add
inc
popf
mov
jmp
and
inc
call
gs
xchg
push
mov
mov
mov
cmovle
jmp
pop
movsb
mov
aaa
mov
int3
adc
mov
js
mov
lcall
repnz
inc
shll
jnp
out
in
cmp
dec
ljmp
test
cmpsl
movsb
fsts
loop
or
mov
sbb
mov
pop
adcb
cmp
xchg
mov
loop
inc
pop
sar
decl
push
pop
out
add
icebp
or
insb
out
ret
adc
sbb
cmp
and
xor
jg
rcl
xchg
push
addl
mov
popa
cmc
bound
iret
push
inc
push
jo
rol
in
incl
sbb
adc
cs
push
sub
inc
pushf
sbb
xor
repz
jg
lcall
bound
add
pop
lock
mov
add
sbb
jb
ljmp
out
sub
push
fcmovnu
lock
lret
cmpb
fisttpl
in
sbb
add
rclb
loopne
cmp
mov
xchg
mov
pop
arpl
rolb
dec
pop
out
pushl
insl
out
cld
mov
add
lock
or
xlat
clc
out
cli
jmp
aas
lret
jbe
add
adc
aam
mov
int
mov
ljmp
mov
ja
aas
imulb
jecxz
lret
add
pop
iret
add
ret
pop
in
dec
pop
and
adc
mov
stc
fst
idivb
cli
decl
push
xor
adc
jns
xor
pushf
mov
cmp
mov
sub
mov
lar
jbe
fdivs
shll
inc
gs
jns
cmp
or
jne
xchg
sub
and
dec
inc
or
decl
pop
mov
orl
ret
aaa
xor
mov
mov
mov
inc
lcall
decl
sub
adc
nop
mov
ret
incl
das
xchg
movsb
mov
popf
cmp
ss
xchg
in
mov
adc
nop
push
test
fmuls
mov
and
push
add
or
jns
dec
jmp
jno
insb
or
add
lcall
or
gs
sar
mov
sti
mov
mov
dec
lahf
rol
cli
lods
sbb
rcr
jg
lcall
add
or
stc
lods
adc
add
out
cli
jmp
and
lods
jl
sub
push
mov
push
aas
pop
nop
cwtl
decl
loopne
mov
subb
aaa
push
je
xchg
or
enter
sbb
adc
fbstp
inc
arpl
call
and
ss
call
adc
mov
cld
inc
daa
bound
xchg
xor
pop
stc
loopne
test
cmc
add
outsb
sbb
ss
fisttps
loop
loope
push
int3
and
add
repnz
pop
and
call
add
push
stc
lock
in
and
xor
and
sub
pop
out
clc
call
xor
dec
mov
mov
or
in
incl
mov
sub
mov
bound
cmp
cmp
cmp
insl
std
push
lcall
jmp
imul
and
loope
repz
lcall
pusha
xor
stc
add
and
lock
sub
jp
stc
push
mov
pop
js
jne
pop
ljmp
and
mov
xor
cld
bound
lahf
cli
jb
xor
in
subl
jne
cmpsl
add
cmp
fistps
and
incl
and
mov
xchg
xchg
add
push
aas
in
sbb
and
pop
mov
fstpl
ljmp
outsb
adc
imul
push
dec
adc
xor
add
ljmp
adc
push
shlb
nop
into
sbb
xchg
shl
mov
rorb
ret
decl
fldenv
aam
pusha
sahf
xor
mov
scas
sub
clc
push
inc
xchg
rcr
lcall
mov
movsl
jp
jno
push
adc
je
int3
stc
sub
sahf
out
pop
push
ljmp
lods
rorb
mov
xor
iret
incl
cwtl
add
sub
inc
mov
lods
jg
xchg
enter
je
pop
stc
mov
test
add
out
jge
bound
lret
fdiv
pop
sti
add
das
ja
add
movsb
add
adc
das
and
mov
mov
inc
ror
iret
and
push
enter
mov
and
in
in
add
and
push
mov
and
add
aas
jl
or
lock
pop
test
mov
dec
inc
inc
dec
inc
dec
inc
dec
test
add
mov
in
sti
mov
sub
arpl
inc
add
roll
sbb
fildll
sbb
lret
sub
push
dec
mov
ret
inc
ja
cmp
dec
push
pop
scas
lock
push
fwait
jae
sti
push
add
add
push
sub
add
and
ja
in
mov
adc
jne
mov
sub
nop
aaa
adc
shlb
ret
push
mov
loop
jbe
xchg
fsubrl
addr16
cwtl
mov
fdivl
add
call
jnp
iret
lock
ss
add
pop
insl
xchg
add
xchg
add
clc
fnstenv
add
mov
dec
push
push
jg
rolb
clc
add
adc
bound
bound
fmuls
jg
test
dec
inc
cmpsb
mov
test
cli
test
imul
add
or
inc
add
pop
mov
sarl
mov
pop
xor
call
mov
jg
add
push
push
lods
ss
push
js
mov
movsb
rcrl
fcoms
mov
xor
mov
xor
leave
mov
ljmp
add
and
mov
lds
cwtl
fcompl
jbe
aas
rol
push
sub
pop
ja
ja
push
or
sub
pop
add
ret
bound
icebp
dec
mov
int3
jge
call
gs
dec
jnp
mov
stos
add
mov
cld
adc
arpl
dec
dec
inc
inc
divb
hlt
pop
lods
push
mov
movsb
inc
xor
or
jne
filds
shlb
pop
sub
xorb
jnp
addl
xchg
push
mov
pushl
pop
push
dec
pushl
xor
fmulp
repz
sub
imul
add
call
mov
enter
insl
or
inc
xorl
fcoml
or
movhps
inc
jo
daa
lods
lret
in
insb
dec
int3
mov
aaa
insb
xor
mov
mov
lods
xor
in
add
notb
adc
xor
push
jo
add
mov
ja
jne
dec
inc
movl
dec
inc
pop
ret
popa
push
or
out
jge
jae
sub
into
add
xchg
repnz
out
push
rol
insb
push
or
dec
icebp
or
dec
or
mov
mov
push
lret
add
push
insb
lock
into
jmp
inc
mov
adc
dec
les
fadd
popa
roll
mov
push
js
cli
push
cli
sbb
js
jmp
dec
or
fnstcw
cs
shlb
mov
jnp
or
xchg
roll
iret
or
in
pop
fisttps
imul
or
das
aam
push
sar
mov
dec
out
mov
jbe
and
out
jmp
push
push
aaa
test
pop
enter
pop
shll
dec
push
incb
int
add
imul
dec
mov
inc
dec
loope
xlat
fcoms
daa
xchg
adc
xor
pop
fiaddl
into
lock
adc
mov
add
push
push
fiaddl
in
mov
fcmovnu
xchg
pop
adc
dec
inc
inc
dec
cwtl
ss
push
dec
add
loopne
or
add
inc
dec
dec
lods
pop
repnz
mov
pop
fnsave
repnz
add
ffree
inc
mov
inc
iret
inc
outsb
jg
scas
and
dec
dec
mov
push
addr16
in
cmp
cmp
xlat
aad
xchg
sarl
adc
inc
push
outsl
imul
popa
icebp
dec
mov
xchg
push
jns
hlt
arpl
cmovge
adc
gs
xor
roll
popa
mov
addr16
dec
pop
clc
mov
dec
jo
dec
mov
xor
shr
inc
push
iret
jecxz
adc
add
and
mov
fisubrl
jns
dec
add
aas
xor
subb
js
dec
jl
pop
jb
xor
out
adc
in
inc
into
add
pop
sub
cmp
or
add
and
imul
mov
sarl
cs
pop
in
xor
adc
out
jae
arpl
bound
insb
adc
push
xor
dec
in
xlat
adc
repnz
pop
stos
insb
movsb
cmp
mov
push
enter
ljmp
jmp
mov
ja
jbe
mov
lret
outsb
inc
inc
add
fcomps
jno
add
in
rclb
pop
outsb
lods
and
add
xchg
or
inc
cmp
incl
sbb
cld
inc
jmp
cwtl
clc
cmp
out
outsl
inc
xchg
out
aam
imul
fs
push
loopne
call
dec
lea
aas
add
and
out
mov
mov
push
add
addr16
mov
fwait
adc
mov
cld
fisubrl
test
roll
xor
inc
rolb
rcl
pop
les
inc
decb
cmp
lcall
or
mov
loope
mov
ds
add
lahf
dec
fwait
lret
lds
sbb
cmpsl
jo
shl
lret
imul
jb
jle
adc
jp
fbld
dec
jo
jno
lret
sub
sti
lods
mov
pop
adc
movsl
sbb
add
mov
push
jp
xor
inc
xchg
inc
ss
bound
lods
pop
push
loopne
fimull
fcmove
cld
lcall
lcall
loop
jbe
aaa
sub
hlt
sbb
ja
popa
push
lcall
xor
test
fisttps
out
mov
cmpsl
aam
ror
mov
in
jge
insl
sub
fstl
lcall
mov
cld
jp
push
mov
call
sub
sub
inc
or
fldenv
pushf
jp
add
xchg
icebp
mov
push
mov
inc
dec
dec
les
mov
in
pop
lock
xchg
sbb
pushl
test
sbb
outsl
dec
lock
dec
div
roll
lret
mov
bound
dec
int3
mov
dec
lock
mov
cs
outsb
pusha
pop
push
push
pop
stc
mov
jmp
test
jmp
jae
inc
jle
andb
jmp
out
xor
cmp
push
adc
xchg
add
jmp
mov
push
mov
mov
jg
cmp
ss
cmp
in
sbb
ds
cmc
and
sbb
push
jb
fsubs
repnz
clc
mov
outsl
insb
imul
jp
nop
inc
and
xchg
mov
mov
cld
jg
fstl
push
data16
xchg
mov
jle
int3
and
xchg
icebp
pop
mov
test
shl
out
jne
lods
lret
pop
fs
outsl
mov
in
mov
cmpsl
icebp
rcll
or
scas
outsb
iret
xchg
mov
mov
std
pushl
inc
xor
mov
repnz
pop
xorb
popa
dec
add
decb
bound
in
add
repnz
xor
jb
mov
inc
mov
call
push
loop
js
movb
je
mov
stos
es
ffreep
mov
in
push
adc
pop
ljmp
jns
arpl
inc
add
pushl
mov
pop
aam
sub
cmp
jo
test
xchg
fmul
push
jb
mov
mov
sti
cmpb
fsubs
xor
outsb
lret
es
mov
xor
xor
popa
mov
mov
fdivr
incl
lods
mov
push
in
and
pop
pop
pop
shrb
stos
xor
enter
push
aaa
inc
insb
push
cmovb
push
in
call
jp
adc
add
mov
cmp
cbtw
xor
inc
jg
jnp
mov
push
or
xor
das
loopne
pop
in
add
dec
test
fs
insb
outsw
and
insl
and
in
dec
mov
repnz
test
mov
cmpl
cltd
sub
cld
cmp
gs
outsb
sahf
inc
daa
fimull
mov
dec
and
pop
jns
call
push
sub
stos
shrb
xchg
call
sbbb
popa
pop
add
lret
add
xlat
bound
flds
or
gs
push
and
shll
push
xor
lret
ret
sub
out
sub
pushf
adcl
pop
cltd
rcrl
mov
aam
lret
pusha
outsl
inc
jecxz
and
add
aas
out
sahf
aaa
inc
push
outsb
fmul
add
les
jecxz
mov
cmp
lcall
test
pop
cmc
jp
push
cli
adc
int3
call
sbb
sti
outsb
nop
dec
add
js
mov
inc
dec
jne
data16
xor
jmp
sbb
jae
aad
push
xchg
mov
lods
or
mov
incl
dec
dec
aam
call
insb
das
aam
push
jne
arpl
decl
add
mov
push
pop
dec
sbb
mov
cld
sahf
pop
daa
add
call
in
sub
loop
mov
xor
dec
xor
fcoms
out
addr16
dec
xor
inc
fldcw
jecxz
insl
pop
xor
pop
lods
clc
inc
fmull
jbe
bound
jecxz
push
jae
out
mov
push
loop
xlat
add
popf
sbbb
xor
ljmp
in
lea
pop
xchg
cmp
jns
xor
enter
dec
int3
jge
in
mov
mov
cld
mov
push
xor
jns
iret
test
popa
pop
cwtl
jno
inc
int3
mov
das
push
fisubrs
cwtl
orl
mov
in
mov
add
insl
and
lret
fs
adc
mov
mov
xor
dec
dec
dec
popa
xlat
sbbb
cwtl
test
pusha
stos
sub
mov
mov
mov
lcall
mov
push
aad
mov
call
sbb
mov
cmc
sbb
gs
jl
inc
sbb
jae
push
fildll
dec
rolb
inc
add
jnp
iret
sub
call
iret
xchg
outsb
sub
or
bound
xchg
fwait
or
scas
and
repz
std
pusha
orb
xchg
faddp
push
xchg
jg
sbb
push
push
dec
out
call
jle
jecxz
movsb
data16
sarb
enter
jno
dec
scas
xchg
loop
movd
out
push
es
jb
test
outsl
bound
push
jne
loope
loop
push
gs
js
xor
dec
in
adc
cwtl
sub
jg
jno
scas
and
dec
out
ljmp
inc
mov
add
fcmovnb
mov
cmpsl
xchg
out
add
or
dec
inc
push
outsb
clc
inc
es
loop
add
insl
call
rolb
rorl
mov
outsb
loop
xchg
repz
push
mov
xchg
jo
incl
jl
push
inc
aas
add
jmp
pop
adc
add
jmp
out
ret
idiv
inc
mov
xor
ffreep
test
rolb
aas
in
jae
push
es
mov
sub
lcall
sbb
cmp
cwtl
cld
or
stos
inc
mov
movb
push
loopne
xchg
inc
jb
imul
and
or
ret
or
lods
sub
aas
dec
test
or
add
adc
push
jle
dec
lods
shld
adc
ret
call
ret
in
or
pop
lods
pushf
fisubs
movl
push
outsb
dec
aad
xchg
pushf
gs
jg
mov
add
es
and
inc
fstl
adc
add
cld
inc
fcoms
or
insb
cmp
xor
add
das
ja
adc
imul
pushl
mov
mov
loope
or
add
or
shl
inc
lods
mov
fwait
add
iret
jecxz
mov
int3
add
add
and
test
jns
xchg
clc
pop
jno
add
iret
push
mov
test
adc
outsb
pop
shrl
ljmp
mov
push
out
cltd
popa
mov
sarl
fwait
jge
xor
cmp
mov
sbb
fdivr
mov
cli
mov
or
decl
xchg
loope
sub
pop
inc
add
dec
cmpsb
adc
leave
es
sbb
es
cltd
jp
in
jb
addr16
pop
ss
in
xlat
aad
xchg
pop
addr16
or
jb
popf
jg
cmp
sbb
arpl
fsubrl
out
les
pop
sbb
adc
jae
xchg
movsb
jg
call
inc
xorb
push
jp
add
fs
les
in
frstor
call
repz
das
addb
inc
mov
pop
pop
movsb
dec
jo
push
scas
shll
pop
adc
cli
decl
and
push
add
pop
clc
or
push
and
ret
push
out
sbb
ljmp
daa
or
inc
mov
or
xor
scas
mov
mov
sbb
rcr
mov
xchg
and
add
sub
jg
xor
lcall
iret
add
cltd
push
and
pushf
enter
jno
and
mov
cmp
xchg
pop
adc
movsl
mov
xchg
mov
and
mov
leave
lods
test
lcall
xchg
data16
add
jecxz
dec
xor
imul
pop
repz
sub
inc
pushl
ret
sub
imul
ret
pop
testl
fdivrl
pusha
pop
arpl
ljmp
or
in
pop
add
cltd
scas
xchg
shll
adc
and
lcall
clc
cmc
sub
movsl
ljmp
add
jl
mov
xchg
xchg
es
cmp
mov
pushl
cmp
inc
arpl
mov
jbe
data16
pop
xor
push
xchg
adc
hlt
incl
hlt
mov
xlat
lock
pushf
xchg
dec
dec
daa
loope
inc
rorl
sbb
xchg
mov
inc
cmp
data16
or
dec
jae
add
xlat
xlat
pop
xchg
cmpb
mov
sbb
in
jno
ss
pushf
shl
shlb
xor
adc
outsb
add
dec
xor
inc
shlb
mov
push
jns
mov
fwait
and
ss
xchg
inc
out
scas
cli
inc
out
int3
in
call
pop
mov
dec
dec
and
adc
lcall
incl
lds
cwtl
pop
mov
or
ljmp
mov
mov
lcall
sbb
jbe
repnz
jb
cld
gs
clc
inc
push
dec
jge
xor
js
bound
or
incl
loope
or
pop
insl
add
xchg
sub
shrl
or
mov
call
sti
cmp
and
push
xor
mov
add
fiadds
add
fldt
adc
sub
in
in
fdivl
repz
dec
ret
stc
inc
dec
imul
mov
test
xchg
shl
fwait
xchg
aas
add
call
js
pop
filds
fcmovb
orl
mov
adc
or
fists
sbb
adc
jb
fistpll
adc
fistl
add
and
push
jmp
cmp
nop
pop
or
mov
lcall
mov
pushf
inc
xchg
lods
stc
subl
xor
hlt
fcmovb
imul
in
push
inc
push
add
dec
add
and
outsb
call
mov
imul
stc
shll
cmp
jg
gs
incl
lret
outsb
sbb
or
jo
mov
xor
xlat
add
xor
jg
or
inc
push
bound
add
sahf
cmp
loopne
adc
sbb
call
cmpsb
inc
daa
int
or
mov
inc
cld
xchg
sbb
ljmp
fsubrs
mov
lcall
aaa
sbb
cwtl
push
ss
test
popa
cs
inc
outsl
in
cmpb
into
aam
inc
jns
cmp
dec
cwtl
inc
xchg
xor
mov
cld
xlat
sub
scas
pushf
sahf
sub
adc
jmp
sub
psubd
into
inc
mov
mov
lods
aas
xchg
inc
mov
ss
call
jg
aaa
jecxz
rcrb
pushf
sbb
ret
icebp
jbe
stc
dec
jne
inc
xchg
cmpsl
adc
out
cmpsl
inc
jmp
xchg
mov
pop
inc
rol
jns
mov
xchg
jno
dec
push
call
shlb
es
mov
into
xchg
lret
push
outsl
fsubs
pop
xchg
dec
insl
lret
movsb
bound
jmp
xor
shlb
pop
lds
sub
adc
pop
cmp
xor
cmp
jnp
gs
pusha
pushf
fwait
popf
ds
sub
cmc
xchg
sbb
pop
add
dec
mov
orl
repnz
mov
xor
push
sub
inc
das
push
xchg
movaps
pop
add
mov
xchg
cmp
or
loope
fidivs
push
push
and
xor
inc
push
xchg
dec
aas
loop
js
dec
js
xor
xchg
ljmp
push
insb
decl
and
push
jle
pop
inc
fstpt
lret
mov
mov
fbld
pop
xor
xor
adc
jmp
and
pusha
aaa
xchg
mov
sbb
in
insl
lods
dec
insl
sbb
jne
xor
pop
rcrb
out
mov
cmp
adc
push
out
xor
pop
or
cmovno
loop
sbb
dec
insb
dec
sub
push
gs
cmp
aaa
mov
dec
rclb
add
cmpsb
xor
jg
push
push
or
mov
movsb
fiadds
sbb
imul
into
dec
jmp
cmp
ret
rcll
dec
decl
repz
sub
sarb
fsubrp
ret
mov
sub
outsl
jno
data16
or
sbb
pop
dec
jbe
rolb
and
notl
incl
push
push
xor
or
mov
adc
pop
push
test
in
pop
ret
xchg
daa
bound
inc
mov
clc
lcall
dec
out
js
lcall
fistps
mov
dec
push
cmp
cmp
nop
rcr
pop
sahf
pop
push
bound
lock
aaa
pop
sti
and
mov
fsubs
cltd
iret
sub
mov
push
iret
mov
sbb
in
leave
in
icebp
xchg
cmp
xor
push
popa
push
fs
fdiv
push
push
cwtl
cmp
adc
scas
mov
mov
icebp
push
clc
push
mov
inc
dec
fs
inc
fcomps
mov
pop
rcrb
popa
into
movsb
dec
inc
dec
out
mov
test
jecxz
jmp
mov
repnz
mov
mov
cmp
pop
add
out
mov
jb
inc
out
mov
xchg
cmp
cld
testb
in
nop
or
jbe
xchg
and
inc
test
movb
dec
cmp
xchg
dec
movsb
dec
pop
aas
cmp
dec
std
adc
fadds
fs
cmp
daa
pusha
iret
or
jo
sub
sub
pushl
mov
inc
loop
fdivrs
mov
jmp
dec
inc
add
dec
dec
jg
dec
push
sbb
mov
inc
mov
push
out
pushl
hlt
outsb
push
test
xchg
or
divl
lods
ss
jl
push
imul
xchg
fildll
push
aaa
ljmp
je
add
and
lret
ja
ret
xor
sarl
dec
cmpb
movb
aaa
arpl
add
mov
incl
test
add
mov
icebp
ss
mov
fistpll
std
jg
inc
les
repnz
inc
stos
sbb
pop
mov
mov
jge
jg
or
icebp
ds
hlt
cmpsb
push
pop
jo
lock
lock
insb
repnz
pushl
scas
mov
pop
outsl
xor
les
ficomps
ljmp
pop
and
lock
xchg
add
ss
bound
stc
cmc
imul
jmp
push
mov
jns
jl
aad
inc
addr16
test
fisubl
shrl
clc
add
jnp
xor
push
mov
notl
push
push
lods
rcrb
cmp
inc
jg
incl
imul
inc
clc
lds
add
sti
push
jp
stos
jle
mov
imul
push
jne
cli
sub
loop
insb
dec
dec
aaa
addr16
ds
pop
ljmp
push
icebp
inc
mov
incl
push
sahf
out
inc
scas
or
out
dec
push
loop
xchg
imul
out
xchg
jno
inc
sbb
ja
dec
or
loopne
mov
imul
imul
push
mov
aaa
ss
std
fisubrl
mov
xlat
filds
fiaddl
add
popa
ljmp
mov
push
sarl
add
push
mov
jecxz
cmc
ljmp
ljmp
jle
imul
in
cwtl
push
add
movb
add
cwtl
in
xor
insb
push
push
inc
bound
data16
hlt
sub
jno
push
dec
dec
dec
add
dec
adc
clc
jg
add
jb
push
cmp
or
pop
xchg
mov
les
fistpl
pop
out
push
jb
push
mov
dec
or
movb
dec
xor
cs
sbb
cmp
xchg
pop
mov
pop
mov
inc
movsb
shlb
in
mov
add
add
es
mov
pop
sbbb
adc
cs
sub
sti
aas
insb
push
rcll
dec
cmp
jle
leave
adc
lret
inc
lock
push
mov
inc
insl
sbb
push
inc
dec
or
jno
ud0
call
leave
pop
jne
push
iret
adc
rclb
add
fwait
test
call
or
push
cmp
push
inc
push
insb
jne
stos
outsb
cmpl
pop
scas
hlt
inc
ljmp
mov
test
mov
jp
inc
cmpsl
loopne
jmp
jge
ds
lcall
stos
mov
inc
adc
rol
mov
inc
loopne
popa
popf
mov
fistpll
sti
sbb
and
sbb
jb
adc
sahf
or
sub
inc
lock
dec
xor
add
inc
clc
cmp
cmpsl
leave
add
repz
aad
jle
aad
xchg
or
out
loopne
adc
insl
sub
pop
insl
mov
in
adc
jno
ret
cmp
mov
cld
int3
ret
push
and
or
xor
sbb
cli
aam
mov
addb
xchg
xchg
out
mov
cmp
sbb
push
dec
add
into
pushf
inc
dec
aad
lock
fcmovu
dec
push
je
jl
dec
clc
mov
xor
inc
mov
decl
sub
dec
sub
insb
fisttps
xchg
and
in
shrb
jo
out
and
cmc
dec
insl
shl
decb
bound
pop
aam
outsl
pop
sbb
dec
sub
cmpsl
jmp
inc
mov
sbb
hlt
pop
or
inc
stos
cmc
insl
mov
ret
fcmovnb
cld
pop
push
dec
mov
fs
jmp
shll
push
add
or
xor
push
popl
pop
loopne
sbb
je
xor
adc
clc
xlat
rolb
sub
mov
je
fcoms
pop
push
inc
mov
or
idiv
pushl
xor
xchg
inc
les
push
rcl
into
in
xchg
pop
jbe
sbb
in
fwait
push
insb
stos
cmp
pop
je
mov
ret
and
decl
icebp
pop
adc
sar
jb
lock
gs
es
add
jbe
inc
lods
push
loope
xchg
adcl
addr16
outsl
xchg
dec
mull
cmp
addr16
jns
pop
or
jg
popf
mov
mov
xchg
xchg
icebp
fs
mov
pop
adc
cmp
clc
data16
xchg
daa
lcall
imul
adc
shlb
popf
sbb
push
xor
call
movsl
enter
xchg
sbb
inc
or
or
jne
sbb
and
and
sub
sub
incl
roll
jno
in
mov
add
js
adc
call
xchg
jmp
dec
and
mov
bound
mov
push
fs
inc
ds
jo
fs
movl
scas
adc
cmc
cli
mov
mov
ljmp
scas
jbe
add
inc
pushf
loop
inc
lret
cli
add
js
test
fsubl
adc
add
jmp
mov
aad
xchg
add
fstl
inc
pop
mov
jecxz
decl
sub
jge
or
leave
scas
jmp
jne
bound
mov
jmp
lahf
out
bound
out
cmp
notl
cmp
or
push
sahf
or
cmp
mov
sbb
cli
mov
or
push
push
shll
rclb
xchg
imul
movsb
jl
xchg
in
sub
or
ds
cmp
sbb
cmpsl
cld
sarl
mov
jne
testl
movsb
inc
cmc
int3
adc
dec
add
ret
test
sbb
add
loopne
test
sbb
sbb
jmp
add
sub
mov
mov
and
stos
aam
push
into
cmp
outsl
lock
inc
add
inc
add
adc
outsb
or
pop
inc
sti
mov
jg
sbb
add
add
cmp
subl
flds
lea
cmp
sub
and
loopne
or
pushl
leave
mov
pop
in
es
push
jno
jb
cwtl
push
jo
xchg
sub
and
sub
addr16
sub
cmp
loope
xorb
mov
pop
sub
xor
in
lods
stc
lcall
loope
push
or
sbb
stos
outsb
and
data16
cmc
push
inc
or
lahf
sbb
jmp
sbb
and
xorl
mov
xchg
pushl
pop
adc
sbb
lret
sub
popf
outsl
insb
lcall
jns
call
adc
push
popa
mov
ret
enter
jg
inc
mov
shlb
pushl
aaa
popa
leave
and
add
or
pop
fcoml
mov
push
insl
cwtl
sub
sub
decl
ret
in
test
addl
mov
das
pop
dec
pop
outsb
mov
cmp
inc
push
mov
incb
mov
lds
leave
popa
cmp
scas
roll
outsl
or
movsb
jmp
inc
xor
bound
and
clc
add
mulb
out
xchg
mov
xchg
and
inc
pop
add
adc
call
or
ja
dec
scas
insl
or
fildll
xchg
and
ja
jmp
les
scas
sar
jmp
and
add
sahf
ret
cmp
xchg
pushl
sar
incl
rclb
test
paddd
shlb
mov
mov
insb
xor
je
adc
or
sbb
or
shll
or
add
incl
mov
data16
xchg
adc
scas
sub
and
into
inc
sarl
call
push
mov
test
rorl
addb
fs
sub
mov
stos
and
jle
pop
mov
push
fs
jmp
or
out
add
sbb
push
mov
fs
mov
decl
loope
inc
mov
xor
lret
mov
add
sub
push
add
mov
adc
xlat
and
aad
push
add
inc
test
call
mov
jbe
lahf
cmp
and
push
ss
inc
jnp
imul
add
call
cwtl
shll
call
mov
ljmp
sub
incl
xchg
jb
andb
or
xchg
or
sbbl
pop
std
jmp
jo
lock
jge
jp
add
mov
fcomps
test
adc
decl
inc
sbb
and
mov
sahf
mov
add
inc
xor
and
je
jl
cmc
inc
sti
idiv
xchg
call
add
hlt
jae
push
nop
outsb
shlb
pop
fcompl
cmp
ss
or
imul
call
or
sbb
loope
sbb
inc
dec
push
add
push
inc
int3
test
ss
inc
pop
dec
dec
jb
inc
or
aas
and
ret
sub
mov
adcb
mov
mov
fsubrs
clc
vandnpd
dec
inc
jbe
and
jg
or
cmp
bound
jne
addr16
loope
into
dec
dec
inc
enter
jg
pushl
in
sub
shlb
jo
sti
mov
lods
lds
adcb
pop
dec
clc
inc
push
jno
fadds
rcrb
mov
repz
sarb
call
dec
dec
in
test
call
push
dec
pop
int3
enter
mov
lock
pop
mov
or
dec
cmp
inc
add
mov
cmp
inc
inc
cld
in
aas
loope
push
dec
loopne
mov
add
mov
cmpsl
pusha
decl
mov
insl
cmc
mov
inc
or
dec
lret
outsb
mov
jmp
xor
int3
cli
inc
shlb
jp
outsb
rcr
dec
inc
imul
roll
dec
and
sbb
cwtl
cmpsb
push
add
fldenv
jecxz
mov
ret
push
rcll
aas
lcall
lcall
cmp
or
int3
cs
subl
mov
dec
inc
ffree
call
int3
add
stc
mov
test
inc
push
sbb
fbstp
jo
movl
push
sub
jmp
ljmp
xchg
xchg
xchg
jl
jge
outsl
xchg
jg
insl
rorb
fwait
rorb
push
push
imul
in
ljmp
xchg
dec
mov
mov
jg
call
push
jnp
mov
and
iret
pop
mov
filds
pop
cmc
pop
inc
in
orb
push
inc
push
cli
pusha
pop
add
or
xor
dec
inc
jne
mov
mov
push
je
inc
xchg
cmp
and
push
aaa
mov
mov
pop
mov
dec
pop
dec
mov
jl
sbb
ret
jp
shrb
arpl
ffreep
aaa
outsl
push
movsb
add
dec
pop
cmp
xor
in
call
call
jp
sbb
out
mov
sbb
xor
xorl
jne
ficoms
inc
jae
sbb
inc
stos
clc
or
push
clc
push
push
xor
adc
mov
push
adcb
mov
jmp
mov
int3
mov
inc
mov
cmpb
popa
mov
push
inc
pusha
and
popa
cmpsl
jle
rorb
xor
adc
lret
imul
decl
adc
sahf
sbb
dec
aad
fsubl
xchg
push
fwait
xchg
stos
push
data16
insb
lock
push
inc
xor
dec
mov
cmp
xchg
sbb
add
movsb
rcr
incl
or
sbb
adc
sti
push
nop
mov
mov
jns
mov
cld
inc
xchg
sbb
push
dec
inc
jle
or
out
jmp
jns
ret
xchg
gs
pop
add
in
call
testl
addr16
aad
or
pushf
js
push
clc
movsl
jae
add
insl
or
jg
addl
lock
insb
sbbl
cmp
pushl
ror
daa
into
jns
push
inc
or
adc
dec
push
sub
push
iret
js
sbb
jb
jmp
insb
push
dec
int3
fisttps
cli
mov
add
inc
in
or
adc
sar
ljmp
mov
test
xchg
xor
cwtl
adc
pop
out
push
ficompl
ja
cmpsb
popl
pop
mov
pushl
aaa
sbb
adc
sub
push
and
xchg
or
in
imul
push
dec
xor
pop
shlb
dec
inc
xor
lcall
jae
int3
dec
push
ljmp
push
fs
lcall
mov
jmp
jle
pop
outsl
inc
push
or
mov
dec
xor
inc
and
adcb
neg
movsb
inc
or
add
incb
xchg
aas
jno
lret
push
gs
sahf
int3
inc
jl
and
test
xorb
add
lret
das
and
mov
pop
loopne
xor
cmp
fildll
sub
ja
jns
pop
or
arpl
fisubs
out
mov
fnstcw
es
jmp
jmp
cmp
and
xor
xchg
ja
or
das
push
adc
xor
repz
ljmp
lret
jp
ja
dec
xchg
mov
hlt
sub
fcmovne
xchg
fucom
jnp
call
ret
sbb
jne
js
ret
adc
push
popf
dec
push
fimuls
aam
roll
pop
xchg
or
lret
xchg
or
shrb
inc
je
movsb
push
xchg
or
inc
jae
ficoms
or
cwtl
rcrb
or
xchg
adc
pushf
jg
jo
push
jo
lcall
inc
cltd
int
cmpsb
fistpll
and
jnp
mov
jne
loopne
js
mov
add
inc
dec
dec
scas
dec
xchg
adc
fcomp
sub
xor
inc
sti
jmp
je
mov
xor
jns
mov
pop
jb
jo
shll
sti
popa
mov
sti
leave
adc
cs
lcall
inc
cmp
mov
mov
jno
mov
out
fstps
mov
lret
ds
daa
lret
push
add
ljmp
ss
jge
push
loope
insl
arpl
add
ljmp
or
pop
into
clc
or
xchg
outsb
setl
inc
mov
sub
push
shll
mov
mov
fucomip
loope
add
adc
addr16
es
mov
sbb
loopne
sbb
mov
imul
pop
xchg
xor
ret
in
lock
dec
adc
cmpsb
shll
pop
test
push
fmul
jne
dec
sub
aas
sahf
sarb
enter
xchg
jno
sub
lret
fisttpl
dec
std
and
xor
lock
push
or
cmc
sbb
loopne
push
push
repnz
mov
cmpsb
loope
dec
inc
push
aam
imul
sub
call
lret
test
gs
jns
add
sub
inc
xchg
lock
stc
outsb
pop
sub
xchg
mov
imul
lcall
pushf
dec
push
fnstcw
inc
xchg
call
xchg
lock
data16
pop
xor
cltd
ficompl
leave
add
loop
mov
push
fnsave
xchg
push
push
xor
jb
fstl
pusha
dec
out
push
dec
push
std
call
inc
clc
test
push
stc
push
lock
or
push
inc
in
fst
mov
sub
jmp
mul
push
dec
ds
das
push
repnz
dec
lret
lock
or
mov
ljmp
lret
fidivs
cs
mov
out
call
mov
xchg
rclb
dec
lods
repnz
dec
add
push
roll
mov
sbbb
jns
sub
ljmp
xchg
jle
add
or
sub
xor
ljmp
incl
xchg
mov
nop
xlat
mov
fcmovne
hlt
and
dec
mov
pop
xor
or
xor
inc
inc
popa
lcall
loopne
push
push
mov
fs
pop
clc
out
lock
in
clc
push
sub
dec
daa
sbb
aaa
xchg
bound
pop
mov
outsb
cmpsl
cmp
insb
pop
jb
push
xor
mov
xchg
adc
dec
inc
mov
in
incl
sub
mov
cwtl
mov
push
sub
or
jo
dec
dec
imul
xor
inc
push
dec
outsb
adc
push
jae
push
les
xchg
inc
push
jg
imul
or
jne
test
loop
sbb
aas
cmp
loopne
inc
ret
push
push
dec
rcrb
outsl
mov
inc
js
xorb
iret
repz
jne
dec
scas
sub
xchg
fstpl
push
aad
sbb
dec
add
lods
pop
jmp
fcom
jmp
xchg
jmp
subl
add
sbb
jb
fbld
xchg
inc
xchg
xchg
fcoml
mov
push
mov
in
inc
mov
jmp
mov
out
lea
mov
mov
inc
dec
jae
jle
mov
stos
lret
js
inc
sbb
jg
jle
or
dec
push
push
or
call
cmp
repnz
je
movsl
fisubl
cmc
popl
daa
jle
xor
xor
std
loope
icebp
in
or
call
aad
pop
jno
adc
shll
push
ret
insb
hlt
push
pushl
imull
imul
loopne,pt
stos
jmp
clc
jbe
mov
in
add
cmp
inc
or
lcall
jmp
push
clc
hlt
in
mov
mov
dec
repnz
movsl
aad
test
sti
pop
mul
ja
sub
call
int3
inc
cs
jnp
pop
shlb
pushw
out
dec
pop
outsb
les
negl
push
outsl
jns
jne
push
dec
jg
xor
call
je
ds
les
push
xor
mov
sbb
mov
sbb
or
jl
pop
inc
xchg
xchg
push
cwtl
outsl
cmpsb
mov
mov
jo
inc
dec
cs
filds
test
pop
fisubrs
or
xor
add
sbb
push
lock
cld
imul
xor
dec
add
jge
aaa
orl
mov
ffree
xchg
leave
pushf
inc
sub
dec
xor
decl
dec
test
xor
shll
add
jg
hlt
dec
mov
cmpsb
fdivr
fs
add
in
loop
fcoms
push
push
cmp
movsb
dec
inc
inc
jns
sub
xor
inc
add
repz
test
mov
pushf
sub
inc
jg
fs
leave
stc
xor
sbb
shlb
scas
mov
in
add
mov
movb
push
or
xchg
push
adc
mov
movsb
cmp
mov
insl
aaa
or
add
je
fs
ret
test
je
insl
xor
adcl
les
ljmp
fsub
sbb
cld
push
push
push
ja
andl
sub
sub
cmp
push
and
or
inc
jnp
test
imul
fists
pop
pop
gs
lods
ret
adc
inc
sar
out
xorb
xchg
dec
sub
loope
lods
sti
stos
clc
movd
cmp
adc
jo,pt
test
mov
lret
fildll
add
ljmp
pop
hlt
mov
adcb
stos
inc
aaa
cmp
jo
sbb
jb
outsl
xchg
add
mov
outsl
jne
mov
dec
inc
inc
push
xchg
inc
dec
addr16
xor
push
cmp
cmc
lcall
int3
sub
or
adc
aad
repnz
jmp
std
jle
mov
repz
arpl
dec
xchg
lret
in
adc
mov
lahf
cmp
sub
nop
out
or
ljmp
mov
xlat
std
cmp
ret
cld
xchg
mov
pop
cmp
daa
jge
imul
rcrl
sbb
sbb
pusha
mov
inc
mov
cld
mov
add
call
fwait
add
mov
js
mov
xor
pushl
mov
inc
dec
dec
jge
out
inc
in
test
filds
cld
cmp
xchg
stos
cmp
cmpsl
cmpl
out
jo
filds
sarb
cs
mov
cmp
mov
push
lret
xchg
cmp
push
cld
sbb
cld
in
nop
jnp
add
andl
decl
dec
sbb
pop
out
cld
xor
mov
repz
js
std
cmpb
enter
or
jo
jae
js
out
hlt
dec
jl
out
iret
int
fwait
mov
dec
add
insl
fbld
movsb
mov
sahf
stc
ds
jae
add
mov
dec
test
outsl
insb
dec
push
movsb
shll
xchg
push
inc
icebp
pusha
rorb
add
jbe
push
movb
dec
jle
sar
fistpll
mov
mov
xlat
mov
call
jnp
inc
xchg
incb
rorl
lock
and
gs
add
xor
sub
insl
xor
lcall
arpl
movsb
add
mov
inc
and
jno
cmp
xor
xor
out
add
icebp
call
fs
arpl
sti
loop
jnp
arpl
pop
adc
push
push
or
scas
push
or
adc
lea
pop
and
decl
out
stc
out
and
out
outsl
xor
xor
inc
mov
pop
dec
xchg
dec
lcall
pushl
cmp
ja
cmp
xor
ds
mov
cld
inc
lock
mov
out
rcl
xor
in
cli
cli
call
int3
js
mov
xor
pop
scas
jns
pop
fwait
out
xchg
pop
incl
inc
dec
jo
jb
pop
inc
in
mov
sub
aad
leave
adc
in
sarb
inc
pushf
int3
inc
mov
cmp
loope
sub
mov
adc
jmp
cmp
dec
add
stc
fdivrl
sbb
arpl
insb
mov
and
data16
loop
cmp
xchg
icebp
pushl
and
mov
push
or
cmp
cmpsl
mov
jg
fs
std
dec
mov
dec
ret
daa
loope
cmovs
or
xchg
js
dec
dec
add
sub
xor
jno
sti
push
dec
pop
mov
cmp
daa
sbb
add
mov
shl
aam
push
out
cmpsb
dec
lds
pop
ret
out
es
pop
ficompl
xor
fmuls
adc
ja
jb
adc
insl
xchg
pop
roll
ljmp
in
add
sbb
movsb
pushw
into
ret
mov
cmp
lea
pushf
movsl
mov
inc
mov
dec
rolb
movsl
loope
xchg
fbstp
pushf
and
and
test
mov
repz
shrb
stc
push
mov
into
jb
pop
mov
jae
data16
out
xor
leave
mov
imul
jmp
push
mov
pminub
inc
jbe
aas
push
mov
mov
push
arpl
push
xchg
dec
fildll
dec
xchg
mov
cmp
in
loopne,pt
psrlw
inc
inc
data16
aam
outsl
mov
dec
dec
dec
andb
dec
pop
ljmp
pop
add
sub
ja
repnz
cltd
sbb
mov
cmc
push
pop
dec
sub
sar
and
insb
push
and
push
or
cmpsb
std
sbb
pop
clc
inc
mov
imul
pop
cmp
dec
shrb
flds
push
jo
ja
cmpsb
and
mov
inc
xorb
pop
mov
xor
inc
insl
dec
push
dec
aaa
testl
sbb
or
fimuls
mov
adc
mov
cmp
rcrb
push
add
inc
inc
cmc
jmp
mov
and
fcompl
push
pop
push
inc
jle
rorw
pop
or
jo
scas
inc
xchg
fistl
mov
mov
out
cld
ffreep
jns
jae
xchg
sahf
outsb
fs
decl
jg
jmp
or
pop
and
mov
sub
dec
rolb
fisubs
out
push
mov
out
xor
dec
movsl
or
iret
orb
ror
ljmp
sub
dec
jb
inc
cltd
adc
sbb
aad
pushf
jb
mov
fdivrl
popa
inc
mov
xor
cwtl
push
mov
cmp
xlat
push
sbb
ret
cmpb
imul
jmp
sbb
fcompl
jp
xchg
lea
xchg
xchg
dec
in
push
mov
pop
xrelease
xlat
nop
pop
inc
inc
dec
test
adc
sub
inc
mov
jne
hlt
jle
cli
subb
pop
push
dec
pop
mov
and
cltd
mov
into
sub
lock
cmp
fs
dec
sbb
push
xchg
jl
jp
int
xchg
dec
push
cmp
mov
test
orb
xor
aaa
and
outsb
jo
insb
insb
sbb
inc
orb
jbe
xchg
xor
out
cwtl
addb
xor
xchg
lcall
insb
orb
daa
stos
mov
insb
js
xchg
aas
fwait
lea
add
inc
xor
adc
lods
hlt
decl
incb
dec
and
mov
lods
ds
enter
add
mov
cmp
fistps
jg
scas
inc
cld
aam
daa
push
jb
adc
mov
mov
inc
ror
outsl
dec
pop
pop
mov
lcall
and
xor
lret
jbe
sbb
scas
out
adc
mov
pop
test
dec
and
movsb
push
mov
inc
enter
xor
and
cmp
ljmp
mov
sbb
and
imul
jle
cmpsl
push
scas
push
or
push
jle
push
sti
into
testb
add
cmc
ficomps
push
inc
lcall
mov
inc
out
hlt
add
loopne
arpl
pop
xchg
mov
pushl
movsl
mov
mov
pop
mov
mov
clc
push
imul
jl
cmp
test
adc
es
and
inc
inc
cmpb
or
popa
jb
xor
scas
shlb
rcr
bound
out
dec
xor
fildll
dec
enter
mov
psllw
call
add
pushl
das
sbb
xor
ds
arpl
inc
jbe
outsb
addr16
mov
inc
mov
xor
dec
or
sbbb
cmp
je
and
dec
into
push
mov
adc
xlat
pop
jno
mov
outsb
inc
inc
imul
jbe
stos
lea
xor
mov
fs
mov
cvtps2pi
in
pop
adc
push
les
test
dec
nop
icebp
shlb
push
push
je
add
mov
out
cmp
push
or
mov
jp
movsb
nop
test
outsb
cmp
out
mov
in
and
clc
lods
lret
inc
dec
jg
ret
inc
add
movzbl
or
stc
jmp
cld
adc
push
scas
xchg
lret
ret
dec
add
ljmp
aam
pusha
mov
jg
cmp
pop
pop
popa
insb
cld
dec
sbb
addb
aaa
and
jbe
mov
popa
jl
int
into
jmp
fstpt
xor
cmpsl
dec
stos
test
fildll
icebp
and
xchg
ficoml
in
mov
in
xchg
cmp
sbb
and
int
adcb
repnz
insb
push
out
jno
loop
adcb
mov
jb
jb
add
xchg
inc
nop
sbb
jmp
push
sbb
jb
je
dec
push
repnz
jne
adc
add
cmp
or
jbe
loopne
cmpb
ja
sahf
dec
mov
pop
push
ja
movsl
xor
dec
push
pushf
mov
repnz
jg
in
dec
xor
sub
ss
cmp
call
inc
xchg
push
or
push
insb
aaa
aaa
mov
inc
nop
pop
push
pushl
aas
sahf
call
pop
xor
sub
ror
ret
into
ljmp
push
dec
add
cmp
xchg
pop
cmc
mov
mov
sbb
jne
xor
cmp
sahf
xchg
test
xchg
cwtl
or
call
inc
dec
mov
inc
icebp
lods
int3
xor
decl
mov
jle
ret
jbe
mulb
push
sti
push
dec
in
mov
pop
add
push
addr16
cmp
aam
xchg
je
push
xchg
jg
or
sbb
in
ljmp
int
sub
jo
mov
sbb
shll
jl
jmp
incb
ret
inc
push
cmpsl
shll
jmp
icebp
mov
dec
loope
nop
or
and
jmp
pop
daa
mov
mov
sbb
popf
int3
das
rclb
sub
fisttpll
loope
pop
inc
aaa
ja
add
in
ds
jo
ja
lock
dec
pop
add
sahf
sub
ss
lcall
movsl
int
adc
jbe
fmuls
cmp
decl
push
mov
arpl
xor
loope
psrad
lcall
jecxz
mov
push
out
mov
aas
out
in
inc
sub
shrl
inc
pop
lret
sarl
cmpsl
ljmp
std
cmp
test
sbb
jecxz
and
jp
jno
inc
xor
aam
mov
cld
in
test
sub
push
xor
jae
mov
pop
lahf
or
pushl
gs
xchg
stos
sbb
stos
mov
cmp
imul
es
push
jno
cli
sbb
mov
inc
inc
push
push
das
addb
fwait
or
ljmp
or
int3
add
out
ljmp
cs
mov
movsb
pop
mov
mov
sub
insb
and
pop
add
or
outsb
iret
imull
inc
xor
xor
inc
pop
cli
jle
incl
fmull
arpl
inc
popf
cmpl
ret
aaa
mov
cmpl
rolb
inc
imul
scas
push
inc
dec
cmp
jg
pushl
ret
push
ds
or
cmpsl
mov
ljmp
fsub
jae
test
mov
fisttpl
sti
or
mov
arpl
gs
pop
inc
rclb
and
lcall
cmp
mov
sbb
xor
subb
jl
jo
jbe
pop
ljmp
inc
dec
inc
loopne
incb
inc
inc
xor
inc
pop
xchg
lock
jg
lret
scas
inc
add
shl
adc
ss
out
es
and
mov
xor
repz
add
dec
clc
jbe
imul
cmp
outsl
add
outsb
jge
sub
addb
outsb
imul
adcl
dec
xchg
xchg
ja
or
xlat
test
je
jecxz
jg
push
pushf
in
fdivs
les
leave
push
or
add
push
je
mov
movsb
mov
xor
push
jg
sti
pop
fdivrs
dec
pop
pop
sbb
add
cmp
mov
mov
pushl
inc
and
jb
hlt
mov
jecxz
icebp
test
pop
sbb
rorb
xor
orb
push
sub
mov
aas
pusha
jns
dec
fsubp
xorl
sub
jbe
test
jp
mov
push
into
adc
jl
cmc
mov
out
aaa
push
inc
je
adc
mov
insl
ss
adc
or
jb
jne
mov
adc
outsl
mov
out
movsb
inc
pushl
adc
cli
incl
fwait
mov
cmp
into
fsts
adc
ja
addr16
inc
add
or
adc
imul
ljmp
adc
subl
insb
stos
mov
inc
pusha
pop
addr16
sarl
nop
cs
cmp
sub
mov
push
aas
es
add
fbstp
decl
cmp
out
fimuls
add
pusha
sub
enter
arpl
orl
aad
cmpsl
adc
pop
mov
inc
fmul
or
mov
lcall
filds
and
mov
and
stc
mov
stos
push
outsb
in
fidivl
mov
fstps
int3
push
std
ljmp
popf
jno
adc
dec
push
gs
ljmp
dec
movl
fs
add
shr
push
sub
pop
clc
push
push
xor
out
jbe
inc
aam
fstp
outsb
lret
lcall
adc
lahf
cmc
addb
jmp
or
pop
nop
ja
outsl
pop
shlb
or
jp
pop
loopne
jb
inc
cwtl
inc
mov
pop
adc
fisttpl
mov
cmp
lret
and
mov
jbe
mov
ds
cmp
push
stos
push
sub
sbb
push
fs
cli
add
mov
jo
fdivrp
ljmp
add
lock
or
xor
nop
lods
es
xchg
clc
call
pop
idiv
setb
imul
in
addb
push
lock
and
dec
rolb
lock
loopne
pop
and
insb
inc
arpl
dec
push
push
ljmp
fwait
or
mov
push
and
cltd
outsb
lret
ljmp
push
add
scas
insl
inc
mov
aaa
pop
mov
mov
std
loope
sub
inc
xor
subl
cmp
in
pop
shrl
sub
mov
adc
jl
cmpsb
and
mov
mov
hlt
sar
rcll
sarl
inc
iret
cmp
sub
out
push
sbb
roll
ret
push
mov
push
test
aaa
and
lea
and
add
std
call
jns
or
sahf
arpl
or
insb
mov
and
xor
movsb
test
in
addb
pop
ja
dec
pushf
outsl
pop
loopne
fmull
cmp
int3
ljmp
or
add
push
sbb
push
mov
dec
mov
mov
aas
ret
xor
or
leave
cmpsl
cli
fwait
mov
and
dec
out
mov
int
dec
jl
lahf
pop
cmc
mov
aam
sub
ljmp
xchg
fists
jo
and
xchg
and
test
incl
mov
push
adc
push
or
xor
dec
rcl
loop
stos
std
mov
movsl
mov
pushl
icebp
add
adc
and
addb
mov
es
daa
push
aam
sub
incl
scas
ret
add
sbb
mov
cmpxchg
ljmp
sub
scas
int3
nop
add
cmp
ljmp
jbe
lds
fistpl
insb
jmp
jmp
aad
lcall
cmp
push
inc
dec
push
pop
gs
push
int
xchg
aad
out
and
sar
pop
add
out
jmp
sarl
add
shrb
rclb
aad
sub
adc
mov
adc
lds
pushf
das
out
xchg
push
mov
inc
and
jb
push
adc
add
decl
push
xorl
sbb
lds
add
rcl
rcrl
dec
dec
xor
or
es
lds
jo
mov
xor
lret
fstpt
hlt
jmp
jnp
pop
cmp
mov
mov
jl
jle
mov
add
cmpsb
std
add
add
push
adc
pop
mov
push
aas
and
imul
mov
es
adc
push
sbb
mov
xchg
add
fstpl
mov
or
cmp
add
pusha
push
xor
push
xchg
repnz
out
test
repnz
rcr
gs
sub
es
decl
mov
cwtl
fwait
imul
mov
and
xchg
jmp
adc
push
push
push
adc
pop
push
cmp
repz
adcl
aam
adc
cmp
inc
fnsave
cs
pop
hlt
inc
imul
mov
pop
push
cmp
lcall
pop
dec
jns
cmp
jge
jb
inc
push
fisubl
pop
rcll
decl
pusha
mov
loopne
push
shl
aaa
xchg
xchg
insb
fistps
jl
sahf
inc
add
pushl
leave
inc
push
fs
push
imul
mov
loope
sbb
cmp
push
push
cs
push
cli
clc
cmp
faddp
pop
popa
pop
scas
sub
xchg
bound
pop
xor
mov
jecxz
sub
call
fcoml
inc
inc
arpl
push
cs
in
dec
shlb
cmpsb
and
movsb
popa
or
lds
std
lcall
movsl
inc
fcoms
dec
and
xchg
hlt
aad
fwait
mov
and
call
mov
inc
lahf
cmp
add
push
add
out
push
ljmp
cs
xor
je
xchg
adc
mov
jmp
aad
lcall
jmp
mov
je
or
je
cmpsb
out
xchg
sub
xlat
incl
push
out
xor
mov
lock
adc
out
or
call
test
or
js
mov
xchg
iret
cld
movsb
xor
mov
hlt
in
repnz
sbb
out
lods
test
jp
xchg
test
jge
jb
mov
fisttps
mov
xor
xlat
in
sub
lock
loop
cmpsl
jo
mov
incl
push
dec
pusha
xor
and
jo
or
push
lods
fisubrl
xchg
out
add
cmp
mov
push
daa
popa
cmc
ret
and
add
jmp
cmp
mov
dec
lret
add
cwtl
sbbb
or
imul
aam
xlat
dec
sahf
aad
aad
pusha
add
xor
add
dec
ret
add
push
adc
incl
and
cmp
xor
lods
add
jnp
and
call
outsl
ret
fisttps
adc
mov
xor
movsl
sub
jg
adc
aas
rcl
inc
nop
mov
dec
mov
fwait
js
sarl
xor
fstl
inc
xchg
cmp
and
cmpsl
fildll
cmp
jno
test
mov
popa
lea
fcompl
lcall
inc
jo
mov
and
jmp
jmp
push
les
xchg
les
call
test
and
test
lahf
pop
mov
pop
mov
stos
add
add
ljmp
incb
xchg
sbb
inc
adc
fdivr
inc
mov
mov
mov
pop
fcmove
rorl
jge
movb
jb
enter
mov
push
outsb
mov
cltd
mov
ljmp
mov
int3
pop
add
dec
movsl
shlb
jmp
pop
fcoms
int3
pop
daa
fimull
or
or
adc
ds
popa
adc
add
mov
inc
adc
xchg
xchg
mov
movsl
leave
pusha
out
fisubs
roll
icebp
ljmp
cmp
dec
ret
mov
popf
es
mov
loope
add
push
pop
call
cld
pop
outsb
adc
mov
jmp
sti
cmp
rcrb
ljmp
arpl
adc
jne
xor
xor
imul
adc
sbb
push
dec
sbb
push
sub
push
ret
test
sub
sbb
push
push
sub
jne
dec
and
ret
out
push
fildll
rclb
push
sub
pop
or
mov
xor
lcall
shll
inc
orb
test
jp
lock
jmp
gs
je
lods
cs
xor
mov
or
xor
add
mov
jne
cld
mov
or
lret
sbb
cmp
pop
idivb
repnz
ljmp
xor
jl
arpl
add
out
es
pop
mov
faddl
lret
push
fcomip
mov
mov
and
addr16
sbb
dec
adc
ss
js
lcall
in
adc
push
sub
int
scas
inc
xchg
or
inc
jl
popf
ljmp
cmpsb
xor
aad
mov
mov
add
test
dec
xchg
mov
cmp
push
fidivl
jo
insb
jl
cmpsb
imul
jae
xchg
add
push
lret
push
shlb
cmp
or
adc
movb
shl
jmp
rclb
cld
or
xchg
or
shrb
add
jmp
loopne
ss
inc
or
push
int
pusha
test
jo
inc
ljmp
fwait
dec
pop
push
repz
cmp
cmpb
ljmp
call
jno
lcall
lret
add
roll
lcall
and
pop
add
repz
push
das
jo
push
es
push
push
cwtl
cmp
mov
lods
imul
pop
test
lcall
mov
nop
pop
cmp
mov
loop
and
loop
add
bound
push
inc
cmpsl
xor
mov
pushl
xchg
fstps
lret
fs
add
dec
popa
pop
sbb
mov
or
decl
fdivrs
jg
dec
xor
cmp
pusha
pop
jne
push
xor
or
ljmp
xor
jb
xchg
add
subb
xlat
testb
sub
add
incl
push
jo
in
adc
orl
aad
js
insl
or
mov
sub
std
and
ret
inc
sub
dec
imulb
mov
xor
jecxz
sub
pop
cld
lret
orb
or
mov
cmp
pop
jg
lcall
f2xm1
push
add
pop
js
sahf
jo
adcb
fwait
loopne
inc
jle
cli
lcall
jmp
in
xchg
sti
mov
clc
aam
std
mov
mov
sub
push
cmp
lret
cmp
outsl
add
pop
out
cbtw
bound
std
add
incl
jns
jo
adc
daa
push
adc
add
adc
flds
pop
movl
call
jne
xchg
repz
aam
dec
fxch
icebp
add
mov
mov
jns
mov
mov
and
xchg
popf
push
test
jbe
mov
movsb
xchg
call
insb
xchg
xchg
iret
movsb
aas
jmp
cs
lcall
add
mov
insl
or
pop
sbb
dec
mov
xor
and
or
fsubrl
clc
lcall
cvtdq2ps
jne
cwtl
xchg
sub
nop
aam
dec
in
xor
inc
xchg
clc
int
inc
dec
push
popa
add
jo
pop
call
insl
xor
int
rorl
push
push
fs
leave
ret
mov
jecxz
ljmp
mov
push
lret
mov
inc
in
lods
jb
cwtl
lock
dec
push
sbb
inc
cmp
push
jb
in
mov
xchg
pop
ljmp
inc
fmuls
and
stos
mov
ss
xor
push
clc
cmp
loope
inc
clc
mov
inc
inc
fisttpl
dec
inc
push
jmp
jmp
repnz
fsubrs
jl
sar
and
sti
pop
or
les
pop
das
and
dec
lret
or
jo
ret
rolb
sbb
xor
icebp
jle
in
pop
cmp
push
nop
jne
ret
dec
xchg
aad
push
lahf
mov
mov
popf
daa
push
sbb
ljmp
inc
jbe
fisubrl
aam
push
in
insl
xor
push
fdivrs
addr16
bound
lret
sub
aam
scas
test
xchg
popa
lret
push
and
mov
das
sahf
push
mov
movsl
decl
fcompl
repnz
push
movsl
movsb
pop
imul
mov
add
cli
jmp
cmpsb
push
arpl
or
inc
mov
dec
xchg
push
push
movsl
std
sti
lods
xchg
push
outsb
push
popf
out
popf
xor
iret
jl
shll
pop
push
clc
mov
out
mov
lods
inc
xor
movsl
pop
test
pop
ret
aaa
cmc
pushl
insb
lret
cs
push
int
push
xorb
loope
xor
sbb
lea
lret
cmp
xor
xchg
in
sbb
sbb
mov
data16
push
sbb
mov
mov
mov
aam
lcall
xor
lret
stos
mov
push
ror
movsb
fs
cmp
adc
push
enter
sbb
movb
push
mov
adc
scas
adc
clc
decl
push
cmp
iret
jb
in
inc
jnp
mov
cmp
fcoml
aad
lock
scas
cs
cmp
xor
andb
xlat
shlb
data16
push
lar
push
imul
inc
int3
inc
insl
jb
insl
aas
fwait
pop
push
not
fcmovu
cmp
or
fisttpll
lock
decl
pop
les
out
jbe
inc
xchg
daa
mov
in
push
mov
std
call
dec
add
lcall
sub
cmpsl
andb
sbb
pop
dec
cld
pop
and
inc
fidivl
ljmp
loop
push
and
test
pop
fisttpll
test
cmc
cmp
mov
sbb
inc
sahf
sar
mov
outsl
jg
outsb
cmpsl
mov
stc
je
call
js
rol
xorb
push
call
push
repnz
ss
ss
js
movsb
inc
fucomp
lods
sahf
pusha
test
sbb
out
loopne
es
sub
aaa
call
mov
loope
push
dec
adc
push
cmp
push
add
adc
jb
xchg
mov
subl
test
add
out
dec
js
es
xor
sub
mov
ret
js
jno
add
xor
push
jb
jg
test
mov
push
test
lcall
push
loope
adc
cmp
daa
call
xadd
inc
ja
push
dec
add
cmp
mov
data16
push
cmp
dec
mov
cmp
adc
test
ljmp
mov
xchg
outsb
push
lds
mov
cli
adc
movsb
xor
pop
bound
outsl
dec
jge
push
xchg
xor
loopne
shll
mov
test
decb
cmp
lret
inc
sarb
push
int3
lcall
mov
jne
fs
lea
insl
je
jmp
andl
inc
sbb
pop
stos
jle
add
std
adc
lock
jmp
jg
pop
out
xchg
lahf
xchg
dec
fadds
lods
call
and
clc
call
mov
pop
loop
outsb
pop
lahf
imulb
adc
push
mov
add
shll
imul
dec
jl
mov
add
pushl
xor
sbb
out
loopne
mov
mov
lcall
add
jge
lods
jg
adc
mov
fs
dec
mov
sbb
pop
adc
cmp
addr16
mov
add
hlt
jno
xor
cmpsb
ljmp
std
cli
or
insb
adc
andl
push
fwait
inc
ss
push
repz
inc
cli
loopne
sbb
cmpsl
scas
std
jg
jns
pop
cld
cmp
imul
and
pop
out
dec
xchg
sbb
pop
mov
ret
je
pop
inc
xor
pushf
dec
add
mov
loop
imul
sub
xor
fdivs
aas
pushf
repnz
sar
js
ds
mov
mov
sbb
add
cmpsb
test
in
loop
jp
xchg
push
add
dec
cmp
or
xchg
jp
cmpsl
pop
jo
imul
hlt
xchg
icebp
xor
je
das
in
in
clc
ret
push
mov
in
stos
inc
jns
lahf
cli
jo
pop
test
dec
jae
mov
fsubrl
inc
dec
mov
push
ficoms
pop
cmp
cmpsb
add
sar
add
decl
adc
cmc
xor
aam
adc
jne
pop
movl
add
shlb
inc
and
xchg
sbb
neg
call
aas
jmp
hlt
pusha
xor
xchg
lods
cmp
sub
pop
mov
fcoms
cli
jmp
cltd
push
test
iret
mov
xor
pop
inc
push
movsb
lret
sar
call
addb
push
addl
dec
aaa
dec
push
add
xor
icebp
xchg
lcall
add
subb
aaa
push
dec
lock
fdivrl
mov
cmp
dec
fdiv
add
ljmp
fdiv
std
jle
jae
mov
fcoms
ret
adc
pop
dec
xlat
inc
sub
add
dec
mov
imul
mov
fs
push
enter
dec
dec
loop
cmp
andb
pushl
pop
std
or
mov
popf
imul
das
add
fwait
mov
das
rorb
dec
ret
push
add
lods
movsb
pushf
xchg
call
add
pop
add
sub
cld
inc
push
int
sbb
cmpsl
sbb
or
push
cld
push
fsub
pop
mov
insl
xor
xor
dec
pop
push
outsl
das
cmpsb
lret
inc
xchg
inc
dec
je
lcall
jnp
push
fldt
cmpsl
jge
and
fcomp
sbb
addb
incl
jno
mov
cmp
in
add
mov
pop
scas
lea
jmp
xchg
sarl
mov
add
push
add
fld
lock
xor
dec
push
mov
fadd
or
jb
mov
xchg
jg
lock
hlt
rolb
push
cmp
call
push
add
shlb
pushf
jge
push
insb
rorb
inc
mov
int
push
rolb
lods
int
and
loop
fcos
mov
popa
push
adc
pop
and
mov
pop
pop
push
sbb
sbb
shll
jmp
mov
fisubrs
adc
in
xor
dec
or
jmp
stos
dec
xor
inc
jne
or
cmp
notb
lcall
lock
push
xor
pop
popf
fsts
push
or
popf
jmp
test
popl
mov
stos
adc
imul
jns
pop
and
jo
xor
fwait
cmc
fisubl
ret
dec
fidivl
arpl
shr
push
or
sti
lcall
or
inc
cmc
jle
or
push
xor
jl
sub
mov
cmp
ror
ja
dec
sub
dec
fcos
pushl
push
mov
xchg
adc
dec
ficompl
js
sub
add
scas
sbb
ss
imul
incl
dec
leave
mov
push
inc
add
loope
leave
sbbl
inc
push
sub
pop
push
notb
ret
stos
sbb
outsb
rcrb
xor
mov
jbe
fbld
xlat
cwtl
mov
mov
adc
lcall
rcrb
fdivl
pop
adc
xchg
mov
add
test
cltd
or
stos
mov
mov
pop
fs
cld
mov
inc
mov
inc
iret
out
call
sub
xor
add
inc
pop
lock
insl
fwait
outsb
inc
jns
testb
cli
das
aas
push
hlt
daa
hlt
xchg
popf
test
mov
inc
push
js
push
dec
stos
aas
sbbb
adc
lret
movsb
add
iret
aam
pushl
hlt
mov
subl
cli
xor
or
jmp
jns
scas
xchg
lock
ret
and
push
arpl
mulb
stc
jae
mov
mov
mov
mov
scas
clc
inc
adc
mov
jbe
shrb
lock
push
cld
add
adc
inc
cmp
sahf
pop
enter
ds
rorl
fdivp
bound
in
pop
icebp
dec
inc
in
les
mov
test
mov
filds
or
or
sbb
or
stos
fbld
movsb
dec
push
adc
test
adc
sar
popa
jae
or
nop
int3
lret
lods
push
mov
dec
cmp
and
rolb
fisubrs
imul
push
inc
mov
cmc
pop
dec
into
sbb
lret
in
push
lock
rorl
mov
dec
shrb
orb
add
and
pop
loop
or
mov
fwait
jne
loop
scas
decl
pop
pop
mov
leave
repnz
std
inc
int
iret
mov
cmpb
cwtl
fimuls
ja
push
pop
pop
add
xor
lock
jmp
in
cmp
xor
adc
xchg
and
push
arpl
out
clc
call
and
mov
xchg
add
dec
js
adc
add
adc
and
jle
outsb
push
adc
ret
dec
push
push
or
xchg
je
cmp
xor
decl
mov
dec
jb
mov
fwait
pop
dec
pushf
adc
out
stos
nop
fbld
pushf
in
push
shrb
or
or
pop
fistl
icebp
andb
cs
sar
jmp
and
push
insb
scas
sbbl
jne,pt
fnstsw
incl
push
orb
push
loop
lds
push
inc
outsl
sbb
rol
call
add
cvtpi2ps
cld
pop
dec
mov
and
sub
cmp
jmp
sub
push
cmc
add
les
mov
add
in
lods
or
and
imul
adc
xor
mov
lods
scas
mov
cmp
mov
sbb
jle
adc
ljmp
xor
cli
add
adc
incl
add
dec
or
jo
dec
inc
push
jg
cmc
shll
add
and
xchg
pop
jmp
aad
fstl
bsr
scas
clc
call
into
adc
or
sarb
mov
loope
pop
cld
aaa
cld
add
push
cmp
sbb
dec
xchg
dec
push
inc
fdivrs
ret
pop
gs
call
pusha
adc
mov
sbb
jno
dec
jmp
subb
movsb
cmp
cli
out
add
adc
cmp
mov
cmc
mov
adc
cld
fisubs
pushl
adc
mov
fwait
xchg
mov
lock
xchg
sbb
mov
pushl
rolb
data16
insl
add
in
in
gs
cld
fiaddl
adc
lock
bound
push
pop
xor
pop
ret
cmp
cmp
mov
jl
jnp
xorl
clc
fwait
mov
addb
ljmp
testb
xchg
outsb
call
ffree
loopne
fisttpll
scas
adc
add
xchg
pop
popa
cmp
add
or
enter
aaa
in
stc
leave
add
jecxz
ljmp
les
push
imul
cmpsl
dec
cmpsb
aaa
inc
push
mov
sarb
and
aaa
inc
pop
inc
stc
sbb
cld
decl
xor
sahf
repnz
leave
rcrl
stos
cwtl
pop
std
add
call
std
inc
repnz
jb
inc
inc
adc
sub
iret
sub
xor
vminpd
call
stos
in
pop
mov
xchg
insl
inc
jb
sub
mov
insb
mov
ret
jnp
adc
and
xor
incl
add
ret
push
mov
das
adc
aaa
punpcklbw
mov
scas
push
sbbl
loope
add
cld
scas
push
or
iret
sub
shrl
add
sbb
andb
mov
aad
andb
mov
call
ja
fisubl
push
dec
test
pop
popf
insl
lcall
push
or
or
call
pop
das
dec
pop
xor
xchg
insb
ljmp
xor
or
dec
pop
int
je
mov
std
popf
adcb
cmp
or
sub
sahf
inc
inc
add
xor
jmp
int
or
push
rcl
adc
movntps
add
leave
cwtl
repnz
call
loopne
orb
stc
test
pop
sbb
dec
xchg
add
mov
lcall
dec
cmpb
aaa
fmuls
or
adc
or
cmp
imul
scas
js
test
js
outsb
ljmp
and
xchg
or
xchg
jg
lcall
sbb
das
add
or
shll
xor
xor
inc
mov
fwait
pop
hlt
shlb
loopne
sbb
or
sbb
dec
xor
add
push
dec
dec
cmp
mov
mov
popf
imul
dec
inc
cmp
loopne
dec
add
push
adc
dec
cmc
daa
xor
insb
movsl
xchg
mov
sbb
and
ffree
fisubs
jae
lret
jge
adc
xor
int
fbstp
rolb
je
xchg
pop
pop
push
dec
icebp
ret
inc
pop
loopne
mov
mov
pop
bound
lret
das
jo
in
add
in
loope
cmp
and
pushl
movsl
rcr
out
mov
mov
insb
inc
or
shlb
ret
inc
push
fsubs
add
sti
testl
insb
imul
or
cld
jmp
sbb
adc
mov
ds
dec
lock
leave
dec
xor
pop
imul
mov
cld
loop
inc
dec
add
incl
pop
or
movsb
jb
imul
ljmp
add
xor
test
ss
pop
imulb
inc
fcoml
shrb
push
push
mov
cmpb
xor
aas
jecxz
jne
in
inc
mov
leave
arpl
or
clc
push
jo
sub
xor
or
ret
xor
decl
jecxz
xor
adc
sbb
sub
repz
fistps
push
sub
adc
hlt
and
call
dec
test
loope
movsb
xor
dec
xchg
pusha
push
jo
clc
jg
jle
movsb
dec
aaa
push
iret
cs
insl
imul
xlat
xchg
pop
xchg
inc
frstor
faddp
push
shlb
jae
push
push
dec
inc
dec
pushl
push
sahf
and
jmp
scas
imul
sub
call
repnz
or
sub
xor
xor
adc
sub
popl
outsl
dec
ss
cmp
dec
repz
or
mov
data16
mov
xor
xchg
inc
leave
or
incl
or
lods
in
out
call
hlt
lea
fwait
dec
adc
pop
pop
in
aas
add
xor
addr16
push
ret
push
orl
cmp
push
sbb
or
jg
aad
repz
mov
push
data16
dec
loopne
and
movsb
cmp
bound
filds
inc
ret
gs
pop
push
mov
mov
dec
add
pushl
xchg
mov
stos
xchg
test
inc
push
js
fcompl
cmp
push
jae
mov
cmp
jmp
dec
mov
mov
adc
or
mov
mov
jb
xchg
xor
cmp
shr
mov
xchg
loope
std
leave
and
ja
ja
ljmp
lahf
xchg
in
xchg
fs
add
minps
pop
xchg
pop
faddp
out
and
adcl
xchg
lock
std
mov
inc
push
inc
or
je
out
sub
and
dec
outsb
aad
jns
push
inc
jne
xchg
mov
js
imul
jmp
jne
mov
jl
pusha
cld
in
hlt
fcoms
jecxz
and
or
fidivs
push
sub
cmpsb
xlat
jo
push
shll
aaa
dec
add
xor
cmp
insb
push
mov
stos
push
sbb
lcall
mov
mov
xor
subl
sub
scas
push
jo
push
xchg
jge
xor
xor
rcl
pop
rcll
test
mov
testb
dec
roll
pop
mov
decl
or
aas
lcall
pop
lods
fdivs
add
xchg
clc
clc
mov
movsl
adc
cmp
mov
fdivp
inc
dec
lahf
mov
cmp
ljmp
add
dec
add
push
mov
inc
fwait
outsb
jl
mov
ljmp
sub
and
and
sarb
call
stos
sbb
mov
jp
dec
iret
std
pop
imul
aaa
out
xor
lods
jg
stos
xchg
fwait
into
hlt
imul
xchg
push
ja
outsl
mov
dec
jmp
xor
inc
xor
dec
mov
cmp
push
inc
call
aam
cmp
clc
xchg
ljmp
mov
inc
mov
and
sti
push
sub
stos
adc
push
jb
js
xlat
ret
dec
push
jle
mov
and
jmp
mov
dec
rcr
pop
fstl
ljmp
hlt
es
aas
int
insl
xchg
fnstenv
pop
aad
dec
cmp
fmuls
mov
cli
ds
in
mov
ret
mov
mov
insl
pop
add
cmp
adc
adc
std
jmp
loopne
dec
mov
stc
push
jo
push
dec
outsl
add
fsubrs
mov
movsb
jmp
int
popf
sar
mov
cltd
adc
mov
xorl
aam
cmpsb
int3
push
dec
arpl
cld
fmul
push
addr16
je
push
outsb
jb
cmp
push
push
dec
inc
idiv
jg
icebp
adc
lods
rolb
dec
lahf
or
je
loope
sbb
clc
and
ret
push
ja
lret
imul
jl
sbb
imul
ljmp
add
inc
test
ss
es
pop
xchg
lahf
fs
cltd
jae
inc
pop
xor
xchg
popf
pop
adc
icebp
xchg
mov
jns
dec
stc
mov
les
ljmp
push
adc
push
rol
cmpsb
push
and
jo
or
movsb
jns
jnp
in
idiv
mov
orb
out
and
aad
lea
pop
xchg
jo
add
add
jmp
or
push
pop
scas
dec
hlt
cmp
sub
icebp
sahf
or
mov
push
push
xor
jnp
cmc
les
popf
jae
pop
mov
or
pop
test
imul
insb
mov
popa
std
add
inc
sbb
dec
repnz
add
push
xchg
dec
push
mov
add
cmp
inc
sbb
dec
add
dec
mov
inc
adc
dec
cld
xor
cmpsb
test
insb
ds
jmp
dec
jmp
push
mov
jno
xchg
mov
call
out
dec
cld
clc
pop
call
inc
jb
cmp
mov
cmp
mov
lret
cmpl
in
mov
or
fists
cmpl
and
out
xchg
mov
idiv
shl
aas
and
jbe
push
jb
aaa
pop
clc
inc
mov
push
dec
lcall
xorb
and
mov
lahf
pop
pushf
cmp
dec
test
jp
or
in
dec
inc
push
js
outsb
sahf
sti
jmp
lock
pushl
push
test
sbb
shrb
cltd
xlat
call
pop
lahf
nop
dec
scas
js
sbb
dec
inc
inc
pop
ss
xor
xchg
cmp
in
dec
out
icebp
push
push
mov
das
js
cld
orb
loopne
xor
dec
push
outsb
jo
pusha
scas
arpl
shrl
outsl
dec
ss
or
push
sahf
decl
push
dec
enter
cmpsb
push
mov
loop
sbb
mov
and
mov
cmp
inc
mov
mov
bound
out
pop
add
push
xor
or
lock
mov
lock
jmp
dec
sbb
dec
mov
scas
sub
cltd
stos
jle
scas
movsl
inc
mov
sbb
adc
inc
push
mov
sub
lods
shll
xchg
test
stos
xchg
ret
std
mov
pushf
ss
pop
cmc
fbstp
ds
arpl
fcoms
sbb
nop
add
or
push
mov
xor
test
inc
inc
into
xchg
inc
jo
arpl
dec
fwait
mov
nop
pop
jecxz
jg
adc
sub
das
xchg
cld
test
sub
push
lahf
pop
dec
sbb
inc
push
adc
inc
loopne
movsb
repnz
js
inc
push
insb
inc
push
xor
lcall
repz
out
xchg
xor
imul
push
loop
sbb
icebp
mov
pop
cld
loopne
in
mov
adc
sbb
roll
xor
aas
and
add
push
adc
lcall
xchg
push
adc
jge
dec
add
inc
sahf
xchg
sete
mov
xor
push
jns
pop
lock
insb
adc
jne
or
decl
aad
lock
insl
jne
imul
outsb
out
clc
mov
neg
xchg
push
push
adcb
mov
xchg
scas
cmp
push
push
es
ss
push
fcomps
lea
lret
add
jns
dec
inc
xchg
outsl
xchg
ljmp
jge
push
shl
mov
stc
popa
dec
dec
inc
pusha
jno
and
pop
jmp
mov
popa
xor
adc
push
pop
imul
pop
push
dec
pop
gs
xchg
ja
lock
js
push
lods
push
fs
push
mov
sbb
aas
mov
lods
pop
scas
jns
push
lcall
addb
hlt
and
pop
jae
icebp
mov
inc
sbb
jg
ret
xchg
pop
or
pop
xor
jl
adc
push
add
cmp
or
lods
stos
incb
fbstp
loopne
xchg
mov
xor
add
aad
clc
lcall
incl
mov
inc
fcmovnbe
sub
mov
mov
faddl
mov
incl
push
lcall
dec
pop
in
sarb
dec
cmpl
gs
add
fsubrl
add
aaa
aaa
ret
ret
push
bound
mov
sub
jg
xchg
sahf
sbb
sbb
fsub
gs
adc
jbe
icebp
out
cmp
movsl
cli
aam
imul
push
cli
dec
dec
push
jp
fcmovnbe
bound
nop
aaa
sbb
xor
decl
push
shr
sub
jp
cwtl
cmp
xchg
dec
sub
jp
test
xchg
lcall
push
cs
xchg
inc
push
dec
and
data16
jg
push
jno
xor
out
jecxz
push
dec
loope
jnp
fdivr
xchg
mov
clc
repz
push
fcoms
imul
mov
push
rorb
pop
mov
lcall
push
xchg
push
adc
adc
es
movl
pop
fdivrl
add
ds
into
mov
in
mulb
jns
decl
test
push
xchg
sti
ds
js
inc
adc
pushf
sub
sub
stc
sbb
jae
jmp
jo
jo
mov
push
cmp
sbb
sbb
push
inc
imul
stos
orl
movb
jo
ljmp
call
test
jmp
and
insl
mov
scas
es
aas
adc
pop
shll
push
add
add
and
ljmp
pop
aaa
call
int
xor
sahf
das
ret
xorl
push
jne
inc
aaa
pop
inc
cld
aam
adc
dec
dec
ror
sub
mov
adc
arpl
pushl
loope
pop
sarb
scas
fiadds
jmp
pop
xchg
xchg
pop
mov
mov
push
mov
and
adc
repz
push
add
sub
jae
inc
xor
ret
lcall
and
xchg
mov
pushl
sti
dec
and
adc
jmp
pop
add
cmp
add
dec
jl
incl
xchg
push
sub
pusha
into
inc
stc
xor
lahf
mov
cmpsb
pop
dec
cli
push
xchg
push
decl
mov
adc
mov
test
ja
sub
sub
cmp
enter
loopne
cmp
clc
stc
cs
or
adc
jg
adc
loope
inc
adc
lea
shlb
mov
dec
scas
add
inc
int
call
add
and
gs
and
push
mov
sahf
scas
sub
cltd
add
lock
sbb
dec
inc
mov
pop
cmp
stos
in
das
inc
and
push
int3
mov
inc
outsb
and
or
rol
stc
mov
ret
into
add
push
inc
mov
add
rcrl
or
cltd
xor
xchg
ljmp
push
dec
add
jno
sbb
mov
pop
cmp
in
mov
mov
jge
out
inc
cli
push
adc
js
incl
out
nop
subl
js
push
inc
fiadds
or
rcr
cmp
lcall
aas
adc
clc
xchg
add
adc
les
xor
xor
in
mov
pushl
mul
rorl
sbb
ret
inc
ret
fisubrl
stos
incl
fs
ds
pop
xchg
loopne
les
filds
int
add
cmp
aad
pop
ss
or
loopne
xchg
adc
sub
mov
js
mov
jmp
xchg
inc
sub
leave
iret
or
adc
dec
test
test
mov
xchg
sbb
aaa
xchg
aad
pusha
jp
jae
repnz
add
mov
lcall
or
add
ss
gs
jg
push
pop
addl
das
add
lret
insb
mov
aam
inc
adc
notb
lret
cld
outsl
cli
jg
test
scas
and
pop
loope
clc
dec
ret
jnp
ret
cmpsb
imul
pop
adc
xchg
ret
cmp
fs
xor
je
add
adc
add
mov
gs
lock
xor
loope
rorb
dec
mov
dec
sub
lcall
pop
ljmp
popl
or
loopne
pop
test
push
cmp
adc
incb
rclb
gs
jne
aam
jno
dec
enter
push
add
ret
lcall
lret
cmp
adc
scas
fwait
xchg
inc
pmaxub
mov
inc
mov
pop
incl
pop
sbb
push
test
mov
shl
or
xorb
sub
xor
or
subb
call
sub
jb
pop
add
and
adc
adc
jg
mov
in
je
inc
jno
incl
jl
adc
push
dec
pop
icebp
lcall
or
add
out
subl
mov
fbstp
rcr
xorl
cmpsl
lock
mov
add
int3
push
pop
lcall
and
xlat
ss
and
cmpsb
addr16
push
stos
inc
mov
sbb
call
or
clc
xchg
jmp
mov
pop
in
fadd
into
add
aam
and
pop
sbb
cld
call
mov
mov
mov
push
add
push
cmpsb
xchg
lcall
cmp
into
out
inc
pop
movsb
push
push
mov
jbe
pusha
aam
imul
pop
fs
fildll
mov
scas
adc
or
push
mov
data16
xchg
and
add
jns
ret
fucomip
mov
cmp
popf
decl
lcall
jg
call
out
adc
popf
stos
movsb
test
sbb
notl
ret
call
pop
in
fisubrl
or
mov
cmpsb
sti
and
sti
test
inc
push
pop
inc
or
incl
adc
pop
mov
pop
adcl
lds
jg
inc
mov
xor
mov
clc
dec
fdivrs
add
test
roll
xor
fdivr
cmp
lret
xor
jmp
clc
out
mov
adc
loopne
in
ss
xor
or
in
shrl
pushf
popa
sbb
les
adc
mov
loopne
xchg
pushl
pushf
les
jg
dec
cld
mov
ja
mov
push
lret
jl
xor
jno
jb
es
or
mov
popa
add
mov
lods
mov
push
jbe
pop
push
adc
add
push
sub
pop
add
add
or
lcall
lock
test
ret
push
lds
loopne
mov
adc
xchg
leave
imul
pop
dec
cld
inc
push
mov
push
mov
in
idivl
cmp
or
lcall
add
bound
push
xadd
cltd
dec
mov
pop
ffreep
inc
loope
bound
lods
in
test
adcb
push
lcall
pop
stc
inc
cmp
xchg
cmp
sbbb
dec
pop
add
push
xchg
ljmp
mov
in
mov
sub
int
pop
mov
fsubrl
cmp
pop
dec
mov
shrb
inc
pop
lock
aas
mov
mov
mov
scas
mov
ljmp
out
mov
clc
js
push
jg
mov
inc
pop
or
lea
push
add
lcall
adc
fyl2xp1
repz
xchg
jmp
pop
mov
scas
lds
xor
lcall
jmp
inc
test
shrb
dec
addr16
jmp
mov
inc
sbb
repz
ret
aaa
popf
sbb
lods
mov
int
mov
push
and
push
stos
in
imul
sarb
xchg
je
push
dec
inc
jmp
cwtl
jle
ja
dec
push
in
lahf
mov
mov
icebp
and
jno
and
inc
and
cmp
movl
mov
inc
push
mov
sub
insb
push
inc
jb
mov
sbb
es
das
xor
outsb
inc
push
rorl
cld
jmp
int3
lods
adc
inc
pop
inc
jns
popa
or
inc
pop
add
pop
mov
mov
das
mov
jge
cld
mov
addr16
push
jne
aas
xchg
or
out
push
iret
or
scas
pop
cmp
insb
xlat
sub
insl
mov
cli
gs
lea
mov
mov
ja
add
lahf
mov
movsb
test
xchg
sub
sub
mov
add
incl
mov
inc
sub
inc
daa
xchg
xchg
and
inc
adc
pop
mov
mov
sbb
std
hlt
fcoml
pop
pop
inc
in
icebp
dec
add
lret
dec
xor
stos
fwait
inc
int
and
adc
jmp
cmp
pop
mov
test
cmp
pop
pop
cmc
repz
adc
cli
stos
incl
repnz
push
pusha
pop
pop
pop
adcl
and
daa
or
fs
jg
hlt
es
sbb
jne
jmp
pushl
sarl
gs
xchg
cmp
xor
mov
ja
dec
cli
cmp
iret
inc
pop
cmp
inc
rcl
and
xchg
push
push
mov
jecxz
lcall
call
rcrl
sub
movsb
out
addb
push
jo
sub
dec
inc
push
fadd
dec
outsb
cmp
test
jmp
insl
pop
mov
incl
jle
in
into
je
jbe
lahf
push
sbb
out
aas
clc
push
test
inc
fidivrs
push
mov
dec
jne
shll
lcall
outsl
add
in
icebp
mov
mov
dec
adc
push
shl
mov
leave
xor
shll
icebp
gs
leave
mov
imul
lcall
adc
mov
push
lea
dec
cmp
push
push
sbb
insb
push
pusha
jne
jmp
mov
dec
push
sti
adc
dec
sbb
nop
push
out
dec
push
and
mov
cmpsb
repz
dec
cmp
xor
add
ljmp
xor
mov
fildll
mov
mov
cmp
mov
jmp
and
andl
jns
or
pop
inc
sbb
aas
sbb
lcall
das
push
push
dec
mov
movsb
xchg
xor
sbb
pop
xchg
fucomp
out
mov
and
ljmp
push
popa
cwtl
xchg
repnz
mov
sahf
xor
xor
sbb
or
add
incl
mov
fimuls
sbb
mov
push
dec
push
add
mov
inc
aaa
repnz
enter
cld
fsubs
lret
mov
cmpsb
int
mov
cmp
lds
incl
andl
ret
pop
mov
popf
js
sub
sbb
notl
decl
pop
xchg
lret
and
nop
adc
inc
sub
mov
dec
decl
leave
int3
daa
arpl
xor
mov
into
jecxz
cmp
or
loopne
decl
adc
pop
mov
cli
int3
hlt
frstor
push
and
incl
js
push
insb
sub
cwtl
ret
js
ja
sub
xor
push
inc
enter
sbb
decl
sbb
pop
jmp
fwait
or
daa
scas
cmp
cmp
lods
add
aas
push
add
aam
or
cmp
push
bound
sub
or
fimuls
mov
pop
xchg
and
push
add
jge
mov
jl
mov
mov
out
insb
xchg
mov
or
int
notl
loopne
mov
rorl
xchg
mov
push
call
push
jle
arpl
movsb
fsubrl
add
push
sub
js
mov
es
ljmp
cli
mov
xchg
inc
dec
clc
inc
xlat
clc
inc
pusha
scas
adcl
inc
push
cltd
arpl
enter
and
decl
add
mov
adc
test
jl
mov
mov
adc
and
ljmp
cmp
jnp
mov
jo
push
xor
sbbl
sbb
cltd
daa
dec
fscale
inc
incl
adc
and
movsb
or
decb
jge
and
xorl
mov
inc
and
cmc
pop
pop
sti
int3
int3
cmp
sti
std
mov
or
dec
or
sbb
sbb
cmp
fildll
imul
add
cli
add
pop
dec
jmp
adc
shrl
push
cmovp
adcl
or
mov
lds
loopne
dec
mov
jge
jp
jp
mov
inc
lock
push
les
clc
out
and
testl
fsubrs
and
mov
incl
das
lret
xchg
mov
cmp
sbb
add
repz
inc
stos
jne
int
pop
inc
jnp
cmpb
sub
push
mov
fwait
mov
sarb
dec
inc
dec
mov
mov
mov
push
shlb
adc
pushf
je
daa
mov
adc
xchg
enter
pushl
jne
iret
add
pop
out
cs
add
push
jo
adc
xchg
push
roll
cmp
cmc
add
cmp
mov
cmpb
add
pop
aas
ret
and
lock
push
cld
inc
or
dec
or
into
ljmp
out
pop
pop
andb
out
and
xchg
sbb
popa
jo
sbb
push
es
out
inc
or
lds
sbb
adc
and
call
ljmp
cmp
lret
loopne
pusha
dec
cmp
out
cwtl
cmp
mov
ja
pushl
or
or
insl
arpl
dec
movsl
mov
xor
test
call
cmpb
pop
mov
jnp
in
lods
mov
jb
adc
cmp
add
gs
xchg
cld
call
push
pop
mov
out
or
out
and
dec
or
fcomip
pop
sub
jecxz
out
mov
lret
jmp
ss
insb
cmp
fwait
add
bound
add
mov
mov
pusha
jmp
in
roll
ljmp
stos
add
mov
out
add
pop
daa
cmp
loop
push
dec
jne
xor
aam
push
mov
rcr
test
and
add
or
cmp
add
or
es
xchg
test
add
movsb
and
je
jae
ud0
ljmp
rcll
imul
unpckhps
mov
je
adc
lds
cs
jmp
jns
sub
in
iret
lcall
pop
test
lret
xchg
iret
add
push
cmpsl
outsb
sub
in
xchg
jns
add
ret
roll
jns
notb
or
ss
jmp
add
cmp
jns
enter
jle
sti
cmp
hlt
mov
adc
push
lret
into
jo
cmp
insl
push
xchg
sub
inc
movsl
cmp
push
mov
in
ss
mov
and
mov
outsl
filds
fwait
mov
ljmp
inc
and
or
inc
add
and
loop
orl
inc
xchg
out
mov
incl
inc
test
fdivr
bound
push
sub
push
pushf
mov
ljmp
inc
jbe
stos
inc
cltd
subl
cs
out
push
fwait
pop
shll
fwait
sbb
call
mov
or
mov
push
dec
add
and
mov
xor
xor
xchg
or
pop
cmpl
fadds
jp
dec
in
aad
iret
stc
test
adc
outsb
clc
inc
mov
jne
pop
loopne
scas
xchg
insb
cmp
xor
pop
hlt
and
jg
leave
cmp
mov
hlt
mov
loop
jo
inc
fsubs
aas
daa
ret
aad
aaa
jl
inc
and
jge
sub
in
insb
ja
xchg
lcall
sbb
cld
pop
repz
movsl
test
icebp
mov
mov
jl
daa
mov
mov
adc
lcall
stc
or
add
mov
mov
movsl
imul
xor
cld
ljmp
or
ret
sbbb
rcr
inc
cmp
out
dec
shrb
cmp
cmp
pop
std
icebp
insb
outsl
fiaddl
or
int3
mov
mov
in
sbb
cmpsl
and
dec
arpl
fmull
inc
mov
lcall
outsb
ret
add
or
xor
rol
jge
lret
in
outsl
roll
adc
xor
imul
push
lret
shlb
movsb
mov
inc
mov
jbe
jb
and
in
mov
mov
inc
add
xor
and
dec
cmp
and
inc
jo
ret
ds
mov
jl
lahf
jne
sbb
xchg
dec
lahf
mov
and
mov
pushl
fisubrl
loop
pop
cmp
xchg
int
add
loop
loopne
xor
xor
call
push
add
nop
add
lcall
xor
outsb
and
inc
mov
lcall
mov
mov
stc
pusha
push
call
xchg
sarl
insb
ss
cld
mov
cli
jae
add
push
cltd
pusha
pop
push
dec
sbb
out
add
jge
ja
cmp
jl
ja
adc
push
imul
and
jg
add
movsb
bnd
jmp
out
xchg
add
xchg
dec
cmp
fcomip
andb
pop
movsb
outsl
stos
xchg
clc
jbe
push
sub
mov
mov
daa
lcall
scas
inc
or
push
mov
add
sahf
adc
rolb
sbb
pop
loopne
cmpsl
dec
and
mov
xchg
jle
pop
test
sub
mov
jecxz
lcall
rep
aas
jo
push
test
cld
sbb
out
push
cmp
add
das
pusha
pop
sub
dec
jae
cmp
pop
jbe
ret
mov
mov
mov
clc
mov
cmc
daa
cmp
aaa
aas
and
push
adc
inc
inc
mov
jg
push
add
and
fcmovu
sub
sub
loope
sbb
popa
pushf
mov
lods
cmp
aas
popa
sbb
xor
mov
add
sbbl
js
mov
adc
andb
xchg
mov
dec
fidivrl
mov
outsb
call
int3
mov
inc
cmp
call
adc
in
inc
pop
or
in
xchg
cltd
add
inc
mov
cmp
lret
sbb
push
shll
jl
in
dec
dec
sbbb
popa
jno
fwait
dec
loopne
mov
pop
pop
cwtl
or
xchg
scas
loope
and
ljmp
mov
in
add
out
dec
sti
stos
mov
adc
inc
pushl
in
push
xor
ret
aam
ss
or
mov
arpl
rcrl
add
jmp
xorl
add
mov
call
pusha
bound
rcrb
sbb
int3
adc
mov
mov
fdivrs
cmp
repnz
cltd
add
rcrb
jae
div
push
xchg
adc
decl
decl
dec
mov
stos
outsb
pop
aaa
outsb
adc
outsl
sbbb
mov
addl
add
ror
mov
or
dec
clc
sbb
or
psubsb
dec
les
leave
out
imul
add
cwtl
cmpsb
test
movsl
xchg
pop
jge
lea
xor
std
enter
jns
aas
xlat
pop
sti
dec
xchg
int3
jns
popf
xlat
aas
mov
lcall
clc
xor
push
push
inc
nop
outsl
ljmp
xor
mov
add
sub
outsb
cld
push
jl
fistpll
mov
mov
mov
inc
pop
jecxz
into
sub
icebp
jb
xchg
pop
sub
js
js
pop
call
pop
dec
js
outsl
incl
adc
push
cmc
lret
jnp
cld
push
jbe
test
js
idivl
pop
fcoms
ss
sub
mov
inc
dec
xor
dec
or
imul
test
cmp
arpl
jg
aam
cmpsl
or
inc
mov
test
mov
add
push
adc
push
jmp
push
int
call
cs
in
adcl
inc
add
mov
bound
push
enter
orb
in
push
incl
jge
xor
jb
push
lcall
addr16
decl
jmp
push
xlat
mov
push
inc
ja
inc
jle
ret
loopne
shlb
rolb
adc
jg
sbb
mov
jno
jo
mov
call
push
pop
in
pop
mov
out
nop
xchg
inc
jmp
stos
iret
aam
mov
test
pop
mov
mov
mov
dec
stos
aas
fs
jge
les
push
pop
push
dec
xchg
repnz
mov
fdivrl
push
add
cmp
jg
lahf
or
in
xor
dec
idiv
incl
jecxz
sbb
lcall
outsb
repz
mov
fsubrl
mov
push
inc
dec
mov
js
incl
sub
pop
mov
inc
mov
cmc
or
lods
cld
in
test
rcrl
ja
dec
ficoms
insl
jle
jno
dec
je
loopne
lock
inc
loope
dec
es
incl
or
sarl
shll
lcall
push
pop
sub
add
bound
add
hlt
push
push
dec
inc
add
push
xlat
jle
loope
mov
inc
add
xor
jmp
or
jle
mov
mov
jecxz
loop
lret
add
popa
test
test
mov
gs
fisubrs
sahf
shl
sbb
inc
inc
cmp
hlt
dec
sub
push
dec
pop
incl
pop
mov
shrl
cmp
sub
mov
cwtl
int3
mov
inc
xor
decl
loope
mov
push
bound
aas
bound
pop
push
jge
int3
inc
stos
call
push
gs
mov
scas
mov
adc
das
xor
js
lea
push
mov
mov
loope
jmp
push
jmp
jmp
xor
jl
rcrb
inc
sub
addr16
std
pop
fldl
cmp
xchg
outsl
stos
jnp
xchg
loopne
pop
pop
mov
inc
mov
mov
sbb
pop
outsb
push
cs
decl
jle
test
add
jbe
ss
mov
cmp
inc
pushl
bound
test
pop
mov
cltd
pop
xor
out
cmpsb
xor
jns
dec
ss
cltd
jb
dec
dec
aaa
add
rol
andb
push
xchg
imul
dec
mov
das
mov
iret
sbb
es
rcr
jl
dec
xor
adc
clc
jmp
cmp
sbb
cli
call
inc
pop
orl
dec
add
ja
and
pop
add
cmpb
adc
push
sub
cmp
mov
je
sbb
sub
xorb
div
nop
mov
lea
fwait
and
stos
jb
loopne,pt
push
bound
lods
out
mov
mov
mov
pushl
adc
mov
inc
ror
inc
sub
mov
sbb
cli
movl
dec
xor
push
stc
clc
inc
lock
js
jle
adc
dec
dec
dec
push
jmp
sbb
data16
or
xchg
pop
fwait
repz
inc
cmpsl
and
jmp
int3
cmpsl
mov
xchg
fdivrs
in
ljmp
cwtl
mov
loopne
push
dec
add
test
jo
pop
ficoml
sbb
nop
jg
xchg
dec
in
notl
leave
loop
add
lahf
jb
loop
ret
sbb
xchg
xor
stos
add
pop
xor
push
addr16
jb
push
dec
push
dec
out
roll
leave
fwait
mov
dec
push
push
in
leave
cmp
lcall
jge
cmpb
inc
or
mov
jp
fdivl
adc
das
clc
pushl
mov
lcall
push
adc
jne
addl
rorl
mov
mov
jne
rcl
dec
mov
lahf
popf
pop
shlb
and
mov
mov
and
adc
or
add
pop
loop
js
fcmovnu
xor
test
clc
cmp
notb
lock
adc
mov
jecxz
pop
out
cli
sub
adc
mov
ljmp
flds
dec
fiaddl
or
adc
cmp
scas
nop
les
popf
aad
mov
push
pop
das
ffreep
int
ss
cmp
sub
rdmsr
dec
loopne
imul
inc
ss
int
shll
ret
mov
push
mov
icebp
pop
pusha
sti
adc
incl
mov
in
inc
inc
les
cld
fsubr
adcl
fmull
dec
cld
sbb
adc
inc
jg
jecxz
inc
push
mov
enter
push
sbb
lcall
test
and
jo
add
in
xorb
and
mov
sub
incb
idiv
xchg
cs
sti
clc
adc
mov
mov
test
mov
cmp
xor
jmp
leave
pop
mov
leave
add
push
pop
call
test
xor
fsubrs
cs
sub
cltd
lcall
loopne
pop
clc
pop
scas
jmp
or
outsb
ja
fiadds
nop
mov
pusha
aam
push
jb
mov
push
pop
pop
aas
pop
jmp
jp
fcomip
cmp
or
pop
push
imul
rorl
cmp
outsb
call
push
sub
dec
mov
xchg
add
loopne
in
cmpsl
ljmp
xor
inc
ret
mov
out
and
mov
ss
jmp
add
dec
inc
nop
ret
nop
repnz
orb
repnz
dec
mov
decl
in
adc
xchg
jmp
loope
dec
andb
inc
jge
sub
mov
jne
bound
mov
jno
xchg
push
shll
insb
xor
call
add
add
adc
push
jle
repz
pop
les
jne
cmp
test
iret
sar
mov
sahf
inc
pop
add
lods
rolb
adc
hlt
mov
jmp
stos
xchg
jl
adc
test
dec
sbb
pushf
mov
pop
mov
ret
mov
dec
test
xor
test
xchg
inc
mov
sub
sbb
decl
ja
pop
adc
add
and
nop
mov
sbb
test
inc
cltd
xor
jns
xchg
in
bound
rolb
enter
pushf
ret
xor
dec
or
dec
push
int3
les
adc
test
loop
mov
jno
cli
mov
dec
mov
mov
jnp
call
imul
jbe
ljmp
and
adc
int
insb
mov
mov
sbb
les
jae
push
pop
decl
sbb
xchg
inc
in
pop
inc
cmp
jmp
daa
lahf
das
lcall
lcall
xchg
out
and
shll
pop
insb
mov
mov
test
aam
nop
fnsave
jne
mov
mov
mov
adc
mov
dec
push
pushf
mov
mov
or
jl
inc
daa
push
inc
or
cmp
pushl
pop
or
or
test
add
cmp
xor
dec
dec
dec
call
movsb
jne
scas
popa
sti
stos
sbbw
outsb
pop
sarb
mov
cmc
insb
push
jge
call
add
into
in
fiadds
frstor
dec
cmc
adc
mov
stos
ljmp
movsb
xor
fsts
rorb
and
add
pusha
lret
adc
dec
pop
fsubs
mov
and
add
incl
adc
xor
pop
adc
pusha
pop
aas
imul
jnp
cmc
jmp
lret
push
cmpl
rorb
and
call
call
ljmp
and
imul
xchg
jge
int3
cld
test
adc
jmp
cmpl
outsb
repz
xchg
sbb
mov
jg
mov
out
mov
es
xchg
adc
cmp
xor
xchg
jno
and
int3
mov
sbb
icebp
sub
push
sahf
jmp
fsubp
data16
rcrb
out
subl
rorb
dec
call
jl
adc
test
xor
ret
dec
xor
inc
shlb
into
jmp
or
in
jp
pop
lock
lea
mov
lcall
repnz
jno
mov
ffree
in
mov
ljmp
dec
jle
stos
xor
outsl
xor
sbb
aas
call
adc
mov
iret
cmp
mov
je
pop
call
or
dec
je
dec
fsts
dec
or
fidivrl
out
jo
dec
dec
and
stos
call
cmp
popf
or
repnz
xor
jmp
xchg
loopne
insb
jg
sbb
repz
outsb
mov
dec
out
push
cmp
xchg
mov
and
lcall
cmp
xchg
cmp
inc
out
xchg
jl
lahf
out
mov
xchg
xchg
adc
jae
cmp
adc
inc
mov
push
inc
add
ret
lahf
cld
shlb
jns
push
xor
fwait
out
icebp
repnz
add
jno
push
push
push
and
mov
sub
testl
mov
cmpb
dec
cmpsl
sar
mov
jg
fs
icebp
lods
addr16
dec
add
ljmp
xchg
push
cmpsl
out
sbb
or
mov
pop
cmp
leave
jno
mov
sbb
cmp
xchg
mov
sub
jbe
push
mov
test
aaa
cli
rorb
stos
fimuls
sub
add
mov
sbb
outsl
xchg
sbb
xor
push
ffreep
mov
es
jmp
rcr
ret
pop
cmpsl
cs
loop
push
cmp
xchg
jne
pushf
addr16
addr16
push
test
add
push
or
hlt
int
sti
xchg
inc
int3
or
sti
push
imul
outsl
out
aaa
push
adc
and
mov
lcall
pop
inc
pop
jns
scas
xchg
or
inc
lret
cmc
add
inc
xor
in
xchg
dec
push
pop
inc
push
clc
fimuls
inc
leave
cmpl
sbb
out
mov
pusha
call
sbb
pop
dec
iret
sarl
dec
mov
mov
dec
push
jo
sahf
push
lret
dec
or
inc
repnz
ljmp
in
scas
addr16
icebp
mov
rcrb
adc
and
push
adc
mov
shll
jb
ss
jnp
inc
lods
push
rorb
dec
or
dec
inc
sub
cld
aam
ja
mov
lahf
add
push
mov
cltd
xchg
icebp
lcall
lret
fwait
mov
cmp
movsb
jae
cmpsb
mov
jo
jg
xor
ja
jnp
aad
mov
pop
and
loop
aaa
mov
add
push
fsubr
add
sub
and
cmp
jae
pop
addb
in
js
mov
lcall
test
jge
shlb
add
in
push
sbbl
lcall
mov
jmp
adc
lock
mov
out
popa
add
out
loop
sbb
jmp
in
add
repz
cmp
testl
or
dec
pushf
ljmp
call
les
scas
xchg
sub
orb
js
cli
lds
and
arpl
pop
cld
inc
mov
insl
orb
mov
push
dec
sub
fdivr
fcomip
mov
int3
xchg
xor
call
jmp
mov
and
incl
xor
out
add
mov
les
pop
decl
loope
and
fdivr
pushf
imul
mov
xchg
mov
ljmp
mov
lret
mov
mov
pop
aas
sarb
push
stos
and
test
cmp
mov
sar
mov
adc
scas
xor
xchg
jle
pop
adc
repnz
push
add
orb
xchg
pop
ret
fnstsw
jb
call
jne
and
repz
dec
jecxz
pslld
xor
xor
test
popf
jg
add
aaa
test
outsl
add
icebp
aam
andl
test
jmp
cmp
mov
pushf
in
fisubl
cmp
sub
das
xlat
mov
inc
fldlg2
xchg
xchg
add
loopne
sahf
lds
and
loopne
ret
cld
dec
sbb
iret
add
inc
pop
addb
loopne
outsb
or
mov
aas
stos
adc
insb
add
subl
divl
mov
xchg
aas
rcrb
jmp
or
sbb
push
outsb
add
shl
aas
mov
neg
movsl
icebp
arpl
jb
add
pop
jbe
decl
inc
mov
je
xchg
mov
mov
mov
ljmp
ret
cmp
sub
lret
cmpsb
lock
xor
outsl
call
dec
in
repnz
in
pop
int
mov
into
add
mov
pinsrw
aaa
sbb
call
xchg
sti
cltd
fcoms
arpl
pushf
sti
js
addb
into
insb
adc
xor
pop
sub
cmp
jmp
mov
mov
test
or
in
cmp
ret
sub
ror
in
cmc
mov
xchg
sub
ret
insl
loopne
mov
xchg
movsl
aad
es
js
xor
rorb
or
stos
xor
jne
inc
pop
mov
or
pushf
loopne
js,pt
pop
orb
call
pop
stos
lret
decl
and
rorl
and
add
xor
fdiv
mov
add
jo
add
repz
add
add
add
sbb
push
jl
adc
mov
ds
test
js
mov
cmp
xor
test
arpl
rcl
icebp
dec
pushl
cmc
sar
sub
mov
mov
pop
les
or
scas
jno
cmp
shll
mov
call
adc
push
js
cmp
enter
nop
in
clc
cmp
scas
inc
push
cmp
adc
movsl
arpl
push
jbe
jp
decl
incb
stos
or
outsl
cmp
xor
add
sbb
das
cli
decl
mov
add
adc
and
jle
mov
lcall
daa
cmp
mov
in
pushf
push
stos
adc
add
cld
lods
mov
decl
out
fsubrs
push
ds
in
bound
mov
push
pushf
mov
jg
pushl
inc
add
push
leave
pop
inc
mov
add
add
jg
jmp
mov
rorl
sub
call
jg
mov
lods
in
cmc
lods
dec
sbb
pop
loope
dec
lahf
sub
cmpsb
aaa
mov
and
pop
jno
movsb
test
lret
insl
xorb
or
inc
dec
push
xor
lods
sarl
dec
and
ss
sub
cmpsb
adc
bound
cli
call
leave
decb
cmpsl
int
in
adc
pop
and
mov
dec
ret
xor
ret
push
lock
inc
ds
dec
xchg
filds
inc
inc
mov
push
xchg
inc
sbb
adc
cmp
xchg
std
pop
mov
fstpl
ss
bound
dec
lahf
hlt
lret
push
xchg
test
pusha
lods
jns
test
lods
sbb
adc
or
gs
lahf
sbb
rolb
and
inc
jg
mov
test
pop
mov
ret
rclb
or
jae
sub
into
cmc
cmc
es
push
xor
pop
pop
jne
push
decb
sahf
mov
sbb
dec
jae
mov
xlat
lcall
jmp
pop
fucom
xchg
fisttpl
and
dec
mov
movsb
stos
mov
mov
shll
xor
xor
nop
lock
push
lock
xor
out
adc
push
loop
inc
jbe
jle,pt
loop
es
cmp
mov
les
pop
cli
out
push
push
jne
push
push
jle
inc
lcall
xorl
jno
sahf
movups
lcall
jmp
sbb
push
xchg
adcl
cmp
cld
push
int3
or
push
imulb
dec
clc
push
pop
cmp
cmp
xchg
ljmp
fdivr
outsl
push
inc
xlat
mov
mov
xchg
rcl
xchg
je
adc
enter
clc
sub
push
fildl
in
lods
xor
jae
dec
push
mov
pushf
push
xor
cwtl
inc
incl
and
xor
sbb
xor
outsb
loopne
jmp
sbb
xchg
stos
inc
xlat
and
push
ljmp
sbb
out
cmp
adc
push
imul
inc
aaa
pop
incl
inc
es
mov
jmp
jns
in
xor
stc
xchg
mov
xchg
shrb
sbb
ds
call
loop
movb
fs
pop
push
mov
jg
ljmp
fdivrs
stc
mov
sbb
xor
pop
hlt
scas
mov
incl
add
arpl
stos
orb
mov
data16
inc
mulb
pop
lcall
nop
popa
xor
lods
sub
mov
in
mov
pop
cmp
sti
push
stc
pop
push
mov
jnp
or
ljmp
mov
inc
dec
xchg
fiadds
mov
insl
and
jecxz
shlb
add
loope
pop
andb
adc
ljmp
lcall
push
cmpsl
sar
pop
and
cmp
repz
outsb
mov
mov
pop
mov
jnp
pop
int3
aad
xor
xchg
hlt
jb
aaa
or
and
add
push
incl
mov
inc
fstpl
jb
mov
adc
arpl
sbb
inc
lea
pushl
insb
adc
dec
je
sub
jecxz
shlb
ljmp
int3
sahf
fcompl
jmp
cmpsl
sub
ljmp
xlat
in
rol
cmp
jmp
test
add
imul
jg
adc
adc
or
fists
cli
loop
mov
fbstp
mov
adc
push
inc
mov
add
jb
or
push
fucomip
adcl
mov
jl
add
dec
test
push
push
rclb
adc
std
inc
and
xchg
mov
mov
xor
adc
jb
fcoml
nop
orl
jmp
mov
call
pusha
test
jns
cs
jmp
sub
stos
mov
sbb
adc
pop
cmc
ljmp
xchg
mov
mov
js
xchg
dec
pop
cmpsb
pusha
xchg
dec
push
mov
pop
inc
mov
cltd
fsubrl
lds
add
cmc
loopne
ret
pop
mov
mov
decl
call
mov
push
and
lods
inc
gs
bound
adcl
add
lcall
sbb
rclb
repnz
fidivrs
add
lcall
cmp
rorb
movsl
xor
add
and
popf
cltd
pop
cmp
xchg
idiv
out
push
or
rcr
or
add
jns
flds
and
xor
cmp
jmp
dec
or
mov
adc
lcall
es
clc
and
cs
push
out
incl
testl
jbe
inc
vmovupd
fisubrs
orb
adc
xor
arpl
mov
popa
loop
ret
ret
das
add
ljmp
add
fwait
addl
sbb
cltd
add
rorb
outsl
sub
imul
cli
rolb
js,pt
cmp
sub
pop
lea
mov
inc
ret
decl
cmpsl
decl
fadd
sbb
stos
sbb
fcomip
inc
lcall
ljmp
jb
fistl
pop
or
jb
adc
arpl
outsl
mov
and
cmp
jmp
les
xorb
inc
rorb
add
pusha
adc
xchg
ljmp
fbld
scas
addl
loopne
dec
out
stos
in
testb
and
xor
stos
cwtl
movsb
xchg
or
dec
mov
mov
sbb
add
clc
jne
fs
movsb
nopl
in
inc
inc
cmp
mov
push
cld
aad
lcall
lcall
mov
dec
add
pop
fsubs
dec
mov
test
pushl
fsubl
push
or
out
mov
adc
pusha
jecxz
and
cltd
sbb
and
ljmp
add
mov
incb
pop
add
sbb
xor
inc
xchg
ljmp
dec
or
cmp
xor
xor
or
mov
lea
inc
ljmp
pop
std
sbb
mov
dec
pop
movups
mov
data16
cltd
mov
jmp
push
subb
adc
xchg
mov
test
mov
daa
loopne
cmp
mov
movsl
pop
sub
ljmp
xor
or
xor
cmp
cmp
loopne
push
add
insb
pop
inc
mov
clc
cld
loope
push
mov
adc
xchg
jbe
dec
lahf
dec
sbb
leave
mov
popa
cmpsl
sbbb
dec
ljmp
nop
testl
push
jno
mulb
mov
mov
jae
mov
mov
lods
fsubrl
imul
mov
dec
mov
ror
dec
fdiv
lcall
push
adc
lret
push
clc
push
shl
and
push
sbb
shlb
mov
pop
inc
call
sbb
rorb
cmp
pop
push
out
xor
lock
adc
mov
mov
push
rclb
imul
imul
lar
jo
sahf
xor
insb
add
and
dec
mov
add
add
rorb
call
mov
rol
jp
mov
pop
pop
loop
xchg
push
out
mov
fidivl
xor
mov
incl
push
out
aad
mov
out
call
cmp
loopne
pop
insl
lcall
das
in
sub
aad
push
lea
push
xor
ret
mov
mov
insb
pop
out
cwtl
inc
js
lods
add
jnp
call
lahf
pop
sbb
xor
sub
out
mov
push
sub
cmp
stc
stc
dec
pop
cmp
push
insb
dec
pop
xor
movsl
outsl
push
mov
mov
imul
push
push
mov
add
jnp
cmp
or
arpl
insb
outsb
xchg
push
rolb
lock
sbb
push
loopne
hlt
pop
call
ret
dec
jbe
mov
dec
rcrb
nop
incl
stos
inc
mov
and
jnp
push
push
add
mov
sbbl
stos
mov
data16
dec
add
lahf
and
test
jns
sahf
adc
inc
jecxz
clc
pop
inc
dec
xor
pop
aas
dec
clc
js
ss
add
insl
inc
add
loopne
aas
sbb
jmp
pop
imul
call
icebp
js
lret
add
inc
notb
xchg
rolb
dec
fs
xchg
dec
push
dec
inc
popa
mov
stos
sbb
movsb
jb
lret
mov
lock
js
dec
jge
inc
fnstcw
pushl
or
mov
jae
inc
push
dec
xor
ficoml
dec
adc
ret
push
sbb
adc
popa
data16
fdivr
jg
adc
push
jo
push
leave
in
cli
jg
sar
dec
inc
xchg
movsb
sbb
jbe
scas
inc
jmp
into
and
add
jo
dec
lcall
mov
ret
rcrl
mov
xchg
cmpxchg
ja
lods
jl
xchg
testb
addb
xchg
push
push
push
pop
jp
dec
fs
inc
xor
cmp
pop
fildll
pop
inc
adc
dec
cld
fisttps
add
add
mov
js
out
xor
add
jno
cmc
arpl
xor
inc
aaa
gs
mov
add
or
dec
or
mov
inc
ljmp
imul
sub
fcoms
mov
outsb
dec
adc
xchg
out
subl
fnsave
xchg
and
ja
push
call
or
xor
sub
xor
fidivrl
jmp
scas
add
ds
mov
sub
xchg
mov
push
and
push
loope
dec
mov
jno
lret
loope
and
ljmp
dec
sti
inc
cmpsb
mov
std
xchg
fidivrs
dec
mov
xor
lcall
nop
sbb
pushl
loopne
daa
adc
xor
push
push
inc
xchg
add
inc
mov
fisttps
sub
adc
xchg
pop
lods
jl
aam
sbb
shrl
lea
or
clc
repnz
lcall
sbb
scas
push
mov
xchg
and
and
mov
push
lock
rclb
push
movsb
insb
xchg
out
mov
inc
cld
je
mov
adc
out
loope
addr16
cltd
sub
push
imul
jmp
sbb
push
mov
fsubr
xor
adc
cmpb
std
jne
sar
push
jb
out
dec
aaa
das
sar
push
pop
sub
and
sub
jecxz
neg
ljmp
ljmp
xchg
aam
hlt
pop
out
out
pop
sub
inc
arpl
test
jp
cmc
imul
xchg
rcrb
fcoms
push
test
cmp
push
out
sahf
xchg
rcl
divl
or
outsl
aad
push
orb
dec
fwait
sbb
andb
adc
dec
cltd
sbbl
iret
and
ret
and
mov
mov
sbb
mov
inc
cmp
in
jecxz
fnsave
jg
mov
shl
hlt
out
stos
inc
jae
jl
std
movsl
mov
sub
inc
fmull
inc
mov
adc
push
adc
popa
clc
push
aad
cmp
nop
inc
pusha
dec
aam
aam
and
clc
pop
xchg
jg
ret
and
sub
das
push
out
adc
in
movb
xor
add
repnz
pusha
xor
test
test
add
in
cmp
in
pop
loopne
and
add
adcb
leave
out
add
in
fwait
das
sub
pop
add
loop
repnz
and
imul
adc
xor
out
adc
add
leave
and
cmp
shr
pop
xchg
cmp
leave
jmp
and
push
dec
ljmp
lods
jmp
repnz
mov
push
ljmp
add
ret
push
mov
add
in
and
ljmp
jmp
inc
outsb
cmc
icebp
lea
mov
rorb
push
dec
ljmp
adc
dec
inc
sti
pusha
adcb
cmp
sbb
loop
aaa
fdivs
sub
push
fmul
cmp
sub
cmpl
pop
pop
rorl
push
dec
or
ret
dec
add
ss
or
xor
ljmp
push
add
push
stos
pop
shll
jmp
lcall
stos
and
mov
dec
push
add
inc
inc
ljmp
cmp
enter
lock
popa
inc
notb
mov
clc
icebp
jmp
jl
dec
out
push
push
faddl
dec
add
movl
pop
inc
xchg
ljmp
std
shrl
jno
add
xchg
mov
mov
cmc
mov
add
pop
push
sub
mov
sbb
lcall
sti
mov
das
jecxz
int3
sub
pop
cmp
dec
test
xchg
call
add
roll
and
iret
in
push
inc
dec
inc
rcl
cld
push
xor
cli
dec
push
inc
dec
inc
ror
cmp
add
data16
dec
mov
pop
inc
mov
aas
mov
xor
adc
pop
das
mov
add
push
stos
sbb
mov
dec
jnp
push
fmull
pop
sar
insb
xchg
mov
adc
mov
cmpsl
enter
and
push
mov
mov
call
call
fcmovnbe
out
pop
pop
dec
lea
xchg
icebp
ljmp
int
mov
enter
lahf
loopne,pn
mov
xor
push
inc
daa
mov
icebp
inc
or
arpl
mov
popa
pop
adc
sub
and
inc
add
loope
aaa
jae
js
dec
mov
cld
dec
push
cmp
pushf
xlat
lods
mov
mov
or
aam
add
dec
mov
adc
and
sub
ficoms
dec
hlt
ljmp
fisubrl
shl
je
or
ljmp
push
push
xchg
xchg
sbb
in
mov
xor
jo
hlt
sbb
pop
mov
cmc
lock
test
push
push
jae
sub
mov
insl
dec
push
mov
cs
mov
or
fldt
and
jne
dec
std
inc
and
xchg
push
cmovge
fists
jae
sbb
jae
int3
mov
push
inc
fcomps
pop
cs
stc
xchg
push
pop
aaa
shrl
dec
xor
dec
cld
fistpl
inc
movsl
int3
out
inc
add
bnd
jg
movsl
adc
pop
add
push
je
jb
push
pop
push
fmuls
je
jg
adc
push
nop
lods
rcll
dec
aas
into
push
pop
imul
mov
decl
xchg
fwait
scas
push
mov
xor
push
das
inc
or
sbb
ljmp
in
dec
out
call
orb
push
cmc
adc
add
dec
fs
seto
outsl
dec
jo
insl
mov
divl
pop
xchg
jg
or
cmp
adc
mov
sub
and
add
repnz
inc
and
and
pop
enter
repz
mov
add
into
negl
leave
out
dec
add
clc
pop
test
clc
out
push
leave
pop
add
stc
dec
inc
repnz
cli
dec
inc
jb
inc
cli
fcmove
mov
sti
mov
cld
xor
mov
in
and
test
nop
pop
xchg
pop
sbb
and
add
dec
out
ss
inc
inc
push
jb
lahf
pusha
push
and
out
idiv
add
outsl
incl
add
add
adc
mov
mov
nop
dec
xchg
sti
in
pop
outsb
adc
push
push
pop
into
push
inc
fwait
add
xlat
cmc
xchg
xor
add
push
cs
stc
mov
std
or
push
icebp
decl
cli
mov
lret
push
mov
xchg
mov
push
std
gs
mov
dec
ret
arpl
shrl
lods
dec
xchg
test
enter
xor
jae
add
dec
test
repnz
add
in
cmpsl
or
lea
xchg
mov
and
adc
jno
sbb
aas
fsubs
out
dec
in
loope
mov
cmp
pop
add
test
mov
xor
stos
xor
jo
cwtl
sub
pusha
call
add
sub
stos
mov
ljmp
pushf
mov
cmp
bnd
xorb
dec
adc
push
imul
js
lcall
fs
je
mov
sbb
xor
jmp
jno
xchg
push
dec
cli
stc
or
sbb
push
fidivl
lahf
mov
loop
outsb
outsl
jb
dec
in
add
imul
or
mov
cmpsb
popa
pop
add
add
mov
push
dec
popf
les
jg
test
test
je
stc
mov
jo
mov
lea
or
fiadds
mov
test
push
or
inc
push
dec
and
or
fimull
cld
decl
pushf
ja
cmp
add
push
movsl
mov
and
cmp
lcall
mov
lds
jno
xchg
nop
mull
lcall
and
mov
mov
mov
dec
mov
pop
aad
and
incl
cli
lock
mov
mov
jp
sahf
adc
push
clc
enter
in
ret
push
inc
aaa
fisttpll
dec
popa
jns
incl
mov
mov
iret
sbb
sbb
fsubs
mov
call
pusha
adc
testl
cmc
push
add
pop
jo
push
sub
leave
movsb
add
push
mov
decl
jl
divl
into
lock
sbb
jnp
cld
nop
push
sbb
fbld
fdivl
or
mov
mov
clc
aaa
fs
add
incl
dec
outsb
pop
or
mov
xor
int3
std
add
or
inc
in
xor
pushl
addl
cmp
add
outsb
adc
sbb
sub
or
push
lds
jb
pushf
iret
arpl
and
jmp
stc
lods
aam
in
shlb
mov
jne
in
push
jmp
pop
mov
dec
mov
inc
and
fnstcw
mov
inc
in
dec
inc
sbb
ret
movsb
fsubrs
lcall
imul
ret
orl
dec
inc
sti
sti
hlt
sub
aas
sbb
xchg
sub
xor
decl
push
dec
add
daa
call
cld
sbbl
dec
and
inc
sbb
jmp
rorb
push
daa
mov
xchg
push
xchg
andl
imul
and
or
jmp
incl
or
and
mov
jbe
out
call
cmp
jmp
in
adc
call
mov
cmp
fsubrl
dec
leave
aam
pop
adc
jae
xchg
leave
ror
scas
fcompl
dec
adcb
int3
or
movb
arpl
mov
jb
sub
incl
jp
repnz
inc
xchg
mov
mov
das
push
xchg
xchg
fwait
add
insl
cmp
adc
add
int
add
shlb
testb
sar
incl
cltd
or
sub
outsb
sub
ljmp
test
ja
in
fsubl
scas
dec
dec
mov
inc
xor
jno
and
loop
mov
cmpb
fildl
mov
test
rcrb
shrb
clc
mov
cmpsb
fwait
sub
xor
inc
mov
jb
lahf
push
rcll
cltd
data16
add
test
out
sub
push
cli
fdivrl
call
sub
iret
mov
and
es
pusha
mov
lcall
pushl
ljmp
cmpsl
gs
das
jnp
ljmp
push
xchg
pop
clc
xchg
out
cmpsl
and
lahf
pop
lahf
push
push
and
lret
adc
cmc
xor
fucomip
mov
and
sub
sahf
pop
fmull
stos
in
inc
test
decb
lock
lds
push
arpl
push
js
mov
cwtl
dec
adc
mull
outsb
je
add
stos
cmpb
and
xchg
mov
add
cld
push
or
jle
ja
add
notb
inc
addr16
add
in
and
and
sbb
ljmp
and
sbb
pop
negb
sub
iret
fsts
imulb
sub
ljmp
popa
sbb
out
add
movlps
push
add
js
js
lret
inc
adc
pop
sbb
aaa
sbb
sub
test
add
or
add
cmp
lsl
push
jo
das
jp
add
pop
or
cmpsl
sub
adc
jno
xor
enter
push
inc
push
or
jecxz
fiadds
add
jecxz
add
out
push
jmp
and
pop
je
pop
push
jno
test
mov
xchg
sbb
pop
mov
jmp
mov
pushl
ret
shl
repnz
movsl
or
popf
or
outsl
dec
scas
cmpsl
add
mov
adc
imul
cmp
adc
loop
sbb
pushf
xchg
rorb
push
cmc
jno
add
xchg
push
aad
incl
shl
xchg
add
in
mov
lea
xor
xor
fnstcw
cwtl
push
fnstenv
lods
push
add
filds
fbld
mov
sbb
ljmp
jmp
mov
xor
jecxz
add
add
jne
xorb
fsubrs
cmp
incl
mov
int3
aaa
int
jg
inc
mov
jb
je
jne
lods
test
hlt
pushl
cmp
pushf
rorl
adc
and
push
cmpsl
dec
das
dec
push
inc
out
orb
xor
pushf
out
fisubs
inc
addr16
xchg
push
and
in
data16
push
add
pop
mov
hlt
sub
les
cmpl
add
jmp
jae
dec
and
sbb
fdivrs
pop
movsl
inc
add
dec
jo
jbe
add
push
ljmp
push
dec
adc
mov
xchg
mov
cli
pushl
and
addr16
in
xchg
sbb
loopne
or
cmp
pushf
push
dec
pop
or
xor
rcrb
fiadds
inc
and
xchg
jae
push
imul
sub
cs
loop
pop
jp
pop
dec
push
mull
addr16
repnz
outsb
mov
sbb
mov
dec
xor
test
inc
mov
rolb
pushl
mov
cmp
add
into
stc
xchg
or
jnp
fsin
ljmp
sti
notb
cwtl
js
add
mov
jo
jle
das
jp
dec
push
add
subl
enter
xor
aaa
mov
pushf
jp
mov
push
in
xor
out
fisttps
fs
lea
inc
mov
scas
pop
aaa
jno
icebp
call
xchg
mov
das
cmp
inc
xor
pop
xor
out
cli
inc
loopne
push
add
dec
inc
jg
loopne
push
jb
insb
push
repnz
mov
incl
add
jmp
mov
fwait
add
inc
jmp
mov
and
jne
or
xor
outsl
mov
xor
lea
sahf
sub
incl
dec
jmp
add
mov
push
dec
jb
mov
ss
js
jmp
loope
movsb
mov
dec
inc
push
pusha
push
call
mov
lahf
andl
rol
inc
cmp
movsb
push
dec
lahf
cmc
inc
sbb
std
lcall
std
cwtl
xlat
sub
adcb
outsl
js
fld
mov
ror
jb
inc
push
push
fisubrs
sbb
mov
pop
ret
fs
push
incl
prefetch
or
rorl
pop
js
jb
neg
xchg
sub
ljmp
or
jecxz
mov
dec
xchg
aas
loop
add
pop
shlb
lea
cmp
dec
xchg
insl
sbb
ljmp
out
pop
sub
lret
push
sahf
jl
or
or
lcall
mov
add
pushf
shrb
dec
sub
in
aad
mov
xchg
fnstenv
mov
push
jg
lock
stos
mov
aaa
push
adc
xchg
adc
inc
inc
push
jae
push
push
push
bound
dec
outsl
cli
outsl
push
inc
ret
enter
dec
jae
test
int
push
jg
inc
fadd
pop
mov
outsl
inc
sub
test
sarl
inc
inc
mov
js
js
sarl
iret
cmpsl
xor
mov
stos
lret
inc
aad
call
out
adc
push
push
cmp
mov
fwait
mov
scas
mov
pop
xor
pushl
bound
shr
nop
jbe
pop
jno
loopne
js
push
sbb
sbb
or
cmp
pushl
add
dec
insl
push
sub
lea
dec
xchg
in
popw
mov
jmp
inc
add
iret
jmp
and
xor
and
shl
lods
pop
push
dec
inc
dec
daa
jecxz
dec
dec
pop
inc
ds
lcall
add
jns
test
cli
stos
xchg
add
xchg
or
jg
mov
sahf
dec
out
jp
jl
mov
cmp
sub
jl
shrl
dec
cmp
repz
jmp
jne
push
leave
in
iret
stos
jl
push
sub
call
clc
mov
or
adc
xlat
xor
fidivrl
xchg
je
or
hlt
je
inc
dec
and
jne
filds
das
pop
sbb
sti
inc
mov
adc
jl
bnd
addb
and
xlat
rorb
inc
iret
ja
jl
mov
push
sbb
push
inc
call
mov
xor
mov
ret
lret
test
push
sbb
cli
dec
or
test
ljmp
sbb
int3
rorl
push
pop
int
pop
sbb
call
jo
into
xor
xor
rcll
sbb
push
pop
xchg
cmpsb
lret
xor
adc
mov
lock
cmp
jl
stos
jg
icebp
sbb
bound
add
dec
sub
xchg
jg
cs
jb
cmpb
jle
sbb
arpl
add
pusha
fisubrs
shlb
test
out
out
adc
or
or
push
and
ja
ja
clc
pop
popa
pop
jae
cmc
add
lea
data16
pop
idiv
decl
jle
enter
cmp
cmp
je
das
or
sbb
jmp
rorb
pop
testb
bound
lret
mov
gs
xor
call
add
ljmp
pop
add
aaa
inc
cwtl
pusha
cmp
scas
movb
cmp
sbbl
aaa
lcall
add
icebp
int3
add
js
or
xchg
jl
xchg
fdivs
call
shrb
outsl
or
imul
inc
scas
jmp
mov
fsubs
movsb
cmp
cs
incl
add
sbb
add
insl
mov
mov
push
in
in
fiadds
sub
or
add
loop
or
and
mov
aaa
and
xchg
jecxz
sub
mov
data16
and
daa
std
inc
testb
adc
jp
je
push
lahf
aaa
ret
xor
dec
shrl
xor
pop
int3
aad
decb
jle
or
fsubrl
lcall
xorb
out
fsubs
out
adc
adc
mov
and
fnstenv
incl
adc
mov
mov
pop
out
mov
add
and
in
ljmp
shr
popf
bound
jnp
insl
leave
pop
icebp
mov
inc
mov
push
mov
decl
loopne
mov
pop
fwait
pop
rcrl
roll
pop
lock
jmp
ljmp
js
cld
out
sub
mov
push
imul
rol
incl
adc
xor
cmp
incl
popf
pop
std
stos
pop
ljmp
add
scas
add
insb
cmp
add
es
fs
dec
aam
lods
in
das
test
test
xchg
or
fcos
mov
mov
sbb
cmc
bound
sbb
adc
mov
jle
cs
call
lcall
push
pop
loopne
mov
mov
sar
ljmp
mov
cltd
mov
mov
pop
sbb
cld
sbb
sbb
cli
adc
rol
dec
decl
inc
stc
jo
push
mov
sarl
add
adc
nop
lahf
xchg
lods
ljmp
dec
adc
add
xor
mov
push
subb
mov
out
pusha
loope
lcall
jmp
jmp
hlt
ljmp
cmp
js
push
inc
aas
insl
cmpsb
inc
xor
ljmp
aas
hlt
add
adc
pop
adc
adc
jo
fistps
add
jne
ret
xor
and
std
test
mov
sbb
xor
rep
xor
hlt
incl
xchg
repnz
sub
pop
and
ljmp
cli
jo
test
xor
andl
jb
sbbb
cmp
mov
fsubrs
dec
ljmp
dec
popa
mov
rclb
xchg
add
inc
sahf
call
add
xchg
sbb
test
sbb
jo
and
inc
inc
mov
stos
dec
test
push
inc
sbb
sbb
xchg
xchg
fs
in
stos
cmp
mov
sbb
push
add
ljmp
gs
and
add
aaa
gs
or
pop
adc
xchg
pop
adc
mov
or
add
mov
or
in
out
and
inc
icebp
loopne
and
xor
jo
pop
mov
xchg
insl
add
shl
and
sbb
insb
pop
mov
fwait
push
xchg
and
lcall
sub
lods
mov
andb
call
decl
add
sub
ret
sbb
in
sub
in
clc
out
insb
in
sub
pushl
xchg
xchg
mull
rclb
xor
rcl
jp
fiadds
mov
cli
decl
popa
jmp
mov
sub
dec
je
jo
cld
and
je
mov
enter
sbb
ljmp
pop
call
dec
fstl
fisttpll
push
test
push
xchg
sbb
iret
cmpsb
jge
inc
inc
int
rclb
jbe
dec
int
push
jg
push
or
jae
add
test
mov
adc
jmp
mov
push
pushf
push
pop
push
ret
bound
sarb
insl
push
gs
fbld
sbb
jns
outsl
pop
sbb
sti
push
cwtl
push
daa
ret
lahf
cmpsb
push
ljmp
jbe
xchg
mov
mov
xor
and
dec
aaa
pop
lock
inc
pop
popa
inc
jg
dec
add
test
insb
mov
ljmp
cli
fwait
ret
sub
sbb
mov
push
mov
sahf
adc
adc
outsl
jns
rcl
inc
lods
gs
addr16
clc
fwait
dec
jl,pn
and
xorb
int
jno
int
test
rorb
inc
test
fcomip
sbb
dec
add
std
lcall
test
jg
test
push
pop
cmp
ljmp
jns
xchg
mov
inc
xchg
pop
jno
fildll
pop
mov
jecxz
inc
ss
jg
ljmp
or
sbb
mov
jmp
sub
aad
inc
imul
cs
orb
movsl
lds
les
call
test
insb
mov
push
push
inc
push
lcall
dec
push
push
cs
push
and
movsb
mov
jns
mov
mov
lahf
test
out
scas
or
xchg
lret
add
incl
rcl
out
cltd
push
or
cmc
loop
sbb
and
out
jp
and
fisubrl
jg
decl
ss
mov
sub
cmp
repz
cmp
adc
nop
lea
dec
add
adc
ss
jnp
js
cmp
inc
jl
pop
div
popf
jo
pop
add
or
decl
pop
das
sbb
je
lret
sbb
movsb
dec
mov
jns
adc
mov
sub
popf
clc
ljmp
xchg
push
pop
dec
add
inc
adc
inc
daa
cwtl
repnz
cmp
jg
adc
dec
mov
add
clc
add
bound
or
add
cmc
or
xor
xchg
push
lret
and
repz
pushl
mov
mov
adc
pushf
mov
stos
xor
fldl
add
xor
jnp
call
repz
dec
aaa
es
sbb
pop
mov
add
mov
mov
into
scas
push
aad
into
lods
cli
negl
adc
call
mov
dec
outsb
cwtl
xchg
pop
pop
mov
pop
sbb
ja
incl
or
xchg
enter
fidivl
out
fsub
jo
cs
movsb
outsb
mov
std
call
xchg
sbb
adc
fs
arpl
adc
rorl
incl
cmp
adc
test
in
xchg
dec
inc
xchg
cltd
lcall
js
adc
imul
push
cwtl
mull
add
fimuls
push
jns
mov
cs
orb
add
push
out
insl
xor
xor
sbb
decl
mov
sub
inc
mov
fcoms
cwtl
jecxz
pop
mov
fcomip
incl
xchg
cltd
xor
mov
mov
sub
or
cmpl
or
into
mov
das
and
xchg
pop
aad
test
decl
popa
in
movsb
pop
cmp
sub
push
mov
mov
push
adc
fsubs
adc
and
ss
sti
or
dec
cmpsl
or
dec
cmp
dec
dec
test
xor
fcom
adc
stos
mov
xor
cmp
stos
mov
pop
jb
adc
jnp
test
mov
inc
push
cltd
adc
fsubs
jne
insb
aas
ud0
mov
test
add
ret
call
popa
xor
in
scas
clc
mov
test
aaa
xorb
stos
lods
je
push
adc
mov
or
mov
push
rolb
out
inc
into
fsubl
add
cli
push
xchg
pop
ret
das
inc
add
iret
inc
sarb
pop
sbb
xchg
xor
mov
xchg
subl
clc
dec
sub
mov
iret
sbb
lret
jmp
add
and
mov
repz
in
stos
inc
inc
adc
rclb
into
cmp
ret
jg
mov
mov
iret
bnd
sub
push
mov
push
sbb
mov
mov
sub
xor
notl
adc
xchg
mov
add
rcrb
rorl
shl
push
stos
in
dec
xor
sub
sub
incl
adc
orl
cli
mov
and
add
jo
mov
icebp
divb
pop
daa
add
fmul
test
pop
jno
cmp
sbb
loopne
addr16
incl
inc
xor
clc
testb
pop
mov
push
lods
xor
pop
add
adc
insl
add
mov
out
pop
les
sub
repnz
push
lret
pop
out
gs
sbb
incl
add
inc
add
ljmp
jg
add
pop
cwtl
push
sub
orl
cmp
pushl
sub
mov
ret
push
jp
cmp
jo
mov
inc
shll
inc
imul
inc
test
mov
rolb
ljmp
loope
movsb
shrb
rcll
jge
repz
mov
arpl
jae
js
cmpsb
mov
dec
jno
dec
rclb
fstpt
adc
cwtl
add
pop
lahf
sbb
popf
cmp
cmpsb
shll
scas
clc
clc
enter
pop
ret
rcll
xchg
clc
pop
cs
add
pushl
add
les
push
push
mov
lods
jb
add
loope
orb
push
pop
xor
or
clc
mov
bound
shl
mov
ja
mov
call
decb
adc
cld
loope
mov
aad
aad
cmp
nop
or
dec
sub
es
cli
push
test
fdivrs
inc
ljmp
loopne
add
add
dec
jmp
jle
push
cmc
mov
lock
cmp
loop
push
inc
into
push
push
outsb
test
fidivs
cmc
call
or
push
mov
ret
lcall
gs
add
inc
jbe
mov
lock
adc
or
pop
xchg
fdivp
movb
inc
aad
mov
rclb
cmp
fsubrs
inc
sbb
add
sbb
hlt
decl
test
mov
push
aas
lahf
xchg
insl
data16
loop
pop
ss
jno
cmp
aaa
add
cmp
dec
scas
push
push
jp
mov
cwtl
sbbl
incl
xchg
adc
jg
cmp
pusha
lds
and
mov
sahf
dec
pop
jne
dec
clc
mov
mov
mov
cwtl
adc
sti
out
mov
dec
cli
call
out
rcl
nop
or
dec
fisubs
neg
xchg
aad
sti
push
inc
je
hlt
ja
xchg
sbb
repnz
imul
call
js
dec
or
cmp
jge
fs
arpl
xor
mov
popa
jp
push
mov
jmp
lgs
pop
adc
xchg
into
test
and
add
lret
loop
cmp
sub
cmp
sbb
dec
outsb
add
sbb
decl
lock
arpl
add
shrb
pop
or
jle
pushf
push
outsb
insb
imul
cmpb
imul
push
popa
fisttps
lods
push
adc
iret
in
cs
cmp
imul
mov
movsl
lock
mov
dec
sub
sbb
stc
or
cmp
mov
fs
ss
jne
xchg
mov
inc
dec
fs
les
push
pushl
pushf
jp
adc
jge
xchg
mov
enter
stos
mov
push
mov
push
lock
pusha
out
jge
addr16
jb
sbb
popf
lods
lods
aaa
mov
push
call
jb
add
adc
sarl
fstpt
imul
ds
mov
xchg
sti
mov
aaa
cld
mov
or
inc
mov
mov
adc
push
mov
dec
ja
mov
sbb
fisubrl
mov
xchg
or
xor
in
inc
cmpsl
lock
pusha
dec
adc
xchg
dec
enter
aad
jg
pop
movsl
pop
add
push
call
repz
xor
jbe
jne
fdivr
ljmp
imul
sbb
gs
ror
xor
pop
sahf
xchg
inc
dec
mov
or
outsl
inc
je
jg
jb
pop
jp
loopne
push
mov
cmp
xor
clc
jle
adc
mov
inc
icebp
cmove
lds
fmuls
fdivrl
or
push
dec
jp
test
mov
shll
xor
pop
rclb
test
je
push
or
mov
scas
jl
lcall
mov
mov
jae
data16
lret
pop
cmovno
pop
testb
mov
cmpsl
mov
inc
inc
les
lcall
inc
fs
push
sti
scas
adc
enter
scas
pop
sbb
xchg
jecxz
cs
jg
lret
test
icebp
testb
cwtl
jecxz
imul
dec
add
adc
or
pop
test
add
inc
imul
ds
call
jne
jne
jo
jno
cmp
lcall
cmp
dec
test
dec
icebp
pop
jecxz
stos
inc
fistpl
cwtl
rcll
pop
push
jp
sbb
push
dec
inc
shrl
incl
popa
jbe
rcrl
jae
loope
xchg
int
rolb
cmp
jmp
jns
push
jb
mov
cwtl
mov
popa
push
loopne
push
les
mov
jmp
dec
push
fidivl
mov
dec
push
bound
nop
jb
leave
sbb
sub
cld
mov
push
cmp
cwtl
xor
jns
dec
pop
les
inc
test
sti
fildll
mov
push
icebp
mov
pop
outsb
add
jmp
or
lcall
insb
shrb
push
movsl
add
rorb
inc
cmc
sub
and
jo
jle
rorl
dec
scas
idivb
dec
aaa
mov
jle
mov
bound
mov
jno
aad
movsb
cmpsl
xchg
ljmp
mov
jmp
ret
xor
lret
je
pop
sahf
fmull
cmp
call
and
cmp
incb
adc
int3
ret
push
inc
jb
and
gs
sub
push
or
outsl
sbb
add
loopne
inc
mov
dec
repz
push
add
cmp
cwtl
test
xor
adc
add
xlat
inc
call
into
insb
cmp
outsb
and
push
jns
jns
xchg
lcall
ret
add
jbe
data16
in
cld
pop
pusha
cltd
xor
sbb
pop
mov
jb
xchg
jge
lret
incb
push
push
xor
js
pop
icebp
dec
addr16
data16
dec
dec
mov
and
push
lret
addr16
cmp
mov
adc
mov
sbb
cli
mov
cmpsl
pusha
addb
mov
ss
jae
out
push
xchg
rcll
add
call
std
and
mov
in
sub
sub
add
dec
fcomps
push
inc
jg
and
pop
add
inc
mov
adc
sub
or
sahf
push
sub
jg
jno
test
hlt
adc
adc
or
mov
fsubrp
mov
push
dec
int
mov
loop
dec
sti
in
dec
cwtl
adc
fsubl
sbb
nop
lock
or
cmp
aaa
xlat
test
ds
dec
dec
xor
inc
mov
xor
test
repz
push
movsb
fiadds
add
cmpb
xor
mov
rol
std
subl
add
ret
ret
pop
xor
sub
sbb
addl
jg
cli
xchg
stos
into
xor
insl
pop
pop
push
and
push
imul
icebp
dec
std
int
dec
loope
adc
out
insb
push
inc
push
cmp
outsb
lock
jae
cmpsl
rorb
mov
subb
push
xor
lock
mov
pushl
sub
leave
xlat
lret
dec
inc
fmuls
dec
mov
mov
cmp
test
lods
or
cld
jge
pop
cwtl
add
dec
jmp
pop
push
outsb
mov
dec
stos
adc
jg
xor
call
jle
inc
out
push
xor
pop
sbb
rol
sbb
xor
shlb
ljmp
popa
xchg
rcr
imul
movsb
xor
inc
jbe
jle
jbe
push
dec
insb
rcr
add
lea
nop
es
call
xchg
sbb
mov
aad
loopne
mov
push
xlat
push
mov
nop
ljmp
inc
jae
push
push
pop
fbld
jle
add
mov
leave
divb
pop
pushl
xor
pop
cmp
xor
or
xor
push
inc
jl
decb
mov
sti
jns
insl
insl
inc
loope
and
sarb
pop
jl
outsl
pop
stos
mov
jb
pop
jle
stos
mov
sub
cmp
mov
jb
mov
xor
idivb
cmp
out
xor
aam
mov
push
imul
or
xchg
pop
cmp
push
outsb
jne
jno
aas
jmp
dec
jnp
je
jl
cmp
daa
loopne
jmp
fildl
or
in
test
aaa
push
int3
into
inc
jnp
es
dec
pop
jns
push
in
jbe
add
pop
mov
dec
jne
hlt
push
test
mov
test
js
negb
ja
dec
sbb
mov
push
cli
jg
mov
ss
outsl
jecxz
pop
shll
int
add
mov
xor
mov
js
ljmp
jno
dec
addr16
add
inc
push
cmp
add
or
sbb
aad
stos
inc
in
das
lea
stc
fcomip
ss
jp
inc
jo
mov
push
push
dec
push
lods
sti
lcall
cwtl
push
inc
outsb
les
fcmove
dec
cld
test
dec
jecxz
cmp
loop
add
pop
mov
dec
ret
data16
les
jecxz
pop
daa
inc
lods
outsl
jp
adc
lahf
pushf
and
enter
call
add
mov
imul
inc
dec
inc
inc
add
inc
iret
test
fildll
sarl
sub
and
rcrb
mov
ficoms
js
inc
js
and
enter
jmp
jbe
push
mov
iret
sub
andl
in
clc
xchg
or
sti
clc
inc
xchg
daa
enter
loopne
xchg
jmp
loope
lock
push
cmp
inc
adc
xchg
in
shll
ljmp
dec
inc
push
adc
in
lret
xor
sbbl
push
ss
in
pusha
out
cmpsl
jecxz
pop
flds
ss
ja
fcoms
cmp
clc
sbb
ret
addr16
push
inc
push
inc
cmp
push
dec
rol
xor
decl
ja
js
imul
or
inc
push
jle
xchg
imul
push
repnz
orl
arpl
inc
int
sar
xchg
cmp
inc
out
xor
xor
mov
xor
xor
out
mov
shll
out
mov
dec
imul
cwtl
jp
pop
lods
pop
aam
cmp
aam
call
ret
stos
or
inc
dec
dec
mov
inc
cmp
cmp
ret
icebp
mov
jg
push
jmp
inc
fistl
pop
xchg
mov
pop
push
rclb
scas
mov
dec
nop
addr16
dec
pop
push
cmp
mov
sbb
fs
stc
mov
shll
sti
jmp
xor
pop
lods
cld
and
push
aam
aas
fldl
mov
in
js
xor
sub
xor
filds
xor
incl
mov
imul
xchg
scas
jecxz
or
or
js
lahf
sbb
jno
jo
push
stos
adc
ja
imul
je
mov
andb
mov
push
sub
or
inc
xchg
into
mov
in
jb
mov
jl
loopne
sub
hlt
stos
pop
roll
pop
dec
inc
xor
sbb
fimull
loopne
lcall
sarb
mov
jnp
dec
cmp
jle
mov
gs
dec
mov
mov
add
and
inc
jecxz
mov
mov
push
pop
int3
inc
inc
jne
dec
fs
filds
nop
movsb
adc
xchg
adc
ror
dec
push
das
clc
pushl
jae
movsl
mov
or
lahf
sti
insl
into
cmp
fwait
push
out
xor
sub
fbld
cmc
mov
lahf
xlat
xor
or
sub
push
fadds
aaa
inc
push
call
inc
leave
mov
clc
add
lcall
sub
push
mov
mov
mov
mov
sbb
shlb
repnz
roll
sti
and
push
cmp
dec
sti
in
insb
mov
adc
dec
xchg
and
lcall
mov
pusha
sbb
mov
int3
sbb
dec
stos
adcl
dec
mov
ljmp
mov
pop
and
mov
fnstsw
lret
inc
sahf
inc
insl
push
xor
xchg
les
out
out
xor
mov
jmp
out
lcall
inc
xchg
mov
push
add
ret
cmp
enter
fistps
les
or
out
hlt
mov
lret
mov
lcall
mul
mov
enter
and
imul
dec
push
insb
and
mov
adc
movsl
sarl
push
or
je
jmp
das
pop
push
outsl
movsb
pop
movsl
das
movsl
aam
push
add
shr
inc
testl
fdivr
sub
sar
cmpsb
xchg
jle
xor
hlt
jg
or
mov
sbb
pushl
pop
icebp
or
ficoms
imull
mov
inc
sti
fsubs
xchg
jne
and
cltd
les
ljmp
dec
dec
pushf
jg
lock
push
xor
xchg
or
cmpb
movsb
aad
jmp
mov
or
mov
push
push
repz
cli
mov
sub
add
jl
lods
fistpll
les
lcall
les
jg
faddl
les
stos
imul
dec
je
and
repnz
push
add
bound
push
cmp
sbbb
loope
xor
xor
pushl
and
sarl
in
sbb
and
js
and
test
daa
outsb
jne
or
jnp
push
jbe
fwait
dec
dec
inc
dec
inc
add
and
enter
call
dec
movsl
add
in
stos
ss
into
cli
xlat
test
mov
clc
aas
pop
or
inc
call
jp
adc
xor
inc
adc
outsb
push
jne
dec
fisttps
and
mov
xchg
hlt
dec
cld
ljmp
jne
cmp
and
fs
in
add
roll
into
mov
adc
les
jg
push
aaa
push
insw
inc
ret
sub
imul
dec
cli
sub
jg
jle
or
packssdw
ret
push
mov
cltd
jl
xor
gs
rcr
outsb
adc
add
push
dec
data16
xor
and
rorl
ljmp
add
and
or
or
pop
pop
pop
pushf
and
or
pusha
ds
repz
adc
nop
in
or
add
ljmp
jo
imull
pop
and
push
cmp
inc
mov
cli
call
es
adc
aam
add
js
roll
push
pop
sub
xor
fs
push
std
sub
outsl
push
sbb
dec
dec
xor
mov
push
rolb
das
inc
mov
sbb
mov
dec
insl
aad
dec
pushf
scas
mov
or
and
repnz
rorl
int3
jnp
sbb
xchg
ret
mov
mov
sbbb
hlt
add
mov
imul
bound
xchg
mov
xchg
ja
pop
push
pop
movsl
fs
ljmp
mov
insb
inc
jb
jp
bound
scas
push
mov
addr16
call
inc
add
outsl
fidivl
push
movsb
mov
xor
in
xor
lock
data16
dec
dec
pop
pushfw
cwtl
scas
mov
add
insl
aaa
add
or
inc
aaa
xor
out
hlt
dec
imul
mov
outsl
and
mov
icebp
xor
mov
repnz
lea
mov
popa
inc
inc
xchg
repz
sbb
cmp
push
inc
fnstsw
aaa
decb
push
jo
insl
insb
mov
sbb
jg
jmp
mov
jge
ret
cltd
repnz
and
and
outsl
stos
mov
cwtl
imul
imul
jo
jne
sahf
iret
cwtl
je
dec
stos
xchg
js
dec
pop
sbb
lock
inc
mov
pushw
popa
jno
bound
lret
movsl
into
adc
and
test
or
lcall
aaa
andb
xor
xchg
je
std
adc
and
fwait
jns
shlb
mov
lret
adc
dec
adc
push
decl
jg
jae
jbe
xchg
pop
cmp
es
add
testl
movsl
jecxz
imul
adc
push
ja
ljmp
fnstcw
mov
pop
fisubrs
dec
test
push
call
fwait
out
mov
jmp
jno
inc
pushf
mov
and
sbb
push
dec
dec
popa
or
jg
fisubrl
mov
into
imul
shll
imul
mov
mov
mov
jnp
cmp
dec
push
pop
mov
mov
outsb
insb
xor
jmp
ret
in
jns
cli
push
mov
arpl
sbb
sbb
ds
rclb
out
iret
inc
inc
sbb
imul
mov
shrb
shlb
movb
cmp
or
push
ret
arpl
inc
push
sar
pop
xor
push
push
imul
cmp
jmp
push
scas
dec
lcall
or
push
cwtl
mov
ss
fisttps
loop
int3
and
dec
fbstp
pop
scas
adc
dec
mov
inc
fs
ljmp
data16
ds
dec
pop
dec
ds
jp
fxch
sarb
xchg
xor
jmp
mov
insb
cld
mov
mov
ret
mov
dec
pop
fs
fisubrs
ljmp
les
ja
addb
fs
xor
je
mov
push
shrb
dec
sub
in
pop
cmpsl
movsb
std
es
stos
mov
xor
pushl
or
jl
pushf
je
and
or
inc
mov
pushl
mov
sub
sub
shrb
push
pop
adc
in
jb
incl
addr16
stc
es
mov
sbb
lods
add
lds
mov
popa
cmp
decl
sbb
shrb
add
add
push
sbb
loopne
sahf
imul
pop
xor
sub
push
xchg
aas
adc
cmp
incl
xlat
fimuls
adc
sub
jge
xchg
lret
outsl
inc
cltd
cs
mov
les
cmpsb
pusha
add
add
ficomps
xchg
push
mov
or
gs
push
mov
xor
pushl
and
stos
clc
adc
bound
add
dec
xor
and
adc
mov
scas
sub
sahf
shll
aaa
mov
push
iret
aaa
cwtl
mov
push
add
cwtl
xchg
xchg
cmp
cs
or
adc
cli
mov
pop
ret
add
add
in
std
test
imul
xor
mov
pushf
pusha
shll
or
xchg
lock
adc
push
cmc
mov
pop
in
or
dec
pop
cmp
cwtl
push
lods
sub
in
jp
inc
push
jmp
xchg
clc
jecxz
pop
mov
jmp
jl
ljmp
call
pop
jp
mov
je
push
push
push
or
or
loopne
loope
add
decl
roll
adc
scas
test
mov
ds
push
mov
sbb
cmp
decl
std
repz
int3
nop
clc
dec
inc
addb
and
pusha
scas
mov
xchg
subb
in
adc
movsb
inc
test
pusha
or
daa
inc
mov
sbb
in
aaa
enter
jmp
enter
mov
and
jp
add
lea
mov
sti
xchg
adc
decl
xchg
pop
arpl
add
push
js
fs
adc
decl
lds
sbb
jp
add
shrb
dec
test
stos
pushf
popa
add
xor
cmp
incl
inc
outsl
ficoms
adc
inc
adc
test
incl
into
or
sbb
aaa
mov
insb
jno
inc
push
pop
push
xor
mov
sbb
mov
jns
dec
jmp
jno
push
enter
push
iret
jmp
add
decb
push
push
adc
mov
stc
pop
jo
cwtl
add
and
add
cld
cmc
add
adc
cmc
inc
adc
test
leave
pop
int3
mov
je
lock
xchg
enter
jns
subb
call
rorl
rcrl
add
push
pop
jo
lret
ret
xor
sbb
dec
das
mov
or
outsb
pop
call
ficompl
icebp
add
mov
xor
out
inc
xor
pop
jo
and
outsl
cli
fcoms
push
push
rcrl
jge
movsb
popf
mov
fwait
pop
ret
sub
push
push
push
jp
jecxz
jns
or
add
xchg
xchg
push
add
dec
xchg
jae,pn
cmp
mov
mov
dec
pop
xor
cld
int3
cmc
pop
fadds
hlt
or
dec
jmp
icebp
sbb
jmp
enter
add
adc
mov
arpl
or
ficoml
add
xor
dec
pop
iret
out
inc
sbb
or
mov
xor
dec
ljmp
jle
popf
in
add
xchg
idivb
mov
orb
mov
add
incl
call
negl
jecxz
mov
inc
loopne
inc
loope
jnp
arpl
or
shll
jmp
shrb
or
cmp
ffreep
pop
cmp
jb
ljmp
jnp
mov
or
push
xor
nop
pusha
lldt
int3
insb
dec
mov
inc
sbb
je
jle
mov
out
mov
add
or
shlb
pushf
into
pop
xor
aaa
std
ljmp
sub
xor
cmpl
lcall
dec
mov
call
jno
leave
or
and
inc
add
lcall
lods
dec
or
lcall
lods
jne
pushf
int3
push
jg
jl
sub
mov
loopne
lcall
stc
ret
fs
push
bound
jb
adc
sarl
ret
stos
shrl
mov
adc
idivb
mov
es
push
leave
adc
adc
jle
and
pop
cmp
jbe
cmp
xlat
sbb
mov
ss
addr16
sub
mov
out
xorl
xor
add
push
sub
mov
clc
movsb
push
jp
sub
cli
call
adc
and
lret
fwait
sbbl
out
inc
jecxz
or
iret
gs
add
and
jb
aaa
imul
inc
imul
adc
mov
outsl
xorl
mov
pop
sbb
inc
fwait
das
pop
arpl
xchg
andl
out
mov
pop
jle
loop
daa
pusha
jno
dec
pushf
ret
mov
outsl
push
cld
js
push
xor
test
out
cmp
pop
adc
ret
push
pop
mov
out
pop
rorb
xor
jne
leave
push
fistpll
xchg
clc
cs
rclb
popa
mov
mov
pop
xor
jae
jns
mov
mov
aam
jg
jmp
outsb
repnz
add
sbb
pusha
jecxz
mov
fwait
jmp
xor
and
repz
dec
jb
adc
imul
dec
inc
loopne
mov
add
lods
in
cmp
lahf
sub
stos
scas
enter
mov
and
xchg
sub
icebp
dec
stos
fisttps
andb
lea
dec
shrl
add
ficoms
roll
call
and
jnp
jg
add
push
ja
dec
push
cmpsb
ficompl
les
mov
pop
or
into
loopne
fwait
lods
jecxz
mov
push
inc
jle
dec
xor
xor
dec
ja
dec
in
jg
jb
xchg
pop
push
int3
cmpsb
mov
aam
aad
ret
and
or
mov
cli
and
mov
mov
add
dec
jle
icebp
and
inc
cmp
dec
xor
ljmp
xor
jecxz
movsb
js
je
jmp
jmp
lods
outsb
sub
sbb
icebp
jmp
and
push
or
nop
aaa
dec
addr16
xchg
dec
shlb
mov
lods
movsb
cmpsb
call
scas
add
imul
fistps
cmpsb
lock
loopne
ret
inc
jno
add
sbb
std
out
or
and
push
jns
sbb
lea
lret
mov
insl
push
add
rep
lret
pop
repnz
xor
inc
dec
jb
and
aaa
cld
ljmp
jne
enter
out
sub
mov
inc
arpl
mov
jb
inc
jns
lret
xor
jmp
das
adc
aad
xchg
punpckhdq
sub
push
xchg
xor
push
rsqrtps
dec
jb
lods
dec
sub
rcll
hlt
and
add
call
mov
call
mov
ret
pop
xor
lret
cwtl
lea
mov
bound
sub
bound
sbb
pop
pusha
in
mov
inc
call
adc
clc
fadds
jns
mov
mov
inc
movsl
push
das
mov
popa
out
shrl
mov
rcll
or
sbbl
loopne
adc
sub
repnz
lea
mov
push
push
xor
je
sar
repnz
or
inc
jmp
jle
decl
xor
jg
cmpsb
int3
das
sarb
mov
into
lcall
inc
or
fadd
pop
js
orb
fildll
ljmp
cs
mov
cmp
cwtl
and
es
fiadds
add
shlb
dec
js
adc
cmp
jbe
pushl
ss
dec
jmp
mov
ret
adc
ret
jg
jmp
test
push
test
push
dec
pop
mov
test
adc
addb
jmp
nop
aaa
sbb
dec
lea
rcl
loope
cmp
add
popl
cmp
cmp
sub
sub
pop
cwtl
in
push
jns
lahf
or
adc
test
pop
insb
mov
mov
jge
addl
mov
xor
jmp
std
pusha
ljmp
inc
lock
xchg
add
add
jbe
aam
jnp
sarb
push
jle
imul
adc
or
mov
pop
loopne
pop
push
or
or
dec
push
movb
add
in
push
jo
mov
in
inc
lcall
add
andl
dec
pop
add
jg
orl
jecxz
aad
decl
xchg
pop
mov
pop
lret
jns
out
in
mov
loopne
out
lcall
ljmp
mov
je
jb
adc
roll
jle
enter
jmp
sar
loop
test
lret
mov
imul
jge
movsb
and
js
outsb
lock
xchg
clc
insb
xchg
xor
mov
xchg
enter
hlt
mov
sbb
lret
sbb
movsl
sub
ljmp
cmp
pop
push
ret
adc
dec
mov
xchg
push
xlat
pop
incl
add
int3
shrb
jmp
in
mov
incb
mov
aas
xor
sbb
cs
jmp
xchg
sbb
or
add
xor
cmp
push
jmp
dec
int3
add
pushl
sub
inc
sbb
add
jo
jge
mov
jg
sahf
je
xchg
sbb
mov
inc
dec
or
cmp
loopne
sbb
je
in
daa
imul
icebp
push
mov
pop
push
daa
and
inc
xor
jb
fnsave
xor
sarl
cli
incl
inc
inc
nop
jmp
inc
aad
pusha
sub
xor
inc
rcll
pusha
mov
or
mov
or
jmp
lret
add
mov
imul
xor
shlb
pop
cmp
movb
and
sahf
loopne
jle
adc
xchg
std
or
les
jg
jo
shlb
ss
cmp
cwtl
or
clc
pop
js
popf
das
jecxz
jle
sbb
cmp
js
sbb
push
mov
or
adc
jnp
adc
andl
nop
rcrl
pop
cmpsb
and
decl
shl
ret
sub
cs
loopne
pop
dec
aaa
or
roll
jg
jbe
add
and
push
cmp
sub
xchg
pop
je
mov
test
fcoms
lcall
pop
or
lcall
xor
xor
sarl
mov
in
push
cmc
push
cmp
adc
add
and
inc
nop
add
ljmp
mov
dec
int
mov
adc
lock
mov
mov
popa
jbe
add
push
test
mov
lods
adc
ficoml
mov
sbb
jp
sbbb
sbb
dec
add
das
or
incl
ja
mov
mov
add
sub
mov
and
repz
andb
call
ret
mov
fisttpll
mov
mov
dec
inc
inc
sbb
out
scas
stos
pop
add
jecxz
insb
call
setae
leave
add
popa
push
fs
clc
call
cmpb
scas
ljmp
mov
das
repz
mov
daa
dec
mov
jbe
jl
aaa
std
fldt
repnz
ss
and
repnz
orl
mov
mov
das
cld
aam
dec
idivl
lcall
inc
stc
mov
lcall
pop
test
sub
pop
in
int
ret
sbbb
decl
xor
shrl
js
push
and
adc
sbb
inc
inc
sub
decb
mov
js
push
cmpsb
pusha
ret
stos
mov
or
inc
mov
pop
lock
mov
stc
add
ljmp
cmp
mov
pop
cmp
into
lcall
ljmp
inc
mov
sbb
pop
sbb
mov
lock
add
call
jne
inc
mov
add
gs
sti
push
inc
add
jl
lock
incb
mov
rcll
mov
pusha
or
into
pushf
add
fcmovbe
sti
in
jo
inc
fwait
or
mov
adc
cmp
mov
adc
subl
nop
mov
push
js
repnz
mov
add
mov
arpl
jmp
cld
cli
push
push
lea
mov
sub
push
mov
jp
add
lret
lock
je
push
sub
scas
add
icebp
sbb
adc
dec
xchg
popa
std
xchg
test
filds
ljmp
aaa
ja
jl
push
xchg
pop
xlat
inc
lret
or
fisttpll
ss
cmp
or
cmc
dec
lds
aam
fwait
mov
out
dec
mov
enter
cltd
and
jns
idivl
mov
lret
mov
aam
jmp
fsts
stos
cmpsb
inc
mov
pop
push
sahf
out
and
jns
rcrl
ljmp
ficompl
icebp
repnz
stc
mov
test
sar
ljmp
incl
fiaddl
test
mov
stos
insl
cmp
pusha
push
jmp
stc
sub
inc
in
xchg
push
int3
jae
push
int3
pop
sahf
add
cmp
imul
decl
jecxz
dec
xchg
jle
mov
pop
dec
in
add
lods
clc
pop
dec
xchg
addr16
push
dec
in
xchg
lcall
ja
inc
sub
aaa
loopne
sbb
std
scas
aam
movsl
pop
hlt
scas
or
pop
pop
dec
mov
test
sub
mov
jns
int3
mov
dec
jg
mov
dec
lea
cmpsb
aas
mov
lods
call
cmp
cmpsl
lahf
mov
pusha
push
pop
and
mov
adc
jp
push
inc
mov
ret
test
out
lcall
fistl
cmp
fdivrs
sub
push
xchg
and
mov
jb
inc
jno
rorb
or
sbb
adc
lods
pop
xor
outsb
cmp
hlt
sbb
lds
pop
and
inc
xchg
mov
add
adc
cmp
dec
popf
pusha
mov
sub
enter
lcall
xor
int
stc
push
add
or
push
mov
adcl
insb
mov
decl
or
and
xor
sub
push
jo
clc
xor
stos
not
add
pop
pop
dec
xor
push
lcall
shl
loopne
dec
hlt
loopne
loopne
add
flds
or
xchg
cmp
add
jg
ret
call
sbb
lcall
les
ret
lea
pushl
xchg
and
shl
inc
push
out
stos
mov
fiadds
cmp
bound
rcrb
cld
test
testl
scas
incl
jns
loope
dec
inc
in
arpl
xor
insb
cmp
cmp
lret
lcall
setl
aad
xor
cmp
ret
mov
cmp
dec
stc
xchg
flds
sub
cs
dec
fidivs
insb
xchg
cwtl
call
decl
aam
insl
push
xchg
adcl
jae
mov
push
pusha
lcall
push
sbb
inc
add
push
adc
add
pushf
xlat
scas
xchg
ljmp
inc
or
xorps
mov
jo
push
call
dec
sbb
push
and
and
decl
xor
mov
scas
add
and
lods
jne
jg
aad
pushl
mov
xor
popa
xchg
sub
cli
test
cmp
fsubrs
loopne
jle
rclb
lods
ljmp
xchg
addr16
xchg
mov
add
fsubs
cmpsl
jno
mov
loopne
popa
leave
xchg
dec
mov
adc
jb
dec
push
mov
and
push
and
call
pop
adc
sub
std
bnd
icebp
scas
pop
loop
loopne
dec
sarl
sbb
int
iret
ljmp
andb
add
dec
sub
add
movsl
loope
imul
scas
movsl
xchg
pushl
sbbb
jbe
push
in
scas
jl
cmp
bound
iret
divb
insl
cmpl
jp
and
subl
test
ret
std
push
call
xchg
cli
push
movsb
dec
mov
loop
mov
cmp
adc
test
xchg
in
loope
sub
out
in
ljmp
mov
pop
add
lret
xor
adc
scas
shll
cmp
dec
test
or
mov
push
pop
addl
mov
push
popa
lods
ja
xacquire
xchg
ss
cli
ljmp
pop
insb
stos
sbb
test
xchg
cmp
enter
scas
scas
push
cmp
mov
lar
mov
sub
js
pop
pop
clc
pop
mov
fmul
rcrl
pop
subb
stc
mov
mov
mov
pushl
out
lea
outsb
or
movsb
inc
add
je
mov
pop
cmpsb
int3
cmc
mov
pushl
cmp
mov
lahf
rol
out
fcoms
mov
cs
int
js
sbb
incl
je
daa
push
data16
mov
cld
cld
inc
fcmovbe
arpl
test
lea
out
imul
cmp
mov
aas
das
stos
hlt
sahf
pushf
andl
incl
filds
rolb
lods
push
sbb
lods
sbb
xchg
add
addb
or
or
push
mov
mov
packsswb
repnz
lcall
cmp
or
les
sbb
dec
xor
sbb
add
ret
lcall
inc
call
add
push
adc
xorl
cs
mov
mov
aas
daa
int3
lcall
fstp
push
xor
lret
sahf
inc
mov
call
in
sub
incl
jmp
sbb
jne
mov
dec
and
cmp
cld
decl
add
or
popa
ja
lret
cmp
or
jo
fstpt
mov
pushl
shrb
insb
xor
call
fldenv
or
xchg
in
sbb
xchg
or
cmc
and
push
movsb
cld
inc
push
sub
mov
bound
push
inc
ret
adc
mov
lcall
daa
xor
sbbl
xlat
sub
adc
mov
mov
and
inc
add
clc
adc
cmp
xchg
adc
jmp
push
xlat
int
or
out
and
sarl
aas
leave
rorb
jae
jmp
inc
gs
add
rolb
fstp
or
mov
xchg
dec
test
cmp
xor
xchg
lods
fsts
lods
jbe
mov
push
pop
sub
xchg
rorb
mov
data16
decl
scas
imull
sub
lcall
dec
je
bnd
movb
xor
pop
leave
sub
leave
xchg
push
pop
js
icebp
and
lcall
mov
popa
mov
movsb
dec
jecxz
xchg
adc
or
push
mov
lret
sahf
cmpsb
sar
ljmp
js
sbb
stos
aaa
pop
xor
in
rcr
push
loope
movsb
and
loopne
push
mov
jbe
inc
daa
mov
insl
ret
fisttpll
cmpsl
inc
dec
lds
add
push
xor
aam
ds
mov
add
in
shrl
dec
sbb
daa
cld
ret
inc
xor
aaa
dec
mov
dec
push
push
es
inc
sbb
lcall
iret
mov
hlt
mov
cs
ljmp
sar
out
sbbb
push
shl
fsubp
pusha
mov
xchg
rcrb
imull
lock
insl
ljmp
xor
mov
jbe
mov
or
xchg
orl
or
call
jns
add
aam
xchg
gs
push
ret
jge
dec
dec
inc
clc
fisubs
imul
inc
jne
fstps
and
insb
adc
cmp
mov
fmuls
ss
lcall
pusha
mov
out
cmp
cmp
ret
daa
ljmp
test
subb
pusha
sub
and
loop
inc
daa
sbb
pop
or
fcoms
xchg
mov
test
xorb
repz
cmp
add
cmp
jmp
inc
dec
outsl
dec
pop
cmpsb
lods
gs
dec
outsb
inc
push
adc
inc
stos
add
xchg
lahf
push
cmpsl
loopne
mov
shl
jo
sub
lret
push
cmp
xchg
push
stos
and
insb
out
sub
mov
mov
mov
adc
dec
clc
ret
das
jmp
ficompl
push
outsb
test
pop
clc
cmpb
lea
inc
test
out
rcr
hlt
and
cmp
or
or
decl
mov
je
into
xchg
adc
ficoml
fisubrs
pushf
or
std
out
xor
xor
scas
nop
xchg
stos
sbb
lds
daa
mov
ror
or
cmp
in
fcoml
xorl
jg
cs
adc
and
sti
sbb
mov
add
mov
pop
clc
call
ljmp
icebp
jnp
les
das
dec
jbe
jb
outsl
mov
loopne
xchg
jle
lcall
mov
mov
and
call
mov
xchg
pop
sub
pop
mov
adc
scas
loope
dec
and
loopne
xchg
push
xchg
dec
ja
push
aas
adc
lock
out
adc
shrb
sbb
decl
mov
outsb
icebp
cltd
jae
or
ret
adc
pushl
or
inc
dec
test
dec
adc
add
test
mov
jecxz
dec
dec
lret
xor
jns
loop
xchg
adc
or
ret
or
ds
gs
inc
stos
adc
push
outsb
popa
scas
lods
sbbb
dec
loopne
and
clc
jg
dec
sub
dec
imul
lock
repnz
jg
decl
jo
xchg
std
mov
repnz
mov
data16
and
dec
add
and
inc
inc
push
sub
xor
cmp
and
call
std
filds
ret
lea
repnz
adc
in
ja
rorb
xor
adc
es
xor
addb
pusha
mov
and
mov
add
cmp
dec
push
push
cli
mov
inc
das
inc
js
sub
das
xchg
mov
xor
insb
add
pop
mov
jmp
jle
adc
and
jmp
arpl
ja
ret
inc
into
into
adc
push
push
xchg
inc
incl
push
test
xchg
mov
lea
pop
xchg
push
pop
cltd
xchg
mov
inc
push
jecxz
shl
sbbb
gs
dec
xchg
ret
aaa
jmp
dec
dec
shr
dec
dec
dec
jnp
not
mov
and
lods
cwtl
ljmp
cli
jg
in
clc
test
in
xor
jl
cli
sti
xchg
jno
lds
mov
fcom
jns
fistpll
in
mov
mov
mov
mull
cmp
popa
add
inc
fimuls
push
push
push
ljmp
or
mov
inc
dec
mov
int3
mov
xor
push
pushf
decl
pop
lret
mov
out
lods
rclb
push
enter
dec
mov
push
and
decl
cmp
pusha
or
and
leave
jae
push
hlt
scas
jo
mov
push
mov
js
sbb
jo
push
inc
jg
xor
push
testl
sbb
xlat
sub
lcall
mov
leave
enter
adc
mov
fs
push
loopne
cli
jmp
nop
daa
mov
lret
inc
jo
and
dec
and
popa
fsubs
ljmp
lods
mov
pop
dec
and
lock
in
push
lcall
adc
lods
jl
and
xchg
mov
fs
xchg
pop
mov
sbb
jb
orb
pop
mov
call
jae
inc
lea
jo
push
pop
fwait
xchg
xchg
push
out
add
mov
xor
pushl
push
jg
leave
sbb
cmpsl
add
sti
orb
and
cmpb
mov
and
sar
js
arpl
xchg
cmp
test
shll
add
lcall
pop
add
push
enter
das
ljmp
jle
loopne
cld
xchg
rclb
sbb
inc
fbld
inc
mov
out
cld
jo
xor
xchg
mov
jbe
mov
and
andb
loope
test
ja
pop
pop
and
sbb
jp
int3
fbld
and
jg
lock
out
pop
push
ljmp
mov
jo
push
and
nop
bound
push
jg
gs
into
xchg
orl
cld
lret
aaa
fbld
testb
mov
inc
mov
push
sbb
pushl
or
pop
pop
ret
dec
mov
jb
nop
jecxz
loop
add
incl
js
lods
pop
shrl
ret
pop
test
sahf
xorb
rcrb
filds
outsl
sbb
jg
cltd
int3
enter
adc
rolb
in
push
aam
std
loop
xchg
push
pusha
cwtl
dec
jmp
sbb
cmp
rclb
xor
xor
or
adcb
scas
push
sub
mov
adc
pop
push
mov
jae
sub
lret
xchg
adc
sar
fwait
sub
or
test
pop
lods
add
fcomps
add
inc
lcall
and
iret
push
pop
leave
pusha
or
add
and
mov
adc
test
or
pop
dec
pop
rcrb
sti
fs
popf
bound
rol
mov
mov
fs
jmp
shll
sti
mov
test
or
cs
aaa
dec
jecxz
fcomip
loope
or
das
push
or
push
and
je
addr16
insb
mov
pushl
add
insb
add
dec
xchg
and
inc
or
push
neg
les
pop
popa
clc
xchg
addb
in
lods
mov
sbb
lret
imul
cmc
and
jnp
mov
jmp
ret
movsb
jo
fcomip
push
clc
cmp
lods
push
push
push
jo
dec
add
cmp
jecxz
inc
push
adc
call
test
mov
adc
orb
pop
ss
insb
sub
lock
fcomp
fsubrs
lock
test
nop
repnz
and
lcall
icebp
es
sbb
cs
xchg
cmp
cmp
cmp
movb
and
mov
imul
lcall
pusha
loope
insb
adc
aad
popf
pop
rolb
out
sub
adc
fwait
call
inc
cmp
dec
push
xor
shr
lahf
xchg
lds
fidivrs
add
fdivs
cli
lcall
add
mov
inc
pushf
pop
movsb
adc
out
adc
push
cwtl
sbb
movsb
out
dec
and
or
fnclex
clc
xor
push
mov
leave
xor
es
mov
call
pusha
sbb
xchg
jb
or
xchg
pop
or
dec
pushf
gs
ja
stos
rclb
jl
cmp
test
call
popf
btr
mov
push
cltd
mov
in
inc
testb
sti
dec
call
and
cmp
cld
sub
mov
add
out
xor
push
pop
in
movsb
insl
xor
lds
in
add
and
fnstcw
or
add
and
jo
out
push
mov
sbb
add
mov
mov
or
pop
incb
mov
mov
inc
inc
loop
leave
dec
push
out
lret
or
rol
popa
loope
xor
push
gs
cmp
rolb
mov
mov
loope
xchg
icebp
in
mull
mov
mov
shll
in
xor
addr16
xchg
stc
jp
adcl
js
pop
sbb
xchg
jle
pop
jg
xchg
add
call
out
cmp
push
ljmp
mov
sbb
xor
mov
pop
jne
jl
aam
sbb
icebp
mov
mov
dec
pop
jo
jmp
nop
lock
clc
mov
sti
test
inc
cmp
stc
mov
mov
jne
cmc
inc
sbb
lret
jle
stos
repnz
push
sbb
ljmp
xorl
ss
bound
nop
mov
dec
lock
sub
pop
imul
fbstp
cmp
mov
jp
int3
sarb
jno
add
es
inc
imul
sub
jo
jo
inc
add
lcall
mov
shlb
inc
in
and
leave
aam
cwtl
xlat
sbb
mov
mov
leave
ror
xor
es
xor
push
ljmp
xor
out
shll
js
rol
rolb
pop
subb
or
mov
mov
or
mov
test
sub
push
inc
popa
inc
inc
enter
pop
lods
adcb
inc
mov
xor
movsb
pop
sbb
mov
cmc
addr16
mov
or
popf
inc
insb
stc
sbb
daa
enter
sbb
ljmp
test
ljmp
mov
test
mov
sbb
scas
or
lcall
jmp
xor
sub
xchg
gs
mov
dec
das
xchg
fxch
mov
sahf
loop
decl
in
out
mov
mov
jp
lock
jp
mov
pop
js
repnz
loope
jg
mov
add
pop
push
inc
out
cmp
push
add
call
mov
mov
or
shlb
icebp
in
out
mov
loope
push
loopne
decl
lret
mov
and
insl
pop
icebp
outsb
aam
inc
gs
jl
loope
incl
addb
xchg
xchg
roll
xlat
lock
dec
sbb
pop
lods
data16
pushl
and
inc
pusha
call
lahf
pusha
ret
mov
ljmp
ljmp
push
mov
std
pop
or
and
daa
in
cli
cmp
rcl
xchg
inc
and
push
dec
call
mov
cmc
notl
dec
mov
bound
or
push
mov
ljmp
sarb
iret
andb
imul
sub
fdivrl
test
repnz
inc
mov
sahf
and
mov
push
inc
bound
lcall
mov
ljmp
loopne
sbb
mov
shl
inc
cmc
out
cli
shlb
push
fs
jae
fsubrs
inc
or
cld
fbld
mov
and
outsb
and
cmp
ret
xor
push
test
lcall
in
inc
lcall
sbb
add
pop
sub
xchg
mov
push
cwtl
movsl
or
add
mov
add
dec
push
push
iret
sub
xor
mov
cli
adcl
call
adc
les
aaa
adc
push
mov
adc
enter
call
rcrl
dec
arpl
adc
pop
in
inc
dec
test
mov
iret
jmp
dec
call
popa
ret
dec
jb
inc
roll
inc
cmpb
inc
incl
aaa
add
addb
hlt
mov
or
add
or
sar
jmp
nop
clc
mov
ret
mov
mov
dec
test
xchg
mov
cmpsl
pop
xor
jmp
std
cmp
dec
daa
fwait
xchg
push
aad
loope
cmpsl
loope
push
inc
adc
das
sub
dec
insb
mov
hlt
decl
push
cli
test
cmp
lock
mov
call
mov
or
and
jmp
mov
mov
adc
incl
jmp
cmp
or
push
and
add
cmp
push
call
pushl
fstl
imul
jmp
adc
sbb
ret
cmp
decl
outsl
mov
jle
push
cmpsl
fstps
jg
mov
and
neg
jmp
in
sbb
xchg
dec
lock
inc
jecxz
xchg
sbb
pop
pop
pop
das
dec
sub
jne
mov
std
jno
lea
lcall
mov
ffree
sub
dec
dec
adc
rorb
jo
xchg
sbb
sarl
cld
cmpsb
icebp
aad
mov
cwtl
fnstcw
jp
jne
add
pop
aaa
lahf
jo
adc
lret
xchg
xor
fistpll
test
ljmp
inc
push
dec
inc
mov
and
inc
outsb
lcall
cmpsl
add
jne
cmc
in
jae
mov
decl
iret
mov
pop
cmp
jae
mov
in
sti
jecxz
test
sti
add
pop
or
ljmp
inc
test
xor
or
and
or
jp
repz
jle
mov
fisttpl
aas
lea
lock
fisubl
sbb
push
out
insb
mov
loopne
test
fcomip
dec
stc
pop
icebp
push
adc
inc
mov
xor
xor
add
mov
jmp
xchg
mov
and
bound
mov
sub
scas
loope
ss
decl
jns
dec
fistpll
or
mov
xchg
jno
aaa
aaa
xchg
push
jne
add
call
jecxz
jno
dec
fidivs
jne
push
adc
dec
es
shrb
lcall
std
mov
add
xchg
popa
les
fildll
sarb
fisubs
jmp
lcall
or
mov
sub
xor
push
out
adc
mov
add
mov
pop
xor
decl
sub
push
test
enter
dec
faddl
mov
fadds
adc
mov
imul
push
pop
and
out
sbb
inc
testl
add
out
push
addr16
adc
into
mov
inc
mov
rorl
sahf
std
jp
jp
add
pop
scas
pushf
mov
mov
add
es
orl
sub
cs
sub
imul
sbb
and
or
push
mov
fcoms
jno
or
sar
mov
ds
add
rcrl
enter
aam
jg
or
ficomps
imul
sbb
push
arpl
into
lcall
sub
ja
xor
sub
rolb
decl
sub
movsl
sahf
cld
xchg
lods
insb
push
inc
push
in
sbb
lods
push
mov
lock
jne
jno
aaa
or
jle
lret
cwtl
aas
psadbw
mov
in
lods
nop
in
xor
popa
jp
imul
addr16
mov
lods
test
cmpb
push
add
adc
adc
push
shl
movsb
hlt
decl
lds
loop
dec
inc
cmp
gs
add
xchg
pop
test
push
lret
push
push
test
hlt
push
inc
adc
inc
push
dec
cli
mov
rcll
add
and
fldl
cli
stos
std
jmp
mov
xchg
shll
inc
xchg
cmc
cwtl
dec
movsb
pop
mov
inc
sub
mov
push
inc
xchg
add
inc
xor
pop
sbb
sub
repz
mov
or
inc
jp
and
pushl
adc
inc
jno
pop
pushf
push
shr
pop
mov
jne
les
aam
loope
cmp
incl
test
xchg
fstl
xchg
or
xchg
push
mov
xchg
xchg
mov
fldl
dec
inc
imul
xlat
subb
test
xor
xor
add
loop
sbb
add
cmp
mov
pop
add
inc
or
jg
pushf
xchg
pop
xor
data16
add
inc
jbe
icebp
jne
shll
mov
mov
je
sbb
and
or
dec
xor
jmp
mov
mov
xchg
inc
ficomps
jb
or
dec
shll
subb
lcall
jb
cltd
pushf
inc
lea
dec
int
mov
adcb
inc
cmp
fwait
pop
leave
or
inc
mov
cmp
pop
nop
pop
xchg
mov
inc
divb
add
or
cmp
enter
ljmp
cmpsb
xchg
inc
xor
cmp
mov
test
xor
add
pushf
aas
test
push
jl
push
inc
shrb
inc
mov
jp
outsb
cwtl
movsb
add
mov
pop
or
out
fs
lea
pop
shll
std
incl
test
mov
scas
and
dec
xor
cmc
aad
or
push
popa
sbb
fisttpl
popa
movsb
mov
adc
add
ljmp
jmp
add
test
jg
lahf
add
adc
adc
add
insl
mov
shrl
fwait
cmp
xlat
mov
adc
and
fmull
inc
fiadds
inc
aad
mov
insl
ds
and
nop
mov
and
jmp
cmp
sub
push
sub
out
lods
in
mov
mov
das
and
mov
xor
jae
jo
push
dec
pusha
mov
and
leave
add
incl
mov
cmp
fwait
add
stc
push
add
xor
enter
ljmp
jae
insl
add
into
cld
xlat
subl
iret
sbb
mov
outsb
or
bound
call
add
cltd
mov
add
adcl
je
shll
dec
inc
mov
imul
add
inc
call
scas
mov
add
adc
je
xor
incl
faddl
adc
into
mov
in
mov
cld
sbb
jg
push
cmp
xor
inc
and
scas
jmp
fistpl
xor
add
adc
push
ss
sub
out
ret
xchg
in
ret
std
icebp
mov
xor
test
repz
jle
sub
add
push
push
in
jg
outsb
mov
ss
imul
adc
clc
or
mov
jl
mov
xchg
adc
pop
mov
insl
addb
mov
pop
cld
lock
push
popa
loop
or
call
mov
push
mov
and
mov
popl
push
outsl
icebp
jno
pop
mov
and
dec
decl
int
push
add
sub
stos
add
pushl
icebp
mov
je
cld
fcoms
sub
inc
mov
adc
jmp
in
jbe
pop
decl
add
cmp
clc
fisubl
mov
iret
iret
mov
lds
shlb
dec
push
dec
jno
mov
data16
push
cmp
test
ljmp
and
lcall
cmp
and
out
fwait
in
ds
daa
mov
push
sub
mov
pop
call
gs
stos
lock
or
cmc
ljmp
xor
push
mov
cmp
xor
xor
in
loop
outsl
jg
mov
testb
dec
and
std
negl
jno
adc
loope
pop
inc
sar
pop
sub
sub
add
push
nop
out
xchg
outsl
gs
or
jmp
or
push
test
push
jns
cmpsl
and
aam
or
lahf
sub
mov
jbe
push
call
outsb
add
xchg
xchg
cmp
int
lods
ljmp
aaa
xchg
lods
addb
addr16
or
xor
stos
dec
or
mov
and
fadds
mov
call
ljmp
push
adc
add
mov
mov
inc
xchg
add
pop
shl
data16
lcall
jns
push
sbb
sbb
add
cmp
aas
ret
test
loopne
pop
faddl
call
addr16
iret
call
sbb
xchg
or
in
mov
and
mov
cld
mov
lock
inc
add
mov
or
mov
je
push
cli
mov
stos
aam
hlt
adc
jl
pusha
add
in
mov
sti
dec
sub
addl
add
out
push
insl
movsb
adc
push
inc
dec
jb
mov
bsf
cmpsb
lret
das
loopne
mov
mov
cmp
mov
popa
dec
lods
push
aam
pop
ret
pop
fisubrl
sbb
cltd
jo
mov
dec
addr16
mov
imul
es
mov
pop
jg
inc
call
int3
mov
loop
pushl
pop
cli
cmpb
jle
add
push
stos
dec
xchg
and
inc
pop
aaa
clc
lret
pop
inc
mov
sbb
xor
inc
das
mov
push
cld
xor
xor
cmp
and
imulb
mov
ret
call
outsl
loopne
push
mov
js
outsb
pop
in
and
repz
rolb
dec
outsl
add
mov
pop
push
enter
cli
jmp
outsb
fdivrl
call
jg
and
in
lods
jle
ljmp
outsl
hlt
or
xchg
mov
inc
jne
adc
sub
jo
and
push
jb
jmp
sbb
loop
inc
lret
insl
loopne
call
and
mov
add
jp
dec
popf
add
cli
outsb
popa
sti
adc
dec
xor
dec
ja
mov
mov
pop
pop
rolb
push
xor
test
in
repz
bound
pop
xchg
inc
pusha
cmp
push
xchg
cmp
push
fwait
cli
add
icebp
rcr
inc
inc
mov
icebp
xchg
push
pushf
sbb
add
add
cmp
xor
mov
repz
push
xchg
jno
lock
cmp
xchg
cwtl
ljmp
add
sahf
jg
jge
arpl
imul
cmp
sahf
inc
pop
fsub
ljmp
cmp
pop
imul
imul
and
add
pusha
test
mov
sahf
push
sub
pop
mov
mov
push
daa
add
pop
mov
xor
dec
dec
pop
leave
jo
loop
pushl
aaa
gs
int3
dec
mov
ret
cmp
mov
scas
push
xchg
cmp
jg
mov
mov
fisttpl
pop
int3
inc
inc
push
js
mov
iret
xchg
bound
push
pop
sbb
push
push
xchg
cmp
sti
or
inc
and
fidivl
enter
or
dec
jge
or
into
mov
jns
rcll
push
fsubr
mov
mov
sub
and
loop
mov
loopne
call
sbb
mov
sbb
in
jne
enter
cltd
ss
dec
xor
insb
jb
cmpsl
test
jne
arpl
decl
pushf
jae
cmp
mov
in
xchg
mov
or
add
dec
rcr
inc
adc
fdivrl
adc
js
inc
mov
mov
dec
cld
mov
into
dec
dec
nop
pop
mov
inc
cmp
dec
int
push
decl
jmp
ljmp
fistpll
aam
inc
mov
inc
jno
js
inc
rclb
fcoms
inc
dec
xor
jne
ljmp
daa
pop
push
inc
jmp
mov
fsubs
xchg
jmp
gs
leave
mov
mov
mov
lret
cmp
fwait
adc
xchg
push
add
jno
sar
dec
les
mov
push
xor
shr
mov
gs
inc
in
loop
outsl
mov
jg
mov
pop
ljmp
sub
stos
mov
fst
sub
orl
inc
ss
jo
outsl
call
mov
dec
xor
jp
scas
movsb
inc
and
jg
shl
lret
lds
ss
loopne
or
std
add
pop
lret
pop
xorb
hlt
iret
pop
call
mov
insb
push
inc
gs
sbb
fwait
test
inc
push
or
lcall
push
jp
mov
ljmp
inc
xor
lret
loop
xchg
inc
push
shl
push
repnz
xchg
jl
outsb
incl
jle
mov
cltd
dec
call
mulb
pop
loopne
push
and
or
jl
add
lcall
dec
push
jbe
aaa
jbe
push
adc
jg
icebp
xlat
adc
and
pop
inc
cmp
stc
jmp
xchg
push
adc
testl
insl
test
xor
fwait
cmpsb
outsl
ds
jl
daa
cmp
add
push
ds
repz
cmc
lcall
jg
leave
daa
or
inc
jae
enter
data16
cwtl
aaa
clc
dec
inc
imul
insb
jo
jg
xchg
jge
mov
lret
and
ljmp
stos
inc
ja,pn
movsl
or
subb
pop
paddd
sarb
call
lds
icebp
roll
jne
push
and
dec
jg
inc
inc
aam
aam
push
push
pop
ljmp
ficompl
or
mov
lret
xchg
jg
add
push
ss
test
dec
jbe
aam
add
dec
inc
dec
ss
call
inc
subb
and
in
cmpsb
inc
mov
imull
mov
aad
shlb
ret
mov
shrb
cld
mov
outsl
or
pusha
adc
xor
ss
fistpl
js
aam
mov
xchg
movsl
bound
fcomps
jno
ja
dec
inc
push
arpl
rcll
mov
sub
inc
sbb
fisubl
xchg
jne
dec
jne
test
inc
ret
inc
and
mov
push
cwtl
and
or
push
ret
mov
stos
pop
out
lcall
std
mov
inc
dec
repz
iret
adc
mov
outsb
xchg
sbb
sbbl
push
mov
and
jg
mov
dec
pusha
or
int
add
sbb
xor
xchg
lds
int3
inc
add
dec
inc
mov
andl
leave
adc
lock
push
or
imul
xchg
js
test
push
and
ret
dec
mov
or
and
push
push
xor
push
or
mov
pusha
sbb
and
call
pop
inc
jns
andl
adc
js
js
jmp
jnp
add
inc
xchg
sar
cli
leave
iretw
shlb
std
sbb
outsb
ljmp
xor
aas
mov
cmpsl
xor
decl
xchg
push
xor
pop
rorl
xor
sbb
stos
sub
inc
sbb
sahf
mov
cmp
js
add
adc
push
jnp
xchg
sub
add
push
jmp
dec
jno
or
fdivr
xchg
lods
sbb
nop
add
mov
or
out
out
cmp
cmp
jmp
inc
sbb
dec
mov
mov
les
xchg
xor
call
sbb
jo
xchg
inc
lret
sub
xorl
repz
push
or
sbb
decl
inc
call
filds
push
movsb
mov
fldcw
dec
nop
jge
aas
fistl
decl
jbe
jecxz
mov
mov
sarl
shrl
jg
xchg
cmp
or
cmpsb
ret
arpl
mov
rol
jae
bound
cld
outsl
adc
fcmove
leave
sbb
fisubrl
insb
dec
pushf
pop
adc
mov
and
ljmp
mov
incl
mov
jae
dec
cltd
inc
inc
test
aaa
mov
aaa
inc
scas
sbb
mov
inc
xchg
add
mov
hlt
cmpsl
inc
sti
fwait
jae
jg
loopne
pop
sbb
jbe
lcall
jae
clc
inc
adc
lcall
int
push
out
es
mov
data16
loopne
push
cmp
adc
fcmovu
xchg
int
jbe
shll
and
and
int3
pop
ljmp
add
and
ljmp
add
test
es
jg
out
sub
lret
mov
loope
pop
sbb
add
ljmp
ror
test
or
inc
sbb
sub
jnp
in
loope
decl
mov
lret
sahf
insb
nop
mov
mov
cmc
inc
fstl
and
loopne
mov
add
insb
adc
adcl
cli
pop
cmp
cltd
push
sub
mov
jo
sub
dec
dec
mov
cmp
push
jg
push
push
out
and
sub
fcomip
enter
cs
mov
stc
add
pop
out
incl
xor
pop
add
xor
pop
jecxz
cmp
out
cwtl
sbb
mov
ret
incl
cld
adc
sub
push
dec
rclb
pop
dec
sub
movsl
jne
insl
test
cs
or
mov
dec
adc
adc
pop
push
cmpl
orb
adc
out
adc
andb
jne
dec
mov
inc
outsl
cmp
dec
sbb
add
sub
jmp
insl
cmpl
and
push
xchg
adc
jne
and
cltd
fcoms
jmp
out
mov
clc
push
push
add
mov
rcrb
loopne
mov
cmpsb
adc
addb
and
adc
add
mov
iret
ljmp
sar
and
sbb
sub
out
inc
mov
push
stos
mov
lcall
dec
push
js
mov
insb
lahf
push
mov
or
inc
or
pushf
adc
sbb
and
mov
incl
loopne
sar
or
push
ja
imul
lods
inc
or
inc
xchg
sti
ret
pop
test
mov
leave
jle
mov
jb
out
loopne
loopne
ljmp
mov
cmp
imul
test
scas
mov
sbb
ret
or
sbb
rol
dec
cmc
jg
lods
lds
mov
cld
leave
cmp
int3
aad
hlt
dec
orl
jno
scas
pop
dec
aad
fisubl
lcall
push
inc
inc
mov
outsb
xor
lock
pushl
pop
fimull
dec
insb
cmc
sbb
fistpll
pop
hlt
decl
mov
stos
cwtl
push
add
pushf
mov
orl
dec
and
mov
push
aas
mov
sbb
shll
push
and
stos
xchg
lahf
test
add
xchg
rolb
dec
into
fwait
or
imul
cld
ljmp
mov
shll
test
aam
mov
aaa
jnp
stos
gs
and
push
push
cli
adc
fwait
pop
loopne
pop
xor
or
mov
dec
jnp
iret
jg
and
mov
cmp
and
cli
decl
push
inc
test
lcall
push
addr16
adc
shll
js
xor
loope
ret
pop
ja
xor
icebp
and
push
popa
lcall
into
add
incb
pop
cli
lahf
mov
push
cmpsb
xor
mov
pop
out
es
xchg
mov
fdivrl
adc
dec
fidivrl
arpl
jo
sahf
rclb
filds
outsl
fbstp
cmc
inc
dec
dec
add
out
repnz
mov
inc
add
pop
repnz
mov
jl
sub
out
dec
dec
cmp
fwait
test
mov
sub
inc
lcall
cmp
mov
popa
lret
aam
call
sbb
cs
mov
ss
cwtl
mov
nop
int3
fcmovbe
add
gs
mov
lods
gs
or
sub
dec
jg
aad
inc
mov
sub
test
sub
call
js
mov
fisubl
aas
ja
cmpsb
mov
sbb
lret
push
fsts
and
sub
push
rolb
jo
cli
mov
rolb
lret
scas
insb
sub
sti
mov
mov
pop
xchg
outsb
sbbb
dec
mov
push
dec
out
inc
imul
pushf
jmp
push
jae
outsb
scas
lock
push
mov
mov
mov
loope
popa
ljmp
pop
adc
outsb
mov
cmp
push
ja
jo
mov
dec
pop
ss
js
fsts
adc
cmp
xor
lock
mov
sbb
inc
cmp
fadds
notb
repz
add
decl
arpl
mov
or
inc
sbb
ljmp
jb
sbb
popa
xchg
ret
shrb
xor
loope
test
arpl
repz
push
jbe
fcoml
push
cmp
sub
sti
mov
xchg
out
mov
cltd
sbb
push
mov
push
add
push
xor
out
and
dec
push
or
insb
stc
xchg
ret
and
push
sbb
dec
xor
cmp
jmp
scas
clc
incl
or
sub
ds
addb
scas
mov
push
pop
mov
or
pop
lds
stc
cmp
mov
das
mov
pop
enter
in
sbb
jl
int3
xor
in
sub
lahf
dec
insb
sub
leave
pushf
into
xchg
xchg
dec
ljmp
cmp
lahf
and
cmp
push
test
pusha
xor
mov
push
push
inc
xchg
jmp
mov
jnp
pop
push
sub
je
dec
mov
inc
ds
sub
jns
stc
and
call
ret
add
sahf
sub
js
std
add
cwtl
cmp
ss
inc
adc
cmp
jmp
mov
add
mov
and
cmp
nop
popa
ret
mov
cmp
ljmp
xor
js
inc
rolb
mov
push
and
push
adc
loope
sbb
pushl
or
and
push
sub
mov
add
push
scas
lahf
sbb
ljmp
pop
mov
ljmp
add
jp
out
cmp
mov
add
cs
mov
incl
sub
or
repz
and
push
push
mov
mov
stos
pop
sbb
pop
cmp
incl
jge
or
inc
and
add
clc
adc
ljmp
jmp
loopne
lea
popa
mov
sahf
adc
aas
mov
sti
cwtl
loopne
decl
cmp
xchg
sbbb
sub
les
mov
cli
jle
cli
ret
mov
call
mov
insl
cmc
decl
pop
sbbl
insl
adc
mov
mov
mov
push
mov
cli
lcall
cmpsb
add
xor
jecxz
negb
pop
lcall
mov
pop
cmp
leave
sub
inc
cmp
out
xor
pop
or
in
imul
incl
mov
std
dec
adc
xor
xor
add
inc
shrl
stc
inc
push
xchg
pop
mov
xchg
cmp
iret
xchg
inc
imul
xchg
inc
fmulp
cmp
push
lcall
jmp
add
jne
cmpsl
push
mov
movsb
lcall
mov
daa
sti
inc
jg
sbb
and
cmc
sub
cmp
cmp
add
incl
adc
in
xchg
test
les
cmp
xchg
cld
sbb
mov
adc
sub
decl
jo
sbb
mov
add
xchg
jl
sub
jle
cmp
test
das
sar
in
xchg
rorb
adc
imul
outsb
lahf
aaa
dec
dec
lcall
fwait
mov
pop
fwait
sub
bound
and
daa
mov
fidivs
push
and
xchg
mov
lcall
jg
xchg
loope
mov
xor
cmp
jmp
repz
xchg
fsubs
mov
xchg
add
mov
jl
les
add
add
lcall
jb
insl
jecxz
call
xchg
inc
mov
mov
or
push
into
ja
or
adc
adc
xchg
or
call
popa
into
or
loope
or
xor
or
clc
add
sub
mov
add
incl
xor
xor
mov
add
push
push
inc
cmp
ljmp
jno
jne
add
dec
add
flds
xchg
clc
push
cmpsb
inc
sbb
or
fistps
test
and
or
jb
pop
test
lods
xchg
call
fsubrl
stos
dec
call
jge
outsl
pop
xchg
inc
cmp
inc
cmp
decl
lock
mov
mov
cwtl
add
mov
pop
cld
inc
mov
inc
test
mov
inc
add
je
dec
repnz
xchg
addl
scas
clc
push
fsubrl
dec
pop
arpl
sbb
cmp
std
cwtl
mov
inc
es
subb
stos
sub
fcoml
push
inc
jg
iret
xor
pop
mov
add
push
and
adc
fbstp
sub
cltd
aam
push
cmp
xchg
mull
movsl
xor
ret
xchg
inc
fdivr
ljmp
push
lea
call
pop
dec
stc
lock
mov
test
xor
mov
jb
dec
outsl
jo
add
out
push
aaa
loope
aad
mov
inc
add
cmp
jg
inc
push
push
leave
ret
dec
adc
dec
loopne
pop
inc
adc
test
mov
push
mov
pop
rolb
call
shlb
inc
pop
jnp
addr16
and
pushl
dec
cmp
sbb
into
jp
pop
adc
ja
shrl
incl
push
or
fiaddl
cmpsb
push
call
cmp
mov
mov
dec
add
mov
shll
pushl
jmp
jl
dec
mulb
push
std
jne
mov
rorb
sub
ret
call
or
mov
js
sar
insl
test
int3
sub
fistpll
mov
push
push
rorl
cmp
lcall
fstps
repz
mov
lock
fimuls
cli
push
sub
push
mov
ret
scas
pop
fxch
jmp
mov
arpl
dec
inc
inc
ljmp
mov
fnstcw
in
xchg
push
lahf
cmp
out
dec
fsubr
and
or
inc
cmp
add
and
add
and
stc
jns
inc
sahf
add
je
or
or
jne
mov
shrb
push
add
sub
jns
jecxz
enter
sbb
jns
sub
cmp
lahf
add
stc
and
add
and
add
jnp
in
dec
mov
jl
orl
add
dec
mov
mov
sub
addl
mov
pop
jns
cmp
add
cmpsb
xor
str
fdivs
jl
jg
xlat
mov
lcall
xor
dec
add
push
out
xor
sarl
scas
dec
ret
mov
push
sbb
xchg
sbb
mov
cmp
add
jbe
mov
lock
or
fs
pop
ss
jae
xchg
out
dec
inc
push
cld
cld
pusha
jg
cmp
or
int
sub
call
mov
test
inc
sbb
fldpi
pop
test
inc
fidivrs
xor
aam
mov
inc
in
pop
mov
push
ds
lret
out
dec
nop
fstps
cmp
ljmp
pop
mov
dec
aaa
adc
jno
ljmp
sbb
enter
lahf
inc
mov
sub
mov
jo
or
mov
jg
sbb
jmp
stos
sub
mov
jb
sbb
dec
cli
sbb
push
inc
clc
adc
enter
mov
push
jo
cmp
jle
ljmp
and
sti
int
lret
sti
mov
push
push
dec
fs
xor
push
loopne
pop
fsubr
lcall
loopne
shlb
fistps
mov
dec
sahf
imul
add
mov
incl
sub
jecxz
push
add
cltd
or
and
dec
xor
jns
das
adc
cmp
stc
xor
outsb
mov
xchg
in
out
in
outsl
mov
outsl
xor
push
or
lret
shl
test
adc
data16
lea
xor
inc
jns
fnop
repz
dec
ret
push
aas
xchg
lds
xchg
mov
inc
jns
stos
mov
mov
cli
test
lea
gs
xor
sub
loopne
ja
rclb
jp
inc
js
or
inc
lcall
adc
sub
js
fisubrl
xchg
push
jl
ljmp
cwtl
sbb
decl
ficomps
pop
inc
inc
sbb
cmp
loop
inc
out
inc
push
clc
inc
xchg
mov
push
cmp
test
mov
addb
xlat
loopne
call
aam
mov
and
cmp
add
jbe
icebp
mov
gs
xor
sbb
mov
or
sub
test
stos
or
je
xchg
mov
ljmp
andb
fists
int3
fadds
jmp
or
add
cmp
dec
mov
jge
icebp
flds
outsl
js
xor
repz
push
insl
xor
add
and
call
lock
mov
daa
pop
add
scas
pop
ret
aas
int
in
insb
ds
sbb
std
or
sbb
int3
mov
mov
inc
xor
cmp
movsb
dec
add
pop
add
jg
or
cli
imul
mov
push
mov
insl
sar
decl
loop
cmp
shll
mulps
bound
dec
ret
loop
dec
push
mov
dec
jo
add
fcomps
out
mov
lret
xchg
mov
imul
mov
cli
mov
rolb
enter
mov
pop
mov
inc
stos
add
jg
stos
outsl
pop
inc
dec
jno
dec
fdivl
sbb
cltd
int
flds
push
lret
mov
mov
out
push
lahf
dec
sahf
sarl
pusha
iret
mov
shlb
imul
push
xor
mov
ret
insl
xor
inc
clc
mov
mov
ljmp
hlt
or
push
repnz
mov
push
inc
pop
fldcw
outsl
inc
inc
xor
pushf
testb
push
jecxz
pop
incl
adc
aad
adc
aas
mov
or
std
imul
jle
ficomps
mov
push
push
fs
dec
dec
js
add
add
arpl
gs
daa
adc
js
push
cltd
aaa
push
call
push
and
lcall
add
cld
push
pop
fdivl
lcall
inc
add
and
adc
jae
mov
dec
test
bound
mov
dec
sbb
test
lcall
int3
call
fwait
aam
repz
call
ficoms
incl
sub
mov
movsl
stc
pop
xlat
adcb
repz
sbb
or
push
shlb
sahf
sub
push
and
mov
and
pop
dec
insl
mov
pop
push
cmpsb
inc
mov
icebp
fdiv
mov
scas
mov
xchg
and
mov
imul
mov
lcall
inc
add
dec
loop
pusha
sbb
loop
dec
mov
add
dec
xor
mov
movsl
jbe
inc
sar
jg
daa
push
sub
jmp
mov
movsb
movsb
insb
lock
mov
hlt
shr
pop
movl
dec
add
inc
mov
enter
sti
sarl
mov
xchg
rcll
mov
ljmp
pushf
int
adc
jl
xor
roll
ds
ds
cltd
outsl
lds
adc
add
orl
lcall
xor
push
push
jno
mov
jo
pusha
cmp
pop
mov
aam
decl
mov
fsubrl
dec
mov
mov
lcall
es
dec
sub
push
andl
icebp
call
and
gs
xchg
lcall
enter
mov
mov
add
mov
inc
inc
add
push
in
rclb
insl
push
imul
loope
pop
cld
call
cld
inc
mov
dec
mov
jecxz
arpl
pusha
jno
fisubrs
rcll
je
imul
push
pop
lret
icebp
cmpsb
mov
fs
mov
xor
pushf
ficoms
decl
xor
fnstcw
pop
xor
hlt
cli
sub
pop
ljmp
xchg
push
aas
push
in
clc
iret
hlt
stos
in
cwtl
lcall
pushf
movsl
aas
pop
add
inc
push
movsb
dec
mov
decl
mov
push
jecxz
int3
and
jne
xchg
inc
push
into
sub
cli
ljmp
leave
test
sub
xor
add
int
ljmp
or
cmc
loopne
pop
dec
call
cmpsb
incl
out
test
xchg
xor
lret
cltd
lret
sbb
jns
repz
jne
lds
in
pop
adcb
push
cmp
sahf
rorb
dec
pop
fadd
pop
cli
std
cwtl
dec
inc
dec
jl
ficoms
hlt
pushl
lea
or
stos
test
insb
shl
pop
xor
lcall
xchg
push
repz
xor
pop
fiadds
xor
call
nop
test
rorb
mov
push
mov
jmp
dec
out
mov
in
aad
fildl
enter
mov
ret
sbb
lcall
push
jp
xor
jmp
dec
outsl
pop
mov
xor
ljmp
add
gs
inc
sub
ret
lahf
aam
dec
aaa
outsl
fcomip
iret
aaa
push
push
fwait
cwtl
mov
mov
shr
mov
mov
cmpsb
jg
iret
lret
pop
mov
mov
int
ret
fst
mov
inc
pop
dec
stos
hlt
pop
aaa
inc
inc
or
aam
mov
ljmp
mov
lds
into
stos
and
add
cli
adc
enter
addl
sahf
es
mov
shlb
outsb
mov
arpl
adc
dec
sarb
sahf
aam
and
decl
repnz
and
mov
xor
out
jne
aam
jo
lea
xchg
dec
jp
sbb
fildll
jl
inc
es
mov
mov
xor
xchg
xor
mov
popf
imul
xor
arpl
sub
inc
outsb
and
jg
lret
xor
inc
fwait
lock
xor
adc
push
addr16
sbb
int
pop
mov
xor
xor
rcrb
inc
push
jg
fistpll
inc
push
inc
xchg
sbb
add
inc
mov
pop
push
in
and
clc
and
mov
dec
sub
je
inc
jl
push
or
dec
jae
lret
dec
call
clc
mov
sub
add
dec
out
stos
loopne
pusha
nop
nop
iret
jnp
lock
cmp
fldcw
into
adc
cld
push
ja
pop
pop
add
cmp
sub
sub
loop
sub
aas
fwait
lock
push
push
loopne
cmc
dec
imul
ljmp
add
sahf
jbe
mov
pop
pop
sbb
mov
shlb
pusha
sbb
sbb
mov
add
xlat
inc
dec
lret
and
ljmp
call
jne
outsl
jae
xor
fwait
mov
test
lods
push
mov
lret
lret
lret
stos
lods
xor
fisttpll
sub
add
adc
jne
cld
push
ret
movsb
fldt
mov
add
lret
add
test
xlat
icebp
sbb
sbb
push
inc
lds
mov
sub
jne
or
push
leave
fmuls
jl
jb
stc
dec
sahf
jnp
fimull
jmp
sbb
xor
call
mov
inc
xor
add
popa
jmp
jmp
xlat
das
imul
mov
imul
xchg
int
fsts
dec
and
out
insb
add
aaa
jne
flds
repz
pushl
xor
mov
sbbl
int
mov
inc
jmp
enter
jbe
decl
cltd
int
dec
push
cltd
push
xchg
popf
mov
adc
fsubrs
fmull
dec
jo
jp
loope
ljmp
sub
dec
inc
call
mov
xor
xchg
aam
and
fsts
sahf
inc
sub
inc
lret
cli
add
push
push
push
dec
push
js
addl
mov
pop
add
jmp
test
lea
lcall
pushl
into
xchg
push
ds
sbb
lock
inc
inc
mov
cmp
adc
and
out
das
pop
call
loope
xchg
xchg
xor
and
mov
mov
sbb
mov
mov
jle
rolb
xchg
nop
xchg
xchg
rolb
jmp
sahf
ret
jl
sub
inc
pushl
je
jmp
leave
sbb
jb
loop
adc
or
es
aam
fisubrl
sbb
sbb
xlat
dec
cmp
push
jg
xchg
sub
test
ds
rcrl
popa
mov
add
lods
sbb
push
and
or
ret
xchg
sub
mov
or
push
stos
es
xor
sub
out
ror
sahf
repnz
push
aam
lea
cli
jmp
lret
dec
jle
add
add
jmp
fidivl
push
mov
fs
dec
decl
jo
lcall
repnz
cmp
adc
ljmp
and
fidivl
or
cmpsl
and
adc
roll
mov
popa
and
xlat
fiadds
inc
adc
dec
add
fwait
iret
out
xchg
lock
mov
add
mov
fcmovnbe
mov
xchg
add
mov
jbe
daa
out
movsl
add
shlb
lock
dec
std
iret
lahf
outsl
nop
scas
ja
push
mov
add
push
ss
sar
add
cmp
cmpb
cld
pop
pop
xchg
sub
jnp
or
or
sbb
inc
filds
cmp
repz
test
inc
dec
lock
sub
aam
mov
out
adcl
mov
shlb
nop
ljmp
mov
sahf
add
insl
push
dec
and
decb
js
add
inc
add
or
mov
loop
jle
out
pusha
insb
inc
pushf
popf
ja
pusha
add
adc
sar
jmp
push
xorl
shll
shr
sub
pop
pushf
push
push
es
dec
xchg
mov
test
add
dec
mov
xor
mov
inc
mov
xchg
rdpmc
out
idivl
outsb
lods
aas
dec
das
out
lea
or
xchg
cmp
insb
dec
dec
pop
cmp
ret
inc
loopne
pop
sar
shrb
cmp
push
push
push
jg
repnz
inc
inc
ror
clc
jge
jmp
jp
divl
mov
push
fwait
ljmp
paddsb
jp
and
ja
mov
int3
shl
inc
push
push
mov
fs
or
jns
add
jg
lwpval
jns
mov
out
xchg
mov
push
xor
ja
imul
imul
data16
repnz
call
mov
clc
incl
inc
jg
mov
icebp
mov
imulb
mov
inc
push
test
cmpsb
lret
test
and
mov
cli
xor
pop
push
std
jo
add
push
sbb
aam
jl
adc
inc
push
mov
mov
fists
test
adc
ficompl
subb
pop
adc
into
cmove
jmp
ds
xchg
pop
repnz
pop
inc
repnz
jle
pop
push
test
xchg
push
xchg
xor
inc
xchg
aad
leave
add
dec
dec
and
jl
push
sbb
cld
cmp
add
lahf
add
adc
and
cwtl
fisttpll
and
add
mov
lcall
lcall
add
fwait
cmpsl
in
dec
add
inc
mov
popf
adc
push
fldl
popf
xchg
and
enter
pop
mov
je
sahf
push
sub
or
inc
ds
incb
add
mov
daa
jmp
scas
push
xchg
int3
xor
fsub
jp
xor
jmp
in
adc
sub
outsb
inc
dec
popa
mov
or
imul
mov
jo
or
test
inc
out
jbe
push
fadds
push
xchg
fs
lret
pop
xchg
adc
ret
jae
test
push
negb
mov
cld
adc
inc
cmp
lret
call
sub
mov
cmp
bound
inc
fucomi
pop
jmp
jmp
push
xchg
pop
jae
bound
mov
shlb
pop
mov
inc
xor
jp
dec
push
inc
mov
subb
dec
imul
lods
ja
aaa
notl
dec
ret
push
and
xchg
sbb
sbb
cmp
mov
dec
fwait
inc
clc
insl
mov
mov
jg
rolb
int
mov
adc
pushf
lods
into
shr
add
popa
fnstenv
cwtl
xor
xor
adc
xchg
dec
sbb
js
pop
test
push
cmp
shrb
sbb
ret
lcall
outsl
add
arpl
dec
or
cltd
dec
test
cmp
jmp
fidivrs
rclb
ret
dec
dec
mov
jno
inc
mov
paddd
call
outsb
movsb
mov
dec
es
xlat
ficompl
cld
cld
or
and
dec
inc
dec
insb
or
sub
mov
pop
push
repnz
outsl
jg
adc
lcall
sub
cli
push
fldl
call
inc
fadds
out
lcall
pop
call
mov
icebp
int
or
fidivrl
inc
call
incl
and
sub
mov
mov
aas
xor
mov
inc
std
sub
rol
push
add
xorb
sub
pop
rorb
iret
repnz
jg
test
mov
inc
fldcw
hlt
cwtl
lock
arpl
cmpsl
adc
push
xor
mov
xor
cmc
or
push
dec
inc
repnz
popf
js
daa
add
lcall
test
mov
mov
mov
icebp
mov
push
add
mov
add
rcl
sahf
xchg
rolb
insb
loope
pop
xor
mov
sub
incl
inc
mov
jmp
sahf
bound
cmpsl
jnp
or
cmp
imul
xor
ja
cmpb
lock
and
cmc
inc
fiaddl
out
inc
jbe
in
popf
shlb
xor
push
xchg
inc
push
xchg
xchg
pop
cs
fistl
lock
dec
xchg
sahf
aam
test
push
mov
hlt
sub
hlt
daa
je
jb
je
adc
dec
jo
push
inc
and
push
push
push
mov
cmp
pop
cmpsl
cwtl
mov
decl
test
jmp
mov
daa
and
sbb
pop
lods
push
ret
push
mov
pop
sahf
je
dec
add
pop
or
mov
and
mov
push
push
pushf
ljmp
movsb
mov
add
mov
adc
mov
add
jns
push
leave
enter
ret
push
in
mov
decl
ret
sbb
cmp
xchg
addr16
pusha
pop
jnp
jbe
sbb
pop
mov
arpl
stos
jmp
out
mov
add
aas
or
pop
test
xor
je
cmp
imul
shr
mov
adc
addr16
inc
popf
adc
add
repz
xchg
fldenv
cld
loop
outsl
cmp
push
inc
fisubrl
insb
lods
pop
dec
pop
inc
hlt
lret
sahf
sbb
incl
out
bound
push
dec
dec
jo
roll
fmul
into
fsubl
push
rcrb
mov
shrb
lock
xor
and
psraw
pushl
xchg
pop
mov
pop
xchg
pushl
xchg
push
out
sub
lock
sbb
xor
sbb
sbb
mov
cmp
call
dec
push
jb
test
loopne
sub
bound
jmp
mov
xchg
enter
xchg
mov
stos
aaa
cmpsb
lcall
scas
xlat
push
cmp
int
je
push
imul
out
push
xor
jg
das
adc
xchg
add
out
mov
pushl
mov
popa
ss
cltd
inc
xorps
pop
fisubl
push
add
xchg
fisubs
dec
pop
loope
rorl
push
dec
inc
aas
les
insb
nop
scas
scas
push
out
or
mov
incl
test
dec
cmp
or
jns
test
pop
sub
jno
add
inc
int
push
dec
or
xchg
mov
clc
decl
repnz
aam
mov
shrb
je
add
inc
test
repnz
mov
aaa
lret
inc
jg
cmpsl
fbstp
xchg
loop
or
pop
rolb
out
gs
sub
andb
call
pop
xor
subb
ljmp
andb
jns
dec
add
testl
pushl
cmpsl
stc
jecxz
sub
mov
sbb
push
mov
sub
pop
xchg
xor
test
call
adc
xchg
or
int
in
call
icebp
jle
ds
mov
mov
loopne
fnstenv
sbb
push
adc
mov
ret
dec
rorb
jmp
nop
pusha
rclb
push
fwait
mov
add
ljmp
xor
push
arpl
imull
lods
insb
pop
shlb
sbb
aad
scas
outsl
arpl
insb
xor
test
iret
add
push
mov
decl
add
or
fisttpl
sbb
add
pop
inc
push
add
loop
sub
jbe
adc
xor
insb
sbb
jb
pop
xchg
and
in
aas
xor
add
xchg
jg
lock
out
dec
ja
inc
dec
jg
fmuls
dec
shl
jecxz
inc
iret
push
popf
mov
ss
jae
mov
jnp
pop
and
fidivl
icebp
nop
xor
data16
cltd
mov
rcr
push
test
xor
add
dec
rcr
jl
xlat
inc
dec
inc
test
xor
cmp
gs
add
inc
aad
jg
jbe
sub
xchg
push
lret
or
sub
dec
rorb
or
adcl
inc
or
sub
jo
add
cmp
pop
jae
pushl
std
imul
scas
inc
sub
addr16
sbb
pop
xchg
add
jg
mov
add
adc
ret
and
movsl
sbb
and
pop
pop
mov
push
lods
jbe
pop
dec
xchg
inc
adc
lahf
pop
mov
mov
pushl
shll
popa
cmp
pop
mov
and
xor
mov
mov
and
inc
addl
lods
sbb
mov
stos
fisubs
xor
mov
jmp
aam
xor
nop
push
push
test
jbe
leave
push
ja
mov
jo
rcll
mov
lcall
mov
cld
xorl
sbbb
sub
insb
sub
inc
scas
imul
inc
inc
ss
jmp
add
shll
adc
add
or
mov
push
shl
sub
stos
cltd
jb
jecxz
shll
testb
enter
jae
mov
jnp
mov
mov
out
icebp
inc
add
in
mov
fmul
andb
push
or
outsl
fs
decl
sub
pusha
mov
adc
inc
in
pop
lret
or
imul
incl
xchg
inc
push
xchg
pusha
sub
aaa
dec
dec
mov
and
les
xor
mov
jns
push
inc
test
sub
pusha
sbb
inc
decw
subb
decl
add
adc
rorb
sub
loope
push
jbe
leave
adc
xchg
loop
xchg
add
inc
or
cmp
in
mov
into
add
jle
inc
push
out
movsb
aam
movsl
push
add
push
add
inc
es
jmp
sbb
xchg
xchg
ffreep
cmp
add
jno
out
les
jmp
dec
imul
decl
decb
test
cmp
pop
pushf
add
or
sub
inc
out
bnd
sar
lcall
jl
pop
push
pop
aaa
cmpsb
lock
sub
cmp
jg
es
pop
cltd
dec
sub
and
data16
sbb
or
cmp
mov
mov
push
lcall
add
fildl
jecxz
aaa
jns
sub
das
aam
lahf
push
push
adc
xor
xchg
add
bound
scas
cli
push
push
sbbb
lcall
or
xchg
adc
mov
ss
mov
inc
loopne
mov
ljmp
and
sbb
cld
xchg
shlb
int
stos
mov
loop
clc
gs
ret
fs
lcall
push
icebp
or
mov
mov
jg
mov
pop
mov
or
pushl
test
nop
pop
and
adc
hlt
cmp
cmp
in
decl
mov
ja
fcomps
lock
pushl
pop
mov
daa
mov
pusha
pop
add
push
mov
inc
mov
jmp
loop
loop
in
sbb
movsb
mov
sahf
aaa
or
xchg
mov
or
call
rolb
xchg
out
mov
lcall
into
xor
add
lcall
call
jno
jbe
test
jnp
sbb
adc
movaps
jp
mov
decl
repz
jle
adc
out
scas
pop
loopne
decl
movsb
es
shll
fsub
lea
popa
stos
pop
adc
or
push
jmp
xorl
and
adc
pop
movsb
les
and
arpl
add
pop
push
xchg
and
mov
fstps
jecxz
lea
sbb
stos
pop
fwait
or
lods
cwtl
movb
incl
cmp
push
pop
in
xchg
cmp
push
lahf
add
jmp
addr16
and
call
dec
das
les
cmc
sub
cmpsb
mov
add
popa
xchg
lock
subb
in
cs
ds
out
ljmp
in
dec
or
sar
mov
adc
daa
fidivrs
popa
mov
jmp
add
out
mov
mov
loopne
pushf
fimull
push
repz
inc
dec
adc
ud0
ljmp
ss
shl
stos
or
mov
test
iret
lret
daa
inc
movsb
clc
enter
cmp
incl
jmp
dec
int3
cmp
mov
xchg
int
inc
jbe
icebp
mov
pushl
pop
pop
jnp
out
inc
test
loopne
orl
sub
stos
inc
and
mov
bound
out
mov
xchg
cmp
scas
pushf
enter
pop
icebp
imul
dec
inc
sar
inc
shll
das
jmp
mov
and
movsl
incl
inc
pop
inc
dec
addr16
and
xor
xchg
jbe
jno
mov
jmp
lea
adc
dec
cmp
mov
push
movnti
mov
addr16
xchg
pop
andb
mov
loopne
sbb
inc
xor
repz
adc
cmp
adc
jmp
imul
iret
mov
lock
aam
and
mov
int3
push
inc
lea
insb
and
xor
sub
jbe
ss
xor
jne
outsb
clc
imul
xor
cmp
mov
fistpll
sub
jp
push
jmp
fmull
cld
jmp
movsl
mov
inc
mov
movsb
sub
push
dec
sub
jmp
out
rorb
mov
dec
insl
imul
outsb
in
push
mov
mov
iret
cmpsl
ds
outsb
jmp
push
int
xor
push
adc
jg
inc
ljmp
call
push
add
sbb
insl
lods
insl
cli
cmp
xchg
xchg
pop
repz
in
mov
pop
sub
andb
insb
xor
rolb
inc
loope
push
jbe
dec
pop
mov
xchg
cmp
mov
xor
iret
cli
pushl
scas
movsb
in
mov
les
fs
sbb
dec
xor
dec
push
outsl
mov
cli
test
popa
sub
lcall
add
gs
jno
mov
sub
movsb
test
movsb
pop
jnp
mov
jl
or
jo
cmpsb
jns
data16
fwait
inc
les
xor
out
sub
mov
mov
xchg
pop
icebp
or
cmpsl
mov
mov
push
xchg
cld
xchg
mov
ss
or
mov
push
cmc
subl
inc
dec
lods
dec
arpl
popa
mov
adc
fistps
add
mov
jg
fisttpl
sub
adc
hlt
sbb
sti
gs
in
xor
cld
mov
or
sbb
adc
call
pusha
mov
cld
mov
imul
test
push
xor
or
cmpsw
das
imul
xor
sub
adc
pop
scas
jmp
inc
decl
adc
test
push
icebp
insl
imul
jg
jbe
cld
pop
push
push
inc
inc
outsl
fsubp
pop
inc
mov
ss
pusha
or
cmpb
mov
jo
jg
aam
xor
bound
fs
sbb
add
cmpl
les
fildl
mov
and
js
jmp
and
lret
xor
cmp
add
outsl
stos
jecxz
push
adc
lahf
shlb
pushf
shrb
decl
test
in
push
dec
mov
imul
xor
xlat
sub
inc
jmp
sub
jp
and
push
xor
or
inc
inc
cwtl
xor
nop
pusha
jo
in
push
dec
adc
pushl
sbbb
cmp
mov
sbb
cmp
xchg
sbb
mov
incl
inc
or
pop
xchg
add
insl
loop
or
push
add
call
sub
lcall
loope
cmpsl
sahf
iret
pop
movsb
jp
ret
xlat
pop
jecxz
fadds
pop
jg
pop
inc
xor
jo
inc
lahf
pop
lcall
clc
add
mov
inc
and
xchg
jmp
lods
mov
rorl
mov
rcrb
addr16
xor
inc
jae
out
mov
rcr
lahf
in
push
pusha
popa
pop
or
test
enter
arpl
mov
add
sbb
movsb
leave
push
xor
jmp
pop
mov
xchg
popf
mov
bound
pop
inc
mov
dec
scas
sbb
inc
data16
sti
lods
inc
jp
xor
call
call
inc
mov
inc
cmp
insb
pop
cmpsl
push
lods
mov
movlps
xlat
dec
add
test
outsb
insl
sahf
fmull
cmpsl
mov
mov
pusha
or
ja
adc
and
leave
add
lcall
addb
add
mov
ret
add
mov
sbb
mov
fidivl
les
fldl
cmpb
je
pushf
loope
es
adc
popa
fs
incl
dec
mov
sub
movsb
jle
inc
jo
lds
or
push
cmp
pop
ljmp
hlt
push
jnp
xchg
mov
and
test
lret
popl
decl
lea
ds
movsb
jne
aad
add
icebp
rcrb
leave
xchg
xchg
cmp
popl
repz
adc
sbb
orl
outsb
cld
hlt
push
fmuls
das
rolb
pop
jb
push
pop
pushf
cmc
jp
sbb
add
ljmp
clc
xchg
daa
adc
call
xchg
enter
sub
xchg
and
inc
inc
hlt
inc
and
cli
pop
icebp
cmp
xchg
add
dec
sub
jle
ds
js
loopne
iret
cmp
pushl
sbb
fwait
lods
stos
stc
cmp
jo
cmp
mov
lahf
mov
incl
jle
mov
cmpl
inc
cld
mov
mov
cmp
inc
bound
call
cld
fsubl
fmul
fcoms
mov
push
scas
jp
or
inc
jo
jo
add
lcall
in
xchg
push
in
push
scas
push
jb
addr16
pop
mov
std
fcmove
or
jg
bound
subl
xchg
cmp
add
or
jmp
add
mov
add
sbb
xchg
jg
bound
cmp
inc
cmp
inc
mov
dec
mov
notl
ljmp
push
mov
jns
test
incl
mov
xor
xor
repz
call
daa
aaa
cmp
pushl
xor
out
pop
jmp
test
push
push
adc
add
lods
pop
xchg
and
xor
add
lcall
addl
or
cmp
out
mov
cmp
cmp
aaa
clc
jecxz
pop
fadds
and
decl
lock
imul
cwtl
add
clc
mov
int
dec
lock
mov
adc
fstpl
jmp
mov
loop
lcall
loopne
jg
sti
addl
xchg
jecxz
in
pushf
iret
cmp
out
push
aaa
adc
hlt
dec
sub
mov
adc
adc
popa
inc
pushl
cmp
andl
xor
sbb
jno
call
add
call
add
pusha
push
mov
mov
pop
and
out
inc
shl
lcall
decl
gs
push
in
xchg
movsl
sub
jecxz
and
nop
xor
daa
or
decl
pop
push
push
pop
scas
fs
aam
imul
decl
or
pop
shll
pop
loopne
pop
mov
and
mov
stos
push
in
inc
out
insb
les
cmc
lret
sbb
rcrl
rorb
sub
insl
ja
inc
imul
sub
dec
lock
sub
fwait
scas
cmp
mov
sbb
and
rcl
jmp
inc
mov
dec
xor
adc
ret
clc
lahf
stc
xor
cmp
push
icebp
insb
mov
sbb
lods
mov
xchg
aas
xlat
or
and
cs
cmp
dec
add
jns
push
pusha
repz
or
mov
jg
das
test
repz
adc
adc
lcall
xlat
fldl
xchg
cmp
clc
and
mov
test
push
call
cld
fs
inc
jbe
sub
xchg
cltd
cld
inc
jmp
dec
test
jb
insb
jno
scas
add
enter
xor
xor
add
mov
dec
out
in
scas
and
mov
in
xchg
mov
insl
test
add
call
adcb
testb
out
sub
pop
imul
pushf
and
or
mov
hlt
rorb
clc
sbb
jg
dec
inc
push
push
lds
scas
je
int3
adc
push
loopne
xchg
ljmp
add
sbb
out
dec
in
gs
cld
xor
pop
xchg
stos
gs
in
loop
test
push
js
adc
pop
push
aad
std
mov
push
add
imul
mov
pop
call
pop
outsl
or
push
inc
movsb
das
adc
mov
int3
adc
cli
inc
incl
loop
lods
sbb
mov
aas
dec
je
cld
daa
dec
xchg
cwtl
cwtl
mov
push
inc
xchg
popf
inc
cld
xchg
inc
bound
inc
call
or
xchg
out
push
repz
pop
ljmp
cmp
je
and
push
or
mov
push
ret
in
xchg
gs
mov
pop
push
mov
xchg
pop
xor
inc
in
lods
jae
mov
mov
cld
push
sti
ljmp
push
mov
cmpl
add
aad
addb
push
lods
mov
mov
or
aas
sub
dec
orb
cli
arpl
jp
jp
mov
xor
out
add
rcll
ja
cmp
sub
insb
jo
loop
push
inc
cmp
cwtl
or
pop
stc
in
and
jecxz
subl
cmpsl
cmp
xor
decb
das
scas
mov
ret
dec
jb
pop
xchg
jp
pop
ret
inc
popa
push
adc
inc
inc
js
fildll
dec
sbb
or
jp
incl
mov
popa
mov
sub
movlhps
push
rep
int3
or
outsl
cli
push
loope
divb
pop
or
mov
out
xchg
add
inc
mov
cmc
or
add
xor
xchg
push
push
stc
push
cli
fisttpl
push
push
sar
ljmp
push
into
pop
mov
loopne
xchg
shrl
es
add
lods
or
rolb
jecxz
les
scas
and
xor
fisttps
clc
and
inc
iret
xchg
hlt
adc
cmc
test
pushl
lods
test
jge
mov
and
out
jmp
mov
pop
popa
sahf
mul
or
call
incl
xchg
movsl
mov
mov
and
movsb
sti
xchg
push
fimuls
push
je
add
inc
fcomps
sub
insb
loopne
push
inc
mov
loopne
aad
in
loopne
lock
imull
dec
cmp
lods
adc
mov
call
rclb
mov
arpl
xor
add
sub
add
xor
iret
mov
push
shll
push
add
cmp
adc
in
notb
jg
xlat
mov
mov
int
sti
in
push
fstp
or
incl
push
jnp
or
lcall
inc
repz
fmul
sub
pop
insb
add
rcl
cmp
cli
js
shll
mov
addl
shr
clc
dec
sar
mov
dec
cmpsl
mov
gs
sbb
insl
mov
nop
out
xor
push
adc
mov
enter
call
jg
popf
int
fs
and
jecxz
inc
test
add
test
push
fisubl
add
fwait
jno
adc
inc
ja
inc
loope
pop
sti
lret
fidivrl
or
push
dec
adc
arpl
and
dec
lret
adc
lds
insb
jb,pt
hlt
std
ret
jmp
add
or
inc
xchg
dec
push
outsb
adc
and
xor
inc
or
fstpl
in
imul
aam
pushf
jnp
cld
push
mov
fldenv
and
insl
fwait
add
sub
cs
xchg
sub
sub
xor
xor
fcomp
push
jne
jg
aad
xor
and
arpl
cmpsl
jbe
in
imul
sbb
decl
jne
orb
push
dec
sub
sbb
insl
push
xor
mov
imul
push
ret
add
sub
andb
loop
jb
mov
decl
call
mov
xchg
insb
xor
mov
jno
xor
adc
adc
pop
cs
insb
js
sbb
or
mov
mov
outsb
clc
adcb
mov
sbb
clc
sarb
cli
rcl
inc
adc
jne
lcall
arpl
jo
xor
lock
mov
aaa
fdivrs
jo
xchg
sub
outsb
lret
pushf
cmc
mov
icebp
mov
das
stos
sub
or
inc
sub
mov
sub
mov
dec
addr16
jnp
jb
adc
jo
mov
stos
cmp
ds
jmp
lcall
dec
sbb
adc
jg
mov
jnp
inc
xchg
fdivs
hlt
outsb
mov
gs
mov
stos
jg
pushf
lds
iret
cmc
sbbb
and
scas
pop
pop
or
xor
out
pop
and
sub
imul
pop
shlb
stc
outsb
dec
das
push
cmpsb
in
dec
mov
push
arpl
fisttps
dec
outsl
aaa
imul
jb
dec
fdivr
std
hlt
mov
or
jae
inc
jnp
repnz
ss
jne
pop
xchg
xor
add
sub
ja
aaa
jb
mov
add
sbb
lcall
and
loop
push
sbb
shlb
and
pop
rorb
dec
push
mov
mov
fnstsw
push
clc
push
in
pusha
xchg
xor
add
cli
add
mov
call
scas
push
inc
pushf
rorl
sbb
mov
stos
popf
add
add
decl
inc
inc
test
xor
cmp
dec
inc
ss
shrl
xlat
mov
das
ret
dec
push
jae
pop
mov
stc
std
outsb
iret
sbb
clc
jmp
jo
xor
lds
in
outsb
enter
arpl
push
and
and
mov
rcll
cmp
jns
ret
push
movups
push
leave
add
pop
mov
cmpsl
faddl
dec
push
leave
pop
test
xor
adc
repnz
or
inc
enter
inc
jb
and
mov
leave
mov
add
test
loop
mov
push
xchg
mov
int3
arpl
xchg
nop
cmp
add
das
add
cmp
call
mov
cld
push
sub
gs
imul
inc
xorb
or
clc
jg
clc
jg
push
sahf
aaa
pusha
mov
mov
xor
sbb
outsb
mov
js
icebp
es
fmuls
popa
pop
fsubs
cwtl
dec
adc
cld
inc
xor
push
pushl
enter
aam
loope
adc
mov
push
inc
fildll
jnp
pop
or
adc
dec
js
push
cmp
or
adc
jo
lahf
jbe
pop
push
fadds
insl
pop
jecxz
loope
adc
xchg
push
lock
mov
push
loope
pop
pop
lock
cmp
jge
in
xchg
adc
lret
out
mov
push
scas
jecxz
push
and
pusha
insb
dec
cld
jo
pop
lods
out
dec
dec
shr
pop
dec
inc
dec
dec
aas
xchg
push
or
or
rorb
cmpl
mov
push
mov
inc
shrl
mov
push
out
mov
adcl
dec
jno
adc
sbb
hlt
push
jmp
xor
mov
lods
xchg
aad
mov
cmpsb
lds
mov
mov
fs
dec
std
adc
mov
xchg
add
icebp
fidivs
mov
outsb
insb
jbe
or
xor
sbb
or
add
stos
rcrb
jmp
lret
out
fmul
push
mov
sub
pushl
jmp
mov
jne
dec
jb
into
push
dec
push
mov
adc
sbb
addr16
push
push
fcoms
and
lods
cld
push
sub
sub
jnp
dec
xor
bound
std
add
push
cmp
inc
es
inc
dec
enter
incl
adc
inc
lahf
lahf
mov
data16
jne
mov
inc
clc
jmp
das
fldl
cmpsl
and
daa
bound
add
iret
xor
lcall
stc
adc
decl
das
test
cmpsl
or
cmp
dec
cltd
ret
stos
cmp
push
dec
adc
insl
addb
subl
xchg
ljmp
pushf
dec
mov
cmpsl
cmp
sbb
sub
ret
and
mov
inc
or
jg
cmp
rcll
js
and
inc
daa
xchg
ficoms
or
ja
pushl
lods
pop
insb
mov
aad
lahf
jno
cmp
adc
cltd
out
test
decl
imulb
repz
adc
scas
push
xor
lret
or
mov
pushf
push
adc
fdivr
decl
sub
loop
mov
jb
dec
or
add
add
call
push
push
jg
aad
imul
loope
ret
sbb
imulb
lret
ljmp
lret
mov
xor
xchg
inc
pop
ljmp
mov
addb
adc
call
xchg
push
rcr
push
gs
call
mov
mov
sbb
sub
xchg
dec
mov
mov
leave
jne
nop
ljmp
sbb
xchg
sbb
ds
leave
mov
push
cmpsb
mov
add
pushl
push
testb
adc
push
lahf
sar
ret
mov
lock
in
into
mov
cwtl
daa
daa
das
mov
add
mov
pop
jb
in
lcall
mov
and
incl
push
xor
les
xchg
pushf
xor
adc
and
pop
mov
or
dec
shlb
dec
sbb
or
ja
sarl
cli
and
cmp
dec
push
or
test
ja
sbb
add
mov
sbb
sbb
incl
add
lds
lds
and
stos
xchg
mov
sub
and
sar
push
mov
jecxz
lret
mov
sub
xorb
xchg
mov
and
in
fildll
sbb
push
push
lods
cmp
incl
xlat
pop
test
xchg
push
fimuls
std
ljmp
xchg
decl
cmp
negb
imulb
scas
cli
pop
pop
lcall
imul
jbe
popa
cmp
repz
lds
push
outsl
jns
xor
push
push
fisubl
lods
xor
loop
cli
add
jl
push
out
inc
sub
dec
adc
ljmp
cmc
inc
add
addl
test
inc
sub
incl
add
sbb
icebp
lahf
sub
xchg
push
imul
in
sub
mov
mov
sbb
aad
popf
jp
rolb
dec
clc
dec
sbb
inc
adc
dec
push
sbb
inc
push
mov
jbe
bound
add
in
insl
push
fldcw
xorb
fildl
and
xor
cld
xor
sub
movsb
mov
add
loopne
and
sbb
dec
or
add
dec
xor
sbb
ret
add
addl
cmp
int3
cmp
xor
mov
decl
pop
pop
add
repnz
add
rclb
add
icebp
xor
pop
mov
insb
decl
inc
in
lds
xchg
fwait
sub
mov
outsb
add
adc
jmp
inc
stos
jecxz
fistl
aas
sbb
lret
or
xor
push
popa
into
mov
sbb
dec
xchg
shl
out
or
iret
jo
std
roll
nop
pusha
add
adc
rorb
lods
mov
mov
push
and
and
fcompl
imul
loopne
push
incl
decb
shll
ja
insb
mov
cwtl
pop
ds
mov
adc
test
add
in
cmp
mov
pushf
push
sub
fildll
ljmp
jns
nop
xor
setle
sbb
pop
mov
dec
adc
cltd
enter
push
daa
mov
pop
add
inc
add
pusha
xchg
mov
jmp
jp
adc
ret
loope
cld
cmp
test
push
push
and
call
lahf
insl
and
add
dec
cld
mov
loop
xchg
sub
es
mov
and
add
data16
cmp
push
adc
mov
jl
sub
cmc
dec
pop
outsl
push
dec
push
inc
pushf
pop
xor
test
out
cli
popf
test
inc
cmp
dec
inc
ja
inc
mov
rclb
cmp
mov
fnstsw
jbe
ror
push
cli
ficomps
cmpsl
aas
sbb
ret
shlb
mov
ficoml
mov
clc
xor
inc
cmp
loopne
test
pop
sbb
lcall
and
inc
and
pmullw
or
inc
cltd
lcall
incl
xchg
cld
pop
jb
push
or
sbb
pop
loope
add
stos
cmp
rorl
and
icebp
jmp
arpl
xor
cmp
scas
dec
dec
shl
jne
les
in
mov
add
call
and
fiaddl
mov
xlat
fucomip
loope
pop
or
or
push
dec
inc
jo
pop
mov
clc
add
mov
sahf
dec
xor
xchg
test
or
hlt
xchg
or
push
mov
decl
sahf
lods
sub
outsb
inc
ds
iret
pop
jnp
cmpsl
adc
outsl
adc
dec
push
or
pushf
into
test
addr16
es
sar
in
cmp
shrb
jnp
insl
jle
cmp
cmp
xchg
pop
mov
cmpsb
dec
mov
xor
sub
add
fwait
mov
ljmp
cli
adc
cmc
ss
xlat
fcomps
fisttpl
sbb
jns
fdivrs
push
dec
push
in
adc
ss
inc
xchg
mov
xchg
cmp
cmp
add
mov
jnp
jle
xor
clc
mov
xor
arpl
xorb
pop
xchg
and
or
xchg
popa
lods
pusha
dec
movsb
xor
pop
scas
clc
sar
xchg
popa
out
mov
xor
xchg
mov
insb
jo
call
mov
mov
inc
out
dec
fdivrl
dec
or
jns
lods
lcall
add
push
fwait
mov
mov
loope
add
imul
jle
imul
xchg
data16
push
insl
xor
pop
inc
xor
push
outsl
ja
ljmp
mov
repz
popf
jnp
sub
or
add
ljmp
cmpsb
movsl
lret
lahf
shl
cwtl
jns
arpl
mov
jne
test
add
push
cmp
out
adc
push
jo
icebp
pop
fmull
cmpsb
jle
push
dec
mov
pop
push
sub
incl
xlat
xchg
aas
mov
inc
xor
or
iret
mov
insl
in
rcll
or
adc
stos
out
sub
inc
cmpb
push
icebp
add
sub
das
mov
stos
xchg
repnz
or
xchg
mov
ss
icebp
out
cmp
arpl
pusha
jl
ljmp
lcall
push
jp
sarl
lock
jae
sub
aam
xchg
jmp
rcrb
rol
stos
mov
or
das
fxch
jge
sbb
pop
icebp
inc
inc
push
xlat
dec
mov
shll
jbe
xchg
dec
stc
dec
pusha
cmp
scas
mov
scas
and
lock
test
es
mov
test
inc
cmpsl
xchg
push
popa
ljmp
sahf
pusha
mov
dec
imul
rcl
popa
dec
push
dec
add
jg
sbb
popa
fsubrp
adc
add
ret
into
inc
jmp
ljmp
inc
mov
lcall
sub
and
jmp
dec
jmp
inc
dec
aas
sbb
mov
insl
je
fdivr
mov
inc
inc
fs
cs
inc
sbb
push
jns
inc
and
icebp
pop
and
insl
call
push
pop
ret
jnp
andb
decb
jb
call
ljmp
std
call
arpl
xlat
adc
push
push
sub
incl
pop
out
pop
mov
ret
jno
add
mov
mov
xchg
jmp
lock
mov
cmp
sub
dec
int3
xor
enter
fistps
jecxz
lret
pop
jae
arpl
loopne
sahf
mov
hlt
call
dec
jg
xor
mov
mov
out
inc
adc
mov
xor
int3
icebp
mov
cmp
insl
pop
ret
mov
ret
and
inc
inc
inc
sti
js
repnz
dec
mov
cmp
je
mov
decl
adcl
loope
imul
les
leave
leave
jne
shlw
lcall
jb
sbb
xchg
push
les
jno
xor
xchg
xor
bound
cwtl
xchg
adcb
lcall
xor
out
ret
sbb
rclb
inc
stc
mov
lcall
mov
inc
mov
pop
inc
rorl
stc
xchg
mov
xlat
movsb
dec
test
pop
xchg
orl
mov
pop
jecxz
mov
incl
xchg
fnstenv
fwait
into
add
xor
and
test
repz
sbb
jmp
arpl
out
dec
mov
pop
xchg
push
adc
add
pop
lock
cmpsl
fildl
or
and
jae
or
xchg
scas
and
mov
push
or
mov
dec
arpl
xlat
cmp
and
push
jb
cmpsl
pushl
cld
jns
jle,pt
sub
loope
lret
dec
add
cld
inc
scas
in
adc
and
incl
cli
dec
cwtl
dec
into
pop
mov
mov
push
xchg
dec
xchg
xor
mov
cmp
inc
lock
adc
loop
insb
inc
mov
push
ret
push
sti
or
aam
sahf
gs
test
mov
mov
mov
cmc
mov
jl
fs
mov
xor
push
clc
ret
clc
mov
pop
lcall
mov
mov
flds
jno
lods
ljmp
jge
pusha
sarb
jns
pop
ffree
xchg
les
sahf
jecxz
jae
jle
add
mov
iret
sti
roll
pushf
xor
repz
push
pusha
std
std
decl
adc
sbb
fadds
jo
xor
jns
and
call
into
jbe
adc
mov
push
sbb
add
sbb
xor
dec
cmp
loope
scas
cli
xor
xchg
popa
leave
clc
xchg
fs
sahf
lahf
mov
incl
cld
rcr
push
push
push
push
push
stos
cmp
xlat
test
lret
insl
fdiv
stc
std
xchg
xor
cli
inc
xchg
imul
dec
sub
mov
dec
addl
aam
sub
mov
dec
icebp
daa
hlt
or
mov
nop
imull
push
mov
xor
add
cs
adc
cli
shlb
mov
xchg
dec
add
ds
adc
decl
mov
or
inc
pop
mov
jmp
movl
pop
jo
clc
pushl
mov
repz
movl
mov
je
outsb
xchg
xor
xor
xchg
push
dec
add
ljmp
clc
mov
dec
pop
sbb
push
or
jecxz
mov
mov
ds
mov
incl
and
mov
test
dec
movb
adc
adc
cmc
mov
nop
inc
add
call
push
ret
out
negl
cmpsb
lds
jae
jmp
rcrb
es
loope
insl
pop
out
insl
in
call
xor
or
ja
cli
add
popa
push
mov
fldl
loope
cmpsl
or
inc
lcall
dec
mov
stos
cs
push
push
pop
mov
sbb
orl
cmp
mov
pop
lock
leave
fldl
fisttps
ds
push
xchg
or
jmp
sub
cmpsb
ss
fadds
in
nop
ja
rcrb
sbb
repz
xor
ljmp
jge
xor
out
add
jl
jno
pushl
and
popf
sbb
mov
lret
jmp
mov
cmp
xchg
and
dec
testb
push
xchg
dec
pusha
dec
mov
mov
fcmovb
mov
add
inc
movsb
cs
xor
jg
test
add
jl
cld
sub
jecxz
lea
int
fsubrl
sub
jmp
ljmp
push
test
mov
sbb
lods
notl
xor
call
cld
lcall
xor
outsb
shlb
shlb
sub
push
cltd
push
cs
add
hlt
pushl
aam
fwait
push
push
adc
sbb
insl
inc
pusha
and
fistps
and
adc
xchg
clc
orb
mov
dec
sbb
loop
repnz
cmp
test
jne
xchg
out
mov
sti
js
imul
xchg
enter
popa
bound
decl
jg
inc
push
popa
cli
arpl
dec
adcl
scas
and
subl
scas
fsubrl
add
hlt
push
lock
adc
and
push
test
inc
cmp
adc
ret
inc
push
inc
incl
cli
in
mov
cmp
xchg
sbb
incl
jne
mov
aaa
pop
outsl
push
fsubrl
test
or
lcall
jmp
mov
adc
adc
daa
push
hlt
cmp
movsb
std
test
cwtl
out
cmc
decl
sbb
sbb
pop
xor
aad
out
sbb
xchg
call
dec
in
int
lahf
jne
lock
sti
xchg
adc
mov
push
sub
xchg
decl
orl
push
in
out
sahf
leave
push
insb
inc
push
mov
lock
sbb
add
push
mov
out
push
cmp
mov
inc
pop
movsl
or
cltd
mov
pop
arpl
repnz
mov
dec
jmp
cmp
xchg
push
jmp
xchg
xchg
inc
cli
js
loop
call
cmpsl
adcb
jl
pop
mov
daa
pusha
mov
mov
es
repnz
jmp
fistpll
cmp
push
push
out
in
inc
arpl
mov
mov
int
loopne
fdivs
es
jg
addb
sbb
or
adc
loopne
lock
incl
call
jge
in
lea
xor
push
add
xchg
cmpl
das
cli
push
push
in
je
fmuls
add
ficoms
test
jg
andb
jbe
inc
das
jbe
movsb
fwait
inc
inc
push
mov
xchg
imul
incl
leave
push
mov
dec
xor
inc
mov
and
dec
xor
push
test
idiv
incl
xlat
jmp
mov
movsb
push
mov
insb
dec
and
and
mov
jge
fcomip
inc
icebp
xchg
lea
lcall
rcl
lock
and
arpl
incl
mov
data16
test
adc
cmp
in
pop
push
jle
incl
push
fstps
sub
push
adc
notb
mov
cltd
pushf
mov
ds
or
lcall
fsubrs
inc
push
push
loope
dec
cs
cmp
fistpll
call
or
xchg
cmpsl
sub
and
iret
inc
sbb
call
mov
push
es
incl
rcrb
jp
out
mov
das
rcl
push
mov
mov
inc
sub
popa
add
decl
outsb
imul
mov
and
dec
add
push
loope
mov
ret
mov
dec
insl
inc
dec
xor
sbb
rol
xor
ret
push
add
add
insb
jge
stc
je
sub
rcrb
lret
sar
sti
ss
mov
dec
dec
stos
cmp
sbb
mov
bound
cs
mov
jmp
or
push
sbb
into
mov
inc
leave
add
test
add
cli
cmp
cmp
mov
loopne
mov
xor
lcall
outsl
and
push
adc
pop
sub
push
popf
pop
mov
shrb
mov
ss
pop
cld
add
inc
cbtw
adc
xchg
mov
mov
push
jmp
loope
push
imul
push
mov
les
cmc
cmp
cmp
pop
pushl
pop
sbb
jp
push
inc
dec
insl
add
inc
ret
ljmp
xor
mov
mov
mov
leave
or
dec
daa
lret
cmc
ret
icebp
imul
jmp
int
add
dec
div
inc
or
ret
adc
iret
orb
and
lcall
incb
jae
or
lret
cwtl
mov
test
cmpsl
mov
and
sbb
sti
dec
mov
mov
idivl
sarl
xchg
lock
subb
shl
dec
fdivr
mov
or
test
mov
inc
cmp
and
mov
call
sub
outsl
lods
scas
mov
xchg
pop
pop
aad
push
int3
mov
cmp
push
cld
fstpt
xchg
shl
xor
xor
sbb
cli
test
hlt
ljmp
inc
iret
out
ljmp
push
pop
movsl
xor
aam
ljmp
bswap
dec
loop
outsl
mov
xchg
in
add
in
xchg
lret
jne
xor
sti
inc
insb
loope
dec
das
rcll
and
iret
aaa
insb
mov
loop
aaa
rcr
paddusw
dec
xor
inc
jg
mov
das
ss
cmc
xchg
sbb
test
lods
les
cmp
iret
jecxz
pushl
call
not
divb
daa
cmp
insb
or
mov
nop
push
pop
and
js
mov
les
pop
mov
add
add
dec
jecxz
or
push
cmpsb
mov
dec
cli
jmp
pop
pop
jle
fnstenv
sub
mull
insb
in
cld
jne
or
jne
add
xchg
cmp
cmpsb
cwtl
or
xchg
decb
hlt
jb
insl
jne
sub
dec
sbb
clc
decl
mov
dec
dec
out
aaa
mov
mov
das
inc
js
mov
shlb
ret
inc
jo
dec
xchg
dec
inc
push
push
cmp
xchg
or
gs
mov
adc
mov
out
int3
imul
test
mov
enter
outsb
dec
add
add
shlb
pushf
push
insb
mov
shrb
cli
pop
das
cwtl
leave
dec
call
cmp
mov
sbb
jle,pn
repz
pushf
sti
sub
cmp
mov
push
dec
mov
outsl
lcall
std
outsb
je
inc
add
mov
sahf
aas
jns
test
sbb
mov
data16
test
mov
jnp
scas
jne
inc
test
inc
loopne
mov
jb
jp
dec
mov
push
sub
data16
fists
js
mov
daa
pop
fisubs
pushf
fs
xor
in
and
jo
add
das
jmp
test
ljmp
in
aas
add
and
add
in
out
push
mov
lea
add
iret
sbbb
sbb
in
lock
lock
adcb
dec
push
repnz
cltd
repnz
adc
add
xchg
repz
and
sub
addl
cmpsl
add
and
jns
jecxz
sub
hlt
or
sbb
call
subl
push
leave
jecxz
in
std
push
sbb
decl
test
test
mov
cmp
adc
push
les
jne
inc
push
outsl
push
or
mov
out
lock
dec
push
pop
test
decl
outsl
rcll
mov
lcall
dec
jmp
arpl
je
xor
push
jne
ret
stc
xorl
outsl
push
add
imul
fisubl
jmp
outsl
cwtl
daa
scas
decl
loopne
pop
shlb
arpl
adc
fsubp
outsb
gs
dec
aas
jl
mov
dec
loopne
imul
enter
es
inc
and
pop
pop
std
lods
adc
xor
repz
fidivrs
cmp
enter
sub
push
gs
loop
rclb
ljmp
dec
test
psubd
fists
push
shll
movsl
cs
jo
jge
mov
jmp
or
pop
push
into
mov
push
cmp
sub
loopne
push
dec
outsb
xchg
jae
pop
clc
adc
pushf
push
jb
imul
movsb
inc
and
inc
jbe
dec
push
imul
das
xchg
adc
ljmp
push
mov
sub
out
stc
ds
lret
inc
mov
sbb
das
xchg
clc
jmp
je
push
mov
addb
dec
or
lcall
lock
push
mov
dec
pop
je
add
and
psrld
bound
arpl
sbb
dec
inc
daa
mov
loopne
mov
fimuls
xor
pop
das
or
loop
aaa
sub
mov
push
xchg
or
aam
mov
mov
mov
jmp
lcall
jecxz
push
sub
in
or
xchg
mov
xchg
ljmp
pushf
mov
add
clc
mov
pop
lock
sbb
adc
cmp
mov
imul
mov
das
mov
cmp
popf
loop
dec
xor
pop
sahf
addb
insl
cmp
idiv
lcall
dec
mov
test
into
xlat
nop
popa
cli
inc
je
cmc
lods
push
push
jg
rcrl
push
xor
xorl
add
push
jnp
je
push
dec
jmp
sub
push
jb
dec
call
jl
sbb
dec
xor
imul
enter
fidivrl
test
test
lret
test
scas
lods
mov
push
add
xchg
mov
stos
add
jg
push
out
sarb
adc
jnp
or
jmp
repz
data16
call
jno
imul
shrl
sbb
add
xchg
int3
fbld
push
jmp
mov
pop
outsb
in
rcll
push
mov
xchg
ret
std
arpl
scas
inc
cmp
xor
jb
js
out
mov
inc
imul
fcmovbe
mov
sbb
ja
ss
test
lret
push
dec
pop
adc
mov
fcompl
imul
test
jg
jo
test
nop
pusha
hlt
and
divl
push
scas
push
sub
pushl
int3
enter
bound
shll
sub
popf
cltd
dec
sub
inc
dec
push
outsb
pop
sbb
pop
pop
add
jne
pop
inc
mov
inc
pop
cmpsl
push
ret
fsubp
vmovq
test
mov
mov
rcl
pop
pop
jo
mov
cmp
dec
outsl
jp
add
or
inc
idiv
ret
js
push
xchg
imul
jp
pop
mov
call
stos
sub
jno
and
and
push
rorb
push
or
or
jb
outsb
dec
addb
mov
pop
ljmp
divb
cmpsb
xchg
sbb
insb
ja
dec
lock
jg
mov
mov
sbb
lret
add
push
sbb
cwtl
jp
pop
ljmp
mov
jmp
lcall
bnd
mov
mov
jae,pn
fs
cs
push
push
xchg
xorl
dec
inc
add
sub
xor
rorb
lods
push
mov
push
fmuls
sar
and
adc
lcall
test
das
lahf
bnd
xor
pop
sbb
jg
pushl
orb
xchg
inc
es
xchg
std
imul
ljmp
xchg
and
in
lcall
add
subb
and
add
lds
jg
decl
stos
enter
dec
push
dec
mulb
cmp
mov
test
int3
pop
shll
jae
jg
call
nop
and
mov
je
ds
scas
inc
nop
jmp
cmpsl
mov
rcr
ret
or
rclb
adc
ja
rclb
insb
push
es
xor
addb
in
call
mov
add
push
adc
add
inc
pusha
cltd
sarb
test
fnclex
cmp
add
aas
subl
sub
pop
sahf
adc
dec
mov
mov
jecxz
sub
push
cmp
hlt
fildl
loopne
incl
jle
add
into
mov
mov
xchg
imul
mov
add
and
lods
notl
xchg
jmp
fcmovbe
pmulhuw
sbb
adc
cmp
mov
nop
sti
push
hlt
lea
inc
stc
incb
lods
cmpsl
sub
pop
jmp
ret
shr
mov
pop
cmc
int3
pop
add
sub
scas
or
sbb
das
add
out
and
incl
adc
in
repz
cmc
or
xchg
pop
xor
xor
cltd
pushf
shlb
daa
call
std
and
push
pop
and
jbe
jmp
sti
push
push
mov
add
lcall
or
cmc
dec
push
sarb
add
sbb
and
push
movsl
ds
adc
call
std
xorl
push
ss
data16
mov
jns
mov
cmpsl
mov
pop
and
xchg
daa
pop
inc
decl
adc
mov
mov
cld
dec
dec
push
leave
pushf
add
or
repz
ljmp
adcl
cmp
and
hlt
fiadds
jecxz
jg
decl
jmp
dec
mov
jp
adc
pop
or
incl
add
jne
pop
add
out
int3
cltd
xchg
add
sbb
loopne
lcall
cmc
cs
sub
add
xor
jmp
and
cmp
lcall
pop
sarl
mov
cli
adc
imul
and
stc
pushf
icebp
incb
cli
arpl
xor
call
loopne
cmp
and
int3
mov
adc
mov
movsl
aam
dec
into
and
dec
mov
aaa
icebp
call
testl
add
mov
mov
js
in
lds
and
addl
add
popf
dec
xchg
xchg
sbb
sbb
adc
and
push
icebp
lock
push
call
add
loope
cmp
sub
nop
aam
sbb
push
sub
mov
xchg
or
dec
cmp
fidivl
adc
aam
arpl
orb
sub
call
xor
sar
push
testl
enter
sub
sbb
pop
ljmp
adc
loop
mulb
sub
mov
in
inc
pop
pop
call
jg
and
or
cltd
icebp
jo
mov
ret
push
jg
ror
jmp
push
and
inc
cld
mov
xchg
clc
cmpsb
and
test
imul
pusha
inc
inc
mov
cli
bound
in
jb
nop
or
insl
lret
in
jmp
cmc
repz
mov
adc
rclb
popl
lods
jbe
xchg
add
xorl
add
and
xchg
xor
jmp
or
xor
and
movsl
mov
mov
xor
inc
add
sti
pop
mov
cmp
stc
push
in
add
mov
icebp
call
cwtl
pushf
lret
xchg
mov
arpl
addb
cwtl
adc
pop
hlt
jns
add
ss
test
push
inc
mov
push
pusha
pushf
add
jbe
dec
xchg
mov
fcmovbe
lock
cli
pop
outsl
fstpt
clc
and
sbb
xchg
pop
add
sbb
or
mov
mulb
jo
jecxz
out
fisubrs
add
fisubrl
inc
lea
adc
incl
lea
sub
cs
lock
xor
incl
add
test
push
or
pop
iret
sbb
pop
stos
mov
and
test
outsl
scas
inc
dec
js
jno
push
dec
je
push
dec
call
aam
add
add
fisttps
pop
stc
sbb
sub
repnz
decl
ret
adc
sbb
loope
sub
push
cmp
and
jmp
add
fnstenv
aas
mov
dec
xchg
ds
loope
and
sbb
ffree
decl
push
and
movsl
sahf
sbb
sbb
aad
xor
mov
mov
outsb
mov
adc
mov
cmp
and
jb
mov
xchg
inc
jmp
pop
or
push
lcall
sub
mov
mov
clc
pushl
lock
lock
mov
pop
or
mov
add
into
xchg
aam
les
mov
add
repz
mov
xchg
push
xchg
lock
ljmp
arpl
or
pushf
add
sub
int
cli
pusha
dec
cmp
add
push
cmpb
mov
sbb
sbb
cmpsb
adc
xor
mov
adc
repz
adc
jl
addr16
dec
ficoml
dec
dec
outsl
fistps
cmp
push
and
mov
mov
jecxz
je
or
sub
addr16
dec
stos
outsb
adc
push
xchg
inc
lock
fstp
inc
stos
sbb
andps
bound
jmp
dec
out
pop
pusha
js
and
mov
pop
mov
ljmp
add
xor
dec
inc
cmp
push
add
js
or
out
int3
mov
mov
sbb
insl
mov
cmpsb
sbb
jecxz
popa
pop
test
cmpsb
cwtl
jl
pop
xlat
mov
rorb
or
out
lret
push
mov
enter
cld
mov
inc
jno
sahf
sbb
sahf
adc
lcall
mov
ret
inc
jb
lods
dec
push
mov
lock
push
sub
fsubrl
push
roll
sub
inc
js
jg
cmpsl
icebp
out
jno
inc
xor
fidivrs
cli
outsl
cmpsl
mov
fwait
lea
mov
xor
sub
mov
lods
call
rol
dec
jno
dec
ret
mov
mov
iret
pop
push
pushf
cmp
test
pop
ret
ficompl
push
fisubrl
xchg
outsl
fldl
push
inc
jae
jo
add
add
xor
enter
cmpsb
xor
push
dec
std
test
outsb
sub
cwtl
out
adc
sti
xor
aas
add
cld
test
xor
xor
ss
xor
pusha
or
dec
inc
pop
or
call
js
call
sbb
idiv
sbb
sub
cwtl
jle
inc
idivb
mov
into
cmp
nop
pop
pushf
inc
mulb
out
int
push
out
repnz
push
add
les
mov
push
pushf
jmp
test
push
pushl
scas
lcall
mov
repz
adc
mov
xchg
xor
add
mov
arpl
push
fisttps
icebp
add
fstps
xor
mov
es
mov
or
push
ss
jb
icebp
test
stos
mov
jp
out
inc
sbb
mov
and
mov
sbbb
jl
adc
popf
jns
aam
mov
push
mov
or
popa
dec
adc
push
mov
imul
xchg
jnp
mov
aaa
addr16
xchg
out
mov
out
mov
dec
xor
js
shll
clc
add
test
decl
rcl
adc
jmp
sbb
aaa
icebp
cmp
sbb
sub
shl
mov
in
in
mov
out
aad
cmpb
jmp
push
or
push
and
cli
xor
push
xchg
push
cmp
stos
dec
jmp
add
popa
adc
shll
ret
push
fdivl
lods
xchg
dec
mov
xchg
mov
mov
icebp
pop
stos
and
test
mov
movl
test
dec
cmp
in
add
inc
cmp
shrl
sbb
mov
dec
lds
call
push
ljmp
mov
addb
faddl
add
sti
inc
or
pop
cmp
pusha
out
fdiv
and
mov
sar
xlat
add
rorl
pop
cmc
ds
adc
roll
pop
es
and
mov
fs
pop
add
mov
stc
mov
int3
pop
pop
arpl
mov
inc
rolb
fcomip
pushl
pop
cmp
pop
add
lret
jmp
push
loope
mov
mov
cld
mov
mov
mov
pusha
jmp
inc
into
xchg
jns
andb
dec
rorb
hlt
or
cmp
jg
lea
xchg
push
imul
sub
inc
loopne
jne
jno
lcall
ljmp
and
call
flds
ret
hlt
je
std
mov
sbb
lds
push
sbb
mov
adc
das
clc
incl
ss
dec
lods
mov
insb
fisubl
into
test
cwtl
cmp
inc
or
roll
ret
add
add
adc
add
lahf
bound
dec
dec
out
mov
lret
xlat
data16
test
mov
ror
sbb
pushl
incl
data16
flds
lahf
sbb
lcall
inc
xchg
xor
or
out
push
lcall
jae
scas
clc
xchg
xor
inc
sbb
xchg
inc
decl
pushf
add
rolb
insb
jne
mov
mov
and
pop
fcomps
mov
add
adc
ja
jmp
push
lods
add
enter
xchg
imul
lcall
aaa
adc
pop
sti
and
enter
cmc
xor
das
ljmp
decl
or
xor
cmc
xor
cmc
pop
fldcw
or
xchg
scas
in
ds
cmp
pop
cld
das
mov
and
sub
add
mov
jmp
or
shlb
ds
aam
push
push
movl
jmp
rcr
aaa
pop
outsl
decl
inc
lcall
sarb
mov
pop
add
inc
mov
add
enter
loope
mov
enter
subb
lock
mov
repz
add
add
or
cli
decl
movsl
nop
cs
xchg
or
xor
sti
test
inc
jbe
insl
adc
aaa
mov
sahf
mov
dec
add
popa
mov
stc
fsubr
ss
xor
jo
jmp
ficoms
inc
mov
mov
jmp
inc
out
and
cmp
push
push
loope
adc
decl
or
adc
pop
out
and
mov
sbb
adc
daa
dec
add
adc
incl
das
gs
jns
es
jns
movsb
mov
or
aam
pop
cmp
js
cs
pushl
sti
shll
stos
pop
or
push
add
loop
and
and
xchg
outsl
adc
jbe
repz
icebp
add
jmp
repnz
sbb
jno
inc
fnstsw
js
pop
mov
adc
call
pop
add
jo
shll
add
jo
dec
iret
adc
add
inc
and
or
push
lret
jge
aad
mov
stos
or
sbb
stos
cli
pushf
movsb
push
hlt
mov
mov
push
push
incl
mov
nop
mov
mov
call
and
xchg
test
mov
fs
add
lahf
mov
pop
push
inc
and
lcall
aam
orl
push
inc
xor
inc
adc
movsb
pusha
nop
pop
xchg
or
ljmp
lods
orl
mov
pop
inc
data16
pop
add
leave
adc
imul
dec
jge
xor
fistpl
xchg
pop
mov
fdivl
repnz
pop
fs
pop
cmp
add
xlat
dec
mov
je
imul
push
movsl
adc
sti
sbb
sub
ljmp
adc
lcall
enter
add
ret
outsb
push
inc
add
out
xor
pop
mov
test
call
or
mov
sub
ljmp
or
mov
push
jle
and
fiadds
cmp
or
sbb
and
sahf
ja
ret
jno
push
dec
mov
add
ljmp
lret
xchg
daa
subb
ss
jmp
xlat
pop
clc
pop
test
insb
inc
movb
cli
push
fisttpll
dec
arpl
shrb
dec
mov
push
mov
call
loopne
add
pusha
inc
out
mov
push
arpl
cmp
dec
pop
pop
jns
incl
mov
push
dec
sbb
inc
dec
push
inc
das
sarb
jnp
insb
push
enter
cmpsl
imul
iret
sub
pushf
jne
adc
insl
jne
push
inc
test
int3
inc
lea
cmp
sub
dec
arpl
pop
outsl
mov
ret
or
sub
jbe
scas
xchg
jmp
hlt
nop
loop
lret
xchg
mov
popa
mov
jbe
enter
dec
aaa
js
mov
sub
decl
add
push
popa
js
push
push
loope
mov
lods
shl
pushf
aam
leave
xchg
mov
and
mov
dec
movsl
xor
pop
add
outsb
arpl
ret
add
cld
js
jg
dec
dec
or
outsb
fnstsw
clc
xlat
test
inc
jecxz
sbb
xchg
loopne
xor
ret
mov
push
sbb
inc
lods
in
orb
in
jl
loopne
or
xor
adcb
cmp
arpl
cld
sub
inc
sbb
lcall
cmp
test
dec
jmp
sub
stos
inc
fildl
push
loop
std
scas
push
sub
push
stc
mov
or
inc
movsl
xlat
outsl
push
pop
lods
aam
dec
pop
or
adc
adc
jg
and
loope
clc
sub
mov
dec
push
pop
cmpsb
pushl
mov
rcrb
and
dec
inc
inc
ret
mov
cmc
je
mov
iret
inc
lcall
lods
ja
pop
fldt
cmp
pop
inc
imul
mov
pop
rcl
xor
arpl
popf
xchg
dec
aas
fidivrs
lock
lock
inc
cmp
jle
adc
push
idivb
push
cltd
dec
mov
add
jmp
sub
movsl
dec
dec
xchg
repnz
push
cwtl
mov
fs
cmpl
or
sbb
jle
mov
movsb
lds
pop
lea
xchg
mov
pushl
testb
scas
mov
sbb
jge
out
ficoms
jb
add
test
repnz
sbb
insb
xor
push
ja
jno
inc
fs
aas
push
loopne
xchg
xchg
in
push
push
ret
mov
jmp
xchg
movsl
jnp
sahf
aas
icebp
mov
sbb
xchg
data16
int3
dec
dec
dec
mov
cmc
repz
mov
daa
daa
push
mov
xchg
or
cmp
jmp
mov
ljmp
cmp
or
pop
movsb
mov
hlt
psubsb
dec
ss
ds
add
iret
xchg
jp
push
popa
lret
dec
push
push
data16
decl
divl
fcoms
xchg
add
lcall
int
shlb
inc
shll
jbe
cmc
lcall
ja
clc
ljmp
ret
xor
push
adc
sub
into
push
cmc
ljmp
gs
push
add
fsts
lea
xlat
or
sub
jge
inc
ss
push
cmpb
dec
mov
jo
pusha
or
lcall
mov
popl
stc
jns
jp
sbb
mov
test
cmpl
jo
dec
push
sbbl
int
scas
mov
mov
push
add
dec
lods
adcb
and
incl
cmc
add
leave
xor
loope
lock
adc
fbstp
and
clc
adc
aas
insl
xchg
jle
pop
fisubl
pop
leave
jns
insl
push
xor
jle
int
je
jge
xlat
incb
push
fsin
jmp
sbbb
popf
test
lea
or
in
icebp
push
push
addb
lods
xchg
sti
sub
inc
pop
jne
or
inc
jo
push
loopne
pop
arpl
mov
popf
shll
ss
add
jo
cmpps
inc
and
lcall
aad
popa
mov
dec
sub
push
dec
or
ret
test
jmp
insl
push
cs
xchg
mov
mov
and
add
mov
add
scas
add
call
dec
mov
xor
lret
fildl
shlb
ja
xor
jg
cmp
jns
jmp
pop
and
xor
cmp
enter
popa
xchg
out
arpl
mov
sbb
jnp
and
mov
out
cmp
dec
ret
std
jmp
jecxz
sbb
mov
out
or
aas
bound
pop
pushf
sti
pop
cwtl
mov
add
inc
jne
push
or
out
jne
rorl
inc
repnz
push
mov
mov
enter
pop
in
insb
push
jbe
mov
je
push
lock
ret
test
lock
gs
out
add
addb
into
xchg
std
mov
mov
pop
sahf
pop
imul
clc
and
rorb
scas
mov
out
addr16
or
dec
push
outsl
inc
or
or
push
mov
xor
add
ljmp
mov
out
aam
repnz
lods
pop
mov
cmpsb
mov
jle
push
ljmp
mov
mov
pop
mov
xchg
roll
clc
push
dec
dec
mov
iret
add
pop
addr16
mov
imul
jmp
mov
jl
jnp
xchg
push
out
xor
jo
sub
sbb
je
test
mov
and
ljmp
sub
cli
pop
xchg
dec
sbb
jno
mov
xchg
fdivr
mov
mov
je
push
inc
jno
mov
pop
rorb
inc
dec
inc
cmp
mov
xor
daa
lret
bound
decl
cmp
mov
xor
sub
push
js
add
push
or
dec
ljmp
scas
aas
xlat
adc
sub
jns
jecxz
call
xor
out
clc
std
mov
mov
out
dec
push
lret
jg
dec
ljmp
xor
hlt
lds
xchg
mov
push
movsl
cmc
cmp
cli
push
xor
xchg
or
add
cmp
movsb
xor
hlt
scas
adc
jmp
lods
out
dec
popa
mov
outsb
ret
daa
jge
and
stc
xchg
jmp
fs
jg
push
sub
arpl
rorb
flds
movsb
hlt
int3
mov
loop
adc
inc
test
fsubl
dec
pop
out
popa
dec
push
adcb
xchg
or
dec
shlb
decl
xchg
jb
outsl
or
add
adc
inc
xor
call
rorl
fstps
lret
jp
pop
dec
mov
lods
scas
xor
mov
movsl
and
jg
and
decl
lret
mov
jae
cld
sbb
or
adc
movl
push
add
sbb
sbb
dec
adc
dec
add
sub
test
lock
jo
push
dec
xor
jne
jg
mov
out
cli
in
or
imul
fnsave
pop
cmp
push
fnstenv
call
pop
lock
jb
dec
add
fdivrs
inc
mov
add
and
mov
ljmp
ljmp
xchg
cmp
ret
xchg
mov
inc
mov
inc
and
rol
inc
int3
xchg
out
pusha
and
push
or
sbb
cmp
mov
sbb
mov
outsl
fdiv
and
sbb
sar
mov
rorb
daa
jp
or
incl
movsb
sub
fnsave
lds
imul
push
sbb
test
mov
add
call
sub
cmp
add
mov
mov
jbe
xchg
outsl
sbb
insl
pusha
dec
nop
add
pop
data16
push
arpl
addb
xchg
xor
pop
fstp
call
popa
xlat
mov
jns
addb
daa
rclb
inc
loope
adc
out
std
fwait
iret
nop
adcl
jmp
dec
ss
std
daa
add
and
aas
lahf
adc
push
fwait
dec
xor
loope
pop
loopne
decl
fcomp
and
xchg
inc
shrb
push
es
mov
je
andl
sub
inc
push
sbb
mov
mov
mov
int
sarb
in
aaa
ljmp
xchg
out
lret
add
and
xchg
fadds
cli
xor
push
add
pushl
mov
pop
cmp
sub
push
dec
loopne
icebp
sbb
adc
fwait
imul
xor
pop
dec
out
pop
or
jge
cmp
ss
mov
test
imul
or
mov
ret
mov
into
rorl
sar
dec
shlb
mov
data16
cltd
xor
xchg
and
fisttps
or
xor
inc
sbb
add
adc
cltd
pushl
mov
add
hlt
or
sar
pop
out
lcall
jmp
sub
jns
mov
fcompl
jecxz
mov
scas
add
jle
lock
sbb
or
test
push
bswap
cmp
mov
in
negb
jne
mov
out
pushl
popf
ret
xchg
jmp
cmp
mov
fisttpll
sbb
lret
mov
inc
cmpsb
push
mov
ljmp
clc
or
pop
imul
adc
int3
lock
fadds
xchg
loop
fxch
out
leave
popl
xor
xor
sub
pop
adc
pop
notl
xchg
sbb
lea
push
jge
daa
mov
js
fistpll
ret
add
pop
xchg
mov
ds
and
xor
pushf
scas
out
push
pop
lcall
adc
lods
sbb
fidivs
mov
cld
lret
les
mov
scas
inc
and
push
xor
cli
push
ljmp
adc
es
pop
and
add
out
inc
xchg
hlt
cli
sub
push
push
jae
js
mov
stc
scas
ljmp
xchg
jmp
jmp
and
cmp
dec
adc
sahf
jno
jns
call
xchg
incl
xchg
pop
cmp
push
pop
repz
out
xor
mov
nop
mov
sbb
hlt
call
or
sub
xchg
jns
fistl
leave
add
or
in
or
rorb
push
adc
mov
or
incl
sub
fsubrs
inc
xorb
insl
push
pushl
cld
call
xchg
dec
inc
lahf
pop
adc
adc
outsl
pop
pusha
flds
fistpl
fdivrl
cmc
sbb
outsl
sahf
out
push
negb
and
xchg
adc
dec
ret
adc
es
stos
imul
cmp
or
xor
fisttps
push
es
mov
xchg
xor
fs
pop
mov
fnstsw
mov
and
call
mov
xchg
xchg
fs
call
lock
pushf
push
cmp
icebp
fwait
and
sbb
adc
dec
inc
data16
push
jg
xlat
lods
dec
out
push
sbb
mov
or
rcrl
sbb
call
inc
in
add
mov
or
add
and
and
xchg
inc
mov
int3
jb
decl
fisubl
pusha
add
daa
add
push
dec
pop
ss
sub
dec
or
pushl
iret
mov
mov
jmp
adc
fcomps
xchg
add
mov
inc
ljmp
jns
and
inc
or
test
mov
test
sub
cmp
push
cld
loopne
hlt
test
inc
jo
ret
stc
test
add
pop
inc
jmp
jecxz
fwait
test
incl
push
adc
adc
mov
popa
xchg
notl
mov
cmp
cmp
or
add
cmp
movsb
add
xor
push
cmpsl
add
les
jp
xor
incl
jne
aas
testl
cmp
or
call
dec
push
out
push
clc
and
or
lcall
mov
ret
sbbb
add
lret
pop
clc
fbstp
sub
mov
sub
rcr
sar
lahf
pop
jo
xor
icebp
dec
data16
pop
add
aam
or
idiv
jmp
push
cmpl
mov
jmp
pop
inc
or
sub
cld
fcoms
xchg
ret
add
jl
add
fimull
bound
popf
in
les
xorb
adc
jmp
mov
mov
stos
or
lret
add
les
push
mov
inc
mov
xor
adc
sbb
js
mov
cmp
in
mov
test
xor
ret
out
sub
ljmp
pop
mov
or
insb
ljmp
outsl
sbb
aam
inc
mov
gs
cli
add
cmpsl
adc
sbb
sti
das
inc
imul
bnd
aas
mov
stos
mov
or
jbe
shl
jmp
ja
inc
les
xchg
call
push
fdivr
jg
addl
xor
sbb
incl
mov
daa
leave
arpl
or
shll
hlt
inc
xlat
fmull
xor
push
dec
jge
dec
mov
jg
sbb
dec
sub
push
jo
pop
insl
sbb
jns
mov
cli
mov
arpl
sbb
jbe
sbb
decb
scas
and
mov
xchg
incl
orl
imul
jmp
jge
push
out
mov
push
xor
xchg
xchg
xchg
fcoml
dec
ljmp
sbb
mov
movsb
call
out
scas
iret
je
int
mov
xlat
addb
subl
iret
lahf
adc
repnz
or
push
fstpt
dec
push
add
push
or
loop
mov
cmp
lret
sbb
or
mov
js
vpmuludq
xor
mov
sarb
push
das
cmp
cmp
call
icebp
nop
es
adc
push
cmpsl
gs
movsb
push
ss
aad
pop
adcb
push
xchg
dec
or
and
push
mov
cmpb
shlb
cld
arpl
dec
push
imul
jno
dec
add
lock
jle
dec
sub
inc
loope
push
test
mov
lds
in
sbbb
pop
xchg
xor
ret
inc
dec
pop
mov
rcrl
imul
push
xchg
fs
scas
icebp
mov
push
push
dec
inc
ret
lock
push
out
cmp
pop
push
or
or
push
add
and
fwait
or
xchg
add
mov
outsb
adc
outsl
inc
cmp
js
inc
jnp
sbbb
jg
pop
xchg
and
int
fadd
cltd
mov
jecxz
jns
dec
outsl
inc
inc
jl
add
outsb
jo
xor
push
outsl
dec
push
xor
popa
dec
inc
adc
and
inc
pop
dec
dec
and
daa
pop
push
test
inc
sub
jnp
xor
out
pop
mov
pop
popf
fucom
enter
out
dec
jecxz
add
xor
dec
xlat
shlb
pushl
paddsw
adc
sub
mov
xor
xor
ret
shlb
rcrl
push
ds
aas
icebp
ret
ja
inc
mov
lcall
push
fiaddl
jecxz
push
cmpsl
sbb
push
cmp
cmp
mov
mov
lahf
movsb
dec
sbb
or
enter
or
fdivrs
call
lods
mov
or
push
subl
loopne
xchg
out
push
jge
xor
imul
pop
movsb
data16
and
nop
adc
ja
mov
pop
ja
push
inc
insb
mov
int
ret
test
loope
repz
fildl
decl
pusha
clc
push
stc
mov
fistpll
and
jg
or
cld
mov
mov
jo
mov
repz
mov
imul
add
xchg
pop
jns
push
and
mov
in
imul
pop
ret
das
xor
fldenv
mov
mov
stos
dec
mov
push
pop
push
push
xlat
sbb
hlt
add
inc
test
ret
or
sbb
addr16
push
aaa
jle
dec
push
push
incl
xor
xchg
cmp
xlat
cmp
nop
mov
cmp
stos
aas
xchg
or
lods
push
lret
shrb
ficoms
inc
cmp
mov
inc
mov
pop
inc
add
and
dec
testl
les
xchg
xor
push
push
jmp
les
movsl
mov
je
sub
inc
repz
inc
sbb
push
out
add
xor
repz
or
add
shrl
lea
call
insl
inc
imul
push
outsl
push
js
lcall
lcall
inc
xor
xor
pushf
push
add
lret
fisttps
cmpsb
pop
mov
pushf
adc
xor
movsb
xchg
mov
pop
xor
cs
jbe
sbb
in
pop
ret
cmp
enter
mov
lds
dec
mov
mov
insl
hlt
dec
xchg
cwtl
sub
fadds
adc
mov
lods
pop
mov
dec
dec
and
xchg
lods
int3
dec
pop
and
sbb
stc
mov
push
pop
dec
push
mov
test
cwtl
adc
and
adc
fildl
mov
ljmp
inc
inc
xchg
sub
xchg
scas
lods
test
aad
jg
movsb
sbb
std
cwtl
clc
into
pop
repz
xchg
push
jae
dec
mov
sub
or
shrb
pop
rclb
hlt
into
xchg
dec
jne
daa
jmp
push
or
cwtl
xor
xor
inc
or
lcall
dec
fisubrl
jnp
jl
add
out
pushf
sbb
ljmp
or
fisubs
xchg
insl
js
ret
ficomps
insl
xlat
mov
push
xchg
cmp
sbb
in
pushl
insl
pop
rcl
or
push
dec
push
xlat
mov
repnz
test
lcall
ljmp
lea
loopne
pop
cmp
mov
frstor
sbb
jmp
cmc
inc
and
dec
pop
jecxz
xchg
ds
add
mov
decl
nop
lcall
or
mov
cmp
inc
mov
jo
mov
sbb
subb
gs
fcompl
popf
jp
outsl
es
jno
call
int3
push
mov
push
push
in
jge
addb
add
mov
jne
sub
mov
lea
xchg
push
pop
repnz
pop
js
xor
inc
ret
sbb
push
xor
jmp
add
dec
dec
jecxz
repnz
add
inc
sbb
mov
push
faddl
loopne
out
cli
adc
test
mov
xlat
jle
jne
movsl
or
pop
aam
adc
push
jae
ror
add
scas
jl
iret
sub
enter
xlat
and
push
leave
add
roll
test
sarl
mov
jle
dec
sub
sbb
fstpt
mov
mov
dec
or
mov
lcall
insb
imul
orb
aaa
insb
shll
mov
and
push
or
and
push
cmc
fldcw
fnop
rol
push
mov
mov
add
add
jmp
es
inc
pop
test
les
adc
push
les
pop
xor
jmp
clc
loopne
mov
mov
int3
dec
cmp
push
sti
cs
test
or
sub
out
bound
sub
jo
bound
and
cld
das
fnstenv
incl
add
add
aad
jg
sahf
add
dec
mov
adc
int
and
jne
add
or
out
cmp
cmpsl
shrl
add
xor
pop
xchg
rcrb
mov
dec
out
jnp
outsl
jns
jl
jg
lcall
nop
popa
push
or
test
cmpsb
out
mov
aas
pop
notl
clc
ljmp
stos
inc
jge
or
pushf
cmpsl
cwtl
outsl
add
cmpsb
sar
pop
in
test
lcall
push
push
loope
loopne
out
int3
daa
push
inc
adc
pop
or
mov
popa
inc
lods
xchg
lods
and
mov
and
decl
sbb
les
pop
inc
inc
inc
xor
jns
dec
add
aam
pop
mov
adc
xchg
std
jp
sahf
mov
js
fwait
mov
decl
in
repz
add
sub
push
enter
fwait
pop
xadd
jae
subb
jmp
cmp
pop
jnp
adc
mov
daa
sbb
mov
in
loop
pop
jo
cmp
push
add
add
mov
stos
cmp
aaa
test
add
enter
push
call
sti
add
test
decl
or
inc
ds
xchg
xor
mov
std
sub
inc
frstor
or
test
fwait
xchg
stc
mov
shll
stos
hlt
mov
sbb
push
xchg
fidivs
loope
and
ja
aas
repz
sbb
lock
mov
jecxz
or
sbb
mov
inc
push
add
add
cmp
adc
decl
push
shlb
inc
xor
subb
adc
inc
mov
ljmp
add
sbbb
inc
or
and
sbb
and
jmp
xor
adc
and
jno
cli
and
mov
incb
xchg
incl
lock
dec
int
and
and
stc
mov
enter
mov
mov
or
incl
cmpsl
jge
mov
loopne
stos
mov
out
inc
add
and
mov
ds
mov
shl
inc
dec
roll
add
incb
loopne
add
ljmp
jae
clc
or
ss
rclb
daa
sub
sub
dec
jle
or
sarb
jg
ljmp
inc
jo
or
add
xchg
pop
mov
repz
rcrl
xchg
sbb
adc
mov
mov
or
js
test
jg
lock
add
in
cmpb
jge
jle
cltd
icebp
jmp
push
cmp
and
add
pushf
xor
and
pop
push
xchg
xchg
fwait
ja
decl
sbb
shl
sub
inc
inc
negl
test
adc
push
les
in
mov
test
or
adc
mov
inc
adcb
mov
add
mov
cmpsb
mov
stos
ror
lods
pop
aas
sub
inc
xor
ja
ss
mov
mov
or
mov
adc
xor
cwtl
pop
hlt
push
pop
loope
into
sub
xlat
es
jg
insb
lahf
pop
dec
imul
dec
cld
ljmp
rorl
add
into
nop
insl
jb
sbb
dec
mov
insb
sub
cmp
push
cld
dec
incl
and
test
xor
xchg
xchg
xchg
cmp
dec
jmp
push
mov
mov
jg
js
imull
inc
push
pop
insb
fistpll
pop
flds
call
aas
pop
sbb
inc
test
and
adc
lea
inc
sti
popa
fdivr
out
out
mov
or
cmp
cmp
into
sahf
add
outsl
inc
nop
repz
clc
sub
ja
int
cltd
mov
jns
pop
lcall
adc
mov
cs
sbb
decl
aam
filds
enter
inc
push
bound
mov
jb
push
jp
adc
cld
fbld
dec
pop
les
pushw
sbb
jg
push
sub
xor
imul
add
dec
jo
jo
inc
outsb
ja
loope
cmp
fldl
adc
ja
ret
lret
stos
int3
jecxz
xchg
cld
push
add
ret
push
mull
imul
add
dec
rcr
test
pusha
repnz
xlat
incl
xchg
mov
rolb
push
std
ljmp
push
insb
push
mov
mov
adc
adc
jo
dec
pop
sbb
fwait
movl
xor
sub
leave
lock
add
call
loopne
popf
out
lret
shlb
outsl
pop
test
stc
mov
das
arpl
or
jle
outsl
sbb
sbb
fsubs
adc
es
mov
in
aaa
push
adc
lcall
les
pop
aaa
lds
cmpl
inc
scas
add
mov
pop
and
mov
add
pushl
jl
xor
sbb
mov
mov
and
xor
dec
call
cld
pusha
pop
orb
jnp
jae
insb
rolb
js
sub
push
push
scas
add
xchg
and
mov
out
cltd
xor
inc
mov
hlt
test
out
push
jb
xor
jg
pop
mov
das
sbb
add
cmp
cltd
dec
call
and
jle
sub
sub
jo
mov
mov
mov
ds
cmc
loopne
cli
dec
js
aam
out
and
in
daa
loopne
decl
test
xchg
dec
shl
push
icebp
adc
sahf
decl
rol
fwait
sbb
cld
cltd
jge
aaa
and
ljmp
and
mov
pushf
adc
fldl
decl
xor
xchg
xchg
inc
adc
and
call
incl
arpl
lods
ss
or
imul
mov
cmc
push
pushl
ror
xchg
sbb
pop
push
out
jecxz
addb
inc
dec
call
push
repnz
lcall
int
into
mov
addb
add
sbb
dec
test
mov
adc
jmp
or
scas
dec
hlt
push
mov
mov
fsts
sar
mov
push
lahf
dec
and
incl
aas
stos
sbb
xchg
xor
inc
popa
daa
out
and
xchg
push
incl
int
iret
jae
xchg
icebp
movsb
and
jp
fdivrs
add
sar
iret
push
pusha
decl
fldt
pop
jle
cli
mov
xchg
call
orl
cmp
fisttps
mov
adc
jne
jmp
js
call
mov
fs
dec
sub
push
add
jl
scas
out
push
rol
incl
add
jo
in
fadds
add
mov
or
jg
cmp
call
inc
repz
clc
test
inc
test
cmc
add
call
and
or
mov
aaa
cmpb
jns
mov
jo
dec
daa
in
fisttps
pusha
bound
in
sub
pop
das
shrb
and
push
pop
test
ljmp
push
and
sti
arpl
add
lcall
cmp
pop
mov
xor
ja
mov
or
aaa
std
or
enter
cli
pop
mov
test
pushf
pop
sti
dec
inc
or
add
mov
mov
popf
fdivr
jmp
fwait
enter
mov
cmp
jnp
and
inc
dec
lods
pop
or
sbb
fsave
loop
add
mov
stos
daa
pop
jmp
les
dec
dec
scas
push
mov
stc
pop
sbb
and
hlt
stos
or
cmp
jg
fiaddl
es
jge
movsl
push
gs
mov
xlat
scas
cld
rol
push
jae
daa
add
ljmp
pushf
sub
xor
push
clc
or
sahf
or
sbb
ret
mov
mov
add
ret
aad
or
xchg
jge
mov
out
add
lds
fidivrl
pop
add
add
call
pop
imul
jne
add
mov
decl
cmpsl
mov
xchg
and
push
xchg
stos
mov
and
jo
dec
xchg
pop
test
and
or
outsb
add
pusha
icebp
sbbb
adc
push
mov
lret
push
cmp
push
mov
bound
lods
push
addl
incl
and
push
sub
push
flds
cmc
sbb
icebp
in
pusha
mov
lcall
in
fbld
or
arpl
adc
rcll
jo
xor
jmp
pushf
cltd
test
cwtl
push
ds
xchg
jb
pop
enter
ljmp
es
sub
or
repnz
rolb
jmp
sbb
data16
xchg
fwait
xor
pop
mov
ret
roll
dec
jl
dec
aam
or
xchg
lret
daa
bound
test
dec
das
xchg
cmp
in
outsl
adc
push
mov
rcl
ss
dec
in
gs
subb
les
pop
cs
into
adc
incl
hlt
sarl
jae
jmp
sub
mov
das
ret
push
cli
dec
pop
je
pop
dec
inc
dec
lea
mov
mov
fldcw
mov
fisttps
xchg
push
jne
push
inc
sti
push
out
cltd
js
xor
mov
add
dec
mov
xchg
pop
or
lods
int
mov
pop
mov
xchg
dec
adc
cmp
gs
in
sti
scas
adc
jle
xor
pop
push
mov
call
ja
es
dec
cmp
jl
outsb
xchg
pop
dec
sbb
cmp
push
mov
jle
add
add
add
add
add
inc
adc
sbb
in
add
test
decl
pop
sbb
xchg
add
sbb
push
add
loope
pop
das
mov
xchg
incl
lret
inc
in
jmp
imul
inc
sbb
add
inc
pop
test
mov
inc
xor
out
addr16
sahf
cmpl
xor
inc
xchg
divb
inc
out
pop
add
push
pop
add
decl
stos
add
adc
add
pushf
and
js
mov
out
dec
aaa
scas
add
push
fstpt
and
cmp
inc
dec
adc
fildll
jno
fnstcw
mov
mov
push
dec
xor
mov
es
push
mov
sbbb
pop
lea
jbe
clc
in
test
sub
inc
add
mov
sub
mov
or
inc
ss
arpl
or
in
incl
mov
sub
adc
jnp
push
sub
xlat
dec
add
and
dec
incl
sub
dec
inc
dec
adc
push
push
mov
jno
mov
rclb
push
and
xchg
test
lcall
add
ficoms
data16
ja
mov
xchg
shll
or
subl
cmp
push
push
or
aas
test
inc
lds
or
add
clc
ucomiss
ret
cmp
jmp
add
mov
rcl
adc
nop
push
aas
inc
lcall
rcrb
out
pushf
loope
mov
add
lret
addr16
mov
add
out
leave
push
adc
adc
incl
fstpl
sahf
in
ret
and
or
mov
cld
mov
decl
add
jns
roll
add
add
out
mov
stc
add
sub
decb
mov
inc
xor
xchg
adc
inc
js
push
sbb
cmp
incl
mov
in
test
rorb
lss
imul
and
imul
popf
sahf
sbb
jno
movsl
aas
xor
jg
sbb
lods
movsl
xchg
inc
or
pop
int3
xchg
popa
dec
int
scas
inc
mov
std
call
adc
push
lea
cmc
dec
add
or
push
jae
xor
adc
mov
mov
fildl
int3
stos
orl
scas
loop
outsb
inc
test
call
addl
ljmp
cmc
mov
enter
or
cli
add
adc
add
lcall
or
mov
xor
mov
xor
lock
dec
dec
fs
jbe
ljmp
in
xor
je
mov
and
mov
sub
cmpsb
out
jecxz
out
and
cmovb
xchg
call
mov
cld
inc
in
lcall
rol
ljmp
aam
jg
jae
pushf
loopne
mov
xchg
xchg
cltd
mov
add
lcall
movl
push
jle
jle
ds
out
add
mov
and
ja
add
ljmp
jl
je
shlb
jb
mov
inc
mov
mov
out
repz
iret
lret
mov
add
movsl
dec
inc
push
into
inc
sub
aas
mov
or
mov
adc
addb
scas
cwtl
sarb
ficoml
orl
test
test
add
add
xor
jg
enter
popa
sti
or
mov
xchg
inc
or
insb
lret
mov
shll
mov
sti
mov
or
cwtl
dec
jg
imul
push
adcl
sbb
cwtl
sbb
loope
dec
jne
ljmp
repnz
in
adc
and
repnz
pushl
sbb
or
fnsaves
jbe
cmp
mov
mov
mov
loop
rsqrtps
fwait
dec
sbb
mov
mov
movsl
or
sbb
cmp
out
cmc
push
out
cmp
fcomip
ljmp
xchg
wrmsr
mov
lock
out
sub
mov
inc
icebp
out
jg
incl
jmp
clc
sbb
or
in
add
in
gs
or
adc
or
cmp
xlat
addr16
std
mov
cmp
jnp
pop
or
add
lcall
mov
mov
call
cli
nop
scas
repz
xchg
cmpsb
mov
pop
jecxz
loopne
loope
inc
aad
or
mov
push
and
xchg
sub
lods
pop
cltd
sub
daa
sub
inc
or
sub
stos
jp
leave
xor
call
shlb
add
and
xchg
pushf
add
in
inc
adc
icebp
lods
sbb
and
xchg
push
movsl
add
iret
dec
clc
mov
fcomip
and
and
push
cmp
adc
leave
loop
arpl
dec
fistps
push
or
outsl
clc
loop
add
or
push
add
hlt
or
decl
repnz
cs
inc
daa
mov
mov
lcall
sahf
cwtl
fdivrs
jae
insb
cmp
push
sbb
dec
mov
or
call
into
push
sbb
jns
pop
popf
ss
mov
pusha
sub
pop
push
cmp
lcall
adc
cmp
cld
or
mov
fs
lret
pop
dec
lods
lods
and
jmp
cwtl
push
test
loopne
jb
inc
xchg
out
cs
ljmp
leave
ret
aaa
jge
pop
hlt
cmp
inc
imul
and
mov
add
jb
cmpsb
fadds
mov
pop
out
adc
mov
xor
pop
dec
sbb
sbb
xorb
xchg
pushl
test
ret
dec
lcall
and
scas
enter
adc
lcall
lret
in
incl
inc
mov
aas
insb
adc
sarb
dec
push
negl
jg
call
ret
rcrb
xchg
leave
out
mov
add
cmp
pusha
inc
mov
sub
pushl
pop
or
jno
hlt
out
mov
popa
mov
loope
xchg
test
nop
decl
or
outsb
push
imul
adc
inc
enter
cmp
add
daa
mov
rolb
pop
jb
or
sarb
ja
loopne
decl
loop
lds
repnz
dec
sub
adcb
pop
add
jg
movsb
inc
mov
mov
push
and
sub
dec
cs
cwtl
and
shl
ja
or
add
pusha
or
sbb
pop
lahf
daa
scas
dec
or
sub
xchg
mov
pusha
adcb
outsb
nop
cmc
lret
xchg
std
xchg
cmp
andb
jbe
ret
roll
imull
mov
sub
gs
aas
add
clc
jmp
insb
push
sbb
int3
mov
dec
sbb
decl
fnstcw
jp
rcll
xchg
aam
sub
pushf
inc
cmp
add
inc
sbb
aad
or
pop
lcall
and
call
jo
mov
xor
sub
cmpsb
sbb
cmp
movsl
jp
out
pop
push
lea
in
pusha
jle
call
sbb
add
push
dec
xchg
mov
loopne
stc
add
nop
std
xchg
mov
pusha
cmp
or
ret
cmc
fadd
bound
jbe
push
pusha
sti
mov
push
aaa
mov
ja
rolb
fidivs
jo
fldenv
xchg
incl
in
dec
stc
ja
jne
std
jnp
mov
test
xor
lcall
stos
fsts
and
add
add
nop
jp
loope
ljmp
jg
pop
cmp
xchg
movsb
cmp
cld
add
mov
cmp
loope
cmp
mov
push
in
push
fldt
mov
pop
mov
cs
pop
cld
pop
jne
jg
sbb
sub
sbb
mov
add
aaa
leave
gs
lcall
adc
add
mov
stos
mov
inc
sbb
stos
pusha
in
mov
pop
xlat
loopne
jno
incl
ret
hlt
adc
test
sub
decl
xchg
sbb
inc
loope
cmp
xor
das
arpl
xor
mov
xchg
dec
mov
jg
fnstsw
orb
inc
dec
xor
add
fcmovb
add
pop
xor
call
fldt
push
add
dec
mov
out
arpl
lods
push
mov
test
xchg
sbb
and
pop
push
int
mov
jmp
lock
adc
loopne
push
test
inc
dec
je
int3
push
loope
add
jg
incl
pop
gs
je
aas
adc
loope
sub
sub
shrb
ds
sub
outsb
rcrl
sbb
test
out
xchg
add
mov
inc
imul
mov
jge
add
cli
adc
ljmp
and
mov
js
movsb
loopne
orb
lea
rorb
xchg
call
dec
fmull
mov
push
pushf
mov
es
xchg
dec
outsl
fldl
mov
cld
ljmp
cmp
adc
pop
daa
jl
cwtl
icebp
mov
fcomip
jg
lret
insl
lcall
flds
les
fdivl
mov
jbe
cs
mov
ljmp
fcoms
aas
out
add
add
fsubs
mov
pushf
stc
arpl
xor
fcomip
call
add
je
std
arpl
mov
mov
cmp
add
inc
sbb
hlt
push
pop
push
add
sub
ljmp
and
into
xor
or
sub
lods
add
dec
daa
fcomip
pop
stos
mov
push
cmpl
jecxz
pop
aas
fnstcw
sbb
jmp
ror
fnsave
dec
add
or
adc
lret
add
ss
add
mov
fidivs
out
fldenvs
mov
cs
add
mov
mov
imul
lret
fwait
decl
push
jmp
dec
pushf
mov
test
decl
loop
mov
shl
mov
shll
mov
sbb
and
jp
lods
mov
sarb
add
xlat
call
adc
push
subb
sub
mov
jl
call
or
jg
repz
movsb
pusha
add
daa
push
mov
fimull
decl
dec
ljmp
in
add
add
xchg
cmp
std
lods
inc
and
nop
add
inc
cmpl
repz
adc
adc
cmpl
rorb
test
ljmp
cmp
sbb
lock
pop
adc
in
pusha
jg
sbb
pop
fsubs
das
push
or
mov
mov
lcall
and
loopne
enter
mov
push
rcll
ret
sahf
jo
inc
fisubs
sti
jmp
or
add
repnz
cmp
bound
pusha
je
incl
loop
ud1
adc
cli
pop
xchg
stc
or
rcll
adc
popf
lcall
sbb
ret
rcr
pop
push
sbb
mov
in
xor
int3
pusha
sub
jmp
mov
mov
fs
loopne
das
and
adc
adc
call
notl
push
xor
nop
mov
je
fbstp
push
loopne
subb
jno
cli
ret
cmp
cwtl
loop
mov
inc
enter
sbb
inc
sbb
sub
cmp
ljmp
mov
push
shl
mov
xchg
xchg
divl
xor
js
pop
mov
clc
dec
popf
pusha
and
aas
adc
adc
pop
push
popf
inc
xor
jg
jmp
jecxz
ljmp
fwait
sub
mov
dec
jns
jmp
idivb
and
xchg
jp
cmovp
jo
movsl
pop
push
mov
adc
cmc
ljmp
invlpg
jbe
add
adc
push
outsb
jecxz
cmp
mov
dec
aas
push
xchg
add
rorl
inc
mov
shlb
mov
mov
pop
loopne
call
gs
push
clc
jae
adc
add
stos
popl
jmp
add
repnz
ss
adc
inc
jnp
lea
ljmp
adc
jg
gs
out
enter
movsb
call
cwtl
call
out
add
push
push
push
pop
jp
clc
stos
xor
test
stc
stos
inc
mov
mov
pop
into
xchg
scas
add
fnstsw
stc
out
cmpsl
loop
aaa
add
jecxz
leave
pop
incb
dec
addps
loope
or
jmp
xlat
add
rorl
sbb
ja
shrb
lea
mov
mov
xlat
jo
jns
mov
fnstsw
stc
mov
incl
push
mov
and
push
add
push
push
scas
int3
test
xor
adcb
testb
rcrl
mov
popa
push
jmp
adc
xchg
mov
inc
in
decl
or
fs
mov
sbb
lock
xchg
cltd
inc
clc
xlat
mov
xchg
cs
lcall
pop
cltd
popf
xor
and
ds
xchg
mov
rolb
add
xor
sbb
cli
decl
scas
pop
adc
ror
jp
xor
cs
sbb
cmp
icebp
out
pop
inc
sub
jle
add
or
lcall
int3
pop
mov
ja
xchg
add
lds
mov
ja
cmp
adc
mov
mov
clc
push
std
out
sub
inc
or
aad
arpl
mov
jmp
add
jmp
or
xchg
add
test
mov
push
inc
std
out
nop
cwtl
sbb
add
lret
dec
mov
mov
add
adc
scas
lds
adc
cmp
xlat
insb
ds
loope
int
sbb
fcomip
incl
or
xchg
out
fcompl
sub
push
jg
jns
mov
pop
into
lcall
add
outsl
push
fwait
xor
add
sbb
mov
xor
xor
mov
jno
shll
mov
jmp
lahf
insl
and
dec
mov
mov
pushl
repz
rolb
add
fwait
push
loope
xchg
enter
or
add
push
loope
add
jno
dec
xchg
pop
loop
jp
mov
or
push
mov
add
aaa
std
call
addb
or
lds
lcall
add
cmp
sbb
rolb
insl
pop
xchg
adc
arpl
int3
bound
sbb
jmp
ja
jmp
pop
push
orb
imul
bound
mov
rolb
xchg
and
pop
inc
sbb
push
mov
imul
call
push
xchg
or
and
insb
imul
mov
or
aas
mov
jle
xchg
pop
and
cmp
in
mov
test
add
inc
shlb
xorl
cmp
push
js
and
lahf
mov
xchg
pusha
mov
push
add
push
das
xchg
aas
negb
mov
xor
idivl
pop
scas
loopne
cmc
add
pusha
dec
sbb
call
incl
pop
ss
push
pusha
cmp
mov
hlt
push
push
mov
icebp
je
arpl
jns
dec
push
sub
sarb
rcrl
push
sbb
out
pop
add
mov
arpl
aad
in
jne
cld
rcl
popa
out
loopne
dec
xchg
xor
ja
cmp
cwtl
aaa
arpl
and
sub
pop
enter
lea
icebp
in
push
shll
push
movaps
sbb
sbb
add
xchg
push
or
jbe
sbb
pushl
adc
mov
mov
add
daa
xchg
mov
ret
add
adc
jmp
push
pop
pop
test
sbb
xchg
fcoml
fistpll
arpl
jl
notb
adc
add
lock
call
call
jle
or
xchg
cld
mov
test
loop
popa
mov
decl
sub
mov
push
daa
mov
aad
dec
sub
pop
std
and
call
fsubrs
dec
sub
push
add
mov
jb
pop
hlt
das
mov
incl
or
fbld
dec
jmp
and
xchg
mov
mov
ltr
outsl
cli
decl
inc
jns
dec
js
xlat
add
stc
rol
sbb
dec
into
leave
lods
cmp
mov
push
inc
fnstcw
jae
shr
es
adc
repnz
stc
add
mov
dec
jbe
xchg
ss
pusha
and
fcoms
out
out
xchg
mov
call
mov
adc
iret
daa
ret
push
add
pop
mov
ret
repz
pop
clc
dec
sahf
cmpsl
aaa
outsl
dec
repz
out
sbb
ljmp
or
add
lahf
mov
sub
jo
hlt
jne
inc
call
lcall
add
into
movsb
shll
pop
out
dec
dec
push
lods
xlat
push
add
jmp
or
mov
mov
fisubrl
or
pop
inc
pop
into
adcl
ljmp
sbb
pushf
shll
add
or
adc
fcomip
mov
mov
pop
adc
and
jmp
and
pop
popa
in
sar
pushl
add
adc
arpl
out
stc
hlt
or
jmp
mov
mov
sbb
mov
mov
lock
add
jle
pop
lcall
sbb
mul
out
daa
movsb
jmp
addr16
and
pop
add
or
add
sbb
incl
int
fildll
xor
or
add
std
jnp
jl
cld
incl
ds
jo
arpl
test
loop
add
add
inc
cld
jg
add
fdivl
adc
sbb
incl
out
cmp
in
mov
mov
fadd
adc
and
loopne
inc
or
repnz
sti
loope
push
xchg
filds
and
cltd
inc
cmp
imul
pop
xor
adc
cmp
shrb
cmp
lcall
cmp
lahf
xor
sbb
out
xor
out
fnstsw
nop
adc
decl
pop
imul
xor
or
jae
or
rolb
nop
inc
jp
adc
fidivs
inc
fstpl
pop
lcall
subl
and
stos
push
test
pop
lock
push
and
and
loopne
or
lcall
add
mov
adc
pop
subb
mov
scas
mov
daa
pushf
daa
and
mov
mov
nop
fwait
lods
lret
dec
xor
pop
xchg
xor
loopne
pop
gs
in
pop
iret
mov
add
fbstp
jg
and
sub
addl
add
add
pop
xrelease
les
or
add
jno
icebp
lock
adc
push
aam
test
push
call
sbb
call
cld
push
add
into
addl
push
sbb
add
mov
outsl
jns,pn
mov
out
mov
mov
mov
sbb
lcall
xor
adc
adcb
cmp
das
cli
decl
mov
dec
mov
jae
mov
and
dec
test
rcll
or
pop
test
push
add
and
dec
shlb
jb
idivl
add
daa
arpl
push
jne
decl
add
inc
in
jmp
or
mov
xchg
add
dec
out
adc
icebp
jg
push
xchg
iret
aaa
les
xchg
inc
shlb
sbb
sub
push
out
mov
or
pusha
ffreep
or
aas
out
ror
cs
add
decl
cltd
pop
xchg
fwait
mov
test
cmp
add
mov
insb
jmp
int3
ret
lods
daa
aaa
mov
ja
lcall
out
pop
ljmp
adc
div
ljmp
pop
push
jmp
lahf
xchg
jbe
or
pop
testb
xchg
jge
jo
push
jmp
push
int3
femms
loopne
pop
cmc
jmp
sub
sub
movsb
mov
xchg
jmp
shl
jmp
insb
xchg
sub
lods
pop
sub
sub
jb
xor
icebp
test
or
call
std
decl
push
mov
jg
pop
cmpsb
cmc
enter
push
or
test
insb
dec
xchg
mov
test
jne
in
push
xchg
pop
in
subb
add
in
xchg
and
jge
add
and
call
nop
cmp
out
sbb
xchg
xchg
call
loopne
fs
fwait
ret
gs
outsl
imul
jge
add
subb
mov
clc
pop
bound
sbb
or
movsl
push
mov
pushl
pushaw
in
adc
in
and
pop
int3
pushf
push
hlt
add
jb
mov
lret
cmp
int
bswap
inc
mov
insl
jle
sbb
movsbl
mov
cmpsl
xor
nop
scas
adc
sbb
and
rclb
orl
cmpsb
xor
cs
and
insb
je
cmpsb
pop
pusha
stos
clc
xchg
jmp
outsl
clc
decl
sbb
cwtl
xor
in
out
lock
xor
stc
xchg
mov
ss
or
incl
gs
push
mov
lods
repz
add
fwait
push
in
filds
inc
jno
sbb
dec
xor
pop
lock
adc
lcall
fcoms
or
xor
inc
fisubs
cmp
stos
repz
stos
push
xor
xchg
mov
xchg
add
ja
aad
in
dec
mov
loopne
xchg
aad
lret
test
adc
add
or
enter
cmpb
pop
lcall
call
popa
icebp
popf
popa
xchg
leave
dec
mov
fst
mov
pusha
sub
lahf
add
jmp
fstpl
jb
mov
and
shll
movsb
cld
jmp
mov
frstor
shrl
bound
cwtl
ss
loope
mov
clc
incl
push
mov
fsubrs
jno,pn
dec
imul
xchg
dec
ret
scas
aam
and
test
and
dec
loopne
mov
adc
adc
jg
fwait
movb
push
jp
inc
cli
pop
popf
stos
iret
jg
mov
pop
enter
mov
int3
iret
dec
pop
orl
mov
push
mov
add
icebp
pushf
and
cmp
cmp
mov
inc
aas
push
call
imul
mov
mov
xchg
sarb
inc
mov
test
mov
xorb
xchg
jne
and
adc
add
mov
decl
lock
pop
adc
testl
iret
ljmp
xchg
xor
incl
mov
dec
add
sbb
call
repz
push
clc
mov
or
cmpsb
icebp
stos
nop
jg
ret
mov
outsl
mov
pop
iret
rorb
lret
inc
mov
call
pop
adc
push
scas
in
or
adc
lods
int
pusha
cmpsl
enter
inc
mov
inc
xchg
loop
cmp
test
leave
mov
lock
lgs
add
mov
xchg
xor
jg
adc
sub
sub
fmuls
orb
fstps
push
and
bound
xor
sbb
pop
push
mov
loope
lcall
in
cmc
or
aas
cmp
pminsw
xchg
xlat
xchg
mov
jmp
push
push
or
das
aaa
test
dec
adc
stc
jae
or
pushf
cmp
lcall
rol
lcall
sub
mov
in
mov
ljmp
jbe
lock
decl
mov
add
pusha
les
xchg
add
dec
mov
arpl
lcall
hlt
pusha
push
outsb
xor
xor
pushl
lds
sbb
push
adc
xchg
mov
out
cmp
incl
inc
xchg
mov
and
lahf
int3
xor
mov
cmp
mov
mov
repnz
pop
std
pushl
adc
sbb
jno
mov
push
mov
cmp
loopne
stc
add
push
add
cmp
cli
sub
icebp
mov
or
into
decl
xchg
sub
mov
lea
mov
push
xlat
push
mov
js
push
xchg
and
fimull
sbb
lcall
cli
lahf
test
scas
lret
pop
std
jmp
in
add
mov
mov
adc
addb
int
ds
jne
loope
mov
sahf
jle
jno
popa
xchg
add
jnp
push
add
jg
cmp
ret
int3
jnp
pop
inc
push
cmpsb
add
add
push
and
xchg
sub
jp
inc
mov
mov
add
pop
xor
movsl
adc
add
je
add
js
imul
loop
push
mov
sub
pop
pop
pop
xlat
ss
call
xor
or
cwtl
repnz
inc
add
add
int
repz
leave
mov
cld
cmpxchg
clc
cmpsb
cltd
push
sbb
mov
pushf
test
jo
stos
adc
adc
mov
or
decl
testb
ret
fcoms
jecxz
jg
pusha
xchg
aam
add
mov
mov
cmpsb
pop
and
loopne
stos
push
or
aam
shl
dec
sub
mov
js
ss
lock
xchg
jecxz
adc
js
out
clc
stos
sub
sub
sbb
or
in
jo
je
js
cmc
jg
pop
fimuls
popl
jo
sbb
adc
jl
add
xchg
repnz
out
xchg
jecxz,pt
jb
cmp
cmp
mov
jb
cmp
lcall
js
add
and
jb
xor
pusha
cs
in
xchg
cs
push
adc
mov
jmp
popf
and
mov
or
adc
scas
mov
lea
push
xor
mov
inc
mov
stos
loopne
sub
mov
mov
dec
jle
decl
or
cmpsl
dec
and
aad
cli
add
jg
pop
push
and
jg
fbstp
cmpsb
mov
sub
cltd
stos
lock
cli
jmp
dec
xchg
add
jmp
aam
clc
dec
dec
push
inc
jae
adc
jg
scas
outsl
out
xor
mov
and
add
sub
addl
std
incl
mov
xor
pop
repz
imul
test
mov
add
and
inc
mov
lods
call
add
jb
arpl
mov
inc
mov
xchg
mov
aaa
sub
sarb
lods
stos
pop
xchg
mov
and
dec
iret
fs
xchg
adc
mov
test
aaa
sbb
cmpb
jl
shlb
sub
inc
bound
jne
cmp
aaa
sarb
add
xchg
jl
aad
adcb
mov
inc
fsubp
incl
loope
loopne
add
test
imul
adc
lcall
dec
mov
call
sbb
jns
xor
ljmp
out
insl
leave
mov
pop
dec
lods
mov
sub
enter
xchg
lock
lcall
mov
loop
fildll
adc
xchg
lcall
lcall
inc
icebp
push
mov
lods
jle
ret
movsl
xchg
sarb
xor
mov
jmp
sub
cmp
inc
jns
sbb
mov
arpl
or
stos
stos
fstpl
decl
jp
adc
cmpsl
roll
mov
add
repz
adc
add
out
mov
movsb
mov
add
lods
sub
add
jg
std
outsb
inc
mov
imul
sbb
mov
xchg
or
lcall
imul
repnz
lret
subb
lret
xor
incl
pop
add
jmp
andb
sbbl
and
adc
sub
sbb
mov
add
and
sbb
les
out
dec
sbb
aas
mov
pusha
sahf
xchg
push
push
or
ljmp
sahf
xchg
in
sub
lret
movsl
fwait
inc
ljmp
cmp
cmp
push
mov
and
rclb
jl
cmp
ja
add
add
add
mov
ljmp
jge
test
in
cmpsb
sbb
dec
and
cltd
lret
cmp
call
mul
mov
sbb
mov
outsl
inc
repz
xor
pushl
out
inc
stc
jne
or
dec
inc
imul
fildl
aaa
insb
in
flds
push
and
adc
jl
lea
daa
mov
or
mov
push
xor
enter
ret
ret
pop
inc
push
cmp
ja
push
ljmp
cmp
xor
and
fiadds
sub
ljmp
push
outsl
in
push
xchg
or
in
inc
jmp
rcr
push
adc
out
push
jae
adc
adc
xlat
test
decl
clc
inc
mov
xchg
popa
add
testb
and
cli
decl
and
test
stc
std
cmp
or
adc
inc
ljmp
xor
xchg
jns
sbb
sbb
leave
pop
inc
inc
roll
mov
lahf
ja
push
mov
adcb
sbb
dec
outsb
dec
xor
inc
adc
lds
popa
subb
incl
xchg
add
leave
ds
add
in
xor
in
ja
push
jmp
and
cwtl
fdivrl
dec
mov
loopne
mov
and
xchg
fimull
cmpsl
fstps
ljmp
cwtl
cmp
jb
and
xchg
idivl
push
repnz
xor
jg
test
push
shll
adc
sbb
inc
add
xchg
mov
shl
adc
jecxz
sbb
mov
xchg
xor
xchg
push
mov
movl
call
pop
pop
add
inc
pop
add
cld
sub
and
add
inc
in
adc
int
decl
jmp
shl
inc
xchg
fstl
cli
or
xchg
sub
decl
fstpl
mov
int
mov
xchg
stos
or
or
sbb
mov
outsl
ret
dec
xlat
mov
divl
and
pop
jo
call
sub
and
push
cmpsb
inc
xchg
inc
rorb
push
mov
fwait
mov
inc
cltd
xor
and
adc
xor
inc
fnsave
aaa
movsb
add
adc
shlb
pushl
or
or
pop
push
xchg
movsl
std
mov
ljmp
adc
pop
fcmovbe
push
xor
inc
popf
testl
mov
and
sub
inc
push
loop
je
out
xchg
fwait
imul
xchg
insb
mov
sbb
jns
sti
inc
fs
cld
pop
stos
xchg
jl
push
pushf
hlt
mov
out
sub
jo
xor
aam
imul
loop
fwait
popa
std
dec
pop
aam
test
popa
jbe
sbbl
xchg
xchg
mov
repnz
jae
add
stc
dec
movsl
in
mov
lods
cli
sarb
lock
or
push
pop
xor
into
lods
shll
dec
loopne
xor
pop
mov
push
test
jo
or
sub
mul
rolb
movsb
hlt
dec
hlt
mov
mov
jl
jb
pop
jno
push
xor
loop
lcall
cld
push
or
sub
pushl
sbbb
imul
movsb
rclb
lret
repz
xor
std
in
mov
pop
pushl
incl
push
aaa
xlat
out
loopne
xor
push
push
lods
cmp
div
fadd
push
outsl
mov
aaa
orb
loope
dec
sti
add
xor
or
int3
mov
call
stos
inc
cs
dec
les
into
mov
outsb
aad
lock
cmpb
xchg
jbe
sbb
ljmp
or
fsubs
or
or
sbb
sbb
mov
cmpsw
jb
inc
push
cmp
addb
adc
int
jne
lds
pop
mov
dec
or
adc
push
jg
fisubrs
aam
jmp
jns,pn
test
lret
inc
xchg
xchg
loop
inc
xchg
ljmp
andb
out
out
lahf
je
sahf
ret
xor
in
rorb
ja
mov
sar
lcall
dec
loope
xchg
xor
addr16
insl
push
lods
add
add
leave
xor
ror
push
ja
lods
mov
cs
incl
add
ss
sub
dec
mov
imul
addr16
out
cli
fistpll
push
pop
nop
pop
dec
ljmp
pop
aas
imul
jne
incl
filds
mov
lcall
or
or
je
sbb
jbe
imul
adc
cltd
mov
stc
daa
lahf
andl
pop
jbe
ud0
roll
int3
sub
and
pop
cmpsb
add
incl
pop
pop
test
es
cmc
call
mov
dec
adc
sbb
loopne
out
es
hlt
fbstp
in
dec
cmp
add
push
stos
mov
hlt
mov
lds
xchg
xlat
aaa
cwtl
jb
icebp
outsb
cmpsb
dec
test
or
call
mov
jbe
mov
fidivrs
jae
and
imul
jl
test
add
mov
ror
rorb
push
inc
rorb
arpl
mov
cmp
popl
repz
stc
push
aaa
push
mov
in
dec
inc
sub
mov
and
mov
or
lock
sti
push
stos
xchg
rolb
dec
outsl
call
jne
sub
fstpl
loope
aas
cwtl
sub
test
xlat
mov
pop
mov
movsl
sar
jbe
cmp
outsb
mov
cmp
dec
mov
fildl
hlt
xchg
rclb
sbb
pusha
jnp
sbb
out
lock
loopne
stos
mov
adc
aaa
cli
and
push
lods
push
js
ljmp
data16
xchg
lods
xchg
push
ja
aas
mov
dec
test
scas
cmp
je
sbb
and
fistpll
jl
hlt
sub
inc
mov
jb
pop
packsswb
je
out
stc
lret
hlt
fs
aaa
rcll
xor
hlt
nop
lahf
int
mov
mov
aam
jge
arpl
sub
es
stc
inc
mov
jmp
les
es
adc
imul
sbb
outsb
add
mov
adc
inc
jge
and
adc
out
scas
daa
cmpsl
cmc
jb
cmp
pop
pop
mov
sub
jmp
and
inc
mov
add
xor
push
dec
cmp
ljmp
xor
mov
sub
sbb
sub
lods
mov
inc
ljmp
mov
loopne
mov
pop
mov
popf
inc
lods
ljmp
adc
sbb
ljmp
decl
push
xchg
pop
mov
mov
enter
pop
mul
adc
fidivs
lcall
mov
loopne
popf
mov
popa
mov
jb
push
jae
push
jbe
inc
pushl
add
or
push
mov
incl
dec
loopne
pop
jg
inc
lahf
neg
in
repz
scas
jge
mov
push
psrlw
pop
loopne
sub
pop
sbb
and
push
insl
add
mov
outsb
cmp
sub
sbb
aad
cmpsl
push
dec
cmpxchg
adc
add
imul
xchg
in
xchg
adcl
incl
inc
icebp
xchg
mov
js
jb
mov
sbb
jns
xor
fcomip
mov
push
pop
or
mov
push
andb
xlat
fbstp
mov
shll
in
decl
xchg
push
sbb
cmp
cwtl
mov
pop
dec
aaa
sub
cli
push
scas
imul
inc
out
sti
or
jns
testl
xchg
inc
pop
sub
sti
lcall
pop
scas
pop
mov
jo
or
fldt
addl
sub
filds
scas
adc
ret
aad
mov
sub
cmp
pushl
cld
jge
dec
popf
cmc
dec
into
aas
cmc
or
push
sub
arpl
jge
ljmp
out
test
test
fadds
lahf
dec
jo
sbb
jns
hlt
in
xlat
xor
add
stos
lods
out
mov
pop
inc
push
cli
jg
jns
jl
sub
enter
sar
dec
movsl
sbb
push
inc
jae
pop
hlt
push
cld
stos
adc
push
mov
repnz
xor
jecxz
addr16
mov
fbstp
test
pop
mov
xchg
mov
mov
xchg
add
test
out
incl
add
dec
pop
xor
inc
shrb
adc
and
ds
jne
pushl
mov
out
jb
shll
insb
pop
pop
sbb
mov
faddl
ljmp
hlt
dec
or
in
sti
test
jb
jns
mov
xor
jg
incl
jne
mov
push
lods
add
pop
pop
aas
and
jge
xor
ljmp
in
xchg
adcl
inc
push
dec
jbe
pop
jmp
iret
js
mov
mulb
iret
jmp
popf
sti
push
mov
call
adc
sbb
fstpt
mov
or
mov
xchg
cmpsb
lods
xchg
mov
or
mov
out
pushl
js
fstpt
xor
loop
xchg
push
pop
dec
movsb
cld
mov
testl
movsb
clc
lcall
mov
push
and
mov
push
mov
xor
push
loope
sbb
roll
pop
xor
test
jp
call
rolb
enter
xor
das
mov
movsb
xchg
shrb
test
push
mov
dec
stos
add
cli
add
xor
inc
pop
inc
or
in
fisubrs
sar
mov
mov
ljmp
fists
sbb
into
fiaddl
cmp
les
jg
xchg
mov
jmp
push
fdivrl
xchg
cmp
out
xor
decl
into
lods
in
shlb
jo
push
sub
jb
ds
jmp
pushl
pop
pushf
inc
imul
imul
xor
ds
icebp
popf
mov
stc
call
jg,pn
outsb
sbb
push
rcrl
fcomip
or
cli
push
adc
mov
xor
sbb
mov
push
fmuls
jb
jecxz
cltd
push
test
ret
cmp
lods
mov
cmp
out
jb
sbb
cltd
xor
lahf
xorb
mov
lahf
sbb
cli
mov
adc
adc
push
cmpsb
cs
imul
mov
jmp
jl
mov
lods
jne
push
sbb
inc
insl
jge
incl
clc
push
fldl
or
pop
arpl
ret
shl
sbb
mov
ljmp
iret
mov
rorl
insb
les
aad
mov
out
mov
das
js
jb
mov
xor
mov
and
mov
cld
test
ss
inc
into
pop
and
sbb
push
jg
ljmp
sbb
sub
addr16
fistpll
cwtl
add
mov
cmp
fcompl
adc
ljmp
lock
cltd
cmc
push
fmul
cmp
push
mov
jge
or
js
ljmp
sbb
aad
xchg
mov
out
pop
hlt
dec
testb
mov
sbb
push
and
mov
xchg
out
and
movsb
push
lea
popa
mov
mov
pushl
aam
push
loope
popl
xor
stos
or
adc
pop
and
lea
push
test
and
jb
out
xor
std
cmp
ljmp
incb
test
out
outsb
jbe
mov
daa
push
hlt
int3
and
push
push
mov
data16
idivl
sub
dec
sub
ja
cmp
out
das
lds
push
mov
pop
lock
mov
js
sub
lds
and
into
mov
xchg
ja
fwait
lcall
int3
or
inc
dec
inc
out
das
cmp
in
adc
jmp
dec
rcll
ret
fnsave
jns
shll
ds
xlat
fs
jg
jge
xchg
hlt
pop
cmp
cli
push
jb
sub
xcrypt-cbc
cmpsl
adc
fldl
fstps
inc
adc
je
incl
and
jbe
xor
shl
mov
or
mov
pushl
shrl
jecxz
push
jno
mov
sub
mov
adc
mov
jbe
sub
adc
ljmp
aad
fimull
lds
mov
ja
mov
std
lcall
pushl
dec
jge
cmp
pmaxub
add
mov
insl
lret
sub
test
mov
outsl
incb
pop
cli
inc
mov
dec
in
sub
or
push
inc
cmp
adc
jo
incl
icebp
or
pop
mov
in
adc
stos
fmul
xchg
xor
xor
in
pop
pop
push
call
dec
sahf
push
rorb
fisttpl
adc
aad
xorb
xchg
cmp
in
fidivl
mov
in
lcall
sbb
mov
jae
sub
data16
int
mov
inc
push
or
pop
addr16
leave
arpl
and
int
decb
into
lret
enter
xor
xchg
movsb
jo
mov
stc
sti
pop
cltd
pop
arpl
and
push
sbb
mov
aad
add
cmp
jg
outsb
dec
scas
push
outsl
cmp
popa
rcrb
aas
repnz
out
and
addr16
jnp
cmpsl
call
ret
push
mov
repnz
add
lods
inc
fistps
fistpll
xchg
js
insl
stc
loop
lahf
call
lods
test
lock
fsubrs
and
faddp
movsb
ljmp
pop
dec
adc
lea
out
mov
add
and
and
mov
movsb
lods
addr16
sbb
out
call
cs
dec
movsl
out
stos
push
pop
lahf
punpckhdq
add
or
shr
pop
xchg
cmp
xor
fldt
lods
mov
addr16
bound
sbb
lcall
push
dec
xchg
cmp
ja
mov
or
mov
in
inc
pop
sti
icebp
dec
jmp
fsubl
pop
mov
jl
sbb
xchg
insl
lcall
xchg
repz
mov
mov
dec
mov
jge
icebp
fldcw
arpl
push
xchg
sbb
dec
push
adc
loope
call
and
add
cmp
jmp
dec
out
movsb
pop
loop
pop
popa
nop
clc
iret
mov
test
jl
movsl
xchg
lret
jns
ljmp
push
lods
mov
mov
pop
out
fs
fadd
pushl
xchg
jnp
cmp
std
cmp
fwait
push
test
imul
cld
and
xchg
sub
loope
in
roll
arpl
out
add
inc
pop
or
ja
adc
xlat
xor
call
testb
xor
push
jmp
push
mov
push
push
mov
mov
js
xchg
inc
dec
sbb
xchg
adc
add
push
sbb
add
decl
cmp
iret
push
or
mov
lods
cld
cmpsl
je
push
pusha
pushl
loop
xchg
push
rolb
mov
outsb
dec
ljmp
pop
loopne
ljmp
fimull
je
rcll
dec
adc
or
mov
and
and
aaa
dec
cmpsb
into
xor
fdivrp
mov
xchg
pusha
dec
push
outsb
push
mov
jb
xor
in
outsl
int
inc
mov
mov
stc
mov
and
test
lcall
cwtl
scas
xchg
mov
push
sahf
cmp
adc
lds
sbb
call
mov
inc
sub
das
mov
negl
jne
testb
es
mov
mov
xor
clc
out
mov
or
jg
jg
cmp
call
add
enter
adc
test
lcall
or
mov
push
and
fs
push
lds
jge
xor
or
cli
lods
adc
sub
arpl
shll
jns
jmp
jg
pause
or
loopne
dec
mov
insb
xchg
push
int3
enter
fidivs
mov
aad
imul
jle
push
stos
inc
inc
in
fs
daa
stos
inc
lcall
push
push
jg
jle
pop
test
dec
jg
cmc
inc
mov
insb
dec
pop
jbe
sub
in
sbb
fidivrl
jae
test
icebp
mov
in
es
int
data16
pushl
xor
jp
or
jge
orl
repz
add
jecxz
and
jle
push
stc
jo
mov
xor
inc
jge
adc
mov
sub
addr16
mov
mov
add
lret
ds
leave
jp
cmp
ds
mov
add
mov
pushl
stos
shrb
sbb
inc
jp
sbb
cmpl
cltd
aaa
push
ret
jp
xchg
test
aaa
sti
mov
sub
loopne
or
sub
ja
inc
and
mov
mov
mov
mov
test
addb
lret
arpl
xor
incl
push
inc
or
push
push
pop
mov
jp
inc
iret
hlt
pop
in
mov
jle
xchg
es
lcall
cmp
icebp
pop
popa
dec
sahf
loopne
cmp
popf
push
inc
mov
cmp
ljmp
subb
or
mov
mov
cld
ljmp
and
loop
popa
stos
lahf
aam
int
mov
pop
push
fwait
xor
push
lea
xor
sti
pop
lcall
adc
push
xchg
add
push
insb
mov
daa
cmp
jae
jae
dec
lock
inc
out
dec
fs
xor
inc
add
cmp
and
push
sub
jg
inc
ja
decl
dec
xor
fs
out
and
xchg
inc
pusha
inc
test
dec
roll
fld
inc
and
lock
xor
mov
loope
scas
mov
ret
adc
arpl
jg
scas
xor
cwtl
rorl
loop
dec
daa
sarb
outsb
adc
call
jle
push
jbe
pusha
frstor
jb
mov
inc
sbb
addl
xor
decl
test
mov
sbb
and
mov
imul
xor
dec
test
dec
outsb
stos
mov
push
jnp
test
fcomps
add
cmc
mov
dec
sar
mov
enter
faddl
push
ljmp
or
push
out
jg
mov
faddl
add
push
loope
cmp
cs
iret
add
incl
add
xor
clc
shl
cltd
add
call
rclb
aaa
icebp
les
pop
xor
adc
shll
add
pop
loope
jmp
add
mov
dec
fsubl
int
js
xchg
movsb
test
cmp
cltd
sbb
fwait
shll
push
mov
and
adc
rolb
decl
pop
xor
js
sbb
loopne
mov
mov
fprem
jmp
adc
inc
jo
adc
fcoms
in
icebp
fwait
xor
repnz
cmp
pop
sbb
or
add
mov
cmp
push
or
arpl
sub
xor
int3
iret
lock
aam
aad
xchg
out
je
push
in
mov
repz
adc
incb
ljmp
imul
sti
or
cs
push
mov
bound
gs
fdivrs
fs
cmp
inc
mov
cwtl
xchg
lods
sbb
fucomp
iret
mov
push
cmp
jg
cmpsb
loop
in
push
out
shlb
inc
jbe
dec
adc
push
sbb
push
stc
xor
in
mov
sbb
xor
aad
js
adc
ja
lcall
dec
incl
fdivs
nop
sbb
xchg
ljmp
call
cld
lds
test
pop
shrb
xor
adcl
fwait
cmp
inc
mov
ljmp
mul
and
or
push
mov
sbb
ficoml
xchg
cmp
inc
push
mov
sbb
fnsave
daa
mov
incl
push
jo
cmp
push
repz
mov
and
test
dec
pop
lods
xor
call
fisttpl
add
iret
jecxz
xor
lock
cmp
das
insl
cld
mov
ljmp
in
decl
js
inc
flds
add
sahf
pop
lea
xor
mov
cmp
fdivrl
scas
xor
call
jmp
ljmp
bound
ret
adcl
xchg
decl
repz
movl
mov
add
popf
sbb
aas
inc
popf
and
loopne
subb
call
or
push
inc
pop
sbb
shrl
push
out
adcl
add
push
scas
jae
mov
jmp
cs
lock
sbb
push
addb
adcb
aaa
push
les
ljmp
aas
mov
cmp
pop
adc
and
cmc
mov
lahf
pop
imul
mov
cmp
cmpsb
jae
xchg
into
adcl
decl
mov
and
jo
mov
adc
in
aas
jl
aas
dec
shll
and
cmp
xchg
and
filds
mov
js
add
push
and
mov
loopne
sbb
pop
orb
push
dec
ljmp
flds
and
call
sbb
add
scas
inc
sub
jo
repnz
aam
lcall
cmp
insb
jno
out
leave
pusha
xchg
or
sbb
push
pop
pusha
arpl
andl
fiaddl
cmp
in
inc
mov
inc
shlb
imul
aam
sbb
gs
push
test
pop
cmp
lcall
sub
cmpsl
add
xor
incl
mov
push
aad
jb
cmp
stos
enter
insb
pop
push
lock
xchg
and
loopne
jmp
adc
pop
xor
dec
insl
or
stos
js
sub
or
jmp
jns
xchg
arpl
stos
jmp
add
rorb
mov
iret
add
mov
or
add
and
leave
xchg
jmp
gs
dec
dec
mov
pop
hlt
mov
mov
mov
ds
add
push
cmp
pop
lods
clc
jg
and
daa
pop
sbb
out
xor
clc
pushl
inc
jbe
fiaddl
jecxz
outsl
cltd
lea
add
push
xchg
scas
dec
inc
dec
sbb
aas
pop
rcr
hlt
ljmp
mulb
fsubrs
mov
mov
pop
iret
in
push
sub
jmp
add
mov
mov
lock
mov
sahf
or
add
inc
mov
cld
sub
enter
mov
jl
repnz
xor
mov
incl
bsf
rclb
cmp
js
pop
sysret
pop
add
loop
icebp
cli
rcrl
cmp
lcall
inc
nop
inc
adc
fimull
sub
cmc
or
lcall
adc
scas
jno
test
call
push
jg
pushf
es
xchg
mov
sub
sbb
in
dec
sbb
pushf
jecxz
ljmp
jb
sahf
jle
sbb
pop
xchg
add
call
cltd
jo
or
sbb
jbe
xor
jns
push
popa
adc
ljmp
pop
inc
adc
dec
mov
out
rorl
pop
add
scas
adc
pushf
out
xor
jg
or
adc
add
lods
or
sub
test
outsl
push
test
les
xchg
lret
test
adc
dec
popf
pop
pushl
mov
cs
and
xchg
test
and
js
push
and
xor
call
mull
in
test
add
test
fldt
fsubrl
mov
paddd
cli
inc
movsl
and
sbb
and
xlat
or
cmc
std
mov
add
fcomip
adc
inc
cmp
and
jl
jo
mov
loope
or
mov
sbbl
test
jmp
stos
leave
and
mov
mov
cwtl
mov
jmp
stos
or
pop
stos
mov
bound
pop
cmp
loopne
push
lea
or
jmp
ret
movsl
pop
jnp
sbb
dec
push
adc
addr16
push
xchg
fcomip
and
fs
cmp
xor
add
incb
and
clc
mov
dec
popf
aas
pop
repnz
sub
pop
stos
pusha
inc
rorb
incl
movsb
inc
jl
adc
ret
stc
adc
cmc
adc
frstor
lock
cmp
pop
sub
push
out
dec
and
incl
jno
popa
clc
or
cli
int3
add
xchg
or
inc
ja
loop
scas
add
lcall
outsl
popa
sub
sub
or
jae
sbbl
sbb
add
addl
add
xchg
or
das
jle
mov
cmp
lds
push
aam
push
scas
push
jmp
std
in
and
das
dec
pop
inc
dec
and
add
je
shlb
add
aad
call
ds
sbb
pop
mov
fld
pop
adc
mov
mov
or
dec
sub
decl
push
mov
xchg
add
stos
or
scas
mov
test
scas
pushl
add
dec
addl
out
adc
xchg
xchg
inc
lea
decl
gs
xchg
movsb
test
push
inc
inc
sub
pop
ds
cmpsb
mov
or
loop
pop
call
cld
out
fs
pop
add
in
and
andb
mov
or
push
mov
pushf
jmp
les
imul
xchg
xchg
add
js
adc
lahf
xor
xchg
ljmp
push
and
cld
xchg
repz
adc
call
inc
add
call
jge
pop
mov
xorb
les
dec
test
bound
call
cmp
xor
das
push
stc
jno
adc
and
cmp
insl
cmp
jmp
mov
test
mov
loope
sub
mov
addr16
mov
lcall
add
mov
aam
es
add
int
mov
cmp
call
loopne
dec
push
movsb
inc
or
adc
stos
cmp
and
test
jb
and
adc
or
decl
xchg
inc
pusha
mov
sbb
add
stos
add
test
add
add
and
mov
call
mov
pop
lret
adc
fwait
add
adc
daa
push
inc
jmp
mov
jnp
jbe
inc
je
mov
cmp
jns
push
xchg
unpcklps
into
jb
pop
repnz
out
mov
test
call
mov
and
xchg
jb
in
lcall
add
incl
ret
iret
add
movsl
cli
xor
lret
fadds
std
push
lret
test
xchg
jecxz
xchg
dec
call
pop
xchg
je
jno
pop
sub
add
popa
leave
mov
rcrl
incl
enter
inc
ret
stos
mov
repnz
popa
or
adc
mov
cmp
push
lcall
jnp
push
dec
mov
push
lods
lcall
call
push
lods
and
mov
pop
mov
jae
or
xor
test
push
pop
rorl
mov
incl
sub
mov
inc
jecxz
scas
jmp
push
mov
mov
incl
or
clc
add
lahf
cmp
and
enter
scas
arpl
mov
out
cmp
push
nop
and
and
subb
ret
jmp
fcompl
add
cmp
aad
cmp
scas
xor
shr
cli
and
adc
in
mov
add
xor
jg
jmp
dec
xor
add
xchg
xchg
ds
dec
aas
xor
add
inc
das
lret
pushl
sub
add
dec
sub
inc
rorb
fs
aas
sub
mov
sbb
cmc
mov
jl
jg
decl
mov
inc
sti
outsb
movsb
fcomi
sub
cmp
mov
pop
mov
jmp
and
xchg
mov
and
gs
test
js
xor
dec
icebp
subb
lcall
movsb
fs
and
jmp
or
xchg
or
addr16
pop
sbb
pop
dec
xchg
or
sbb
push
add
insb
mov
pop
fdivrl
mov
and
jmp
aad
pushl
cmpsl
out
popa
int3
out
dec
mov
jbe
jg
push
out
aam
sbb
mov
call
ss
enter
lea
js
jle
add
pushl
sub
jle
jo
rol
jo
xor
dec
dec
fsubrl
jmp
lea
icebp
lods
std
out
cli
jmp
jl
call
push
and
xchg
mov
call
in
adc
sbb
jb
xlat
data16
fmuls
and
sahf
pop
lahf
in
push
aam
mov
add
sbb
fistps
cmp
sub
ja
sub
push
inc
xor
mov
loopne
aad
cli
mov
mov
lock
cwtl
xchg
sub
xor
mov
and
or
orb
cmpsl
rorb
sub
xchg
setp
call
or
shrl
enter
pop
cmp
fildll
ffreep
dec
inc
mov
in
arpl
fs
push
dec
xor
inc
dec
add
cmp
sub
sbb
cld
add
fldl2t
sub
in
jecxz
adc
pushl
fnstenv
fs
xor
out
mov
pop
xchg
incl
in
push
xchg
mov
xor
xchg
ret
pop
mov
into
test
xchg
insl
pop
mov
sbb
or
or
pop
adc
rcrb
inc
shl
arpl
or
inc
je
push
ror
add
aas
xchg
sub
fwait
mov
mov
ror
adc
or
push
sti
push
aam
enter
sub
lods
mov
pushl
jae
rorl
rol
fildll
in
and
and
filds
sbb
dec
lcall
add
mov
cmp
dec
movsb
cmc
rclb
pushl
pop
ljmp
fbld
insb
leave
jbe
cwtl
fiadds
pop
mov
inc
pop
cltd
dec
ficompl
sub
inc
or
xor
decl
lret
xor
mov
imul
sbb
xchg
adc
test
test
pushl
sub
add
std
adc
addl
mov
movsb
test
xchg
cmp
addb
mov
and
cld
jmp
adc
adc
or
orps
xchg
ljmp
and
and
cltd
xor
pusha
xchg
adc
test
pushl
jle
jg
add
fdivs
sub
rcll
pushf
stos
fsubl
ljmp
mov
dec
lret
inc
mov
cmpsl
dec
adc
jg
adc
xchg
cmp
loop
cmp
test
pop
insb
jg
shll
sahf
mov
rcrb
add
jmp
or
fldl
sbb
pusha
popa
xchg
pusha
xor
or
scas
add
decl
lret
in
aad
lahf
adc
mov
jb
fsubl
imul
pop
sbb
out
clc
loop
xchg
mov
movsb
xchg
scas
jl
imul
fistl
in
jecxz
incl
inc
xor
xor
xchg
inc
mov
adc
rcll
push
sbb
popa
jle
clc
ljmp
push
or
rclb
mov
pop
or
dec
pop
jb
pop
popa
frndint
lcall
in
aas
movsb
out
popf
fwait
in
mov
decl
lock
movsb
nop
lods
js
sbb
xor
sub
call
bound
cmp
in
add
loop
sub
sbb
ljmp
into
dec
add
jl
fldcw
mov
add
ficompl
mov
add
sbb
mov
rorb
ret
mov
xadd
jmp
sub
add
icebp
loop
mov
jmp
fcmovbe
cwtl
mov
jl
je
mov
scas
jge
rolb
ss
mov
adc
out
jle
mov
decl
and
jmp
add
push
into
push
push
dec
mov
or
add
sahf
push
mov
xlat
outsb
ret
xor
jg
repnz
out
push
pop
imul
add
xor
icebp
sti
je
popl
pop
jmp
xor
cli
push
xor
cmp
pop
std
pop
icebp
out
cli
add
sub
sub
and
adc
push
sub
and
mov
sbb
addr16
cmovo
add
dec
mov
pushl
in
int3
mov
js
and
or
lods
cmc
and
aad
jmp
mov
test
addb
push
daa
adc
or
inc
pop
dec
jge
cltd
add
inc
mov
inc
jl
cmpsb
xchg
adc
inc
popf
add
aaa
je
loopne
and
xchg
push
ss
push
inc
jecxz
jmp
out
xlat
push
ljmp
sbb
mov
int
in
cmp
call
pop
lea
and
mov
aam
push
mov
fadd
xor
mov
scas
push
stos
out
loopne
add
mov
adc
lret
call
cmpsb
mov
decl
cmpsl
sbb
pop
push
pop
shrl
arpl
jg
call
pop
add
call
jmp
inc
and
mov
lds
push
mov
jmp
push
jecxz,pn
lret
insl
sub
mov
popf
popa
rcrl
xor
mov
jg
decl
lods
jg
ljmp
mov
aas
sbbl
xchg
and
call
jle
or
mov
je
add
outsb
add
fisubs
or
pushl
pop
cld
mov
pop
adc
shll
fnstenv
cmpsb
divps
call
mov
pop
insl
rolb
icebp
bsf
ret
dec
inc
or
jg
mov
xchg
insl
popa
add
or
push
cli
icebp
shll
pushl
aam
cmpsl
add
cmp
push
xor
hlt
xchg
je
push
pop
mov
call
dec
ja
lock
jne
and
stos
daa
cmp
mov
xor
add
subb
popa
sub
mov
cmc
arpl
roll
adc
push
jge
add
jns
pushl
ror
test
lahf
sbb
inc
dec
ja
or
aad
sub
loopne
xchg
sbb
decl
inc
sbb
push
out
ss
pushl
sahf
sahf
lods
clc
push
xchg
cmp
add
add
js
mov
mov
mov
xchg
ljmp
add
xchg
dec
adc
adc
cs
das
dec
xor
sbb
mov
lock
and
or
jbe
push
push
fcmovnu
sub
jg
lods
mov
push
ljmp
and
ljmp
nop
sti
and
jnp
inc
inc
xchg
scas
std
mov
mov
cmp
lahf
movsl
cmp
mov
or
js
test
call
mov
fimull
cmpsl
jecxz
and
sub
mov
clc
dec
fimull
xchg
ss
xlat
push
pushf
jle
les
mov
fsubl
mov
inc
scas
mov
call
inc
leave
xchg
lcall
mov
dec
test
mov
shr
pop
lret
cmp
pop
add
mov
mov
test
std
int
ljmp
out
and
mov
mov
jno
andb
jbe
inc
pushf
cmp
jg
jmp
xor
mov
testb
xor
mov
adc
cld
out
fbld
jecxz
jl
sbb
iret
xor
ja
mov
mov
xchg
cld
fistpl
out
xlat
add
roll
in
sub
cmp
sbb
cs
les
xchg
fistl
in
je
clc
pop
cld
pop
xor
bound
mov
stos
pop
popa
cs
incl
mov
add
sahf
enter
mov
xlat
leave
sbb
jo
mov
call
dec
push
jecxz
inc
pop
add
decl
in
and
add
inc
nop
insb
roll
int
ljmp
arpl
xchg
dec
into
mov
lock
ficomps
mov
aad
outsl
sbb
sub
shl
data16
test
ret
and
push
pusha
push
pop
es
scas
jge
inc
dec
jmp
or
clc
pop
or
rcr
sbb
aam
mov
mov
sahf
jge
jge
cmc
daa
mov
push
or
pop
sbb
jmp
rolb
pusha
or
push
and
add
jne
fwait
mov
xor
sbb
cmpsl
add
mov
push
call
adc
aas
lret
lcall
mov
popf
jl
add
outsl
iret
dec
outsl
insl
xor
add
loop
xchg
loop
js
mov
cmp
cmp
ljmp
add
popa
clc
addl
insl
push
insb
cwtl
aaa
push
enter
loope
pop
sub
out
clc
inc
lahf
rcll
clc
nop
adc
jge
cmp
cmp
faddl
incl
cmpsl
adc
push
rorl
rcll
in
mov
test
rol
imul
ljmp
std
nop
sub
xchg
out
ss
or
inc
dec
mov
sbbl
pop
push
mov
lcall
and
push
in
push
add
mov
sbb
mov
jp
stos
aaa
std
pushl
js
jp
add
rsqrtss
or
xor
push
adc
test
decl
push
inc
xchg
xchg
jo
xchg
push
sahf
ret
inc
mov
leave
sarb
repz
lds
call
adc
jmp
and
inc
addb
ret
in
popl
jmp
daa
jne
loope
and
mov
push
push
mov
cmp
fdivrl
arpl
incl
add
inc
mov
add
push
lods
arpl
sub
and
mov
test
mov
ljmp
outsl
popf
aam
pop
pop
sbb
xchg
mov
adc
hlt
add
notb
cmc
or
cld
icebp
cmp
stc
cmp
lahf
pop
or
add
mov
call
lods
ffreep
in
frstor
xorb
xchg
bound
fwait
sub
mov
int
and
cld
sbb
movsb
fs
xchg
adc
imul
add
ds
mov
push
leave
adc
xchg
push
jmp
mov
xchg
adc
mov
shrb
jae
push
shrb
push
sbb
add
xor
decl
jecxz
fnstsw
sub
data16
mov
cmc
subl
mov
fs
inc
clc
jnp
pop
add
sbb
fisubrl
push
pop
pop
dec
inc
add
and
inc
jmp
add
xor
cwtl
add
mov
push
hlt
inc
inc
test
icebp
push
mov
ror
pop
inc
dec
mov
inc
jb
xchg
pushf
imul
negb
lods
sbb
inc
ljmp
sbb
adc
aad
dec
pop
rcll
mov
ja
lods
fnstsw
ret
mov
aas
cltd
sub
sbb
decl
shll
adc
inc
pop
je
jge
dec
cmc
mov
jl
mov
jmp
jo
and
outsl
dec
add
movsl
mov
ljmp
pop
mov
mov
test
dec
mov
enter
and
mov
nop
test
ret
sbb
dec
adc
dec
mov
pushw
fistps
push
adc
pop
clc
test
inc
ja
add
inc
adc
cwtl
xlat
pushl
jbe
popa
dec
jne
and
roll
mov
fldt
xor
loope
sti
mov
ljmp
js
jns
or
inc
pop
pop
dec
push
lcall
xor
inc
int
insl
jg
test
mov
fldl
pop
pop
inc
das
test
les
adcb
int
sbb
pop
call
sahf
test
leave
repz
sub
insl
daa
shlb
jnp
incl
cwtl
push
clc
inc
movups
dec
push
push
leave
popa
sub
push
mov
dec
mov
or
decl
fs
xor
mov
outsb
mov
cmpsb
shlb
icebp
and
xchg
add
push
mov
sub
icebp
les
adc
push
flds
add
ljmp
dec
leave
stos
iret
pushf
loope
pop
push
into
mov
inc
nop
rolb
push
aam
and
mov
and
rolb
mov
adc
es
lea
xor
ljmp
push
xlat
jl
sub
add
add
mov
cli
add
jle
adc
stc
push
mov
xchg
mov
dec
loope
lea
test
inc
push
and
ljmp
sti
mov
ret
cs
and
incl
jmp
pushf
fs
or
and
sti
rclb
cs
shr
mov
je
lods
dec
jg
add
xlat
fwait
fwait
out
call
mov
push
fs
fwait
in
xchg
push
orb
sbb
jmp
mov
pushl
call
or
dec
cmpsl
push
in
into
adc
add
mov
dec
fcomps
ljmp
and
push
inc
js
jecxz
adc
push
dec
outsb
scas
pop
push
testl
push
mov
mov
ljmp
and
loop
sbb
dec
and
sbb
sbb
sub
xchg
arpl
dec
rcl
dec
add
pushl
loopne
cmpsb
xchg
call
mov
cmc
lcall
sbb
jle
sbb
push
sbb
outsb
leave
cmp
jle
icebp
sbb
inc
or
cld
inc
ror
or
cli
push
inc
mov
and
push
mov
mov
movsl
das
daa
dec
ret
popf
loopne
lcall
aaa
fstpt
jp
and
shrl
pushf
or
adc
rol
pushf
mov
ljmp
lods
jns
int3
inc
mov
cmp
insb
sti
xchg
mov
enter
adc
incl
div
ja
je
jp
fwait
sub
cmpsl
pop
push
pop
inc
adc
mov
sbb
inc
in
mov
and
ljmp
cmp
pop
pusha
or
adc
das
and
pop
rcl
test
je
loope
push
mov
mov
decl
mov
dec
int3
push
loopne
jns
fcompl
cmp
enter
test
in
cmp
hlt
lcall
ljmp
pop
stc
ret
imul
and
xchg
add
jmp
scas
jmp
cli
xchg
prefetch
jmp
xchg
mov
inc
cli
push
push
mov
push
insb
enter
pushl
dec
add
mov
jmp
fdivr
fwait
xchg
or
jmp
pop
push
sbb
inc
jo
pop
jb
out
mov
je
sbbl
xor
or
incl
dec
repz
inc
xor
pop
mov
popf
ret
push
add
enter
jg
push
and
push
inc
pushf
daa
cs
gs
xor
jg
adc
jb
out
fadd
add
aas
mov
inc
cmc
adcb
mov
enter
jge
daa
jl
ficoms
add
call
testl
pop
loop
aaa
pop
push
rclb
inc
les
jo
inc
mov
mov
add
xchg
add
iret
sbb
sbb
enter
dec
pop
out
std
inc
scas
orl
add
xlat
fs
cmc
pop
inc
mov
mov
call
add
xchg
in
sbb
sbb
lds
nop
out
sbb
cmpsl
xor
popf
jnp
cmp
incl
jb
add
dec
shrl
push
jle
jg
mov
xchg
jb
lds
jno
aaa
sub
or
lcall
add
aas
inc
sub
aad
jbe
ja
cmp
pop
lcall
imul
push
jo
popf
mov
pushf
sub
fisttps
add
jecxz
pop
pop
adc
mov
cmp
jl
xchg
xor
add
sub
dec
in
int3
or
test
inc
orb
adc
mov
es
repnz
outsl
cli
cli
test
enter
push
xor
int
pushf
adc
out
or
pop
adc
xchg
add
add
add
movsb
lds
das
pop
loop
testb
dec
adc
sbb
mov
jae
popa
sbb
and
decl
fcmove
push
or
mov
or
stos
xor
inc
inc
add
lock
std
sub
add
sbb
jnp
incl
jno
and
dec
add
jns
mov
andl
lock
out
add
call
mov
mov
nop
dec
ficompl
iret
dec
jmp
inc
hlt
pushf
mov
test
mov
and
and
adc
adc
sahf
xor
ret
orl
sbb
ja
jg
and
shl
jg
push
dec
sub
bound
clc
aas
ljmp
decl
das
or
imul
xor
or
xorb
aaa
or
std
sub
adc
pop
cmpb
fwait
ljmp
outsl
filds
and
push
aam
movsb
loop
push
mov
lret
add
ret
dec
cmc
out
int3
push
sbb
pop
xchg
adcl
popa
sahf
scas
aaa
arpl
insb
xor
jg
bnd
inc
jns
jl
jle
mov
cmp
inc
dec
mov
push
loopne
adc
push
mov
ret
mov
inc
mov
test
outsl
nop
push
add
jg
test
jmp
push
push
std
mov
insl
fs
clc
mov
dec
arpl
fcoms
imul
repz
push
add
mov
mov
add
jo
loopne
cld
jo
xchg
mov
imul
js
or
fwait
hlt
jl
mov
cli
xor
in
test
or
inc
cs
popa
test
test
in
or
cmpsl
xorl
movsl
jecxz
stc
mov
xor
test
mov
push
cwtl
add
push
cmp
cli
pop
ja
push
sub
mov
loope
add
push
in
stc
dec
add
das
jno
add
sub
les
daa
pop
loop
jp
call
jno
sub
or
mov
int3
inc
ljmp
roll
popl
push
js
divb
test
pop
ret
outsl
addl
lcall
add
repnz
lds
mov
nop
mull
mov
xor
and
cmpsb
push
mov
push
test
xchg
in
decl
and
fistl
and
mov
out
leave
add
cmp
and
push
push
xor
outsl
repnz
ljmp
cli
inc
das
sbb
or
xor
pop
scas
push
jmp
dec
call
fcoml
cmp
sbb
or
sub
xor
je
incl
test
sbb
xlat
mov
mov
sti
xor
mov
push
mov
jg
sub
add
in
push
loop
jp
mov
mov
push
xchg
fldenv
loopne
inc
hlt
or
sub
jb
jo
dec
and
mov
in
adc
xor
or
or
and
jmp
ret
rcl
sarl
sub
in
xor
gs
mov
inc
sub
push
or
or
dec
int
dec
in
xchg
push
cmp
adc
push
push
loope
xor
pop
sub
in
shll
in
imul
loope
jmp
cwtl
adc
lret
movsb
cmp
pop
or
sub
push
and
add
outsl
or
incl
movsl
ja
jecxz
fcomps
pop
lcall
rcll
loopne
pusha
iret
cmp
jg
loop
jp
pop
pop
out
push
adc
cmc
movsb
push
pusha
xor
adc
and
jmp
lock
mov
lret
imul
or
mov
sbb
and
call
adc
imul
out
add
pop
dec
mov
pop
loop
xor
outsl
mov
pusha
or
into
xchg
jp
or
sbb
into
sub
ljmp
incl
addr16
rcll
mov
fstl
aad
xor
xchg
adc
sar
push
ljmp
addb
popa
xchg
rclb
cmp
pushl
data16
cmp
loopne
jl
push
into
jg
insb
add
cmpb
lea
call
sub
mov
adcl
push
jmp
lods
mov
mov
pop
and
cmp
adc
adc
aad
xor
popf
and
mov
fstps
nop
adc
pushf
add
leave
mov
addb
mov
push
stos
ja
ret
call
stos
mov
cmpsb
sarb
add
cmpsb
in
loopne
inc
cmp
cmp
subl
aaa
jae
in
sbb
int
and
mov
test
ljmp
pop
repnz
out
mov
stos
push
or
xor
jns
pop
insl
mov
and
pushl
and
mov
adc
enter
mov
mov
jne
push
inc
jmp
cmp
mov
popf
lret
shlb
mov
imul
pop
add
mov
ljmp
lret
out
notl
imul
call
pop
or
xchg
sbb
aaa
mov
je
sarl
inc
mov
loope
mov
fs
jmp
out
enter
add
in
sbb
call
sahf
leave
inc
lahf
jbe
adc
ret
lret
lock
lods
mov
movsb
aad
cmp
dec
mov
cli
out
dec
jmp
sbb
mov
iret
push
outsb
dec
es
fbstp
inc
cmp
out
add
daa
push
dec
cmp
aas
jne
push
test
push
outsl
incl
nop
fs
mov
xor
ret
mov
idiv
popa
icebp
xchg
cmp
jmp
mov
mov
enter
pop
and
xlat
cmp
pushf
pushf
lret
cmp
cld
mov
pushl
lcall
psrad
inc
add
cmpl
popa
mov
pop
push
push
sub
shlb
cmp
dec
lahf
orl
mov
mov
aas
mov
lcall
out
jmp
fiadds
call
test
arpl
mov
mov
jae
adc
inc
mov
popl
mov
hlt
jmp
pusha
call
clc
cmp
cmp
loop
ja
pop
inc
or
decb
mov
cmp
mov
repz
push
sub
das
ret
dec
adc
lcall
shl
and
call
aam
mov
inc
cltd
and
scas
clc
addr16
incl
sbb
mov
pop
push
jmp
clc
sbb
decl
or
fbstp
das
data16
jno
add
mov
mov
lea
cli
lcall
pushl
icebp
inc
xor
add
add
mov
lcall
call
lods
hlt
in
inc
push
xor
xor
outsb
mov
adc
movsb
lock
jae
mov
add
jg
and
ja
pusha
and
adc
add
inc
sub
in
sbb
lret
mov
ljmp
and
push
xorl
and
pop
ficomps
sar
fs
jmp
fistl
insb
add
push
clc
mov
jg
ljmp
push
add
adc
sti
xor
clc
arpl
dec
lock
jb
jbe
loop
lods
sub
jle
jg
ljmp
pop
je,pt
xchg
sahf
iret
xchg
xchg
lock
xchg
push
je
pop
incl
orb
ret
pushf
and
pop
movsb
xor
fisubrl
rolb
std
or
add
dec
int3
or
push
in
aaa
mov
pusha
mov
loopne
jo
mov
nop
inc
fwait
add
sub
in
or
cmc
add
out
push
lods
cmpsb
jge
popf
imul
mov
clc
or
pop
adc
ret
in
and
jg
jo
mov
inc
imul
or
or
insl
leave
insb
lcall
mov
incl
sub
add
std
daa
cld
xchg
inc
pop
add
mov
add
mov
jg
sarl
adc
iret
sbb
arpl
mov
adc
push
outsl
xchg
xchg
sub
repz
loopne
shr
daa
outsb
add
fistpl
cmp
jo
daa
test
cmp
mov
jg
xchg
jno
mov
jno
mov
cmp
test
pop
loope
jmp
jne
push
push
inc
add
cmp
mov
fdivl
push
xchg
stos
or
lcall
fisubl
or
mov
lret
add
test
in
xchg
cs
mov
pop
test
adcb
inc
xchg
or
in
jp
pop
and
rcll
lea
and
loop
sub
lcall
lds
pop
loopne
pop
insb
hlt
sbb
xchg
cwtl
adc
cwtl
es
and
stos
call
cld
lcall
push
pop
orb
push
sub
and
mov
inc
adc
loop
decl
popa
inc
xchg
test
cmp
sub
out
xor
loop
add
incl
and
ret
lock
gs
fnstcw
aas
inc
mov
cs
push
pop
and
push
jecxz
mov
icebp
pushf
or
adc
sub
push
test
adc
call
loope
loopne
lea
flds
inc
pop
out
xor
push
ret
sbb
jmp
add
adc
test
mov
sbb
ret
push
lock
mov
and
call
xchg
and
rcrb
mov
fadds
adc
xor
jl
sub
dec
imul
inc
dec
iret
shll
in
stos
lock
jmp
pop
dec
mov
enter
pop
add
mov
xor
lcall
add
out
mov
movsb
cmc
inc
pop
movsb
bound
ss
mov
push
call
jmp
outsb
dec
add
or
adc
cmp
inc
push
sbb
or
loope
setg
pop
xor
lcall
cmp
dec
lcall
fisttpl
or
sbb
lahf
mov
xor
vphadduwq
or
push
push
push
fwait
movsl
imul
sar
ljmp
mov
outsl
aaa
cltd
int
in
or
stos
xchg
or
es
sbb
or
into
cld
call
aad
lock
jo
xchg
sub
adc
int
mov
push
jg
add
test
scas
and
addb
jle
call
in
dec
rcll
in
mov
out
pop
incl
lcall
sbb
mov
add
and
cli
stos
fdivrl
daa
cmpb
bound
sub
lahf
dec
push
imul
clc
mov
sub
xor
inc
cmpsb
out
incl
mov
cmp
inc
fbld
mov
lahf
ret
mov
clc
mov
int3
movl
xor
push
adc
mov
orb
push
or
adc
push
rclb
add
nop
loope
dec
jno
pop
cltd
leave
and
imul
incl
outsb
movsl
scas
icebp
push
xchg
subl
jmp
or
movsb
movsb
mov
arpl
jns
orb
jecxz
ficompl
mov
push
lcall
ret
mov
sbb
inc
test
inc
pop
lock
fstps
xor
or
shld
lds
push
adc
out
adc
les
add
mov
pop
pushl
or
cmpsl
sub
mov
pop
or
movsl
and
bound
jmp
push
xor
mov
pop
jle
out
inc
adc
les
sbb
loopne
jge
push
mov
or
mov
popf
jmp
add
push
or
dec
addr16
or
pop
pop
or
mov
or
mov
sbb
loopne
add
mov
jo
cmp
mov
add
sbb
cmpsb
pop
popa
iret
mov
bound
xlat
or
mov
dec
cld
roll
outsb
test
xor
inc
mov
xchg
stos
ud0
std
jmp
in
mov
pop
test
and
rolb
call
in
out
loopne
dec
mov
mov
add
pop
push
lret
sub
and
out
xlat
sbbb
lahf
mov
mov
mov
cmp
ss
cmp
pop
cmp
adc
decl
xor
dec
adc
and
and
mov
jmp
call
mov
mov
test
cld
jle
mov
insb
inc
mov
scas
incl
into
imul
and
pop
add
in
cmp
mov
cmp
sbb
popa
lret
jbe
sbb
cmp
mov
xor
lock
pop
popa
cmpsl
dec
nop
aaa
cmp
or
rcr
decl
in
imul
jno
and
rcrl
sub
xor
mov
push
dec
loopne
pusha
sbb
cmp
sbb
jg
push
dec
sbb
pusha
or
test
add
cwtl
insb
dec
sahf
add
xor
std
mov
add
mov
lcall
and
or
popa
jge
movsb
mov
xchg
jg
add
push
enter
xchg
pop
dec
xchg
pushl
std
rcrb
in
push
sub
cld
movsl
add
mov
adc
jg
call
add
xor
mov
loop
out
out
cmpb
fisttpl
mov
in
jnp
push
sub
pushl
pop
arpl
faddl
dec
push
fisubrs
fs
popa
dec
loopne
dec
push
pop
test
imul
or
sub
test
pop
in
pusha
test
add
mull
adc
or
sub
jmp
cmovae
push
sbbl
xchg
cmp
adc
mov
mov
or
xchg
dec
add
nop
rorl
push
fucomip
or
je
xor
adc
std
and
cmp
mov
or
mov
xchg
rcll
pop
adc
mov
cwtl
clc
pop
decl
pop
cmp
inc
in
jns
jmp
roll
pop
mov
ficompl
jo
movsl
or
mov
nop
ret
jmp
push
mov
mov
dec
movsl
mov
inc
xorl
and
add
mov
sub
sti
cmpsb
pushf
pop
cmp
xchg
or
or
xor
ljmp
hlt
mov
pop
daa
mov
and
mov
sbb
lock
repnz
pushl
jno
xchg
push
dec
cmc
adc
call
dec
js
add
adc
outsl
lds
pop
cmc
pushl
popa
xor
loopne
or
or
ljmp
ljmp
subb
push
push
lea
sub
xchg
mov
push
jo
std
fcoml
or
fisubl
decl
sub
cmp
inc
aas
push
roll
lahf
push
sbb
or
xchg
push
and
out
clc
mov
icebp
aas
fidivl
into
cld
in
and
add
sarl
sub
cmp
and
sbb
and
jmp
aam
add
add
cmpsb
stos
xor
dec
or
push
sbb
mov
mov
mov
pop
outsb
orl
mov
decl
jmp
mov
mov
add
fsubrl
adc
or
test
jmp
dec
sbb
sub
aas
mov
xor
and
jno
in
mov
jg
cwtl
jnp
add
push
sbb
push
adc
movsl
cmp
test
inc
pop
lock
icebp
adc
xchg
popf
das
add
daa
dec
jecxz
jecxz
ljmp
shrb
cmpsl
sub
clc
mov
or
xor
lods
sub
or
jmp
adc
jl
xor
jns
ljmp
pop
outsl
mov
jg
outsl
lcall
mov
sbb
das
pop
fisttps
mov
mov
outsl
das
push
push
push
shrb
or
es
sub
repz
call
fcmovb
ret
ret
add
adc
sbb
pop
mov
cmp
cmp
out
aad
push
jmp
xor
sar
decl
dec
int
or
push
add
out
xor
scas
xor
add
sbb
cli
es
dec
outsb
mov
call
xor
cld
inc
leave
lods
jo
jp
jmp
mov
mov
dec
shll
add
pop
loopne
lahf
enter
in
or
loopne
test
pop
sbb
addr16
fbstp
pushf
pop
js
cmpsb
enter
cmp
scas
clc
lcall
jp
lock
inc
stc
add
inc
pop
mov
hlt
inc
sbb
sbb
inc
mov
insb
js
inc
or
jl
and
dec
or
push
add
sarb
call
loop
ret
call
popf
push
incl
imul
fadd
imul
cmp
push
add
jecxz
xchg
inc
pop
inc
jmp
cltd
sbb
push
aad
sub
insl
stc
lret
dec
int
ljmp
adc
lahf
stos
int
ss
outsl
add
mov
mov
call
and
adc
out
out
and
psubusw
aaa
mov
add
dec
sbb
ljmp
sahf
mov
lea
hlt
xchg
scas
out
mov
dec
in
cld
mov
cmpsb
mov
and
rorl
out
or
scas
cmp
aas
movsl
sbb
push
sub
push
and
decl
sbb
dec
push
push
sub
rcrl
pop
dec
mov
insl
stos
push
ret
fimull
mov
xor
aas
inc
icebp
cwtl
lea
add
stos
sbb
cmp
incl
repnz
lock
cmp
push
shll
sub
xchg
pusha
or
or
ds
sbb
cld
fiaddl
test
cmpsb
in
pop
inc
popf
xor
cmpsb
enter
mov
push
es
std
cmc
lods
out
mov
cmp
mov
lea
cwtl
add
jmp
add
xor
add
add
xchg
ret
enter
iret
adc
push
addr16
inc
jo
fisubl
pop
int3
add
mov
cwtl
gs
mov
xor
and
test
pop
xchg
sbb
incl
mov
pop
mov
push
mov
inc
loope
pop
adcb
call
dec
xor
inc
inc
sbb
sbb
ss
testl
push
mov
sbb
add
gs
decl
pop
and
pop
dec
dec
sub
mov
push
jae
mov
dec
data16
push
mov
lock
add
into
or
mov
push
dec
pushf
mov
decl
mov
cmp
lahf
add
stos
js
add
mov
sbb
movsb
sub
xor
lcall
jmp
pop
ret
leave
and
int3
clc
incl
and
es
lret
sahf
sub
shrb
cmpb
xor
add
push
enter
stos
out
pushf
xor
lcall
add
pop
cmc
pusha
inc
cltd
adc
orl
insl
in
jb
jg
xlat
mov
adc
out
sbb
pop
pop
and
jge
jg
mov
dec
lods
xchg
push
inc
das
sub
xchg
mov
adc
sar
cmp
jns
mov
xchg
orl
xorb
rorl
sub
call
std
cmp
fdivp
mov
adc
inc
sahf
call
inc
xchg
insl
adc
adc
lcall
loop
cmp
or
movsl
jecxz
sahf
incl
sub
popl
adc
mov
lret
add
sbb
pop
pcmpgtb
pushl
notl
inc
mov
into
lds
cmc
inc
enter
jmp
call
fwait
inc
cmp
and
dec
and
lock
dec
pop
and
add
jb
aaa
std
fbstp
lcall
lock
mov
pop
jo
test
lcall
inc
jne
nop
fsubs
mov
sbb
pop
sbb
movsb
test
and
cmp
test
fsubr
mov
jle
push
add
pushl
aas
and
adc
push
call
loopne
xchg
arpl
bswap
mov
push
pop
mov
mov
mov
or
test
arpl
out
adc
xor
adc
enter
push
sbb
push
loope
outsb
popf
xor
aaa
js
add
js
or
xchg
jg
decl
jns
xor
pop
pop
aam
dec
mov
hlt
std
test
mov
enter
inc
add
pop
loop
or
jg
outsl
ds
std
push
into
add
sbb
cwtl
jnp
sbb
xor
cmp
pusha
out
add
xorb
lock
and
call
es
add
imul
ljmp
movl
shlb
jmp
fisubrl
fldcw
pushl
add
mov
fs
dec
subb
outsl
scas
add
push
and
cmp
inc
mov
stos
call
cmc
cmp
movb
int3
xor
xchg
mov
repnz
ss
lock
incl
movsl
mov
out
push
mov
cmp
jnp
dec
cltd
adcl
mov
mov
rorb
mov
fistl
jne
ljmp
test
cmp
dec
leave
stos
inc
stos
lock
fisttpll
xchg
jmp
sbb
out
fsubrp
mov
cmpsl
dec
xchg
loope
xor
mov
in
or
or
add
xchg
jle
add
sbbb
push
and
xchg
rorl
pop
mov
dec
dec
nop
sarl
fnstcw
mov
pop
mov
xchg
nop
jmp
mov
imull
lret
std
sbb
sbb
lcall
sbb
decb
inc
xor
xor
pop
sub
pop
add
push
add
dec
mov
repnz
mov
in
sub
and
call
std
jmp
ror
and
jae,pt
fmulp
pusha
pop
xor
mov
push
add
inc
cmpsb
jge
and
aam
adc
mov
stc
mov
movsb
test
add
jmp
cmp
decl
xor
decl
dec
add
pushl
cmp
adc
int
add
push
test
xchg
and
or
incl
test
lock
mov
mov
cmc
and
loopne
es
addr16
xchg
sub
lcall
sbb
add
ret
sub
and
movsb
aaa
add
mov
outsb
add
lcall
ret
or
sub
or
xor
jg
lds
js
push
cmc
jo
xchg
dec
xchg
pop
xchg
ret
xchg
push
icebp
jmp
mov
fwait
ljmp
mov
mov
push
ret
loop
inc
subl
add
push
std
je
jae
xor
push
jp
push
loop
jb
push
inc
xor
push
mov
inc
test
fs
sbb
icebp
adc
sbb
or
push
sahf
mov
add
decl
adc
xchg
jno
js
xchg
lahf
or
sub
test
mov
fwait
xor
add
in
pop
jl
scas
ss
cmp
data16
push
ja
pushl
ret
test
ljmp
and
cmpsl
or
pusha
lods
dec
jg
cmp
cmp
mov
pshufw
or
push
cwtl
sbb
inc
mov
ror
aam
or
jo
lods
dec
out
jecxz
fwait
pop
enter
cwtl
cmpsl
aad
clc
fcomip
fwait
mov
fsubrl
mov
sbb
dec
add
test
insb
decl
negb
imul
adc
cmp
std
push
jmp
jge
dec
aaa
insb
push
loopne
mov
cltd
mov
hlt
ljmp
ss
jne
xchg
shr
mov
bound
lods
cmpsl
das
lds
cld
jmp
lahf
cmc
sub
nop
and
push
movsl
adc
adc
pushf
scas
sbb
arpl
push
pop
or
ja
pushf
and
pop
lcall
sub
fcoms
add
imul
je
sbb
repz
inc
les
pop
push
cmp
mov
xchg
dec
clc
fcom
sbb
jne
lds
lock
decl
mov
into
std
adc
inc
fstpl
jl
jg
imul
mov
fistpl
jmp
loop
jl
jno
aaa
cmpb
les
mov
cmp
jbe
movsb
jns
ret
das
add
sbb
pushf
loopne
cmp
iret
mov
in
fcmovbe
push
gs
fcomip
or
fs
sarb
pop
sbb
cmp
test
mov
sub
incl
test
sbb
cmp
mov
sub
jge
sbb
cmpsl
push
decl
push
and
xchg
stos
xor
or
test
out
sub
sub
jl
dec
ljmp
fildl
testl
aaa
mov
daa
sbbl
cli
add
add
push
inc
xor
sbb
ljmp
clc
cmp
lcall
cmp
xchg
dec
jge
push
mov
dec
pusha
clts
xchg
xchg
ljmp
jmp
sbb
adc
push
push
pop
lods
aad
inc
daa
add
sbb
in
call
and
ret
sbb
fcmovnb
ja
cltd
pusha
loopne
mov
xchg
cli
push
dec
add
xchg
adc
sub
adc
ljmp
and
pop
cli
add
gs
pusha
loop
lock
lcall
mov
arpl
imul
lock
xchg
lock
jg
lock
push
xor
shrb
decl
addr16
addr16
scas
and
test
fadds
cld
sbb
loopne
xor
adc
stos
das
pusha
sbb
sbb
shrl
pusha
sbb
test
cli
push
dec
dec
sub
scas
ret
je
ljmp
cli
aaa
bound
fwait
pop
mov
add
cmpsb
inc
push
out
jb
mov
push
addr16
mov
insb
jno
ret
add
outsl
in
push
inc
cmpsl
inc
mov
fdivs
lock
sub
add
xchg
stos
inc
push
clc
adc
and
pusha
lret
in
test
dec
adc
decl
and
int
sarl
inc
dec
loopnew
add
adc
ljmp
and
jl
cmp
mov
jp
and
pop
daa
or
jecxz
dec
or
aam
jnp,pt
mov
in
or
xor
fisubl
adc
and
decl
arpl
mov
and
adc
in
or
icebp
js
push
movsb
clc
pushl
xchg
sbbb
call
ret
inc
filds
outsl
loopne
gs
pusha
inc
mulb
rorl
push
mov
adc
dec
or
in
leave
inc
insb
ret
push
stos
pop
iret
mov
mov
mov
cs
dec
rolb
sub
lret
and
xchg
jmp
or
jmp
fmull
jl
dec
or
lret
fisttpl
cld
mov
and
clc
ljmp
or
notb
and
mov
aas
ret
rcl
fsubp
sbb
mov
and
bound
dec
scas
mov
xchg
notb
adc
push
test
jg
icebp
rcr
popl
sub
and
and
ljmp
push
jbe
rcrb
movsb
sub
sub
outsb
push
add
ret
ja
pusha
dec
cli
xchg
push
pop
stc
dec
daa
mov
jl
mov
lcall
lcall
pop
add
sub
xchg
sub
iret
push
imul
insb
shl
lar
mov
mov
xchg
inc
jae
test
out
xchg
lea
stos
or
add
icebp
jmp
ss
stos
mov
incl
mov
cld
jmp
pop
add
jbe
insl
andb
add
test
pop
pop
sub
sbb
call
icebp
call
loop
aas
jp
push
jle
cmpsb
test
inc
add
notl
out
fcom
mov
lds
daa
aaa
bound
mov
in
pop
adc
femms
lea
mov
clc
decl
shrb
stos
cmp
or
mov
jne
mov
stc
and
js
lcall
pushf
lds
cmp
rol
pop
mov
jne
sub
dec
out
push
inc
push
add
pusha
daa
scas
clc
call
pushf
push
push
or
gs
xchg
add
sti
pop
insb
shll
xchg
call
dec
and
xor
outsb
jns
xor
aam
dec
cmp
mov
shlb
mov
inc
xchg
add
dec
cmc
inc
loopne
jne
jle
lcall
mov
outsl
orl
lods
cmc
sub
stos
mov
cmp
mov
lcall
mov
mov
imul
sub
mov
inc
ja
push
je
insb
in
enter
or
call
loopne
inc
xchg
and
shlb
xchg
cmpsl
pinsrw
adc
scas
or
ljmp
movb
or
arpl
sbb
add
mov
fld
mov
push
dec
inc
inc
xchg
add
jmp
xchg
js
xchg
xor
add
pop
adcb
ss
cld
addl
xor
or
jle
add
jle
jmp
or
dec
pushl
jg
dec
shll
dec
pop
add
lret
test
push
iret
cmpsl
xor
call
imul
mov
add
mov
mov
add
jge
adc
jg
fs
and
leave
faddl
adc
or
jb
dec
imul
rcr
hlt
mov
sub
pop
jp
inc
stc
into
cmp
fstpt
and
jmp
loope
in
mov
hlt
xor
mov
in
pop
lea
or
ljmp
adc
incl
fnstenv
or
arpl
fadds
mov
add
ljmp
dec
hlt
fbld
sub
xor
and
ss
sub
sbb
cmp
push
mov
or
cmp
push
mov
insl
fs
out
mov
mov
fmuls
arpl
je
cmp
dec
mov
cmp
ljmp
jb
cwtl
jbe
pop
test
ds
fs
push
sbb
push
and
inc
mov
and
cmpsb
mov
nop
sbb
insb
out
roll
xchg
cmp
add
sbb
rolb
popa
xor
mov
add
ljmp
cmpsl
xor
add
lock
jge
js
and
jge
loop
outsb
popf
out
clc
call
push
testb
push
add
mov
xchg
inc
and
or
insl
pushl
xchg
and
mov
movl
sub
fidivrl
aad
dec
and
nop
mov
cmp
add
pusha
xchg
inc
cltd
inc
or
aad
aam
inc
sbb
lods
lods
cwtl
inc
leave
repz
xchg
jb
call
add
cltd
xor
mov
scas
push
scas
adc
fadds
fldt
lcall
shll
or
cmp
push
adc
xchg
shll
nop
cmp
fwait
clc
lcall
adc
je
inc
icebp
test
pop
insl
ljmp
incl
outsb
cmp
shl
xorl
push
mov
sti
adc
call
jge
cmp
cmp
testl
pop
andb
xchg
lds
call
xchg
incl
add
loope
dec
rclb
cmpsl
push
xlat
sbb
lods
popf
test
call
add
iret
in
pop
and
mov
and
sbb
jg
cmp
dec
out
inc
sub
mov
int3
les
pop
and
aad
pushl
jno
xchg
js
mov
cmp
mov
add
stos
mov
arpl
mov
jmp
xchg
repz
sub
movb
cmp
and
ds
dec
aas
mulb
jp
call
adc
xor
decl
sbb
inc
xchg
xchg
mov
add
cmpsb
nop
add
inc
fcomip
ljmp
push
jg
push
xor
add
mov
cmp
sub
incl
or
dec
mov
xor
fsqrt
cld
mov
aam
cmp
xor
incl
int3
xchg
dec
add
pop
mov
arpl
add
arpl
call
enter
xchg
sbb
imull
sub
push
inc
cltd
and
lcall
fcompl
incl
pop
inc
pop
push
cwtl
fstl
cmp
mov
lods
and
inc
sbb
incl
or
sub
lcall
xor
rorl
shr
cmp
lods
cmp
dec
jno
mov
or
or
pop
mov
inc
mov
jecxz
mov
jmp
loopne
xor
push
jo
add
sub
repz
sbb
ljmp
subl
cmp
lahf
and
mov
out
clc
incl
push
and
add
sub
stos
ret
or
lods
sbb
sar
les
inc
jns
or
jno
stc
mov
lock
pop
mov
decl
ret
sub
xor
dec
mov
fistps
sbb
fstpt
mov
add
inc
mov
decl
sub
lea
adc
pushf
inc
mov
jp
sbb
dec
sahf
pop
cmp
add
call
sbb
xor
add
sub
inc
add
out
and
shrb
aaa
mov
and
adc
loop
xchg
jne
sti
mov
idiv
push
inc
inc
loopne
fwait
imul
and
fnstsw
enter
mov
decl
rorl
pop
insb
adc
shrl
int3
adcb
loopne
dec
decl
xorb
xlat
decl
data16
fldenv
pop
aam
mov
sahf
fisubrl
nop
int3
aam
imul
mov
cmp
jecxz
fsubrs
sbbl
or
adc
loope
fstpt
outsl
imul
jb
xor
leave
mov
xchg
push
push
push
xchg
pop
fldl
inc
lahf
add
xor
sbb
push
fwait
add
inc
loop
mov
addr16
sbb
cld
adc
stc
xchg
push
mov
adc
lret
or
sub
aad
popa
and
adcl
incl
sub
sub
xlat
push
add
daa
mov
cmpsb
inc
cmp
fldt
dec
pop
jno
mov
jge
jp
icebp
test
test
mov
xor
pop
or
mov
scas
inc
lods
xchg
and
sbb
divl
call
cmp
mov
mov
inc
xor
sbb
jbe
add
repz
jmp
clc
nop
mov
xor
cwtl
test
cli
lods
loope
inc
mov
les
rolb
xor
lcall
cltd
jmp
js
js
lret
or
jecxz
popa
dec
aad
mov
incl
leave
and
incb
in
mov
in
and
fdivl
sbb
jecxz
decl
mov
idiv
ud0
mov
cmc
inc
pop
fnstsw
fiadds
or
or
mov
roll
sbb
mov
test
inc
jmp
mov
inc
fcoms
aaa
pop
and
lock
push
bound
push
cmp
sbb
cmc
loopne
imul
jno
jmp
cld
outsb
or
cltd
push
jge
rorl
add
xchg
pushl
and
xor
imul
bound
fcmovu
test
ss
push
sub
call
mov
xor
lahf
ret
jmp
mov
lcall
adc
mov
jbe
xchg
repnz
sti
mov
aad
inc
adc
inc
daa
rcl
out
mov
xchg
mov
xchg
fcoms
inc
cmp
mov
fcompl
cli
add
add
dec
push
loopne
add
fs
push
int3
rcl
add
in
adc
decl
dec
push
es
adc
add
xchg
jbe
mov
call
add
push
or
push
jb
ret
jne
jge
inc
jbe
jl
insl
sahf
xor
sbb
push
xchg
add
stc
sbb
lds
dec
add
test
ss
push
cmp
pushf
into
jne
incl
imul
adc
and
pop
dec
call
loop
mov
movsl
lcall
cs
or
jl
js
add
test
push
icebp
jg
jmp
out
or
into
adc
xor
iret
dec
sbbl
roll
mov
add
push
mov
je
rcll
push
cmpsl
cwtl
jno
sahf
add
cmovns
stos
add
add
fildll
icebp
mov
push
adc
jg
or
and
add
fs
add
dec
mov
mov
dec
insb
fsubl
lods
cmp
pushl
lea
xchg
test
dec
sbb
or
fsub
mov
flds
add
rcll
mov
jno
movsb
sbb
add
fistps
ret
arpl
scas
push
insb
ja
mov
mov
jno
ljmp
mov
dec
jg
movsl
lcall
jmp
fmuls
addb
or
pop
incl
daa
pop
mov
xchg
lret
jl
mov
fnstsw
mov
bound
push
insb
arpl
push
xchg
decl
ret
imul
sbb
sub
ret
add
pop
mov
sar
mov
push
mov
lods
ret
jl
mov
push
mov
iret
inc
add
bound
pop
add
fwait
int3
or
cmpsb
push
xchg
add
xor
insb
xchg
jmp
bound
push
adc
jo
mov
jmp
push
icebp
jmp
sub
or
int
mov
popf
and
les
aam
in
mov
dec
sbbb
fdivrs
adc
pop
lret
decl
loop
add
add
dec
add
adc
in
xor
jmp
fstpl
addl
daa
mov
cmp
or
call
jne
std
pusha
push
testl
jno
xorb
dec
imul
jae
enter
ret
inc
fistps
push
aad
cmp
stos
add
movb
jp
mov
cld
dec
dec
jb
stos
pusha
jle
cs
dec
pushf
or
aam
push
xchg
call
add
mov
add
sbb
lcall
jmp
jbe
cmp
decl
cmp
outsl
clc
in
test
sub
imul
lcall
mov
mov
sub
xor
enter
rolb
rorl
js
ret
hlt
add
insl
adc
scas
into
mov
and
fistpll
jno
lock
call
push
pop
mov
cmp
xchg
xchg
inc
out
stos
movsl
pushl
add
ret
ficoml
mov
adc
adc
scas
cmp
aas
pop
insb
sub
xor
add
add
sub
add
mov
out
sbb
jg
adc
pop
add
sbb
mov
andb
xchg
cmpsl
fucomi
lods
dec
mov
incl
sub
popa
inc
enter
enter
xchg
adc
push
cwtl
add
or
cmc
or
jnp
pop
add
aaa
cltd
mov
outsb
rcl
jbe
int3
decl
dec
loopne
and
dec
in
xchg
xorl
call
insl
mov
rclb
lds
lods
mov
sbb
movsb
mov
ja
cmp
mov
mov
or
ss
lcall
mov
and
jle
inc
add
divl
xchg
lcall
pop
sahf
inc
call
push
mov
and
xchg
cmp
xorl
push
shll
push
sub
ja
aam
and
push
lea
mov
cmp
stc
or
add
and
outsl
clc
or
add
add
mov
sarl
pop
xlat
sbb
push
or
es
out
ret
rcrl
lret
mov
loopne
or
adc
jp
jg
sarl
adc
mov
call
loopne
dec
add
jbe
jecxz
mov
mov
push
loope
ret
xor
push
ss
jmp
loopne
jecxz
or
nop
js
adc
push
nop
cmp
xor
incl
add
cmp
xchg
and
pop
and
sti
inc
pop
ret
dec
arpl
call
jg
ljmp
loope
mov
inc
rcrb
push
loope
ror
mov
pop
adc
test
incl
sbb
jg
test
cli
sbb
das
pop
test
fwait
dec
stc
rolb
addl
sbbl
mov
push
mov
dec
stc
and
into
mov
cmp
orw
cmp
xchg
lea
imul
mov
fisubrs
add
and
cli
add
aaa
test
call
cmp
inc
pop
stos
pop
pusha
mov
mov
dec
mov
sbb
and
mov
cltd
stc
call
push
mov
cwtl
sbbb
movsb
mov
cs
imul
or
fsubs
jmp
xchg
arpl
iret
fwait
dec
sbb
add
loopne
test
mov
jne
jo
mov
mov
insb
mov
clc
addr16
xlat
mov
mov
cld
incl
fcompl
sbb
inc
sbb
test
jg
jg
faddl
das
xor
push
ror
mov
fadds
popa
mov
push
pop
cld
mov
cmp
arpl
sti
mov
stc
cmp
mov
xor
push
rcll
outsb
jo
push
shld
add
popa
xor
xchg
mov
lcall
add
adc
sti
ja
adc
imul
xor
xchg
test
out
sub
adc
and
push
je
call
dec
mov
and
cmp
push
arpl
and
call
cli
orl
nop
push
adc
sub
lret
jp
pop
ja
loopne
mov
jge
lcall
bound
rorl
rorl
fiaddl
call
and
dec
sub
add
mov
xchg
xchg
dec
jle
sub
ljmp
ljmp
mov
inc
lret
xor
mov
sbb
lcall
fwait
mov
xor
sarb
sub
ss
mov
test
push
jmp
jo
std
mov
icebp
test
incb
pop
adc
mov
enter
repnz
aam
add
mov
lock
xchg
repnz
push
lock
push
jae
decl
mov
dec
pop
jno
sbb
loope
gs
xor
adc
add
and
sbb
add
les
ljmp
or
mov
dec
call
mov
std
xor
incl
jecxz
cs
subb
lock
cmp
dec
pop
cmpl
insb
lret
mov
jge
imul
jl
fdivrs
and
inc
jbe
fildll
dec
mov
sbb
or
inc
jle
out
add
stos
pushl
dec
lret
cmp
add
jae
jnp
cmp
popa
mov
fcoms
pushf
ljmp
test
and
and
inc
fsubrl
mov
jns
aaa
dec
decl
mov
mov
pop
cld
lock
incl
adc
push
pusha
rolb
std
ret
pushl
filds
xor
incl
xchg
insb
or
pop
movsl
inc
ljmp
in
repz
call
add
adc
pop
ficompl
fistl
decl
mov
test
xor
ret
in
sub
mov
cwtl
sbb
in
adc
cs
mov
popa
popf
pop
pusha
sar
lcall
push
ljmp
cmpb
in
inc
cs
call
movb
mov
mov
pushl
adc
test
cmc
pop
or
pop
or
jb
mov
les
push
push
mov
loopne
xlat
ljmp
push
push
add
xorl
jbe
inc
repz
xor
test
ljmp
or
push
and
cmc
ljmp
lcall
jmp
mov
sub
movsb
push
pop
das
add
xchg
insb
xchg
sbb
pop
pcmpeqw
loope
jns
add
incl
adc
ljmp
in
loope
leave
push
cmp
ljmp
out
xchg
mov
out
decl
push
push
mov
call
popa
imul
cli
mov
xchg
cmp
and
lcall
sbb
xlat
mov
mov
jmp
wbinvd
mov
mov
jp
or
ds
filds
sbb
leave
std
pop
mov
add
rolb
jmp
data16
mov
int3
in
cmpsl
frstor
js
adc
inc
adc
pop
xchg
mov
call
xchg
xor
dec
cmp
adc
xor
clc
rcll
jmp
xor
xchg
sbb
lret
sub
push
cmp
imul
pushl
push
push
sti
and
lcall
mov
div
pop
inc
adc
push
sub
mov
and
lea
mov
mov
cwtl
decl
inc
xor
sbb
daa
int
out
adc
dec
push
add
sbb
ja
incl
or
xchg
mov
bswap
sbb
jbe
shrb
jo
mov
jg
cmp
add
or
mov
in
xor
cmc
adc
push
add
pop
dec
cltd
daa
stos
js
push
lret
xor
int
decl
loope
mov
and
out
cmp
inc
cmp
out
adc
inc
mov
ljmp
mov
xchg
push
jle
cmp
repz
pop
rcrb
or
mov
test
jno
leave
outsb
mov
push
mov
pop
mov
xchg
addb
cmp
movsb
cli
popa
inc
inc
or
mov
shrl
arpl
daa
mov
pop
dec
push
jo
jge
test
incl
mov
add
andb
xchg
rcl
outsb
jecxz
aam
jg
int3
sub
xchg
mov
mov
adc
xchg
adc
aaa
std
cmp
movsb
push
lods
sub
sbbb
fstpt
aaa
cld
decl
mov
int3
cmp
jle
xor
sbb
insl
in
popw
insl
fiadds
js
pop
hlt
push
mov
adc
lcall
mov
enter
lret
sarl
cwtl
in
clc
or
inc
and
cli
enter
add
mov
jbe
ret
cmp
incl
sub
add
mov
mov
inc
stos
mov
in
lcall
inc
add
or
loope
sub
jl
add
rolb
cmpb
add
aam
ljmp
lret
sub
sub
adc
mov
fcomip
ds
adc
je
lock
out
rcrl
inc
and
xor
scas
out
mov
decl
or
push
add
lock
stc
cmpsl
mov
xchg
scas
xchg
pop
adc
lock
mov
mov
mov
ret
incl
shlb
sysenter
sbb
jno
adc
arpl
add
add
pushl
dec
sarb
sbb
das
cltd
dec
mov
xor
xor
sbb
push
rcl
add
out
mov
adc
mov
dec
imul
decl
xchg
jns
mov
mov
test
or
cli
call
cmp
cmp
popf
sbb
mov
pop
outsb
adc
pop
decb
adc
xchg
or
push
cli
ljmp
cli
jecxz
and
mov
xchg
in
push
addr16
add
pop
mov
aas
ljmp
xchg
in
stc
mov
inc
inc
shll
mov
add
cmp
test
add
adc
stc
outsb
xlat
adc
out
icebp
pop
fcomip
mov
add
loop
dec
lock
add
scas
decl
cmp
and
aas
pop
dec
add
lea
and
dec
push
sbb
lods
lcall
incl
add
stos
test
add
xchg
cs
fisttpl
imul
movsl
dec
or
pop
push
sbb
mov
cmp
xchg
inc
bnd
inc
push
mov
test
inc
sub
dec
rcrl
test
or
push
dec
inc
movsb
mov
pushl
add
inc
scas
add
bound
fwait
xor
or
enter
in
decl
movsb
in
cwtl
fimuls
jns
lret
clc
inc
cmp
imul
or
lods
stos
cwtl
adc
lcall
ds
dec
sub
lret
mov
ss
out
xchg
rcr
cs
inc
lods
mov
flds
dec
pop
add
sub
cld
sub
sahf
xchg
mov
or
inc
pop
out
ljmp
xlat
imul
jmp
sbb
bound
cmp
pop
xchg
test
adc
lcall
int3
lahf
std
pop
push
xchg
rolb
add
pop
or
xchg
inc
add
lods
hlt
add
es
pop
add
mov
clc
cmpsl
dec
sub
dec
lods
or
pop
popf
test
incl
lock
add
movsl
out
mov
std
rcrb
add
or
nop
and
call
lock
jmp
xor
cld
mov
adc
push
sbb
repnz
in
in
sbb
mov
and
cs
xorl
imul
pop
adc
ret
int3
mov
decl
cmpsb
mov
cmp
fdivl
jae
jnp
add
jno
incl
xchg
xchg
aaa
push
xchg
sub
loopne
mov
mov
out
fidivs
je
sub
jo
sarb
fwait
loope
pushf
das
jno
loope
pop
ljmp
sub
jno
push
add
and
inc
adc
sub
jmp
and
pop
sbb
movl
into
stos
repnz
push
adc
es
iret
jno
shl
loope
mov
cmp
movsl
stc
in
hlt
add
xchg
xchg
dec
addl
lret
fdivrl
imul
movsl
jge
in
mov
je
les
mov
pop
or
addr16
push
popa
jl
nop
ret
addr16
cmp
pushl
or
ljmp
dec
sub
pop
and
int
mov
decl
push
rolb
inc
enter
fldenv
aad
gs
add
in
add
push
and
cs
aas
jmp
popa
in
nop
add
and
subl
add
nop
dec
xor
hlt
call
or
cmp
xchg
or
pop
fwait
mov
sub
sahf
xchg
incl
xchg
inc
dec
sbbb
inc
sti
jp
inc
add
call
jl
mov
mov
ds
popa
fs
pop
cmp
shrb
pop
add
in
pop
jo
add
in
dec
fs
call
in
jns
cs
pop
stos
dec
inc
push
dec
adcb
and
push
add
cmc
sub
add
shr
fwait
and
ljmp
mov
xchg
jp
aad
and
lea
incl
ja
mov
clc
xchg
add
xlat
and
dec
cmp
add
shll
inc
and
addr16
imul
rcl
notb
mov
jle
pushf
inc
push
jbe
xlat
lcall
jmp
mov
pop
sbb
mov
aam
push
jae
outsb
and
push
popf
mov
inc
aad
push
and
lcall
add
pop
sbb
xor
loopne
mov
ljmp
mov
es
push
shlb
xchg
outsl
mov
jno
cld
sbb
dec
call
arpl
sub
data16
mov
xorb
add
jo
rorb
cmp
dec
nop
sub
addr16
cmp
mov
cmpsb
or
lret
out
or
push
add
in
or
xor
mov
mov
jmp
cwtl
jmp
lcall
aaa
xchg
adc
jbe
inc
and
bound
pusha
je
pop
jnp
cmp
sub
js
sub
jl
sub
or
mov
fwait
cmp
mov
adc
push
cmp
xchg
hlt
adc
ljmp
or
sbb
loope
and
add
out
stc
sub
adc
aam
mov
in
popl
lahf
cmp
dec
fs
add
or
int
lahf
cmp
and
mov
imul
dec
fnstsw
pushl
mov
jecxz
pop
pop
decb
negl
addl
and
nop
xchg
adc
xchg
push
arpl
mov
and
and
call
dec
dec
fnstcw
outsb
mov
mov
dec
lods
fs
adc
popf
adc
mov
mov
fcoms
xchg
scas
and
sub
add
loope
sbb
mov
mov
shlb
shlb
push
ja
bound
pop
stos
xor
lcall
addb
xchg
cli
pop
outsl
jmp
fldcw
loopne
repnz
mov
mov
dec
scas
cli
call
mov
add
push
mov
add
std
nop
lea
incl
ljmp
out
push
cmc
xor
mov
sub
leave
xchg
int
adc
ja
cli
out
in
cmpsb
out
clc
ljmp
jb
ret
ja
inc
push
jno
cmc
sub
adc
jno
mov
ljmp
jge
or
fstl
mov
lcall
popa
fcoml
mov
xrstor
xor
sub
paddusw
inc
jns
sarb
fisttps
push
push
xor
push
push
pushl
loop
test
fcmovne
or
fcompl
ret
inc
sbb
roll
movsl
jo
out
and
push
mov
push
clc
xchg
arpl
jb
stos
andl
inc
loop
or
and
xor
gs
mov
xchg
jge
nop
push
push
inc
js
mov
lahf
add
cmpsb
fimuls
ja
call
push
mov
mov
push
loope
cmove
add
jmp
mov
inc
stc
adc
aas
ds
inc
bound
add
pop
pop
sub
sti
add
mov
dec
xor
push
enter
push
mov
ljmp
into
sbb
enter
mov
fs
aad
push
or
mov
aaa
ret
test
cs
dec
fadds
mov
inc
xor
sbb
cmp
pusha
xchg
into
sti
add
mov
lods
movsl
enter
outsb
and
mov
xorl
lcall
dec
cltd
gs
orl
and
push
test
test
push
call
or
inc
mov
pop
lock
hlt
xchg
or
mov
ljmp
roll
addb
out
xor
leave
pop
std
add
imul
jmp
or
adc
pop
pop
hlt
sbb
iret
leave
mov
jne
lds
push
imulb
xor
or
adc
jmp
inc
cmpsb
pop
or
inc
add
rol
or
lret
cmpb
js
clc
in
mov
and
lret
idivl
das
ret
out
scas
sbb
pop
ja
jle
mov
cmp
pop
or
nop
es
mov
data16
bound
outsl
movsb
fcmove
shlb
call
xor
and
loope
sbb
fildl
fs
mov
addl
push
jne
gs
and
in
push
push
filds
nop
imul
es
add
push
nop
fsts
rcll
add
cmp
inc
xchg
or
jae
sbb
int
sbb
ja
adc
add
in
xchg
mov
cmp
lcall
mov
outsb
inc
xchg
jp
call
dec
cmovp
mov
cmpsb
sub
jmp
cli
or
mov
fldcw
cmp
fsubrp
data16
mov
decl
lcall
sub
push
push
mov
leave
mov
push
dec
loopne
mov
hlt
inc
push
fadd
sbb
call
mov
jp
in
outsb
or
xchg
cmp
jp
adc
jb
cltd
adc
add
mov
cmp
jo
mov
adc
mov
xor
insb
std
cmpsl
cmp
mov
test
popa
shlb
push
jno
inc
out
ljmp
or
insl
enter
sbb
scas
sbb
adc
gs
adc
call
sub
inc
gs
negl
rcll
push
es
ljmp
testb
pop
pushf
mov
fs
out
lods
punpcklbw
dec
fbld
imull
test
pop
mov
push
or
adc
shll
inc
enter
data16
jne
orl
add
dec
push
adc
jo
scas
cli
jg
test
in
mov
ret
mov
add
das
xor
test
lret
push
push
add
icebp
call
inc
pushf
xchg
or
and
add
fists
shll
idiv
jg
mov
jl
dec
cltd
mov
sub
xchg
in
lret
xchg
add
decl
pusha
notb
mov
cs
mov
and
test
push
fcoms
sbb
in
jno
shrb
call
inc
add
mov
add
jne
jno
mov
decl
lock
xchg
mov
add
les
dec
xchg
and
add
roll
jg
decl
rcl
or
add
adc
ret
jae
ret
fadds
std
call
rorb
and
adc
dec
rolb
adc
mov
sub
sbb
stc
dec
dec
sub
mull
dec
inc
aaa
ds
je
shr
dec
std
mov
imul
movsb
add
les
loop
mov
test
jb
add
vmovaps
outsl
ret
mov
jae
outsb
dec
cli
jo
cmp
or
push
jmp
subps
mov
test
pop
lret
cmp
fcomip
pushl
cmpb
xchg
xor
pusha
add
pop
sbb
movsb
pop
mov
call
out
lods
and
push
adc
test
mov
mov
sbb
scas
cwtl
js
ret
orb
call
pop
cwtl
ret
mov
inc
xchg
sbb
bound
filds
imul
and
mov
add
ljmp
fadds
lods
fs
in
dec
mov
sub
clc
shl
mov
incl
ret
or
rol
adc
dec
ret
aas
fisttpl
mov
incl
fcomps
js
inc
stc
add
loopne
mov
mov
mov
movsl
xchg
jecxz
add
pop
xor
or
add
jo
lea
out
push
into
in
add
pushl
jb
mov
push
dec
scas
mov
aad
decb
mov
das
rclb
xchg
call
ljmp
sbb
pop
jbe
lcall
add
sar
add
mov
cmp
cmp
ljmp
or
sbb
loop
inc
in
pop
mov
stc
stos
mov
cmc
es
fcomip
in
or
push
xorb
nop
loope
xchg
mov
dec
clc
pushl
add
aad
cmp
stos
sub
call
je
mov
pusha
mulb
loopne,pt
pushf
pushl
cli
lods
clc
xchg
mov
cmp
sub
gs
movsb
push
mov
call
pop
jl
call
push
icebp
sub
ret
add
cmp
addr16
jo
or
add
xchg
fldt
or
leave
push
adc
inc
lcall
xchg
adc
inc
rol
sti
lret
out
xor
add
in
fwait
push
int
shrl
sbb
dec
add
inc
cmp
loope
add
ss
icebp
pushl
sub
fimull
orl
cwtl
ret
cli
retw
add
lds
and
pushl
rolb
pop
sbbb
push
popf
fucom
mov
mov
je
fistpl
pushf
sbb
fcmovnb
test
dec
sub
xlat
xchg
and
add
int3
adc
ret
mov
adcl
js
xchg
scas
push
fcompl
jbe
sbb
xorb
adc
stos
jmp
jle
xchg
out
mov
lea
in
jo
imul
pop
add
ljmp
pop
daa
movsl
xorl
mov
les
add
dec
dec
lods
stc
mov
add
pushl
sub
mov
or
inc
xor
sbb
dec
call
cmp
das
pop
dec
and
fcoms
xor
inc
js
hlt
cs
adc
arpl
and
test
lret
out
lea
adc
call
sub
adc
insb
cli
shlb
jle
push
jl
test
int
out
decl
xor
inc
xchg
mov
push
mov
jg
mov
sar
dec
or
cs
jne
pop
cld
jmp
cmp
inc
fnsave
mov
sub
loopne
pusha
test
ss
pop
test
mov
sbb
test
mov
add
sbbb
adc
xchg
cmp
xchg
lea
cmp
incl
adc
pop
add
sbb
adc
ds
mov
loopne
je
adc
or
add
jmp
out
mov
adc
aam
sub
fbld
pop
xor
decl
push
scas
loopne
push
mov
lret
out
mov
ror
jb
cmp
pop
call
loopne
push
fisubs
nop
mov
loopne
xchg
iret
xor
fstpl
mov
lods
inc
test
sbb
lds
add
out
incl
push
shll
test
lods
add
shl
std
stos
pop
pop
testb
pushf
in
out
decl
gs
inc
pop
sahf
js
or
pusha
dec
add
cld
mov
adc
inc
arpl
insb
mov
inc
pusha
orb
into
adc
xor
add
daa
push
fistl
cmp
adc
je
mov
insb
movsl
mov
mov
inc
and
aam
mov
sub
adc
cld
out
xor
sub
bound
das
clc
inc
xor
enter
pusha
mov
mov
or
stc
sbb
xchg
push
cmp
decl
add
ffreep
add
xchg
and
shlb
pop
push
lds
insl
add
loop
call
and
je
loop
jne
lods
sub
inc
lcall
call
stos
test
repz
and
fmull
enter
xor
dec
or
jmp
pop
notb
or
cmpl
add
adcb
mov
out
rol
mov
jmp
jmp
push
xor
call
cld
xor
jmp
mov
push
pop
lret
js
xchg
adc
push
loope
jg
jmp
or
jb
es
mov
push
and
cli
push
add
icebp
jg
jnp
sbb
fwait
or
adc
andl
cmp
fbstp
test
and
out
sbb
test
jmp
jge
adc
push
xchg
cwtl
sahf
test
push
clc
mov
adc
or
clc
fwait
or
xchg
and
add
iret
push
add
xchg
sbb
incl
mov
or
loopne
add
adc
popf
and
scas
or
lcall
jge
mov
inc
push
dec
loop
loop
xchg
loop
enter
bound
loop
adc
add
pop
in
sbb
roll
sub
scas
push
test
push
fdivrl
ror
sub
lcall
sub
mov
push
movsl
fsubl
movsb
dec
adc
incl
pop
scas
cli
call
cwtl
adc
and
add
sub
mov
lret
dec
xchg
adc
dec
mov
pop
fcoml
jb
out
xchg
adc
xchg
add
test
add
dec
gs
fprem
mov
lcall
jmp
arpl
scas
mov
pop
inc
hlt
mov
and
stc
in
mov
test
loopne
pop
push
call
stc
cmp
inc
mov
loop
sahf
xchg
xor
out
mov
addb
jge
jmp
xchg
ret
ja
clc
imul
xchg
pop
inc
repnz
lret
pop
adc
push
decl
mov
xor
cmp
pop
fisubl
cld
decl
ss
adc
xor
inc
sbb
push
add
ljmp
and
sub
jp
push
movsl
addr16
ss
inc
mov
call
fsubrs
mov
jmp
mov
mov
jl
mov
mov
sub
call
call
add
nop
pushf
cltd
shll
or
sub
xchg
das
add
insb
movsb
cltd
shll
add
xchg
add
aas
cmpb
js
aas
loope,pn
sbb
mov
push
mov
mov
push
add
cmp
cwtl
pop
mov
bound
jle
js
mov
dec
cmpsl
xor
adc
out
mov
lock
shlb
sahf
adc
and
insl
lock
call
in
pop
add
cs
mov
fcmovnu
xor
push
jle
mov
std
cmp
aas
loopne
inc
sbb
lret
sub
sub
in
xlat
push
mov
sub
out
pop
mov
adc
ljmp
dec
fcmovnbe
sub
cmp
xor
xor
add
inc
mov
xchg
fcomip
jg
rol
fidivrl
add
fs
pushf
xchg
subb
call
push
bound
push
pop
mov
in
outsb
aam
xor
pop
std
pushl
mov
xchg
fxch
xchg
jecxz
jae
ret
push
pop
and
ljmp
push
add
lahf
jbe
xor
in
das
add
and
jle
aaa
cld
mov
sub
mov
ja
mov
faddl
cmp
add
mov
sbbb
pusha
pop
xlat
mov
mov
into
hlt
inc
push
sbb
sahf
pop
shrb
jecxz
mov
ss
jno
pop
dec
mov
call
mov
ret
rolb
inc
ds
aas
mov
lea
pusha
xchg
or
fcomip
or
imul
jp
fldl
addb
mov
mov
pop
imul
addb
js
adc
add
sbb
push
jne
xor
cmp
fisubrs
es
cmp
std
decl
fdivrl
rorl
add
inc
add
movsl
add
xor
jb
bound
xor
out
rorl
sbb
or
mov
sarl
pushl
dec
mov
jbe
lock
sbb
mov
ffree
mov
test
pushl
lock
inc
xor
add
aaa
adc
enter
sbb
popf
pop
cmp
dec
idiv
out
push
adc
mov
inc
lahf
adcb
push
daa
pushf
ret
cmpsl
pop
out
sub
jmp
rep
or
xchg
lock
in
addr16
mov
push
sbb
or
incl
std
add
jle
dec
repnz
mov
test
jae
lcall
imul
xlat
mov
ror
fldenv
pusha
je
call
mov
insl
or
cmp
pop
leave
dec
dec
mov
pusha
mov
adc
insb
mov
decl
cs
cwtl
pop
into
daa
or
fdivr
add
or
mov
sub
mov
jno
sbb
decl
inc
mov
cwtl
or
inc
xor
fldl
xor
lahf
or
or
mov
xor
popa
push
jge
dec
mov
cmp
aam
divb
adc
in
xchg
insl
xchg
xchg
roll
push
sub
mov
dec
xchg
out
mov
lret
inc
imul
divl
inc
cmpsl
inc
insb
sbb
or
fwait
mov
loopne
stos
cmp
adc
dec
mov
incl
and
mov
lcall
psubusw
jb
add
enter
push
mov
jns
dec
mov
orb
sub
gs
or
call
loopne
ja
inc
jns
adc
push
ret
outsb
ja
repnz
cmp
add
and
ljmp
add
cmp
in
push
nop
cld
rcrb
jns
decl
cmp
mov
adc
pop
icebp
and
clc
cli
or
test
jle
jg
in
xlat
dec
in
rcrb
loope
jns
pop
or
les
mov
ret
ret
mov
sahf
outsl
cmc
add
and
cmpsb
cmp
add
insb
out
cmp
push
mov
fs
mov
add
rol
rorl
aas
inc
fs
lods
push
movsl
add
or
pop
clc
jp
sub
bound
cli
test
add
add
cmpsl
add
jmp
inc
adc
and
adc
xor
mov
xor
loop
pop
ja
les
js
lcall
outsl
clc
fadds
mov
pop
inc
add
and
add
xor
jno
cmpsl
and
sbb
sub
std
jecxz
pop
lcall
ljmp
fs
inc
and
out
popf
xchg
mov
test
cld
pusha
mov
mov
add
pop
jge
xchg
mov
inc
and
mov
jb
xchg
ret
imul
lret
add
push
lods
add
rcr
ljmp
xchg
pushf
jae
and
inc
mov
or
lods
add
xor
cmp
push
mov
decl
imul
sbb
arpl
mov
xor
inc
adc
or
aaa
cld
incl
and
adc
or
loopne
push
adc
jmp
ss
movsl
or
ret
add
pop
cs
mov
mov
add
cli
dec
icebp
icebp
push
std
xor
adc
shrb
scas
clc
pop
mov
out
adc
dec
fstpl
mov
lock
sbbl
pushl
mov
ret
mov
mov
repz
adcb
inc
add
decl
mov
add
sub
mov
int
leave
jmp
decl
ja
jle
pusha
shrl
push
pop
sti
inc
xchg
inc
je
cmp
incl
bound
cmp
cmp
outsb
add
shll
push
mov
jo
dec
scas
loopne
and
call
je
cmp
adc
sbb
daa
imul
les
movsl
fisttpll
movsl
sti
in
inc
sbb
fcomip
jl
hlt
inc
and
inc
push
call
rcll
xor
loop
dec
repnz
clc
incb
pop
or
test
pop
fldenv
sarl
testl
repz
push
add
mov
pop
out
xchg
sub
mov
lret
int3
or
incl
ds
fld
mov
in
lds
pop
sub
iret
fcmovb
out
fcoms
jo
adc
fwait
xchg
cmp
inc
pop
fdiv
cmc
in
mov
push
jb
decl
mov
insb
lea
and
and
ret
push
gs
dec
and
frstor
in
call
mov
sub
fsts
out
hlt
fs
xchg
cs
daa
sub
pop
push
jo
add
dec
mov
inc
push
xchg
dec
or
dec
inc
stc
aas
mov
into
pusha
cmp
mov
cmc
push
add
fcomip
ret
adc
mov
lods
inc
dec
dec
notb
xchg
icebp
mov
jmp
jle
xchg
mov
pop
fbstp
mov
cmp
decl
add
or
scas
int3
subb
push
roll
jne
lock
ret
ljmp
das
sub
pusha
pushf
add
sbb
pushl
pop
sbb
xor
mov
jb
and
repnz
mov
lods
loopne
add
stos
incb
add
mov
cmp
js
test
movl
pusha
rcl
add
stos
and
or
xchg
adc
xor
fmul
sahf
into
jecxz
popf
push
call
test
notl
or
pop
pcmpgtd
out
mov
aam
pop
call
lds
lods
lods
decl
inc
mov
dec
and
shll
popw
cmp
ljmp
bound
sbb
jle
sarl
mov
sbb
sub
jne
sub
incl
shrl
nop
mov
push
mov
sbb
stos
mov
rorb
fcmovnu
cmpsb
pushl
add
ja
das
mov
inc
xor
nop
mov
push
lds
mov
call
lret
test
or
mov
jo
or
int3
pop
jo
mov
mov
pushl
std
test
int3
cs
sub
data16
test
outsb
mov
mov
das
mov
jo
mov
sub
add
and
jg
jae
cmc
fcmovu
out
pop
incl
cld
mov
sbb
in
push
or
cmp
adc
decl
sub
inc
mov
addb
outsb
jne
push
idiv
inc
add
xor
cli
pusha
lahf
add
incl
add
xchg
jp
dec
addl
ret
jp
leave
fwait
inc
pop
mov
push
movsb
imul
dec
jb
or
adc
inc
pop
nop
or
aas
adc
pushl
and
and
mov
add
pop
mov
fs
incl
inc
dec
movsl
mov
call
stos
xor
inc
xchg
mov
xor
cmp
sub
cli
test
das
dec
js
mov
ds
mov
cwtl
cli
lds
adc
pusha
hlt
mov
pushf
cmpsb
pop
xchg
inc
mov
pushl
or
sbb
cmpsl
lea
push
jmp
dec
jbe
sub
jecxz
test
or
cmpl
addr16
mov
mov
int3
pushl
xor
nop
adc
repnz
ljmp
mov
insl
jo,pt
mov
popf
dec
cmpsl
cmpsl
mov
push
incl
fstl
push
or
mov
cmp
mov
pop
fwait
sbb
pushf
aaa
hlt
sbb
fisttpll
mov
sbb
or
stc
jae
mov
js
inc
fbld
loop
add
inc
xchg
sbb
xchg
ds
mov
cmp
cmp
int
inc
dec
xor
push
pop
in
scas
sub
push
lods
cmp
repnz
es
lods
sbb
std
hlt
and
xor
and
addr16
test
push
ret
mov
cmp
call
cltd
adc
shld
incl
mov
in
aam
dec
out
incl
xchg
or
pop
into
add
jecxz
ljmp
jl
push
mov
repnz
ret
call
add
fcoms
or
add
xchg
pop
inc
lcall
sbb
or
inc
mov
push
addl
shl
fbstp
push
push
mov
push
clc
decl
and
mov
arpl
scas
or
ljmp
sbb
std
out
mov
mov
call
hlt
iret
aam
or
mov
mov
mov
mov
xor
push
pop
adc
lds
mov
lcall
rcrl
pop
push
test
add
jp
in
popa
iret
addb
leave
ljmp
rorb
ds
adc
ljmp
xchg
ljmp
xchg
dec
push
add
sub
sbb
add
mov
dec
ret
push
int3
gs
pop
hlt
sub
iret
test
jb
cmp
inc
push
push
add
dec
mov
inc
adc
sbb
std
push
psrad
push
mov
js
mov
or
lahf
dec
andb
jge
fistps
js
insl
or
fs
mov
push
push
and
imul
jle
test
jge
pop
inc
jecxz
inc
popa
ja
inc
mov
inc
adc
lcall
std
mov
xchg
icebp
mov
fistl
jg
call
dec
mov
or
movsl
xchg
jp
mov
scas
lret
push
jno
ljmp
adc
add
or
call
call
jo
addb
xor
push
popa
push
or
orb
xchg
or
ljmp
xlat
das
nop
pop
pop
test
mov
pop
movsl
jne
or
sub
sub
das
shrb
or
in
or
sub
pop
stc
aam
decl
ljmp
push
cwtl
pop
mov
leave
add
loope
sbb
cmpl
cmpsl
aad
inc
adc
vcmpneq_oqss
rcrl
ret
test
sbb
scas
cli
frstor
push
inc
pusha
clc
sbb
push
inc
pusha
add
jp
clc
ret
mov
mov
inc
push
add
es
out
xchg
cmc
cs
inc
xchg
cmp
inc
cli
jp
sbb
mov
add
popf
scas
decl
mov
scas
xor
add
cmp
mov
dec
mov
in
jg
inc
sahf
fisttps
cmp
and
pushf
mov
std
adc
filds
lcall
in
xor
mov
push
mov
mov
add
leave
push
add
incl
sahf
data16
add
push
fsubrs
mov
jo
shrl
jbe
push
insl
in
aaa
lea
inc
in
lock
lcall
lcall
xchg
pop
leave
dec
in
add
or
stc
test
cwtl
rolb
mov
lcall
cld
fiadds
arpl
mov
mov
xchg
adc
clc
decl
sbb
pop
cmp
fisubl
fisubs
and
sbb
icebp
mov
pop
add
push
ds
adc
sub
lods
push
sub
sbb
mov
negb
inc
in
minps
dec
lcall
and
pop
jbe
sbb
pop
xor
pusha
jb
jae
daa
into
pop
jl
add
cmpb
xchg
dec
pop
jb
fdivr
int3
mov
adc
mov
adc
je
ljmp
cmp
xchg
rolb
aas
push
stos
insl
lcall
cs
xor
xorb
lcall
and
inc
testb
mov
sbb
testl
sbb
mov
nop
inc
jge
sbb
in
add
daa
lret
or
dec
test
mov
scas
add
add
mov
xchg
sbb
jmp
cmp
sub
mov
dec
mov
and
add
xchg
pushf
lahf
push
mov
sbbb
cwtl
mov
loopne
jmp
inc
or
dec
or
ljmp
xchg
dec
sub
or
loope
mov
sub
mov
std
scas
jmp
dec
mov
add
bound
aas
mov
cmpsb
inc
push
and
enter
jo
loop
sbb
push
jns
cltd
cmovb
cmp
add
aas
imul
or
cmc
add
sbb
fidivs
inc
test
xlat
jg
push
mov
mov
pop
xchg
fsubrl
mov
fidivrl
jae
or
mov
or
mov
add
sbb
mov
sar
lcall
mov
xor
xor
dec
push
and
inc
mov
sbb
lcall
ja
stos
jno
punpcklbw
dec
jecxz
add
cli
or
es
and
xchg
adc
adc
push
std
rcll
or
inc
imul
jnp
jmp
in
in
clc
call
incl
rcll
js
mov
fimull
data16
sbb
call
add
xchg
pop
cmp
cmp
lock
out
add
stos
xchg
jno
push
dec
add
aas
inc
daa
mov
ss
mov
xchg
shll
push
shl
adc
pop
push
lods
in
imul
out
out
fdivl
pop
bound
sar
ljmp
xchg
sti
cld
push
lds
pop
mov
in
mov
cmpsb
mov
push
cmp
mov
lock
jp
or
hlt
mov
scas
mov
inc
loopne
jp
pusha
mov
mov
std
outsl
dec
push
dec
iret
add
inc
loop
xor
push
jg
cld
inc
add
add
inc
out
sub
push
dec
decl
xchg
adcl
adc
cwtl
insl
adc
inc
jl
push
cld
js
ficoml
sahf
cld
adc
bound
mov
aad
xor
ljmp
sar
jo
add
jmp
scas
cmp
rorl
fistpl
sahf
cmp
pop
mov
dec
sbb
scas
dec
cmp
xor
or
pop
or
ja
in
fs
push
inc
pop
sbb
mov
mov
out
xchg
ds
loope
cmp
enter
das
ret
or
sub
mov
loopne
cli
cmp
xor
push
xchg
mov
das
imul
enter
xorl
add
adc
jmp
xor
cmp
cmpsb
cmp
fbld
aaa
es
dec
outsl
add
fisubrs
mov
decl
jo
mov
push
int
call
dec
cld
outsl
cld
adc
cmp
sar
cmpsb
jg
add
pop
inc
sub
loopne
aam
sbb
in
lea
hlt
jmp
in
mov
xchg
add
popa
or
movb
push
in
pusha
mov
jbe
adcl
xlat
jg
call
cmpsl
xor
xchg
daa
mov
mov
add
loopne
jg
dec
es
das
fists
bound
xor
inc
pop
sub
inc
mov
add
jmp
and
decb
or
dec
aad
pusha
data16
dec
fdivrp
jg
mov
dec
sub
adc
inc
imul
sahf
and
add
cld
cli
sbb
sub
jae
sbb
push
jns
test
xor
insb
nop
ret
dec
xchg
inc
call
add
nop
mov
pusha
push
mov
xor
hlt
shl
fidivrl
push
mov
iret
loope
or
jle
and
mov
pushf
add
add
jg
inc
xor
movsl
inc
mov
mov
cmp
rclb
call
inc
mov
or
dec
xchg
add
ret
xor
mov
xchg
jmp
or
sub
cmp
push
stos
push
mov
rolb
jp
fbld
int3
and
leave
dec
mov
insb
add
aaa
lods
adc
mov
pop
data16
cmpsl
mov
mov
filds
hlt
push
jno
pop
inc
jnp
fistl
push
dec
push
cmp
repz
cmp
jb
roll
es
and
dec
mov
xor
jl
adc
sbb
add
sbb
jecxz
lcall
add
mov
add
test
cli
bound
mov
xor
dec
cld
cmpsb
cmpl
lret
arpl
mov
stc
imul
fwait
sarl
jl
xchg
enter
mov
push
xor
or
jb
out
mov
into
mov
inc
es
xchg
sti
js
jl
loopne
jmp
mov
insb
sub
dec
sbb
mov
scas
jl
loopne
sbb
xor
fsubp
mov
add
incl
add
and
xchg
cmp
mov
lcall
stc
add
push
sar
iret
jo
or
in
jb
pusha
cmc
cli
adc
xlat
dec
dec
decl
cmp
or
inc
pop
ret
je
lock
xchg
hlt
jo
and
hlt
in
loope
jae
icebp
mov
std
ljmp
pop
xchg
lcall
fdivrs
stos
adc
cld
iret
xchg
je
jo
adc
push
incl
rorb
dec
popl
les
decl
loopne
push
int3
mov
loopne
adcb
inc
push
add
icebp
out
push
jp
or
aam
or
jmp
pop
cmp
mov
sbb
decl
test
cvtps2pi
add
arpl
ja
popa
out
push
mov
in
pushl
xor
inc
scas
push
or
roll
push
or
pop
inc
mov
addr16
cs
add
not
mov
dec
repz
clc
adc
in
dec
mov
xor
cs
add
cbtw
push
cmp
pop
loop
test
incl
js
std
xor
cmp
hlt
jno
or
jb
mov
mov
jmp
push
sub
inc
inc
aaa
outsb
test
jmp
sbb
xor
hlt
jle
aam
mov
imull
fldl
mov
mov
dec
leave
ljmp
or
xchg
xor
and
adc
xchg
mov
lea
js
push
std
mov
add
je
fs
jno
dec
dec
and
xchg
dec
mov
sbb
inc
dec
shrb
push
int
add
cmp
push
sub
lds
ljmp
call
sbb
enter
adc
mov
loop
scas
adc
push
cld
leave
xchg
xchg
xor
push
hlt
xchg
test
mov
push
adc
mov
jmp
sbb
dec
or
xchg
mov
lds
add
push
aas
lods
clc
jmp
adc
inc
iret
insb
dec
inc
add
lahf
jb
inc
jne
mov
mov
daa
push
push
inc
sbb
lock
outsl
fistpll
mov
pushl
inc
and
shr
pop
jno
loope
push
push
xor
xchg
negl
mov
jns
mov
push
mov
decb
lods
jns
sbb
and
add
cmp
push
test
out
mov
out
movsl
add
js
pop
cli
lock
mov
inc
mov
icebp
and
in
movl
cmp
push
mov
add
dec
sbb
fimuls
cmp
setl
call
lret
xchg
jb
sbb
stos
add
stc
clc
lods
mov
jo
xchg
pushf
sbb
inc
jo
pop
lock
cmc
push
or
push
jmp
lcall
movsl
inc
or
es
loopne
or
popf
lcall
sub
pushl
test
jnp
xchg
dec
pop
pop
test
or
pop
cmp
out
mov
sar
sbb
ret
lea
out
lock
inc
cmp
inc
rolb
push
cwtl
jp
stos
mov
shl
pusha
mov
sarb
fildll
adc
cmp
dec
sbb
inc
mov
int3
ret
inc
mov
pushl
std
es
mov
cmp
inc
jmp
inc
lock
shll
decb
addl
loopne
jmp
aaa
fmuls
cld
ljmp
decb
lret
pop
xchg
fidivl
leave
xor
mov
negb
dec
cmpb
ljmp
push
mov
dec
xchg
dec
cmpsb
pop
popa
add
pop
cmp
inc
out
les
mov
adc
inc
sbb
sub
jnp
fistl
mov
dec
sub
xchg
jg
addb
mov
jno
sub
clc
pop
and
cwtl
sbb
push
jmp
add
xor
pop
cmc
push
inc
and
sbb
jo
inc
lcall
adc
cmp
jmp
enter
fiadds
add
mov
cltd
mov
push
xorl
ljmp
insl
repnz
rcrl
loopne
and
addl
mov
mov
lods
xchg
insl
cs
mov
outsl
pop
mov
jle
scas
sbb
add
cs
add
out
pop
or
sarl
push
add
add
jecxz
js
jbe
jmp
or
adc
hlt
adc
push
dec
jl
sbb
adc
mov
add
add
lcall
lock
dec
add
sbb
or
popa
aas
xchg
out
les
subl
dec
add
outsb
insb
inc
cmp
scas
faddl
add
adc
out
adc
fucomip
add
dec
and
bound
orb
mov
incl
xchg
les
adc
call
enter
lock
repnz
inc
scas
mov
add
repnz
inc
lods
mov
sbb
js
cmp
add
in
sbb
fnstcw
jg
jecxz
dec
cmp
sub
adc
sbb
idivb
inc
inc
loopne
push
test
frndint
pusha
out
notb
lcall
rcrb
lock
inc
add
fsubr
les
add
call
addr16
stc
adc
push
pop
ret
mov
sbb
sbb
je
sbb
incl
lods
fildl
jl
inc
jo
or
ss
ja
cli
decl
iret
or
inc
jl
mov
jne
jbe
cmp
lcall
and
nop
lods
mov
sahf
push
xor
pop
mov
add
push
icebp
inc
ja
outsb
and
icebp
ret
cs
cmp
out
add
sbb
inc
into
or
sti
jne
cmp
incl
sbb
push
lds
jbe
loopne
pop
repz
push
or
adc
decl
cmpsb
or
fs
push
shr
adc
inc
mov
or
inc
mov
test
cmp
jmp
push
xchg
jo
jge
shll
adc
add
nop
or
ljmp
dec
mov
lods
sub
dec
out
aaa
sub
decl
stos
adc
add
push
lret
fwait
sbb
dec
adc
jbe
call
decl
adc
mov
sbb
mov
rcr
jp
jbe
push
dec
outsb
jno
ret
es
ss
pushl
jne
es
or
loope
lea
enter
or
bswap
add
pop
add
dec
and
incl
orl
mov
clc
data16
mov
mov
ljmp
cwtl
mov
jmp
mov
or
ljmp
cmp
int3
jg
cmpl
vmread
mov
push
pop
incl
and
push
xor
cwtl
mov
or
lock
sbbl
or
pop
rol
negl
inc
mov
jmp
add
dec
or
xorl
mov
icebp
movsb
mov
push
lods
ret
mov
inc
movsl
mov
pop
push
fisttpl
mov
or
add
pop
fsubrl
fwait
inc
pop
inc
test
pop
and
xchg
add
clc
incl
add
or
jg
pushf
mov
icebp
add
mov
inc
mov
pop
add
inc
jnp
ljmp
sbb
mov
cmpsb
ud2
sbb
pushf
push
test
sub
pop
cmp
or
cwtl
and
aaa
popa
lds
xchg
js
xor
cmp
js
pop
xchg
cmpsb
in
adc
enter
adcb
add
test
scas
or
sar
incl
adcl
out
in
les
lcall
mov
les
incl
stc
add
testl
xor
adc
scas
and
aaa
fsubs
add
or
loopne
call
ss
sbb
inc
cmp
cmpsb
lds
push
adcl
cltd
jg
call
mov
add
pop
out
je
shrb
xor
outsl
cli
sbb
mov
xlat
mov
fwait
and
loopne
jg
or
in
out
pusha
push
out
xor
into
push
add
je
les
fdiv
decl
mov
and
xor
push
hlt
cwtl
mov
mov
in
or
lock
fwait
cli
arpl
scas
pushf
pop
dec
xor
sub
ds
pop
jmp
sub
mov
lret
cmp
cmp
push
or
stos
loopne
rolb
mov
mov
test
jne
sub
adc
lock
push
dec
xlat
cmp
decl
ja
test
mov
push
xor
pop
push
call
mov
rclb
orb
cmp
inc
ficoml
sbb
imul
pop
inc
out
aad
xchg
dec
inc
adc
movsl
mov
gs
decl
and
push
movsl
sbbb
in
aas
insl
sub
int
mov
cmp
repz
sbb
push
jp
sub
js
mov
pushl
lret
push
fnstcw
and
aam
cmpb
ljmp
or
dec
and
jne
jno
shlb
inc
lock
mov
outsb
outsl
add
push
dec
and
inc
sbb
ret
pop
jmp
or
inc
xchg
xchg
sbb
pop
out
xor
aaa
and
shlb
pushl
std
rclb
lret
mov
mulb
mov
out
xchg
imul
push
clc
cli
mov
push
xor
jmp
push
ret
lea
loopne
mov
adc
aad
lock
aad
imul
out
add
aam
cli
scas
in
mov
outsb
adc
insb
repz
lcall
popf
lcall
aad
mov
rcrl
movhps
in
idivl
jns
xor
and
sahf
xchg
popa
cmpsl
loope
mov
cmpsb
xchg
loopne
and
inc
or
pusha
push
mov
adc
lock
add
xchg
rcl
lock
popa
addl
or
xlat
push
faddl
addl
inc
pop
sub
pop
out
push
stc
lcall
movl
in
xor
dec
loopne
mov
outsb
insb
idiv
jg
pop
adc
sub
lds
mov
lock
cmp
lock
js
lock
inc
std
and
imul
fsub
daa
shrb
incl
lods
gs
fsubs
mov
mov
and
add
test
out
clc
pushl
pop
jp
push
enter
jg
cmp
leave
mov
jmp
add
add
or
add
adc
dec
cmp
push
xchg
dec
mov
test
push
aaa
mov
jmp
push
shl
push
push
js
add
loope
and
in
mov
outsb
loop
pop
sbb
les
shr
call
lcall
inc
inc
repz
sub
pop
and
rol
adc
mov
adcl
or
xchg
jg
pop
in
add
int
mov
es
fs
mov
orb
incl
mov
push
movb
es
sbb
leave
adc
ss
mov
aad
cwtl
call
decl
enter
inc
cmp
add
stos
sub
inc
jle
jnp
mov
add
popa
cld
aam
xchg
cs
test
decl
mov
cmp
loope
or
mov
and
mov
incb
shll
out
xchg
aam
dec
dec
mov
inc
sub
add
and
outsl
mov
inc
mov
sbb
dec
cs
pusha
mov
jo
add
cld
jp
pop
pop
cmp
cli
aad
or
xchg
mov
aaa
inc
pusha
push
jmp
out
or
lcall
inc
pop
mov
in
rorb
rcl
mov
mov
adc
popa
pop
dec
mov
pop
sahf
push
inc
orb
rcl
jnp
push
or
pushl
jl
ficompl
sbb
push
ror
and
xchg
scas
jl
popl
inc
stc
cli
sbb
jmp
out
ss
fisubrl
cmp
push
dec
mov
push
or
jmp
out
ljmp
fistpl
aam
and
negl
sub
or
mov
test
decl
or
loope
dec
inc
andb
out
push
push
mov
cmp
push
pop
fidivrl
pop
dec
inc
pop
cmc
jmp
sbb
pusha
lock
shll
mov
cltd
inc
push
add
add
xchg
cs
loopne
push
jl
or
push
insl
lret
jmp
mov
dec
or
inc
jo
fmuls
incl
cld
out
push
jo
pop
jle
mov
mov
mov
cwtl
jnp
int3
jbe
or
mov
inc
mov
xor
xor
pop
stc
push
cld
dec
mov
add
vmaxsd
or
sbb
xchg
mov
lcall
adc
lock
in
ret
fndisi(8087
or
add
cs
call
test
loopne
fadd
xor
jl
cmp
push
mov
pop
int3
adc
scas
cli
jg
mov
sbb
dec
or
pop
adc
or
dec
sub
scas
pop
test
incl
and
in
icebp
jno
xchg
mov
or
loop
mov
cwtl
aam
fisttpll
pop
mov
lods
adc
jmp
xchg
mov
lock
push
mov
subl
out
fwait
push
add
rcl
test
or
or
mov
push
pop
sbb
popf
aad
xchg
scas
cli
ja
sub
mov
add
in
jns
inc
dec
mov
adc
aas
xor
test
int3
push
and
pushf
mov
mov
ljmp
and
jbe
sbb
or
mov
test
fidivrl
es
xlat
test
lcall
stos
paddb
pusha
dec
xlat
pop
or
push
adc
jo
out
adc
test
xchg
xor
sub
sbb
jge
push
out
out
enter
cmp
jne
sbb
stc
sbbb
inc
loopne
aas
pushl
daa
subl
push
push
push
js
ror
mov
insb
test
repz
push
push
mov
ficompl
push
sub
adc
lods
xchg
sub
add
inc
cltd
adc
icebp
je
push
lret
push
decl
sub
xlat
cwtl
push
push
adc
cld
cmp
insb
leave
cmpsb
xchg
gs
sub
imul
jg
fistps
inc
jle
mov
sbb
and
adcb
cli
add
push
das
jg
or
add
jmp
add
jecxz
and
add
pop
pusha
xlat
outsl
push
lahf
js
in
pop
jg
and
pushl
cmp
pushf
dec
xchg
pop
je
ljmp
cli
lds
in
ljmp
lahf
or
and
mov
lret
push
push
add
aaa
sub
dec
inc
push
pop
imul
lcall
out
loopne
gs
xor
jae
xchg
outsl
aas
push
adc
push
adc
push
cwtl
xor
jg
jmp
mov
sub
pusha
addr16
sub
push
add
popa
call
out
sarl
movsb
nop
ret
stc
dec
cli
push
mov
nop
decl
sbb
cwtl
ret
cmp
pusha
fstpt
and
pusha
add
jnp
mov
jle
decl
ss
jnp
les
cmp
mov
nop
lahf
mov
dec
mov
faddl
mov
mov
cmpsl
dec
je
jns
or
call
je
or
test
and
test
dec
jmp
add
adc
mov
sbb
jne
je
ret
push
fidivl
scas
xor
mov
fdivr
jb
pop
mov
xlat
pushf
inc
xchg
test
int3
or
jmp
inc
add
mov
test
add
clc
lcall
and
rcrb
inc
pop
mov
mov
out
loopne
fstpl
pushl
adc
stos
cltd
dec
push
nop
mov
daa
inc
popf
dec
mov
pmulhuw
push
std
outsl
mov
add
in
sti
xchg
push
add
sub
push
aaa
mov
nop
rcrb
test
cwtl
xchg
mov
repz
scas
sub
rcrb
ja
jmp
dec
cwtl
es
cs
imul
out
pop
or
mov
push
jbe
or
adc
inc
std
aas
mov
jecxz
in
stc
cmpsl
mov
pusha
fcomip
mov
pushf
dec
mov
mov
cmpl
dec
xlat
std
roll
mov
int
stos
popa
test
lcall
int
ljmp
mov
outsl
adc
inc
popa
sbb
and
jmp
fadds
push
shrl
decl
cwtl
or
addr16
int
add
lret
inc
xor
xor
inc
mov
std
inc
ljmp
insb
inc
ret
adc
mov
adc
lds
or
cmp
jecxz
xor
mov
sub
jmp
pop
fwait
loop
nop
sub
loop
out
xchg
jno
lock
pop
xchg
xor
and
movhps
call
inc
adc
adc
lcall
lea
stos
pop
clc
adc
and
pushl
in
xchg
jbe
dec
add
dec
sub
add
stc
rcrl
fldcw
cs
jg
lods
or
jo
js
jo
ficoms
orb
je
dec
push
int3
mov
cwtl
mov
scas
nop
cmp
es
cmpsl
rorl
sbb
incl
push
dec
xchg
xchg
ds
sbb
mov
les
push
repnz
push
ljmp
xor
movsb
bound
inc
hlt
scas
ljmp
test
sbb
shr
je
int
push
mov
xor
mov
push
mov
xchg
sub
xchg
push
inc
adc
cltd
repnz
cmpsb
cmp
pushl
mov
scas
mov
or
mov
cmp
outsl
enter
cmp
mov
test
adc
or
sbbl
lcall
sub
adcl
push
or
out
xor
and
mov
call
mov
sarl
js
add
sti
adc
dec
movsl
rcll
aaa
or
in
daa
push
cmp
test
ret
xor
and
add
loope
mov
xor
jb
ja
jmp
dec
adc
mov
adc
faddp
xor
call
pop
lock
incl
les
leave
sarl
rcll
stos
das
add
std
dec
add
call
mov
cmp
cwtl
leave
push
test
repnz
add
loopne
popa
cmpsb
jb
push
loop
das
mov
dec
insb
test
iret
loopnew
pop
xchg
cmovp
jg
sbbb
dec
mov
jbe
or
xchg
add
jg
fisttps
mov
xchg
call
inc
push
insl
push
pop
cmpsb
jmp
popf
shrl
add
xor
dec
dec
ss
and
fiaddl
push
and
sbb
pop
jo
and
jo
add
gs
fcomip
xor
add
mov
push
mov
out
jg
sahf
inc
ds
loope
sbbb
or
lea
or
loop
xchg
jecxz
or
rsqrtps
cmpsl
lock
inc
add
sub
add
lret
jo
fists
mov
jns
or
and
xor
cmpsb
sti
mov
jge
add
xor
lods
cld
nop
imul
mov
xchg
mov
fistps
push
push
push
stc
adc
jns
jl
mov
aas
cld
pop
lcall
xor
or
mov
inc
or
pop
ja
xlat
and
aam
call
jae
xchg
mov
rcrl
js
pop
or
pop
add
rorl
add
push
clc
insl
mov
js
xor
mov
out
and
lcall
mov
jecxz
inc
mov
push
out
mov
add
fnsave
push
add
sbb
fwait
jp
test
popf
mov
push
cld
call
xor
leave
pushf
leave
shr
int3
xchg
add
sbb
mov
and
pop
icebp
jmp
adc
inc
mov
cmpsb
jp
scas
int
gs
xor
addr16
incl
cld
cmpsl
js
leave
sbb
push
mov
mov
sti
repnz
cmp
dec
test
cmc
pop
mov
adc
sar
add
arpl
push
sbb
lcall
test
sub
jb
xchg
push
sub
pop
mov
cmpsl
out
enter
or
aas
add
xchg
xor
cld
test
shll
add
sahf
xor
xchg
cmp
in
jp
movl
adc
call
hlt
jle
jae
push
sub
mov
lea
imul
mov
and
or
fistpll
jl
inc
in
push
rorl
push
ds
into
push
mov
fimull
aad
cmp
jo
inc
sub
push
in
pushl
sbb
pop
and
mov
xchg
lds
xchg
cltd
test
add
fninit
outsl
cmp
arpl
shrl
into
lret
sti
test
cltd
cltd
imul
mov
sub
and
mov
xchg
or
or
adc
fistps
std
push
mov
adc
add
mov
incl
cmp
and
xor
fcmovnbe
lahf
shrb
sbb
and
ror
sub
out
sarb
push
add
subb
cmp
mov
jmp
jne
mov
push
pop
pop
roll
mov
pushl
pop
mov
arpl
add
add
pop
xlat
xlat
lret
jbe
movsl
push
inc
or
test
xor
pushl
mov
dec
sahf
xchg
xchg
fimuls
mov
xchg
xor
or
rclb
out
dec
adc
mov
pushl
add
push
add
inc
out
cmc
das
fwait
ljmp
mov
cmovo
push
addb
inc
ljmp
add
cmp
xor
int3
xchg
mov
loope
jno
and
xchg
pusha
hlt
or
inc
adc
addr16
stos
mov
or
xor
std
mov
test
ds
adcb
push
ds
lret
ljmp
dec
arpl
fs
gs
stos
add
stos
or
inc
pop
adc
jns
mov
lret
pop
hlt
call
data16
rol
xchg
add
jl
push
rcl
adcb
add
or
or
push
cmp
adc
sbb
and
ret
outsb
popl
jge
fnstenv
mov
pusha
js
pusha
fs
fdivrp
decl
xlat
cmp
testl
movsb
xchg
adc
add
and
leave
mov
cmc
incl
jp
dec
dec
loopne
pop
nop
test
and
jno
sahf
outsb
lret
dec
pop
cmp
sub
lock
dec
sbb
or
xchg
fstl
fstl
imul
xchg
int
and
mov
pop
sarb
fwait
cmp
ljmp
pusha
xor
mov
cltd
pop
enter
adc
jecxz
jmp
cmp
fwait
jecxz
push
hlt
adc
daa
dec
or
movsl
ret
outsb
xchg
fstl
inc
imul
call
mov
ljmp
push
or
and
dec
xchg
sub
fsubl
cmpsl
xchg
mov
loopne
pushl
sub
and
bound
rolb
out
incb
mov
push
decl
shl
loopne
adcb
mov
shrb
fmuls
pop
ljmp
adc
movsb
rcrb
cs
fs
roll
data16
lcall
movsl
sub
push
push
hlt
lret
cld
loopne
and
cmp
ds
call
movsl
and
push
push
in
xor
mov
pop
add
cmp
adc
add
ljmp
inc
cmp
aaa
or
jg
mov
add
sahf
jbe
push
push
shlb
mov
outsl
inc
cmp
inc
xchg
jb
and
arpl
lea
int
or
add
add
fcomip
decl
cmp
jecxz
inc
subl
mov
dec
leave
xor
inc
addr16
divl
mov
call
sbb
xchg
or
fstps
add
orl
jb
lret
stos
decl
jno
sbb
inc
loopne
enter
pop
call
mov
push
sbb
xor
fsubl
xchg
lock
push
adc
test
ja
clc
fdivs
notl
mov
push
and
add
pop
rcrl
fldenv
mov
call
add
ljmp
incl
mov
adc
inc
cmp
mov
mov
pmullw
cmp
lahf
fcomps
aad
adc
fsubs
loop
add
test
pop
icebp
decl
push
add
in
out
repnz
jmp
hlt
add
icebp
call
cmpsl
xchg
jae
sub
js
and
jp
lret
fwait
add
decl
pop
lret
lods
adc
mov
stc
sbb
and
or
jg
pop
xchg
sbb
mov
aaa
or
or
addr16
and
decl
call
mov
clc
es
ror
aam
xchg
add
cmpsl
fadds
lock
xchg
repnz
paddw
add
stos
andb
xor
roll
sti
xor
cmp
or
movb
das
popa
inc
ret
shll
in
lods
bswap
jnp
sbb
or
add
mov
cmpb
in
or
or
fisubrs
std
testb
lahf
cmc
in
hlt
mov
pop
mov
imul
pushf
arpl
les
xor
jecxz
loopne
jg
and
les
ss
xor
mov
jbe
push
and
enter
add
arpl
lea
clc
push
std
pushl
rolb
clc
insb
shll
outsb
stos
push
pop
or
xlat
pushl
xchg
hlt
mov
pop
jno,pt
shl
popa
mov
jg
jle
pop
data16
push
shrl
adc
sub
push
jecxz
or
jae
sbb
popa
xor
aam
sbb
addl
mov
xor
inc
xchg
cmp
loop
fcompl
les
ljmp
mov
pushf
adc
test
rcl
inc
fwait
loopne
xor
movsb
arpl
dec
loope
js
jbe
je
jmp
adc
xchg
lock
mov
sbb
pop
les
es
in
push
cmp
sbb
push
cs
aam
add
jae
or
cmpsb
pop
cmp
mov
cmp
sahf
adcl
mov
jbe
mov
pop
xchg
and
fcomip
cmp
ret
scas
adc
cs
bnd
add
jmp
pop
repnz
jae
ljmp
inc
add
mov
ljmp
sbb
pop
jmp
and
and
ljmp
mov
dec
div
nop
shrb
pop
mov
int
add
popa
mov
mov
stos
cmp
and
fcompl
mov
sti
mov
pop
fcomps
lea
pop
xor
rcr
sub
clc
decl
mov
add
jecxz
mov
lcall
xor
jp
incl
adc
test
sbb
lcall
or
std
call
or
inc
adc
mov
mov
mov
add
shl
fwait
sub
incl
and
push
test
inc
shll
inc
hlt
jg
push
loopne
insl
rcrl
and
jne
sub
push
nop
insl
decl
pusha
cli
ljmp
jmp
add
push
sbb
decl
pop
mov
sbb
xorb
push
fiaddl
xor
cmp
lock
scas
lock
daa
mov
adcb
jp
adc
enter
sbb
and
xor
lock
lcall
mov
cmp
cld
and
push
jl
cmp
clc
inc
cs
pushf
xchg
icebp
jg
cmp
sti
int3
notl
xor
test
jmp
out
sahf
aad
test
add
scas
mov
or
and
add
fnstcw
lcall
sbb
dec
lds
add
sub
in
or
lcall
and
push
jmp
sbb
movsb
ret
stc
outsl
xor
mov
enter
incl
js
cwtl
inc
push
outsb
into
xor
jns
xor
push
movsb
lret
xlat
xor
push
push
dec
lret
sbb
cltd
dec
sti
pushf
add
lret
enter
popa
arpl
dec
mov
mov
andb
adc
in
repnz
fldt
jecxz
arpl
leave
mov
pop
lds
aam
mov
lret
out
adc
inc
jg
lcall
push
or
outsb
int
jb
or
sbb
push
adc
ljmp
call
mov
xor
pop
les
roll
fwait
loopne
nop
add
shr
mov
cli
xchg
push
sub
sar
leave
or
mov
push
mulb
popf
enter
data16
and
ljmp
push
gs
pop
mov
xor
cmp
cmp
add
or
pusha
push
cld
incl
bound
lock
fdivl
inc
iret
imul
mov
sbb
cmc
sar
add
push
adc
adc
and
inc
cmpsl
pop
and
cmc
mull
add
pop
stos
adc
ja
sarl
xor
movsb
pop
dec
add
outsl
call
push
aam
outsb
pop
movsb
rorb
mov
loope
lahf
push
and
pushf
add
pusha
scas
cli
fistps
enter
jg
leave
sub
insb
arpl
dec
js
or
outsb
push
add
ljmp
fldl
push
sarl
es
pop
adc
push
pushl
call
orb
test
sbb
jb
in
out
lahf
add
or
ret
ja
decl
add
lods
xor
orb
std
ljmp
jno
daa
or
and
cmp
inc
mov
lea
xor
lods
xchg
or
call
mov
xor
andl
mov
mov
inc
xchg
movsl
or
cmc
incl
cwtl
pop
push
xor
mov
adc
adc
sar
incl
lret
push
ret
xchg
pop
sahf
add
test
repnz
bswap
cmp
ljmp
push
popa
leave
add
ja
jbe
add
and
mulb
lahf
stc
mov
sti
stc
call
jae
xchg
push
arpl
or
fsubrs
leave
icebp
iret
test
fnstcw
jg
jmp
outsb
inc
daa
xor
stos
dec
gs
ljmp
ret
addr16
lcall
sbb
cmp
mov
arpl
aas
pop
aad
mov
jae
movsl
xchg
push
call
add
icebp
cli
inc
xchg
loopne
fdivrl
lcall
pop
add
jp
dec
lret
shlb
test
mov
cmp
cs
jge
subb
sub
jmp
jo
fidivrs
dec
cltd
mov
adc
pushf
push
call
sbb
pushl
sub
test
mov
rorb
and
icebp
ljmp
scas
stc
add
mov
test
mov
mov
mov
incl
jbe
pop
sbb
shr
add
out
or
add
xchg
jo
popl
and
jle
incl
add
xchg
aas
add
movsbl
icebp
mov
js
sbb
sbb
hlt
cmc
int
sarl
cmp
xchg
xlat
scas
adc
aam
push
nop
mov
imul
jg
adc
jl
loopne
les
aas
sar
incl
scas
inc
xor
sbb
mov
jbe
out
mov
push
fidivrl
shl
nop
mov
mov
adc
add
out
sahf
mov
movsb
jmp
sbb
dec
inc
xchg
lret
xchg
pop
fbstp
aaa
sub
or
ljmp
mov
jmp
fisubrl
clc
jmp
jns
push
loopne
test
sbb
rorl
adc
mov
push
daa
xor
mov
flds
or
and
adc
cmp
mov
int3
pop
mov
in
push
jecxz
call
xlat
jg
nop
fadd
mov
add
imul
or
adcl
idiv
mov
call
inc
mov
sti
adc
jecxz
mov
xor
and
cmp
rorb
jmp
call
pushf
sbb
xor
jb
pop
hlt
stos
fildll
xor
repnz
popf
add
mov
xor
xchg
push
lcall
incl
jl
add
stc
xor
push
loope
lret
roll
adc
cmp
xor
loope
and
roll
cwtl
or
cs
outsb
add
sbb
xchg
and
add
cli
orb
push
xchg
pop
pop
adc
jae
dec
jg
ss
into
filds
nop
sarl
ds
inc
xchg
fists
and
mov
push
movsb
adc
dec
add
xchg
xor
cmpsb
incl
shll
jl
cmp
push
repz
and
inc
cmpsb
xchg
pop
pop
push
sar
decl
cmp
and
ljmp
mov
xchg
mov
pop
sbb
icebp
incl
mov
cmp
fsts
fdiv
push
cs
test
dec
ljmp
fcomps
add
jmp
lock
push
pushf
cmpsl
cmp
adc
dec
mov
lcall
inc
xor
mov
add
xor
bound
lcall
nop
imul
xchg
and
insl
add
mov
push
jae
jmp
sub
incl
push
sbb
lods
insb
in
mov
cmpsb
out
nop
and
sub
sbb
add
adc
decl
lock
lods
push
test
lods
cltd
test
and
test
insl
out
fisubrl
or
in
cmp
mov
dec
ljmp
cli
ljmp
js
xor
testl
movsb
test
dec
ret
imul
cld
scas
decl
pop
add
ret
xchg
lahf
add
or
mov
rorl
jmp
jmp
push
mov
inc
aas
push
inc
andl
sub
lcall
insb
rcrl
adc
jb
pusha
xchg
std
jecxz
je
push
add
rolb
mov
add
loop
pushl
dec
std
movb
into
dec
aad
outsl
jno
push
incl
mov
dec
or
sbb
jg
or
cmp
fisttps
lret
mov
xor
inc
or
cmp
xchg
mov
jmp
or
or
faddp
sub
sub
dec
es
sbb
pop
cmc
in
push
rol
mov
loopne
add
and
test
add
aas
notb
cmp
std
test
sbb
add
filds
cld
bound
adc
add
pop
shlb
cmp
call
add
pop
js
daa
xchg
xchg
cmpsb
and
sarb
in
and
filds
pop
outsl
stos
ret
xchg
mov
adc
pop
or
and
outsb
jmp
fimuls
loopne
cmpsb
sbbb
fwait
push
xorb
nop
into
lock
jle
loop
lcall
inc
or
lea
push
adc
jo
adc
push
mov
push
ljmp
jne
cmpb
aas
cmpl
pop
int
aad
dec
bound
stos
fs
je
bound
inc
mov
xchg
mov
add
jae
jmp
xor
pop
int3
cli
pop
nop
leave
sahf
lock
call
jnp
cmp
inc
push
jle
pop
stos
fcoml
adcl
dec
lret
test
or
ret
mov
nop
mov
jae
mov
fxch
mov
jg
loopne
addl
lcall
jmp
sbb
inc
jg
incl
mov
insb
pop
cmpsl
sbb
mov
fdivs
or
or
cmp
xchg
inc
cs
cmp
mov
push
clc
mov
cld
insl
pop
jge
mov
add
dec
xchg
sub
decl
dec
loope
loop
or
sbb
jno
xchg
adcl
outsl
decl
push
mov
aad
cmpsl
call
mov
ret
js
mov
or
pushf
sub
es
xorb
fs
gs
pop
mov
aas
push
cs
cmc
sbb
dec
decl
imul
or
push
cmp
sarl
push
dec
fadds
cmp
arpl
mov
out
clc
jle
xorl
imul
jne
xor
jge
out
xor
jnp
movl
outsl
sbb
lret
or
incl
pop
cmc
dec
test
cmp
xchg
dec
xlat
add
mov
scas
push
inc
sbb
or
inc
test
cs
icebp
popf
push
sbb
aas
sub
xchg
ds
dec
filds
idivl
clc
scas
pushl
add
ss
mov
ljmp
add
sar
ljmp
ret
scas
mov
adc
mov
icebp
mov
push
cld
incl
push
xor
pop
icebp
or
jns
inc
push
dec
mov
xchg
mov
pop
daa
xor
adc
fisubrs
fiadds
iret
jne
jp
xchg
add
lret
cwtl
xchg
jle
incl
cld
sbb
adc
push
add
stc
xchg
xor
or
pop
ret
aas
add
cmp
movsb
test
sub
mov
mov
pop
xlat
cmp
mov
into
adcb
adc
repnz
loopne
jge
andl
jae
xchg
mov
incl
and
test
je
inc
roll
pop
xchg
add
sbb
inc
xchg
addb
cltd
or
pushl
add
mov
shrb
repz
adc
xchg
lods
in
out
xchg
icebp
incl
mov
lock
push
pusha
mov
push
movsb
bound
adc
xor
test
and
iret
in
inc
fmull
fisttps
bound
js
or
push
cmp
jp
jmp
dec
flds
or
add
in
nop
dec
dec
xor
pop
add
subl
mov
push
ljmp
hlt
loopne
es
mov
mov
lcall
adc
ret
xor
lcall
xchg
mov
in
ret
enter
int
mov
push
jo
pusha
iret
shlb
push
xor
add
lcall
add
bound
xchg
test
call
inc
mov
mov
xlat
bswap
mov
aaa
xorb
mov
jmp
orb
inc
jg
ret
add
sar
shl
and
lcall
jns
shll
and
je
ret
in
add
xor
or
jmp
xchg
shrl
ret
xor
or
loop
inc
dec
je
lds
mov
mov
dec
mov
out
fisubrl
incl
mov
inc
mov
out
xchg
test
movsl
jae
decl
sbb
stos
lcall
mov
pusha
pusha
jno
add
adc
jmp
ret
add
subl
and
loopne
ljmp
cmp
loop
pusha
test
cmp
mov
cld
jmp
or
mov
div
aad
stos
incl
xchg
inc
pcmpeqd
rcll
nop
xlat
mov
push
loopne
mov
and
insl
cmpl
sbb
icebp
dec
mov
outsb
add
pop
cli
xor
push
test
mov
loopne
notl
mov
les
out
bound
inc
cmpsl
aaa
mov
pusha
push
int3
push
aas
fs
imul
gs
xor
cs
insb
add
mov
inc
push
imul
xchg
rcll
and
ss
jae
sar
scas
decl
or
in
inc
dec
cmpsb
push
test
sub
adc
mov
out
inc
xorl
sbb
add
jg
mov
repnz
mov
lods
pop
fstl
scas
pop
sbb
xchg
dec
lcall
push
adc
xchg
jo
inc
add
aas
into
push
scas
int
sbb
pusha
fcoms
out
clc
lcall
jecxz
xchg
in
push
jmp
in
xchg
or
sub
pop
idiv
jmp
inc
lahf
ja
shll
es
or
dec
xchg
dec
test
nop
or
or
pop
pushl
sbb
outsb
sbb
ljmp
sbb
fcoml
js
or
jnp
add
or
mov
cmp
dec
maxps
dec
dec
mov
ret
adc
fsubrl
js
sbb
add
or
incl
data16
or
call
or
incl
adc
add
ljmp
cmp
popl
xor
mov
inc
push
cwtl
ljmp
ret
popa
cld
xchg
add
pusha
outsb
loopne
iret
adc
dec
in
call
mov
rolb
mov
push
sub
test
push
loope
jns
out
lcall
jp
fwait
add
lock
mov
adc
in
jbe
aaa
jmp
movb
inc
xchg
scas
xchg
rorb
mov
sub
adc
xor
mov
fwait
test
and
add
stc
lcall
sub
pop
jns
push
and
push
jl
and
or
sbb
push
scas
out
sub
rcrb
push
fwait
mov
cmp
je
cld
ljmp
or
and
xor
sti
lret
ja
mov
push
sbb
mov
pop
hlt
dec
jo
scas
rcrb
sub
xor
sbb
inc
repz
mov
inc
xor
call
mov
pushf
fs
push
aam
pop
arpl
pop
out
push
std
stc
add
mov
in
fs
and
ljmp
decb
addb
mov
movsl
fs
in
cmpsb
push
sub
cmp
mov
sbbl
and
dec
fisubrl
mov
push
push
lock
jp
pop
push
and
xchg
cmpsb
add
ds
cmp
mov
decl
adc
ficoms
xchg
pop
inc
push
fidivrs
mov
into
ss
add
mov
fcompl
and
enter
aam
dec
or
pop
scas
popa
inc
adc
pop
pop
mov
aam
mov
gs
jmp
add
orb
mov
push
pop
mov
mov
push
xor
popa
xor
lods
loop
add
call
cld
cli
xlat
or
xchg
inc
xor
stos
cltd
addr16
cltd
and
push
cmp
movsb
inc
dec
adc
pushl
cmp
fucomip
es
movsb
and
imul
adc
call
cmc
or
add
mov
inc
and
jp
addr16
push
rolb
sbb
leave
push
ror
mov
sub
pusha
pop
int3
dec
aam
mov
dec
lea
mov
pop
loopne
cmpsl
xchg
sub
mov
pop
aad
add
popa
scas
push
ljmp
insb
inc
clc
je
sar
sahf
mov
push
and
jns
jmp
sbb
lret
fcompl
mov
and
ja
xor
lret
dec
or
pushl
out
xor
jae
out
add
push
int3
repnz
lock
lcall
push
xchg
sub
fnstsw
mov
inc
xchg
push
dec
repnz
mov
cmp
xor
mov
fcmovnu
pusha
stos
ret
inc
inc
dec
push
shr
outsl
arpl
les
ss
sub
xor
xor
inc
stos
rorb
jbe
jne
push
adcb
stos
and
jle
enter
arpl
test
mov
add
push
imul
js
call
arpl
dec
push
lcall
pushf
mov
lods
in
or
jbe
sbb
sub
insl
and
cmpsl
add
xchg
ljmp
mov
add
rorb
add
enter
mov
enter
cmp
outsl
test
fadds
mov
mov
mov
dec
inc
aam
xor
pop
mov
cs
add
decl
pop
and
pop
xor
pusha
subb
ja
or
lcall
fists
add
lcall
addr16
es
sub
jmp
xchg
push
dec
loope
lock
xchg
adc
inc
inc
pop
call
int3
adc
adc
nop
xchg
inc
mov
mov
incl
cmp
xchg
mov
xchg
adc
cmp
mov
jg
lret
outsl
nop
fiaddl
sarl
inc
clc
cmc
mov
inc
sar
jg
int3
pminsw
mov
add
or
scas
int
outsl
clc
jmp
aad
mov
stos
inc
mov
push
pushf
pushw
mov
movsb
ja
call
int3
inc
inc
and
lret
or
inc
fmull
stos
fmull
int
addr16
ljmp
adc
push
push
push
aas
call
sub
test
call
cld
insl
in
test
jge
ret
xorl
stos
loope
daa
out
dec
add
mov
enter
outsl
jno
sbb
cmp
sbb
jg
incl
scas
bound
dec
movsb
inc
stos
std
push
idiv
adc
repz
lcall
sbb
sub
setle
add
lods
sbb
cld
mov
adc
jmp
and
in
inc
cmp
in
sub
add
xor
adc
fstpt
sbb
push
lock
sub
inc
mov
cs
or
pushf
mov
lds
jecxz
pushf
cmp
js
fists
dec
or
lret
adc
push
in
movsb
daa
outsb
test
test
jo
outsl
adc
stos
ja
push
or
adc
push
xchg
sar
int3
adc
mov
mov
mov
test
aaa
mov
xor
and
jg
cmc
cmpsb
push
sub
cmp
cs
mov
dec
loop
add
imul
ljmp
incb
or
loope
ret
sbb
mov
ret
cs
incl
shl
out
jge
add
sbb
cmp
cwtl
mov
les
xor
adc
lock
lcall
cmpsb
rcl
rorl
lret
adc
xor
add
jns
out
inc
icebp
mov
icebp
cmp
add
and
insb
in
jp
adc
mov
fists
idivl
insb
sahf
clc
loopne
insb
add
aad
or
into
leave
pop
xor
and
loop
les
mov
sbb
mov
sbb
push
add
mov
scas
add
or
cmp
jo
push
ss
push
hlt
pushf
mov
jns
cli
call
lds
cltd
dec
sub
inc
cwtl
rorb
pop
and
mov
dec
adc
adc
inc
repnz
mov
jae
out
loopne
fwait
push
mov
adcl
jl
incl
jnp
cwtl
jno
jge
enter
loope
xor
cmc
int
jecxz
cmpsb
scas
movsl
mov
pop
popa
push
jae
add
adc
add
adc
movsb
dec
leave
loopne
or
xchg
push
dec
decl
xchg
xor
mov
mov
add
leave
mov
cmp
jge
pop
mov
adc
sbb
jp
sub
cs
out
xchg
push
cmp
push
mov
add
push
clc
or
scas
addb
fmull
inc
inc
and
inc
sarl
decl
das
clc
mov
mov
push
neg
pop
shrb
addr16
xor
into
mov
pushf
or
movsl
pop
dec
outsb
mov
das
sub
pop
pop
sub
pusha
xor
inc
push
push
inc
pushf
and
scas
sub
scas
pop
pop
push
pop
shlb
ja
mov
adc
mov
pushl
xlat
or
jecxz
mov
xchg
inc
xor
cmp
inc
imul
and
pop
ds
and
sbb
pop
nop
lcall
mov
icebp
ljmp
and
faddl
cmpsb
xor
addb
or
push
adc
cwtl
jg
cmc
pop
xchg
sbb
outsl
dec
icebp
jno
add
and
add
in
outsb
incl
dec
mov
int3
popf
arpl
fldcw
ror
xchg
adc
loop
add
cmpsl
add
inc
mov
pusha
mov
pushl
xchg
push
es
jno
aas
jb
add
xchg
pop
repnz
cmpsl
pop
jb
lock
jmp
cmp
add
push
add
rorb
mov
cmpsb
loop
lods
stos
inc
xchg
test
pop
ljmp
sub
add
jl
adc
sub
add
decl
sti
mov
and
in
or
inc
dec
cmp
adc
icebp
inc
push
inc
jb
mull
fadds
inc
sub
mov
fbstp
andb
pop
mull
std
jecxz
adc
imul
add
repz
fisttpl
pop
dec
mov
xchg
push
xchg
push
adc
das
jl
pop
decl
add
xorb
jmp
pusha
jns
les
and
mov
push
adc
push
enter
bound
push
dec
xchg
mov
ss
mov
es
mov
cld
adc
inc
lcall
and
lahf
pop
filds
fs
adc
cld
jg
mov
subl
jnp
sahf
add
ret
sbb
decl
cli
inc
add
xor
add
mov
add
test
jo
xorb
add
and
xchg
jns
mov
mov
ret
inc
icebp
decl
or
or
dec
fsubs
jo
pop
push
and
sarl
sbb
xor
adc
mov
xchg
jbe
push
dec
and
or
pop
iret
adcl
ljmp
dec
xchg
int
and
loope
aaa
vmread
jno
sbb
inc
add
idiv
push
dec
inc
cmp
scas
push
lret
or
sub
mov
mov
mulb
xchg
push
pop
push
jmp
add
inc
cmp
and
repnz
xchg
push
mov
pusha
jno
sbb
test
mov
mov
insb
les
cmc
inc
or
mov
in
ljmp
mov
lods
aas
hlt
dec
or
sbb
push
xchg
inc
jle
add
cld
cmp
cmp
mov
inc
push
and
in
mov
lret
jg
test
fiadds
or
iret
into
jmp
ret
jae
lea
or
push
cltd
ret
insl
inc
jge
lea
icebp
scas
xchg
mov
test
lcall
pop
aam
leave
and
lsl
mov
imul
ljmp
daa
cmpsl
xor
sbb
mov
lret
add
inc
cwtl
pop
sbb
call
fs
mov
inc
testl
fwait
inc
sub
ret
lcall
cmpsb
scas
and
arpl
inc
scas
dec
out
xchg
push
stos
scas
cltd
push
xchg
outsb
mov
jmp
incl
cmp
mov
lock
cmp
xchg
inc
push
sahf
roll
dec
pusha
mov
clc
mov
push
mov
loopne
clc
cmp
or
add
test
pop
mov
loopne
push
xlat
mov
jmp
sbb
bound
fnstsw
sahf
mov
and
aad
adc
test
jmp
iret
into
xchg
mov
lfs
inc
cld
pop
xchg
push
cs
fstps
jne
lcall
jg
inc
adc
inc
xchg
rcll
push
jb
add
nop
adc
or
push
xor
pop
repz
jge
insl
push
inc
and
mov
ljmp
in
outsl
xlat
andl
mov
das
jo
std
fidivl
div
xchg
and
cmp
push
ret
lret
jnp
pusha
rcl
dec
aas
decl
dec
outsb
es
push
or
push
call
cmp
add
push
or
bndldx
mov
add
inc
dec
xchg
imul
filds
jno
inc
sbb
mov
cmpsb
add
sbb
repnz
cmc
iret
add
out
push
dec
add
aaa
pop
loop
xor
fldl
or
dec
sub
xorl
or
pop
adc
fcomip
incl
push
imul
fadds
enter
cmc
xchg
mov
push
in
cmp
inc
mov
push
in
lcall
stos
add
mov
icebp
lret
or
pusha
lret
xor
mov
mov
push
sar
pushl
fistl
ja
movb
add
loopne
push
rcll
ret
mov
dec
loop
push
push
ljmp
cmpsl
cmp
dec
push
fwait
sarb
push
addr16
or
ljmp
test
jg
sbb
movsl
or
call
in
mov
andb
xor
adc
push
notl
sbb
fistl
jp
push
cld
ljmp
and
and
test
dec
iret
add
out
mov
push
inc
inc
stos
test
outsb
pop
add
push
fcom
das
or
cmpsl
mov
enter
fnstsw
repz
xchg
add
xor
sub
push
enter
xchg
setp
test
lahf
jg
inc
or
rcrb
pushf
ljmp
xor
insl
int3
pushl
shrl
insb
push
sub
repnz
pop
clc
sbb
inc
gs
out
and
inc
ret
add
xor
inc
inc
gs
js
decl
or
inc
mov
dec
mov
adc
andl
dec
push
mov
je
xchg
jp
xor
pop
imul
lcall
ja
dec
inc
cmc
sub
pusha
enter
jmp
jnp
dec
adc
cld
jl
ja
movsl
or
dec
push
cmp
mov
jmp
xchg
adc
lahf
in
mov
ja
int3
pop
mov
jnp
mov
xor
xchg
xor
call
push
inc
fiadds
pushl
test
arpl
xchg
xchg
jg
adc
xor
into
popa
lods
push
aas
add
xor
cmpl
popa
loopne
ljmp
cmp
lret
adc
decl
fisubs
ror
in
ds
inc
inc
ret
and
push
test
push
ljmp
xor
xor
loope
in
insb
adc
xchg
movb
mov
or
stos
or
fs
idivl
or
test
popa
xor
sub
mov
push
pop
xor
pop
push
gs
lcall
or
cwtl
js
xchg
mov
mov
push
lahf
adc
icebp
lock
xor
xchg
add
test
or
loopne
mov
inc
xor
adc
xor
add
add
outsb
cmp
add
call
inc
sbb
jle
and
pushl
cmp
ret
inc
dec
sarb
lea
or
jmp
loopne
mov
sub
mov
add
push
xor
xchg
adc
pusha
mov
sub
add
call
add
arpl
dec
push
cmp
loop
js
jbe
mov
test
or
cld
pushl
hlt
pushf
jno
insb
xor
movsl
loopne
cwtl
bound
cmp
mov
ret
mov
pop
cld
rclb
fcomps
mov
stc
pusha
add
add
or
push
pop
cwtl
or
dec
xchg
xchg
pop
pop
pushf
fnsave
jbe
pusha
aam
call
jb
xchg
sbb
js
fcmovnb
or
fcmovnbe
mov
fdivl
pop
push
filds
mov
cmpsb
inc
mov
adc
xchg
fistl
cli
jbe
inc
std
test
rcrl
add
ljmp
clc
es
movsb
cmp
sub
pop
pop
mov
lods
and
adc
push
leave
repz
rcrl
jg
fcomip
int3
add
scas
pop
imul
xchg
jnp
iret
push
mov
sar
fcomip
push
mov
xor
or
mov
mov
test
jno
add
xor
loopne
das
sar
stos
bound
daa
mov
add
sbb
ds
das
lock
cmp
and
xor
lcall
jo
xor
insl
sahf
divb
dec
ret
adc
mov
or
mov
adc
andl
sub
sti
lock
ljmp
cwtl
jnp
mov
xchg
icebp
popf
es
movsl
ljmp
loopne
jg
lcall
pop
pop
and
push
xchg
jo
faddl
xchg
inc
shlb
sub
loopne
fsubl
outsb
sti
decl
repz
aaa
or
scas
inc
or
pusha
push
sub
inc
cmpsb
cmpsb
ljmp
cmp
and
pop
or
decl
das
int
arpl
inc
ljmp
add
daa
aas
js
jne
lret
lahf
jg
lret
aam
mov
add
jecxz
dec
adcl
jmp
mov
out
and
dec
fimull
scas
ljmp
inc
loope
ljmp
xor
or
jnp
adc
push
or
addr16
pop
cmp
jg
adc
and
stc
inc
das
pushf
stos
inc
add
fisubl
hlt
incl
dec
addr16
je
mov
mov
ljmp
and
pop
mov
test
fnstsw
pushl
pushf
mov
loope
mov
xchg
cmc
dec
mov
sub
cmpb
sbb
out
out
jae
lahf
popl
xor
ljmp
in
push
jle
ds
mov
jmp
and
sbb
sub
dec
js
cmpsl
and
xor
push
xchg
add
shr
inc
mov
mov
insb
mov
adc
lcall
lods
rcrb
fisubrs
out
cli
push
pop
test
mov
insl
jecxz
incl
mov
repnz
jle
pop
pushf
in
push
add
mov
mov
pop
fs
adc
adc
or
mov
pop
jl
filds
inc
push
add
push
jbe
das
movsb
inc
and
push
cld
pushl
scas
ja
push
call
addl
xor
lods
dec
jecxz
xchg
or
call
and
add
and
pop
lcall
mov
push
std
out
out
popf
add
inc
add
dec
mov
in
xor
mov
nop
clc
push
mov
mov
out
or
lcall
xor
xor
adc
mov
xchg
cltd
jmp
add
subl
adc
loope
mov
in
pop
mov
pop
or
stos
inc
add
movsl
insl
cld
int3
popl
icebp
aaa
xchg
cmp
addr16
sbb
fldpi
and
pop
mov
leave
clc
mov
lock
push
aaa
negb
jb
push
popa
js
sbb
cmpb
hlt
and
out
xchg
js
pop
hlt
mov
decl
adc
add
jb
push
mov
pushf
inc
adc
xorl
inc
mov
or
add
or
movsb
add
ljmp
das
mov
loope
and
in
stos
mov
dec
outsl
add
lcall
lcall
cmp
sub
mov
pop
jl
test
dec
pop
inc
cwtl
mov
scas
scas
jmp
pop
xchg
push
jge
inc
xchg
cmc
insl
clc
or
sbb
pushl
int3
add
jge
xor
cli
cmp
jmp
pop
fstpl
xor
popa
test
sti
add
insl
nop
cmp
jo
ljmp
test
jg
in
test
decl
insb
inc
or
cmp
or
or
call
adc
sbb
pop
int3
or
loope
mov
adc
xchg
mov
inc
xor
out
cmc
incl
add
jnp
add
or
mov
call
jp
mov
push
sub
jb
fisubs
imul
jmp
and
jnp
pushf
or
jmp
add
mov
add
fildll
incl
outsl
sub
lahf
out
incl
pop
dec
cmp
std
ljmp
je
cmp
mov
decl
or
movsb
shrb
mov
cmpsb
es
icebp
mov
imul
jecxz
xlat
add
jns
inc
xchg
scas
cmpsb
lock
sub
insl
mov
add
out
shrl
call
dec
inc
xor
call
pusha
arpl
jns
pop
xor
lcall
fisubrl
sar
filds
movsb
loope
test
arpl
into
mov
and
ds
add
outsb
ss
std
jno
test
and
push
pop
adc
mov
incl
or
add
hlt
je
cmpsb
pop
sub
push
lea
aas
decl
xchg
dec
mov
jnp
lock
daa
sbb
fstpt
add
xor
call
mov
adc
jbe
mov
mov
inc
rol
add
adc
outsl
pushl
xchg
imul
xchg
in
aas
clc
mov
mov
adc
cmp
xor
xchg
call
in
dec
insb
fcmovbe
adc
divl
mov
or
dec
sub
inc
test
mov
decl
cmp
pop
cmp
daa
or
xchg
jmp
xchg
leave
push
icebp
dec
fninit
mov
ja
cli
test
dec
pop
mov
pop
das
cmp
mov
jecxz
stos
jecxz
jns
mov
dec
jmp
shrl
xor
addr16
movsb
test
dec
clc
inc
pop
cmpsl
js
imul
stos
jbe
outsl
clc
cmp
nop
xchg
mov
cli
sub
jns
test
loop
jae
pushl
in
mov
or
ss
jmp
or
push
cmp
and
sti
xorb
rorl
pop
and
hlt
pusha
pop
inc
js
sbb
ljmp
push
xchg
fsubr
movb
add
inc
jb
mov
push
push
cmp
jp
dec
jg
pushl
jne
dec
lahf
cmp
add
sbb
stc
xchg
loope
pusha
jb
sub
pushl
mov
jmp
and
cli
cli
push
es
push
inc
dec
paddb
cmc
and
and
incl
mov
icebp
dec
add
test
test
or
sbb
subb
incl
mov
inc
cltd
add
loope
jle
mov
push
ret
aas
call
xchg
aam
test
ljmp
movsb
inc
mov
jo
orb
jmp
push
fs
mov
pop
push
mov
adc
cmp
adc
push
call
add
or
add
dec
push
or
decl
or
add
xor
int3
jns
mov
sbb
nop
rcrb
call
dec
ss
mov
loop
lock
decl
add
stos
xchg
repnz
aas
pop
cli
testb
sti
cmc
mov
ret
add
xor
pop
pop
imul
jle
loopne
adc
fidivrs
or
or
inc
loop
hlt
or
pop
adc
inc
xchg
inc
mov
lods
bound
movb
add
or
sub
je
add
out
dec
adc
das
xchg
inc
push
clc
call
adc
stc
ret
pusha
scas
pop
and
jp
pop
fisubrs
sbb
xorl
jmp
jno
xchg
sub
jecxz
sub
loopne
pop
test
clc
add
jb
stc
mov
jae
cwtl
lock
xor
lock
or
xchg
xchg
aaa
add
adcb
lds
inc
arpl
mov
jmp
xor
and
xorb
push
mov
pusha
call
adc
mov
gs
jo,pt
mov
iret
pop
incl
out
adc
pushl
sti
data16
scas
sub
mov
mov
rcl
insl
nop
imul
dec
sbb
mov
dec
ljmp
decl
push
inc
es
add
mov
outsb
mov
pop
add
fdivrl
xchg
lcall
cmpsl
sti
or
adc
pop
pusha
inc
aam
jle
mov
pop
pop
out
pop
je
add
lret
lahf
dec
pop
xor
cmp
outsl
push
and
add
xor
in
add
incl
mov
add
stos
call
adc
adc
decl
fmuls
jl
enter
pop
sarb
jbe
adc
ret
inc
xor
iret
adc
icebp
sub
adc
lret
adc
ss
imul
pusha
je
sub
sbb
cmc
xchg
push
add
push
andb
cmc
cmp
ljmp
mov
das
test
add
test
sbb
add
int
pusha
jb
add
call
test
clc
mov
dec
mov
add
sub
mov
add
jbe
mov
pusha
insb
mov
loopne
addr16
ja
pop
cmp
into
data16
sub
jmp
mov
subb
xor
or
pop
sub
arpl
mov
sbb
call
xchg
shr
lods
fwait
dec
inc
test
ljmp
jbe
les
outsb
adc
jo
push
or
pop
xchg
es
call
mov
arpl
jge
sub
cmpsb
outsl
insl
andb
cmp
icebp
pop
fcoml
or
cmp
adc
mov
jno
test
xor
test
enter
sub
das
clc
decl
lods
jo
inc
inc
pop
incb
das
or
jl
add
incl
add
push
insb
add
xchg
stc
sub
in
add
or
jg
decl
call
push
cmpsb
adcb
stos
mov
inc
enter
incl
pop
movsb
cmp
cltd
or
insb
xor
xor
leave
or
lret
push
dec
test
and
jmp
shr
test
rcr
sbb
or
ret
idiv
pop
dec
cld
das
mov
repnz
jg
cmp
mov
inc
mov
cs
ret
or
inc
ret
shll
push
inc
jae,pt
negl
cmp
popa
add
and
daa
inc
dec
js
out
icebp
call
xlat
loopne
call
mov
lock
add
call
sub
jge
inc
rorl
jp
loop
jg
lcall
add
inc
sub
mov
movsb
inc
sbbl
jle
ljmp
aas
fcoms
fidivrl
mov
mov
mov
sti
shrb
lea
sbb
push
cwtl
je
movsl
xchg
cld
je
fadd
outsb
xor
or
add
fsubrs
dec
cmc
adc
je
add
scas
decl
lret
jnp
push
xlat
and
subb
inc
loop
mov
sar
ljmp
adc
daa
xor
and
dec
or
pop
icebp
xor
cmp
or
out
adc
xchg
or
or
jl
cmp
xchg
cmp
adc
pushl
jb
test
test
lods
xchg
into
jns
loopne
push
cli
xchg
or
push
mov
ljmp
arpl
cmp
hlt
add
dec
test
lds
and
sbb
ljmp
pop
scas
and
lcall
dec
cs
shl
hlt
ss
stos
adcb
loopne
jp
enterw
adcb
cmc
sbbb
and
sbb
xor
movsl
sbb
jmp
adc
lcall
dec
add
and
xor
cld
sbb
xor
xor
add
incl
and
push
ror
xor
and
call
pop
pop
cltd
xchg
cmpsl
push
jg
inc
and
bound
cli
or
stos
daa
insb
jg
call
xchg
push
sbb
popa
sbbb
jecxz
aad
push
sbb
lods
ret
pop
incl
push
clc
dec
sbb
or
cmp
pushl
popa
inc
mov
pop
inc
out
xchg
cli
addl
add
push
popf
pop
jnp
lcall
add
dec
lods
cmc
push
jmp
sub
xor
jb
jle
fistpll
add
mov
inc
cmp
add
ret
inc
pusha
dec
sub
call
pop
xor
inc
test
sbb
lret
xchg
orb
mov
push
mov
incl
jbe
cwtl
and
test
xor
mov
jle
dec
push
dec
ficomps
mov
test
mov
push
shlb
mov
push
cld
pop
sub
push
out
out
std
sub
leave
shll
push
jno
mov
or
sub
sahf
ret
push
stc
iret
or
lcall
mov
out
es
and
xor
mov
sbb
xchg
add
fbld
adc
jbe
loop
movb
aad
push
mov
rorb
mov
inc
pop
cmpsl
clc
and
and
out
shrl
jge
jge
jns
ret
arpl
jmp
sub
dec
lcall
dec
cmpsb
fadds
or
xor
lret
or
push
xor
add
jmp
dec
pop
out
mov
mov
push
int3
test
call
cld
mov
sbb
rcll
lret
mov
dec
inc
xchg
aam
push
fs
mov
pushl
mov
or
sbbb
mov
call
push
xor
mov
aad
adc
std
jmp
jle
dec
sahf
xchg
adc
cmpsl
pop
sbb
xchg
pop
ret
into
test
ljmp
sbb
adc
int3
subl
dec
dec
ljmp
shl
pop
push
hlt
mov
or
stos
ret
cmpb
xor
int3
jg
pop
mov
rol
pop
mov
call
push
dec
pushl
fmull
xlat
xchg
adc
pop
lahf
fldcw
pushf
loopne
push
or
cmp
xchg
jnp
adc
inc
add
xor
pop
sbb
cmc
imull
add
jmp
adc
cmp
pop
cmp
inc
pop
xor
js
add
pop
dec
sbb
adc
fs
insb
movsl
and
insl
out
lcall
add
out
xorb
lret
imul
mov
cmc
inc
dec
stc
sbb
fidivs
cmp
or
inc
pop
mov
dec
lea
sar
sub
pop
add
cli
pop
adc
out
shlb
inc
push
cld
decl
test
lods
dec
mov
int3
mov
ds
decl
add
jg
jecxz
call
cltd
test
jg
jmp
mov
pop
stc
inc
push
repnz
dec
cmp
jmp
dec
xchg
hlt
pop
shlb
jle
subl
out
pop
xlat
cs
leave
dec
es
jecxz
das
shrb
push
xchg
incl
dec
mov
ljmp
movsb
mov
iret
ja
icebp
inc
gs
push
jb
xchg
rcrl
sub
cld
incl
fsubrs
sbb
loopne
fs
incl
jno
movb
mov
cmp
push
mov
and
pushl
or
sbb
mov
and
xor
out
add
add
jp
lcall
out
pop
mov
pop
cmpsb
movsb
mov
sbb
jg
das
jl
mov
cmpsl
inc
or
inc
inc
dec
sub
lock
pop
mov
ljmp
sbb
xchg
loope
mov
or
mov
je
insb
into
sub
arpl
dec
adcb
ret
push
jp
cwtl
xor
neg
jg
sub
bound
int
or
cli
sbb
int
inc
inc
incl
dec
sub
movsl
icebp
xor
cmp
loop
rcl
dec
andl
or
cmc
dec
inc
bound
jmp
js
sar
mov
movsb
shl
pusha
sub
sbb
push
mov
outsl
ss
decl
inc
out
loope
das
xchg
add
imul
fdivr
pushl
xchg
adc
js
rol
xor
inc
popf
insl
aas
fildl
sti
mov
cmc
jg
test
sub
inc
mov
call
movsb
pop
sub
dec
add
push
inc
sbb
sub
lret
ljmp
mov
subb
outsb
enter
xor
outsb
jge
loope
add
insl
ret
add
mov
rcrb
xchg
or
jb
jbe
pop
inc
inc
gs
pusha
sti
outsb
dec
cmp
sbb
cmp
lcall
sbb
loope
cmp
shr
cltd
push
xor
and
push
mov
mov
adc
out
mov
aam
out
out
push
mov
decl
pop
aas
inc
pop
popf
mov
mov
repnz
lcall
pusha
and
ljmp
loopne
lods
adc
loopne
stos
adc
in
sub
int3
scas
out
jno
push
mov
inc
xchg
push
jge
orb
add
sub
mov
sub
dec
data16
cmp
pop
add
fdivrs
push
or
rcr
pop
mov
js
movsb
call
dec
imul
loope
scas
scas
push
hlt
mov
push
mov
mov
sub
dec
sti
push
or
add
decl
fstpt
add
ret
pop
and
fmuls
mov
std
test
jg
incl
sbb
dec
pop
xchg
repnz
icebp
jl
icebp
inc
cmp
call
fildll
or
jl
pushf
or
mov
xchg
add
aaa
shll
fiadds
bound
in
les
fildll
pop
push
pop
lock
mov
inc
rcl
cmp
mov
repz
push
add
mov
xchg
jno
mov
icebp
push
call
pop
jne
cmp
pop
outsb
ljmp
fidivrs
test
push
push
and
mov
mov
mov
add
test
jl
xchg
repz
mov
mov
aaa
mov
xchg
je
lret
loopne
xor
imul
add
dec
aad
add
mov
ret
repnz
pop
loopne
mov
out
adc
arpl
repz
fisubl
decl
mov
enter
push
pop
nop
fidivl
sbb
loope
arpl
pushf
decl
mov
in
adc
add
fldcw
mov
stos
add
sahf
rcll
jmp
jmp
test
leave
and
pusha
loopne
pusha
push
ljmp
rorb
rolb
dec
js
jnp
outsb
incl
inc
inc
loop
xchg
sbb
xor
stos
cli
rcll
jmp
sub
inc
adc
xor
dec
sar
fwait
scas
clc
addl
add
cltd
addb
arpl
or
hlt
add
dec
repnz
inc
pushf
or
jb
cltd
push
push
and
mov
rolb
jns
adc
call
ds
push
mov
das
outsb
cmp
and
popa
add
jmp
fwait
push
jbe
pop
hlt
mov
xor
mov
leave
or
lds
mov
lcall
out
mov
fwait
add
xchg
mov
in
test
rorl
sbb
xchg
adc
fistl
dec
push
fcomi
dec
cmp
test
sub
cmp
jmp
add
adc
jnp
daa
cmc
pop
pushf
inc
call
loopne
int3
add
out
push
push
cmp
les
add
xlat
add
ljmp
inc
movsb
inc
out
pusha
clc
inc
or
jno
stc
push
add
ss
scas
dec
or
out
mov
lcall
sub
pop
outsl
or
push
sub
mov
pop
or
lock
mov
shl
and
dec
int
test
or
inc
add
repnz
pop
mov
int3
shlb
jmp
clc
sbb
sbb
call
jmp
add
xor
loope
xchg
and
pop
in
adc
add
imul
aaa
mov
jnp
popa
add
out
es
or
dec
dec
add
arpl
jo
js
xchg
inc
inc
push
loope
or
gs
jg
mov
cmp
push
mov
xchg
sahf
lcall
mov
jge
and
dec
sbb
dec
push
mov
dec
cmp
mov
xchg
mov
call
cmpsl
or
imul
pusha
enter
negb
pop
push
sbb
cmp
pop
in
jmp
jmp
ljmp
xor
pop
incb
lods
inc
rol
ret
push
xor
and
testl
push
dec
inc
aaa
cld
jge
mov
and
adc
outsb
or
pop
or
flds
aaa
loopne
mov
cmp
push
cmpb
in
or
push
popa
rcl
xor
ffreep
adc
ds
popf
mov
xor
lcall
lret
leave
or
loope
or
cmp
cmc
cmp
and
pop
cld
or
dec
repnz
push
inc
adc
ret
rorb
adc
lea
or
add
sbb
mov
es
inc
adc
or
sub
xchg
pop
sbbb
lret
loop
and
popf
xchg
jg
ret
sbb
add
mov
push
lcallw
cmp
xorb
hlt
leave
xchg
push
jo
mov
ss
loope
das
insb
mov
adc
or
add
jg
call
xor
ljmp
sub
adc
push
jg
decl
pop
mov
insb
icebp
adc
cltd
hlt
aaa
cld
decl
enter
add
cmp
mov
xchg
add
mov
nop
fmull
das
dec
cmp
in
jo
out
sbb
lcall
xor
sbb
dec
ds
mov
cwtl
pop
xlat
pop
lcall
ja
lock
mov
push
hlt
xchg
xor
out
push
stos
pop
jle
jg
rclb
jl
adc
movsb
push
xor
and
imul
xchg
mov
nop
ljmp
stos
mov
pushf
popw
out
dec
sbb
in
cmpsl
dec
jo
outsl
cmpsb
cld
add
fstps
sbb
mov
dec
or
negl
add
scas
adc
mov
pop
mov
and
and
jle
sbb
out
sub
mov
out
bound
mov
mov
xor
call
mov
adc
dec
mov
cmp
loope
mov
ja
les
lock
cltd
mov
and
dec
and
cmp
add
cli
in
leave
in
arpl
incl
jb
cwtl
mov
inc
rcll
pop
mov
jp
je
mov
fnclex
imul
push
lock
and
push
inc
add
adc
dec
fdivrl
mov
jecxz
das
cmp
lds
aad
inc
mov
push
adc
ljmp
adc
dec
inc
sbb
cmp
test
sub
xchg
and
fiadds
dec
or
inc
stc
orl
push
data16
call
cmpsl
pop
fwait
call
fxch
jg
sbb
xor
sub
mov
imul
and
add
subl
scas
xchg
xchg
push
dec
pop
mov
jmp
xchg
iret
mov
xchg
lock
jne
into
sbb
push
scas
pop
test
jp
decb
punpckhbw
sbb
gs
dec
imul
out
dec
adc
call
arpl
mov
insb
testl
incl
add
xor
mov
test
loop
jle
insb
aas
and
inc
or
lea
pusha
out
lcall
clc
aaa
lcall
or
xchg
jno
mov
test
cmp
clc
or
fsts
aaa
xchg
dec
inc
and
xor
or
popaw
not
jne
incl
lock
xor
repz
call
jae
or
and
fbld
mov
mov
jecxz
xchg
in
mov
mov
jmp
loopne
xor
ljmp
sub
rcl
outsb
add
shlb
sti
movsb
and
rorb
jmp
mov
fidivrl
adc
cmc
clc
add
cmp
xchg
sub
popl
pop
rolb
rcrb
pushf
nop
scas
addr16
or
mov
hlt
xor
and
fldl
decl
or
mov
pusha
pop
inc
add
xchg
decl
cmp
clc
push
xchg
andl
push
fwait
sub
sbb
mov
pushl
cld
add
pusha
mov
scas
fcomps
inc
mov
ret
pop
pushf
adc
inc
daa
cwtl
loope
fisttps
xchg
add
xchg
scas
nop
sub
adc
jmp
data16
cld
jnp
loope
mov
faddl
inc
xchg
cmc
mov
sbb
mov
dec
nop
ljmp
out
daa
test
test
adc
scas
mov
and
cmp
ret
adcb
mov
cmp
clc
adc
add
nop
pop
mov
inc
adc
bound
pop
rol
and
test
push
call
lods
aaa
sub
and
loope
dec
fcmovnu
ret
out
pushf
btr
sub
rcrb
push
test
es
pop
lcall
ror
ficoms
inc
call
jp
loopne
loopne
sti
push
add
decl
lret
add
pop
das
inc
std
adc
pop
je
jno
dec
loope
mov
xrelease
and
add
sbbb
cmp
and
rolb
mov
xorl
movsb
or
lea
lahf
fdivr
call
cld
mov
lret
imul
lock
push
aas
gs
jbe
and
push
jmp
sub
fiadds
inc
repnz
pop
data16
ror
cmp
inc
jno
cmp
enter
test
push
aad
xchg
add
or
js
shlb
xor
lock
lds
mov
test
inc
mov
loope
inc
or
test
mov
clc
pushl
or
leave
mov
adc
inc
rolb
jge
xorb
hlt
fistpll
pop
jno
fistl
psubq
or
fs
mov
popf
imul
mov
arpl
xor
or
dec
jmp
shlb
cltd
and
cmp
or
lods
cmp
or
inc
dec
insl
sbb
push
loopne
repz
mov
xor
aaa
xchg
movl
ljmp
jb
test
sub
adc
jecxz
and
addr16
incl
adc
ss
les
clc
repnz
ds
js
jmp
inc
mov
test
inc
push
mov
jge
clc
add
and
ja
jg
incl
inc
push
ss
mov
je
adc
negl
imul
ljmp
add
jecxz
push
leave
adc
rolb
add
dec
sub
mov
cmc
fsub
or
sub
mov
add
jnp
mov
xlat
and
mov
cli
pop
jge
fwait
cmp
sbb
ja
dec
xchg
mov
mov
sub
popa
rorl
adc
in
or
push
xor
leave
pop
sbb
rorb
sub
adc
pushl
dec
sub
add
xchg
push
pop
out
push
add
ret
stos
shrl
or
sbb
popf
sbb
daa
bound
push
dec
push
loope
loopne
fistl
popf
leave
push
shr
or
addb
insl
cld
lcall
cmpsl
inc
mov
lea
jmp
dec
sti
adc
mov
aam
sbb
or
js
test
fisttps
add
xorb
or
fisubs
stos
lods
adc
pop
xchg
gs
std
rcr
daa
push
loopne
ret
xor
dec
jno
xor
movb
jmp
fcmovu
add
faddl
mov
and
mov
cmp
dec
cs
aad
xchg
adc
xor
jb
out
pop
enter
rolb
sub
call
loopne
mov
outsl
es
sub
mov
mov
negl
testb
das
cmpsb
test
dec
jmp
hlt
repnz
movsb
decl
sub
push
lahf
sbb
dec
xchg
movb
sub
mov
pop
add
decl
and
push
jmp
aam
cs
mov
pop
leave
push
loopne
sub
adc
inc
loopne
cmp
pop
xchg
dec
pop
pop
popf
ret
jle
movsb
repz
addl
or
decl
icebp
cmp
insb
clc
xor
imul
xor
xchg
and
inc
jne
sar
shll
out
mov
gs
xchg
push
incl
sbb
andb
push
fsubr
pop
adc
popf
xlat
rcrb
sbb
push
push
jb
jg
pushl
mov
sbb
sub
ja
sbb
push
lods
mov
mov
enter
call
xor
mov
xlat
add
add
ljmp
mov
ja
mov
xchg
nop
adc
ljmp
shlb
inc
xor
xchg
sbb
xor
jbe
sbb
lock
mov
pop
sub
jecxz
xchg
sub
stc
or
clc
mov
adc
jge
loope
xchg
push
out
push
adc
repnz
pop
icebp
lcall
aas
or
popf
lock
xlat
add
cltd
repz
add
sbb
test
jns
js
push
cmpl
cmp
cmp
dec
rorb
loopne
jns
pop
jge
das
clc
call
and
std
in
ret
sbb
push
mov
mov
call
out
pop
scas
push
mov
pop
stc
jmp
out
cmp
fcmovne
push
insb
cmp
es
mov
ret
sahf
out
pop
push
ret
xchg
cmpsb
pusha
and
decl
jae
out
fldl
push
and
cmpsb
imul
fisttpll
hlt
adc
jae
int3
xor
stc
jno
outsb
xchg
call
pushf
iret
ret
or
jbe
sbb
and
aad
dec
addb
addb
clc
test
add
jmp
mov
ljmp
out
pop
sub
pop
inc
pusha
pop
xor
nop
and
rol
pop
mov
sbb
jle
dec
lahf
faddp
push
rcll
jae
push
adc
insl
stc
push
fnstenv
std
incl
cli
add
rclb
xorb
sbb
ljmp
sbb
outsl
jae
ja
sbb
xor
adc
add
dec
loope
mov
mov
mov
sbbb
xor
mov
mov
jecxz
add
cmp
jl
sbb
fildl
xchg
or
or
call
sbb
movsb
push
fcmovb
and
pushf
adc
and
dec
out
mov
call
xor
xchg
ss
in
orl
dec
add
push
push
loopne
decl
add
pop
push
or
add
rorl
mov
adc
js
pop
inc
jecxz
pop
int3
push
cmp
cmp
sbbl
cmc
pushl
pop
shlb
stos
push
push
mov
push
mov
mov
clc
inc
pop
sti
nop
jo
cld
gs
cli
or
jnp
add
idiv
mov
incl
mov
mov
fmull
inc
cmp
push
incl
mov
inc
mov
rorb
movsb
fdivrl
cmp
pop
sbb
dec
and
insl
mov
lcall
pushl
sub
push
std
mov
adc
daa
adc
rorl
addr16
inc
ds
fdivr
mov
inc
out
add
nop
pop
cmp
or
cmp
xorl
lret
xor
lods
pushf
loop
add
mov
ret
and
loope
test
incl
xlat
jp
pop
test
push
clc
test
mov
and
and
lcall
dec
mov
mov
in
and
cli
mov
adc
movsl
rolb
or
sarb
jg
pushl
call
dec
push
add
loope
adc
jge
xchg
mov
loopne
or
adc
mov
mov
enter
dec
inc
rol
nop
out
push
shlb
inc
popa
mov
fs
call
push
sbb
aam
jge
push
inc
xor
push
decl
mov
jle
rcrb
bound
stc
cwtl
je
ret
inc
fcos
incl
andl
sub
xchg
outsl
in
push
mov
push
add
enter
fld
inc
mov
fs
imul
xchg
cmpsl
inc
push
sbb
sub
inc
pmaxsw
sub
xor
add
inc
push
pop
mov
pushl
inc
xchg
test
dec
out
sahf
scas
push
mov
scas
push
add
jl
mov
test
xchg
int
roll
fadds
stos
dec
jecxz
jne
fbstp
stos
pop
xor
out
cli
das
xor
cmp
loop
sbbl
dec
jmp
fisubrl
lea
aas
jecxz
movsl
pop
pop
xchg
inc
adc
mov
cltd
add
je
jecxz
call
mov
call
out
pop
jo
incl
ds
push
jae
dec
popf
or
fiadds
and
and
add
xor
and
lahf
cli
dec
cmp
jbe
mov
cmp
add
lahf
rorl
xor
dec
and
cld
mov
ja
push
cltd
jo
bound
leave
xor
cmp
outsb
inc
xchg
mov
addb
call
out
add
int3
mov
cmp
out
int
in
and
mov
jle
js
mov
out
stos
mov
inc
add
dec
adc
add
movl
push
stos
lcall
adc
fwait
dec
andb
stos
xor
or
jmp
repz
and
xlat
and
mov
xor
loope
hlt
jmp
xchg
popf
ljmp
lret
shlb
push
test
pusha
jp
rorl
enter
or
lahf
mov
or
cmp
jo
mov
test
ja
dec
pop
adc
data16
scas
sub
push
sbb
cmpl
call
cmpl
cmp
jl
push
mov
xor
int
and
dec
xchg
fcmovne
push
jg
or
data16
jb
dec
dec
add
adcl
inc
add
dec
xchg
clc
incl
loope
lret
dec
cmp
call
test
sbb
into
test
ljmp
add
pop
add
and
movsl
cmp
sbbl
inc
cld
call
test
add
movsl
mov
mov
adc
xchg
cld
dec
jl
ljmp
rclb
adc
inc
or
hlt
subb
in
clc
mov
sbb
ret
cmp
loope
add
add
les
pop
fidivs
adcl
add
inc
mov
into
loopne
push
std
dec
test
push
push
xor
decb
add
xor
ljmp
cli
cmp
mov
push
add
jnp
push
addb
ljmp
adc
out
cmpl
ss
inc
inc
push
scas
insb
sub
sub
cli
adc
xor
and
xchg
xor
push
inc
sbb
jl
div
pop
fwait
cmp
dec
mov
push
sub
inc
push
and
incl
mov
jae
mov
lds
gs
push
loopne
xchg
ret
decl
test
pop
aas
mov
push
pop
or
cmc
add
sbbb
mov
ds
test
inc
fs
jo
mov
push
adc
cld
mov
mov
aam
adc
mov
loopw
mov
cmp
or
aad
shrl
xor
add
add
scas
pop
mov
out
push
sbb
jb
cmp
outsl
lods
push
cmp
ja
aas
lret
sbb
arpl
mov
dec
mov
punpckhwd
pop
pushf
pop
sub
sbb
ljmp
and
mov
xor
ret
pushf
test
lds
lods
popf
cmpsb
inc
inc
lcall
inc
es
and
test
repz
mov
mov
jg
das
rcr
dec
pop
jne
out
rclb
mov
fistpl
adc
add
xor
or
cmp
ds
sub
lcall
mov
push
daa
movsl
call
ret
jmp
mov
leave
jle
jecxz
clc
mov
add
aam
decl
fimull
push
fnstcw
lahf
sbb
jle
pop
aas
add
mov
aad
roll
xor
es
and
xchg
adc
incl
dec
ret
sub
inc
out
mov
jg
mov
xor
add
lcall
rol
cmp
adc
add
lcall
mov
xchg
mov
or
fisubrs
xor
lcall
call
or
dec
add
jecxz
dec
adc
in
push
les
xchg
stc
jl
mov
inc
rcrb
or
mov
add
popf
lret
mov
mov
push
test
mov
push
mov
sbb
jg
popa
push
fadds
arpl
repz
fcompl
add
orl
pushl
inc
sarl
add
std
test
pusha
jg
jmp
and
into
push
adc
clc
xlat
xchg
in
fbld
adc
incl
adc
mov
cld
push
mov
or
movl
push
sarl
adc
cmp
xlat
xchg
pop
dec
push
hlt
pop
xchg
mov
repnz
cli
or
mov
fcoms
loope
mov
add
mov
jecxz
mov
rorl
lea
leave
rclb
or
out
inc
cmp
test
inc
lcall
inc
fst
mov
mov
sbb
dec
mov
adc
call
pop
add
in
insb
and
mov
mov
das
in
addr16
add
mov
inc
push
mov
mov
or
lods
and
ret
stos
xor
xchg
push
pusha
add
mov
jmp
adc
enter
inc
push
pop
sbb
push
and
sub
dec
mov
cmc
popa
xchg
clc
orl
das
or
in
mov
mov
fisubl
iret
aaa
aad
cmpsb
inc
dec
and
je
jbe
rcrl
pop
inc
sub
add
push
push
nop
das
xchg
ljmp
out
in
clc
jo
inc
leave
repz
cs
mov
adc
pop
scas
and
pop
aas
jl
adc
call
mov
sub
jecxz
add
lcall
ss
ja
mov
les
sbb
inc
cmpsb
xchg
sar
jae
mov
inc
decb
adcb
fwait
or
pop
in
in
adc
inc
in
call
mov
inc
in
mov
and
dec
rcl
push
mov
push
rcll
cmp
push
hlt
cmp
outsl
clc
mov
jl
mov
mov
mov
xchg
andb
cmp
ret
dec
and
loopne
add
stc
nop
or
or
adc
lea
or
fildll
mov
sbb
gs
pop
add
jg
imul
mov
sbb
cli
incl
and
pusha
lods
pop
pusha
leave
dec
mov
and
sbb
xchg
cmp
adc
clc
adc
outsl
es
push
cmp
dec
xor
fimull
cmpsb
sbb
lods
stos
sbb
jmp
mov
and
stc
mov
add
add
add
inc
add
clc
pushl
cmp
dec
fnstenv
les
mov
aad
fcomip
mov
inc
add
xchg
mov
sub
or
lcall
dec
lcall
aas
push
bound
jo
enter
push
mov
dec
mov
pushl
mov
push
icebp
add
xchg
mov
rolb
and
mov
adc
lods
mov
push
push
lret
mov
clc
and
movsb
jecxz
sbb
sub
es
jmp
xchg
push
xchg
incb
push
cmp
sti
add
dec
lahf
sbb
adc
cli
push
pop
jnp
xchg
clc
test
jg
insl
pop
add
test
lret
and
push
xor
or
jp
clc
test
lock
ljmp
dec
pop
shlb
jecxz
sbb
or
add
add
loope
jle
sub
pop
or
call
push
nop
test
add
push
add
std
xchg
cmp
rcrl
mov
lcall
add
ja
insb
mov
nop
push
mov
jecxz
xlat
mov
push
pushf
mov
decl
pusha
and
add
sub
ret
jmp
out
xchg
or
sub
and
mov
xor
inc
lock
in
push
push
loope
inc
loopne
fcomip
jg
frstor
popa
cmpsb
fnstsw
add
mov
dec
mov
aas
mov
rcll
mov
push
adc
out
clc
call
xor
cmpsl
shll
pop
sbb
mov
pop
or
call
mov
jnp
mov
jge
ret
add
test
inc
inc
test
add
mov
jmp
add
and
ret
in
mov
popa
jg
mov
push
mov
xchg
popa
pusha
xchg
dec
push
sbb
std
pop
ljmp
add
mov
xchg
shlb
lret
jmp
fsubr
inc
jae
and
inc
add
jecxz
xor
sbb
fisttpll
test
popf
dec
adc
pop
jl
incl
cld
popa
jb
add
stos
inc
add
out
enter
xor
and
pop
jg
inc
dec
int3
aam
xor
enter
jmp
or
sbb
incl
push
or
imul
sub
adc
test
dec
lock
lcall
push
pop
outsb
sub
mov
bound
aam
testb
incl
cmp
lret
in
nop
enter
push
mov
cmp
mov
mov
sub
mov
dec
movhps
lcall
clc
adc
popf
add
sbb
adcb
imul
stos
add
call
and
jne
inc
mov
nopl
fists
lcall
insl
mov
jl
sbb
or
mov
jb
jge
xlat
ror
dec
inc
stos
nop
sbb
add
ret
and
add
adc
add
cwtl
add
jmp
loope
adc
or
adc
lcall
sbb
mov
adcl
cmp
and
loope
les
les
add
cld
cmp
adc
sbb
decl
dec
test
jmp
push
xor
pop
hlt
ljmp
and
xchg
xchg
je
dec
movsl
and
xchg
std
and
pop
mov
ljmp
ret
cmp
jecxz
add
push
mov
test
and
fcompp
add
and
roll
pop
pusha
mov
or
inc
cmp
sub
push
jecxz
jge
mov
mov
xchg
dec
xchg
cmp
insb
add
jbe
add
add
dec
pushf
xchg
mov
xchg
adc
or
pop
int3
pop
clc
mov
add
push
or
ljmp
mov
jne
lock
xor
xchg
jl
add
hlt
xchg
pop
add
stos
and
outsl
rorb
jo
sahf
js
inc
mov
cmp
out
cmpsb
mov
push
add
mov
lods
sbb
push
jl
cmpsb
adc
out
pusha
call
rcll
mov
mov
std
icebp
sbb
dec
or
xor
into
or
mov
add
add
push
nop
rolb
lods
pushf
pusha
movsl
and
jg
add
loop
mov
outsb
repz
gs
movsb
push
call
mov
outsl
adc
mov
sbb
js
add
add
push
and
std
jmp
inc
repnz
scas
cmp
imul
cmp
cmp
call
mov
lret
push
add
ja
mov
and
mov
repz
cmpsl
jns
pop
lret
mov
mov
add
pop
ljmp
mov
movsb
aad
mov
stos
mov
cmp
xchg
orb
push
xchg
jmp
inc
pop
outsw
imul
push
addl
and
js
adc
clc
jmp
inc
add
push
decl
mov
push
jg
inc
add
aaa
and
cmpsb
sbbb
sub
shl
lea
dec
add
pop
xor
jno
cmc
cmp
sub
pop
lock
je
xchg
mov
fidivrs
lock
enter
decl
hlt
clc
mov
inc
insl
fldl2e
je
popf
fildl
sbb
imul
jo
dec
es
gs
call
lret
hlt
test
imul
dec
add
add
out
cmp
xlat
ds
out
aam
mov
mov
cmp
arpl
es
push
rolb
sbb
sbb
add
push
sbb
add
in
mov
jg
jl
ret
mov
or
xor
adc
out
add
mov
ljmp
pop
mov
rolb
in
add
into
ljmp
push
dec
mov
pop
adc
scas
lock
cmp
xchg
sbb
inc
in
inc
test
ljmp
clc
dec
xor
fiadds
nop
cmp
inc
cmpsb
cmp
xchg
adc
cmpsb
jg
into
repnz
andl
outsb
out
cmp
in
lahf
mov
pushl
or
pop
cwtl
fldenv
fnstsw
inc
clc
mov
dec
mov
fsubr
mov
sbb
lcall
mov
or
add
mov
inc
faddl
mov
pusha
fiadds
dec
insb
loop
fcomip
jmp
pop
jae
ret
inc
insl
imul
pop
add
and
add
lcall
in
hlt
cmp
aaa
fsubs
rorb
jne
xchg
mov
push
hlt
pop
shrb
icebp
call
lahf
pop
jecxz
and
ret
bound
lret
push
jo
ljmp
and
loop
pop
sub
mov
testl
pushl
push
mov
mov
sbb
adc
pop
icebp
test
mov
or
inc
loop
decl
sub
out
jnp
and
in
mov
out
clc
mov
jecxz
mov
pop
add
mov
fistpll
xchg
fildl
xlat
sbb
add
or
fidivl
sahf
and
xor
mov
decl
dec
aaa
and
cmp
shrb
push
dec
adc
xchg
xor
pushf
ljmp
pop
add
inc
pop
cwtl
loope
push
sub
lcall
pushl
inc
sti
pop
add
sbb
dec
ss
fsubs
jmp
sbbb
dec
jle
pop
in
test
in
movsl
stc
shl
inc
xchg
add
sbb
jg
jmp
pop
dec
pop
and
hlt
fs
mov
movsb
enter
loope
push
pop
mov
mov
ljmp
and
std
adc
out
loope
jb
dec
xlat
mov
push
jb
lock
outsb
ljmp
incl
push
mov
xlat
pop
mov
popf
push
adc
ljmp
mov
popa
pushf
mov
jmp
jmp
jecxz
pop
pop
adc
xor
cwtl
fidivrl
mov
dec
dec
mov
incl
sbb
and
out
insb
xor
orb
cmp
fisttpl
ss
or
cmpb
jecxz
ljmp
mov
adc
fdivrl
sbb
ret
mov
push
shll
in
rcrb
decl
imul
cmc
push
sbb
insb
push
out
bsr
push
push
cwtl
dec
jg
mov
mov
adc
not
add
loop
data16
inc
shr
mov
add
dec
or
push
lcall
rorl
cmc
and
mov
add
mov
push
push
lock
inc
insb
adc
and
jbe
adc
roll
ja
or
jp
cs
jl
call
or
daa
es
incl
pop
jno
jo
pop
test
shll
nop
cmp
loopne
cli
shll
push
pop
xor
cmp
mov
mov
testb
out
out
sar
cmp
lock
xchg
fldenv
mov
pushl
test
out
fmuls
dec
jno
aam
sarl
jmp
cmc
fstpl
xlat
les
add
mov
cmp
incl
lock
shl
add
add
sbb
loopne
mov
decl
pop
sub
xchg
inc
or
inc
cwtl
mov
mov
lcall
outsb
int3
mov
movsb
and
stos
scas
cmp
sub
dec
data16
jg
push
add
push
and
sbb
incl
jp
test
pop
xchg
or
sarb
adc
incl
mov
fsubrl
and
test
in
icebp
jmp
ljmp
inc
test
dec
xchg
in
cli
inc
mov
mov
xchg
lcall
lock
add
push
pop
add
add
rcrb
pushf
adc
pushl
sbb
call
add
pop
lahf
pop
mov
push
scas
inc
or
incl
es
push
shl
das
or
or
jb
test
outsl
aas
cmpsl
lret
dec
rcll
sub
jmp
jo
and
dec
cmp
pushf
ljmp
jg
decl
lock
std
pop
lock
loop
je
cmp
cmp
lcall
and
ljmp
xor
sub
cltd
xor
or
cwtl
fbld
jne
push
out
mov
mov
sbb
inc
clc
push
lock
pop
mov
xchg
loopne
es
push
sar
clc
push
push
mov
push
inc
or
inc
mov
lods
inc
js
add
lock
add
jo,pt
jecxz
dec
bound
out
into
ds
fs
pop
nop
inc
movsbl
imul
xor
dec
leave
loope
push
adc
jb
hlt
xor
ljmp
divb
xor
fsubp
push
pop
cwtl
inc
add
jne
lret
push
dec
push
loopne
incl
mov
add
pop
xor
aaa
std
mov
or
xchg
mov
adc
repnz
inc
cmpsb
mov
call
test
or
loopne
pushf
add
mov
jo
dec
push
inc
incl
push
or
arpl
mov
mov
cwtl
outsl
je
mov
inc
mov
mov
push
gs
stc
jmp
cmp
jae
outsb
pop
js
in
jo
jg
ljmp
rcrb
insb
fs
lds
lret
add
fucom
sub
out
popl
call
push
lret
rcrl
mov
sbb
xorb
xor
test
sti
mov
out
stos
push
mov
jmp
orb
push
dec
cmp
les
lods
popf
rorl
pushl
jo
mov
stos
in
and
cmpsl
jge
test
adc
decl
xchg
stos
xor
bound
inc
pop
jae
sub
decl
jge
jl
cmp
jne
outsl
mov
sahf
int
ja
mov
dec
shlb
leave
mov
lcall
jne
and
xchg
lea
adc
jl
lods
notl
mov
js
icebp
sarb
lcall
mov
mov
jns
fcmovnb
add
clc
aaa
push
jne
imul
int3
incl
mov
sbb
repnz
push
pop
jp
stc
xchg
jns
mov
or
mov
mov
aas
sti
pusha
movl
rorb
ret
pop
fistl
jb
mov
stc
loope
cmp
jno
mov
in
and
and
pusha
fildl
add
or
mov
add
inc
iret
loope
push
call
lcall
xor
icebp
jg
insb
cmpsb
mov
bound
ret
mov
dec
add
xchg
xchg
aad
andl
dec
inc
das
scas
jmp
in
testb
sbb
cmp
sbb
pop
sbb
in
sti
cmp
frstor
mov
sub
mov
sbb
push
ss
and
adcb
aaa
cmp
pop
rol
decl
jecxz
pop
jns
jl
xchg
sbb
add
int
inc
std
mov
lcall
xor
mov
ret
add
add
fucom
lret
addr16
mov
lcall
sbb
scas
pusha
add
and
out
pminub
cs
cmpl
jmp
divl
xor
aas
loopne
test
and
sub
ja
repnz
cwtl
daa
cmp
sbb
ret
arpl
out
outsb
fadds
fidivrs
lahf
pop
push
arpl
adc
out
test
rorb
imul
mov
jg
xlat
sti
xor
mov
and
movsb
add
xchg
call
repnz
inc
shrb
stc
pop
xchg
jmp
loop
icebp
jl
sub
sbb
mov
mov
cmpsl
cmp
or
pushf
bound
sub
fnsave
adc
cwtl
sub
movsb
dec
sub
and
mov
add
ss
sarb
mov
into
pop
mov
pop
xor
pushl
mov
adc
add
add
imul
jl
push
xchg
adc
call
std
add
aam
data16
dec
cltd
int3
lea
add
and
nop
mov
decl
aaa
xchg
mov
in
push
push
and
hlt
mov
push
enter
stc
mov
filds
mov
imul
jg
incl
shll
dec
xchg
sub
insb
pop
xchg
fwait
and
xor
xchg
lds
dec
or
fistl
or
fldenv
xchg
ss
dec
stc
adc
lods
or
mov
push
fbld
call
aam
sbb
ret
rcrl
clc
cmp
pop
or
lds
das
add
incl
add
sbb
mov
ret
adc
loope
fwait
add
push
pop
adc
adc
out
sub
adc
iret
das
cmp
ret
xchg
add
scas
roll
js
and
pop
sbb
call
xor
adc
dec
add
xchg
enter
in
or
mov
sub
and
xlat
pop
rol
fdivp
xor
or
movsl
je
cld
mov
pop
add
cmpsl
pop
or
inc
bound
jg
fdivrl
ret
ret
and
adc
mov
in
push
dec
add
pushl
lret
in
loop
pop
xor
cld
adc
xor
or
xchg
sub
cwtl
push
nop
cmp
jnp
and
pushl
jns
sbb
jne
nop
inc
ret
or
sbb
lret
loope
mov
mov
pop
dec
shlb
sub
pop
sbb
push
lock
pop
adcb
lahf
xchg
sbb
inc
xor
jge
jbe
repz
sbb
and
inc
testl
cmp
jl
inc
adc
cwtl
mov
jg
push
gs
lock
jmp
rclb
imul
push
stc
mov
iret
xchg
push
pop
and
roll
xor
loope
push
adc
out
mov
xorl
aam
mov
dec
pushl
mov
pop
fstps
xor
aaa
lock
call
jb
mov
push
dec
test
call
mov
fs
fnstsw
xor
cwtl
pop
and
incl
decl
mov
test
sub
fwait
xlat
std
or
inc
lea
or
xchg
dec
push
sbb
or
mov
sbb
add
ljmp
cmp
inc
das
les
fidivs
lock
push
sahf
fstpt
mov
push
movsl
xor
iret
ficompl
mov
imul
sub
mov
push
insl
xlat
sti
sar
fcmove
gs
add
outsl
shl
and
pop
cltd
hlt
add
popa
mov
insl
mov
shll
outsl
clc
decl
std
std
mov
fidivs
mov
cmp
std
push
pop
lods
push
shl
data16
jge
test
les
dec
pop
mov
pop
enter
jl
xchg
add
push
or
inc
dec
sub
decl
repnz
call
ret
mov
cmp
daa
fs
dec
dec
pusha
loope
jae
jns
out
incl
mov
call
and
jge
dec
push
sub
mov
ljmp
jb
adcl
adc
pop
xor
movsb
mov
sub
lcall
cmp
notl
stos
dec
leave
adcl
adc
dec
inc
aas
mov
sbb
dec
scas
fidivrl
test
in
jmp
jp
hlt
lret
adc
xchg
ds
ret
jnp
sub
pop
inc
repnz
adcb
into
test
dec
inc
inc
mov
mov
hlt
call
mov
dec
cli
push
sbb
cwtl
xor
push
dec
mov
jecxz
std
out
cli
outsl
movsb
lcall
jge
mov
mov
mov
call
sub
scas
dec
ja
les
loopne
stos
cld
inc
popa
loopne
sub
mov
cmp
call
sar
or
dec
mov
inc
fwait
cld
ror
and
adc
decb
incl
decl
cmp
cmc
or
mov
mov
sbb
mov
loopne
cs
xor
test
mov
int
clc
dec
push
hlt
pop
push
and
sahf
xor
out
hlt
add
popf
xor
ret
imul
adc
repnz
in
or
pop
mov
aaa
mov
xchg
pop
mov
popa
xchg
sub
dec
clc
shlb
xchg
sbb
lods
shl
lds
mov
cmpsb
and
adc
xchg
and
xchg
inc
cld
lcall
fistl
adc
lahf
jmp
test
stc
push
mov
or
test
or
incl
rolb
adc
pop
shll
pusha
clc
add
adc
add
stos
loopne
mov
out
adc
jp
or
sbb
push
lds
mov
in
dec
daa
xchg
pusha
rol
incl
test
push
cmp
add
pop
push
cmp
pushl
mov
movb
enter
pop
arpl
fwait
cmpb
or
ljmp
enter
xchg
jg
jp
enter
ret
mov
xchg
cmp
pushl
pushl
stos
push
pushf
or
rolb
pop
dec
leave
inc
mov
xor
clc
adc
push
shlb
add
mov
andb
jg
lcall
enter
push
rcrb
jle
ret
add
iret
add
xor
mov
pushl
lods
stc
inc
aam
add
js,pt
mov
insb
data16
mov
mov
adc
fisttpl
je
inc
sub
fwait
lock
add
cmp
dec
cs
clc
decl
push
sub
jbe
ret
pop
add
cmc
add
pusha
xor
in
sbb
lods
mov
fdivl
bound
or
push
pushf
in
sub
add
cld
sub
movsb
push
or
xor
mov
sbb
and
lods
or
xor
in
sub
push
mov
push
call
xchg
inc
call
int3
mov
in
or
in
repz
mov
js
cmpsb
add
add
je
push
arpl
xchg
xchg
call
push
and
pop
xchg
mov
pushl
clc
cltd
and
mov
mov
decl
add
push
loopne
cwtl
pop
test
sar
jmp
insb
and
or
call
call
out
pop
out
xor
rol
inc
inc
pop
mov
sbb
fwait
or
int
lcall
mov
push
jge
out
pop
mov
mov
je
repnz
loopne
xor
mov
call
jb
pop
fsin
mov
cmp
lods
dec
adc
rorb
das
adc
dec
cld
sahf
fcomip
ljmp
imul
push
and
jo
cld
inc
pop
jo
lods
push
xchg
aad
dec
pop
ljmp
lcall
loop
mov
bound
fst
daa
ljmp
arpl
loope
incl
cs
lock
sub
pop
push
and
pop
test
orl
dec
es
outsb
decl
lret
xchg
dec
or
test
inc
cmp
sbbl
decl
lock
sbb
or
jno
cli
testl
mov
xchg
inc
mov
out
mov
xchg
mov
in
cmp
adc
decl
pop
sub
rcrb
outsl
jmp
and
andl
add
jno
cmp
pushl
fwait
cs
popf
ret
push
ret
out
add
lea
clc
daa
xchg
jecxz
js
sub
dec
cmp
pop
inc
push
xchg
add
pcmpeqd
roll
add
fwait
enter
xor
mov
repnz
pop
pusha
fdivrs
call
sahf
and
jae
and
test
or
xor
decl
xor
repz
arpl
in
ljmp
lcall
lret
mov
ret
mov
adc
xchg
ljmp
sub
push
jmp
and
std
sahf
adc
icebp
call
shrb
add
jns
js
pop
mov
ja
shll
fcomip
lods
test
iret
repnz
iret
xchg
outsl
xchg
popf
js
or
xchg
inc
cmpsb
jl
inc
adc
sbb
rcl
incl
incl
rcrb
pop
aaa
mov
push
lcall
xchg
pushl
roll
and
xchg
insl
adc
dec
arpl
incl
xlat
rorb
in
test
jge
or
in
jg
movsb
lcall
into
fisttpll
cwtl
addb
adc
inc
and
addr16
scas
xor
xchg
push
mov
mov
pop
and
mov
mov
mov
jmp
add
incl
dec
lcall
cli
inc
adc
adc
mov
xchg
data16
ja
std
test
ljmp
test
pop
out
shll
roll
int3
test
xchg
insb
test
decl
add
mov
jbe
sarb
fcmovnu
arpl
sbb
mov
adc
pusha
sbb
xor
cld
lcall
inc
inc
cmp
mul
cld
inc
mov
xor
mov
incl
ja
shr
popa
imul
jecxz
mov
jmp
adc
shl
inc
lcall
jmp
andl
or
rolb
cmpb
inc
or
inc
or
inc
rorb
orb
fadd
imul
adc
daa
cld
ja
cmpsb
daa
cmp
cmp
clc
mov
jg
insb
stos
inc
pop
pop
stos
mov
pop
cmp
icebp
out
dec
pushl
sbb
lret
xor
cli
jbe
push
scas
pusha
rclb
and
fidivrl
call
test
enter
dec
test
leave
push
decl
push
lret
mov
xchg
jmp
add
les
ljmp
mov
fs
xor
jge
lods
jle
leave
inc
mov
ret
push
cmp
decl
sbb
adc
inc
jo
push
adcl
dec
in
and
inc
inc
sbb
add
nop
hlt
inc
mov
push
mov
inc
xchg
sub
xchg
mov
push
int
bound
cmp
dec
pop
dec
dec
adc
pop
out
aaa
xchg
mov
leave
mov
inc
cmp
xor
jmp
mov
jmp
pop
mov
jg
clc
xor
add
dec
repz
add
add
or
fcmovnbe
mov
add
or
pushl
in
mov
fistpll
and
adc
outsl
roll
int
jmp
std
pop
push
out
mov
adc
dec
pop
loop
imul
add
push
and
cld
incl
sub
je
pusha
push
pop
nop
dec
jo
sar
or
mov
xchg
jbe
pop
imul
jge
movsb
mov
mov
mov
xor
pushf
jecxz
andl
pushl
xchg
adc
jg
js
cmp
insb
ljmp
and
nop
xor
in
jns
pushf
dec
mov
push
dec
add
ret
adc
push
ror
in
iret
or
or
jmp
stos
ret
push
dec
mov
mov
dec
mov
cmp
push
push
fucomip
add
jmp
scas
lock
dec
xchg
adc
je
jae
xchg
pop
mov
leave
seta
ljmp
imul
cmp
jl
or
incl
pop
cmp
fsubs
rorb
test
ret
sbb
sti
jae
es
aaa
pusha
push
dec
xor
hlt
cwtl
lds
sbb
jmp
and
add
dec
pushf
sub
inc
movsl
pusha
mov
add
add
rol
rclb
stc
or
pop
call
cmpsb
xchg
clc
mov
cmp
mov
fbld
adc
pop
mov
and
push
add
push
push
ss
fisubl
mov
xorb
rclb
stc
mov
call
adc
push
loopne
mov
test
cltd
inc
std
xor
jmp
and
arpl
outsl
dec
movsl
push
and
fstl
push
into
sbb
cmpsl
xor
js
fdivs
mov
frstor
iret
sbb
addb
inc
and
jmp
in
xor
sbb
jo
es
call
sub
sub
stos
sub
and
add
stos
jg
jecxz
pushl
push
icebp
dec
inc
sbb
dec
mov
cmpb
xorb
xchg
or
and
jmp
cmp
jns
int3
or
mov
decl
dec
push
dec
pop
pop
xor
neg
mov
or
pop
xor
inc
adc
lds
dec
push
scas
ljmp
add
mov
aam
enter
ret
or
mov
call
fimuls
dec
nop
mov
sbb
mov
sti
aaa
mov
xor
enter
ret
xchg
push
lcall
add
call
test
loop
mov
mov
bound
jno
lea
stc
cmpsl
inc
fidivl
cmp
lahf
jno
sbb
call
imul
lods
cmp
nop
ljmp
push
ss
out
lock
xchg
push
imul
inc
or
movsb
xor
aaa
sub
std
shll
mov
jg
fwait
mov
int
pusha
enter
inc
add
lods
test
cmp
call
add
test
xchg
stos
inc
push
aad
incl
int3
call
pop
mov
sbb
mov
xor
mov
sbb
mov
pop
push
aaa
xlat
mov
mov
jnp
fcoms
fsubs
adc
int3
out
filds
cmp
mov
std
out
dec
sub
mov
fistl
lret
lret
into
sarb
mov
inc
push
push
add
out
inc
bound
xchg
fsubp
cltd
push
sbb
fcoms
repz
stos
jl
arpl
jle
fcomip
cmp
pushf
mov
add
test
adc
pop
shll
cs
popa
sbb
sbbl
dec
mov
jg
lcall
loope
ret
xor
movsl
jl
dec
enter
je
jns
mov
scas
mov
pop
inc
jecxz
ljmp
jb
adc
out
and
inc
push
sbb
cwtl
fisubrl
mov
ja
orb
movl
ljmp
mov
mov
outsb
adc
dec
pushf
pop
adc
jp
lcall
sarb
xchg
mov
test
imul
ret
std
notb
lock
sbb
jo
xor
imul
call
loopne
dec
ret
rorb
mov
adc
movsl
insl
mov
call
movsb
cmp
lea
iret
test
jge
cmp
xchg
gs
mov
loope
dec
incl
pop
fdivs
jae
test
adc
pop
vorps
jae
loope
icebp
or
pop
push
pushl
lcall
aad
lods
lods
das
ret
inc
add
jge
sbb
sbb
dec
insb
and
or
aam
repz
sub
cmc
mov
pop
repz
je
jg
pushl
outsl
inc
dec
inc
inc
xchg
and
in
push
rclb
add
lock
fldt
cmp
adc
in
clc
enter
push
or
icebp
add
ljmp
cmp
pop
xchg
mov
mov
sbb
rolb
push
inc
mov
test
push
sub
fwait
jno
sar
shl
decl
xlat
lahf
scas
aaa
mov
jo
adc
call
test
lcall
pushf
xor
xchg
or
lcall
cs
mov
jle
test
in
scas
je
fidivs
jmp
je
into
cmp
inc
sbb
and
and
jae
out
jb
and
bswap
out
sub
jl
mov
call
cwtl
push
pusha
adcl
mov
mov
cmp
mov
adc
xor
incl
add
add
std
mov
add
shll
mov
and
mov
lcall
es
dec
mov
fcomps
xlat
scas
ds
xchg
lds
adcb
sub
out
mov
movsb
or
cmc
std
movsl
subb
sarb
pop
std
out
in
mov
pop
mov
in
scas
adc
jne
sub
push
jp
in
pop
pop
call
push
add
add
or
mov
push
pop
fidivs
xchg
and
daa
xor
div
pop
jo
mov
xor
les
ljmp
push
xor
movswl
add
fsubl
pop
mov
pop
pop
sub
cli
lret
mov
filds
jmp
sub
pushf
cmpl
adc
sub
subb
jl
sbb
sub
jbe
and
mov
jg
ljmp
push
insl
xchg
inc
adc
add
test
lret
mov
in
mov
adc
psrad
ret
push
fstpl
inc
cmp
cmp
in
pushl
xor
shll
push
cmpl
pop
or
incl
pop
xor
loopne
inc
sub
add
in
aam
jmp
fdivr
fcomip
cmpsl
or
stos
pushf
in
mov
adc
mov
lock
jno
pop
pushl
popa
sub
mov
sbb
fcmovnbe
addb
ficoms
fwait
mov
sarl
icebp
icebp
repz
mov
or
subl
add
pop
das
add
cmp
mov
and
ljmp
adc
js
bound
jo
inc
fcomi
adc
jecxz
bound
dec
jle
add
ljmp
leave
mov
std
clc
mov
vorps
lea
xor
loopne
inc
inc
mov
aad
call
xor
inc
mov
xor
repnz
sub
pusha
xchg
and
mov
pop
sbb
nop
pop
inc
enter
xchg
fimuls
pop
cld
cmp
es
add
sbb
les
repnz
sub
or
sub
les
xchg
mov
movsb
cmp
and
rolb
movhps
sbb
ret
dec
enter
push
into
push
ds
cmp
popa
pop
cmpsb
sbb
mulb
pop
jo
dec
cmp
andb
jmp
pusha
or
test
add
dec
std
lcall
add
cld
or
or
and
in
ret
ror
sar
mov
aaa
ret
push
push
mull
ret
mov
or
and
mov
push
jbe
mov
pop
adcb
sub
add
or
and
loope
decl
pop
mov
or
and
lcall
add
repz
push
lret
fnsave
push
sbb
fisubrs
dec
add
ljmp
push
or
rorb
push
jno
dec
subb
jle
adc
and
jg
mov
dec
and
xor
push
in
test
daa
inc
mov
inc
or
incl
bound
lahf
popa
dec
push
rcll
jnp
inc
mov
inc
pop
dec
jg
inc
popf
into
das
xlat
pusha
cs
insl
mov
pop
fildll
dec
xor
add
dec
pop
sar
jg
push
sub
xor
mov
mov
mov
sub
inc
push
fcomps
rcrb
pop
xchg
mov
adc
or
xor
insb
icebp
into
push
xchg
mov
jae
add
dec
jo
arpl
jae
xchg
repnz
push
loopne
dec
mov
decl
fdivrs
aam
add
push
mov
into
clc
mov
push
adc
icebp
push
popa
inc
popa
or
mov
cmp
mov
jmp
pop
lea
popf
or
scas
flds
lea
fildl
lock
hlt
incl
andb
mov
mov
adc
adc
orb
test
lret
push
add
pop
pushf
dec
jno,pn
xor
sti
inc
aad
add
push
adc
shll
jmp
sub
jno
in
adc
xchg
push
mov
cmp
in
adc
lcall
xchg
movntps
or
push
add
dec
shl
clc
and
fildll
dec
inc
pop
pushf
das
inc
cmpl
jbe
jno
mov
add
ja
fadds
mov
clc
aas
std
ljmp
iret
and
iret
aad
jecxz
inc
jae
popl
and
xchg
cwtl
xor
add
cwtl
or
pop
adc
arpl
enter
inc
mov
xchg
jl
or
mov
test
incb
icebp
mov
faddl
ds
fcomip
in
std
and
inc
fstpl
push
mov
fbld
jo
push
inc
jl
and
fmul
ud0
shr
mov
fwait
cs
enter
jo
out
sub
sbb
sbb
test
pop
pop
fs
ret
cli
jg
pushf
dec
sbb
out
pop
data16
mov
cmp
ljmp
insb
push
incb
inc
fistpl
adc
imul
jmp
jp
lret
daa
mov
mov
aam
nop
xor
movsb
mov
in
add
sub
mov
data16
ficoms
aas
dec
jbe
pop
lds
dec
xchg
or
or
mov
adc
mov
and
mov
sub
push
sti
pop
movsl
and
lcall
jl
sub
and
es
mov
cmp
fdivl
xor
cmp
pop
lods
or
filds
cli
decl
cmp
imulb
adc
leave
enter
cli
pop
insb
jp
push
or
and
into
aad
add
test
jg
inc
sbb
jle
add
xchg
cmp
pushf
addr16
pop
xlat
push
fwait
aaa
int
and
add
fidivl
mov
mov
decl
lock
aad
mov
xlat
sbb
mov
repnz
pop
mov
adc
mov
xchg
mov
mov
cmpsl
push
and
imul
sub
in
mov
daa
inc
decl
add
jno
pop
ret
jl
mov
sbb
jmp
push
testl
arpl
xor
lock
movsl
add
pop
add
ret
arpl
fbstp
and
popf
xchg
inc
cmpsl
int3
dec
cltd
out
or
add
andb
sti
mov
or
cmpsl
hlt
fwait
rorl
dec
les
mov
pop
sub
mov
pop
and
fwait
outsb
jo
es
dec
idiv
incl
mov
ret
push
lds
mov
mov
scas
inc
ja
dec
cmp
dec
pop
mov
push
xchg
iret
cwtl
cs
shlb
push
add
cld
mov
mov
loopne
dec
mov
data16
cmpb
cwtl
inc
and
scas
jle
test
and
pushl
scas
addb
cltd
sub
movsl
pop
pusha
or
sbb
sbb
or
insl
or
in
cmp
pushl
add
loop
add
aaa
or
mov
scas
je
jge
inc
gs
lret
mov
or
ficomps
data16
xor
mov
dec
cld
push
mov
and
push
lret
cwtl
inc
ret
jl
shr
inc
xorl
cmp
dec
das
push
daa
jge
add
in
lcall
xor
cmp
sahf
or
call
jg
and
fldl
jle
leave
call
xchg
xor
pop
insb
adc
pop
scas
mov
xor
addr16
pushl
insb
and
js
push
fdivr
lods
faddl
sti
int
push
dec
call
jae
sub
call
ss
jge
push
xor
decb
pop
xor
mov
sbb
jmp
push
and
pop
sbb
leave
js
xchg
flds
sub
dec
xchg
mov
or
mov
lcall
or
scas
fcomps
or
loope
cmc
enter
sub
mov
cmp
inc
outsb
push
fisubrl
push
faddl
adc
fsub
xor
incl
mov
addl
xchg
and
je
pop
mov
arpl
call
cmp
sarb
pushf
scas
pop
cmpsl
or
ljmp
cwtl
or
jg
or
aaa
sbb
popf
and
inc
xlat
pop
mov
mov
jp
or
pop
incl
mov
popa
in
pusha
add
inc
cmp
mov
fldenv
dec
cmpsl
xor
sub
and
rorl
stos
sub
add
xor
decl
out
in
adc
int
xchg
adc
fs
dec
ds
pop
ret
sbb
jmp
pop
incl
or
adc
adc
inc
jmp
cmp
int3
cld
lock
add
cmc
mov
ret
enter
jns
hlt
lcall
cmpsb
lods
or
push
sub
pop
or
ffree
add
mov
mov
mov
cmc
inc
dec
ret
clc
and
cmp
lret
pushl
fimull
add
sbb
mov
call
decb
test
roll
xor
adc
mov
les
mov
incb
mov
lock
cmp
pop
nop
xor
stos
cmp
mov
xchg
push
hlt
in
shlb
adc
loope
call
push
cmpsb
pop
fiaddl
dec
or
pop
adcl
inc
orb
pop
inc
push
or
mov
hlt
or
pop
or
mov
out
pop
scas
xchg
xchg
inc
call
js
test
cwtl
loopne
sub
cwtl
js
push
shrb
xor
adc
mov
fdivr
cmp
pop
inc
andb
push
dec
rcll
sbb
das
clc
int3
cwtl
mov
arpl
adc
add
sbb
negl
and
mov
pop
pushl
mov
call
sub
sub
add
dec
in
loopne
or
loop
pushl
xchg
pusha
lcall
jg
rcrb
add
outsl
or
adc
xlat
pop
out
jmp
ljmp
push
xor
mov
idiv
in
rol
add
xor
fstpt
cld
incl
dec
add
dec
sbb
sahf
sub
dec
arpl
jno
or
pop
lock
sbb
jne
rcrl
outsb
mov
jg
int3
lahf
insb
lcall
and
inc
pop
insl
ja
jp
in
inc
inc
add
call
daa
add
in
add
xor
sbb
inc
pmaxsw
incl
cld
jb
mov
lahf
inc
jb
and
mov
stos
pusha
jne
call
mov
adc
lock
xchg
sub
or
ret
mov
aad
cwtl
loope
jbe
jl
push
pop
dec
rolb
xchg
sbb
sub
lahf
andl
pop
add
sub
fwait
decl
sbbb
mov
or
jecxz
mov
and
fistl
ljmp
incl
sub
sahf
mov
out
xchg
leave
fsubs
cmpsl
add
inc
fnstenv
push
xchg
hlt
xor
jg
hlt
jns
adc
movsb
clc
add
pop
cli
sub
enter
xor
stos
imul
lock
sbb
fimull
jbe
mov
repz
jp
pop
xor
sbb
into
jg
xchg
jecxz
andb
stc
push
pushf
pop
push
sbb
loopne
add
pushl
icebp
out
mov
add
cli
cmp
dec
int
sub
hlt
mov
dec
push
or
mov
mov
xchg
je
ljmp
push
test
jb
cmp
stc
aas
sbb
repnz
leave
in
add
pushl
in
jecxz
push
arpl
mov
add
jne
insl
adc
cmp
ljmp
add
xchg
fildll
in
push
jno
test
xor
pushl
bound
test
sbb
xchg
mov
aas
pushf
mov
insb
movsl
ret
cmp
add
repnz
add
incl
inc
lret
insb
inc
sbb
xchg
push
add
pusha
or
ds
jns
mov
pop
or
ja
inc
popa
arpl
or
sub
fwait
pop
push
jo
cmp
add
adc
inc
sbb
sub
jp,pt
push
shll
inc
test
jg
push
pushl
cli
lds
pop
fstpt
ret
pop
pop
pushf
or
push
incl
xchg
aad
pop
es
call
filds
out
das
push
ljmp
shl
xchg
inc
pushf
imul
in
cmp
mov
roll
xor
nop
inc
mov
cmpsl
clc
push
mov
pop
sub
add
imul
cmp
clc
cmp
push
mov
mov
jle
aam
dec
pop
test
inc
loope
inc
lret
xor
fildll
jecxz
or
inc
adc
jo
outsl
cmp
call
mov
and
js
or
es
dec
cmpsl
hlt
jmp
push
jecxz
sahf
inc
push
jg
push
add
cli
add
mov
lahf
jecxz
loop
cmc
adc
mov
adc
jmp
add
mov
aas
js
dec
data16
incl
out
outsl
push
js
xchg
dec
add
mov
mov
dec
ljmp
mov
xor
pop
cmp
call
adcl
dec
jmp
test
mov
cmp
and
pop
inc
jb
jno
mov
decl
addr16
push
sbb
push
mov
mov
popl
cltd
lods
adc
jae
lret
repz
pop
aas
adc
repnz
or
inc
push
sbb
mov
and
add
add
nop
inc
add
add
adcl
adc
add
nop
push
add
addl
push
inc
pop
adc
adc
push
mov
xor
add
push
outsb
push
gs
js
int3
jbe
jmp
je
outsl
outsb
inc
imul
cmp
sti
ffreep
adc
imul
outsl
bound
dec
outsl
arpl
movsl
cmp
sbb
gs
cmp
je
insl
inc
and
shlb
mov
mov
pop
dec
push
js
ja
inc
imul
sub
jae
and
mov
pop
push
jae
shlb
insb
outsl
mov
inc
daa
push
imul
je
pop
fldcw
adc
outsb
je
sti
lods
or
fs
hlt
and
jo
push
xor
popa
insb
push
dec
popa
mov
push
in
in
jns
je
dec
outsb
outsw
sbb
xor
mov
cld
je
mov
mov
in
push
jb
aam
jae
pop
dec
outsl
fs
mov
addr16
orl
popa
out
mov
std
sbb
mov
jb
add
xor
imul
movsb
lods
jp
push
dec
jae
popf
or
sbb
mov
jo
pusha
sub
bound
sub
ret
rcrl
lcall
or
ja
pop
or
das
inc
insw
jo
inc
inc
nop
jb
das
adc
push
and
daa
inc
jne
cmp
jae
jne
sub
or
xchg
sbb
pop
stos
push
sub
pop
push
jne
jns
popa
mov
pop
push
mov
jae
xor
test
outsl
imul
dec
data16
loop
and
push
jo
inc
mov
fcoms
push
sub
jnp
push
pop
push
sub
pop
inc
jb
jb
daa
les
or
fadds
in
dec
jb
arpl
pop
adc
xor
das
adc
je
push
xor
imul
jo
daa
loop
loope
data16
sub
sbb
xor
adcb
mov
cmc
int3
arpl
lds
sub
adcb
outsl
sbbl
jne
jbe
leave
and
sub
pop
fcomps
es
pop
bound
add
push
das
pop
imul
sub
adc
pop
subb
rorb
mov
push
dec
outsl
or
xor
pop
imul
imul
jno
loopne
popf
inc
ja
mov
xchg
push
mov
jne
inc
js
push
and
xor
xchg
cmp
sub
jo
push
inc
in
xor
mov
sbb
rolb
call
xchg
lret
mov
jbe
mov
shrl
sub
and
bound
scas
push
adc
jp
inc
js
push
mov
lods
movsb
sub
insl
lods
arpl
int
cmp
aaa
insl
cmp
fmuls
xor
outsb
jb
pop
int
loopne
inc
out
mov
add
subb
sbb
jmp
cwtl
xor
inc
jno
bound
sub
shlb
lea
xchg
jns
popa
adc
push
loope
dec
or
push
sub
inc
pop
shr
sbb
jbe
push
xchg
push
push
jns
mov
push
dec
gs
mov
rolb
ja
xor
xchg
iret
imul
and
jne
mov
dec
adc
mov
mov
insb
mov
cmp
inc
mov
jae
ret
dec
ds
xchg
subb
das
in
jae
push
cmpl
inc
nop
mov
inc
sub
push
or
sbb
arpl
enter
mov
or
daa
popa
sub
nop
decb
inc
cmp
insl
mov
in
dec
das
inc
jne
data16
jno
sarb
js
jne
rorl
inc
jns
ss
jl
lret
push
outsl
insb
push
xor
pop
sbb
paddb
outsl
ja
pop
decl
popaw
add
scas
dec
pop
and
or
js
inc
mov
bound
fnstcw
lahf
inc
jae
addr16
test
in
xor
push
aad
rorl
mov
insl
or
and
gs
cwtl
lds
jo
jo
jae
aaa
inc
cmpb
cmp
xor
test
inc
cld
fs
imul
dec
mov
and
xor
fs
add
loopne
dec
bound
mov
xor
and
adc
jne
push
dec
sub
lahf
pusha
push
stc
jbe
push
shrl
push
sub
sub
mov
outsb
in
xor
jae
push
jp
mov
inc
das
arpl
add
pop
xor
lods
mov
out
mov
fsubs
jl
push
outsl
data16
bound
fistps
outsb
jne
pop
push
xlat
je
push
cld
or
xor
sbb
inc
inc
mov
outsl
addr16
push
cli
jp
fcomi
cwtl
ficoml
test
mov
sub
data16
mov
sub
insb
pop
sub
dec
andl
xchg
aaa
aas
imul
in
nop
ljmp
push
cmpsb
rolb
xchg
imul
sub
push
bound
lods
sub
das
push
lret
push
mov
push
shrb
andb
sub
xlat
int3
mov
jae
push
pop
mov
inc
aas
cmp
rcr
pop
xor
ret
shll
mov
je
inc
fs
rolb
push
dec
inc
inc
or
arpl
xor
mov
clc
add
mov
add
add
add
sub
sbb
daa
jge
or
add
mov
pop
adc
add
sbb
add
fcmovnu
int3
cmp
add
dec
negl
add
outsb
mov
jo
sbb
sbb
push
cmpsb
cs
add
sub
mov
jb,pn
mov
cmp
cmpsb
add
add
mov
rcl
sahf
insb
jae
pusha
mov
leave
repz
add
lahf
dec
outsl
in
jo
push
cs
in
add
inc
add
sbb
out
jae
arpl
ja
ds
out
jbe
stc
mov
aaa
add
jg
lods
add
or
add
sub
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
adc
inc
add
inc
add
inc
