sub
xchg
mov
push
rcrl
sub
cltd
and
cltd
mov
mov
xchg
rcl
jmp
cld
lret
dec
mov
inc
mov
test
pop
xchg
nop
ret
pop
inc
sbb
and
sub
pop
cmovle
xchg
pop
movsb
xor
lahf
jae
or
je
cltd
dec
test
mov
gs
mov
mov
mov
mov
push
in
test
lret
add
fsubrl
push
fisttpl
stos
push
out
push
je
mov
int
xchg
addr16
inc
cmp
aaa
push
mov
and
inc
subb
lcall
and
jle
fidivl
lret
xchg
in
jns
xchg
cmp
dec
mov
sub
push
roll
push
enter
sub
test
rcrb
roll
test
xchg
mov
fidivs
aas
sub
iret
lods
ds
mov
mov
sbb
mov
dec
sub
out
rcll
subl
mov
cld
mov
or
sbb
push
in
jo
loope,pt
mov
jns
insb
outsl
sub
daa
jp
sbb
push
loope
pop
pop
mov
sahf
outsb
cmpsb
frstor
loope
xchg
dec
mov
or
jle
cwtl
subb
outsb
rcr
jnp
lods
inc
pushf
add
jg
and
int3
hlt
fwait
sub
sbb
dec
xchg
fwait
jg
dec
adc
stos
ss
cmpsb
mov
insb
dec
jo
pop
and
mov
sub
adc
dec
cmp
cwtl
out
loopne
sub
xchg
dec
jecxz
das
push
test
call
sahf
xlat
mov
pusha
icebp
xor
test
repnz
mov
int
testl
outsl
mov
call
jb
pop
mov
cmp
imul
xor
jg
mov
or
adc
test
into
lock
adc
jbe
popf
jecxz
daa
test
lea
sahf
adc
sbb
call
ficoml
std
mov
or
push
mov
call
lahf
xchg
pop
sub
imul
fimull
rcrb
or
fsubp
mov
fdivrs
mov
mov
push
pshufw
sub
je
and
xchg
insb
in
pop
rcll
pop
push
xchg
roll
or
insl
dec
lds
js
xchg
mov
clc
cmpsl
orl
mov
fisubrs
mov
dec
add
es
mov
pusha
insb
dec
inc
in
fcoms
jne
push
jne
hlt
fisttps
test
mov
dec
xor
lods
ret
add
std
jns
js
mov
test
push
adc
shll
cs
cmp
mov
shl
and
adc
lods
pop
aad
xor
lock
imul
aam
das
push
mov
enter
xlat
das
call
std
xchg
and
popa
dec
clc
aam
addb
jecxz
aaa
or
popa
sub
push
cs
icebp
sbbl
sbb
pop
iret
xchg
repz
push
jae
iret
xor
mov
test
aad
out
icebp
sub
mov
les
inc
fs
cli
lahf
push
pop
in
stc
les
mov
fs
cli
int
cwtl
mov
shlb
lea
mov
cmp
andl
pop
pop
clc
sbb
dec
pop
xor
push
push
scas
sahf
in
mov
or
outsb
mov
fdivrs
out
pop
or
adc
jmp
add
pop
mov
popf
add
push
add
arpl
sub
mov
stc
and
pusha
mov
dec
dec
imul
or
stc
mov
xchg
test
lods
and
sub
aad
std
shr
stc
jbe
pop
fsts
jne
out
mov
hlt
mov
notl
clc
xor
and
add
sbb
aas
roll
jo
test
stc
in
mov
mov
mov
adc
popf
inc
lods
testb
add
push
sub
or
pop
xchg
scas
fs
rcll
cmp
lret
push
outsl
cmp
lds
fidivl
int3
cmp
sbb
cmp
pop
lcall
add
lods
pusha
cmp
js
pop
jnp
or
xchg
scas
adc
notb
dec
enter
scas
jmp
test
movsl
xor
popa
xor
in
imul
adcl
fldl
mov
mov
mov
inc
mov
push
cs
je
pop
push
and
fmull
inc
cltd
mov
push
dec
xorb
out
mov
mov
cmc
outsl
aaa
dec
sub
mov
jno
mov
cmp
stos
or
shl
mov
leave
jecxz
ss
stos
xor
stos
int3
aad
aas
insl
cmc
fisttpll
inc
outsb
aad
dec
test
cmp
jmp
cmp
xor
and
pop
jno
mov
mov
pushf
idivb
sub
xor
das
mov
cmp
pusha
jno
mov
ljmp
addr16
mov
or
icebp
jns
pop
repz
add
sub
aam
iret
jnp
and
cs
lock
pop
mov
fwait
outsl
clc
enter
xchg
lret
mov
loop,pn
bound
fisttps
dec
jl
ljmp
fdivrs
outsl
loop
add
sarb
cwtl
repnz
dec
xchg
in
ss
ret
push
sub
and
sar
jge
in
or
add
das
xchg
fcomp
es
inc
bound
pop
xchg
adc
out
inc
cmp
add
sbb
xchg
sub
std
test
movsb
das
sbb
adc
fadds
fistpll
imul
sbb
adc
movsb
xchg
adc
sbb
xchg
push
bnd
cmp
int
sub
or
test
dec
cwtl
je
insb
inc
adc
cmp
cmp
loopne
jbe
jbe
lcall
aam
lock
push
push
add
ds
mov
scas
addr16
adc
stos
dec
pusha
enter
ds
out
je
xor
imul
xchg
xchg
mov
loop
and
dec
out
movsb
enter
xor
dec
push
in
fcmovb
jl
outsb
rclb
repnz
lock
cmp
insl
ja
wbinvd
idivb
ja
cwtl
jg
pop
hlt
fldenv
popa
sbb
es
or
iret
adc
cmp
and
inc
adc
out
cmpsb
aaa
cs
fnstsw
insl
jns
in
rcrb
mov
outsb
into
andb
cltd
pop
pushf
mov
test
daa
jmp
sbb
mov
pop
pop
nopl
pop
mov
mov
ljmp
push
pop
in
mov
ret
in
pop
fdivrs
fs
dec
or
ljmp
mov
movsb
push
mov
mov
cmp
push
cmp
clc
lea
dec
cmp
addl
lcall
cmpsl
repz
pop
push
xchg
pop
lods
sbb
cmc
fsubl
mov
repz
les
push
cmp
adc
dec
sub
insl
xchg
push
mov
lock
mov
ja
cli
lret
mulb
push
mov
mov
fistpl
jle
bound
push
adc
cs
ljmp
cmpsl
xchg
sbb
lea
pop
sub
int3
pop
jp
aas
pop
adc
ss
mov
insb
sbb
fdivrs
push
xor
mov
xchg
mov
icebp
mov
push
mov
das
test
add
inc
inc
rcrl
shll
jae
jle
mov
scas
aaa
pop
sbb
repz
sub
cmp
mov
lods
rorb
int3
sub
out
xchg
cli
cmp
or
add
shrl
jb
sbb
pusha
rclb
mov
repnz
xchg
xchg
jmp
scas
xor
jae
rcl
sbb
jns
pop
leavew
inc
jbe
sub
sbb
xchg
sbb
xchg
and
sub
xchg
pop
mov
push
pop
or
jl
push
repz
cld
cmp
inc
test
xchg
mul
dec
fnstsw
frstor
jnp
push
jge
and
addr16
jl
jne
repz
pop
lods
add
insl
xor
sub
or
pop
repz
xor
add
xchg
and
fwait
sbb
je
xor
in
lcall
lods
adc
rorl
push
cld
inc
loope
insl
mov
or
fsubl
clc
mov
rclb
insb
push
das
lods
jae
jae
add
dec
mov
cltd
xlat
loop
fs
fbstp
cmp
cmc
jmp
or
leave
xor
ret
int3
repnz
jb
and
inc
les
pusha
add
sarl
jmp
out
jo
lcall
pop
rcll
repz
enter
pop
pop
xchg
fisttpl
aam
jae
sub
push
shr
iret
mov
push
les
mov
stc
shll
lret
bound
sbb
xchg
mov
pushf
aaa
pop
aaa
pusha
cmp
jl
mov
fcmovu
xor
jne
inc
xor
jnp
lods
add
out
arpl
pusha
outsb
les
leave
push
mov
add
push
adc
mov
dec
mov
cmp
outsl
add
inc
mov
xor
sbbb
insb
pop
adc
adc
addr16
fsub
mov
add
xchg
inc
pusha
mov
inc
int
insb
mov
mov
aas
sub
daa
hlt
sbb
mov
lock
insl
xchg
or
es
xchg
subl
loopne
pop
push
adc
pushf
scas
mov
push
sub
sub
insl
test
dec
xchg
clc
pop
add
nop
or
aad
jns
sbb
stos
adc
pop
mov
sub
cs
or
jl
stos
mov
adc
test
push
out
jae
pusha
inc
pop
mov
xlat
out
sarl
mov
lods
std
lea
push
out
mov
fildll
or
push
cmp
test
fstpl
push
outsb
cmpsb
adc
push
mov
xchg
push
in
jmp
sub
xlat
out
push
xor
js
pop
sbb
into
xchg
ret
lret
enter
mov
cld
je
in
in
test
repz
xor
std
sbb
sub
dec
in
fldenv
mov
packssdw
lods
pop
test
nop
mov
scas
sub
fidivrl
sarb
rorl
add
jbe
bound
loop
cs
stos
dec
mov
in
xchg
cmp
xor
jmp
pushf
sub
mov
cmc
cmp
sarb
stos
xchg
mov
sub
ret
sahf
mov
mov
add
inc
jge
or
or
pop
inc
dec
popa
popf
ret
addb
xor
cmp
or
inc
and
adc
jge
mov
ret
mov
lods
pop
sbb
and
data16
cld
lcall
shlb
jl
ljmp
movsl
adc
add
shl
sub
int3
daa
aas
and
push
dec
shll
inc
in
pop
push
pop
das
xchg
pushf
adc
cwtl
xchg
lea
and
aas
sub
lods
loop
cmpb
in
jmp
sub
out
inc
cmpsl
adc
cld
pop
mov
cli
lahf
xor
rclb
xchg
or
push
fwait
repnz
sub
push
jmp
ja
iret
mov
add
pop
scas
pushf
stos
mov
xchg
lret
or
out
sbb
push
lret
sub
outsb
and
data16
cmp
pushf
mov
int
mov
cmp
cli
fidivs
inc
jecxz
cmp
shlb
xor
roll
and
or
mov
test
dec
sbb
sbb
jne
loopne
adc
or
imul
dec
shlb
mov
push
push
mov
aam
push
jae
xorl
mov
or
outsb
add
sub
cmpb
fcomip
je
pushf
add
xchg
pop
sbb
jns
adc
add
jmp
mov
jb
sub
mov
sub
cmpl
mov
and
jp
push
dec
push
xlat
lds
mov
mov
aam
pop
and
mov
add
xor
sub
adc
mov
test
cmc
ds
mov
pushf
xchg
cwtl
sbb
jnp
fnsave
push
sub
xor
mov
add
push
sub
cmp
jg
jle
mov
mov
adc
enter
or
ficompl
sub
fsub
int
dec
jno
aas
jge
add
sarl
cmp
sbb
cmc
clc
mov
jl
std
jnp
sub
cmp
jbe
add
and
add
cmp
sbb
sub
jbe
jecxz
lods
int3
xor
sub
lcall
daa
fimuls
mov
add
popf
mov
repz
in
mov
lods
sbb
adc
or
lahf
scas
sarb
pop
cmp
add
mov
mov
cmovb
iret
push
adc
push
inc
inc
fucomp
add
pop
pop
mov
out
aaa
xchg
jmp
mov
daa
lods
mov
aad
pop
icebp
mov
imull
pop
inc
popa
mov
lcall
int3
jl
xchg
rclb
mov
jmp
pop
ret
clc
xor
push
mov
daa
lahf
lea
pop
pushf
addr16
inc
cmpsb
loop
push
jmp
cltd
je
mov
mov
xchg
fisubs
mov
dec
or
dec
in
mov
loop
jmp
xchg
cmpsl
out
mov
mov
repnz
push
inc
or
loope
jl
sbb
jmp
fs
xor
repnz
in
mov
cmpsb
xor
cltd
test
jne
pop
mov
fs
fistpll
jp
stc
sahf
add
out
adc
aas
cmp
aam
sbb
repz
lock
negl
das
push
pop
gs
aam
ret
sbb
lods
mov
std
adc
cmp
cmp
call
pop
lds
jno
add
rcrl
hlt
push
jo
dec
pop
fwait
es
rclb
mov
ffree
push
mov
mov
dec
or
add
mov
push
push
push
xchg
je
mov
inc
jecxz
cmp
call
movsb
testb
cli
aad
ret
xor
loope
out
outsl
inc
popa
add
mov
leave
sub
add
and
bnd
sahf
daa
cltd
cmpl
aad
or
ret
cli
insl
jnp
imul
inc
arpl
pop
mov
enter
sub
lahf
add
inc
jmp
aam
sub
sbb
stos
jmp
outsb
idivl
dec
mov
jle
xor
stos
mov
fmull
sub
fistpl
and
aaa
sahf
mov
adc
or
std
mov
jnp
jge
jp
xor
imul
in
adc
aas
inc
sahf
je
mov
pop
lahf
inc
inc
iret
mov
insl
je
das
sbb
icebp
jecxz
push
test
arpl
cmp
fstl
in
adc
xchg
mov
push
inc
mov
mov
jg
push
inc
and
xor
dec
xchg
push
cmc
orb
jnp
dec
jp
push
xchg
movsl
inc
xchg
sbb
lock
mov
movsb
mov
into
add
sbb
dec
sbb
mov
mov
js
popf
arpl
mov
jge
movsb
scas
pop
adc
jae
jge
outsl
cltd
adc
inc
les
mov
mul
outsb
mov
mov
xchg
dec
sbb
in
lods
inc
sti
dec
jb
cmp
js
je
jns
loopne
pop
jl
mov
add
js
divb
cwtl
pushf
fimull
mov
dec
jle
cmc
inc
jno
sub
or
inc
push
js
jg
cmp
mov
mov
or
stos
repz
in
sub
mov
jmp
scas
les
lcall
lea
xchg
out
mov
xor
or
cld
or
dec
fdivl
pop
hlt
ljmp
mov
fs
mov
add
inc
mov
imul
addr16
inc
daa
shrd
int
aas
mov
icebp
cs
fidivrs
in
mov
push
mov
jno
dec
xor
and
push
dec
xchg
xor
mov
dec
or
add
jno
shr
dec
mov
aas
dec
inc
xor
rorl
fpatan
jmp
ljmp
mov
cmp
sbb
outsl
mov
xchg
pop
jp
mov
out
lret
xor
les
lcall
popf
loopne
movsb
pop
inc
xchg
mov
popa
dec
repnz
xor
repnz
jbe
stos
aaa
outsb
cmpsl
sbb
mov
xor
jbe
movsl
mov
inc
add
fdivs
imul
dec
stc
and
fldt
xchg
push
push
xchg
fcoms
add
push
cmp
add
lret
mov
cmpsl
push
push
lock
mov
inc
imul
adc
push
mov
fistpl
mov
in
int
mov
sarb
pusha
cmp
out
outsl
jg
inc
pop
inc
xchg
aas
shrb
pop
adc
stos
ja
mov
adc
mov
push
xchg
lock
inc
dec
sub
call
cltd
punpcklbw
mov
repz
out
jno
jg
cmp
mov
out
and
xor
sub
test
cmp
fistpll
push
add
jno
repnz
cltd
jg
sahf
jmp
je
ret
mov
jge
in
sbb
and
adc
aad
jmp
mov
into
push
pop
push
sub
mov
xchg
movsl
shrb
fldcw
mov
or
inc
lret
punpckhwd
pop
jae
cmp
jo
daa
nop
adc
jo
mov
and
xchg
lds
sub
rcrl
scas
outsl
fimull
pop
sub
movsl
mov
mov
test
data16
aas
cmp
or
or
ss
pop
xor
mov
jne
std
ljmp
mov
jbe
xor
and
lcall
push
rorl
cltd
and
mov
pushf
pop
out
pop
pop
test
int
dec
pusha
pop
pop
test
ret
dec
test
out
inc
mov
inc
fs
dec
ds
mov
fisubs
adc
shl
subb
mov
pop
push
xorb
jae
jle
loope
ja
inc
xchg
jecxz
stos
negb
or
je
xchg
xchg
lret
mov
scas
pushf
out
into
jmp
nop
cmp
mov
add
mov
push
jns
jl
les
scas
lods
jp
pusha
pop
xor
xchg
jbe
jecxz
orl
sbb
sub
loope
int3
xor
loopne
jo
repnz
pop
mov
dec
shlb
aam
xor
movsb
ja
insb
fdivrs
or
ljmp
stos
mov
leave
mov
cld
outsl
xchg
rcrb
xor
cmpb
in
in
test
push
mov
stos
sbb
rorb
xor
lods
mov
aas
dec
cmp
pop
jae
jmp
into
mov
data16
loop
test
lcall
popf
dec
add
fistpll
mov
ss
add
int
xor
outsb
xchg
aas
bound
inc
push
jmp
in
imul
test
push
xor
mov
or
add
lds
sub
clc
rcl
outsl
fxch
xchg
ljmp
xorb
stc
mov
lcall
pop
fdivrl
repz
pop
cmp
shr
sub
xchg
mov
out
adc
loopne
aad
sbb
test
push
adc
inc
fnstsw
call
xchg
cmp
fidivs
and
xchg
dec
push
fs
sub
or
inc
addr16
ljmp
sbb
cmp
insl
ja
rcrb
mov
gs
jp
ror
and
jbe
mov
das
cwtl
add
xor
ret
sbb
int3
sahf
add
lcall
rolb
in
dec
aaa
fsts
mov
scas
arpl
fs
lahf
adc
mov
xchg
jnp
xchg
inc
ffree
push
popf
daa
xchg
iret
shlb
insl
fistpll
inc
mov
sbb
mov
jp
adc
xchg
es
push
inc
sub
inc
push
xchg
leave
mov
push
mov
mov
jno
cmp
jb
repz
jb
test
push
xchg
insb
and
add
int
xchg
bound
les
jb
mov
or
jbe
mov
push
or
and
int3
inc
lods
pop
xchg
mov
mov
sub
mov
cmp
jge
pop
jnp
xchg
out
or
or
ret
cld
ja
pop
mov
push
push
mov
jp
movb
jbe
xorl
inc
cmp
repz
push
repnz
xchg
mov
orb
adc
aad
cmpsl
in
sbb
arpl
xchg
jge
xor
out
nop
xchg
xlat
aaa
popa
arpl
movsl
jp
test
xchg
jb
aam
in
dec
popl
les
inc
xchg
add
es
mov
rcr
sbb
mov
dec
fs
cld
jno
sar
lods
adc
push
push
fs
repnz
mov
jae
out
and
cmp
pop
and
pusha
xor
pop
sahf
jae
pop
adc
in
push
jmp
mov
push
scas
aad
sub
lret
clc
insb
jg
popf
insl
dec
pop
inc
xor
inc
bound
loop
jbe
idivl
lods
fnsave
ja
ja
movsl
cmpsb
xor
add
jo
in
fsubr
roll
cmpsl
or
inc
dec
lock
mov
mov
push
push
into
sbb
adc
enter
cmp
into
fmuls
cmpsb
dec
lcall
inc
add
pop
in
fdivp
pop
inc
mov
jmp
paddsb
ss
push
mov
push
in
xchg
jbe
dec
popf
enter
int3
outsb
push
insb
or
mov
pop
cmp
inc
mov
icebp
dec
movsb
inc
pop
add
add
das
das
jl
sub
and
test
and
sti
cmp
pop
mov
inc
sbb
in
notl
jb
jecxz
loop
cmp
lret
sbb
jb
enter
popf
das
adc
cmp
out
inc
xchg
loope
jb
pop
adc
in
fsubrp
icebp
pop
je
mov
or
dec
cmp
lret
jl
js
rclb
pop
sub
insl
mov
int3
sti
adc
jmp
pop
xor
dec
and
jnp
pushf
xchg
out
sbb
clc
outsl
pusha
popa
aam
mov
aad
insb
mov
jnp
andb
dec
xchg
xlat
stos
js
add
and
cltd
sub
sub
dec
or
aas
sbb
jge
ljmp
xchg
push
pop
jo
es
mov
loopne
test
lret
out
or
ret
mov
add
lock
int
pop
push
int3
fsubrs
lret
pop
mov
in
popf
ret
push
adc
lods
inc
dec
xor
push
sti
insl
fidivrs
jb
inc
or
out
mov
pop
sarb
nop
mov
xrelease
movsb
inc
mov
or
sub
jmp
cmp
dec
xor
sbb
movsb
xchg
out
dec
xor
push
hlt
and
adc
lds
arpl
dec
mov
xchg
mov
testb
push
mov
push
sti
daa
fs
and
xchg
lock
scas
ds
cltd
push
imul
loop
das
idivl
insb
cmp
test
xor
popf
pop
jo
ds
push
dec
jmp
pop
dec
outsl
cltd
cmpsl
ss
js
inc
stc
or
and
arpl
mov
jb
sub
or
loope
lret
jae
ret
inc
daa
or
jp
arpl
sti
cmp
xchg
inc
out
adc
out
sub
idivl
lcall
pop
outsl
jmp
xchg
ljmp
lock
movsl
fwait
and
leave
cwtl
xor
or
fwait
stos
add
xor
pop
je
dec
aas
xchg
inc
in
test
pop
test
or
fwait
lcall
mov
ficompl
push
jbe
jb
shrl
jmp
sarb
sbb
jne
mov
fstpl
mov
fwait
and
push
inc
xchg
lds
cwtl
push
adc
shlb
popa
hlt
cli
sub
nop
int
xor
and
xor
ds
mov
jecxz
ret
sbb
fsubrs
adc
pop
lretw
dec
pop
mov
jns
cld
in
or
lds
push
int3
addb
pop
xor
jae,pt
jae
sub
lock
or
in
pop
cmp
xlat
filds
je
arpl
push
cltd
adc
or
pop
out
dec
mov
loope
data16
ss
mov
stos
shr
adc
adc
repnz
cwtl
pusha
cwtl
scas
mov
push
js
push
repnz
loopne
rclb
aaa
push
imul
inc
inc
xchg
in
cmc
fdivr
sbb
push
pop
xchg
sub
addr16
repz
movsl
dec
ss
push
mov
enter
mov
fs
leave
in
inc
pop
and
scas
bound
inc
push
ret
mov
add
mov
sysexit
cld
ret
cwtl
std
imul
inc
sub
push
push
xlat
aas
nop
dec
insl
incb
adc
daa
bndldx
fs
fisubl
sbb
mov
into
or
mov
add
out
inc
push
and
js
aaa
lods
inc
inc
cmpsb
test
xor
les
ret
mov
cmp
jno
push
test
add
jle
sbb
adc
and
mov
clc
clc
stos
mov
pop
pop
decl
adc
dec
sub
sub
push
subb
add
xchg
movsl
cmp
inc
mov
movsb
pusha
cltd
inc
sbb
fnstcw
or
inc
lea
inc
cmpsb
ljmp
jle
cmpsb
cs
xor
mov
pusha
jo
lret
jns
xor
aas
push
adc
add
pop
movsl
xchg
mov
aaa
sbb
jnp
xchg
cmc
shl
dec
jmp
mov
faddp
xor
bound
inc
mov
jns
les
push
push
scas
push
or
adc
jbe
loop
fbld
add
imul
pop
sbb
and
fadds
es
xor
fistps
inc
mov
xchg
rcll
das
inc
dec
fsts
push
mov
in
mov
inc
ret
icebp
pop
sbb
frstor
push
test
push
test
adc
lock
dec
dec
outsb
icebp
lock
gs
and
out
or
inc
or
pop
xor
adc
gs
fsubrs
mov
das
fisubrl
testl
imul
ret
out
cli
mov
xchg
pop
pushf
jecxz
mov
jp
out
sbb
sub
mov
cld
inc
mov
les
adc
xchg
sarl
mov
and
cmp
sbb
push
insb
pop
lret
mov
imul
pop
adc
sub
add
xchg
test
mov
sub
jg
or
imul
pushf
adc
pop
push
sbb
cs
aas
mov
mov
in
test
dec
and
jle
mov
push
loope
push
lods
add
testl
mov
xchg
sub
pcmpgtd
or
arpl
leave
xchg
movsb
xchg
sahf
adc
add
adc
iret
or
pop
inc
cmp
pop
shll
sub
out
aas
stc
fldenv
xchg
es
pop
pusha
mov
push
outsb
mov
movsb
inc
outsb
mov
push
pop
sbb
int3
pop
movl
lods
fcomps
mov
leave
push
ja
ljmp
and
loopne
shlb
pusha
lcall
fmul
inc
fists
testl
lock
pop
stc
dec
mov
enter
pop
cmc
sub
fistpll
movsw
jne
add
sub
sub
dec
movsl
ds
fisubl
mov
mov
lahf
or
negb
sbb
adc
cs
mov
mov
sub
jg
enter
cmp
xor
mov
xorl
lea
int
xor
cs
mov
mov
faddl
or
inc
rorb
andl
jg
push
adc
sarb
cmpsl
mov
mov
jae
in
faddp
adc
imul
dec
cld
ror
aas
dec
in
lret
stc
movsl
addr16
out
test
popf
stc
add
fdivp
cmpsl
cmc
dec
mov
jnp
xor
incl
mov
pop
mov
mov
insb
sbb
stos
cltd
cld
add
subl
cmc
sbb
xchg
stos
lret
ret
fisttpl
adc
lock
push
pop
fwait
lret
jo
ja
rorl
enter
aas
cmpsb
rolb
scas
pcmpgtw
xchg
mov
pop
insb
add
arpl
and
jo
pop
and
stos
sti
scas
add
sahf
mov
push
dec
enter
xchg
or
sti
icebp
adc
xor
pusha
cmp
adc
cmp
leave
mov
divl
js
fcoml
cmc
cltd
dec
int3
sbb
fstpl
loop,pn
fldt
cmp
aam
jb
fwait
dec
jmp
bound
jecxz
mov
mov
scas
imul
mov
adc
jecxz
mov
inc
sub
jmp
incb
ljmp
mov
xlat
sub
fwait
shrl
out
adcb
pop
test
mov
pusha
shll
xlat
jge
xlat
jbe
sub
adc
mov
sar
mov
jp
call
xor
cld
jno
sub
cltd
lods
test
popf
push
jle
clc
mov
pop
inc
and
in
pusha
sti
into
outsl
fldt
cltd
insl
jecxz
mov
arpl
sbb
outsl
mov
xor
jae
and
rolb
inc
insl
add
or
fbld
insb
jnp,pt
stc
xor
sbb
fldenv
xchg
lcall
push
nop
inc
ss
int3
add
inc
sub
cmp
ds
cmp
loope
mov
jg
or
lea
out
add
mov
test
mov
jne
out
stos
subl
jb
push
rcr
outsb
mov
sbb
outsl
sbb
xchg
ss
xchg
xchg
test
mov
popa
or
fcompl
lea
dec
fmull
out
jle
mov
daa
jmp
inc
insl
adc
push
lock
call
ss
cltd
or
pop
mov
repz
cld
dec
jns
add
lock
dec
flds
xchg
mov
jge
out
inc
cmovge
lods
xor
mov
test
int
mov
jo
jle
sbb
fdivrl
cmp
and
dec
pop
nop
aad
pop
sub
jp
out
inc
mov
or
pop
aam
inc
pop
sbb
xor
jge
mov
mov
sti
pop
dec
fidivs
cmp
rcrl
les
push
mov
notl
add
rcl
orb
xor
pop
xchg
imul
js
popf
in
lahf
or
out
cmc
inc
daa
call
mov
scas
repz
ja
push
cmc
xlat
or
cmc
das
aam
int
pop
and
dec
stos
push
xor
notb
sub
shl
aaa
cmc
int3
aad
xor
lcall
xor
negl
sahf
shl
cmp
inc
mov
clc
notb
xlat
sub
fwait
sbb
mov
mov
idivl
xchg
sti
cmpl
rclb
add
xor
cmpsb
out
xor
loopne
ljmp
stos
icebp
adc
aas
sub
fwait
addl
adc
fs
je
rcr
cltd
or
add
outsl
cmpsb
ljmp
das
std
ficoms
loope
lcall
cmpl
push
jge
fidivs
addr16
lret
fildll
xor
xor
ds
daa
cmp
and
sub
test
in
push
and
rolb
cmpsb
jmp
or
adc
pop
and
leave
mov
mov
fstps
scas
fwait
push
pop
dec
dec
push
int3
jle
orl
xor
into
cmpsb
lret
xor
jg
pop
xchg
mov
jbe
cmp
cmp
sub
sub
orl
stos
mov
inc
mov
sub
lret
xor
lds
test
stos
adc
stos
cmp
mov
movsl
cmp
pop
or
jp
push
in
inc
jmp
lea
inc
sbb
push
xchg
inc
loop
inc
test
or
sub
insb
cli
jno
jmp
sbb
push
jno
mov
jne
inc
call
pop
jg
add
mov
cmpsb
cld
popf
pop
add
jno
bound
hlt
lcall
adc
and
in
je
ja
sub
jmp
test
shll
and
add
in
xchg
out
dec
clc
lcall
xor
mov
sbb
pop
jnp
fsubr
pushf
cmp
scas
push
pusha
mov
sar
mov
shr
jg
daa
mov
fcoms
mov
ss
fsubl
outsl
loop
dec
repz
out
daa
adc
popf
xor
or
pop
cmc
add
jge
cwtl
push
cmp
into
aaa
dec
jle
sbb
lret
sbb
mov
into
mov
cmpsb
ja
test
fadd
inc
sti
ret
jl
mov
jecxz
cs
dec
sbb
popf
xchg
push
pushf
sahf
jmp
jae
and
sub
pop
mov
fdiv
xchg
in
shl
call
sbb
popa
or
jae
pusha
xor
in
out
add
pop
ljmp
xchg
or
dec
sub
hlt
mov
stc
adc
ja
jnp
inc
adc
xchg
outsb
in
xchg
xchg
imul
mov
aad
lods
add
idivb
in
cmp
ret
mov
outsl
mov
jl
and
addb
xchg
aad
cs
and
xchg
sub
mov
sub
push
sub
sub
test
cwtl
or
mov
jne
pop
push
adc
scas
mov
mov
cmp
jne
mov
daa
sub
mov
ja
pop
ss
sarb
pxor
notl
pop
sub
lcall
xor
add
xchg
push
mov
rcrb
mov
and
mov
movb
dec
push
adc
out
lods
mov
stos
aam
ret
jae
xorl
xor
call
jmp
dec
test
xor
and
pop
sub
stos
ret
push
ret
xlat
jmp
sbb
std
sub
jo
fsubs
mov
xchg
test
xor
test
pop
loope
shll
xorb
xor
call
push
cmp
inc
jno
js
insb
and
aas
iret
outsb
cmp
jle
adc
mov
push
push
in
iret
mov
sub
mov
in
aas
dec
xchg
test
mov
dec
sbb
push
aas
adc
cmp
incb
out
cmpsl
jmp
cmp
sbb
mov
outsl
or
dec
inc
popf
dec
jbe
add
push
dec
fiaddl
hlt
sub
adc
test
fdivl
jo
pop
in
test
cmp
jbe
add
push
icebp
adc
add
pop
push
sahf
punpckldq
sbb
add
imul
xchg
pop
mov
je
mov
xor
push
mov
inc
lret
orb
push
stos
movsb
loopne
arpl
mov
xchg
test
xor
mov
mov
jle
test
mov
lcall
xchg
add
out
sub
stc
shr
add
pusha
xchg
mov
jl
fwait
inc
adcb
or
aam
pop
bound
jp
lret
push
mov
daa
fwait
cltd
push
lcall
or
xor
mov
jp
jb
test
rcl
into
add
dec
cld
inc
nop
xor
and
pop
mov
cli
xor
cmp
out
shll
jno
ror
push
fstpt
cld
iret
sbb
jb
xchg
in
push
mov
test
cmp
daa
movsl
ja
adc
cwtl
ret
push
out
cmpb
ret
hlt
repz
orl
mov
bndldx
mov
out
xor
adc
lods
inc
jo
dec
xlat
add
or
xor
mov
in
ret
xchg
mov
sahf
and
leave
sbb
inc
jo
rolb
js
xor
mov
and
flds
shl
mov
or
psrlq
mov
out
js
out
imul
daa
xor
arpl
shrl
jecxz
imul
jmp
dec
je
sub
mov
xor
test
ja
xchg
sub
repz
push
pop
adc
inc
xchg
push
mov
out
xchg
gs
and
popa
call
mov
aaa
sub
sbb
pop
ljmp
out
dec
aaa
aad
sti
imul
push
nop
mov
inc
adc
mov
dec
cmp
cwtl
mov
mov
or
leave
cmp
sbbb
mov
adc
xor
mov
and
sub
scas
xor
shlb
cltd
fsubl
jg
sub
and
or
add
push
or
outsb
imul
fisubrl
cmp
push
out
adc
mov
cmp
dec
mov
aas
stos
push
mov
outsl
scas
sub
cmc
inc
push
jmp
popf
mov
std
lods
shrd
insb
xor
pop
pop
mov
lahf
faddl
cltd
clc
inc
push
or
rcrb
sti
add
and
leave
cmp
sbb
lock
lret
or
sbb
mov
outsb
xchg
push
xor
cltd
fildl
and
movsb
pop
into
cmp
ss
test
mov
push
dec
in
addr16
loope
adc
shlb
rclb
in
or
jno
scas
shll
fidivs
scas
fdivl
fwait
test
lahf
js
or
sti
inc
inc
ficoms
shll
dec
jmp
jecxz
mov
out
sub
xor
sahf
loop
push
mov
aam
jns
std
hlt
xor
rcll
xor
sbb
inc
cs
xchg
popf
adc
xchg
cs
xor
out
aaa
xchg
iret
pushf
fsts
push
sbb
mov
jmp
sub
ljmp
pop
pop
fimull
mov
sub
into
bound
cmp
mov
inc
xchg
or
cmp
jmp
sub
test
fbstp
cmp
sar
test
add
mulb
xchg
push
adc
addr16
loopne
bound
loop
add
out
cmp
fs
push
clc
adc
pusha
sub
test
jecxz
mov
sahf
adc
loop
es
mov
inc
xchg
vunpckhps
sub
add
and
rorb
add
lret
test
mov
adc
dec
cmc
push
xor
push
rolb
adc
adc
das
mov
sbb
dec
xorl
xor
dec
jle
pop
pop
push
mov
les
loop
addr16
lret
cmp
or
push
add
pop
mov
and
cmp
icebp
stos
in
aad
in
mov
cmp
dec
testl
ror
mov
js
outsb
mov
mov
mov
push
and
xorb
ret
sti
test
pop
jmp
pslld
mov
and
rol
out
ffree
and
mov
xor
arpl
mov
mov
and
mov
test
outsb
jecxz
test
push
or
stc
icebp
xchg
ljmp
xchg
clc
jl
mov
insl
pop
scas
adc
outsb
in
ficomps
dec
jge
pop
insb
gs
jecxz
incb
add
popa
insl
ljmp
mov
and
icebp
sbb
fmuls
mov
mov
pop
push
sbb
and
xchg
mov
ret
cmp
mov
rcrb
sub
mov
mov
gs
insb
sub
and
incb
sbb
sub
xchg
fadds
movsl
sarb
or
xor
fisubrs
idivb
cmpsb
icebp
fimull
push
outsl
outsl
in
xor
dec
cmp
or
push
mov
fmuls
mov
cmp
jle
mov
out
pop
dec
pop
jecxz
jle
mov
xor
ss
fwait
leave
cmp
push
mov
into
xor
mov
sbb
enter
sarl
xchg
adc
jae
std
mov
add
out
inc
jo
jns
mov
imul
mov
push
and
lods
inc
pop
dec
lock
or
data16
fidivrs
andl
js
lods
inc
rorl
dec
loope
sbb
test
orl
xchg
dec
es
pop
loope
inc
hlt
fstpt
add
sub
popf
cld
les
hlt
lahf
jl
int
sub
mov
pop
addr16
sub
outsb
loopne
adc
hlt
stc
xchg
out
loope
adc
inc
ret
xchg
push
lods
jb
jb
jo
jbe
add
lahf
mov
xchg
sti
pop
dec
movl
hlt
and
dec
arpl
or
hlt
add
call
movsl
jecxz
pop
pop
pop
lret
xchg
cmpsb
pop
hlt
fistps
and
in
inc
nop
sub
mov
idivl
add
mov
fcoms
les
leave
addr16
xor
hlt
adc
cmc
mov
add
loop
mov
out
pop
ss
fmuls
gs
xchg
iret
leave
dec
ja
in
and
aaa
scas
or
test
fnsave
mov
scas
enter
fstpt
stos
xor
dec
or
mov
out
fisubrs
aad
in
dec
outsl
call
mov
imul
push
xor
out
out
cmp
and
movsb
jle
lods
sub
lret
sub
pop
jmp
mov
fstl
jno
aas
xchg
in
mov
mov
mov
test
pop
inc
fstps
sbb
movsb
jno
insl
jmp
lahf
cmpsl
xchg
add
pusha
call
dec
mov
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
add
add
fwait
inc
add
add
test
add
add
add
add
