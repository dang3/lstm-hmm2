jg
add
in
add
add
add
imul
sub
add
mov
out
pop
cmp
cmp
imul
cmp
sub
imul
or
cmp
pop
aaa
push
sti
or
inc
cld
ss
add
mov
stc
sbb
outsl
leave
adc
and
cmp
repnz
mov
sub
add
out
fidivrs
push
pop
sub
cmp
sub
mov
mov
ja
mov
sub
cmp
cmp
add
or
std
outsl
fistl
adc
adc
sub
add
mov
pop
mov
mov
mov
rcll
pop
clc
pop
fldt
insl
and
xchg
add
sub
jbe
insl
outsl
jg
and
sub
mov
mov
into
sub
xchg
or
in
mov
adc
add
add
outsb
clc
add
frstor
add
out
or
sbb
sbb
jmp
fs
ja
mov
jae
repnz
adc
push
or
fisubrl
daa
add
pop
gs
ljmp
add
add
rcrb
mov
popf
fwait
jnp
mov
or
or
std
test
je
mov
movsl
sbb
push
cli
sub
mov
push
imul
sbb
pop
arpl
fidivrl
xorps
mov
jge
dec
or
dec
leave
mov
ret
pop
inc
lret
insb
fildl
rcrl
sarl
dec
pop
icebp
daa
pop
cld
imul
mov
insb
mov
fcmovbe
outsb
mov
push
movntps
or
rorl
inc
mov
or
rcl
sbb
jb
or
in
out
adc
enter
push
mov
ficompl
sbb
xchg
jnp
add
out
or
imul
js
out
pop
pop
xor
mov
jle
and
mov
aam
sbb
out
aas
mov
movsb
mov
ret
adc
adc
xor
stos
shrb
push
fsubl
sub
fstpl
and
adc
lea
or
dec
mov
orb
roll
fisttps
ret
inc
mov
shll
push
mov
and
cmp
adc
out
sbb
or
push
cmovg
shrb
or
lock
enter
mov
mov
stos
pop
mulb
sbb
adc
mov
push
fdivrl
test
icebp
lock
or
incl
testb
mov
rorl
push
mov
insb
cmp
orl
ret
push
mov
icebp
jp
outsb
int
sbb
decb
pop
adc
and
outsb
cltd
push
cmp
data16
push
cli
pop
sbb
jge
adc
imul
out
adc
mov
pusha
addr16
ljmp
mov
adc
fcomip
xor
sub
ficompl
adc
sbb
sarb
adc
mov
pop
sub
rol
movl
jbe
mov
cmp
sbb
fwait
mov
in
notb
out
add
int
dec
sbb
cs
cmc
sub
adc
test
pushl
xor
inc
clc
and
push
push
dec
dec
call
ss
lcall
inc
pop
out
mov
pushf
add
sqrtps
add
gs
cmp
jmp
add
adc
xchg
loope
mov
repnz
call
out
xchg
xchg
or
mov
push
jo
add
loopne
out
aaa
popf
imul
jmp
push
pop
test
mov
xor
and
add
push
rorb
test
pop
or
fistpll
call
push
fnsave
xor
adc
adc
lret
divb
icebp
dec
jno
or
push
push
push
or
jg
rorb
adc
pop
outsb
jae
add
pushf
mov
ficompl
push
add
pop
mov
xlat
add
mov
lods
shll
sti
mov
mov
or
repz
pop
sbb
incb
mov
ret
call
test
sub
insb
scas
xchg
fistpll
sbb
add
inc
sbb
push
add
in
xor
mov
mov
out
add
icebp
int
push
jne
mov
adc
adc
pushf
sahf
in
jmp
mov
inc
les
pusha
imul
shlb
pop
mov
adcl
cmpsb
lahf
addl
push
test
dec
mov
or
outsb
ljmp
ret
loope
loope
call
xchg
popa
mov
push
dec
iret
rolb
call
pusha
push
ss
rolb
and
or
or
nop
out
add
iret
packsswb
cli
or
sbb
inc
icebp
add
push
mov
mov
cli
and
or
icebp
loop
adc
adc
clc
adc
cmp
inc
mov
roll
push
push
in
push
ret
pop
roll
fistl
insl
push
or
xchg
orl
push
js
repz
add
adcl
xchg
out
mov
adc
sbb
push
sbb
mov
rclb
and
insl
mov
shlb
fistl
lock
add
push
in
aad
lock
or
mov
inc
cli
cs
mov
push
mov
push
xor
mov
insb
fwait
sub
popf
es
fwait
mov
mov
mov
adc
xchg
sahf
xchg
or
mov
mov
pop
add
cmpsl
push
fwait
pop
jnp
push
imul
js
movsl
out
mov
imul
arpl
and
fcomps
pop
mov
cmp
and
and
xchg
or
pop
aad
lock
lds
sbb
adc
mov
push
sti
sbb
push
pop
jmp
clc
clc
sbb
or
mov
lds
or
or
js
push
movb
sbb
icebp
out
push
mov
int3
inc
adc
mov
mov
cmp
push
add
cwtl
mov
icebp
sbb
imul
or
and
int
hlt
or
push
jo
push
lret
test
loope
sbb
mov
or
mov
in
xor
add
pop
pop
mov
push
clc
sub
adc
sbb
push
mov
adc
shll
push
hlt
bound
shll
sbb
rclb
dec
sarl
sbb
xchg
loope
cmp
sub
xchg
leave
mov
shl
xchg
and
push
push
mov
movsb
dec
jl
mov
or
cmpsb
or
cmp
ds
mov
sarl
test
repz
inc
xchg
ja
sub
mov
jmp
xor
push
and
icebp
cwtl
push
loope
popf
sbb
les
push
sbb
cmp
sbb
push
cli
sbb
push
jnp
mov
sbb
leave
cmc
movd
fists
pop
push
cmp
jo
in
bound
mov
pop
cmp
addl
outsb
clc
add
mov
push
mov
insb
ja
adcl
cmp
out
out
pop
sahf
loope
cmpsl
jns
lcall
adc
in
jno
xchg
call
add
data16
adc
push
xchg
add
into
mov
mov
notb
out
aas
ljmp
jb
xchg
pushf
adcl
out
mov
sbb
aad
xchg
roll
pop
in
aas
rclb
shll
pop
rcrb
ljmp
into
jecxz
cmpl
popaw
imul
sbb
bound
push
inc
lods
mov
push
inc
pop
call
loopne
sub
rcrl
sbb
push
add
mov
sbb
test
call
cwtl
jne
and
rcll
hlt
js
cmpsb
sbb
xchg
out
lock
sbb
ss
push
xlat
addb
mov
pusha
sub
sub
xchg
aaa
pop
and
cmp
leave
jle
jle
hlt
fisttpl
vmovdqu
fnstsw
mov
call
iret
cmp
sbb
outsb
cmpsb
mov
sbb
dec
cmpsl
cli
sbb
push
push
sub
adc
xchg
mov
or
ds
push
cli
sbb
add
sub
mov
nop
push
inc
sub
into
outsb
mov
ss
fildl
lcall
inc
add
jmp
cltd
das
loopne
fs
jo
cld
push
sahf
inc
sbb
inc
cli
in
pop
pop
call
out
sarb
push
stc
seto
push
jmp
pop
mov
pop
xor
mov
jb
fwait
pop
cli
repz
jae
sbb
push
cmp
xchg
push
push
test
sbb
js
or
xor
pusha
xchg
cmp
mov
pop
sub
insb
xchg
mov
adc
cmp
add
pop
scas
lcall
sub
mov
outsb
jg
mov
les
outsb
mov
add
xor
data16
add
insb
dec
or
std
mov
add
sbb
add
popa
mov
out
outsb
adc
add
xor
xchg
sti
out
es
jecxz
push
xor
bound
mov
loopne
leave
loopne
negl
fs
ss
push
push
add
mov
pop
adc
inc
lds
aas
stc
arpl
ret
cmp
adc
or
ret
sahf
push
xor
loopne,pt
out
aad
add
test
xor
arpl
testb
mov
push
int
lods
xchg
mov
scas
dec
push
push
stos
sub
cltd
sub
xor
out
jae
ret
ret
jg
ret
xchg
pop
in
and
dec
pop
data16
ljmpw
test
stos
jmp
inc
adc
push
cmp
andb
adc
mov
sbb
xchg
mov
cmp
test
subl
cmpsl
xor
pop
sbb
dec
xchg
push
dec
mov
add
mov
and
subb
dec
in
leave
push
adc
int
and
mov
jmp
roll
shrb
pop
popf
inc
arpl
xchg
in
adc
stc
sbb
lea
int
mov
add
scas
test
push
mov
inc
inc
lods
bound
xor
cltd
movsl
rclb
es
sbb
popa
pop
sbb
add
add
hlt
add
notb
add
call
rcr
add
dec
nop
and
pop
ficompl
les
jl
or
mov
and
and
fsubl
lods
adc
jo
jo
ret
adc
cmp
inc
int
or
mov
add
sbb
and
add
xor
out
and
mov
test
ret
pusha
sub
mov
cmp
ret
fwait
mov
xchg
decb
or
bound
repnz
inc
mov
loopne
push
enter
push
mov
lcall
or
in
js
stos
jne
xor
sbb
mov
push
dec
insl
inc
mov
push
test
loope
and
cmp
sbb
cvtps2pd
cmp
add
push
inc
mov
sarl
arpl
push
mov
ljmp
leave
nop
sbb
fadds
pop
push
imul
scas
into
dec
rcr
mov
push
int
mov
add
rolb
sbb
inc
cmpsl
fnstcw
jo
leave
xchg
les
push
pop
adc
addr16
pop
add
xchg
add
inc
aas
and
incb
shl
dec
jg
sbb
mov
push
inc
rcrb
mov
lds
xor
test
ret
cmp
in
shl
xor
pop
mov
cs
or
pop
insb
dec
rclb
jp
loopne
cmp
push
punpckhbw
subb
scas
cmpsb
or
sub
cmc
rclb
inc
imul
mov
mov
lret
pusha
roll
bnd
pop
jmp
call
add
mov
dec
push
enter
sbb
ret
mov
pusha
push
xchg
hlt
mov
negl
push
mov
xchg
xorb
pusha
loopne
sbb
add
lcall
adc
lock
inc
aas
shlb
and
rorb
pop
mov
xchg
cltd
mov
cmpl
addl
shlb
mov
sbb
aas
insl
test
cmp
push
sbb
rclb
jle
sub
push
loop
popl
mov
inc
into
fcoms
leave
std
add
aad
add
mov
sub
mov
sub
xchg
jecxz
dec
stos
int
imul
data16
xorb
pop
sub
test
add
jo
adc
out
inc
inc
or
add
iret
mov
mov
sub
mov
jg
sbb
mov
or
add
push
inc
mov
sbb
ret
outsl
push
or
dec
jo
cmp
stc
pop
into
lock
cmc
sti
imul
mov
and
xor
inc
add
add
adc
mov
sub
rorl
sub
push
pop
shr
unpcklps
cmp
int3
pop
mov
mov
adc
les
rorb
enter
je
sub
popa
xchg
pop
dec
xor
cmpl
and
repnz
or
cs
ficoml
push
call
cmpsl
sbb
xlat
lds
cmp
add
push
ror
adc
cmp
mov
mov
int3
popa
sbb
out
mov
push
add
sbbb
or
adc
and
inc
sub
fcoms
push
push
inc
pop
popa
sub
test
adc
insl
inc
das
sbb
pushf
pinsrw
enter
ret
dec
dec
add
lock
sbb
mov
or
inc
inc
mov
xor
sub
mov
in
sbb
clc
adc
push
or
rcll
xchg
sbb
push
xchg
sbb
mov
rolb
xor
fdivrs
or
fs
shrb
push
cmp
imulb
mov
insl
add
or
in
pop
push
insl
add
pop
or
movsb
rclb
daa
dec
sbb
add
push
cwtl
lock
pop
frstor
xchg
pop
sbb
fisubs
pop
or
cli
repnz
lahf
or
mov
jg
clc
aaa
push
sub
cmpsl
sub
push
mov
dec
inc
call
rcl
sar
mov
inc
mov
sbb
inc
inc
punpckhwd
or
mov
cmpsb
mov
rcll
sub
imul
in
mov
cmp
mov
add
movsb
adc
adc
or
leave
mov
inc
mov
lock
test
int3
add
inc
dec
sub
hlt
test
mov
test
cli
adc
cmp
mov
mov
sub
inc
scas
xor
xor
rcl
aaa
push
sbbb
xor
ret
xor
mov
sbb
sahf
sub
jno
or
test
mov
scas
push
jb
rcll
push
rorl
fs
loope
inc
sub
mov
in
dec
fisubs
mov
push
idivb
jle
fcmovnb
shll
sbb
push
mov
jno
xor
jp
pop
in
jno
xchg
sbb
inc
ret
enter
and
inc
and
push
adcl
repz
les
sbb
push
cmp
mov
adc
sub
movsl
add
or
push
mov
mov
sbb
loop
aad
cmpl
test
xor
sbb
pop
clc
mov
xchg
shll
sbbl
adc
sbb
je
testb
addr16
lock
inc
loope
sbb
insb
iret
xchg
fildl
xchg
xchg
neg
mov
test
jbe
mov
cli
sbb
sub
stc
or
mov
mov
push
pop
sbb
push
add
inc
mov
shl
or
mov
pop
lret
mov
lock
inc
mov
mov
inc
test
stos
orb
icebp
insl
enter
inc
add
fs
stos
mov
es
inc
mov
and
or
or
out
lods
push
jo
adc
cmp
test
mov
add
cmp
xchg
push
lock
subb
ret
adc
adc
push
jmp
xor
adc
rcr
add
jbe
mov
mov
out
test
xor
test
push
push
xor
mov
cmpsb
scas
jle
or
scas
pusha
mov
shlb
ljmp
add
xor
stc
inc
leave
loope
mov
das
pop
xor
adc
sbb
cmp
pop
cmp
in
add
adc
and
out
rcll
sahf
inc
adc
inc
and
jecxz
mov
jne
aas
test
popf
jne
adc
mov
xlat
adc
scas
lods
cmp
xor
mov
cmc
push
mov
call
mov
xor
cmpsb
das
sub
add
shr
sbb
push
es
cmp
or
sbbl
or
out
xor
xor
js
push
fidivrs
mov
movsb
leave
js
fisttpl
mov
mov
sbb
inc
xor
pop
mov
or
mov
hlt
mov
inc
push
adc
faddp
or
dec
loopne
inc
mov
je
add
outsb
aad
adc
cwtl
repnz
add
mov
sbb
jbe
push
xchg
bnd
or
or
fidivrl
test
and
jmp
inc
or
push
mov
inc
rcl
cmp
or
or
jb
cmp
and
pusha
pop
cmpsb
mov
add
push
sbbl
cmp
dec
lea
mov
sbb
adc
sbb
ret
andl
dec
pop
adc
mov
rcrb
push
pop
adc
push
mov
adc
inc
and
sahf
jmp
jmp
mov
adc
movl
xor
into
jnp
cmp
or
sbb
cmc
xor
scas
rclb
or
mov
int
adc
pop
pop
xor
gs
mov
push
adc
mov
int
pop
scas
dec
insl
adc
andb
sbb
shll
sub
daa
mov
mov
cmp
jne
out
decb
arpl
je
sub
shrl
ret
adc
pushf
jo
mov
add
test
cmp
aam
out
push
dec
shlb
push
xchg
jb
lock
aas
mov
push
push
dec
pop
mov
loopne
hlt
fwait
ret
push
and
xor
mov
or
js
repz
pop
loope
fisttpl
or
or
jnp
jb
test
add
pop
sub
pop
push
lds
mov
dec
cmp
dec
xchg
jno
lret
jbe
pop
rcl
mov
jo
leave
mov
shr
jno
xchg
addl
add
jo
cmpsl
out
lret
add
dec
push
mov
inc
add
push
jnp
push
test
mov
lret
mov
mov
or
outsl
test
pop
push
push
decb
outsl
xchg
and
shlb
dec
out
pop
cwtl
scas
cmc
ljmp
push
stc
push
js
mov
pop
push
sbb
loopne
adc
ds
test
adc
adc
sbb
push
mov
imul
push
jne
xor
orl
adc
pop
mov
cli
adc
shll
call
cmpl
push
and
add
shufps
mov
adc
adc
inc
in
and
nop
cmp
pop
test
push
inc
xchg
xchg
test
cmp
sbb
jp
inc
mov
sbb
push
inc
test
pusha
mov
pop
sbb
push
lret
cmp
sar
pmulhw
mov
subl
push
xor
or
fisubrl
js
insb
inc
scas
scas
pop
jp
or
push
nop
jb
add
cmpsl
or
dec
stos
mov
test
pusha
or
fwait
mov
mov
shll
adc
fisttpll
insb
sub
pop
sub
pushf
or
test
xchg
sbb
add
data16
jge
sbb
sub
mov
test
cmp
mov
fsubl
dec
scas
adc
je
out
lahf
adc
xchg
inc
in
test
dec
inc
pop
fwait
lea
pop
mov
cmc
shll
cmp
test
dec
dec
sbbb
mov
xor
or
pop
leave
sbb
call
hlt
xchg
dec
pop
mov
nop
scas
push
popf
adc
push
push
ljmp
pop
jnp
sbb
rorl
ret
cmp
dec
jns
cli
pop
js
fcmovnb
imul
ss
xlat
sbbl
pop
fldl
push
xor
roll
daa
sbb
jne
adc
push
or
ss
popa
cmpl
sahf
call
ficompl
rcrl
push
sub
cwtl
rcr
test
xor
sbb
and
scas
mov
test
xor
jo
loopne
xchg
loop,pn
imul
shll
add
lock
inc
outsl
mov
or
bound
lods
mov
inc
or
aam
jp
inc
push
push
add
inc
xor
insl
xchg
cs
jbe
add
push
mov
ja
call
xor
js
or
dec
jbe
and
subl
out
mov
data16
inc
jp
adc
pop
mov
sbb
dec
sbb
repnz
push
andl
imul
leave
out
mov
pop
and
sub
inc
daa
out
sub
popa
js
pop
call
pop
push
arpl
sub
in
das
dec
xchg
mov
aas
add
insb
mov
fsubl
cltd
inc
mov
xchg
stc
xor
sub
sti
dec
testb
bound
push
dec
xchg
je
pop
int
cmpsl
cmp
daa
or
popf
inc
test
hlt
or
std
iret
push
inc
pop
sbbl
cmp
in
je
cmc
aas
adc
adc
sahf
imul
sbb
adc
mov
fcom
mov
push
inc
inc
call
ror
inc
or
leave
xchg
mov
insl
inc
shll
cmp
push
push
xchg
or
lock
adc
xchg
shl
shll
dec
mov
cmp
push
sbb
mov
ret
cmpsb
push
lods
or
bound
push
or
stc
sbb
cmpl
inc
and
das
popa
push
and
push
push
sub
call
ss
add
dec
jmp
lea
psadbw
cmp
push
mov
push
pop
cltd
loopne
add
test
jp
lcall
or
cmp
adc
or
dec
es
and
mov
lea
shlb
dec
insl
daa
inc
adc
lds
and
arpl
dec
cltd
pop
sub
stos
adc
push
push
test
aad
xchg
jl
aam
pusha
push
sub
divb
and
adc
sub
add
or
add
and
mov
push
sub
dec
cmp
shll
mov
mov
rolb
orb
rclb
mov
pop
sbb
mov
xor
push
sub
movsl
cli
insl
das
rol
out
pop
in
push
scas
pop
loope
aad
add
or
xchg
add
ficoml
test
movsb
rcrl
push
or
jb
jb
arpl
inc
add
mov
xchg
or
popa
rolb
int3
mov
test
adc
jbe
shrb
pop
mov
inc
repnz
repz
mov
push
push
roll
clc
aam
dec
push
fisubrl
push
push
pop
cmp
orb
mov
stos
stos
mov
cmp
sbb
sbb
sbb
inc
jae
sub
loope
sbb
push
jne
push
xchg
test
and
nop
imul
dec
outsb
ss
fsubrs
adc
pop
push
jae
les
fisubrl
adc
sub
roll
push
and
jb
mov
mul
pushf
cmp
adc
loop
jge
mov
repnz
movsb
cmpsl
pop
in
push
sub
push
rcll
shlb
in
jp
popa
mov
xorl
je
mov
addl
xor
imul
sub
jo
or
and
or
sbb
fs
fwait
push
sbb
push
mov
lds
add
cli
enter
sub
popf
pusha
jne
dec
jo
adc
out
ret
push
push
leave
and
xchg
cwtl
push
leave
js
rorl
rorb
addl
push
dec
mov
dec
inc
test
mov
aam
mov
jae
and
xchg
loopne
jecxz
sbb
das
xchg
add
aad
pop
pusha
cmpb
shr
pop
pop
cmp
xlat
add
sbb
ss
arpl
cwtl
mov
sbb
push
mov
rol
stos
je
jmp
adc
sub
addl
sbb
mov
rcrb
jns
dec
movsl
ljmp
stos
jbe
cmp
out
add
pop
test
pop
dec
and
outsl
cmp
jecxz
stc
roll
inc
cmpsb
push
mov
adc
mov
aaa
out
loope
jle
add
xlat
pop
jp
icebp
mov
jb
ljmp
xchg
icebp
call
scas
sub
pop
orl
je
leave
sbb
xchg
jo
mov
push
push
cmpsb
outsb
xor
jo
xor
jno
and
and
push
les
stos
ds
jne
loope
add
push
pop
inc
jge
or
add
fsubl
test
pusha
sub
cwtl
aad
mov
arpl
cltd
lock
stos
pop
imul
inc
addl
or
loop
dec
cwtl
sub
xor
inc
inc
repnz
negb
cmp
adc
or
and
adc
cmp
lahf
fs
or
adc
les
out
push
jecxz
aam
cwtl
out
sub
sbb
sbb
jb
cmp
dec
push
xor
jns
jo
and
popa
rorb
lods
sbb
arpl
stos
xor
adc
pop
roll
sbb
dec
inc
sbb
and
push
lret
adc
insl
rcll
cltd
test
pop
ret
add
adc
arpl
xchg
push
sub
pop
add
and
and
cmp
or
and
pop
loopne
push
dec
inc
outsl
or
pop
cmp
pop
sbb
shrl
in
rcrb
arpl
xchg
into
mov
sbb
adc
jno
enter
mov
mov
push
adc
inc
andl
mov
sub
lret
decb
pushf
stc
mov
and
mov
nop
adc
xor
ror
push
push
insb
or
mov
aas
les
fidivrs
or
jnp
in
fcoml
push
pop
rcl
jbe
sbb
clc
mov
inc
sub
ja
dec
nop
testb
inc
inc
xchg
adc
or
pop
cmp
inc
das
pop
adc
jae,pt
push
adc
add
clc
ficomps
je
jmp
add
roll
roll
xchg
ret
andb
jo
inc
out
jns
sbb
mov
jnp
mov
leave
test
rolb
ljmp
sbb
mov
jb
movsl
fstpl
push
xchg
push
or
mov
adc
sbbb
sbb
hlt
sbbb
sbb
pop
stos
xchg
sbb
or
es
and
pop
stos
lret
loopne
push
fwait
or
mov
mov
pushf
pusha
ss
pop
push
adc
into
push
push
pop
ss
ljmp
add
pusha
loop
mov
add
cmp
imul
jns
in
pusha
clc
mov
adc
aad
lds
sub
fnstcw
in
xchg
fs
add
loope
adc
pusha
mov
mov
lret
inc
pusha
sbb
insb
add
loope
pop
adc
negb
leave
add
mov
stos
mov
push
mov
sub
cmp
dec
cmp
jmp
sbb
out
sub
scas
add
push
mov
mov
push
test
sbbb
sar
push
xor
shlb
insb
pop
mov
xchg
jo
jp
adc
cvtps2pd
ds
in
inc
mov
cmp
adc
or
rcll
jp
jp
push
adc
pop
cmp
adc
loopne
cmp
repz
cmp
ror
jle
mov
push
adc
push
mov
jae
lahf
fcmovb
push
es
repnz
sbb
pop
aad
jl
ret
popf
inc
sbb
mov
iret
mov
jecxz
pop
sbb
inc
popa
jae
mov
lds
rol
dec
jl
je
cmpsl
inc
adc
adc
or
enter
test
sbbb
sbb
jb
icebp
movb
int
scas
inc
shll
scas
adc
aam
rcll
add
mov
mov
imul
cli
ret
add
sbb
cmp
and
test
nopl
xlat
adc
mov
adc
test
pusha
mov
push
mov
cmp
adc
mov
outsb
adc
inc
sbb
push
adc
loope
push
jmp
popa
mov
push
cwtl
xchg
test
adc
lods
push
xchg
rcrl
mov
dec
fsubl
cmp
mov
shll
pusha
and
adc
cmp
fists
addb
push
pop
or
subb
mov
inc
push
int
sbb
dec
stos
ds
inc
es
aas
test
add
aam
out
sbb
push
pop
cmp
testb
push
jb
push
jecxz
fildll
mov
xor
inc
add
add
stos
mov
js
pop
addb
iret
stos
rcl
push
sbb
jle
push
jo
shl
and
cwtl
pop
adc
les
mov
pushf
loope
pop
dec
ja
outsl
dec
or
lret
push
mov
push
push
addb
add
rorb
xor
jmp
push
adc
bound
sbb
fildll
lcall
mov
jo
jp
pop
popf
add
mov
cmp
inc
mov
xchg
dec
and
jo
dec
andb
jo
mov
mov
push
add
insl
lods
pop
in
scas
aaa
test
fiadds
imul
cmp
mov
inc
sbb
dec
push
inc
mov
push
rclb
loope
sbbl
into
or
bound
sbb
push
loopne
mov
scas
dec
loope
roll
andb
cmc
add
pop
and
inc
sbb
adc
in
mov
mov
shrl
fwait
lahf
pop
or
mov
xor
xchg
jo
les
push
sub
and
sub
hlt
mov
es
mov
push
mov
clc
testl
jp
call
dec
cmp
andl
jnp
sbb
inc
inc
sbb
out
sub
adc
adc
mov
add
leave
or
mov
push
loop
sbb
mov
repz
cmpsl
push
pop
jle
pop
hlt
lds
sbb
adc
mov
inc
cmpsb
test
testb
xchg
xor
xchg
sbb
xchg
push
shrb
push
mov
push
or
aaa
push
mov
into
adc
inc
lock
sbb
cld
stc
rorl
sub
cmp
pop
mov
jge
and
mov
repnz
lock
add
add
mov
fs
push
cmp
lods
mov
inc
rcrl
push
adc
adc
mov
mov
or
dec
paddusw
testb
mov
mov
push
jge
pop
cmp
sub
sbbl
sub
mov
jge
cmp
push
push
stos
push
xchg
push
mov
cmp
jnp
jns
subb
sub
pop
bnd
rclb
cmp
sub
shlb
sbb
dec
ret
sarl
aam
jno
bound
stos
sbb
mov
rcll
pop
pop
pop
adc
sub
xor
and
cmpsb
fs
stos
scas
sub
dec
mov
lods
pop
notb
sub
cwtl
xchg
rcll
or
xor
mov
mov
cmpb
and
or
ret
int3
pop
cmp
mov
imulb
inc
sub
push
popa
mov
xchg
rorl
cmp
sbb
rol
dec
mov
pop
adc
add
test
inc
inc
popf
dec
cmp
cs
push
cmp
jo
inc
and
subl
xchg
loopne
sub
sub
dec
pop
add
xchg
lock
ficomps
es
sbb
push
add
mov
sbb
mov
cmp
jo
cltd
jmp
sbb
mov
or
ffree
scas
fwait
cmpsl
sbb
add
sub
xchg
rolb
in
or
stos
shrl
out
add
sbb
ret
ret
mov
enter
ret
xchg
mov
xchg
push
push
ret
adc
insl
dec
sbbb
scas
mov
jecxz
push
push
sahf
gs
ljmp
lret
sbb
push
adcl
into
adc
sbb
out
stc
clc
push
cmc
loopne
mov
jne
jne
and
rorl
movsl
in
ret
adc
fists
jne
push
push
enter
sbb
push
lcall
add
mov
sbb
gs
cmp
pop
mov
mov
mov
push
sbb
stc
jmp
rol
incb
int
sub
mov
xchg
xor
push
mov
es
je
mov
push
push
adc
pop
mov
rorl
addl
rolb
lods
adc
pop
notb
dec
or
push
mov
outsb
xor
iret
push
sub
sub
add
adc
cmp
es
adc
inc
lds
mov
and
subl
test
push
test
add
loopne
sub
lods
outsb
and
test
into
call
lahf
daa
add
sub
push
js
cmp
dec
dec
icebp
rclb
mov
cmp
dec
into
ljmp
cmpsb
or
repnz
adc
cmp
or
aad
hlt
ret
or
add
in
add
pop
push
les
inc
test
pop
loopne
lock
adc
adc
sub
std
mov
and
insl
pop
mov
inc
jo
mov
enter
adc
sbb
out
mov
inc
imul
sub
pop
sbb
les
sbb
push
pusha
cmp
loopne
loope
popf
cmp
sub
out
in
cmp
fwait
cwtl
cli
lgdtl
mov
leave
sbb
push
gs
inc
inc
call
testl
inc
les
cmpsb
gs
add
adc
adc
cld
stos
clc
sbb
test
sbb
mov
push
les
and
adc
mov
imul
or
addr16
xlat
sub
idivb
cmp
lods
xor
sub
pop
cwtl
or
jg
loope
rcll
adc
or
adc
sbb
dec
in
or
shrl
adc
sub
into
jnp
push
and
lods
jge
pop
in
inc
cmp
loopne
add
inc
dec
push
sbb
push
dec
shrb
repnz
mov
push
insl
mov
xchg
pop
rcll
les
inc
push
adc
lock
add
xchg
notb
dec
call
inc
xor
inc
push
negl
adc
pop
rolb
or
dec
clc
or
sub
into
insb
sub
shrl
push
sbb
pop
jnp
sarb
sarb
push
pop
loopne
jl
hlt
sub
sbb
push
fsubr
mov
sbb
repnz
mov
andl
jae
and
aas
aam
mov
pop
lods
and
mov
push
sbb
sarl
dec
dec
imul
sub
fisubrs
mov
outsl
lea
lret
jmp
sbb
cmc
test
sbb
push
xchg
inc
rcrb
dec
mov
cltd
loop
pop
stc
cltd
cwtl
mov
inc
or
cmp
mov
and
loop
and
int
push
and
out
pop
cmpsb
xchg
into
cmp
mov
sbb
nop
loopne
push
lcall
pusha
mov
sub
test
dec
sbbb
add
xor
push
or
push
push
cmpsb
or
mov
inc
xor
ja
push
fcmovnb
adc
or
ror
add
out
or
or
mov
adc
cmp
xchg
pop
push
ljmp
sub
and
inc
mov
add
out
xor
psubd
push
push
pushf
repnz
xchg
jb
imul
pop
icebp
je
mov
gs
pop
sbbl
sub
sub
mov
push
rol
push
rcrb
enter
mov
xor
ret
xchg
mov
mov
clc
add
je
jns
or
ljmp
dec
nop
clc
aad
adc
adc
push
je
popl
inc
add
call
adc
push
or
xlat
pop
cs
mov
pop
sarl
cmp
mov
dec
jne
sub
cmp
or
inc
xchg
lret
or
xor
mov
or
data16
push
leave
pop
mov
or
popf
xor
jb
push
and
repnz
sub
xchg
icebp
cmp
test
add
or
mov
push
xchg
xor
movsl
test
xorl
adc
adc
mov
imul
fs
clc
adc
xor
fsubl
sbb
adc
fistpll
int
cmp
rolb
jp
pop
xchg
repnz
out
adc
and
hlt
sub
rcl
mov
cs
xor
jae
xchg
sbb
jl
cs
das
bound
inc
cmp
xchg
or
jp
mov
addl
mov
divb
or
xchg
div
xor
push
addl
pop
pop
stos
cli
mov
es
jmp
in
sub
push
lods
rcrb
outsb
push
cmp
and
push
sub
and
adc
or
or
lahf
addr16
adc
fiaddl
push
sbb
adc
xchg
js
mov
jb
add
sbbb
fwait
insb
xchg
xor
xchg
sub
bound
loopne
push
sub
leave
add
int3
shlb
mov
or
push
or
mov
add
clc
cmpb
mov
out
mov
adcb
add
pop
or
add
daa
mov
add
mov
sub
push
outsb
out
adc
cmp
push
xor
push
ljmp
frstor
push
adc
jp
es
fiadds
xor
pop
sbb
or
rorb
andb
and
and
orb
jl
mov
je
mov
or
pop
and
adc
aam
dec
sbb
adc
add
mov
cmovno
imul
adc
pop
imul
sbb
lods
repnz
sbb
jecxz
push
dec
clc
lea
arpl
push
sub
sbbb
inc
add
js
ds
jbe
rol
pop
js
push
stos
mov
sbb
stc
push
test
inc
rcl
sbb
test
jo
jo
mov
sarb
xor
mov
sub
add
push
adc
mov
dec
add
cs
adcl
fcoms
or
pop
sbb
sbb
cmp
and
dec
mov
arpl
lds
les
mov
test
shrl
and
sti
sbb
mov
xor
inc
loope
or
or
ljmp
pop
sbb
xor
mov
sub
aad
jo
lcall
jmp
sbb
dec
mov
xchg
jmp
sbb
scas
push
rorb
adc
push
mov
jg
inc
cmp
mov
ret
or
xor
sbb
cwtl
sbb
insb
cmp
pop
je
imulb
out
adc
hlt
push
pop
rdpmc
mov
dec
insl
call
int3
movsl
out
push
iret
or
fldt
inc
lods
test
in
icebp
stos
pop
pop
push
adc
push
stos
ror
jb
jecxz
push
sbb
push
or
movsb
inc
cmp
sbb
mov
push
add
ljmp
pushf
fcoml
rol
js
mov
loopne
mov
outsb
mov
test
cwtl
or
cmp
mov
or
scas
xor
or
jns
lock
cmp
inc
rol
sti
pop
jae
imul
jecxz
ss
adc
cwtl
jnp
adc
jp
sub
add
mov
xor
mov
mov
lods
mov
call
sbb
rorl
insl
lret
push
cltd
mov
shrl
push
mov
sbb
or
inc
and
add
add
push
mov
push
fadds
jno
inc
push
scas
mov
sbbb
cwtl
mov
das
push
push
xchg
loop
adc
add
or
adc
xor
test
push
icebp
xor
das
xchg
std
or
or
aam
or
inc
jp
loopne
sbb
sbb
sub
jb
mov
jmp
add
sbb
jecxz
lahf
dec
push
rclb
sub
insl
cmp
or
push
push
sbb
inc
pop
into
ret
add
mov
xor
xchg
out
ss
add
sarb
dec
cmc
mov
or
hlt
or
fwait
push
push
cmp
push
mov
fiadds
cmp
add
ret
xor
jge
adc
add
aas
imul
sub
shrl
or
add
add
mov
adc
add
inc
test
int3
pushf
mov
sbb
mov
push
clc
leave
cmpsl
or
stos
adcl
stos
sub
sub
roll
aas
roll
sbb
push
push
or
es
push
jl
outsl
adc
sub
mov
rolb
clc
testl
inc
add
lds
ja
dec
xchg
sub
cmp
xor
inc
push
cmp
sbb
push
adc
push
xor
lods
lds
add
sbb
add
push
je
push
mov
pop
or
pop
adc
push
out
inc
adc
ret
add
imull
mov
js
pop
inc
cmc
or
ret
loop
inc
arpl
movl
andb
rorl
sbb
mov
xchg
ret
xor
pop
push
das
test
int
xchg
jge
inc
addr16
dec
ret
or
push
inc
ds
adc
addb
rclb
adc
fs
adc
jno
add
adc
into
aas
icebp
or
js
clc
sbb
cmp
and
xchg
xchg
mov
push
mov
and
mov
icebp
in
enter
inc
sbb
sbb
cmp
add
inc
shll
in
pop
test
inc
and
inc
sbb
subb
xor
xor
shl
iret
or
add
xor
push
cli
xor
mov
mov
sbb
push
cli
add
lea
inc
cmp
rorb
cwtl
pop
push
pop
mov
scas
repz
dec
aad
insb
fs
lods
push
ret
adc
mov
sbb
mov
into
add
push
ja
sub
pop
hlt
and
mov
or
push
notb
sbbb
cmpsb
jo
or
ret
lcall
arpl
xchg
sti
fs
sbb
xor
mov
ljmp
sbb
fimull
dec
mov
sbb
std
sbb
mov
push
mov
xchg
out
adc
les
push
rolb
je
pop
cmp
testl
cmc
addr16
xchg
js
cmp
icebp
sbb
jl
pop
addb
push
gs
push
cmc
adc
iret
enter
test
cmp
xchg
shll
mov
dec
or
lock
lods
ss
adc
jge
ret
cmp
push
call
adc
outsl
mov
popf
push
mov
cli
ljmp
mov
inc
es
xchg
shlb
loope
cmpsb
pop
sahf
into
loop
sbb
int3
push
rcr
xor
sub
jbe
js
or
cld
push
das
sbb
xor
adc
test
xor
andb
sti
inc
ret
pop
cmp
leave
mov
sub
in
mov
inc
out
xchg
inc
push
push
enter
adc
shlb
bound
jmp
xor
jo
xor
xchg
dec
mov
jmp
arpl
pop
mov
add
pushf
inc
rclb
push
inc
mov
mov
jo
mov
hlt
shrb
les
outsb
jl
and
xor
or
pushf
lock
adc
cmp
adc
push
lea
pop
pop
jp
stos
imul
sub
cmp
or
ret
pop
push
or
mov
dec
or
mov
aad
inc
pop
idivl
jo
scas
enter
inc
mov
add
push
or
and
inc
push
and
pop
jp
or
mov
or
fsubl
xchg
js
jne
dec
inc
sub
cmp
lea
and
adc
xor
mov
sbb
repz
mov
adc
and
add
add
into
jne
and
xchg
push
and
test
or
roll
dec
sbb
lret
lcall
es
add
mov
inc
push
xor
mov
adc
js
push
mov
cmc
sbbl
mov
mov
push
cmp
idivb
inc
mov
jge
sub
sub
and
sbb
insb
cmc
or
push
aad
pop
inc
test
pushf
rorl
xchg
add
mov
or
cmpsl
push
testb
mov
xor
push
xchg
cmc
xor
sahf
in
cmc
test
bound
mov
loopne
out
loope
inc
mov
stos
or
cmp
and
or
mov
pop
mov
adc
rclb
cmpsl
ret
dec
iret
and
orb
clc
fistpl
pop
or
stos
push
or
push
outsb
and
xor
add
sbb
xchg
push
add
outsb
mov
in
pop
je
sbb
pop
mov
cs
xor
dec
mov
iret
add
jp
inc
sub
mov
mov
enter
xchg
xor
test
adc
jo
mov
jne
xor
jmp
test
ret
add
jo
mov
dec
lea
bound
adcl
enter
mov
push
inc
adc
xor
and
or
mov
hlt
daa
shlb
je
nop
mov
xor
fadd
xor
lret
xchg
or
pop
xor
xchg
lock
push
add
mov
push
xchg
ss
inc
pop
lahf
test
stos
pop
ret
adc
pop
and
dec
pop
push
xor
mov
cmp
xchg
adc
xchg
les
xor
inc
cld
mov
sbb
shrl
stos
fadd
cmp
or
adcl
push
lods
pop
daa
jno
aaa
scas
cmp
xchg
daa
enter
mov
pop
es
loop
dec
or
push
or
filds
es
adc
push
or
add
imul
call
ret
sub
sub
cmpsb
icebp
mov
cmp
jo
arpl
push
dec
addb
xor
ss
xchg
aad
push
je
xor
adc
jg
movb
and
jge
push
inc
addb
andb
mov
roll
mov
loope
test
loopne
pushf
mov
lahf
cmp
sbb
sbb
mov
inc
add
mov
push
and
adcb
mov
sbb
loopne
push
shll
stos
lock
ljmp
adcb
sbb
icebp
adc
lods
ljmp
addb
mov
jne
add
lock
adc
or
and
inc
scas
outsb
dec
push
mov
arpl
pop
daa
rolb
dec
out
or
arpl
push
hlt
sbb
shrb
or
into
call
or
inc
sub
mov
fwait
lahf
rorb
or
and
je
jecxz
dec
xchg
adc
sub
add
cmpsl
push
aam
xchg
imul
push
and
and
mov
rclb
xor
leave
insb
adc
adc
mov
add
cmpsl
idivb
xchg
sub
xchg
sbbb
pusha
sub
aas
rcrl
mov
pop
xchg
or
pop
add
daa
adc
add
icebp
xor
and
mov
cld
inc
rclb
add
inc
andl
mov
lcall
inc
rorb
adc
test
jecxz
lcall
loop
push
push
sub
cmp
sub
jmp
push
mov
or
outsl
loopne
pop
or
frstor
mov
jmp
shll
jnp
popf
xchg
mov
and
xor
add
sub
sub
pop
sbb
push
and
sub
rolb
fadds
inc
mov
popa
jo
mov
pop
dec
scas
ljmp
mov
decb
push
mov
lea
xor
cmp
push
addr16
mov
push
adc
adc
icebp
xlat
sub
aam
mov
mov
adc
rcrl
movsl
pop
int3
add
adc
xor
cmp
daa
xor
sqrtps
add
jmp
mov
adc
pop
in
inc
sbb
sbbb
jo
imul
mov
jno
add
cmp
sbb
adc
andl
cmp
sbb
adc
jo
pusha
adc
mov
push
pop
adc
lret
or
mov
jl
mov
xor
inc
cmp
lret
sbb
inc
out
push
lock
inc
push
cmp
popa
xchg
push
sub
out
xchg
jmp
inc
push
push
xor
add
add
sbb
push
add
sbb
jo
inc
xor
push
sarb
push
je
add
jo
sbb
loop
inc
out
adc
adc
or
rorb
mov
outsb
lock
xor
sub
icebp
out
popf
orb
push
add
mov
sbb
mov
and
or
cmp
fwait
cmp
jb
or
mov
je
adc
aaa
mov
dec
les
arpl
or
add
movsl
push
in
sar
and
call
scas
mov
sbb
lock
lret
xor
push
push
cld
fldenv
js
mov
shl
xor
mov
leave
xor
push
andb
out
sbb
mov
jecxz
or
and
xchg
jnp
andb
movsb
xchg
cmc
or
mov
sarb
lea
test
cmpsb
push
adc
aad
jns
mov
xchg
add
cmp
mov
inc
loope
or
or
add
mov
popf
sbb
mov
mov
jnp
inc
mov
xchg
push
dec
push
je
divps
push
xor
mov
xchg
lahf
mov
fstpt
mov
nop
addl
fs
inc
imul
cmp
shl
jno
add
jne
js
dec
adc
jge
leave
outsb
pop
aam
adc
sbb
and
inc
movb
push
inc
rclb
fnstenv
sbb
mov
inc
rcll
cmp
aaa
sbb
push
cmc
icebp
or
mov
rorl
push
int3
into
cmp
daa
in
or
sbb
into
pushf
push
mov
or
shrb
test
add
addl
push
cmp
mov
cmp
adc
mov
stos
lods
rcl
adc
push
les
lods
inc
push
icebp
test
out
add
inc
stos
insl
sub
aam
cltd
sbb
outsb
nop
mov
add
mov
test
and
pop
sahf
and
jp
and
dec
lea
mov
sub
adc
leave
and
je
adc
or
push
test
push
ljmp
adc
jmp
sbb
cmp
loopne
mov
test
push
inc
inc
add
shrl
xchg
shll
jle
push
push
ljmp
into
push
mov
ret
inc
sbb
rcrb
pop
out
add
lahf
and
shrl
lahf
roll
cmp
push
xchg
and
add
mov
mov
pop
pop
not
sbb
leave
mov
movb
mov
test
adc
mov
stos
mov
jmp
push
jns
rcl
lock
addr16
es
add
leave
popa
or
loopne
jl
add
lds
test
adc
push
fs
mov
xchg
sbb
in
adc
lods
in
out
icebp
jp
or
addl
inc
and
or
xor
adc
sub
movsb
leave
add
adc
imul
inc
push
push
push
aad
stc
rolb
sub
aas
pop
rcl
sbb
jge
cmp
xchg
test
pop
dec
and
adc
loopne
mov
adc
or
mov
push
or
aad
push
pushf
and
add
inc
addr16
or
adc
std
icebp
subb
mov
je
adc
or
les
push
inc
hlt
pop
sbb
sub
pusha
push
pop
cmp
cwtl
dec
js
xor
call
shll
cmp
repnz
jmp
sbb
mov
adc
push
clc
dec
rorb
and
xchg
mov
or
test
pop
test
insb
cwtl
push
imul
or
mov
ja
push
push
push
fwait
insl
fcomps
adc
std
lds
push
pusha
call
jo
and
xor
or
imul
jb
jno
adc
bound
or
mov
add
xor
add
repnz
add
or
adc
add
jo
popa
cld
push
push
push
xor
in
add
or
loop
stos
pop
push
stc
out
sbb
int3
adc
pop
cmovne
pop
adc
sub
out
inc
cmp
sub
push
jns
scas
add
dec
out
mov
add
and
pop
add
les
fs
or
pop
inc
mov
jnp
mov
rcrl
lret
or
or
std
rclb
add
orb
std
pop
daa
inc
mov
scas
dec
mov
jb
push
lahf
mov
icebp
jae
sbb
lea
pop
pop
dec
push
inc
mov
mov
mov
in
shr
inc
sbb
mov
and
sbb
xchg
cmp
pop
sbb
cmpps
push
xchg
pop
adc
push
xor
mov
mov
cmp
add
sbb
mov
xor
lret
inc
inc
mov
shrb
jge
or
mov
cmp
adc
or
add
dec
lock
sub
sub
movsl
mov
xchg
add
inc
or
out
pop
mov
cmp
lahf
fadds
rorb
rcrl
rcll
mov
inc
lcall
pushf
std
xchg
mov
push
in
stos
xchg
ret
mov
sbb
stc
arpl
pop
shrb
stos
mov
shl
sbb
int
adc
or
sbb
add
ds
ljmp
loope
push
enter
mov
adc
rclb
cmp
jb
lods
mov
inc
lea
adc
mov
sbb
adc
sbb
jg
std
mov
inc
inc
push
les
push
add
cmp
loop
addr16
rol
mov
dec
xor
adc
mov
cli
or
xchg
inc
jmp
cltd
sbbb
shlb
push
jo
sub
add
mov
dec
aam
cmp
pop
cmpsl
rcll
movsl
loope
push
mov
add
and
nop
mov
ljmp
push
rolb
sahf
xchg
ret
adc
adc
aam
addr16
and
clc
xchg
mov
cli
filds
add
into
pusha
bnd
sbb
sbb
in
cli
sbb
adc
pop
pushf
adc
sub
xchg
push
loop
pop
ret
push
jnp
insb
push
rcrb
push
jl
inc
scas
ret
loopne
xchg
and
adc
shll
mov
cltd
or
pop
sbb
dec
arpl
scas
jo
lcall
stos
dec
adcb
aad
mov
movsb
fs
sbb
outsl
jb,pn
addl
stos
or
or
push
shll
or
sbb
test
xlat
mov
mov
mov
xchg
adcl
or
clc
loopne
add
testb
loopne
jo
out
icebp
icebp
sbbl
pop
test
xlat
xorb
adc
push
sbb
xchg
xor
mov
sbb
and
push
mov
hlt
mov
mov
mov
cmp
fdivrl
sub
and
inc
and
or
add
out
cs
push
ficompl
or
inc
lea
mov
xchg
popa
push
and
lods
rcll
pop
data16
sbb
inc
shll
cmp
insb
jo
neg
push
cltd
ret
xchg
rcl
add
mov
cmp
data16
aad
add
or
nop
addl
icebp
leave
aam
sub
add
xchg
addr16
lock
psubsw
test
outsb
mov
cmp
cmp
or
sbb
pusha
ljmp
push
mov
rcll
mov
adc
add
les
outsl
cmp
mov
adc
or
loopne
inc
jb
sarl
shr
add
xor
and
sub
negb
in
sbbb
subb
push
data16
mov
mov
sub
add
xlat
cmc
adc
cmp
dec
push
sbb
rorl
cmp
sub
xor
add
mov
xchg
daa
test
aas
insb
push
fmull
xlat
into
push
hlt
adc
push
or
sbb
negb
test
mov
dec
pop
fdivs
and
pop
pop
lock
cmpsl
push
loop
inc
push
je
xlat
inc
pop
test
inc
cmp
push
push
mov
xor
and
sub
pop
lds
sub
push
sub
xlat
jecxz
add
cmovge
mov
or
add
lock
push
xlat
and
add
dec
push
cltd
mov
test
mov
jp
or
sub
add
push
mov
pushf
mov
add
pop
inc
sbb
test
test
mov
adc
jl
add
pop
xor
mov
addb
mov
movl
lds
sbb
test
sti
push
inc
xor
push
mov
test
adc
jl
push
xor
mov
pop
adc
pop
mov
inc
scas
movb
cmp
pop
pop
aam
dec
xchg
andb
lea
test
roll
enter
enter
mov
mov
jnp
add
sub
pusha
ret
xor
push
xor
loope
inc
stos
outsl
les
mov
pop
push
push
or
xlat
dec
dec
pop
enter
shlb
rol
enter
inc
or
mov
xchg
and
out
mull
ds
adc
push
cmpsl
pusha
sbb
add
out
loope
and
mov
js
sbb
push
sub
jne
mov
gs
xchg
je
jae
test
sub
insb
add
scas
aad
push
push
shlb
cmp
pusha
adc
imul
fbld
or
sbb
stos
cmp
pop
adc
pop
jp
add
es
fisttpl
loop
icebp
add
sub
aam
mov
je
push
adc
jp
dec
push
les
rcrb
movsl
addb
fisubl
push
mov
xchg
call
mov
mov
dec
xor
cmpb
cmc
or
mov
adc
push
imulb
or
jmp
rclb
ret
mov
push
lock
add
and
or
adc
loopne
aaa
cli
fldl
xor
movsl
pop
xchg
add
pop
shll
cld
push
mov
in
and
icebp
mov
add
and
orl
loopne
call
dec
mov
sbb
mov
cmp
add
shlb
sbb
lock
shll
das
inc
push
subl
mov
stos
das
cmp
cs
adc
cmp
mov
mov
push
mov
stos
stos
out
dec
xorl
mov
push
aaa
cmp
loopne
mov
adc
add
adcb
or
icebp
pop
popa
mov
dec
push
xor
cmp
dec
rolb
clts
and
adc
pop
push
fsubr
icebp
ljmp
add
ljmp
ret
ret
pusha
bound
mov
mov
xor
add
loope
xor
int3
shll
lcall
jo
jno
nop
push
push
test
adc
pop
cltd
cwtl
sbb
xchg
push
loope
xor
pop
push
jg
subb
cmp
mov
jo
movsl
jne
lods
xor
cmp
lcall
xchg
adc
xchg
adc
mov
dec
loopne
es
mov
icebp
fcompl
arpl
xchg
sub
mov
enter
stos
sahf
inc
push
call
inc
es
mov
jae
adc
or
lods
ljmp
or
fsubl
cmc
push
lock
cwtl
lahf
shlb
push
or
js
lds
pop
or
jns
add
xchg
mov
mov
sbb
mov
push
mov
or
pop
stos
cli
mov
mov
add
add
stos
bound
xchg
adc
insl
jo
xor
hlt
jb
mov
nop
add
sub
aad
add
inc
add
test
icebp
incb
and
std
aam
sub
inc
adcb
imulb
dec
sbb
jp
xor
push
inc
mov
add
bound
or
les
mov
clc
sysexit
pop
sbb
mov
jmp
xor
shlb
shr
and
or
enter
inc
ljmp
xor
jecxz
push
push
pusha
test
sahf
push
stc
or
add
pop
imul
adc
loope
adc
sub
xchg
push
loope
or
loopne
add
or
stos
adcb
enter
add
mov
jge
stos
push
hlt
lcall
adc
out
dec
or
aas
cmpb
pushf
mov
gs
jo
subb
xchg
das
sbbb
into
loopne
in
pop
enter
xchg
jp
push
outsl
out
adc
icebp
sub
cli
rcrl
pusha
mov
add
ds
sbb
or
mov
test
xor
adc
add
and
sub
inc
mov
adc
inc
shll
cmpsl
test
mov
or
xor
sub
adc
sahf
push
insl
leave
sbb
or
adc
mov
mov
shl
inc
cwtl
or
adc
push
mov
jns
arpl
push
add
dec
and
std
ret
sub
sbb
movsl
call
fadds
ficomps
mov
add
mov
popa
cs
xor
sti
xor
mov
pushf
mov
push
push
mov
data16
mov
xchg
test
inc
add
inc
adc
xlat
pop
stos
or
es
ret
dec
cwtl
and
pop
or
pop
sbb
cmpsb
adc
xchg
push
or
loop
das
in
sub
or
outsb
cmp
test
into
sbb
repnz
cli
sbb
mov
mov
jb
push
mov
pop
xor
or
scas
push
jle
or
sbb
xchg
stos
add
push
xor
cwtl
push
ret
inc
xor
push
addl
sub
js
mov
ret
push
test
add
xchg
adc
scas
adc
outsb
or
pop
es
inc
xchg
scas
outsb
sub
imul
mov
push
mov
dec
add
add
push
add
jae
cmp
roll
mov
xchg
sar
xlat
jb
adc
int
inc
xchg
arpl
and
loopne
call
jne
or
ret
push
xor
aaa
jle
inc
xor
add
adcb
ret
daa
push
sbb
or
cmp
push
mov
push
adc
mov
nop
jo
dec
or
js
sub
inc
es
pop
sub
lds
mov
adc
push
in
mov
ret
or
rcrl
out
rclb
pop
or
and
daa
rclb
mov
sahf
movsl
lea
lea
or
sbb
xor
outsb
sbb
push
ret
mov
adc
push
push
addl
jmp
inc
mov
in
popa
or
push
shll
rorb
push
pop
push
test
roll
jns
enter
clc
mov
int
enter
test
lret
mov
push
sbb
push
mov
ljmp
sbb
js
cmpsb
and
mov
adc
sub
cmc
mov
add
lcall
out
lock
inc
pop
in
cmpsb
sbb
insb
loopne
add
mov
sarb
push
ljmp
or
fsubr
or
test
aad
cli
add
jo
inc
daa
inc
push
bound
adc
sub
push
pushf
mov
jmp
mov
outsl
xor
lret
mov
add
jge
fs
sbb
lret
pop
leave
or
or
pusha
adc
jns
mov
ds
pop
mov
cmp
adc
xor
inc
in
and
or
xchg
pusha
push
pusha
stos
cmp
sbb
mov
insl
ret
or
andb
inc
and
ja
icebp
loopne
rolb
sbb
add
test
inc
jne
pop
push
pop
xor
jecxz
mov
push
aad
adc
xchg
mov
push
or
push
jnp
dec
mov
lret
jae
dec
pop
orl
adc
push
inc
and
orl
sub
icebp
mov
adc
mov
and
shll
in
or
xor
sub
pop
adc
cmp
or
pop
push
dec
add
xchg
mov
add
incb
pop
and
xor
pop
push
stos
cmp
dec
rcll
leave
and
sub
add
pop
adc
mov
adc
or
xchg
pop
or
mov
push
mov
sahf
test
filds
xor
in
scas
or
es
inc
adc
or
aad
in
push
ss
fucomp
sbb
push
xchg
and
bound
inc
shlb
cmpsl
dec
icebp
fsubrs
loop
roll
push
rolb
xlat
rcrb
add
subl
inc
loope
push
dec
in
mov
sahf
inc
pop
stos
push
inc
fists
addb
push
icebp
push
shrl
mov
jno
je
push
mov
fidivl
xchg
cmp
or
add
push
cwtl
mov
xchg
or
pop
cmovo
and
xchg
or
cmp
xchg
arpl
or
mov
cmp
jmp
nop
or
xchg
outsl
xchg
push
mov
xchg
add
push
xchg
or
cmpsl
push
sbb
push
repnz
sub
add
dec
jecxz
mov
and
or
mov
pop
xchg
mov
test
or
push
sub
xor
sbb
test
dec
in
dec
jo
inc
adc
test
xchg
stos
push
icebp
add
sub
xchg
sub
xor
jnp
daa
inc
or
mov
mov
push
es
mov
sub
xor
dec
rolb
ret
cmpb
test
or
xchg
mov
shrb
inc
cs
out
jb
stos
jo
dec
std
cmpsb
cmp
push
in
stos
rcll
add
adc
aam
test
repnz
sub
shrb
push
orl
call
sub
mov
call
rol
jne
xor
pop
adc
inc
out
lea
sbb
orb
sub
stos
add
daa
sub
cmp
dec
push
sti
or
stos
inc
ret
adc
xchg
jmp
push
push
loope
call
repnz
jge
mov
mov
pop
inc
jmp
test
dec
bound
add
mov
call
push
mov
outsb
jg
pop
pop
movsb
mov
push
loope
stos
into
lahf
clc
or
mulb
mov
inc
dec
hlt
add
push
or
loopne
and
mov
push
xor
loopne
stos
add
jae
push
xor
inc
jae
adc
int
andl
xchg
sub
xchg
lds
xor
rolb
loopne
adc
ret
jbe
enter
add
and
pop
inc
jmp
roll
add
enter
addb
sbb
pop
and
add
pop
das
ret
fcoml
push
decl
or
sbb
in
std
enter
sti
js
call
aam
mov
jle
mov
sub
pop
lcall
or
and
jne
rcrl
outsl
incb
loop
and
adc
inc
in
xchg
jl
mov
sub
leave
push
and
mov
add
mov
test
ljmp
shll
mov
paddd
mov
or
cltd
es
in
xchg
call
push
xchg
mov
add
mov
fimull
cmpsb
and
push
lea
push
insb
cmc
xor
sbb
inc
lock
cmp
shll
add
ret
sbb
xor
xor
dec
ret
adc
sbb
add
aad
pusha
repnz
bswap
mov
mov
xor
or
xor
adc
sbb
mov
and
dec
adc
stos
xchg
scas
lret
sbb
rorb
mov
mov
xor
sbb
aad
and
nop
adc
orl
cmp
push
sbb
movsb
adc
lret
add
dec
push
dec
hlt
std
lcall
leave
mov
lret
xchg
imull
lcall
push
stc
pop
std
mov
pop
fwait
push
mov
add
int3
mov
sbb
aad
pop
rorl
test
clc
add
test
ljmp
sahf
add
adc
adc
pop
pop
mov
and
decb
dec
cmp
or
pushf
add
nop
adc
mov
sti
pushf
pop
sahf
add
push
sbb
mov
mov
cmpb
enter
es
and
scas
rcrb
das
pusha
jecxz
test
mov
pop
sub
sbb
ret
sbb
imul
mov
aam
jb
cmp
cmp
pop
jecxz
dec
push
inc
lock
push
adc
pop
icebp
sub
es
pop
push
call
jmp
in
dec
sub
test
inc
push
adc
sub
imulb
jb
sbb
adcb
lahf
sbb
movsl
xchg
inc
jmp
sbb
and
mov
sarb
out
iret
fs
push
add
test
es
adc
xor
leave
jg
xchg
push
sub
mov
shlb
and
mov
inc
sub
sahf
cmp
mov
add
xor
les
inc
rcll
dec
dec
hlt
cwtl
mov
jne
sub
or
dec
push
sbb
cmc
jmp
add
cmp
push
push
jbe
mov
push
adc
daa
rcrl
cli
sbb
xor
inc
xchg
push
dec
inc
jmp
mov
add
test
inc
inc
jo
test
xchg
fcoml
adc
andb
movsl
adc
xchg
loopne
mov
inc
rolb
call
or
das
pop
fsubs
push
loope
cmpsl
and
sbb
ret
push
adc
adc
out
rclb
xchg
shrl
or
dec
push
pop
mov
dec
rol
and
cmc
adc
dec
xor
subb
sbb
and
mov
les
inc
sbb
sbb
inc
inc
xor
sub
pop
cmp
add
sbb
sarl
test
add
testl
xchg
and
mov
pop
leave
inc
mov
sbb
or
push
xchg
loop
mov
or
mov
push
mov
cmp
and
ss
pop
pusha
cltd
fmull
or
add
inc
loope
ljmp
or
lea
sahf
push
int3
pop
jle
sub
xor
ljmp
push
mov
add
sub
jo
les
call
or
stc
mov
push
mov
adc
and
test
xlat
inc
pop
lds
and
add
push
sbb
add
movsl
cli
sub
shrl
pop
fists
in
sbb
xchg
adc
xor
outsb
mov
shrl
push
or
loopne
into
int
adc
clc
sub
pop
pop
mov
sahf
pop
inc
mov
aad
cmc
pop
xor
push
lods
sbb
int
push
les
add
inc
dec
push
xadd
arpl
and
push
or
ds
or
and
arpl
push
add
addb
mov
pop
subl
in
rcrl
aam
mov
push
xor
adc
lcall
and
test
jg
push
ret
xor
adc
jb
test
rorl
leave
stos
adc
loope
dec
mov
add
add
add
mov
hlt
shll
push
ret
jo
inc
jg
enter
movsb
cmp
mov
inc
in
add
ret
test
sbb
lock
mov
aaa
inc
dec
rcrb
adc
and
adc
push
or
cmp
lea
js
ss
cmp
adc
xorb
ficompl
mov
sub
andl
add
add
pop
stos
adc
mov
sbb
aam
sub
inc
xor
mov
mov
and
rolb
cld
ss
nop
add
mov
aam
popa
mov
orl
xorl
push
lret
ret
cmp
adc
or
and
in
sbb
aam
inc
insl
js
adc
add
inc
ret
bound
insl
sbb
sub
push
int
jbe
sti
fldenv
xor
mov
in
inc
add
mov
or
lods
add
add
shlb
mov
jb
add
mov
push
xchg
jo
xlat
xor
cmc
pop
inc
int3
push
push
lahf
out
popl
fs
add
mov
mov
push
or
push
jns
and
rcrb
shl
sub
add
or
rolb
and
and
aam
ret
pop
push
fistps
mov
repnz
mov
aas
rcrb
aad
andb
orb
adc
push
adc
add
jb
jge
popf
rol
mov
and
enter
aad
cltd
cmp
or
enter
fisubs
adc
add
pop
arpl
dec
js
adc
cmp
hlt
into
mov
inc
lods
jg
sbb
or
push
mov
fcompl
ljmp
and
add
adc
push
orl
xchg
lock
and
sbb
jle
push
mov
or
mov
les
add
lret
mov
rolb
adc
les
add
push
cmp
cmp
sarl
stos
mov
ljmp
lock
les
jb
and
subl
mov
sahf
stos
add
xor
jge
out
push
mov
pop
mov
fwait
and
pop
imul
rclb
mov
mov
push
xor
movsl
rcll
lret
addb
sbb
xor
push
cmp
inc
daa
adc
push
idivl
dec
add
or
sub
sub
inc
adc
xchg
and
sbb
js
push
push
and
and
int
xlat
scas
test
sbb
push
sbb
fwait
andl
sbb
nop
movsl
pop
inc
lods
or
int
jae
sbb
pop
sbb
pop
inc
add
or
icebp
je
or
and
push
xor
es
adc
or
cmp
or
test
jo
sbb
jge
inc
sbb
or
push
shl
add
inc
xor
add
dec
push
and
mov
es
adc
dec
les
add
imul
add
cwtl
push
aam
sub
sub
xor
jae
sbb
pop
and
addr16
js
call
rol
mov
cmp
jno
adc
scas
call
xchg
push
out
or
adc
add
push
leave
cwtl
dec
push
sbb
movsb
ret
out
stos
cmp
adcl
fadd
mov
mov
cmp
pushf
popa
call
rcrb
sub
or
cs
popf
rcrb
lods
lock
jo
mov
inc
imul
push
lret
mov
call
inc
inc
cmp
or
mov
stos
push
cwtl
add
leave
in
je
adc
push
push
lods
xorl
xor
cmp
jl
fs
roll
pop
inc
and
in
push
cmpsl
mov
nop
adc
test
inc
dec
dec
push
stos
test
pop
push
cmpsl
das
popa
mov
dec
movb
nop
lret
push
jno
scas
lock
and
push
pop
je
fs
adc
inc
fsubrl
pop
pop
fstl
mov
sbb
ds
sbb
pop
rclb
sbb
pop
js
test
loope
into
shrl
ljmp
adc
jo
push
jmp
or
pop
lret
sbb
or
and
xchg
or
xchg
lret
test
pop
test
lret
pop
jl
sub
xor
jge
ja
push
or
and
dec
testb
stos
sub
xchg
dec
xchg
bound
lds
sbb
sbbb
add
mov
push
sbb
xlat
inc
xchg
jo
and
outsb
xchg
push
aad
cmpl
and
sbb
cmp
mov
and
pop
xchg
aad
mov
dec
shlb
sbb
clc
pop
cmp
sub
push
pop
xchg
adc
inc
inc
bound
subl
sahf
imul
nop
inc
imul
add
sbb
lret
add
pop
xchg
cmp
inc
or
leave
int
movups
adc
sarl
cmp
mov
sbb
ret
inc
int
test
cmp
jno
dec
cmpsb
cmpb
ljmp
sbb
mov
or
jbe
test
fcoms
and
adc
xor
loop
push
ud2
popf
inc
inc
or
stos
cmp
mov
aam
inc
jg
cmpl
es
das
test
and
push
cmp
rclb
add
xlat
sahf
bound
movlps
or
and
mov
inc
bndldx
test
sbb
punpcklbw
test
mov
or
int3
pusha
sub
inc
mov
push
add
inc
cmpsb
fcoml
les
mov
mov
push
mov
sarl
and
sbb
int
pop
sub
jae
jno
in
jns
add
or
or
shrl
test
aam
mov
add
clc
pop
and
xchg
loope
ret
or
jbe
je
xor
int3
sbb
sti
cltd
lret
push
dec
sub
mov
shll
in
dec
or
enter
subb
pop
sbb
add
js
mov
aam
shll
pop
pop
shrb
adc
mov
mov
dec
xor
jo
inc
mov
mov
js
in
lods
sbb
pop
mov
add
or
add
std
adc
mov
pop
inc
scas
jmp
xor
mov
dec
add
mov
push
pop
stc
and
mov
push
and
je
mov
mov
add
jnp
mov
dec
sbbl
mov
popa
ret
into
nop
mov
rolb
add
inc
xchg
sub
mov
mov
adc
jnp
pop
addb
sub
pop
push
imulb
mov
clc
dec
loopne
faddl
sbb
inc
push
inc
add
negb
in
nopl
loop
xchg
fimuls
xor
sub
or
xor
js
lret
lret
loope
stc
adc
aas
adc
dec
push
stos
sbb
push
cs
mov
ret
mov
aad
add
pop
rolb
int
mov
adc
push
or
lods
movsl
add
roll
push
mov
fidivrl
and
cmp
xlat
push
mov
int
into
mov
adc
mov
mov
scas
neg
cli
shrl
sbb
mov
nop
movsl
or
adc
pop
sub
push
pop
add
testb
push
add
cmp
sub
stc
repnz
mov
idivl
mov
mov
lret
out
jo
push
andb
les
sbb
add
xchg
add
and
lret
dec
inc
adc
enter
push
mov
in
pop
mov
adc
lock
xorl
daa
call
lods
je
int
lea
or
cmpsb
add
daa
out
mov
scas
push
test
in
xchg
and
inc
mov
push
mov
rcll
jmp
roll
mov
icebp
push
ljmp
push
add
loope
add
inc
push
sub
inc
mov
inc
es
stc
pop
in
and
mov
rorb
inc
adc
ret
push
sbb
push
sbb
xchg
inc
add
add
cmp
imul
aaa
jne
mov
mov
or
hlt
add
add
xor
or
mov
add
add
sbb
jno
mov
sub
jl
mov
jecxz
sbb
daa
data16
lods
nop
add
or
cmp
in
loop
inc
mov
push
std
sbbb
mov
scas
mov
jp
rclb
push
inc
lret
mov
mov
outsl
faddp
mov
lods
int3
scas
or
sub
jae
add
push
mov
pop
das
push
or
sub
push
push
addb
mov
sub
les
push
jae
inc
lret
xchg
sub
ret
sub
xlat
icebp
pusha
pop
sub
movsb
adc
cmp
lock
sbb
push
xchg
push
sbb
clc
push
add
scas
cmp
add
xor
in
xchg
leave
adc
and
mov
in
ret
scas
test
jb
pop
repz
daa
cmp
repz
add
bound
adcb
pop
enter
loopne
cmp
jl
enter
sbb
xchg
adc
push
cs
inc
test
enter
scas
add
dec
aas
adc
mov
sti
mov
mov
insl
adc
dec
add
push
test
mov
xchg
insb
xchg
jb
mov
add
in
push
pop
mov
pop
push
jle
push
and
push
or
or
jg
bnd
rcrb
fwait
adc
jecxz
adc
mov
lret
adc
notl
push
sbb
ljmp
test
mov
xchg
xchg
iret
add
jne
add
in
ljmp
sbb
push
rcrw
pop
push
push
inc
pop
add
or
sbb
movsl
imul
xchg
or
mov
movzwl
in
jmp
lods
add
sbb
movsb
add
mov
xlat
leave
adc
inc
sub
lods
lret
lods
arpl
fs
pop
cmc
fstl
cli
push
xor
mov
jne
jp
not
ja
imul
and
scas
call
push
jo
ror
sbb
or
or
pushf
out
stos
lds
sti
mov
mov
fadds
and
scas
pop
xor
loop
imul
fstpt
xor
inc
mov
cmp
mov
and
push
outsb
sub
es
scas
pop
add
push
ret
push
push
pop
jo
insb
adc
mov
jo
pop
rolb
mov
test
pusha
cwtl
andb
les
push
test
in
decb
add
in
xorb
dec
cmp
xchg
sub
or
push
mov
push
enter
sbb
dec
rolb
sbb
test
jno
sbb
and
jo
fcmovne
int
push
lock
js
es
imul
mov
sub
mov
or
std
dec
repnz
push
stos
les
rclb
pop
push
mov
adc
add
out
mov
subb
mov
daa
fsubs
ljmp
sarl
lea
add
mov
adc
sbb
rolb
fldt
lock
sub
bound
or
cmp
js
push
mov
insl
xchg
pop
push
ds
dec
rorl
sbb
jge
dec
or
push
inc
mov
jo
ret
add
je
push
gs
bound
rcrb
filds
add
push
or
or
sbb
cmp
push
add
in
push
shlb
and
daa
jp
mov
icebp
divl
outsb
push
and
fimull
or
sbb
add
mov
and
sbb
andl
leave
pop
cmpsl
add
test
xchg
or
inc
ja
loop
inc
sbb
mov
ljmp
jg
bound
out
adc
cmpsl
shrb
and
pop
testb
aad
push
sub
inc
loopne
xchg
ret
and
push
sbb
push
aam
or
inc
imul
mov
adc
or
push
sbb
inc
and
loop
lods
push
adc
or
inc
rcll
stos
push
push
ret
push
dec
aad
mov
mov
cld
push
ja
cmpsl
push
mov
int
sub
jmp
push
jo
jne
pop
imulb
jbe
cmp
sub
cmp
roll
shrb
rol
rcrl
ret
or
jne
shr
pop
movb
xchg
test
mov
sbb
push
loopne
scas
mov
fsubr
mov
in
test
and
fstpt
or
cmc
movsb
push
addb
inc
xor
sbbb
push
mov
inc
adc
mov
jae
xchg
mov
adc
fcoml
cmp
or
xor
cmp
repnz
mov
mov
fs
rol
xor
xchg
or
leave
mov
sbb
push
int
into
and
rol
mov
adc
fimuls
push
cmpsl
call
les
or
mov
sbb
daa
xor
aam
imul
cmpsb
and
dec
or
inc
cmc
add
jp
pusha
xor
repz
mov
lock
or
jge
mov
bound
invd
pop
out
scas
je
and
or
in
or
push
sbb
add
push
aad
lea
xor
icebp
aas
mov
xchg
push
dec
in
sbb
int3
jg
rclb
ret
fisubl
inc
shr
or
xor
sbb
fs
cmp
test
mov
xor
mov
inc
mov
cmp
cmp
mov
mov
mov
inc
push
lahf
in
push
sub
sbb
add
mov
sub
adc
shll
les
sar
or
xor
adc
test
lret
push
mov
rcrb
push
lea
or
rcll
adcl
out
cmp
mov
repnz
pop
sub
adc
add
bswap
pmaddwd
lods
mov
add
das
add
xor
imul
pop
mov
cs
out
adc
mov
adc
rol
shll
rolb
into
sarb
push
orb
outsl
aad
or
and
or
dec
nop
mov
pop
cs
jp
or
clc
sbb
or
nop
repnz
add
ret
stos
lcall
sbb
les
daa
push
add
aad
outsl
or
mov
xchg
ljmp
fs
or
xchg
or
xchg
xor
or
inc
mov
ss
popf
adc
mov
int3
push
xchg
and
lods
fcoml
loopne
addr16
popl
pop
inc
or
pop
cli
xchg
lock
jne
add
dec
rorb
or
sub
cmpsl
call
mov
adc
pop
rorb
add
hlt
xor
push
xchg
call
adc
punpckhbw
adc
add
stos
dec
fs
sbb
add
rclb
dec
add
outsl
sbb
and
sub
sub
cmp
xor
fistpll
jnp
mov
lock
inc
push
sbb
and
inc
lcall
in
dec
test
push
inc
ret
cmp
cmpsb
push
dec
mov
rolb
xchg
xor
cmp
adc
pop
lds
loopne
adc
push
inc
cmpsl
test
add
adc
sub
int3
pusha
and
pop
js
insb
push
test
rorb
insl
mov
jne
dec
xchg
pop
scas
ret
push
xchg
sub
inc
je
cmpsb
add
aas
into
ja
mov
pop
dec
fnstsw
lcall
sahf
into
dec
lret
push
dec
xor
cs
test
in
les
mov
push
sbbb
mov
fs
cltd
call
loope
popl
in
cmp
es
loop
pop
cmp
in
adc
shl
inc
sub
pop
xchg
mov
inc
icebp
add
inc
les
sub
cmpsb
jge
sbb
push
adc
adc
mov
into
push
pop
push
movsl
push
cmp
cmp
sbb
xor
or
ficompl
je
inc
loope
sbb
xchg
in
lock
jae
loop
add
test
push
or
popf
jle
scas
xor
int3
fsubl
ret
xchg
lret
mov
push
lock
xchg
and
or
sahf
sbb
aas
add
push
add
lahf
outsl
fisttps
pop
in
jmp
movl
add
pop
imul
adc
data16
mov
sbb
jmp
ja
jg
cld
pop
lret
orb
pop
lods
movsl
sub
insb
repz
lahf
sub
dec
inc
mov
jg
cld
stc
sbb
xchg
mov
mov
cmp
iret
lahf
aas
imul
shll
test
cmpsb
std
stc
repz
cmp
pop
jns
idiv
scas
adc
aas
jg
or
pop
repnz
cmp
test
cmp
out
sahf
mov
push
into
dec
fsubrl
dec
lahf
aas
out
push
sub
mov
repz
cld
stc
repz
icebp
loope
ret
mov
mov
pusha
dec
lahf
aas
jg
and
mov
inc
mov
adc
mov
repz
lods
stos
scas
ss
test
jbe
inc
inc
mov
cld
xlat
mov
sub
mov
enter
pop
xor
scas
mov
stos
push
mov
aas
cld
mov
pop
lahf
fucompp
push
xchg
sbb
repz
das
fdivl
adc
dec
dec
fwait
aas
jg
cld
inc
fwait
mov
jmp
mov
xchg
dec
repz
lahf
inc
insb
jbe
mov
fcomps
imul
rolb
pop
test
xlat
aas
jg
cld
inc
and
shll
mov
push
fcomip
out
lahf
or
push
push
insb
jg
cld
stc
mov
inc
push
outsl
daa
mov
jle
dec
inc
and
and
lahf
aas
push
mov
test
pop
push
clc
or
scas
pop
cld
stc
repz
std
jne
out
or
jne
rol
repz
jg
dec
jg
sbb
and
and
repz
inc
push
mov
sub
fisttpll
ja
lahf
aas
jg
in
push
into
sub
rorb
jp
repz
adc
jne
test
clc
dec
data16
jb
aas
jg
cld
out
mov
and
adc
mov
repz
lahf
cmp
or
cltd
lods
shr
cli
mov
and
cld
stc
inc
pop
clc
scas
in
lret
jo
leave
lock
and
gs
cltd
les
inc
jg
jl
mov
pop
mov
addr16
jnp
jne
iret
lahf
aas
adcb
in
aam
addr16
and
cld
stc
repz
lcall
or
ret
aas
jg
ret
fsts
mov
dec
xlat
pop
idiv
stc
repz
inc
mov
divb
pop
leave
jns
lcall
pop
push
lret
pop
ljmp
jno
stc
repz
dec
sbb
sub
jne
pop
push
fwait
sub
jg
cld
dec
popf
and
aas
sti
stc
dec
out
stos
lret
adc
cltd
inc
repz
lahf
in
mov
sti
ljmp
cld
stc
xchg
ss
cmc
ret
mov
pop
jmp
iret
lahf
aas
sahf
jb
pop
pop
pop
out
push
leave
fisttps
mov
ret
in
pop
lret
test
ss
push
repnz
movhlps
lahf
aas
jg
add
push
mov
cld
stc
repz
mov
mov
jmp
insb
lahf
aas
jg
out
cmp
or
inc
test
repz
mov
leave
lahf
xchg
xor
jg
cld
test
outsb
shrb
push
lahf
mov
dec
fs
xchg
cmp
rolb
cld
stc
mov
scas
into
lock
scas
dec
cs
inc
pop
out
lahf
aas
push
faddl
jl
stos
xchg
cld
stc
repz
ret
mov
aam
int3
sti
loopne
mov
lahf
aas
jg
mov
out
jg
jns
outsb
mov
xor
stc
repz
jnp
mov
mov
dec
cmp
push
xor
aas
jg
mov
mov
lcall
enter
bound
mov
mov
lahf
aas
jg
and
inc
and
push
xchg
jo
stc
repz
popf
leave
xor
xor
push
loope
cmp
cld
in
add
ror
cmpsl
cld
inc
xor
iret
lahf
jae
fisttpll
test
lea
mov
stc
fwait
popa
repz
aas
mov
lahf
aas
jg
rep
push
ljmp
xchg
cld
stc
stc
repz
xchg
loopne
jp
jp
test
inc
aas
jg
sbb
adc
js
shl
iret
lahf
imul
xchg
int
into
push
adc
push
repnz
jg
repnz
insl
test
or
jg
call
out
lahf
push
hlt
cmp
fldenv
sbb
push
fdivrl
cld
stc
hlt
lods
test
sub
sbbl
scas
loope
sub
das
cli
pop
cld
stc
repz
in
xor
add
inc
mov
mov
aas
jg
addr16
dec
push
jmp
push
testl
fs
movsb
in
inc
imul
lcall
aas
jg
sbbb
cld
mov
nop
mov
stc
repz
idiv
sbb
sahf
fisttps
jge
pop
fcomps
stc
js
push
out
sub
repz
movb
sub
cmpsl
jg
cld
stc
jne
add
xor
loope
lods
aam
leave
out
lahf
aas
push
sub
xchg
mov
xchg
mov
cld
stc
rep
mov
lds
mov
and
iret
lahf
aas
jg
dec
lods
dec
jnp
jb
pop
popa
stos
and
cld
stc
repz
addl
jge
int
cld
mov
mov
jg
jl
sub
aam
int3
aaa
adc
stc
repz
cltd
mov
mov
out
xorl
daa
push
stc
repz
sub
jnp
lods
xchg
jmp
mov
aas
jg
cld
jnp
inc
inc
jns
lret
xor
jae
test
iret
lahf
lock
aad
das
in
lret
loopne
jg
cld
stc
push
cmp
sub
fwait
gs
daa
mov
out
lahf
aas
mov
ja
adc
inc
push
pop
jae
icebp
cld
mov
and
dec
or
and
stc
setae
xlat
add
lea
out
leave
mov
loopne
xchg
enter
stc
pop
mov
inc
push
push
es
iret
lahf
aas
sub
or
mov
push
cld
stc
repz
cmc
ja
mov
hlt
insl
mull
aas
jg
jb
into
add
loop
jle
or
cld
stc
repz
add
cmp
fsts
hlt
lret
lods
inc
mov
xchg
into
sbb
ljmp
out
mov
negl
add
sarb
jg
cld
hlt
pop
xor
andl
iret
lahf
jge
fadd
xor
pop
es
das
add
cld
stc
jmp
pushf
sahf
jo
pop
ret
mov
push
out
lahf
aas
mov
jne
ror
mov
stc
repz
cmp
lock
outsl
pop
call
iret
lahf
aas
jg
out
and
clc
pop
sub
and
inc
roll
mov
or
lahf
aas
jg
add
inc
js
sub
mov
loopne
movsl
fidivrs
out
dec
es
addr16
stc
aaa
aas
jg
cld
mov
sub
lret
lea
and
sbb
xchg
cli
sub
out
lahf
xor
cmp
dec
mov
jl
cld
stc
ret
adc
xor
cld
mov
dec
xorb
xor
lahf
aas
jg
cmp
leave
jmp
data16
out
push
out
cld
stc
repz
adc
sbb
int
fisubl
dec
lahf
aas
jg
sub
sub
xchg
mov
mov
mov
iret
xchg
pop
xor
sub
lods
push
or
jg
cld
lcall
mov
xrelease
insb
cmp
out
lahf
out
imul
jg
hlt
cltd
add
jg
cld
stc
jle
pop
test
daa
mov
jno
xor
aam
ds
sub
idivl
ja
cmpsl
inc
fmulp
lahf
aas
jg
xchg
out
insl
hlt
pop
sub
or
out
pop
aaa
push
push
xor
sbb
gs
aas
jg
sub
mov
xor
aad
int3
jns
hlt
sar
repz
test
insl
gs
mov
call
cld
xor
insl
dec
xor
cld
add
lahf
pop
std
repz
lahf
push
dec
fs
adc
jg
jg,pt
cld
stc
jl
clc
stos
lock
fsubrs
pushf
jnp
imul
lahf
aas
mov
xchg
lds
stc
repz
mov
and
fcoms
dec
jge
js
stc
adc
loope
iret
hlt
ret
inc
scas
and
daa
dec
in
jmp
gs
push
lds
adc
jg
in
pop
add
nop
xlat
jle
sarb
repz
lahf
in
adc
inc
xor
addr16
jg,pt
cld
stc
xchg
out
aas
aas
icebp
ja
nopl
mov
iret
lahf
aas
mov
loope
in
int3
fwait
add
shl
cld
stc
repz
xor
mov
popa
inc
dec
mov
lahf
aas
jg
iret
push
push
aam
and
adc
lret
adc
popf
shl
push
or
stc
repz
mov
stos
neg
cmp
pop
imul
cld
rcrl
jg
stos
adc
sub
repz
pop
mov
pop
fdivl
xchg
aas
jg
cld
xor
mov
push
repz
lahf
sub
dec
fcmovnu
cltd
jnp
xlat
mov
orl
mov
clc
adc
iret
lahf
aas
xchg
js
jno
cltd
mov
cld
stc
repz
test
or
xchg
mov
mov
push
add
ret
out
ret
xchg
dec
mov
mov
aas
jg
cld
sbb
mov
and
mov
push
repz
lahf
jb
mov
imul
jg
cld
stc
arpl
test
sub
inc
lea
lods
inc
pop
out
lahf
aas
icebp
lods
aam
pop
xchg
ja
mov
sbb
repz
jmp
sub
pop
out
ret
aas
jg
out
imul
pop
mov
in
push
mov
repz
cmp
mov
or
data16
pushf
aas
jg
cld
lock
mov
sar
dec
mov
ljmp
out
lahf
pushw
or
add
aaa
in
xor
into
jb
cmp
cmp
push
repz
inc
lea
dec
jne
call
stc
jle
shrb
fsubrp
xchg
lds
mov
lahf
aas
and
fsub
push
cmpl
cld
stc
repz
loope
mov
pop
push
mov
jg
fldenv
or
ja
lods
stc
stc
repz
mov
iret
dec
xlat
mov
or
lahf
aas
sbb
cltd
iret
test
test
add
enter
or
js
or
aaa
outsl
fisubs
xchg
call
fidivrl
jns
out
js
mov
jae
inc
pop
xchg
xchg
push
aaa
outsl
fidivrs
inc
and
ss
xchg
repz
fwait
icebp
or
push
mov
add
mov
jge
in
pop
iret
inc
jle
push
into
dec
and
mov
jae
stc
repz
jb
mov
out
lds
call
jg
andl
movl
std
fldenv
iret
mov
adc
daa
cmp
adc
xchg
aas
jg
cld
xchg
fucomp
adc
out
cmp
push
pop
pop
push
lahf
std
add
xor
repz
cld
stc
test
in
in
cmpb
lock
mul
iret
lahf
aas
mov
mov
hlt
add
cmp
push
out
icebp
sbb
xchg
test
jmp
xchg
fs
and
jg
jge
arpl
push
and
rcrb
sbb
lret
inc
cmp
mov
out
lahf
insl
jo
insl
jl
sub
adc
cld
stc
or
jl
test
cmp
mov
in
iret
lahf
cmp
out
pop
fdivl
or
outsl
incb
das
lcall
out
fwait
aaa
mov
and
lahf
sbb
arpl
test
ret
add
mov
lret
pop
xchg
aaa
outsl
das
inc
cltd
adc
lcall
cld
stc
jno
insl
negb
push
test
orb
enter
insl
inc
xlat
shrl
sbbl
jg
pop
push
mulps
in
dec
jmp
out
dec
sar
repz
pop
or
sub
xor
outsb
xchg
jg
cld
or
mov
fmull
lahf
aas
in
pop
push
shrb
cld
stc
repz
popf
push
jge
fimuls
mov
mov
jg
adc
test
pop
push
inc
cld
stc
repz
jg
hlt
lahf
cmp
fwait
pop
xor
xor
lea
pop
xor
daa
movsb
daa
test
xchg
sbb
jae
pop
adc
iret
cli
xchg
out
xchg
aas
jg
icebp
mov
jecxz
cmp
insb
repz
lahf
lcall
mov
xchg
jg
cld
stc
imul
imul
ds
iret
lahf
aas
subb
mov
pusha
push
jo
cld
stc
repz
insl
filds
pop
cmp
inc
out
inc
xchg
lahf
aas
jg
push
sbb
out
pop
mov
sub
mov
push
cld
stc
repz
pop
movsb
push
xlat
je
je
stos
dec
leave
dec
lahf
aas
jg
inc
fcomi
and
ret
or
and
dec
cli
mov
jge
test
sub
cmp
mov
mov
xor
adc
xlat
jb
cwtl
popa
sbb
adc
xlat
jg
cld
stc
push
aas
clc
loopne
sbb
lret
adc
jae
iret
lahf
aas
shrl
dec
bound
ds
cld
stc
repz
mov
jne
add
xchg
push
push
out
xchg
inc
jle
out
xor
jae
xchg
jg
cld
mov
iret
stos
or
or
pop
fcomi
out
lahf
aas
lcall
or
push
repz
shll
sbbl
aas
push
and
iret
lahf
jg
clc
lods
or
repz
push
fs
out
pop
cld
stc
repz
testl
ja
insb
fmul
lahf
aas
jg
movsb
arpl
loope
jp
sub
and
out
pop
push
cmp
stc
pushf
aas
fnstcw
aas
jg
in
out
mov
test
mov
out
ljmp
fidivl
int
pusha
arpl
pop
sbb
ja
xchg
push
roll
aam
mov
ss
lahf
aas
jg
cmpsb
sub
popf
dec
inc
fdiv
push
cmp
repz
icebp
pushf
xchg
sbb
popf
clc
icebp
jb
dec
mov
cld
testl
test
xchg
popa
out
lods
and
loop
mov
cld
stc
repz
aam
ljmp
push
stos
push
in
xchg
lahf
aas
jg
add
pop
cmp
mov
int
addr16
aaa
mov
in
in
outsl
int
aaa
outsl
movsb
outsl
push
adc
imul
out
fsubrs
xchg
adc
lea
daa
fwait
aaa
outsl
fidivs
les
pop
inc
mov
repz
pop
push
lea
arpl
inc
and
inc
fidivrs
add
jg
cld
stc
mov
cmc
cltd
xchg
and
cmp
iret
lahf
aas
sub
test
xchg
adc
repz
stc
cld
stc
repz
sti
js
jl
roll
rcr
mov
jg
or
cmp
scas
dec
mov
push
push
cmp
add
shl
enter
lds
repz
mov
ret
or
add
call
rorl
push
jge
mov
dec
pusha
lods
cmp
out
cmc
xchg
mov
push
and
movsb
repz
pop
push
push
rcll
in
mov
inc
fisubrs
sbb
and
add
mov
fidivs
pop
xlat
dec
cmp
lahf
aas
mov
mov
mov
cld
stc
repz
mov
pop
jbe
lods
cli
lahf
xor
andb
aas
jg
xchg
out
jge
ret
in
adcb
stc
repz
mov
push
xor
negb
aas
jg
fidivs
dec
mov
dec
cmp
repz
xor
popf
cmp
ss
aas
jg
cld
ret
lods
lods
daa
pop
hlt
inc
fnstsw
push
js
mov
enter
adc
mov
test
inc
cmp
mov
sar
repz
out
fchs
inc
xor
addr16
das
cli
adc
and
xor
jg
enter
lahf
dec
xchg
jle
shrl
mov
jg
cld
stc
cmp
sbb
ret
pop
inc
ret
sub
adc
lahf
aas
dec
push
ja
hlt
sbb
popf
nop
scas
in
inc
lret
xrelease
mov
dec
add
fwait
aaa
outsl
out
int3
test
dec
iret
dec
dec
dec
dec
fldt
jns
out
xor
data16
push
je
cmpsb
add
imul
inc
bound
fptan
or
repz
stos
ss
aaa
fistpl
xchg
imul
fidivrs
adc
idivl
jns
mov
mov
xor
loopne
iret
aas
mov
iret
data16
pop
add
daa
in
aas
out
mov
out
push
aad
test
xrelease
in
inc
cld
loope
push
lret
xchg
mov
sbb
out
push
pop
jae
mov
in
push
repz
and
fisubl
movsb
mov
lret
ljmp
mov
icebp
inc
sbbb
repz
lahf
jbe
pop
call
mov
imul
stc
jns
cs
dec
pop
test
test
addr16
aas
lods
or
pop
shll
scas
cmpsl
jl
lret
stc
repz
or
sub
test
iret
lahf
aas
jg
shll
std
sbb
mov
jnp
mov
adc
cmp
sbb
push
cmp
mov
xor
xchg
mov
enter
mov
hlt
xlat
mov
sbb
ja
ss
pop
lahf
jg
in
push
pushf
mov
sub
loope
repz
mov
push
testb
dec
sub
scas
aas
jg
cld
inc
xchg
std
cmpsb
add
add
mov
dec
mov
out
lahf
inc
xchg
cli
adc
mov
in
pop
or
pop
or
ja
je
aad
sbb
iret
lahf
aas
dec
in
mov
push
adc
cld
stc
repz
ljmp
xchg
xorb
add
int
lahf
aas
jg
add
icebp
and
cld
stc
repz
mov
mov
sbb
jg
mov
inc
mov
mov
repz
repz
cwtl
inc
mov
cltd
loopne
pop
push
std
jle
scas
lods
aas
jg
cld
hlt
cli
jno
dec
cs
sbb
jp
repz
lahf
jo
enter
enter
mov
iret
jg
cld
stc
mov
stc
xchg
dec
call
mov
scas
in
lahf
aas
push
jecxz
inc
enter
sub
hlt
outsl
outsl
aaa
lds
stc
ret
addr16
loop
sbb
sub
aas
jg
loope
stos
addr16
cwtl
sbb
xchg
add
lret
mov
or
loop
mov
cmpsl
mov
stc
repz
pop
loope
pop
fisttpll
rorl
lahf
ds
adc
jecxz
xchg
pop
popf
lds
or
stc
repz
repnz
jle
mov
lahf
repz
push
int
cwtl
mov
cld
stc
repz
or
filds
cmp
cltd
pop
lahf
aas
jg
out
notl
jle
test
and
sub
out
inc
loopne
sbb
jb
enter
add
pop
push
mov
fcompl
repz
fwait
adcl
adc
js
daa
add
cmpsb
xor
push
xchg
pop
mov
pop
scas
test
pop
xchg
bound
xlat
add
sub
jg
cld
mov
ja
mov
pop
sbb
or
ja
repz
lahf
xor
jl
xor
xchg
repnz
out
add
lds
loopne
jae
jg
das
stc
repz
dec
push
jbe
sbb
pop
cmp
xlat
mov
jg
cld
cmp
jae
jp
cmc
jmp
out
lahf
fadds
aaa
shlb
pop
outsl
mov
pop
out
jge
sub
inc
sbb
nop
inc
iret
lret
call
push
fdivrs
xor
add
xlat
scas
int
repz
out
test
into
cmpsl
and
jp
ret
push
push
stc
mov
mov
shll
fidivrs
and
pop
popa
jg
jg
dec
add
fwait
aaa
outsl
sub
fldcw
jb
lea
arpl
out
pop
lods
outsl
dec
in
hlt
mov
mov
outsl
ficoms
xor
bound
jns
out
jl
sbb
imul
arpl
outsl
fidivrs
push
repnz
rcrl
xor
add
xchg
fwait
clc
andb
mov
xor
out
lahf
aas
jp
push
push
pop
fucomip
sub
cld
stc
repz
mov
jne
lds
sti
lcall
xchg
inc
xor
fidivrs
out
fisttpll
repz
push
cmp
cmp
scas
cld
stc
repz
das
jo
cmp
inc
dec
cli
jo
cmpsb
add
aas
jg
and
dec
add
xchg
sub
clc
stc
repz
punpckhwd
jl
cwtl
test
dec
aas
jg
cld
mov
dec
in
daa
push
push
dec
lret
sub
movhps
dec
arpl
scas
adc
mov
jg
in
aad
xchg
arpl
mov
scas
jnp
add
ss
pop
shlb
add
jg
cld
stc
in
xchg
mov
sti
push
gs
mov
arpl
gs
enter
adcl
cmp
cld
stc
dec
pusha
cli
mov
arpl
xor
jns
out
lahf
aas
adc
sbb
add
cmp
repz
push
mov
jb
add
mov
xchg
dec
sub
inc
ret
mov
cld
stc
repz
jmp
int3
cmc
mov
std
push
inc
and
daa
aas
jg
ljmp
nop
xchg
out
fwait
ja
repz
test
fidivrs
lods
dec
aam
mov
adc
stos
int
aaa
outsl
xchg
lret
mov
aad
lods
mov
or
pop
and
mov
inc
sub
and
adc
cmove
dec
imul
xchg
dec
and
shr
lods
cmp
outsl
fidivrs
mov
invd
les
out
cmp
and
sbb
int3
out
jns
out
scas
xchg
jp
into
test
negl
jg
cmp
outsl
fidivrs
jle
stos
and
mov
inc
jnp
jg
mov
fidivs
and
roll
and
pushf
fidivrl
out
int
hlt
test
sub
sarl
lods
js
push
cmpsb
and
inc
testl
cmovns
dec
cwtl
mov
out
fwait
sub
vunpckhpd
adc
jnp
outsl
fidivrs
pusha
pusha
dec
push
lret
mov
das
out
fwait
aaa
std
jo
aas
push
pop
xor
movsb
iret
pop
neg
mov
cld
in
adc
jl
dec
int
aaa
outsl
xchg
inc
add
add
sahf
movsb
pop
stc
out
jno
daa
xor
add
dec
and
jns
pop
scas
add
lods
movsb
shl
out
dec
ljmp
aaa
outsl
inc
aad
mov
push
lcall
into
xchg
mov
push
mov
enter
jbe
gs
std
cltd
mov
int
aaa
outsl
ret
and
mov
push
out
fxch
fnstcw
dec
dec
pop
mov
push
jb
jl
mov
outsl
fiadds
or
repz
push
mov
repz
and
and
fidivs
aaa
outsl
fidivrs
and
shll
jmp
out
fwait
pop
pop
shrb
jge
add
mov
in
or
cwtl
int
aaa
outsl
xchg
enter
insb
adcb
xor
cmp
lahf
or
push
adc
clc
fadds
and
repz
or
dec
sbb
ljmp
inc
test
enter
ds
pop
aaa
mov
ljmp
xlat
adc
xchg
jne
and
outsb
out
fwait
aaa
mov
mov
inc
mov
mov
cs
ficoml
invd
mov
fwait
aaa
outsl
int
out
adc
push
sub
mov
scas
lods
jns
shlb
fsts
mov
fidivs
fcoml
fwait
int
aaa
out
lcall
jle
int
mov
mov
clc
inc
push
pop
jl
sub
enter
push
fwait
fwait
aaa
outsl
ficomps
test
or
lds
repz
cmp
into
sub
lods
push
add
je
shlb
mov
ljmp
testl
inc
push
scas
or
out
mov
movsl
add
enter
orb
divb
jg
cld
stc
jne
jecxz
inc
test
pop
inc
push
xchg
push
out
mov
xchg
out
pop
pusha
sub
fidivrs
lret
rcrl
in
mov
aaa
outsl
test
sbb
jne
pop
and
lahf
push
inc
push
pushf
shll
mov
mov
dec
cmp
aas
mov
and
ds
filds
outsl
xchg
cmpsl
insb
pop
out
stc
stc
repz
into
test
in
cmp
mov
gs
cld
jecxz
scas
fstpl
imul
aas
jg
scas
mov
out
sbb
icebp
push
cld
stc
repz
fcomps
mov
cmp
sub
or
scas
cmc
pop
jmp
out
sub
shlb
fnstsw
aas
jg
cld
inc
inc
leave
dec
mov
dec
push
xchg
cmc
in
lahf
test
sarl
data16
out
aas
std
insb
popa
xor
mov
rcll
outsl
fidivrs
aas
sub
div
out
fwait
xlat
lock
and
hlt
or
outsl
fidivrs
mov
bound
cld
xor
filds
aam
cld
or
shlb
or
cld
stc
repz
xor
inc
pop
insl
cmpsb
cltd
insl
sbb
aas
jg
push
fsubs
int
ja
xchg
xchg
jg
aad
sbb
sbb
aaa
xor
push
xorl
mov
aas
and
xchg
negb
icebp
xor
sub
cmc
and
cmp
daa
test
popf
push
iret
lahf
aas
jg
sarb
popa
xchg
cli
or
es
sahf
in
mov
mov
lahf
aas
jg
mov
add
inc
daa
out
sbb
mov
jne
mov
xchg
ss
aas
jg
cld
ficompl
mov
add
xchg
and
mov
jmp
lds
sub
repz
rcrl
inc
sbbl
add
lds
emms
xchg
mov
out
sub
aaa
cmpb
rcl
cld
sbbl
fisttpl
arpl
movsl
inc
stc
repz
dec
mov
cmp
sbb
cmp
cld
dec
adc
fstps
cmp
iret
mov
pop
xor
lcall
repz
or
sub
mov
cmp
outsb
inc
jle
addr16
arpl
aaa
outsl
fidivrs
inc
cmp
cmp
les
lods
jne
out
fwait
shr
das
aam
push
shrl
fidivrs
add
mov
insb
pop
sbb
js
int
aaa
popf
paddd
shl
cld
cld
stc
notl
sub
movsl
stc
push
xor
outsl
ficoms
lahf
jno
movsl
pop
jp
xor
pop
out
fwait
aaa
mov
adc
arpl
loopne
mov
mov
jae
dec
pop
mov
xchg
push
lahf
jg
fwait
add
imul
mov
sbb
shl
add
test
inc
jle
orb
xchg
cmp
fwait
aaa
out
mov
push
bound
je
sub
push
loop
repnz
jg
packssdw
mov
xchg
stc
outsl
cli
ret
out
xchg
lock
sbb
inc
add
jecxz
add
fidivrl
and
jne
in
sbb
xor
stos
jns
out
jne
mov
cltd
jmp
inc
mov
add
outsl
fidivrs
enter
xor
push
fistpl
int
insb
aad
loope
xor
lret
adc
mov
shrl
pop
mov
int
aaa
mov
bnd
and
and
mov
push
xchg
sbb
cmpsb
cmp
int
aaa
outsl
adc
fistl
mov
es
mov
or
repnz
outsb
sub
xchg
rclb
fs
mov
iret
cltd
push
xor
cld
stc
repz
imul
and
in
ds
icebp
dec
inc
cmp
lods
and
jg
fdivs
mov
ret
leave
pop
xchg
push
iret
dec
mulb
sub
and
jg
scas
jmp
test
pop
mov
aas
addr16
mov
out
into
in
divb
stos
roll
stc
repz
scas
stc
xchg
ds
push
pop
or
lahf
aas
jg
cli
push
rcrb
jae
mov
stc
repz
hlt
aad
add
hlt
jnp
sub
sub
movsb
xor
dec
pop
lahf
pushf
enter
iret
cmpsb
and
cmpsb
test
jg
loop
mov
mov
stos
adc
loope
stc
inc
daa
mov
jo
cld
pop
adc
call
jmp
mov
lahf
in
leave
sub
repz
lcall
cld
stc
push
mov
hlt
je
lods
daa
push
or
iret
lahf
aas
fldl
sub
outsb
pop
push
sbb
cld
stc
repz
ret
xor
jnp
mov
iret
lahf
aas
jg
mov
dec
int3
in
stc
add
jg
repz
push
sub
repnz
xchg
loop
xchg
lahf
shlb
ret
or
punpckhwd
add
mov
push
jle
jg
sbb
push
or
ficoms
incl
xor
repz
and
lds
sub
xchg
pop
and
mov
lods
ficomps
adc
aad
add
out
outsb
pusha
xchg
mov
in
gs
inc
sbb
out
iret
push
iret
jno
add
mulb
imul
ds
shr
lods
jle
sub
mov
dec
addr16
jo
or
lret
je
fwait
aaa
outsl
out
into
or
xchg
mov
fildl
out
push
std
pop
ret
dec
lahf
add
fwait
aaa
outsl
fidivrs
into
bound
sbb
lahf
cmpl
scas
insl
sahf
shrl
addr16
mov
mov
inc
push
or
adcb
xchg
in
lret
fstpt
jg
jo
mov
xlat
repnz
out
lahf
loopne
mov
xchg
xchg
xor
xor
adc
stc
mov
adcb
sub
jg
sbb
out
adc
xchg
xor
fwait
cld
jecxz
aas
dec
mov
cwtl
pop
or
std
leave
lahf
aas
jg
shr
pushf
insb
cwtl
xchg
mov
test
stc
repz
das
mov
into
sbb
in
out
dec
aas
jg
cld
jno
aaa
iret
jle
mov
mov
out
lahf
out
sub
jge
push
and
in
in
mov
repnz
cmp
out
cmp
cmp
ret
fidivrs
mul
jle
pusha
dec
movsl
jo
xchg
adc
test
jp
xchg
xchg
mov
push
mov
sbb
test
xchg
mov
orl
aaa
out
andb
mov
cli
enter
sbb
sub
scas
imul
sbb
jmp
xor
lods
jp
ficoms
mov
outsb
adc
mov
fs
outsl
pop
pop
jae
icebp
pop
adc
test
repz
cmp
pop
outsl
enter
or
js
clc
leave
fwait
aaa
outsl
ficomps
sbb
add
push
mov
out
mov
adc
push
notl
sbb
and
sahf
add
inc
mov
mov
cmp
mov
cmpsb
aas
jg
rcrb
push
jbe
icebp
in
jae
imul
in
popa
dec
dec
das
jle
adc
icebp
jg
cld
stc
push
add
pop
jmp
cmp
pop
inc
jmp
iret
lahf
aas
pmullw
je
arpl
adc
cmp
inc
cld
stc
repz
bound
mov
push
dec
ds
cld
mov
jmp
pop
dec
adc
mov
testb
dec
pop
mov
xchg
xchg
pop
outsb
cmc
sbb
ljmp
xlat
mov
adc
dec
mov
iret
lahf
aas
outsl
mov
mov
hlt
jae
into
fs
push
lret
repz
aaa
mov
int
fldl
test
push
add
pop
xor
add
inc
dec
aam
mov
fdivrl
mov
test
xchg
test
jg
mov
aas
std
dec
cmp
aam
lods
xchg
flds
mov
shl
repz
xchg
xorb
fsubr
xchg
roll
cld
stc
gs
ljmp
jl
xchg
add
ret
add
iret
lahf
aas
or
jge
sub
adc
stc
repz
jne
push
dec
icebp
mov
aaa
rolb
inc
mov
movaps
nop
jns
out
mov
mov
jbe
test
inc
fidivrs
pop
pop
inc
mov
aaa
xchg
movsl
inc
pop
nop
cld
push
jns
insl
test
inc
pop
in
lret
sbb
icebp
nop
int
aaa
outsl
shlb
aam
mov
mov
arpl
cli
mov
in
popa
call
aaa
outsl
fidivrs
loop
cmp
lds
adc
or
repz
dec
ror
push
pop
mov
jnp
xlat
aaa
outsl
fidivrs
movsb
std
loop
into
loop
mov
mov
mov
xlat
shrl
inc
mov
jnp
repnz
xor
cmpsl
adc
cld
and
jecxz
fdivs
outsl
ficoms
mov
or
mov
inc
shl
out
fwait
insl
adc
push
icebp
inc
lods
das
enter
fidivrs
lret
pop
hlt
sarl
or
call
push
repnz
in
or
mov
int3
cld
mov
leave
xchg
cltd
fwait
aaa
outsl
fisubs
pop
je
jecxz
inc
add
out
in
inc
call
cmpl
aaa
outsl
fidivrs
rcl
add
in
out
scas
imul
ffree
popa
dec
enter
stos
and
aad
iret
mov
xchg
iret
lahf
aas
jg
aas
push
and
xchg
addb
clc
leave
out
mov
popl
daa
enter
sbb
and
cld
iret
xchg
arpl
out
mov
inc
push
jmp
jg
jns
out
fwait
mov
pop
andb
jb
lods
cmpsb
dec
inc
jg
jge
fdivrl
faddl
mov
sbb
push
sub
iret
lahf
aas
insb
addr16
les
and
repnz
mov
lret
jns
out
sub
test
dec
movsl
push
sub
jmp
mov
add
enter
mov
orl
inc
fadds
xor
mov
jns
jge
dec
add
push
cltd
out
add
aas
fdivrl
in
dec
push
call
lret
cld
stc
repz
cmpb
push
sbb
cmpsb
dec
inc
and
lahf
aas
jg
mov
dec
cmp
subl
sar
repz
sahf
inc
rorl
sub
lret
or
lcall
imul
fcomps
xor
stc
repz
scas
cmp
adc
mov
aas
jg
cld
pushl
arpl
mov
repz
lahf
add
in
xchg
jmp
push
lods
add
jl
cld
stc
call
stc
lds
mov
sbb
cltd
sbb
cmc
enter
insb
jp
sbb
outsl
fidivrs
xor
mov
fwait
outsb
jl
or
repnz
fwait
inc
icebp
and
int3
cwtl
xlat
ljmp
dec
mov
loopne
jl
stc
push
or
fistps
shlb
outsl
mov
imul
inc
xchg
xchg
fwait
xchg
and
adc
repz
adc
cmp
out
in
nopl
push
mov
inc
stos
test
mov
push
lahf
jns
mov
daa
loope
shll
fwait
add
fidivrs
or
outsl
fmulp
mov
push
sbb
inc
cmp
stc
xlat
subb
xor
test
movsb
mov
or
jns
out
cmpsb
mov
incl
push
cmp
jb
mov
mov
add
and
adc
xor
xlat
daa
fwait
rcrl
mov
or
sub
pop
int3
cmp
push
fists
mov
mov
jge
icebp
in
lahf
enter
push
out
lret
aas
jg
xchg
jle
cmp
loope
popa
int
xchg
sbb
mov
out
insb
mov
sub
sarb
loope
daa
aas
jg
cmpsl
sti
pop
jge
adcl
mov
dec
imul
loop
mov
fsts
mov
lea
ficomps
popa
sbb
dec
les
xchg
push
cltd
inc
adc
repz
ficoml
pop
jb
push
xor
fadd
iret
aas
push
mov
inc
sbb
stos
add
cld
stc
repz
mov
rcll
mov
imul
incb
mov
gs
jmp
pop
mov
xchg
push
cwtl
subb
cld
stc
repz
push
aas
addl
xor
scas
test
lahf
jl
outsb
hlt
scas
mov
movsl
decl
push
enter
pop
mov
mov
sbb
pop
xchg
ror
mov
sub
mov
xchg
aaa
outsl
inc
xor
push
sub
cld
loope
fbld
sub
out
cld
stc
rep
adcl
push
lahf
out
jg
lcall
sbb
or
in
cmp
out
aas
dec
push
or
mov
setg
jg
mov
hlt
scas
clc
out
bound
jl
repz
mov
inc
mov
ja
mov
into
daa
jp
sub
mov
mov
lahf
js
mov
mov
sarl
int
ljmp
cld
push
js
add
mov
out
clc
clc
pop
scas
loop
inc
dec
xchg
and
repz
ret
popf
jbe
jno
sti
mov
dec
lahf
int
aaa
outsl
in
xor
adc
cmp
repz
call
jl
insb
adc
jns
aaa
outsl
ficoms
push
rorb
sub
int
shlb
popa
sbb
ljmp
add
mov
outsl
fidivrs
mov
dec
push
ss
or
inc
dec
insl
sbb
lahf
cld
stc
notl
out
inc
xlat
mov
pop
icebp
cltd
lahf
aas
jg
popa
cmp
pop
dec
adc
sbb
call
out
hlt
add
enter
sbb
jg
cld
cmp
mov
mov
jl
inc
jp
repz
lahf
pop
icebp
clc
popf
dec
adc
jbe
mov
mov
cld
stc
dec
mov
xorl
faddp
mov
dec
dec
push
je
pop
push
mov
ficompl
stc
stc
or
fucomp
jge
insb
popf
jo
repz
lahf
das
mov
popa
adc
push
jle
cld
stc
arpl
xlat
cs
jg
pushf
scas
loope
lret
dec
jnp
pop
mov
aas
mov
and
xchg
cmpsl
int
aaa
outsl
cmpsl
mov
lock
xor
jb
push
mov
and
lret
xchg
stos
sahf
shl
insl
fwait
aaa
outsl
fdivrp
addr16
cmp
out
xchg
cld
jns
out
jae
ror
inc
pop
mov
and
aaa
outsl
fidivrs
out
loopne
testl
es
fwait
loopne
xchg
ljmp
jns
or
ljmp
movups
movsb
xlat
loopne
fwait
aaa
outsl
lret
lds
jl
data16
cld
mov
lret
and
dec
adc
cmpsl
repnz
pop
stc
push
pop
push
pusha
add
xor
imul
cld
xchg
xchg
jle
jo
fdivrl
sub
pop
inc
hlt
adc
movsl
ss
out
mov
stos
adc
cld
stc
add
ljmp
pusha
jecxz
push
push
iret
lahf
aas
xor
mov
dec
mov
cld
stc
repz
mov
and
iret
cmp
scas
xchg
adc
iret
lahf
aas
jg
xchg
leave
fs
xor
cmpsb
repz
stc
repz
mov
mov
xor
sub
aas
stc
sti
lods
je
cld
cs
sub
fwait
aaa
outsl
sbb
jne
inc
packssdw
mov
shl
xchg
das
js
dec
fmuls
outsl
and
xor
sbb
fwait
stos
xlat
dec
lock
cld
outsl
andl
repz
pop
or
mov
pop
in
mov
repz
leave
mov
fwait
aaa
outsl
fidivrs
lcall
lds
jns
out
fstl
fadd
and
sub
popl
fidivrs
mov
das
jl
jae
mov
repz
fsubrl
mov
cmpsl
jl
xorb
cmp
mov
insb
jp
test
repz
pushf
std
pusha
and
mov
mov
icebp
inc
jle
cld
pop
mov
stc
jp
xor
loopne
add
cld
stc
inc
cs
mov
pushf
mov
out
lcall
mov
pushf
into
sbb
add
cld
loope
pushf
dec
cmpsl
and
gs
cltd
iret
lahf
aas
jg
in
hlt
imull
push
add
or
out
mov
sahf
inc
or
scas
lret
cmp
lahf
aas
jg
jmp
rcrl
in
inc
mov
adc
xrelease
xchg
int
aam
xlat
dec
sub
stc
pusha
or
fmull
stos
cltd
pop
in
lret
scas
xor
in
lahf
aas
mov
into
xchg
sub
out
mov
fimull
mull
jp
repz
push
into
mov
aaa
out
sbbb
push
push
aas
movsb
dec
popa
out
inc
cmp
loopne
fwait
repnz
xlat
je
out
loopne
lahf
aas
pop
clc
test
gs
mov
dec
int
mov
inc
adc
jns
aaa
outsl
fmulp
out
sbb
cmpsb
adc
dec
mov
jns
out
inc
scas
loope
mov
repz
stos
lahf
insb
fidivrs
push
inc
mulb
cld
stc
xrelease
mov
adc
jl
enter
lret
and
insb
orb
test
mov
outsl
inc
jle
cld
push
adc
in
std
in
leave
cld
mov
inc
fbstp
and
iret
lahf
aas
jg
das
add
or
sub
leave
out
fbstp
outsl
fiadds
adc
cmpsb
pop
mov
sub
int
aaa
mov
jo
sahf
insl
ret
fdivrl
cmp
push
mov
mov
cmpsb
iret
lahf
jg
dec
cmpl
push
cld
stc
repz
clc
fstpt
clc
out
mov
std
subl
adc
pop
sub
fistps
and
enter
dec
and
out
out
cmp
shrb
repz
pop
and
fidivl
int
aaa
outsl
pop
sbb
rorb
adc
cmpsb
mov
aam
outsl
mov
sub
leave
inc
int3
inc
fwait
aaa
outsl
das
inc
jp
in
fstpt
test
scas
call
dec
mov
fidivrs
push
pop
lods
inc
test
fidivl
fwait
aaa
adc
jo
add
mov
loop
scas
cwtl
rorl
cli
insb
cmpb
cld
stos
mov
jo
testl
add
and
pushf
xor
out
fwait
xchg
repz
rolb
and
mov
cld
mov
dec
add
push
sub
inc
pop
add
or
xor
mov
dec
jle
aad
outsl
aad
std
jnp
adc
and
or
pop
add
inc
xchg
outsl
cld
stc
repz
in
push
test
xor
sbb
iret
lahf
aas
jg
adc
cmc
mov
dec
fsubl
mov
stc
repz
xor
sbb
scas
push
pop
cmp
insb
adc
xchg
stos
pusha
pop
or
fsub
shlb
jnp
add
push
loop
les
add
test
pop
adc
push
inc
enter
iret
add
imul
leave
adc
cmpsb
cli
mov
imul
mov
mov
dec
pop
ret
fwait
aaa
outsl
fimuls
lret
sbb
jns
out
mov
lds
ss
jns
cli
aad
or
or
push
fwait
sub
outsb
jo
and
jne
int
insl
stos
out
insl
call
and
push
mov
adc
xor
stos
daa
inc
out
or
test
mov
int
pop
jle
loopne
xchg
rolb
adc
lahf
aas
jl
mov
enter
les
cld
pop
cld
stc
repz
fstpl
iret
sub
sbb
lahf
aas
jg
fcom
and
xchg
jno
mov
or
in
mov
add
das
jg
pop
jge
jns
inc
loope
stc
movl
cld
stc
repz
aam
or
aaa
pop
dec
mov
iret
lahf
aas
jg
mov
or
int3
adc
or
stc
repz
jae
jmp
sahf
les
lahf
aas
jg
add
imul
iret
popa
mov
pop
add
outsl
shrb
inc
cld
pusha
inc
xchg
mov
sbb
fwait
sbb
jno
out
xchg
pop
sbb
xor
out
pop
push
fisttps
aaa
das
mov
jl
mov
jb
dec
adc
inc
dec
ds
and
loope
outsl
iret
lahf
aas
jg
cli
pop
push
in
xor
push
mov
cld
stc
repz
test
adc
gs
or
inc
out
aas
jg
negb
stos
adc
lods
test
repz
notb
enter
add
call
aas
jg
cld
nop
shrb
push
test
push
fsubrs
lahf
scas
xor
pop
add
mov
mov
cmp
push
push
xchg
int
aaa
outsl
push
xchg
xchg
xchg
push
jg
jmp
mov
dec
movsb
or
int3
xor
push
aad
xchg
sub
fisubrs
adc
sbb
push
cltd
lods
jns
out
mov
lds
hlt
imul
adcl
rorb
scas
cmp
jns
xchg
jecxz
in
fwait
fwait
dec
std
pop
sub
dec
inc
mov
dec
iret
mov
aad
jmpw
cmp
mov
dec
std
cs
out
fwait
ja
jle
mov
aam
mov
jns
cmp
mov
and
dec
fs
repz
insb
fsubs
iret
pop
incb
stc
das
inc
pop
add
repnz
pop
mov
lahf
aas
mov
mov
jl
shl
lods
xchg
testl
aas
data16
xchg
mov
outsl
fdivp
and
lea
mov
out
dec
test
pop
aas
clc
pop
scas
mov
fdivrl
popa
fwait
xor
mov
stc
mov
lahf
mov
ss
andb
leave
in
jge
enter
lret
jmp
lea
cld
ds
and
into
sbb
inc
lret
out
lahf
push
mov
mov
add
cld
stc
sub
push
jno
ficoms
sbb
out
lahf
aas
jg
xchg
popa
mov
inc
push
cld
stc
repz
or
imul
test
push
std
pop
movsb
pop
scas
push
pop
lret
push
jo
enter
aad
push
mov
paddusw
fwait
aaa
outsl
mov
fwait
jb
xor
pop
in
repz
xchg
test
jo
aaa
outsl
fidivrs
mov
insl
push
addr16
sbb
ret
and
popl
test
adc
std
testb
push
scas
sbb
int
jo
repnz
cmp
aaa
mov
loope
dec
into
out
notl
and
jg
test
jae
sbb
jbe
xor
mov
mov
adc
sbb
cmp
add
add
cld
sbb
sahf
mov
mov
inc
ret
aas
jnp,pn
out
lahf
mov
fbld
pop
aam
xor
insb
fsubs
jg
jo
stos
shlb
xchg
bound
cld
stc
repz
int3
jl
sbb
dec
xchg
or
mov
jg
xor
outsl
outsl
fidivrs
pop
xorl
subl
xor
xchg
fwait
aaa
imul
loopne
test
clc
enter
jae
lret
ds
cmp
pop
stos
jle
btcl
fwait
aaa
outsl
sub
fnstsw
sahf
bound
icebp
enter
mov
faddl
bnd
fidivrs
xor
push
mov
inc
subb
int
xor
inc
push
xor
repz
mov
mov
sar
nop
mov
mov
popa
mov
jle
fwait
aaa
outsl
fisubrs
jns
or
xchg
repnz
cmp
mov
int
cmpsl
xor
addb
jge
sbb
lods
lds
xchg
push
movq
idiv
mov
in
adc
mov
or
aam
cmpsb
push
inc
cli
enter
ljmp
mov
fidivrs
ss
in
push
clc
out
fwait
aaa
in
cmp
or
bound
repz
add
lahf
or
pop
pop
mov
aaa
outsl
out
push
sub
sbb
sbb
xlat
push
xor
aaa
outsb
jle
mov
sub
repnz
fwait
aaa
jg
rorb
icebp
dec
mov
jl
jns
out
xchg
add
out
mov
ficoml
xchg
aaa
out
and
scas
xlat
icebp
icebp
jmp
je
out
fwait
movsb
je
addb
into
cmpsl
lea
sahf
and
fsubrl
cmp
cmp
out
fwait
aaa
push
ds
insb
sub
pop
xor
mov
enter
mov
cmp
mov
int
aaa
outsl
fildl
dec
fsub
add
addl
in
addb
mov
out
and
xchg
xor
clc
cmpsb
push
or
int
aaa
push
add
jmp
andl
xchg
jae
test
push
xor
and
sti
ljmp
xchg
out
xchg
push
pop
mov
je
cmp
testl
mov
push
int
aaa
outsl
outsb
pop
addr16
ja
cld
data16
cmpsb
dec
fistpll
inc
hlt
mov
bound
out
fdivrl
sbb
pop
in
aaa
mov
stc
repz
loopne
push
movsb
nop
ja
cmp
sbb
test
iret
lahf
aas
jg
pop
movsb
and
aam
shl
out
mov
pop
lcall
out
fwait
aaa
pop
dec
hlt
out
dec
das
mov
or
jns
fcompl
das
rolb
xchg
cmp
mov
sbb
test
sarb
or
movsl
adc
fdivrl
dec
xchg
cld
and
aaa
outsl
ficoms
rcl
testl
int
pop
push
xor
mov
jp
fcmovu
scas
sub
loop
cmp
add
xlat
xchg
mov
jmp
in
repz
imul
pop
inc
and
outsl
mov
mov
and
int3
cmp
jb
out
jecxz
mov
lret
mov
cs
repnz
cmp
jge
fwait
aaa
out
lahf
gs
mov
imul
out
and
aad
ja
push
mov
aaa
outsl
fimuls
gs
and
sub
cs
int
xor
adc
stos
mov
icebp
in
pop
fists
xor
ret
jns
out
out
popf
ds
test
jnp
cmp
fidivrs
bound
jae
fwait
sbb
dec
divl
jo
fstpt
iret
lahf
aas
fstps
add
sti
lods
int3
ja
fwait
ja
pop
sbb
out
sbb
pop
mov
and
add
inc
pop
aas
lea
aaa
test
fs
ja
test
imul
adc
into
mov
mov
repz
std
mov
push
cmp
insb
cmpsl
pop
sarb
cld
stc
pop
jno
ret
pop
xor
dec
sub
xchg
xor
iret
lahf
aas
ss
dec
sbb
fidivrl
repz
lret
stos
xor
dec
jg,pt
sub
cmpsb
push
cwtl
rcl
cmpsl
dec
cld
stc
repz
mull
negl
pushf
jnp
psllq
cmp
ljmp
ja
and
negl
or
push
xchg
lahf
lret
mov
push
xchg
repz
repz
outsl
fidivrs
mov
nop
add
lret
out
fwait
aaa
add
lcall
mov
mov
mov
imul
push
fwait
cli
jno
lods
stc
ds
sub
or
outsl
add
stc
add
insl
aad
rcll
aaa
outsl
fidivrs
bound
mov
inc
scas
cld
stc
xchg
push
insl
push
pop
push
or
push
mov
jg
xor
jg
hlt
cltd
shll
ja
mov
pop
pop
inc
daa
call
xchg
push
shlb
int
mov
fbstp
imul
mov
and
int3
ljmp
leave
dec
adc
cmp
fstpl
add
add
ret
or
out
lods
testb
filds
mov
psrld
mov
out
fwait
inc
push
inc
push
aam
insl
repnz
ret
std
outsl
fidivrs
adc
mov
mov
fsubrl
int
aaa
add
in
in
push
cltd
leave
fnstcw
mov
int3
pop
and
outsl
ficoms
loope
arpl
inc
loope
flds
int
aaa
ret
in
push
or
fidivrs
inc
adc
clc
adcl
aaa
outsl
fimuls
sti
xchg
jle
push
jb
out
xor
call
mov
aas
jg
orl
pop
jg
addr16
test
ljmp
mov
mov
or
fisttpll
mov
cmp
cmp
inc
mov
xchg
cmp
pushf
rcll
nop
stos
sub
mov
pop
jns
push
aad
fcompl
fsubrl
stc
ret
leave
fwait
frstor
das
sub
aas
jg
cld
out
mov
pop
xor
push
enter
mov
das
lods
inc
mov
cld
fistpll
inc
lock
xor
jg
mov
notb
push
jl
xchg
out
lahf
aas
jae
ret
int3
test
inc
repz
jp
mov
stc
mov
outsl
fidivrs
jne
jmp
aas
push
icebp
pop
mov
cwtl
js
inc
ss
out
inc
sub
and
fnstcw
shll
clc
lcall
int
add
pop
movsl
out
ret
pusha
add
xchg
dec
lahf
adc
jae
xchg
xchg
jo
sub
addr16
jo
pop
xor
inc
inc
jb
jae
shufps
sbb
sbb
inc
jo
mov
movb
sbb
pop
pop
pushf
enter
xlat
lret
inc
add
aaa
lahf
pop
scas
jo
out
jl
stc
inc
xor
bound
jl
test
pop
pop
and
out
outsb
addr16
mov
jo
bnd
inc
sub
inc
insl
push
jge
cmpsb
sti
jp
pop
and
adc
inc
adc
sbb
xchg
and
sbb
imul
jmp
mov
inc
adc
in
push
adc
inc
jnp
call
or
cmpb
pop
cwtl
push
or
adc
inc
es
std
addl
mov
mov
ljmp
das
lods
dec
mov
mov
add
or
mov
insl
aam
add
in
call
add
cli
and
stos
daa
inc
sbb
push
push
scas
or
xor
inc
jno
aad
jp
pop
or
cmp
fistl
cmp
push
push
add
cmp
mov
jae
lds
test
mov
push
add
sti
jge
test
inc
cmpb
adcb
fisubrs
add
clc
adc
push
mov
repnz
mov
popf
jae
leave
pop
mov
push
push
mov
adc
add
mov
jg
add
and
call
push
adc
ret
push
jae
roll
push
inc
shlb
pop
adc
andl
sahf
jo
add
mov
adc
pop
inc
aam
add
push
jg
add
stos
jb
xor
stos
lahf
add
dec
push
sbb
stos
pop
xchg
and
clc
jg
push
ds
xorb
xor
xchg
jae
xor
cmp
rclb
or
adc
rolb
inc
in
push
clc
addr16
push
add
add
mov
rolb
notb
inc
jle,pn
push
je
add
push
push
add
mov
mov
push
imul
sbb
int3
ror
add
fmull
inc
adc
cs
mov
adc
dec
lock
inc
cmp
fisttpll
mov
adc
jbe
mov
push
sub
push
push
fstps
sbb
push
add
xor
pop
sbb
mov
push
clc
andps
inc
ret
fmuls
xchg
cmp
icebp
mov
lahf
and
or
icebp
mov
adc
mov
jecxz
push
sahf
push
call
pusha
add
add
push
push
imul
lods
shll
inc
aam
ljmp
xchg
mov
shlb
push
xor
adc
daa
mov
int
add
dec
cli
push
add
stc
sbb
cmp
repnz
adc
mov
jo
andb
jo
adc
xor
jo
out
mov
mov
arpl
add
pop
pop
push
sub
cmp
loopne
test
arpl
scas
adc
cmp
adc
mov
mov
imul
push
adc
enter
and
dec
ja
push
and
xor
push
scas
stos
pop
add
lods
dec
subps
add
arpl
es
push
inc
mov
ficompl
loope
mov
dec
lea
inc
les
cmp
adc
inc
aad
movsl
pop
sbb
lods
rclb
push
pop
push
add
add
mov
sbb
sbb
push
add
xor
dec
dec
aas
test
adc
lock
mov
cli
xchg
int
fs
call
or
mov
clc
mov
push
ret
jo
adc
divb
push
mov
push
icebp
pop
sbb
hlt
int3
and
iret
and
pop
adc
sub
call
adc
sbb
into
xor
sbb
sti
shl
xchg
xlat
or
fldenv
sbb
out
sbb
cli
pop
sub
or
call
add
jmp
or
adc
and
mov
sbb
adc
or
ret
in
aaa
cli
sbb
ljmp
inc
mov
leave
xchg
sbb
inc
push
mov
push
test
and
mov
das
mov
ret
pop
and
cs
mov
inc
push
mov
icebp
push
xchg
and
pop
sbb
mov
xor
push
mov
push
fcomps
aam
rcrl
and
int3
cltd
subb
and
mov
orb
fs
loopne
fadd
int3
fwait
popa
pop
add
sub
cltd
or
mov
adc
sbb
inc
js
outsb
inc
push
inc
stc
adc
imul
movsl
bound
sbb
iret
ret
subl
adc
or
push
enter
or
cmpsb
ret
mov
or
rcrb
scas
pop
mov
insb
mov
mov
and
push
push
lret
or
xchg
stos
dec
stos
sbb
adc
adc
out
xchg
aaa
adc
jmp
arpl
out
sbb
rcrl
and
lock
mov
sbb
rorb
mov
int
or
ljmp
mov
int3
xor
sbb
add
push
mov
sbb
push
add
fiaddl
out
sbb
loope
inc
mov
test
or
xorl
jo
mov
enter
add
into
cmp
xor
xchg
xchg
sub
out
loopne
add
addb
test
scas
aas
adc
mov
cmp
test
add
push
int
inc
aam
fidivl
inc
mov
cltd
ds
adc
roll
lret
or
aam
jmp
add
aad
xor
sbb
daa
adc
add
mov
push
fdivr
and
xlat
add
cs
add
rorb
inc
or
push
into
add
cwtl
pop
shll
leave
or
mov
add
dec
dec
or
pusha
jne
or
cmp
enter
cmp
add
lods
lock
push
inc
push
push
mov
in
stos
or
mov
mov
mov
xchg
into
fs
mov
gs
adc
jp
inc
xchg
lret
stos
mov
sub
aam
and
ljmp
sbb
jg
pop
addl
rcll
stc
mov
or
push
inc
stos
cli
add
or
cmp
inc
jmp
call
addr16
or
push
enter
sbb
or
push
cmp
pop
mov
idivb
push
push
test
sbb
xlat
lea
push
fadds
sbb
push
mov
popf
add
inc
cmpsl
adc
pop
add
sub
icebp
cmp
mov
dec
jb
pop
ret
adc
out
repnz
add
js
inc
sbb
cmp
mov
bound
lods
cld
inc
and
inc
push
mov
mov
push
lcall
test
decb
mov
repnz
sti
cmp
adc
push
leave
popa
pop
lea
sbb
jno
fcmovne
inc
pop
add
push
adc
ret
push
mov
push
inc
lods
stos
scas
test
add
fs
or
xlat
rcrb
out
jp
neg
cmp
sbb
xchg
pop
rcrl
daa
mov
push
in
dec
aaa
and
mov
jne
mov
xchg
bound
inc
loope
dec
icebp
or
call
aam
xor
out
or
ljmp
or
adc
jmp
push
test
pop
xor
les
mov
sti
stc
add
rcll
jb
dec
push
add
loopne
insl
shll
adc
and
lds
lds
subl
add
and
bound
xchg
aaa
jp
mov
sbb
xchg
decb
fucomp
unpcklps
add
aas
or
shrb
icebp
jbe
or
outsl
arpl
enter
pop
mov
or
testb
sahf
sub
test
or
push
movsl
add
unpcklps
xor
sbb
push
jbe
add
mov
pop
lods
sbb
push
sbb
add
mov
pusha
popf
sbb
xorb
aad
xor
and
inc
pop
and
pop
mov
mov
and
cli
in
rolb
test
adc
add
cmp
out
push
test
xor
mov
pop
cwtl
mov
push
mov
mov
or
repz
add
xor
mov
xchg
fsubl
push
pop
and
jmp
xor
push
sub
add
mov
sub
out
inc
adc
add
lds
in
pop
dec
adc
cmp
jb
or
lock
pop
ds
arpl
ficomps
adc
orl
and
adc
push
inc
scas
xor
and
inc
push
test
andb
jg
pop
push
pusha
xchg
sbb
adc
xchg
pusha
lret
outsl
sbb
adc
sub
mov
pusha
jne
xchg
sbb
pop
fstpl
repz
mov
and
jle
lock
sarl
add
pop
inc
lods
mov
mov
in
push
mov
rcrb
mov
lock
inc
pop
mov
test
das
adc
sbb
mov
ds
clc
cmp
jmp
mov
fld
lods
mov
add
xor
popf
sarb
fcoms
push
add
ljmp
cmpsb
into
xchg
mov
mov
icebp
or
orb
push
push
add
ret
ljmp
cmpsb
sbb
repnz
push
or
test
pop
push
pusha
enter
fwait
push
mov
call
lret
push
call
adc
add
sub
cmpsl
stos
mov
or
adc
add
push
mov
pop
fistpl
cwtl
jmp
sbb
add
mov
xor
push
lret
icebp
movaps
arpl
inc
add
add
loop
fiaddl
jmp
adc
icebp
or
imul
cmp
mov
xlat
ds
xor
lock
pop
pop
adc
sub
push
mov
xor
lea
adc
pusha
push
push
add
mov
mov
ss
mov
sbb
push
in
addl
push
pop
push
mov
inc
push
dec
pop
icebp
test
stos
repnz
gs
out
subb
adc
out
pop
fisttpl
push
xchg
orl
mov
inc
or
fidivrl
pop
add
testl
shlb
xchg
or
and
adc
mov
xchg
sub
inc
aam
mov
adc
call
inc
lods
pusha
pop
mov
mov
mov
mov
popa
push
mov
imul
pop
xchg
movsb
mov
and
push
and
adcb
push
in
fstpt
adc
ljmp
or
xchg
cli
stos
xchg
dec
insb
sbb
or
shll
inc
aad
andnps
inc
cltd
and
cmpsl
mov
xchg
jns
add
push
push
sbb
adc
loop
add
xchg
mov
and
adc
push
repnz
cmpb
int3
es
inc
faddl
xchg
inc
roll
enter
cmp
lahf
addb
and
dec
inc
adc
cmp
jo
je
aas
pop
push
es
push
sbb
adc
lock
push
mov
dec
adc
out
push
dec
shlb
jo
imul
pop
adc
test
sub
jae
and
adc
cmp
sbb
lret
xchg
or
push
push
in
shrl
shl
mov
aad
push
cwtl
sbb
or
subl
cli
mov
push
rcrb
add
inc
sbb
jo
and
add
icebp
inc
cmp
mov
les
push
push
inc
add
push
test
or
lock
and
nop
push
xor
fcoml
test
push
push
adc
fstl
and
pop
leave
mov
rcrl
adcb
test
push
xor
addb
or
fiaddl
stos
test
xor
jmp
push
decl
rorb
fdivrl
mov
mov
mov
js
pop
push
cmp
xchg
ret
or
or
enter
fbld
ficomps
push
push
loopne
mov
jle
inc
push
inc
push
jmp
jge
xor
xor
push
inc
loop
nop
add
sbb
sbb
add
cmp
pop
mov
mov
add
loope
dec
scas
ficoml
out
jbe
add
inc
push
push
or
aaa
dec
imul
adc
cmp
pop
shrl
inc
rorl
mov
stos
pop
pop
cli
pop
stos
and
push
and
adc
jmp
rcrl
mov
dec
je
aas
dec
jl
adc
mov
cld
nop
and
loopne
jne
adc
lret
orl
pop
call
js
test
sbb
insl
jle
add
pop
xchg
inc
out
add
dec
add
jb
in
in
jecxz
or
add
inc
inc
or
shlb
mov
mov
add
push
std
cwtl
lods
push
sbb
mov
push
imul
imulb
push
sub
das
or
loope
xor
pop
adc
mov
icebp
mov
in
and
adc
add
xchg
ds
and
pop
lcall
rcl
xchg
ja
mov
or
inc
mov
cwtl
or
sub
lea
aad
and
daa
add
jecxz
xor
and
xor
mov
sbb
push
add
nop
adc
ret
mov
push
xchg
cld
cwtl
dec
daa
or
pushl
cli
add
push
aaa
stos
or
add
mov
fcompl
push
dec
ljmp
xor
sahf
pop
inc
insl
movsb
clc
pop
or
mov
jl
push
add
sub
and
push
test
fnsave
sbb
andb
or
lds
popa
adc
pop
push
scas
imul
push
xor
inc
add
or
and
inc
adc
push
dec
inc
inc
or
rcrb
fstpl
popa
push
mov
pop
xor
mov
inc
mov
dec
jo
pop
mov
cmpb
cmpsb
rorb
jne
add
or
rcrb
out
outsb
popa
clc
popa
dec
fcom
jg
cmpsb
inc
jno
mov
call
pop
es
add
ret
pusha
stos
push
shrl
adc
mov
andb
jae
inc
push
mov
sbb
cld
enter
push
lds
xor
add
jle
les
xorl
pop
mov
test
mov
leave
inc
push
mov
adc
add
ret
clc
lret
or
sbb
fcomip
mov
inc
es
repz
cmp
mov
push
mov
push
inc
rcrl
inc
xacquire
dec
hlt
addl
ret
mov
cwtl
sub
cmpsb
roll
dec
push
lcall
and
cmp
and
inc
test
push
movsb
mov
push
int3
sbb
adc
stos
pop
movsl
pop
cs
add
or
dec
ror
or
push
subl
jle
adc
enter
mov
aad
xchg
shll
sbb
cmp
enterw
cmp
sbb
add
adcb
sub
shll
push
into
adc
mov
inc
stc
xor
add
stos
outsb
mov
pop
xor
int
les
je
or
inc
or
adc
or
es
or
sbb
xchg
ret
or
push
lcall
lret
in
test
fldcw
ror
push
push
mov
pop
adc
add
push
jo
imulb
pop
shll
fdivrs
orl
add
cmc
jp
sub
in
xchg
insb
cmp
push
inc
xchg
mov
nop
sub
nop
bound
insb
cmp
jae
sub
or
cmp
je
add
test
adc
sub
in
add
lea
and
pop
lock
xchg
xorl
inc
push
lahf
jp
jb
jo
sbb
dec
dec
std
in
add
sbb
mov
or
clc
adc
and
add
add
stc
add
call
pushf
leave
push
jp
aad
sub
mov
add
clc
cld
notl
xchg
push
gs
daa
stos
clc
or
arpl
repnz
xchg
ds
pop
xchg
push
adc
or
rcl
popa
sub
sub
out
mov
add
jp
push
push
mov
ret
fidivl
inc
pop
and
pop
adc
int3
cmp
sbb
movsl
hlt
sbb
add
mov
pop
test
push
enter
and
rcr
push
clc
or
sbb
xor
mov
enter
push
push
add
jae
das
mov
leave
push
add
test
xchg
add
inc
add
gs
rorl
popa
lods
sub
mov
out
mov
notl
lds
lods
inc
sbb
add
push
cld
hlt
push
lret
adc
push
inc
cmp
jns
xor
adc
insl
int
or
mov
push
sub
inc
or
dec
mov
add
mov
scas
stc
cmp
sar
mov
mov
push
sbb
bnd
or
add
je
add
add
sbb
inc
add
mov
mov
sbb
ret
xor
dec
mov
jmp
xor
jmp
or
adc
xor
xor
cmp
dec
mov
xchg
mov
addb
movsb
and
call
and
cmp
push
gs
inc
roll
push
sbbl
popa
adc
add
jae
loopne
lock
mov
push
cs
daa
pop
or
push
mov
stos
test
lret
cmp
jns
or
shlb
push
lahf
add
mov
mov
out
ljmp
ljmp
push
cwtl
add
scas
or
arpl
add
enter
popa
ljmp
mov
pop
mov
mov
xchg
dec
clc
jp
inc
or
pop
test
sti
adc
push
xor
cmp
sbb
in
bound
cwtl
sub
mov
ret
mov
dec
scas
ljmp
sbbb
jo
xchg
dec
sub
add
dec
sar
add
sbb
sub
sbb
and
and
mov
inc
scas
xchg
mov
or
roll
mov
loope
loopne
stc
mov
pop
or
in
xor
rorb
xor
add
cs
mov
add
call
and
std
scas
push
adc
test
adc
adc
adc
or
xchg
popf
mov
fadd
movsb
sub
add
add
and
adc
push
jno
dec
adc
cmpsb
pop
and
test
cmp
lods
fwait
or
push
aaa
push
or
jo
xchg
adc
or
push
xchg
ds
aas
sub
dec
push
js
call
xchg
sarb
call
or
push
xchg
and
or
lret
loopne
mov
scas
or
dec
sub
into
jge
pop
out
fmuls
inc
add
fildl
fs
scas
sbb
mov
lock
lret
add
mov
add
or
cld
xchg
and
add
mov
int3
inc
aam
stos
leave
xor
aas
out
dec
and
sub
adc
sub
push
cmp
adc
mov
xor
xor
es
inc
inc
nop
fdivs
add
xor
or
cmp
adc
orb
orb
inc
dec
sub
scas
pop
jnp
and
push
sbb
pusha
push
add
mov
mov
lods
sub
repz
mov
lds
fs
cmpsb
push
inc
subb
out
jmp
pop
push
pop
xchg
das
cmovnp
rcr
jl
push
sub
fisubl
adc
leave
repz
or
int
push
aaa
ret
add
dec
call
es
adc
mov
int3
mov
shlb
adcb
sbb
jl
popa
xor
add
push
jne
cs
and
cmp
and
or
lds
inc
pop
scas
jb
shr
add
push
and
les
inc
jnp
mov
pop
mov
jnp
leave
and
pushf
test
cmp
out
movups
mov
and
pushf
aad
int3
pop
inc
sub
cmp
xchg
lret
xor
dec
std
sub
mov
pop
adc
push
lock
stos
mov
pop
adc
mov
xor
or
push
pop
data16
in
stos
push
and
ret
inc
stos
mov
pop
cmp
sub
sbb
inc
or
inc
nop
mov
in
mov
mov
push
push
pop
inc
cmp
out
adc
xor
push
or
or
xor
mov
mov
push
andb
js
mov
xchg
add
roll
out
adc
sbb
or
cmc
adc
cli
adc
xor
sbb
pop
or
xor
lea
and
add
test
ret
shll
sbb
xchg
les
xor
test
mov
or
sbb
push
cld
xchg
adc
xorb
or
sub
popa
enter
je
cmpsl
push
stos
adc
ljmp
ret
inc
or
sbb
jbe
jb
lret
fcoms
call
add
addb
les
sub
ret
push
sub
push
cld
call
aas
cli
pop
sbb
push
dec
xchg
push
adc
and
xor
add
sbb
xor
jne
sbb
enter
pop
add
loop
sbb
or
loope
mov
movsl
data16
sub
xchg
sahf
jmp
add
loope
lods
pop
cmp
xchg
mov
jo
jnp
and
push
add
jo
mov
es
xor
pop
je
movb
enter
jb
sbb
loopne
adc
pop
inc
or
adc
add
add
es
ret
pop
push
xchg
cmp
shrb
dec
add
push
sti
and
jne
adc
or
scas
je
jp
inc
mov
push
js
jne
jne
js
imul
jg
adc
arpl
dec
add
dec
inc
pop
push
add
outsb
leave
mov
ret
hlt
data16
cwtl
les
test
into
outsl
fdivrl
in
cwtl
movsb
push
or
lods
clc
jmp
mov
push
jnp
into
fildl
sub
inc
pushf
add
cmp
xor
ljmp
add
dec
outsl
pop
fwait
push
shl
pusha
pop
loop
adc
out
adc
das
dec
inc
xor
sub
xor
addb
inc
cmp
popf
daa
push
das
pop
fildl
jle
scas
pop
lea
xlat
rol
js
mov
dec
rclb
push
loopne
stos
lret
lcall
sbb
jb
jo
xchg
shr
inc
and
or
sar
mov
cmp
rcrb
aad
sub
js
push
mov
fnstsw
add
mov
daa
out
push
sub
sbb
addps
sbb
or
push
or
insl
mov
cmp
jl
cmpsl
and
pop
lret
push
pop
dec
sbb
sub
mov
call
lahf
nop
push
or
adc
dec
scas
test
mov
dec
mov
mov
imul
xchg
push
cmc
aad
rorb
jg
mov
test
add
mov
in
enter
sbb
js
sub
cli
or
push
arpl
sbb
xchg
and
pop
pushf
sub
into
cs
aam
mov
fcompl
adc
out
adc
add
stos
cmp
jnp
inc
adc
push
cmp
adc
scas
xchg
cmp
cmp
dec
add
shrl
cmp
xor
cmp
pop
sbb
leave
data16
mov
cltd
dec
pop
pop
call
stos
insb
in
jbe
sbb
iret
decb
rcl
mov
jb
mov
enter
lcall
aaa
repz
mov
in
xchg
int3
mov
rclb
pop
mov
rol
mov
push
sub
mov
jb
sbb
pop
dec
jl
adc
xor
rcrl
sar
sub
add
jp
xor
aad
mov
js
or
rcrl
sbb
push
sbb
ss
push
shr
dec
sbb
roll
jecxz
adc
push
adc
js
add
or
push
add
add
mov
rolb
xchg
or
inc
add
pop
int
push
and
into
and
add
add
enter
add
sbb
inc
adc
sbb
shll
or
clc
call
sbbb
mov
pushf
je
push
mov
movsb
ss
mov
sub
push
adc
push
stos
dec
lods
ret
add
clc
pop
shrb
ds
sbb
adc
jmp
or
shlb
iret
shlb
mov
xchg
lock
mov
or
js
nop
je
add
pop
push
jo
lret
sub
mov
fwait
jo
adc
push
or
or
ret
out
outsl
adc
call
or
mov
rorb
sub
mov
enter
loop
jbe
mov
rcrl
xor
xor
inc
stos
inc
mov
cld
roll
std
add
dec
push
and
inc
cmp
loope
xchg
dec
out
mov
or
pop
lret
inc
andb
mov
aam
sub
dec
sub
add
or
add
xchg
mov
mov
enter
loopne
addr16
push
xchg
push
shlb
mov
inc
sub
or
mov
add
orl
out
push
inc
add
rdmsr
cli
pushf
icebp
push
push
xchg
mov
outsb
xor
int
clc
add
and
push
xchg
fcoms
xor
or
roll
negb
scas
cmp
mov
lret
inc
add
sub
adc
adc
jns
aas
lcall
mov
pop
scas
or
sbb
pop
mov
or
mov
and
ret
sbb
add
sub
dec
cmc
mov
sar
sbb
cmp
adc
push
repnz
mov
push
jmp
xchg
add
fsubp
icebp
cmc
mov
or
xchg
test
xor
and
sub
jno
or
mov
rcrl
mov
cmp
pop
or
ja
cmp
in
add
mov
add
clc
push
xchg
mov
scas
stos
or
hlt
and
jle
adc
int3
mov
fs
int3
push
push
stos
js
in
stos
mov
sub
mov
mov
inc
or
fldcw
add
or
out
mov
push
test
imul
add
daa
push
hlt
das
dec
lods
xor
mov
leave
push
mov
pop
test
add
cwtl
adc
cmp
xchg
add
inc
push
jp
cmc
popa
cmp
push
fwait
sbb
orl
push
addr16
lock
dec
pusha
jo
mov
mov
lds
pop
cmpsl
or
inc
or
int
dec
jno
pop
mov
cmp
ss
xchg
push
xor
and
xor
fstpl
push
sub
js
and
adc
push
loop
pusha
or
mov
push
and
int
loopne
test
pusha
popf
adc
push
roll
push
jp
dec
adc
mov
popw
add
stos
imul
adc
and
aam
inc
mov
into
mov
cli
add
adc
and
dec
out
push
push
or
sbb
push
sbb
ror
shr
dec
adc
inc
push
push
sub
mov
add
adc
pop
test
adc
je
push
loope
sbb
leave
inc
jmp
rorl
std
mov
clc
push
mov
int
out
or
mov
test
in
add
into
sub
sub
xor
push
xchg
dec
jne
push
mov
push
pop
rcll
adc
xchg
xchg
movsb
jge
fsubs
mov
jg
push
cs
rcrl
xchg
hlt
sbb
mov
inc
and
push
adc
inc
inc
in
rorb
pop
jge
sbb
pop
leave
dec
mov
lcall
push
pop
es
mov
fcomps
add
das
lods
scas
pusha
lods
push
repz
or
and
in
fistpl
sub
nop
push
ss
xchg
fsubs
or
jl
shlb
sbb
inc
js
cmp
notb
mov
sub
push
mov
push
mov
cmpl
movsb
mov
es
test
add
sbb
les
mov
out
add
or
mov
adc
rclb
sub
push
mov
in
sub
orl
mov
imul
icebp
fiaddl
xor
jo
ss
add
ds
loopne
stos
inc
xchg
mov
rol
lret
addl
push
mov
call
enter
mov
sbb
enter
cli
xchg
sbb
lock
fldpi
inc
popa
or
push
cmpsb
cmpsb
push
shlb
mov
stc
notb
mov
sbb
push
out
add
push
sbb
sbb
sbb
add
sub
cmp
cmp
nop
subl
inc
aam
leave
mov
pop
add
pop
push
cmpsl
into
add
in
inc
sahf
test
sub
mov
fs
and
pop
repnz
lea
xchg
les
sar
mov
sub
clc
leave
stos
jae
push
dec
jb
add
and
rorb
add
push
xchg
dec
add
in
orb
sub
add
pop
and
sbb
mov
mov
inc
les
int
mov
movsl
test
stos
stc
jnp
mov
add
ret
push
sysenter
imul
adc
cmp
mov
sub
or
rcrl
push
jnp
adc
movb
mov
pusha
or
dec
scas
scas
test
mov
mov
popf
or
aad
notb
ljmp
adc
and
rolb
mov
sbb
sar
inc
je
add
sub
loope
stos
mov
xchg
pusha
add
rcl
out
mov
mov
xchg
orb
sub
sahf
fwait
xchg
inc
popf
sub
xor
rcr
or
cmp
ljmp
nop
test
outsl
adc
push
inc
add
int3
add
mov
or
cmp
xchg
rolb
fwait
xor
pop
pop
adc
or
push
addr16
pop
icebp
jno
mov
pop
into
roll
cmpsb
je
ss
test
xlat
cli
push
mov
in
dec
inc
rolb
mov
aam
ljmp
cmp
jo
jecxz
push
sub
mov
cmp
cmp
sbb
sti
in
fdiv
cmpl
xor
call
adc
nop
fprem
shll
mov
mov
in
insl
xchg
mov
dec
cld
repz
xchg
adc
pop
adc
loope
jl
sbb
icebp
popf
jb
sub
sub
sub
or
jno
or
ret
add
jle
leave
cmpsl
jmp
pop
lret
mov
adc
stos
adc
sub
mov
mov
enter
ja
das
pop
sbb
mov
add
lret
scas
std
dec
push
js
or
or
mov
add
mov
loopne
gs
or
mov
mov
sbb
add
pop
jne
gs
xchg
and
out
jae
sbb
sbb
outsb
pop
mov
movsb
push
leave
je
cwtl
mov
inc
cli
jp
adc
inc
xchg
pop
push
push
sbb
push
or
ror
adc
rorb
out
test
mov
test
jmp
lret
jb
lock
inc
dec
dec
jecxz
push
sbb
sbb
push
xchg
inc
jo
ljmp
insl
and
gs
ja
mov
je
das
enter
xchg
and
mov
cmp
bound
sbb
icebp
or
cmp
adc
test
stos
loop
pop
mov
dec
pop
sbbb
sbb
cmp
fistps
or
rcll
jge
inc
icebp
insb
lret
fadd
push
cwtl
dec
adc
pop
mov
sahf
sub
add
sbb
mov
or
inc
imul
add
mov
andl
js
je
rcrb
test
mul
mov
inc
bound
sahf
lcall
mov
adc
xor
insb
rclb
pop
inc
dec
fidivrl
sub
add
mov
fdiv
push
xor
enter
jl
or
test
adc
pop
add
int
pop
mov
pop
std
adc
mov
hlt
push
pop
add
bound
aaa
or
gs
or
mov
add
js
stos
xchg
mov
sti
push
ljmp
pusha
leave
sbb
mov
inc
mov
ret
idivb
or
xchg
mov
add
add
and
jg
push
push
sub
pop
push
mov
out
ds
cmpsb
adc
push
mov
test
mov
testb
inc
clc
mov
aaa
lock
or
out
pop
cmpsb
lret
or
push
mov
scas
xorb
and
test
and
add
inc
pop
dec
cmp
rolb
adc
aaa
sbb
add
rorl
cwtl
adc
sbb
stos
sbb
push
lcall
repnz
pop
sub
jg
push
jae
adc
xlat
or
or
adc
sbb
dec
and
pushf
shrb
xchg
add
call
imulb
cmpsl
pop
add
push
adc
cld
adc
push
popf
add
or
int
cmp
or
inc
fstpl
xchg
sub
int3
add
cltd
mov
stc
aam
ja
push
xchg
mov
mov
insl
add
ret
lcall
dec
pushf
push
cmp
push
aad
pop
mov
push
add
bound
add
or
mov
mov
adc
inc
mov
test
push
ret
dec
xor
lret
enter
push
les
jg
pop
icebp
inc
sar
mov
lods
pop
adc
mov
jp
xor
push
push
cmpsb
lcall
testb
mov
pop
add
gs
mov
inc
mov
sub
xor
cld
or
lds
push
sub
loopne
xlat
addb
test
mov
icebp
call
imulb
jo
xchg
es
add
add
jmp
mov
sbb
movsl
fstps
xor
loopne
mov
mov
adc
sarb
sbb
add
push
add
sub
shlb
lock
add
cmp
pop
push
adc
test
inc
out
push
jl
addb
mov
lret
add
int
and
and
xchg
or
inc
and
add
push
int
push
mov
sub
lock
sbb
cltd
and
test
add
insl
xchg
sub
adcb
fildl
push
or
xlat
lahf
xchg
mov
icebp
dec
cmp
push
fsubl
fisubl
push
imul
lret
sti
and
pop
mov
mov
xchg
and
cmpl
pop
sbb
jb
add
cmp
mov
add
cli
pop
js
hlt
and
xor
inc
and
shrb
inc
sbb
dec
roll
sbb
push
sbb
push
movb
ret
push
inc
pushf
add
pop
pusha
enter
aad
push
sbb
cmpb
adc
loope
jmp
push
mov
push
inc
sub
inc
dec
cld
daa
mov
xlat
push
imul
add
sbb
xchg
inc
inc
aam
outsl
rcrl
fld
lret
inc
mov
pop
push
xor
repz
pop
inc
add
hlt
mov
pop
inc
mov
test
pop
cmp
inc
push
in
sub
xchg
and
clc
lea
or
xacquire
add
or
sub
mov
add
sbb
js
arpl
es
shlb
sub
sub
lock
push
push
loopne
and
les
inc
bnd
je
scas
sub
cs
xchg
mov
pop
andl
mov
or
mov
and
fisubl
pop
inc
xchg
push
adc
xor
andb
arpl
add
xchg
push
mov
inc
push
add
pop
hlt
sub
je
add
out
cmp
push
xchg
or
orb
and
inc
inc
scas
mov
push
or
jb
and
mov
push
rolb
ljmp
scas
or
andb
push
divb
and
imul
icebp
ja
sub
push
sbb
mov
push
sbb
cs
repnz
jo
inc
sbbl
aas
add
jne
cs
mov
js
cmp
cmc
push
inc
or
pop
int3
add
test
cmp
pop
pop
clc
mov
inc
test
xor
leave
stos
call
pushl
xchg
imul
xor
cmp
push
mov
jbe
mulb
call
rorb
pushf
dec
and
orl
loope
xchg
or
shr
mov
test
pop
test
jne
es
popf
pop
add
imul
addr16
pop
sbb
stos
clc
pcmpgtd
jge
andb
shrl
lea
push
dec
cld
jg
sub
push
pop
mov
testb
je
mov
arpl
incb
jmp
push
pop
sbb
and
and
push
mov
jg
test
inc
in
mov
mov
mov
push
out
outsl
idivl
mov
pop
pop
ret
mov
jne
push
incl
scas
ljmp
pushl
or
mov
das
and
and
nop
and
mov
add
pop
repz
roll
push
add
clc
enter
adc
lods
add
fwait
nop
addr16
adc
or
push
or
fucomip
mov
pop
cmp
jne
sbb
push
or
sub
mov
mov
enter
fnstsw
les
mov
and
lea
mov
movb
jb
push
pushf
in
mov
in
pop
cltd
sbb
in
pop
jmp
fistpl
fwait
lea
pop
ret
subl
add
outsb
xor
mov
cs
mov
enter
movb
push
jo
push
sbb
xchg
pushl
or
arpl
pop
insb
outsl
mov
xchg
pop
or
pop
or
inc
sbb
pusha
or
pop
jmp
sub
adc
daa
loop
dec
push
int
and
or
or
cmp
enter
xchg
push
adc
ffreep
jge
lea
movsb
add
iret
enter
cld
and
cmp
jl
mov
js
jno
pop
jle
cmp
push
cli
or
inc
pop
push
pop
cmp
aas
xchg
dec
cmp
xchg
bnd
iret
test
cmp
popl
cld
sbb
push
cmp
imull
push
ror
js
pop
jmp
call
push
push
lods
cld
mov
or
jmp
mov
movb
pop
pop
leave
mov
push
fldln2
xchg
js
aam
cmp
push
xorl
dec
add
sbb
add
xor
out
adc
adc
or
xchg
xor
lds
clc
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
mov
outsl
clc
das
outsb
stos
mov
jmp
cmpb
or
mov
push
inc
or
ja
xor
add
jmp
mov
cmp
in
rorb
pop
mov
ret
je
cmp
je
xlat
mov
je
pop
lea
add
add
pop
fbstp
mov
cmp
mov
lods
sbb
mov
js
cmp
cmp
cmp
negb
cmpb
and
cmp
das
push
fistpl
or
pop
bound
std
aaa
jne
insl
pop
in
leave
pop
incl
mov
arpl
add
jne
mov
and
sub
cld
fcom
or
dec
clc
mov
sbb
mov
mov
push
add
push
push
push
lahf
gs
fldt
in
xchg
fmuls
xor
sbb
mov
xchg
daa
and
push
push
xor
mov
movsb
pushf
hlt
mov
cmp
es
idivb
jecxz
or
add
xchg
dec
jle
aaa
xor
pop
or
adc
fwait
inc
mov
inc
cmp
mov
pop
mov
and
test
add
xor
add
mov
inc
inc
or
fsubr
std
fsubr
into
or
andb
inc
inc
sbb
inc
push
dec
fidivs
inc
sbb
mov
push
inc
and
or
jne
xchg
mov
mov
jmpw
or
idivb
repz
sub
pop
imul
int3
enter
adc
add
rcl
cld
sti
mov
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
das
fsubrl
inc
cmp
or
jecxz
sub
push
or
sbb
xchg
ret
jg
mov
rorl
xchg
push
inc
mov
push
pop
inc
mov
jne
inc
cmpl
or
ss
minps
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
out
ret
fst
xchg
femms
mov
mov
mov
sti
pop
ret
dec
and
ret
mov
rcl
mov
sbb
shrb
sub
repz
jnp
aam
sub
or
pop
inc
inc
cmp
pop
ljmp
pop
addr16
movsl
insb
mov
mov
addl
jbe
frstor
push
jae
inc
inc
or
jne
push
insl
fdivl
repnz
clc
mov
ljmp
inc
and
leave
fcmovnu
xchg
mov
xor
adc
je
sbb
lcall
and
mov
ljmp
add
jbe
daa
inc
cmp
ret
jmp
arpl
movsl
test
je
pusha
mov
je
inc
cmp
dec
fisubrl
add
movl
fisttpll
stos
sti
jmp
mov
mov
cmp
dec
sbb
pop
dec
in
dec
adc
orb
xor
sbb
test
aaa
js
and
push
outsl
add
mov
data16
movb
mov
pop
sti
and
pop
jmp
and
test
ljmp
xchg
insb
or
cmp
mov
popf
xor
addb
clc
jl
pop
pop
pop
mov
dec
in
push
cmp
repz
mov
pusha
outsl
mov
dec
or
mov
and
fcomps
mov
mov
test
sbb
lock
mov
xor
jno
mov
test
xor
stos
pop
adc
push
and
pop
mov
push
loopne
or
sarl
add
or
in
add
inc
cmp
jl
pusha
mov
and
cmpl
lea
jne
ss
sti
negb
xchg
ret
dec
neg
sbb
xchg
in
jbe
popa
cmc
or
jp
push
jo
ret
or
in
orb
pop
mov
jne
or
add
subb
jl
dec
ret
js
jo
pop
test
outsb
adc
cs
fidivl
mov
je
in
pop
mov
popa
sub
sbb
pop
sbb
imul
mov
pop
pop
pushl
push
pop
inc
ss
adc
mov
fisubrl
xor
adc
data16
insb
sbb
mov
aas
and
es
push
pop
adc
cwtl
sub
outsl
pop
jge
add
add
push
incl
pop
fistl
dec
data16
sub
mov
test
nop
ret
int3
inc
xchg
sbb
ret
push
enter
iret
bound
into
mov
sub
or
xchg
dec
testl
call
or
adc
mov
push
push
inc
aam
add
sbb
jnp
or
mov
xor
mov
dec
xchg
jl
insl
xchg
je
adc
sub
call
mov
popl
pusha
jmp
jno
jmp
mov
sbb
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
scas
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
cmovne
pusha
clc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
ds
push
sbb
mov
repnz
outsb
fidivrs
mov
push
or
or
mov
mov
jmp
mov
jmp
pop
or
pop
push
xchg
jbe
or
sub
sbb
xor
dec
loope
loope
lods
sysexit
xor
icebp
sub
dec
les
sub
imul
cmc
fcomps
call
push
sub
xor
mov
mov
js
mov
jl
jae
shl
cmp
pop
es
insb
xchg
call
jo
adc
test
jne
push
jle
or
cld
test
xchg
lods
cmp
xor
pop
addr16
hlt
push
push
xchg
in
push
add
adc
test
push
jo
pop
aas
inc
pop
gs
je
cmp
sub
push
push
clc
or
push
and
add
clc
inc
call
ftst
in
push
pusha
dec
adc
push
or
sbb
shll
push
adc
and
rcl
pop
aaa
sub
movsl
push
sub
mov
push
imul
sbb
push
cmpsb
cmpsl
pop
mov
dec
nop
test
or
mulb
fmul
lods
test
sub
sub
cmp
imul
push
fisubs
adc
mov
jmp
scas
cmpl
pop
in
outsb
dec
mov
stos
add
sbb
mov
sbb
mov
repz
push
mov
lds
ret
mov
mov
sbb
jge
add
mov
inc
adc
pushf
xor
add
fwait
xchg
inc
sbb
xchg
cmp
out
push
pusha
cmp
mov
cmp
adc
push
fisttpll
push
std
push
ss
fistps
jo
sbb
inc
mov
mov
jl
cmp
mov
push
andl
fnstsw
call
pop
jbe
lea
dec
out
mov
xor
push
aaa
or
jbe
inc
decl
mov
or
xchg
mov
out
call
xor
fistpll
stos
lea
dec
je
mov
popf
rcll
lea
add
xchg
ja
fistpll
mov
inc
inc
adc
inc
inc
fsubrs
cmpb
aam
add
daa
or
fdivs
fs
cmpsl
lods
lods
mov
mov
mov
mov
movsl
pop
mov
inc
jns
jno
jle
lods
cmp
mov
jb
push
mov
sub
jmp
je
fidivs
pop
add
push
rcr
sbb
jo
inc
xchg
jno,pn
add
sbb
std
lock
adc
and
cmp
inc
sub
dec
cmp
push
mov
adc
xchg
cld
xchg
jne
aaa
mov
sub
add
iret
mov
mov
mov
mov
add
add
cmp
or
push
jno
inc
xor
mov
addr16
lods
in
pop
xchg
lea
clc
cwtl
adc
push
push
aas
sarb
decb
cmpsb
in
decl
inc
repnz
add
push
repz
sbb
sbb
sub
and
das
mov
add
test
and
rep
inc
inc
mov
pop
ret
cmpsb
fbstp
lock
cli
mov
int
test
lods
mov
mov
sbb
and
stos
mov
and
dec
fstl
lea
mov
test
push
inc
repz
sbb
adc
nop
shlb
lods
adc
add
pop
sbb
mov
add
add
test
fiaddl
sbb
mov
in
divb
mov
out
in
jb
jp
push
and
and
push
aaa
lods
icebp
dec
dec
mov
inc
imul
std
inc
in
pop
les
sbb
rol
rolb
mov
popf
jge
mov
push
sbb
push
fimull
pop
push
imul
sbb
add
pop
arpl
pop
pop
jmp
lea
loope
clc
push
test
inc
lret
cmp
adcb
pushl
mov
mov
test
pushl
push
pop
push
inc
xchg
je
dec
gs
and
lods
push
bnd
pop
add
int
pop
jmp
add
jmp
pusha
std
jmp
cld
pusha
or
sbb
loopne
jnp
inc
loop
mov
inc
out
jmp
mov
and
adc
cwtl
in
insl
aaa
pop
imul
xor
stc
daa
test
outsl
adc
push
cmp
mov
jmp
fisttpl
mov
adc
cmpsb
js
jle
cs
jl
loopne
push
insl
js
and
add
inc
jne
lret
cwtl
sahf
adcl
pop
or
xor
xor
jge
push
or
jb
fsubs
xor
orb
add
popa
test
ret
jge
pop
jle
outsl
xchg
int
inc
test
xor
inc
lds
rol
xchg
dec
mov
std
cld
or
mov
jne
dec
dec
aad
add
clc
jbe
sbb
jbe
clc
jb
mov
adc
and
pop
jb
rep
call
push
mov
and
test
loop
pop
insb
push
pusha
jne
loopne
enter
insb
pop
test
push
lea
ja
nop
adc
rorl
jae
sbb
add
pop
fsts
int3
lea
sub
gs
add
add
nop
and
inc
aas
mov
add
dec
cld
aaa
dec
roll
sub
inc
mov
mov
shll
in
lock
shll
clc
cld
and
xor
fnstsw
test
lock
pushf
mov
pop
pop
lds
popf
or
adc
test
mov
xor
lea
jl
cld
jg
test
mov
or
js
neg
cmp
add
ja
dec
stc
sub
jbe
cmp
sbb
ja
add
outsb
test
outsl
add
dec
push
adc
add
add
outsb
xchg
mov
sub
daa
and
sub
sub
xor
xlat
sub
aam
xor
dec
shl
in
hlt
and
xchg
sbb
xor
rcrl
sbb
dec
shll
or
sbb
add
and
dec
xlat
add
dec
mov
mov
cmovb
fadds
adc
push
pop
or
nop
jle
mov
fidivs
ljmp
adc
add
pusha
xor
mov
push
or
and
push
sub
js
push
jle
pop
sbb
push
jl
push
jmp
jmp
std
addb
xchg
ss
sbb
insb
mov
push
nop
and
mov
adcb
mov
sbb
mov
xchg
jbe
mov
mov
or
bound
cmp
and
sahf
xor
mov
call
mov
add
mov
or
jp
cld
push
shr
fwait
clc
mov
jp
imul
jge
movsl
movsl
inc
out
mov
inc
cltd
jge
dec
dec
mov
jl
or
test
or
jne
rcrl
or
ficompl
les
cmp
movsb
mov
xchg
jae
mov
sub
out
les
xlat
and
loopne
loope
decb
sub
cmp
and
loopne
out
int3
add
les
and
outsb
mov
push
adc
adc
clc
outsb
jnp
add
add
or
sar
mov
lods
aas
jnp
pop
das
mov
mov
in
mov
pop
adc
pop
cmp
cmpsb
jbe
fistpl
xchg
repz
sti
inc
cmp
fcmovnb
cli
jbe
cli
mov
push
and
add
ljmp
push
adc
mov
shlb
xchg
dec
push
xchg
in
fstpt
add
loop
inc
lods
adc
cmp
push
mov
lock
lods
mov
mov
push
add
or
add
movsl
jbe
inc
jg
paddd
mov
jae
scas
fs
push
mov
jmp
or
or
lea
sbb
sub
dec
loopne
cmp
sub
pop
add
popf
test
or
mov
sbb
push
stos
in
cli
dec
mov
xor
or
sub
lsl
push
dec
mov
push
call
pop
xor
add
or
push
cmp
andl
push
paddd
or
xchg
mov
andl
adc
mov
fimull
pushl
pop
adc
adc
loop
add
cmp
add
xchg
lret
cmp
in
push
lea
push
push
push
mov
incl
out
pop
and
xchg
xchg
xchg
mov
mov
inc
mov
push
or
movsb
sub
push
adc
sub
dec
pop
jbe
mov
shl
pop
push
xor
push
xchg
jecxz
fsubrl
shr
sub
mov
jmp
es
xor
shr
push
or
mov
ret
fdivrs
jae
mov
cmp
sub
pop
std
and
or
jne
clc
adc
lcall
out
pop
jne
mov
cmp
es
insl
jmp
sbb
and
push
jnp
xor
jns
outsb
or
aaa
jmp
es
sbb
out
push
jg
mov
dec
test
mov
pop
mov
inc
test
lcall
jmp
out
add
mov
push
cli
in
shl
lods
dec
sub
adcb
cmp
adc
shl
add
or
mov
jne
add
xchg
adc
sbb
cmpsb
ljmp
in
mov
and
or
je
mov
imul
dec
jbe
ffree
out
push
into
jne
pushw
fs
test
jl
shl
inc
jmp
pop
mov
testl
jnp
sbb
dec
cwtl
aas
jle
pop
aam
dec
xor
fwait
or
jge
xchg
lcall
rcrl
in
and
mov
decb
jne
fisttps
and
jmp
pop
sub
mov
ss
mov
test
or
mov
add
add
cltd
mov
test
inc
push
or
and
fs
movsl
fwait
gs
decb
jge
les
faddl
mov
bound
cmp
mov
or
das
sub
rclb
dec
mov
jnp
mov
loopne
movsb
mov
aaa
push
jb
mov
or
jne
mov
add
xor
lahf
add
push
and
jne
adc
popf
dec
cmp
imul
in
inc
mov
or
and
iret
lcall
xor
push
jb
nop
mov
push
xchg
push
xchg
mov
rorl
pushf
sarb
push
inc
xor
lods
inc
stos
xor
mov
je
push
loopne
add
and
push
sbb
fsubrp
sbb
lods
mov
loop
xor
lds
sti
mov
incl
xchg
test
cmp
push
or
fcmovnb
dec
loopne
mov
outsb
xor
aaa
imul
aad
add
andb
add
dec
push
sti
test
out
in
fstp
jns
mov
addb
dec
es
mov
daa
xorl
jo
sti
sub
lea
dec
repnz
hlt
lea
cld
lock
sti
in
inc
push
out
jmp
call
add
sub
jbe
xchg
add
scas
push
dec
or
clc
xchg
pop
mov
mov
inc
fs
inc
lea
sahf
jecxz
inc
mov
or
loop
push
sub
cmpsb
or
mov
sub
push
sub
stos
movl
add
iret
test
inc
movsb
push
sub
aas
repz
popa
inc
je
adc
pop
add
sub
scas
jge
dec
or
dec
mov
std
jp
call
cmp
add
mov
pop
sbb
jae
in
mov
dec
ror
add
push
xchg
jp
push
mov
jne
aam
push
stos
imull
push
and
jno
push
ja
jne
jmp
inc
inc
inc
inc
dec
je
pop
jnp
add
sub
jne
sub
aaa
sti
and
je
and
mov
ret
pop
je
cmp
xchg
shlb
ja
cmp
insb
sbb
cli
sub
testb
jb
and
push
push
add
mov
daa
lret
sub
or
cmp
sbb
mov
and
add
push
rclb
push
dec
pusha
fsubr
ja
pop
pop
jne
mov
test
pop
xchg
dec
sbb
pop
mov
in
jo
inc
push
push
push
mov
push
xor
lret
jo
jne
sbb
mov
and
mov
and
cli
push
out
aas
cmpsl
jo
adc
adc
movsl
loopne
push
jne
test
pop
and
int3
jo
sbb
pusha
mov
sbb
pop
fnstenv
jmp
inc
mov
mov
sbb
fstpt
push
andb
or
aaa
and
mov
jbe
fiaddl
pushf
ss
sbb
and
mov
sub
mov
mov
jnp
icebp
push
push
jmp
lock
es
pop
adc
push
dec
fdivrl
and
dec
in
adc
in
sbb
dec
sub
push
je
testb
je
ds
fidivl
mov
lods
cmp
jg
fidivl
dec
mov
addr16
xchg
into
cmpb
inc
mov
adc
xchg
xchg
mov
fmull
push
mov
je
push
fs
je
jbe
mov
add
jmp
mov
pop
in
xor
push
mov
lds
jno
movsl
mov
jg
add
in
add
add
add
imul
sub
add
mov
out
pop
cmp
cmp
imul
cmp
sub
imul
or
cmp
pop
aaa
push
sti
or
inc
cld
ss
add
mov
stc
sbb
outsl
leave
adc
and
cmp
repnz
mov
sub
add
out
fidivrs
push
pop
sub
cmp
sub
mov
mov
ja
mov
sub
cmp
cmp
add
or
std
outsl
fistl
adc
adc
sub
add
mov
pop
mov
mov
mov
rcll
pop
clc
pop
fldt
insl
and
xchg
add
sub
jbe
insl
outsl
jg
and
sub
mov
mov
into
sub
xchg
or
in
mov
adc
add
add
outsb
clc
add
frstor
add
out
or
sbb
sbb
jmp
fs
ja
mov
jae
repnz
adc
push
or
fisubrl
daa
add
pop
gs
ljmp
add
add
rcrb
mov
popf
fwait
jnp
mov
or
or
std
test
je
mov
movsl
sbb
push
cli
sub
mov
push
imul
sbb
pop
arpl
fidivrl
xorps
mov
jge
dec
or
dec
leave
mov
ret
pop
inc
lret
insb
fildl
rcrl
sarl
dec
pop
icebp
daa
pop
cld
imul
mov
insb
mov
fcmovbe
outsb
mov
push
movntps
or
rorl
inc
mov
or
rcl
sbb
jb
or
in
out
adc
enter
push
mov
ficompl
sbb
xchg
jnp
add
out
or
imul
js
out
pop
pop
xor
mov
jle
and
mov
aam
sbb
out
aas
mov
movsb
mov
ret
adc
adc
xor
stos
shrb
push
fsubl
sub
fstpl
and
adc
lea
or
dec
mov
orb
roll
fisttps
ret
inc
mov
shll
push
mov
and
cmp
adc
out
sbb
or
push
cmovg
shrb
or
lock
enter
mov
mov
stos
pop
mulb
sbb
adc
mov
push
fdivrl
test
icebp
lock
or
incl
testb
mov
rorl
push
mov
insb
cmp
orl
ret
push
mov
icebp
jp
outsb
int
sbb
decb
pop
adc
and
outsb
cltd
push
cmp
data16
push
cli
pop
sbb
jge
adc
imul
out
adc
mov
pusha
addr16
ljmp
mov
adc
fcomip
xor
sub
ficompl
adc
sbb
sarb
adc
mov
pop
sub
rol
movl
jbe
mov
cmp
sbb
fwait
mov
in
notb
out
add
int
dec
sbb
cs
cmc
sub
adc
test
pushl
xor
inc
clc
and
push
push
dec
dec
call
ss
lcall
inc
pop
out
mov
pushf
add
sqrtps
add
gs
cmp
jmp
add
adc
xchg
loope
mov
repnz
call
out
xchg
xchg
or
mov
push
jo
add
loopne
out
aaa
popf
imul
jmp
push
pop
test
mov
xor
and
add
push
rorb
test
pop
or
fistpll
call
push
fnsave
xor
adc
adc
lret
divb
icebp
dec
jno
or
push
push
push
or
jg
rorb
adc
pop
outsb
jae
add
pushf
mov
ficompl
push
add
pop
mov
xlat
add
mov
lods
shll
sti
mov
mov
or
repz
pop
sbb
incb
mov
ret
call
test
sub
insb
scas
xchg
fistpll
sbb
add
inc
sbb
push
add
in
xor
mov
mov
out
add
icebp
int
push
jne
mov
adc
adc
pushf
sahf
in
jmp
mov
inc
les
pusha
imul
shlb
pop
mov
adcl
cmpsb
lahf
addl
push
test
dec
mov
or
outsb
ljmp
ret
loope
loope
call
xchg
popa
mov
push
dec
iret
rolb
call
pusha
push
ss
rolb
and
or
or
nop
out
add
iret
packsswb
cli
or
sbb
inc
icebp
add
push
mov
mov
cli
and
or
icebp
loop
adc
adc
clc
adc
cmp
inc
mov
roll
push
push
in
push
ret
pop
roll
fistl
insl
push
or
xchg
orl
push
js
repz
add
adcl
xchg
out
mov
adc
sbb
push
sbb
mov
rclb
and
insl
mov
shlb
fistl
lock
add
push
in
aad
lock
or
mov
inc
cli
cs
mov
push
mov
push
xor
mov
insb
fwait
sub
popf
es
fwait
mov
mov
mov
adc
xchg
sahf
xchg
or
mov
mov
pop
add
cmpsl
push
fwait
pop
jnp
push
imul
js
movsl
out
mov
imul
arpl
and
fcomps
pop
mov
cmp
and
and
xchg
or
pop
aad
lock
lds
sbb
adc
mov
push
sti
sbb
push
pop
jmp
clc
clc
sbb
or
mov
lds
or
or
js
push
movb
sbb
icebp
out
push
mov
int3
inc
adc
mov
mov
cmp
push
add
cwtl
mov
icebp
sbb
imul
or
and
int
hlt
or
push
jo
push
lret
test
loope
sbb
mov
or
mov
in
xor
add
pop
pop
mov
push
clc
sub
adc
sbb
push
mov
adc
shll
push
hlt
bound
shll
sbb
rclb
dec
sarl
sbb
xchg
loope
cmp
sub
xchg
leave
mov
shl
xchg
and
push
push
mov
movsb
dec
jl
mov
or
cmpsb
or
cmp
ds
mov
sarl
test
repz
inc
xchg
ja
sub
mov
jmp
xor
push
and
icebp
cwtl
push
loope
popf
sbb
les
push
sbb
cmp
sbb
push
cli
sbb
push
jnp
mov
sbb
leave
cmc
movd
fists
pop
push
cmp
jo
in
bound
mov
pop
cmp
addl
outsb
clc
add
mov
push
mov
insb
ja
adcl
cmp
out
out
pop
sahf
loope
cmpsl
jns
lcall
adc
in
jno
xchg
call
add
data16
adc
push
xchg
add
into
mov
mov
notb
out
aas
ljmp
jb
xchg
pushf
adcl
out
mov
sbb
aad
xchg
roll
pop
in
aas
rclb
shll
pop
rcrb
ljmp
into
jecxz
cmpl
popaw
imul
sbb
bound
push
inc
lods
mov
push
inc
pop
call
loopne
sub
rcrl
sbb
push
add
mov
sbb
test
call
cwtl
jne
and
rcll
hlt
js
cmpsb
sbb
xchg
out
lock
sbb
ss
push
xlat
addb
mov
pusha
sub
sub
xchg
aaa
pop
and
cmp
leave
jle
jle
hlt
fisttpl
vmovdqu
fnstsw
mov
call
iret
cmp
sbb
outsb
cmpsb
mov
sbb
dec
cmpsl
cli
sbb
push
push
sub
adc
xchg
mov
or
ds
push
cli
sbb
add
sub
mov
nop
push
inc
sub
into
outsb
mov
ss
fildl
lcall
inc
add
jmp
cltd
das
loopne
fs
jo
cld
push
sahf
inc
sbb
inc
cli
in
pop
pop
call
out
sarb
push
stc
seto
push
jmp
pop
mov
pop
xor
mov
jb
fwait
pop
cli
repz
jae
sbb
push
cmp
xchg
push
push
test
sbb
js
or
xor
pusha
xchg
cmp
mov
pop
sub
insb
xchg
mov
adc
cmp
add
pop
scas
lcall
sub
mov
outsb
jg
mov
les
outsb
mov
add
xor
data16
add
insb
dec
or
std
mov
add
sbb
add
popa
mov
out
outsb
adc
add
xor
xchg
sti
out
es
jecxz
push
xor
bound
mov
loopne
leave
loopne
negl
fs
ss
push
push
add
mov
pop
adc
inc
lds
aas
stc
arpl
ret
cmp
adc
or
ret
sahf
push
xor
loopne,pt
out
aad
add
test
xor
arpl
testb
mov
push
int
lods
xchg
mov
scas
dec
push
push
stos
sub
cltd
sub
xor
out
jae
ret
ret
jg
ret
xchg
pop
in
and
dec
pop
data16
ljmpw
test
stos
jmp
inc
adc
push
cmp
andb
adc
mov
sbb
xchg
mov
cmp
test
subl
cmpsl
xor
pop
sbb
dec
xchg
push
dec
mov
add
mov
and
subb
dec
in
leave
push
adc
int
and
mov
jmp
roll
shrb
pop
popf
inc
arpl
xchg
in
adc
stc
sbb
lea
int
mov
add
scas
test
push
mov
inc
inc
lods
bound
xor
cltd
movsl
rclb
es
sbb
popa
pop
sbb
add
add
hlt
add
notb
add
call
rcr
add
dec
nop
and
pop
ficompl
les
jl
or
mov
and
and
fsubl
lods
adc
jo
jo
ret
adc
cmp
inc
int
or
mov
add
sbb
and
add
xor
out
and
mov
test
ret
pusha
sub
mov
cmp
ret
fwait
mov
xchg
decb
or
bound
repnz
inc
mov
loopne
push
enter
push
mov
lcall
or
in
js
stos
jne
xor
sbb
mov
push
dec
insl
inc
mov
push
test
loope
and
cmp
sbb
cvtps2pd
cmp
add
push
inc
mov
sarl
arpl
push
mov
ljmp
leave
nop
sbb
fadds
pop
push
imul
scas
into
dec
rcr
mov
push
int
mov
add
rolb
sbb
inc
cmpsl
fnstcw
jo
leave
xchg
les
push
pop
adc
addr16
pop
add
xchg
add
inc
aas
and
incb
shl
dec
jg
sbb
mov
push
inc
rcrb
mov
lds
xor
test
ret
cmp
in
shl
xor
pop
mov
cs
or
pop
insb
dec
rclb
jp
loopne
cmp
push
punpckhbw
subb
scas
cmpsb
or
sub
cmc
rclb
inc
imul
mov
mov
lret
pusha
roll
bnd
pop
jmp
call
add
mov
dec
push
enter
sbb
ret
mov
pusha
push
xchg
hlt
mov
negl
push
mov
xchg
xorb
pusha
loopne
sbb
add
lcall
adc
lock
inc
aas
shlb
and
rorb
pop
mov
xchg
cltd
mov
cmpl
addl
shlb
mov
sbb
aas
insl
test
cmp
push
sbb
rclb
jle
sub
push
loop
popl
mov
inc
into
fcoms
leave
std
add
aad
add
mov
sub
mov
sub
xchg
jecxz
dec
stos
int
imul
data16
xorb
pop
sub
test
add
jo
adc
out
inc
inc
or
add
iret
mov
mov
sub
mov
jg
sbb
mov
or
add
push
inc
mov
sbb
ret
outsl
push
or
dec
jo
cmp
stc
pop
into
lock
cmc
sti
imul
mov
and
xor
inc
add
add
adc
mov
sub
rorl
sub
push
pop
shr
unpcklps
cmp
int3
pop
mov
mov
adc
les
rorb
enter
je
sub
popa
xchg
pop
dec
xor
cmpl
and
repnz
or
cs
ficoml
push
call
cmpsl
sbb
xlat
lds
cmp
add
push
ror
adc
cmp
mov
mov
int3
popa
sbb
out
mov
push
add
sbbb
or
adc
and
inc
sub
fcoms
push
push
inc
pop
popa
sub
test
adc
insl
inc
das
sbb
pushf
pinsrw
enter
ret
dec
dec
add
lock
sbb
mov
or
inc
inc
mov
xor
sub
mov
in
sbb
clc
adc
push
or
rcll
xchg
sbb
push
xchg
sbb
mov
rolb
xor
fdivrs
or
fs
shrb
push
cmp
imulb
mov
insl
add
or
in
pop
push
insl
add
pop
or
movsb
rclb
daa
dec
sbb
add
push
cwtl
lock
pop
frstor
xchg
pop
sbb
fisubs
pop
or
cli
repnz
lahf
or
mov
jg
clc
aaa
push
sub
cmpsl
sub
push
mov
dec
inc
call
rcl
sar
mov
inc
mov
sbb
inc
inc
punpckhwd
or
mov
cmpsb
mov
rcll
sub
imul
in
mov
cmp
mov
add
movsb
adc
adc
or
leave
mov
inc
mov
lock
test
int3
add
inc
dec
sub
hlt
test
mov
test
cli
adc
cmp
mov
mov
sub
inc
scas
xor
xor
rcl
aaa
push
sbbb
xor
ret
xor
mov
sbb
sahf
sub
jno
or
test
mov
scas
push
jb
rcll
push
rorl
fs
loope
inc
sub
mov
in
dec
fisubs
mov
push
idivb
jle
fcmovnb
shll
sbb
push
mov
jno
xor
jp
pop
in
jno
xchg
sbb
inc
ret
enter
and
inc
and
push
adcl
repz
les
sbb
push
cmp
mov
adc
sub
movsl
add
or
push
mov
mov
sbb
loop
aad
cmpl
test
xor
sbb
pop
clc
mov
xchg
shll
sbbl
adc
sbb
je
testb
addr16
lock
inc
loope
sbb
insb
iret
xchg
fildl
xchg
xchg
neg
mov
test
jbe
mov
cli
sbb
sub
stc
or
mov
mov
push
pop
sbb
push
add
inc
mov
shl
or
mov
pop
lret
mov
lock
inc
mov
mov
inc
test
stos
orb
icebp
insl
enter
inc
add
fs
stos
mov
es
inc
mov
and
or
or
out
lods
push
jo
adc
cmp
test
mov
add
cmp
xchg
push
lock
subb
ret
adc
adc
push
jmp
xor
adc
rcr
add
jbe
mov
mov
out
test
xor
test
push
push
xor
mov
cmpsb
scas
jle
or
scas
pusha
mov
shlb
ljmp
add
xor
stc
inc
leave
loope
mov
das
pop
xor
adc
sbb
cmp
pop
cmp
in
add
adc
and
out
rcll
sahf
inc
adc
inc
and
jecxz
mov
jne
aas
test
popf
jne
adc
mov
xlat
adc
scas
lods
cmp
xor
mov
cmc
push
mov
call
mov
xor
cmpsb
das
sub
add
shr
sbb
push
es
cmp
or
sbbl
or
out
xor
xor
js
push
fidivrs
mov
movsb
leave
js
fisttpl
mov
mov
sbb
inc
xor
pop
mov
or
mov
hlt
mov
inc
push
adc
faddp
or
dec
loopne
inc
mov
je
add
outsb
aad
adc
cwtl
repnz
add
mov
sbb
jbe
push
xchg
bnd
or
or
fidivrl
test
and
jmp
inc
or
push
mov
inc
rcl
cmp
or
or
jb
cmp
and
pusha
pop
cmpsb
mov
add
push
sbbl
cmp
dec
lea
mov
sbb
adc
sbb
ret
andl
dec
pop
adc
mov
rcrb
push
pop
adc
push
mov
adc
inc
and
sahf
jmp
jmp
mov
adc
movl
xor
into
jnp
cmp
or
sbb
cmc
xor
scas
rclb
or
mov
int
adc
pop
pop
xor
gs
mov
push
adc
mov
int
pop
scas
dec
insl
adc
andb
sbb
shll
sub
daa
mov
mov
cmp
jne
out
decb
arpl
je
sub
shrl
ret
adc
pushf
jo
mov
add
test
cmp
aam
out
push
dec
shlb
push
xchg
jb
lock
aas
mov
push
push
dec
pop
mov
loopne
hlt
fwait
ret
push
and
xor
mov
or
js
repz
pop
loope
fisttpl
or
or
jnp
jb
test
add
pop
sub
pop
push
lds
mov
dec
cmp
dec
xchg
jno
lret
jbe
pop
rcl
mov
jo
leave
mov
shr
jno
xchg
addl
add
jo
cmpsl
out
lret
add
dec
push
mov
inc
add
push
jnp
push
test
mov
lret
mov
mov
or
outsl
test
pop
push
push
decb
outsl
xchg
and
shlb
dec
out
pop
cwtl
scas
cmc
ljmp
push
stc
push
js
mov
pop
push
sbb
loopne
adc
ds
test
adc
adc
sbb
push
mov
imul
push
jne
xor
orl
adc
pop
mov
cli
adc
shll
call
cmpl
push
and
add
shufps
mov
adc
adc
inc
in
and
nop
cmp
pop
test
push
inc
xchg
xchg
test
cmp
sbb
jp
inc
mov
sbb
push
inc
test
pusha
mov
pop
sbb
push
lret
cmp
sar
pmulhw
mov
subl
push
xor
or
fisubrl
js
insb
inc
scas
scas
pop
jp
or
push
nop
jb
add
cmpsl
or
dec
stos
mov
test
pusha
or
fwait
mov
mov
shll
adc
fisttpll
insb
sub
pop
sub
pushf
or
test
xchg
sbb
add
data16
jge
sbb
sub
mov
test
cmp
mov
fsubl
dec
scas
adc
je
out
lahf
adc
xchg
inc
in
test
dec
inc
pop
fwait
lea
pop
mov
cmc
shll
cmp
test
dec
dec
sbbb
mov
xor
or
pop
leave
sbb
call
hlt
xchg
dec
pop
mov
nop
scas
push
popf
adc
push
push
ljmp
pop
jnp
sbb
rorl
ret
cmp
dec
jns
cli
pop
js
fcmovnb
imul
ss
xlat
sbbl
pop
fldl
push
xor
roll
daa
sbb
jne
adc
push
or
ss
popa
cmpl
sahf
call
ficompl
rcrl
push
sub
cwtl
rcr
test
xor
sbb
and
scas
mov
test
xor
jo
loopne
xchg
loop,pn
imul
shll
add
lock
inc
outsl
mov
or
bound
lods
mov
inc
or
aam
jp
inc
push
push
add
inc
xor
insl
xchg
cs
jbe
add
push
mov
ja
call
xor
js
or
dec
jbe
and
subl
out
mov
data16
inc
jp
adc
pop
mov
sbb
dec
sbb
repnz
push
andl
imul
leave
out
mov
pop
and
sub
inc
daa
out
sub
popa
js
pop
call
pop
push
arpl
sub
in
das
dec
xchg
mov
aas
add
insb
mov
fsubl
cltd
inc
mov
xchg
stc
xor
sub
sti
dec
testb
bound
push
dec
xchg
je
pop
int
cmpsl
cmp
daa
or
popf
inc
test
hlt
or
std
iret
push
inc
pop
sbbl
cmp
in
je
cmc
aas
adc
adc
sahf
imul
sbb
adc
mov
fcom
mov
push
inc
inc
call
ror
inc
or
leave
xchg
mov
insl
inc
shll
cmp
push
push
xchg
or
lock
adc
xchg
shl
shll
dec
mov
cmp
push
sbb
mov
ret
cmpsb
push
lods
or
bound
push
or
stc
sbb
cmpl
inc
and
das
popa
push
and
push
push
sub
call
ss
add
dec
jmp
lea
psadbw
cmp
push
mov
push
pop
cltd
loopne
add
test
jp
lcall
or
cmp
adc
or
dec
es
and
mov
lea
shlb
dec
insl
daa
inc
adc
lds
and
arpl
dec
cltd
pop
sub
stos
adc
push
push
test
aad
xchg
jl
aam
pusha
push
sub
divb
and
adc
sub
add
or
add
and
mov
push
sub
dec
cmp
shll
mov
mov
rolb
orb
rclb
mov
pop
sbb
mov
xor
push
sub
movsl
cli
insl
das
rol
out
pop
in
push
scas
pop
loope
aad
add
or
xchg
add
ficoml
test
movsb
rcrl
push
or
jb
jb
arpl
inc
add
mov
xchg
or
popa
rolb
int3
mov
test
adc
jbe
shrb
pop
mov
inc
repnz
repz
mov
push
push
roll
clc
aam
dec
push
fisubrl
push
push
pop
cmp
orb
mov
stos
stos
mov
cmp
sbb
sbb
sbb
inc
jae
sub
loope
sbb
push
jne
push
xchg
test
and
nop
imul
dec
outsb
ss
fsubrs
adc
pop
push
jae
les
fisubrl
adc
sub
roll
push
and
jb
mov
mul
pushf
cmp
adc
loop
jge
mov
repnz
movsb
cmpsl
pop
in
push
sub
push
rcll
shlb
in
jp
popa
mov
xorl
je
mov
addl
xor
imul
sub
jo
or
and
or
sbb
fs
fwait
push
sbb
push
mov
lds
add
cli
enter
sub
popf
pusha
jne
dec
jo
adc
out
ret
push
push
leave
and
xchg
cwtl
push
leave
js
rorl
rorb
addl
push
dec
mov
dec
inc
test
mov
aam
mov
jae
and
xchg
loopne
jecxz
sbb
das
xchg
add
aad
pop
pusha
cmpb
shr
pop
pop
cmp
xlat
add
sbb
ss
arpl
cwtl
mov
sbb
push
mov
rol
stos
je
jmp
adc
sub
addl
sbb
mov
rcrb
jns
dec
movsl
ljmp
stos
jbe
cmp
out
add
pop
test
pop
dec
and
outsl
cmp
jecxz
stc
roll
inc
cmpsb
push
mov
adc
mov
aaa
out
loope
jle
add
xlat
pop
jp
icebp
mov
jb
ljmp
xchg
icebp
call
scas
sub
pop
orl
je
leave
sbb
xchg
jo
mov
push
push
cmpsb
outsb
xor
jo
xor
jno
and
and
push
les
stos
ds
jne
loope
add
push
pop
inc
jge
or
add
fsubl
test
pusha
sub
cwtl
aad
mov
arpl
cltd
lock
stos
pop
imul
inc
addl
or
loop
dec
cwtl
sub
xor
inc
inc
repnz
negb
cmp
adc
or
and
adc
cmp
lahf
fs
or
adc
les
out
push
jecxz
aam
cwtl
out
sub
sbb
sbb
jb
cmp
dec
push
xor
jns
jo
and
popa
rorb
lods
sbb
arpl
stos
xor
adc
pop
roll
sbb
dec
inc
sbb
and
push
lret
adc
insl
rcll
cltd
test
pop
ret
add
adc
arpl
xchg
push
sub
pop
add
and
and
cmp
or
and
pop
loopne
push
dec
inc
outsl
or
pop
cmp
pop
sbb
shrl
in
rcrb
arpl
xchg
into
mov
sbb
adc
jno
enter
mov
mov
push
adc
inc
andl
mov
sub
lret
decb
pushf
stc
mov
and
mov
nop
adc
xor
ror
push
push
insb
or
mov
aas
les
fidivrs
or
jnp
in
fcoml
push
pop
rcl
jbe
sbb
clc
mov
inc
sub
ja
dec
nop
testb
inc
inc
xchg
adc
or
pop
cmp
inc
das
pop
adc
jae,pt
push
adc
add
clc
ficomps
je
jmp
add
roll
roll
xchg
ret
andb
jo
inc
out
jns
sbb
mov
jnp
mov
leave
test
rolb
ljmp
sbb
mov
jb
movsl
fstpl
push
xchg
push
or
mov
adc
sbbb
sbb
hlt
sbbb
sbb
pop
stos
xchg
sbb
or
es
and
pop
stos
lret
loopne
push
fwait
or
mov
mov
pushf
pusha
ss
pop
push
adc
into
push
push
pop
ss
ljmp
add
pusha
loop
mov
add
cmp
imul
jns
in
pusha
clc
mov
adc
aad
lds
sub
fnstcw
in
xchg
fs
add
loope
adc
pusha
mov
mov
lret
inc
pusha
sbb
insb
add
loope
pop
adc
negb
leave
add
mov
stos
mov
push
mov
sub
cmp
dec
cmp
jmp
sbb
out
sub
scas
add
push
mov
mov
push
test
sbbb
sar
push
xor
shlb
insb
pop
mov
xchg
jo
jp
adc
cvtps2pd
ds
in
inc
mov
cmp
adc
or
rcll
jp
jp
push
adc
pop
cmp
adc
loopne
cmp
repz
cmp
ror
jle
mov
push
adc
push
mov
jae
lahf
fcmovb
push
es
repnz
sbb
pop
aad
jl
ret
popf
inc
sbb
mov
iret
mov
jecxz
pop
sbb
inc
popa
jae
mov
lds
rol
dec
jl
je
cmpsl
inc
adc
adc
or
enter
test
sbbb
sbb
jb
icebp
movb
int
scas
inc
shll
scas
adc
aam
rcll
add
mov
mov
imul
cli
ret
add
sbb
cmp
and
test
nopl
xlat
adc
mov
adc
test
pusha
mov
push
mov
cmp
adc
mov
outsb
adc
inc
sbb
push
adc
loope
push
jmp
popa
mov
push
cwtl
xchg
test
adc
lods
push
xchg
rcrl
mov
dec
fsubl
cmp
mov
shll
pusha
and
adc
cmp
fists
addb
push
pop
or
subb
mov
inc
push
int
sbb
dec
stos
ds
inc
es
aas
test
add
aam
out
sbb
push
pop
cmp
testb
push
jb
push
jecxz
fildll
mov
xor
inc
add
add
stos
mov
js
pop
addb
iret
stos
rcl
push
sbb
jle
push
jo
shl
and
cwtl
pop
adc
les
mov
pushf
loope
pop
dec
ja
outsl
dec
or
lret
push
mov
push
push
addb
add
rorb
xor
jmp
push
adc
bound
sbb
fildll
lcall
mov
jo
jp
pop
popf
add
mov
cmp
inc
mov
xchg
dec
and
jo
dec
andb
jo
mov
mov
push
add
insl
lods
pop
in
scas
aaa
test
fiadds
imul
cmp
mov
inc
sbb
dec
push
inc
mov
push
rclb
loope
sbbl
into
or
bound
sbb
push
loopne
mov
scas
dec
loope
roll
andb
cmc
add
pop
and
inc
sbb
adc
in
mov
mov
shrl
fwait
lahf
pop
or
mov
xor
xchg
jo
les
push
sub
and
sub
hlt
mov
es
mov
push
mov
clc
testl
jp
call
dec
cmp
andl
jnp
sbb
inc
inc
sbb
out
sub
adc
adc
mov
add
leave
or
mov
push
loop
sbb
mov
repz
cmpsl
push
pop
jle
pop
hlt
lds
sbb
adc
mov
inc
cmpsb
test
testb
xchg
xor
xchg
sbb
xchg
push
shrb
push
mov
push
or
aaa
push
mov
into
adc
inc
lock
sbb
cld
stc
rorl
sub
cmp
pop
mov
jge
and
mov
repnz
lock
add
add
mov
fs
push
cmp
lods
mov
inc
rcrl
push
adc
adc
mov
mov
or
dec
paddusw
testb
mov
mov
push
jge
pop
cmp
sub
sbbl
sub
mov
jge
cmp
push
push
stos
push
xchg
push
mov
cmp
jnp
jns
subb
sub
pop
bnd
rclb
cmp
sub
shlb
sbb
dec
ret
sarl
aam
jno
bound
stos
sbb
mov
rcll
pop
pop
pop
adc
sub
xor
and
cmpsb
fs
stos
scas
sub
dec
mov
lods
pop
notb
sub
cwtl
xchg
rcll
or
xor
mov
mov
cmpb
and
or
ret
int3
pop
cmp
mov
imulb
inc
sub
push
popa
mov
xchg
rorl
cmp
sbb
rol
dec
mov
pop
adc
add
test
inc
inc
popf
dec
cmp
cs
push
cmp
jo
inc
and
subl
xchg
loopne
sub
sub
dec
pop
add
xchg
lock
ficomps
es
sbb
push
add
mov
sbb
mov
cmp
jo
cltd
jmp
sbb
mov
or
ffree
scas
fwait
cmpsl
sbb
add
sub
xchg
rolb
in
or
stos
shrl
out
add
sbb
ret
ret
mov
enter
ret
xchg
mov
xchg
push
push
ret
adc
insl
dec
sbbb
scas
mov
jecxz
push
push
sahf
gs
ljmp
lret
sbb
push
adcl
into
adc
sbb
out
stc
clc
push
cmc
loopne
mov
jne
jne
and
rorl
movsl
in
ret
adc
fists
jne
push
push
enter
sbb
push
lcall
add
mov
sbb
gs
cmp
pop
mov
mov
mov
push
sbb
stc
jmp
rol
incb
int
sub
mov
xchg
xor
push
mov
es
je
mov
push
push
adc
pop
mov
rorl
addl
rolb
lods
adc
pop
notb
dec
or
push
mov
outsb
xor
iret
push
sub
sub
add
adc
cmp
es
adc
inc
lds
mov
and
subl
test
push
test
add
loopne
sub
lods
outsb
and
test
into
call
lahf
daa
add
sub
push
js
cmp
dec
dec
icebp
rclb
mov
cmp
dec
into
ljmp
cmpsb
or
repnz
adc
cmp
or
aad
hlt
ret
or
add
in
add
pop
push
les
inc
test
pop
loopne
lock
adc
adc
sub
std
mov
and
insl
pop
mov
inc
jo
mov
enter
adc
sbb
out
mov
inc
imul
sub
pop
sbb
les
sbb
push
pusha
cmp
loopne
loope
popf
cmp
sub
out
in
cmp
fwait
cwtl
cli
lgdtl
mov
leave
sbb
push
gs
inc
inc
call
testl
inc
les
cmpsb
gs
add
adc
adc
cld
stos
clc
sbb
test
sbb
mov
push
les
and
adc
mov
imul
or
addr16
xlat
sub
idivb
cmp
lods
xor
sub
pop
cwtl
or
jg
loope
rcll
adc
or
adc
sbb
dec
in
or
shrl
adc
sub
into
jnp
push
and
lods
jge
pop
in
inc
cmp
loopne
add
inc
dec
push
sbb
push
dec
shrb
repnz
mov
push
insl
mov
xchg
pop
rcll
les
inc
push
adc
lock
add
xchg
notb
dec
call
inc
xor
inc
push
negl
adc
pop
rolb
or
dec
clc
or
sub
into
insb
sub
shrl
push
sbb
pop
jnp
sarb
sarb
push
pop
loopne
jl
hlt
sub
sbb
push
fsubr
mov
sbb
repnz
mov
andl
jae
and
aas
aam
mov
pop
lods
and
mov
push
sbb
sarl
dec
dec
imul
sub
fisubrs
mov
outsl
lea
lret
jmp
sbb
cmc
test
sbb
push
xchg
inc
rcrb
dec
mov
cltd
loop
pop
stc
cltd
cwtl
mov
inc
or
cmp
mov
and
loop
and
int
push
and
out
pop
cmpsb
xchg
into
cmp
mov
sbb
nop
loopne
push
lcall
pusha
mov
sub
test
dec
sbbb
add
xor
push
or
push
push
cmpsb
or
mov
inc
xor
ja
push
fcmovnb
adc
or
ror
add
out
or
or
mov
adc
cmp
xchg
pop
push
ljmp
sub
and
inc
mov
add
out
xor
psubd
push
push
pushf
repnz
xchg
jb
imul
pop
icebp
je
mov
gs
pop
sbbl
sub
sub
mov
push
rol
push
rcrb
enter
mov
xor
ret
xchg
mov
mov
clc
add
je
jns
or
ljmp
dec
nop
clc
aad
adc
adc
push
je
popl
inc
add
call
adc
push
or
xlat
pop
cs
mov
pop
sarl
cmp
mov
dec
jne
sub
cmp
or
inc
xchg
lret
or
xor
mov
or
data16
push
leave
pop
mov
or
popf
xor
jb
push
and
repnz
sub
xchg
icebp
cmp
test
add
or
mov
push
xchg
xor
movsl
test
xorl
adc
adc
mov
imul
fs
clc
adc
xor
fsubl
sbb
adc
fistpll
int
cmp
rolb
jp
pop
xchg
repnz
out
adc
and
hlt
sub
rcl
mov
cs
xor
jae
xchg
sbb
jl
cs
das
bound
inc
cmp
xchg
or
jp
mov
addl
mov
divb
or
xchg
div
xor
push
addl
pop
pop
stos
cli
mov
es
jmp
in
sub
push
lods
rcrb
outsb
push
cmp
and
push
sub
and
adc
or
or
lahf
addr16
adc
fiaddl
push
sbb
adc
xchg
js
mov
jb
add
sbbb
fwait
insb
xchg
xor
xchg
sub
bound
loopne
push
sub
leave
add
int3
shlb
mov
or
push
or
mov
add
clc
cmpb
mov
out
mov
adcb
add
pop
or
add
daa
mov
add
mov
sub
push
outsb
out
adc
cmp
push
xor
push
ljmp
frstor
push
adc
jp
es
fiadds
xor
pop
sbb
or
rorb
andb
and
and
orb
jl
mov
je
mov
or
pop
and
adc
aam
dec
sbb
adc
add
mov
cmovno
imul
adc
pop
imul
sbb
lods
repnz
sbb
jecxz
push
dec
clc
lea
arpl
push
sub
sbbb
inc
add
js
ds
jbe
rol
pop
js
push
stos
mov
sbb
stc
push
test
inc
rcl
sbb
test
jo
jo
mov
sarb
xor
mov
sub
add
push
adc
mov
dec
add
cs
adcl
fcoms
or
pop
sbb
sbb
cmp
and
dec
mov
arpl
lds
les
mov
test
shrl
and
sti
sbb
mov
xor
inc
loope
or
or
ljmp
pop
sbb
xor
mov
sub
aad
jo
lcall
jmp
sbb
dec
mov
xchg
jmp
sbb
scas
push
rorb
adc
push
mov
jg
inc
cmp
mov
ret
or
xor
sbb
cwtl
sbb
insb
cmp
pop
je
imulb
out
adc
hlt
push
pop
rdpmc
mov
dec
insl
call
int3
movsl
out
push
iret
or
fldt
inc
lods
test
in
icebp
stos
pop
pop
push
adc
push
stos
ror
jb
jecxz
push
sbb
push
or
movsb
inc
cmp
sbb
mov
push
add
ljmp
pushf
fcoml
rol
js
mov
loopne
mov
outsb
mov
test
cwtl
or
cmp
mov
or
scas
xor
or
jns
lock
cmp
inc
rol
sti
pop
jae
imul
jecxz
ss
adc
cwtl
jnp
adc
jp
sub
add
mov
xor
mov
mov
lods
mov
call
sbb
rorl
insl
lret
push
cltd
mov
shrl
push
mov
sbb
or
inc
and
add
add
push
mov
push
fadds
jno
inc
push
scas
mov
sbbb
cwtl
mov
das
push
push
xchg
loop
adc
add
or
adc
xor
test
push
icebp
xor
das
xchg
std
or
or
aam
or
inc
jp
loopne
sbb
sbb
sub
jb
mov
jmp
add
sbb
jecxz
lahf
dec
push
rclb
sub
insl
cmp
or
push
push
sbb
inc
pop
into
ret
add
mov
xor
xchg
out
ss
add
sarb
dec
cmc
mov
or
hlt
or
fwait
push
push
cmp
push
mov
fiadds
cmp
add
ret
xor
jge
adc
add
aas
imul
sub
shrl
or
add
add
mov
adc
add
inc
test
int3
pushf
mov
sbb
mov
push
clc
leave
cmpsl
or
stos
adcl
stos
sub
sub
roll
aas
roll
sbb
push
push
or
es
push
jl
outsl
adc
sub
mov
rolb
clc
testl
inc
add
lds
ja
dec
xchg
sub
cmp
xor
inc
push
cmp
sbb
push
adc
push
xor
lods
lds
add
sbb
add
push
je
push
mov
pop
or
pop
adc
push
out
inc
adc
ret
add
imull
mov
js
pop
inc
cmc
or
ret
loop
inc
arpl
movl
andb
rorl
sbb
mov
xchg
ret
xor
pop
push
das
test
int
xchg
jge
inc
addr16
dec
ret
or
push
inc
ds
adc
addb
rclb
adc
fs
adc
jno
add
adc
into
aas
icebp
or
js
clc
sbb
cmp
and
xchg
xchg
mov
push
mov
and
mov
icebp
in
enter
inc
sbb
sbb
cmp
add
inc
shll
in
pop
test
inc
and
inc
sbb
subb
xor
xor
shl
iret
or
add
xor
push
cli
xor
mov
mov
sbb
push
cli
add
lea
inc
cmp
rorb
cwtl
pop
push
pop
mov
scas
repz
dec
aad
insb
fs
lods
push
ret
adc
mov
sbb
mov
into
add
push
ja
sub
pop
hlt
and
mov
or
push
notb
sbbb
cmpsb
jo
or
ret
lcall
arpl
xchg
sti
fs
sbb
xor
mov
ljmp
sbb
fimull
dec
mov
sbb
std
sbb
mov
push
mov
xchg
out
adc
les
push
rolb
je
pop
cmp
testl
cmc
addr16
xchg
js
cmp
icebp
sbb
jl
pop
addb
push
gs
push
cmc
adc
iret
enter
test
cmp
xchg
shll
mov
dec
or
lock
lods
ss
adc
jge
ret
cmp
push
call
adc
outsl
mov
popf
push
mov
cli
ljmp
mov
inc
es
xchg
shlb
loope
cmpsb
pop
sahf
into
loop
sbb
int3
push
rcr
xor
sub
jbe
js
or
cld
push
das
sbb
xor
adc
test
xor
andb
sti
inc
ret
pop
cmp
leave
mov
sub
in
mov
inc
out
xchg
inc
push
push
enter
adc
shlb
bound
jmp
xor
jo
xor
xchg
dec
mov
jmp
arpl
pop
mov
add
pushf
inc
rclb
push
inc
mov
mov
jo
mov
hlt
shrb
les
outsb
jl
and
xor
or
pushf
lock
adc
cmp
adc
push
lea
pop
pop
jp
stos
imul
sub
cmp
or
ret
pop
push
or
mov
dec
or
mov
aad
inc
pop
idivl
jo
scas
enter
inc
mov
add
push
or
and
inc
push
and
pop
jp
or
mov
or
fsubl
xchg
js
jne
dec
inc
sub
cmp
lea
and
adc
xor
mov
sbb
repz
mov
adc
and
add
add
into
jne
and
xchg
push
and
test
or
roll
dec
sbb
lret
lcall
es
add
mov
inc
push
xor
mov
adc
js
push
mov
cmc
sbbl
mov
mov
push
cmp
idivb
inc
mov
jge
sub
sub
and
sbb
insb
cmc
or
push
aad
pop
inc
test
pushf
rorl
xchg
add
mov
or
cmpsl
push
testb
mov
xor
push
xchg
cmc
xor
sahf
in
cmc
test
bound
mov
loopne
out
loope
inc
mov
stos
or
cmp
and
or
mov
pop
mov
adc
rclb
cmpsl
ret
dec
iret
and
orb
clc
fistpl
pop
or
stos
push
or
push
outsb
and
xor
add
sbb
xchg
push
add
outsb
mov
in
pop
je
sbb
pop
mov
cs
xor
dec
mov
iret
add
jp
inc
sub
mov
mov
enter
xchg
xor
test
adc
jo
mov
jne
xor
jmp
test
ret
add
jo
mov
dec
lea
bound
adcl
enter
mov
push
inc
adc
xor
and
or
mov
hlt
daa
shlb
je
nop
mov
xor
fadd
xor
lret
xchg
or
pop
xor
xchg
lock
push
add
mov
push
xchg
ss
inc
pop
lahf
test
stos
pop
ret
adc
pop
and
dec
pop
push
xor
mov
cmp
xchg
adc
xchg
les
xor
inc
cld
mov
sbb
shrl
stos
fadd
cmp
or
adcl
push
lods
pop
daa
jno
aaa
scas
cmp
xchg
daa
enter
mov
pop
es
loop
dec
or
push
or
filds
es
adc
push
or
add
imul
call
ret
sub
sub
cmpsb
icebp
mov
cmp
jo
arpl
push
dec
addb
xor
ss
xchg
aad
push
je
xor
adc
jg
movb
and
jge
push
inc
addb
andb
mov
roll
mov
loope
test
loopne
pushf
mov
lahf
cmp
sbb
sbb
mov
inc
add
mov
push
and
adcb
mov
sbb
loopne
push
shll
stos
lock
ljmp
adcb
sbb
icebp
adc
lods
ljmp
addb
mov
jne
add
lock
adc
or
and
inc
scas
outsb
dec
push
mov
arpl
pop
daa
rolb
dec
out
or
arpl
push
hlt
sbb
shrb
or
into
call
or
inc
sub
mov
fwait
lahf
rorb
or
and
je
jecxz
dec
xchg
adc
sub
add
cmpsl
push
aam
xchg
imul
push
and
and
mov
rclb
xor
leave
insb
adc
adc
mov
add
cmpsl
idivb
xchg
sub
xchg
sbbb
pusha
sub
aas
rcrl
mov
pop
xchg
or
pop
add
daa
adc
add
icebp
xor
and
mov
cld
inc
rclb
add
inc
andl
mov
lcall
inc
rorb
adc
test
jecxz
lcall
loop
push
push
sub
cmp
sub
jmp
push
mov
or
outsl
loopne
pop
or
frstor
mov
jmp
shll
jnp
popf
xchg
mov
and
xor
add
sub
sub
pop
sbb
push
and
sub
rolb
fadds
inc
mov
popa
jo
mov
pop
dec
scas
ljmp
mov
decb
push
mov
lea
xor
cmp
push
addr16
mov
push
adc
adc
icebp
xlat
sub
aam
mov
mov
adc
rcrl
movsl
pop
int3
add
adc
xor
cmp
daa
xor
sqrtps
add
jmp
mov
adc
pop
in
inc
sbb
sbbb
jo
imul
mov
jno
add
cmp
sbb
adc
andl
cmp
sbb
adc
jo
pusha
adc
mov
push
pop
adc
lret
or
mov
jl
mov
xor
inc
cmp
lret
sbb
inc
out
push
lock
inc
push
cmp
popa
xchg
push
sub
out
xchg
jmp
inc
push
push
xor
add
add
sbb
push
add
sbb
jo
inc
xor
push
sarb
push
je
add
jo
sbb
loop
inc
out
adc
adc
or
rorb
mov
outsb
lock
xor
sub
icebp
out
popf
orb
push
add
mov
sbb
mov
and
or
cmp
fwait
cmp
jb
or
mov
je
adc
aaa
mov
dec
les
arpl
or
add
movsl
push
in
sar
and
call
scas
mov
sbb
lock
lret
xor
push
push
cld
fldenv
js
mov
shl
xor
mov
leave
xor
push
andb
out
sbb
mov
jecxz
or
and
xchg
jnp
andb
movsb
xchg
cmc
or
mov
sarb
lea
test
cmpsb
push
adc
aad
jns
mov
xchg
add
cmp
mov
inc
loope
or
or
add
mov
popf
sbb
mov
mov
jnp
inc
mov
xchg
push
dec
push
je
divps
push
xor
mov
xchg
lahf
mov
fstpt
mov
nop
addl
fs
inc
imul
cmp
shl
jno
add
jne
js
dec
adc
jge
leave
outsb
pop
aam
adc
sbb
and
inc
movb
push
inc
rclb
fnstenv
sbb
mov
inc
rcll
cmp
aaa
sbb
push
cmc
icebp
or
mov
rorl
push
int3
into
cmp
daa
in
or
sbb
into
pushf
push
mov
or
shrb
test
add
addl
push
cmp
mov
cmp
adc
mov
stos
lods
rcl
adc
push
les
lods
inc
push
icebp
test
out
add
inc
stos
insl
sub
aam
cltd
sbb
outsb
nop
mov
add
mov
test
and
pop
sahf
and
jp
and
dec
lea
mov
sub
adc
leave
and
je
adc
or
push
test
push
ljmp
adc
jmp
sbb
cmp
loopne
mov
test
push
inc
inc
add
shrl
xchg
shll
jle
push
push
ljmp
into
push
mov
ret
inc
sbb
rcrb
pop
out
add
lahf
and
shrl
lahf
roll
cmp
push
xchg
and
add
mov
mov
pop
pop
not
sbb
leave
mov
movb
mov
test
adc
mov
stos
mov
jmp
push
jns
rcl
lock
addr16
es
add
leave
popa
or
loopne
jl
add
lds
test
adc
push
fs
mov
xchg
sbb
in
adc
lods
in
out
icebp
jp
or
addl
inc
and
or
xor
adc
sub
movsb
leave
add
adc
imul
inc
push
push
push
aad
stc
rolb
sub
aas
pop
rcl
sbb
jge
cmp
xchg
test
pop
dec
and
adc
loopne
mov
adc
or
mov
push
or
aad
push
pushf
and
add
inc
addr16
or
adc
std
icebp
subb
mov
je
adc
or
les
push
inc
hlt
pop
sbb
sub
pusha
push
pop
cmp
cwtl
dec
js
xor
call
shll
cmp
repnz
jmp
sbb
mov
adc
push
clc
dec
rorb
and
xchg
mov
or
test
pop
test
insb
cwtl
push
imul
or
mov
ja
push
push
push
fwait
insl
fcomps
adc
std
lds
push
pusha
call
jo
and
xor
or
imul
jb
jno
adc
bound
or
mov
add
xor
add
repnz
add
or
adc
add
jo
popa
cld
push
push
push
xor
in
add
or
loop
stos
pop
push
stc
out
sbb
int3
adc
pop
cmovne
pop
adc
sub
out
inc
cmp
sub
push
jns
scas
add
dec
out
mov
add
and
pop
add
les
fs
or
pop
inc
mov
jnp
mov
rcrl
lret
or
or
std
rclb
add
orb
std
pop
daa
inc
mov
scas
dec
mov
jb
push
lahf
mov
icebp
jae
sbb
lea
pop
pop
dec
push
inc
mov
mov
mov
in
shr
inc
sbb
mov
and
sbb
xchg
cmp
pop
sbb
cmpps
push
xchg
pop
adc
push
xor
mov
mov
cmp
add
sbb
mov
xor
lret
inc
inc
mov
shrb
jge
or
mov
cmp
adc
or
add
dec
lock
sub
sub
movsl
mov
xchg
add
inc
or
out
pop
mov
cmp
lahf
fadds
rorb
rcrl
rcll
mov
inc
lcall
pushf
std
xchg
mov
push
in
stos
xchg
ret
mov
sbb
stc
arpl
pop
shrb
stos
mov
shl
sbb
int
adc
or
sbb
add
ds
ljmp
loope
push
enter
mov
adc
rclb
cmp
jb
lods
mov
inc
lea
adc
mov
sbb
adc
sbb
jg
std
mov
inc
inc
push
les
push
add
cmp
loop
addr16
rol
mov
dec
xor
adc
mov
cli
or
xchg
inc
jmp
cltd
sbbb
shlb
push
jo
sub
add
mov
dec
aam
cmp
pop
cmpsl
rcll
movsl
loope
push
mov
add
and
nop
mov
ljmp
push
rolb
sahf
xchg
ret
adc
adc
aam
addr16
and
clc
xchg
mov
cli
filds
add
into
pusha
bnd
sbb
sbb
in
cli
sbb
adc
pop
pushf
adc
sub
xchg
push
loop
pop
ret
push
jnp
insb
push
rcrb
push
jl
inc
scas
ret
loopne
xchg
and
adc
shll
mov
cltd
or
pop
sbb
dec
arpl
scas
jo
lcall
stos
dec
adcb
aad
mov
movsb
fs
sbb
outsl
jb,pn
addl
stos
or
or
push
shll
or
sbb
test
xlat
mov
mov
mov
xchg
adcl
or
clc
loopne
add
testb
loopne
jo
out
icebp
icebp
sbbl
pop
test
xlat
xorb
adc
push
sbb
xchg
xor
mov
sbb
and
push
mov
hlt
mov
mov
mov
cmp
fdivrl
sub
and
inc
and
or
add
out
cs
push
ficompl
or
inc
lea
mov
xchg
popa
push
and
lods
rcll
pop
data16
sbb
inc
shll
cmp
insb
jo
neg
push
cltd
ret
xchg
rcl
add
mov
cmp
data16
aad
add
or
nop
addl
icebp
leave
aam
sub
add
xchg
addr16
lock
psubsw
test
outsb
mov
cmp
cmp
or
sbb
pusha
ljmp
push
mov
rcll
mov
adc
add
les
outsl
cmp
mov
adc
or
loopne
inc
jb
sarl
shr
add
xor
and
sub
negb
in
sbbb
subb
push
data16
mov
mov
sub
add
xlat
cmc
adc
cmp
dec
push
sbb
rorl
cmp
sub
xor
add
mov
xchg
daa
test
aas
insb
push
fmull
xlat
into
push
hlt
adc
push
or
sbb
negb
test
mov
dec
pop
fdivs
and
pop
pop
lock
cmpsl
push
loop
inc
push
je
xlat
inc
pop
test
inc
cmp
push
push
mov
xor
and
sub
pop
lds
sub
push
sub
xlat
jecxz
add
cmovge
mov
or
add
lock
push
xlat
and
add
dec
push
cltd
mov
test
mov
jp
or
sub
add
push
mov
pushf
mov
add
pop
inc
sbb
test
test
mov
adc
jl
add
pop
xor
mov
addb
mov
movl
lds
sbb
test
sti
push
inc
xor
push
mov
test
adc
jl
push
xor
mov
pop
adc
pop
mov
inc
scas
movb
cmp
pop
pop
aam
dec
xchg
andb
lea
test
roll
enter
enter
mov
mov
jnp
add
sub
pusha
ret
xor
push
xor
loope
inc
stos
outsl
les
mov
pop
push
push
or
xlat
dec
dec
pop
enter
shlb
rol
enter
inc
or
mov
xchg
and
out
mull
ds
adc
push
cmpsl
pusha
sbb
add
out
loope
and
mov
js
sbb
push
sub
jne
mov
gs
xchg
je
jae
test
sub
insb
add
scas
aad
push
push
shlb
cmp
pusha
adc
imul
fbld
or
sbb
stos
cmp
pop
adc
pop
jp
add
es
fisttpl
loop
icebp
add
sub
aam
mov
je
push
adc
jp
dec
push
les
rcrb
movsl
addb
fisubl
push
mov
xchg
call
mov
mov
dec
xor
cmpb
cmc
or
mov
adc
push
imulb
or
jmp
rclb
ret
mov
push
lock
add
and
or
adc
loopne
aaa
cli
fldl
xor
movsl
pop
xchg
add
pop
shll
cld
push
mov
in
and
icebp
mov
add
and
orl
loopne
call
dec
mov
sbb
mov
cmp
add
shlb
sbb
lock
shll
das
inc
push
subl
mov
stos
das
cmp
cs
adc
cmp
mov
mov
push
mov
stos
stos
out
dec
xorl
mov
push
aaa
cmp
loopne
mov
adc
add
adcb
or
icebp
pop
popa
mov
dec
push
xor
cmp
dec
rolb
clts
and
adc
pop
push
fsubr
icebp
ljmp
add
ljmp
ret
ret
pusha
bound
mov
mov
xor
add
loope
xor
int3
shll
lcall
jo
jno
nop
push
push
test
adc
pop
cltd
cwtl
sbb
xchg
push
loope
xor
pop
push
jg
subb
cmp
mov
jo
movsl
jne
lods
xor
cmp
lcall
xchg
adc
xchg
adc
mov
dec
loopne
es
mov
icebp
fcompl
arpl
xchg
sub
mov
enter
stos
sahf
inc
push
call
inc
es
mov
jae
adc
or
lods
ljmp
or
fsubl
cmc
push
lock
cwtl
lahf
shlb
push
or
js
lds
pop
or
jns
add
xchg
mov
mov
sbb
mov
push
mov
or
pop
stos
cli
mov
mov
add
add
stos
bound
xchg
adc
insl
jo
xor
hlt
jb
mov
nop
add
sub
aad
add
inc
add
test
icebp
incb
and
std
aam
sub
inc
adcb
imulb
dec
sbb
jp
xor
push
inc
mov
add
bound
or
les
mov
clc
sysexit
pop
sbb
mov
jmp
xor
shlb
shr
and
or
enter
inc
ljmp
xor
jecxz
push
push
pusha
test
sahf
push
stc
or
add
pop
imul
adc
loope
adc
sub
xchg
push
loope
or
loopne
add
or
stos
adcb
enter
add
mov
jge
stos
push
hlt
lcall
adc
out
dec
or
aas
cmpb
pushf
mov
gs
jo
subb
xchg
das
sbbb
into
loopne
in
pop
enter
xchg
jp
push
outsl
out
adc
icebp
sub
cli
rcrl
pusha
mov
add
ds
sbb
or
mov
test
xor
adc
add
and
sub
inc
mov
adc
inc
shll
cmpsl
test
mov
or
xor
sub
adc
sahf
push
insl
leave
sbb
or
adc
mov
mov
shl
inc
cwtl
or
adc
push
mov
jns
arpl
push
add
dec
and
std
ret
sub
sbb
movsl
call
fadds
ficomps
mov
add
mov
popa
cs
xor
sti
xor
mov
pushf
mov
push
push
mov
data16
mov
xchg
test
inc
add
inc
adc
xlat
pop
stos
or
es
ret
dec
cwtl
and
pop
or
pop
sbb
cmpsb
adc
xchg
push
or
loop
das
in
sub
or
outsb
cmp
test
into
sbb
repnz
cli
sbb
mov
mov
jb
push
mov
pop
xor
or
scas
push
jle
or
sbb
xchg
stos
add
push
xor
cwtl
push
ret
inc
xor
push
addl
sub
js
mov
ret
push
test
add
xchg
adc
scas
adc
outsb
or
pop
es
inc
xchg
scas
outsb
sub
imul
mov
push
mov
dec
add
add
push
add
jae
cmp
roll
mov
xchg
sar
xlat
jb
adc
int
inc
xchg
arpl
and
loopne
call
jne
or
ret
push
xor
aaa
jle
inc
xor
add
adcb
ret
daa
push
sbb
or
cmp
push
mov
push
adc
mov
nop
jo
dec
or
js
sub
inc
es
pop
sub
lds
mov
adc
push
in
mov
ret
or
rcrl
out
rclb
pop
or
and
daa
rclb
mov
sahf
movsl
lea
lea
or
sbb
xor
outsb
sbb
push
ret
mov
adc
push
push
addl
jmp
inc
mov
in
popa
or
push
shll
rorb
push
pop
push
test
roll
jns
enter
clc
mov
int
enter
test
lret
mov
push
sbb
push
mov
ljmp
sbb
js
cmpsb
and
mov
adc
sub
cmc
mov
add
lcall
out
lock
inc
pop
in
cmpsb
sbb
insb
loopne
add
mov
sarb
push
ljmp
or
fsubr
or
test
aad
cli
add
jo
inc
daa
inc
push
bound
adc
sub
push
pushf
mov
jmp
mov
outsl
xor
lret
mov
add
jge
fs
sbb
lret
pop
leave
or
or
pusha
adc
jns
mov
ds
pop
mov
cmp
adc
xor
inc
in
and
or
xchg
pusha
push
pusha
stos
cmp
sbb
mov
insl
ret
or
andb
inc
and
ja
icebp
loopne
rolb
sbb
add
test
inc
jne
pop
push
pop
xor
jecxz
mov
push
aad
adc
xchg
mov
push
or
push
jnp
dec
mov
lret
jae
dec
pop
orl
adc
push
inc
and
orl
sub
icebp
mov
adc
mov
and
shll
in
or
xor
sub
pop
adc
cmp
or
pop
push
dec
add
xchg
mov
add
incb
pop
and
xor
pop
push
stos
cmp
dec
rcll
leave
and
sub
add
pop
adc
mov
adc
or
xchg
pop
or
mov
push
mov
sahf
test
filds
xor
in
scas
or
es
inc
adc
or
aad
in
push
ss
fucomp
sbb
push
xchg
and
bound
inc
shlb
cmpsl
dec
icebp
fsubrs
loop
roll
push
rolb
xlat
rcrb
add
subl
inc
loope
push
dec
in
mov
sahf
inc
pop
stos
push
inc
fists
addb
push
icebp
push
shrl
mov
jno
je
push
mov
fidivl
xchg
cmp
or
add
push
cwtl
mov
xchg
or
pop
cmovo
and
xchg
or
cmp
xchg
arpl
or
mov
cmp
jmp
nop
or
xchg
outsl
xchg
push
mov
xchg
add
push
xchg
or
cmpsl
push
sbb
push
repnz
sub
add
dec
jecxz
mov
and
or
mov
pop
xchg
mov
test
or
push
sub
xor
sbb
test
dec
in
dec
jo
inc
adc
test
xchg
stos
push
icebp
add
sub
xchg
sub
xor
jnp
daa
inc
or
mov
mov
push
es
mov
sub
xor
dec
rolb
ret
cmpb
test
or
xchg
mov
shrb
inc
cs
out
jb
stos
jo
dec
std
cmpsb
cmp
push
in
stos
rcll
add
adc
aam
test
repnz
sub
shrb
push
orl
call
sub
mov
call
rol
jne
xor
pop
adc
inc
out
lea
sbb
orb
sub
stos
add
daa
sub
cmp
dec
push
sti
or
stos
inc
ret
adc
xchg
jmp
push
push
loope
call
repnz
jge
mov
mov
pop
inc
jmp
test
dec
bound
add
mov
call
push
mov
outsb
jg
pop
pop
movsb
mov
push
loope
stos
into
lahf
clc
or
mulb
mov
inc
dec
hlt
add
push
or
loopne
and
mov
push
xor
loopne
stos
add
jae
push
xor
inc
jae
adc
int
andl
xchg
sub
xchg
lds
xor
rolb
loopne
adc
ret
jbe
enter
add
and
pop
inc
jmp
roll
add
enter
addb
sbb
pop
and
add
pop
das
ret
fcoml
push
decl
or
sbb
in
std
enter
sti
js
call
aam
mov
jle
mov
sub
pop
lcall
or
and
jne
rcrl
outsl
incb
loop
and
adc
inc
in
xchg
jl
mov
sub
leave
push
and
mov
add
mov
test
ljmp
shll
mov
paddd
mov
or
cltd
es
in
xchg
call
push
xchg
mov
add
mov
fimull
cmpsb
and
push
lea
push
insb
cmc
xor
sbb
inc
lock
cmp
shll
add
ret
sbb
xor
xor
dec
ret
adc
sbb
add
aad
pusha
repnz
bswap
mov
mov
xor
or
xor
adc
sbb
mov
and
dec
adc
stos
xchg
scas
lret
sbb
rorb
mov
mov
xor
sbb
aad
and
nop
adc
orl
cmp
push
sbb
movsb
adc
lret
add
dec
push
dec
hlt
std
lcall
leave
mov
lret
xchg
imull
lcall
push
stc
pop
std
mov
pop
fwait
push
mov
add
int3
mov
sbb
aad
pop
rorl
test
clc
add
test
ljmp
sahf
add
adc
adc
pop
pop
mov
and
decb
dec
cmp
or
pushf
add
nop
adc
mov
sti
pushf
pop
sahf
add
push
sbb
mov
mov
cmpb
enter
es
and
scas
rcrb
das
pusha
jecxz
test
mov
pop
sub
sbb
ret
sbb
imul
mov
aam
jb
cmp
cmp
pop
jecxz
dec
push
inc
lock
push
adc
pop
icebp
sub
es
pop
push
call
jmp
in
dec
sub
test
inc
push
adc
sub
imulb
jb
sbb
adcb
lahf
sbb
movsl
xchg
inc
jmp
sbb
and
mov
sarb
out
iret
fs
push
add
test
es
adc
xor
leave
jg
xchg
push
sub
mov
shlb
and
mov
inc
sub
sahf
cmp
mov
add
xor
les
inc
rcll
dec
dec
hlt
cwtl
mov
jne
sub
or
dec
push
sbb
cmc
jmp
add
cmp
push
push
jbe
mov
push
adc
daa
rcrl
cli
sbb
xor
inc
xchg
push
dec
inc
jmp
mov
add
test
inc
inc
jo
test
xchg
fcoml
adc
andb
movsl
adc
xchg
loopne
mov
inc
rolb
call
or
das
pop
fsubs
push
loope
cmpsl
and
sbb
ret
push
adc
adc
out
rclb
xchg
shrl
or
dec
push
pop
mov
dec
rol
and
cmc
adc
dec
xor
subb
sbb
and
mov
les
inc
sbb
sbb
inc
inc
xor
sub
pop
cmp
add
sbb
sarl
test
add
testl
xchg
and
mov
pop
leave
inc
mov
sbb
or
push
xchg
loop
mov
or
mov
push
mov
cmp
and
ss
pop
pusha
cltd
fmull
or
add
inc
loope
ljmp
or
lea
sahf
push
int3
pop
jle
sub
xor
ljmp
push
mov
add
sub
jo
les
call
or
stc
mov
push
mov
adc
and
test
xlat
inc
pop
lds
and
add
push
sbb
add
movsl
cli
sub
shrl
pop
fists
in
sbb
xchg
adc
xor
outsb
mov
shrl
push
or
loopne
into
int
adc
clc
sub
pop
pop
mov
sahf
pop
inc
mov
aad
cmc
pop
xor
push
lods
sbb
int
push
les
add
inc
dec
push
xadd
arpl
and
push
or
ds
or
and
arpl
push
add
addb
mov
pop
subl
in
rcrl
aam
mov
push
xor
adc
lcall
and
test
jg
push
ret
xor
adc
jb
test
rorl
leave
stos
adc
loope
dec
mov
add
add
add
mov
hlt
shll
push
ret
jo
inc
jg
enter
movsb
cmp
mov
inc
in
add
ret
test
sbb
lock
mov
aaa
inc
dec
rcrb
adc
and
adc
push
or
cmp
lea
js
ss
cmp
adc
xorb
ficompl
mov
sub
andl
add
add
pop
stos
adc
mov
sbb
aam
sub
inc
xor
mov
mov
and
rolb
cld
ss
nop
add
mov
aam
popa
mov
orl
xorl
push
lret
ret
cmp
adc
or
and
in
sbb
aam
inc
insl
js
adc
add
inc
ret
bound
insl
sbb
sub
push
int
jbe
sti
fldenv
xor
mov
in
inc
add
mov
or
lods
add
add
shlb
mov
jb
add
mov
push
xchg
jo
xlat
xor
cmc
pop
inc
int3
push
push
lahf
out
popl
fs
add
mov
mov
push
or
push
jns
and
rcrb
shl
sub
add
or
rolb
and
and
aam
ret
pop
push
fistps
mov
repnz
mov
aas
rcrb
aad
andb
orb
adc
push
adc
add
jb
jge
popf
rol
mov
and
enter
aad
cltd
cmp
or
enter
fisubs
adc
add
pop
arpl
dec
js
adc
cmp
hlt
into
mov
inc
lods
jg
sbb
or
push
mov
fcompl
ljmp
and
add
adc
push
orl
xchg
lock
and
sbb
jle
push
mov
or
mov
les
add
lret
mov
rolb
adc
les
add
push
cmp
cmp
sarl
stos
mov
ljmp
lock
les
jb
and
subl
mov
sahf
stos
add
xor
jge
out
push
mov
pop
mov
fwait
and
pop
imul
rclb
mov
mov
push
xor
movsl
rcll
lret
addb
sbb
xor
push
cmp
inc
daa
adc
push
idivl
dec
add
or
sub
sub
inc
adc
xchg
and
sbb
js
push
push
and
and
int
xlat
scas
test
sbb
push
sbb
fwait
andl
sbb
nop
movsl
pop
inc
lods
or
int
jae
sbb
pop
sbb
pop
inc
add
or
icebp
je
or
and
push
xor
es
adc
or
cmp
or
test
jo
sbb
jge
inc
sbb
or
push
shl
add
inc
xor
add
dec
push
and
mov
es
adc
dec
les
add
imul
add
cwtl
push
aam
sub
sub
xor
jae
sbb
pop
and
addr16
js
call
rol
mov
cmp
jno
adc
scas
call
xchg
push
out
or
adc
add
push
leave
cwtl
dec
push
sbb
movsb
ret
out
stos
cmp
adcl
fadd
mov
mov
cmp
pushf
popa
call
rcrb
sub
or
cs
popf
rcrb
lods
lock
jo
mov
inc
imul
push
lret
mov
call
inc
inc
cmp
or
mov
stos
push
cwtl
add
leave
in
je
adc
push
push
lods
xorl
xor
cmp
jl
fs
roll
pop
inc
and
in
push
cmpsl
mov
nop
adc
test
inc
dec
dec
push
stos
test
pop
push
cmpsl
das
popa
mov
dec
movb
nop
lret
push
jno
scas
lock
and
push
pop
je
fs
adc
inc
fsubrl
pop
pop
fstl
mov
sbb
ds
sbb
pop
rclb
sbb
pop
js
test
loope
into
shrl
ljmp
adc
jo
push
jmp
or
pop
lret
sbb
or
and
xchg
or
xchg
lret
test
pop
test
lret
pop
jl
sub
xor
jge
ja
push
or
and
dec
testb
stos
sub
xchg
dec
xchg
bound
lds
sbb
sbbb
add
mov
push
sbb
xlat
inc
xchg
jo
and
outsb
xchg
push
aad
cmpl
and
sbb
cmp
mov
and
pop
xchg
aad
mov
dec
shlb
sbb
clc
pop
cmp
sub
push
pop
xchg
adc
inc
inc
bound
subl
sahf
imul
nop
inc
imul
add
sbb
lret
add
pop
xchg
cmp
inc
or
leave
int
movups
adc
sarl
cmp
mov
sbb
ret
inc
int
test
cmp
jno
dec
cmpsb
cmpb
ljmp
sbb
mov
or
jbe
test
fcoms
and
adc
xor
loop
push
ud2
popf
inc
inc
or
stos
cmp
mov
aam
inc
jg
cmpl
es
das
test
and
push
cmp
rclb
add
xlat
sahf
bound
movlps
or
and
mov
inc
bndldx
test
sbb
punpcklbw
test
mov
or
int3
pusha
sub
inc
mov
push
add
inc
cmpsb
fcoml
les
mov
mov
push
mov
sarl
and
sbb
int
pop
sub
jae
jno
in
jns
add
or
or
shrl
test
aam
mov
add
clc
pop
and
xchg
loope
ret
or
jbe
je
xor
int3
sbb
sti
cltd
lret
push
dec
sub
mov
shll
in
dec
or
enter
subb
pop
sbb
add
js
mov
aam
shll
pop
pop
shrb
adc
mov
mov
dec
xor
jo
inc
mov
mov
js
in
lods
sbb
pop
mov
add
or
add
std
adc
mov
pop
inc
scas
jmp
xor
mov
dec
add
mov
push
pop
stc
and
mov
push
and
je
mov
mov
add
jnp
mov
dec
sbbl
mov
popa
ret
into
nop
mov
rolb
add
inc
xchg
sub
mov
mov
adc
jnp
pop
addb
sub
pop
push
imulb
mov
clc
dec
loopne
faddl
sbb
inc
push
inc
add
negb
in
nopl
loop
xchg
fimuls
xor
sub
or
xor
js
lret
lret
loope
stc
adc
aas
adc
dec
push
stos
sbb
push
cs
mov
ret
mov
aad
add
pop
rolb
int
mov
adc
push
or
lods
movsl
add
roll
push
mov
fidivrl
and
cmp
xlat
push
mov
int
into
mov
adc
mov
mov
scas
neg
cli
shrl
sbb
mov
nop
movsl
or
adc
pop
sub
push
pop
add
testb
push
add
cmp
sub
stc
repnz
mov
idivl
mov
mov
lret
out
jo
push
andb
les
sbb
add
xchg
add
and
lret
dec
inc
adc
enter
push
mov
in
pop
mov
adc
lock
xorl
daa
call
lods
je
int
lea
or
cmpsb
add
daa
out
mov
scas
push
test
in
xchg
and
inc
mov
push
mov
rcll
jmp
roll
mov
icebp
push
ljmp
push
add
loope
add
inc
push
sub
inc
mov
inc
es
stc
pop
in
and
mov
rorb
inc
adc
ret
push
sbb
push
sbb
xchg
inc
add
add
cmp
imul
aaa
jne
mov
mov
or
hlt
add
add
xor
or
mov
add
add
sbb
jno
mov
sub
jl
mov
jecxz
sbb
daa
data16
lods
nop
add
or
cmp
in
loop
inc
mov
push
std
sbbb
mov
scas
mov
jp
rclb
push
inc
lret
mov
mov
outsl
faddp
mov
lods
int3
scas
or
sub
jae
add
push
mov
pop
das
push
or
sub
push
push
addb
mov
sub
les
push
jae
inc
lret
xchg
sub
ret
sub
xlat
icebp
pusha
pop
sub
movsb
adc
cmp
lock
sbb
push
xchg
push
sbb
clc
push
add
scas
cmp
add
xor
in
xchg
leave
adc
and
mov
in
ret
scas
test
jb
pop
repz
daa
cmp
repz
add
bound
adcb
pop
enter
loopne
cmp
jl
enter
sbb
xchg
adc
push
cs
inc
test
enter
scas
add
dec
aas
adc
mov
sti
mov
mov
insl
adc
dec
add
push
test
mov
xchg
insb
xchg
jb
mov
add
in
push
pop
mov
pop
push
jle
push
and
push
or
or
jg
bnd
rcrb
fwait
adc
jecxz
adc
mov
lret
adc
notl
push
sbb
ljmp
test
mov
xchg
xchg
iret
add
jne
add
in
ljmp
sbb
push
rcrw
pop
push
push
inc
pop
add
or
sbb
movsl
imul
xchg
or
mov
movzwl
in
jmp
lods
add
sbb
movsb
add
mov
xlat
leave
adc
inc
sub
lods
lret
lods
arpl
fs
pop
cmc
fstl
cli
push
xor
mov
jne
jp
not
ja
imul
and
scas
call
push
jo
ror
sbb
or
or
pushf
out
stos
lds
sti
mov
mov
fadds
and
scas
pop
xor
loop
imul
fstpt
xor
inc
mov
cmp
mov
and
push
outsb
sub
es
scas
pop
add
push
ret
push
push
pop
jo
insb
adc
mov
jo
pop
rolb
mov
test
pusha
cwtl
andb
les
push
test
in
decb
add
in
xorb
dec
cmp
xchg
sub
or
push
mov
push
enter
sbb
dec
rolb
sbb
test
jno
sbb
and
jo
fcmovne
int
push
lock
js
es
imul
mov
sub
mov
or
std
dec
repnz
push
stos
les
rclb
pop
push
mov
adc
add
out
mov
subb
mov
daa
fsubs
ljmp
sarl
lea
add
mov
adc
sbb
rolb
fldt
lock
sub
bound
or
cmp
js
push
mov
insl
xchg
pop
push
ds
dec
rorl
sbb
jge
dec
or
push
inc
mov
jo
ret
add
je
push
gs
bound
rcrb
filds
add
push
or
or
sbb
cmp
push
add
in
push
shlb
and
daa
jp
mov
icebp
divl
outsb
push
and
fimull
or
sbb
add
mov
and
sbb
andl
leave
pop
cmpsl
add
test
xchg
or
inc
ja
loop
inc
sbb
mov
ljmp
jg
bound
out
adc
cmpsl
shrb
and
pop
testb
aad
push
sub
inc
loopne
xchg
ret
and
push
sbb
push
aam
or
inc
imul
mov
adc
or
push
sbb
inc
and
loop
lods
push
adc
or
inc
rcll
stos
push
push
ret
push
dec
aad
mov
mov
cld
push
ja
cmpsl
push
mov
int
sub
jmp
push
jo
jne
pop
imulb
jbe
cmp
sub
cmp
roll
shrb
rol
rcrl
ret
or
jne
shr
pop
movb
xchg
test
mov
sbb
push
loopne
scas
mov
fsubr
mov
in
test
and
fstpt
or
cmc
movsb
push
addb
inc
xor
sbbb
push
mov
inc
adc
mov
jae
xchg
mov
adc
fcoml
cmp
or
xor
cmp
repnz
mov
mov
fs
rol
xor
xchg
or
leave
mov
sbb
push
int
into
and
rol
mov
adc
fimuls
push
cmpsl
call
les
or
mov
sbb
daa
xor
aam
imul
cmpsb
and
dec
or
inc
cmc
add
jp
pusha
xor
repz
mov
lock
or
jge
mov
bound
invd
pop
out
scas
je
and
or
in
or
push
sbb
add
push
aad
lea
xor
icebp
aas
mov
xchg
push
dec
in
sbb
int3
jg
rclb
ret
fisubl
inc
shr
or
xor
sbb
fs
cmp
test
mov
xor
mov
inc
mov
cmp
cmp
mov
mov
mov
inc
push
lahf
in
push
sub
sbb
add
mov
sub
adc
shll
les
sar
or
xor
adc
test
lret
push
mov
rcrb
push
lea
or
rcll
adcl
out
cmp
mov
repnz
pop
sub
adc
add
bswap
pmaddwd
lods
mov
add
das
add
xor
imul
pop
mov
cs
out
adc
mov
adc
rol
shll
rolb
into
sarb
push
orb
outsl
aad
or
and
or
dec
nop
mov
pop
cs
jp
or
clc
sbb
or
nop
repnz
add
ret
stos
lcall
sbb
les
daa
push
add
aad
outsl
or
mov
xchg
ljmp
fs
or
xchg
or
xchg
xor
or
inc
mov
ss
popf
adc
mov
int3
push
xchg
and
lods
fcoml
loopne
addr16
popl
pop
inc
or
pop
cli
xchg
lock
jne
add
dec
rorb
or
sub
cmpsl
call
mov
adc
pop
rorb
add
hlt
xor
push
xchg
call
adc
punpckhbw
adc
add
stos
dec
fs
sbb
add
rclb
dec
add
outsl
sbb
and
sub
sub
cmp
xor
fistpll
jnp
mov
lock
inc
push
sbb
and
inc
lcall
in
dec
test
push
inc
ret
cmp
cmpsb
push
dec
mov
rolb
xchg
xor
cmp
adc
pop
lds
loopne
adc
push
inc
cmpsl
test
add
adc
sub
int3
pusha
and
pop
js
insb
push
test
rorb
insl
mov
jne
dec
xchg
pop
scas
ret
push
xchg
sub
inc
je
cmpsb
add
aas
into
ja
mov
pop
dec
fnstsw
lcall
sahf
into
dec
lret
push
dec
xor
cs
test
in
les
mov
push
sbbb
mov
fs
cltd
call
loope
popl
in
cmp
es
loop
pop
cmp
in
adc
shl
inc
sub
pop
xchg
mov
inc
icebp
add
inc
les
sub
cmpsb
jge
sbb
push
adc
adc
mov
into
push
pop
push
movsl
push
cmp
cmp
sbb
xor
or
ficompl
je
inc
loope
sbb
xchg
in
lock
jae
loop
add
test
push
or
popf
jle
scas
xor
int3
fsubl
ret
xchg
lret
mov
push
lock
xchg
and
or
sahf
sbb
aas
add
push
add
lahf
outsl
fisttps
pop
in
jmp
movl
add
pop
imul
adc
data16
mov
sbb
jmp
ja
jg
cld
pop
lret
orb
pop
lods
movsl
sub
insb
repz
lahf
sub
dec
inc
mov
jg
cld
stc
sbb
xchg
mov
mov
cmp
iret
lahf
aas
imul
shll
test
cmpsb
std
stc
repz
cmp
pop
jns
idiv
scas
adc
aas
jg
or
pop
repnz
cmp
test
cmp
out
sahf
mov
push
into
dec
fsubrl
dec
lahf
aas
out
push
sub
mov
repz
cld
stc
repz
icebp
loope
ret
mov
mov
pusha
dec
lahf
aas
jg
and
mov
inc
mov
adc
mov
repz
lods
stos
scas
ss
test
jbe
inc
inc
mov
cld
xlat
mov
sub
mov
enter
pop
xor
scas
mov
stos
push
mov
aas
cld
mov
pop
lahf
fucompp
push
xchg
sbb
repz
das
fdivl
adc
dec
dec
fwait
aas
jg
cld
inc
fwait
mov
jmp
mov
xchg
dec
repz
lahf
inc
insb
jbe
mov
fcomps
imul
rolb
pop
test
xlat
aas
jg
cld
inc
and
shll
mov
push
fcomip
out
lahf
or
push
push
insb
jg
cld
stc
mov
inc
push
outsl
daa
mov
jle
dec
inc
and
and
lahf
aas
push
mov
test
pop
push
clc
or
scas
pop
cld
stc
repz
std
jne
out
or
jne
rol
repz
jg
dec
jg
sbb
and
and
repz
inc
push
mov
sub
fisttpll
ja
lahf
aas
jg
in
push
into
sub
rorb
jp
repz
adc
jne
test
clc
dec
data16
jb
aas
jg
cld
out
mov
and
adc
mov
repz
lahf
cmp
or
cltd
lods
shr
cli
mov
and
cld
stc
inc
pop
clc
scas
in
lret
jo
leave
lock
and
gs
cltd
les
inc
jg
jl
mov
pop
mov
addr16
jnp
jne
iret
lahf
aas
adcb
in
aam
addr16
and
cld
stc
repz
lcall
or
ret
aas
jg
ret
fsts
mov
dec
xlat
pop
idiv
stc
repz
inc
mov
divb
pop
leave
jns
lcall
pop
push
lret
pop
ljmp
jno
stc
repz
dec
sbb
sub
jne
pop
push
fwait
sub
jg
cld
dec
popf
and
aas
sti
stc
dec
out
stos
lret
adc
cltd
inc
repz
lahf
in
mov
sti
ljmp
cld
stc
xchg
ss
cmc
ret
mov
pop
jmp
iret
lahf
aas
sahf
jb
pop
pop
pop
out
push
leave
fisttps
mov
ret
in
pop
lret
test
ss
push
repnz
movhlps
lahf
aas
jg
add
push
mov
cld
stc
repz
mov
mov
jmp
insb
lahf
aas
jg
out
cmp
or
inc
test
repz
mov
leave
lahf
xchg
xor
jg
cld
test
outsb
shrb
push
lahf
mov
dec
fs
xchg
cmp
rolb
cld
stc
mov
scas
into
lock
scas
dec
cs
inc
pop
out
lahf
aas
push
faddl
jl
stos
xchg
cld
stc
repz
ret
mov
aam
int3
sti
loopne
mov
lahf
aas
jg
mov
out
jg
jns
outsb
mov
xor
stc
repz
jnp
mov
mov
dec
cmp
push
xor
aas
jg
mov
mov
lcall
enter
bound
mov
mov
lahf
aas
jg
and
inc
and
push
xchg
jo
stc
repz
popf
leave
xor
xor
push
loope
cmp
cld
in
add
ror
cmpsl
cld
inc
xor
iret
lahf
jae
fisttpll
test
lea
mov
stc
fwait
popa
repz
aas
mov
lahf
aas
jg
rep
push
ljmp
xchg
cld
stc
stc
repz
xchg
loopne
jp
jp
test
inc
aas
jg
sbb
adc
js
shl
iret
lahf
imul
xchg
int
into
push
adc
push
repnz
jg
repnz
insl
test
or
jg
call
out
lahf
push
hlt
cmp
fldenv
sbb
push
fdivrl
cld
stc
hlt
lods
test
sub
sbbl
scas
loope
sub
das
cli
pop
cld
stc
repz
in
xor
add
inc
mov
mov
aas
jg
addr16
dec
push
jmp
push
testl
fs
movsb
in
inc
imul
lcall
aas
jg
sbbb
cld
mov
nop
mov
stc
repz
idiv
sbb
sahf
fisttps
jge
pop
fcomps
stc
js
push
out
sub
repz
movb
sub
cmpsl
jg
cld
stc
jne
add
xor
loope
lods
aam
leave
out
lahf
aas
push
sub
xchg
mov
xchg
mov
cld
stc
rep
mov
lds
mov
and
iret
lahf
aas
jg
dec
lods
dec
jnp
jb
pop
popa
stos
and
cld
stc
repz
addl
jge
int
cld
mov
mov
jg
jl
sub
aam
int3
aaa
adc
stc
repz
cltd
mov
mov
out
xorl
daa
push
stc
repz
sub
jnp
lods
xchg
jmp
mov
aas
jg
cld
jnp
inc
inc
jns
lret
xor
jae
test
iret
lahf
lock
aad
das
in
lret
loopne
jg
cld
stc
push
cmp
sub
fwait
gs
daa
mov
out
lahf
aas
mov
ja
adc
inc
push
pop
jae
icebp
cld
mov
and
dec
or
and
stc
setae
xlat
add
lea
out
leave
mov
loopne
xchg
enter
stc
pop
mov
inc
push
push
es
iret
lahf
aas
sub
or
mov
push
cld
stc
repz
cmc
ja
mov
hlt
insl
mull
aas
jg
jb
into
add
loop
jle
or
cld
stc
repz
add
cmp
fsts
hlt
lret
lods
inc
mov
xchg
into
sbb
ljmp
out
mov
negl
add
sarb
jg
cld
hlt
pop
xor
andl
iret
lahf
jge
fadd
xor
pop
es
das
add
cld
stc
jmp
pushf
sahf
jo
pop
ret
mov
push
out
lahf
aas
mov
jne
ror
mov
stc
repz
cmp
lock
outsl
pop
call
iret
lahf
aas
jg
out
and
clc
pop
sub
and
inc
roll
mov
or
lahf
aas
jg
add
inc
js
sub
mov
loopne
movsl
fidivrs
out
dec
es
addr16
stc
aaa
aas
jg
cld
mov
sub
lret
lea
and
sbb
xchg
cli
sub
out
lahf
xor
cmp
dec
mov
jl
cld
stc
ret
adc
xor
cld
mov
dec
xorb
xor
lahf
aas
jg
cmp
leave
jmp
data16
out
push
out
cld
stc
repz
adc
sbb
int
fisubl
dec
lahf
aas
jg
sub
sub
xchg
mov
mov
mov
iret
xchg
pop
xor
sub
lods
push
or
jg
cld
lcall
mov
xrelease
insb
cmp
out
lahf
out
imul
jg
hlt
cltd
add
jg
cld
stc
jle
pop
test
daa
mov
jno
xor
aam
ds
sub
idivl
ja
cmpsl
inc
fmulp
lahf
aas
jg
xchg
out
insl
hlt
pop
sub
or
out
pop
aaa
push
push
xor
sbb
gs
aas
jg
sub
mov
xor
aad
int3
jns
hlt
sar
repz
test
insl
gs
mov
call
cld
xor
insl
dec
xor
cld
add
lahf
pop
std
repz
lahf
push
dec
fs
adc
jg
jg,pt
cld
stc
jl
clc
stos
lock
fsubrs
pushf
jnp
imul
lahf
aas
mov
xchg
lds
stc
repz
mov
and
fcoms
dec
jge
js
stc
adc
loope
iret
hlt
ret
inc
scas
and
daa
dec
in
jmp
gs
push
lds
adc
jg
in
pop
add
nop
xlat
jle
sarb
repz
lahf
in
adc
inc
xor
addr16
jg,pt
cld
stc
xchg
out
aas
aas
icebp
ja
nopl
mov
iret
lahf
aas
mov
loope
in
int3
fwait
add
shl
cld
stc
repz
xor
mov
popa
inc
dec
mov
lahf
aas
jg
iret
push
push
aam
and
adc
lret
adc
popf
shl
push
or
stc
repz
mov
stos
neg
cmp
pop
imul
cld
rcrl
jg
stos
adc
sub
repz
pop
mov
pop
fdivl
xchg
aas
jg
cld
xor
mov
push
repz
lahf
sub
dec
fcmovnu
cltd
jnp
xlat
mov
orl
mov
clc
adc
iret
lahf
aas
xchg
js
jno
cltd
mov
cld
stc
repz
test
or
xchg
mov
mov
push
add
ret
out
ret
xchg
dec
mov
mov
aas
jg
cld
sbb
mov
and
mov
push
repz
lahf
jb
mov
imul
jg
cld
stc
arpl
test
sub
inc
lea
lods
inc
pop
out
lahf
aas
icebp
lods
aam
pop
xchg
ja
mov
sbb
repz
jmp
sub
pop
out
ret
aas
jg
out
imul
pop
mov
in
push
mov
repz
cmp
mov
or
data16
pushf
aas
jg
cld
lock
mov
sar
dec
mov
ljmp
out
lahf
pushw
or
add
aaa
in
xor
into
jb
cmp
cmp
push
repz
inc
lea
dec
jne
call
stc
jle
shrb
fsubrp
xchg
lds
mov
lahf
aas
and
fsub
push
cmpl
cld
stc
repz
loope
mov
pop
push
mov
jg
fldenv
or
ja
lods
stc
stc
repz
mov
iret
dec
xlat
mov
or
lahf
aas
sbb
cltd
iret
test
test
add
enter
or
js
or
aaa
outsl
fisubs
xchg
call
fidivrl
jns
out
js
mov
jae
inc
pop
xchg
xchg
push
aaa
outsl
fidivrs
inc
and
ss
xchg
repz
fwait
icebp
or
push
mov
add
mov
jge
in
pop
iret
inc
jle
push
into
dec
and
mov
jae
stc
repz
jb
mov
out
lds
call
jg
andl
movl
std
fldenv
iret
mov
adc
daa
cmp
adc
xchg
aas
jg
cld
xchg
fucomp
adc
out
cmp
push
pop
pop
push
lahf
std
add
xor
repz
cld
stc
test
in
in
cmpb
lock
mul
iret
lahf
aas
mov
mov
hlt
add
cmp
push
out
icebp
sbb
xchg
test
jmp
xchg
fs
and
jg
jge
arpl
push
and
rcrb
sbb
lret
inc
cmp
mov
out
lahf
insl
jo
insl
jl
sub
adc
cld
stc
or
jl
test
cmp
mov
in
iret
lahf
cmp
out
pop
fdivl
or
outsl
incb
das
lcall
out
fwait
aaa
mov
and
lahf
sbb
arpl
test
ret
add
mov
lret
pop
xchg
aaa
outsl
das
inc
cltd
adc
lcall
cld
stc
jno
insl
negb
push
test
orb
enter
insl
inc
xlat
shrl
sbbl
jg
pop
push
mulps
in
dec
jmp
out
dec
sar
repz
pop
or
sub
xor
outsb
xchg
jg
cld
or
mov
fmull
lahf
aas
in
pop
push
shrb
cld
stc
repz
popf
push
jge
fimuls
mov
mov
jg
adc
test
pop
push
inc
cld
stc
repz
jg
hlt
lahf
cmp
fwait
pop
xor
xor
lea
pop
xor
daa
movsb
daa
test
xchg
sbb
jae
pop
adc
iret
cli
xchg
out
xchg
aas
jg
icebp
mov
jecxz
cmp
insb
repz
lahf
lcall
mov
xchg
jg
cld
stc
imul
imul
ds
iret
lahf
aas
subb
mov
pusha
push
jo
cld
stc
repz
insl
filds
pop
cmp
inc
out
inc
xchg
lahf
aas
jg
push
sbb
out
pop
mov
sub
mov
push
cld
stc
repz
pop
movsb
push
xlat
je
je
stos
dec
leave
dec
lahf
aas
jg
inc
fcomi
and
ret
or
and
dec
cli
mov
jge
test
sub
cmp
mov
mov
xor
adc
xlat
jb
cwtl
popa
sbb
adc
xlat
jg
cld
stc
push
aas
clc
loopne
sbb
lret
adc
jae
iret
lahf
aas
shrl
dec
bound
ds
cld
stc
repz
mov
jne
add
xchg
push
push
out
xchg
inc
jle
out
xor
jae
xchg
jg
cld
mov
iret
stos
or
or
pop
fcomi
out
lahf
aas
lcall
or
push
repz
shll
sbbl
aas
push
and
iret
lahf
jg
clc
lods
or
repz
push
fs
out
pop
cld
stc
repz
testl
ja
insb
fmul
lahf
aas
jg
movsb
arpl
loope
jp
sub
and
out
pop
push
cmp
stc
pushf
aas
fnstcw
aas
jg
in
out
mov
test
mov
out
ljmp
fidivl
int
pusha
arpl
pop
sbb
ja
xchg
push
roll
aam
mov
ss
lahf
aas
jg
cmpsb
sub
popf
dec
inc
fdiv
push
cmp
repz
icebp
pushf
xchg
sbb
popf
clc
icebp
jb
dec
mov
cld
testl
test
xchg
popa
out
lods
and
loop
mov
cld
stc
repz
aam
ljmp
push
stos
push
in
xchg
lahf
aas
jg
add
pop
cmp
mov
int
addr16
aaa
mov
in
in
outsl
int
aaa
outsl
movsb
outsl
push
adc
imul
out
fsubrs
xchg
adc
lea
daa
fwait
aaa
outsl
fidivs
les
pop
inc
mov
repz
pop
push
lea
arpl
inc
and
inc
fidivrs
add
jg
cld
stc
mov
cmc
cltd
xchg
and
cmp
iret
lahf
aas
sub
test
xchg
adc
repz
stc
cld
stc
repz
sti
js
jl
roll
rcr
mov
jg
or
cmp
scas
dec
mov
push
push
cmp
add
shl
enter
lds
repz
mov
ret
or
add
call
rorl
push
jge
mov
dec
pusha
lods
cmp
out
cmc
xchg
mov
push
and
movsb
repz
pop
push
push
rcll
in
mov
inc
fisubrs
sbb
and
add
mov
fidivs
pop
xlat
dec
cmp
lahf
aas
mov
mov
mov
cld
stc
repz
mov
pop
jbe
lods
cli
lahf
xor
andb
aas
jg
xchg
out
jge
ret
in
adcb
stc
repz
mov
push
xor
negb
aas
jg
fidivs
dec
mov
dec
cmp
repz
xor
popf
cmp
ss
aas
jg
cld
ret
lods
lods
daa
pop
hlt
inc
fnstsw
push
js
mov
enter
adc
mov
test
inc
cmp
mov
sar
repz
out
fchs
inc
xor
addr16
das
cli
adc
and
xor
jg
enter
lahf
dec
xchg
jle
shrl
mov
jg
cld
stc
cmp
sbb
ret
pop
inc
ret
sub
adc
lahf
aas
dec
push
ja
hlt
sbb
popf
nop
scas
in
inc
lret
xrelease
mov
dec
add
fwait
aaa
outsl
out
int3
test
dec
iret
dec
dec
dec
dec
fldt
jns
out
xor
data16
push
je
cmpsb
add
imul
inc
bound
fptan
or
repz
stos
ss
aaa
fistpl
xchg
imul
fidivrs
adc
idivl
jns
mov
mov
xor
loopne
iret
aas
mov
iret
data16
pop
add
daa
in
aas
out
mov
out
push
aad
test
xrelease
in
inc
cld
loope
push
lret
xchg
mov
sbb
out
push
pop
jae
mov
in
push
repz
and
fisubl
movsb
mov
lret
ljmp
mov
icebp
inc
sbbb
repz
lahf
jbe
pop
call
mov
imul
stc
jns
cs
dec
pop
test
test
addr16
aas
lods
or
pop
shll
scas
cmpsl
jl
lret
stc
repz
or
sub
test
iret
lahf
aas
jg
shll
std
sbb
mov
jnp
mov
adc
cmp
sbb
push
cmp
mov
xor
xchg
mov
enter
mov
hlt
xlat
mov
sbb
ja
ss
pop
lahf
jg
in
push
pushf
mov
sub
loope
repz
mov
push
testb
dec
sub
scas
aas
jg
cld
inc
xchg
std
cmpsb
add
add
mov
dec
mov
out
lahf
inc
xchg
cli
adc
mov
in
pop
or
pop
or
ja
je
aad
sbb
iret
lahf
aas
dec
in
mov
push
adc
cld
stc
repz
ljmp
xchg
xorb
add
int
lahf
aas
jg
add
icebp
and
cld
stc
repz
mov
mov
sbb
jg
mov
inc
mov
mov
repz
repz
cwtl
inc
mov
cltd
loopne
pop
push
std
jle
scas
lods
aas
jg
cld
hlt
cli
jno
dec
cs
sbb
jp
repz
lahf
jo
enter
enter
mov
iret
jg
cld
stc
mov
stc
xchg
dec
call
mov
scas
in
lahf
aas
push
jecxz
inc
enter
sub
hlt
outsl
outsl
aaa
lds
stc
ret
addr16
loop
sbb
sub
aas
jg
loope
stos
addr16
cwtl
sbb
xchg
add
lret
mov
or
loop
mov
cmpsl
mov
stc
repz
pop
loope
pop
fisttpll
rorl
lahf
ds
adc
jecxz
xchg
pop
popf
lds
or
stc
repz
repnz
jle
mov
lahf
repz
push
int
cwtl
mov
cld
stc
repz
or
filds
cmp
cltd
pop
lahf
aas
jg
out
notl
jle
test
and
sub
out
inc
loopne
sbb
jb
enter
add
pop
push
mov
fcompl
repz
fwait
adcl
adc
js
daa
add
cmpsb
xor
push
xchg
pop
mov
pop
scas
test
pop
xchg
bound
xlat
add
sub
jg
cld
mov
ja
mov
pop
sbb
or
ja
repz
lahf
xor
jl
xor
xchg
repnz
out
add
lds
loopne
jae
jg
das
stc
repz
dec
push
jbe
sbb
pop
cmp
xlat
mov
jg
cld
cmp
jae
jp
cmc
jmp
out
lahf
fadds
aaa
shlb
pop
outsl
mov
pop
out
jge
sub
inc
sbb
nop
inc
iret
lret
call
push
fdivrs
xor
add
xlat
scas
int
repz
out
test
into
cmpsl
and
jp
ret
push
push
stc
mov
mov
shll
fidivrs
and
pop
popa
jg
jg
dec
add
fwait
aaa
outsl
sub
fldcw
jb
lea
arpl
out
pop
lods
outsl
dec
in
hlt
mov
mov
outsl
ficoms
xor
bound
jns
out
jl
sbb
imul
arpl
outsl
fidivrs
push
repnz
rcrl
xor
add
xchg
fwait
clc
andb
mov
xor
out
lahf
aas
jp
push
push
pop
fucomip
sub
cld
stc
repz
mov
jne
lds
sti
lcall
xchg
inc
xor
fidivrs
out
fisttpll
repz
push
cmp
cmp
scas
cld
stc
repz
das
jo
cmp
inc
dec
cli
jo
cmpsb
add
aas
jg
and
dec
add
xchg
sub
clc
stc
repz
punpckhwd
jl
cwtl
test
dec
aas
jg
cld
mov
dec
in
daa
push
push
dec
lret
sub
movhps
dec
arpl
scas
adc
mov
jg
in
aad
xchg
arpl
mov
scas
jnp
add
ss
pop
shlb
add
jg
cld
stc
in
xchg
mov
sti
push
gs
mov
arpl
gs
enter
adcl
cmp
cld
stc
dec
pusha
cli
mov
arpl
xor
jns
out
lahf
aas
adc
sbb
add
cmp
repz
push
mov
jb
add
mov
xchg
dec
sub
inc
ret
mov
cld
stc
repz
jmp
int3
cmc
mov
std
push
inc
and
daa
aas
jg
ljmp
nop
xchg
out
fwait
ja
repz
test
fidivrs
lods
dec
aam
mov
adc
stos
int
aaa
outsl
xchg
lret
mov
aad
lods
mov
or
pop
and
mov
inc
sub
and
adc
cmove
dec
imul
xchg
dec
and
shr
lods
cmp
outsl
fidivrs
mov
invd
les
out
cmp
and
sbb
int3
out
jns
out
scas
xchg
jp
into
test
negl
jg
cmp
outsl
fidivrs
jle
stos
and
mov
inc
jnp
jg
mov
fidivs
and
roll
and
pushf
fidivrl
out
int
hlt
test
sub
sarl
lods
js
push
cmpsb
and
inc
testl
cmovns
dec
cwtl
mov
out
fwait
sub
vunpckhpd
adc
jnp
outsl
fidivrs
pusha
pusha
dec
push
lret
mov
das
out
fwait
aaa
std
jo
aas
push
pop
xor
movsb
iret
pop
neg
mov
cld
in
adc
jl
dec
int
aaa
outsl
xchg
inc
add
add
sahf
movsb
pop
stc
out
jno
daa
xor
add
dec
and
jns
pop
scas
add
lods
movsb
shl
out
dec
ljmp
aaa
outsl
inc
aad
mov
push
lcall
into
xchg
mov
push
mov
enter
jbe
gs
std
cltd
mov
int
aaa
outsl
ret
and
mov
push
out
fxch
fnstcw
dec
dec
pop
mov
push
jb
jl
mov
outsl
fiadds
or
repz
push
mov
repz
and
and
fidivs
aaa
outsl
fidivrs
and
shll
jmp
out
fwait
pop
pop
shrb
jge
add
mov
in
or
cwtl
int
aaa
outsl
xchg
enter
insb
adcb
xor
cmp
lahf
or
push
adc
clc
fadds
and
repz
or
dec
sbb
ljmp
inc
test
enter
ds
pop
aaa
mov
ljmp
xlat
adc
xchg
jne
and
outsb
out
fwait
aaa
mov
mov
inc
mov
mov
cs
ficoml
invd
mov
fwait
aaa
outsl
int
out
adc
push
sub
mov
scas
lods
jns
shlb
fsts
mov
fidivs
fcoml
fwait
int
aaa
out
lcall
jle
int
mov
mov
clc
inc
push
pop
jl
sub
enter
push
fwait
fwait
aaa
outsl
ficomps
test
or
lds
repz
cmp
into
sub
lods
push
add
je
shlb
mov
ljmp
testl
inc
push
scas
or
out
mov
movsl
add
enter
orb
divb
jg
cld
stc
jne
jecxz
inc
test
pop
inc
push
xchg
push
out
mov
xchg
out
pop
pusha
sub
fidivrs
lret
rcrl
in
mov
aaa
outsl
test
sbb
jne
pop
and
lahf
push
inc
push
pushf
shll
mov
mov
dec
cmp
aas
mov
and
ds
filds
outsl
xchg
cmpsl
insb
pop
out
stc
stc
repz
into
test
in
cmp
mov
gs
cld
jecxz
scas
fstpl
imul
aas
jg
scas
mov
out
sbb
icebp
push
cld
stc
repz
fcomps
mov
cmp
sub
or
scas
cmc
pop
jmp
out
sub
shlb
fnstsw
aas
jg
cld
inc
inc
leave
dec
mov
dec
push
xchg
cmc
in
lahf
test
sarl
data16
out
aas
std
insb
popa
xor
mov
rcll
outsl
fidivrs
aas
sub
div
out
fwait
xlat
lock
and
hlt
or
outsl
fidivrs
mov
bound
cld
xor
filds
aam
cld
or
shlb
or
cld
stc
repz
xor
inc
pop
insl
cmpsb
cltd
insl
sbb
aas
jg
push
fsubs
int
ja
xchg
xchg
jg
aad
sbb
sbb
aaa
xor
push
xorl
mov
aas
and
xchg
negb
icebp
xor
sub
cmc
and
cmp
daa
test
popf
push
iret
lahf
aas
jg
sarb
popa
xchg
cli
or
es
sahf
in
mov
mov
lahf
aas
jg
mov
add
inc
daa
out
sbb
mov
jne
mov
xchg
ss
aas
jg
cld
ficompl
mov
add
xchg
and
mov
jmp
lds
sub
repz
rcrl
inc
sbbl
add
lds
emms
xchg
mov
out
sub
aaa
cmpb
rcl
cld
sbbl
fisttpl
arpl
movsl
inc
stc
repz
dec
mov
cmp
sbb
cmp
cld
dec
adc
fstps
cmp
iret
mov
pop
xor
lcall
repz
or
sub
mov
cmp
outsb
inc
jle
addr16
arpl
aaa
outsl
fidivrs
inc
cmp
cmp
les
lods
jne
out
fwait
shr
das
aam
push
shrl
fidivrs
add
mov
insb
pop
sbb
js
int
aaa
popf
paddd
shl
cld
cld
stc
notl
sub
movsl
stc
push
xor
outsl
ficoms
lahf
jno
movsl
pop
jp
xor
pop
out
fwait
aaa
mov
adc
arpl
loopne
mov
mov
jae
dec
pop
mov
xchg
push
lahf
jg
fwait
add
imul
mov
sbb
shl
add
test
inc
jle
orb
xchg
cmp
fwait
aaa
out
mov
push
bound
je
sub
push
loop
repnz
jg
packssdw
mov
xchg
stc
outsl
cli
ret
out
xchg
lock
sbb
inc
add
jecxz
add
fidivrl
and
jne
in
sbb
xor
stos
jns
out
jne
mov
cltd
jmp
inc
mov
add
outsl
fidivrs
enter
xor
push
fistpl
int
insb
aad
loope
xor
lret
adc
mov
shrl
pop
mov
int
aaa
mov
bnd
and
and
mov
push
xchg
sbb
cmpsb
cmp
int
aaa
outsl
adc
fistl
mov
es
mov
or
repnz
outsb
sub
xchg
rclb
fs
mov
iret
cltd
push
xor
cld
stc
repz
imul
and
in
ds
icebp
dec
inc
cmp
lods
and
jg
fdivs
mov
ret
leave
pop
xchg
push
iret
dec
mulb
sub
and
jg
scas
jmp
test
pop
mov
aas
addr16
mov
out
into
in
divb
stos
roll
stc
repz
scas
stc
xchg
ds
push
pop
or
lahf
aas
jg
cli
push
rcrb
jae
mov
stc
repz
hlt
aad
add
hlt
jnp
sub
sub
movsb
xor
dec
pop
lahf
pushf
enter
iret
cmpsb
and
cmpsb
test
jg
loop
mov
mov
stos
adc
loope
stc
inc
daa
mov
jo
cld
pop
adc
call
jmp
mov
lahf
in
leave
sub
repz
lcall
cld
stc
push
mov
hlt
je
lods
daa
push
or
iret
lahf
aas
fldl
sub
outsb
pop
push
sbb
cld
stc
repz
ret
xor
jnp
mov
iret
lahf
aas
jg
mov
dec
int3
in
stc
add
jg
repz
push
sub
repnz
xchg
loop
xchg
lahf
shlb
ret
or
punpckhwd
add
mov
push
jle
jg
sbb
push
or
ficoms
incl
xor
repz
and
lds
sub
xchg
pop
and
mov
lods
ficomps
adc
aad
add
out
outsb
pusha
xchg
mov
in
gs
inc
sbb
out
iret
push
iret
jno
add
mulb
imul
ds
shr
lods
jle
sub
mov
dec
addr16
jo
or
lret
je
fwait
aaa
outsl
out
into
or
xchg
mov
fildl
out
push
std
pop
ret
dec
lahf
add
fwait
aaa
outsl
fidivrs
into
bound
sbb
lahf
cmpl
scas
insl
sahf
shrl
addr16
mov
mov
inc
push
or
adcb
xchg
in
lret
fstpt
jg
jo
mov
xlat
repnz
out
lahf
loopne
mov
xchg
xchg
xor
xor
adc
stc
mov
adcb
sub
jg
sbb
out
adc
xchg
xor
fwait
cld
jecxz
aas
dec
mov
cwtl
pop
or
std
leave
lahf
aas
jg
shr
pushf
insb
cwtl
xchg
mov
test
stc
repz
das
mov
into
sbb
in
out
dec
aas
jg
cld
jno
aaa
iret
jle
mov
mov
out
lahf
out
sub
jge
push
and
in
in
mov
repnz
cmp
out
cmp
cmp
ret
fidivrs
mul
jle
pusha
dec
movsl
jo
xchg
adc
test
jp
xchg
xchg
mov
push
mov
sbb
test
xchg
mov
orl
aaa
out
andb
mov
cli
enter
sbb
sub
scas
imul
sbb
jmp
xor
lods
jp
ficoms
mov
outsb
adc
mov
fs
outsl
pop
pop
jae
icebp
pop
adc
test
repz
cmp
pop
outsl
enter
or
js
clc
leave
fwait
aaa
outsl
ficomps
sbb
add
push
mov
out
mov
adc
push
notl
sbb
and
sahf
add
inc
mov
mov
cmp
mov
cmpsb
aas
jg
rcrb
push
jbe
icebp
in
jae
imul
in
popa
dec
dec
das
jle
adc
icebp
jg
cld
stc
push
add
pop
jmp
cmp
pop
inc
jmp
iret
lahf
aas
pmullw
je
arpl
adc
cmp
inc
cld
stc
repz
bound
mov
push
dec
ds
cld
mov
jmp
pop
dec
adc
mov
testb
dec
pop
mov
xchg
xchg
pop
outsb
cmc
sbb
ljmp
xlat
mov
adc
dec
mov
iret
lahf
aas
outsl
mov
mov
hlt
jae
into
fs
push
lret
repz
aaa
mov
int
fldl
test
push
add
pop
xor
add
inc
dec
aam
mov
fdivrl
mov
test
xchg
test
jg
mov
aas
std
dec
cmp
aam
lods
xchg
flds
mov
shl
repz
xchg
xorb
fsubr
xchg
roll
cld
stc
gs
ljmp
jl
xchg
add
ret
add
iret
lahf
aas
or
jge
sub
adc
stc
repz
jne
push
dec
icebp
mov
aaa
rolb
inc
mov
movaps
nop
jns
out
mov
mov
jbe
test
inc
fidivrs
pop
pop
inc
mov
aaa
xchg
movsl
inc
pop
nop
cld
push
jns
insl
test
inc
pop
in
lret
sbb
icebp
nop
int
aaa
outsl
shlb
aam
mov
mov
arpl
cli
mov
in
popa
call
aaa
outsl
fidivrs
loop
cmp
lds
adc
or
repz
dec
ror
push
pop
mov
jnp
xlat
aaa
outsl
fidivrs
movsb
std
loop
into
loop
mov
mov
mov
xlat
shrl
inc
mov
jnp
repnz
xor
cmpsl
adc
cld
and
jecxz
fdivs
outsl
ficoms
mov
or
mov
inc
shl
out
fwait
insl
adc
push
icebp
inc
lods
das
enter
fidivrs
lret
pop
hlt
sarl
or
call
push
repnz
in
or
mov
int3
cld
mov
leave
xchg
cltd
fwait
aaa
outsl
fisubs
pop
je
jecxz
inc
add
out
in
inc
call
cmpl
aaa
outsl
fidivrs
rcl
add
in
out
scas
imul
ffree
popa
dec
enter
stos
and
aad
iret
mov
xchg
iret
lahf
aas
jg
aas
push
and
xchg
addb
clc
leave
out
mov
popl
daa
enter
sbb
and
cld
iret
xchg
arpl
out
mov
inc
push
jmp
jg
jns
out
fwait
mov
pop
andb
jb
lods
cmpsb
dec
inc
jg
jge
fdivrl
faddl
mov
sbb
push
sub
iret
lahf
aas
insb
addr16
les
and
repnz
mov
lret
jns
out
sub
test
dec
movsl
push
sub
jmp
mov
add
enter
mov
orl
inc
fadds
xor
mov
jns
jge
dec
add
push
cltd
out
add
aas
fdivrl
in
dec
push
call
lret
cld
stc
repz
cmpb
push
sbb
cmpsb
dec
inc
and
lahf
aas
jg
mov
dec
cmp
subl
sar
repz
sahf
inc
rorl
sub
lret
or
lcall
imul
fcomps
xor
stc
repz
scas
cmp
adc
mov
aas
jg
cld
pushl
arpl
mov
repz
lahf
add
in
xchg
jmp
push
lods
add
jl
cld
stc
call
stc
lds
mov
sbb
cltd
sbb
cmc
enter
insb
jp
sbb
outsl
fidivrs
xor
mov
fwait
outsb
jl
or
repnz
fwait
inc
icebp
and
int3
cwtl
xlat
ljmp
dec
mov
loopne
jl
stc
push
or
fistps
shlb
outsl
mov
imul
inc
xchg
xchg
fwait
xchg
and
adc
repz
adc
cmp
out
in
nopl
push
mov
inc
stos
test
mov
push
lahf
jns
mov
daa
loope
shll
fwait
add
fidivrs
or
outsl
fmulp
mov
push
sbb
inc
cmp
stc
xlat
subb
xor
test
movsb
mov
or
jns
out
cmpsb
mov
incl
push
cmp
jb
mov
mov
add
and
adc
xor
xlat
daa
fwait
rcrl
mov
or
sub
pop
int3
cmp
push
fists
mov
mov
jge
icebp
in
lahf
enter
push
out
lret
aas
jg
xchg
jle
cmp
loope
popa
int
xchg
sbb
mov
out
insb
mov
sub
sarb
loope
daa
aas
jg
cmpsl
sti
pop
jge
adcl
mov
dec
imul
loop
mov
fsts
mov
lea
ficomps
popa
sbb
dec
les
xchg
push
cltd
inc
adc
repz
ficoml
pop
jb
push
xor
fadd
iret
aas
push
mov
inc
sbb
stos
add
cld
stc
repz
mov
rcll
mov
imul
incb
mov
gs
jmp
pop
mov
xchg
push
cwtl
subb
cld
stc
repz
push
aas
addl
xor
scas
test
lahf
jl
outsb
hlt
scas
mov
movsl
decl
push
enter
pop
mov
mov
sbb
pop
xchg
ror
mov
sub
mov
xchg
aaa
outsl
inc
xor
push
sub
cld
loope
fbld
sub
out
cld
stc
rep
adcl
push
lahf
out
jg
lcall
sbb
or
in
cmp
out
aas
dec
push
or
mov
setg
jg
mov
hlt
scas
clc
out
bound
jl
repz
mov
inc
mov
ja
mov
into
daa
jp
sub
mov
mov
lahf
js
mov
mov
sarl
int
ljmp
cld
push
js
add
mov
out
clc
clc
pop
scas
loop
inc
dec
xchg
and
repz
ret
popf
jbe
jno
sti
mov
dec
lahf
int
aaa
outsl
in
xor
adc
cmp
repz
call
jl
insb
adc
jns
aaa
outsl
ficoms
push
rorb
sub
int
shlb
popa
sbb
ljmp
add
mov
outsl
fidivrs
mov
dec
push
ss
or
inc
dec
insl
sbb
lahf
cld
stc
notl
out
inc
xlat
mov
pop
icebp
cltd
lahf
aas
jg
popa
cmp
pop
dec
adc
sbb
call
out
hlt
add
enter
sbb
jg
cld
cmp
mov
mov
jl
inc
jp
repz
lahf
pop
icebp
clc
popf
dec
adc
jbe
mov
mov
cld
stc
dec
mov
xorl
faddp
mov
dec
dec
push
je
pop
push
mov
ficompl
stc
stc
or
fucomp
jge
insb
popf
jo
repz
lahf
das
mov
popa
adc
push
jle
cld
stc
arpl
xlat
cs
jg
pushf
scas
loope
lret
dec
jnp
pop
mov
aas
mov
and
xchg
cmpsl
int
aaa
outsl
cmpsl
mov
lock
xor
jb
push
mov
and
lret
xchg
stos
sahf
shl
insl
fwait
aaa
outsl
fdivrp
addr16
cmp
out
xchg
cld
jns
out
jae
ror
inc
pop
mov
and
aaa
outsl
fidivrs
out
loopne
testl
es
fwait
loopne
xchg
ljmp
jns
or
ljmp
movups
movsb
xlat
loopne
fwait
aaa
outsl
lret
lds
jl
data16
cld
mov
lret
and
dec
adc
cmpsl
repnz
pop
stc
push
pop
push
pusha
add
xor
imul
cld
xchg
xchg
jle
jo
fdivrl
sub
pop
inc
hlt
adc
movsl
ss
out
mov
stos
adc
cld
stc
add
ljmp
pusha
jecxz
push
push
iret
lahf
aas
xor
mov
dec
mov
cld
stc
repz
mov
and
iret
cmp
scas
xchg
adc
iret
lahf
aas
jg
xchg
leave
fs
xor
cmpsb
repz
stc
repz
mov
mov
xor
sub
aas
stc
sti
lods
je
cld
cs
sub
fwait
aaa
outsl
sbb
jne
inc
packssdw
mov
shl
xchg
das
js
dec
fmuls
outsl
and
xor
sbb
fwait
stos
xlat
dec
lock
cld
outsl
andl
repz
pop
or
mov
pop
in
mov
repz
leave
mov
fwait
aaa
outsl
fidivrs
lcall
lds
jns
out
fstl
fadd
and
sub
popl
fidivrs
mov
das
jl
jae
mov
repz
fsubrl
mov
cmpsl
jl
xorb
cmp
mov
insb
jp
test
repz
pushf
std
pusha
and
mov
mov
icebp
inc
jle
cld
pop
mov
stc
jp
xor
loopne
add
cld
stc
inc
cs
mov
pushf
mov
out
lcall
mov
pushf
into
sbb
add
cld
loope
pushf
dec
cmpsl
and
gs
cltd
iret
lahf
aas
jg
in
hlt
imull
push
add
or
out
mov
sahf
inc
or
scas
lret
cmp
lahf
aas
jg
jmp
rcrl
in
inc
mov
adc
xrelease
xchg
int
aam
xlat
dec
sub
stc
pusha
or
fmull
stos
cltd
pop
in
lret
scas
xor
in
lahf
aas
mov
into
xchg
sub
out
mov
fimull
mull
jp
repz
push
into
mov
aaa
out
sbbb
push
push
aas
movsb
dec
popa
out
inc
cmp
loopne
fwait
repnz
xlat
je
out
loopne
lahf
aas
pop
clc
test
gs
mov
dec
int
mov
inc
adc
jns
aaa
outsl
fmulp
out
sbb
cmpsb
adc
dec
mov
jns
out
inc
scas
loope
mov
repz
stos
lahf
insb
fidivrs
push
inc
mulb
cld
stc
xrelease
mov
adc
jl
enter
lret
and
insb
orb
test
mov
outsl
inc
jle
cld
push
adc
in
std
in
leave
cld
mov
inc
fbstp
and
iret
lahf
aas
jg
das
add
or
sub
leave
out
fbstp
outsl
fiadds
adc
cmpsb
pop
mov
sub
int
aaa
mov
jo
sahf
insl
ret
fdivrl
cmp
push
mov
mov
cmpsb
iret
lahf
jg
dec
cmpl
push
cld
stc
repz
clc
fstpt
clc
out
mov
std
subl
adc
pop
sub
fistps
and
enter
dec
and
out
out
cmp
shrb
repz
pop
and
fidivl
int
aaa
outsl
pop
sbb
rorb
adc
cmpsb
mov
aam
outsl
mov
sub
leave
inc
int3
inc
fwait
aaa
outsl
das
inc
jp
in
fstpt
test
scas
call
dec
mov
fidivrs
push
pop
lods
inc
test
fidivl
fwait
aaa
adc
jo
add
mov
loop
scas
cwtl
rorl
cli
insb
cmpb
cld
stos
mov
jo
testl
add
and
pushf
xor
out
fwait
xchg
repz
rolb
and
mov
cld
mov
dec
add
push
sub
inc
pop
add
or
xor
mov
dec
jle
aad
outsl
aad
std
jnp
adc
and
or
pop
add
inc
xchg
outsl
cld
stc
repz
in
push
test
xor
sbb
iret
lahf
aas
jg
adc
cmc
mov
dec
fsubl
mov
stc
repz
xor
sbb
scas
push
pop
cmp
insb
adc
xchg
stos
pusha
pop
or
fsub
shlb
jnp
add
push
loop
les
add
test
pop
adc
push
inc
enter
iret
add
imul
leave
adc
cmpsb
cli
mov
imul
mov
mov
dec
pop
ret
fwait
aaa
outsl
fimuls
lret
sbb
jns
out
mov
lds
ss
jns
cli
aad
or
or
push
fwait
sub
outsb
jo
and
jne
int
insl
stos
out
insl
call
and
push
mov
adc
xor
stos
daa
inc
out
or
test
mov
int
pop
jle
loopne
xchg
rolb
adc
lahf
aas
jl
mov
enter
les
cld
pop
cld
stc
repz
fstpl
iret
sub
sbb
lahf
aas
jg
fcom
and
xchg
jno
mov
or
in
mov
add
das
jg
pop
jge
jns
inc
loope
stc
movl
cld
stc
repz
aam
or
aaa
pop
dec
mov
iret
lahf
aas
jg
mov
or
int3
adc
or
stc
repz
jae
jmp
sahf
les
lahf
aas
jg
add
imul
iret
popa
mov
pop
add
outsl
shrb
inc
cld
pusha
inc
xchg
mov
sbb
fwait
sbb
jno
out
xchg
pop
sbb
xor
out
pop
push
fisttps
aaa
das
mov
jl
mov
jb
dec
adc
inc
dec
ds
and
loope
outsl
iret
lahf
aas
jg
cli
pop
push
in
xor
push
mov
cld
stc
repz
test
adc
gs
or
inc
out
aas
jg
negb
stos
adc
lods
test
repz
notb
enter
add
call
aas
jg
cld
nop
shrb
push
test
push
fsubrs
lahf
scas
xor
pop
add
mov
mov
cmp
push
push
xchg
int
aaa
outsl
push
xchg
xchg
xchg
push
jg
jmp
mov
dec
movsb
or
int3
xor
push
aad
xchg
sub
fisubrs
adc
sbb
push
cltd
lods
jns
out
mov
lds
hlt
imul
adcl
rorb
scas
cmp
jns
xchg
jecxz
in
fwait
fwait
dec
std
pop
sub
dec
inc
mov
dec
iret
mov
aad
jmpw
cmp
mov
dec
std
cs
out
fwait
ja
jle
mov
aam
mov
jns
cmp
mov
and
dec
fs
repz
insb
fsubs
iret
pop
incb
stc
das
inc
pop
add
repnz
pop
mov
lahf
aas
mov
mov
jl
shl
lods
xchg
testl
aas
data16
xchg
mov
outsl
fdivp
and
lea
mov
out
dec
test
pop
aas
clc
pop
scas
mov
fdivrl
popa
fwait
xor
mov
stc
mov
lahf
mov
ss
andb
leave
in
jge
enter
lret
jmp
lea
cld
ds
and
into
sbb
inc
lret
out
lahf
push
mov
mov
add
cld
stc
sub
push
jno
ficoms
sbb
out
lahf
aas
jg
xchg
popa
mov
inc
push
cld
stc
repz
or
imul
test
push
std
pop
movsb
pop
scas
push
pop
lret
push
jo
enter
aad
push
mov
paddusw
fwait
aaa
outsl
mov
fwait
jb
xor
pop
in
repz
xchg
test
jo
aaa
outsl
fidivrs
mov
insl
push
addr16
sbb
ret
and
popl
test
adc
std
testb
push
scas
sbb
int
jo
repnz
cmp
aaa
mov
loope
dec
into
out
notl
and
jg
test
jae
sbb
jbe
xor
mov
mov
adc
sbb
cmp
add
add
cld
sbb
sahf
mov
mov
inc
ret
aas
jnp,pn
out
lahf
mov
fbld
pop
aam
xor
insb
fsubs
jg
jo
stos
shlb
xchg
bound
cld
stc
repz
int3
jl
sbb
dec
xchg
or
mov
jg
xor
outsl
outsl
fidivrs
pop
xorl
subl
xor
xchg
fwait
aaa
imul
loopne
test
clc
enter
jae
lret
ds
cmp
pop
stos
jle
btcl
fwait
aaa
outsl
sub
fnstsw
sahf
bound
icebp
enter
mov
faddl
bnd
fidivrs
xor
push
mov
inc
subb
int
xor
inc
push
xor
repz
mov
mov
sar
nop
mov
mov
popa
mov
jle
fwait
aaa
outsl
fisubrs
jns
or
xchg
repnz
cmp
mov
int
cmpsl
xor
addb
jge
sbb
lods
lds
xchg
push
movq
idiv
mov
in
adc
mov
or
aam
cmpsb
push
inc
cli
enter
ljmp
mov
fidivrs
ss
in
push
clc
out
fwait
aaa
in
cmp
or
bound
repz
add
lahf
or
pop
pop
mov
aaa
outsl
out
push
sub
sbb
sbb
xlat
push
xor
aaa
outsb
jle
mov
sub
repnz
fwait
aaa
jg
rorb
icebp
dec
mov
jl
jns
out
xchg
add
out
mov
ficoml
xchg
aaa
out
and
scas
xlat
icebp
icebp
jmp
je
out
fwait
movsb
je
addb
into
cmpsl
lea
sahf
and
fsubrl
cmp
cmp
out
fwait
aaa
push
ds
insb
sub
pop
xor
mov
enter
mov
cmp
mov
int
aaa
outsl
fildl
dec
fsub
add
addl
in
addb
mov
out
and
xchg
xor
clc
cmpsb
push
or
int
aaa
push
add
jmp
andl
xchg
jae
test
push
xor
and
sti
ljmp
xchg
out
xchg
push
pop
mov
je
cmp
testl
mov
push
int
aaa
outsl
outsb
pop
addr16
ja
cld
data16
cmpsb
dec
fistpll
inc
hlt
mov
bound
out
fdivrl
sbb
pop
in
aaa
mov
stc
repz
loopne
push
movsb
nop
ja
cmp
sbb
test
iret
lahf
aas
jg
pop
movsb
and
aam
shl
out
mov
pop
lcall
out
fwait
aaa
pop
dec
hlt
out
dec
das
mov
or
jns
fcompl
das
rolb
xchg
cmp
mov
sbb
test
sarb
or
movsl
adc
fdivrl
dec
xchg
cld
and
aaa
outsl
ficoms
rcl
testl
int
pop
push
xor
mov
jp
fcmovu
scas
sub
loop
cmp
add
xlat
xchg
mov
jmp
in
repz
imul
pop
inc
and
outsl
mov
mov
and
int3
cmp
jb
out
jecxz
mov
lret
mov
cs
repnz
cmp
jge
fwait
aaa
out
lahf
gs
mov
imul
out
and
aad
ja
push
mov
aaa
outsl
fimuls
gs
and
sub
cs
int
xor
adc
stos
mov
icebp
in
pop
fists
xor
ret
jns
out
out
popf
ds
test
jnp
cmp
fidivrs
bound
jae
fwait
sbb
dec
divl
jo
fstpt
iret
lahf
aas
fstps
add
sti
lods
int3
ja
fwait
ja
pop
sbb
out
sbb
pop
mov
and
add
inc
pop
aas
lea
aaa
test
fs
ja
test
imul
adc
into
mov
mov
repz
std
mov
push
cmp
insb
cmpsl
pop
sarb
cld
stc
pop
jno
ret
pop
xor
dec
sub
xchg
xor
iret
lahf
aas
ss
dec
sbb
fidivrl
repz
lret
stos
xor
dec
jg,pt
sub
cmpsb
push
cwtl
rcl
cmpsl
dec
cld
stc
repz
mull
negl
pushf
jnp
psllq
cmp
ljmp
ja
and
negl
or
push
xchg
lahf
lret
mov
push
xchg
repz
repz
outsl
fidivrs
mov
nop
add
lret
out
fwait
aaa
add
lcall
mov
mov
mov
imul
push
fwait
cli
jno
lods
stc
ds
sub
or
outsl
add
stc
add
insl
aad
rcll
aaa
outsl
fidivrs
bound
mov
inc
scas
cld
stc
xchg
push
insl
push
pop
push
or
push
mov
jg
xor
jg
hlt
cltd
shll
ja
mov
pop
pop
inc
daa
call
xchg
push
shlb
int
mov
fbstp
imul
mov
and
int3
ljmp
leave
dec
adc
cmp
fstpl
add
add
ret
or
out
lods
testb
filds
mov
psrld
mov
out
fwait
inc
push
inc
push
aam
insl
repnz
ret
std
outsl
fidivrs
adc
mov
mov
fsubrl
int
aaa
add
in
in
push
cltd
leave
fnstcw
mov
int3
pop
and
outsl
ficoms
loope
arpl
inc
loope
flds
int
aaa
ret
in
push
or
fidivrs
inc
adc
clc
adcl
aaa
outsl
fimuls
sti
xchg
jle
push
jb
out
xor
call
mov
aas
jg
orl
pop
jg
addr16
test
ljmp
mov
mov
or
fisttpll
mov
cmp
cmp
inc
mov
xchg
cmp
pushf
rcll
nop
stos
sub
mov
pop
jns
push
aad
fcompl
fsubrl
stc
ret
leave
fwait
frstor
das
sub
aas
jg
cld
out
mov
pop
xor
push
enter
mov
das
lods
inc
mov
cld
fistpll
inc
lock
xor
jg
mov
notb
push
jl
xchg
out
lahf
aas
jae
ret
int3
test
inc
repz
jp
mov
stc
mov
outsl
fidivrs
jne
jmp
aas
push
icebp
pop
mov
cwtl
js
inc
ss
out
inc
sub
and
fnstcw
shll
clc
lcall
int
add
pop
movsl
out
ret
pusha
add
xchg
dec
lahf
adc
jae
xchg
xchg
jo
sub
addr16
jo
pop
xor
inc
inc
jb
jae
shufps
sbb
sbb
inc
jo
mov
movb
sbb
pop
pop
pushf
enter
xlat
lret
inc
add
aaa
lahf
pop
scas
jo
out
jl
stc
inc
xor
bound
jl
test
pop
pop
and
out
outsb
addr16
mov
jo
bnd
inc
sub
inc
insl
push
jge
cmpsb
sti
jp
pop
and
adc
inc
adc
sbb
xchg
and
sbb
imul
jmp
mov
inc
adc
in
push
adc
inc
jnp
call
or
cmpb
pop
cwtl
push
or
adc
inc
es
std
addl
mov
mov
ljmp
das
lods
dec
mov
mov
add
or
mov
insl
aam
add
in
call
add
cli
and
stos
daa
inc
sbb
push
push
scas
or
xor
inc
jno
aad
jp
pop
or
cmp
fistl
cmp
push
push
add
cmp
mov
jae
lds
test
mov
push
add
sti
jge
test
inc
cmpb
adcb
fisubrs
add
clc
adc
push
mov
repnz
mov
popf
jae
leave
pop
mov
push
push
mov
adc
add
mov
jg
add
and
call
push
adc
ret
push
jae
roll
push
inc
shlb
pop
adc
andl
sahf
jo
add
mov
adc
pop
inc
aam
add
push
jg
add
stos
jb
xor
stos
lahf
add
dec
push
sbb
stos
pop
xchg
and
clc
jg
push
ds
xorb
xor
xchg
jae
xor
cmp
rclb
or
adc
rolb
inc
in
push
clc
addr16
push
add
add
mov
rolb
notb
inc
jle,pn
push
je
add
push
push
add
mov
mov
push
imul
sbb
int3
ror
add
fmull
inc
adc
cs
mov
adc
dec
lock
inc
cmp
fisttpll
mov
adc
jbe
mov
push
sub
push
push
fstps
sbb
push
add
xor
pop
sbb
mov
push
clc
andps
inc
ret
fmuls
xchg
cmp
icebp
mov
lahf
and
or
icebp
mov
adc
mov
jecxz
push
sahf
push
call
pusha
add
add
push
push
imul
lods
shll
inc
aam
ljmp
xchg
mov
shlb
push
xor
adc
daa
mov
int
add
dec
cli
push
add
stc
sbb
cmp
repnz
adc
mov
jo
andb
jo
adc
xor
jo
out
mov
mov
arpl
add
pop
pop
push
sub
cmp
loopne
test
arpl
scas
adc
cmp
adc
mov
mov
imul
push
adc
enter
and
dec
ja
push
and
xor
push
scas
stos
pop
add
lods
dec
subps
add
arpl
es
push
inc
mov
ficompl
loope
mov
dec
lea
inc
les
cmp
adc
inc
aad
movsl
pop
sbb
lods
rclb
push
pop
push
add
add
mov
sbb
sbb
push
add
xor
dec
dec
aas
test
adc
lock
mov
cli
xchg
int
fs
call
or
mov
clc
mov
push
ret
jo
adc
divb
push
mov
push
icebp
pop
sbb
hlt
int3
and
iret
and
pop
adc
sub
call
adc
sbb
into
xor
sbb
sti
shl
xchg
xlat
or
fldenv
sbb
out
sbb
cli
pop
sub
or
call
add
jmp
or
adc
and
mov
sbb
adc
or
ret
in
aaa
cli
sbb
ljmp
inc
mov
leave
xchg
sbb
inc
push
mov
push
test
and
mov
das
mov
ret
pop
and
cs
mov
inc
push
mov
icebp
push
xchg
and
pop
sbb
mov
xor
push
mov
push
fcomps
aam
rcrl
and
int3
cltd
subb
and
mov
orb
fs
loopne
fadd
int3
fwait
popa
pop
add
sub
cltd
or
mov
adc
sbb
inc
js
outsb
inc
push
inc
stc
adc
imul
movsl
bound
sbb
iret
ret
subl
adc
or
push
enter
or
cmpsb
ret
mov
or
rcrb
scas
pop
mov
insb
mov
mov
and
push
push
lret
or
xchg
stos
dec
stos
sbb
adc
adc
out
xchg
aaa
adc
jmp
arpl
out
sbb
rcrl
and
lock
mov
sbb
rorb
mov
int
or
ljmp
mov
int3
xor
sbb
add
push
mov
sbb
push
add
fiaddl
out
sbb
loope
inc
mov
test
or
xorl
jo
mov
enter
add
into
cmp
xor
xchg
xchg
sub
out
loopne
add
addb
test
scas
aas
adc
mov
cmp
test
add
push
int
inc
aam
fidivl
inc
mov
cltd
ds
adc
roll
lret
or
aam
jmp
add
aad
xor
sbb
daa
adc
add
mov
push
fdivr
and
xlat
add
cs
add
rorb
inc
or
push
into
add
cwtl
pop
shll
leave
or
mov
add
dec
dec
or
pusha
jne
or
cmp
enter
cmp
add
lods
lock
push
inc
push
push
mov
in
stos
or
mov
mov
mov
xchg
into
fs
mov
gs
adc
jp
inc
xchg
lret
stos
mov
sub
aam
and
ljmp
sbb
jg
pop
addl
rcll
stc
mov
or
push
inc
stos
cli
add
or
cmp
inc
jmp
call
addr16
or
push
enter
sbb
or
push
cmp
pop
mov
idivb
push
push
test
sbb
xlat
lea
push
fadds
sbb
push
mov
popf
add
inc
cmpsl
adc
pop
add
sub
icebp
cmp
mov
dec
jb
pop
ret
adc
out
repnz
add
js
inc
sbb
cmp
mov
bound
lods
cld
inc
and
inc
push
mov
mov
push
lcall
test
decb
mov
repnz
sti
cmp
adc
push
leave
popa
pop
lea
sbb
jno
fcmovne
inc
pop
add
push
adc
ret
push
mov
push
inc
lods
stos
scas
test
add
fs
or
xlat
rcrb
out
jp
neg
cmp
sbb
xchg
pop
rcrl
daa
mov
push
in
dec
aaa
and
mov
jne
mov
xchg
bound
inc
loope
dec
icebp
or
call
aam
xor
out
or
ljmp
or
adc
jmp
push
test
pop
xor
les
mov
sti
stc
add
rcll
jb
dec
push
add
loopne
insl
shll
adc
and
lds
lds
subl
add
and
bound
xchg
aaa
jp
mov
sbb
xchg
decb
fucomp
unpcklps
add
aas
or
shrb
icebp
jbe
or
outsl
arpl
enter
pop
mov
or
testb
sahf
sub
test
or
push
movsl
add
unpcklps
xor
sbb
push
jbe
add
mov
pop
lods
sbb
push
sbb
add
mov
pusha
popf
sbb
xorb
aad
xor
and
inc
pop
and
pop
mov
mov
and
cli
in
rolb
test
adc
add
cmp
out
push
test
xor
mov
pop
cwtl
mov
push
mov
mov
or
repz
add
xor
mov
xchg
fsubl
push
pop
and
jmp
xor
push
sub
add
mov
sub
out
inc
adc
add
lds
in
pop
dec
adc
cmp
jb
or
lock
pop
ds
arpl
ficomps
adc
orl
and
adc
push
inc
scas
xor
and
inc
push
test
andb
jg
pop
push
pusha
xchg
sbb
adc
xchg
pusha
lret
outsl
sbb
adc
sub
mov
pusha
jne
xchg
sbb
pop
fstpl
repz
mov
and
jle
lock
sarl
add
pop
inc
lods
mov
mov
in
push
mov
rcrb
mov
lock
inc
pop
mov
test
das
adc
sbb
mov
ds
clc
cmp
jmp
mov
fld
lods
mov
add
xor
popf
sarb
fcoms
push
add
ljmp
cmpsb
into
xchg
mov
mov
icebp
or
orb
push
push
add
ret
ljmp
cmpsb
sbb
repnz
push
or
test
pop
push
pusha
enter
fwait
push
mov
call
lret
push
call
adc
add
sub
cmpsl
stos
mov
or
adc
add
push
mov
pop
fistpl
cwtl
jmp
sbb
add
mov
xor
push
lret
icebp
movaps
arpl
inc
add
add
loop
fiaddl
jmp
adc
icebp
or
imul
cmp
mov
xlat
ds
xor
lock
pop
pop
adc
sub
push
mov
xor
lea
adc
pusha
push
push
add
mov
mov
ss
mov
sbb
push
in
addl
push
pop
push
mov
inc
push
dec
pop
icebp
test
stos
repnz
gs
out
subb
adc
out
pop
fisttpl
push
xchg
orl
mov
inc
or
fidivrl
pop
add
testl
shlb
xchg
or
and
adc
mov
xchg
sub
inc
aam
mov
adc
call
inc
lods
pusha
pop
mov
mov
mov
mov
popa
push
mov
imul
pop
xchg
movsb
mov
and
push
and
adcb
push
in
fstpt
adc
ljmp
or
xchg
cli
stos
xchg
dec
insb
sbb
or
shll
inc
aad
andnps
inc
cltd
and
cmpsl
mov
xchg
jns
add
push
push
sbb
adc
loop
add
xchg
mov
and
adc
push
repnz
cmpb
int3
es
inc
faddl
xchg
inc
roll
enter
cmp
lahf
addb
and
dec
inc
adc
cmp
jo
je
aas
pop
push
es
push
sbb
adc
lock
push
mov
dec
adc
out
push
dec
shlb
jo
imul
pop
adc
test
sub
jae
and
adc
cmp
sbb
lret
xchg
or
push
push
in
shrl
shl
mov
aad
push
cwtl
sbb
or
subl
cli
mov
push
rcrb
add
inc
sbb
jo
and
add
icebp
inc
cmp
mov
les
push
push
inc
add
push
test
or
lock
and
nop
push
xor
fcoml
test
push
push
adc
fstl
and
pop
leave
mov
rcrl
adcb
test
push
xor
addb
or
fiaddl
stos
test
xor
jmp
push
decl
rorb
fdivrl
mov
mov
mov
js
pop
push
cmp
xchg
ret
or
or
enter
fbld
ficomps
push
push
loopne
mov
jle
inc
push
inc
push
jmp
jge
xor
xor
push
inc
loop
nop
add
sbb
sbb
add
cmp
pop
mov
mov
add
loope
dec
scas
ficoml
out
jbe
add
inc
push
push
or
aaa
dec
imul
adc
cmp
pop
shrl
inc
rorl
mov
stos
pop
pop
cli
pop
stos
and
push
and
adc
jmp
rcrl
mov
dec
je
aas
dec
jl
adc
mov
cld
nop
and
loopne
jne
adc
lret
orl
pop
call
js
test
sbb
insl
jle
add
pop
xchg
inc
out
add
dec
add
jb
in
in
jecxz
or
add
inc
inc
or
shlb
mov
mov
add
push
std
cwtl
lods
push
sbb
mov
push
imul
imulb
push
sub
das
or
loope
xor
pop
adc
mov
icebp
mov
in
and
adc
add
xchg
ds
and
pop
lcall
rcl
xchg
ja
mov
or
inc
mov
cwtl
or
sub
lea
aad
and
daa
add
jecxz
xor
and
xor
mov
sbb
push
add
nop
adc
ret
mov
push
xchg
cld
cwtl
dec
daa
or
pushl
cli
add
push
aaa
stos
or
add
mov
fcompl
push
dec
ljmp
xor
sahf
pop
inc
insl
movsb
clc
pop
or
mov
jl
push
add
sub
and
push
test
fnsave
sbb
andb
or
lds
popa
adc
pop
push
scas
imul
push
xor
inc
add
or
and
inc
adc
push
dec
inc
inc
or
rcrb
fstpl
popa
push
mov
pop
xor
mov
inc
mov
dec
jo
pop
mov
cmpb
cmpsb
rorb
jne
add
or
rcrb
out
outsb
popa
clc
popa
dec
fcom
jg
cmpsb
inc
jno
mov
call
pop
es
add
ret
pusha
stos
push
shrl
adc
mov
andb
jae
inc
push
mov
sbb
cld
enter
push
lds
xor
add
jle
les
xorl
pop
mov
test
mov
leave
inc
push
mov
adc
add
ret
clc
lret
or
sbb
fcomip
mov
inc
es
repz
cmp
mov
push
mov
push
inc
rcrl
inc
xacquire
dec
hlt
addl
ret
mov
cwtl
sub
cmpsb
roll
dec
push
lcall
and
cmp
and
inc
test
push
movsb
mov
push
int3
sbb
adc
stos
pop
movsl
pop
cs
add
or
dec
ror
or
push
subl
jle
adc
enter
mov
aad
xchg
shll
sbb
cmp
enterw
cmp
sbb
add
adcb
sub
shll
push
into
adc
mov
inc
stc
xor
add
stos
outsb
mov
pop
xor
int
les
je
or
inc
or
adc
or
es
or
sbb
xchg
ret
or
push
lcall
lret
in
test
fldcw
ror
push
push
mov
pop
adc
add
push
jo
imulb
pop
shll
fdivrs
orl
add
cmc
jp
sub
in
xchg
insb
cmp
push
inc
xchg
mov
nop
sub
nop
bound
insb
cmp
jae
sub
or
cmp
je
add
test
adc
sub
in
add
lea
and
pop
lock
xchg
xorl
inc
push
lahf
jp
jb
jo
sbb
dec
dec
std
in
add
sbb
mov
or
clc
adc
and
add
add
stc
add
call
pushf
leave
push
jp
aad
sub
mov
add
clc
cld
notl
xchg
push
gs
daa
stos
clc
or
arpl
repnz
xchg
ds
pop
xchg
push
adc
or
rcl
popa
sub
sub
out
mov
add
jp
push
push
mov
ret
fidivl
inc
pop
and
pop
adc
int3
cmp
sbb
movsl
hlt
sbb
add
mov
pop
test
push
enter
and
rcr
push
clc
or
sbb
xor
mov
enter
push
push
add
jae
das
mov
leave
push
add
test
xchg
add
inc
add
gs
rorl
popa
lods
sub
mov
out
mov
notl
lds
lods
inc
sbb
add
push
cld
hlt
push
lret
adc
push
inc
cmp
jns
xor
adc
insl
int
or
mov
push
sub
inc
or
dec
mov
add
mov
scas
stc
cmp
sar
mov
mov
push
sbb
bnd
or
add
je
add
add
sbb
inc
add
mov
mov
sbb
ret
xor
dec
mov
jmp
xor
jmp
or
adc
xor
xor
cmp
dec
mov
xchg
mov
addb
movsb
and
call
and
cmp
push
gs
inc
roll
push
sbbl
popa
adc
add
jae
loopne
lock
mov
push
cs
daa
pop
or
push
mov
stos
test
lret
cmp
jns
or
shlb
push
lahf
add
mov
mov
out
ljmp
ljmp
push
cwtl
add
scas
or
arpl
add
enter
popa
ljmp
mov
pop
mov
mov
xchg
dec
clc
jp
inc
or
pop
test
sti
adc
push
xor
cmp
sbb
in
bound
cwtl
sub
mov
ret
mov
dec
scas
ljmp
sbbb
jo
xchg
dec
sub
add
dec
sar
add
sbb
sub
sbb
and
and
mov
inc
scas
xchg
mov
or
roll
mov
loope
loopne
stc
mov
pop
or
in
xor
rorb
xor
add
cs
mov
add
call
and
std
scas
push
adc
test
adc
adc
adc
or
xchg
popf
mov
fadd
movsb
sub
add
add
and
adc
push
jno
dec
adc
cmpsb
pop
and
test
cmp
lods
fwait
or
push
aaa
push
or
jo
xchg
adc
or
push
xchg
ds
aas
sub
dec
push
js
call
xchg
sarb
call
or
push
xchg
and
or
lret
loopne
mov
scas
or
dec
sub
into
jge
pop
out
fmuls
inc
add
fildl
fs
scas
sbb
mov
lock
lret
add
mov
add
or
cld
xchg
and
add
mov
int3
inc
aam
stos
leave
xor
aas
out
dec
and
sub
adc
sub
push
cmp
adc
mov
xor
xor
es
inc
inc
nop
fdivs
add
xor
or
cmp
adc
orb
orb
inc
dec
sub
scas
pop
jnp
and
push
sbb
pusha
push
add
mov
mov
lods
sub
repz
mov
lds
fs
cmpsb
push
inc
subb
out
jmp
pop
push
pop
xchg
das
cmovnp
rcr
jl
push
sub
fisubl
adc
leave
repz
or
int
push
aaa
ret
add
dec
call
es
adc
mov
int3
mov
shlb
adcb
sbb
jl
popa
xor
add
push
jne
cs
and
cmp
and
or
lds
inc
pop
scas
jb
shr
add
push
and
les
inc
jnp
mov
pop
mov
jnp
leave
and
pushf
test
cmp
out
movups
mov
and
pushf
aad
int3
pop
inc
sub
cmp
xchg
lret
xor
dec
std
sub
mov
pop
adc
push
lock
stos
mov
pop
adc
mov
xor
or
push
pop
data16
in
stos
push
and
ret
inc
stos
mov
pop
cmp
sub
sbb
inc
or
inc
nop
mov
in
mov
mov
push
push
pop
inc
cmp
out
adc
xor
push
or
or
xor
mov
mov
push
andb
js
mov
xchg
add
roll
out
adc
sbb
or
cmc
adc
cli
adc
xor
sbb
pop
or
xor
lea
and
add
test
ret
shll
sbb
xchg
les
xor
test
mov
or
sbb
push
cld
xchg
adc
xorb
or
sub
popa
enter
je
cmpsl
push
stos
adc
ljmp
ret
inc
or
sbb
jbe
jb
lret
fcoms
call
add
addb
les
sub
ret
push
sub
push
cld
call
aas
cli
pop
sbb
push
dec
xchg
push
adc
and
xor
add
sbb
xor
jne
sbb
enter
pop
add
loop
sbb
or
loope
mov
movsl
data16
sub
xchg
sahf
jmp
add
loope
lods
pop
cmp
xchg
mov
jo
jnp
and
push
add
jo
mov
es
xor
pop
je
movb
enter
jb
sbb
loopne
adc
pop
inc
or
adc
add
add
es
ret
pop
push
xchg
cmp
shrb
dec
add
push
sti
and
jne
adc
or
scas
je
jp
inc
mov
push
js
jne
jne
js
imul
jg
adc
arpl
dec
add
dec
inc
pop
push
add
outsb
leave
mov
ret
hlt
data16
cwtl
les
test
into
outsl
fdivrl
in
cwtl
movsb
push
or
lods
clc
jmp
mov
push
jnp
into
fildl
sub
inc
pushf
add
cmp
xor
ljmp
add
dec
outsl
pop
fwait
push
shl
pusha
pop
loop
adc
out
adc
das
dec
inc
xor
sub
xor
addb
inc
cmp
popf
daa
push
das
pop
fildl
jle
scas
pop
lea
xlat
rol
js
mov
dec
rclb
push
loopne
stos
lret
lcall
sbb
jb
jo
xchg
shr
inc
and
or
sar
mov
cmp
rcrb
aad
sub
js
push
mov
fnstsw
add
mov
daa
out
push
sub
sbb
addps
sbb
or
push
or
insl
mov
cmp
jl
cmpsl
and
pop
lret
push
pop
dec
sbb
sub
mov
call
lahf
nop
push
or
adc
dec
scas
test
mov
dec
mov
mov
imul
xchg
push
cmc
aad
rorb
jg
mov
test
add
mov
in
enter
sbb
js
sub
cli
or
push
arpl
sbb
xchg
and
pop
pushf
sub
into
cs
aam
mov
fcompl
adc
out
adc
add
stos
cmp
jnp
inc
adc
push
cmp
adc
scas
xchg
cmp
cmp
dec
add
shrl
cmp
xor
cmp
pop
sbb
leave
data16
mov
cltd
dec
pop
pop
call
stos
insb
in
jbe
sbb
iret
decb
rcl
mov
jb
mov
enter
lcall
aaa
repz
mov
in
xchg
int3
mov
rclb
pop
mov
rol
mov
push
sub
mov
jb
sbb
pop
dec
jl
adc
xor
rcrl
sar
sub
add
jp
xor
aad
mov
js
or
rcrl
sbb
push
sbb
ss
push
shr
dec
sbb
roll
jecxz
adc
push
adc
js
add
or
push
add
add
mov
rolb
xchg
or
inc
add
pop
int
push
and
into
and
add
add
enter
add
sbb
inc
adc
sbb
shll
or
clc
call
sbbb
mov
pushf
je
push
mov
movsb
ss
mov
sub
push
adc
push
stos
dec
lods
ret
add
clc
pop
shrb
ds
sbb
adc
jmp
or
shlb
iret
shlb
mov
xchg
lock
mov
or
js
nop
je
add
pop
push
jo
lret
sub
mov
fwait
jo
adc
push
or
or
ret
out
outsl
adc
call
or
mov
rorb
sub
mov
enter
loop
jbe
mov
rcrl
xor
xor
inc
stos
inc
mov
cld
roll
std
add
dec
push
and
inc
cmp
loope
xchg
dec
out
mov
or
pop
lret
inc
andb
mov
aam
sub
dec
sub
add
or
add
xchg
mov
mov
enter
loopne
addr16
push
xchg
push
shlb
mov
inc
sub
or
mov
add
orl
out
push
inc
add
rdmsr
cli
pushf
icebp
push
push
xchg
mov
outsb
xor
int
clc
add
and
push
xchg
fcoms
xor
or
roll
negb
scas
cmp
mov
lret
inc
add
sub
adc
adc
jns
aas
lcall
mov
pop
scas
or
sbb
pop
mov
or
mov
and
ret
sbb
add
sub
dec
cmc
mov
sar
sbb
cmp
adc
push
repnz
mov
push
jmp
xchg
add
fsubp
icebp
cmc
mov
or
xchg
test
xor
and
sub
jno
or
mov
rcrl
mov
cmp
pop
or
ja
cmp
in
add
mov
add
clc
push
xchg
mov
scas
stos
or
hlt
and
jle
adc
int3
mov
fs
int3
push
push
stos
js
in
stos
mov
sub
mov
mov
inc
or
fldcw
add
or
out
mov
push
test
imul
add
daa
push
hlt
das
dec
lods
xor
mov
leave
push
mov
pop
test
add
cwtl
adc
cmp
xchg
add
inc
push
jp
cmc
popa
cmp
push
fwait
sbb
orl
push
addr16
lock
dec
pusha
jo
mov
mov
lds
pop
cmpsl
or
inc
or
int
dec
jno
pop
mov
cmp
ss
xchg
push
xor
and
xor
fstpl
push
sub
js
and
adc
push
loop
pusha
or
mov
push
and
int
loopne
test
pusha
popf
adc
push
roll
push
jp
dec
adc
mov
popw
add
stos
imul
adc
and
aam
inc
mov
into
mov
cli
add
adc
and
dec
out
push
push
or
sbb
push
sbb
ror
shr
dec
adc
inc
push
push
sub
mov
add
adc
pop
test
adc
je
push
loope
sbb
leave
inc
jmp
rorl
std
mov
clc
push
mov
int
out
or
mov
test
in
add
into
sub
sub
xor
push
xchg
dec
jne
push
mov
push
pop
rcll
adc
xchg
xchg
movsb
jge
fsubs
mov
jg
push
cs
rcrl
xchg
hlt
sbb
mov
inc
and
push
adc
inc
inc
in
rorb
pop
jge
sbb
pop
leave
dec
mov
lcall
push
pop
es
mov
fcomps
add
das
lods
scas
pusha
lods
push
repz
or
and
in
fistpl
sub
nop
push
ss
xchg
fsubs
or
jl
shlb
sbb
inc
js
cmp
notb
mov
sub
push
mov
push
mov
cmpl
movsb
mov
es
test
add
sbb
les
mov
out
add
or
mov
adc
rclb
sub
push
mov
in
sub
orl
mov
imul
icebp
fiaddl
xor
jo
ss
add
ds
loopne
stos
inc
xchg
mov
rol
lret
addl
push
mov
call
enter
mov
sbb
enter
cli
xchg
sbb
lock
fldpi
inc
popa
or
push
cmpsb
cmpsb
push
shlb
mov
stc
notb
mov
sbb
push
out
add
push
sbb
sbb
sbb
add
sub
cmp
cmp
nop
subl
inc
aam
leave
mov
pop
add
pop
push
cmpsl
into
add
in
inc
sahf
test
sub
mov
fs
and
pop
repnz
lea
xchg
les
sar
mov
sub
clc
leave
stos
jae
push
dec
jb
add
and
rorb
add
push
xchg
dec
add
in
orb
sub
add
pop
and
sbb
mov
mov
inc
les
int
mov
movsl
test
stos
stc
jnp
mov
add
ret
push
sysenter
imul
adc
cmp
mov
sub
or
rcrl
push
jnp
adc
movb
mov
pusha
or
dec
scas
scas
test
mov
mov
popf
or
aad
notb
ljmp
adc
and
rolb
mov
sbb
sar
inc
je
add
sub
loope
stos
mov
xchg
pusha
add
rcl
out
mov
mov
xchg
orb
sub
sahf
fwait
xchg
inc
popf
sub
xor
rcr
or
cmp
ljmp
nop
test
outsl
adc
push
inc
add
int3
add
mov
or
cmp
xchg
rolb
fwait
xor
pop
pop
adc
or
push
addr16
pop
icebp
jno
mov
pop
into
roll
cmpsb
je
ss
test
xlat
cli
push
mov
in
dec
inc
rolb
mov
aam
ljmp
cmp
jo
jecxz
push
sub
mov
cmp
cmp
sbb
sti
in
fdiv
cmpl
xor
call
adc
nop
fprem
shll
mov
mov
in
insl
xchg
mov
dec
cld
repz
xchg
adc
pop
adc
loope
jl
sbb
icebp
popf
jb
sub
sub
sub
or
jno
or
ret
add
jle
leave
cmpsl
jmp
pop
lret
mov
adc
stos
adc
sub
mov
mov
enter
ja
das
pop
sbb
mov
add
lret
scas
std
dec
push
js
or
or
mov
add
mov
loopne
gs
or
mov
mov
sbb
add
pop
jne
gs
xchg
and
out
jae
sbb
sbb
outsb
pop
mov
movsb
push
leave
je
cwtl
mov
inc
cli
jp
adc
inc
xchg
pop
push
push
sbb
push
or
ror
adc
rorb
out
test
mov
test
jmp
lret
jb
lock
inc
dec
dec
jecxz
push
sbb
sbb
push
xchg
inc
jo
ljmp
insl
and
gs
ja
mov
je
das
enter
xchg
and
mov
cmp
bound
sbb
icebp
or
cmp
adc
test
stos
loop
pop
mov
dec
pop
sbbb
sbb
cmp
fistps
or
rcll
jge
inc
icebp
insb
lret
fadd
push
cwtl
dec
adc
pop
mov
sahf
sub
add
sbb
mov
or
inc
imul
add
mov
andl
js
je
rcrb
test
mul
mov
inc
bound
sahf
lcall
mov
adc
xor
insb
rclb
pop
inc
dec
fidivrl
sub
add
mov
fdiv
push
xor
enter
jl
or
test
adc
pop
add
int
pop
mov
pop
std
adc
mov
hlt
push
pop
add
bound
aaa
or
gs
or
mov
add
js
stos
xchg
mov
sti
push
ljmp
pusha
leave
sbb
mov
inc
mov
ret
idivb
or
xchg
mov
add
add
and
jg
push
push
sub
pop
push
mov
out
ds
cmpsb
adc
push
mov
test
mov
testb
inc
clc
mov
aaa
lock
or
out
pop
cmpsb
lret
or
push
mov
scas
xorb
and
test
and
add
inc
pop
dec
cmp
rolb
adc
aaa
sbb
add
rorl
cwtl
adc
sbb
stos
sbb
push
lcall
repnz
pop
sub
jg
push
jae
adc
xlat
or
or
adc
sbb
dec
and
pushf
shrb
xchg
add
call
imulb
cmpsl
pop
add
push
adc
cld
adc
push
popf
add
or
int
cmp
or
inc
fstpl
xchg
sub
int3
add
cltd
mov
stc
aam
ja
push
xchg
mov
mov
insl
add
ret
lcall
dec
pushf
push
cmp
push
aad
pop
mov
push
add
bound
add
or
mov
mov
adc
inc
mov
test
push
ret
dec
xor
lret
enter
push
les
jg
pop
icebp
inc
sar
mov
lods
pop
adc
mov
jp
xor
push
push
cmpsb
lcall
testb
mov
pop
add
gs
mov
inc
mov
sub
xor
cld
or
lds
push
sub
loopne
xlat
addb
test
mov
icebp
call
imulb
jo
xchg
es
add
add
jmp
mov
sbb
movsl
fstps
xor
loopne
mov
mov
adc
sarb
sbb
add
push
add
sub
shlb
lock
add
cmp
pop
push
adc
test
inc
out
push
jl
addb
mov
lret
add
int
and
and
xchg
or
inc
and
add
push
int
push
mov
sub
lock
sbb
cltd
and
test
add
insl
xchg
sub
adcb
fildl
push
or
xlat
lahf
xchg
mov
icebp
dec
cmp
push
fsubl
fisubl
push
imul
lret
sti
and
pop
mov
mov
xchg
and
cmpl
pop
sbb
jb
add
cmp
mov
add
cli
pop
js
hlt
and
xor
inc
and
shrb
inc
sbb
dec
roll
sbb
push
sbb
push
movb
ret
push
inc
pushf
add
pop
pusha
enter
aad
push
sbb
cmpb
adc
loope
jmp
push
mov
push
inc
sub
inc
dec
cld
daa
mov
xlat
push
imul
add
sbb
xchg
inc
inc
aam
outsl
rcrl
fld
lret
inc
mov
pop
push
xor
repz
pop
inc
add
hlt
mov
pop
inc
mov
test
pop
cmp
inc
push
in
sub
xchg
and
clc
lea
or
xacquire
add
or
sub
mov
add
sbb
js
arpl
es
shlb
sub
sub
lock
push
push
loopne
and
les
inc
bnd
je
scas
sub
cs
xchg
mov
pop
andl
mov
or
mov
and
fisubl
pop
inc
xchg
push
adc
xor
andb
arpl
add
xchg
push
mov
inc
push
add
pop
hlt
sub
je
add
out
cmp
push
xchg
or
orb
and
inc
inc
scas
mov
push
or
jb
and
mov
push
rolb
ljmp
scas
or
andb
push
divb
and
imul
icebp
ja
sub
push
sbb
mov
push
sbb
cs
repnz
jo
inc
sbbl
aas
add
jne
cs
mov
js
cmp
cmc
push
inc
or
pop
int3
add
test
cmp
pop
pop
clc
mov
inc
test
xor
leave
stos
call
pushl
xchg
imul
xor
cmp
push
mov
jbe
mulb
call
rorb
pushf
dec
and
orl
loope
xchg
or
shr
mov
test
pop
test
jne
es
popf
pop
add
imul
addr16
pop
sbb
stos
clc
pcmpgtd
jge
andb
shrl
lea
push
dec
cld
jg
sub
push
pop
mov
testb
je
mov
arpl
incb
jmp
push
pop
sbb
and
and
push
mov
jg
test
inc
in
mov
mov
mov
push
out
outsl
idivl
mov
pop
pop
ret
mov
jne
push
incl
scas
ljmp
pushl
or
mov
das
and
and
nop
and
mov
add
pop
repz
roll
push
add
clc
enter
adc
lods
add
fwait
nop
addr16
adc
or
push
or
fucomip
mov
pop
cmp
jne
sbb
push
or
sub
mov
mov
enter
fnstsw
les
mov
and
lea
mov
movb
jb
push
pushf
in
mov
in
pop
cltd
sbb
in
pop
jmp
fistpl
fwait
lea
pop
ret
subl
add
outsb
xor
mov
cs
mov
enter
movb
push
jo
push
sbb
xchg
pushl
or
arpl
pop
insb
outsl
mov
xchg
pop
or
pop
or
inc
sbb
pusha
or
pop
jmp
sub
adc
daa
loop
dec
push
int
and
or
or
cmp
enter
xchg
push
adc
ffreep
jge
lea
movsb
add
iret
enter
cld
and
cmp
jl
mov
js
jno
pop
jle
cmp
push
cli
or
inc
pop
push
pop
cmp
aas
xchg
dec
cmp
xchg
bnd
iret
test
cmp
popl
cld
sbb
push
cmp
imull
push
ror
js
pop
jmp
call
push
push
lods
cld
mov
or
jmp
mov
movb
pop
pop
leave
mov
push
fldln2
xchg
js
aam
cmp
push
xorl
dec
add
sbb
add
xor
out
adc
adc
or
xchg
xor
lds
clc
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
mov
outsl
clc
das
outsb
stos
mov
jmp
cmpb
or
mov
push
inc
or
ja
xor
add
jmp
mov
cmp
in
rorb
pop
mov
ret
je
cmp
je
xlat
mov
je
pop
lea
add
add
pop
fbstp
mov
cmp
mov
lods
sbb
mov
js
cmp
cmp
cmp
negb
cmpb
and
cmp
das
push
fistpl
or
pop
bound
std
aaa
jne
insl
pop
in
leave
pop
incl
mov
arpl
add
jne
mov
and
sub
cld
fcom
or
dec
clc
mov
sbb
mov
mov
push
add
push
push
push
lahf
gs
fldt
in
xchg
fmuls
xor
sbb
mov
xchg
daa
and
push
push
xor
mov
movsb
pushf
hlt
mov
cmp
es
idivb
jecxz
or
add
xchg
dec
jle
aaa
xor
pop
or
adc
fwait
inc
mov
inc
cmp
mov
pop
mov
and
test
add
xor
add
mov
inc
inc
or
fsubr
std
fsubr
into
or
andb
inc
inc
sbb
inc
push
dec
fidivs
inc
sbb
mov
push
inc
and
or
jne
xchg
mov
mov
jmpw
or
idivb
repz
sub
pop
imul
int3
enter
adc
add
rcl
cld
sti
mov
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
das
fsubrl
inc
cmp
or
jecxz
sub
push
or
sbb
xchg
ret
jg
mov
rorl
xchg
push
inc
mov
push
pop
inc
mov
jne
inc
cmpl
or
ss
minps
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
out
ret
fst
xchg
femms
mov
mov
mov
sti
pop
ret
dec
and
ret
mov
rcl
mov
sbb
shrb
sub
repz
jnp
aam
sub
or
pop
inc
inc
cmp
pop
ljmp
pop
addr16
movsl
insb
mov
mov
addl
jbe
frstor
push
jae
inc
inc
or
jne
push
insl
fdivl
repnz
clc
mov
ljmp
inc
and
leave
fcmovnu
xchg
mov
xor
adc
je
sbb
lcall
and
mov
ljmp
add
jbe
daa
inc
cmp
ret
jmp
arpl
movsl
test
je
pusha
mov
je
inc
cmp
dec
fisubrl
add
movl
fisttpll
stos
sti
jmp
mov
mov
cmp
dec
sbb
pop
dec
in
dec
adc
orb
xor
sbb
test
aaa
js
and
push
outsl
add
mov
data16
movb
mov
pop
sti
and
pop
jmp
and
test
ljmp
xchg
insb
or
cmp
mov
popf
xor
addb
clc
jl
pop
pop
pop
mov
dec
in
push
cmp
repz
mov
pusha
outsl
mov
dec
or
mov
and
fcomps
mov
mov
test
sbb
lock
mov
xor
jno
mov
test
xor
stos
pop
adc
push
and
pop
mov
push
loopne
or
sarl
add
or
in
add
inc
cmp
jl
pusha
mov
and
cmpl
lea
jne
ss
sti
negb
xchg
ret
dec
neg
sbb
xchg
in
jbe
popa
cmc
or
jp
push
jo
ret
or
in
orb
pop
mov
jne
or
add
subb
jl
dec
ret
js
jo
pop
test
outsb
adc
cs
fidivl
mov
je
in
pop
mov
popa
sub
sbb
pop
sbb
imul
mov
pop
pop
pushl
push
pop
inc
ss
adc
mov
fisubrl
xor
adc
data16
insb
sbb
mov
aas
and
es
push
pop
adc
cwtl
sub
outsl
pop
jge
add
add
push
incl
pop
fistl
dec
data16
sub
mov
test
nop
ret
int3
inc
xchg
sbb
ret
push
enter
iret
bound
into
mov
sub
or
xchg
dec
testl
call
or
adc
mov
push
push
inc
aam
add
sbb
jnp
or
mov
xor
mov
dec
xchg
jl
insl
xchg
je
adc
sub
call
mov
popl
pusha
jmp
jno
jmp
mov
sbb
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
scas
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
cmovne
pusha
clc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
ds
push
sbb
mov
repnz
outsb
fidivrs
mov
push
or
or
mov
mov
jmp
mov
jmp
pop
or
pop
push
xchg
jbe
or
sub
sbb
xor
dec
loope
loope
lods
sysexit
xor
icebp
sub
dec
les
sub
imul
cmc
fcomps
call
push
sub
xor
mov
mov
js
mov
jl
jae
shl
cmp
pop
es
insb
xchg
call
jo
adc
test
jne
push
jle
or
cld
test
xchg
lods
cmp
xor
pop
addr16
hlt
push
push
xchg
in
push
add
adc
test
push
jo
pop
aas
inc
pop
gs
je
cmp
sub
push
push
clc
or
push
and
add
clc
inc
call
ftst
in
push
pusha
dec
adc
push
or
sbb
shll
push
adc
and
rcl
pop
aaa
sub
movsl
push
sub
mov
push
imul
sbb
push
cmpsb
cmpsl
pop
mov
dec
nop
test
or
mulb
fmul
lods
test
sub
sub
cmp
imul
push
fisubs
adc
mov
jmp
scas
cmpl
pop
in
outsb
dec
mov
stos
add
sbb
mov
sbb
mov
repz
push
mov
lds
ret
mov
mov
sbb
jge
add
mov
inc
adc
pushf
xor
add
fwait
xchg
inc
sbb
xchg
cmp
out
push
pusha
cmp
mov
cmp
adc
push
fisttpll
push
std
push
ss
fistps
jo
sbb
inc
mov
mov
jl
cmp
mov
push
andl
fnstsw
call
pop
jbe
lea
dec
out
mov
xor
push
aaa
or
jbe
inc
decl
mov
or
xchg
mov
out
call
xor
fistpll
stos
lea
dec
je
mov
popf
rcll
lea
add
xchg
ja
fistpll
mov
inc
inc
adc
inc
inc
fsubrs
cmpb
aam
add
daa
or
fdivs
fs
cmpsl
lods
lods
mov
mov
mov
mov
movsl
pop
mov
inc
jns
jno
jle
lods
cmp
mov
jb
push
mov
sub
jmp
je
fidivs
pop
add
push
rcr
sbb
jo
inc
xchg
jno,pn
add
sbb
std
lock
adc
and
cmp
inc
sub
dec
cmp
push
mov
adc
xchg
cld
xchg
jne
aaa
mov
sub
add
iret
mov
mov
mov
mov
add
add
cmp
or
push
jno
inc
xor
mov
addr16
lods
in
pop
xchg
lea
clc
cwtl
adc
push
push
aas
sarb
decb
cmpsb
in
decl
inc
repnz
add
push
repz
sbb
sbb
sub
and
das
mov
add
test
and
rep
inc
inc
mov
pop
ret
cmpsb
fbstp
lock
cli
mov
int
test
lods
mov
mov
sbb
and
stos
mov
and
dec
fstl
lea
mov
test
push
inc
repz
sbb
adc
nop
shlb
lods
adc
add
pop
sbb
mov
add
add
test
fiaddl
sbb
mov
in
divb
mov
out
in
jb
jp
push
and
and
push
aaa
lods
icebp
dec
dec
mov
inc
imul
std
inc
in
pop
les
sbb
rol
rolb
mov
popf
jge
mov
push
sbb
push
fimull
pop
push
imul
sbb
add
pop
arpl
pop
pop
jmp
lea
loope
clc
push
test
inc
lret
cmp
adcb
pushl
mov
mov
test
pushl
push
pop
push
inc
xchg
je
dec
gs
and
lods
push
bnd
pop
add
int
pop
jmp
add
jmp
pusha
std
jmp
cld
pusha
or
sbb
loopne
jnp
inc
loop
mov
inc
out
jmp
mov
and
adc
cwtl
in
insl
aaa
pop
imul
xor
stc
daa
test
outsl
adc
push
cmp
mov
jmp
fisttpl
mov
adc
cmpsb
js
jle
cs
jl
loopne
push
insl
js
and
add
inc
jne
lret
cwtl
sahf
adcl
pop
or
xor
xor
jge
push
or
jb
fsubs
xor
orb
add
popa
test
ret
jge
pop
jle
outsl
xchg
int
inc
test
xor
inc
lds
rol
xchg
dec
mov
std
cld
or
mov
jne
dec
dec
aad
add
clc
jbe
sbb
jbe
clc
jb
mov
adc
and
pop
jb
rep
call
push
mov
and
test
loop
pop
insb
push
pusha
jne
loopne
enter
insb
pop
test
push
lea
ja
nop
adc
rorl
jae
sbb
add
pop
fsts
int3
lea
sub
gs
add
add
nop
and
inc
aas
mov
add
dec
cld
aaa
dec
roll
sub
inc
mov
mov
shll
in
lock
shll
clc
cld
and
xor
fnstsw
test
lock
pushf
mov
pop
pop
lds
popf
or
adc
test
mov
xor
lea
jl
cld
jg
test
mov
or
js
neg
cmp
add
ja
dec
stc
sub
jbe
cmp
sbb
ja
add
outsb
test
outsl
add
dec
push
adc
add
add
outsb
xchg
mov
sub
daa
and
sub
sub
xor
xlat
sub
aam
xor
dec
shl
in
hlt
and
xchg
sbb
xor
rcrl
sbb
dec
shll
or
sbb
add
and
dec
xlat
add
dec
mov
mov
cmovb
fadds
adc
push
pop
or
nop
jle
mov
fidivs
ljmp
adc
add
pusha
xor
mov
push
or
and
push
sub
js
push
jle
pop
sbb
push
jl
push
jmp
jmp
std
addb
xchg
ss
sbb
insb
mov
push
nop
and
mov
adcb
mov
sbb
mov
xchg
jbe
mov
mov
or
bound
cmp
and
sahf
xor
mov
call
mov
add
mov
or
jp
cld
push
shr
fwait
clc
mov
jp
imul
jge
movsl
movsl
inc
out
mov
inc
cltd
jge
dec
dec
mov
jl
or
test
or
jne
rcrl
or
ficompl
les
cmp
movsb
mov
xchg
jae
mov
sub
out
les
xlat
and
loopne
loope
decb
sub
cmp
and
loopne
out
int3
add
les
and
outsb
mov
push
adc
adc
clc
outsb
jnp
add
add
or
sar
mov
lods
aas
jnp
pop
das
mov
mov
in
mov
pop
adc
pop
cmp
cmpsb
jbe
fistpl
xchg
repz
sti
inc
cmp
fcmovnb
cli
jbe
cli
mov
push
and
add
ljmp
push
adc
mov
shlb
xchg
dec
push
xchg
in
fstpt
add
loop
inc
lods
adc
cmp
push
mov
lock
lods
mov
mov
push
add
or
add
movsl
jbe
inc
jg
paddd
mov
jae
scas
fs
push
mov
jmp
or
or
lea
sbb
sub
dec
loopne
cmp
sub
pop
add
popf
test
or
mov
sbb
push
stos
in
cli
dec
mov
xor
or
sub
lsl
push
dec
mov
push
call
pop
xor
add
or
push
cmp
andl
push
paddd
or
xchg
mov
andl
adc
mov
fimull
pushl
pop
adc
adc
loop
add
cmp
add
xchg
lret
cmp
in
push
lea
push
push
push
mov
incl
out
pop
and
xchg
xchg
xchg
mov
mov
inc
mov
push
or
movsb
sub
push
adc
sub
dec
pop
jbe
mov
shl
pop
push
xor
push
xchg
jecxz
fsubrl
shr
sub
mov
jmp
es
xor
shr
push
or
mov
ret
fdivrs
jae
mov
cmp
sub
pop
std
and
or
jne
clc
adc
lcall
out
pop
jne
mov
cmp
es
insl
jmp
sbb
and
push
jnp
xor
jns
outsb
or
aaa
jmp
es
sbb
out
push
jg
mov
dec
test
mov
pop
mov
inc
test
lcall
jmp
out
add
mov
push
cli
in
shl
lods
dec
sub
adcb
cmp
adc
shl
add
or
mov
jne
add
xchg
adc
sbb
cmpsb
ljmp
in
mov
and
or
je
mov
imul
dec
jbe
ffree
out
push
into
jne
pushw
fs
test
jl
shl
inc
jmp
pop
mov
testl
jnp
sbb
dec
cwtl
aas
jle
pop
aam
dec
xor
fwait
or
jge
xchg
lcall
rcrl
in
and
mov
decb
jne
fisttps
and
jmp
pop
sub
mov
ss
mov
test
or
mov
add
add
cltd
mov
test
inc
push
or
and
fs
movsl
fwait
gs
decb
jge
les
faddl
mov
bound
cmp
mov
or
das
sub
rclb
dec
mov
jnp
mov
loopne
movsb
mov
aaa
push
jb
mov
or
jne
mov
add
xor
lahf
add
push
and
jne
adc
popf
dec
cmp
imul
in
inc
mov
or
and
iret
lcall
xor
push
jb
nop
mov
push
xchg
push
xchg
mov
rorl
pushf
sarb
push
inc
xor
lods
inc
stos
xor
mov
je
push
loopne
add
and
push
sbb
fsubrp
sbb
lods
mov
loop
xor
lds
sti
mov
incl
xchg
test
cmp
push
or
fcmovnb
dec
loopne
mov
outsb
xor
aaa
imul
aad
add
andb
add
dec
push
sti
test
out
in
fstp
jns
mov
addb
dec
es
mov
daa
xorl
jo
sti
sub
lea
dec
repnz
hlt
lea
cld
lock
sti
in
inc
push
out
jmp
call
add
sub
jbe
xchg
add
scas
push
dec
or
clc
xchg
pop
mov
mov
inc
fs
inc
lea
sahf
jecxz
inc
mov
or
loop
push
sub
cmpsb
or
mov
sub
push
sub
stos
movl
add
iret
test
inc
movsb
push
sub
aas
repz
popa
inc
je
adc
pop
add
sub
scas
jge
dec
or
dec
mov
std
jp
call
cmp
add
mov
pop
sbb
jae
in
mov
dec
ror
add
push
xchg
jp
push
mov
jne
aam
push
stos
imull
push
and
jno
push
ja
jne
jmp
inc
inc
inc
inc
dec
je
pop
jnp
add
sub
jne
sub
aaa
sti
and
je
and
mov
ret
pop
je
cmp
xchg
shlb
ja
cmp
insb
sbb
cli
sub
testb
jb
and
push
push
add
mov
daa
lret
sub
or
cmp
sbb
mov
and
add
push
rclb
push
dec
pusha
fsubr
ja
pop
pop
jne
mov
test
pop
xchg
dec
sbb
pop
mov
in
jo
inc
push
push
push
mov
push
xor
lret
jo
jne
sbb
mov
and
mov
and
cli
push
out
aas
cmpsl
jo
adc
adc
movsl
loopne
push
jne
test
pop
and
int3
jo
sbb
pusha
mov
sbb
pop
fnstenv
jmp
inc
mov
mov
sbb
fstpt
push
andb
or
aaa
and
mov
jbe
fiaddl
pushf
ss
sbb
and
mov
sub
mov
mov
jnp
icebp
push
push
jmp
lock
es
pop
adc
push
dec
fdivrl
and
dec
in
adc
in
sbb
dec
sub
push
je
testb
je
ds
fidivl
mov
lods
cmp
jg
fidivl
dec
mov
addr16
xchg
into
cmpb
inc
mov
adc
xchg
xchg
mov
fmull
push
mov
je
push
fs
je
jbe
mov
add
jmp
mov
pop
in
xor
push
mov
lds
jno
movsl
mov
into
or
dec
or
sub
es
dec
fwait
pop
mov
pop
lret
sub
add
push
jb
dec
pusha
add
xchg
sbb
aaa
jle
lea
push
push
pop
push
push
movsl
mov
add
sbb
les
jb
mov
mov
inc
sub
add
cmp
xor
xor
push
insb
dec
repnz
fwait
or
xor
sbb
orb
arpl
cmp
mov
xor
pop
add
push
int3
sub
or
testb
loopne
xchg
pop
sbb
push
clc
xacquire
cmc
int3
mov
inc
mov
add
add
pop
sbb
mov
int3
add
pop
popf
je
sbb
push
jb
neg
cld
fldt
shll
add
stos
add
ja
roll
lret
mov
xlat
mov
cmp
and
inc
or
push
in
mov
or
mov
xchg
dec
test
out
xchg
nop
add
add
add
mov
das
add
jmp
cmpsb
adc
add
cld
add
or
mov
cmpsb
jnp
add
jo
in
pop
and
out
fldenv
mov
and
nop
or
or
enter
add
mov
in
mov
pop
lcall
mov
imul
loopne
idiv
or
or
add
cmp
lahf
push
cmp
das
lret
jb
sub
add
jae
inc
jno
mov
loope
in
push
insl
mov
add
shrb
fs
clc
hlt
fs
call
or
fmuls
inc
jbe
add
rolb
add
jne
je
insl
and
jb
jp
pop
mov
or
inc
fwait
xchg
pop
adc
add
dec
inc
fistpl
jle
inc
dec
dec
inc
adc
push
xor
cmp
sub
and
bound
and
imul
in
out
jge
gs
jo
daa
aaa
outsb
outsl
je
lods
outsb
add
addr16
and
insb
xchg
fldl
in
outsl
ja
cmp
outsl
outsb
aaa
ss
dec
and
fs
jo
jb
jbe
jb
jne
xor
jle
and
insb
sub
pop
fldt
pop
sub
pop
das
pop
push
pop
jbe
xlat
fsub
pop
xor
imull
fcmovnu
fdivl
pop
xor
pcmpgtb
arpl
outsb
lods
dec
push
cmp
andl
sbb
aaa
mov
jne
lods
je
mov
arpl
adc
outsb
lods
mov
add
imul
add
addr16
insl
and
movsl
mov
inc
das
xor
dec
imul
adc
sub
cs
cmp
addr16
jae
adc
xor
outsb
outsb
addr16
mov
add
out
outsl
or
cmp
push
imul
inc
sub
and
dec
imul
mov
push
inc
push
and
push
aam
ret
add
int
popa
in
and
outsb
mov
sbb
je
popa
xor
jbe
push
insl
cmp
adc
push
xchg
fs
jae
popa
addr16
outsl
js
popf
jae
sahf
sub
icebp
xor
cs
sbb
cmp
test
push
add
sahf
pop
inc
adc
push
stos
pop
and
add
addr16
ljmp
jno
add
bound
add
add
mov
xchg
add
movsb
sbb
sbb
nop
add
xchg
xchg
add
cmp
or
lret
xchg
ja
and
adc
and
cld
cmp
pop
add
and
repnz
and
mov
jns
adc
sbb
xchg
lock
xchg
sbb
js
sahf
cmp
dec
jns
jp
cld
and
adc
xchg
daa
adc
cmpsb
loopne
add
test
cmpsl
adc
sub
dec
dec
add
add
das
movsb
add
cmpb
cmpsb
fbld
repz
mov
or
incb
inc
mov
orl
inc
mov
iret
mov
jmp
call
push
add
add
pop
ficompl
fisubrl
xor
fcomp
loopne
test
mov
cmp
jle
add
mov
js
jne
sub
enter
adc
and
enter
rolb
add
test
in
addb
inc
adc
cmp
rcll
and
pop
add
cmp
loopne
rclb
js
insb
pop
stos
pop
add
sti
dec
outsl
fs
cmp
std
insb
gs
popa
outsb
fs
popa
mov
jo
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aaa
or
push
xor
adc
mov
xor
push
pop
negb
adc
jne
jb
outsb
and
outsb
push
push
cmp
jo
inc
inc
imul
mov
gs
popa
insl
imul
and
jns
jb
in
xchg
sub
addr16
push
push
imul
lock
outsl
dec
cmp
pop
pop
mov
push
inc
push
or
rclb
psubb
adc
pop
insb
ss
gs
aas
add
push
jo
fs
insb
or
in
mov
insb
jne
or
push
sbb
and
jnp
inc
ss
test
sahf
sbb
mov
gs
or
push
mov
iret
data16
out
sbb
push
je
dec
mov
imul
dec
jmp
mov
jbe
or
cltd
loope
pop
jae
je
outsb
arpl
dec
push
jbe
rcll
mov
jbe
or
pop
dec
inc
dec
or
xchg
push
gs
adcb
mov
inc
fs
dec
xchg
add
inc
and
mov
test
inc
or
lds
imul
push
add
mov
leave
or
fadds
pop
fcmovu
xor
inc
je
inc
add
add
cmpsl
add
xor
pop
mov
inc
fadd
adc
insb
or
push
xor
pop
mov
aam
lock
mov
popf
in
add
scas
cmp
insl
jecxz
decb
lahf
hlt
dec
jae
outsl
jg
lods
cmc
dec
gs
lock
pop
jae
outsb
arpl
jns
push
decl
xor
add
cmp
xor
add
lock
incl
add
dec
test
cmp
cmp
lock
test
filds
jl
push
cmp
iret
ss
lock
add
sti
pushl
add
and
inc
mov
js
xor
add
add
fdivrp
insl
inc
inc
fwait
mov
push
add
push
lock
add
pop
add
popl
mov
inc
lock
add
pushl
lock
incb
aas
jb
add
jo
insl
mov
sarb
xor
inc
pop
repz
in
pushl
add
add
add
pop
imul
test
lea
mov
aas
cmp
mov
mov
idivb
inc
lock
add
clc
add
mov
jbe
fcomi
pop
insl
lock
add
ds
push
cmp
cmp
in
incl
add
adc
fdivs
cmp
add
lock
fistps
jbe
mov
hlt
add
adc
push
clc
push
aaa
outsl
mov
test
cmp
push
pop
sbbb
in
add
out
outsl
inc
cwtl
test
or
in
push
popf
pop
mov
inc
xchg
or
pushl
xor
xor
add
dec
lock
outsl
das
cld
fists
lock
xchg
xor
adc
ss
fildl
sbb
add
and
insl
sub
add
insl
pop
jle
add
into
sub
sub
cmc
addb
outsl
fldt
xor
mov
mov
lock
mov
outsl
pop
aas
inc
shl
mov
or
mov
xchg
push
xor
sti
mov
mov
jb
add
lock
add
jg
divb
jl
dec
add
add
imul
xor
ret
std
les
jbe
ja
addr16
jns
push
sbb
mull
pushf
js
sbb
cmp
sbb
inc
push
xorl
add
dec
dec
sub
inc
add
xlat
js
dec
mov
inc
xor
stos
sbb
push
or
xor
or
mov
pop
adc
pop
or
or
push
push
push
test
cmovl
xor
incl
or
or
dec
inc
jecxz
xor
aas
push
adc
xor
pop
adc
imul
adc
push
adc
add
inc
or
adc
mov
pop
clc
sbb
adc
sbb
sbb
cld
movlps
or
pop
imul
inc
adc
or
adc
adc
sub
jmp
adc
sbb
or
adc
and
and
mov
pop
adc
mov
fnsave
sub
add
push
outsl
mov
adc
sbb
test
and
push
movups
nop
inc
cmp
ret
sbb
scas
out
fnsave
sbb
add
dec
push
add
or
pop
push
mov
daa
in
sub
jb
push
or
jecxz
xor
mov
or
push
push
sbb
adc
or
fimuls
pop
push
jno
inc
cmpsb
lock
add
adc
test
prefetcht1
or
int3
adc
or
daa
cmp
sbb
sbb
pop
mov
mov
sbb
pop
push
xor
clc
sbb
pop
adc
adc
lods
test
rcrl
lock
pop
lock
add
add
stos
call
or
or
and
adc
test
add
push
inc
out
jp
jg
add
dec
loopne
icebp
mov
adc
int3
imul
mov
add
bsr
repz
add
adc
sti
push
inc
subl
add
mov
insb
movsb
js
rolb
enter
jg
rolb
add
cmpsl
add
push
je,pn
push
testb
add
cmp
fimuls
push
popa
clts
mov
or
mov
ja
add
es
cld
or
push
lcall
add
out
jnp
repz
mov
sbb
data16
sar
fists
movsl
add
movsl
roll
add
pop
sub
add
addb
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
