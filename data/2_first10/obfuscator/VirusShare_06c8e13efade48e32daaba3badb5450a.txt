test
cmp
push
in
mov
xor
pop
mov
sahf
jns
mov
push
mov
cld
inc
push
popa
inc
inc
inc
xor
inc
int
xor
mov
mov
jns
mov
cltd
nop
mov
imul
xor
inc
sbb
imul
xor
mov
aad
stc
mov
inc
pop
pop
out
push
sbb
inc
test
mov
mov
sub
inc
inc
push
add
push
sub
inc
xchg
int3
mov
mov
imul
fdivs
mov
mov
insl
mov
mov
push
mov
cmp
int
xor
inc
jmp
test
enter
push
outsl
inc
inc
inc
xor
lods
enter
xor
stc
mov
dec
fdivs
mov
mov
mov
xor
mov
cld
inc
xor
mov
imul
add
in
mov
mov
mov
push
jbe
inc
inc
cmp
int
xor
inc
fdivs
cld
inc
jo
mov
mov
inc
inc
inc
mov
inc
mov
inc
mov
mov
mov
mov
inc
xor
subl
call
inc
mov
jp
jne
mov
mov
imul
push
js
inc
inc
xor
jns
inc
mov
and
adc
inc
out
push
push
inc
inc
inc
sarl
es
inc
inc
cmp
int
xor
shl
mov
lods
stc
mov
inc
inc
xor
mov
mov
scas
stc
mov
inc
inc
xor
mov
mov
stos
clc
mov
inc
inc
xor
mov
mov
imul
inc
inc
inc
out
xor
popf
mov
mov
mov
scas
stc
mov
inc
inc
mov
out
loop
jae
iret
mov
xor
mov
xor
mov
mov
mov
jg
pushl
hlt
mov
outsl
test
mov
mov
jns
xchg
inc
test
mov
test
mov
mov
fcom
outsb
test
mov
stc
push
notl
xor
mov
xor
lock
jle
xor
xor
sarb
mov
mov
mov
mov
mov
mov
jle
mov
mov
mov
in
inc
mov
jmp
xor
inc
shrb
mov
mov
mov
mov
fnstenv
dec
nop
inc
shlb
shrb
mov
mov
mov
rorb
mov
mov
mov
sbb
mov
mov
mov
xor
jns
sti
mov
lock
inc
inc
inc
xor
mov
cmpxchg
jns
jg
xchg
outsl
test
sub
rcrl
sbb
popf
sbb
jae
xchg
les
jp
sbb
popf
cli
inc
adcl
sbb
xchg
adc
sbb
xchg
fistpll
lock
push
xchg
xchg
enter
xchg
xchg
xchg
js
xchg
xchg
xchg
xchg
js
outsl
xchg
xchg
xchg
js
xchg
xchg
xchg
les
je
jge
icebp
mov
sbb
cltd
adc
in
sbb
popf
xchg
xchg
xchg
cli
inc
sbbl
sbb
popf
jns
outsb
outsb
outsb
nop
push
jp
cli
inc
sbbl
outsb
nop
nop
xchg
xchg
in
sti
cltd
jns
outsb
outsb
outsb
sbb
insl
shrl
jns
outsb
outsb
outsb
lock
insl
pop
push
xchg
xchg
rclb
out
jp
mov
push
ret
pop
mov
sbb
in
cltd
sbb
popf
sbb
subl
popf
xchg
mov
les
je
jge
icebp
mov
sbb
cltd
sahf
adcl
xchg
in
xchg
shrl
imul
xchg
xchg
in
sbb
in
fcompl
jmp
jae
nop
inc
sbb
insl
lock
insl
pop
push
cltd
xchg
dec
mov
xchg
xchg
les
je
jge
icebp
sbb
popf
sbb
cmp
cltd
sbb
popf
xchg
xchg
xchg
sbb
cltd
adc
in
sbb
popf
push
jno
xchg
aam
sbb
sbb
popf
cli
inc
adcl
sbb
xchg
les
xchg
xchg
sbb
les
xchg
xchg
sbb
cltd
adc
in
sbb
popf
push
jno
xchg
aam
sbb
sbb
popf
cli
inc
adcl
sbb
xchg
sar
inc
adcl
sbb
xchg
sbb
cltd
cli
inc
sbbl
sbb
nop
popf
xchg
xchg
xchg
icebp
sbb
popa
sbb
adcl
sbb
adcl
sbb
xchg
sbb
xchg
sbb
sbb
in
sub
xor
xchg
inc
dec
mov
sbb
outsb
outsb
les
je
jge
icebp
stc
pop
adc
outsb
outsb
outsb
adc
sahf
adc
sbb
insl
sbb
das
popf
xchg
xchg
xchg
push
popf
nop
xchg
xchg
xchg
mov
push
xchg
xchg
xchg
xchg
xchg
push
xchg
outsb
outsb
outsb
outsb
adc
push
popf
xchg
nop
xchg
xchg
mov
cltd
sbb
push
adcl
xchg
sbb
cltd
sbb
pop
cltd
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sub
test
push
xchg
xchg
xchg
xchg
xchg
sub
test
push
xchg
nop
xchg
xchg
xchg
sub
inc
fistpl
xchg
push
xchg
jae
lock
insl
pop
push
insl
lock
outsl
outsb
outsb
xchg
outsb
mov
mov
mov
je
sti
nop
outsb
in
jns
outsb
outsb
outsb
adc
in
sbb
sbb
in
sbb
popf
adc
in
xchg
in
cltd
mov
outsb
outsb
outsb
adc
in
sbb
xchg
in
sbb
adcl
sbb
sahf
sub
loop
mov
outsb
xchg
xchg
jp
xchg
aam
adc
ret
rol
add
outsb
lret
sbb
xchg
adc
jp
iret
adc
jp
lock
push
xchg
xchg
lret
hlt
lahf
xor
sbb
xchg
icebp
mov
sahf
daa
xchg
pop
inc
rcll
xchg
in
sbb
test
inc
rcll
cli
inc
rcll
rcll
inc
rcll
rcll
mov
sahf
daa
test
inc
rcll
push
xchg
pop
inc
rcll
xchg
mov
insl
lock
insl
pop
push
stc
push
outsb
mov
mov
adc
jp
les
je
jge
icebp
mov
sbb
sbbl
les
les
rcll
nop
push
sbb
mov
push
xchg
sbb
lea
nop
sub
push
xchg
sbb
xchg
sbb
push
adc
sbb
nop
jae
jns
xchg
xchg
xchg
leave
adc
sbb
xchg
sbb
push
adc
sbb
nop
outsb
in
outsb
les
xchg
outsb
les
adc
popf
jns
outsb
outsb
outsb
sahf
xchg
imul
xchg
xchg
in
sbb
lods
nop
arpl
adc
sbb
mov
insl
lock
insl
adc
in
sbb
cltd
pop
adc
mov
js
outsb
outsb
outsb
pop
push
mov
xchg
xchg
les
je
jge
icebp
sbb
cltd
adc
sahf
adc
sbb
cltd
xchg
xchg
xchg
sbb
imul
rcrl
aam
rcrl
pop
cltd
xchg
xchg
xchg
cli
in
imul
les
sbb
xchg
sbb
adc
mov
jmp
pop
xchg
and
rcrl
push
aaa
aad
jmp
pop
xchg
das
pop
sarb
jmp
pop
xchg
das
pop
nop
pop
pop
nop
fistpll
jmp
pop
xchg
fistpl
pop
pop
rclb
xchg
and
rcrl
pop
jmp
pop
xchg
sub
mov
adc
fbstp
sbb
push
subb
pop
xchg
int
push
fdivl
loop
adc
in
xor
mov
xor
mov
out
cld
add
mov
xchg
sarb
test
ficompl
xchg
pop
fwait
mov
hlt
dec
popa
mov
pop
sub
or
cmp
popa
xchg
mov
pusha
push
das
or
inc
mov
test
pop
dec
xor
lcall
cmp
or
cmp
or
pusha
or
sbb
jg
ljmp
fbstp
xor
sbb
imul
pusha
das
outsb
pusha
push
addr16
push
lods
cs
pop
je
shrb
int3
xchg
xor
iretw
fcomps
xchg
or
mov
push
stos
sub
in
adc
popf
call
outsb
xlat
push
sub
adc
and
xchg
outsb
movsl
pop
adc
jne
icebp
fisttpl
and
cld
sbb
dec
cmp
out
jle
mov
in
das
stos
arpl
mov
add
pop
aam
stos
and
incl
aam
xor
mov
adc
in
js
jecxz
mov
xchg
mov
xchg
dec
nop
push
loope
add
je
scas
cmp
push
xchg
scas
movsb
lds
cli
sub
rcrb
addr16
xchg
push
in
dec
fisubl
cs
rcrb
jae
xchg
rorb
mov
pop
fdivs
mov
push
rorb
pop
cmp
push
pop
pop
pop
movsb
jle
imul
cmp
push
push
ficomps
xor
pop
pop
or
mov
movsb
movsb
movsb
cmp
mov
mov
sbb
pop
push
sarb
push
rcrb
cmpsl
loop
pop
pop
pop
shrb
push
out
push
imull
rcrl
push
push
push
in
pop
pushw
add
cs
pop
or
in
pop
or
pop
pop
adc
pop
rcrb
das
shrb
outsl
or
shrb
cmpsl
dec
cltd
cmpsl
or
sub
cmpsl
shrb
test
shlb
dec
pop
es
rclb
dec
or
movsb
movsb
fcomps
shlb
cmpsl
shrb
push
loop
pop
pop
pop
test
cmp
push
cmpsl
xchg
cltd
pop
pop
fildl
add
add
and
add
add
add
jmp
add
in
mov
mov
mov
mov
imul
xor
popa
leave
ret
mov
mov
add
add
flds
push
add
add
add
movsb
out
iret
xchg
xlat
dec
ret
push
add
jae
pop
mov
pop
jmp
add
clc
add
add
cmp
add
jne
add
add
add
and
cmp
je
jmp
pusha
mov
mov
mov
xor
mov
xchg
mov
imul
add
push
call
sbb
loop
mov
mov
push
xor
push
push
push
xor
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
mov
push
call
xor
sub
xor
mov
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
push
sub
cmp
mov
mov
xor
mov
mov
cmp
cmp
xor
mov
add
sti
cmp
lds
cmp
cmp
cmp
cmp
xor
cmp
mov
jns
hlt
push
cmp
cmp
cmp
mov
push
xchg
cs
pop
cwtl
or
or
dec
pop
mov
cmc
pop
fildll
mov
inc
push
leave
in
lds
dec
lock
inc
fsubl
dec
xchg
and
push
popa
repz
pop
and
pop
xor
outsl
fdivrl
lcall
stos
cmp
stos
lahf
ret
lock
xchg
ja
call
mov
icebp
lea
push
jb
lea
lea
lea
pop
push
rcrb
je
mov
jne
jl
dec
in
xchg
aas
loope
lret
lea
fwait
adc
cltd
out
test
sbb
jg
mov
test
adc
shl
orb
ret
push
sahf
xor
lea
test
ret
add
lea
pop
adc
aam
gs
xchg
cltd
cmovge
sub
arpl
pushf
add
clc
inc
and
clc
arpl
mov
mov
push
adc
lods
xor
lahf
insl
jge
adc
mov
mov
or
scas
lret
adc
push
int
add
sub
jnp
cs
pop
cmc
hlt
sub
adc
cmp
mov
lea
xor
lea
lea
lea
notb
inc
add
stc
pop
pushl
cld
cli
dec
js
jne
dec
push
aas
mov
icebp
or
aas
xor
insb
or
pop
xchg
xchg
lock
mov
pop
or
push
and
dec
dec
sahf
gs
mov
popa
mov
ret
fidivrl
or
jl
add
pop
jae
ficompl
xor
and
inc
cs
xchg
roll
pop
jge
repnz
inc
mov
push
stos
in
dec
lock
inc
pop
xlat
jge
fucomip
sbb
or
sbb
adc
xor
aad
loop
cs
sahf
and
aad
jle
sub
xchg
stc
or
lods
push
jno
sti
or
repnz
je
pop
repnz
inc
cmp
xchg
pop
imul
dec
adc
mov
jge
movsl
mov
hlt
cmc
lret
hlt
repnz
pop
xchg
ret
jmp
icebp
xchg
sbb
out
nop
sub
cli
adc
sbbl
inc
dec
xor
cmp
add
adc
cmp
mov
or
call
mov
mov
popa
test
and
das
imul
pop
jmp
enter
movsl
mov
xchg
mull
negb
ss
add
clc
push
sbb
repnz
imul
repz
push
das
inc
inc
pop
xchg
mov
mov
popl
icebp
pop
push
and
pop
lret
loopne
cmp
and
and
mov
cmp
cli
sub
mov
lret
jecxz
pop
cmp
fdivl
adc
pop
out
sub
js
cmpsl
jb
mov
iret
rcrl
pop
or
xchg
aam
outsb
iret
mov
pop
dec
jl
or
and
stos
ss
push
jb
pusha
jb
out
xchg
pop
sub
jb
jmp
add
add
lahf
popf
repz
cmp
in
lret
xchg
orl
es
sbb
cmp
cld
push
popa
mov
adc
add
and
mov
lahf
fcomp
lret
cwtl
popa
clc
xchg
sub
and
pop
xchg
pop
xor
lret
jg
cmpsb
add
cwtl
push
stc
fmuls
xchg
pop
and
iret
rcrl
leave
idivl
cmc
adc
divb
test
loope
clc
mov
pop
adc
sbb
jmp
pop
and
js
call
sub
mov
je
xor
push
adc
jae
xchg
pop
sub
pusha
in
lods
pop
cld
cltd
push
jle
jge
pusha
pop
xor
and
inc
idivb
xor
mov
outsb
sub
and
and
dec
add
and
cwtl
and
ss
pop
scas
sub
lods
out
rorl
mov
roll
outsl
xchg
push
loopne
mov
dec
mov
lods
add
sbb
cmp
les
lods
sahf
in
xlat
lea
sbb
test
pop
fistpll
sub
mov
inc
cmpsb
lret
das
sbb
int
out
pushf
test
mov
imul
sub
sbb
leave
mov
les
pop
rorb
push
test
cld
aas
jb
test
or
mov
sub
jp
sti
mov
insb
adc
mov
dec
pop
data16
or
mov
daa
xchg
adc
and
adc
add
js
xchg
dec
add
mov
roll
xchg
nop
xor
mov
and
pop
push
inc
and
aad
aas
jmp
aam
rcl
mov
lahf
scas
out
jge
lret
shlb
inc
dec
dec
mov
ljmp
dec
and
sarl
sbb
xchg
cmpsl
cmp
int
rorl
adc
out
xor
jle
lea
jmp
std
enter
push
or
insb
cmp
mov
data16
add
stc
int
enter
int3
push
mov
cmpsb
and
add
mov
sbb
push
pop
gs
dec
mov
es
adc
iret
aaa
imul
adc
cmpsl
data16
imul
jg
lcall
pop
lods
mov
mov
push
icebp
cmp
fldl2e
cmp
cmp
push
in
ret
cmp
das
jl
fistps
das
gs
jge
in
add
or
nop
or
xor
test
insb
pop
aad
cmp
int
or
xchg
cwtl
mov
or
mov
mov
mov
xchg
xlat
das
pop
pop
jg
fwait
xchg
in
add
fdivrl
push
addr16
lods
subb
lods
scas
mov
mov
jecxz
dec
mov
icebp
into
sub
movsl
into
or
cmpsb
lcall
xlat
dec
mov
add
and
sbb
fistps
fs
pop
clc
popf
sbb
adc
pop
test
jg
add
dec
out
sbb
pop
inc
scas
dec
fucomip
add
fiaddl
xorb
jae
test
not
mov
decl
fsubs
mov
sub
test
jnp
mov
popa
mov
add
div
push
add
cmpsl
xor
hlt
lds
inc
lds
fsubp
imul
or
shlb
push
pop
loop
add
jo
ljmp
inc
mov
push
fstpt
mov
adcl
fcomps
dec
cmp
xor
xor
pop
pop
jp
mov
lds
jnp
fidivrs
dec
arpl
pop
fs
call
call
in
fcmovnu
hlt
jo
mov
or
cmc
or
lahf
jno
lods
dec
aad
cmp
shlb
leave
sub
ja
push
and
fdivrs
or
mov
and
push
adc
rclb
inc
hlt
sub
mov
jmp
push
mov
xor
jp
inc
push
lcall
ja,pn
decl
sbb
sti
cli
hlt
mov
fcmovb
movsl
rcrb
sar
cmpsl
call
and
pop
xchg
add
or
dec
jecxz
sbb
or
cmp
daa
jp
addr16
dec
in
jb
call
pop
sub
data16
fdivp
add
imul
xchg
xor
dec
adc
loop
inc
inc
and
cmp
xor
inc
push
scas
ja
in
push
mov
outsl
in
out
sub
xchg
iret
inc
lret
leave
insb
ror
dec
jae
add
jae
into
cli
jb
jmp
jae
aaa
mov
stos
scas
xchg
sub
mov
dec
dec
clc
aam
xchg
scas
ja
inc
test
xlat
incl
rcrb
sbb
jge
cltd
aas
into
jo
das
cmp
push
sti
xor
pop
es
adc
cmpsb
movb
mov
addr16
in
mov
jl
lcall
ja
aas
int3
inc
imulb
mov
cmp
inc
jo
add
pop
mov
and
sub
push
into
out
subb
sub
pop
sbb
and
test
pushf
pop
stc
mov
xchg
xchg
and
js
es
cltd
test
push
movsb
mov
leave
sub
loopne
xor
jne
xchg
add
cmp
sub
and
mov
out
cmp
cs
fisubrs
adc
inc
sbb
sarb
xchg
mov
stos
mov
sbb
insb
mov
out
call
add
adcl
mov
inc
sbb
cli
bt
sets
rorl
fdiv
adc
cmpsl
jl
mov
and
mov
mov
dec
xchg
add
jecxz
adc
pushf
daa
jle
xlat
adc
sar
adc
rorb
sbb
sub
enter
sub
insb
inc
ss
cmp
inc
clc
add
add
xchg
inc
xchg
pop
jmp
stc
lret
mov
lahf
hlt
jnp
dec
leave
adc
inc
cmp
sub
repz
cmp
inc
hlt
jg
stc
pop
jg
loop
inc
inc
pop
sbb
fwait
mov
push
push
mov
imul
pop
sbb
cld
pop
mov
pop
popf
cs
movsl
ror
dec
mov
xor
shl
leave
std
sti
in
mov
add
das
ror
aas
mov
ja
push
sub
dec
lcall
stc
popf
scas
mov
arpl
xchg
loop
xchg
shlb
popf
bound
into
sub
push
sub
mov
dec
enterw
in
in
subl
fsubrl
push
popf
mov
int
sbb
xchg
call
adc
cmp
data16
stos
lret
cmp
insl
outsl
mov
repnz
mov
lods
lods
mov
mov
sti
mov
sub
mov
dec
inc
mov
inc
scas
add
sahf
push
mov
into
lahf
mov
loope
shrl
push
insb
jb
ret
lea
add
xor
outsl
in
and
icebp
jno
sbb
cli
test
xchg
test
fstl
cs
jns
inc
dec
cltd
fcomip
test
or
popa
pop
push
idivb
and
dec
mov
loopne
fidivrs
test
xor
adc
idivl
std
idiv
mov
aam
sub
lods
imulb
iret
add
nop
push
outsb
lock
xor
mov
imul
jns
sbb
and
fwait
mov
das
sbb
push
dec
or
inc
dec
adc
mov
loope
mov
jae
mov
ret
out
add
pusha
test
mov
lea
outsb
push
in
in
mov
cmp
icebp
jge
push
shl
scas
dec
xchg
insl
sub
adc
pop
imul
dec
sub
push
hlt
ds
je
decl
add
mov
mov
or
cli
popa
mov
jnp
enter
out
fucomip
adc
push
add
cmc
pop
and
jne
je
pop
std
jno
test
or
int3
ret
gs
inc
add
jae
mov
add
pop
mov
test
loop
test
ljmp
loopne
out
aad
ret
mov
push
aas
mov
mov
or
int
inc
pop
adc
data16
outsl
jecxz
inc
push
sbb
sbb
mov
test
jns
rolb
insb
aas
mov
jecxz
loopne
and
pop
sbb
arpl
nop
push
push
mov
mov
ss
and
inc
xchg
jl
loop
cld
push
xchg
inc
loop
adc
pop
cli
cli
icebp
fstpt
cli
cli
add
inc
push
scas
stos
cmp
outsb
jb
in
pop
adc
lds
fsubs
cmpsb
sti
jae
and
xchg
divb
cmp
cli
push
inc
inc
sub
push
sub
pop
mov
mov
fldcw
dec
out
icebp
out
in
xchg
inc
lea
xor
adc
mov
lea
cmp
nop
and
mov
lds
dec
ljmp
in
lods
int
leave
and
je
aas
xchg
dec
xchg
pop
sbb
cld
xorl
fistpl
lret
movsb
mov
jp
jmp
add
aas
ss
out
xchg
mov
mov
stos
inc
out
test
fs
jne
mov
popa
scas
jmp
mov
int3
adc
dec
aad
stc
lea
aas
push
iret
pop
loope
push
out
repnz
dec
rcrb
dec
jae
jge
dec
cld
adc
cmp
mov
lret
sub
jb
out
adc
in
and
push
cld
in
pop
sub
dec
ja
bound
rorl
mov
movsb
movsl
xchg
and
mov
pop
and
pop
stc
xchg
jecxz
cmp
fwait
add
mov
add
dec
dec
jmp
jl
aam
dec
push
mov
leave
rcrb
fwait
test
mov
and
sub
jge
mov
rcrl
cmpb
adc
sbb
bound
ljmp
and
mov
cmp
gs
addr16
ljmp
or
pop
popa
mull
iret
jecxz
mov
fnstsw
rcrb
outsl
or
cmpb
cmp
ret
jg
call
mov
insl
mov
jp
test
mov
mov
mov
mov
sub
mov
stos
test
lds
xchg
bts
push
mov
lahf
das
sarl
mov
add
mov
sbb
pop
jb
lahf
jns
das
mov
xchg
lock
fcoml
call
aaa
xchg
ficoml
adc
push
sbb
sbb
and
sub
sbb
cli
bound
cmpsl
pop
push
fcomps
adc
mov
dec
jno
mov
mov
dec
das
jne
enter
or
int
stos
ds
and
adc
inc
rep
insb
pop
jne
adc
or
or
sarb
lret
ss
and
mov
inc
or
lret
adc
xor
and
fidivrl
ror
pop
insl
rclb
lret
iret
leave
cmp
xchg
mov
cmp
lods
fidivrl
jbe
push
scas
ljmp
dec
add
rcll
cmp
clc
shlb
inc
add
iret
adc
hlt
iret
stos
inc
mov
inc
push
pop
cmp
int
dec
sbb
fsubs
mov
mov
pop
and
xchg
ss
lods
fcmovne
mov
hlt
dec
and
das
sbb
std
imul
lods
xchg
addr16
fwait
cmpsb
mov
dec
cwtl
jae
popa
cmc
loopne
std
mov
jne
add
iret
dec
xchg
inc
iret
fstp
push
into
mov
call
enter
aam
add
push
std
mov
imul
cmc
xchg
lea
ljmp
mov
int
mov
inc
push
fdivr
sub
sahf
pop
in
scas
arpl
adc
mov
and
in
xchg
add
and
push
sub
adc
fiadds
stos
push
cs
pop
into
inc
repnz
repz
inc
add
call
mov
popf
fcom
xchg
push
jmp
pop
push
mov
adcb
lcall
insb
aas
add
sti
sub
loop
stos
stos
sbb
jae
fsubp
mov
aaa
std
cmovp
int3
outsl
test
or
push
xchg
or
xchg
jne
add
ret
dec
roll
or
cld
loop
mov
push
popf
testb
fcmovnb
data16
push
daa
inc
cmpb
mov
out
xchg
das
cs
mov
xor
lock
inc
push
xor
stos
mov
inc
lods
mov
push
mov
xchg
mov
fwait
add
sub
xchg
or
add
or
loope
lods
pop
into
sub
sbb
fsub
add
mov
or
cmp
mov
loop
clc
scas
cmpb
arpl
inc
sbb
xor
out
pop
cwtl
std
mov
je
stos
mov
pushf
inc
in
filds
into
inc
xor
jle
adc
aas
inc
mov
jae
mov
xchg
cltd
test
push
dec
sub
scas
cmpb
xchg
mov
test
adc
push
add
jle
fstl
mov
scas
shrl
fdivp
cld
adc
je
insl
dec
pop
ret
xchg
jg
mov
mov
cmp
outsl
incl
sbb
push
sub
mov
adc
movsl
lret
cmc
arpl
ja
rorb
ret
rol
shll
test
pop
pop
fimuls
movaps
pop
sub
ficoml
lret
pushw
sbb
pop
and
mov
and
pushf
cmp
sub
dec
mov
std
imul
adc
out
jns
ret
push
inc
sub
movsl
inc
or
insl
add
adc
pushf
xlat
and
lea
lods
orb
dec
push
cmpsb
sbb
cltd
rcrb
mov
pop
adc
sar
ja
push
es
add
inc
push
std
out
ja
push
mov
cltd
dec
icebp
pop
int3
push
jecxz
sub
sbb
xchg
add
ret
lret
lock
pop
xchg
cltd
pop
aas
ljmp
sub
sub
stos
dec
pop
pushf
jae
push
leave
in
inc
mov
mov
dec
pop
fimuls
mov
dec
icebp
jg
cwtl
outsl
arpl
loop
fdivs
leave
aam
je,pn
xor
adc
scas
cmp
xchg
cmp
scas
movsl
int3
test
outsb
popf
insl
shll
sbbb
or
aas
dec
leave
loope
out
in
cmp
arpl
xchg
rorl
out
mov
xorl
addr16
insb
incl
dec
xchg
xor
push
iret
stos
push
pushf
cmc
leave
mov
aad
lods
lods
outsb
js
pop
cmp
pop
nop
in
insl
mov
sbb
mov
daa
call
mov
bound
and
aam
test
lret
mov
aas
ret
xlat
pop
mov
addl
lds
lds
lahf
push
mov
aad
or
or
pop
pop
mov
lahf
stos
fdivrs
cltd
inc
cs
lret
xchg
ret
push
out
out
xchg
enter
jns
test
popl
mov
xchg
inc
add
or
clc
sar
fwait
imul
hlt
stc
rclb
mov
xchg
shrb
cmp
sbb
push
outsb
pop
sub
cmp
push
addr16
lahf
in
stc
clc
movd
popf
mov
xchg
sti
cmpsl
daa
in
call
shll
mov
mov
pop
sbb
dec
jecxz
dec
int
fs
jp
in
cmpl
and
jmp
xchg
lds
push
movsl
out
mov
push
popf
cld
and
jns
divl
xchg
cltd
andl
mov
push
xchg
jno
fldcw
lods
loopne
invlpg
cmpsl
inc
lods
dec
lss
xchg
fwait
jmp
sbbb
add
imul
xchg
iret
les
pushf
dec
fbld
dec
xchg
mov
rcrb
std
push
mov
mov
cmp
fadds
addl
push
iret
mov
pop
fwait
jo
sub
add
xchg
xlat
mov
je
cmc
ret
inc
loop
fsts
nop
insb
rcrl
ficoml
cmpsl
lea
dec
adc
pop
xchg
xchg
in
negb
jae
inc
mov
mov
test
addr16
loop
movsb
cmpsb
imul
jge
inc
inc
inc
fwait
aas
mov
mov
loope
stos
ficompl
int
insl
cmc
sbb
stos
mov
push
sbb
scas
or
or
jmp
mov
sub
mov
inc
inc
dec
push
fwait
or
pop
insl
orb
and
movsl
xchg
or
xchg
mov
test
repnz
into
jg
xchg
pushf
xchg
mov
insb
cmpb
cld
frstor
sbb
iret
jge
cmp
sbb
pop
mov
push
xchg
jmp
idiv
lods
icebp
inc
adc
jno
fwait
jmp
js
add
out
scas
pop
or
call
mov
or
roll
fstl
jmp
mov
mov
add
stc
leave
daa
test
adc
xchg
ret
mov
push
sti
fst
mov
or
dec
cltd
xchg
add
mov
inc
push
and
pop
lret
inc
in
cs
mov
scas
out
fnstcw
push
pop
leave
in
ja
lret
lods
jnp
mov
popl
xor
outsl
dec
mov
mov
sub
xor
add
lcall
ja
jecxz
rcrl
pop
cmpsb
mov
inc
cltd
jno
enter
add
andb
aam
xchg
fst
mov
sbb
fisubrs
in
xor
or
sub
sub
pop
sbbl
std
call
adc
in
push
xor
add
stos
test
push
stos
int
sbb
or
pushf
and
adc
dec
aad
mov
sbb
jmp
out
push
pop
sbb
inc
mov
add
pushf
dec
in
leave
cs
sub
fisttps
enter
dec
in
xor
jecxz
sub
int
sub
fdivrl
jge
add
aas
ficoms
adc
fnstsw
push
pop
daa
cmp
nop
fnsetpm(287
inc
loopne
loopne
sub
mov
ss
lds
fxch
mov
lahf
mov
pop
lea
mov
xchg
cs
loope
pushf
int3
push
mov
adc
int3
jge
arpl
test
test
xor
xchg
popf
xor
add
mov
andb
rcr
jae
cmp
scas
hlt
pop
into
mov
fdivs
xchg
in
outsb
push
add
subb
enter
repz
loopne
sti
out
aaa
fimuls
cmpsb
push
mov
lret
call
inc
mov
dec
cmpsl
add
adc
mov
pop
mov
fnstenv
lahf
popf
lahf
cmp
or
xchg
scas
aaa
fistps
and
les
mov
dec
pop
out
mov
xchg
in
pop
and
dec
fisubrs
inc
scas
lds
jmp
adc
lods
mov
sub
fldpi
jmp
int3
lods
xchg
loope
lcall
cmp
push
xor
xchg
mov
sub
aam
lret
mov
mov
cmp
add
dec
iret
mov
repz
push
and
cmpsl
mov
cmp
addl
mov
gs
sub
mov
and
and
call
pop
int3
jmp
pop
xlat
add
cmp
mov
xchg
inc
scas
lret
and
test
add
xchg
fistl
notl
push
das
lea
insb
scas
cmpsl
pop
fcmovne
inc
fld
cltd
mov
mov
jl
pop
decb
aam
xor
cmc
popa
sti
repz
push
pop
inc
add
das
repz
pop
add
popf
jp
mov
inc
out
mov
mov
in
hlt
lcall
in
push
push
push
test
mov
shll
cmpsl
inc
add
movsb
push
ret
push
lret
jl
popa
jmp
adc
and
out
push
aam
lods
cmp
loopne
pop
sub
mov
pop
push
stos
mov
xchg
hlt
jl,pt
xor
sub
loope
aam
or
stos
repz
jmp
leave
mov
lea
movsb
lret
insb
push
int3
ret
call
les
mov
jmp
insb
scas
aas
adc
xor
cmp
jns
testb
pop
jp
adc
js
cmc
jae
pop
pop
andb
push
test
inc
rcrb
pop
rcr
lret
jbe
xchg
cmpsb
xchg
lcall
mov
addr16
sbb
in
popf
lods
add
mov
fistpl
in
push
sub
fistps
or
push
sub
mov
leave
imul
adc
cmpsl
stc
into
mov
xor
push
in
mov
nop
dec
into
adc
les
andb
rcrl
or
push
xchg
mov
pop
scas
sbb
inc
pop
xchg
mov
movsl
sub
into
inc
sub
hlt
imul
mov
xlat
xlat
sbb
mov
imul
cmp
jg
ficoml
ret
cld
in
dec
xor
test
sub
dec
pop
jns
pop
call
mov
push
cmp
pop
iret
pop
mov
pop
inc
lds
popf
dec
lods
and
cmp
cmp
iret
ret
in
mov
daa
dec
sbb
inc
pop
lea
das
jle
xchg
adc
sbb
sub
cltd
cmc
cmc
jae
lds
rorl
popa
xchg
andl
arpl
cwtl
xchg
fdivrl
divl
adc
xchg
and
fidivrs
les
sub
dec
popa
adc
sbb
xor
sbb
scas
push
or
mov
sbb
aaa
leave
out
inc
xchg
movb
lds
xor
and
adc
lods
mov
fwait
test
jecxz
add
mov
aad
imul
ror
xchg
ror
jae
and
leave
in
adc
mov
ret
sub
pusha
lea
idivb
xchg
out
sbb
shll
and
lret
test
popl
lea
xor
call
daa
xor
pop
incb
cwtl
int
pop
gs
jl
push
or
in
fst
gs
cmp
push
dec
or
add
sub
pop
in
mov
dec
outsb
xor
dec
mov
aad
xchg
or
sub
mov
std
insb
test
daa
pop
cmpsl
inc
enter
cmp
lret
sub
js
and
lods
or
jp
xor
pop
aad
adc
lods
int3
test
and
or
add
push
sbb
pop
cli
sub
sbb
loope
mov
xchg
sbb
mov
sub
aam
cmp
pop
mov
cltd
pushf
cmpsl
movsl
mov
or
sbb
sbb
imul
jmp
mov
in
movsb
fs
in
lods
aaa
xor
xorl
add
push
inc
pusha
lret
mov
cmp
stos
clc
fidivrs
das
out
es
iret
test
test
xor
jnp
mov
mov
stos
ret
and
sub
fsubs
scas
adcb
xor
or
rcl
data16
movsl
sarl
mov
mov
pop
mov
out
add
jo
adc
aad
and
or
xor
sub
in
mov
jl
xor
dec
daa
call
cmp
push
ret
xlat
push
mov
cli
je
out
imul
pop
pop
in
scas
add
jne
mov
cmpsl
addr16
mov
push
in
popf
and
or
push
xor
jno
les
shrb
popa
test
imull
mov
addb
xor
stc
adc
pop
adc
std
andb
xor
rorl
add
or
cmp
dec
or
in
sub
cmp
clc
sub
aas
imul
clc
cmp
enter
inc
icebp
repnz
fmul
xchg
cmp
xorb
cmp
add
pop
inc
cld
push
pop
in
call
in
std
mov
or
test
xchg
arpl
lds
mov
push
ds
mov
ja
rclb
and
daa
and
xchg
pop
rclb
data16
sub
add
mov
sbbl
mov
or
push
cmp
das
popa
pushf
mov
push
inc
mov
fisttps
pop
ja
in
es
ret
add
clc
gs
filds
sbb
flds
adc
mov
lahf
cmp
mov
xor
xchg
les
mov
mov
dec
sub
insl
mov
jmp
push
cmp
sti
stos
adc
sub
pop
cmpb
push
mov
and
cmp
rorb
inc
or
mov
fcoms
pop
pop
sub
xchg
mov
movhps
push
cmovge
sub
mov
add
inc
aas
mov
test
out
jbe
xor
loop
int3
mov
pop
xor
imul
hlt
dec
addr16
aad
and
sub
das
jb
jp
lahf
aam
fsts
cmp
push
or
mov
add
pop
fxch
jmp
out
or
or
call
cmp
xchg
xchg
lods
dec
pop
xchg
and
inc
xchg
or
jg
push
aad
pop
repnz
mov
lods
mov
les
cmpsl
mov
dec
or
les
add
movsb
hlt
mov
cmp
cmp
movzwl
das
adc
inc
daa
jnp
cmp
lret
jl
test
and
xchg
inc
shrl
xchg
adc
out
xor
dec
repz
xchg
mov
cmc
cld
rcr
sbb
lea
imul
push
int3
mov
gs
lods
pop
mov
or
and
pop
aas
push
lea
mov
xchg
and
xor
push
movsb
jg
add
sbb
adc
mov
push
nop
or
sbb
dec
test
pusha
arpl
push
dec
cli
out
xchg
ljmp
mov
std
sub
add
lods
xchg
jae
sub
ror
dec
fwait
test
push
test
stos
fstpl
ds
faddl
scas
adc
mov
lock
dec
incl
mov
addr16
sarl
gs
add
hlt
inc
std
lods
pop
cmpsl
imul
subb
into
inc
sbb
lea
dec
pop
pop
pop
mov
not
mov
lds
cmp
push
push
sbb
addr16
dec
xchg
or
add
dec
gs
stc
dec
fdivs
data16
les
jno
add
mov
mov
cmp
lock
addr16
cmc
mov
jge
mov
add
pushf
xchg
loope
ja
lahf
sbbl
fabs
fwait
pop
mov
int3
pop
popf
cmp
jmp
adc
in
inc
cmp
push
mov
rcl
pop
decl
out
jle
xor
outsb
xchg
sub
push
mov
sbb
xchg
es
clc
aaa
pop
std
mov
out
jns
fcomi
call
and
loope
or
mov
jbe
cmp
loope
loope
cltd
es
xor
dec
mov
and
push
scas
subl
loopne
movl
sub
push
push
sbb
dec
and
leave
push
lret
bound
adc
push
sbb
clc
lds
pop
sub
stos
rcl
ja
insl
hlt
pop
mov
shrl
nop
repnz
das
jo
arpl
adc
lret
ds
xchg
mov
pop
rolb
jo
outsl
test
push
inc
or
push
in
add
jmp
add
mov
mov
adc
push
stos
mov
pop
add
ds
dec
aad
xor
and
dec
jmp
insb
sbb
mov
cmp
pop
aas
repnz
cmp
and
lcall
mul
jmp
mov
ficomps
jns
sub
fdivrs
stc
dec
xor
jecxz
fcmovb
push
and
cmp
jne
lcall
pushf
jnp
dec
sbb
vmaxsd
xor
in
add
cmp
out
cli
mov
mov
test
dec
dec
rolb
push
pop
cltd
outsl
out
push
and
ret
repz
push
mov
lds
negl
add
movsb
pop
ds
jp
inc
push
adc
mov
inc
movsl
pop
xchg
xor
mov
in
mov
mov
mov
nop
sub
xchg
loopne
flds
mov
cmp
push
xchg
lods
fisttps
sarb
popf
sub
mov
popf
pop
sbbb
xor
pushf
xchg
jb
fcmovbe
cltd
adc
sub
rcrl
mov
lock
jb
mov
pop
xorl
cmp
mov
jnp
push
dec
int3
popl
dec
int
out
cmp
cmpsb
daa
add
or
js
rorb
pop
mov
popf
lahf
shlb
push
das
cmp
adc
cwtl
mov
popf
ds
cmpsl
adc
fwait
adcl
cmp
inc
loopne
inc
fidivrl
add
mov
loop
cwtl
jl
cmp
xor
leave
fdivs
ja
push
inc
repz
mov
push
arpl
pop
mov
mov
and
int3
adc
inc
cld
insl
stos
clc
pusha
cld
adc
loope
xor
test
lods
sbb
lea
mov
cmp
adc
push
bound
cld
jno
adc
jno
sub
hlt
adc
ljmp
mov
and
lret
xchg
cmpsb
frstor
pop
add
xor
sbb
mov
jnp
test
test
pushf
add
jbe
in
icebp
sub
shlb
sbb
inc
xlat
scas
push
jmp
rolb
xor
and
or
jne
mov
xchg
pop
sbb
testl
lret
mov
mov
repz
jbe
mov
ja
mov
xchg
mov
scas
stos
push
jbe
xchg
dec
fadds
mov
cmp
push
hlt
ror
cmp
test
push
or
outsl
cmp
jns
clc
aaa
sub
xchg
xor
pushf
add
mov
dec
xor
inc
stos
adc
mov
inc
xor
out
sub
xchg
aad
and
jnp
add
inc
xchg
sbb
imul
outsb
pop
jecxz
shl
dec
xlat
fdivrp
inc
sahf
xor
sbb
push
cli
push
fcompl
pop
sbb
xchg
cmc
lods
mov
cs
shll
stos
cld
adc
popf
adc
or
call
mov
dec
addr16
pushf
scas
fldl
xor
lret
jne
add
mov
mov
data16
push
add
mov
loope
rol
xchg
loope
pop
sbb
data16
dec
jns
ss
push
loope
mov
lahf
fstpt
ret
xchg
mov
sub
dec
lds
rcll
fs
ss
cmp
xor
pop
cli
call
push
lret
test
ret
push
ss
xlat
mov
or
mov
inc
roll
arpl
subb
stc
pop
rclb
cmp
fcomps
adc
pop
and
dec
sbb
aas
cld
push
aaa
adc
repz
sti
sbb
es
iret
pop
xor
xchg
cmpsb
jmp
imul
inc
adc
pop
or
mov
lret
xchg
fsubrp
add
movsb
mov
aad
stos
fwait
sbb
mov
mov
lods
in
nop
enter
xchg
lea
jae
dec
fisttps
iret
insl
xchg
dec
mov
cmp
fsubrs
or
testb
mov
dec
in
cld
or
fsts
xor
mov
sbb
scas
fyl2xp1
faddl
addb
or
stc
cltd
cmp
orb
mov
lahf
test
paddb
dec
mov
sbb
xchg
aam
sti
ja
mov
inc
cmp
dec
enter
aas
sub
push
pop
inc
fstp
jp
popf
mov
dec
mov
mov
or
add
std
stc
xchg
cli
dec
mov
inc
and
int
inc
pop
mov
sbb
stos
movsb
int3
movb
aas
or
cmpsl
popl
orb
lret
jl
ss
mov
cmp
leave
lea
sub
push
ficoms
addr16
fldt
test
mov
mov
jmp
xchg
dec
fwait
popf
dec
pushf
out
xchg
push
fsubr
xchg
mov
dec
mov
fidivrl
scas
jl
cmp
or
rcr
pop
jno
add
adc
xchg
xchg
push
rcrl
dec
cli
movl
or
push
scas
xor
fmul
cmp
addr16
push
jecxz
mov
test
aad
sbb
mov
mov
ficoml
pop
ja
mov
or
mov
pop
dec
loopne
add
gs
cmp
pop
arpl
xchg
xor
movsb
orl
lret
lret
xchg
andb
jbe
lods
repnz
imul
pop
mov
iret
rcll
cmp
movsb
iret
xlat
je
lds
arpl
in
scas
dec
out
cmpl
xlat
popa
loop
mov
lods
jle
bound
lds
inc
cwtl
cmp
jnp
div
fldt
xor
mov
adc
or
and
and
clc
cmp
nop
popaw
lock
dec
stc
sub
xchg
icebp
mov
dec
popf
and
out
fldcw
pop
data16
and
dec
inc
nop
aas
les
imul
mov
rclb
outsl
ss
bound
mov
popf
push
jge
stos
inc
and
jl
pop
stos
clc
push
in
mov
cmp
pop
mov
ds
pushf
cltd
push
fwait
xchg
push
out
leave
jmp
xor
in
aam
insb
gs
inc
daa
test
cmpsb
pop
and
ja
pop
cmp
lds
inc
dec
iret
fwait
mov
shll
sbb
xchg
jo
cmp
pop
mov
cmc
enter
cli
clc
adc
mov
les
popa
jmp
mov
sbb
lds
push
fdivr
lret
stc
add
outsl
mov
enter
sub
inc
push
lret
and
inc
jge
pop
push
dec
orl
sub
dec
fwait
psubd
lret
out
movsb
inc
adcl
xor
lahf
out
ja
mov
aas
inc
movl
cmpsb
xor
or
mov
fwait
jmp
xchg
imul
mov
pop
fwait
sub
jmp
les
in
pushf
mov
loopne
xor
stos
pop
dec
adc
lea
adc
sahf
xor
frstor
xchg
push
add
stos
orb
sti
dec
lock
cmp
fs
jl,pn
rcll
jmp
cs
jae
pop
std
push
push
fdivp
addr16
and
inc
stos
sub
inc
nop
int
jns
frstor
add
push
fdivrp
inc
fimull
jl
push
lahf
jmp
xchg
addr16
inc
mov
test
mov
push
das
and
add
in
xor
jbe
or
cmp
cmc
out
test
and
fstpl
xor
fisttps
adc
xchg
hlt
movsb
adc
stos
xchg
lock
jp
test
lahf
cmp
ret
jge
add
cld
sub
loop
ss
ficoml
ljmp
dec
xlat
repz
outsl
aam
mov
pop
cmp
mov
add
lahf
in
mov
inc
stos
repz
insb
js
pop
pop
daa
and
xor
mov
loop
xchg
fwait
pop
sub
insb
mov
in
inc
sbbl
movsl
xchg
sbb
loop
test
xor
jge
imul
push
out
test
lods
out
fcomp
add
cmp
jge
xchg
xor
inc
loopne
add
pop
test
fucom
les
push
rol
dec
xchg
sbb
push
xor
and
pop
jbe
mov
push
stos
lret
movsl
xchg
mov
xchg
pop
xchg
pop
mov
sbb
and
lea
pop
outsl
xor
inc
ret
mov
pop
clc
pop
push
fsubs
in
lea
incb
mov
adc
sti
test
push
aam
xchg
xor
fistpll
mov
xchg
pop
cmp
cmp
adc
jne
fisttpl
and
repnz
sbb
aad
stos
cmp
xor
cmp
and
sbb
fisttpll
sbb
imul
std
jne
mov
xor
out
xchg
jle
mov
ret
pop
jp
bound
repz
and
mov
mov
fildll
jl
inc
lock
jl
cmp
adc
xchg
out
inc
sar
nop
push
pop
rorl
adc
inc
cmpl
jmp
inc
scas
call
xor
push
mov
or
inc
les
mov
mov
mov
test
sahf
outsb
fnstcw
jns
aas
mov
and
mov
push
and
mov
insl
out
mov
cld
or
jo
fdivs
repnz
jmp
test
lret
cld
push
mov
clc
pusha
pop
es
cltd
inc
enter
out
push
shlb
repz
xchg
add
xor
push
leave
sub
push
push
jns
sbb
pop
stc
and
cmp
cltd
mov
cmc
lock
fisttps
xchg
mov
jmp
addr16
sbb
xchg
fdivs
mov
loopne
xchg
mov
pop
out
ret
dec
add
loope
xchg
loop
xor
scas
jmp
xor
pop
mov
fmull
sbb
iret
aam
mov
adc
ret
adc
push
lcall
push
xlat
and
out
dec
dec
stc
add
push
dec
test
sbb
push
pop
sub
daa
push
sub
fiaddl
insl
adc
and
rcll
mov
push
pop
xor
mov
lahf
lea
xor
pop
fistl
pop
rcr
inc
fisttps
cld
arpl
out
fdivr
cli
sub
and
test
cmpsl
fs
loopne
push
test
push
inc
adc
sbb
push
fbld
mov
mov
dec
out
fldenv
pop
and
daa
add
dec
lds
leave
in
cmp
add
mov
mov
sub
insl
lcall
xchg
in
leave
pop
sbb
addl
jecxz
sahf
fists
mov
test
xorl
das
int3
pop
or
pushf
push
jbe
cmpsl
sar
cmp
push
or
call
call
js
sbb
pop
lret
pop
mov
jle
add
popa
pop
add
je
add
or
mov
dec
imull
stos
cmp
adc
inc
ret
dec
add
adcb
pop
pusha
sbb
xchg
pop
or
lods
loopne
push
sbb
pushf
pushf
xchg
test
mov
hlt
cmp
and
leave
xchg
jecxz
clc
mov
push
enter
iret
les
push
or
fucom
mov
cld
shl
and
mov
test
pop
mov
jle
sbb
inc
and
out
sub
leave
out
lret
jne
mov
scas
xlat
and
sbb
cld
sbb
leave
aaa
mov
roll
sub
shll
pushf
lret
or
mov
add
sbb
icebp
sbb
xchg
lcall
icebp
cmpsb
scas
ret
stos
dec
xlat
test
sub
call
jbe
lret
outsl
std
scas
pop
fld
or
fxch
and
leave
int
insb
mov
aam
aaa
negb
lcall
outsl
or
leave
dec
xor
je
lahf
jbe
es
scas
xorb
or
clc
cmp
lods
outsb
mov
mov
outsl
stos
or
test
scas
mov
lret
mov
leave
pop
xchg
push
cmc
in
in
leave
into
adc
pop
add
jmp
sbb
adc
xchg
or
cs
pop
cwtl
leave
xchg
xchg
sbb
loope
xchg
je
aad
mov
pop
xchg
dec
aam
cwtl
scas
dec
pusha
xor
or
push
pushf
mov
lods
test
cmp
push
aam
fsubrp
rorb
jo
push
loopne
add
lcall
xchg
add
push
ja
shr
jp
mov
xor
and
out
loop
mov
jno
xchg
repz
add
shr
mov
test
cmc
imul
push
lock
daa
or
mov
mov
xor
or
jge
adc
cwtl
sub
iret
lods
dec
add
mov
push
adc
pop
inc
scas
test
jbe
mov
and
rsm
std
nopl
test
testl
sbb
and
xchg
xor
jecxz
into
imull
inc
fmull
xor
xorl
lods
cmp
mov
daa
dec
rolb
fwait
sbb
cmp
or
imull
xchg
push
cmpsl
jge
mov
mov
adc
xchg
dec
jnp
lds
pop
leave
pop
les
les
les
les
les
les
les
les
les
les
les
les
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
mov
sub
cwtl
xor
sub
lods
mov
inc
stc
xor
cmp
pop
jecxz
bound
xor
jecxz
fisttps
pop
mov
lea
std
lea
fsubs
pop
jnp
push
pop
pop
inc
call
cld
and
adc
mov
pop
mov
lock
es
idivl
adc
aaa
adc
dec
jnp
imull
lea
daa
mov
test
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
nop
pop
lock
sahf
jb
jb
gs
shlb
jae
cmpsl
jp
xor
jae
push
test
sbb
lods
out
jb
jb
call
jb
jb
js
lods
and
jb
xchg
ja
movsl
jb
jb
jb
lods
test
loope
addr16
test
pop
push
mov
or
sub
out
xchg
xchg
xor
inc
pop
inc
xchg
xor
adc
out
xchg
xchg
mov
xchg
jne
xor
loop
iret
data16
es
prefetchnta
mov
jb
imul
jb
pop
addr16
xor
inc
addr16
ret
ret
cmp
adc
mov
mov
repnz
addr16
xor
cwtl
jb
repnz
sbb
loopne
cwtl
movsl
lods
sbb
sbb
pushf
and
sbb
xchg
das
dec
dec
lds
mov
data16
cmpsl
lods
ljmp
andb
das
pushf
lock
sub
jge
or
outsl
push
loopne
mov
loop
fistps
mov
test
imul
int3
xchg
mov
ja
sti
mov
aaa
xchg
jbe
inc
inc
sbb
ljmp
jecxz
lds
xchg
jmp
push
xchg
popf
push
in
mov
xor
add
sbb
add
sbb
xchg
push
push
ret
sub
sbb
sarl
cmp
xor
sbb
in
dec
dec
sub
inc
xorb
gs
test
in
jp
fistps
mov
add
xchg
jl
leave
sub
stc
dec
or
cltd
inc
daa
shrb
add
inc
sahf
and
add
lcall
and
in
jl
mov
fsincos
xlat
stos
jne
lods
icebp
ljmp
mov
lret
or
adc
add
or
je
out
mov
mov
jne
sbb
mov
dec
cmc
mov
out
cltd
fnstenv
xor
adc
test
repnz
int3
cmp
mov
or
add
jl
sbb
add
add
aas
sub
into
jb
dec
shlb
leave
into
xor
cmpsb
xchg
stc
clc
jmp
cmp
int3
ss
pop
push
lcall
dec
shlb
mov
test
or
dec
mull
daa
scas
xchg
pop
shlb
mov
mov
adc
fstpl
icebp
mov
inc
dec
lret
or
add
or
data16
mov
aad
sbb
inc
outsl
popl
insl
or
and
mov
lea
inc
sub
sbb
stos
test
mov
in
add
repnz
mov
aam
xor
ret
fdivrl
and
mov
rcll
lods
aas
test
and
ret
mov
mov
aas
sub
int
add
inc
mov
jnp
lods
mov
xor
stc
pushf
jae
pop
lret
jo
xchg
ds
lcall
sbb
or
pop
xor
and
ljmp
loopne
andl
mov
add
andb
cmpsb
mov
inc
xor
push
pop
iret
into
sbb
or
mov
iret
push
xchg
cltd
ficompl
xrelease
cmp
ja
sbb
popf
fidivl
xor
cmp
inc
pop
xchg
push
xchg
and
addb
popa
cmp
fnstenv
rcr
in
xor
into
mov
adc
jns,pn
fsubr
pop
pop
mov
scas
leave
js
cld
pusha
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jl
out
insb
push
lods
lods
aaa
fmul
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
addr16
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
adc
fisttpl
mov
mov
sbbl
lods
jp
shlb
xchg
imul
dec
mov
jp
sub
mov
jne
fs
imul
xchg
dec
ret
shll
stos
xor
test
mov
fisttps
or
sbb
mov
xor
mov
lds
mov
shrl
jo
push
int3
addb
lret
jns
out
into
sti
mov
mov
es
pop
jbe
mov
out
cmp
jle
repz
push
cs
addr16
adc
andb
pop
repz
divl
inc
cmp
outsb
loopne
sbb
arpl
es
stos
cmp
lds
or
xchg
les
lock
pop
cmp
xchg
dec
mov
push
jne
nop
ret
xor
jbe
jo
test
jecxz
xchg
lret
lods
push
imul
adc
sti
jbe
cld
imul
inc
nop
sbb
pushf
inc
fcoml
mov
dec
inc
add
sub
and
mov
adc
inc
cli
or
dec
xor
dec
inc
lods
and
pop
cmpxchg
enter
xchg
lret
sbb
pushf
xchg
orb
mov
mov
pop
sbb
mov
shlb
lods
or
xlat
decb
sbb
inc
cmp
xchg
leave
div
bound
daa
xchg
dec
sbbl
scas
pop
sub
leave
mov
xchg
jmp
mov
test
out
cmc
pop
dec
dec
mov
adc
adc
dec
ja
xchg
push
mov
imul
insb
mov
cmp
xchg
sub
shrl
leave
add
jp
adc
mov
data16
aad
imulb
testb
xchg
lock
rolb
inc
sti
adc
jo
lock
xor
pusha
int
out
mov
ss
mov
bound
rcll
movsl
sbb
lds
div
jle
fstps
cmpsl
mov
sarl
loopne
scas
test
sahf
test
lock
inc
jl
xchg
leave
dec
xor
or
dec
mov
cmc
repz
into
xor
shl
in
cwtl
mov
nop
and
cmp
mov
or
mov
stos
roll
jne
icebp
not
ja
push
and
rorl
dec
pop
add
adc
std
popf
xor
stos
xchg
sbb
sahf
mov
int
or
sub
in
jle
add
xchg
lods
popa
xorl
jg
inc
outsl
jb
mov
lods
pushf
movsl
sub
call
adc
jmp
or
stos
addb
iret
jmp
mov
jb
and
or
sub
add
jo
stos
sbb
cmp
mov
mov
andl
push
mov
xchg
dec
sbb
fld
sub
mov
inc
ficompl
imul
scas
insl
mov
mov
push
int3
jne
mov
xor
pop
mov
stc
or
pop
jmp
fmuls
shl
sbb
in
int
mov
dec
popa
aas
mov
dec
outsb
enter
sbb
call
outsl
mov
mov
movsl
popf
jne
mov
or
mov
ret
jno
fisttps
xchg
xor
je
hlt
lahf
aaa
jl
call
loop
aad
mov
jge
dec
movsl
xchg
mov
frstor
stos
mov
clc
sub
fnstsw
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
mov
fadd
sub
xchg
mov
mov
pop
fcomp
fstps
and
iret
pop
rorb
pushf
cmp
add
add
mov
fdivrs
iret
movntq
daa
and
fnstcw
xor
aam
daa
and
fldcw
fistps
cmpsl
daa
daa
daa
and
fldenv
lcall
es
mov
cwtl
fcomp
mov
mov
lock
sub
mov
lds
scas
dec
mov
xchg
xchg
push
jp
lret
xor
xchg
repz
inc
mov
pop
ucomiss
inc
pop
fcomp
fcomp
fcomp
rcr
int
jne
fcomp
fcomp
fcomp
fcomp
fmul
fcomp
mov
movsl
cmpsb
cmp
cs
xchg
aad
sbb
mov
call
jo
xchg
loopne
dec
pop
xor
sub
add
lahf
lods
cmp
sbb
mov
jl
push
bound
cli
repz
or
fadd
test
and
mov
lds
push
pop
cltd
leave
sbb
pop
xlat
hlt
fcomps
clc
fcomp
fcomp
fcomp
fcomp
fmul
in
int3
sbb
cmp
popf
leave
cltd
add
pop
push
aaa
cwtl
cmpsl
sti
add
sub
nop
lea
aas
pop
or
imulb
stos
push
pop
nop
jo
and
insb
divl
inc
sub
sbb
mov
mov
int
out
mov
jp
sbb
lcall
jmp
fcomi
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
daa
daa
xlat
adc
cmp
mov
mov
jle
je
jo
fidivs
or
jmp
cmp
stc
mov
lds
cmp
jmp
cmp
cmp
cmp
sub
jmp
cmp
sub
jmp
cmp
cmp
ss
or
jmp
cmp
cmp
jmp
cmp
mov
jmp
mov
lds
add
lock
mov
mov
adc
cmp
mov
jl
lock
cmp
cmp
cmp
or
mov
mov
mov
pop
mov
xor
xor
cmp
dec
xor
in
mov
mov
xor
lock
testb
out
sub
cmp
cmp
and
icebp
jno
jmp
xor
sub
cmp
add
inc
cmp
fiaddl
testb
push
shrl
push
out
sub
cmp
rclb
cmp
pop
dec
cmp
mov
pop
or
add
and
mov
jnp
std
mov
xor
xor
je
js
je
shl
pop
lock
xor
arpl
mov
popa
subl
pop
xor
dec
bound
mov
xor
adc
mov
dec
jl
pop
and
adc
roll
enter
add
and
lea
insl
and
cs
out
bound
lret
sbb
daa
das
mov
repz
inc
add
daa
inc
add
daa
inc
add
adc
add
rolb
jne
inc
