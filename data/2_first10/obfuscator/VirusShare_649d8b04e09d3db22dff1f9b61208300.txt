movw
call
lea
cmc
cmc
pushf
bt
mov
bts
mov
movl
mov
pop
cmc
not
lea
btc
pushf
neg
mov
dec
not
sub
rcl
adc
add
pushl
call
add
push
popa
jb
popa
outsb
je
outsb
imul
add
jmp
add
push
gs
dec
push
xor
add
inc
jb
popa
je
push
popa
insb
gs
add
add
addr16
insb
jne
push
add
inc
gs
lea
je
bt
cmc
cmp
pushf
lea
je
clc
bt
cmp
pusha
movl
lea
je
pusha
pusha
push
lea
jmp
add
push
insb
jae
gs
popa
insb
jne
add
add
je
jb
arpl
fs
jae
add
add
addr16
jo
outsb
dec
gs
js
add
test
xor
pushf
jmp
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
jb
jne
insb
inc
jb
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
movsb
cwtl
push
and
out
paddusw
xor
adc
not
adc
pushf
xchg
mov
or
repnz
or
cld
or
sub
stc
ret
gs
jle
push
addl
dec
icebp
ljmp
out
ret
jmp
jb
fmul
in
adc
sbb
mov
adc
mov
in
xchg
repnz
lds
aad
and
mov
mov
icebp
cmc
mov
dec
push
push
stos
dec
xchg
jl
test
cmp
popf
xlat
push
nop
pop
or
mov
lock
jp
mov
jnp
and
int
sbb
or
lret
stc
in
adc
in
pop
bswap
out
jmp
ds
jl
dec
pop
insb
sub
and
inc
dec
push
xchg
sub
jae
test
fcomps
xchg
nop
lcall
add
mov
not
add
loope
xchg
adc
pop
leave
sub
xor
jecxz
xor
out
mov
or
pop
and
repnz
lea
mov
add
mov
call
and
push
cs
dec
or
jno
jb
sbb
push
ftst
jmp
push
in
mov
popf
mov
paddw
sbb
fmul
add
aas
sbb
mov
sub
in
lret
lea
lods
fwait
add
sub
jmp
filds
xchg
mov
not
bswap
mov
cwtl
lea
movsbw
jmp
add
push
gs
gs
jae
inc
inc
add
xchg
sbbl
add
sub
ret
and
mov
pop
stos
in
cmc
fdivl
cmp
notb
mov
dec
lods
jle
bound
pop
pop
fistpl
mov
stos
call
mov
sbb
lea
jns
pop
inc
in
enter
inc
mov
js
dec
push
ja
dec
pop
mov
mov
mov
xchg
fnstenv
lds
push
and
pop
pop
mov
insb
xchg
xchg
js,pt
mov
ja
jle
adc
cmp
add
mov
dec
jle
pop
adc
loope
jns
pop
pusha
inc
push
loop
jns
and
pop
dec
cmpsl
mov
add
mov
pop
jg
or
dec
mov
cmp
popa
xchg
adcl
test
sub
imul
out
push
and
insl
mov
inc
inc
dec
dec
mov
and
adc
kmovb
js
stos
ret
or
cmp
jae
scas
mov
mov
dec
adcb
pushl
mov
lea
xchg
xchg
aas
in
adcb
test
sbb
push
jg
jle
push
push
cmp
imul
lods
testl
scas
mov
xchg
mov
jb
fisubl
xchg
cmpsb
in
mov
leave
andl
in
std
sub
ret
mov
icebp
mov
xchg
test
mov
and
sub
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
mov
pusha
lea
jmp
mov
call
add
inc
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
cmpl
add
incl
add
popa
addr16
imul
popa
je
add
xor
scas
add
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
lea
jae
cwtl
movsbw
pusha
xchg
movsbw
pusha
movzbl
mov
setno
not
lea
mov
mov
lea
lea
movsbl
lea
movb
mov
jmp
sub
jmp
pushf
push
test
pusha
jmp
add
dec
outsl
popa
fs
imul
js
add
add
push
mov
push
pop
lahf
movsbw
lea
jmp
sete
movzbw
push
mov
mov
jbe
lahf
pushf
lea
mov
call
add
inc
js
je
push
add
add
je
jb
jo
add
and
mov
xor
cmpsb
out
add
or
loopne
les
test
jmp
add
jno
push
add
add
je
imul
jae
not
mov
pushf
lea
jb
pushf
pushf
movw
lea
jmp
cmp
lahf
pop
cwtl
lea
lea
movsbl
mov
push
mov
movb
movb
lea
ja
call
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
mov
jmp
pushf
lea
je
jmp
pop
pop
dec
lahf
pusha
mov
shrd
rol
shl
cmp
jmp
add
push
imul
insb
insb
outsl
arpl
add
push
gs
imul
outsb
addr16
add
add
je
arpl
mov
call
push
add
push
fpatan
and
mov
cmpsb
xchg
xor
addb
push
in
fcom
add
lods
mov
divb
jo
cmc
add
jne
mov
and
cld
xor
cmp
jmp
xor
cmpsb
ret
sub
lahf
test
sbb
imul
add
push
xchg
jecxz
push
xchg
nop
jb
shll
cmp
sub
jo
add
and
xor
inc
push
es
out
jmp
call
jmp
add
inc
gs
outsb
push
inc
imul
je
inc
outsb
je
imul
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
and
push
arpl
insb
gs
inc
jmp
add
ret
sbb
cmp
test
call
add
inc
fs
jae
push
imul
arpl
add
add
jb
popa
je
gs
popa
addr16
add
shlb
and
je
cmc
dec
adc
mov
sar
add
adc
and
mov
push
test
mov
pushf
pusha
lea
je
inc
xor
add
lea
bsr
jmp
add
dec
gs
popa
addr16
gs
add
dec
outsl
popa
fs
imul
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
mov
pushl
movzbw
mov
setl
lods
clc
push
not
movb
bt
stc
add
mov
neg
push
bt
bt
rol
stc
jmp
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
int
push
add
add
jae
inc
insb
je
add
push
popa
imul
jo
imul
outsl
jae
dec
gs
popa
addr16
add
add
outsl
bound
dec
outsl
arpl
add
inc
gs
popa
insl
gs
arpl
outsb
add
cltd
nop
push
and
aas
in
xor
out
cmovs
cmp
sbb
jmp
pushf
subb
lods
cmpsb
inc
inc
mov
cmp
adc
jle
push
mov
push
inc
sbb
lahf
pop
mov
or
rorl
mov
movups
jbe
mov
mov
fildll
push
and
adc
iret
jnp
fs
add
xor
mov
in
and
ja
gs
in
xchg
les
lret
mov
fsubr
enter
shl
mov
sub
test
add
dec
jo
outsb
push
jb
arpl
jae
add
push
inc
popa
insb
insb
push
imul
gs
popa
jo
jne
add
lret
xchg
pusha
lea
jae
call
add
inc
gs
imul
arpl
add
rorl
test
jp
add
movzbw
rcr
xor
seta
movzbl
mov
cmp
movzbw
stc
shr
btr
test
mov
push
bt
bt
cmc
or
pusha
pusha
mov
jmp
not
setge
not
lods
stc
pusha
cmc
not
sub
jnp
test
add
cmc
call
push
pusha
movb
mov
lea
jmp
add
push
popa
imul
insb
gs
bound
arpl
fs
jae
neg
bsr
movzbw
adc
pop
call
neg
cmc
rol
pusha
shl
clc
add
stc
sub
pushl
lea
jbe
pushf
lea
jne
neg
xadd
neg
mov
or
mov
xor
shl
adc
pusha
xor
push
shl
mov
or
cmp
shr
xchg
mov
bsf
btr
sub
mov
clc
btc
neg
lea
mov
or
shr
movsbl
shrd
mov
sub
mov
btr
inc
pop
bsr
sub
bswap
mov
sub
sbb
not
mov
lahf
sar
rcr
sub
cmc
and
btr
add
or
lea
mov
cmp
shl
test
add
jmp
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
fisubrs
fadd
add
jae
arpl
jo
jns
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
mov
mov
shl
mov
mov
rol
setge
or
mov
bsr
inc
mov
neg
cmp
shr
mov
movzbw
push
ror
mov
shr
lea
sub
not
mov
bsf
das
mov
pusha
or
shr
bsf
sub
bsr
not
or
and
btr
cmp
adc
mov
bt
cmc
call
add
inc
push
jo
jb
jne
inc
add
sar
xor
pushl
lea
jb
cmp
clc
stc
xor
stc
jbe
pushf
cmp
test
push
movb
mov
movb
lea
je
lahf
push
pop
call
add
inc
jb
insl
gs
arpl
shld
mov
clc
bt
and
test
pushf
cmc
add
push
pusha
mov
lea
jmp
add
inc
jb
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
addl
add
add
je
gs
push
add
inc
gs
imul
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
insl
popa
addr16
imul
addr16
gs
jbe
add
push
xchg
cwtl
jmp
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
jb
popa
outsb
je
insb
gs
jb
pushl
lea
call
push
lea
jae
adc
pushf
call
add
inc
gs
imul
add
jecxz
imul
out
inc
ret
test
test
sbb
xor
push
adc
test
lock
cmp
mov
mov
arpl
dec
aam
mov
icebp
je
dec
cli
and
dec
inc
mov
and
arpl
adc
insb
ret
pop
or
pop
arpl
std
mov
cwtl
cli
jp
mov
dec
rcrl
addr16
adc
popa
xor
fwait
pop
cmp
lods
outsb
pop
pop
shll
test
nop
and
sub
pop
pop
mov
add
fidivrs
push
jle
cltd
daa
jb
es
xchg
add
fcoml
jo
xor
test
fisubl
aas
addr16
ds
sub
or
out
push
testb
adc
jecxz
stos
sub
inc
mov
or
movsl
sub
jl
imul
std
sbb
in
rcr
aas
jo
and
loopne
scas
pusha
adc
loop
xchg
or
in
push
cmp
xor
and
and
test
adc
xchg
cmp
int
push
out
mov
loope
das
adc
push
ljmp
mov
inc
push
stos
fmuls
outsb
inc
push
and
sub
or
sbb
insl
fwait
cmp
fsubrl
adc
xchg
leave
xchg
mov
scas
imul
add
push
xlat
cs
xor
mov
inc
mov
mov
pop
lea
js
ss
mov
or
cmpsb
xchg
ljmp
push
pop
idiv
divl
inc
and
std
bound
jp
lods
lret
mov
or
loope
jns
ljmp
mov
inc
adc
pcmpeqd
cltd
loope
cmp
cmp
jl
shl
test
nop
js
or
adc
mov
mov
pushl
mov
inc
out
push
or
push
sub
adc
sbb
cld
xchg
movsl
or
inc
adcb
and
test
sbb
gs
or
int3
pop
xorl
aad
mov
or
push
idivl
sub
cltd
movsl
or
rclb
push
jl
movsl
adc
out
mov
ds
or
or
orl
jno
aas
jmp
pop
inc
loopne
push
outsl
ds
mov
daa
popaw
xchg
filds
cmp
dec
or
jbe
test
rorb
out
inc
dec
fsub
loop
or
lods
es
and
xlat
outsl
jne
cmpsb
cmp
inc
pop
ret
std
xchg
xor
out
mov
push
test
mov
gs
jne
mov
lcall
or
dec
jo
aaa
iret
mov
jnp
int3
aas
push
imul
pop
xor
xchg
enter
xchg
fs
and
sub
cmp
inc
push
jg
cmp
push
xor
xchg
add
dec
outsl
jmp
pop
vmovdqu
mov
push
es
xor
and
out
xchg
push
mov
push
pop
mov
jne
cmp
mov
jb
decl
lods
adc
inc
mov
rcrb
add
out
cmp
mov
rolb
push
dec
das
sub
or
andl
je
cs
loopne
ss
aas
inc
incb
adc
imul
cmp
inc
insl
mov
dec
mov
lgs
pop
movsl
dec
push
xorb
sub
outsb
xchg
sub
call
jecxz
cld
out
mov
ja
jmp
call
push
aas
push
bound
inc
fcomps
addr16
mov
pop
les
cmp
add
and
inc
sbb
cmp
push
outsl
mov
xor
jne
lods
sbb
push
mov
scas
faddl
add
xchg
xor
add
or
jp
fmuls
jmp
repnz
push
adc
les
adc
jmp
mov
mov
test
mov
xchg
xchg
pop
test
pop
loop
ja
and
das
and
mov
xchg
sbb
and
scas
loope
and
jo
add
aas
mov
or
mov
imul
cmpsl
jns
and
or
adc
adc
js
addr16
add
dec
insl
popa
addr16
imul
je
outsl
jns
sbb
movb
lea
cmc
cmc
call
lea
add
pop
aas
pop
movzbw
shr
shrd
pop
sbb
push
mov
shrd
mov
shld
mov
bsr
add
lea
push
mov
pushf
pushl
pushl
ret
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
inc
jb
popa
je
dec
arpl
add
add
je
imul
popa
arpl
outsb
je
add
inc
gs
popa
jb
outsb
je
mov
pushf
movb
pusha
mov
pushl
ret
push
movl
lea
jb
pusha
mov
pusha
lea
jmp
jae
lahf
lahf
lahf
movzbw
xchg
setle
mov
pushf
mov
movzbw
movzbl
cwtl
cwtl
lea
call
add
inc
imul
sbb
push
and
mov
dec
mov
xchg
jp
mov
test
jo
push
mov
inc
push
pop
push
lods
pop
xchg
leave
sub
adc
addr16
xchg
push
push
ror
mov
add
out
cwtl
mov
test
rcl
testb
cmpsl
enter
outsb
cld
fisubl
pop
mov
cmpsl
gs
mov
mov
shll
repz
lds
loop
movsb
js
cmp
and
push
movsl
out
int
pusha
rep
mov
push
movsbw
pushf
mov
lea
bswap
mov
pushf
mov
setns
setae
mov
pushf
movb
mov
pushf
lea
jmp
clc
clc
add
pusha
cmc
push
pushf
cmp
pushl
lea
jb
push
jmp
pushf
call
lea
call
call
add
push
outsb
push
gs
js
gs
imul
gs
add
lods
push
and
ret
xor
repz
or
fidivrl
jg
sbb
fwait
jnp
inc
test
xchg
leave
mov
test
mov
or
shrl
sbb
out
or
repnz
xor
xor
jo
cmpsb
cmc
add
leave
mov
mov
and
lcall
ror
xorl
cmp
lods
push
and
bound
jbe
inc
dec
push
dec
push
scas
jmp
pop
out
mov
xchg
insl
jl
mov
mov
xor
out
lret
xchg
stos
mov
sub
xchg
or
push
mov
sbb
push
jbe
mov
popa
inc
fiaddl
jmp
sti
ljmp
sub
pop
sub
pusha
jle
xchg
sub
xor
jne
clc
sbb
push
mov
lods
pop
mov
xchg
jnp
mov
add
sbb
jns
cltd
jg
dec
insl
or
in
mov
ret
xor
adc
dec
stos
mov
fwait
mov
xchg
jae
stc
sbb
xchg
adc
enter
xor
dec
andl
cli
call
dec
mov
mov
cmp
sub
les
add
sub
xchg
mov
cmpsl
movl
movsl
dec
jno
inc
arpl
dec
and
or
xchg
sub
fwait
mov
sub
sbb
sub
or
mov
in
sarb
shrl
pop
push
mul
das
rcl
fnstcw
cmp
add
lods
mov
push
dec
clc
imul
repnz
adc
xlat
in
call
neg
jg
cmpsl
xchg
lea
xchg
or
jnp
sub
sub
js
sub
cwtl
fs
lods
jae
mov
std
cmp
in
jp
xchg
cld
mov
aas
and
and
add
jno
and
xchg
sub
movb
pushf
lea
lea
push
mov
stc
push
setnp
bt
xadd
rcl
lea
xor
cmc
mov
clc
clc
not
call
add
inc
gs
gs
inc
outsb
push
inc
imul
je
jne
dec
outsb
jne
fnstenv
popf
sbb
pushf
mov
dec
enter
mov
clc
movsb
jge
add
add
lea
out
lret
xchg
pop
sbb
mov
jecxz
mov
scas
jmp
mov
xor
pop
mov
fsubs
lcall
pusha
imul
inc
sbb
cltd
lret
jp
repnz
add
dec
nop
idivl
push
push
leave
out
shlb
xor
jl
xor
push
int3
aas
std
data16
inc
add
iret
fldenv
addb
repnz
arpl
sbb
test
push
repnz
pop
pusha
cmp
aas
pushf
pop
mov
pop
pop
xor
jle
in
sub
inc
xor
scas
mov
dec
mov
mov
fstpt
xlat
fimuls
and
push
orl
mov
pop
js
xchg
push
xor
into
xlat
call
pop
insb
mov
dec
fisttpl
imul
jns
out
aaa
inc
clc
sbb
add
adc
xchg
clc
insl
mov
push
mov
xchg
outsl
lods
dec
and
dec
sub
mov
dec
ss
xchg
dec
inc
push
stos
pop
mov
mov
and
lcall
xor
push
jb
xchg
xor
push
decl
xchg
and
pop
out
icebp
insl
pop
jl
or
xor
mov
cmpsl
mov
cmp
rol
push
and
fmul
ret
lds
dec
add
lds
push
lcall
sbb
and
mov
push
push
gs
pop
push
dec
jmp
sbb
imul
fwait
inc
mov
or
and
inc
mov
dec
or
insl
mov
pushf
sbb
cmp
mov
rcrb
mov
inc
ljmp
dec
dec
add
sbb
inc
xor
add
xor
sub
or
clc
popa
push
sbb
int3
push
sbb
loop,pn
hlt
out
cmc
dec
lods
fistpll
adc
pop
sbb
mov
in
adc
pop
movsb
or
push
outsb
dec
sahf
mov
pop
imul
jg
jbe
mov
push
aad
push
sti
fisttps
jmp
pusha
dec
and
fstp
mov
in
mov
dec
insb
xlat
jbe
lcall
xchg
xchg
mov
loopne
out
repz
or
mov
or
cwtl
pop
popa
jno
jne
sub
nop
imul
or
lods
xor
push
mov
push
out
fwait
add
mov
pop
loopne
insl
rcl
repnz
xor
aad
sti
shlb
mov
nop
jns
fwait
mov
in
cli
loop
in
movsl
stc
inc
dec
push
push
mov
xor
in
in
pop
add
enter
lock
bound
sbb
and
mov
push
cmp
mov
cmp
lret
in
sbb
jns
sti
in
inc
int3
or
add
pushf
sti
jbe
mov
nop
and
test
sahf
push
jmp
lahf
lahf
push
les
sbb
lea
repz
adc
lock
cmp
fisubrl
es
scas
adc
dec
add
xlat
clc
inc
scas
lretw
pop
push
outsb
inc
fdivs
jno
test
xchg
push
pop
test
push
decb
push
sbb
mov
loop
stos
pop
mov
add
xor
mov
dec
daa
sbb
adc
aas
addl
test
xor
xchg
shrb
divl
movsb
adc
push
dec
dec
call
loop
jo
popa
pop
dec
mov
js
push
addr16
loop
cmp
jmp
stos
dec
fimuls
push
or
xchg
stos
jle
pushl
adc
int
sbb
mov
loop
test
sub
add
adc
and
movsl
xchg
test
test
outsb
jbe
adc
sub
pop
imul
jae
ret
psrld
int
xor
sub
mov
enter
adc
jbe
mov
aas
cli
jge
shl
mov
pop
lea
das
xor
popf
jle
sbb
outsl
arpl
push
stc
scas
subl
paddb
cmp
leave
xchg
jmp
adc
inc
pusha
lahf
repnz
sub
daa
adc
call
mov
and
xchg
sarl
scas
icebp
inc
call
repz
mov
mov
bound
xlat
cmp
dec
adc
mov
out
clc
jnp
pop
lods
popf
je
mov
jne
bound
leave
sbb
jg
sub
cmp
bound
pushf
jbe
adc
xlat
mov
fildl
sahf
dec
iret
in
push
mov
adc
out
rcrl
iret
addr16
push
sub
sub
fldcw
lock
clc
pushf
out
dec
mov
pop
adcb
aas
in
jo
int3
push
ret
push
imul
xchg
jecxz
enter
ret
stos
inc
fistl
clc
pop
mov
arpl
fildl
mov
dec
loopne
mov
cmc
lret
aas
push
pop
adc
cmp
test
jbe
sar
lods
hlt
dec
ja
call
stc
cld
adc
in
cmpsl
xchg
cs
mov
jbe
repz
xchg
add
in
jnp
stc
jle
adc
pop
add
cwtl
sbb
and
xchg
pop
push
push
outsl
jbe
lods
mov
cmp
pop
sub
xor
outsb
repnz
dec
xchg
and
stc
cmp
jb
icebp
mov
sub
cli
xchg
sbb
mov
or
orl
fldt
loop
cmp
mov
push
daa
fbld
jg
out
push
cmp
out
test
mov
or
fadds
cmpsb
jae
hlt
xchg
test
dec
pop
and
cs
push
sbb
jno
or
stc
lods
into
orl
mov
sarl
mov
inc
add
lock
cwtl
add
daa
xchg
mov
push
dec
jno
or
inc
cmp
xor
jle
test
jae
cmp
dec
mov
nop
mov
fdivrl
test
cltd
insl
shll
les
and
cld
movd
and
add
push
mov
movb
outsl
add
jnp
dec
fdivr
mov
dec
cmpsl
xchg
mov
aaa
popf
jmp
push
scas
fsubp
int3
push
push
fidivl
es
jg
leave
mov
dec
mov
cmp
jge
jno
xchg
les
into
roll
mov
fwait
movsl
cmpsb
mov
fwait
xlat
and
cmpsl
cmp
ljmp
mov
dec
ljmp
imul
orb
sub
dec
or
xchg
sti
fbld
sbb
mov
stos
push
jnp
imulb
mov
jno
mov
cs
aam
jnp
stos
ds
inc
adc
sbb
mov
int3
ficomps
fwait
iret
inc
dec
xor
or
xchg
addl
scas
adcb
cmp
mov
push
fimuls
xorb
bound
cwtl
lret
sbb
jb
mov
inc
sbb
mov
scas
movsb
xchg
xchg
push
stos
inc
aas
fwait
mov
enter
jne
js
test
jbe
das
fnstcw
inc
cmpsb
stc
push
imul
loop
adc
adc
push
in
scas
clc
dec
loopne
pop
or
pop
mov
loopne
dec
dec
stos
sbb
jb
ret
xor
loop
pop
repz
cltd
iretw
jmp
push
dec
xchg
lds
or
aaa
loop
pop
push
push
daa
mov
fdivrl
push
pop
shl
shll
xchg
xor
mov
adc
shl
lret
fldcw
lcall
adc
mov
out
mov
sbb
inc
mov
cltd
cltd
sarl
add
jp
outsl
fimull
pop
ds
jnp
push
lcall
sar
outsl
pop
pop
cmpl
dec
mov
xchg
iret
pop
hlt
inc
imul
xchg
pop
sbb
add
fdivr
jp
popa
fildl
pop
push
add
add
adc
cli
xchg
lods
jle
cmp
push
jnp
out
dec
daa
stos
adc
ljmp
cmp
mov
pop
int3
inc
pop
or
je
dec
shlb
sub
and
pop
xchg
add
cmp
pop
aam
jp
mov
ja
sub
cmc
xchg
out
or
mov
shll
mov
add
push
sahf
mov
outsb
push
arpl
andb
inc
mov
insb
andl
mov
les
jns
xor
outsb
cltd
push
mov
xor
arpl
mov
mov
loopne
mov
dec
adc
adc
je
xchg
xchg
stos
pop
test
aaa
call
popa
clc
std
hlt
je
into
push
ret
lods
rorl
repz
xchg
daa
hlt
enter
pop
inc
cmp
mov
cmp
push
sub
bound
scas
mov
jmp
and
mov
mov
mov
in
fstpt
inc
aaa
sarb
pop
addb
or
stos
popa
leave
pop
push
dec
call
add
adc
add
movsb
xor
shlb
lea
cmp
stc
push
cmp
out
movsl
scas
iret
mov
and
and
jb
mov
push
clc
adc
sbb
scas
mov
notl
movsb
sbb
sub
cltd
cmp
loope
inc
sbb
mov
or
mov
fwait
scas
sbb
pop
add
pop
sti
cmp
imul
adc
push
push
fisttps
mov
sbb
push
add
gs
test
dec
das
add
push
pop
jecxz
xchg
insl
xlat
enter
cltd
pop
jns
test
imul
lahf
sub
adcl
push
jnp
adc
sbb
pop
sbb
inc
ss
sub
addb
add
cmc
in
loop
mov
inc
add
mov
xchg
out
inc
xchg
cmpsl
cmp
xchg
mov
mov
insl
dec
mov
xor
addb
mov
mov
sbb
cmp
push
movsb
xchg
iret
sti
rcrb
loope
les
cmp
inc
scas
mov
pop
cmp
mov
ss
mov
aam
mov
xchg
push
pop
loope
inc
int3
pop
cltd
push
inc
out
pop
xchg
psubsw
lahf
int3
jg
sub
out
sti
xor
mov
and
jg
ja
cpuid
inc
fcom
add
pop
es
into
lods
pop
out
jno
push
push
mov
push
jns
mov
les
fsts
movsl
inc
inc
cwtl
pmaddwd
cmp
mov
add
sub
pusha
pushf
push
lcall
stos
cmp
cmp
adc
adc
pop
cmp
pushl
mov
arpl
stc
add
dec
sbb
mov
add
xor
xchg
call
adc
faddl
sbb
adc
repnz
movsl
cs
push
cs
xchg
insl
fdivrs
and
mov
es
ficompl
stc
lea
repz
xchg
mov
push
fimuls
fiadds
and
xor
out
ret
and
orb
std
movsl
xor
or
sub
aaa
xor
lods
and
cmc
cmpsl
lret
repz
cli
xchg
mov
mov
mov
sti
pushf
or
adc
xor
add
adc
testb
sbb
loop
adc
dec
push
lods
mov
mov
clc
sahf
pop
nop
and
and
adc
push
bound
add
mov
or
outsb
rolb
mov
cld
shrl
clc
pop
push
mov
mov
xor
jbe
jb
clc
mov
jge
mov
adc
xchg
push
mov
sub
scas
jb
and
ja
pop
in
insl
jbe
cmp
sbb
shlb
mov
xchg
mov
sbb
pop
jo
sbb
xor
pop
dec
mov
sbb
lret
and
inc
push
and
pop
pop
dec
nop
inc
test
les
xor
cmp
test
add
cmp
arpl
sbb
shl
lcall
xchg
popa
sti
lods
push
sub
shr
push
xchg
xchg
sub
daa
mov
mov
dec
add
sub
fstl
dec
or
jbe
dec
imul
cmp
pushf
xchg
loop
xchg
jl
mov
dec
push
mov
ss
dec
cmp
fists
popf
nop
rolb
xchg
push
sub
inc
movsb
test
mov
data16
mov
scas
call
cmpsl
ljmp
jae
cmc
mov
lods
pop
out
sub
mov
rolb
push
push
mov
adc
iret
lcall
jo
adc
xchg
mov
rolb
popa
dec
repnz
adc
adc
aaa
sub
mul
insl
test
addl
pushf
adc
push
cmc
ret
fisttpll
inc
xchg
and
inc
sbb
dec
sbb
ds
xchg
test
cmp
add
stos
sub
sbb
fnsave
int
mov
aad
pop
inc
or
push
pop
cmpsl
bound
testl
add
das
insb
out
call
adc
sub
and
or
inc
mov
ds
jb
dec
cmp
mov
cmpsb
mov
pop
aaa
mov
std
pop
xchg
push
jbe
pushf
lock
imul
dec
cmpl
pushf
inc
jg
inc
mov
adc
pop
ret
add
xchg
sbb
mov
rclb
out
mov
mov
cwtl
scas
int3
add
add
lret
in
and
push
xlat
xchg
xor
pop
jb
repnz
insb
push
mov
and
clc
cmp
xchg
or
mov
and
mov
imul
jecxz
or
aas
gs
in
xchg
xor
cmpsb
sub
nop
sahf
call
je
decl
pop
mov
lods
pop
loop
add
jecxz
cmc
or
ret
movsb
negl
outsl
stc
lods
loope
testl
sub
orb
jmp
rorb
xchg
in
lods
cs
jge
aas
das
dec
xchg
adc
xlat
daa
in
sub
cwtl
addr16
inc
mov
and
clc
pop
push
ret
stos
es
pusha
repz
cld
es
mov
sbb
inc
cmp
fnstcw
lret
pop
jbe
or
les
adc
popf
es
jno
mov
sahf
insl
jecxz
push
hlt
imul
mov
inc
or
in
arpl
add
mov
insl
mov
xor
scas
mov
adc
jl
cli
int3
mov
cmp
nop
scas
scas
repz
loop
sbb
mov
cmpsl
lods
jo
inc
jecxz
mov
push
ljmp
fs
in
mov
sub
mov
mov
nop
jns
cmovg
jg
xchg
insb
mov
and
xor
mov
jg
stos
dec
cmp
mov
lret
les
out
rclb
jbe
sbb
jnp
insl
pop
in
and
scas
iret
xchg
and
xchg
push
ljmp
mov
arpl
jl
repnz
cmp
lods
pop
sbb
out
cmp
test
es
push
lcall
lret
or
sub
int
inc
icebp
out
dec
in
mov
mov
pop
xchg
inc
and
inc
fistps
repz
xchg
stos
or
ja
cld
stos
push
mov
nop
push
sub
push
xchg
ja
mov
test
or
frstor
xchg
lds
mov
jmp
icebp
aas
lods
cmp
push
loop
cmp
in
inc
jp
mov
pop
xor
jge
push
dec
dec
sub
daa
lret
xchg
push
sbb
push
adc
pop
jmp
sub
movsb
loope
mov
fdivrs
mov
jns
cmc
in
int3
xchg
lock
mov
pop
cmp
ret
inc
sti
mov
test
dec
mov
pop
sbbb
addr16
leave
ret
dec
add
and
mov
adcb
mov
mov
shlb
addr16
subb
sub
push
jge
cmpb
addr16
xor
hlt
lock
jnp
lret
jnp
mov
addr16
and
roll
inc
lock
daa
and
jne
bound
jle
cmp
xchg
shrl
xchg
mov
mov
jb
cltd
adc
clc
push
popa
add
fdivs
mov
pop
stos
jo
xchg
xchg
xor
push
outsb
mov
addl
cli
jp
push
mov
xchg
dec
in
enter
xchg
jno
adc
adc
ja
enter
push
js
dec
iret
std
jg
xlat
xchg
fisttpll
fdivs
jg
movsl
fistpl
imul
add
in
pusha
pop
inc
pop
out
mov
sub
insl
adcl
inc
adc
mov
mov
xor
pop
jns
pop
sbb
inc
shlb
push
mov
cmp
and
lret
or
std
xchg
cmp
fwait
mov
xor
inc
mov
insb
sbb
sahf
sub
dec
movsl
sub
inc
inc
jecxz
mov
nop
in
lods
jo
dec
push
sub
lret
pusha
push
hlt
icebp
cmp
dec
adc
lods
add
jecxz
or
enter
test
xor
lret
inc
xor
ja
xor
push
outsb
std
lahf
cmp
loop
jnp
xor
sub
xlat
mov
lfs
popf
sbb
jp
ret
lahf
inc
sbb
out
sub
repz
popa
sub
add
cld
jnp
bound
repz
mov
inc
xchg
jne
xor
in
ljmp
mov
or
nop
int3
jle
out
pop
insl
xchg
insb
cmp
mov
pop
mov
subl
push
mov
push
inc
or
lahf
mulb
adc
adc
inc
sbbl
roll
xchg
xor
dec
sbb
jp
jmp
outsl
cmp
imul
inc
js
inc
sbb
ja
sti
jnp
push
mov
or
sub
nop
mov
movsb
rdtsc
in
cmpl
dec
pop
push
test
subb
fmull
cmp
pop
sub
es
iret
data16
add
nop
xchg
scas
add
andb
popf
nop
movsl
cmpsl
push
pop
xor
iret
mov
fbld
push
push
jbe
int3
and
data16
roll
cmpsb
aas
push
bound
fsubr
cmp
inc
cld
inc
push
jp
sub
jmp
adc
xchg
das
add
push
jb
mov
cmpsb
ss
leave
jg
dec
lods
and
sti
cmp
cmpl
mov
mov
add
add
or
add
dec
mov
sub
mov
xchg
push
add
in
leave
repnz
push
mov
pusha
mov
pop
cli
sub
mov
add
mov
add
push
pop
or
push
cwtl
test
lcall
fsubs
cmpsl
jb
xchg
cmova
push
jmp
mov
shrb
fwait
jnp
push
xchg
aam
push
inc
fnstsw
fnstenv
lods
inc
insl
push
fimull
andl
or
popa
xchg
std
std
gs
loopne
imul
add
xchg
and
cmp
inc
mov
mov
sub
mov
pusha
cmpb
add
stos
push
arpl
dec
xor
sub
js
pop
mov
out
jnp
xchg
stos
mov
xchg
jno
les
jp
adc
pop
outsl
and
roll
add
lds
std
fstpl
pushl
insb
mov
shll
xor
push
add
aam
or
sub
or
or
add
dec
mov
ss
cmpsb
lea
std
push
pop
ss
out
jl
mov
and
adc
arpl
xchg
pop
xchg
mov
add
test
sbb
pop
dec
adc
sub
icebp
adc
xchg
inc
call
aas
pop
stos
repnz
jne
mov
lds
fcomps
ja
cmp
test
shrl
dec
fisubs
dec
loopne
shrb
cs
mov
and
lret
mov
test
mov
fucom
dec
xlat
or
aas
addr16
jno
repz
into
adc
pop
dec
in
adc
fcmovnu
jle
cmpsb
xchg
mov
sbb
into
sbb
sub
sbb
scas
push
lea
xor
jg
add
out
fmuls
aas
fs
pop
xchg
fwait
hlt
and
nop
and
cmp
inc
mov
mov
int
nop
inc
insl
cld
cs
fldl
js
xchg
stos
sti
in
js
xor
inc
daa
add
or
scas
mov
pop
rorl
repz
js
inc
dec
xchg
xor
fldcw
mov
add
sub
jge
and
inc
pop
mov
int
pushf
pushf
cmc
sti
imul
dec
ficoml
notl
jl
inc
jmp
arpl
icebp
jg
mov
ret
add
cmpsb
mov
fs
movsb
test
add
in
xchg
jl
shl
je
out
dec
fbstp
out
add
adc
mov
and
je
jnp
jns
outsb
mov
into
and
cmpl
shll
dec
sbb
clc
xchg
jae
sub
mov
inc
lods
popa
pusha
cwtl
mov
dec
jb
xor
push
fmuls
pop
add
pushf
aaa
xor
out
scas
push
mov
xchg
xchg
jbe
lock
test
jmp
insl
adc
dec
inc
mov
sub
ljmp
lret
iret
es
lret
push
jnp
stos
ljmp
insb
ds
loop
mov
aaa
pop
mov
jno
or
mov
inc
shr
adc
out
in
mov
push
inc
and
stos
adc
mov
dec
sub
mov
aas
jle
movsb
jae
ret
cmp
imul
xor
sbb
add
ficoms
add
jne
cli
xchg
push
data16
mov
jp
push
fldenv
xchg
call
shrb
jne
mov
shll
xor
imull
xchg
add
ljmp
inc
push
ret
lahf
dec
mov
pop
pop
pusha
mov
decl
xchg
jbe
xor
int3
ret
mov
add
inc
mov
jnp
sbb
push
push
xchg
jge
mov
dec
add
aas
pop
ret
adc
rol
movsb
mov
cmc
bound
stc
sbb
in
gs
mov
ljmp
decl
sbb
inc
xor
sbb
adc
loop
and
mov
pop
cwtl
inc
xor
mov
repz
xor
or
dec
jo
rolb
inc
out
jb
adc
jle
xor
sbb
sub
stos
filds
int
xchg
ja
adc
aas
outsb
jmp
cwtl
cmp
enter
popf
lcall
xchg
xor
jecxz
lea
add
jecxz
in
addr16
and
push
adc
inc
adc
mov
mov
inc
inc
xor
rcr
pop
les
outsl
test
das
aas
stos
aas
imul
iret
ljmp
mov
test
cmp
xchg
pop
movsb
mov
into
add
or
cld
bound
stos
call
lock
movl
pop
arpl
and
adc
loop
mov
push
push
mov
andl
add
sbb
fwait
add
iret
jmp
xchg
sar
xor
jl
mov
lds
sti
mov
mov
cmp
sub
add
ljmp
pop
and
insl
cmp
xchg
cmp
jo
repnz
push
fmuls
xor
xchg
fistpl
cld
adc
sub
lea
and
xchg
lcall
cmp
pop
stos
or
das
pop
cwtl
data16
dec
iret
sub
or
mov
lea
add
lods
mov
pop
cli
and
sbb
jns
js
out
out
dec
sbb
ja
push
xchg
pop
pshufw
lods
sub
mov
add
xchg
inc
je
fbld
rol
sub
popf
test
sarl
in
xchg
repnz
test
dec
or
inc
mov
aam
jae
mov
or
push
adc
sbb
fadds
shrb
int
fldl
test
aaa
lods
lahf
xor
add
jno
cmp
daa
mov
sub
pop
and
cli
push
fistpl
push
std
push
ljmp
stos
or
add
cmp
jno
int
clc
mov
xor
mov
push
pop
dec
mov
mov
dec
push
jp
dec
notl
hlt
das
xor
push
xlat
es
xor
in
push
dec
sub
ja
cs
dec
jo
sbb
sub
aas
insb
scas
cli
sub
lret
inc
enter
push
or
inc
out
andl
xchg
cmp
aad
test
xor
jmp
push
and
xchg
arpl
pop
sbbl
mov
sbb
mov
lods
pop
je
xorl
cmp
sbb
icebp
sbb
jp
mov
push
jmp
std
mov
ss
dec
pop
pop
das
daa
jp
icebp
xchg
int3
push
mov
imul
gs
repz
mov
scas
sub
mov
sbbb
mov
js
insb
add
out
mov
inc
xchg
cmp
or
insb
ror
mov
ljmp
push
mov
repz
mov
outsl
out
test
out
nop
out
sbb
push
test
sahf
out
mov
iret
mov
jg
addr16
lds
cmpsb
imul
std
cmc
xchg
jo
push
cmp
ds
add
shll
mov
lds
xor
movsl
dec
push
cmpb
inc
and
pop
mov
fsubl
outsl
push
add
sahf
adc
movsb
js,pn
pop
xor
jle
lock
cmp
jnp
stc
ret
aam
push
push
into
cmp
mov
stos
popa
mov
cli
call
cmp
jle
mov
sub
jae
sbb
mov
sti
pop
xchg
pop
icebp
mov
mov
testl
ds
rorl
loopne
jo
cmpsb
lea
cld
xor
ret
and
or
jnp
aaa
das
dec
xor
in
rcrb
fnstcw
and
add
jae
fbstp
or
gs
xlat
cmpsb
aaa
rorb
cmp
add
add
mov
aad
pop
sub
jmp
les
jne
cli
arpl
call
mov
push
jge
pop
inc
ret
jl
jecxz
xor
in
xor
mov
dec
test
push
daa
add
std
jae
xchg
iret
loop
dec
adc
and
add
ds
insb
aam
jnp
out
adc
out
repnz
cmpsb
lret
and
andb
xchg
push
xchg
sbb
aam
fdivrs
or
ret
test
adc
add
loope
cmp
out
pop
gs
orb
pop
icebp
mov
in
mov
rorb
ljmp
xor
dec
inc
adc
sub
std
inc
test
cmp
sub
dec
jge
add
and
jbe
imul
fs
inc
and
ss
pop
xor
jnp
jo
lds
xor
imul
incb
icebp
inc
aas
push
outsb
add
inc
sahf
insb
xor
pop
sbb
outsl
cmp
inc
fidivs
test
and
push
inc
repz
sarl
jbe
in
mov
int3
sbb
and
inc
inc
daa
or
aam
xor
xlat
push
ret
dec
cld
sbb
test
stos
shll
ljmp
dec
fidivs
cmpsl
cwtl
or
push
add
shll
stc
insb
test
pop
dec
pop
inc
jp
inc
add
xchg
pusha
shlb
movsl
mov
icebp
scas
dec
xor
push
sbb
or
mov
loopne
push
hlt
pop
out
mov
mov
das
push
jne
sbbb
sub
lcall
xchg
mov
bound
jnp
test
inc
xor
mov
pop
aam
outsb
call
and
loop
pusha
or
div
pop
pop
js
and
mov
add
add
adc
mov
jno
ljmp
or
mov
mov
fiadds
pop
sbb
cmp
sahf
in
dec
mov
std
mov
xor
iret
jnp
cmpsb
pop
cmp
mov
pop
loop
xchg
out
pop
out
insl
add
or
imulb
jl
loope
adc
jecxz
icebp
sbb
pop
inc
xchg
inc
jmp
sar
hlt
sbb
pop
xor
scas
lret
and
push
ss
pop
dec
iret
mov
mov
cwtl
jno
imul
and
push
pop
lret
cmc
decl
xchg
movsl
repz
fildll
cmpl
mov
xchg
icebp
call
nop
cmc
or
cli
sbb
adc
movsl
inc
das
aam
inc
mov
or
adc
and
test
sub
ror
mov
inc
inc
pushl
jne
rclb
and
push
hlt
sub
jbe
scas
pusha
fcomps
pop
push
and
je
cmp
jmp
mov
in
xchg
ja
sarb
iret
mov
and
es
add
popf
adc
add
scas
sub
orb
xor
or
jg
enter
iret
inc
rolb
jecxz
imul
sub
aam
lds
push
ss
cmp
out
outsl
mov
push
jno
ds
mov
cld
sub
scas
leave
aas
scas
xchg
jnp
push
shlb
popf
test
sbb
inc
aaa
cmp
adc
mov
cs
mov
icebp
roll
jo
mov
xor
inc
mov
mov
inc
fwait
movb
jp
adc
loop
add
jns
xchg
mov
xlat
sub
xorl
mov
pop
icebp
mov
lea
pop
cld
jnp
xchg
rorl
xchg
jae
rorl
sarb
rcll
lret
das
cli
test
icebp
test
sbb
cmp
inc
cmp
data16
xchg
outsb
lock
pop
mov
adc
jbe
xor
dec
xchg
sbb
pop
xor
cs
mov
jo
mov
cmpsb
xchg
lock
dec
jne
mov
mov
inc
adc
pop
lock
roll
lret
sarb
push
cmpsb
lret
mov
and
cmp
adcb
lcall
sbb
and
xchg
das
mov
addr16
outsb
and
mov
jp
and
inc
lock
mov
mov
mov
adc
outsb
lcall
outsl
pop
mov
mov
inc
xor
popf
in
outsl
dec
inc
hlt
pop
imul
lret
or
add
cmp
mov
fucomi
cmp
rorl
stos
mov
inc
cs
movsb
mov
shrl
lret
lods
push
pop
mov
sahf
fsubrp
int3
pop
movsb
lahf
lret
movsb
aas
jmp
sbb
cltd
mov
cmpl
or
popl
mov
adc
adc
pop
stc
out
pusha
ret
popf
pop
lret
pop
subb
and
pushf
inc
aad
mov
adc
out
xor
adc
into
mov
xchg
inc
inc
add
scas
jns
shll
das
and
clc
xchg
jae
in
xchg
jne
dec
outsl
movsb
ds
pop
adc
repnz
push
jp
add
adc
js
jmp
adc
xor
or
pusha
pop
and
pop
movsl
sti
bound
lods
shr
test
mov
daa
out
popf
fwait
sbb
push
push
pop
mov
inc
mov
arpl
mov
loop
sub
imull
punpckhwd
mov
lcall
iret
shlb
cli
sti
out
sti
cmp
xchg
inc
jge
ficompl
cmp
and
icebp
cmp
mov
xchg
cmc
das
movsb
adc
pop
cwtl
inc
pop
sub
adc
mov
dec
xlat
pop
imul
fldcw
test
sub
lcall
sbb
sbb
dec
lret
fnstsw
ss
xor
push
adc
push
ret
pushf
sbb
xchg
mov
int3
cmpsl
pop
cltd
lds
int
push
out
clc
xor
arpl
pop
repnz
je
bswap
push
jno
xchg
push
aaa
stc
std
fnstsw
loopne
cmp
frstor
jo
jge
out
call
in
mov
xor
inc
pop
cltd
cmp
enter
sub
mov
jb
stos
sub
sub
mov
mov
xchg
fldenv
xchg
imul
gs
call
subb
addr16
pop
aad
fnsave
push
ret
xchg
cmpl
lea
out
arpl
insb
psrad
jb
stos
popa
adc
fadd
inc
xchg
dec
ss
sti
sub
jle
sub
ret
add
xchg
jnp
movsb
std
data16
or
mov
pop
fnstenv
inc
and
dec
out
nop
ljmp
mov
icebp
jmp
insb
and
xchg
ljmp
push
jno
xor
pop
xchg
dec
jge
mov
adc
mov
xchg
mov
mov
mov
mov
mov
mov
ror
mov
dec
push
jg
jbe
bound
repz
adc
cmpb
or
jns
dec
addl
arpl
int3
mov
sbb
clc
xor
lds
lods
jmp
ret
dec
add
dec
fisttpl
dec
jns
xchg
dec
aad
mov
mov
jmp
daa
je
mov
loop
andb
sbbl
faddl
jno
in
fisttps
pop
fwait
stos
xchg
pop
cmpsl
xchg
dec
hlt
leave
lods
sahf
lahf
mov
pop
incb
pushf
enter
mov
jnp
je
popf
jnp
add
fadd
ljmp
test
xorl
push
xchg
sbb
decl
push
xchg
mov
xor
aam
dec
stos
mov
sahf
mov
movsl
hlt
jp
out
pop
daa
jp
jge
push
iret
jecxz
sbb
lds
loope
mov
popa
push
and
inc
popf
movsb
mov
mov
je
rcrl
inc
jle
pop
mov
xor
ficoml
sub
xchg
push
pop
lret
subl
push
outsb
adc
push
test
dec
mov
cs
imul
mov
fwait
sbb
jle
es
push
sub
pop
jp
out
pushf
push
jmp
jns
push
sbb
mov
push
out
dec
enter
mov
clc
fs
cmp
insl
xchg
sbb
jbe
aam
sub
xchg
mov
mov
cmp
cmpsb
pop
scas
test
test
outsb
lds
push
cltd
js
inc
repnz
daa
popf
mov
adc
sub
mov
out
leave
dec
xchg
inc
notb
repnz
cmp
lods
adcb
pop
jbe
call
fs
test
push
ljmp
jmp
add
cmpsb
into
fstps
aam
sub
popa
mov
dec
fs
out
test
add
imul
add
pop
loopne
push
dec
mov
push
lock
inc
mov
jne
les
test
sbb
pop
leave
ficoms
lea
adc
addr16
dec
dec
sbb
stc
dec
int3
xor
push
cmp
inc
jns
lret
fs
mov
dec
lahf
outsl
outsb
enter
rorb
push
or
jmp
jmp
idivb
outsl
sub
std
push
cld
lea
loop
ja
rcl
mov
test
jl
xchg
inc
dec
bound
scas
scas
lea
cmp
ficomps
mov
popf
xor
cmp
and
fdiv
mov
mov
fadd
imul
push
pusha
push
testb
lods
popf
dec
sub
sahf
or
adc
addr16
xchg
mov
or
stos
data16
loop
stos
sub
popf
decl
cs
sbb
lcall
aaa
cmpsb
inc
scas
and
push
int3
nop
cmc
outsl
dec
adc
fistps
push
jbe
cwtl
sub
jno
repnz
jp
cwtl
and
and
add
pop
xor
dec
addr16
addr16
test
stos
pop
loop
cmp
cmc
dec
sbb
jl
inc
iret
cmp
pop
mov
add
jl
mov
push
cmp
les
imul
es
push
or
ljmp
dec
mov
out
mov
or
imul
xchg
lahf
mov
ds
and
repz
add
sbb
jecxz
and
ret
mov
jae
movsb
nop
inc
dec
xorl
int
and
lahf
mov
sub
mov
xchg
jle
js
xor
scas
xor
sbb
xor
data16
inc
andb
mov
dec
pop
xor
xor
adc
mov
push
jge
fs
rcrl
test
add
imul
pop
mov
add
xchg
xchg
inc
mov
xlat
mov
adc
mov
orl
scas
pop
fstps
sub
ret
xor
sbb
pop
into
sarl
repnz
cmp
jnp
xlat
lods
adc
pop
inc
mov
cwtl
loope
in
scas
push
cmpsl
fbld
into
push
fists
xchg
add
aas
cli
xchg
inc
stos
push
mov
push
stos
ss
xor
aas
xor
pop
mov
push
pop
add
out
int3
sub
in
push
sar
fs
mov
xor
inc
sub
fbstp
xchg
repz
sahf
pop
inc
sub
loopne
and
mov
adc
data16
out
mov
and
outsb
adc
andb
pop
repz
cmpsl
lcall
in
negl
and
or
inc
adc
lahf
ss
lods
aam
fdivs
or
xor
insl
test
or
cmpsl
push
inc
shll
pop
add
mov
pop
push
jb
in
pop
pop
jl
add
mov
adc
in
mov
mov
sti
loop
and
xchg
sbb
sahf
sub
sbb
popa
fwait
adc
mov
stc
pop
rcl
cwtl
cmp
fildl
mov
ja
cmp
sarl
iret
mov
pop
dec
push
mov
and
orl
outsl
dec
inc
jge
mov
enter
add
iret
test
mov
jmp
int3
je
pop
inc
sub
jnp
inc
cmp
sub
and
xor
aad
push
bound
sub
mov
dec
push
shrl
daa
mov
outsb
jl
call
dec
scas
xchg
test
stos
shlb
in
jno
pop
sti
adc
or
add
push
mov
mov
mov
inc
inc
push
enter
fildl
jmp
adc
in
out
dec
adc
jp
xchg
cmpsl
cwtl
dec
outsb
sti
push
cmp
mov
xchg
lea
fcmovnbe
adc
cmp
push
int3
mov
and
jge
addr16
lret
sbb
ficomps
mov
cmp
add
push
ja
fisttps
mov
mov
out
xchg
xchg
add
xor
fcomp
out
cmp
cli
adc
adc
xor
or
jb
shrb
cmp
adcl
or
cmpb
icebp
add
adc
cmp
out
rolb
and
lods
stc
dec
cmp
sbb
testl
mov
pop
add
xlat
xor
imul
ficomps
dec
stos
mov
xor
sti
push
mov
xor
dec
shl
in
test
dec
stos
ret
mov
jg
std
pop
push
rolb
pop
mov
addb
and
in
mov
call
fsts
mov
aad
imul
daa
inc
nop
inc
dec
rcr
les
cmp
pop
mov
jg
sub
mov
mov
mov
mov
xor
aaa
stos
mov
repnz
sbb
das
inc
out
into
rcll
popa
aam
std
dec
sti
mov
movsl
jnp
fs
rcll
or
inc
scas
int
loopne
and
jnp
gs
adc
dec
add
sbb
cmp
mov
les
xchg
xchg
xor
inc
or
lahf
dec
add
inc
cmp
cwtl
mov
push
fwait
push
loop
in
pop
jbe
popf
in
sub
jle
sbb
push
lret
cmp
lea
popf
in
jge
std
jp
adc
in
repnz
jmp
lods
mov
lds
das
lods
fbstp
cmpsl
call
imul
pop
or
cmp
mov
clc
sub
aam
adcb
rclb
rcl
mov
or
mov
ja
xchg
mov
cli
add
daa
cmp
and
xchg
inc
dec
and
lods
iret
push
mov
xchg
jecxz
cmpsl
xor
jno
jg
adc
cltd
stc
test
dec
fildl
adc
cwtl
out
fmuls
jmp
orl
test
mov
popf
icebp
mov
xlat
dec
cmp
mov
fidivrs
shlb
sub
lods
in
push
or
push
mov
inc
mov
iret
test
fs
rorl
or
ja
push
fldl
das
mov
inc
mov
aam
in
cld
cmp
jnp
inc
mov
lcall
and
cs
loope
movb
das
mov
rcr
or
out
aad
repnz
fsubrs
adc
cld
ds
lahf
cmp
jecxz
clc
dec
ffreep
xlat
push
mov
dec
xchg
xor
cmp
cmp
lret
dec
push
cmpl
sub
in
jle
ss
pop
test
mov
out
adc
es
daa
xor
add
xor
cmp
subl
add
leave
sbb
in
repnz
ret
into
or
mov
ret
aam
std
cmp
fsub
push
pop
push
pop
inc
jnp
mov
xor
or
xchg
mov
lods
fwait
push
lods
jle
outsl
cmp
push
xorb
arpl
int3
or
cmc
ds
lods
pop
jnp
subl
rol
xlat
dec
out
inc
pop
std
loopne
or
push
js
sbb
std
dec
std
cmp
pop
fildll
inc
or
adcb
dec
pop
lret
repz
stos
or
cmp
mov
push
dec
jbe
call
aad
icebp
cmpsl
imulb
adc
xor
push
arpl
sub
or
jns
sbb
fildl
jo
addr16
mov
adc
jecxz
cmp
mov
bound
int3
out
jp
xor
mov
or
mov
popf
imull
dec
or
arpl
mov
out
loope
mov
mov
and
dec
xor
fs
iret
test
sub
cmp
lds
pop
js
loopne
xchg
push
pushf
sar
out
push
push
mov
cmp
push
or
xor
and
xor
test
or
int3
fisttps
and
xor
out
push
jo
hlt
imul
cmp
push
xchg
ljmp
sti
xchg
push
pop
mov
nop
mov
lds
add
clc
jle
jl
andl
sbb
cmp
adc
test
and
mov
pusha
sbb
lds
and
cmp
rcl
dec
loopne
mov
sbb
mov
stos
push
cmp
adc
mov
mov
mov
lea
cld
outsl
xchg
imul
lret
mov
clc
xchg
inc
pop
push
cld
loope
add
dec
test
and
mov
xor
add
jno
cli
cmp
xchg
inc
jmp
lock
repnz
sub
je
jp
sub
mov
out
test
mov
pushf
ds
sbb
out
pop
mov
sub
jle
sbb
fdivl
push
or
dec
mov
hlt
or
inc
pop
test
or
mov
scas
loope
adc
loopne
aam
lahf
in
in
mov
lods
addb
mov
fwait
cmp
sub
xorb
jmp
mov
pop
jbe
and
add
cmp
daa
loop
add
add
mov
mov
adc
sarl
testl
fdivrl
push
adc
inc
enter
movsl
decb
add
sarl
aaa
and
clc
xor
pop
xor
rclb
cltd
outsb
mov
inc
mov
bound
cmp
xor
jbe
ja
in
ljmp
ret
pop
dec
ret
hlt
mov
inc
adc
jns
inc
sub
or
mov
sub
add
lcall
or
ja
xchg
lods
push
das
pop
js
dec
vcvtps2dq
sbb
add
push
push
mov
stos
jae
dec
jmp
cmp
loop
mov
sub
push
nop
mov
movsl
xor
lcall
or
inc
dec
jb
dec
pop
fistl
jnp
adc
cmp
iret
jp
out
dec
mov
xor
adc
or
daa
cwtl
scas
jg
pop
nop
imul
mov
xor
inc
dec
xlat
jbe
mov
xchg
or
jae
xor
ja
imul
dec
push
add
mov
push
jge
push
mov
bound
cmpsb
das
mov
cld
inc
stos
das
call
sub
mov
mov
mov
loop
scas
aaa
repz
sbb
pop
test
inc
sahf
xor
sub
fwait
addr16
or
xchg
pop
sbb
cmpsb
ja
fnstsw
outsb
cmp
pop
mov
in
and
and
jg
push
xlat
clc
dec
jnp
ret
pop
aas
das
in
arpl
shl
leave
sbb
call
push
int3
push
adc
mov
pop
cs
out
or
adc
pop
lods
rol
leave
pop
cmpsb
lock
scas
jge
dec
mov
pop
mov
decl
add
mov
rcll
ja
repz
and
push
test
sub
inc
push
mov
mov
mov
dec
jg
movsl
push
pop
notb
push
in
lcall
pop
mov
imul
in
jmp
dec
inc
pop
cli
push
jns
call
fwait
lea
sti
loope
sahf
subb
js
and
push
xchg
out
mov
lret
pop
rol
gs
mov
xor
push
rorl
call
insb
insl
in
mov
adc
rcl
movsl
and
xorl
inc
into
adc
jge
andb
in
push
push
pop
in
xchg
jno
lcall
add
lahf
jecxz
pop
ror
in
les
jmp
roll
loop
cmp
pop
add
mov
pop
mov
inc
pop
in
subl
test
lcall
lcall
cwtl
cmp
insl
icebp
adc
fcomps
mov
xor
mov
jecxz
mov
enter
cld
jbe
mov
mov
imul
cwtl
or
ret
pop
inc
and
fsubr
aaa
pop
dec
add
xor
sbb
insb
nop
dec
aaa
adc
lret
fs
or
negb
popf
push
enter
int3
lahf
imul
das
jp
scas
clc
fnsave
xchg
ret
sbbb
push
jbe
scas
cwtl
adc
jnp
pop
pop
xchg
es
jbe
mov
negb
xchg
jbe
pop
popf
adc
adc
dec
cmp
getsec
sbb
outsb
imul
cmpsl
pop
cs
adc
faddl
adc
mov
divb
push
jle
daa
cmp
test
sahf
cmp
sbb
fs
std
mov
push
sub
add
push
jmp
inc
loop
daa
sbb
mov
mov
roll
xchg
call
cmpsl
jmp
cltd
fs
inc
inc
fsubrl
add
jae
adc
rclb
leave
lahf
push
lcall
dec
call
std
sub
xor
add
adc
loopne
push
sbb
cmp
mov
cmp
fadd
mov
loope
add
data16
testl
xor
ljmp
fisubrs
fs
das
rcrl
scas
and
dec
xchg
inc
mov
fisttpl
popf
xor
out
dec
aam
cmp
test
jb
iret
imul
add
lcall
mov
dec
mov
ret
jae
jno
fincstp
scas
rcrl
jbe
sub
push
std
xchg
ljmp
and
or
imul
xchg
add
test
push
aad
sti
mov
lods
dec
pop
fwait
push
jbe
loopne
clc
xor
dec
shlb
xlat
cmp
inc
movsl
movntps
imull
nopl
push
mov
jb
push
call
lds
mov
jbe
xchg
mov
ficoms
adc
push
add
es
js
mov
int3
sub
imulb
aaa
ret
and
out
pop
int
and
sub
fmull
hlt
cmp
jp
sti
mov
imul
adc
in
push
add
push
sbb
loop
mov
fs
aas
sbb
popf
les
add
imul
sbb
sbb
push
sbb
daa
or
iret
jae
cmovnp
or
sub
mov
xchg
insl
and
cmp
jl
bound
adc
cwtl
jbe
sub
cmpsb
add
cmp
xor
add
testb
xchg
popf
loope
push
scas
sbb
push
xchg
loopne
mov
sub
js
mov
mov
aas
add
test
lods
mov
test
sar
jle
mulb
dec
test
data16
adc
jo
data16
push
cmp
cmp
test
add
sub
xchg
cmp
mov
mov
xchg
sub
js
jg
imulb
es
jo
test
cld
cs
push
cmp
jo
jg
mov
lock
pop
sarb
and
xor
dec
push
add
int3
cs
lods
pop
ret
push
inc
jmp
loop
push
mov
xor
lods
jb
stos
fscale
scas
xor
call
pop
pop
insb
mov
lret
mulb
lea
mov
add
ror
adc
sti
xchg
mul
and
push
es
cmp
les
test
out
je
jl
dec
leave
dec
xor
jmp
mov
push
mov
lcall
add
sub
push
and
cmpsl
add
inc
leave
lcall
mov
into
cmp
sbb
xchg
pop
jl
nop
and
dec
dec
push
movsl
movsb
cmp
testb
sub
xlat
rcrl
scas
imul
jmp
test
add
cmp
imul
sub
pop
lods
pop
hlt
shl
xchg
inc
sbb
dec
btr
pop
je
lret
fxch
fs
push
cmp
cmp
xor
sub
nop
and
imul
cmc
inc
inc
xchg
dec
rorb
jl
pop
mov
fidivl
push
push
mov
pop
fwait
xchg
fdivr
rclb
lds
repz
pop
int
loopne
jecxz
das
out
cmp
cmp
rol
jp
imul
pop
and
xor
sti
xchg
pop
pop
xor
push
cmp
push
es
stc
shrl
data16
in
notl
or
push
mov
dec
jmp
ss
iret
scas
add
push
push
lret
repz
dec
pop
mov
sub
adc
int3
xor
aad
jle
mov
mov
out
pushf
push
sub
rorb
repnz
or
pop
mov
sub
arpl
sahf
jmp
std
imul
mov
iret
xchg
ss
lock
fcomp
aas
mov
cmc
push
pop
std
jbe
sbb
int3
nop
cmp
mov
pop
imulb
dec
pop
sub
repz
inc
add
cmp
jecxz
stos
in
ss
fisubl
lcall
sbb
sub
mov
xor
out
jl
adc
enter
out
push
notl
out
aad
and
jbe,pn
xchg
push
push
jp
push
dec
das
lods
ret
insl
push
push
hlt
mov
hlt
jmp
adc
iret
push
pop
mov
cmp
data16
or
stos
sbb
mov
inc
nop
inc
in
inc
dec
pop
pushf
mov
mov
mov
call
cld
decl
pop
cmpsb
fistl
or
aas
jmp
sti
dec
and
pop
ficompl
mov
jge
sub
test
adc
cltd
nop
inc
jmp
lock
or
lcall
pop
mov
sbb
dec
lods
ficoml
aas
sub
cmpsb
rorl
push
xchg
pop
fs
jnp
out
out
jp
push
lods
test
outsl
xor
test
jbe
ja
cmp
dec
push
enter
jo
mov
pop
daa
pop
mov
or
cli
sub
mov
arpl
ss
mov
xor
movsb
xchg
jbe
push
add
adc
push
negb
mov
shrb
push
or
xchg
cld
mov
jl
push
inc
jae
es
ror
sbb
adcb
mov
jmp
rorb
ficoms
add
enter
scas
into
hlt
and
mov
xchg
ret
outsl
push
xchg
sub
or
imulb
add
pop
stos
or
dec
in
dec
lods
inc
cmpsb
test
sbb
das
cmp
mov
and
jo
test
pop
xlat
movsl
sub
pushf
sbbl
sbbl
pcmpeqb
movsl
outsl
paddusw
mov
jbe
cmpb
inc
into
push
outsb
les
push
push
pop
in
mov
xor
imull
aaa
jne
sbb
in
sahf
test
adcb
jg
inc
cmp
loope
jns
inc
inc
test
xlat
mov
and
rcl
sar
mov
fwait
pop
jns
mov
pop
pop
sub
popa
dec
mov
add
cmp
jno
mov
push
mov
lcall
pusha
add
lret
dec
cmp
add
mov
test
dec
movsb
adc
pause
inc
out
push
popf
out
cmp
fwait
int3
pusha
or
lahf
andl
pop
inc
int3
mov
imul
enter
mov
loopne
mov
inc
mov
xor
cmc
mov
lds
mov
push
adc
push
jmp
lahf
xor
jnp
jge
cmovle
cmp
cmpsb
out
jne
xchg
std
sub
mov
fs
mov
dec
dec
jecxz
mov
xchg
mov
push
xchg
mov
pushf
leave
add
test
jmp
aad
adc
push
std
xchg
cmpl
out
sahf
fidivs
xchg
and
jp
nop
cmp
popf
test
insb
inc
addr16
and
pop
loope
add
cmp
test
jl
jecxz
xchg
xlat
lret
mov
cmp
mov
fdivrl
incl
sti
sub
xor
cmp
addr16
and
sahf
xor
stos
out
jb
filds
fnstsw
mov
push
mov
les
mov
cwtl
loope
mov
in
and
enter
pop
test
pop
rorb
pop
adc
repz
sbb
je
cli
and
mov
or
fst
push
fwait
loop
jg
rcrl
xor
sbb
lret
imul
mov
mov
pop
int3
xor
xor
mov
inc
dec
ljmp
inc
adc
int
push
or
fistpl
pcmpeqd
imulb
push
imul
out
and
inc
inc
dec
cmp
repz
sub
lea
aam
das
jo
push
in
cmpsb
sub
xor
pop
inc
gs
adc
pop
xchg
push
in
inc
jmp
xchg
pushf
cwtl
mov
xchg
jae
lds
cwtl
shlb
jmp
rorl
pop
inc
outsl
pop
cmp
and
jp
cmpsb
in
cmpsb
into
mov
adc
idivl
mov
push
in
pushf
pushf
nop
leave
imul
pop
mull
inc
dec
out
loop
test
pop
and
mov
inc
ljmp
add
adc
rorl
pop
inc
or
ljmp
punpckhwd
leave
scas
mov
mov
test
push
add
jg
arpl
lea
rcll
sub
xchg
leave
mov
jo
pusha
shl
fs
fldcw
test
hlt
movhlps
jae
jp
pop
adc
data16
sub
jae
pop
loopne
push
push
push
adc
pop
out
xchg
fcoms
mov
sbbl
add
mov
pop
sbb
adc
pop
xor
aam
insb
dec
sahf
mov
pop
pop
fmuls
gs
test
into
mov
adc
cmpsb
mov
movsl
leave
hlt
int
stos
orb
mov
fcmovb
jno
pop
das
mov
mov
clc
in
or
mov
mov
adc
ja
fcoml
cld
jb
ljmp
repnz
mov
or
cmpsb
push
mov
push
cmpsb
inc
into
stos
or
cmp
imul
popa
rcll
inc
rolb
outsl
jmp
jmp
icebp
xchg
mov
lret
dec
pop
cmp
or
pop
fiadds
imul
sub
insl
xlat
mov
and
mov
and
decb
lcall
push
jo
pop
pushf
leave
in
push
sbbl
movsl
insl
xchg
in
lods
add
xchg
in
fcomi
or
insb
xchg
in
sub
push
cmp
repz
pop
imul
mov
adc
adc
loope
mov
pop
test
inc
inc
insl
fnsave
add
fcompl
pop
add
pop
add
pop
push
popl
dec
stc
dec
adc
xor
jle
loopne
cli
pop
ret
aas
imul
and
jmp
jbe
inc
mov
int3
mov
loope
cmc
jo
cld
sbb
mov
or
dec
dec
dec
sbb
sbb
add
in
mov
pop
xchg
inc
xor
dec
fwait
xchg
into
cmp
filds
dec
xor
xlat
mov
pop
outsb
sub
loope
jp
lahf
daa
cs
adc
bound
inc
insl
mov
mov
pop
xor
cmpsb
mov
cli
fsubrl
inc
adc
test
scas
inc
mov
and
daa
jecxz
xlat
dec
dec
xor
movsb
xor
fistpl
nop
jmp
xor
repnz
fwait
mov
fisubrs
lods
sub
insl
out
adc
jecxz
mov
add
jmp
or
inc
cmpsl
add
xor
xchg
punpcklwd
push
lcall
nop
push
mov
imul
cld
or
inc
pop
push
enter
std
and
push
clc
adcb
mov
jne
or
mov
dec
shll
mov
shlb
test
or
cmp
ret
sbb
add
test
jnp
jecxz
pop
test
mov
add
jno
inc
mov
icebp
into
fisttpl
xchg
mov
data16
daa
mov
or
loopne
scas
js
test
mov
mov
dec
xchg
or
push
ret
js
mov
mov
jnp
sbb
push
sbb
mov
pop
icebp
in
sahf
int
push
mov
pusha
out
dec
inc
mov
mov
test
fwait
shrl
or
sub
outsb
xor
popa
inc
es
cmp
les
and
addr16
call
sbb
sub
pop
int3
mov
inc
or
sti
shrb
push
out
fs
pop
mov
dec
mov
stc
or
insb
xchg
aad
les
sbb
fdivrl
in
and
les
dec
jecxz
out
gs
fadds
sarb
adc
pop
ja
popf
xchg
mov
ja
and
jne
xchg
int3
push
sub
test
inc
and
pop
rcll
sarl
sbb
ja
dec
inc
cmp
lods
outsl
in
ljmp
mov
in
arpl
lock
outsl
sti
movsl
outsl
mov
sbb
je
cmc
cld
or
gs
add
hlt
movsl
out
xchg
pop
push
out
add
faddl
add
sbb
mov
jmp
cmpsb
mov
mov
jg
xchg
popa
xor
mov
or
sub
xchg
lahf
lahf
jle
clc
ljmp
mov
xchg
mov
fiaddl
lret
sub
das
xchg
sahf
xor
pop
cmp
add
loope
stc
fs
push
push
ja
inc
mov
push
sti
inc
jmp
xor
mov
stc
daa
mov
in
lea
jbe
and
mov
lret
add
imul
cmpsl
test
enter
pop
mov
pop
lods
cmp
push
pop
dec
ljmp
xor
test
inc
jl
leave
iret
dec
insb
push
hlt
sbbb
dec
lret
push
or
mov
and
out
mov
adc
in
inc
movsl
addr16
jecxz
je
jno
dec
mov
push
xlat
sbb
aam
mov
jg
int
mov
or
rcr
pop
std
in
repz
mov
fidivrl
cld
call
push
fcomi
lods
mov
jb
dec
shll
pop
inc
adc
inc
shrb
sbb
mov
movsl
sbb
cmp
cmp
inc
jecxz
add
sarl
aam
xchg
xor
pop
sub
cmp
inc
adc
push
add
pop
pop
pop
daa
push
gs
xchg
outsb
aaa
inc
fnstsw
ret
and
sarb
push
mov
or
sbbl
lock
xchg
cmc
jmp
int
mov
xchg
pop
inc
jb
je
xchg
push
or
push
inc
mov
fnclex
ror
push
jecxz
das
mov
dec
jne
lret
or
inc
pop
into
xchg
lea
loopne
popa
aaa
lock
and
inc
mov
je
mov
cmpsb
std
and
outsb
xchg
dec
cmp
xor
inc
mov
nop
xchg
pusha
ror
mov
cmp
loop
es
mov
jge
addr16
dec
sub
adc
ja
push
lds
and
pop
cmp
mov
mov
xchg
add
push
mov
jb
cmp
fbstp
mov
sbb
and
loopne
add
pop
aam
push
std
roll
lret
rcl
push
pusha
jle,pt
lcall
shr
mov
mov
ret
lock
fwait
int3
test
repnz
mov
inc
push
dec
sbb
push
push
mov
dec
test
mov
xchg
add
fdivr
cmp
clc
loop
cmp
imulb
fbstp
pushf
push
sarl
icebp
push
addb
imul
inc
push
mov
xchg
add
jno
pop
or
mov
test
xor
fwait
leave
sub
in
subl
cmp
cld
or
test
adc
dec
xchg
dec
xchg
dec
call
pop
pusha
gs
pop
bnd
adcl
push
cmpsb
add
adc
fnstcw
fcoms
and
sbb
outsl
mov
dec
and
sub
roll
sbb
xchg
jbe
xchg
popa
movsl
pop
push
adc
cmp
push
pop
push
divl
dec
xor
leave
cli
test
add
repnz
popa
stc
imul
iret
fsubrp
cmpsb
mov
clc
inc
loopne
lcall
mov
leave
mov
dec
lds
aaa
jp
push
cmp
mov
outsb
mov
in
pusha
stos
jns
ficoms
inc
jb
inc
adc
xchg
or
sbb
pop
jl
es
popf
pop
xchg
jae
jmp
sub
xor
insl
enter
ss
push
into
fldl
add
in
dec
xor
jns
pop
nop
pop
push
pop
mov
clc
stc
and
stos
push
into
js
or
cld
or
int
in
push
adc
and
int
pop
loopne
mov
dec
cmp
fistpll
std
test
lret
add
fbld
add
cmp
movsl
xor
cmp
jno
js
cltd
mov
pushf
or
and
int
xor
mov
mov
jne
data16
mov
sbb
fsubl
loope
enter
xor
pop
pushl
mov
hlt
dec
rcrb
jmp
data16
outsl
popf
adc
push
loop
leave
inc
sbb
jae
xchg
add
xchg
push
fisttps
xchg
cmpsb
jle
and
xor
dec
pop
mov
push
insb
aas
push
push
xchg
jmp
sub
dec
dec
push
sub
inc
rcl
mov
mov
not
in
in
mov
cmp
sbb
sti
inc
inc
lret
call
pop
in
mov
fwait
dec
scas
test
insb
arpl
mov
pop
push
lcall
in
cmpsb
lock
pop
leave
mov
ret
jbe
das
jo
push
dec
fstps
mov
mov
and
push
mov
mov
std
int
jg
cmp
xlat
call
pop
fwait
scas
hlt
and
and
pop
inc
loope
daa
pop
xchg
lret
add
sbb
mov
mov
test
mov
push
test
dec
daa
jmp
and
sti
push
sti
icebp
adc
sub
pop
insl
jg
lret
popa
rcl
out
int3
sub
push
sbb
in
mov
xchg
mov
psraw
pop
mov
jo
int
adc
es
cmp
and
dec
xor
jge
mov
or
lods
out
push
insb
repnz
mov
xchg
push
inc
cli
or
pop
sbb
call
xchg
pushf
roll
aas
and
ja
mov
push
push
sbb
scas
xchg
sbb
jle
gs
aam
inc
jbe
cmp
dec
ds
jecxz
shr
push
test
dec
testb
mov
insb
mov
cmpl
mov
ds
imul
cmp
adc
cmp
mov
out
movsl
mov
dec
arpl
data16
xchg
adc
int3
sbb
pop
cltd
mov
negb
rclb
verw
mov
in
adc
mov
push
dec
js
pop
in
adc
movsb
test
sbb
cmpsl
push
cmc
cmp
loopne
xor
dec
rcrb
push
xor
xor
lea
int
cwtl
adc
add
scas
aad
push
jmp
in
aaa
insl
subl
les
in
or
aaa
in
pop
xchg
cmp
adc
xchg
sti
inc
mov
imul
lock
push
mov
mov
inc
sub
aaa
outsl
cld
jnp
in
jns
sbb
cmp
mov
add
push
mov
popa
jmp
mov
rorb
shrl
paddsw
xchg
xchg
adc
fcoml
and
pop
push
ret
push
shl
push
mov
mov
pop
aas
add
sbb
imul
mov
xchg
in
out
push
gs
aaa
xor
cmp
sbb
jp
jae
mov
dec
jmp
cld
jp
aas
adc
mov
out
sbb
jae
dec
or
in
push
and
xorb
adc
imul
insb
sti
push
push
mov
test
push
in
pop
lea
int
mov
sarl
sub
inc
and
push
inc
shll
xchg
mov
dec
sub
bound
sbb
or
dec
sub
push
hlt
add
loopne
decl
push
lcall
stos
cltd
int
notl
cwtl
imul
int3
cmpsl
adc
pop
ds
mov
pop
test
lods
loop
aas
dec
xor
stos
push
sbb
or
push
into
subb
jnp
in
movsl
cmpsb
imul
aas
jmp
push
fidivl
mov
pop
ret
or
jbe
pop
xchg
mov
dec
adc
stos
sbb
sbb
fisttpl
aaa
fdivrp
sahf
xchg
adc
push
sub
mov
cmpsb
jecxz
or
mov
push
and
lahf
push
sbbl
sbb
xor
arpl
jl
insl
mov
cmc
repnz
xor
fimull
stos
mov
jno
cli
negl
adc
lcall
mov
arpl
jae
cmpb
out
mov
clc
fcomps
push
push
inc
xchg
xor
ljmp
add
ja
cmp
xchg
not
jae
inc
scas
and
fwait
xorb
repnz
daa
es
pusha
movl
cmp
rolb
mov
pop
mov
pusha
iret
hlt
fildl
lds
rcl
loope
adc
mov
inc
dec
mov
push
inc
negl
shrl
and
mov
outsb
mov
lret
dec
lods
insb
fwait
mov
xchg
dec
xchg
cmpsb
sar
lea
pop
jg
pop
xchg
loopne
stos
icebp
fs
insb
ds
int
cmp
popf
psraw
pop
mov
cltd
pop
sub
ret
sub
mov
gs
inc
shll
push
jnp
int3
jg
aad
cmp
pusha
insb
cmp
sub
cld
ja
lea
imul
xlat
sbb
loopne
dec
mov
lds
mov
push
inc
xorl
inc
jae
jge
push
xor
sbb
dec
jl
dec
adc
test
jmp
cmp
icebp
mov
cs
xor
popa
in
loopne
cltd
xchg
jo
push
mov
ficoms
push
aad
lock
jg
ret
fisttpl
and
mov
shlb
ds
out
xchg
jmp
enter
jge
cmpsl
sti
jb
cs
push
dec
mov
xchg
shll
test
divl
cmp
and
mov
ret
mov
xchg
subl
inc
mov
pop
fwait
popf
int
lret
cmp
mov
das
fidivs
fstps
adc
push
jns
pop
push
mov
popa
add
btr
mov
movsl
or
int
jmp
mov
mov
sbb
test
test
jbe
add
nop
leave
sahf
in
sbb
mov
and
mov
push
mov
pop
sahf
pushf
insl
push
aaa
xor
push
mov
stos
add
stos
cmpsb
in
push
nop
jae
in
ret
xchg
fdivrl
loope
pop
jle
inc
pop
enter
fistpll
add
add
jo
push
aad
jmp
ljmp
addr16
and
ret
sub
sub
add
and
add
mov
cmp
sub
mov
shlb
dec
jecxz
loopne
iret
je
jmp
lcall
pop
jge
xor
pop
adc
into
add
add
fmull
mov
leave
dec
mov
lods
xor
xchg
adc
mov
mov
xorl
mov
pop
lods
pop
cwtl
loop
test
mov
fidivrl
dec
stos
stos
add
loop
pop
lahf
pop
popa
sahf
xchg
lret
pop
ss
push
push
dec
dec
testl
xchg
jnp
in
jo
xchg
pop
scas
cmpsb
out
jecxz
inc
in
push
jmp
lock
xchg
or
insb
add
ret
adc
lods
jae
in
push
dec
jg
int3
push
jge
cmp
mov
sbb
jge
ret
mov
push
and
inc
pop
mov
aam
push
mov
add
sbb
pop
pop
out
and
xchg
aam
dec
popa
sbb
iret
insb
cld
cmp
jae
xor
sbb
mov
mov
cmp
icebp
and
cmp
data16
jl
loop
jecxz
out
outsl
and
addr16
enter
add
jmp
dec
inc
push
call
scas
cmp
sub
jge
jno
hlt
pop
or
call
mov
push
sti
dec
mov
xchg
and
add
mov
int3
jo
push
sub
ljmp
adc
jbe
inc
fdivs
jmp
arpl
icebp
in
imul
or
or
cli
aad
cli
pop
xlat
stos
dec
fcoml
in
add
mov
mov
or
xchg
pop
mov
pop
loope
cmpsb
cmpsl
lea
ss
aaa
or
add
outsl
jno
adc
sbb
mov
xchg
cwtl
test
adc
fildl
shrl
mov
shlb
mov
cmp
pop
fisttps
xchg
pop
or
xchg
gs
into
int3
cli
xor
sub
je
cmp
sub
addr16
arpl
adc
fstps
sub
jmp
ds
cmp
pushf
movsl
mov
add
adc
and
mov
sub
push
sub
push
or
stos
ss
add
mov
test
pop
lret
xor
fprem
dec
test
test
mov
jmp
xchg
shll
mov
int3
mov
jnp
shr
adc
jge
sbbb
jg
dec
adc
cmp
gs
add
push
push
lods
xor
adc
test
test
cmp
sahf
push
lahf
int
dec
ja
jg
xchg
or
jb
test
push
pop
sbb
sbb
ror
lods
insb
mov
sbb
loopne
and
or
in
mov
or
jnp
sbb
mov
and
repz
jl
dec
test
xchg
loopew
sbb
push
mov
test
fs
sar
push
je
lahf
xor
push
push
xchg
pop
cltd
repz
aad
sbb
mov
pop
mov
mov
shll
outsl
gs
sti
sti
fsubs
push
mulb
fnstcw
xchg
call
and
adc
jbe
push
mov
xchg
lahf
cmc
xor
xchg
pop
xchg
call
mov
leave
xor
mov
aaa
jo
and
sbbl
test
mov
outsb
mov
cli
pushf
cmp
sbb
gs
or
mov
dec
ficoml
aad
jge
popa
mov
xchg
lret
aad
icebp
pop
dec
cmpsb
or
xchg
je
mov
mov
add
ret
dec
lea
xchg
jl
inc
mov
jge
jg
jo
pop
out
pop
fwait
js
arpl
inc
int
xor
push
inc
jg
lcall
stos
out
mov
test
pop
enter
xchg
pop
repnz
mov
shll
xchg
add
pusha
mov
add
loop
repz
out
jno
xor
cmp
femms
xor
mov
dec
out
mov
aam
pop
rcrl
jne
pop
pop
rcrb
cli
mov
rcll
mov
mulb
fadd
jg
out
mov
or
leave
fimuls
adc
dec
test
lret
pop
cmpsl
cltd
nop
hlt
adc
dec
mov
pop
cs
fstps
cmp
shlb
mov
ljmp
dec
dec
pop
cmpsb
add
cmp
pop
xor
jns
test
fstpt
mov
cli
sub
int
mov
pop
inc
cmpsb
push
add
mov
xor
mov
adc
in
ds
insl
inc
sub
mov
cmc
jbe
adc
xor
jg
sti
fisubrl
xor
into
xor
jbe
push
dec
ja
icebp
fidivl
mov
sub
add
data16
inc
enter
repnz
inc
mov
pop
fwait
ja
pop
sub
fisubrl
test
xor
hlt
cmpsb
mov
int3
push
or
stc
fucomip
sbbb
std
dec
stos
stos
sbb
xor
in
mov
pop
js
loopne
cmp
shll
stc
sbb
jo
mov
jae
push
cmp
push
ds
inc
subb
mov
mov
xchg
test
push
xchg
addb
or
lea
insb
sbb
lahf
or
sub
mov
test
insl
inc
outsl
sub
loop
fstps
sub
repnz
lods
xchg
sub
inc
std
push
test
imul
mov
pop
je
add
mov
mov
mov
cmp
cs
cmc
in
inc
mov
pop
aad
and
enter
inc
mov
and
lock
jge
stc
xchg
sbbb
shll
mov
jl
pop
test
addr16
or
mov
sbb
rol
imul
pause
lods
cmc
mov
sbb
adc
aam
xchg
pop
jbe
out
outsb
insb
movsl
in
in
pop
jle
into
lret
push
add
jp
mov
dec
sti
mov
pop
cltd
idivb
xchg
xor
pop
fdivrs
iret
inc
inc
mov
ret
jg
jp
lea
add
ja
push
xor
cmp
sti
insl
mov
or
inc
iret
mov
xor
cmp
xchg
and
dec
cmpsl
cltd
adc
shr
movsl
clc
push
dec
dec
or
pop
fidivrl
sbb
clc
adc
push
push
nop
cs
pop
inc
in
push
pop
mov
xchg
loopne
enter
dec
jle
push
push
xchg
and
cmp
sub
lods
ja
nop
or
divl
in
and
testb
xchg
int
mov
cwtl
rolb
add
adc
test
push
inc
xchg
dec
mov
inc
imul
pop
out
dec
or
adcl
leave
cmpsb
add
repnz
arpl
inc
or
push
xor
jle
out
xchg
imul
pop
aaa
repz
pop
cmp
or
or
rcrl
rcl
pop
loope
push
jle
jmp
mov
sub
pop
and
xor
sbb
out
lcall
je
add
jbe
sbb
pusha
and
mov
mov
pop
shl
rorb
cltd
add
xchg
mov
push
mov
jo,pt
aaa
pop
push
cltd
std
repz
mov
addl
mov
aam
fwait
xor
add
mov
jge
xchg
sub
and
pop
movsb
and
lahf
push
adc
outsl
mov
testb
scas
xor
mov
movsl
leavew
test
or
out
ds
mov
cltd
sarl
push
fmuls
xchg
pop
pop
xor
mov
jne
sahf
jae
lret
mov
mov
sbb
sti
data16
dec
stc
shrl
or
mov
dec
loope
sub
add
inc
test
insb
scas
fildl
or
daa
add
cld
lds
scas
sbb
sbb
inc
xlat
stc
lcall
cld
mov
lds
jno
icebp
push
push
loope
pop
xchg
out
movsb
fldcw
loope
pop
push
jb
shr
clc
add
and
xchg
setl
insl
sarl
xchg
or
lcall
mov
mov
add
mov
push
stos
lcall
and
pop
xor
les
push
adc
lahf
jnp
lea
mov
and
mov
test
not
jbe
dec
lret
push
fiaddl
or
mov
mov
jnp
adc
jmp
jnp
into
mov
adcl
shlb
sub
pop
sahf
mov
fsts
fs
sahf
pusha
xlat
jno
xor
data16
pop
insl
aas
xchg
in
or
cs
push
in
mov
cwtl
es
insl
arpl
pop
repz
pop
fldenv
shll
popf
shlb
or
mov
data16
fldcw
adc
xor
loope
mov
cmpsb
jecxz
flds
pushf
jbe
mov
mov
testb
scas
mov
push
outsb
int3
std
cmp
add
add
bound
or
nop
xorb
es
shrb
dec
int
movsb
pop
jp
cltd
test
lcall
sub
into
cmp
insb
xor
jb
mov
xor
in
outsl
dec
ljmp
fs
cli
or
iret
mov
pop
lret
mov
cmp
jae
mov
lret
mov
loope
jo
stos
mov
xor
popf
push
fstpt
or
jle
divb
jge
out
dec
mov
lock
int
cmp
ja
imul
neg
xor
imulb
dec
stos
and
test
sbb
lds
xchg
dec
icebp
fs
adc
not
hlt
mov
test
incb
or
mov
pop
test
inc
rcrb
aam
lods
and
popf
dec
test
or
mov
subl
ljmp
sbb
notb
ja
or
ret
cmp
xor
in
jmp
mov
push
pop
or
movsb
dec
jae
pop
mov
add
push
xchg
lret
in
sub
nop
stc
add
mov
jl
ret
adc
ret
addr16
int
dec
aam
popa
test
mov
incl
dec
mov
out
mov
shrb
push
pop
fadd
or
inc
pop
fcoms
sub
inc
cli
add
push
and
lods
cmp
nop
adc
pop
outsl
pop
loope
shlb
mov
pop
jmp
out
and
cs
xlat
mov
xor
cltd
dec
test
pushl
mov
push
mov
repnz
fs
xchg
push
out
lods
mov
lds
jle
xchg
gs
test
and
int3
mov
fld
aaa
push
fisttpll
icebp
or
loopne
ljmp
adc
jnp
mov
in
pop
push
imulb
shrb
jmp
cwtl
lods
fcomps
bound
test
mov
lods
lcall
jno
xchg
enter
fimull
jp
adc
xor
inc
sub
fs
push
xchg
push
cmp
out
jecxz
aas
mov
jno
sbb
call
ret
mov
jmp
test
sahf
xchg
and
cmpsb
sbb
in
cmp
je
push
dec
pop
jge
iret
pop
shrb
lods
sar
xor
sbb
mov
and
jg
faddl
mov
mov
add
pop
outsb
push
push
and
dec
push
or
fs
mov
push
push
in
pop
jno
loope
arpl
mov
dec
or
js
in
les
add
xchg
nop
movsb
les
cltd
lods
mov
insl
ss
clc
stos
outsb
das
cmp
stos
jl
xchg
xchg
xor
outsl
es
sbb
repnz
jmp
jmp
stc
push
lcall
sub
dec
jg
in
mov
data16
sbbl
das
rolb
addb
fsubrs
mov
dec
fdivrs
addb
mov
xchg
push
insl
xor
fidivs
xor
xor
cmpsb
push
sub
testl
jno
pop
mov
addr16
loopne
cmp
cmp
push
repz
fidivrl
mov
push
add
lcall
mov
pop
push
das
popa
stos
cmp
dec
jle
push
je
outsb
dec
inc
repz
arpl
in
out
into
cmp
fsubrl
int3
jnp
imul
int3
dec
popf
mov
fwait
test
mov
inc
loope
je
jno
in
or
dec
movsb
in
ja
sahf
popf
lea
sub
xchg
insb
cmc
adc
inc
hlt
clc
inc
ljmp
jmp
in
jns
pop
fucomip
jne
mov
cmp
hlt
out
test
in
mov
ds
mov
push
stc
shr
or
jg
test
pop
pop
and
movsb
dec
mov
push
test
es
outsb
out
cmp
xor
pop
sub
mov
jg
dec
dec
push
call
mov
mov
inc
shll
enter
jp
movsb
into
mov
popa
mov
mov
fistps
or
or
movups
xor
rcl
cmp
inc
adc
test
dec
test
sti
mov
arpl
repnz
and
cld
mov
andl
lret
flds
ror
pop
sbb
scas
xor
pop
cmpsb
inc
and
cwtl
inc
sub
pop
out
cli
insb
hlt
aad
mov
xor
dec
cmc
jno
or
into
xlat
das
aam
xchg
imul
add
sub
and
sbb
out
fidivl
shrb
mov
pop
push
pushf
adc
jne,pt
sub
outsb
stos
lret
scas
nop
frstor
std
repnz
scas
test
or
mov
xlat
arpl
jmp
fucom
fsub
cwtl
lea
mov
xchg
and
pop
add
jmp
bound
mov
mov
aam
and
mov
jmp
lahf
sar
es
test
pop
pushf
dec
cmc
std
popa
push
sub
add
or
mov
mov
pop
lret
dec
xchg
outsb
ficoms
pop
push
dec
sub
lods
adc
pop
in
xlat
test
cltd
shr
push
sub
mov
and
xor
mov
sub
clc
mov
fcmovne
mov
xor
scas
mov
arpl
imul
rcrl
int3
push
inc
adc
mov
push
cmp
lret
test
popf
sbb
inc
push
imul
roll
mov
mov
ss
subb
pusha
xor
sti
clc
ss
sarl
stos
lret
test
fnstcw
sub
mov
inc
jp
ja
jb
rcrl
bound
popf
cmp
or
dec
sahf
mov
insl
lods
add
ljmp
or
mov
inc
add
test
ljmp
mov
mov
jno
cmp
inc
pop
dec
data16
in
gs
dec
insl
push
cwtl
adc
insb
push
test
fmul
adc
sbb
add
jmp
push
pop
add
jp
adc
inc
addl
int
stos
push
into
loopne
lcall
adc
dec
adc
xchg
jne
xchg
lret
in
add
adc
lods
push
ja
inc
jle
mov
inc
add
cli
pop
cmpsb
out
add
cli
sub
iret
cmp
or
int3
scas
mov
cmp
cmp
int3
jle
cmpsb
movsb
pusha
mov
fsub
sub
outsl
jl
into
cmpsl
cltd
mov
sbb
aaa
in
mov
push
sbb
xor
into
pop
aam
hlt
leave
into
in
cmpsl
loopne
push
cmp
movsb
mov
pop
addb
push
lds
imul
or
mov
or
jl
dec
sarb
mov
cmpsl
xor
sub
pop
sbb
push
ret
in
xchg
roll
sub
mov
and
test
jecxz
adc
cmp
xchg
test
popf
dec
fisttpll
inc
fistpl
xchg
push
ja
lahf
out
int
push
jae
mov
out
mov
idiv
cmp
xchg
pop
adc
cld
mov
push
adc
add
pushfw
ret
mov
mov
out
lcall
sahf
scas
xchg
pop
push
movsb
cmp
cmpsb
push
cmp
adc
out
mov
ja
rolb
adc
jno
ds
fidivrl
roll
lock
orb
mov
mov
orb
mov
mov
ret
movsl
cmp
push
cmpsl
xchg
sbb
insl
frstor
mov
fcompl
sbb
ljmp
adc
pop
xchg
and
add
push
stos
jmp
sarb
and
cwtl
dec
push
or
mov
mov
dec
js
bound
add
mov
xor
and
adc
inc
lods
loope
jb
test
mov
sub
dec
test
add
pop
pop
insb
mov
ds
dec
in
sahf
js
xor
jbe
out
ret
test
shl
out
scas
in
shrd
jecxz
mov
outsb
icebp
aad
sbb
mov
repnz
sub
test
test
fucom
cltd
pop
int
js
add
int
stos
xchg
cwtl
mov
cmp
icebp
es
xchg
nop
stos
adc
mov
pop
pop
xor
mov
fisubl
sub
xchg
scas
xchg
cltd
xchg
sbb
adc
outsl
out
jne
xor
mov
sbb
pop
mov
and
sub
sbb
mov
pop
dec
scas
sbb
and
dec
les
add
push
jae
lds
sbbb
in
arpl
lea
std
mov
std
sbb
pop
pop
or
outsl
pop
mov
xchg
inc
jbe
push
jns
push
pop
mov
iret
fcomip
movsb
sarb
mov
cmp
xchg
adc
mov
mov
repnz
aas
daa
popa
or
fmuls
inc
cmp
sti
fcom
subb
pop
push
jno
mov
test
cli
fisubl
lods
xchg
mov
dec
xchg
stos
shll
in
or
das
adc
clc
loop
rcrl
incb
pop
mov
insb
testb
push
add
outsl
lcall
je
xor
call
inc
dec
imul
int
lret
flds
sbb
mov
xor
mov
popf
pop
cli
outsl
lods
push
mov
es
sbb
mov
pop
out
shl
out
xor
js
cvtps2pi
xor
lret
popa
cwtl
rcrl
les
arpl
push
stos
stos
and
dec
push
and
inc
add
imul
test
jns
sahf
fwait
out
loope
xchg
mov
cmp
add
sub
sub
cltd
fs
and
xchg
and
ret
hlt
adc
dec
dec
scas
push
mov
push
jb
lret
pop
iret
arpl
shrb
shll
jp
daa
pop
mov
sbb
and
add
popf
test
lahf
mov
adc
sub
adc
cmp
out
ss
cmc
sub
das
ja
js
dec
xchg
subl
in
aam
je
aad
mov
movsb
dec
xor
mov
push
mov
je
mov
push
xor
push
jb
mov
sub
xchg
mov
outsl
iret
in
mov
jno
mov
mov
cmp
inc
push
movsl
mov
lcall
shr
fnstcw
jmp
loopne
push
loopne
lods
cli
or
inc
push
loopne
das
and
inc
lcall
cwtl
dec
cmp
sbb
mov
out
adc
leave
sbb
aaa
fldenv
sub
aad
sysenter
dec
and
sub
test
inc
jp
xlat
jl
mov
gs
mov
fmuls
pop
sbb
stos
add
xchg
sbb
or
mov
cmp
xlat
lcall
nop
sub
jp
rcl
push
jge
pushl
fiadds
pop
and
and
xor
cld
out
xor
sub
outsl
jne
imulb
jp
xor
sub
mov
iret
stos
fs
xchg
add
xchg
inc
inc
je
xchg
mov
dec
cmpl
test
add
mov
mov
imul
cmp
xor
shll
push
inc
dec
mov
pop
nopl
inc
sub
dec
mov
stc
fldenv
cmp
icebp
and
cs
je
in
ja
iretw
testb
mov
pop
pop
or
push
sbb
push
gs
mov
add
iret
out
out
jns
lds
and
les
push
daa
mov
aad
xchg
dec
push
shl
push
iret
stos
mov
mov
insb
push
outsb
call
mov
sbb
mov
push
sub
pop
cmpsl
mov
divl
sub
ljmp
mov
lods
dec
jle
bound
push
stc
sarb
and
imul
cmpsb
cmp
lret
cld
fs
pop
dec
std
mov
jecxz
lret
mov
call
pop
inc
xlat
decl
dec
xchg
jo
in
mov
fwait
xor
call
cmp
xchg
jmp
mov
in
data16
push
ss
lods
outsb
sub
cli
addl
mov
cmp
mov
enter
pop
inc
mov
mov
or
out
sbb
xor
jge,pt
scas
push
add
test
pop
mov
or
mov
cmpsl
xor
mov
shrd
dec
mulb
rcrb
fists
pop
cmp
push
aad
setns
jecxz
mov
sbb
leave
lods
jecxz
dec
add
xor
inc
mov
call
jno
push
jnp
cmp
les
xor
or
mov
arpl
call
stc
pop
push
sbb
cwtl
dec
inc
cld
mov
stos
push
cmc
mov
xchg
fidivl
rorb
addr16
les
out
pop
aam
or
or
pop
mov
mov
adc
or
mov
roll
sub
dec
push
xchg
mov
cmp
or
cld
fildl
addr16
inc
xor
dec
in
mov
sbb
lds
pusha
xor
aaa
shrb
rclb
movsb
stos
lcall
xor
mov
cli
inc
pusha
shrb
dec
cltd
sahf
pop
xadd
inc
cmp
xor
hlt
inc
bound
push
mul
adc
pop
cmp
std
mov
pop
and
xor
push
sub
xor
sbb
inc
xchg
jb
fldl
ja
adc
mov
arpl
cmc
pop
adc
enter
jb
int3
inc
aad
sti
pop
stos
dec
ret
incl
mov
mov
jno
pop
xor
pop
aaa
pushf
push
cmp
xchg
loop
je
fs
jp
inc
adc
ret
inc
and
enter
push
mov
in
idivl
sub
test
mov
ret
xor
push
clc
mov
xchg
fmull
clc
adc
mov
lret
frstor
popa
mov
xor
mov
sub
dec
loopne
pop
aaa
or
mov
data16
mov
jmp
lock
dec
hlt
pop
pop
mov
dec
call
mov
out
popf
mov
jg
aas
push
adc
or
fnstsw
fistps
hlt
xchg
push
cmp
inc
dec
push
mov
cs
fisubrs
stos
push
jmp
sbb
xor
sbb
dec
out
push
adc
sub
xlat
por
xchg
mov
sbb
gs
inc
orl
movsl
or
sbb
mov
jbe
add
jp
sahf
scas
inc
out
mov
mov
sbb
xchg
scas
adc
call
jl
xor
add
fsubrl
xor
rolb
mov
in
pop
shrl
cltd
in
sti
push
jns
inc
push
jo
stc
loopne
or
xchg
or
sub
or
xchg
or
loop
sahf
cmpsb
cmc
lock
leave
dec
adc
cmp
dec
jl
adc
mov
leave
fnstsw
outsl
inc
pop
jl
fsubl
mov
jle
mov
jmp
or
sahf
dec
ror
push
lret
push
xor
rorl
push
adc
dec
cs
sbb
lods
out
shlb
fisubs
cmc
andb
sub
inc
adc
rorl
mov
outsl
js
cmp
lock
rolb
mov
pop
in
je
mov
and
inc
push
ret
adc
aaa
popl
xchg
push
addr16
ficoms
int
cmp
mov
inc
pop
mov
push
das
and
mov
das
add
or
popa
inc
push
xchg
jo
jnp
fcomip
dec
and
push
push
dec
mov
sbb
push
push
ror
sbb
inc
mov
dec
jp
int3
sub
test
jge
push
repnz
sbb
xor
xchg
mov
jmp
mov
gs
dec
sub
and
sub
iret
ret
or
js
mov
push
lea
pop
cmc
cmp
sbb
mov
icebp
cmp
jmp
movsl
xor
or
repnz
push
pusha
repnz
cmp
cmpsl
pop
push
and
mov
cmp
cmc
pop
jp
pushw
dec
jb
rcrl
stc
lods
jae
cmp
int3
mov
cmp
arpl
aam
mov
test
int3
gs
and
cmpl
inc
mov
in
dec
jp
jmp
push
dec
add
xor
or
mov
pop
sbb
mov
inc
cli
dec
dec
and
es
or
fadds
sub
xor
cmp
jl
es
cmp
sbb
inc
data16
sbb
enter
cs
mov
cmp
and
sbb
mov
jb
adc
push
mov
and
cmpsb
inc
push
rolb
sbb
lcall
shll
popa
les
bnd
inc
arpl
in
sub
or
loop
pop
mov
push
out
data16
cmp
int
pop
lea
add
and
pusha
cld
xchg
in
inc
pushf
or
add
dec
out
adc
pop
rdpmc
ljmp
cmp
mov
mov
arpl
mov
pusha
shr
mov
stos
sub
or
mov
mov
aad
stos
push
fisubrs
xchg
xor
jb
pushl
jl
mov
imul
xchg
add
lods
orb
frstor
push
sarb
ret
dec
scas
add
jo
aam
fcomi
enter
dec
sti
idiv
mov
adc
inc
stos
dec
rclb
xchg
mov
fimull
xchg
popa
inc
mov
fidivl
mov
call
jp
jl
fdivrs
push
lret
mov
mov
xor
jge
aaa
sahf
xchg
mov
add
mov
mov
dec
ret
cli
outsl
push
aad
and
pushf
mov
pop
sub
pusha
push
leave
mov
mov
mov
das
pop
test
orl
rolb
xor
jmp
stos
cltd
aaa
mov
and
sbb
sbb
rcr
aam
mov
xor
shll
dec
mov
mov
adc
sti
or
pusha
jl
and
cmpsb
cmpsb
mov
sbb
ret
cmpsl
dec
jns
loope
stos
outsl
cmovb
sbb
inc
inc
and
jbe
mov
test
or
jbe
sbb
xor
mov
jl
loop
leave
dec
negb
jb
xchg
scas
fwait
ret
and
orl
iret
push
nop
xchg
in
pushf
stos
shlb
icebp
cmpsb
jb
jl
xchg
aam
xchg
shl
in
int
stc
cltd
xchg
insb
dec
push
shlb
lea
push
outsb
mov
adc
jp
sub
stos
fldenv
bound
cld
outsb
rcrl
mov
cmpsb
or
push
scas
fwait
jp
fsubrl
lret
int
test
fwait
push
pop
or
lret
test
inc
cmp
pop
iret
cmp
adc
lods
js
jmp
mov
mov
jnp
push
xchg
and
cmp
adc
insb
sbb
mov
addl
movsl
pop
fs
xchg
inc
fmulp
pusha
jmp
movsl
xorl
dec
pop
sti
jp
inc
repz
dec
mov
bound
mov
insl
gs
ss
mov
xchg
xor
cmpb
loopne
xor
push
mov
sbb
dec
imul
out
or
adc
leave
pop
insl
pusha
shl
sub
xchg
push
mov
ljmp
mov
repz
jae
pusha
pop
push
inc
aad
xchg
pop
cmp
push
lahf
jle
add
pop
cwtl
adc
ds
gs
rcr
and
inc
lret
movsl
movsb
and
das
mov
mov
jns
les
mov
imul
xchg
cmp
lret
movsl
mov
fdivl
into
lds
xchg
sbb
into
inc
in
std
push
fimuls
mov
add
inc
adcl
fsubs
mov
je
or
push
enter
adc
leave
add
mov
and
stos
loope
xor
xor
cmp
xchg
lds
or
icebp
add
mov
pop
adc
lahf
jecxz
cmp
enter
aad
mov
in
mov
mov
sahf
push
push
fsubl
cmp
jno
fldt
xchg
pop
add
adc
ret
iret
cmc
or
ret
popf
cwtl
fadds
mov
or
inc
adc
or
mov
and
aad
xchg
fs
std
lret
test
gs
mov
cli
jge
stc
outsb
push
subb
lds
push
incb
inc
cltd
fidivl
popf
xor
pop
mov
sbb
mov
cmpsb
adc
xchg
push
pop
sub
jns
dec
cld
push
xor
cmp
cmp
push
aas
adc
adc
or
mov
scas
xchg
mov
and
sbb
aas
push
jno
in
or
push
shl
mov
jge
outsb
lea
nop
not
insb
aaa
push
adc
add
sub
data16
mov
in
js
adc
cmp
sub
push
or
int3
xor
mov
pushf
fxch
mov
and
fdivrl
movnti
js
sbb
xchg
mov
adc
inc
sub
pop
test
lds
fimuls
sbb
icebp
push
test
arpl
pop
rolb
push
cmp
xor
pop
pusha
paddq
jge
test
xchg
inc
lds
ror
test
push
jb
addr16
jl
cmpsb
lods
into
int
dec
xchg
leave
inc
mov
jg
mov
push
inc
fldenv
in
enter
sub
inc
push
xor
inc
pop
push
popa
das
pusha
movsl
test
inc
jb
jae
and
sub
cmp
repz
inc
xchg
mov
inc
mov
pop
and
or
xlat
or
iret
dec
xchg
mov
loop
movsb
mov
sbb
mov
jp
loope
dec
fstpt
inc
sbb
sbb
dec
lret
pop
and
loope
imul
and
cltd
cmpsl
daa
xlat
cmpsl
mov
push
jae
sub
sub
or
xor
sti
iret
jbe
lret
pushf
cs
std
push
test
imul
xor
dec
cmp
push
cld
addr16
pop
fs
jp
cmp
push
sub
dec
lods
out
rorb
sub
and
push
xor
xchg
decb
jmp
dec
pop
mov
cmp
dec
jbe
jecxz
nop
jns
notl
ret
in
dec
popf
or
sub
sarl
xchg
rcr
xchg
inc
aas
dec
pop
scas
loop
mov
jl
nop
xchg
int
es
hlt
loop
mov
leave
loope
cs
popf
or
mov
and
cwtl
pop
pop
aad
xchg
and
icebp
dec
mov
je
push
scas
in
insl
test
cmp
sub
int3
mov
lret
gs
mov
push
cmpsb
dec
fwait
mov
and
popf
mov
push
push
mov
xchg
cmpb
inc
test
or
xor
lea
mov
pop
enter
sarl
lahf
cmpsb
shrl
sub
sub
cltd
mov
pop
or
adc
or
cs
or
arpl
aas
or
push
push
ret
add
cmp
fldln2
mov
jge
mov
sub
fdivrs
mov
icebp
sahf
fdivs
leave
inc
adc
mov
pop
xchg
ds
pop
sti
lea
cs
pcmpeqw
sbb
fisttpll
je
mov
sbb
cmpsl
pop
mov
es
cmp
idivl
or
popa
adc
cmp
in
lds
bound
call
sti
inc
sahf
sub
dec
leave
pusha
inc
mov
lea
leave
movsl
mov
jg
into
stos
add
xor
pushf
lcall
jo
push
and
lret
jns
repz
add
lods
pop
adc
stos
jns
jae
add
mov
dec
push
out
xchg
cmpsl
addr16
jnp
add
enter
mov
lret
mov
imul
inc
insb
jb
dec
jle
mov
push
add
ret
ret
cmp
out
bound
xchg
mov
mov
jge
or
or
ret
push
sbb
repz
sub
add
insb
pop
pusha
xor
pop
sbbb
sub
subl
ss
inc
dec
sbb
imul
cwtl
xrelease
xor
mov
jge
repz
pmaddwd
shll
lcall
in
lods
jmp
aam
mov
leave
sbb
enter
mov
lea
out
mov
mov
fdivp
push
loop
jb
out
mov
scas
cmpsb
in
lret
lret
popf
mov
loop
sub
sub
hlt
nop
in
mov
push
jmpw
pop
push
cltd
lcall
in
jecxz
jae
push
adc
mov
mov
nop
xchg
xor
leave
adc
sbb
xchg
xchg
repz
sbb
cmp
jecxz
test
sub
or
add
push
pop
mov
popa
shrl
pop
leave
cs
xor
cld
add
push
dec
inc
pop
jns
xorl
mov
fcomi
lds
mov
popa
jo
enter
push
test
in
in
inc
movsb
or
fisttps
icebp
push
les
or
pusha
in
test
pop
sub
jns
add
fldt
xor
xchg
push
cwtl
cmp
push
lock
dec
pop
xor
test
rcr
pop
mov
cld
loopne
jmp
and
das
adc
cld
pop
inc
mov
mov
lret
aad
repnz
adc
aaa
or
lea
clc
xchg
dec
add
sbb
in
repz
inc
push
sbb
xor
ktestb
test
in
sbb
subb
dec
pop
xor
cld
mov
add
addb
xor
mov
pushf
imulb
std
test
flds
or
jp
lods
mov
js
out
pop
jmp
jo
jge
xor
sub
aas
push
pop
in
pop
push
xchg
mov
fiaddl
popa
cwtl
shrl
std
and
sub
lea
jge
addr16
ja
or
mov
mov
lock
cwtl
hlt
mov
sub
inc
push
lea
push
movsl
lcall
adc
push
pop
push
imul
pop
add
fstp
stos
insl
jmp
fcmovbe
lcall
test
xlat
fucomi
mov
push
mov
fsubrp
subl
outsb
stc
sbb
aad
ljmp
outsb
test
push
test
sarl
inc
shrd
imul
sbb
xchg
mov
shll
add
adc
xchg
cmp
scas
popf
jb
pop
pop
daa
mov
jae
jb
jl
mov
xor
loope
out
mov
inc
push
fadds
push
lock
mov
adc
mov
xor
mov
bswap
dec
xchg
mov
div
aaa
adc
cltd
hlt
je
push
jae
leave
lock
out
daa
add
cmp
mov
das
subb
add
addl
popa
movsl
sub
xchg
daa
sub
and
xlat
jb
clc
xchg
push
test
sub
or
mov
adc
pop
lea
adc
pusha
outsb
jp,pn
xchg
popl
mov
xchg
xchg
mov
pop
dec
jp
mov
jecxz
les
mov
add
inc
jne
rol
popa
cmp
pop
inc
adc
jne
je
leave
call
xor
cmp
and
sub
adc
mov
cmp
std
xchg
inc
hlt
mov
sbbl
out
adc
xlat
or
sahf
call
mov
cmc
mov
loope
mov
pop
mov
jge
stc
push
push
dec
mov
inc
pop
cmp
or
gs
jle
shrl
add
popf
mov
xchg
push
mov
fstpl
and
out
mov
mov
adcl
jle
xor
pop
mov
incl
cmpsb
bound
dec
out
push
lahf
shrb
cmpsb
or
cmp
mov
insl
sub
pop
push
dec
pcmpeqw
push
jbe
and
sahf
mov
fstpl
cmp
add
imul
mov
je
push
cmp
sbbl
mov
or
enter
sahf
add
lods
sti
push
mov
mov
aam
leave
repnz
xchg
xchg
xor
into
mov
add
mov
push
cs
sub
jmp
mov
inc
stos
mov
inc
push
add
push
lock
push
mov
xor
pop
xchg
cmc
scas
test
or
rcrb
js
outsl
dec
pop
inc
mov
sub
add
pop
pop
cmp
fld
dec
subl
lret
push
es
in
push
outsb
pop
das
ljmp
mov
inc
pop
lds
mov
hlt
cmp
lds
mov
dec
aam
lods
mov
rcrb
mov
repz
mov
lret
lds
jmp
fisttps
cli
fistl
cmpsl
stos
ror
adc
ljmp
imul
jb
and
jl
insb
pop
push
xchg
into
push
test
mov
popa
push
jnp
push
inc
push
fimull
lock
dec
int
mov
sbb
sahf
sub
enter
xor
pop
loop
sub
orb
test
test
xchg
cmp
rolb
lahf
mov
lret
cmp
aas
push
mov
lret
cmp
cmp
bound
add
pop
fmul
rclb
sbbb
and
mov
mov
repnz
ja
add
in
int3
movsb
mull
push
sub
mov
sub
xchg
roll
adc
add
xor
iret
loope
orb
push
dec
mov
mov
fwait
aas
lds
xlat
xlat
sarl
pop
testb
ror
adcl
push
inc
push
adc
pop
imul
outsl
imul
enter
loope
dec
inc
and
jmp
jo
dec
ret
cmpb
sbb
inc
lea
cmp
stos
pop
sub
add
mov
mov
or
jl
cld
pushf
push
xor
cmpsl
out
ljmp
movsb
cmp
jmp
pop
mov
test
test
xchg
je
pop
and
and
cmp
negl
enter
pop
adc
inc
bound
fimuls
roll
lahf
xor
dec
add
movsl
add
ret
pushf
out
fwait
aam
cmc
pop
ljmp
add
inc
icebp
popf
push
filds
cmpsb
pop
in
mov
pop
mov
push
xchg
jbe
mov
push
push
icebp
jmp
mov
ror
loopne
rorl
subl
loope
sub
daa
pop
les
ja
mov
jg
push
in
mov
outsl
push
lret
sbb
push
out
xor
xchg
test
js
xor
in
aad
or
mov
sub
ljmp
lret
enter
clc
mov
sbb
inc
and
cmpl
aas
and
cli
jno
xor
xchg
out
sbb
subb
add
adc
add
pop
insb
fwait
test
xchg
and
aaa
pop
dec
sbb
lea
cmp
test
or
dec
or
push
fs
and
mov
aam
pop
lock
in
xchg
mov
pop
push
fcoml
cmp
ljmp
mov
sub
mov
test
mov
and
aaa
sbb
movsb
rclb
fcomp
mov
jo
and
mov
movl
in
and
mov
in
loopne
rcrb
cmpsb
popa
das
loopne
pushf
xlat
mov
jns
xchg
imulb
shr
push
xor
sbb
insl
or
add
roll
push
lods
pushf
or
sti
int
xchg
and
into
jge
mov
call
sub
ficomps
dec
cld
inc
movsb
mov
jb
test
xchg
stc
xchg
and
in
jecxz
orb
or
mov
aaa
dec
es
sbb
or
aas
sarb
enter
iret
insl
pop
movsl
in
dec
les
mov
mov
jo
dec
sbb
pop
sbb
push
or
push
popa
cltd
pop
jg
rorl
addl
fwait
cmp
adc
addl
sbb
das
push
daa
fnstenv
mov
icebp
sarb
mov
add
xchg
mov
repz
push
or
es
mov
imulb
das
push
xchg
xor
leave
push
push
imul
mov
push
iret
out
enter
aam
mov
imul
rep
and
in
les
xor
adcl
shr
loopne
out
in
xchg
testb
inc
pop
les
jge
xor
push
jle
enter
imul
rorl
mov
push
mov
push
inc
dec
jl
dec
push
inc
mov
rorl
test
mov
pop
inc
pop
cld
in
pop
insl
xlat
xor
inc
sbb
sahf
inc
cmp
cwtl
mov
adc
sahf
add
mov
jl
das
adc
add
dec
ret
add
dec
in
out
xor
cmpb
mov
sub
pop
gs
or
daa
js
or
xor
sti
fidivrl
sar
aam
xor
addb
adc
jge
sbb
les
push
sub
or
pop
mov
cs
push
andl
aaa
fmull
cmpb
xor
xor
jbe
pop
cltd
sub
aaa
fldl
mov
sub
in
push
loopne
gs
cmp
sbb
adc
mov
pop
or
test
test
loope
fucomp
shll
lods
cwtl
sbb
in
cli
xchg
dec
int3
shlb
dec
ljmp
fldcw
dec
cmpb
cwtl
test
in
dec
iret
jl
loopne
mov
fwait
ds
adc
sub
adc
push
loope
jnp
popa
xchg
jo
call
add
adc
mov
leave
sub
lahf
outsb
xor
cmpsb
mov
idivl
movl
fwait
aad
push
pop
add
in
imul
sub
aaa
lock
mov
mov
push
ret
adc
inc
daa
mov
or
sub
jecxz
and
lret
sahf
lcall
push
push
sti
xor
lret
scas
dec
pop
mov
scas
pop
pushf
pop
ljmp
adc
xchg
mov
pop
mov
fcmovu
sbb
jmp
divl
cltd
and
xor
icebp
adc
pop
out
cmp
fimuls
je
mov
push
cs
leave
movsb
rclb
cmpb
cwtl
mov
inc
fsubp
in
push
shrl
inc
popa
insb
and
xor
je
repz
inc
cmc
xchg
xchg
cli
jl
stos
lret
out
sub
adc
dec
ds
mov
ljmp
mov
sarl
and
shlb
cmp
out
neg
pop
mov
inc
int3
xchg
sub
pop
xchg
out
sbb
inc
mov
mov
ljmp
popf
mov
fucomip
mov
and
jb
imul
push
jge
mov
adcl
int3
xchg
pop
scas
inc
sbb
je
adc
xor
cmp
ja
mov
sub
xchg
fldt
or
mov
outsl
xchg
jo
jmp
lret
jnp
sub
mov
icebp
in
sub
popa
int3
rcrl
mov
and
cmp
dec
mov
sub
repz
mov
outsl
jae
or
lahf
mov
add
push
push
sahf
xor
fadd
test
in
push
xor
and
lods
ja
sahf
and
mov
enter
mov
in
pop
add
pushf
adc
add
imul
jnp
pop
mov
inc
pop
mov
ss
pushf
fnstenv
mov
sub
add
mov
lds
add
mov
push
nop
xor
stos
lock
stos
mov
cmpsl
testl
pop
jb
call
test
mov
addb
outsl
add
shll
hlt
pop
mov
xlat
sbb
inc
fisttps
mov
fnstenv
inc
push
popa
test
popa
sub
shlb
dec
out
ret
push
jno
cli
xor
mov
jb
in
jge
int3
fsubrs
mov
and
xlat
push
dec
dec
adc
adc
and
add
outsl
repnz
pop
es
dec
jbe
mov
repnz
mov
dec
ja
cwtl
pop
sti
js
test
ficoms
and
jp
fsub
repz
mov
pop
popf
lret
adcb
insb
adc
sbb
mov
lcall
int
test
cmp
pop
mov
mov
inc
sbb
jl
inc
loope
jbe
dec
mov
push
xchg
ljmp
xchg
pop
mov
scas
mov
cmp
in
xor
lock
mov
xchg
cmp
pop
dec
or
jno
add
jmpw
jno
mov
xlat
adc
push
dec
js
out
fisubl
xchg
or
cmp
mov
movsb
loop
testl
loopne
adc
sbb
dec
cltd
sbb
and
xchg
push
das
mov
xchg
loopne
jl
inc
popf
jge
lcall
dec
mov
std
fistps
cmpsb
fbstp
mov
jns
jg
xor
dec
shrl
push
int
or
pop
std
mov
adc
xchg
mov
fwait
mov
imul
dec
pop
orl
mov
xchg
add
mov
test
lret
push
les
pop
mov
pop
jmp
call
call
cld
sbb
xor
mov
add
lahf
bound
cmpsl
outsl
and
fstps
mov
out
std
push
add
mov
jecxz
movsb
mov
inc
movsl
stos
mov
pusha
sub
sbb
test
dec
aaa
mov
imul
and
xchg
cmp
xchg
jnp
sti
divl
into
es
cli
cmp
mov
cltd
xor
jne
daa
in
insb
xchg
sub
stc
jo
stos
mov
out
jno
inc
sbb
add
add
add
push
stos
out
mov
mov
dec
jo
push
xchg
xchg
sub
mov
mov
adc
hlt
push
xchg
mov
lahf
fnsave
stos
mov
xchg
div
cmpl
lcallw
into
movsb
jne
mov
inc
cmpsb
xor
loopne
js
jbe
and
mov
push
jmp
add
xor
bound
mov
lahf
cld
iret
movsl
mov
jne
pop
cltd
in
int
sub
loope
data16
fildll
fistpl
dec
push
inc
loopne
call
ds
jmp
iret
ret
xchg
push
in
loope
lret
xchg
imul
sub
mov
jge
inc
das
pop
adc
lock
and
or
decb
stos
int
mov
and
lock
pop
xor
dec
cmp
nop
std
mov
pop
gs
mov
mov
aas
and
pop
imull
mov
aas
jp
jp
sbbl
inc
lds
or
and
and
test
imul
into
cmc
inc
sbb
push
dec
sub
mov
ja
rcl
into
xor
lods
sarl
jno
lret
inc
or
jb
mov
idivl
mov
pop
sbb
mov
mov
fs
fisubrl
imul
popa
cmp
shlb
shrl
xor
loope
jnp
or
pop
xorl
sub
sub
ljmp
inc
icebp
das
lret
clc
out
jl
pop
cmp
dec
popf
cmp
xchg
outsl
cli
inc
lods
out
mov
push
mov
daa
lcall
xor
test
jmp
aam
cltd
mov
push
dec
or
daa
pop
xchg
and
push
mov
loop
shrl
add
or
adc
push
test
add
mov
inc
not
sub
std
adc
pop
and
and
pop
inc
or
xor
add
cmpsl
push
lahf
xchg
outsb
cmpsl
push
cwtl
adc
dec
rolb
adc
movsb
ss
ret
cmpl
mov
into
push
int
fdiv
pusha
cld
xchg
cld
dec
imul
das
mov
jne
addr16
sbb
mov
cli
cli
pusha
or
movhps
add
add
or
iret
xlat
adc
sarb
aad
enter
incb
mov
xchg
and
notb
scas
mov
mov
call
dec
iret
pop
inc
push
push
xor
jl
mov
inc
add
hlt
mov
sub
mov
aad
ja
or
push
lods
inc
fistps
push
subl
push
jp
mov
adc
fisubrs
leave
adc
popa
into
lock
fs
pop
enter
je
lods
loopew
pop
add
sbb
test
inc
mov
sub
hlt
mov
rclb
cmp
pop
xor
xor
push
jnp
sbb
jo
push
inc
sub
pop
mov
dec
insb
jg
imul
pushf
and
stos
js
nop
aad
incl
jle
jno
xchg
cmp
icebp
addr16
mov
arpl
jg
jp
mov
cltd
jae
jbe
mov
mov
rcrb
out
push
xor
ja
outsb
jno
sbb
fld
mov
pop
div
adc
adc
insl
jno
mov
jns
stos
xor
mov
mov
push
cmc
pmaxsw
jbe
ljmp
inc
lds
add
fnstenv
lahf
or
mov
cmpsl
adc
and
inc
aas
mov
pushf
stos
notb
fmuls
imul
pop
test
mov
mov
stos
xlat
cwtl
test
movsb
push
push
repz
pusha
mov
jge
stos
sahf
outsl
add
mov
push
aad
movsb
lods
xor
imul
mov
cmp
and
je
pop
xor
push
adc
lods
daa
mul
fsubrl
jg
rol
test
movsl
lea
in
adc
inc
icebp
es
push
and
fsubrl
and
push
jge
cmp
aas
outsb
adc
pop
mov
sti
jl
and
ret
cmp
gs
cmp
movsb
sbb
test
stos
jge
push
pop
sub
mov
dec
mov
and
ljmp
mov
mov
jo
mov
fnstenv
push
inc
test
call
loop
test
mov
ds
pop
cld
nop
sub
cmp
cmpsl
icebp
pop
hlt
cmp
lods
dec
add
xchg
les
nop
sbb
push
nop
js
adc
push
int3
orb
pop
adc
pushf
xchg
andl
call
popf
push
push
mov
adc
pop
jne
push
mov
ret
loop
inc
jnp
gs
lods
mov
sub
lcall
dec
mov
cmpsb
jno
out
aad
push
push
popaw
cs
mul
hlt
dec
add
rorb
bound
les
adc
push
scas
add
je
movsb
sbb
mov
data16
pop
dec
or
mov
adc
fcomi
mov
add
mov
and
or
inc
popa
mov
xchg
push
sub
cltd
dec
and
inc
outsb
cwtl
fimuls
push
inc
jp
sub
mov
cmp
cmpsb
dec
adc
mov
clc
dec
mov
sub
inc
pop
inc
dec
xchg
push
add
in
inc
pop
iret
rcll
mov
lods
ljmp
push
ffree
inc
cmp
or
shrb
push
xor
lret
fstpt
outsb
jg
enter
adc
push
mov
les
mov
in
cs
xor
xchg
jnp
in
stc
testb
movsb
popa
ds
repz
ds
mov
pop
push
push
rclb
lea
divb
pusha
mov
and
movb
mov
shrl
fnstenv
iret
and
arpl
aam
xor
mov
pop
out
enter
movsb
push
out
add
and
pop
or
dec
stos
mov
mov
or
xor
mov
jno
and
pop
and
decl
adcb
sti
ja
loopne
inc
out
sub
push
jg,pt
lahf
adc
daa
mov
or
lahf
and
mov
cmp
mov
mov
ficoml
inc
xor
xchg
mov
data16
std
push
or
or
ficomps
adc
jp
shll
mov
int3
add
push
xor
pop
sbb
mov
ljmp
ss
pop
push
push
hlt
bnd
sbbb
repz
xlat
in
popa
jo
lahf
out
aad
icebp
inc
add
sub
mov
add
lret
test
inc
push
push
cmp
cs
xorl
adc
fnsave
xchg
inc
pop
pop
out
xchg
cmpsb
bswap
dec
sub
addr16
fsts
or
fs
idivl
out
xlat
xor
xor
inc
fistps
mov
pushw
outsl
cld
add
rolb
into
roll
out
ficompl
jnp
repz
dec
sbb
fbld
fs
adc
dec
mov
or
xchg
in
push
xchg
arpl
rcrl
sub
mov
xchg
dec
jns
pop
jo
mov
mov
and
jae
clc
xchg
xchg
dec
aam
push
in
into
mov
inc
push
andb
push
enter
rcl
xor
rol
jle
inc
movb
mov
pop
cmp
cltd
pushw
mov
and
roll
fwait
ss
pop
cmp
out
negb
or
std
inc
popa
push
jmp
jbe
ja
or
jmp
ret
stos
ss
imul
xor
cwtl
icebp
sub
pop
push
inc
das
jg
mov
add
mov
pop
pop
insb
inc
mov
cmp
jb
inc
shlb
adc
fs
lcall
or
clc
fistps
add
sbb
test
adc
adc
push
add
int
jecxz
cld
pop
test
std
xor
aad
mov
lods
mov
mov
mov
pushf
xor
jmp
xchg
push
mov
pop
pushf
pop
pop
cmp
push
sbb
xchg
cmpsl
cltd
out
jecxz
icebp
mov
outsl
movsl
rorb
dec
jno
mov
cmp
mov
and
mov
mov
stos
dec
mov
mov
scas
pop
das
cli
lret
stos
rorb
or
jne
loope
in
xor
sub
lods
adc
arpl
ja
xchg
popf
pmulhuw
lds
adc
or
and
cmp
mov
inc
scas
xlat
ret
pop
fnstcw
sub
rcr
leave
dec
push
mov
mov
lods
ret
out
dec
push
adc
aaa
rorb
mov
insb
push
enter
je
lods
lea
jle
mov
out
jbe
sete
fisttps
add
ljmp
push
stos
adcb
and
adc
sub
sbb
movsl
divb
or
cmp
js
ja
ret
mov
add
mov
dec
cld
jp
das
ror
ret
push
push
test
aaa
add
rcll
mov
adc
inc
loope
mov
mov
outsl
jbe
jo
mov
cmpsb
pop
loope
fisubs
rorl
pop
pop
jb
pusha
int3
mov
jmp
jle
lock
stos
cmp
sub
lods
add
in
pminsw
push
loopne
fimull
test
mov
push
cmc
aam
fldl
outsl
clc
mov
push
adc
sbb
push
imul
cmpsb
imul
push
data16
push
mov
push
testl
mov
push
mov
cmpsb
daa
cmp
xchg
jbe
in
jl
mov
insl
ljmp
push
sub
in
mov
loop
popa
adc
mov
add
inc
pop
inc
cmc
cmc
clc
or
ss
mov
sub
neg
mov
push
sub
mov
lret
pop
aad
fyl2xp1
mov
arpl
or
test
lret
inc
xchg
mov
bound
ret
xor
js
xchg
mov
push
lods
ljmp
cmp
add
xchg
icebp
iret
clc
add
test
push
add
imul
dec
sbb
pop
xor
mov
mov
and
rcll
insl
push
mov
repnz
std
es
mov
mov
adc
lock
dec
add
jo
add
sbb
repnz
jae
mov
je
lods
fs
mov
sti
dec
xor
cmp
pop
mov
xor
add
mov
mov
lahf
sbbl
push
jno
test
lahf
jl
mov
cli
stos
mov
setge
sub
sub
jmp
adc
push
daa
aas
cmp
xor
or
in
jle
mov
xor
mov
jl
aaa
test
scas
dec
mov
arpl
gs
mov
movsb
ret
ret
fdiv
jmp
ficoms
xor
cmp
aaa
repz
out
push
xchg
fs
cmpsl
pop
dec
aam
aaa
fldt
pop
pop
inc
pop
jne
and
add
inc
add
add
imul
outsb
pop
out
push
and
jge
mov
mov
mov
out
mov
popa
mov
movsb
aam
imul
fistpll
shll
pop
ljmp
pop
mov
out
mov
adc
push
mov
out
jbe
mov
add
bound
or
cmp
rcll
cmp
test
dec
fs
xor
dec
push
ret
popa
jnp
push
add
lret
div
inc
xor
and
jae
les
icebp
jge
dec
and
jns
stos
mov
add
cmp
dec
out
lods
inc
ja
add
adc
popf
test
add
scas
fadd
jae
xor
imul
mov
mov
jne
mov
adc
add
jno
push
and
lret
cmpsb
mov
call
stos
cmp
and
test
mov
clc
adc
shlb
push
mov
jbe
arpl
sbb
pop
aas
rorb
cmp
pop
insl
inc
sub
lods
push
call
push
sbb
adc
lret
xor
sbb
adc
mov
shlb
das
outsb
sti
sbb
mov
lcall
out
jno
enter
mov
loop
xor
shl
add
cmp
cmpsl
add
cmp
js
sub
fcomp
aam
or
sti
aad
pop
jmp
lahf
jns
scas
sar
cwtl
out
mov
xor
push
loopne
rcrl
push
sarb
cmp
dec
mov
movsl
jns
rclb
adc
mov
shll
inc
sub
mov
cld
jne
push
in
cmp
mov
scas
mov
push
jno
mov
and
andl
pop
inc
dec
icebp
mov
sbb
incb
push
mov
mov
sub
inc
xlat
sbb
mov
mov
mov
es
cld
or
in
dec
adc
popa
subb
loope
cli
add
mov
pop
clc
pop
push
inc
xchg
push
mov
inc
lods
insb
ljmp
ljmp
cld
les
fdivr
push
cltd
aad
pop
cmpsl
arpl
xrelease
jmp
test
pop
mov
mov
jmp
jmp
mov
add
fs
jb
bswap
bt
aam
lahf
movzbl
btr
pushf
movzbw
not
shr
setle
imul
rcl
lea
and
pusha
lea
not
movsbl
or
mov
jmp
call
call
decb
sbb
and
or
adc
pop
sbb
adc
or
bound
imul
xor
fisubl
hlt
ror
repnz
xlat
lcall
jno
or
push
and
hlt
ret
je
adc
rolb
inc
pop
mov
inc
xchg
mov
xor
scas
test
fldt
xchg
push
in
xlat
fwait
adc
bound
nop
mov
cli
out
xchg
and
mov
add
inc
gs
jb
insl
gs
jb
arpl
lea
call
cmc
cmp
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
je
arpl
insb
insb
push
outsl
jae
add
inc
gs
jns
popa
jae
add
add
push
imul
add
push
imul
outsl
outsl
imul
pushl
mov
call
mov
call
jmp
add
inc
gs
dec
inc
imul
xchg
xchg
mov
bswap
mov
mov
push
mov
call
add
push
imul
popa
jae
inc
add
into
insl
add
add
pushf
pusha
pushf
repnz
pushf
jmp
lea
jb
sbb
mov
stc
add
sar
call
add
dec
insl
popa
addr16
imul
addr16
outsl
jbe
add
call
pushf
pusha
push
adc
movb
mov
lea
jae
neg
dec
shrd
pop
sbb
lea
pop
sub
mov
call
mov
pusha
push
mov
pushf
movb
movb
pushl
ret
add
inc
gs
insb
imul
je
movzbw
pushf
mov
movzbl
cwtl
setp
call
add
push
gs
imul
outsl
jb
fistps
lret
sbb
daa
lds
mov
xchg
sub
sbb
and
mov
inc
or
or
ja
test
outsl
imul
ret
cmpsl
mov
out
push
shrb
xor
out
test
or
frstor
jmp
bound
out
das
shl
lds
xor
arpl
jns
pop
dec
stos
dec
mov
mov
mov
in
loop
xor
inc
cmovg
test
add
add
gs
or
not
add
neg
rol
mov
pop
ret
pushl
pushl
popl
pushf
movw
pushl
ret
rep
xchg
bswap
mov
xchg
setne
movsbw
call
add
inc
push
js
inc
add
mov
pusha
movl
mov
pusha
lea
jmp
pushf
stos
mov
mov
pushl
mov
lea
jmp
cmp
test
cmp
push
lea
jae
jmp
fldl2t
stc
xor
rcll
int3
addr16
pop
mov
xor
outsb
popa
js
lret
cmp
out
dec
xorb
xor
mov
mov
cmp
in
inc
cmp
out
mov
je
inc
xchg
lret
daa
mov
pop
shll
or
cmp
in
dec
stos
fidivrs
fisubrs
popa
push
jp
shll
fildl
lea
in
or
sarl
sub
mov
mov
add
xchg
sub
mov
scas
push
push
xor
push
sbb
or
pop
aam
adc
sbb
jo
xor
add
jecxz
mov
or
bts
jne
xchg
lahf
xlat
pop
fists
jp
pop
push
or
mov
jmp
dec
xchg
inc
pop
mov
cmp
mov
arpl
sahf
pushf
lods
mov
xchg
push
jg
xchg
in
test
jle
pusha
jecxz
mov
mov
jbe
flds
jnp
pop
pop
push
shll
and
lahf
sbb
adc
fimull
and
inc
int
xchg
xor
lahf
pop
pop
sbb
repnz
or
push
cld
mov
fidivs
ljmp
dec
jge
int3
push
mov
inc
mov
lea
aas
lock
xor
mov
and
popa
or
jl
lahf
sub
ffreep
lods
jae
shll
xchg
mov
lds
pusha
shl
mov
int
dec
mov
dec
call
add
mov
xchg
les
push
inc
adc
out
mov
or
jp
jmp
daa
ja
sarl
popa
rclb
mov
punpckhdq
xchg
mov
out
subb
xor
adc
out
fsts
add
pop
cld
test
xchg
jp
das
adc
sbb
mov
adc
push
cli
dec
outsb
in
ret
test
imul
sbb
fisubrs
insb
rcr
int
mov
int
xchg
pushf
test
mov
push
cmp
xor
inc
jge
jno
cmpsl
push
lds
movsl
lcall
push
inc
mov
or
jbe
jb
jno
aaa
jns
xchg
pop
mov
cs
cmp
cmpsl
dec
mov
das
test
push
movsl
xor
std
pop
dec
mov
xor
icebp
pop
nopl
xor
pop
call
mov
mull
adc
xor
sbb
testl
mov
xchg
out
pusha
add
lcall
mov
push
int3
insl
add
mov
movups
mov
jb
or
lock
sbb
sub
xor
lods
and
mov
mov
popf
push
test
dec
sub
mov
or
jae
jmp
movsl
sub
pop
xchg
adc
rcl
add
sarl
push
mov
sbb
sbb
xchg
pop
mov
scas
mov
mov
xchg
xchg
push
in
jmp
dec
lock
jmp
sbb
jns
jge
jge
adc
mov
aad
jge
lods
cmp
pushf
ja
ficoms
sti
loope
xlat
out
dec
mov
leave
add
cmpsl
movsl
sti
jnp
addb
std
inc
cli
pop
lea
ds
dec
test
sbb
push
test
outsb
pop
xchg
mov
fstl
sbb
xchg
jbe
dec
pop
pop
fdiv
sub
push
mov
xchg
dec
jne
repz
mov
cmp
jbe
loopne
dec
push
je
les
aas
jnp
sbb
mov
bound
rolb
movsb
gs
add
inc
adc
jp
xor
sbb
repz
pusha
mov
sub
adc
cli
aad
cwtl
mov
outsb
jno
push
mov
popa
leave
test
andb
jbe
sti
mov
pop
add
xchg
outsl
lea
jne
pop
cld
inc
pusha
rolb
xchg
imull
jecxz
push
stc
xlat
ds
push
sbb
lea
test
adc
mov
arpl
pop
iret
sub
rorb
ss
ja
sbb
into
cwtl
mov
cmp
shl
dec
aaa
and
sarb
jmp
dec
in
test
mov
push
mov
insb
mov
ljmp
popf
inc
fisubrs
mov
pop
leave
cmc
jo
ret
jnp
cmp
fcmovb
loop
xchg
inc
cltd
jne
push
mov
or
test
xor
pop
mov
addr16
shlb
adc
mov
jg
mov
jge
cmp
jg
loope
xchg
jns
bound
sbb
push
pop
out
inc
out
mov
cmp
addr16
repnz
stc
dec
ss
adc
or
cmp
dec
dec
add
lret
iret
cmp
mov
push
daa
pop
push
dec
adc
cli
inc
xor
jns
inc
stc
jne
adc
dec
ljmp
mov
lock
jns
imul
je
jns
inc
fxtract
in
xchg
add
xor
add
scas
aas
jno
sbb
scas
or
cmp
sbb
roll
bound
add
imul
cwtl
xor
sbb
rorl
and
fsubs
in
sbb
cli
lds
cmp
push
xchg
in
scas
stos
out
pop
mov
dec
push
push
cmp
xor
mov
iret
mov
arpl
fs
out
push
adc
push
leave
mov
fs
push
aaa
inc
leave
pop
fmull
push
sbb
ja
or
test
out
aas
nop
push
and
dec
idivb
pop
cmpsl
leave
xor
add
insl
and
insl
iret
popf
mov
das
orl
fsubrs
sub
xacquire
cmc
mov
mov
rcrb
mov
lret
pop
mov
outsb
mov
jnp
pop
adc
cwtl
jbe
gs
dec
test
stos
mov
mov
rclb
mov
mov
int3
leave
and
lret
sahf
lods
mov
jns
cwtl
pusha
adc
fisubs
push
outsb
or
lcall
xchg
lret
xor
fbld
sub
ss
adc
xchg
adc
sbb
or
mov
cwtl
xor
push
jb
jecxz
stos
cltd
ja
loop
jecxz
das
sbb
fnsave
push
cmpsl
int3
ret
or
test
rcrb
push
jge
mov
pop
mov
mov
push
outsl
repnz
inc
push
push
adc
push
and
rcrb
jnp
jmp
daa
imul
xchg
add
int
insb
sub
xchg
pop
push
in
xchg
pushf
jae
int3
and
scas
into
cmp
mov
out
lds
nop
fsubp
rorl
mov
mov
cmp
inc
fdivl
push
shrb
push
icebp
pop
stc
mov
mov
jge
cmp
cmp
mov
push
in
mov
mov
xchg
add
push
or
and
sbb
std
jp
outsl
jbe
pusha
push
mov
shrb
xchg
dec
and
push
or
aaa
cmp
adc
dec
pop
dec
repz
je
sti
push
scas
pop
outsb
inc
pop
or
scas
mov
dec
sbb
mov
mov
loop
js
jp
fists
sub
push
fwait
jmp
movsl
fsubrp
pop
cmp
in
iret
sbb
sti
fsubrl
fidivs
push
lock
sbb
pop
xor
dec
adc
dec
mov
mov
cmp
mov
aam
push
cmp
xchg
jg
outsb
jp
adc
aas
mov
in
out
inc
xor
pop
scas
rorb
mov
cwtl
fistps
inc
loop
idiv
add
pushf
sbb
jge
icebp
adc
sbb
fistpll
aad
fistps
pop
mov
ficompl
ljmp
add
cli
pop
cmp
xor
cmp
xchg
sbb
in
fnstcw
fcoml
test
xchg
xor
adc
pop
arpl
xchg
fxam
cwtl
push
add
loope
and
std
call
icebp
mov
jnp
pop
in
test
test
out
mov
loop
shll
add
out
scas
fldenv
cmpsb
lcall
sbb
mov
lods
pop
push
inc
lods
aad
or
xchg
push
movsb
and
xchg
div
mov
stc
add
dec
dec
shrl
mov
xchg
fldcw
dec
lret
lods
insl
enter
jecxz
out
shr
dec
cmpsb
sti
aam
loopne
jecxz
add
dec
jg
int
lock
add
adc
cmp
and
cmc
es
test
or
jnp
push
cmp
and
fsubl
imul
and
js
leave
daa
fmul
xchg
std
leave
arpl
out
adc
sar
add
ss
sbb
sub
cmp
mov
adc
dec
xchg
jne
inc
ss
lret
push
jae
cmpsb
sub
xor
fbld
mov
stos
push
rcr
cmc
cmp
stc
mov
inc
jns
js
stos
int
jg
shrl
fisubs
maskmovq
negl
mov
mov
jg
xchg
mov
fdivrl
or
jg
lahf
mov
jl
stos
push
and
das
cmp
sub
cltd
adc
inc
or
mov
mov
mov
sub
lds
fwait
xchg
test
mov
insb
jecxz
mov
cmc
mov
inc
lods
into
adc
and
cli
stos
or
push
adc
mov
das
sub
dec
push
jp
loopne
int
insb
push
and
mov
inc
jmp
pop
test
add
jmp
jno
movsb
js
icebp
adc
loope
dec
mov
bound
mov
lea
sub
xchg
or
cmp
mov
shl
add
sahf
stos
cltd
xor
js
orl
jb
and
jns
cltd
push
hlt
xchg
cltd
or
cs
imul
ja
lret
sbb
fwait
test
dec
xchg
sahf
xchg
xor
lods
ljmp
mov
dec
adcb
push
adc
lea
lahf
aam
xchg
pop
stos
inc
inc
rol
fmull
cmc
sahf
es
arpl
sub
aad
decb
jne
addl
loopne
sbb
add
clc
xlat
adc
repnz
call
stos
call
outsb
or
cmp
popa
leave
inc
jl
dec
mov
adc
mov
mov
inc
mov
repz
shll
jno
cmp
xor
test
pop
mov
test
add
dec
into
aaa
iret
loope
adc
sahf
jae
in
shrb
add
mov
repnz
or
fstps
in
andb
clc
sub
mov
aas
stos
push
ja
adc
aam
and
int
loopne
test
ljmp
sbb
pop
cld
xor
push
mov
subps
leave
sbb
int3
xor
lcall
xchg
fiaddl
out
stos
scas
xchg
popa
mov
cs
sti
sub
test
dec
xor
aam
push
mov
inc
out
sbb
inc
mov
pusha
jbe
aaa
mov
addr16
add
mov
sub
aas
xchg
fisttpl
and
aaa
mov
pop
sahf
fdiv
jl
pusha
cmpsb
xor
inc
inc
dec
inc
push
cltd
loopne
mov
idivb
enter
loop
sahf
in
fistl
fldt
cmp
rcrl
push
scas
arpl
inc
hlt
push
test
xor
imul
jle
xchg
loope
jmp
lods
mov
mov
cmpb
das
sarl
xchg
outsb
jns
and
out
push
cmp
pop
lcall
cmpl
pop
dec
mov
das
dec
xchg
rcll
adc
mov
gs
mov
or
sbb
push
sbb
jecxz
inc
push
mov
sbb
dec
repz
pop
xor
and
sub
and
dec
add
mov
xchg
js
jg
push
cmp
add
clc
pop
push
mov
data16
inc
mov
das
fwait
shrb
fistps
lods
jo
addr16
and
pop
push
xorl
jl
movsl
call
push
int
mov
jecxz
andl
cld
shl
nop
lods
add
les
mov
push
in
pushf
loop
repnz
push
fsubrl
idivb
pop
orl
mov
out
aam
push
mov
push
cmp
fistpll
jg
shrl
adc
int3
psubsb
fisubrs
inc
aas
out
dec
daa
jns
dec
xchg
sub
and
fbstp
push
dec
adc
jmp
nop
or
adc
subl
add
xor
das
xchg
sbb
or
mov
pop
in
mov
push
sbb
mov
repz
dec
lea
xchg
push
push
stos
std
mov
add
rcrl
test
sbb
mov
insb
sbb
adc
fs
lret
inc
out
mov
loopne
fisubrl
negb
xorb
cmp
or
sub
cmp
adc
cmp
mov
aad
jp
mov
mov
test
sarb
outsl
sub
xor
cmc
fsubs
jbe
mov
cltd
dec
sti
sbb
push
adc
xor
daa
cld
vcvtps2pd
push
rolb
ss
ficomps
mull
fdivl
add
fidivs
stc
or
lea
sub
out
das
out
ret
lret
xchg
add
lods
inc
mov
sahf
mov
jmp
idivl
shll
psubusb
cmp
jg
popf
mov
sub
and
mov
fwait
sbb
cli
pop
fisubs
adc
or
or
mov
out
push
and
int
jge
jl
dec
pop
cmp
dec
xchg
jns
sub
popl
icebp
fcoml
mov
pop
mov
mov
add
testb
adc
adc
add
mov
mov
add
imull
lds
ret
mov
aad
mov
inc
js
in
icebp
sub
dec
mov
cltd
sahf
xor
sbb
lea
or
push
aam
jmp
cmp
dec
cld
xor
pop
cmp
lea
jmp
decl
sbb
mov
into
xchg
mov
lock
mov
fwait
dec
cmp
stos
lahf
add
movsl
sbb
or
cmpsb
popa
mov
mov
cmp
fnsave
repnz
or
dec
jae
mov
push
adc
nop
or
movb
xor
jno
add
cli
movsb
push
and
pop
mov
xchg
test
test
gs
aas
out
pop
outsb
pop
ret
sahf
mov
cmpsl
dec
inc
xchg
jle
enter
mov
adc
int
push
ds
ret
sbbb
sti
in
addr16
adc
cmpsl
cmp
test
fsubrp
jp
push
les
mov
inc
ds
push
xor
call
mov
or
xor
sahf
insl
jne
jmp
xchg
sbb
cli
repnz
iret
xchg
or
out
mov
cmpl
fdivrl
xor
fsubs
lea
and
dec
mov
ret
int
out
addr16
ja
push
es
gs
jecxz
lods
insl
dec
mov
add
js
pop
jmp
mov
dec
fsubrs
ja
les
test
jl
inc
push
pop
lock
xchg
dec
inc
out
rcr
add
nop
mov
out
inc
fwait
bound
nop
in
add
fidivrs
jle
xor
adc
insb
ret
insl
xlat
daa
popf
fisttps
cltd
fs
movsl
insb
mov
mov
aas
mov
out
test
sbb
decl
aad
cmpsb
cmp
sbb
xchg
cmpl
jg
jge
loope
das
divl
loope
mov
mov
jg
cmp
jmp
xchg
cmpb
call
pop
sub
xor
lods
cmpb
add
in
mulb
xchg
dec
imul
sub
push
test
fdivl
aad
xchg
and
out
jae
enter
inc
mov
clc
out
adc
push
addr16
fildll
je
mov
inc
sub
sub
or
xchg
cmpl
fstl
out
sub
jmp
fst
flds
orb
lret
mulb
pop
or
pop
mov
clc
push
std
pop
inc
and
mov
push
lcall
push
add
lea
insl
lock
inc
int
or
gs
ss
scas
mov
jne
movsb
mov
xchg
cmp
inc
and
cmp
repnz
pop
jno
push
add
mov
xchg
mov
add
push
jmp
push
mov
pop
mov
cmp
out
lock
xchg
xchg
sub
inc
iret
icebp
int3
mov
mov
xor
repnz
pop
lea
mov
jge
xor
mov
push
push
sub
lret
pop
flds
pop
mov
scas
jecxz
data16
adc
xchg
shll
pop
adc
xor
inc
lret
aaa
lea
cmp
push
popa
cmp
mov
adc
imul
xchg
inc
and
bound
pop
inc
jp
imul
dec
cmp
stc
jecxz
xchg
lds
xor
adc
jp
or
popl
loopne
push
aam
xor
mov
iret
ret
and
sbb
test
sbb
clc
insl
hlt
test
bound
pop
jb
adc
imul
fsts
and
mov
mov
adc
add
jbe
arpl
lret
loopne
mov
push
shl
and
xchg
insb
stos
pop
or
xchg
lret
lret
ret
out
jns
out
xchg
pop
xchg
mov
stos
movsl
adc
out
add
repz
das
mov
cmp
jg
dec
in
mov
sbb
push
insl
iret
cmp
lock
mov
sti
shll
fcomps
dec
mov
mov
jno
lods
pushl
pushf
add
sub
nop
and
xor
mov
inc
and
xchg
jge
movsl
xchg
fldt
sub
and
and
negb
sbb
and
pop
cmp
cs
mov
mov
pop
je
scas
gs
aam
ret
and
and
dec
decl
lods
daa
pop
ret
jge
rcrl
xor
or
jle
jns
push
push
fbld
mov
add
xchg
ss
daa
leave
inc
rcl
inc
mov
and
and
mov
or
or
test
cwtl
or
in
push
xchg
jmp
test
out
pop
xor
imul
mov
outsl
mov
test
lret
dec
dec
imul
sub
adcl
orl
mov
cmp
mov
insb
cmc
mov
or
add
mov
ds
rorb
shlb
rcrb
cld
xorl
cmp
ss
fcoml
repnz
sub
sub
in
lock
lret
and
scas
mov
sub
mov
mov
adc
mov
mov
jo
dec
mov
ljmp
fstp
jecxz
adc
mov
outsb
stc
and
push
arpl
adc
outsb
xor
xor
xchg
gs
call
iret
ret
add
out
mov
enter
inc
or
xor
rclb
mov
fsubr
jge
pop
jp
bswap
xor
push
and
push
push
fs
ljmp
push
jecxz
cltd
or
sahf
jnp
xor
sbb
jecxz
movsb
fwait
or
rorl
pop
xchg
insl
sti
cmp
inc
sbb
mov
cmp
sbb
scas
mov
xchg
mov
hlt
sti
pop
addr16
repnz
mov
lcall
scas
push
fwait
test
loope
mov
xor
jge
xchg
mov
pop
jg
xchg
jbe
stos
call
aam
lret
shll
cmp
sub
pop
loopne
not
scas
or
pop
sbb
add
in
mov
and
and
outsb
mov
mov
aas
xchg
inc
sub
jns
add
or
pop
cmp
movsb
mov
sahf
cmp
adc
adc
scas
shl
ret
cltd
icebp
sbb
jge
mov
test
testl
xchg
sahf
cld
xor
and
push
sbb
push
sub
leave
das
push
sbb
sti
icebp
and
dec
into
cmp
ss
push
in
sbb
shr
push
scas
inc
add
or
mov
push
jecxz
out
pop
jno
loope
rorb
pop
xchg
imul
arpl
ljmp
xor
push
and
pop
pusha
add
inc
jbe
mov
imul
mov
jnp
mov
mov
aaa
push
mov
imul
sub
dec
loopne
mov
nop
into
add
push
ss
add
das
dec
in
xor
arpl
mov
dec
push
enter
cmp
lret
pop
stos
ljmp
fimull
daa
or
addr16
push
or
xchg
xor
sub
xor
ds
push
push
cwtl
stos
push
push
jmp
les
jge
lret
pop
in
jecxz
sahf
and
mov
test
lcall
into
and
ja
stos
inc
dec
and
mov
arpl
stos
fwait
cmc
in
insl
stos
sub
dec
mov
push
into
js
sbb
xchg
loopne
ja
fwait
jno
cmp
xchg
xchg
popf
out
jl
je
adc
jmp
push
es
fistpl
inc
out
adc
pop
sub
popf
jno
hlt
sub
divb
and
js
ja
cmpsl
pusha
lcall
fisubl
cli
xlat
mov
aam
lock
scas
inc
lea
lock
and
daa
xchg
pusha
inc
add
sub
es
jnp
sub
cld
dec
and
lcall
pop
test
sub
in
mov
dec
addr16
and
xchg
push
pop
sbb
leave
std
and
mov
inc
mov
sub
cmp
add
cmp
ror
pop
hlt
push
stos
loopne
out
mov
cmp
out
jg
push
xchg
xor
inc
das
jo
repz
int
cmp
xor
cwtl
push
xchg
les
mov
push
inc
fldt
pop
add
sbb
inc
push
jp
mov
addr16
neg
inc
fbld
cs
cli
inc
lcall
inc
jl
ret
cmp
dec
xchg
jne
lods
adc
clc
sub
inc
imul
ret
into
pop
push
ret
ljmp
sub
jae
xor
out
mov
xchg
lds
mov
out
decl
push
jl
dec
and
or
hlt
ljmp
or
mov
je
jnp
jns
inc
cmpsl
sbb
fidivs
and
in
push
push
xchg
jp
arpl
jne
mov
negl
push
push
rcrl
add
mov
je
jle
add
popf
jg
mov
sub
sub
xchg
sub
xchg
adc
mov
jnp
sahf
cli
pop
jne
fs
lahf
inc
mov
lea
adc
sub
sbb
mulb
daa
outsl
lea
and
push
pop
in
mov
xlat
jge
jle
decl
jp
push
jp
pop
ret
mov
out
cmp
adc
cli
into
inc
mov
jo
jmp
pop
negl
push
pop
lods
push
insl
jae
push
push
mov
lock
add
mov
jp
inc
jbe
dec
sbb
add
and
pusha
fstp
jle
mov
push
xchg
mov
sbb
insb
pop
xchg
stc
sbb
imul
lret
arpl
lods
mov
and
mov
jnp
dec
dec
gs
popa
test
gs
inc
push
push
adc
jecxz
jmp
adc
clc
mov
addl
add
push
mov
cs
ljmp
dec
jne
jp
js
inc
push
add
into
sbb
lds
mov
push
mov
jmp
dec
dec
mov
jne
dec
jg
jbe
in
push
pop
jne
sub
addr16
sbb
adc
rcl
movsl
imul
cmp
xchg
fwait
ss
sar
pop
jmp
inc
lret
jo
mov
nop
mov
push
jns
gs
sub
adc
jle
data16
mov
stc
pop
inc
and
cltd
fisubrl
fwait
fwait
es
and
lds
aam
movsl
scas
bound
addb
cmp
leave
cmp
sub
mov
les
xlat
push
js
pop
push
and
or
in
cmc
jno
jno
mov
insl
loope
cmp
mov
push
insl
jecxz
cmpsb
orb
leave
sub
fsubs
jo
repnz
mov
pop
mov
cmpsb
push
stc
jnp
pop
fsubrs
fs
aam
aaa
or
fistl
mov
sarl
dec
xchg
and
xchg
shrl
mov
cmp
sbb
pop
mov
jo
mov
outsl
outsb
fwait
dec
mov
in
dec
mov
lahf
inc
repz
mov
mov
sbb
popa
daa
cmpsl
aaa
in
stc
add
xor
jo
xlat
lods
mov
jae
fwait
xchg
adc
scas
outsb
mov
jbe
loopne
out
mov
stos
jle
xchg
and
mov
adc
mov
push
bound
jecxz
mov
aas
leave
sbb
xchg
fcmovne
mov
lds
xchg
fisttpll
jecxz
mul
push
shlb
repz
or
std
in
jbe
sub
pop
adc
int
in
adc
cld
mov
or
lret
xchg
div
pop
loopne
mov
add
ja
outsb
pop
enter
or
xor
push
add
jp
and
xchg
or
xor
aad
cmp
mov
dec
lods
aas
push
sub
xchg
pop
movsl
mov
lds
cmc
arpl
scas
subb
imul
outsl
pushf
adc
xor
cld
jecxz
ret
pop
xchg
fstpt
mov
xor
test
and
test
xchg
scas
mov
gs
push
lds
aam
gs
push
test
xor
cwtl
loopne,pt
xlat
mov
mov
sub
insb
clc
xchg
pop
jne
mov
inc
xchg
and
lret
jge
cltd
popa
sbb
xor
sbb
push
jno
imul
push
test
xor
insl
mov
mov
loope
hlt
jl
shll
rcll
popf
int3
mov
or
mov
loopne
or
push
pop
out
cwtl
push
jno
or
push
xchg
xchg
sti
inc
mov
repz
rorl
jo
push
pusha
and
pop
sbb
cmpb
fldt
mov
xor
test
mov
inc
int
push
mov
pusha
out
call
inc
call
stc
cmp
jl
pop
dec
jnp
loop
jl
dec
mov
and
dec
sub
lret
xor
lods
inc
lret
in
pop
inc
push
dec
shl
scas
in
scas
lock
cmp
push
incb
mov
jne
ret
fidivrs
add
inc
dec
sub
mov
enter
adc
dec
lods
sub
push
xchg
sub
lock
push
in
mov
movb
fcmovu
inc
lret
xchg
jno
insb
or
stos
loopne
push
fisubrs
dec
and
mov
cmc
cmp
pop
bound
scas
imul
test
pop
cmpsl
add
push
push
nop
pop
clc
loope
and
mov
lret
adc
test
jle
xor
aaa
inc
pop
jo
mov
dec
mov
xor
and
add
fmull
stos
jle
subl
insb
sbb
push
cmp
icebp
dec
bound
cmp
mov
sub
mov
and
mov
sub
mov
fsts
data16
fistl
or
fcoml
push
nop
out
push
mov
sub
out
xchg
jne
stc
in
add
xchg
outsl
pop
push
jo
sub
repnz
mov
fstpt
ss
imul
ds
push
sub
dec
push
cs
add
outsb
pop
loop
mov
lods
push
sub
mov
add
jno
test
das
pop
add
xor
ret
sbb
cmpsl
pop
xor
mov
inc
leave
xchg
cwtl
mov
mov
lds
and
clc
ret
aam
push
xor
inc
sub
cmc
sub
es
cwtl
and
push
aad
fsubrs
mov
repz
negb
adc
jnp
mov
jo
aaa
mov
pop
adc
push
sub
pushf
in
std
rcll
xor
stos
jl
orb
mov
insb
mov
leave
adc
sahf
inc
sub
jne
outsl
xchg
loopne
mov
mov
mov
popa
addb
push
sub
dec
adc
sub
les
push
int
fcmove
call
jno
das
sub
mov
scas
loop
xchg
pop
fistps
mov
xor
out
inc
test
outsb
cmc
cs
cmpsl
mov
fidivl
pop
aad
in
je
or
scas
hlt
mov
aas
xchg
cmp
pusha
xchg
pop
cmp
xor
sarb
mov
push
sbbl
cli
pop
ret
js
push
adc
xor
loop
xor
mov
repz
arpl
add
mov
fstps
sbb
negb
inc
cli
dec
movsl
test
mov
out
pop
scas
loopne
mov
das
test
inc
mov
mov
test
hlt
popf
mov
mov
sbb
jle
test
call
sbb
push
inc
enter
push
mov
and
loope
dec
adc
fldenv
test
adc
mov
scas
cmp
push
fsts
pushf
lods
adc
fnstcw
xchg
sub
push
jb
sbb
mov
mov
add
outsl
xchg
test
or
jecxz
andb
sub
cmpsl
nop
xor
jmp
cmpsl
mov
ljmp
out
add
xchg
inc
and
cmp
sub
movsb
cli
sbb
lret
ja
jg
add
test
adc
iret
jne
sub
aas
fcoms
ss
in
imul
mov
sti
mov
popa
rcll
xor
xchg
cmp
push
sti
jns
mov
xor
lret
test
in
fcmove
pop
ret
dec
jmp
sbb
fs
sbb
inc
sbb
mov
push
movsl
cld
cli
mov
scas
outsl
cmp
jl
pop
adc
cli
xor
mov
xchg
push
enter
jp
les
jecxz
daa
lret
jne
out
les
sub
mov
addr16
dec
or
cmp
inc
lds
aas
aaa
arpl
stos
lret
mov
jno
inc
data16
xor
test
xchg
jno
or
in
test
popf
stos
push
insb
aaa
mov
add
rol
adc
inc
jno
push
and
out
and
pop
xchg
xchg
pushf
es
adc
sbb
dec
mov
leave
pop
ret
jae
dec
ret
mov
gs
sarl
cmp
stos
xchg
lret
jbe
sarb
sbb
push
out
pop
xchg
adc
adc
mov
lods
loop
pop
in
les
push
xchg
sub
lock
and
in
in
frstor
shlb
mov
incb
inc
enter
test
xchg
sbb
insb
lods
cmp
test
mov
dec
push
dec
and
and
outsl
jle
loope
lods
mov
or
icebp
out
push
addr16
lcall
add
rolb
testb
cmp
sub
or
inc
add
xor
pop
out
jnp
add
les
fsubrl
push
out
sub
jmp
pop
addr16
jmp
inc
cmp
mov
mov
rcr
outsl
dec
les
das
sub
add
test
or
push
dec
outsb
shll
out
popf
sub
push
int3
inc
je
data16
add
call
mov
xor
xchg
jecxz
les
bnd
lret
xchg
addb
test
std
and
out
sbb
loope
stos
pop
or
lods
jp
dec
bound
or
fmuls
and
xchg
jp
filds
sbb
ja
mov
mov
addr16
cmp
divb
mov
push
push
insb
adc
loop
mov
mov
jbe
js
and
movsl
lret
jb
aas
std
das
stos
cwtl
mov
mov
mov
sarl
mov
push
mov
out
mov
dec
sbb
xor
push
and
mov
pop
jne
inc
mov
das
mov
jb
in
adc
pop
pop
sbbl
aad
mov
rorl
jae
loop
cmpsb
je
jle
lea
xchg
pop
xchg
adc
je
jp
rcll
jp
mov
mov
cmc
stos
push
addr16
add
and
push
xlat
or
mov
mov
push
pop
out
xchg
jns
das
xor
pusha
pop
test
sbb
and
mov
pop
and
xchg
jmp
push
mov
xchg
or
mov
lods
das
in
push
add
insb
imul
fs
in
scas
mov
pop
call
ljmp
ficoms
mov
lret
lods
sub
mov
lock
mov
dec
clc
ret
cmpsb
mov
outsl
fwait
mov
data16
sti
js
push
mov
or
add
fldcw
add
and
in
push
adc
dec
pushf
and
pop
sbb
addb
mov
lahf
sarb
sub
cmp
pop
mov
dec
lret
jne
jne
or
inc
mov
pop
push
mov
mov
ljmp
rolb
ss
xchg
outsb
cmpl
jne
mov
lea
cmp
rcrb
les
xchg
ret
insb
mov
jge
stos
imulb
xor
je
pop
xor
cltd
lods
push
mov
pop
xchg
sahf
cmpsb
into
test
jecxz
lods
adc
mov
mov
aad
stos
cmpsb
test
fstpt
jmp
xchg
sbb
aas
mov
clc
ret
ja
mov
test
negb
adc
add
and
loopne
cli
mov
mov
push
adc
xchg
xor
cmp
and
mov
mov
fdivs
sahf
shll
mov
into
loopne
call
pop
addr16
mov
bound
into
adc
jb
adc
and
inc
mov
enter
add
shlb
ret
movb
add
and
imul
jo
push
and
xlat
gs
pop
xchg
cmp
push
sub
pop
cltd
mov
mov
loope
sub
mov
sub
ss
sub
sti
ret
cltd
les
inc
or
pushf
clc
enter
movsb
mov
inc
sub
mov
or
out
push
push
dec
xchg
imul
dec
sub
and
add
pop
cmc
cmpsl
xchg
sub
inc
cmp
and
add
sar
cmp
addl
xor
in
loopne
mov
lds
lods
cmpsl
xor
and
sahf
sbb
cmpl
mov
mov
mov
dec
nop
or
pop
xchg
push
cmp
sbb
pusha
or
sbbl
xchg
xchg
int
dec
mov
push
adc
mov
inc
fistpll
sbbb
or
loop
add
enter
cld
mov
xchg
sahf
daa
imul
xchg
mov
xchg
insl
or
mov
jae
dec
xchg
cld
fisubs
push
sub
aaa
jns
insb
orb
xor
sub
mov
popa
dec
sub
icebp
push
pushf
bound
hlt
dec
push
bound
inc
and
xchg
mov
dec
push
jbe
dec
jae
jmp
outsb
cmp
xchg
xor
scas
sti
jp
inc
aad
add
rcr
sub
aas
in
std
mov
arpl
mov
insb
xor
sbb
sub
jmp
cmp
sbbb
mov
clc
xchg
push
cmc
sbb
shlb
shll
sub
mov
in
fsubrs
ds
out
or
jnp
lret
xchg
sub
outsl
add
inc
and
shrb
rorb
xchg
std
sub
shll
fidivrl
jbe
inc
cwtl
iret
loop
fisttpll
xor
cmpsl
adc
aas
mov
xchg
mov
jae
sub
ret
mov
jle
test
xchg
sbb
mov
dec
lret
pop
add
sbb
inc
gs
jb
int
sti
outsl
and
enter
mov
fdivrl
divb
inc
icebp
sub
lret
jns
mov
icebp
stos
insl
xchg
ljmp
mov
add
push
add
mov
jecxz
xchg
push
jno
jae
cmp
jae
loopne
scas
inc
inc
fcoml
jno
sub
pusha
lahf
mov
inc
cwtl
cmpl
adcb
jecxz
je
imul
repz
fs
psrlq
andb
test
adc
rcrb
cmpsb
in
clc
jb
inc
mov
incb
lods
xchg
bound
jmp
push
leave
imul
test
sub
sbb
mov
xor
aam
sbb
test
inc
shlb
test
adc
push
clc
sbbb
call
movsl
test
inc
dec
jmp
or
std
daa
dec
cmp
cs
shll
jmp
int
cwtl
dec
mov
add
popf
xor
ror
icebp
pop
sbbl
sbb
sbb
in
push
sbb
nop
ja
aam
dec
mov
cld
sbb
jmp
or
outsl
mov
push
stc
push
dec
stc
add
sbb
jmp
add
stc
daa
pop
add
jp
idivl
loope
orl
mov
idiv
cmp
jle
pop
jbe
pop
out
in
in
push
pop
lea
and
dec
cli
pop
add
sub
mov
cs
jno
xchg
in
mov
cmpsb
je
and
fldt
sbb
sub
mov
loope
pushf
insl
cwtl
add
repz
dec
cmp
xor
rcrb
es
fstps
dec
mov
test
pushf
xchg
inc
sub
lahf
or
inc
scas
shll
mov
insl
ret
dec
shll
or
push
das
repz
pop
and
push
inc
xor
inc
lcall
or
cwtl
fmul
imul
lahf
lret
sbb
jmp
pop
lock
fs
nop
jno
mov
push
fadds
adc
lea
incb
dec
movsb
mov
test
push
push
jo
sarb
pop
add
lods
xor
in
sub
add
add
add
inc
dec
aas
loope
cmpsl
cltd
sahf
sahf
enter
je
adc
leave
ss
mov
imul
orb
stos
andb
int3
in
xchg
pop
or
test
and
sub
lods
cmp
ror
inc
or
jmp
lcall
inc
jl
movsb
mov
dec
mov
adc
fiaddl
push
sbb
fisubl
or
addr16
sarl
out
sub
mov
dec
cmp
inc
test
sbb
pop
inc
mov
les
in
es
shrl
xchg
imul
mov
stos
inc
cltd
outsb
gs
js
mov
or
sar
add
cmp
and
mov
lahf
rclb
enter
inc
sbb
cwtl
cwtl
lret
scas
sub
loop
movsl
and
aaa
push
jb
xchg
in
jo
leave
push
xchg
sti
push
popa
fmuls
lods
add
shll
shll
repz
fiaddl
clc
sbb
mov
add
loop
nop
andb
sub
fcompl
mov
jno
fdivrs
movsl
pop
pop
addr16
lds
push
mov
push
outsl
negb
in
popa
xchg
adc
lds
jne
jl
xor
int
ret
mov
sbb
jns
loope
daa
mov
ja
jle
pop
jno
pusha
mov
mov
jge
scas
pusha
fisttpll
pop
add
fstpt
cmpsl
sub
cmpsl
push
cmc
fcmovnb
data16
lcall
outsl
mov
adc
cmpsl
add
int
pop
add
pop
sub
jbe
jnp
test
in
inc
mov
push
pop
cmp
dec
test
test
in
sbb
mov
push
pop
cs
or
sti
mov
pop
loope
movsb
dec
test
jbe
pushw
adc
sahf
pop
mulb
mov
dec
lret
loope
shrl
cld
cmc
lret
add
lret
cmp
stos
xchg
pop
sub
jbe
cltd
aad
lods
lcall
cmpsl
subb
pop
cli
xor
push
test
imul
stos
loopne
das
sbb
inc
enter
sub
adc
push
fldcw
ljmp
inc
aaa
je
push
outsb
push
xorps
push
push
inc
scas
inc
inc
adc
mov
jecxz
jbe
fmul
ss
jle
push
sahf
mov
out
faddl
add
mov
jge
and
xchg
pop
add
inc
movsl
in
mov
pop
jns
imul
cltd
adc
outsl
jg
cmp
clc
filds
adc
leave
adc
and
or
sub
imul
stos
xchg
sbb
clc
mov
cmc
and
lret
push
das
add
out
stos
inc
dec
rorl
xor
lcall
lahf
xchg
daa
iret
cmp
push
aam
in
xor
push
fldcw
cmpsb
fcmovb
pop
iret
add
outsl
cltd
dec
test
xor
cmp
sbb
mov
jmp
je
xorl
jns
insb
dec
lods
dec
and
je
adc
jle
insl
push
push
xchg
push
jl
mov
out
xchg
call
xor
xchg
or
test
lahf
cmp
jne
xchg
sbb
sbb
mov
add
mov
and
pushf
mov
nop
std
sub
sarl
scas
jo
cmp
xchg
xor
ss
xchg
dec
fsubrl
adc
testb
add
scas
sarb
outsl
mov
mov
cs
cmp
xor
data16
inc
daa
or
push
int3
das
cmc
or
sub
ja
jge
and
stos
sub
and
pusha
sbb
int3
xchg
sarb
in
sub
jb
push
sti
mov
pop
imul
mov
nop
xlat
and
jne
in
aas
add
xchg
add
or
out
jp
inc
jb
nop
dec
mov
cmc
in
jle
cmp
in
jno
mov
ret
xchg
ret
or
pusha
cmp
or
bound
stos
ret
adc
push
test
pop
cmp
adc
jnp
push
repnz
jecxz
push
ficoml
roll
int
lock
in
stos
mov
jecxz
push
adc
mov
xchg
not
or
mov
adc
and
fildl
inc
sub
outsl
jb
leave
sub
xor
je
or
fwait
sub
xlat
inc
shlb
and
cwtl
pushf
pop
xchg
fistpl
jl
pop
out
sub
xor
pop
imul
jp
push
sub
bound
xchg
push
std
or
inc
xchg
shrb
cs
pushf
xchg
adc
sbb
jo
mov
mov
je
int3
xorb
sub
xlat
dec
lock
ret
mov
pushf
popf
out
xchg
pop
rol
cmc
jne
inc
jp
bsr
imul
fxch
test
jo
mov
sub
cmpsl
or
xchg
and
sbb
jno
scas
cmc
lret
roll
or
outsl
shll
xrelease
test
jmp
mov
in
cltd
add
lock
cltd
icebp
dec
fisubs
push
xor
pop
xchg
cmp
mov
cld
xchg
rcrb
jp
push
ss
popf
popf
sarl
loope
inc
je
mov
imul
xor
scas
lea
movsl
jmp
xor
dec
leave
test
clc
add
inc
aad
xor
lds
xor
pushl
imul
lock
push
gs
and
addr16
xchg
xor
cmpsl
mov
cmc
mov
es
shl
enter
pop
adc
xlat
dec
jo
leave
cli
mov
inc
dec
aas
insb
arpl
stos
xchg
nop
pusha
xor
xor
mov
ss
push
add
and
int
jno
adcl
scas
scas
xlat
imul
into
mov
rolb
cmp
and
jbe
cs
mov
testb
jmp
sbb
push
pop
jle
lahf
js
scas
mov
jmp
jbe
push
xchg
scas
hlt
sbb
sbb
push
scas
pushf
in
imull
cli
cmp
mov
jge
lcall
or
add
roll
dec
cli
js
pop
or
dec
lods
add
mov
test
and
jmp
ds
push
or
lret
dec
lret
xchg
push
sarl
rcr
sub
repz
jecxz
daa
mov
pop
unpckhps
movntq
out
sub
dec
sbb
loopne
lea
in
mov
push
lret
pop
cwtl
sbb
xor
decl
mov
xchg
bound
aam
mov
mov
xchg
adc
jl
cmpsb
data16
fwait
arpl
fwait
mov
je
mov
dec
js
xchg
movsl
addr16
push
add
ret
aam
mov
test
fsubrl
ret
xchg
or
push
inc
and
push
mov
sbb
cmpsb
sub
into
mov
mov
fstpt
jno
psadbw
ljmp
mov
xchg
roll
test
hlt
xchg
aas
dec
dec
std
xor
addr16
mov
pop
arpl
or
ret
pop
in
push
add
jg
cmp
jbe
into
add
adc
push
pop
fimuls
stc
jae
adc
loopne
add
test
leave
sbb
push
adcl
push
mov
andl
aam
jo
fcomps
call
lds
pop
adc
stc
movsl
fistpl
inc
adc
xchg
sbb
mov
cmpsb
scas
add
sbb
repz
ja
adc
xchg
sbb
lds
dec
sbb
cltd
cmpsb
stos
jnp
leave
repnz
test
add
fnstsw
mov
cmp
shlb
dec
lahf
jmp
dec
pop
div
fdivs
out
outsl
and
call
lret
mov
xor
loop
stos
aaa
shrl
pop
ret
mov
adc
loopne
aaa
arpl
fs
push
cmp
repz
es
in
popf
pop
lods
dec
das
dec
sbb
cmp
or
cmp
push
and
inc
test
or
cld
imul
adc
xor
xchg
cwtl
mov
xorl
pushf
sahf
dec
push
orb
dec
cltd
jns
inc
adc
xchg
or
sub
xor
xlat
js
sub
dec
adc
cwtl
sbb
in
insb
hlt
mov
xor
cmp
or
xorb
push
xchg
mov
push
test
into
mov
arpl
sub
xchg
and
test
hlt
inc
iret
mov
inc
xor
das
ret
leave
mov
lods
jle
test
testb
fistl
addb
fbstp
loope
nop
cli
insl
pop
pop
jmp
adc
fcoms
sbb
mov
jp
lahf
sub
jne
repz
jae,pn
or
pop
jno
or
mov
imul
lret
mov
popa
jge
sbb
imul
sub
xorl
loop
mov
fcmove
push
repnz
jmp
sahf
hlt
jle
sbb
push
and
stc
adc
and
roll
rorl
push
rcrb
int
mov
std
pop
xor
dec
jle
push
dec
xchg
pop
jnp
scas
ficoml
adc
mov
cmp
dec
outsl
not
mov
xchg
stos
aam
ljmp
ljmp
les
bound
and
fwait
lea
cld
mov
push
insl
xor
xchg
push
dec
notb
cmpsb
xchg
aam
cs
repz
popf
mov
mov
addr16
dec
mov
or
mov
hlt
or
mov
xor
pop
mov
adc
inc
dec
lock
mov
rclb
mov
or
ret
cmp
cmc
pop
mov
fwait
xor
jno
enter
and
mov
pop
mov
sbb
xchg
mov
add
push
repnz
stos
or
mov
cwtl
push
imul
sbb
pop
or
cs
into
jl
jp
mov
add
mov
loop
arpl
pop
imul
pop
mov
pop
iret
push
xor
cltd
dec
xchg
xchg
jo
inc
repnz
mov
lods
push
test
call
add
aad
rcrl
test
shl
xor
mov
test
shrb
insl
loopne
mov
insl
aam
inc
inc
movsb
lret
popa
fistl
mov
jno
je
scas
dec
jns
jnp
cmp
xor
gs
or
loopne
repz
insb
and
idivl
scas
enter
test
add
cs
loop
mov
jno
inc
ret
loope
cs
cmp
dec
inc
xorl
mov
mov
enter
pop
push
sbb
inc
and
mov
jo
sub
test
scas
dec
adc
stos
or
dec
gs
popf
cli
in
in
jl
inc
loop
dec
sti
dec
sub
bound
jge
testb
mov
js
push
pop
mov
pop
and
pop
aas
out
vpmacswd
sub
ss
inc
mov
xchg
sti
mov
ret
loopne
test
xchg
mov
insl
adc
ret
cmp
shlb
out
mov
pop
pop
push
adc
pop
not
fsubr
call
lahf
inc
prefetchnta
in
sbb
mov
xchg
pop
adc
cltd
pmuludq
sbb
sub
fdivrl
pop
sub
ljmp
mov
adc
in
sub
jle,pn
data16
pop
jbe
sbb
xorl
iret
sub
in
and
jno
addr16
cwtl
xor
pop
testb
in
adc
es
test
pop
dec
pusha
mov
js
jp
clc
dec
aaa
mov
push
xchg
mov
in
andl
notl
ljmp
cmc
incb
push
add
mov
in
popl
lret
cmp
or
and
in
lea
push
mov
hlt
shrb
jae
or
add
xchg
adc
enter
pushf
add
dec
aas
xchg
stos
test
aam
cmp
mov
jmp
cmp
aam
jge
add
sbbl
adc
sahf
popl
loope
push
pop
inc
mov
cmp
dec
sbb
mov
fnstsw
sbb
mov
xor
lcall
pop
mov
icebp
push
pop
lahf
mov
xchg
fcoml
xor
dec
push
add
lret
jb
out
jno
icebp
shlb
xchg
aas
jnp
out
dec
or
mov
cs
fwait
xor
xchg
mov
stc
imul
xchg
outsl
iret
mov
dec
dec
fldenv
enter
jae
ficoml
dec
xor
xchg
jnp
sub
mov
cli
hlt
mov
jns
out
mov
mov
inc
into
not
call
enter
out
sbb
fcmovu
push
dec
pusha
nop
adc
into
out
push
insb
push
int
add
dec
fdivl
mov
call
sbb
mov
xchg
icebp
pop
clc
and
or
pushf
and
jge
mov
adc
xchg
test
or
jno
xchg
in
xchg
pop
push
and
push
lds
addl
fcmovnu
lret
in
iret
shlb
ljmp
dec
push
dec
mov
out
notb
jns
shr
ss
mov
dec
pop
jnp
cmp
or
loope
loopne
shlb
cmp
enter
or
sub
repz
sahf
shr
jne
sub
mov
sbb
andb
dec
clc
loopne
add
or
inc
jmp
pop
mov
xor
xor
mov
or
nop
fldenv
cld
mov
fcoms
cmp
sbb
cltd
push
jg
mov
dec
xchg
push
jl
sarl
add
mov
jnp
or
push
mov
test
sub
stc
cmp
cltd
dec
and
dec
jb
or
dec
lea
pop
inc
jp
sub
in
mov
sbb
out
xor
hlt
mov
xor
outsb
sahf
xchg
sbb
stos
dec
adc
mov
xchg
mov
adc
xchg
sbb
jp
pop
jo
test
test
and
jmp
mov
mov
retw
enter
lods
mov
push
pop
cmp
xor
push
cltd
mov
sarb
mov
and
data16
loop
enter
inc
inc
push
cmp
pop
testl
cli
mov
push
mov
xchg
and
pop
in
mov
add
pushf
ds
test
loope
outsb
cmp
xor
cs
fmul
adc
iret
mov
test
dec
lcall
pop
lods
push
add
call
mov
orb
push
sub
mov
jmp
ret
int3
je
xchg
xlat
ret
push
test
shll
fmulp
sub
xor
sub
jge
jp
jp
push
aaa
icebp
adc
imul
imul
or
mov
jno
xorb
push
push
or
outsl
adc
sbb
pop
push
mov
pusha
or
push
sbb
aam
sub
ljmp
and
jno
pop
cld
in
pop
cmp
dec
push
inc
stos
push
xlat
mov
andl
cmpsb
pop
repnz
or
rclb
and
jge
mov
jno
add
sbbl
ljmp
fbstp
mov
dec
push
or
cmpsb
stc
and
push
mov
ficoms
arpl
movsb
popf
add
jge
in
lods
mov
shl
pop
mov
jbe
les
test
imul
lcall
sti
ret
lock
and
les
adc
add
sti
jns
test
bound
sub
scas
mov
mov
jbe
cmp
fcoml
movsb
int
dec
out
inc
sbb
sbb
stc
inc
mov
nop
enter
push
fiaddl
sub
pop
or
test
out
inc
inc
add
fbld
mov
sbb
mov
loope
lods
adc
in
fnstsw
out
pop
sbb
jnp
mov
in
aaa
or
adc
movsl
loopne
das
cmp
pmulhw
dec
test
xor
sub
xor
sbb
dec
dec
sbb
add
fstpl
sarl
or
je
out
inc
dec
test
stc
call
clc
mov
mov
sbb
scas
lock
xchg
out
cmp
adc
pusha
bound
pushf
icebp
hlt
repz
push
sub
lcall
fs
sub
fcoms
outsw
mov
push
mov
ret
ret
pop
loop
jecxz
or
pop
xchg
push
jne
cmp
fdivrp
or
jmp
jl
int3
outsl
ret
adc
add
fnstsw
xchg
adc
push
push
adc
hlt
scas
out
mov
dec
push
jp
fld
jle
inc
or
jle
xor
out
inc
enter
cli
dec
ret
and
into
test
mov
and
lret
rcrl
lcall
jb
out
push
mov
xor
in
push
mov
inc
cltd
gs
ficomps
lea
lret
sub
test
push
test
sub
pop
xor
xor
cmp
add
imul
xchg
in
cmp
push
pushf
sbb
ret
push
call
mov
ja
int
adc
add
mov
fs
mov
sar
hlt
les
add
ret
stos
insb
lret
sti
outsb
je
add
xchg
mov
xor
xchg
sbb
repz
mov
pop
loop
adc
scas
dec
test
jg
and
lods
sbb
mov
dec
push
popa
and
repnz
insl
sbb
mov
pop
mov
or
and
and
ret
aas
jge
jns
mov
lcall
mov
sub
mov
addl
inc
iret
out
xchg
jns
test
andb
adc
clc
xchg
sub
cld
sub
sti
inc
sub
ja
and
jb
xor
movsb
ret
push
out
in
push
sub
pop
das
inc
cmpsb
fbld
xchg
lods
dec
loop
sbb
xchg
lock
jnp
dec
or
xchg
lcall
push
mov
inc
daa
add
in
mov
fists
mov
push
cmpsl
xchg
dec
mov
dec
sahf
cmp
shrl
add
pop
arpl
arpl
cmp
ret
xlat
out
cltd
xchg
xchg
dec
aas
movsbl
sbbl
notb
int
and
daa
inc
lock
sub
or
in
ljmp
sahf
lock
pop
mov
dec
mov
pusha
or
xor
sub
sbb
and
pop
int3
lea
xchg
push
incl
mov
push
aas
pop
xchg
push
xchg
sbb
fistpll
pusha
sbb
cmp
out
push
push
cltd
mov
push
subb
in
push
mov
adc
mov
and
lret
mov
dec
jae
sbbl
fwait
aam
shrl
test
mov
loope
aam
imul
ret
popa
in
adc
push
mov
or
mov
dec
aas
filds
mov
popa
dec
iret
sbb
or
iret
sub
sub
jo
push
xor
add
int
mov
int
test
mov
add
int
out
pop
inc
adc
outsl
pop
jno
dec
repnz
sbb
in
es
leave
stos
jb
jne
rcrl
outsl
jmp
adc
lock
mov
or
pcmpeqd
dec
jbe
pop
lret
push
out
lret
pop
lods
iret
movsl
stos
inc
adc
xchg
add
xor
cltd
push
jne
push
stos
pop
adc
inc
dec
idivl
jns
cli
icebp
pop
lock
rcll
bound
sbb
add
int3
dec
call
jp
and
mov
mov
xchg
out
inc
stc
sbb
fimuls
int3
pop
jecxz
sahf
mov
pop
fsts
or
sub
xor
fs
cs
pop
cmp
pop
daa
leave
loope
adc
movsl
sbb
pop
ds
inc
int
cmpsl
stos
loop
jge
inc
aas
mov
fimull
movl
sub
push
ficoml
ret
mul
sbb
jo
jb
arpl
rol
sub
xor
mov
vmwrite
hlt
hlt
jns
jge
bound
inc
xor
cmpsl
addr16
in
xor
pop
jp
insb
sbb
in
bound
mov
repnz
les
test
or
pop
sti
add
mov
test
xchg
les
xor
bound
cmp
pop
pop
mov
test
mov
cmpsl
cltd
mov
fidivrl
shrb
xlat
mov
int
jb
mov
jp
lret
push
pop
movsl
cmp
inc
arpl
cmp
dec
sbb
inc
fildl
sbb
outsb
and
stos
mov
cld
dec
cmovno
pop
jno
inc
aad
addr16
adc
pop
mov
fsubs
xor
inc
in
mov
inc
gs
xor
hlt
outsb
addb
fsubl
mov
mov
sarl
jmp
mov
in
es
lahf
incb
xchg
mov
adc
xchg
sbb
mov
dec
cltd
push
jecxz
mov
mov
sub
sub
test
test
pop
fdivs
lahf
dec
or
loop
mov
mov
ret
xchg
std
loopne
stc
data16
xchg
leave
das
iret
and
cmp
xchg
js
push
sbb
fisttps
pop
ret
push
jo
js
clc
xchg
mov
pop
push
or
sbb
fistpl
jp
adc
stc
or
and
std
xchg
push
mov
inc
xlat
push
sbb
jmp
jge
add
data16
jb
and
dec
mov
push
and
stos
push
das
mov
cld
in
lret
in
out
add
das
jns
icebp
mov
sub
rcr
jnp
push
pop
mov
loop
popa
mov
adc
test
sbb
loop
pop
and
pop
shlb
inc
js
push
fadd
test
sub
fimull
sbb
and
jg
xchg
in
ret
mov
cmp
sub
or
sahf
cmp
mov
push
cmp
cmp
push
aad
push
inc
or
and
xchg
xchg
xchg
and
mov
cmp
push
lahf
mov
push
mov
sbb
xchg
cmpsl
sti
lret
add
sbb
xchg
or
pop
xor
shll
sub
push
out
fwait
sti
fildl
nop
mov
movsb
jle
jge
ret
jmp
fwait
mov
mov
mov
cli
popa
sub
push
jg
sub
or
hlt
push
jae
insl
ret
or
pop
test
das
and
repnz
push
push
mov
push
mov
leave
lahf
lahf
and
into
pop
push
jg
and
jge
sbb
ret
adc
es
push
and
add
shlb
adc
jb
test
or
mov
inc
mov
add
add
push
sbb
and
aam
dec
mov
mov
jbe
cwtl
insb
insl
out
add
jae
jno
inc
and
sahf
inc
cmpsb
pushf
and
cmpsb
dec
mov
hlt
cwtl
dec
and
and
or
loopne
dec
decl
fwait
inc
jmp
push
jmp
or
test
lods
repnz
xor
rcll
pop
dec
pop
push
add
adc
cmp
adc
adc
mov
dec
pop
es
jmp
cld
stc
adc
repz
in
pop
test
sbb
pop
jbe
neg
xor
cs
test
xchg
es
push
pop
shrb
mov
sbb
push
pop
and
or
jle
or
or
xchg
cmp
orl
mov
mov
int
mov
loope
movsl
xchg
push
ljmp
push
push
mov
pushf
clc
and
sbb
arpl
ficoms
adc
cld
ret
adc
mov
or
push
mov
and
fldl
test
repz
cli
cmpl
popa
xlat
repnz
xor
adc
pop
push
mov
dec
lret
fiaddl
push
or
push
out
lret
pop
sbb
test
jmp
mov
loope
cmc
test
sub
orl
hlt
sahf
push
in
mov
xchg
mov
repnz
ljmp
js
pop
xor
in
int3
lret
pop
cli
pushf
push
addr16
mov
dec
aas
sub
push
push
add
out
addr16
xchg
push
loope
xor
inc
out
nop
mov
mov
or
imul
mov
cmp
and
aam
cmp
icebp
mov
mov
das
sub
bound
fdivs
jle
out
pop
jg
xlat
shr
cmp
and
inc
mov
dec
push
inc
loope
xchg
inc
pop
jecxz
add
cmpb
add
test
test
xchg
fdivrl
sub
cli
aaa
xlat
pop
push
inc
lds
lea
mov
push
jno
icebp
es
xchg
push
testb
inc
mov
xchg
mov
inc
cmp
movsl
dec
sbb
ljmp
enter
fdivrl
aam
in
dec
jns
and
or
mov
mov
fsubrl
cmp
jns
pop
clc
stc
lea
sbb
ljmp
stc
sbb
pop
dec
mov
jns
inc
jmp
sbb
jg
push
mov
lea
push
pop
imul
imul
mov
sub
pushf
sti
add
inc
pop
pop
insb
gs
hlt
outsb
mov
repnz
aad
movsb
xchg
xor
repz
cs
cmp
fsubl
test
xor
test
dec
and
pop
rcrb
inc
mov
xchg
jmp
jle
aam
out
insb
cmp
xchg
lods
stos
inc
ret
sti
mov
sbb
push
and
testb
xor
adc
pop
mov
cmp
and
xchg
adc
and
mov
ret
iret
and
cmp
ja
addr16
into
test
jnp
xchg
cs
pop
xchg
jge
and
xchg
or
xchg
lea
insl
add
fwait
je
clc
out
insl
cwtl
sbbb
std
pop
dec
mov
xor
sahf
enter
jns
push
and
lods
mov
ret
in
xor
cs
int
jb
das
jmp
jge
shrl
std
mov
inc
adc
dec
mov
push
mov
pop
jb
aaa
cmp
rclb
mov
push
pop
cld
xchg
mov
or
cmpsl
lretw
je
in
jge
dec
scas
dec
sahf
or
xchg
sub
cmp
sbbb
stos
jbe
hlt
mov
je
mov
jmp
jg
pushf
sub
cs
cmpsb
rcrb
cmc
xchg
btr
rolb
cltd
aas
sub
inc
outsl
flds
and
dec
xor
jo
jnp
aaa
imulb
scas
scas
mov
cltd
inc
loop
popf
aad
cwtl
shlb
adc
aad
out
out
jge
cwtl
ja
pusha
cmp
loopne
pop
call
sbbl
mov
or
fcomip
pop
inc
push
lcall
fwait
ja
int3
repz
cmp
out
push
sub
ror
movhps
int
shr
das
movsb
enter
mov
dec
xor
mov
test
pop
movsl
jg
xor
icebp
cmp
adc
dec
outsb
or
mov
sub
popf
clc
jnp
dec
enter
push
push
into
out
push
mov
xchg
data16
scas
cmp
jo
rorl
movsl
dec
mov
or
adc
xchg
iret
movsl
jae
xchg
fiadds
add
push
jecxz
shlb
divl
cld
idiv
mov
pop
orb
mov
mov
mov
push
jg
addb
insl
pop
les
or
and
gs
pop
jbe
iret
mov
xlat
mov
and
sbb
pop
pop
mov
cs
and
sahf
repz
loope
mov
xchg
inc
bnd
mov
xor
call
xchg
jno
testb
add
leave
clc
xchg
inc
xchg
push
and
push
mov
mov
ja
fmull
jo
inc
fwait
mov
push
xor
xchg
mov
mov
dec
jge
outsb
mov
push
test
sbb
and
mov
ja
mov
add
fdiv
mov
cmp
cmp
xchg
adcb
jo
push
sub
jns
dec
and
mov
xchg
inc
lret
lock
xor
nop
mov
sbb
ficomps
mov
jle
jb
shll
jecxz
psllq
sub
cmp
mov
icebp
xchg
pop
stc
mov
mov
mov
rcr
out
mov
inc
sub
in
loopne
out
lret
push
cwtl
shl
loopne
inc
mov
popf
inc
cltd
cwtl
iret
data16
leave
jnp
out
mov
pop
lods
xorb
jne
mov
cltd
sub
xchg
lods
cmp
sbb
pop
cmp
lock
add
dec
cld
aad
fisttpl
scas
out
xchg
sbb
ret
ret
jbe
sahf
xchg
es
and
in
cmpsl
shr
and
pop
jge
pop
in
jge
leave
mov
fcomip
jecxz
jo
jle
sbb
cmpl
or
flds
push
ja
cmc
ficomps
mov
cmp
aaa
pop
test
loope
jge
xlat
fsubl
lods
xchg
xlat
pop
leave
mov
xchg
fcoms
or
jecxz
arpl
cmp
or
and
xchg
out
cmp
nop
mov
inc
mov
and
and
mov
mov
outsb
test
add
dec
clc
jno
sub
mov
or
test
push
scas
mov
mov
inc
int3
mov
add
jl
adc
scas
ss
dec
mov
in
push
outsl
jge
xchg
mov
adc
jecxz,pn
fisttps
push
mov
cmpsl
fsubrs
cmc
enter
loop
das
mov
fldt
les
adc
out
and
jl
fwait
popa
scas
xchg
fcompl
inc
sbb
and
sbb
or
fcmovnb
and
data16
mov
jns
fisttpl
dec
mov
xor
idivb
adc
ret
push
idivl
mov
push
lock
inc
movsb
pop
jge
or
outsb
fadd
pop
xchg
and
mov
iret
cmp
and
out
fldl
push
mov
add
add
dec
ds
cmp
jmp
mov
lcall
outsl
xchg
out
stos
jnp
push
pop
andb
sbb
or
mov
sbb
pop
ret
mov
dec
add
out
fldenv
in
je
pop
dec
enter
jb
cmp
mov
test
mov
sub
sbb
or
cltd
add
adc
or
pop
insb
mov
call
push
jnp
stos
xchg
push
fwait
ds
push
rcrl
dec
cli
iret
adc
add
sbb
pop
out
enter
repz
stos
outsb
mov
shll
adc
out
ljmp
cmp
leave
sub
iret
mov
les
add
push
rclb
mov
or
adc
and
es
sbb
mov
xchg
repnz
outsb
int
daa
dec
out
mov
inc
sub
insb
flds
lock
jno
sbb
jno
out
subb
lret
pop
bound
sbb
pop
fwait
add
subl
int3
stos
sbb
push
push
push
mov
mov
inc
rorl
sub
sub
icebp
push
cltd
incl
xchg
mov
jg
xor
dec
cli
stos
lcall
test
mov
lea
cld
fwait
jecxz
outsb
cmp
nop
pop
fimull
inc
fldt
jno
pop
xor
inc
dec
mov
xchg
ljmp
js
int
cltd
test
mov
orl
push
in
icebp
stc
test
cmc
pop
cli
push
loop
das
cs
and
out
inc
nop
into
je
in
ja
pop
and
jb
and
movsl
push
sub
insl
add
bsf
add
negb
sahf
addr16
sti
sub
cmpsb
sub
push
adc
xchg
dec
imul
xor
popf
and
andl
faddl
iret
imul
adc
arpl
sbbl
ljmp
pushf
sub
lods
mov
adc
jp
mov
sbbl
push
arpl
in
jb
sub
call
push
adc
and
jbe
xchg
cld
push
sbb
lds
xor
dec
sarb
loop
pop
in
and
sub
sbb
out
roll
ss
ret
xchg
fisttpll
js
mov
mov
fsub
sbb
cmp
test
daa
scas
lods
xor
ja
mov
push
insb
jae
inc
outsb
adcb
jp
add
cmp
dec
inc
popf
xor
sahf
inc
mov
jl
and
dec
loope
decl
das
inc
jns
jge,pn
test
adc
jmp
sti
hlt
or
add
mov
call
daa
push
mov
fmuls
test
pop
loop
xchg
mov
loop
jmp
fdivp
repnz
dec
pop
sbb
adc
mov
ficoml
leave
sti
mov
imul
xor
sub
pusha
ljmp
fistl
fidivrs
lea
in
pop
lods
lods
aam
jbe
dec
xchg
cmc
in
mov
adcb
sub
cmp
sbb
dec
arpl
mov
mov
push
xchg
shl
ret
mov
sub
fmuls
or
testl
dec
pop
xor
int3
addr16
in
loop
adc
mov
mov
xor
adc
mov
xor
out
lods
mov
je
roll
xor
arpl
cli
test
jno
and
and
out
and
fisttpl
and
mov
cmp
jns
pop
sub
in
mov
mov
jle
insb
cmpl
cmp
dec
dec
pop
jle
xchg
xchg
cmp
aaa
loop
lret
cmp
rol
jl
iret
repz
add
xchg
sub
in
out
popf
jge
clc
dec
dec
sub
push
add
sub
insb
scas
mov
lahf
sbb
test
cltd
into
inc
mov
std
roll
add
pop
xor
in
sbb
sbb
fcmovnbe
in
in
pop
mov
add
xchg
sbb
mov
cmc
out
xchg
int
cmp
orl
lock
mov
movsl
pop
and
push
lods
ja
or
xchg
shlb
mov
mov
flds
pop
and
mov
add
iret
xchg
iret
fistpl
into
xchg
into
mov
pop
pop
popa
pop
movsl
cmp
adc
adc
mov
ja
shrl
push
xchg
push
outsb
popa
sahf
insb
daa
dec
mov
mov
pop
pop
push
jne
add
pushf
sbb
jmp
xlat
jnp
add
and
jb
daa
insb
cmp
cmpsb
push
push
and
xchg
addr16
imul
stos
int3
add
inc
insl
clc
jae
js
dec
stos
cmpsl
xor
ss
inc
or
insb
das
sbb
ja
mov
inc
xor
sub
pop
outsb
or
lods
icebp
in
cmp
mov
pushf
and
int3
sahf
sub
mov
push
ds
pop
inc
sahf
xchg
stos
jno
xor
add
popf
or
pushf
lea
mov
sub
imul
add
test
test
inc
push
stos
outsb
mul
add
cmp
scas
cmp
negl
cs
cmp
mov
fucom
divb
mov
call
iret
pop
mov
pusha
rol
sbb
adc
pop
daa
call
stc
mov
cld
xchg
cmp
mov
jl
push
push
ss
outsb
push
notb
lods
jne
js
mov
std
cltd
ficompl
inc
sahf
jge
dec
sbb
jb
sbb
jg
pop
dec
push
pop
sti
pop
fidivl
pushf
aas
push
mov
inc
insl
inc
imul
xchg
pop
jbe
push
loope
repz
es
jns
push
mov
xor
push
popf
pop
pop
cmpsb
aad
repz
out
xchg
outsb
repz
add
push
aam
and
push
inc
mov
xchg
orb
test
sub
mov
or
sbb
or
pop
out
dec
jne
inc
repz
mov
push
in
inc
dec
cmp
sub
xor
test
add
pop
mov
nop
xorl
sub
cmp
xor
adc
jl
mov
sahf
enter
push
vpsraw
pop
mov
sub
jle
mov
pop
and
cltd
adc
stc
add
lea
push
or
rcrb
mov
xchg
movsb
aas
mov
pop
adc
mov
aad
test
xchg
add
push
shlb
aas
push
shrb
jmp
outsl
fnstsw
add
add
stos
pop
lods
mov
cmp
fs
movsb
lods
push
enter
or
push
popf
shll
rcr
jle
imul
or
movsb
mov
fadds
or
xor
ficoml
mov
cmpsb
dec
imul
insb
nop
xor
hlt
xchg
pop
sahf
std
ret
sub
test
aas
aad
push
iret
sbb
mov
mov
js
sbb
xor
mov
bound
popf
stc
mov
pop
orl
push
mov
repnz
andb
add
stos
repz
and
and
mov
out
sti
dec
out
imul
in
stos
jo
push
mov
pusha
lods
ss
inc
rol
js
push
jne
mov
jne
push
cmp
mov
cli
xor
rorl
fisttpl
ss
jno
mov
dec
iret
xor
mov
jbe
xor
push
adc
push
mov
movsl
xchg
sbb
loope
int3
pop
mov
scas
cwtd
cmp
pop
sbb
mov
lds
add
cmpsb
pop
lahf
sbb
or
adc
push
or
jp
out
das
xchg
cld
and
mov
sbb
inc
dec
not
push
mov
bound
cwtl
add
out
push
pop
in
stc
addr16
jnp
dec
xchg
mov
pop
or
sbb
sar
dec
mov
test
push
adc
mov
pop
inc
stc
idiv
mov
mov
mov
lahf
jb
mov
aaa
cmp
mov
push
push
not
iret
jle
and
imul
pop
sbb
test
int3
sti
std
mov
xchg
mov
push
out
xchg
aad
ja
nop
mov
xchg
sti
xor
clc
clts
sub
inc
stos
jnp
test
cmp
cmpsb
adc
fwait
mov
push
outsb
inc
sub
ret
ret
and
add
stos
arpl
mov
scas
movsl
iret
aaa
lret
push
cmp
adc
pop
jecxz
cmp
cmp
dec
xor
pop
jecxz
out
dec
or
mov
stc
push
sarb
cli
xchg
shrb
push
fistpll
sub
pusha
lods
add
stc
jae
icebp
jb
sbb
xchg
dec
jle
sbb
xchg
in
lahf
mov
hlt
or
cmpsb
add
lret
mov
sbbl
inc
enter
mov
data16
ret
xlat
cltd
ret
mov
adc
lds
sub
pop
xor
scas
cmp
arpl
movsb
mov
sbb
fdivs
cs
daa
lods
or
adc
into
inc
test
mov
popf
dec
sub
jbe
add
or
xchg
test
dec
outsb
test
mov
lds
xor
pop
xor
aad
jmp
push
pushf
and
pop
stc
dec
mov
pushf
xor
inc
mov
mov
mov
dec
and
push
lahf
fdivs
mov
das
mov
pop
push
iret
rcll
std
or
je
dec
cmp
pop
xlat
adc
loopne
jg
add
rcrl
push
das
outsb
inc
or
mov
aaa
inc
fimull
out
mov
ljmp
fildll
dec
lods
jae
lds
xchg
or
sti
or
sbb
and
mov
dec
bound
jp
psubusw
push
cmc
mov
jnp
mov
cwtl
js
scas
xor
mov
les
arpl
or
aaa
outsb
adc
add
sbb
dec
test
movsb
jp
int
pop
or
rolb
andb
xchg
mov
push
mov
int3
icebp
ret
sbb
dec
fsubs
and
xor
sub
xchg
aam
ret
iret
pop
dec
dec
movsl
cmp
shlb
push
adc
sub
incb
jg
popa
dec
decb
ja
icebp
pop
jae
jmp
data16
imul
pop
push
rcl
rcll
mov
lds
push
mov
inc
mov
xchg
push
pop
mov
cmp
lahf
jg
test
hlt
lods
cmp
push
pop
decb
dec
out
add
jno
fs
mov
jg
test
mov
adc
sub
loopne
test
adc
lock
xor
jecxz
lcall
adc
dec
xor
jbe
cmpsb
jbe
push
cvtdq2ps
loope
cltd
call
mov
mov
ret
dec
aaa
mov
jle
xchg
sub
mov
stc
aam
cmc
mov
push
test
jge
ret
sti
adc
mov
pop
int3
add
cmp
jno
and
sbb
pop
add
or
lds
int3
push
cmp
enter
mov
adc
iret
cmp
addr16
icebp
mov
in
scas
adc
pop
jns
iret
xor
ss
mov
out
insl
pop
sbbl
dec
orb
movl
xchg
inc
inc
testb
inc
dec
push
add
jo
xchg
aad
mov
lahf
lods
inc
lea
mov
jmp
mov
jl
mov
ret
inc
int
loope
lret
dec
push
mov
cli
popf
mov
xor
xor
popf
loopne
add
jnp
out
jmp
mov
fstpt
out
sub
mov
push
inc
push
push
inc
cmp
mov
jmp
movsb
push
push
mov
test
test
fistps
push
sbb
pop
shlb
lcall
xor
inc
ret
sbb
stc
icebp
in
popa
jmp
jge
cmp
loope
dec
out
push
shrb
mov
push
outsl
icebp
sbb
cmp
sbb
out
pop
test
push
pop
mov
call
xor
sub
or
fists
adc
mov
fistpll
push
fidivs
mov
les
aaa
dec
push
sbb
adc
dec
pop
inc
adc
or
or
add
add
cmpsl
aam
push
sarb
add
mov
mov
pop
mov
je
test
dec
xchg
sub
insl
hlt
iret
data16
shrl
scas
push
cli
pop
stos
lcall
and
and
mov
mov
push
cmp
or
mov
jae
mov
rcll
jno
jbe
and
pushf
lock
pop
xor
jns
jl
cwtl
mov
sub
lret
mov
mov
fdiv
shlb
in
xchg
xchg
sahf
pop
jmp
jae
mov
push
cmpsb
adc
xor
mov
or
mov
dec
dec
xor
cmp
mov
test
ds
pop
sub
xlat
cltd
clc
faddl
sarb
xor
cld
jp
into
sti
and
mov
clc
cs
daa
pop
std
movsl
sahf
movsl
negb
fistpll
mulb
adc
cmp
aam
pusha
rcrb
and
add
out
inc
imul
lea
xchg
pusha
cltd
add
cmpsb
fcmovb
jmp
push
addr16
hlt
inc
push
sbb
pop
and
jmp
ljmp
jnp
push
pusha
xchg
sub
mov
jle
test
inc
and
mov
inc
or
es
into
orl
and
fcmovnu
sub
dec
idivl
fldt
cli
jb
stos
jl
and
lds
push
add
pop
pop
push
cmp
jns
cmp
jne
mov
ror
test
roll
inc
in
lret
pop
data16
mov
ffree
imul
cmp
mov
jg
test
jno
adc
lcall
push
mov
in
inc
jo
icebp
xor
push
jl
adc
xor
orl
dec
xlat
dec
out
adc
adc
lods
cmp
mov
test
sbb
mov
rcr
jns
jl
rorl
pop
jle
mov
push
fdiv
repz
sahf
sub
rol
ja
or
ficoml
out
or
mov
sbb
add
mov
jle
popf
std
inc
push
and
jns
mov
push
or
ja
lahf
addl
mov
inc
mov
pop
push
out
bound
xchg
jnp
repnz
sbb
pop
arpl
rolb
fists
hlt
xor
push
xor
push
dec
mov
ret
and
mov
mov
cmp
lods
mov
rcrl
fildl
xchg
scas
dec
idiv
enter
xlat
lods
cs
dec
push
cmc
or
jmp
inc
or
ret
add
mov
pop
adc
sbb
ret
mov
inc
push
sti
test
push
ljmp
sub
cmp
or
rcl
movsl
and
xor
or
cmpsl
and
pop
push
out
lds
or
int
mov
mov
lds
scas
ja
cltd
cmp
frstor
outsb
fwait
lock
pop
divl
sbb
xor
push
and
and
pop
jne
hlt
pop
jb
cli
mov
xchg
js
push
pop
cltd
lods
cmc
push
mov
scas
cmp
out
pop
mov
rcll
leave
jb
in
jmp
inc
cli
in
add
in
pop
das
jno
pop
jl
pushf
xchg
pop
mov
push
sub
clc
or
imul
es
push
jl
mov
pop
jb
pusha
arpl
push
mov
sbb
mov
les
xor
push
nop
jo
adc
mov
pop
push
fucomp
stc
popa
lds
scas
add
cmp
rclb
push
push
xor
mov
add
mov
mov
xchg
adc
jl
shl
add
aam
jb
shld
dec
ret
mov
cmpsl
pop
adc
mov
orb
popa
jmp
test
punpckhdq
call
shlb
repnz
sti
ret
scas
dec
fnstcw
lds
je
test
enter
les
or
add
push
push
jne
mov
xchg
in
push
int3
out
inc
mov
lods
arpl
pop
push
cmp
adc
mov
cmpsb
xor
ret
and
xchg
cmp
cli
dec
push
jo
mov
or
insb
cli
shlb
rcrb
aad
lds
xor
stos
loopne
xchg
mov
mov
lea
pop
push
leave
dec
fsubr
adc
pop
js
and
int
and
lea
mov
stos
shlb
or
hlt
stos
adc
xchg
mov
shrb
add
int
insl
imul
inc
sbb
idivl
pop
adc
jns
movsl
push
pop
out
sub
faddl
adc
shrl
dec
daa
idivb
repz
loopne
add
and
imul
test
out
adcb
inc
xchg
movsl
xor
mov
lret
mov
sbb
jns
xchg
dec
shll
cwtl
xchg
sbb
icebp
pushf
out
dec
adc
pop
gs
cmp
add
push
or
or
insl
test
dec
xor
or
mov
cmpsb
push
fidivs
add
jns
dec
mov
sti
sub
add
jb
mov
jmp
fst
xlat
push
insl
pop
pop
add
jle
adc
dec
mov
xor
mov
adc
push
popf
rolb
out
loop
aas
int3
pop
or
pusha
fwait
sbbb
iret
stos
or
or
pop
or
aad
cmpsl
xchg
push
mov
aam
fildl
mov
mov
int3
je
jno
arpl
pop
mov
ds
clc
scas
push
xor
fdivs
sub
js
movsl
push
cltd
mov
in
sub
int
cmp
push
in
push
or
mov
pop
lcall
push
divl
and
ret
mov
adc
stc
inc
push
jne
pop
mov
cmp
xor
sbb
pop
or
add
pop
imul
addr16
insl
jge
pop
add
or
and
push
andb
in
cmp
mov
and
movsl
sarb
dec
xchg
push
jecxz
mov
or
dec
push
in
rclb
int
stos
cmp
xorl
sub
cltd
test
dec
mov
pushl
adc
pop
sub
cmc
fs
jae
push
daa
daa
xchg
and
push
fs
jecxz
sbb
and
push
mov
shl
imul
or
pushf
lret
outsl
arpl
fmul
jae
ss
jb
sub
in
pop
fwait
out
adc
popa
leave
bound
inc
lea
mov
dec
and
push
mov
add
jmp
xorb
jns
out
cli
add
push
test
int3
ss
mov
push
movsb
pop
and
out
aas
or
mov
cmp
test
push
aas
ret
add
push
cmpsb
dec
loopne
inc
mov
jmp
iret
outsb
pop
inc
adc
add
or
sbb
adc
aaa
in
into
mov
lock
jns
dec
mov
in
nop
mov
stos
into
mov
push
or
xor
pop
xchg
testb
adc
or
and
sub
fdivrl
xchg
jmp
dec
sub
jl
xor
sti
xchg
popa
subb
sub
inc
xor
xor
sub
imul
je
repz
dec
lret
inc
cmp
adc
icebp
xchg
cmpsl
mov
arpl
cwtl
sub
mov
adc
scas
pop
movsb
leave
mov
adc
dec
pop
cld
xor
mov
cmpsb
or
sbb
push
pushf
enter
outsb
idiv
pop
out
and
ds
out
inc
out
arpl
pop
add
hlt
xchg
dec
lahf
lahf
inc
shrb
push
js
jmp
mov
mov
aam
ja
adc
inc
mov
js
adc
pop
mov
mov
leave
sub
imull
into
or
mov
add
pop
stos
insl
or
jnp
xor
pop
insl
fwait
div
mov
jbe
cwtl
pusha
xchg
into
cmp
pop
into
push
push
cmp
pop
add
int3
dec
hlt
inc
ss
mov
imul
jle
xchg
xchg
int3
int3
jbe
fadd
decb
loopne
inc
clc
enter
rcrb
fbstp
ljmp
pop
mov
fs
js
mov
scas
and
lods
int
jg
or
stc
dec
mov
nop
sti
mov
jmp
and
mov
pop
fldcw
adc
xchg
pusha
dec
cmpsb
jmp
mov
imul
shlb
fsubs
sti
xlat
fidivs
xchg
sub
aaa
mov
lods
orl
ds
jne
add
clc
cmp
adc
mov
out
sbb
cmp
inc
imul
movsl
int
cli
leave
lret
fsub
add
aaa
pop
pop
sarl
ja
popa
fwait
lea
inc
testb
lret
fists
push
xchg
mov
jbe
cld
mov
fdivrs
fstpl
dec
jecxz
or
in
or
aam
xchg
xor
add
lret
mov
scas
pop
mov
jae
mov
movsl
jg
imul
jl
pushf
pop
add
mov
out
pop
sub
out
cmp
addl
mov
into
repnz
xor
dec
pop
add
push
xchg
sub
rcrb
sbb
pop
cmp
jecxz
sarb
outsb
add
scas
xchg
mov
cmp
iret
mov
xor
icebp
movsl
pop
push
out
mov
mov
icebp
add
sbb
gs
ret
ljmp
or
cmp
pop
inc
dec
mov
xchg
pushf
and
lcall
inc
mov
and
push
ret
in
sub
test
ljmp
dec
mov
ret
push
loop
ljmp
mov
les
ljmp
imul
and
stos
mov
std
imul
test
test
sub
inc
fld
jae
in
hlt
jp
xor
fcom
mov
cmpsb
mov
std
popa
seto
cmp
loopne
adc
or
outsl
test
test
jno
sub
repnz
mov
out
jg
scas
nop
push
cmpsb
inc
out
push
fimuls
ret
mov
aam
dec
adc
fnclex
xchg
adc
clc
jo
xor
lahf
cmpsl
nop
lcall
imul
mov
cltd
push
push
sub
cli
imul
mov
inc
inc
stos
aaa
lock
push
inc
xchg
cmp
notl
jno
fistl
mov
in
push
cwtl
adc
gs
leave
or
inc
popf
jne
popl
int3
call
and
pop
mov
aam
bound
dec
pop
inc
mov
mov
sbb
pop
dec
cmc
clc
jge
repnz
shl
outsl
repz
sub
sbb
pop
dec
clc
test
in
ret
mov
xchg
sarl
gs
bnd
scas
mov
aad
xor
scas
sbb
xchg
xor
cld
jb
arpl
add
cld
jns
sbb
sbb
movsl
orl
mov
test
shl
lea
fcmovne
mov
xor
scas
in
xchg
push
mov
mov
and
sbb
popa
stc
mov
incb
lahf
mov
insl
or
xchg
add
add
repnz
rcl
xor
pop
cmpsl
add
mov
mov
das
mov
std
decl
les
inc
cmpb
xchg
or
fstpt
outsl
lea
add
test
mov
out
mov
push
and
dec
mov
or
mov
mov
mov
dec
xor
loopne
cmc
mov
sahf
adc
cli
inc
adc
sbb
pop
push
and
ja
fimuls
das
hlt
xor
loopne
jo
imul
cmp
pop
sbbl
push
or
pop
lock
int
push
iret
xchg
andb
loopne
popa
pop
sahf
inc
xorb
in
and
pop
scas
xor
scas
cmp
out
arpl
and
leave
test
mov
std
loop
int3
push
imul
or
jecxz
ja
fisubs
ret
fnstcw
jle
out
insb
call
mov
jb
jge
pop
sbb
xchg
nop
mov
and
inc
dec
cmpsb
loop
js
and
xchg
in
add
call
sbb
sahf
shlb
cmp
arpl
cmp
mov
out
xchg
push
data16
dec
xchg
pop
mov
mov
cmp
scas
push
mov
rclb
add
adc
ret
adc
jae
inc
or
mov
arpl
push
dec
bound
lods
xor
into
leave
movsl
mov
das
adc
mov
cmc
adc
pop
aaa
push
mov
jae
lods
lds
push
jle
pop
es
cwtl
push
pop
sahf
ret
nop
push
addr16
aas
imull
add
cmp
mov
inc
hlt
xchg
insb
sbb
shrb
mov
mov
rorb
imul
loop
decl
pushf
movsl
sbb
insb
push
mov
leave
push
jl
loope
jbe
xchg
fs
cmp
push
aas
cmpsl
pop
pop
mov
inc
jecxz
push
mov
fcompl
scas
jl
imul
je
out
push
jbe
sub
mov
push
cmovp
or
pop
ret
adc
setbe
lea
cmp
and
divl
aad
clc
dec
jne
xchg
xlat
cmp
pop
push
in
jbe
xchg
sub
sub
hlt
out
fsts
pop
pop
add
cli
xor
fisttpll
mov
adc
adc
push
pop
fmuls
cmpsb
das
mov
out
push
test
shll
fildl
dec
rcll
int
adc
repnz
sub
cwtl
xchg
imul
dec
gs
cmp
jno
dec
incl
jns
lret
lret
aaa
mov
or
pop
int
jne
mov
addr16
ds
push
insl
jae
dec
push
adc
adc
inc
cmpsl
in
popf
lds
xor
js
sub
outsb
push
lea
mov
scas
cs
call
xchg
sbb
stos
dec
fs
mov
sbb
bound
push
lahf
rcll
mov
add
lods
xor
fiadds
cmp
cmc
sub
rclb
inc
in
xor
mov
bswap
insb
inc
push
and
insb
arpl
fs
add
and
sti
xchg
add
lods
repz
jle
scas
jno
dec
js
fisttpll
rcrl
or
cmp
and
fs
cmc
jnp
mov
mov
jl
xor
mov
dec
aas
and
push
lea
mov
test
imul
pop
cmp
and
iret
xchg
mov
andb
lds
dec
mov
or
cmp
out
popa
test
or
sub
jmp
mov
xor
jnp
xchg
pop
dec
ds
iret
or
orb
cmp
in
orl
movsl
aad
push
sbb
push
cmpsl
nopl
fucomip
imul
in
sahf
mov
xchg
in
outsl
repnz
mov
leave
sub
and
call
xchg
mov
mov
out
xchg
andl
mov
aam
pusha
cmp
ret
test
in
inc
lahf
jno
push
stos
push
xor
mov
pop
and
test
mov
or
add
stos
cmp
xchg
mov
mov
sbb
ss
test
addr16
push
mov
es
out
fcompl
ret
repz
lock
ss
push
adc
pop
jno
aaa
jnp
push
lcall
dec
jp
pop
leave
popf
sub
dec
push
in
pop
into
pop
cltd
pop
sub
sub
xchg
dec
add
xchg
std
cmp
cltd
and
pop
cmc
jge
loopne
and
or
adcb
scas
mov
pop
lock
and
and
dec
adc
mov
dec
xchg
jnp
call
movsb
jae
imul
gs
cmp
add
aas
ficoml
mull
daa
loop
shl
scas
adc
sub
xchg
mov
jg
stos
inc
ss
add
push
popa
lods
stos
xchg
loopne
add
jge
outsb
add
xchg
cs
std
lods
int3
mov
xchg
push
xlat
dec
pop
inc
in
xchg
mov
push
stos
jge
cmp
mov
stos
xchg
adcb
outsl
dec
daa
sub
imull
ja
sbb
ja
test
rclb
idivb
pusha
out
lods
shrb
and
or
fwait
jne
mov
ja
outsb
fidivs
mov
lcall
pusha
call
adc
hlt
and
xchg
cmc
stos
jae
add
xchg
dec
jg
pop
fs
cmp
loop
mov
lods
in
and
test
cmp
jo
mov
repnz
pop
outsl
shll
jns
popf
jg
xor
lcall
jmp
mov
xor
insl
jmp
rolb
mov
ljmp
insb
outsl
nop
sbb
pop
lret
stc
jb
in
mov
cs
inc
loope
into
cmp
adc
js
mov
sbb
dec
pop
pop
stos
mov
jo
orb
sbb
adcl
mov
and
cmp
popf
xchg
xor
or
jns
fdivrs
gs
outsb
add
out
leave
je
inc
stos
push
mov
cmpsl
cld
lock
subl
test
jae
clc
mov
dec
mov
dec
hlt
lret
mov
and
cwtl
je
push
cltd
cmp
mov
xor
and
js
cmp
add
scas
mov
sahf
cmp
cmpsb
xor
push
mov
mov
stos
hlt
cltd
adc
xor
mov
xlat
andb
mov
leave
shll
mov
daa
cli
pop
jge
das
pop
or
pop
xchg
fistpll
loop
lock
jbe
fistpll
mov
popf
popa
cmp
nop
cli
repz
in
push
or
dec
loopne
outsb
stos
adc
mov
imul
xchg
shlb
sbb
sub
fdivp
sbb
xchg
data16
jae
mov
std
icebp
pop
test
adc
insb
jl
push
mov
mov
xchg
aaa
out
mov
pushl
stc
in
in
daa
mov
int
scas
inc
mov
cmpsb
stc
test
push
sti
outsl
sub
call
and
xor
bound
and
add
fistl
sbb
mov
pop
or
or
pop
cwtl
fisubl
inc
sbb
sub
sbb
test
jae
mov
cmp
add
fmull
dec
daa
rcll
aaa
loopne
add
inc
or
repnz
lret
sub
xor
pop
data16
xchg
repnz
mov
clc
adc
mov
out
xor
fwait
xor
ljmp
adc
les
cmpsb
or
in
fbstp
stos
xor
jg
xorb
sbb
xchg
mov
sarl
jns
dec
cmp
outsl
cmp
stc
mov
add
lcall
adc
iret
mov
nop
xorl
test
imul
xchg
rorl
dec
lea
sbb
xchg
stos
mul
scas
sti
jno
xchg
mov
pop
out
test
addr16
popf
cmpsb
jl
jb
push
fsubrs
xchg
lock
jp
call
test
or
or
dec
es
sub
popf
ret
into
mov
adc
lock
cmpsb
pop
mov
test
test
adc
mov
addr16
mov
insl
mov
int3
fidivrl
mov
icebp
lods
mov
mov
jp
inc
jp
dec
sub
add
mov
lcall
sti
xor
jb
pop
mov
xor
lods
sbb
and
jns
jge
cltd
or
out
test
xchg
scas
xor
adc
inc
in
sub
push
ss
sbb
pop
mov
ret
pop
shll
and
maxps
out
mov
jge
mov
cli
or
div
fists
fcomi
in
mov
adc
shrl
cmpsl
addr16
ljmp
add
shl
mov
jbe
xor
lcall
mov
rorl
incl
mov
daa
inc
ss
jp
lods
outsb
stos
xor
push
add
jns
xor
push
jb
xchg
test
int
pop
xchg
test
mov
lock
in
aad
pushf
loope
cmp
mov
adc
or
mov
pop
push
loopne
adc
cmp
and
push
and
sbb
stos
sub
and
xchg
popl
sti
outsb
adc
ret
sub
adc
leave
and
fstl
xchg
jmp
and
cmp
pop
ss
or
mov
add
psrlw
push
mov
fs
jecxz
xlat
in
fdivl
icebp
mov
cli
push
pop
add
inc
cmp
addl
movsl
sbb
pop
in
stc
jmp
inc
pop
pop
sti
sbb
in
rcrb
mov
inc
jne
sbb
dec
scas
push
push
dec
push
xlat
mov
jbe
cltd
push
sahf
cmp
jns
adc
stos
jns
int
and
jnp
addl
shr
movsb
pop
lret
addb
mov
out
jo
test
in
xchg
repz
sarl
jb
pushf
out
movb
sbb
jp
dec
or
aaa
inc
jne
or
rcll
fimull
sti
add
lcall
ds
insb
cwtl
add
sbbb
adc
push
popa
int
push
pop
sbb
pop
rcrl
inc
dec
fistl
sub
mov
pop
sbb
mov
xchg
push
cmp
lea
push
xor
shlb
or
subl
mov
stc
add
jp
push
jp
faddl
jo
jnp
mov
sub
lea
fdivs
sub
adc
gs
jno
in
mov
psubsw
mov
js
jnp
aaa
inc
pusha
aad
mov
lret
push
sub
fadds
jne
mov
mov
pop
mov
jmp
mov
je
jp
xchg
push
insl
inc
cmp
dec
mov
call
rcrb
mov
mov
gs
push
adc
or
iret
aad
cs
mov
mov
mov
sbb
and
lock
in
icebp
inc
outsl
xchg
jno
out
sbb
int3
outsl
sbb
and
movsb
inc
xchg
cmp
ss
fwait
orl
outsb
fwait
jae
loop
or
mov
mov
dec
mov
lret
xor
lcall
mov
and
mov
data16
jnp
and
and
push
test
daa
xchg
sarb
movsl
fisubrl
outsl
jnp
dec
insb
sbb
mov
pop
sbb
and
aas
or
jno
notb
test
push
shll
addr16
shll
fistps
shlb
or
sbb
in
mov
push
fisubs
js
push
jno
ret
mov
in
ror
notb
frndint
inc
mov
dec
xchg
inc
fdivr
fwait
ss
subb
das
inc
mov
iret
dec
pop
jns
shrl
jmp
int3
add
addr16
in
insl
out
dec
xor
or
push
sbb
xchg
inc
and
adc
ret
sub
andb
mov
and
jmp
rorl
and
mov
adc
aas
ja
daa
es
gs
push
inc
aad
sahf
shlb
xchg
lret
sbb
out
das
arpl
movsb
test
or
leave
ret
push
xor
nop
and
movb
loope
mov
cmpsl
es
push
repz
dec
sbb
fs
dec
mov
mov
cmc
pop
dec
fs
mov
daa
roll
sub
mov
pop
cmp
jnp
add
xchg
aam
movsl
movsl
in
test
ficoml
cmpsl
out
jne
mov
imul
adc
adc
jge
mov
repnz
mov
ficoml
repnz
pushf
imul
hlt
mov
add
outsl
out
test
sbb
rol
mov
in
sbb
jne
sub
fiaddl
lods
in
or
div
jnp
xchg
adc
iret
daa
push
aam
lods
ret
jmp
add
xlat
or
push
sbb
lret
jmp
les
loop
rcll
jno
or
int3
aaa
dec
adc
outsl
lds
jecxz
push
mov
std
js
out
lret
xorl
xchg
sbb
cmp
add
ret
pop
add
sub
lret
int3
mov
lret
stos
push
mov
pop
lret
cmpsb
xor
sub
mov
xor
ss
jae
stos
inc
stc
sub
add
add
pop
and
aad
in
add
xchg
enter
fwait
in
sahf
inc
add
dec
push
aaa
cli
mov
jge
cmp
sahf
mov
frstor
subl
and
fisubrl
sbb
cld
mov
aaa
add
push
movsb
fldl
mov
mov
pop
pop
adc
cmp
ljmp
push
cwtl
aas
scas
aas
inc
or
sbb
push
add
xor
int3
lods
or
faddl
out
jge
lcall
into
jns
adc
inc
frndint
add
shl
cltd
push
xor
leave
push
sbb
loop
dec
xchg
bound
inc
xor
sbbb
inc
jbe
hlt
fcoml
add
fs
and
add
mov
dec
pop
rclb
fldcw
dec
out
mov
xchg
fwait
das
test
loopne
adc
fistpl
cmp
cmp
repnz
lods
pop
push
aad
mov
mov
aaa
iret
ret
cmp
mov
sub
push
mov
enter
iret
jg
sub
mov
sbb
movsl
js
mov
mov
sti
mov
add
xor
in
sbb
cltd
jns
add
fs
jbe
test
pop
and
xchg
cmp
sbb
dec
test
fucomi
jnp
hlt
fisttps
xor
roll
mov
imul
jnp
imul
les
cli
pushf
movsb
inc
mov
enter
pop
mov
sbb
in
fisttpll
lcall
pop
arpl
dec
das
mov
mov
pop
pop
pushf
shlb
repz
xor
and
aam
stos
cld
mov
out
lea
add
gs
in
ljmp
jmp
adc
fistpll
ljmp
jle
inc
xor
ret
pop
jmp
fisttpll
shll
fisubs
and
sti
repz
fs
dec
push
adc
push
jns
jns
flds
xlat
inc
out
inc
push
adc
out
repz
sub
cmp
stc
sub
jbe
jo
jmp
in
enter
fmul
shl
lret
xchg
push
shlb
mov
stc
inc
xor
pop
cmc
shlb
add
lock
mov
insb
inc
aas
sbbl
inc
out
adc
jbe
cmp
shl
rcll
out
jl
mov
mov
jecxz
mov
ficoml
jl
out
cmpsl
pop
ss
enter
test
and
lods
shlb
lret
adcb
xor
mov
in
iret
call
adc
or
pusha
mov
inc
test
sbb
mov
dec
dec
cmpsl
nop
push
sub
add
lea
xor
enter
pop
aad
cwtl
dec
and
scas
mov
negb
add
mov
cmp
mov
xchg
addr16
sub
add
and
movsb
stc
pop
fcmovne
cs
mov
pop
push
cmc
popa
sub
stos
dec
pop
pop
cmp
jmp
mov
aam
dec
lods
cmpsb
add
lret
dec
jo
sub
in
movsb
dec
mov
stc
iret
in
xor
push
mov
cmp
lods
scas
fwait
xchg
sbb
xchg
pop
cmpsb
out
mov
pop
inc
sbb
xchg
insb
xchg
ja
xor
adc
shl
jns
aad
rcr
repz
dec
mov
lea
jns
push
stos
sbb
test
or
push
lods
popa
inc
daa
fsin
jecxz
pop
aas
push
mov
pop
dec
into
adc
fldt
aad
insb
jmp
mov
jns
mov
pop
push
iret
or
insl
imul
mov
add
iret
fildll
sbb
imulb
bound
lcall
inc
xchg
sbb
xorb
push
pop
push
dec
cld
xchg
jmp
dec
xlat
add
into
and
add
lcall
dec
test
push
xor
aad
cmp
xor
xor
and
lods
pop
mov
sbb
into
and
fsubrs
icebp
gs
jp
das
mov
loope
jp
sti
sti
push
xchg
outsb
pop
adc
outsl
stc
ret
addr16
xor
pop
cli
or
mov
in
pop
rcl
cltd
xchg
inc
std
and
rclb
das
mov
cltd
pop
cmp
push
dec
xchg
push
aam
sub
test
aam
xor
mov
movb
rol
jno
xlat
add
mov
jp
jmp
popa
clc
dec
scas
xchg
inc
lods
mov
and
lea
jae
iret
cmpsb
int
mov
push
andb
lcall
int
mov
pop
daa
jp
into
cmc
or
mov
cmpsb
inc
movsl
lock
mov
imul
imul
jmp
inc
xor
insb
fisubrs
add
stos
pop
mov
test
sbb
stc
sbb
pop
xor
faddl
into
jne
testb
insb
ljmp
mov
jae
call
mov
jno
or
scas
call
pop
subb
xorps
mov
lret
xor
lock
add
dec
js
mov
inc
repz
fsubrs
and
sti
cmp
repnz
xchg
xor
cltd
sbb
sti
sbb
ja
xlat
stos
mov
or
inc
sbb
mov
add
pop
jg
or
dec
xor
in
inc
pop
dec
fstl
ror
roll
je
xorl
pusha
pop
fstps
fmul
cmpl
lret
push
xlat
sub
icebp
mov
add
sbb
inc
outsb
and
xchg
and
je
dec
xor
scas
int
out
inc
jp
hlt
push
aas
fwait
stc
inc
daa
fsts
pop
jo
mov
jge
push
pop
fwait
cmp
adc
adc
cmc
out
insl
lds
int
jno
fwait
pop
xchg
insl
adc
push
xor
add
testl
out
jg
test
adc
or
jp
roll
hlt
mov
lcall
xchg
rcr
xor
push
shll
cltd
aam
xchg
addr16
fisubl
cli
xchg
pusha
cmp
sub
adc
dec
lcall
inc
cmp
cmpsl
jb
stc
in
add
pop
and
jnp
out
ljmp
sarb
incb
pslld
pop
cmc
fwait
call
and
test
xchg
dec
mov
add
xchg
ja
out
xchg
xor
push
push
popa
sbb
lahf
jle
pop
push
dec
add
sub
push
jle
xor
adc
stos
lods
adc
hlt
out
loopne
cmpb
jg
sub
and
aaa
sub
sub
or
sahf
mov
lds
jnp
sarb
pop
and
jle
push
xchg
jbe
in
xor
lock
adc
dec
push
and
jg
xor
es
xor
mov
rorb
loope
push
jno
cwtl
cmp
pop
lock
jb
xchg
lds
rolb
mov
xor
stos
rcll
xchg
lcall
xorl
jg
mov
mov
nop
fisubl
out
insl
subl
call
pop
sbb
fstpl
cmpsl
fdivl
out
push
lods
mov
roll
aam
addr16
repz
sbb
jns
arpl
lods
int3
gs
lahf
push
mov
andb
mov
lock
adc
fisttps
pushf
dec
jae
lahf
mov
or
insb
push
stos
xor
inc
call
ret
aaa
mov
xor
dec
frstor
sub
dec
adc
jae
mov
add
fisubl
in
rcll
je
sbb
fnstenv
test
jno
mov
mov
into
and
out
xchg
sub
or
outsl
jg
int
aas
mov
pop
addl
push
arpl
ret
mov
pop
add
pavgw
pop
sbb
pop
push
mov
push
int
xlat
mov
mov
mov
sbb
add
push
mov
scas
mov
push
ds
sub
fadd
pop
pop
jge
arpl
xor
es
mov
sub
adc
dec
push
push
orb
aad
and
or
filds
inc
mov
pop
mov
sub
mov
inc
fwait
sbb
mov
mov
or
sbb
loop
mov
mov
inc
flds
push
mov
adc
pusha
mov
mov
xchg
mov
push
leave
mov
mov
stos
add
out
xchg
addb
loope
push
sub
data16
cmp
out
loopne
mov
movsb
mov
xchg
arpl
mov
adc
inc
test
mov
gs
mov
out
cltd
pop
int
leave
cmpsl
into
je
sbb
mov
pop
sbb
push
aam
adc
fwait
push
pop
scas
mov
sub
aad
jns
xchg
push
inc
and
sarl
cmpsb
test
popa
in
bound
jb
lds
mov
in
int3
fidivl
shrl
sub
movsb
and
imul
popa
shrb
sbb
push
jmp
std
popf
add
mov
xchg
mov
sahf
adc
jbe
adc
rcrb
xor
sub
xor
pop
mov
jle
call
test
adc
test
adc
outsb
adc
mov
sbb
ds
push
sub
sub
lret
or
jnp
mov
cmp
imul
out
iret
bound
fadds
mov
pop
push
fisubs
mov
out
sar
cmp
jnp
cmp
xor
adc
or
pop
stc
lret
add
push
add
mov
andb
adc
xor
ficomps
lret
ret
sub
out
xchg
inc
adc
mov
loope
in
and
or
jbe
iret
ja
fistpl
fsubrs
outsl
mov
add
call
pop
pop
push
mov
sbb
push
stos
cmpsb
rclb
pop
push
or
push
or
int
push
add
and
dec
daa
cmp
test
sub
and
mov
lea
xchg
fs
sbb
add
stos
push
mov
sub
iret
ja
enter
out
add
mov
popa
ficompl
movsb
loop
fistl
pop
pop
adc
sbb
xchg
addr16
dec
add
mov
test
sarb
stc
cmpsb
push
xchg
ffree
inc
jg
push
or
popf
nop
in
inc
pushf
inc
xor
lods
sti
jge
jb
jecxz
loopne
inc
dec
xchg
pop
test
jae
mov
popa
pop
inc
icebp
ret
adc
pop
mov
mov
data16
dec
jecxz
andl
pop
in
mov
ss
inc
lods
mov
mov
testl
push
into
lods
jecxz
fmuls
out
inc
mov
mov
sarb
mov
sub
pushf
xchg
addr16
jge
pop
out
mov
ja
adc
cmp
cmp
jmp
fdivrs
mov
lret
inc
popf
sbb
xchg
test
dec
dec
dec
pop
pusha
fsubs
inc
std
pop
shlb
ss
dec
fnstsw
ds
pop
scas
pop
sahf
cmpsb
and
outsb
adc
push
leave
lcall
and
popa
inc
notb
push
bnd
mov
insb
mov
popf
pop
cmpsb
inc
jo
aaa
fcomps
adc
pop
mov
sub
cwtl
cli
jmp
fldcw
sbb
clc
adcl
sbb
pop
sbb
insl
jl
cwtl
stos
jo
shrl
pop
aam
xchg
push
dec
or
lock
jae
loop
jmp
pop
cmp
inc
aam
test
addb
fs
loopne
jae
mov
enter
roll
rcrl
cmpsb
dec
jg
jl
dec
frstor
push
jne
jp
cmc
push
insl
dec
test
test
jge
test
jb
inc
mov
sbb
js
frstor
inc
cld
xchg
mov
cmp
das
push
call
xchg
or
mov
rcrl
outsl
shll
jg
inc
add
pop
pop
sbb
mov
pop
mull
adcb
fldl
push
repz
ljmp
sti
and
adc
cmpsl
adc
mov
movsl
jmp
and
adc
es
dec
sbb
repnz
test
inc
std
inc
pop
adc
pop
mov
sub
ror
sti
fstl
and
mov
cmpsb
clc
ret
mov
test
ret
xchg
pop
out
cs
and
or
jne
rcr
not
sub
pusha
icebp
lods
sub
decb
cmp
sub
in
jae
scas
sub
add
push
ljmp
addr16
mov
sub
add
add
cmpsb
call
sahf
mov
mov
in
xchg
jo
adc
cmp
jmp
fldcw
aad
jl
fcmovnbe
and
pushf
xchg
sub
jns
xchg
pop
add
out
add
lock
les
add
and
or
outsl
jle
cmpsb
movsb
insb
push
incb
out
bound
inc
adc
pop
and
int
lea
sbb
out
icebp
movsb
jno
add
adc
fcoml
in
push
fwait
and
xchg
loop
movl
clc
pop
imulb
sti
jecxz
mov
add
jb
xor
das
inc
push
inc
stos
or
iret
sahf
xlat
dec
push
inc
fmull
mov
push
xlat
sbb
addb
push
mov
dec
es
popf
cmp
dec
into
stc
lcall
mov
push
cs
sbb
jmp
jge,pt
sub
jo
es
lcall
aaa
bound
bnd
dec
fbstp
add
dec
int
adc
ret
shll
loope
jb
daa
out
mov
iret
sar
test
js
aaa
dec
xchg
in
mov
arpl
xchg
std
sub
lret
es
test
xlat
cmp
addr16
xchg
xor
mov
insl
adc
outsl
in
ljmp
popl
es
fs
jle
fwait
sub
dec
repz
jg
or
adcl
inc
fwait
inc
lock
and
shlb
dec
ja
push
clc
add
push
pop
and
fstps
jmp
hlt
cmp
jl
outsl
iret
inc
repz
popf
adc
xor
fdiv
mov
or
jle
aam
jne
mov
icebp
mov
adc
fcompl
xor
lods
jb
xchg
sbb
test
int3
adc
inc
inc
push
in
jle
in
push
loope
adc
stos
in
int3
push
sbb
out
pop
push
pushf
adc
pushf
gs
inc
imul
imul
add
outsb
lea
adc
sbb
addb
mov
lods
movsl
movb
ds
out
push
dec
arpl
loope
push
sbb
int3
add
loop
cmp
pop
pop
rolb
inc
sub
inc
xchg
cmp
test
add
mov
ror
sub
iret
push
jmp
std
jne
mov
adc
stc
add
mov
jg
adc
inc
lret
test
push
sub
mov
inc
mov
push
rorb
xlat
and
pop
call
js
dec
push
andb
or
jecxz
inc
xor
mov
mov
mov
pop
jmp
idivl
or
xlat
jge
xor
outsb
pop
jns
pop
cmp
inc
cmpsb
cmp
adc
out
repnz
rorl
or
push
push
inc
icebp
and
cmp
jno
shlb
adc
pop
popf
pusha
lock
and
and
pop
lock
lods
jnp
add
dec
sti
mov
mov
and
enter
sub
xchg
loop
subl
jge
int3
and
sbb
push
xor
push
pop
mov
ja
add
jmp
out
bound
cwtl
arpl
iret
data16
cmp
and
dec
mov
xor
xor
inc
rorl
data16
xlat
in
in
gs
cmp
ljmp
and
ja
cmovb
add
mov
fistps
mov
stos
sub
inc
or
mov
adc
lea
or
movsb
scas
xor
add
xchg
cmp
xchg
cwtl
nop
out
jne
fnstsw
mov
test
shr
mov
sub
xor
and
mov
sub
mov
mov
mov
ds
stos
xchg
or
mul
adc
xlat
adc
lods
in
or
addb
fmull
mov
rcl
leave
inc
aam
push
cmp
jbe
inc
pop
jnp
adc
call
pop
push
mov
dec
test
sub
mov
pusha
int
clc
arpl
mov
sti
pop
xor
xorb
sub
fwait
add
dec
pop
mov
push
push
rolb
loop
shll
push
mov
int3
xor
xchg
adc
xchg
adc
cmp
pop
push
cmp
or
inc
fst
idivb
jnp
out
jle
scas
mov
fisubrl
out
loopne
xchg
mov
mov
adc
lods
mov
or
cltd
nop
jl
pop
dec
leave
lret
clc
lcall
adc
cs
nop
lds
dec
scas
test
jno
rsqrtps
ret
outsb
sbb
jmp
out
mov
movsb
xchg
pop
inc
or
rorl
imull
sub
xchg
sbb
ljmp
mov
lahf
sbb
es
test
clc
xchg
out
cmp
inc
out
imul
cs
xor
in
out
pop
shlb
or
or
mov
inc
pop
mov
in
xor
and
xor
add
xchg
or
jg
popa
xchg
enter
fisttpll
shrb
mov
xchg
lods
mov
mov
or
xchg
jle
inc
cmp
pop
in
xorb
addr16
adc
mov
add
sbbl
push
mov
addr16
ja
add
in
jo
iret
cmc
adc
pop
cli
adc
fmull
add
cld
sub
lods
mov
cs
insb
mov
cld
loopne
test
lret
jb
fcoml
jae
ljmp
fcoml
dec
hlt
sub
test
and
js
jns
insb
stos
mov
cltd
xchg
pop
pop
jl
adc
dec
clc
clc
mov
add
push
jne
and
xchg
icebp
xlat
aaa
push
push
mov
push
pusha
cmp
cmp
js
lods
inc
xchg
fsubp
les
cmpsl
int
adc
xchg
call
xchg
push
sub
adc
push
es
lock
pop
fwait
fwait
inc
lret
mov
mov
inc
aaa
and
add
cmp
sub
dec
sarw
fxch
cmpsb
es
rcll
xchg
loope
dec
mov
jae
jae
and
jecxz
adc
dec
cmc
push
sub
out
cmp
rcl
jmp
call
jae
jp
sbbb
jns
cld
jae
sbb
shlb
cwtl
cs
or
ja
push
and
lret
and
pop
punpcklwd
mov
add
pop
sub
adc
push
dec
bound
xor
xor
adc
das
jnp
fsubr
mov
testb
clc
scas
cmpsb
in
xchg
stos
mov
orl
pop
test
xor
les
test
inc
dec
stc
imul
fisubrl
addr16
lds
and
mov
and
mov
add
cmp
pop
pop
js
sub
enter
std
loope
cmp
jmp
bound
mov
or
cmp
pop
sub
fld
pop
mov
dec
pop
or
aad
mov
cmc
xor
int3
jne
fucomi
xchg
inc
xchg
jbe
cmp
dec
mov
stos
mov
xorl
test
in
sbb
jg
int
aad
loope
fistps
adc
and
sub
sub
xchg
pop
cmp
jo
dec
scas
or
imul
imul
or
xchg
or
movsb
cmp
aad
xor
mov
sub
add
and
je
push
cmp
add
inc
pop
outsl
or
ss
fiadds
or
out
pop
loopne
sub
addr16
pop
in
cmp
out
sbbb
mov
xchg
lods
and
sbb
adc
mov
inc
mov
add
xchg
in
inc
test
cld
or
mov
pushf
push
pusha
xor
push
jns
int
loopne
pop
roll
cmp
pop
mov
and
test
adc
jle
in
sbb
sti
je
rcr
and
popf
add
cmpsb
repz
enter
pop
sbbl
dec
daa
sbb
lods
and
hlt
or
push
mov
clc
int
int3
xor
lea
cld
js
imul
add
inc
movsl
sub
test
in
ljmp
and
jl
push
out
xor
sbb
push
lret
add
stos
inc
ret
xor
lret
adcb
mov
mov
pop
cli
cwtl
cld
repz
loope
xor
stc
sub
jb
sbb
int
dec
fldcw
sub
ret
mov
jno
lea
enter
test
lcall
sahf
push
dec
sbb
movsb
lahf
adcb
jo
stos
inc
and
lds
dec
pop
wbinvd
inc
fcoml
sub
call
push
dec
loopne
push
outsl
push
dec
out
pop
ret
adc
and
mov
jg
dec
and
call
es
daa
hlt
roll
fstl
add
mov
sub
sub
mov
dec
cmpsl
dec
pop
mov
xadd
cltd
dec
and
es
add
fwait
add
and
inc
jae
gs
cld
push
bound
pushaw
ja
movsl
lret
or
aas
inc
stos
xchg
repz
xor
dec
iret
and
xorl
pop
mov
scas
push
cli
lcall
out
pop
cmpsb
int3
leave
adcl
cmp
mov
stos
fnstenv
mov
sahf
mov
mov
stos
push
xor
add
mov
scas
fs
xchg
aaa
dec
in
or
cmpsb
imul
pop
andl
lods
in
jp
and
mov
inc
ljmp
mov
out
adc
cmc
das
dec
sub
push
cld
cmc
lock
lcall
push
dec
in
insl
jne
cmpsb
iret
cwtl
fnstsw
dec
dec
pop
shll
clc
jbe
or
dec
flds
dec
out
xor
or
cmp
cmp
iret
addr16
jmp
shr
ss
mov
cmp
push
cmp
mov
ds
scas
fdivs
push
push
imul
outsb
jns
lret
fs
mov
sti
sbb
xor
dec
xchg
outsl
adc
push
pop
jne
mov
add
sti
fidivrs
mov
nop
es
cmp
pop
stc
mov
ficomps
insl
sti
xchg
add
inc
and
add
inc
mov
jl
add
ret
aas
popf
std
js
je
mov
cmp
push
ja
mov
shlb
jns
clc
ret
mov
add
pop
and
xor
call
fsubrp
and
push
cmp
cmpsb
dec
in
xor
mov
xchg
jae
lret
testb
test
outsl
mov
pop
mov
stos
mov
inc
aad
std
and
stos
xchg
inc
push
sti
inc
sbb
outsl
imul
and
inc
sub
adc
aam
js
push
mov
out
fbstp
push
sub
mov
mov
sbbl
jno
scas
lds
test
xor
aam
leave
pop
sbb
xor
lods
pop
cmp
push
daa
add
pop
xchg
mov
test
xchg
into
or
aaa
sub
cmpsb
cmc
popa
cs
and
sti
out
das
ja
or
test
xchg
cltd
jbe
jp
or
aam
stos
call
or
stc
mov
push
cwtl
arpl
sub
pop
xor
fucom
push
mov
jb
jmp
cmp
jbe
pop
inc
jecxz
pop
xor
sub
jns
jg
push
mov
imul
es
in
mov
out
stos
xchg
inc
jmp
xchg
mov
mov
pop
addr16
filds
call
sbb
xor
js
sbb
jl
pushf
mov
les
push
insb
dec
fidivrl
push
add
sbb
inc
into
and
dec
mov
sub
scas
lret
sbb
fimull
add
mov
aas
lret
leave
lcall
cmp
xor
mov
pop
or
loope
push
sub
and
les
sbb
sbb
imul
leave
push
das
jmp
pop
or
jb
mov
hlt
cmpsl
sbb
push
aad
jle
fimuls
push
mov
sub
jle
loop
xchg
shl
clc
pop
and
iret
lret
and
rcr
push
iret
lea
mov
or
cmp
lods
shl
mov
pop
sbb
inc
push
das
mov
mov
push
mov
add
int3
enter
dec
aaa
pushf
mov
mov
fisubrs
pop
xchg
adc
lret
dec
xor
cmp
dec
pop
cmpsl
sbb
mov
rorl
and
sub
ret
and
pop
subl
xchg
add
lods
xchg
sbb
fdivrs
pushf
and
add
sub
push
in
mov
mov
repnz
cmp
mov
mov
movsl
mov
adc
movsl
popa
aam
loopne
cmpsb
lds
add
mov
mov
pop
out
adc
ja
mov
sbb
jecxz
fisubl
mov
jl
sub
mov
xor
xor
mov
jg
stos
outsb
outsl
fwait
pop
sbb
pop
leave
test
jae
cmpsl
ljmp
mov
xchg
call
fs
jne
sbb
sub
outsl
inc
ljmp
jmp
aad
enter
or
je
mov
sub
test
cmp
mov
pushf
lret
in
cs
mov
ljmp
shlb
in
xor
cmp
test
je
test
out
push
repz
fmuls
jp
add
add
or
loope
pop
pop
xor
lock
lcall
inc
inc
lcall
add
jle
xor
cmp
scas
imul
push
push
xor
mov
xor
inc
inc
add
fmuls
sub
inc
adc
push
jno
xor
cmp
sti
xchg
loope
jp
mov
out
aam
push
sbb
jnp
mov
push
inc
movsl
pop
push
add
fistps
cmpsb
mov
pop
fadds
add
mov
ds
lds
cmc
sbb
test
cmp
negl
adc
shr
mov
popa
lea
repnz
pop
shll
sbb
jb
inc
jmp
inc
pop
pop
clc
rcrl
mov
int
mov
xchg
and
rcr
stc
adc
imul
xchg
inc
adc
inc
mov
xchg
test
lahf
inc
adc
mov
fimuls
or
xchg
cltd
fnstcw
push
inc
sahf
in
js
cmp
jmp
sahf
scas
push
fmul
lcall
and
xor
sbb
lods
insb
rolb
mov
or
imul
xchg
es
pop
mov
ljmp
dec
or
dec
scas
cmp
mov
cmp
push
mov
stos
and
or
out
out
dec
jp
cmp
mov
and
aam
push
je
inc
into
dec
mov
daa
mov
inc
sbb
cmp
sbb
loope,pt
aad
pop
leave
lahf
mov
xchg
ret
add
cwtl
fisubrl
xchg
cmp
fiaddl
pop
aam
stc
xchg
sbb
push
mov
paddsw
jecxz
jmp
lret
jno
js
out
imull
arpl
mov
addr16
lret
orl
insl
mov
cmp
ljmp
jmp
out
adc
test
pop
gs
fcomp
mov
sub
sbb
adc
adc
inc
jns
pop
or
mov
dec
lods
dec
in
ret
jnp
fisttps
inc
sahf
dec
dec
push
mov
jg
inc
mov
outsl
into
push
or
out
dec
popa
jo
jo
aad
sbb
addr16
pusha
push
imul
ljmp
jne
lret
lea
jne
sbb
mov
xchg
lcall
stos
cmpsl
jle
mov
push
sub
subb
sub
jae
int3
lcall
lods
sahf
jae
sbb
pushf
jno
stos
das
rcrb
and
lock
inc
jp
sti
dec
pushl
call
sbb
xchg
sub
xchg
es
push
mov
sub
mov
cmp
mov
into
nopl
ja
iret
kmovw
or
adc
inc
mov
mov
mov
inc
scas
popf
je
ljmp
shrb
xor
cmpsl
xchg
shlb
movb
shrl
cmp
push
sub
adc
dec
sub
inc
xor
inc
jge
sbb
push
sub
xorb
push
hlt
jae
and
fildl
mov
mov
or
dec
loope
sbb
stos
xor
imul
xor
lcall
xchg
mov
insl
cmc
lret
ret
dec
adc
push
movsl
push
cmc
outsl
cmp
fsubr
xchg
pop
mov
pop
rcll
mov
pop
xchg
js
outsl
pop
pusha
xchg
xchg
stos
and
push
ffree
push
and
sbb
or
daa
mov
pushf
insl
xor
pop
jno
into
dec
fwait
lahf
xchg
xor
add
negb
cmpsb
aaa
sub
and
cltd
in
adc
push
mov
pop
cwtl
insl
jo
por
ret
sbb
sbb
and
cmpsb
dec
aad
sub
mov
imul
rcrb
sub
lea
repnz
cmp
insl
imul
pop
xchg
lea
cmp
jbe
mov
jp
in
andl
ret
mov
bound
das
xlat
cmpsl
movsl
lea
xor
xlat
insl
fists
int
jg
lcall
stc
inc
fdivp
repnz
ja
jns
out
jecxz
in
nop
lcall
lea
dec
out
dec
jnp
aas
xor
mov
push
dec
add
xor
ds
ffree
daa
lea
inc
push
imul
or
adc
pop
adc
jnp
mov
jb
pop
shlb
cld
fdivrs
push
push
cli
mov
mov
adc
decl
xchg
fisttpll
fcom
fdivrs
mov
inc
xchg
push
sub
pop
mov
xchg
push
pop
xor
ret
mov
cmp
ret
jo
push
mov
pushl
push
subb
sahf
daa
cld
jge
lea
test
pop
cltd
sbb
into
addl
fsqrt
mov
cmpsl
in
jae
xor
jp
out
js
dec
ficomps
mov
jg
andb
inc
mov
notb
add
mov
sahf
inc
dec
xchg
out
sbb
jnp
lahf
outsb
xor
add
testb
xchg
xchg
lods
xchg
inc
xorl
jo
dec
jo
mov
pop
pop
inc
xchg
arpl
cld
je
sbb
bound
pop
pop
jle
lcall
xchg
jmp
jno
mov
in
cli
das
xor
ret
sbb
lea
mov
jno
add
xor
cmp
and
cmp
nop
js
scas
pop
pop
loope
lds
lock
cmp
arpl
popa
mov
adc
or
push
hlt
mov
mov
cmpsl
lcall
je,pn
sbb
mov
je
and
or
sqrtps
idiv
sbb
ret
push
ljmp
cmp
cmc
outsb
scas
xchg
das
ret
sub
sub
pop
sbbl
cmpsl
int3
out
xchg
test
adc
jle
jo
add
movsl
xchg
jbe
lret
jmp
rclb
daa
and
mov
push
push
lret
int
xchg
xor
push
pop
negb
jo
or
xchg
sahf
inc
stos
push
sub
ret
gs
push
popa
les
addr16
mov
cmpsb
mov
mov
std
cmpsl
movlps
dec
lods
cld
inc
xchg
das
mov
shrl
pop
mov
xchg
ret
sub
sub
sub
jnp
jne
popa
sub
pushf
sbb
fs
ljmp
cmp
jnp,pn
and
lea
pop
shl
dec
fdivl
sub
dec
sti
frstor
jno
jl
fiaddl
and
adc
xchg
jecxz
sbb
and
stos
loopne
mov
leave
mov
jbe
mov
mov
fwait
xorl
fs
cmp
cmp
cs
sub
arpl
icebp
and
loopne
push
js
jp
mov
je
inc
dec
cmp
inc
push
cs
addr16
push
imul
ja
push
cmc
in
mov
popa
insl
push
lods
sti
mov
dec
xchg
jnp
sub
inc
mov
imul
fldcw
or
in
adc
and
push
fwait
xchg
add
xor
mov
add
mov
push
dec
dec
dec
insb
push
test
mov
stos
nop
pushf
inc
out
pop
rcll
mov
sub
movsl
and
sub
mov
jo
loope
ss
jp
lahf
cmp
aas
add
sbb
iret
loop
inc
pop
fcompl
das
xchg
and
mov
inc
jae
or
repnz
jnp
cs
inc
or
bound
leave
mov
or
sub
andb
ds
inc
cmp
pop
and
sahf
dec
in
sub
int3
mov
jl
jnp
push
sbb
jge
mov
jl
or
popf
outsb
lret
aam
or
call
call
fwait
icebp
aad
out
add
aam
addl
jge
out
test
jl
pop
lods
push
cld
enter
inc
repnz
push
adcl
add
mov
arpl
shll
clc
je
es
push
loopne
jecxz
add
icebp
xor
pop
push
ror
fwait
xor
mov
sub
pop
jbe
pop
push
cmpsb
xor
mov
bound
mov
lds
and
ret
call
inc
adc
sti
loopne
mov
js
in
sub
cli
loop
cmpsl
jbe
sub
jge
int
lds
cmpsb
js
inc
jmp
bound
rcl
mov
push
aaa
movsb
xor
test
sbb
pop
pop
xor
cmp
lods
test
insb
dec
inc
les
pop
sahf
xlat
ljmp
div
adc
out
flds
jecxz
add
nop
mov
cmp
cmp
stc
fldcw
adc
lahf
loop
adc
xchg
push
xchg
mov
ss
mov
mov
es
sbb
push
pop
aaa
push
jg
mov
pop
or
sbb
push
mov
mov
sbb
sub
and
mov
aas
dec
mov
nop
pop
repnz
xchg
jbe
mov
push
out
mov
or
aaa
decl
aam
jge
loope
jae
dec
rcl
mov
push
in
imul
lcall
xchg
xchg
pop
andl
scas
cltd
push
dec
nop
shlb
mov
fnstsw
stc
ror
jne
stos
sti
push
shll
pop
enter
mov
cmp
out
add
jecxz
xor
pop
loop
push
cli
pop
or
or
imul
and
lret
push
test
mov
outsl
mov
mov
int
mov
shl
test
mov
mov
sub
ret
push
mov
add
push
jl
mov
jne
ret
adc
sbbl
dec
lds
cmp
cmp
popa
sbb
or
mov
cmp
inc
xor
neg
and
push
ss
shlb
cmp
popf
call
push
push
dec
je
adc
fcom
and
setns
lods
pop
js
adc
das
or
xchg
dec
mov
push
sbb
test
pop
arpl
fldcw
cwtl
xchg
jmp
std
sbb
mov
and
jg
shll
movsb
scas
fcomip
push
je
inc
iret
clc
fnsave
push
cwtl
add
sbb
sbb
jmp
mov
divb
cmp
test
pop
cmc
push
ja
jbe
inc
pop
jne
and
mov
inc
in
dec
test
jge
mov
das
mov
enter
cli
push
jge
jnp
mov
mov
fistl
push
sbb
inc
loope,pn
jmp
sahf
inc
inc
sbb
sbb
repnz
push
jl
inc
shlb
pop
shrl
push
dec
xchg
in
loope
push
adc
out
out
sbb
add
push
dec
push
mov
lds
insb
or
pop
fdivrs
push
scas
call
mov
sbb
idivl
xchg
xlat
xor
mov
gs
cwtl
inc
test
mov
cmp
adc
out
mov
xchg
pop
arpl
js
sti
fldcw
daa
push
sub
add
cmp
repz
pop
out
adc
dec
ret
inc
adc
jns
aad
hlt
lds
das
push
jnp
cmp
shlb
dec
push
sbb
outsb
ret
xor
dec
pop
jbe
xchg
aaa
jp
jns
add
cld
jns
xchg
jg
or
sbb
sub
popa
cmpl
test
divl
push
xor
sub
or
cmpsb
pop
insl
cmpsl
imulb
repz
mov
mov
jnp
adc
data16
dec
aam
fisttpll
rorb
bound
ss
popa
lods
sub
adc
rcr
mov
sbb
in
std
in
js
inc
rcl
sub
sbb
mov
pop
push
add
mov
push
or
mov
xchg
xchg
push
adc
adc
popf
sub
ffree
xchg
pop
mov
stos
sbb
loope
sbb
xlat
std
push
iret
imul
dec
push
mov
adc
ss
or
inc
dec
push
push
cli
push
sbb
ja
add
fsts
dec
push
adc
mov
daa
cmp
xchg
mov
fld
and
push
or
leave
sarl
adc
dec
je
jg
pop
jg
out
adc
mov
popa
pop
mov
movsb
mov
cs
rcll
xchg
test
testb
adc
mov
sub
xor
mov
js
xchg
xor
leave
repnz
test
mov
cwtl
out
call
clc
pusha
dec
xor
mov
dec
push
addr16
ljmp
leave
mov
mov
lret
mov
ret
fistpll
lahf
xlat
mov
mov
leave
push
push
cmp
test
jle
insb
cmp
sbb
into
xor
push
fistps
or
add
inc
pop
lret
int3
stos
cmp
dec
add
mov
inc
sbb
ljmp
lahf
pusha
mov
es
push
xchg
lea
cmp
fcomip
pop
cmp
repnz
and
aam
pop
cltd
sbb
negl
mov
mov
pop
repz
mov
pop
add
ret
fsubrs
xor
les
popf
stos
jne
loope
mov
lahf
ret
cmp
xchg
scas
jbe
imul
aaa
rcrl
add
push
dec
mov
es
pop
loopne
jae
sbb
out
shll
dec
testb
repz
xor
xchg
dec
pop
jle
cmp
xchg
cmp
push
lret
setb
int3
sbb
stc
inc
pop
addr16
adc
lahf
stos
mov
sbb
fbld
add
pushf
test
mov
int3
or
rcll
cli
or
mov
adc
or
push
adc
sbb
cmpl
jmp
cmp
add
jo
inc
orl
jmp
ss
je
out
lea
js
pop
lea
ret
je
outsb
adc
and
gs
cmpl
cmpsb
sub
loop
js
test
lods
pop
push
xchg
shlb
mov
lds
and
loope
sbb
outsb
mov
xor
mov
cmp
mov
inc
push
mov
lods
push
cmp
ja
idivl
xor
xchg
mov
pusha
mov
aad
push
add
jmp
in
test
sbb
sar
insb
dec
lods
imul
stos
pop
inc
lcall
cmp
ret
mov
mov
lds
pop
lock
in
mov
in
mov
ljmp
add
scas
push
fdivrl
push
pop
inc
lds
sbb
mov
addr16
jbe
fsubl
dec
xor
arpl
fldt
sub
jmp
or
jle
aam
mov
je
cmp
rcl
adc
jb
mov
jb
adc
leave
sub
mov
lds
adc
push
cli
mov
mov
ja
loop
in
das
dec
fucomip
int
mov
inc
lret
leave
mov
dec
out
xchg
mov
pop
xor
ds
das
aam
lret
cmp
cs
pop
data16
inc
mov
cmpsl
jp
ret
xchg
sub
sbb
mov
add
icebp
mov
lahf
nop
pop
xchg
mov
mov
dec
add
mov
cmp
jl
fs
stos
ds
push
mov
insb
inc
aas
sub
mov
lods
mov
mov
mov
mov
mov
pop
pop
xchg
cmp
pop
adc
mov
push
add
xor
mov
add
test
sbb
aam
sbb
cmp
jmp
mov
jno
mov
adc
sbb
imul
mov
sbb
dec
inc
push
setl
cmp
mov
lahf
sub
shl
test
data16
mov
jb
fwait
insb
fdivs
subb
lret
inc
call
jnp
sbb
rclb
int3
stos
sbb
or
jg
lcall
push
xor
fdivp
cli
out
pop
mov
mov
push
push
movsl
ja
xor
in
mov
imul
scas
out
push
mov
sarl
fxtract
out
xor
in
sbb
pop
fsts
sbb
jno
push
cwtl
js
fwait
stos
inc
test
sarb
pushl
cmpsb
xchg
jecxz
mov
sub
push
jecxz
mov
cli
pop
stos
aas
jb
xor
cmp
xor
addr16
sbb
sub
hlt
orb
sub
inc
ffreep
int
pop
add
in
lds
inc
pop
xlat
sahf
xchg
into
ljmp
xchg
add
mov
push
cmp
shll
and
clc
outsb
les
inc
dec
das
sbb
sarb
into
pop
sub
push
push
jp
ss
loopne
sar
lods
inc
stos
push
sub
mov
lea
xlat
pushl
out
add
into
jbe
xor
xchg
adc
inc
mov
xorl
outsb
jo
or
je
outsb
xchg
inc
fabs
dec
loop
sbb
scas
fldt
cli
pop
jbe
mov
xchg
aas
fdiv
cmp
add
loopne
sbb
loope
enter
call
xor
pop
mov
mov
ja
xor
mov
mov
inc
sub
mov
cmpsl
jl
sbb
cmpb
inc
imul
xchg
dec
mov
or
pop
or
dec
or
cmp
jae
sub
push
les
clc
xchg
adc
push
mov
adc
or
orl
cli
mov
notb
and
mov
lret
sbbb
mov
mov
sbb
fmul
loope
xchg
int
xor
jge
cmp
outsl
inc
dec
xor
sbbl
repz
rcl
stos
fs
cmp
mov
mov
insb
lds
mov
mov
sbb
push
stc
mov
pop
orl
addr16
jmp
into
nop
dec
xor
mov
stc
mov
mov
lret
and
insb
into
mov
jno
fmuls
mov
icebp
jge
in
push
pop
pop
xor
mov
dec
je
scas
cs
mov
cld
mov
cmpsb
aaa
shlb
test
mulw
xchg
push
fldenv
adc
mov
imul
push
stc
xchg
cmpsl
call
sub
push
arpl
pop
push
in
push
lods
sbb
out
fsubrl
sti
insl
dec
and
sub
roll
mov
or
xchg
mov
fwait
aam
movsl
sbb
dec
jecxz
xchg
cltd
sti
jg
cmc
clc
add
dec
pop
pusha
pop
les
mov
int3
lcall
lods
jae
test
push
jno
jbe
xchg
sbb
dec
jecxz
ds
jb
mov
gs
fisubs
xchg
pop
data16
mov
xor
daa
sub
shlb
inc
aad
jmp
inc
inc
jmp
sbb
cmp
mov
fwait
call
filds
pop
mov
mov
mov
mov
pop
adc
ret
lahf
rolb
aad
pop
push
xorl
pusha
lods
lret
repz
cmc
fcom
pop
sub
outsl
int3
adc
stc
enter
adc
and
jns
inc
int
subb
xchg
mov
ss
lret
movsb
loop
inc
psrlq
jg
jae
test
jo
lea
sub
and
dec
push
lahf
push
addb
sub
and
bound
clc
das
jno
cmp
andb
mov
repz
cmp
dec
in
mov
push
add
push
xchg
jmp
push
mov
xchg
pop
in
out
jo
add
xchg
sub
js
andb
jb
sub
pop
mov
dec
add
push
fldl
cmp
fwait
mov
sbb
inc
dec
push
xchg
mov
sar
add
jo
enter
aam
repz
push
lret
jle
cs
mov
sub
pop
enter
pop
aad
imul
fwait
mov
movsl
aad
ret
test
aad
aas
push
repnz
es
dec
push
push
push
test
ficoml
das
dec
add
mov
movb
adc
shll
adc
frstpm(287
push
outsl
pop
mov
xor
add
xchg
ds
mov
fisttpll
jnp
sahf
jno
and
dec
js
cld
push
mov
pop
adc
or
cmpsl
and
bound
call
inc
jo
push
mov
into
adc
lods
sbbb
jmp
in
inc
int
ja
setbe
cmc
mov
mov
out
mov
test
cmpsb
add
mov
sbbl
sahf
jne
cmp
adc
pop
daa
jae
push
loope
push
add
mov
xor
arpl
mov
dec
into
mov
addr16
notl
dec
iret
mov
insl
lock
cmp
jne
cmp
lds
sbb
outsb
stc
sub
repnz
xchg
lret
pop
jnp
ret
jecxz
pusha
lds
push
jp
inc
push
jp
mov
stos
in
test
push
std
fimuls
movsl
push
jne
imul
add
pop
imul
scas
sbb
iret
pop
ret
or
sub
cld
out
in
dec
insb
push
pop
cwtl
mov
add
lods
loope
inc
popw
icebp
sarl
jns
jg
je
sbb
jo
fnstcw
test
scas
sub
jo
xchg
mov
pop
pop
xor
pop
hlt
push
mov
mov
cs
pop
hlt
rcrl
pop
shl
or
call
mov
push
push
loop
mov
or
push
xor
stos
or
ret
mov
jecxz
movl
call
xchg
adcb
or
stos
outsb
push
mov
mov
aas
loopne
jl
les
je
pop
jge
lcall
and
shrb
sub
mov
sub
push
mov
inc
outsb
xchg
adc
imul
mov
pop
mov
movsb
mov
pop
test
add
mov
lcall
int3
jb
arpl
fs
mov
dec
sbb
scas
jl
test
insl
inc
sbb
jge
pop
mov
cmp
add
cmp
xchg
hlt
sub
pop
lds
sbb
lods
stos
insl
decl
xchg
sbb
sbb
push
rorl
es
add
xchg
clc
add
fsubrl
mov
sub
xchg
cmp
or
cmpsl
ret
mov
cmp
sub
push
rcll
mov
fiadds
jns
push
push
jno
cmp
or
xor
repz
mov
jecxz
push
add
lods
outsb
fld
push
push
test
push
mov
add
pop
push
ds
pop
sub
pop
fcoml
adc
mov
xchg
fsub
outsl
hlt
cmc
insb
sbbl
decl
rcrl
push
pop
add
cwtl
cli
xchg
cmp
ljmp
pop
push
movsl
gs
dec
test
test
xchg
js
scas
xor
mov
jl
arpl
sub
cmp
sub
rcl
cmc
outsb
jno
lcall
negb
inc
dec
arpl
gs
pushf
inc
push
xor
es
cmc
jmp
dec
lahf
repz
insb
gs
repz
push
mov
add
insl
jne
or
andb
mov
push
mov
movsl
ljmp
shrb
lahf
mov
repz
adc
xchg
sbb
stos
arpl
inc
data16
cmc
jae
add
or
and
or
cmpsl
js
jae
ljmp
insb
pop
dec
dec
pop
mov
add
push
incb
jns
int
int3
lahf
cmpsb
movsl
jmp
xor
ds
jp
rcrl
outsl
rorl
lock
add
arpl
fbstp
or
sbbb
lds
shll
js
in
fnstenv
es
inc
cmpsl
cmpsl
push
movsb
arpl
je
add
mov
arpl
movsl
add
xor
dec
sbb
cmp
pop
xchg
push
cmp
xor
jbe
sbb
stos
sub
fmulp
inc
push
pop
mov
nop
loopne
in
repnz
out
pop
jbe
xchg
pop
lahf
cmc
pop
mov
addr16
cmp
movsl
jne
push
jno
sbb
sbb
add
and
inc
lods
mov
ljmp
ss
out
insl
pop
out
sub
leave
xchg
mov
fisubs
leave
pop
movsb
xor
rorl
pop
ret
icebp
sub
add
pop
jb
iret
jb
hlt
mov
mov
push
dec
pop
in
mov
add
inc
jmp
mov
popa
dec
sub
inc
xchg
ja
movsb
jnp
inc
cmp
xor
jae
push
ficoml
push
mov
test
push
and
out
daa
mov
test
fnstsw
cmpsl
ss
enter
incb
mov
out
les
mov
jmp
enter
enter
adc
hlt
xchg
ja
jb
sub
jmp
call
fisubrs
add
xchg
xlat
lcall
dec
jo
add
dec
add
inc
test
jae
cmp
fisubs
push
or
stc
cmc
fildl
push
xchg
push
aad
mov
cmp
mov
push
gs
xchg
lret
and
add
outsl
xchg
dec
jae
pushf
pusha
add
cld
rolb
or
and
loop
push
test
adc
jmp
movl
aas
adc
out
int3
gs
push
in
and
les
add
adc
jno
popf
aas
mov
lods
push
sbb
jmp
aam
adc
insb
mov
adc
data16
jbe
hlt
shll
dec
inc
test
daa
push
sar
push
shrb
fbld
testb
cmpsl
xor
scas
repnz
fmull
dec
leave
fcmovne
add
jno
jae
pop
pop
mov
xor
call
jge
jbe
lods
cmp
lock
es
pop
out
call
add
push
mov
or
mov
xchg
mov
cmp
loope
sbb
loopne
sub
mov
bound
clc
ret
adc
test
pop
in
rolb
roll
ja
and
cld
fcomps
shll
test
mov
outsb
xor
rolb
xchg
adc
pop
xchg
jl
divl
cmpb
repz
jmp
mov
xchg
sbb
jl
nop
push
int
sahf
lcall
mov
leave
sub
mov
mov
call
pusha
fdivl
and
shrb
loop
xor
mov
push
or
clc
sub
lock
push
fidivrs
inc
out
loop
add
aaa
aam
rcrl
fistl
xor
push
add
push
lcall
stc
lods
iret
out
ja
test
jecxz
sbb
sub
call
and
insb
scas
scas
dec
cmc
pop
fsubrl
out
push
jo
sbb
aaa
jns
shlb
shl
rolb
sahf
out
sarb
fdivrl
xor
jno
int3
arpl
jno
jmp
cmp
mov
fucomp
enter
addb
pusha
movsl
in
pop
divb
in
pop
in
cli
aas
lods
pop
repz
mov
pop
sbb
mov
sub
mov
test
jo
aam
mov
cmp
cmovge
add
hlt
mov
movsb
data16
in
jnp
sbb
rcrb
cmpsb
push
lds
leave
inc
dec
add
pusha
push
imul
mov
or
flds
sahf
sbb
filds
xchg
pop
mov
xchg
outsb
loopne
ds
add
popa
dec
pushf
hlt
jmp
loopne
imul
das
mov
adc
cmp
ja
or
inc
in
or
mov
std
loop
mov
cld
mov
and
ds
loope
shrl
aad
sub
js
jge
push
es
in
cmpsl
outsl
and
mov
ret
cmp
jnp
dec
out
jmp
pop
int3
or
repnz
jecxz
jnp
aaa
add
test
mov
rcrl
loopne
xchg
dec
and
stc
fwait
sub
dec
std
rorb
jmp
dec
std
fstpl
test
and
xchg
mov
nop
mov
fwait
mov
or
add
outsb
loope
push
dec
adc
pop
flds
iret
or
insb
outsb
aam
insb
xchg
not
mov
in
or
inc
arpl
add
sarb
push
popl
lcall
decb
daa
push
inc
test
push
cltd
sahf
pop
fldenv
jnp
or
push
push
enter
ds
fdivl
xchg
stc
in
and
aaa
lds
push
add
xor
sbb
sub
call
mov
cli
push
out
inc
nop
xor
cmp
jo
adcl
insb
xchg
mov
inc
jp
nop
rcr
ret
outsb
loopne
scas
adc
mov
pop
dec
into
aad
adc
inc
lret
daa
aam
sub
inc
cmp
test
xchg
shlb
ds
lock
xor
cmpsb
test
jg
sbb
daa
lea
push
push
cmpsl
rorb
xchg
das
vandps
add
fwait
jb
sbb
movsb
jg
lds
sub
movsb
leave
ja
addr16
push
jo
lahf
sub
pop
adcb
sub
outsl
aad
or
inc
decb
sbb
ret
cmp
sbb
lret
scas
outsl
pop
lods
lahf
loope
shlb
lret
rol
rorb
cmpsl
sbb
inc
movsb
dec
mov
sbb
jae
mov
or
lret
cmpsl
cmp
push
pushf
cmp
jno
js
popf
sub
lods
js
imul
push
mov
xchg
dec
adc
xor
aas
push
inc
lods
popa
fisubs
stos
pushl
lea
sbb
aad
jge
and
or
frstor
int3
dec
test
xor
jl
rol
test
lock
and
jne
pop
lret
xchg
jg
aas
cltd
orb
xor
mov
adc
popf
mov
gs
mov
pop
clc
arpl
pop
pusha
scas
les
inc
aaa
cmp
scas
xor
mov
orl
imul
mov
test
aaa
scas
cmp
mov
out
xchg
test
out
pop
xchg
movsb
dec
cmpsb
push
mov
mov
pusha
cmp
pusha
jae
cld
fsub
shlb
movsb
out
sbb
sti
inc
dec
mov
rorb
stos
int
jns
cmp
or
cltd
stos
dec
mov
ljmp
jge
frstor
sub
dec
sub
mov
push
out
or
cmp
mov
pop
cmp
xchg
fwait
in
adc
dec
cltd
mov
ret
fdivr
add
and
insl
and
adc
iret
xchg
int
cmp
push
jecxz
and
shrb
out
sbb
mov
pop
xchg
mov
and
movsb
mov
or
clc
jg
lock
xchg
inc
enter
cltd
push
or
jl
repz
pmullw
je
sbb
icebp
push
inc
dec
mov
aaa
jmp
add
mov
mov
inc
test
movsb
adc
pop
jo
sarb
and
adc
pop
fcmovu
outsl
bndstx
gs
stos
pop
imul
cmpsb
xor
dec
or
jno
and
inc
xchg
dec
mov
lods
mov
xor
jno
cmpsb
and
cmpsb
cmp
pop
push
repnz
xlat
lret
pushf
mov
jmp
xchg
cli
pop
jbe
repnz
dec
imul
add
inc
lock
sub
lods
incb
pop
out
cmpsl
ror
insb
in
push
cmpsb
cmp
bound
outsb
mov
mov
xchg
jae
mov
mov
jmp
movb
lahf
xchg
adc
lea
cmp
lcall
xor
popa
inc
cwtl
cmpsb
enter
adc
xchg
inc
rclb
jb
aad
popf
fwait
add
push
int3
inc
ds
outsl
jmp
sub
or
mov
jno
nop
out
jge
inc
test
call
add
dec
cwtl
cmc
cmp
sbb
xchg
xchg
mov
xor
popf
jbe
jb
cld
sbb
dec
cmp
cmpsl
movsb
call
in
loopne
or
mov
test
aad
shll
sub
push
push
push
mov
ss
mov
jb
stos
stos
jae
sub
in
cmpb
gs
jecxz
sub
adc
test
sub
or
mov
fwait
sub
push
xchg
in
cli
mov
in
cs
les
mov
xor
das
nop
or
fistpll
test
sahf
subb
adc
and
xchg
mov
imul
mov
pusha
push
sbb
push
dec
and
lahf
inc
iret
and
xchg
cmc
scas
xor
scas
jle
pop
jbe
push
das
mov
jle
aaa
mov
loop
pop
testb
std
imul
adc
ret
call
lea
push
push
push
fldl2t
fstl
sbb
cld
addr16
lods
mov
in
mov
jecxz
or
sub
dec
jo
mov
rorl
jecxz
pop
popa
jp
inc
cmp
xchg
loope
push
cmp
sbb
les
sahf
jle
push
cmp
imul
scas
and
jnp
test
inc
leave
adcl
dec
jnp
ss
mov
cmp
test
iret
fists
pop
mov
das
cmp
outsl
dec
loop
xchg
jne
movsb
ljmp
mul
rol
mov
es
jl
xor
movsl
mov
pushf
das
cmp
fnstsw
insl
js
push
ss
cmp
xlat
popf
mov
mov
cmpsl
pusha
xor
dec
fbld
xchg
xor
jne
xor
push
jg
pop
mov
push
cmpsl
sbb
jno
rolb
sbb
adc
sahf
addr16
cltd
ss
stos
sub
mov
xorl
lret
in
sbb
shlb
pop
ret
xor
jg
loopne
fwait
jb
nop
enter
dec
imul
mov
outsb
cwtl
call
sti
dec
andb
xor
xor
pop
jecxz
or
add
popf
repnz
sbb
sbb
jmp
lods
mov
and
or
jl
int3
lock
shlb
fisubrs
xchg
adc
sbbl
rcr
imul
mov
cmp
mov
pusha
pop
subl
xor
rclb
mov
push
test
cmp
jl
sahf
test
jl
imul
mov
test
xchg
mov
mov
and
dec
xchg
pop
test
add
mov
dec
out
mov
std
dec
fwait
int
addr16
insl
or
lock
popa
jp
fwait
jecxz
mov
pop
sbb
stc
movsl
out
testl
iret
scas
push
in
int
cmpl
cmc
lds
lods
gs
mulb
inc
xchg
cs
cmp
lcall
fdivr
sub
mov
outsb
xor
xchg
cs
pop
sbb
add
cmp
movsb
cli
arpl
mov
movsl
imul
test
ficomps
pop
xor
sahf
xchg
or
shrb
addr16
cmc
push
push
movsb
pop
je
jle
test
mov
add
inc
mov
jl
and
mov
loope
je
cmp
inc
aad
pop
mov
sbb
rcrb
orb
stos
into
scas
push
xchg
enter
sub
cmp
mov
in
mov
mov
dec
push
hlt
pushf
fcomps
xchg
push
or
push
push
cmp
js
xor
xor
ficoms
outsb
shrb
mov
mov
dec
test
mov
sbb
mov
jne
sub
mov
repz
sahf
push
loope
pop
loopne
pop
js
jl
fs
or
std
repz
gs
xor
cli
je
pop
mov
mov
fnstenv
stos
and
mov
movsb
push
sbb
adc
add
dec
push
xor
ror
pop
gs
jp
and
sub
pusha
push
test
stc
shl
mov
addl
das
pop
jecxz
xor
xor
xchg
pop
in
icebp
xor
lcallw
dec
sbb
loop
fdivl
aad
push
js
mov
dec
mov
rcll
dec
xchg
cmp
mov
aas
mov
add
bnd
pop
jl
push
push
xchg
and
xor
xlat
xor
sbb
fs
std
mov
shll
ss
xor
scas
int3
pushf
and
adc
popf
mov
or
xlat
sarb
cld
pop
fmuls
cmp
pop
out
inc
add
sbb
stos
mov
hlt
jmp
std
int
mov
fistl
jbe
push
icebp
add
mov
jl
and
mov
je
xchg
mov
sub
xchg
in
popa
push
inc
adc
ret
mov
cli
gs
cmpsb
dec
mov
cmp
loope
xor
pushf
sbb
popa
sub
pop
xchg
pushw
enter
in
lret
jno
sub
fcoml
cli
mov
jmp
lret
dec
dec
pushf
sbb
and
mov
shll
test
sub
andb
lods
or
jo
xchg
data16
mov
push
jp
adc
or
and
arpl
xor
jg
arpl
dec
xchg
hlt
cmc
mov
mov
mov
ret
pop
cmc
popa
mov
jg
stos
pop
and
pop
pop
jmp
bswap
test
dec
push
mov
jb
icebp
sbb
dec
lret
nop
or
aad
insl
insb
sbb
add
sub
mov
inc
push
movsl
jmp
dec
movnti
pop
cld
xchg
jecxz
aam
xchg
sub
aas
fidivl
in
and
push
dec
fcmovne
aam
jne
add
icebp
ret
orb
inc
rcl
mov
lock
inc
sbb
push
pushf
fistpll
add
inc
cmp
mov
shll
and
sbb
adc
jb
shll
and
repnz
xchg
repnz
dec
jbe
icebp
and
jae
leave
pushf
iret
nop
ljmp
daa
xor
arpl
int
mov
in
xor
outsl
cmpsb
mov
lds
and
lret
stos
push
and
bswap
das
push
xchg
loopne
ret
add
cmpl
lret
js
pusha
xchg
lods
cmpsl
movsl
gs
inc
in
imul
xchg
jmp
jbe
and
icebp
dec
fisubrl
push
cld
cmpsl
out
push
xchg
loopne
imull
push
arpl
mov
pushf
xor
sbb
jns
addr16
pop
test
add
jb
sbb
mov
push
das
pop
jmp
lret
int
jg
push
pusha
cmp
pusha
leave
js
adc
ljmp
shlb
test
fwait
or
mov
sbb
lds
sbb
movsb
jle
jno
test
repz
ror
test
sahf
xor
add
sub
inc
xor
or
cmp
in
pop
mov
and
ror
negb
cmp
stos
adc
inc
lds
inc
mov
mov
mov
fildll
sub
xor
and
lock
xor
inc
enter
mov
testl
data16
jge
dec
fs
enter
cld
push
int
adc
test
icebp
lret
call
movl
and
insl
rorb
imul
sub
mull
test
xor
xchg
fnstcw
fstpt
mov
push
xchg
xchg
mov
scas
je
loope
xchg
jg
add
ja
pop
insb
dec
xchg
sub
pop
cmpb
repnz
inc
adc
cwtl
jns
shrl
jecxz
stos
add
mov
inc
xchg
xchg
push
int3
sub
mov
add
test
mov
dec
fs
ljmp
or
shr
dec
ja,pt
xor
cltd
mov
cwtl
and
rolb
addb
or
fstps
or
fsubs
aas
xchg
jp
iret
jbe
mov
dec
xchg
cmpsb
sub
push
cmp
dec
rorb
in
dec
xchg
sub
inc
popa
mov
cmpsb
lock
inc
adc
push
lret
testb
cmpsw
pop
stos
rorl
sbb
xor
jnp
std
ss
enter
inc
xchg
cmp
xchg
jp
jmp
pop
orb
loope
orl
or
rclb
mov
jmp
jns,pn
sbb
sbb
fidivs
sbb
add
loope
cs
sbb
js
jg
fwait
addb
xor
leave
sbb
pushf
mov
inc
addb
cmp
mov
push
dec
aas
or
or
xor
dec
ret
lcall
int3
ljmp
ss
add
mov
std
imul
jg
ficomps
push
and
inc
rcrb
cmpsl
mov
jg
imul
enter
test
pop
sbb
andl
add
adc
add
repz
cwtl
dec
clc
push
push
xor
xchg
jns
nop
cmp
lret
jmp
push
sbb
inc
mov
push
adc
dec
cld
cld
adc
dec
jecxz
jl
xor
pop
das
lret
popa
jnp
mov
adc
cmp
sbb
lcall
inc
jecxz
push
dec
mov
mov
ss
cmp
xchg
lea
xchg
stc
js
sbb
imul
adc
adc
rol
pop
arpl
mov
test
int3
hlt
loopne
lret
gs
ds
mov
mov
push
push
int
add
cmc
cmpsl
and
cld
mov
repnz
mov
adc
ljmp
jge
xor
or
inc
dec
or
nop
push
cmp
mov
cmc
sbb
mov
lods
add
pop
sub
aad
push
mov
mov
andb
dec
mov
mov
push
pop
push
loop
jno
xchg
mov
mov
out
jge
xchg
and
or
mov
loope
enter
jp
push
in
mov
pusha
sbbb
scas
xor
xchg
sbb
es
movsb
cmp
call
sti
sbb
inc
dec
xorb
adc
xor
pop
fldt
jecxz
and
sub
inc
sbb
test
adc
lock
into
popf
lds
pop
repz
add
pop
jmp
fs
mov
mov
stc
mov
push
add
dec
cmc
cwtl
iret
inc
fadds
popa
pusha
xorl
rcl
jno
cmp
inc
cltd
movb
js
mov
jp
daa
push
fidivrl
stos
mov
push
sub
dec
adcl
add
cmpsb
mov
cmp
cmp
lds
sub
and
push
push
repz
jle
mov
rol
pop
fwait
lea
xchg
push
xchg
mov
imul
cli
out
jge
addr16
clc
sbb
cmpb
xchg
inc
shrl
and
xor
fucompp
ljmp
pushf
push
stos
sub
sahf
xor
dec
and
cmp
lods
cmpsl
adc
ljmp
cltd
mov
in
or
or
xlat
in
add
scas
adc
imul
inc
mov
les
test
cmp
mulb
push
leave
jo
xchg
repz
les
mov
hlt
inc
aas
shrl
fldl
jge
pop
or
divb
fistpl
ror
mov
jns
sbb
cmp
mov
push
inc
push
jne
insb
in
mov
test
jbe
sbbb
jg
imul
cmp
mov
stc
into
pop
in
loope
testb
int3
pop
add
mov
scas
inc
push
mov
mov
test
repnz
adc
movsl
mov
xchg
sub
or
mov
and
imul
push
cmp
jne
mov
adc
push
xchg
jne,pn
mov
add
iret
shl
inc
pop
xor
push
adc
aas
xchg
xor
sbb
lds
mov
and
je
test
addl
pop
fstps
mov
or
xor
repnz
fistl
das
and
fmull
sbb
divl
xchg
in
mov
pop
push
push
add
in
outsb
mov
add
aad
jp
add
pop
push
jmp
imull
add
inc
insb
and
pop
enter
sub
fsub
inc
rol
and
out
repz
testb
push
mov
pop
xlat
inc
xor
and
flds
dec
into
gs
cmc
flds
pop
xchg
rorb
pusha
loope
sbb
push
xchg
inc
stos
push
add
push
call
or
xchg
or
scas
lods
mov
push
repnz
orl
lret
mov
push
imul
pushf
nop
arpl
push
cwtl
sub
into
push
xchg
xor
xchg
mov
adc
iret
sub
jns
pop
lahf
call
mov
sbb
sub
dec
pop
cwtl
mov
xor
outsl
popf
fimull
push
xchg
cwtl
lods
and
push
dec
inc
cmp
sub
repz
sub
inc
xchg
addr16
jae
leave
adcb
icebp
sbb
repnz
mov
mov
mov
repnz
popf
adc
xchg
sahf
pop
test
pop
loop
xchg
sub
push
mov
mov
adc
sub
mov
dec
cwtl
ret
and
pop
sbb
outsb
mov
mov
fists
mov
pop
subb
xchg
jo
and
xchg
sub
inc
cwtl
ja
inc
xor
movsl
push
stc
cmpsb
rorb
dec
enter
fldl
mov
xchg
icebp
xchg
lods
fwait
sbbl
and
sbb
into
test
xor
ret
test
mov
imul
mull
scas
in
push
sbbb
testb
or
les
lods
scas
adc
add
push
mov
sahf
or
std
andb
cs
andb
out
pop
jae
push
test
out
pushf
pop
and
mov
inc
dec
xchg
pop
lock
pop
fidivrs
jp
jmp
fiadds
mov
repz
cmpsl
clc
adc
imul
push
ret
sub
filds
lahf
arpl
pop
test
loop
xchg
leave
ret
data16
aam
in
ret
pop
push
push
jb
push
inc
pop
adc
pop
fnstsw
push
rorl
iret
push
xor
xor
leave
dec
jo,pt
mov
pop
jnp
push
jle
mov
lea
sti
xchg
dec
mov
push
aad
loop
xchg
and
std
and
int3
mov
cs
les
jg
cmpsb
lods
inc
repz
mov
sub
pop
loop
cmp
aam
xchg
mov
pop
mov
data16
xor
addr16
test
divl
int
ja
pop
lret
xchg
in
add
insl
roll
pop
addr16
inc
cli
cltd
mov
fnstenv
push
sbb
out
lods
sbb
clc
or
mov
and
les
push
into
out
xchg
add
ror
sub
mov
adc
sub
out
mov
outsb
jmp
stos
orl
inc
sarl
xor
jl
push
push
sub
enter
mov
inc
icebp
repnz
lahf
xlat
je
shl
ds
jl
add
mov
or
inc
jo
and
cmp
adc
icebp
jge
cld
push
dec
inc
daa
and
jecxz
rorl
xor
sbbb
data16
test
stos
inc
mov
ret
sub
popf
lods
pop
jl
data16
in
cwtl
add
inc
cmc
inc
outsb
repz
inc
dec
mov
sti
sbb
jb
ja
cmp
es
adc
ljmp
sub
out
push
adc
in
sub
testl
jnp
in
mov
fisttpll
arpl
cs
test
fs
pusha
xchg
push
push
xor
das
mov
xlat
sub
lret
xlat
outsl
mov
dec
xor
sub
jnp
pop
inc
inc
adc
call
pop
push
xchg
adc
aad
xchg
ljmp
lods
popf
xchg
inc
mov
ljmp
jle
sub
xor
sub
popa
fdivp
loop
repnz
mov
inc
fdivrl
mov
es
lods
fisttpll
fdivl
jl
dec
cmp
dec
es
sub
out
ljmp
xchg
hlt
pop
leave
mull
xchg
sbb
and
and
mov
fwait
mov
repnz
cwtl
inc
xchg
mov
xor
sbb
cmp
shlb
scas
mov
test
jo
dec
mov
outsb
fs
imul
mov
cmpl
push
sub
aam
mov
cld
movsb
inc
fistl
aaa
fmull
inc
pop
or
xchg
xor
inc
add
in
mov
bound
adc
es
mov
jne
or
lods
jb
in
stos
lock
xchg
adc
adc
fs
call
mov
pop
addb
std
or
cld
mov
inc
clc
cmp
repz
push
and
or
xchg
cmp
pop
das
jg
hlt
mov
out
jmp
sbb
mov
aaa
int
adc
cmp
and
dec
xor
mov
call
mov
push
push
mov
fcoml
dec
sub
and
add
and
ret
cltd
inc
pop
outsl
xchg
mov
jmp
sti
loopne
sbb
lea
fsubs
in
jle
sti
test
mov
pop
and
ljmp
pop
mov
lcall
mov
xchg
mov
mov
xor
repz
cld
sbb
add
mov
popa
loop,pn
adc
inc
xor
sub
jbe
dec
cmp
rclb
out
push
leave
and
lds
xchg
cmp
jb
push
movsl
mov
pop
dec
xchg
sahf
fildl
jb
sub
jns
call
mov
test
sbb
mov
dec
lcall
sarl
cltd
pop
xchg
cmp
subl
xor
ret
iret
adc
pop
daa
xor
jge
addl
clc
and
and
lods
mov
pop
xchg
add
pop
xor
pop
mov
pop
out
or
cmp
lock
add
adc
gs
push
push
and
int
mov
insl
xchg
in
repz
and
ret
jle
ljmp
mov
dec
jo
call
cmp
out
iret
mov
dec
rcll
out
inc
add
sub
inc
test
push
xchg
in
mov
fstpt
cmp
mov
int3
pop
cmp
dec
daa
push
jle
dec
lcall
jge,pn
jbe
cmpsb
hlt
xchg
pop
xchg
sub
aam
out
into
cmp
xor
mull
mov
int
aas
mov
insl
jbe
fstpt
inc
cmpsb
cs
or
jne
or
cmpsl
test
and
jle
shlb
mov
enter
add
lret
and
push
sahf
sub
mov
imul
test
cmp
pushf
das
ror
testb
std
test
jne
fmull
adc
lods
dec
orl
xchg
sbb
aaa
bound
cmpl
fdivl
pushf
fsub
pop
repz
daa
repz
mov
testb
stc
call
imull
pop
daa
mov
packuswb
test
div
xchg
cmp
mov
sbb
mov
out
mov
pop
fs
call
sub
ret
aas
loope
aaa
mov
arpl
mov
cmp
mov
and
xchg
add
mov
fistpll
pop
and
xchg
pop
pop
and
out
cs
jg
pop
and
int
sti
rclb
imul
inc
mov
or
icebp
or
scas
cmp
or
stos
mov
inc
imul
daa
in
or
rcrl
jae
test
in
lcall
das
sub
stos
out
in
xchg
insl
xchg
dec
pusha
divb
adc
dec
sub
lret
mov
xchg
aam
cmpsl
push
mov
lods
pop
cmp
inc
sbb
testl
mov
aas
cwtl
cwtl
cmpsb
mov
pop
into
push
dec
out
pop
inc
sbb
pop
sbb
sbb
insb
ja
les
xchg
inc
icebp
fdivrl
mov
iret
int3
mov
pop
add
mov
mov
pop
jmp
sbb
subl
aam
mov
xchg
subb
mov
jb
xor
arpl
adc
inc
xlat
sub
dec
icebp
data16
mov
push
push
test
iret
pop
sbb
pop
notl
out
jle
mov
repnz
xchg
lods
into
movsl
mov
daa
orl
fisubs
insb
outsl
stc
xlat
jne
jle
pusha
add
fs
rorb
leave
sub
shll
adc
and
push
insb
sbb
cmp
insb
ret
verw
mov
cmp
ret
inc
int
mov
lret
icebp
out
cmp
inc
int3
mov
sarb
and
mov
call
mov
es
ss
pop
cli
mov
cmpb
ret
shrb
daa
int3
jae
sbb
movsb
int3
jae
push
cmc
pop
cmc
adc
sbbb
and
insl
adc
xorb
shrb
mov
rorb
fsts
inc
rcl
in
jb
shlb
shlb
add
jns
orl
cmp
loopne
mov
adc
sahf
sub
mov
testb
loopne
cmp
loopne
scas
and
xchg
fisttps
add
and
cmp
movsl
sbb
xor
popa
ds
cmp
jecxz
mov
scas
aad
iret
push
xchg
test
sahf
hlt
jle
push
jnp
add
loop
mov
adc
fwait
inc
out
inc
outsl
inc
arpl
and
das
fstl
cmp
cmpsl
rcrl
mov
and
std
lret
inc
les
mov
or
add
mov
jno
add
mov
jbe
sti
or
sbb
das
daa
in
loopne
cmp
mov
movsl
jb
push
xchg
pop
pop
cmp
cmpsl
scas
xchg
xor
mov
or
fimull
scas
sbb
test
mov
lret
dec
ss
or
in
testl
loope
lods
jo
xor
mov
sub
mov
pop
cltd
push
mov
mov
in
lea
jecxz
out
data16
jecxz
push
mov
ret
enter
jno
cwtl
and
aas
dec
sbb
ja
sub
shlb
xchg
scas
inc
mov
aaa
das
adc
adc
mov
xchg
lret
mov
jle
mov
shlb
push
fnstenv
mov
adc
xchg
and
mov
out
mov
movsl
and
inc
sub
inc
sub
lea
fucom
mov
shll
mov
pop
sti
adc
pop
cs
mov
sbb
out
dec
or
and
pop
jbe
adc
dec
xchg
fmul
leave
push
test
rcl
dec
dec
enter
dec
xor
das
nop
sbb
jae
mov
out
and
das
xchg
add
shr
push
mov
imul
push
fiaddl
and
sub
adc
addb
mov
ja
lret
roll
cli
inc
or
ja
fs
sub
jnp
or
or
test
sub
int
mov
fcoms
test
and
or
sbbl
mov
jns
inc
rol
jnp
das
sub
sub
jnp
mov
popf
fstps
arpl
jge
xor
test
aam
cmp
jge
ljmp
cwtl
dec
jbe
pop
outsl
lods
mov
cmp
mov
jbe
fistpl
adc
fisubs
mov
dec
sub
decl
into
into
xor
orb
dec
pop
pop
adc
pushf
jnp
in
ret
xchg
iret
data16
jnp
push
xchg
fwait
and
mov
adc
sbb
inc
add
inc
lcall
and
gs
mov
push
pusha
xchg
outsb
xchg
enter
clc
mov
mov
rorb
dec
mov
inc
test
push
jnp
sbb
stc
sarb
sub
loope
test
mov
pushf
xor
nop
hlt
neg
push
jns
gs
mov
into
cmp
roll
je
pop
pushf
sti
rsm
andl
fstl
mov
popf
loope
sub
xchg
jb
mov
fs
mov
out
xchg
jae
fbstp
ror
inc
cmp
xchg
repz
mov
push
aam
mov
prefetch
or
xchg
mov
insb
lods
sti
loop
mov
cs
adc
mov
xor
dec
repnz
je
fstps
jmp
int3
cltd
ret
scas
mov
jmp
dec
dec
andl
hlt
push
mov
mov
mov
into
shl
xchg
mov
and
xor
cs
mov
cmp
jbe
xchg
cs
dec
jnp
ljmp
jbe
daa
and
imul
mov
pop
jnp
adc
jae
imul
pop
inc
pop
call
inc
call
test
jmp
inc
jno
sub
push
push
clc
pop
dec
ds
cmp
arpl
mov
je
sbb
rcrb
xchg
int
push
pusha
insl
repnz
mov
int
jbe
icebp
mov
and
fxch
push
aad
mov
sbb
adc
es
adc
pop
mov
cmpsl
sub
cmp
call
test
sub
adc
or
cmpsl
sti
mov
test
sub
hlt
xor
rcl
push
mov
pop
pop
out
and
mov
je
jbe
std
sub
cmc
lea
in
mov
and
sbb
push
ret
jae
dec
jge
dec
jmp
xchg
mov
ss
mov
aaa
js
incb
fwait
dec
cwtl
xchg
mov
mov
push
fwait
cmp
mov
mov
les
ljmp
mov
cmp
mov
es
ja
mov
cmp
mov
aad
mov
out
jle
ror
mov
cmpsb
js
or
adc
push
jne
pusha
push
jp
mov
fwait
test
cmc
mov
pop
xchg
jl
push
mov
sbb
imul
adc
mov
sbb
outsb
jbe
nop
inc
mov
repz
test
xor
loopne
aam
mov
jno
pop
pop
nop
loop
push
cmp
gs
dec
jo
imul
mov
push
mov
es
fidivs
jb
pop
jg
push
sub
outsb
xlat
cmp
lock
mov
into
inc
shll
ja
cld
es
fisttpl
xor
mov
jmp
popa
inc
xchg
aaa
pushf
insb
pop
mov
push
aaa
sbb
adc
mov
mov
fiadds
hlt
xchg
nop
inc
sbb
cmp
cli
pop
lods
aad
movsl
sub
in
jnp
gs
mov
loopne
mov
jbe
les
push
pop
in
rorb
cmpsl
dec
insl
imul
in
mov
cmp
add
mov
jecxz
pop
fldenv
mov
or
movsb
mov
push
xchg
mov
lds
stos
push
mov
pop
pop
sub
out
dec
leave
pusha
push
lahf
je
or
push
push
rcll
cmp
test
jmp
pop
das
popa
popw
shlb
mov
aas
in
cli
mov
or
push
dec
arpl
jno
ss
dec
loopne
sbb
push
xor
shrb
imul
pop
add
push
jbe
mov
xchg
subb
mov
test
jno
xchg
addr16
leave
sbb
repz
sbb
add
mov
dec
icebp
mov
mov
or
jae
notl
sbb
push
mov
orl
stos
pop
xor
xlat
mov
mov
insl
test
or
cs
loop
sub
gs
ljmp
addr16
mov
fistpll
nop
inc
sbb
add
ret
int3
add
or
pop
lret
in
inc
in
xchg
xchg
pusha
hlt
addr16
add
movsb
psubb
mov
xchg
cwtl
dec
add
mov
and
mov
and
dec
je
aam
jge
sar
sbb
fs
dec
test
orb
xchg
fwait
into
pop
jb
pop
xor
mov
neg
mov
or
aam
xor
nop
cmp
push
push
sti
cmpsb
insb
xchg
inc
push
cmp
or
aaa
sbb
daa
cld
cmc
movsb
fsubp
mov
xchg
mull
rcrb
arpl
add
or
roll
and
mov
push
mov
xchg
out
syscall
inc
jne
sbbb
dec
es
xor
jae
add
lret
dec
sub
daa
inc
pusha
mov
out
call
rcll
adc
mov
sahf
jmp
push
test
adcb
movl
jle
out
adc
inc
les
std
sbb
mov
ret
fidivl
inc
sbb
sbb
sub
inc
dec
rclb
pop
cwtl
in
xor
pop
xchg
pop
push
sbb
dec
les
mov
paddb
cmp
in
pop
out
addr16
dec
mov
and
insb
pop
inc
dec
dec
inc
mov
jg
mov
and
sbb
ret
xchg
rclb
push
dec
adc
cmc
push
iret
pusha
movsl
mov
lret
mov
and
test
lret
shlb
add
push
add
es
out
out
ljmp
mov
mov
ds
inc
adc
pop
cmp
loopne
rol
jo
or
xlat
ret
cmp
lret
and
insl
leave
pop
lcall
push
jcxz
or
loop
inc
or
dec
sbb
test
mov
std
adc
scas
aad
sar
cwtl
push
ljmp
sub
std
orb
adc
fildl
popf
movsl
stos
push
inc
xor
push
add
add
aad
dec
jno
push
push
jne
and
sub
jne
mov
xchg
jmp
insl
lock
lahf
scas
push
test
cmpl
out
std
mov
sub
sar
dec
cmp
sub
xor
in
cmp
cmc
mov
lea
push
mov
mov
push
into
cmc
mov
in
ja
gs
lods
inc
adcl
call
in
xchg
movsb
int3
leave
rclb
fimuls
rorb
test
adc
int
add
add
std
leave
and
popa
int
fisttpl
fildll
mov
or
test
xchg
cmpsl
repz
jne
fldt
jmp
dec
cmpl
sub
js
cli
or
fsubs
repnz
mov
rorl
push
aas
jbe
scas
stc
fbstp
mov
sarl
cmp
lods
imul
aaa
jb
push
packsswb
mov
mov
inc
imul
pop
push
je
fistl
les
mov
adc
dec
push
push
dec
adc
pop
int3
nop
fbld
jnp
cmp
jp
es
adc
push
repz
mov
scas
out
push
ret
fcompl
insl
xchg
popf
cld
dec
mov
fidivs
fwait
xor
mov
lods
adcb
gs
sub
into
repnz
movsb
sti
nop
lods
inc
cwtl
mov
dec
push
lea
mov
fwait
dec
xchg
xchg
and
test
fisttpl
leave
fisubrs
loopne
testl
mov
mov
xor
pop
lock
inc
cwtl
jge
mov
inc
pusha
pop
imull
sahf
mov
pop
sbb
cmp
sbb
jl
cwtl
in
jp
sub
aaa
ljmp
add
add
push
fidivrl
xor
int3
sbb
mov
imul
ret
adc
iret
cmc
ficoml
pop
loope
jmp
dec
jp
orb
and
inc
jg
pop
lock
dec
lret
sbb
aad
ljmp
imul
dec
cli
aas
cmpsb
or
stos
sbb
inc
je
inc
xor
repz
int
xor
push
xchg
adc
iret
mov
popa
scas
out
adc
test
les
and
cmp
pop
mov
enter
xchg
cltd
pop
mov
insb
xchg
or
sub
clc
and
xchg
lcall
xchg
sar
dec
mov
xor
cmp
add
stos
mov
jae
sub
daa
out
cmp
arpl
sti
inc
push
xor
inc
mov
test
dec
xchg
xor
mov
cmp
mov
pop
jecxz
jbe
inc
repnz
cli
scas
push
jo
add
cld
loopne
js
mov
push
jae
cld
push
scas
adc
rcrb
ds
lret
fcoms
fisubrs
push
jns
fmul
xchg
xchg
mov
test
lods
or
fwait
test
fbld
add
mov
add
sub
pop
push
test
aas
sbb
and
dec
inc
sbbl
cmp
mov
dec
add
inc
in
jns
dec
or
stos
sbb
cmp
into
inc
fisubs
orb
lea
nop
and
shll
cmpsl
cwtl
aam
cs
adc
cwtl
movsl
in
mov
adcb
xor
callw
adc
out
adc
mov
xor
xchg
rorb
lock
and
mov
pop
cmp
or
jbe
out
aam
add
fisubrl
rclb
cmc
cltd
jmp
add
loop
out
xchg
adc
sbb
cs
mov
sub
iret
test
pop
shlb
push
sbb
lret
sub
dec
pushf
adc
in
add
push
cmp
push
fdivrl
push
je
adc
mov
insl
cmp
cwtl
xchg
fcomip
jo
inc
sub
push
xchg
push
popa
sbb
cmpsb
daa
loop
imul
mov
xor
pop
jle
mov
pop
jb
mov
rcrl
pop
stos
imul
lcall
enter
cmpsl
push
mov
sbb
mov
sbb
sbb
fimuls
popa
cwtl
mov
inc
dec
adc
repz
pop
lret
cmp
mov
jno
mov
movsb
dec
push
push
movsl
pop
cmp
inc
stc
movsl
sbb
cli
sub
test
arpl
mov
mov
xchg
out
mov
pop
iret
mov
xchg
popa
arpl
pop
xchg
sbb
jle
inc
cmpsb
xchg
cmp
scas
adc
cmp
add
rcrl
jbe
push
sub
jno
je
sbb
icebp
push
jae
cli
push
push
sti
arpl
cli
sarb
sbbl
inc
xor
and
mov
mov
pushf
ret
sahf
and
push
orl
fbld
cmpsl
mov
clc
lahf
mov
js
add
dec
mov
push
jne
pop
mov
mov
mov
jns
lret
add
test
int
dec
call
xchg
xchg
add
mov
push
sub
lds
popa
fcoms
test
jbe
pop
fisubs
ffree
jb
inc
mov
pop
or
fisubs
jb
idivl
xchg
adc
shll
cld
sti
sbb
nop
xor
leave
fimuls
movsl
loope
test
js
gs
pusha
cmpsl
aas
int3
mov
iret
jg
loop
mov
aam
adc
mov
inc
mov
jo
mov
jp
jns
mov
push
js
shr
pop
mov
ljmp
iret
or
aad
adc
inc
push
bound
adc
clc
lret
mov
mov
mov
lods
daa
xchg
test
or
jno
cmc
cltd
or
popf
test
fsubr
xor
in
xchg
cmp
mov
outsl
dec
inc
pop
jmp
js
xchg
jecxz
test
cmpsl
and
fcomps
sbbl
mov
adc
push
add
outsl
dec
jecxz
cmpsl
dec
and
movsb
popf
push
lods
dec
xor
xor
loop
or
jo
test
xlat
inc
in
xchg
mov
shrl
xchg
insb
inc
cmp
cwtl
xchg
repnz
aad
setg
out
xlat
je
cmpsb
pop
xor
popf
jg
jmp
inc
icebp
add
sbb
mov
xlat
xchg
or
popl
push
jmp
mov
incb
mov
xchg
cmp
inc
mov
gs
cmp
jp
fimull
divb
inc
out
into
loopne
mov
in
loopne
shl
dec
fistpll
roll
push
dec
mov
adc
and
out
sbb
pop
sub
inc
out
push
mov
fsubl
dec
daa
mov
test
stos
outsb
notb
enter
out
in
pop
leave
rclb
push
daa
push
jns
ret
pop
fmul
mov
pop
lods
into
outsl
mov
mov
loopne
ret
inc
xchg
ret
lcall
push
std
sbb
fst
out
pop
adcb
cmp
mov
dec
cmp
test
push
pop
sti
pop
mov
sbb
ret
ret
xchg
cmpsl
and
inc
sbb
inc
cmp
in
sbb
add
jbe
cmpsl
sbb
jmp
jb
push
cmpsl
into
adc
gs
mov
lods
aam
test
dec
jle
fiaddl
dec
inc
aas
jg
in
mov
loopne
inc
mov
sub
adc
and
push
arpl
inc
cmp
mov
int3
mov
shr
push
das
or
xchg
sbb
sbb
repz
ljmp
ja
daa
xchg
insb
sbb
iret
ret
push
cmp
cmc
in
sbb
pop
pop
sti
mov
sbb
jg
mov
ja
pop
ret
lds
test
in
fistpl
mov
outsb
sarl
out
or
lds
lds
and
cmp
addb
das
sub
scas
fwait
adc
jge
and
dec
scas
or
pop
and
lcall
jp
sbb
jae
sbb
cmp
sub
xor
ss
xchg
jne
mov
cwtl
cltd
xchg
mov
pop
test
icebp
lahf
jne
mov
lcall
into
outsl
sub
push
or
roll
int
ret
jns
ja
push
mov
jecxz
cmp
fs
addb
pop
mov
mov
mov
icebp
add
jo
push
mov
movsb
shll
scas
cmp
mov
jp
cmp
mov
pop
or
int
pop
ret
jmp
jbe
cmp
push
jne
sub
lahf
jg
int3
push
in
adc
sbb
ficompl
cmp
sbb
or
insb
insb
mov
sub
sbb
inc
pop
push
jne
in
arpl
imul
bound
mov
cwtl
xchg
movsl
adc
insl
ljmp
stos
bndldx
orb
movsl
addl
stc
inc
lret
hlt
in
push
fwait
ds
or
loope
aas
pop
fldenv
pop
lret
xchg
and
push
mov
push
xchg
addr16
cmp
mov
inc
iret
push
mov
jo
fldpi
cwtl
push
pusha
and
mov
imul
inc
xchg
mov
cmc
fwait
mov
cmpsl
nop
cltd
out
sti
sub
cli
push
adc
cmp
in
jg
nop
jnp
mov
pop
movsl
stos
add
repz
loop
popf
jo
push
mov
mov
inc
pushw
jno
pop
lcall
and
add
mov
push
mov
int3
or
mov
sbb
pop
xor
es
fiaddl
in
sar
std
test
fistps
cmp
bswap
xchg
sub
mov
push
add
mov
cmp
pushf
les
sub
enter
jae
adc
jecxz
in
mov
jge
fs
cmp
cmp
mov
mov
sub
sub
mov
or
mov
fwait
jp
xchg
fistpl
cmpsl
outsl
fs
scas
les
mov
aaa
mov
out
test
jno
adc
xchg
lcall
iret
push
inc
outsl
xchg
push
test
ss
jg
fs
aas
lret
adc
std
dec
test
mov
xor
add
cmp
dec
xlat
jne
jb
mov
aam
sarb
dec
fisubl
fs
lods
fs
mov
or
dec
inc
clc
sub
pop
shrl
in
out
mov
and
aam
in
notb
xchg
mov
lret
aam
adc
cld
add
mov
mov
lret
dec
adc
mov
out
push
sub
jns
in
cwtl
fstpl
inc
jb
in
mov
jmp
scas
jns
bound
mov
leave
dec
sbb
dec
sub
scas
adc
adc
push
mov
loop
scas
push
push
sahf
aam
dec
xchg
aas
mov
or
icebp
inc
daa
movlps
dec
je
and
aaa
pushf
push
and
fmuls
push
fidivrs
fwait
add
push
push
push
cmc
cli
movsl
jae
movsb
and
xlat
jno
sarl
lret
call
sub
adc
shrl
pusha
aam
add
test
sub
leave
test
add
xor
sub
or
sbb
dec
push
adc
mov
jb
and
pop
jno
mov
push
push
in
call
xor
jne
push
cwtl
lds
imul
xor
xchg
shll
div
jne
lds
jo
mov
push
out
int
ljmp
mov
xor
cmpsb
pop
jge
cmc
xchg
xchg
iret
pop
mov
cmp
cmp
push
xor
lahf
xchg
je
mov
orl
stc
fs
push
mov
fbstp
bound
frstor
js
sbb
dec
jae
negl
sub
fdivrp
sbb
cmc
jge
movsl
out
repnz
jge
mov
mov
and
ror
sahf
out
aad
ror
out
push
jno
mov
shll
ja
jne
push
sub
sub
pop
out
in
add
pop
xchg
pop
je
scas
adc
xlat
jns
mov
or
sub
out
sbb
pop
inc
out
mov
and
mov
pop
stc
arpl
paddb
gs
cmp
or
jbe
xchg
dec
xchg
shlb
inc
cmc
iret
and
scas
ret
cwtl
stos
nop
jge
jg
push
icebp
iret
shlb
xchg
sub
jmp
pop
sti
jno
cs
xchg
rcl
int
adc
lock
pop
add
enter
xlat
lcall
popa
sub
in
mov
imul
cltd
push
clc
ret
movsl
sbb
mov
sub
adcb
dec
into
pop
sbb
sahf
pushf
repnz
xor
adc
xor
jo
repnz
xchg
imull
call
sub
jge
fs
jnp
aas
sub
adc
jge
stos
pushw
adc
xor
lods
je
sub
daa
stc
xor
sbb
adc
mov
aas
pop
fwait
lahf
pop
xchg
jmp
push
push
inc
es
mov
pop
data16
mov
pop
stc
jl
call
xchg
and
add
mov
movsl
pusha
xor
ja
lcall
add
sahf
insl
mov
sarl
imul
jmp
icebp
cltd
push
add
dec
jge
jp
aad
jo
xor
pusha
sti
mov
adc
sub
cs
xchg
sbbb
test
dec
rcl
outsb
sbb
lods
popa
insb
dec
aam
or
mov
or
dec
jb
mov
push
xor
jo
xchg
pop
pop
xchg
rorb
sarl
jb
js
sbb
mov
push
cmc
adc
xchg
xor
push
xchg
inc
sti
jbe
push
out
cld
sub
sbb
movsb
adc
mov
iret
popa
xchg
jne
iret
xchg
or
cs
mov
cmp
stos
mov
test
in
push
cli
push
dec
and
xor
popf
js
call
sahf
jnp
adc
xchg
push
imul
insb
movsl
mov
push
pop
int3
jns
ret
dec
xor
sbb
dec
jp
push
mov
out
cld
mov
lock
test
pop
fprem
out
push
idiv
into
dec
daa
xchg
and
push
fwait
pushf
or
or
out
sbb
xlat
addr16
ret
mov
jbe
pop
cmp
leave
jae
mov
out
mov
fimull
testl
jns
mov
push
mov
popa
loope
aaa
xor
jecxz
fdivrp
or
std
cltd
stos
inc
mov
mov
sub
das
enterw
insl
loop
pop
jp
push
cltd
pop
pusha
pop
gs
sbbb
mov
jge
inc
out
xor
sbb
dec
sbb
pop
jnp
ljmp
gs
cmp
movsl
cmp
push
and
sub
sub
fcomi
cmp
iret
scas
cmpsl
jle
repnz
popf
jle
mov
out
out
jmp
push
mov
out
xchg
into
arpl
dec
and
int3
adc
or
or
enter
ja
xor
add
hlt
sub
cltd
cmp
dec
sub
cwtl
inc
mov
xchg
xor
pop
push
push
sarl
call
mov
xchg
mov
int
out
call
sarl
xlat
outsb
out
inc
push
sbb
lret
dec
cmp
push
call
gs
es
mov
out
mov
loop
adc
inc
xchg
out
sub
xlat
lret
jge
push
xor
mov
jb
sbb
pushf
aas
add
or
ret
popa
mov
mov
adc
or
or
xor
mov
test
push
xor
sub
jmp
icebp
outsb
dec
jno
xchg
call
dec
rclb
mov
cltd
insb
cmp
lahf
adc
pop
cs
jb
cltd
in
inc
aad
imul
lcall
sbb
xchg
dec
mov
fadds
dec
adc
es
jnp
or
cmp
ret
outsl
in
rorl
lock
inc
jno
sub
cmpsb
movsb
out
push
add
pushf
in
popa
jl
push
sbb
cli
or
mov
mov
mov
adc
pop
lods
insl
insb
icebp
and
lock
mov
aad
test
lret
imul
stc
pusha
in
sub
or
in
jp
mov
cmpsb
lahf
mov
addl
cmpsl
add
sub
lret
xchg
pop
outsb
lds
fucomip
mov
mov
xchg
cld
xchg
test
rolb
xor
push
mov
mov
mov
or
jle
mov
mov
mov
cmp
lods
cld
and
clc
cmc
cmp
fwait
hlt
add
cli
into
xchg
sbb
in
fldenv
push
sti
lds
outsb
mov
cmp
inc
cwtl
cmc
inc
inc
shll
mov
add
stc
cmovb
inc
or
lret
adc
xchg
imul
inc
xchg
loopne
mov
pop
lcall
jmp
adcb
loope
ja
mov
jnp
xchg
mov
dec
popa
or
ja
xlat
ljmp
and
xor
mov
sbb
xchg
dec
ja
inc
in
xlat
dec
dec
lds
mov
fstl
xor
insl
mov
pop
shll
adc
push
bound
jp
jbe
or
out
pop
mov
sbb
mov
js
lea
movsb
popf
mov
pop
lret
adc
mov
pop
dec
test
popf
push
dec
dec
imul
jns
ljmp
add
push
adc
jge
stos
xchg
and
in
stos
pop
repz
insb
and
xor
push
adc
inc
jmp
mov
mov
cli
shlb
insb
das
xor
mov
add
leave
push
sbb
push
movsb
cmp
cld
stc
fwait
xchg
pop
frstor
dec
out
sub
cmpsb
ds
fadd
imul
test
insb
pop
sbb
ror
sub
lods
mov
test
adc
jg
test
loope
js
xchg
dec
mov
out
mov
mov
fisubl
pop
jns
xor
lock
jnp
cmp
mov
inc
xor
adc
xchg
push
leave
adc
sub
fdivrs
and
adc
fistps
clc
mov
pop
out
pop
hlt
loop
scas
or
inc
sbbb
fadds
in
ja
fwait
sub
xchg
lcall
sti
out
fisubl
je
adc
out
rcl
sahf
mov
and
cli
sbb
sbb
add
dec
adc
sbb
shlb
ret
xor
lret
bound
add
scas
inc
jo
stos
sbb
push
xchg
sbb
sbb
fwait
jne
fwait
addr16
sbb
pop
lcall
xchg
andb
imul
orb
rorl
mov
lahf
push
push
sbb
xor
filds
rcl
aad
pop
fistpll
jle
into
pop
cmc
mov
lock
andb
push
xchg
jg
sarb
cld
stos
inc
dec
add
mov
inc
incl
test
sarl
inc
sub
jno
loope
je
pop
xor
jp
mov
clc
inc
push
fisttpll
xchg
xor
xchg
inc
pushf
sbb
lock
push
bnd
fxam
jg
lea
mov
imull
xor
adc
xor
push
out
add
cmpsl
icebp
lods
mov
cmp
pop
addr16
mov
aas
and
dec
push
sub
mov
push
test
xor
sub
in
sbb
in
out
fcomp
ds
cmc
adc
and
lea
pop
dec
out
mov
mov
mov
push
push
movsl
dec
cltd
dec
lret
mov
repz
sbb
mov
and
mov
pop
xchg
cmpsl
xor
lock
pop
push
mov
fdivl
push
out
mov
mov
lea
xor
sbb
pop
pop
fcomps
or
aad
fdivrl
mov
push
out
fistl
ljmp
out
push
xor
es
es
jns
mov
test
or
jns
pushw
mov
test
mov
fs
loop
mov
mov
icebp
jg
inc
xor
sbb
testl
pop
fistpll
lock
int3
or
shll
movsb
jl
jne
cmc
dec
sbb
fcmovbe
cmp
add
ror
jne
pop
fstl
jo
jae
sub
jns
xchg
add
and
in
sub
lahf
cmp
mov
out
sub
xchg
jmp
lock
fimuls
mov
jmp
lods
in
dec
dec
sub
jno
ds
xchg
fwait
lock
scas
inc
inc
call
sub
in
orb
xlat
mov
mov
and
popa
pop
pop
lahf
xor
jnp
loope
lods
xchg
enter
js
push
imul
int
sub
jl
mov
pusha
std
push
repnz
xchg
mov
push
xchg
and
lods
cmp
repnz
and
sbb
xchg
adc
jne
iret
sbb
pop
ss
or
lret
pop
inc
mov
loope
jo
sti
push
push
cmpl
xor
push
adc
or
fadds
mov
mov
jae
cmp
movb
int3
mov
out
jbe
jb
ret
inc
imul
push
add
mov
push
jae
dec
test
ret
leave
cmovne
cmp
test
repnz
out
mov
enter
pusha
sub
dec
sub
lcall
and
or
fldcw
xor
aas
push
lahf
aam
inc
add
dec
popf
cmp
lcall
arpl
popa
cmp
xor
or
mov
jo
sbb
sbb
xchg
xor
mov
mov
inc
fstpt
or
daa
adc
push
lret
outsb
sub
inc
mov
mov
or
fisttpll
xor
jle
pop
or
mov
push
clc
test
fs
adc
inc
imul
mov
gs
decb
shl
rcrl
push
pop
into
push
inc
popa
mov
cltd
neg
ss
stos
mov
jno
arpl
mov
or
inc
pop
mov
xor
pop
ficompl
shl
inc
call
lds
inc
aas
loope
cmp
adc
push
mov
movsb
call
or
popa
sub
out
inc
arpl
fdivl
loop
push
ret
sbb
idivl
mov
jmp
out
pop
imul
adc
cmpsl
mov
aaa
sub
adc
mov
push
movzwl
sub
sub
adc
sbb
bound
pop
push
test
jno
pop
dec
rolb
cld
lret
xor
mov
xor
mov
sbb
dec
pusha
pop
cmp
xchg
test
mov
jmp
ja
adc
xchg
mov
mov
into
adc
jge
cmp
sahf
mov
mov
ds
and
jnp
fdivs
lods
nop
dec
mov
sahf
jb
dec
mov
sbb
push
nop
xchg
mov
xor
inc
cld
test
adc
in
jns
mov
imul
daa
pop
pop
and
rcr
test
push
loop
mov
dec
sub
in
add
adc
add
dec
outsb
jne
or
cld
mov
push
outsl
or
ret
insb
out
pusha
les
imul
sbb
mov
lahf
pop
inc
enter
inc
insb
lcall
jnp
sub
std
es
xchg
in
xchg
std
pop
mov
inc
push
je
sahf
fsubrl
and
pop
mov
scas
dec
inc
daa
lods
notb
out
add
mov
xchg
icebp
fcomps
stos
fcompl
movups
lock
mov
es
leave
adc
and
je
test
call
test
add
jbe
test
aad
pop
insl
push
sub
in
stos
and
outsb
arpl
aaa
pop
cmp
sbb
lods
fidivl
out
int3
sbb
inc
cli
lods
jmp
outsl
outsl
cld
fnstsw
in
call
outsl
mov
or
cli
orb
mov
or
mov
pop
and
jge
xorl
dec
test
mov
sbb
mov
mov
sti
add
add
aaa
push
push
push
mov
aam
jne
cmp
sub
inc
test
mov
and
dec
inc
mov
loop
and
cli
push
cs
testl
lds
dec
push
inc
ljmp
imull
and
addr16
icebp
jl
mov
jp
jb
add
dec
xchg
mulb
xor
mov
mov
dec
jmp
cmp
xchg
imul
fisubrl
fs
ret
lods
xchg
mov
rcrl
fnstcw
in
pusha
gs
fistps
push
scas
daa
fistl
and
testl
adc
and
dec
pushf
pop
xchg
insl
cmpsb
or
jl
sarl
pop
add
cmp
fldcw
inc
cmp
cld
ret
or
sbb
xor
ja
dec
dec
cs
lods
repnz
or
loopne
jnp
stc
push
xor
mov
sbb
mov
jae
mov
dec
loopne
mov
jns
inc
pop
inc
or
leave
mov
and
push
and
ficompl
pop
or
leave
dec
jb
leave
dec
stos
jns
jno
fucomip
cmp
dec
add
xchg
notl
pop
fistl
cmpsl
or
out
icebp
adc
movsl
dec
paddw
fildll
sbb
xor
dec
cld
adc
adc
sbb
sub
push
das
sbb
lea
jl
jb
bound
pop
rorl
xchg
imul
std
mov
adc
mov
sbb
lods
xchg
test
sbb
fdecstp
mov
movsl
adc
adc
xchg
bound
push
mov
clc
push
xchg
xchg
xor
xchg
icebp
out
add
jno
jle
out
test
push
cli
adc
repnz
stos
int3
sahf
dec
daa
sti
mov
sbb
add
jle
xor
pop
mov
mov
ret
adc
rolb
int
daa
jp
inc
shl
lcall
ds
push
cld
inc
inc
stc
inc
daa
adc
dec
hlt
and
outsl
or
pop
inc
dec
cmp
stc
adc
mov
cmp
sti
cmp
notb
loop
xchg
push
sub
push
sbb
lea
and
add
jb
sti
cmpl
jmp
sbb
movsl
add
sbb
adc
cmpsl
testl
das
dec
cmpsl
xor
movl
js
cmp
mov
xor
fidivrl
lret
sahf
inc
mov
stos
mov
loopne
mov
dec
and
call
fsts
cld
out
pop
xchg
ljmp
pop
jmp
mov
sbbb
ror
lret
sar
mov
pusha
test
cs
stos
mov
pop
and
sbb
cmp
mov
inc
push
xor
test
or
in
inc
mov
dec
iret
in
ror
push
and
pop
pushl
flds
mov
es
insb
sub
pushf
movsl
bound
mov
inc
mov
mov
inc
push
sub
sub
js
jg
xor
mov
lret
repz
push
gs
jo
fidivrl
das
mov
hlt
stos
lcall
ret
stos
repnz
mov
or
push
jb
push
push
outsb
adc
scas
sti
jge
cmpl
and
adc
and
sub
insb
ss
movsb
outsb
pop
cmc
inc
push
andl
test
xchg
jecxz
inc
cmp
mov
or
pop
mov
xchg
xchg
mov
fdivl
mov
lret
stos
xlat
ss
gs
adc
fstpl
xor
stos
rorb
mov
fucomip
mov
mov
shlb
pop
add
pop
xor
les
addl
repnz
lods
gs
xor
leave
out
add
aad
fisubl
xchg
fwait
add
mov
loopne
ljmp
mov
pop
mov
xchg
push
lods
sbb
testl
fisttpll
fwait
mov
popa
cmp
leave
insb
xor
mov
xor
pop
daa
insl
leave
in
mov
jl
mov
sub
mov
imul
lods
ds
stos
test
cld
popf
cmp
divb
cld
push
push
cmp
stc
add
jecxz
or
push
push
mov
pop
dec
test
stos
sti
roll
lock
aaa
xor
movsb
and
test
add
pop
dec
sbb
pop
mov
sbb
mov
xor
imul
mov
jge
in
mov
loop
add
movsl
mov
sub
pop
outsb
cmpsl
rcr
and
sarb
gs
out
leave
in
xchg
std
cld
movsb
repnz
cld
mov
loope
cmp
dec
int
mov
sbb
or
arpl
push
into
mov
jnp
sub
int3
mov
inc
jmp
mov
js
sbb
into
mov
dec
addr16
xchg
aad
das
loopne
ret
inc
cmp
mov
or
pop
int
jnp
or
movb
aaa
mov
jg
xchg
jno
pop
dec
stc
insb
add
mov
inc
mov
mov
pop
push
xor
add
fcompl
insl
loope
out
ds
call
mov
aad
push
dec
sub
les
arpl
sahf
mov
dec
or
or
xchg
test
add
movsb
into
sahf
push
shll
out
addl
fucomp
mov
sbb
or
rcl
cmp
inc
cld
push
sbb
mov
lahf
sbb
push
add
aas
inc
shl
sub
sbb
pop
dec
xchg
filds
inc
sub
test
jl
add
adc
inc
xor
cmpsl
pop
sbb
mov
stos
fidivrl
ds
je
jb
mov
fnstcw
add
pop
sbb
int
cmp
or
dec
in
add
outsl
sbb
loopne
in
pop
push
fimuls
xor
bnd
lret
mov
popa
push
mov
fnsave
push
mov
dec
mov
xlat
jne
dec
cmp
push
out
fnstenv
or
pop
incl
shrb
add
xor
dec
mov
loopne
lcall
scas
jmp
sub
out
mov
jno
aad
cmp
ret
jb
sbb
fld1
in
out
cs
pop
enter
int
xor
addl
or
cmp
sbb
push
pop
stos
lret
rcll
shrl
xor
std
lret
mov
mov
cmp
sbb
into
add
inc
pop
setno
mov
loop
movsb
and
mov
insb
inc
out
add
je
cmpsl
out
out
gs
loop
dec
mov
and
mov
movhps
loopew,pn
add
lock
mov
mov
mov
inc
mov
pop
ss
ss
aam
loop
ljmp
push
push
inc
test
mov
adc
repnz
mov
pop
and
xor
adc
popa
and
and
dec
stos
cmp
sub
jecxz
inc
sbb
lret
loopne
loope
add
mov
adc
gs
repz
push
pop
in
aam
and
pop
and
add
inc
int
or
xchg
outsb
mov
or
push
mov
rclb
mov
addb
cmp
int3
push
pusha
bnd
push
xchg
inc
xchg
mov
sti
inc
lods
ja
es
call
or
out
fcmovnb
cs
adc
and
stc
inc
js
enter
pop
in
aad
or
adc
mov
sarb
pop
push
mov
in
mov
rclb
jmp
pop
xchg
xchg
jne
pop
or
jle
mov
loop
sub
fisttpll
pop
jae
adc
mov
notb
or
ljmp
outsb
div
outsb
icebp
test
ljmp
cmp
lret
adc
dec
xchg
ss
mov
xor
sub
ljmp
das
sub
jno
cld
cld
cwtl
aam
cltd
and
push
adc
orl
mov
cmp
lret
cmp
push
jecxz
lret
xchg
pop
fistpll
popa
mov
sbb
leave
ljmp
cmp
mov
cmp
testb
rcrl
dec
fldenv
imul
dec
sbb
test
adc
lahf
test
das
popa
les
mov
jl
mov
ljmp
jne
jg
dec
mov
xchg
jae
and
iret
jb
pop
sbbb
fwait
ja
stos
push
out
outsl
inc
or
add
repz
mov
mov
dec
dec
pop
loope
sub
mov
sbb
in
into
insl
dec
imul
test
fisttpll
fs
in
pop
mov
subb
xchg
out
inc
pop
clc
shll
mov
jnp
sub
cmpsb
or
ret
shr
call
hlt
dec
adc
jle
dec
sbb
mov
adc
and
fucom
nop
mov
mov
lea
jecxz
inc
stos
inc
sti
test
insl
fistl
mov
push
sub
insl
gs
popa
loope
into
push
shrl
in
adcl
lods
mov
push
cmp
pusha
dec
and
xchg
addb
jne
sub
adc
inc
cli
roll
test
pop
inc
xor
mov
mov
or
stc
jae
xor
lahf
lods
sbb
sbb
jg
cmp
je
jle
mov
lret
out
ret
mov
lods
xor
dec
xchg
add
push
xor
inc
ljmp
xchg
and
loop
das
lds
jno
mov
mov
add
and
cmp
cmp
xchg
adc
imul
sbb
adc
jg
orb
adc
ret
fadd
test
ss
add
addr16
adc
movsl
inc
pop
mov
call
enter
pop
push
fidivrs
mov
lods
mov
xor
push
pop
cmp
push
xchg
pop
mov
test
push
sbb
cmpb
loop
and
push
cld
sub
cmp
ret
stc
xchg
xchg
cmp
aas
or
mov
imul
add
insl
outsl
pop
adc
mov
in
andb
test
mov
mov
addr16
out
or
fwait
or
or
cmp
out
inc
mov
cld
lea
outsb
flds
push
insl
cmp
subl
stos
int
jb
lret
js
xchg
xor
fisttpll
je
int
das
loope
inc
addr16
loop
into
adc
icebp
mov
mov
jecxz
test
push
sub
andl
dec
bound
mov
test
shl
fcmovnb
cmp
fmul
shll
jno
sub
negl
pop
sbb
xlat
ds
cmp
cs
cmp
mov
jns
and
fsubrs
pop
pop
push
test
xor
mov
inc
fs
shll
inc
sbb
loop
fldl
fmull
stos
and
mov
xlat
xlat
sbb
pop
sub
jmp
mov
or
loopne
push
jns
jmp
push
jno
lret
adc
fwait
mov
sub
push
fnstsw
gs
inc
pusha
sub
adc
mov
xor
mov
sbb
nop
std
fdivr
stos
pusha
xor
add
sbb
imul
lods
add
cmpsb
call
push
xchg
mov
xlat
inc
int3
mov
ret
sbb
enter
notl
cmovo
xor
mov
dec
cmp
ja
inc
inc
xor
movsl
test
mov
in
xchg
jne
pop
cmp
out
out
pop
mov
xchg
add
movsb
lods
ret
xchg
xor
mov
aaa
es
adc
or
and
int
cmpsl
mov
lahf
jne
xor
cli
mov
lahf
ret
loop
mov
fwait
push
lahf
jmp
xor
std
pop
call
fmuls
and
dec
test
out
fists
fwait
pop
outsb
cmpsl
fdivl
ss
je
cmp
jb
fs
adc
dec
cmp
cmp
mov
xchg
xlat
shrl
jae
emms
jg
inc
movsl
jnp
xchg
xor
loopne
and
fiaddl
jl
or
jle
and
sub
cmp
xor
adc
rolb
pop
int3
pop
mov
adc
notl
lret
pop
xor
push
dec
jmp
in
imul
mov
xchg
sbb
sbb
or
pop
add
mov
jecxz
jmpw
rclb
loope
lea
cmpsb
xchg
cmc
push
adc
ss
mov
ds
cmpsb
sub
or
orb
lds
xchg
push
mov
std
xchg
jle
mov
push
stc
pop
sub
fildl
les
pusha
cmpsb
sbbb
mov
inc
lahf
std
sarl
xchg
or
imul
out
mov
adc
cmc
stos
mov
cmpsl
sbb
inc
xchg
outsb
adc
leave
rorl
lods
loopne
adc
mov
dec
repnz
out
aaa
or
sti
rcll
pop
add
inc
insb
dec
in
dec
push
push
daa
xor
cmp
cmp
jle
nop
xchg
xchg
mov
aas
and
push
cltd
stos
xlat
mov
xor
mov
cmp
stc
fcompl
push
lods
out
mov
push
sub
or
sbb
les
cmp
je
nop
jbe
je
cmp
insb
push
xchg
xchg
sub
clc
push
and
dec
xchg
inc
idivl
data16
popf
inc
and
idivb
and
popa
mov
adc
cs
int
je
cmp
push
hlt
and
mov
cmpsb
in
addb
add
push
xor
pop
jge
inc
push
and
dec
sti
iret
js
movsb
inc
fs
sub
stos
xchg
fisubl
call
push
pop
test
push
ret
aad
or
mov
cmp
or
icebp
popf
xchg
lods
xlat
push
xchg
xor
mov
jne
dec
call
icebp
mov
xchg
sbbl
outsb
sub
and
lret
mov
xlat
fsubl
movsl
inc
push
push
pusha
push
add
lods
mov
lret
mov
imul
ret
lock
mov
pop
mov
inc
inc
xor
or
aaa
aad
pop
shl
adc
jmp
xchg
outsb
push
cmp
int3
jecxz
push
outsl
imul
add
mov
clc
pop
mov
aad
pop
sahf
sti
cmp
sahf
aas
mov
rep
inc
sub
push
push
out
mov
push
and
call
inc
push
aas
out
push
jbe
xorb
jmp
out
out
cmp
sbb
sub
popf
cli
lret
mov
cmp
push
kmovb
and
add
sub
mov
xchg
xor
dec
stos
cmp
int3
pop
addb
mov
lcall
push
insl
cwtl
or
dec
cmp
xchg
xorb
pop
push
sub
lret
mov
cmp
cld
or
fcmovnb
js
and
neg
repz
scas
jge
mov
sti
outsb
rcrb
mov
fisttpl
test
add
ret
mov
xchg
or
test
fists
xchg
sahf
loop
push
inc
in
push
adc
cmp
sub
push
xchg
ficomps
xchg
push
xchg
xor
sbb
cmp
mov
cmp
mov
lcall
mov
cwtl
fstpl
inc
sub
pop
mov
stos
sbb
shlb
insb
sbb
pusha
mov
aaa
push
or
cmp
xor
jnp
andl
ret
cmp
dec
dec
pop
jae
or
sbb
lret
mov
hlt
or
or
repnz
scas
sbb
sbb
mov
imul
jmp
pop
ret
xchg
or
xchg
pop
jns
dec
fidivs
sbb
ljmp
push
dec
push
jb
jge
adcb
inc
mov
sti
add
loopne
js
hlt
ret
or
dec
hlt
push
sti
mov
add
xchg
mov
mov
adc
dec
movl
add
nop
jge
lcall
jle
mov
pusha
lods
push
rcl
push
push
pop
lahf
daa
push
cmp
imul
or
testb
mov
adc
inc
mov
rol
jl
jge
mov
stc
pop
xchg
int
pop
mov
fs
dec
xchg
mov
ljmp
fsubl
dec
add
fs
andb
cmp
insb
ret
mov
jo
mov
mov
dec
dec
dec
enter
inc
mov
frndint
xor
inc
test
pusha
lret
mov
cmp
add
mov
mov
movsl
decl
xchg
mov
sar
xchg
sbb
cmp
sbb
repz
mov
mov
mov
jle
into
sub
push
push
shrl
add
cmp
stos
pop
pushl
bound
scas
daa
push
xlat
in
daa
xchg
pop
notl
push
lret
add
mov
aas
mov
stos
push
ja
pop
shll
dec
mov
dec
sbb
adc
push
dec
outsl
sub
testb
xor
cli
ret
inc
in
mov
cwtl
sbb
sub
outsl
xor
not
lods
push
nop
aaa
jl
sbb
repnz
pop
ds
cmp
xchg
insl
les
and
jle
cmc
pop
lds
outsl
pop
sbb
test
into
jb
insb
add
cmp
sbb
scas
mov
sti
push
stos
inc
xor
popf
dec
cs
jg
pop
pop
pop
mov
xchg
dec
sub
cli
ljmp
les
stos
mov
and
sub
faddp
loope
pop
xchg
or
add
test
mov
mov
decb
inc
mov
in
lds
aam
repnz
jecxz
insl
or
das
pop
test
ret
test
clc
outsb
subl
sbb
inc
jae
shlb
mov
pop
repz
scas
in
dec
adc
or
movsb
jne
mov
inc
rcll
adc
pop
sub
jnp
cmpsl
sbb
out
out
dec
lods
add
push
aad
addr16
loope
xchg
arpl
inc
dec
mov
dec
mov
clc
adc
cwtl
pop
dec
sbb
in
scas
dec
pop
mov
mov
test
test
popa
test
sub
leave
mov
fwait
mov
outsl
jae
into
imul
inc
movsb
xor
jae
aad
xor
adc
fbld
scas
jmp
adc
sbb
dec
cmpsl
addr16
xchg
imul
ficompl
jnp
iret
adc
push
pop
inc
add
ja
pop
mov
in
pop
sti
pcmpeqw
ret
mov
js
ljmp
adc
jp
fsts
or
dec
andb
inc
mov
adc
mov
stos
test
jmp
addr16
jae
jo
lret
push
pop
insl
jge
dec
std
mov
mov
sbb
arpl
mov
or
mov
mov
scas
fsubl
pop
push
cmpsb
lret
inc
out
aad
dec
insl
fidivrl
pusha
xorb
mov
bound
mov
mov
push
hlt
jbe
cld
fnstenv
push
push
addl
pop
mov
scas
orb
loopne
mov
jg
dec
sti
lret
inc
repnz
adc
or
push
and
je
xchg
hlt
sbb
outsl
dec
in
call
bound
dec
and
fistl
xchg
es
xlat
int3
ret
repnz
loope
imull
mov
inc
and
xchg
mov
pop
loope
mov
hlt
push
jb
daa
roll
mov
mov
jns
push
nop
lock
stos
push
jb
dec
lds
and
pop
push
xchg
inc
movsl
mov
push
inc
pop
xchg
in
arpl
xchg
loope
int
jmp
out
mov
adc
mov
ret
jle
cli
ffreep
in
jl
mov
dec
imul
xorl
fdivl
xlat
rep
stos
shlb
inc
test
fs
adc
xlat
das
rcll
jb
pop
or
loope
popf
jmp
pushf
xchg
sub
dec
push
call
xor
mov
imul
mov
insb
add
scas
outsb
into
arpl
add
sbb
xchg
je
jp
cmp
stos
lahf
int
ret
in
dec
adcb
lds
test
ret
fwait
mov
fwait
jp
fisttpl
pop
mov
std
test
out
push
push
cmp
add
adc
das
mov
adc
inc
int3
xchg
decb
mov
hlt
leave
test
shrl
jg
js
sub
test
sub
add
arpl
mov
jo
xchg
daa
xor
je
inc
xchg
adc
dec
int
inc
bound
dec
push
pushl
hlt
scas
stc
push
xor
jo
test
hlt
mov
clc
and
push
addb
mov
add
shr
lret
out
mov
pushf
iret
add
addb
stos
xor
negl
sub
pushf
movsb
dec
sbbl
out
adc
jnp
icebp
or
jae
and
adc
movsb
push
stc
shll
sub
daa
jecxz
xchg
in
sbb
inc
loope
push
xlat
mov
leave
adc
push
push
arpl
xchg
mov
adc
filds
lea
push
ror
mov
dec
out
add
push
pop
notl
nop
in
adc
mov
push
bound
loop
out
sbb
xor
sub
dec
outsl
hlt
or
stos
cltd
xor
mov
xchg
jns
sub
frstor
aam
cltd
mov
xchg
lods
or
pop
add
pop
vminsd
inc
and
push
xor
int
cmp
jno
cwtl
push
mov
mov
stc
cwtl
clc
mov
mov
adc
or
sbb
pop
add
cmpsb
jp
add
adc
inc
add
lds
mov
test
dec
push
int3
and
cmp
xchg
stos
add
add
inc
jne
push
pop
jmp
or
scas
lret
fcmovb
lea
inc
out
mov
aaa
int3
pop
dec
xchg
jp
sub
fs
or
sub
mov
jne
push
popf
sub
pop
adc
andb
adc
es
fdivrl
pop
sub
loope
into
sub
add
in
adc
in
mov
fdivr
and
hlt
pop
inc
cmp
cmp
shlb
out
es
call
icebp
inc
ss
jno
test
sbb
inc
popa
xchg
sbb
adc
ret
cmpsb
rcrb
jp
inc
jle
mov
mov
adc
pop
sbb
cmp
mov
push
cmp
popa
add
std
je
mov
mov
das
jg
sub
pop
insl
jnp
sbb
sbb
shrl
int
jb
mov
jae
stos
sbb
data16
push
imul
ja
mulps
inc
stos
in
jo
fstps
sbb
test
jo
insb
lea
out
pop
pop
repz
popf
dec
ljmp
sbb
std
lea
add
adc
cmp
shrb
call
movb
jg
inc
dec
add
cmpsl
cmp
sbb
and
jno
mov
scas
and
jo
lds
jns
aam
push
mov
jnp
mov
outsb
adc
shll
out
sub
mov
out
dec
inc
mov
pop
push
jae
pop
scas
lret
adc
int
pop
adc
jecxz
ret
jp
dec
dec
out
xchg
push
shlb
push
lcall
adc
mov
mov
insl
scas
xchg
adc
sub
sar
cmp
dec
imul
inc
jge
and
cs
mov
fsub
push
aas
aad
in
and
js
dec
sbb
inc
movb
add
sbb
in
xor
lcall
xchg
sbb
lds
lds
sub
jne
push
iret
fstpt
iret
sbb
lea
or
cli
rorb
notl
mov
xchg
lock
fcmovnu
and
inc
pop
jno
sub
push
mov
bound
lret
nop
adc
into
fists
dec
adc
into
lret
outsl
jb
das
mov
sti
sbb
inc
leave
mov
aad
sbb
pop
out
shl
inc
leave
add
ror
sbb
fidivrl
int
pop
sub
or
fisubrs
inc
jle
or
adc
jle
inc
insb
mov
rorl
insb
mov
adc
outsl
mov
mov
pop
dec
adc
scas
and
xchg
cmp
sahf
clc
stc
dec
fbstp
imul
movsl
adc
adc
or
dec
push
push
jge
cltd
sbb
loop
js
mov
mov
movsl
ret
adc
pop
xchg
xor
fisttps
mov
inc
stc
mov
mov
test
ljmp
xchg
dec
add
loop
fbstp
pop
jns
in
das
pop
rol
xor
and
xor
adc
cmp
jo
pop
lods
xchg
mov
sti
or
sarb
lods
ret
add
test
out
rolb
cmp
dec
lods
mov
ss
fstpl
lock
add
sub
fstp
pop
jae
dec
cmp
rcrb
stc
es
arpl
xchg
rclb
sarl
pop
sub
and
pop
hlt
lahf
orb
test
jmp
aaa
dec
sbb
jae
push
dec
mov
mov
negl
inc
lahf
cmp
notb
xorb
cmp
add
movsl
push
mov
cwtl
adc
lahf
mov
inc
jnp
mov
rolb
imul
roll
inc
xor
test
sbb
fcmovb
push
mov
addb
or
mov
pop
into
test
sbb
scas
leave
jle
sti
mov
mov
add
pusha
dec
add
or
mov
lahf
in
adc
stos
or
mov
push
cmp
insl
rorb
jl
clc
int
and
xor
pop
mov
test
jg
aad
jnp
stos
sbb
imul
je
and
mov
mov
xchg
xchg
jl
jg
aad
sbb
inc
xchg
mov
out
jecxz
sub
and
and
iret
sub
and
lods
les
repz
jns
cmp
sub
add
decl
adc
cmp
push
xor
cwtl
outsb
mov
inc
xor
mov
xchg
fcomip
xchg
push
ja
xor
xor
adc
aaa
loopne
mov
cmpsl
ljmp
pop
push
addb
add
lcall
stos
lock
mov
arpl
addb
lea
loope
mov
mov
xchg
popf
jb
cld
in
mov
mov
movsb
push
dec
repnz
outsl
shrl
push
inc
cmp
sbb
ljmp
push
shr
mov
fldcw
mov
fcoml
mov
dec
pop
shrl
int3
rorb
inc
mov
in
lea
sbb
fadd
mov
insb
int
insl
mov
jg
aas
mov
cmp
repnz
sahf
mov
mov
mov
ja
repz
add
mov
aam
jae
and
adc
jg
stc
push
cltd
adc
jnp
clc
dec
in
loop
dec
adc
jns
adc
mov
xchg
negb
jmp
inc
pop
popf
cmp
popl
cmp
stos
xor
and
inc
push
or
in
outsb
and
push
ret
imul
fisubs
dec
addr16
mov
xor
std
add
jg
inc
xchg
mov
ret
in
mov
jmp
mov
adc
repnz
sbb
test
inc
sub
cmc
data16
filds
jae
daa
mov
push
inc
mov
xchg
out
ja
pop
mov
lods
cmp
cmp
push
les
jge
ss
lods
int3
push
data16
rcll
cmp
cmp
cmp
out
fsubrp
xchg
add
dec
or
push
neg
imul
adc
fstps
imul
xor
in
mov
scas
adc
mov
outsl
pusha
mov
dec
jle
pop
fs
aaa
pop
in
cmp
popf
pop
sarl
add
int3
dec
mov
mov
std
or
inc
fcoms
cli
push
xor
cmc
add
out
or
or
jae
bound
xor
pop
mov
mov
jecxz
xor
xchg
mov
scas
js
fnstcw
inc
stos
popa
inc
ror
push
repnz
jle
icebp
push
add
aam
bound
in
or
mov
ljmp
pop
pop
je,pt
cmpsl
jle
jb
testl
sub
rclb
hlt
xchg
movsb
adc
cli
or
lea
testb
jle
test
or
aam
fcoms
out
movsl
pop
aam
mov
push
mov
dec
std
shlb
repnz
pop
imul
pop
loop
xchg
lahf
xor
sub
lea
ljmp
mov
inc
or
sbb
cs
xchg
ret
call
fdivrs
adc
xchg
jecxz
scas
sbb
rorl
mov
stos
jnp
outsl
in
inc
je
dec
in
in
roll
cwtl
and
lret
mov
inc
dec
data16
les
ret
imul
cmp
rcrb
push
add
sbb
imul
pop
xor
stos
and
fisubrs
imul
out
add
leave
mov
mov
jae
icebp
xchg
clc
cmp
sahf
bound
mov
add
test
sub
push
shll
xor
mov
outsb
je
adc
lcall
jbe
jp
lods
sti
divb
aaa
pop
and
push
dec
sbb
mov
stos
cmp
fcmovb
lcall
inc
mov
fidivl
mov
sub
sub
daa
xchg
sarl
mov
jl
filds
test
aam
int
mov
cltd
mov
addr16
fcompl
pushl
lret
mov
imul
mov
xchg
test
sbb
inc
icebp
imul
xchg
jo
pop
xchg
inc
and
xchg
cli
xor
mov
mov
mov
cld
mov
dec
xor
push
mov
adc
rorb
cmp
pusha
lods
movsl
hlt
add
hlt
xor
xor
repz
sbb
test
mov
xchg
mov
jmp
addr16
add
push
outsl
push
je
loopne
cmc
lcall
jp
adc
inc
test
mov
jecxz
cmc
xchg
iret
or
iret
hlt
push
test
xor
aas
cmp
lds
mov
adc
or
clc
inc
clc
sub
add
mov
mov
loopne
sub
dec
mov
inc
movb
es
imul
pop
push
pop
jge
leave
jmp
and
cmp
add
loop
jns
and
jb
iret
fmull
xlat
aad
out
push
dec
cmp
jae
add
push
int3
inc
and
outsb
or
push
adc
mov
adc
and
popf
jnp
js
push
test
and
cmp
pop
shl
sub
add
mov
mov
shrl
popa
fcomps
sbb
or
test
aam
test
notl
int
lock
dec
jge
addr16
ja
inc
inc
inc
loop
add
add
out
push
repz
mov
rcrl
lock
out
hlt
xchg
push
outsb
mov
scas
jno
dec
repz
loopne
sub
rcrb
lahf
std
les
js
insl
into
lea
out
mov
jmp
adcb
lret
clc
mov
loope
aam
inc
jbe
jmp
sbb
imul
cmpsl
js
imull
in
filds
cmp
sbb
ljmp
jb
sub
sub
inc
and
and
test
pop
scas
das
stos
andl
jne
push
sub
mov
out
and
loop
jg
stos
push
stc
test
xor
sub
daa
insl
cmpb
test
xchg
loope
mov
clc
dec
mov
inc
cmpsl
xor
push
ja
scas
and
inc
test
daa
ss
adc
repnz
rcr
xchg
in
inc
jmp
test
inc
mov
ja
push
pop
movsl
imul
and
insl
inc
inc
enter
or
xor
movsb
xchg
daa
xor
call
xchg
subps
shr
jle
mov
pop
add
fcomps
hlt
fwait
shlb
mov
or
dec
test
sti
lods
incb
adc
xchg
repz
add
out
inc
add
jne
push
push
sbb
inc
dec
jno
xchg
inc
and
push
pop
jo
and
nop
pop
es
icebp
sbb
push
cli
xchg
loopne
mov
and
ret
pop
xchg
cs
int3
es
repz
pop
loop
pop
lcall
and
int
shlb
adc
mov
gs
je
pop
push
lea
sbb
add
or
or
xchg
jae
jbe
pop
mov
test
or
xorb
flds
push
cmp
js
cmp
jns
pop
pushf
adc
lock
mov
mov
dec
push
add
xor
mov
int
lds
jns
mov
movsb
stos
outsl
je
movsl
imul
lock
dec
pop
in
outsb
xchg
lret
in
jecxz
in
push
in
rcrl
fidivs
movsb
sub
mov
fs
in
dec
mov
xor
sbb
xchg
scas
leave
cmp
in
je
jle
xchg
mov
mov
stc
or
pop
nop
dec
divb
sub
dec
or
dec
int
imul
das
or
dec
and
adc
mov
mov
add
enter
xchg
loope
cld
mov
test
cmp
mov
pop
lock
adc
push
push
dec
pusha
add
jecxz
inc
xchg
inc
pop
aam
nop
cld
push
int
in
cli
xor
test
and
fisubl
mov
cltd
xchg
cmp
bound
ret
pop
in
inc
mov
mov
in
jo
add
xchg
aam
add
xchg
and
mov
xchg
stos
push
ret
popf
mov
call
lahf
mov
fiadds
push
xchg
sub
in
into
xorb
jnp
jo
mov
xor
rorl
add
inc
sub
nop
sbb
mov
bound
lcall
mov
aas
icebp
push
xor
cmpsl
adc
pop
sbbb
mov
clc
push
insb
sbb
scas
jmp
negl
sarl
scas
mov
enter
insl
jp
xlat
les
or
pop
out
xlat
dec
adc
bound
jmp
je
cli
shl
imull
mov
insl
pop
xchg
shll
mov
daa
int
ja
fcoml
jne
or
dec
imul
dec
push
fs
sar
fdivrs
push
add
xor
push
jb
test
dec
xchg
je
adc
lods
cltd
xlat
fsubrs
cwtl
insl
dec
aaa
shlb
xchg
cmp
sbb
call
ss
sub
pop
or
iret
lock
loop
sub
or
outsb
mov
push
popa
ja
and
shr
sub
mov
vpor
mov
pop
cld
sti
fdiv
rorb
xchg
sub
test
cli
cmp
popf
add
cld
and
mov
mov
and
ljmp
in
lahf
repz
rcrl
ljmp
add
pop
fcmovbe
pop
inc
ds
aam
enter
stos
lea
repz
jno
addr16
mov
rcll
or
in
xchg
pop
adc
inc
enter
ljmp
rcr
cmp
iret
xchg
add
push
fmulp
mov
pusha
addr16
dec
cmp
sbb
dec
test
mov
repz
mov
sub
int
or
jge
lock
insb
mov
in
add
mov
or
fsubl
shrb
stos
fisubs
fsubl
cmp
loopne
xor
adc
div
mov
sub
arpl
mov
pop
mov
sbb
cmpsl
in
push
das
outsb
in
add
mov
lcall
mov
mov
push
insb
pop
loopne
or
scas
inc
int3
push
loope
lret
repnz
xor
xor
sub
int
je
popf
adc
test
lahf
jne
adc
push
jecxz
jb
stc
loop
sub
xchg
aas
push
cmp
xlat
hlt
sahf
pushf
push
clc
or
pop
xor
call
adc
in
push
pop
sub
xlat
push
movsl
scas
cmp
adc
jmp
pop
mov
je,pn
outsb
addb
rcrl
mov
inc
int
push
ds
neg
mov
in
jne
pop
mov
lcall
andb
sbb
pop
mov
mov
sub
dec
out
xchg
push
xchg
sub
adc
repnz
les
dec
test
and
mov
loop
int3
push
nop
adc
subl
cmpsl
sub
mov
mov
int
push
mov
mov
gs
cltd
pop
nop
popf
mov
mov
cs
test
adcb
repz
shr
jne
cmpsl
sub
mov
cltd
sbb
jno
dec
clc
push
idiv
cwtl
and
mov
sbb
mov
and
mov
cmp
xor
nop
mov
divl
push
fists
mov
lret
sahf
pusha
xchg
adc
pop
hlt
sbb
ret
lock
aaa
sub
sbb
aas
mov
mov
push
and
stos
mov
dec
jns
xchg
xor
iret
fisttpll
movsl
popa
mov
mov
scas
inc
dec
pop
xor
fdivl
pop
push
mov
movsl
mov
into
adcb
and
hlt
fisubs
pop
dec
xorl
notb
or
nop
inc
sbbl
idivb
push
mov
inc
cmpps
scas
bound
aaa
out
cmp
ja
or
mov
add
das
mov
sbb
xor
loopne
adc
cltd
jnp
ss
scas
addr16
lcall
xlat
sub
in
in
sbb
and
dec
jb
insl
clc
add
insb
out
aaa
cmpsb
test
aad
fisttpl
out
mov
stos
test
outsb
mov
jl
mov
mov
in
mov
aad
dec
sti
mov
and
mov
pop
xchg
popl
jecxz
xchg
jl
imul
dec
or
and
or
jne
jbe
mov
push
add
push
dec
pop
xchg
dec
push
in
xor
xchg
pop
ss
dec
movsb
dec
jge
subl
cmc
xchg
addr16
shlb
testb
addb
aaa
outsb
scas
sbb
add
clc
cmpl
xchg
movsl
fwait
orl
gs
pop
jp
cmp
mov
or
pop
pop
jb
mov
ja
out
xlat
inc
in
cmp
push
iret
jns
pop
jnp
mov
in
push
jo
repz
add
clc
mov
mov
in
ss
mov
stos
jno
sbb
dec
xchg
imul
jae
pushf
stos
lock
jle
out
jno
xchg
or
sub
ds
pop
imul
xor
pusha
sti
cs
lods
xchg
inc
cs
pop
and
pop
xor
aam
pop
loope
test
loope
rcr
cld
outsl
adc
or
jb
dec
mov
xchg
loope
enter
fcoml
xor
or
inc
mov
jecxz
int
test
jecxz
sar
mov
xchg
je
sub
xchg
sbb
add
fidivrs
push
js
cmp
mov
push
jne
push
sbbb
xor
adc
add
andl
popl
sbb
fs
cmpsb
je
les
jmp
dec
lds
pop
push
push
insl
test
cld
xchg
loopne
mov
sahf
dec
pop
xor
mov
xchg
in
adc
mov
sbb
cmpl
dec
jmp
pop
ret
loopw
push
aaa
orb
sub
movsb
dec
xchg
dec
jno
rcll
mov
stc
xorl
or
mov
inc
xchg
pop
shrl
orb
cld
cwtl
shlb
adc
lret
mov
push
fdivrs
enter
orb
ret
and
mov
or
mov
mov
cmp
jae
or
mov
add
mov
aad
push
stos
ljmp
mov
popa
mov
lahf
push
in
or
mov
cmp
xor
xor
cmp
push
inc
in
sbb
xchg
jle
mov
add
sbb
cmpsl
inc
pop
sbbb
sbb
cwtl
negb
ret
insl
cs
mov
and
add
adc
fs
sbb
mov
mov
shl
inc
fisttpll
sbb
aas
es
adc
lahf
nop
ljmp
arpl
lret
sub
mov
fwait
ret
sbb
or
pop
aad
jge
jno
mov
ret
loop
ljmp
add
xor
ja
sbb
mov
incb
pop
shrb
hlt
xchg
or
decb
enter
out
xchg
dec
leave
mov
icebp
loopne
js
mov
dec
xor
into
in
cmp
mov
inc
jp
jge
mov
push
dec
in
mov
mov
mov
stc
mov
and
outsb
cmc
fistpl
adc
mov
dec
push
jbe
and
push
loop
imul
adcl
add
or
and
pop
ljmp
sbb
in
adc
inc
mov
and
mulb
sbb
dec
xor
fisttps
jns
dec
jecxz
pop
pop
scas
cwtl
pop
pop
push
add
cmp
aad
insb
pop
jno
stc
fisubrl
push
lods
dec
movsl
das
jns
jbe
push
mov
mov
sbb
push
dec
pop
bound
pop
sub
shlb
jo
das
rcr
sub
sub
sbb
js
mov
aaa
cmpsl
inc
mov
mov
insl
aas
dec
pop
mov
push
mov
mov
and
shlb
inc
jbe
push
addl
pop
aam
dec
enter
into
jg
push
into
mov
or
loop
and
mov
bound
inc
jmp
mov
add
mov
mov
aam
or
push
mov
popa
cli
bound
repz
adc
les
mov
je
enter
dec
jb
adc
sbb
push
and
dec
test
pop
iret
data16
push
mov
push
dec
ret
loop
stc
sbb
sbb
mov
and
outsl
jbe
or
int
jb
dec
and
pusha
mov
push
sbb
mov
jo
and
sbb
js
add
imul
sub
aas
sti
push
lea
dec
fwait
cmp
mov
jno
pushf
pushf
jmp
add
sbb
repz
sub
or
aad
add
das
adcb
or
sub
ds
lock
popf
cmp
cs
shll
mov
out
stc
pavgb
jmp
faddl
sbb
or
out
jne
inc
or
push
dec
pop
fdivl
sub
pop
cmc
test
xchg
outsb
cli
es
jp
rorl
adc
sti
loop
cmp
lods
shll
pop
or
lret
out
push
fbld
inc
out
push
inc
pop
shlb
dec
mov
pop
jge
imul
mov
out
sub
mov
mov
mov
sbb
sub
sub
sbb
nop
add
inc
idivb
dec
dec
es
fstp
cs
mov
sub
loopne
fsubr
inc
mov
and
jo
xor
cmc
fstl
pusha
jb
cmp
jge
mov
cmp
add
xor
xchg
fidivl
dec
jl
xchg
stos
sub
ret
dec
sub
popa
out
scas
into
hlt
xchg
add
test
sar
es
inc
or
ss
pop
add
dec
je
mov
sub
cmpsb
outsb
pop
cmp
mov
mov
mov
mov
inc
mov
xchg
fwait
cmp
jge
lds
incb
in
scas
mov
xchg
scas
lods
lret
test
dec
js
lahf
or
mov
lock
push
push
jb
stos
mov
sahf
adc
std
xchg
movzwl
enter
sub
icebp
dec
pop
jb
xchg
frstor
test
dec
fisubrl
jecxz
imul
int3
lret
sbb
aas
add
mov
xor
pop
ret
sbb
adc
lcall
shl
in
stc
inc
aas
pop
adc
xor
dec
mov
push
enter
out
pop
xor
out
inc
cltd
inc
out
test
std
cltd
sub
pop
sbb
jbe
or
out
bound
insb
enter
je
pop
jmp
mov
mov
loopne
mov
jle
push
fs
push
xchg
pop
les
jo
adc
push
push
inc
mov
pop
shr
xchg
sub
jmp
mov
clc
subb
jmp
bound
test
adc
js
inc
jne
jae
cmp
lods
cli
jge
lock
xor
or
frstor
scas
jecxz
mov
ret
lcall
lea
ja
lea
int
in
cmp
xor
add
jae
fcomi
inc
fisubl
sub
add
xor
cmp
pop
loope
int3
insl
mulb
cmp
xorl
fldl
sbb
cmp
push
jge
mov
pop
jg
rorl
rcrl
popf
fadds
stos
cwtl
xchg
xor
xor
adc
mov
mov
xchg
jns
mov
jb
test
adc
jnp
lret
incl
jp
lods
popf
adc
into
xlat
lock
lahf
push
das
in
sbb
sbb
test
clc
push
fnstsw
imull
jae
xor
inc
pushl
jns
inc
lds
or
ret
mov
test
jg
add
xchg
or
sbb
cmc
das
or
mov
inc
popa
nop
lret
cmp
xchg
mov
std
dec
sub
mov
and
adc
mov
mov
push
xchg
push
gs
lods
mov
cmp
push
and
and
mov
test
fnstenv
rcl
cmp
and
fildl
mov
push
adc
mov
lcall
mov
xchg
inc
in
popa
xor
xor
paddsb
ret
xchg
pop
sar
das
in
sub
xor
mov
and
cmp
leave
leave
stos
sbb
inc
mov
in
mov
jle
orl
stos
ss
adc
cltd
loope
popl
je
rclb
imul
mov
push
aam
cwtl
mov
xchg
jle
cmp
jle
xchg
out
test
enter
fsubl
stc
dec
fisubrs
jb,pn
add
lods
xor
fsubrl
mov
mov
pop
xchg
xor
in
adc
dec
jmp
test
jne
mov
pop
dec
dec
xchg
lods
fistps
into
idivl
ja
pop
sbb
popf
imul
xor
xchg
loop
cltd
andb
gs
sbb
lds
orb
push
inc
pop
push
mov
addr16
and
and
cmpsb
sti
push
or
movb
popf
cmp
sbb
or
cmp
xor
lock
xchg
shll
inc
mov
incb
lret
adc
aad
lock
ror
or
andb
add
test
in
push
inc
arpl
jnp
sub
mov
lret
clc
mov
jmp
cld
movb
adcl
test
push
lds
inc
mov
sbbb
aas
stos
out
jne
mov
pop
in
push
push
out
sub
sub
xor
shlb
fistpll
test
pop
pushf
and
shl
fwait
push
sbb
fcom
pusha
ror
add
in
in
enter
inc
xor
push
and
cmp
xor
test
jns
add
mov
cmp
xor
mov
fmuls
sbb
pusha
lahf
mov
loopne
inc
jae
add
cmpsl
mov
ljmp
dec
clc
rorl
push
je
int3
test
arpl
mov
pop
je
push
out
mov
jge
mov
lds
xchg
shlb
adc
ss
in
or
out
mov
xor
out
fsubl
xchg
and
sub
cltd
sub
pop
mov
xor
cmp
adcl
aam
sbb
loop
aaa
or
aaa
pop
pop
das
lock
ret
mov
ss
icebp
inc
leave
mov
and
mov
in
out
sub
jmp
push
dec
xchg
pop
mov
jae
in
arpl
in
or
xchg
fsubr
cmp
mov
pusha
js
shrb
adc
in
xchg
jmp
xorb
mov
add
imul
int
fdivrp
pop
in
movsl
mov
and
fimuls
inc
loop
or
adcl
push
adc
mov
out
jb
stos
and
cmp
jg
test
rclb
jno
sbb
add
dec
xor
rclb
insl
je
mov
ja
sub
cwtl
dec
dec
imull
cwtl
pop
xchg
push
lods
mov
sbb
inc
sub
fcomps
inc
and
jb
sbb
stos
inc
xchg
xchg
push
mov
into
mov
xor
fisttpll
in
add
lods
lahf
push
ds
jge
pop
call
cmp
xor
xchg
push
bound
jbe
push
push
lret
push
cmp
pop
lea
cs
or
enter
add
lcall
sub
or
lret
inc
mov
dec
and
int
inc
sahf
es
stos
xlat
pop
ret
fstps
mov
iret
ljmp
push
mov
out
rclb
jnp
xor
inc
roll
loop
dec
mov
mov
adc
or
dec
adc
cmpsb
xchg
jnp
push
enter
dec
xchg
pusha
cli
pop
gs
movl
addl
mov
adc
das
dec
inc
sbb
push
gs
and
mov
mov
in
sbbl
repz
fwait
out
sub
jmp
or
test
add
out
popf
movsb
pop
fadds
dec
or
dec
repz
ds
or
insl
sbb
dec
loop
popl
xchg
sbb
xlat
jb
pusha
dec
fincstp
popa
push
scas
sbb
pop
push
push
jl
imul
cli
push
cltd
xchg
push
pop
sahf
sub
sti
popf
mov
cmpsl
sub
pop
mov
xchg
or
mov
mov
lcall
cwtl
dec
inc
sbb
aaa
in
mov
lods
mov
push
imul
insb
mov
jae
inc
mov
mov
fptan
psubsb
mov
and
test
in
inc
jp
fmuls
out
addl
lods
daa
cmp
stc
jae
fnstcw
jnp
rorl
clc
popa
leave
pop
cmp
or
dec
sbb
push
sti
mov
or
jns
outsb
push
jle
jmp
cmpsb
jle
ret
ss
je
pop
mov
sub
lods
and
nop
outsb
lret
pop
out
cmp
adcb
out
popa
aad
adc
mov
pushf
lahf
mov
cwtl
push
mov
incl
hlt
xchg
add
scas
dec
mov
mov
inc
rol
jns,pn
lock
pop
push
pop
add
jecxz
std
jne
jle
arpl
outsb
xchg
mulb
push
inc
lcall
push
or
aas
or
loopne
jmp
movsl
mov
pop
mov
fwait
pop
daa
js
in
or
lahf
or
dec
dec
pop
ds
fists
inc
shll
lods
popa
xchg
mov
mov
loopne
fstpl
sub
cmpsb
popf
cmp
cltd
mov
cltd
std
sbb
mov
das
and
push
sarb
cmp
xor
dec
jb
sub
lds
or
cmp
test
lret
jnp
inc
mov
lcall
imul
movl
or
movsl
cmp
xbegin
in
push
outsl
loope
fdivl
add
mov
iret
and
call
shlb
and
sub
outsl
insl
ret
insl
xor
rolb
sbb
xor
andb
push
movsl
aas
pop
sysret
imul
push
std
insl
xor
stos
iret
in
test
out
inc
sahf
push
call
sbb
sti
mov
sbb
aaa
aam
pop
dec
xor
inc
jecxz
or
cmpsl
je
inc
ds
dec
mov
dec
sbb
pop
test
neg
dec
mov
mov
pop
xor
and
or
mov
ficomps
push
pop
rcll
fs
pop
jbe
fs
subl
clc
dec
and
jno
inc
xor
loopne
sub
push
sub
inc
orb
xor
and
mov
dec
pop
enter
lret
add
adc
out
bnd
jg
test
cmp
and
arpl
cmpsl
add
mov
addb
xchg
rorb
mov
xchg
xor
and
bound
push
cmp
jp
das
sti
jae
flds
subb
inc
test
add
adc
sub
pop
cwtl
pop
in
xchg
in
pop
push
jp
cmp
push
xchg
movsl
jl
out
lods
sbb
push
push
loop
lahf
xchg
inc
cmp
orb
or
sbb
jae
or
ds
sarb
xor
sbb
inc
imul
push
or
stos
and
jg
or
fs
mov
add
jecxz
ret
aas
sbb
mov
lret
adc
dec
mov
push
lea
sahf
xchg
lock
add
or
dec
gs
xchg
mov
stos
fsts
daa
add
mov
sbb
mov
xor
dec
fidivs
in
iret
mov
cbtw
adc
pop
dec
int3
inc
clc
fsts
cmp
fbld
orl
inc
in
sbb
enter
imul
test
in
inc
push
dec
adc
push
mov
jnp
movsl
pop
cmpsl
stos
mov
stc
ror
xlat
imul
mov
js
sub
fmull
cli
cwtl
std
rcrl
adcb
mov
sbb
mov
and
push
push
push
aaa
adc
jle
inc
daa
jno
sti
push
sbb
adc
imul
js
lahf
das
shlb
xor
pop
decb
cs
popa
add
push
sbb
insl
push
lock
fsub
daa
ret
dec
es
clc
shrb
loopne
adc
mov
pop
loop
inc
adc
dec
mov
dec
jmp
mov
jl
mov
dec
pop
repz
pop
andl
test
out
mov
fwait
ss
push
pushf
and
test
aam
fwait
pop
dec
cli
push
jae
xchg
mov
xchg
jns
adcl
addr16
push
lcall
dec
pop
sub
lret
ds
sbb
ret
push
jg
int3
scas
jge
repz
sub
hlt
dec
mov
int
inc
pop
rcr
stos
pushf
add
in
aaa
xor
pop
ljmp
ret
mov
es
pop
lock
lret
push
lds
es
mov
add
lock
fwait
pop
jae
ret
jns
retw
xor
mov
jl
mov
add
gs
mov
cmp
bound
xor
aam
xor
or
cli
push
push
push
outsb
sub
xchg
push
movsb
xchg
inc
rclb
movsb
xchg
leave
bound
repz
dec
outsb
adc
sbb
push
push
iret
or
jecxz
cwtl
fisubs
push
xor
add
add
sbb
pop
cmp
jl
int
jne
psraw
jo
jge
movsl
loopne
fimuls
mov
lcall
es
roll
dec
mov
jno
jbe
fcomps
xorb
lret
adc
push
dec
xchg
jge
mov
shl
test
shl
fisubrs
xchg
and
aam
pop
jae
lock
pop
test
jle
pop
mov
int3
pop
ret
fisubs
jno
add
cmpsb
in
call
aad
xor
mov
ficoms
ret
push
es
sub
insb
fwait
xchg
aad
lret
call
ja
out
mov
adc
subb
cmp
push
inc
mov
punpckhdq
cli
orb
pop
or
jb
lret
sub
into
mov
mov
xchg
fsubp
sar
nop
sbb
sbb
push
dec
outsb
arpl
inc
int3
movsb
clc
ror
ret
aad
inc
jns
orl
pop
mov
xor
jns
jae
movsb
sub
lcall
add
or
push
cltd
xchg
mov
js
int3
rclb
ljmp
and
lods
sbbl
int
cmc
mov
add
xor
inc
push
push
inc
nop
and
inc
inc
mov
aam
enter
mov
jno
cld
push
or
mov
addl
mov
adc
fidivl
mov
aas
lahf
sbb
jno
push
leave
orb
push
mov
divb
jae
ret
pushf
sbb
dec
mov
in
mov
mov
lret
nop
cs
stc
mov
testl
movsb
out
adc
test
js
int
push
imul
test
mov
rorb
into
loop
inc
cmp
frstor
cmp
dec
jecxz
xor
inc
arpl
repnz
test
outsb
cwtl
jl
push
xchg
cmp
cltd
sub
inc
stc
hlt
mov
shrb
mov
jbe
shll
xchg
iret
test
mov
aad
out
sub
movsl
insl
push
jg
in
pop
push
xchg
cmpl
dec
out
mov
xor
sar
sub
pusha
fwait
push
movsb
lcall
inc
daa
pop
lret
scas
pop
xchg
adc
in
push
es
or
push
dec
jle
fistps
jmp
insl
sbb
sub
out
inc
es
pop
scas
mov
mov
mov
lret
lret
xor
xor
jnp
sub
imul
outsl
lea
in
dec
inc
sar
stos
mov
jge
mov
jmp
scas
sbb
das
loop
loope
sbb
add
data16
push
test
leave
pop
inc
loop
mov
or
mov
stos
mov
in
lcall
int
mov
enter
scas
cmpl
cmp
adc
mov
and
xor
jle
imul
cmp
addr16
std
pusha
out
es
aaa
loop
inc
cmpsl
into
lahf
mov
lret
mov
xchg
mov
lea
pop
fbstp
js
repnz
mov
mov
decl
sbbb
xchg
leave
cmp
icebp
xchg
mov
xor
nop
or
xor
fs
inc
pop
jle
mov
adc
mov
jl
pop
enter
lahf
jecxz
popa
fisubrs
add
pop
pcmpeqd
aas
in
repz
inc
inc
push
int
iret
cld
stos
and
add
int3
cmc
mov
push
repz
sub
cs
int
ret
icebp
enter
test
stos
loop
lret
mov
adc
xor
mov
adc
jne
cli
adc
xchg
xor
jmp
ret
xchg
movsl
dec
gs
rcrl
jle
xlat
push
pop
into
inc
test
mov
pop
cs
fstl
mov
jne
rcl
and
adc
aas
fsin
cli
xchg
call
mov
aas
mov
dec
in
stos
sbb
les
sahf
jo
push
mov
jecxz
es
mov
enter
mov
xchg
jge
das
jno
adc
mov
cmp
test
and
jg
cmpsb
aaa
arpl
jp
xchg
aam
out
ficoms
pop
lahf
negb
sub
fnsave
lret
sbb
xor
adc
cwtl
in
loop
ja
cmpsl
sarl
mov
std
push
daa
mov
sarl
xchg
or
jle
jnp
cmc
in
mul
test
aam
pushf
xchg
xchg
mov
add
iret
xor
call
repz
data16
scas
and
cmp
repnz
js
or
jns
andl
cmp
xchg
mov
or
leave
jno
or
push
push
jp
xor
test
sub
ljmp
ret
data16
testl
subl
decb
repz
out
jo
fdivrs
outsb
dec
inc
outsb
stos
aaa
pusha
or
or
push
cmp
jl
pop
pop
sub
es
pusha
pop
movl
popa
push
push
gs
addr16
push
adc
std
xchg
jb
ss
les
pop
lods
push
lods
and
or
popl
xchg
clc
outsb
out
fs
xor
xor
cld
repz
xchg
js
movsb
sub
push
les
fldcw
xchg
xchg
fwait
imulb
in
xchg
mov
ja
lcall
add
mov
sbb
sahf
call
xor
push
add
pushf
out
shlb
sbb
pop
cs
or
sub
pop
jmp
movsb
les
push
mov
mov
popa
jae
jb
adc
sub
js
sbbl
clc
mov
cltd
xchg
xchg
lods
mov
mov
in
jmp
mov
iret
xchg
gs
xchg
xchg
scas
xlat
lret
sub
dec
sbb
mov
or
mov
test
mov
mov
or
es
repz
inc
fcmovne
or
sub
push
fiaddl
xchg
inc
enter
loope
rcll
and
jle
mov
lock
inc
insb
sub
cmp
mov
lea
sti
sub
outsb
imul
arpl
mov
lea
sti
mov
inc
repz
sbb
mov
push
pop
je
shll
jmp
mov
xor
inc
jg
ret
fsub
jne
adc
outsl
arpl
adc
mov
ljmp
jb
jnp
mov
push
cmpsb
dec
insl
aas
inc
sub
jp
je
xor
outsl
or
xchg
or
xor
mov
xchg
das
or
ret
dec
jp
mov
adc
popf
cs
push
push
lods
cmp
in
mov
push
and
repz
xor
out
test
push
lahf
pushf
cmp
sti
fstpl
cmp
in
decl
dec
enter
fs
jb
push
std
sbb
movsl
in
push
js
mov
sahf
cld
les
jb
lods
jo
mov
lods
movsl
dec
sub
jg
mov
adc
lcall
lret
bnd
psrld
dec
dec
arpl
in
cmpsb
mov
cmp
sbb
movsb
cltd
and
sub
sbb
lods
loope
nop
lock
mov
xorb
ror
int
rcll
pushf
pop
jae
push
cmp
cmp
mov
popf
in
sub
push
pop
jno
inc
dec
iretw
arpl
adc
iret
sub
mov
mov
ljmp
and
jne
in
into
lret
jbe
cmp
cs
xchg
xchg
aaa
xor
pushf
in
jns
popa
push
shll
and
dec
stos
inc
ret
mov
pusha
fsubrs
leave
or
cmp
xor
movb
sub
lahf
sub
dec
lcall
and
out
ss
loop
xorl
jns
mov
jecxz
into
xchg
pusha
lods
jg
out
mov
mov
dec
or
adc
lret
mov
adc
pusha
addb
adc
aaa
and
xchg
sub
xchg
scas
pushf
fisubrl
ror
inc
sub
and
xchg
out
out
cmp
repnz
in
mov
aas
cmp
or
inc
add
fcmovb
repnz
xor
int3
aam
outsb
ret
pop
jbe
mov
or
xchg
js
ret
roll
xor
in
jg
cmp
es
mov
xor
and
fmuls
rorl
in
sub
pop
sbb
lret
cmc
jle
fcompl
push
loope
add
fisttps
cmpsb
xor
and
pusha
sub
pop
loop
insb
jae
adc
arpl
pop
jns
stos
mov
cmpsl
repnz
push
mov
mov
xchg
in
add
call
xor
pop
test
hlt
mov
mov
sub
cmp
pop
shrb
es
lods
mov
xor
ljmp
mov
movb
xor
sahf
mov
into
ds
inc
cmp
insb
adc
mov
movsb
je
push
xor
loop
vpunpckhwd
cmp
rcll
adc
enter
xchg
sbb
pop
dec
and
cmp
sbb
imul
pop
bound
dec
out
int3
push
arpl
mov
lret
jo
xor
shrl
imul
mov
repz
sub
and
jb
and
bound
sub
imul
in
es
mov
inc
shl
es
or
mov
cmp
and
cmp
int3
push
stos
xchg
adc
fwait
mul
jmp
cmp
outsl
leave
loope
push
arpl
mov
pop
push
into
jbe
adc
sbb
dec
cmp
and
mov
sub
outsl
data16
mov
add
dec
xor
clc
jp
cmpsb
rcr
popa
inc
cmp
popf
add
add
ja
icebp
popf
aas
jae
lcall
leave
ljmp
mov
jmp
popa
sub
sub
sbb
jo
mov
jno
jle
lods
sbb
push
adc
int
inc
insb
fidivrs
add
adc
std
sti
popa
hlt
iret
xor
cli
cmpsl
out
xchg
jle
mov
lds
mov
xor
xor
lods
cmp
lock
xchg
lahf
cmp
adc
ret
mov
jl
into
mov
orb
cs
or
inc
iret
js
lret
test
test
adc
aas
inc
mov
jle
aaa
fmuls
mov
frstor
inc
in
mov
inc
shl
xchg
inc
push
testl
cmp
lods
and
adc
sub
test
mov
xlat
fnsave
enter
jbe
pop
jne
data16
negl
das
enter
xchg
jp
and
ret
out
jmp
push
lret
int3
jp
out
xchg
pop
shrb
add
scas
cltd
inc
mov
lret
add
push
jnp
push
out
jge
fisttpll
jp
call
jb
imul
or
sub
addr16
roll
pop
out
dec
fsubrp
jmp
setp
mov
push
mov
sbb
xchg
je
dec
movsl
pop
inc
mov
adcb
nop
data16
enter
sub
sbbl
outsl
shrb
lahf
fsubl
add
test
jnp
xchg
or
mov
mov
or
jns
xchg
mov
negb
add
dec
mov
jb
outsl
sbb
aam
xchg
loop
mov
xchg
fwait
pop
cmp
mov
inc
push
inc
adc
cmp
adc
std
sar
rcrb
scas
incb
sub
mov
sbb
adc
iret
adc
xor
push
push
das
lds
arpl
out
movsb
sarl
add
jbe
ds
push
inc
mov
mov
ljmp
aam
ret
push
pop
lea
xchg
cld
or
xchg
outsl
lods
xor
cmpsb
xchg
shlb
inc
jnp
mov
pop
jbe
lock
fsubl
pushf
out
fildll
sbb
repz
scas
scas
dec
cld
ret
fdivs
mov
mov
lock
dec
movsb
push
ds
inc
pop
cs
sub
pop
and
cmp
sbb
or
or
in
int
jne
mov
dec
dec
in
repz
fdivs
filds
add
test
rol
adc
pop
hlt
pop
dec
popa
loope
jno
imul
cmp
std
xchg
negl
out
push
mov
cli
divb
repnz
xchg
mov
cmp
aad
xor
movsl
lock
shr
mov
rolb
subl
xor
add
repnz
and
cmpsb
sub
and
lods
inc
mov
pop
push
jle
popa
sti
movsl
mov
ds
fsts
call
jp
test
lcall
push
mov
fdivr
jno
jns
and
dec
data16
cs
or
inc
rorb
inc
add
pop
scas
inc
mov
gs
xchg
adc
or
stos
mov
lock
jp
push
stos
sub
jle
jl
scas
sub
mov
and
stc
jg
cmp
stc
mov
pop
lret
test
enter
popa
and
scas
jae
fisubl
jns
repz
push
shrl
xchg
mov
mov
jmp
sbb
push
insl
int3
mov
add
mov
movsl
pop
xor
test
mov
aaa
cmp
pop
and
mov
mov
out
add
mov
bound
lock
push
in
sbb
sbb
pop
adc
sub
sbb
notb
fsubs
push
add
pop
and
mov
jae
js
movsl
fwait
loopne
das
cltd
les
add
xor
sub
bound
pusha
jbe
dec
mov
aad
lock
int3
imul
jl
push
and
xchg
cmpsl
mov
sub
push
ret
add
cmpsb
cli
call
iret
cmpsl
inc
loopne
ljmp
pop
sbb
pushf
mov
pop
mov
sub
cwtl
mov
cmpsb
pop
push
cmp
in
push
call
ret
jle
dec
or
mov
test
xor
cmp
mov
cmp
or
or
mov
addr16
clc
lock
movsl
out
sub
jo
test
cmpl
test
loopne
adc
lods
adc
push
push
push
shl
pop
movsb
add
movsl
xlat
stc
mov
sbb
pop
movsb
int
in
push
test
cmp
jae
pop
repz
mov
insb
xor
loop
cmc
xchg
out
cmp
and
fildll
xor
mulb
dec
gs
inc
in
jp
fstps
ss
cmp
sti
imul
jno
gs
out
push
ljmp
in
scas
in
flds
lods
cmp
xchg
push
cmpsl
sbb
adc
cmp
sbb
adc
jno
insb
jb
lea
mov
test
fs
pop
add
pop
push
dec
jo
mov
sbb
lds
arpl
mov
les
cltd
sbb
adc
out
ficomps
mov
hlt
arpl
xor
aad
mov
lcall
jmp
mov
xor
jno
adc
dec
rcll
xchg
cmpsb
adc
fisubl
es
xor
jb
adc
nop
xor
mov
cmp
shll
xor
jg
rclb
and
arpl
outsb
add
into
sbb
or
and
outsb
mov
pop
push
jmp
mov
add
aas
mov
mov
jl
or
subb
push
pop
mov
mov
cmp
in
jecxz
arpl
jecxz
sbb
pop
cmp
punpcklbw
dec
lcall
xor
push
daa
or
les
lahf
repnz
test
xchg
cmp
pop
cmp
repz
mov
cwtl
jle
or
nop
jbe
aam
jae
jb
imull
and
mov
mov
imul
jae
pop
cmc
jo
mov
dec
sub
sahf
cmp
sarl
push
int
pop
add
dec
fwait
pop
cmpsl
cltd
inc
jb
stc
mov
dec
push
add
and
push
xlat
xchg
rol
xchg
mov
imulb
dec
mov
ss
ljmp
ror
cmp
or
in
pop
pop
cmp
pop
cltd
repz
repnz
dec
pusha
in
sbb
lret
lcall
mov
je
jmp
xor
xor
out
jb
fcomps
mov
sahf
mov
mov
movsl
lahf
shr
pop
movsl
les
fcomps
dec
inc
enter
in
xor
sbbl
inc
pop
lods
and
roll
inc
sub
pusha
push
aad
sbb
popa
mov
lods
sub
adc
ds
clc
nop
mov
inc
mov
filds
shrl
add
std
mov
dec
cmc
aam
mov
outsl
mov
mov
dec
mov
daa
inc
test
pop
inc
push
adc
loop
sbb
nop
add
dec
minps
pop
clc
lock
nop
push
xchg
or
and
sbb
insb
xchg
and
out
xchg
sbb
mov
rcrb
adcb
pop
dec
cmp
inc
insl
cld
je
add
push
adc
jne
mov
fsubl
and
pop
cmp
adc
testl
push
add
ja
mov
into
xchg
mov
stc
lcall
pop
andb
mov
imul
test
pushf
and
out
add
ljmp
and
jb
out
sarl
dec
lahf
mov
mov
pop
pop
fucomi
jmp
das
and
and
ss
mov
xlat
dec
inc
adc
adc
gs
shlb
pop
mov
pop
push
mov
or
add
into
pop
ljmp
in
mov
sti
jg
mov
mov
xchg
das
push
icebp
mov
lahf
out
adc
sarl
lahf
in
pop
mov
jns
scas
and
and
test
test
cltd
and
inc
inc
xor
mov
daa
test
test
xchg
xchg
stc
cmc
cmp
stos
push
dec
push
push
mov
adc
out
push
inc
inc
int3
mov
inc
add
and
push
adc
mov
add
jno
cwtl
xor
pop
mov
inc
or
stos
jae
ret
sub
dec
push
add
xor
rep
or
sbb
and
sbb
cld
sbbl
xchg
add
aaa
dec
js
pop
outsl
cld
xchg
add
cmpsl
jmp
mov
inc
cvtdq2ps
leave
shl
mov
lds
rcrb
les
ja
add
outsl
pop
mov
push
jmp
sbb
movsl
pop
je
add
dec
pop
pop
push
dec
inc
cmp
rclb
ljmp
xchg
mov
sbb
fs
push
jo
inc
into
xlat
jnp
out
xchg
hlt
sarl
sub
mov
add
inc
and
lahf
sbb
sbb
jg
test
add
mov
or
lcall
fwait
add
pushf
test
arpl
pop
ss
cmp
xchg
adc
jle
ret
aam
mov
mov
mov
outsb
addr16
jo
jg
lcall
in
cmp
inc
or
or
sbb
pop
outsl
aas
sahf
jo
icebp
repnz
data16
fs
mov
jne
ja
or
xchg
jge
insb
xchg
cli
inc
test
cltd
adc
popa
iret
and
mov
pop
jmp
lret
dec
mov
jae
data16
adc
repz
adcl
xchg
xchg
and
and
inc
jne
shll
divl
lock
inc
mov
pop
mov
arpl
lock
pushf
jl
sbb
int
pop
and
add
sbb
adc
jnp
and
mov
inc
cmp
data16
imul
cli
call
sbb
leave
std
or
or
or
in
jno
in
or
call
mov
jge
inc
push
dec
cld
imul
aad
sbb
push
jp
ret
adc
scas
push
pop
test
or
inc
add
mov
int3
jnp
cltd
and
or
aad
push
cwtl
ljmp
add
int3
ds
nop
push
xchg
ret
dec
cmp
adc
cmp
scas
negl
push
pop
mov
test
cli
outsb
cltd
leave
jo
jp
jbe
jp
subl
and
and
sahf
in
inc
cli
notl
xlat
inc
xchg
loopne
mov
mov
jb
test
mov
xchg
outsl
jns
mov
mov
xor
adc
scas
jmp
dec
cltd
or
push
test
clc
popf
popa
rorb
push
add
shr
jae
loopne
jg
add
and
es
cmpsl
stos
test
and
jecxz
sahf
frstor
or
jb
mov
insl
out
inc
jne
cltd
add
scas
sbb
pop
movsl
cmpsb
or
out
shrb
inc
adc
rcl
cmp
out
sbb
shr
mov
repz
fildl
test
mov
bound
pop
xor
xchg
push
inc
inc
scas
dec
mov
lret
xchg
insb
sar
std
daa
rcrb
mov
cmp
leave
imul
arpl
and
rcrb
icebp
jne
adc
mov
std
aaa
jb
imul
bound
lods
hlt
outsl
push
dec
imul
repnz
pop
xor
jge
mov
xor
mov
sahf
aad
jae
push
push
mov
mov
cwtl
nop
jle
inc
sti
pushfw
dec
testl
ljmp
inc
insb
mov
loopne
mov
mov
cmp
pop
leave
cmpsb
negb
lea
gs
orb
icebp
inc
dec
add
cwtl
aas
dec
pop
mov
addr16
mov
out
ret
lds
pop
mov
inc
pop
and
gs
push
lahf
add
popf
nop
pop
imul
jmp
icebp
aaa
xor
sti
in
insl
jge
pop
inc
xchg
inc
mov
cltd
jns
cwtl
mov
cmpsl
dec
jl
add
xchg
xchg
or
mov
add
out
inc
push
ffreep
xor
xchg
push
and
cmp
push
xchg
xor
data16
icebp
jl
add
inc
mov
jbe
jmp
and
add
in
push
jmp
push
jle
mov
add
movsl
jns
mov
sbb
inc
cmp
and
jo
inc
inc
idivl
dec
mov
repnz
dec
mov
lods
or
jno
scas
lahf
sarb
or
jns
std
push
cmp
sti
shl
sub
addr16
mov
sbb
fimuls
pushf
and
mov
es
cltd
leave
repz
call
fisubrs
loope
push
jmp
adc
jmp
js
fbstp
sbb
or
xor
pop
inc
adc
jp
mov
aam
mov
jl
mov
jp
inc
lret
xchg
xor
inc
or
enter
pop
pop
jecxz
mov
negl
push
lock
aas
xchg
and
ret
jns
cmp
jmpw
mov
orb
adc
mov
hlt
push
add
repz
jo
sbb
in
mov
jg
sub
sbb
or
mov
and
shl
xchg
outsb
xchg
and
add
xchg
in
sub
mov
sbb
nop
fwait
adcl
aam
fcmovbe
add
hlt
lret
imul
dec
clc
cmpb
and
mov
push
mov
jmp
loopne
fnstcw
xor
mov
mov
jb
mov
icebp
aad
jle
jae
sub
mov
dec
ljmp
inc
sub
inc
dec
jge
pusha
out
leave
psubb
test
xchg
gs
pop
pop
mov
mov
dec
jns
pop
fsubl
test
dec
dec
sub
adc
sbb
hlt
xchg
nop
stos
pop
dec
push
ljmp
add
mov
shlb
dec
test
jno
mov
push
and
adc
les
pop
mov
shll
mov
pusha
loope
shrl
pop
out
pop
dec
dec
inc
rorl
jns
addr16
out
sub
aam
ljmp
push
leave
mov
xchg
mov
add
adc
sub
xor
sbb
jbe
cltd
rorb
xor
aas
xchg
xlat
push
je
cld
jae
negl
pop
mov
pusha
test
mov
and
mov
insb
inc
insb
push
or
pushf
shl
pop
jge
cli
jge
mov
cmp
push
sbb
stos
jnp
pop
pop
mov
es
stos
pop
add
adc
mov
cmpl
clc
ret
cmp
pop
cmp
add
and
mov
in
stos
add
sbb
loop
aam
rcll
push
cs
cmc
add
std
and
out
daa
movsl
movsl
test
inc
sbb
xchg
jbe
sarb
out
cli
das
push
inc
jbe
xchg
cmp
aam
das
push
mov
fs
pushf
cmpsb
xor
xchg
jne
pop
jecxz
push
pop
pop
cli
mov
push
roll
hlt
sub
jmp
pop
ficompl
push
inc
mov
sbb
in
and
inc
hlt
and
sbbb
xor
pop
stos
push
pop
adc
lods
mov
inc
test
pop
outsb
ret
push
ds
xor
nop
aad
stos
std
or
mov
sti
fs
mov
push
aad
outsb
jb
cli
cli
push
sbb
xchg
loopne
or
lahf
sub
dec
rorl
repz
lret
adc
or
je
push
push
lods
push
addr16
sarb
notb
mov
fistps
push
daa
insb
xor
lret
fadds
data16
push
fwait
gs
mov
cs
or
pop
sub
cltd
test
rcrb
xchg
jno
xchg
adc
adc
push
add
shlb
adc
loop
jle
cltd
adcb
push
dec
sub
std
push
fidivrs
insb
push
icebp
ja
ret
and
sub
or
shl
cld
subl
enter
clc
out
xchg
addr16
incb
pop
sbb
pop
in
sbb
dec
insl
mul
push
push
sub
sti
sub
xor
push
orb
mov
jb
mov
rcrl
test
jns
xor
fsubr
ds
sbb
int
adc
lods
mov
rclb
dec
cmpsl
arpl
pop
imul
or
sbb
pop
jne
test
lods
sbb
or
push
dec
outsb
std
test
pop
sbb
mov
dec
std
add
inc
aad
daa
ja
dec
aam
ss
ret
mov
test
xchg
adc
mov
xchg
mov
pop
cwtl
repz
or
leave
sbb
sub
or
fs
jecxz
inc
enter
mov
jns
inc
dec
mov
jb
es
sub
add
movsb
fucomi
jmp
scas
scas
inc
xor
bound
cmp
je
xor
mov
cwtl
cltd
nop
add
push
sub
pop
popa
or
test
aas
push
push
stos
cmp
imul
ret
mov
mov
cmp
inc
imul
cltd
push
scas
or
sbb
loopne
out
mov
adc
pop
clc
faddp
loopne
jge
sub
in
cmp
out
push
sbb
in
xor
popf
insl
sub
jbe
cld
cltd
pop
jmp
jns
dec
outsl
inc
lretw
xchg
jno
je
or
cmpsb
push
xor
lea
xchg
cld
cmp
lret
std
and
mov
jo
jb
fldl
in
out
jg
sbb
push
in
stos
lods
pop
add
push
fsubrs
cwtl
int3
aam
cli
mov
lcall
shrb
in
adc
jns
pop
or
jmp
gs
ret
test
cltd
lahf
inc
xchg
rcrb
xchg
nop
cs
daa
sbb
mov
adc
xor
sub
pop
pop
cmc
int
int3
bound
loop
movsl
pop
sub
jnp
cmpl
addl
pushf
xlat
int3
fstpt
sub
cmp
mov
out
not
inc
push
xchg
sbb
pop
xlat
faddl
dec
and
fwait
sahf
test
test
out
mov
add
lods
outsb
mov
loopne
in
loopne
pop
push
cs
mov
in
mov
xchg
mov
les
insb
pop
mov
cmp
call
and
push
or
xor
iret
aas
flds
xlat
inc
outsl
xor
insl
pusha
decl
jns
mov
les
xor
lods
jae
xchg
aas
jl
fidivrs
imul
xor
imul
int3
test
mov
into
sub
fnstcw
dec
jbe
cld
jecxz
lods
jmp
adc
mov
mov
push
hlt
decl
cmp
pmaxsw
push
xorl
push
inc
int
or
xor
loopne
sub
aaa
fs
lds
push
pop
repz
or
ss
inc
in
cmp
ljmp
jbe
and
cmp
sbb
pusha
jp
cmp
mov
call
mov
int
sbb
push
push
or
add
pop
pushf
sbb
dec
call
jb
sbb
imul
scas
fisubrl
test
xor
adc
jg
out
jno
jo
jbe
mov
inc
dec
sti
jae
pop
out
fstl
ret
lea
daa
arpl
inc
pop
sbb
sub
fs
lcall
sub
mov
jge
outsb
pop
and
adc
dec
or
mov
cmc
mov
pop
cltd
jae
lea
pop
call
addr16
jbe
iret
imul
inc
mov
pop
arpl
mov
dec
test
inc
xor
mov
jge
adc
add
pop
adc
jecxz
and
mov
mov
lret
and
adc
xchg
outsb
shrb
js
hlt
cltd
fwait
pop
mov
aas
mov
adc
mov
sub
and
pop
test
add
jnp
lods
mov
aam
out
jl
or
sbb
mov
mov
pop
sbb
add
test
js
iret
sbb
cltd
jecxz
mov
mov
xchg
mov
loope
adc
sti
je
sahf
jge,pt
popa
divb
xchg
push
push
ljmp
push
or
data16
scas
jae
aaa
cwtl
xor
inc
jb
mov
dec
push
pop
cmp
call
jae
iret
js
int3
mov
xchg
xor
mov
loop
fcompl
int
sahf
loope
mov
xchg
cmpsl
andb
lret
insb
push
jno
xchg
xor
cmp
cli
addb
xor
mov
inc
out
sti
mov
jge
ss
loope
rcl
daa
adc
fldl
and
inc
shr
add
clc
push
push
cli
push
fidivrs
shr
mov
in
fildll
cmp
mov
imul
mov
sahf
jge
add
xor
xchg
jg,pn
mov
pusha
pusha
imull
into
out
jecxz,pt
popf
rcl
into
fmull
js
bound
sub
inc
cwtl
sub
push
mov
sbbl
push
sub
aaa
sub
jecxz
jecxz
imulb
xchg
aas
fwait
and
out
mov
inc
push
repz
jne
jne
jo
sar
ja
inc
ljmp
mov
sar
aaa
and
lods
and
movsb
idiv
cs
push
jp
ljmp
prefetch
int3
aam
and
lahf
mov
lcall
add
jecxz
xchg
ljmp
aas
sbb
cmp
std
inc
fwait
xorb
add
sub
mov
xor
sub
or
mov
shufps
repnz
sbb
jecxz
mov
inc
and
lcall
lods
and
adc
pop
cmpsl
das
mov
xor
pusha
mov
out
fidivrl
jmp
cmp
lret
push
out
fldlg2
inc
fsubrl
ds
xchg
pushf
xchg
sub
push
add
mov
sarl
mov
fs
aaa
mov
notl
dec
mov
mov
cmp
mov
mov
fwait
jns
sti
cltd
call
loope
cmp
cwtl
xor
daa
adc
insb
and
cmpsl
inc
mov
jecxz
and
push
push
rolb
push
rcll
enter
xchg
dec
jmp
dec
stc
jne
insl
xor
push
add
stos
mov
jg
pop
jb
sbb
xchg
mov
inc
and
or
sbb
pop
aad
pop
pop
push
cmpb
dec
repz
xchg
dec
rol
movsw
or
icebp
outsb
imul
mov
loop
cmp
push
jmp
jnp
inc
bound
aad
mov
adc
imul
cs
push
sbb
int3
dec
sbb
xor
test
sub
cli
mov
rcrb
std
lahf
jmp
stos
sti
lahf
xchg
fs
out
sti
dec
aas
into
cltd
mov
mov
cmc
int3
std
sti
lcall
jl
cmp
test
test
addl
dec
in
pop
adc
adc
jge
lock
push
fistpl
pop
inc
lret
in
lods
push
stos
ret
push
mov
aad
ljmp
imul
jnp
cmpsl
push
subl
cmc
cmovp
std
bnd
daa
sub
xchg
fs
jmp
add
cmp
bound
xchg
aaa
dec
mov
pop
dec
test
cmp
adc
sub
clc
mov
mov
cmp
mov
or
cmp
inc
vdivpd
jg
jbe
in
lods
aad
add
or
out
mov
adc
cmp
mov
stos
loope
or
xchg
mov
xor
pushf
dec
scas
push
test
mov
inc
aas
adcl
mov
loope
and
je
sbb
pushl
addb
inc
add
out
fstp
mov
popf
dec
push
sub
fs
dec
cmp
mov
je
or
jo
loope
mov
xchg
iret
mov
popa
std
movsl
dec
shlb
scas
daa
test
pop
ss
jecxz
popf
mov
sahf
pop
jbe
mov
dec
bound
mov
adc
inc
and
popf
clc
popl
mov
jne
and
insl
sub
cmp
mov
xchg
imul
push
call
mov
xlat
mov
pop
mov
adc
jnp
insb
xor
aam
adc
pop
mov
mov
ficoml
mov
lret
bound
push
enter
mov
rorl
push
add
push
ret
js
push
pop
cmp
or
cmp
stos
lcall
push
popf
jp
inc
repnz
mov
cltd
xchg
sbb
shll
and
outsl
test
add
rcr
in
add
push
mov
pop
int
adc
add
inc
aas
inc
daa
or
cmp
outsb
sbb
leave
mov
aam
sub
cwtl
scas
mov
jne
testb
pop
inc
rcll
shll
dec
and
sub
inc
std
xchg
adc
lds
jg,pn
call
in
or
and
rcrl
jns
icebp
rorb
jecxz
iret
inc
add
mov
mov
xor
pop
mov
and
movsb
cmp
pop
xor
pop
add
push
es
mov
test
push
inc
test
mov
push
aad
sub
mov
inc
cmp
push
xor
inc
jmp
repz
addr16
fmul
lahf
pop
sbb
test
fcmovb
out
sti
aas
test
jecxz
negb
cltd
sub
jnp
mov
and
ds
push
mov
jp
in
cli
cmp
jns
cmp
or
fdivrl
ja
dec
cmp
sbb
sub
dec
xchg
stc
in
mov
aam
loopne
pop
mov
cltd
sbb
sahf
push
push
stos
mov
aam
cmpsl
cmc
cmp
shlb
and
dec
jg
jns
mov
je
and
cmp
fsubr
into
mov
pusha
jl
sbb
and
jmp
fisttpl
fisubs
ss
addr16
pop
xor
add
pop
test
pop
pop
add
and
test
jp
ljmp
sub
mul
jne
lahf
fcompl
lock
fucomi
inc
jg
bound
pushf
fxch
jbe
xor
lds
dec
jg
rorl
mov
cmp
bound
inc
mov
sbb
repz
add
enter
mov
pop
test
push
shlb
int
pop
movsl
or
mov
imul
ret
push
aaa
ffreep
mov
movsb
cmp
lods
aas
xchg
mov
push
je
lock
jp
orl
push
fs
popf
sbb
or
sbb
jg
movsl
jecxz
push
pop
inc
lock
cmp
call
mov
xor
dec
adc
pop
aas
mov
or
mov
loopne
jp
mov
add
mov
inc
push
jno
rorl
fildll
rclb
iret
and
arpl
inc
js
mov
outsb
mov
push
xchg
xor
lret
mov
rcr
jecxz
dec
adc
lret
out
adc
pushf
xchg
jl
testl
jp
and
adc
mov
ljmp
xlat
jbe
mov
and
inc
mov
shlb
push
clc
or
jge
inc
leave
mov
test
sub
mov
hlt
adc
pop
scas
insl
adc
cmp
rcrb
stos
lea
xchg
mov
push
or
test
clc
mov
icebp
cmc
jno
mov
ljmp
mov
je
pop
mov
lods
cwtl
sar
in
sub
imul
dec
sti
js
imull
int
bound
inc
test
push
mov
mov
jns
dec
push
pushf
imul
push
inc
xor
xchg
test
jbe
cmpsb
imul
popa
les
add
pop
cmp
cmp
imul
jne
inc
insb
mov
ds
sbb
popf
popf
fiadds
jb
push
inc
testl
xor
add
mov
scas
xor
adc
or
testl
repnz
mov
mov
daa
rcrl
mov
inc
or
in
and
pop
int3
pop
sti
out
int3
fldt
jg
cmpsb
lds
xchg
mov
mov
push
out
ja
or
vpmaddwd
mov
add
outsl
jl
pop
and
imul
pop
shll
push
cli
imul
xchg
fisubl
pop
pop
fsubrp
add
or
jle
in
aas
pop
inc
clc
fmulp
inc
icebp
shl
jecxz
fwait
sbb
mov
fisubrs
icebp
std
call
iret
rol
xchg
cmp
jecxz
or
int
xor
xor
imul
xchg
mov
sbb
rcll
adc
jg
repz
aaa
shlb
mov
pop
or
or
cmpsl
jbe
sbb
xor
cltd
mov
iret
sbb
and
addr16
xchg
jae
lret
or
sbb
repnz
push
jns
pop
sti
scas
std
mov
push
loopne
xchg
iret
jns
xor
xchg
cmc
sub
push
add
fisttps
cwtl
dec
and
inc
shlb
iret
xchg
fimull
jae
popa
sub
adc
push
jno
sbbb
insb
push
movsb
cmp
mov
jne
cs
sbb
push
test
push
mov
shrb
jmp
mov
in
xor
mov
inc
pusha
arpl
push
ja
popa
xchg
mov
loop
mov
mov
cmpsb
pop
scas
in
and
inc
sub
into
xchg
mov
adc
shlb
gs
sbb
cltd
mov
add
jae
les
push
ret
xor
test
dec
and
jne
shl
mov
mov
mov
lods
inc
push
cmp
out
sub
rcrl
xor
mov
scas
jnp
in
je
mov
fldt
lods
add
pop
push
jbe
push
loopne
jp
inc
lcall
jg
push
test
pop
push
xor
xchg
out
pop
xchg
fisubrs
loop
cmpsb
sbb
mov
push
cmp
repnz
jo
fstpt
cltd
add
fiaddl
xchg
sub
sarb
jne
in
xor
or
loopne
jne
outsl
mov
adc
pushf
pushf
data16
lods
call
xor
aaa
xchg
in
dec
cltd
out
cmp
dec
int
add
or
mov
adc
xor
pop
push
dec
sti
mov
cmpsb
ficoms
iret
mov
popf
imul
mov
sarl
or
xlat
jno
shl
fwait
xchg
stos
and
jo
adc
xchg
push
push
lret
dec
add
mov
pop
shlb
mov
lret
ss
mov
push
pop
add
xchg
or
std
xchg
out
inc
mov
and
out
imul
repz
xorl
sub
ds
push
je
xchg
push
int
push
xor
sbb
mov
pop
xchg
xor
sbb
adc
fsts
test
mov
mov
adc
imul
sbb
jmp
dec
inc
je
mov
push
sbb
mov
inc
add
add
push
rolb
adc
pop
dec
int
nop
dec
push
mov
ljmp
mov
fbld
je
in
lahf
push
sarl
in
cmc
fisubrs
in
push
jg
fnsave
popa
mov
in
daa
data16
mov
leave
cli
enter
jp
iret
mov
and
push
xorl
repnz
int
je
lock
out
fdiv
push
xchg
xchg
aad
or
ret
inc
outsl
and
adc
dec
sahf
lea
sub
fstpt
addr16
ja
lcall
pop
mov
arpl
mov
pusha
sub
xor
leave
xchg
fdivrl
addl
das
pushf
imul
sar
insb
in
loope
mov
hlt
mov
lahf
mov
in
out
test
mov
mov
popa
notl
loopne
xor
mov
push
imul
cli
lret
cmpsb
pop
in
dec
in
int3
adc
rol
push
gs
and
mov
xor
int3
xchg
shlb
bound
adc
adc
jmp
pop
stos
icebp
out
and
imul
dec
sbb
imul
mov
xchg
popf
inc
iret
rcll
push
and
jmp
sbb
xor
adc
push
push
movsl
stos
or
sbb
xor
inc
mov
pop
adc
das
mov
sub
dec
icebp
in
cmp
push
rclb
cmpsl
mov
repnz
dec
es
out
cmp
add
mov
mov
or
adc
push
cld
adc
inc
bound
mov
scas
icebp
xchg
sbb
xor
jb
xchg
cmpsb
adc
and
dec
mov
jae
ljmp
fwait
scas
adcb
bound
es
gs
test
xchg
push
bnd
jae
inc
or
adc
cli
rcrb
jecxz
add
jecxz
cmc
and
cmp
xor
jle
call
ds
je
sbb
push
popf
push
hlt
loope
mov
inc
push
dec
std
bound
pop
push
icebp
sub
or
imul
mov
or
dec
add
adc
imul
push
xchg
dec
orl
ret
movsb
cmp
xchg
test
andl
std
dec
inc
sub
push
fwait
jge
pop
mulb
jbe
mov
insl
push
insb
in
mov
pop
out
push
add
movsb
popa
and
lcall
pop
loope
repnz
and
sbbb
dec
and
loop
and
add
fdivrl
jne
popa
jne
repz
xor
mov
ss
mov
loopne
sbb
orb
fs
into
pop
pop
js
jns
ret
fdivs
cmp
mov
mov
shlb
xlat
aad
and
fbstp
subl
jo
nop
mov
push
cli
cltd
stc
fists
test
int
push
addb
mov
jmp
pop
xchg
jb
dec
xor
xchg
pop
dec
cmp
call
insl
jp
nop
aas
fs
insb
nop
addb
pusha
mov
xor
mov
cmp
div
mov
push
xchg
aas
test
or
das
sub
and
in
sub
notb
add
mov
daa
dec
mov
inc
ret
test
fsubs
aad
mov
xlat
call
daa
out
jmp
insl
mov
mov
mov
pop
out
insl
push
roll
fcmovne
adc
jle
inc
repnz
xor
add
and
xor
inc
insl
or
mov
fcmovnbe
lea
shlb
pop
or
adc
and
call
in
mov
push
and
hlt
sub
push
fs
jle
mov
fs
or
pusha
scas
inc
add
xor
shrl
dec
and
sbb
imul
sub
dec
aas
lds
pmuludq
xchg
mov
mov
insl
push
data16
js
icebp
push
clc
xchg
sarb
push
push
jg
bnd
jge
dec
push
sbb
jb
enter
int3
imul
scas
xor
or
loope
pop
test
lods
xor
movsb
xchg
pop
jns
sahf
adc
sbb
sbb
lock
int3
daa
repnz
push
sub
and
test
lahf
shrl
mov
xor
mov
sbb
std
sbb
xchg
push
dec
jbe
cmpsb
or
push
nop
scas
pop
aaa
addb
pop
fsubs
aaa
aas
mov
sbb
mov
test
pop
pop
testl
mov
xor
and
lret
adc
into
pop
lods
mov
add
dec
jp
mov
outsl
jns
sti
insl
xor
idivl
or
fldcw
xor
push
push
mov
mov
adc
cmp
ss
lcall
mov
test
movsl
dec
scas
adc
ffree
adc
addb
mov
and
push
add
dec
mov
inc
mov
mov
inc
mov
push
std
ret
push
or
outsb
xor
push
dec
jl
xchg
sub
loopne
cmp
int
insb
mov
dec
inc
test
dec
pop
inc
xchg
mov
pusha
popa
movsb
data16
or
fdivrs
cmp
and
lea
pmulhuw
add
rorl
mov
mov
mov
jg
push
adc
jmp
adc
xor
call
out
shll
inc
ss
movsl
cli
pop
imul
pop
pop
into
test
mov
dec
mov
jp
mov
in
add
jnp
mov
or
push
movsb
mov
out
out
loopne
mov
hlt
xor
mov
add
aaa
jl
fucomip
xchg
pop
mov
fdivr
mov
inc
push
out
jae
inc
mov
cmp
fwait
jge
cli
sti
push
movb
cmp
icebp
or
mov
mov
loop
push
mov
ds
fimuls
xchg
fcmovnbe
scas
and
mov
adc
pop
enter
mov
push
lcall
mov
movb
sbb
out
cmp
mov
xor
das
cmp
faddl
or
cmpl
sarl
shlb
or
inc
dec
mov
popl
aaa
jle
jo
xchg
mov
xchg
leave
push
jl
sub
jno
sbb
sbb
pop
in
data16
xchg
jns
cmpsl
fcompl
or
outsl
and
mov
xorl
xchg
jge
int3
pop
jbe
cwtl
jge
and
jo
push
pop
hlt
call
and
out
das
push
adc
push
adc
imul
mov
int3
stos
adc
sbb
pop
sbbb
ficoml
adc
sbb
rol
sti
cmp
fcmovu
mov
mov
push
xchg
popa
stos
lahf
jns
aaa
and
mov
xchg
xor
xchg
cmpsl
jge
fst
leave
adc
dec
ja
adc
mov
outsl
adcb
jb
xchg
cmpsl
xchg
int
mov
xor
leave
xor
cmp
outsl
shll
dec
cmp
jge
int
jno
dec
or
sub
test
mov
push
pop
mov
cmpsl
mov
jne
xchg
push
xchg
sahf
lods
or
mov
mov
sbb
scas
jecxz
pushf
divl
or
mov
fnsave
in
inc
pop
repnz
fwait
pop
je
mov
lds
setp
xchg
sahf
fildl
pop
sti
fstpt
adc
sub
jb
rolb
lahf
pop
orb
loop
dec
or
lcall
hlt
pop
jecxz
popf
out
movsb
dec
jns
jae
out
pop
push
addl
loope
sbb
pop
and
xchg
sti
fisubl
xor
mov
add
xchg
outsl
add
icebp
ss
xchg
inc
jne
jb
mov
idivb
hlt
sub
pop
loopne
inc
sbb
stos
shll
xor
call
sbbl
push
inc
ret
lahf
jmp
cmp
clc
rorb
test
jne
sub
cli
lcall
stc
xchg
inc
mov
gs
sub
push
dec
sub
push
xor
test
nop
jg
push
xchg
sub
loopne
push
out
pushf
sub
ds
imul
pop
scas
inc
data16
repnz
nop
mov
shlb
lods
mov
stos
xchg
cwtl
fneni(8087
sbb
dec
xor
mov
fsubr
xchg
mulb
rcrl
add
clc
lret
mov
push
out
repz
mov
mov
dec
pop
mov
in
pop
call
out
mov
ficomps
shll
in
mov
add
aad
sbb
roll
push
pop
fnstsw
dec
test
mov
fisubl
pop
rolb
test
loopne
xchg
add
push
push
nop
stos
cmp
pop
push
or
xor
lret
lock
push
iret
arpl
xlat
into
mov
xor
pop
mov
xor
push
jns
repz
mov
hlt
aam
arpl
cmpsb
in
pop
mov
jge
ror
movsb
jl
pop
les
icebp
andl
dec
fbld
jbe
inc
xchg
xchg
jge
test
jnp
shlb
and
mov
xchg
or
out
faddp
push
in
daa
sbb
pop
adc
addr16
and
sbb
cmp
loopne
out
xlat
loope
loop
xorl
sbb
loop
xor
jmp
daa
xchg
lds
adc
pushf
xor
jbe
ja
jmp
iret
sub
add
mov
and
mov
loope
mov
sti
lret
dec
add
imul
das
or
ret
das
xor
pop
xlat
adc
das
pop
pop
dec
jle
sbb
js
fs
and
jae
inc
sub
cmpsb
in
aam
popa
loop
aam
xchg
loop
test
js
push
mov
test
adc
mov
sbb
cmp
xor
sbb
cmp
std
loop
aaa
imul
push
imul
rorb
mov
stos
mov
test
cwtl
addr16
push
add
or
inc
mov
cmpsl
js
or
sub
popa
jl
outsl
cmp
fadds
pushf
push
pop
mov
push
and
mov
arpl
dec
cmp
dec
shl
pop
es
add
fs
iret
pop
fucomip
lea
add
in
les
inc
ja
into
jne
loopne
rcrl
hlt
inc
sub
mov
xor
inc
and
repnz
das
les
mov
jp
push
sub
mov
and
aas
in
fwait
inc
inc
xlat
push
and
mov
shrb
int3
pop
enter
sbb
sbb
jmp
arpl
mov
ss
mov
jne
imul
lds
lds
inc
outsl
adc
mov
movsl
and
jle
stc
push
subl
jg
pop
repnz
adc
jnp
sub
dec
pop
aad
and
xchg
clc
fs
pop
xor
adc
outsb
sub
ror
fisubl
fldcw
pop
movsl
or
cmc
lea
iret
mov
mov
jne
cmpsb
sahf
xchg
fstl
es
mov
in
pop
push
push
sbb
xchg
and
xor
xor
sbb
mov
xchg
and
or
repz
dec
mov
xor
pop
mov
sbbb
sub
xchg
mov
jle
cmp
pusha
aaa
movsl
dec
sti
pop
in
enter
cmp
ret
xor
aaa
arpl
or
lret
popa
sub
sub
sub
daa
mov
scas
push
cmp
addb
bound
xor
and
sub
lods
leave
in
cld
add
jge
push
negb
jp
xchg
je
jnp
sbb
mov
mov
movsb
call
popf
mov
daa
or
pop
ret
lea
push
mov
into
leave
aas
shll
sbb
ficomps
insb
and
and
stc
push
cmp
sub
mov
ss
or
stc
scas
rol
xor
dec
insl
add
inc
mov
jmp
sub
mov
leave
mov
enter
fwait
lods
and
test
mov
dec
push
in
pop
sbb
inc
cmpb
gs
push
es
fldl
loopne
pop
sbb
adc
mov
push
pop
mov
mov
aaa
lahf
and
mov
je
aad
pop
fwait
mov
adc
lock
jge
mov
rcrl
outsb
and
mov
pop
mov
test
push
pop
mov
push
mov
fldcw
cs
pushf
push
cwtl
mov
sub
imul
test
out
cld
sub
decb
xor
add
insb
aas
sti
mov
xor
or
or
enter
xor
mov
adc
adcb
rol
in
out
std
sub
cmp
jne
shrl
pop
jp
cmp
or
ja
sbb
xchg
mov
shll
mov
fstl
mov
lock
pusha
jnp
jge
mov
jne
cmp
lods
pop
test
dec
sub
js
aaa
aad
push
lret
cli
xor
push
ljmp
add
stos
pop
push
xchg
psrlw
mov
fldenv
xlat
shrl
ret
xchg
mov
adc
enter
jmp
dec
mov
or
fimull
xchg
dec
stc
in
jbe
hlt
jne
popa
add
jl
push
sub
xchg
lret
enter
adc
jnp
das
aam
adc
dec
sbb
cmp
mov
jae
scas
fs
rorl
push
pop
fdivrl
mov
xlat
dec
jecxz
test
inc
scas
ds
dec
stos
cld
add
jne
loop
in
sbb
shrb
lret
adc
mov
inc
mov
xor
inc
mov
jg
arpl
out
xlat
cmc
aaa
inc
in
mov
fcmovu
inc
je
dec
and
push
and
int3
mov
in
xor
or
adc
fsubl
jp
cmp
outsl
adc
mov
xchg
xchg
out
cmp
push
addr16
popf
aad
mov
outsl
arpl
loopne
cld
loop
push
xor
mov
sbb
test
or
lds
sbb
mov
pop
or
xor
repz
mov
push
js
jbe
imul
add
je
out
jmp
push
cmp
jp
daa
jae
sbb
aad
mov
aas
add
push
mov
scas
pop
data16
ss
and
jge
into
scas
sti
mov
xchg
add
das
ret
mov
jb
popf
pop
jp
stos
inc
outsb
sahf
sub
hlt
nop
dec
sti
or
pop
cmpsl
xor
scas
int3
add
xchg
movsb
les
lret
mov
dec
orb
pop
loopne
push
jnp
sbb
popf
xor
push
or
jl
cmc
inc
sbb
icebp
inc
ficomps
inc
mov
jge
add
je
and
xor
sbb
mov
cmpsl
mov
scas
outsb
and
push
push
push
push
rcrl
mov
jbe
xor
sbb
jae
jmp
dec
mov
adc
fisubrs
inc
mov
addb
push
pop
sbb
push
pop
dec
sahf
iret
cmpb
js
cmpsb
pop
push
jno
xchg
popa
xchg
push
fimuls
and
nop
dec
js
or
cmpsb
pop
mov
jecxz
loopne
xchg
mul
pop
pop
je
push
test
xor
dec
call
add
testl
loope
mov
add
je
pop
jb
xchg
movsb
xor
mov
add
int
or
pop
mov
dec
push
ss
sbb
movsl
xchg
xor
inc
cmpsl
mov
cld
lret
subl
fildll
daa
sub
push
mov
aas
mov
int3
movsb
pop
incb
aaa
popl
jg
addr16
pop
mov
jp
sahf
xor
inc
dec
or
mov
push
mov
add
data16
or
stos
xchg
negl
lods
fwait
adc
mov
rorb
jbe
nop
pop
xchg
mov
sbb
inc
jnp
cmp
pop
sub
aam
orl
fists
xchg
das
dec
or
inc
inc
fsubrs
shrl
push
sub
hlt
push
lods
cmp
jnp
add
movsb
popf
insl
xchg
lea
dec
xchg
mov
or
add
push
add
movsl
enter
ffreep
das
in
adc
xchg
aad
cmpsl
push
adc
mov
and
push
mov
adc
std
pop
push
sti
push
xor
mov
xchg
nop
test
dec
gs
rclb
out
inc
pop
xchg
sbb
xor
je
mov
push
fstl
scas
mov
and
les
call
stos
daa
lahf
cs
lret
dec
loope
push
out
clc
adc
rol
dec
rclb
mov
sub
leave
sbb
stos
adc
sub
arpl
fwait
and
mov
pop
inc
mov
test
mov
mov
jmp
cmp
lahf
mov
hlt
in
sti
jno
adc
pusha
dec
mov
in
ficoms
xchg
mov
pop
cltd
sub
dec
cmc
add
scas
mov
hlt
ret
sti
fstpt
xchg
daa
sub
out
inc
mov
xor
clc
fs
xchg
mov
push
push
xchg
in
js
push
loope
in
pusha
pop
movl
add
add
push
sub
push
shrl
xchg
inc
add
push
mov
lea
jbe
add
repnz
mov
push
pushf
or
insb
out
fwait
jae
xor
mov
add
mov
js
bound
fwait
add
js
push
fs
clc
shr
shrl
dec
ds
lods
xchg
cmp
fcomp
sbb
pop
inc
xor
scas
xchg
je
mov
push
jp
inc
mov
fdivs
push
jae
cmp
cmp
push
dec
repz
jno
incl
popf
inc
hlt
sti
push
pop
push
jmp
int
orb
dec
fwait
fs
mov
xor
lahf
dec
xchg
mov
rolb
push
jo
xor
or
adc
cmp
pop
mov
ficomps
add
mov
mov
lock
pop
es
sarb
fimuls
dec
pop
xor
fcompl
and
shll
into
push
leave
out
cmc
stos
jns
add
or
jge
stos
cmp
out
jns
pop
sbb
mov
mov
jecxz
out
movsl
pushf
das
push
nop
jae
jmp
shrb
mov
pusha
pop
outsl
sub
sub
outsb
jo
les
jge
test
pushf
in
cmpsl
dec
inc
xor
test
push
jo
mov
sub
lret
mov
lds
jg
cmpsb
aaa
daa
jl
or
jne
lods
fistpll
scas
into
dec
lret
pusha
aad
push
cld
or
mov
rorl
jo
andl
fdivrl
and
test
pop
xchg
mov
icebp
push
int
jne
icebp
movsb
aam
repnz
cmp
out
and
jns
and
pop
cmp
dec
sbb
mov
xchg
mov
cmpsl
mov
mov
mov
iret
int3
jns
enter
pushf
out
cld
adc
xor
scas
ljmp
sub
imul
jo
cmp
sub
pop
aaa
mov
mov
push
sarb
aaa
sub
sub
in
adc
fisubl
fbld
push
mov
dec
iret
scas
cmp
or
cmp
repz
in
roll
inc
inc
iret
xchg
mov
in
in
movsb
mov
push
xor
cli
insl
cld
outsb
jle
cmpsl
mov
ja
clc
pop
cmp
mov
in
js
imul
add
jne
ss
mov
dec
dec
push
hlt
das
and
inc
mov
stos
dec
mov
addr16
cmpsl
dec
ds
ss
mov
out
outsl
out
stos
mov
hlt
sub
jecxz
sbbl
in
gs
lcall
sbb
stos
lods
xor
das
push
jl
dec
jle
cmp
or
and
mov
cmp
sub
sub
aas
push
imul
add
sbb
enter
in
sbb
orl
dec
cmp
sti
push
loope
repz
into
ja
cmp
sub
pop
push
shl
inc
push
mov
cmp
add
int
gs
sub
xchg
pop
imul
and
std
popa
in
push
lock
gs
inc
jbe
xor
aam
mov
jl
cmp
cmc
loop
cmp
xchg
inc
lret
jns
popf
mov
dec
add
rol
out
sahf
enter
imul
loope
push
inc
insl
cmp
clc
push
cmpsb
xchg
cmp
dec
loop
mov
fs
mov
mov
in
adc
cmpsl
fidivrs
add
xor
rclb
sbb
rcll
nop
js
xchg
mov
mov
aas
test
js
test
popa
test
iret
mov
iret
and
pop
sub
inc
or
add
jne
dec
mov
imul
push
loopne
movl
dec
push
inc
int
jns
imul
mov
pop
pop
test
adc
pop
pop
or
loopne
fcoms
sar
mov
mov
out
cmp
stos
insb
sub
cmp
or
int3
loopne
pop
in
xor
pushf
and
movsl
test
mov
outsl
and
call
int3
jne
std
push
movsl
inc
adc
lcall
sahf
dec
lods
int
pop
outsl
test
xlat
add
adc
mov
push
push
xor
and
push
insb
pop
sbb
dec
fistpll
mov
adc
sub
cmpsl
aas
add
test
stc
in
mov
xchg
inc
inc
adc
pop
mov
sub
xor
xchg
hlt
pop
hlt
pop
sub
mov
int
xor
xor
mull
cwtl
lea
fistpl
fisubrl
arpl
jae
adc
cld
inc
enter
sub
jmp
movsb
xor
gs
mov
das
jnp
push
xor
cmp
int3
jle
cltd
fcmovne
fwait
push
fists
dec
scas
stc
sbb
mov
inc
add
dec
mov
jnp
fcmovnu
mov
fldcw
ret
sub
movsl
mov
rcrb
or
out
enter
mov
jl
jae
sub
push
sti
or
fsub
inc
mov
mov
fstpl
lock
mov
fidivl
cld
lahf
mov
loop
out
stc
mov
sub
adc
popa
pop
add
pop
ljmp
dec
mov
jp
pushf
mov
xchg
inc
pop
dec
mov
dec
add
fisttpll
cmp
lea
std
xor
insb
xchg
leave
and
gs
rcrl
mov
or
and
cmp
mov
mov
adc
mov
mov
aad
hlt
mov
insb
sbb
repnz
inc
loope
mov
sub
jecxz
push
sub
scas
cmpsl
ljmp
mov
jbe
mov
cmc
test
xchg
inc
int3
push
aaa
add
bound
shll
negl
cmp
xchg
stos
mov
adc
test
int3
int
pop
movsl
cld
jae
int3
inc
mov
imul
hlt
push
mov
mov
sarb
fnstsw
shrb
mov
sub
gs
cmc
adc
inc
or
xchg
xchg
call
pop
add
ds
push
lods
cld
pop
jno
nop
xchg
and
push
adc
loopne
add
xor
and
imull
test
push
divl
aas
pop
push
cmp
orl
jmp
and
not
adc
dec
test
fs
mov
xchg
fstpl
int3
ret
rcrl
les
jns
into
xor
aam
test
mov
cmp
jns
lret
lret
sub
sub
inc
mov
xchg
aas
sub
inc
js
or
mov
pop
pushf
into
mov
lock
push
fidivrs
cmpsb
xchg
roll
adc
repnz
fwait
jno
add
ja
shll
out
lds
dec
or
test
adcl
call
adcl
mov
sbb
jmp
jbe
jmp
add
mov
xor
cmp
adc
in
xor
mov
push
cmp
pop
push
push
mov
sub
mov
mov
lret
xor
test
xor
cmp
and
mov
cmp
xchg
mov
in
inc
lahf
adc
adc
mov
enter
pushf
popa
addr16
add
adc
pop
xlat
test
fcomps
jno
push
push
xchg
jb
aas
fimull
gs
add
dec
mov
in
and
inc
push
push
pop
cwtl
mov
decl
lahf
aad
push
mov
mov
cli
js
pop
imul
pusha
fisttpl
sub
xor
shl
jp
xor
dec
xchg
mov
mov
lods
sub
add
inc
jle
cli
imul
mov
lods
xor
out
dec
mov
pop
xchg
fstpl
dec
add
mov
andl
pop
adc
ds
push
cmc
xchg
test
js
mov
cs
jle
cmpsb
pop
int3
mov
outsb
add
insl
test
loopne
call
jp
xor
push
jecxz
sbb
sbb
int
and
xor
sub
lret
scas
jmp
jmp
cs
pop
out
push
loope
sub
arpl
mov
orb
test
push
jl
inc
mov
ja
daa
stc
inc
dec
test
push
stos
fldl
or
push
and
push
cmpsl
mov
jg
inc
ljmp
in
into
inc
outsb
or
fadds
mov
mov
jo
and
and
xor
and
es
test
mov
negl
cmp
cli
clc
movsb
rcll
and
ffreep
out
mov
aaa
leave
in
pop
test
ret
sbb
pop
xchg
pop
outsl
mov
insb
stos
repnz
popa
mov
inc
adc
or
jns
sbb
mov
ja
mov
adc
je
xor
inc
and
iret
sub
pop
inc
icebp
pop
icebp
ret
ljmp
dec
lock
sbb
sub
jle
in
dec
test
insl
jp
and
mov
out
ret
test
inc
push
lods
xchg
xor
js
loope
test
shll
loope
adc
out
dec
lds
cmp
adc
add
movsb
ret
iret
sahf
pop
xor
out
jle
stos
sbb
fldl
std
test
adc
mov
push
testl
mov
jmp
les
iret
mov
outsb
xchg
xchg
lds
xchg
movsl
xchg
in
les
sbb
in
aad
arpl
into
decl
repz
sbb
pop
jmp
mov
jo
dec
rorl
cli
pop
mov
das
push
or
cmpsl
call
mov
jbe
in
push
push
out
fimull
xchg
push
add
push
sbb
js
insb
jo
out
mov
sbb
add
mov
out
cwtl
in
test
jp
dec
sbb
adc
scas
mov
sub
ljmp
mov
adc
jae
fdiv
iret
jg
or
ss
sub
and
enter
sub
data16
jb
in
mov
repnz
jge
shr
outsb
cmp
mov
rorb
sub
test
mov
ss
dec
xor
sub
sbb
shll
mov
lea
inc
fwait
xchg
xor
xchg
mov
pushf
into
pop
or
mov
cmovo
xor
mov
outsl
push
pop
jge
cmp
stos
rorl
ja
jmp
das
sti
dec
icebp
es
aas
pushf
jle
xchg
nop
cmc
in
adc
mov
in
inc
sub
mov
mov
mov
out
leave
dec
hlt
sti
pop
in
jge
out
push
cmp
or
sar
aam
or
fisttpll
imul
fdivrl
andb
jmp
and
into
js
cli
jae
sbb
out
cmpb
fs
cmp
fucomi
iret
pop
faddl
or
sbb
jo
xor
jns
in
lret
mov
frstor
xchg
xchg
mov
mov
jle
add
jle
push
adc
cmp
cmp
outsl
push
jmp
sub
add
and
arpl
lret
lret
push
insl
adc
cmp
push
mov
and
pop
push
es
scas
ja
outsb
cld
lock
enter
icebp
popa
jge
mov
xlat
xacquire
fcomp
call
xchg
dec
lock
pusha
fwait
mov
ja
call
pop
inc
popl
mov
das
hlt
mov
imul
add
test
es
sbb
push
ret
out
ljmp
push
lret
push
xchg
mov
xor
mov
hlt
cmp
mov
enter
inc
dec
stos
xor
stc
and
fucom
std
add
mov
dec
cld
jno
mov
mov
pop
sub
lret
loop
or
sbb
int
add
mov
fsts
in
push
and
mov
pop
xchg
insb
add
pop
mov
inc
lds
in
stc
dec
dec
mov
add
popa
jg
es
mov
xor
pop
mov
cltd
ds
insb
mov
nop
xchg
and
lea
je
pop
mov
dec
or
daa
xchg
cmp
xchg
ss
das
stos
sahf
xchg
fwait
loop
movsl
mov
daa
pop
inc
inc
cmp
push
or
in
popa
dec
stos
pop
aas
mov
ffreep
lret
popa
cmpsl
pop
cltd
mov
dec
shrb
cs
dec
mov
inc
adc
movb
je
dec
push
aad
mov
jle,pt
or
test
and
out
mov
push
pop
lods
push
enter
divl
jmp
or
cltd
xor
xorb
mov
xchg
popa
dec
pop
jg
rcrb
add
clc
sub
dec
inc
sahf
or
pop
aaa
nop
clc
test
add
test
adc
jg
shl
adc
pushf
in
dec
idivb
cmpsb
mov
stos
incl
pop
xor
into
sbb
push
and
insl
mov
mov
jno
mov
jno
outsl
xor
xchg
mov
aam
cmc
ret
test
adc
lods
iret
into
cmp
mov
adc
ss
xchg
fmul
lretw
pop
nopl
jnp
fstpt
or
cli
sbb
aam
push
sarb
cmp
in
das
jne
push
sub
dec
movsl
adcb
mov
call
or
xor
mov
sbb
sub
inc
in
insl
or
mov
mov
or
cs
ss
push
inc
test
inc
inc
nop
adc
test
pushf
test
ljmp
cmp
imul
adc
push
mov
enter
xlat
push
push
pop
fbld
xchg
xchg
sub
sbb
sbb
and
jns
jo
mov
mov
lcall
sub
inc
fwait
insb
pop
fwait
loop
dec
sub
jb
int3
testb
hlt
and
adc
sti
pop
out
sub
out
pop
sub
pop
dec
mov
adc
std
bound
jge
leave
ss
cmc
mov
psubd
jmp
out
add
jne
mov
jae
push
mov
mov
rorl
cmp
ficompl
daa
mov
inc
jno
pop
push
neg
push
mov
test
aam
addr16
mov
dec
xchg
leave
sub
push
fcoml
mov
xchg
test
add
insl
cmpsl
rclb
xchg
dec
cli
and
cmp
out
pop
orb
jo
mov
xchg
aaa
roll
fnstcw
and
aad
loope
aam
rol
and
test
jae
ret
cmpsb
mov
lods
subb
into
dec
jb
bound
pop
popw
mov
leave
imul
jp
mov
icebp
aad
xor
xor
stos
adc
dec
jmp
mov
fs
movsl
adc
pop
mov
dec
dec
jbe
jle
nop
sti
sub
out
adc
fisttps
pop
cmp
sahf
in
add
lahf
or
int
dec
sub
jne
push
xorb
pop
lcall
mov
or
dec
out
xlat
mov
add
nop
out
stos
xchg
push
xchg
sbb
xor
mov
adc
mov
sub
fidivrs
int3
jnp
test
int
xlat
out
lods
fiaddl
sbb
fildl
test
dec
out
inc
inc
stos
jo
or
mov
cmpl
mov
pop
jg
loopne
jl
adcl
push
iret
mov
pop
inc
mov
sahf
divb
sub
sbb
add
add
xchg
fmull
sub
insb
sub
ja
scas
lock
mov
and
xor
dec
insb
test
xchg
and
rcrb
insb
insl
push
mov
and
stc
scas
jge
jmp
sti
xor
mov
push
mov
sbb
push
sbb
dec
jo
adc
and
cmp
mov
and
js
adc
dec
push
fistps
je
jle
dec
dec
ds
jb
dec
xor
push
js
mov
scas
pop
jp
lods
pop
shl
iret
imul
pop
jl
mov
in
pop
mov
jae
adc
pop
sub
in
in
push
push
cmp
mov
jb
cmp
js
push
mov
xchg
and
mov
dec
inc
iret
push
js
fidivs
sub
sti
adc
fidivs
ss
cmp
sub
xchg
cmp
clc
lds
xchg
xorb
xchg
mov
ds
imul
sub
xchg
pop
sub
mov
gs
je
jo
cmc
xchg
pop
imul
pop
jo,pt
adc
pop
inc
sbb
pop
fwait
mov
xor
shlb
pop
cltd
scas
dec
in
pop
sbb
call
shll
xchg
fiaddl
or
out
das
and
pop
stos
pusha
mov
insb
mov
shrl
popf
call
fcoml
pop
push
cmp
lods
adc
iret
inc
pop
mov
ljmp
hlt
sbb
adc
lds
adc
mov
loopne
jl
and
inc
mov
jg
ficompl
prefetch
insl
in
lret
rcrl
stos
xor
jle
aaa
sbb
fisubrl
inc
inc
out
cmp
xchg
push
je
js
addr16
fmull
aam
mov
into
cmp
push
cltd
push
stc
pushf
sbb
loop
cmc
into
xor
js
add
pop
bound
outsb
jle
inc
stos
mov
dec
fs
mov
shrb
aaa
cmc
push
or
data16
jp
popw
xchg
jecxz
xchg
or
jnp
mov
jg
xlat
out
jecxz
xchg
mov
cmpsl
sub
cltd
cmpb
icebp
sub
lret
push
jae
pop
xchg
pop
fs
push
xchg
mov
pop
imul
in
or
mov
xchg
cwtl
adc
in
in
xor
xor
shr
and
and
js
jne
jbe
jnp
mov
pop
cs
scas
insl
jns
sub
jle
mov
cs
sub
adc
out
lret
jns
mov
clc
add
test
mov
cmp
adc
mov
jns
sbb
mov
xor
iret
dec
divb
bound
test
ss
popa
loope
xor
dec
mov
nop
fcom
mov
pop
fucomip
pop
out
mov
lea
das
mov
ds
mov
lods
pop
mov
mov
test
jecxz
sbb
imul
xchg
test
xor
xchg
out
or
mov
mov
jmp
push
hlt
ss
xor
xchg
sbb
push
int3
mov
gs
test
fisubl
lret
jle
or
lret
mov
aad
sahf
mov
and
and
jne
in
and
in
and
jmp
sub
mov
sub
insb
dec
or
xchg
jl
cmpsl
in
dec
mov
jp
sub
pop
sub
mov
xor
les
stc
mov
push
arpl
ljmp
int
stos
jl
mov
push
push
push
es
fwait
dec
insb
inc
dec
loopne
hlt
lret
sub
cmp
mull
add
jl
repz
out
and
out
jecxz
xchg
sub
jns
je
adc
cli
lds
iret
add
nop
xchg
xchg
mov
js
pop
or
ja
pop
shlb
and
jp
and
jmp
lret
xchg
push
mov
xchg
dec
pop
aad
mov
outsb
lahf
shl
sti
lret
addr16
fsubr
sahf
dec
inc
pop
sbb
loopne
sub
ljmp
jb
aaa
add
sub
inc
cmc
cwtl
and
push
daa
sub
in
or
aas
adc
in
inc
insl
cmp
xor
push
adc
mov
cld
sub
xor
jl
leave
fsubl
rcll
les
mov
test
lret
sbb
cli
inc
popf
in
cli
inc
dec
cmp
dec
imul
addr16
imul
add
adc
add
or
fsubp
mov
xor
jge
or
loopne
xchg
in
test
lods
pop
xor
aad
dec
sbb
fldt
clc
cmc
inc
in
fiaddl
inc
loop
xchg
je
cld
lds
stos
mov
iret
popa
loope
test
push
test
inc
out
dec
or
jg
xchg
fcmove
aaa
adc
push
call
mov
xlat
mov
inc
mov
push
fcmovnb
push
add
shr
je
mov
sti
add
cmp
adc
cmpsb
ret
adc
jo
in
ja
xor
pop
or
fwait
repz
jns
mov
lret
imul
xor
lods
adc
outsb
enter
loopne
mov
lret
rcl
es
sbb
cmp
adc
test
pop
out
mov
ficoms
push
into
lret
pusha
jns
cmp
sub
inc
clc
cld
push
fdivrl
mov
test
jmp
data16
into
sub
lret
shlb
xor
popa
and
mov
pusha
or
mov
cmp
cld
ficompl
ret
and
pop
jne
mov
dec
call
int
mov
out
push
fisttpll
mov
xchg
psubsb
mov
clc
aaa
dec
push
cmp
lret
adc
insb
xor
xlat
fistps
out
mov
pop
test
hlt
pop
dec
in
ss
mov
ljmp
jnp
add
ss
adc
nop
outsl
adc
jns
rcrb
out
xchg
outsb
fsubs
adc
dec
cmpsb
scas
imul
cmp
pusha
popf
push
sbb
mov
fdivp
in
sbb
sahf
pop
mov
push
fwait
mov
adc
jle
push
inc
and
sub
loop
cmpsb
mov
mov
cwtl
mov
mov
mov
and
shll
xchg
shl
js
pop
out
mov
int3
mov
aad
fsubrl
push
fidivl
xor
rcrb
add
cmp
dec
push
xor
outsb
daa
rclb
jne
mov
stc
lods
jbe
pop
cmp
and
arpl
rcrb
xchg
push
or
cli
repnz
test
push
cmp
add
add
ret
mov
inc
push
xchg
mov
dec
cwtl
cmp
pop
mov
test
scas
push
adc
mov
jo,pt
xchg
lock
bound
mov
adc
xchg
pop
jmp
mov
lea
cmp
inc
imul
ja
push
pop
push
lret
push
addr16
pop
out
rorb
fwait
or
imul
into
jno
movsb
push
ljmp
xor
cmc
lock
jge
and
and
addr16
jecxz
add
mov
fistpl
leave
or
outsl
mov
mov
or
fnstenv
les
cmp
mov
jb
out
cmp
dec
mov
pop
movsl
mov
pop
outsl
test
ficompl
fdivp
xchg
aad
or
push
and
rcrb
fstpt
bound
pusha
jmp
out
in
mov
add
xchg
and
fisubl
cmp
dec
jp
mov
jno
ja
pop
pop
lahf
lret
adc
lods
int3
adcl
cmp
push
mov
or
repnz
sbbl
div
mov
int3
je
imul
jge
add
jmp
fiadds
aaa
int
and
out
xor
xor
adc
cmpsl
hlt
lret
xor
cwtl
dec
lahf
jns
ljmp
sub
sahf
push
xor
push
outsb
jl
or
mov
clc
mov
addr16
cmp
daa
iret
cmp
add
mov
in
push
dec
stos
ret
add
adc
popa
lods
mov
orl
sbb
outsl
inc
repnz
xor
out
or
xor
in
out
cmp
rolb
jle
jne
xchg
lock
xchg
xchg
movsl
xlat
push
add
dec
lods
mov
ret
xchg
jle
mov
mov
xchg
add
push
sar
mov
lahf
mov
ds
adc
or
into
sub
jo
add
mov
rcrb
dec
test
jbe
or
sub
pop
dec
insl
add
fisttps
daa
push
push
fimull
push
cmp
jbe
sub
ljmp
sbb
stos
xchg
mov
stc
adc
xchg
scas
pop
mov
cmpsl
es
int3
in
jb
lret
sub
fnstcw
stos
arpl
rorb
xchg
push
push
adc
insl
xor
ror
jbe
pop
ljmp
imul
inc
push
aad
push
pop
sti
jp
icebp
fwait
adc
or
sub
rorl
out
xchg
mov
imull
data16
testb
pop
imul
enter
pop
int3
popa
aam
out
cwtl
sbb
movsl
repz
add
xchg
arpl
xchg
aad
pop
stos
pop
je
les
pop
es
out
mov
mov
sub
and
in
das
sahf
push
mov
shrl
cwtl
sahf
add
cmp
and
xchg
xor
scas
inc
je
gs
mov
push
dec
aas
pop
leave
push
adc
cmp
stos
cmpsb
push
out
or
sbb
inc
test
scas
addb
jae
out
sbb
test
mov
push
outsl
lock
mov
scas
mov
push
and
inc
push
aam
int
das
mov
fcmovbe
rorl
pop
pop
mov
je
push
jl
out
xchg
lahf
mov
or
dec
loop
leave
nop
out
neg
mov
mov
sbb
lahf
jns
mov
mov
and
mov
pop
mov
into
dec
in
hlt
sbb
inc
mov
mov
mov
or
xchg
inc
aas
movsb
or
and
push
xor
jp
and
or
insb
mov
mov
sub
push
jnp
mov
cmp
dec
jp
or
in
fcomi
add
dec
sub
and
sahf
pop
sub
jb
fstps
cmp
dec
xor
jne
mov
sbb
xor
xchg
mov
pop
sbb
mov
in
jle
adc
jne
ret
fidivs
and
cli
push
jnp
push
or
mov
outsl
ss
push
xchg
jnp
cmpsl
mov
in
test
inc
enter
push
and
repnz
std
push
test
adc
pop
adc
leave
lahf
lods
popa
mov
push
dec
fnsave
iret
jae
sub
incb
fdivrl
push
out
aas
mov
in
and
lret
addb
pop
pop
icebp
in
cmp
lods
cmpsb
adc
pop
inc
mov
jns
sahf
aaa
fsubp
out
push
mov
and
xor
ret
jmp
mov
mov
mov
sub
mov
imul
pop
adc
je
shrb
fwait
xchg
xor
rcrl
cli
dec
sbb
sub
xchg
popf
jb
lods
popa
shr
lock
mov
ss
pop
push
lods
pop
jae
fcoms
xchg
pusha
pop
xchg
push
adc
out
test
jno
inc
mov
lret
lret
fnstsw
mov
pop
movsb
outsb
mov
mov
in
rcrb
test
sarb
mov
lds
cmp
cltd
dec
sbbb
sub
shlb
mov
dec
and
sub
sub
add
ja
lods
cli
add
lret
pushf
add
lock
dec
xchg
push
stos
das
xor
jg
xchg
imul
pop
mov
fisubs
mov
repz
pop
xor
adc
xor
inc
mov
add
or
das
addr16
adc
adc
xor
jo
lea
sahf
lcall
xchg
scas
lods
cmp
jb
cwtl
mov
loopne
inc
bound
repz
adc
in
mov
push
scas
mov
xchg
outsl
daa
aad
shrl
cmp
mov
andl
sbb
inc
repnz
pop
add
loope
jg
loope
lcall
fxch
rcrb
ljmp
add
or
mov
push
stos
sub
mov
inc
into
sbb
les
cli
push
cli
dec
out
cld
loope
dec
mov
jae
sub
out
mov
bound
scas
rcrb
stos
push
lret
ljmp
pop
leave
jae
jmp
add
or
nop
jae
sbb
sbb
mov
sub
jmp
add
dec
sbb
jns
shrl
shll
adc
scas
push
pop
jge
idivl
jmp
xor
ja
imul
xor
sbb
mov
jg
repz
hlt
out
movl
sub
pop
mov
test
clc
xchg
les
adc
and
xchg
into
mov
jg
shl
es
xlat
movsb
mov
pop
push
and
in
cmp
int
jae
push
dec
loope
xor
pop
hlt
fwait
or
xor
in
dec
xchg
mov
mov
xchg
inc
jle
ljmp
stos
mov
inc
jecxz
adc
nop
movsb
mov
pop
lds
mov
mull
xor
push
jle
dec
jo
inc
test
pop
lcall
add
dec
fdivs
xor
out
jmp
lds
jle
and
mov
in
dec
sub
adcb
lea
push
fiaddl
int
mov
xchg
push
pop
and
inc
shlb
iret
inc
add
bound
bound
or
dec
jmp
cmp
xor
mov
inc
inc
je
sti
inc
sahf
mov
in
imul
inc
pop
movl
sti
lods
aam
pop
cs
stos
sub
xor
lahf
inc
push
xor
nop
mov
jge
inc
popa
out
push
lock
mov
push
add
adc
dec
test
jae
cwtl
js
hlt
dec
add
jp
add
adc
pmuludq
movsb
lods
jbe
jp
xchg
sbb
shll
das
rcll
mov
pop
flds
ja
in
add
xor
and
scas
sti
xorb
les
and
mov
rorb
dec
lea
lcall
js
loope
idiv
push
fdivrs
push
jb
mov
cmp
add
pop
xchg
sub
pop
mov
es
fisubrl
push
test
bound
and
mov
loopne
ret
sub
xchg
sarb
or
mov
jb
pop
jmp
cmpsl
idiv
jle
mov
and
aad
scas
fcoms
jecxz
dec
in
lcall
lea
mov
rcl
push
out
fidivs
in
inc
cld
mov
outsb
push
mov
enter
pop
aaa
and
mov
jno
dec
test
add
sbb
lds
bound
jne
scas
popa
cmc
ffree
cltd
inc
pop
fiadds
and
push
shlb
cmp
clc
mov
fadds
hlt
sbb
stos
cs
sbb
inc
rol
mov
sbb
add
mov
inc
sahf
xor
jp
push
ss
mov
in
cmp
push
fistps
dec
inc
xor
xor
scas
out
cwtl
xlat
mov
ret
into
ja
maskmovq
mov
mov
repnz
sbb
test
div
rolb
sbb
mov
or
lods
adc
jns
in
je
mov
lods
nop
xchg
push
sub
and
clc
or
stos
repnz
cmp
fwait
xchg
fs
jmp
shll
iret
push
cmp
mov
mov
jne
mov
dec
fstps
test
outsb
lock
outsb
sahf
pop
cld
out
lcall
adc
inc
cld
pushf
in
lock
jno
out
sbb
mov
sub
dec
add
fcomps
pop
mov
loop
mov
cmc
mov
rorb
push
cmp
popa
xor
cmp
je
dec
mov
idiv
jae
fisubs
outsl
movsb
jecxz
mov
inc
ret
jae
xchg
iret
fsubr
xor
mov
push
int
in
test
add
and
sbb
xor
xchg
xchg
scas
xor
push
sub
xchg
sbb
jle
pop
adc
loope
stc
in
dec
jmp
sub
or
addr16
mov
rolb
lret
jno
repnz
jp
jmp
lods
xchg
pop
dec
adc
outsb
test
ds
std
cli
jae
ljmp
dec
or
add
rorl
xor
xlat
jecxz
add
dec
bts
jns
jmp
sahf
mov
imul
jnp
lcall
pop
std
ss
fisubrl
pop
inc
jno
dec
pop
pop
ffree
pushf
iret
lahf
addr16
imulb
sub
bnd
imul
mov
loop
lds
stc
xor
shlb
cld
jmp
sub
adc
movb
clc
inc
adc
int3
sahf
or
es
or
jg
inc
adc
scas
dec
push
pop
lcall
sbb
subb
ret
sbb
sahf
shl
nop
pop
aaa
add
out
cltd
out
push
aam
les
fsubs
gs
bound
push
add
fsubs
lods
xor
mov
jge
pop
jecxz
jns
loope
push
mov
popf
pop
mov
mov
pop
push
push
dec
out
jno
daa
cmp
jbe
cmp
jecxz
dec
fmull
lahf
jns
add
ss
addr16
sub
enter
mov
mov
push
fnstcw
movsl
mov
pop
popa
in
jl
mov
sti
mov
aaa
xchg
mov
cli
arpl
mov
aam
in
dec
mov
test
dec
fsubrl
lret
test
out
adc
adc
jl
in
jo
les
stc
iret
scas
jecxz,pt
sub
lahf
adc
push
outsb
icebp
dec
jmp
shrl
gs
fcoms
pop
pop
fldenv
mov
pop
das
pop
mov
mov
mov
mov
mov
aad
or
push
xchg
inc
sub
push
test
fadds
sub
rcrl
pop
mov
sbb
xchg
imul
or
push
push
mov
mov
cmp
cmp
sahf
insl
int
inc
inc
in
insb
mov
dec
mov
mov
xchg
seta
sbb
push
into
and
cmp
fnstsw
pop
push
cmp
jecxz
je
push
sbbl
test
add
ja
stos
repz
and
cwtl
sub
xor
cmp
pop
lret
or
das
jae
mov
jo
sbb
or
sub
dec
and
inc
dec
adc
insb
jo
jl
cmpsb
adc
inc
ja
push
jbe
cwtl
cmp
pop
aam
dec
mov
xor
leave
arpl
push
pusha
stc
inc
push
mov
xchg
dec
aam
ret
pop
cmpsb
addr16
cwtl
mov
or
inc
sbb
fcomps
cmp
mov
imul
sub
xor
sbbb
push
add
mov
lock
pop
or
or
clc
fldcw
fs
and
jp
mov
and
insl
mov
adc
add
pop
ds
jecxz
repnz
idivb
dec
outsl
popf
or
ss
or
sbbl
imul
lahf
mov
cmp
fistpll
dec
int3
mov
daa
cltd
lods
cmp
ljmp
push
mov
popa
xlat
cmp
notl
aaa
lods
sub
add
aaa
dec
xchg
cmpsl
leave
in
mov
popa
je
push
sbb
mov
in
daa
push
js
fmull
inc
repnz
xchg
cmp
icebp
imul
push
or
mov
jle
mov
hlt
and
pushf
fimuls
adc
fldcw
in
lock
fcmovne
inc
jne
sub
xchg
mov
dec
sahf
scas
loopne
incb
pop
sbbb
mov
loop
dec
and
jae
clc
mov
gs
aas
pop
pusha
dec
or
xchg
xorl
cmp
inc
dec
xor
outsb
insb
into
stc
int
imul
push
xor
cmp
test
push
adc
or
aaa
stc
or
andl
push
lods
outsl
push
movsl
and
jno
xor
or
jg
scas
call
rcpps
mov
iret
insl
push
sbb
aad
jmp
fwait
in
jg
sahf
lahf
cld
popa
lods
outsb
inc
les
icebp
loope
movd
push
test
dec
mov
mov
inc
adc
push
xor
push
mov
inc
mov
lret
jp
adc
das
lock
rclb
test
les
loop
aaa
mov
mov
ljmp
repz
inc
or
pop
mov
dec
push
es
out
dec
mov
cmp
in
adc
sarb
xchg
cmpsb
test
nop
or
dec
pushf
xchg
mov
inc
mov
adc
dec
mov
jnp
push
sbb
out
ret
ljmp
popf
push
pop
sahf
mov
sub
inc
jmp
outsl
call
xchg
stos
ja
or
lret
xchg
or
xchg
xor
ret
dec
jo
jo
mov
movsl
dec
lret
lock
enter
sbb
test
add
or
imulb
push
jb
xchg
mov
test
mov
mov
test
or
or
test
ret
mov
outsl
add
dec
leave
nop
jns
jmp
xor
xchg
add
cmpsl
movsb
push
mov
jnp
outsb
and
in
dec
push
cli
arpl
xchg
sub
repnz
out
adc
and
xchg
pushl
mov
pop
mov
cmp
shll
inc
or
int
push
ret
adc
repz
jp
out
in
test
fwait
outsb
in
or
lahf
mov
cmpsb
adc
push
fisubrl
adc
out
enter
mov
dec
push
fldt
out
cmp
jp
sub
aad
inc
inc
aas
push
test
in
cmp
inc
pop
scas
mulps
jmp
lret
and
dec
jle
xlat
movsb
ds
mov
es
lds
rcll
shll
sbb
ja
in
aam
in
outsl
mov
add
movsb
dec
cmpb
shll
test
xlat
jno
sub
stos
test
sbb
xor
popl
sbb
addl
cltd
sti
clc
or
rcrl
jecxz
pop
loopne
test
outsl
mov
outsl
cmp
in
jbe
mov
jnp
stos
stc
jne
cmp
xor
mov
mov
mov
aas
rolb
dec
push
repnz
add
movsl
rorb
dec
push
lods
cmp
cmp
adc
fcompl
lea
ret
andb
and
pop
stos
xor
push
push
xchg
jp
movb
add
push
test
add
mov
mov
cwtl
adcl
int3
pop
add
sbb
cli
jbe
scas
mov
outsl
jl
js
pop
popa
jle
aam
xchg
adcl
scas
outsb
push
dec
dec
daa
test
or
xchg
das
xchg
nop
xor
mov
cmp
lret
mov
aas
insb
scas
mov
cld
mov
add
mov
cmp
scas
or
ficoml
sbb
cwtl
ss
scas
fstl
rcl
loopne
xchg
fisttpll
ss
rorb
movsl
divb
gs
out
cli
movsb
inc
fs
dec
int
inc
les
fildll
jl
insb
mov
jl
movsl
nop
pop
mov
outsb
rcrl
lods
hlt
ljmp
dec
int3
fadds
sub
fldcw
addr16
adc
clc
insl
js
gs
xchg
jge
adc
adc
repnz
or
test
push
xor
mov
shrl
into
ss
lods
into
aaa
jl
outsl
inc
sub
dec
out
or
outsl
pop
fsubrs
adc
add
addr16
xlat
and
sti
adc
test
test
inc
pop
sahf
out
adcl
cmc
dec
sbbb
add
lods
mov
imul
push
jl
mov
sbb
sbb
adc
mov
insl
cld
adc
arpl
mov
inc
xchg
mov
inc
lds
outsl
es
push
inc
mov
ret
add
push
int3
out
jbe
iret
jb
test
push
mov
fcoml
roll
pop
adc
push
and
test
inc
jns
or
lea
test
cmp
sbb
inc
dec
mov
inc
mov
mov
sub
mov
imul
sub
gs
nop
or
ss
cmc
aaa
dec
out
inc
dec
hlt
cmpsl
and
das
js
imull
scas
out
jl
leave
std
adc
mov
jg
mov
sbb
xchg
xchg
jne
push
and
add
mul
loope
aad
lahf
ficomps
lea
push
push
push
movsl
cwtl
lods
lret
cmp
fisttps
push
mov
adc
pop
iret
imul
jge
jp
cmp
sbb
push
fcomi
mov
jecxz,pn
and
xchg
or
pop
call
divb
mov
scas
dec
jae
sub
cld
cld
and
dec
in
inc
mov
inc
or
and
cmp
lret
cli
jle
sbb
sub
ret
lcall
loopne
shl
inc
dec
das
mov
or
and
pushf
leave
in
cmp
dec
push
mov
mov
int
or
adc
add
adc
mov
div
scas
out
cmc
add
nop
jno
mov
inc
add
xor
xchg
push
outsl
add
arpl
add
repz
xchg
lea
sub
stos
jl
add
iret
jns
jb
and
jno
xchg
jne
rorb
repnz
adcl
out
add
sar
sub
mov
xchg
insl
sahf
and
jne
sub
jns
mov
mov
mov
out
push
jge
movsl
sub
mov
repnz
pop
jb
pop
sahf
add
aaa
loope
push
leave
add
lods
xchg
aad
movsl
cmc
lahf
test
or
mov
insl
or
aas
test
lock
iret
iret
ljmp
mov
mov
jne
and
sub
into
clts
adc
xchg
adc
pop
sub
jmp
jmp
xlat
in
fstps
cmpsl
inc
jne
mov
fdecstp
pushf
add
and
jb
pusha
je
jns
out
outsl
inc
or
pop
data16
stos
adc
in
mov
cmc
sti
ss
push
idiv
xlat
xor
lods
mov
out
cmp
sti
in
and
cmc
xchg
insb
sbb
jne
out
insl
orl
pop
sub
mov
negl
cmpsb
inc
inc
cmc
push
mov
imul
pop
and
lahf
jg
outsb
jns
mov
lea
into
cmpsl
mov
xor
mov
pop
loop
sti
lcall
fwait
inc
cmp
inc
cltd
scas
arpl
and
inc
es
into
arpl
imul
sub
cmp
xchg
in
add
outsb
jno
repnz
dec
movsb
leave
mov
pop
mov
xor
popa
xchg
mov
or
imul
mov
xor
fs
jo
push
push
ds
sar
adc
xchg
dec
call
fs
ja
sarb
or
pop
push
mov
pop
jne
adc
aam
push
or
roll
sahf
mov
aad
mov
leave
jno
es
or
jge
or
push
fsts
jle
adc
fstpl
cmp
cmp
sbb
subl
pushf
stc
mov
mov
push
push
xchg
nop
push
fcomip
push
ret
divl
inc
das
das
jle
gs
std
and
cltd
les
adc
and
cmpsl
inc
mov
ret
in
and
pop
dec
add
cmp
data16
fcmovnb
mov
test
repz
test
stos
push
adc
push
fstpl
mov
mov
mov
mov
adc
dec
ror
cld
jnp
push
or
ret
sahf
add
sub
lea
and
and
lods
lret
fwait
sub
clc
in
testb
jp
lds
add
jl
xor
es
ja
dec
stc
out
das
xor
sbb
insb
jmp
mov
lods
into
mov
popa
jge
scas
stos
pop
xchg
jmp
mov
js
or
jle
sub
dec
arpl
push
cmpsl
fs
push
cmpsl
fnsave
xchg
ds
orb
dec
mov
xchg
fildl
xchg
pop
push
fdivs
inc
cmpsb
loopne
push
push
and
cwtl
subb
inc
mov
push
jmp
std
jp
dec
mov
repnz
movsb
push
fisttpll
mov
sbb
movsb
xchg
dec
rcrb
shl
pusha
iret
dec
lea
sub
mov
xlat
and
adc
inc
aaa
lahf
push
imul
push
mov
sbb
adc
sub
mov
sbb
rolb
push
sub
dec
xchg
jae
xchg
outsl
mov
jae
or
lods
pop
pop
bound
lcall
pop
popf
adc
inc
dec
sbb
stc
jbe
aas
lahf
pop
repnz
adc
std
ret
adc
add
nop
in
mov
sub
test
mov
sbb
jecxz
and
ret
scas
or
mov
xchg
mov
in
mov
sbb
mov
adc
cltd
jo
sub
cli
cmp
cmpsl
je
inc
mov
sub
mov
addl
loopne
call
cs
and
pop
lods
jg
push
jno
sbb
sti
popa
xor
pop
cmpsl
or
mov
ret
xchg
shr
and
out
stc
movsb
cmp
adc
pop
out
das
pop
pop
aad
fs
xor
inc
iret
js
fcmovne
push
jge
mulb
mov
mov
inc
xchg
xchg
hlt
push
cmp
aaa
int3
mov
jl
inc
mov
jl
cmpsb
mov
xlat
sti
cld
rcll
lock
repz
sub
in
add
jp
test
faddl
inc
cmc
hlt
inc
daa
je
fscale
lods
dec
stc
adc
sbb
add
lock
test
gs
lret
aam
hlt
fcom
jb
cltd
pop
gs
loope
push
push
jno
cmp
mov
data16
add
sub
jecxz
push
sti
cmp
push
xlat
push
std
mov
cmpb
mov
sti
cmp
ret
cmp
es
out
ret
bound
jbe
ja
jecxz
jns
jne
dec
imul
or
jmp
je
lret
imul
pop
or
xchg
fists
inc
sbb
sbb
or
insb
jecxz
call
cmc
out
lret
fistpll
insl
pop
imul
repnz
jb
xor
in
pop
mov
popf
pusha
jbe
out
push
das
das
out
movsb
in
mov
adc
nop
hlt
sub
hlt
cmp
std
fsubp
mov
push
enter
stc
shrl
lahf
pop
mov
js
popa
xchg
aas
daa
lods
jmp
popf
cmp
cmc
lods
andl
in
pop
xor
xor
jge
icebp
adc
jmp
roll
aas
xchg
jae
jge
or
std
out
loope
gs
lahf
xchg
jecxz
int3
mov
xor
dec
push
sbb
jl
icebp
add
adc
iret
and
movsl
push
jle
xchg
insl
movsb
fwait
popa
cltd
in
inc
jecxz
push
add
test
cwtl
faddl
cvttps2pi
xchg
cmp
out
cltd
cmp
jp
and
cmp
rolb
push
sbb
sbb
jle
mov
in
testb
rcr
push
cmp
jo
sub
cmp
cmp
lea
jge
out
stos
push
call
mov
call
mov
test
pop
and
fsts
nop
xlat
icebp
fwait
scas
nop
jbe
shl
int
out
cmp
xor
scas
adc
lret
push
leave
jno
jne
scas
jl
dec
add
ljmp
push
in
add
push
subb
cmp
and
mov
cwtl
orb
outsb
push
outsl
mov
mov
fsubrl
mov
sub
test
rclb
mov
adc
mov
or
sub
or
fadd
aaa
push
lods
dec
inc
lret
push
lret
and
out
push
hlt
in
push
inc
jae
test
lcall
out
mov
jne
xchg
inc
xor
mov
pop
ds
std
cmp
mov
cmp
cmp
inc
mov
xchg
mov
push
pop
iret
lret
lods
xlat
cmpsl
and
orl
cmp
inc
ss
jno
cmp
fdivr
cmpsb
mov
sbb
xchg
cld
mov
fadds
push
daa
inc
mov
sahf
stc
jg
xor
cmp
sub
mov
stos
ret
sub
icebp
mov
repnz
mov
mov
testl
neg
repz
mov
pop
dec
jl
lahf
sbb
sub
jecxz
iret
fmulp
inc
arpl
mov
xor
cmp
lret
mov
andb
push
fistl
arpl
je
dec
ss
or
lcall
sub
adc
and
push
xchg
mov
fsubr
in
pop
mov
hlt
mov
addb
pop
sarl
arpl
jbe
jl
in
adc
xchg
lahf
jno
mov
mov
fwait
adc
mov
bound
neg
dec
inc
dec
scas
cmp
mov
out
push
movsl
pushf
adc
xchg
push
jl
or
in
test
jg
cmpsl
outsl
data16
sbb
xchg
jle
adcb
leave
push
and
xchg
push
add
jl
xor
sub
cld
pop
addr16
cwtl
rorb
sbb
ficompl
into
loop
pushf
pop
fdivr
and
inc
ds
dec
pop
or
repnz
scas
popa
xchg
je
in
pop
lahf
pop
mov
mov
in
lret
mov
movsb
call
mov
mov
pop
pop
icebp
aas
outsb
lahf
cmpsb
push
dec
push
jns
pop
outsb
iret
mov
cmc
jnp
or
sbbl
adc
cmpsl
test
push
dec
cld
ret
xchg
popa
cmp
in
in
sbb
push
cmp
and
test
test
cmp
ret
cmp
xchg
loope
push
cmp
cli
pop
fildl
mov
sub
inc
jg
ret
push
daa
fwait
xlat
popf
fisttpl
jmp
imul
leave
outsb
cli
xchg
push
popf
ret
jecxz
pop
cmp
cmp
push
or
and
test
mov
sub
scas
inc
movb
jae
out
data16
loop
mov
and
xor
jg
shlb
testl
cs
int3
cmpsb
arpl
dec
mov
push
pop
sub
pusha
or
push
xchg
loope
repnz
outsb
mov
ret
jns
jo
test
add
scas
negl
xchg
sub
popf
sbb
pushaw
lahf
daa
addb
add
or
lret
xor
push
je
cwtl
enter
inc
add
push
lcall
andl
sbb
pop
bound
insl
xor
cli
ss
dec
data16
insl
sub
lahf
mov
xor
bswap
bound
push
push
jns
loopne
mov
lcall
test
and
dec
push
xorb
pop
dec
lds
inc
push
imul
fcompl
cmp
addl
mov
and
mov
cmp
pop
mov
out
loope
sub
and
push
scas
inc
jne
adc
cmc
sub
mov
jmp
shr
fadds
jns
into
sbb
fldenv
add
adc
in
dec
inc
jne
pop
loopne
data16
sbb
inc
lods
jo
mov
push
dec
sub
add
push
pop
dec
ret
jo
and
insb
mov
stos
pop
inc
jle
int
cmp
shll
push
daa
js
bnd
push
inc
or
xchg
lods
adc
cmp
lods
and
shlb
mov
adc
and
stc
mov
dec
mov
sub
mov
xchg
dec
jle
outsl
and
pop
inc
inc
lret
aad
lock
push
push
push
mov
jp
dec
cmpsl
jb
outsb
stos
cmp
ljmp
jg
push
xchg
add
std
push
and
mov
and
ret
ficompl
mov
mov
jo
mov
in
mov
push
cmpsb
in
addl
xor
sbb
stc
andl
add
hlt
aaa
sub
sarb
fistps
cmp
sbb
ja
jl
orl
mov
jl
push
push
int
rolb
or
aad
mov
sar
jp
mov
add
in
cli
arpl
sub
aas
leave
add
dec
mov
push
rorb
addl
adc
pop
xchg
movsb
es
sub
jo
and
and
push
inc
jp
andb
cmp
cmp
cmp
cmp
push
imul
cmp
push
data16
cmpsl
adc
mulb
cmp
and
punpckhwd
test
dec
pop
mov
fsubrp
into
jnp
lahf
pushw
xchg
push
cld
mov
push
mov
test
int
les
jmp
lahf
jl
push
xor
xlat
addb
inc
pop
dec
lods
xchg
das
out
shl
jae
adc
push
cs
dec
fs
andb
test
out
sub
cli
rorb
sub
mov
push
pop
mov
pop
push
dec
out
and
ror
std
adc
jg
fcompl
outsb
es
aas
in
insl
js
and
in
add
xor
xor
push
sbb
add
mov
sub
mov
mov
inc
aam
push
cmpsl
add
xchg
pop
adc
cs
push
int3
lods
shl
jns
sahf
push
movsl
lods
inc
dec
lds
in
add
pop
icebp
jg
nopl
xor
sbb
icebp
aam
bound
fnstenv
icebp
fcoml
pop
push
imul
in
mov
scas
adc
loop
ss
cmpsl
repnz
out
fnstsw
les
lea
lcall
mov
mov
cmp
das
sub
in
out
mov
xchg
sub
and
cmp
push
jmp
push
xor
outsb
and
xchg
popa
repz
divl
cmp
loopne
imul
fstpl
xadd
popa
movsb
outsb
das
arpl
test
xchg
mov
add
mov
xor
adc
jbe
fwait
add
gs
stc
adc
test
aaa
jne
aad
lds
aaa
outsb
xchg
mov
and
stos
xor
std
leave
lds
xlat
lcall
imul
pop
mov
mov
sub
sarl
in
hlt
stos
cmp
les
pop
push
lods
sub
inc
push
enter
push
cmp
es
inc
imul
xlat
repz
imul
stos
jg
push
sub
loope
jl
inc
scas
mov
bound
or
inc
sahf
subb
rol
aam
sub
push
push
and
in
lock
add
cmp
dec
push
push
mov
in
or
cmp
outsb
mov
stos
xor
cmc
and
into
and
test
mov
add
mov
lea
adcl
xor
shll
jns
and
ret
or
outsb
mov
and
xor
lret
js
pop
jle
stos
cmp
or
cltd
cwtl
les
add
jecxz
xchg
call
in
push
bound
out
pop
popf
add
std
stc
fcmovb
jge
popf
adc
xchg
ficoml
rclb
std
xchg
push
inc
push
jo
loop
and
xchg
repz
subb
outsl
rolb
cmpsl
mov
frstor
sti
sub
outsl
mov
movsl
loope
dec
or
jb
sub
ret
aam
pop
idiv
cmp
xchg
add
repz
push
ficoml
in
lea
push
mov
push
out
adc
je
and
xor
xor
in
aam
xor
enter
jg
out
ja
pushl
out
jge
cmpsb
mov
repnz
push
pop
mov
push
mov
lds
fsubrl
mov
or
gs
popa
cmpsb
xorl
push
mov
cmp
test
push
dec
or
jno
fcmovnb
add
xchg
cmpl
hlt
out
adc
call
jp
sarl
push
lds
rorl
sub
cmp
and
push
and
mov
dec
icebp
push
xchg
jo
mov
inc
and
daa
pop
mov
movsb
sub
lea
add
cmp
dec
imul
icebp
imul
dec
stos
xor
test
push
fsub
lea
xor
adc
cli
lods
xchg
lcall
sahf
push
test
in
out
dec
out
sbb
sbb
movups
je
or
mov
lock
inc
ljmp
jbe
mov
dec
dec
dec
adc
xlat
stc
xchg
lcall
les
cld
jbe
add
flds
jmp
shr
sahf
mov
cmpsb
mov
lds
je
sbb
inc
lock
mov
outsl
push
adc
mov
cmpsb
push
outsl
mov
mov
pop
mov
pop
cltd
fiadds
cmpsl
mov
push
scas
popa
or
cltd
mov
jnp
mov
aaa
hlt
mov
cmp
roll
popa
insb
insl
jg
mov
pop
jle,pt
mov
xor
sbb
stos
in
test
add
dec
mov
adc
push
scas
je
mov
cmpsb
mov
cmc
test
push
nop
add
xor
pop
in
mov
add
rcll
push
pop
cltd
je
and
mov
inc
lahf
inc
adc
fistl
lret
daa
xor
xchg
movsb
cli
inc
sbb
movsl
mov
leave
xor
stos
xchg
aam
mov
stos
movsb
mov
js
loope
sub
add
js
jnp
xchg
adc
dec
cmc
je
es
lret
fdivl
jns
sbb
icebp
lea
lods
sbb
es
idivb
int3
in
or
pusha
mov
out
cmp
adc
push
cmp
sbb
add
dec
sub
in
test
mov
or
mov
loope
nop
pop
mov
or
or
scas
cmp
iret
jo
aas
cmp
mov
push
sbb
or
xchg
and
inc
in
pop
sahf
push
inc
imul
adc
jecxz
pop
mov
push
mov
mov
mov
and
jnp
push
mov
mov
gs
int
jecxz
cmp
hlt
mov
xchg
cmp
test
dec
pop
bound
inc
loope
fcoml
popa
js
or
shl
sub
div
es
mov
std
inc
push
loop
sbb
stc
mov
inc
rclb
rorl
test
ja
push
dec
fwait
lret
push
nop
ret
sbb
daa
adc
inc
add
push
jo
rcrl
xor
push
sti
insb
xchg
pop
push
dec
ret
mov
dec
lods
mov
aas
add
pop
incl
into
xchg
push
sbb
xor
out
movsb
aam
xchg
loopne
pop
lret
add
mov
scas
out
ret
popf
dec
clc
mov
inc
sub
int
popf
shl
cmpsl
hlt
fmulp
lods
lock
xchg
movsb
xchg
xchg
cwtl
lds
jp
mov
fcoms
push
scas
inc
mov
in
lret
adc
sub
int3
lret
add
push
pop
es
shll
pop
mov
pop
or
jg
mov
cltd
rcrb
ret
push
jb
sbb
add
hlt
in
or
gs
mov
and
clc
and
mov
lcall
add
xchg
jg
xchg
adc
hlt
xchg
jge
mov
mov
push
ret
arpl
stos
jno
gs
pop
jns
nop
out
loope
jns
add
cmp
popf
lds
out
inc
adc
out
mov
and
pop
mov
insl
shufps
mov
imul
xor
push
sub
sub
push
test
mov
push
pop
repz
dec
and
cmp
pop
enter
imull
sub
lret
mov
lret
push
int
push
mov
js
cld
lds
push
cmp
inc
adc
dec
cwtl
mov
mov
xor
js
mulb
lahf
push
outsl
inc
pop
lods
leave
mov
and
jnp
shl
xchg
test
cmp
push
xchg
push
jnp
sahf
mov
ret
pusha
out
add
mov
jg
fidivrl
cmc
xchg
mov
sbbw
rol
inc
or
inc
dec
xchg
xor
sub
adc
rol
adcl
xchg
fsubs
push
mov
cwtl
mov
sub
popa
movsl
out
or
imul
push
push
js
inc
loop,pt
sbb
stos
lret
add
xchg
xchg
subl
pushf
pop
or
sub
sub
into
fdivrs
lret
sbb
sub
inc
mov
and
repz
fimull
mov
outsl
insb
out
and
dec
fnstenv
cmp
sbb
popf
imul
cmc
mov
adc
mov
pop
push
lods
jge
pop
aas
mov
jae
scas
sub
inc
ret
add
lods
mov
mov
push
movl
sarl
or
movsb
stos
pop
sahf
cmpsb
popf
imul
test
leave
aad
test
sub
cmp
cltd
adc
pop
loop
pushf
pop
xchg
js
icebp
out
xor
cmp
rcll
sbb
push
fmulp
sar
repnz
xchg
xchg
fs
out
cli
fmulp
sub
cmp
jp
test
jno
fldenv
pusha
push
mov
movsl
es
in
mov
pop
mov
test
lods
xor
add
sub
loopne
jb
nop
lea
push
js
arpl
mov
sahf
les
add
jl
xor
insl
and
addr16
mov
orb
aaa
dec
mov
subl
inc
inc
and
dec
pushf
and
and
xor
popa
shrb
dec
repz
lahf
lock
jge
inc
and
clc
sub
mov
mov
push
pushf
rcl
fidivrs
jecxz
fwait
or
dec
xor
fiaddl
pushf
out
push
xchg
leave
faddl
inc
cmp
nop
adc
je,pn
dec
mov
movsb
mov
adc
xor
mov
fxtract
mov
pop
inc
mov
and
and
cmp
xchg
sub
inc
xlat
out
dec
dec
shr
jmp
mov
icebp
cmc
push
out
pop
cmp
adc
mov
and
pop
and
dec
sub
sbb
das
popf
pop
xchg
outsl
addr16
rcll
push
pop
ficompl
mov
movb
in
inc
xor
cmpsb
out
aas
xor
inc
dec
js
pop
lahf
and
call
hlt
push
jno
add
jo
mov
mov
fcoml
hlt
xor
popf
cmc
jno
add
cmpsl
xchg
aad
push
cmc
push
cmpsl
adc
jbe
in
enter
testl
push
fwait
mov
je
inc
and
bound
lret
imul
jp
mov
push
cld
mov
inc
push
xor
mov
insl
push
popa
mov
cwtl
rorl
mov
jl
bound
jecxz
push
cmpb
xchg
mov
mov
ret
mov
int
cmp
jmp
iret
bound
add
pop
icebp
faddl
inc
loop
jge
lods
into
mov
jle
pop
jge
mov
adcb
shlb
sub
push
mov
je
cmp
pop
pop
orb
sub
push
lret
cmp
in
insl
lock
ret
das
cli
iret
shrb
cmp
sbb
leave
nop
adc
sub
movsl
cli
into
sbb
mov
mov
fwait
push
repz
insb
mov
repnz
fs
outsb
mov
jp
mov
inc
shlb
push
mov
pop
add
stc
dec
jg
mov
xlat
inc
add
icebp
or
xor
xor
or
repnz
out
loop
mov
mov
je
pop
inc
outsb
clc
pop
stc
popa
xchg
pusha
fists
or
ja
dec
mov
fcomi
test
cmpsl
arpl
jb
repnz
sub
test
sbbl
fmuls
pop
mov
js
addr16
push
cmp
inc
jno
sbb
and
pop
push
and
pop
xchg
movsl
test
aaa
daa
cwtl
imul
sub
push
add
imul
div
movsb
les
sti
or
popa
nop
clc
test
icebp
cli
in
mov
and
sahf
cmp
mov
jb,pt
pop
orb
sub
push
mov
sub
scas
sub
xchg
inc
and
aad
adc
mov
rcrl
xchg
dec
jg
cld
test
pop
push
rcrb
je
dec
and
adc
add
xor
xor
aam
cmp
sbb
mov
lcall
imul
stos
out
pop
mov
sbb
and
mov
clc
xor
mov
xor
nop
sbb
ret
xor
push
movsb
mov
xchg
movsb
xchg
jno
push
add
jge
pop
bound
test
push
pusha
sbb
icebp
fldt
fmuls
mov
decb
jbe
test
in
fcomps
aaa
je
xor
push
enter
sbb
pop
adc
pop
xchg
or
inc
pop
mov
dec
jbe
xor
scas
mov
and
mov
pop
movsl
adc
addr16
or
sbb
dec
fidivs
ret
sub
mov
les
ds
fildl
pop
add
scas
lea
add
add
jno
insl
sbb
outsl
mov
les
mov
xchg
mov
adc
fcmovbe
jl
mov
and
bound
mov
mov
sub
repz
out
jge
pop
xor
mov
sti
iret
inc
inc
mov
add
movsb
adc
stc
rcr
aas
xchg
mov
out
lock
dec
addr16
bound
in
mov
and
sbb
mov
sub
and
aam
ds
jb
lds
and
push
push
shr
adc
inc
pop
ja
in
dec
inc
data16
js
jae
lret
aam
fistpll
jns
movsb
js
ljmp
jbe
iret
lds
mov
ljmp
out
mov
mov
arpl
shll
fcomps
test
stc
adc
xlat
popa
dec
sub
jnp
dec
scas
fwait
push
imul
or
hlt
enter
cmp
inc
ds
sub
ja
cmpsb
shll
push
sbb
push
and
adc
pop
fs
into
jb
roll
insl
inc
les
sbb
mov
stos
mov
dec
add
pop
pop
pop
insl
cmp
inc
imul
in
mov
xor
aas
jge
lods
push
fdivrl
sbb
xchg
jae
or
pop
mov
adc
movsb
call
jmp
and
xchg
sub
jo
or
xchg
clc
clc
aad
lcall
inc
in
call
in
ds
mov
xchg
mov
adc
popa
lock
jne
fmull
and
sbb
jnp
xchg
push
call
icebp
mov
roll
dec
jmp
insb
aad
movsb
dec
push
pop
adc
fs
jbe
sbb
lcall
stos
and
icebp
popa
pop
sbb
shrl
aas
sbb
mov
fcomp
adc
and
push
js
fcmovu
lcall
cmpsb
push
mov
outsl
or
xchg
or
pop
lahf
dec
cmpsl
jnp
out
dec
sbb
sarl
in
and
sub
xchg
sub
test
sbbl
stc
adc
pushf
mov
lods
jae
xchg
inc
and
nop
repnz
jno
sbb
in
enter
sub
pusha
sub
xchg
ja
mov
cmp
sbb
fs
scas
add
hlt
hlt
int3
pop
mov
iret
movsb
repnz
jb
xchg
xchg
adcl
cmp
in
jl
test
adc
sbb
and
and
push
pop
mov
mov
ljmp
sbb
mov
sahf
pop
mov
sbb
in
cld
adc
mov
cmp
dec
mov
imulb
fcomip
or
shlb
push
pop
scas
cmpsb
mov
popf
lcall
dec
enter
aaa
pop
pop
inc
out
mov
mov
xchg
adc
negb
adc
sub
mov
daa
adc
je
and
fdivl
les
xor
imul
pop
jmp
jecxz
cli
xchg
or
sahf
rolb
push
adc
fcompl
ret
cld
adc
dec
es
and
cld
sbb
jae
dec
push
jp
call
icebp
xchg
dec
icebp
adc
aad
ja
js
fcmovne
gs
cmpsl
ret
call
adc
inc
out
sahf
dec
sub
into
daa
and
jle
xchg
shlb
mov
jmp
sub
fwait
lahf
mov
jl
cmpsl
inc
sbb
dec
ret
sahf
les
push
sbb
test
shl
mov
in
sbb
pop
cltd
cmp
outsb
dec
mov
inc
and
out
es
xor
icebp
in
push
pop
push
pop
cmp
add
shrl
mov
or
mov
aaa
out
inc
adc
push
lret
adc
data16
sahf
ret
mov
dec
sub
adc
inc
sahf
nop
lds
xchg
hlt
adc
add
and
pop
sahf
sub
adc
add
ss
popf
pop
jl
cmp
xchg
mov
sahf
daa
popa
movsb
cld
mov
dec
cmpsb
push
ret
push
jle
push
mov
loopne
mov
or
and
push
loopne
push
adc
ss
out
sbb
mov
xor
fcmovne
pusha
mov
pop
aam
mov
popf
nop
pop
xchg
cs
fbstp
lock
push
inc
pushf
sub
sbb
enter
jae
pusha
xor
pop
or
adc
aas
aaa
adc
pop
cwtl
push
fcompl
pop
inc
push
fstpt
or
jl
das
lods
push
loop
aam
dec
adcl
fucompp
ret
lea
jo
lret
mov
in
mov
ret
mov
sbb
lret
pop
dec
leave
lret
cmpl
jb
out
pusha
faddl
inc
mov
and
pop
lret
pop
pop
rolb
mov
mov
mov
into
adc
sbb
fsub
adc
cmp
mov
pop
arpl
lret
sub
cmp
push
mov
cld
aaa
jmp
outsl
jne
jno
pop
cmc
cmp
sbb
xor
fiaddl
and
scas
sbb
into
jns
cmpsl
test
adc
ljmp
loope
in
cli
inc
or
xor
test
les
xchg
xor
pop
xlat
jp
out
push
and
aas
or
pop
jne
adc
push
sbb
inc
in
dec
pop
add
ret
std
ds
out
mov
inc
das
cmp
add
jns
push
jl
sbb
addl
in
aaa
imul
pop
push
mov
aaa
mov
outsb
jmp
push
psubsb
jb
pop
push
mov
and
repz
clc
movsb
push
pop
paddusw
mov
or
mov
repz
jcxz
icebp
in
mov
jb
stos
xchg
adc
dec
cmpsb
repz
push
push
dec
out
and
adc
aam
orb
test
push
and
mov
lret
mov
iret
daa
fsub
mov
push
inc
les
fisubs
jmp
xchg
gs
pop
movl
mov
icebp
mov
mov
mov
xor
xchg
hlt
hlt
stos
inc
mov
xor
inc
addl
cli
sub
jae
mov
sbb
xorl
xchg
aaa
test
pop
inc
xchg
fldt
lods
or
or
loop
xor
sar
xchg
outsl
pushf
jnp
push
adc
into
and
push
pushf
inc
call
into
xorl
jl
push
pop
mov
lea
push
dec
pop
inc
xor
outsl
push
pop
mov
sbb
adc
mov
add
jmp
mov
ret
mov
pop
leave
out
jns
cwtl
mov
jno
sub
sbb
or
in
and
popa
xor
jnp
mov
pop
jmp
pop
sbb
inc
pop
mov
jle
imul
cld
shl
icebp
mov
sub
jmp
mov
int
jns
rorl
ds
mov
push
lds
jb
adc
lret
flds
and
aaa
bnd
adc
add
pop
add
sbb
scas
push
leave
mov
xor
cmpsb
adc
push
cmp
stos
scas
rcr
fmulp
jmp
or
pusha
lods
and
xor
popf
adc
mov
jae
cmp
aad
xchg
imul
add
fcmovne
cmp
dec
cmp
je
pusha
out
dec
sbb
xchg
mov
pop
cli
dec
divb
hlt
ds
sahf
and
mov
sub
jnp
insb
mov
push
jl
or
icebp
je
pop
sub
out
lods
add
jle
inc
rolb
loop
outsl
jnp
mov
into
lds
xchg
ja
mov
xor
imul
in
push
xchg
sbb
inc
xor
push
xor
push
or
mov
jae
std
cld
and
cmp
bound
fidivrl
out
hlt
jno
add
inc
pop
pop
jb
push
mov
pop
push
push
mov
mov
push
fcom
inc
push
fs
sub
hlt
pop
hlt
sarb
inc
je
les
sbb
in
cltd
adc
test
mov
mov
add
dec
divl
pusha
clc
ljmp
dec
aad
mov
cmpsl
mov
mov
xlat
inc
mov
nop
mov
jg
push
das
popa
cmpsb
lahf
bound
orl
aaa
scas
dec
mov
jbe
mov
sahf
stc
add
outsl
and
cmp
in
lret
pop
mov
push
add
iret
mov
repnz
ror
out
adc
mov
pusha
sub
push
mov
push
jle
sti
in
stos
inc
sub
push
adc
stc
call
fdivrl
arpl
push
out
xchg
mov
dec
test
or
xchg
pop
pop
sbb
movsl
adc
enter
adc
pop
fmuls
sub
lods
lods
int3
icebp
lahf
in
add
test
test
jg
jle
pop
rcr
mov
adc
shl
lret
jg
adc
in
test
xchg
add
sbb
push
out
arpl
cmpsb
mov
xchg
push
test
fistl
xchg
out
adc
outsl
push
jge
jecxz
mov
push
lods
mov
jo
xchg
andl
nop
cltd
sbb
popf
inc
xchg
cmp
jmp
sub
xchg
out
push
popf
imul
jbe
adc
jb
lahf
mov
notb
xchg
aaa
sbb
ret
pcmpgtb
fs
xchg
and
xchg
mov
cltd
xchg
ret
mov
push
hlt
into
pop
lods
rcrb
fadds
pop
mov
scas
out
std
mov
or
push
gs
sti
movsb
and
inc
rorl
or
sbb
adc
mov
pushf
loop
arpl
scas
jg
cmpsl
dec
jmp
jmp
mov
sub
pushf
push
dec
inc
sub
arpl
dec
js
inc
inc
push
fimuls
adc
mov
jle
sbb
fnsave
and
xorl
or
xor
pop
adc
jle
jle
add
imul
in
add
xchg
incb
push
sbb
push
push
xor
add
jo
or
js
pop
jecxz
pop
sub
lock
adc
cmp
mov
imul
outsl
dec
ljmp
xlat
jecxz
xchg
idivl
sbb
sti
and
inc
out
les
jmp
in
lcall
sbb
xor
mov
mov
repnz
cmpsb
mov
lds
dec
dec
adc
jge
xor
mov
dec
in
imul
scas
pop
jg
test
dec
js
dec
cmc
jmp
test
aaa
imul
jg
imulb
xchg
in
and
test
cmpsl
mov
inc
lcall
xchg
and
cld
js
outsb
lds
push
mov
sub
jecxz
xchg
movsl
sti
lret
jmp
xor
sahf
adcb
test
mov
xor
dec
dec
jo
movl
daa
add
lods
jecxz
and
pop
jne
in
test
mov
fildl
xor
cld
add
daa
pop
jmp
shl
sub
pop
dec
cwtl
das
mov
insl
enter
idivb
cmc
mov
ret
inc
aam
mov
hlt
mov
and
jmp
xchg
push
call
mov
jo
inc
xchg
scas
mov
add
sbb
filds
push
icebp
in
mov
cmp
sbb
or
xlat
jmp
aas
fsts
or
push
inc
out
pop
mov
sub
sbb
push
fimull
das
push
cmp
lock
mov
mov
mov
mov
inc
addr16
cmc
sti
je
fchs
scas
test
add
push
std
mov
mov
pushf
aad
jne
cli
fiadds
mov
rolb
or
roll
xchg
jno
mov
push
popa
mov
clc
and
push
jg
mov
and
pop
shrb
cli
das
push
jge
mov
mov
js
xchg
stc
and
sub
gs
inc
mov
mov
pusha
xchg
aam
dec
js
test
sti
stc
mov
push
sub
fcom
loopne
loop
jne
pusha
adc
pop
xchg
stos
cmp
mov
ficoms
std
dec
add
lret
mov
xchg
cmp
loope
int
mov
push
xor
dec
mov
arpl
or
test
push
push
clc
stos
in
ss
movsl
clc
mulb
cltd
repz
jp
mov
mov
jmp
jge
lret
fldcw
add
lock
lock
pop
movsl
inc
aas
dec
mov
pop
repnz
mov
cwtl
ss
fcmovne
xchg
mov
lods
mov
sbb
mov
pop
popf
movsl
int3
fs
dec
cmp
lcall
loope
pop
je
call
mov
xlat
popa
ret
sbb
movsb
sub
cmp
sub
jne
loope
js
and
sbb
xor
jb
or
rcrb
fwait
push
andl
push
inc
cmpsl
adc
cmpsb
aaa
leave
fistl
xor
neg
loopne
fcompl
dec
aaa
mov
ljmp
adc
loop
push
lcall
pop
lock
and
scas
xchg
mov
lods
hlt
mov
and
jae
lock
shlb
adc
adc
scas
mov
push
dec
pushf
dec
push
jg
xor
pop
dec
out
ud0
ret
and
movsb
mov
lea
shr
jbe
inc
dec
sbb
stos
lret
stc
bound
scas
leave
push
jbe
leave
scas
xchg
shlb
imul
inc
xlat
movsl
pop
shlb
pusha
xchg
sub
inc
sub
mov
imul
mov
sbb
xor
adc
dec
mov
dec
dec
and
adc
cmp
enter
pop
jge
out
push
xor
xchg
mov
aaa
mov
pop
hlt
pop
xchg
idivl
pop
mov
pop
mov
loop
cmp
out
adc
fistps
ret
cld
mov
hlt
jg
stos
in
hlt
test
sub
sub
adc
or
dec
lcall
mov
pop
mov
pop
sub
mov
popf
mov
sub
pop
cli
repnz
nop
test
push
pusha
imul
fstl
cmp
idiv
xchg
mov
jnp
mov
fdiv
sub
push
sbb
lret
mov
shrb
test
dec
divl
cmp
mov
ret
push
push
mov
mov
push
shll
xor
repz
popa
jg
mov
outsl
faddl
cltd
pop
mov
mov
in
mov
inc
aas
dec
aaa
jl
jl
ss
sbb
xchg
xchg
scas
inc
mov
mov
push
sbb
in
ret
mov
push
idivl
adc
xchg
inc
mov
in
or
cld
mov
push
into
xchg
xor
inc
inc
jno
jl
pusha
mov
add
ljmp
mov
add
inc
or
inc
fists
dec
add
ds
bnd
rcrl
in
sahf
mov
fsubrl
pop
mov
xor
push
aad
loop
mov
data16
cmp
repnz
pop
mov
lods
xchg
xor
ljmp
std
les
pushf
addr16
push
lcall
ja
dec
and
sbb
out
pop
ds
into
dec
fnstcw
int3
icebp
test
dec
pop
push
sub
push
shrb
mov
mov
xchg
call
xchg
fadds
push
mov
xchg
mov
sub
andb
les
pop
xlat
ja
and
insb
outsb
ds
jg
xorb
lods
and
stos
shrl
push
enterw
orl
and
fdivrs
pop
push
inc
in
inc
push
loope
dec
testb
dec
pop
je
fidivrl
cmp
mov
ret
dec
addr16
xchg
sbb
push
mov
add
stos
aaa
pop
sub
xor
add
mov
stos
movsb
xchg
in
shl
xchg
mov
insb
xchg
test
sub
lods
pushl
popa
cmp
push
xchg
mov
lret
pusha
jp
and
insl
ret
ss
mov
daa
or
fwait
xor
pop
adcb
sti
pop
test
jg
add
hlt
mov
mov
xor
clc
pop
mov
jl
mov
push
xchg
mov
pusha
mov
adc
inc
ficoms
inc
sbb
add
movsb
push
ret
xchg
out
je
dec
notb
add
jne
call
fidivl
xchg
or
cmp
ficoms
push
jne
or
pop
mov
rorl
shlb
pop
lods
or
test
je
scas
adc
addb
in
jnp
shrb
outsb
adc
mov
inc
push
test
lock
mov
cmp
lea
ljmp
int3
xchg
and
adcl
ds
rclb
cmp
sub
insb
pop
dec
ret
push
mov
add
mov
adc
fstpl
xor
sbb
mov
test
xor
jecxz
add
dec
cmp
jnp
push
test
mov
aas
mov
shlb
imul
jp
inc
lock
icebp
push
rcrl
dec
aaa
in
cmp
movsl
imul
inc
jae
jmp
add
cmp
jbe
imul
mov
daa
jb
cwtl
add
lods
cwtl
jmp
repz
pop
pop
xchg
jnp
dec
fs
jbe
lcall
cmp
or
jo
in
jae
in
inc
mov
daa
cmp
pop
pop
rclb
je
mov
xor
xor
insl
in
push
inc
jl
scas
dec
sbbb
xorl
and
cmp
fisubl
push
jmp
cld
ja
xchg
inc
loop
sbb
lock
imul
lret
loop
cmc
pop
adc
jns
mov
push
mov
mov
popa
add
or
jle
sub
mov
xchg
jbe
out
pop
jne
xor
outsl
pop
jecxz
mov
cmp
pop
push
mov
mov
leave
mov
and
call
push
push
pop
imul
pop
lret
loope
aas
mov
jne
loop
push
pop
mov
int
adc
xchg
push
push
pop
mov
sbb
fdivrs
mov
enter
mov
mov
mov
mov
mov
push
lock
add
push
cmp
cmp
jecxz
lret
lods
cwtl
adc
in
jp
lods
cs
mov
rorl
pop
imul
cmp
xor
testb
and
adc
mov
push
pop
jecxz
cltd
loope
cmp
lods
push
or
fistps
imul
fadd
frstor
xchg
sahf
jns
aas
jmp
or
jmp
push
and
stos
push
divb
jmp
loope
cmpsb
sub
xchg
lahf
sub
out
fwait
les
jp
push
ficompl
aaa
subb
push
popf
mov
inc
repnz
add
cltd
in
rolb
lea
pop
mov
adc
movsb
ret
rcrl
and
lds
jmp
push
out
mov
jl
dec
aad
inc
or
push
add
aas
xor
cmp
loop
xchg
add
cmp
loopne
sbb
jmp
icebp
push
pop
xlat
pop
mov
es
sub
push
adc
cmp
xlat
xor
repnz
jmp
icebp
out
mov
clc
add
mov
test
add
mov
lcall
sbb
push
jae
and
cmp
dec
xor
xchg
and
pusha
and
sbb
adc
push
mov
pushl
xor
hlt
jp,pt
dec
sahf
dec
fmuls
ret
ja
cs
lods
xchg
push
shll
repnz
loopne
inc
mov
jle
and
rcll
clc
scas
gs
mov
push
dec
lods
ss
jns
rcrb
fisttpl
push
subl
add
test
mov
out
adc
mov
je
xor
mulb
mov
enter
or
dec
sub
stc
insl
xchg
pop
sub
test
cmp
mov
mov
setns
cmp
jle
dec
and
mov
stos
outsl
fstps
push
into
dec
cmpsb
jp
or
loop
lea
jnp
lock
popf
cmpsl
sub
pushl
lock
add
xchg
mov
pushf
push
imul
aad
and
or
inc
mov
sbb
cmp
popa
or
mov
jo
test
sbb
fs
sub
cmp
fmul
mov
lea
sub
fstpl
lds
rcll
dec
add
mov
mov
sub
jb
sbb
sub
mov
jne
roll
xchg
and
inc
mov
test
mov
icebp
push
push
mov
mov
int3
cwtl
jle
and
mov
add
ret
pop
inc
xor
jb
gs
fcmovnbe
xor
jp
mov
or
cmpsl
cmpsl
sti
sbb
les
inc
in
pop
push
shll
pop
mov
ret
sub
dec
mov
adc
inc
jae
and
push
dec
cwtl
add
sbb
sub
mov
push
add
insb
mov
adc
xchg
cmc
cmc
mov
add
mov
repnz
add
xlat
mov
iret
jno
cmp
and
add
adc
gs
sub
loopne
push
push
sbb
les
sbb
call
add
lahf
push
add
out
fisttpl
xor
repz
sbb
mov
cmc
jmp
sbb
and
cs
in
xor
pop
repz
outsb
repnz
cmpsb
xor
scas
and
subb
jbe
mov
scas
or
mov
cmp
mov
stos
or
adc
pop
bound
jns
ja
enter
pop
call
int
mov
jg
ja
sub
inc
in
js
pop
mov
mov
push
stos
movsl
movsb
or
jnp
pop
xchg
push
mov
jle
jns
les
xchg
mov
mov
cmp
scas
pushf
and
in
rorl
mov
test
mov
and
jne
pop
pusha
dec
jmp
jne
cld
sarb
mov
cltd
cltd
into
jne
mov
test
subb
bound
pop
loope
mov
jo
fidivs
sub
jnp
test
pusha
aas
push
mov
stos
dec
add
add
push
outsb
hlt
mov
fmulp
pop
mov
xor
sbb
iret
mov
xchg
jmp
arpl
ret
movsl
adc
push
repz
fadds
fs
jne
jnp
add
mov
sbb
xchg
push
push
mov
or
xchg
lret
add
push
or
jns
mov
cmpsl
icebp
fldln2
lock
pop
push
mov
insl
push
divb
jg
pop
lods
lret
scas
cs
hlt
sbb
mov
xchg
xchg
lods
jl
pop
sub
xchg
or
and
movsl
sbb
add
adc
xchg
xchg
insl
jne
sbb
pop
sub
test
pop
ljmp
jne
xlat
fistps
divb
iret
lods
aas
into
aaa
iret
pop
xlat
dec
sti
add
add
js
xchg
dec
cmp
jg
xchg
repz
rorl
rcrb
repz
ret
pop
add
adcl
pop
xchg
incl
test
out
xchg
rcrl
pop
push
add
mov
mov
add
inc
fimuls
test
cltd
sub
or
repz
addr16
mov
push
xchg
out
jns
sti
fwait
xchg
adc
adc
pop
popa
adc
hlt
cmpsl
lret
data16
js
xor
push
lods
push
push
adc
push
insb
mov
fidivs
rolb
aas
sbb
xor
imul
sbb
pop
mov
adcb
mov
popf
sbb
rcll
push
mov
xchg
in
jae
xchg
daa
movl
jg
js
lahf
and
dec
pop
xchg
pop
inc
xchg
jbe
push
rol
inc
mov
cmp
pop
and
mov
fbstp
ret
push
loope
cli
add
cs
insl
and
ja
shll
cmp
movsl
cmc
sub
pop
popa
fs
mov
add
pop
mov
sub
and
sbb
movsb
addb
cmpsl
jecxz
xorl
lock
inc
jl
stc
push
xor
outsl
scas
outsl
adc
rorl
test
sahf
sub
lret
ret
lcall
popa
push
inc
dec
mov
xchg
in
add
lret
ret
push
or
inc
repnz
les
push
in
fisubrs
sub
cmp
stos
imul
adc
xchg
loope
mov
fsubs
pop
jnp
and
negl
mov
mov
mov
ss
out
pop
out
dec
xchg
pop
les
pop
jo
push
cmpsl
dec
std
and
addr16
jg
in
mov
leave
repnz
addr16
add
mov
xchg
sti
sub
dec
add
pusha
sub
cs
or
mov
icebp
lods
test
dec
pop
sbb
xor
adc
sbb
lret
sub
scas
dec
xor
xor
add
mov
sub
ret
bnd
add
cmp
jecxz
mov
cmpl
sahf
fmull
dec
ret
test
rcrb
lret
mov
add
cmp
stc
adc
out
jmp
popa
rorl
imul
repnz
aad
push
call
int3
mov
push
arpl
push
xchg
clc
mov
cltd
mov
jge
add
mov
ds
or
inc
out
mov
rcrb
addr16
cmp
ja
lods
xchg
inc
ja
pop
or
mov
mov
rcr
pop
in
cmp
fistpll
dec
xor
mov
lahf
rclb
repz
scas
cmpsl
sbb
pop
jne
mov
pop
sub
inc
mov
jp,pt
mov
aas
ret
sbb
hlt
sbb
mov
lcall
fildll
xor
cmp
fiaddl
xor
or
sti
es
inc
pop
sub
imul
ja
or
in
xor
inc
sub
xchg
cmp
mov
add
cmp
mov
pop
mov
mov
mov
mov
scas
and
mov
inc
loop
ljmp
in
das
outsb
pop
ss
or
pop
adc
cmc
dec
push
les
testb
sbb
dec
stos
dec
xchg
mov
subb
fs
cmp
mov
call
xor
pop
insb
out
jl
cmp
call
inc
mov
adc
arpl
loopne
push
shll
and
inc
cs
imul
sub
fwait
lds
jp
jle
imulb
mov
sbb
imul
pop
inc
aad
in
fadd
loop
fld
or
mov
add
inc
mov
or
mov
xchg
mov
fcomi
into
outsl
mov
lods
or
or
mov
ret
scas
xorl
repnz
into
push
sahf
nop
dec
popf
stos
add
pop
aam
clc
xchg
in
sub
push
arpl
ret
mov
loop
adc
mov
aaa
stos
cli
rolb
cmp
shlb
sbb
test
outsl
hlt
out
roll
inc
sub
jp
or
adc
dec
xchg
stc
pop
insb
xor
push
into
sbb
and
in
mov
pop
jmp
clc
cli
dec
xor
shl
xchg
xchg
mov
lds
lock
out
jno
xchg
clc
push
mov
mov
adc
mov
add
in
cmp
fs
and
out
jbe
mov
jo
fs
fnstsw
lahf
test
shll
dec
mov
popa
sbb
cs
sbb
xchg
scas
add
pop
adc
push
cltd
test
in
mov
mov
in
adcb
fsubrs
xchg
xchg
lcall
fidivs
dec
xchg
popf
xor
fidivrl
mov
dec
xchg
add
add
into
les
mov
sbb
mov
sti
jo
push
adc
or
js
sbb
jns
pop
lods
cmp
testb
shr
jb
in
rcrl
pop
xlat
jecxz
int
imul
adc
gs
jno
icebp
mov
pop
cmp
sbb
shrl
and
arpl
std
add
jae
xor
gs
cmp
push
cs
into
lret
xor
cmp
inc
inc
jae
cmc
cmp
sbb
jbe
fmuls
xor
xchg
in
fisubl
cmp
pop
or
xor
pop
inc
pushf
lds
jp
mov
movsb
jmp
mov
pop
in
ret
scas
loopne
add
fistps
aam
adc
mov
lods
cmp
mov
aaa
imul
out
test
jne
mov
aas
stc
mov
pushf
ss
jns
or
add
cmp
in
pop
imul
xchg
in
andl
lcall
inc
lods
sbb
lea
xor
cmp
xor
fidivrl
and
inc
ss
or
in
inc
cmp
subb
rcr
add
mov
cmp
cmp
arpl
mov
addb
add
loope
addb
jo
jmp
lahf
push
adc
pop
push
and
outsb
test
sbb
push
test
pop
push
mov
inc
or
insl
pop
fs
pop
push
divb
pop
mov
xlat
xor
jecxz
add
test
jecxz
ds
xor
add
add
out
xor
imul
or
int3
sub
mov
lods
adc
jmp
aad
mov
mov
jbe
inc
icebp
hlt
mov
pop
mov
mov
ret
xchg
sbb
pop
test
jmp
add
dec
push
mov
mov
idiv
xchg
xor
loopne
insb
mulb
fstps
je
xor
out
and
or
hlt
push
fimuls
test
sub
dec
or
fcomps
sti
call
mov
rorb
mov
mov
jmp
adcl
sahf
push
popa
sbb
inc
repz
lea
pushf
jae
sbbb
mov
jmp
mov
test
xchg
push
and
sub
loop
mov
or
fsts
pusha
push
imul
leave
ja
push
sub
sbb
js
sbb
frstor
mov
inc
cmpsb
jge
fdivrl
xchg
loopne
jnp
mov
adc
jmp
or
shl
jmp
das
idivl
mov
xchg
ret
ret
mov
hlt
add
and
add
pop
loope
mov
xchg
je
mov
mov
rcrb
js
or
sbbl
mov
mov
fdivrl
push
push
mov
jl
fnstenv
ja
adc
mov
or
sbb
cmp
testl
and
insb
aas
faddl
out
test
sub
dec
outsl
xchg
cmc
mov
sbb
inc
test
xchg
aas
pop
testb
or
sub
bnd
add
jl
pop
or
ret
lea
pushf
enter
inc
sarb
test
leave
mov
repz
xor
ds
sbb
pusha
stos
xor
sub
lods
mov
push
imul
movsl
pusha
outsb
sbb
cwtl
subl
fnstenv
adc
mov
push
mov
fildl
test
fcoms
data16
mov
lock
aad
shl
and
hlt
icebp
aaa
aas
xor
std
mov
stos
mov
in
not
call
into
adc
scas
jg
mov
push
pop
int
mov
xchg
test
jns
enter
in
imul
xor
pop
add
in
stos
add
mov
leave
outsb
popf
push
adc
and
sbbl
in
ja
sub
inc
ret
sbb
mov
jno
adc
into
loop
mull
mov
pusha
fistpl
fsub
inc
mov
add
add
repz
movsl
push
insb
jne
push
sbb
xchg
jbe
sub
cmp
popf
add
or
cli
or
mov
jmp
jecxz
fstpt
out
repnz
jmp
pop
cmp
pushf
inc
inc
sub
sti
imul
inc
xor
daa
pop
push
es
mov
push
pop
imul
sub
imul
dec
mov
pop
lcall
inc
mov
or
and
clc
and
xor
cmc
cmc
fnstsw
bound
std
in
mov
stc
pop
lahf
pop
dec
adc
imul
cld
push
fs
lock
sub
in
idiv
inc
das
xor
push
mov
cmp
or
mov
loop
xchg
out
aaa
mov
shrb
fisubl
rclb
cmp
pop
push
gs
sub
xchg
xor
and
aad
test
jle
mov
mov
sbb
pushf
xchg
lcall
add
xor
and
jmp
repnz
mov
insb
adc
pop
insl
in
outsb
hlt
push
lds
xor
add
adc
in
pop
adc
or
mov
adc
adc
adc
push
mov
in
jl
xor
sbb
cmpsb
and
mov
adc
or
sbb
ljmp
xchg
or
lds
jmp
inc
jg
out
sub
lret
dec
testb
ret
repz
cmp
out
clc
cmp
mov
or
in
pop
loop
sahf
mov
fdiv
pop
pop
inc
lahf
mov
dec
ds
sbb
stos
xchg
xor
push
push
push
lahf
push
leave
pusha
pop
adc
out
mov
lahf
and
daa
xchg
addr16
jo
inc
ficompl
or
bound
andl
iret
push
push
lcall
add
xor
lods
cmpl
rcrl
jb
or
dec
insb
inc
cli
js
pop
ja
and
iret
pusha
jge
call
popa
cmp
xor
stc
sub
cmc
sub
xchg
out
js
ror
in
dec
push
outsl
dec
or
cltd
cmovg
out
js
push
clc
and
in
jo
loopne
lcall
jp
outsl
sti
push
jbe
adc
pop
std
dec
lret
xor
and
jbe
inc
and
mov
sub
in
xor
pushf
cmp
jne
aaa
lock
sub
inc
addl
dec
adc
push
lcall
mov
xchg
sbb
mov
popf
jl
subb
mov
dec
addr16
sarb
mov
xchg
and
xchg
or
jo
jno
mov
cmpsl
mov
nop
lret
cmp
or
jns
push
roll
fstps
jbe
dec
pushf
inc
push
adc
add
pop
sti
test
mov
gs
xor
call
or
jge
adc
cwtl
dec
mov
and
jmp
nop
call
loopne
and
aaa
dec
fwait
pop
jecxz
cmpsb
pop
movsb
and
popa
sbb
mov
lea
popw
mov
shrl
lahf
iret
lea
jmp
stos
mov
js
leave
cmp
jecxz
jb
add
inc
inc
xchg
jle
add
addr16
addr16
and
inc
out
cmp
loopne
aas
stos
fwait
loopne
xor
cmp
inc
mov
pop
sub
mov
inc
cli
xchg
imul
iret
sbb
adc
xor
scas
fdivrs
hlt
pop
in
js
roll
push
sbb
inc
movsb
aaa
xor
fs
in
inc
cmp
es
lret
push
dec
add
mov
test
xchg
xchg
dec
arpl
mov
cltd
rol
push
int3
out
mov
outsl
inc
pop
mov
into
test
stc
jg
inc
aas
sub
rcl
movsb
xor
cs
and
jmp
dec
shrb
mov
xor
fisubrl
xchg
nop
out
push
test
aas
xor
gs
in
addl
stc
dec
movsb
aaa
mov
clc
insl
or
test
mov
mov
xor
pusha
out
aad
pop
js
xchg
test
dec
lds
and
ss
clc
inc
adc
add
jbe
pop
rorb
inc
dec
popf
mov
mov
mov
dec
stos
and
mov
xor
int3
xlat
jno
sub
adc
mov
scas
dec
xor
movsl
out
sub
push
into
add
xor
imul
das
out
fcompl
jl
cmp
adc
mov
hlt
push
sub
out
push
or
xor
pop
aam
fstl
sub
push
xchg
jg
inc
rorb
xchg
aam
push
sub
jmp
mov
jno
or
mov
inc
cltd
dec
adc
cs
outsl
fwait
jmp
lds
addr16
js
shll
ljmp
std
enter
push
mov
in
cmp
lea
cmpsb
or
pop
pause
stos
inc
cmp
pop
pop
ror
push
xchg
or
cmp
rolb
leave
rcll
ss
xchg
and
mov
hlt
lods
push
gs
sub
shrb
jp
fisttps
push
loope
testl
add
outsl
insl
and
add
adc
fcmovu
and
data16
ret
les
pushf
lods
pop
xchg
and
arpl
inc
and
cmp
mov
int3
sbb
mov
pop
inc
push
addl
test
outsl
popa
push
out
mov
mov
das
fsubl
enter
insb
pop
pop
aaa
dec
mov
testl
adc
or
addb
jno
aas
xlat
imul
adc
xor
daa
push
hlt
push
nop
xchg
mov
sub
test
lcall
xchg
leave
mov
pop
xor
mov
cmc
push
test
fisttpl
movsb
push
inc
pushf
sahf
aam
adc
mov
rcrb
mov
adc
or
loope
ds
push
jo
fisubl
dec
dec
push
jo
mov
fisttpll
mov
pop
nop
out
jbe
inc
mov
or
jmp
jo
addl
inc
sahf
out
stos
shlb
fwait
sub
aad
aaa
shlb
test
inc
xchg
mov
pop
mov
mov
std
xlat
adc
cmpsl
xor
std
sbb
mov
and
mov
pop
out
mov
gs
loope
fwait
push
popl
pop
cmp
adc
pop
call
mov
mov
adc
loop
repz
lret
icebp
les
and
sahf
movsb
push
and
mov
ja
shrb
sarl
mov
inc
inc
popf
mov
mov
ljmp
push
push
or
xchg
xor
add
mov
xor
fs
daa
dec
ret
push
ror
pop
mov
daa
pusha
cwtl
enter
mov
lea
js
int
sahf
add
enter
aas
int3
scas
inc
mov
sahf
mov
aaa
jp
xchg
adc
adc
inc
sahf
imul
out
adc
jnp
cs
fcmovne
cmp
jp
sbb
jo
mov
enter
arpl
mov
daa
xchg
dec
insl
test
pop
je
mov
lods
inc
iret
shl
mov
lock
mov
mov
ret
dec
pop
andl
and
add
mov
clc
jne
sbb
cmpb
popf
scas
insl
mov
dec
sbb
repz
dec
jle
mov
cmp
icebp
jl
push
dec
xor
daa
popa
or
rcll
and
das
sub
xor
cmp
jmp
aas
push
mov
arpl
divl
dec
daa
icebp
in
sub
inc
fs
adc
stc
sbb
sbb
xchg
or
pop
inc
es
cwtl
xor
lret
push
lcall
jno
out
addb
fnstenv
sbb
lock
push
pop
out
add
out
sahf
mov
aaa
pop
scas
outsl
icebp
mov
mov
and
lods
je
xchg
pop
pop
int3
cmp
mov
push
into
jp
jmp
ja,pt
in
jge
fidivrl
or
or
xor
push
mov
jo
test
lahf
out
fs
in
jne
inc
lock
bound
push
leave
dec
sub
adc
jb
jecxz
xlat
add
dec
mov
frstor
jne
pop
repz
dec
push
dec
inc
pop
je
sub
inc
mov
xchg
out
stos
mov
sahf
sbb
sbb
shl
xchg
cmp
les
insl
dec
scas
dec
rcrb
mov
push
pusha
mov
sbb
cmpsl
movsb
add
and
pop
adc
das
pop
jbe
sbb
mul
nop
mov
ljmp
adc
int3
fnstcw
push
stc
inc
jae
fstpt
sbb
scas
jge
hlt
adc
jecxz
test
cmp
adc
aad
loop
cli
sub
ljmp
pop
paddsb
sbb
xchg
push
out
out
aam
inc
mov
jbe
pop
mov
jmp
mov
pop
sbb
daa
fldenv
xlat
jp
inc
dec
sti
lds
nop
xchg
lret
mov
cmp
inc
sub
and
mov
out
clc
sbb
arpl
mov
pop
sbb
mov
and
jle
lock
dec
pop
adc
ss
inc
xchg
scas
push
in
jmp
xor
shrb
icebp
das
push
pop
fmull
mov
fiaddl
jmp
pop
mov
int
icebp
dec
sbb
push
inc
adc
mov
cld
out
aaa
lret
mov
lahf
fs
mov
jb
add
cs
fwait
mov
sarl
adc
int
or
dec
cmp
jge
das
in
and
push
test
cmp
sahf
js
std
pop
aad
sub
imul
and
mov
dec
and
xor
popa
ds
std
dec
sub
loop
and
aas
or
pop
out
sub
in
shll
dec
rcrb
pushf
test
fmull
into
aad
arpl
add
in
cld
jo
aam
mov
sti
cmpsl
xchg
js
jl
scas
jg
pushf
inc
adcb
divl
not
lret
mov
jnp
add
notb
push
jbe
sbb
shr
or
dec
addr16
in
mov
movsl
psubb
mov
push
cs
enter
mov
cmp
dec
push
sbb
fists
loopne
sub
dec
lds
dec
sbb
jne
fwait
mov
jbe
loopne
fbld
mov
add
fidivrs
in
dec
dec
push
addl
mov
add
fsubrl
dec
mov
mov
scas
out
jg
pop
sub
daa
cli
add
cmpsb
int
setb
cmp
jl
and
cmp
xlat
decl
dec
jmp
inc
mov
jl
test
mov
sbb
pop
lcall
and
subb
mov
xchg
in
mov
rclb
sar
pop
push
push
jns
pop
testb
cmp
pop
xchg
xor
cmpsl
lea
mov
inc
in
clc
int
push
les
pop
outsl
pop
adc
sahf
lods
inc
int3
clc
insl
push
dec
fwait
repnz
ljmp
sub
push
xor
sub
pop
add
jnp
fwait
movsl
sub
push
fisttpl
cmp
test
clc
xor
das
xor
mov
inc
mov
mov
cmpsb
xchg
lahf
xor
in
loopne
or
dec
sbbb
movsl
add
popa
rcr
mov
dec
inc
ljmp
xchg
and
add
in
sub
mull
xchg
cli
iret
mov
shrl
and
in
out
push
les
lret
pusha
adc
adc
dec
call
mov
xor
xchg
daa
ret
mov
daa
cmp
mov
jle
cltd
in
scas
sbb
idivb
gs
fcoms
mov
out
test
out
pop
dec
xor
xorl
jbe
stc
stc
add
xchg
lods
cltd
xchg
pop
dec
js
dec
movsb
out
out
dec
sub
push
mov
lret
out
mov
orl
jns
jl
jl
mov
push
jp
mov
faddl
adcb
pop
mov
mov
mov
cmp
fstpl
xchg
insb
mov
aaa
push
ds
lcall
hlt
out
jmp
adc
jp
loope
mov
push
inc
lea
mov
arpl
fs
fstl
inc
or
mov
aam
mov
jge
adc
sbb
ljmp
inc
add
fwait
stc
cltd
clc
sbb
pop
popa
jle
mov
lock
sbb
push
ds
sbb
js
andl
fmull
rcll
outsl
jecxz
mov
sbb
dec
xchg
outsl
mov
out
shll
dec
cli
mov
push
in
jns
int
out
int3
and
or
or
mov
mov
fildll
out
and
daa
jae
outsl
and
xor
dec
ss
xchg
imul
testb
popf
push
inc
and
sbb
ror
mov
leave
and
out
sub
xchg
std
outsb
fimull
test
pop
fiaddl
add
jmp
setl
pusha
xchg
in
dec
lret
mov
int3
push
mov
jne
inc
bnd
int
mov
roll
dec
add
icebp
xorb
sbbb
add
addr16
jo
int3
push
and
bound
jecxz
push
lea
jmp
or
dec
stos
icebp
mov
xchg
icebp
pop
fsubl
or
inc
and
mov
in
mov
push
dec
cli
popa
idiv
inc
jnp
xor
mov
sbb
pop
lcall
inc
jg
js
mov
adc
ret
lea
inc
xchg
jecxz
sub
jbe
mov
xchg
xlat
stos
sbb
jns
ss
inc
mov
fsubrs
mov
fiaddl
cmpsl
xchg
loope
loop
cmc
movsb
or
aad
sar
mov
xor
test
clts
mov
loop
subl
fwait
out
div
inc
scas
hlt
repnz
cmc
cwtl
xor
pop
jb
rol
shlb
arpl
dec
cs
lahf
sbb
mov
in
movb
inc
mov
cmp
cmp
adc
or
rcrl
xchg
das
push
inc
pop
ret
push
sbb
test
pusha
or
cmpsl
mov
loop
test
lock
sub
jnp
mov
in
mov
stc
ljmpw
in
mov
and
jge
lahf
orl
or
cmpsb
jl
jbe
rolb
pop
leave
xor
pop
jmp
push
jmp
dec
lea
test
mov
adc
cwtl
cltd
ja
loop
jae
in
lcall
out
xchg
mov
sti
sti
fstpl
test
mov
clc
xchg
in
inc
in
cmp
push
jne
xchg
cmp
or
push
mov
nop
in
add
ljmp
test
lea
and
push
mov
xchg
xor
add
adc
in
fwait
xchg
mov
and
insb
xchg
xchg
mov
add
fwait
adc
pop
add
fwait
sub
adc
sti
repz
adcl
lock
lahf
ret
sub
cmp
fwait
xchg
xchg
testl
sahf
xor
mov
add
pop
rcrl
xchg
push
aad
mov
jp
jno
add
xchg
loop
mov
test
testb
stos
fs
addl
xchg
xor
je
ficoms
ds
mov
lock
mov
push
push
sbbb
mov
jge
push
dec
cmc
lods
jne
pushf
inc
inc
xor
xor
or
ds
imul
icebp
or
inc
dec
sbb
loopne
push
pop
hlt
mull
movsb
mov
cmpsb
shr
mov
push
js
add
fildl
pop
inc
jg,pt
inc
incl
fstps
and
mov
fmul
sub
in
movsl
inc
das
sub
lar
pop
outsl
adc
rclb
sbb
mov
std
jg
or
fs
push
orb
dec
movsb
mov
call
pop
mov
repz
lods
jmp
repz
frstor
pop
mov
rcl
cmpl
push
fs
mov
jae
loop
inc
dec
les
shlb
fcmovnbe
inc
mov
movsl
push
push
mov
stc
inc
mov
loope
inc
cld
ds
pop
movsb
sub
pop
xor
leave
pop
sbb
and
popf
out
fwait
fwait
mov
push
and
jne
mov
xor
add
cltd
into
loope
lahf
scas
repz
insl
ret
fsubs
push
or
pusha
lods
sarb
mov
mov
cwtl
loopne
fcmove
sti
les
push
idivl
repz
lea
std
and
jae
mov
mov
leave
adc
xchg
sahf
aas
cltd
xor
adcl
cmp
sbb
sbb
push
sub
pop
test
sbb
inc
je
ficoms
mov
jne
add
aaa
insl
or
ret
sbb
pop
push
imul
fcomp
mov
add
stos
sbb
fimuls
daa
adcb
in
ret
arpl
sahf
clc
loop
lret
adc
jbe
dec
push
sub
pop
cltd
ret
out
jb
push
into
fninit
push
push
xor
inc
jb
and
mov
push
or
cmc
jg
push
jmp
pop
push
lret
rorl
jnp
or
xor
and
in
mov
lcall
sub
stos
imul
ss
or
push
mov
aam
cmp
inc
xor
dec
cmpsb
jmp
inc
cltd
jnp
inc
popf
push
push
dec
fstps
popa
stc
leave
das
loope
das
xchg
lods
dec
hlt
lret
test
test
decl
js
les
mov
sub
into
test
mov
mov
jb
sar
pop
sbb
xchg
inc
jp
push
mov
jle
fmulp
repz
sub
pop
adc
and
jbe
aas
push
fisttps
mov
ret
sub
pushf
mov
test
lods
push
hlt
jmp
jae
test
pop
test
xor
lahf
fisubrs
fs
jnp
push
mov
add
push
lret
push
pop
enter
cwtl
movsb
and
xchg
insb
test
je
rcrb
js
movsl
mov
push
stos
jae
pop
mov
sbb
test
mov
jnp
sub
loope
stos
sbb
inc
aam
aad
in
into
push
and
nop
dec
das
clc
fildll
mov
imul
xor
pusha
inc
cld
insb
or
mov
mov
dec
push
mov
cmp
bound
push
jecxz
and
lret
rorb
mov
cmp
test
fistpl
dec
pop
mov
mov
adc
pop
enter
dec
jge
adc
scas
mov
enter
fisttpl
cwtl
or
mov
xor
mov
popa
cli
leave
jge
mov
fisttpll
pop
gs
mov
cmpsb
jne
pop
cwtl
dec
push
test
inc
sub
xchg
xor
les
or
out
sbb
adc
sbb
fbld
or
outsl
pop
lcall
cmp
mov
pop
xchg
push
sbb
pop
sub
dec
sub
jmp
jne
loopne
mov
imul
aas
jmp
jl
xchg
or
ret
xchg
cwtl
pop
dec
or
sahf
ficomps
repnz
mov
inc
leave
pop
pusha
jp
xchg
pop
lods
xorl
lds
xchg
les
iret
dec
clc
or
lods
or
cmp
idiv
jmp
loope
lds
cwtl
ljmp
filds
pop
stc
icebp
push
jg
sbb
push
add
daa
adc
cli
xor
sbb
or
push
pop
sub
in
and
shrb
pushf
ret
sub
or
inc
jnp
or
xchg
out
pusha
sbb
mov
jg
xor
dec
leave
pop
icebp
dec
les
leave
cs
gs
mov
or
ret
movsb
inc
test
loopne
cli
mov
fbld
fisttpll
mov
mov
lods
xor
rcll
je
les
jg
rorb
lods
adc
in
push
lahf
xlat
ss
mov
push
insl
fmuls
xor
mov
pusha
call
and
ror
mov
xchg
cmp
cld
xchg
pop
push
jnp
push
test
inc
mov
movsb
mov
mov
or
pop
pop
addl
mov
das
les
dec
pop
lock
jb
dec
mov
dec
xor
xor
mov
cs
stos
xchg
into
out
mov
inc
inc
ja
ja
mov
jno
push
cmp
mov
pop
push
pop
or
lret
aas
mull
or
pop
mov
push
sahf
into
mov
iret
test
mov
fcoml
mov
enter
icebp
rcll
sti
cs
dec
sahf
dec
dec
call
xor
add
pop
lahf
adc
leave
sub
jo
add
mov
sbb
jns
pop
cltd
jae
lods
xor
inc
fstpt
jp
clc
jo
mov
mov
insl
frstor
push
loopne
stos
lods
shll
arpl
fstl
push
mov
ret
push
xor
stos
je
xor
es
in
xor
adc
shll
and
in
jae
fidivrl
adc
lcall
test
loope
ret
fisubrs
push
imul
pop
int3
ret
sub
cld
mov
aad
push
shll
adc
inc
sahf
xchg
movsbl
data16
movsb
inc
sbb
sbb
cwtl
mov
and
scas
movsl
in
inc
es
mov
fs
data16
das
pop
pop
leave
vhsubpd
sub
mov
jle
insb
pop
mov
jg
frstor
adc
jo
loopne
fcmovne
je
sub
push
shl
inc
adc
jge
out
rcr
js
sbb
xchg
push
or
inc
es
iret
fldcw
stos
in
loop
and
add
hlt
mov
or
out
add
mov
ljmp
xchg
xor
mov
push
lock
js
adc
test
push
nop
scas
out
dec
shrb
push
arpl
repnz
mov
and
mov
adc
mov
pusha
dec
cwtl
mov
adc
lods
mov
adc
loope
push
std
adc
bound
inc
cltd
add
sbb
bound
mov
rorl
movsl
sbb
dec
jecxz
push
int
test
ljmp
cmc
ss
push
gs
mov
lcall
call
pusha
jl
xor
repz
rclb
adc
repnz
push
inc
cmpsb
subb
jae
cli
decb
mov
sub
jae
fs
push
inc
mov
pop
jns
pop
int3
in
sub
dec
iret
faddl
or
xlat
clc
sub
jmp
cmp
lret
cmc
mov
cmp
jns
inc
stc
lods
xchg
jecxz
addl
pop
xchg
jg
test
cmpsb
inc
shlb
in
add
or
adc
lcall
es
mov
jns
dec
popf
push
push
mov
enter
xchg
jne
call
sbb
mov
jno
xor
das
inc
sbb
mov
mov
cmc
stc
push
dec
sub
sub
dec
sub
xlat
add
aas
jbe
scas
inc
xlat
mov
aas
mov
andl
jo
ficomps
xchg
mov
push
adc
xchg
jp
ret
cmp
push
cmpsl
mov
sahf
cmp
stos
mov
pop
and
inc
sub
or
dec
pop
sbbb
add
fildl
pop
pushf
jne
mov
mov
pop
add
dec
sub
and
dec
dec
dec
fsubl
jae
sbb
mov
bound
dec
mov
repz
popa
dec
mov
inc
jno
adc
out
pop
lret
add
mov
xchg
and
jmp
sbb
jecxz
add
sub
mov
cmovbe
test
and
dec
lock
pop
popf
fisubl
in
idivb
andl
cmpsb
enter
ss
pop
fbstp
or
outsl
outsb
bound
test
mov
into
push
imul
popf
dec
adc
bound
or
mov
in
pop
fs
in
stos
cmp
leave
dec
mov
mov
cmpsb
mov
mov
cmp
imul
mov
arpl
mov
daa
outsb
pop
sub
xor
pusha
in
adc
aas
mov
insl
scas
jo
jp
add
inc
and
inc
dec
popa
cli
imul
adc
scas
xor
jp
xorps
pop
imul
mov
sbb
inc
jno
jmp
and
push
sub
inc
pushf
daa
sub
cmpsb
int3
scas
mov
repnz
sub
aad
ds
outsb
negl
pushf
sub
orb
scas
mov
and
mov
jp
push
pop
aaa
pop
xorl
loop
js
xchg
pop
sub
mov
pop
call
clc
testl
jp
fisttps
cmp
sbb
sti
ljmp
scas
push
repz
mov
xor
fdivr
popf
or
jge
push
push
pop
xchg
clc
notb
sbb
stos
jge
pop
imul
dec
inc
into
lds
inc
cmpsb
mov
ret
dec
mov
xchg
fs
and
dec
cs
das
pop
pop
add
orl
adc
sub
and
lret
test
ret
call
repz
ret
sub
shlb
pop
mov
ss
pop
div
fistl
inc
pop
scas
xor
push
mov
gs
lds
or
fstpl
outsl
addl
jne
vmovhpd
stc
scas
sti
icebp
je
xlat
xchg
dec
stos
xor
ljmp
pusha
cmp
icebp
int
lea
xchg
fstpt
mov
add
pop
mov
cli
fdivrl
loope
int
cld
fs
mov
jmp
je
jg
mov
ss
mov
cmpsl
fstpt
jns
cmc
cmpsb
cmp
popf
fimuls
dec
mov
xorb
mov
int3
icebp
das
rcrl
inc
mov
inc
mov
fmulp
push
pop
lcall
sub
je
adc
fisttpll
sbb
jns
roll
stc
hlt
shrb
dec
jg
mov
jmp
sarb
stos
lret
or
andb
outsb
xor
cmp
dec
scas
dec
jmp
and
fmull
jo
mov
add
cmp
pop
aas
lds
pop
divl
adc
mov
xchg
or
cmp
andb
stos
test
or
aaa
cmp
jb
movsl
popa
cs
and
pop
jbe
adc
inc
pop
aam
in
xor
mov
movsb
xor
loop
in
test
xor
icebp
push
or
dec
shrb
jo
in
cwtl
repz
mov
int3
xor
xor
jp
inc
out
mov
bound
icebp
mov
fiadds
jmp
sbb
jns
arpl
dec
lea
div
xchg
rcrb
dec
inc
stos
les
jle
push
and
lea
dec
stos
dec
lods
popf
sti
imul
inc
sub
adc
adc
push
les
fmuls
es
cmp
rclb
rolb
stos
aaa
adc
scas
xchg
pop
jns
cmp
outsb
and
das
stos
cwtl
rclb
rorl
sarl
jmp
jle
test
push
jb
sub
mov
bound
sahf
jne
push
mov
mov
and
std
xor
adc
jns
movsl
ja
adc
mov
jg
andb
push
repnz
out
push
mov
popa
fdivrl
xchg
push
test
in
xchg
faddl
xor
and
mov
cmp
out
rclb
hlt
pop
mov
lcall
loopne
mov
sub
dec
imul
scas
mov
scas
push
xchg
dec
pop
mov
icebp
nop
jmp
pusha
daa
adc
mov
jne
fs
stos
sub
push
mov
and
in
mov
mov
adc
fwait
test
mov
inc
dec
or
fimull
mov
jne
jno
movsl
lea
sbb
lods
imul
dec
pop
cwtl
jbe
mov
inc
in
in
adc
sbb
pop
mov
daa
inc
rol
fbstp
adc
stos
loop
dec
mov
js
mov
sti
fsubs
and
shll
cmpsl
jecxz
fisttpll
xchg
add
mov
jb
ja
sbb
xor
sbb
adc
or
push
lods
fnstsw
push
and
jp
mov
testb
das
add
push
xchg
stc
imul
aad
pushf
mov
pop
lea
add
jge
call
mov
clc
insb
sbb
cli
ja
test
add
je
mov
popf
sub
mov
cli
jp
jmp
push
xchg
push
or
test
in
gs
sbb
or
or
xchg
mov
mov
mov
jne
sub
pop
push
out
adc
test
cmp
mov
pusha
add
pop
lea
leave
jmp
fimuls
adc
push
dec
in
test
cltd
push
ds
inc
lds
out
test
pop
sbb
ljmp
dec
jge
fdivr
mov
jl
dec
jecxz
or
mov
andb
gs
dec
xlat
push
xor
pop
xchg
les
aad
iret
sub
ret
cli
mov
dec
xchg
psllq
popa
push
lea
sbb
jnp
and
iret
and
jge
sbb
fidivrs
repz
jp
cwtl
mov
sub
push
and
jp
mov
dec
pop
add
or
dec
lods
rolb
in
mov
add
inc
dec
xchg
in
ret
sbb
adc
ret
dec
xor
mov
fdivp
call
dec
dec
icebp
icebp
and
push
push
sub
cmpl
and
repz
iret
xor
stos
pop
les
mov
cmp
sub
mov
xchg
lock
sub
cmp
pop
cmp
ret
ljmp
mov
inc
subb
dec
test
sahf
rolb
pop
addr16
loopne
sub
repnz
data16
shr
or
cmp
cmp
mov
adc
mov
add
ss
inc
sbb
fisubs
test
cmp
mov
inc
cmp
dec
xlat
xchg
addr16
xchg
fiaddl
pop
lea
fbld
push
insb
xchg
add
push
jg
fucomip
stos
stos
fwait
nop
xor
inc
and
jo
imul
mov
inc
fimuls
push
into
loope
adc
pop
fcmovu
int3
sbb
mov
mov
test
call
add
mov
out
mov
out
xor
jge
das
flds
shl
sbb
add
inc
jle
jecxz
stos
jecxz
shl
or
cs
jo
ja
push
fists
push
stc
data16
pop
mov
out
idivl
mov
arpl
mov
dec
outsb
sub
jb
and
xchg
and
cmc
cmp
shrb
xchg
test
faddl
adc
push
sub
sub
sahf
sbb
adc
cmc
xchg
js
push
xchg
pop
inc
cmovg
cwtl
push
jge
inc
nop
and
cs
lds
adc
inc
icebp
add
mov
push
pop
fwait
inc
push
xchg
pop
push
and
cmp
pusha
xchg
lea
ret
mov
cld
or
les
mov
cmc
rep
clc
pop
lahf
movsb
fdivrl
popf
jl
insb
movsl
imul
jge
fildll
ljmp
jg
lods
xor
rclb
or
add
cwtl
adc
out
push
daa
push
hlt
lcall
pop
cmpsl
sti
xor
jbe
dec
push
xchg
mov
les
fisubl
sti
mov
mov
lods
rcrl
js
popa
xor
mov
jle
push
pop
pop
es
sbb
loope
mov
pop
pop
jnp
in
jb
es
mov
adc
ficomps
lds
push
mov
fcmove
cld
fstp
daa
cmp
dec
test
jns
test
popa
testb
sbb
or
test
out
stos
jno
xlat
imul
push
mov
or
and
leave
cltd
ljmp
dec
roll
mov
pop
popf
jle
repnz
rorb
orb
push
or
pop
mov
cmpsb
push
or
ss
out
pause
addr16
push
mov
push
fcompl
push
cmpsb
add
out
fs
and
jmp
mov
sbbb
or
push
mov
inc
lea
push
ficoml
push
xchg
or
jns
rorl
ftst
xchg
push
mov
int
push
pop
fisttpl
add
jae
sahf
ret
lcall
enter
mov
mov
loope
cmpsb
add
fwait
shrb
repnz
mov
jns
sbb
test
repz
orl
into
les
lcall
pop
scas
jl
and
inc
dec
or
lcall
xchg
int
in
mov
add
shl
cmpsl
xor
insb
mov
pusha
jp
icebp
mov
outsb
std
push
lcall
mov
mov
stos
subl
sbb
or
lods
push
sub
in
or
inc
lds
movsl
adc
jmp
adc
push
cmp
and
icebp
dec
dec
loop
mov
mov
movsb
pop
andl
mov
xchg
rorl
xor
cld
mov
and
out
lea
das
mov
sub
stc
and
mov
es
in
test
push
cmp
mov
mov
sbb
aaa
cs
mov
enter
dec
scas
cmp
cwtl
push
sub
sti
ret
imul
inc
cmp
les
sti
pop
cmp
add
outsb
mov
sbb
clc
xor
mul
mov
lcall
xchg
push
sbb
ret
mov
and
rcr
stos
lret
pusha
gs
adc
roll
pop
sti
adc
aaa
mov
cmp
lods
or
mov
pop
sbb
dec
sbb
mov
repnz
mov
pop
jno
mov
or
push
fdivl
lods
add
int
jno
xor
fcomi
sub
js
mov
mov
rorl
adc
and
and
lret
push
lcall
xor
mov
test
jl
xor
out
and
push
movsl
push
cmpsb
cmpsb
negb
cwtl
and
xor
push
pop
in
fcompl
cmpsl
cwtl
daa
mov
mov
loope
or
sarl
call
mov
mov
notl
jp
jmp
sub
mov
cs
lea
call
or
aas
sbb
insb
addr16
mov
add
insb
movsl
fistpl
leave
shl
fisubs
lahf
and
fists
clc
loopne
sub
adc
pop
test
bound
jnp
addr16
xor
xchg
ret
mov
and
lcall
fisubrl
cmpsl
mov
mov
push
sbb
jmp
pop
sbb
icebp
sbb
fsubs
and
clc
andl
push
sub
movsl
cmp
jb
hlt
xor
repnz
lods
push
cs
icebp
adc
cs
lret
push
in
or
dec
fsubrl
cmpl
inc
and
bound
adc
dec
or
lret
xchg
xchg
testl
fs
pusha
push
dec
out
jb
xchg
std
jp
mov
cwtl
jmp
xor
pop
dec
pop
cld
test
cmpl
loop
hlt
iret
or
data16
sub
aas
insl
jg
jmp
fistpl
pop
scas
scas
dec
rep
sub
or
or
mov
dec
mov
sub
out
sbb
jge
cmp
loopne
mov
fnstcw
lret
pop
jo
xchg
or
cwtl
inc
jmp
data16
sub
jo
dec
dec
push
mov
xlat
and
shlb
xchg
inc
lret
dec
xchg
and
sahf
jl
xor
push
dec
pop
aas
add
outsl
sahf
popf
call
and
inc
jp
fimuls
and
cmp
lcall
fiadds
subl
in
clc
sub
test
inc
jno
aad
add
push
inc
clc
xchg
or
mov
hlt
cli
divl
pop
sub
dec
cmpsl
stc
in
test
iret
insb
sub
and
push
mov
jecxz
add
cli
and
sysenter
lcall
push
xor
mov
dec
xor
add
or
sti
movsb
inc
mov
mov
bound
jle
sbb
push
mov
in
call
jbe
push
call
mov
rol
cmp
out
hlt
das
mov
mov
xchg
xlat
popa
jnp
or
xchg
add
icebp
inc
push
push
imul
and
scas
or
pop
inc
mov
cmp
inc
mov
or
and
stos
xor
test
lock
sarl
pop
dec
xor
push
or
push
stos
push
cld
xor
shr
push
xor
mov
xchg
inc
cmc
mov
mov
jmp
pop
jecxz
mov
out
cmp
and
dec
mov
cs
imul
cmp
cs
jo
rolb
fildl
out
test
mov
lahf
lret
cmp
test
pop
cmp
aaa
jnp
stc
test
xor
push
sub
je
sub
jp
addr16
mov
cmp
mov
inc
cmpl
add
lods
pop
sub
jo
ret
jo
in
cmp
cmp
cmpsb
sbb
dec
sbb
lea
xchg
jmp
push
xor
mov
push
scas
shl
and
hlt
cmp
ss
addr16
arpl
mov
js
dec
test
xor
je
out
mov
pandn
in
or
or
repz
scas
and
sbb
data16
sub
and
pop
and
mov
loop
loop
insl
subl
scas
add
jo
je
sub
inc
mov
ret
sti
push
test
test
mov
pop
add
mov
push
fistpll
cmc
dec
shrl
inc
jnp
loop
sbb
ret
sub
mov
iret
jnp
lds
jp
dec
or
xchg
sub
lock
jecxz
inc
pop
aas
or
inc
xor
mov
scas
es
jno
movsl
lods
jb
sub
adc
cmpb
loop
repnz
push
ja
add
mov
lea
dec
fisttpl
pop
stos
cli
xchg
imul
push
sub
stos
lahf
mov
and
test
and
jnp
and
pop
jnp
lret
xchg
adc
or
sbb
xchg
sbb
pop
xchg
dec
add
xchg
jle
pop
stc
xchg
pop
adc
xchg
ljmp
and
xchg
ja
ja
fs
enter
test
enter
mov
xchg
orl
data16
dec
test
lods
outsl
mov
call
cmp
xor
mov
sbb
sti
xor
out
and
push
rcrb
sbb
gs
xor
cltd
roll
out
dec
inc
push
test
es
jmp
and
jle
gs
dec
les
aas
push
cmp
sbb
fstps
roll
int
jbe
mov
icebp
popf
fisubrl
rcl
push
outsb
psubb
sub
andl
cmpsl
lock
cli
cld
sbb
insb
adc
dec
cwtl
xor
mov
add
icebp
clc
shr
repz
jns
scas
faddl
je
enter
testl
mov
mov
mov
push
imul
pop
and
dec
das
shlb
addr16
pop
mov
aad
mov
loopne
pop
ss
lahf
mov
and
setb
jae
add
mov
enter
repnz
or
cmpb
push
rcll
xabort
out
lcall
adc
ljmp
add
aam
sub
lcall
loopne
xor
or
lcall
xorl
pop
mov
pop
cmp
movsl
jg
icebp
xchg
test
es
jo
xchg
cmpsb
lds
push
rorl
mov
mov
pop
dec
inc
sub
xchg
xchg
or
scas
adc
loopne
mov
sbb
cwtl
inc
lret
mov
rcrb
adc
xchg
icebp
mov
pushf
inc
lds
test
dec
repz
mov
and
cli
pusha
sbb
js
test
jno
inc
pop
mov
popf
lcall
outsl
mov
out
sbb
sbb
lods
loop
ret
ljmp
and
pop
or
adc
pop
adc
mov
divl
jle
mov
icebp
stos
std
xchg
fisttpl
push
mov
mov
lds
jp
sbb
aas
loopne
pop
mov
pop
jae
dec
lcall
cmp
push
pop
mov
xchg
fidivl
lcall
lahf
mov
orb
inc
in
xor
adc
add
mov
pop
lahf
popf
mov
cltd
lods
js
out
aad
fnstsw
mov
jns
sbb
mov
adc
popf
push
mov
jne
adc
xor
imul
inc
mov
dec
sbbl
cmc
sub
dec
or
loope
or
cmpsb
add
or
dec
ja
jle
sub
inc
cmp
add
xor
sbb
divb
outsb
lea
push
insl
pop
addr16
jbe
mov
add
outsl
mov
loop
dec
mulb
cmpsl
shr
jbe
push
shlb
cmp
xchg
faddl
leave
cltd
add
push
jl
xchg
test
jno
inc
bound
stos
es
and
mov
or
leave
mov
pop
dec
test
jae
add
mov
rol
adc
lock
cmpsb
jbe
jge
push
jae
loop
lret
xchg
add
out
lds
es
cmp
mov
rcrl
call
in
cmp
mov
scas
loope
pop
ja
into
mov
stc
imul
setb
cmp
push
sti
mov
add
or
cld
roll
pop
push
jecxz
jae
icebp
mov
cld
in
sar
testb
jo
scas
sub
imul
lds
scas
mov
fiadds
or
adc
push
shl
insl
movsb
loopne
xor
xor
pop
in
xchg
push
icebp
loop
test
fistps
xor
mov
mov
test
cmpsb
inc
das
pop
inc
push
push
rcrl
fwait
pop
push
dec
inc
sub
scas
fsubr
lods
mov
jg
inc
fsts
lret
lcall
mov
push
scas
xchg
or
pop
jno
jmp
mov
shrl
jmp
je
jge
daa
sahf
adc
xchg
int3
jnp
test
xchg
push
ret
into
pop
jb
add
lret
je
sahf
cmp
push
decb
cmc
psubsw
sub
or
fnstsw
add
test
xchg
xchg
test
mov
repz
mov
mov
jecxz
les
adc
out
adc
in
push
sahf
inc
push
adc
xor
psubb
fidivrl
repz
mov
fs
and
inc
xchg
out
stos
mov
push
mov
into
mov
add
lahf
cmp
pushf
lods
mov
mov
push
pop
fwait
pop
adc
and
sub
mov
in
cmp
in
push
popf
aaa
cmp
in
xchg
mov
daa
mov
adc
shll
repnz
inc
xor
mov
mov
and
mov
cmp
or
jecxz
daa
sub
inc
adc
sti
xchg
lahf
outsl
push
fsubs
into
addb
bound
cs
ss
incb
jno
push
jl
ja
and
sbbl
jp
mov
testl
jne
push
inc
pop
test
call
jns
aam
addl
mov
in
adc
movb
jb
fsubs
adc
lahf
push
icebp
divb
push
frstor
lret
xlat
push
loop
jo
push
lock
in
aad
es
dec
dec
fisttpll
adc
mov
outsb
sti
adc
cmp
xchg
arpl
push
sub
mov
inc
pop
fwait
inc
add
repnz
pop
xchg
xor
xor
cmp
cli
mov
das
fwait
outsb
loopne
mov
ffreep
fwait
stos
aad
mov
cmpsb
xor
orl
daa
outsb
mov
dec
sahf
jge
lret
outsl
adc
fcompl
pop
mov
cmp
lahf
lds
cmp
ret
and
xorl
cmpl
nop
lahf
nop
pop
push
gs
push
out
cmc
xchg
xor
or
jp
dec
mul
add
scas
cmpsb
add
sub
fsubrp
jo
inc
sub
lock
inc
lods
js
dec
sbb
mov
or
clc
cmp
xchg
dec
add
fistl
negb
cwtl
mov
shrb
xor
xorl
out
rcll
out
pop
mov
scas
in
mov
dec
mov
inc
scas
lods
js
inc
jae
leave
dec
inc
nop
xchg
xchg
daa
in
loop
mov
test
insb
xchg
insl
dec
std
dec
cld
adc
mov
cs
mov
mov
xlat
aas
lods
aam
in
pop
push
add
sahf
adc
jp
mov
cmp
sbb
mov
push
ret
in
outsl
cmp
cwtl
loop
or
fisttps
dec
mov
xorb
cmp
into
repnz
xor
ljmp
dec
add
and
dec
and
movsl
ret
lcall
aas
jns
jp
aaa
or
je
data16
les
mov
push
xor
cmp
hlt
inc
data16
sahf
insb
movsl
sbb
inc
sub
out
neg
and
dec
lahf
pushf
flds
je
mov
dec
arpl
jo
mov
hlt
mov
mov
test
ljmp
aam
outsl
cmp
push
lret
mov
icebp
jo
inc
data16
call
insb
or
pop
pushf
ljmp
dec
mov
lock
mov
mov
lahf
xor
rcr
pop
leave
inc
sbb
mov
orb
sti
jns
cmp
cmpb
xchg
imul
xchg
hlt
jbe
inc
ja
outsl
shlb
loop
out
mov
mov
and
fcomi
cmc
lods
iret
inc
pop
das
and
subb
inc
popf
adc
adc
mov
cmp
icebp
sbb
ljmp
test
adcb
push
outsl
mov
pushw
jp
mov
loopne
insb
lahf
ja
mov
rol
mov
mov
mov
int
in
out
cmp
call
aas
imul
stos
push
outsb
call
adc
icebp
testb
xchg
scas
movsb
arpl
xchg
call
jecxz
leave
sbb
adc
or
leave
pop
arpl
pop
cltd
test
sub
mov
pop
push
cmpb
ret
out
into
inc
fistpll
jo
push
add
cmpsb
adc
add
mov
jecxz
jno
jle
add
insb
fisubl
or
int
inc
icebp
sti
cwtl
push
and
aaa
sbb
or
fstpl
outsb
xchg
shrl
push
cs
add
push
push
lahf
dec
faddl
pop
cmp
push
xchg
or
mov
cmp
or
adcb
test
pop
gs
jno
rclb
dec
popf
pop
mov
and
stos
ja
in
dec
loop
mov
and
aam
call
fldt
adc
dec
inc
or
pop
or
les
sbb
incl
xor
cmovle
dec
test
fdivrs
icebp
lods
sub
push
sbb
or
xchg
lock
lahf
adc
rcrl
cmp
fwait
shll
shlb
xchg
ja
imul
test
shll
push
cmp
lods
addl
add
fimuls
dec
mov
xor
repnz
int3
std
mov
movsb
loop
cmp
negb
push
or
cmp
push
in
int3
xchg
mov
je
cmpsl
cmp
push
movsb
iret
iret
fmulp
mov
mov
pop
push
hlt
imul
pop
dec
lods
jnp
and
mov
pop
hlt
scas
adc
cmp
popa
mov
add
inc
dec
das
xor
mov
das
daa
cmp
dec
pop
inc
sbb
fsubrs
dec
mov
jp
add
xchg
pop
inc
mov
add
cmpl
sbbl
mov
out
lea
aaa
jbe
jno
xor
pop
call
inc
lahf
leave
push
into
and
adc
icebp
pop
aaa
and
outsl
sbb
or
out
sbb
jo
inc
out
test
loop
xchg
sbb
es
dec
inc
adc
test
push
jne
push
loop
sbb
and
mov
lods
outsl
and
lock
ljmp
cld
push
mov
enter
mov
cmc
cmpsb
adc
in
xorl
js
sbbl
ds
shll
xor
pop
cmp
mov
sbb
and
add
xchg
push
xorb
sub
push
cmp
inc
pop
clc
push
loopne
repz
add
loop
scas
sub
cmp
cmpsl
and
in
sbb
inc
shlb
pop
ret
jno
pop
jbe
mov
mov
push
add
sub
fucom
fwait
cmp
in
test
test
ret
scas
push
adcb
test
jnp
sbb
dec
shlb
mov
sbb
std
sbb
loopne
test
out
cld
push
push
js
shll
sub
mov
clc
mov
jno
add
inc
cltd
mov
shll
stos
cmpsb
leave
adc
xchg
scas
cltd
mov
call
xor
call
repz
cmc
cli
xchg
push
mov
inc
test
testb
icebp
jns
mov
aam
jne
mov
xor
jmp
arpl
sub
xchg
and
mov
addb
cmp
or
mov
xor
loopne
mov
adc
sbb
popa
mov
inc
and
outsl
push
cmp
icebp
xchg
adc
sub
mov
enter
int3
xlat
es
pop
idivb
push
ret
addl
cltd
aas
nop
pusha
lcall
or
push
insl
mov
push
js
call
movsl
ffreep
mov
jge
pusha
loopne
scas
push
cmp
les
dec
push
inc
sbb
hlt
test
stos
pop
mov
jae
sti
push
lods
mov
dec
xchg
mov
adc
adc
movsb
mov
fs
dec
dec
mov
push
call
ss
arpl
ret
lods
pop
test
sub
jbe
adc
cmp
mov
dec
in
cmpsl
sub
lret
push
into
adc
and
sbb
and
mov
movsl
mov
fimull
inc
lods
inc
dec
out
xor
xchg
push
push
mov
icebp
mov
push
xor
jecxz
mov
xor
popa
clc
roll
nop
cmpsb
rcrl
les
push
je
mov
dec
mov
arpl
in
lea
dec
ret
loop
bts
mov
mov
mov
out
adc
xlat
fs
xor
xor
stc
adc
jge
inc
add
jnp
cmp
stc
add
rclb
je
pop
xchg
out
jb
xchg
xor
out
add
repz
adc
mov
xor
repnz
jb
xor
cwtl
aad
jge
add
cltd
and
test
scas
lahf
adc
stc
jbe
pop
lods
push
mov
cli
rcl
ss
lcall
or
xchg
loop
push
iret
js
add
push
add
mov
adc
cli
test
push
fldl
nop
inc
inc
das
shll
and
dec
fnstsw
adc
dec
cmp
iret
pop
pop
push
push
mov
jne
lahf
mov
test
outsl
hlt
push
xorl
test
mov
out
mov
in
insb
push
xlat
fdivrp
add
push
data16
dec
push
dec
in
loop
add
cwtl
aas
and
push
xor
into
sbb
sbb
mov
leave
inc
test
sbb
into
pop
xlat
pop
int
loopne
nop
cmp
inc
ss
sub
lods
xorl
jmp
dec
sbb
js
mov
test
lret
add
lds
cmpsb
leave
xlat
mov
cmpsb
lea
movsl
out
neg
mov
xor
call
dec
xor
xor
mov
xorb
mov
imul
sub
mov
sbb
xor
pop
cmp
mov
mov
int3
test
fldcw
push
push
inc
sbb
sub
scas
pop
push
jmp
jp
cmp
inc
into
fldcw
add
dec
or
popa
adc
loop
mov
dec
push
imul
sub
push
xor
or
add
adc
push
jge
sbb
out
out
out
mov
lods
sbb
add
add
add
cli
sbb
leave
pop
movsl
unpcklps
sub
enter
dec
fistpll
ret
in
sbb
push
insb
xchg
sarb
mov
sbb
push
shl
add
adc
jbe
jmp
xlat
int3
jbe
lret
lahf
lret
adc
loop
adc
add
and
rcrb
jge
xchg
sbb
stos
cmc
es
out
mov
cs
das
popf
adc
push
fwait
aaa
dec
sbb
into
mov
in
cmpsl
cmc
cltd
icebp
mov
icebp
jbe
xchg
out
mov
movsl
jge
test
lods
inc
mov
sub
mov
hlt
fs
test
push
nop
rcr
mov
mov
ss
sbb
or
cmp
sbb
in
sbb
scas
sub
adc
xchg
pop
xchg
movsb
fsts
push
jb
sbbl
ljmp
iret
mov
mov
sbb
sarl
lock
pop
jbe
adc
jne
xchg
or
push
adc
mov
leave
mov
loope
int
cmpsl
aas
xchg
pushf
and
adc
sbb
out
sbb
ss
xor
dec
pop
js
movsb
test
nop
push
stos
mov
jmp
aad
lret
ljmp
pop
cld
nop
xchg
lods
popl
gs
jmp
ja
arpl
xchg
xchg
xor
jne
cwtl
xchg
lock
and
in
fcoml
call
pop
xchg
fdivrl
dec
dec
cmp
cmp
and
dec
sbb
call
jae
xor
in
inc
add
mov
fbld
xchg
leave
adc
cwtl
push
pop
mov
js
pusha
adc
outsb
mov
ja
test
mov
pop
repnz
and
sbb
sbb
mov
mov
out
xchg
jecxz
call
push
mov
fsubs
insl
repz
das
jns
cmp
repz
lcall
imul
test
mov
out
mov
dec
les
mov
stos
scas
xchg
mov
stos
out
stos
or
shlb
fisttpll
cmp
rclb
cmpxchg
cmc
fdivr
fdivp
mov
test
iret
ss
inc
aaa
dec
push
scas
jns
xchg
mov
test
fwait
and
cmpb
sub
sub
xor
mov
or
imul
adc
lret
sbb
scas
mov
aas
jns
xor
xlat
pop
std
push
add
xor
and
ljmp
test
cmpsl
inc
mov
jle
inc
push
rolb
cmp
pop
add
lea
xchg
pop
lcall
push
pop
pop
xchg
mov
xor
sub
mov
push
aam
jmp
lret
js
cltd
out
sbb
jno
inc
fcoms
in
mov
fldenv
cmc
inc
orb
mov
push
iret
addr16
fildll
hlt
stos
out
mov
repnz
push
pop
push
mov
xlat
mov
outsb
leave
adc
mov
cmp
mov
and
and
sbb
nop
cmpsl
int
pop
inc
movb
sbb
jle
sbbb
popa
out
lods
push
aad
int3
dec
pop
xchg
sbb
xchg
push
fcompl
push
outsb
shll
out
hlt
sub
sub
lods
cmp
inc
mov
mov
or
into
add
pop
je
sbb
cmp
pop
mov
sbb
add
xor
push
repnz
mov
mov
ret
adc
testl
repnz
sbb
push
add
dec
sbb
push
mov
xor
aaa
cmp
mov
sbb
cmpsl
pusha
xchg
xor
lret
das
xchg
daa
mov
xchg
test
cmpl
mov
lds
mov
aad
cmp
popf
adc
bswap
xchg
pop
lods
mov
fadd
push
insl
jbe
push
int3
dec
inc
add
out
push
icebp
and
xor
fsubrs
mov
push
sbb
add
std
js
mov
add
and
mov
mov
inc
xchg
shlb
xor
test
mov
sbb
dec
icebp
test
push
scas
loope,pn
in
mov
inc
or
icebp
mov
mov
insb
dec
imul
mov
mov
vpmaxsw
jns
and
je
xor
enter
fidivs
orl
mov
xor
std
or
cmp
stos
in
iret
pop
or
adc
mov
xor
pop
clc
push
and
pusha
pop
sbb
mov
inc
mov
pop
push
aaa
ljmp
out
movsl
xor
lods
inc
add
add
fs
cmovno
or
cmpsl
mov
and
andl
cmp
arpl
lahf
iret
inc
lock
mov
clc
leave
and
adc
je
enter
mov
std
xchg
inc
mov
sub
add
adc
xlat
xor
inc
mov
out
ret
imul
sub
sti
mov
imul
ljmp
push
lret
cltd
cs
push
lods
scas
lds
add
rcll
xchg
dec
add
adc
xchg
fadd
cmp
js
ja
sub
adc
cwtl
inc
jb
push
lods
outsl
or
fcmovnb
cld
les
hlt
popa
add
push
int
cwtl
into
sbb
lcall
pop
loope
or
nop
negl
ret
fstpl
cld
in
js
cmpsl
repz
fs
xor
mov
ljmp
pop
add
ret
loope
mov
enter
adc
jg
pop
ret
cwtl
mov
inc
lahf
xor
mov
data16
mov
dec
sub
adc
mov
mov
dec
movsb
in
mov
stos
aad
out
insb
fmull
mov
pusha
mov
pop
dec
scas
lcall
dec
scas
push
enter
xchg
ret
bound
inc
mov
xchg
sbbl
mov
pop
ljmp
or
push
fadd
push
xchg
ja
sub
movsb
inc
jecxz
jp
dec
in
add
sbb
sub
xchg
orb
jecxz
fists
scas
jbe
add
push
sub
pop
rorb
lahf
jmp
mov
pop
mov
mov
pusha
daa
mov
push
sub
out
jns
popa
out
and
ret
test
js
push
out
mov
sysenter
cmpsl
xor
cmp
push
andb
aas
out
sub
les
fsubr
xor
jp
push
mov
addr16
and
xchg
xchg
adc
dec
into
not
pop
addr16
sbb
xchg
movsl
shl
jge,pt
mov
inc
icebp
stos
insl
mov
repz
lret
ret
and
fistps
fs
mov
stos
lea
cmpsb
fcmovnbe
or
ss
push
test
out
push
fcom
add
lds
add
mov
pop
aas
mov
xor
push
add
inc
ret
je
loope
cs
mov
mov
mov
aad
mov
out
stos
out
and
sbb
jb
xchg
sbb
mov
rcr
cmc
cmp
loopne
lds
push
movsb
int
lea
mov
inc
xchg
mov
sbb
roll
std
jle
outsb
faddl
push
sbb
cld
jo
outsb
add
arpl
cmc
mov
arpl
cmpl
rcrl
fsubp
insl
dec
lock
insb
negl
dec
adc
movsl
cs
scas
push
sbb
cmc
fildl
popa
mov
bound
mov
pusha
scas
mov
cmp
cmp
subb
push
adc
add
jno
loop
mov
leave
push
mov
sbb
pop
inc
pop
add
dec
fiaddl
push
dec
xchg
and
cmpsl
mov
dec
pop
lock
mov
push
mov
ds
movsb
pop
lret
push
into
lods
pop
sti
xchg
sub
in
fiadds
xorb
jne
test
es
loopne
dec
fwait
loope
sbb
push
mov
mov
mov
iret
popf
or
enter
jbe
xor
pop
pop
add
adc
sub
aaa
dec
ds
lea
imul
sbbl
xor
out
in
push
push
xchg
mov
mov
sahf
pop
xor
mov
sbb
ljmp
pushf
cmc
inc
aas
cmc
orb
mov
fcompl
jbe
pop
mov
adc
aam
xchg
mov
ret
sub
enter
sub
mov
xchg
push
fsts
jno
xchg
fcomip
roll
lods
cld
std
dec
out
loope
mov
nopl
xor
jo
mov
fimull
lods
popf
xchg
pusha
push
movsl
int3
dec
test
mov
pusha
adc
ss
addr16
add
incb
inc
stc
arpl
push
pop
test
fcomps
xor
cmp
inc
fidivl
jge
sahf
xchg
mov
mov
jo
lds
sbbl
outsb
fisttpl
inc
cmp
stos
push
xor
fdivrp
imul
aad
mov
cld
lods
sbb
xor
cli
fistps
bound
mov
pop
out
push
adcb
inc
mov
add
lock
stos
pop
mov
sub
call
jae
push
add
lock
mov
das
mov
push
rorb
sbb
test
sbb
cld
call
mov
push
fs
es
or
add
imul
mov
mov
add
test
cld
dec
jecxz
mov
dec
mov
lret
dec
stos
out
pusha
pushf
cmp
std
and
adc
daa
int
adc
and
mov
adc
fisubs
enter
stc
pop
xchg
cmp
cli
test
xchg
daa
ljmp
push
jmp
xor
adc
adc
push
xor
stos
imul
mov
int3
add
fs
add
pop
stc
es
add
inc
sub
sar
xor
cmp
lret
bound
mov
cwtl
add
jne,pt
push
hlt
or
xchg
icebp
leave
lds
hlt
cmp
or
inc
cmp
sub
jl
pop
jle
aaa
jbe
cmp
rclb
mov
sub
jmp
and
shrl
xchg
sbb
lds
ja
dec
mov
fucomip
or
cmpl
fcoml
add
cmpsb
mov
jmp
cwtl
sub
or
sub
mov
adc
rclb
je
inc
ret
cmpsl
adc
hlt
sub
test
jp
mov
pop
xor
lret
mov
das
loope
jecxz
cmpsl
mov
pop
inc
xchg
mov
outsl
push
sbbb
mov
insb
rolb
out
rclb
es
fdivrs
dec
sub
sub
lds
inc
scas
lcall
sbb
cld
pop
jle
fistps
repz
fcoml
das
out
mov
scas
lds
pop
pop
inc
inc
and
je
inc
xor
cmpsl
ror
je
ret
flds
loope
inc
stos
adc
xor
out
inc
jmp
jge
inc
xchg
fcompl
testl
push
sbb
rcrl
mov
lret
fs
fld
rorb
scas
idivb
sbb
lea
call
sub
mov
dec
fildll
inc
mov
dec
sbb
aad
dec
push
jge
cli
stc
pop
dec
mov
dec
inc
xor
push
out
movsb
test
add
sbb
jns
shl
pop
out
sbb
inc
pushf
pop
push
mov
jno
clc
add
mov
cmp
popa
sti
inc
fsts
sti
out
enter
enter
pop
mov
cmc
xchg
insb
movsb
and
pop
cs
arpl
add
fs
inc
pusha
sbb
mov
pop
add
scas
mov
jns
repz
int
popa
rol
fsubrs
mov
lds
fistl
enter
les
bound
enter
not
jle
jne
in
ds
and
adc
popa
sub
je
jge
cmp
in
test
mov
and
das
jnp
dec
dec
xor
adc
and
adc
inc
in
das
adc
rorl
sarl
shl
and
jb
xchg
push
push
dec
pop
mov
nop
insl
jmp
adc
das
cltd
push
pop
jmp
ret
push
mov
or
pop
xchg
imul
jmp
cmp
mov
jg
shl
cwtl
fisubl
cmp
in
inc
xlat
aam
incb
mov
sarl
test
shlb
into
hlt
lea
and
mov
mull
mov
dec
rcll
shr
adc
mov
sti
xchg
dec
imul
jns
mov
lds
sbb
in
push
stos
xchg
sbb
sub
out
dec
jnp
daa
mov
fwait
dec
loop
sbb
lret
adcb
push
out
or
xorb
adc
in
add
push
mov
pop
mov
aad
loope
sbb
xor
lods
faddl
push
xor
bound
cs
test
test
sub
fistl
dec
add
add
push
and
leave
ret
loope
xchg
dec
pop
lock
jp
rcl
xor
and
bound
sbb
jmp
and
mov
arpl
sbb
test
jae
mov
add
inc
xor
dec
pop
orl
jb
outsb
push
lock
sub
in
jne
inc
scas
pop
cmpsl
mov
jmp
pop
and
ret
mov
push
mov
cli
movsl
adc
jbe
sub
inc
test
lods
xchg
outsb
xlat
fidivrl
xchg
shll
lret
pop
fdivrs
mov
pusha
dec
inc
mov
in
daa
es
loop
sbb
mul
rorl
add
rcrl
scas
sub
or
mov
sar
xlat
jno
pushf
stos
aad
jmp
mov
clc
arpl
jp
sbb
sub
scas
pop
xchg
add
gs
out
ret
lods
and
jnp
vpmaxsw
push
xor
xor
arpl
movsb
xor
xchg
stc
cmc
adc
pop
jno
push
cli
pop
shrb
sub
sub
subb
mov
push
pop
mov
add
sub
xchg
mov
outsl
mov
js
je
and
loopne
inc
bnd
ffree
mov
cmpsl
pusha
loope
push
movsl
repnz
ret
adc
mov
movsl
push
jb
mov
es
movsl
mov
adc
mov
sub
or
in
jns
sahf
out
sbb
jae
subl
repz
inc
out
jae
out
xchg
lahf
inc
jg
push
leave
dec
cmp
subl
shl
pop
stos
out
jecxz
addl
les
mov
outsb
icebp
sub
add
sbb
push
cld
clc
mov
cmp
lret
lods
stos
aad
and
mov
aad
jp
jge
test
pop
fadds
or
mov
sti
adc
stc
fadd
xor
mov
mov
sbb
mov
popf
ror
sti
or
test
xor
pop
add
jecxz
mov
cmp
push
pop
pop
inc
sti
push
or
cwtl
sbb
cmpsb
lock
imull
mov
add
je
jg
cwtl
cmp
adc
xchg
xchg
popf
xchg
xor
addl
movsb
hlt
inc
loope
aam
push
ljmp
fdivrp
xchg
aaa
lods
orb
pop
sti
jmp
ss
sub
test
rcll
stos
ret
in
pop
pop
sbb
bound
arpl
push
call
vcmpord_ssd
xor
inc
or
test
into
fwait
popf
outsb
les
mov
add
sub
mov
in
mov
cmp
insb
sbb
ffreep
and
mov
aas
fisubrl
stos
out
ret
ret
mov
cmp
ret
sub
add
orl
pop
test
inc
cmp
arpl
clc
fbld
jge
loope
outsb
xorl
cmp
cld
inc
add
inc
fldt
mov
and
inc
les
gs
in
into
ret
xchg
jae
flds
mov
bound
std
push
cmpsl
sti
stc
push
mov
fcmove
or
and
mov
in
mov
out
mov
pop
into
mov
scas
dec
jnp
push
repnz
xchg
test
shlb
push
pop
push
out
aaa
bound
push
add
sbb
sbb
mov
dec
into
stc
mov
test
mov
fadd
xor
inc
fildl
mov
cmpl
jl
push
loopne
je
jecxz
xchg
lock
and
lea
clc
int3
cli
pop
cli
mov
mov
lods
xchg
sub
enter
xor
jg
test
cmp
mov
jle
loop
mov
in
sbb
arpl
pop
pop
int3
es
cmp
aas
test
outsb
pop
arpl
cmpsl
sub
mov
cwtl
lods
lcall
in
out
xchg
xchg
lcall
test
lret
push
sub
sub
ja
test
sub
inc
std
push
test
push
jo
dec
jne
adc
mov
xchg
pop
pushf
scas
andl
push
repz
pushf
mov
jae
cltd
bound
or
jp
jb
xor
pop
stos
stos
dec
fmull
adc
enter
adc
xorb
jecxz
jns
or
inc
scas
fsts
mov
in
adc
pushf
mov
hlt
pushf
decl
sub
push
cmpsb
sbb
test
xor
add
jmp
jnp
mov
add
sbb
cwtl
xchg
hlt
xchg
sub
sahf
push
xchg
or
lret
lds
in
cmp
test
xor
loop
jo
inc
scas
ljmp
fbld
cs
repnz
movsl
fistps
jne
push
stc
outsl
mov
mov
test
fistps
mov
cltd
pop
fdivp
push
inc
xchg
bound
pop
enter
insl
ss
xor
psubb
mov
in
pop
loop
sub
mov
clc
pusha
adc
adc
push
lret
mov
xor
inc
adc
inc
mov
imul
lds
movsb
popa
add
jecxz
test
mov
outsb
rorl
imul
leave
in
lahf
jmp
pop
idiv
orb
mov
loopne
pop
out
push
jo
aas
in
adc
jnp
cwtl
inc
vaddpd
das
ror
out
mov
movsl
in
mov
cmp
dec
rolb
les
xor
maskmovq
idivl
test
shr
outsl
xchg
sbb
aas
pop
pop
dec
clc
fiadds
or
movsl
mov
in
and
adc
adcb
mov
enter
icebp
ja
dec
mov
mov
mov
stc
inc
cli
shlb
xchg
and
cli
mov
sub
xor
rclb
pop
xor
pop
push
imul
push
nop
cltd
ljmp
xchg
aaa
or
js
and
sbb
mov
hlt
sbb
loop
insl
imul
out
pop
add
mov
mov
mov
ljmp
sbb
in
test
pop
addr16
data16
int
push
push
and
push
dec
nop
xchg
aam
mov
inc
add
push
xchg
stc
adc
push
clc
mov
dec
cld
scas
jecxz
pop
push
cmpsl
cwtl
jno
loop
lods
or
mov
das
scas
sub
nop
cmp
stos
or
mov
stos
js,pn
add
add
jae
aad
adc
push
inc
sbb
mov
inc
fucomip
and
fisttps
scas
jle
mov
lcall
rclb
sub
cmc
mov
stos
aad
jns
lods
inc
cmpsb
push
out
ds
int
mov
nop
add
ljmp
pop
sub
jle
cmp
aad
rclb
dec
cltd
and
sub
xchg
xor
bswap
xchg
xchg
mov
pop
xor
pop
hlt
pop
mov
pop
nop
in
mov
sbb
dec
fildll
jmp
or
clc
hlt
sti
icebp
test
lret
mov
or
cmc
add
out
pop
push
out
mov
rclb
pop
xor
cmpsb
sub
sbb
inc
mov
mov
pop
mov
leave
sub
scas
in
push
pop
pushf
adc
push
add
sbb
adc
fstps
lds
xchg
xor
rcl
adc
mov
out
xor
sub
mov
mov
outsb
add
mov
lret
jae
add
sub
xchg
dec
lods
mov
loopne
psubd
sbbl
cmpl
jg
sub
int
out
ucomiss
ljmp
and
adc
in
sahf
cmp
mov
xlat
cmp
and
pop
jp
dec
fisttpl
out
clc
xchg
adc
mov
lahf
push
mov
loop
jnp
mov
daa
jmp
je
cs
mov
jo
xchg
aad
mov
divb
cmc
sbb
jo
rcrb
xlat
xor
jecxz
jnp
push
into
inc
pop
call
push
adc
mov
loope,pn
mov
aaa
xor
mov
mov
jg
popf
pop
out
leave
lds
mov
in
lahf
fsubr
out
pop
jbe
sbb
dec
cmp
pop
dec
pop
cmp
push
fmul
xchg
sbb
lods
fsubl
lds
test
pop
stos
add
mov
and
or
pi2fw
sbb
add
mov
pop
xor
imul
lds
imul
dec
leave
insl
imul
sbb
cli
pop
add
inc
xor
outsl
xchg
lods
mov
scas
outsb
gs
lods
xchg
dec
mov
lret
adc
movl
mov
arpl
sbb
sahf
sub
jecxz
sti
sbb
jmp
ret
xor
stc
nop
lds
xor
in
xor
test
scas
pop
loopne
sub
notb
out
addr16
cmp
aaa
rolb
mov
xor
lea
mov
mov
iret
pop
inc
call
sarl
pushf
test
dec
test
loope
xchg
jb
jb
ror
dec
push
mov
mov
sbb
in
sahf
sub
iret
repz
idivl
mov
scas
fwait
mov
cmpsl
mov
in
mov
adc
push
sbb
inc
lock
in
cwtl
imul
ljmp
push
jge
push
shl
lods
insl
xchg
lods
sub
lret
sbb
imul
jmp
push
inc
mov
jne
cmp
daa
inc
adc
mov
xchg
push
test
test
mov
fs
mov
dec
lret
dec
dec
repz
push
jmp
test
add
or
imul
or
and
mov
xchg
mov
jno
shlb
fstpl
bnd
sti
loop
pop
add
push
mov
or
xchg
mov
push
add
jne
push
pop
xchg
and
cmpsb
xor
mov
test
xorb
mov
cmp
test
incl
jnp
pop
ret
mov
ficoml
or
mov
fs
or
sub
jecxz
xor
jge
es
stos
cmp
xor
lcall
xor
lods
rolb
jae
lea
xor
notl
outsl
xchg
xadd
and
cmpsl
outsl
push
test
inc
add
adc
aam
dec
fwait
or
sbb
adc
cld
jbe
fbstp
push
adc
dec
loopne
xchg
scas
cwtl
out
jnp
mov
pusha
pop
push
test
mov
sbb
imull
ds
or
xor
or
jnp
movsl
out
xchg
and
add
lods
lock
adc
xchg
pop
or
push
jp
push
pop
and
cltd
sarl
and
fcmovu
pop
cmp
in
aas
fs
inc
dec
loop
xchg
xchg
inc
sbb
jns
mov
pop
pop
imul
lahf
cli
jl
push
pop
fsub
out
mov
lret
push
xchg
jo
scas
adc
iret
or
fcos
in
stc
push
adc
repnz
loopne
aas
gs
lcall
xchg
or
repnz
mov
xorl
mov
xor
movsl
test
jns
insl
mov
pop
fwait
jmp
xor
shlb
jecxz
dec
xor
aam
fwait
inc
mov
mov
scas
andl
cmp
pop
sub
jo
scas
or
leave
dec
xor
jne
push
imul
add
xor
lahf
and
das
int3
rcrb
fsubrl
xchg
inc
xor
pop
pop
iret
xor
xor
mov
hlt
jmp
push
xchg
mov
mov
outsl
dec
push
test
int3
sub
loope
xchg
adc
lahf
shlb
cmp
xor
mov
pop
mov
xchg
xor
xchg
lods
and
mov
mov
mov
mov
addl
nop
xorb
fadd
mov
push
loopne
fldenv
and
push
int3
push
xor
daa
mov
inc
cmp
and
cli
or
cmp
and
dec
bound
or
mov
mov
push
sbb
adc
daa
adc
sbb
sets
xchg
xlat
xchg
daa
test
adc
fcompl
cmpsb
cs
mov
sub
repnz
call
in
data16
or
pop
dec
ljmp
std
data16
and
pushf
jne
cli
push
jne
inc
pop
push
aaa
cltd
aas
sub
mov
ss
mov
adc
rorl
cmp
out
dec
cmp
dec
movsb
fs
lahf
repnz
fdivs
add
leave
das
mov
int3
fimull
adc
std
and
movsl
in
mov
sbb
adc
or
adc
cmp
mov
jae
adc
scas
sti
sbb
sbb
call
repnz
mov
cwtl
sub
mov
mov
mov
subb
leave
cmp
mov
sbb
je
bound
push
stc
add
pusha
aas
je
pop
ss
mov
fisttpl
mov
mov
mov
and
dec
aam
shll
mov
out
hlt
or
and
decb
out
cmp
ret
in
cmp
lret
or
xchg
inc
jl
in
ss
jmp
aas
jge
das
pop
xlat
test
xchg
pop
js
cmp
imul
cmc
insl
mov
add
jnp
pop
movsl
pop
add
jo
push
push
je
sbb
mov
ja
lret
addr16
jecxz
xor
cmp
pop
inc
imul
insb
aad
stos
je
les
subl
push
lods
cmp
mov
xchg
dec
xlat
xchg
mov
mov
dec
inc
cmpsl
scas
add
inc
jp
dec
pop
loop
mov
push
jge
fisttpll
pop
push
mov
es
lahf
sbb
sub
sub
ljmp
addr16
rcrl
mull
shrw
xor
ret
mov
pop
xchg
cwtl
and
mov
lods
cmp
and
sbb
mov
jp
xor
add
jo
fwait
dec
mov
or
add
inc
inc
test
inc
comiss
in
inc
fistpll
dec
loopne
aaa
addps
shll
shll
or
sub
inc
dec
lods
gs
shrd
xlat
sbb
adc
repnz
lret
sysenter
in
fnstcw
inc
or
xchg
push
push
fdivrl
aam
fdivrp
mov
jle
roll
add
daa
fstps
jae
imul
in
and
mov
and
test
fdivl
lahf
mov
xor
push
push
stos
or
and
call
pshufw
xchg
xchg
in
fstl
fidivrs
test
aam
stos
fwait
mov
int3
dec
pop
push
and
sub
out
mov
addr16
out
sbb
sbb
enter
fisubrl
mov
inc
or
mov
or
mov
jbe
loope
stc
enter
cmp
sbb
cld
test
shlb
mov
sbb
mov
mov
subb
aam
sub
sub
imul
push
mov
int
mov
push
pop
sahf
pop
mov
cmp
dec
push
add
and
clc
push
push
pop
sub
dec
and
sub
dec
xlat
adc
mov
xor
out
push
push
movsl
jge
push
dec
rcll
adc
dec
in
leave
sarb
icebp
shl
sub
ficoms
xor
out
mov
jle
sarb
imul
out
push
dec
lock
add
xchg
or
lcall
outsb
stc
aas
push
pushf
push
dec
das
lret
aad
ss
mov
popf
push
pusha
out
rclb
or
pop
jb
addl
pop
ror
or
dec
mov
pop
push
jbe
hlt
adc
inc
adc
out
fsubp
xchg
sbb
cs
inc
cs
pop
addr16
mov
lock
adc
shl
mov
mov
lahf
mov
fmul
xor
gs
ss
mov
sarl
mov
xor
insb
iret
push
pusha
mov
cmp
ljmp
in
aad
inc
xchg
pop
cmp
xlat
dec
sbb
fucomi
push
in
or
sbb
inc
popf
icebp
in
jp
xchg
dec
fsubl
imul
loope
mov
mov
subl
or
incb
inc
jae
inc
xlat
jmp
sahf
jae
divl
out
jb
xchg
sub
es
aas
pop
loop
and
add
das
push
mov
movsl
in
testl
fisttpll
filds
jl
arpl
or
jecxz
pop
push
lret
jmp
lods
dec
call
pusha
stos
int3
push
hlt
das
push
jmp
loopne
adc
xchg
ret
rolb
loop
popf
cmp
jp
fstpt
adc
push
or
xchg
mov
mov
dec
dec
sub
cltd
sub
pop
jbe
movsl
sbb
jo
stos
mov
test
aas
ljmp
fst
adc
in
lahf
push
pop
scas
lock
xchg
ret
cli
pop
mov
push
and
aad
fiaddl
push
xchg
fdivl
and
sub
push
xchg
adc
cmpsb
pop
ficoml
int3
xor
mov
fnstcw
fcom
mov
xchg
fcompl
sub
fisubrs
sbb
sub
mov
inc
pushf
push
stc
inc
icebp
clc
sti
jg
and
push
jp
jne
movsl
into
daa
scas
mov
push
sub
int
imul
mov
sbb
inc
rolb
test
cld
lret
in
jns
pop
lcall
pop
insb
orl
sub
shll
ds
or
dec
popf
leave
stos
adc
aaa
inc
std
inc
cltd
mov
in
mov
pusha
cmpsl
aaa
loopne
aaa
pop
call
cld
mov
insl
xchg
lods
test
inc
inc
push
sbb
std
bound
pop
and
mov
icebp
push
in
jmp
fmuls
mov
imul
lahf
pop
bnd
gs
in
ljmp
push
stc
mov
fimuls
ja
or
and
and
push
test
fnstsw
mov
add
dec
std
cmp
in
xchg
inc
add
add
jmp
ljmp
jbe
sub
and
lret
inc
jno
ds
ficoml
idivl
or
xlat
fwait
sbb
push
stos
inc
outsb
xor
xchg
adc
jg
push
nop
cmp
ret
nop
cmpsb
jmp
leave
mov
ds
and
mov
lret
add
mov
aad
fcmovnu
xor
insl
pop
lcall
add
add
push
jge
mov
ss
shlb
fiaddl
adc
xor
mov
sub
ret
inc
and
jne
ljmp
stos
adc
addl
lret
xchg
lods
mov
in
scas
push
shrb
test
mov
mov
std
mov
test
sbb
jp
leave
or
and
cmc
stc
or
lret
in
pushf
xor
lea
into
xchg
rorl
mov
stos
push
cltd
pop
sbb
adc
rorb
mov
sbb
sarb
dec
ljmp
fdivs
imul
repz
fadd
adc
jne
xor
loopne
imul
xchg
fisubrl
cmp
lods
and
aam
mull
aad
mul
jb
mov
push
xor
aam
repz
mov
insb
sub
loope
in
ds
inc
repnz
mull
pop
mov
hlt
aad
mov
outsl
push
out
loope
int
sub
rcrb
adc
adc
xchg
push
mov
pop
stos
xchg
ret
fdiv
add
in
mov
push
dec
add
adc
test
cli
xor
sub
cwtl
pusha
cmp
push
mov
nop
adc
std
xchg
jecxz
adc
imul
ss
scas
sub
call
cmp
mov
jns
std
int3
mov
lret
cs
stos
std
mov
fisubl
stc
pop
jecxz
or
sbb
ret
hlt
jg
push
mov
enter
xor
leave
jno
or
sbb
push
or
inc
sbb
in
js
cmp
loop
add
pop
lahf
cmpsb
repnz
push
cmp
in
inc
mov
pop
pop
mov
test
hlt
popf
jecxz
mov
popf
imul
sbb
xchg
add
push
push
fdivl
std
jmp
rol
filds
fildll
data16
mov
dec
mov
fnsave
jne
mov
push
negl
and
lods
xchg
xorl
jge
outsl
fucomip
xor
jle
jnp
or
test
rcrb
loope
out
das
push
imul
rorl
int3
push
jmp
cltd
sub
pop
pop
mov
pop
xchg
sbb
mov
push
cmc
nop
pop
push
lret
je
movsb
xchg
or
inc
data16
dec
or
jp
flds
jno
scas
inc
shlb
mov
test
dec
xor
bound
adc
xchg
sbb
addl
push
sub
or
imul
push
xchg
or
and
xor
cmpsb
pop
shrb
or
sbb
xlat
pop
xchg
int
loopne
or
in
push
and
mov
mov
icebp
and
mov
ljmp
iret
stos
pop
or
pop
sti
in
cmp
cmp
adc
cmp
mov
mov
push
loop
scas
and
js
sahf
rorb
js
stc
insb
das
mov
cmpsl
mov
sbb
pushf
adc
xchg
push
xchg
fdivs
out
inc
in
out
adc
imul
mov
pushf
xor
sub
xchg
jno
into
fcmovnb
add
xchg
arpl
shl
jne
stos
aas
inc
push
add
stos
cmpsl
sub
push
fs
inc
in
xchg
inc
out
mov
dec
iret
pop
enter
sti
outsl
sbb
call
test
les
inc
sbb
imul
fidivrl
xchg
xchg
outsb
pop
adc
jo
push
xor
loope
dec
jg
pop
xor
sub
int
add
sub
shll
inc
std
push
shlb
cmp
repnz
out
or
xchg
out
xchg
pop
lods
xchg
mov
jmp
in
cmp
xchg
je
jns
adc
sbb
cmc
imul
xchg
mov
sbb
arpl
push
or
fisubl
arpl
je
loop
mov
data16
shl
insl
cmp
shll
test
xlat
xor
gs
add
cmc
js
inc
sbb
cli
dec
push
mov
add
pop
pop
push
in
xor
mov
or
lahf
ds
mov
or
arpl
dec
xchg
push
xchg
mov
cmp
outsb
xchg
js
fiadds
push
and
mov
and
add
and
adc
jae
sbb
and
arpl
lahf
fmuls
test
jbe
int
pop
push
call
aad
in
ss
pop
popf
nop
ljmp
mov
movb
les
or
rorb
into
gs
imul
or
int
inc
in
ja
cmpl
orl
mov
fimull
sub
add
movsl
push
scas
mov
or
imul
je
mov
aad
xor
mov
push
lock
pop
daa
dec
xor
inc
sbb
push
iret
lcall
roll
in
mov
mov
mov
ljmp
and
dec
lcall
mov
fwait
jg
jle
push
xchg
call
lret
cmp
call
dec
sub
fcmove
push
call
nop
xlat
shrb
lods
cli
repnz
popa
push
add
cmp
sbb
fsubrs
inc
lock
mov
cmc
dec
stos
adc
imul
cli
jecxz
push
xchg
je
call
pop
jo
subl
dec
sti
stos
into
mov
shlb
js
notl
lock
mov
fiaddl
mov
add
ret
cmp
jne
dec
and
inc
cld
push
mov
divb
sub
ss
lcall
adc
outsl
lahf
popf
add
leave
inc
mov
xlat
pushf
je
lahf
clc
repz
aam
fs
pusha
push
ja
je
sbb
int
popa
fwait
inc
adc
add
lea
cmc
enter
ret
in
xor
xorl
int
dec
popa
jae
int
insl
xor
add
ret
adc
pushf
jmp
xorl
not
mov
jbe
dec
out
dec
adc
sbb
adc
mov
xchg
mov
adc
jbe
jle
pop
sti
pop
inc
scas
lcall
ret
sbb
sar
push
lahf
or
stos
stos
sahf
test
mov
sub
push
jnp
inc
push
jo
mov
mov
in
ja
hlt
leave
fidivl
add
and
adc
int
mov
daa
loope
mov
push
inc
loopne
lock
cmp
lret
inc
ds
mov
push
inc
xor
push
mov
mov
pop
or
movsb
xchg
sahf
add
jne
jnp
cmp
jle
sub
or
inc
lahf
cmc
inc
push
out
call
mov
mov
adc
xchg
popa
jge
xor
pop
scas
adc
sub
aam
pop
dec
jle
das
sbb
mov
mov
iret
mov
je
std
mov
and
push
adcb
loop
inc
mov
adc
rorl
icebp
aad
les
je
xchg
stos
sub
push
adc
and
ds
dec
push
add
pop
push
rolb
cld
iret
xor
or
leave
mov
pop
in
dec
loop
mov
les
lds
out
das
mov
jnp
pop
cmc
inc
test
jae
out
dec
inc
or
sbb
stos
in
ud2
adc
das
dec
adc
stos
jmp
cmp
icebp
xor
cmp
inc
in
nop
ret
int
mov
movsb
push
scas
mov
jmp
xor
jge
ss
mov
cmp
jmp
popf
icebp
push
sub
jo
test
sub
sbb
notb
or
mov
insb
cmpsl
vmovdqa
insl
pop
xlat
or
cmp
pusha
lods
clc
in
and
js
aaa
into
add
fnstenv
test
icebp
dec
test
mov
lea
mov
or
bswap
fs
repz
data16
push
dec
lods
add
fwait
jns
xchg
mov
nop
cltd
popa
test
cld
jg
or
movsl
das
mov
pop
xchg
lock
loop
add
mov
xorb
jecxz
sub
jb
lods
mov
lea
mov
and
jb
jno
and
pop
fstpt
inc
and
jo
stos
cmpsb
test
inc
stos
mov
stos
mov
mov
insl
push
out
xchg
jnp
mov
stc
cmp
outsb
mov
push
rcl
lret
inc
adc
ret
mov
hlt
xchg
jo
xor
jbe
add
push
cli
cmp
mov
push
inc
xlat
movsb
push
lods
or
popa
mov
movsb
pop
cmp
sahf
idivb
in
mov
adc
rcrl
pop
jno
or
sub
dec
pop
xor
mov
imul
dec
loopne
push
dec
pop
mov
int
ret
fimuls
into
gs
cmp
jg
mov
enter
popa
stos
ja
xchg
addl
in
dec
pop
lock
mov
add
jge
mov
ja
and
sti
sub
xchg
and
pop
jge
mov
in
xchg
orb
push
pop
pop
pop
rcl
or
cmc
repz
pop
mov
or
mov
rolb
push
mov
nop
xor
mov
lods
push
push
testb
aaa
cmp
rolb
adc
ss
popf
scas
inc
cmp
push
mov
push
popf
mov
pusha
or
mov
adc
push
fwait
cwtl
mov
inc
dec
popa
xor
cwtl
jl
test
xor
mov
inc
mov
mov
dec
fistpll
sbb
idiv
jl
daa
mov
cmp
stc
xor
aaa
andb
xchg
insb
stc
pop
pop
mov
rcrb
inc
jg
jle
dec
mov
cld
mov
aam
or
pusha
popa
add
cmpsl
lret
test
or
imul
in
ljmp
movsb
loopne
lcall
pop
jge
movsl
mov
test
sti
or
stos
xor
sub
jae
lahf
cltd
push
pushf
test
lea
mov
jecxz
test
outsl
mov
inc
adc
add
or
push
insl
sbb
jns
pusha
xor
xor
lea
daa
jp
or
or
xchg
js
fs
mov
movl
cmpsl
mov
xchg
mov
adc
jl
dec
dec
or
xor
jp
scas
or
lods
decl
enter
orl
jb
jl
mov
sub
fidivl
xchg
repnz
js
xchg
mov
cli
xor
and
and
leave
test
test
out
push
adc
push
imul
movsl
aas
pop
into
movsl
push
push
nop
je
xchg
bound
incl
sahf
jge
rcll
rcr
in
inc
or
dec
jl
jecxz
lock
cmovo
add
dec
movsb
sbb
cld
sbb
add
int3
fisubs
jl
iret
push
imul
fmul
and
cmp
mov
into
aas
jp
jge
in
inc
cmpsl
push
inc
stc
inc
mov
jmp
xor
pop
hlt
xchg
inc
adc
dec
mov
lahf
sbb
jnp
add
imul
js
lahf
repz
push
and
repnz
jo
xor
aam
push
je
push
in
xor
movsb
ret
enter
cmpsb
jbe
mov
cmpb
bnd
lcall
in
adc
ljmp
dec
mov
nop
test
test
sti
test
push
cmp
testl
push
adc
sbb
adc
jbe
adc
xchg
test
xlat
add
insl
or
push
or
aam
jp
jl
mov
test
xchg
daa
dec
ret
arpl
sub
push
inc
add
sti
mov
rcll
xor
mov
sub
ljmp
popf
push
stos
dec
mov
inc
sti
sub
movsl
push
loopne
or
movsl
mov
push
inc
out
inc
pop
sbb
cwtl
mov
fdivrs
ret
popa
imul
dec
push
push
or
popf
mov
mov
push
cmp
dec
sti
jbe
clc
iret
jno
pushf
shlb
jb
lods
xchg
xchg
clc
lods
sti
sub
bound
adc
cltd
fsubrl
mov
lahf
repz
fmulp
or
shrb
je
mov
jl
cs
adc
pushf
push
arpl
dec
lods
je
adc
add
and
xor
bound
cmp
mov
movsb
repnz
mov
dec
sub
pop
fwait
pop
inc
nop
and
mov
les
test
std
rcrl
xor
lea
mov
mov
fwait
jno
push
dec
push
into
movsl
mov
mov
and
movsl
push
sub
cs
mov
dec
arpl
lret
cld
dec
loop
fistpll
jo
pop
adc
mov
or
out
xor
jae
mov
sbb
cwtl
fs
push
rcrl
arpl
jb
imul
mov
pop
add
addr16
push
xor
pop
mov
loopne
sti
jp
xchg
jae
nop
call
ds
push
mull
mov
cld
call
jmp
sbb
lret
xor
aaa
pop
xchg
or
mov
jmp
iret
xor
in
sub
movsl
dec
popf
pusha
outsb
scas
jl
mov
jle
cmc
fiadds
cmp
mov
stc
xor
sbb
jbe
dec
ret
scas
icebp
fwait
sub
push
adc
inc
sbb
stc
mov
pop
cld
stos
jle
and
jmp
xchg
popf
pop
or
dec
insb
pop
push
daa
nop
pop
loop
xchg
dec
push
or
and
pop
inc
popa
or
adc
push
loopne
in
push
jg
lahf
shlb
imul
and
add
push
mov
bound
shlb
mov
ljmp
cmp
mov
jno
aas
xor
sub
and
fsubr
sti
outsl
rcll
call
flds
mov
ds
aaa
outsb
shrl
pusha
pop
rolb
adc
test
fsubr
sbb
mov
insb
mov
sub
fnsave
pop
mov
mov
inc
das
xor
sub
dec
iret
cs
icebp
xlat
imul
loopne
rorb
xor
stos
cmpsb
ss
push
ror
rorl
jne
lret
outsl
cs
dec
cmpsl
shll
sti
cmpsb
dec
mov
mov
pop
xor
jne
scas
and
ret
mov
sbb
outsl
sbb
cmpsb
pop
rcrb
fidivs
mov
ss
jge
sub
out
jp
scas
shrl
sbb
lock
aaa
out
aaa
lret
andl
daa
and
pop
mov
icebp
mov
add
xchg
stc
mov
adc
bound
pop
jmp
daa
cmp
xchg
in
outsb
mov
push
dec
das
iret
ret
repnz
mov
nop
jmp
mov
jnp
xor
ret
or
aad
cld
insl
mov
xchg
in
popa
ljmp
test
mov
stc
fimull
mov
pop
jg
or
jb
jge
cmp
or
dec
and
out
mov
inc
hlt
loope
xchg
ljmp
gs
push
xorl
xor
and
ss
sbb
loop
sub
push
out
data16
mov
dec
or
mov
push
sbb
sahf
or
mov
out
lock
in
xchg
out
sub
jg
xor
or
mov
xor
roll
and
dec
outsl
mov
lea
insb
adc
cmp
cmpsl
fdivrp
jecxz
mov
add
xchg
mov
std
inc
push
or
xor
arpl
in
jl
mov
outsl
sbb
testl
popf
mov
insb
outsl
mov
int
or
mov
jmp
imul
cli
cmp
arpl
sub
rorl
add
push
jle
aas
test
les
or
jae
sti
les
test
xchg
inc
insl
mov
and
cmpsl
pop
insl
add
lods
jns
idiv
xchg
dec
push
jnp
test
dec
sbb
jmp
mov
mov
cmp
in
movsb
inc
aad
lret
add
cmp
pushf
aad
pop
mov
sub
arpl
xchg
push
push
mov
hlt
push
out
xor
cmp
xlat
adc
jg
rclb
test
sbb
xchg
push
scas
and
mov
aaa
out
pop
loopne
bound
aad
pop
xchg
sub
lahf
loopne
in
dec
loopne
xor
cltd
mov
add
jne
std
hlt
mov
dec
push
cltd
orl
lods
dec
das
inc
xlat
out
ss
loop
arpl
test
outsl
call
in
mov
imul
pop
xchg
fwait
imul
hlt
mov
mov
or
daa
das
mov
rolb
jo
xor
enter
xlat
inc
mov
lret
xchg
xchg
sub
lret
sub
pop
push
loopne
pop
stc
push
mov
out
xchg
cmp
xor
hlt
sub
test
pop
fidivrs
mov
sbb
xchg
sub
mov
jge
cmp
sbb
fwait
test
int
movsb
lods
stos
and
pop
xor
sarb
imul
js
andl
jmp
addr16
cmp
mov
in
cmpl
outsb
cmc
hlt
xor
std
in
in
cmp
dec
out
leave
fs
inc
out
xor
adc
mov
enter
test
ret
notb
pop
cli
push
xchg
stc
cwtl
loopne
je
ret
std
sbb
inc
imul
shl
sub
push
sub
adc
jl
mov
mov
inc
mov
push
xchg
mov
dec
lcall
inc
xor
dec
mov
arpl
insb
mov
cli
jne
mov
imul
sbb
push
test
inc
jmp
dec
mov
push
jo
jg
mov
xor
scas
xor
or
or
out
xchg
ret
gs
dec
cltd
push
leave
dec
rep
andb
mov
pshufw
fcompl
movsl
mov
xchg
push
fcomi
test
jmp
sub
orb
dec
clc
jge
sahf
pop
mov
fcoms
cmpsl
test
ret
mov
xchg
cli
out
and
fldl
icebp
cmp
ss
call
repz
pop
and
outsb
mov
sbb
jb
mov
sub
jecxz
bswap
jle
cmp
sbb
sbb
aaa
pop
jbe
jo
mov
cmp
int
mov
ret
cld
rol
int3
lcall
add
or
stos
push
adc
je
mov
add
jl
cli
aas
xchg
jne
out
sub
mov
rorb
shlb
lcall
daa
or
andb
adcb
stos
inc
ret
pop
pop
add
push
jecxz
loope
xchg
repz
andb
add
add
popa
cmpsb
fs
dec
pop
rcrb
or
shrl
push
jge
out
ljmp
mov
popa
rclb
cs
inc
xchg
in
dec
shl
adc
cmp
fs
xacquire
inc
adc
out
ffreep
gs
add
repz
sub
mov
inc
xorb
out
push
cmc
mov
cmpsb
pop
in
sti
clc
inc
lods
test
jmp
in
add
fs
push
int
sahf
add
adc
fmull
xor
mov
adc
push
sub
mov
cs
or
in
popf
mov
out
xor
jp
iret
addr16
add
inc
lahf
mov
mov
outsl
sbb
ret
daa
xchg
fstl
inc
aad
sub
dec
push
sub
sbb
repnz
out
cs
lret
gs
dec
xchg
bound
mov
shlb
pop
scas
les
std
mov
and
mov
and
je
aaa
dec
xchg
das
and
push
mov
into
into
cs
daa
xchg
mov
jg
pop
cmp
add
xchg
daa
dec
stos
mov
dec
out
push
xlat
lock
in
addb
lret
jne
jbe
push
int
mov
and
or
aad
push
cmp
pop
insb
mov
rcl
cmp
mov
push
movsb
test
mull
cmpsl
and
pop
mov
lods
mov
pop
in
shlb
test
fsubrl
out
ftst
scas
pop
mov
movsl
cmp
lds
test
lret
fcomip
add
mov
dec
xchg
les
lret
xor
push
sub
xchg
sbb
shll
add
inc
jnp
mov
jge
pop
stos
dec
and
jae
inc
sub
data16
xchg
ds
mov
add
sbb
push
mov
loopne
lret
jp
mov
subl
insb
xchg
mov
nop
dec
dec
int
sub
and
insb
inc
push
fcmovne
pop
xchg
je
hlt
xchg
cli
and
mov
add
cmp
pushf
push
xor
mov
mov
outsb
fnstcw
or
loopne
jecxz
mov
push
add
cmp
cmp
or
out
arpl
repnz
clc
andl
test
sub
sub
push
mov
sbb
shll
repnz
addr16
cmc
ret
fnstsw
dec
push
loop
inc
pop
sbb
push
sahf
outsl
jmp
cmc
jbe
cmp
cmp
and
adc
push
xor
cmp
cmp
shrb
movsb
cli
dec
enter
ret
movb
jbe
ljmp
push
mov
adcl
mov
xchg
mov
cld
mov
jge
insl
int3
fisttps
and
test
pop
add
inc
adc
out
adc
lods
push
mov
and
or
inc
add
and
inc
stos
push
sti
cmp
adc
mov
ja
or
test
es
imul
lea
xor
push
xchg
movl
add
jle
imull
adc
lods
test
push
je
xchg
pop
push
mov
insb
les
mov
inc
adc
inc
dec
mov
cmp
pop
push
popl
xlat
jg
loope
xor
sbb
stos
aad
mov
push
out
sub
push
add
aaa
movsb
ja
in
mov
cld
std
push
push
mov
rclb
pop
mov
iret
add
fwait
cmc
jl
aad
adc
shll
cmp
xchg
icebp
loopne
jmp
popa
pop
mov
mov
das
inc
out
movsb
dec
dec
cs
pop
push
jmp
test
test
xor
and
addb
ss
adc
push
xchg
jne
jbe
fidivrl
fadds
jo
xchg
pop
dec
lcall
xor
xor
push
mov
cmpsb
lods
outsb
mov
push
jge
test
mov
call
call
or
repz
dec
and
adc
into
or
out
testb
and
mov
call
push
pop
iret
push
shrl
or
aam
xchg
roll
xchg
movsb
add
jg
sbb
loope
insl
test
outsl
xlat
xchg
xor
cli
lcall
jl
addr16
add
jbe
fistl
fldenv
iret
stos
mov
aaa
xlat
add
add
adc
jge
jp
setb
mov
jecxz
lods
cmp
adc
ss
movsb
sahf
jge
les
addl
cltd
and
xchg
push
inc
addb
jne
lea
sbb
hlt
aaa
inc
adc
or
add
lahf
fsubrs
xchg
and
mov
jb
dec
mov
jne
int
xchg
mov
inc
sbb
lock
cltd
mov
xlat
mov
cli
pop
cmp
in
xor
and
inc
cmc
xor
xor
js
mov
js
or
dec
push
loope
xor
scas
xchg
xor
test
pop
lcall
push
sbb
dec
jg
cmp
ret
setnp
and
mov
adc
push
cmp
push
pop
stc
xchg
and
and
inc
popa
insb
cmc
fildll
and
jae
fcmovnu
push
mov
sbb
fucomi
fs
mov
es
arpl
in
push
iret
or
xlat
inc
cmp
mov
adc
inc
outsl
mov
pop
jne
std
mov
adc
mov
das
add
lret
mov
or
add
xor
out
lret
push
mov
lods
cmp
gs
pop
or
inc
ja
and
pusha
es
js
xchg
add
out
and
dec
push
mov
sbb
out
loopne
inc
or
imul
iret
aas
movsl
lods
cmp
add
mov
and
das
cmpsl
cmp
mov
lcall
xor
xchg
or
mov
test
lds
mov
out
push
pop
push
cmp
lret
scas
ja
in
jge
fcmovnb
in
mov
pop
mov
mov
mov
mov
xchg
clc
mov
dec
icebp
outsl
dec
dec
adc
in
push
fimuls
popf
inc
test
pop
pop
fdivl
mov
fisttpl
outsb
sub
popa
ds
mov
mov
jb
push
inc
icebp
or
pop
jl
xchg
cmp
sub
jb
fcmovb
mov
cmp
je
or
pushf
mov
push
mov
xlat
and
outsl
out
or
test
or
in
jecxz
jp
mov
adc
stos
out
xlat
sti
jb
movsb
stos
repnz
test
sbb
sub
or
adc
xchg
pop
lcall
dec
sub
add
cltd
cmp
scas
xchg
fs
shlb
dec
les
dec
cmp
sahf
mov
mov
scas
aas
fs
dec
cmpsb
imul
push
in
out
inc
in
pop
sub
lock
shl
and
jmp
lret
xchg
std
push
jge
pushf
mov
and
push
push
mov
xor
dec
insb
jnp
push
fcoml
and
mov
mov
std
daa
sub
cmpsl
mov
divl
mov
out
jge
aas
adc
xchg
frstor
jg
psrad
and
arpl
sbb
sti
jne
mov
aam
lods
jp
loop
data16
lods
adc
lcall
std
pop
xchg
xor
popf
pop
pusha
xchg
push
es
or
jmp
pushf
xor
rcrl
cmc
dec
xchg
xchg
imul
addr16
cli
xor
add
imul
fidivrs
cmp
sub
mov
push
jnp
je
mov
or
into
ds
std
adcb
jbe
lret
inc
pop
or
adc
push
xor
pop
jno
or
cmc
xor
pop
js
out
jle
xchg
fdiv
shll
mov
cli
adc
cmp
out
mov
push
nop
in
or
sbb
sub
push
pop
pop
inc
scas
sbb
pusha
repnz
adc
adc
jg
jno
mov
xchg
cmp
shlb
popa
cs
jns
js
mov
sbb
lods
lahf
std
mov
fistl
jae
push
bound
jnp
sti
ret
cmp
push
push
mov
inc
pop
incb
push
out
in
cs
lods
outsl
sbb
inc
into
dec
mull
mov
into
ret
aad
mov
pusha
pop
xchg
add
fs
dec
mov
dec
pop
imul
sbb
dec
fs
cmc
cltd
xchg
stos
clc
jno
dec
hlt
jnp
inc
jecxz
sbb
fisubrl
cmpl
cmc
cmp
cs
popa
mov
pop
or
out
ret
ss
inc
aam
loope
out
sbb
lock
inc
dec
mov
cmpsl
mov
test
mov
mov
data16
push
sub
or
xlat
xchg
cmp
enter
inc
cmp
aam
jns
xchg
movsl
sbb
iret
add
add
rorb
fists
push
mov
push
xor
js
int3
mov
add
arpl
bound
mov
mov
enter
imul
outsl
addr16
fidivs
cmpsb
push
cmpsl
popa
pop
sarb
scas
pop
jge
xchg
jne
cmp
mov
cld
jnp
imul
jmp
pop
dec
mov
leave
call
jne
add
mov
enter
daa
int
ret
lcall
lods
dec
mov
inc
popf
mov
and
sub
cmpsl
movsb
or
imul
cltd
add
cmp
mov
xchg
mov
sbb
and
ljmp
mov
jno
mov
adc
jo
movsl
push
pusha
sbb
pop
add
in
mov
fucomp
inc
mul
cmp
mov
inc
insb
jae
sbb
cmp
or
dec
sub
in
push
sub
mov
sbb
int3
enter
mov
xor
xor
das
lods
cli
movsl
int3
cli
jno
push
adc
arpl
call
bound
mov
bound
subb
pop
subb
xchg
mov
mov
mov
aam
lock
jmp
int3
adc
dec
sti
xchg
or
mov
call
xchg
xor
mov
jmp
adcb
xchg
mull
mov
inc
cmp
iret
dec
mov
push
cmc
jmp
mov
flds
pusha
fistl
and
and
out
sarb
lods
mov
outsl
jmp
dec
or
dec
sub
orb
mov
and
add
pop
les
sbb
mov
inc
jb
or
fdivrl
std
ds
cwtl
push
std
push
or
pop
test
cmpsb
pop
sbb
das
inc
push
in
mov
test
cmp
inc
cwtl
cmp
add
mov
fstl
adc
mov
pop
fsubrs
lret
sbb
sbb
push
cmp
mov
jp
leave
outsl
or
push
xchg
sub
in
and
sbb
icebp
lret
pushf
rclb
jmp
filds
jmp
ja
aas
mov
jno
outsb
filds
testb
or
inc
outsl
hlt
test
das
lods
or
mov
jno
hlt
pop
data16
sub
xchg
mov
test
ret
xchg
into
xor
mov
lea
shll
or
addl
or
test
xchg
mov
rolb
inc
outsl
adc
pop
addr16
icebp
pop
inc
sbb
insl
fmulp
dec
add
jnp
mov
roll
mov
push
cmpsl
popf
sbb
dec
mov
cli
hlt
stos
sbb
aaa
ja
and
rcr
xchg
scas
dec
lods
out
pop
iret
loopne
pop
cmp
fimull
popf
xlat
das
mov
std
fs
pop
imul
out
inc
inc
adc
in
mov
ret
cli
mov
imul
mov
leave
in
xorl
inc
scas
fidivl
adc
sahf
lahf
int
inc
aas
repz
mov
in
pop
psllw
into
lcall
mov
ja
jbe
mov
sub
divl
sti
stc
dec
inc
cmp
xor
mov
inc
push
std
sahf
in
sarb
xlat
or
pop
loope
or
mov
mov
inc
push
inc
cmp
lahf
adc
mov
aam
popa
jno
or
mov
fistl
sbb
add
xchg
in
test
ss
pop
data16
xchg
ljmp
xor
cmc
lods
mov
lret
popf
pop
insl
aas
in
popa
mov
icebp
sbb
cli
jae
push
out
adc
fildll
pop
dec
nop
mov
mov
mov
jl
pop
jae
pop
inc
sub
ljmp
sbbl
xchg
dec
lret
in
or
xor
xchg
shl
mov
mov
fistps
or
call
add
imulb
jno
rcll
xor
cmp
xchg
add
repz
sub
es
outsb
fcoms
pop
xchg
dec
sti
and
sbb
adc
xchg
xlat
push
mov
mov
cmc
jns
jecxz
int3
sahf
push
adc
mov
inc
jmp
fnstcw
stos
aam
push
iret
dec
jnp
mov
scas
sbb
lret
cmp
rcl
rclb
xor
lea
push
cwtl
cmp
ret
and
pop
pop
cmp
inc
mov
fwait
mov
xor
adc
test
aam
xor
inc
daa
pop
pusha
test
ja
mov
dec
xchg
sub
xor
inc
shlb
rcrb
push
cmpsl
out
sti
and
enter
sbb
scas
movsl
repnz
or
xor
scas
xor
sbb
mov
xchg
adc
cli
mov
sbb
testb
in
cmp
and
adc
inc
in
into
and
arpl
xor
gs
or
into
lds
jge
push
jl
push
lods
rorl
in
or
push
bound
sahf
cs
pop
scas
mov
mov
mov
push
cmp
cmc
and
and
add
xchg
cmp
xchg
push
or
and
je
push
cmp
or
push
cmpsl
js
int3
lret
mov
lock
cli
lea
mov
adc
lahf
xorl
inc
mov
clc
xor
movsb
gs
pop
cmp
inc
xor
jecxz
adc
xchg
std
inc
dec
insl
cmc
mov
sub
adc
notb
pop
in
ss
stos
or
jle
adc
call
and
mov
add
xchg
es
jae
pop
and
jne
std
jl
xor
nop
sub
mov
xor
orb
jns
and
gs
xchg
add
xchg
jle
imul
dec
mov
sbb
divl
or
sbb
and
popf
insb
xchg
cmp
sub
es
movsl
sbb
cs
add
and
xchg
pop
mov
imul
mov
insb
mov
loop
or
mov
inc
push
xor
loop
int
jne
imul
pushf
pusha
xor
and
in
rolb
adc
jl
lmsw
and
mov
imul
in
loopne
inc
xlat
mov
in
jle
popa
popf
mov
jno
popf
push
fisttpl
movsl
sub
idivb
sub
mov
cmpl
lcall
adc
add
into
clc
call
mov
push
xchg
inc
scas
xchg
ja
gs
push
sub
sub
int3
mov
outsb
cmpsl
cmpb
cld
xchg
mov
mov
js
mov
dec
adc
mov
mov
nop
out
push
ljmp
mov
mov
mov
push
adc
clc
ds
fs
pop
cmp
sub
or
jmp
mov
pop
std
popa
and
sbb
leave
ljmp
xchg
sbb
push
cli
ljmp
lds
push
fidivrs
mov
pop
lds
jns
es
lods
test
sti
add
fldt
xlat
mov
mov
les
fwait
jae
es
notl
loope
and
adc
adc
loope
fimuls
push
aas
dec
je
inc
xchg
lret
enter
mov
mov
xlat
ja
push
cmp
pop
and
popa
xor
imul
lcall
or
inc
jne
and
divl
jb
mov
in
lds
sub
es
rclb
jmp
jns
shl
adc
mov
lods
jae
pop
adc
fisttpl
stos
jmp
fistl
jae
cmpsl
jbe
xchg
or
fdivrp
in
jns
js
cmp
mov
ret
outsb
pop
call
int
mov
push
xchg
ljmp
loope
mov
cmp
dec
data16
into
enter
dec
mov
mov
in
scas
mov
sti
js
pop
xchg
out
mov
idivb
push
insl
js
pop
and
jecxz
mov
in
fs
cli
testl
sbb
in
fistps
inc
jo
xchg
adc
dec
scas
sbb
mov
je
xor
mov
jae
add
aad
add
aad
ja
cmpsl
les
add
pop
mov
push
xchg
test
les
test
push
dec
add
add
jl
inc
add
mov
mov
pop
mov
cs
pushf
mov
xchg
cld
scas
pop
aas
xchg
pushf
cmp
add
xor
inc
test
stos
aas
out
scas
das
les
test
xorb
hlt
sub
jecxz
pusha
pop
add
scas
gs
mov
add
icebp
sub
pop
sub
adc
and
rorl
je
cvtdq2ps
sub
loope
and
and
mov
mov
mov
xor
adc
ret
pop
cmp
dec
push
sub
into
dec
fbld
inc
jo
adc
and
int3
scas
xchg
jns
js
and
insl
mov
cld
jo
pop
sbb
sub
dec
mov
add
movsb
fnstenv
test
bound
sbb
sub
bound
fcomps
xor
mov
fidivrl
js
mov
xor
lods
jg
es
pop
xchg
ss
xchg
scas
outsl
shufps
sbb
ret
jae
mov
lret
xchg
scas
sbb
mov
and
faddp
inc
inc
nop
pushf
bound
scas
pop
sub
sbb
daa
out
pop
fsubrl
xchg
mov
push
or
jo
sbb
jp
lock
loop
dec
inc
ja
out
repz
lea
xor
fsubrl
jp
pop
sbb
ret
test
sbb
sbb
outsl
adc
pop
sub
cld
into
pusha
cli
dec
jne
test
shlb
aaa
cld
add
push
es
addb
pop
sahf
cmc
xchg
cltd
push
test
les
fwait
int3
dec
leave
cltd
jl
lods
enter
mov
push
xchg
test
jg
mov
cmp
bound
add
shrb
fstpl
loope
shrb
cwtl
fiaddl
vpmadcsswd
rcll
xchg
jo
sbb
xor
add
scas
sti
mov
xchg
lds
and
ret
iret
xlat
outsl
pop
adc
out
mov
loopne
in
pushf
inc
or
int
xchg
mov
push
mov
xchg
sbb
dec
or
lock
mov
in
mov
lret
sub
dec
into
dec
cmp
mov
push
aad
mov
dec
in
dec
jns
mov
jo
mov
lret
je
in
pop
sub
jns
jne
mov
fldcw
sbb
outsl
xchg
mov
pop
aas
pop
adc
lcall
cmp
push
cwtl
adc
out
sub
iret
out
jmp
cmp
push
add
pusha
xchg
mov
add
xor
push
inc
sub
mov
jns
fs
orb
jno
xchg
jo
imul
dec
inc
cs
xor
sbb
push
out
icebp
pop
cs
inc
sub
test
jno
sub
xor
repnz
fwait
dec
push
adc
pop
fldenv
fnstcw
jno
and
push
in
fildll
and
out
loop
sub
roll
mov
cmp
jmp
jl
xor
xchg
dec
cmp
mov
cmp
add
jle
nop
xor
inc
mov
push
mov
imul
test
sti
add
inc
ds
ja
pushf
dec
in
push
insl
jg
mov
insb
idiv
clc
xor
out
xlat
adc
xlat
push
pop
lcall
fimuls
data16
shr
jno
jp
popf
jp
mov
popa
lcall
push
add
mov
sbb
pop
and
cmp
gs
pop
popf
sub
mov
mov
xor
jg
cmp
or
loopne
push
sbb
jo
sub
add
mov
mov
mov
sbb
push
addr16
in
lea
mov
repz
jae
cwtl
mov
sbbb
mov
or
push
fmull
lds
jl
mov
and
out
test
pop
xchg
push
pop
push
gs
pushf
daa
push
lahf
iret
out
ffreep
mov
ljmp
cld
sbb
push
add
out
sub
cmp
jae
xlat
lahf
mov
mov
mov
mov
jecxz
cmp
rorb
movl
adc
int3
lea
xor
mov
jecxz
shlb
bound
dec
jns
mov
pop
ja
imul
and
adc
mov
lods
xor
adc
xor
lcall
insb
cmc
or
test
mov
xor
cmc
lahf
outsl
in
push
sahf
ja
xor
dec
aas
scas
ljmp
arpl
jb
adc
cmp
les
adc
xchg
cmpsl
mov
cmp
scas
adc
jle
enter
fwait
mov
push
jae
mov
hlt
and
xchg
cld
repz
fwait
cmpsl
mov
pop
jae
jo
inc
clc
lcall
cli
add
sarl
push
iret
pop
xchg
xchg
mov
inc
cmp
xchg
call
pop
push
sbb
pop
lods
arpl
push
inc
loop
test
mov
inc
ss
lods
addb
mov
or
ret
mov
and
and
xor
fmull
rcr
mov
addr16
imul
mov
scas
ss
xchg
sarb
out
pop
mov
fld
aaa
xor
dec
pop
js
xlat
mov
cmp
mov
std
xchg
enter
or
cld
lcall
adc
sub
rcrl
sahf
adc
cmc
xlat
rcr
lret
hlt
pop
fstpl
aas
in
and
jmp
dec
mov
addl
fcompl
fildll
rorb
scas
ja
sbb
lahf
iret
sub
or
in
inc
pushf
stos
rcrl
xor
push
push
andl
or
mov
movb
loope
jle
pop
cmp
daa
dec
pop
ss
adc
push
xor
adc
js
xchg
out
mov
jmp
outsb
jb
xor
loopne
jge
jecxz
addb
mov
mov
aaa
xorl
and
and
xor
inc
jle
xor
add
sub
inc
movsb
dec
in
mov
jbe
xchg
inc
rcrl
and
jp
adc
push
and
dec
mov
hlt
dec
xlat
xchg
cmpsb
call
inc
pop
sbb
mov
jbe
and
rorl
or
jmp
daa
jb
mov
sub
add
or
aas
sbb
insb
in
inc
adc
mov
mov
jnp
repz
cmp
das
lahf
sub
aad
mov
ja
fcoml
jb
add
add
popf
or
addr16
into
out
movsb
shlb
jmp
shlb
push
in
and
adc
jns
sub
fdivr
clc
daa
jp
dec
dec
mov
out
scas
push
push
test
jp
lods
repnz
dec
icebp
faddl
rcll
xlat
cld
mov
mov
or
les
mov
add
sti
push
xchg
pop
xchg
dec
xchg
popa
xor
notl
cmp
or
out
adc
xor
shlb
xor
mov
mov
and
sub
lahf
add
rolb
je
mov
fwait
cmpb
or
cmp
cli
test
xchg
inc
adc
sbb
and
int
mov
nop
pop
loope
push
fisttps
push
fisttps
push
arpl
fiadds
lea
or
lcall
loopne
cltd
lods
add
xor
imul
out
int
ret
das
xor
cwtl
pop
cmp
fadds
outsl
add
daa
cld
rorl
mov
pop
and
shrl
ljmp
js
xor
iret
ljmp
cmp
add
pusha
not
movsl
jae
jno
rcrb
data16
dec
push
jmp
add
mov
into
into
xlat
or
cmp
adc
cmp
call
mov
push
aas
cld
movsb
mov
and
lcallw
pop
or
imul
adc
pop
push
int3
fcoms
testb
orl
mov
scas
lahf
sbb
mov
lret
adc
and
sbb
clc
cli
mov
cmp
jl
add
adc
sbb
xchg
scas
fsubrp
inc
jns
mov
in
pop
pop
fmulp
jo
sub
mov
fists
adc
mov
loop
push
in
lock
push
xor
psubusb
push
jae
movsb
arpl
xor
pop
sbb
in
xchg
rolb
pop
xor
pop
xchg
sarl
sbb
cwtl
lods
mov
lea
test
jp
clc
or
adc
xchg
mov
scas
outsl
inc
jnp
push
jns
cmp
fcoms
fidivrs
je
push
shrl
nop
dec
adc
in
sbb
enter
mov
insb
repz
pop
cmp
mov
shr
lods
sbb
inc
loop
cmpsb
adc
xchg
cmc
psllq
mov
int
pushf
mov
fisubs
sti
pop
addr16
pop
mov
or
push
outsl
dec
and
int3
mov
cmc
mov
rcr
dec
movsb
inc
jnp
data16
sti
rolb
flds
frstor
fnstenv
mov
or
scas
mov
jbe
mov
in
xchg
cli
pop
imul
jp
es
icebp
mov
out
shr
cmp
and
mov
mov
push
cmp
mov
pop
mov
xor
dec
mov
jns
inc
sbb
add
nop
mov
xor
stos
ljmp
mov
fs
fcomp
in
imul
push
cmpsb
es
pop
mov
aad
fs
sti
sbb
inc
mov
xchg
lock
lods
xor
insl
call
jns
cmp
sbb
testb
or
pop
or
call
popf
fnstsw
js
std
cs
push
inc
repnz
js
loop
out
push
mov
mov
ja
sahf
sub
fwait
hlt
out
in
jle
jnp
mov
das
xor
inc
xor
roll
gs
das
push
pop
test
inc
lahf
push
scas
and
adc
xchg
inc
inc
add
ds
mov
sub
bound
sbb
pop
jmp
repnz
cltd
repz
fsubl
movsb
jb
clc
or
mov
iret
out
inc
sub
push
or
cmp
mov
or
sub
xor
cmp
mov
or
test
mov
sti
lret
fstl
call
xchg
movsl
mov
shll
out
fisubrs
rorl
jmp
ljmp
popa
mov
xchg
fistl
xchg
jge
ret
push
stos
cmpsl
push
popa
xchg
push
push
or
pop
lock
xor
jae
jne
outsl
push
mov
cmc
xchg
pop
inc
push
or
jmp
lods
mov
or
xchg
dec
xor
pop
incl
cwtl
or
dec
in
adc
dec
pusha
pop
or
mov
shlb
cli
pushf
sub
dec
cmp
outsb
mov
and
cmp
mov
mov
leave
gs
pushl
sbb
roll
jns
mov
roll
bound
fdivp
scas
cmp
inc
clc
mov
pop
mov
dec
cmp
inc
add
pop
cmpsb
outsb
pop
scas
ss
clc
jbe
aam
sub
aas
inc
scas
inc
jno
idivb
push
out
lcall
jns
in
es
and
jle
cmpsl
lock
sbb
out
cld
push
xchg
jb
and
lahf
jp
pop
lods
imul
test
or
inc
jl
xchg
js
mov
das
icebp
jmp
jne
movsl
jnp
mov
pop
cmp
adc
ljmp
repnz
test
jnp
cs
pop
dec
mov
xor
pushf
mov
aad
mov
xchg
or
and
jae
dec
dec
mov
dec
inc
cwtl
js
shl
andb
pop
xor
popa
xchg
or
pusha
pop
mov
and
mov
push
cli
sbb
gs
push
or
add
loop
jo
gs
movsl
xchg
xchg
data16
push
mov
addl
shr
or
repz
dec
in
mov
shl
dec
daa
test
incb
rcr
jmp
aaa
adc
aaa
mov
cmp
pop
shr
repnz
jno
movsl
pop
jns
mov
xlat
orb
pop
mov
stc
ljmp
cmc
lret
jg
mov
int3
xor
xorb
jne
ret
lcall
cwtl
pusha
or
rcrl
and
mov
movsb
fidivs
pop
movsl
xchg
xchg
out
or
out
in
je
mov
cmp
adc
test
ret
addr16
adc
dec
xchg
repz
jl
dec
pop
iret
js
jge
xchg
pop
mov
jns
pop
fcmovne
popl
or
inc
stos
push
fs
mov
and
int
cmp
pop
jns
mov
mov
movsb
dec
dec
aad
mov
call
xorl
jl
mov
and
cld
sti
sbb
adc
rclb
shlb
dec
cli
pushf
push
ss
pop
adc
push
mov
add
sti
mov
not
cmpb
inc
daa
push
jnp
daa
sbb
in
cmp
mov
mov
xchg
ds
jecxz
mov
pushf
cld
sarl
adc
jecxz
fsubrs
jb
in
dec
add
lock
rorb
lods
adc
inc
lret
pop
jbe
mov
mov
cmpsb
push
push
jbe
cmp
rcrl
arpl
loope
arpl
aaa
outsl
add
sbb
mov
gs
push
push
cmp
cmp
fs
fld
mov
xchg
cld
sub
ss
xchg
jecxz
jl
aam
jge
pop
or
lret
pop
stos
movsl
lcall
leave
cmp
xor
or
or
lock
xchg
inc
and
dec
in
nop
ja
incb
lret
rep
out
sbb
shll
and
xor
xor
bound
cmp
dec
mov
mov
dec
dec
push
fsub
xchg
adc
fstps
push
fdivr
js
or
in
xchg
xchg
add
and
cwtl
in
mov
loopne
xor
mov
pop
loop
or
popf
jp
xchg
sbb
sbb
push
xchg
ds
lahf
jno
daa
or
cmpsb
aad
or
fucomip
xor
mov
pop
jbe
pop
cmp
mov
sub
test
mov
jae
add
pop
and
xchg
cmp
sub
push
adc
or
add
jg
lret
dec
mov
fwait
sub
push
std
jae
inc
insb
mov
mov
adc
rcrl
addr16
enter
imul
or
jo
xchg
or
xchg
dec
cwtl
inc
add
mov
push
aad
xor
jmp
mov
mov
arpl
mov
das
pop
out
loop
mov
dec
out
cmpsb
es
aas
sbb
add
test
popf
sbb
loop
loopne
push
mov
or
test
sub
xchg
filds
mov
movsb
scas
push
adc
mov
mov
fidivs
xor
mov
jb
lds
insb
sbb
ljmp
or
sub
xchg
leave
mov
rclb
lret
jmp
int
shll
mov
adc
jecxz
arpl
insl
mov
mov
sub
xchg
sbb
xlat
aas
mov
cmpb
loope
add
pop
mov
fnstsw
ds
pop
adc
sbbl
cmp
xor
add
rcll
dec
pop
and
xor
sbb
mov
sbb
sar
repz
out
push
sahf
sbb
jmp
adc
dec
movsl
cmp
loopne
sbb
lahf
insl
out
mov
sub
push
jge
aaa
sahf
cmc
cmpsb
in
jge
or
shll
push
ja
or
mov
lea
fdivrl
sub
dec
repnz
jae
aad
pop
push
add
rcr
adc
push
rcll
mov
mov
je
jb
es
or
sbb
mov
mov
in
lock
lock
out
mov
xor
inc
cmpsl
gs
mov
fs
mov
pop
pop
movsl
pushf
or
jge
xchg
inc
lcall
and
and
dec
push
xchg
mov
lcall
jno
mov
ja
gs
push
jo
pushf
lods
cmp
test
jns
push
xchg
mov
nop
adc
xchg
xchg
fcmovnu
xchg
mov
pop
popf
jne
cmc
clc
cmp
mov
push
movsl
stos
idivb
mov
cmp
loop
insb
bound
or
xlat
adc
add
push
pop
pusha
outsb
mov
in
adc
jp
jecxz
incl
dec
out
sub
rclb
int3
pop
cwtl
pop
out
cmp
inc
mov
in
ret
add
frstor
fcoml
aad
mov
mov
out
xchg
or
mov
sub
js
nop
pusha
sarb
adc
dec
sbb
mov
mov
cli
imul
movsb
xchg
les
push
dec
cmp
dec
xor
es
inc
inc
inc
mov
sbb
int3
pop
imul
adc
add
in
xchg
sub
jo
aas
jne
out
data16
jb
and
jmp
mov
or
das
gs
out
ret
xor
sarb
aad
insl
sbb
outsl
fsubrs
push
les
inc
gs
push
sub
clc
sub
daa
popf
negl
mov
pop
stos
xor
push
adc
xchg
divl
mov
sub
mov
adc
mov
mov
mov
sub
fwait
xor
inc
cmc
cs
imul
cmp
in
gs
add
pop
mov
pusha
pusha
xor
mov
not
fsubs
pop
int3
and
inc
pusha
lret
pop
mov
mov
cmp
pop
insl
ficoms
pushf
rcrl
jge
fwait
out
lods
add
pop
dec
lock
adc
or
and
push
jge
cmp
dec
cwtl
stos
xor
pop
mov
jns
sub
in
mov
jns
insl
pop
push
stc
adc
fwait
mov
mov
cmpsl
jns
in
fimull
addr16
jns
in
inc
cmp
sub
xchg
jno
jp
xchg
nop
shlb
fwait
cltd
add
push
ret
aad
je
dec
cmp
loopne
je
xchg
mov
push
mov
std
pushf
out
inc
leave
int
sbb
sbb
push
mov
xchg
cmp
mov
pop
mov
leave
cmp
shl
outsl
in
mov
insl
insb
stos
mov
lock
mov
cmp
sub
mov
cwtl
jmp
lock
repnz
mov
or
push
ret
xchg
and
js
ficompl
clc
dec
inc
xchg
mov
mov
ret
sub
or
icebp
mov
inc
jo
sbb
sub
jns
sub
cwtl
mov
jbe
inc
or
jbe
dec
imul
stc
ljmp
dec
mov
out
or
pop
xchg
lret
mov
clc
hlt
or
fucomip
imul
mov
or
cmc
xchg
mov
sub
dec
add
fwait
jbe
fisubs
sub
cs
push
enter
xor
popa
test
mov
push
outsl
aas
add
or
and
push
dec
jae
mov
cld
mov
fnsave
scas
xor
sub
mov
jl
gs
push
jb
add
mov
mov
cmp
or
push
inc
sub
pop
mov
mov
push
push
push
jns
xchg
subb
or
xor
pop
jle
xor
push
push
cmp
mov
ret
mov
int3
sbb
test
es
cs
cld
add
test
enter
pop
pop
add
cmp
fiadds
fs
push
movsb
dec
mov
bound
popl
pop
test
jb
or
mov
xor
push
adc
sbb
fs
inc
dec
cltd
sbb
loope
sub
jb
adc
or
mov
popa
mov
mov
mov
test
stos
add
inc
scas
jl
xor
mov
cld
pop
mov
loop
adc
jmp
cmp
int
jne
test
inc
imul
imul
or
aas
fs
push
xor
sub
sti
aas
sar
add
scas
cli
aaa
ja
mov
mov
out
dec
popa
lcall
testl
lret
sbb
mov
jl
push
out
mov
jnp
dec
scas
xchg
xchg
inc
push
les
sub
mov
stos
push
loopne
jmp
std
xchg
xor
mov
test
rcl
out
out
in
mov
dec
ljmp
mov
and
push
dec
push
loopne
imul
out
cmpsl
add
imul
jp
arpl
lret
dec
stos
add
mov
cmp
fs
bound
mov
repz
decb
sub
lcall
adc
pop
hlt
fcmovu
jl
rclb
adc
dec
jg
insb
push
push
nop
mov
fcmovb
xchg
addr16
pop
sbb
in
sub
fs
xchg
sbb
mov
push
xchg
fidivl
lds
out
inc
sub
pusha
adc
mov
push
into
fwait
cmp
jae
std
daa
imul
pushf
xchg
in
cmp
shl
jge
cmp
jl
imul
add
adc
cld
pop
sbb
rolb
popa
jle
dec
dec
pop
daa
fwait
movsb
add
mov
pop
cmc
call
dec
inc
xorl
push
imul
pop
jge
fidivrl
dec
pop
push
ficomps
push
mov
int
or
mov
mov
xchg
fmuls
cmp
mov
in
mov
or
adc
jae
loopne
cmp
jo
jns
xchg
vcmppd
das
mov
popa
sub
inc
stc
popa
cmp
in
cwtl
lcall
push
mov
cmp
andl
in
or
xor
pop
jo
push
bound
decb
pushf
test
xchg
fwait
push
jmp
das
outsb
popf
xchg
ja
jg
xchg
cmp
lcall
int3
and
mov
outsl
int3
sub
fsubr
push
fcomp
sub
cld
test
lcall
hlt
fstps
testl
push
add
and
mov
sbb
stc
lret
sti
lds
xchg
xor
js
cmpsl
repnz
pop
scas
mov
lock
outsb
mov
nop
dec
xor
ss
shl
psrlw
sub
xchg
sub
dec
std
mov
pop
dec
lahf
int
push
popf
cmpsl
lahf
xlat
jnp
fimull
jecxz
pusha
jl
mov
out
xor
mov
push
outsb
aam
push
test
mov
add
lcall
movhps
ja
test
inc
lock
das
cmp
call
pop
cmpsb
mov
adc
loopne
ljmp
test
adc
lret
dec
clc
push
call
xor
xor
in
adc
aad
lcall
xchg
pop
dec
xchg
xchg
xchg
clc
jg
imul
sbb
movsb
imull
pop
fbld
sti
or
xchg
sub
adc
sbb
or
idivb
dec
mov
dec
in
or
dec
cmp
jl
mov
xchg
arpl
jb
pop
mov
gs
pop
xchg
mov
xor
jbe
testb
add
loope
xchg
rorl
test
movsl
and
mov
mov
inc
les
jge
repnz
jmp
adc
and
sahf
shrl
jp
scas
sub
in
cli
jns
and
test
iret
mov
sti
cmc
lods
loope
in
jne
adc
js
or
or
fdivrp
dec
fs
pop
xor
cli
jae
ror
and
popf
in
mov
mov
cwtl
ret
add
lock
je
loope
rcrl
or
pop
xchg
das
int
mov
fdivrs
inc
jmp
sub
jns
inc
xchg
xchg
add
cmpb
dec
pushf
inc
xor
ja
repz
out
sbbl
bound
out
clc
sarl
orb
cmc
daa
shl
inc
push
mov
repnz
jns
add
and
sbb
jp
bound
icebp
inc
loop
cmpsb
nop
rcl
call
clc
sar
insl
mov
cli
dec
push
mov
out
mov
push
sub
xchg
es
je
xchg
out
outsl
sub
addr16
xchg
add
xor
mov
and
mov
add
cmpsl
sub
lea
jne
inc
in
je
jmp
sub
jmp
fwait
test
pop
js
adc
xchg
pop
mov
cmp
sub
ljmp
pop
xor
add
ljmp
xor
adc
out
dec
pop
xor
jge
dec
push
test
mov
cltd
in
cmpsb
sahf
mov
daa
ret
mov
ss
adc
pop
stc
mov
inc
xchg
and
xorb
lods
mov
sbb
cmp
pop
daa
mov
and
fsubrl
sub
push
xchg
and
int
mov
imul
aaa
daa
lock
mov
push
in
mov
je
inc
outsb
rolb
repnz
xor
imul
push
jmp
les
icebp
mov
cld
je
sub
push
pushf
cmp
fdivs
jmp
or
hlt
push
inc
in
jg
mov
stos
jecxz
mov
xchg
mov
or
xor
lret
mov
stos
sbb
daa
and
mov
sub
test
or
rcrl
sbb
mull
push
test
scas
cs
rcr
mov
xchg
outsb
inc
mov
lds
hlt
test
mov
mov
imull
shl
inc
or
or
movsb
xor
pop
adc
dec
test
loope
mov
pop
pop
fisttpl
and
mov
js
movsb
lock
enter
adc
cmp
gs
cmc
aaa
cltd
cmpsl
pushf
mov
in
mov
popa
push
mov
jno
sbb
pop
cmp
imul
cmp
out
mov
fisubs
cmp
fstl
adc
lods
das
add
xchg
or
popa
adc
mov
cmp
add
and
inc
mov
sbb
test
scas
mov
icebp
or
cmpsb
xchg
out
in
mov
lahf
dec
jle
insb
in
ljmp
hlt
ficompl
or
inc
mov
push
ret
fldl
add
xchg
adc
add
push
ror
fists
jl
dec
faddl
xor
pop
sti
loope
push
test
ljmp
pop
mov
jo
fbstp
push
add
fwait
inc
sbb
jbe
and
repz
movsl
dec
xlat
add
stos
mov
mov
mov
mov
jmp
bound
mov
rolb
jbe
mov
add
inc
or
hlt
jns
jmp
cmp
or
mov
out
fstps
xchg
cli
dec
xchg
negb
cltd
loope,pt
jnp
or
jb
aam
mov
xor
jno
enter
pop
loope
or
push
cmpsb
test
push
mov
mov
aas
and
in
inc
loop
mov
orb
es
pop
fbld
dec
es
aad
sub
push
hlt
mov
xor
cli
pop
jb
fcmovb
aad
in
lret
adc
sbb
mov
fcompl
cmc
daa
in
pop
shll
dec
inc
adc
jbe
lea
jns
jmp
jbe
cwtl
adc
dec
lods
stos
sbb
add
gs
pop
xchg
loope
int
imul
les
lea
push
jo
pop
pavgw
loope
xchg
fs
dec
jmp
pushf
cwtl
rorl
out
mov
popa
sbb
pop
scas
add
xor
fwait
mov
lcall
xchg
mov
adc
movsl
adc
sbb
mov
test
pushf
sbb
inc
cmp
cmp
push
mov
push
int
sbb
xchg
or
adc
add
rolb
aaa
out
xchg
mov
xchg
data16
or
fidivl
push
test
bound
pop
mov
repnz
outsb
sbb
test
cmpsb
enter
inc
mov
pop
bound
add
jmp
inc
xor
test
sub
push
inc
insb
lret
sub
fsubrl
inc
push
aam
outsl
push
xor
fstpl
daa
sbb
hlt
sub
mov
mov
pushf
cmp
cmc
insl
andb
push
jg
movsl
sub
inc
ret
iret
add
lea
xchg
std
ljmp
les
and
push
fildl
mov
stos
sub
pop
adc
stos
push
mov
mov
adc
xlat
sub
scas
pop
pop
fs
xchg
jg
outsl
jmp
push
fisttpl
mov
pop
pushf
dec
bound
dec
jno
call
mov
push
inc
and
xchg
sbb
pop
shlb
in
add
push
stc
push
lods
bound
add
repnz
xchg
mov
and
adc
test
icebp
jecxz
or
or
sub
and
pop
sbb
or
and
lcall
dec
lcall
mov
leave
lea
call
das
movsl
loop
and
out
xchg
jmp
idivb
stos
into
pushl
lods
lds
push
mov
xlat
in
dec
cltd
mov
mov
inc
xlat
push
outsb
push
xchg
pop
xchg
inc
cli
insl
adc
test
jns
sbbb
fimull
fwait
je
xor
inc
xchg
xor
in
cmp
daa
rcrb
stc
jns
xchg
xchg
lock
repz
dec
add
inc
mov
and
into
scas
push
lods
testb
ja
mov
mov
ret
ds
jbe
ljmp
lea
mov
jb
sbb
dec
into
jb
inc
clc
sbb
pop
pop
int
ret
cmp
cld
inc
mov
lret
fxch
push
in
imul
push
lods
cmp
les
or
shlb
push
addr16
idivb
fiadds
mov
jno
cmovae
xchg
repz
dec
dec
mov
pop
imul
mov
push
add
mov
lret
lahf
dec
cmpsb
add
mov
sub
bound
stos
or
mov
cmp
xor
sarl
mov
out
ja,pn
negw
je
cmp
jp
add
int3
cmpsb
sbb
lods
jbe
dec
push
dec
or
bnd
das
inc
mov
stc
sbb
fists
cmp
push
and
shll
jnp
push
add
xor
mov
testl
hlt
and
rorb
aam
sbb
jmp
arpl
out
xlat
mov
xor
dec
mov
pop
lahf
clc
pop
jae
lds
dec
or
sbb
mov
cmp
lahf
xchg
mov
and
inc
xchg
and
stc
dec
push
into
ficompl
mov
push
ret
pop
mov
sahf
sbbb
insb
scas
adc
orb
les
mov
stc
aas
adc
test
decl
out
cmp
push
out
test
stos
ret
clc
pop
and
jg
mov
stc
pop
jns
lea
xchg
stos
add
dec
sbb
fidivrl
mov
jecxz
fs
popa
call
jge
pop
addr16
dec
shr
jl
loopne
sub
lret
jle
cmpsl
nop
sbb
pusha
mov
pop
mov
sub
mov
stos
mov
push
cs
inc
inc
cmp
dec
push
and
stos
mov
mov
popf
push
imul
imul
adcl
shlb
mov
cs
mov
sti
test
sub
out
mov
adc
pop
pushf
cmpsl
jnp
mov
add
adc
dec
sbb
sub
inc
outsl
jb
xchg
js
pop
sahf
dec
cmc
repnz
in
xlat
jb
cmp
pop
popa
imul
mov
dec
xor
mov
push
fs
aaa
sub
push
cmp
cwtl
mov
adc
scas
push
cmpsl
inc
shr
mov
lods
and
push
stc
jge
in
fildll
sahf
fnsave
cmpsb
stos
or
add
test
and
lret
add
lock
aas
mov
scas
jnp
lcall
pop
xchg
mov
sbb
clc
hlt
ljmp
jne
rclb
shlb
mov
xchg
fdiv
xchg
data16
or
xor
pop
push
xor
mov
mov
popl
xor
mov
and
and
out
xorl
inc
ret
inc
lds
push
cmc
cmp
jnp
sbb
add
add
or
subl
cmp
shll
mov
ds
lods
aas
cmc
shll
popf
pop
loopne
jno
sub
jg
cmpsb
mov
inc
sahf
and
pushf
mov
cld
mov
cmc
pop
cmp
jns
add
xor
inc
rol
inc
dec
addb
pop
out
mov
jmp
andb
add
and
sub
lret
adc
sub
pop
dec
ss
in
push
or
ja
mov
or
enter
ss
stc
bound
in
cmp
inc
or
dec
inc
sbb
aad
push
sbb
aaa
mov
xchg
pop
mov
mov
jecxz
mov
cmp
inc
add
mov
pop
test
sahf
iret
pop
push
or
movsl
xchg
sbb
xor
jbe
fistl
lret
jl
mov
xchg
mov
repnz
cmp
frstor
mov
and
out
in
outsb
imull
js
imul
push
pop
cmc
nop
xor
xor
imul
repz
mov
popa
popa
add
imul
mov
cmpsl
sahf
xchg
popl
pop
jge
push
sub
and
shl
fdivl
xor
ljmp
cmp
addl
adc
cwtl
push
push
push
xchg
xchg
mov
mov
rcll
mov
xchg
push
stos
push
xchg
sub
lret
push
daa
popa
aad
sbb
jecxz
mov
in
fs
stos
pop
mov
mov
push
pop
jnp
insl
mov
sbb
inc
add
inc
inc
scas
in
mov
xor
fsubrl
mov
sbb
sub
sub
jbe
notl
jge
jae
icebp
scas
mov
mov
sub
xchg
cli
jmp
xor
cld
dec
in
mov
movsl
xor
rcll
stos
jnp
xchg
jecxz
and
sbb
or
fistps
fcoml
ret
inc
xchg
adc
aad
movsl
push
add
in
and
mov
icebp
jge
pop
inc
sub
daa
mov
and
jp
movsb
pop
pop
rorl
outsb
mov
push
and
rolb
xor
aam
fsubs
cmp
mov
das
xchg
movsb
out
fxch
mov
popa
sbb
mov
loopne
adc
xorl
addb
cwtl
leave
out
stos
xlat
push
mov
dec
in
repnz
lods
pusha
dec
sub
xchg
lret
jle
dec
loopne
stos
fstpl
pop
out
xor
push
test
sbb
icebp
push
push
push
in
pusha
push
repz
adc
aam
dec
aaa
jnp
ret
cmp
rorb
fs
das
pop
pusha
ljmp
aam
and
sub
sub
sbb
adc
mov
jmp
mov
fcmovnb
mov
dec
push
jno
aas
aaa
mov
mov
sbb
lahf
cmp
pop
pop
adc
adc
dec
sub
mov
int3
jecxz
outsb
add
lahf
mov
push
pop
mov
dec
rcrb
push
mov
dec
adc
iret
xor
pop
xor
mov
outsb
popf
jecxz
lcall
mov
adc
fldcw
mov
lods
inc
push
test
lahf
dec
mov
mov
dec
push
cmp
ja
nop
jno
push
sub
sti
pop
and
dec
xchg
mov
adc
pop
push
inc
cltd
out
inc
pop
nop
mov
adc
test
cmp
jl
mov
in
mov
aad
loope
xchg
rcrb
xor
cmc
jnp
aaa
addr16
push
add
mov
mov
sbb
stc
push
in
mov
adc
ds
or
and
lods
pushf
dec
stos
pop
jg
adc
inc
fisttpll
inc
ja
jge
xchg
loopne
testl
jb
push
lret
lea
pop
lods
fcompl
cmc
lods
jno
adc
jmp
jecxz
and
dec
add
or
adc
push
mov
repz
xorl
dec
add
sub
shrb
cmp
add
outsl
mov
ror
out
and
shr
fucomi
dec
fidivrl
xor
add
inc
andb
jne
push
xor
jae
xchg
or
fsubs
hlt
dec
inc
mov
xchg
in
mov
mov
loop
jecxz
sti
arpl
mov
pop
jbe
shlb
and
mov
push
int
lods
or
cmpsb
ret
cmpsb
rcr
insb
jmp
iret
insb
pop
sahf
jle
insl
mov
stc
sub
loop
loope
cmpsl
jge
and
sti
aad
lret
or
push
push
aam
in
out
adc
je
icebp
pop
dec
push
call
jo
jne
stos
or
hlt
icebp
call
ja
inc
dec
cmpsb
jnp
cmp
orb
into
xchg
dec
cmp
xchg
cmp
movsl
add
test
fstp
nop
and
movsb
shl
xchg
fldenv
jnp
push
pusha
adc
xchg
mov
shlb
add
dec
std
pop
jae
xor
cli
addr16
imul
loopne
std
mov
or
and
mov
ds
lods
icebp
les
dec
lds
rorl
xchg
xchg
test
mov
imul
mov
movsl
jb
add
sbb
je
mov
imul
mov
xor
cmp
xor
clc
xchg
add
mov
or
jne
addb
shlb
push
daa
movsl
xchg
rcr
dec
cmpsb
xchg
rol
adc
sub
std
inc
repz
pop
fs
push
mov
inc
cmpsb
pushf
sbb
cmp
outsl
adc
fcom
mov
mov
mov
push
mov
mov
xor
mov
push
or
es
dec
call
inc
sbb
mov
push
pop
xchg
jl
mov
mov
idiv
mov
sahf
and
sbb
add
xchg
add
adcb
xchg
scas
ret
sbb
mov
jl
aad
dec
dec
dec
inc
sub
aam
or
xlat
pop
or
repnz
ja
mov
clc
mov
out
cltd
shr
cmpsb
sbb
or
cli
pop
in
pop
xor
xchg
psubsb
push
dec
dec
in
push
inc
add
inc
call
andb
into
das
bound
sbb
inc
loope
into
sub
rorl
popa
xor
xor
fisubs
std
cmpsl
or
or
popf
lret
mov
clc
and
mov
jmp
dec
mov
pop
sbb
insl
lods
mov
test
dec
mov
mov
mov
xchg
bound
adc
mov
mov
cmp
xor
xchg
insl
nop
test
xor
clc
mov
data16
imul
arpl
jo
or
jmp
cmpsl
int3
insb
xlat
mov
cld
rclb
pop
loopne
push
es
jne
adc
xchg
das
xor
cs
pushf
iret
inc
inc
or
mov
mov
xchg
adc
xor
sub
jne
subb
push
imul
mov
aad
cmp
sub
pop
scas
pop
in
pop
dec
sub
push
mov
outsl
dec
sti
mov
fwait
mov
jp
or
dec
enter
add
cmp
enter
or
mov
cs
das
popa
xor
mov
sar
sub
push
xchg
mov
pushf
std
xchg
addr16
jnp
loop
adc
adc
addr16
or
orb
xchg
inc
xor
popa
cmpsb
add
daa
imul
in
or
add
fdivs
or
ja
test
pop
call
jp
adc
je
push
sbb
jge
cli
push
pop
movsb
jle
push
inc
inc
test
cmp
stos
lods
cmpsb
sbb
outsl
adc
xor
cmpsl
test
sub
es
scas
push
aam
jecxz
xlat
lock
leave
sub
outsl
mov
mov
shl
and
dec
push
dec
add
aaa
stos
mov
mov
adc
gs
jmp
ja
sbb
divb
mov
clc
aas
jnp
scas
testb
or
cmp
fimuls
std
cli
mov
mov
push
iret
je,pt
in
pop
dec
sbb
out
repnz
fisttpl
sbb
cmpsl
or
loop
shrb
lods
mov
bound
sbb
push
jle
lret
or
sahf
repnz
xchg
out
movsl
lret
mov
and
dec
add
into
dec
xchg
cmpsl
icebp
cltd
iret
push
mov
imul
and
cmpb
mov
cmpsb
or
scas
add
mov
xchg
incb
mov
aam
jae
lods
insb
test
pop
mov
fiadds
inc
fwait
aad
pusha
mov
xor
js
sarb
jno
jo
inc
pop
movsb
out
sub
rclb
cwtl
jp
cmp
int3
dec
loopne
mov
es
addr16
imul
or
dec
out
imul
add
sbb
ret
xchg
scas
mov
nop
mov
repnz
fidivrl
adc
sbb
jne
xchg
xor
push
and
loopnew
xchg
dec
push
or
add
sub
in
aas
or
ret
and
jp
push
adc
and
mov
xchg
decb
fnstenv
sahf
mov
das
push
jg
nop
cwtl
cltd
mov
xor
call
xchg
xor
fildl
jecxz
loopne
insb
lods
jmp
fiadds
sbb
loopne
xor
scas
mov
pop
mov
push
inc
arpl
push
fsubrl
mov
pop
shll
add
and
or
adc
dec
dec
xlat
gs
decl
fsubr
mov
sub
mov
clc
pop
mov
call
lcall
in
fwait
pop
adc
jne
or
lods
mov
cltd
jae
rorl
pusha
xor
or
enter
shr
cmc
pop
push
das
call
inc
xlat
pop
sbb
scas
clc
pop
pop
aam
and
loopne
pushf
addr16
dec
jmp
dec
cmp
or
lret
insl
jecxz
jg
push
sbb
xchg
dec
inc
push
pop
ljmp
enter
push
sub
xor
into
inc
jb
add
xor
lret
mov
je
fld
loop
xchg
inc
jg
adc
mov
xor
jecxz
xor
mov
gs
enter
pop
bound
push
out
nop
icebp
pop
call
cli
ret
into
pop
ret
pop
rol
jl
das
sti
es
negl
xchg
jp
add
imul
add
insb
pop
inc
fiaddl
add
lea
out
mov
hlt
repz
orl
xor
outsl
loop
outsb
jp
popf
es
outsb
xor
jmp
insl
and
xor
and
inc
and
or
adc
sub
loop
adc
xor
push
sub
adc
jecxz
repnz
loop
jp
in
add
jne
fs
hlt
hlt
jo
hlt
subb
sub
jg
in
xchg
cmc
call
cld
xor
inc
pusha
mov
out
mov
sub
xchg
test
or
sbb
stos
and
lock
addl
addr16
pop
pop
jbe
aam
out
dec
movsl
or
sbb
add
mov
ret
push
int
repz
shll
les
iret
fisttpll
ret
cmpsl
insb
pop
and
cmpsl
arpl
shl
outsl
cmp
xor
add
adc
das
jno
int
mov
mov
bound
add
out
test
outsb
rolb
cs
fcompl
fisubs
fwait
jnp
sbb
jnp
add
sbb
and
mov
call
cwtl
popa
jmp
xlat
loop
push
pop
lcall
mov
and
pop
inc
cmpsl
jae
fbld
roll
jecxz
loopne
fs
jp
push
data16
sbb
pop
sub
stos
arpl
mov
rorl
cmp
mov
inc
cmpl
inc
cmp
icebp
mov
mov
clc
and
frstor
inc
mov
adc
data16
pop
pop
in
dec
pushf
sub
sub
cwtl
push
ljmp
xchg
or
lahf
lock
cwtl
pop
adc
xchg
pop
pop
ret
mov
add
or
xchg
cltd
mov
addb
pop
mov
xchg
stos
push
xchg
push
xorb
loopne
test
mov
bound
xchg
inc
in
jg
sbb
lahf
pop
call
xor
mov
and
add
add
pop
mov
mov
sbb
pop
lds
sub
inc
leave
dec
add
mov
loop
stos
fcoml
cli
sbb
cmp
dec
pop
out
sub
pop
pop
cmp
jle
rorl
jo,pn
in
mov
or
fcmovb
ja
sub
sti
mov
out
xor
mov
loop
mov
popa
push
fcomp
in
test
jne
xchg
jle
mov
mov
std
lret
mov
xchg
outsb
pushf
pop
mov
shll
mov
mov
inc
jno
negb
stos
push
out
fdivrl
inc
add
lahf
mov
mov
dec
call
outsb
aas
push
popf
mov
ds
ret
push
jge
adc
in
sbb
fwait
jae
mov
hlt
mov
xor
ret
insl
mov
popf
and
xor
into
jmp
push
push
shlb
sbb
lock
mov
fisttps
mov
dec
add
xchg
cmc
adc
nop
sub
pop
aad
or
sahf
scas
xor
sti
push
data16
and
jae
outsl
inc
xchg
insb
pusha
adc
adc
mov
cld
jb
add
jmp
push
es
in
mov
push
add
mov
in
jg
sub
cwtl
insb
xlat
jl
dec
sbb
pop
ds
in
ret
les
xchg
into
das
or
mov
iret
xchg
and
jle
jp
cmpsl
jecxz
or
jp
xchg
aad
sub
mov
popf
outsl
scas
stc
scas
mov
popf
xchg
or
sbb
je
int3
mov
adc
pop
lock
inc
fcomp
fs
or
in
jg
xchg
fsubp
push
fisttps
xchg
cli
dec
popl
fcmovnu
xchg
mov
pop
and
bound
cld
scas
mov
mov
mov
repnz
repz
push
xchg
inc
in
movl
lahf
xor
popf
dec
gs
dec
loop
pop
or
imull
push
pushf
js
or
in
jns
pop
push
aad
inc
mov
cmpb
int
lods
ret
ja
jg
and
push
inc
dec
dec
out
sub
mov
add
loopne
pop
adc
mov
mov
or
scas
xor
or
fcomps
je
and
mov
pop
in
push
add
ret
sbbb
loope
cmpsb
into
mov
adc
or
imul
into
jecxz
sbb
lds
fisubl
shlb
scas
das
dec
inc
movsl
or
xchg
call
ja
in
add
fsubp
and
jae
adc
inc
cmpsb
cwtl
sbb
sub
aaa
mov
lret
or
add
dec
dec
arpl
inc
jmp
mov
sbb
jmp
nop
test
test
cmp
enter
outsl
push
sbb
fwait
mov
das
dec
mov
push
outsl
jp
fcoms
add
inc
pop
jns
test
pop
sti
pop
sahf
pop
push
das
icebp
repz
push
jl
jmp
dec
loop
fsubrs
imul
faddp
jg
fincstp
in
and
repnz
inc
mov
call
mov
mov
xor
cs
cli
pop
inc
ret
and
cmp
cli
add
loopne
mov
lea
cld
and
or
ss
pop
lea
ds
and
scas
jg
xor
sub
push
daa
aas
inc
scas
je
pop
jge
or
mov
add
out
add
in
xchg
jge
out
cld
adc
out
jno
adc
sbb
jmp
adc
daa
jne
pop
mov
lods
fisttps
jae
stc
add
sbb
movsl
and
lock
nop
dec
test
fistps
inc
je
pop
aam
pop
add
add
sarb
mov
addb
ljmp
scas
loop
mov
outsb
or
jnp
pop
lret
shl
cmp
push
xor
mov
rorb
mov
rclb
stos
cmp
or
ret
nop
outsb
adc
or
std
inc
lret
test
cli
int
push
outsb
inc
in
data16
jne
push
xchg
in
sub
mov
jmp
cmpb
inc
std
add
es
data16
enter
in
rorb
sub
in
lea
and
dec
lret
inc
fldenv
mov
decl
push
sbb
pop
je
hlt
mov
mov
lret
pusha
sub
push
cmp
fs
or
repnz
inc
aas
imul
cltd
loope
orb
inc
mov
je
pop
icebp
fxch
out
mov
bswap
mov
sti
loop
lret
rorl
stos
xor
or
stos
lahf
push
pop
into
mov
inc
cmpb
mov
jecxz
lret
hlt
rol
jo
aad
inc
add
inc
cmc
push
in
sub
mov
dec
js
lods
mov
cs
sub
aam
xchg
int
popa
std
sbb
mov
out
mov
sub
mov
jb
out
aaa
xchg
xor
stc
inc
mov
adc
pop
cmpsb
adc
hlt
in
js
xchg
loopne
dec
xor
sbb
ret
push
push
mov
mov
jmp
daa
dec
and
clc
inc
es
fadds
xchg
sarb
lret
sbb
xchg
jae
jle
movsl
pop
and
out
fistpll
dec
dec
jle
lret
inc
sub
stos
cmp
push
fldcw
jb
aaa
shrl
sub
ret
fcmovnu
or
lea
inc
repnz
dec
aaa
cwtl
icebp
popa
outsl
xchg
adc
mov
or
mov
out
mov
inc
imul
lahf
lods
sub
imul
dec
add
mov
and
jne
data16
popf
rcrb
ret
rolb
fldl
les
cld
shr
dec
mov
das
cmp
les
cli
loop
cs
pop
test
push
insb
sbb
sub
jp
mov
enter
pop
and
xchg
dec
aaa
sbbb
enter
das
nop
inc
mov
mov
mov
mov
and
mov
inc
aam
sbbb
loop
and
and
out
addr16
iret
addb
xor
dec
xor
sbb
sbb
fstpt
cmp
sbb
fst
shlb
jge
movsb
outsb
xor
xchg
lea
push
mov
into
into
subl
sub
dec
push
dec
push
mov
ljmp
movb
sub
push
adc
xor
movsl
cmp
mov
outsl
rcrl
popf
fists
xchg
jle
xchg
jae
inc
hlt
in
xlat
add
pop
cmp
lock
insb
addr16
aas
and
out
add
add
pop
gs
mov
aam
lahf
sub
pushf
xlat
push
inc
and
pop
sbb
and
mov
lret
pop
lahf
mov
jae
movl
daa
cld
stos
jge
sbb
movsb
jmp
sub
push
nop
enter
pushf
outsl
and
rolb
int
xor
add
jp
addl
test
jecxz
sbb
adc
pop
jnp
mov
mov
mov
mov
outsb
aad
and
iret
push
mov
ds
dec
hlt
in
add
leave
ret
aaa
into
jno
jo
scas
mov
into
pop
inc
or
cmpb
mov
ja
pop
xchg
inc
data16
insb
sub
adc
addr16
add
push
fwait
inc
movsb
or
dec
scas
sub
dec
lock
in
cwtl
ljmp
test
mov
data16
js
rclb
mov
int
mov
int
in
mov
dec
mov
iret
xor
pop
lret
inc
push
mov
and
addr16
cs
out
cmp
jne
push
inc
mov
pop
xchg
push
xchg
fwait
jmp
xlat
mov
repz
adc
add
mov
out
mov
stc
push
dec
cs
push
push
aas
jle
in
sbb
ss
sti
push
test
cmpsb
clc
dec
fdivrs
cmp
push
pushf
jne
xchg
jno
cwtl
mov
lods
sub
stos
shrl
je
addb
call
push
ljmp
movsl
iret
mov
pop
outsb
xchg
cmpsb
hlt
mov
pop
or
out
jmp
cmp
enter
push
push
scas
dec
scas
inc
dec
mov
call
movsb
loop
fidivl
idiv
add
mov
dec
nop
arpl
rcrb
imulb
add
dec
cltd
movsl
sti
and
ror
call
addl
and
xchg
shll
mov
mov
cmp
andl
insl
leave
test
clc
jno
add
bound
lea
mov
mov
push
enter
cmp
in
xor
test
add
jge
cmp
adc
test
push
mov
bound
adc
popa
movsl
popf
das
incb
jle
sub
imul
clc
push
fistl
xor
fistpll
push
ficoml
aas
movsl
test
pop
icebp
mov
mov
dec
or
lock
xor
inc
mov
out
pushf
icebp
mov
jmp
sbb
shlb
mov
cli
and
in
xchg
rcrl
repz
or
push
push
aam
inc
dec
outsb
inc
mov
shrl
subl
xlat
sub
loopne
pop
lds
dec
in
lods
push
xorl
push
in
mov
or
in
sub
in
dec
in
xchg
xchg
dec
js
not
js
std
stc
popf
pop
cmpsb
mov
cli
jg
fsubr
mov
xchg
push
call
push
int
xor
int3
add
movsl
cmp
and
or
fdivs
inc
int3
in
add
jno
xor
dec
mov
mov
movsb
xchg
in
jae
inc
cld
xchg
push
mov
xorl
decb
jae
adc
push
lea
jb
cmpsl
jo
outsw
out
dec
sbb
jne
lahf
int
adc
jnp
lods
xchg
std
pfcmpgt
in
fwait
in
mov
mov
in
cmp
cmp
scas
sub
add
xor
or
or
sarb
xchg
shlb
xor
push
xchg
sbb
pop
and
out
cwtl
push
or
xor
mov
push
out
loope
in
push
icebp
in
scas
cmp
shl
push
in
mov
add
cmp
daa
out
test
adc
leave
mov
sbb
in
in
lods
repz
mov
data16
pop
mov
or
inc
jnp
push
cli
and
aaa
nop
jle
cs
or
movsb
inc
loope
mov
inc
inc
ds
mov
in
divb
scas
mov
mov
sub
movsl
cld
xor
loope
or
push
lahf
push
jge
gs
mov
insl
adc
stc
outsl
insl
and
mov
iret
pop
push
mov
icebp
push
inc
shll
lcall
sbb
mov
cwtl
adc
sbbl
stos
lds
shl
mov
jmp
repz
xchg
iret
jmp
adc
sub
int3
jle
jl
dec
adc
lea
dec
inc
add
inc
aas
xchg
int
rolb
xor
sub
nop
mov
fcom
mov
mov
jae
aas
ljmp
ds
pop
pop
xor
sbb
shrb
out
ds
adc
sbb
bound
inc
jmp
xchg
push
rcrl
adc
sub
inc
out
cmp
je
mov
js
mov
hlt
jno
cmp
pop
cmp
adc
sbb
rolb
int
add
mov
sub
inc
rcr
jge
adc
out
mov
clc
clc
sbb
dec
repnz
fmull
jb
sbb
mov
xor
mov
adc
mov
push
popf
int3
aaa
mov
pop
mov
inc
dec
mov
push
cmp
dec
out
lcall
imul
pushf
pop
xor
lahf
ja
dec
and
add
jmp
xchg
lods
mov
cmpsb
sbb
cmp
addl
mov
test
sbb
out
adc
decl
push
pop
sbbb
inc
xchg
mov
cli
cmp
stos
xchg
xlat
mov
adc
test
sti
push
dec
subl
mov
mov
sub
jle
mov
fcomps
call
push
push
lret
pushf
repz
xor
in
or
fsubrl
int
lock
mov
repnz
sub
out
jne
push
or
mov
in
inc
sub
pop
je
push
sub
bound
out
mov
dec
xlat
dec
ja
shl
inc
inc
sub
ss
sbb
jbe
cmp
out
sub
mov
sbb
std
movsl
fisubrl
cwtl
iret
cmpsl
xlat
call
xchg
push
push
push
rcl
movsl
popf
adc
aam
push
movsb
dec
push
add
inc
fldcw
push
xor
add
cld
mov
or
mov
mov
xor
mov
lcall
gs
sahf
sti
and
push
add
jbe
cli
pop
movsl
je
or
and
sub
shl
fiaddl
outsl
arpl
adc
or
mov
fisubs
jmp
leave
pop
cmc
aad
out
add
or
jle
dec
sbb
xchg
out
gs
leave
popf
lock
sbb
dec
mov
pop
sbb
xchg
call
int3
stos
xchg
rcrl
flds
jb
lea
or
repnz
pop
jno
shrb
pop
or
sub
es
aaa
xchg
inc
aas
xchg
sbb
xchg
lcall
push
fs
xchg
xor
add
aam
lea
mov
mov
xor
ljmp
mov
fisttpll
fidivl
wbinvd
adc
test
jne
xor
loop
jmp
mov
addr16
popf
push
cli
dec
daa
in
adc
leave
loopne
fistl
gs
aam
fisttpl
ret
setl
int3
lods
mov
sub
mov
xor
imul
clc
xchg
sti
in
or
loopne
mov
cld
clc
push
fiaddl
or
adc
inc
add
pop
mov
dec
or
push
mulb
xchg
test
push
scas
push
nop
scas
ds
out
mov
scas
add
lcall
mov
inc
popa
inc
mov
dec
movsb
mov
adc
xchg
pop
lret
repnz
mov
cmp
mov
in
xchg
stos
adc
push
push
sub
adc
sub
int
sub
notb
push
ds
dec
jbe
and
pop
inc
mov
xchg
negb
inc
mov
fistpl
sbb
push
jns
mov
mov
and
out
ss
adc
int3
jg
mov
cs
inc
shrb
pop
ds
imul
mov
push
lock
lds
and
es
out
cs
jbe
xor
stos
adc
les
lock
cmpsb
xchg
adc
outsl
lea
in
mov
add
dec
loop
push
or
cld
movsb
es
in
pop
test
mov
sarl
push
movsb
popa
es
icebp
push
push
xchg
push
cmp
out
lret
dec
sbb
and
push
xor
movsl
sti
scas
and
xchg
xor
ret
push
mov
adc
imul
cmp
push
inc
adc
lret
dec
arpl
ljmp
sarb
aas
jo
xchg
shr
jmp
cmpsl
push
cmp
sub
cwtl
daa
out
loope
jecxz
loope
mov
pop
outsl
pop
push
bnd
sbb
les
cmpsl
mov
and
and
push
sbbb
mov
xlat
into
pop
aad
lret
xor
arpl
stos
pop
fwait
les
imul
jecxz
movsl
xor
push
push
dec
push
imul
adc
mov
jno
inc
into
scas
ja
shl
push
inc
lea
orb
jne
xor
mov
and
daa
daa
or
iret
enter
mov
fnstenv
jecxz
outsl
out
xor
sbb
mov
jb
cmpsl
addr16
test
enter
xchg
push
mov
js
popf
mov
push
imul
lahf
inc
or
mov
xchg
or
lret
xor
push
push
negb
ds
push
push
pop
movsb
test
push
js
xorb
sbb
adc
mov
dec
imul
movsl
repz
or
in
data16
clc
mov
mov
sbb
xchg
fsubrl
pop
dec
les
fs
inc
sbb
fldl
cmp
ja
inc
sbb
pop
or
das
cmc
in
into
bound
sub
xchg
testb
mov
addr16
outsb
fistl
call
mov
xlat
add
je
imul
movsb
sub
out
push
jnp
mov
testl
int
pop
sbb
aam
sbb
repnz
icebp
mov
leave
test
mov
jmp
les
and
outsb
jl
mov
xchg
inc
enter
mov
jmp
sbb
lea
mov
pmaxsw
inc
mov
mov
imul
inc
fidivs
lahf
daa
xor
push
jmp
push
enter
sbb
rolb
xor
loop
lcall
dec
adc
jno
fdivrl
xchg
push
repz
leave
inc
iret
loopne
jbe
dec
add
test
xchg
mov
inc
aam
pop
mov
inc
in
in
sbb
jns
dec
mov
cld
mov
mov
jae
sti
mov
push
xchg
cmp
cmp
pop
idiv
adc
test
int3
stos
jae
and
pop
push
xchg
shlb
outsl
mov
repnz
mov
sbb
cmpsb
and
ret
dec
scas
and
push
xchg
jl
leave
sub
inc
call
cmpl
dec
or
mov
mov
pushf
pop
cmp
mov
pop
outsb
divb
mov
inc
adc
adcb
sbb
cltd
jns
xor
xchg
pop
xor
push
jnp
mov
ja
imulb
mov
sub
dec
or
or
push
or
enter
dec
adc
cmp
fs
inc
fbld
dec
xor
add
jl
int3
lds
xchg
fcoms
cli
mov
std
mov
mov
or
shll
in
sbb
xor
loopne
call
mov
mov
push
dec
mov
fldcw
and
mov
aas
jle
adc
push
adc
jle
sti
push
dec
jmp
or
fcoms
dec
mov
sub
mov
sub
cmp
pop
and
and
mov
jns
repnz
sahf
addr16
mov
mov
sub
aad
aam
xor
sbb
je
stos
je
and
unpcklps
negl
mov
fdivrs
into
dec
sub
ds
pop
cwtl
rolb
mov
inc
jmp
rcr
dec
push
mov
outsl
sbb
outsb
aaa
sub
leave
add
fnstenv
shll
aaa
sbb
gs
pusha
jg
std
xchg
mov
add
das
push
mov
mov
fdivrp
cmpl
std
std
cmp
pop
pop
movsl
mov
jle
jmp
iret
mulb
rcrb
push
mov
and
aaa
and
pop
sbb
lods
nop
rol
fscale
sarb
incl
mov
dec
add
jg
scas
out
dec
std
das
ret
or
jge
mov
pop
rolb
mov
call
push
shll
icebp
jno
ljmp
xchg
cmp
push
sbb
mov
notl
fimuls
and
movsl
repz
xchg
lock
mov
sub
pop
push
push
dec
in
fisttpll
push
cltd
lea
sbb
xchg
sub
push
pop
xchg
or
mov
xlat
in
out
scas
lock
push
adc
pop
mov
ss
cmpsb
int
xor
scas
and
inc
push
cmp
jmp
push
mov
xchg
lret
push
cmp
cwtl
jp
mov
ss
cmp
pusha
gs
sub
fsts
sbb
and
rcr
add
outsb
imul
stos
add
insl
xor
mov
imul
nop
les
and
jns
stc
scas
add
test
cmpsb
dec
cmp
ficompl
lcall
daa
fcmove
bound
rclb
mov
xchg
bound
arpl
iret
bound
clc
movsl
jno
lcall
fxch
out
pop
repz
cmc
push
mov
scas
push
aas
popa
mov
adc
jb
jg
mov
pop
or
inc
les
push
sbb
xchg
fisubrl
pushf
popa
repz
jge
or
aam
jb
jp
pop
mov
jp
pop
in
enter
mov
push
add
popa
inc
add
lds
rcrb
push
adcb
adc
sbb
inc
das
fwait
inc
movb
js
xchg
jp
sarl
jle
jo
sub
add
cmp
cmpsb
test
and
loope
adc
mov
mov
rcl
stos
push
push
addl
roll
mov
rclb
pop
dec
andl
sub
into
jbe
jno
inc
decl
add
push
xchg
popf
mov
sbb
push
es
shrl
mov
or
ret
cmp
js
pusha
decb
popf
cmc
and
loop
popf
daa
mov
jne
mov
mov
dec
into
or
sti
xor
fadd
lret
test
dec
mov
mov
int
mov
push
stc
push
aad
mov
lods
roll
cmc
mov
push
dec
jne
fwait
cmp
out
cmp
inc
loopne
cmp
mov
cs
aaa
insb
ret
inc
in
sub
cmp
xchg
xor
dec
mov
jecxz
imul
test
lahf
sbb
mov
sbb
and
push
les
jge
or
sbb
in
mov
cmp
lods
pop
cmpsb
mov
outsb
sub
loopne
adc
aaa
push
mov
mov
pop
inc
adcl
mov
cmc
adc
int
popf
rcll
in
ljmp
cmp
or
fdivrs
ss
and
cmpsb
or
or
and
outsl
jmp
test
scas
xchg
or
mov
sarb
fwait
dec
in
mov
lds
ja
mov
int
fidivs
push
pop
outsl
mov
mov
jne
mov
out
mov
lahf
sbb
jge
mov
mov
and
adc
ljmp
lock
mov
je
push
je
mov
push
cli
mov
sbb
leave
and
push
in
dec
mov
dec
stos
mov
inc
sti
fistl
push
cmp
std
jecxz
aas
inc
sub
js
test
mulb
insb
mov
xchg
loopne
mov
sub
pop
jmp
inc
inc
aad
push
push
mov
hlt
addl
fcomps
push
jo
jmp
scas
enter
cmp
sbb
jecxz
jmp
add
pop
cmp
sub
mov
mov
mov
and
in
pop
add
add
clc
pop
dec
sub
int3
dec
pusha
inc
mov
dec
inc
xor
shrl
in
out
pusha
movsb
adcb
cmp
je
ficompl
inc
lcall
rcrb
sub
add
insb
inc
fyl2xp1
inc
mov
mov
jl
fs
std
mov
jae
sub
imul
lahf
scas
dec
sub
cmp
outsb
and
popf
pop
sbb
xchg
dec
add
xchg
cmp
lea
mov
fidivs
mov
mov
xchg
mov
jnp
in
mov
into
or
daa
mov
fwait
inc
lock
push
push
rol
test
mov
popf
sbb
lahf
dec
mov
nop
cmp
movsb
cld
adc
int
subl
xchg
push
dec
adc
mov
xor
mov
inc
rep
xchg
xchg
sbb
cmp
pop
mov
loop
jb
das
sbb
in
loop
xor
mov
lret
jo
in
cmpsb
nop
sbb
enter
enter
fidivrs
loope
rorl
out
inc
sub
test
lcall
mov
adc
incl
and
insl
cld
jmp
push
adc
fsubrs
mov
stc
mov
add
repnz
flds
rcll
mov
fistpll
repz
pop
lods
dec
inc
adc
mov
out
sbb
jns
daa
test
adc
ret
xor
xchg
adc
jns
xchg
imul
loopne
xor
cwtl
pop
ljmp
data16
andl
movsl
and
insb
andnps
ds
mov
addl
inc
insl
pop
sub
sbbl
mov
dec
fdivrl
inc
xor
packsswb
adc
in
sbb
popa
xchg
dec
adc
scas
dec
and
dec
in
mov
dec
movsl
lcall
jecxz
sub
negb
mov
popa
push
dec
add
pusha
xor
mov
rcl
lret
mov
jae
aas
cmp
mov
out
std
adc
add
xchg
lods
xchg
dec
in
xor
mov
in
xor
xchg
divl
into
xchg
xchg
insb
scas
mov
imul
xlat
or
sti
jle
bound
mov
lahf
mov
gs
rcl
cmp
jno
add
push
pop
out
mov
repz
cmpsb
call
mov
fmull
add
bound
shr
jae
sbb
push
xor
cmp
pushf
adc
rclb
clc
mov
or
mov
push
push
mov
sbb
xor
dec
jb
mov
push
jle
or
nop
rclb
push
popf
pop
mov
fucom
jnp
and
cs
push
ss
scas
lret
cmp
stos
dec
loop
in
popf
lock
out
repz
fisttps
inc
movsb
cmp
sub
repz
loopne
fsubl
aaa
and
sub
push
cmp
jecxz
loope
lret
popf
loopne
cmp
mov
leave
push
call
hlt
mov
sarl
push
pop
div
xchg
add
xor
roll
sbb
pop
insl
in
out
or
pop
sub
sbbl
add
dec
cwtl
aad
scas
inc
rolb
testb
scas
and
in
cmp
dec
mov
pop
jns
push
sub
icebp
negb
pop
xchg
cmp
inc
mov
iret
cmpsl
lods
ret
inc
sub
loope
push
cld
rcrb
call
push
adc
sbb
repnz
and
pop
addr16
cmp
lea
jg
cmpsl
mov
pop
cmp
insl
cmp
mov
das
outsb
pop
imul
scas
gs
outsl
ss
test
testb
dec
jecxz
dec
push
ja
out
add
sbb
mov
and
and
xchg
fstpl
fisubrs
pushf
int3
cmp
jb
jno
ret
fs
sbb
rolb
and
gs
lds
mov
nop
bound
mov
imul
pop
aas
push
jnp
or
jae
xchg
xchg
mov
dec
dec
in
push
add
dec
enter
repz
xlat
bound
mov
push
inc
sub
loop
push
loopne
ds
data16
cmpsl
push
fs
js
jp
data16
lahf
ljmp
xor
inc
int3
mov
or
jecxz
sub
aam
fld
sti
imul
fldcw
adc
xor
jg
or
loop
mov
das
and
inc
aaa
pop
das
cmpsb
jecxz
adc
test
lds
mov
mov
aaa
xchg
jmp
clc
push
lret
and
mov
into
or
mov
loop
popa
inc
nop
pop
sbb
jns
pmullw
shlb
outsl
jl
sbb
mov
mov
sbb
xor
aam
mov
mov
or
leave
jno
add
aam
movsb
int
mov
je
movsb
popf
mov
mov
movsb
xchg
fdivrl
push
xor
cmc
out
in
xor
in
lcall
jge
out
sahf
lret
inc
std
mov
xor
in
xlat
adc
or
inc
fldl
jecxz
in
stos
push
sbb
jge
jmp
subl
enter
add
push
lahf
sub
sti
adc
jecxz
subb
aaa
and
xchg
sahf
jmp
or
adc
sbb
push
test
inc
xor
mov
ja
int
cld
clc
jp
jb
das
out
rolb
jbe
inc
sub
pop
mov
mov
jmp
in
mov
dec
bound
popa
rorl
push
sbb
adc
lcall
addr16
mov
leavew
ret
fildll
xchg
popf
jmp
test
xor
imul
cs
mov
xchg
fs
jo
fwait
or
cmp
and
outsb
jno
xchg
xchg
xor
dec
and
push
loope
xchg
cli
xchg
lea
xorb
inc
ds
jecxz
mov
mov
notl
xor
insb
or
or
enter
pop
cmp
cli
fmuls
push
lahf
repnz
pop
inc
js
in
push
pop
rorl
jle
sub
shrb
mov
imul
mov
out
cli
mov
mov
jp
out
cs
mov
push
sub
rep
sbb
sbb
push
je
lods
push
lcall
sub
rorb
mov
jmp
leave
push
mov
mov
das
ja
mov
rclb
iret
test
call
sub
decl
mov
mov
inc
cmpsb
cmp
fists
in
dec
push
sti
sub
jo
test
cmp
adc
or
cwtl
pop
andb
push
add
popf
movb
xor
out
andl
push
xor
inc
and
pop
sub
sbb
pop
push
popf
mov
and
pop
fs
sarb
or
popa
jmp
add
or
nop
dec
insb
xor
sub
cmp
lods
ret
pop
mov
mov
test
repnz
enter
xchg
sbb
and
jne
and
mov
and
mov
xorb
in
and
add
pop
fs
ret
cld
test
lods
mov
call
mov
add
adc
jp
mov
mov
or
aad
push
mov
sub
daa
sub
in
sub
and
mov
outsb
imul
pop
ret
mov
jb
push
sahf
call
imul
popf
mov
xchg
jno
outsl
jnp
out
sahf
shll
mov
mov
push
andb
clc
addl
push
rcll
mov
pop
or
adc
dec
jbe
mov
scas
lret
pop
movsb
push
aas
aas
or
xlat
popa
clc
lods
push
inc
xchg
mov
imul
push
or
dec
dec
iret
enter
mov
shlb
or
fldt
into
pop
pop
adc
sbb
cld
and
in
jne
pop
mov
push
test
push
adc
push
jae
je
inc
adc
add
push
xchg
cmp
mov
frstor
xchg
xor
shl
xor
lret
sub
add
cld
and
test
inc
ja
mov
push
fcmovnbe
push
imul
cs
inc
movsl
pop
fsubrs
lea
xor
in
jmp
xor
lea
nop
test
inc
dec
dec
lea
xor
mov
mov
leave
adc
lods
jle
adcb
sub
mov
imul
mov
mov
mov
cmpsl
ljmp
mov
fiadds
loopne
vunpcklps
daa
idivl
mov
add
pop
mov
and
loopne
mov
fbld
out
adc
jbe
cmp
cmp
stos
aam
jae
pop
js
sahf
cmp
aaa
pop
jae
dec
enter
jg
adc
or
outsb
arpl
das
pop
pop
push
lahf
xchg
cmp
pop
sbb
gs
popf
faddp
fstpt
popf
xchg
mov
repnz
ds
lret
arpl
jne
mov
inc
in
dec
push
mov
dec
xchg
cs
shrl
push
jo
pusha
cmpsw
mov
sbb
add
cmpsb
jmp
ss
or
xchg
mov
cli
mov
push
add
xchg
sub
sbb
gs
pop
orl
out
int
cltd
sub
std
repz
sbb
xlat
cld
add
pop
jmp
push
and
cmp
and
dec
xor
stos
mov
cmp
xchg
lds
mov
test
pop
xchg
je
mov
pavgb
std
pop
and
frstor
and
repz
jmp
aam
loop
bnd
les
inc
and
cs
pop
pop
mov
lcall
dec
imul
inc
jb
xor
insb
jnp
jmp
fstpl
sub
addr16
daa
xor
or
sar
js
fsubrp
ss
fcmovnb
fcmovnu
push
and
cmp
into
insl
inc
pop
and
or
pop
in
xlat
mov
adc
loopne
hlt
jnp
push
in
pop
jp
cmp
std
ja
adc
inc
fsub
inc
cltd
mov
daa
sbb
inc
roll
inc
jmp
imul
rclb
sub
jae
jb
xchg
mov
insb
jb
push
fisttps
decl
sbb
push
std
popa
jle
lahf
sbb
push
ja
cwtl
cltd
ds
ja
aaa
fiadds
dec
ficompl
jo
hlt
cwtl
movsb
pop
pop
cmp
pusha
pop
push
mov
and
sbb
daa
das
dec
adc
push
pop
sbb
jle
sti
stos
or
scas
cmp
imul
or
mov
mov
enter
jmp
jmp
push
movsl
jg
sub
aam
in
cld
cmp
jnp
push
mov
push
movsl
mov
cli
leave
fsts
stc
pop
sbb
inc
mov
sbb
mov
je
add
stos
xchg
jl
clc
cli
clc
mov
pop
inc
cmc
fwait
sbb
mov
sahf
in
enter
jg
jle
adc
ja
stos
jmp
mov
xor
popf
inc
gs
cmp
in
xchg
scas
inc
sbb
sti
or
xchg
aaa
adc
or
and
cmp
scas
fcomps
hlt
lods
sbb
sti
lds
push
sarl
movsl
in
dec
nop
mov
xchg
inc
ljmp
mov
pop
dec
adc
and
xchg
pop
dec
xor
dec
adc
int3
mov
stos
cmp
or
add
cmp
je
or
ficomps
push
push
repz
and
inc
xchg
inc
es
aad
stos
adc
icebp
sub
fidivrs
repz
bnd
imul
cwtl
mov
lret
mov
not
loop
mov
insl
mov
dec
or
sbb
aam
push
outsl
call
shr
add
adc
call
push
int
sub
lcall
adc
popa
sbb
test
addr16
js
and
add
adc
cmp
in
int3
sbb
dec
lods
push
xchg
mov
std
fwait
and
dec
mov
push
or
fwait
xchg
test
jno
dec
dec
dec
in
mov
cs
mov
or
lods
stos
scas
cmp
leave
lods
outsl
fcmovnbe
sbb
xchg
out
mov
addr16
imul
sbb
mov
mov
mov
and
les
not
push
xor
xor
insl
inc
dec
xchg
jb
adc
addb
xor
arpl
dec
adc
mov
ret
shlb
add
enter
dec
jno
fimull
mov
xchg
leave
jmp
cmp
adc
out
out
out
mov
pop
inc
add
cmp
stc
adc
in
xor
icebp
push
outsb
cltd
cld
pop
fcoms
dec
lods
push
fsub
int
bound
push
data16
je
sahf
pop
clc
push
push
sub
lcall
dec
mov
cmp
adc
push
mov
daa
fisttpll
push
mov
loop
jns
lock
mov
add
dec
ret
xchg
xor
nop
pushf
sbb
out
sub
push
in
push
into
lods
insl
xor
insb
mov
push
bswap
xchg
jmp
lods
test
mov
ds
fimull
lods
jno
ror
out
jne
mov
xchg
test
mov
xor
popf
push
loopne
jb
lret
sbb
push
jmp
out
call
sbb
xchg
xchg
lcall
jecxz
cmp
adcb
in
in
mov
xchg
test
and
in
and
adc
mov
stos
xor
mov
push
cmp
push
push
push
roll
popa
sub
cltd
movsl
sub
push
lahf
std
pushf
repnz
jg
mov
bound
idivb
or
pop
repnz
and
jl
bound
adc
or
daa
fildl
ss
movsl
imul
insl
repz
or
cmpsl
ljmp
cmp
in
inc
aaa
roll
xor
fcomip
or
or
push
pop
pushl
dec
rcrl
nop
movb
sbb
inc
fdivl
das
bound
int
cmpsb
push
xchg
in
sbb
adc
test
xchg
jb
je
testl
mov
repz
mov
cmp
stos
sbb
mov
movsl
call
addr16
cmp
aaa
pop
jg
push
shlb
andl
pop
xchg
cmp
mov
inc
das
aam
mov
mov
jae
cwtl
mov
fdivrl
jo
fidivs
mov
mov
inc
xlat
jecxz
popfw
es
outsl
fcmovb
pop
jnp
pop
scas
mov
enter
int
inc
lahf
add
ja
cltd
xlat
mov
movsl
nop
mov
sbb
cmp
bound
outsl
scas
pop
jmp
xor
pushf
enter
fists
mov
fistps
cmpl
cmp
jg
stos
fstpl
mov
jge
pop
sbb
andb
fisttpll
sahf
mov
int
iret
scas
repz
mov
popa
and
or
xchg
loopne
xchg
xor
inc
inc
in
and
or
inc
mov
div
mov
arpl
xchg
xchg
out
shrb
pop
adc
jns
clc
fidivl
jmp
xorb
sub
jnp
rcr
fstpl
stos
ficomps
push
sub
inc
xor
pop
sbb
inc
scas
cmp
fiadds
stc
js
xlat
add
dec
mov
cwtl
mov
cmp
int3
divb
xor
into
xor
cs
movsb
or
arpl
enter
pop
lods
hlt
insb
imull
test
lock
mov
push
jmp
loope
or
sub
push
cmp
sub
jg
js
add
sub
icebp
out
les
cld
out
mov
mov
and
xchg
xorb
mov
lds
dec
cmpsl
imul
pop
fcmovnbe
data16
in
sbb
push
int
push
xchg
fcoml
jge
pop
cmpsb
add
mov
xchg
push
pop
pop
sbb
es
popa
ret
jle
mov
jg
add
fstps
insl
lock
stos
cmp
call
or
inc
mov
jg
xor
stc
sbb
leave
int3
xchg
fwait
scas
inc
sub
xor
dec
imul
test
movsb
mov
fwait
mov
sub
cltd
xchg
dec
call
inc
int
pushf
sahf
add
je
cmp
push
xorb
inc
push
cmpsl
mov
inc
jge
mov
inc
lret
clc
enter
mov
int
sbb
lock
mov
adc
add
rolb
mov
movsb
data16
cmp
stos
jg
cmp
cmpl
test
mov
pop
inc
mov
lret
sbb
cmpsb
cli
lock
adc
out
pop
or
add
adc
jb
lahf
mov
and
icebp
das
andl
and
inc
and
dec
es
dec
sbbl
lcall
lods
outsb
ret
xor
test
movsb
ret
std
daa
mov
or
xor
mov
repnz
cmp
ja
daa
in
add
dec
dec
movsl
loope
popf
das
stos
push
jnp
jp
pop
xchg
push
cli
push
xchg
lea
cwtl
lods
insb
movb
jnp
mov
xor
enter
mov
xchg
push
cmp
inc
movsl
loope
cmp
jecxz
stos
jmp
xchg
vpmacssdql
xchg
ja
push
push
push
mov
ljmp
cmp
xor
nop
cmp
scas
and
cltd
lret
filds
and
mov
clc
jge
fs
stos
xchg
rclb
push
stc
mov
fildll
into
cmc
or
insb
stc
mov
aad
mov
sbb
fdiv
mov
ficoms
mov
pop
out
mov
scas
fs
aas
xor
adc
pop
pusha
int3
mov
push
lret
sbb
adcb
cmpsl
adc
imul
cli
in
shlb
dec
add
jecxz
pop
inc
test
add
mov
dec
mov
or
or
das
popa
shlb
mov
popa
sub
and
push
into
div
mov
jo
aas
mov
ss
ret
scas
sub
inc
and
repz
lcall
aas
test
outsl
adcl
ds
popa
sub
xchg
imul
and
or
mov
dec
shlb
mov
sahf
shll
dec
popf
lds
mov
adc
mov
xchg
sub
into
cmp
lahf
es
hlt
inc
shl
jle
push
fs
cmp
jge
decb
jle
lahf
scas
daa
outsb
mov
inc
stos
jns
pop
xchg
ja
hlt
adc
pop
fldl
dec
lods
popf
cli
inc
sub
xor
push
arpl
mov
repnz
fbstp
fidivrs
and
jo
dec
cmpsb
es
repz
xor
mov
test
xor
push
jo
push
in
cmp
aaa
pop
in
aaa
cmp
push
pop
jae
cmpsb
nop
ljmp
out
cmp
or
lret
out
lcall
cltd
lret
dec
xlat
cmp
dec
loope
sbb
sbb
push
or
and
pop
and
fs
inc
sarl
loopne
dec
clc
std
xlat
push
mov
sub
cmc
dec
push
inc
cmp
mov
stos
shlb
aam
push
in
pop
jae
xor
in
jge
dec
addr16
ret
fs
les
mov
imul
mov
shrb
mov
in
pop
mov
popa
sahf
iret
push
mov
sub
xchg
sbb
mov
xor
xlat
add
hlt
sbb
dec
xor
sub
ss
and
sbb
and
fdivl
pop
pop
push
js
push
mov
iret
dec
jecxz
jns
rclb
push
push
push
cmc
sar
popf
sahf
jbe
dec
and
xor
dec
inc
jne
fsubrs
hlt
ljmp
mov
jmp
sahf
xchg
mov
pop
bound
sbbl
adc
adc
push
push
mov
mov
cmc
js
aas
adc
gs
adc
fldt
into
jg
and
shrl
loop
out
or
dec
aam
testl
ror
and
add
test
mov
fwait
sar
push
inc
hlt
jae
cmpsb
mov
inc
jbe
xchg
add
jmp
imul
mov
out
pusha
mov
jb
sub
iret
dec
mov
pushf
lcall
ds
dec
xor
mov
rcll
mov
xor
mov
out
cmpsl
popa
push
inc
push
xchg
ljmp
movsb
push
adc
out
fadd
push
xchg
jbe
xor
ss
sti
jne
push
add
sub
jb
xchg
and
repz
adc
add
lahf
mov
inc
nop
pop
cmp
or
scas
inc
xor
adc
ud1
push
fcompl
test
sub
xorb
pusha
ret
aaa
pop
mov
jbe
and
mov
int
stos
mov
ds
ja
xor
cmp
add
cltd
iret
and
cld
daa
lea
leavew
stos
shll
leave
cmpsl
loopne
dec
jl
push
lahf
lea
xor
and
aas
pop
repnz
popa
leave
xor
aaa
inc
push
idivl
xor
pop
clc
imul
dec
and
cltd
mov
repz
push
cmp
adc
movsl
in
add
sub
mov
jge
push
cmp
push
in
lret
adc
test
jns
push
in
aad
enter
mov
push
cmp
out
js
orl
gs
cmc
lcall
mov
andl
pop
in
jecxz
repnz
and
jp
stc
lret
add
scas
ficoms
pop
mov
push
mov
pop
push
test
push
test
push
loope
xor
add
jo
gs
xor
or
mov
adc
mov
decl
mov
sbb
out
mov
xlat
pusha
call
call
popa
and
mov
cltd
mov
jns
rorl
or
stos
mov
repnz
adc
jecxz
sbb
cltd
add
ds
dec
jmp
ja
andb
push
mov
mov
icebp
mov
mov
mov
xor
movsb
sti
jnp
pop
cmp
lods
mov
cld
sbb
fcmovu
cmc
lcall
mov
pop
xor
mov
mov
fdivl
cld
mov
pusha
loopne
push
sub
add
aaa
lock
push
std
or
sbb
aam
addr16
stos
pop
loope
sbb
aad
mov
cmp
inc
xchg
fisubs
jne
mov
push
notb
and
clc
js
jp
or
ja
aam
pop
lock
and
cmc
call
push
movsb
jno
sbbb
fildll
call
sub
cmc
push
in
pop
adc
lea
sbb
xchg
clc
xlat
jb
jnp
btr
data16
add
push
push
xchg
fcmovu
jno
stc
add
inc
add
or
add
cltd
in
int
or
bound
dec
dec
mov
jne
sbb
dec
sub
sbb
mov
mov
stos
out
mov
lods
jae
pop
adc
jmp
stos
aas
out
dec
inc
rol
jnp
mov
les
aaa
add
fldcw
dec
movsl
in
je
jl
repz
dec
jne
inc
push
xor
mov
inc
inc
inc
push
pop
or
bound
jp
push
adc
clc
adc
mov
loopne
push
cli
mov
add
lret
lret
loopne
test
stos
lock
orb
xor
xor
notl
fldcw
popf
dec
xchg
shlb
mov
in
inc
stos
in
jae
dec
jmp
cmp
ss
jg
push
outsl
fld1
mov
aaa
jge
jo
lret
add
pop
rcll
cli
add
push
adc
mov
push
cmp
sbbl
sub
mov
cwtl
cmc
outsl
mov
ljmp
or
cli
pop
aad
aas
push
mov
add
add
push
push
repz
jmp
movsl
push
cmp
dec
loopne
aaa
sub
mov
sti
jae
cltd
push
pushf
movsl
mov
lret
pop
sub
iret
mov
dec
pop
mov
outsb
and
in
test
mov
lea
adc
stos
sub
pop
cmp
sti
pop
jns
pop
cmpb
mov
sbb
outsl
pandn
mov
in
mov
insb
or
xchg
fwait
gs
dec
sbb
or
cmp
mov
lret
hlt
mov
dec
push
xor
bound
jge
shrb
lret
and
jle
testb
cld
mov
xor
inc
dec
or
mov
lret
sub
adc
jp
ret
xlat
test
js
cmp
into
push
sub
sub
pop
pop
dec
inc
rolb
mov
jno
xlat
rclb
xchg
push
shll
or
scas
stos
out
ja
loop,pn
lea
mov
push
mov
jmp
aaa
or
cltd
cs
inc
pushf
into
xchg
movsb
out
sbb
mov
jmp
xchg
add
jmp
stos
pop
fnstcw
xor
inc
dec
shrl
inc
insl
int
sbb
in
ss
xor
loope
cmpsb
push
adc
fists
insl
xchg
call
add
mov
in
dec
insb
push
mov
rolb
pop
xlat
call
xlat
mov
aas
clc
lret
push
mov
xchg
sbb
add
pushf
fucom
push
add
pop
cmp
add
mov
ds
in
iret
mov
mov
adc
popa
aam
in
inc
mov
add
jmp
jo
pop
pop
cwtl
popa
mov
or
shlb
xchg
jmp
ja
pusha
stos
stos
or
jge
inc
dec
mov
ss
xchg
or
xor
add
mov
stos
xchg
inc
ja
mov
ror
cmp
xor
notb
cmp
sub
ret
push
in
lods
testl
or
out
arpl
das
xor
xor
fwait
inc
sti
dec
jbe
rorl
mov
lahf
outsb
insb
loopne
mov
jp
mov
xchg
dec
mov
mov
jbe
mov
inc
jg
aaa
ret
ret
jnp
add
xchg
pop
stos
popf
adc
stos
jns
dec
dec
jg
sbb
cli
push
fwait
je
add
loop
xchg
popf
push
outsb
push
cmp
or
and
xchg
inc
xor
xor
add
sbb
rcrl
lock
adc
lods
jo
push
incb
ret
sti
cld
push
mov
lods
filds
mov
mov
lret
ret
mull
cmpsb
jg
adc
sub
mov
insl
mov
shrl
xchg
mov
jg
jo
daa
imul
fisubl
xchg
pop
sbb
and
inc
jb
gs
inc
pop
stc
push
sbb
loope
add
out
mov
imul
cmp
jnp
fwait
xchg
arpl
pusha
mul
and
pop
sub
out
mov
push
sub
fildll
pop
gs
jmp
inc
adc
leave
in
ffreep
outsl
jns
jl
loopne
add
and
push
push
fwait
push
ja
fs
dec
fidivrs
lods
mov
xor
jl
mov
shll
pusha
push
mov
or
push
mov
cmp
pushf
shll
test
adcb
movsb
mov
fimull
or
mov
pop
xor
sbb
mov
aaa
mov
sbb
push
imul
mov
push
aas
push
lock
ja
dec
adc
mov
ret
imul
mov
cmp
aaa
aas
lea
pop
jno
inc
mov
cli
lahf
mov
dec
test
cmpb
bound
dec
loop
pop
cli
cmpsl
lret
in
into
push
ret
push
cmp
pushf
ss
insw
and
add
aam
pop
test
gs
aad
xchg
mov
lahf
push
outsb
stos
into
leave
leave
xlat
inc
dec
ja
rcrl
repz
sub
mov
sahf
in
rclb
ja
int3
lret
inc
leave
ss
jge
jge
rcrb
nop
sbb
repnz
imul
fnsave
sbb
inc
lock
ss
sbb
lds
push
mov
dec
ror
dec
out
push
out
ficompl
and
inc
jmp
dec
clc
fs
sbb
jb
jae
cli
jmp
stos
bound
xchg
jbe
mov
mov
mov
jne
sbb
mov
movsb
fs
push
push
leave
ficoml
add
xchg
push
cs
mov
std
fs
xor
mov
jns
jg
sub
les
add
dec
enter
or
mov
decb
and
jecxz
push
mov
daa
xorb
pop
and
aas
addr16
aad
fnstsw
or
aam
and
mov
mov
dec
sbb
aam
inc
pop
push
popf
inc
add
stc
jl
sti
inc
stos
repz
jl
mov
xchg
add
popa
or
cmp
pop
sbbl
xchg
sbb
and
cmp
sub
ss
and
inc
push
mov
fdivl
xor
xor
bound
das
and
push
sahf
xor
mov
outsb
imulb
shrl
adc
xchg
sbb
in
mov
imul
push
gs
lret
sub
cmpsl
aas
icebp
push
xchg
xchg
fildll
dec
pop
push
out
mov
test
push
mov
mov
mov
ja
test
movsl
arpl
outsb
lahf
fwait
lahf
test
pop
repz
mov
push
loopne
mov
addr16
adc
or
jo
clts
mov
sbb
cltd
xor
popa
add
loope
or
dec
jb
ja
cmp
pop
sbb
push
ljmp
lcall
mov
jg
xor
cmp
mov
add
int3
stc
mov
cltd
daa
mov
pop
lret
pushf
and
aam
jae
fldenv
scas
popa
fdivl
mov
push
or
fildl
adc
data16
subl
inc
mov
xchg
cmpl
pusha
js
xlat
mov
int3
jp
and
pop
jbe
xchg
shrl
fidivrs
push
leave
jg
dec
mov
inc
mov
adc
dec
sahf
sub
mov
pop
push
sti
daa
xor
gs
stos
stos
in
stos
add
out
push
sbb
push
repz
push
xlat
jmp
adc
mov
sbb
adc
inc
xchg
outsb
xor
jle
inc
in
add
push
popl
cld
mov
push
out
sbb
testl
xor
sbb
mov
psubsb
mulb
dec
or
pop
sbb
jnp
aad
aam
and
enter
clc
mov
sbb
adc
mov
decl
lods
jg
test
pop
push
xor
xor
push
adc
push
enter
push
or
sub
shl
adc
sar
adc
inc
dec
push
jmp
das
pop
push
jg
cmc
js
mov
leave
jle
fldt
repnz
sbb
push
sti
cmp
xchg
push
fs
inc
mov
add
fwait
inc
pop
adc
cwtl
push
subl
jl
jp
sbbb
mov
es
imul
scas
jne
orb
roll
outsl
fistpl
jmp
xchg
jg
inc
xor
lds
insl
sbb
inc
call
adc
inc
mov
lds
add
dec
ds
adc
pop
xor
xchg
mov
mul
icebp
scas
push
cmc
dec
iret
push
jp
cltd
mov
icebp
mov
call
push
lods
scas
mov
xbegin
jb
inc
jg
fdivr
stos
jge
subb
inc
pop
leave
out
mov
jge
jae
std
cltd
push
call
xchg
pushf
loope
mov
and
test
jecxz
mov
jp
and
sub
mov
mov
jbe
dec
dec
aas
seta
jno
popf
pushf
pop
xchg
ljmp
adc
inc
and
xor
push
add
xor
mov
xchg
pop
and
xorl
insb
sbb
mov
cmp
int3
cs
and
divb
push
fldl
inc
xor
fidivrs
adc
xchg
sar
cmpsb
pop
jmp
outsb
rorl
loopne
xchg
push
jp
xor
inc
imul
lock
lret
call
leave
aas
ja
xchg
add
nop
ror
sbb
mov
test
inc
pop
daa
push
mov
loope
call
inc
ror
iret
movsb
cmp
push
cmp
cmc
movsl
lea
pop
or
jne
and
mov
xchg
mov
inc
aad
mov
or
sub
adc
rcrl
cmp
movsb
push
fstpl
mov
shl
xor
and
xchg
sbb
mov
fcoml
mov
inc
cld
mov
push
jns
pop
sti
hlt
pop
dec
dec
add
jae
cmp
imul
outsb
fucomip
xor
shlb
aam
fstpt
fisubl
dec
jnp
mov
mul
or
mov
decb
jnp,pt
stos
faddl
jae
jg
pop
rorb
ret
js
push
daa
cwtl
push
aaa
xchg
sbb
scas
adc
mov
mov
xchg
jl
inc
mov
push
sub
xor
xchg
adc
add
mov
sbb
out
nop
pop
and
xor
cmp
into
subl
sbb
fwait
aas
mov
cmpb
lcall
push
dec
call
or
mov
in
add
aad
pop
bound
push
jbe
pop
sub
lcall
test
jmp
pushf
data16
adc
cli
scas
loopne
mov
push
xchg
out
and
stos
insb
les
leave
js
imul
xor
lock
icebp
out
out
insl
out
xor
in
mov
lcall
jp
and
loop,pt
inc
fldenv
pop
lret
fsubs
mov
lcall
lock
out
sub
aam
dec
insl
in
sub
dec
fcompl
jecxz
mov
sbb
inc
jns
aad
sbb
xor
sbb
or
dec
and
sub
popa
cld
popa
mov
jae
push
sub
cmpsb
dec
cs
mov
cmp
js
push
lock
jno
and
inc
xor
pusha
fsubrl
inc
or
call
pusha
xchg
sbb
cmp
lret
mov
adcb
xchg
in
mov
lret
add
je
in
mov
xlat
dec
add
mov
add
sbb
insl
lcall
getsec
adc
fcmovu
mov
in
aam
aam
mov
jmp
sti
jnp
mov
daa
das
xchg
gs
popl
es
pop
and
adc
cmc
mov
int
push
jno
adc
sbb
dec
mov
mov
js,pn
mov
aad
sbb
cmp
cmp
out
sbb
dec
fcompl
add
and
stos
adc
mov
sbb
xor
sarb
lret
test
inc
or
cltd
cwtl
loop
and
or
lea
inc
inc
sub
mov
dec
pusha
pop
sarb
stc
jge
sbb
add
out
roll
sbb
xor
inc
push
test
iret
or
test
adc
fiadds
fabs
cs
mov
adc
sub
jno
cmp
in
pop
xchg
leave
leave
cmpsb
push
sub
icebp
aaa
cmp
je
repnz
push
pushf
pop
xchg
inc
aas
cmp
int
cltd
imul
leave
cld
xchg
mov
adc
dec
fstpl
sub
sar
lods
mov
fs
daa
mov
inc
jl
je
or
movsb
faddl
mov
xchg
je
js
daa
dec
outsb
mov
sub
imul
lret
xchg
ja
into
sub
fdivl
fs
inc
sbb
xor
and
push
inc
cmpsb
js
es
mov
mov
mov
arpl
rorl
dec
xlat
lods
dec
jne
adc
mov
inc
or
repz
testb
dec
mov
mov
mov
lods
rclb
arpl
cltd
and
cmpsb
jg
wrmsr
adc
rclb
xchg
sub
ljmp
sti
or
es
or
pop
repnz
fdivl
aam
xchg
cmpsl
leave
or
adcl
push
lock
fildll
pop
xor
adc
out
inc
imul
pusha
pushw
out
sbb
pop
push
iret
movsb
imul
xchg
lahf
pop
inc
stc
ja
sar
insb
clc
adc
andl
call
outsb
inc
mov
add
xor
movsb
out
aas
shll
rclb
das
jno
mov
jl
sti
lahf
mov
push
add
int3
fcompl
push
adc
lret
xchg
test
cwtl
cmpsb
cs
es
dec
adc
add
inc
icebp
out
xchg
push
andb
ljmp
sti
test
push
movsl
or
or
mov
les
push
jge
pop
lahf
pop
in
mov
pop
imul
or
or
pop
das
push
lcall
dec
pop
imul
mov
add
cmpl
testb
js
or
jae
mov
or
adc
sub
mov
mov
lods
dec
cli
lock
js
add
out
out
insl
mov
push
cmp
mov
add
sub
stos
inc
push
insl
jmp
sbb
outsb
cwtl
mov
shrb
dec
sub
mov
xchg
xlat
movl
or
mov
negb
mov
iret
int
pop
jmp
sub
mov
add
or
sbb
lea
add
dec
xor
roll
out
test
pop
xor
mov
mov
lret
shrb
mov
pusha
sub
cmp
cmp
pop
iret
pop
xchg
mov
sub
push
xchg
mov
mov
push
adc
mov
aas
adc
imulb
addl
divb
sub
mov
leave
push
xchg
insb
xor
dec
sbb
fwait
and
inc
push
inc
or
cs
iret
jne
test
mov
or
insb
out
pusha
xor
iret
sub
fists
rorl
rorl
fxch
sar
sub
js
pop
fdivrl
mov
xor
xor
out
dec
ja
mov
jmp
aaa
popa
inc
sub
and
pop
push
sahf
movsl
movq
adc
fstpt
fcomip
int3
dec
jl
in
sub
mov
cmp
hlt
push
inc
ja
mov
in
push
outsl
fsubrl
dec
mov
push
in
negb
test
pushf
push
call
repnz
sub
sbb
jne
mov
mov
mov
arpl
add
fs
jg
lods
jne
aad
sbbb
sbb
hlt
into
std
xchg
or
out
sub
mov
xchg
gs
outsl
in
push
and
xor
dec
das
add
pop
out
mov
mov
pop
jg
idivb
jmp
add
pop
inc
xchg
cli
lods
jg
xor
mov
dec
push
in
int3
ror
xor
add
inc
pop
scas
sub
push
or
pop
lahf
xchg
hlt
sub
cmp
dec
aas
clc
gs
outsl
xor
xchg
inc
and
call
lods
mov
xchg
xor
push
cmpsl
jb
lcall
inc
nopl
aam
mov
shll
daa
jb
or
inc
out
sbb
jle
arpl
mov
shlb
pop
gs
in
div
push
pop
popf
mov
arpl
leave
popf
pop
xchg
int3
fbld
jecxz
stos
es
shrl
lret
fsubl
jl
ljmp
cmpsb
dec
pop
ret
lock
adc
movsb
add
aam
dec
fcoml
inc
push
cmp
xchg
js
repnz
aad
fwait
out
adc
repnz
shrl
jmp
inc
push
mov
or
fdivrl
xchg
pop
xor
jle
cmp
ficomps
adc
hlt
xor
mov
xor
repz
mov
rcrb
cmc
push
push
and
cmp
dec
rcrb
lock
rolb
pop
inc
cmpsb
scas
mov
dec
fstpt
mov
gs
jne
or
dec
fsubrl
sbb
xchg
push
adc
xchg
cmc
xchg
cmp
sbb
cld
inc
pop
ffree
dec
xlat
mov
jb
out
cmp
idivb
push
nop
adc
add
push
mov
pop
rorl
push
in
push
mov
stc
dec
in
jmp
xor
in
jns
out
in
outsb
inc
push
data16
stos
or
loop
push
movsl
and
in
stos
xor
adc
dec
cwtl
arpl
arpl
or
cmp
cmp
pop
rcrl
cmp
out
push
in
dec
lret
sti
dec
pop
push
enter
lods
xchg
add
nop
dec
hlt
xor
iret
add
jb
or
fstl
fcoml
cmp
mov
fidivrl
clc
sub
and
les
push
inc
mov
sub
sbb
test
subl
jl
cld
stos
pop
arpl
popa
imul
mov
into
add
sahf
ficoms
pop
adc
mov
sbb
push
ret
into
mov
iret
repz
in
stc
shll
les
push
or
or
add
cmpsb
pusha
mov
sbb
sub
dec
and
mov
scas
out
lea
ds
insb
sahf
out
lahf
push
pushf
insl
mov
xchg
vmread
hlt
roll
into
sub
push
jecxz
xor
dec
enter
loope
mov
repz
jmp
fmull
ret
addb
mov
dec
fmull
stos
jb
push
sub
xchg
jmp
mov
mov
hlt
mov
outsl
xor
lahf
les
aas
sbb
mov
cmpsb
mov
sbb
popf
jl
mov
ja
fwait
pusha
and
addb
jge
mov
stc
and
push
jbe
loopne
ss
imul
shrl
sbb
rcr
aas
cmp
push
bound
shll
js
popl
cwtl
pop
cmc
sbb
fnstsw
xor
movswl
int
loope
js
mov
add
adc
js
rcll
cmpsb
cmp
push
pop
aad
jne
test
add
dec
out
mov
mov
js
imul
sub
out
jbe
xchg
in
lock
pusha
xchg
jle
mov
jl
lret
inc
push
clc
push
mov
int3
and
in
lret
sub
mov
cli
rcr
cmp
popa
ret
ss
out
adc
xlat
jne
jg
mov
daa
xchg
clc
sub
in
ficoms
mov
ss
out
mov
mov
mov
lods
push
xchg
inc
push
cld
adc
xor
mov
pop
lahf
cmc
dec
call
lcall
add
out
test
cmp
mov
and
scas
loop
xor
rcl
ja
sar
in
cmp
fldcw
aad
and
jmp
inc
daa
inc
add
dec
int3
nop
mov
sub
loop
cmpb
push
push
das
pop
or
das
inc
mov
pop
jne
jle
mov
pop
jmp
jle
dec
pushf
dec
pop
dec
xor
jbe
xchg
orb
sub
sub
jl
daa
or
jbe
negb
mov
add
lds
call
mov
dec
in
testb
jp,pt
jecxz
mov
xchg
rcll
sti
jle
pop
scas
fiaddl
das
fwait
movsl
lds
loop
andl
clc
cmp
pop
bound
cld
addl
xor
mov
mov
sbb
fucom
loopne
cmp
loop
cmpsl
fnstsw
push
movsl
mov
sub
outsl
sbb
lret
mov
icebp
call
mov
das
xchg
std
arpl
xchg
pop
ds
pop
xchg
dec
pusha
dec
or
sub
add
sahf
sahf
stos
movsb
xlat
ja
lds
mov
lds
ret
adc
test
xor
lods
xchg
daa
sub
mov
adc
aaa
rcrb
push
cmc
jne
add
mov
or
daa
or
stos
cmp
fsubp
adc
mov
in
pop
arpl
mov
cmpsb
lret
push
int3
add
or
outsb
orl
push
cmp
jmp
mov
outsb
js
fs
or
xor
inc
xor
push
pop
dec
or
inc
out
bound
and
movsl
lahf
xchg
or
pop
xor
int3
jp
xor
adc
mov
mov
mov
fnstsw
insl
lods
lret
and
jo
mov
int
mov
cmp
test
lods
shll
mov
ret
jae
xor
adc
and
bound
dec
push
lock
push
mov
ja
scas
sbb
das
push
add
sarl
and
mov
cs
mov
repz
dec
dec
je
sbb
test
daa
test
int3
je
push
pop
mov
es
sub
lahf
mov
cmpl
lret
xchg
pop
or
pop
xor
fldenv
pop
dec
dec
pusha
stos
les
sbb
or
ret
push
int3
or
mov
scas
inc
pushf
out
lret
sub
or
pop
test
inc
insl
movsl
lds
push
les
sbb
adc
loop
int
test
rolb
inc
xor
mov
call
pop
addr16
push
stos
in
pop
push
test
xchg
xchg
lahf
cmp
test
in
lcall
inc
stc
mov
sbb
pop
out
adc
shlb
mov
dec
xchg
sbb
divl
sbb
push
outsl
mov
adc
das
inc
in
addl
insb
or
popf
fxch
mov
jnp
xchg
mov
xor
dec
push
or
mov
mov
inc
xor
pop
or
mov
mov
and
mov
pop
test
jbe
jae
sbb
scas
push
sbb
add
das
ror
jae
popf
mov
sbb
cmp
mov
jbe
dec
in
mov
sub
call
pop
dec
out
scas
inc
inc
outsl
out
fdivs
pop
in
fcmovu
jmp
lret
stos
xor
jle
push
cli
loope
test
mov
loope
jmp
jno
dec
in
mov
das
push
adc
sub
add
test
cmp
fldenv
jbe
mov
je
addl
push
pop
aam
scas
fldl
xor
test
out
testb
mov
adc
test
sarb
jo
jmp
je
mov
sbb
cld
adc
andl
push
sahf
insb
stos
push
mov
fnstenv
es
ja
je
xor
sbb
cmc
in
push
mov
mov
mov
test
adc
arpl
popf
push
leave
movsb
xchg
je
cmc
mov
pop
xchg
out
jmp
sub
jne
mov
lods
xchg
xchg
test
dec
xor
dec
stos
ja
xchg
mov
lock
dec
in
push
push
dec
sub
or
pop
xchg
repz
or
decb
fnstenv
mov
js
xchg
arpl
jg
push
ja
lock
push
mov
inc
mov
shl
scas
xchg
mov
arpl
std
and
or
push
andl
and
ljmp
mov
test
mov
or
jge
xchg
nop
jnp
inc
iret
xor
out
add
or
and
adc
loope
jl
xor
ret
add
pop
xor
sti
cmpsl
sbb
ret
mov
push
pop
pand
push
cmp
not
stos
add
test
movsb
js
cmp
test
mov
rcll
jo
dec
push
divl
adc
arpl
imul
push
xchg
xor
xchg
mov
xchg
mov
add
sub
shll
cltd
push
out
mov
divl
adc
cmp
dec
or
les
cmp
iret
ds
sbb
xchg
call
lea
mov
cli
out
test
jo
sti
aaa
ljmp
in
lret
loopne
shl
xchg
push
shrb
and
jo
out
arpl
dec
add
test
inc
lods
outsb
cltd
popl
sub
cmp
mov
inc
lahf
push
jbe
adc
lahf
adc
mov
loopne
inc
adc
mov
dec
adc
cmp
jns
addb
rcrb
sub
les
xor
ja
pop
push
add
cltd
es
test
mov
arpl
sub
iret
loope
mov
cmc
out
lock
sti
ja
repz
add
int3
jmp
fs
push
out
shl
jbe
shrl
loope
push
push
xor
inc
ds
sub
xor
iret
je
xor
add
lret
and
std
fstl
pop
outsl
inc
cltd
popa
push
cmp
xchg
xchg
repnz
dec
jg
stos
ret
out
xor
sub
cmpsb
or
addr16
push
or
mov
and
xor
push
insl
sub
and
insb
lods
popf
xor
call
dec
out
test
fisubrl
shll
clc
jne
ficompl
aad
push
stos
pop
pop
mov
xchg
add
mov
xchg
cltd
jbe
std
rcr
sbb
fstp
push
ret
lods
sbb
movsl
xor
pop
mov
pushf
les
in
stos
repz
out
mov
pop
mov
mov
movsl
xchg
popa
mov
sahf
lods
jmp
loop
loopne
push
sbbl
dec
arpl
shll
subl
sbb
fsubrs
cmp
fidivl
mov
loop
inc
es
lock
push
jnp
mov
pop
loopne
repnz
out
adc
adc
xor
aam
pop
filds
data16
dec
in
out
mov
sti
outsl
cmp
pop
stc
dec
addr16
adc
mov
push
dec
jbe
sahf
insb
mov
mov
push
push
add
fcoml
push
test
cmpsb
cmpsl
in
cmpsb
mov
cwtl
jge
push
sub
int3
ds
lret
jbe
cli
push
jae
mov
sbb
mov
jns
jo
dec
or
mov
mov
xchg
mov
push
clc
test
ljmp
bound
shlb
sbbl
nop
or
orb
cmp
ljmp
mov
aad
faddp
jo
pusha
jne
push
arpl
fwait
push
push
xorb
cmp
pushf
mov
jl
addr16
pop
test
or
mov
cmp
xchg
dec
mov
lea
mov
adc
sub
notb
mov
cwtl
inc
jge
mov
imul
fdiv
fldcw
paddsb
int3
jp
pop
pop
jmp
add
mov
call
repnz
xor
mov
inc
mov
repnz
inc
jg
sbb
jp
sti
add
scas
stos
pop
mov
xchg
mov
dec
inc
xor
push
addb
movsl
add
pop
out
xchg
cmpsb
pop
jae
inc
xlat
daa
fidivrs
mov
loope
std
add
scas
xchg
ret
repz
adc
scas
icebp
lahf
ror
add
mov
subl
jg
xor
loop
ds
xor
mov
loop
lcall
xchg
push
jnp
mov
cs
jb
inc
out
cmp
xor
cmp
or
adc
lds
sbb
inc
jg
jle
pusha
lret
enter
push
nop
mov
sub
cmp
dec
and
sbbl
pop
mov
repnz
jo
sub
loope
cs
shll
push
jecxz
js,pt
add
jmp
jb
or
cltd
je
loopne
pop
cli
mov
xchg
mov
insl
arpl
sbb
adc
jge
lea
sub
insb
mov
mov
add
sbb
cltd
or
cwtl
dec
aas
adc
repz
mov
in
and
cwtl
mov
pusha
push
cmp
sar
jb
insl
add
jg
sub
pop
mov
fst
jmp
aam
sub
cmc
pushf
add
das
dec
mov
sar
jo
orb
test
rclb
imul
leave
cwtl
mov
aas
or
out
loopne
je
add
out
push
jmp
sbb
mov
cmp
mov
lea
imul
mov
push
cmp
xchg
inc
cli
push
mov
mov
sbb
lods
dec
pop
or
aaa
sahf
add
add
xor
ds
inc
dec
repnz
imul
xor
xchg
adc
in
loope
mov
and
call
push
insl
xchg
pop
xchg
int3
lea
cltd
cld
push
inc
es
pop
les
cmp
pop
cmc
sub
mov
pop
adcl
pop
mov
mov
mov
mov
adc
fcompl
adc
cltd
roll
xor
pop
rcll
movsl
pop
stc
out
dec
and
and
mov
ja
push
mov
int
jno
repnz
fidivl
lret
mov
push
push
imul
and
out
jnp
lret
jns
fwait
popf
or
mov
or
popa
lcall
mov
clc
mov
inc
lahf
mov
jecxz
push
or
lods
int
aam
shrl
mov
test
inc
jbe
sahf
roll
pop
lds
sub
sbb
ss
mov
or
dec
adc
out
push
xchg
lahf
out
sbb
inc
int3
jge
sub
push
pop
mov
addr16
clc
lahf
outsl
mov
xor
fiaddl
ja
mov
jo
pop
pop
mov
sub
jl
fsubrp
mov
cld
add
sbb
je
dec
push
jmp
out
pop
xor
aad
lods
scas
ss
add
mov
xor
cltd
inc
xchg
nop
xchg
xchg
cmc
xor
and
repz
sbb
stc
sub
mov
mov
andl
pop
inc
mov
jge
je
or
cmp
and
call
clc
stc
adc
cmpsl
push
scas
out
cmc
fcoms
xchg
out
sub
fisttpll
stos
stc
mov
mov
js
dec
mov
mov
xor
gs
jle
sbb
jnp
fistl
aas
jle
je
add
mov
xor
in
jno
xor
inc
stos
lods
cmp
rorb
push
je
push
out
outsl
sub
sub
jne
mov
jbe
neg
xor
dec
clc
call
dec
lret
mov
sar
std
mov
imul
daa
cmp
decb
gs
jo
mov
lock
mov
test
mov
ds
adc
jb
pop
cmovs
push
repnz
pop
fistpll
inc
repnz
data16
outsb
pop
dec
jmp
ss
sbb
sbb
cmp
mov
or
jp
mov
aad
int
lds
dec
pop
push
les
arpl
outsl
push
out
std
xlat
incl
jmp
pop
adcb
push
mov
gs
mov
or
cli
testl
cli
shlb
fstpt
lods
sbb
or
and
bound
jnp
shl
fcmovb
jns
lock
adc
xlat
repz
mov
mov
popf
cmpsl
scas
rcl
pop
or
rorl
test
and
enter
lcall
movsb
sbb
or
stos
dec
addr16
pop
add
std
pop
push
inc
mov
scas
sbb
rorl
adc
test
pop
jg
das
lds
jmp
or
dec
bound
fimuls
test
idivb
addr16
out
fistl
mov
cmp
cmc
js
pusha
push
push
je
imul
cs
and
jno
mov
push
call
pop
xchg
jbe
loop
mov
shrd
adc
or
mov
aam
pushf
cltd
test
and
std
dec
fwait
mov
inc
stc
into
jl
iret
stos
lahf
stos
mov
inc
aaa
jle
nop
and
lock
call
mov
insl
sub
out
mov
mov
fisttpll
les
dec
js
loope
imul
mov
aam
sbb
lret
xlat
add
pop
jne
pop
jae
and
pop
jnp
clc
icebp
ljmp
out
jg
pop
incl
sar
das
sahf
add
or
sti
fmuls
jmp
sub
sub
push
cmp
lahf
and
dec
fcompl
push
scas
test
stos
xor
popa
lock
xchg
sub
jae
fwait
lret
cwtl
inc
shrl
das
mov
pop
cmp
shrl
jmp
cmc
scas
lds
dec
mov
lret
ss
xchg
in
ret
sub
fsts
lods
jp
fsub
pop
bound
ret
std
jbe
out
or
or
ret
lcall
sbb
in
rcrb
pop
adc
pusha
and
int3
mov
ss
sahf
push
loope
and
inc
addr16
jno
jmp
mov
insl
and
mov
and
addr16
inc
dec
jne
jbe
push
lret
ret
in
inc
clc
push
jge
int3
or
push
mov
mov
and
mov
inc
jg
sbb
std
xorb
addb
and
fldenv
sbb
sarb
inc
push
cmpsl
bound
or
in
int3
mov
xor
test
clc
mov
in
push
or
mov
mov
jmp
xlat
sahf
test
dec
or
aam
lea
and
cmpl
inc
jle
jp
std
in
fwait
popf
inc
sub
cmp
pop
lret
push
cmp
lods
cmp
adc
or
mov
dec
popf
mov
push
fbstp
adc
push
and
cmpb
fcomps
push
jle
sbb
test
adc
and
sub
adc
aaa
dec
mov
in
xlat
loopne
out
dec
mov
push
idiv
mov
or
sbb
in
lods
sub
cmp
mov
out
call
mov
pop
pop
cmp
sub
dec
mov
or
nop
pop
cmp
adc
sbb
sbb
ret
pop
mov
jmp
pushf
mov
pushf
loope
and
xchg
inc
add
mov
ret
mov
xor
jg
jae
sbb
lret
sbb
push
icebp
pop
pop
adc
pop
pushf
xchg
ret
loopne
out
xchg
call
cmpsb
fs
or
inc
xor
push
and
mov
dec
jmp
ja
aam
rcll
xor
testl
sub
sub
and
mov
jno
cmp
sbb
enter
jns
push
out
scas
test
testb
negl
and
mov
jae
jl
and
add
sbb
cli
out
fnstcw
inc
push
dec
neg
inc
lock
xchg
test
pop
xchg
lret
pop
push
test
jmp
scas
testl
in
enter
in
jb
je
xchg
pop
sbb
cld
loope
mov
sbb
out
sub
test
scas
adc
inc
or
xchg
or
adc
push
xchg
sti
loope
mov
jge
sbb
cmpsb
xchg
xchg
mov
cmp
dec
push
inc
adcb
push
jge
mov
add
dec
adcb
cmpb
outsl
pop
adc
dec
push
push
lods
lahf
fiaddl
jae
inc
in
jne
lock
and
push
add
enter
daa
cmp
and
stc
imul
arpl
or
xchg
es
xor
xchg
pop
in
xor
sbb
das
fwait
subl
push
fcmovbe
pop
dec
pop
cmp
ret
cs
arpl
sbbl
ja
hlt
sbb
mov
lods
xchg
or
xor
mov
dec
adc
addb
faddl
shlb
jge
aas
dec
inc
sbb
in
dec
call
xlat
mov
xor
adc
xchg
call
icebp
test
adc
xor
test
and
pop
and
scas
shl
fmul
clc
sti
cli
inc
sbb
dec
addl
jbe
in
cwtl
dec
push
f2xm1
inc
pop
lret
inc
ror
lcall
mov
gs
jae
enter
cmp
cmp
cmp
iret
mov
xlat
filds
jns
mov
pop
or
xorl
jne
ja
es
outsl
enter
or
loope
and
and
mov
sub
adc
push
les
inc
fiaddl
ret
push
into
or
inc
repnz
sbb
mov
aaa
jecxz
fdivl
aaa
adc
xor
cmc
xlat
xor
stos
call
and
out
mov
in
add
ret
jns
sar
push
xor
stos
xor
add
push
mov
ja
je
mov
xchg
mov
repnz
ljmp
and
xor
mov
inc
and
mov
and
shll
hlt
lds
mov
and
sub
lcall
fucomi
popf
mov
out
shrb
stos
jo
push
pop
jbe
cs
leave
fs
or
out
jp
mov
xor
mov
pop
lods
scas
sbb
ljmp
clc
scas
cmp
mov
sbb
cmp
xchg
ss
mov
xchg
adcl
call
cwtl
call
loope
lret
mov
and
call
mov
into
sub
adc
jnp
repnz
aaa
pop
inc
fcmovbe
jno
jns
vpmulhw
leave
lods
scas
hlt
and
sub
mov
imul
push
add
xchg
bswap
std
in
xorl
sub
mov
jmp
je
out
rcl
inc
ret
push
daa
pusha
sub
repnz
imul
imul
movsl
push
mov
clc
jecxz
dec
lds
pop
mov
add
adc
add
test
mov
call
cld
fwait
jo
popa
add
jnp
add
mov
aaa
push
xor
sub
xchg
and
xchg
aam
flds
mov
jns
inc
les
adc
mov
fdivrl
xchg
sub
pop
lcall
xor
leave
imul
and
xchg
cmp
xor
ja
mov
idiv
mov
push
mov
rorb
add
sub
jecxz
ret
sarb
fimuls
cmp
lcall
xor
or
cmp
test
dec
dec
and
pushf
fcomp
push
movsl
cmpsl
lahf
in
push
lret
dec
and
sbb
into
mov
in
xchg
loope
cmp
push
jbe
icebp
cmp
jmp
sub
or
pop
js
xlat
dec
jbe
mov
in
add
cwtl
push
outsl
dec
xorl
xchg
push
loopne
mov
xchg
adc
ret
in
xor
dec
cmpl
ret
nop
adc
dec
cmp
push
mov
out
and
or
dec
scas
mov
sbb
repz
aam
and
in
xchg
dec
push
inc
sbb
into
idivb
sahf
in
std
and
inc
loop
scas
int3
ror
xchg
aaa
and
adc
jl
ljmp
sbb
xchg
arpl
test
jae
fcmovb
xchg
push
jmp
pop
adc
lcall
push
shll
outsl
jno
pop
test
jle
popa
outsl
outsl
ret
jnp
jne
push
inc
notb
pop
add
and
subb
adc
xor
jmp
pmullw
repnz
sahf
outsl
pop
pushf
mov
lahf
push
pop
loop
xor
inc
or
lods
dec
mov
stc
adc
push
leave
fisubs
into
dec
sub
cmp
cmp
je
in
fsub
ss
push
dec
out
jl
push
or
addr16
movsb
movsb
mov
xchg
sub
xor
daa
cwtl
shl
in
orl
cld
je
loopne
hlt
fcmovnbe
add
and
pop
sti
mov
and
jl
jl
push
ds
ds
stos
mov
and
adc
fnop
mov
xchg
das
xor
out
xchg
add
rorl
push
les
shrl
in
fistpll
test
imul
arpl
mov
xchg
fsubrl
insl
hlt
rcrl
add
clc
lret
int
xor
jo
and
push
sbb
out
fistpl
inc
ror
pop
stos
jbe
insb
orb
adc
mov
and
stc
into
push
data16
mov
xor
shlb
sahf
bound
sub
cmp
jno
lret
add
jo
mov
sbb
cmpsl
fcmovu
nop
das
add
insb
call
mov
adc
xchg
mov
add
adc
jmp
fstpl
mov
mov
rcl
mov
mov
push
inc
rolb
add
ljmp
mov
xchg
das
dec
dec
lods
dec
adc
and
movsl
mov
lds
in
push
lret
or
mov
lret
stos
sub
add
push
les
xchg
ret
in
xorb
mov
aas
xchg
aas
popf
aas
inc
mov
std
jmp
inc
rcll
js
lret
or
adc
shrl
sbb
xor
xsavec
fimull
sbb
ret
cmc
cli
lret
in
cmc
add
movsl
popf
and
cmp
push
loop
sub
mov
mov
cmp
mov
int3
fisttps
cmpb
insl
and
pop
dec
mov
clc
sbb
sub
std
lret
mov
testl
popf
jbe
lds
cli
sbbl
out
mov
ret
fucomi
or
fistpl
xchg
sub
out
call
cmp
push
insl
xchg
xor
test
ret
addr16
fmuls
pop
cmpsb
cmp
and
xlat
jns
test
fcomps
inc
push
mov
push
das
xor
mov
xchg
cmc
mov
sbbb
mov
fwait
les
inc
aaa
cmp
add
jp
mov
inc
out
dec
stos
and
jle
mov
shlb
sbb
ret
mov
add
movsb
pushf
into
mov
adc
cmpb
jge
addr16
mov
lcall
push
mov
and
pop
cmp
popa
mov
in
sbb
mov
sub
and
shr
inc
jl
stc
outsb
fistpll
in
adc
icebp
repz
add
test
out
or
das
mov
adc
push
jne
rcrb
or
fisubrl
popl
cwtl
inc
push
loopne
into
xor
ret
arpl
sub
rcr
push
mov
shll
dec
outsb
icebp
mov
aam
xchg
jae
cwtl
mov
in
push
add
sub
enter
lret
mov
je
or
mov
push
jecxz
sbb
inc
test
fnstenv
in
xchg
mov
int
xorl
fimull
ja
ss
mov
inc
lock
std
inc
jo
mov
rcr
xchg
fwait
pop
pop
sub
repnz
adc
mov
sbb
addr16
out
adc
mov
pop
aas
mov
and
pop
xchg
mov
or
popa
cmp
dec
mov
fwait
and
call
cld
repnz
adc
aad
or
jnp
push
jb
mov
bound
int3
adc
inc
das
adc
pop
push
das
mov
shlb
outsl
loop
outsb
xchg
stos
sarl
loopne
addl
in
lock
test
mov
shl
je
push
dec
cmp
dec
cmp
push
lret
sbb
sub
mov
fmuls
pop
lods
adc
mov
and
or
leave
pop
int3
test
int3
push
pop
and
sub
in
test
pop
imul
mov
in
sahf
or
or
mov
mov
inc
aaa
dec
push
sahf
mov
sbb
loope
int
xor
and
lds
aas
cmpsl
sub
test
fs
push
call
jg
xlat
shlb
outsl
sti
or
orb
scas
jo
stc
mov
test
xor
stos
jecxz
add
xchg
pop
mov
out
xchg
pop
std
pop
in
movsb
jp
mov
mov
add
lcall
xor
or
dec
insl
inc
cmpsl
pop
mov
xchg
es
std
mov
cmp
mov
lcall
scas
js
movsl
mov
call
dec
jl
sub
sub
push
ss
xchg
pop
mov
cmp
dec
and
mov
jle
insb
mov
mov
out
cltd
mov
jecxz,pn
mov
pusha
cmpsb
adc
xor
movsb
rolb
imul
mov
mov
mov
sbb
in
in
xor
dec
int
out
imul
xchg
out
push
xchg
add
mov
ds
aaa
sbb
jo
dec
loop
inc
mov
adc
push
and
cmpsl
movsl
xlat
jo
sbb
inc
sub
adc
mov
scas
lahf
stc
rol
movsb
shll
out
lods
push
ljmp
stos
inc
lahf
cmp
imul
cmc
int3
jbe
dec
stc
push
mov
xor
dec
scas
push
rcll
fisubs
sahf
inc
xor
sahf
daa
push
gs
sub
ljmp
fmull
add
jg
adc
xor
inc
in
mov
adc
icebp
les
jnp
or
daa
mov
insb
mov
pause
fdivrs
test
jmp
and
ss
fdivl
frstor
lods
xor
fstl
imul
lahf
bound
jp
fwait
push
adc
pop
test
and
adc
xchg
cmpsb
lret
scas
test
mov
pop
sbb
ret
cs
mov
adc
jle
shl
push
into
cmp
xchg
add
je
jecxz
xor
movsl
cmp
cmp
adc
adc
mov
add
push
or
fcmovnu
das
pop
xchg
test
cwtl
rolb
xchg
je
lret
xor
mov
loopne
movsb
lock
xor
nop
movsl
idivb
scas
icebp
xor
inc
mov
jg
fildl
add
lea
pop
fnstcw
push
stos
pusha
jns
xor
in
xlat
aam
int3
adc
test
push
adc
and
xlat
mov
dec
daa
xchg
popl
in
push
movl
aaa
sar
clc
pusha
ja
fsubrp
cltd
mov
push
jb
or
in
daa
mov
xchg
inc
ds
mov
out
pop
mov
prefetchw
xchg
adcl
fcompl
sbb
xchg
cmc
in
pop
pop
mov
fs
int
and
loopne
cs
xor
or
sbb
call
or
out
fnstsw
xor
int3
scas
push
fbstp
xor
mov
push
jge
lock
inc
and
jge
pop
sub
cli
push
in
push
xor
fidivrs
cmpsl
testb
cli
mov
pop
add
xor
xchg
int3
andb
ja
mov
push
nop
mov
dec
movsb
xchg
and
xlat
lds
inc
shll
loope
lcall
stc
pop
loopne
lahf
mov
aas
ss
add
fimuls
icebp
int
xor
jg
adc
dec
inc
pop
mov
mov
ja
push
sbb
mov
rorl
out
push
jl
loopne
repz
in
mov
jno
push
sub
xchg
sti
xor
mov
jecxz
sub
mov
imull
dec
andl
cmpsb
mov
jo
sub
cwtl
pop
mov
int
popf
push
sub
inc
adc
out
push
in
cmp
cli
pushf
nop
push
ret
cs
xor
xor
decl
sti
pop
and
mov
sar
jnp
sub
dec
xchg
loopne
jae
adc
xor
pushf
das
lcall
les
or
loope
in
addb
or
mov
or
pop
mov
loop
adc
aad
std
gs
cmpb
and
mov
mulb
dec
pop
push
pop
leave
nop
lods
dec
adc
adc
rol
xchg
cmp
mov
out
and
cs
add
push
sbb
clc
cwtl
icebp
jecxz
movsb
int
icebp
shl
cli
jne
or
and
aad
xor
pop
dec
test
push
jle
mov
pop
roll
cld
movsb
into
dec
xor
sarb
repnz
mov
lea
das
or
pushf
stos
cmpsb
xchg
int
lret
sbb
jns
fiaddl
outsb
lods
out
dec
test
js
rol
pop
add
dec
mov
outsb
lcall
enter
push
cmpsl
test
gs
fcos
mov
mov
aaa
adc
outsl
insb
aas
dec
ret
call
fdiv
jbe
xor
xor
fstpl
or
sbb
push
mov
cmp
push
or
iret
inc
add
insb
mov
shlb
xlat
nop
movsb
enter
rol
popa
inc
inc
lea
xchg
mov
push
mov
pop
add
sbb
sbb
cmpsb
in
rorl
mov
or
and
cltd
add
mov
cltd
mov
testl
inc
push
sbb
jp
pop
popf
jge
jmp
mov
insb
neg
nop
into
mov
sti
das
psubusw
mov
xchg
aam
popa
add
or
fimuls
enter
outsl
xchg
aam
test
femms
out
cwtl
mov
shrl
loope
inc
mov
sbb
and
fdivrl
idivl
leave
push
mov
in
test
or
ljmp
aad
minps
imul
push
pop
push
je
sarl
iret
and
gs
mov
jno
mov
cmp
movb
cmc
aas
pop
pusha
dec
test
fdivl
pushfw
pop
xorb
fists
mov
mov
movsl
aam
xchg
add
dec
stos
adc
sahf
pop
icebp
icebp
push
lahf
dec
adc
sbb
and
repnz
stc
ds
lret
popf
and
stos
jecxz
test
mov
and
push
stc
jb
das
fmul
sarb
mov
insb
xor
bound
or
dec
lods
jge
or
push
daa
mov
leave
dec
mov
sub
stos
or
mov
push
hlt
xor
filds
mov
add
out
push
mov
push
mov
cmpsl
pop
adc
mov
das
sbb
or
or
adc
mov
xor
int
mov
lock
mov
mov
insl
and
into
cmp
push
add
insl
push
mov
sbb
out
je
dec
scas
xchg
cltd
pusha
adc
mov
jg
cli
movsb
lock
mov
in
sub
mov
xchg
imulb
sti
sub
push
add
scas
jge
adc
mov
mov
xor
arpl
pop
jae
jbe
pop
rcrb
scas
push
and
dec
les
popa
push
mov
aas
xchg
scas
sbb
aaa
mov
push
mov
xchg
xchg
ret
popaw
xlat
mov
popa
mov
lret
mov
in
jmp
cmp
outsl
out
stos
dec
cs
js
adc
and
xor
push
ret
adc
lea
into
pop
outsl
nopl
dec
shlb
xor
sub
aaa
inc
bound
mov
push
and
aam
roll
test
push
roll
stc
cli
ret
xchg
out
ds
mov
ret
pop
jb
ret
icebp
popa
adc
and
adc
mov
and
jmp
sbb
in
mov
and
sbb
dec
cmp
cmp
pop
repnz
xor
jmp
pop
ret
scas
sbb
inc
xlat
js
add
push
sti
cmp
outsb
dec
lods
or
int
inc
jno
mov
and
adc
jno
mov
add
mov
mov
cmp
add
scas
push
sahf
cmp
mov
jge
and
iret
jno
movsb
adc
mov
aam
dec
pop
rol
fldt
mov
push
mov
sbb
pop
or
inc
add
adc
sahf
stos
lock
xor
jno
leave
stc
addr16
lods
push
divl
or
insl
push
mov
loop
inc
leave
pop
cmc
jecxz
imul
add
xor
inc
pop
das
cmp
sbb
and
ljmp
cs
xchg
xchg
aad
rcll
inc
fs
inc
insl
shrl
mov
rcrl
inc
sarl
sbb
repnz
xchg
fisttpl
jl
rcll
push
sbb
scas
aas
sub
pop
mov
add
lcall
xchg
xchg
xor
outsb
js
imul
fisttpll
cmp
pop
int3
xchg
mov
pushf
fiaddl
sti
adc
mov
mov
in
stc
inc
inc
mov
shrl
mov
sbb
adc
xchg
fwait
mov
js
xchg
or
nop
jne
pop
leave
es
xchg
fildl
adc
mov
fs
push
mov
mov
mov
fstpt
inc
nop
pushf
mov
fisttpll
cwtl
cmp
jb
mov
sub
cld
mov
dec
insb
push
jp
notb
ret
call
jnp
adcb
les
cs
xchg
xor
and
pop
jnp
mov
insl
jge
sub
movsb
popa
stc
xchg
add
scas
das
fwait
inc
pop
xchg
rorl
stc
cmp
mov
lcall
mov
in
dec
add
out
push
sbb
pop
jge
in
inc
dec
leave
xchg
mov
push
cmp
adc
jnp
add
ds
mov
mov
mov
inc
enter
mov
add
aas
cmc
cld
jecxz
std
xor
cli
xchg
nop
pop
dec
outsl
fsubs
dec
lods
jle
or
mov
push
mov
testb
dec
stos
insl
inc
and
lret
push
and
daa
sti
sahf
mov
xchg
sub
jno
in
adc
pop
out
stos
jg
jecxz
sbb
andl
add
test
sub
sbb
push
sbb
jmp
stos
cmpl
dec
or
adc
andb
or
jg
aad
ret
adc
dec
loope
dec
mov
dec
cmpsl
les
clc
cwtl
xor
sahf
in
das
lret
dec
out
out
iret
ret
cld
mov
pop
dec
pop
xchg
ror
jmp
aad
inc
cli
imul
xor
je
cmp
mov
rol
xchg
jle
pushl
imul
ret
rclb
cmp
stc
sub
mov
adc
lret
movsb
repnz
popf
pop
push
sbb
cmp
pusha
mov
shlb
dec
inc
and
or
ret
dec
fists
aam
dec
and
sti
fidivrs
mov
xlat
mov
mov
xchg
test
push
in
xchg
mov
mov
iret
imul
lcall
pop
icebp
xchg
dec
mov
cld
jbe
jno
or
and
mov
push
pushf
aad
gs
cmp
and
push
repnz
test
test
sbb
dec
clc
sti
lds
or
mov
cmpsb
movsl
lcall
pop
mov
addr16
sub
je
add
shrl
push
sub
shll
data16
pop
enter
movsl
loopne
jne
mov
ret
push
loop
mov
mov
ljmp
out
mov
pop
stc
fs
insb
pop
fiaddl
pop
mov
aaa
loop
std
sub
rcll
inc
jl
out
mov
das
and
gs
aad
ret
sub
pushf
outsl
test
add
dec
push
xchg
mov
dec
in
fwait
cwtl
mov
xchg
and
pushf
or
test
pop
loope
xlat
dec
inc
sbbl
jecxz
adc
in
int3
mov
jo
js
nop
imul
cwtl
xor
sbbb
outsl
xchg
dec
sub
sub
xchg
jae
popa
lret
mov
jae
dec
cmp
xor
cmpl
xchg
insb
fimull
adc
std
dec
push
mov
pop
pop
sti
shl
or
cmp
add
jp
push
lahf
inc
mov
andb
ss
in
lret
outsl
sbb
int3
test
and
in
es
mov
sbb
pop
cld
js
cltd
xchg
scas
rolb
adc
mov
cmp
sub
mov
outsl
imul
icebp
or
lcall
ja
pop
out
fdivrl
xchg
ds
ror
call
jno
lret
push
jae
cmpsb
adcl
test
push
orb
pop
daa
add
add
jb
scas
pop
push
push
push
or
lock
or
mov
lahf
jg
or
jge
imul
add
pusha
movsb
jbe
dec
rcr
outsb
jne
pop
leave
mov
popa
sub
and
cld
aas
sub
and
sub
les
sub
xchg
je
or
and
push
or
inc
sti
or
daa
mov
mov
aad
js
xor
add
mov
fs
jmp
mov
cmp
mov
xor
mov
mov
jae
jnp
shll
mov
adc
push
xchg
mov
push
lods
aaa
mov
fwait
cmpsb
mov
sahf
mov
out
testl
pop
jns
sahf
mov
xlat
pop
int3
jne
or
cmp
nop
xor
xorl
jmp
mov
lret
fwait
sbb
mov
sar
push
xchg
in
jecxz
cs
or
outsl
stos
push
cmp
jle
cli
lret
mov
jg
mov
scas
push
int3
subl
or
jl
cli
sti
jmp
mov
adc
dec
mov
cmc
jo
cmpsb
test
mov
daa
pop
mov
imull
xlat
negb
sbb
lods
pushf
leave
fisubs
std
dec
test
mov
lcall
ja
cmpsl
iret
js
in
test
sbb
movsl
gs
cmp
int
sub
fwait
test
adc
add
lret
pusha
rclb
adc
ja
xor
shlb
repz
movsb
enter
mov
dec
stos
push
dec
rcll
loope
jbe
and
pusha
fmul
cmp
jne
jo
mov
fidivrl
into
std
jb
mov
int
mov
aam
popf
jns
sub
adc
jge
mov
jae
dec
sbb
inc
ret
imul
pop
out
in
mov
mov
in
dec
pop
push
push
push
out
cmp
or
xor
test
and
or
xchg
aaa
bound
dec
push
push
inc
repz
xor
mov
cmp
cmp
push
pop
iretw
in
hlt
mov
xchg
sbb
push
stos
jae
adc
fstpt
aaa
push
push
mov
add
into
pusha
xchg
movsl
ljmp
nop
sbbb
out
push
ljmp
xchg
cmpsl
je
dec
bound
push
ret
rorb
in
movsb
pop
mov
roll
and
xor
pop
cmp
das
or
mov
add
mov
mov
mov
pop
dec
adc
out
sbb
sti
and
add
inc
mov
dec
leave
movsl
adcb
mov
das
mov
lahf
cld
cs
dec
mov
das
inc
mov
imul
dec
lea
jecxz
addb
aas
jmp
cli
scas
bound
and
sub
clc
addb
sbb
push
xchg
mov
je
sub
adcl
mov
iret
cmp
sahf
and
mov
add
xchg
fcmovnu
clc
sub
and
pusha
scas
repz
pop
xor
cmp
mov
push
lcall
pop
scas
fcoms
imul
pop
jnp
aaa
push
xchg
loopne
imul
jg
sub
sub
test
cmp
or
pop
notl
mov
pop
add
insl
xchg
push
sub
ror
mov
inc
nop
pop
sbb
xchg
push
scas
lahf
lcall
enter
js
es
jl
xchg
jl
popa
into
pushf
push
cmp
sub
stos
mov
xchg
and
xchg
push
mov
test
jecxz
sbb
mov
fs
gs
push
inc
xchg
cs
sbb
int
mov
int
loop
gs
inc
shrb
imul
xor
gs
cld
mov
jg
sub
xor
ret
lea
pop
xor
sub
cmp
pop
movsl
testb
dec
lret
int3
call
mov
or
icebp
ljmp
aad
inc
int
jns
repnz
xor
and
inc
sbb
xchg
xchg
arpl
sub
xchg
outsl
lret
and
inc
aam
ds
mov
adc
fsubs
leave
mov
add
mov
mov
add
push
push
add
and
flds
mov
test
inc
inc
push
int3
xor
das
movsb
and
inc
fcmovb
xchg
test
cmp
fsts
add
pop
stos
roll
js
in
dec
pop
outsl
rcl
sti
insb
out
stos
mov
dec
push
push
sar
fidivrs
inc
cmp
lahf
mov
rclb
stc
ja
sahf
test
fwait
lock
inc
jl
push
or
add
or
addr16
out
mov
movsl
out
cltd
mov
shlb
adc
test
mov
mov
jae
push
sbbl
add
jbe
pop
add
sbb
rcrl
mov
inc
push
outsb
pop
loop
bound
add
jle
fsub
mov
std
out
or
add
mov
dec
cmp
mov
mov
xor
mov
or
cmp
dec
cli
push
cmp
lock
sub
cmp
inc
loopne
push
pop
push
std
sub
jg
ja
repnz
and
daa
add
and
inc
push
mov
inc
repz
incb
mov
shll
imul
dec
cmp
into
sbb
outsl
xchg
lods
mov
in
cmpsb
es
xlat
cwtl
add
jl
sets
les
cmpsl
inc
pop
lret
shl
ljmp
push
inc
leave
in
cmpsb
sub
dec
mov
push
fidivrs
and
mov
jle
jle
add
dec
pop
pop
mov
push
lret
sub
jmp
lock
incb
push
sti
cmpsl
xlat
cli
lods
adc
in
push
lcall
packssdw
push
push
sbb
jb
mov
cli
test
inc
outsl
dec
or
mov
and
sti
pop
rorb
push
andb
cwtl
pop
nop
divl
sbb
sbb
es
mov
jmp
and
out
inc
mov
shl
xor
pop
repz
add
pop
mov
adc
and
pop
cmp
cmp
xchg
cmp
lods
or
xor
mov
push
dec
and
sbb
pop
mov
add
sub
xchg
aam
sub
jb
add
sti
xor
add
xor
fucomi
xor
push
fbld
adc
or
jbe
das
and
jae
in
fnstenv
mov
in
fwait
cmp
push
mov
std
and
adcl
nop
std
push
push
inc
ret
inc
xchg
lcall
iret
test
jmp
int
popa
add
pop
or
fwait
cmp
cmc
xchg
and
out
in
jbe
test
pop
xor
js
xor
mov
pushf
mov
inc
xor
fdivr
inc
inc
sbb
imul
jo
out
xor
iret
jno
mov
push
xor
xor
sub
mulb
cmpl
xchg
shr
pop
and
jge
lods
sub
testb
sbb
dec
mov
sbb
int
cmc
sbb
adc
mov
stos
movsb
lret
rcr
notb
sub
call
test
mov
inc
pop
cmc
jp
movsl
dec
push
fdivr
loop
inc
aad
test
mov
push
xchg
pop
ret
lods
mov
ljmp
out
add
pop
or
rolb
fwait
repnz
pop
cmpsl
outsl
ds
cwtl
sbb
inc
in
in
cmc
jne
js
push
push
sub
sub
cmpsb
aas
andl
loope
ds
icebp
es
mov
movsl
mov
mov
dec
out
cmp
adc
sub
iret
xchg
loopne
pushl
mov
repnz
adc
sbb
xchg
cmp
xchg
push
fists
rolb
aaa
jge
pop
scas
into
mov
xor
cmp
and
add
pop
or
pushf
gs
xor
jge
ljmp
in
adc
mov
aam
jne
mov
adc
mov
ds
xchg
or
bnd
pop
sub
or
cmp
scas
cmp
pushf
sub
aam
pop
cmp
dec
jmp
push
js
mov
mov
cli
pop
push
adc
inc
sti
mov
add
lock
or
movsl
rorl
push
dec
aaa
dec
add
or
sbb
mov
shlb
adc
sti
push
mov
sarb
xorb
jge
data16
imul
mov
lret
or
subb
outsb
mov
int3
js,pt
sub
pusha
mov
ljmp
lahf
sbb
mov
add
sbb
pushf
dec
xchg
icebp
fsubr
jnp
push
sbb
fcmovnu
out
in
or
inc
inc
jb
enter
fldl
and
jo,pt
fsubrs
mov
dec
jl
imul
sbb
cwtl
push
scas
jmp
or
into
mov
rcr
addr16
lret
movsl
out
mov
fcomp
sbb
es
fsubp
lret
cmp
fnstsw
jne
xchg
jae
movsb
or
mov
and
mov
or
xor
lahf
stc
ss
scas
cmp
rcr
add
ljmp
test
mov
pop
movsb
mov
xlat
cmp
std
mov
push
idivl
jns
jne
int3
jae
out
mov
inc
bound
sahf
jbe
loop
mov
mov
or
xor
ret
cmp
inc
cmc
jg
cmp
rcll
add
and
cmp
push
inc
js
and
das
pop
cli
cmpsb
in
ficompl
pop
cmp
mov
add
pop
and
fnsave
pop
aaa
push
mov
or
push
jns
pop
clc
ss
and
or
arpl
insl
addr16
ret
xchg
loop
lret
popf
sbb
fcmovnb
xor
dec
fadd
push
sub
cmp
and
mov
int3
mov
xchg
or
xchg
pop
lods
lock
lret
stos
jns
ss
lods
push
mov
outsl
lods
fistpl
and
mov
dec
mov
jb
fbld
mov
bound
xor
std
xchg
aam
fwait
push
lds
mov
out
pop
aaa
insl
out
sahf
shll
ja
sar
int
add
pop
inc
addb
adc
adc
mov
out
pop
sbb
rorb
or
mov
outsl
je
xlat
in
movb
or
push
mov
divb
and
jbe
xor
mov
adc
xlat
in
jmp
mov
push
cltd
pop
xlat
insb
add
mov
fdivs
test
mov
ret
dec
mov
add
cmp
lds
xor
sbb
sbb
hlt
and
and
in
inc
fisubl
jecxz
aaa
xor
add
push
mov
push
mov
push
negl
lods
mov
xchg
sbb
test
repnz
push
jo
call
jmp
cmpsb
out
mov
mov
add
rcr
or
jle
xchg
xor
pop
cmp
out
repnz
mov
push
sbb
ljmp
lret
lods
cmp
adc
dec
and
repnz
aas
sbb
nop
clc
cmp
in
adc
jmp
sub
lea
xor
push
leave
pusha
test
xor
cmp
ja
push
lods
lret
cmpl
lcall
dec
fs
sub
bnd
xor
or
push
repnz
xor
sub
outsb
sub
mov
movsb
std
mov
in
mov
data16
cmp
pop
jmp
sub
out
push
and
push
fisubl
outsl
push
jbe
adc
jo
fstl
or
or
mov
loopne
ljmp
scas
sbb
dec
dec
das
mov
inc
xchg
lods
out
test
imul
jns
test
test
fidivrl
in
xchg
or
jge
mov
loop
mov
cli
sub
out
popf
push
or
dec
add
int
mov
outsb
insl
inc
bound
adc
aam
into
ret
mov
shrl
pop
aad
mov
addr16
xchg
bnd
divl
clc
in
cltd
movb
cmp
push
rorl
int3
movsl
in
push
xor
xor
cmpsl
mov
sbbl
jmp
in
fiaddl
shrl
loop
sbb
add
xchg
imul
in
mov
pop
dec
fmuls
adc
mov
sbb
lds
push
lret
jp
dec
push
mov
pop
jae
sbb
sub
outsb
cltd
sub
mov
scas
lods
out
xor
dec
pop
es
xor
enter
jns
xchg
cmpsb
dec
push
adc
jnp
dec
add
add
mov
ret
adc
nop
clc
int3
les
cmp
insb
pop
cmpsl
mov
rcr
dec
add
sub
pop
adc
cmp
or
out
cmpxchg
xor
cli
mov
mov
jnp
pop
mov
sarl
sarb
mov
test
loope
mov
data16
dec
int
cmpsl
cmp
arpl
leave
in
add
dec
or
dec
test
xchg
cltd
cmp
nop
insl
nop
sbb
jbe
sub
scas
gs
jns
negl
mov
push
or
mov
and
sbb
in
mov
int
mov
prefetch
js
les
inc
inc
jmp
jl
inc
out
cmpsb
cld
lcall
push
stos
xor
gs
xchg
sbb
jae
jmp
lock
push
or
repnz
cwtl
add
push
fs
movsl
or
outsl
cmp
adc
pop
cmp
in
dec
loopne
mov
fistps
mov
mov
fists
xor
dec
andps
ja
mov
lods
inc
push
fbld
add
sti
cmpl
mov
cmpsb
sbb
fcmovne
out
pushf
sahf
sbbb
inc
fwait
sub
ret
dec
xchg
loopne
cmp
stc
popa
push
jne
sub
cmp
lods
in
push
outsb
mov
push
lcall
jge
sbb
adc
sti
adc
or
dec
mov
add
push
popf
subl
fs
push
or
gs
cmp
int3
push
shll
cli
push
fdiv
mov
test
xor
push
out
shll
das
aaa
fucomi
fnstcw
jae
jp
cmpsb
xchg
sahf
and
push
push
mov
ror
movsb
sub
lock
mov
xchg
jbe
xor
icebp
aas
std
fidivrs
sbb
add
mov
loop
xor
stos
xchg
aam
and
push
mov
pop
adc
lods
pop
adc
sbbl
and
enter
adc
enter
leave
stos
aaa
test
pushl
lea
xchg
lds
xlat
xor
push
mov
xchg
pop
fwait
mov
insl
sbb
bound
mov
xor
cs
cmp
aas
sub
inc
aas
bound
add
es
and
hlt
loop
xchg
aaa
lock
les
ds
movsb
popf
xchg
aam
add
jl
xchg
inc
jae
shl
pop
adc
dec
cmp
sti
and
jns
subl
dec
mov
fcomps
mov
decl
pop
mov
jbe
xor
aad
out
inc
fsubl
xchg
gs
lret
mov
inc
fmulp
mov
jns
popf
jecxz
sub
cmp
fwait
or
rorb
sub
xchg
mov
cltd
adc
hlt
repz
push
lret
testl
mov
mov
jnp
stos
push
dec
test
pop
mov
push
or
xchg
mov
jne
lods
push
adc
mov
inc
mov
scas
iret
jae
outsb
ljmp
aad
mov
xor
popa
pop
int3
aaa
xor
cmp
or
loope
jo
sub
cmp
mov
xor
jecxz
and
mov
movsb
xor
insb
or
frstpm(287
ds
pop
mov
push
divl
dec
movl
fwait
pop
dec
stos
pop
dec
in
inc
leave
pop
insb
inc
and
fs
xor
jp
sub
lds
add
add
mov
faddl
add
sbbl
dec
sub
pop
inc
sub
add
dec
xor
int3
xor
and
jb
ret
movsl
or
shlb
push
ret
inc
loope
inc
mov
jp
jae
inc
or
mov
cmp
mov
shrl
push
orb
dec
je
sahf
inc
and
pop
iret
sahf
stc
test
aad
inc
imul
outsb
inc
test
and
push
jne
int
mov
jle
sbb
xchg
inc
imulb
fisubl
mov
bound
add
aas
js
pop
pop
icebp
sbb
and
add
pop
mov
jns
imul
sbb
ss
aad
sub
jle
cltd
jno
jb
xchg
fiadds
cmc
mov
sbb
int3
int
imul
adc
xchg
je
or
icebp
jae
movsb
test
ret
lcall
mov
scas
push
add
push
mov
push
push
jmp
jl
sub
or
inc
inc
cltd
dec
jae
mov
loope
push
add
sbb
cmc
fs
mov
faddp
cmpsb
or
jae
mov
test
cmpsl
fcmovbe
nopl
or
in
into
lock
iret
outsl
xchg
sbb
dec
jmp
mov
js
ljmp
imul
and
lret
addb
or
and
test
cwtl
les
cld
jns
xor
dec
cwtl
push
popf
lods
add
jmp
mov
adc
test
pop
mov
cs
mov
roll
mov
push
inc
sbb
add
dec
popf
das
imul
out
lret
adc
ret
in
jmp
out
arpl
rep
cli
mov
nop
mov
clc
jo
xchg
and
movsb
mov
in
test
sbb
outsb
out
scas
push
mov
jle
pop
pop
pop
push
imul
add
addl
cmpsb
cli
jmp
in
push
cmp
lcall
orl
ljmp
sub
pop
enter
and
or
or
add
rorb
repnz
adc
scas
add
push
push
inc
int3
adc
int3
jg
or
xchg
or
mov
pop
sub
mov
in
push
push
inc
or
inc
mov
add
push
imulb
adc
mov
iret
ja
out
sbb
fbld
push
pop
inc
inc
or
jge
push
in
push
adc
in
add
push
mov
fwait
je
iret
ret
sahf
sbb
push
mov
das
icebp
cmp
adc
cli
push
sbb
ja
daa
jo
ss
ficoms
arpl
sti
mov
xchg
jmp
movsl
push
mov
lea
in
lret
push
ret
shr
cmp
xor
xchg
mov
idivb
movsl
rcrl
in
mov
mov
popf
push
mov
popf
out
fnsave
push
adc
xchg
jae
jle
sarl
dec
into
sub
in
test
cli
lahf
mov
scas
loope
out
mov
push
lea
mov
push
cld
push
add
sti
jmp
divl
loope
jge
leave
decl
lret
jp
fbstp
mov
inc
cmp
cltd
mov
fcmovbe
adc
cmc
lret
mov
xor
cmp
add
cmpsl
dec
pop
fcoml
add
pusha
gs
ss
adc
or
fidivrl
aaa
and
arpl
fs
cmp
shrl
add
cwtl
mov
ret
xchg
aad
test
mov
pop
xor
jl
xor
xor
test
mov
mov
std
sahf
aaa
jmp
pop
scas
pop
jp
mov
popf
inc
addr16
jae
mov
mov
fld
fdivrl
fneni(8087
sub
sub
adc
cmp
test
mov
cltd
push
movsl
loopne
inc
data16
xor
push
cmp
xchg
dec
xor
les
in
sahf
aam
pop
sub
sbb
jne
cli
sbb
in
jmp
pop
sub
and
dec
mov
movb
inc
inc
xchg
and
sbb
sbb
xchg
std
bound
add
mov
sbb
repnz
in
push
bound
or
add
and
add
inc
ret
or
jle
dec
add
and
inc
push
das
arpl
xor
test
enter
test
jmp
out
inc
pop
pop
pop
cli
mov
pop
inc
jmp
insb
cs
jecxz
jecxz
test
shrb
or
inc
ja
add
mov
sahf
scas
add
add
aam
push
mov
cmp
loopne
jns
push
inc
jns
call
stos
in
int3
cli
rolb
lahf
cmp
xor
shll
inc
adc
std
dec
shll
cwtl
add
xor
lahf
mov
inc
pop
sbb
or
dec
cli
repnz
xlat
mov
out
rcr
in
hlt
adcl
stc
mov
subb
inc
shll
lock
nop
cmpsb
lock
jl
jbe
out
mov
movsl
int3
cwtl
notb
pop
xlat
jnp
lret
imul
scas
or
push
movsb
stc
mov
xchg
test
int
mov
mov
movsl
cmp
mov
cwtl
xor
inc
insl
pushf
or
fprem
adcl
stc
sbb
lock
and
outsb
sarb
es
mov
fst
cli
dec
outsb
jge
test
ficomps
pop
jl
test
int3
push
mov
popf
and
idivb
in
enter
inc
ret
shl
stos
popf
xor
shl
mov
in
call
or
xor
iret
pusha
ror
sbb
adc
mov
bound
and
hlt
rolb
insb
rorl
pop
test
sub
lahf
xlat
mov
insl
ds
jbe
movzbl
in
insl
mov
pop
popf
sub
push
leave
sub
imul
andb
lahf
jecxz
and
jne
shlb
mov
call
fdivr
xchg
and
xor
ljmp
push
cmc
jae
sub
pop
je
dec
pop
adc
push
lret
in
xchg
mov
mov
clc
dec
push
push
xor
cmc
sbb
inc
adc
cmpsl
add
sub
mov
cli
sub
pop
iret
dec
in
ret
adc
shr
ss
jecxz
pop
arpl
adc
sbb
test
sub
fs
jle
data16
jmp
mov
nop
cli
add
push
cmp
dec
ret
mov
or
stos
jmp
mov
xchg
ret
mov
cltd
cs
movsl
inc
adc
vmovq
ja
push
cmp
rcr
adcl
out
lret
adcb
fidivrs
repz
jge
mov
daa
cli
mov
or
push
enter
or
outsl
lret
inc
lahf
dec
shlb
stc
mov
jl
inc
sahf
int
ja
push
insl
das
shlb
push
cmp
aaa
test
mov
push
leave
push
jbe
xchg
sub
jb
or
mov
dec
inc
sbb
imul
sub
lock
cmc
and
cmp
add
sbb
pop
pop
sahf
or
push
mov
les
stos
adc
mov
mov
and
stc
dec
push
fnsave
ret
sbb
fmuls
pop
jae
push
and
cmp
lar
mov
dec
fs
cli
or
cmp
pop
test
aas
test
lret
or
jb
repz
add
mov
sbb
icebp
xchg
sti
push
or
mov
outsl
stos
jb
jg
add
mov
push
and
out
mov
outsl
dec
xor
andl
decb
cld
orl
jne
sub
jae
sbb
add
data16
push
es
inc
fbld
int3
js
push
mov
lods
xorl
les
movsb
push
mov
sbb
mov
or
lea
fwait
sub
xor
iret
xchg
cmp
xor
dec
inc
sti
cmpsl
xchg
jecxz
xor
add
pop
fcompl
dec
outsl
clc
add
hlt
jb
xor
add
sub
sub
int3
lret
mov
iret
jno
jne
or
out
dec
xor
call
dec
add
loop
and
cmc
adc
push
jp
into
add
mov
or
arpl
js
mov
outsb
test
jl
inc
ret
dec
dec
insl
mov
movsl
sbb
cltd
aaa
inc
cmp
jecxz
iret
xor
mov
mov
stos
aaa
das
and
outsb
xor
xor
sbb
cmp
adc
rcll
xlat
adc
xchg
jge
out
orb
aam
test
xor
jle
add
mov
adc
jo
lock
fldt
cmpsl
add
fsts
mov
and
bound
gs
rep
pop
fucomi
sarb
gs
ss
inc
inc
popl
sbb
mov
xor
test
sub
adc
stos
add
xchg
out
imul
inc
mov
mov
ret
fucomi
mov
push
mov
jge
pop
jnp
xor
sub
iret
fists
xlat
jg
lahf
movsb
dec
mov
dec
ret
dec
mov
sub
add
cmp
daa
xchg
adc
fwait
mov
mov
sahf
push
out
mov
jecxz
test
test
xorb
stos
push
std
xchg
bound
andb
das
sbbb
push
push
lret
loop
adc
pop
stc
std
fnstcw
loopne
das
pop
insb
in
fcomps
fadds
and
add
sti
add
cmc
cmp
sbbb
mov
iret
popa
fistps
xor
arpl
aad
xor
pop
sub
xchg
sub
push
enter
xor
add
out
pop
mov
add
loopne
outsb
loop
cmp
sarl
sub
adc
or
and
fimuls
adc
jne
fstpt
ficoms
sbb
jl
insb
xor
push
in
xchg
icebp
pusha
outsb
call
fwait
test
ja
xor
jne
pushl
fists
cmpsb
cmpsl
lcall
xor
sbb
sub
ja
mov
cmp
stc
roll
pop
xchg
pop
lcall
dec
xor
out
or
insb
out
adc
mov
xor
dec
mov
cld
mov
ret
paddsw
pop
and
cmp
in
cld
out
add
or
dec
jno
jo
mov
shlb
stc
inc
adc
push
fcompl
leave
jns
xor
js
imul
ds
daa
adc
inc
fcoml
popa
es
icebp
fdiv
adc
jecxz
jae
lahf
aas
call
sbb
sbb
jge
out
sub
mov
dec
mov
and
mov
sti
es
lea
rcl
jp
mov
insl
xor
push
xchg
pop
jnp
mov
test
push
jl
adc
mov
xchg
xchg
popa
push
sub
jmp
test
and
bound
mov
clc
adc
cli
pop
jb
mov
pop
jp
jnp
push
test
fidivl
jb
jo
rol
pop
dec
lock
out
push
addr16
sub
fcomps
pusha
fists
mov
in
roll
mull
insb
shlb
aad
call
sub
sahf
adcl
jo
push
sbb
sbb
add
out
lods
inc
nop
sub
es
lods
nop
lods
iret
jae
xor
mov
je
call
mov
mov
loopne
jl
jle
xchg
pop
dec
insb
mov
arpl
loopne
int3
jno
jg
sub
rclb
pop
stos
mov
stc
bound
arpl
leave
arpl
jbe
sbb
pop
inc
pop
add
outsb
cmp
into
jne
mov
int
cmp
adc
lock
mov
mov
setae
or
dec
push
je
data16
scas
dec
sbb
inc
adcb
add
outsb
lock
add
dec
stos
push
sahf
lahf
call
pushaw
mov
gs
enter
cmp
cmp
mov
inc
hlt
mov
xchg
xchg
jns
leave
mov
aam
mov
jle
lock
add
push
push
int
mov
push
ret
jl
adc
pop
ret
sti
inc
mov
stos
ljmp
xchg
rolb
pop
bnd
mov
andl
mov
push
aam
pop
sbb
mov
daa
adc
inc
push
das
sti
es
addl
in
or
mov
scas
mov
pop
sbbl
or
mov
ret
scas
sti
xor
adc
jbe
mov
jno
test
addr16
adc
sbb
movsb
cmp
inc
push
and
fidivl
push
pop
out
cmp
pop
mov
ljmp
inc
and
dec
sbb
xchg
imul
insb
cld
cmp
repz
fnstsw
stos
xchg
je
in
pop
ret
mov
adc
xchg
ss
sub
mov
sbb
jae
add
mov
adc
imul
pop
push
or
fdivrs
icebp
push
adc
movsb
mov
pop
lock
test
mov
dec
or
mov
push
stc
std
adc
iret
mov
imul
add
ss
dec
in
xor
jo
lock
xor
stos
lea
adc
mov
fistl
insl
jne
imul
jmp
pop
pushf
mov
jmp
das
lret
leave
pusha
js
mov
mov
adc
stos
cmpsb
std
or
sbb
push
ds
and
subb
lahf
xchg
cmp
fbld
cmpb
pop
xor
mov
push
imul
and
mov
adc
mov
mov
fcomps
mov
push
lods
test
ret
out
daa
and
movsb
mov
push
cs
xchg
mov
or
bound
push
test
mov
pop
test
inc
add
dec
nop
insb
popf
xchg
adc
test
ret
inc
dec
push
jp
xlat
jecxz
test
orb
mov
fs
mov
lds
cld
xchg
xlat
sahf
les
cmpsl
dec
int3
pop
mov
mov
arpl
push
daa
xor
pop
int3
adc
inc
jnp
js
mov
cld
or
in
cmp
fsubp
ljmp
jge
pop
call
pop
fbld
popa
mov
push
les
jo
fwait
mov
subb
shll
fstpt
call
fbstp
or
loopne
pushl
pop
sahf
lods
xchg
lahf
or
popa
ss
das
ficomps
sbb
repz
aam
push
leave
xor
out
out
jp
adc
mov
jmp
out
add
call
jo
iret
xlat
das
push
lods
dec
stos
pop
js
jo
pop
scas
inc
lea
xlat
inc
mov
cmpl
pop
mov
mov
dec
ss
add
cmp
imulb
sbb
push
test
lods
loop
subb
pop
cmpsl
lcall
mov
daa
pusha
inc
sub
xchg
in
std
add
testb
cmpsl
dec
stc
jg
add
addr16
mov
andnps
mov
fwait
js
ljmp
mov
sub
sti
dec
insb
adc
pop
pop
clc
dec
mov
lcall
outsl
iret
addr16
imul
sbb
clc
lods
xchg
cmp
clc
jp
je
mov
cmp
or
push
push
sbbb
xchg
mov
xor
xchg
fucomi
adc
aad
mov
ret
imul
sub
mov
lea
push
dec
pop
push
sbb
rol
lahf
bound
loope
rcrb
outsl
into
outsb
clc
repnz
iret
or
jne
popf
jg
adc
lcall
jno
sbb
xlat
jp
inc
mov
adc
imul
or
lahf
xor
or
test
lods
xor
roll
jne
leave
lods
ror
mov
loope
pop
push
pop
jnp
mov
shrb
mov
cmpsb
add
pop
mov
xchg
jne
pop
mov
sub
xchg
mov
or
push
mov
aam
adc
test
in
mov
test
xor
clc
test
sbb
jp
rcrb
xchg
hlt
mov
in
lods
mov
adc
mov
pushf
lret
filds
das
mov
mov
sbb
mov
outsb
shl
lret
and
sbb
lcall
pusha
lock
xchg
aad
xor
sub
sbb
sbbl
subl
and
jne
inc
xchg
sub
stc
push
mov
jp
pushf
sub
fdivs
rcl
push
mov
fbstp
int
dec
aad
xchg
call
adc
xchg
pop
decl
sbb
push
cmp
mov
dec
test
dec
lret
xchg
xlat
push
cmp
sbb
pop
subl
mov
lret
imul
loopne
adc
pop
lret
dec
and
jbe
lock
push
pop
pop
out
push
pop
call
mov
fcmovne
out
xor
cmp
or
inc
sarl
adc
loope
scas
popf
movsl
shr
sbb
mov
or
popf
or
ror
dec
jnp
push
daa
sub
push
xchg
movsb
ja
mov
or
xor
mov
clc
sbb
pop
fnstenv
fistpl
cmpb
jmp
orl
inc
pop
fisubl
jp
cld
push
orb
inc
sbb
xchg
and
xor
pop
sahf
loop
push
mov
or
stc
dec
in
sub
insb
movsl
mov
sbb
lcall
push
xchg
fucom
lock
pop
ds
je
adc
sub
enter
shll
pop
out
ret
sahf
out
test
in
push
push
dec
and
fsubs
scas
mov
jg
bound
mov
fsubrl
lret
sarl
add
mov
ret
push
jbe
scas
push
addr16
pushf
aas
pop
push
xchg
std
lret
jo
ret
push
lds
jne
mov
mov
dec
lahf
adc
lcall
and
out
les
js
push
mov
add
pop
jns
and
dec
or
mov
jg
lret
lods
adc
ljmp
mov
sbb
mov
out
sbb
fsubs
mov
xchg
sbb
imul
mov
push
loopne
pop
pop
test
insl
mov
sub
push
and
dec
pop
popa
lock
mov
mov
in
pop
mov
dec
inc
ljmp
loop
push
int3
or
mov
movsl
out
add
out
push
mov
je
adc
xchg
mov
fisubrs
mov
pop
cmp
inc
cmp
pop
jecxz
imul
dec
xor
lcall
movsb
aad
add
adc
iret
and
lcall
push
xor
lds
add
and
imul
shr
jo
adc
xchg
jne
cmp
mov
adc
dec
push
xchg
enter
shlb
gs
sbb
nop
mov
adc
scas
arpl
cmp
je
push
sub
insb
bound
xchg
js
sbbb
or
das
jae
cmp
icebp
and
mov
xor
inc
iret
in
test
pop
inc
sti
adc
inc
ret
push
aas
movsb
and
add
loopne
aas
or
lea
push
mov
xorl
xchg
and
inc
xchg
push
cld
imul
jno
clc
pop
lret
addl
out
lock
inc
das
es
xor
aas
inc
push
lcall
xchg
inc
or
outsb
sti
jns
sahf
test
or
outsb
pop
rolb
sbbb
pop
dec
add
rorl
jns
mov
outsl
sub
inc
stos
jo
jge
adcb
cmp
dec
sti
lods
hlt
hlt
add
fwait
dec
cltd
cli
dec
pushl
push
push
jp
iret
in
ljmp
or
xorb
jge
or
push
mov
pushl
aaa
lcall
push
or
inc
and
mov
les
jae
and
rolb
out
and
dec
shll
sbbl
dec
fs
and
pop
pop
pop
jb
jge
mov
push
push
lods
or
ds
pop
fcomp
in
lahf
loope
insl
ja
pop
inc
frstor
mov
cld
int3
pop
or
adc
xchg
arpl
push
and
mov
push
fdivrl
jno
xchg
mov
or
dec
inc
jnp
xor
push
mov
fists
pop
cmp
ss
cmp
push
pop
adc
mov
pop
or
mov
or
mov
scas
mov
pop
pop
adc
add
mov
sbb
jnp
movsl
pop
cltd
sub
nop
pop
cmp
test
adc
inc
pop
dec
inc
inc
popa
scas
pop
push
mov
or
loope
and
push
je
out
mov
cltd
sbb
inc
adc
dec
cmp
mov
mov
test
jmp
repz
sbb
jge
mov
out
mov
xchg
ljmp
arpl
xor
sub
and
clc
xchg
jmp
adc
stos
std
sbb
in
cli
fldenv
stos
pop
push
addr16
mov
xor
sarl
mov
repz
sti
repz
repnz
adc
xchg
mov
jne
pop
stc
je
leave
mov
cmovns
xchg
or
push
in
mov
cmp
mov
lret
sbb
pop
and
pop
sub
movsb
cmc
loopne
in
sbb
outsb
cmpsb
imul
and
cmp
int3
and
stos
push
test
stos
pop
inc
inc
jmp
loop
push
lods
inc
test
mov
push
dec
cli
xchg
and
aas
shlb
and
pop
int
jge
scas
mov
test
mov
xor
movsl
lods
xchg
push
mov
adc
push
addr16
push
xchg
mov
xor
mov
sti
mov
xchg
arpl
lock
insb
scas
mov
pop
push
pop
gs
int3
movsb
cltd
inc
pop
inc
dec
cs
test
les
ja,pt
cmp
jmp
inc
xor
pop
sbb
lahf
lea
xchg
cmpsl
pop
sub
cwtl
shll
rclb
lahf
icebp
icebp
mov
push
mov
mov
addr16
inc
cmp
pop
ja
jl
and
xchg
pop
push
cwtl
icebp
mov
cwtl
xor
fucomip
xchg
repz
mov
mov
adc
mov
cmp
jne
movsb
cld
pop
bound
roll
push
cli
fimull
subps
pop
pop
shl
sbb
outsl
or
pop
hlt
imul
faddl
and
push
cld
dec
ss
lahf
add
push
das
out
mov
sub
iret
mov
popa
mov
scas
xor
add
push
bound
jb
inc
adc
movsl
inc
sarb
mov
psllq
dec
movl
sub
jle
push
out
pop
shll
and
daa
xchg
mov
test
xlat
arpl
mov
pushf
push
lods
pushl
adc
out
push
aaa
sub
jg
clc
aam
mov
push
push
sbb
jb
rol
fiaddl
xor
pop
icebp
adc
imul
sbb
xchg
adc
jecxz
mov
mov
jp
inc
pop
xor
sbb
push
pop
pop
std
cld
push
iret
in
xor
iret
test
ret
popa
rcll
cs
inc
xchg
mov
out
push
or
mov
xchg
popa
sbb
sbb
outsl
mov
js
jns
mov
sbb
cltd
je
into
fwait
or
rcrl
jl
mov
mov
scas
xorb
stos
mov
xchg
cmp
xor
push
shr
push
sub
stos
pop
cs
lret
push
sbb
cmp
inc
cmc
les
addr16
jno
fmuls
mov
cmp
out
jo
stos
stos
cli
lods
push
pop
bound
outsb
stos
sbbl
cmpsl
sbb
add
cmp
inc
es
or
fldlg2
and
icebp
repnz
mov
lds
ds
push
add
cmp
xchg
pusha
les
xchg
rol
adc
push
fwait
stc
adc
sbb
fwait
xchg
and
lahf
xchg
leave
fisubl
shl
mov
or
mov
outsb
cmp
daa
xchg
pop
push
ds
sahf
inc
and
lret
xor
or
push
mov
cmc
sti
jle
sti
mov
sbbl
mov
cmpsl
push
xchg
cmc
orb
inc
dec
sub
and
mov
dec
shlb
imul
sub
jb,pn
test
xlat
nopl
xor
pop
mov
out
jae
arpl
ja
mov
add
xor
xor
lds
add
movsl
outsl
sahf
sbb
nop
mov
mov
mov
rcrb
xchg
jnp
insl
inc
jbe
jne
xchg
sub
shrb
jnp
add
sub
pop
ljmp
addr16
outsl
dec
arpl
mov
jns
push
faddl
ret
or
mov
call
mov
dec
scas
cmc
dec
bnd
or
mov
test
push
pop
add
xchg
dec
in
nop
leave
add
addr16
lret
aaa
sbb
fildl
notl
fldcw
loopne
das
xchg
shrb
dec
test
inc
test
jg
mov
and
mov
test
ljmp
test
jae
pop
lret
les
mov
out
stos
add
push
sbb
or
fdivrl
fs
jmp
outsl
cmp
mov
sub
inc
loop
stc
ret
xchg
negb
dec
loop
mov
or
lods
cld
xor
cltd
add
insl
mov
xor
pop
mov
les
divb
movsl
insl
cli
and
xchg
in
dec
jl
iret
or
ret
nop
insl
aas
or
out
mov
ftst
stos
jo
jg
mov
cmpsb
adc
fsubrs
jg
sub
out
shlb
movsb
shlb
nop
cmpsl
jmp
sbb
push
mov
lods
cli
fisubrl
lahf
sub
popf
scas
xchg
test
add
out
push
or
mov
fidivs
adc
jmp
mov
cwtl
stc
pop
fidivrs
iret
mov
sbb
or
nop
stc
inc
cmp
inc
jnp
xchg
iret
leave
jns
push
sub
xor
movl
mov
inc
out
mov
cltd
sub
push
xor
inc
cmp
rcl
add
xor
xorb
xchg
pop
inc
push
cmpsl
add
lods
scas
dec
inc
inc
pop
enter
jmp
sbb
pushl
sub
mov
jne
xchg
lahf
lahf
test
and
sub
je
out
fs
adc
inc
stos
jg
pop
out
movb
stos
enter
jns
mov
sub
ja
or
out
repnz
outsb
sub
inc
inc
jmp
pop
mov
mov
sarl
push
ds
insb
push
push
cltd
dec
std
mov
or
dec
jne
test
inc
lods
sbb
push
out
xor
leave
dec
mov
lea
mov
sub
je
mov
test
push
mov
sub
nop
aas
pop
cmpsb
lods
xor
or
cmp
fisttps
imul
stos
shr
and
pop
sbb
loopne
loope
dec
push
or
test
int
cs
mov
ret
jp
je
int
std
add
jg
adc
push
push
ror
jge
or
fwait
cmpsb
pop
mov
inc
mov
adc
inc
pop
stos
repz
addb
pop
and
cmpb
test
inc
out
adc
sbb
pushf
mov
nop
xlat
mov
in
adc
pop
aam
mov
test
add
add
and
jl
jns
sub
loop
aad
dec
inc
sbb
int3
test
addr16
and
out
andb
mov
sub
mov
mov
sbb
movsl
cmpsb
mov
cwtl
icebp
push
mov
cltd
clc
icebp
in
lock
cltd
pop
test
loop
mov
push
ljmp
nop
xchg
jl
adc
lock
xchg
ror
cmp
add
fnstcw
sub
push
jle
mov
fwait
imul
jg
mov
out
jnp
xlat
lret
inc
lods
xchg
les
aam
std
xor
or
cmp
and
loopne
or
pop
gs
fdivs
push
lods
in
mov
nop
xchg
je
mov
adc
scas
jl
sahf
js
mov
and
mov
cwtl
bnd
push
rclb
adc
pop
jne
jl
xchg
mov
xchg
or
sub
sti
rol
inc
jmp
inc
mov
inc
jmp
int
dec
mov
cmp
push
shlb
fldt
cmp
push
adcb
inc
inc
push
and
stos
push
dec
jge
ss
stc
aam
sub
bound
or
loopne
insl
adc
jg
sbb
ror
push
inc
jnp
scas
cmpsl
fcoml
mulb
pop
adc
inc
cmp
in
or
jae
in
fists
inc
mov
je
pusha
outsl
mov
mov
out
cwtl
call
mov
mov
roll
movsl
gs
jp
cmc
mov
loop
pop
fcoml
cmp
cli
and
or
shll
shrl
jo
mov
stc
clc
add
mov
cmp
loop
jns
xlat
mov
jbe
sub
in
mov
dec
adc
push
popa
jno
ret
jge
pop
pop
jns
adc
loope
mov
push
leave
mov
adc
stos
lahf
inc
sub
mov
push
or
sbb
sub
adc
data16
mov
das
sahf
inc
and
aam
fsubrl
push
sbb
dec
jns
fsubrs
mov
sahf
push
xchg
sub
fs
adc
pushf
scas
mov
fucom
lea
popf
jno
jae
cmp
test
dec
jecxz
sbbb
xchg
sub
adc
mov
pop
jnp
fcoml
jns
ljmp
cmp
mov
test
std
pop
mov
add
fs
iret
sub
jle
inc
jmp
pop
xor
jl
inc
mov
xor
cltd
repnz
sbb
adc
fistpll
xchg
std
jbe
int3
rcrb
dec
mov
jbe
popa
mov
push
roll
lret
das
and
pop
int
loope
das
aad
pop
cmpsl
popf
add
leave
dec
out
push
push
fisubs
push
lret
or
xchg
cmp
inc
xchg
sub
enter
jmp
pop
mov
fdivs
sub
pop
mov
bound
jne
xor
scas
dec
xchg
lahf
sbb
int3
stc
xor
jmp
adc
repz
sbb
inc
xor
mov
pushl
sub
cli
pop
fldcw
stos
mov
mov
pop
or
movsl
sub
loope
stos
xor
rclb
pop
mov
sti
sub
rcrl
dec
mov
sahf
xchg
clc
and
fidivrs
les
inc
scas
and
adc
jecxz
out
dec
test
adc
std
in
cmp
loop
sub
cmpsl
mov
aas
push
mov
sub
push
sbb
sbb
cmp
xchg
imul
out
jecxz
out
addl
out
mov
mov
jo
mov
insb
mov
test
aas
pop
clc
mov
fcoml
pop
test
jno
inc
subb
push
ss
xchg
outsl
mov
cmc
fwait
imul
cmpsl
shlb
push
loop
mov
mov
std
jle
xchg
dec
mov
popf
nop
jmpw
pusha
cmp
sbb
or
sbb
dec
rcll
inc
rcrb
jb
pop
jno
jae
dec
push
lods
push
mov
push
outsl
and
sbb
sti
jbe
leave
mov
int
sbbl
sti
fnstsw
sbb
cli
jecxz
adc
inc
imul
jnp
add
adc
add
pusha
jnp
ljmp
mov
sbb
dec
f2xm1
jg
lock
push
gs
inc
mull
ret
cmp
cmp
das
adc
mov
repz
unpckhps
adc
popa
sub
dec
cmpsb
lea
or
jmp
scas
outsb
cmp
es
xor
sbb
mov
les
cmpl
jecxz
insb
sbb
mov
int
mov
aad
adc
push
inc
push
repz
fimuls
out
out
ret
ljmp
mov
dec
pop
jl
jmp
mov
push
ds
dec
fstsw
loope
mov
mov
fistl
mov
movl
add
jns
stos
in
in
ss
rcl
pop
push
mov
cmp
ja
js
xor
call
pop
adc
fisttps
call
cmp
and
scas
push
ret
les
sub
fs
jle
or
lods
or
jbe
lods
adc
sti
inc
aad
and
mov
mov
call
mov
shll
pop
lret
rcll
xchg
push
data16
test
sub
push
push
loop
jbe
pop
out
aaa
pop
lds
cmp
fbstp
mov
dec
mov
inc
mov
sub
outsb
testb
adc
lds
std
push
ja
js
lock
and
jne
fildll
cmp
mov
mov
cmp
mov
mov
and
fwait
mov
xor
stos
mov
push
sub
xchg
in
xchg
jbe
or
xchg
ss
sub
mov
fistpll
ds
push
cmovs
cmpl
mov
and
cmp
inc
jge
pushf
popa
inc
ret
es
sarb
fmul
or
stc
cmp
jmp
jno
pop
jle
xchg
add
mov
popf
mov
jnp
imul
stc
xor
movsl
cli
jne
lcall
sub
lds
pop
clc
add
adc
push
add
pusha
lds
push
mov
aam
cmp
xor
sbb
mov
mov
sbb
cmp
mov
fwait
add
push
inc
ret
jno
sbb
jne
adc
sub
push
cmp
push
mov
mov
xchg
sub
fmul
repz
sbb
imul
sbb
lock
or
fwait
sbb
push
dec
ss
jae
cmpsb
outsb
les
cwtl
mov
mov
lea
stos
jge
or
inc
pop
adc
sbb
loope
lock
orl
test
jae
and
cmc
fdiv
pusha
mov
out
and
jle
imul
in
inc
pop
mov
dec
adc
xor
dec
or
aam
jmp
lock
push
sahf
sub
idiv
mov
insl
je
in
xlat
roll
sub
push
es
arpl
arpl
dec
sub
nop
das
jnp
cmpsb
movsb
push
fldcw
scas
movsb
dec
mov
pop
or
fimuls
xlat
loope
daa
aas
insb
popf
mov
addb
stos
push
stos
pop
jp
mov
or
mov
add
js
movsb
in
cmp
sub
cltd
sub
out
push
scas
sbb
mov
call
insl
mov
push
nop
mov
or
out
std
and
jo
rcr
call
lods
xor
pop
or
shll
dec
js
jl
xchg
mov
xor
aaa
mov
xchg
fwait
mov
sahf
pop
mov
xchg
jno
mov
jmpw
ret
mov
sub
fisttps
aad
aam
jo
call
cmp
sub
jmp
push
mov
mov
pop
cltd
mov
hlt
out
jo
popa
ljmp
aaa
mov
sbb
add
cmc
ret
xchg
mov
xor
ds
adc
lods
je
aam
imul
adc
ret
into
xor
xchg
mov
push
ljmp
daa
jl
std
mov
jp
xor
jo
in
aam
in
ds
jg
push
js
sbb
neg
test
cltd
mov
jnp
push
movl
sub
jns
insl
rolb
ss
insl
icebp
add
and
jae
pop
imulb
lds
cli
aaa
mov
mov
inc
or
xor
out
lret
scas
cmp
aas
cli
mov
adc
xor
mov
mov
dec
jmp
mov
add
das
addr16
and
aaa
sbb
and
stos
xchg
lock
jge
gs
in
test
aaa
fnstenv
mov
lea
cmp
out
push
cmpsb
pop
jb
dec
lea
aam
arpl
ret
cmp
das
push
cmc
sbb
sbb
ret
inc
aad
aaa
pop
sarl
insb
lea
out
fildl
lock
adc
stc
add
jne
push
push
addb
cmp
mov
into
inc
adc
or
rol
mov
cld
scas
test
sbb
inc
jne
sbb
mov
xchg
push
push
sbb
pop
sub
push
add
xorl
scas
test
aam
adc
adc
scas
les
jae
mov
repz
sbbb
in
in
xorl
cmp
add
dec
xor
frstor
repz
xchg
mov
das
sub
jle
cmp
jnp
out
push
imul
xchg
jp
lret
sub
or
jne
sub
insl
jecxz
lods
rolb
cmp
mov
mov
mov
mov
dec
decl
in
shrb
cmp
lock
push
mov
sub
iret
stos
test
jmp
aad
imul
cwtl
sub
les
xchg
cltd
lock
mov
lds
jmp
cmpsb
insl
shl
adc
xor
adc
xchg
or
adc
dec
in
gs
pop
das
out
and
xchg
jp
jno
mov
adc
or
mov
mov
ret
arpl
xor
xchg
cs
and
add
loopne
mov
in
xchg
leave
mov
ljmp
movsl
jo
lret
pop
dec
pushf
xchg
mov
stc
pop
iret
pop
push
add
lret
es
adc
jmp
sbb
mov
xor
outsb
pop
loopne
pop
in
outsb
push
push
jb
stos
xchg
sub
arpl
cmp
gs
inc
pushl
cmpsl
dec
adc
cmc
dec
sbb
bound
outsb
pusha
dec
jle
stc
mov
pop
shlb
ss
mov
fiaddl
insb
rolb
data16
push
es
loop
lahf
test
fs
daa
cli
mov
mov
or
data16
cmp
jecxz
jb
inc
cmp
addr16
mov
mov
sbb
mov
das
insl
pop
out
lcall
ret
sbb
lods
xor
shll
lods
call
mov
add
rcr
xchg
lcall
push
pop
outsb
sar
scas
or
fdivrl
sbb
ret
inc
push
divl
xor
jne
iret
sub
loope
mov
ds
pop
lock
and
sbb
pop
sbb
cld
mov
inc
test
mov
sub
sbb
fistpl
sub
rcl
pop
push
mov
jmp
cld
out
sub
sar
sahf
je
das
stos
push
dec
call
dec
sahf
jmp
sub
movsb
push
je
cltd
and
push
gs
mov
imul
mov
or
mov
xchg
push
jg
inc
cmc
mov
out
pusha
lods
aas
outsl
hlt
add
fs
aas
hlt
mov
sbb
subl
add
dec
add
pop
cmp
xchg
cwtl
dec
cli
inc
mov
add
pusha
stos
inc
dec
pusha
push
and
push
out
mov
hlt
mov
mov
mov
je
jne
xchg
xor
lret
popa
scas
xchg
xlat
cmp
rclb
sbb
push
xchg
sub
mov
out
add
in
imul
lea
mov
fdivrl
fistl
mov
inc
repz
pop
or
sbb
les
daa
mov
xor
pop
jg
push
mov
add
add
insb
loopne
out
enter
addr16
push
imul
in
adc
add
mov
ljmp
xchg
jne
fwait
roll
xchg
inc
push
cs
sub
movsb
call
push
data16
test
mov
lret
mov
enter
xchg
cmp
adc
adc
lcall
xchg
jb
lret
jb
outsl
in
dec
rcrl
aad
rorl
jbe
loopne
mov
in
fnstenv
jge
cltd
imull
fists
cmp
add
aaa
mov
fdivrp
mov
xor
sub
pop
aas
inc
sahf
add
fidivl
sar
xchg
bound
clc
ret
int3
cwtl
inc
nop
aas
jmp
mov
call
and
fadd
fisttpl
add
or
mov
lea
mov
nop
cmp
xchg
stos
divb
sub
cld
add
push
sub
push
inc
std
cmc
push
fidivrl
xchg
sbb
jno
sbb
add
push
mov
mov
xor
mov
pusha
pop
mov
cmpsl
loop
mov
inc
push
push
loop
cmp
adcl
sub
inc
cmp
dec
mov
jbe
aaa
arpl
push
or
push
test
rclb
mov
lods
insb
mov
jo
or
clc
sub
mov
nop
addb
enter
imul
push
ss
sub
dec
cli
mov
pop
in
inc
jl
lods
push
cs
mov
test
lahf
and
nop
pop
addb
mov
or
ffreep
arpl
ss
mov
shrl
lret
xchg
leave
test
xor
testl
xchg
inc
sbb
fstl
mov
or
int
lods
int3
in
mov
imul
sbb
insb
ret
cli
add
xor
mov
pop
ret
lcall
pop
sub
ficomps
pushf
pop
push
and
ds
lock
es
push
add
pusha
or
js
xchg
movsb
cmp
out
lahf
fidivrs
int
clc
mov
pop
jmp
arpl
jns
push
xchg
pop
cmp
xchg
movsb
out
mov
dec
fmuls
test
bound
rcll
jo
adc
mov
xchg
je
ret
orb
test
sub
or
cmpsb
inc
jno
push
popa
rol
jle
and
fdivp
xlat
mov
stos
xor
push
hlt
pop
aad
testl
fadds
fsubrl
fcompl
xlat
and
dec
out
out
jns
ret
sub
enter
inc
fidivrl
in
sub
punpckhdq
pop
jmp
mov
jge
pop
jno
out
jl
dec
push
jmp
fiaddl
jo
mov
sbbl
push
mov
add
test
pop
cmp
jo
xchg
roll
push
push
sbb
scas
and
fnstsw
mov
push
xchg
not
dec
addl
lret
imul
sub
cmp
sbb
pushf
push
push
lret
out
or
add
imul
mov
out
sbb
scas
aam
add
jmp
mov
cs
ds
adc
mov
imul
out
push
test
arpl
inc
xchg
repnz
jb
nop
mov
jge
popa
pop
scas
cmp
insb
push
outsl
push
mov
loopne
mov
outsb
shll
add
push
and
movsb
cmpsl
fs
sub
pop
adc
testb
ljmp
or
fistpll
sub
in
nop
adc
jb
dec
mov
sti
inc
cmpsb
mov
pop
call
rclb
add
pop
jns
lret
je
mov
fsts
arpl
jg
inc
mov
out
xor
sti
adc
pop
les
ret
push
mov
xor
add
ret
mov
and
cmp
jg
xchg
inc
lea
into
insb
gs
jecxz
xor
and
mov
inc
ja
jp
jae
movb
int3
push
mov
stc
pop
sub
dec
mov
and
lock
sbb
lock
shll
pop
pop
jne
adc
xchg
cmp
cwtl
pop
push
mov
icebp
cmp
repnz
rorl
mov
xor
push
sbb
xchg
pop
fbstp
mov
fmul
rcl
je
inc
mov
ss
pop
pop
andb
mov
mov
sbb
jo
push
stos
jg
sti
xchg
sub
pop
mov
xlat
push
pop
lea
fldt
and
sbb
xchg
cmpsl
push
fs
aad
das
test
inc
lock
lcall
hlt
push
popa
shlb
and
fistpll
xchg
dec
repz
xchg
and
mov
cli
fwait
mov
lock
fxch
fld
xor
out
mov
das
enter
sub
fwait
mov
push
das
xor
sbb
cmpsb
jo
inc
sbb
inc
push
ret
and
xchg
mov
fmull
adc
aam
scas
sbb
pop
pop
rcr
add
xchg
dec
icebp
clc
inc
shll
cmpsb
add
ja
cmpsl
movsl
std
or
dec
std
mov
xchg
mov
or
adc
add
fdivrl
push
fnsave
and
xchg
adc
repz
out
popa
fscale
mov
and
stos
lea
jmp
ljmp
pop
sub
xchg
das
pop
jns
ljmp
add
inc
imul
lretw
mov
enter
add
imulb
aas
mov
lea
push
imul
test
cmp
lods
push
xlat
jecxz
sub
sbb
bound
daa
add
inc
out
jecxz
xchg
fbld
pandn
mov
fsubs
sbb
cmp
daa
neg
icebp
lret
mov
push
leave
loope
cmpsb
dec
push
dec
aaa
xor
dec
jne
in
test
dec
pushl
push
stos
popa
lahf
mov
lds
pop
xchg
es
pop
dec
adc
sbb
pop
add
popa
loope
xlat
cli
mov
xor
stc
pop
xorl
js
pop
imul
mov
stc
dec
lcall
xor
lods
std
lcall
jp
in
push
loop
add
mov
jno
imul
mov
cmpsl
lds
mov
mov
divl
rorb
jecxz
xor
push
jle
sbb
sbb
sbb
xor
or
mov
ss
sub
and
xchg
subb
adc
push
fcmovbe
and
push
clc
test
stos
lret
lods
pop
jp
test
add
iret
rcll
or
jl
or
mov
jle
or
dec
mov
fidivrs
xor
sbb
loop
pop
mov
rolb
or
pop
cmp
stos
mov
test
lret
sub
out
js
or
test
loop
insl
mov
mov
and
nop
js
cmpsb
arpl
inc
push
sahf
fmuls
mov
pop
and
and
mov
pop
lock
xlat
fstp
sti
icebp
popa
fwait
dec
push
orl
cmp
sbb
cmp
push
inc
dec
sbb
popf
cmc
inc
mov
xchg
out
add
or
sub
cld
cld
ja
addr16
push
in
into
xor
data16
popa
mov
test
and
mov
rcl
inc
pop
imul
and
addr16
sub
test
push
cld
xchg
lea
mov
add
fcom
push
testb
push
mov
or
inc
fs
std
and
add
leave
fs
xor
xchg
mov
fsubl
test
dec
into
enter
aam
cmp
arpl
daa
cmpsb
lea
fcomi
clc
std
and
test
iret
pop
outsl
jmp
inc
inc
popf
cmp
or
push
movsl
cmp
rcrb
orl
outsb
pop
movsl
mov
mov
fdivs
test
xor
mov
lahf
mov
sbb
cmovae
outsl
outsl
jne
int3
mov
sbb
and
add
nop
call
clc
mov
std
dec
push
leave
and
lret
sti
jmp
addr16
sbb
mov
hlt
jno
fadd
imul
mov
dec
mov
jle
popa
mov
data16
push
lahf
lock
daa
jecxz
sbb
sbb
cmp
add
int3
in
sub
jno
xor
loopne
inc
jecxz
mov
cmp
scas
xchg
pop
mov
xor
popf
mov
insb
sub
scas
push
push
lea
pop
jno
leave
enter
dec
adc
sahf
pop
jmp
sbb
loopne
jo
cs
cmpsb
addr16
and
and
dec
std
jno
xor
insb
gs
icebp
adcl
call
stos
mov
dec
mov
sub
jmp
sub
or
xchg
mov
scas
sti
and
dec
sar
lea
add
cltd
lock
sahf
sbb
adc
lds
mov
cmc
push
imul
mov
fimull
pop
xchg
mov
arpl
push
push
push
sarb
lock
xchg
test
mov
sbb
daa
in
insb
push
lret
pop
jl
inc
int3
bound
xor
inc
in
sbb
mov
add
lcall
adc
stos
enter
je
pcmpeqw
stc
das
scas
jns
cmp
repnz
push
rcrb
add
lret
sbb
or
call
lret
mov
inc
xlat
mov
call
mov
popf
push
lret
sbb
loop
lret
pop
push
cmpsl
sbb
andl
inc
mov
lea
seto
and
insb
shrl
adc
inc
fwait
inc
or
icebp
inc
sbb
jmp
sti
fnstenv
cmc
jne
sbb
lods
pop
xchg
mov
adc
imul
imul
int3
or
cmp
mov
ret
cmp
popa
xchg
rcr
xor
sub
mov
xchg
push
or
out
mov
jno
xor
scas
fs
sub
inc
fstpt
ror
jbe
mov
sahf
ret
and
mov
inc
mov
addr16
loope
ljmp
out
sbb
cmp
mov
adc
dec
popa
dec
xor
stos
testb
lea
leave
rcpps
and
rclb
test
ljmp
inc
adc
test
fstpl
icebp
or
mov
arpl
movb
lea
jbe
addr16
mov
jmp
lea
adc
or
imul
out
adc
mov
sub
xor
add
inc
stc
pop
pop
push
out
daa
push
iret
leave
adc
sub
push
cmp
jl
sbb
push
mov
ss
cwtl
loop
pop
lea
stos
movsl
cmp
nop
adc
in
fst
xchg
mov
cmpsb
test
jo
sarb
stos
dec
mov
mov
xchg
sbb
jle
dec
add
pop
add
ds
sar
test
jmp
call
jae
ss
adc
dec
aaa
aad
sub
xor
out
jno
mov
mov
adc
sahf
hlt
dec
sub
inc
mov
lret
dec
lcall
les
addr16
scas
push
dec
add
addr16
add
pop
fmull
icebp
dec
aad
jo
adc
mov
imull
sub
mov
dec
cmpsl
je
mov
mov
dec
xchg
cltd
mov
std
sahf
into
adc
insb
lcall
jecxz
adc
jge
imull
lret
aas
shlb
loope
jbe
mov
rcrb
cmc
fwait
nop
cmp
arpl
sub
lods
inc
push
xchg
test
pop
out
mov
rcll
hlt
inc
push
popf
jecxz
test
xor
push
fbstp
cli
fwait
daa
sub
cmp
jbe
pusha
pop
mov
ss
xchg
cmp
imull
mov
pop
inc
test
push
pop
mov
sub
pop
pop
sahf
pop
push
mov
adc
xchg
xchg
mov
gs
cli
imul
xchg
jb
pushf
dec
cwtl
shll
cwtl
int
push
mov
xchg
cmp
or
jp
frstor
inc
push
pop
or
lret
out
lock
imul
jb
fidivl
xor
aas
scas
pop
sub
aas
xor
adc
inc
cmpsl
pop
adc
adc
xor
and
lret
lods
js
test
mov
bound
push
ret
push
lahf
das
cmc
icebp
pop
mov
imul
ja
add
mov
lock
sbb
divl
pop
out
mov
sbb
push
jge
push
push
mov
mov
movsb
jae
das
or
mov
add
jbe
mov
ss
mov
movb
insl
sbb
dec
mov
inc
jg
xlat
pop
cmp
xchg
cmp
rcl
mov
out
jmp
jbe
ret
mov
and
cmp
sub
push
test
and
movsb
push
xor
push
ljmp
js
dec
test
sub
call
cmp
or
xor
mov
inc
push
pushf
scas
dec
or
adc
mov
xchg
xor
rcll
mov
movsb
gs
lcall
lahf
mov
sbb
cmp
sub
sub
cmp
rcll
jmp
lahf
icebp
push
mov
cwtl
or
fnsave
stc
or
lock
push
aas
mov
xor
stc
mov
icebp
push
adc
sub
iret
jmp
std
push
movsb
add
into
sub
mov
mov
push
fwait
mov
lcall
test
or
cmp
mov
xor
in
pop
popf
outsb
dec
xor
and
jb
out
inc
je
dec
add
mov
push
orl
jae
icebp
ret
mov
sub
lcall
lret
or
movsb
xor
jecxz
rorb
sbb
sar
xchg
add
sbb
mull
addr16
jbe
mov
pop
pop
sbb
mov
out
into
pushf
pop
cmp
lea
mov
mov
sar
mov
arpl
ficompl
mov
lods
push
inc
shll
test
test
lods
jnp
xor
adcb
mov
pop
adc
sbb
or
add
pop
ror
lret
rorb
mov
adc
dec
push
dec
xor
cltd
mov
and
inc
ja
inc
or
insl
aad
outsb
cmovae
cltd
fisubl
incl
sub
cld
outsl
mov
sub
jno,pn
mov
sbb
fwait
lret
or
dec
ss
subl
xchg
lret
sbb
dec
lret
pusha
adc
cltd
cmc
fwait
aad
test
dec
daa
lods
jnp
and
loop
aad
and
sbb
shll
movsl
add
sub
push
mov
push
cltd
xor
imul
push
fld1
popf
mov
pop
pop
inc
js
in
xor
in
hlt
push
mov
mov
test
xor
shl
mov
jnp
pop
cltd
mov
movsl
setbe
push
scas
jecxz
add
and
call
fildl
inc
pop
cld
test
out
aas
xor
in
leave
cmp
sti
loope
dec
adc
bound
dec
cmc
leave
stos
pop
inc
mov
dec
lret
mov
cmp
xor
jp
inc
xor
jne
gs
sub
loop
les
mov
push
sub
lahf
dec
lea
mov
lret
add
or
xchg
push
mov
lods
iret
ljmp
jmp
inc
fsubl
repnz
movsl
lret
mov
jp
pop
xchg
xchg
xchg
psraw
mov
or
add
jno
push
sub
dec
push
dec
add
in
or
mov
out
jns
xor
add
cmc
add
add
jp
movb
dec
inc
sub
fdivrs
out
loopne
loopne
dec
mov
pop
dec
adc
push
hlt
xchg
sub
mov
cld
push
mov
pop
cld
sub
mov
mov
xchg
pushf
pop
push
daa
in
arpl
fldt
xor
test
push
leave
rep
xlat
push
xchg
dec
push
aad
mov
mov
mov
sub
fidivrl
jmp
mov
movsl
imul
dec
in
ds
fidivs
adc
add
lods
popa
repz
mov
dec
push
push
ret
cwtl
andb
addb
dec
cmp
stos
clc
stos
out
sahf
inc
push
cltd
outsb
xchg
hlt
in
in
lods
mov
cld
jnp
popa
sub
shr
cs
repz
inc
cmpsl
out
push
iret
dec
add
outsl
xor
or
mov
jle
jae
dec
enter
loop
pop
test
jle
cmpsl
push
add
push
pop
inc
cwtl
sub
cmpsb
inc
in
mov
xchg
pusha
dec
ljmp
pop
movsl
fldpi
inc
add
movb
into
and
daa
dec
in
test
xchg
ret
ficoms
in
dec
dec
cmp
mov
pushf
ret
push
outsb
mov
icebp
xor
int
mov
and
bound
cmp
pop
xchg
push
hlt
shl
mov
psraw
add
imul
mov
repz
mov
jbe
adc
xor
aas
add
cli
shr
sub
nop
daa
or
rorb
sbbl
jl
enter
repz
jb
loopne
sbb
rcrb
push
mov
xchg
sti
addr16
test
push
iret
stc
pop
mov
in
rorl
mov
mov
shll
dec
fs
rclb
jmp
pop
mov
or
sub
cmpsl
lea
loop
cmp
xor
roll
fsubrs
pop
xchg
mov
pushf
test
mull
repnz
and
popf
xchg
xchg
lret
inc
std
dec
test
mov
xor
add
cmp
sbb
fs
out
movsl
movsb
rcll
mov
inc
jl
pop
jae
dec
mov
testl
mov
sub
sbb
jnp
inc
test
mov
mov
repnz
aad
sti
sub
cwtl
clc
das
inc
push
mov
jl
inc
ret
mul
jno
repz
popf
test
js
dec
lcall
push
and
les
leave
adc
aam
xchg
aas
ficoml
mov
push
mov
aas
mov
sbb
cmpb
xchg
mov
mov
adc
inc
in
cmpsb
dec
loopne
jns
test
cmp
sbb
push
jno
mov
and
jle
mov
sub
sbb
clc
jp
pop
mov
cmc
movups
mov
lcall
shr
or
mov
into
cld
push
sub
push
mov
cmpsb
mov
mov
sbb
je
icebp
in
or
or
int
pop
mov
cmp
mov
cmp
add
push
jmp
push
mov
pmulhuw
ficoms
cwtl
fstps
into
adc
jmp
inc
sti
andnps
mov
inc
scas
xor
int
add
mov
icebp
test
push
repz
adc
mov
mov
nop
and
in
into
jo
das
adc
mov
adc
push
bound
push
jge
arpl
xlat
or
jb
xchg
pop
or
sbb
scas
jl
sahf
jbe
jns
xchg
adc
cmp
jb
pop
hlt
dec
cs
push
cli
jle
cmp
fistl
sahf
call
out
test
cmp
loope
popf
imul
xchg
adc
subb
pop
pop
out
cmp
dec
sarb
cld
sbb
sbb
pop
cwtl
ficoms
nop
mov
pusha
xor
jno
fisttpll
mov
mov
jno
stos
push
hlt
cmp
inc
xchg
lods
push
and
xor
push
cmc
add
iret
pop
mov
pop
xor
loope
out
jl
and
cld
call
mov
push
sub
push
add
sub
insb
sahf
cmc
enter
ja
clc
aas
adc
fisttpll
xor
sbb
in
imul
mov
test
push
pop
addr16
out
loope
pop
movsl
push
ficomps
jmp
stc
inc
push
inc
fwait
cltd
stos
push
ljmp
pusha
and
jp
je
mov
fs
out
cmp
mov
cmp
out
mov
add
adc
inc
xor
test
jle
call
cmpsl
roll
dec
mov
sub
mov
test
pop
insl
test
dec
inc
and
les
xlat
jl
sbb
jns
add
jae
sbb
pop
push
fidivl
jb
ret
push
or
cwtl
jle
jb
enter
scas
jnp
jne
mov
pop
mov
add
jecxz
and
adc
das
pop
jl
jge
add
and
imul
add
hlt
and
dec
jp
sbb
mov
push
ljmp
test
adc
enter
punpckldq
and
push
push
pusha
xorb
lods
dec
int
fistpl
out
xchg
inc
jg
loop
cmp
add
sahf
dec
mov
cmp
rorb
cld
shl
xor
cltd
add
pushf
sub
jbe
pop
adc
push
lea
std
jb
out
push
das
xor
or
add
cmp
jge
xlat
mov
push
outsb
pop
fdivr
test
or
test
ljmp
sbb
inc
mov
and
aas
stc
jb
daa
dec
sbb
push
mov
dec
test
pop
cltd
push
loope
mov
jns
into
sti
dec
jae
insl
xor
push
xor
mov
push
inc
hlt
and
loopne
jnp
icebp
cmp
std
mov
push
push
cmpsb
call
xor
lret
xchg
cld
inc
sub
dec
lahf
out
leave
shl
sub
xor
push
sub
pop
imul
add
sub
popa
jb
xchg
outsb
call
and
dec
mov
adc
leave
pushl
stos
sbb
imul
jmp
inc
jae
push
in
lods
pop
jo
sub
inc
mov
inc
in
cs
imul
push
mov
clc
inc
adc
or
dec
jmp
cmp
in
outsl
scas
outsb
fidivrl
popf
clc
pop
jle
jge
jge
aad
adc
test
push
jno
arpl
push
outsl
push
lods
aam
mov
mov
xchg
jle
fsubrs
mov
scas
aaa
daa
mov
aaa
jns
push
or
and
imul
les
sub
ret
test
loopne
adc
cmp
inc
cld
cmp
scas
cmp
mov
lds
xor
cmp
sahf
js
jmp
xor
xchg
xor
push
pop
cwtl
fiadds
pop
jp
inc
xor
lock
adc
mov
mov
add
popa
sarl
fucomip
mov
mov
lods
js
jno
and
or
inc
imul
xor
es
sub
test
int3
and
bound
mov
test
into
sahf
clc
test
mov
push
lcall
mov
or
icebp
xchg
jle
pop
and
rorb
jnp
int3
pop
test
cli
jge
sbb
dec
out
pop
test
sub
adc
push
mov
inc
lods
in
push
out
jl
pushf
mov
xorl
ds
out
stos
push
pop
add
mov
or
pushf
test
jge
sub
xchg
add
push
mov
ss
sbb
pop
cmp
ds
dec
pop
int3
dec
movsl
pop
cli
subl
mov
movsl
imul
mov
mov
jo
xchg
stos
push
call
inc
sub
sbb
and
sbb
dec
mov
fiadds
nop
pushf
imul
mov
out
jge
ret
inc
xchg
inc
cmp
cmpsl
je
ja
idiv
sarb
adc
cmc
mov
xchg
inc
mov
xor
jge
js
mul
xor
add
xchg
ljmp
pop
mov
and
add
andl
and
adc
and
addb
ds
dec
loopne
push
pop
dec
bound
xor
mov
mov
mov
pop
je
jb
es
cmpsb
sub
sub
repnz
mov
mov
push
loopne
sub
mov
into
mov
imul
iret
in
cmp
ret
scas
jbe
xor
ss
fldcw
push
push
jmp
mov
pop
add
dec
addr16
xor
jmp
into
daa
mov
mov
xlat
js
imul
ljmp
mov
dec
mov
adc
int
xchg
pusha
ret
sbb
cmc
jmp
or
pop
xor
dec
xlat
and
or
sahf
dec
jb
cmpsb
ret
outsl
push
clc
mov
pop
movsb
icebp
fcmove
pop
popf
push
jg
jae
sub
test
dec
mov
ret
adc
stos
mov
inc
lods
xorl
push
jae
pop
jae
dec
lahf
int3
mov
lret
movsb
inc
or
outsb
xchg
mov
and
lds
sbb
or
xor
jae
bound
mov
scas
pop
ja
inc
add
dec
dec
xor
mov
stos
fwait
aad
loop
stos
xor
rolb
push
cwtl
loopne
dec
or
dec
bound
cli
or
lods
dec
es
cmpsb
xor
xchg
jbe
aas
lret
dec
add
push
sbb
shll
xchg
add
or
ja
mov
popf
repnz
mov
test
leave
and
fisttpll
std
and
dec
push
mov
mov
ret
inc
sub
sub
push
inc
ret
mov
or
mov
jle
mov
cli
ret
out
aaa
imul
mov
out
xchg
iret
aas
adc
scas
popa
jne
dec
cld
es
dec
fsts
dec
jo
fld
inc
jge
add
clc
push
scas
pop
cli
adc
ret
loop
adc
cmp
pop
cltd
xchg
mov
and
mov
jb
dec
ds
push
in
adcb
xchg
xchg
int
fwait
push
add
sub
shrb
jbe
xor
fst
add
int
daa
cmp
in
add
adc
adc
mov
dec
adc
addr16
lds
int3
orb
cs
xchg
subl
xchg
mov
jecxz
push
xchg
cmc
lods
or
xlat
outsb
mov
sbb
insb
loopne
aaa
or
nop
xor
jecxz
dec
add
out
push
xor
pop
fdivrs
xor
sub
notb
push
jp
mov
or
pop
subb
jne
pop
xor
jo
jbe
inc
mov
dec
in
popf
add
mov
cli
lds
add
lahf
sti
nop
jae
jno
jg
repnz
in
pop
cmp
lcall
shrb
nop
mov
dec
pop
cli
dec
push
inc
scas
adc
and
rclb
in
aaa
xchg
sti
nop
jge
mov
lret
lock
jp
and
pusha
mov
call
imul
pop
dec
roll
mov
test
ret
or
test
xchg
push
shrl
mov
jp
lret
cs
fiadds
fcoms
pop
push
cld
push
mov
adc
inc
adc
xor
inc
cmp
push
dec
and
mov
jnp
sahf
mov
mov
sub
leave
shlb
add
call
out
inc
mov
adc
call
in
js
int
cs
or
push
out
add
mov
or
cs
fldenv
sub
lock
pop
or
cmpl
add
pop
jl
dec
xor
jae
subl
cmp
jbe
jne
sub
sbb
dec
in
inc
jmp
call
add
xacquire
pushl
dec
mov
xor
cmpsb
mov
orl
inc
imul
ljmp
inc
pop
jae
aaa
mov
adc
push
adc
push
loopnew
not
mov
xchg
test
loopne
pop
ds
add
lret
push
cmp
pop
pop
inc
xchg
ret
mov
aad
adc
mov
jae
dec
or
mov
pop
xchg
lock
lcall
cmovae
stos
das
dec
popa
pop
call
inc
push
pop
add
xchg
out
and
lods
or
clc
cmpsl
xchg
jecxz
mov
fidivl
fimull
push
loopne
dec
sub
out
popa
popa
rcr
data16
inc
xchg
jno
loopne
cli
repz
jne
mov
lods
fdivr
out
inc
jge
jnp
lret
lock
sbb
add
xchg
sbb
sbb
cld
jp
bswap
or
push
xchg
cmc
out
jns
nop
das
roll
and
into
add
bound
int3
jno
push
mov
and
adc
inc
push
mov
or
jle
js
iret
sbb
sbb
in
xchg
push
outsl
les
enter
mov
test
fisttps
xor
sbb
push
out
xchg
pushf
ljmp
push
call
mov
popf
dec
adcb
imul
mov
inc
imul
arpl
sub
rcl
popf
add
out
pop
loope
adc
and
int3
pop
or
or
movsb
outsl
jne
jne
adc
lock
xor
inc
imul
inc
addl
push
add
lds
add
and
jno
in
push
scas
lret
cmp
push
fcmovne
push
push
inc
inc
pop
and
sbb
out
std
lret
pop
iret
dec
cmp
sub
push
sti
mov
xchg
adc
dec
dec
push
addb
mov
push
sub
jns
pop
xchg
jmp
pop
fdivl
into
das
stc
adc
push
shr
aad
lods
out
outsl
add
push
cmp
fs
cltd
jae
rorb
or
mov
cltd
rcl
test
pop
adc
outsb
fsubrp
push
fwait
adc
mov
scas
scas
subb
xor
push
push
insb
imul
and
sahf
jp
test
dec
jns
push
sub
ret
mov
fiaddl
xor
mov
or
or
cmp
in
or
sub
and
int
fsubrs
rcrl
add
out
xchg
cmpsb
add
fldt
out
add
negl
and
movb
sub
cmp
pop
mov
lods
jb
pop
dec
pop
pushf
mov
dec
cli
add
js
data16
or
or
aam
repz
jge
mov
iret
js
jl
dec
je
cmp
aam
pop
xchg
lock
in
dec
jo
and
insl
mov
rolb
add
gs
sbb
cld
das
adc
cmpsl
int3
pusha
jno
leave
iret
xchg
mov
imul
gs
push
loope
push
xor
adc
or
mov
dec
je
les
sarb
pop
xor
pop
loopne
in
dec
inc
in
push
xchg
mov
fcmovnu
or
lods
sbbl
mov
add
outsl
nop
push
lret
sub
add
jns
testl
in
test
subl
mov
dec
nop
mov
cmp
test
inc
and
ljmp
repz
jnp
mov
inc
cmp
movsl
cmp
lds
xchg
test
vpminub
jne
call
into
shlb
and
or
popa
roll
push
or
aam
cmp
scas
jmp
jno,pn
xchg
xlat
fldl
mov
adc
stos
enter
in
pop
pop
inc
push
pop
cmpsl
sti
out
inc
mov
stos
pop
loop
jge
scas
fs
push
fsubrs
aam
sti
sar
jle
mov
cmp
cld
iret
push
pop
fstpt
fmulp
or
or
fidivrl
mov
mov
mov
adc
inc
adc
pop
push
mov
into
jp
cmc
mov
xor
dec
call
mov
sub
jp
add
in
dec
popf
loop
movsb
mov
and
sbb
mov
aaa
stc
pop
aaa
fnstenv
lock
sub
adc
and
mov
mov
sbb
rcrb
sub
test
push
mov
xchg
mov
lods
arpl
data16
fnstenv
sbb
jecxz
pop
xchg
aam
das
jl
mov
je
adc
ja
out
lahf
pop
mov
shl
lea
dec
xchg
dec
lods
repz
mov
sti
and
xor
sbb
mov
ds
dec
sbb
in
mov
push
jle
and
mov
pop
jnp
clc
and
mov
ds
inc
and
or
sahf
frndint
leave
sbb
dec
inc
sbb
jne
ja
push
mov
addr16
adc
jno
pop
mov
outsb
movb
loopne
scas
mov
imul
test
jge
inc
dec
push
jecxz
xor
ds
inc
das
xchg
sub
xchg
out
lds
lock
adc
jae,pt
jg
stos
xchg
xchg
xchg
dec
jl
cli
hlt
test
adc
push
sbb
push
call
hlt
adc
xor
mov
clc
into
aad
int3
in
adc
dec
test
sub
add
jg
jnp
inc
cmpsb
cmp
test
push
arpl
inc
iret
and
mov
cmp
jp
push
into
jecxz
hlt
mov
mov
ljmp
dec
mov
frstor
push
insl
aaa
lds
pop
xchg
xchg
add
mov
dec
or
cmc
mov
mov
or
cmc
and
repnz
xchg
or
stc
xor
jae
out
pop
insl
xchg
jno
test
inc
adc
or
dec
popf
loop
adc
sub
jecxz
stos
leave
sub
in
das
hlt
or
int3
dec
add
out
bound
popf
mov
cmpsb
push
cli
push
pop
movsb
negl
pop
je
xchg
mov
adc
mov
lret
mov
adc
inc
xchg
out
out
add
arpl
imul
std
jmp
jle
pop
mov
push
push
jl
sbb
cwtl
fs
daa
ljmp
lods
or
test
sub
xchg
pop
inc
cwtl
mov
jmp
cmpsb
fwait
dec
lds
aaa
nop
shlb
ljmp
lods
ds
hlt
lahf
jne
pop
imul
sahf
cwtl
fs
cmpsl
and
je
cmp
ss
inc
sahf
movsb
sbb
cmpsb
jecxz
pop
cmp
xor
xchg
into
inc
call
pop
addr16
add
out
xor
gs
lahf
sbb
dec
cmp
push
mov
mov
or
scas
mov
mov
push
fisubs
into
cld
mov
push
xor
repnz
fistps
xor
imul
mov
adc
mov
mov
movsb
into
fisubs
mov
cmpsl
xchg
imul
inc
fmull
lret
addb
out
js
xchg
pusha
subb
inc
aas
loop
sbb
xchg
in
aad
mov
mov
mov
mov
clc
stc
negl
test
mov
or
call
sbb
xchg
mov
adc
jg
xchg
xchg
in
int3
pop
cmp
jp
pushf
pop
xchg
dec
outsb
cmp
popa
xlat
xchg
cmc
in
sub
movsb
ja
shll
push
ss
add
in
cld
cmc
jl
ja
push
fdivrl
addr16
push
sbb
pop
popf
sub
ja
add
mov
jns
mov
pushf
push
add
mov
aam
push
xchg
outsl
test
lret
pop
insb
cmp
shl
imul
push
push
pop
into
push
mov
dec
sub
pop
dec
sbb
sub
mov
mov
cs
xchg
jecxz
iret
outsl
sbb
inc
dec
lcall
jno
imul
xchg
pop
sbbl
pop
cs
push
outsl
in
xchg
movsb
mov
loop
fisubl
test
push
stc
cmp
xchg
mov
cmp
out
jg
and
xchg
repz
shlb
ds
mov
shll
pop
mov
pusha
jb
pop
dec
add
inc
jno
cmp
mov
mov
les
xor
sbb
or
pminub
pushf
pmullw
fs
ds
idivl
xchg
dec
lock
inc
push
jge
loop
lret
psubusw
mov
orl
xchg
int3
inc
xchg
or
outsl
jmp
movsl
negl
test
filds
add
mov
dec
mov
lcall
dec
stos
mov
adc
pop
fcmove
dec
pop
jne
in
jecxz
in
mov
xchg
dec
mov
push
cld
add
push
jno
jbe
aas
xor
sbb
mov
xchg
mov
dec
test
dec
flds
out
pop
insl
data16
pop
subb
pop
dec
mov
out
add
pop
test
sub
mov
divb
inc
mulb
sbb
mov
and
test
xchg
fsts
lock
cs
inc
movsl
popa
out
in
inc
arpl
xchg
jp
shrl
jne
or
push
adc
pop
mov
ret
or
loopne
stos
ret
adc
jle
scas
rol
or
xchg
js
aas
xlat
sbb
mov
pop
filds
mov
rcrl
pop
mov
xlat
mov
out
or
inc
movsl
cld
lret
adc
sbb
loopne
jns
in
mov
sti
xchg
js
test
out
fs
clc
push
lods
inc
mov
scas
jle
addr16
mov
je
fsubrl
cmp
repz
enter
jmp
inc
fnstcw
enter
inc
adc
add
and
and
lods
sub
or
lds
add
gs
and
cmpsb
arpl
scas
jl
inc
sbb
or
lahf
sarb
fistps
jo
out
sbb
dec
sub
push
dec
mov
adc
add
test
nop
cmp
and
imul
mov
push
fldt
and
nop
enter
jb
xchg
sbb
out
adc
arpl
push
or
inc
jo
inc
sub
jnp
push
dec
in
fiadds
lods
mov
push
jle
pop
rcl
add
into
insb
jno
sbb
lcall
sbb
call
push
push
mov
subb
fstps
shll
push
or
test
fcmovnbe
push
xor
iret
ljmp
sahf
mov
popf
divl
xor
shlb
addr16
push
jl
fmulp
ss
into
mov
inc
push
inc
and
aaa
jmp
cltd
pop
idivl
adc
aas
pop
out
inc
xor
sbb
call
push
inc
sub
jmp
stos
mov
outsb
cmp
scas
les
cltd
aam
or
xchg
jle
lret
test
ret
js
ljmp
xchg
xor
sbb
es
or
xchg
dec
je
xor
adc
in
scas
jge
mov
int
iret
sbb
outsl
sbb
add
mov
loop
sub
scas
cmp
pop
or
sbb
adc
pop
cld
das
mov
lret
mov
xchg
idiv
xchg
les
fidivrs
popf
fwait
ja
popf
xchg
or
dec
jge
mov
fbld
fcmovb
jne
movsl
mov
in
loopne
out
jge
loope
mov
loopne
cmp
cld
fadds
sbb
lret
movsb
fnstenv
rorl
push
punpckldq
push
lcall
xchg
push
fwait
jp
negl
sub
mov
sbbb
dec
and
xchg
clc
aad
test
or
add
hlt
shll
clc
or
sbb
bound
mov
call
outsb
mov
imul
aad
push
lcall
les
jno
fnstenv
dec
shr
adc
jle
xchg
inc
add
movsl
sub
xor
ret
and
insl
dec
push
adc
popa
adc
or
adc
and
sub
mov
fiaddl
add
push
sti
sub
adc
aad
mov
addl
ljmp
dec
clc
les
sti
lcall
clc
stc
xor
cmpl
dec
jmp
inc
movsb
cmp
push
out
mov
ret
fidivs
add
mov
fcomip
cld
addr16
fdivl
test
mov
fs
lds
xchg
sar
xchg
mov
cmpsl
xchg
hlt
sbb
movsl
lahf
push
mov
rol
fs
lea
in
cs
jns
int
repnz
movsb
out
xchg
lahf
rcrl
dec
xchg
push
inc
xchg
push
sub
and
adc
inc
adc
xlat
repz
repnz
adc
fmull
scas
arpl
inc
cmp
icebp
scas
mov
push
cwtl
addl
enter
xchg
shlb
cwtl
xchg
subl
outsb
fwait
xchg
adc
imulw
or
adc
call
xor
jmp
jae
insb
jae
jno
dec
push
call
cmpb
inc
sti
cli
aam
push
popf
pop
stos
outsb
cmp
or
sub
ds
adc
pop
jno
sti
sub
sub
dec
andl
jb
mov
addr16
std
fists
sub
hlt
or
lret
dec
repnz
jl
and
aas
mov
mov
movb
ljmp
and
mov
div
jl
sbb
loop
dec
push
fcoms
xchg
div
mov
inc
add
aad
roll
clc
push
sbb
push
rcll
and
pushf
nopl
mov
test
lods
jg
pop
sbb
or
pop
in
xor
mov
xor
and
sub
pop
pop
outsl
enter
std
inc
xchg
loopne
mov
shll
shll
loopne
jg
imul
lea
ffree
outsl
xchg
cmp
rcr
push
rolb
xor
dec
jne
les
jno
mov
stos
outsl
sbb
jl
scas
imul
mov
out
cwtl
fcoml
test
rcl
pusha
incl
rorb
js
fs
xchg
sahf
fwait
hlt
xor
inc
xchg
push
loopne
sub
mov
arpl
data16
xchg
cmp
enter
ss
mov
mov
jo
pop
cmp
scas
lahf
into
sub
insb
out
mov
cmc
sbbl
xor
ja
fistpl
push
out
cmpl
jmp
ffree
mov
cwtl
add
dec
repz
je
rcrl
push
jecxz
rcr
jecxz
jp
mov
jecxz
jmp
dec
mov
xor
stos
mov
jo
jns
lods
movl
dec
pop
add
sbb
repnz
push
faddp
adc
fimull
pop
dec
testb
inc
mov
clc
add
cltd
sub
mov
mov
lahf
mov
or
pop
push
enter
push
or
nop
mov
pop
xor
clc
sub
sbb
pop
imul
into
in
inc
outsl
sbb
adc
jnp
mov
fnstcw
fs
lock
movsb
pop
jmp
jle
dec
enter
ret
dec
cli
test
lret
mov
lods
pop
mov
fwait
ja
or
cld
mov
out
outsl
or
scas
xchg
pop
stc
mov
add
in
daa
daa
mov
iret
mov
mov
cmp
mov
add
push
pusha
jp
xlat
mov
int3
add
sub
rclb
in
pop
mov
scas
push
mov
stos
call
and
fsts
cmp
mov
test
adc
les
inc
mov
pop
adc
fildl
je
roll
fisubl
lock
sub
dec
cmpsl
mov
add
dec
jno
out
xchg
test
sub
cmp
jl
add
push
and
scas
fnstcw
mov
shll
movsb
jbe
xor
jge
test
dec
mov
je
cmp
or
inc
ficomps
mov
sub
mov
jno
push
adc
pop
ljmp
test
insb
mov
xchg
lcall
and
aaa
xchg
add
gs
mov
push
mov
xchg
jae
xchg
dec
or
adcb
jbe
addr16
or
and
js
andb
push
cmpsl
pusha
loop
adc
cmpsl
sahf
sbb
jge
aaa
mov
adcb
scas
push
cltd
call
xor
enter
in
xchg
push
mov
mov
jg
popf
aad
ja
scas
adc
pop
mov
or
add
sbb
popa
xchg
ror
scas
jecxz
fcmovne
adc
sahf
xchg
ret
pop
or
push
mov
cmpsb
jmp
xchg
adc
inc
iret
mov
aam
lahf
enter
xchg
add
in
jecxz
dec
bnd
fwait
mov
pop
movsl
xchg
add
mov
insl
xchg
pop
xchg
insl
push
js
mov
cmp
mov
jmp
scas
ds
scas
jns
sbb
adc
xchg
mov
mov
adc
lds
xor
aaa
push
sub
push
pop
inc
aam
popf
push
xchg
and
popf
jne
sub
mov
xor
xchg
sub
xchg
sub
fidivl
jbe
daa
mov
mov
push
aad
subb
leave
push
lret
jmp
jmp
sbb
pop
arpl
and
gs
test
pop
add
xlat
mov
mov
pop
mov
mov
in
xchg
fadds
mov
lret
cli
cmp
pop
testl
cmp
fdivrp
adc
jecxz
int3
pushf
into
jmp
out
dec
popa
sub
cwtl
cmpsl
popa
inc
insl
cltd
js
pop
test
mov
fidivrs
cmp
sbb
or
inc
test
fisttpl
sarl
bound
in
std
add
fstp
test
sahf
aaa
or
insb
and
lret
cld
cmp
fsubl
add
test
push
mov
sbb
mov
gs
pop
xor
cltd
xor
xlat
push
pop
aam
jg
js
or
fwait
pop
orl
ror
inc
pushl
sub
daa
aam
addr16
sub
sbb
xor
inc
mov
cli
out
scas
push
dec
xor
sbb
or
out
mov
jae
or
cwtl
movsb
aas
imul
cli
push
aaa
adc
testb
pusha
inc
mov
fistpll
xchg
or
movsb
cli
out
mov
dec
aad
add
xrelease
adc
repnz
repnz
ss
test
mov
cltd
lcall
xchg
pop
dec
test
push
rcrl
aad
cmc
and
sbb
sub
push
jmp
mov
fiadds
adc
mov
out
pop
repz
adc
fiadds
sub
and
pop
jae
fistl
sub
lds
xchg
inc
add
push
rclb
lea
push
mov
jne
int3
jge
fildll
add
test
lea
je
dec
pop
add
ret
outsl
insb
dec
mulb
sti
aam
push
pop
push
cltd
inc
scas
mov
dec
sub
subl
scas
dec
outsl
add
rolb
lcall
xchg
aad
push
fsub
xchg
mov
xor
insl
jb
jo
leave
lds
mov
push
movsl
xor
jle
pop
jmp
ret
xor
and
sarl
scas
pop
mov
outsl
inc
mov
bound
out
fstpt
jp
jno
pop
and
in
cmpb
out
jne
repnz
out
movsb
rorb
inc
es
lret
imul
orb
push
pushf
hlt
push
inc
and
fxch
rol
mov
mov
sbb
lea
add
sbb
cmpsl
sub
fsubr
add
jo
dec
jno
dec
insl
test
or
cmp
mov
hlt
pop
movl
jge
or
dec
cmp
pop
je
daa
fidivrl
lods
jl
fistpll
fwait
pop
and
mov
xchg
test
xchg
mov
sub
ret
push
add
ret
sub
pop
and
dec
addr16
adc
data16
mov
inc
xchg
push
stos
dec
fcmove
jge
cmpsb
imul
push
xchg
into
pop
fs
pop
mov
or
dec
icebp
lods
and
loopne
jae
in
mov
insl
stos
test
dec
mov
je
cmp
lcall
fbld
push
rcl
fcoms
pop
fmul
outsb
add
and
test
pop
or
push
jbe
mov
mov
mov
jns
loope
sbb
sub
jp
aaa
cmp
mov
and
pop
jecxz
sbb
leave
inc
xchg
pop
xor
scas
pop
les
loope
enter
test
popa
jl
test
cmc
sub
jno
stc
js
push
push
jge
xlat
lods
aaa
mov
test
out
in
shlb
cwtl
fnsave
int
negl
outsl
cmp
pop
pop
lds
imul
stos
aaa
stc
out
lock
sub
push
pop
pop
fdivs
into
shll
mov
dec
dec
out
incb
mov
cmp
mull
nop
dec
pop
pop
xchg
aad
fstl
js
pop
sbb
mov
fmull
mov
mov
mov
lahf
outsb
nop
push
jns
cs
push
mov
inc
jle
add
ret
orl
ds
outsb
cli
push
std
roll
add
and
lock
and
lret
pushf
sbb
sahf
add
xchg
mov
ret
out
ljmp
shlb
lret
mov
cmpsl
mov
sbb
jl
dec
xor
jne
pop
loop
push
cmpsl
xor
int
ficompl
rcll
aad
xchg
mov
iret
mov
js
jmp
sub
lea
lahf
mov
lds
sub
mov
mov
out
pop
pop
repz
or
cmp
sbb
div
sbb
in
je
cmpsb
jmp
and
pop
lods
daa
loopne
imul
insb
mov
push
mov
adc
sub
orl
cld
daa
lods
aam
xchg
scas
addr16
dec
pop
xchg
push
aaa
mov
or
or
ja
outsl
repnz
popf
dec
push
repz
cmp
or
jb
scas
gs
test
dec
add
inc
in
and
pop
decl
popw
pushl
adc
mov
shrl
ror
fs
jg
pop
push
mov
mov
fsubrp
repz
xchg
stos
or
loope
mov
cmp
push
imul
fisttps
adc
pushf
pushf
ss
jp
sub
in
mov
orl
inc
cmp
jmp
in
mov
cmp
dec
sbb
mov
jns
adc
ficoms
fcoml
out
gs
mov
sarl
xchg
pop
dec
and
push
enter
in
pop
dec
jl
ljmp
xchg
addr16
pop
sub
add
and
and
add
and
test
in
xor
and
jns
leave
xor
mov
int
add
sarl
dec
sbb
sbbl
orb
dec
insl
cmp
in
sub
pop
mov
arpl
fcompl
rcrb
mov
pop
mov
sbb
movsb
sbb
lcall
jne
xchg
push
lahf
dec
fisttps
jmp
xor
mov
daa
into
mov
mov
sahf
xchg
adc
xchg
je
push
sub
cli
xor
outsb
test
sbbl
jnp
mov
insb
icebp
mov
dec
call
adc
shl
pop
incl
push
jge
mov
sub
and
sub
adc
les
mov
int
or
xchg
pop
mov
out
mov
dec
ds
push
xchg
xchg
or
stc
lock
jle
mov
pop
jg
jge
popa
out
aam
imul
fidivl
int3
js
dec
mov
xchg
mov
pushf
andl
imul
pushf
dec
fnstenv
xor
roll
sahf
movsb
emms
adc
les
aas
je
in
jecxz
add
xor
pop
aaa
jo
pushl
mov
pop
inc
stos
add
xchg
xchg
mov
inc
insl
gs
cmp
xor
or
xchg
push
in
rorl
ficoml
mov
stc
rclb
movsl
mov
mov
inc
jmp
int
sti
stos
cmpsl
push
inc
out
shlw
nop
lea
xor
nop
sbb
test
adc
mov
lret
xchg
fnsave
cmc
jl
jmp
jmp
stos
pop
cltd
dec
xchg
dec
stos
add
call
stos
arpl
lahf
fisubl
cmp
test
pop
pop
push
iret
sarl
push
jg
cltd
pushf
sarl
xchg
mov
stc
dec
xchg
movsl
and
cmp
inc
loope
dec
sti
aaa
sysret
and
stos
mov
pop
mov
inc
loope
push
sti
dec
dec
mov
lods
xchg
xor
jae
lahf
xchg
aam
ret
jb
pop
xchg
gs
loope
adc
pop
jecxz
pop
lock
and
addb
rcl
mov
adc
jno
lods
orl
mov
ds
sub
adc
pop
or
lret
pop
sub
testb
sub
addb
repz
es
inc
sarl
push
add
lods
jo
fldenv
mov
pusha
mov
jne
es
dec
mov
shlb
and
stos
adc
add
stc
xor
and
cmp
scas
or
push
and
shll
mov
mov
iret
shll
xchg
xchg
xor
jmp
mov
in
ret
test
pop
dec
xlat
push
cmpsl
or
sahf
pop
or
pop
std
data16
push
adc
stos
subl
hlt
int
xchg
hlt
test
addr16
je
pop
iret
jmp
mov
push
insb
xor
push
push
pop
inc
adc
dec
test
cwtl
cli
cmp
and
mov
lret
mov
data16
xor
cmp
push
addr16
adc
or
jo
inc
mov
mov
je
jg,pn
mov
in
loop,pt
mov
mov
adc
sarb
rol
xlat
xor
mov
inc
aas
mov
jge
outsb
mov
xor
insl
js
mov
lds
loope
subl
in
lds
jno
cwtl
ds
dec
call
movsb
jecxz
cltd
jbe
and
test
scas
adc
frstor
out
loopne
pop
out
push
test
les
fs
mov
movsb
jns
or
sbbl
xor
sbb
mov
das
sub
jle
push
sub
scas
div
adc
dec
rolb
adc
dec
stos
test
addr16
addr16
mov
sahf
jae
dec
js
inc
sub
stc
test
loop
dec
sti
xchg
cmpsl
insl
pop
ds
int3
inc
mov
loopne
xor
in
or
cmp
xchg
sub
pushf
xor
dec
aam
das
int3
pop
mov
in
int
stc
repz
sbb
or
lret
pop
xchg
push
mov
mov
sub
cmpsl
cmp
daa
fxch
daa
outsw
in
ret
mov
lods
daa
or
jbe
rcrb
ret
aaa
out
add
in
fdivs
call
and
ds
and
cmp
dec
lea
fadd
mov
mov
das
pop
int3
repnz
les
cmpsb
jle
int3
add
adc
out
sub
sub
test
mov
cwtl
mov
sub
mov
dec
push
clc
sbb
add
fistl
cwtl
sub
shrl
punpckhdq
mov
sub
fldt
pop
mov
pop
or
movsb
or
daa
mov
dec
cmpsl
in
movsl
jbe
test
outsl
movsl
xor
push
sub
sbb
adc
cmp
mov
pop
addr16
bound
push
daa
mov
xchg
jb
mov
inc
icebp
or
in
mov
inc
js
shrb
push
and
sbb
pusha
and
dec
adc
jmp
mov
insb
jae
mov
ret
hlt
sahf
mov
mov
fwait
lea
fsub
bound
dec
imul
sahf
loop
das
dec
sub
lea
fs
push
stos
cmp
jecxz
sbb
inc
gs
movsl
sti
aam
mov
or
or
cmpl
jb
int
dec
mov
or
int3
je
sub
adc
flds
push
or
scas
sub
js
ds
push
dec
in
xchg
in
pop
mov
inc
inc
push
pop
pusha
aam
xchg
ret
and
push
cmp
outsb
push
idivb
or
addr16
idiv
cmp
into
pop
dec
pop
inc
xchg
rolb
or
call
in
into
iret
in
and
ret
daa
call
sbb
mov
int3
pop
sub
inc
sbb
add
mov
pop
dec
xor
mov
int
dec
scas
xor
xor
es
lds
fdivs
inc
add
cmp
insb
jbe
adc
sub
lret
outsl
xchg
in
mov
in
sub
add
pop
mov
add
loop
sbb
imul
mov
mov
shll
ja
fwait
movsb
xchg
adc
fmuls
mov
out
mov
lret
in
xchg
stos
cmc
adc
arpl
sarl
sub
loopne
shlb
fcmovnb
lcall
jg
out
adc
jmp
push
daa
repnz
or
test
mov
enter
out
xor
inc
and
aas
jmp
mov
xchg
dec
ds
fstps
cmp
jp
insb
stos
flds
lds
cmp
call
adc
or
rorl
insb
sub
fsub
mov
jbe
xchg
ret
test
dec
adc
lock
in
xor
call
cmpsl
jb
paddusb
shll
pop
push
mov
jb
es
imulb
push
fisubrs
je
dec
lret
jne
rcll
jmp
popf
out
pop
ret
insl
or
jbe
rcrl
xchg
lahf
pushf
sub
sti
cmp
jle
push
shr
lret
xchg
pushf
gs
push
dec
mov
xchg
mov
stos
addb
mov
sarl
pop
fcomps
fdivrs
add
bound
mov
pop
pcmpgtd
pusha
lret
fwait
adc
xchg
pop
or
pop
subl
mov
pusha
mov
rorb
movsb
lcall
jb
insl
pushf
cli
sub
cmpsb
out
inc
pop
mov
pop
mov
loop
or
popf
fcomps
pop
dec
imul
hlt
jb
out
add
aad
mov
xchg
xchg
loop
mov
popa
ja
mov
jp
or
mov
lret
sbb
outsb
push
jb
xor
sarb
lds
pusha
or
xlat
bound
in
cltd
mov
aad
mov
nop
add
pop
cld
gs
bound
es
mov
cmpsl
push
mov
push
jb
mov
jns
sub
stos
xor
and
mov
adc
sub
mov
adc
enter
jns
push
push
imul
mov
decl
dec
push
pop
in
jmp
jbe
xchg
sub
std
push
lret
adc
mov
xchg
jne
stc
aaa
jle
call
sub
lret
aas
pop
mov
lds
xchg
aas
dec
mov
js
lret
xchg
aam
dec
xchg
adc
inc
adcl
mov
in
icebp
push
dec
sti
mov
dec
xchg
jae
add
cmpsb
imul
cwtl
dec
cmpb
arpl
mov
loopne
in
mov
insl
into
lret
jmp
xchg
xchg
fwait
cmpsb
pop
movsl
push
xor
and
sbb
mov
cwtl
aaa
cmc
xor
mov
sbb
jb
mov
into
ret
inc
dec
mov
jmp
mov
bound
mov
fidivl
es
push
adc
mov
push
fidivl
adc
sbb
stc
jb
popa
mov
jno
cld
mov
fstl
adc
jle
mov
scas
repnz
and
leave
dec
adc
push
stc
inc
jle
fsubr
ja
dec
movsb
jecxz
lahf
out
cmp
pop
fsts
je
dec
pop
dec
mov
adc
in
xchg
adc
mov
int
insb
jns
mov
push
ss
shlb
mov
inc
ljmp
sub
xor
and
stos
mov
mov
xchg
jno
dec
mov
and
aam
cmp
rcrb
sub
sarb
popa
inc
xchg
mov
sub
mov
aaa
mov
insl
mov
ja
push
mov
loop
or
and
cmpsl
insb
inc
or
pop
popl
arpl
xchg
lock
add
fwait
fwait
call
push
nop
mov
lods
std
xchg
repz
xor
mov
mov
cmp
jl
idivb
div
stos
popf
scas
or
mov
mov
sub
or
je
rclb
hlt
jns
lock
js
add
push
bound
mov
mov
mov
ret
lcall
lahf
lods
jmp
pop
jle
pusha
fiaddl
fsubrl
jmp
lret
je
mov
cltd
sahf
enter
out
cmp
add
stos
mov
inc
mov
push
push
mov
inc
mov
dec
adc
aas
mov
outsb
add
repnz
insb
pusha
jg
push
mov
pop
ss
arpl
mov
lods
in
cmc
lock
jmp
pushf
dec
ljmp
lods
cs
stc
in
cmp
xor
jb
std
lods
roll
cmp
push
sub
fwait
dec
lahf
xor
mov
push
jns
mov
jno
dec
in
mov
pop
shlb
fwait
aad
outsl
lahf
arpl
je
rorb
jae
in
inc
xor
cmpsl
dec
dec
mov
push
mov
adc
out
bound
out
push
or
scas
mov
scas
pop
int3
jbe
popf
push
ret
add
mov
and
je
adc
adc
mov
sbb
cmp
hlt
dec
add
ret
sti
dec
shrb
xchg
ja
lds
or
shrl
out
sbb
dec
push
xchg
xor
or
jne
cmpsl
cwtl
ss
xor
ljmp
iret
shlb
loope
out
insl
fildll
cmp
sub
shrb
pusha
rcrb
inc
ficompl
add
push
stos
aam
fld
loop
cmpsl
push
mov
movsb
cli
shll
mov
call
ljmp
sub
jp
jle
out
fmul
int3
push
cmc
enter
inc
pop
jmp
enter
jbe
mov
sahf
inc
dec
push
sub
pop
stos
lcall
add
cmp
cmp
add
out
jnp
scas
xchg
mov
loopne
add
xchg
pop
cmpsb
ret
sbb
xor
push
aas
push
arpl
loopne
ja
xor
aas
lods
mov
ds
xor
cld
cmp
mov
sti
xchg
dec
jge
in
dec
mov
es
xchg
push
inc
nop
and
xor
dec
sub
cwtl
add
push
stc
test
cmp
js
jae
loope
movsb
testl
sbb
daa
pop
loope
mov
pop
popf
adc
sbb
in
fadd
adc
push
sti
jns
stc
cli
push
inc
rclb
pop
jg
sbbb
add
test
and
sub
in
lods
dec
sub
xor
dec
mov
dec
inc
adc
sbb
stos
ja
ljmp
stos
in
and
sbb
inc
and
jecxz
testl
rcrl
imul
sub
jnp
mov
xor
mov
roll
lods
test
xchg
ja
push
mov
inc
test
repz
lahf
pop
stos
mov
sub
cld
stos
addr16
fistpl
sbb
jl
mov
pop
xchg
rcrl
icebp
mov
fucomi
cld
imul
mov
cmp
notb
push
push
mov
and
enter
jge
inc
orl
adc
jno
mov
lcall
sbb
and
outsl
es
int
jl
insb
pusha
pop
jle
lret
cmp
mov
add
into
outsl
stc
jecxz
push
lahf
mov
adc
popa
jp
jne
pop
sahf
addr16
pop
inc
sbb
or
or
push
or
lahf
ffreep
jns
std
test
int3
or
int
jmp
dec
sbb
int
cmp
gs
lahf
shll
in
push
add
pusha
into
jo
js
or
adcb
fbld
pop
mov
aaa
mov
fisubrs
int3
jae
stos
js
popf
mov
cwtl
sub
cmp
pop
jecxz
inc
or
das
test
ss
mov
insb
fwait
jne
push
in
test
sub
and
jae
out
fwait
xchg
call
aas
fcompl
add
jbe
sbb
arpl
sub
gs
adc
push
inc
jge
setp
leave
mov
cmp
stc
add
pop
sarb
fdivl
std
aaa
sub
jmp
or
dec
in
ss
scas
rclb
jb
pop
add
fdivs
aam
fsubl
or
inc
leave
bound
push
sub
inc
pop
ljmp
mov
jl
mov
sub
out
fwait
push
pushf
mov
mov
pop
mov
testl
test
in
sub
pop
mov
cmp
mov
pop
pop
inc
popa
scas
mov
or
lds
test
xchg
daa
mov
je
mov
fldcw
mov
js
imul
std
cwtl
je
fcomi
mov
cwtl
sub
fwait
pop
into
ja
stos
jns
imul
push
sub
mov
shll
or
and
pop
and
test
testl
loopne
aas
push
outsb
push
movsb
xor
or
pop
cwtl
add
ds
sahf
sbb
fcomip
data16
jnp,pn
loop
sbb
xor
stos
mov
decl
mov
shll
cmpsl
sti
mov
push
mov
out
leave
cli
xor
add
outsl
sub
pop
nop
cmpsl
into
or
pop
mov
xlat
cmp
dec
jbe
xor
mov
into
in
jbe
xchg
sbb
push
jge
stos
jecxz
in
in
test
pop
in
push
cmpl
nop
scas
les
jg
dec
sub
cmp
stc
ljmp
fiaddl
pop
cmp
xchg
mov
arpl
ljmp
cmp
test
faddl
lds
sbb
aaa
dec
jmp
mov
jmp
in
ljmp
push
cs
inc
sahf
mull
test
adcb
xlat
jmp
jg
add
mov
in
adc
xor
jmp
mov
or
mov
fcomps
out
and
adc
push
repz
movsb
scas
inc
ret
mov
xor
aas
jp
sub
push
mov
lds
jae
repz
mov
push
adc
dec
adcl
js
mov
lods
test
testl
fisttps
mov
cmp
push
int
pop
call
ss
test
jl
mov
fbld
mov
lock
js
pop
mov
inc
and
dec
push
or
pusha
int
rcrl
sbb
sub
jecxz
mov
mov
stc
push
inc
and
mov
jge
inc
jbe
dec
mov
loopne
insl
negl
rclb
fmul
jnp
mov
adc
and
sub
ret
sub
inc
and
push
jo
out
sub
jle
movsb
lods
mov
das
jae
mov
ret
xor
jl
cs
sti
mov
xor
insb
mov
mov
pop
pop
push
sbb
dec
push
sub
sbb
clc
mov
mov
mov
sbb
xlat
mov
in
outsb
jbe
bound
or
and
js
fdiv
jg
cmp
jecxz
ret
icebp
fwait
adc
jae
jp
int3
and
mov
fwait
rcr
nop
jno
inc
jb
lock
inc
ret
testb
movsb
sub
adc
lods
lds
rcrb
dec
mov
pop
sbb
cmp
xchg
stc
cmp
inc
lds
push
loop
stos
xor
xorl
jmp
mov
and
pop
add
sbb
das
out
movl
xchg
and
xor
ss
mov
fwait
or
in
arpl
inc
rcrl
and
iret
fdivrl
jo
jbe
inc
xchg
mov
arpl
push
jmp
test
push
or
add
xchg
pop
pop
add
pop
and
js
xor
insl
in
pushl
jae
cltd
shlb
cmp
xchg
pop
sub
or
cmp
imul
outsl
mov
xchg
inc
loopne
notl
sbb
jmp
push
loope
in
dec
imul
mov
ret
orl
sbb
fstpl
out
pushl
rcr
push
jmp
sarl
xor
dec
mov
out
inc
cmc
xchg
in
clc
dec
mov
add
dec
dec
orb
jo
in
jecxz
xchg
or
loopne
cld
loop
in
and
cmp
pop
xor
mov
jp
les
xorl
aad
dec
lods
push
inc
out
js
fcompl
mov
repnz
xchg
sbb
and
rclb
movsb
sub
mov
xchg
xchg
addr16
fwait
pushf
inc
dec
ljmp
mov
out
inc
jb
fbld
inc
leave
pop
pop
mov
and
cmp
in
sbb
addr16
mov
repz
push
push
call
push
icebp
mov
dec
mov
leave
ficomps
jl
int3
aaa
cmpsb
loopne
or
mov
jb
mov
mov
mov
cmp
fbstp
test
call
int
test
lds
sbb
mov
stos
loope
in
adc
xor
xchg
ljmp
jge
imul
jp
push
bound
icebp
or
jp
aaa
int
jno
push
cltd
mov
rclb
jg
mov
xchg
enter
pop
ret
xor
daa
int
jbe
push
in
movsb
jno
push
mov
out
js
testl
mov
mov
push
sarb
xor
adc
dec
mov
daa
push
xchg
outsl
adc
adc
adc
mov
jb
test
pop
bound
jecxz
bound
cli
imul
fs
aam
dec
leave
test
mov
inc
push
outsb
test
ds
and
jle
xor
sub
out
stc
cmp
test
pop
fmuls
roll
lock
jle
mov
outsb
aad
jbe
scas
mov
notl
adc
rclb
or
out
dec
lret
adc
inc
cwtl
mov
mov
jns
xchg
xor
sti
pushf
adc
pop
add
lret
dec
sub
push
pop
cmp
inc
pusha
sbb
and
mov
ss
sub
int3
sub
pop
mov
hlt
and
out
pushl
xor
jecxz
dec
push
jb
adc
loope
xchg
push
in
or
xlat
cmp
cmp
or
lods
pop
cmp
jb
insl
xor
repnz
jnp
mov
in
movsb
data16
leave
aam
push
sbb
pushf
xchg
sub
xchg
and
out
and
dec
cmpsl
sarb
dec
lret
leave
push
lcall
pusha
push
and
ja
or
mov
xchg
clc
xchg
sbb
daa
sbb
stc
pop
pushf
mov
push
jbe
bound
mov
ret
xchg
mov
hlt
out
test
pop
pop
repz
insl
les
mov
loope
add
mov
data16
sub
xchg
shlb
push
and
stos
rorb
loop
sub
adc
adc
sbb
mov
mov
arpl
mov
aam
decl
inc
fsubrl
and
add
repz
movsl
sub
stc
mov
shll
mov
iret
in
mov
aad
add
ljmp
push
cmp
push
and
dec
mov
push
sarb
outsl
or
aas
in
mov
ss
and
xchg
nop
into
sahf
imul
xor
lock
jecxz
stc
jecxz
inc
mov
mul
mov
inc
pop
add
sti
in
sarb
or
mov
fsubp
clc
in
sub
cs
js
mov
fdivs
pusha
andb
sub
jg
mov
sub
ret
jge
ljmp
lret
jae
push
aas
add
jne
pop
imul
or
inc
inc
shr
adc
pop
clc
dec
or
xchg
pop
cmc
scas
lcall
outsb
call
icebp
pusha
xor
pop
inc
fdivl
mov
dec
dec
test
stos
test
jb
xchg
lahf
inc
lock
cmp
dec
into
movsl
jb
inc
mov
movsl
dec
js
scas
repz
pop
in
ja
jb
mov
push
repnz
cs
shl
jl
inc
push
cmp
pop
lea
cmp
jp
mov
bound
insb
arpl
push
out
pop
lods
mov
xchg
jge
push
jno
inc
inc
dec
js
test
in
cmpsl
fwait
add
xor
inc
jg
xor
mov
dec
pop
adc
addb
aaa
dec
mov
roll
or
pop
cmpb
shlb
jecxz
push
out
push
clc
mov
push
nop
dec
pusha
mov
int
mov
cmc
popf
int3
sub
iret
mov
push
andl
mov
mov
fbstp
pop
data16
push
push
les
ds
out
add
sub
cmp
sub
cs
pop
fimuls
aas
push
pop
mov
or
aas
sub
push
lcall
and
insb
mov
nop
cmp
mov
mov
ja
out
imul
nop
scas
imul
xchg
sub
lret
sbb
mov
repnz
push
lods
data16
push
sub
pushf
cmp
ret
scas
mov
in
cld
sub
xchg
cmp
test
pop
fs
cmpsl
iret
popa
mov
sub
enter
mov
mov
lahf
aas
inc
int3
ljmp
insb
sbb
sbb
stos
idiv
lcall
jecxz
xchg
jb
jae
sbb
mov
fadd
fcoms
add
stc
xchg
inc
or
call
gs
adc
dec
pop
mov
adc
add
cli
daa
jb
adc
stos
data16
inc
lea
inc
aam
fdivrl
mov
inc
mov
sub
enter
mov
xchg
inc
xor
int
pop
shll
cld
std
fisttps
xor
push
adc
sbb
rcrl
fdivr
sub
sahf
sti
scas
or
js
shll
inc
push
mov
pop
hlt
dec
cmpsb
ljmp
lcall
cltd
push
mov
insl
xor
data16
sbb
sbb
cmp
mov
fs
cmp
enter
out
sub
pcmpgtw
jae
xchg
jb,pt
mov
adc
ja
lds
sbb
xor
stc
dec
cmpl
mov
shll
add
addl
sub
mov
sahf
jne
cmc
adc
int3
insb
mov
sbb
leave
mov
xor
xor
dec
repnz
test
jb
out
iret
cmpl
jge
popf
mov
fstl
addl
loop
iret
in
mov
pop
hlt
fiaddl
and
fisubrl
lea
subps
scas
cmp
cmp
pop
mov
insb
fnstcw
pushf
and
mov
jnp
dec
jge
lcall
ror
pushf
std
cld
js
mov
jno
ljmp
jl
jns
and
rorb
outsl
lods
lahf
sbb
and
pop
pmaxsw
cmp
adc
and
pop
repz
xchg
jl
jo
inc
arpl
lret
loopne
ljmp
sbb
iret
and
and
jp
jmp
mov
lock
int3
iret
inc
push
and
cmp
jg
stc
fnstenv
enter
es
pop
mov
fs
insl
jg
mov
lods
imul
mov
fsubrl
lds
sub
and
mov
cmc
sahf
stos
int3
jb
ss
mov
or
add
out
mov
ds
dec
mov
add
clc
mov
sub
xchg
jmp
mov
or
fldcw
jae
cmc
fldenv
xchg
rorb
loopne
sub
mov
aad
out
dec
push
xor
xchg
in
das
sti
ret
cmpsl
imul
sub
stos
cmp
jle
add
mov
cld
sbb
daa
inc
push
xchg
mov
mov
or
pop
xchg
fistps
push
adc
and
ret
cmp
lods
push
pop
mov
xor
aaa
push
dec
enter
and
notb
jmp
mov
test
imul
pop
cld
push
sbb
jg
adc
loopne
adc
ss
and
xchg
mov
icebp
mov
scas
jne
push
add
xchg
jge
add
shlb
fisubs
xchg
xor
xor
outsb
movsl
or
inc
popa
sbb
hlt
push
in
or
mov
movsb
jmp
jnp
and
out
cmp
or
cli
pop
sbb
push
ficoml
push
std
mov
icebp
in
sub
js
pushf
out
push
or
cli
cmp
test
dec
mov
cltd
rol
cli
nop
pop
jnp
jne
jbe
inc
ljmp
call
xor
ret
aaa
je
lea
lcall
decb
adc
mov
xchg
dec
insl
or
mov
cmp
jecxz
or
shlb
rclb
mov
into
cmpsl
lret
jle
push
in
inc
adcb
adc
sbb
cltd
bound
jp
xchg
scas
nop
rcrl
in
clc
cmp
and
aam
cmc
inc
mov
add
and
cmp
dec
jae
fimuls
lods
inc
sbb
jle
mov
push
mov
in
jl
lahf
sti
sbbl
inc
xchg
xor
cmp
pop
fcomps
fsubrl
nop
inc
mov
out
jns
bound
lea
sahf
mov
mov
push
fwait
jns
jge
cltd
push
ret
push
xchg
mov
jae
sti
iret
cmc
ret
dec
add
sub
inc
and
out
cmp
shl
hlt
and
les
push
test
leave
adc
jne
or
stos
sbb
jge
add
add
cld
push
xchg
and
xchg
je
lea
mov
out
cs
sub
cmc
jbe
cmp
dec
popa
or
mov
xor
mov
sub
shll
push
pop
push
jg
xchg
mov
inc
push
push
lret
inc
cmp
fidivs
into
add
jg
mov
dec
gs
imul
and
stc
mov
rcrb
sub
xchg
inc
orl
pop
scas
jno
addr16
mov
mov
ljmp
sub
add
int3
or
xchg
push
stc
dec
sbb
add
adc
pop
popa
inc
add
cmpsb
mov
sti
leave
push
or
jmp
cltd
bswap
mov
and
shr
out
mov
mov
and
jmp
pop
xchg
pushf
push
adc
jo
push
dec
jecxz
loopne
iret
jmp
and
and
subl
inc
in
sbb
push
inc
push
in
inc
lret
lahf
outsl
imul
xor
in
lods
xchg
fwait
push
cmp
pop
pop
mov
dec
iret
adc
stos
gs
mov
mov
pusha
push
aam
mov
xchg
ffreep
fs
mov
or
lods
movsb
andb
and
mov
mov
jge
fwait
lods
je
cwtl
mov
mov
aaa
jge
push
pxor
mov
lret
adc
pop
jne,pt
pop
inc
outsb
cmpsl
arpl
jl
movsb
mov
pop
ss
lahf
enter
add
jge
aam
fadd
mov
mov
pusha
add
in
sub
rcrb
mov
pop
push
mov
adc
rcll
mov
lahf
push
aad
mov
jo
and
dec
sub
add
ja
repz
or
pop
mov
cmpsl
cmpsl
fidivs
imul
stc
jns
int
lret
outsb
xor
pop
pop
adcl
dec
shll
insl
mov
aam
push
ds
js
mov
inc
nop
cmp
lahf
enter
mov
push
sbb
xlat
lods
mov
push
mov
mov
cwtl
dec
cli
cmp
mov
or
jne
xchg
sub
dec
pusha
add
push
mov
roll
mov
xchg
popf
push
adc
int
inc
aas
cmp
into
mov
loope
push
mov
lcall
dec
pop
xor
xchg
sub
jmp
nop
hlt
int
inc
imul
out
push
ja
out
inc
and
lds
jae
fstpl
cli
cwtl
or
es
stos
mov
test
fdivrl
stc
mov
test
jbe
mov
xchg
cmpsl
pop
loop
adcb
sub
mov
icebp
adc
inc
inc
inc
pop
nop
insb
or
imul
adc
stos
rorl
in
xor
enter
xchg
jl
ret
cwtl
push
cwtl
mov
xor
clc
or
adc
inc
or
daa
xchg
mov
jnp
mov
fcmovnbe
dec
xor
mov
pop
sub
mov
das
sub
jne
push
pop
andl
mov
sub
xchg
inc
jb
test
pop
jecxz
imul
dec
mov
xchg
div
les
pop
cld
hlt
pcmpeqw
pusha
jecxz
idivb
inc
fxch
pop
xor
xchg
xchg
cmpsb
and
negl
enter
pop
mov
stos
adc
ficoml
xchg
adc
loopne
leave
add
movsl
mov
popf
cmpb
or
scas
insl
or
ljmp
cmp
rcll
push
out
ljmp
or
ljmp
mov
outsb
mov
pop
loopne
mov
lods
push
mov
mov
hlt
pop
lods
daa
cltd
push
mov
and
push
lock
std
sub
jnp
sub
lea
sub
push
mov
dec
or
sbb
mov
push
adc
adc
cwtl
cmp
inc
xor
cwtl
dec
cmc
aad
xchg
lret
mov
xchg
pop
fs
dec
mov
shr
je
sub
xchg
iret
or
push
fadd
popa
rorb
aam
dec
inc
aaa
adc
jl
jmp
mov
pushf
push
adc
sub
cmp
mov
sub
test
pushf
cmp
mov
es
xchg
cwtl
sbb
xor
out
clc
cwtl
pop
insb
das
add
sbb
fwait
scas
xor
adc
int3
fwait
sub
push
fsubl
dec
mov
cwtl
addr16
aas
imul
hlt
sub
inc
iret
sar
das
sbb
insl
pop
or
pusha
shlb
fwait
xchg
jns
inc
test
dec
jb
divl
add
movsl
ljmp
mov
lods
rcll
adc
aam
leave
arpl
xchg
and
inc
xchg
add
sub
xchg
dec
das
pop
pop
test
mov
cwtl
jo
subb
jmp
xor
js
jl
mov
mov
add
and
je
push
pop
lret
das
mov
push
sbb
pusha
cmp
lea
adc
repnz
fcompl
push
or
jns
dec
mov
ds
cmpsb
aam
add
lods
in
dec
dec
loope
ljmp
es
dec
cmp
scas
mov
vphadduwd
dec
imul
out
xchg
jbe
outsb
call
shlb
fistps
xchg
enter
pop
in
dec
sub
and
mov
lahf
out
pop
adc
popf
mov
sub
adc
cmp
add
sub
jns
inc
jnp
push
push
xor
pop
mov
mov
movsb
mov
push
in
pop
push
cmpsb
cltd
mov
sbb
cmp
mov
sub
stos
leave
loop
rcl
cwtl
inc
scas
dec
pop
popa
add
jo
inc
cltd
pop
daa
mov
mul
cmp
inc
add
and
outsb
dec
cs
pushf
and
inc
cmp
dec
lret
hlt
std
in
or
fmull
pop
push
pop
outsl
imul
iret
dec
inc
cli
stc
call
sub
lods
dec
rorl
jno
int3
les
imul
imul
sbb
cmp
dec
leave
jg
stos
mov
fsubr
add
push
andb
jg
hlt
inc
leave
loope
insb
jecxz
clc
or
mov
out
sarl
hlt
sub
sbb
push
dec
dec
out
xchg
stos
nop
cld
lods
rcll
hlt
pop
sub
test
arpl
movzbl
or
cld
fildll
mov
fistpll
lock
sub
sarl
ljmp
pop
fs
xor
pop
dec
fistps
int
sbb
inc
xchg
or
cmc
inc
sbb
insl
pop
rcrb
iret
out
iret
outsl
insb
mov
xchg
adc
ljmp
hlt
aaa
sbb
repnz
hlt
jbe
gs
xchg
mov
cmp
test
adc
rclb
mov
sbb
xchg
xchg
insl
and
push
jl
nop
dec
fcoms
sbb
mov
mov
mov
dec
jle
inc
push
cmp
pop
xchg
add
fisttpll
mov
std
sub
nop
pop
pop
jbe
dec
inc
in
test
sub
jle
lcall
dec
fistpll
mov
sbb
mov
and
jle
adc
pop
inc
stc
movsb
loope
ljmp
sub
out
scas
shr
leave
test
or
aam
xor
in
jl
movsb
xor
xchg
mov
jns
icebp
repz
das
jle
outsb
sbb
push
and
mov
scas
stc
mov
cmc
out
pop
test
xchg
ja
ja
dec
cmpb
sub
in
jecxz
inc
fistl
xchg
push
aad
push
std
insb
dec
loopne
stc
pop
mov
dec
in
xchg
fcomps
lahf
mov
mov
cli
in
xchg
out
movd
lret
xor
pop
loope
into
movsl
add
sbb
jae
ror
adc
movsb
movsl
fmull
data16
or
repz
std
xor
sbb
sbb
inc
xor
inc
mov
xchg
mov
add
stos
sarb
fdivl
jge
gs
dec
outsb
sbb
pop
mov
fimuls
jns
ja
push
sbb
pop
aam
mov
sbb
fwait
addr16
icebp
xor
lea
data16
or
xchg
mov
push
jecxz
adc
pop
daa
es
inc
inc
inc
daa
and
repnz
mov
dec
popf
add
pop
mov
sub
in
lds
cmpsb
sbb
push
test
push
sti
push
outsl
imul
lcall
jg
outsb
js
pop
popa
mov
lahf
sub
sbb
xchg
scas
cmp
in
sahf
pushf
ljmp
pop
adc
push
lahf
out
addr16
xor
loopne
adc
test
notl
shl
add
aad
mov
and
cmp
test
bound
mov
xchg
ret
iret
cmp
cmc
gs
in
cmpsb
mov
sbb
jo
in
stos
lods
in
out
insl
not
cmp
int3
loope
call
adc
test
and
mov
in
pushf
and
leave
add
fadds
dec
xchg
inc
filds
aas
sbb
fadds
xchg
ljmp
rorl
nop
lods
pop
outsb
leave
movsb
jne
stos
and
into
popf
jne
mov
cli
adc
push
stos
outsb
and
xor
fisubrs
lock
rcr
test
je
pop
lods
and
pop
stc
fsubrp
xchg
imul
mov
mov
cmc
or
ret
mov
mov
popf
cmp
xor
adc
jns
loopne
mov
mov
xchg
pop
pop
adc
std
lock
adc
mov
out
fwait
aaa
jnp
jl
xor
adc
mull
or
jge
dec
ljmp
xchg
lods
in
sti
dec
jb
scas
ljmp
fwait
pop
xchg
ljmp
adc
aad
loop
orl
push
sbb
scas
bound
js
aam
dec
adc
add
lods
pop
into
xchg
pop
int
push
iret
into
pusha
jb
fistpl
das
inc
outsl
xchg
fisubrl
lods
sbb
inc
in
or
jl
or
into
xchg
pop
jae
mov
aam
fwait
mov
jns
shrb
cmpsb
mov
fldl
mov
cmp
shl
inc
or
push
addr16
inc
cld
cmp
daa
add
negl
sub
push
div
in
cwtl
mov
and
and
ds
mov
bound
mov
pop
lcall
aam
iret
int3
fisubrl
xchg
fimuls
pop
mov
add
pop
xchg
dec
bnd
in
jge
push
dec
add
mov
std
dec
sti
sarb
cmpsb
push
js
ret
sbb
ret
mov
in
cmc
fimull
push
imul
repz
mov
aam
mov
imul
pushf
cmc
pushf
push
mov
dec
dec
hlt
sbb
and
sahf
pushf
jmp
mov
xchg
lds
rorb
sti
mov
hlt
outsl
adc
negb
mov
sub
lock
aam
add
or
test
out
test
or
data16
in
jmp
testl
ret
push
mov
enter
jp
stos
add
lods
cmp
and
push
xchg
pop
outsb
push
add
scas
jbe
bound
xchg
iret
jns
clc
mov
scas
shrb
in
sub
adcl
out
cmp
cmp
pop
push
or
flds
scas
aad
inc
mov
inc
pop
xor
enter
lcall
xor
std
out
and
fcoms
fmul
out
add
das
ja
inc
pop
mov
jo
mov
push
test
sbb
push
popa
inc
mov
sub
add
inc
xchg
lea
pusha
xlat
push
pop
mov
repnz
js
push
icebp
and
lret
push
out
out
je
sub
fsubr
pop
fdivr
push
jb
ret
loop
call
stos
add
mov
xchg
loope
loope
inc
arpl
fs
repnz
lock
ljmp
cmp
inc
lods
jp
das
stos
xchg
dec
pusha
adc
and
mov
inc
mov
es
jmp
repnz
adc
rolw
addr16
sahf
xor
xchg
add
stos
call
cmp
lret
cltd
xchg
std
dec
or
adc
push
fistl
rolb
mov
cmp
push
add
into
push
add
aam
out
sub
ja
pop
rcrb
pusha
cltd
enter
push
ret
or
mov
orl
jo
ret
sbb
or
mov
pop
lock
js
mov
lret
idivb
bound
and
pop
push
fwait
push
adc
lret
ss
mov
in
mov
pop
fcomps
jne
dec
jno
inc
aad
push
push
pop
xchg
mov
push
dec
push
dec
in
push
cmp
insb
mov
cltd
pushf
sbb
outsl
sub
call
leave
xor
gs
mov
sub
ret
ja
cwtl
fisubl
mov
pop
pusha
mov
icebp
pop
mov
add
iret
dec
xorb
jb
dec
and
mov
sbb
test
jg
xchg
icebp
mov
loop
test
pop
insl
lret
mov
rcl
shr
out
out
xor
jb
add
icebp
mov
in
xor
sbb
jnp
es
cwtl
std
stc
jbe
pop
push
pop
in
adc
jns
mov
mov
and
es
popf
inc
fs
push
sahf
out
adc
sbb
or
mov
movsl
popa
test
inc
sbb
pop
arpl
cld
dec
ljmp
bnd
mov
dec
scas
test
mov
ds
je
jle
pop
cltd
clc
das
into
rcr
adc
daa
test
rorb
loop
loopne
hlt
fwait
mov
leave
dec
pop
xchg
mov
insb
jge
sbb
xor
cmpsb
iret
mov
sub
mov
jmp
sbb
mov
repz
push
roll
pop
adc
push
les
jp
cli
or
in
or
daa
or
or
push
dec
insl
out
adc
xchg
inc
push
mov
data16
stc
filds
movsb
outsl
jne
out
loop
dec
lea
addr16
mov
mov
jo
test
xor
lock
xlat
ficomps
dec
push
jg
inc
add
adc
iret
lods
push
xor
lea
pop
xchg
fimuls
add
or
adc
jp
aam
jp
popf
add
adc
in
movb
ror
arpl
pop
movsb
insl
push
movsl
sbb
push
dec
xor
sub
push
jg
jmp
ja
xchg
inc
in
enter
popf
push
add
adc
add
adcl
dec
jbe,pn
movsb
jno
lea
sub
insl
mov
outsl
inc
sbb
lahf
loopne
clc
jg
fistpll
icebp
mov
popf
jle
fidivs
pop
test
movsl
push
fdivp
ja
dec
test
and
scas
mov
cmp
pop
adc
out
and
iret
stos
pop
push
imul
sub
mov
pushf
or
sub
fxch
loop
lret
mov
mov
mov
xor
adc
pop
mov
jg
and
les
imul
dec
xchg
sub
pop
mov
inc
mov
xlat
push
push
lahf
mov
cmp
test
js
cmp
and
icebp
call
push
rclb
adc
push
inc
sub
mov
aad
mov
adcb
ljmp
inc
pop
ja
sbb
lret
sub
sub
and
enter
fistl
jmp
scas
xchg
outsb
sbb
movl
dec
pop
rorl
mov
push
adc
lods
loope
insb
jecxz
push
dec
iret
in
jno
adc
push
fmuls
fldt
pop
das
out
xchg
jge
pop
or
inc
addr16
scas
and
jnp
clc
sub
gs
fs
inc
cmp
into
cmp
lds
push
push
jl
adcb
add
inc
jmp
mov
push
push
dec
pusha
and
test
in
fdivrs
es
sti
faddl
push
das
roll
lret
inc
add
ds
shlb
mov
fmulp
outsl
subl
add
lea
pop
lea
cmp
pop
cwtl
sbb
xchg
or
fsubrp
in
jl
adc
inc
mov
pop
lods
mov
cmp
sahf
mov
loopne
or
or
es
in
outsb
lret
lock
pop
rolb
shl
aam
jb
fisubs
xchg
scas
mov
mov
dec
outsb
dec
rorb
mov
dec
inc
pushf
mov
push
repz
add
mov
lret
pop
pop
sbb
adc
adc
add
in
xchg
ja
mov
mov
adc
and
nop
adc
cld
mov
das
mov
ficomps
outsb
mov
addr16
pop
ljmp
repz
sbb
pop
fwait
stc
push
stos
enter
iret
movsl
ds
sub
mov
ss
icebp
stos
cli
push
cwtl
sub
cwtl
push
inc
insb
lock
stos
adc
out
xor
subl
in
insb
jecxz
inc
sub
push
int3
fcmovbe
mov
adc
xor
cltd
sbb
lods
arpl
jge
pop
mov
addb
rolb
inc
xor
add
pushf
push
mov
loop
lods
mov
sub
or
mov
movsl
mov
lock
or
movb
lds
xchg
sbb
mov
ds
inc
inc
daa
cmp
add
push
mov
add
ljmp
enter
mov
pop
jl
inc
roll
adc
cli
cwtl
repz
add
fwait
sbbb
xchg
lcall
mov
js
jb
or
pop
repz
arpl
cs
insb
in
iret
shll
pop
mov
sbb
lea
pop
test
jnp
hlt
jmp
xor
movsb
arpl
pop
fadd
xchg
fsubl
pop
dec
mov
inc
push
cmc
xor
adc
inc
or
bound
jae
add
push
cmc
pop
dec
xchg
stos
nop
sahf
cmp
cmpl
push
js
mov
icebp
xorb
cld
jnp
add
sbbl
jno
out
xor
flds
xchg
gs
out
xchg
mov
lahf
fisubrs
mov
add
mov
stos
rdpmc
mov
je
fldenv
adc
mov
push
dec
jns
xchg
inc
pushf
test
in
cmpsb
cmc
inc
stc
or
adc
andb
in
enter
movsb
sbb
ficompl
pop
push
in
ret
add
sub
add
xchg
popa
mov
loop
dec
push
xchg
aaa
or
xchg
lret
pop
orl
ret
outsl
enter
std
dec
mov
pushf
push
or
inc
sbb
testb
icebp
or
pop
daa
xor
xor
movsl
push
cmp
sbb
imul
sub
or
mov
inc
dec
push
fists
mov
or
test
xlat
dec
inc
stc
add
lahf
add
ret
mov
add
aas
inc
xor
cs
inc
xchg
xor
mov
dec
lahf
shll
xchg
mov
add
idivl
mov
mov
ljmp
aad
xlat
adc
das
mulb
pushf
shufps
mov
aam
push
cmc
mov
repnz
out
mov
adc
push
or
jge
cmpb
jmp
jne
cmp
sbb
loope
out
adc
testl
out
loopne
in
scas
ljmp
cs
mov
out
sbb
push
inc
fwait
es
pop
mov
sub
pop
cmpl
pushf
push
and
std
insb
sbb
push
scas
imul
adc
dec
ja
cld
incb
add
mov
cs
pop
jae
outsb
aam
push
mov
rolb
popf
lahf
sub
scas
aaa
jne
sbb
inc
cmp
lods
and
xorl
adc
dec
pop
and
mov
jns
mov
jno
inc
pop
mov
in
or
fadd
or
xchg
fisubrl
jecxz
inc
push
xchg
loopne
cmpsb
fnstcw
push
adc
push
test
inc
xchg
dec
mov
movsl
loop
push
insb
popf
or
push
mov
and
mov
out
adcl
mov
xchg
int3
rcrb
call
adc
stos
icebp
sbb
pop
sub
mov
lea
cltd
cmpsl
mov
cmp
pop
popa
and
or
mov
mov
popf
cmp
je
and
fisttpl
pop
sti
adc
cli
out
push
inc
aaa
pop
jno
xor
mov
dec
adc
pop
hlt
sti
in
jb
mov
je
and
jmp
adc
xchg
andl
lods
and
sbb
out
add
push
ss
out
int3
ja
and
rolb
add
js
adc
mov
push
cmp
dec
enter
mov
nop
js
mov
rclb
mov
fsts
dec
loope
add
sbb
mov
int3
mov
xchg
dec
rcrl
mov
cmp
roll
test
sti
leave
ret
cltd
or
in
mov
imul
jnp
rorl
ljmp
les
ss
stos
xlat
stos
js
imull
push
lcall
testb
sti
mov
xchg
rorb
or
js
addl
sarb
aam
xchg
push
push
push
xorl
enter
or
test
pushf
jbe
dec
fs
sub
jl
fidivrs
mov
aam
adc
nop
imul
or
mov
push
aam
test
xchg
push
ss
jns
movsb
inc
sub
mov
jnp
mov
movsl
mov
mov
or
push
shrl
sbbb
test
jle
lret
and
cmp
or
jno
clc
sbb
mov
ja
adc
inc
fsubs
pop
mov
aaa
and
adc
adc
faddl
fdivs
loop
loop
cwtl
mov
add
lods
cli
std
mov
repnz
pop
or
sub
cwtl
sub
xor
ja
mov
mov
orb
in
and
adc
ds
das
and
cld
test
cmp
lods
xor
aam
cwtl
sub
sbb
jbe
int3
cmp
xchg
mov
mov
int
inc
cmp
add
ss
stc
daa
pop
outsb
hlt
add
inc
mov
push
mov
mov
mov
or
mov
push
shrb
dec
fwait
imul
xor
cmp
fists
xchg
pop
push
in
inc
mov
pop
cmpxchg
in
movsl
imul
and
mov
or
repnz
push
xor
mov
sub
push
mov
iret
fstps
and
mov
jae
fld
dec
pop
sarb
shl
test
or
maxps
mov
jb
subb
mov
out
mov
out
cmp
fdivl
or
rolb
inc
mov
sti
dec
pop
stc
fwait
sub
in
ret
out
push
cmc
adc
leave
bound
ja
push
push
shll
out
lock
ret
jmp
int
push
push
xor
ret
mov
insl
popa
push
in
mov
mov
sub
add
jnp
mov
inc
add
mov
sbb
lcall
subb
push
testl
dec
add
ja
gs
sbb
loop
fisubrl
ficomps
xchg
jecxz
imul
fldl
lcall
ret
inc
negb
out
sahf
sub
movsl
sbb
fstps
xor
mov
adc
sbb
add
cwtl
jns
add
xchg
stos
fcmovnb
test
mov
ljmp
push
lea
or
lret
lahf
sbb
adc
sbb
shrl
adc
arpl
testb
push
leave
pusha
and
jb
push
icebp
fsub
les
jg
inc
add
iret
xchg
sti
repz
pop
in
cmpsl
scas
movsb
stos
mov
icebp
aaa
imul
pop
adc
out
sub
in
jg
jecxz
adc
daa
or
push
sbb
mov
imul
popa
not
sub
pop
and
pop
inc
leave
in
pushf
sbb
out
sub
scas
movsl
bound
mov
cmp
push
pop
aas
dec
fwait
sub
mov
push
sub
fsub
sub
hlt
aam
xchg
cmp
int3
pop
idivb
or
leave
ljmp
cmp
mov
movsb
add
test
mov
imul
or
aam
mov
and
shlb
pop
icebp
xchg
xor
nop
mov
sub
imul
loop
xor
rolb
cmp
inc
xchg
orb
scas
das
sbb
cmc
cmp
movsl
xchg
insb
out
pop
sub
dec
mov
mov
pushf
popa
das
mov
add
mov
push
and
andb
inc
push
out
xchg
mov
xchg
mov
jle
lret
xorb
or
ljmp
mov
lods
jle
stos
lds
cmp
sub
loopne
test
inc
or
ret
inc
in
mov
inc
sbb
mov
out
pop
fs
test
xor
or
adc
rcrl
dec
inc
mov
and
sbb
lret
jge
addr16
fbstp
das
xor
mov
lcall
mov
dec
test
in
cli
xchg
jo
in
and
mov
cmpsl
lret
inc
pop
mov
dec
daa
js
sbb
and
mov
std
aas
cld
xor
pop
jb,pt
out
into
inc
hlt
xor
mov
stc
xchg
dec
ja
sti
fistpll
outsb
call
jb
jecxz
insb
lcall
arpl
nop
inc
aad
sbb
jno
int
push
shrb
sub
mulb
popf
daa
es
aaa
sbb
mov
sub
xchg
fisttpll
adcl
adc
rcll
daa
sub
inc
cmpsl
stos
jo
stos
xor
xor
fsubl
cli
cwtl
in
xchg
and
and
jb
sbb
sub
xor
adc
mov
mov
or
inc
lret
out
bnd
rorl
push
js
mov
inc
dec
push
fsts
shr
pop
cmpl
movsb
xor
jp
fidivl
mov
adc
jns
mov
inc
xor
fidivrl
cld
mov
ja
cmp
mov
dec
mov
push
cmp
pushf
popf
je
xchg
fisttpl
push
ljmp
or
insl
xor
mov
cmp
test
or
out
push
repz
insl
sbb
or
dec
repnz
dec
mov
into
incb
jns
cmp
stos
repz
inc
push
xor
mov
mov
pop
adc
sbb
adc
lods
test
dec
in
lahf
jo
mov
xchg
into
sub
outsb
andl
fwait
mov
dec
out
dec
add
or
jne
pusha
mov
repnz
xor
cmpsl
sub
imul
jo
add
jbe
jp
mov
mov
push
mov
fidivrl
pop
cmp
daa
insl
stos
dec
sbb
js
add
adc
pop
in
leave
ds
and
mov
jb
jg
es
jbe
sbb
jle
cmp
adc
aad
stc
movsb
call
lock
xor
xchg
fistpl
xlat
xchg
jecxz
push
mov
data16
popf
xchg
pop
out
cltd
shlb
frstor
mov
aas
inc
xor
nopl
lds
push
ljmp
stos
xor
jns
mov
dec
mov
adc
das
jmp
pop
pop
mov
jno
mov
add
dec
mov
ret
icebp
add
insl
lds
ret
pop
push
ja
cmp
mov
dec
mov
add
fucom
lds
mov
dec
mov
mov
lock
ljmp
push
in
out
fsubrl
inc
jo
pusha
add
inc
mulb
test
lock
add
and
push
lahf
push
shlb
fadd
imul
lcall
mov
push
aam
icebp
aas
enter
jne
loop
push
mov
xchg
push
cmpsl
stc
dec
inc
mov
in
jbe
cmp
mov
add
mov
xor
movsl
push
push
cli
fwait
test
outsl
cmp
cmc
push
aaa
sbb
leave
cld
jecxz
adc
gs
inc
jnp
mov
pop
and
cmpsl
or
xor
push
les
aaa
jo
inc
iret
mov
mov
repz
mov
out
stos
test
jbe
or
lret
sub
add
push
mov
push
orl
sbb
iret
popf
push
jle
cltd
jl
cs
mov
test
and
ja
rolb
negl
imul
std
xchg
jle
ss
sbb
add
in
popf
movsl
mov
sub
jb
inc
cmp
pop
repnz
rcrl
sahf
xchg
jbe
dec
or
stos
xor
push
and
popf
in
and
cltd
adc
addr16
xor
sbb
sbb
loopne
cltd
jne
dec
lret
das
add
cs
jae
fistl
push
cwtl
pop
xchg
jp
mov
mov
dec
xchg
dec
ss
lret
pushf
mov
mov
ljmp
push
out
sbb
lahf
enter
mov
scas
dec
xchg
dec
icebp
cwtl
int
pop
fsubl
and
pop
push
cmpsl
notb
mov
loop
lcall
js
scas
lcall
mov
cmp
sub
mov
push
and
add
insl
mov
popf
loop
jns
repz
jo
pop
or
mov
pop
mov
cmpsl
fmuls
pause
in
fcoml
test
stos
dec
scas
shl
jae
int
or
scas
int3
mov
loopne
cmc
pop
inc
ja
aam
aad
fstl
iret
mov
push
lock
fld1
pushf
sub
cmpsb
add
ret
movsb
mov
es
and
xchg
dec
filds
add
iret
data16
into
lea
jae
pop
pop
lods
push
inc
pop
aam
sbb
cli
mov
sub
sbb
pop
mov
aad
aad
cmp
sub
scas
pop
xchg
sbb
adc
dec
pop
repz
add
jp
sarl
and
inc
dec
pop
jo
push
pushf
mov
outsl
lahf
pop
xlat
jnp
xor
in
or
lds
dec
pop
jg
loope
sbb
add
dec
sub
pop
mov
sbb
or
aaa
frstor
xchg
dec
in
rcll
cwtl
addr16
gs
xor
shl
andb
push
cltd
sarl
xlat
adc
xlat
mov
lea
dec
int3
jnp
xchg
sub
jp
int3
cmp
std
adc
flds
gs
cmp
cmp
js
pop
mov
push
fld
dec
addr16
mov
jae
lahf
inc
in
aam
out
popf
mov
mov
pop
mov
pop
popf
int3
mov
data16
jg
es
or
mov
cmp
pop
xchg
in
sbb
inc
add
divb
cmpsb
in
shl
jne
addr16
ret
cmp
pop
adc
fwait
push
ja
fstl
imul
mov
scas
test
jg
cwtl
inc
dec
add
add
mov
loope
bnd
cli
test
push
fstl
cli
inc
mov
popf
bound
sbb
inc
push
js
inc
mov
and
xchg
sub
sbb
cmp
in
pop
aaa
hlt
mov
push
into
adc
xchg
es
sub
add
iret
sarb
mov
mov
pop
inc
push
out
pusha
pop
mov
mov
mov
jno
jge
xchg
pop
and
in
inc
aas
cmpsl
popa
in
mov
stc
mov
inc
inc
dec
nop
jg
bound
loopne
es
fstpl
rcrb
call
inc
lahf
xchg
jo
insl
sub
mov
inc
aaa
fdiv
and
push
mov
loopne
fnstsw
xchg
repnz
sbb
jbe
sbb
loopne
xchg
inc
sbbb
scas
mov
jne
xor
cwtl
shll
xchg
xchg
adc
sbbb
push
ljmp
xchg
sub
test
push
cmp
adc
loop
and
enter
push
xor
test
stos
pop
mov
daa
mov
loope
out
outsl
sar
nop
pop
pop
shlb
pop
jecxz
fsts
mov
push
shrl
mov
jb
cmc
mov
cmp
pop
adc
test
aaa
cmp
jp
aaa
mov
outsl
cmp
mov
pop
mov
push
mov
popa
loope
mov
rcrb
les
dec
scas
cmp
enter
xchg
orb
jg
sbb
test
pop
das
mov
aas
lods
repnz
xlat
adc
xchg
cmp
ficomps
dec
cmp
cmp
sub
int3
push
push
stos
push
bnd
repz
push
mov
add
jbe
fwait
nop
jle
sar
lock
dec
les
lret
xorb
jo
inc
push
pushf
flds
mov
push
ret
xchg
push
int3
fisubs
xor
mov
push
mov
mov
repz
mov
cmp
arpl
and
movsb
add
data16
inc
sbb
adc
icebp
jecxz,pt
rcll
push
int3
aad
cmp
or
dec
das
repz
dec
loopne
adc
xchg
popa
sub
xchg
sub
shrd
push
out
xor
dec
sarl
aam
add
test
daa
jmp
sub
ss
ror
sub
nop
and
mov
xor
aas
movsl
and
das
mul
outsb
sub
push
aaa
pop
and
lahf
or
push
mov
mov
fcomps
loopne
inc
push
lock
mov
int3
test
inc
and
sti
data16
aam
fcomps
dec
push
xor
mov
loop
xchg
xor
mov
aaa
insb
cwtl
xchg
jp
add
inc
sub
add
adc
or
xchg
pop
daa
out
mov
lret
shrb
or
cwtl
rol
pop
xchg
mov
xchg
dec
push
jle
shll
cmp
mov
xor
cmp
iret
xor
dec
es
add
mov
and
data16
xchg
lret
lahf
mov
popf
fnop
sbb
add
cltd
sbb
scas
pop
dec
cs
mov
push
mov
movsb
not
adc
fidivs
add
or
add
je
cltd
shl
lea
xchg
fs
aad
push
sub
sbb
std
in
dec
jo
cld
js
scas
xor
aad
inc
aam
push
mov
lock
mov
pop
and
xchg
ficompl
xchg
inc
sub
mov
xor
sub
ja
in
push
pop
pop
scas
pop
cmp
arpl
push
mov
jns
sbb
shlb
addr16
pushf
mov
jle
popa
cmp
lock
popa
mov
fsubrp
negl
scas
out
adc
pop
fs
outsb
jns
or
out
pop
or
cld
test
outsb
dec
xor
push
inc
push
add
inc
test
test
inc
mov
sub
jb
mov
test
je
inc
adc
ficomps
lret
test
mov
popf
mov
clc
inc
int3
jge
popa
mov
and
or
scas
cmc
test
lret
mov
lods
movsb
jae
pop
or
ret
sub
sub
rorl
inc
out
test
push
std
fs
call
inc
filds
xorps
stc
imul
mov
mov
out
jge
push
and
mov
pushf
lods
mov
lods
xchg
imul
xchg
xor
aad
jg
aad
dec
stos
lock
jo
mov
mov
dec
xlat
call
add
or
dec
adc
pop
inc
mov
pop
jl
and
or
outsl
ljmp
scas
mov
dec
movsl
mov
ljmp
mov
int
add
mov
mov
and
movsl
scas
mov
or
or
pop
fisubrl
adc
xchg
mov
xor
call
ffree
in
stos
add
loop
stos
cltd
in
mov
xchg
xchg
into
pop
mov
es
pushf
cmpsl
repz
ret
mov
xchg
mov
xchg
mov
inc
jle
dec
mov
stos
or
fs
jne
sbb
test
sub
cmp
outsl
mov
into
or
inc
imul
adcl
in
pop
shrb
dec
cli
jb
daa
or
imul
and
ss
pop
push
iret
cmpsl
es
sbb
loope
dec
dec
or
mov
xchg
adc
sbb
cmp
lods
leave
sbb
lods
sub
push
adc
rcll
inc
jecxz
jo
das
hlt
xlat
insl
ss
sub
xor
arpl
jmp
pop
mov
sahf
mov
mov
rorb
dec
mov
repnz
movsb
pop
dec
lock
jns
cltd
add
or
or
lret
sbb
and
sbbl
xchg
outsl
in
mov
cmc
imul
sbb
add
je
pop
xchg
scas
cmp
lret
insb
jae
insb
pop
inc
rol
es
sub
fstl
jmp
fisubs
or
mov
ret
pop
lret
cmp
jge
inc
imul
hlt
push
lret
push
cmc
push
mov
dec
mov
rolb
ret
hlt
or
lret
enter
pop
int3
ja
and
add
xor
mov
leave
mov
pop
push
dec
xor
xchg
push
cmp
scas
lea
and
sub
xchg
jp
clc
mov
inc
mov
rclb
push
adcl
sub
mov
nop
mov
sbb
cld
mov
mov
sahf
pusha
icebp
cmp
ja
lretw
roll
fcom
add
push
fsubp
je
xchg
sbb
shl
pop
xor
rolb
xor
in
inc
out
mov
pop
loopne
sub
rolb
mov
push
mov
ffreep
roll
mov
mov
icebp
es
mulb
or
xor
das
data16
adc
ljmp
mov
inc
pop
cmpsl
mov
mov
andl
pop
fsubrl
jmp
shrl
push
cmp
and
push
lods
push
lds
fs
xchg
dec
cmpsl
xchg
push
std
and
sub
lahf
lcall
lret
lock
imul
imulb
push
frstor
xor
imul
cmpsb
jmp
pop
xchg
jns
cmp
sbb
sbb
or
popf
std
jecxz
adc
mov
mov
or
jle
push
lret
mov
push
cmp
pusha
jb
cs
sub
cmpb
sbb
dec
cs
cmp
dec
adc
cmp
sbb
lret
enter
aas
lods
mov
fwait
xchg
fistl
xorb
jmp
jl
or
dec
push
cmp
pop
data16
movl
xlat
push
scas
fiaddl
jnp
lds
add
push
adc
test
stos
lea
outsb
mov
int3
adc
js
inc
or
sub
jne
sub
xchg
mov
pushf
lret
adc
test
add
pop
mov
inc
jnp
idiv
pop
mov
cmc
mov
sti
add
sub
popa
push
mov
nop
ficoml
lretw
mov
stc
mov
stos
sbb
pop
add
mov
ror
or
jbe
xlat
push
mov
mov
xor
jno
cltd
popa
dec
out
push
inc
iret
add
and
rcl
add
sarl
inc
test
cmp
cltd
pop
mov
bnd
push
daa
out
test
iret
es
cli
and
les
adc
popl
scas
dec
push
pop
push
push
jecxz
aad
push
leave
mov
aam
loop
or
nop
sbb
lret
pop
test
xchg
mov
daa
out
or
sarb
dec
push
mov
jl
nop
fiadds
mov
xchg
push
lret
dec
sub
add
sti
fnstcw
mov
or
sti
push
ret
es
inc
stos
loopne
out
adcb
sti
pop
pop
and
mov
adc
or
and
mov
add
dec
out
pop
mov
push
cli
rol
call
fisubs
iret
mov
aam
nop
imul
loop
xchg
aad
adc
outsb
fistps
mov
iret
and
add
pop
movsb
push
jne
fimuls
xchg
mov
fstps
repz
mov
outsl
sub
sub
gs
sahf
jge
fisttpl
mov
fs
mov
push
imul
cmpsb
dec
lods
sub
rcrl
jle
test
xchg
pop
lret
push
mov
ret
push
xor
pushl
scas
sub
jae
fdivrp
mov
std
clc
in
nop
fiadds
roll
lret
mov
jb
mov
sub
lret
xchg
push
mov
pop
xchg
sbb
cmc
inc
jo
test
dec
aaa
arpl
push
int
cmc
out
in
cltd
jbe
ss
sub
repz
push
mov
fisubrs
lods
ljmp
aaa
test
cwtl
sub
sub
stos
add
int
aad
es
xor
ds
out
fsubrs
dec
outsb
sbb
jns
ret
scas
jae
aam
add
mov
adc
cli
in
dec
lods
sbb
inc
jmp
sbb
or
ja
inc
and
and
js
das
sub
pop
fcoml
notb
jl
lds
loop
jno
rcrl
adc
test
data16
lahf
pop
push
cmp
mov
cld
repz
add
mov
in
push
mov
repnz
xchg
push
push
out
cltd
hlt
lahf
iret
in
mov
dec
sub
jns
imul
jns
add
cmp
xchg
push
jne
and
xchg
pop
out
inc
aaa
add
jb
mov
add
inc
xchg
pushf
loopw
adc
mov
cmpsb
mov
std
cmp
insb
sub
adc
mov
out
sbb
fmulp
mov
rcrl
in
cmpsb
mov
in
ljmp
gs
lret
aad
cmc
push
negb
xor
or
pop
pop
mulb
push
pop
in
loop
and
and
rcll
cmpsl
sub
loope
call
pop
aas
lahf
call
dec
cld
and
xor
push
cs
imul
movsl
add
pushf
add
fldl
fstl
leave
loope
outsb
dec
xchg
or
jg
add
test
pop
jl
adc
xor
sbb
int3
pusha
fdivrs
sahf
test
xor
mov
pushf
popf
daa
lods
dec
int
or
push
negl
mov
jb
cwtl
mov
add
xchg
scas
iret
push
mov
lods
push
outsb
leave
ret
arpl
xchg
scas
mov
je
mov
dec
enter
js
mov
dec
cs
mov
or
cmp
test
popa
adc
xchg
xor
jg
mov
mov
js
lret
push
jne
mov
imul
mov
adc
pop
push
test
data16
pop
ja
adc
mov
sahf
jne
jmp
hlt
shlb
ficomps
aaa
mov
or
test
fldcw
dec
xor
mov
push
ljmp
jle
pop
push
mov
lahf
int3
aaa
sbb
jle
push
cltd
add
mov
ret
inc
stos
xchg
and
loop
xchg
dec
mov
out
mov
sbb
mov
icebp
push
data16
lods
mov
push
in
stos
or
sahf
mov
in
sti
cmpsb
add
in
ftst
daa
dec
push
insl
pop
mull
aad
decb
fmul
or
lret
and
lea
stos
adc
shrb
cmc
pop
dec
jb
adc
rolb
and
outsl
add
and
and
ljmp
int3
enter
lret
andl
cwtl
repz
test
out
negl
insl
fsubrs
dec
and
sub
pop
bound
cli
and
xchg
cmpsl
sbb
adc
sub
sbb
sahf
mov
shl
cmp
fs
out
lods
sub
mov
lret
adc
push
push
sti
or
fcomi
sub
mov
sub
fimuls
jae
add
mov
sub
jb
mov
xor
sar
mov
mov
fldl
aaa
iret
mov
js
mov
shlb
lret
rcrl
cmp
cmp
insl
into
and
cs
or
lahf
cmp
mov
push
jl
shlb
fcomp
cmpsb
cs
adc
test
mov
mov
pop
jbe
and
hlt
adc
lods
in
lock
gs
movsl
test
pop
orl
mov
clc
js
int3
or
mov
and
cs
add
stos
mov
jbe
ss
lahf
adc
test
scas
and
pop
mov
addl
lcall
push
fwait
xor
clc
dec
shrl
inc
xor
inc
ljmp
inc
xor
lcall
into
pop
and
xchg
inc
xchg
fidivrs
insl
in
add
gs
mov
and
int3
lods
cmp
sub
shrl
dec
sub
out
clc
std
in
xor
push
das
clc
xor
fbld
adc
xchg
jb
in
inc
icebp
dec
shlb
decl
pop
insb
mov
jo
mov
in
aaa
hlt
imul
xor
push
aam
push
jne
cmp
add
call
scas
in
dec
rcll
jno
call
iret
lods
repnz
xchg
adc
add
mov
ljmp
add
jnp
rorl
frstor
lret
repz
test
je
pop
cmp
sub
scas
movsb
out
lcall
cmp
adc
jmpw
push
cmp
lret
test
xchg
mov
cmp
pop
sahf
cmp
pop
jae
inc
in
sahf
xor
dec
pop
mov
mov
stos
aaa
cli
push
les
repnz
shr
pop
cmp
ffree
pop
in
add
loop
nop
stos
in
out
mov
mov
xchg
pop
sbb
push
stos
add
jmp
pop
push
leave
mov
fiaddl
xchg
add
mov
cmp
sbb
xchg
inc
into
cmc
jbe
adc
ret
push
ret
xchg
div
mov
addr16
aas
dec
cmpsb
repz
mov
mov
adc
xchg
pop
mov
ljmp
cwtl
xchg
push
fwait
lds
mov
cwtl
inc
nop
flds
inc
jg
sahf
addl
in
popa
jns
adc
mov
xor
and
push
mov
add
pop
sbb
hlt
mov
jl
sbb
sbb
repnz
xchg
loope
add
fdivrl
and
test
sbb
add
xor
adcl
and
dec
mov
pop
xor
cmp
shll
adc
std
jmp
adc
mov
pop
push
div
jecxz
sahf
mov
mov
popa
and
adc
jae
sbb
add
push
xchg
jp
mov
adc
lret
mov
sub
mov
push
mov
inc
mov
ret
jne
stos
cwtl
std
cmc
jbe
sbb
sbb
xchg
xchg
mov
lods
push
lahf
nop
fldenv
icebp
dec
xchg
sub
inc
jbe
xor
and
fstl
outsb
das
les
push
mov
test
add
sbb
sub
inc
outsb
cmp
pop
rcl
aam
pop
sbb
and
xlat
or
rcll
lds
cwtl
push
add
mov
xor
and
mov
add
fmuls
jno
cmpsl
lahf
rorl
ja
inc
and
dec
xchg
ljmp
pop
in
movsl
add
iret
mov
or
push
mov
cwtl
into
loope
inc
ds
mov
arpl
aas
mov
jp
push
sub
lods
push
icebp
ds
int3
push
stos
xor
sub
aad
lock
sbb
lret
ret
mov
mov
dec
xor
mov
repnz
jg
mov
inc
pop
pop
dec
fs
jno
inc
xchg
fldenv
and
mov
inc
fucomip
mov
push
lcall
dec
adc
or
add
je
jb
jb
je
arpl
push
arpl
outsb
add
insb
cmp
sarb
cltd
hlt
mov
pop
and
and
outsl
dec
fwait
push
cmpsb
dec
stos
aas
jb
xchg
int3
pop
inc
sbb
dec
bound
inc
daa
inc
sarb
stos
ret
stc
xchg
data16
cmpsl
jl
dec
addl
daa
paddsb
push
outsl
push
adc
xchg
int3
xchg
shl
and
subl
jbe
jp
pop
je
scas
mov
imul
fnstenv
sub
les
rcrb
xchg
sbb
pop
pushf
push
jnp
mov
sti
jb
and
mov
mov
out
bound
mov
cld
jge
sahf
out
sbb
fwait
mov
jl
mov
call
push
js
stos
int
jnp
push
pushf
mov
add
testb
sarl
mov
scas
mov
push
jmp
adc
insl
sub
xchg
mov
pop
lret
push
shlb
push
or
divb
enter
push
lret
mov
out
subb
lahf
cmp
hlt
insb
fcmove
jecxz
out
out
aaa
push
scas
sub
xchg
mull
jne
and
or
ss
push
fsubs
in
dec
mov
mov
xorl
and
dec
push
cs
js
sahf
jae
and
inc
fwait
test
je
push
iret
pop
sarb
and
fistpll
loop
inc
xchg
hlt
stc
sub
cmpsb
repz
scas
adc
rorb
or
shrl
pop
xchg
in
movsl
ljmp
push
push
pop
adc
pop
in
daa
dec
loop
sarb
add
add
aaa
into
fwait
test
push
add
mov
fimull
fists
jl
and
cmp
pop
and
or
std
push
mov
push
fisubrl
add
scas
sahf
push
dec
mov
adc
rcl
int
and
ss
and
das
roll
int3
in
cmp
repnz
insl
outsb
push
stos
ljmp
in
cmpsb
push
sub
dec
inc
add
cmpl
lods
enter
mov
add
mov
stos
into
or
adc
fists
sahf
scas
icebp
or
fwait
push
mov
lret
cli
push
repnz
mov
and
jmp
xlat
jno
outsl
neg
iret
or
xlat
les
call
cli
popf
stos
hlt
lret
mov
pop
jns
aam
push
cmp
push
negl
call
fstps
add
jns
xor
add
xlat
adc
test
xchg
push
pop
fucom
pop
and
add
xchg
test
subl
mov
enter
aaa
in
xchg
notb
adc
mov
jb
rcll
or
mov
fildl
inc
sub
mov
and
adcb
mov
cmp
arpl
pop
in
cmp
lods
int
mov
test
pop
ret
popa
inc
jp
shl
into
inc
in
jae
pop
cs
xor
adcl
mov
ja
fldcw
adc
pop
push
rclb
xchg
testl
and
pop
addr16
inc
pusha
hlt
push
movsl
jae
jae
call
ret
insl
divb
and
inc
imul
xorl
iret
mov
or
and
jecxz
pop
dec
push
jae
sbb
cmpsl
ja
stos
adc
fildll
aam
ds
dec
adc
dec
jl
iret
popa
fwait
push
das
les
insl
inc
mov
shrl
or
repnz
mov
xchg
mov
inc
mov
cmp
lea
push
mov
xchg
data16
mov
loopne
xchg
and
jo
sub
xor
sbb
cmp
stos
dec
mov
mov
jl
shrb
fcmovnbe
and
mov
mov
test
sbb
sti
aas
cmpsl
andb
xlat
rcrb
dec
xor
cli
jb
sub
jns
pop
mov
mov
leave
fwait
mov
add
lea
ficoml
cmp
sub
jmp
mov
adc
negl
addr16
shlb
or
sub
jbe
mov
xchg
dec
es
mov
jno
fidivrl
data16
or
pop
push
jne
repz
xchg
pop
scas
sbb
cmp
xchg
pop
rolb
add
rcrb
out
popa
xlat
xchg
jne
shlb
and
sub
lcall
clc
andps
jmp
sbb
enter
nop
mov
lret
ret
cltd
cmp
sub
sub
xlat
in
std
mov
mov
xor
pop
ret
cmp
mov
pusha
and
inc
pop
cltd
and
mov
or
xchg
dec
addr16
pop
jo
shr
sbb
pop
fisubrl
sub
shr
push
inc
sbb
test
inc
or
repz
fsubs
xchg
popa
push
adc
mov
jg
dec
lcall
pop
test
jmp
xor
add
rclb
xchg
call
clc
lods
mov
jle
out
dec
imull
mov
vpsrlw
dec
pop
jle
test
faddl
aad
mov
dec
sbb
pop
fidivl
in
dec
dec
mov
mov
adc
mov
clc
ss
mov
lahf
fadds
jl
pop
jle
jecxz
outsb
andb
pop
sub
xchg
and
jb
int
dec
jge
iret
adc
push
mov
xorb
xchg
ret
imul
inc
aad
add
pop
mov
mov
dec
gs
mov
push
scas
enter
pop
cs
dec
lds
push
stos
fnclex
daa
mov
mov
cli
insl
jns
in
mov
mov
cs
and
jge
sbb
sbb
push
stc
das
lahf
dec
mov
mov
add
loop
idivl
aas
pop
jmp
hlt
sub
dec
xor
ficoml
fwait
into
or
cmpsb
rolb
fldl2e
sbb
pop
enter
or
or
call
hlt
sub
cwtl
cmp
sub
ljmp
stos
movsl
pop
mov
stos
mov
movsb
xchg
ss
rorl
cld
inc
xor
xor
fiaddl
mov
mov
sub
xchg
jle,pt
add
call
jl
cmc
aad
rorb
sbb
xchg
cmc
inc
mov
iret
enter
or
std
cmp
mov
mov
xchg
les
inc
shll
movsb
xchg
jp
sub
into
in
les
jae
pop
mov
lods
cmp
mov
ljmp
sbbl
or
mov
mov
shll
dec
lahf
dec
jae
sbb
push
loop
shrb
pop
rcrl
pushf
dec
inc
popa
and
jno
sahf
dec
pop
gs
dec
sub
and
arpl
xchg
dec
jne
int
cmp
outsb
and
inc
sti
sub
mov
ja
cmp
push
in
aam
ss
in
cmp
out
icebp
jmp
repz
pop
fsubr
pop
daa
mov
xchg
push
mov
repz
loop
jle
push
adc
fstps
lea
pop
inc
mov
shrb
pop
sub
xchg
push
push
popf
incb
cmc
stos
sbb
arpl
sbb
add
push
jmp
adc
cmp
orl
sbb
fcmovbe
mov
pop
xchg
cmp
dec
fcmovne
push
add
sti
xor
jmp
xchg
or
pop
mov
inc
jno
out
xchg
in
pop
inc
cmp
loope
stos
push
bnd
aad
push
enter
bound
nop
pop
jno
icebp
adc
mov
aad
mov
lods
shrl
xor
or
lahf
add
or
insl
pop
and
xchg
xor
mov
jmp
adc
dec
push
pop
mov
shrl
cmp
scas
bound
push
cmpsb
aas
aam
or
mov
jmp
push
pusha
test
mov
out
cmp
jb
adc
outsl
jo
jb
js
add
inc
push
cmp
sbb
jns
in
xor
je
pop
pop
mov
sub
nop
or
push
pop
data16
inc
ss
sbb
adc
sub
fwait
pushf
out
add
call
jno
lods
test
add
fsts
sub
sbb
leave
mov
xor
push
stos
and
xor
lods
lods
mov
sbb
scas
bound
int3
into
sahf
mov
jb
mov
and
fidivrl
pop
or
je
cwtl
mov
mov
adc
mov
sub
imul
mov
gs
adc
in
push
ret
pop
jp
aaa
inc
push
mov
daa
or
sti
sub
lods
sub
fwait
ret
push
out
dec
fcoml
sbb
sub
push
and
ss
sbb
cmp
icebp
ss
mov
adc
stc
add
push
inc
mov
mov
sbbl
push
and
ja
mov
test
push
enter
jmp
push
fnstsw
lea
jp
xchg
mov
test
jno
push
insb
mov
fidivrs
int3
push
push
ss
push
xchg
xchg
andb
or
mov
xchg
sub
repnz
cmc
xchg
repnz
xchg
loope
sbbb
insl
xchg
and
mov
fisubrl
sarb
or
xchg
push
jge
mov
outsl
jg
bound
mov
cmpsb
inc
pop
mov
add
pop
loopne
out
cld
aaa
adc
push
inc
mov
mov
fcom
lds
mov
iret
and
adc
dec
lret
dec
insl
pop
mov
or
lret
cld
cs
xchg
lret
pushf
push
in
lcall
xchg
outsb
leave
mov
insb
mov
add
and
adc
aaa
loop
mov
cmp
dec
stc
insb
add
or
sub
lock
out
out
in
jmp
mov
test
jmp
and
push
orl
rclb
and
js
stos
and
cmp
in
lods
clc
aam
jp
lcall
sbb
add
inc
sbb
outsb
mov
enter
or
xchg
sahf
add
cmp
in
push
mov
inc
sub
mov
inc
pop
or
sbb
add
mov
cmp
pop
push
jo
ja
adc
fsubrl
mov
push
aas
mov
out
add
popf
adc
dec
les
mov
aad
push
dec
jmp
cmp
xor
dec
xor
mov
mov
xor
in
push
subl
and
scas
test
loope
loopne
ret
push
jge
rclb
stos
sub
daa
out
pop
pop
xchg
inc
push
fcoml
push
outsl
sub
idivb
fs
scas
mov
and
mov
or
lret
jmp
movsb
cld
outsb
jg
xchg
push
mov
bound
pop
das
gs
ja
movl
pop
push
int3
pop
push
jno
mov
and
mov
xchg
adc
mov
test
je
sub
xor
push
or
divb
out
push
lret
xchg
push
dec
mov
or
push
nop
fistps
dec
or
adc
scas
into
dec
xchg
mov
push
insl
test
cmc
insb
jl
insl
lret
hlt
test
and
mov
popa
mov
mov
pushf
enter
cmp
pushf
add
mov
mov
out
js
push
lods
inc
mov
int
ret
out
xor
icebp
fstps
int3
or
ja
sti
mov
mov
fstl
and
adc
push
cmpsb
sbb
mov
jne
sbb
or
sub
stos
pop
inc
pop
xor
das
test
movsl
cli
movsl
cld
mov
jge
mov
mov
stos
movb
sahf
add
cs
adc
mov
xchg
sbb
jecxz
pop
fsubrl
enter
and
bound
pop
cs
pushf
fstpl
and
jmp
sbbl
jmp
cs
lds
mov
jno
adc
jl
leave
xchg
rcrb
or
dec
push
idivl
xor
push
cmpsl
jge
dec
inc
sbb
adc
xchg
mov
cmp
je
jg
insb
into
push
addl
aam
cmp
cmc
leave
cmpsb
sbb
and
stos
mov
pop
jl
inc
lahf
inc
rcll
xchg
jmp
push
lahf
pop
sub
jne
adc
cltd
vmovaps
and
sub
pop
push
insl
cmp
mov
pushf
mov
mov
in
mov
shufps
jp
pop
fimuls
fcmovnu
scas
add
inc
inc
cmp
push
mov
call
cmp
int3
lock
cld
cmp
dec
aaa
and
xorb
je
int3
enter
xchg
insl
mov
push
call
jns
imul
scas
xor
mov
les
jb
mov
and
cmpsl
sbb
shrl
orb
sahf
sbb
jmp
jbe
in
outsl
fmull
sbb
nop
cmp
int
jnp
jno
add
jp
mov
mov
stos
test
icebp
mov
mov
pop
mov
rolb
cmp
fimull
ljmp
jmp
add
fiadds
in
cld
pop
call
pop
inc
mov
or
jo
in
jle
icebp
or
neg
push
or
jno
inc
dec
gs
push
jl
js
jge
shr
adc
nop
leave
xchg
popf
dec
pop
sbb
mov
testl
and
fdivrs
je
std
push
ja
jno
adc
add
ds
icebp
cli
jecxz
stos
jmp
jns
iret
push
push
mov
or
pop
sarl
mov
out
fnstenv
pusha
adc
dec
push
test
jae
sbb
mov
in
loope
cmp
movsb
mov
jno
and
in
scas
fnstsw
adc
shl
mov
pusha
bound
test
mov
mov
pop
push
dec
jae
pop
or
sub
fdivs
fcomps
ret
cmpl
mov
cwtl
ja
subl
in
sbb
mov
push
insl
cwtl
dec
and
daa
imul
hlt
cmp
mov
test
fstpt
xchg
xchg
unpckhps
outsl
lods
pop
cltd
and
mov
fcompl
and
pop
sub
popf
fstpl
push
xchg
pop
aas
cmp
ja
push
xchg
or
mov
jo
and
shr
jl
dec
cltd
mov
cs
mov
stos
cli
jne
stc
aad
ret
pop
mov
adcb
orl
lret
rorb
pushf
rorb
stc
pop
jae
jno
xchg
into
enter
dec
jne
lock
xor
push
xchg
lock
test
or
or
mov
lds
and
push
leave
fiadds
iret
sub
gs
lahf
out
xor
push
pop
jecxz
shr
dec
insl
loope
pop
loop
inc
jecxz
sar
sahf
mov
mov
mov
mov
mov
fwait
fs
mov
jmp
cmc
data16
pop
jp
out
and
push
arpl
xchg
add
loop
push
mov
pop
mov
sub
dec
adc
stc
cmpsl
sbb
sub
jl
ret
cmp
push
inc
sub
nop
sbb
jmp
imul
daa
andb
notl
in
pop
xor
inc
cmp
sub
pushf
notl
call
lock
cmp
mov
push
or
push
push
int3
lret
jg
dec
inc
jo
fistps
mov
in
imul
push
and
jnp
sti
lods
testl
push
stos
movsb
cmpsb
ja
or
xor
jnp
pop
xchg
add
out
imul
mov
cmpsb
repz
call
xchg
inc
push
jnp
mov
inc
iret
pop
rorb
in
pop
test
add
jno
push
imul
ss
mov
ret
and
xor
pop
das
inc
pop
xchg
cmp
and
jg
repz
enter
int3
mov
fisubs
mov
movsl
dec
pop
push
cmpsl
xchg
inc
lret
hlt
les
leave
push
pushf
je
int
or
je
pop
dec
or
addl
out
jmp
pop
fisttps
dec
push
scas
pop
push
cmpb
cmpsb
push
push
in
inc
ret
scas
xchg
mov
add
xchg
imul
ficoml
xor
sbbb
nop
jmp
mov
pushf
sbb
and
test
jns
dec
mov
std
rclb
sub
mov
pop
cltd
adc
add
jge
mov
aam
scas
xor
cs
push
hlt
cmpsb
sub
pop
pop
jnp
add
clc
gs
aad
pop
sbb
popa
fists
pop
xor
dec
stc
push
xor
and
pop
ret
call
shr
or
inc
mov
sub
lea
idiv
xchg
mov
ficoml
stos
push
push
add
inc
push
or
adc
xor
xor
adc
pop
mov
int3
jno
sahf
popf
adc
mov
add
test
sbb
jl
test
mulps
add
mov
sahf
je
xor
and
scas
lock
pusha
loop
dec
leave
or
push
xchg
movhps
add
testb
aad
sbb
hlt
jns
orl
cmpsl
ja
cmp
aaa
lods
add
in
jno
lcall
mov
mov
je
nop
ds
add
test
push
aas
jne
sub
xor
mov
and
lahf
push
lds
mov
sahf
or
rorl
into
push
ss
cmpsb
mov
pusha
xchg
mov
jp
sti
or
inc
dec
add
mov
or
dec
push
leave
mov
xor
sbbb
lock
or
arpl
cmp
pop
daa
adc
mov
scas
jmp
fucomp
push
pop
leave
cmpsb
outsl
inc
xchg
cmp
mov
cs
push
pop
add
pop
fcmovbe
xor
clc
inc
mov
daa
je
mov
xor
cltd
xor
jbe
mov
lret
aaa
ret
inc
adc
sub
decl
cmpsl
stc
mov
add
loop
rolb
push
xchg
cld
pop
adc
inc
xor
cwtl
xor
jne
or
inc
mov
fnsave
dec
lahf
sub
decl
int3
in
lret
stc
std
enter
push
sti
mov
movsb
jmp
mov
or
aaa
xorl
sub
fisttpll
shrd
fucomip
aas
lcall
sub
mov
cmpsl
fists
inc
dec
xchg
and
fiadds
ja
cmp
adc
jo
cltd
xchg
int3
ret
fisubl
int
aaa
pop
insl
push
lcall
sub
hlt
add
call
pushf
int
cmpsl
mov
js
mov
cld
mov
outsl
fcompl
es
aaa
pop
inc
push
pop
mov
xchg
mov
dec
int3
and
mov
and
jns
fildll
pop
jecxz
test
dec
adc
pop
in
pop
jns
xor
add
ds
cmp
mov
dec
rcr
stos
xchg
adc
das
scas
icebp
cmpl
pusha
shlb
insb
clc
repz
xor
lret
jmp
popa
std
mov
and
aaa
pop
dec
shll
cmp
lcall
sub
adc
dec
mov
add
rcr
scas
out
push
addl
cwtl
lods
and
dec
add
sub
cmp
mov
jae
inc
jnp
std
scas
cmc
add
inc
jb
sub
into
push
popf
sub
cmpsb
adc
icebp
les
jge
xor
jle
mov
repnz
add
xor
ret
popf
fisttpl
mov
pop
inc
cmpsl
fstp
cltd
cld
das
fbstp
pop
or
enter
aas
jecxz
cmpsb
icebp
stos
sub
stc
adc
xchg
or
pop
cmpsl
xchg
push
insl
xchg
or
js
imul
test
mov
inc
in
and
pop
shrb
mov
dec
mov
mov
mov
push
loopne
ret
std
dec
ss
test
lea
es
sti
xchg
cmp
vorps
aam
jo
sbb
sti
popl
arpl
push
addl
inc
mov
outsb
int
sbb
sti
or
mov
aam
popf
and
sub
mov
mov
jle
xchg
rclb
movsl
inc
popa
mov
mov
sbb
lret
jnp
jne
inc
add
sahf
movsb
jle
or
mov
test
mov
mov
fmuls
lahf
push
lock
add
andl
jo
test
jmp
mov
xchg
jo
cli
mov
fcoms
sbb
sub
push
inc
adc
add
xchg
inc
ja
aas
adc
jg
loopne
dec
xchg
dec
lret
mov
inc
mov
addr16
inc
pop
scas
lods
cmpsb
flds
sub
imul
pop
stos
loope
fisubl
scas
adc
push
dec
sub
push
addr16
sahf
xchg
add
mov
daa
in
mov
stos
addr16
shlb
outsl
cmp
xor
cmp
sbb
inc
insb
dec
push
mov
cmp
fstpl
pop
and
popa
cli
mov
test
leave
mov
cmp
test
cmpsb
cmpl
scas
pop
and
bnd
movb
ret
std
mov
repnz
fs
popf
ljmp
or
outsb
and
or
hlt
addr16
je
jbe
fimuls
loopne
jns
rolb
test
push
rol
xor
mov
mov
idiv
sbb
jp
push
xchg
xchg
xor
mov
pop
mov
sbb
psubd
push
repz
jl
cmp
fidivrs
test
loopne
or
pop
or
outsl
arpl
ds
xlat
outsb
fstl
and
sub
fnstenv
mov
imull
sbbl
jno
cwtl
pop
and
cld
xchg
xchg
in
sbb
neg
in
cmc
pop
sub
xor
jl
test
pop
hlt
fnstsw
adc
cmp
aad
aas
test
xor
outsb
insb
jb
es
cli
mov
fldt
int
jle
popa
imul
inc
movsb
adc
xor
leave
daa
lea
jmp
ja
sub
arpl
mov
xor
xlat
add
xor
ret
jns
ds
cmp
aam
dec
mov
int
loopne
lahf
and
lcall
mov
mov
gs
jl
lret
nop
pop
insb
pop
inc
inc
push
mov
fsubrs
adc
mov
cmc
mov
add
imul
inc
or
mov
add
loopne
in
movsb
cs
push
nop
mov
sbb
dec
cli
pop
jmp
cmc
xchg
ljmp
mov
cs
test
xorb
test
sub
testl
sub
andb
pop
mov
jmp
shll
mov
les
inc
test
imul
insb
inc
sbb
out
call
add
lds
adc
pop
inc
into
dec
imul
loope
cltd
sub
mov
mov
fsub
cli
repnz
xchg
xchg
xor
push
divb
mov
lahf
sbbb
adc
push
pop
xor
stc
inc
out
repz
adc
mov
push
mov
jmp
js
dec
fs
or
ss
pop
enter
rclb
nop
push
pop
jg
outsb
or
imul
cmpsb
mov
adc
xchg
adc
loopne
mov
inc
push
popf
ror
sbbl
mov
or
jnp
mov
aam
out
aas
mov
cmpsb
leave
sub
xor
push
push
sub
mov
loop
adc
inc
xchg
xor
inc
movsb
add
int3
or
insl
xor
mov
dec
arpl
cmp
lahf
jo
test
add
movsb
push
idivl
ret
mov
nop
cmp
ljmp
hlt
jnp
adc
dec
dec
sub
aam
xchg
mov
imul
add
imul
mov
push
dec
out
in
lret
push
sub
ror
subb
inc
pop
stc
ret
inc
xor
je
ljmp
dec
test
add
lea
sub
jno
fucomip
daa
flds
or
mulb
adc
jb
or
mov
cmp
std
test
bound
or
mov
in
mov
icebp
or
xor
in
add
je
je
lods
movsl
ficompl
shl
icebp
mov
jo
fdivrp
lcall
push
adc
cmp
sbb
gs
andl
mov
dec
push
leave
fisubs
iret
jge
adc
sub
roll
cmp
sti
notl
inc
aad
jns
jo
dec
jmp
aad
shrb
push
ret
mov
pop
xchg
pop
xchg
xor
mov
fdivrl
mov
mov
sub
push
mov
jle
add
pop
aad
xchg
pop
enter
jb
jne
scas
stos
shll
dec
sarl
outsb
movntq
push
mov
push
xor
es
out
scas
dec
imul
sub
imul
xchg
fxch
xchg
or
stc
jl
sahf
testb
lret
xlat
out
or
mov
subl
push
pop
mov
leave
xor
pop
sarb
jle
pop
aam
jns
push
pushf
fisubs
xchg
lahf
mov
cmp
lcall
dec
sbb
adc
loop,pt
push
push
cltd
out
lcall
fmul
dec
cmp
xor
out
test
add
dec
loop
inc
add
or
pop
mov
test
sbb
pusha
fsubrp
sbb
in
div
lock
call
cmc
inc
outsl
xor
xchg
je
or
sub
mov
out
mov
mov
mov
jp
repnz
xchg
fstl
fs
or
aad
jle
mov
jae
setnp
and
insl
mov
xor
mov
sar
sbb
js
test
pushf
xchg
in
out
out
mov
and
sar
test
shlb
cmp
inc
movsl
sbb
push
sbb
in
dec
push
aas
inc
adc
cmp
aad
call
mov
out
push
cmp
stc
or
scas
dec
ljmp
sbb
inc
jmp
xchg
loopne
add
push
pop
test
lahf
cmp
imul
lahf
lods
lods
fcmovnb
fwait
mov
sbb
testl
mov
and
jge
xor
mov
arpl
dec
push
dec
es
pop
dec
mov
dec
jecxz
test
icebp
or
fisttpl
cmp
daa
addr16
ljmp
jne
jg
pop
or
jg
inc
inc
aaa
pop
cltd
and
sbb
push
clc
sahf
int
cs
std
pop
pop
lcall
jns
sbb
call
arpl
or
mov
push
cmp
imul
or
ljmp
lahf
adc
in
outsl
jbe
xchg
xchg
and
adc
movsl
dec
aad
mov
pop
testb
leave
ja
add
je
outsb
pop
push
sub
adc
mov
adc
cmp
idiv
notb
mov
lock
sarb
cmc
les
jp
test
xlat
xchg
aad
dec
call
hlt
jns
push
and
lds
sub
cmp
sub
popf
jmp
or
sub
call
addr16
je
add
mov
xor
mov
jae
pop
pop
push
dec
ss
je
xchg
movsl
add
lock
jnp
notb
aaa
mov
lret
sub
add
into
mov
js
adcb
sbb
push
xor
les
out
outsb
sub
fcmovu
test
cwtl
cli
gs
sub
xchg
lods
mov
das
or
repnz
shrb
mov
pop
ljmp
lahf
adcb
xchg
std
popf
jp
jne
pusha
cli
sub
shrl
pusha
push
data16
mov
loope
jmp
repz
shll
shll
sub
das
xchg
dec
push
ret
stos
push
fisubl
pushf
bound
mov
fwait
push
or
jecxz
and
jo
mov
mov
mov
ret
xchg
insb
int
lods
cmp
adc
pop
or
mov
hlt
jne
sbb
mov
jae
pop
rcr
jp
push
ret
js
out
into
and
lret
adc
mov
xchg
pop
push
pop
push
iret
xchg
stc
push
add
jmp
xor
repnz
cwtl
mov
sbb
into
out
lret
pop
shlb
mov
inc
ja
xchg
sbb
push
jl
inc
push
insb
or
cmpsl
and
jb
mov
scas
xlat
and
movb
mov
out
movsl
mov
inc
loope
sub
js
in
inc
movlps
and
adc
mov
push
sbb
xchg
in
add
jae
xor
inc
mov
push
aaa
js
inc
sub
jge
in
xchg
loope
mov
daa
js
mov
inc
gs
inc
and
inc
fisubrl
sbb
bound
add
fdivrl
sbb
repnz
enter
cmpsb
cwtl
jno
or
dec
aaa
arpl
xchg
dec
popa
je
out
fnsave
mov
ljmp
sub
lds
into
xor
add
arpl
xlat
rcll
xor
negl
push
and
js
pop
xor
insl
sbb
mov
stos
pop
imul
sub
push
jg
jmp
popf
into
mov
xor
pusha
ret
cmp
xchg
sahf
rcll
jae
mov
leave
jnp
dec
push
inc
jno
jns
xor
in
jecxz
cmpsb
xchg
and
cwtl
push
aad
and
or
daa
jno
and
inc
push
push
sub
repnz
pop
in
scas
add
gs
jmp
pop
xorl
test
xor
add
or
lret
lret
cmp
enter
xor
loopne
ja
push
add
data16
pop
cmpsl
cmp
mov
imul
dec
leave
xchg
jge
mov
and
dec
call
cmp
shlb
clc
rorb
dec
scas
in
inc
inc
inc
push
mov
aaa
outsb
mov
mov
fs
jp
mov
push
cmp
mov
fisubs
int
dec
dec
sbb
mov
clc
dec
sub
sbb
fdivs
add
ljmp
mov
imul
inc
divb
lahf
outsl
sub
cltd
jns
aas
or
lret
fists
xor
insb
pop
fildll
inc
imul
cmpsl
pop
xorl
inc
sub
sahf
lods
jns
in
out
enter
inc
jl
mov
xchg
mov
das
xchg
pop
cmp
xchg
sti
sub
xor
pop
jmp
sub
cltd
push
mov
mov
iret
fcmovnb
pop
xchg
xchg
fs
and
inc
decb
repnz
push
jg
loope
and
mov
popf
sub
in
stos
pop
or
cmp
lods
aas
adc
xor
ret
add
lea
push
roll
insl
xchg
call
out
ret
dec
in
xor
push
mov
cmpsl
dec
aad
dec
sbb
pop
jmp
daa
xchg
add
cs
addr16
movsl
ljmp
pop
jae
cltd
adc
xchg
jp
adc
roll
sub
inc
dec
inc
leave
and
or
lcall
xorl
add
add
movsl
xlat
scas
test
pop
data16
pop
xor
gs
test
sbb
je
pop
inc
rcr
push
push
repnz
aas
dec
pop
es
push
adc
repnz
pop
dec
xchg
arpl
cwtl
push
add
cmc
lock
lahf
outsl
movsl
cmp
aad
lods
popf
std
mov
xchg
or
repz
dec
pusha
mov
adc
inc
pop
mov
and
ror
mov
lret
push
dec
ret
jmp
fs
fwait
jns
jnp
insb
inc
ja
pop
jl
scas
rclb
outsb
jno
push
xlat
ficompl
cmp
xchg
sbb
dec
xchg
aad
jecxz
pop
nop
out
sbb
push
iret
jno
push
nop
jno
call
shrb
in
insl
add
pop
push
xor
loope
sahf
jle
test
cld
cmp
push
sbb
sahf
mov
xorl
fistpll
jne
cmp
fs
xchg
or
sbb
lret
push
sti
outsl
in
daa
sbb
les
lret
jno
mov
test
xor
in
sub
pminub
xchg
xchg
aaa
pop
roll
mov
cmpsl
insb
sub
mov
mov
mov
pusha
inc
mov
push
fsts
cltd
mov
sahf
adc
cmp
adc
repnz
cmovnp
icebp
mov
aad
icebp
shl
lcall
testb
daa
and
mov
cmp
mov
mov
sbb
mov
aad
sbb
lea
dec
test
mov
pop
mov
loopne
sub
push
gs
push
leave
imul
jmp
sub
clc
push
dec
sbb
mov
jmp
pop
add
sub
xor
aaa
inc
push
xchg
fildl
testb
adc
fimull
frstor
cmp
pop
mov
sbb
push
aaa
push
stos
xchg
add
ljmp
scas
pop
cld
inc
mov
jns
xor
div
mov
sbb
int
xchg
sub
sbb
dec
nop
adc
mov
es
mov
cltd
stc
lahf
cmp
xchg
ret
repnz
xlat
dec
xor
dec
mov
insl
xchg
inc
aas
adc
jnp
aam
fwait
mov
mov
jp
push
add
inc
std
mov
add
dec
pusha
sbb
dec
add
jl
movsb
aas
xchg
push
mov
loopne
dec
adc
xchg
or
sub
xlat
lahf
flds
mov
mov
cmp
and
orb
int
jle
popf
fucom
clc
mov
jmp
or
fdivl
jecxz
mov
xor
int
lods
hlt
mov
inc
stos
mov
fwait
stc
xchg
in
dec
mov
lcall
add
inc
movsb
icebp
push
lock
adc
inc
and
stos
adc
sub
mov
push
es
imul
stos
into
test
lods
cmc
mov
in
sub
popf
mov
sub
adc
fisttpll
push
les
jg
test
pop
js
andl
mov
sbb
adc
xchg
ret
shrl
es
sbb
in
add
clc
sub
aas
pop
sarl
jns
lret
daa
sbb
cmp
popf
dec
push
and
int
and
sarb
inc
add
add
ret
mov
mov
push
pop
or
cmp
mov
sti
xlat
gs
jbe
jnp
xchg
sbbl
xchg
call
mov
stos
sbb
mov
xor
pop
or
and
add
idivb
pop
xchg
adc
lret
stc
insl
movsb
sbb
jmp
jecxz
sub
adc
insb
fmull
addl
push
jp
sub
rep
jmp
out
test
test
fwait
stc
shl
shrb
adc
jge
test
add
ror
mov
cmp
rcll
cmp
pop
mov
bound
dec
icebp
jns
push
das
pop
daa
out
xchg
sub
aad
inc
sub
cmp
pop
add
mov
xor
dec
cld
ds
scas
enter
sub
inc
mov
scas
jne
jns
clc
clc
hlt
xchg
pop
sub
in
in
xor
cmpsb
popf
and
fcmovb
jp
gs
jmp
ret
scas
pop
fsubs
iret
pop
ljmp
dec
xor
into
jo
std
inc
inc
push
out
or
mov
daa
jne
into
fisubs
gs
mov
inc
mov
movsl
adc
jne
push
or
xchg
repz
insb
int3
cli
movsb
repnz
push
mov
mov
inc
xchg
ret
ficoml
sbb
sub
repnz
lcall
popf
fwait
jecxz
mov
loope
out
xchg
ss
mov
lods
cmpsb
jnp
insb
lret
lcall
loope
inc
and
addb
mov
stos
jle
dec
mov
push
imul
mov
sbb
pop
jns
int
lret
pop
dec
mov
stc
push
add
arpl
pop
or
jge
xchg
sub
sbb
mov
lds
mov
xor
stos
shl
dec
adc
repnz
leave
mov
pop
stc
mov
mov
outsl
in
aas
leave
das
xchg
push
pop
dec
sub
ror
add
inc
sbb
into
mov
bound
pop
sbb
ljmp
push
dec
fnstcw
in
mov
bound
xchg
and
inc
or
inc
aad
test
sbb
push
pop
popl
dec
aaa
inc
in
mov
pop
add
xchg
shr
je
js
sarb
mov
xor
dec
mov
loop
ljmp
jecxz
push
in
lods
push
imul
in
lahf
pop
fisubl
out
dec
mov
out
stc
hlt
mov
icebp
gs
pop
dec
mov
fcmovbe
push
imul
stos
add
mov
out
xchg
xor
iret
cli
xchg
iret
adc
and
js,pn
mov
or
ss
mov
dec
cltd
sub
pop
mov
push
imul
mov
pop
inc
sbb
nop
lods
cmpsb
mov
das
out
jns
jecxz
jge
xor
stos
popf
iret
lds
ret
mov
lock
mov
je
cwtl
push
sub
xchg
repnz
push
push
cmp
xchg
lods
notl
xchg
jp
fsubp
hlt
mov
sbb
xor
mov
in
push
roll
add
pop
mov
lret
sbb
aas
daa
fisttpll
int3
dec
dec
stc
xor
arpl
or
cmp
imul
outsb
sub
and
or
aaa
mov
ja
out
xor
push
or
aad
mov
les
out
mov
lock
ret
and
iret
cli
icebp
fists
inc
outsb
jae
in
inc
mov
add
pop
push
xchg
sahf
push
loope
fsubl
loopne
pop
mov
inc
or
pop
push
arpl
push
jmp
enter
push
cmp
sub
inc
ret
dec
iret
imul
out
adc
dec
cmp
pop
push
xchg
mov
adc
cmpsb
xchg
inc
in
jnp
inc
dec
pusha
pusha
push
sub
movsl
repnz
sbb
jge
mov
std
scas
fsubrl
outsb
popf
adc
out
jne
lcall
or
lret
test
mov
sbb
add
or
stc
push
sub
or
stos
outsb
iret
icebp
pop
mov
push
ret
jb
hlt
add
aam
fsubl
clc
repz
push
sub
cmp
rorb
addr16
and
adc
ret
sub
insb
jmp
fisttpll
push
jmp
or
aad
lods
in
and
pushf
pop
push
leave
jp
jle
pop
out
pop
inc
cmp
stos
in
loopne
pop
xchg
in
or
cmpsb
movl
std
in
mov
jmp
hlt
push
inc
ja
mov
sarb
sbb
lret
cmp
test
imul
sub
cld
cli
push
xor
or
sbb
xchg
push
in
sbb
pop
mov
repnz
fimuls
pop
testb
add
out
test
jge
and
ja
in
add
enter
sub
add
ret
in
and
xchg
insb
js
mov
sub
mov
cmp
mov
fistpll
stos
adc
popf
mov
negl
cmp
push
push
adc
xchg
sbb
mov
outsl
test
inc
mov
or
rol
adc
imul
ja
cwtl
insl
jb
es
sarl
mov
popf
mov
outsl
icebp
push
sbb
jg
and
mov
mov
or
outsl
or
mov
add
jbe
testl
imul
movsb
or
scas
cltd
repz
std
xor
movsl
lcall
adc
dec
mov
data16
push
aad
mov
pop
inc
lods
aad
daa
push
in
out
sbb
call
xchg
jnp
in
ljmp
mov
adc
jmp
data16
and
lds
push
sbb
push
sti
push
xchg
ret
or
pushf
mov
adc
fwait
mov
sub
scas
sti
add
push
sub
jnp
cmp
push
mov
and
mov
loopne
mov
mov
sub
mov
sbbb
call
leave
pop
jmp
aam
pop
pop
pop
cmp
add
clc
sbb
sbb
mov
sbb
sub
jno
stos
push
into
jbe
pop
call
jns
aaa
mov
scas
dec
push
imul
fmul
jbe
mov
aam
adc
out
push
pop
subb
dec
ja
imul
pop
cmpsl
scas
lret
lret
popa
mov
movsl
jmp
int3
inc
cmpsl
jbe
sub
jns
out
cs
out
rolb
cmc
mov
sahf
sub
add
scas
adc
inc
adc
push
cwtl
lret
cmp
scas
push
mov
and
lods
dec
sahf
pop
sbb
or
aam
fbstp
pop
jl
jnp
cmpl
jle
inc
mov
pop
insb
sahf
sub
mov
mov
push
clc
xor
sbb
aam
int3
ljmp
loope
int
lock
jne,pn
or
jo
cmp
push
cmpsl
fcmovu
fmulp
gs
add
ds
imul
xchg
jns
xlat
jne
popf
mov
sti
mov
cmpsl
ljmp
jmp
pop
push
inc
cmp
nop
xlat
lds
daa
pop
std
sub
imul
ds
inc
xor
add
and
mov
scas
mov
ret
test
adc
pop
nop
pop
xlat
cld
dec
cld
mov
dec
aaa
add
mov
cmp
xchg
cmp
and
daa
lods
push
xor
sbb
imul
jge
scas
mov
dec
lods
or
lds
test
mov
push
xchg
cs
insl
ljmp
jae
imul
div
push
mov
mov
xchg
dec
pop
xchg
ljmp
dec
add
xchg
mov
lock
xchg
pop
stc
jp
or
testl
into
jne
or
jae
and
aaa
ret
popf
jo
fiaddl
inc
enter
repz
mov
cs
ficomps
imul
or
pop
cmpsl
aas
int3
popf
pop
sub
stos
faddl
push
sahf
loope
pop
xchg
lcall
dec
pushf
daa
jecxz
adc
lea
inc
mov
sbb
fs
rcrl
out
push
jmp
faddp
ja
fsts
mov
xor
aas
push
dec
aad
cmp
sub
neg
sbb
xor
xchg
mov
jmp
or
jecxz
sub
out
dec
and
es
aas
flds
loop
inc
dec
lock
push
push
add
clc
pop
mov
ja
dec
loopne
inc
cmp
mov
mov
sbb
and
jo
fmull
mov
mov
fiaddl
out
ret
or
jle
adc
sub
imul
lods
jge
imul
ret
outsl
shrb
sbbl
fs
insb
and
adc
mov
inc
popa
mov
jae
mov
loop
mov
mov
fs
ret
movsl
insl
mov
push
les
jne
pop
pcmpgtw
shrb
popf
xchg
ret
xor
adcl
cmpsl
call
ljmp
into
cs
data16
out
xchg
jb
lods
xchg
dec
lret
stos
cmp
lods
mov
sub
inc
or
rclb
push
xchg
pop
sbb
pop
sub
int3
inc
ret
push
mov
flds
lea
cmp
ret
jp
mov
in
pop
and
xchg
repnz
imull
inc
mov
xor
orb
sbb
cmp
xchg
push
sbb
cmp
cmpsl
push
xchg
mov
mov
pop
leave
xchg
out
jne
loopne
cmp
cltd
sarl
xchg
xor
add
cmp
mov
xchg
jg
xchg
mov
add
sbb
inc
mov
sbb
mov
sti
push
pop
xor
rorb
or
les
lea
mov
push
pop
sbbl
je
imul
sub
lret
xchg
out
pop
das
cs
fscale
insl
call
adc
stos
mov
aas
es
movsb
or
arpl
jae
sbb
dec
sbb
ret
dec
or
inc
lret
cmp
into
pushf
call
jbe
addl
xchg
enter
into
sbb
pop
aam
mov
lret
pop
fs
or
push
fisubrs
outsb
daa
or
pop
aaa
cmc
addr16
push
mov
inc
pushf
mov
fs
scas
sbb
enter
add
mov
mov
push
jnp
and
aaa
lods
pop
adc
cmp
adc
pop
dec
mov
pop
pop
out
test
fs
jns
adc
fistl
push
or
ret
out
nop
roll
repz
gs
dec
add
push
jne
fadds
xchg
fdivrs
sbb
jb
lcall
adc
nop
pushf
out
mov
mov
cmp
mov
mov
mov
pop
out
mov
jb
adc
insb
pop
fdivrs
dec
dec
mov
add
sub
mov
in
fisttps
cmp
and
xorl
sti
sar
ljmp
xor
out
jno
stos
stos
je
dec
mov
outsb
nop
fmull
subl
out
rcrl
sbb
fs
filds
icebp
sbb
pop
sub
sub
mov
aas
insl
into
push
lret
sbb
test
or
push
movsb
mov
idivl
mov
aam
je
cmp
in
ss
inc
mov
sub
mov
adc
push
aaa
push
adc
test
jp
xor
or
popa
cs
cmp
lods
lds
and
and
jnp
aam
inc
lea
pop
mov
shll
stos
std
push
adc
aas
cmp
rclb
lahf
xchg
mov
push
add
pop
inc
jmp
cmpsl
sbb
cmc
push
xchg
jl
push
xchg
js
in
paddq
cmp
enter
movsl
in
sbb
jno
jge
jp
das
xor
rclb
cmpsb
mov
leave
add
pop
cs
push
adc
aas
fadd
repz
in
adc
mov
loopne
gs
in
inc
sbb
jo
jnp
fstpt
sub
bound
xor
mov
fidivrs
shlb
leave
insb
cmp
add
mov
aaa
inc
inc
test
push
rcl
jns
xor
adc
es
mov
inc
lea
icebp
sub
sahf
adc
add
jl
icebp
push
int
ljmp
stc
dec
in
sbbl
sbb
call
and
mov
sbbl
push
dec
insb
add
adc
pop
icebp
das
fists
daa
aas
mov
subb
fisttpl
push
mov
out
sti
xor
sub
cmp
push
inc
fmul
inc
sbb
xorb
daa
and
scas
lcall
das
movsb
ds
pushf
mov
fs
pop
cmpsl
dec
mov
mov
faddl
jmp
inc
out
shl
add
xorl
in
fimull
insl
imul
fildll
sub
imul
lock
sarl
jae
dec
pushf
mov
pop
cmpsl
movsl
mov
sub
out
sbb
xor
movsb
sub
hlt
pop
xchg
scas
inc
mov
std
and
pushf
adc
int
in
movsb
xor
sbb
mov
lahf
mov
test
movb
int
lret
sub
add
test
call
fdiv
jge
adc
adc
pop
sbb
mov
repz
lcall
or
dec
fs
popf
imul
movsl
mov
or
dec
lret
cs
push
jbe
nop
pop
sbb
sub
jb
fsubrs
rcll
imul
ret
mov
push
cmp
shr
out
sbb
adc
lahf
adc
out
int3
into
xchg
scas
outsl
xlat
idivl
cmp
cmpsb
xor
pop
int
jb
cmp
dec
int3
repnz
mov
push
daa
sub
ja
mov
outsb
gs
sahf
in
mov
adc
sub
jbe
sbb
add
jno
sbb
sub
movsl
outsl
int3
pop
cmp
imul
jns
pop
in
loop
cmp
dec
mov
cmpl
add
pop
mov
jecxz
pop
push
pop
clc
bound
popf
inc
fwait
mov
xchg
insl
push
ljmp
push
movsb
dec
inc
or
jnp
in
sti
push
dec
pop
sbb
push
cwtl
enter
addb
rclb
mov
add
stos
push
mov
adc
cmp
push
mov
and
pminub
shlb
sub
in
leave
push
dec
sti
sbb
sub
arpl
pushf
out
xor
pop
xchg
or
or
xchg
add
mov
cwtl
stos
pop
sbb
fimull
jg
pop
test
loope
push
cmc
arpl
mov
sub
jne
icebp
stos
ja
push
xchg
loope
pop
test
test
jb
mov
cmp
add
dec
out
ljmp
loope
daa
popa
pop
mov
aas
lock
add
adc
arpl
add
pop
fcoms
fs
out
mov
mov
cmp
and
or
dec
add
mov
cli
addr16
push
dec
dec
push
adc
pop
imul
push
push
push
std
or
xchg
ds
sbb
cmpsb
js
ret
jle
cmp
cmp
xchg
daa
add
mov
dec
ret
nop
stc
mov
sub
mov
sub
dec
or
add
nop
or
push
push
out
addb
add
aas
cltd
xor
jge
pop
daa
push
lret
loope
popf
imul
push
sub
addr16
imul
push
xchg
or
insb
imul
cmp
shlb
xor
mov
and
insl
je
xchg
negb
pop
xchg
call
js
out
lcall
jge
call
dec
fcmove
std
cmp
cmp
bound
push
mov
jb
out
lret
sbb
jle
xor
jp
and
cmp
test
xor
and
or
jecxz
inc
mov
xor
mov
sbb
mov
cltd
aad
sar
sbb
mov
add
or
jnp
rclb
fs
ss
je
pop
js
das
pop
cmp
fs
out
scas
nop
dec
xor
xor
fildll
cmp
add
shlb
xchg
mov
jnp
push
pop
call
mov
lea
cmpsl
mov
pop
xchg
adc
xor
xchg
cmp
add
int
pop
cmp
clc
sahf
jnp
sbb
scas
cwtl
xchg
jae
insl
icebp
add
lret
xor
adc
mov
aad
push
in
aaa
cwtl
insb
mov
iret
imul
imul
push
shlb
mov
arpl
or
sbb
imul
scas
add
icebp
adc
dec
out
imul
mov
movsl
aam
fldt
sub
mov
ljmp
dec
and
sub
inc
cmp
pop
roll
jae
push
pushf
daa
out
out
cltd
test
outsb
adc
mov
int3
xchg
in
lcall
adc
mov
jno
lret
cmp
inc
ja
cmpsb
dec
pop
push
es
xchg
adc
repnz
outsb
dec
arpl
es
push
pop
mov
adc
mov
fists
sub
adc
outsb
mov
mov
jmp
or
sahf
daa
add
fs
mov
shll
sub
loop
jp
xchg
cltd
aad
sbb
xor
sahf
testl
sub
jge
lcall
add
out
pop
fmull
stc
mov
fsubs
cmp
leave
fs
std
stos
jo
and
sub
fisubrs
sub
or
daa
les
ror
lret
ret
jns
push
and
add
loope
pop
stos
fdivp
sti
xor
in
dec
das
cmp
mov
cmp
aas
jnp
pop
push
jmp
mov
insl
cltd
xor
xlat
push
sarl
add
nop
sub
mov
in
sub
lds
movl
dec
insl
les
in
xor
xchg
push
push
out
les
jb
ret
inc
flds
jge
mov
hlt
mov
movsb
or
fists
dec
outsb
dec
pop
enter
rclb
int3
push
or
stc
rorb
jb
inc
pop
lea
cmp
dec
push
inc
repz
cmpsl
jmp
and
jg
sub
inc
std
les
std
adc
jne
add
les
cmp
jne
out
decl
ja,pt
sub
inc
int3
mov
mov
rorb
testb
sub
or
leave
sbb
push
xor
and
movsl
in
inc
cld
fisubs
nop
leave
mov
shll
addr16
pop
cmpsb
cwtl
pop
sbb
addr16
mov
les
add
enter
push
inc
jb
sub
mov
jecxz
jge
jg
mov
inc
iret
add
sbb
ret
add
out
cmpsl
jnp
adc
int3
xchg
test
pop
mov
xchg
shl
jl
xchg
fcmovne
in
mov
std
add
jle
imul
dec
push
xlat
and
das
sub
push
adc
cmpsl
and
movsb
cld
ret
inc
pusha
scas
imull
inc
xchg
dec
shl
xor
orb
inc
sbb
mov
in
mov
pop
pop
add
sub
enter
cmp
push
push
jae
inc
add
lcall
shrl
rcrb
xchg
sub
je
iret
add
xor
inc
sti
sub
in
mov
jl
push
dec
inc
xlat
mov
sub
push
xchg
prefetch
xor
dec
cmp
adcl
cmp
push
xchg
fisubl
cmpsl
ljmp
push
jle
mov
jg
xchg
and
loope
dec
and
fwait
nop
iret
scas
mov
popa
dec
xor
outsb
in
outsb
hlt
leave
fidivl
out
pop
inc
push
jnp
dec
pop
jge
cmp
lret
test
sbb
and
scas
test
xchg
push
inc
pop
arpl
mov
xlat
pop
cmp
jo,pn
pop
cmpb
arpl
data16
clc
mov
jno
jo
sub
sub
aad
test
xchg
stc
stos
mov
jne
decb
in
cmp
xchg
cld
aad
sub
sti
popf
aas
pop
inc
fwait
fwait
push
stc
xor
mov
mov
in
adc
jae
arpl
push
addr16
fldt
shl
jnp
aam
sbb
std
sahf
aad
mov
xchg
aam
js
lret
nop
jnp
and
fisttpll
cli
mov
and
adc
lea
nop
dec
mov
pinsrw
movsl
xrstor
xchg
cmp
cwtl
add
dec
mov
dec
cmpsb
neg
sub
cmp
mov
push
not
pop
loopne
mov
leave
push
and
mov
jecxz
or
ret
popf
in
out
xchg
mov
adc
in
jp
xchg
in
aaa
cmp
andb
daa
xor
xchg
fbstp
jae
mov
test
sub
js
cmc
mov
mov
shl
xor
dec
inc
mov
jae
orl
int
clc
incl
adc
lcall
inc
mov
lods
mov
mov
in
adc
xor
or
orl
ja
jne
pop
jno
aad
insb
lret
mov
push
pop
mov
add
xor
inc
sub
cwtl
push
cmp
stos
divl
imul
mov
pop
lds
int
gs
or
cmp
pop
push
push
neg
inc
loope
jmp
dec
push
out
xor
loopne
stc
inc
add
mov
inc
mov
lret
aaa
push
je
mov
popf
add
cmpsl
mov
jmp
jb
shll
xor
mov
mov
or
xchg
and
sbb
pop
out
mov
jnp
and
dec
outsb
es
test
xchg
add
lods
stos
push
aam
mov
scas
jecxz
push
movsl
mov
fwait
addr16
push
and
pop
enter
jbe
pop
pop
xor
pop
das
hlt
mov
icebp
push
adc
pop
addr16
xor
mov
push
mov
sbb
mov
mov
loope
push
inc
js
push
inc
or
subb
and
cmp
dec
dec
push
mov
cld
sbb
mov
mov
loope
xchg
rol
fs
jne
insl
xchg
jp
sub
dec
add
mov
cmpsl
cmp
cmpsl
fnstsw
es
inc
xchg
push
pop
xlat
push
in
cmp
push
sbb
cmp
jmp
sarl
adc
jnp
pop
sbbb
into
sub
popa
cmpsb
xchg
mov
bound
push
dec
jnp
sarl
xchg
in
or
cld
stc
int3
aad
xchg
sub
scas
dec
fsubrs
clc
test
popf
out
inc
cmp
ds
and
repnz
test
mov
stos
loop
popf
test
pop
jnp
add
mov
sarb
cld
sub
xlat
sbb
pushf
lea
jbe
add
shll
dec
std
test
std
lret
inc
pop
dec
or
jg
adc
ret
mov
mov
lock
aad
or
arpl
loopne
jne
sti
pop
mov
sub
bound
mov
and
mov
cmpsb
mov
push
not
inc
xchg
push
adc
lock
sbb
sub
mov
shr
mov
xor
or
testb
cld
mov
push
imul
daa
sbb
pusha
sbb
daa
repz
inc
in
roll
push
jge
repz
jb
mov
jno
notl
out
jnp
test
sub
inc
push
nop
lcall
push
jo
test
fldl
mov
inc
mov
jo
jo
lahf
xchg
out
sub
cmp
stos
inc
jl
int3
sub
add
aad
lcall
mov
shl
cmpsb
iret
xchg
cwtl
scas
mov
hlt
mov
lods
xor
sbb
mov
xor
stos
lea
dec
repnz
test
lcall
mov
jno
test
push
pop
std
cltd
cmpsl
dec
push
out
mov
sub
lret
adc
push
dec
cmc
cmp
sub
popf
cmp
aam
repnz
inc
push
nop
push
out
or
and
cwtl
aaa
jo
mov
loopne
or
into
enter
fmulp
or
cltd
jecxz
test
xchg
imul
sar
cmp
lods
bound
addr16
pop
in
pop
mov
sub
sbb
sbb
in
cmp
cmpsb
add
xchg
mov
adc
sbb
loope
stc
insl
lods
mov
jl
mov
add
or
mov
lret
inc
dec
or
repnz
mov
jnp
push
xchg
push
sbb
ds
flds
movsb
cmp
sub
pop
cli
lock
icebp
jo
adc
pop
mov
adc
orb
gs
shll
mov
arpl
mov
fstp
decl
test
fimuls
cltd
out
ljmp
adc
shrl
lock
imul
mov
repnz
or
pop
ret
add
adc
push
loopne
jle
movsb
fistps
cld
in
rcll
jle
pop
ds
fdivp
mov
dec
loopne
addl
inc
imul
fidivl
and
hlt
jne
sbb
push
sub
cmp
lock
testl
pop
popa
inc
add
sbb
lock
mov
sbb
adc
jne
sbb
call
push
xor
push
dec
adc
and
fadds
fisttps
pushf
in
scas
and
sar
je
dec
imul
jmp
repz
inc
push
testl
pop
dec
xlat
sahf
sub
inc
sbb
xchg
mov
jle
lods
mov
adc
xor
bound
mov
lods
inc
cmpsl
xchg
mov
hlt
and
mov
test
pop
std
jge
mov
push
repnz
jp
push
inc
mov
lods
outsb
orb
loope
sub
outsb
inc
adc
les
insb
lret
pusha
js
fadds
ds
add
loopne
mov
js
mov
pop
cmp
mov
sti
int3
add
xchg
fcoml
ja
not
adc
mov
jnp
in
repz
clc
add
outsb
dec
ss
or
inc
les
mov
xchg
push
popf
sbb
or
out
xlat
push
lods
mov
xor
mov
cmp
mov
js
xorl
mov
stos
xor
lods
xchg
test
cld
xchg
push
imul
jle
sub
sub
int3
ret
cwtl
ljmp
pop
outsl
or
mov
adc
xchg
xor
adc
int3
cmpsl
shll
mov
sbbb
jecxz
pushf
pop
push
daa
jmp
bound
xor
cltd
and
popf
test
xorb
jle
sub
bound
sub
xchg
cli
cmp
aad
popf
lock
fsubs
fsubp
and
lret
jb
sbb
lcall
pop
cmc
sbb
pop
push
dec
mov
jg
shrb
and
mov
jne
sub
shrl
shl
shlb
ret
adc
mov
popf
push
jae
xlat
jle
push
vpunpckhbw
movsb
push
mov
xor
fiaddl
cld
loopne
xchg
shl
out
jo
les
and
test
jne
push
mov
ss
fs
pop
dec
xchg
mov
stc
xlat
pop
adc
repz
outsb
ss
test
mov
push
arpl
or
out
cli
add
mov
and
xor
inc
sbbl
clc
pusha
inc
movsl
xchg
das
test
adc
mov
sahf
ss
inc
mov
std
sub
mov
xchg
lret
mov
cmpsl
addr16
xchg
inc
fcmovne
aas
test
and
jmp
mov
mov
push
sub
xor
fbld
int3
adc
in
dec
mov
xchg
push
jnp
jbe
push
lock
push
cmpsb
sbb
lret
gs
mov
push
dec
xchg
cmpsb
cmpsb
push
subl
xchg
repz
push
shll
in
int
or
imul
pop
push
leave
dec
stos
sub
pop
xorb
in
sarb
mov
out
loopne
push
fisubrs
pusha
arpl
mov
into
push
roll
cmp
pushf
ficoml
push
cmpsb
mov
mov
scas
aad
mov
std
adc
pop
lds
mov
gs
mov
aad
jge
test
out
movsl
loopne
filds
jp
add
jbe
mov
add
insb
loopne
adcl
out
and
loopne
pop
and
adc
push
adc
in
fwait
cltd
mov
add
lahf
mov
stc
xchg
rcrb
push
incb
enter
inc
inc
pop
out
inc
push
mov
nop
ja
dec
inc
bound
push
out
clc
jge
sbb
mov
inc
jne
aad
push
movsl
in
dec
push
lahf
fs
out
shl
push
add
test
mov
leave
mov
stos
fcmovu
cltd
or
and
jp
clc
push
mov
inc
out
mov
mov
add
call
jl
dec
fdivp
fs
dec
xorb
lret
cmpsb
repz
icebp
js
push
jg
subb
test
cmp
lcall
add
iret
jecxz
pop
and
xchg
sub
push
mov
mov
das
lock
jno
lcall
push
into
add
mov
sbb
jo
lahf
cwtl
push
int3
sub
xchg
imul
loop
sub
fnstenv
es
scas
data16
xlat
lods
inc
jp
cmp
jecxz
movsb
loopne
inc
xor
sub
ret
ficoms
adc
popf
mov
sbbb
xchg
icebp
fcmovb
mov
lret
dec
push
sahf
mov
js
mov
and
insl
add
lret
sahf
sbb
movsb
adc
out
hlt
jbe
outsb
jne
mov
pop
cmp
out
or
repnz
push
adc
xor
jne
or
cld
cwtl
mov
or
in
insb
cmc
int3
add
loopne
add
dec
dec
popf
pop
and
cmc
pop
movsl
popa
and
add
and
sub
cmp
push
jecxz
notb
cmpsl
lret
movsl
xor
xchg
mov
stc
dec
push
dec
cmp
mov
lock
cmpsl
es
test
in
push
outsb
dec
std
fldt
push
jne
movsl
rol
pop
fistpll
jo
stc
jae
jl
jbe
dec
xchg
add
int
cmc
push
popa
mov
frstor
int3
aad
rcrl
popa
xor
mov
sti
xchg
push
test
or
adc
cs
add
pop
cmpsb
out
mov
int
pop
lods
rcrl
push
sbb
mov
mov
mov
ret
jmp
inc
test
dec
jb
push
sub
fstpt
aad
andl
faddp
testl
or
cmp
es
xchg
adc
xor
imul
nop
and
imul
sub
nop
add
pop
lds
inc
inc
std
imul
push
jp
addr16
or
mov
mov
imull
fwait
std
and
inc
js
dec
ja
xor
loopne
ds
sub
mov
int
lock
mov
icebp
in
arpl
and
lea
sub
xabort
daa
push
and
sbb
ja
sbb
cmp
adc
subl
jne
add
out
add
add
mov
sub
mov
fisttpl
enter
adc
fsubrs
pop
xchg
rorl
sub
fisttpl
mov
pop
xchg
leave
out
outsl
mov
cmp
mov
dec
inc
subl
out
mov
mov
mov
lret
sbb
dec
sbb
jnp
xchg
sub
inc
mov
jae
jl
dec
cmpsb
dec
cmp
mov
cwtl
cmp
mov
lret
icebp
sarb
vaddsubps
je
pop
jbe
je
jae
rcr
aam
pop
inc
shrb
push
pusha
xor
adc
movsb
int
or
mov
lods
sub
js
mov
add
ret
imul
aas
sub
dec
aaa
out
push
les
push
aaa
cs
ds
ljmp
lea
pop
xchg
jo
into
inc
sarb
loope
or
cmpsb
fld
sub
pop
push
aad
es
push
pop
xor
icebp
xchg
adc
fildll
dec
adc
aaa
jmp
sub
ljmp
dec
mov
insl
out
mov
inc
inc
insl
das
pop
in
or
adc
call
lahf
add
mov
xor
les
mov
push
jg
fistps
jb
test
in
out
push
dec
imul
xchg
lods
xchg
fldlg2
add
lahf
pop
dec
sbb
mov
or
xchg
test
xchg
aas
call
outsb
scas
ja
sub
movsb
inc
cmpsb
out
into
sbb
sub
insb
inc
add
stc
mov
add
inc
lods
test
mov
cmp
mov
cld
xlat
stos
in
arpl
scas
test
sbb
sbb
pop
cmp
mov
cld
enter
mov
lret
daa
push
push
in
insl
xor
jp
in
lret
aas
mov
or
mov
aaa
push
inc
mov
stos
iret
mov
mov
add
subl
bt
test
roll
dec
add
adc
xorb
jbe
stos
pop
jbe
jg,pt
or
lods
popf
outsl
loopne
scas
lods
sub
outsl
fmulp
or
cmp
iret
ret
pop
inc
daa
xchg
push
ret
jbe
cmp
xchg
bts
jecxz
mov
inc
imul
testl
jp
jnp
fisubl
mov
stos
xor
sti
mov
push
dec
cmp
xchg
into
pusha
cmp
movsl
arpl
push
inc
cmp
stc
scas
dec
jae
pop
or
sub
adc
pop
and
mov
cmpb
roll
out
add
in
mov
dec
xchg
pushf
pop
mov
dec
ja
inc
sub
jne
inc
jae
add
lcall
cmp
and
adc
push
outsb
xchg
hlt
pop
mov
es
inc
addr16
arpl
aaa
data16
aad
cmpsb
cmp
dec
sahf
push
mov
pop
xor
ss
fidivl
cli
mov
scas
inc
jp
cli
jmp
loop
dec
insl
inc
into
mov
test
into
add
imul
popf
mov
mov
ficompl
pop
jo
mov
test
ljmp
adc
leave
jp
push
movsb
dec
aas
pop
xchg
adc
add
movsl
popf
fdivrs
orl
mov
jl
imul
cli
mov
adc
ds
sub
xor
and
aaa
call
ja
lods
sub
sbb
inc
jae
popa
add
jbe
inc
in
xchg
or
mov
hlt
jae
pop
js
mov
loope
enter
stc
ror
addr16
imul
cld
repz
push
fs
mov
ljmp
pop
jns
mov
jno
xor
cld
roll
shll
sbb
in
dec
inc
push
stos
cmp
ret
xlat
xor
inc
cwtl
cmp
shr
popa
mov
fxch
pushf
or
cmc
pop
inc
mov
or
mov
mov
fldenv
ficomps
mov
test
jbe
ds
jg
jmp
std
sub
mov
sahf
pop
sbb
or
pop
pop
scas
pop
arpl
inc
insb
xlat
imul
test
mov
incl
mov
cli
xchg
mov
xor
or
insb
imul
loop
cmpsl
and
insl
popa
cmp
add
insl
mov
and
add
mov
mov
out
inc
loop
xlat
das
mov
ss
inc
fistpl
decl
cmp
xor
add
mov
mov
imul
lock
ds
jmp
sbb
jge
insb
sbb
ds
jns
and
xor
bound
xchg
in
cs
leave
mov
pop
mov
push
add
jo
loop
mov
or
mov
push
leave
jmp
fstps
mov
lds
add
push
hlt
nop
daa
inc
rcrb
movsl
dec
inc
push
xchg
fldenv
mov
jne
mov
mov
lret
mov
arpl
sbb
mov
sub
loope
jbe
jl
or
sbb
inc
call
outsb
mov
jge
in
pop
mov
ljmp
jle
xor
xchg
push
and
cwtl
xchg
ret
cmp
icebp
filds
or
inc
sub
les
sub
push
mov
mov
outsb
mov
mov
lock
test
fdivrl
push
dec
mov
cld
data16
sbb
scas
xor
les
mov
sub
pop
sub
pop
mov
sub
push
mov
sub
pop
xchg
mov
pop
pop
sti
cltd
das
dec
sub
xorl
outsl
push
sub
add
aas
xchg
mov
gs
mov
jp
pop
in
and
js
pop
ret
mov
test
sub
out
out
out
movsb
fcomip
lea
repnz
nop
pop
mov
inc
mov
mov
jp
sbb
inc
scas
test
xor
mov
test
ljmp
test
or
rcr
pop
lret
and
fs
ret
mov
inc
mov
adc
and
into
and
bound
into
addl
jp
loopne
mov
lods
push
adc
sar
mov
lds
jae
jge
push
xor
push
mov
int
sbb
cmpsl
cmp
in
hlt
adc
rcrl
aaa
fcoml
push
sbb
mov
sub
jecxz
cmp
add
fwait
or
and
mov
cmp
fsubrs
in
lret
add
imul
stc
fwait
pop
cs
fbstp
xchg
jnp
xchg
add
popa
mov
das
dec
fldt
fildll
insl
je
or
mov
pop
outsl
in
fisubl
fisubrs
cli
sub
push
aam
data16
push
mov
mov
fstps
icebp
mov
or
push
or
inc
scas
xchg
cmc
insb
add
sbb
jo
mov
adc
loop
mov
push
js
adcl
out
mov
xchg
xchg
sub
testb
inc
movsb
jl
push
lret
push
xchg
xor
aad
add
cmp
push
clc
cld
sti
popa
xchg
fistps
sbb
les
jae
jns
cmc
loop
dec
xor
xchg
mov
or
push
icebp
push
popf
fsubrl
dec
cltd
sbb
imul
pop
test
fldl
xorl
sbb
loope
lock
dec
adc
pop
lret
mov
adc
imul
mov
sub
add
bound
mov
pusha
pop
xchg
mov
cmp
movb
mov
pushl
sti
std
sbb
xchg
mov
jmp
cmp
or
repz
int3
pop
add
mov
ret
jecxz
je
inc
int3
nop
adc
fmulp
fsubs
mov
jge
mov
rcll
insb
adcb
sub
sub
hlt
scas
add
gs
loopne
sbb
add
pop
sti
shll
jp
unpckhps
sbbb
aaa
xchg
sub
repz
lcall
popf
sub
and
push
test
and
xor
or
mov
xor
mov
push
cmp
inc
xchg
push
mov
test
std
fucomp
leave
inc
call
inc
outsb
ret
mov
mov
jecxz
xchg
sahf
add
push
flds
push
jle
push
push
test
mov
shr
sub
mov
mov
aad
pop
std
test
xlat
pop
add
adc
adc
add
jns
lods
mov
push
push
push
call
test
mov
jp
imul
dec
es
jne
mov
xorb
inc
xchg
cmp
xor
frndint
sub
lods
xor
scas
pop
je
jmp
ret
movb
push
add
add
js
and
lods
dec
loop
cld
mov
lcall
jmp
sbb
jno
xchg
mov
sub
shll
adc
ret
data16
in
xchg
xlat
shrb
sahf
loopne
mov
test
out
lret
push
push
divl
rcrb
mov
jae
ds
bound
pop
lods
aad
jae
fadds
mov
sbb
out
sub
xlat
test
dec
bound
clc
sbb
mov
xlat
aaa
dec
insl
dec
jnp
lahf
adc
sub
fstpl
mov
push
push
xchg
shlb
sbb
scas
das
add
xor
push
pop
sti
sbb
adc
dec
bnd
pop
ficomps
dec
xchg
loopne
sbbb
mov
in
int3
pop
mov
adc
sahf
cmpb
and
pop
sbb
inc
inc
add
mov
adc
inc
int
mov
sbb
insl
pop
lcall
add
sahf
cmp
sbb
sub
xor
xor
les
push
push
jb
insb
push
xor
add
mov
scas
push
fsubrs
icebp
data16
mov
outsb
cmpsb
jmp
jnp
out
pop
and
xchg
rclb
stos
or
add
pusha
xchg
insl
push
xchg
pop
sub
out
test
pop
or
std
xor
orl
inc
nop
adc
sbb
mov
xor
cmp
xor
stos
out
inc
js
lock
imul
in
push
adc
inc
out
or
jp
cmc
dec
inc
or
icebp
fsubrl
xchg
add
out
cltd
sub
sarb
and
mov
dec
jns
mov
bound
pop
push
lods
sub
cwtl
inc
rorb
aad
je
call
dec
andl
test
jp
in
out
cmp
mov
push
loop
stos
test
and
fucomp
push
arpl
xchg
icebp
pop
lahf
xor
push
lds
jp
jge
test
or
jns
stos
out
stc
ret
lret
addb
cmp
enter
lret
es
repnz
es
mov
and
je
xchg
adc
sbb
scas
scas
bswap
dec
adc
enter
inc
jp
leave
cmp
add
je
jno
sub
ljmp
lods
adc
push
mov
jg
pop
fiadds
loope
jmp
dec
or
jg
rorb
gs
or
cli
in
outsb
and
pop
cs
fsub
sbb
test
fmuls
sbb
pop
cld
das
int
lcall
js,pt
fdivrl
adc
or
jmp
adc
pinsrw
mov
mov
arpl
shl
int3
pop
sbb
cmp
in
into
pop
mov
dec
jl
scas
jnp
loop
cwtl
lds
jecxz
dec
add
mov
xlat
jae
mov
outsb
push
cli
inc
pop
es
pop
mov
std
ljmp
mov
and
or
mov
adc
in
mov
pop
push
cmc
push
fists
loope
test
xor
cmpsl
and
add
add
sti
nop
popf
sbb
loope
sub
mov
xchg
in
outsb
lods
inc
sub
add
icebp
enter
and
push
sbb
mov
pushf
hlt
push
shlb
mov
imul
and
add
lods
sub
add
mov
adc
xchg
test
sbb
daa
jg
lret
ret
jns
addr16
push
mov
aad
rcrl
fmuls
stos
jg
xor
mov
lahf
pop
pop
stc
mov
jmp
pusha
jbe
jnp
xchg
cmp
repnz
cwtl
fdivs
fwait
mov
sbb
pop
mov
push
leave
push
mov
call
pop
and
jb
inc
pusha
cli
popa
or
cwtl
into
loope
mov
call
imul
xor
pop
mov
push
test
aad
and
stos
dec
aam
xchg
push
mov
adc
dec
push
call
lds
hlt
in
jno
sbb
into
push
mov
in
push
sub
add
ret
mov
mov
stc
dec
iret
adc
mov
or
dec
push
pop
sub
icebp
and
jns
jmp
mov
mov
icebp
mov
sub
jg
fdivrl
cmp
mov
push
mov
fistpll
cmp
and
pushf
xchg
push
dec
xor
mov
jmp
enter
mov
mov
stos
sub
jmp
sbb
popa
lahf
mov
ja
push
inc
out
lret
addb
mov
sub
pop
shlb
sub
lds
inc
fsubp
jmp
push
xchg
js
movsl
aam
mov
outsl
aam
imul
fisubrs
test
pop
lds
das
int3
ret
xchg
out
jge
cs
inc
push
cld
frstor
dec
orb
xor
cmpsl
js
or
push
or
add
sub
and
loop
push
or
pushf
sbb
dec
movdqu
icebp
jnp
js
imulb
xchg
fidivl
out
adc
ret
pusha
scas
mov
dec
pusha
lds
and
push
pop
jbe
jecxz
popa
inc
or
xor
xchg
dec
fwait
sub
push
push
dec
sbb
mov
in
and
cmp
lock
cmpl
add
inc
js
int3
xchg
cmp
mov
inc
popa
jno
lods
shrl
adcb
pop
jnp
movsl
int3
int
cltd
jns
jns
je
leave
aas
adc
adc
fwait
enter
sbbb
add
call
pop
dec
movsl
inc
ja
push
loope
mov
mov
jmp
imul
sub
leave
jbe
mov
or
or
leave
add
or
push
push
push
adc
rclb
and
or
dec
shll
sti
dec
popf
xor
repnz
pop
mov
and
sbb
push
sti
shll
xchg
or
in
sub
scas
push
iret
mov
dec
fcmovb
dec
neg
movsl
addb
and
icebp
jae
xor
sbb
data16
and
insl
cmp
imul
inc
xor
stos
xor
jg
dec
stos
sub
mov
rclb
sub
mov
mov
inc
outsb
hlt
and
in
loop
testl
pop
push
sub
bound
jge
subl
pop
dec
mov
je
mov
push
sub
stc
lret
cs
inc
sti
into
cmpsb
dec
xor
ja
js
cmpl
lcall
ret
dec
mov
pop
mov
mov
repz
fidivrl
popa
inc
lds
jns
xchg
test
into
ss
xchg
jnp
xchg
inc
dec
mov
dec
stc
out
cmp
cltd
jae
andl
fistpl
xchg
add
sbb
inc
out
addb
icebp
xor
ret
subb
dec
push
add
ljmp
in
mov
and
inc
lret
dec
out
dec
pop
sbb
xchg
lds
mov
lods
xchg
xor
fidivl
push
jge
mov
stc
pop
jle
jl
mov
sub
jae
shrb
pusha
sub
mov
push
sub
sub
cmp
fisttpl
push
movb
xchg
xchg
or
dec
dec
sbb
andl
lret
fisttpll
fcomps
ror
push
jecxz
popf
push
scas
cli
sub
push
and
loope
lock
or
cmpsb
int
stc
imul
js
fcom
dec
jb
in
jo
hlt
mov
lock
shlb
jg
sbb
jno
jle
fcoms
mov
or
popa
mov
mov
add
hlt
cmpsl
xor
sbbb
adc
lods
dec
test
cltd
in
sarl
out
testb
insl
out
sub
lds
in
mov
adc
inc
in
xor
pop
xchg
mov
pop
mov
cld
pushf
pop
inc
jg
xor
gs
pop
xchg
sbbb
and
cmp
shrl
cmpsb
push
les
push
mov
std
cmp
sbb
add
cld
push
sbb
fistpl
and
mov
sbb
je
add
sub
sahf
cld
fnstsw
outsb
stos
pusha
lcall
and
lods
fucomip
test
fs
stc
cltd
dec
cmp
insl
and
cmpsb
int
repz
sub
push
cmp
fldl
push
ucomiss
lret
xor
lret
cmp
mov
push
flds
andl
subl
negb
pop
stos
inc
jmp
or
out
clc
cmpb
into
jae
inc
push
rorl
in
pop
add
sbb
fmull
lds
and
xor
fdivl
fcomp
mov
pusha
jmp
fistl
jcxz
xchg
xor
add
cwtl
pop
cmp
mov
in
arpl
mov
mov
mov
lock
adc
mov
daa
add
arpl
mov
inc
cmp
mov
mov
inc
mov
push
pop
inc
mov
jno
data16
out
push
testl
imul
sahf
inc
mov
mov
sar
and
mov
jns
mov
lock
push
sahf
mov
fsub
lods
out
mov
mov
lods
orl
dec
inc
jge
jo
xor
dec
mov
dec
or
jb
scas
inc
rolb
add
push
mov
mov
rorl
dec
pop
leave
add
bound
call
jb
mov
ret
push
stc
add
or
xchg
clc
clc
xchg
sbb
and
push
sub
mov
pop
pop
jne
and
mov
loop
push
xchg
aad
outsb
lods
mov
or
out
jae
lahf
fdivs
cmp
pop
push
cmp
mov
out
out
sub
cmp
scas
ja
int
fisubrs
js
sbb
xchg
mov
pop
popf
mov
add
xchg
pop
out
lods
or
sub
in
rorb
push
mov
cmp
xchg
stos
fisubs
adc
fcompl
pop
push
clc
aam
dec
mov
daa
stos
pop
jge
fistpl
ljmp
fbstp
adc
cmpsl
mov
adc
roll
call
shr
add
dec
pop
mov
cmp
ret
sar
push
cld
cmc
pop
fstpt
add
mov
cli
inc
das
iret
xor
add
add
shrl
int
in
jl
push
dec
insb
or
ftst
int3
rclb
in
mov
mov
in
les
and
or
shrb
cld
inc
and
int3
rcll
xchg
push
mov
shl
ret
jns
scas
cmp
jmp
adc
push
sub
lret
push
cmp
inc
shll
fdivrs
cmpsb
enter
adc
scas
xchg
dec
iret
cmpsl
fwait
ja
cmp
pop
sbb
sub
int3
jnp
sarb
in
push
push
enter
sbbl
fbld
xor
xchg
fsubl
jns
xchg
xor
push
adc
push
int
testb
fwait
das
cmc
lret
jo
aam
xlat
inc
loopne
adc
call
and
ret
adc
xchg
sahf
stos
add
call
pop
xchg
in
daa
lahf
push
xlat
pusha
cmp
and
mov
das
or
mov
jmp
es
andb
cwtl
pushl
negl
fstps
rolb
mov
sbb
or
cli
mov
and
dec
mov
pop
and
icebp
cmp
dec
std
ss
xchg
aas
mov
jge
push
ljmp
mov
push
dec
out
pop
mov
mov
and
xor
adc
xchg
pop
pop
sub
jecxz
and
jns
in
das
jp
fmuls
scas
test
cmp
lret
filds
pop
xchg
fsubl
jecxz
push
je
mov
mov
fsubrs
mov
add
inc
test
push
mov
into
mov
data16
mov
xchg
inc
inc
push
orb
fbld
in
clc
adc
sbb
out
push
mov
push
mov
fs
ds
jnp
mov
mov
pop
fisttpl
xchg
inc
insb
dec
cmp
stos
sti
out
and
inc
scas
cli
ds
int
decl
sahf
scas
inc
fs
stos
ja
inc
adc
or
adc
jo
xor
cld
or
lret
repz
jne
sahf
inc
sarl
fdivs
popa
insl
xchg
leave
jl
movsl
fdivp
xchg
imul
outsb
outsb
dec
adc
mov
fsts
in
popa
push
jae
adc
jmp
and
sub
dec
sub
push
jg
push
hlt
mov
hlt
int3
icebp
dec
xchg
dec
dec
or
mov
insb
hlt
adc
adc
jae
mov
or
outsl
pop
jg
push
mov
loop
mov
repz
cmp
pop
js
xchg
cmp
push
mov
pushf
pop
mov
sti
insb
pop
and
xchg
stos
pop
dec
test
push
mov
and
popf
shrb
pop
stc
mov
xchg
pusha
dec
cli
sbb
mov
cld
addl
subb
xchg
jp
sub
out
aad
xchg
mov
push
mov
cli
decb
fwait
jns
pop
mov
mov
jle
imul
out
xchg
sbb
sbb
push
jne
pop
or
ds
loopne
sarl
push
pop
xchg
mov
dec
xor
lods
sbb
dec
lret
outsl
loope
hlt
popa
cmp
fisttpl
adc
les
imul
mov
es
sub
dec
xchg
shrb
mov
cli
mov
stos
call
js
mov
pop
jnp
dec
cmp
push
mov
cli
rol
cmc
jo
and
mov
or
mov
es
les
sbb
inc
or
mov
jl
fisttps
xchg
fimuls
or
add
int
sub
push
vprotd
push
mov
adc
dec
addr16
nop
push
push
mov
pop
test
lds
sbb
xor
fdivrs
lahf
jae
lret
jmp
sub
mov
mov
stos
jmp
cmp
jns
adc
sbb
stc
push
and
arpl
xchg
add
sbb
enter
pop
out
aam
push
dec
loop
jo
data16
dec
push
in
add
out
mov
fld
mov
dec
add
mov
hlt
dec
push
pop
roll
inc
scas
sub
call
scas
push
fstpt
add
push
mov
movsl
jl
and
jae
xor
xchg
pop
mov
dec
cmpl
mov
xchg
mov
scas
or
cli
mov
or
hlt
movsb
aam
pop
jae
stos
jb
push
and
insl
out
fstl
jmp
in
xchg
idivl
loopne
xlat
inc
inc
cmc
add
mov
jmp
fidivs
dec
jecxz
mov
mov
mov
pop
in
ss
xor
cmp
cmpsb
pop
into
das
es
inc
cltd
sub
push
stos
push
push
mov
aam
cmp
int
dec
fs
xchg
xchg
jl
aas
sbb
mov
sahf
mov
jno
leave
aaa
dec
daa
test
jecxz
out
mov
pushf
mov
loop
cwtl
push
aas
pop
sub
shrb
stos
rclb
add
test
xchg
rcrl
xlat
fcompl
mov
cmp
sub
jmp
in
pop
and
dec
pop
mov
sbb
and
pop
xlat
les
pop
cmp
out
pop
mov
mov
fistps
and
sbb
jmp
mulb
test
xchg
cmp
dec
into
push
push
shl
lret
iret
and
xchg
repz
cmp
outsb
jle
mov
mov
outsl
bound
xchg
andb
xchg
loop
inc
xchg
jo
mov
addr16
dec
jge
xchg
mov
mov
sub
adc
pop
psubw
jg
sbbb
jns
in
pop
mov
inc
xchg
aas
sbb
add
cmp
out
sub
inc
je
movsb
cltd
fdivs
adc
mov
movsl
cmpsl
movsl
sub
iret
push
mov
cwtl
stc
insl
int
loopne
pop
jnp
sub
mov
sbb
stc
mov
and
fs
or
imull
shl
jb
sahf
mov
lock
stos
sbb
mov
mov
aas
mov
arpl
jg
cmp
jg
stos
or
dec
lret
enter
cmp
mov
inc
rcrl
fwait
and
or
cs
pop
add
push
mov
lods
xchg
push
push
jnp
inc
pop
test
jne
sub
dec
in
sub
sarb
movsb
je
jmp
mov
cld
lahf
mov
or
cltd
movsl
sub
push
push
sub
mov
add
rcl
loopne
sub
push
mov
std
cwtl
xchg
push
repnz
or
adc
xor
dec
mov
pop
xchg
sub
insl
gs
inc
js
insl
pushf
ficomps
push
inc
add
inc
add
jb
and
cltd
adc
mov
jp
nop
inc
imul
cmp
or
hlt
mov
jnp
lahf
push
dec
loopne
xchg
sub
mov
pusha
mov
movsb
stos
push
add
rcl
fsub
cmc
xor
lcall
sbb
mov
push
daa
add
or
or
out
and
push
mov
cmp
rclb
jl
sub
hlt
adc
das
push
add
sbb
rcll
lahf
dec
xchg
or
mov
add
int
pop
int
outsl
stos
arpl
mov
mov
mov
sahf
bound
stos
rorb
popf
in
movsb
aad
int3
mov
mov
insl
cmp
pop
mov
mov
lcall
loop
dec
push
xchg
dec
push
dec
shl
cmp
dec
jle
pop
out
fs
jmp
xorl
and
inc
and
pop
stos
xchg
mov
add
and
cltd
jp
faddl
sbb
inc
cs
dec
pop
mov
repz
ja
mov
cld
push
cmp
or
mov
mov
adc
aam
pop
push
hlt
mov
ja
push
push
sub
adc
cli
mov
or
inc
push
add
add
fldenv
std
mov
xorl
sti
push
das
add
faddl
fs
push
push
inc
lods
ja
insb
dec
aaa
add
cmp
xor
push
popa
lret
cmp
std
pop
out
jae
lock
pop
dec
call
faddl
insl
sbb
xchg
mov
rolb
shl
jge
and
dec
in
out
cmpb
out
fwait
jnp
or
out
mov
clc
iret
cltd
subb
call
bound
std
aas
push
andb
mov
lock
ss
stos
pop
xchg
lcall
je
inc
or
push
mov
xor
add
test
mov
dec
push
mov
xorb
mov
insb
mov
jo
jle
inc
dec
bnd
xchg
xor
jnp
rcrl
sub
push
dec
addr16
or
cmp
mov
mov
fadds
mov
in
inc
xchg
pop
test
loope
push
cmp
mov
push
xor
cltd
jl
pop
mov
cmpsl
or
hlt
pop
movsl
jne
call
loopne
loopne
inc
xchg
dec
push
add
aas
mov
jo
xchg
enter
or
xor
in
pop
push
mov
dec
jo
pop
aam
out
outsl
mov
or
shll
cmp
fwait
imul
xchg
movsl
sti
fiaddl
imull
out
push
or
add
scas
cmp
stc
pop
incl
pop
inc
xchg
sbb
fsubl
mov
pop
test
inc
mov
xchg
mov
mov
pop
mov
jno
push
push
dec
popl
scas
mov
scas
lods
mov
mov
aam
pop
jle
cmp
adc
inc
cmp
adc
imul
dec
ret
outsl
jb
mov
shrb
and
scas
out
inc
sub
dec
aas
dec
mov
inc
fbstp
inc
pop
mov
adc
and
rcll
cli
mov
lock
xlat
in
insb
loop
push
arpl
in
push
out
sub
cli
rcl
adc
and
sbb
call
xor
mov
jo
inc
lods
push
movsb
test
pop
dec
mov
push
sbb
xchg
jg
xchg
mov
popa
in
addr16
out
xchg
xor
add
aaa
mov
pushf
mov
lods
movsb
cmpsl
mov
mov
jbe
aad
jl
stos
xor
loope
mov
jp
adc
xor
imul
cmp
dec
or
jne
dec
jle
cs
imul
int
shl
jmp
and
adc
jae
jnp
into
cmp
and
jo
add
dec
and
dec
or
mov
test
call
outsb
mov
ja
inc
mov
push
adc
out
dec
lds
movsb
test
test
arpl
pop
xchg
test
sbb
rolb
movsb
lods
and
icebp
xchg
repnz
cmp
xchg
pmuludq
push
iret
aaa
packuswb
mov
jnp
aaa
inc
ja
xor
fwait
pop
add
lret
adc
stc
sbb
rcrl
dec
or
lds
xchg
mov
jmp
imull
nop
add
fistpl
testl
das
je
push
mov
test
xor
enter
xchg
adc
notb
adc
mov
mov
dec
lcall
add
cmp
add
and
int3
xchg
repnz
divl
mov
out
mov
or
jg
sbb
dec
mov
fidivrl
sub
add
sub
cmp
lret
sub
js
ret
decl
fwait
inc
scas
loopne
jnp
sub
mov
dec
mov
adc
mov
rcll
cmpsl
subb
adc
push
push
cld
test
iret
add
loope
lahf
call
pop
sbb
and
mov
or
dec
xchg
adc
mov
push
sbb
pop
addl
fs
lock
stos
sbb
fwait
inc
imul
rcl
pop
fs
jl
sarb
mov
out
ret
imul
test
jl
sub
out
add
inc
inc
stos
push
xchg
add
xor
popa
mov
sub
shll
cwtl
mov
mov
ret
push
sub
pop
jl
inc
movsl
adc
iret
inc
clc
negl
pop
inc
pushf
cmp
lods
hlt
in
inc
adc
cmp
int3
mov
mov
mov
mov
push
mov
sub
mov
mov
add
pop
mov
fists
mov
xor
jo
push
test
inc
aad
mov
cmpsl
lock
sbb
mov
stos
inc
pop
xor
fists
pop
cmp
inc
xor
mov
jp
ss
lds
stos
je
bswap
xor
cmp
scas
add
pop
repnz
push
sbb
cmp
push
inc
jecxz
cmp
xchg
fdivrs
mov
dec
stos
test
mov
ss
pop
add
add
andb
adcl
stos
xchg
jno
lods
mov
push
jl
std
bound
jns
mov
and
out
add
jo
xchg
push
cs
inc
cmp
inc
pop
push
sub
sbb
mov
push
insb
xchg
push
int3
ss
cmp
xchg
mov
je
mov
push
aad
dec
iret
xchg
pmulhw
cmc
add
int
jge
cmp
and
pop
jns
aad
sbb
shlb
aam
xor
outsb
test
pop
mov
jmp
cmp
stos
jg
leave
cltd
in
stos
flds
dec
mov
arpl
inc
mov
in
adc
dec
pop
xchg
mov
das
mov
les
std
aam
cld
and
shll
das
fdiv
and
xchg
movl
jo
iret
ret
pop
pop
jno
dec
sub
jecxz
fstpl
pop
dec
push
in
fcompl
jle
adc
mov
in
or
cmp
fcompl
fldln2
fcoml
jae
cwtl
dec
lahf
push
cltd
test
les
jecxz
sub
sub
int
leave
xor
aad
push
xor
les
mov
jecxz
xchg
insl
adc
xor
xchg
cmp
stos
push
dec
jmp
inc
daa
push
dec
push
sbb
sar
mov
int3
push
pop
fdivs
sbb
in
xchg
je
dec
mov
pushf
push
xor
and
int
mov
jle
repz
inc
scas
mov
addr16
js
rolb
sarl
inc
xchg
xor
addr16
fs
hlt
sub
lea
imull
xor
movsl
mov
xchg
scas
inc
das
fsubrl
adc
xchg
sub
icebp
adc
sahf
jp
fs
scas
or
aaa
xor
aam
ret
push
add
pop
push
jae
cmp
push
jns
inc
enter
dec
les
movsb
pop
push
lods
mov
aas
fldenv
xchg
push
rolb
lea
add
cs
xchg
inc
into
aas
cmp
dec
add
mov
xchg
cmp
ss
pop
xor
cmp
es
jnp
jl
dec
stos
ret
jns
mov
adc
push
inc
push
scas
cmpb
leave
imul
sub
jp
out
push
adcl
je
or
sbb
jl
add
aad
xor
leave
pop
cmc
jge
lcall
packuswb
cs
jl
push
and
pop
lds
push
jbe
pop
or
std
rolb
dec
lods
les
test
xchg
std
popa
cmpsl
scas
inc
cmp
mov
int
xchg
lret
idivl
sbbb
pop
fistps
jb
adc
mov
inc
or
mov
inc
unpcklps
ficoms
push
dec
lods
in
leave
jg
fistl
sbb
mov
xlat
mov
jl
sub
das
jno
test
daa
imul
les
outsb
stc
je
pop
lret
xor
mov
xchg
pop
scas
in
inc
xor
xchg
shlb
loope
mov
subl
sbb
pop
shl
lcall
pushf
mov
jl
addr16
iret
cmpsb
loope
xchg
gs
test
jmp
outsl
cltd
flds
addb
shr
pop
shl
cmp
add
test
jnp
ficoms
cli
jecxz
cs
cmp
mov
fidivs
adc
ret
arpl
add
mov
dec
xchg
lret
jg
dec
add
pop
adc
xchg
add
push
and
or
ja
jmp
jno
pop
push
movsl
ficoml
push
lcall
mov
add
sub
fs
push
pop
cmp
jne
repnz
mov
fdivrl
mov
xor
or
arpl
sarb
notw
cld
test
cmp
xor
mov
jge
fildll
insl
and
ds
mov
loopne
or
fwait
push
mov
xor
loope
xchg
mov
daa
dec
sub
mov
pand
pop
int3
addr16
scas
movsb
mov
cs
out
addps
sub
inc
mov
test
dec
fisttpl
mov
push
incb
loopne
pop
mov
rcrl
popa
xchg
movb
sar
int
dec
data16
jg
dec
int
fmuls
push
popa
shl
fildl
repnz
sbb
dec
push
orb
add
push
stos
hlt
xor
rorl
cmpsl
cmpsb
sub
jns
jle
jmp
cmc
aas
adc
and
mov
cmp
or
sbb
insb
movaps
mov
push
pop
add
fisubrs
or
popf
ja
test
xchg
or
cli
jbe
notb
jne
xchg
fucomi
imul
cmpsl
mov
cmp
ffreep
sub
dec
add
xchg
add
fwait
sub
and
push
fdivrp
popa
cmp
pop
decl
aam
jge,pn
pop
fidivs
push
push
enter
xor
movsb
imulb
ja
rclb
je
push
add
push
push
fldlg2
jle
cli
xchg
out
push
add
scas
ss
cmp
cwtl
out
fcom
hlt
adc
jne
adc
lods
repnz
das
push
and
pop
idivb
mov
xlat
pop
gs
jnp
je
popf
jle
mov
cmp
adc
xor
ljmp
int
dec
ds
sbb
popa
bound
dec
xchg
clc
or
aad
test
xchg
lret
std
sub
dec
jecxz
hlt
inc
std
inc
mov
mov
add
mov
dec
push
inc
cmp
aaa
mov
cmp
dec
push
lcall
insb
mulb
mov
xchg
mov
ja
fld
jp
mov
mov
jne
stos
or
movsb
cmp
mov
daa
icebp
ljmp
mov
push
inc
fiaddl
lahf
daa
push
ss
sub
fs
data16
adc
dec
or
ficomps
sti
inc
repnz
sbb
pop
pop
adc
ja
push
adc
push
sbbb
sbb
div
or
in
pop
ficoms
inc
inc
cmp
ss
jl
out
mov
xchg
iret
mov
dec
imul
push
cwtl
out
push
xchg
lea
mov
mov
xor
pop
dec
das
push
mov
outsb
dec
lock
xchg
mov
sub
cmp
and
xchg
dec
jmp
ja
cmovns
push
psraw
leave
mov
pop
jp
xchg
push
cltd
cmpsb
mov
sbb
dec
cmpsb
mov
arpl
scas
pop
out
out
jno
ret
mov
adc
out
adc
mov
ds
ret
loope
loopne
test
mov
out
in
sub
int
push
and
xchg
dec
or
ds
jnp
and
and
mov
sbb
adc
xchg
adc
inc
cmpsb
push
mov
ret
jb
push
inc
rcll
lock
incb
jp
jp
lahf
push
cmp
aam
fs
das
mov
sub
es
aam
cmp
inc
adcl
movsl
add
ret
insb
pop
cmp
js
mov
sbb
mov
mov
jecxz
popa
or
dec
sub
int
aas
xor
out
outsl
push
fdivrl
aam
stos
outsb
cmpsl
xchg
and
add
leave
movsb
cmp
xor
mov
insl
inc
and
cmpsb
aas
jmp
mov
lock
nop
mov
dec
jnp
loope
in
inc
fdivrl
mov
inc
sbb
aad
sbb
nop
insb
sub
add
movsl
insl
dec
mov
loop
rorl
sub
and
adc
fdivrl
inc
add
inc
fistpl
jbe
xlat
sub
jno
inc
dec
and
sbb
mov
or
pop
sti
pop
test
lea
fs
jno
insb
xor
push
cmpsl
gs
in
icebp
xchg
and
lret
pop
ss
push
mov
cmc
pop
mov
mov
gs
fsts
loop
pop
xorb
ja
nop
popf
inc
mov
mov
xor
leave
addr16
flds
jecxz
popa
mov
imul
xchg
xchg
lret
test
mov
inc
pop
movb
mov
xor
dec
cmpsb
stos
sbb
imull
xor
rcrb
push
pop
imul
test
push
fnstenv
mov
aaa
jge
xchg
xchg
cli
pop
mull
jnp
insb
mov
test
or
out
sbb
mov
dec
pop
insb
mov
cmc
sub
mov
loope
int
sub
mov
sub
inc
fcmovnb
mov
fbstp
repz
xchg
fcompl
je
dec
jg
ss
in
mov
push
mov
sub
adc
loopne
cmp
mov
bound
sbb
loope
push
lcall
lods
ret
add
dec
loop
jg
das
mov
or
xor
gs
push
aam
sbb
mov
cwtl
mov
add
decb
mov
pushf
out
les
sub
into
stos
jae
mov
or
jg
in
pop
cld
sbb
lds
fucomi
sbb
rorb
pop
sbb
fs
iret
movsb
rcrb
xchg
add
pop
int3
sub
outsb
lcall
mov
fstpt
pop
pop
sub
loopne
mov
jno
incb
mov
adcb
mov
dec
sub
jl
mov
imul
mov
dec
mov
aam
imul
push
mov
push
sub
int3
fsubrs
pop
cmpsb
aad
lcall
xchg
mov
jbe
out
dec
bound
es
xor
xchg
enter
insb
dec
test
mov
pusha
repz
enter
dec
mov
lret
int
mov
xor
inc
or
mov
sub
mov
cmp
mov
js
push
inc
sub
dec
cmpsl
fimuls
pop
outsl
dec
mov
jns
in
push
leave
xor
sbb
jae
dec
inc
gs
or
sbb
bound
int
leave
in
aas
and
mov
sarl
jno
sbb
inc
adc
adcl
aaa
mov
sub
das
and
xlat
cmpl
pop
xchg
push
lcall
sub
add
lret
sub
push
mov
xchg
nop
fldz
mov
scas
jmp
push
jnp
es
pop
jo
sbb
push
inc
pop
and
fistpl
repnz
stos
xchg
imul
mov
pop
stos
loopne
in
scas
scas
js
mov
out
inc
push
mov
scas
mov
jg
cmp
xlat
or
pop
xor
ds
mov
in
aam
mov
movsb
mov
fistpll
lods
out
inc
sbbl
int3
aam
adc
mov
pop
mov
aam
js
xchg
in
dec
ljmp
lahf
addr16
mov
xchg
idivl
loope
int3
bound
pop
xor
lods
sub
sbb
xchg
fcomps
je
clc
rcr
insl
push
push
sub
popf
inc
daa
gs
jbe
rclb
out
mov
mov
clc
sarb
cli
mov
pushf
sub
jno
fcmove
jle
into
das
outsb
adc
in
pusha
xchg
mov
insb
jecxz
movsl
in
adc
mov
inc
int3
xchg
shrb
std
pop
add
shll
sbb
xchg
aas
das
xor
pop
push
xor
mov
dec
sub
add
inc
fxch
inc
adc
mov
test
cmpsb
fstpt
int
movsl
inc
mov
dec
out
mov
les
mov
jae
adc
push
or
xchg
and
test
jecxz
imul
adc
adc
aad
add
push
inc
and
sbb
sbb
push
inc
js
loope
lds
adc
inc
add
out
or
leave
js
dec
mov
mov
fistps
and
push
mov
inc
mov
pop
lods
adc
lods
xchg
mov
call
adc
cmp
sbb
adc
pop
lods
loopne
mov
push
xor
mov
jecxz
cld
push
sbb
aas
jno
in
mov
mov
add
mov
and
jmp
mov
add
lock
fs
dec
das
shlb
aas
cli
jp
ret
or
add
inc
aaa
mov
push
jno
adc
cmc
scas
mov
mov
gs
fistps
lret
rcrl
jmp
cmp
xchg
xor
std
fwait
xchg
leave
adc
push
in
mov
cmp
mov
mov
jne
icebp
lock
inc
test
into
sbb
inc
pop
addr16
loopne
pop
jbe
popf
sbb
test
lret
aas
dec
lods
add
lret
fisttpl
icebp
jecxz
fstps
mov
popf
xor
lahf
scas
ret
adc
xchg
jg
ss
pop
dec
or
push
nop
ljmpw
call
cmp
inc
bound
pop
jb
popa
aaa
xchg
xor
sbb
adc
fwait
xor
test
xor
xlat
ds
inc
inc
repnz
xchg
xchg
mov
dec
add
add
negl
rclb
addr16
enter
rcrb
clc
sbb
inc
std
cmc
pop
push
icebp
int3
cmp
pusha
mov
lret
pop
adc
aaa
mov
std
pop
sbb
int3
pushw
inc
repz
inc
sub
andl
loope
rorb
push
loope
lahf
mov
dec
inc
and
outsb
inc
add
inc
xor
push
cmp
mov
mov
js
scas
pop
lock
sub
lcall
cwtl
mov
icebp
pushf
dec
lea
jg
jne
outsb
inc
pop
popf
mov
ja
jl
push
icebp
repz
sbb
xor
dec
cltd
jl
push
repnz
push
mov
xchg
push
testl
ret
add
dec
sub
sbb
mov
xor
push
bound
rol
jecxz
popf
add
sbb
jl
mov
dec
jb
dec
mov
and
jnp
lret
data16
lock
push
pop
xchg
addr16
add
into
sbb
xor
fwait
mov
shll
inc
sub
daa
inc
push
lret
push
test
dec
cmc
sub
in
dec
movsb
mov
and
mov
adc
inc
lods
or
lds
cmc
cmp
mov
dec
loop
inc
inc
dec
ja
sub
jne
and
mov
cmc
push
bound
jns
ljmp
outsb
test
inc
lock
xchg
dec
fs
out
pop
pop
add
mov
push
push
fs
jecxz
xor
jne
lods
cmc
lret
mov
sub
in
test
push
and
sub
fwait
xchg
imul
outsb
jmp
aad
test
fisubrs
mov
in
jecxz
fimuls
jns
lcall
inc
test
cmp
bnd
mov
xchg
aas
xchg
adc
int
push
fdivrs
pop
repnz
in
lcall
mov
shrb
sbb
cmpb
popa
test
aaa
iret
cmpsl
js
inc
in
adc
mov
les
in
cmp
aas
imul
mov
xchg
shrl
fildll
push
mov
jp
js
dec
repz
in
push
mov
ret
aam
sbb
clc
cwtl
addr16
push
mov
sbbb
cmpsb
mov
push
pop
out
mov
popa
dec
ret
lods
mov
xlat
inc
sbb
stos
and
jge,pt
inc
das
mov
cmp
stos
cltd
sub
lock
les
cmp
mov
test
test
hlt
inc
jns
sub
add
xchg
sub
push
xchg
xchg
mov
ljmp
mov
incl
jg
jo
jno
imul
push
mov
inc
ficoml
out
ret
sbb
insb
and
pop
mov
mov
test
ja
mov
shlb
and
insb
push
sti
jle
or
sbb
mov
push
pop
dec
sub
dec
std
inc
sbb
mov
repnz
inc
divl
test
ds
pop
arpl
dec
pop
mov
dec
inc
xor
fcoml
xchg
mov
outsb
mov
xchg
sub
sahf
dec
sub
mov
out
daa
mov
mov
xchg
add
mov
lods
insl
fnstenv
xchg
or
sub
mov
mov
add
jb
add
xchg
adc
mov
shl
dec
adc
out
mov
in
dec
and
xchg
jbe
hlt
mov
cmc
jl
pop
out
push
icebp
cmp
lret
pop
jns
push
shll
jb
pop
bound
mov
adc
hlt
stc
repnz
inc
fwait
jae
scas
jecxz
adcl
cwtl
mov
scas
aas
insb
mov
lods
insl
pop
jno
movl
mov
jmp
imul
mov
ljmp
jo
iret
or
out
mov
sbb
inc
xor
ja
xchg
and
mov
arpl
mov
jl
inc
fldl
add
xchg
mov
xchg
mov
ja
aam
xchg
mov
faddl
sahf
mov
mov
cli
fcmovb
xchg
scas
mov
hlt
stos
xchg
dec
adc
or
subl
fsubr
mov
rcll
loopne
jp
and
stos
ret
lock
fldt
clc
pop
push
aas
cld
lahf
sbb
imul
dec
es
pop
negl
pop
inc
cmpsw
outsb
stc
sub
imul
clc
add
jb
mov
sbb
xor
insb
cmp
leave
xor
jecxz
out
push
mov
dec
mov
imul
clc
enter
cmc
sbb
cmp
mov
mov
pop
repnz
int
orb
sbbl
pop
ljmp
adc
cld
int
sbb
push
inc
push
push
lahf
shlb
dec
shl
bound
push
in
fstps
pusha
movsl
push
aaa
aam
push
xorb
cli
inc
movsl
inc
push
int3
mov
xchg
lods
shr
jge
and
jecxz
inc
aam
sub
and
cmpsl
fwait
and
ret
mov
mov
push
adc
sbb
imul
jo,pn
pop
das
es
mov
loope
xor
pop
addr16
and
jno
mov
sub
in
inc
test
arpl
sub
add
dec
out
or
xor
scas
xor
repnz
and
mov
cmc
outsl
pop
xchg
ja
xchg
adc
ret
adc
in
pop
imul
dec
es
incb
cmp
mov
lods
movl
cmpsl
fistl
mov
in
sub
mov
ljmp
jo
es
loop
notl
imul
cli
popa
frstor
sbb
add
and
mov
cli
cld
shlb
jge
mov
aad
repz
pop
or
fs
inc
dec
xor
fidivrs
sub
cmp
or
loope
push
fistpll
in
add
sbb
mov
jnp
inc
adc
lods
adc
lret
xor
aas
and
cmc
sub
cmp
je
cmp
cmp
bound
test
jae
popf
mov
daa
mov
pop
or
cmp
pop
pop
clc
pop
clc
inc
push
sbb
push
leave
orl
es
cmp
sbb
push
stc
push
mov
cmc
adcl
shrl
dec
mov
cmp
shrb
sub
jnp
and
push
mov
mov
xor
fisttpll
lock
mov
sarb
xchg
movl
jmp
sbb
cwtl
mov
and
cmc
adc
aad
inc
dec
mov
adc
mov
jbe
sub
das
xchg
adc
lods
mov
jp
and
ret
xchg
mov
sbb
das
cmc
std
mov
jbe
mov
adc
insl
cmp
ret
adc
cmpsl
stos
cli
push
dec
out
loop
mov
add
cli
mov
mov
popa
cltd
jl
mov
push
mov
aaa
addr16
cmpsl
hlt
loopne
in
aam
pop
jne
mov
enter
fwait
loop
imul
adc
imul
push
xorb
cmp
imul
adc
cmpsb
aaa
push
xchg
mov
jmp
jns
add
cwtl
xlat
cmp
sbb
pop
in
enter
les
mov
xchg
adc
fdivs
lcall
ret
add
sbb
es
daa
cmc
ljmp
in
es
imul
das
xchg
stos
movsb
test
pop
test
pop
push
out
divb
and
in
cmc
mov
ror
cmp
sub
cmp
jne
fimuls
mov
jmp
insl
arpl
mov
in
icebp
aad
cmpsl
push
mov
push
addr16
ljmp
aam
mov
inc
pop
jb
xchg
mov
pop
push
fstpt
iret
sub
cld
or
adc
shll
stos
ds
insb
es
lods
push
jge
adc
pop
push
mov
and
data16
out
push
cwtl
fmul
add
fidivrl
pop
mov
stos
sub
inc
loopne
mov
xor
lock
in
pop
cmpsl
mov
ja
emms
xchg
sbb
clc
mov
cmc
sti
cwtl
push
push
aas
push
cmp
pop
addb
xchg
fisttps
pusha
cmpsb
out
test
xchg
jecxz
call
je
in
es
in
jge
shrl
lock
xor
lods
sbb
add
dec
pop
leave
sahf
and
mov
mov
gs
js
xchg
cmp
pop
jecxz
out
mov
fildll
fcoms
inc
push
add
lods
movsl
cs
ret
into
ds
mov
xchg
cmpl
test
mov
dec
aas
lcall
xchg
addr16
and
xor
in
adc
cld
add
push
and
aad
adc
loop
sub
mov
mov
cmpsl
pop
inc
lcall
push
test
scas
push
pop
ds
pop
arpl
enter
dec
imul
mov
and
fdivr
jnp
paddusw
or
popa
movsl
and
mov
push
testb
cwtl
inc
or
mov
pop
test
into
mov
aaa
adc
arpl
mov
mov
and
pop
mov
mov
jae
mov
adc
leave
sbb
daa
aas
rcrb
pop
leave
cmp
sub
or
and
ret
mov
lahf
sbb
xlat
jo
push
gs
leave
inc
mov
out
inc
push
mov
pop
aaa
jecxz
scas
mov
ret
or
xor
sub
sub
mov
mulb
inc
push
shrb
jo
mov
out
inc
out
imul
in
out
imul
jl
push
lret
add
jl
movsb
sbb
nop
sbb
add
and
sbb
jns
pusha
leave
es
or
cmp
dec
sub
push
push
xorl
pop
inc
mov
mov
mov
xor
icebp
pusha
pop
das
dec
dec
out
jp
sub
push
enter
andl
inc
dec
mov
ss
xor
scas
mov
mov
fmull
sub
repnz
repnz
ficompl
mov
sbb
es
arpl
cmc
popf
push
aaa
test
add
dec
inc
divl
std
xor
insb
or
loope
jnp
outsl
dec
sahf
adc
pop
test
pop
ret
pop
jne
std
mov
repz
out
je
mov
mov
pop
xlat
aaa
inc
lcall
cmpb
sets
psubusb
mov
push
mov
pop
sbb
dec
sahf
push
adcl
mov
addl
jge
dec
xchg
pushf
and
aas
mov
adc
fbstp
dec
jl
add
sbb
and
cmp
add
fcmovu
dec
ljmp
jmp
loopne
andl
xchg
xchg
push
imull
xchg
push
out
dec
rorl
push
fcompl
mov
nop
pop
ja
in
dec
jns
cmp
dec
popf
mov
cltd
jns
idiv
mov
sub
lods
push
mov
and
ficoml
lahf
mov
fsubrp
jno
loope
add
adc
dec
add
push
enter
xor
sub
lea
mov
and
and
sbb
shl
and
xor
xor
out
stos
inc
hlt
stc
in
in
mov
dec
mov
mov
xlat
dec
mov
test
inc
pop
out
mov
gs
adc
push
and
lea
addr16
sti
test
stos
std
sahf
daa
adc
aaa
push
es
cmc
iret
jecxz
and
scas
flds
jp
cltd
fisttpl
pop
iret
in
xchg
in
pop
stos
stos
ds
js
and
mov
loopne
dec
jb
sarl
add
rorl
or
and
inc
jle
out
adcb
jle
pop
mov
pop
or
ljmp
inc
sbb
inc
pop
cmp
adc
sbbl
cmp
cmp
and
jl
mov
adc
jae
scas
mov
inc
xchg
mov
xchg
jb
fmull
in
insl
jg
and
fsts
jne
negl
push
mul
push
adc
rol
mov
pop
lahf
in
add
mov
add
push
mov
iret
leave
pop
filds
shr
testl
mov
push
push
xchg
mov
jno
push
mov
out
aas
inc
jno
loop
lds
mov
push
cmc
int3
lds
movnti
enter
test
push
lcall
cmc
dec
js
add
leave
loop
inc
jae
iret
ret
outsl
aas
mov
mov
push
mov
enter
sbb
repz
adc
shll
int
ss
lret
jp
ret
push
inc
push
xchg
push
cmp
mov
add
fisttpll
jns
xchg
fnstenv
sub
lea
test
imulb
out
xchg
aaa
and
out
add
stos
fimull
push
dec
andl
adc
jbe
iret
lahf
lahf
pop
int
pusha
das
push
pop
push
adc
mov
jg
repz
shrl
sub
and
stc
mov
js
mov
mov
jo
add
lds
or
xor
movsb
test
sub
icebp
loopne
std
push
les
lcall
xor
mov
js
ss
sub
iret
adc
movsl
and
cmp
sbb
mov
mov
sub
arpl
shll
stos
fwait
arpl
mov
mov
mov
pop
out
cmp
push
sub
ljmp
dec
idiv
xchg
in
roll
mov
push
adc
pusha
je
call
ja
push
mov
or
sub
add
pop
mov
mov
das
lds
cltd
mov
js
adc
inc
icebp
sbb
xor
inc
mov
mov
push
sbb
or
jle
lock
xchg
mov
pop
sub
xor
andb
sahf
mov
adc
xor
movsb
add
or
std
mov
cmp
js
xchg
rolb
add
adc
leave
mov
adc
fs
sbb
ficompl
arpl
adc
daa
rorl
mov
mov
jne
popf
push
daa
fs
andl
fstl
mov
into
jae
dec
flds
push
icebp
sbb
xor
sbb
inc
dec
sub
add
dec
jo
ret
scas
fwait
call
cmp
mov
xor
loopne
cmp
jae
inc
ret
dec
push
mov
xchg
insb
pop
cmp
inc
insb
mov
cs
jne
rorb
and
pop
aam
and
inc
pop
data16
movsl
jle
inc
data16
fcmovbe
jle
gs
aad
push
pop
mov
test
out
mov
xchg
dec
cmpsl
imulb
loop
pusha
clc
sub
cli
movsb
les
popa
and
je
jge
mov
outsb
and
xor
inc
pop
dec
dec
push
xchg
out
cmpsb
int3
mov
rorl
mov
addr16
jle
adc
push
movsl
ret
inc
xor
mov
mov
jne
pushf
adc
inc
data16
xorl
lods
or
cmp
dec
out
js
lcall
clc
jbe
mov
movsb
bound
dec
stc
mov
inc
outsl
push
xchg
push
sbb
jge
sbb
adc
fstp
push
out
mull
dec
jbe
fisubs
xor
stc
mov
push
into
fs
test
xor
sbb
xor
fdivs
mov
aad
aam
enter
flds
movsl
adc
xchg
add
out
xor
movsl
movsl
and
add
pop
mov
rorb
push
cmp
inc
sub
xchg
sub
data16
stc
call
pop
jo
inc
mov
mov
jp
ficoml
out
jb
add
cmp
push
test
sub
push
gs
ret
in
jmp
and
sub
cmpl
stos
push
fcomps
fsubr
insb
js
pop
into
mov
loopne
aas
or
int
push
cltd
pop
nop
push
arpl
push
roll
xchg
arpl
xor
stos
add
push
pop
lods
outsb
mov
xchg
data16
add
or
add
dec
adc
sbb
pop
lcall
clc
inc
popa
mov
dec
shl
push
sub
cmpsb
sbb
rorl
fists
pop
mov
xor
pop
mov
sub
sub
mov
inc
push
lea
std
aam
repnz
cs
imulb
xchg
cmc
pop
sbb
roll
in
test
and
xor
add
mov
cmpsl
xchg
fwait
or
loope
pop
lds
mov
aad
sbb
mov
popa
dec
sub
sbb
push
nop
out
adc
or
negb
xchg
cmp
sarl
push
xor
cmpsb
dec
lcall
das
sbb
xchg
aaa
sahf
aas
loope
mov
inc
xchg
push
jg
sbb
cmp
stc
jnp
loope
insl
cmpl
gs
fs
sbb
rclb
hlt
jecxz
cltd
iret
sub
cmc
data16
push
jno
into
cmp
gs
leave
push
jge
mov
xlat
pop
insb
scas
jno
add
pop
dec
fwait
ljmp
ds
xchg
loope
fisubs
cmp
mov
stc
iret
rep
mov
or
push
shlb
imul
lcall
and
fidivs
shll
out
nop
dec
shl
stos
lock
sbb
inc
shlb
loopne
pushf
je
push
xchg
mov
arpl
mov
imul
je
into
fwait
inc
and
shrl
adc
inc
sub
xchg
aad
movb
cld
nop
cli
or
xlat
jbe
jne
cmp
movsb
shrb
leave
lret
adc
lahf
sbb
mov
stos
sub
push
jl
mov
mov
jl
and
dec
pushf
ss
mov
stc
sarb
ffreep
cld
cmp
or
testl
pop
in
scas
cmpsb
pushf
ja
jno
jp
jle
mov
test
cmc
mov
jns
mov
mov
nop
and
aaa
sub
filds
lods
adc
movsl
jo
inc
stos
xor
mov
push
and
adc
insb
dec
or
or
or
pop
aad
inc
int
lahf
xor
sbbl
sbb
pop
push
das
mov
arpl
out
cmpb
bound
xor
aaa
xor
and
inc
std
adc
lock
mov
cmp
xor
sarl
in
scas
int
pop
lret
repnz
out
in
ret
sbb
dec
push
inc
jb
mov
stc
xchg
mov
or
xchg
lret
dec
lock
mov
push
push
xor
rolb
leave
dec
into
pop
icebp
jle
ljmp
mov
jbe
mov
and
scas
mov
adc
mov
inc
in
icebp
cmpsl
popf
cmpsl
popf
lds
xor
bnd
xor
dec
cwtl
jae
nop
mov
aad
pop
push
xchg
fdivl
sahf
xchg
lds
xor
fdivrl
and
sub
adc
call
xlat
dec
in
rcrl
mov
test
xchg
add
jae
pop
inc
sub
push
or
or
adc
js
shrb
mov
inc
jl
cs
stos
pop
cmp
xor
in
rcrl
pushf
jno
adc
dec
fimuls
je
es
cmp
push
jge
iret
repz
xor
arpl
repnz
mov
and
outsb
rclb
jae
dec
adc
xchg
or
mov
cmp
jecxz
mov
jb
aam
jnp
mov
aad
mov
ret
scas
sub
adcl
inc
aas
jmp
mov
or
test
fldlg2
pop
xor
loopne
in
jle
xor
dec
cwtl
hlt
xor
jns
loope
push
cmp
sub
sub
jp
lret
in
sbb
jnp
mov
cmpsl
lcall
jge
inc
xchg
xor
mov
rorl
mov
push
sbb
push
jb
fsub
or
lcall
sbb
imul
cmp
out
inc
push
push
lods
je
fs
loop
negl
add
push
daa
xor
ss
pop
ret
lcallw
cmc
bound
sbb
push
pop
popa
mov
sub
frstor
push
inc
sar
aas
or
add
sti
inc
fs
dec
mov
push
jl
idivb
mov
ljmp
lods
es
fildl
or
or
data16
ja
add
sub
push
mov
pop
xchg
inc
lret
adc
int
push
mulb
dec
lods
test
mov
test
pop
jbe
add
out
xchg
xchg
cmp
or
mov
push
mov
xchg
test
dec
xor
sti
dec
cmp
add
daa
jge
sub
add
int
and
or
mov
das
cmp
insb
sahf
aad
adc
push
mov
sarl
js
js
cmp
cwtl
mov
mov
iret
cld
rcll
add
push
or
mov
fistps
or
call
push
jb
ror
add
pusha
inc
pop
sbb
cltd
adc
pop
out
dec
jb
mov
int3
cmp
aam
mov
leave
mov
movsb
pop
mov
sti
dec
pop
int
mov
incb
lahf
jb
mov
aaa
xchg
int3
arpl
pop
stos
stos
and
in
fidivrl
and
or
les
adc
daa
add
iret
ret
sub
repnz
lods
arpl
imul
imul
or
mov
out
jmp
movsb
fdivp
add
out
in
pop
inc
mov
sarl
xor
and
mov
orl
rcr
std
jl
movsb
and
mov
fxch
mov
adc
cmc
mov
lea
popf
setno
jecxz
mov
imul
loopne
sub
sbbb
push
insb
imul
mov
adc
scas
popf
or
inc
jno
inc
sub
inc
dec
xor
jns
in
test
bound
lcall
xchg
shrb
out
and
cmp
fwait
xchg
xchg
out
ds
shrl
in
cmp
mov
ljmp
roll
nop
pop
mov
add
enter
fdiv
dec
gs
out
pop
jnp
jg
cwtl
cmc
cld
inc
adc
fdivr
adc
rcr
das
cmp
cmp
pop
icebp
jl
int3
jo
call
mov
and
cmp
ss
loope
dec
les
dec
add
ret
test
or
shrl
bnd
fisubl
add
push
and
sub
sarb
jnp
jecxz
xchg
pop
xchg
leave
leave
sub
push
adc
outsb
add
sub
mov
mov
add
dec
int3
mov
xor
jno
push
mov
cmpsb
inc
push
mov
lds
sbb
pop
sahf
inc
shlb
inc
jnp
xchg
jmp
jp
mov
lods
shlb
push
movl
cmp
in
add
sbb
push
inc
ja
adc
adc
mov
adc
cmp
and
idiv
inc
push
or
ds
nop
cmpsl
xchg
loope
scas
xchg
imul
jmp
cmc
mov
xchg
fistpll
fnstsw
cmp
jno
adc
arpl
int3
shrb
lods
lods
mov
paddsw
repnz
pop
mov
call
jecxz
dec
ljmp
jecxz
xchg
fbld
adc
outsb
xchg
cmp
sbb
xchg
adc
cli
fisttpl
in
fists
xor
cli
dec
in
push
lcall
dec
mov
jp
fistps
cmp
inc
jmp
clc
pop
insb
cmp
sbb
cmp
or
jb
mov
cmp
dec
je
fs
jnp
add
push
xlat
aas
bound
popa
cs
loopne
out
cmp
cltd
inc
aad
add
xchg
xor
loope
dec
sub
mov
in
daa
fisubrs
mov
pop
dec
cld
pop
dec
fcmovnbe
or
lods
movsb
outsl
inc
lock
or
xor
lahf
in
fs
dec
or
pop
fs
xor
inc
push
outsl
mov
pop
jne
inc
cmp
out
cld
and
adc
nop
adc
aas
in
or
psadbw
inc
aad
cmp
divl
jge
hlt
xchg
adc
push
mov
ds
inc
bound
mov
enter
dec
xlat
movsb
and
cmp
mov
push
or
jecxz
mov
push
mov
xchg
jle
mull
cmpsb
xor
ljmp
inc
mov
leave
ret
push
inc
push
xlat
inc
arpl
xor
test
sub
sbb
js
xchg
ret
xchg
outsl
test
mov
aad
outsl
in
popa
rcrl
xchg
out
push
cmp
in
mov
pop
es
int
add
cmp
mov
mov
xor
mov
dec
mov
aas
adc
sbb
fwait
fwait
and
test
aam
nop
scas
out
or
sti
mov
outsl
movsl
scas
mov
test
push
mov
xchg
pop
movsb
outsb
cmc
dec
faddp
cmp
mov
sbb
mov
bound
adc
les
shrb
mov
hlt
mov
sub
inc
adc
call
mov
mov
pushf
mov
mov
lea
sbb
and
pop
repnz
movsb
sbb
sub
scas
insl
popf
push
call
arpl
mov
test
psllq
push
psadbw
outsb
cld
xchg
xor
pop
jb
test
xchg
lods
jb
xlat
mov
cmp
movb
popf
testl
movsl
pop
fmuls
btr
cmp
stc
lock
cld
loopne
jge
subl
out
outsl
cmp
add
sub
mov
jns
outsb
inc
mov
push
or
inc
adc
dec
xor
decl
inc
push
jns
mov
test
fisubs
jno
jmp
push
mov
cmp
sub
sbb
fildll
cmp
adc
adc
mov
into
scas
push
stc
or
add
cmp
repnz
pop
int
sbb
notb
push
test
iret
lcall
mulb
lock
das
nop
and
pop
outsb
pop
mov
xchg
daa
dec
fs
sub
sarl
sbb
push
rolb
lea
xchg
xchg
pop
adc
out
addr16
lcall
aas
cwtl
push
or
mov
jb
lods
or
mov
mov
adc
mov
and
clc
aaa
lret
add
mov
mov
jmp
add
mov
jns
cltd
mov
repnz
mov
mov
and
cmpb
mov
lock
jno
jmp
test
in
xor
ja
out
jnp
fstps
gs
outsb
pop
das
pop
out
cmpsb
jae
and
sti
scas
aam
push
cwtl
test
icebp
cmpl
adc
add
inc
imul
add
add
je
gs
inc
outsl
insb
outsl
jb
pushf
call
add
inc
gs
gs
inc
inc
add
test
sub
mov
dec
call
inc
mov
lahf
movsl
or
nop
clc
mov
loop
shlb
adc
int
div
psraw
jmp
pop
leave
mov
mov
push
inc
rorl
add
or
push
mov
mov
lret
add
mov
fistl
sbb
lcall
pop
daa
fucomip
cmc
ror
loope
movsb
jo
lahf
dec
pop
inc
mov
xchg
aam
cld
mov
mov
mov
movups
or
and
movzbw
mov
setl
cwtl
movsbl
pop
jmp
pusha
push
mov
mov
pushf
mov
pushf
lea
jmp
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
jmp
dec
mov
bts
movsbw
and
add
rol
sbb
stc
add
inc
shrd
test
mov
cmc
push
cmp
stc
shr
pusha
test
jmp
add
push
jb
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
inc
and
push
mov
or
pop
test
movsb
insl
add
call
add
push
gs
insb
imul
je
add
test
shl
stc
add
test
push
sub
jmp
add
inc
gs
imul
bound
gs
add
add
je
gs
inc
js
outsb
je
outsl
imul
mov
pop
push
mov
mov
and
cmp
sub
ret
lock
shll
mov
in
fwait
jbe
push
dec
push
and
add
lahf
or
cmp
or
sub
fs
enter
jp
leave
andl
repz
dec
lret
sub
sbb
mov
in
ret
popf
xchg
out
jmp
das
sub
or
test
fwait
pop
mov
lret
mov
or
ja
mov
xchg
sti
test
bound
add
test
jae
mov
es
xchg
pop
sub
push
jmp
adc
adc
aad
daa
movsb
push
std
lock
jo
ret
jb
dec
flds
data16
sub
fs
mov
imul
mov
js
inc
sbb
xor
mov
stos
mov
movsl
mov
out
bound
sti
add
xchg
mov
adc
pop
std
out
add
adc
aaa
mov
xchg
sbb
cli
loopne
mov
pop
xor
sbb
mov
imul
push
or
lea
sbb
add
dec
push
add
ret
push
xchg
cwtl
inc
cltd
inc
inc
push
xor
jne
cmpsb
sub
aad
in
sbb
add
xor
shlb
nop
mov
test
ret
insl
mov
inc
lods
lods
cmp
jecxz
push
sbb
cmc
testl
repz
pop
push
popf
mov
fcomp
push
xor
ffreep
xchg
jge
arpl
adc
mov
sub
mov
fdivs
movsb
sub
bound
lcall
in
in
mov
cli
jo
cld
mov
repnz
js
ds
aad
out
xchg
pop
mov
sbb
popa
add
mov
xor
jge
adc
lods
mov
pslld
jg
adc
ja
and
cltd
or
push
mov
aam
jno
pop
inc
push
pop
call
jae
push
sbb
xor
bound
push
jg
lods
in
cwtl
fnstenv
mov
or
inc
push
pop
sub
loope
fnsave
xchg
mov
cmpsb
test
sbb
inc
xchg
loopne
maxps
mov
cmc
inc
sti
cmp
cmpb
hlt
je
xor
push
cmp
daa
gs
icebp
in
mov
loopne
inc
rcrl
xor
imul
std
scas
fimull
addb
cmpl
or
in
ficompl
in
mov
sub
xchg
insl
addl
mov
pop
push
jne
push
je
aaa
popf
dec
insb
arpl
cmp
je
jge
in
or
and
or
xchg
jge
mov
stos
pop
pop
ret
orb
daa
pusha
add
out
push
imul
ss
fists
cmp
imul
cmpsl
mov
adc
stos
cld
repnz
inc
test
xchg
cmc
push
mov
xchg
movsl
mov
xchg
jp
cmpsl
push
mov
push
shrl
test
pushf
sbb
push
push
sbb
push
or
gs
lret
mov
sub
mov
inc
jmp
add
mov
test
int3
xchg
scas
mov
pop
inc
js,pt
pushf
pusha
xchg
in
stos
adc
mov
std
shll
sub
andl
jns
iret
stc
pop
push
xchg
clc
or
lret
xchg
or
outsl
sbb
and
mov
popa
adc
fidivl
xor
sub
or
scas
mov
movsb
push
xchg
mov
nop
mov
shrl
shll
aaa
cltd
pop
mov
std
mov
sbb
in
xor
insb
jmp
add
pop
push
test
nop
test
imul
mov
xchg
pushf
fstp
adc
mov
mov
mov
aad
icebp
movsb
pop
sbb
dec
and
sahf
int3
mov
jp
mov
div
dec
test
mul
xor
push
stc
jb
jbe
cwtl
cmp
lock
in
gs
adc
and
das
jp
inc
call
pxor
add
enter
mov
jns
out
sarb
cmp
int3
adc
push
xor
popf
mov
jmp
cmc
enter
jno
mov
andl
xorl
xchg
sbb
cmp
push
xchg
outsb
outsb
popa
insb
aaa
sub
nop
sbb
out
mov
fisttpl
pop
inc
push
pop
popa
idivl
add
shl
push
mov
je
stos
dec
dec
decl
sub
jmp
inc
aad
and
inc
pop
inc
inc
pop
push
rorl
mov
inc
out
arpl
sub
inc
je
aam
cmp
adc
rcl
mov
dec
nop
out
jle
xor
pop
dec
inc
add
hlt
cmp
in
hlt
add
ljmp
jg
fisubrs
fcmovb
mov
jb
mov
daa
fistl
and
mov
aas
call
push
fcoms
daa
repz
cwtl
mov
or
sub
frstor
call
sar
into
and
sbb
sub
xor
aam
rcr
aad
stos
jge
pop
adc
inc
insb
insl
popa
into
jns
xor
sub
push
fwait
xchg
sbb
sbb
scas
add
and
jle
enter
inc
push
inc
mov
pop
fdivl
add
dec
loop
aam
xchg
mov
jns
xchg
push
shlb
adc
pop
push
lods
pop
mov
pop
push
xlat
adc
lcall
imul
xor
xor
addr16
sarl
mov
xchg
cwtl
jge
lahf
and
jp
jmp
bound
adc
mov
rcl
push
push
sbb
adc
adc
mov
xchg
push
cmp
sbb
jns
cmp
std
in
mov
mov
insb
inc
mov
enter
lds
or
addr16
roll
xchg
mov
mov
mov
test
and
testb
add
dec
push
sub
push
mov
imul
push
sbb
repnz
pop
adc
jmp
pop
sbb
xchg
cltd
cmpl
lret
and
insl
jno
add
leave
loop
test
pop
xor
sbb
sub
mov
imul
int
fsubr
jne
mov
push
xor
rorb
cmp
lds
dec
mov
dec
imull
inc
fsubs
xor
iret
pop
lea
data16
iret
mov
push
mov
pop
push
fwait
cmp
adc
cmp
pop
dec
repz
lock
jno
sbb
pop
mov
mov
sub
in
hlt
pop
movl
lea
add
and
int
scas
out
cmp
cld
jne
sub
mov
push
pop
dec
movsb
or
rcll
mov
or
lcall
inc
jl
lods
inc
push
push
daa
push
clc
adc
pop
adc
pushl
repnz
mov
cli
push
and
icebp
mov
aas
xor
and
loop
inc
sub
sbb
cmp
inc
sub
movsb
sbb
cmpsb
jns
push
dec
es
sbb
jne
jne
sbb
lret
dec
mov
out
aas
mov
push
xlat
cmc
lds
out
jne
lods
arpl
fcmovb
mov
or
push
cmp
hlt
add
sti
pop
inc
repz
xor
cmpsb
inc
es
push
adc
ror
mov
mov
insb
inc
lock
movsl
push
cmp
int
fs
mov
stos
pop
aad
sbb
cmp
sbb
mov
call
sahf
inc
rorl
push
pop
out
pop
and
push
adc
mov
test
xor
mov
sbb
sbb
add
add
fidivl
cmp
in
dec
pop
outsl
int
enter
daa
pop
test
xchg
cmpsl
pop
mov
mov
sub
and
bound
js
data16
hlt
call
subl
loopne
push
stc
js
or
lea
jo
inc
sbb
sar
pop
push
sbb
mov
ret
or
xchg
cmp
or
jno
fdivrl
cmp
fbstp
cmovnp
test
jae
test
cmp
sub
mov
out
fidivrs
xchg
and
jnp
inc
aad
inc
and
pop
inc
aaa
push
add
mov
xor
pop
add
jmp
mov
cmp
and
jnp
mov
push
mov
lds
ljmp
inc
cmc
jno
dec
dec
fwait
lods
jle
xchg
push
sbb
loope
and
jg
aaa
cwtl
mov
mov
add
out
insl
jg
bound
jle
xchg
popf
xor
mov
call
popa
jne
sub
dec
mov
mov
mov
js
call
pop
adc
cmp
fsubp
mov
mov
incb
fwait
js
or
outsb
fstp
sbb
cmp
sbb
mov
fisubrs
cmp
push
or
mov
repz
xor
jns
and
vminpd
dec
push
pop
mov
rcrl
pushf
aam
and
mov
mov
push
and
out
cld
inc
outsb
sbb
lock
movsb
out
std
outsb
lcall
into
cwtl
jnp
xor
sub
mov
repnz
repz
std
clc
lret
mov
pushf
xchg
test
ss
ss
outsl
adc
jbe
test
push
and
test
mov
cmp
mov
lea
adc
cmpsl
or
jmp
pop
add
clc
sbb
push
add
xadd
je
dec
adc
rcrb
jne
push
dec
int
or
pop
xchg
mov
rcrl
ret
std
add
or
pop
fs
add
jge
dec
xchg
inc
cmp
xlat
movsl
push
shrl
jae
adc
push
pop
out
dec
jo
aas
inc
shll
lds
loope
push
pop
aaa
jge
loop
sub
adc
sti
cmpsb
mov
inc
aad
sbb
cwtl
sub
or
push
int
popa
movsb
or
sub
cmp
xchg
stos
adc
fwait
jg
int
cli
push
xchg
daa
cld
imul
pop
int
adc
dec
xchg
fstpl
dec
test
lahf
mov
jnp
adc
dec
push
mov
lcall
int3
jno
and
mov
add
lds
cmpsb
jb
faddl
inc
gs
cmpsl
cli
cmpsl
movsb
or
xchg
stos
push
andb
shl
pop
pop
out
xor
sahf
fsubrs
imul
xchg
mov
pop
inc
in
and
xchg
leave
jmp
outsb
add
mov
in
loop
xchg
mov
pop
sbb
test
inc
lret
lods
cmp
pop
push
jl
shll
in
dec
shr
xchg
rcrb
lock
pop
gs
mov
mov
imul
aam
pop
ss
push
inc
aam
gs
lock
lods
xchg
pop
pop
dec
and
mov
insl
pop
and
leave
inc
nop
in
sbb
aaa
sbb
xchg
cwtl
cltd
sbb
adc
inc
xchg
cmp
rcrb
xchg
add
hlt
xchg
sub
outsb
jnp
push
mov
cld
repz
in
aam
push
arpl
or
mov
mov
stc
mov
jge
out
mov
push
push
pop
pop
sbb
mov
sub
mov
ds
xchg
fcoml
push
pop
inc
icebp
or
lods
cld
adc
les
mov
xor
mov
mov
out
cli
dec
fcomps
mov
inc
filds
add
test
sbb
jo
pop
icebp
out
xor
and
mov
mov
fs
mov
and
stos
xchg
mov
or
mov
or
clc
xchg
out
test
push
pop
lret
jp
repnz
popl
imul
dec
ret
dec
mov
jno
ret
pusha
or
mov
jmp
movsb
jmp
adc
jmp
in
ja
or
dec
cmp
pop
ljmp
movsb
push
mov
mov
xor
pop
sar
mov
xchg
pop
movsb
shrl
jl
mov
icebp
mov
sar
push
mov
insb
adc
pop
xorb
mov
lret
mov
and
push
push
xchg
or
aad
rcrb
mov
and
sub
pop
and
adc
mov
jge
adc
adc
jbe
lcall
bound
sub
fmull
bound
mov
bound
cmp
xor
push
adc
mov
dec
pop
outsl
add
mov
and
add
cmc
in
fs
jmp
xchg
int3
jne
jnp
and
mov
int3
arpl
sbbl
fnsave
sbb
ss
inc
les
cmp
lods
pop
call
xchg
push
dec
jbe
and
popf
clc
and
cld
sub
xor
jbe
nop
lea
mov
mov
ret
pop
idivl
ret
lds
dec
push
ljmp
push
pop
inc
int
mov
out
rcrl
adc
mov
test
cmpl
push
ss
adc
xchg
or
lds
mov
pusha
or
sbb
enter
adc
in
or
ret
push
xor
in
aas
mov
dec
loope
adc
in
das
pop
cmpsb
outsb
test
sbb
push
lock
mov
sbb
loopne
stos
adc
sbb
mov
and
pop
cltd
or
or
jecxz
shlb
movsl
sub
aad
adc
push
outsb
arpl
ret
mov
cwtl
push
push
mov
arpl
divb
jae
mov
inc
gs
out
js
loopne
add
jmp
out
cmp
stc
aas
xchg
call
loopne
jnp
add
xchg
push
ds
inc
dec
fldt
gs
add
mov
or
clc
imul
loope
rcrb
mov
iret
sub
pop
mov
or
dec
pop
test
fadds
jns
mov
test
adc
xchg
xchg
stos
fdivs
ljmp
push
add
cmpsl
jecxz
into
jle
lcall
mov
scas
pop
and
jb
or
movsl
cs
stos
mov
into
sbb
sbb
fldl
test
sbb
mov
or
in
mul
test
bound
or
cwtl
rorl
cmp
pop
mov
push
cmpsb
dec
popa
push
xor
jbe
imul
or
fiaddl
ja
sub
inc
out
mov
mov
int3
jg
pop
push
and
repz
sub
add
inc
jmp
xchg
leave
inc
repz
movsb
mov
insb
add
insl
shl
cmpsb
pop
jle
push
movsb
cmpsl
mov
in
insb
or
sbb
cmc
jno
aam
pop
inc
ja
dec
out
mov
popf
or
lea
cmp
inc
mov
imul
js
or
mov
jo
popa
movsb
addr16
xlat
fists
sub
pop
outsl
dec
testb
jnp
xor
xchg
mov
or
je
cmp
jns
adc
shl
cs
inc
mov
mov
push
pop
jae
pop
xor
imul
mov
cmpsb
cmpsb
push
pop
jl
mov
lods
cs
jp
cmpsl
xchg
filds
sahf
rorb
jge
xorl
inc
and
addl
loope
jno
push
push
lret
or
cwtl
sub
add
insl
adc
arpl
divl
pop
fnstsw
adc
orb
add
cmp
mov
push
les
mov
xchg
add
jle
sahf
push
inc
repz
rolb
jp
stos
push
mov
aad
nop
add
mov
int3
bound
ror
jno
out
xor
movsb
mov
out
dec
fldt
fstpt
int3
call
cmpsb
cmp
enter
cmpsl
or
pop
cli
into
out
mov
inc
lcall
pop
mov
movsb
xor
lods
cld
jp
ljmp
sub
push
mov
cltd
movsl
or
lock
jne
cmc
mov
mov
dec
lret
fnstcw
or
xor
lcall
lock
ret
test
xor
data16
push
ss
and
or
cli
imul
and
jmp
in
xchg
pop
dec
mov
loop
sub
jo
cmpsl
test
sub
pop
jg
sbb
in
out
inc
jg
icebp
shrb
mov
mov
or
idiv
scas
and
cld
addr16
cmp
adc
fwait
pop
mov
lcall
bnd
loop
push
add
gs
cltd
enter
lcall
imul
clc
xor
lret
push
mov
jb
lcall
aas
and
loop
push
fidivrl
movsb
jecxz
xchg
adc
repz
call
fistps
jecxz
jg
xchg
in
mov
ret
pop
dec
and
mov
adc
add
rorb
je
out
sub
lea
jne
popf
fstpt
adcl
xor
sbb
jmp
jg
inc
in
dec
sub
add
and
lcall
aaa
dec
or
inc
ret
mov
add
into
cmp
fiadds
imul
xor
xor
daa
sahf
inc
lods
loop
lds
sbb
and
and
push
sbb
addl
dec
jmp
jg
cmp
mov
mov
mov
inc
xchg
shr
scas
lret
stos
arpl
xor
clc
outsb
les
ficompl
fs
leave
rcrb
mov
lret
jno
xor
out
cs
movb
lock
movsb
in
xchg
imul
int
mov
adc
out
pop
or
cmp
loope
outsl
mov
lds
sbb
jecxz
or
sbb
sbb
jno
jno
ss
or
dec
xor
sbb
jge
jg
mov
adc
sbb
rolb
insl
outsb
ljmp
mov
mov
lods
fld
xchg
push
pop
es
inc
mov
push
mov
stc
dec
test
call
int
ret
dec
ss
stc
loope
subb
xor
outsl
mov
adc
daa
ss
xchg
stc
loope
inc
jb
pop
xorl
sub
xchg
stos
orb
sub
adcl
ret
mov
addr16
or
shrl
or
das
xor
mov
and
mov
clc
gs
outsl
lret
inc
jae
and
dec
loope
adc
fwait
mov
mov
mov
in
loopne
cmp
pop
mov
mov
sbb
cld
mov
sub
iret
pop
aaa
xor
dec
mov
jno
lret
dec
test
mov
inc
or
scas
repnz
loopne
jne
push
pop
fisubs
jp
inc
lock
pop
sbb
fildl
mov
out
lret
push
jns
or
adc
mov
sbb
cmpsb
je
shll
and
into
roll
rcrb
or
or
pop
and
in
subps
hlt
xor
stos
xchg
sub
adc
shrl
push
mov
or
addr16
xchg
jl
pop
xchg
fcoms
xchg
jmp
adc
sbb
jo
and
add
rcr
in
dec
pop
clc
sub
fldcw
les
hlt
add
enter
lods
fnstsw
mov
xor
sub
jo
push
mov
ljmp
cwtl
jge
jge
cld
std
pusha
jae
out
das
cltd
fdivrs
das
cmp
sub
je
nop
imul
push
push
sub
pop
xor
adc
mov
adc
mov
repz
test
insl
sahf
jmp
adc
xchg
sub
cltd
push
mov
in
and
lods
insb
rcl
cs
repnz
les
and
das
sbb
xor
dec
mov
or
push
xor
or
jb
pop
xor
mov
roll
mov
pop
push
mov
frstor
cmpl
cmpsl
clc
push
fistl
loope
imul
test
shlb
xchg
add
mov
dec
sahf
hlt
add
jns
xchg
inc
jg
int
mov
jae
dec
mov
mov
stc
mov
les
shr
mov
and
adc
mov
mov
scas
xchg
add
jbe
push
outsb
sub
rcl
jnp
fisubl
and
xchg
scas
lods
mov
mov
imul
fildll
pop
es
push
pop
mov
aaa
push
mov
add
cwtl
push
cli
add
push
sub
sbb
jbe
int
cmp
xchg
rolb
jecxz
adc
cmpsb
or
sub
fcoml
and
pop
lods
in
xor
test
jl
setle
sub
xor
sti
xchg
sub
daa
mov
pusha
mov
jl,pt
push
lock
shr
lret
sub
xor
fsubs
xchg
mov
jno
adc
std
mov
xor
xlat
adc
outsb
sahf
sub
mov
out
add
cs
daa
dec
xchg
fdivs
int
jl
aaa
aam
imul
sub
adc
jmp
fnstsw
xchg
andb
xor
sbb
fsubrp
iret
push
dec
or
mov
mov
pop
mov
shlb
xchg
pop
cmp
mov
push
loope
or
adc
pop
mov
jae
clc
popa
pop
addr16
daa
push
push
sbb
rolb
aaa
je
into
in
add
je
enter
xor
cmp
mov
mov
xor
in
dec
popa
imul
insl
in
mov
jmp
or
cmpsb
addr16
shlb
jp
dec
repz
data16
xor
ds
std
pop
add
pop
mov
mov
addb
and
sbb
lret
mov
push
sub
sub
clc
scas
jl
xor
jle
mov
mov
insl
sub
or
clc
dec
dec
jge
call
or
roll
inc
call
mov
out
dec
mov
ret
dec
adc
aaa
roll
inc
mov
out
jbe
mov
mov
cmp
add
mov
scas
xor
test
rolb
aaa
adc
sti
ljmp
xchg
nop
in
mov
pop
lcall
je
and
insb
das
mov
adc
outsl
adc
adc
scas
test
fsubs
cmp
mov
add
pop
adc
mov
inc
push
bound
out
add
cld
push
or
inc
push
and
hlt
rorl
pand
sti
xchg
into
xchg
mov
add
into
je
fwait
add
shll
add
mov
in
pop
or
aad
mov
xchg
fistl
aaa
xor
clc
mov
stos
adc
jg
imul
jae
ffree
addl
add
cmpsl
xchg
cwtl
shrb
or
push
aam
jae
jne
popa
enter
subb
movlps
outsb
fdivs
inc
fldl
push
jmp
out
in
xchg
lret
scas
jle
pop
mov
les
rcr
cmp
cltd
cmpsl
fwait
jo
push
add
mov
fwait
test
and
fstp
sbb
mov
jp
jg
loope
mov
out
push
mov
mov
xchg
loop
data16
imul
jge
imul
dec
call
out
jnp
jle
shl
lahf
xchg
sbb
cmpl
repnz
mov
adcl
sub
out
test
xor
insb
or
cwtl
test
ret
scas
in
cmp
andb
jno
mov
ljmp
sbb
imul
fildll
xchg
int
repz
aam
cmpl
leave
pusha
pusha
dec
bound
cmp
mov
xor
mov
arpl
sub
cli
inc
int
adc
sbb
add
stos
fisubrs
adc
call
repnz
sbb
pop
test
and
loop
hlt
mov
mov
popa
aad
mov
shrl
cmp
jo
push
mov
test
or
inc
shrl
add
sbb
lahf
leave
test
and
sbb
in
push
sahf
sbb
push
gs
xchg
mov
and
xor
or
into
cltd
jp
cmc
dec
ljmp
dec
jno
bound
cmc
in
push
and
mov
fisubs
cmpsb
pop
in
popf
sub
xor
sbb
lret
mov
adc
jne
jnp
adc
mov
pusha
leave
shr
scas
in
mov
repnz
aaa
mov
fiadds
and
adc
mov
stos
loopne
jae
jb
divl
and
les
sarl
push
daa
mov
xor
dec
push
or
lahf
cmp
add
shl
jbe,pn
aad
imul
adc
jno
fwait
negl
xor
push
inc
in
fcmovb
gs
mov
push
dec
mov
and
out
mov
cmpsb
negb
mov
mov
arpl
cmp
out
aas
sub
iret
std
idivb
jl
outsl
jle
jno
out
mov
mov
aam
jnp
sbb
cld
fldenv
int
sub
xor
int3
fwait
hlt
or
sahf
icebp
outsb
adc
pushf
mov
cltd
leave
lods
in
dec
push
sbb
enter
es
mov
push
insb
pusha
push
jnp
mov
inc
cmp
out
fistl
xor
mov
clc
sub
mov
or
sahf
xchg
push
iret
jae
stos
stos
sbb
jge
insl
data16
ficomps
out
daa
daa
push
cmp
xor
les
sbb
inc
in
scas
cs
into
sub
cltd
sub
xor
std
dec
loop
enter
stos
ret
cmp
sbb
inc
insl
pop
inc
mov
push
fdiv
mov
xchg
popf
ret
inc
rcl
pop
mov
fadds
fisttpl
xchg
addr16
call
imul
clc
lea
or
enter
inc
shrl
cld
fs
aaa
insb
loope
aam
js
lret
out
or
cwtl
push
dec
cmpsb
sub
scas
cs
data16
mov
cmp
data16
aad
inc
fst
xor
mov
jg
sti
rol
out
jl
dec
bound
out
mov
sbb
push
shrb
mov
mov
fisubs
xchg
pop
fnstsw
es
testl
mov
in
fisttps
ficomps
sub
adc
pop
sub
jecxz
cmp
and
inc
lahf
cmpsb
mov
ljmp
je
jg
pop
mov
lock
ss
loop
cmpsl
mov
in
scas
and
mov
stc
cmc
adc
movsl
jo
pop
jecxz
pusha
and
test
fistl
loop
and
jo
push
sub
cli
inc
movsb
std
dec
decl
push
xor
cltd
cmpsl
dec
pop
jnp
pop
push
test
pushf
xchg
xchg
add
jle
mov
enter
into
jp
jp
xor
rcr
int
daa
test
int
sti
sbb
mov
sub
push
fiaddl
add
mov
cmpsb
mov
stos
ret
mov
jnp
cmpsb
jl
scas
pop
and
rorb
mov
shll
iret
cmp
adc
lods
pop
cmpsb
push
lahf
sbb
frstor
and
orl
or
mulb
ds
stos
mov
mov
mov
mov
cmc
add
and
out
add
mov
mov
cmp
pop
fisubs
push
inc
rclb
mov
movsl
mull
aas
add
xor
or
cli
int3
jmp
jnp
aam
lahf
out
outsl
mov
ljmp
ret
mov
inc
mov
mov
pcmpgtw
xchg
mov
notl
les
pop
int
andb
fnstenv
sub
lods
pushl
sbb
daa
addr16
sbb
je
out
shl
in
lock
adc
adc
insb
dec
int3
pop
sbb
mov
xchg
push
mov
mov
popa
pmaddwd
jne
xor
sahf
call
das
sbb
sbb
mov
push
mov
notl
inc
or
xchg
in
and
and
pop
mov
leave
jbe
sub
dec
fldl
cs
scas
xor
nop
cmp
mov
je
jmp
movsb
jecxz
sbb
sub
push
mov
ret
dec
push
clc
orl
sub
fnstcw
in
sbb
out
adc
clc
aad
xorb
les
mov
inc
push
jo
js
or
cmp
xchg
mov
aad
lea
mov
pushf
push
pushl
mov
pushl
ret
les
sub
pop
cmp
jo
sbb
data16
outsl
jecxz
and
in
adc
out
xor
sbb
pop
imul
in
into
cmp
xor
fs
insb
jle
mov
mov
or
push
fwait
test
outsl
mov
sub
and
jns
or
lahf
jno
xlat
sbb
sub
jnp
mov
mov
in
int
lods
vmovdqa
xchg
pusha
jo
inc
xor
add
clc
cli
mov
and
xchg
scas
xchg
mov
js
jp
add
inc
jo
leave
xor
and
lret
enter
je
jge
arpl
rorb
clc
repnz
and
test
fnstcw
cmpsl
sbb
movsb
int3
sub
in
fbstp
sbb
cmp
aam
and
sbb
cmp
adc
or
push
sub
repz
loop
sbb
sub
pop
test
jnp
jae
mov
loope
adc
pop
shlb
out
and
ret
push
inc
push
dec
dec
mov
mov
shr
pop
scas
cmp
push
pop
add
shll
fadds
je
push
push
fcom
fmul
or
push
mov
xor
lods
dec
push
and
cmc
frstpm(287
not
out
dec
push
jp
or
mov
dec
lods
sbb
sub
sarb
fisubrl
into
adc
adc
aad
ficoml
and
dec
ja
cwtl
push
sahf
push
xchg
lahf
lret
mov
push
insb
adc
push
leave
fadd
aam
sbb
jne
mov
mov
xchg
addr16
test
data16
out
insl
test
sti
adc
or
loope
sub
loopne
hlt
out
enter
aam
fdivr
loopne
xchg
sub
xor
movsb
sbb
sub
xor
int3
and
push
hlt
pop
and
dec
push
push
gs
push
rclb
scas
mov
lods
dec
lcall
mov
add
inc
adcl
adc
cmp
arpl
xor
inc
cmpsb
js
xor
sub
sub
and
fs
insl
outsl
or
sbb
call
mov
imul
mov
adcb
and
cmp
pop
and
insb
nop
rol
test
add
outsl
jae
inc
insb
imul
add
sub
mov
xchg
mov
pop
jnp
fisubl
cmp
subb
fldt
jne
dec
cmpsl
pop
mov
iret
fst
int
leave
test
mov
sti
dec
jecxz
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
xor
pushl
lea
jb
cmc
pusha
cmpb
call
xchg
adc
bswap
mov
shl
mov
clc
pusha
clc
bt
shl
pusha
lea
jmp
bt
clc
movzwl
sub
xor
ja
bts
mov
clc
cmp
cmc
bt
add
cmp
stc
mov
cmp
test
jmp
add
inc
outsb
jne
push
imul
imul
insb
add
orb
add
cmpl
or
add
outsl
add
add
push
gs
imul
dec
insl
popa
addr16
imul
outsl
jbe
add
add
dec
inc
dec
inc
push
jb
arpl
lea
jmp
movb
mov
pusha
push
push
pushf
lea
je
pusha
sete
pop
lea
push
pusha
lea
call
pusha
pushf
pusha
lea
jmp
add
dec
outsl
arpl
gs
jne
arpl
test
cmp
jmp
call
pushl
popl
pushf
pushl
ret
mov
mov
pusha
movl
lea
call
call
lea
bt
bt
mov
movzbw
call
mov
call
add
push
popa
jbe
inc
inc
add
test
dec
add
push
rcr
mov
stc
add
jmp
add
push
gs
imul
gs
movl
call
movl
lea
jb
aam
movzbl
shrd
shr
mov
rcr
mov
bts
imul
shld
bsf
lea
add
pusha
mov
stc
adc
xchg
shr
clc
stc
mov
call
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
and
jno
lea
call
pushf
mov
bswap
mov
mov
pusha
pushl
lea
jns
xchg
call
call
add
inc
gs
popa
jo
jne
add
test
or
aam
xor
inc
cwtl
mov
shl
not
bt
sar
add
not
adc
shl
stc
mov
jmp
add
push
inc
popa
insb
insb
inc
jne
jne
add
std
call
add
push
jne
dec
popa
jo
jne
arpl
call
mov
mov
lea
jmp
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
jb
jo
inc
add
xchg
add
neg
sub
lea
adc
add
rcl
mov
rol
shl
mov
clc
stc
push
cmc
repnz
mov
pushf
lea
jne
movzbl
jmp
add
inc
gs
gs
je
jo
imul
push
mov
loopne
incl
add
pmullw
arpl
mov
sar
adc
fildll
cwtl
dec
mov
imul
cwtl
pop
mov
hlt
push
xor
adc
ror
addr16
mov
mov
xchg
sbb
xchg
dec
and
loope
jo
add
sarb
sub
xchg
mov
out
fld
jg
lods
testb
repnz
xor
xchg
gs
mov
xchg
dec
mov
push
out
add
or
mov
leave
mov
in
or
adc
xor
mov
jl
xor
pop
inc
test
scas
mov
add
mov
jge
xor
jge
popl
jbe
ficompl
pop
test
cmpsb
inc
shll
inc
mov
test
mov
out
pop
xchg
sub
lods
push
jbe
and
jecxz
loopne
xchg
jns
jno
gs
mov
xchg
dec
push
dec
push
mov
mov
pop
jg
jmp
addl
cmc
push
jge
daa
and
jae
loop
sbbl
loopne
loopne
stos
inc
lods
mov
ss
xor
mov
aad
inc
and
fiadds
scas
pop
inc
mov
xchg
mov
outsl
popf
xchg
push
testb
xchg
fsubl
or
ss
jae
jmp
iret
rcr
cltd
fcmovne
out
std
xlat
icebp
mov
push
xchg
sub
mov
mov
imul
ja
jb
insl
push
outsl
imul
add
test
lea
jl
test
push
cmp
movb
lea
jb
cmc
mov
rol
pusha
not
sbb
mov
bt
test
mov
bsf
btc
aas
add
cwtl
lea
setge
setb
pop
cwtl
lea
pushf
lea
call
call
add
call
add
inc
gs
inc
push
add
pop
pop
jl
pop
lods
xchg
ret
pop
fs
ret
pop
jae
ret
pop
mov
stos
ret
pop
shll
pop
mov
add
add
add
inc
sahf
ret
pop
in
ret
pop
cmp
add
add
add
ret
pop
nop
xchg
ret
pop
dec
lods
ret
pop
shll
pop
or
ret
pop
jle
ret
pop
fs
ret
pop
and
add
add
add
add
ret
pop
xor
add
add
add
inc
sahf
ret
pop
mov
ret
pop
jae
ret
pop
mov
ret
pop
insb
mov
pop
ficoml
ret
pop
test
add
add
add
inc
sahf
ret
pop
fcompl
ret
pop
pop
jl
pop
in
ret
pop
mov
ret
pop
int
ret
pop
or
pop
xor
ret
pop
push
mov
pop
mov
ret
pop
nop
pushf
ret
pop
pop
mov
pop
inc
sahf
ret
pop
mov
ret
pop
add
add
xor
not
call
add
push
gs
arpl
insb
gs
add
jne
push
pushl
lea
jmp
mov
pushf
mov
pusha
pushl
lea
jmp
add
inc
imul
dec
gs
popa
addr16
add
jns
stos
xor
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
call
add
inc
gs
gs
dec
outsb
jne
add
push
dec
add
add
insl
jo
jb
push
je
imul
dec
insl
popa
addr16
imul
addr16
outsb
je
jb
shl
push
lea
rcl
mov
pusha
xchg
bts
mov
adc
mov
pop
movzbw
xchg
xor
shl
mov
rcl
mov
adc
mov
jmp
add
dec
outsb
data16
popa
je
push
arpl
movl
pushf
call
mov
lea
mov
pusha
lea
movzbw
movzbw
mov
pushf
pushf
movsbw
push
rep
movw
call
add
mov
pusha
not
rep
lea
ja
lea
pop
setae
movzbl
movsbl
pop
pushf
setge
call
mov
lea
call
jmp
mov
add
neg
jmp
add
inc
gs
jne
jae
jb
outsl
jae
xchg
or
and
adc
sarl
adc
outsb
adc
push
push
xor
inc
cld
mov
ficoms
sub
aam
in
ljmp
leave
and
adc
dec
or
mov
jg
mov
dec
addl
sbb
fwait
lock
sahf
jle
shll
outsl
pop
dec
imul
push
icebp
aas
lock
test
fs
testb
jo
sbb
loopne
popa
inc
sub
dec
stos
fs
mov
mov
test
cld
mov
mov
das
add
inc
outsl
jo
inc
outsb
push
inc
imul
add
shl
lea
call
pop
ret
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
sbb
rorl
lods
fstps
setl
cmp
xchg
rcl
lea
bswap
inc
cmc
mov
pushf
setl
test
inc
not
or
test
test
add
pusha
rep
xchg
mov
lea
mov
push
mov
not
mov
pushl
mov
pushf
lea
jmp
lea
call
cmp
mov
clc
push
jmp
add
inc
gs
outsb
jne
add
push
inc
popa
insb
insb
dec
jo
inc
jns
add
test
cmp
bt
sub
sub
pushf
push
inc
mov
add
mov
rcl
pusha
add
call
jmp
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
jae
outsl
jb
inc
inc
add
mov
mov
call
or
pushf
lea
je
pusha
stc
or
call
jmp
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
xchg
incl
add
jo
imul
imul
and
lea
jne
shld
bsf
sbb
shl
mov
rol
shrd
btr
shl
mov
rcr
rcl
ror
sub
sub
call
call
call
lea
call
pusha
mov
test
cmp
mov
push
pusha
cmp
lea
js
jb
jmp
add
inc
jno
popa
insb
push
arpl
fs
jbe
adc
mov
shl
add
shl
xor
push
mov
rcr
cmp
bsr
add
rcr
or
movl
shrd
clc
movzbw
mov
sub
call
add
push
inc
popa
insb
insb
inc
outsl
outsb
addr16
movb
jmp
push
call
add
push
gs
arpl
gs
imul
add
outsl
bound
push
outsb
insb
outsl
arpl
add
push
popa
je
insb
je
and
bt
pusha
add
pusha
lea
jmp
and
mov
loopne
shrl
cmp
and
lret
mov
scas
icebp
out
insb
xchg
push
popf
arpl
and
clc
mov
push
out
sbb
popf
dec
stc
in
cmp
and
xor
cmp
xor
dec
data16
jl
jecxz
ss
mov
ror
add
jmp
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
imul
je
imul
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
gs
gs
popa
addr16
outsl
jae
lea
pusha
push
jmp
movl
sbb
pushf
jmp
lea
call
adc
adc
rol
push
mov
jmp
jmp
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
ja
gs
inc
add
add
popa
addr16
imul
dec
arpl
push
imul
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
je
imul
outsb
addr16
add
push
lea
jo
mov
not
rep
bswap
call
add
inc
gs
gs
je
je
add
add
pusha
movw
lea
call
movsbw
movzbl
add
xor
bswap
pop
daa
pop
cmc
pushf
cmp
mov
push
sbb
pushf
movb
push
lea
push
pushl
pusha
lea
jmp
call
mov
pusha
push
pushl
push
lea
jmp
pop
mov
mov
mov
pushl
pushl
jmp
add
dec
outsl
popa
fs
gs
jne
arpl
adc
sub
sub
call
pop
dec
mov
cltd
arpl
rorl
push
mov
push
pop
mov
jge
xchg
mov
mov
jno
xor
xor
lds
in
out
mov
sub
cmp
outsl
inc
data16
fdivr
out
js
xchg
push
lret
inc
push
pop
test
add
fistpl
jno
jne
pop
jnp
das
cmp
gs
or
ret
add
je
imul
je
add
push
imul
jb
pusha
mov
movl
movw
movl
pusha
mov
pushf
lea
jmp
movzbw
movb
setg
bswap
push
lahf
not
lahf
lea
call
add
dec
jae
imul
jae
popa
addr16
add
add
je
imul
add
and
push
mov
mov
lea
jmp
call
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
test
adc
add
mov
lea
call
pushf
pushf
pusha
push
cmp
jmp
add
dec
insl
popa
addr16
imul
je
add
sub
mov
inc
xchg
jp
mov
mov
push
dec
jp
sub
sahf
sbb
nop
cli
data16
xchg
jg
pop
jb
enter
push
pop
adcb
xchg
mov
stc
xlat
nop
mov
adc
sbb
add
inc
insb
imul
arpl
outsb
add
add
insb
gs
imul
arpl
inc
imul
lea
je
pushf
movb
lea
jmp
add
push
arpl
insb
insb
push
imul
mov
push
mov
movzbw
movzbw
mov
movl
rep
pushf
setge
lea
setne
mov
pop
lods
bts
not
xchg
add
pop
and
neg
rcr
movzbw
xchg
pop
rol
pushl
mov
rcr
sub
pusha
call
pusha
mov
lea
jae
bt
stc
cmp
sub
lahf
lea
push
pusha
lea
call
rol
shl
add
not
pop
movzbw
pop
pushf
call
add
inc
imul
jne
arpl
add
mov
sub
bts
clc
lea
neg
mov
shr
and
not
pushf
add
push
mov
setbe
rep
movzbw
movsbw
mov
push
lea
jbe
pop
push
jmp
add
dec
jae
push
add
inc
jb
gs
gs
jne
arpl
add
inc
gs
arpl
insb
insb
push
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
add
insb
jae
jb
insl
jo
add
add
inc
gs
popa
insb
jne
add
decb
mov
jne
inc
rol
rcr
bt
not
shr
dec
add
call
push
pusha
lea
ja
stc
pushf
imul
test
lea
jno
cmp
add
pushf
push
pusha
mov
lea
jmp
call
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
bt
test
sub
movzbw
lea
lea
pusha
call
add
dec
popa
jo
imul
gs
add
add
popa
addr16
imul
imul
cmp
jmp
add
push
popa
jb
popa
outsb
je
push
push
jns
add
sub
push
test
jae
mov
sub
rcll
pop
cmp
fistpl
loop
sub
mov
dec
or
insb
test
xor
adc
ror
ds
sub
or
jne
inc
pop
pop
push
or
push
jl
mov
mov
xor
imul
adc
loopne
fmuls
xchg
arpl
not
xor
loopne
inc
mov
mov
push
popf
adc
aad
imul
in
cmp
cmp
or
sub
add
hlt
push
sub
sbb
xchg
push
xor
jnp
and
xchg
out
cld
push
push
in
inc
push
dec
mov
mov
push
mov
dec
push
inc
mov
lock
arpl
mov
xchg
imul
cmp
xor
xchg
sub
lret
ficoml
lds
loopne
mov
mov
icebp
pop
and
int3
mov
in
scas
jmp
enter
mov
sbbb
push
jg
pop
sub
jbe
fwait
arpl
sub
xchg
mov
rclb
pop
pop
xlat
add
in
lret
stos
pop
and
and
jns
fwait
out
cld
xchg
lahf
jns
push
jbe
or
jb
mov
in
sub
shlb
sub
mov
mov
fcoml
lods
mov
xor
push
cmp
loopne
jmp
flds
stos
mov
push
pop
jp
mov
pop
test
inc
sub
dec
mov
inc
lods
stos
push
lahf
inc
xchg
fldenv
adc
mov
sbb
lcall
in
add
push
gs
outsl
arpl
add
fs
jb
clc
push
xor
pushf
test
jmp
bt
movb
sub
stc
pushl
popl
jmp
add
push
gs
imul
outsl
outsl
imul
add
add
je
outsb
push
inc
imul
jb
lea
call
push
mov
jmp
lea
jb
adc
bswap
mov
not
mov
pusha
pusha
shr
push
push
adc
clc
stc
jmp
mov
add
in
leave
fisubs
push
pop
push
xchg
clc
mov
pop
dec
mov
pop
cmpsb
push
mov
mov
jle
fistps
imulb
cwtl
mov
pop
jnp
bswap
lods
push
ds
and
cmc
loop
call
mov
pop
jno
inc
ja
adc
mov
jge
mov
cmp
loop
into
sbb
cmpsb
pop
repnz
fcomi
repnz
and
jmp
jmp
ret
sub
cmp
sub
bound
fcomip
jns
fcomps
cld
fdivp
out
push
jno
mov
push
sti
insb
xor
push
outsb
sbb
adcl
pushf
fcmovnb
inc
imul
pop
pusha
scas
mov
loopne
xor
cmc
in
and
jae
and
adcl
sub
das
flds
stc
pop
sbb
xlat
xor
andl
mov
inc
mov
dec
pop
inc
sbb
lds
add
mov
call
js
sub
jno
xchg
add
mov
fcos
jecxz
mov
dec
adc
cmp
ja
in
int3
add
aam
mov
mov
dec
addr16
jne,pn
movsb
mov
imul
stos
bound
push
daa
cmp
xchg
xchg
dec
pop
xor
xor
das
imul
es
scas
mov
inc
gs
jne
jb
outsb
je
push
dec
fs
sub
push
not
pushf
mov
call
add
inc
imul
push
gs
arpl
push
arpl
add
popa
insb
insb
push
imul
add
add
je
outsb
push
inc
imul
mov
test
and
pusha
call
pushf
jmp
mov
shl
movb
xor
test
not
movb
shr
rol
ror
add
mov
rep
jmp
add
dec
insl
popa
addr16
imul
inc
jb
addr16
insl
popa
add
add
popa
addr16
imul
add
not
pusha
call
clc
jg
and
sub
add
or
add
jle
test
sbb
call
adc
enter
fstl
mov
fwait
push
mov
arpl
and
add
pushf
mov
cs
rclb
inc
xchg
mov
cmpb
mov
lret
mov
mov
repnz
mov
xchg
mov
jecxz
mov
mov
mov
sub
mov
sub
pop
jecxz
jmp
bound
adc
shlb
insl
test
adc
jmp
sub
ljmp
sub
adc
push
ss
xchg
mov
push
std
loope
mov
or
mov
mov
sbb
push
sub
jg
rorb
fs
je
mov
insb
jbe
jb
jp
jb
push
adc
xor
or
push
jns
mov
std
and
stos
push
mov
cmpsl
jge
push
ja
nop
clc
fmuls
sbb
cli
mov
test
lret
xor
shlb
js
mov
pop
movsb
mov
aad
aaa
das
dec
cmpsb
dec
inc
sbb
pop
and
jo
push
ret
mov
xchg
icebp
sub
cmpl
iret
rcrb
call
loopne
loopne
cmp
cmp
lcall
and
jg
je
out
idivl
jae
daa
or
and
sbb
adc
push
pop
add
push
sbb
add
je
popa
jb
outsb
je
add
inc
js
push
gs
dec
jne
inc
add
inc
and
mov
fs
jne
inc
cmc
not
pop
clc
test
cmc
sub
pushf
call
add
push
imul
jae
jne
arpl
add
push
gs
outsb
fs
inc
imul
outsl
bound
inc
jb
add
sub
push
push
lods
xchg
lods
mov
fdivr
jmp
push
mov
jp
mov
push
push
into
les
clc
mov
jl
sbb
fwait
mov
xchg
inc
pop
xchg
mov
mov
imul
popf
jns
cltd
icebp
adc
sub
inc
xchg
dec
scas
push
mov
leave
jecxz
xchg
rcl
imul
pusha
je
sbb
pop
sti
xchg
stos
mov
arpl
movsl
mov
inc
xchg
movsb
nop
pushl
in
ja
imul
inc
repz
push
pushaw
in
xor
fsts
cwtl
fwait
add
pusha
movntq
jnp
and
and
notb
repnz
cmc
pop
jl
stos
push
rcrb
adc
fdivr
mov
inc
mov
push
ja
dec
imul
sbb
sub
mov
jne
push
push
push
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
add
outsl
bound
inc
fs
je
insl
inc
add
mov
add
xchg
lea
pusha
test
shl
mov
shr
bsf
lea
call
add
inc
imul
dec
gs
popa
addr16
add
and
fs
movb
movl
lea
jmp
add
inc
gs
jne
jb
outsb
je
outsl
jae
je
outsl
outsb
inc
js
add
inc
gs
outsl
fs
gs
imul
add
lds
jmp
loopne
or
push
bt
pusha
lea
ror
not
sub
bsf
push
shl
push
stc
test
sbb
xor
push
btc
lea
push
aam
mov
jmp
not
shl
mov
inc
bswap
add
lea
setp
cwtl
setb
not
movzbw
lea
push
jmp
add
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
inc
add
decl
add
add
cli
sbb
add
add
sbb
and
push
mov
inc
outsb
popa
bound
imul
jae
clc
stc
imul
stc
cmp
add
mov
pushf
mov
push
lea
jmp
add
inc
gs
gs
imul
push
ror
jmp
add
push
gs
je
gs
push
outsl
fs
adc
lea
bt
add
jmp
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
push
insb
popa
jns
jo
add
add
je
push
dec
outsl
arpl
gs
pop
out
call
add
inc
imul
outsl
ja
add
mov
sbb
incl
call
jb
mov
shl
lea
call
add
pop
ret
movzbl
not
lea
pushf
pushf
movl
jmp
add
inc
outsl
dec
outsb
imul
add
or
add
cmp
pushf
pushf
add
mov
movb
lea
jmp
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
jge
add
adc
lea
jmp
lea
jae
push
pusha
pushl
pusha
lea
jl
push
pusha
lea
jmp
mov
call
rcl
xor
mov
lea
or
bsr
rcl
mov
rcl
dec
sub
sbb
cmp
cmc
mov
adc
neg
shr
mov
shld
aam
sub
or
adc
and
daa
rcl
mov
bt
shl
cmp
push
mov
jmp
movb
xchg
call
lea
call
call
repnz
loopne
addr16
xchg
sarb
sbb
xchg
imul
loope
inc
cmpsb
shll
inc
mov
insl
lahf
imul
or
test
xor
ret
or
repz
ret
fld
aad
fnstenv
sbb
xor
ds
loope
jge
mov
lcall
imul
xchg
cmp
sub
sub
add
jle
or
dec
push
lret
outsb
sub
cld
add
mov
cmp
cmp
xor
add
fisubrs
cmp
push
cmp
fsubr
loopne
sbb
fnstenv
jle
jl
mov
sub
repnz
int3
adc
iret
mov
dec
inc
dec
xor
loope
sbb
pop
ficomps
push
in
and
add
or
or
and
inc
add
data16
pop
bound
jmp
sub
or
add
jecxz
and
adc
ds
add
mov
lds
int
fnstenv
loope
adc
pop
xor
mov
test
out
in
pop
or
dec
cmp
into
call
icebp
mov
aad
cmc
and
shrl
aaa
shll
cmp
sub
and
out
sub
mov
dec
xor
rcrb
rcrl
ds
xor
sub
sub
sbb
inc
xchg
sub
cli
fcomps
add
orb
add
shl
rcr
bt
shl
mov
or
test
bsr
mov
jmp
add
inc
gs
jb
jns
arpl
add
add
push
imul
outsl
arpl
call
push
lea
jno
je
das
btc
xor
lahf
shrd
mov
bt
sar
not
jmp
aad
adc
loopne
fs
inc
push
xor
out
xchg
push
adc
sbb
test
mov
dec
inc
mov
push
add
inc
ds
jno
push
xchg
sub
call
mov
testb
xchg
fildll
xchg
dec
outsb
push
jp
sbb
sub
xor
clc
push
pushf
inc
lahf
movsl
mov
lcall
bswap
lahf
lahf
mov
call
add
inc
outsb
fs
popa
imul
popa
jo
xor
cs
insb
add
add
dec
arpl
imul
loopne
jne
push
mov
lahf
inc
popl
stc
inc
fcompl
sub
cmc
repz
hlt
out
jmp
cmp
fists
cmpsb
mov
add
push
dec
xor
push
test
mov
ja
mov
mov
adc
push
xor
insl
sbbl
push
pop
pop
cmp
or
pop
pop
pop
inc
mov
aas
adc
and
call
call
cmp
pushl
pushf
sbb
test
lea
clc
cmc
jmp
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
stc
sub
push
jmp
jmp
add
push
gs
jb
jae
dec
jb
inc
js
add
inc
gs
jns
je
insl
dec
outsb
jne
lea
call
stc
cmp
push
pushf
sbb
cmc
cmc
lea
pusha
test
bt
cmc
mov
or
inc
btc
xchg
push
lea
btc
bsf
shl
dec
mov
rcl
not
adc
pushf
ror
xor
add
jmp
add
dec
jo
outsb
push
jb
add
outsb
lea
sub
out
add
sub
aaa
flds
mov
inc
popa
addb
sbb
sti
in
in
and
loopne
push
cld
push
sbb
cmovp
or
inc
and
addl
fwait
jmp
sbb
testb
pop
xlat
cmc
cmp
adc
mov
cmp
add
sbb
jge
pop
imul
jle
lock
in
aas
loopne
fwait
lahf
dec
xchg
popa
lahf
dec
xchg
gs
in
add
cmp
mov
pop
xlat
mov
test
push
xchg
lods
add
add
rcr
sub
ss
xchg
loop
clc
push
loopne
sbb
call
aas
sbb
push
cli
les
mov
inc
into
test
push
adc
sub
pop
sbb
sbb
adc
add
pop
push
outsb
xchg
aaa
aas
icebp
or
pop
aad
or
dec
mov
push
dec
popf
pop
sbb
mov
repnz
sub
push
mov
push
pop
adcb
xchg
push
call
lods
ja
ja
sahf
mov
or
fdivrs
xchg
mov
jmp
mov
out
sub
loopne,pt
lock
cmp
in
loopne
aam
popw
add
call
pop
mov
mov
mov
sub
add
and
aad
add
notb
imul
xchg
ret
mov
mov
std
or
pop
adc
fmuls
lret
pop
sbb
addl
push
ja
sti
xchg
into
xlat
lret
cmc
mov
lds
and
cs
add
sub
je
push
dec
push
inc
xchg
sub
xor
push
adc
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
pop
test
rcrb
add
add
incl
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
and
mov
cmp
bt
test
bt
test
push
pushl
movb
lea
je
stc
jmp
add
inc
gs
outsl
arpl
push
imul
jl
sub
mov
inc
and
jp
fs
jb
test
cmc
test
xor
push
cmc
call
pushl
popl
push
pushl
ret
add
inc
popa
insb
insb
push
imul
outsl
arpl
mov
pushf
push
mov
pushl
lea
je
push
lea
push
call
adc
pushf
lea
jae
aam
xadd
pop
bsf
shr
add
cwtl
pop
rol
mov
aam
rcl
shr
das
cmp
mov
mov
pusha
mov
pushf
pusha
push
lea
jb
push
pushf
mov
lea
jmp
flds
sti
cmp
push
nop
xor
mov
repz
and
insl
adc
movsl
jbe
fmuls
add
je
gs
imul
inc
decb
fs
jmp
cwtl
lea
pusha
call
sub
bt
shl
push
jmp
not
pushf
mov
jmp
dec
xor
mov
test
test
test
mov
lea
je
stc
push
test
sub
test
stc
stc
cmp
call
add
inc
outsl
push
outsb
imul
imul
gs
imul
outsb
addr16
add
mov
loopne
mov
lea
push
call
cmp
cmp
pusha
push
call
add
push
inc
popa
insb
insb
inc
outsl
insb
insb
outsl
ja
shl
push
xor
sub
test
pushf
outsb
push
xchg
insb
sbb
test
push
push
adc
or
xchg
jno
test
xchg
mov
addr16
jno
pop
daa
mov
in
mov
mov
cs
mov
push
dec
push
and
cmpsb
andb
cmp
xor
push
cmp
jne
stos
lods
mov
push
push
repz
imul
orb
test
test
adc
cmp
ds
add
xchg
je
jl
cwtl
outsb
cwtl
mov
and
xlat
sahf
sbb
inc
or
loopne
mov
jno
jae
imul
pop
pop
test
xor
pop
mov
jno
scas
test
push
dec
push
shlb
int3
loop
ljmp
call
xchg
sub
push
sbb
loopne
insb
mov
and
pop
mov
nop
fistpll
push
negb
pop
sbb
jne
xor
iret
cmp
aaa
in
rorl
pop
add
sub
lds
mov
jle
mov
pop
arpl
call
inc
popa
mov
roll
xor
fidivrl
mov
and
jmp
dec
je
push
inc
push
inc
cmp
aam
test
mov
cld
mov
in
adc
scas
aaa
adc
sbb
mov
sar
test
fsub
lock
sbbb
pop
inc
push
movb
call
add
inc
gs
gs
arpl
popa
jo
add
push
movw
lea
ja
cmc
imul
test
push
add
push
pushl
pushf
lea
jmp
jmp
lea
pushf
lea
call
bt
mov
pusha
stc
movb
cmp
jmp
aad
adc
loopne
fs
mov
pusha
data16
arpl
int3
mov
test
scas
mov
call
cli
clc
mov
push
add
sbb
adcl
mov
xchg
or
dec
insb
js
testb
sub
bound
sbb
adc
pop
cmp
mov
shl
sub
jmp
call
outsl
insb
gs
jne
xor
cs
insb
add
add
popa
insb
insb
inc
popa
outsl
add
add
je
inc
dec
jb
inc
js
lea
je
bswap
bswap
lahf
lea
pusha
jmp
add
inc
gs
outsb
jne
je
insl
dec
inc
add
lret
clc
test
inc
mov
test
push
clc
cmpb
pusha
movb
call
add
push
gs
outsb
jne
call
add
inc
gs
jns
je
insl
dec
gs
imul
repz
test
cmp
call
lea
je
lahf
pusha
lea
pusha
lea
call
pusha
movb
pushf
pusha
lea
jmp
clc
stc
clc
bt
add
push
movw
pushf
pushf
lea
jmp
add
inc
jb
ja
arpl
add
sub
jnp
inc
movsl
jg
addr16
icebp
mov
mov
inc
or
mov
in
pop
jmp
pusha
cmp
fimuls
or
or
ficoml
or
test
or
imul
sbb
xor
push
pushf
adc
mul
jle
inc
and
pop
filds
lea
jmp
sub
shl
shrd
mov
mov
adc
sub
cmc
dec
ror
mov
cmp
pusha
sub
clc
stc
clc
pushl
popl
bt
cmp
pusha
pushf
call
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
push
sbb
pushf
cmp
jmp
add
push
arpl
outsb
push
outsl
inc
insb
imul
inc
gs
jb
jns
jne
jae
jb
clc
test
cmp
pusha
lea
jb
add
test
add
cmp
mov
test
ror
not
xor
ror
xadd
clc
mov
seta
add
cwtl
movzbw
call
pusha
call
add
inc
gs
imul
sbbl
or
add
fs
jb
aas
cmc
shl
bsr
movzbl
sar
shr
movzbl
btr
stc
imul
bt
lea
shr
neg
neg
dec
push
bsf
push
rol
xchg
shrd
call
stc
clc
stc
add
clc
clc
neg
pushf
rol
pushf
shl
clc
mov
pushl
add
cmp
stc
call
movl
sete
call
aaa
movsbw
cmp
pusha
pushf
cwtl
jmp
pushf
pushl
adc
push
pusha
sub
pushf
mov
movw
shl
pushf
mov
cmc
cmp
cmc
jmp
pusha
cmp
jmp
lea
je
rcr
mov
call
mov
call
mov
sub
push
push
lahf
insl
xchg
push
xchg
push
dec
push
and
fs
fsubrl
stos
adc
out
daa
icebp
pop
or
adc
out
divl
xchg
loope
nop
sub
lock
leave
in
decl
arpl
pushf
push
fiadds
and
out
xchg
xor
pop
jmp
pop
jnp
inc
xchg
mov
out
or
fsub
add
adc
mov
mov
mov
mov
fwait
test
cmp
adc
inc
inc
add
fucompp
out
push
setge
mov
pusha
jmp
mov
adc
bswap
mov
clc
lea
and
mov
sar
shl
not
call
add
dec
insl
popa
addr16
imul
inc
jb
add
inc
loopne
lahf
ljmp
insb
inc
imul
pushl
mov
pushf
movb
lea
jmp
jbe
mov
loopne
xor
pop
jmp
lcall
lret
fxch
mov
push
icebp
add
xor
xchg
addr16
dec
mov
jno
cmc
xchg
sti
mov
cld
es
fwait
outsl
mov
jle
into
in
sar
push
cmp
pop
or
dec
jne
sbb
mov
cmp
push
js
and
das
je
out
inc
cmpsl
enter
add
pop
or
cli
call
bound
xor
lret
mov
push
faddp
shlb
adc
out
lret
js
loop
je
mov
enter
shll
push
lcall
repz
imulb
sub
int3
mulb
pop
dec
xchg
mov
out
arpl
cmc
xor
jp
fwait
gs
dec
pop
push
cmp
sbb
pusha
dec
push
xor
or
scas
mov
sub
and
adc
stc
mov
sub
lret
jne
sbb
pop
push
jno
sub
sarl
leave
cmp
sub
sub
xchg
xchg
pop
mov
dec
dec
jno
push
repnz
insl
dec
sub
cmp
dec
mov
pop
repnz
xor
mov
adc
std
lahf
dec
dec
sahf
stos
mov
add
xor
popa
popf
sbbb
jl
push
add
in
ds
fisubs
gs
mov
push
int3
fnstsw
sub
enter
fdiv
in
test
ss
rcr
rcr
add
dec
outsb
je
jb
arpl
imul
lea
call
pusha
call
mov
movl
sbb
mov
push
pushl
pushf
lea
mov
push
movw
movb
lea
jmp
not
call
add
push
insb
gs
lea
call
pusha
pusha
adc
call
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
add
je
insb
imul
inc
popa
je
add
and
movl
jmp
pusha
jmp
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
cmpl
inc
pop
shr
aam
cmp
lea
pop
rcl
rcl
mov
mov
cmp
setl
mov
jmp
pushf
lea
jb
call
add
inc
jb
popa
je
push
imul
inc
add
add
je
outsl
jb
addr16
jne
fs
imul
fs
jne
mov
pushf
movsbw
lea
mov
xchg
mov
lea
mov
movsbl
xchg
lea
mov
lea
setae
mov
pusha
mov
movzbl
movsbl
not
pushf
mov
pushf
pushl
ret
add
inc
gs
imul
imul
shl
clc
pushl
add
jmp
add
inc
jb
ja
arpl
inc
js
mov
stc
call
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
push
mov
loopne
in
adc
cmp
or
add
data16
sbb
jle
bound
push
pop
mov
xchg
sbb
fmulp
and
xor
out
in
jge
cmp
mov
pop
inc
mov
lea
out
push
jbe
adc
jbe
mov
pop
cmp
xor
out
push
out
ror
lock
into
in
loopne
lret
mov
lret
int
sub
insl
mov
popf
mov
lock
dec
imul
pop
cmp
xchg
daa
out
inc
pop
inc
inc
mov
cmp
dec
mov
iret
jne
push
sub
inc
and
pop
inc
jle
out
push
inc
sbb
add
sbb
jns
lock
ss
and
mov
adc
fs
fcoms
or
or
dec
push
sub
js
jo
push
jb
inc
bound
xchg
sub
sub
sub
aas
int
sbb
sarl
cmp
out
and
or
push
sub
add
fiaddl
add
dec
inc
inc
sbb
or
cwtl
mov
adc
jecxz
xchg
inc
call
dec
jp
and
or
push
das
inc
mov
inc
arpl
pop
pop
flds
stos
inc
jnp
jg
int
mov
pop
pop
sbb
fdiv
jecxz
fistpl
cmpsb
lds
and
sbb
xor
xor
and
adc
xor
sbb
sub
js
outsb
jb
xchg
sub
sbb
lea
je
bt
cmp
test
call
push
movb
jmp
add
dec
jae
imul
popa
bound
add
add
je
arpl
gs
imul
mov
rcrb
iret
dec
cli
decl
jmp
mov
lea
pushl
pushl
pushl
call
lea
jb
cmc
add
mov
inc
mov
add
clc
not
shl
clc
mov
not
add
pusha
xchg
setb
lea
cwtl
pushf
lea
jmp
movsb
int3
das
iret
loopne
stc
and
and
sub
cmp
sub
into
pop
pusha
jo
daa
and
shl
mov
nop
cli
gs
out
aad
movsl
sahf
int
jb
cmp
mov
std
daa
add
daa
add
adc
push
dec
jo
shll
loope
mov
add
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
sbb
bt
lea
pushf
mov
inc
rcl
xchg
test
lea
shld
jmp
cmp
pushf
push
lea
jae
jmp
mov
push
jmp
movb
cmp
bt
cmp
movb
call
ja
outsb
insl
imul
lea
mov
movsbl
not
movzbw
not
mov
pushf
pushf
mov
pusha
mov
pushf
pushf
movw
pushl
ret
lea
call
call
add
push
je
outsb
push
arpl
add
gs
je
push
outsb
dec
outsb
imul
dec
and
mov
call
sub
setle
btc
cmc
lea
add
btr
or
clc
cmp
mov
neg
add
shl
jmp
pushf
call
jmp
add
inc
gs
insb
imul
inc
popa
je
add
add
push
imul
jae
bound
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
mov
mov
push
xchg
pusha
call
xchg
or
push
lock
cmp
sbb
push
mov
fstps
inc
jns
and
xlat
cmp
stos
sarl
mov
xor
mov
jp
sbb
lea
rol
xor
and
cmp
add
pop
imul
xchg
inc
int
aad
fstpl
mov
jb
add
inc
insb
outsl
bound
inc
imul
inc
add
add
je
imul
js
inc
add
add
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
push
mov
loopne
jmp
out
push
fstps
insb
xor
jmp
xchg
loopne
adcl
cmp
cmp
ss
fisubs
fcmove
xor
rclb
data16
aad
movl
add
rcll
pop
adc
ffree
jecxz
mov
incb
inc
cmpsb
shl
out
loop
inc
cmp
dec
not
nop
cmp
loop
adc
push
push
mov
push
xchg
pop
xor
aas
cmp
cmp
and
fwait
lods
mov
dec
mov
push
jae
lret
in
or
cmp
push
add
inc
push
test
push
outsb
ret
pop
sbbb
loopne
cmpsl
mov
lock
sub
in
lock
pop
sub
movsl
inc
mov
and
ljmp
mov
xchg
mov
xchg
sub
aam
lock
pushl
popl
pushf
pushl
ret
add
dec
jne
je
inc
jns
gs
outsl
push
imul
bt
pusha
shl
movb
call
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
add
inc
jb
popa
je
inc
imul
gs
push
outsl
inc
push
add
push
push
outsb
gs
outsl
jo
jo
add
add
jb
popa
insb
imul
arpl
add
je
imul
and
pop
sar
incl
add
je
popa
insb
gs
gs
outsb
je
imul
gs
je
arpl
bound
arpl
add
popa
insb
inc
insb
insb
outsl
arpl
push
jmp
add
push
imul
outsl
insl
push
outsl
imul
cmp
jmp
pushf
sub
pushf
movb
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
leave
xchg
xchg
mov
pop
sete
not
not
pop
not
push
pusha
pusha
mov
pushf
mov
push
mov
mov
lea
jmp
add
push
push
outsb
outsl
ja
add
inc
gs
imul
pushf
pushl
lea
call
cmc
cmp
push
sbb
cmc
lea
cmp
movb
cmc
xchg
bt
rol
push
mov
or
shrd
pushf
lea
sar
clc
mov
pushf
and
not
stc
neg
mov
inc
add
push
rep
pushl
xchg
mov
mov
not
lea
mov
pushf
mov
movb
jmp
and
mov
loopne
ret
push
adc
jbe
das
xchg
push
ss
cs
xchg
sti
pop
mov
outsb
jb
jb
jle
inc
mov
lods
lods
dec
dec
cmpsl
dec
fwait
test
mov
popf
scas
cltd
mov
ret
push
clc
movw
cmpb
pushf
pushf
mov
lea
jne
lea
xor
mov
mov
pusha
call
mov
mov
sbb
mov
lea
jmp
add
push
gs
imul
addr16
js
movw
jmp
call
lea
jae
pusha
push
mov
pusha
lea
jmp
add
push
gs
jbe
outsb
je
push
movb
movl
pusha
mov
lea
jmp
daa
add
loopne
xchg
dec
xchg
xchg
inc
push
cli
sbbl
in
xor
vmptrst
fisubs
fimull
ljmp
mov
inc
lock
pushf
mov
push
pusha
sbb
adc
lcall
bound
push
or
push
or
xor
push
pushf
add
mov
out
xchg
rorb
shrb
outsw
rep
jmp
add
inc
gs
outsb
inc
outsl
js
add
inc
jb
ja
outsl
arpl
push
arpl
clc
inc
cli
incl
add
gs
dec
bound
arpl
add
jae
insl
gs
push
add
idiv
incl
add
je
gs
popa
insl
gs
gs
inc
add
pusha
push
repnz
jmp
add
push
gs
imul
popa
arpl
outsb
je
pusha
lea
call
pusha
pushf
clc
call
jmp
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
inc
gs
popa
je
inc
outsl
jb
popa
je
add
loopne
mov
pushf
data16
adc
and
repnz
jns
pop
and
sub
addr16
adc
jne
adc
or
add
or
iret
jb
shll
mov
jecxz
imul
or
je
out
mov
into
fiadds
out
xchg
outsl
xor
sub
imul
dec
inc
jb
shll
loopne
jp
push
mov
fbstp
inc
mov
ficoms
jmp
aad
inc
outsl
andl
imul
rcll
loopne
loop
nop
inc
lcall
mov
scas
jo
mov
xor
test
push
ret
and
test
dec
notb
push
or
rcr
cld
mov
into
fsub
aam
ficoml
xchg
sub
push
cmp
loopne
pop
mov
inc
mov
jg
adc
ret
into
fiadds
mov
xor
mov
dec
lods
push
addb
push
pop
lds
push
push
clc
fucomp
mov
cmpb
out
mov
dec
push
rcrl
inc
jle
fxch
mov
out
icebp
or
sbb
enter
inc
lods
mov
xchg
outsl
xor
lret
and
daa
out
nop
jle
push
mov
lcall
mov
sub
stos
ja
jae
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
inc
gs
push
dec
outsb
outsw
add
mov
pushf
pushl
adc
push
call
lea
jb
jmp
add
push
gs
jae
addr16
add
add
je
gs
outsl
popa
jb
push
jns
add
add
add
add
insb
arpl
imul
test
push
movb
pusha
jmp
add
inc
js
je
jb
arpl
jae
movl
lea
jb
cmp
clc
xor
stc
clc
stc
test
test
pusha
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sub
add
orl
hlt
push
lea
jmp
jmp
shr
push
jmp
arpl
arpl
xor
fs
insb
add
xor
cs
insb
add
add
je
imul
pushf
pushf
test
mov
call
movl
call
lea
call
jmp
daa
pusha
sbb
add
decl
and
mov
pop
test
fs
test
fs
lret
mov
cmp
xor
lret
jmp
adc
outsl
sub
inc
fcomps
dec
jo
sub
mov
mov
jns
fsub
sub
inc
mov
inc
push
xor
scas
pop
mov
and
scas
inc
fcomps
adc
das
loope
in
fxch
fndisi(8087
imulb
in
imul
mov
into
and
scas
data16
mov
mov
push
push
jno
ja
sarb
push
shrb
loope
ljmp
xor
jecxz
pop
mov
cs
hlt
popf
pop
fnstsw
dec
test
jp
cmp
push
sub
fwait
jp
xor
or
lock
cmc
dec
mov
xchg
sahf
push
xchg
into
dec
jns
jle
and
mov
push
andb
mov
cmpsl
mov
ds
push
ljmp
or
das
jge
fcoml
or
sarb
mov
push
cs
jp
fldenv
imulb
pop
popl
loopne
loop
or
imul
je
rcrl
in
or
push
les
inc
lock
cli
lock
mov
mov
push
outsb
pop
jle
ss
jl
inc
jp
and
int3
loop
testl
not
jmp
jmp
lea
jb
and
mov
mov
bt
shl
push
movb
cmp
add
movb
pushl
lea
mov
call
add
inc
jb
popa
je
dec
outsb
jne
mov
pop
lea
call
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
leave
push
lea
pushf
pushf
push
lea
jmp
btr
mov
adc
mov
bt
test
pushf
add
cmc
pusha
jmp
pushf
movb
add
clc
test
stc
neg
clc
pushf
pushl
clc
rol
push
pushf
call
mov
sub
xchg
xchg
pushf
jbe
sbb
mov
sbb
aam
add
mov
xor
and
clc
shrb
cmp
adc
jne
cmp
enter
pop
lods
pop
std
imulb
adc
cmp
inc
popa
fwait
mov
out
dec
xchg
xchg
inc
pusha
test
cs
sub
ja
dec
mov
repnz
ds
lods
fucom
sub
sbb
xor
dec
xchg
out
hlt
mov
ja
aam
cmp
aas
cmp
sub
and
xorb
or
and
inc
jp
fadds
aad
in
ret
ret
bound
mulb
pop
imull
inc
pop
dec
mov
cmp
lock
iret
mov
adc
cmp
aaa
adc
imul
xor
or
fwait
mov
sub
sub
pusha
inc
xchg
sub
pushf
fwait
dec
xchg
adc
mov
mov
cmp
sub
fadds
add
sbb
or
test
imul
sahf
xor
xor
call
dec
movsb
stos
icebp
sbb
cmp
pop
add
inc
add
xor
adc
add
pop
mov
sub
fst
cmp
data16
adc
cmpb
ret
mov
cmpb
insb
push
dec
push
pop
jb
or
xor
push
ds
popf
mov
gs
je
inc
imul
cmp
lahf
sbb
push
lea
call
cmc
test
push
add
pushf
cmc
mov
bt
pushl
add
push
bt
test
movb
jmp
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
jne
jae
jb
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
jae
popa
addr16
outsl
js
add
pop
and
mov
pop
add
add
fists
pop
add
mov
pop
add
add
sbb
test
pop
insl
repz
pop
sahf
xchg
ret
pop
mov
mov
add
add
xor
mov
pop
stos
ret
pop
bound
pop
pop
pop
ret
pop
pusha
ret
pop
js
ret
pop
push
sarl
pop
movsl
in
ret
pop
push
ret
ret
pop
cltd
aad
pop
cmp
ret
pop
dec
sahf
ret
pop
lock
pop
loope
ret
pop
mov
ret
pop
leave
ret
nop
fnstsw
pop
jle
ret
pop
sti
ret
pop
pop
nop
ret
pop
icebp
aad
pop
insb
test
pop
xchg
pop
push
ret
pop
or
mov
pop
sbb
pop
test
ret
pop
mov
fnstcw
pop
sbb
pop
test
ret
pop
daa
rol
add
add
loop
mov
pop
mov
nop
ret
pop
add
add
dec
add
aad
ret
pop
nop
jmp
pop
xor
mov
mov
pop
push
das
ret
pop
jo
ret
pop
cmp
ret
pop
xor
mov
pop
jl
ret
pop
mov
mov
pop
lock
mov
pop
mov
test
mov
pop
add
mov
pop
lret
pop
lret
pop
iret
jl
pop
pop
inc
push
ret
pop
les
ret
pop
pop
fidivrl
pop
andb
pop
aaa
fs
pop
xor
pop
pop
jmp
pop
or
ret
pop
add
mov
pop
dec
arpl
pop
in
push
ret
pop
add
ret
pop
addb
pop
xor
mov
pop
push
nop
ret
pop
out
ret
pop
sub
ret
pop
push
mov
pop
or
pop
sahf
xchg
ret
pop
xchg
fdivrs
pop
xor
repz
pop
outsb
outsl
ret
pop
cs
pop
sbb
ret
pop
fwait
test
adc
rol
repnz
pop
jg
ret
pop
fadds
mov
pop
xorb
arpl
pop
ret
pop
dec
gs
pop
cmp
ret
pop
mov
in
ret
pop
jnp
ret
pop
negl
pop
int3
out
ret
pop
iret
mov
mov
pop
push
ret
pop
push
popa
ret
pop
or
mov
pop
fidivrs
push
jne
pop
nop
ja
pop
rorl
mov
pop
popa
gs
pop
pop
in
ret
pop
aad
pop
fwait
jecxz
pop
in
ret
pop
cmpsb
pusha
ret
pop
push
aam
pop
pushf
jl
pop
xor
pop
pop
pop
ret
pop
cs
ret
pop
cmp
ret
pop
cmp
ret
pop
outsl
xchg
ret
pop
xchg
pop
mov
stos
ret
pop
pop
add
movsl
icebp
ret
pop
push
push
ret
pop
sar
ret
pop
mulb
ret
pop
adcl
pop
mov
icebp
ret
pop
push
popa
ret
pop
and
pop
outsb
push
ret
pop
ljmp
pop
imul
pop
push
pop
ret
pop
jo
ret
pop
cmp
pop
idiv
ret
pop
push
outsl
ret
pop
mov
mov
pop
stc
ret
ret
pop
push
popa
ret
pop
imul
ret
pop
dec
jge
pop
icebp
cmpsb
ret
pop
orb
pop
cmp
pop
cwtl
outsb
ret
pop
subb
pop
xchg
jae
pop
inc
jle
pop
jne
ret
pop
movsb
jae
pop
rcll
cmpl
pop
jns
mov
pop
hlt
arpl
pop
lock
ret
pop
daa
stos
ret
pop
dec
js
pop
test
ret
pop
lcall
pop
pop
cmpsl
ret
pop
mov
ret
pop
mov
mov
pop
sbb
mov
pop
add
add
je
ret
pop
jne
mov
pop
push
sti
ret
pop
insl
mov
pop
cmpsl
sub
ret
pop
imul
pop
xchg
ret
pop
out
ret
pop
inc
jne
pop
and
pop
faddl
ret
pop
xchg
push
pop
xor
ret
pop
pop
ret
pop
repz
mov
pop
xor
ret
pop
nop
test
pop
loopne
ret
pop
ret
pop
sbb
mov
pop
cmp
add
fsubrs
ret
pop
sti
gs
pop
jo
ret
pop
lods
mov
pop
jbe
ret
pop
lcall
pop
jb
ret
pop
mov
push
ret
pop
outsl
jnp
pop
aam
mov
pop
jne
ret
pop
lret
pop
push
icebp
ret
pop
xor
ret
pop
lods
lock
pop
insb
ret
pop
push
bnd
pop
xchg
ret
pop
jp
mov
pop
test
ret
pop
mov
mov
pop
cwtl
mov
pop
inc
sarl
pop
sbb
ret
pop
push
pop
ret
pop
and
ret
pop
dec
pop
ret
pop
mov
pop
add
add
outsb
cmpl
pop
add
add
pop
push
ret
pop
andl
pop
mov
in
ret
pop
fcmovnu
mov
pop
loope
mov
pop
dec
jo
pop
mov
ret
pop
loopne
ret
pop
lea
ret
pop
cmpsb
ret
pop
in
ret
pop
inc
popa
ret
pop
mov
fidivrl
pop
sbb
pop
and
pop
mov
sahf
ret
pop
mov
pop
ret
pop
inc
fnstcw
pop
test
ret
pop
lock
and
outsb
ret
pop
pop
or
pop
stos
ret
pop
mov
sarb
pop
nop
ret
pop
loope
ret
pop
mov
ret
pop
or
pop
leave
ret
xlat
xlat
mov
pop
test
ret
pop
daa
repz
pop
xor
push
pop
ds
ret
pop
loope
ret
pop
push
gs
pop
pusha
ret
pop
fadd
ret
pop
pop
pop
ret
pop
push
mov
mov
pop
cld
ret
pop
jle
ret
pop
sti
ret
pop
add
sti
ret
pop
lret
mov
pop
xor
mov
pop
inc
mov
pop
xchg
ret
pop
xchg
pop
daa
rol
xchg
sarb
add
push
ret
pop
add
mov
pop
and
add
add
ret
pop
and
mov
pop
enter
add
add
lcall
add
jo
pop
and
ret
pop
arpl
pop
pusha
out
ret
pop
fcmovnu
mov
pop
add
add
or
ret
pop
lea
ret
pop
in
ret
pop
or
pop
bnd
pop
inc
cmpb
cwtl
pop
ret
pop
jne
ret
pop
inc
retw
pop
scas
push
ret
pop
ret
popf
ret
pop
dec
ret
vpermilpd
pop
add
ret
pop
jbe
ret
pop
jmp
mov
pop
nop
in
ret
pop
add
add
push
ret
pop
mov
jl
pop
movsb
pop
ret
pop
int
ret
pop
adc
pop
mov
ret
pop
dec
std
ret
pop
adc
mov
add
jo
pop
mov
in
ret
pop
mov
mov
pop
sbbb
add
add
nop
ret
pop
mov
mov
pop
or
ret
pop
loope
ret
pop
pop
nop
ret
pop
add
add
add
add
je
add
inc
and
mov
pusha
pushf
pushl
ret
aad
adc
loopne
test
bound
mov
sbb
adc
dec
pop
pop
xchg
jbe
cld
add
cs
or
sub
enter
xchg
inc
inc
or
cmp
cmpsl
mov
sbb
jl
gs
mov
mov
push
lock
cmp
xor
adc
inc
lods
inc
mov
shlb
bound
jo
sbb
xor
insb
add
out
lds
jge
push
jnp
push
jne
inc
pop
sbbb
mov
je
push
bt
pushf
pusha
add
jmp
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
xchg
mov
setle
pushf
jmp
add
push
jns
inc
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
mov
incl
add
popa
addr16
imul
ja
js
push
mov
movl
call
movb
lea
call
pusha
mov
pushf
push
adc
jmp
add
push
gs
jae
addr16
add
aaa
popl
test
cmp
push
push
jmp
add
push
gs
outsb
push
inc
imul
imul
gs
xor
cs
insb
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jo
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
adc
sub
fbld
icebp
aam
adc
out
lret
pop
cmp
push
xor
add
jo
in
add
mov
jl
inc
inc
inc
push
or
imul
call
xchg
in
andl
push
xchg
inc
cmpsb
sbb
into
mov
aaa
sub
mov
add
mov
rcrl
pop
fadds
inc
cmp
aaa
call
insb
push
orl
pop
mov
cmp
mov
je
mov
and
adc
bound
mov
jb
mov
scas
mov
cmp
gs
push
out
stc
mov
enter
in
add
mov
mov
into
test
imul
mov
sahf
mov
testb
push
stos
and
add
xchg
jo
out
pop
inc
mov
ficompl
je
or
sub
pop
jl
fstl
in
mov
mov
inc
jns
mov
cs
out
mov
sarb
loopne
add
fldcw
xlat
aaa
mov
aad
sbb
sub
stos
imul
adc
mov
fmul
cmp
pop
xchg
addr16
mov
aad
daa
add
iret
xor
aaa
adc
shll
daa
xor
aam
cmp
fld
leave
xchg
inc
lods
adcb
pop
inc
dec
fs
pop
lahf
jmp
xlat
icebp
iret
in
mov
nop
into
cmc
mov
out
jo
in
addr16
mov
xor
adc
dec
cwtl
mov
mov
shr
rcrl
les
out
sbb
aas
jnp
jae
inc
dec
or
test
inc
inc
cltd
sbb
mov
test
jae
push
push
jno
add
stc
ffreep
xlat
sar
movl
push
sti
pop
sub
out
inc
xchg
push
nop
jo
adc
fcompl
test
and
fnstcw
jmp
test
xor
cltd
mov
bound
mov
dec
push
mov
dec
movsl
inc
inc
scas
push
mov
daa
add
fadds
mov
imul
movsb
aad
js
je
inc
push
cmp
sub
adc
nop
shrl
xchg
test
inc
gs
inc
add
add
jb
imul
popa
jae
inc
add
sar
jmp
mov
lea
jbe
pushf
rcr
sub
sbb
mov
lea
ror
movzbw
mov
cmc
or
add
shl
cmp
shr
neg
or
ror
mov
dec
add
mov
pushf
mov
lea
push
mov
not
mov
mov
lods
pusha
sub
cmc
movb
rol
push
xor
call
pushf
jmp
push
jmp
add
inc
jb
popa
je
inc
dec
inc
imul
pop
add
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
add
jg
add
call
add
inc
jb
gs
imul
movb
not
rep
xchg
movzbl
mov
lea
mov
not
lea
movsbw
mov
call
add
inc
push
dec
gs
inc
add
add
je
imul
outsb
addr16
add
mov
fsubr
dec
inc
cli
incl
add
je
jb
outsl
jb
outsl
fs
pop
in
lea
jb
pushf
bt
cmc
pusha
xor
pushf
stc
test
call
pushf
mov
push
pusha
movl
lea
jge
pushf
movl
pusha
push
movw
pushf
lea
jmp
add
inc
jb
ja
fs
inc
dec
add
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
sub
in
ljmp
jge
lea
jg
stos
jb
pop
jge
xchg
or
cli
jnp
mov
inc
out
ljmp
mov
addr16
push
aad
mov
xchg
pop
sbb
rolb
and
sub
inc
and
or
lcall
hlt
lret
mov
cmc
scas
jp
xchg
and
loopne
push
cmpsb
jo
cwtl
bound
add
cmp
in
inc
inc
and
lods
xchg
mov
aas
lcall
jge
jno
mull
jg
xlat
jno
mov
sbb
and
mov
mov
test
imul
sub
aad
addl
stos
imul
xor
outsb
mov
pusha
inc
pusha
push
push
es
pop
push
xchg
sub
loop
ret
push
mov
loopne
shrl
or
sbb
fcmovne
aad
sub
sbb
lcall
lea
xlat
loope
or
movsb
dec
outsl
mov
mov
fldln2
mov
xorb
jbe
pop
mull
mov
stc
stc
out
mov
dec
xchg
dec
xor
sub
xchg
mov
inc
mov
or
dec
outsb
sahf
xor
add
push
and
out
lret
fwait
jmp
outsb
jb
xchg
stos
mov
fld
aad
jmp
pop
xchg
sub
xchg
push
pusha
pop
jp
add
insb
insb
dec
gs
dec
outsl
outsl
imul
movsbl
movzbw
push
pushf
lea
pusha
pusha
call
jne
gs
xor
fs
insb
add
loop
incl
add
popa
addr16
imul
add
mov
jmp
xlat
shr
mov
and
shl
bt
add
rcr
push
add
sar
add
bt
mov
cmc
bt
call
add
push
jo
popa
je
push
imul
fs
je
or
push
call
call
pusha
pushf
lea
jne
pushf
setbe
call
lea
jne
push
jmp
add
push
outsb
fs
gs
popa
addr16
add
mov
loopne
ret
adc
push
aam
sub
and
icebp
adc
subb
lahf
mov
cmpsl
loop
inc
mov
scas
in
fndisi(8087
icebp
fisubs
xor
data16
pop
iret
sbb
sbb
pop
ja
jecxz
mov
out
dec
imul
xchg
fndisi(8087
ror
push
cli
ffreep
sub
and
ljmp
push
rcl
pop
cmp
je
into
and
sub
sub
lock
clc
out
movntps
call
ljmp
mov
lods
jle
mov
jp
pop
fs
sub
add
push
jo
out
aaa
pop
pusha
xor
test
or
outsb
xchg
test
testb
aad
ds
xchg
jge
jge
loopne
jmp
sar
sqrtps
pop
sub
lret
scas
jle
xchg
addr16
xchg
imul
flds
stos
fistpll
xchg
dec
lea
mov
mov
lods
mov
xor
dec
jl
ret
js
bt
add
bt
mov
sub
rcl
bsf
bswap
mov
cmp
stc
cmp
pushf
call
add
push
gs
je
jbe
outsb
je
add
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
cmp
iret
sar
add
adc
neg
rol
rol
test
sub
jmp
setl
mov
pushf
pushl
call
pusha
movb
mov
lea
jb
cmp
not
mov
test
ror
call
add
inc
push
ja
jb
jne
inc
add
fs
jmp
add
push
imul
jne
jb
add
test
dec
and
pushl
lea
jae
setnp
lea
push
pushl
lea
call
push
pusha
xchg
pusha
lea
jae
jg
xchg
cwtl
movzbw
mov
pusha
mov
lea
jl
lahf
movsbl
lea
pushf
mov
push
pushf
lea
call
cmc
bt
cmc
pusha
cmp
jmp
sub
jmp
lea
call
not
jmp
pushf
lea
call
pusha
jmp
jmp
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
xchg
dec
add
add
or
call
push
call
add
inc
jb
popa
je
push
push
add
pop
lods
incl
add
je
outsl
jns
imul
add
popa
jns
outsb
push
inc
imul
add
pushf
jmp
bswap
bt
rcl
push
mov
lea
pushf
mov
lea
call
jmp
jmp
add
inc
gs
gs
dec
gs
imul
inc
gs
jb
jns
outsb
jne
cmp
call
jbe
jb
imul
add
push
shl
mov
lea
mov
cmc
stc
sub
jmp
movb
movzbw
push
lahf
not
js
bswap
lea
pusha
movl
push
push
push
mov
push
push
pushl
ret
add
push
gs
arpl
insb
insb
push
popa
outsb
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
cmc
mov
push
pushl
or
pushf
push
movl
call
mov
call
shr
shld
ror
lea
add
rcl
mov
rol
pusha
mov
stc
repnz
push
lea
jne
mov
movb
lahf
lea
lahf
push
lahf
lea
pushf
mov
pushf
movl
mov
pushf
mov
pushl
pushl
ret
add
inc
push
outsb
jne
je
insl
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
loope
andl
incl
add
jae
jb
gs
je
imul
mov
movl
pusha
push
lea
jmp
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
mov
sub
push
stos
push
and
in
out
test
in
inc
movq
out
fistpll
int
dec
lds
cmc
rclb
fcmovnb
push
and
add
mov
mov
cs
sbb
fs
cmp
push
dec
jbe
push
pop
sbb
add
sub
jnp
inc
jae
call
add
inc
gs
arpl
dec
outsb
outsw
add
fs
jno
jb
bt
cmc
xor
cmc
test
pusha
not
call
clc
mov
shl
bsf
pushl
neg
mov
call
pop
stos
ret
pop
and
mov
pop
add
add
fists
pop
add
mov
pop
add
add
sbb
test
pop
insl
repz
pop
sahf
xchg
ret
pop
mov
mov
add
add
xor
mov
pop
stos
ret
pop
bound
pop
pop
pop
ret
pop
pusha
ret
pop
js
ret
pop
push
sarl
pop
movsl
in
ret
pop
push
ret
ret
pop
cltd
aad
pop
cmp
ret
pop
dec
sahf
ret
pop
lock
pop
loope
ret
pop
mov
ret
pop
leave
ret
nop
fnstsw
pop
jle
ret
pop
sti
ret
pop
pop
nop
ret
pop
icebp
aad
pop
insb
test
pop
xchg
pop
push
ret
pop
or
mov
pop
sbb
pop
test
ret
pop
mov
fnstcw
pop
sbb
pop
test
ret
pop
daa
rol
add
add
loop
mov
pop
mov
nop
ret
pop
add
add
dec
add
aad
ret
pop
nop
jmp
pop
xor
mov
mov
pop
push
das
ret
pop
jo
ret
pop
cmp
ret
pop
xor
mov
pop
jl
ret
pop
mov
mov
pop
lock
mov
pop
mov
test
mov
pop
add
mov
pop
lret
pop
lret
pop
iret
jl
pop
pop
inc
push
ret
pop
les
ret
pop
pop
fidivrl
pop
andb
pop
aaa
fs
pop
xor
pop
pop
jmp
pop
or
ret
pop
add
mov
pop
dec
arpl
pop
in
push
ret
pop
add
ret
pop
addb
pop
xor
mov
pop
push
nop
ret
pop
out
ret
pop
sub
ret
pop
push
mov
pop
or
pop
sahf
xchg
ret
pop
xchg
fdivrs
pop
xor
repz
pop
outsb
outsl
ret
pop
cs
pop
sbb
ret
pop
fwait
test
adc
rol
repnz
pop
jg
ret
pop
fadds
mov
pop
xorb
arpl
pop
ret
pop
dec
gs
pop
cmp
ret
pop
mov
in
ret
pop
jnp
ret
pop
negl
pop
int3
out
ret
pop
iret
mov
mov
pop
push
ret
pop
push
popa
ret
pop
or
mov
pop
fidivrs
push
jne
pop
nop
ja
pop
rorl
mov
pop
popa
gs
pop
pop
in
ret
pop
aad
pop
fwait
jecxz
pop
in
ret
pop
cmpsb
pusha
ret
pop
push
aam
pop
pushf
jl
pop
xor
pop
pop
pop
ret
pop
cs
ret
pop
cmp
ret
pop
cmp
ret
pop
outsl
xchg
ret
pop
xchg
pop
mov
stos
ret
pop
pop
add
movsl
icebp
ret
pop
push
push
ret
pop
sar
ret
pop
mulb
ret
pop
adcl
pop
mov
icebp
ret
pop
push
popa
ret
pop
and
pop
outsb
push
ret
pop
ljmp
pop
imul
pop
push
pop
ret
pop
jo
ret
pop
cmp
pop
idiv
ret
pop
push
outsl
ret
pop
mov
mov
pop
stc
ret
ret
pop
push
popa
ret
pop
imul
ret
pop
dec
jge
pop
icebp
cmpsb
ret
pop
orb
pop
cmp
pop
cwtl
outsb
ret
pop
subb
pop
xchg
jae
pop
inc
jle
pop
jne
ret
pop
movsb
jae
pop
rcll
cmpl
pop
jns
mov
pop
hlt
arpl
pop
lock
ret
pop
daa
stos
ret
pop
dec
js
pop
test
ret
pop
lcall
pop
pop
cmpsl
ret
pop
mov
ret
pop
mov
mov
pop
sbb
mov
pop
add
add
je
ret
pop
jne
mov
pop
push
sti
ret
pop
insl
mov
pop
cmpsl
sub
ret
pop
imul
pop
xchg
ret
pop
out
ret
pop
inc
jne
pop
and
pop
faddl
ret
pop
xchg
push
pop
xor
ret
pop
pop
ret
pop
repz
mov
pop
xor
ret
pop
nop
test
pop
loopne
ret
pop
ret
pop
sbb
mov
pop
cmp
add
fsubrs
ret
pop
sti
gs
pop
jo
ret
pop
lods
mov
pop
jbe
ret
pop
lcall
pop
jb
ret
pop
mov
push
ret
pop
outsl
jnp
pop
aam
mov
pop
jne
ret
pop
lret
pop
push
icebp
ret
pop
xor
ret
pop
lods
lock
pop
insb
ret
pop
push
bnd
pop
xchg
ret
pop
jp
mov
pop
test
ret
pop
mov
mov
pop
cwtl
mov
pop
inc
sarl
pop
sbb
ret
pop
push
pop
ret
pop
and
ret
pop
dec
pop
ret
pop
mov
pop
add
add
outsb
cmpl
pop
add
add
pop
push
ret
pop
andl
pop
mov
in
ret
pop
fcmovnu
mov
pop
loope
mov
pop
dec
jo
pop
mov
ret
pop
loopne
ret
pop
lea
ret
pop
cmpsb
ret
pop
in
ret
pop
inc
popa
ret
pop
mov
fidivrl
pop
sbb
pop
and
pop
mov
sahf
ret
pop
mov
pop
ret
pop
inc
fnstcw
pop
test
ret
pop
lock
and
outsb
ret
pop
pop
or
pop
stos
ret
pop
mov
sarb
pop
nop
ret
pop
loope
ret
pop
mov
ret
pop
or
pop
leave
ret
xlat
xlat
mov
pop
test
ret
pop
daa
repz
pop
xor
push
pop
ds
ret
pop
loope
ret
pop
push
gs
pop
pusha
ret
pop
fadd
ret
pop
pop
pop
ret
pop
push
mov
mov
pop
cld
ret
pop
jle
ret
pop
sti
ret
pop
add
sti
ret
pop
lret
mov
pop
xor
mov
pop
inc
mov
pop
xchg
ret
pop
xchg
pop
daa
rol
xchg
sarb
add
push
ret
pop
add
mov
pop
and
add
add
ret
pop
and
mov
pop
enter
add
add
lcall
add
jo
pop
and
ret
pop
arpl
pop
pusha
out
ret
pop
fcmovnu
mov
pop
add
add
or
ret
pop
lea
ret
pop
in
ret
pop
or
pop
bnd
pop
inc
cmpb
cwtl
pop
ret
pop
jne
ret
pop
inc
retw
pop
scas
push
ret
pop
ret
popf
ret
pop
dec
ret
vpermilpd
pop
add
ret
pop
jbe
ret
pop
jmp
mov
pop
nop
in
ret
pop
add
add
push
ret
pop
mov
jl
pop
movsb
pop
ret
pop
int
ret
pop
adc
pop
mov
ret
pop
dec
std
ret
pop
adc
mov
add
jo
pop
mov
in
ret
pop
mov
mov
pop
sbbb
add
add
nop
ret
pop
mov
mov
pop
or
ret
pop
loope
ret
pop
pop
nop
ret
pop
add
add
add
rcr
rcr
daa
pop
inc
shrd
pop
je
pusha
test
stc
cmp
pushf
call
add
push
gs
fs
imul
mov
pusha
pushl
mov
lea
jmp
add
push
outsl
jae
push
jne
je
gs
popa
add
mov
mov
pop
pusha
call
add
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
lea
ja
dec
sub
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
call
add
add
fs
arpl
inc
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
je
jb
jbe
je
push
jb
imul
imul
push
gs
imul
dec
jb
inc
js
lcall
rcl
cmp
add
aaa
adc
cs
push
sbb
sbb
push
jo
sbb
adc
in
in
int
aam
xchg
iret
pop
pop
xor
ss
push
jae
lock
test
dec
jne
cmpsb
mov
repnz
pusha
adc
pop
and
sbb
cli
sbb
jle
mov
mov
in
xchg
testl
call
mov
pop
cmp
push
push
adc
jb
dec
or
adc
and
sub
xor
and
and
sub
cmp
popf
sub
dec
xchg
xchg
mov
lea
cmp
mov
dec
cli
in
out
and
push
inc
jmp
lods
jp
xor
mov
imul
xchg
xlat
cmp
sbb
sbb
push
jmp
jbe
cli
sti
outsl
or
movsb
lock
ffreep
mov
cwtl
jl
cmpsl
inc
ljmp
pop
pop
std
sbb
addr16
pop
outsb
mov
mov
int3
insl
into
cmc
xchg
mov
xor
adc
xor
movsl
loopne
mov
sub
in
push
or
push
gs
bound
outsl
mov
push
mov
xchg
sub
stc
outsb
mov
popf
mov
in
and
jne
ja
leave
adc
jb
ss
sub
in
pop
inc
les
jle
cmp
orb
or
pusha
sti
mov
das
cmp
pusha
jp
sub
clc
push
ret
pop
inc
sub
es
ljmp
popa
cmc
into
icebp
pop
inc
push
adc
lahf
mov
call
clc
or
aad
andb
cli
sarb
pop
push
jno
stos
jmp
fsts
repnz
adc
add
cltd
loop
icebp
inc
test
les
loopne
or
decb
mov
loope
push
mov
lret
js
inc
lahf
outsb
imul
jecxz
sbb
sti
test
icebp
ret
jns
inc
mov
lds
loopne
stc
js
movsb
std
pusha
pop
cli
mov
xlat
jp
or
push
xor
int
sbb
push
inc
pop
std
jle
jns
aas
test
icebp
and
jmp
push
xchg
repz
hlt
imul
inc
call
inc
outsb
xor
or
popa
fidivrs
cs
jo
adc
mov
cmp
cld
ljmp
mov
mov
fisubrl
js
adc
jg
in
xchg
ds
cs
and
mov
mov
int
int3
mov
lods
pop
dec
sahf
aas
fisttpll
xchg
add
mov
sbb
jb
movsb
cmp
jmp
fimuls
aam
das
xchg
imul
movb
cmp
orb
jg
cmp
jecxz
sub
scas
test
pop
pushf
push
lods
and
mov
nop
fidivrs
or
outsl
stc
sbb
or
jl
iret
adc
add
mov
loop
arpl
fs
cmp
out
fimuls
je
mov
test
xor
mov
test
xchg
out
jge
pop
incb
jno
pop
arpl
mov
adc
cs
jecxz
popa
in
dec
das
xor
call
dec
insl
xor
cli
mov
idivb
pop
insb
aad
es
mov
add
pop
rcrl
adc
in
or
out
mov
xchg
hlt
clc
aas
sti
loop
mov
xor
sub
pop
dec
jl
sub
call
sbb
adc
adc
and
outsl
cmp
incb
push
xor
jb
imul
xchg
jae
cmp
add
daa
pop
jge
in
int
mov
es
bound
push
mov
cli
xor
ret
std
pop
icebp
fimull
loope
in
test
pop
push
cwtl
js
div
sub
imul
jge
test
sub
movsl
das
cmp
push
mov
in
mov
mov
insb
mov
test
xor
mov
mov
pop
jae
in
lret
dec
mov
sbb
jge
and
dec
fsubp
mov
jb
mov
jg
cmp
pop
js
sub
sbb
adc
inc
adc
scas
int
mov
mov
xor
xor
sub
adc
or
scas
test
mov
fsubr
jbe
jle
sbb
iret
dec
ja
xchg
jmp
and
fisubrs
out
fidivs
mov
int
jno
sarl
cmpb
clc
popf
mov
push
scas
in
div
lds
lea
sarl
push
shlb
add
sub
aad
movsb
xor
gs
adc
jecxz
cwtl
sbb
and
test
or
jbe
stc
adc
xabort
sbb
fdivs
aaa
or
in
fisttpl
pop
or
int3
cwtl
lea
jmp
mov
mov
jle
outsb
xor
xchg
es
cmpsl
fstpt
cli
xchg
pop
lahf
jns
sub
mov
pushf
jg
cli
xchg
xchg
enter
clc
jno
fs
inc
lods
cs
sahf
cld
xchg
xor
in
jne
sbb
xchg
rcrl
inc
rcl
cltd
cmpsb
push
out
and
and
xor
push
fcomps
sub
mov
es
mov
and
lret
testb
ljmp
push
bound
and
rcl
adc
imul
mov
in
les
sbb
push
ljmp
mov
jl
push
movsl
pop
es
out
in
dec
cmp
cmp
imul
pop
pop
sahf
int
mov
inc
xor
jae
loope
insb
stos
lahf
test
std
xchg
jnp
imul
std
cmp
jmp
or
das
xor
js
dec
inc
rcrb
mov
push
jae
int
cld
inc
lahf
xor
call
or
insb
mov
sub
inc
mov
das
insb
jo
jmp
xor
fnstsw
push
ja
push
sbb
stos
aad
cmc
inc
adc
cld
push
add
or
jl
rcrb
xchg
out
dec
mov
mov
sbb
pop
sbb
cmp
fst
push
rolb
sahf
inc
aas
in
push
in
daa
cmc
loopne
lret
adc
mov
divl
stc
xadd
cli
and
fwait
mov
jle
subb
mov
inc
stos
jne
test
sub
or
lahf
push
and
out
pop
or
and
push
gs
mov
out
aas
jp
subb
out
insl
dec
gs
mov
cmpsl
dec
mov
jg
push
lock
clc
xchg
mov
mov
leave
mov
sbb
imul
adc
jecxz
sbb
dec
xchg
ljmp
adc
test
mov
out
mov
sub
das
add
js
cmp
mov
cmpl
push
ljmp
push
adc
pusha
add
and
pop
ds
adc
rolb
fstl
add
push
push
or
movsb
iret
outsl
lea
xchg
decl
dec
popa
xor
and
out
push
int3
mov
enter
ss
sub
jmp
daa
push
and
lea
xchg
pop
or
bound
xchg
gs
ret
jae
inc
dec
jo
inc
xor
cmp
or
jmp
enter
insb
gs
pop
inc
into
stos
pop
jecxz
aaa
adc
xchg
mov
cmpsb
pop
movsl
arpl
out
movb
push
test
popf
and
xor
add
out
dec
jmp
push
jbe
shl
or
sbb
jp
in
inc
pextrw
ja
cmp
mov
or
je
pop
xor
add
cmp
nop
cmp
push
pop
pushf
jno
push
call
repnz
stos
push
push
jmp
out
sub
adc
or
in
mov
dec
cmp
jle
cmp
daa
mov
sub
stos
sub
cmc
pushf
js
jmp
pop
pop
cmp
mov
mov
call
jmp
cmpsl
in
lret
add
mov
sub
cld
lahf
jns
lock
leave
fcoms
inc
in
mov
cmp
pop
loopne
sbb
mov
xor
sbb
inc
repz
mov
or
out
jecxz
ss
pushf
mov
aad
scas
lahf
jns
in
mov
xchg
sbb
out
sbb
add
bound
jno
sahf
jo
nop
and
imul
or
imul
fcmove
stos
xor
jbe
fstl
movsb
cmp
lock
pusha
cmpsb
push
sti
push
addr16
dec
outsl
dec
push
pop
jb
das
fidivrs
cmpsb
xchg
or
xchg
outsl
sbb
sub
mov
gs
mov
pop
cmpsb
in
sbb
ljmp
cltd
orl
das
or
test
jne
in
xchg
movsl
scas
push
daa
cwtl
mov
pop
xchg
mov
popa
call
cmp
dec
movsb
mov
xchg
fsubr
adc
xchg
push
push
call
and
jb
adc
call
hlt
or
inc
mov
jbe
scas
fildl
xor
pop
cmpsl
in
out
jle,pt
daa
lret
cmpsl
and
jg
push
mov
xlat
arpl
add
shll
and
jnp
adc
push
sub
mov
jecxz
out
push
add
mov
mov
mov
adc
mov
into
pop
fistl
rcrl
std
push
cltd
pop
aad
dec
int
pushf
mov
fdivrs
insl
fwait
mov
and
aad
ja
dec
in
unpckhps
repnz
dec
jae
jg
daa
shlb
inc
mov
insl
push
repz
loopne
jbe
xchg
test
popl
decl
in
test
cmc
test
int
push
in
sub
xor
pop
iret
mov
jg
sub
pusha
sub
xchg
add
icebp
add
ljmp
dec
repnz
jge
in
mov
jmp
out
repnz
cmp
add
ret
daa
cltd
cwtl
cmp
fimuls
push
push
daa
xchg
das
outsl
xchg
xor
sbbb
pop
or
jbe
clc
mov
mov
shr
subb
cld
mov
mov
arpl
ds
loope
sub
cld
mov
das
call
insl
pop
push
std
and
pop
lea
pop
cld
lods
xchg
xchg
dec
mov
fcmovu
aam
ja
js
pop
dec
dec
ret
jbe
mov
lret
sbb
add
je
push
push
arpl
push
pop
imul
test
and
cld
inc
or
pop
insl
cmpsl
pop
sub
mov
mov
dec
sub
sub
repz
sbb
cmp
lock
dec
inc
dec
cmp
ss
cmp
rcr
insb
dec
mov
xor
aad
inc
addl
xor
insb
rorl
cmc
ficompl
ret
nop
repnz
add
dec
outsb
je
jb
arpl
arpl
add
je
imul
js
inc
add
fs
jae
movzbw
push
lahf
pushf
lea
jmp
pushf
lea
ja
stc
call
lea
je
setae
cwtl
pusha
push
lea
pusha
pushl
mov
jmp
add
inc
gs
jb
jae
dec
jb
inc
js
lea
pushf
lea
call
pusha
lea
jae
pusha
push
xchg
movb
movb
pusha
lea
jae
pushf
movsbw
xchg
movzbw
mov
cltd
xchg
lahf
movzbw
mov
movzbw
pop
lea
jmp
add
inc
gs
js
je
outsl
fs
push
add
nop
mov
jmp
mov
and
mov
rcrb
lea
jb
cmp
cmc
clc
test
cmp
pushf
mov
call
pushf
call
call
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
add
dec
jae
outsl
outsl
insl
gs
add
outsl
jae
dec
popa
outsb
fs
add
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
add
jbe
push
test
js
movsb
push
mov
xorl
xchg
sub
lret
sbb
pop
xchg
in
pop
cmp
ss
mov
ja
or
xchg
jmp
shll
xchg
imul
jg
pop
mov
pop
inc
add
add
outsl
dec
push
pushf
clc
imul
mov
and
jne
lea
xadd
call
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
pop
mov
xchg
not
pop
movzbw
mov
lea
call
cmc
stc
test
cmpl
push
mov
lea
jne
pushf
mov
bswap
lea
mov
movsbw
pushf
mov
pusha
lea
push
call
add
dec
insl
popa
addr16
imul
ja
pushf
mov
call
add
inc
jb
ja
outsb
jne
popa
jb
mov
pushf
call
call
add
inc
jb
popa
je
push
outsl
insb
imul
add
dec
imul
inc
lret
lea
jne
lea
jmp
pushl
mov
call
jmp
add
inc
gs
popa
jae
inc
jb
outsl
jb
bt
cmp
pusha
movb
lea
ja
push
clc
cmc
jmp
sub
sub
mov
shr
sub
call
stc
pop
ret
stc
test
sub
cmp
cmp
cmp
jmp
add
insb
jae
jb
jo
outsb
inc
add
add
je
outsl
jo
imul
add
jbe
insb
imul
je
call
lea
pushf
push
pushf
push
lea
jmp
neg
call
mov
setb
mov
mov
movzbw
lods
stc
movw
cmc
ror
not
jmp
add
push
inc
add
aas
xchg
mov
pusha
mov
movsbw
call
lea
bt
seto
xchg
pop
xor
pop
test
pop
shl
setns
daa
pop
lahf
cmc
aam
test
pop
sub
btc
neg
pop
btc
stc
btc
add
jmp
add
inc
insl
jo
jns
insb
imul
add
add
popa
insb
inc
jb
add
add
je
outsb
jne
je
je
add
add
addr16
insb
outsl
jae
dec
gs
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
push
popa
gs
jb
popa
jns
jb
popa
je
add
add
je
outsb
jne
je
imul
cmp
rorl
call
add
push
arpl
jae
bound
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
add
inc
gs
imul
addr16
js
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
fidivl
xchg
inc
mov
fimull
dec
sbb
dec
push
dec
inc
mov
mov
dec
dec
push
outsl
jns
insl
inc
jns
push
jns
out
aam
inc
repnz
dec
loopne
and
rolb
dec
push
push
xor
jle
mov
nop
jp
fmull
loopne
loopne
sahf
add
add
or
mov
cmpsb
cmp
inc
dec
mov
popa
sub
push
xlat
dec
or
jbe
and
adc
push
or
mov
shlb
push
mov
movsb
pop
out
mov
adc
sub
inc
pop
movsl
adc
and
adcb
insl
pop
xor
cld
repnz
dec
cmpsl
lea
pop
jo
int3
lahf
ficoml
cmp
bound
sahf
loopne
or
or
popa
jo
push
adc
add
xor
inc
add
push
sub
lea
andl
lea
xchg
push
or
xchg
mov
fisubs
loope
xchg
outsl
cmp
jecxz
out
xor
loop
orb
cmc
or
sti
jmp
repnz
cli
fsubp
test
gs
aad
int
jg
mov
int3
repz
mov
mov
fucom
stc
call
fs
or
imul
ja
xchg
xchg
mov
loopne
es
and
lock
mov
cmp
imul
pop
movsl
mov
fnsave
xor
aas
jmp
jp
sub
push
and
or
add
sbb
je
or
cmp
and
mov
jne
mov
mov
inc
test
or
add
in
cld
sbb
fs
mov
nop
fcmovb
xorb
imul
cmp
ja
xchg
test
sbb
fdivrl
sbb
repz
mov
xor
or
mov
fisttpll
repz
and
or
in
in
jno
pop
add
push
push
mov
sti
mov
adc
inc
xchg
jg
or
sub
ret
hlt
adc
adc
xlat
or
push
outsl
inc
jns
cmp
and
ret
cwtl
dec
imul
sahf
movsb
mov
push
push
lods
dec
test
in
add
mulb
xor
das
or
sub
pop
outsl
sub
mov
sub
inc
gs
aad
add
je
bound
arpl
add
dec
jae
imul
imul
xchg
rcrb
mov
pusha
bswap
mov
movzbw
lea
pushf
push
lea
call
cmp
cmp
pusha
pushf
sbb
jmp
sbb
shrl
shrb
sbbl
mov
aad
in
mov
addr16
in
mov
xor
ja
shrl
mov
insl
inc
push
mov
mov
bound
lock
inc
mov
adc
out
call
lea
sub
jbe
std
lret
add
test
or
stos
xlat
aaa
mov
shll
into
inc
movsb
xchg
push
jmp
and
cmp
push
lods
pop
pop
sub
pop
lods
xchg
jns
std
add
movsb
out
mov
and
fists
outsb
movsb
insb
rcr
les
xchg
pop
inc
int
mov
pushf
es
cmp
or
cs
fisttpll
out
loope
andl
pop
sbbb
outsl
and
sbb
mov
aad
imul
out
jle
dec
dec
sub
xor
jnp
jl
inc
sbb
insb
dec
sub
xor
repz
jo
shrb
data16
mov
fldcw
jg
dec
push
cs
clc
push
add
in
add
test
or
adcl
mov
mov
sub
popa
stos
or
scas
xlat
in
outsb
lret
int
pop
subb
lods
arpl
push
or
and
fstp
pusha
jno
mov
inc
add
and
cwtl
rorl
jge
mov
test
mov
mov
push
lcall
jge
push
mov
sub
mov
pop
je
jae
mov
icebp
mov
pop
push
pop
xor
fstps
jo
sub
mov
cmp
jne
stc
bound
aad
cmpsb
sahf
cmp
arpl
mov
xchg
sbbl
jnp
int
shl
out
stos
push
mov
mov
add
outsl
out
cmpsb
or
loop
jb
push
push
in
movsb
xor
sub
scas
int3
and
sahf
adc
jns
pop
push
in
and
pop
insl
aam
lret
sbb
test
mov
push
movsb
jecxz
in
pop
fwait
dec
cltd
push
or
fcomp
jb
push
mov
jb
dec
call
mov
cmp
mov
inc
pop
push
leave
jo
xchg
mov
xor
mull
sub
sbb
dec
imul
pop
addl
rolb
jnp
add
in
movsb
pop
mov
test
das
aas
jp
insl
inc
pop
daa
push
pop
sub
ljmp
adc
repnz
cwtl
gs
fisttpll
adc
or
out
dec
cld
int
pusha
mov
std
and
pop
xchg
inc
add
pop
push
lcall
dec
in
and
shr
pop
dec
cmp
mov
and
xchg
cmc
inc
sub
dec
rolb
into
xchg
add
jg
add
ss
cld
jg
pop
outsb
lods
rclb
fwait
lcall
sub
mov
test
cmp
and
mov
lcall
insb
inc
cmpsl
mov
jp
fbld
jmp
lods
mov
inc
je
mov
sbb
pop
leave
xchg
fstpl
sub
push
jg
cs
loope
mov
sbb
movsb
ds
dec
inc
pop
push
mov
mov
mov
mov
mov
movsl
mov
or
push
cmc
push
lock
dec
push
frstor
dec
xchg
stc
xchg
mov
mov
dec
and
sub
xchg
xor
sub
mov
les
jo
sbb
xor
mov
in
outsb
cmp
mov
iret
loope
pop
dec
decl
xor
rcl
push
movsb
repnz
xor
mov
popf
xor
push
push
clc
jle
sti
sahf
sbb
fdivl
and
int3
and
mov
sbb
shll
push
lods
std
ja
idiv
xchg
pop
sbb
sbb
adc
mov
mov
mov
mov
call
pop
adc
adc
aaa
xchg
xor
cmp
enter
inc
jnp
mov
jb
and
roll
xchg
adc
xchg
push
dec
insl
and
adc
pop
repz
gs
mov
enter
jno
out
push
adc
cwtl
insb
adc
xor
xchg
dec
fwait
stos
and
cmp
xchg
fs
push
cmp
sbb
imul
pop
fwait
movsl
fisttpl
lds
mov
test
sbb
adc
jl
dec
cmpl
cmp
sbb
push
fists
pop
in
test
movb
fisubs
shll
or
stos
push
sbb
outsl
or
mov
es
mulb
or
loop
or
call
push
pop
jbe
add
enter
jg
call
or
ds
push
adc
xor
push
jae
test
and
or
sub
aam
sbb
stc
pop
lea
dec
std
pop
test
ljmp
adc
mov
xchg
stos
imul
mov
popf
rcl
outsb
rolb
jl
add
out
push
in
jbe
lret
adc
sbb
enter
push
inc
in
push
pushf
jmp
mov
shr
jmp
mov
mov
dec
adc
fiadds
push
ss
movsl
sub
mov
sarl
mov
mov
cltd
bound
test
inc
mov
rorl
bound
inc
inc
pushf
aam
sub
xchg
xchg
mov
push
jbe
mov
cmp
and
pop
sbb
imul
sbb
sbb
xchg
push
adc
rclb
cs
out
cli
or
je
or
xlat
xchg
mov
ds
pop
cmp
jo
push
ret
xchg
mov
jp
cmp
test
mov
pop
je
inc
and
lds
mov
mov
mov
dec
js
rcll
rcrl
or
stos
dec
or
fnsave
jg
sbb
xor
inc
sub
dec
pop
fxch
push
js
push
push
stos
xchg
push
cmpsb
inc
adc
in
int3
xchg
cmpsb
cmp
jns
sbb
xor
in
call
daa
cmpsl
xchg
or
mov
xor
addr16
inc
xchg
je
push
dec
push
sbb
lcall
add
or
lods
push
mov
sti
push
scas
inc
outsb
js
rcrl
cmp
mov
repz
pop
jg
cmp
das
in
xchg
xor
inc
xchg
divl
inc
enterw
jle
xchg
jb
mov
das
adc
fwait
xor
and
adc
mov
add
out
movsl
push
sub
sbbl
test
cmpb
shll
shlb
ja
add
outsl
lds
adc
cltd
adc
and
push
mov
scas
push
icebp
hlt
sbb
cld
icebp
mov
aaa
jnp
xchg
mov
out
push
imul
add
mov
aad
lods
mov
mov
scas
mov
lret
and
mov
in
lret
dec
enter
repz
data16
das
loope
inc
cld
rcr
push
xor
pop
leave
std
mov
jns
mov
dec
push
sbb
adc
repnz
out
mov
pop
dec
lret
sub
mov
ss
mov
pop
add
and
cmp
xor
xchg
adc
sbb
cs
mov
test
fcomps
xor
jmp
jnp
sbb
adc
push
and
jne
mov
js
pcmpeqd
arpl
test
sbb
or
inc
int
adc
decb
out
adc
sbb
pushf
mov
pop
and
fisttpll
mov
sbb
inc
in
stos
pop
pop
and
xchg
rorl
mov
add
inc
popa
jl
xor
mov
sbb
data16
mov
andb
push
movsl
cmp
subb
cs
and
lea
test
int3
jae
out
cld
les
inc
fisubs
and
mov
jb
popf
into
mov
and
inc
popa
push
into
add
pop
pop
jmp
jbe
scas
jmp
pop
popa
cmp
out
decb
icebp
ss
jo
dec
test
inc
xchg
les
mov
mov
js
das
adc
mov
out
lods
movsl
ret
xchg
mov
int3
pop
shrl
mov
xchg
inc
ds
test
in
mov
cmp
xchg
sbb
fxch
cwtl
rolb
into
fbstp
jb
mov
sbb
and
fistl
test
dec
mov
call
clc
cmp
jo
adc
inc
or
imul
adc
repnz
bound
xor
push
and
adc
push
mov
pop
sbb
xchg
dec
cltd
pop
xchg
adc
add
cmovle
test
cmpsb
pop
inc
or
insb
clc
stos
out
lcall
sub
repnz
gs
xchg
and
popa
xor
into
or
mov
stos
in
cmpsb
mov
cs
mov
sub
into
insb
movsl
xor
xor
aam
cmpsl
xor
shl
popf
divl
mov
in
xor
sbb
cmp
cltd
jge
jns
mov
push
pop
test
addr16
mov
add
mov
jne
sbb
das
std
faddl
or
or
and
sub
bound
or
movsb
ret
mov
pop
test
int3
inc
sti
xor
push
add
lds
ret
cmp
xor
insl
ljmp
mov
lahf
inc
adc
mov
and
out
push
cmc
orl
sahf
jae
push
or
pop
loope
sbb
pop
cld
in
dec
xchg
loop
pusha
lock
iret
jg
sbb
popa
call
mov
rcll
bound
stc
jge
out
pusha
pop
es
mov
test
insl
fiadds
hlt
adc
pop
insb
imul
rorb
nop
out
jae
jmp
sbb
insl
jecxz
notl
xchg
cmp
xchg
mov
dec
mov
sahf
rorb
roll
cmovg
inc
pop
jecxz
arpl
rorl
cmpsb
notl
push
ja
mov
fdivrp
push
fs
mov
jbe
xchg
mov
push
xor
aam
outsb
aaa
add
inc
fsubrs
addr16
cmp
add
or
sbb
push
lods
cld
mov
dec
mov
icebp
sbb
jae
loop
fs
ja
and
mov
fstps
inc
jo
mov
mov
nop
pusha
aas
or
je
lods
int3
pop
cmp
repz
adc
in
pop
mov
jne
and
mov
jge
cmp
ljmp
das
incl
xchg
cmp
idiv
inc
cmp
cmp
jge
les
adc
dec
loopne
adc
push
jbe
and
mov
test
dec
and
or
xor
and
mov
mov
mov
loope
sarb
popf
adc
pop
outsb
sbbb
clc
in
mov
push
aad
fdivrs
scas
mov
and
pop
or
aaa
loope
in
repz
fdivrl
mov
outsb
adc
out
push
shl
pushf
sub
push
ficomps
rorb
push
add
jne
idivl
xchg
and
cmpsl
aad
pop
decl
mov
cmp
mov
fdivs
xchg
es
jnp
adc
and
xor
inc
cwtl
xor
mov
test
daa
xchg
loope
pop
mov
cmp
incl
out
xor
jmp
sti
ss
repnz
jnp
aad
xchg
sti
call
hlt
mov
loopne
aas
pop
push
push
addl
sub
lods
sbb
add
xchg
mov
out
pop
loop
xchg
cmp
xchg
pop
jo
pop
jmp
jle
hlt
push
sbb
fildl
adc
jecxz
dec
and
mov
mov
fiaddl
repz
mov
arpl
inc
push
cmp
addr16
cmp
cmpsb
mov
out
xorl
xchg
or
add
sahf
adc
pop
iret
and
jae
sub
cs
push
xor
mov
mov
sub
or
outsl
adc
mov
sahf
scas
sub
jle
xor
pop
scas
stos
ret
push
subl
bswap
cmp
insl
add
inc
xchg
and
out
lahf
ds
xor
add
movsl
push
mov
sbb
in
cld
imul
and
mov
sub
and
das
push
lahf
sbb
jp
test
pop
rcll
out
das
ljmp
xchg
out
lret
cmp
add
fldenv
jae
mov
pusha
orps
lock
outsl
mov
call
inc
insl
mov
repz
in
dec
lahf
cmpsl
and
xor
js
mov
ss
xchg
pop
divl
jmp
pop
hlt
cmpsb
push
mov
adc
jle
mov
in
cmpsb
mov
out
repz
sbbl
ds
inc
mov
or
jbe
cmp
mov
push
xor
push
data16
jo
cwtl
pop
js
mov
ret
xchg
divb
sar
adc
or
pop
insb
inc
fwait
lcall
xor
sub
push
jecxz
mov
lds
int
mov
das
lret
inc
pop
push
cltd
sbb
push
mov
push
mov
fimuls
into
das
mov
mov
and
push
daa
jns
dec
js
sub
jno
notb
scas
out
loope
cmp
cmp
shll
inc
pusha
dec
subb
jmp
or
stos
out
pop
mov
hlt
sbb
loop
cmp
jb
push
xchg
mov
push
stc
nop
frstor
jae
add
mov
jnp
cli
inc
dec
sbb
jb
or
adc
mov
push
xchg
ss
jo
enter
icebp
or
sub
add
jp
insl
push
clc
jno
sbb
rsqrtps
inc
sti
cli
sbb
aaa
test
pop
enter
adc
in
adc
sub
mov
loopne
loope
or
pop
dec
dec
inc
inc
add
mov
push
test
movsl
xchg
ljmp
mov
mov
scas
aad
jg
cmp
inc
jo
fildll
cli
les
js
lock
jg
inc
pushf
lcall
mov
push
mov
cmp
jp
insl
mul
push
sbb
mov
aad
sbb
mov
adc
sub
mov
sti
data16
push
mov
xor
mov
cmp
inc
fldenv
pushfw
outsb
cltd
cmpsb
mov
lods
push
pop
lds
push
call
cli
movsb
pop
fnstsw
pusha
mov
jmp
leave
xchg
or
cmp
cmpsb
pop
sbb
push
jno
arpl
dec
mov
lds
push
dec
frstor
test
sbb
aam
pop
outsl
add
mov
mov
pop
aas
imull
mov
sub
inc
jno
adc
out
mov
nop
data16
pop
pop
fiaddl
xor
xor
dec
sbb
loope
cmp
inc
sti
icebp
xor
icebp
movnti
inc
mov
xchg
out
jecxz
push
push
loop
inc
leave
sbb
fidivs
mov
dec
and
mov
mov
in
loopew
adc
mov
or
push
cmp
xchg
frstor
mov
jno
int
cmc
sbb
lods
inc
xor
and
clc
dec
fisubl
dec
popf
call
push
lods
jo
enter
xor
mov
lret
hlt
jle
call
aad
or
cld
movb
mov
out
out
iret
adc
jae
fildll
sub
rcl
test
xchg
cmp
test
dec
iret
mov
mov
idivl
ja
loop
or
xchg
in
loop
ja
jmp
xchg
mov
cltd
leave
jg
xor
aas
scas
mov
adcb
xchg
out
insb
test
imulb
sub
outsl
hlt
ss
insb
mov
push
push
jmp
dec
sbb
les
es
dec
adc
sbb
out
pusha
sub
cmp
fcmove
or
lds
rcl
stos
and
jg
mov
xchg
js
cwtl
jne
out
mov
xor
mov
pop
sub
stos
cmp
inc
mov
movsb
sub
shll
dec
sti
push
sbb
incb
imul
rcrl
hlt
xor
out
lret
scas
xor
xchg
pop
in
push
js
sbb
jecxz
outsb
and
xor
mov
xchg
orb
xchg
test
mov
ss
in
es
sub
dec
xor
and
popl
xchg
fcoml
add
rcrb
xor
mov
xor
inc
inc
pop
jno
adcl
mov
mov
cmpsb
and
enter
jns
pop
scas
lret
aad
ret
fdivrp
into
test
sbb
sahf
sbb
mov
sub
ret
sbb
arpl
jns
rcll
int3
mov
psllw
rol
push
iret
mov
dec
push
cwtl
fisubrs
lahf
stc
push
push
cmp
mov
aad
push
mov
jp
push
push
rcl
dec
scas
pop
icebp
and
pop
jns
aam
sbb
jb
stos
cld
aas
lcall
push
sahf
xchg
shl
leave
test
pop
xor
mov
int3
sar
jmp
mov
in
sbb
sub
xchg
aam
xorb
popf
xchg
mov
mov
stos
ret
outsl
xor
bound
js
inc
fisubl
pushf
inc
xlat
fstp
fiaddl
sub
lret
enter
fimull
xchg
mov
adcl
adc
cmp
sahf
imul
xor
adc
rolb
loop
xchg
adc
sub
xor
andb
adc
cmp
into
pop
stos
push
jle
ss
gs
loop
ss
imull
mov
push
lcall
lret
cmpxchg8b
cmp
imul
and
ss
out
aas
js
jp
jo
jmp
ja
jl
test
jno
cmpsb
in
stc
out
data16
push
dec
out
xchg
ret
mov
aad
and
pop
mov
fdiv
ljmp
add
dec
enter
xchg
js
xor
je
fstps
addr16
xor
cmpsb
lds
or
xchg
sti
int3
mov
xlat
into
mov
inc
shlb
or
adc
sbbb
push
or
loopne
xchg
xor
xor
arpl
and
stos
in
and
cld
sub
ljmp
jp
loopne
xor
xchg
pusha
or
insl
lret
ret
ror
and
mov
jp
bound
ds
push
mov
jnp
cli
lea
jecxz
mov
das
push
mov
gs
add
shlb
xchg
insb
iret
scas
pop
sti
xlat
js
fnstcw
jl
jl
out
dec
aas
or
cmc
push
add
sub
sbb
lcall
popa
rcrl
pop
rorb
jl
lea
pop
les
cs
xor
jl
lea
or
outsl
and
fisubl
rcrl
cld
sbb
lock
insl
pop
xchg
jmp
xlat
sub
cmp
mov
adc
push
mov
push
inc
or
pop
movsb
imul
cld
bts
fwait
dec
xchg
addl
sub
cmpsb
jle
loopne
jl
mov
stos
insl
add
xchg
sbb
or
cmp
pop
movsb
mov
xlat
cmc
push
mov
bound
and
adc
xchg
scas
adc
mov
jb
cmp
lods
mov
dec
xchg
push
mov
lds
rcrb
sti
rclb
push
call
iret
push
aaa
aad
scas
sbb
ja
sbb
out
mov
jl
xor
sahf
addl
add
fcoml
lea
bound
dec
or
pop
dec
jp
arpl
push
stos
movsb
insb
int3
pop
jbe
lods
icebp
scas
pushf
and
jne
data16
xor
sub
sbb
lcall
repz
repz
ss
xor
shrl
mov
movsl
dec
dec
push
test
push
ja
or
lret
mov
jp
shr
push
and
ret
or
mov
shrb
adc
inc
hlt
add
mov
cmp
or
add
push
into
cmc
sbb
cmp
test
std
addl
fcoml
lea
inc
dec
std
or
mov
insb
xchg
mov
mov
and
push
adc
pop
mov
pop
pushf
push
jno
xchg
mov
push
add
in
sub
jbe
rol
push
or
call
pop
iret
shrl
adc
push
xor
mov
mov
insb
insb
mov
sub
jmp
hlt
push
out
outsb
ja
repz
not
inc
repnz
adc
jo
dec
add
mov
sarl
mov
loop
lret
jecxz
in
out
pop
lods
popw
mov
lds
cmp
sbb
inc
cmp
mov
fildl
or
jmp
cmp
loopne
xchg
adc
call
adc
lock
or
cli
int3
lcall
daa
mov
test
xchg
sub
ss
arpl
arpl
xor
fwait
leave
pushf
or
push
sbb
xchg
xor
push
out
insb
cltd
in
arpl
cmp
or
dec
gs
push
mov
sbb
push
sbb
xchg
mov
jle
xchg
and
cs
data16
adc
xlat
inc
mov
negl
mov
or
dec
inc
addr16
jmp
inc
inc
dec
sbb
mov
jecxz
das
stc
cmpsb
xlat
mov
or
sbb
mov
cli
aas
adc
pop
adc
xchg
cmp
pop
stos
inc
mov
mov
nop
cld
add
dec
in
cs
cli
frstor
ret
dec
mov
stc
push
xor
sbb
xor
sub
icebp
rorl
inc
push
push
test
lcall
push
inc
imul
or
lret
mov
xchg
stos
mov
not
mov
pusha
and
inc
mov
scas
inc
ret
js
cwtl
or
repz
out
in
stos
nop
push
lret
xlat
mov
jo
sub
cmp
push
mov
jnp
xchg
or
mov
arpl
sub
or
dec
xchg
lea
add
dec
outsb
sub
jp
xlat
pop
mov
mov
into
inc
lcall
or
stc
cmpsb
sbb
repnz
or
or
or
ljmp
dec
rorl
mov
jnp
aam
pushf
cmpsl
sahf
in
shrl
test
inc
push
inc
fwait
sarb
iret
shl
lcall
movsb
sub
mov
leave
push
icebp
notl
inc
push
enter
int3
inc
sahf
push
add
or
in
daa
lret
lods
or
adc
lods
outsb
cmpl
fwait
xor
jmp
jp
inc
aas
jo
jb
and
inc
sbb
mov
into
fisubs
mov
test
or
std
test
rol
sub
jge
dec
sti
ds
mov
jmp
pop
dec
pop
lods
jns
mov
repz
mov
fwait
dec
mov
and
test
fsubrs
addr16
cmp
outsb
popf
push
repz
cs
xor
sub
stos
icebp
aad
std
outsl
sahf
mov
dec
and
jno
andb
icebp
adcb
fcmovnu
jecxz
xchg
mov
jnp
push
daa
outsb
add
pop
popf
xor
cld
test
jo
popf
int
icebp
push
addl
xchg
or
icebp
sbb
fidivrs
xchg
mov
jb
lods
mov
mov
mov
or
mov
or
lods
push
mov
int3
and
jge
push
cmp
fs
mov
scas
adc
jmp
das
xor
push
cmp
nop
xchg
adcb
jle
pop
jbe
jbe
ret
push
lcall
sub
cmp
cmp
out
push
shlb
test
imul
mov
jl
out
adc
pop
pop
xor
out
test
out
sbbl
movl
cmp
xor
icebp
pop
pop
in
rorl
push
roll
pusha
mov
scas
std
sar
test
fcmovnu
xchg
or
sub
and
cltd
xchg
lret
scas
out
xchg
xchg
in
aaa
push
fisttpl
add
inc
insb
aaa
add
lods
or
ds
cwtl
enter
xor
xchg
inc
and
in
test
insb
cmpb
leave
loopne
jg
mov
sub
xchg
cmp
pusha
int3
jmp
xchg
test
fdivs
and
ja
cmp
sbb
das
inc
pop
jne
push
sahf
mov
ret
fildll
popa
aam
iret
xchg
pop
or
rorb
mov
fwait
jmp
xchg
jnp
negb
popa
jo
mov
dec
add
push
pop
add
or
lock
inc
jno
jo
mov
call
cmp
lea
pop
inc
or
mov
jo
and
push
scas
enter
shll
repz
test
pop
dec
sbb
jmp
mov
into
outsb
sarb
out
xor
js
insl
dec
xchg
fsub
pop
add
lds
or
cs
imul
cmp
iret
add
lds
push
pop
pushf
negl
sbb
push
sub
and
inc
cmc
lea
push
std
dec
imul
scas
rolb
adc
adc
mov
adc
inc
scas
push
lcall
jge
cmpl
push
mov
cmp
pop
mov
cltd
jp
filds
cmpb
fistl
lds
or
in
les
cmp
into
xchg
idivl
imul
jno
push
shll
push
sub
or
lahf
add
jnp
push
adc
enter
lods
sbb
sbb
daa
or
pop
pusha
mov
sbb
pop
daa
stc
inc
jo
popf
jno
ss
imul
repz
aad
scas
jo
inc
xor
in
mov
mov
insl
dec
or
sahf
adc
cmp
cmp
mov
frstor
adc
test
push
pop
xor
mov
enter
jl
sti
sbbb
ljmp
xchg
inc
sub
fidivrs
loop
sqrtps
hlt
fistps
add
adc
add
mov
rcl
ds
jl
xchg
inc
enter
sbb
ljmp
cmpsb
aad
jmp
inc
int
push
mov
push
xor
sub
dec
pop
or
pop
dec
jle
ret
xchg
insb
ret
push
jge
xor
mov
adc
nop
jl
in
daa
mov
enter
adc
push
mov
mov
adc
jae
and
cltd
jae
gs
jns
dec
les
xor
xorl
jbe
dec
cmp
ds
mov
cmp
ret
enter
dec
or
adcl
lahf
pop
mov
iret
xchg
imul
mov
movsb
out
or
cld
jmp
shl
dec
add
pop
fidivl
je
shll
pop
shrb
shrl
cmpsl
mov
add
aam
sbb
pop
pop
sbb
or
push
das
dec
incb
pop
sbb
movsl
xor
into
mov
adc
mov
or
xor
hlt
mov
cmp
ret
loopne
lea
or
shrb
test
mov
call
pop
jge
and
lret
sarl
pop
adc
cmp
fistpll
add
sub
dec
iret
repnz
pop
xor
cmpsb
dec
lds
test
sbbb
neg
loope
adc
dec
cs
mov
jle
pop
cmp
xor
sbb
push
sub
aaa
adc
push
xchg
inc
clc
jnp
bound
push
in
and
push
sub
cmp
push
inc
mov
das
adc
sbb
cmp
mov
mov
jecxz
incb
movsl
jge
mov
loopne
addl
ljmp
xchg
cmpsl
fbstp
cmc
jno
fscale
gs
jae
data16
xlat
pop
jp
gs
jecxz
xchg
push
fnop
sub
cmpsl
int3
jno
xor
push
add
xchg
lock
mov
jg
sub
mov
lods
aas
out
xchg
add
pop
subb
pop
adc
fsubrs
ficomps
sti
inc
push
decb
aaa
mov
xor
sub
pop
pop
mov
ffreep
or
jae
bound
cs
je
pop
popf
inc
fdivrp
sub
mov
aas
cmpb
pop
clc
js
jne
or
sub
scas
iret
pop
mov
mov
bound
jecxz
jp
xchg
jno
fcomip
cwtl
lds
out
ficomps
test
bound
mov
stos
or
ja
pushf
movsl
loope
mov
jle
shll
mov
lcall
cmp
and
mov
hlt
stos
lods
cli
insl
out
cltd
imul
add
outsb
and
add
data16
imul
mov
and
mov
lock
ss
imul
pop
pop
cmp
mov
pop
shll
mov
es
pop
dec
adc
sub
cltd
cwtl
scas
push
adc
inc
mov
fldt
and
adc
cmp
sub
pusha
scas
or
iret
jecxz
call
in
arpl
inc
cmc
es
cmpsb
inc
and
mov
outsb
lahf
cmp
adcl
push
loope
jmp
stc
cmp
push
sbb
dec
jae
jb
push
ret
xchg
subb
insb
dec
dec
leave
clc
xchg
lock
push
imul
sbb
arpl
adc
sub
ja
mov
pushf
inc
or
pop
dec
cli
pop
je
pop
cltd
into
inc
repz
dec
mov
pop
xor
les
sub
or
inc
das
daa
cld
icebp
pop
mov
inc
pop
movsl
addr16
inc
adc
test
dec
arpl
xlat
icebp
xchg
rorb
cmpsb
mov
cs
sbb
jo
out
sub
lahf
ljmp
pop
xchg
fstpt
loope
pop
inc
fisubs
xor
cmc
and
mov
xor
or
leave
bound
pop
lahf
jae
adcb
xchg
cmp
adc
mov
push
jo
push
push
or
jno
cs
sbb
imulb
push
mov
mov
rcrb
shrl
xor
rcrb
nop
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
data16
je
arpl
add
je
push
dec
outsl
arpl
add
enter
add
call
pushf
jmp
add
push
gs
outsl
jbe
push
jb
jo
add
shl
rorb
cltd
shrb
int
mov
jmp
add
push
je
push
outsb
ja
outsb
add
add
imul
add
test
decl
inc
lea
shl
mov
xor
add
stc
mov
adc
sar
test
xchg
xor
cmc
btc
rcl
mov
sbb
mov
xor
bsr
mov
stc
cmc
mov
bsf
add
bswap
movzbw
mov
adc
mov
and
sub
inc
shld
cmc
mov
xor
rcl
pushf
movsbw
mov
lea
rol
movsbw
sub
push
aaa
and
btr
sbb
shrd
mov
cmc
shl
pusha
cmp
add
call
add
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
add
imul
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
lea
call
pushf
call
jmp
add
inc
gs
jns
gs
gs
add
dec
outsb
jae
jb
dec
outsb
jne
je
insl
inc
add
push
fsubr
xor
incl
dec
and
jmp
roll
out
testl
pop
rcl
xor
mov
push
dec
loopne
shlb
dec
jae
imul
jne
pushl
jnp
sbb
clc
cld
or
sbb
ret
ljmp
test
mov
aad
fs
jne
clc
lea
xadd
mov
lea
setns
bsf
mov
adc
sub
shld
add
pushf
mov
btr
sar
cmc
test
mov
pusha
lea
pushl
mov
neg
or
mov
sub
call
add
insb
jae
jb
outsb
inc
add
neg
bsf
mov
push
cmpb
jmp
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
mov
and
bsf
call
mov
test
cmpb
pushf
mov
movb
lea
jne
bswap
sub
movsbw
lea
shl
neg
mov
dec
add
stc
and
cmp
mov
pusha
bt
push
test
pushf
lea
je
push
sub
jmp
add
push
gs
ja
imul
add
je
jne
jae
jb
add
push
popa
jb
popa
outsb
je
outsl
jo
add
cmpsb
fwait
jmp
pop
and
push
lea
jb
cmp
aad
movzbl
clc
test
shr
pushf
imul
call
jmp
mov
cmp
pusha
call
mov
not
jmp
movl
movl
jmp
xchg
not
not
mov
mov
setb
mov
movsbw
push
mov
pop
pop
setno
xchg
movw
mov
not
pushf
mov
lahf
pushf
lea
push
lea
je
push
jmp
pop
and
cmpsb
loopne
mov
insb
outsb
mov
int3
push
movsb
ffree
and
jmp
or
pop
popl
mov
pop
xchg
jo
mov
cmpsl
enter
ss
sbb
mov
shrb
movsl
jns
mov
inc
idiv
jp
fwait
pop
test
addb
sub
arpl
call
mov
stos
sub
sub
mov
popa
jno
jne
pop
lods
mov
cmp
stos
js
cli
or
and
sbb
xor
pop
sbb
sbb
and
sub
xchg
gs
imul
jb
popa
fs
jb
arpl
jae
add
lea
jae
lea
jmp
lea
call
pushf
pushf
mov
pushl
lea
jmp
sub
jo
mov
adc
btc
bswap
btc
sub
ror
mov
call
repnz
pusha
lea
jne
push
mov
bsf
movsbw
not
sub
shr
rcl
lea
lea
pusha
pushf
push
mov
sub
cmc
movb
call
add
add
and
pop
cmp
sti
pop
mov
lock
add
inc
gs
imul
jae
cmpsb
andb
sub
adc
in
pop
icebp
and
push
jo
sub
jno
int3
negb
xchg
dec
push
push
inc
mov
xchg
xchg
xchg
xchg
adc
xchg
mov
mov
add
mov
scas
mov
ret
aad
lods
mov
fcmovne
add
stos
cltd
mov
insb
gs
jae
inc
popa
jo
jne
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
je
insb
imul
loopne
cmp
pushf
add
not
jmp
pushf
pop
movsbw
push
lea
call
movsbl
setb
not
movsbw
push
lea
mov
jmp
add
inc
gs
outsl
arpl
add
insb
insb
cs
insb
add
sub
adc
cld
fdivrs
xor
adc
rcr
stc
pushf
jl
push
xchg
sahf
mov
test
popl
push
pop
push
mov
jnp
adc
mov
cmp
aaa
fdivrl
in
dec
mov
fdivrs
fisubl
ret
lret
cmpsl
cmovb
sub
jae
int3
sub
fldenv
icebp
out
cmc
adc
ds
std
xchg
pop
das
inc
cmpl
sbb
fwait
test
in
add
xchg
inc
imul
arpl
gs
insb
imul
call
adc
movsbw
pop
cmp
test
pop
xadd
bswap
pop
shrd
and
not
pop
aam
push
push
aas
mov
dec
ror
lea
clc
mov
bt
btc
add
jmp
mov
mov
lea
jb
and
neg
bts
push
cmp
movzbw
call
add
dec
jae
imul
jae
popa
addr16
add
bt
jmp
add
dec
insl
popa
addr16
imul
addr16
push
insb
outsl
arpl
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
imul
push
jo
arpl
add
ret
and
bsf
or
pop
mov
pop
shl
mov
bt
cmp
call
add
dec
outsl
jbe
push
outsl
inc
js
add
dec
outsl
popa
fs
je
imul
dec
outsb
jae
jb
dec
outsb
jne
add
mov
mov
cmp
push
lea
jae
pushf
lea
jae
cmp
jmp
pushl
popl
pushl
pushl
ret
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
aaa
aam
loopne
mov
je
into
mov
dec
or
repnz
pusha
nop
xchg
inc
stc
jmp
cmpl
outsl
addl
add
add
and
xor
insb
and
mov
pushf
pushf
lea
jmp
bt
jmp
sbb
clc
lea
test
cmc
xchg
bsf
push
shrd
lea
bts
sbb
mov
clc
not
shl
and
sub
neg
add
pusha
rep
pop
lea
pop
mov
pushf
mov
movb
mov
mov
pusha
mov
mov
movb
push
lea
jmp
jmp
neg
cmp
call
xchg
shll
mov
mov
shrl
inc
push
popf
pop
lea
outsl
popa
adc
shrl
xlat
cmp
cmp
in
xor
fstpl
cmp
push
fsub
fistpll
sbb
cltd
ret
jp
jle
loopne
sbb
inc
scas
mov
jns
stc
out
mov
mov
fmul
lock
imul
xchg
adc
dec
push
sarb
mov
jns
mov
sbb
jmp
adc
mov
mov
jns
push
stos
xchg
test
repnz
mov
popa
mov
dec
sub
js
dec
xchg
mov
andb
ja
rolb
xlat
inc
lods
dec
xchg
xorb
adcb
stos
in
lret
pop
xchg
sub
push
xchg
xor
sbb
jecxz
pop
std
imul
int
mov
jns
mov
in
cld
sub
rorl
pop
or
mov
add
cmp
jbe
xor
outsl
lahf
sbb
sbb
jne
rolb
pop
mov
inc
bound
aas
xlat
or
inc
aaa
lods
sub
xlat
add
icebp
stos
scas
mov
addr16
mov
cmp
outsb
dec
cmpsl
add
xchg
aad
scas
fildl
jmp
sub
sub
inc
pop
sbb
inc
jbe
push
js
push
xchg
sub
sti
shr
stos
call
call
push
ror
call
xchg
jmp
pusha
lea
jae
xchg
sbb
or
mov
sbb
mov
setl
bsr
xor
mov
pushf
jmp
add
inc
push
ja
jb
add
add
fs
imul
jmp
cmp
pushf
push
pusha
lea
jae
shld
xor
mov
sbb
xchg
shld
or
mov
neg
mov
push
call
mov
mov
jmp
call
jmp
add
push
gs
outsl
jbe
dec
outsb
jne
add
dec
imul
add
test
cmc
push
sub
jmp
call
add
inc
gs
gs
outsl
popa
jb
push
je
je
add
cmpsl
mov
add
ret
leave
pop
add
cli
dec
dec
enter
mov
mov
fbstp
ret
cmp
pop
pop
sbb
cs
jmp
mov
sbb
pop
and
cmp
mov
aad
xor
sbb
push
jae
sar
lods
mov
int
xor
fsubl
xor
mov
add
aaa
daa
and
xor
pop
inc
dec
jp
fidivrl
xor
push
or
or
stc
rcll
mov
loopne
mov
xchg
scas
incb
mov
mov
mov
dec
inc
sbb
jns
inc
pop
pop
mov
xor
push
adc
pop
ds
jl
scas
js
push
jae
stc
adc
jne
add
sub
or
adc
sbb
pop
push
jl
jno
mov
bound
cmpsl
xchg
push
adc
addr16
aam
mov
adc
adc
lea
test
dec
addr16
mov
sbb
fsubs
subb
jno
xchg
scas
aas
sbb
loop
inc
xchg
jp
enter
lock
add
sbb
pop
sbb
sbb
je
push
ss
ficomps
aas
test
inc
insb
sub
push
in
ret
cmc
mov
push
xor
pop
cltd
loope
mov
xchg
dec
mov
ret
call
std
scas
xchg
adc
mov
loope
jmp
mov
push
mov
mov
xor
mov
mov
and
int3
divl
inc
jp
fisubs
repz
outsb
repnz
adc
jae
test
inc
addr16
aas
xor
cmpsl
test
push
jg
rcr
jno
sbb
movsl
and
pop
inc
cmpsb
ss
cmp
enter
shrl
push
mov
mov
sub
daa
stc
pop
jmp
incb
sbb
sub
aad
mov
inc
cmpsb
mov
push
push
subb
inc
mov
jbe
pop
dec
les
and
sahf
cmpsw
inc
pop
stos
dec
xchg
mov
out
pop
in
in
jae
aas
or
outsb
xchg
stos
adc
lret
mov
and
cmp
push
dec
jbe
jle
dec
jp
js
cmpsb
xchg
sub
adc
push
out
mov
sub
jno
pop
scas
dec
outsl
aad
mov
pop
mov
stos
mov
test
lea
pop
mov
xor
cs
jae
pop
inc
add
lds
test
cmpsl
fwait
sarb
scas
push
test
mov
out
int
out
pop
jle
push
das
je
dec
lds
shll
stos
test
adc
jno
and
sub
aad
aad
sub
jmp
bnd
mov
lret
aaa
xor
jnp
jg
outsl
dec
inc
add
mov
xchg
shl
scas
mov
loopne
and
cmp
xor
faddl
clc
cs
in
mov
and
add
push
ss
xchg
jmp
adc
into
mov
push
mov
and
jnp
movsl
jb
mov
xchg
lret
ret
add
fisubrs
dec
dec
outsb
cmpsb
push
mov
jecxz
and
mov
xchg
test
and
enter
or
cmp
add
cmp
cmp
push
jmp
and
jmp
add
mov
call
add
pop
ret
mov
mov
pushl
push
pushf
pushl
lea
jmp
call
cmp
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
imul
imul
mov
cwtl
mov
lea
jo
push
lahf
movzbl
cwtl
pushf
lea
pushf
movl
call
add
push
outsb
fs
gs
popa
addr16
add
push
incl
add
insb
gs
imul
jae
popa
je
push
imul
imul
add
add
je
inc
inc
js
push
cmp
mov
sub
lahf
jns
insl
mov
adc
loop
shrl
mov
push
push
pusha
rcl
sub
xor
push
xchg
gs
stos
cmp
mov
rorl
mov
in
arpl
andl
dec
inc
jno
sbb
adc
dec
lods
mov
sub
push
mov
mov
in
sub
mov
call
nop
orl
mov
push
loop
inc
pop
or
daa
popf
jno
dec
movb
fdivrs
ret
dec
cmpl
and
push
mov
ds
loop
push
in
inc
test
filds
mov
fdivs
sbb
movl
sbb
add
xchg
fcmovnb
xlat
xchg
mov
stc
and
mov
imul
inc
imul
jo
outsb
inc
insb
imul
add
add
jne
inc
push
imul
pushf
pushf
mov
pushf
push
push
pusha
pushl
ret
lea
jns
push
lea
call
clc
cmp
jp
pushf
pusha
pushl
sbb
test
jmp
add
push
inc
popa
insb
insb
pop
imul
add
mov
mov
push
push
movb
lea
jmp
pushf
lea
jne
pushf
jmp
call
sete
mov
pusha
pusha
call
mov
not
movzbw
cld
mov
cld
cld
cld
call
jmp
mov
movb
mov
mov
pushl
movb
lea
jmp
mov
shrd
shr
mov
cmc
call
stc
sub
mov
mov
mov
mov
mov
mov
lea
jmp
btr
mov
sar
shr
add
mov
push
call
mov
pushf
movw
mov
mov
movb
movb
mov
call
mov
pushl
pushl
lea
jmp
mov
movw
mov
mov
push
pushf
lea
jne
movsbw
cmp
mov
call
pushf
push
call
movw
mov
pushf
jmp
call
mov
mov
mov
push
mov
pushl
mov
push
lea
jmp
pusha
mov
pushl
popl
pushl
movl
push
lea
jmp
pusha
cmp
cwtl
jmp
rcl
dec
notl
sar
bswap
mov
push
cmc
bt
clc
sub
test
pushf
jmp
jmp
cmp
push
mov
add
pushf
pushf
jmp
cwtl
bswap
jp
mov
call
jmp
jmp
bt
push
mov
bt
stc
mov
movb
sub
mov
jmp
call
push
not
mov
call
inc
add
xor
mov
pushf
movsbl
mov
movw
not
stc
bt
not
call
setg
cwtl
clc
bsr
mov
jmp
call
jmp
mov
call
pushf
call
add
jmp
mov
pushf
movw
mov
call
call
push
pushl
popl
pusha
lea
jmp
pushf
pushf
pushf
popl
pusha
movb
pushf
jmp
call
pushf
mov
pusha
call
call
pushf
mov
pushf
pushf
call
call
stc
mov
clc
stc
call
pusha
mov
mov
jmp
pushl
popl
push
lea
jmp
jmp
mov
push
pushf
popl
pushl
call
push
adc
sbb
push
mov
cmc
xor
pushf
pushf
mov
inc
add
jo
bt
bt
clc
add
stc
bt
not
cmc
call
sbb
xor
shl
mov
movzbl
xor
shrd
add
test
movsbw
sub
mov
push
dec
pushf
not
bswap
dec
btr
neg
btr
not
sar
push
pushf
sbb
add
sbb
movzbl
jmp
push
pusha
jmp
jmp
movsbw
cwtl
pushf
mov
call
sar
aad
bsf
mov
movzbw
setge
add
mov
jmp
call
ror
xor
shr
xor
pushf
jmp
pushf
pushf
pusha
pushf
popl
movb
jmp
mov
pushf
mov
pushf
lea
jmp
call
pusha
call
mov
jmp
jmp
call
and
pusha
jmp
add
shr
lea
bt
bt
cmp
pushf
lea
ja
clc
movzbl
mov
movzbw
pusha
cwtl
lea
or
cmc
shrd
sub
pusha
lea
mov
and
lea
btr
and
cmc
movzbw
btc
rcl
sub
movzbl
not
mov
push
pop
pushf
pusha
cld
mov
not
push
std
movsbw
mov
bswap
movsbw
lea
pusha
pushf
call
add
pushf
pushf
jmp
pusha
sub
call
shrd
movzbw
btr
btr
mov
clc
sub
call
push
mov
push
pusha
pushf
lea
jmp
jmp
pusha
pushl
pushf
popl
jmp
call
mov
push
pushf
push
lea
jmp
mov
movb
mov
movw
pushf
pusha
push
lea
jmp
pusha
push
lea
cpuid
call
cmp
stc
add
push
pushf
push
movw
mov
pusha
push
movb
mov
lea
jmp
call
mov
movzbl
call
neg
aas
mov
stc
xor
mov
pusha
test
add
call
pushl
mov
mov
mov
jmp
pushf
mov
call
shl
pop
bts
pusha
xor
inc
mov
stc
or
aad
mov
xor
mov
movsbw
xadd
setl
mov
bt
or
bts
add
mov
ror
stc
bsr
add
mov
stc
test
mov
pushl
popf
pushf
push
pushl
ret
not
pushf
pusha
pushf
dec
test
not
cmc
mov
add
clc
call
lea
inc
adc
movsbw
not
clc
inc
sub
movzbl
sub
and
shl
mov
pushf
cmp
bt
add
pushf
jmp
pushf
call
neg
cmp
cmp
mov
clc
clc
sub
cmc
rol
cmp
sub
jmp
jmp
cmp
mov
rcr
clc
mov
bt
not
push
not
cmp
call
push
pushf
popl
pusha
pushf
pushl
popl
push
pushf
mov
lea
jmp
call
mov
push
mov
lea
jmp
pusha
pushf
push
mov
pushf
mov
mov
mov
lea
jmp
or
mov
test
cmp
test
jmp
pushf
divl
jmp
test
xchg
xchg
shld
mov
std
or
pop
stc
pop
bsr
aam
pop
sbb
jmp
not
pushl
call
movb
call
pusha
call
add
bt
call
pushf
pusha
call
movb
pushf
mov
pushf
pushf
mov
pushl
lea
jmp
call
lea
jne
pushf
adc
xorb
lea
mov
seta
movsbw
pushf
mov
mov
lea
jmp
mov
push
jmp
push
mov
jmp
movb
mov
jmp
call
pushf
pushf
pushf
popl
movw
pushf
call
clc
pushl
popf
movb
mov
movb
lea
jmp
inc
cmp
add
jl
mov
seta
not
pusha
pop
dec
adc
sub
stc
and
stc
shrd
xor
btr
mov
jmp
mov
lea
movzbw
movsbl
dec
push
not
movzbw
push
xchg
xchg
pusha
mov
call
stc
clc
shl
mov
pushf
call
inc
setg
not
pushf
cmc
shrd
add
sbb
adc
rcr
cmc
lea
bts
shld
xor
pushf
btc
mov
stc
add
pusha
mov
pushl
pushf
lea
jmp
pushf
pushl
mov
movw
push
lea
jmp
mov
pusha
lea
jmp
mov
mov
pushf
pushf
push
movb
lea
jmp
call
movzbw
dec
call
mov
pushl
pushf
push
lea
jmp
call
mov
movb
pushf
popl
pusha
mov
call
xadd
inc
sete
push
mov
rcr
or
mov
test
sub
push
cmp
pushf
shr
pushf
jmp
bswap
cmc
stc
cmc
pushf
ror
bt
neg
clc
test
cmp
jmp
pushf
push
rep
or
dec
std
rcl
mov
add
mov
jmp
shr
shl
call
mov
mov
movb
pushl
lea
jmp
pushf
pushf
popl
jmp
pushf
mov
sub
pushf
stc
push
bt
add
call
mov
push
not
setbe
push
xchg
pusha
pushl
popl
bswap
xchg
movl
inc
mov
pop
call
pushf
push
rdtsc
sbb
mov
sbb
shl
neg
mov
movb
mov
jmp
mov
pushf
mov
mov
movb
lea
jmp
pushf
pushf
pushf
popl
pushf
pushf
movw
mov
pusha
pushf
push
call
pusha
pushf
jmp
pusha
call
add
cmp
xor
pushf
call
mov
pusha
jmp
pusha
movw
pusha
mov
jmp
pusha
mov
pushl
jmp
jmp
push
add
stc
cmc
add
pusha
pusha
sub
pushl
sub
call
pushf
jmp
shld
pushl
mov
pushf
mov
push
pushf
popl
push
push
pushl
popl
mov
pusha
lea
jmp
pushf
pusha
movw
pushf
popl
jmp
movb
pushf
mov
pushf
pushf
lea
jmp
pushf
push
call
cmp
mov
xor
shl
xor
cmc
add
pushf
pusha
pushl
push
mov
pushf
lea
jb
pusha
pusha
mov
mov
lea
jmp
shl
mov
cmc
cmp
clc
add
stc
push
shrd
jmp
rcl
xor
bsf
not
shr
rol
xor
call
push
pushf
pushf
popl
call
call
shl
stc
movzbl
xor
btc
shrd
xor
setg
not
dec
jmp
mov
call
movb
pushl
popl
mov
movb
movb
movb
lea
jmp
rcr
mov
sets
or
jmp
add
stc
pushf
call
pushl
popl
mov
lea
jmp
pushl
popf
mov
push
lea
jmp
inc
pusha
pushf
call
pusha
jmp
shrd
stc
rol
sar
mov
sbb
rol
setge
adc
mov
bt
jmp
pushf
call
movb
cmp
push
sub
pushl
mov
movb
pusha
lea
jmp
push
clc
cmc
add
pusha
jmp
pushl
popl
push
pushf
mov
lea
jmp
mov
movw
push
pushf
pushl
lea
jmp
push
mov
mov
lea
jmp
pusha
stc
xor
call
dec
movsbw
jmp
xor
mov
call
mov
jmp
jmp
lea
jne
lea
xorb
pusha
not
not
pusha
mov
pushf
push
movl
lea
jmp
or
shr
movzbl
shr
mov
test
jmp
pusha
lea
jge
stc
cwtl
push
test
sub
pushf
movb
mov
pusha
pushf
pushf
push
lea
jmp
pushf
mov
lea
jle
pusha
push
pushf
popl
mov
pushl
popl
pusha
push
movw
pushf
lea
jmp
add
pusha
lea
jmp
pushf
mov
pusha
push
lea
jmp
push
pushf
pusha
call
mov
push
mov
push
pushf
popl
push
mov
pushl
popl
pushf
pushf
pushf
lea
jmp
pushf
push
mov
push
movb
lea
jmp
push
mov
pusha
call
mov
mov
movb
mov
lea
jmp
push
pushl
mov
lea
jne
lea
shl
xor
mov
stc
push
and
clc
pusha
cmp
mov
lea
jne
sbb
sar
stc
xorb
jmp
pushl
push
mov
call
call
sub
stc
bt
bt
pushf
shr
movw
pushl
pushf
mov
movl
push
pushf
call
pushf
push
mov
push
push
pusha
mov
call
pusha
call
add
pushl
call
pushf
pushf
popl
call
xor
mov
push
sub
lea
jp
mov
pushf
push
movb
movb
lea
jmp
mov
pusha
pushl
mov
jmp
pushf
mov
mov
pusha
push
lea
jmp
pushf
jmp
pusha
fstps
movw
pushf
pushf
lea
jmp
pushl
pushf
popl
push
jmp
push
inc
shr
mov
jmp
jmp
pushf
popl
jmp
jmp
pushf
popl
call
mov
call
cmp
bt
push
add
pusha
bt
call
mov
jmp
bts
shr
adc
not
push
sub
shl
and
neg
neg
mov
cmc
bt
pushl
sub
push
push
pusha
pushf
mov
pushf
pushf
lea
jmp
cmc
jmp
movb
test
add
push
pushf
movb
bt
sub
pushl
lea
jbe
mov
push
lea
jmp
bt
stc
sub
pusha
pushl
cmpl
mov
jmp
mov
pushf
pushf
pushf
pushf
lea
jmp
lea
jne
bswap
sar
xorb
not
pop
pushf
lea
jmp
mov
sub
lea
je
mov
push
push
lea
jmp
mov
push
jmp
pushf
not
call
mov
bt
and
cmc
stc
cmp
call
pushl
popl
pushf
mov
pushf
lea
jmp
mov
pushf
cmc
call
call
lea
lea
shl
dec
setb
mov
shr
and
ror
add
dec
push
inc
xor
mov
shld
call
mov
push
push
push
pushl
pushf
popl
jmp
movsbw
movsbw
das
bts
mov
test
test
cmc
add
test
xchg
stc
xor
jmp
pushf
popl
call
mov
pushf
push
mov
push
push
pushf
pushf
lea
jmp
pusha
mov
mov
movb
call
jmp
mov
pushf
call
sbb
adc
jge
adc
xchg
adc
jnp
adc
jge
adc
adc
test
adc
cmp
jge
adc
lcall
sbb
adc
adc
jge
adc
adc
xchg
adc
lcall
adc
adc
js
adc
adc
xchg
adc
ja
adc
adc
xchg
adc
adc
jl
adc
xchg
adc
adc
xchg
adc
adc
xchg
adc
adc
cmp
adc
xchg
adc
jge
adc
js
adc
lcall
push
cmp
adc
adc
xchg
adc
lcall
or
adc
adc
jge
adc
xchg
adc
cmp
adc
adc
xchg
adc
adc
js
adc
xchg
adc
cmp
mov
adc
xchg
adc
jle
adc
js
adc
xchg
adc
adc
cltd
adc
adc
jns
adc
cmp
cmpsl
nop
adc
xchg
adc
adc
cwtl
adc
ja
adc
cmp
dec
jl
adc
xchg
adc
jge
adc
jns
adc
adc
adc
adc
jns
adc
adc
xchg
adc
cmp
adc
jp
adc
xchg
adc
lcall
add
adc
adc
jle
adc
jge
adc
xchg
adc
xchg
adc
jle
adc
cmp
adc
adc
adc
adc
adc
adc
js
adc
jge
adc
adc
lcall
adc
adc
test
adc
js
adc
xchg
adc
adc
adc
adc
test
adc
adc
jp
adc
cmp
adc
adc
cmp
inc
jns
adc
adc
jns
adc
ja
adc
jge
adc
jp
adc
xchg
adc
lcall
fs
adc
adc
ja
adc
adc
ja
adc
js
adc
jle
adc
jns
adc
adc
cmp
adc
cltd
adc
xchg
adc
js
adc
jle
adc
cwtl
adc
lcall
sti
xchg
adc
adc
lcall
sbb
adc
xchg
adc
xchg
adc
xchg
adc
adc
xchg
adc
xchg
adc
jle
adc
adc
xchg
adc
xchg
adc
jle
adc
adc
adc
adc
jge
adc
adc
xchg
adc
cmp
jge
adc
adc
jle
adc
jge
adc
jge
adc
lcall
jge
adc
adc
xchg
adc
test
adc
jge
adc
adc
adc
ja
adc
jge
adc
jge
adc
cwtl
adc
jge
adc
xchg
adc
adc
jge
adc
adc
cmp
adc
adc
jge
adc
jns
adc
adc
jge
adc
jge
adc
adc
jge
adc
jge
adc
adc
adc
xchg
adc
jge
adc
adc
lcall
jge
adc
adc
je
xor
inc
add
mov
pushl
lea
jmp
call
lea
pushf
mov
lea
jmp
pushf
cmp
add
pushl
clc
add
sub
jnp
cwtl
test
test
cmp
sub
push
pushf
mov
push
lea
jmp
mov
jmp
clc
not
cmp
stc
sub
jmp
mov
mov
mov
mov
mov
push
mov
pushf
pushf
pushf
pushf
lea
jmp
movb
push
mov
mov
call
mov
pushf
call
lahf
movzbl
mov
dec
dec
sbb
stc
mov
bt
clc
pushf
pushl
sub
pusha
shl
movw
lea
jnp
mov
pusha
pushf
pushf
popl
pushf
jmp
mov
push
lea
jmp
dec
stc
not
movb
jmp
mov
pushf
pushl
movw
mov
movw
mov
pushf
push
push
movb
lea
jne
sub
pusha
call
clc
rol
dec
ror
mov
clc
stc
jmp
sub
push
push
call
jmp
call
mov
lea
jns
pushf
not
movsbw
mov
push
mov
inc
jmp
add
add
cmp
call
mov
shr
mov
test
cmp
sub
bt
shr
pushf
pushf
mov
movb
pushf
popl
call
mov
mov
movw
pushl
lea
jmp
movb
mov
pushf
mov
movb
lea
jmp
call
movsbw
dec
bsr
neg
inc
bswap
sub
btc
rcr
sub
lea
pusha
sub
inc
bsr
xadd
jmp
bswap
push
call
jmp
pushf
inc
cmp
sub
pushf
call
mov
pushf
movw
movb
pushf
mov
movw
mov
pushl
pushf
lea
jmp
lea
not
pop
pushf
lea
jmp
movb
pushf
jmp
mov
movb
call
push
lea
jmp
pushf
mov
push
lea
jmp
rcl
test
shl
mov
bts
dec
xor
shld
mov
jmp
call
mov
push
mov
call
stc
bt
sub
mov
jmp
call
push
mov
jmp
pusha
lea
jo
mov
call
jmp
push
pushf
pushl
popl
mov
pushf
mov
lea
jmp
push
pushl
popl
pusha
lea
jmp
push
pusha
mov
movb
jmp
jmp
mov
pusha
push
sub
cmp
clc
cmc
bt
shl
jmp
pushf
pushf
popl
pusha
jmp
call
push
pushf
popl
jmp
mov
xadd
mov
shld
movzbw
add
add
mov
test
shl
xor
or
xor
inc
movzbl
call
push
mov
movw
lea
jmp
mov
call
call
call
mov
mov
jmp
cmc
movb
pushl
add
lea
jne
push
mov
push
pushl
ret
add
call
mov
pushf
lea
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
pushf
mov
call
cmp
and
pusha
movb
call
movsbw
jl
mov
push
bswap
bswap
cwtl
bswap
mov
jo
pusha
lea
cpuid
call
pushf
popl
pusha
pushl
mov
call
jmp
pushf
pushf
pusha
mov
mov
pusha
pushl
ret
jmp
pushf
jmp
cmp
cbtw
jmp
and
pusha
call
inc
jmp
test
cmp
cmp
sub
jmp
pushf
pusha
mov
mov
pushf
popl
mov
call
pushf
pushl
popl
pushf
pushf
lea
jmp
aad
shl
mov
call
lea
jp
mov
pushf
pushf
popl
pusha
jmp
movb
pushl
popl
mov
lea
jmp
and
aam
or
rdtsc
call
movzbw
pusha
mov
movzbw
mov
pushf
mov
movl
pushl
call
pusha
mov
pusha
call
clc
xchg
cmc
test
mov
pushf
sub
jmp
pushf
cmc
sub
jmp
mov
push
pusha
lea
jmp
sub
pushf
mov
call
clc
test
add
jmp
bt
jmp
call
jmp
pushf
pushl
popl
cmc
push
pushl
add
bt
call
rdtsc
setnp
shrd
mov
neg
bsf
test
test
mov
stc
pusha
cmp
add
pusha
jmp
bswap
pushl
pusha
xchg
pop
movl
mov
movzbw
mov
dec
inc
setge
dec
bt
adc
neg
shl
test
bswap
clc
push
stc
sub
lea
sub
pushl
sub
bswap
cmc
sub
call
stc
sub
cmc
add
pushf
push
movb
add
push
push
mov
movb
pushl
ret
stc
test
xor
pushf
push
mov
bt
test
movw
cmc
sub
push
call
mov
movw
movl
lea
jmp
movb
push
lea
cpuid
cmp
cmp
pusha
sub
cmc
cmpl
lea
jns
pushf
pushl
movl
mov
pusha
push
jmp
mov
call
call
mov
push
lea
jp
popl
pusha
pushf
pushf
lea
jmp
pushf
mov
mov
call
pusha
mov
jmp
setne
mov
pushf
movb
mov
pushf
lea
jmp
pushf
pushf
popl
pushl
push
pushl
popl
movb
mov
lea
jmp
jmp
movw
call
pusha
pushf
mov
call
pusha
inc
movzbw
pop
not
setg
xor
bts
bt
lea
movzbl
jmp
push
mov
pushl
movw
pushl
pushl
lea
jmp
dec
clc
jmp
mov
pusha
mov
movb
lea
jmp
jmp
pushf
popl
pushf
push
pushf
jmp
xor
pushl
clc
push
add
call
call
daa
cwtl
call
das
xor
mov
sbb
shrd
bswap
lea
mov
stc
bt
pushf
movb
add
jmp
mov
pushf
pushl
mov
mov
mov
pushl
mov
push
mov
push
lea
jmp
not
clc
test
bt
add
movl
cmc
jmp
add
jmp
cmc
sub
cmc
call
setb
movzbl
shld
cmp
sub
btc
pushl
pushf
lea
bswap
rol
adc
inc
sub
push
rcl
not
or
rcl
rol
sub
rcr
mov
cmc
call
mov
pushl
mov
push
pushf
push
lea
jmp
call
mov
jmp
pushf
popl
pushl
pushl
popl
mov
lea
jmp
call
pushf
movb
lea
jne
dec
movzbw
shrd
setae
mov
cmc
cmc
test
stc
and
cmp
pushf
push
pusha
cmp
jmp
call
cmp
not
call
rcl
movsbl
mov
pusha
pushl
cmc
add
call
sub
shr
mov
rcr
clc
cmp
test
mov
jmp
call
pushf
pushf
jmp
fmuls
pushf
lea
jmp
pusha
movb
push
pushf
popl
pusha
push
pushf
mov
call
pushf
popl
pusha
pusha
mov
jmp
pusha
divl
mov
mov
call
jmp
cmp
cmp
and
stc
cmp
push
push
call
jmp
jmp
pushf
pushf
popl
jmp
pushf
xchg
pushf
pushl
movl
pushf
pusha
movw
mov
pushl
push
mov
movb
pushl
ret
pusha
mov
cmc
or
pushl
pushf
pushl
lea
je
bt
cmc
cmc
xor
call
mov
call
and
jmp
mov
pushl
mov
lea
jmp
pushf
popl
jmp
pusha
pushf
pushf
popl
pusha
xchg
inc
movzbw
lea
xchg
jmp
mov
mov
lea
jmp
mov
shld
ror
sar
mov
pusha
bt
call
pusha
movb
pushl
popl
push
pushf
movb
lea
jmp
pushf
pushf
popl
pusha
mov
mov
mov
movb
push
call
pushf
popl
pushl
jmp
pushf
mov
push
movb
lea
jmp
clc
sub
mov
pushf
mov
mov
movb
pushl
push
mov
lea
jmp
call
xadd
mov
shl
rcl
shl
shl
mov
pusha
pushf
call
bswap
mov
stc
add
test
xchg
call
test
cmp
stc
sub
cmc
cmpl
push
mov
push
pushf
mov
call
pushf
mov
mov
mov
mov
lea
jmp
movb
call
mov
test
test
stc
cmp
sub
call
push
movb
pushf
mov
lea
jnp
mov
pusha
lea
jmp
pusha
pushf
popl
call
pushf
fwait
pushf
pushf
lea
jmp
pushf
push
cwtl
clc
cmp
jmp
push
add
movb
push
pushf
popl
pushf
push
call
test
add
push
lea
jp
push
pushl
inc
pushf
jmp
call
jmp
mov
jmp
call
